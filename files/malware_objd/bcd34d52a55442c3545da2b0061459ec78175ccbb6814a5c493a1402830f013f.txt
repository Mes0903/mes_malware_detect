
bcd34d52a55442c3545da2b0061459ec78175ccbb6814a5c493a1402830f013f.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xc
  401006:	mov    eax,DWORD PTR [ebp+0x8]
  401009:	mov    DWORD PTR [ebp-0x8],eax
  40100c:	mov    ecx,DWORD PTR [ebp+0xc]
  40100f:	mov    DWORD PTR [ebp-0xc],ecx
  401012:	mov    DWORD PTR [ebp-0x4],0x22b
  401019:	mov    edx,DWORD PTR [ebp-0x8]
  40101c:	cmp    edx,DWORD PTR [ebp-0xc]
  40101f:	jae    0x40102f
  401021:	mov    DWORD PTR [ebp-0x4],0x22b
  401028:	mov    eax,DWORD PTR [ebp-0x8]
  40102b:	jmp    0x401039
  40102d:	jmp    0x401039
  40102f:	mov    DWORD PTR [ebp-0x4],0x22b
  401036:	mov    eax,DWORD PTR [ebp-0xc]
  401039:	mov    esp,ebp
  40103b:	pop    ebp
  40103c:	ret    
  40103d:	int3   
  40103e:	int3   
  40103f:	int3   
  401040:	push   ebp
  401041:	mov    ebp,esp
  401043:	sub    esp,0xc
  401046:	mov    DWORD PTR [ebp-0x8],0x1e4dc
  40104d:	mov    DWORD PTR [ebp-0xc],0x3000
  401054:	mov    DWORD PTR [ebp-0x4],0x40
  40105b:	mov    eax,DWORD PTR [ebp-0x4]
  40105e:	push   eax
  40105f:	mov    ecx,DWORD PTR [ebp-0xc]
  401062:	push   ecx
  401063:	mov    edx,DWORD PTR [ebp+0x8]
  401066:	push   edx
  401067:	push   0x0
  401069:	push   0xffffffff
  40106b:	call   DWORD PTR ds:0x4202dc
  401071:	mov    esp,ebp
  401073:	pop    ebp
  401074:	ret    
  401075:	int3   
  401076:	int3   
  401077:	int3   
  401078:	int3   
  401079:	int3   
  40107a:	int3   
  40107b:	int3   
  40107c:	int3   
  40107d:	int3   
  40107e:	int3   
  40107f:	int3   
  401080:	push   ebp
  401081:	mov    ebp,esp
  401083:	pop    ebp
  401084:	ret    
  401085:	int3   
  401086:	int3   
  401087:	int3   
  401088:	int3   
  401089:	int3   
  40108a:	int3   
  40108b:	int3   
  40108c:	int3   
  40108d:	int3   
  40108e:	int3   
  40108f:	int3   
  401090:	push   ebp
  401091:	mov    ebp,esp
  401093:	push   ecx
  401094:	mov    DWORD PTR [ebp-0x4],0x4
  40109b:	mov    eax,DWORD PTR [ebp-0x4]
  40109e:	add    eax,0x401a38
  4010a3:	mov    ds:0x420b4c,eax
  4010a8:	mov    esp,ebp
  4010aa:	pop    ebp
  4010ab:	ret    
  4010ac:	int3   
  4010ad:	int3   
  4010ae:	int3   
  4010af:	int3   
  4010b0:	push   ebp
  4010b1:	mov    ebp,esp
  4010b3:	push   ecx
  4010b4:	mov    DWORD PTR [ebp-0x4],0x4
  4010bb:	mov    eax,DWORD PTR [ebp-0x4]
  4010be:	add    eax,0x41f77c
  4010c3:	mov    ds:0x420b4c,eax
  4010c8:	mov    esp,ebp
  4010ca:	pop    ebp
  4010cb:	ret    
  4010cc:	int3   
  4010cd:	int3   
  4010ce:	int3   
  4010cf:	int3   
  4010d0:	push   ebp
  4010d1:	mov    ebp,esp
  4010d3:	mov    eax,DWORD PTR [ebp+0x8]
  4010d6:	mov    eax,DWORD PTR [eax-0x4]
  4010d9:	pop    ebp
  4010da:	ret    
  4010db:	int3   
  4010dc:	int3   
  4010dd:	int3   
  4010de:	int3   
  4010df:	int3   
  4010e0:	push   ebp
  4010e1:	mov    ebp,esp
  4010e3:	mov    eax,ds:0x420b50
  4010e8:	mov    ecx,DWORD PTR ds:0x420b54
  4010ee:	movzx  eax,WORD PTR [ecx+eax*2]
  4010f2:	pop    ebp
  4010f3:	ret    
  4010f4:	int3   
  4010f5:	int3   
  4010f6:	int3   
  4010f7:	int3   
  4010f8:	int3   
  4010f9:	int3   
  4010fa:	int3   
  4010fb:	int3   
  4010fc:	int3   
  4010fd:	int3   
  4010fe:	int3   
  4010ff:	int3   
  401100:	push   ebp
  401101:	mov    ebp,esp
  401103:	mov    esp,ecx
  401105:	pop    ecx
  401106:	jmp    eax
  401108:	pop    ebp
  401109:	ret    
  40110a:	int3   
  40110b:	int3   
  40110c:	int3   
  40110d:	int3   
  40110e:	int3   
  40110f:	int3   
  401110:	push   ebp
  401111:	mov    ebp,esp
  401113:	sub    esp,0x34
  401116:	mov    DWORD PTR [ebp-0x8],0x11cb
  40111d:	mov    DWORD PTR [ebp-0x8],0xc83e
  401124:	mov    DWORD PTR [ebp-0x10],0x0
  40112b:	jmp    0x401136
  40112d:	mov    eax,DWORD PTR [ebp-0x10]
  401130:	add    eax,0x4
  401133:	mov    DWORD PTR [ebp-0x10],eax
  401136:	mov    ecx,DWORD PTR [ebp-0x10]
  401139:	cmp    ecx,DWORD PTR [ebp+0xc]
  40113c:	jae    0x401219
  401142:	mov    DWORD PTR [ebp-0x8],0xc83e
  401149:	mov    edx,DWORD PTR [ebp-0x10]
  40114c:	add    edx,0x94b
  401152:	mov    DWORD PTR [ebp-0x2c],edx
  401155:	mov    eax,DWORD PTR [ebp-0x2c]
  401158:	mov    DWORD PTR [ebp-0x28],eax
  40115b:	mov    ecx,DWORD PTR [ebp-0x28]
  40115e:	mov    DWORD PTR [ebp-0x24],ecx
  401161:	mov    DWORD PTR [ebp-0x8],0xc83e
  401168:	mov    edx,DWORD PTR [ebp-0x24]
  40116b:	mov    DWORD PTR [ebp-0x20],edx
  40116e:	mov    DWORD PTR [ebp-0x8],0xc83e
  401175:	cmp    DWORD PTR [ebp-0x10],0x0
  401179:	jne    0x4011cb
  40117b:	push   0x104
  401180:	push   0x420b58
  401185:	call   DWORD PTR ds:0x4202e0
  40118b:	push   0x420000
  401190:	push   0x420b58
  401195:	call   DWORD PTR ds:0x4202e4
  40119b:	push   0x0
  40119d:	push   0x80
  4011a2:	push   0x3
  4011a4:	push   0x0
  4011a6:	push   0x3
  4011a8:	push   0x1
  4011aa:	push   0x420b58
  4011af:	call   DWORD PTR ds:0x4202e8
  4011b5:	mov    DWORD PTR [ebp-0x4],eax
  4011b8:	cmp    DWORD PTR [ebp-0x4],0xffffffff
  4011bc:	je     0x4011c4
  4011be:	cmp    DWORD PTR [ebp-0x4],0x0
  4011c2:	jne    0x4011cb
  4011c4:	mov    eax,0x42
  4011c9:	jmp    0x401219
  4011cb:	mov    DWORD PTR [ebp-0x8],0xc83e
  4011d2:	mov    eax,DWORD PTR [ebp-0x20]
  4011d5:	mov    DWORD PTR [ebp-0x34],eax
  4011d8:	mov    DWORD PTR [ebp-0x8],0xc83e
  4011df:	mov    ecx,DWORD PTR [ebp-0x34]
  4011e2:	mov    DWORD PTR [ebp-0x18],ecx
  4011e5:	mov    edx,DWORD PTR [ebp-0x34]
  4011e8:	mov    DWORD PTR [ebp-0x14],edx
  4011eb:	mov    eax,DWORD PTR [ebp-0x10]
  4011ee:	mov    DWORD PTR [ebp-0x1c],eax
  4011f1:	mov    ecx,DWORD PTR [ebp+0x8]
  4011f4:	add    ecx,DWORD PTR [ebp-0x10]
  4011f7:	mov    DWORD PTR [ebp-0x30],ecx
  4011fa:	mov    edx,DWORD PTR [ebp-0x30]
  4011fd:	mov    eax,DWORD PTR [edx]
  4011ff:	add    eax,DWORD PTR [ebp-0x1c]
  401202:	mov    ecx,DWORD PTR [ebp-0x30]
  401205:	mov    DWORD PTR [ecx],eax
  401207:	mov    edx,DWORD PTR [ebp-0x30]
  40120a:	mov    eax,DWORD PTR [edx]
  40120c:	xor    eax,DWORD PTR [ebp-0x14]
  40120f:	mov    ecx,DWORD PTR [ebp-0x30]
  401212:	mov    DWORD PTR [ecx],eax
  401214:	jmp    0x40112d
  401219:	mov    esp,ebp
  40121b:	pop    ebp
  40121c:	ret    
  40121d:	int3   
  40121e:	int3   
  40121f:	int3   
  401220:	push   ebp
  401221:	mov    ebp,esp
  401223:	sub    esp,0x10
  401226:	cmp    DWORD PTR [ebp+0xc],0x1
  40122a:	jne    0x401234
  40122c:	mov    eax,ds:0x420c5c
  401231:	mov    DWORD PTR [ebp+0xc],eax
  401234:	mov    ecx,DWORD PTR [ebp+0x8]
  401237:	cmp    DWORD PTR [ecx+0x4],0x0
  40123b:	je     0x401284
  40123d:	mov    DWORD PTR [ebp-0x10],0x2a1
  401244:	mov    edx,DWORD PTR [ebp+0x8]
  401247:	mov    eax,DWORD PTR [edx+0x4]
  40124a:	sub    eax,0x8
  40124d:	shr    eax,1
  40124f:	mov    DWORD PTR [ebp-0xc],eax
  401252:	mov    ecx,DWORD PTR [ebp+0x8]
  401255:	add    ecx,0x8
  401258:	mov    DWORD PTR ds:0x420b54,ecx
  40125e:	mov    edx,DWORD PTR [ebp+0x8]
  401261:	push   edx
  401262:	mov    eax,DWORD PTR [ebp+0x10]
  401265:	push   eax
  401266:	mov    ecx,DWORD PTR [ebp+0xc]
  401269:	push   ecx
  40126a:	mov    edx,DWORD PTR [ebp-0xc]
  40126d:	push   edx
  40126e:	call   0x401290
  401273:	add    esp,0x10
  401276:	mov    eax,DWORD PTR [ebp+0x8]
  401279:	mov    ecx,DWORD PTR [ebp+0x8]
  40127c:	add    ecx,DWORD PTR [eax+0x4]
  40127f:	mov    DWORD PTR [ebp+0x8],ecx
  401282:	jmp    0x401234
  401284:	mov    esp,ebp
  401286:	pop    ebp
  401287:	ret    
  401288:	int3   
  401289:	int3   
  40128a:	int3   
  40128b:	int3   
  40128c:	int3   
  40128d:	int3   
  40128e:	int3   
  40128f:	int3   
  401290:	push   ebp
  401291:	mov    ebp,esp
  401293:	sub    esp,0x10
  401296:	mov    DWORD PTR ds:0x420b50,0x0
  4012a0:	jmp    0x4012af
  4012a2:	mov    eax,ds:0x420b50
  4012a7:	add    eax,0x1
  4012aa:	mov    ds:0x420b50,eax
  4012af:	mov    ecx,DWORD PTR ds:0x420b50
  4012b5:	cmp    ecx,DWORD PTR [ebp+0x8]
  4012b8:	jae    0x401334
  4012ba:	mov    edx,DWORD PTR ds:0x420b50
  4012c0:	mov    eax,ds:0x420b54
  4012c5:	movzx  ecx,WORD PTR [eax+edx*2]
  4012c9:	sar    ecx,0xc
  4012cc:	cmp    ecx,0x3
  4012cf:	jne    0x40132f
  4012d1:	mov    DWORD PTR [ebp-0x10],0xfff
  4012d8:	mov    DWORD PTR [ebp-0xc],0x3107
  4012df:	mov    DWORD PTR [ebp-0xc],0x3107
  4012e6:	mov    edx,DWORD PTR ds:0x420b50
  4012ec:	mov    eax,ds:0x420b54
  4012f1:	movzx  ecx,WORD PTR [eax+edx*2]
  4012f5:	and    ecx,DWORD PTR [ebp-0x10]
  4012f8:	add    ecx,0x2d23
  4012fe:	mov    DWORD PTR [ebp-0x8],ecx
  401301:	mov    DWORD PTR [ebp-0xc],0x3107
  401308:	mov    edx,DWORD PTR [ebp+0x14]
  40130b:	mov    eax,DWORD PTR [ebp+0xc]
  40130e:	add    eax,DWORD PTR [edx]
  401310:	mov    ecx,DWORD PTR [ebp-0x8]
  401313:	mov    edx,DWORD PTR [eax+ecx*1-0x2d23]
  40131a:	add    edx,DWORD PTR [ebp+0x10]
  40131d:	mov    eax,DWORD PTR [ebp+0x14]
  401320:	mov    ecx,DWORD PTR [ebp+0xc]
  401323:	add    ecx,DWORD PTR [eax]
  401325:	mov    eax,DWORD PTR [ebp-0x8]
  401328:	mov    DWORD PTR [ecx+eax*1-0x2d23],edx
  40132f:	jmp    0x4012a2
  401334:	mov    esp,ebp
  401336:	pop    ebp
  401337:	ret    
  401338:	int3   
  401339:	int3   
  40133a:	int3   
  40133b:	int3   
  40133c:	int3   
  40133d:	int3   
  40133e:	int3   
  40133f:	int3   
  401340:	push   ebp
  401341:	mov    ebp,esp
  401343:	sub    esp,0x22c
  401349:	mov    DWORD PTR [ebp-0x220],0x7c
  401353:	mov    DWORD PTR [ebp-0x214],0x0
  40135d:	mov    DWORD PTR [ebp-0x228],0x0
  401367:	jmp    0x401378
  401369:	mov    eax,DWORD PTR [ebp-0x228]
  40136f:	add    eax,0x1
  401372:	mov    DWORD PTR [ebp-0x228],eax
  401378:	mov    ecx,DWORD PTR [ebp-0x228]
  40137e:	cmp    ecx,DWORD PTR [ebp+0x10]
  401381:	jge    0x4013bc
  401383:	mov    edx,DWORD PTR [ebp+0xc]
  401386:	add    edx,DWORD PTR [ebp-0x228]
  40138c:	movzx  eax,BYTE PTR [edx]
  40138f:	mov    DWORD PTR [ebp-0x22c],eax
  401395:	mov    DWORD PTR [ebp-0x220],0x7c
  40139f:	mov    ecx,DWORD PTR [ebp+0x8]
  4013a2:	add    ecx,DWORD PTR [ebp-0x228]
  4013a8:	mov    dl,BYTE PTR [ebp-0x22c]
  4013ae:	mov    BYTE PTR [ecx],dl
  4013b0:	mov    DWORD PTR [ebp-0x220],0x33
  4013ba:	jmp    0x401369
  4013bc:	mov    esp,ebp
  4013be:	pop    ebp
  4013bf:	ret    
  4013c0:	push   ebp
  4013c1:	mov    ebp,esp
  4013c3:	sub    esp,0x50
  4013c6:	mov    eax,DWORD PTR [ebp+0xc]
  4013c9:	mov    DWORD PTR [ebp-0x50],eax
  4013cc:	cmp    DWORD PTR [ebp-0x50],0x200
  4013d3:	ja     0x4013fd
  4013d5:	cmp    DWORD PTR [ebp-0x50],0x200
  4013dc:	je     0x40142f
  4013de:	cmp    DWORD PTR [ebp-0x50],0x1
  4013e2:	je     0x401414
  4013e4:	cmp    DWORD PTR [ebp-0x50],0x2
  4013e8:	je     0x401536
  4013ee:	cmp    DWORD PTR [ebp-0x50],0xf
  4013f2:	je     0x401495
  4013f8:	jmp    0x40153a
  4013fd:	cmp    DWORD PTR [ebp-0x50],0x201
  401404:	je     0x40141e
  401406:	cmp    DWORD PTR [ebp-0x50],0x202
  40140d:	je     0x40148e
  40140f:	jmp    0x40153a
  401414:	mov    eax,0x1
  401419:	jmp    0x401550
  40141e:	mov    DWORD PTR ds:0x420b40,0x0
  401428:	xor    eax,eax
  40142a:	jmp    0x401550
  40142f:	mov    ecx,DWORD PTR [ebp+0x10]
  401432:	and    ecx,0x1
  401435:	je     0x401487
  401437:	cmp    DWORD PTR ds:0x420b40,0x3e8
  401441:	jge    0x401487
  401443:	mov    edx,DWORD PTR [ebp+0x14]
  401446:	and    edx,0xffff
  40144c:	movzx  eax,dx
  40144f:	mov    ecx,DWORD PTR ds:0x420b40
  401455:	mov    DWORD PTR [ecx*8+0x420b44],eax
  40145c:	mov    edx,DWORD PTR [ebp+0x14]
  40145f:	shr    edx,0x10
  401462:	and    edx,0xffff
  401468:	movzx  eax,dx
  40146b:	mov    ecx,DWORD PTR ds:0x420b40
  401471:	mov    DWORD PTR [ecx*8+0x420b48],eax
  401478:	mov    edx,DWORD PTR ds:0x420b40
  40147e:	add    edx,0x1
  401481:	mov    DWORD PTR ds:0x420b40,edx
  401487:	xor    eax,eax
  401489:	jmp    0x401550
  40148e:	xor    eax,eax
  401490:	jmp    0x401550
  401495:	lea    eax,[ebp-0x40]
  401498:	push   eax
  401499:	mov    ecx,DWORD PTR [ebp+0x8]
  40149c:	push   ecx
  40149d:	call   DWORD PTR ds:0x420320
  4014a3:	mov    DWORD PTR [ebp-0x4c],eax
  4014a6:	mov    DWORD PTR [ebp-0x44],0x0
  4014ad:	jmp    0x4014b8
  4014af:	mov    edx,DWORD PTR [ebp-0x44]
  4014b2:	add    edx,0x1
  4014b5:	mov    DWORD PTR [ebp-0x44],edx
  4014b8:	mov    eax,ds:0x420b40
  4014bd:	sub    eax,0x1
  4014c0:	cmp    DWORD PTR [ebp-0x44],eax
  4014c3:	jge    0x401508
  4014c5:	mov    ecx,DWORD PTR [ebp-0x44]
  4014c8:	add    ecx,0x1
  4014cb:	mov    DWORD PTR [ebp-0x48],ecx
  4014ce:	jmp    0x4014d9
  4014d0:	mov    edx,DWORD PTR [ebp-0x48]
  4014d3:	add    edx,0x1
  4014d6:	mov    DWORD PTR [ebp-0x48],edx
  4014d9:	mov    eax,DWORD PTR [ebp-0x48]
  4014dc:	cmp    eax,DWORD PTR ds:0x420b40
  4014e2:	jge    0x401506
  4014e4:	mov    ecx,DWORD PTR [ebp-0x48]
  4014e7:	mov    edx,DWORD PTR [ecx*8+0x420b48]
  4014ee:	push   edx
  4014ef:	mov    eax,DWORD PTR [ebp-0x48]
  4014f2:	mov    ecx,DWORD PTR [eax*8+0x420b44]
  4014f9:	push   ecx
  4014fa:	mov    edx,DWORD PTR [ebp-0x4c]
  4014fd:	push   edx
  4014fe:	call   DWORD PTR ds:0x420414
  401504:	jmp    0x4014d0
  401506:	jmp    0x4014af
  401508:	push   0x0
  40150a:	call   DWORD PTR ds:0x420324
  401510:	push   0x7f00
  401515:	push   0x0
  401517:	call   DWORD PTR ds:0x420328
  40151d:	push   eax
  40151e:	call   DWORD PTR ds:0x42032c
  401524:	lea    eax,[ebp-0x40]
  401527:	push   eax
  401528:	mov    ecx,DWORD PTR [ebp+0x8]
  40152b:	push   ecx
  40152c:	call   DWORD PTR ds:0x420330
  401532:	xor    eax,eax
  401534:	jmp    0x401550
  401536:	xor    eax,eax
  401538:	jmp    0x401550
  40153a:	mov    edx,DWORD PTR [ebp+0x14]
  40153d:	push   edx
  40153e:	mov    eax,DWORD PTR [ebp+0x10]
  401541:	push   eax
  401542:	mov    ecx,DWORD PTR [ebp+0xc]
  401545:	push   ecx
  401546:	mov    edx,DWORD PTR [ebp+0x8]
  401549:	push   edx
  40154a:	call   DWORD PTR ds:0x420334
  401550:	mov    esp,ebp
  401552:	pop    ebp
  401553:	ret    0x10
  401556:	int3   
  401557:	int3   
  401558:	int3   
  401559:	int3   
  40155a:	int3   
  40155b:	int3   
  40155c:	int3   
  40155d:	int3   
  40155e:	int3   
  40155f:	int3   
  401560:	push   ebp
  401561:	mov    ebp,esp
  401563:	sub    esp,0xc8
  401569:	push   ebx
  40156a:	push   esi
  40156b:	push   edi
  40156c:	mov    DWORD PTR ds:0x420c60,ebp
  401572:	pusha  
  401573:	mov    DWORD PTR [ebp-0x88],0x0
  40157d:	mov    DWORD PTR [ebp-0x9c],0x80000002
  401587:	mov    eax,ds:0x420478
  40158c:	mov    DWORD PTR [ebp-0xb4],eax
  401592:	mov    DWORD PTR [ebp-0xac],0x420030
  40159c:	mov    ecx,0x43
  4015a1:	mov    edx,DWORD PTR [ebp-0xac]
  4015a7:	mov    WORD PTR [edx],cx
  4015aa:	mov    eax,0x4c
  4015af:	mov    ecx,DWORD PTR [ebp-0xac]
  4015b5:	mov    WORD PTR [ecx+0x2],ax
  4015b9:	lea    edx,[ebp-0xb0]
  4015bf:	push   edx
  4015c0:	mov    eax,DWORD PTR [ebp-0xac]
  4015c6:	push   eax
  4015c7:	push   0x80000000
  4015cc:	call   DWORD PTR [ebp-0xb4]
  4015d2:	test   eax,eax
  4015d4:	je     0x4015db
  4015d6:	call   0x401560
  4015db:	call   0x401090
  4015e0:	mov    DWORD PTR [ebp-0x7c],0x64
  4015e7:	mov    DWORD PTR [ebp-0x18],0x28
  4015ee:	mov    DWORD PTR [ebp-0x88],0x0
  4015f8:	mov    DWORD PTR [ebp-0x50],0x0
  4015ff:	mov    DWORD PTR [ebp-0x78],0x1
  401606:	mov    DWORD PTR [ebp-0x10],0x0
  40160d:	mov    DWORD PTR [ebp-0x7c],0x64
  401614:	mov    DWORD PTR [ebp-0x18],0x28
  40161b:	mov    DWORD PTR [ebp-0x88],0x0
  401625:	mov    DWORD PTR [ebp-0x50],0x0
  40162c:	mov    DWORD PTR [ebp-0x78],0x1
  401633:	mov    DWORD PTR [ebp-0x14],0x3
  40163a:	mov    DWORD PTR [ebp-0x10],0x0
  401641:	mov    DWORD PTR [ebp-0x7c],0x64
  401648:	mov    DWORD PTR [ebp-0x18],0x28
  40164f:	mov    DWORD PTR [ebp-0x88],0x0
  401659:	mov    DWORD PTR [ebp-0x50],0x0
  401660:	mov    DWORD PTR [ebp-0x78],0x1
  401667:	mov    DWORD PTR [ebp-0x14],0x3
  40166e:	mov    ecx,DWORD PTR ds:0x420b4c
  401674:	push   ecx
  401675:	call   0x4010d0
  40167a:	add    esp,0x4
  40167d:	mov    DWORD PTR [ebp-0x8c],eax
  401683:	mov    edx,DWORD PTR [ebp-0x8c]
  401689:	push   edx
  40168a:	call   0x401040
  40168f:	add    esp,0x4
  401692:	mov    DWORD PTR [ebp-0x84],eax
  401698:	mov    eax,DWORD PTR [ebp-0x8c]
  40169e:	push   eax
  40169f:	push   0x0
  4016a1:	mov    ecx,DWORD PTR [ebp-0x84]
  4016a7:	push   ecx
  4016a8:	call   0x401080
  4016ad:	add    esp,0xc
  4016b0:	mov    edx,DWORD PTR [ebp-0x8c]
  4016b6:	mov    DWORD PTR [ebp-0x94],edx
  4016bc:	mov    eax,DWORD PTR [ebp-0x88]
  4016c2:	cmp    eax,DWORD PTR [ebp-0x8c]
  4016c8:	jae    0x401738
  4016ca:	mov    ecx,DWORD PTR [ebp-0x94]
  4016d0:	push   ecx
  4016d1:	mov    edx,DWORD PTR [ebp-0x7c]
  4016d4:	push   edx
  4016d5:	call   0x401000
  4016da:	add    esp,0x8
  4016dd:	mov    DWORD PTR [ebp-0x98],eax
  4016e3:	mov    eax,DWORD PTR [ebp-0x98]
  4016e9:	push   eax
  4016ea:	mov    ecx,DWORD PTR ds:0x420b4c
  4016f0:	add    ecx,DWORD PTR [ebp-0x50]
  4016f3:	push   ecx
  4016f4:	mov    edx,DWORD PTR [ebp-0x84]
  4016fa:	add    edx,DWORD PTR [ebp-0x88]
  401700:	push   edx
  401701:	call   0x401340
  401706:	add    esp,0xc
  401709:	mov    eax,DWORD PTR [ebp-0x18]
  40170c:	add    eax,DWORD PTR [ebp-0x7c]
  40170f:	add    eax,DWORD PTR [ebp-0x50]
  401712:	mov    DWORD PTR [ebp-0x50],eax
  401715:	mov    ecx,DWORD PTR [ebp-0x88]
  40171b:	add    ecx,DWORD PTR [ebp-0x7c]
  40171e:	mov    DWORD PTR [ebp-0x88],ecx
  401724:	mov    edx,DWORD PTR [ebp-0x94]
  40172a:	sub    edx,DWORD PTR [ebp-0x98]
  401730:	mov    DWORD PTR [ebp-0x94],edx
  401736:	jmp    0x4016bc
  401738:	mov    eax,DWORD PTR [ebp-0x8c]
  40173e:	push   eax
  40173f:	mov    ecx,DWORD PTR [ebp-0x84]
  401745:	push   ecx
  401746:	call   0x401110
  40174b:	add    esp,0x8
  40174e:	mov    DWORD PTR [ebp-0x50],0x0
  401755:	mov    DWORD PTR [ebp-0xb8],0x0
  40175f:	call   0x4010b0
  401764:	mov    edx,DWORD PTR ds:0x420b4c
  40176a:	push   edx
  40176b:	call   0x4010d0
  401770:	add    esp,0x4
  401773:	mov    DWORD PTR [ebp-0xbc],eax
  401779:	mov    eax,DWORD PTR [ebp-0xbc]
  40177f:	push   eax
  401780:	call   0x401040
  401785:	add    esp,0x4
  401788:	mov    DWORD PTR [ebp-0x4c],eax
  40178b:	mov    ecx,DWORD PTR [ebp-0xbc]
  401791:	push   ecx
  401792:	push   0x0
  401794:	mov    edx,DWORD PTR [ebp-0x4c]
  401797:	push   edx
  401798:	call   0x401080
  40179d:	add    esp,0xc
  4017a0:	mov    eax,DWORD PTR [ebp-0xbc]
  4017a6:	mov    DWORD PTR [ebp-0xc4],eax
  4017ac:	mov    ecx,DWORD PTR [ebp-0xb8]
  4017b2:	cmp    ecx,DWORD PTR [ebp-0xbc]
  4017b8:	jae    0x401825
  4017ba:	mov    edx,DWORD PTR [ebp-0xc4]
  4017c0:	push   edx
  4017c1:	mov    eax,DWORD PTR [ebp-0x7c]
  4017c4:	push   eax
  4017c5:	call   0x401000
  4017ca:	add    esp,0x8
  4017cd:	mov    DWORD PTR [ebp-0xc8],eax
  4017d3:	mov    ecx,DWORD PTR [ebp-0xc8]
  4017d9:	push   ecx
  4017da:	mov    edx,DWORD PTR ds:0x420b4c
  4017e0:	add    edx,DWORD PTR [ebp-0x50]
  4017e3:	push   edx
  4017e4:	mov    eax,DWORD PTR [ebp-0x4c]
  4017e7:	add    eax,DWORD PTR [ebp-0xb8]
  4017ed:	push   eax
  4017ee:	call   0x401340
  4017f3:	add    esp,0xc
  4017f6:	mov    ecx,DWORD PTR [ebp-0x18]
  4017f9:	add    ecx,DWORD PTR [ebp-0x7c]
  4017fc:	add    ecx,DWORD PTR [ebp-0x50]
  4017ff:	mov    DWORD PTR [ebp-0x50],ecx
  401802:	mov    edx,DWORD PTR [ebp-0xb8]
  401808:	add    edx,DWORD PTR [ebp-0x7c]
  40180b:	mov    DWORD PTR [ebp-0xb8],edx
  401811:	mov    eax,DWORD PTR [ebp-0xc4]
  401817:	sub    eax,DWORD PTR [ebp-0xc8]
  40181d:	mov    DWORD PTR [ebp-0xc4],eax
  401823:	jmp    0x4017ac
  401825:	mov    ecx,DWORD PTR [ebp-0xbc]
  40182b:	push   ecx
  40182c:	mov    edx,DWORD PTR [ebp-0x4c]
  40182f:	push   edx
  401830:	call   0x401110
  401835:	add    esp,0x8
  401838:	mov    eax,DWORD PTR [ebp-0x84]
  40183e:	mov    ecx,DWORD PTR [ebp-0x4c]
  401841:	mov    DWORD PTR [eax],ecx
  401843:	push   0x17000
  401848:	call   0x401040
  40184d:	add    esp,0x4
  401850:	mov    ds:0x420c5c,eax
  401855:	push   0x15500
  40185a:	mov    edx,DWORD PTR [ebp-0x84]
  401860:	push   edx
  401861:	mov    eax,ds:0x420c5c
  401866:	add    eax,0x200
  40186b:	push   eax
  40186c:	call   0x401340
  401871:	add    esp,0xc
  401874:	mov    ecx,DWORD PTR ds:0x420c5c
  40187a:	sub    ecx,0x400000
  401880:	push   ecx
  401881:	push   0x1
  401883:	mov    edx,DWORD PTR [ebp-0x4c]
  401886:	push   edx
  401887:	call   0x401220
  40188c:	add    esp,0xc
  40188f:	popa   
  401890:	mov    eax,ds:0x420c60
  401895:	mov    ecx,eax
  401897:	xor    eax,eax
  401899:	je     0x40189c
  40189b:	ret    
  40189c:	mov    eax,ds:0x420c5c
  4018a1:	add    eax,0x15350
  4018a6:	xor    edx,edx
  4018a8:	je     0x401100
  4018ae:	pop    edi
  4018af:	pop    esi
  4018b0:	pop    ebx
  4018b1:	mov    esp,ebp
  4018b3:	pop    ebp
  4018b4:	ret    
  4018b5:	int3   
  4018b6:	int3   
  4018b7:	int3   
  4018b8:	cmp    BYTE PTR [ebx],al
  4018ba:	inc    edx
  4018bb:	add    BYTE PTR [ebx+eax*1],bh
  4018be:	inc    edx
  4018bf:	add    BYTE PTR [eax+0x3],al
  4018c2:	inc    edx
  4018c3:	add    BYTE PTR [ebx+eax*1+0x42],al
  4018c7:	add    BYTE PTR [eax+0x3],cl
  4018ca:	inc    edx
  4018cb:	add    BYTE PTR [ebx+eax*1+0x42],cl
  4018cf:	add    BYTE PTR [eax+0x3],dl
  4018d2:	inc    edx
  4018d3:	add    BYTE PTR [ebx+eax*1+0x42],dl
  4018d7:	add    BYTE PTR [eax+0x3],bl
  4018da:	inc    edx
  4018db:	add    BYTE PTR [ebx+eax*1+0x42],bl
  4018df:	add    BYTE PTR [eax+0x3],ah
  4018e2:	inc    edx
  4018e3:	add    BYTE PTR [ebx+eax*1+0x42],ah
  4018e7:	add    BYTE PTR [eax+0x3],ch
  4018ea:	inc    edx
  4018eb:	add    BYTE PTR [ebx+eax*1+0x42],ch
  4018ef:	add    BYTE PTR [eax+0x3],dh
  4018f2:	inc    edx
  4018f3:	add    BYTE PTR [ebx+eax*1+0x42],dh
  4018f7:	add    BYTE PTR [eax+0x3],bh
  4018fa:	inc    edx
  4018fb:	add    BYTE PTR [ebx+eax*1+0x42],bh
  4018ff:	add    BYTE PTR [eax-0x7bffbdfd],al
  401905:	add    eax,DWORD PTR [edx+0x0]
  401908:	mov    BYTE PTR [ebx],al
  40190a:	inc    edx
  40190b:	add    BYTE PTR [ebx+eax*1],ah
  40190e:	inc    edx
  40190f:	add    BYTE PTR [ebx+eax*1+0x3900042],cl
  401916:	inc    edx
  401917:	add    BYTE PTR [ebx+eax*1+0x3980042],dl
  40191e:	inc    edx
  40191f:	add    BYTE PTR [ebx+eax*1+0x3a00042],bl
  401926:	inc    edx
  401927:	add    BYTE PTR [ebx+eax*1+0x3a80042],ah
  40192e:	inc    edx
  40192f:	add    BYTE PTR [ebx+eax*1+0x3b00042],ch
  401936:	inc    edx
  401937:	add    BYTE PTR [ebx+eax*1+0x3b80042],dh
  40193e:	inc    edx
  40193f:	add    BYTE PTR [ebx+eax*1+0x3c00042],bh
  401946:	inc    edx
  401947:	add    ah,al
  401949:	add    eax,DWORD PTR [edx+0x0]
  40194c:	and    BYTE PTR [ebx],al
  40194e:	inc    edx
  40194f:	add    al,cl
  401951:	add    eax,DWORD PTR [edx+0x0]
  401954:	int3   
  401955:	add    eax,DWORD PTR [edx+0x0]
  401958:	rol    BYTE PTR [ebx],1
  40195a:	inc    edx
  40195b:	add    ah,dl
  40195d:	add    eax,DWORD PTR [edx+0x0]
  401960:	fadd   DWORD PTR [ebx]
  401962:	inc    edx
  401963:	add    ah,bl
  401965:	add    eax,DWORD PTR [edx+0x0]
  401968:	loopne 0x40196d
  40196a:	inc    edx
  40196b:	add    ah,ah
  40196d:	add    eax,DWORD PTR [edx+0x0]
  401970:	call   0xec405b78
  401975:	add    eax,DWORD PTR [edx+0x0]
  401978:	lock add eax,DWORD PTR [edx+0x0]
  40197c:	hlt    
  40197d:	add    eax,DWORD PTR [edx+0x0]
  401980:	clc    
  401981:	add    eax,DWORD PTR [edx+0x0]
  401984:	cld    
  401985:	add    eax,DWORD PTR [edx+0x0]
  401988:	add    BYTE PTR [edx+eax*2],al
  40198b:	add    BYTE PTR [esp+eax*1],al
  40198e:	inc    edx
  40198f:	add    BYTE PTR [eax],dh
  401991:	add    eax,DWORD PTR [edx+0x0]
  401994:	or     BYTE PTR [edx+eax*2],al
  401997:	add    BYTE PTR [esp+eax*1],cl
  40199a:	inc    edx
  40199b:	add    BYTE PTR [eax],bl
  40199d:	add    al,0x42
  40199f:	add    BYTE PTR [esp+eax*1],bl
  4019a2:	inc    edx
  4019a3:	add    BYTE PTR [eax],ah
  4019a5:	add    al,0x42
  4019a7:	add    BYTE PTR [esp+eax*1],ah
  4019aa:	inc    edx
  4019ab:	add    BYTE PTR [eax],ch
  4019ad:	add    al,0x42
  4019af:	add    BYTE PTR [esp+eax*1],ch
  4019b2:	inc    edx
  4019b3:	add    BYTE PTR [eax],dh
  4019b5:	add    al,0x42
  4019b7:	add    BYTE PTR [esp+eax*1],dh
  4019ba:	inc    edx
  4019bb:	add    BYTE PTR [eax],bh
  4019bd:	add    al,0x42
  4019bf:	add    BYTE PTR [esp+eax*1],bh
  4019c2:	inc    edx
  4019c3:	add    BYTE PTR [eax+0x4],al
  4019c6:	inc    edx
  4019c7:	add    BYTE PTR [esp+eax*1+0x42],al
  4019cb:	add    BYTE PTR [eax+0x4],cl
  4019ce:	inc    edx
  4019cf:	add    BYTE PTR [esp+eax*1+0x42],cl
  4019d3:	add    BYTE PTR [eax+0x4],dl
  4019d6:	inc    edx
  4019d7:	add    BYTE PTR [esp+eax*1+0x42],dl
  4019db:	add    BYTE PTR [eax+0x4],bl
  4019de:	inc    edx
  4019df:	add    BYTE PTR [esp+eax*1+0x42],bl
  4019e3:	add    BYTE PTR [esp+eax*1],dl
  4019e6:	inc    edx
  4019e7:	add    BYTE PTR [eax+0x4],ah
  4019ea:	inc    edx
  4019eb:	add    BYTE PTR [esp+eax*1+0x42],ah
  4019ef:	add    BYTE PTR [esp+eax*1+0x46c0042],cl
  4019f6:	inc    edx
  4019f7:	add    BYTE PTR [eax+0x4],dh
  4019fa:	inc    edx
  4019fb:	add    BYTE PTR [esp+eax*1+0x42],bh
  4019ff:	add    BYTE PTR [eax-0x7bffbdfc],al
  401a05:	add    al,0x42
  401a07:	add    ah,ch
  401a09:	add    al,BYTE PTR [edx+0x0]
  401a0c:	lock add al,BYTE PTR [edx+0x0]
  401a10:	hlt    
  401a11:	add    al,BYTE PTR [edx+0x0]
  401a14:	clc    
  401a15:	add    al,BYTE PTR [edx+0x0]
  401a18:	cld    
  401a19:	add    al,BYTE PTR [edx+0x0]
  401a1c:	add    BYTE PTR [ebx],al
  401a1e:	inc    edx
  401a1f:	add    BYTE PTR [ebx+eax*1],al
  401a22:	inc    edx
  401a23:	add    BYTE PTR [eax],cl
  401a25:	add    eax,DWORD PTR [edx+0x0]
  401a28:	or     al,0x3
  401a2a:	inc    edx
  401a2b:	add    BYTE PTR [eax],dl
  401a2d:	add    eax,DWORD PTR [edx+0x0]
  401a30:	adc    al,0x3
  401a32:	inc    edx
  401a33:	add    BYTE PTR [eax],bl
  401a35:	add    eax,DWORD PTR [edx+0x0]
  401a38:	add    BYTE PTR [ebp+0x1],dl
  401a3b:	add    BYTE PTR [ebx+0x5e],cl
  401a3e:	inc    ecx
  401a3f:	add    BYTE PTR [esp+ebp*2],al
  401a42:	je     0x401a94
  401a44:	sbb    DWORD PTR [esi+0x63],esp
  401a47:	inc    ecx
  401a48:	daa    
  401a49:	ins    DWORD PTR es:[edi],dx
  401a4a:	jb     0x401ab1
  401a4c:	sbb    BYTE PTR [edx+0x0],bh
  401a4f:	add    bh,bh
  401a51:	gs popa 
  401a53:	fs pop ss
  401a55:	pusha  
  401a56:	bound  esi,QWORD PTR [edx-0x16]
  401a59:	jp     0x401ad4
  401a5b:	inc    ebp
  401a5c:	repz inc edi
  401a5e:	add    BYTE PTR [eax],al
  401a60:	jmp    DWORD PTR [ebp+0x61]
  401a63:	fs pop ss
  401a65:	pusha  
  401a66:	bound  esi,QWORD PTR [edx-0x16]
  401a69:	jp     0x401ae4
  401a6b:	inc    ebp
  401a6c:	rcr    DWORD PTR [ebp+0x0],cl
  401a6f:	add    BYTE PTR [esp+ebp*2],al
  401a72:	je     0x401ac1
  401a74:	mov    ah,0x6d
  401a76:	jne    0x401ae4
  401a78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a79:	inc    ecx
  401a7a:	popa   
  401a7b:	outs   dx,BYTE PTR ds:[esi]
  401a7c:	scas   eax,DWORD PTR es:[edi]
  401a7d:	gs gs inc ecx
  401a80:	dec    ebx
  401a81:	or     DWORD PTR [eax],eax
  401a83:	add    BYTE PTR [eax-0x689e9a85],cl
  401a89:	ins    BYTE PTR es:[edi],dx
  401a8a:	inc    esi
  401a8b:	imul   esp,DWORD PTR [edi-0x60ffbe94],0x6872747a
  401a95:	push   0x94b4174
  401a9a:	add    BYTE PTR [eax],al
  401a9c:	mov    WORD PTR [esp+esi*2+0x57],gs
	...
  401ac8:	bound  esp,QWORD PTR [edi+0x64]
  401acb:	outs   dx,DWORD PTR ds:[esi]
  401acc:	pop    esp
  401acd:	jp     0x401b13
  401acf:	imul   ebx,DWORD PTR [ecx+0x6c],0x7b647463
  401ad6:	jns    0x401b19
  401ad8:	dec    ebx
  401ad9:	or     DWORD PTR [eax],eax
  401adb:	add    BYTE PTR [esp+ebp*2],cl
  401ade:	je     0x401b2d
  401ae0:	sub    al,0x6d
  401ae2:	jne    0x401b50
  401ae4:	cs inc ecx
  401ae6:	popa   
  401ae7:	outs   dx,BYTE PTR ds:[esi]
  401ae8:	daa    
  401ae9:	gs gs push edi
  401aec:	dec    ebx
  401aed:	or     DWORD PTR [eax],eax
  401aef:	add    BYTE PTR [edi+0xb],al
  401af2:	inc    eax
  401af3:	add    BYTE PTR [edi],bh
  401af5:	or     eax,DWORD PTR [eax+0x0]
  401af8:	or     eax,DWORD PTR [bx+si+0x0]
  401afc:	aas    
  401afd:	or     eax,DWORD PTR [eax+0x0]
  401b00:	adc    ecx,DWORD PTR [ebx]
  401b02:	inc    eax
  401b03:	add    BYTE PTR [edi],bl
  401b05:	or     eax,DWORD PTR [eax+0x0]
  401b08:	jmp    0x401b14
  401b0a:	inc    eax
  401b0b:	add    bl,ah
  401b0d:	or     al,BYTE PTR [eax+0x0]
  401b10:	add    al,0x6c
  401b12:	je     0x401b64
  401b14:	fldenv [ebp+0x63]
  401b17:	inc    ecx
  401b18:	out    0x6c,eax
  401b1a:	jb     0x401b81
  401b1c:	mov    eax,0x8f000078
  401b21:	fs popa 
  401b23:	xchg   DWORD PTR fs:[edx+0x62],esp
  401b27:	jb     0x401ad3
  401b29:	ja     0x401ba4
  401b2b:	inc    ebp
	...
  401b54:	mov    ds:0xb000004a,eax
  401b59:	outs   dx,BYTE PTR ds:[esi]
  401b5a:	jb     0x401bca
  401b5c:	scas   al,BYTE PTR es:[edi]
  401b5d:	xor    esi,DWORD PTR gs:[edx]
  401b60:	pop    ebp
  401b61:	ins    DWORD PTR es:[edi],dx
  401b62:	ins    BYTE PTR es:[edi],dx
  401b63:	ins    BYTE PTR es:[edi],dx
  401b64:	dec    ebx
  401b65:	or     DWORD PTR [eax],eax
  401b67:	add    BYTE PTR [esi+0x78],ch
  401b6a:	jbe    0x401bcf
  401b6c:	jns    0x401beb
  401b6e:	cs fs pop edi
  401b71:	add    BYTE PTR gs:[eax],al
  401b74:	jbe    0x401be4
  401b76:	ins    DWORD PTR es:[edi],dx
  401b77:	jae    0x401bdf
  401b79:	jge    0x401b7b
  401b7b:	add    BYTE PTR [esi+0x78],ah
  401b7e:	jbe    0x401be3
  401b80:	pop    ecx
  401b81:	jge    0x401bb1
  401b83:	fs aaa 
  401b85:	add    BYTE PTR gs:[eax],al
  401b88:	outs   dx,BYTE PTR cs:[esi]
  401b8a:	ins    DWORD PTR es:[edi],dx
  401b8b:	arpl   WORD PTR [ebx],di
  401b8d:	jb     0x401b8f
  401b8f:	add    BYTE PTR ds:0x1e747262,dl
  401b95:	push   0x6c
  401b97:	inc    ecx
  401b98:	das    
  401b99:	outs   dx,DWORD PTR gs:[esi]
  401b9b:	arpl   WORD PTR [ebx+0x9],cx
  401b9e:	add    BYTE PTR [eax],al
  401ba0:	cmc    
  401ba1:	popa   
  401ba2:	jb     0x401c18
  401ba4:	(bad)  
  401ba5:	imul   ebp,DWORD PTR [ecx+eax*2-0x11],0x4b636f64
  401bad:	or     DWORD PTR [eax],eax
  401baf:	add    BYTE PTR [esi],dl
  401bb1:	arpl   WORD PTR [ebp+0x61],bp
  401bb4:	fistp  DWORD PTR [edx+0x69]
  401bb7:	add    BYTE PTR gs:[eax],al
	...
  401bde:	add    BYTE PTR [eax],al
  401be0:	aam    0x43
  401be2:	inc    si
  401be4:	loop   0x401c4a
  401be6:	gs add ch,dh
  401be9:	popa   
  401bea:	jb     0x401c60
  401bec:	mov    esi,0xb9506c6a
  401bf1:	fs je  0x401c59
  401bf4:	test   al,0x7d
  401bf6:	add    BYTE PTR [eax],al
  401bf8:	sub    DWORD PTR [esi+0x61],0x70
  401bfc:	mov    ah,BYTE PTR [ebp+0x6c]
  401bff:	outs   dx,DWORD PTR ds:[esi]
  401c00:	test   al,0x9
  401c02:	add    BYTE PTR [eax],al
  401c04:	mov    al,ds:0xa66e726e
  401c09:	xor    esi,DWORD PTR gs:[edx]
  401c0c:	xor    eax,0x4b6c6c6d
  401c11:	or     DWORD PTR [eax],eax
  401c13:	add    BYTE PTR [esi+ebp*2+0x64795074],cl
  401c1a:	arpl   WORD PTR [ebp+0x58],sp
  401c1d:	js     0x401c67
  401c1f:	gs push 0x79
  401c22:	add    BYTE PTR [eax],al
  401c24:	dec    ebx
  401c25:	or     DWORD PTR [ecx+eax*1+0x4b],eax
  401c29:	lods   eax,DWORD PTR ds:[esi]
  401c2a:	pop    ecx
  401c2b:	nop
  401c2c:	dec    ebx
  401c2d:	fild   WORD PTR [ebx]
  401c2f:	add    BYTE PTR [ebx-0x1a],cl
  401c32:	add    eax,DWORD PTR [eax]
  401c34:	dec    ebx
  401c35:	repz sti 
  401c37:	add    BYTE PTR [ebx+0x3a],cl
  401c3a:	add    eax,DWORD PTR [eax]
  401c3c:	dec    ebx
  401c3d:	loop   0x401c42
  401c3f:	add    BYTE PTR [ebx+0x22],cl
  401c42:	add    al,0x0
	...
  401c6c:	dec    ebx
  401c6d:	loop   0x401c72
  401c6f:	add    BYTE PTR [ebx-0x1e],cl
  401c72:	add    eax,DWORD PTR [eax]
  401c74:	dec    ebx
  401c75:	loop   0x401c7a
  401c77:	add    BYTE PTR [ebx-0x1e],cl
  401c7a:	add    eax,DWORD PTR [eax]
  401c7c:	dec    ebx
  401c7d:	loop   0x401c82
  401c7f:	add    BYTE PTR [ebx-0x1e],cl
  401c82:	add    eax,DWORD PTR [eax]
  401c84:	dec    ebx
  401c85:	loop   0x401c8a
  401c87:	add    BYTE PTR [ebx-0x1e],cl
  401c8a:	add    eax,DWORD PTR [eax]
  401c8c:	dec    ebx
  401c8d:	bound  eax,QWORD PTR [eax+eax*1]
  401c90:	dec    ebx
  401c91:	in     al,dx
  401c92:	sbb    bh,BYTE PTR [edx+0x9afe055]
  401c98:	push   cs
  401c99:	ret    0x1bb
  401c9c:	xchg   DWORD PTR [ebp+0x9a35425],esp
  401ca2:	ja     0x401cc4
  401ca4:	fwait
  401ca5:	out    dx,al
  401ca6:	push   0x67
  401ca8:	cdq    
  401ca9:	shr    DWORD PTR [eax+0x20],0xa8
  401cad:	shr    DWORD PTR [ecx+0x6e],0x9c
  401cb1:	aam    0x23
  401cb3:	bound  ebp,QWORD PTR [esi+0x0]
  401cb6:	jbe    0x401d2d
  401cb8:	ins    DWORD PTR es:[edi],dx
  401cb9:	add    BYTE PTR [ebp+0x6e],ch
  401cbc:	sub    ebp,DWORD PTR [edx+ecx*2+0x6acd2b53]
  401cc3:	outs   dx,BYTE PTR fs:[esi]
  401cc5:	repnz or BYTE PTR ds:0x3cd0951,cl
  401ccc:	dec    ebx
  401ccd:	or     ecx,ebp
  401ccf:	add    eax,DWORD PTR [eax]
	...
  401cf5:	add    BYTE PTR [eax],al
  401cf7:	add    BYTE PTR [ebx+0x9],cl
  401cfa:	mov    ecx,0x9d094b40
  401cff:	add    al,0x48
  401d01:	or     DWORD PTR [edi],esp
  401d03:	pop    ds
  401d04:	out    dx,al
  401d05:	inc    edx
  401d06:	jmp    0xe949680e
  401d0b:	add    ecx,DWORD PTR [ebx+0x9]
  401d0e:	or     DWORD PTR [esp+ecx*2],eax
  401d11:	or     dl,dh
  401d13:	add    al,0x49
  401d15:	aaa    
  401d16:	jmp    0xe9496914
  401d1b:	dec    ebp
  401d1c:	dec    ebx
  401d1d:	or     ecx,ebp
  401d1f:	add    ecx,DWORD PTR [ebx+0x9]
  401d22:	push   ebp
  401d23:	in     eax,dx
  401d24:	dec    ebx
  401d25:	or     ecx,ebp
  401d27:	adc    ecx,DWORD PTR [ebx+0x9]
  401d2a:	jmp    0xe9496742
  401d2f:	add    ecx,DWORD PTR [ebx]
  401d31:	or     ecx,ebp
  401d33:	adc    ecx,DWORD PTR [ebx+0x9]
  401d36:	jmp    0xed496840
  401d3b:	add    ecx,DWORD PTR [ebx+0x9]
  401d3e:	jmp    0xed496846
  401d43:	add    ecx,DWORD PTR [ebx+0x9]
  401d46:	jmp    0xe949684e
  401d4b:	jae    0x401d97
  401d4d:	or     ecx,ebp
  401d4f:	add    eax,0x2297094b
  401d54:	dec    ecx
  401d55:	or     ebx,ebp
  401d57:	add    ecx,DWORD PTR [ebx+0x9]
  401d5a:	jmp    0x401d62
	...
  401d83:	add    BYTE PTR [ebx+0x9],bl
  401d86:	jmp    0xe949689e
  401d8b:	add    ebx,DWORD PTR [ebx+0x9]
  401d8e:	jmp    0x4968a6
  401d93:	jmp    0xd94026e0
  401d98:	dec    eax
  401d99:	or     DWORD PTR [eax],eax
  401d9b:	jmp    0xe94026e8
  401da0:	dec    eax
  401da1:	or     DWORD PTR [eax],eax
  401da3:	in     eax,0x19
  401da5:	or     BYTE PTR [eax],al
  401da7:	and    DWORD PTR [eax+0x9],ecx
  401daa:	add    cl,ch
  401dac:	dec    eax
  401dad:	or     DWORD PTR [eax],eax
  401daf:	jmp    0xe94026fc
  401db4:	dec    eax
  401db5:	or     DWORD PTR [eax],eax
  401db7:	jmp    0xe9402704
  401dbc:	dec    eax
  401dbd:	or     DWORD PTR [eax],eax
  401dbf:	jmp    0xe940270c
  401dc4:	dec    eax
  401dc5:	or     DWORD PTR [eax],eax
  401dc7:	jmp    0xe9402714
  401dcc:	dec    eax
  401dcd:	or     DWORD PTR [eax],eax
  401dcf:	jmp    0xe940271c
  401dd4:	dec    eax
  401dd5:	or     DWORD PTR [eax],eax
  401dd7:	jmp    0xe9402724
  401ddc:	dec    eax
  401ddd:	or     DWORD PTR [eax],eax
  401ddf:	jmp    0xe940272c
  401de4:	dec    eax
  401de5:	or     DWORD PTR [eax],eax
  401de7:	jmp    0x401dec
	...
  401e10:	dec    eax
  401e11:	or     DWORD PTR [eax],eax
  401e13:	jmp    0xe9402760
  401e18:	dec    eax
  401e19:	or     DWORD PTR [eax],eax
  401e1b:	jmp    0xe9402768
  401e20:	dec    eax
  401e21:	or     DWORD PTR [eax],eax
  401e23:	leave  
  401e24:	jno    0x401e30
  401e26:	add    BYTE PTR [ebp+0x48],ch
  401e29:	or     DWORD PTR [eax],eax
  401e2b:	jmp    0xe9402778
  401e30:	dec    eax
  401e31:	or     DWORD PTR [eax],eax
  401e33:	add    dl,ah
  401e35:	or     al,0x0
  401e37:	add    dl,ah
  401e39:	or     al,0x0
  401e3b:	add    dl,dh
  401e3d:	or     al,0x0
  401e3f:	add    dl,dh
  401e41:	or     al,0x0
  401e43:	add    ah,bh
  401e45:	pusha  
  401e46:	gs js  0x401dff
  401e49:	or     al,0x0
  401e4b:	add    BYTE PTR [ecx],ch
  401e4d:	clc    
  401e4e:	add    BYTE PTR [eax],al
  401e50:	mov    dl,0x1c
  401e52:	add    BYTE PTR [eax],al
  401e54:	mov    ds:0xa20000f2,al
  401e59:	push   es
  401e5a:	add    BYTE PTR [eax],al
  401e5c:	mov    dl,0xc
  401e5e:	add    BYTE PTR [eax],al
  401e60:	mov    dl,0xc
  401e62:	add    BYTE PTR [eax],al
  401e64:	mov    ds:0x4200000c,al
  401e69:	add    eax,0x774c6000
  401e6e:	fs popa 
  401e70:	push   ss
  401e71:	ins    BYTE PTR es:[edi],dx
	...
  401e9a:	add    BYTE PTR [eax],al
  401e9c:	bound  ecx,QWORD PTR [ebx]
  401e9e:	add    BYTE PTR [eax],al
  401ea0:	bound  ebx,QWORD PTR [ecx+eax*1]
  401ea3:	add    BYTE PTR [edx+0x6],dh
  401ea6:	add    BYTE PTR [eax],al
  401ea8:	jb     0x401eb6
  401eaa:	add    DWORD PTR [eax],eax
  401eac:	bound  ecx,QWORD PTR [eax+eax*1]
  401eaf:	add    BYTE PTR [edx+0xc],ah
  401eb2:	add    BYTE PTR [eax],al
  401eb4:	xor    cl,BYTE PTR [eax+eax*1]
  401eb7:	add    BYTE PTR [edx+0x5],dh
  401eba:	add    BYTE PTR [eax+0x1c],al
  401ebd:	push   eax
  401ebe:	popa   
  401ebf:	je     0x401f04
  401ec1:	add    eax,0x4a8a0000
  401ec6:	add    BYTE PTR [eax],al
  401ec8:	xor    ch,BYTE PTR [ecx+eax*1]
  401ecb:	add    BYTE PTR [edx],ah
  401ecd:	inc    esi
  401ece:	add    BYTE PTR [eax],al
  401ed0:	and    al,BYTE PTR [esi]
  401ed2:	add    DWORD PTR [eax],eax
  401ed4:	dec    ebx
  401ed5:	loop   0x401eda
  401ed7:	add    BYTE PTR [ebx-0x1e],cl
  401eda:	add    eax,DWORD PTR [eax]
  401edc:	dec    ebx
  401edd:	loop   0x401ee2
  401edf:	add    BYTE PTR [ebx-0x5e],cl
  401ee2:	add    eax,DWORD PTR [eax]
  401ee4:	or     esp,edx
  401ee6:	add    eax,DWORD PTR [eax]
  401ee8:	dec    ebx
  401ee9:	loop   0x401eee
  401eeb:	add    BYTE PTR [ebx-0x1e],cl
  401eee:	add    eax,DWORD PTR [eax]
  401ef0:	dec    ebx
  401ef1:	loop   0x401ef6
  401ef3:	add    BYTE PTR [ebx-0x53],cl
  401ef6:	mov    esp,gs
  401ef8:	xor    ecx,ebp
  401efa:	adc    eax,DWORD PTR [eax+0x4b]
  401efd:	or     dh,BYTE PTR [ebp+0x1]
	...
  401f28:	mov    dh,ch
  401f2a:	div    DWORD PTR [ebp+0x53]
  401f2d:	mov    WORD PTR [edx],es
  401f2f:	push   0x4b
  401f31:	or     bh,BYTE PTR [edx+ebx*8-0x3d331db5]
  401f38:	inc    edi
  401f39:	loop   0x401f8b
  401f3b:	mov    esi,DWORD PTR [edi+0x49]
  401f3e:	sub    dl,BYTE PTR [eax]
  401f40:	or     esp,edx
  401f42:	sti    
  401f43:	jb     0x401f8f
  401f45:	mov    ds:0xf9ee83f7,eax
  401f4a:	add    esi,DWORD PTR [eax+edx*2+0x6b]
  401f4e:	push   ecx
  401f4f:	or     al,dl
  401f51:	shl    esi,cl
  401f53:	jne    0x401f98
  401f55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f56:	push   edx
  401f57:	or     BYTE PTR [edx-0x61ffff5d],al
  401f5d:	imul   ebp,eax,0xffffff83
  401f60:	pop    es
  401f61:	cdq    
  401f62:	ins    BYTE PTR es:[edi],dx
  401f63:	dec    edi
  401f64:	pop    ebx
  401f65:	and    BYTE PTR [eax+edi*8],al
  401f68:	mov    ecx,0x24ffc2e1
  401f6d:	out    dx,al
  401f6e:	pop    es
  401f6f:	pop    DWORD PTR [esi+0x1745bf78]
  401f75:	or     ch,cl
  401f77:	add    ecx,DWORD PTR [ebx+0x9]
  401f7a:	jb     0x401fcd
  401f7c:	push   ebx
  401f7d:	cmp    bl,0x69
  401f80:	dec    ebx
  401f81:	out    dx,al
  401f82:	aam    0x13
  401f84:	hlt    
  401f85:	je     0x401fcc
  401f87:	div    DWORD PTR [esi-0xf]
  401f8a:	ds jno 0x401f8d
	...
  401fb1:	add    BYTE PTR [eax],al
  401fb3:	add    BYTE PTR [ebx-0x12],dl
  401fb6:	fwait
  401fb7:	movhlps xmm1,xmm4
  401fba:	fld    QWORD PTR [ebx]
  401fbc:	jle    0x401f40
  401fbe:	adc    eax,0x91f20783
  401fc3:	jge    0x402020
  401fc5:	dec    ecx
  401fc6:	jmp    0x2a4859c6
  401fcb:	test   DWORD PTR [esp+eax*2+0x94b0401],0xed0ebee9
  401fd6:	jmp    0x62496ade
  401fdb:	push   ecx
  401fdc:	inc    ebx
  401fdd:	cmp    bl,0x88
  401fe0:	push   es
  401fe1:	icebp  
  401fe2:	cmp    DWORD PTR [edx+0x49],ebp
  401fe5:	out    dx,al
  401fe6:	pop    esp
  401fe7:	clc    
  401fe8:	jl     0x40205e
  401fea:	shl    esi,1
  401fec:	inc    BYTE PTR [eax]
  401fee:	(bad)  
  401fef:	push   ecx
  401ff0:	push   edi
  401ff1:	and    BYTE PTR [esp+edi*8],0x92
  401ff5:	retf   
  401ff6:	in     eax,dx
  401ff7:	add    esi,esi
  401ff9:	cmp    DWORD PTR [ebp+0x11f18f82],0xe9493bc2
  402003:	sti    
  402004:	mov    ecx,0x4f6aa08
  402009:	inc    esp
  40200a:	xchg   ecx,eax
  40200b:	add    ecx,DWORD PTR [ebx+0x9]
  40200e:	jmp    0xea2da6d1
  402013:	add    ecx,DWORD PTR [ebx+0x9]
  402016:	add    BYTE PTR [edx+0x0],ah
	...
  40203d:	add    BYTE PTR [eax],al
  40203f:	add    BYTE PTR [ebx+0x1],bh
  402042:	mov    ebx,ebx
  402044:	ret    
  402045:	inc    ebx
  402046:	clc    
  402047:	mov    ecx,0xd4ff08a2
  40204c:	cld    
  40204d:	in     eax,dx
  40204e:	jne    0x4020a1
  402050:	cmc    
  402051:	jae    0x40205b
  402053:	dec    esi
  402054:	call   0x87e1:0x40bcff15
  40205b:	ds fucomp st(5)
  40205e:	push   eax
  40205f:	bound  edi,QWORD PTR [ebx+0x1]
  402062:	mov    ebx,ebx
  402064:	bound  ecx,QWORD PTR [ecx]
  402066:	push   0xffffffe9
  402068:	aad    0x73
  40206a:	cld    
  40206b:	push   ds
  40206c:	cmp    esi,ecx
  40206e:	call   FWORD PTR [eax+edx*2+0x10f552ee]
  402075:	adc    BYTE PTR [ebp+0x1],0x49
  402079:	push   esp
  40207a:	or     al,0xc2
  40207c:	js     0x4020f4
  40207e:	push   es
  40207f:	ret    0xbf88
  402082:	ret    0x48e1
  402085:	mov    cl,0x1
  402087:	jmp    0xac0929d4
  40208c:	push   edi
  40208d:	or     DWORD PTR [ebp+0x62],edx
  402090:	jae    0x40201b
  402092:	(bad)  
  402093:	int    0xe7
  402095:	sbb    eax,0xf1472911
  40209a:	jb     0x402084
  40209c:	mov    ebp,ebp
  40209e:	(bad)  
  40209f:	cmp    al,0x37
  4020a1:	out    dx,al
  4020a2:	jne    0x402085
	...
  4020cc:	pusha  
  4020cd:	jo     0x4020ce
  4020cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4020d0:	push   esi
  4020d1:	add    eax,eax
  4020d3:	adc    al,0x4b
  4020d5:	ret    0xe5c2
  4020d8:	dec    eax
  4020d9:	adc    BYTE PTR [ebp-0x1f],0xc3
  4020dd:	pop    ss
  4020de:	lea    eax,[eax]
  4020e0:	pop    edi
  4020e1:	icebp  
  4020e2:	push   eax
  4020e3:	call   FWORD PTR [edi]
  4020e5:	sbb    edi,edi
  4020e7:	jne    0x40210f
  4020e9:	div    BYTE PTR [ebp+0x8]
  4020ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4020ed:	push   edi
  4020ee:	or     al,0x85
  4020f0:	bound  ebp,QWORD PTR [ebp+0x13]
  4020f3:	mov    ebp,DWORD PTR [edi+0x2453bf4]
  4020f9:	pop    esp
  4020fa:	pop    es
  4020fb:	mov    eax,0x8e3
  402100:	cdq    
  402101:	jmp    0x40212d
  402103:	sar    BYTE PTR [ecx+0x7],0x2b
  402107:	shr    BYTE PTR [ebx],0xc7
  40210a:	or     al,0x0
  40210c:	mov    edi,0x1e83ec81
  402111:	icebp  
  402112:	push   esi
  402113:	push   0x40182f
  402118:	pop    edx
  402119:	ja     0x40211c
  40211b:	ret    
  40211c:	inc    ebp
  40211d:	mov    bh,BYTE PTR [ebp+0xc]
  402120:	mov    ds:0x2783065c,al
  402125:	add    BYTE PTR [eax],al
  402127:	jne    0x4020d6
  402129:	and    eax,eax
  40212b:	pop    esi
  40212c:	imul   eax,edi,0xc
	...
  402157:	add    BYTE PTR [ecx],ah
  402159:	jae    0x40216b
  40215b:	add    BYTE PTR [edi],bl
  40215d:	push   DWORD PTR [edi+0x87201]
  402163:	pop    esi
  402164:	stos   DWORD PTR es:[edi],eax
  402165:	retf   0xc
  402168:	stc    
  402169:	pop    edx
  40216a:	or     al,0xc7
  40216c:	das    
  40216d:	icebp  
  40216e:	add    BYTE PTR [eax],al
  402170:	jb     0x40217a
  402172:	mov    edx,DWORD PTR [ebp+0x6a]
  402175:	adc    DWORD PTR [edx],0x50f11f8d
  40217b:	call   FWORD PTR [edi+0x15]
  40217e:	push   esi
  40217f:	dec    DWORD PTR [ebx+0xd]
  402182:	or     al,0xff
  402184:	cdq    
  402185:	bnd jle 0x402148
  402188:	mov    dl,0xdb
  40218a:	sub    al,al
  40218c:	test   DWORD PTR [ecx+0x5f4b0cc1],edi
  402192:	jbe    0x402190
  402194:	dec    ebx
  402195:	cmc    
  402196:	cld    
  402197:	sub    cl,BYTE PTR [ebx]
  402199:	(bad)  
  40219a:	retf   0x57c2
  40219d:	loop   0x402127
  40219f:	inc    ebp
  4021a0:	(bad)  
  4021a1:	fdivrp st(3),st
  4021a3:	sub    DWORD PTR [esi-0x4c3b910e],ecx
  4021a9:	loopne 0x4021ae
  4021ab:	add    BYTE PTR [ebx-0x74],cl
  4021ae:	retf   0x4fc2
  4021b1:	loop   0x402201
  4021b3:	mov    esp,edi
  4021b5:	pusha  
  4021b6:	mov    edi,0xf422dcf8
  4021bb:	push   0x0
	...
  4021e4:	dec    edi
  4021e5:	lock inc ebx
  4021e7:	add    bl,al
  4021e9:	pop    DWORD PTR [edx]
  4021eb:	ret    
  4021ec:	mov    ah,0x87
  4021ee:	add    ebp,DWORD PTR [edx+0x4b]
  4021f1:	cwde   
  4021f2:	add    BYTE PTR [edx+0x4b],ch
  4021f5:	cwde   
  4021f6:	add    BYTE PTR [eax+0x4b],ch
  4021f9:	loop   0x4021fe
  4021fb:	adc    BYTE PTR [esp+esi*2-0x553517f5],0x4
  402203:	add    dl,dl
  402205:	and    al,0xf0
  402207:	inc    eax
  402208:	neg    ch
  40220a:	mov    esp,0x5de243c2
  40220f:	add    BYTE PTR [esi-0xcaf13e4],bh
  402215:	loope  0x40222a
  402217:	add    BYTE PTR [ebx+0x65],cl
  40221a:	mov    eax,edi
  40221c:	fs call 0xf01c:0x84c50f3
  402224:	xor    esp,DWORD PTR [edi-0x4a]
  402227:	add    al,0x4b
  402229:	(bad)  
  40222a:	test   al,0x79
  40222c:	inc    ebp
  40222d:	jmp    0x49e:0x4d23f014
  402234:	dec    ebx
  402235:	push   ds
  402236:	test   eax,0xe90209bd
  40223b:	repnz sahf 
  40223d:	icebp  
  40223e:	pop    esp
  40223f:	mov    DWORD PTR [ebx],edx
  402241:	(bad)  [esi-0xd]
  402244:	fwait
  402245:	jmp    0x0:0xffd4
	...
  402270:	in     al,0x18
  402272:	push   esi
  402273:	repz hlt 
  402275:	xchg   ah,cl
  402277:	jmp    0x4022c4
  402279:	je     0x402200
  40227b:	repz pop esi
  40227d:	in     eax,dx
  40227e:	push   ecx
  40227f:	cmp    esi,esp
  402281:	or     ecx,ebp
  402283:	stos   DWORD PTR es:[edi],eax
  402284:	dec    edx
  402285:	or     ecx,ebp
  402287:	add    eax,DWORD PTR [edx]
  402289:	enter  0x3f1,0x1e
  40228d:	jle    0x40229c
  40228f:	pop    esp
  402290:	les    edx,FWORD PTR [edi]
  402292:	test   eax,0xe877b303
  402297:	(bad)  
  402298:	lods   al,BYTE PTR ds:[esi]
  402299:	pop    edi
  40229a:	jmp    0x4022f9
  40229c:	dec    ebx
  40229d:	jmp    0xf2f4:0x9da4fb74
  4022a4:	xchg   esp,eax
  4022a5:	shr    BYTE PTR [ebx],0x8
  4022a8:	dec    ebx
  4022a9:	push   esp
  4022aa:	jb     0x40228b
  4022ac:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022ae:	sti    
  4022af:	inc    ebx
  4022b0:	dec    ebx
  4022b1:	icebp  
  4022b2:	pop    ebx
  4022b3:	add    eax,0x443ea88
  4022b8:	loope  0x4022c2
  4022ba:	(bad)  
  4022bb:	js     0x402310
  4022bd:	loope  0x40232d
  4022bf:	lock pop esp
  4022c1:	jmp    0x1400:0x58ea000
  4022c8:	int3   
  4022c9:	fadd   QWORD PTR [ebx-0x3b9ecf53]
  4022cf:	sti    
  4022d0:	mov    BYTE PTR [ecx],cl
  4022d2:	clc    
  4022d3:	sbb    eax,DWORD PTR [eax]
	...
  4022f9:	add    BYTE PTR [eax],al
  4022fb:	add    BYTE PTR [esi-0x3a],cl
  4022fe:	dec    DWORD PTR [esi+0x2c8efdb3]
  402304:	aaa    
  402305:	ret    0x7d45
  402308:	dec    eax
  402309:	or     DWORD PTR [eax],eax
  40230b:	jmp    0xf53f2c86
  402310:	or     al,0xeb
  402312:	jne    0x402305
  402314:	and    BYTE PTR [eax-0x3],ch
  402317:	pop    esi
  402318:	stc    
  402319:	jge    0x402370
  40231b:	loope  0x402392
  40231d:	pop    ss
  40231e:	call   esp
  402320:	fsub   st(1),st
  402322:	jne    0x402365
  402324:	fnstenv [ebx+0x8]
  402327:	ds jbe 0x40233b
  40232a:	leave  
  40232b:	sub    edx,eax
  40232d:	jmp    0x612c8586
  402332:	add    dl,bh
  402334:	or     BYTE PTR [ecx],cl
  402336:	clc    
  402337:	fwait
  402338:	inc    edi
  402339:	(bad)  
  40233a:	inc    DWORD PTR [ebx-0x1e8a15b8]
  402340:	nop
  402341:	sahf   
  402342:	inc    DWORD PTR [esi]
  402344:	cdq    
  402345:	mov    edi,0x5448e5c2
  40234a:	mov    eax,DWORD PTR ds:0x6a145415
  402350:	pop    esi
  402351:	or     DWORD PTR [ebp-0x13],esi
  402354:	rol    esi,0x10
  402357:	jmp    0xd65096d7
  40235c:	cld    
  40235d:	cld    
  40235e:	(bad)  
  40235f:	push   esp
	...
  402388:	outs   dx,DWORD PTR ds:[esi]
  402389:	loope  0x40237f
  40238b:	add    BYTE PTR [edi+0x378bfff7],cl
  402391:	adc    DWORD PTR [ecx],esp
  402393:	add    ch,BYTE PTR [ebx+0x370010c2]
  402399:	ins    BYTE PTR es:[edi],dx
  40239a:	in     al,dx
  40239b:	xor    esi,0xffffffd9
  40239e:	push   DWORD PTR [ebp+0x2e]
  4023a1:	inc    edi
  4023a2:	add    al,0x8d
  4023a4:	fst    DWORD PTR [bx+si-0x1]
  4023a8:	push   edi
  4023a9:	in     eax,0xe7
  4023ab:	ret    
  4023ac:	int    0xda
  4023ae:	dec    DWORD PTR [ebx+0x38830967]
  4023b4:	and    ah,BYTE PTR [ecx+0x7]
  4023b7:	mov    esp,DWORD PTR [edi-0x27]
  4023ba:	bswap  eax
  4023bc:	cdq    
  4023bd:	(bad)  
  4023bf:	sar    BYTE PTR [ebx],0xcf
  4023c2:	or     BYTE PTR [eax],al
  4023c4:	mov    bh,0x65
  4023c6:	in     al,dx
  4023c7:	and    DWORD PTR [esi],0xffffffd9
  4023ca:	push   DWORD PTR [ebp-0x22]
  4023cd:	inc    esi
  4023ce:	add    cl,BYTE PTR [ebp-0xaf2559]
  4023d4:	xchg   edi,eax
  4023d5:	in     al,0xe7
  4023d7:	xchg   edi,eax
  4023d8:	sbb    eax,0xf78bffda
  4023dd:	call   0x60f25c64
  4023e2:	or     BYTE PTR [edi],cl
  4023e4:	adc    eax,0x6686fe50
  4023e9:	mov    BYTE PTR [edx],0x2b
	...
  402414:	jb     0x4023ba
  402416:	ret    0xb208
  402419:	aas    
  40241a:	mov    ebp,esp
  40241c:	and    ecx,edx
  40241e:	cld    
  40241f:	call   DWORD PTR [edi]
  402421:	call   0x4f3f258f
  402426:	call   DWORD PTR [eax-0x63]
  402429:	pop    edi
  40242a:	or     al,ch
  40242c:	dec    ebx
  40242d:	dec    esp
  40242e:	icebp  
  40242f:	jmp    FWORD PTR [ebx+ebp*2+0x46]
  402433:	or     al,0xc8
  402435:	or     al,BYTE PTR [esp+esi*2]
  402438:	inc    ebp
  402439:	idiv   DWORD PTR [ecx+0x5cb5445]
  40243f:	sub    ecx,DWORD PTR [ebx+0x4b08c5a9]
  402445:	and    eax,0x1cd0ec7d
  40244a:	adc    al,0x83
  40244c:	jno    0x402440
  40244e:	jbe    0x402454
  402450:	add    dh,BYTE PTR [edi+edi*8-0x1ada01]
  402457:	(bad)  
  402458:	xchg   esi,eax
  402459:	fcmovu st,st(3)
  40245b:	loopne 0x402474
  40245d:	pop    edi
  40245e:	lock or ecx,DWORD PTR [ebx]
  402461:	(bad)  
  402463:	mov    bl,BYTE PTR [esi+0x4b02c8e2]
  402469:	repnz add eax,DWORD PTR [eax]
  40246c:	loopne 0x40245a
  40246e:	pop    ebp
  40246f:	add    esp,ebp
  402471:	mov    esp,0xda5efeff
  402476:	fist   DWORD PTR [ecx+0x0]
	...
  40249d:	add    BYTE PTR [eax],al
  40249f:	add    bh,bl
  4024a1:	es lock leave 
  4024a4:	or     esi,ebp
  4024a6:	add    edx,DWORD PTR [ebp-0x40]
  4024a9:	and    eax,0xa7c7c484
  4024ae:	jl     0x402525
  4024b0:	dec    edi
  4024b1:	jl     0x4024b6
  4024b3:	lea    ecx,[esi]
  4024b5:	(bad)  
  4024b6:	push   edx
  4024b7:	push   DWORD PTR [esi]
  4024b9:	loop   0x402514
  4024bb:	call   FWORD PTR [esi]
  4024bd:	fcmovu st,st(3)
  4024bf:	mov    al,ds:0xb03f176
  4024c4:	mov    esp,DWORD PTR [ebp+0x9]
  4024c7:	or     DWORD PTR [esi],0xfffffff6
  4024ca:	add    dh,BYTE PTR [ebp+0x4c]
  4024cd:	or     DWORD PTR [edx],edx
  4024cf:	les    ebx,FWORD PTR ds:0x4b00abd2
  4024d5:	xchg   esp,eax
  4024d6:	sub    al,0xf0
  4024d8:	dec    eax
  4024d9:	fld    DWORD PTR [eax]
  4024db:	dec    ecx
  4024dc:	cmp    ebx,DWORD PTR [esi-0x66]
  4024df:	lods   al,BYTE PTR ds:[esi]
  4024e0:	dec    edx
  4024e1:	or     ecx,ebp
  4024e3:	add    esi,ebp
  4024e5:	shr    DWORD PTR [ebx+0x623e4b00],1
  4024eb:	loopne 0x4024b7
  4024ed:	int    0x21
  4024ef:	out    dx,eax
  4024f0:	cmp    al,0xe7
  4024f2:	cmp    bl,BYTE PTR [ebx]
  4024f4:	adc    BYTE PTR [ecx+ebp*8+0x59],dh
  4024f8:	dec    ebx
  4024f9:	jae    0x4024e6
  4024fb:	pop    ecx
  4024fc:	dec    ebx
  4024fd:	jae    0x4024e9
  4024ff:	pop    ebx
  402500:	dec    ebx
  402501:	or     ecx,ebp
  402503:	ret    
	...
  40252c:	adc    al,0x5d
  40252e:	in     eax,0xdb
  402530:	test   DWORD PTR [ecx+ebp*8+0x654cd203],edi
  402537:	inc    esp
  402538:	ja     0x402574
  40253a:	pop    esi
  40253b:	jns    0x402580
  40253d:	icebp  
  40253e:	sbb    ch,dh
  402540:	in     al,dx
  402541:	out    0x26,al
  402543:	dec    ecx
  402544:	jecxz  0x40254f
  402546:	jmp    0x94d2704e
  40254b:	sti    
  40254c:	sar    ebx,0x63
  40254f:	dec    ecx
  402550:	sar    DWORD PTR [ecx],cl
  402552:	rol    DWORD PTR [ebx-0x7f16f6b5],0xc6
  402559:	popa   
  40255a:	push   ds
  40255b:	out    dx,eax
  40255c:	mov    ah,0x39
  40255e:	push   ss
  40255f:	jns    0x4025a4
  402561:	out    0xbb,al
  402563:	dec    ecx
  402565:	add    DWORD PTR fs:[esi+edx*1],eax
  402569:	or     ch,BYTE PTR [edx+0xe633da]
  40256f:	jl     0x402511
  402571:	xchg   esp,eax
  402572:	test   DWORD PTR [ecx+0x75],esi
  402575:	out    0xff,al
  402577:	cmp    DWORD PTR [esp+ebx*2-0x4],ebp
  40257b:	rcr    DWORD PTR [edi],1
  40257d:	out    0xff,al
  40257f:	(bad)  
  402580:	jno    0x402528
  402582:	je     0x40256f
  402584:	and    DWORD PTR [edi+edi*8-0x60ea4c4],0x8b094895
  40258f:	stos   BYTE PTR es:[edi],al
	...
  4025b8:	add    eax,edx
  4025ba:	ret    0x48e1
  4025bd:	cmp    al,0x8b
  4025bf:	xchg   ebp,eax
  4025c0:	leave  
  4025c1:	int3   
  4025c2:	clc    
  4025c3:	sahf   
  4025c4:	mov    bl,0x15
  4025c6:	call   0x264726
  4025cb:	pusha  
  4025cc:	xchg   ebx,eax
  4025cd:	loope  0x402596
  4025cf:	sub    al,0x1b
  4025d1:	or     DWORD PTR [eax],eax
  4025d3:	jmp    0xe5b60c20
  4025d8:	lock (bad) 
  4025da:	std    
  4025db:	outs   dx,BYTE PTR ds:[esi]
  4025dc:	cmc    
  4025dd:	xchg   ecx,eax
  4025de:	push   ebp
  4025df:	cmc    
  4025e0:	cmp    ebx,0x992e969
  4025e6:	(bad)  
  4025e7:	(bad)  
  4025e9:	in     eax,0x75
  4025eb:	push   ecx
  4025ec:	cmc    
  4025ed:	pop    ebx
  4025ee:	or     BYTE PTR [esi+0x63],al
  4025f1:	adc    eax,0xd0449bff
  4025f6:	ret    0x48e1
  4025f9:	cmp    al,0x8b
  4025fb:	cmp    eax,0x2ef8ccc9
  402600:	adc    esp,ecx
  402602:	add    cl,ch
  402604:	dec    eax
  402605:	or     edi,eax
  402607:	lods   al,BYTE PTR ds:[esi]
  402608:	pushf  
  402609:	or     BYTE PTR [eax],al
  40260b:	jmp    0x95b858
  402610:	call   0x50f1:0xef8d1262
  402617:	push   0xffffffa3
  402619:	div    BYTE PTR [ebp-0x4]
	...
  402644:	jne    0x4026a3
  402646:	clc    
  402647:	call   FWORD PTR [edi]
  402649:	in     eax,0xfe
  40264b:	push   edx
  40264c:	jle    0x4026ae
  40264e:	inc    ebp
  40264f:	clc    
  402650:	stos   DWORD PTR es:[edi],eax
  402651:	retf   0x4
  402654:	pop    ds
  402655:	pusha  
  402656:	in     al,dx
  402657:	push   0x73
  402659:	inc    bp
  40265b:	or     al,0x32
  40265d:	hlt    
  40265e:	jne    0x402668
  402660:	mov    dh,BYTE PTR [ebx]
  402662:	cld    
  402663:	push   ebp
  402665:	mov    al,ds:0x3c3208c2
  40266a:	mov    ebp,esp
  40266c:	pop    eax
  40266d:	adc    DWORD PTR [ebp-0xc6d9bb],ecx
  402673:	jne    0x40269f
  402675:	shr    DWORD PTR [edx],0xfc
  402678:	(bad)
  40267b:	ret    0x91a
  40267e:	push   ebp
  40267f:	mov    eax,esi
  402681:	mov    bh,BYTE PTR [ebp+0xc]
  402684:	repnz pop esp
  402686:	adc    al,0x83
  402688:	out    0xf8,eax
  40268a:	push   DWORD PTR [ebx-0x1c]
  40268d:	cmc    
  40268e:	jne    0x4026a0
  402690:	xchg   ebp,eax
  402691:	pop    esp
  402692:	or     al,0xff
  402694:	jmp    eax
  402696:	out    0x9,eax
  402698:	xchg   dh,dh
  40269a:	dec    ecx
  40269c:	and    BYTE PTR [ecx],cl
  40269e:	add    BYTE PTR [ebp+0x69],dl
  4026a1:	jmp    0xf5e29ca5
  4026a6:	jne    0x4026b0
	...
  4026d0:	pop    edx
  4026d1:	cdq    
  4026d2:	(bad)  
  4026d3:	call   DWORD PTR [ebp-0x76]
  4026d6:	jge    0x4026e8
  4026d8:	dec    ebx
  4026d9:	bnd ja 0x4026f0
  4026dc:	enter  0xff95,0xff
  4026e0:	sbb    ah,bl
  4026e2:	in     al,dx
  4026e3:	jne    0x402720
  4026e5:	jecxz  0x40275d
  4026e7:	or     al,0x8c
  4026e9:	gs sti 
  4026eb:	out    0xbc,eax
  4026ed:	repz in al,dx
  4026ef:	call   DWORD PTR [edx+0x1fffffb0]
  4026f5:	push   edi
  4026f6:	fild   WORD PTR [ebx+0x7403edee]
  4026fc:	push   ecx
  4026fd:	shl    DWORD PTR [esi+0xc],cl
  402700:	jae    0x4026dc
  402702:	xlat   BYTE PTR ds:[ebx]
  402703:	add    BYTE PTR [ebx-0x49],cl
  402706:	add    DWORD PTR [ebx],ebp
  402708:	mov    eax,DWORD PTR [edx]
  40270a:	in     eax,dx
  40270b:	jne    0x402764
  40270d:	mov    bl,0x76
  40270f:	or     BYTE PTR [ebx],dh
  402711:	aas    
  402712:	in     al,dx
  402713:	push   DWORD PTR [ecx+ebx*4]
  402716:	ror    DWORD PTR [eax],0x4b
  402719:	and    eax,0x14c8ec79
  40271e:	adc    al,0xff
  402720:	xchg   esi,eax
  402721:	fucomp st(4)
  402723:	jne    0x40276c
  402725:	arpl   WORD PTR [esi+0x8],si
  402728:	and    esi,DWORD PTR [ebx-0x78fb0014]
  40272e:	std    
  40272f:	(bad)  
  402730:	jbe    0x402714
  402732:	in     al,dx
  402733:	jne    0x402735
	...
  402759:	add    BYTE PTR [eax],al
  40275b:	add    BYTE PTR [edi+0x43],al
  40275e:	jbe    0x402768
  402760:	jecxz  0x4027c8
  402762:	in     al,dx
  402763:	jmp    esp
  402765:	sub    cl,al
  402767:	or     al,0x4b
  402769:	test   DWORD PTR [eax-0x14],edi
  40276c:	aam    0x9c
  40276e:	sti    
  40276f:	out    0xcc,eax
  402771:	sbb    ebp,esp
  402773:	call   FWORD PTR [ebx]
  402775:	enter  0x67fb,0x18
  402779:	or     ecx,edx
  40277b:	inc    edx
  40277c:	dec    ebx
  40277d:	in     al,0x94
  40277f:	sti    
  402780:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402781:	dec    edi
  402782:	push   ss
  402783:	in     al,dx
  402784:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402785:	outs   dx,BYTE PTR ds:[esi]
  402786:	jmp    0x11513e77
  40278b:	pop    ds
  40278c:	xchg   esp,eax
  40278d:	jecxz  0x40278d
  40278f:	pop    eax
  402790:	dec    ecx
  402791:	xchg   esi,eax
  402792:	lods   al,BYTE PTR ds:[esi]
  402793:	call   DWORD PTR [esp+eiz*8]
  402796:	je     0x402793
  402798:	fs pop ss
  40279a:	out    0xeb,al
  40279c:	je     0x40280c
  40279e:	jmp    0x402818
  4027a0:	push   es
  4027a1:	stc    
  4027a2:	cmp    bl,ch
  4027a4:	ficom  WORD PTR [eax]
  4027a6:	shl    DWORD PTR [ecx],0x5c
  4027a9:	jecxz  0x402771
  4027ab:	dec    esp
  4027ac:	add    dh,0xed
  4027af:	add    esi,esi
  4027b1:	pop    ebp
  4027b3:	xchg   DWORD PTR [edi],ecx
  4027b5:	out    0xae,al
  4027b7:	jno    0x40280c
  4027b9:	icebp  
  4027ba:	jecxz  0x4027a9
  4027bc:	xor    al,0xe3
  4027be:	rol    BYTE PTR [eax+0x0],cl
	...
  4027e5:	add    BYTE PTR [eax],al
  4027e7:	add    BYTE PTR [edi],bh
  4027e9:	nop
  4027ea:	sub    al,0xe8
  4027ec:	enter  0xdd4c,0xfb
  4027f0:	mov    dl,0x9
  4027f2:	xchg   BYTE PTR [ecx+0x47],dh
  4027f5:	loop   0x4027eb
  4027f7:	sti    
  4027f8:	and    al,0xf6
  4027fa:	jo     0x4027e7
  4027fc:	add    al,0xe3
  4027fe:	hlt    
  4027ff:	out    0xfc,eax
  402801:	pop    esp
  402802:	icebp  
  402803:	fist   DWORD PTR [eax]
  402805:	in     al,0x5e
  402807:	jmp    0x4027f5
  402809:	pop    esp
  40280a:	loope  0x4027e7
  40280c:	aas    
  40280d:	in     eax,0x4e
  40280f:	jmp    0x4027e1
  402811:	dec    esp
  402812:	inc    ebp
  402813:	mov    ebp,0x50e91209
  402818:	shl    ch,0x0
  40281b:	push   0xffffff8b
  40281d:	ffree  st(7)
  40281f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402820:	lods   al,BYTE PTR ds:[esi]
  402821:	or     DWORD PTR [eax],eax
  402823:	jmp    0x1d85bc70
  402828:	pop    ss
  402829:	loop   0x4028a0
  40282b:	loope  0x4027ad
  40282d:	cmp    eax,0x8c48e9d4
  402832:	rol    BYTE PTR [ecx-0xe8a1dcd],0x70
  402839:	in     eax,dx
  40283a:	stc    
  40283b:	div    BYTE PTR [ecx-0x70]
  40283e:	inc    ebp
  40283f:	icebp  
  402840:	jno    0x40289e
  402842:	cld    
  402843:	rol    DWORD PTR [ebx-0x4a],1
  402846:	add    cl,ch
  402848:	ins    DWORD PTR es:[edi],dx
  402849:	mov    ds:0xff74,al
	...
  402872:	add    BYTE PTR [eax],al
  402874:	jno    0x4028d2
  402876:	clc    
  402877:	cmp    ebp,edi
  402879:	or     al,ch
  40287b:	cmp    BYTE PTR [edx+0x9],cl
  40287e:	add    BYTE PTR [eax+0xb],dh
  402881:	(bad)  
  402883:	cmp    al,0x33
  402885:	icebp  
  402886:	or     DWORD PTR [edx+0x1cff0948],ebx
  40288c:	aaa    
  40288d:	jmp    0x2c8b:0xe221a2bb
  402894:	sbb    edx,DWORD PTR [edx]
  402896:	enter  0xf896,0x38
  40289a:	(bad)  
  40289b:	cld    
  40289c:	adc    dl,ch
  40289e:	push   0x7f
  4028a0:	and    edx,esp
  4028a2:	leave  
  4028a3:	stos   DWORD PTR es:[edi],eax
  4028a4:	add    al,0xe2
  4028a6:	push   esp
  4028a7:	bound  edx,QWORD PTR [esi+eax*4]
  4028aa:	les    ebx,FWORD PTR [ecx+0x9]
  4028ad:	dec    esp
  4028ae:	hlt    
  4028af:	jmp    0x644031fc
  4028b4:	mov    esp,ebp
  4028b6:	push   eax
  4028b7:	dec    esi
  4028b8:	pop    ebx
  4028b9:	adc    eax,ebp
  4028bb:	add    BYTE PTR [ebx+edi*4+0x0],bh
  4028bf:	add    BYTE PTR [edi-0x3a],ah
  4028c2:	js     0x402911
  4028c4:	jge    0x40291f
  4028c6:	or     al,ch
  4028c8:	in     al,dx
  4028c9:	hlt    
  4028ca:	(bad)  
  4028cb:	(bad)  
  4028cc:	cmp    ecx,DWORD PTR [ecx-0x8]
  4028cf:	or     edi,0xffffffed
  4028d2:	add    al,0x72
  4028d4:	mov    cs,WORD PTR [edx+0xf86d]
	...
  4028fe:	add    BYTE PTR [eax],al
  402900:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402901:	out    dx,al
  402902:	jne    0x402900
  402904:	cmp    al,BYTE PTR [ecx-0x1d5dff2e]
  40290a:	mov    edi,0x75eec074
  40290f:	clc    
  402910:	loop   0x402955
  402912:	add    al,ch
  402914:	arpl   dx,sp
  402916:	(bad)  
  402917:	call   FWORD PTR [ebp-0x63]
  40291a:	not    eax
  40291c:	jmp    0x40293f
  40291e:	hlt    
  40291f:	push   edi
  402921:	lock call 0x4cd9bc
  402927:	jmp    0x40299d
  402929:	lock jne 0x402934
  40292c:	or     ah,BYTE PTR [ecx]
  40292e:	sti    
  40292f:	(bad)  
  402930:	in     eax,dx
  402931:	(bad)  
  402932:	mov    edi,0x9e0c9
  402937:	jmp    0x40295d
  402939:	(bad)  
  40293a:	mov    edi,0x9f0c9
  40293f:	push   0x30
  402941:	aas    
  402942:	cld    
  402943:	call   DWORD PTR [edi]
  402945:	in     eax,0xe7
  402947:	lock retf 0xfff2
  40294b:	(bad)  
  40294c:	aaa    
  40294d:	aad    0x1
  40294f:	add    dl,dh
  402951:	or     al,0x8d
  402953:	inc    ebp
  402954:	xchg   edx,eax
  402955:	xor    eax,0xc4fa75ff
  40295a:	sar    bl,cl
  40295c:	dec    ebx
  40295d:	aaa    
  40295e:	jmp    0x48287e6
  402963:	je     0x402965
	...
  402989:	add    BYTE PTR [eax],al
  40298b:	add    BYTE PTR [ecx],bh
  40298d:	xlat   BYTE PTR ds:[ebx]
  40298e:	mov    ebx,0x6f16863b
  402993:	pop    es
  402994:	add    esi,edx
  402996:	add    eax,DWORD PTR [eax]
  402998:	dec    ebx
  402999:	dec    ebx
  40299a:	add    ch,BYTE PTR [ebx]
  40299c:	mov    edi,ebx
  40299e:	add    eax,0xc6198b2b
  4029a3:	add    al,0x4b
  4029a5:	popf   
  4029a6:	jl     0x402994
  4029a8:	enter  0xec26,0x8d
  4029ac:	push   cs
  4029ad:	push   es
  4029ae:	push   esp
  4029af:	call   DWORD PTR [esi]
  4029b1:	fcmovu st,st(3)
  4029b3:	dec    eax
  4029b4:	cwde   
  4029b5:	repnz add eax,DWORD PTR [ebp-0xe3a575]
  4029bc:	(bad)  
  4029bd:	(bad)  
  4029bf:	fdiv   DWORD PTR [ebx-0x41]
  4029c2:	call   0xe8fa3850
  4029c7:	jne    0x402a28
  4029c9:	retf   0xd212
  4029cc:	dec    ebx
  4029cd:	repnz cld 
  4029cf:	mov    edi,0x75e8b5d7
  4029d4:	push   edi
  4029d5:	xchg   edi,eax
  4029d6:	outs   dx,BYTE PTR ds:[esi]
  4029d7:	clc    
  4029d8:	fwait
  4029d9:	retf   0xb17
  4029dc:	dec    ebx
  4029dd:	bnd call 0xe8ba5958
  4029e3:	ror    DWORD PTR [ebx-0xe],1
  4029e6:	call   0xb2ca7d60
  4029eb:	cli    
  4029ec:	adc    al,0x87
  4029ee:	mov    edx,0xc2
	...
  402a17:	add    BYTE PTR [ebx-0xe],al
  402a1a:	dec    esi
  402a1b:	mov    esi,edi
  402a1d:	jb     0x4029de
  402a1f:	call   0x8e0cf5bc
  402a24:	mov    cs,WORD PTR [ecx]
  402a26:	gs push ebx
  402a28:	in     al,dx
  402a29:	push   ebp
  402a2a:	icebp  
  402a2b:	fninit 
  402a2d:	mov    edx,0xc8c603e9
  402a32:	fidivr WORD PTR [ebx-0x64]
  402a35:	or     cl,ch
  402a37:	add    ecx,esp
  402a39:	push   ebp
  402a3a:	icebp  
  402a3b:	fcmovne st,st(7)
  402a3d:	loopne 0x402a75
  402a3f:	call   0xe8757016
  402a44:	fst    QWORD PTR ds:[ecx]
  402a47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a48:	call   0x6d0f:0xe4fce908
  402a4f:	xchg   DWORD PTR [ebx+0x9],ecx
  402a52:	jmp    0x71938d1
  402a57:	outs   dx,BYTE PTR ds:[esi]
  402a58:	xchg   edi,eax
  402a59:	lock sub ebx,edx
  402a5c:	dec    ebx
  402a5d:	or     DWORD PTR [edx-0x41],ebp
  402a60:	inc    edi
  402a61:	push   es
  402a62:	jmp    0x3949456a
  402a67:	fsub   QWORD PTR [edx-0x2dfc16f8]
  402a6d:	inc    ebp
  402a6e:	(bad)
  402a71:	aam    0xc1
  402a73:	xchg   edi,eax
  402a74:	bound  ecx,QWORD PTR [eax]
  402a76:	jmp    0xe444b1fd
  402a7b:	add    eax,DWORD PTR [eax]
	...
  402aa1:	add    BYTE PTR [eax],al
  402aa3:	add    BYTE PTR [ebx-0x7],cl
  402aa6:	call   0xe9ba5dfe
  402aab:	add    ecx,DWORD PTR [ebx-0x70]
  402aae:	sub    al,0xdc
  402ab0:	mov    eax,ds:0x37719e09
  402ab5:	fistp  WORD PTR [eax+esi*8]
  402ab8:	sbb    al,0x55
  402aba:	and    edi,0x8d91d99e
  402ac0:	and    cl,BYTE PTR [edx]
  402ac2:	jmp    0x363a49
  402ac7:	pop    edi
  402ac8:	mov    ah,cl
  402aca:	push   esp
  402acc:	in     al,dx
  402acd:	icebp  
  402ace:	cmp    BYTE PTR gs:[edi+0x9],al
  402ad2:	call   esp
  402ad4:	loopne 0x402abc
  402ad6:	nop
  402ad7:	push   ebx
  402ad8:	in     al,0xde
  402ada:	push   0xffffffe1
  402adc:	jo     0x402af2
  402ade:	sub    BYTE PTR [eax-0xe8a21b8],ch
  402ae4:	mov    al,ds:0xa436fcbd
  402ae9:	adc    bl,al
  402aeb:	cs cmp dl,ch
  402aee:	call   FWORD PTR [eax+esi*4-0x53e2451a]
  402af5:	fisub  WORD PTR [ebx]
  402af7:	xor    DWORD PTR [esp+edx*2-0xee5f108],esp
  402afe:	(bad)  
  402aff:	jl     0x402a91
  402b01:	out    0xe0,al
  402b03:	std    
  402b04:	ins    DWORD PTR es:[edi],dx
  402b05:	fisub  WORD PTR [ebx]
  402b07:	adc    DWORD PTR [eax],eax
	...
  402b2d:	add    BYTE PTR [eax],al
  402b2f:	add    BYTE PTR [esp+edx*2-0x14],ah
  402b33:	add    DWORD PTR [ecx+ecx*1+0x0],eax
  402b37:	jmp    0xd2287fa1
  402b3c:	pop    ebp
  402b3d:	fdivp  st(7),st
  402b3f:	jmp    0xc1487fa9
  402b44:	jg     0x402b26
  402b46:	inc    esi
  402b48:	ror    ecx,1
  402b4a:	pop    ebx
  402b4b:	mov    al,0xa
  402b4d:	add    eax,0xedc01c00
  402b52:	sub    DWORD PTR [edi+esi*1],0xffffffde
  402b56:	jae    0x402b49
  402b58:	and    eax,0x4b910854
  402b5d:	mov    eax,0xc941e900
  402b62:	leave  
  402b63:	stos   DWORD PTR es:[edi],eax
  402b64:	adc    al,0xde
  402b66:	push   esp
  402b67:	add    BYTE PTR [ecx-0x5ba744a],bl
  402b6d:	or     BYTE PTR [eax+0x5009f200],al
  402b73:	push   0x22
  402b75:	mov    ebp,0x9e2d0f2
  402b7a:	leave  
  402b7b:	ret    0x9ee
  402b7e:	push   ebp
  402b7f:	mov    eax,DWORD PTR [esi+0x78bfc4f]
  402b85:	loop   0x402b11
  402b87:	dec    ebp
  402b88:	(bad)  
  402b89:	jmp    0x2b02:0xbd73510e
  402b90:	jb     0x402b6d
  402b92:	stos   DWORD PTR es:[edi],eax
  402b93:	pop    ecx
	...
  402bbc:	and    ebp,esp
  402bbe:	add    esi,ebx
  402bc0:	sbb    BYTE PTR [edi-0x37],al
  402bc3:	ret    0x99a
  402bc6:	push   ebp
  402bc7:	mov    eax,DWORD PTR [esi+0x4c]
  402bca:	push   edi
  402bcb:	mov    eax,edi
  402bcd:	aad    0xfb
  402bcf:	mov    ecx,DWORD PTR [edi]
  402bd1:	loop   0x402b5d
  402bd3:	dec    ebp
  402bd4:	mov    ds:0xef302ea,al
  402bd9:	inc    edi
  402bda:	pop    esi
  402bdb:	leave  
  402bdc:	and    dh,dl
  402bde:	call   DWORD PTR [ecx+edi*8-0x40]
  402be2:	push   esi
  402be3:	push   edi
  402be4:	fldcw  WORD PTR [ebp+0x8]
  402be7:	cld    
  402be8:	jmp    0xa26b3c02
  402bed:	pop    edi
  402bee:	jge    0x402bfc
  402bf0:	or     DWORD PTR [edx],0xa039a6f3
  402bf6:	jne    0x402bf9
  402bf8:	jb     0x402c40
  402bfa:	pop    esi
  402bfb:	leave  
  402bfc:	loopne 0x402bdf
  402bfe:	call   DWORD PTR [ecx+edi*4-0x3f]
  402c02:	add    esp,0xffffffc6
  402c05:	dec    ebx
  402c06:	push   edi
  402c07:	push   ebx
  402c08:	dec    ebx
  402c09:	or     al,BYTE PTR [edx]
  402c0b:	add    DWORD PTR [ebx-0xe],ecx
  402c0e:	in     al,0x75
  402c10:	inc    ebx
  402c11:	jp     0x402ba6
  402c13:	inc    DWORD PTR [esp+ebx*2]
  402c16:	jns    0x402c95
  402c18:	push   ebx
  402c19:	sub    edi,DWORD PTR ds:0x41a192b
  402c1f:	add    DWORD PTR [eax],eax
	...
  402c45:	add    BYTE PTR [eax],al
  402c47:	add    BYTE PTR [ebx-0xe],cl
  402c4a:	jnp    0x402c60
  402c4c:	and    DWORD PTR [edx+eax*8],edi
  402c4f:	loop   0x402c33
  402c51:	addr16 or BYTE PTR [si+0x78a3],cl
  402c57:	jne    0x402c98
  402c59:	sub    al,0x3f
  402c5b:	dec    BYTE PTR [ebx-0x9]
  402c5e:	mov    edx,0x68a02b
  402c63:	cmp    eax,ebx
  402c65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c66:	in     al,0x0
  402c68:	push   es
  402c69:	and    al,0x7a
  402c6b:	add    al,0x5a
  402c6d:	repnz dec BYTE PTR ds:[esp+edi*1+0x4f]
  402c73:	inc    cl
  402c75:	out    0x29,al
  402c77:	mov    BYTE PTR [edi-0x39],al
  402c7a:	jns    0x402cc1
  402c7c:	test   BYTE PTR [edx+0x0],bl
  402c7f:	cmp    cl,BYTE PTR [edx]
  402c81:	xchg   edi,eax
  402c82:	ss adc cl,bh
  402c85:	out    dx,eax
  402c86:	sbb    cl,cl
  402c88:	ins    DWORD PTR es:[edi],dx
  402c89:	scas   eax,DWORD PTR es:[edi]
  402c8a:	outs   dx,BYTE PTR ds:[esi]
  402c8b:	aad    0x0
  402c8d:	sbb    eax,DWORD PTR [esi-0x37]
  402c90:	mov    esi,esp
  402c92:	add    edx,DWORD PTR [ebp-0x40]
  402c95:	sahf   
  402c96:	add    ah,0x53
  402c99:	dec    DWORD PTR [ebp+0x57]
  402c9c:	inc    esp
  402c9d:	adc    eax,0xeed15afc
  402ca2:	jnp    0x402ce9
  402ca4:	ss push 0x8c30140
  402caa:	sub    al,0xe8
	...
  402cd4:	rcr    bh,1
  402cd6:	es cmp eax,0xbce555d0
  402cdc:	mov    fs,ecx
  402cde:	jmp    0x724977e6
  402ce3:	ss pop ebx
  402ce5:	call   0xdec71313
  402cea:	out    0xad,al
  402cec:	mov    ds,esi
  402cee:	fisubr WORD PTR [ebp+0x4e712157]
  402cf4:	in     al,0x8
  402cf6:	mov    ah,0xe7
  402cf8:	dec    esp
  402cf9:	xchg   ebx,eax
  402cfa:	lods   al,BYTE PTR ds:[esi]
  402cfb:	out    0xc1,eax
  402cfd:	hlt    
  402cfe:	adc    BYTE PTR [esi+esi*2-0x25],bh
  402d02:	imul   BYTE PTR [ebp+0xf71de0e]
  402d08:	or     DWORD PTR [edi+edi*2],0x3e
  402d0c:	mov    bh,0x8e
  402d0e:	xchg   esp,eax
  402d0f:	in     al,0xc3
  402d11:	hlt    
  402d12:	loopne 0x402d8d
  402d14:	(bad)  
  402d15:	fucomi st,st(3)
  402d17:	dec    esi
  402d18:	popf   
  402d19:	mov    ?,ebp
  402d1b:	sub    eax,eax
  402d1d:	inc    ebp
  402d1e:	adc    DWORD PTR [ebx],esi
  402d20:	aaa    
  402d21:	sbb    DWORD PTR [esi],eax
  402d23:	ds and esi,0x29
  402d27:	jns    0x402d2f
  402d29:	fisub  WORD PTR [ecx+0x0]
  402d2c:	rol    DWORD PTR [ebp-0x13],0x7a
  402d30:	or     BYTE PTR [edx],cl
  402d32:	inc    esi
  402d33:	inc    edx
  402d34:	add    dl,dl
  402d36:	stos   DWORD PTR es:[edi],eax
  402d37:	adc    BYTE PTR [eax],al
	...
  402d5d:	add    BYTE PTR [eax],al
  402d5f:	add    BYTE PTR [ebx+0x36],cl
  402d62:	(bad)  
  402d63:	lock retf 0xbdc4
  402d67:	loop   0x402db5
  402d69:	fistp  DWORD PTR [edx]
  402d6b:	das    
  402d6c:	and    BYTE PTR [ebp-0x25641fdc],cl
  402d72:	add    BYTE PTR [edi+eax*2],bh
  402d75:	icebp  
  402d76:	mov    ds:0x85094799,eax
  402d7b:	test   eax,0xe9969138
  402d80:	dec    eax
  402d81:	or     edi,edi
  402d83:	sbb    al,0x47
  402d85:	icebp  
  402d86:	das    
  402d87:	xchg   edi,eax
  402d88:	sub    bl,bl
  402d8a:	mov    DWORD PTR [ebx+eiz*1],ebp
  402d8d:	(bad)  [ebp+0x7d]
  402d90:	out    dx,eax
  402d91:	jno    0x402d62
  402d93:	jmp    0xf6003be0
  402d98:	imul   edx,DWORD PTR [eax+0x54e85945],0xdb7151f4
  402da2:	call   DWORD PTR [esi-0x3a]
  402da5:	inc    esp
  402da6:	clc    
  402da7:	dec    esi
  402da8:	jb     0x402d7f
  402daa:	(bad)  
  402dab:	mov    esp,0x3975daa0
  402db0:	scas   eax,DWORD PTR es:[edi]
  402db1:	(bad)  
  402db2:	(bad)  
  402db3:	ss test al,0xda
  402db6:	jne    0x402de5
  402db8:	lahf   
  402db9:	inc    ebx
  402dba:	iret   
  402dbb:	jmp    0xedb60808
  402dc0:	mov    al,0x17
  402dc2:	iret   
  402dc3:	jmp    0x402dc8
	...
  402dec:	dec    eax
  402ded:	cmp    edi,edi
  402def:	xchg   esp,eax
  402df0:	cmp    al,0x8c
  402df2:	test   DWORD PTR [edi],edx
  402df4:	imul   ebx,edx,0xa47099ff
  402dfa:	(bad)  
  402dfb:	imul   BYTE PTR [ecx-0x26]
  402dfe:	jne    0x402df5
  402e00:	imul   edx,DWORD PTR [eax+edi*8+0x74],0xdefeebd3
  402e08:	imul   edi,DWORD PTR [ecx],0xda6ad7e8
  402e0e:	dec    esi
  402e10:	repz adc al,ch
  402e13:	add    BYTE PTR [ebp-0x43],dh
  402e16:	(bad)  
  402e17:	call   FWORD PTR [eax+0x4a40680d]
  402e1d:	inc    esp
  402e1e:	add    bh,bh
  402e20:	ja     0x402e2f
  402e22:	call   0x2716ba
  402e27:	or     ecx,DWORD PTR [edx]
  402e29:	out    0x75,eax
  402e2b:	hlt    
  402e2c:	mov    ebp,0x37fff840
  402e31:	or     eax,0xe6c883e8
  402e36:	jmp    DWORD PTR [ebx]
  402e38:	stos   BYTE PTR es:[edi],al
  402e39:	out    0x75,al
  402e3b:	clc    
  402e3c:	retf   0xfd9a
  402e3f:	call   FWORD PTR [ebp-0x19]
  402e42:	jne    0x402e4c
  402e44:	jp     0x402dcf
  402e46:	idiv   edi
  402e48:	jge    0x402dd5
  402e4a:	ret    
  402e4b:	pop    ebx
  402e4c:	sub    eax,esp
  402e4e:	or     BYTE PTR [eax],al
	...
  402e78:	xchg   edi,eax
  402e79:	mov    ch,ah
  402e7b:	xor    DWORD PTR [esi-0x4e],0x57
  402e7f:	mov    esp,edi
  402e81:	ror    DWORD PTR [edx],1
  402e83:	shl    dh,0xf
  402e86:	mov    DWORD PTR [eax],0x5a2
  402e8c:	jns    0x402e74
  402e8e:	cmp    DWORD PTR [ebp+0x4a],0x4
  402e92:	jne    0x402e9b
  402e94:	clc    
  402e95:	add    eax,0xeaa20002
  402e9a:	jae    0x75420c6f
  402ea0:	gs jnp 0x402ea3
  402ea3:	add    DWORD PTR [edx+0x5],esp
  402ea6:	jmp    0x402eaa
  402ea8:	mov    DWORD PTR [ebx+0x54bca81],edx
  402eae:	add    al,BYTE PTR [eax]
  402eb0:	out    dx,eax
  402eb1:	inc    ecx
  402eb2:	cld    
  402eb3:	push   eax
  402eb4:	dec    ebx
  402eb5:	push   ds
  402eb6:	outs   dx,BYTE PTR ds:[esi]
  402eb7:	add    BYTE PTR [esp+esi*1+0x10],cl
  402ebb:	(bad)  
  402ebc:	mov    esi,0xcd0ebda
  402ec1:	jecxz  0x402ec6
  402ec3:	or     ecx,DWORD PTR [ebx]
  402ec5:	push   ss
  402ec6:	jno    0x402e55
  402ec8:	xchg   BYTE PTR [edx+0x5d4b6a34],bl
  402ece:	inc    edi
  402ecf:	hlt    
  402ed0:	jnp    0x402ece
  402ed2:	add    edi,edi
  402ed4:	sahf   
  402ed5:	shl    al,cl
  402ed7:	jne    0x402ee8
  402ed9:	mov    ebx,DWORD PTR [ebp+0xcf]
	...
  402f03:	add    BYTE PTR [ebx-0x1e],cl
  402f06:	or     al,0xc0
  402f08:	jbe    0x402f30
  402f0a:	test   DWORD PTR [ebp-0xd],edi
  402f0d:	loop   0x402f66
  402f0f:	inc    esi
  402f10:	enter  0xd7e5,0x1
  402f14:	pop    esi
  402f15:	call   0xe223ac9e
  402f1a:	push   edi
  402f1b:	cmp    al,al
  402f1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f1e:	fild   DWORD PTR [eax+0x7b]
  402f21:	dec    edx
  402f22:	inc    edx
  402f23:	std    
  402f24:	les    ecx,FWORD PTR [edi-0x73]
  402f27:	clc    
  402f28:	into   
  402f29:	lods   eax,DWORD PTR ds:[esi]
  402f2a:	fist   DWORD PTR [eax+0x1c]
  402f2d:	int3   
  402f2e:	add    ebp,DWORD PTR [edx+0x4b]
  402f31:	daa    
  402f32:	push   edi
  402f33:	adc    BYTE PTR [ebp+esi*2+0x27c6e8df],ah
  402f3a:	add    al,0x0
  402f3c:	inc    eax
  402f3d:	and    bl,BYTE PTR [eax+0xa]
  402f40:	hlt    
  402f41:	or     DWORD PTR [ecx],ebp
  402f43:	std    
  402f44:	test   BYTE PTR [edi],cl
  402f46:	sub    eax,0x8ce670ff
  402f4b:	inc    ebp
  402f4c:	pop    edi
  402f4d:	jmp    0x402f12
  402f4f:	je     0x402f97
  402f51:	out    0x56,eax
  402f53:	clc    
  402f54:	aam    0x9
  402f56:	jmp    0xd215063b
  402f5b:	push   0xffffff84
  402f5d:	or     ecx,ebp
  402f5f:	mov    WORD PTR [esp+eax*1-0x7398a957],es
  402f66:	inc    esp
  402f67:	cld    
	...
  402f90:	dec    edx
  402f91:	pop    esp
  402f92:	xlat   BYTE PTR ds:[ebx]
  402f93:	mov    WORD PTR [esi+0x2c3428f1],cs
  402f99:	pop    esi
  402f9a:	aad    0xe0
  402f9c:	sahf   
  402f9d:	stc    
  402f9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f9f:	push   esi
  402fa0:	dec    edi
  402fa1:	fcom   DWORD PTR [esp+ecx*1]
  402fa4:	and    ebp,DWORD PTR [edx]
  402fa6:	xchg   esi,eax
  402fa7:	loopne 0x402fb5
  402fa9:	cmp    BYTE PTR [eax+0x1c095fc5],ah
  402faf:	(bad)  
  402fb0:	out    dx,eax
  402fb1:	mov    esp,edi
  402fb3:	or     ecx,DWORD PTR [edx+0x9]
  402fb6:	jmp    0x6e42a63e
  402fbb:	push   ss
  402fbc:	mov    DWORD PTR [edx],esp
  402fbe:	test   al,0x3
  402fc0:	int3   
  402fc1:	dec    ebp
  402fc2:	icebp  
  402fc3:	ins    DWORD PTR es:[edi],dx
  402fc4:	dec    ebx
  402fc5:	fcomp  st(4)
  402fc7:	test   ebp,0x3ee0f95d
  402fcd:	add    eax,0xe1535646
  402fd2:	xor    eax,0x20d7b4e1
  402fd7:	lds    ebx,FWORD PTR [ebx+0x9]
  402fda:	add    al,ah
  402fdc:	sar    BYTE PTR [eax+0x1e2e538],1
  402fe2:	jmp    0x3fa7aea
  402fe7:	push   esp
  402fe8:	aas    
  402fe9:	mov    bl,BYTE PTR [ebx]
  402feb:	adc    bl,cl
  402fed:	mov    eax,ds:0xf9798205
  402ff2:	xlat   BYTE PTR ds:[ebx]
  402ff3:	repnz add BYTE PTR [eax],al
	...
  40301a:	add    BYTE PTR [eax],al
  40301c:	pop    ebx
  40301d:	jmp    0x40301f
  40301f:	pop    es
  403020:	sar    esp,0x84
  403023:	test   eax,0xe70049e9
  403028:	xchg   DWORD PTR [ebp-0x26],ebx
  40302b:	stos   BYTE PTR es:[edi],al
  40302c:	adc    al,BYTE PTR [esp+ebp*8+0x84dc03e]
  403033:	(bad)  
  403034:	inc    DWORD PTR [edx+0x44d1f57d]
  40303a:	adc    dl,dh
  40303c:	pop    es
  40303d:	pop    esi
  40303e:	sbb    BYTE PTR [edx-0x9],ah
  403041:	enter  0xe1ea,0x3a
  403045:	push   cs
  403046:	and    eax,0x947a6
  40304b:	jb     0x403090
  40304d:	mov    WORD PTR [eax+0x8],es
  403050:	xchg   BYTE PTR [ecx],cl
  403052:	xor    ebp,DWORD PTR [ebx+0x7ee8eb8c]
  403058:	mov    bh,0x36
  40305a:	leave  
  40305b:	stos   DWORD PTR es:[edi],eax
  40305c:	pop    ebx
  40305d:	or     DWORD PTR [ebp+0x62],edx
  403060:	sti    
  403061:	cmp    al,BYTE PTR [ebx+0x750950ec]
  403067:	out    dx,al
  403068:	add    eax,0x2794084d
  40306d:	dec    eax
  40306e:	add    BYTE PTR [edx+0x6a],ch
  403071:	add    eax,0xce4dd400
  403076:	inc    ebp
  403077:	cmc    
  403078:	jecxz  0x40309b
  40307a:	inc    ecx
  40307b:	jmp    0x41488d15
	...
  4030a8:	dec    esp
  4030a9:	les    eax,FWORD PTR [eax]
  4030ab:	jmp    0x9d3fe281
  4030b0:	dec    esp
  4030b1:	loope  0x4030e8
  4030b3:	sub    al,0x4f
  4030b5:	or     DWORD PTR [ebx],eax
  4030b7:	xor    DWORD PTR [eax],ecx
  4030b9:	cmp    ch,al
  4030bb:	into   
  4030bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030bd:	(bad)  
  4030be:	inc    DWORD PTR [eax]
  4030c0:	stc    
  4030c1:	xchg   esp,eax
  4030c2:	push   DWORD PTR [ebp+0x7a]
  4030c5:	sbb    ebp,eax
  4030c7:	aas    
  4030c8:	daa    
  4030c9:	or     eax,0x5dfff00
  4030ce:	push   ebx
  4030cf:	call   0x40e8fa
  4030d4:	fxch   st(2)
  4030d6:	pop    ebx
  4030d7:	leave  
  4030d8:	mov    al,ds:0xa9550002
  4030dd:	out    0x53,al
  4030df:	add    DWORD PTR [edi+0x2d750005],0xffffffcf
  4030e6:	inc    ebp
  4030e7:	or     BYTE PTR [edi-0x4effbede],ch
  4030ed:	imul   ecx,DWORD PTR [eax+eax*1],0x45c70e3f
  4030f4:	es jno 0x40311f
  4030f7:	inc    ecx
  4030f8:	and    dh,BYTE PTR [edi-0x1d35f78b]
  4030fe:	int3   
  4030ff:	add    dl,dh
  403101:	sbb    al,0xff
  403104:	inc    DWORD PTR ds:0x9a6e1e8
  40310a:	add    BYTE PTR [ebx],al
	...
  403134:	mov    edx,0x79e8534a
  403139:	mov    bl,0xff
  40313b:	call   FWORD PTR [ecx-0x6e]
  40313e:	push   DWORD PTR [ebp-0x16]
  403141:	sbb    ch,al
  403143:	jmp    0x4031ab
  403145:	or     al,BYTE PTR [eax]
  403147:	(bad)  
  403148:	inc    DWORD PTR ds:0xc61ae853
  40314e:	add    BYTE PTR [eax],al
  403150:	jne    0x403183
  403152:	or     al,ch
  403154:	sbb    dh,BYTE PTR [ebx-0x34e60001]
  40315a:	pop    ebx
  40315b:	leave  
  40315c:	pusha  
  40315d:	add    al,BYTE PTR [eax]
  40315f:	push   ebp
  403160:	dec    ebx
  403161:	imul   ebp,edi,0xffffff83
  403164:	pop    DWORD PTR [ebx]
  403166:	ss push 0x3e146
  40316c:	arpl   WORD PTR [esi],bx
  40316e:	(bad)  
  403170:	ins    BYTE PTR es:[edi],dx
  403171:	push   0xa4c8fc48
  403176:	sub    DWORD PTR [bp+si],ecx
  403179:	loopne 0x40317e
  40317b:	jne    0x4031c6
  40317d:	mov    ebx,0xbbd6fef6
  403182:	push   0x0
  403184:	mov    cl,0xe2
  403186:	fdiv   QWORD PTR [ebp+0x53]
  403189:	cmp    BYTE PTR [edi+edi*8],al
  40318c:	pop    esi
  40318d:	dec    esi
  40318e:	sub    eax,DWORD PTR [ecx+0x4b]
  403191:	les    edi,FWORD PTR gs:[ecx-0x6d]
  403195:	mov    ds:0xfc57,eax
	...
  4031be:	add    BYTE PTR [eax],al
  4031c0:	xor    esi,edi
  4031c2:	fdivr  st,st(7)
  4031c4:	adc    al,0xac
  4031c6:	inc    edi
  4031c7:	cld    
  4031c8:	dec    ebx
  4031c9:	loop   0x4031ce
  4031cb:	add    ah,al
  4031cd:	or     ch,BYTE PTR [ebx]
  4031cf:	inc    ecx
  4031d0:	dec    ebx
  4031d1:	ja     0x403202
  4031d3:	mov    ebx,DWORD PTR [edi+edx*2+0x47]
  4031d7:	or     BYTE PTR [esi],ah
  4031d9:	pop    ebx
  4031da:	pop    ebp
  4031db:	jmp    esp
  4031dd:	cdq    
  4031de:	inc    ecx
  4031df:	add    al,0x56
  4031e1:	pop    es
  4031e2:	push   0x0
  4031e4:	(bad)  
  4031e5:	mov    al,ds:0x7663500b
  4031ea:	sub    al,BYTE PTR [ecx+0x4b]
  4031ed:	inc    ebx
  4031ee:	adc    ch,al
  4031f0:	push   ds
  4031f1:	dec    esp
  4031f2:	(bad)  
  4031f4:	inc    eax
  4031f5:	and    bl,BYTE PTR [eax+0x5]
  4031f8:	ret    0xdfa5
  4031fb:	jmp    0x403250
  4031fd:	pop    edi
  4031fe:	lds    eax,FWORD PTR [eax+ecx*8]
  403201:	or     esi,esp
  403203:	add    ebx,DWORD PTR [esi]
  403205:	ret    
  403206:	jb     0x40324f
  403208:	(bad)  
  403209:	xor    al,0x20
  40320b:	ret    0x94f
  40320e:	mov    ah,0x88
  403210:	outs   dx,DWORD PTR ds:[esi]
  403211:	cmp    BYTE PTR [edx+0x47],dh
  403214:	inc    ebx
  403215:	add    BYTE PTR [ecx],ch
  403217:	pop    eax
  403218:	inc    esi
  403219:	mov    DWORD PTR [ecx+0x30fede03],esi
  40321f:	add    al,0x4b
  403221:	or     ecx,ebp
  403223:	cmp    BYTE PTR [eax],al
	...
  403249:	add    BYTE PTR [eax],al
  40324b:	add    BYTE PTR [edx-0x1efc1a39],al
  403251:	or     BYTE PTR [ebx+0x4],al
  403254:	mov    cl,0x8
  403256:	inc    ebx
  403257:	add    al,0xb1
  403259:	or     DWORD PTR [ecx-0x7c],edx
  40325c:	dec    ebx
  40325d:	or     ecx,ebp
  40325f:	fdiv   QWORD PTR [esi+0x10e4c101]
  403265:	or     ecx,ebp
  403267:	mov    BYTE PTR [ebx],al
  403269:	and    BYTE PTR [ecx+0x3a009f40],ch
  40326f:	in     al,dx
  403270:	and    eax,0xc303e9c0
  403275:	or     ecx,ebp
  403277:	add    ecx,DWORD PTR [ebx+0x30]
  40327a:	mov    al,0xc1
  40327c:	dec    edi
  40327d:	or     DWORD PTR [ecx+ecx*4],edx
  403280:	fistp  QWORD PTR [edi+0x2c]
  403283:	or     al,0x50
  403285:	leave  
  403286:	cmc    
  403287:	push   es
  403288:	retf   
  403289:	adc    cl,ch
  40328b:	push   esi
  40328c:	inc    edx
  40328d:	xchg   ecx,eax
  40328e:	jmp    0x20497d96
  403293:	ror    DWORD PTR [edi+0x9],0x4e
  403297:	push   esi
  403298:	push   ebx
  403299:	loope  0x4032d6
  40329b:	enter  0x94b,0x6a
  40329f:	fld    TBYTE PTR [esp+ebx*2-0x70e1c00]
  4032a6:	(bad)  
  4032a7:	call   0x29d536f4
  4032ac:	inc    edi
  4032ad:	fwait
  4032ae:	rcl    BYTE PTR [edx],0x0
	...
  4032d5:	add    BYTE PTR [eax],al
  4032d7:	add    BYTE PTR [ebp-0x6f],al
  4032da:	add    cl,ch
  4032dc:	dec    eax
  4032dd:	or     ecx,ecx
  4032df:	sub    eax,DWORD PTR [ecx+ecx*1+0x55]
  4032e3:	jb     0x403349
  4032e5:	xchg   esp,eax
  4032e7:	std    
  4032e8:	jecxz  0x4032f2
  4032ea:	push   0xffffffe9
  4032ec:	xchg   DWORD PTR [ebp+0x8],ebx
  4032ef:	add    DWORD PTR [ebx+0x45e900bf],edx
  4032f5:	leave  
  4032f6:	je     0x40330b
  4032f8:	pop    ss
  4032f9:	cmp    eax,ebp
  4032fb:	mov    ah,BYTE PTR ds:0x8a60ffd3
  403301:	aad    0x58
  403303:	sbb    DWORD PTR [eax],edx
  403305:	pop    ebp
  403306:	cld    
  403307:	mov    esi,0x79e8019a
  40330c:	adc    al,0xa
  40330e:	add    dl,ah
  403310:	or     BYTE PTR [ebp+0xc],bl
  403313:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403314:	jp     0x4032eb
  403316:	call   0x132034
  40331b:	ret    0xdf08
  40331e:	add    esp,DWORD PTR [edx-0x76]
  403321:	aad    0xc9
  403323:	stos   DWORD PTR es:[edi],eax
  403324:	dec    ebx
  403325:	or     DWORD PTR [ebp+0x72],edx
  403328:	jecxz  0x403360
  40332a:	mov    edx,DWORD PTR [ebx+edx*2]
  40332d:	pop    edi
  40332e:	adc    BYTE PTR [edx],bl
  403330:	out    dx,eax
  403331:	(bad)  
  403332:	cli    
  403333:	lock pop di
  403336:	add    bl,dl
  403338:	dec    eax
  403339:	pop    edi
  40333a:	add    eax,ebx
	...
  403364:	dec    eax
  403365:	pop    edi
  403366:	add    eax,ecx
  403368:	dec    eax
  403369:	or     DWORD PTR [eax],eax
  40336b:	add    BYTE PTR [edx],ah
  40336d:	scas   al,BYTE PTR es:[edi]
  40336e:	jne    0x403378
  403370:	sbb    ah,BYTE PTR [edx]
  403372:	retf   
  403373:	add    BYTE PTR [edx-0x29bffc7b],dh
  403379:	sbb    ch,BYTE PTR [edx+0x0]
  40337c:	rcr    dh,cl
  40337e:	ins    BYTE PTR es:[edi],dx
  40337f:	retf   
  403380:	mov    ds:0x6e438906,al
  403385:	add    BYTE PTR fs:[edx+0x72],ch
  403389:	add    BYTE PTR fs:[edx+0x60],ch
  40338d:	fs add bh,bh
  403390:	mov    cl,0xde
  403392:	pop    esi
  403393:	retf   
  403394:	jb     0x40339c
  403396:	or     eax,eax
  403398:	(bad)  
  403399:	push   ds
  40339a:	mov    DWORD PTR [ebx+0x66],eax
  40339d:	add    BYTE PTR fs:[edx+0x62],ch
  4033a1:	add    BYTE PTR fs:[edx+0x36],ch
  4033a5:	push   ss
  4033a6:	call   0x461cfa
  4033ab:	mov    DWORD PTR [ecx+0x5],esp
  4033ae:	or     eax,eax
  4033b0:	ja     0x4033db
  4033b2:	push   DWORD PTR [ebx+0x36]
  4033b5:	fdivrp st(2),st
  4033b7:	retf   0x632
  4033ba:	push   DWORD PTR [ebx]
  4033bc:	mov    edx,0x2200cae2
  4033c1:	mov    DWORD PTR [ebx],0xffaeddff
  4033c7:	jmp    0x4033c9
	...
  4033ed:	add    BYTE PTR [eax],al
  4033ef:	add    BYTE PTR [edi],bl
  4033f1:	scas   eax,DWORD PTR es:[edi]
  4033f2:	xor    ebp,eax
  4033f4:	scas   al,BYTE PTR es:[edi]
  4033f5:	ret    
  4033f6:	add    BYTE PTR [eax],al
  4033f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033f9:	or     bh,bh
  4033fb:	call   FWORD PTR [ebp-0x51]
  4033fe:	sub    eax,eax
  403400:	fwait
  403401:	dec    edx
  403402:	or     BYTE PTR [edi],cl
  403404:	push   edi
  403405:	(bad)  
  403406:	pop    ebx
  403407:	leave  
  403408:	and    dh,bh
  40340a:	call   DWORD PTR [ebx+ecx*2+0x67]
  40340e:	out    0x53,eax
  403410:	shl    BYTE PTR [ebx+ecx*1+0x4f4b7083],1
  403417:	pop    ss
  403418:	lods   al,BYTE PTR ds:[esi]
  403419:	mov    cs,WORD PTR [ebx]
  40341b:	call   0x435b72
  403420:	pushf  
  403421:	mov    ?,edi
  403423:	out    0xe6,eax
  403425:	adc    eax,0xae8c0003
  40342a:	jmp    0x4033d2
  40342c:	xchg   ecx,eax
  40342d:	fild   WORD PTR [ebx]
  40342f:	pop    ebx
  403430:	xchg   edx,eax
  403431:	sbb    eax,0x571fffff
  403436:	out    0x81,eax
  403438:	xchg   edi,edi
  40343a:	jmp    0x32b1993e
  40343f:	sbb    DWORD PTR [esi],0x77
  403442:	sub    eax,DWORD PTR [ecx+0x4b]
  403445:	loopne 0x403496
  403447:	adc    eax,0x283cfc4c
  40344c:	mov    ah,dl
  40344e:	jmp    0x4033da
  403450:	inc    edx
  403451:	rcr    cl,0xc7
	...
  40347c:	dec    esi
  40347d:	sub    ebp,DWORD PTR [ecx+eax*2]
  403480:	dec    ebx
  403481:	loop   0x403486
  403483:	add    BYTE PTR [ebx+0x63],cl
  403486:	pop    ss
  403487:	pop    edi
  403488:	jae    0x4034ab
  40348a:	add    al,0x0
  40348c:	lahf   
  40348d:	int    0xd8
  40348f:	xor    eax,0x42ba6c
  403494:	repz push es
  403496:	(bad)  
  403498:	cld    
  403499:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40349a:	call   FWORD PTR [esi+0x23]
  40349d:	and    DWORD PTR [eax+eax*1],eax
  4034a0:	dec    ebx
  4034a1:	loop   0x4034a6
  4034a3:	(bad)  
  4034a4:	into   
  4034a5:	push   edx
  4034a6:	jmp    0xec3311aa
  4034ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034ac:	fisttp DWORD PTR [ecx]
  4034ae:	data16 fnstcw WORD PTR [esi-0x3b16b27a]
  4034b5:	sar    BYTE PTR [ecx+0x4ed9e1eb],1
  4034bb:	fld    st(6)
  4034bd:	inc    esi
  4034be:	inc    ebp
  4034bf:	xor    al,0x23
  4034c1:	ins    BYTE PTR es:[edi],dx
  4034c2:	adc    DWORD PTR [ebx+0x4b],eax
  4034c5:	popa   
  4034c6:	jmp    0x4034cb
  4034c8:	dec    ebx
  4034c9:	mov    DWORD PTR [ecx+0x71],eax
  4034cc:	or     BYTE PTR [ecx],0xe9
  4034cf:	or     al,0x8b
  4034d1:	add    BYTE PTR [ebp+edi*1+0x4a],ah
  4034d5:	or     ecx,ebp
  4034d7:	rol    dh,0xd5
  4034da:	(bad)  
  4034db:	fdiv   DWORD PTR [ecx+ecx*1-0x17]
  4034df:	add    eax,DWORD PTR [eax]
	...
  403505:	add    BYTE PTR [eax],al
  403507:	add    BYTE PTR [ebx-0x38],cl
  40350a:	fdiv   QWORD PTR fs:[eax+edx*8-0xa]
  40350f:	fmul   DWORD PTR [ecx+ecx*1-0x17]
  403513:	ins    DWORD PTR es:[edi],dx
  403514:	dec    ebx
  403515:	arpl   cx,bp
  403517:	ins    DWORD PTR es:[edi],dx
  403518:	dec    ebx
  403519:	arpl   cx,bp
  40351b:	xchg   dh,cl
  40351d:	rol    dh,1
  40351f:	fdivr  DWORD PTR [ecx+edi*1]
  403522:	pop    esp
  403523:	jle    0x40355c
  403525:	loopne 0x4034ed
  403527:	fcomp  DWORD PTR [ebx+0x34cf74d0]
  40352d:	shl    BYTE PTR [esi-0x3e326928],1
  403533:	add    BYTE PTR ss:[ecx],cl
  403536:	jmp    0x64404047
  40353b:	hlt    
  40353c:	dec    ebx
  40353d:	or     ecx,ebp
  40353f:	imul   edi,DWORD PTR [eax+0x63042820],0x6c
  403546:	rol    DWORD PTR [edx+0x4b],1
  403549:	loope  0x403549
  40354b:	xlat   BYTE PTR ds:[ebx]
  40354c:	in     al,0xcf
  40354e:	add    dl,ah
  403550:	or     BYTE PTR [eax],al
  403552:	test   BYTE PTR [eax+0x48],bh
  403555:	or     DWORD PTR [eax],eax
  403557:	jb     0x4034f1
  403559:	jge    0x4034e0
  40355b:	pop    ebp
  40355c:	mov    bl,0xcf
  40355e:	(bad)  
  40355f:	mov    ecx,0x4dbce176
  403564:	xchg   ebx,eax
  403565:	iret   
  403566:	or     ebp,DWORD PTR [ecx]
  403568:	inc    ebx
  403569:	test   edx,ebx
  40356b:	jmp    0x403570
	...
  403594:	dec    eax
  403595:	or     DWORD PTR [ecx-0x205794],ecx
  40359b:	cs int 0x85
  40359e:	call   0x510fa8b9
  4035a3:	xchg   ecx,eax
  4035a4:	sti    
  4035a5:	and    BYTE PTR [ecx-0x17],al
  4035a8:	mov    ds:0x9cfee095,eax
  4035ad:	iret   
  4035ae:	push   0x800948eb
  4035b3:	adc    DWORD PTR [ebx+0x50f6ffd3],edi
  4035b9:	leave  
  4035ba:	pcmpgtw mm6,QWORD PTR [ebp-0x3616fff8]
  4035c1:	rol    BYTE PTR [ecx],1
  4035c3:	out    dx,al
  4035c4:	(bad)  
  4035c5:	ins    DWORD PTR es:[edi],dx
  4035c6:	add    cl,ch
  4035c8:	dec    eax
  4035c9:	cmp    edi,edi
  4035cb:	xchg   esp,eax
  4035cc:	daa    
  4035cd:	(bad)  
  4035cf:	(bad)  
  4035d0:	ja     0x4035a0
  4035d2:	mov    ch,0xb9
  4035d4:	sub    al,0xcf
  4035d6:	inc    ecx
  4035d8:	push   ds
  4035d9:	(bad)  
  4035da:	jmp    FWORD PTR [esi-0x69177b3e]
  4035e0:	hlt    
  4035e1:	into   
  4035e2:	push   eax
  4035e3:	adc    esp,esp
  4035e5:	and    DWORD PTR [ecx-0x17],eax
  4035e8:	adc    eax,0x1c7ee095
  4035ed:	iret   
  4035ee:	push   0xae000
  4035f3:	cmp    BYTE PTR [edx+0xfffb3e],0x0
	...
  40361e:	add    BYTE PTR [eax],al
  403620:	push   ebp
  403621:	add    al,al
  403623:	je     0x403653
  403625:	mov    bh,BYTE PTR [ebp-0x498a18]
  40362b:	add    DWORD PTR [ebx+esi*8-0x77d8afb1],ebx
  403632:	cld    
  403633:	out    dx,eax
  403634:	add    eax,0xfae850b6
  403639:	mov    ebp,0x81c20000
  40363e:	test   esp,edi
  403640:	add    eax,0x6550ffb6
  403645:	js     0x403633
  403647:	out    dx,eax
  403648:	gs mov dh,0xe8
  40364b:	iret   
  40364c:	pop    esi
  40364d:	mov    dh,0xff
  40364f:	pop    eax
  403650:	push   ebp
  403651:	js     0x40363b
  403653:	out    dx,eax
  403654:	inc    ebp
  403655:	mov    dh,0x50
  403657:	jmp    FWORD PTR [edi]
  403659:	loope  0x40364a
  40365b:	jmp    DWORD PTR [ebp-0x1e]
  40365e:	mov    esp,0xe8b755f4
  403663:	sbb    DWORD PTR [edx-0x49],ebx
  403666:	(bad)  
  403667:	jmp    0x4036ab
  403669:	add    BYTE PTR [ebp-0x48ea04],0x50
  403670:	or     al,BYTE PTR [edi]
  403672:	leave  
  403673:	add    BYTE PTR [edx],ah
  403675:	dec    edx
  403676:	push   eax
  403677:	lea    ebx,[edi-0x1a00104a]
  40367d:	sbb    edi,edi
  40367f:	mov    ch,0x6
  403681:	out    0xff,eax
  403683:	inc    DWORD PTR [eax]
	...
  4036a9:	add    BYTE PTR [eax],al
  4036ab:	add    BYTE PTR [edx],cl
  4036ad:	pop    ecx
  4036ae:	hlt    
  4036af:	jmp    ebp
  4036b1:	loope  0x4036a5
  4036b3:	mul    ebp
  4036b5:	mov    dh,0xff
  4036b7:	mov    ch,0x4b
  4036b9:	and    dh,0xff
  4036bc:	hlt    
  4036bd:	xchg   esi,ebx
  4036bf:	imul   esp
  4036c1:	xchg   dh,dl
  4036c3:	test   edi,ebx
  4036c5:	jle    0x40369d
  4036c7:	push   edx
  4036c9:	push   cs
  4036ca:	aad    0xff
  4036cc:	aam    0x5e
  4036ce:	push   eax
  4036cf:	cld    
  4036d0:	jecxz  0x4036c7
  4036d2:	leave  
  4036d3:	add    BYTE PTR [ebx-0x46],cl
  4036d6:	add    edi,edi
  4036d8:	imul   BYTE PTR [edi]
  4036da:	out    0xff,al
  4036dc:	mov    ah,0x47
  4036de:	xor    esi,esp
  4036e0:	lods   al,BYTE PTR ds:[esi]
  4036e1:	inc    esi
  4036e2:	imul   eax,DWORD PTR [eax],0xefe754a4
  4036e8:	pushf  
  4036e9:	push   ss
  4036ea:	jmp    0x40372f
  4036ec:	lahf   
  4036ed:	push   ds
  4036ee:	(bad)  
  4036ef:	(bad)  
  4036f0:	(bad)  
  4036f1:	sti    
  4036f2:	in     eax,0xff
  4036f4:	test   BYTE PTR [edi+0x67bb5d6],cl
  4036fa:	(bad)  
  4036fb:	jmp    DWORD PTR [ebx+0x11]
  4036fe:	int3   
  4036ff:	add    BYTE PTR [ebx+0x5d],cl
  403702:	ret    
  403703:	js     0x403715
  403705:	iret   
  403706:	(bad)  
  403707:	lock ins BYTE PTR es:[edi],dx
  403709:	(bad)  
  40370a:	aad    0xe8
  40370c:	hlt    
  40370d:	into   
  40370e:	aad    0xff
	...
  403738:	ret    0xec5c
  40373b:	out    dx,eax
  40373c:	inc    esp
  40373d:	lods   al,BYTE PTR ds:[esi]
  40373e:	aad    0xb5
  403740:	xor    eax,esp
  403742:	aad    0xff
  403744:	and    ebx,DWORD PTR [ebp+ecx*8-0x1]
  403748:	sub    al,0x80
  40374a:	cmp    DWORD PTR [eax],ebp
  40374c:	mov    ah,dl
  40374e:	aam    0xb5
  403750:	daa    
  403751:	(bad)  
  403752:	aad    0xff
  403754:	and    esp,DWORD PTR [ecx-0x34]
  403757:	add    BYTE PTR [ebx+0x9],cl
  40375a:	bnd ret 
  40375c:	jg     0x40374e
  40375e:	jno    0x4036e7
  403760:	repz fcom QWORD PTR [esi+0x62d9c0d5]
  403767:	pop    ss
  403768:	nop
  403769:	and    DWORD PTR [eax],ebp
  40376b:	add    al,0xd8
  40376d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40376e:	jle    0x4036ff
  403770:	out    0xdc,eax
  403772:	jbe    0x403749
  403774:	jecxz  0x4037d8
  403776:	mov    eax,ds:0x6c7e4b04
  40377b:	loopne 0x403731
  40377d:	int3   
  40377e:	pop    esi
  40377f:	xor    al,0xbc
  403781:	xchg   esi,eax
  403782:	inc    ebp
  403783:	in     eax,0xb4
  403785:	int3   
  403786:	inc    ecx
  403787:	push   ebx
  403788:	or     BYTE PTR [ecx],0xe9
  40378b:	jle    0x403718
  40378d:	push   ecx
  40378e:	mov    dl,0xd4
  403790:	(bad)  
  403791:	fld    QWORD PTR [esi-0x2b]
  403794:	xchg   esp,eax
  403795:	loope  0x4037c6
  403797:	out    0x8c,al
  403799:	int3   
  40379a:	jo     0x40381b
	...
  4037c4:	jae    0x4037a2
  4037c6:	push   ds
  4037c7:	aad    0x7c
  4037c9:	xchg   esi,eax
  4037ca:	add    ebp,esp
  4037cc:	je     0x40379a
  4037ce:	add    DWORD PTR [esi],edx
  4037d0:	je     0x40379e
  4037d2:	push   es
  4037d3:	mov    eax,ds:0x3a82104
  4037d8:	pop    esp
  4037d9:	xchg   esi,eax
  4037da:	or     eax,0x1cc54e5
  4037df:	and    eax,DWORD PTR [ebx+0xb08e909]
  4037e5:	push   ebp
  4037e6:	add    cl,BYTE PTR [ecx-0x2b391f32]
  4037ec:	xor    al,0x80
  4037ee:	(bad)  [eax+0x43112c6e]
  4037f4:	dec    ebx
  4037f5:	fadd   DWORD PTR [ebp+0xe4d6d4]
  4037fb:	(bad)  
  4037fc:	dec    ebx
  4037fe:	call   0x4938e4
  403803:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403804:	aad    0xd8
  403806:	out    dx,eax
  403807:	sahf   
  403808:	pop    ss
  403809:	loope  0x403865
  40380b:	xchg   DWORD PTR [edi],ebx
  40380d:	int3   
  40380e:	call   DWORD PTR [esp+eiz*8-0x25]
  403812:	inc    DWORD PTR [esi+0x7eee3bf0]
  403818:	imul   DWORD PTR [ebx]
  40381a:	pop    esi
  40381b:	mov    al,ds:0x7d8b360b
  403820:	bound  eax,QWORD PTR [ecx]
  403822:	call   0xbce79
  403827:	jb     0x403829
	...
  40384d:	add    BYTE PTR [eax],al
  40384f:	add    al,bh
  403851:	retf   
  403852:	xor    eax,0x4a6090
  403857:	pop    esi
  403858:	dec    edx
  403859:	int3   
  40385a:	jne    0x40384d
  40385c:	iret   
  40385d:	inc    esi
  40385e:	add    al,0x70
  403860:	lods   eax,DWORD PTR ds:[esi]
  403861:	nop
  403862:	sub    BYTE PTR [eax-0x1a3d3db8],ch
  403868:	dec    eax
  403869:	mov    edx,DWORD PTR ss:0xb6f8c4cb
  403870:	mov    edi,0x48e9f845
  403875:	or     DWORD PTR [eax],eax
  403877:	push   0x15
  403879:	add    DWORD PTR [eax],eax
  40387b:	jge    0x4038d7
  40387d:	retf   0xed75
  403880:	ja     0x4038d7
  403882:	or     BYTE PTR [ebx-0xcf91eb8],al
  403888:	js     0x403855
  40388a:	mov    DWORD PTR [ebx+ebx*1],ebp
  40388d:	fild   WORD PTR [edi]
  40388f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403890:	xchg   edx,eax
  403891:	int    0x0
  403893:	jmp    0xccb41e0
  403898:	mov    esi,0x32004121
  40389d:	lods   al,BYTE PTR ds:[esi]
  40389e:	adc    ecx,DWORD PTR [ebx+0x473bb967]
  4038a4:	xor    cl,BYTE PTR es:[ecx]
  4038a7:	(bad)  
  4038a8:	addr16 mov ebp,0x6f20001
  4038ae:	jmp    0x4038b6
  4038b0:	jns    0x4038a8
  4038b2:	or     bh,bh
	...
  4038dc:	push   edi
  4038dd:	lods   al,BYTE PTR ds:[esi]
  4038de:	cmp    DWORD PTR [ebp-0x26],0x5
  4038e2:	jne    0x4038ec
  4038e4:	int    0x30
  4038e6:	cld    
  4038e7:	call   0x3fef5c
  4038ec:	imul   eax,DWORD PTR [eax-0x8],0x8c3ab5f
  4038f3:	add    BYTE PTR ds:0x5ab93d4c,al
  4038f9:	inc    esp
  4038fa:	add    bl,ch
  4038fc:	stos   BYTE PTR es:[edi],al
  4038fd:	jnp    0xf67e4342
  403903:	dec    DWORD PTR ds:0x5675feca
  403909:	mov    esi,0x444ab905
  40390e:	add    BYTE PTR [eax],al
  403910:	mov    ds:0x315f0006,al
  403915:	adc    BYTE PTR [ebx+0x6a10b5ec],cl
  40391b:	add    BYTE PTR [ebp+0x30],bl
  40391e:	or     al,ch
  403920:	and    eax,0xd9ffffbc
  403925:	mov    esp,0xae5a75ff
  40392a:	and    al,bh
  40392c:	bound  eax,QWORD PTR [esi]
  40392e:	cmp    eax,0x63
  403931:	xor    BYTE PTR [edi],cl
  403933:	push   edi
  403934:	mov    dl,0xf7
  403936:	and    DWORD PTR [ebp+0x3a],esi
  403939:	mov    edx,0xe14b778d
  40393e:	jle    0x403908
	...
  403968:	cmp    BYTE PTR [edx+esi*1+0x44f97368],al
  40396f:	add    BYTE PTR [eax+edi*4+0x6e],dh
  403973:	enter  0xe04b,0xfe
  403977:	mov    edi,0x40c9e497
  40397c:	dec    edi
  40397d:	loopne 0x4039dc
  40397f:	pop    esp
  403980:	jno    0x403962
  403982:	cmp    ch,al
  403984:	les    esp,FWORD PTR [edi-0x5fbffffd]
  40398a:	push   edi
  40398b:	add    eax,0xeb03e00d
  403990:	dec    eax
  403991:	mov    ds:0x887c000a,al
  403996:	mov    dl,0xc6
  403998:	dec    ebx
  403999:	loopne 0x403921
  40399b:	clc    
  40399c:	dec    eax
  40399d:	stos   DWORD PTR es:[edi],eax
  40399e:	push   es
  40399f:	mov    BYTE PTR [eax+eiz*8+0x7e],0xc7
  4039a4:	adc    eax,0x47c2bc93
  4039a9:	loopne 0x4039e3
  4039ab:	mov    esi,DWORD PTR [edi-0x2f0338a2]
  4039b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039b2:	inc    DWORD PTR [ebx+ecx*2]
  4039b5:	mov    al,0x3
  4039b7:	add    bl,bh
  4039b9:	inc    edi
  4039ba:	shl    ebp,0x84
  4039bd:	and    bh,BYTE PTR [ebp+eax*2+0x7f]
  4039c1:	jmp    0xffcf:0x6c740c57
  4039c8:	mul    bh
  4039ca:	fcomi  st,st(4)
	...
  4039f4:	pop    esi
  4039f5:	add    dl,dl
  4039f7:	call   esi
  4039f9:	scas   eax,DWORD PTR es:[edi]
  4039fa:	shl    BYTE PTR [ebp+0x47],cl
  4039fd:	rcl    DWORD PTR [edi-0x4],cl
  403a00:	arpl   WORD PTR [edi+0x8],sp
  403a03:	add    BYTE PTR [ebx+0x9],cl
  403a06:	out    0x57,al
  403a08:	aas    
  403a09:	mov    dl,0x79
  403a0b:	xlat   BYTE PTR ds:[ebx]
  403a0c:	xor    al,0xc9
  403a0e:	mov    al,ds:0x3a093fc6
  403a13:	pop    esp
  403a14:	dec    esi
  403a15:	repnz daa 
  403a17:	add    al,0x33
  403a19:	frstor [edi-0x56ebb4fc]
  403a1f:	pop    eax
  403a20:	cmp    DWORD PTR [ecx+edx*4+0x27f25a5c],edx
  403a27:	add    al,0x98
  403a29:	mov    cl,0xb1
  403a2b:	retf   0x94b
  403a2e:	dec    edx
  403a2f:	sub    BYTE PTR [edx],ah
  403a31:	dec    edx
  403a32:	jmp    0x729f4263
  403a37:	loopne 0x403aae
  403a39:	pop    esp
  403a3a:	push   ss
  403a3b:	rcr    DWORD PTR [esi+0x11],1
  403a3e:	sbb    DWORD PTR [edi+0x73e90a05],0x8dcc950
  403a48:	sbb    al,0x64
  403a4a:	mov    edi,0xe91189ba
  403a4f:	jl     0x403a7f
  403a51:	adc    DWORD PTR [ecx+0x7d],edi
  403a54:	sbb    DWORD PTR [ecx+0x5772],0x0
	...
  403a7f:	add    BYTE PTR [edi-0xc],cl
  403a82:	sub    al,dl
  403a84:	ror    al,cl
  403a86:	ror    DWORD PTR ss:[ecx+ebx*4-0x76245dc5],1
  403a8e:	out    0x3,al
  403a90:	mul    DWORD PTR [ecx]
  403a92:	mov    dh,0x34
  403a94:	arpl   WORD PTR [esi+0x144b042f],cx
  403a9a:	sub    DWORD PTR [edi+0x4c],edx
  403a9d:	push   0xcb9231a2
  403aa2:	icebp  
  403aa3:	add    eax,edx
  403aa5:	verw   WORD PTR [edx-0x7f]
  403aa9:	or     eax,0x9d717eb
  403aae:	add    cl,ch
  403ab0:	dec    eax
  403ab1:	push   0xcaf03f5b
  403ab6:	or     cl,ch
  403ab8:	jne    0x403a4e
  403aba:	in     al,dx
  403abb:	bound  ecx,QWORD PTR [ebp+0x74a90b11]
  403ac1:	push   cs
  403ac2:	add    BYTE PTR [ecx],0x4f
  403ac5:	or     DWORD PTR ds:[ecx+0x48],esi
  403ac9:	or     DWORD PTR [eax],eax
  403acb:	jmp    0xe9450591
  403ad0:	pop    edi
  403ad1:	fucomi st,st(3)
  403ad3:	test   al,0x0
  403ad6:	pop    esp
  403ad7:	sbb    eax,0xbe388944
  403adc:	jge    0x403aee
  403ade:	mov    edx,0x948e8
  403ae3:	xchg   edx,eax
	...
  403b0c:	dec    ebp
  403b0d:	add    DWORD PTR [eax],0xffffffe9
  403b10:	dec    eax
  403b11:	or     DWORD PTR [eax+0x69],eax
  403b14:	push   eax
  403b15:	or     DWORD PTR [ebp+0x4d],esi
  403b18:	aas    
  403b19:	retf   
  403b1a:	leave  
  403b1b:	sub    ecx,DWORD PTR [ecx+ecx*1+0x55]
  403b1f:	bound  ecx,QWORD PTR [edi+ebx*2+0x4e27ba56]
  403b26:	or     al,0xec
  403b28:	dec    eax
  403b29:	or     eax,0xa8d9e900
  403b2e:	push   eax
  403b2f:	inc    ecx
  403b30:	(bad)  
  403b31:	mov    esp,0xc1072eff
  403b36:	mov    eax,DWORD PTR [ecx-0x1]
  403b39:	cmp    eax,0x15357208
  403b3e:	jmp    0x403b2b
  403b40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b41:	push   ecx
  403b42:	or     esp,DWORD PTR [eax]
  403b44:	cld    
  403b45:	or     eax,0xc5840080
  403b4a:	je     0x403b41
  403b4c:	pop    ecx
  403b4d:	xor    BYTE PTR [edx+eax*1-0x2],0x2
  403b52:	sub    eax,eax
  403b54:	mov    BYTE PTR [edi+0x430c75c9],cl
  403b5a:	ret    
  403b5b:	pop    ebx
  403b5c:	je     0x403b54
  403b5e:	enter  0x2ac2,0xb
  403b62:	push   ebx
  403b63:	push   esi
  403b64:	mov    ebx,0x32000011
  403b69:	cmp    esi,DWORD PTR [ebx]
  403b6b:	shl    BYTE PTR [edx+0x1a],cl
  403b6e:	fist   DWORD PTR [eax+0x0]
	...
  403b98:	(bad)  
  403b99:	cmp    eax,0x3db2b60f
  403b9e:	cmp    al,0x2b
  403ba0:	and    BYTE PTR [eax+0x6],0x90
  403ba4:	popa   
  403ba5:	retf   
  403ba6:	ds nop
  403ba8:	and    DWORD PTR [ecx],ebx
  403baa:	das    
  403bab:	nop
  403bac:	aas    
  403bad:	seto   BYTE PTR [ebx+0x439016b0]
  403bb4:	xchg   esi,eax
  403bb5:	sbb    dl,BYTE PTR [eax+0x3916e87c]
  403bbb:	nop
  403bbc:	mov    ch,0x11
  403bbe:	add    al,0x4
  403bc0:	mov    cl,0x7a
  403bc2:	inc    ebx
  403bc3:	cmp    al,0xe3
  403bc5:	cmp    bh,BYTE PTR [ebx+ecx*1+0x56]
  403bc9:	repz (bad) 
  403bcb:	jg     0x403b79
  403bcd:	es inc ecx
  403bcf:	nop
  403bd0:	mov    cl,0x7a
  403bd2:	inc    ebx
  403bd3:	cmp    al,0x83
  403bd5:	cmp    bh,BYTE PTR [edx+ecx*1-0x6a]
  403bd9:	push   eax
  403bda:	nop
  403bdb:	jg     0x403c4c
  403bdd:	es inc edi
  403bdf:	add    eax,DWORD PTR [edx+0x4a]
  403be2:	rol    edx,0x6c
  403be5:	test   al,0xb1
  403be7:	ror    DWORD PTR [ebx-0x16],0x5
  403beb:	mov    ecx,DWORD PTR [ecx+0x73c1bbe7]
  403bf1:	mov    eax,0xfbc0903a
  403bf6:	jae    0x403c56
  403bf8:	lock repnz cmp BYTE PTR [ebx+0x0],cl
	...
  403c24:	aaa    
  403c25:	mov    ds:0x3b3f5636,eax
  403c2a:	pop    eax
  403c2b:	or     bl,bl
  403c2d:	cmp    dl,BYTE PTR [eax+0x10]
  403c30:	fld    TBYTE PTR [edx]
  403c32:	inc    eax
  403c33:	or     al,0xbb
  403c35:	and    ch,BYTE PTR [ebx+0x346069e3]
  403c3b:	nop
  403c3c:	and    eax,DWORD PTR [edx]
  403c3e:	iret   
  403c3f:	dec    DWORD PTR [eax+eiz*2]
  403c42:	mov    cl,cl
  403c44:	test   DWORD PTR [eax-0x480c3e67],ebp
  403c4a:	jae    0x403c8f
  403c4c:	jmp    0xdb99afb8
  403c51:	xor    al,ch
  403c53:	add    al,0xbb
  403c55:	xor    bl,ah
  403c57:	add    al,0xbb
  403c59:	push   cs
  403c5a:	scas   al,BYTE PTR es:[edi]
  403c5b:	nop
  403c5c:	shl    BYTE PTR [edx+0x73],0x5e
  403c60:	ins    BYTE PTR es:[edi],dx
  403c61:	sbb    edi,DWORD PTR [ebp+0x38b057c2]
  403c67:	mov    ebp,DWORD PTR [edi-0x4a1338d0]
  403c6d:	data16 into 
  403c6f:	push   ebx
  403c70:	pusha  
  403c71:	sti    
  403c72:	jg     0x403cb9
  403c74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c75:	jg     0x403cd2
  403c77:	sub    eax,0xff037172
  403c7c:	pop    esi
  403c7d:	jb     0x403c9b
  403c7f:	inc    ecx
  403c80:	dec    ebx
  403c81:	dec    eax
  403c82:	es (bad) 
  403c84:	dec    ebx
  403c85:	mov    al,0xfa
  403c87:	mov    edi,0x0
	...
  403cb0:	test   BYTE PTR [eax],0xcb
  403cb3:	into   
  403cb4:	(bad)  
  403cb5:	sbb    BYTE PTR [esi],bl
  403cb7:	pop    eax
  403cb8:	aas    
  403cb9:	xor    ebp,edx
  403cbb:	pop    ecx
  403cbc:	dec    ebx
  403cbd:	(bad)  
  403cbe:	xchg   esp,eax
  403cbf:	sti    
  403cc0:	pop    ebp
  403cc1:	cmp    eax,DWORD PTR ds:0xe9cf3fdb
  403cc7:	add    eax,DWORD PTR [eax-0x37]
  403cca:	jl     0x403cd0
  403ccc:	mov    ah,al
  403cce:	je     0x403c9f
  403cd0:	xor    esi,DWORD PTR [ebp+0x104b04ac]
  403cd6:	ret    0xc7fd
  403cd9:	into   
  403cda:	jmp    0x64d687e2
  403cdf:	rcr    DWORD PTR ds:0xa334c6c5,1
  403ce5:	or     eax,0xb14b03e8
  403cea:	xchg   ebx,eax
  403ceb:	enter  0x94b,0xe2
  403cef:	ret    
  403cf0:	dec    esp
  403cf1:	lea    edx,[ebp+0x4]
  403cf4:	dec    ebx
  403cf5:	or     esp,ebx
  403cf7:	pop    es
  403cf8:	dec    edx
  403cf9:	or     ecx,ebp
  403cfb:	cld    
  403cfc:	int    0x6a
  403cfe:	jmp    0xe96f8806
  403d03:	jle    0x403cd3
  403d05:	mov    eax,0x59cccd7f
  403d0a:	or     DWORD PTR [ebp+0x7ee9098f],0xcd67b8c6
	...
  403d3c:	mov    ah,0x59
  403d3e:	push   ecx
  403d3f:	inc    esp
  403d40:	lods   eax,DWORD PTR ds:[esi]
  403d41:	les    edx,FWORD PTR [esi-0x7]
  403d44:	in     al,0x3e
  403d46:	in     eax,dx
  403d47:	pop    ebx
  403d48:	fdiv   st,st(1)
  403d4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d4b:	add    eax,esi
  403d4d:	mov    ?,WORD PTR [edx]
  403d4f:	into   
  403d50:	mov    esp,es
  403d52:	add    BYTE PTR [ecx+0x2ef6e2a0],bl
  403d58:	mov    es,esp
  403d5a:	jne    0x403d4d
  403d5c:	cmp    BYTE PTR [ecx-0x3b81e9dc],dh
  403d62:	jmp    0x403d4a
  403d64:	xchg   edi,eax
  403d65:	or     BYTE PTR ds:[esp+eax*8-0x48],bl
  403d6a:	inc    BYTE PTR [esi]
  403d6c:	xchg   BYTE PTR [ecx-0x18],bl
  403d6f:	ds jne 0x403d36
  403d72:	jmp    DWORD PTR [eax-0x34]
  403d75:	mov    ah,0xfe
  403d77:	out    dx,al
  403d78:	comiss xmm0,DWORD PTR [eax]
  403d7b:	push   ebx
  403d7c:	dec    edi
  403d7d:	das    
  403d7e:	add    dl,BYTE PTR [ebx+0x47]
  403d81:	das    
  403d82:	add    eax,DWORD PTR [ecx+0x4f]
  403d85:	or     DWORD PTR [eax],eax
  403d87:	test   eax,0xc7ec7e0f
  403d8c:	pop    es
  403d8d:	(bad)  
  403d8e:	call   0x494960
  403d93:	pusha  
  403d94:	(bad)  
  403d95:	rol    DWORD PTR [eax+0x35],0xef
  403d99:	ret    0xf975
  403d9c:	pop    es
  403d9d:	ds or  al,0x9e
	...
  403dc8:	xchg   ebp,eax
  403dc9:	shr    eax,0xc7
  403dcc:	push   es
  403dcd:	(bad)  
  403dce:	jmp    DWORD PTR [edx-0x50]
  403dd1:	ret    
  403dd2:	jne    0x403d55
  403dd4:	lock faddp st(3),st
  403dd7:	jmp    0xfd1b4e24
  403ddc:	ret    
  403ddd:	ret    0x7db5
  403de0:	mov    es,ebx
  403de2:	call   DWORD PTR [ecx+0x45]
  403de5:	int    0x0
  403de7:	jmp    0x582cbb6b
  403dec:	xchg   edi,eax
  403ded:	ret    
  403dee:	call   0x3b814
  403df3:	add    BYTE PTR [ecx],bl
  403df5:	leave  
  403df6:	pop    ebx
  403df7:	leave  
  403df8:	pusha  
  403df9:	(bad)  
  403dfa:	call   DWORD PTR [ecx+ebp*8-0x1d]
  403dfe:	add    esp,0xffffd63e
  403e04:	mov    cl,0xd4
  403e06:	jne    0x403e14
  403e08:	dec    ebp
  403e09:	pop    ebx
  403e0a:	or     BYTE PTR [eax-0x71],ch
  403e0d:	push   ds
  403e0e:	inc    ecx
  403e0f:	add    BYTE PTR [ebp+0x1b],cl
  403e12:	inc    edx
  403e13:	sub    DWORD PTR [ebx+0x57b9e807],esp
  403e19:	iret   
  403e1a:	dec    DWORD PTR [ebx]
  403e1c:	jb     0x403de3
  403e1e:	test   dl,bl
  403e20:	xor    al,BYTE PTR [edi]
  403e22:	add    BYTE PTR [ebx],ch
  403e24:	or     DWORD PTR [ecx-0x7b],eax
  403e27:	out    dx,eax
  403e28:	or     al,0xcf
  403e2a:	call   DWORD PTR [eax+0x0]
	...
  403e51:	add    BYTE PTR [eax],al
  403e53:	add    BYTE PTR [edx+0x32000109],cl
  403e59:	(bad)  
  403e5b:	ret    
  403e5c:	and    al,BYTE PTR [edi]
  403e5e:	or     eax,eax
  403e60:	sbb    eax,0xf200bd43
  403e65:	push   es
  403e66:	cmp    eax,0x6f304
  403e6b:	pcmpgtw mm3,QWORD PTR [ebx+0x41e20000]
  403e72:	inc    ebp
  403e73:	cld    
  403e74:	and    ah,ch
  403e76:	mov    edx,0x8dcecde9
  403e7b:	test   DWORD PTR [ebp+0x32ffffcf],edi
  403e81:	in     eax,0x4f
  403e83:	std    
  403e84:	cmp    eax,0xb7c00bce
  403e89:	stos   BYTE PTR es:[edi],al
  403e8a:	addr16 mov bl,0x5a
  403e8d:	dec    esp
  403e8e:	add    BYTE PTR [ebp-0x121d9],cl
  403e94:	dec    ebx
  403e95:	pop    ebx
  403e96:	xor    al,0xe8
  403e98:	mov    bl,0x5d
  403e9a:	retf   
  403e9b:	call   DWORD PTR [ebp+eax*4-0x405cb005]
  403ea2:	sar    edi,1
  403ea4:	test   BYTE PTR [edi-0x5],al
  403ea7:	(bad)  
  403ea8:	mul    BYTE PTR [edi-0x159b7a88]
  403eae:	retf   0x1bff
  403eb1:	sbb    BYTE PTR [edx+0x341b64f5],bh
  403eb7:	inc    DWORD PTR [eax]
	...
  403edd:	add    BYTE PTR [eax],al
  403edf:	add    dh,dl
  403ee1:	adc    esi,DWORD PTR [eax+ebp*8]
  403ee4:	in     eax,dx
  403ee5:	push   ss
  403ee6:	retf   
  403ee7:	inc    DWORD PTR [eax-0x10]
  403eea:	dec    edi
  403eeb:	push   ebx
  403eec:	inc    esp
  403eed:	inc    ebp
  403eee:	(bad)  
  403eef:	call   0xb4810
  403ef4:	ret    0xcbf4
  403ef7:	sub    DWORD PTR [esi-0x768bfc58],0x2d
  403efe:	inc    eax
  403eff:	hlt    
  403f00:	jnp    0x403ed5
  403f02:	push   eax
  403f03:	cld    
  403f04:	and    ebx,DWORD PTR [edx]
  403f06:	rol    BYTE PTR [eax],0x4b
  403f09:	sub    eax,0x7b3978c3
  403f0e:	push   eax
  403f0f:	hlt    
  403f10:	rep lods eax,DWORD PTR ds:[esi]
  403f12:	mov    BYTE PTR [eax],0x4b
  403f15:	mov    bh,0xc3
  403f17:	je     0x403f3e
  403f19:	add    bl,cl
  403f1b:	jne    0x403f00
  403f1d:	xchg   DWORD PTR ds:0x7e92dcf2,eax
  403f23:	fdiv   DWORD PTR [ebx-0x75]
  403f26:	push   eax
  403f27:	clc    
  403f28:	js     0x403f4a
  403f2a:	fsubr  QWORD PTR [ecx+edi*4]
  403f2d:	cmp    cl,dl
  403f2f:	push   DWORD PTR [esi]
  403f31:	cmp    al,0xdb
  403f33:	out    0x89,al
  403f35:	or     cl,ch
  403f37:	add    eax,eax
  403f39:	dec    ebx
  403f3a:	in     eax,dx
  403f3b:	retf   0xc11e
  403f3e:	add    si,WORD PTR [ebx+0xca58cf]
	...
  403f69:	add    BYTE PTR [eax],al
  403f6b:	add    BYTE PTR [ecx+eax*8-0xd5c3844],dl
  403f72:	dec    edi
  403f73:	retf   0x8d84
  403f76:	sub    ch,BYTE PTR [esi]
  403f78:	xchg   edx,eax
  403f79:	(bad)  
  403f7a:	loope  0x403f7f
  403f7c:	push   ds
  403f7d:	mov    ss,WORD PTR ds:0xf143c032
  403f83:	fidivr WORD PTR [edx]
  403f85:	pop    edx
  403f86:	add    al,BYTE PTR [ecx]
  403f88:	ror    DWORD PTR [ecx-0x18],1
  403f8b:	jnp    0x403fd9
  403f8d:	dec    edx
  403f8e:	imul   ecx,DWORD PTR [edx],0x29f43c4b
  403f94:	xchg   esp,eax
  403f95:	dec    eax
  403f96:	imul   ecx,DWORD PTR [edx],0x8303356b
  403f9c:	je     0x403fac
  403f9e:	pop    ebp
  403f9f:	(bad)  
  403fa1:	add    bl,dh
  403fa3:	dec    edi
  403fa4:	sub    ecx,DWORD PTR [edx-0x1b6704ea]
  403faa:	bound  eax,QWORD PTR [edi+0x43]
  403fad:	sar    BYTE PTR [esp+edi*8],0x24
  403fb1:	xchg   DWORD PTR [ebx-0x4e73b4fc],ebp
  403fb7:	add    al,0x75
  403fb9:	call   0xc0738826
  403fbe:	leave  
  403fbf:	dec    edi
  403fc0:	push   esi
  403fc1:	mov    DWORD PTR ds:0x1d0ee40c,ebx
  403fc7:	cli    
  403fc8:	pop    esp
  403fc9:	cmp    eax,0x3541c8d1
  403fce:	out    dx,al
  403fcf:	add    DWORD PTR [eax],0x0
	...
  403ff6:	add    BYTE PTR [eax],al
  403ff8:	dec    edi
  403ff9:	add    DWORD PTR [esi-0x5],edi
  403ffc:	aas    
  403ffd:	or     BYTE PTR [eax],al
  403fff:	scas   eax,DWORD PTR es:[edi]
  404000:	or     eax,DWORD PTR [ecx]
  404002:	(bad)  
  404003:	jmp    0xec2b4b9f
  404008:	(bad)  
  404009:	int    0x5f
  40400b:	xor    BYTE PTR [ebp+0x1fbc0005],cl
  404011:	lods   eax,DWORD PTR ds:[esi]
  404012:	and    DWORD PTR ds:0x4835cab,0xffffffa7
  404019:	out    dx,eax
  40401a:	inc    eax
  40401b:	jmp    0x6a527568
  404020:	inc    esp
  404021:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404022:	cs test al,0x48
  404025:	or     DWORD PTR [eax+esi*8-0x39],esi
  404029:	dec    bl
  40402b:	iret   
  40402c:	or     DWORD PTR [ecx],ecx
  40402e:	add    BYTE PTR [ebx+ecx*2-0x6e4d400c],bl
  404035:	retf   
  404036:	or     cl,ch
  404038:	das    
  404039:	in     al,0xc7
  40403b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40403c:	adc    al,0x9
  40403e:	add    cl,ch
  404040:	dec    eax
  404041:	mov    es,WORD PTR [ebp-0xf]
  404044:	js     0x404006
  404046:	jne    0x404039
  404048:	mov    cs,WORD PTR [ecx]
  40404a:	push   esp
  40404c:	sub    bh,ch
  40404e:	inc    eax
  40404f:	jmp    0x32b4c073
  404054:	div    DWORD PTR [esi]
  404056:	ret    0x48e9
  404059:	xchg   esp,eax
  40405a:	shr    BYTE PTR [eax+eax*1+0x0],1
	...
  404082:	add    BYTE PTR [eax],al
  404084:	inc    ebp
  404085:	mov    ch,0x50
  404087:	inc    ebx
  404088:	daa    
  404089:	pop    ebx
  40408a:	call   esp
  40408c:	mov    esp,0xefe940ee
  404091:	jg     0x404107
  404093:	ror    BYTE PTR [ebx],1
  404095:	inc    esi
  404096:	in     al,0xe8
  404098:	dec    eax
  404099:	or     DWORD PTR [eax],eax
  40409b:	mov    es,WORD PTR [ebp+0x1f008fc1]
  4040a1:	(bad)  
  4040a3:	jne    0x4040eb
  4040a5:	inc    ecx
  4040a6:	inc    ebp
  4040a7:	in     al,dx
  4040a8:	xor    DWORD PTR [edi+0xc],eax
  4040ab:	add    BYTE PTR [esi+0x1245c6c2],bh
  4040b1:	push   es
  4040b2:	add    BYTE PTR [eax],al
  4040b4:	mov    dl,0xdc
  4040b6:	pop    es
  4040b7:	(bad)  
  4040b8:	out    dx,eax
  4040b9:	fild   DWORD PTR [eax]
  4040bb:	add    BYTE PTR [edx+0x78006a0b],ah
  4040c1:	or     ebp,DWORD PTR [edx+0x10]
  4040c4:	idiv   esi
  4040c6:	jecxz  0x404118
  4040c8:	mov    BYTE PTR [ebx],cl
  4040ca:	push   DWORD PTR [ebp+0x3e]
  4040cd:	rcl    DWORD PTR ds:0x4a94e4,1
  4040d3:	or     esi,DWORD PTR [edx]
  4040d5:	push   eax
  4040d6:	add    DWORD PTR [ebx-0xf],eax
  4040d9:	inc    esi
  4040da:	hlt    
  4040db:	add    BYTE PTR [esi+0x4e75fec3],bh
  4040e1:	loop   0x40407d
  4040e3:	shl    DWORD PTR [edx],0xb
  4040e6:	mov    eax,ebx
	...
  404110:	fld    DWORD PTR [ebx-0xfddf73e]
  404116:	mov    ch,ah
  404118:	and    eax,0x9ee80859
  40411d:	les    eax,FWORD PTR [eax]
  40411f:	add    BYTE PTR [edx-0xb],dh
  404122:	out    0xa0,eax
  404124:	repnz (bad) 
  404126:	call   DWORD PTR [eax+0x5]
  404129:	pop    ecx
  40412a:	or     BYTE PTR [eax+0x1a],dl
  40412d:	rol    DWORD PTR gs:[eax],0xf2
  404131:	repnz enter 0xeec2,0xa
  404136:	push   ebp
  404137:	mov    edx,esi
  404139:	mov    al,ah
  40413b:	cld    
  40413c:	and    DWORD PTR [edx-0x4fb4f783],ecx
  404142:	push   eax
  404143:	pop    es
  404144:	and    BYTE PTR [eax+0x2b],dh
  404147:	leave  
  404148:	or     DWORD PTR [ebp+0x1aa02b03],ebp
  40414e:	add    al,0x6a
  404150:	dec    ebx
  404151:	or     al,BYTE PTR [edx+ebp*2]
  404154:	dec    ebx
  404155:	or     al,bh
  404157:	push   DWORD PTR [esi]
  404159:	mov    eax,0xb0310059
  40415e:	fcmovnb st,st(4)
  404160:	mov    dh,BYTE PTR [eax-0x2b74f4fd]
  404166:	adc    cl,BYTE PTR [ecx+0x75c74406]
  40416c:	xchg   DWORD PTR [eax+0x2e],ebx
  40416f:	lock jl 0x404169
  404172:	cli    
  404173:	mov    edi,0x0
	...
  40419c:	inc    DWORD PTR [ebx]
  40419e:	jnp    0x404178
  4041a0:	loope  0x404151
  4041a2:	pop    ecx
  4041a3:	add    BYTE PTR [ebp+edx*4-0x39],ah
  4041a7:	push   ebx
  4041a8:	icebp  
  4041a9:	push   ss
  4041aa:	(bad)  
  4041ab:	jne    0x4041f0
  4041ad:	mov    al,BYTE PTR [ebx]
  4041af:	push   0x4b
  4041b1:	sbb    BYTE PTR [ebp-0x3f],ch
  4041b4:	dec    ebx
  4041b5:	mov    al,0xfa
  4041b7:	mov    edi,0xe832a8b6
  4041bc:	push   edx
  4041bd:	rol    dh,0xff
  4041c0:	pusha  
  4041c1:	retf   
  4041c2:	jp     0x404187
  4041c4:	cmp    BYTE PTR [ecx-0x3f],0x4
  4041c8:	dec    ebx
  4041c9:	std    
  4041ca:	jp     0x4041b8
  4041cc:	enter  0xd763,0x50
  4041d0:	js     0x4041f3
  4041d2:	xor    dl,BYTE PTR [edi-0x63]
  4041d5:	cmp    eax,DWORD PTR [eax+0xc]
  4041d8:	into   
  4041d9:	daa    
  4041da:	add    DWORD PTR [eax],0x4b
  4041dd:	mov    al,0x78
  4041df:	adc    al,0x6
  4041e1:	or     ecx,ebp
  4041e3:	add    ecx,DWORD PTR [ebx+0x9]
  4041e6:	jb     0x404193
  4041e8:	rcl    al,1
  4041ea:	test   al,0xdb
  4041ec:	dec    ebp
  4041ed:	nop
  4041ee:	and    al,0xd8
  4041f0:	sar    BYTE PTR [ebx],0xf1
  4041f3:	add    al,dl
  4041f5:	(bad)  
  4041f6:	out    0x83,al
  4041f8:	enter  0xb6a9,0x1a
  4041fc:	mov    al,0x89
  4041fe:	jb     0x40420b
	...
  404228:	cmp    DWORD PTR [edi],ecx
  40422a:	jmp    0x4b03:0xe948e3ca
  404231:	repnz sub DWORD PTR [edx],eax
  404234:	xchg   ebx,eax
  404235:	mov    ebp,0x55c2d7a4
  40423a:	add    DWORD PTR [ecx-0x2],edi
  40423d:	mov    eax,0xea4bfd26
  404242:	stos   DWORD PTR es:[edi],eax
  404243:	pop    esi
  404244:	mov    WORD PTR [esi-0x1b],es
  404247:	jl     0x4041e9
  404249:	retf   
  40424a:	push   ss
  40424b:	mov    esi,0xa71f110d
  404250:	mov    eax,ds:0x473d2ea0
  404255:	aaa    
  404256:	mov    ch,0x11
  404258:	cmp    edi,DWORD PTR [esi+0x3744d77c]
  40425e:	icebp  
  40425f:	js     0x4041e7
  404261:	mov    ecx,0x95edb99
  404266:	jmp    0xedc3716e
  40426b:	add    ecx,DWORD PTR [ebx+0x9]
  40426e:	jb     0x4042b7
  404270:	cmp    edi,DWORD PTR [eax+0x5f74268c]
  404276:	xor    BYTE PTR [ecx],ch
  404278:	jae    0x40424c
  40427a:	stos   DWORD PTR es:[edi],eax
  40427b:	clc    
  40427c:	add    al,0x56
  40427e:	jb     0x404258
  404280:	enter  0xc5,0xb5
  404284:	and    eax,0x381a5054
  404289:	push   edi
  40428a:	mov    ebx,DWORD PTR [eax+eax*1]
	...
  4042b1:	add    BYTE PTR [eax],al
  4042b3:	add    bl,ah
  4042b5:	(bad)  
  4042b6:	jge    0x4042a9
  4042b8:	arpl   WORD PTR [esi+0x10],ax
  4042bb:	pusha  
  4042bc:	adc    al,0xbd
  4042be:	mov    esp,esi
  4042c0:	push   ebx
  4042c1:	pop    esp
  4042c2:	add    al,0x72
  4042c4:	jle    0x4042d7
  4042c6:	mov    edx,DWORD PTR [esi]
  4042c8:	ret    
  4042c9:	(bad)  
  4042ca:	stc    
  4042cb:	mov    edx,0xbafae882
  4042d0:	or     BYTE PTR [esi+0x6510ee84],0x6a
  4042d7:	ss dec edx
  4042d9:	add    eax,ecx
  4042db:	sub    DWORD PTR [esi-0x7d9d3cf9],edx
  4042e1:	clc    
  4042e2:	clc    
  4042e3:	or     dl,BYTE PTR [edi-0x4930708]
  4042e9:	adc    edx,DWORD PTR [esi+0x7e]
  4042ec:	mov    dh,0xb1
  4042ee:	add    edx,DWORD PTR [edi-0xa3d3694]
  4042f4:	dec    ebx
  4042f5:	(bad)  [ebx+0x23c03a21]
  4042fb:	adc    edi,DWORD PTR [edx]
  4042fd:	ror    BYTE PTR [ebp+0x70df565d],0xc9
  404304:	or     BYTE PTR fs:[esi-0xf],cl
  404308:	or     edx,ecx
  40430a:	adc    edx,ebp
  40430c:	repnz (bad) 
  40430e:	cli    
  40430f:	mov    edx,0x1af8e800
  404314:	pop    ss
  404315:	mov    ds,WORD PTR [esi+edi*8+0x0]
	...
  404340:	test   dl,0xbd
  404343:	test   al,0x4b
  404345:	pop    ebx
  404346:	or     al,0xa8
  404348:	or     edx,DWORD PTR [ebx]
  40434a:	add    eax,DWORD PTR [eax]
  40434c:	stos   DWORD PTR es:[edi],eax
  40434d:	inc    eax
  40434e:	stc    
  40434f:	xor    ecx,DWORD PTR [eax]
  404351:	jmp    0x32f87750
  404356:	test   BYTE PTR [edi],al
  404358:	ins    DWORD PTR es:[edi],dx
  404359:	mov    ch,0x7b
  40435b:	cmc    
  40435c:	icebp  
  40435d:	std    
  40435e:	xadd   DWORD PTR [edx+0x69c302bc],esi
  404365:	shl    DWORD PTR [ebx],1
  404367:	stc    
  404368:	add    eax,edx
  40436a:	xor    edi,ecx
  40436c:	aas    
  40436d:	sub    al,0x17
  40436f:	sub    ah,ah
  404371:	cmp    al,0x47
  404373:	add    edx,DWORD PTR [ecx+edi*4-0x40]
  404377:	ret    0x88e
  40437a:	ror    BYTE PTR [ebx+0x23fb192a],1
  404380:	sub    BYTE PTR [ecx],bl
  404382:	sti    
  404383:	lea    ebp,[esi]
  404385:	mov    ch,0x12
  404387:	inc    esi
  404388:	xor    bl,BYTE PTR [ebp-0x3995b1fd]
  40438e:	rcl    DWORD PTR [ecx],0x71
  404391:	or     DWORD PTR [ebx+0x23cf71fa],0x8dcf71f9
  40439b:	pushf  
  40439c:	dec    ebp
  40439d:	or     BYTE PTR [ebp+0x5e093f46],dl
  4043a3:	sbb    al,0x0
	...
  4043c9:	add    BYTE PTR [eax],al
  4043cb:	add    BYTE PTR [ebx],ah
  4043cd:	leave  
  4043ce:	push   ss
  4043cf:	add    ebx,DWORD PTR [ebx]
  4043d1:	inc    ecx
  4043d2:	stc    
  4043d3:	xor    ecx,DWORD PTR [eax-0x17]
  4043d6:	cli    
  4043d7:	xor    ecx,DWORD PTR [eax+0x33]
  4043da:	test   BYTE PTR [edi],al
  4043dc:	pop    edx
  4043dd:	sub    BYTE PTR cs:[ecx+0x21],0xfd
  4043e2:	pop    ds
  4043e3:	shl    edx,0xe
  4043e6:	add    eax,ebx
  4043e8:	cdq    
  4043e9:	jp     0x40441e
  4043eb:	stc    
  4043ec:	dec    ebx
  4043ed:	bsf    esi,DWORD PTR [ebx]
  4043f0:	adc    bl,BYTE PTR [esi-0x68]
  4043f3:	pop    ss
  4043f4:	mov    ah,0x7b
  4043f6:	dec    eax
  4043f7:	mov    ecx,DWORD PTR [eax+0x12]
  4043fa:	call   0x6e54dbf
  4043ff:	rol    al,1
  404401:	js     0x4043fa
  404403:	cli    
  404404:	sub    BYTE PTR [esi-0x9],ah
  404407:	cli    
  404408:	into   
  404409:	sub    al,0x13
  40440b:	mov    cl,0x70
  40440d:	xchg   ebx,eax
  40440e:	ret    
  40440f:	add    edi,DWORD PTR [ebp-0x38]
  404412:	(bad)
  404416:	int    0x8b
  404418:	sar    DWORD PTR [edi-0x45],0x23
  40441c:	mov    dl,0x7f
  40441e:	mov    ebx,0x81cbcf8d
  404423:	xlat   BYTE PTR ds:[ebx]
  404424:	pop    es
  404425:	cmp    DWORD PTR [edi],eax
  404427:	pop    esi
  404428:	outs   dx,DWORD PTR ds:[esi]
  404429:	icebp  
  40442a:	(bad)  
  40442b:	push   ss
  40442c:	dec    eax
  40442d:	stc    
  40442e:	mov    ?,ecx
	...
  404458:	pop    eax
  404459:	push   esi
  40445a:	out    0xfa,eax
  40445c:	cmp    BYTE PTR [esi-0x6f],al
  40445f:	test   BYTE PTR [esi+ecx*1+0x15],al
  404463:	nop
  404464:	loopne 0x404414
  404466:	dec    ecx
  404467:	xor    BYTE PTR [edx-0x77fcf510],cl
  40446d:	aaa    
  40446e:	mov    edi,0xbbcf6233
  404473:	xor    edx,DWORD PTR [edx+0x25]
  404476:	cwde   
  404477:	pop    ss
  404478:	mov    eax,0x48fd9ba1
  40447d:	call   0xd006:0xac09c0f7
  404484:	shl    BYTE PTR [edi-0x4997050a],0xf6
  40448b:	cli    
  40448c:	(bad)  
  40448d:	or     BYTE PTR [ebp+0x12],dh
  404490:	int    0x45
  404492:	pusha  
  404493:	push   0x48
  404495:	dec    ebx
  404496:	adc    ebp,eax
  404498:	or     bl,BYTE PTR [eax]
  40449a:	jmp    0x28bb:0xfabed0cd
  4044a1:	sar    dl,0xbb
  4044a4:	(bad)  
  4044a5:	pushf  
  4044a6:	(bad)  
  4044a7:	in     al,0x44
  4044a9:	jne    0x4044cb
  4044ab:	pop    es
  4044ac:	test   ebp,edi
  4044ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044af:	(bad)  
  4044b0:	xor    eax,0xd28ec006
  4044b5:	cmc    
  4044b6:	xchg   ecx,eax
  4044b7:	out    0xd2,al
  4044b9:	cmc    
  4044ba:	(bad)  
  4044bb:	nop
	...
  4044e4:	iret   
  4044e5:	add    DWORD PTR [ebx],ecx
  4044e7:	jmp    0x4a2af84a
  4044ec:	dec    edi
  4044ed:	enter  0x8a9,0x48
  4044f1:	(bad)  
  4044f2:	bound  edi,QWORD PTR [esi-0x42f53ea8]
  4044f8:	pop    eax
  4044f9:	mov    esi,0x493c976c
  4044fe:	call   0x8a1b:0xb7058b43
  404505:	(bad)  
  404506:	lock push es
  404508:	fwait
  404509:	lea    eax,[ecx-0xa]
  40450c:	jb     0x4044f3
  40450e:	xor    esi,esi
  404510:	je     0x40449d
  404512:	pop    ebp
  404513:	adc    bh,dl
  404515:	pop    esi
  404516:	(bad)  
  404517:	jmp    0xc50d9065
  40451c:	mov    cl,BYTE PTR [edx]
  40451e:	jmp    0x68bc:0xdabec0cd
  404525:	mov    cl,0xba
  404527:	mov    ebp,0x6dde95ce
  40452c:	or     al,0x80
  40452e:	add    BYTE PTR [eax],al
  404530:	inc    ebp
  404531:	pop    ss
  404532:	shr    DWORD PTR [edx],0x3c
  404535:	or     al,0xd9
  404537:	jb     0x404519
  404539:	cld    
  40453a:	cli    
  40453b:	or     dl,ch
  40453d:	cld    
  40453e:	clc    
  40453f:	fs ret 
  404541:	adc    BYTE PTR [ebp-0x7],bl
  404544:	sti    
  404545:	fiadd  WORD PTR [ebx]
  404547:	das    
	...
  404570:	arpl   dx,cx
  404572:	shl    ah,0x4f
  404575:	int3   
  404576:	mov    esi,DWORD PTR [edx-0x4fdc3f0a]
  40457c:	fidiv  WORD PTR [ebx+0x5c427d8d]
  404582:	adc    al,0x25
  404584:	dec    ebp
  404585:	or     al,0x56
  404587:	ror    DWORD PTR [ecx],0xcc
  40458a:	or     edx,ebp
  40458c:	cwde   
  40458d:	test   al,bh
  40458f:	mov    edx,0xbafaecfe
  404594:	lock xchg BYTE PTR [esi+eiz*8-0x6e5e5037],cl
  40459c:	dec    esi
  40459d:	inc    edi
  40459e:	cmp    al,0x28
  4045a0:	mov    BYTE PTR [edi],al
  4045a2:	add    esi,DWORD PTR [ebx]
  4045a4:	(bad)  
  4045a5:	mov    bl,0x33
  4045a7:	push   eax
  4045a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045a9:	shl    BYTE PTR [ebx],0x53
  4045ac:	aam    0x95
  4045ae:	pop    ds
  4045af:	xor    DWORD PTR [esi-0x15151824],edi
  4045b5:	sbb    cl,al
  4045b7:	sub    dl,BYTE PTR [ebx+0xc]
  4045ba:	fldenv [edx-0x60]
  4045bd:	cld    
  4045be:	cli    
  4045bf:	retf   0xfc9e
  4045c2:	clc    
  4045c3:	ins    BYTE PTR es:[edi],dx
  4045c4:	ret    
  4045c5:	adc    dh,ah
  4045c7:	and    al,0xa8
  4045c9:	jmp    0xc0:0xc92ca702
  4045d0:	das    
  4045d1:	or     eax,0x8bc3
	...
  4045fa:	add    BYTE PTR [eax],al
  4045fc:	dec    ecx
  4045fd:	mov    esi,0xbd3b23f7
  404602:	cli    
  404603:	lea    edi,[esi+0x12]
  404606:	(bad)  
  404607:	pop    es
  404608:	cmp    eax,0x6a5603ce
  40460d:	int3   
  40460e:	ret    0x2109
  404611:	fmul   QWORD PTR [ebx+0x237761f8]
  404617:	sti    
  404618:	add    DWORD PTR [ebp+ecx*4-0x74],esi
  40461c:	in     eax,0x80
  40461e:	or     eax,0x4e0caed5
  404623:	or     al,0xb3
  404625:	retf   0x30e
  404628:	cwde   
  404629:	test   dl,bh
  40462b:	xor    ebp,DWORD PTR [ebx-0x47cc0854]
  404631:	xchg   BYTE PTR [edi+ebx*1+0x455a2047],bl
  404638:	mov    cl,0x29
  40463a:	and    cl,al
  40463c:	loope  0x40465d
  40463e:	add    ebx,ecx
  404640:	sub    DWORD PTR [ebx+0x33],esi
  404643:	sti    
  404644:	xchg   ecx,eax
  404645:	jne    0x40467a
  404647:	stc    
  404648:	pop    ss
  404649:	nop
  40464a:	pop    es
  40464b:	add    eax,0x3a96cfb
  404650:	fdivr  QWORD PTR [edi+0xc6fc0c0]
  404656:	ret    
  404657:	mov    ecx,DWORD PTR [ecx]
  404659:	mov    ebp,0xbd0b23f7
  40465e:	cli    
  40465f:	lea    eax,[eax]
	...
  404685:	add    BYTE PTR [eax],al
  404687:	add    BYTE PTR [esi],cl
  404689:	adc    eax,edi
  40468b:	mov    ds:0x56037825,eax
  404690:	pop    edx
  404691:	retf   0x9c2
  404694:	popa   
  404695:	fisttp DWORD PTR [ebx-0x422cb408]
  40469b:	and    eax,DWORD PTR [eax-0x2c]
  40469e:	mov    ebx,0xdabfcf8d
  4046a3:	add    ah,BYTE PTR [edi+ecx*4-0x1eb0b1fc]
  4046aa:	ror    DWORD PTR [esi],0x48
  4046ad:	jmp    0xf7e3:0xa958fa8b
  4046b4:	pop    eax
  4046b5:	stos   BYTE PTR es:[edi],al
  4046b6:	xchg   ecx,eax
  4046b7:	pushf  
  4046b8:	sub    al,0x2a
  4046ba:	push   eax
  4046bb:	sub    dl,dh
  4046bd:	mov    ds:0x640a305d,eax
  4046c2:	sbb    BYTE PTR [ebx],al
  4046c4:	adc    bh,BYTE PTR [edi*4-0x454c0ecd]
  4046cb:	(bad)  
  4046cc:	iret   
  4046cd:	scas   eax,DWORD PTR es:[edi]
  4046ce:	inc    ecx
  4046cf:	cmp    ecx,esp
  4046d1:	outs   dx,DWORD PTR ds:[esi]
  4046d2:	add    eax,DWORD PTR [esi+0x3f]
  4046d5:	popa   
  4046d6:	les    eax,FWORD PTR [eax+ecx*2]
  4046d9:	arpl   WORD PTR [ebx-0xc668705],cx
  4046df:	test   esi,0xbd811754
  4046e5:	mov    cl,0x86
  4046e7:	add    edx,DWORD PTR ds:0xc2c4c0
	...
  404711:	add    BYTE PTR [eax],al
  404713:	add    BYTE PTR [eax-0x5d],dl
  404716:	ror    DWORD PTR [ebx+0x33bb13a3],cl
  40471c:	xchg   ecx,eax
  40471d:	and    eax,0xc1690f90
  404722:	mov    al,ds:0xef96486d
  404727:	ror    BYTE PTR [edx-0x3f35fd30],0x4a
  40472e:	repz idiv DWORD PTR [eax]
  404731:	stc    
  404732:	nop
  404733:	pushf  
  404734:	inc    esp
  404735:	aam    0xfb
  404737:	in     al,0x5e
  404739:	or     edx,ebp
  40473b:	pop    ebp
  40473c:	adc    ecx,eax
  40473e:	sub    dl,BYTE PTR [edi]
  404740:	dec    eax
  404741:	shl    BYTE PTR [edx-0x43],1
  404744:	js     0x4046f9
  404746:	fidivr DWORD PTR [edx+0x47ee8cce]
  40474c:	and    DWORD PTR [edi+0x45],esi
  40474f:	add    eax,DWORD PTR [ebp+0x4fc4280d]
  404755:	or     ch,BYTE PTR [edx]
  404757:	mov    esp,DWORD PTR [eax]
  404759:	cli    
  40475a:	fcomip st,st(2)
  40475c:	sbb    al,0x84
  40475e:	jne    0x404776
  404760:	loop   0x404727
  404762:	mov    bh,0x4a
  404764:	dec    eax
  404765:	pop    edi
  404766:	stc    
  404767:	les    ecx,FWORD PTR [ecx]
  404769:	add    ch,dl
  40476b:	rol    eax,cl
  40476d:	mov    al,0xfa
  40476f:	mov    edx,0x8f64b338
  404774:	push   esp
  404775:	sub    DWORD PTR [edx],esp
  404777:	jnp    0x404779
	...
  40479d:	add    BYTE PTR [eax],al
  40479f:	add    ch,dl
  4047a1:	or     DWORD PTR [edi],esi
  4047a3:	and    BYTE PTR [edx],cl
  4047a5:	enter  0x2f9,0x1
  4047a9:	adc    BYTE PTR [ebx-0x7006430e],0x90
  4047b0:	fist   WORD PTR ds:0x76f47ff9
  4047b6:	jmp    0x4816:0xaac8635d
  4047bd:	shl    BYTE PTR [edx-0x44],1
  4047c0:	pop    eax
  4047c1:	mov    bl,0x1a
  4047c3:	mov    ebx,0xc5e68cc6
  4047c8:	or     eax,0xd030192
  4047cd:	std    
  4047ce:	daa    
  4047cf:	ret    
  4047d0:	inc    edi
  4047d1:	or     ch,BYTE PTR [edx]
  4047d3:	mov    dh,BYTE PTR [eax-0x7]
  4047d6:	aas    
  4047d7:	bnd je 0x40475d
  4047da:	add    BYTE PTR [ebp+0x3d],bl
  4047dd:	mov    bl,0x27
  4047df:	mov    BYTE PTR [edx-0x75d7e9f7],dh
  4047e5:	add    DWORD PTR [ebx],eax
  4047e7:	cmp    ecx,eax
  4047e9:	mov    al,0x33
  4047eb:	adc    bh,BYTE PTR [ecx]
  4047ed:	mov    bl,0x8d
  4047ef:	pop    ebp
  4047f0:	dec    ebp
  4047f1:	mov    ?,WORD PTR [eax]
  4047f3:	push   ss
  4047f4:	sbb    al,0x9
  4047f6:	dec    esi
  4047f7:	in     eax,dx
  4047f8:	pop    es
  4047f9:	retf   
  4047fa:	adc    dl,ch
  4047fc:	adc    al,BYTE PTR [ecx-0x71f4506]
  404802:	clc    
  404803:	je     0x404805
	...
  404829:	add    BYTE PTR [eax],al
  40482b:	add    bl,ch
  40482d:	adc    al,0x5
  40482f:	cld    
  404830:	ror    BYTE PTR ds:0xca673703,0xc3
  404837:	test   BYTE PTR [ebx-0x2e],0x8b
  40483b:	sar    dl,0xb2
  40483e:	xor    eax,edx
  404840:	mov    esp,0xf8f0078d
  404845:	fstp   st(1)
  404847:	jmp    0x843:0xa9c0ed86
  40484e:	ret    
  40484f:	jb     0x4047e3
  404851:	clc    
  404852:	clc    
  404853:	fiadd  DWORD PTR [eax]
  404855:	xchg   DWORD PTR [esi+esi*8-0x70246d1b],edx
  40485c:	dec    edx
  40485d:	pop    ebx
  40485e:	xor    BYTE PTR [eax-0x66fcff77],ch
  404864:	shl    BYTE PTR [ecx-0x4d658dcd],cl
  40486a:	lea    esi,[ebp+0x46]
  40486d:	mov    cl,0x7c
  40486f:	mov    ebp,DWORD PTR [esi]
  404871:	or     BYTE PTR [esi+0x15],cl
  404874:	mov    dl,cl
  404876:	adc    dl,ch
  404878:	xchg   edx,eax
  404879:	cmp    dl,0x0
  40487c:	jno    0x4048ee
  40487e:	xor    edi,ecx
  404880:	fild   QWORD PTR [eax+0x1f]
  404883:	les    esp,FWORD PTR gs:[esp+eax*8]
  404887:	add    ecx,esp
  404889:	add    cl,al
  40488b:	ret    
  40488c:	push   ebp
  40488d:	or     ecx,ebx
  40488f:	mov    edi,0x0
	...
  4048b8:	sub    eax,0x21ffff76
  4048bd:	jb     0x4048ca
  4048bf:	sti    
  4048c0:	and    DWORD PTR [edi-0x73],ebp
  4048c3:	test   BYTE PTR ds:0x3629224c,ah
  4048c9:	or     DWORD PTR [esi],eax
  4048cb:	shl    DWORD PTR [edx+0xb],0x3
  4048cf:	ret    
  4048d0:	ins    DWORD PTR es:[edi],dx
  4048d1:	jbe    0x4048d2
  4048d3:	jmp    FWORD PTR ds:0x2a0bf8b9
  4048d9:	mov    ecx,0x1d868dfa
  4048de:	xchg   edi,eax
  4048df:	dec    DWORD PTR [eax+0x4a]
  4048e2:	add    edx,DWORD PTR [esi-0x12]
  4048e5:	mov    dl,0xa
  4048e8:	loope  0x4048c1
  4048ea:	mov    edi,0xff749dff
  4048ef:	xor    ebx,DWORD PTR [ecx-0x55cc0600]
  4048f5:	or     BYTE PTR [edi+ecx*1-0x546c567b],0xb1
  4048fd:	inc    ebp
  4048fe:	cmp    cl,al
  404900:	repz add al,0x3
  404903:	retf   0x750d
  404906:	(bad)  
  404907:	jmp    FWORD PTR ds:0x1b0bf7b9
  40490d:	mov    ecx,0x150e8df9
  404912:	cmp    DWORD PTR [eax+0x5e037411],esp
  404918:	xchg   esi,eax
  404919:	mov    bl,0x15
	...
  404944:	dec    ebx
  404945:	lahf   
  404946:	fidivr DWORD PTR [edi-0x43bd84]
  40494c:	cmp    BYTE PTR [eax+0x8],cl
  40494f:	sti    
  404950:	cmp    BYTE PTR [ecx-0x72],cl
  404953:	test   BYTE PTR [edi+ebx*8+0x59],cl
  404957:	pop    ebx
  404958:	out    0x9e,al
  40495a:	inc    ebp
  40495b:	xor    BYTE PTR [edx-0x77fcfb1f],cl
  404961:	push   edx
  404962:	mov    esp,0xf01c44ff
  404967:	clc    
  404968:	push   eax
  404969:	sbb    al,dh
  40496b:	cli    
  40496c:	(bad)  
  40496d:	push   esp
  40496e:	adc    al,0x92
  404970:	jmp    DWORD PTR [esp+ecx*4-0x3d5382fd]
  404977:	ret    0x9f51
  40497a:	sar    DWORD PTR [edi-0x4453ec],cl
  404980:	pop    eax
  404981:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404982:	psubd  mm7,QWORD PTR [eax]
  404985:	fmul   DWORD PTR [ecx-0x4fbab374]
  40498b:	out    dx,eax
  40498c:	hlt    
  40498d:	lahf   
  40498e:	dec    ecx
  40498f:	sub    BYTE PTR [edx],cl
  404991:	bound  ecx,QWORD PTR [ebx]
  404993:	add    edx,DWORD PTR [ecx]
  404995:	cmp    al,0xbb
  404997:	(bad)  
  404998:	fsub   QWORD PTR [ebx-0x9]
  40499b:	test   DWORD PTR [eax+0x69],0x34bef9f7
  4049a2:	sbb    edx,ecx
  4049a4:	es and al,0x81
  4049a7:	add    eax,DWORD PTR [eax]
	...
  4049cd:	add    BYTE PTR [eax],al
  4049cf:	add    BYTE PTR ds:0x5ec3c4ac,bl
  4049d5:	lahf   
  4049d6:	fdivr  QWORD PTR [edi-0x44cc54]
  4049dc:	pop    eax
  4049dd:	psubq  mm3,QWORD PTR ss:[eax+0x39]
  4049e2:	mov    DWORD PTR [esp+ecx*2-0x1cc649f7],eax
  4049e9:	and    ch,dl
  4049eb:	inc    ecx
  4049ec:	sub    ecx,eax
  4049ee:	sub    DWORD PTR [edx],eax
  4049f0:	dec    eax
  4049f1:	(bad)  
  4049f2:	mov    ?,WORD PTR [ebx-0x8b94d8c]
  4049f8:	jae    0x4049f8
  4049fa:	inc    eax
  4049fb:	mul    DWORD PTR [ecx-0x7c]
  4049fe:	pop    ebp
  4049ff:	adc    ebp,DWORD PTR [ebx-0x55]
  404a02:	std    
  404a03:	mov    ecx,0xc4e55b48
  404a08:	mov    edi,edi
  404a0a:	jmp    0x16f24ee2
  404a0f:	mov    ebx,0xf11f63c
  404a14:	xor    esi,esi
  404a16:	add    BYTE PTR [ecx+0x46d501bf],cl
  404a1c:	dec    edx
  404a1d:	jmp    0x28c8:0x4349
  404a23:	or     ecx,DWORD PTR [eax-0x41]
  404a26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a27:	mov    edx,0xf6deb20c
  404a2c:	cld    
  404a2d:	std    
  404a2e:	iret   
  404a2f:	test   BYTE PTR [edx],0x84
  404a32:	ins    DWORD PTR es:[edi],dx
  404a33:	sbb    al,BYTE PTR [eax]
	...
  404a59:	add    BYTE PTR [eax],al
  404a5b:	add    BYTE PTR [edx+0x4849f117],ch
  404a61:	push   ebx
  404a62:	cmc    
  404a63:	les    ecx,FWORD PTR [eax]
  404a65:	sbb    al,0xea
  404a67:	fcomp  QWORD PTR [ecx+esi*4-0xa2b4552]
  404a6e:	mov    ds:0x9ff5d00e,al
  404a73:	mov    bh,cl
  404a75:	or     DWORD PTR [ebx+0x39],ebp
  404a78:	sbb    BYTE PTR [edx-0x37a4be16],bh
  404a7e:	test   eax,0x3ec64801
  404a83:	mov    edx,0x7600b1a4
  404a88:	xchg   ebp,eax
  404a89:	mov    al,0xb
  404a8b:	jno    0x404a2a
  404a8d:	scas   al,BYTE PTR es:[edi]
  404a8e:	lea    edi,[ebp+0x39]
  404a91:	cld    
  404a92:	icebp  
  404a93:	and    eax,DWORD PTR [edx]
  404a95:	push   es
  404a96:	push   esi
  404a97:	add    eax,0xea0ac686
  404a9c:	cwde   
  404a9d:	jno    0x404a9e
  404a9f:	inc    esi
  404aa0:	mov    cl,0xb1
  404aa2:	xor    eax,DWORD PTR [edx+0x55]
  404aa5:	scas   eax,DWORD PTR es:[edi]
  404aa6:	xor    esi,DWORD PTR [ecx]
  404aa8:	rol    DWORD PTR [edi+ecx*1+0x2ad97e72],cl
  404aaf:	jmp    0xc51:0x28c10102
  404ab6:	retf   0x156
  404ab9:	mov    cl,0xff
  404abb:	push   cs
  404abc:	cmp    eax,0xbb9
	...
  404ae5:	add    BYTE PTR [eax],al
  404ae7:	add    BYTE PTR ds:0x415d8db3,dh
  404aed:	call   0xc55e:0xced6fd3
  404af4:	bswap  ebp
  404af6:	adc    eax,0x7d84f1ea
  404afb:	icebp  
  404afc:	dec    ecx
  404afd:	or     BYTE PTR [ecx],al
  404aff:	ss dec ebx
  404b01:	or     cl,BYTE PTR [edi-0x1f]
  404b04:	dec    ecx
  404b05:	pop    eax
  404b06:	or     al,0xc6
  404b08:	test   BYTE PTR [ebp+0x8f378d],ch
  404b0e:	mov    esi,esp
  404b10:	sahf   
  404b11:	mov    al,0xff
  404b13:	adc    esi,DWORD PTR [eax+0x54]
  404b16:	pop    eax
  404b17:	inc    esi
  404b18:	jno    0x404adc
  404b1a:	ret    0x48ed
  404b1d:	push   esi
  404b1e:	mov    eax,DWORD PTR [ebp+0x36f8c5c6]
  404b24:	sbb    DWORD PTR [edi+eax*8+0x0],ebx
  404b28:	pop    edi
  404b29:	jno    0x404b2b
  404b2b:	add    BYTE PTR [edx-0x598a00f4],dh
  404b31:	add    DWORD PTR [ebp-0x8],0x653fb0ed
  404b38:	jecxz  0x404b46
  404b3a:	add    DWORD PTR [ebx],esp
  404b3c:	scas   eax,DWORD PTR es:[edi]
  404b3d:	jmp    0xfee5108
  404b42:	inc    ecx
  404b43:	add    bl,ch
  404b45:	sbb    eax,0xb01defcd
  404b4a:	inc    edi
  404b4b:	add    BYTE PTR gs:[eax],al
	...
  404b72:	add    BYTE PTR [eax],al
  404b74:	mov    bl,0xc
  404b76:	(bad)  
  404b77:	(bad)  
  404b79:	mov    edi,es
  404b7b:	add    eax,0x410fb6
  404b80:	lods   al,BYTE PTR ds:[esi]
  404b81:	inc    eax
  404b82:	xor    dl,BYTE PTR [eax]
  404b84:	ins    DWORD PTR es:[edi],dx
  404b85:	mov    al,0x4f
  404b87:	gs repz or esi,eax
  404b8b:	loope  0x404bfd
  404b8d:	(bad)  
  404b8e:	jmp    0x404bac
  404b90:	mov    ecx,0xef0307f0
  404b95:	ja     0x404c01
  404b97:	inc    eax
  404b98:	retf   0x653f
  404b9b:	inc    ecx
  404b9c:	and    bl,BYTE PTR [eax+ebp*8+0x63]
  404ba0:	sti    
  404ba1:	jo     0x404ba2
  404ba3:	sub    DWORD PTR [edi],0x71
  404ba6:	inc    eax
  404ba7:	call   0x405752
  404bac:	popa   
  404bad:	out    0xf7,eax
  404baf:	inc    eax
  404bb0:	xor    ebx,edx
  404bb2:	mov    ebx,DWORD PTR [ebp+0xa]
  404bb5:	test   ebx,eax
  404bb7:	inc    eax
  404bb8:	imul   ebp,edi,0x712f0307
  404bbe:	push   ebx
  404bbf:	push   0x41100e
  404bc4:	sbb    BYTE PTR [ebp+0x3c],0xe9
  404bc8:	dec    ebx
  404bc9:	xchg   edi,eax
  404bca:	mov    eax,0xc17e1601
  404bcf:	adc    DWORD PTR [edi],0xfffffffd
  404bd2:	inc    edx
  404bd3:	add    bl,cl
  404bd5:	and    ch,BYTE PTR [edi+esi*1+0x0]
	...
  404c00:	adc    eax,0x43eb84db
  404c05:	mov    dh,0xd
  404c07:	sub    al,0x2d
  404c0a:	push   ds
  404c0b:	inc    ecx
  404c0c:	dec    ebx
  404c0d:	mov    ds:0x49757844,al
  404c12:	mov    WORD PTR [eax],es
  404c14:	dec    ebx
  404c15:	mov    ds:0x466cc87c,al
  404c1a:	mov    eax,0xd7649eb
  404c1f:	sub    BYTE PTR [eax+0x4b411e25],0xa2
  404c26:	inc    esp
  404c27:	js     0x404c7e
  404c29:	cmp    bh,BYTE PTR [esi]
  404c2b:	or     al,0x2
  404c2d:	mov    ecx,0xd34b0003
  404c32:	aad    0xf7
  404c34:	sub    dl,al
  404c36:	retf   
  404c37:	sgdtd  [ebx+edx*4+0x65]
  404c3c:	mov    ah,BYTE PTR [eax+0x7dcf158a]
  404c42:	inc    edx
  404c43:	add    BYTE PTR [ebx],ah
  404c45:	cdq    
  404c46:	add    eax,DWORD PTR [eax]
  404c48:	dec    ebx
  404c49:	add    DWORD PTR [ebp+eiz*2-0x76],0x87158aa0
  404c51:	cmp    eax,0xcdc00045
  404c56:	dec    ebx
  404c57:	mov    ah,BYTE PTR gs:[eax+0x7a54c806]
  404c5e:	pop    es
  404c5f:	leave  
  404c60:	test   al,0xe0
  404c62:	and    BYTE PTR [ecx+0x0],al
	...
  404c89:	add    BYTE PTR [eax],al
  404c8b:	add    BYTE PTR [ebx+0x29],cl
  404c8e:	adc    DWORD PTR [esi+eiz*2+0x9],eax
  404c92:	sub    BYTE PTR [edx+edx*8],al
  404c95:	cld    
  404c96:	xor    BYTE PTR [ecx],ah
  404c98:	or     cl,BYTE PTR [ecx]
  404c9a:	dec    eax
  404c9b:	dec    eax
  404c9c:	cs dec eax
  404c9e:	jmp    0xc99a32d
  404ca3:	inc    ebp
  404ca4:	dec    ebx
  404ca5:	(bad)  
  404ca6:	mov    al,0x7
  404ca8:	xchg   ecx,eax
  404ca9:	push   0x25
  404cab:	and    DWORD PTR [edx],ecx
  404cad:	or     DWORD PTR [eax+0x11],esp
  404cb0:	sti    
  404cb1:	and    ebp,DWORD PTR [eax+0x5e14f103]
  404cb7:	xor    DWORD PTR [ebx+0x21],ebx
  404cba:	test   eax,0x41090a20
  404cbf:	xchg   ecx,eax
  404cc0:	arpl   WORD PTR [esi+0x4e055b46],bp
  404cc6:	xor    dl,al
  404cc8:	dec    edi
  404cc9:	or     DWORD PTR [edx+ecx*4-0x43da7599],ebx
  404cd0:	xchg   edx,eax
  404cd1:	mov    cl,0x26
  404cd3:	mov    bh,0x44
  404cd5:	and    ch,0xc8
  404cd8:	xlat   BYTE PTR ds:[ebx]
  404cd9:	and    ebp,DWORD PTR [eax+0x1c14c003]
  404cdf:	pushf  
  404ce0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ce1:	dec    eax
  404ce2:	jmp    0x333e5fed
  404ce7:	lea    eax,[edi-0x44]
  404cea:	pop    ebp
  404ceb:	and    DWORD PTR [edx+0x106009],ecx
	...
  404d15:	add    BYTE PTR [eax],al
  404d17:	add    dh,bh
  404d19:	nop
  404d1a:	dec    esp
  404d1b:	inc    ebp
  404d1c:	dec    ebx
  404d1d:	dec    eax
  404d1e:	push   esp
  404d1f:	fld    st(2)
  404d21:	enter  0xb6d6,0xf4
  404d25:	and    ebp,0x2826c388
  404d2b:	add    al,0xd0
  404d2d:	adc    al,0x6c
  404d2f:	das    
  404d30:	gs dec eax
  404d32:	add    cl,ch
  404d34:	(bad)  [ecx]
  404d36:	lea    ecx,ds:0xda00482d
  404d3c:	push   esp
  404d3d:	jl     0x404d93
  404d3f:	pop    es
  404d40:	push   es
  404d41:	or     DWORD PTR [ebx],esi
  404d43:	stos   DWORD PTR es:[edi],eax
  404d44:	lahf   
  404d45:	enter  0xe589,0xc3
  404d49:	xchg   esp,eax
  404d4a:	data16 sub BYTE PTR [edi+0x48],cl
  404d4e:	jne    0x404ce7
  404d50:	ror    DWORD PTR [ebx],1
  404d52:	inc    eax
  404d53:	or     al,0xe
  404d55:	or     DWORD PTR [ebx+0x41244cb4],ecx
  404d5b:	jmp    0xc4883931
  404d60:	pop    es
  404d61:	or     edi,edi
  404d63:	sbb    al,0x3
  404d65:	and    al,0x41
  404d67:	jmp    0x473c9131
  404d6c:	pop    ebx
  404d6d:	cmp    eax,0x7e48a865
  404d72:	inc    ebp
  404d73:	xor    edi,edx
  404d75:	pushf  
  404d76:	jmp    FWORD PTR [esi]
  404d78:	xchg   ebp,eax
  404d79:	adc    esi,0x72
	...
  404da3:	add    BYTE PTR ds:0xfecad2b5,al
  404da9:	call   0xc7816302
  404dae:	add    esp,ebp
  404db0:	ret    
  404db1:	gs gs test al,0x48
  404db5:	or     BYTE PTR [ebp+0x1],al
  404db8:	dec    ebx
  404db9:	xchg   edx,eax
  404dba:	jns    0x404e27
  404dbc:	jb     0x404d6a
  404dbe:	jne    0x404dad
  404dc0:	mov    BYTE PTR [esi-0x8],0x70
  404dc4:	cmp    al,0xad
  404dc6:	shl    DWORD PTR [edi+0x62fe8055],0xba
  404dcd:	retf   0xe4c3
  404dd0:	dec    ebx
  404dd1:	rol    DWORD PTR [ecx+0x0],1
  404dd4:	daa    
  404dd5:	sar    DWORD PTR [ecx-0x896214],0x8b
  404ddc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ddd:	adc    bh,0x33
  404de0:	daa    
  404de1:	jno    0x404e16
  404de3:	ret    0xacb1
  404de6:	mov    esp,?
  404de8:	inc    edi
  404de9:	dec    eax
  404dea:	add    BYTE PTR [ebx],al
  404dec:	ins    DWORD PTR es:[di],dx
  404dee:	add    eax,0x6ed0c9a1
  404df3:	jmp    DWORD PTR [edi-0x35ba708c]
  404df9:	cmp    BYTE PTR [ebp-0x4],0xe3
  404dfd:	imul   ebx,DWORD PTR [esi],0xffffff8b
  404e00:	sbb    al,0x82
  404e02:	repz shl DWORD PTR [ecx],0xac
  404e06:	add    bl,al
	...
  404e30:	mov    bl,0xdb
  404e32:	iret   
  404e33:	mov    ecx,0xffff760e
  404e38:	jmp    0xe95d9aa
  404e3d:	add    al,BYTE PTR [ebp-0x4]
  404e40:	push   ecx
  404e41:	mov    esi,0xca69c623
  404e46:	add    eax,DWORD PTR [edi+ebp*8]
  404e49:	dec    eax
  404e4a:	inc    cx
  404e4c:	xor    cl,BYTE PTR [ecx]
  404e4e:	inc    ebp
  404e4f:	clc    
  404e50:	daa    
  404e51:	aam    0xbc
  404e53:	sbb    ebp,DWORD PTR [ebp-0x72038a8a]
  404e59:	in     al,dx
  404e5a:	test   DWORD PTR [ecx-0x393e8c31],0x8bfe80fc
  404e64:	adc    edi,eax
  404e66:	ret    
  404e67:	add    eax,0x7541d021
  404e6c:	mov    ecx,0x1dffec2e
  404e71:	jne    0x404dfe
  404e73:	(bad)  
  404e74:	dec    ebx
  404e75:	daa    
  404e76:	int3   
  404e77:	xor    eax,DWORD PTR [esi+0x48c1f0be]
  404e7d:	sahf   
  404e7e:	xchg   BYTE PTR [ebp+eiz*2-0x71fcfc1f],dl
  404e85:	jp     0x404e85
  404e87:	aad    0xa
  404e89:	inc    eax
  404e8a:	retf   0x3eff
  404e8d:	data16 test BYTE PTR [ebp-0x3d],al
  404e91:	cmp    BYTE PTR [esi],dh
  404e93:	cld    
	...
  404ebc:	mov    bl,BYTE PTR [ebx+0x15]
  404ebf:	mov    ebp,DWORD PTR [ebp-0x773e4fda]
  404ec5:	pushf  
  404ec6:	add    al,bl
  404ec8:	or     dh,BYTE PTR [ebp-0x1dc9fe2d]
  404ece:	push   ds
  404ecf:	inc    ecx
  404ed0:	dec    ebx
  404ed1:	mov    eax,ds:0x60ee43ee
  404ed6:	add    eax,DWORD PTR [ecx]
  404ed8:	ds jp  0x404ef9
  404edb:	inc    ecx
  404edc:	dec    ebx
  404edd:	daa    
  404ede:	ds cld 
  404ee0:	dec    edx
  404ee1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ee2:	inc    edi
  404ee3:	or     ah,BYTE PTR gs:[edx-0x5f9cba78]
  404eea:	dec    BYTE PTR [edi-0x12]
  404eed:	pusha  
  404eee:	add    ecx,ecx
  404ef0:	mov    BYTE PTR [eax+ecx*4+0xb8e44ec],dl
  404ef7:	call   0x4378b6
  404efc:	enter  0xb418,0x75
  404f00:	gs sti 
  404f02:	sub    eax,0x7a973308
  404f07:	add    BYTE PTR [ebx-0x49],cl
  404f0a:	ret    
  404f0b:	jne    0x404f59
  404f0d:	clc    
  404f0e:	mov    bl,0xff
  404f10:	or     al,0x9c
  404f12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f13:	adc    edx,eax
  404f15:	or     DWORD PTR [ecx],ebp
  404f17:	add    bl,bl
  404f19:	(bad)  
  404f1a:	test   al,0x39
  404f1c:	dec    esp
  404f1d:	jno    0x404ef5
  404f1f:	mov    bl,0x0
	...
  404f45:	add    BYTE PTR [eax],al
  404f47:	add    ah,ch
  404f49:	stos   BYTE PTR es:[edi],al
  404f4a:	ret    0xd008
  404f4d:	or     DWORD PTR [edx+0x4],esi
  404f50:	adc    cl,al
  404f52:	in     eax,0x3
  404f54:	jle    0x404fd4
  404f56:	lds    eax,FWORD PTR [edi-0x8e545f9]
  404f5c:	mov    eax,ds:0x4a1def1f
  404f61:	pop    ds
  404f62:	jmp    0x404eff
  404f64:	jno    0x404fd6
  404f66:	jmp    0x8ef2176e
  404f6b:	cmp    DWORD PTR [ecx-0x62],ecx
  404f6e:	or     edi,DWORD PTR [edi-0x7d]
  404f71:	pop    ds
  404f72:	fld    DWORD PTR [eax-0x63e646f2]
  404f78:	ret    
  404f79:	mov    ds:0xc1edb36e,eax
  404f7e:	lods   al,BYTE PTR ds:[esi]
  404f7f:	mov    bl,0x49
  404f81:	or     DWORD PTR [edx+0x41],esi
  404f84:	pop    ebx
  404f85:	and    DWORD PTR [edx+ebp*1],0xffffffc2
  404f89:	cmp    al,0x5b
  404f8b:	xchg   esi,esp
  404f8d:	cld    
  404f8e:	call   0xa4be95ca
  404f93:	jmp    DWORD PTR [ecx+0xa]
  404f96:	push   0x31
  404f98:	aas    
  404f99:	or     DWORD PTR [ebp+edi*8+0x3f12bc9],esi
  404fa0:	mov    dh,0x5
  404fa2:	adc    ch,cl
  404fa4:	and    edx,edi
  404fa6:	adc    eax,0x7da14339
  404fab:	mov    dl,0x0
	...
  404fd1:	add    BYTE PTR [eax],al
  404fd3:	add    BYTE PTR [edx+ebp*4],ah
  404fd6:	push   0xffffffac
  404fd8:	sbb    al,0x34
  404fda:	jmp    0x404f7a
  404fdc:	aas    
  404fdd:	add    BYTE PTR [eax],0xac
  404fe0:	aam    0x1e
  404fe2:	adc    BYTE PTR [edx+edx*4-0x47],bl
  404fe6:	push   eax
  404fe7:	cmp    bl,bh
  404fe9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fea:	mov    eax,0xf88648e9
  404fef:	(bad)  
  404ff0:	xor    eax,DWORD PTR [ecx]
  404ff2:	push   ebx
  404ff3:	sar    ecx,0x70
  404ff6:	add    cl,ch
  404ff8:	aad    0xce
  404ffa:	mov    ebp,DWORD PTR [edx-0x1a3d3f7b]
  405000:	dec    eax
  405001:	push   esp
  405002:	mov    edi,DWORD PTR [ebp+0x2483521d]
  405008:	push   edi
  405009:	or     DWORD PTR [ebp-0xe],esi
  40500c:	and    BYTE PTR [eax],cl
  40500e:	add    cl,ch
  405010:	dec    eax
  405011:	dec    edx
  405012:	pop    ebx
  405013:	mov    al,ds:0x71fffc8e
  405018:	pop    ebx
  405019:	std    
  40501a:	mov    edx,0x948e9
  40501f:	add    eax,DWORD PTR [edi-0x56]
  405022:	jne    0x404ffd
  405024:	and    DWORD PTR [edx+0x78e0f175],ebp
  40502a:	mov    eax,0xc08448e9
  40502f:	xlat   BYTE PTR ds:[ebx]
  405030:	push   esp
  405031:	push   es
  405032:	clc    
  405033:	add    BYTE PTR [edx],dl
  405035:	sbb    DWORD PTR [ebx+0xc4],eax
	...
  40505f:	add    BYTE PTR [eax],bh
  405061:	or     DWORD PTR [ebp-0x1a],esi
  405064:	in     eax,0x7
  405066:	add    cl,ch
  405068:	dec    eax
  405069:	sahf   
  40506a:	add    al,BYTE PTR [edx+0x16]
  40506d:	xchg   ebp,eax
  40506e:	ret    
  40506f:	(bad)  
  405070:	(bad)  
  405071:	rol    dl,cl
  405073:	in     eax,dx
  405074:	dec    eax
  405075:	mov    eax,DWORD PTR ds:0xff4cdc7
  40507c:	fldcw  WORD PTR [eax-0x5760ff01]
  405082:	mov    es,WORD PTR [ebp-0xa5e2]
  405088:	pop    ebp
  405089:	xchg   ecx,eax
  40508a:	clc    
  40508b:	(bad)  
  40508c:	cmc    
  40508d:	pop    edx
  40508e:	add    BYTE PTR [eax],al
  405090:	repnz or al,0xc7
  405093:	test   DWORD PTR [esi],edx
  405095:	pop    esp
  405096:	(bad)  
  405097:	jmp    ebx
  405099:	or     al,0x0
  40509b:	add    BYTE PTR [edi+0x5ff0090],al
  4050a1:	pop    ebx
  4050a2:	push   DWORD PTR [ebp-0x26]
  4050a5:	mov    DWORD PTR [eax],eax
  4050a7:	lea    ebx,[edi+0x61]
  4050aa:	(bad)  
  4050ab:	push   ebp
  4050ad:	cmp    eax,0xd58006a
  4050b2:	lea    eax,[ebp-0xa42a]
  4050b8:	jb     0x4050c1
  4050ba:	add    al,ch
  4050bc:	inc    esi
  4050bd:	xor    eax,0x75310000
  4050c2:	push   DWORD PTR [eax+eax*1+0x0]
	...
  4050ea:	add    BYTE PTR [eax],al
  4050ec:	scas   al,BYTE PTR es:[edi]
  4050ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050ee:	mov    edi,0xbf9d9e75
  4050f3:	jmp    0x405164
  4050f5:	xor    al,0x1
  4050f7:	add    BYTE PTR [edx+0xc],dh
  4050fa:	leave  
  4050fb:	ret    0xc7a
  4050fe:	push   ebp
  4050ff:	mov    eax,DWORD PTR [esi]
  405101:	mov    es,esp
  405103:	cld    
  405104:	mov    eax,ds:0xa86adac5
  405109:	pop    ecx
  40510a:	jne    0x405114
  40510c:	cli    
  40510d:	daa    
  40510e:	(bad)  
  40510f:	call   DWORD PTR ds:0xde74bfa6
  405115:	add    eax,0xa3dfff5a
  40511a:	out    0x7f,eax
  40511c:	push   ebp
  40511d:	pop    edx
  40511e:	dec    DWORD PTR [ebx]
  405120:	dec    ebx
  405121:	repnz add dh,BYTE PTR ss:[eax]
  405125:	outs   dx,BYTE PTR ds:[esi]
  405126:	sbb    eax,0x7eb1b100
  40512b:	inc    ebp
  40512c:	adc    al,0x82
  40512e:	mov    al,0x75
  405130:	inc    ebx
  405131:	or     al,BYTE PTR [edi]
  405133:	mov    eax,0xc086b24b
  405138:	jge    0x40513c
  40513a:	jge    0x405181
  40513c:	pop    edi
  40513d:	jmp    0x174:0xb476ff46
  405144:	rcr    ah,1
  405146:	dec    DWORD PTR [edx+0x6a043c39]
  40514c:	dec    edx
  40514d:	xor    eax,0xff46
	...
  405176:	add    BYTE PTR [eax],al
  405178:	jnp    0x4051d9
  40517a:	ss or  al,0xc4
  40517d:	add    edx,DWORD PTR [edi+edi*8]
  405180:	ss sahf 
  405182:	fwait
  405183:	mov    eax,0x3bb08697
  405188:	push   es
  405189:	mov    ds:0xadb00235,al
  40518e:	xchg   bl,bl
  405190:	pop    ss
  405191:	ds jl  0x405157
  405194:	lock pop eax
  405196:	lds    edx,FWORD PTR [ebx+ecx*2]
  405199:	add    eax,0x6dcaec7d
  40519e:	add    edi,eax
  4051a0:	jl     0x4051d0
  4051a2:	push   esp
  4051a3:	sub    edx,DWORD PTR [eax-0x900b245]
  4051a9:	test   eax,0x5664189b
  4051ae:	mov    al,0xb
  4051b0:	mov    esp,DWORD PTR [ebp+0x28]
  4051b3:	push   0xfffffff1
  4051b5:	out    0x35,al
  4051b7:	or     BYTE PTR [ebx-0x55],ah
  4051ba:	mov    al,0xff
  4051bc:	inc    esp
  4051bd:	lods   al,BYTE PTR ds:[esi]
  4051be:	ret    
  4051bf:	jne    0x40520a
  4051c1:	or     DWORD PTR [edx],edx
  4051c3:	pop    eax
  4051c4:	retf   0xf924
  4051c7:	add    eax,DWORD PTR [ebx+0x9]
  4051ca:	jmp    0xe9a19e08
  4051cf:	sti    
  4051d0:	sbb    al,0xa7
  4051d2:	adc    al,BYTE PTR [eax+eax*8]
  4051d5:	dec    esp
  4051d6:	fstp   DWORD PTR ds:0x8664394b
	...
  405204:	dec    ebx
  405205:	mov    eax,ds:0xa69bafee
  40520a:	pop    esp
  40520b:	cld    
  40520c:	in     al,dx
  40520d:	and    dl,BYTE PTR [esi-0x5673b4fc]
  405213:	sub    eax,0x38fdb249
  405218:	dec    eax
  405219:	dec    edx
  40521a:	shl    bh,cl
  40521c:	test   BYTE PTR [edx-0x43fffec],dl
  405222:	inc    edx
  405223:	add    al,0x1b
  405225:	xchg   esp,eax
  405226:	fs add al,0xc3
  405229:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40522a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40522b:	push   esp
  40522c:	mov    ah,0x1c
  40522e:	in     eax,dx
  40522f:	scas   al,BYTE PTR es:[edi]
  405230:	sbb    ecx,edi
  405232:	xor    ch,bl
  405234:	psubw  mm5,QWORD PTR [ecx+0x31]
  405238:	cmp    ecx,DWORD PTR [ecx]
  40523a:	cld    
  40523b:	add    cl,BYTE PTR [eax]
  40523d:	mov    dl,0xe5
  40523f:	mov    BYTE PTR [eax+0x1d],dh
  405242:	push   eax
  405243:	jnp    0x4051cd
  405245:	inc    edx
  405246:	mov    al,ds:0xbc094fc2
  40524b:	jp     0x4052b4
  40524d:	mov    ah,BYTE PTR ds:0x55da14ac
  405253:	sbb    cl,BYTE PTR [ebx+0x3e]
  405256:	dec    esi
  405257:	cmp    DWORD PTR [ebx-0x4f],edx
  40525a:	sbb    cl,bl
  40525c:	push   esp
  40525d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40525e:	es dec ecx
  405260:	dec    edi
  405261:	or     DWORD PTR [eax],eax
  405263:	jmp    0x94cb5bb0
	...
  405290:	inc    eax
  405291:	xchg   ebx,eax
  405292:	adc    dh,BYTE PTR [edx+eax*4-0x5f]
  405296:	push   eax
  405297:	xchg   ebx,eax
  405298:	inc    esp
  405299:	xchg   esp,eax
  40529a:	inc    ebp
  40529b:	adc    eax,0xe175a67f
  4052a0:	in     eax,dx
  4052a1:	cmp    cl,BYTE PTR [esi+ebp*4]
  4052a4:	iret   
  4052a5:	and    edi,esp
  4052a7:	in     al,dx
  4052a8:	adc    dl,BYTE PTR ds:0x8b027d0a
  4052ae:	jge    0x4052a1
  4052b0:	dec    eax
  4052b1:	sbb    al,0xc9
  4052b3:	sbb    cl,BYTE PTR [edi]
  4052b5:	mov    dl,0x5
  4052b7:	jb     0x4052be
  4052b9:	mov    al,al
  4052bb:	jmp    0x3c48:0xe5c2d095
  4052c2:	mov    edx,ebp
  4052c4:	leave  
  4052c5:	int3   
  4052c6:	hlt    
  4052c7:	sbb    dh,BYTE PTR [ecx+esi*1-0x68]
  4052cb:	repz dec eax
  4052cd:	or     eax,ebp
  4052cf:	fsubrp st(4),st
  4052d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052d2:	push   DWORD PTR [eax+0x3]
  4052d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052d6:	lea    esp,[ebx+esi*8]
  4052d9:	cmp    al,ch
  4052db:	aad    0x91
  4052dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052de:	(bad)  
  4052df:	ficom  DWORD PTR [ecx-0x6eece1ce]
  4052e5:	sub    eax,0x9488300
  4052ea:	(bad)  
  4052eb:	cld    
  4052ec:	mov    esp,0xe0e175a5
  4052f1:	mov    esi,?
  4052f3:	data16 add BYTE PTR [eax],al
	...
  40531a:	add    BYTE PTR [eax],al
  40531c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40531d:	mov    eax,eax
  40531f:	out    dx,al
  405320:	(bad)  
  405321:	fadd   DWORD PTR [eax]
  405323:	jmp    0x55b5f970
  405328:	rcl    BYTE PTR [ebx+ebx*8+0x3d770d00],0x0
  405330:	or     BYTE PTR [edx],cl
  405332:	add    BYTE PTR [esi+0x37],dh
  405335:	xchg   BYTE PTR [ecx+eax*1],bl
  405338:	xor    cl,BYTE PTR [ecx]
  40533a:	push   DWORD PTR [ebp+0x56]
  40533d:	sbb    BYTE PTR [edx-0x1],0x4d
  405341:	jae    0x4052c8
  405343:	rol    dh,0xcc
  405346:	push   DWORD PTR [ebp+0x36]
  405349:	or     BYTE PTR [ebp-0x748cb223],0x55
  405350:	push   ss
  405351:	and    edx,DWORD PTR [edx]
  405353:	push   0xfffffff2
  405355:	add    BYTE PTR [ecx+eiz*1],dh
  405358:	repnz or bh,bh
  40535b:	jne    0x40534b
  40535d:	jbe    0x4053d4
  40535f:	hlt    
  405360:	or     eax,0x37c70c38
  405365:	jne    0x405367
  405367:	add    dl,dh
  405369:	or     BYTE PTR [eax-0x17],ch
  40536c:	cmp    DWORD PTR [eax+0x0],ecx
  40536f:	call   DWORD PTR [edi]
  405371:	pop    ecx
  405372:	call   0x4d9790
  405377:	push   ebx
  405378:	test   eax,0x393674c8
  40537d:	jne    0x4053e7
  40537f:	jmp    0x405384
	...
  4053a8:	cdq    
  4053a9:	inc    edi
  4053aa:	add    al,ch
  4053ac:	inc    edx
  4053ad:	and    DWORD PTR [eax],eax
  4053af:	add    BYTE PTR [ecx+0x19475770],dh
  4053b5:	(bad)  
  4053b6:	mov    ecx,0x87394
  4053bb:	mov    al,0x6f
  4053bd:	pop    edx
  4053be:	scas   al,BYTE PTR es:[edi]
  4053bf:	mov    eax,0xfffff816
  4053c4:	pop    ecx
  4053c5:	enter  0x47c6,0xd
  4053c9:	or     eax,0x4a4b5357
  4053ce:	mov    cl,0xb5
  4053d0:	dec    ebx
  4053d1:	mov    dl,0x7a
  4053d3:	inc    ebp
  4053d4:	push   ebx
  4053d5:	imul   eax,ebp,0x47
  4053d8:	dec    esp
  4053d9:	mov    ch,0x4c
  4053db:	pop    ebx
  4053dc:	mov    bl,0xd9
  4053de:	fadd   DWORD PTR [eax+0x4b]
  4053e1:	repz ss cld 
  4053e4:	and    esp,edx
  4053e6:	jbe    0x4053e8
  4053e8:	dec    ebx
  4053e9:	pop    edi
  4053ea:	clc    
  4053eb:	mov    edi,0xf878769f
  4053f0:	mov    bl,0xf9
  4053f2:	fadd   DWORD PTR [eax+0x4b]
  4053f5:	cli    
  4053f6:	in     al,0xb3
  4053f8:	dec    ebx
  4053f9:	mov    dl,0x0
  4053fb:	clc    
  4053fc:	pushf  
  4053fd:	jae    0x405477
  4053ff:	ffreep st(2)
  405401:	cmp    eax,0x824b0013
  405406:	(bad)  
  405407:	icebp  
  405408:	popf   
  405409:	imul   edx,DWORD PTR [edi+0x11],0x0
	...
  405433:	add    BYTE PTR [ebx-0x4e],cl
  405436:	fadd   st,st(0)
  405438:	add    eax,0x7c00aceb
  40543d:	call   FWORD PTR [ebx-0x539d2699]
  405443:	mov    ebx,DWORD PTR [esi]
  405445:	ret    0xd1f8
  405448:	aaa    
  405449:	scas   al,BYTE PTR es:[edi]
  40544a:	jp     0x40544e
  40544c:	mov    al,ds:0xbae853b3
  405451:	(bad)  
  405452:	lods   al,BYTE PTR ds:[esi]
  405453:	inc    DWORD PTR [esp+esi*2]
  405456:	inc    esp
  405457:	dec    DWORD PTR [esi-0xd]
  40545a:	dec    eax
  40545b:	call   FWORD PTR [esi]
  40545d:	es fwait
  40545f:	and    eax,0x83ac226e
  405464:	push   es
  405465:	sbb    al,BYTE PTR [ebx]
  405467:	ja     0x4054ad
  405469:	imul   eax,DWORD PTR [esi-0x8],0x4b
  40546d:	or     ecx,ebp
  40546f:	arpl   WORD PTR [ebx-0x5c],cx
  405472:	aam    0xab
  405474:	fs sbb eax,0x10d6ac5d
  40547a:	inc    ecx
  40547b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40547c:	push   esi
  40547d:	mov    ds:0x9cd6ac46,eax
  405482:	push   ecx
  405483:	xchg   BYTE PTR [ecx],ah
  405485:	mov    ds:0x1cfcf836,eax
  40548a:	jmp    0x405424
  40548c:	push   eax
  40548d:	push   cs
  40548e:	sub    DWORD PTR [edi],esi
  405490:	push   esp
  405491:	mov    ?,WORD PTR [edi+esi*4+0x3615f7d0]
	...
  4054c0:	dec    edi
  4054c1:	mov    ds:0x3814b794,al
  4054c6:	mov    ebp,0xe4220b86
  4054cb:	push   0x3e9094a
  4054d0:	sar    BYTE PTR [esi*8+0x5ca25977],1
  4054d7:	mov    al,0xec
  4054d9:	aaa    
  4054da:	icebp  
  4054db:	stos   BYTE PTR es:[edi],al
  4054dc:	pop    esi
  4054dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4054de:	sar    DWORD PTR [edi-0x17],0xa2
  4054e2:	into   
  4054e3:	jg     0x4054ed
  4054e5:	inc    ebx
  4054e6:	and    bh,BYTE PTR [ebp+0x50e91609]
  4054ec:	shl    BYTE PTR [ebp+0x3afbc06a],1
  4054f2:	sbb    bl,bh
  4054f4:	xchg   ecx,eax
  4054f5:	xor    ecx,ebp
  4054f7:	jecxz  0x4054a5
  4054f9:	mov    ds:0xa2a98291,al
  4054fe:	xchg   esi,eax
  4054ff:	jge    0x405507
  405501:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405502:	add    DWORD PTR [ebx+ebp*2],eax
  405505:	or     ecx,ebp
  405507:	fwait
  405508:	adc    ah,BYTE PTR [edi+0x4cd2ab7e]
  40550e:	add    BYTE PTR ds:0xe920095f,bh
  405514:	dec    eax
  405515:	mov    cl,0x6c
  405517:	dec    ebx
  405518:	mov    al,ds:0xeca489a2
  40551d:	xchg   ebx,eax
  40551e:	jge    0x405549
  405520:	out    dx,al
  405521:	in     al,0xff
  405523:	call   0x405528
	...
  40554c:	dec    eax
  40554d:	(bad)  
  40554e:	mov    edi,0x45c9ed3a
  405553:	sub    DWORD PTR [ebx],esi
  405555:	mov    ds:0x4c09e9ff,al
  40555a:	aam    0x2e
  40555c:	inc    eax
  40555d:	or     DWORD PTR [eax],eax
  40555f:	mov    bl,BYTE PTR cs:[ecx+0x948feff]
  405566:	call   FWORD PTR [esp+eiz*8-0x1fc6ba6f]
  40556d:	sbb    esi,DWORD PTR [esi+esi*2-0x5b724a76]
  405574:	or     BYTE PTR [ecx],bh
  405576:	push   0x800948e9
  40557b:	or     DWORD PTR [eax-0x5e],0x75
  40557f:	icebp  
  405580:	shl    BYTE PTR [esi-0x4c],1
  405583:	jmp    0x5e0063d0
  405588:	dec    ecx
  405589:	xchg   BYTE PTR [ebp-0x47],bh
  40558c:	dec    eax
  40558d:	sbb    al,0x5
  40558f:	rcl    BYTE PTR [edx-0x7616fff8],1
  405595:	dec    ebx
  405596:	mov    al,0xb6
  405598:	push   ecx
  405599:	or     DWORD PTR [eax],eax
  40559b:	pop    esp
  40559c:	or     ebx,DWORD PTR [ecx+0x50]
  40559f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055a0:	jnp    0x405607
  4055a2:	push   0x800948e9
  4055a7:	fs or  ecx,ecx
  4055aa:	push   eax
  4055ab:	and    DWORD PTR [ebx+0x5d],0x0
	...
  4055d6:	add    BYTE PTR [eax],al
  4055d8:	mov    ds:0x6f75bfa2,al
  4055dd:	test   BYTE PTR [ecx-0x74fa8e00],ch
  4055e3:	inc    ebp
  4055e4:	ds enter 0x0,0xf7
  4055e9:	lock mov edi,0xd46b9
  4055ef:	add    BYTE PTR [ecx-0x33],al
  4055f2:	rep stos BYTE PTR es:[edi],al
  4055f4:	sub    eax,0x623cc049
  4055f9:	add    eax,0x30ffff00
  4055fe:	pop    DWORD PTR [ebp-0x7a]
  405601:	retf   
  405602:	inc    ebp
  405603:	aam    0x65
  405605:	adc    eax,DWORD PTR [eax]
  405607:	add    BYTE PTR [ebp+0x49],bl
  40560a:	lock jmp DWORD PTR ds:0xef8d000d
  405611:	int3   
  405612:	push   eax
  405613:	push   0x22
  405615:	(bad)  
  405616:	(bad)  
  405617:	dec    BYTE PTR [edi+0x3e31e828]
  40561d:	or     al,0x0
  40561f:	or     esi,DWORD PTR [edx]
  405621:	lock add eax,0xbc6783
  405627:	jne    0x405609
  405629:	jge    0x40568b
  40562b:	(bad)  
  40562c:	jg     0x40569f
  40562e:	push   DWORD PTR [ebp-0x42]
  405631:	std    
  405632:	add    ch,BYTE PTR [ebx+eiz*1]
  405635:	add    eax,0x7dc675ff
  40563a:	retf   0xb3
	...
  405661:	add    BYTE PTR [eax],al
  405663:	add    BYTE PTR [edx-0x5d3b7cf4],dh
  405669:	mov    eax,ds:0x35da45b6
  40566e:	push   0x0
  405670:	in     eax,0xf0
  405672:	sti    
  405673:	call   0x3fc64c
  405678:	dec    ebx
  405679:	stos   DWORD PTR es:[edi],eax
  40567a:	ret    
  40567b:	jne    0x4056c6
  40567d:	mov    ebp,edi
  40567f:	mov    BYTE PTR [esi],al
  405681:	dec    edx
  405682:	test   eax,0x257ac775
  405687:	mov    dl,0x4b
  405689:	mov    dl,0x53
  40568b:	(bad)  
  40568c:	(bad)  
  40568d:	in     eax,dx
  40568e:	test   al,0x75
  405690:	mov    bl,0x3a
  405692:	dec    edi
  405693:	sti    
  405694:	fs aas 
  405696:	std    
  405697:	mov    edi,0x109cb3d6
  40569c:	push   esp
  40569d:	mov    ch,0x13
  40569f:	call   esi
  4056a1:	xchg   ebp,eax
  4056a2:	test   al,0x75
  4056a4:	add    edi,DWORD PTR [edx]
  4056a6:	out    dx,eax
  4056a7:	cld    
  4056a8:	cmp    al,0xd7
  4056aa:	jl     0x405684
  4056ac:	xor    al,0x55
  4056ae:	imul   ebp,eax,0x3e
  4056b1:	ds add al,0x0
  4056b4:	and    al,0x75
  4056b6:	outs   dx,DWORD PTR ds:[esi]
  4056b7:	call   0xffe9682a
  4056bc:	adc    al,0x75
  4056be:	addr16 call 0xffe9682a
  4056c4:	add    al,0x15
  4056c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056c7:	call   0x4056cc
	...
  4056f0:	pop    esi
  4056f1:	adc    DWORD PTR [ecx+0x4cf2c0ff],ebp
  4056f7:	pop    edi
  4056f8:	add    dh,BYTE PTR [edi+esi*8-0x1]
  4056fc:	jg     0x405719
  4056fe:	xchg   edi,eax
  4056ff:	add    DWORD PTR [edi],0xffffffb6
  405702:	jl     0x405749
  405704:	inc    edi
  405705:	stos   DWORD PTR es:[edi],eax
  405706:	ret    
  405707:	je     0x40574e
  405709:	outs   dx,DWORD PTR ds:[esi]
  40570a:	add    eax,DWORD PTR [eax]
  40570c:	dec    ebx
  40570d:	mov    dl,0x3
  40570f:	mov    DWORD PTR [esi],0x4b000356
  405715:	mov    dl,0x76
  405717:	inc    ebp
  405718:	scas   eax,DWORD PTR es:[edi]
  405719:	or     BYTE PTR [ecx],bh
  40571b:	test   eax,0x2e9e0d1e
  405720:	push   ebx
  405721:	mov    cl,0x0
  405723:	stos   BYTE PTR es:[edi],al
  405724:	xchg   esp,eax
  405725:	lahf   
  405726:	push   0x26
  405728:	(bad)  
  40572c:	icebp  
  40572d:	or     BYTE PTR [esi+0x2e],bh
  405730:	dec    edi
  405731:	mov    al,ds:0x3663a7fc
  405736:	outs   dx,DWORD PTR ds:[esi]
  405737:	test   al,0x6c
  405739:	cmp    BYTE PTR [esi+0x2e],ah
  40573c:	addr16 mov al,0x39
  40573f:	mov    ds:0xbab19f5c,eax
  405744:	mov    DWORD PTR [eax],edx
  405746:	jmp    0x6aed1799
  40574b:	mov    edi,0x3e262847
  405750:	aas    
  405751:	or     ecx,ebp
  405753:	and    DWORD PTR [eax],eax
	...
  405779:	add    BYTE PTR [eax],al
  40577b:	add    BYTE PTR [eax*2+0x334b092f],cl
  405782:	in     eax,dx
  405783:	jbe    0x405713
  405785:	popf   
  405786:	mov    ecx,0xe909cb1b
  40578b:	add    esp,DWORD PTR [ebx+0x4b030e9e]
  405791:	sahf   
  405792:	jl     0x40578f
  405794:	in     al,dx
  405795:	js     0x4057d1
  405797:	add    ecx,DWORD PTR [ebx-0x30]
  40579a:	sub    edi,edi
  40579c:	hlt    
  40579d:	xor    eax,0xc5c89762
  4057a2:	xchg   ebp,eax
  4057a3:	dec    edi
  4057a4:	js     0x40576c
  4057a6:	and    al,0x58
  4057a8:	dec    ebx
  4057a9:	or     ecx,ebp
  4057ab:	add    ebx,DWORD PTR [eax]
  4057ad:	ret    0x441
  4057b0:	cmp    ecx,DWORD PTR [ecx]
  4057b2:	jmp    0xbeea3a52
  4057b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057b8:	rol    BYTE PTR [eax+eax*1-0x57],cl
  4057bc:	push   edi
  4057bd:	or     DWORD PTR [eax],edx
  4057bf:	jmp    0x89cd090c
  4057c4:	in     al,dx
  4057c5:	sahf   
  4057c6:	mov    DWORD PTR [edi+ebp*1],esp
  4057c9:	xor    DWORD PTR [eax],eax
  4057cb:	stc    
  4057cc:	dec    eax
  4057cd:	or     eax,ebp
  4057cf:	push   cs
  4057d0:	out    0x9e,eax
  4057d2:	push   DWORD PTR [eax+0xa]
  4057d5:	pop    ebp
  4057d6:	(bad)  
  4057d7:	cld    
  4057d8:	mov    esp,0x48e93c60
  4057dd:	or     DWORD PTR [ebx],esi
  4057df:	test   eax,0x0
	...
  405808:	mov    eax,0xa4acc773
  40580d:	(bad)  
  40580f:	call   0x29b5f65c
  405814:	fadd   QWORD PTR [ebx-0x2c]
  405817:	dec    esi
  405818:	sbb    ah,BYTE PTR [ecx-0x71]
  40581b:	lods   al,BYTE PTR ds:[esi]
  40581c:	clc    
  40581d:	lds    eax,FWORD PTR [ebp+0x21]
  405820:	in     al,0xd
  405822:	add    cl,ch
  405824:	cmc    
  405825:	inc    ebx
  405826:	hlt    
  405827:	cs xor al,0x9e
  40582a:	push   DWORD PTR [edx+ecx*4-0x3b]
  40582e:	push   eax
  40582f:	xchg   ecx,eax
  405830:	dec    eax
  405831:	or     DWORD PTR [eax],eax
  405833:	imul   esi,DWORD PTR [ecx],0x1094ff09
  405839:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40583a:	mov    ch,0x3b
  40583c:	dec    edi
  40583d:	or     DWORD PTR [ebx],ecx
  40583f:	sub    DWORD PTR [ebx],edi
  405841:	pop    es
  405842:	xor    DWORD PTR [esp+eax*1+0x9],0x75
  405847:	in     al,0xcf
  405849:	fwait
  40584a:	add    cl,ch
  40584c:	dec    eax
  40584d:	mov    BYTE PTR [ebp-0x67],0xa5
  405851:	or     eax,0x4453e900
  405856:	mov    al,0x39
  405858:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405859:	adc    edi,DWORD PTR [eax+eax*1+0x51a]
  405860:	xor    ah,BYTE PTR [ecx]
  405862:	inc    ebp
  405863:	les    edx,FWORD PTR [edx+0x7d]
  405866:	nop
  405867:	mov    dl,0xa2
  405869:	or     DWORD PTR [ebx],ecx
  40586b:	rol    BYTE PTR [eax],0x0
	...
  405892:	add    BYTE PTR [eax],al
  405894:	inc    edi
  405895:	or     cl,ch
  405897:	fdiv   DWORD PTR [edx+0x678b0009]
  40589d:	sub    eax,0x20a200c6
  4058a2:	jge    0x405868
  4058a4:	or     esp,DWORD PTR [esi-0x658d0001]
  4058aa:	mov    edi,0x455f08f3
  4058af:	les    ebx,FWORD PTR [esi-0x12fffff7]
  4058b5:	fdiv   DWORD PTR [edi-0x38a65871]
  4058bb:	inc    ebp
  4058bc:	sbb    ah,BYTE PTR [edi+0xf]
  4058bf:	add    BYTE PTR [edx+0x5e],ah
  4058c2:	inc    ebp
  4058c3:	hlt    
  4058c4:	lea    edx,[ebx+0x49afffff]
  4058ca:	les    edx,FWORD PTR [eax+0x8]
  4058cd:	or     DWORD PTR [edx+0x0],ebp
  4058d0:	pop    ebp
  4058d1:	fnstcw WORD PTR [ebx+0x1af6e8]
  4058d7:	add    BYTE PTR [ecx],bl
  4058d9:	leave  
  4058da:	je     0x4058e2
  4058dc:	mov    eax,ds:0xb700d3f1
  4058e1:	or     ecx,ebp
  4058e3:	mov    edx,?
  4058e5:	or     BYTE PTR [eax],al
  4058e7:	push   DWORD PTR [edi-0x8]
  4058ea:	(bad)  
  4058eb:	jne    0x40590f
  4058ed:	arpl   WORD PTR [ebp-0x48],si
  4058f0:	retf   0x2a59
  4058f3:	inc    ecx
  4058f4:	bnd gs jne 0x4058b4
	...
  405920:	cli    
  405921:	into   
  405922:	mov    cl,0x0
  405924:	dec    ebx
  405925:	mov    dl,0x80
  405927:	les    esi,FWORD PTR [edi]
  405929:	mov    ebx,0x2a7456c
  40592e:	sbb    al,BYTE PTR [eax]
  405930:	mov    esp,0xb0e8c3d5
  405935:	pop    edx
  405936:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405937:	inc    DWORD PTR [eax+0x72]
  40593a:	das    
  40593b:	add    dh,BYTE PTR [eax-0x28ba84bc]
  405941:	jnp    0x405972
  405943:	mov    ah,0xa3
  405945:	push   ecx
  405946:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405947:	dec    DWORD PTR [ebx+ecx*4-0x58c43d1]
  40594e:	jae    0x405950
  405950:	dec    ebx
  405951:	add    ah,BYTE PTR [ebp+0x2f13b775]
  405957:	mov    ah,0x63
  405959:	clc    
  40595a:	stos   BYTE PTR es:[edi],al
  40595b:	jmp    DWORD PTR [edi+edx*4-0x3d]
  40595f:	jne    0x4059aa
  405961:	aaa    
  405962:	repz adc dh,0xa1
  405966:	add    esi,DWORD PTR [edi+esi*1+0x4b]
  40596a:	das    
  40596b:	adc    BYTE PTR [ebp+ebx*2-0x9],al
  40596f:	(bad)  
  405970:	mov    dh,0x16
  405972:	pushf  
  405973:	inc    eax
  405974:	xor    dl,bl
  405976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405977:	or     ecx,DWORD PTR [ebx]
  405979:	push   ebp
  40597a:	add    ebx,ebp
  40597c:	cmp    al,0x17
  40597e:	int3   
  40597f:	or     eax,DWORD PTR [eax]
  405981:	jbe    0x405995
  405983:	lea    eax,[eax]
	...
  4059a9:	add    BYTE PTR [eax],al
  4059ab:	add    BYTE PTR [esi-0x6900abba],cl
  4059b1:	xchg   esi,eax
  4059b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059b3:	jne    0x405974
  4059b5:	stc    
  4059b6:	or     bh,bl
  4059b8:	cld    
  4059b9:	call   0xe86f:0x1cf4d878
  4059c0:	cli    
  4059c1:	loopne 0x4059c6
  4059c3:	add    ah,ah
  4059c5:	or     BYTE PTR [esp+eax*8-0xd],bl
  4059c9:	stc    
  4059ca:	mov    ebp,0x5c9bd4a4
  4059cf:	push   0xa4ae11e3
  4059d4:	les    ebx,FWORD PTR [ebx+0x9b36c3c]
  4059da:	sahf   
  4059db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059dc:	mov    ah,0x87
  4059de:	xor    al,0x58
  4059e0:	dec    ebx
  4059e1:	adc    eax,0x6d1ea4e1
  4059e6:	xchg   ecx,eax
  4059e7:	mov    al,0x7d
  4059e9:	fwait
  4059ea:	sahf   
  4059eb:	js     0x405975
  4059ed:	aas    
  4059ee:	ss mov ebx,0x4ee8f889
  4059f4:	shr    BYTE PTR [edx+ebp*2-0x2dc87c41],1
  4059fb:	enter  0x1dc8,0xe5
  4059ff:	add    esi,edi
  405a01:	dec    edx
  405a02:	push   0x26
  405a04:	cmp    ecx,DWORD PTR [ecx]
  405a06:	fnstsw WORD PTR [ebx]
  405a08:	into   
  405a09:	inc    ebp
  405a0a:	pop    ebp
  405a0b:	push   ebx
  405a0c:	push   esp
  405a0d:	adc    eax,0x9be5
	...
  405a36:	add    BYTE PTR [eax],al
  405a38:	push   edi
  405a39:	pop    eax
  405a3a:	jmp    0xc20a2842
  405a3f:	repz cmp eax,0xcf9bed15
  405a45:	mov    bl,0x36
  405a47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a48:	ret    0x3144
  405a4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a4c:	sahf   
  405a4d:	popf   
  405a4e:	adc    DWORD PTR [esi-0x14],esp
  405a51:	or     ecx,ebp
  405a53:	clc    
  405a54:	aam    0x15
  405a56:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a58:	xchg   esi,eax
  405a59:	stc    
  405a5a:	or     eax,0x63a032e
  405a5f:	cs push ebx
  405a61:	mov    cl,0xea
  405a63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a64:	hlt    
  405a65:	call   0xed75:0x9b006200
  405a6c:	shl    DWORD PTR [ebx-0x51],0xe9
  405a70:	dec    eax
  405a71:	call   0xd6d8:0x41a0ed75
  405a78:	test   al,0x8e
  405a7a:	ret    
  405a7b:	xor    dl,BYTE PTR [esi-0x7c16f339]
  405a81:	mov    gs,esp
  405a83:	push   0xb6fe1983
  405a88:	call   0xe97be019
  405a8d:	call   0xe901:0x86f39ff
  405a94:	dec    eax
  405a95:	mov    cl,0x63
  405a97:	pop    eax
  405a98:	inc    edi
  405a99:	or     ecx,ecx
  405a9b:	stos   BYTE PTR es:[edi],al
	...
  405ac4:	inc    edx
  405ac5:	mov    gs,esp
  405ac7:	push   0x2a
  405ac9:	adc    DWORD PTR [eax],eax
  405acb:	cmc    
  405acc:	dec    ecx
  405acd:	xchg   BYTE PTR [ebp-0x27],bh
  405ad0:	dec    eax
  405ad1:	adc    eax,0xf5426e19
  405ad6:	(bad)  
  405ad7:	fcom   QWORD PTR [eax-0x4f]
  405ada:	fiadd  DWORD PTR [ebx-0x58]
  405add:	call   0xdd75:0x9b58dcff
  405ae4:	jmp    0x459162fc
  405ae9:	mov    esi,0xc7063eff
  405aee:	adc    cl,ch
  405af0:	jae    0x405a80
  405af2:	in     al,dx
  405af3:	push   0x6a
  405af5:	adc    DWORD PTR [eax],eax
  405af7:	popf   
  405af8:	sbb    al,0x87
  405afa:	jge    0x405ae9
  405afc:	dec    eax
  405afd:	adc    eax,0xf9321616
  405b02:	(bad)  
  405b03:	xchg   esp,eax
  405b04:	push   eax
  405b05:	mov    cl,0xae
  405b07:	add    BYTE PTR [eax],ch
  405b09:	data16 (bad) 
  405b0b:	(bad)  
  405b0c:	jg     0x405b18
  405b0e:	push   DWORD PTR [ebp-0x16]
  405b11:	ins    DWORD PTR es:[edi],dx
  405b12:	add    eax,0xc966f5db
  405b17:	ret    0x5d6
  405b1a:	push   ebp
  405b1b:	mov    eax,DWORD PTR [esi]
  405b1d:	add    esp,0xfffffff0
  405b20:	cmc    
  405b21:	add    BYTE PTR [eax+ebp*8],cl
  405b24:	jne    0x405b88
  405b26:	(bad)  
  405b27:	inc    DWORD PTR [eax]
	...
  405b4d:	add    BYTE PTR [eax],al
  405b4f:	add    BYTE PTR [ebx],bh
  405b51:	push   ecx
  405b52:	or     al,0x83
  405b54:	ja     0x405b4f
  405b56:	push   DWORD PTR [ebx+0x4c]
  405b59:	data16 jne 0x405b68
  405b5c:	mov    cl,dl
  405b5e:	loop   0x405b5f
  405b60:	in     eax,0xa
  405b62:	shl    BYTE PTR [eax+eiz*2+0x78],0x45
  405b67:	lock push edx
  405b69:	data16 jne 0x405b78
  405b6c:	retf   0xe383
  405b6f:	inc    ebp
  405b71:	or     al,al
  405b73:	je     0x405b25
  405b75:	test   BYTE PTR [ebp-0x4],bh
  405b78:	bound  eax,QWORD PTR ds:0xa5610010
  405b7e:	(bad)  
  405b7f:	jne    0x405b67
  405b81:	data16 jne 0x405b7c
  405b84:	cli    
  405b85:	mov    al,ds:0xaf5ffe6
  405b8a:	shl    BYTE PTR [ebp+0x43],0x6c
  405b8e:	jne    0x405ba0
  405b90:	test   ecx,esi
  405b92:	sti    
  405b93:	(bad)  
  405b94:	push   DWORD PTR [edi+edi*8+0x75]
  405b98:	sub    ah,BYTE PTR [ebp+0x4f]
  405b9b:	push   DWORD PTR [ebp+0x6b]
  405b9e:	lea    eax,[ebp+0x42]
  405ba1:	fsubr  st(7),st
  405ba3:	loopne 0x405be6
  405ba5:	imul   edi,edi,0xffffffff
  405ba8:	dec    ebx
  405ba9:	jne    0x405bba
  405bab:	call   0xffe24162
  405bb0:	adc    ah,ch
  405bb2:	push   cs
	...
  405bdb:	add    BYTE PTR [esi+0x783af1b],bl
  405be1:	xchg   ebx,eax
  405be2:	mov    eax,ds:0xb10a5775
  405be7:	loop   0x405bc5
  405be9:	scas   eax,DWORD PTR es:[edi]
  405bea:	mov    eax,DWORD PTR [ebp+0x47]
  405bed:	and    ebx,DWORD PTR [edi]
  405bef:	or     al,0x4b
  405bf1:	ss dec ecx
  405bf3:	(bad)  
  405bf4:	ds mov dh,0xab
  405bf7:	pop    edx
  405bf8:	test   eax,0x8b0ba1cf
  405bfd:	(bad)  
  405bff:	mov    WORD PTR [esi],es
  405c01:	push   edx
  405c02:	xor    al,0xff
  405c04:	push   ds
  405c05:	mov    dh,0xab
  405c07:	adc    DWORD PTR [eax-0x74f45e91],ebp
  405c0d:	(bad)  
  405c0e:	in     al,0x80
  405c10:	push   cs
  405c11:	jle    0x405c17
  405c13:	add    BYTE PTR [ebx-0x5e],bl
  405c16:	adc    al,0x11
  405c18:	jl     0x405baf
  405c1a:	repz (bad) 
  405c1c:	(bad)  
  405c1d:	adc    eax,0x1f7375a1
  405c22:	pop    ss
  405c23:	or     BYTE PTR [ebx+0x15],dh
  405c26:	mov    ds:0x471d5cff,al
  405c2b:	lock sti 
  405c2d:	cmp    DWORD PTR [edx],esp
  405c2f:	jecxz  0x405c7d
  405c31:	aas    
  405c32:	mov    eax,ds:0x494a5775
  405c37:	fnstsw WORD PTR [edi+ecx*2]
  405c3a:	retf   
  405c3b:	ret    0xa247
  405c3e:	mov    eax,DWORD PTR ss:[eax]
	...
  405c65:	add    BYTE PTR [eax],al
  405c67:	add    BYTE PTR [edi],bl
  405c69:	and    ecx,eax
  405c6b:	lock js 0x405c79
  405c6e:	mov    ebp,0xf10996ff
  405c73:	stos   DWORD PTR es:[edi],eax
  405c74:	ret    0x1eaa
  405c77:	mov    eax,ds:0x84e14dc2
  405c7c:	xchg   BYTE PTR [ecx],al
  405c7e:	jmp    0x7cd8e19a
  405c83:	or     esp,ebx
  405c85:	popf   
  405c86:	or     BYTE PTR [ecx+0x182903ec],ah
  405c8c:	sbb    DWORD PTR [esi-0x67846c5c],eax
  405c92:	pop    esp
  405c93:	or     al,0xe3
  405c95:	fs retf 
  405c97:	mov    al,ds:0x17a903cc
  405c9c:	imul   ecx,DWORD PTR [edx+0x94ba04c],0xf93803d9
  405ca6:	mov    ebp,0x3c97af16
  405cab:	pushf  
  405cac:	mov    bl,0xd7
  405cae:	(bad)  
  405caf:	mov    al,ds:0x17a9039c
  405cb4:	dec    edx
  405cb5:	dec    esp
  405cb6:	ins    BYTE PTR es:[edi],dx
  405cb7:	inc    esi
  405cb8:	fwait
  405cb9:	cmp    BYTE PTR [ecx-0x71689603],al
  405cbf:	mov    al,ds:0xa49100f6
  405cc4:	xchg   edi,eax
  405cc5:	xchg   edi,eax
  405cc6:	jle    0x405c54
  405cc8:	mov    BYTE PTR [ebx],dh
  405cca:	mov    al,ds:0xc5
	...
  405cf3:	add    BYTE PTR [edi+0x9],cl
  405cf6:	adc    al,0x8d
  405cf8:	outs   dx,DWORD PTR ds:[esi]
  405cf9:	mov    DWORD PTR ds:0x5e975557,ebp
  405cff:	enter  0x50c6,0x57
  405d03:	mov    al,ds:0x3e90a44
  405d08:	dec    ebx
  405d09:	sub    BYTE PTR [edi+ecx*1+0x6b5c940],0xcb
  405d11:	sar    edi,1
  405d13:	call   0xb2296955
  405d18:	dec    ecx
  405d19:	or     DWORD PTR [eax],eax
  405d1b:	es cmp eax,0xe348e805
  405d21:	xchg   esi,eax
  405d22:	jmp    edx
  405d24:	or     BYTE PTR ds:0xe564810f,bl
  405d2a:	inc    eax
  405d2b:	jmp    0x114c79db
  405d30:	jmp    0x6804:0xb0f6ffb6
  405d37:	inc    eax
  405d38:	in     al,dx
  405d39:	dec    ecx
  405d3a:	add    dh,ah
  405d3c:	xor    al,BYTE PTR ds:0x96a70ee8
  405d42:	jmp    DWORD PTR [eax-0x2e]
  405d45:	push   ecx
  405d46:	dec    dh
  405d48:	fsub   QWORD PTR [ecx]
  405d4a:	ds call 0x64cd6698
  405d50:	mov    DWORD PTR [edi-0x5ea04901],edx
  405d56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d57:	lea    eax,[eax]
	...
  405d7d:	add    BYTE PTR [eax],al
  405d7f:	add    BYTE PTR [esi+edx*4-0x68769373],bh
  405d86:	call   FWORD PTR [esi+0x51b59657]
  405d8c:	in     eax,0x96
  405d8e:	inc    DWORD PTR [ecx-0x16ff9b58]
  405d94:	(bad)  
  405d95:	mov    WORD PTR [edi+edi*2-0x19bf6934],?
  405d9c:	int3   
  405d9d:	repz add cl,ch
  405da0:	dec    eax
  405da1:	test   BYTE PTR [ebp-0x694ad5],dl
  405da7:	push   esi
  405da8:	dec    ecx
  405da9:	stc    
  405daa:	(bad)  
  405dab:	call   0x6ac463f8
  405db0:	inc    edi
  405db1:	or     DWORD PTR [eax],eax
  405db3:	add    BYTE PTR [edi+0x1a502c4b],bh
  405db9:	pop    ss
  405dba:	sub    al,0x41
  405dbc:	xor    ah,BYTE PTR [edx-0x44]
  405dbf:	lods   eax,DWORD PTR ds:[esi]
  405dc0:	xor    cl,BYTE PTR [edx]
  405dc2:	or     eax,eax
  405dc4:	mov    bh,0x0
  405dc6:	jmp    0x4a8097
  405dcb:	lea    eax,[edi+0x4dfffecb]
  405dd1:	js     0x405e15
  405dd3:	sub    al,0xd2
  405dd5:	loope  0x405d77
  405dd7:	sub    al,0xa3
  405dd9:	or     eax,ebp
  405ddb:	lahf   
  405ddc:	(bad)  
  405ddd:	or     eax,0xf0320b00
  405de2:	add    al,0xe9
	...
  405e0c:	mov    ebp,0xed000009
  405e11:	lock or ebp,eax
  405e14:	lahf   
  405e15:	imul   edi,edi,0xffffffff
  405e18:	test   eax,0x1a0f75c9
  405e1d:	cmp    ch,BYTE PTR [eax]
  405e1f:	inc    ecx
  405e20:	mov    ds:0x8a0c7576,al
  405e25:	pandn  mm7,mm7
  405e28:	in     eax,dx
  405e29:	bound  ecx,QWORD PTR [edx]
  405e2b:	push   0xffffffa2
  405e2d:	jbe    0x405ea4
  405e2f:	or     al,0xba
  405e31:	sbb    edi,0xffffffff
  405e34:	fnstsw WORD PTR [eax-0x6b]
  405e37:	ret    0x76cc
  405e3a:	dec    DWORD PTR [ebp+0x50519950]
  405e40:	ficom  DWORD PTR [edi-0x21]
  405e43:	(bad)  
  405e44:	fstp   st(1)
  405e46:	(bad)  
  405e47:	jne    0x405ec3
  405e49:	jbe    0x405ec0
  405e4b:	adc    al,0xed
  405e4d:	lock movmskps ebp,xmm5
  405e51:	lock pop es
  405e53:	call   0xffdd90a3
  405e58:	cmp    al,0x4b
  405e5a:	(bad)  
  405e5b:	(bad)  [esp+ecx*2]
  405e5e:	stos   BYTE PTR es:[edi],al
  405e5f:	pusha  
  405e60:	mov    esi,0xce88ef60
  405e65:	push   ss
  405e66:	popf   
  405e67:	call   FWORD PTR [eax+eiz*1]
  405e6a:	and    BYTE PTR [eax],dl
  405e6c:	dec    ebx
  405e6d:	jne    0x405e70
  405e6f:	jmp    0x405e71
	...
  405e95:	add    BYTE PTR [eax],al
  405e97:	add    BYTE PTR [ecx],bh
  405e99:	repz pop ss
  405e9b:	adc    BYTE PTR [esi+esi*1],al
  405e9e:	push   edi
  405e9f:	(bad)  
  405ea0:	cld    
  405ea1:	add    ebp,DWORD PTR [ebx+0x3a2a542]
  405ea7:	or     ecx,DWORD PTR [ebx]
  405ea9:	pop    ds
  405eaa:	loopne 0x405f13
  405eac:	cwde   
  405ead:	retf   0x44
  405eb0:	fcomp  QWORD PTR ds:0xcb1fe80f
  405eb6:	popf   
  405eb7:	dec    esp
  405eb9:	jge    0x405f13
  405ebb:	inc    ah
  405ebd:	mov    ebx,0x633fe834
  405ec2:	popf   
  405ec3:	call   FWORD PTR [ebx]
  405ec5:	pop    ds
  405ec6:	pop    ds
  405ec7:	sbb    BYTE PTR [ebx-0x22],cl
  405eca:	ud0    ebx,DWORD PTR [esi]
  405ecd:	mov    dh,0x33
  405ecf:	call   DWORD PTR [esi]
  405ed1:	stos   BYTE PTR es:[edi],al
  405ed2:	pushf  
  405ed3:	push   ebp
  405ed4:	xor    esi,DWORD PTR [edi+0x10]
  405ed7:	call   DWORD PTR [esi]
  405ed9:	sahf   
  405eda:	xor    edi,edi
  405edc:	(bad)  
  405edd:	test   eax,0x837e54ab
  405ee2:	popf   
  405ee3:	call   0xffddc5d6
  405ee8:	mov    esi,0x64fec22d
  405eed:	sbb    esi,DWORD PTR [edi+edi*8]
  405ef0:	xchg   esi,eax
  405ef1:	out    0x9d,al
  405ef3:	call   DWORD PTR [ecx+ecx*1+0x51]
  405ef7:	mov    ecx,0x86e9099f
	...
  405f24:	or     eax,DWORD PTR [esp+ebp*2]
  405f27:	xchg   ebx,eax
  405f28:	cmp    eax,0xfe9d4e94
  405f2d:	push   esp
  405f2e:	inc    edi
  405f2f:	popf   
  405f30:	sub    al,0xa1
  405f32:	das    
  405f33:	jo     0x405f80
  405f35:	or     DWORD PTR [esi],esi
  405f37:	push   edi
  405f38:	jecxz  0x405ecc
  405f3a:	cs popf 
  405f3c:	and    ebx,esi
  405f3e:	inc    ecx
  405f3f:	popf   
  405f40:	or     al,0xc2
  405f42:	sub    edi,eax
  405f44:	add    al,0x3d
  405f46:	bound  esi,QWORD PTR [eax+0x170e0971]
  405f4c:	pop    edi
  405f4d:	xchg   esp,eax
  405f4e:	jl     0x405f43
  405f50:	in     eax,dx
  405f51:	sbb    eax,0x15e9ced
  405f56:	add    ebp,ebx
  405f58:	ficom  WORD PTR [ebx-0x6f63512]
  405f5e:	call   0xdee51f99
  405f63:	push   ss
  405f64:	push   edi
  405f65:	mov    eax,ds:0x93bcbd32
  405f6a:	loop   0x405f2f
  405f6c:	aas    
  405f6d:	repz lds edx,FWORD PTR [esi]
  405f70:	pop    ebx
  405f71:	cmp    ecx,edx
  405f73:	xchg   ecx,eax
  405f74:	test   DWORD PTR [ebx+0x1d9c33b6],edx
  405f7a:	rcr    DWORD PTR [esi+ebx*1+0x169d38fd],1
  405f81:	add    DWORD PTR [ecx-0x696c7ba3],edx
  405f87:	stos   DWORD PTR es:[edi],eax
	...
  405fb0:	jno    0x405f60
  405fb2:	mov    ds,WORD PTR [edx+eax*4+0x1603ddc6]
  405fb9:	or     BYTE PTR [ebp-0x32164],0x75
  405fc0:	xor    eax,0x44f4fef9
  405fc5:	pop    ds
  405fc6:	sbb    ah,BYTE PTR [esi+0x35]
  405fc9:	add    eax,ebp
  405fcb:	mov    al,ds:0x56ff92e7
  405fd0:	push   ebp
  405fd1:	std    
  405fd2:	(bad)  
  405fd3:	aam    0x38
  405fd5:	xchg   esp,eax
  405fd6:	jne    0x405fcd
  405fd8:	(bad)  
  405fd9:	out    0xfe,al
  405fdb:	mov    ah,0x50
  405fdd:	mov    eax,ds:0x92bf36a6
  405fe2:	push   DWORD PTR [esp+ebx*1-0x50068a6c]
  405fe9:	sbb    al,0xc
  405feb:	xchg   ebx,eax
  405fec:	add    al,0x94
  405fee:	jne    0x405fd1
  405ff0:	mov    al,0x76
  405ff2:	dec    DWORD PTR [esi]
  405ff4:	xlat   BYTE PTR ds:[ebx]
  405ff5:	rol    dl,0xd9
  405ff8:	dec    eax
  405ff9:	cmp    al,0x8b
  405ffb:	or     eax,0x9af0cdcb
  406000:	push   ss
  406001:	cmp    ch,BYTE PTR [ebx]
  406003:	adc    al,bl
  406005:	dec    esp
  406006:	or     al,0xe6
  406008:	test   DWORD PTR [ebx+0x1ce0e145],0x950a6608
  406012:	(bad)  
  406013:	and    al,0x0
	...
  406039:	add    BYTE PTR [eax],al
  40603b:	add    bl,bl
  40603d:	or     DWORD PTR [eax],eax
  40603f:	jmp    0x57de68c
  406044:	mov    dh,0x49
  406046:	add    cl,ch
  406048:	dec    esp
  406049:	xor    eax,0x9472c83
  40604e:	je     0x40608f
  406050:	ret    0xf04c
  406053:	cmp    DWORD PTR ds:0x2ee96a08,esi
  406059:	or     DWORD PTR [ebx+0x73927f0c],eax
  40605f:	add    BYTE PTR [edi+0x6f],bl
  406062:	jne    0x406074
  406064:	mov    ecx,0x48006a0b
  406069:	or     eax,0xdcda458d
  40606e:	(bad)  
  40606f:	adc    eax,0x40a43e
  406074:	cmp    esi,eax
  406076:	je     0x4060a7
  406078:	mov    cl,0xf0
  40607a:	repz add BYTE PTR [esi],bl
  40607d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40607e:	mov    al,BYTE PTR [ebp+0x36]
  406081:	or     DWORD PTR [ebp-0x10],0x49
  406085:	add    eax,0x79f11777
  40608a:	mov    esi,DWORD PTR [ebp+0x5e]
  40608d:	cmp    BYTE PTR [ebp+0x8],0x99
  406091:	inc    eax
  406092:	lock jecxz 0x406085
  406095:	jp     0x40603b
  406097:	mov    ebp,DWORD PTR [edi+0x5275ff09]
  40609d:	jle    0x40609f
  40609f:	inc    DWORD PTR [eax]
	...
  4060c5:	add    BYTE PTR [eax],al
  4060c7:	add    BYTE PTR [edi-0x7e],ch
  4060ca:	call   0x4dda06
  4060cf:	mov    esi,DWORD PTR [ecx]
  4060d1:	into   
  4060d2:	pop    ebp
  4060d3:	pop    ebx
  4060d4:	sub    ecx,ebx
  4060d6:	or     al,0x0
  4060d8:	jb     0x7a2ee4ca
  4060de:	push   ebx
  4060df:	push   esi
  4060e0:	jge    0x4060c7
  4060e2:	inc    ebx
  4060e3:	das    
  4060e4:	arpl   WORD PTR ds:0x5d999e8,cx
  4060ea:	add    BYTE PTR [ebx-0x3ba3916],cl
  4060f0:	mov    dl,0x5
  4060f2:	add    BYTE PTR [eax],al
  4060f4:	test   eax,0x3a3e74c5
  4060f9:	mov    ebp,0xda72412e
  4060fe:	out    0x45,eax
  406100:	dec    ebx
  406101:	inc    edi
  406102:	add    eax,DWORD PTR [eax]
  406104:	inc    eax
  406105:	pusha  
  406106:	comiss xmm0,xmm0
  406109:	movntps XMMWORD PTR [ecx+0x34],xmm2
  40610d:	loope  0x406112
  40610f:	push   ebx
  406110:	jae    0x406165
  406112:	outs   dx,BYTE PTR ds:[esi]
  406113:	add    BYTE PTR [ebx-0x59],cl
  406116:	ret    
  406117:	je     0x406146
  406119:	pop    ss
  40611a:	fwait
  40611b:	lea    ecx,[esi+0x7ee8332e]
  406121:	mov    eax,DWORD PTR [ebx]
  406123:	add    BYTE PTR [ebx-0x517c4dc1],bl
  406129:	inc    esi
  40612a:	add    esi,DWORD PTR [eax+eax*1+0x0]
	...
  406152:	add    BYTE PTR [eax],al
  406154:	push   ecx
  406155:	mov    al,BYTE PTR [eax+eax*1]
  406158:	dec    ebx
  406159:	mov    ds:0xe9705e3a,al
  40615e:	lds    edi,FWORD PTR [eax+0x3a24b]
  406164:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406165:	push   eax
  406166:	ds leave 
  406168:	or     BYTE PTR [esi-0x72],cl
  40616b:	in     al,dx
  40616c:	enter  0x92e6,0x83
  406170:	cs ds jmp 0xfe2acb7
  406177:	adc    cl,al
  406179:	push   ebp
  40617a:	imul   ebp,DWORD PTR [esi],0xffffff8a
  40617d:	mov    ds:0x23427403,al
  406182:	xlat   BYTE PTR ds:[ebx]
  406183:	stos   DWORD PTR es:[edi],eax
  406184:	jne    0x406167
  406186:	add    eax,DWORD PTR [eax]
  406188:	ss lahf 
  40618a:	pop    ebx
  40618b:	add    DWORD PTR [ebx-0x5e],ecx
  40618e:	add    ecx,ecx
  406190:	mov    BYTE PTR ds:0xa28dfa3f,dl
  406196:	add    eax,esi
  406198:	or     esp,DWORD PTR [ecx-0x5bf439fd]
  40619e:	add    eax,esi
  4061a0:	or     ecx,DWORD PTR [ecx]
  4061a2:	jmp    0x8503:0xe5498d03
  4061a9:	dec    ecx
  4061aa:	in     al,dx
  4061ab:	inc    bh
  4061ad:	inc    esi
  4061ae:	xchg   ebp,eax
  4061af:	xor    al,0xe1
  4061b1:	or     BYTE PTR [ebx],dl
  4061b3:	add    al,0xf1
  4061b5:	or     BYTE PTR [ebx],dl
  4061b7:	add    al,0x0
	...
  4061dd:	add    BYTE PTR [eax],al
  4061df:	add    cl,dh
  4061e1:	or     BYTE PTR [ebx],al
  4061e3:	add    al,0xe3
  4061e5:	call   0x238b65d4
  4061ea:	or     DWORD PTR [esi],ebp
  4061ec:	dec    ecx
  4061ed:	jle    0x406193
  4061ef:	popf   
  4061f0:	fwait
  4061f1:	nop
  4061f2:	cld    
  4061f3:	pop    edi
  4061f4:	gs dec edx
  4061f6:	jmp    0xeb566d07
  4061fb:	retf   0xc808
  4061fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061ff:	xchg   ebx,eax
  406200:	dec    ebx
  406201:	or     ecx,ebp
  406203:	add    eax,esi
  406205:	inc    ebp
  406206:	cmp    DWORD PTR [esp+ecx*1],esi
  406209:	push   ss
  40620a:	sbb    eax,0xf4904b2e
  40620f:	imul   ebp,DWORD PTR ds:0xb0ce94a,0x16
  406216:	out    0xc0,al
  406218:	xchg   BYTE PTR [ecx+0x94b03e9],bl
  40621e:	dec    BYTE PTR [esi]
  406220:	xlat   BYTE PTR ds:[ebx]
  406221:	(bad)  
  406222:	fsub   QWORD PTR [edi+0x25]
  406225:	dec    edx
  406226:	jmp    0xb0d9e8b7
  40622b:	les    ebx,FWORD PTR [esi]
  40622d:	test   ch,cl
  40622f:	test   BYTE PTR [edi-0x3cc19b80],al
  406235:	cmp    BYTE PTR [ecx-0x64],al
  406238:	pop    ebp
  406239:	dec    edx
  40623a:	jmp    0xbee76cea
  40623f:	cwde   
  406240:	sti    
  406241:	add    eax,DWORD PTR [eax]
  406243:	test   eax,0x0
	...
  40626c:	inc    esp
  40626d:	pop    es
  40626e:	sub    DWORD PTR [edi+edi*4],0xfffffff4
  406272:	jbe    0x406286
  406274:	int3   
  406275:	inc    ebp
  406276:	lock cmp DWORD PTR [edi+0x48e9aaee],ebp
  40627d:	xchg   al,al
  40627f:	adc    DWORD PTR [ecx],esi
  406281:	add    BYTE PTR [esi+0xf38c22c],dh
  406287:	aaa    
  406288:	sbb    eax,0xfae6508f
  40628d:	inc    ebp
  40628e:	std    
  40628f:	sbb    DWORD PTR [edx+0x57],eax
  406292:	inc    ebp
  406293:	gs js  0x406294
  406296:	mov    ch,0xa4
  406298:	fistp  QWORD PTR [ecx]
  40629a:	setg   BYTE PTR [ebp-0x6d]
  40629e:	push   eax
  40629f:	ficomp WORD PTR [edx+0x5399f944]
  4062a5:	push   edi
  4062a6:	inc    ebp
  4062a7:	inc    ecx
  4062a8:	pop    eax
  4062a9:	(bad)  
  4062aa:	mov    dh,0xac
  4062ac:	mov    edx,0x4d760f39
  4062b1:	xchg   ebp,eax
  4062b2:	push   eax
  4062b3:	es push ebp
  4062b5:	cdq    
  4062b6:	push   0x49f21c
  4062bb:	fs xor eax,0xa301507d
  4062c1:	arpl   WORD PTR [eax],ax
  4062c3:	jmp    0x6c752897
  4062c8:	sbb    eax,0x5301507d
  4062cd:	pusha  
  4062ce:	add    cl,ch
	...
  4062f8:	sbb    BYTE PTR [ebp+eax*2+0x75],bh
  4062fc:	jg     0x40631f
  4062fe:	clc    
  4062ff:	clts   
  406301:	or     eax,ebp
  406303:	cwde   
  406304:	jmp    0x406294
  406306:	inc    ecx
  406308:	sub    al,0xb1
  40630a:	inc    DWORD PTR [eax]
  40630c:	lea    edi,[ebx+eax*8-0x7e9ee6ab]
  406313:	les    ecx,FWORD PTR [esi+0x76]
  406316:	(bad)  
  406317:	push   DWORD PTR [ecx]
  406319:	fisubr WORD PTR [ecx+0x0]
  40631c:	pop    eax
  40631d:	add    eax,0x627a75ff
  406322:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406323:	aad    0xdd
  406325:	jbe    0x4062b0
  406327:	inc    ebp
  406328:	mov    esi,0xbd0000dd
  40632d:	aaa    
  40632e:	push   DWORD PTR [ebp+0x5a]
  406331:	(bad)  
  406332:	out    0xd4,eax
  406334:	fnsave [ebp+0x68]
  406337:	pushf  
  406338:	bound  ecx,QWORD PTR [edx]
  40633a:	add    BYTE PTR [ebp-0x11a49],cl
  406340:	popf   
  406341:	aad    0xe7
  406343:	jnp    0x4063bf
  406345:	jbe    0x406346
  406347:	(bad)  
  406348:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406349:	in     eax,0xfe
  40634b:	dec    DWORD PTR [ebp+0x32000011]
  406351:	add    DWORD PTR [ebp-0x89a2a0],0xa9548a50
	...
  406383:	add    dl,dh
  406385:	mov    ds:0x80402bc8,al
  40638a:	mov    ebp,0xff765d74
  40638f:	jmp    0x406382
  406391:	mov    DWORD PTR [edi],edi
  406393:	add    BYTE PTR [edi+0x9],ah
  406396:	mov    edx,0x9f201
  40639b:	or     esi,DWORD PTR [eax]
  40639d:	stc    
  40639e:	add    al,dh
  4063a0:	in     eax,0x9
  4063a2:	inc    edi
  4063a3:	inc    ecx
  4063a4:	xor    ebp,DWORD PTR [ebp-0x80]
  4063a7:	add    BYTE PTR [edx+0x4be57209],dh
  4063ad:	stos   DWORD PTR es:[edi],eax
  4063ae:	ret    
  4063af:	je     0x406406
  4063b1:	dec    eax
  4063b2:	js     0x4063b4
  4063b4:	dec    ebx
  4063b5:	mov    al,ds:0x4f2b8588
  4063ba:	xchg   esi,eax
  4063bb:	(bad)  
  4063bc:	sti    
  4063bd:	push   esi
  4063be:	adc    BYTE PTR [eax],cl
  4063c0:	mov    ds:0x84ffaf16,eax
  4063c5:	jp     0x4063ce
  4063c7:	push   0x4b
  4063c9:	cli    
  4063ca:	add    edi,edi
  4063cc:	(bad)  
  4063cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063ce:	stos   DWORD PTR es:[edi],eax
  4063cf:	test   eax,0xe8967e97
  4063d4:	xchg   esi,eax
  4063d5:	test   BYTE PTR [esi+0x100efbff],dl
  4063db:	or     BYTE PTR [ebx-0x4],ah
  4063de:	scas   eax,DWORD PTR es:[edi]
  4063df:	dec    DWORD PTR [edi+eax*1+0x4]
  4063e3:	add    al,0x4b
  4063e5:	mov    ds:0xe9ab,al
	...
  40640e:	add    BYTE PTR [eax],al
  406410:	adc    al,0x2c
  406412:	xchg   esi,eax
  406413:	mov    esi,ecx
  406415:	push   esi
  406416:	xchg   esi,eax
  406417:	jmp    FWORD PTR [ebx+ecx*8]
  40641a:	xchg   esi,eax
  40641b:	add    ecx,DWORD PTR [ebx-0x5e]
  40641e:	xchg   esi,eax
  40641f:	mov    ch,0x7f
  406421:	retf   
  406422:	xchg   ebp,eax
  406423:	jmp    DWORD PTR [ebx+0xcfff3a0]
  406429:	retf   
  40642a:	add    eax,DWORD PTR [ebx+ecx*2]
  40642d:	mov    ds:0xa2b252ab,al
  406432:	add    edx,DWORD PTR [eax-0xc]
  406435:	sub    eax,0xfbecff37
  40643a:	xchg   ebp,eax
  40643b:	jne    0x406490
  40643d:	cli    
  40643e:	and    ah,dl
  406440:	fmul   QWORD PTR [ebx-0x5db700d6]
  406446:	add    edi,edi
  406448:	xchg   esi,eax
  406449:	jle    0x4063e1
  40644b:	inc    esp
  40644d:	or     DWORD PTR [ecx+0x3],edx
  406450:	pop    ebx
  406451:	or     ecx,ebp
  406453:	sub    ecx,DWORD PTR [ebx+0x5]
  406456:	jmp    0x8023075e
  40645b:	add    al,0x4b
  40645d:	cmp    esi,eax
  40645f:	dec    edi
  406460:	dec    DWORD PTR [ebx+0x169495be]
  406466:	loope  0x406413
  406468:	push   edx
  406469:	mov    ch,0xae
  40646b:	xchg   ebp,eax
  40646c:	jae    0x406434
  40646e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40646f:	xchg   ebp,eax
  406470:	jl     0x4064ab
  406472:	sahf   
  406473:	sldt   WORD PTR [eax]
	...
  40649a:	add    BYTE PTR [eax],al
  40649c:	inc    ebx
  40649d:	mov    eax,ds:0x8c6cb19c
  4064a2:	xor    DWORD PTR [ebx],0x87868c65
  4064a8:	(bad)  
  4064a9:	xor    DWORD PTR [esi-0x6b],edi
  4064ac:	push   esp
  4064ad:	cmp    DWORD PTR [ecx],eax
  4064af:	pushf  
  4064b0:	sbb    eax,0xdeabe94a
  4064b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064b6:	xchg   bp,ax
  4064b8:	rol    BYTE PTR [ebp-0x73cb6b4b],cl
  4064be:	push   0x57
  4064c0:	xchg   edi,eax
  4064c1:	mov    WORD PTR [esi-0x6b],cs
  4064c4:	dec    ebx
  4064c5:	adc    eax,0x30de80ac
  4064ca:	ds xchg ebp,eax
  4064cc:	adc    al,0xf5
  4064ce:	mov    edx,0x9185c9d7
  4064d3:	xchg   esp,eax
  4064d4:	add    al,0x8c
  4064d6:	in     eax,dx
  4064d7:	xchg   esp,eax
  4064d8:	mov    dh,0x30
  4064da:	push   ds
  4064db:	xchg   ebp,eax
  4064dc:	hlt    
  4064dd:	mov    ebx,DWORD PTR [ebx+ecx*1-0x6ac5a91d]
  4064e4:	in     al,0x87
  4064e6:	push   esp
  4064e7:	cmp    al,0xdc
  4064e9:	mov    edi,esi
  4064eb:	jmp    DWORD PTR [edx-0x74]
  4064ee:	add    dh,dh
  4064f0:	cmp    eax,0xfa48e801
  4064f5:	mov    edi,edi
  4064f7:	out    0xd,al
  4064f9:	xor    edi,edi
  4064fb:	(bad)  
  4064fd:	mov    esi,DWORD PTR [ebp+0x3d]
	...
  406527:	add    dh,dl
  406529:	mov    edi,edi
  40652b:	into   
  40652c:	push   ebp
  40652d:	add    eax,ebp
  40652f:	mov    ebx,ebx
  406531:	mov    edi,edi
  406533:	ror    BYTE PTR [edi+ebx*1+0x0],cl
  406537:	inc    ebx
  406538:	inc    edi
  406539:	mov    WORD PTR [ebp-0x1f],?
  40653c:	mov    al,0x55
  40653e:	shl    DWORD PTR [esi+0x35b58bd7],cl
  406544:	fimul  WORD PTR [ebx-0x4d5c7e01]
  40654a:	dec    DWORD PTR [esi-0x79a3aa41]
  406550:	mov    bh,0x8b
  406552:	call   0xffcc0be0
  406557:	ret    0x2093
  40655a:	inc    esp
  40655b:	mov    esi,0xd1e80989
  406560:	mov    al,0x9
  406562:	add    BYTE PTR [eax-0x4b],dh
  406565:	(bad)  
  406567:	push   esi
  406568:	xlat   BYTE PTR ds:[ebx]
  406569:	xchg   BYTE PTR [ebp-0x754003],bh
  40656f:	jmp    0xf9a850c0
  406574:	das    
  406575:	dec    edx
  406576:	add    BYTE PTR [esi],dh
  406578:	jge    0x406557
  40657a:	(bad)  
  40657b:	fbld   TBYTE PTR cs:[ecx+0x948510d]
  406582:	or     ebp,DWORD PTR [ecx]
  406584:	inc    esp
  406585:	dec    DWORD PTR [esp+edi*2+0xeff8c18]
	...
  4065b4:	sbb    cl,BYTE PTR [edx+0x1b100d0]
  4065ba:	(bad)  [ebp-0x1a]
  4065bd:	add    DWORD PTR [ebp-0x892ad0],0x50
  4065c4:	dec    edx
  4065c5:	mov    bl,0xa7
  4065c7:	add    BYTE PTR [edx+0x2f8d23ec],dh
  4065cd:	mov    ch,0xfe
  4065cf:	call   DWORD PTR [ebp-0x558a012b]
  4065d5:	outs   dx,BYTE PTR ds:[esi]
  4065d6:	inc    ebp
  4065d7:	rol    DWORD PTR [ebp-0x298a008a],cl
  4065dd:	jbe    0x406654
  4065df:	or     BYTE PTR [edx-0x4a002c84],cl
  4065e5:	(bad)  
  4065e6:	pop    edx
  4065e7:	leave  
  4065e8:	mov    al,0x1
  4065ea:	add    BYTE PTR [ebp-0x7],dl
  4065ed:	push   0x6ecac481
  4065f2:	(bad)  
  4065f3:	inc    DWORD PTR [edi]
  4065f5:	inc    eax
  4065f6:	cld    
  4065f7:	push   eax
  4065f8:	(bad)
  4065fb:	call   FWORD PTR [edi+0x62412944]
  406601:	outs   dx,BYTE PTR ds:[esi]
  406602:	mov    edx,0xb0632a8
  406607:	shl    BYTE PTR ds:0x2200e781,0x6
  40660e:	mov    DWORD PTR [ebp-0x66],0x32000005
  406615:	mov    edi,0xf445
	...
  40663e:	add    BYTE PTR [eax],al
  406640:	test   esi,edi
  406642:	(bad)  
  406643:	(bad)  
  406644:	clc    
  406645:	add    eax,0x80a7006a
  40664a:	in     al,dx
  40664b:	div    DWORD PTR ds:0xf26a5076
  406651:	mov    BYTE PTR [ebp-0xc],al
  406654:	mov    dl,0x88
  406656:	test   esp,esi
  406658:	dec    ebx
  406659:	jmp    0x4065ed
  40665b:	(bad)  
  40665c:	jnp    0x406659
  40665e:	sbb    al,bh
  406660:	fmul   QWORD PTR [edi+ecx*4]
  406663:	call   0x449e1a
  406668:	inc    eax
  406669:	loopne 0x406682
  40666b:	add    eax,0x444b2
  406670:	dec    ebx
  406671:	pop    ds
  406672:	push   eax
  406673:	in     al,dx
  406674:	mov    esp,0x370192aa
  406679:	mov    ds:0xb2b7bd86,al
  40667e:	xchg   edx,eax
  40667f:	inc    DWORD PTR [esp+ecx*8+0x8]
  406683:	dec    DWORD PTR [esi]
  406685:	enter  0xb69e,0x23
  406689:	fwait
  40668a:	rol    DWORD PTR [eax+0x4b],cl
  40668d:	sub    eax,0x6274f488
  406692:	xchg   edx,eax
  406693:	push   eax
  406694:	arpl   WORD PTR [ebx],bx
  406696:	pop    ebx
  406697:	add    BYTE PTR [ebx-0x59],cl
  40669a:	ret    
  40669b:	je     0x406677
  40669d:	sub    al,0x88
  40669f:	call   0x50d2e8f8
	...
  4066cc:	(bad)  
  4066cd:	and    al,0x97
  4066cf:	test   DWORD PTR [edx+edx*1+0x33],0x9266beff
  4066d7:	xor    eax,0x451989
  4066dc:	and    ebx,ebx
  4066de:	stos   BYTE PTR es:[edi],al
  4066df:	jmp    FWORD PTR [esp+ebp*2]
  4066e2:	ret    
  4066e3:	je     0x40675f
  4066e5:	jmp    0xd0555771
  4066ea:	xchg   ecx,eax
  4066eb:	push   0xbea2724a
  4066f0:	or     al,0xc6
  4066f2:	sti    
  4066f3:	out    0x89,eax
  4066f5:	and    al,0x92
  4066f7:	dec    eax
  4066f9:	or     DWORD PTR [edi+ebx*4-0x4],esp
  4066fd:	mov    BYTE PTR [esi],bl
  4066ff:	add    al,0x76
  406701:	adc    eax,0xfee40383
  406706:	loopne 0x4066a3
  406708:	sub    al,0x5b
  40670a:	push   es
  40670b:	xchg   edx,eax
  40670c:	loopne 0x406721
  40670e:	xchg   ebx,eax
  40670f:	add    al,0xcc
  406711:	(bad)  
  406712:	loopne 0x4066af
  406714:	push   0xbc91ee5b
  406719:	mov    esi,0x88b499d1
  40671e:	ficom  WORD PTR [edi-0x45]
  406721:	adc    dh,0x91
  406724:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406725:	(bad)  
  406726:	loopne 0x4066c3
  406728:	push   es
  406729:	pop    ebx
  40672a:	(bad)  
  40672b:	xchg   ecx,eax
  40672c:	xchg   esp,eax
  40672d:	mov    esi,0x99b9
	...
  406756:	add    BYTE PTR [eax],al
  406758:	mov    WORD PTR [eax-0x7761f23f],cs
  40675e:	scas   al,BYTE PTR es:[edi]
  40675f:	xchg   ecx,eax
  406760:	push   es
  406761:	adc    DWORD PTR [eax-0x61778a24],0x8184f691
  40676b:	(bad)  
  40676c:	lods   al,BYTE PTR ds:[esi]
  40676d:	or     ecx,ebp
  40676f:	mov    edx,0x36e91189
  406774:	shl    BYTE PTR [ebp+0x68],0xc8
  406778:	xor    BYTE PTR [bp-0x6f],0xd6
  40677d:	int    0x6c
  40677f:	xor    al,0x3c
  406781:	(bad)  
  406782:	hlt    
  406783:	nop
  406784:	jle    0x406751
  406786:	cmovae ecx,DWORD PTR [ebx+0x71]
  40678a:	test   DWORD PTR [ecx+0x4b],ebp
  40678d:	or     edx,esp
  40678f:	ret    
  406790:	dec    esp
  406791:	mov    ds,WORD PTR [edx+0x26094b02]
  406797:	inc    edi
  406798:	adc    ecx,DWORD PTR [ecx]
  40679a:	add    cl,ch
  40679c:	dec    eax
  40679d:	or     edi,eax
  40679f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067a0:	aam    0x87
  4067a2:	pop    es
  4067a3:	jmp    0x93405af0
  4067a8:	dec    eax
  4067a9:	repz inc DWORD PTR [edx+0x15459648]
  4067b0:	pop    ss
  4067b1:	xchg   esi,eax
  4067b2:	test   ebp,edi
  4067b4:	mov    bl,0x87
  4067b6:	call   FWORD PTR [ecx-0x9080245]
	...
  4067e4:	pop    ebp
  4067e5:	test   eax,ebp
  4067e7:	outs   dx,DWORD PTR ds:[esi]
  4067e8:	xor    ecx,DWORD PTR [ecx]
  4067ea:	add    dl,dh
  4067ec:	mov    ah,bh
  4067ee:	add    al,0xd0
  4067f0:	mov    dl,0x8
  4067f2:	add    cl,ch
  4067f4:	inc    eax
  4067f5:	mov    esp,0x88472828
  4067fa:	jne    0x4067f1
  4067fc:	mov    al,0xa9
  4067fe:	fdivr  DWORD PTR [esi-0x66752745]
  406804:	add    eax,0xdbb6f48e
  406809:	xchg   DWORD PTR [eax+0x3b],edx
  40680c:	xlat   BYTE PTR ds:[ebx]
  40680d:	cdq    
  40680e:	fcomp  DWORD PTR [esi-0x667a6e25]
  406814:	ret    
  406815:	xchg   edi,edi
  406817:	xor    DWORD PTR [ebx+0x3686ff5c],0x6b796809
  406821:	enter  0x75ff,0x9d
  406825:	jns    0x40681e
  406827:	outs   dx,BYTE PTR ds:[esi]
  406828:	fild   DWORD PTR [esi-0x35ee54cb]
  40682e:	call   DWORD PTR [eax-0x1d]
  406831:	pop    esi
  406832:	call   DWORD PTR [esi-0x5f]
  406835:	mov    esp,fs
  406837:	push   esi
  406838:	mov    ebx,0x22006a86
  40683d:	and    edi,ecx
  40683f:	das    
  406840:	jecxz  0x40684c
  406842:	push   DWORD PTR [ebp-0x5ebe]
	...
  406870:	sub    eax,0xa329415f
  406875:	or     ch,al
  406877:	leave  
  406878:	xor    eax,0x7789ff99
  40687d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40687e:	idiv   edi
  406880:	dec    ebp
  406881:	and    al,0x0
  406883:	push   0x405ae0
  406888:	int    0xdc
  40688a:	out    dx,eax
  40688b:	idiv   DWORD PTR [ebp-0xfca006a]
  406891:	arpl   WORD PTR [eax+0x0],ax
  406894:	call   0x8504:0x8dffd6e2
  40689b:	call   0x843fff25
  4068a0:	iret   
  4068a1:	mov    cl,0xf7
  4068a3:	dec    DWORD PTR [ebp+0x2149740d]
  4068a9:	fsubr  st,st(3)
  4068ab:	idiv   DWORD PTR [ebp+0x32740096]
  4068b1:	mov    bh,BYTE PTR [ebp-0x692a18]
  4068b7:	add    BYTE PTR [esi+0x5e],dl
  4068ba:	add    BYTE PTR [bp+si-0x59],dh
  4068be:	mov    esi,0xe78537ff
  4068c3:	out    dx,al
  4068c4:	mov    dl,0x96
  4068c6:	(bad)  
  4068c7:	call   DWORD PTR [edi]
  4068c9:	test   eax,0x96bdfff7
  4068ce:	jne    0x4068d8
  4068d0:	retf   0xd0ca
  4068d3:	inc    DWORD PTR [eax]
	...
  4068f9:	add    BYTE PTR [eax],al
  4068fb:	add    BYTE PTR [ebp-0x6a174a6a],ch
  406901:	xchg   esi,eax
  406902:	(bad)  
  406903:	dec    DWORD PTR [ebx+0x65]
  406906:	sti    
  406907:	out    0x57,eax
  406909:	inc    ecx
  40690a:	(bad)  
  40690b:	call   DWORD PTR [eax*1+0x470cf7a8]
  406912:	(bad)  
  406913:	jne    0x406968
  406915:	enter  0xd0e5,0xfc
  406919:	ss (bad) 
  40691b:	mov    ch,0xef
  40691d:	es (bad) 
  40691f:	jmp    ebx
  406921:	pop    edi
  406922:	mov    bh,0xff
  406924:	in     al,0x1e
  406926:	pop    ecx
  406927:	in     al,dx
  406928:	aam    0x16
  40692a:	(bad)
  40692e:	(bad)  
  40692f:	dec    esp
  406931:	cmp    al,0x9c
  406933:	test   esp,0x971a9b7e
  406939:	jbe    0x4068c9
  40693b:	(bad)  
  40693c:	(bad)  
  40693d:	pop    edi
  40693e:	xchg   esi,eax
  40693f:	jmp    FWORD PTR [esi+eiz*2-0x6b4cf7e8]
  406946:	(bad)  
  406947:	call   FWORD PTR [esi+edx*2+0x4e9cf058]
  40694e:	mov    gs,eax
  406950:	dec    edx
  406951:	pushf  
  406952:	mov    ?,edi
  406954:	test   BYTE PTR [esp+ecx*4],dh
  406957:	jmp    0xffcf1f1b
  40695c:	je     0x406982
  40695e:	nop
  40695f:	call   0x406964
	...
  406988:	add    dh,cl
  40698a:	add    al,BYTE PTR [eax]
  40698c:	xchg   edx,eax
  40698d:	mov    cl,0xfb
  40698f:	push   edi
  406991:	jmp    0x19:0x8b8f839e
  406998:	loope  0x406a0a
  40699a:	mov    ?,WORD PTR [ebp+0x53]
  40699d:	mov    dh,dl
  40699f:	sar    BYTE PTR [esp+esi*8],1
  4069a2:	jnp    0x4069e9
  4069a4:	aaa    
  4069a5:	or     dl,cl
  4069a7:	and    ebx,DWORD PTR [edx+ecx*8-0x18]
  4069ab:	mov    ds,WORD PTR [esi+0x1d274111]
  4069b1:	test   DWORD PTR [esi+0x1b],ecx
  4069b4:	xchg   esp,eax
  4069b5:	xor    al,0xa8
  4069b7:	add    ecx,DWORD PTR [edi+edi*8]
  4069ba:	lock fwait
  4069bc:	pushf  
  4069bd:	xor    DWORD PTR [esi],0xffffff8e
  4069c0:	jae    0x406966
  4069c2:	inc    BYTE PTR [ebx+ecx*2-0x7c]
  4069c6:	pushf  
  4069c7:	sti    
  4069c8:	in     al,0x45
  4069ca:	sbb    al,0x8e
  4069cc:	in     al,0xf1
  4069ce:	sub    eax,0xe098bde
  4069d3:	sbb    BYTE PTR [ebx+0x71],al
  4069d6:	(bad)  
  4069d7:	nop
  4069d8:	int3   
  4069d9:	test   dh,bh
  4069db:	pop    ss
  4069dc:	mov    DWORD PTR [esp+edi*2+0x181ca4fb],0xab52b48e
  4069e7:	or     BYTE PTR [ebx-0x22],cl
  4069ea:	jno    0x40698c
	...
  406a14:	xor    ecx,DWORD PTR [ecx]
  406a16:	jmp    0x54c547b7
  406a1b:	add    BYTE PTR [esi+edi*8+0x7e1f9bf0],dl
  406a22:	mov    esi,0xe147928d
  406a27:	add    edx,DWORD PTR [esi]
  406a29:	nop
  406a2a:	mov    ebp,0xe914f681
  406a2f:	cld    
  406a30:	enter  0xe827,0x3
  406a34:	dec    ebx
  406a35:	test   BYTE PTR [eax+eax*1],bl
  406a38:	jae    0x406a19
  406a3a:	scas   al,BYTE PTR es:[edi]
  406a3b:	lea    edx,[eax+edx*1-0x57]
  406a3f:	pop    ss
  406a40:	cmp    esi,ecx
  406a42:	cmp    esp,ebx
  406a44:	mov    ecx,DWORD PTR [ecx]
  406a46:	add    BYTE PTR [esi+0x54],dh
  406a49:	adc    eax,0x83fe22e8
  406a4e:	push   DWORD PTR [eax-0x7c]
  406a51:	adc    eax,0x3540e96a
  406a56:	xor    BYTE PTR [eax+0x1936f148],ch
  406a5c:	mov    BYTE PTR [ecx],cl
  406a5e:	(bad)  
  406a5f:	cld    
  406a60:	mov    dh,BYTE PTR [edx]
  406a62:	inc    ecx
  406a63:	jmp    0x37164548
  406a68:	into   
  406a69:	xadd   BYTE PTR [ebp+0x264fd3e6],dh
  406a70:	push   esp
  406a71:	adc    eax,0x839d2ee8
  406a76:	(bad)  
  406a77:	mov    ecx,0x0
	...
  406aa0:	sbb    BYTE PTR [ebp+esi*2-0x664f1f],al
  406aa7:	push   es
  406aa8:	mov    esi,0xd61a2170
  406aad:	sub    eax,0xffffffd5
  406ab0:	sti    
  406ab1:	cmp    edi,0xffffff83
  406ab4:	dec    eax
  406ab5:	icebp  
  406ab6:	sub    ebx,DWORD PTR [ecx]
  406ab8:	or     BYTE PTR [ecx],cl
  406aba:	push   0xffc87f16
  406abf:	inc    eax
  406ac0:	dec    ecx
  406ac1:	or     DWORD PTR [eax],eax
  406ac3:	imul   esi,DWORD PTR [eax-0x403929de],0x7535c00f
  406acd:	ror    DWORD PTR [edi-0x4a],cl
  406ad0:	push   ebp
  406ad1:	adc    eax,0x83be56e8
  406ad6:	(bad)  
  406ad7:	cmp    DWORD PTR [edi],esi
  406ad9:	test   BYTE PTR [ebp-0xf],dh
  406adc:	shl    cl,0xfe
  406adf:	xchg   esi,eax
  406ae0:	iret   
  406ae1:	jo     0x406acc
  406ae3:	mov    ebx,0xe883c7
  406ae8:	mov    esi,0x58ffffb9
  406aed:	or     eax,0xc8022c68
  406af2:	jmp    DWORD PTR [edi+0x58]
  406af5:	pop    ebp
  406af6:	inc    eax
  406af7:	add    BYTE PTR [ebp-0xcd6bea5],ah
  406afd:	push   es
  406afe:	call   0xffd5cae8
  406b03:	or     eax,DWORD PTR [eax]
	...
  406b29:	add    BYTE PTR [eax],al
  406b2b:	add    BYTE PTR [edx+0x1a],ah
  406b2e:	push   ds
  406b2f:	push   eax
  406b30:	mov    dl,0x95
  406b32:	jne    0x406b40
  406b34:	call   0x5036:0x35ffd634
  406b3b:	(bad)  
  406b3c:	mov    edi,0x2520e77e
  406b41:	xchg   ebp,eax
  406b42:	(bad)  
  406b43:	call   0x4023ca
  406b48:	dec    edx
  406b49:	loope  0x406b1c
  406b4b:	inc    DWORD PTR [ebp+0x20]
  406b4e:	add    BYTE PTR [eax-0xa],ch
  406b51:	push   esi
  406b52:	inc    eax
  406b53:	add    dl,bl
  406b55:	xor    BYTE PTR [eax],dh
  406b57:	inc    ecx
  406b58:	mov    dl,0x1e
  406b5a:	add    al,BYTE PTR [eax]
  406b5c:	mov    ds:0xefade886,al
  406b61:	mov    ?,edi
  406b63:	or     esi,edx
  406b65:	sbb    DWORD PTR [esi],ebx
  406b67:	push   eax
  406b68:	bound  ecx,QWORD PTR [esi+0x678a0c75]
  406b6e:	aad    0xff
  406b70:	test   DWORD PTR ds:0x853fff50,edi
  406b76:	out    0xe8,eax
  406b78:	mov    ah,0x8e
  406b7a:	(bad)  
  406b7b:	call   0x4026ba
  406b80:	ficomp DWORD PTR [edx]
  406b82:	sar    bh,cl
  406b84:	lds    esp,FWORD PTR ds:0x314b300c
  406b8a:	add    al,0xff
  406b8c:	fisub  WORD PTR [ebx-0x65]
  406b8f:	add    eax,0x0
	...
  406bb8:	jne    0x406b45
  406bba:	mov    edx,DWORD PTR [eax-0x65]
  406bbd:	add    edx,DWORD PTR [ecx]
  406bbf:	or     BYTE PTR [ebx],dh
  406bc1:	mov    bl,0x8a
  406bc3:	push   DWORD PTR [eax+ecx*4]
  406bc6:	xor    edx,edx
  406bc8:	sub    al,0xeb
  406bca:	mov    dh,BYTE PTR [ebp+0x57]
  406bcd:	fdivr  DWORD PTR [edx]
  406bcf:	rcr    BYTE PTR [ebx+ebx*8],cl
  406bd2:	mov    esp,0x307043c2
  406bd7:	mov    ebx,DWORD PTR [edi]
  406bd9:	out    dx,eax
  406bda:	mov    edi,0x1d7071f4
  406bdf:	add    bh,ah
  406be1:	(bad)  
  406be2:	sti    
  406be3:	out    0x7a,eax
  406be5:	and    ecx,DWORD PTR [ebx-0x784b3d01]
  406beb:	push   0x3714e
  406bf0:	repz scas al,BYTE PTR es:[edi]
  406bf2:	mov    ch,0xff
  406bf4:	aam    0xe8
  406bf6:	inc    eax
  406bf7:	clc    
  406bf8:	arpl   WORD PTR [esp+eax*1+0x0],si
  406bfc:	dec    ebx
  406bfd:	adc    DWORD PTR [eax],0xfffffff8
  406c00:	mov    bl,0x27
  406c02:	add    BYTE PTR [bp+di+0x67],cl
  406c06:	ret    
  406c07:	je     0x406c60
  406c09:	sub    eax,0x704b0100
  406c0e:	adc    cl,BYTE PTR ds:0xff8be49c
  406c14:	push   ds
  406c15:	push   0x4a8d889b
  406c1a:	mov    ch,bl
	...
  406c44:	push   ebx
  406c45:	ret    
  406c46:	adc    al,bh
  406c48:	jae    0x406c05
  406c4a:	mov    ah,0xff
  406c4c:	je     0x406c13
  406c4e:	(bad)  
  406c50:	pop    es
  406c51:	or     DWORD PTR [edi-0x62279b76],edi
  406c57:	adc    BYTE PTR [ebx+0x71],dl
  406c5a:	pop    es
  406c5b:	mov    dl,BYTE PTR [ecx+eax*4+0x3]
  406c5f:	out    dx,al
  406c60:	fs cmp al,0x9f
  406c63:	mov    al,BYTE PTR [ebp+edx*1-0x57]
  406c67:	xorps  xmm6,xmm1
  406c6a:	rcl    bl,1
  406c6c:	mov    ecx,DWORD PTR [ecx]
  406c6e:	sbb    DWORD PTR [edx+eax*1+0x7b8a6657],ebx
  406c75:	adc    ah,0xfb
  406c78:	and    al,0xd1
  406c7a:	push   esi
  406c7b:	mov    dl,BYTE PTR [esp+esi*8]
  406c7e:	or     DWORD PTR [esi+esi*1+0x508a4657],ebx
  406c85:	dec    ecx
  406c86:	mov    ch,0xef
  406c88:	fs and ecx,edi
  406c8b:	inc    esp
  406c8c:	dec    ebx
  406c8d:	fld    DWORD PTR [eax+0x5d]
  406c90:	push   ss
  406c91:	and    DWORD PTR [esi],0xf0f6e433
  406c97:	fwait
  406c98:	sbb    edi,DWORD PTR [edi+0x16]
  406c9b:	mov    ah,BYTE PTR [ecx+0x1d]
  406c9e:	add    DWORD PTR [ecx-0x1f97f0a],edx
  406ca4:	add    al,0xf6
  406ca6:	aam    0x1b
	...
  406cd0:	arpl   WORD PTR [ecx],di
  406cd2:	test   al,0x3
  406cd4:	sbb    esi,DWORD PTR [ecx+0x62]
  406cd7:	mov    al,0xac
  406cd9:	cmp    BYTE PTR [ecx],0x89
  406cdc:	push   ds
  406cdd:	adc    ecx,edx
  406cdf:	repz sahf 
  406ce1:	adc    dh,0x1e
  406ce4:	dec    ebx
  406ce5:	icebp  
  406ce6:	pop    es
  406ce7:	aam    0xb
  406ce9:	or     DWORD PTR [ecx-0x2f],edx
  406cec:	xor    al,0xca
  406cee:	call   0xba37b
  406cf3:	dec    DWORD PTR [eax]
  406cf5:	or     eax,ebp
  406cf7:	pop    ecx
  406cf8:	mov    ebx,0xd239ff80
  406cfd:	test   BYTE PTR [edi],0x91
  406d00:	mov    eax,0x3596ff7e
  406d05:	or     DWORD PTR [eax-0x43],ebp
  406d08:	js     0x406cd3
  406d0a:	call   DWORD PTR [eax]
  406d0c:	sbb    dh,BYTE PTR [eax]
  406d0e:	inc    ecx
  406d0f:	jmp    0xc082a2e7
  406d14:	mov    DWORD PTR [ecx],ecx
  406d16:	call   0xffc04a14
  406d1b:	repnz or ch,dh
  406d1e:	adc    eax,0xff755c70
  406d23:	fadd   st(4),st
  406d25:	jg     0x406d9c
  406d27:	loope  0x406cd9
  406d29:	mov    ecx,0x7fd246fd
  406d2e:	jne    0x406d65
  406d30:	fistp  QWORD PTR [esi]
  406d32:	shl    DWORD PTR [esi],1
	...
  406d5c:	ret    0xfff2
  406d5f:	shr    cl,0x2f
  406d62:	inc    ecx
  406d63:	jmp    0xa87050a8
  406d68:	dec    eax
  406d69:	xor    BYTE PTR ds:0xffc8f1ab,0x0
  406d70:	add    bl,BYTE PTR [edi+edi*8+0x6]
  406d74:	jg     0x406cf6
  406d76:	jne    0x406d69
  406d78:	loopne 0x406d22
  406d7a:	std    
  406d7b:	test   bl,0xf2
  406d7e:	inc    DWORD PTR [eax-0x16bed06c]
  406d84:	inc    eax
  406d85:	jecxz  0x406db6
  406d87:	sub    BYTE PTR [edi-0x80],al
  406d8a:	xor    eax,0xffc8702b
  406d8f:	shl    BYTE PTR [ebx-0x72ff00a5],0x7c
  406d96:	mov    edi,0x45029474
  406d9b:	hlt    
  406d9c:	mov    ebp,0x37fff40e
  406da1:	jge    0x406d8a
  406da3:	pusha  
  406da4:	scas   eax,DWORD PTR es:[edi]
  406da5:	nop
  406da6:	(bad)  
  406da7:	push   DWORD PTR [edi]
  406da9:	cdq    
  406daa:	call   0xffd1009c
  406daf:	push   0x62
  406db1:	and    esp,DWORD PTR [ecx]
  406db3:	xor    BYTE PTR [ebx+0x5],dh
  406db6:	push   0xffcc0237
  406dbb:	and    BYTE PTR [bp+di],cl
  406dbe:	add    BYTE PTR [eax+0x0],al
	...
  406de8:	retf   0xd3a1
  406deb:	jmp    FWORD PTR [ebp+0x1a75ff3a]
  406df1:	mov    ds:0x917dfd50,eax
  406df6:	push   0x0
  406df8:	or     dl,BYTE PTR [edi+0x2f]
  406dfb:	inc    ecx
  406dfc:	repnz and dh,BYTE PTR [edi]
  406dff:	xor    BYTE PTR [ebx-0x1dfd97f6],dh
  406e05:	or     al,BYTE PTR [eax-0x4aad18]
  406e0b:	(bad)  
  406e0c:	(bad)  [edx+0x74]
  406e0f:	push   ss
  406e10:	pop    ebx
  406e11:	aas    
  406e12:	hlt    
  406e13:	push   DWORD PTR [edi-0x158a0072]
  406e19:	mov    ds:0x914dfd11,al
  406e1e:	push   DWORD PTR [ebp-0x4a]
  406e21:	mov    ds:0x86bdd09e,eax
  406e26:	push   0x0
  406e28:	retf   0x2f6b
  406e2b:	inc    ecx
  406e2c:	mov    dl,0x22
  406e2e:	pop    edx
  406e2f:	xor    BYTE PTR [ebx+0x5],dh
  406e32:	push   0x3704b02
  406e37:	and    BYTE PTR [ebx-0x7b004c70],0x20
  406e3e:	xchg   DWORD PTR [ebp+0x53],esi
  406e41:	pop    eax
  406e42:	add    eax,0x1ab774fd
  406e47:	add    bl,ah
  406e49:	jnp    0x406e1e
  406e4b:	inc    eax
	...
  406e74:	dec    ebx
  406e75:	sbb    BYTE PTR [edx],ch
  406e77:	xor    BYTE PTR [edx],cl
  406e79:	jo     0x406e96
  406e7b:	add    cl,BYTE PTR [ebx+0x70]
  406e7e:	sub    eax,0xffffffca
  406e81:	ret    
  406e82:	xchg   edi,edi
  406e84:	push   eax
  406e85:	mov    al,0x10
  406e87:	push   ss
  406e88:	shl    BYTE PTR [eax+edx*4],cl
  406e8b:	(bad)  
  406e8c:	mov    esi,0x437586fc
  406e91:	mov    dl,al
  406e93:	cld    
  406e94:	and    al,0xe7
  406e96:	xchg   BYTE PTR [ebp+0x17],dh
  406e99:	fdiv   DWORD PTR [esi]
  406e9b:	rcl    BYTE PTR [edi+edx*8],1
  406e9e:	xchg   BYTE PTR [ebp+0xf],dh
  406ea1:	iret   
  406ea2:	adc    BYTE PTR [eax],cl
  406ea4:	repz xor DWORD PTR [ecx-0x3dc70301],edi
  406eab:	add    al,0x4b
  406ead:	popf   
  406eae:	jp     0x406e9c
  406eb0:	arpl   WORD PTR [eax+0x3],si
  406eb3:	out    dx,eax
  406eb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406eb5:	adc    DWORD PTR es:[esp+ebx*8],ecx
  406eb9:	xchg   esp,eax
  406eba:	sti    
  406ebb:	out    0x3c,eax
  406ebd:	and    al,BYTE PTR [edi-0x3cdfd01]
  406ec3:	call   FWORD PTR [edi]
  406ec5:	sti    
  406ec6:	xchg   edi,eax
  406ec7:	add    DWORD PTR [edi-0x4b0079cd],0xadb8812e
  406ed1:	outs   dx,BYTE PTR ds:[esi]
  406ed2:	xchg   BYTE PTR [eax],al
  406ed4:	dec    ebx
  406ed5:	or     ecx,ebp
  406ed7:	add    eax,DWORD PTR [eax]
	...
  406efd:	add    BYTE PTR [eax],al
  406eff:	add    al,dl
  406f01:	ret    
  406f02:	in     al,dx
  406f03:	cli    
  406f04:	aam    0xf4
  406f06:	jmp    0x406e8b
  406f08:	push   ebx
  406f09:	or     DWORD PTR [ecx+eax*1+0x72],edx
  406f0d:	(bad)  
  406f0f:	add    ecx,DWORD PTR [ebx+0x7e]
  406f12:	xor    al,0xf8
  406f14:	ins    BYTE PTR es:[edi],dx
  406f15:	outs   dx,BYTE PTR ds:[esi]
  406f16:	xchg   ebx,eax
  406f17:	xchg   BYTE PTR [ecx+edx*1-0x57],ch
  406f1b:	adc    BYTE PTR [ecx+esi*8+0x4c],dl
  406f1f:	xlat   BYTE PTR ds:[ebx]
  406f20:	or     ecx,DWORD PTR [ecx]
  406f22:	sahf   
  406f23:	adc    BYTE PTR [edi+0x71],al
  406f26:	bound  esi,QWORD PTR [edx-0x77d82b4]
  406f2c:	lods   al,BYTE PTR ds:[esi]
  406f2d:	mov    dl,0xd5
  406f2f:	inc    esp
  406f30:	dec    ebx
  406f31:	jl     0x406f27
  406f33:	imul   DWORD PTR [esi+edi*8]
  406f36:	cdq    
  406f37:	xchg   BYTE PTR [ebx+edx*4],ch
  406f3a:	fs dec ebx
  406f3c:	and    eax,0x5d1b667d
  406f41:	or     ch,cl
  406f43:	add    eax,esi
  406f45:	xchg   BYTE PTR [ebx],ch
  406f47:	test   DWORD PTR [edi*2+0x4cff9bb9],ecx
  406f4e:	inc    esi
  406f4f:	xchg   dh,cl
  406f51:	xchg   BYTE PTR [ebx],ch
  406f53:	test   esp,esi
  406f55:	jl     0x406ef0
  406f57:	xchg   BYTE PTR [esi-0x1b79d03f],dh
  406f5d:	jno    0x406f38
  406f5f:	fs dec ebx
  406f61:	or     DWORD PTR [eax-0x80],esi
	...
  406f8c:	xchg   edi,eax
  406f8d:	jnp    0x406fa5
  406f8f:	xchg   BYTE PTR [ebx+0x4b8a650c],cl
  406f95:	or     ecx,ebp
  406f97:	js     0x406f6f
  406f99:	inc    edi
  406f9a:	inc    DWORD PTR [ebp-0x14ff8b4c]
  406fa0:	mov    eax,0x54e9ff7c
  406fa5:	out    0x8c,al
  406fa7:	sub    eax,DWORD PTR [ebx+0x737e67cc]
  406fad:	leave  
  406fae:	inc    eax
  406fb0:	xchg   esp,eax
  406fb1:	test   eax,0xbc83e900
  406fb6:	jne    0x406fa4
  406fb8:	loope  0x406f74
  406fba:	add    cl,ch
  406fbc:	dec    eax
  406fbd:	mov    ss,WORD PTR [ebp-0x833a55]
  406fc3:	pop    esp
  406fc4:	or     DWORD PTR ds:0x2ce81150,ebp
  406fca:	inc    ecx
  406fcb:	jmp    0xe9e0e980
  406fd0:	dec    eax
  406fd1:	adc    al,al
  406fd3:	adc    al,0x44
  406fd5:	jno    0x406f6b
  406fd7:	jmp    0x3aa87924
  406fdc:	pop    ss
  406fdd:	leave  
  406fde:	push   DWORD PTR [ebp+0x3c]
  406fe1:	or     eax,0x7bd976e8
  406fe6:	push   DWORD PTR [esp+ebp*4+0x47]
  406fea:	(bad)  
  406feb:	pop    esi
  406fec:	into   
  406fed:	lea    edx,[edx+0x5]
	...
  407018:	pop    ecx
  407019:	(bad)  
  40701b:	adc    bh,BYTE PTR [edx-0x38660085]
  407021:	cmc    
  407022:	setns  bh
  407025:	cmc    
  407026:	pop    es
  407027:	inc    ecx
  407028:	stc    
  407029:	jp     0x40702a
  40702b:	cs (bad) 
  40702d:	xor    cl,bh
  40702f:	es (bad) 
  407031:	outs   dx,DWORD PTR ds:[esi]
  407032:	arpl   WORD PTR [ecx+ecx*4+0x2d],bp
  407036:	mov    DWORD PTR [ebx+edi*2+0x7b],ebp
  40703a:	dec    DWORD PTR [esi]
  40703c:	addr16 mov ds:0x30,eax
  407040:	repz pop es
  407042:	push   DWORD PTR [ebp-0x7c82]
  407048:	dec    edx
  407049:	into   
  40704a:	mov    al,ds:0xbf80b200
  40704f:	je     0x4070bd
  407051:	sbb    eax,0x56328b3
  407056:	push   DWORD PTR [ebp-0x5a]
  407059:	lahf   
  40705a:	test   eax,0xff8495d2
  40705f:	mov    ch,0xfe
  407061:	test   edi,edi
  407063:	call   DWORD PTR [edx-0x63]
  407066:	icebp  
  407067:	shl    BYTE PTR [ebp-0xeafaf7c],cl
  40706d:	add    dl,BYTE PTR [eax]
  40706f:	add    BYTE PTR [esi],bh
  407071:	je     0x4070da
  407073:	test   DWORD PTR [edx-0x3a],esi
  407076:	dec    DWORD PTR [edi-0x36]
  407079:	cld    
  40707a:	mov    al,ds:0x0
	...
  4070a3:	add    BYTE PTR [edx],dh
  4070a5:	mov    ds:0x733b805,al
  4070aa:	add    BYTE PTR [eax],al
  4070ac:	push   0x2b74bf80
  4070b1:	cmp    edi,edi
  4070b3:	jne    0x4070df
  4070b5:	lahf   
  4070b6:	xchg   esi,eax
  4070b7:	(bad)  
  4070b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070b9:	test   eax,ebp
  4070bb:	shl    DWORD PTR [ebp+eax*4-0x1],1
  4070bf:	lea    ebx,[edi-0x6a0001b8]
  4070c5:	push   DWORD PTR ss:[ebp-0x7b3a]
  4070cc:	call   0xbffb:0xe200a03d
  4070d3:	movq   mm6,QWORD PTR [esi-0x2]
  4070d7:	jmp    DWORD PTR ds:0x34bcb585
  4070dd:	test   edi,edi
  4070df:	call   0xa3c72f
  4070e4:	dec    ebx
  4070e5:	or     ecx,DWORD PTR [esi-0x48]
  4070e8:	mov    ebp,0xeae88403
  4070ed:	sub    al,BYTE PTR [edi+edi*8-0x8d17e]
  4070f4:	jmp    esi
  4070f6:	xchg   esi,eax
  4070f7:	add    DWORD PTR [edi-0x68bab49c],0x70
  4070fe:	add    eax,DWORD PTR [eax]
  407100:	dec    ebx
  407101:	push   ebx
  407102:	stc    
  407103:	or     esi,DWORD PTR [ebx-0x4d]
  407106:	push   esi
  407107:	inc    DWORD PTR [eax]
	...
  40712d:	add    BYTE PTR [eax],al
  40712f:	add    BYTE PTR [edi+esi*2+0x43],bh
  407133:	je     0x407186
  407135:	stc    
  407136:	enter  0x6cfb,0x3d
  40713a:	adc    al,0xff
  40713c:	fisubr WORD PTR [ebx-0x5c86ea94]
  407142:	adc    DWORD PTR [eax+0x54],0x15
  407146:	sub    al,0xde
  407149:	mov    eax,ds:0x24d4ff83
  40714e:	sub    BYTE PTR [edx+0x4a],0x83
  407152:	stc    
  407153:	sti    
  407154:	xor    al,0x75
  407156:	or     ebp,eax
  407158:	ja     0x40714c
  40715a:	cmp    bh,0x24
  40715d:	jne    0x4071de
  40715f:	call   0xffc3a3da
  407164:	add    ch,BYTE PTR [esi]
  407166:	adc    BYTE PTR [eax],al
  407168:	jbe    0x407151
  40716a:	outs   dx,DWORD PTR ds:[esi]
  40716b:	or     DWORD PTR [edi],0xfcff81e0
  407171:	push   ebp
  407172:	add    ebp,DWORD PTR [edx+0x48]
  407175:	cmp    edi,ecx
  407177:	pop    es
  407178:	jecxz  0x407135
  40717a:	dec    esi
  40717b:	jmp    esp
  40717d:	call   0x9b46d4a
  407182:	in     eax,dx
  407183:	add    al,0x4b
  407185:	or     DWORD PTR [ecx+ecx*4-0x2c],ebp
  407189:	jp     0x4071a1
  40718b:	sbb    DWORD PTR [ebx],0x71
  40718e:	xor    eax,0xf2094ba3
  407193:	inc    ebx
	...
  4071bc:	inc    esp
  4071bd:	test   DWORD PTR [edx+0x4],ecx
  4071c0:	dec    ebx
  4071c1:	or     DWORD PTR [edi+eax*1+0x12e9094a],esi
  4071c8:	les    esp,FWORD PTR [eax-0xeb4fc17]
  4071ce:	jnp    0x407203
  4071d0:	or     cl,BYTE PTR [ecx]
  4071d2:	mov    BYTE PTR fs:[edx+edi*2-0x32],bh
  4071d7:	sbb    BYTE PTR [ebx],0x71
  4071da:	mov    dl,BYTE PTR [esp+esi*2+0x79]
  4071de:	jo     0x407168
  4071e0:	jnp    0x40725c
  4071e2:	mov    dh,0x82
  4071e4:	fs mov bl,0xb9
  4071e7:	sbb    DWORD PTR [ecx+edi*2+0x11],0xe9094a08
  4071ef:	nop
  4071f0:	(bad)  
  4071f1:	jno    0x40718a
  4071f3:	add    BYTE PTR [edx+ebx*8+0x0],0xb9
  4071f8:	jae    0x4071c4
  4071fa:	call   0x287a6cea
  4071ff:	add    al,0xa3
  407201:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407202:	mov    ecx,0x637124c4
  407207:	mov    ds:0x43f2094b,al
  40720c:	lahf   
  40720d:	sbb    dl,bl
  40720f:	add    edi,DWORD PTR [esi+0x4815e8e]
  407215:	jns    0x4071d0
  407217:	xor    BYTE PTR [esi+0x1],0x51
  40721b:	popf   
  40721c:	idiv   BYTE PTR [eax+0x3e]
  40721f:	add    BYTE PTR [eax],0x0
	...
  407246:	add    BYTE PTR [eax],al
  407248:	mov    dh,0x79
  40724a:	add    BYTE PTR [edi],dh
  40724c:	leave  
  40724d:	js     0x4072b7
  40724f:	in     eax,0x47
  407251:	or     DWORD PTR [eax],eax
  407253:	je     0x407218
  407255:	cmp    dh,0x1e
  407258:	leave  
  407259:	fldenv [edi+0x5c]
  40725c:	jo     0x407228
  40725e:	inc    DWORD PTR [eax-0x16bec5fe]
  407264:	mov    al,ds:0x48a830a3
  407269:	popa   
  40726a:	dec    edi
  40726b:	push   esi
  40726c:	dec    eax
  40726d:	or     DWORD PTR [ebx],ecx
  40726f:	sub    DWORD PTR [ecx+ebx*1-0x713a1696],edx
  407276:	neg    edi
  407278:	retf   0x5078
  40727b:	(bad)  
  40727c:	jl     0x40728e
  40727e:	call   0xffb86eb1
  407283:	(bad)  
  407284:	mov    esp,0xcabefe79
  407289:	popa   
  40728a:	jge    0x407230
  40728c:	retf   0x6a78
  40728f:	add    ch,bh
  407291:	dec    ebp
  407292:	shl    DWORD PTR [esi+0x15c004ca],1
  407298:	sub    esp,ecx
  40729a:	mov    ebx,ecx
  40729c:	or     DWORD PTR [eax+0x4f],edi
  40729f:	sbb    DWORD PTR ds:0x1f86ff59,0xca18ffe2
  4072a9:	std    
  4072aa:	pop    es
  4072ab:	add    DWORD PTR [eax],0x0
	...
  4072d1:	add    BYTE PTR [eax],al
  4072d3:	add    BYTE PTR [ebp+0x76],bl
  4072d6:	jmp    FWORD PTR [esi-0x51]
  4072d9:	(bad)  
  4072db:	retfw  0x7ae0
  4072df:	sbb    DWORD PTR [eax],ecx
  4072e1:	js     0x40734c
  4072e3:	repz retf 
  4072e5:	std    
  4072e6:	pop    es
  4072e7:	inc    ecx
  4072e8:	lods   eax,DWORD PTR ds:[esi]
  4072e9:	jbe    0x4072ea
  4072eb:	add    BYTE PTR [ebp-0x5ccf859b],cl
  4072f1:	or     ebp,DWORD PTR [edx+0x23]
  4072f4:	sbb    eax,0x79e80780
  4072f9:	mov    edi,edi
  4072fb:	(bad)  
  4072fc:	mov    edx,0xe2412f74
  407301:	gs sbb edi,edi
  407304:	out    0x3,eax
  407306:	call   0xffcabf97
  40730b:	push   DWORD PTR [edi]
  40730d:	clc    
  40730e:	(bad)  
  40730f:	jne    0x4072cb
  407311:	jecxz  0x4072ae
  407313:	retf   0x889d
  407316:	leave  
  407317:	ret    0xba6
  40731a:	push   ebp
  40731b:	mov    edi,DWORD PTR [esi+0x63]
  40731e:	(bad)  
  40731f:	(bad)  
  407320:	jge    0x40736b
  407322:	push   DWORD PTR [ebp+0x6e]
  407325:	mov    BYTE PTR [ebp+0x8],dh
  407328:	mov    bh,dl
  40732a:	in     eax,dx
  40732b:	dec    DWORD PTR [ebp+0x6208c1c2]
  407331:	pop    esi
  407332:	mov    ch,ah
  407334:	icebp  
  407335:	iret   
  407336:	test   edi,0x0
	...
  407360:	daa    
  407361:	mov    DWORD PTR [eax],eax
  407363:	add    BYTE PTR [edx+0xb],ah
  407366:	lea    eax,[ebp-0x52]
  407369:	pop    ebx
  40736a:	lds    esp,FWORD PTR [bp+si]
  40736d:	dec    esp
  40736e:	(bad)  
  40736f:	(bad)  
  407370:	push   edi
  407371:	sbb    edi,edi
  407373:	xor    eax,0x412260
  407378:	(bad)  
  40737a:	into   
  40737b:	call   FWORD PTR [ebp+0xc74c005]
  407381:	test   BYTE PTR [ebp-0x8],al
  407384:	cli    
  407385:	or     eax,DWORD PTR [eax]
  407387:	out    dx,eax
  407388:	lods   al,BYTE PTR ds:[esi]
  407389:	mov    DWORD PTR [ebp-0x4],esi
  40738c:	dec    ebx
  40738d:	fcomip st,st(5)
  40738f:	idiv   esp
  407391:	pop    ebp
  407392:	or     ebp,eax
  407394:	xchg   ecx,eax
  407395:	fidivr WORD PTR [edi-0x1]
  407398:	in     al,dx
  407399:	mov    ebp,0x2ca6e87b
  40739e:	cmp    bh,0x12
  4073a1:	and    ecx,DWORD PTR [ebx]
  4073a3:	add    BYTE PTR [esi-0x5],bh
  4073a6:	outs   dx,BYTE PTR ds:[esi]
  4073a7:	add    DWORD PTR [edi],0xc4ff80dd
  4073ad:	daa    
  4073ae:	xchg   BYTE PTR [eax+0x8007bd],bh
  4073b4:	dec    ebx
  4073b5:	pusha  
  4073b6:	add    ecx,DWORD PTR [ebx-0x3ff39bfa]
  4073bc:	pop    ds
  4073bd:	cmp    DWORD PTR gs:[eax],0x4b
  4073c1:	std    
  4073c2:	add    eax,0xe9
	...
  4073eb:	add    BYTE PTR [edi+0x61],cl
  4073ee:	add    eax,DWORD PTR [eax]
  4073f0:	mov    ebp,ds
  4073f2:	adc    edi,edi
  4073f4:	(bad)  
  4073f5:	imul   ebp,DWORD PTR [ebx+0x29],0xffffff9b
  4073f9:	inc    edi
  4073fa:	jg     0x40744c
  4073fc:	sbb    ecx,DWORD PTR [edi-0x7]
  4073ff:	pop    es
  407400:	arpl   si,cx
  407402:	jle    0x407403
  407404:	fs dec eax
  407406:	sti    
  407407:	retf   
  407408:	pop    esp
  407409:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40740a:	in     al,dx
  40740b:	mov    ds:0xff042127,eax
  407410:	(bad)  
  407411:	arpl   WORD PTR [ebx+0xd],bp
  407414:	sbb    ebx,DWORD PTR [edi-0x28397681]
  40741a:	jge    0x40741b
  40741c:	xor    al,0x18
  40741e:	add    DWORD PTR ds:[ebx+0x60],ecx
  407422:	nop
  407423:	test   DWORD PTR [ecx],ecx
  407425:	(bad)  
  407426:	jle    0x407427
  407428:	jnp    0x4073b2
  40742a:	mov    esp,ecx
  40742c:	adc    al,0x9
  40742e:	xchg   cx,ax
  407430:	(bad)  
  407431:	dec    edx
  407432:	pop    edi
  407433:	jg     0x407439
  407435:	fst    DWORD PTR [ebp-0x47]
  407438:	ret    
  407439:	jbe    0x407489
  40743b:	jg     0x407420
  40743d:	inc    edi
  40743e:	fs add al,0x4b
  407441:	and    BYTE PTR [eax+eax*8-0x1b],0x75
  407446:	les    ecx,FWORD PTR ss:[ebp-0x73]
  40744a:	xchg   BYTE PTR [ebx+ecx*2],al
  40744d:	or     DWORD PTR [ecx+ebx*4+0x0],esi
	...
  407475:	add    BYTE PTR [eax],al
  407477:	add    BYTE PTR [ecx],cl
  407479:	ja     0x407499
  40747b:	jg     0x407439
  40747d:	or     bh,cl
  40747f:	add    ecx,DWORD PTR [ebx+0x9]
  407482:	xchg   ebp,eax
  407483:	test   edi,0xac7e2b9b
  407489:	jne    0x4074f7
  40748b:	ret    0xd970
  40748e:	sbb    BYTE PTR [esi+0x6be8c86f],0xb3
  407495:	xchg   ebx,eax
  407496:	jmp    0x5489b49e
  40749b:	add    dh,BYTE PTR [eax-0x2e]
  40749e:	arpl   WORD PTR [eax+0x7ece7689],bx
  4074a4:	(bad)  
  4074a5:	retf   0xd414
  4074a8:	in     al,0xa7
  4074aa:	or     eax,0x376d64c5
  4074af:	mov    eax,ds:0x43e2094b
  4074b4:	fimul  WORD PTR [edx]
  4074b6:	xchg   edx,eax
  4074b7:	ret    
  4074b8:	mov    edi,0x447dab9b
  4074bd:	jne    0x407523
  4074bf:	shl    DWORD PTR [eax-0x7e],0x64
  4074c3:	mov    bh,0x35
  4074c5:	jne    0x40744d
  4074c7:	jmp    0x4074c2
  4074c9:	and    DWORD PTR [eax],ebp
  4074cb:	add    al,0x24
  4074cd:	(bad)  
  4074ce:	jmp    esp
  4074d0:	mov    al,0xf2
  4074d2:	into   
  4074d3:	outs   dx,BYTE PTR ds:[esi]
  4074d4:	xchg   ebp,eax
  4074d5:	je     0x40748c
  4074d7:	popf   
  4074d8:	mov    ?,WORD PTR [edi+edi*8-0x47]
	...
  407504:	jo     0x407550
  407506:	iret   
  407507:	push   esi
  407508:	jge    0x40757e
  40750a:	jne    0x407505
  40750c:	sbb    BYTE PTR [ebp-0x48],ch
  40750f:	ss ins DWORD PTR es:[edi],dx
  407511:	je     0x407563
  407513:	cdq    
  407514:	inc    BYTE PTR gs:[edi]
  407517:	inc    ecx
  407518:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407519:	jae    0x40751a
  40751b:	cs pusha 
  40751d:	mov    ebx,0x864d26cb
  407522:	test   DWORD PTR [ebx],ebp
  407524:	inc    esi
  407525:	je     0x407526
  407527:	mov    ecx,0xfbcbe3d
  40752c:	xor    eax,0xebd5e874
  407531:	or     DWORD PTR [eax],eax
  407533:	or     BYTE PTR fs:[eax*4-0x8be273],al
  40753b:	out    dx,al
  40753c:	fdiv   QWORD PTR [ebp+0x610ee6fe]
  407542:	pop    ds
  407543:	jl     0x407594
  407545:	or     edi,edi
  407547:	pushf  
  407548:	mov    edi,0xe7ceff73
  40754d:	mov    cl,bl
  40754f:	(bad)  
  407550:	out    dx,al
  407551:	inc    ecx
  407552:	ret    0x48ed
  407555:	fimul  WORD PTR [edx-0x3b2353b]
  40755b:	scas   al,BYTE PTR es:[edi]
  40755c:	pop    esp
  40755d:	add    al,ch
  40755f:	stos   BYTE PTR es:[edi],al
  407560:	(bad)  
  407561:	jae    0x407562
  407563:	jo     0x407571
  407565:	jo     0x407572
  407567:	test   eax,0x0
	...
  407590:	dec    esi
  407591:	lea    ecx,[ecx+ebp*8+0x680948]
  407598:	leave  
  407599:	aaa    
  40759a:	inc    ecx
  40759b:	add    BYTE PTR [ebp-0x66170484],ah
  4075a1:	ret    
  4075a2:	(bad)  
  4075a3:	push   DWORD PTR [edx]
  4075a5:	gs dec ebx
  4075a7:	xor    ah,bl
  4075a9:	pop    es
  4075aa:	push   eax
  4075ab:	call   FWORD PTR [edi]
  4075ad:	add    al,ch
  4075af:	xchg   esp,eax
  4075b0:	xchg   esp,eax
  4075b1:	idiv   dh
  4075b3:	call   0x3f3662
  4075b8:	sbb    bl,BYTE PTR [eax]
  4075ba:	xor    al,BYTE PTR [ecx-0xe]
  4075bd:	hlt    
  4075be:	je     0x4075bc
  4075c0:	mov    cl,bh
  4075c2:	int    0xff
  4075c4:	and    eax,0xf04c675d
  4075c9:	inc    esi
  4075ca:	dec    DWORD PTR [edi+0x65]
  4075cd:	jl     0x4075d6
  4075cf:	call   0x3f6bb5
  4075d4:	dec    edx
  4075d5:	cs retf 
  4075d7:	inc    DWORD PTR [ebp+0x65]
  4075da:	sub    BYTE PTR [edx],dh
  4075dc:	repz pop es
  4075de:	push   DWORD PTR [ebp-0x6a]
  4075e1:	fistp  QWORD PTR [eax+0x4ff4a5ce]
  4075e7:	push   0x413756
  4075ec:	inc    edx
  4075ed:	div    BYTE PTR [eax+ecx*1-0x76]
  4075f1:	pop    ecx
  4075f2:	std    
  4075f3:	inc    DWORD PTR [eax]
	...
  407619:	add    BYTE PTR [eax],al
  40761b:	add    BYTE PTR [ebp-0x7a34fa21],al
  407621:	hlt    
  407622:	addr16 inc ebx
  407624:	pusha  
  407625:	inc    esi
  407626:	(bad)  
  407627:	(bad)  
  407628:	pop    ds
  407629:	mov    eax,ebp
  40762b:	cwde   
  40762c:	mov    ah,0xf4
  40762e:	(bad)  
  40762f:	push   eax
  407630:	cmp    bl,BYTE PTR [ecx+0x31]
  407633:	inc    ecx
  407634:	xor    dl,BYTE PTR [edi-0x2]
  407637:	jne    0x407684
  407639:	push   0x8435316b
  40763e:	jl     0x407628
  407640:	es mov bh,0x7c
  407643:	jmp    DWORD PTR [esi+edi*2]
  407646:	jg     0x407630
  407648:	(bad)  
  407649:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40764a:	jl     0x40764b
  40764c:	add    bl,BYTE PTR [edi-0x889fff5]
  407652:	outs   dx,BYTE PTR ds:[esi]
  407653:	or     DWORD PTR [edi],0xffffffd5
  407656:	shr    DWORD PTR [ecx+0x4b],cl
  407659:	inc    esi
  40765a:	pop    es
  40765b:	(bad)  
  40765c:	jle    0x4076c6
  40765e:	imul   edi,esi,0x4
  407661:	int3   
  407662:	jnp    0x4075ed
  407664:	mov    ?,WORD PTR [eax+ecx*4]
  407667:	cmp    eax,0xffc30880
  40766c:	push   esp
  40766d:	arpl   WORD PTR [ebx],ax
  40766f:	je     0x407681
  407671:	cwde   
  407672:	mov    esi,0xd4600a30
  407677:	out    0x12,eax
  407679:	std    
  40767a:	add    al,BYTE PTR [eax]
  40767c:	inc    eax
  40767d:	and    bh,dh
  40767f:	sbb    eax,0x0
	...
  4076a8:	adc    al,0x18
  4076aa:	out    dx,eax
  4076ab:	shl    DWORD PTR [ebx+esi*2+0x5417c007],cl
  4076b2:	shl    DWORD PTR [edi+0x7],cl
  4076b5:	scas   al,BYTE PTR es:[edi]
  4076b6:	ret    0xfcff
  4076b9:	push   0xfffffff1
  4076bb:	pop    es
  4076bc:	jae    0x407679
  4076be:	jns    0x4076bf
  4076c0:	jl     0x40770a
  4076c2:	(bad)
  4076c6:	js     0x4076fb
  4076c8:	mov    ecx,DWORD PTR [ecx-0x4c9b0085]
  4076ce:	jbe    0x40767e
  4076d0:	and    esp,DWORD PTR [ebx-0x10]
  4076d3:	(bad)
  4076d7:	jne    0x40771c
  4076d9:	or     DWORD PTR [ecx-0x618dba8b],edx
  4076df:	out    dx,al
  4076e0:	imul   esi,DWORD PTR [edx+0x1c],0x8f6a230c
  4076e7:	jnp    0x407715
  4076e9:	(bad)  
  4076eb:	jp     0x40768b
  4076ed:	add    DWORD PTR [ecx+0x76721d59],edx
  4076f3:	out    dx,al
  4076f4:	outs   dx,BYTE PTR ds:[esi]
  4076f5:	jb     0x4076eb
  4076f7:	or     esp,DWORD PTR [ebx]
  4076f9:	push   esi
  4076fa:	addr16 jnp 0x407701
  4076fd:	loope  0x40772c
  4076ff:	xor    al,0x8a
  407701:	or     DWORD PTR [esi-0xf],edx
  407704:	dec    esp
  407705:	popa   
  407706:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407707:	js     0x4076f5
  407709:	jno    0x4076dc
  40770b:	js     0x40770d
	...
  407731:	add    BYTE PTR [eax],al
  407733:	add    BYTE PTR [ebx],bl
  407735:	enter  0x7ae8,0x56
  407739:	add    DWORD PTR [ecx+0x3c],eax
  40773c:	(bad)  
  40773d:	jno    0x40776d
  40773f:	in     al,dx
  407740:	sbb    DWORD PTR [eax],edi
  407742:	test   al,0x3
  407744:	(bad)  
  407745:	sti    
  407746:	lock imul esi,DWORD PTR [eax+0x74],0x16
  40774b:	jnp    0x407770
  40774d:	call   0x72ed3c29
  407752:	jl     0x40775f
  407754:	mov    bl,0x12
  407756:	cld    
  407757:	jp     0x4076f5
  407759:	loopne 0x4077b8
  40775b:	xor    eax,0xf0ee090a
  407760:	inc    esp
  407761:	popa   
  407762:	clc    
  407763:	js     0x4076e9
  407765:	jno    0x4077b8
  407767:	inc    ecx
  407768:	cmp    cl,al
  40776a:	call   0xc14175e9
  40776f:	jmp    FWORD PTR [edi+0x71]
  407772:	(bad)  
  407773:	jp     0x407753
  407775:	je     0x407735
  407777:	lock inc esp
  407779:	popa   
  40777a:	add    BYTE PTR [ebx],dh
  40777c:	or     BYTE PTR [edx-0x1],dh
  40777f:	push   cs
  407780:	inc    BYTE PTR [esi+0x4]
  407783:	jmp    0x6b2cfba3
  407788:	inc    ebx
  407789:	add    eax,0x70591d00
  40778e:	jne    0x407789
  407790:	mov    cl,0xf6
  407792:	or     eax,DWORD PTR [esi-0x4c17f6e5]
	...
  4077c0:	lods   eax,DWORD PTR ds:[esi]
  4077c1:	jo     0x4077c2
  4077c3:	jbe    0x4077e0
  4077c5:	add    eax,0x707f91e8
  4077ca:	push   DWORD PTR [eax]
  4077cc:	mov    ?,ebp
  4077ce:	push   DWORD PTR [ebx+0x2d835dcd]
  4077d4:	jl     0x4077b9
  4077d6:	dec    DWORD PTR [ebp-0x5]
  4077d9:	sbb    al,0xff
  4077db:	mov    esp,0xed757038
  4077e0:	jo     0x407839
  4077e2:	int3   
  4077e3:	ss push ecx
  4077e5:	add    al,0xc0
  4077e7:	mov    ch,0xf4
  4077e9:	add    DWORD PTR [ebp+0x25],0xa832adb0
  4077f0:	dec    eax
  4077f1:	jo     0x407868
  4077f3:	adc    eax,0xeccc220
  4077f8:	xor    ecx,esp
  4077fa:	(bad)  
  4077fb:	call   0xfe912731
  407800:	lods   al,BYTE PTR ds:[esi]
  407801:	or     al,ch
  407803:	dec    esp
  407804:	adc    DWORD PTR [eax-0x1],esi
  407807:	add    DWORD PTR [eax],0x3e9413b
  40780d:	idiv   bl
  40780f:	shl    DWORD PTR [ecx],1
  407811:	notrack call esi
  407814:	or     DWORD PTR [bx+si],eax
  407817:	mov    esi,0xfed9b1
  40781c:	daa    
  40781d:	std    
  40781e:	out    0x8a,eax
  407820:	popf   
  407821:	repnz (bad) 
  407823:	push   0x0
	...
  40784c:	mov    cl,0x37
  40784e:	inc    ecx
  40784f:	add    BYTE PTR [ebp+0x41e8fb60],bl
  407855:	(bad)  
  407856:	(bad)  
  407857:	call   FWORD PTR [edx+0x7]
  40785a:	add    bh,ch
  40785c:	pushf  
  40785d:	push   ebp
  40785e:	(bad)  
  40785f:	jne    0x40788b
  407861:	in     al,0x6e
  407863:	dec    ebp
  407865:	icebp  
  407866:	(bad)  
  407867:	jne    0x407807
  407869:	fstp   QWORD PTR [ebp-0x37]
  40786c:	popf   
  40786d:	repnz enter 0xf2c2,0xb
  407872:	push   ebp
  407873:	mov    ebx,DWORD PTR [esi-0x4ccd20a3]
  407879:	or     edi,edi
  40787b:	jne    0x40786b
  40787d:	jecxz  0x407867
  40787f:	int3   
  407880:	jge    0x407874
  407882:	(bad)  
  407883:	jne    0x407887
  407885:	pop    esp
  407886:	out    0x34,eax
  407888:	das    
  407889:	repnz (bad) 
  40788b:	call   DWORD PTR [edi-0x6800b001]
  407891:	add    ebp,eax
  407893:	ds ins DWORD PTR es:[edi],dx
  407895:	repnz (bad) 
  407897:	push   0x41374e
  40789c:	pop    ebp
  40789d:	pusha  
  40789e:	or     ebp,eax
  4078a0:	gs sar esi,0xff
  4078a4:	dec    ebp
  4078a5:	pusha  
  4078a6:	(bad)  
  4078a8:	cmp    dl,BYTE PTR [edi]
  4078aa:	int    0xff
  4078ac:	popf   
  4078ad:	lock je 0x4078c4
	...
  4078d8:	mov    dl,0xf0
  4078da:	je     0x4078e4
  4078dc:	call   0xc1c2:0x9dffff17
  4078e3:	adc    BYTE PTR [ebx+0x62],cl
  4078e6:	into   
  4078e7:	mov    bl,BYTE PTR [edi-0x1e]
  4078ea:	ds cld 
  4078ec:	fs sub al,0x8
  4078ef:	call   0xffb915ef
  4078f4:	inc    eax
  4078f5:	mov    ds:0x24c249ef,al
  4078fa:	js     0x407964
  4078fc:	dec    ebx
  4078fd:	pusha  
  4078fe:	push   0x34cdb3be
  407903:	inc    ecx
  407904:	dec    ebx
  407905:	xchg   edi,eax
  407906:	out    dx,al
  407907:	sti    
  407908:	sub    al,0x16
  40790a:	or     al,0xe8
  40790c:	rol    BYTE PTR [edi+0x61b3ff78],1
  407912:	add    ebp,edi
  407914:	aad    0x8
  407916:	dec    esp
  407917:	xor    cl,BYTE PTR [edx+0x7757860]
  40791d:	call   0x5733810f
  407922:	js     0x407923
  407924:	hlt    
  407925:	dec    eax
  407926:	add    eax,0xeb7edc00
  40792b:	rcr    BYTE PTR [ecx],cl
  40792d:	mov    eax,ds:0x2c56ff03
  407932:	js     0x4079a9
  407934:	inc    ebx
  407935:	enter  0xfee1,0xcc
  407939:	pop    ds
  40793a:	js     0x4079b1
	...
  407964:	(bad)  
  407965:	sbb    BYTE PTR [eax+ecx*8-0x3db5f044],dh
  40796c:	inc    ebx
  40796d:	pusha  
  40796e:	into   
  40796f:	mov    bl,BYTE PTR [edi+0x31fc3ee3]
  407975:	pusha  
  407976:	in     eax,dx
  407977:	add    al,0x9c
  407979:	cmc    
  40797a:	or     ch,al
  40797c:	jle    0x40799b
  40797e:	js     0x40797f
  407980:	ret    0x77a5
  407983:	push   0xc51b09d5
  407988:	jl     0x407970
  40798a:	xor    al,0x32
  40798c:	or     cl,BYTE PTR [ecx]
  40798e:	(bad)  
  40798f:	xor    DWORD PTR [ecx],ecx
  407991:	and    BYTE PTR [eax],ch
  407993:	add    al,0x64
  407995:	hlt    
  407996:	lock imul ebp,DWORD PTR [ebp-0x1c884191],0xffffffa8
  40799e:	sti    
  40799f:	les    ecx,FWORD PTR [esi+eiz*8+0x40]
  4079a3:	xor    cl,BYTE PTR [edx-0x76ce59f7]
  4079a9:	and    BYTE PTR [eax],ch
  4079ab:	add    al,0x34
  4079ad:	hlt    
  4079ae:	loopne 0x407a1b
  4079b0:	aad    0x6e
  4079b2:	mov    ?,WORD PTR [edi-0x4d]
  4079b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079b6:	mov    ebx,0x14e61cc4
  4079bb:	xor    cl,BYTE PTR [edx-0x76ce89f7]
  4079c1:	and    BYTE PTR [eax],ch
  4079c3:	add    al,0x4
  4079c5:	hlt    
  4079c6:	lock imul eax,DWORD PTR [eax],0x0
	...
  4079ee:	add    BYTE PTR [eax],al
  4079f0:	jge    0x407a61
  4079f2:	pop    esi
  4079f3:	ja     0x407a58
  4079f5:	mov    ebx,0xe5ecc51b
  4079fa:	mov    ah,0x31
  4079fc:	mov    cl,BYTE PTR [ecx]
  4079fe:	inc    esi
  4079ff:	xor    DWORD PTR [ecx-0x2bfc57e0],ecx
  407a05:	repz loopne 0x407a73
  407a08:	outs   dx,DWORD PTR gs:[esi]
  407a0a:	cs ja  0x407a40
  407a0d:	jg     0x4079ea
  407a0f:	les    edi,FWORD PTR [ebp+eiz*8+0x90a31a2]
  407a16:	push   ss
  407a17:	xor    DWORD PTR [ecx],ecx
  407a19:	and    BYTE PTR [eax-0xf0c5bfd],ch
  407a1f:	imul   ecx,DWORD PTR ds:0x2376fe6f,0xffffffa9
  407a26:	add    BYTE PTR [ebx+0x73676d87],bh
  407a2c:	cmp    cl,al
  407a2e:	jmp    ebp
  407a30:	cmp    ecx,ebx
  407a32:	sub    BYTE PTR [eax],ch
  407a34:	dec    edi
  407a35:	outs   dx,BYTE PTR ds:[esi]
  407a36:	jne    0x407a19
  407a38:	loopne 0x407a70
  407a3a:	dec    dh
  407a3c:	fucom  st(0)
  407a3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a3f:	sti    
  407a40:	xchg   DWORD PTR [ebp+0x67],ebp
  407a43:	inc    ebx
  407a44:	sbb    eax,ecx
  407a46:	push   DWORD PTR [ebp+0x2828cb1b]
  407a4c:	dec    edi
  407a4d:	ins    BYTE PTR es:[edi],dx
  407a4e:	jne    0x407a41
  407a50:	mov    al,0xb
  407a52:	(bad)  
  407a53:	sahf   
	...
  407a7c:	mov    ebp,0x7dbb1e1
  407a81:	ins    DWORD PTR es:[edi],dx
  407a82:	adc    ebx,DWORD PTR [bx+di-0x36]
  407a86:	inc    DWORD PTR [ebp+0x2828c75b]
  407a8c:	dec    edi
  407a8d:	ins    BYTE PTR es:[edi],dx
  407a8e:	jne    0x407a71
  407a90:	mov    al,ds:0x7d6efe03
  407a95:	loope  0x407a24
  407a97:	sbb    eax,DWORD PTR [esi]
  407a99:	ins    DWORD PTR es:[edi],dx
  407a9a:	addr16 mov ch,0x3a
  407a9d:	retf   0xc0ff
  407aa0:	dec    edx
  407aa1:	or     DWORD PTR [eax],eax
  407aa3:	imul   ebx,DWORD PTR [ebp-0xa],0x6e655107
  407aaa:	(bad)  
  407aab:	ds loopne 0x407a3a
  407aae:	xor    ch,BYTE PTR [eax-0x4981eb8]
  407ab4:	(bad)  
  407ab5:	ins    BYTE PTR es:[edi],dx
  407ab6:	addr16 jmp 0x407b01
  407ab9:	or     DWORD PTR [eax-0x17fb44e2],eax
  407abf:	xor    DWORD PTR [ebx],esi
  407ac1:	ins    BYTE PTR es:[edi],dx
  407ac2:	inc    DWORD PTR [ecx+0x4137eb]
  407ac8:	mov    dl,0x60
  407aca:	push   ebx
  407acb:	xor    ah,bl
  407acd:	or     BYTE PTR [eax+0x2],ch
  407ad0:	mov    ds:0xffff8008,al
  407ad5:	jmp    edi
  407ad7:	shl    DWORD PTR [edi-0xa],0xfe
  407adb:	push   0x4137d0
	...
  407b08:	or     bl,BYTE PTR [ecx+0x31]
  407b0b:	inc    ecx
  407b0c:	jb     0x407b6e
  407b0e:	add    DWORD PTR [eax],eax
  407b10:	jb     0x407a9a
  407b12:	push   DWORD PTR [ebp+0x5a]
  407b15:	loopne 0x407ac0
  407b17:	std    
  407b18:	xchg   ebp,eax
  407b19:	mul    BYTE PTR [edi-0x72]
  407b1c:	inc    eax
  407b1d:	inc    edi
  407b1e:	jmp    DWORD PTR [edi+0x68]
  407b21:	aaa    
  407b22:	inc    ecx
  407b23:	add    BYTE PTR [edx+0x7],bl
  407b26:	add    BYTE PTR [eax],al
  407b28:	mov    ds:0xca0874f6,al
  407b2d:	cdq    
  407b2e:	std    
  407b2f:	inc    ebp
  407b31:	pop    esp
  407b32:	lahf   
  407b33:	xor    ah,BYTE PTR [ebx+0x5]
  407b36:	push   0xff46d07a
  407b3b:	addr16 lock pop es
  407b3e:	add    BYTE PTR [eax-0x17f8a39b],al
  407b44:	push   ss
  407b45:	repz (bad) 
  407b47:	dec    DWORD PTR [edx]
  407b49:	mov    esi,DWORD PTR [edx]
  407b4b:	inc    ecx
  407b4c:	repnz pop edi
  407b4e:	jns    0x407b82
  407b50:	mov    bl,0x7
  407b52:	push   0x8007e202
  407b57:	dec    DWORD PTR [edi+0x7765e7ff]
  407b5d:	idiv   dh
  407b5f:	push   0x413720
  407b64:	fidiv  DWORD PTR [ecx+0x31]
  407b67:	inc    ecx
  407b68:	dec    ebx
  407b69:	(bad)  
  407b6a:	jmp    0x407b6d
	...
  407b94:	dec    ebx
  407b95:	bound  eax,QWORD PTR [ebx+0x6b7a16ff]
  407b9b:	dec    esi
  407b9c:	xchg   esi,eax
  407b9d:	push   0x74
  407b9f:	push   0x31
  407ba1:	jae    0x407b91
  407ba3:	pop    es
  407ba4:	jae    0x407c0e
  407ba6:	jne    0x407ba7
  407ba8:	jl     0x407b81
  407baa:	and    bh,bh
  407bac:	(bad)  
  407bad:	jns    0x407c1a
  407baf:	jmp    FWORD PTR [esi+0x52]
  407bb2:	je     0x407c1e
  407bb4:	inc    edi
  407bb5:	cmp    ebp,esi
  407bb7:	pop    es
  407bb8:	jae    0x407b66
  407bba:	jbe    0x407bbb
  407bbc:	push   esp
  407bbd:	stos   BYTE PTR es:[edi],al
  407bbe:	out    dx,al
  407bbf:	sti    
  407bc0:	dec    esp
  407bc1:	sub    al,0xc
  407bc3:	call   0xffb52084
  407bc8:	adc    bl,BYTE PTR [edi-0x8600001]
  407bce:	sub    WORD PTR [esi-0x578bfc9c],0x8
  407bd6:	add    DWORD PTR [ebx],esi
  407bd8:	mov    ah,BYTE PTR [eax+0x74]
  407bdb:	jne    0x407c24
  407bdd:	cwde   
  407bde:	cmc    
  407bdf:	leave  
  407be0:	or     al,0xf4
  407be2:	shl    BYTE PTR [edi+0x4b],cl
  407be5:	pusha  
  407be6:	fs mov esi,0x7ede39b
  407bec:	jecxz  0x407b94
  407bee:	imul   edi,edi,0xffffffec
  407bf1:	enter  0xc647,0xe4
  407bf5:	mov    ebx,0x13ea
	...
  407c1e:	add    BYTE PTR [eax],al
  407c20:	sbb    BYTE PTR [ecx+0x5c5eff03],ah
  407c26:	imul   ebx,DWORD PTR [ebp+0x1],0x34
  407c2a:	je     0x407c7c
  407c2c:	xor    esp,DWORD PTR [ecx+0x3]
  407c2f:	out    dx,eax
  407c30:	std    
  407c31:	or     DWORD PTR [ecx+0x11013e74],edi
  407c37:	call   0x43f1:0x6b166aa3
  407c3e:	push   cs
  407c3f:	je     0x407c74
  407c41:	and    bh,BYTE PTR [edx+0x746b94c2]
  407c47:	pop    es
  407c48:	mov    ds:0x8474232d,eax
  407c4d:	fld    DWORD PTR [eax-0x58a5b4ff]
  407c53:	aam    0x75
  407c55:	hlt    
  407c56:	lock pop ebx
  407c58:	repz pusha 
  407c5a:	(bad)  
  407c5b:	jae    0x407cd0
  407c5d:	and    BYTE PTR [edi-0x54bfa38d],0xfc
  407c64:	push   esp
  407c65:	aad    0x71
  407c67:	pusha  
  407c68:	dec    esp
  407c69:	hlt    
  407c6a:	in     al,0x5b
  407c6c:	adc    bh,BYTE PTR [edi]
  407c6e:	scas   al,BYTE PTR es:[edi]
  407c6f:	jae    0x407cc1
  407c71:	dec    ecx
  407c72:	sbb    eax,0xdb71a30e
  407c77:	les    ebp,FWORD PTR [edx+edi*4]
  407c7a:	adc    dl,0x12
  407c7d:	push   0xffffff8e
  407c7f:	aam    0x8c
  407c81:	push   0xfffffffc
  407c83:	sti    
	...
  407cac:	sub    al,0xdd
  407cae:	jge    0x407d23
  407cb0:	or     al,0x61
  407cb2:	adc    eax,0xa06a044a
  407cb7:	inc    esi
  407cb8:	push   ebx
  407cb9:	or     DWORD PTR [esi+edi*2+0x642585e7],edi
  407cc0:	popa   
  407cc1:	or     DWORD PTR [esi-0x7],edx
  407cc4:	push   esp
  407cc5:	push   0xffffffd4
  407cc7:	(bad)  
  407cc8:	fnsave [ebx]
  407cca:	stos   DWORD PTR es:[edi],eax
  407ccb:	sbb    al,0x8a
  407ccd:	or     DWORD PTR [ecx-0x25],edx
  407cd0:	add    ebp,DWORD PTR [edx+0x0]
  407cd3:	ss inc esi
  407cd5:	(bad)  
  407cd6:	repz ret 
  407cd8:	dec    eax
  407cd9:	push   0x75
  407cdb:	std    
  407cdc:	cmp    esp,esi
  407cde:	or     ebx,DWORD PTR [esi]
  407ce0:	jb     0x407ca9
  407ce2:	sub    BYTE PTR [eax+0x20416148],ch
  407ce8:	sbb    BYTE PTR [edx-0x77],ch
  407ceb:	lods   al,BYTE PTR ds:[esi]
  407cec:	and    al,0xdf
  407cee:	(bad)  
  407cef:	std    
  407cf0:	xchg   ebx,eax
  407cf1:	adc    edi,edi
  407cf3:	jl     0x407c79
  407cf5:	push   0x35
  407cf7:	stos   DWORD PTR es:[edi],eax
  407cf8:	pop    edi
  407cf9:	enter  0xd0ff,0x55
  407cfd:	inc    eax
  407cfe:	(bad)  
  407cff:	fsubp  st(7),st
  407d01:	ret    
  407d02:	mul    DWORD PTR [ebx+edx*4+0x61]
  407d06:	push   eax
  407d07:	into   
  407d08:	arpl   WORD PTR ds:0x6a4b3cff,cx
  407d0e:	xor    eax,0x2b
	...
  407d37:	add    BYTE PTR [esi],ch
  407d39:	enter  0xc0ff,0x5d
  407d3d:	push   edx
  407d3e:	jmp    FWORD PTR [esi+0x13efcebf]
  407d44:	dec    edi
  407d45:	push   0xdeb9c975
  407d4a:	or     edx,DWORD PTR [esi+0x2828cb63]
  407d50:	inc    edi
  407d51:	jno    0x407d50
  407d53:	mov    cl,0x99
  407d55:	push   0x96ab2489
  407d5a:	inc    ebp
  407d5b:	mov    DWORD PTR [eax],ebx
  407d5d:	push   0xde79c575
  407d62:	or     esp,DWORD PTR [esi+0x33]
  407d65:	retf   
  407d66:	sub    BYTE PTR [eax+0x21e57148],ch
  407d6c:	pop    ecx
  407d6d:	push   0x8c64a489
  407d72:	jge    0x407d74
  407d74:	mov    cs,WORD PTR [edi+ecx*1]
  407d77:	test   BYTE PTR [esi+0xc],dh
  407d7a:	add    BYTE PTR [eax],al
  407d7c:	xor    DWORD PTR [ecx-0x9],ebx
  407d7f:	add    BYTE PTR [ebp-0x5dff7570],bl
  407d85:	or     al,0x83
  407d87:	jge    0x407ddf
  407d89:	or     al,0xf
  407d8b:	test   BYTE PTR [edx],dh
  407d8d:	or     al,0x0
  407d8f:	add    BYTE PTR [ebp+0x61],cl
  407d92:	daa    
  407d93:	call   DWORD PTR [edi]
  407d95:	fs out 0x2a,eax
  407d98:	pusha  
  407d99:	(bad)  
  407d9b:	inc    DWORD PTR [eax]
	...
  407dc1:	add    BYTE PTR [eax],al
  407dc3:	add    BYTE PTR [edi],al
  407dc5:	clc    
  407dc6:	(bad)  
  407dc7:	jne    0x407e33
  407dc9:	les    eax,FWORD PTR [eax-0x125923e]
  407dcf:	jne    0x407e3b
  407dd1:	fidiv  DWORD PTR [eax+ecx*1-0x76]
  407dd5:	arpl   cx,ax
  407dd7:	dec    DWORD PTR [ebp-0x720b8b26]
  407ddd:	pusha  
  407dde:	pop    es
  407ddf:	call   0x3f4cdd
  407de4:	mov    bl,0x78
  407de6:	daa    
  407de7:	adc    esi,DWORD PTR [edx]
  407de9:	jmp    0xd97ff3ab
  407dee:	je     0x407de0
  407df0:	int    0x5f
  407df2:	pop    es
  407df3:	call   0x3f4d5d
  407df8:	leave  
  407df9:	or     bh,bh
  407dfb:	jne    0x407db7
  407dfd:	fnstenv [eax+esi*8-0x73]
  407e01:	pusha  
  407e02:	pop    es
  407e03:	call   0x3f4c21
  407e08:	ins    DWORD PTR es:[edi],dx
  407e09:	pusha  
  407e0a:	jmp    0x407e0b
  407e0c:	pop    ss
  407e0d:	fs out 0x3c,eax
  407e10:	and    dl,bl
  407e12:	inc    BYTE PTR [ebx+0x673d4b]
  407e18:	push   edi
  407e19:	pop    ebp
  407e1a:	test   BYTE PTR [ebp-0x15],bh
  407e1d:	jne    0x407e15
  407e1f:	push   cs
  407e20:	shr    BYTE PTR [edi+eiz*2-0x8e08401],0x7
	...
  407e50:	mov    bl,0x30
  407e52:	inc    ebx
  407e53:	push   DWORD PTR [edx+edi*8+0x74b69fd]
  407e5a:	test   DWORD PTR [edi],0xff42c4b3
  407e60:	pushf  
  407e61:	push   ss
  407e62:	div    ebx
  407e64:	mov    ds:0x8cff4655,eax
  407e69:	data16 idiv bl
  407e6c:	jae    0x407eab
  407e6e:	inc    esi
  407e6f:	(bad)  
  407e70:	jl     0x407ee8
  407e72:	div    bh
  407e74:	arpl   WORD PTR [ebp+0x46],sp
  407e77:	jmp    FWORD PTR [esi+eax*2-0xa]
  407e7b:	out    dx,eax
  407e7c:	jae    0x407eeb
  407e7e:	inc    esi
  407e7f:	call   FWORD PTR [esi+edx*2-0xa]
  407e83:	jmp    0x407ee8
  407e85:	jne    0x407ecd
  407e87:	dec    DWORD PTR [esi+eiz*4-0xa]
  407e8b:	jecxz  0x407ec0
  407e8d:	popf   
  407e8e:	inc    edi
  407e8f:	(bad)  
  407e90:	cmp    al,0xaa
  407e92:	inc    ebp
  407e93:	and    al,0x4b
  407e95:	and    eax,0xaccaec7d
  407e9a:	jae    0x407e93
  407e9c:	and    al,0x80
  407e9e:	fist   DWORD PTR [edx]
  407ea0:	dec    ebx
  407ea1:	out    0xb0,eax
  407ea3:	push   0xffc2a3c5
  407ea8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ea9:	repz xor eax,DWORD PTR [ecx+0x4b]
  407ead:	or     dl,dh
  407eaf:	xor    cl,BYTE PTR [edx+0x73db70]
	...
  407ed9:	add    BYTE PTR [eax],al
  407edb:	add    BYTE PTR [eax],bh
  407edd:	or     DWORD PTR [eax+0x19f66303],ebp
  407ee3:	ret    
  407ee4:	in     al,0xee
  407ee6:	iret   
  407ee7:	xor    al,0x8a
  407ee9:	or     DWORD PTR [esi-0xa],ecx
  407eec:	inc    eax
  407eed:	mov    sp,0xe4fb
  407ef1:	lock ds jo 0x407eb9
  407ef5:	icebp  
  407ef6:	fld    DWORD PTR [ebx]
  407ef8:	lods   al,BYTE PTR ds:[esi]
  407ef9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407efa:	rol    DWORD PTR [eax+0x78],0xc8
  407efe:	call   0xa85b01de
  407f03:	add    esi,DWORD PTR [ebx]
  407f05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f06:	fcmovb st,st(2)
  407f08:	pushf  
  407f09:	out    dx,al
  407f0a:	inc    esi
  407f0b:	xor    al,0xa
  407f0d:	or     DWORD PTR [ecx-0x1737a773],edx
  407f13:	fstp   TBYTE PTR [edx+0x7c03a81a]
  407f19:	(bad)  
  407f1b:	jo     0x407f1b
  407f1d:	adc    cl,dl
  407f1f:	sub    ebp,DWORD PTR [ebp+0x66]
  407f22:	(bad)  
  407f24:	cmp    BYTE PTR [ecx],cl
  407f26:	(bad)  
  407f27:	scas   al,BYTE PTR es:[edi]
  407f28:	repz xor eax,0xee54c515
  407f2e:	out    0x37,al
  407f30:	or     cl,BYTE PTR [ecx]
  407f32:	push   ecx
  407f33:	add    DWORD PTR [edi-0x38],edi
  407f36:	call   0x285ab116
  407f3b:	add    al,0xa3
  407f3d:	inc    ebx
  407f3e:	fcmovb st,st(4)
	...
  407f68:	sub    al,0xee
  407f6a:	pushf  
  407f6b:	xor    ecx,DWORD PTR [edx+0x50f99609]
  407f71:	data16 adc al,0xfc
  407f74:	sub    al,0x14
  407f76:	xchg   DWORD PTR [edi+0xc],ebp
  407f79:	xchg   esp,eax
  407f7a:	and    al,0x70
  407f7c:	fwait
  407f7d:	data16 add ah,bh
  407f80:	cld    
  407f81:	xor    ax,0x562b
  407f85:	enter  0x50ff,0xb8
  407f89:	jle    0x407f8b
  407f8b:	jmp    0xd3b62571
  407f90:	test   esp,ecx
  407f92:	imul   ecx
  407f94:	dec    eax
  407f95:	or     DWORD PTR [eax],eax
  407f97:	add    bl,BYTE PTR cs:[edx-0x1]
  407f9b:	out    0x48,al
  407f9d:	or     DWORD PTR [edx-0x17],ebp
  407fa0:	mov    ds:0x92e96965,al
  407fa5:	mov    WORD PTR gs:[esp+esi*1+0x23648cb9],gs
  407fad:	pop    esi
  407fae:	call   DWORD PTR [esi]
  407fb0:	ja     0x408018
  407fb2:	jne    0x407fc5
  407fb4:	and    al,0xdc
  407fb6:	sti    
  407fb7:	adc    DWORD PTR [esi],ecx
  407fb9:	jg     0x407fbb
  407fbb:	jmp    0xebb52541
  407fc0:	and    ecx,ecx
  407fc2:	cmp    dl,BYTE PTR [bx-0x38]
  407fc6:	jmp    ebp
  407fc8:	jae    0x407fdb
  407fca:	call   0x40805d
	...
  407ff3:	add    BYTE PTR ds:0xf862ff66,cl
  407ff9:	xchg   ebx,eax
  407ffa:	test   ebp,edx
  407ffc:	frstor [ebp-0x1]
  407fff:	sbb    DWORD PTR [ecx+0x6d],edi
  408002:	hlt    
  408003:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408004:	mov    ch,0x64
  408006:	mov    DWORD PTR [eax+edi*4+0x5c],ebp
  40800a:	jmp    FWORD PTR [esi-0x610f615b]
  408010:	popf   
  408011:	call   DWORD PTR fs:[edi+eiz*1]
  408015:	ins    DWORD PTR es:[edi],dx
  408016:	cmc    
  408017:	xchg   edi,eax
  408018:	lods   eax,DWORD PTR ds:[esi]
  408019:	call   DWORD PTR fs:[eax+ebx*4+0x5c]
  40801e:	inc    DWORD PTR [eax]
  408020:	(bad)
  408023:	ret    
  408024:	test   ebx,esi
  408026:	inc    BYTE PTR [ebp+0x7a]
  408029:	mov    edi,0xf4ffff94
  40802e:	out    0x2f,eax
  408030:	ins    BYTE PTR es:[edi],dx
  408031:	or     BYTE PTR [eax],al
  408033:	leave  
  408034:	xor    BYTE PTR [eax-0x1],ah
  408037:	push   esp
  408038:	imul   eax,esp,0x4286c482
  40803e:	jmp    FWORD PTR [ecx-0x24]
  408041:	repz je 0x40804c
  408044:	sbb    bl,bl
  408046:	mov    edi,0x44e575ff
  40804b:	cld    
  40804c:	mov    bl,BYTE PTR [esi]
  40804e:	xor    eax,DWORD PTR [ecx-0x5e]
  408051:	repz je 0x40805c
  408054:	cmp    bl,BYTE PTR [ebx+0xfffe]
	...
  40807e:	add    BYTE PTR [eax],al
  408080:	xor    eax,0xc167ff42
  408085:	pop    ss
  408086:	inc    ecx
  408087:	add    BYTE PTR [edx+0x7241331e],bh
  40808d:	repz xor al,0x42
  408090:	mov    ecx,DWORD PTR [ebp-0x1]
  408093:	out    0x32,eax
  408095:	into   
  408096:	(bad)  
  408097:	(bad)  
  408098:	jns    0x408062
  40809a:	jae    0x4080ab
  40809c:	and    bh,BYTE PTR ds:0xc06a75fe
  4080a2:	xchg   esp,eax
  4080a3:	cld    
  4080a4:	test   esi,esi
  4080a6:	out    0x85,eax
  4080a8:	mov    eax,ds:0x326afef6
  4080ad:	inc    eax
  4080ae:	mov    ah,0x28
  4080b0:	jae    0x4080bf
  4080b2:	push   0xff473149
  4080b7:	dec    BYTE PTR [edi]
  4080b9:	dec    edx
  4080ba:	sub    BYTE PTR [ecx+0x32],al
  4080bd:	rol    BYTE PTR [ebp+0x6d7b4bc6],0xb
  4080c4:	or     edi,esi
  4080c6:	cld    
  4080c7:	dec    edi
  4080c8:	jnp    0x408055
  4080ca:	test   DWORD PTR [edi],0xff6ff6f3
  4080d0:	cld    
  4080d1:	mov    ecx,ecx
  4080d3:	ret    0xf2f4
  4080d6:	fcos   
  4080d8:	fs dec edi
  4080da:	xor    BYTE PTR [ecx+0x4b],al
  4080dd:	cmp    dh,BYTE PTR ds:0xdb728a33
  4080e3:	add    DWORD PTR [eax],eax
	...
  408109:	add    BYTE PTR [eax],al
  40810b:	add    BYTE PTR [ebx+0x72],cl
  40810e:	sub    eax,0x6e
  408111:	xor    al,0x6d
  408113:	call   DWORD PTR [eax+0x32]
  408116:	clc    
  408117:	push   cs
  408118:	sbb    eax,DWORD PTR [edx-0x35bc8a94]
  40811e:	sar    ebx,0xac
  408121:	sub    bl,BYTE PTR [edx+esi*1-0x78]
  408125:	add    ch,BYTE PTR [ebp+0x6a]
  408128:	dec    ebx
  408129:	mov    dh,BYTE PTR [esi-0x248df5d8]
  40812f:	dec    eax
  408130:	pop    eax
  408131:	mov    cl,0x3
  408133:	push   0x80037249
  408138:	jae    0x4080df
  40813a:	inc    ebp
  40813b:	push   DWORD PTR [esi+eiz*2+0x43]
  40813f:	je     0x40817d
  408141:	and    dl,ah
  408143:	(bad)  
  408144:	ficomp WORD PTR [ecx+0x5b]
  408147:	sbb    DWORD PTR [edi+0x3a],ebx
  40814a:	ins    BYTE PTR es:[edi],dx
  40814b:	call   0xffad3092
  408150:	loope  0x4081b9
  408152:	ins    BYTE PTR es:[edi],dx
  408153:	jne    0x4081a8
  408155:	cmp    cl,ch
  408157:	sti    
  408158:	cmp    al,0x9c
  40815a:	fldenv [edx]
  40815c:	xor    al,0x1e
  40815e:	cld    
  40815f:	out    0xbb,eax
  408161:	or     DWORD PTR [ebp-0x30fdb94],esp
  408167:	ins    BYTE PTR es:[edi],dx
  408168:	xchg   esi,eax
  408169:	adc    DWORD PTR [ecx-0x719cef1b],eax
  40816f:	ins    BYTE PTR es:[edi],dx
	...
  408198:	xchg   esi,eax
  408199:	gs xchg dh,dh
  40819c:	dec    esp
  40819d:	jno    0x4081be
  40819f:	inc    esp
  4081a0:	cld    
  4081a1:	bound  esp,QWORD PTR [eax+0x14094f41]
  4081a7:	jns    0x408188
  4081a9:	xchg   BYTE PTR ds:0xd2ba7d6f,ch
  4081af:	add    esi,DWORD PTR [ecx+0xa]
  4081b2:	push   esi
  4081b3:	test   BYTE PTR [ecx+esi*2-0x17],0x43
  4081b8:	int3   
  4081b9:	bound  esi,QWORD PTR [eax-0x3a]
  4081bc:	ror    BYTE PTR [esi-0x379b370c],0xe8
  4081c3:	js     0x40823b
  4081c5:	ret    0xc300
  4081c8:	lods   al,BYTE PTR ds:[esi]
  4081c9:	loop   0x4081b0
  4081cb:	add    ebx,DWORD PTR [edi]
  4081cd:	(bad)  
  4081ce:	nop
  4081cf:	ret    
  4081d0:	pop    eax
  4081d1:	enter  0xd4e8,0xac
  4081d5:	int3   
  4081d6:	jae    0x4081db
  4081d8:	dec    ebx
  4081d9:	push   cs
  4081da:	sub    edi,esi
  4081dc:	gs mov ebx,0x6290db10
  4081e2:	not    dl
  4081e4:	in     al,dx
  4081e5:	or     cl,ch
  4081e7:	pop    esp
  4081e8:	lods   eax,DWORD PTR ds:[esi]
  4081e9:	icebp  
  4081ea:	inc    esp
  4081eb:	xor    BYTE PTR [edx],cl
  4081ed:	or     DWORD PTR [ecx],edi
  4081ef:	imul   edx,esi,0x10
  4081f2:	ror    esi,0x6d
  4081f5:	(bad)  
  4081f6:	into   
  4081f7:	pop    esp
  4081f8:	lds    eax,FWORD PTR [edi-0x3a]
  4081fb:	imul   eax,DWORD PTR [eax],0x0
	...
  408222:	add    BYTE PTR [eax],al
  408224:	mov    bl,0xd3
  408226:	hlt    
  408227:	les    edi,FWORD PTR [ebx+edi*4]
  40822a:	inc    eax
  40822c:	pop    eax
  40822d:	jl     0x40822f
  40822f:	jmp    0x6b52461
  408234:	stc    
  408235:	imul   edi,DWORD PTR [edx],0x5062b0ad
  40823b:	add    DWORD PTR [edi+0x9],ecx
  40823e:	out    dx,eax
  40823f:	dec    edi
  408240:	out    dx,eax
  408241:	mov    ebp,0xb94f2833
  408246:	(bad)  
  408247:	hlt    
  408248:	add    BYTE PTR [edx+0x2c],ch
  40824b:	mov    fs,WORD PTR [eax+0x62]
  40824e:	call   0xffa30764
  408253:	push   edx
  408254:	dec    esi
  408255:	retf   
  408256:	jg     0x408277
  408258:	inc    edi
  408259:	fdiv   st(1),st
  40825b:	scas   eax,DWORD PTR es:[edi]
  40825c:	ins    BYTE PTR es:[edi],dx
  40825d:	push   ss
  40825e:	rcl    BYTE PTR [eax+0x46ff6260],0x3d
  408265:	mov    bl,0x38
  408267:	out    0xbb,al
  408269:	xchg   esp,eax
  40826a:	(bad)  
  40826b:	mov    esp,0xe175622c
  408270:	adc    BYTE PTR [ebp-0x3dcfd941],bl
  408276:	pop    ebp
  408277:	xor    BYTE PTR ds:0x15bc000d,al
  40827d:	jne    0x4082e7
  40827f:	jmp    0x91fef4cc
  408284:	jb     0x40829b
  408286:	inc    ecx
  408287:	jmp    0x40828c
	...
  4082b0:	icebp  
  4082b1:	fisttp DWORD PTR [ebx]
  4082b3:	idiv   BYTE PTR [ebx+0x9]
  4082b6:	call   0xffa26bc1
  4082bb:	push   ecx
  4082bc:	dec    esi
  4082bd:	or     edi,ebp
  4082bf:	lahf   
  4082c0:	add    BYTE PTR [esi+0x624f2834],0x75
  4082c7:	fucom  st(1)
  4082c9:	fild   DWORD PTR [edi]
  4082cb:	add    BYTE PTR [edx],bl
  4082cd:	mov    bh,0xe5
  4082cf:	(bad)  
  4082d0:	std    
  4082d1:	sbb    eax,0x3a2208c2
  4082d6:	mov    ch,ah
  4082d8:	fstp   QWORD PTR [ecx+0xb]
  4082db:	call   0x3f4e51
  4082e0:	sbb    ebp,ecx
  4082e2:	jae    0x4082fe
  4082e4:	dec    edx
  4082e5:	cmp    eax,0x3d224133
  4082ea:	out    0xd8,eax
  4082ec:	mov    bh,0xf3
  4082ee:	(bad)  
  4082ef:	push   eax
  4082f0:	(bad)  
  4082f1:	hlt    
  4082f2:	je     0x4082fc
  4082f4:	retf   0xff7f
  4082f7:	call   FWORD PTR [ebp-0x3c]
  4082fa:	aad    0xc1
  4082fc:	ins    DWORD PTR es:[edi],dx
  4082fd:	repz enter 0xdac2,0xc
  408302:	push   ebp
  408303:	mov    ecx,DWORD PTR [esi+0x8fcc487]
  408309:	or     eax,0x590d086a
  40830e:	pop    es
  40830f:	call   0x40351e
	...
  40833c:	sub    ecx,DWORD PTR [ecx-0x5]
  40833f:	push   0xffffffa2
  408341:	inc    esp
  408342:	pop    edx
  408343:	xor    eax,0x88680cf3
  408348:	jbe    0x40838f
  40834a:	(bad)  
  40834b:	(bad)  
  40834c:	ja     0x408394
  40834e:	sub    BYTE PTR [ecx-0x5e],al
  408351:	les    edi,FWORD PTR [ebp+0xaf34dc4]
  408357:	shl    dh,0xf
  40835a:	push   eax
  40835b:	push   0xbeef0c63
  408360:	shl    bl,cl
  408362:	je     0x40836c
  408364:	jp     0x4083ce
  408366:	loop   0x408367
  408368:	jge    0x408327
  40836a:	(bad)  
  40836b:	ror    DWORD PTR [ebx+0x37],0x69
  40836f:	push   0x4b
  408371:	retf   0x34cc
  408374:	mov    dh,BYTE PTR [edx-0x25]
  408377:	lods   al,BYTE PTR ds:[esi]
  408378:	ja     0x4083ab
  40837a:	add    al,0xff
  40837c:	jle    0x4083b2
  40837e:	sbb    eax,DWORD PTR [ecx+0x4b]
  408381:	dec    edx
  408382:	jns    0x408348
  408384:	and    al,0xa7
  408386:	std    
  408387:	mov    edi,0x67d35697
  40838c:	dec    edx
  40838d:	jb     0x4083e7
  40838f:	mov    esi,0x7ef8f7b
  408394:	repz pop ss
  408396:	gs (bad) 
  408398:	cld    
  408399:	jns    0x408364
  40839b:	shl    ah,0xd6
  40839e:	(bad)  
	...
  4083c8:	or     ebp,DWORD PTR fs:[edi]
  4083cb:	inc    ecx
  4083cc:	dec    ebx
  4083cd:	cmp    ah,BYTE PTR [eax+0x34]
  4083d0:	mov    dh,BYTE PTR [edx+0x68]
  4083d3:	xor    eax,0xffc30989
  4083d8:	in     al,0x51
  4083da:	aas    
  4083db:	inc    esp
  4083dd:	pop    edx
  4083de:	inc    ebx
  4083df:	je     0x40842d
  4083e1:	adc    bl,0xfe
  4083e4:	ds push 0x5b
  4083e7:	or     ch,BYTE PTR [esi+ebp*1+0x315ee869]
  4083ee:	imul   edi,edi,0x6adb7231
  4083f4:	pop    esi
  4083f5:	mov    cl,0x3
  4083f7:	push   0xffc2353c
  4083fc:	test   DWORD PTR [ebp+eax*8+0x5b720a28],ebx
  408403:	ss (bad) 
  408405:	push   esi
  408406:	push   0xf7d58b0b
  40840b:	dec    edi
  40840c:	sti    
  40840d:	or     dh,ah
  40840f:	out    dx,al
  408410:	inc    esp
  408411:	jno    0x4083dc
  408413:	imul   edx,DWORD PTR [edi+ebx*2-0x3f],0xce5f8bfc
  40841b:	fld    QWORD PTR [edi+eiz*8+0x3c]
  40841f:	das    
  408420:	mov    cl,BYTE PTR [ecx]
  408422:	push   ecx
  408423:	mov    eax,0x68e8c87f
  408428:	jbe    0x4083f5
  40842a:	inc    edx
	...
  408454:	and    al,0x67
  408456:	cmc    
  408457:	aas    
  408458:	sbb    al,0x5f
  40845a:	repnz inc ebx
  40845c:	lahf   
  40845d:	push   cs
  40845e:	cmp    esp,edx
  408460:	or     eax,0xbd5be0d5
  408465:	pop    edi
  408466:	xchg   BYTE PTR [eax-0xd],ch
  408469:	push   0xf3f468a9
  40846e:	aam    0x68
  408470:	jbe    0x408483
  408472:	or     DWORD PTR [ebx-0x1b],0x42dd665e
  408479:	pop    esi
  40847a:	aam    0xfb
  40847c:	in     al,dx
  40847d:	dec    edi
  40847e:	push   edi
  40847f:	push   0x6909f3cc
  408484:	adc    DWORD PTR ds:[ecx+0x3f],edx
  408488:	mov    ebp,0x3e683e5e
  40848d:	pop    ebp
  40848e:	ss out dx,al
  408490:	inc    esp
  408491:	jno    0x40848a
  408493:	test   eax,0x45305ea4
  408498:	inc    edi
  408499:	or     DWORD PTR [esp+edi*2-0x863a159],esi
  4084a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084a1:	popa   
  4084a2:	and    eax,0x29128468
  4084a7:	out    dx,eax
  4084a8:	push   cs
  4084a9:	icebp  
  4084aa:	arpl   WORD PTR [esi],bp
  4084ac:	or     cl,BYTE PTR [ecx]
  4084ae:	add    BYTE PTR [ecx-0x113b73f0],bl
  4084b4:	in     al,dx
  4084b5:	mov    eax,0x394f
	...
  4084de:	add    BYTE PTR [eax],al
  4084e0:	jg     0x408540
  4084e2:	dec    esi
  4084e4:	lods   eax,DWORD PTR ds:[esi]
  4084e5:	icebp  
  4084e6:	jg     0x408504
  4084e8:	xchg   BYTE PTR [esi+0x4f],bl
  4084eb:	into   
  4084ec:	cmp    al,BYTE PTR [esi]
  4084ee:	call   0xff9f2f0d
  4084f3:	and    DWORD PTR [edi],edx
  4084f5:	or     DWORD PTR [eax],eax
  4084f7:	(bad)  
  4084f8:	in     eax,0xf0
  4084fa:	mov    ?,esp
  4084fc:	divps  xmm1,XMMWORD PTR [edi-0x5a]
  408500:	sbb    al,BYTE PTR [esi]
  408502:	call   0xff9f30e5
  408507:	xor    edi,ebp
  408509:	pop    es
  40850a:	add    BYTE PTR [esi-0x53],bh
  40850d:	lock pushf 
  40850f:	mov    esp,0x7e4f5e07
  408514:	cli    
  408515:	add    eax,0x5e6bc2e8
  40851a:	inc    DWORD PTR [ecx+0x66ff9e14]
  408520:	push   ds
  408521:	dec    ebx
  408522:	or     cl,ch
  408524:	sti    
  408525:	xchg   edx,eax
  408526:	in     al,dx
  408527:	push   0xffffff8b
  408529:	pop    ebp
  40852a:	push   0xffffffe9
  40852c:	mov    ds:0xc0bcff10,al
  408531:	gs jns 0x4085b0
  408534:	sub    al,0x5e
  408536:	mov    DWORD PTR [esp-0x65d1e60d],ebp
  40853d:	add    eax,0x5e2469e8
  408542:	call   DWORD PTR [ebx+0x0]
	...
  40856c:	imul   ebx,DWORD PTR [esi+0x75],0xfed6f0e1
  408573:	push   cs
  408574:	in     al,dx
  408575:	repnz sbb eax,DWORD PTR [eax]
  408578:	inc    ebp
  408579:	pop    eax
  40857a:	pop    es
  40857b:	call   0x3f6c46
  408580:	jne    0x4085da
  408582:	sti    
  408583:	(bad)  
  408584:	fbld   TBYTE PTR [ecx-0x19]
  408587:	xchg   ebx,eax
  408588:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408589:	out    0xfe,al
  40858b:	leave  
  40858c:	mov    al,ds:0xe954ff5d
  408591:	mov    ch,0x69
  408593:	add    BYTE PTR [edx+0x324134cf],cl
  408599:	inc    ecx
  40859a:	(bad)  
  40859b:	xor    eax,0x35ff0563
  4085a0:	pusha  
  4085a1:	inc    BYTE PTR [eax+0x0]
  4085a4:	or     dl,BYTE PTR [edx+eax*8-0x1]
  4085a8:	in     eax,0x5f
  4085aa:	mov    edi,0xfe391f74
  4085af:	jne    0x4085c3
  4085b1:	in     al,0x74
  4085b3:	or     al,0x42
  4085b5:	in     al,0x74
  4085b7:	or     dl,bl
  4085b9:	call   0xbfdd:0xc075ffe4
  4085c0:	jne    0x4085a5
  4085c2:	imul   eax,DWORD PTR [eax],0x4134cf4a
  4085c8:	repnz inc eax
  4085ca:	(bad)  
  4085cb:	xor    eax,0x26808a3
	...
  4085f8:	loop   0x408602
  4085fa:	sub    al,0x12
  4085fd:	retf   0xfffe
  408600:	mov    ecx,0xd21573c8
  408605:	jecxz  0x40867b
  408607:	adc    BYTE PTR [ebp+0x59],dh
  40860a:	or     edx,DWORD PTR [eax+0x75]
  40860d:	pop    ecx
  40860e:	pop    es
  40860f:	call   0x3f4245
  408614:	cmp    dh,BYTE PTR [ebx-0x41]
  408617:	dec    DWORD PTR [ebx-0xd]
  40861a:	gs jne 0x408678
  40861d:	or     esi,eax
  40861f:	or     esi,ebx
  408621:	ret    
  408622:	das    
  408623:	inc    ecx
  408624:	dec    ebx
  408625:	pop    ebx
  408626:	out    dx,eax
  408627:	pop    es
  408628:	arpl   WORD PTR [edi+ebx*2],bx
  40862b:	jmp    DWORD PTR [ecx+ebp*1+0x41]
  40862f:	or     al,0x4b
  408631:	sbb    eax,0xa6c8ec79
  408636:	push   0xf9c84b6a
  40863b:	(bad)  
  40863c:	mov    esi,0xffbe5b6a
  408641:	inc    edx
  408642:	mov    DWORD PTR gs:[esi+0x2cffdc9e],ecx
  408649:	inc    ebx
  40864a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40864b:	push   0xffc254f2
  408650:	sbb    eax,0xabe7fbfd
  408655:	jnp    0x4086bc
  408657:	jmp    DWORD PTR [ebx+0xef0371]
	...
  408681:	add    BYTE PTR [eax],al
  408683:	add    ch,al
  408685:	or     DWORD PTR [eax+0x64728a35],esi
  40868b:	jne    0x4086d0
  40868d:	jp     0x408645
  40868f:	(bad)  
  408690:	in     al,dx
  408691:	shl    BYTE PTR [ebp+esi*2-0x19],cl
  408695:	jmp    0xffa8:0x1ff307ee
  40869c:	aam    0x18
  40869e:	inc    edx
  40869f:	add    al,0x4b
  4086a1:	popf   
  4086a2:	js     0x408690
  4086a4:	retf   0x4c25
  4086a7:	idiv   DWORD PTR [edx+eax*8-0x7e48ba8a]
  4086ae:	fs jne 0x4086f0
  4086b1:	adc    ebp,DWORD PTR [edi]
  4086b3:	inc    edx
  4086b4:	jb     0x408667
  4086b6:	add    ebp,eax
  4086b8:	mov    dh,0x8
  4086ba:	js     0x4086c0
  4086bc:	dec    ebx
  4086bd:	adc    BYTE PTR [ecx],ch
  4086bf:	cmc    
  4086c0:	mov    DWORD PTR [eax-0x18],0xa4444b03
  4086c7:	imul   ecx,DWORD PTR [ebx+0x9],0xffffffe9
  4086cb:	add    ecx,DWORD PTR [ebp+eax*8+0x94464f4]
  4086d2:	jmp    0xe931ebb0
  4086d7:	fstp   DWORD PTR [ecx+esi*8-0x18]
  4086db:	jbe    0x4086eb
  4086dd:	push   ebp
  4086de:	cmp    DWORD PTR [edi-0x3a],esi
  4086e1:	push   esp
  4086e2:	fisub  WORD PTR [esp+eax*2-0x46]
  4086e6:	int    0xee
	...
  408710:	xor    al,0x5b
  408712:	cmp    al,0x68
  408714:	and    esp,ebx
  408716:	push   edi
  408717:	add    ecx,DWORD PTR [ebx+0xe]
  40871a:	test   eax,0x52704fef
  40871f:	add    cl,BYTE PTR [ebx+0x9]
  408722:	adc    DWORD PTR [ecx+0x64e8c863],esi
  408728:	xchg   esi,eax
  408729:	or     eax,0x5b097981
  40872e:	mov    ss,ebx
  408730:	sar    DWORD PTR [ecx],1
  408732:	je     0x4087b2
  408734:	call   DWORD PTR [edx+0x7e]
  408737:	fs fwait
  408739:	mov    bh,0x80
  40873b:	jmp    0x7aaee24a
  408740:	(bad)  
  408741:	pop    ecx
  408742:	pop    esi
  408743:	fs aam 0x71
  408746:	cmp    DWORD PTR [ebp+0x3c35acc],esp
  40874c:	xor    edx,DWORD PTR [edi+edx*1]
  40874f:	ret    
  408750:	mov    esp,0xbc737c5b
  408755:	pop    edx
  408756:	ds fs jbe 0x408721
  40875a:	(bad)  
  40875b:	dec    DWORD PTR [eax+0x919e75a]
  408761:	pop    edx
  408762:	push   DWORD PTR [eax+0x15]
  408765:	neg    DWORD PTR gs:[esi]
  408768:	daa    
  408769:	out    dx,eax
  40876a:	inc    DWORD PTR [eax-0x16beeb39]
  408770:	out    0x93,eax
  408772:	lock inc BYTE PTR [eax]
	...
  408799:	add    BYTE PTR [eax],al
  40879b:	add    al,ch
  40879d:	pop    ecx
  40879e:	push   DWORD PTR [edx+ecx*4+0xe94131]
  4087a5:	xchg   edi,eax
  4087a6:	shr    esi,0xe8
  4087a9:	pop    DWORD PTR [ebp-0xa60f2b]
  4087af:	push   ebx
  4087b0:	inc    edi
  4087b1:	icebp  
  4087b2:	cmp    eax,0xfe5a0e1f
  4087b7:	xchg   esp,eax
  4087b8:	xchg   edi,eax
  4087b9:	push   edx
  4087ba:	inc    esi
  4087bc:	test   al,0x14
  4087be:	inc    edx
  4087bf:	adc    BYTE PTR [esi],al
  4087c1:	pop    edx
  4087c2:	out    0x5d,eax
  4087c4:	mov    ds,WORD PTR [edx-0x1]
  4087c7:	pusha  
  4087c8:	shl    BYTE PTR [eax-0x9],cl
  4087cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087cc:	test   al,0xef
  4087ce:	call   DWORD PTR [eax]
  4087d0:	xlat   BYTE PTR ds:[ebx]
  4087d1:	adc    eax,DWORD PTR [ecx-0x17]
  4087d4:	imul   edx,DWORD PTR [eax+esi*8-0xa5976a],0x41310ebc
  4087df:	jmp    0x77015b44
  4087e4:	push   0x80898590
  4087e9:	pop    edx
  4087ea:	push   DWORD PTR [edx+eax*8+0x40]
  4087ee:	neg    DWORD PTR [esi+0x68]
  4087f1:	mov    ecx,0xc862b367
  4087f6:	dec    DWORD PTR [ebp-0x1e]
  4087f9:	pop    eax
  4087fa:	test   DWORD PTR [eax],0x35fee60d
	...
  408828:	loopne 0x408856
  40882a:	inc    ecx
  40882b:	add    BYTE PTR [edx],cl
  40882d:	xchg   edx,eax
  40882e:	sar    bh,0x6d
  408831:	or     al,al
  408833:	je     0x408880
  408835:	cmp    BYTE PTR [ebp-0x119ca28],0x4
  40883c:	out    0x55,eax
  40883e:	(bad)  
  40883f:	xor    BYTE PTR ds:0x4df7dc90,bl
  408845:	out    0x4f,al
  408847:	call   0x402fce
  40884c:	dec    ecx
  40884d:	popa   
  40884e:	or     al,al
  408850:	(bad)  
  408851:	movmskps ebp,xmm0
  408854:	push   esi
  408855:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408856:	(bad)  
  408857:	jmp    DWORD PTR [ebp+0x1df7dc90]
  40885d:	in     al,dx
  40885e:	adc    al,0x0
  408860:	xor    cl,BYTE PTR ds:0xb406bd83
  408866:	(bad)  
  408867:	jmp    DWORD PTR [edx]
  408869:	inc    ecx
  40886a:	sbb    DWORD PTR fs:[edi-0x12000918],0xc
  408872:	je     0x4088d0
  408874:	mov    eax,ds:0xadf7e8a9
  408879:	jmp    0x40887a
  40887b:	jae    0x4088be
  40887d:	gs (bad) 
  40887f:	(bad)  
  408880:	jge    0x40882c
  408882:	push   DWORD PTR [ebp-0x6]
  408885:	in     al,0x6a
  408887:	mov    edx,0xb5feeb6d
	...
  4088b4:	into   
  4088b5:	mov    bl,0xfe
  4088b7:	jmp    FWORD PTR [ebp+0x31]
  4088ba:	pop    es
  4088bb:	call   0x3fff6d
  4088c0:	ins    DWORD PTR es:[edi],dx
  4088c1:	jno    0x4088ab
  4088c3:	test   DWORD PTR [ebx-0x41],0x6a36ff61
  4088ca:	imul   esi,DWORD PTR [ecx-0x9e300f],0xfffffff6
  4088d1:	into   
  4088d2:	pop    ecx
  4088d3:	jmp    DWORD PTR [edi+ebx*1-0x7c4cf828]
  4088da:	popf   
  4088db:	call   DWORD PTR [edi+ebp*1-0x86b1f68]
  4088e2:	popa   
  4088e3:	(bad)  
  4088e4:	(bad)  
  4088e5:	imul   ebp,DWORD PTR [ebx-0x6b],0xff6207c1
  4088ec:	mov    esi,0x6cff5a2e
  4088f1:	push   edi
  4088f2:	xlat   BYTE PTR ds:[ebx]
  4088f3:	pop    es
  4088f4:	jae    0x40893b
  4088f6:	popf   
  4088f7:	call   FWORD PTR [edi+eiz*2-0x69]
  4088fb:	in     al,0x5c
  4088fd:	outs   dx,DWORD PTR ds:[esi]
  4088fe:	popa   
  4088ff:	call   0xffa1febe
  408904:	inc    esp
  408905:	jne    0x408977
  408907:	idiv   DWORD PTR [edi+eax*2]
  40890a:	ins    BYTE PTR es:[edi],dx
  40890b:	xchg   dh,dh
  40890d:	dec    esi
  40890e:	popa   
  40890f:	push   esi
  408911:	cmp    DWORD PTR [ecx-0x1],ebx
  408914:	and    al,0x4a
  408916:	fnstsw WORD PTR [eax+eax*1+0x0]
	...
  40893d:	add    BYTE PTR [eax],al
  40893f:	add    BYTE PTR [edi+eiz*4],bl
  408942:	popa   
  408943:	mov    ch,0x2b
  408945:	ja     0x4089a8
  408947:	jmp    DWORD PTR [ebx]
  408949:	repnz sahf 
  40894b:	inc    DWORD PTR [edi+edi*2]
  40894e:	xchg   edi,eax
  40894f:	lock hlt 
  408951:	xchg   BYTE PTR [ecx-0x18],ah
  408954:	outs   dx,BYTE PTR ds:[esi]
  408955:	int    0x60
  408957:	(bad)  
  408958:	in     al,dx
  408959:	sub    al,0x5c
  40895b:	jmp    0xffa1697c
  408960:	fcomp  QWORD PTR [edi+ebx*2-0x18]
  408964:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408965:	or     BYTE PTR [esi+0x4],dh
  408968:	dec    ebx
  408969:	inc    edx
  40896a:	sub    ecx,DWORD PTR [ebx+ecx*2]
  40896d:	mov    esi,0x4cc87061
  408972:	push   ecx
  408973:	out    dx,al
  408974:	mov    ah,0xe1
  408976:	icebp  
  408977:	pusha  
  408978:	add    DWORD PTR ss:[ecx-0x27],edx
  40897c:	loop   0x4089d5
  40897e:	mov    eax,DWORD PTR ss:[esi]
  408981:	push   ebp
  408982:	pop    esp
  408983:	(bad)  
  408984:	pushf  
  408985:	mov    eax,0xca565d90
  40898a:	call   0xa85df87a
  40898f:	add    edi,DWORD PTR [ebp+ebx*1-0x55]
  408993:	sub    cl,BYTE PTR [edx]
  408995:	or     DWORD PTR [ecx],edx
  408997:	sbb    eax,0xcfe578b
  40899c:	mov    ebx,esp
  40899e:	fnsave [ebx+0x70e909e4]
	...
  4089cc:	xchg   ebp,eax
  4089cd:	push   edi
  4089ce:	pop    esp
  4089cf:	pop    esp
  4089d0:	sti    
  4089d1:	push   edi
  4089d2:	push   esp
  4089d3:	or     al,0x33
  4089d5:	lods   al,BYTE PTR ds:[esi]
  4089d6:	mov    bh,0x60
  4089d8:	cmp    al,0x62
  4089da:	loope  0x40897a
  4089dc:	xor    al,0x57
  4089de:	je     0x4089a6
  4089e0:	xor    al,0xba
  4089e2:	push   eax
  4089e3:	or     ebx,DWORD PTR [ebp-0x38]
  4089e6:	call   0x285db0d6
  4089eb:	add    al,0x14
  4089ed:	sbb    eax,0x98a2b2b
  4089f2:	xchg   ecx,eax
  4089f3:	or     BYTE PTR [ebx],cl
  4089f5:	push   edi
  4089f6:	xchg   esi,eax
  4089f7:	or     al,0xb
  4089f9:	fdivrp st(5),st
  4089fb:	mov    bl,0x6c
  4089fd:	or     ebp,ecx
  4089ff:	jo     0x4089ae
  408a01:	push   esi
  408a02:	hlt    
  408a03:	pop    ebx
  408a04:	jnp    0x408a5c
  408a06:	add    ah,bh
  408a08:	push   eax
  408a09:	popa   
  408a0a:	outs   dx,BYTE PTR ds:[esi]
  408a0b:	(bad)  
  408a0c:	imul   edx,DWORD PTR [esi-0x18],0x3d
  408a10:	lods   al,BYTE PTR ds:[esi]
  408a11:	push   esi
  408a12:	call   ecx
  408a14:	rcr    DWORD PTR [ecx+eax*2],0xe9
  408a18:	sub    ebx,esp
  408a1a:	pop    es
  408a1b:	inc    ecx
  408a1c:	xchg   ebx,eax
  408a1d:	push   ebp
  408a1e:	inc    DWORD PTR [esi+0x2b]
  408a21:	fdiv   st(3),st
  408a23:	ds jge 0x408a34
  408a26:	call   0xff97491e
  408a2b:	and    BYTE PTR [esi],cl
  408a2d:	or     eax,0xbc00
	...
  408a56:	add    BYTE PTR [eax],al
  408a58:	mov    edi,0x44258165
  408a5d:	pop    esi
  408a5e:	call   DWORD PTR [esi]
  408a60:	int    0xcc
  408a62:	sti    
  408a63:	mov    ecx,0x60bdbeb
  408a68:	push   ebp
  408a69:	retf   
  408a6a:	sub    BYTE PTR [eax+0x67fd6148],ch
  408a70:	dec    eax
  408a71:	or     DWORD PTR [ebx],ecx
  408a73:	sub    DWORD PTR [ebx],edi
  408a75:	mov    ecx,es
  408a77:	call   0x250793c4
  408a7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a7d:	or     DWORD PTR [eax],eax
  408a7f:	jmp    0xd585d8cc
  408a84:	xchg   esp,eax
  408a85:	push   cs
  408a86:	add    cl,ch
  408a88:	and    dl,BYTE PTR [esi+0x69]
  408a8b:	jmp    0xe9a9e0c2
  408a90:	mov    ebx,0xba19f3cb
  408a95:	mov    esi,esp
  408a97:	sahf   
  408a98:	ins    BYTE PTR es:[edi],dx
  408a99:	push   esi
  408a9a:	push   eax
  408a9b:	sahf   
  408a9c:	and    bl,BYTE PTR [esi-0x1]
  408a9f:	sbb    al,0x6b
  408aa1:	popa   
  408aa2:	iret   
  408aa3:	pop    edi
  408aa4:	dec    edi
  408aa5:	or     DWORD PTR [ebx],ecx
  408aa7:	add    BYTE PTR [edx+0x6ee90430],ah
  408aad:	or     al,0x0
  408aaf:	add    BYTE PTR [edx+0x7a],cl
  408ab2:	sub    BYTE PTR [ecx-0x1e],al
  408ab5:	mov    dh,0x74
  408ab7:	or     al,0x7a
  408ab9:	mov    ebx,0xffbe
	...
  408ae2:	add    BYTE PTR [eax],al
  408ae4:	and    eax,0x27d08a9d
  408ae9:	xor    ah,0xf7
  408aec:	add    eax,0x1a524fb6
  408af1:	jmp    0x408ab1
  408af3:	jmp    DWORD PTR [ebp-0x7c]
  408af6:	test   eax,esi
  408af8:	pop    ebp
  408af9:	mov    dh,0xfe
  408afb:	call   0x40009a
  408b00:	mov    eax,0x9c766809
  408b05:	dec    esp
  408b06:	(bad)  
  408b07:	(bad)  
  408b08:	pop    ds
  408b09:	mov    ebp,0xb645fff6
  408b0e:	xor    al,0x42
  408b10:	fwait
  408b11:	dec    esp
  408b12:	jmp    edi
  408b14:	mov    dh,BYTE PTR [esi-0x1]
  408b17:	(bad)  
  408b18:	jmp    0x408b99
  408b1a:	in     al,0xf7
  408b1c:	gs mov dh,0x69
  408b1f:	add    dl,bh
  408b21:	xchg   ebp,eax
  408b22:	xor    eax,0xb4b43241
  408b27:	lock sbb eax,0x5ffffeb4
  408b2d:	inc    edi
  408b2e:	sub    BYTE PTR [ecx+0x22],al
  408b31:	loope  0x408b4c
  408b33:	mov    edi,0x8588b3e5
  408b38:	push   es
  408b39:	mov    esp,0xd88fffe
  408b3e:	push   0xff4dec68
  408b43:	(bad)  
  408b44:	lahf   
  408b45:	mov    eax,0xfff6
	...
  408b6e:	add    BYTE PTR [eax],al
  408b70:	dec    ebx
  408b71:	jnp    0x408bd1
  408b73:	xor    eax,0xffc44989
  408b78:	in     al,0x8e
  408b7a:	popf   
  408b7b:	jmp    esp
  408b7d:	fld    DWORD PTR [edi+0x5ddbd4e0]
  408b83:	push   0x4b
  408b85:	or     dh,cl
  408b87:	xor    eax,0xb55e628a
  408b8c:	mov    ebx,0xbcff5dbb
  408b91:	cmc    
  408b92:	shr    DWORD PTR [eax],0xa
  408b95:	bound  ebp,QWORD PTR [ebx-0x22]
  408b98:	in     eax,dx
  408b99:	retf   
  408b9a:	pop    ebp
  408b9b:	mov    esi,ecx
  408b9d:	mov    edx,0x489cff55
  408ba2:	add    ebp,DWORD PTR [eax+0x14]
  408ba5:	pop    esp
  408ba6:	(bad)  
  408ba7:	dec    DWORD PTR [ebp-0x7b08ad4b]
  408bad:	repz pop ebp
  408baf:	xor    eax,0xffc44909
  408bb4:	ins    BYTE PTR es:[edi],dx
  408bb5:	and    bl,BYTE PTR [ebp-0x78269301]
  408bbb:	fcomp  QWORD PTR [ebx+edx*2+0x5d]
  408bbf:	sbb    DWORD PTR [esi+0x54ff5606],0x62
  408bc6:	xlat   BYTE PTR ds:[ebx]
  408bc7:	fs enter 0x70ad,0xf7
  408bcc:	inc    esp
  408bcd:	xor    eax,DWORD PTR [esp+esi*2]
  408bd0:	lahf   
  408bd1:	fistp  WORD PTR [esi+0xe8]
	...
  408bfb:	add    BYTE PTR [ebx+eax*2],bh
  408bfe:	pop    ebp
  408bff:	add    BYTE PTR [edi+0x24ffebef],dh
  408c05:	inc    ebx
  408c06:	sahf   
  408c07:	call   DWORD PTR [esi-0x2cfc9496]
  408c0d:	mov    ds:0x8d6ff5d,al
  408c12:	xchg   ebp,eax
  408c13:	push   ebp
  408c14:	add    al,0x54
  408c16:	sahf   
  408c17:	xlat   BYTE PTR ds:[ebx]
  408c18:	inc    esp
  408c19:	popa   
  408c1a:	ds pushf 
  408c1c:	hlt    
  408c1d:	push   ebx
  408c1e:	mov    ss,WORD PTR [edi+0x5d865be3]
  408c24:	in     al,0xdd
  408c26:	lock imul edx,DWORD PTR [edx-0x2ba2896f],0xffffff9d
  408c2e:	test   DWORD PTR [ebp-0x34],edx
  408c31:	push   ebx
  408c32:	data16 xlat BYTE PTR ds:[ebx]
  408c34:	dec    esp
  408c35:	popa   
  408c36:	and    bl,BYTE PTR [esp+edi*4-0x5468a9ad]
  408c3d:	pop    ebx
  408c3e:	dec    esi
  408c3f:	pop    ebp
  408c40:	lods   al,BYTE PTR ds:[esi]
  408c41:	(bad)  
  408c43:	imul   esi,DWORD PTR [esi-0x6f],0x3e
  408c47:	pop    ebp
  408c48:	pushf  
  408c49:	popf   
  408c4a:	adc    eax,0x2e539455
  408c4f:	xlat   BYTE PTR ds:[ebx]
  408c50:	inc    esp
  408c51:	popa   
  408c52:	push   es
  408c53:	pushf  
  408c54:	test   BYTE PTR [ebx+0x1e],dl
  408c57:	xchg   edi,eax
  408c58:	addr16 pop ebx
  408c5a:	push   ss
  408c5b:	pop    ebp
  408c5c:	arpl   WORD PTR [ecx],sp
  408c5e:	push   edx
  408c5f:	pop    ebp
	...
  408c88:	ins    BYTE PTR es:[edi],dx
  408c89:	push   ebx
  408c8a:	cmp    al,0x70
  408c8c:	pop    esp
  408c8d:	push   ebx
  408c8e:	(bad)  
  408c8f:	imul   edi,DWORD PTR ds:0x545cf690,0xffffff9d
  408c96:	add    DWORD PTR [ebp+0x4c],edx
  408c99:	push   ebx
  408c9a:	shl    eax,1
  408c9c:	add    DWORD PTR [ebx-0x22],edx
  408c9f:	pop    esp
  408ca0:	imul   BYTE PTR [ecx-0x22]
  408ca3:	pop    esp
  408ca4:	xor    al,0x62
  408ca6:	loope  0x408c40
  408ca8:	sub    al,0x53
  408caa:	(bad)  
  408cab:	xchg   esi,eax
  408cac:	pop    es
  408cad:	pop    ebx
  408cae:	mov    esi,0x55335c
  408cb3:	jae    0x408d2c
  408cb5:	push   edx
  408cb6:	push   DWORD PTR [eax+edi*2+0x5a]
  408cba:	jmp    DWORD PTR [esi-0x6ef82359]
  408cc0:	push   edi
  408cc1:	push   ebx
  408cc2:	call   DWORD PTR [esi-0x690f6369]
  408cc8:	(bad)  
  408cc9:	push   edx
  408cca:	call   0xff934f5c
  408ccf:	jle    0x408cd6
  408cd1:	pop    ebx
  408cd2:	jmp    0xff9301fe
  408cd7:	outs   dx,BYTE PTR ds:[esi]
  408cd8:	cmc    
  408cd9:	dec    esi
  408cda:	call   0x4a60f6
  408cdf:	xor    BYTE PTR [edx],cl
  408ce1:	add    DWORD PTR [eax],eax
  408ce3:	mov    esp,0x258365c3
  408ce8:	or     al,0xdf
  408cea:	call   edx
	...
  408d14:	push   esp
  408d15:	push   edx
  408d16:	jne    0x408d09
  408d18:	xor    BYTE PTR [ebx-0x49],bl
  408d1b:	idiv   DWORD PTR ss:[edi+0x45]
  408d1f:	sub    eax,0xa8367fa0
  408d24:	dec    eax
  408d25:	push   edx
  408d26:	jne    0x408d19
  408d28:	lock pop edx
  408d2a:	std    
  408d2b:	push   ss
  408d2c:	pop    ss
  408d2d:	push   edx
  408d2e:	jne    0x408d3d
  408d30:	paddusb mm0,QWORD PTR [edi]
  408d33:	adc    DWORD PTR [ecx],ebp
  408d35:	xchg   ecx,eax
  408d36:	(bad)  
  408d37:	(bad)  
  408d38:	adc    al,BYTE PTR [edi+0x4]
  408d3b:	jmp    0x692d0cdd
  408d40:	add    al,0x39
  408d42:	mul    esi
  408d44:	mov    al,ds:0xf7dd4584
  408d49:	push   edx
  408d4a:	jne    0x408d31
  408d4c:	xchg   ecx,eax
  408d4d:	sbb    al,0x42
  408d4f:	add    BYTE PTR [esi],al
  408d51:	push   edx
  408d52:	out    0x0,eax
  408d54:	push   ss
  408d55:	add    DWORD PTR [eax],0xec61900
  408d5b:	test   DWORD PTR [eax],ebx
  408d5d:	or     al,0x0
  408d5f:	add    ch,ah
  408d61:	inc    edi
  408d62:	test   DWORD PTR [eax],0xc70005f2
  408d68:	daa    
  408d69:	mov    ecx,0x5e207fe
  408d6e:	push   0x0
  408d70:	dec    eax
  408d71:	or     eax,0xd38006a
  408d76:	lea    eax,[ebp+0x0]
	...
  408d9d:	add    BYTE PTR [eax],al
  408d9f:	add    BYTE PTR [esi-0x63],dl
  408da2:	mov    WORD PTR [ebp-0x149aa],es
  408da8:	xor    ch,BYTE PTR [esi+0x382df874]
  408dae:	sti    
  408daf:	call   0x410e88
  408db4:	test   eax,0xb0573c5
  408db9:	mov    al,0x0
  408dbb:	add    BYTE PTR [edx-0xcd74da3],dh
  408dc1:	add    eax,0xddae75ff
  408dc6:	fdivr  DWORD PTR [ebp-0x2f7551a3]
  408dcc:	inc    DWORD PTR [edi-0x51a2080c]
  408dd2:	dec    edi
  408dd3:	push   edx
  408dd4:	dec    edx
  408dd5:	dec    edi
  408dd6:	mov    ebp,0x85843dff
  408ddb:	lock gs scas al,BYTE PTR es:[edi]
  408dde:	(bad)  
  408ddf:	push   0x72
  408de1:	pop    ebp
  408de2:	out    0x36,al
  408de4:	mov    ds:0x52b5ff05,eax
  408de9:	mov    dh,0xfe
  408deb:	jmp    FWORD PTR ds:0x732941fa
  408df1:	add    eax,0x754b25e8
  408df6:	pop    edx
  408df7:	inc    edx
  408df9:	in     eax,0x5e
  408dfb:	mul    DWORD PTR [eax+ecx*2]
  408dfe:	in     eax,dx
  408dff:	jmp    DWORD PTR [edx+ebp*4+0x4111]
	...
  408e2a:	add    BYTE PTR [eax],al
  408e2c:	dec    ebx
  408e2d:	xchg   edi,eax
  408e2e:	nop
  408e2f:	lock adc al,0xa0
  408e32:	pop    edx
  408e33:	(bad)  
  408e34:	ds and al,0x2d
  408e37:	inc    ecx
  408e38:	dec    ebx
  408e39:	jp     0x408e3d
  408e3b:	mov    ebp,0x858c77f4
  408e40:	fbstp  TBYTE PTR [edi+0x5a]
  408e43:	push   DWORD PTR [ecx+0x62]
  408e46:	jmp    0x408e24
  408e48:	adc    eax,0x9eff0421
  408e4d:	rcl    BYTE PTR [ecx-0x1],cl
  408e50:	int3   
  408e51:	fisttp WORD PTR [edi]
  408e53:	inc    edx
  408e54:	jb     0x408df7
  408e56:	add    ebp,eax
  408e58:	mov    dl,0x6e
  408e5a:	pop    edx
  408e5b:	inc    edx
  408e5d:	(bad)  [edx-0x9]
  408e60:	lods   al,BYTE PTR ds:[esi]
  408e61:	mov    edi,0xbc2cffec
  408e66:	adc    BYTE PTR [ecx+0x4b],al
  408e69:	seto   al
  408e6c:	pushf  
  408e6d:	pop    ss
  408e6e:	pop    edx
  408e6f:	call   DWORD PTR [esi-0x5c]
  408e72:	sub    al,0x41
  408e74:	dec    ebx
  408e75:	cli    
  408e76:	dec    ebp
  408e77:	mov    esp,0x858bef7c
  408e7c:	imul   ebp,edi,0x59
  408e7f:	(bad)  
  408e80:	mov    esi,0x64f72ee5
  408e85:	pop    es
  408e86:	mov    bl,0x67
  408e88:	imul   ebx,DWORD PTR [eax+0xd55ffc4],0xf753
	...
  408eb6:	add    BYTE PTR [eax],al
  408eb8:	dec    esp
  408eb9:	pop    edi
  408eba:	pop    ecx
  408ebb:	xor    eax,0xc3100989
  408ec0:	cmp    al,0x68
  408ec2:	xchg   ecx,eax
  408ec3:	cwde   
  408ec4:	xor    al,0x50
  408ec6:	loop   0x408f0b
  408ec8:	mov    bh,0xf2
  408eca:	imul   edx,DWORD PTR [edi+0x59c657ff],0x58d8d647
  408ed4:	pop    ebx
  408ed5:	sub    BYTE PTR [eax+edi*1+0x14],0x50
  408eda:	scas   al,BYTE PTR es:[edi]
  408edb:	mov    ah,0xec
  408edd:	aad    0x5f
  408edf:	pop    ecx
  408ee0:	cld    
  408ee1:	arpl   bp,si
  408ee3:	or     al,0xb
  408ee5:	aad    0xee
  408ee7:	mov    bl,0xe4
  408ee9:	loope  0x408f3a
  408eeb:	pop    ecx
  408eec:	in     al,0x47
  408eee:	ins    BYTE PTR es:[edi],dx
  408eef:	cmp    ah,dl
  408ef1:	dec    edi
  408ef2:	jle    0x408ee3
  408ef4:	aam    0x4f
  408ef6:	jmp    0x76795581
  408efb:	pop    ecx
  408efc:	les    edi,FWORD PTR [eax-0x358a9730]
  408f02:	call   0x5e998d5f
  408f07:	pop    ecx
  408f08:	lods   al,BYTE PTR ds:[esi]
  408f09:	dec    edi
  408f0a:	adc    al,0xc6
  408f0c:	jae    0x408ed8
  408f0e:	call   0x3ecd907e
  408f13:	pop    ecx
  408f14:	ret    0x1185
  408f17:	push   ecx
  408f18:	mov    WORD PTR [edi+0x6a],cs
  408f1b:	xchg   edi,eax
	...
  408f44:	outs   dx,DWORD PTR ds:[esi]
  408f45:	push   edi
  408f46:	es pop ecx
  408f48:	dec    ebx
  408f49:	add    BYTE PTR [ebp+0x7d],ah
  408f4c:	dec    ebx
  408f4d:	or     ecx,ebp
  408f4f:	test   BYTE PTR [esi+0x6459165c],ch
  408f55:	or     dh,dh
  408f57:	jg     0x408f26
  408f59:	or     cl,ch
  408f5b:	add    ecx,eax
  408f5d:	lea    eax,[eax]
  408f5f:	add    edx,edi
  408f61:	dec    edi
  408f62:	(bad)  
  408f63:	jmp    0xe9c214bb
  408f68:	dec    eax
  408f69:	or     DWORD PTR [eax-0x7],ebp
  408f6c:	dec    eax
  408f6d:	pop    esi
  408f6e:	mov    esi,0xe806fdd6
  408f73:	js     0x408f4a
  408f75:	dec    esi
  408f76:	inc    esi
  408f78:	int    0x5d
  408f7a:	idiv   DWORD PTR [esi-0x1e8ab18d]
  408f80:	mov    al,ds:0xa3aeb564
  408f85:	dec    esi
  408f86:	mov    ch,0x91
  408f88:	fwait
  408f89:	dec    esi
  408f8a:	call   FWORD PTR [esi-0x4117f8fb]
  408f90:	mov    ebp,0xd58eff4e
  408f95:	test   DWORD PTR gs:[esi-0xe8ab17d],0x76b54060
  408fa0:	jae    0x408ff0
  408fa2:	mov    ch,0x8d
  408fa4:	sbb    ecx,DWORD PTR [esi-0x1]
  408fa7:	data16 add BYTE PTR [eax],al
	...
  408fce:	add    BYTE PTR [eax],al
  408fd0:	lea    eax,[esi]
  408fd2:	call   0xff8f5597
  408fd7:	push   esi
  408fd8:	mov    ebp,0x34ef769
  408fdd:	dec    esi
  408fde:	jne    0x408fd1
  408fe0:	xor    BYTE PTR [ebp+esi*4-0x42760cc2],bl
  408fe7:	adc    ebx,edi
  408fe9:	dec    ebp
  408fea:	(bad)  
  408feb:	jmp    0x64c38384
  408ff0:	cmp    BYTE PTR [esi-0x1],dl
  408ff3:	push   ds
  408ff4:	je     0x408fcb
  408ff6:	adc    DWORD PTR [edx-0x13],esp
  408ff9:	xor    bh,dh
  408ffb:	push   cs
  408ffc:	add    ecx,DWORD PTR [esi+0x30]
  408fff:	add    BYTE PTR [ebp+0x3f],al
  409002:	pop    es
  409003:	call   0x400f83
  409008:	dec    ecx
  409009:	cld    
  40900a:	imul   eax,DWORD PTR [eax],0xe8073c35
  409010:	inc    edi
  409011:	js     0x409012
  409013:	call   DWORD PTR ds:0x15f7e478
  409019:	mov    dh,0xe7
  40901b:	mov    DWORD PTR [edx-0x6000014b],edi
  409021:	loope  0x409019
  409023:	call   ebp
  409025:	fdivr  QWORD PTR [ebp-0x48]
  409028:	aad    0xb5
  40902a:	(bad)  
  40902b:	mov    ch,0xa
  40902d:	mov    esi,0x39dafffe
  409032:	mov    bh,0xff
	...
  40905c:	aad    0xb5
  40905e:	mov    ah,0xe0
  409060:	int    0xb5
  409062:	(bad)  
  409063:	call   0x3ffdb2
  409068:	lds    esi,FWORD PTR [edi-0x28]
  40906b:	not    DWORD PTR [ebp-0x4a]
  40906e:	out    0x5d,eax
  409070:	sbb    dh,BYTE PTR [esi-0x4a800002]
  409076:	idiv   bh
  409078:	and    eax,0x15b851dd
  40907d:	mov    dh,0xfe
  40907f:	inc    ebp
  409080:	sbb    bl,ah
  409082:	aam    0xfd
  409084:	adc    eax,0x675feb6
  409089:	fstp   QWORD PTR [ebx-0x36f65d76]
  40908f:	ret    0x9aa
  409092:	push   ebp
  409093:	mov    eax,DWORD PTR [esi-0x76]
  409096:	(bad)  
  409097:	cld    
  409098:	fmul   DWORD PTR [ecx]
  40909a:	push   0xd
  40909c:	push   ebp
  40909d:	cmp    BYTE PTR [edi],al
  40909f:	call   0xffd10cef
  4090a4:	fs call 0xc9348c6a
  4090aa:	or     eax,0xd04f4b41
  4090af:	pop    es
  4090b0:	arpl   sp,dx
  4090b2:	push   edi
  4090b3:	inc    DWORD PTR [esp+ebx*2-0x30]
  4090b7:	sti    
  4090b8:	cmp    al,0xae
  4090ba:	or     ebp,eax
  4090bc:	les    esi,FWORD PTR [ebp+0x56]
  4090bf:	inc    DWORD PTR [eax]
	...
  4090e5:	add    BYTE PTR [eax],al
  4090e7:	add    BYTE PTR [edx],al
  4090e9:	mov    eax,ds:0xe77fffff
  4090ee:	add    WORD PTR [edi],0x4e97
  4090f3:	call   DWORD PTR [esi+ebx*8]
  4090f6:	mov    edi,0xd0937bfb
  4090fb:	or     eax,DWORD PTR [esi+edx*2]
  4090fe:	shr    DWORD PTR [eax],0x8a
  409101:	bound  ebp,QWORD PTR [ebx+0x52]
  409104:	shl    DWORD PTR [edx+0x3],0xb
  409108:	or     esp,DWORD PTR [eax+eax*4+0x5f]
  40910c:	dec    ecx
  40910d:	bound  eax,QWORD PTR [ebx]
  40910f:	mov    DWORD PTR [esi+0x4b00038a],0xd7453e62
  409119:	sar    ebp,cl
  40911b:	inc    esp
  40911d:	or     BYTE PTR [edx+ebp*2],al
  409120:	dec    ebx
  409121:	cmp    BYTE PTR [ebx],al
  409123:	push   0x4b
  409125:	fnstsw WORD PTR [edi+0x7fe51bf3]
  40912b:	hlt    
  40912c:	pushf  
  40912d:	mov    ebx,0x8d9c5055
  409132:	pop    ebx
  409133:	call   FWORD PTR [esi]
  409135:	push   cs
  409136:	imul   esp,DWORD PTR [ecx+eax*8],0x62
  40913a:	add    ecx,DWORD PTR [ebx]
  40913c:	mov    edx,DWORD PTR [esi+0x929e900]
  409142:	jmp    0x409147
  409144:	dec    ebx
  409145:	loope  0x4091a0
  409147:	sub    ecx,DWORD PTR [edx]
  409149:	or     DWORD PTR [esi],edx
  40914b:	rol    BYTE PTR [eax],1
	...
  409171:	add    BYTE PTR [eax],al
  409173:	add    BYTE PTR [eax+0x61],dl
  409176:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409177:	call   0x86c6:0x33724c5c
  40917e:	cmc    
  40917f:	dec    ebp
  409180:	dec    esp
  409181:	dec    esp
  409182:	cdq    
  409183:	mov    cl,0x2c
  409185:	jge    0x4091b9
  409187:	push   esi
  409188:	cmp    al,0x82
  40918a:	ins    BYTE PTR es:[edi],dx
  40918b:	push   esp
  40918c:	cmp    al,0x4c
  40918e:	fiadd  WORD PTR [edi+0x55de3cc6]
  409194:	and    al,0xb9
  409196:	inc    eax
  409197:	rcl    DWORD PTR [ebp-0x36],cl
  40919a:	call   0xb6996ff3
  40919f:	push   ebp
  4091a0:	or     al,0x4c
  4091a2:	cld    
  4091a3:	shl    DWORD PTR [ebx],0xca
  4091a6:	call   0xa6cf5f16
  4091ab:	push   ebp
  4091ac:	ret    0x8585
  4091af:	dec    ebp
  4091b0:	in     al,dx
  4091b1:	dec    ebx
  4091b2:	add    eax,DWORD PTR [ebx+esi*2]
  4091b5:	test   dh,dl
  4091b7:	ret    0x4adc
  4091ba:	cmp    al,0x54
  4091bc:	fmul   QWORD PTR [ebx+0x7e]
  4091bf:	push   ebp
  4091c0:	push   ss
  4091c1:	(bad)  
  4091c2:	mov    edi,0xf963c4c2
  4091c7:	cdq    
  4091c8:	mov    esp,0xa77f704b
  4091cd:	push   ebx
  4091ce:	pop    esi
  4091cf:	push   ebp
  4091d0:	and    DWORD PTR [ecx],ecx
  4091d2:	rol    DWORD PTR [edi+0x54e8ca5c],0x0
	...
  4091fd:	add    BYTE PTR [eax],al
  4091ff:	add    dh,dl
  409201:	pop    eax
  409202:	ds push ebp
  409204:	xchg   esp,eax
  409205:	dec    ebx
  409206:	hlt    
  409207:	shl    DWORD PTR [ebx-0x36],0xff
  40920b:	call   0x2efa4900
  409210:	push   ss
  409211:	add    BYTE PTR [ebp-0xb3f9ef],0x93
  409218:	dec    eax
  409219:	loope  0x4091b1
  40921b:	fimul  WORD PTR [ecx-0x8ab01b5]
  409221:	push   ebx
  409222:	inc    DWORD PTR [esi]
  409224:	(bad)  
  409225:	adc    eax,0x4b89d042
  40922a:	out    0xbd,eax
  40922c:	loop   0x409278
  40922e:	jmp    DWORD PTR [eax-0x44]
  409231:	imul   esi,edi,0x857c9fe6
  409237:	sar    DWORD PTR [edi+0x4a],0xff
  40923b:	cmp    DWORD PTR [edi],esi
  40923d:	jns    0x409276
  40923f:	sub    BYTE PTR [edi+0x4a],al
  409242:	mov    ch,0xb9
  409244:	xchg   DWORD PTR [edx-0x1],ecx
  409247:	mov    esi,0x2828c73d
  40924c:	dec    edi
  40924d:	popa   
  40924e:	adc    DWORD PTR [ebx-0x69],esi
  409251:	dec    edx
  409252:	or     ebp,DWORD PTR [ecx+0x5c82f804]
  409258:	xor    BYTE PTR [edx-0x1],dl
  40925b:	xchg   esi,eax
  40925c:	in     al,0xd5
  40925e:	or     DWORD PTR [esi-0x5a7a85c8],ecx
	...
  40928c:	xchg   DWORD PTR [edx-0x1],ecx
  40928f:	xchg   edx,eax
  409290:	inc    edx
  409291:	inc    edx
  409292:	test   DWORD PTR [ebp-0x2b00b5e9],edx
  409298:	dec    eax
  409299:	or     DWORD PTR [eax],eax
  40929b:	mov    ecx,0x5eb63720
  4092a0:	pop    ss
  4092a1:	jl     0x409228
  4092a3:	cmp    DWORD PTR [edi],edx
  4092a5:	dec    edx
  4092a6:	(bad)  
  4092a7:	mov    ecx,0x36d0b0
  4092ac:	jecxz  0x4092b4
  4092ae:	push   DWORD PTR [ebp-0x142ae]
  4092b4:	cmp    eax,0xb32941fb
  4092b9:	push   es
  4092ba:	call   0xfef57e8c
  4092bf:	or     esp,DWORD PTR [edx]
  4092c1:	cmp    dl,BYTE PTR [edx]
  4092c3:	cmp    edi,0x15
  4092c6:	idiv   edi
  4092c8:	dec    ebp
  4092c9:	dec    edx
  4092ca:	je     0x4092d6
  4092cc:	dec    ebp
  4092cd:	test   BYTE PTR [esi-0x142c97b],0xff
  4092d4:	dec    ecx
  4092d5:	add    bh,al
  4092d7:	test   DWORD PTR [esi-0x43],edx
  4092da:	(bad)  
  4092db:	jmp    DWORD PTR [edx]
  4092dd:	push   es
  4092de:	add    BYTE PTR [eax],al
  4092e0:	jb     0x40928f
  4092e2:	lea    esi,[esi-0x427d4a03]
  4092e8:	push   es
  4092e9:	scas   al,BYTE PTR es:[edi]
  4092ea:	(bad)  
  4092eb:	jmp    DWORD PTR [edx]
  4092ed:	xor    bh,BYTE PTR [esi]
  4092ef:	add    DWORD PTR [eax],0x0
	...
  409316:	add    BYTE PTR [eax],al
  409318:	(bad)  
  409319:	adc    edi,esi
  40931b:	(bad)  
  40931c:	mov    ebp,0x88367502
  409321:	add    eax,0xadbe858d
  409326:	(bad)  
  409327:	push   DWORD PTR [edx]
  409329:	mov    dh,0xb4
  40932b:	in     al,0xc5
  40932d:	mov    ch,0xfe
  40932f:	call   0x3face4
  409334:	fld    st(5)
  409336:	jae    0x409341
  409338:	popa   
  409339:	js     0x409307
  40933b:	idiv   DWORD PTR ds:0x9774ffb6
  409341:	mov    dh,0xb4
  409343:	in     al,0x15
  409345:	mov    dh,0xfe
  409347:	call   0x40033e
  40934c:	dec    ebx
  40934d:	sbb    ecx,DWORD PTR [ecx+0x52ba94e4]
  409353:	add    BYTE PTR [ebx+0x60],cl
  409356:	add    eax,DWORD PTR [ebx-0xa53c32]
  40935c:	test   BYTE PTR [edi-0x29],bl
  40935f:	push   0xffffffc8
  409361:	fcomp  QWORD PTR [edi-0x9]
  409364:	je     0x409388
  409366:	add    al,0x74
  409368:	jmp    0x5d29244b
  40936d:	repnz push edx
  40936f:	add    bh,dl
  409371:	cwde   
  409372:	fild   DWORD PTR [ecx]
  409374:	dec    ebx
  409375:	repz xchg ecx,eax
  409377:	call   esi
  409379:	push   edi
  40937a:	pop    ebx
  40937b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  4093a4:	stc    
  4093a5:	aas    
  4093a6:	push   edx
  4093a7:	push   esi
  4093a9:	inc    esi
  4093aa:	pop    edx
  4093ab:	push   DWORD PTR [eax+esi*1]
  4093ae:	fadd   DWORD PTR [edi]
  4093b0:	and    ebp,DWORD PTR [edx*4-0x679fdb01]
  4093b7:	call   0xff92ebd0
  4093bc:	sahf   
  4093bd:	cmp    bl,BYTE PTR [ebx-0x13]
  4093c0:	fld    DWORD PTR [edi+0x6ebeff52]
  4093c6:	pop    edx
  4093c7:	(bad)  
  4093c8:	cld    
  4093c9:	ja     0x409363
  4093cb:	in     al,0xfc
  4093cd:	outs   dx,DWORD PTR ds:[esi]
  4093ce:	push   edx
  4093cf:	push   DWORD PTR [esi+0x3a]
  4093d2:	pop    ebx
  4093d3:	lods   eax,DWORD PTR ds:[esi]
  4093d4:	cdq    
  4093d5:	lahf   
  4093d6:	push   edx
  4093d7:	call   DWORD PTR [esi-0x2b00a58a]
  4093dd:	(bad)  
  4093de:	fadd   DWORD PTR [edi]
  4093e0:	jecxz  0x4093fb
  4093e2:	xchg   esi,eax
  4093e3:	inc    esp
  4093e5:	mov    edi,0xb7b4e097
  4093ea:	push   ecx
  4093eb:	(bad)  
  4093ec:	ds or  ecx,esi
  4093ef:	pop    ebx
  4093f0:	out    dx,al
  4093f1:	jnp    0x409451
  4093f3:	push   edx
  4093f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093f5:	jle    0x409444
  4093f7:	pop    edx
  4093f8:	pushf  
  4093f9:	dec    eax
  4093fa:	inc    ecx
  4093fb:	dec    edx
  4093fc:	fimul  WORD PTR [eax+0x46]
  4093ff:	push   edx
  409400:	(bad)  
  409401:	xor    eax,0x31845236
  409406:	jne    0x4093a0
	...
  409430:	jl     0x40947a
  409432:	cs cwde 
  409434:	arpl   WORD PTR [eax+0x26],ax
  409437:	push   edx
  409438:	arpl   WORD PTR [edx+0x54],di
  40943b:	push   edx
  40943c:	fs dec eax
  40943e:	pop    esp
  40943f:	arpl   WORD PTR [eax+ecx*2+0xe],dx
  409443:	pop    ebx
  409444:	lods   eax,DWORD PTR ds:[esi]
  409445:	jle    0x40944d
  409447:	push   edx
  409448:	dec    esp
  409449:	jle    0x409444
  40944b:	pop    ecx
  40944c:	inc    esp
  40944d:	dec    eax
  40944e:	add    DWORD PTR [esi-0xa],ebp
  409451:	inc    edi
  409452:	out    dx,al
  409453:	push   ecx
  409454:	mov    es,WORD PTR [ecx-0x30]
  409457:	xchg   esp,eax
  409458:	cs dec eax
  40945a:	ficom  WORD PTR [ecx-0x62]
  40945d:	inc    ebp
  40945e:	shl    DWORD PTR [edi-0x3c],0x8
  409462:	jmp    0xe9519da1
  409467:	mov    dh,0xc1
  409469:	xor    al,0x6a
  40946b:	dec    eax
  40946c:	push   DWORD PTR [edx+0x484edde8]
  409472:	xor    al,0xfc
  409474:	in     al,dx
  409475:	jne    0x4094d2
  409477:	push   ecx
  409478:	in     al,dx
  409479:	xchg   ecx,eax
  40947a:	and    al,0x50
  40947c:	jae    0x409487
  40947e:	jmp    0x99f131e3
  409483:	sbb    cl,BYTE PTR [edx+0x14041109]
  409489:	retf   0x50e8
  40948c:	adc    DWORD PTR ds:[eax],eax
  40948f:	adc    DWORD PTR [ecx+eiz*2+0x6eff],0x0
	...
  4094ba:	add    BYTE PTR [eax],al
  4094bc:	xor    al,0xce
  4094be:	idiv   DWORD PTR [ecx-0x57c92e70]
  4094c4:	dec    eax
  4094c5:	mov    cl,0xd
  4094c7:	push   ds
  4094c8:	mov    BYTE PTR [edi-0x2],al
  4094cb:	adc    al,0x8d
  4094cd:	lock inc eax
  4094cf:	jmp    0x3ef877c4
  4094d4:	sbb    dl,BYTE PTR [eax+eax*8]
  4094d7:	mov    ebp,0x35459232
  4094dc:	xchg   edi,eax
  4094dd:	or     BYTE PTR [eax],al
  4094df:	push   ss
  4094e0:	fld    DWORD PTR [edi+0x75]
  4094e3:	icebp  
  4094e4:	add    BYTE PTR [eax+0x47fa16b1],al
  4094ea:	jne    0x4094fd
  4094ec:	cli    
  4094ed:	mov    ebp,0xf7406f3
  4094f2:	call   0xff876d15
  4094f7:	not    BYTE PTR ds:0xddd1e83b
  4094fd:	inc    esi
  4094fe:	call   DWORD PTR [ecx-0xb]
  409501:	inc    DWORD PTR [eax-0x17]
  409504:	jnp    0x4094c2
  409506:	pop    es
  409507:	sar    DWORD PTR [edx+0x45],0xff
  40950b:	into   
  40950c:	jnp    0x4094ca
  40950e:	sti    
  40950f:	(bad)  
  409510:	cmc    
  409511:	push   cs
  409512:	call   0xff877256
  409517:	mov    al,ds:0x14000d86
  40951c:	jbe    0x409553
  40951e:	sub    DWORD PTR [ebp+0x0],0x0
	...
  409545:	add    BYTE PTR [eax],al
  409547:	add    BYTE PTR [ebx+esi*4-0x1],bh
  40954b:	adc    cl,BYTE PTR [edx+0x46]
  40954e:	jne    0x409531
  409550:	sub    bl,0xb1
  409553:	mov    ?,WORD PTR [ebx-0x70]
  409556:	inc    ebp
  409557:	add    dh,al
  409559:	(bad)  
  40955a:	(bad)  
  40955b:	call   ebp
  40955d:	cwde   
  40955e:	push   0xff4bfda3
  409563:	addr16 jne 0x409587
  409566:	inc    ecx
  409567:	add    BYTE PTR ds:0xf8e8075f,ah
  40956d:	repnz (bad) 
  40956f:	push   ebp
  409571:	pop    esi
  409572:	sti    
  409573:	(bad)  
  409574:	jg     0x4095b8
  409576:	out    0x43,eax
  409578:	adc    cl,bl
  40957a:	dec    cl
  40957c:	xor    BYTE PTR [esi],cl
  40957e:	add    BYTE PTR [ebp-0x17],dl
  409581:	in     eax,0x82
  409583:	les    esp,FWORD PTR [esi]
  409585:	jmp    FWORD PTR fs:[ecx+0x72]
  409589:	fnstenv [eax+ecx*1+0x3a]
  40958d:	mov    cl,0xb0
  40958f:	push   DWORD PTR ds:0xcafc44c3
  409595:	or     al,BYTE PTR [eax]
  409597:	out    dx,eax
  409598:	add    al,0x62
  40959a:	mov    eax,0x6809f337
  40959f:	mov    esi,0xfeff4afd
  4095a4:	mov    edi,0xbafe742
  4095a9:	(bad)  
  4095aa:	(bad)  
  4095ab:	push   0x0
	...
  4095d1:	add    BYTE PTR [eax],al
  4095d3:	add    BYTE PTR [edx],dh
  4095d5:	(bad)  
  4095d6:	cli    
  4095d7:	aaa    
  4095d8:	jae    0x4095e7
  4095da:	push   0xff4c3de1
  4095df:	dec    BYTE PTR [edi]
  4095e1:	dec    eax
  4095e2:	sub    BYTE PTR [ecx-0xe],al
  4095e5:	loope  0x40957c
  4095e7:	mov    bh,0xb5
  4095e9:	aad    0xa
  4095eb:	sar    BYTE PTR [esi],0xf1
  4095ee:	xlat   BYTE PTR ds:[bx]
  4095f0:	or     eax,0xba4fff4d
  4095f5:	sub    dh,BYTE PTR [edi-0x4b60b401]
  4095fb:	addr16 dec ebx
  4095fd:	xor    BYTE PTR [esi-0x42],bl
  409600:	arpl   cx,cx
  409602:	push   ss
  409603:	inc    ecx
  409604:	dec    ebx
  409605:	and    BYTE PTR [edi+0x75],cl
  409608:	push   ebx
  409609:	mov    BYTE PTR [edx],bl
  40960b:	fnstenv [esi+esi*4-0x5108a9a5]
  409612:	dec    esi
  409613:	call   FWORD PTR [esi]
  409615:	in     al,0x4e
  409617:	jne    0x40966c
  409619:	enter  0xb13c,0x94
  40961d:	(bad)  
  40961e:	cmp    al,0xc2
  409620:	inc    edi
  409621:	xor    BYTE PTR [eax+0x47b2778a],bh
  409627:	cld    
  409628:	adc    eax,0xe2ffd9a7
  40962d:	pusha  
  40962e:	dec    esi
  40962f:	jne    0x409674
  409631:	sbb    bl,bl
  409633:	mov    al,0x64
  409635:	es jge 0x40967d
	...
  409660:	pop    edi
  409661:	stos   BYTE PTR es:[edi],al
  409662:	sbb    BYTE PTR [ebx+0x23],bl
  409665:	jno    0x40966a
  409667:	mov    ecx,DWORD PTR [esi]
  409669:	outs   dx,DWORD PTR ds:[esi]
  40966a:	sbb    eax,DWORD PTR [ecx+0x4b]
  40966d:	mov    dl,0xe
  40966f:	add    BYTE PTR [edi+0x7306db67],dh
  409675:	jno    0x40967a
  409677:	push   edi
  409678:	and    esp,DWORD PTR [ebx+0x374b0085]
  40967e:	inc    ebx
  40967f:	je     0x4096e7
  409681:	add    al,0x5c
  409683:	rcl    esi,cl
  409685:	push   ebx
  409686:	dec    esi
  409687:	push   0xffc50a3b
  40968c:	xchg   esp,eax
  40968d:	pop    edx
  40968e:	push   ecx
  40968f:	mov    bh,0xfc
  409691:	jnp    0x409646
  409693:	addr16 dec ebx
  409695:	xor    bl,BYTE PTR [esi-0x42]
  409698:	fwait
  409699:	or     DWORD PTR [esi-0x3cceb328],esp
  40969f:	cmp    ah,bl
  4096a1:	inc    esp
  4096a2:	sbb    DWORD PTR [edx-0x68],0x4a5a8e44
  4096a9:	retf   
  4096aa:	push   0x82be4b0d
  4096af:	(bad)
  4096b2:	test   al,0x8c
  4096b4:	mov    ah,0x44
  4096b6:	outs   dx,BYTE PTR ds:[esi]
  4096b7:	dec    esi
  4096b8:	mov    ecx,0x1e072173
  4096bd:	jle    0x40971d
  4096bf:	fsub   DWORD PTR [eax+0xfbdc44]
	...
  4096e9:	add    BYTE PTR [eax],al
  4096eb:	add    BYTE PTR [esp+ecx*8-0x1b73b169],ch
  4096f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096f3:	cmp    al,0x89
  4096f5:	or     eax,0x35d1b8e9
  4096fa:	push   0x47
  4096fc:	ja     0x4096ad
  4096fe:	call   0x9c84f1dc
  409703:	sti    
  409704:	ins    BYTE PTR es:[edi],dx
  409705:	xor    bl,BYTE PTR [ecx+0x4e]
  409708:	pop    esp
  409709:	xchg   edx,eax
  40970a:	lods   al,BYTE PTR ds:[esi]
  40970b:	dec    edi
  40970c:	jecxz  0x409716
  40970e:	jmp    0xccf22471
  409713:	or     ecx,DWORD PTR [edx+0x74ea9109]
  409719:	retf   0x4ee8
  40971c:	mov    esi,0x13940111
  409721:	inc    esp
  409722:	out    0x4d,al
  409724:	sahf   
  409725:	inc    ebp
  409726:	(bad)  
  409728:	inc    esp
  409729:	xor    ebx,esp
  40972b:	xchg   edx,eax
  40972c:	adc    al,0x44
  40972e:	mov    al,ds:0x1c094742
  409733:	jns    0x40972c
  409735:	mov    DWORD PTR [ebp+0x43f430],esp
  40973b:	mov    dh,0x74
  40973d:	into   
  40973e:	sti    
  40973f:	sbb    DWORD PTR [esi-0x42],edi
  409742:	or     esp,DWORD PTR [esi+0x2828c73c]
  409748:	inc    edi
  409749:	xor    ebp,ecx
  40974b:	ins    BYTE PTR es:[edi],dx
  40974c:	dec    edi
  40974d:	or     DWORD PTR [ebx],ecx
  40974f:	test   eax,0x0
	...
  409778:	into   
  409779:	mov    WORD PTR [ecx-0x38f6b718],fs
  40977f:	and    al,0xf
  409781:	or     DWORD PTR [eax],eax
  409783:	jmp    0x7585e3d0
  409788:	dec    BYTE PTR [ebx]
  40978a:	add    cl,ch
  40978c:	add    BYTE PTR [ebx+0x69],0xe9
  409790:	add    BYTE PTR [ebx+0x69],0xe9
  409794:	adc    eax,0xdb9f3ce
  409799:	mov    ?,esp
  40979b:	ds push ss
  40979d:	inc    esp
  40979e:	push   eax
  40979f:	ds xchg esp,eax
  4097a1:	cmp    edi,edi
  4097a3:	mov    esp,0x649f3104
  4097a8:	inc    edi
  4097a9:	or     DWORD PTR [ebx],ecx
  4097ab:	sub    DWORD PTR [ebx+0x4985e90c],eax
  4097b1:	or     DWORD PTR [eax],eax
  4097b3:	cmp    DWORD PTR [ebx-0x16bf10],0x89110bbd
  4097bd:	jnp    0x4097be
  4097bf:	(bad)  
  4097c0:	clc    
  4097c1:	(bad)  
  4097c2:	shl    BYTE PTR [esp+ecx*8+0x3d],1
  4097c6:	imul   esi
  4097c8:	jg     0x4097a3
  4097ca:	push   ecx
  4097cb:	sar    DWORD PTR [edx-0x5e210085],1
  4097d1:	mov    eax,?
  4097d3:	fiadd  WORD PTR [edi-0x441e17be]
  4097d9:	inc    edx
  4097da:	inc    DWORD PTR [eax]
	...
  409804:	cwde   
  409805:	or     eax,0x464a4168
  40980a:	(bad)  
  40980b:	(bad)  
  40980c:	ja     0x4097e4
  40980e:	idiv   bh
  409810:	popf   
  409811:	aad    0x34
  409813:	inc    edx
  409814:	sti    
  409815:	inc    edi
  409816:	jmp    edi
  409818:	ficomp DWORD PTR [edi+edi*8-0x1b749401]
  40981f:	idiv   DWORD PTR [ebp+0x5a0069d5]
  409825:	push   ss
  409826:	cmp    BYTE PTR [ecx-0x4e],al
  409829:	aad    0xb4
  40982b:	lock xor eax,0xf7fffed5
  409831:	dec    eax
  409832:	sub    BYTE PTR [ecx-0x4e],al
  409835:	fsubp  st(1),st
  409837:	mov    ch,0xfd
  409839:	aam    0x88
  40983b:	test   DWORD PTR [esi],ecx
  40983d:	(bad)  
  40983f:	dec    DWORD PTR [eax+0x4a386806]
  409845:	inc    esi
  409846:	(bad)  
  409847:	(bad)  
  409848:	not    ebp
  40984a:	idiv   bh
  40984c:	cmp    eax,0x4b4234d5
  409851:	inc    esi
  409852:	jmp    edi
  409854:	push   ds
  409855:	fwait
  409856:	(bad)  
  409857:	(bad)  
  409858:	fisttp DWORD PTR [edx-0x2ac20818]
  40985e:	mov    WORD PTR [ebp-0x122e2],es
  409864:	loop   0x4098c3
  409866:	dec    ecx
  409867:	cmp    BYTE PTR [eax],al
	...
  40988d:	add    BYTE PTR [eax],al
  40988f:	add    bl,dh
  409891:	add    eax,0xd632b5ff
  409896:	(bad)  
  409897:	call   FWORD PTR ds:0x7329421c
  40989d:	or     eax,0xcdb7a9e8
  4098a2:	dec    BYTE PTR [ebx]
  4098a4:	dec    ebx
  4098a5:	jo     0x409877
  4098a7:	sbb    al,cl
  4098a9:	xchg   esp,eax
  4098aa:	sub    bh,dh
  4098ac:	add    al,0x4b
  4098ae:	add    BYTE PTR [ebp+0x5b],dh
  4098b1:	adc    DWORD PTR [edi+ecx*4],0xffffffce
  4098b5:	dec    edi
  4098b6:	push   ebx
  4098b7:	(bad)  
  4098b8:	in     al,dx
  4098b9:	pop    ds
  4098ba:	pop    esp
  4098bb:	jbe    0x409856
  4098bd:	push   0x4b
  4098bf:	jmp    0x4098f8
  4098c1:	aaa    
  4098c2:	inc    ebx
  4098c3:	je     0x409912
  4098c5:	add    BYTE PTR [edx+ebp*2-0x67],bl
  4098c9:	xchg   edx,eax
  4098ca:	dec    ebx
  4098cb:	(bad)  
  4098cc:	into   
  4098cd:	(bad)  
  4098ce:	push   ebx
  4098cf:	(bad)  
  4098d0:	mov    esp,0x4b00035c
  4098d5:	scas   eax,DWORD PTR es:[edi]
  4098d6:	mov    ah,ah
  4098d8:	mov    ah,0xb2
  4098da:	dec    edx
  4098db:	add    BYTE PTR [edi],bl
  4098dd:	add    DWORD PTR [esi+0x4adaafbd],0xffffffff
  4098e4:	dec    ebx
  4098e5:	fs mov ecx,0x52c7ce82
  4098eb:	inc    DWORD PTR [edi+ebp*1+0x2ff344cf]
  4098f2:	add    ebp,edi
	...
  40991c:	mov    ch,0xfa
  40991e:	rol    BYTE PTR [edi],1
  409920:	arpl   ax,si
  409922:	cdq    
  409923:	jmp    DWORD PTR [edx+ebp*8-0x70]
  409927:	in     al,dx
  409928:	push   esp
  409929:	and    cl,BYTE PTR [ebx-0x1]
  40992c:	fisub  WORD PTR [edi]
  40992e:	pop    ebx
  40992f:	adc    eax,0xff4b129c
  409934:	(bad)  
  409935:	sbb    dl,BYTE PTR [ebx-0x1]
  409938:	cmp    al,0x40
  40993a:	rol    BYTE PTR [edi],1
  40993c:	and    esi,DWORD PTR [eax]
  40993e:	call   0x1ce4:0x90302cff
  409945:	or     ah,dh
  409947:	dec    edx
  409948:	sbb    al,0xb7
  40994a:	lock pop ebx
  40994c:	adc    dh,BYTE PTR [eax-0x2a]
  40994f:	dec    edx
  409950:	or     al,0x77
  409952:	leave  
  409953:	push   edx
  409954:	add    al,0x41
  409956:	(bad)  
  409957:	rol    BYTE PTR [ecx+esi*1+0x70],1
  40995b:	cdq    
  40995c:	hlt    
  40995d:	inc    eax
  40995e:	mov    dh,0x90
  409960:	out    0x38,eax
  409962:	scas   al,BYTE PTR es:[edi]
  409963:	dec    edx
  409964:	repz ss pop eax
  409967:	dec    edx
  409968:	fadd   QWORD PTR [eax+0x54]
  40996b:	push   edi
  40996c:	fadd   QWORD PTR [eax-0x6a]
  40996f:	pop    ebx
  409970:	loope  0x4099ec
  409972:	mov    cs,WORD PTR [edx-0x3c]
  409975:	jbe    0x409908
  409977:	push   edx
  409978:	mov    esp,0xfa2a9140
  40997d:	inc    eax
  40997e:	jbe    0x4099ca
	...
  4099a8:	idiv   BYTE PTR [ecx]
  4099aa:	jbe    0x4099f6
  4099ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099ad:	xor    DWORD PTR ds:0x5e409c94,edi
  4099b3:	rcr    BYTE PTR [edx+esi*1+0x408c49c7],0x4e
  4099bb:	rol    BYTE PTR [eax+0x4b7fe731],1
  4099c1:	or     DWORD PTR [eax],esi
  4099c3:	inc    ebp
  4099c4:	inc    ebx
  4099c5:	or     DWORD PTR [esi+edi*2+0x47258c5f],ebx
  4099cc:	icebp  
  4099cd:	or     BYTE PTR [ebx-0xf49a20a],dl
  4099d3:	pop    ebx
  4099d4:	ins    DWORD PTR es:[edi],dx
  4099d5:	outs   dx,DWORD PTR ds:[esi]
  4099d6:	push   ss
  4099d7:	dec    edx
  4099d8:	ret    0xcc6
  4099db:	fistp  DWORD PTR [edx+0x3c03a801]
  4099e1:	mov    dh,0xf0
  4099e3:	pop    ebx
  4099e4:	pop    ebp
  4099e5:	aas    
  4099e6:	add    dh,dh
  4099e8:	add    BYTE PTR [eax+0x75],0xed
  4099ec:	xchg   edx,eax
  4099ed:	mov    dh,0x7
  4099ef:	rcr    DWORD PTR [eax],1
  4099f1:	outs   dx,DWORD PTR ds:[esi]
  4099f2:	(bad)  
  4099f3:	ficom  WORD PTR [eax+0x4b]
  4099f6:	add    al,0xe9
  4099f8:	fst    QWORD PTR [edx+0x3d8b6aec]
  4099fe:	push   0xffffffe9
  409a00:	push   ds
  409a01:	sbb    al,0xff
  409a03:	xor    al,0xf7
  409a05:	daa    
  409a06:	mov    ch,0x87
  409a08:	add    BYTE PTR [eax-0x77],0x24
	...
  409a34:	xchg   ebx,eax
  409a35:	mov    cl,0xff
  409a37:	call   0x1da919bf
  409a3c:	inc    edi
  409a3d:	retf   0xff
  409a40:	cmc    
  409a41:	test   DWORD PTR [eax-0x17],0x9107b613
  409a48:	test   BYTE PTR [ebp-0x1],dl
  409a4b:	jle    0x409a4f
  409a4d:	mov    dh,0xfb
  409a4f:	jbe    0x409acd
  409a51:	pop    es
  409a52:	call   0xff805bee
  409a57:	xor    BYTE PTR ds:0x17b40005,al
  409a5d:	sub    eax,0x385f2d81
  409a62:	dec    DWORD PTR [esi-0x4]
  409a65:	(bad)  
  409a68:	adc    esi,DWORD PTR [esi-0x34bbc1f5]
  409a6e:	sub    BYTE PTR [eax+0x6a993148],ch
  409a74:	dec    edi
  409a75:	or     DWORD PTR [ebx],ecx
  409a77:	sub    DWORD PTR [edx-0x7c],esp
  409a7a:	int    0xe8
  409a7c:	dec    eax
  409a7d:	or     edi,eax
  409a7f:	lods   al,BYTE PTR ds:[esi]
  409a80:	add    BYTE PTR [ecx],cl
  409a82:	add    cl,ch
  409a84:	dec    eax
  409a85:	inc    esi
  409a86:	inc    ebp
  409a87:	add    BYTE PTR [esi],bh
  409a89:	rol    BYTE PTR [esi],cl
  409a8b:	add    BYTE PTR [edx],ah
  409a8d:	pop    ebp
  409a8e:	jmp    FWORD PTR [ecx+0x22]
  409a91:	pop    ebp
  409a92:	jmp    FWORD PTR [ecx+0x32]
  409a95:	mov    eax,0xf444
	...
  409abe:	add    BYTE PTR [eax],al
  409ac0:	bound  esi,QWORD PTR [esi-0x2e020b7c]
  409ac6:	(bad)  
  409ac7:	push   eax
  409ac8:	cmc    
  409ac9:	dec    edi
  409aca:	idiv   edi
  409acc:	lahf   
  409acd:	shl    edi,1
  409acf:	imul   esi,DWORD PTR [ecx+0xa],0x0
  409ad3:	or     esp,DWORD PTR [edx-0x6d16fbb2]
  409ad9:	or     eax,DWORD PTR [eax]
  409adb:	add    BYTE PTR [edx-0xdbed76c],cl
  409ae1:	shl    DWORD PTR [esp+ecx*1-0x46],1
  409ae5:	shl    BYTE PTR [ebx-0x75854a01],0xd0
  409aec:	daa    
  409aed:	mov    edi,0xd1c5f7f3
  409af2:	dec    edi
  409af3:	push   edx
  409af4:	ficom  DWORD PTR [eax-0x4d]
  409af7:	push   DWORD PTR ds:0x1df084c3
  409afd:	sar    esi,1
  409aff:	call   0x403562
  409b04:	daa    
  409b05:	mov    edi,0xd0f5f7d7
  409b0a:	dec    edi
  409b0b:	push   0x4111f8
  409b10:	add    eax,0x35f7f08f
  409b15:	sar    esi,1
  409b17:	xor    eax,0x4123a0
  409b1c:	or     al,BYTE PTR [ecx]
  409b1e:	mov    bl,0xff
  409b20:	and    eax,0xe484c3
	...
  409b49:	add    BYTE PTR [eax],al
  409b4b:	add    BYTE PTR ds:0x4b6afed1,bh
  409b51:	xor    bl,bl
  409b53:	xchg   DWORD PTR [ebx-0x900fc8f],eax
  409b59:	aas    
  409b5a:	dec    edi
  409b5b:	push   DWORD PTR [edi+edi*1]
  409b5e:	or     eax,0x3716242
  409b63:	call   0xff889e42
  409b68:	shr    BYTE PTR [edi+edx*2-0x25a0eb09],cl
  409b6f:	jmp    DWORD PTR [ecx+eax*8+0x4f4b410b]
  409b76:	xchg   ecx,eax
  409b77:	lock hlt 
  409b79:	inc    esi
  409b7a:	inc    edi
  409b7b:	(bad)  
  409b7c:	ds repnz sbb al,0x41
  409b80:	dec    ebx
  409b81:	dec    eax
  409b82:	jae    0x409b37
  409b84:	in     al,0x6e
  409b86:	jge    0x409b0d
  409b88:	repz sahf 
  409b8a:	inc    edi
  409b8b:	inc    esi
  409b8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b8e:	daa    
  409b8f:	test   esp,0xe867b496
  409b95:	push   edi
  409b96:	(bad)  
  409b97:	(bad)  
  409b98:	mov    ebp,0xb4f753fc
  409b9d:	mov    esi,0x49093546
  409ba2:	(bad)  
  409ba3:	jmp    FWORD PTR [edi+edi*1+0x3a9cff92]
  409baa:	inc    ebx
  409bab:	je     0x409bdf
  409bad:	mov    bl,0x88
  409baf:	fadd   QWORD PTR [eax]
	...
  409bd5:	add    BYTE PTR [eax],al
  409bd7:	add    BYTE PTR [esi+edx*8+0x3ffe0446],dl
  409bde:	inc    esi
  409bdf:	xor    ah,cl
  409be1:	lods   al,BYTE PTR ds:[esi]
  409be2:	arpl   di,si
  409be4:	je     0x409be4
  409be6:	mov    bl,0xe7
  409be8:	rol    BYTE PTR cs:[esi-0x1],0x70
  409bed:	push   ebx
  409bee:	cli    
  409bef:	mov    edi,0xb3ef08d7
  409bf4:	ins    BYTE PTR es:[edi],dx
  409bf5:	neg    DWORD PTR [eax+0x47]
  409bf8:	dec    esp
  409bf9:	inc    ebp
  409bfa:	ins    BYTE PTR es:[edi],dx
  409bfb:	fs cmp al,0x3d
  409bfe:	push   cs
  409bff:	icebp  
  409c00:	cmp    al,0x3d
  409c02:	jmp    0xf6669289
  409c07:	inc    esi
  409c08:	sub    al,0xa
  409c0a:	jge    0x409bd1
  409c0c:	leave  
  409c0d:	jle    0x409c0c
  409c0f:	dec    esi
  409c10:	sbb    al,0x3d
  409c12:	jmp    0x9cc93be6
  409c17:	pop    ebx
  409c18:	adc    al,0x3d
  409c1a:	(bad)  
  409c1b:	add    edi,DWORD PTR [edi-0x53]
  409c1e:	inc    edx
  409c1f:	add    al,0xce
  409c21:	xchg   BYTE PTR [ecx+0x193cf44e],ah
  409c27:	inc    edi
  409c28:	mov    dh,0x25
  409c2a:	mov    esi,0x1b31e446
  409c2f:	xor    esp,ebx
  409c31:	cmp    al,0xf2
  409c33:	inc    ebx
  409c34:	pop    edi
  409c35:	aad    0x69
  409c37:	mov    bl,dh
  409c39:	xor    al,0x96
  409c3b:	inc    esi
	...
  409c64:	dec    ebx
  409c65:	mov    ch,0x21
  409c67:	fdivr  QWORD PTR [esp+edi*1-0x494b7a6a]
  409c6e:	lock pop ebx
  409c70:	and    al,0x6d
  409c72:	jbe    0x409cba
  409c74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c75:	jbe    0x409cf4
  409c77:	dec    esi
  409c78:	pushf  
  409c79:	cmp    al,0x66
  409c7b:	ror    BYTE PTR [ecx+esi*1-0x5e],1
  409c7f:	xchg   edi,eax
  409c80:	mov    WORD PTR [esi+edx*2],?
  409c83:	nop
  409c84:	jae    0x409cba
  409c86:	dec    esi
  409c87:	inc    esi
  409c88:	jl     0x409c40
  409c8a:	lock pop ebx
  409c8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c8d:	ins    DWORD PTR es:[edi],dx
  409c8e:	ds inc esi
  409c90:	ins    BYTE PTR es:[edi],dx
  409c91:	jbe    0x409c93
  409c93:	adc    DWORD PTR ds:0xbb2eff3c,edx
  409c99:	and    eax,0x3c0d26f7
  409c9e:	jne    0x409c91
  409ca0:	lock lods eax,DWORD PTR ds:[esi]
  409ca2:	stos   DWORD PTR es:[edi],eax
  409ca3:	push   ss
  409ca4:	lea    edi,[esi*4-0xc372f7]
  409cab:	push   es
  409cac:	sbb    eax,DWORD PTR [eax+ebp*8]
  409caf:	rcl    ah,1
  409cb1:	cmp    edi,edi
  409cb3:	not    ah
  409cb5:	and    al,0xf7
  409cb7:	out    dx,al
  409cb8:	xchg   BYTE PTR [ecx],dh
  409cba:	xchg   ebp,eax
  409cbb:	xchg   esi,eax
  409cbc:	mov    ?,WORD PTR [edi+edi*8]
  409cbf:	xchg   esp,eax
  409cc0:	jae    0x409cf6
  409cc2:	call   esi
  409cc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cc5:	(bad)  
  409cc6:	scas   eax,DWORD PTR es:[edi]
  409cc7:	into   
	...
  409cf0:	xchg   BYTE PTR [esi*4-0xc3792f],bh
  409cf7:	rol    DWORD PTR [esi],1
  409cf9:	imul   edi,edi,0xffffffb6
  409cfc:	mov    ?,WORD PTR [esi-0x10]
  409cff:	mov    dh,0x86
  409d01:	cmp    al,0xe8
  409d03:	sbb    eax,0x9eff3bbe
  409d08:	mov    WORD PTR [ebx],?
  409d0a:	jmp    0xff7caa3a
  409d0f:	mov    cs,WORD PTR [edi+edi*1+0x8c847e8]
  409d16:	add    BYTE PTR [eax+0x1c001109],dh
  409d1c:	and    ch,BYTE PTR ds:0x3bfba583
  409d22:	jne    0x409d19
  409d24:	lock sar BYTE PTR [edi-0x17],cl
  409d28:	dec    eax
  409d29:	xchg   edx,eax
  409d2a:	inc    ebp
  409d2b:	push   ecx
  409d2c:	push   cs
  409d2d:	mov    dh,0xf7
  409d2f:	inc    ecx
  409d30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d31:	push   0xffffffff
  409d33:	add    BYTE PTR ds:0x2dfc44c0,cl
  409d39:	dec    esp
  409d3a:	sti    
  409d3b:	jmp    DWORD PTR [edi+0x7e75fecf]
  409d41:	fist   WORD PTR [esi]
  409d43:	mov    ebx,0xc00ac62d
  409d48:	mov    dh,0x5
  409d4a:	mov    DWORD PTR [ebp+0x66],eax
  409d4d:	pop    edi
  409d4e:	dec    DWORD PTR [edi+eiz*8+0xff4fca]
	...
  409d79:	add    BYTE PTR [eax],al
  409d7b:	add    BYTE PTR [edi+0x567be7c2],dh
  409d81:	(bad)  
  409d82:	dec    BYTE PTR [ebx]
  409d84:	jb     0x409ddf
  409d86:	sub    BYTE PTR [eax+0x32],ch
  409d89:	aaa    
  409d8a:	out    dx,al
  409d8b:	mov    esi,0xe8074c2d
  409d90:	retf   
  409d91:	mov    eax,ds:0x4c1dffff
  409d96:	idiv   edi
  409d98:	xchg   edi,eax
  409d99:	inc    ecx
  409d9a:	(bad)  
  409d9b:	jne    0x409d97
  409d9d:	faddp  st(0),st
  409d9f:	stos   DWORD PTR es:[edi],eax
  409da0:	lods   eax,DWORD PTR ds:[esi]
  409da1:	(bad)  
  409da4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409da5:	lds    esi,FWORD PTR [esp+edi*8-0x53]
  409da9:	dec    ebx
  409daa:	pop    es
  409dab:	call   0x403f21
  409db0:	lods   eax,DWORD PTR ds:[esi]
  409db1:	dec    ebx
  409db2:	sti    
  409db3:	call   0x403286
  409db8:	jmp    0x409d82
  409dba:	pop    es
  409dbb:	add    BYTE PTR [edi-0x40],dl
  409dbe:	jmp    0x409d43
  409dc0:	out    0xde,al
  409dc2:	push   ebp
  409dc3:	jmp    DWORD PTR [edi+0x61ade732]
  409dc9:	(bad)  
  409dcc:	bound  ecx,QWORD PTR [ebx+0x4]
  409dcf:	pop    esi
  409dd0:	pop    ebx
  409dd1:	enter  0x7,0x4b
  409dd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409dd6:	mov    ebp,0xcdcb1bef
  409ddb:	or     esp,DWORD PTR [ebx+0x63]
  409dde:	(bad)  
  409ddf:	inc    DWORD PTR [eax]
	...
  409e05:	add    BYTE PTR [eax],al
  409e07:	add    BYTE PTR [edi+esi*1+0x43],ch
  409e0b:	bswap  edi
  409e0d:	(bad)  
  409e0e:	add    al,BYTE PTR [eax]
  409e10:	dec    ebx
  409e11:	jmp    0x409de0
  409e13:	sti    
  409e14:	arpl   di,si
  409e16:	xchg   esp,eax
  409e17:	dec    DWORD PTR [ecx+edi*4-0x43]
  409e1b:	jmp    0x409e61
  409e1d:	popf   
  409e1e:	inc    edi
  409e1f:	push   DWORD PTR [esi+0x3375433c]
  409e25:	sbb    BYTE PTR [edx-0x52],dl
  409e28:	sub    al,0x3b
  409e2a:	ja     0x409ea1
  409e2c:	aaa    
  409e2d:	pop    es
  409e2e:	mov    edx,0xc277ff67
  409e33:	(bad)  
  409e34:	jle    0x409e8e
  409e36:	lds    eax,FWORD PTR [eax-0x3ff1cfb5]
  409e3c:	jle    0x409e6c
  409e3e:	cs cmp eax,0xdbac5fd0
  409e44:	xor    esi,ecx
  409e46:	add    ebp,eax
  409e48:	(bad)  
  409e49:	cli    
  409e4a:	add    eax,DWORD PTR [eax]
  409e4c:	dec    eax
  409e4d:	or     BYTE PTR [ebp+0x2ec7f375],0x38
  409e54:	mov    dh,BYTE PTR [eax]
  409e56:	(bad)  
  409e58:	sub    al,0xb1
  409e5a:	add    eax,DWORD PTR [eax]
  409e5c:	push   eax
  409e5d:	jo     0x409e18
  409e5f:	add    DWORD PTR [eax-0x72ef72ca],esi
  409e65:	das    
  409e66:	add    edx,DWORD PTR [eax+0x19]
  409e69:	mov    ebx,0xe7b8
	...
  409e92:	add    BYTE PTR [eax],al
  409e94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e95:	cmp    al,0xb
  409e97:	call   0xff83483e
  409e9c:	icebp  
  409e9d:	or     cl,al
  409e9f:	mov    edi,DWORD PTR [ebx]
  409ea1:	mov    DWORD PTR [edi],ebx
  409ea3:	add    al,0xfe
  409ea5:	jbe    0x409e68
  409ea7:	add    al,0x5b
  409ea9:	sub    cl,BYTE PTR [edi+0x5110fe43]
  409eaf:	push   eax
  409eb0:	mov    eax,ds:0xde433e39
  409eb5:	cmp    al,0x36
  409eb7:	mov    ecx,0xbb43970
  409ebc:	arpl   WORD PTR [ebx+edx*2],si
  409ebf:	inc    ebx
  409ec0:	dec    esp
  409ec1:	cmp    DWORD PTR [edi+ebp*1+0x4346e733],edx
  409ec8:	cmp    al,0x87
  409eca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ecb:	xor    ebx,DWORD PTR [ebx+0x2c779a21]
  409ed1:	cmp    DWORD PTR [edx],edx
  409ed3:	add    al,0x85
  409ed5:	inc    edx
  409ed6:	sub    ecx,DWORD PTR [ebx+ecx*2]
  409ed9:	fisub  WORD PTR [ecx+0x30]
  409edc:	enter  0xe54d,0xad
  409ee0:	or     al,0xa3
  409ee2:	repz inc edx
  409ee4:	jle    0x409ee7
  409ee6:	rol    esi,0xb1
  409ee9:	cmp    dh,cl
  409eeb:	mov    WORD PTR [esi+0x336c5135],cs
  409ef1:	retf   0x42e8
  409ef4:	pop    esi
  409ef5:	add    ecx,eax
  409ef7:	push   0x0
	...
  409f1d:	add    BYTE PTR [eax],al
  409f1f:	add    bh,bl
  409f21:	cmp    BYTE PTR [esi-0x154f2b53],ch
  409f27:	cld    
  409f28:	mov    ecx,DWORD PTR [ecx]
  409f2a:	adc    DWORD PTR [edx],esi
  409f2c:	or     edx,0xffffffe8
  409f2f:	inc    edx
  409f30:	jbe    0x409efd
  409f32:	mov    edi,0x8530b4c4
  409f37:	jae    0x409ee5
  409f39:	cmp    dl,dh
  409f3b:	inc    ebx
  409f3c:	pop    ds
  409f3d:	adc    eax,DWORD PTR [eax]
  409f3f:	add    esi,esi
  409f41:	lock inc eax
  409f43:	jmp    0x9908cfc0
  409f48:	or     DWORD PTR [eax],edi
  409f4a:	push   eax
  409f4b:	mov    ecx,0x4107be09
  409f50:	and    eax,0x204eff37
  409f55:	dec    edi
  409f56:	lods   eax,DWORD PTR ds:[esi]
  409f57:	inc    esi
  409f58:	or     DWORD PTR [ebx+0x7b3a5119],esp
  409f5e:	push   DWORD PTR [esi]
  409f60:	dec    ebp
  409f61:	dec    ecx
  409f62:	je     0x409f68
  409f64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f65:	dec    ebp
  409f66:	cmp    BYTE PTR [eax+0x4ae7d948],ch
  409f6c:	mov    edi,0x9781ff38
  409f71:	icebp  
  409f72:	inc    eax
  409f73:	jmp    0x38d8cf90
  409f78:	mov    DWORD PTR [eax],edi
  409f7a:	push   eax
  409f7b:	cdq    
  409f7c:	mov    DWORD PTR [esi+0x37950107],edi
  409f82:	(bad)  
  409f83:	out    dx,al
	...
  409fac:	popa   
  409fad:	lahf   
  409fae:	lods   eax,DWORD PTR ds:[esi]
  409faf:	out    0x8a,al
  409fb1:	mov    ds:0x7a69d11b,eax
  409fb6:	call   esi
  409fb8:	dec    esi
  409fb9:	dec    ecx
  409fba:	je     0x409fc0
  409fbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fbd:	dec    esp
  409fbe:	cmp    BYTE PTR [eax],ch
  409fc0:	inc    edi
  409fc1:	(bad)  
  409fc3:	cmp    bl,BYTE PTR [eax+0x38]
  409fc6:	inc    DWORD PTR [ecx+0x78]
  409fc9:	icebp  
  409fca:	inc    eax
  409fcb:	jmp    0x58a8cfc8
  409fd0:	mov    bh,BYTE PTR [eax]
  409fd2:	push   eax
  409fd3:	cmp    DWORD PTR [edx],ecx
  409fd5:	mov    esi,0x36c68107
  409fda:	dec    DWORD PTR [esi+0xacaf67]
  409fe0:	vpunpckhwd xmm4,xmm6,XMMWORD PTR [ebx]
  409fe4:	mov    edx,0x15ffb0ba
  409fe9:	push   es
  409fea:	shl    BYTE PTR [edi+ecx*4+0x63],0xc4
  409fef:	cmp    bl,ah
  409ff1:	or     edx,DWORD PTR [eax-0x18]
  409ff4:	mov    cl,0xba
  409ff6:	(bad)  
  409ff7:	dec    DWORD PTR [edx+0x624137da]
  409ffd:	pop    ebx
  409ffe:	out    0x38,eax
  40a000:	repz leave 
  40a002:	(bad)  
  40a003:	push   eax
  40a004:	ret    0x74c8
  40a007:	or     BYTE PTR [edx],cl
  40a009:	pop    esi
  40a00a:	std    
  40a00b:	jmp    DWORD PTR ds:0xad35e5
	...
  40a035:	add    BYTE PTR [eax],al
  40a037:	add    BYTE PTR ds:0x6675feca,ah
  40a03d:	enter  0x874,0x4a
  40a041:	mov    ds:0xc245ffa9,al
  40a046:	rol    DWORD PTR [edx+eiz*1],0x60
  40a04a:	mov    ch,ah
  40a04c:	mov    bl,0xc1
  40a04e:	fcomi  st,st(7)
  40a050:	adc    eax,0x26458cca
  40a055:	pop    ebx
  40a056:	(bad)  
  40a057:	jne    0x40a06b
  40a059:	retf   0xc74
  40a05c:	sbb    bh,BYTE PTR [edx+0x7e]
  40a05f:	add    dl,dh
  40a061:	add    eax,0x886f0fc0
  40a066:	add    DWORD PTR [eax],eax
  40a068:	loop   0x40a02b
  40a06a:	inc    esp
  40a06b:	clc    
  40a06c:	repnz or al,BYTE PTR [eax]
  40a06f:	add    BYTE PTR [ebp-0x12000cb1],ch
  40a075:	or     al,BYTE PTR [eax]
  40a077:	push   0xffffffe2
  40a079:	jmp    FWORD PTR fs:[ecx-0x4e]
  40a07d:	dec    DWORD PTR fs:[ebx+ecx*2-0x39afc81b]
  40a085:	lods   eax,DWORD PTR ds:[esi]
  40a086:	imul   DWORD PTR ss:[edi+ecx*4-0x77e1012d]
  40a08e:	inc    eax
  40a08f:	jne    0x40a030
  40a091:	mov    dl,al
  40a093:	jle    0x40a0e0
  40a095:	and    BYTE PTR [eax+eax*8],cl
  40a098:	pop    ss
  40a099:	and    eax,0x812a
	...
  40a0c2:	add    BYTE PTR [eax],al
  40a0c4:	dec    edx
  40a0c5:	and    BYTE PTR [ebx],al
  40a0c7:	push   0xffc308b8
  40a0cc:	jne    0x40a12b
  40a0ce:	adc    ebp,eax
  40a0d0:	out    0xaf,eax
  40a0d2:	aas    
  40a0d3:	(bad)  
  40a0d4:	sti    
  40a0d5:	mov    edx,0xf4c68d52
  40a0da:	aaa    
  40a0db:	call   DWORD PTR [eax+edx*4-0x2b]
  40a0df:	out    0xf7,eax
  40a0e1:	iret   
  40a0e2:	aas    
  40a0e3:	call   edx
  40a0e5:	lods   al,BYTE PTR ds:[esi]
  40a0e6:	xor    dh,bh
  40a0e8:	cmp    al,0x1f
  40a0ea:	sub    ebp,DWORD PTR [edx+0x6a4006e7]
  40a0f0:	dec    ebx
  40a0f1:	cwde   
  40a0f2:	in     eax,0x38
  40a0f4:	mov    ah,BYTE PTR [eax]
  40a0f6:	inc    eax
  40a0f7:	mov    ch,0x1b
  40a0f9:	aaa    
  40a0fa:	aas    
  40a0fb:	call   DWORD PTR [edi*4-0x612117f2]
  40a102:	aas    
  40a103:	call   edx
  40a105:	lods   al,BYTE PTR ds:[esi]
  40a106:	daa    
  40a107:	idiv   esp
  40a109:	pop    esi
  40a10a:	stos   BYTE PTR es:[edi],al
  40a10b:	jmp    FWORD PTR [ebx+ecx*1-0x3]
  40a10f:	inc    eax
  40a110:	dec    ebx
  40a111:	dec    edi
  40a112:	jns    0x40a104
  40a114:	fdiv   QWORD PTR [esi+0x3f]
  40a117:	call   DWORD PTR [esi+0x2c]
  40a11a:	sub    edx,DWORD PTR [edx-0x76c0995c]
  40a120:	(bad)  
  40a121:	or     BYTE PTR [ecx+0x1335c437],cl
  40a127:	add    al,0x0
	...
  40a14d:	add    BYTE PTR [eax],al
  40a14f:	add    BYTE PTR [ebx],dh
  40a151:	sbb    edx,eax
  40a153:	les    esi,FWORD PTR [esi+esi*1+0x35b43454]
  40a15a:	xchg   BYTE PTR [edi],bh
  40a15c:	push   ds
  40a15d:	add    eax,0x35edb791
  40a162:	jbe    0x40a0f1
  40a164:	into   
  40a165:	and    al,0x76
  40a167:	aas    
  40a168:	mov    WORD PTR [edx-0xf9c5418],fs
  40a16e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a16f:	add    edi,DWORD PTR [ebx+edi*2+0x59]
  40a173:	aaa    
  40a174:	je     0x40a1ab
  40a176:	dec    esi
  40a177:	mov    ecx,0x6ea52140
  40a17c:	fs xor eax,0x3d738970
  40a182:	ss aas 
  40a184:	loope  0x40a18e
  40a186:	sar    eax,0x13
  40a189:	enter  0x3ee8,0xfe
  40a18d:	cmp    DWORD PTR [esi],edx
  40a18f:	aas    
  40a190:	cmp    al,0x35
  40a192:	pushf  
  40a193:	mov    db1,ebx
  40a196:	cmp    eax,0x6c832c3f
  40a19b:	pusha  
  40a19c:	sbb    al,0x35
  40a19e:	inc    BYTE PTR [edx+0x3efe2dde]
  40a1a4:	adc    al,0xa
  40a1a6:	je     0x40a1b4
  40a1a8:	enter  0xc976,0x36
  40a1ac:	add    al,0x35
  40a1ae:	jmp    0x94c9096a
  40a1b3:	das    
	...
  40a1dc:	cld    
  40a1dd:	xor    al,0xce
  40a1df:	add    esi,DWORD PTR [edi-0x2b]
  40a1e2:	imul   eax,DWORD PTR [eax+0x3ebe3cf3],0x19ffbd4b
  40a1ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1ed:	xor    al,0xff
  40a1ef:	mov    esi,0xf175344e
  40a1f4:	jo     0x40a1a6
  40a1f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1f7:	sahf   
  40a1f8:	jge    0x40a22e
  40a1fa:	mov    ch,0x85
  40a1fc:	jge    0x40a232
  40a1fe:	dec    DWORD PTR [esi-0x4917f30d]
  40a204:	xor    BYTE PTR [edi+edi*8],dh
  40a207:	jle    0x40a22c
  40a209:	and    edi,esi
  40a20b:	jbe    0x40a262
  40a20d:	xor    al,0x75
  40a20f:	loope  0x40a271
  40a211:	dec    edx
  40a212:	test   al,0x66
  40a214:	inc    ebp
  40a215:	xor    al,0xb5
  40a217:	inc    ebp
  40a218:	xor    eax,0xb356ff34
  40a21d:	or     al,0xe8
  40a21f:	call   0x28e3:0x46ff33e0
  40a226:	idiv   DWORD PTR [esi]
  40a228:	sbb    eax,0x20e17534
  40a22d:	outs   dx,BYTE PTR ds:[esi]
  40a22e:	test   al,0x2e
  40a230:	or     eax,0x7d45b534
  40a235:	xor    al,0xff
  40a237:	push   ds
  40a238:	add    ecx,DWORD PTR [eax+ebp*8]
  40a23b:	jle    0x40a1dd
  40a23d:	xor    al,0xff
  40a23f:	push   cs
	...
  40a268:	mov    bl,0x2d
  40a26a:	test   DWORD PTR [esi],0x52a12165
  40a270:	pop    ebp
  40a271:	xor    al,0xff
  40a273:	cmp    al,0x68
  40a275:	cmp    al,0xff
  40a277:	out    dx,al
  40a278:	popa   
  40a279:	fwait
  40a27a:	stos   DWORD PTR es:[edi],eax
  40a27b:	out    0x46,al
  40a27d:	xor    al,0xb5
  40a27f:	int    0x36
  40a281:	xor    al,0xff
  40a283:	rol    edx,0x5f
  40a286:	dec    esi
  40a288:	cs jle 0x40a273
  40a28b:	add    BYTE PTR [ebp+0x72e8fef5],ah
  40a291:	mov    ds:0xbb9dfffe,al
  40a296:	fcomi  st,st(7)
  40a298:	popf   
  40a299:	cmc    
  40a29a:	out    0x75,eax
  40a29c:	sbb    esi,esi
  40a29e:	(bad)  
  40a29f:	call   DWORD PTR [edi]
  40a2a1:	std    
  40a2a2:	idiv   bh
  40a2a4:	(bad)  
  40a2a6:	je     0x40a2b4
  40a2a8:	mov    ebp,0x8fe8077b
  40a2ad:	cmc    
  40a2ae:	(bad)  
  40a2af:	call   FWORD PTR ds:0x1df7efbc
  40a2b5:	mul    bh
  40a2b7:	pop    ecx
  40a2b8:	or     esi,esi
  40a2ba:	(bad)  
  40a2bb:	push   DWORD PTR [edi+0x1c51e8ef]
  40a2c1:	idiv   dh
  40a2c3:	call   DWORD PTR [edi+0x7fa3e7f3]
  40a2c9:	pop    es
  40a2ca:	add    cl,cl
	...
  40a2f4:	xor    BYTE PTR [ecx],bl
  40a2f6:	add    BYTE PTR [ebp-0x27],dl
  40a2f9:	clc    
  40a2fa:	add    ah,0x1e
  40a2fd:	pop    edi
  40a2fe:	jmp    FWORD PTR [ecx+0x74]
  40a301:	hlt    
  40a302:	je     0x40a30c
  40a304:	pop    edx
  40a305:	pusha  
  40a306:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a307:	call   FWORD PTR [ebp+0x7e]
  40a30a:	inc    ebp
  40a30b:	cld    
  40a30c:	retf   0x3835
  40a30f:	inc    ecx
  40a310:	and    bl,BYTE PTR [edi+0x1]
  40a313:	add    BYTE PTR [edx],dh
  40a315:	xchg   edi,edi
  40a317:	jne    0x40a333
  40a319:	fcomip st,st(6)
  40a31b:	std    
  40a31c:	sbb    eax,0xdb3f67f6
  40a321:	inc    edi
  40a322:	(bad)  
  40a323:	(bad)  
  40a324:	addr16 inc edi
  40a326:	sub    BYTE PTR [ecx-0xe],al
  40a329:	cmc    
  40a32a:	je     0x40a334
  40a32c:	dec    ebx
  40a32d:	dec    eax
  40a32e:	daa    
  40a32f:	std    
  40a330:	in     al,dx
  40a331:	inc    ebx
  40a332:	cmp    al,0x75
  40a334:	out    0x4b,eax
  40a336:	mov    dh,0x7
  40a338:	repz repnz imul edi,edi,0xffffffd4
  40a33d:	imul   eax,DWORD PTR [ecx+0x4],0xec891d4b
  40a344:	retf   0x5f64
  40a347:	idiv   DWORD PTR [ebx+edx*4-0xf48ba72]
  40a34e:	cmp    al,0x75
  40a350:	pop    ebx
  40a351:	xor    DWORD PTR [esi-0x411b4cf5],0xffffffff
	...
  40a380:	pushf  
  40a381:	aaa    
  40a382:	inc    ebx
  40a383:	bswap  esi
  40a385:	cli    
  40a386:	add    DWORD PTR [eax],eax
  40a388:	dec    ebx
  40a389:	imul   eax,esi,0xfffffff7
  40a38c:	dec    ebx
  40a38d:	and    BYTE PTR [ebx],al
  40a38f:	add    BYTE PTR [ebp+ebp*2+0x204cff37],al
  40a396:	add    ebp,DWORD PTR [edx+0x4b]
  40a399:	inc    esi
  40a39a:	add    ebp,DWORD PTR [edx+0x4b]
  40a39d:	push   esi
  40a39e:	add    ecx,DWORD PTR [ebp-0x732d03fa]
  40a3a4:	into   
  40a3a5:	hlt    
  40a3a6:	xor    edi,edi
  40a3a8:	dec    esp
  40a3a9:	nop
  40a3aa:	cmp    al,0x75
  40a3ac:	inc    ebx
  40a3ad:	jmp    0x40a364
  40a3af:	sti    
  40a3b0:	xor    edi,DWORD PTR [edx]
  40a3b2:	mov    esi,0x432734ff
  40a3b7:	je     0x40a3ff
  40a3b9:	or     DWORD PTR [edx-0x54dfb4ff],eax
  40a3bf:	mov    dl,0x73
  40a3c1:	popa   
  40a3c2:	add    edi,edi
  40a3c4:	sahf   
  40a3c5:	push   eax
  40a3c6:	sub    edi,DWORD PTR [ecx]
  40a3c8:	frstor [edx]
  40a3ca:	cmp    edx,DWORD PTR [eax-0x30]
  40a3cd:	or     BYTE PTR [ecx-0x29c33977],bh
  40a3d3:	cmp    esi,esp
  40a3d5:	fdivr  DWORD PTR [edx]
  40a3d7:	sub    al,0x22
  40a3d9:	arpl   si,cx
  40a3db:	cmp    edx,edx
  40a3dd:	mov    edi,DWORD PTR [ecx-0x2ece23cd]
  40a3e3:	mov    ebx,0x0
	...
  40a40c:	mov    ds:0xccaeb631,al
  40a411:	test   eax,0x90bfd6a
  40a416:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a417:	jno    0x40a3d4
  40a419:	cmp    DWORD PTR [esi-0x1b444bc5],ebx
  40a41f:	sub    ecx,ecx
  40a421:	arpl   WORD PTR [esi-0x72742dc5],cx
  40a427:	xor    ebx,DWORD PTR [ecx+esi*1-0x7cdcfbed]
  40a42e:	mov    al,0xc4
  40a430:	mov    WORD PTR [edx],?
  40a432:	xor    al,0x34
  40a434:	jl     0x40a467
  40a436:	cmp    si,si
  40a439:	add    al,0x51
  40a43b:	mov    ds:0x8d5631a7,eax
  40a440:	(bad)  
  40a441:	sub    BYTE PTR [esi+0x3b],dl
  40a444:	fs sahf 
  40a446:	call   0xa83094f6
  40a44b:	add    edx,DWORD PTR [ebx+edi*2+0x39]
  40a44f:	xor    ecx,DWORD PTR [ecx+esi*1+0x2e]
  40a453:	mov    cl,0x50
  40a455:	and    DWORD PTR [ebp+0x70313c68],esi
  40a45b:	and    DWORD PTR [edi],0xa13b1639
  40a461:	or     DWORD PTR [ecx-0x17359c4f],eax
  40a467:	cmp    dl,dh
  40a469:	cmp    esi,esi
  40a46b:	cmp    dl,BYTE PTR [ecx+esi*1]
  40a46e:	add    BYTE PTR [eax+eax*1+0x0],bh
	...
  40a496:	add    BYTE PTR [eax],al
  40a498:	inc    esp
  40a499:	and    DWORD PTR [ecx],esi
  40a49b:	cmp    al,0x40
  40a49d:	xor    BYTE PTR [ecx-0xc7cf94],cl
  40a4a3:	fisub  WORD PTR [esi-0x108d98d0]
  40a4a9:	leave  
  40a4aa:	dec    ebp
  40a4ac:	pop    ebx
  40a4ad:	cmp    edi,esi
  40a4af:	(bad)  
  40a4b0:	and    DWORD PTR [eax],esi
  40a4b2:	jne    0x40a4a1
  40a4b4:	and    BYTE PTR [edi],dl
  40a4b6:	lods   eax,DWORD PTR ds:[esi]
  40a4b7:	mov    dh,0x11
  40a4b9:	add    BYTE PTR [ebp-0xcf8673],0x6a
  40a4c0:	inc    ebx
  40a4c1:	and    eax,0x9719ef7
  40a4c6:	jne    0x40a4a8
  40a4c8:	lds    ebp,FWORD PTR [esi-0x20]
  40a4cb:	xchg   esi,eax
  40a4cc:	popa   
  40a4cd:	xor    BYTE PTR [eax],al
  40a4cf:	std    
  40a4d0:	jmp    0x40a45d
  40a4d2:	mov    ebp,0xff30598d
  40a4d7:	jmp    0x2cc379b8
  40a4dc:	xor    BYTE PTR [eax],bh
  40a4de:	jmp    DWORD PTR [esi+0x48]
  40a4e1:	mov    ch,0x52
  40a4e3:	ror    DWORD PTR [eax+0x9],1
  40a4e6:	out    dx,eax
  40a4e7:	xchg   edi,eax
  40a4e8:	xor    DWORD PTR [esi+0x66784107],esi
  40a4ee:	inc    DWORD PTR [esi+0x21]
  40a4f1:	jbe    0x40a4df
  40a4f3:	adc    DWORD PTR ss:[eax],esi
  40a4f6:	(bad)  
  40a4f7:	mov    esp,0x87a42140
	...
  40a524:	xor    DWORD PTR [eax],0x38705cff
  40a52a:	call   FWORD PTR [esi]
  40a52c:	jno    0x40a4e4
  40a52e:	pop    es
  40a52f:	add    edx,ebx
  40a531:	dec    WORD PTR [esi]
  40a534:	popa   
  40a535:	jbe    0x40a51b
  40a537:	add    BYTE PTR ds:0x9ffffef2,bl
  40a53d:	add    al,0xe8
  40a53f:	mov    BYTE PTR [ebx+esi*8-0x2],bh
  40a543:	(bad)  
  40a544:	aas    
  40a545:	in     al,dx
  40a546:	idiv   bh
  40a548:	in     eax,0xf1
  40a54a:	je     0x40a554
  40a54c:	sbb    ch,BYTE PTR [edi-0x5b]
  40a54f:	call   DWORD PTR ds:0xfddcb4f2
  40a555:	icebp  
  40a556:	(bad)  
  40a557:	call   FWORD PTR [edi]
  40a559:	std    
  40a55a:	out    0x6c,eax
  40a55c:	int3   
  40a55d:	icebp  
  40a55e:	(bad)  
  40a55f:	dec    DWORD PTR [edi-0x17]
  40a562:	idiv   bh
  40a564:	cmc    
  40a565:	fdiv   QWORD PTR [ebp-0x57]
  40a568:	in     eax,0xf1
  40a56a:	(bad)  
  40a56b:	mov    ch,0xc2
  40a56d:	stc    
  40a56e:	(bad)  
  40a56f:	dec    edx
  40a571:	pop    ebp
  40a572:	test   al,0xff
  40a574:	aad    0xf1
  40a576:	mov    ah,0xec
  40a578:	sbb    eax,0x42e8fef2
  40a57d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a57e:	(bad)  
  40a57f:	call   DWORD PTR ds:0xf5f7e7a0
  40a585:	icebp  
  40a586:	out    0x55,eax
	...
  40a5b0:	fcomi  st,st(1)
  40a5b2:	(bad)  
  40a5b3:	(bad)  
  40a5b4:	(bad)  
  40a5b6:	idiv   bh
  40a5b8:	adc    eax,0x15a949dd
  40a5bd:	repnz (bad) 
  40a5bf:	mov    ch,0x22
  40a5c1:	cli    
  40a5c2:	(bad)  
  40a5c3:	call   DWORD PTR ds:0x8fff0b60
  40a5c9:	add    ebp,eax
  40a5cb:	cmp    eax,0xfffef074
  40a5d0:	lahf   
  40a5d1:	cmc    
  40a5d2:	idiv   bh
  40a5d4:	push   ebp
  40a5d5:	(bad)  ds:0x39174ba9
  40a5db:	dec    DWORD PTR [esi+0x1d512b18]
  40a5e1:	or     BYTE PTR [ecx],bh
  40a5e3:	call   FWORD PTR [esi-0x6f87d4d4]
  40a5e9:	and    BYTE PTR [ebx],al
  40a5eb:	leave  
  40a5ec:	or     DWORD PTR [ebp+0x3],ecx
  40a5ef:	push   ebp
  40a5f0:	rcl    BYTE PTR [esp+eax*4-0x3c],1
  40a5f4:	neg    edx
  40a5f6:	add    ebp,DWORD PTR [edx+0x54]
  40a5f9:	push   edi
  40a5fa:	scas   al,BYTE PTR es:[edi]
  40a5fb:	pop    es
  40a5fc:	repz loopne 0x40a660
  40a5ff:	(bad)  
  40a600:	fdivr  QWORD PTR [ecx-0x679c0443]
  40a606:	cli    
  40a607:	inc    eax
  40a608:	dec    ebx
  40a609:	ja     0x40a5f9
  40a60b:	inc    ecx
  40a60c:	jb     0x40a5ef
  40a60e:	add    edi,edi
  40a610:	cmp    BYTE PTR ss:[ebx],ch
  40a613:	test   BYTE PTR [eax],0x0
	...
  40a63a:	add    BYTE PTR [eax],al
  40a63c:	mov    dh,0x8f
  40a63e:	cmp    BYTE PTR [eax-0x1d],ch
  40a641:	pop    ecx
  40a642:	ret    0x2cff
  40a645:	and    al,BYTE PTR [ebx]
  40a647:	add    bl,cl
  40a649:	xchg   DWORD PTR [esi+0x3684a307],ebp
  40a64f:	dec    DWORD PTR [edi+esi*4+0x3584fbad]
  40a656:	or     ebp,eax
  40a658:	sbb    BYTE PTR [esi+0x38],bh
  40a65b:	inc    DWORD PTR [edx+0x17fffee2]
  40a661:	stos   DWORD PTR es:[edi],eax
  40a662:	or     DWORD PTR es:[edi+0x5cff2fec],0xfbfbbdb5
  40a66d:	out    dx,al
  40a66e:	lods   eax,DWORD PTR ds:[esi]
  40a66f:	cmovl  ebp,DWORD PTR [ebp+0x7]
  40a673:	call   0x4421da
  40a678:	push   eax
  40a679:	or     DWORD PTR [ecx],ebp
  40a67b:	or     dh,cl
  40a67d:	jge    0x40a668
  40a67f:	add    ecx,DWORD PTR [ebx+0x46]
  40a682:	lods   al,BYTE PTR ds:[esi]
  40a683:	cmp    ecx,DWORD PTR [ebx+0x9]
  40a686:	jmp    0xfd04aa8e
  40a68b:	aaa    
  40a68c:	dec    esp
  40a68d:	or     ecx,ebp
  40a68f:	lods   eax,DWORD PTR ds:[esi]
  40a690:	or     al,0xa0
  40a692:	call   0xe8e0ab44
  40a697:	xchg   BYTE PTR [esi-0x3176c6cb],al
  40a69d:	xor    al,0xd6
  40a69f:	aaa    
	...
  40a6c8:	in     al,dx
  40a6c9:	fcom   st(5)
  40a6cb:	mov    cl,0xdc
  40a6cd:	sub    eax,0x2bf33854
  40a6d2:	inc    ebx
  40a6d3:	add    al,0x4b
  40a6d5:	add    ch,BYTE PTR [ecx+0x1c224ab0]
  40a6db:	mov    esi,ecx
  40a6dd:	sbb    al,0xb6
  40a6df:	aaa    
  40a6e0:	mov    esp,0xbf8173d8
  40a6e5:	xor    eax,0x2e1b379e
  40a6ea:	sbb    al,0x14
  40a6ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6ed:	mov    bl,0xdc
  40a6ef:	sub    ebx,DWORD PTR ds:0xc2378662
  40a6f5:	cmp    DWORD PTR [ecx+0x2f],0xffffff8c
  40a6f9:	sub    eax,0xeaff43e2
  40a6fe:	imul   edi,DWORD PTR [ecx+0x6f],0x4b376635
  40a705:	mov    ch,0xff
  40a707:	stos   DWORD PTR es:[edi],eax
  40a708:	ins    BYTE PTR es:[edi],dx
  40a709:	sub    eax,0x73647646
  40a70e:	cmp    eax,0x462d5c2f
  40a713:	jno    0x40a770
  40a715:	xor    eax,0xb34c373e
  40a71a:	jmp    eax
  40a71c:	jo     0x40a75a
  40a71e:	leave  
  40a71f:	cs je  0x40a74e
  40a722:	mov    ch,0x19
  40a724:	fs sub al,0xff
  40a727:	adc    DWORD PTR [eiz*2+0x16ff],esp
	...
  40a752:	add    BYTE PTR [eax],al
  40a754:	pop    esp
  40a755:	(bad)  
  40a756:	test   DWORD PTR [edx],0x5752cc7
  40a75c:	lods   eax,DWORD PTR ds:[si]
  40a75e:	jns    0x40a749
  40a760:	dec    eax
  40a761:	inc    edx
  40a762:	ret    0x48e5
  40a765:	(bad)  
  40a766:	mov    bh,ch
  40a768:	leave  
  40a769:	inc    ebp
  40a76a:	cld    
  40a76b:	push   ebx
  40a76c:	dec    edi
  40a76d:	lahf   
  40a76e:	pop    ss
  40a76f:	fidivr WORD PTR [ebx+0x6a2de804]
  40a775:	sub    al,0xff
  40a777:	pusha  
  40a778:	or     esi,DWORD PTR [ecx]
  40a77a:	push   0xffc9d7b4
  40a77f:	mov    ebp,0x2828cadb
  40a784:	dec    edi
  40a785:	sub    al,0x75
  40a787:	loope  0x40a7f9
  40a789:	out    0xfe,al
  40a78b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a78c:	jge    0x40a72f
  40a78e:	int3   
  40a78f:	loopne 0x40a718
  40a791:	sub    al,0x67
  40a793:	jmp    0x40a7dd
  40a795:	or     DWORD PTR [eax-0x17fb2472],eax
  40a79b:	ficomp DWORD PTR [ebp+0x2c]
  40a79e:	call   DWORD PTR [ecx]
  40a7a0:	sub    eax,0x3de940f2
  40a7a5:	test   BYTE PTR [ecx-0x40],0x87
  40a7a9:	sub    al,0xfe
  40a7ab:	fadd   QWORD PTR [eax+0x21]
  40a7ae:	add    BYTE PTR [esi+0x35],bl
  40a7b1:	sub    al,0x68
  40a7b3:	dec    edi
  40a7b4:	addr16 leave 
  40a7b6:	inc    eax
	...
  40a7e0:	dec    edx
  40a7e1:	or     DWORD PTR [eax],eax
  40a7e3:	add    dl,ah
  40a7e5:	bnd je 0x40a7f0
  40a7e8:	cli    
  40a7e9:	in     eax,0xfd
  40a7eb:	(bad)  
  40a7ec:	jge    0x40a7e1
  40a7ee:	je     0x40a7ec
  40a7f0:	ins    DWORD PTR es:[edi],dx
  40a7f1:	jns    0x40a7fa
  40a7f3:	call   0x3f5108
  40a7f8:	jnp    0x40a7c4
  40a7fa:	add    eax,DWORD PTR [eax]
  40a7fc:	out    0x7e,eax
  40a7fe:	in     al,dx
  40a7ff:	push   DWORD PTR [edi+0x79f4e803]
  40a805:	repz dec BYTE PTR [ebx]
  40a808:	bound  ebx,QWORD PTR [eax+edi*1+0x68]
  40a80c:	and    DWORD PTR [edx],esi
  40a80e:	inc    eax
  40a80f:	add    dl,ah
  40a811:	fisttp WORD PTR [eax+0x4ff5edab]
  40a817:	push   eax
  40a818:	call   0x85c:0xbcef0005
  40a81f:	cmp    dh,BYTE PTR [ebx]
  40a821:	add    eax,0xfd17ff50
  40a826:	out    0x50,eax
  40a828:	sahf   
  40a829:	cmc    
  40a82a:	(bad)  
  40a82b:	pop    eax
  40a82c:	or     cl,BYTE PTR [eax]
  40a82e:	add    bh,ch
  40a830:	sub    al,0x5d
  40a832:	or     eax,0x5005633a
  40a837:	call   DWORD PTR [edi-0x3]
  40a83a:	out    0x3c,eax
  40a83c:	out    dx,al
  40a83d:	cmc    
  40a83e:	(bad)  
  40a83f:	call   0x3f768e
	...
  40a86c:	fcmovnb st,st(6)
  40a86e:	pop    es
  40a86f:	add    BYTE PTR [edi],dh
  40a871:	sub    ah,0x83
  40a874:	mov    dh,0xf0
  40a876:	imul   eax,DWORD PTR [eax],0x75ff1048
  40a87c:	jp     0x40a85d
  40a87e:	mov    DWORD PTR [ebp+ecx*1+0x4b4588f6],esp
  40a885:	(bad)  
  40a886:	test   eax,0xb545c19
  40a88b:	call   0xff756b4e
  40a890:	loope  0x40a890
  40a892:	xor    al,0x75
  40a894:	push   ebx
  40a895:	enter  0xff88,0x3c
  40a899:	fsubr  QWORD PTR [ecx+0xb8e341b]
  40a89f:	call   0xff75b46e
  40a8a4:	and    al,0x8e
  40a8a6:	aaa    
  40a8a7:	call   DWORD PTR [esi-0x105bd4d8]
  40a8ad:	add    esi,DWORD PTR ds:0x32509c9
  40a8b3:	push   ebp
  40a8b4:	rol    BYTE PTR [ecx+eax*4],1
  40a8b7:	(bad)  
  40a8b8:	call   FWORD PTR [ebx]
  40a8ba:	scas   al,BYTE PTR es:[edi]
  40a8bb:	or     esp,ebx
  40a8bd:	mov    edi,0x37ecff68
  40a8c2:	inc    ebx
  40a8c3:	bswap  edi
  40a8c5:	jg     0x40a8ca
  40a8c7:	add    BYTE PTR [ebx-0x57],cl
  40a8ca:	mov    ebp,0x13c5c8fb
	...
  40a8f7:	add    BYTE PTR [edi+0x1a],dl
  40a8fa:	xor    al,0x75
  40a8fc:	pop    ebx
  40a8fd:	jae    0x40a8ad
  40a8ff:	sti    
  40a900:	mov    bl,0x47
  40a902:	imul   edi,edi,0xfbbdb9b4
  40a908:	and    edi,DWORD PTR [edx]
  40a90a:	stc    
  40a90b:	inc    eax
  40a90c:	dec    ebx
  40a90d:	xchg   ebx,eax
  40a90e:	scas   al,BYTE PTR es:[edi]
  40a90f:	sti    
  40a910:	mov    bl,0xa3
  40a912:	push   0xac1094ff
  40a917:	dec    DWORD PTR [ebx+edi*2+0x2d845075]
  40a91e:	or     ebp,eax
  40a920:	mov    BYTE PTR [eax+0x34],ch
  40a923:	jmp    DWORD PTR [ebx+0x9]
  40a926:	cmp    eax,0xd12a6c5d
  40a92b:	xlat   BYTE PTR ds:[ebx]
  40a92c:	and    cl,al
  40a92e:	call   0x416d7f67
  40a933:	popf   
  40a934:	mov    ds:0xe4d3462a,al
  40a939:	pop    es
  40a93a:	jmp    0x3619ae63
  40a93f:	scas   al,BYTE PTR es:[edi]
  40a940:	inc    esp
  40a941:	and    DWORD PTR [ebx+0x112a344b],ecx
  40a947:	jo     0x40a92e
  40a949:	sub    DWORD PTR [esi],ebx
  40a94b:	stos   DWORD PTR es:[edi],eax
  40a94c:	mov    ch,bh
  40a94e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a94f:	add    ebx,DWORD PTR [esp+esi*4]
  40a952:	or     al,0x2b
  40a954:	mov    ds,WORD PTR [edi+0x6]
  40a957:	xor    al,0x7b
  40a959:	mov    eax,ds:0x3e8
	...
  40a982:	add    BYTE PTR [eax],al
  40a984:	hlt    
  40a985:	push   0xffffff99
  40a987:	xor    al,0x76
  40a989:	add    DWORD PTR [ecx],eax
  40a98b:	add    BYTE PTR [ebx],0x2a
  40a98e:	out    0x1c,al
  40a990:	fldenv [edx-0x22]
  40a993:	xor    esi,DWORD PTR [ebx-0x4a]
  40a996:	adc    al,ch
  40a998:	fsubr  QWORD PTR [edx]
  40a99a:	push   esp
  40a99b:	xor    bl,ah
  40a99d:	in     al,0x92
  40a99f:	xor    ecx,esp
  40a9a1:	fcom   DWORD PTR [eax+0x5]
  40a9a4:	dec    ebx
  40a9a5:	sbb    dh,BYTE PTR [edi-0x2c]
  40a9a8:	mov    ebp,0x2b1be0b3
  40a9ad:	inc    ecx
  40a9ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9af:	xor    esp,DWORD PTR [ebx-0x5bccb949]
  40a9b5:	sub    DWORD PTR [eax+esi*1],ebx
  40a9b8:	mov    bl,0x9f
  40a9ba:	inc    esi
  40a9bb:	xor    edx,DWORD PTR [edi+edi*1-0x2bb4ff55]
  40a9c2:	jno    0x40a9e4
  40a9c4:	enter  0x44,0x75
  40a9c8:	(bad)  [ecx]
  40a9ca:	imul   edx,ebx,0x5107b439
  40a9d0:	in     al,dx
  40a9d1:	call   FWORD PTR gs:[esi-0x1a]
  40a9d5:	ret    
  40a9d6:	sti    
  40a9d7:	ret    
  40a9d8:	dec    eax
  40a9d9:	lahf   
  40a9da:	sbb    DWORD PTR [esi-0x6e],ecx
  40a9dd:	add    eax,ebp
  40a9df:	or     ebx,DWORD PTR [eax]
  40a9e1:	sub    bh,bh
  40a9e3:	ror    DWORD PTR [eax-0x4d],cl
  40a9e6:	and    dh,BYTE PTR [esi]
	...
  40aa10:	add    dl,BYTE PTR [ecx]
  40aa12:	call   0xff6923ee
  40aa17:	xchg   ebx,eax
  40aa18:	dec    eax
  40aa19:	mov    bl,0x1b
  40aa1b:	push   ds
  40aa1c:	loop   0x40aa2e
  40aa1e:	call   0xff690406
  40aa23:	cmp    DWORD PTR [eax-0x5116bf1d],0x74ff02
  40aa2d:	xor    ebx,edi
  40aa2f:	idiv   DWORD PTR [ecx]
  40aa31:	sub    BYTE PTR [eax+0x59],ch
  40aa34:	in     eax,0xc9
  40aa36:	call   DWORD PTR [edx-0x1c]
  40aa39:	daa    
  40aa3a:	jne    0x40aa2d
  40aa3c:	inc    eax
  40aa3d:	xor    eax,0xb119d6fe
  40aa42:	(bad)  
  40aa43:	adc    ecx,DWORD PTR [esi]
  40aa45:	sub    DWORD PTR [ecx-0x1b],ebp
  40aa48:	sbb    DWORD PTR [esi+0x271bd107],ebx
  40aa4e:	push   DWORD PTR [esi-0x51046187]
  40aa54:	repz adc al,ch
  40aa57:	sbb    esp,DWORD PTR [eax+ebp*1]
  40aa5a:	push   DWORD PTR [eax+0x3c000d0e]
  40aa60:	sbb    al,0x35
  40aa62:	and    DWORD PTR [ebp+0xff2030],0xfc4589c5
  40aa6c:	(bad)  
  40aa6d:	fdiv   QWORD PTR [eax+edx*1-0xb]
  40aa71:	pusha  
  40aa72:	or     ebp,eax
	...
  40aa9c:	mov    edx,0x79ffff74
  40aaa1:	int3   
  40aaa2:	push   cs
  40aaa3:	test   DWORD PTR [ebp+0x2d00000d],ebp
  40aaa9:	push   ecx
  40aaaa:	test   DWORD PTR [eax],0xc7000c62
  40aab0:	lahf   
  40aab1:	loopne 0x40aab1
  40aab3:	pop    es
  40aab4:	xor    cl,BYTE PTR [edx+ebp*2]
  40aab7:	add    BYTE PTR [eax],cl
  40aab9:	or     al,0x6a
  40aabb:	add    BYTE PTR [eax],cl
  40aabd:	or     al,0x8d
  40aabf:	inc    ebp
  40aac0:	dec    esi
  40aac1:	cmp    al,0x8c
  40aac3:	test   DWORD PTR [esi],edi
  40aac5:	jecxz  0x40aac5
  40aac7:	jmp    edx
  40aac9:	fidiv  DWORD PTR [eax+edi*8+0x45]
  40aacd:	popa   
  40aace:	sti    
  40aacf:	call   0x401eec
  40aad4:	stc    
  40aad5:	retf   
  40aad6:	jae    0x40aadd
  40aad8:	dec    ebx
  40aad9:	add    BYTE PTR es:[eax],al
  40aadc:	loop   0x40aa61
  40aade:	mov    dl,0x28
  40aae0:	and    ecx,DWORD PTR ds:0x3e275ff
  40aae6:	sub    eax,0x4fd9f5a9
  40aaeb:	mov    edx,DWORD PTR [edx-0x720b7b59]
  40aaf1:	fsin   
  40aaf3:	push   eax
  40aaf4:	pusha  
  40aaf5:	add    eax,0xd9f5a91d
  40aafa:	mov    BYTE PTR [ebp-0x11e0e],al
	...
  40ab28:	ficomp DWORD PTR [ebp-0x5c]
  40ab2b:	inc    ebp
  40ab2d:	xchg   bh,bh
  40ab2f:	addr16 dec ebx
  40ab31:	(bad)  
  40ab32:	out    dx,al
  40ab33:	inc    eax
  40ab34:	dec    ebx
  40ab35:	xchg   edi,eax
  40ab36:	ja     0x40ab28
  40ab38:	xchg   esp,eax
  40ab39:	mov    ?,WORD PTR [ecx]
  40ab3b:	(bad)  
  40ab3c:	(bad)  
  40ab3d:	xor    eax,0x9eb3761b
  40ab42:	xor    BYTE PTR [ecx-0xc75a32],cl
  40ab48:	ins    BYTE PTR es:[edi],dx
  40ab49:	cmp    eax,DWORD PTR [ebx]
  40ab4b:	push   0xffc2eb60
  40ab50:	pop    ebp
  40ab51:	test   BYTE PTR [edi+esi*8],dh
  40ab54:	push   esp
  40ab55:	(bad)  
  40ab56:	xor    BYTE PTR [ebp+0x3f],dh
  40ab59:	mov    edx,0xe844a7cc
  40ab5e:	jp     0x40aae5
  40ab60:	xor    ebp,eax
  40ab62:	xor    bh,bh
  40ab64:	enter  0x1fb5,0xf7
  40ab68:	sub    al,0xf0
  40ab6a:	add    esi,DWORD PTR [ebx+ebx*2+0x78]
  40ab6e:	add    eax,DWORD PTR [eax]
  40ab70:	sub    al,0xbf
  40ab72:	fwait
  40ab73:	mov    dh,0x51
  40ab75:	jno    0x40ab7a
  40ab77:	call   esi
  40ab79:	cld    
  40ab7a:	cmp    bh,bh
  40ab7c:	add    al,0x28
  40ab7e:	mov    dh,0x7
  40ab80:	repz or edi,DWORD PTR [ebx]
  40ab83:	push   esp
  40ab85:	mov    BYTE PTR [edx],al
  40ab87:	add    ah,bl
  40ab89:	outs   dx,BYTE PTR ds:[esi]
  40ab8a:	fwait
  40ab8b:	rol    BYTE PTR [eax],0x0
	...
  40abb2:	add    BYTE PTR [eax],al
  40abb4:	and    ecx,esi
  40abb6:	add    edi,edi
  40abb8:	xchg   esi,eax
  40abb9:	dec    esp
  40abba:	cmp    bh,bh
  40abbc:	aam    0x57
  40abbe:	mov    dh,0x7
  40abc0:	jecxz  0x40ab45
  40abc2:	cmp    bh,bh
  40abc4:	les    esi,FWORD PTR [ebx+0x5fb4e86d]
  40abca:	xor    BYTE PTR [eax],al
  40abcc:	aas    
  40abcd:	and    BYTE PTR [ebx-0x69f65301],bl
  40abd3:	jno    0x40ac08
  40abd5:	pop    esi
  40abd6:	jecxz  0x40ab9a
  40abd8:	pushf  
  40abd9:	daa    
  40abda:	pop    esp
  40abdb:	sbb    ebx,DWORD PTR [esi+eiz*1+0x1116308e]
  40abe2:	xchg   ecx,eax
  40abe3:	jne    0x40ab77
  40abe5:	es jle 0x40ab83
  40abe8:	dec    ebx
  40abe9:	or     DWORD PTR [esi-0x4cb81c8f],eax
  40abef:	ret    0x276c
  40abf2:	pushf  
  40abf3:	sbb    ebx,DWORD PTR [esi+eiz*1+0x5e]
  40abf7:	xor    dh,dl
  40abf9:	adc    BYTE PTR [ecx-0x73],al
  40abfc:	and    BYTE PTR [esi],0x4e
  40abff:	xor    BYTE PTR [esi+0x44303e35],dl
  40ac05:	xor    DWORD PTR [ecx],ebp
  40ac07:	addr16 cmp al,0x26
  40ac0a:	ss jbe 0x40ac30
  40ac0d:	push   ds
  40ac0e:	xor    BYTE PTR cs:[ebx],ah
  40ac11:	pop    esp
  40ac12:	dec    ebp
  40ac13:	xor    BYTE PTR [esi+eiz*1],ah
  40ac16:	push   esp
  40ac17:	xor    eax,DWORD PTR [eax]
	...
  40ac3d:	add    BYTE PTR [eax],al
  40ac3f:	add    BYTE PTR [esi+eiz*1],dl
  40ac42:	push   ss
  40ac43:	xor    BYTE PTR [esi+0x44b60e15],bl
  40ac49:	xor    DWORD PTR ds:0xfe260431,edi
  40ac4f:	jne    0x40ac4c
  40ac51:	sbb    eax,0x7fe32ff6
  40ac56:	inc    ebp
  40ac57:	xor    ah,ch
  40ac59:	and    eax,0x50f22c2c
  40ac5e:	fild   QWORD PTR [edi]
  40ac60:	fsub   QWORD PTR ds:0x29e3305c
  40ac66:	push   edi
  40ac67:	add    al,0x4b
  40ac69:	push   eax
  40ac6a:	stos   DWORD PTR es:[edi],eax
  40ac6b:	add    BYTE PTR [ebx-0x44],cl
  40ac6e:	jno    0x40ac90
  40ac70:	mov    esp,0x50e4ff9b
  40ac75:	push   eax
  40ac76:	test   al,0xae
  40ac78:	pop    esp
  40ac79:	adc    al,al
  40ac7b:	sbb    eax,0xe3caadb6
  40ac80:	xchg   DWORD PTR ds:0x6d85814f,esp
  40ac86:	dec    DWORD PTR [esi-0x16982a89]
  40ac8c:	dec    eax
  40ac8d:	ss mov esi,0x40e2f411
  40ac93:	jmp    0xe1b5d330
  40ac98:	push   eax
  40ac99:	in     al,dx
  40ac9a:	enter  0x3466,0xc1
  40ac9e:	addr16 call 0xc1fee2ec
	...
  40accc:	pavgw  mm0,QWORD PTR [eax-0x17]
  40acd0:	js     0x40acf8
  40acd2:	jne    0x40acc5
  40acd4:	pusha  
  40acd5:	cli    
  40acd6:	enter  0x6c3e,0x31
  40acda:	cmp    eax,0xc924648d
  40acdf:	sub    ebp,DWORD PTR [edi]
  40ace1:	and    eax,0x886b7254
  40ace6:	les    ebx,FWORD PTR ds:0xe969bbf5
  40acec:	mov    dl,0xff
  40acee:	(bad)  
  40acef:	xchg   esp,eax
  40acf0:	adc    BYTE PTR ds:0x2434485d,ch
  40acf6:	mov    DWORD PTR [esp+ebp*1+0x10923590],esp
  40acfd:	retf   0x61ff
  40ad00:	cli    
  40ad01:	ret    
  40ad02:	daa    
  40ad03:	sub    BYTE PTR [edi-0x77],cl
  40ad06:	aas    
  40ad07:	jmp    0xe9fc35e9
  40ad0c:	dec    eax
  40ad0d:	or     DWORD PTR [eax+0x7d],ebp
  40ad10:	loop   0x40acdb
  40ad12:	(bad)  
  40ad13:	jmp    DWORD PTR [ebp+eax*1-0x50]
  40ad17:	jbe    0x40accb
  40ad19:	or     BYTE PTR [ebx],cl
  40ad1b:	shl    BYTE PTR [esi+0x63],0x3f
  40ad1f:	cmp    BYTE PTR [edx+0x35840f08],0x8
  40ad26:	add    BYTE PTR [eax],al
  40ad28:	bound  eax,QWORD PTR [ebp+0xd633aab]
  40ad2e:	call   0x40ae20
	...
  40ad57:	add    BYTE PTR [esi],dh
  40ad59:	or     eax,0xca715a00
  40ad5e:	dec    edi
  40ad5f:	call   0x3f567f
  40ad64:	push   edx
  40ad65:	cmp    eax,0x3620067
  40ad6a:	mov    esi,0x4032c568
  40ad6f:	add    BYTE PTR [edx+0xa0874f3],ah
  40ad75:	xchg   edx,eax
  40ad76:	enter  0xfdff,0x4f
  40ad7a:	add    DWORD PTR [bp+si],esi
  40ad7d:	add    edi,DWORD PTR [esi+0x40327368]
  40ad83:	add    dl,dl
  40ad85:	bnd je 0x40ad90
  40ad88:	mov    cl,BYTE PTR [esi+0x6dffc8]
  40ad8e:	mov    dl,0xa3
  40ad90:	cmp    eax,0xca43eaf3
  40ad95:	stos   DWORD PTR es:[edi],eax
  40ad96:	cmp    DWORD PTR [ecx+0x22],eax
  40ad99:	cmp    esp,edi
  40ad9b:	inc    ecx
  40ad9c:	test   BYTE PTR [eax],cl
  40ad9e:	add    BYTE PTR [ebx],cl
  40ada0:	xor    bl,BYTE PTR [ebx+esi*1+0x56]
  40ada4:	dec    edx
  40ada5:	ins    BYTE PTR es:[edi],dx
  40ada6:	lods   al,BYTE PTR ds:[esi]
  40ada7:	(bad)  
  40ada8:	fnsave [esi]
  40adaa:	dec    edi
  40adab:	push   0xbeef07f2
  40adb0:	jp     0x40ad50
  40adb2:	cmp    DWORD PTR [ecx+0x4b],eax
  40adb5:	xor    dl,bl
  40adb7:	(bad)  
  40adb8:	push   esi
  40adb9:	sub    bl,BYTE PTR [ebx]
  40adbb:	push   ebp
	...
  40ade4:	xchg   ebx,eax
  40ade5:	dec    edx
  40ade6:	sub    eax,0x3313358
  40adeb:	out    dx,eax
  40adec:	cmc    
  40aded:	leave  
  40adee:	inc    edx
  40adef:	cmp    cl,BYTE PTR [edx]
  40adf1:	xor    dl,bl
  40adf3:	(bad)  
  40adf4:	push   ds
  40adf5:	sbb    bl,BYTE PTR [ebx]
  40adf7:	inc    ecx
  40adf8:	xchg   ebx,eax
  40adf9:	sub    BYTE PTR ds:0x2ccf26e8,0xff
  40ae00:	mov    al,ds:0x457fc530
  40ae05:	xor    dh,BYTE PTR [esi-0xf59fa07]
  40ae0b:	mov    edi,0xff2c9ab2
  40ae10:	ins    BYTE PTR es:[edi],dx
  40ae11:	lahf   
  40ae12:	pop    ebp
  40ae13:	cmp    BYTE PTR [ebx+ebx*1-0x7a],cl
  40ae17:	inc    ebp
  40ae18:	pop    esp
  40ae19:	ret    0x6a2c
  40ae1c:	xor    DWORD PTR [ebx-0x119cf84a],edi
  40ae22:	sub    eax,0xe03744ff
  40ae27:	(bad)  
  40ae28:	mov    dh,0x18
  40ae2a:	sbb    edi,DWORD PTR [ecx+0x6a2cdc35]
  40ae30:	dec    edi
  40ae31:	repz mov dh,0x7
  40ae34:	xor    edi,DWORD PTR [ebp+ebp*1+0x4e791cff]
  40ae3b:	cmp    cl,BYTE PTR [edx-0x76cad3d0]
  40ae41:	dec    ecx
  40ae42:	ret    0x5ff
  40ae45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae46:	cli    
  40ae47:	out    0x0,eax
	...
  40ae6d:	add    BYTE PTR [eax],al
  40ae6f:	add    BYTE PTR [edx],bh
  40ae71:	and    eax,0xfd63ff2c
  40ae76:	jmp    0x1c8f9bb
  40ae7b:	add    BYTE PTR [ebx+0x9],cl
  40ae7e:	imul   ebp,DWORD PTR [esi+edx*2],0xd60cd111
  40ae85:	and    dl,dh
  40ae87:	sub    al,0x56
  40ae89:	and    eax,0x314cb6ce
  40ae8e:	imul   esp,DWORD PTR [ebx-0x44],0x22
  40ae92:	push   ds
  40ae93:	into   
  40ae94:	add    DWORD PTR [edi-0x13],0x3
  40ae98:	push   ss
  40ae99:	mov    ?,WORD PTR [ebp-0x61c6707e]
  40ae9f:	sub    al,0x9c
  40aea1:	xchg   esp,eax
  40aea2:	and    al,0x30
  40aea4:	sti    
  40aea5:	and    DWORD PTR [esp+edx*1],ebx
  40aea8:	mov    WORD PTR [esp+ebx*8-0x1763f2e5],ds
  40aeaf:	add    edx,DWORD PTR [eax+0x49]
  40aeb2:	out    dx,al
  40aeb3:	xchg   BYTE PTR [ecx],cl
  40aeb5:	pop    es
  40aeb6:	jmp    0x710d32be
  40aebb:	add    ecx,DWORD PTR [ebx+0x9]
  40aebe:	jmp    0x5e5db507
  40aec3:	add    al,0x4b
  40aec5:	or     ebx,eax
  40aec7:	add    esp,ecx
  40aec9:	or     bl,al
  40aecb:	add    esi,DWORD PTR [ecx+0x38c67409]
  40aed1:	mov    ecx,0x866b
	...
  40aefa:	add    BYTE PTR [eax],al
  40aefc:	aas    
  40aefd:	sbb    dh,BYTE PTR [esi]
  40aeff:	sub    al,0x9b
  40af01:	and    dh,BYTE PTR [ebx+ebp*1+0x1b249c24]
  40af08:	inc    ebx
  40af09:	pushf  
  40af0a:	call   0x9d89ef12
  40af0f:	push   es
  40af10:	and    cl,BYTE PTR [ebx+ebp*8]
  40af13:	add    ecx,DWORD PTR [ebx-0x4f]
  40af16:	cmp    ebx,ebx
  40af18:	mov    ecx,DWORD PTR [ecx]
  40af1a:	(bad)  
  40af1b:	mov    ch,0x44
  40af1d:	xor    DWORD PTR [eax],eax
  40af1f:	mov    dl,0x66
  40af21:	and    bh,bh
  40af23:	cdq    
  40af24:	arpl   WORD PTR [ecx],di
  40af26:	lea    ebp,[ebx+ebx*1+0x1a]
  40af2a:	(bad)  
  40af2b:	fdivp  st(7),st
  40af2d:	mov    bh,0xe7
  40af2f:	add    ch,BYTE PTR [ecx+0x22]
  40af32:	jmp    DWORD PTR [eax-0x36]
  40af35:	sbb    bh,dh
  40af37:	(bad)  
  40af38:	jo     0x40af6b
  40af3a:	or     DWORD PTR [ebx-0x1695dda0],0x283b06d0
  40af44:	dec    edi
  40af45:	and    dh,BYTE PTR [ebp-0xdda767]
  40af4b:	sahf   
  40af4c:	fimul  DWORD PTR ds:0x222a6de8
  40af52:	jmp    DWORD PTR [eax-0x36]
  40af55:	sub    al,0xf7
  40af57:	xchg   BYTE PTR [eax],dh
  40af59:	scas   eax,DWORD PTR es:[edi]
  40af5a:	call   DWORD PTR [eax]
  40af5c:	jae    0x40af3c
  40af5e:	inc    eax
  40af5f:	jmp    0x40af64
	...
  40af88:	and    DWORD PTR [eax+esi*8+0x76],ebx
  40af8c:	xor    BYTE PTR [edx],ah
  40af8e:	(bad)  
  40af8f:	fcom   QWORD PTR [ecx+ebp*1+0x69]
  40af93:	test   BYTE PTR [eax],ah
  40af95:	and    cl,BYTE PTR [ecx-0xe5cc94]
  40af9b:	dec    esi
  40af9c:	in     eax,0x20
  40af9e:	fsubr  QWORD PTR [di]
  40afa1:	retf   0x3dff
  40afa4:	mov    edx,0x6036f719
  40afa9:	and    BYTE PTR [ebp-0x23],dh
  40afac:	inc    eax
  40afad:	iret   
  40afae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afaf:	es jo  0x40af44
  40afb2:	test   DWORD PTR [ecx],edx
  40afb4:	pop    eax
  40afb5:	and    bh,bh
  40afb7:	or     DWORD PTR [eax-0x4f],0x1d
  40afbb:	ror    BYTE PTR [edi],cl
  40afbd:	and    esi,edi
  40afbf:	add    BYTE PTR [edi],bh
  40afc1:	aad    0xf6
  40afc3:	push   ebp
  40afc5:	repz je 0x40afd4
  40afc8:	dec    edx
  40afc9:	sbb    BYTE PTR [edi+edi*8-0x237b620b],ah
  40afd0:	std    
  40afd1:	repz dec BYTE PTR [ebp-0x91391]
  40afd8:	cmc    
  40afd9:	cmp    al,0x67
  40afdb:	cs pop ecx
  40afdd:	inc    esi
  40afde:	(bad)  
  40afdf:	(bad)  
  40afe0:	aas    
  40afe1:	fdivr  st(6),st
  40afe3:	push   ebp
  40afe5:	repz xor al,0x42
  40afe8:	dec    ebx
  40afe9:	inc    esi
  40afea:	jmp    edi
	...
  40b014:	sub    BYTE PTR [ecx-0x33660002],0x73
  40b01b:	sbb    DWORD PTR [ecx],esp
  40b01d:	mov    cl,0xdf
  40b01f:	div    DWORD PTR [ebp-0x7d8afc0d]
  40b025:	repz das 
  40b027:	(bad)  
  40b028:	out    dx,eax
  40b029:	shl    esi,cl
  40b02b:	push   ebp
  40b02d:	cmp    esp,edi
  40b02f:	fld    QWORD PTR [ebx]
  40b031:	repz (bad) 
  40b033:	jmp    0x40b0b3
  40b035:	pop    ds
  40b036:	mov    edi,0xe73c6c74
  40b03b:	rol    ebx,1
  40b03d:	repz inc bh
  40b040:	(bad)  
  40b042:	idiv   bh
  40b044:	xchg   ebp,eax
  40b045:	stc    
  40b046:	(bad)  
  40b047:	push   DWORD PTR [edx]
  40b049:	mov    eax,ds:0xf37dd084
  40b04e:	(bad)  
  40b04f:	push   eax
  40b050:	or     ch,BYTE PTR ds:0xf332413a
  40b056:	mov    ah,0xf0
  40b058:	cmp    eax,0xbffffef3
  40b05d:	pop    ss
  40b05e:	out    0xc5,eax
  40b060:	dec    ebx
  40b061:	into   
  40b062:	sub    edi,edi
  40b064:	shl    BYTE PTR [esi+ecx*2-0x79f90309],cl
  40b06b:	mov    ebp,0xff2916ef
  40b070:	dec    ebx
  40b071:	daa    
  40b072:	jg     0x40b00f
  40b074:	dec    ebx
  40b075:	xor    al,BYTE PTR [ebx]
  40b077:	add    DWORD PTR [eax],0x0
	...
  40b09e:	add    BYTE PTR [eax],al
  40b0a0:	sahf   
  40b0a1:	xor    eax,0x31d4ff31
  40b0a6:	clc    
  40b0a7:	cmp    DWORD PTR [ebp-0x37fffccf],0xffffff8c
  40b0ae:	sbb    al,0xf7
  40b0b0:	mov    esp,0xcf0f0446
  40b0b5:	mov    al,0x3
  40b0b7:	add    BYTE PTR [ebx-0x36],cl
  40b0ba:	adc    eax,DWORD PTR [eax]
  40b0bc:	mov    ah,0xaf
  40b0be:	sub    BYTE PTR [ebp+0x53],dh
  40b0c1:	jp     0x40b0eb
  40b0c3:	popf   
  40b0c4:	xchg   esp,eax
  40b0c5:	jle    0x40b0f0
  40b0c7:	mov    ch,0x9f
  40b0c9:	jle    0x40b0f4
  40b0cb:	inc    DWORD PTR [esp+esi*8-0x57e41805]
  40b0d2:	sub    bh,bh
  40b0d4:	je     0x40b0aa
  40b0d6:	sbb    esi,edi
  40b0d8:	ins    BYTE PTR es:[edi],dx
  40b0d9:	xchg   esi,eax
  40b0da:	sub    BYTE PTR [ebp+0x53],dh
  40b0dd:	mov    al,dh
  40b0df:	popf   
  40b0e0:	pop    esp
  40b0e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0e2:	sub    BYTE PTR [ebp-0xd74991],dh
  40b0e8:	dec    esp
  40b0e9:	cmp    al,0xfb
  40b0eb:	out    0x7f,eax
  40b0ed:	scas   al,BYTE PTR es:[edi]
  40b0ee:	sub    bh,bh
  40b0f0:	cmp    al,0x9e
  40b0f2:	dec    ebx
  40b0f3:	div    DWORD PTR [eax+eiz*8]
  40b0f6:	sub    BYTE PTR [ebp+0x43],dh
  40b0f9:	enter  0x9d3f,0x24
  40b0fd:	lock sub BYTE PTR [ebp+0x291e09ff],dh
	...
  40b12c:	adc    al,0x1f
  40b12e:	xchg   esp,eax
  40b12f:	sti    
  40b130:	and    al,0x2
  40b132:	ja     0x40b15d
  40b134:	add    al,0x8b
  40b136:	dec    esp
  40b137:	push   eax
  40b138:	hlt    
  40b139:	push   ds
  40b13a:	push   es
  40b13b:	add    al,0x7f
  40b13d:	add    ch,BYTE PTR [edx+0x67]
  40b140:	sbb    edx,DWORD PTR [edi]
  40b142:	imul   BYTE PTR [eax]
  40b144:	dec    edi
  40b145:	xchg   esp,eax
  40b146:	fidivr DWORD PTR [esi+eax*8+0x35]
  40b14a:	fisubr WORD PTR [eax]
  40b14c:	aam    0x1e
  40b14e:	sbb    DWORD PTR [ecx],ebp
  40b150:	push   esi
  40b151:	adc    ecx,eax
  40b153:	(bad)  
  40b154:	out    0x1e,al
  40b156:	into   
  40b157:	sbb    al,0x51
  40b159:	mov    bl,0xe8
  40b15b:	sub    BYTE PTR [esi],bh
  40b15d:	adc    ecx,edx
  40b15f:	jnp    0x40b12f
  40b161:	push   ds
  40b162:	mov    dh,0x28
  40b164:	fisub  WORD PTR ds:0x319c28b6
  40b16a:	popf   
  40b16b:	arpl   WORD PTR [esi+ebx*1+0x169f6e9e],dx
  40b172:	xchg   esi,eax
  40b173:	sub    BYTE PTR [ebx+0x30],dh
  40b176:	dec    ecx
  40b177:	sub    BYTE PTR [esi+ebx*1+0x3c],bh
  40b17b:	sbb    edi,DWORD PTR [esi+ebx*1+0x7e]
  40b17f:	sbb    ecx,DWORD PTR [ebp+0x64287669]
  40b185:	push   esp
  40b186:	lea    esi,[eax]
  40b188:	pop    esp
  40b189:	push   ds
  40b18a:	push   ecx
  40b18b:	push   esp
  40b18c:	stos   DWORD PTR es:[edi],eax
  40b18d:	push   ds
  40b18e:	pop    esi
  40b18f:	sub    BYTE PTR [eax],al
	...
  40b1b5:	add    BYTE PTR [eax],al
  40b1b7:	add    BYTE PTR [esi+0x44285e35],dl
  40b1bd:	xor    DWORD PTR [ecx],esp
  40b1bf:	arpl   WORD PTR [esi+ebx*1],di
  40b1c2:	inc    esi
  40b1c3:	outs   dx,BYTE PTR ds:[esi]
  40b1c4:	cmp    edx,DWORD PTR [esi]
  40b1c6:	sub    BYTE PTR ds:[esp+edx*4],ch
  40b1ca:	jmp    esp
  40b1cc:	jae    0x40b162
  40b1ce:	pop    es
  40b1cf:	inc    ecx
  40b1d0:	mov    cl,0x1c
  40b1d2:	jmp    DWORD PTR [esi]
  40b1d4:	arpl   WORD PTR [eax+esi*8+0x16],dx
  40b1d8:	arpl   WORD PTR [esi],bx
  40b1da:	call   0xff5f1a24
  40b1df:	push   cs
  40b1e0:	mov    ebp,0x2d34e915
  40b1e5:	push   ds
  40b1e6:	(bad)  
  40b1e7:	(bad)  
  40b1e8:	sahf   
  40b1e9:	and    eax,ebp
  40b1eb:	call   FWORD PTR [edi-0x79df00e3]
  40b1f1:	or     eax,0x2d503c00
  40b1f6:	and    DWORD PTR [ebp+0x42ffb323],0x53
  40b1fd:	push   ds
  40b1fe:	jne    0x40b1e1
  40b200:	pusha  
  40b201:	pop    edi
  40b202:	popf   
  40b203:	(bad)  
  40b204:	ins    BYTE PTR es:[edi],dx
  40b205:	nop
  40b206:	inc    ebp
  40b207:	mov    ebp,0x283ac9cf
  40b20c:	dec    edi
  40b20d:	push   ds
  40b20e:	xor    eax,0xffc87e2b
  40b213:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b214:	fiadd  DWORD PTR ds:0x1e621be8
  40b21a:	inc    DWORD PTR [ecx]
	...
  40b244:	mov    esp,edx
  40b246:	inc    eax
  40b247:	jmp    0xe940ba2c
  40b24c:	enter  0x751d,0xf1
  40b250:	push   eax
  40b251:	test   eax,0x1e2c76fc
  40b256:	jne    0x40b2c5
  40b258:	and    al,0x94
  40b25a:	pop    es
  40b25b:	push   ecx
  40b25c:	(bad)  
  40b25d:	jnp    0x40b25e
  40b25f:	pop    esi
  40b260:	push   cs
  40b261:	dec    ebx
  40b262:	add    al,0xe9
  40b264:	sbb    edx,DWORD PTR [eax+0x158b68ec]
  40b26a:	inc    BYTE PTR [eax]
  40b26c:	(bad)  
  40b26d:	in     al,0x69
  40b26f:	add    BYTE PTR [eax],bl
  40b271:	adc    bh,bh
  40b273:	jne    0x40b29f
  40b275:	add    DWORD PTR [edx-0x63],esi
  40b278:	ins    DWORD PTR es:[edi],dx
  40b279:	in     al,0x88
  40b27b:	inc    ebp
  40b27c:	outs   dx,BYTE PTR ds:[esi]
  40b27d:	jge    0x40b282
  40b27f:	add    DWORD PTR [edx],esp
  40b281:	or     DWORD PTR [ebp-0x11c9a7b],ecx
  40b287:	inc    edx
  40b289:	add    dl,dl
  40b28b:	jno    0x40b26f
  40b28d:	or     BYTE PTR [ebx],cl
  40b28f:	shl    BYTE PTR [esi+0x34],0x3c
  40b293:	add    al,0xf3
  40b295:	or     BYTE PTR [eax],al
  40b297:	ja     0x40b2a0
  40b299:	sbb    DWORD PTR [ebx+0x3b],0x858d0523
  40b2a0:	cmc    
  40b2a1:	out    0xfe,al
  40b2a3:	inc    DWORD PTR [edx+0xa3a8fd]
	...
  40b2cd:	add    BYTE PTR [eax],al
  40b2cf:	add    BYTE PTR [ebp-0x5d97b01d],cl
  40b2d5:	or     bh,ch
  40b2d7:	mov    esi,0x874e452
  40b2dc:	mov    ch,cl
  40b2de:	sar    bh,0xed
  40b2e1:	add    dh,dh
  40b2e3:	lahf   
  40b2e4:	in     eax,dx
  40b2e5:	jecxz  0x40b2e5
  40b2e7:	jne    0x40b297
  40b2e9:	jecxz  0x40b35f
  40b2eb:	or     dl,cl
  40b2ed:	jge    0x40b28b
  40b2ef:	dec    ebp
  40b2f1:	ffree  st(1)
  40b2f3:	add    al,0x62
  40b2f5:	cmp    DWORD PTR [edx-0x4241e14],ecx
  40b2fb:	push   0x72
  40b2fd:	sbb    BYTE PTR ds:0xe72057ff,0xd
  40b304:	iret   
  40b305:	jecxz  0x40b305
  40b307:	mov    DWORD PTR [edi+0x4b0067e4],esp
  40b30d:	xor    dl,BYTE PTR [esi]
  40b30f:	mov    esi,0x40ea48b3
  40b314:	dec    ebx
  40b315:	cmp    ch,BYTE PTR [ebp+0x26328a3a]
  40b31b:	jne    0x40b370
  40b31d:	retf   0xc44f
  40b320:	sbb    al,0xeb
  40b322:	and    eax,0xafe31775
  40b327:	pop    es
  40b328:	and    ecx,DWORD PTR [eax+ecx*4-0x1]
  40b32c:	add    al,0xe9
  40b32e:	inc    eax
  40b32f:	add    al,0x4b
  40b331:	push   ebp
  40b332:	jp     0x40b320
	...
  40b35c:	retf   0x4eed
  40b35f:	imul   esp
  40b361:	sbb    dh,BYTE PTR [edi+0x45]
  40b364:	out    0x81,eax
  40b366:	es jne 0x40b3a4
  40b369:	sub    ebp,DWORD PTR [edi-0x4cc21cf5]
  40b36f:	dec    esp
  40b371:	push   ss
  40b372:	inc    ebx
  40b373:	bswap  esi
  40b375:	cmp    eax,0x634b0003
  40b37a:	mov    edi,0x3324bf7
  40b37f:	add    BYTE PTR [esp+eiz*8+0x324cff2f],al
  40b386:	add    ebp,DWORD PTR [edx+0x4b]
  40b389:	enter  0x6a03,0x4b
  40b38d:	clc    
  40b38e:	add    ecx,DWORD PTR [ebp-0x732b89fa]
  40b394:	into   
  40b395:	jge    0x40b3c4
  40b397:	(bad)  
  40b398:	jl     0x40b37b
  40b39a:	and    al,0x75
  40b39c:	jae    0x40b320
  40b39e:	scas   eax,DWORD PTR es:[edi]
  40b39f:	sti    
  40b3a0:	arpl   WORD PTR [ebx-0x4d],sp
  40b3a3:	jmp    DWORD PTR [esi+eiz*1+0x43]
  40b3a7:	je     0x40b3ef
  40b3a9:	mov    DWORD PTR [ebp+0x1],ebp
  40b3ac:	dec    ebx
  40b3ad:	or     ecx,ebp
  40b3af:	fwait
  40b3b0:	cdq    
  40b3b1:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3b3:	add    eax,DWORD PTR [ebp+edx*4-0x8]
  40b3b7:	sbb    esi,DWORD PTR [edx]
  40b3b9:	push   0x8e9b254e
  40b3be:	sbb    DWORD PTR [edi+0x0],esi
	...
  40b3e5:	add    BYTE PTR [eax],al
  40b3e7:	add    dh,al
  40b3e9:	adc    eax,0xba242536
  40b3ee:	call   0xc225:0x2e68021b
  40b3f5:	test   BYTE PTR [ecx],bl
  40b3f7:	sub    eax,0xd5111b0c
  40b3fc:	in     eax,0x1a
  40b3fe:	push   ss
  40b3ff:	ja     0x40b3c7
  40b401:	sub    DWORD PTR [esi],edx
  40b403:	and    eax,0x8390b9f4
  40b408:	xor    al,cl
  40b40a:	call   0xfe5a5233
  40b40f:	and    al,0xdc
  40b411:	sbb    dh,BYTE PTR [edi+esi*8-0x14]
  40b415:	in     al,dx
  40b416:	mov    ah,BYTE PTR [esp+ecx*8]
  40b419:	nop
  40b41a:	fs pop ds
  40b41c:	mov    esp,0xbc99d61a
  40b421:	mov    ds:0x90be85f,al
  40b426:	(bad)  
  40b427:	outs   dx,BYTE PTR ds:[esi]
  40b428:	mov    ebx,0xa424be12
  40b42d:	xchg   esp,eax
  40b42e:	in     al,0x1b
  40b430:	cmp    DWORD PTR [edi-0x52],esp
  40b433:	and    al,0xc2
  40b435:	test   BYTE PTR [ebp+0x131a8c2c],dl
  40b43b:	add    al,0xf3
  40b43d:	mov    edx,edx
  40b43f:	ret    0x1b7c
  40b442:	push   esp
  40b443:	xor    edi,DWORD PTR [edx+ebx*1-0x7a]
  40b447:	and    al,0xf6
  40b449:	or     al,0x91
  40b44b:	sub    al,0x0
	...
  40b471:	add    BYTE PTR [eax],al
  40b473:	add    BYTE PTR [edx-0x1e89ffe6],ch
  40b479:	sub    eax,0x76
  40b47c:	das    
  40b47d:	sbb    ch,BYTE PTR [edx-0x17]
  40b480:	mov    al,0x74
  40b482:	cmp    ebp,DWORD PTR [eax+0x59b51a48]
  40b488:	outs   dx,DWORD PTR ds:[esi]
  40b489:	sbb    bh,bh
  40b48b:	dec    esi
  40b48c:	in     eax,0xd
  40b48e:	call   0xff5b5db8
  40b493:	jo     0x40b43a
  40b495:	cmp    eax,0xaf6736f7
  40b49a:	inc    eax
  40b49c:	je     0x40b47c
  40b49e:	inc    eax
  40b49f:	jmp    0x1731090b
  40b4a4:	das    
  40b4a5:	sbb    bh,bh
  40b4a7:	pushf  
  40b4a8:	hlt    
  40b4a9:	and    ecx,eax
  40b4ab:	dec    eax
  40b4ac:	das    
  40b4ad:	sbb    cl,BYTE PTR [ecx-0xed7f94]
  40b4b3:	inc    bl
  40b4b5:	sbb    DWORD PTR [edi+0x9],esp
  40b4b8:	repz enter 0xedff,0x66
  40b4bd:	sbb    edi,esi
  40b4bf:	out    0x28,al
  40b4c1:	sbb    dh,BYTE PTR [ebp-0x13]
  40b4c4:	jo     0x40b529
  40b4c6:	mov    eax,ds:0x859068d6
  40b4cb:	mov    ch,0x50
  40b4cd:	sbb    bh,bh
  40b4cf:	push   0x2a
  40b4d1:	and    eax,0x968bef7
  40b4d6:	je     0x40b508
	...
  40b500:	les    ebx,FWORD PTR [ebx-0x14]
  40b503:	mov    dh,0x68
  40b505:	sbb    al,BYTE PTR [eax]
  40b507:	sbb    eax,0x91bd86b7
  40b50c:	pusha  
  40b50d:	sbb    bh,bh
  40b50f:	jmp    0xf9a857e8
  40b514:	dec    eax
  40b515:	sub    bh,BYTE PTR [esi+0x77fc500]
  40b51b:	call   0x3f4fdb
  40b520:	aad    0xbf
  40b522:	jmp    0x40b51b
  40b524:	in     eax,0xe5
  40b526:	(bad)  
  40b527:	jne    0x40b583
  40b529:	in     eax,dx
  40b52a:	cmp    al,0x9b
  40b52c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b52d:	in     al,dx
  40b52e:	(bad)  
  40b52f:	mov    ch,0x8a
  40b531:	hlt    
  40b532:	(bad)  
  40b533:	inc    DWORD PTR [ebp+0x55e80772]
  40b539:	cwde   
  40b53a:	(bad)  
  40b53b:	jmp    DWORD PTR [ebp-0x4e]
  40b53e:	fcomip st,st(7)
  40b540:	push   ebp
  40b541:	in     al,dx
  40b542:	(bad)  
  40b543:	mov    ch,0x8e
  40b545:	hlt    
  40b546:	(bad)  
  40b547:	jmp    DWORD PTR [ebp+0x72]
  40b54a:	pop    es
  40b54b:	call   0x3f4ca5
  40b550:	push   ebp
  40b551:	mov    dl,0xd7
  40b553:	test   DWORD PTR [ebp-0x14],0xe4fa75fe
  40b55a:	or     al,0x9b
  40b55c:	in     eax,0xeb
  40b55e:	(bad)  
  40b55f:	mov    ch,0x36
  40b561:	hlt    
  40b562:	(bad)  
  40b563:	inc    DWORD PTR [eax]
	...
  40b589:	add    BYTE PTR [eax],al
  40b58b:	add    ch,ah
  40b58d:	jno    0x40b596
  40b58f:	call   0x3f4c79
  40b594:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b595:	mov    cl,0xd3
  40b597:	not    DWORD PTR [ebp-0x558a0115]
  40b59d:	in     al,0xf0
  40b59f:	call   0xf38e:0xb5feeb85
  40b5a6:	(bad)  
  40b5a7:	dec    DWORD PTR [edx-0x1a006309]
  40b5ad:	jmp    0x40b563
  40b5af:	in     al,dx
  40b5b0:	lods   eax,DWORD PTR ds:[esi]
  40b5b1:	jmp    0x40b5b1
  40b5b3:	call   0x403f9a
  40b5b8:	dec    ebx
  40b5b9:	jg     0x40b613
  40b5bb:	call   0xe8633d3c
  40b5c0:	lods   ax,WORD PTR ds:[esi]
  40b5c2:	and    edi,edi
  40b5c4:	fnstsw WORD PTR fs:[esi]
  40b5c7:	neg    DWORD PTR [edi+ebx*4+0x2a]
  40b5cb:	fidiv  DWORD PTR [esi-0x6900de59]
  40b5d1:	retf   0xff19
  40b5d4:	inc    esp
  40b5d5:	mov    edx,0xbf3c9d51
  40b5da:	and    DWORD PTR [ebp-0xde40e1],esi
  40b5e0:	and    esp,esi
  40b5e2:	jg     0x40b5e3
  40b5e4:	and    al,0xd7
  40b5e6:	push   edi
  40b5e7:	lock adc al,0xdf
  40b5ea:	and    edi,edi
  40b5ec:	sahf   
  40b5ed:	and    dh,BYTE PTR ss:[ebp+0x0]
	...
  40b615:	add    BYTE PTR [eax],al
  40b617:	add    BYTE PTR [ebx-0x6],al
  40b61a:	or     esi,edi
  40b61c:	add    al,0xf7
  40b61e:	and    DWORD PTR [ebp-0xde0905],esi
  40b624:	jecxz  0x40b5ef
  40b626:	jg     0x40b627
  40b628:	in     al,dx
  40b629:	push   cs
  40b62a:	enter  0xf2f7,0x2a
  40b62e:	and    edi,edi
  40b630:	fcomp  QWORD PTR [esi]
  40b632:	xchg   edi,eax
  40b633:	sti    
  40b634:	jecxz  0x40b649
  40b636:	mov    cl,0xff
  40b638:	int3   
  40b639:	pop    eax
  40b63a:	inc    esi
  40b63b:	or     al,0x4b
  40b63d:	fisttp QWORD PTR [esp+ebp*8+0x6a2065c8]
  40b644:	dec    ebx
  40b645:	int3   
  40b646:	add    bh,bh
  40b648:	sbb    ch,BYTE PTR ss:[ebx]
  40b64b:	mov    edx,0x892156c1
  40b650:	push   es
  40b651:	pop    esi
  40b652:	lods   al,BYTE PTR ds:[esi]
  40b653:	test   al,0x50
  40b655:	loope  0x40b65a
  40b657:	call   DWORD PTR [esi+0x9]
  40b65a:	sub    ebp,ebx
  40b65c:	or     ecx,DWORD PTR [ecx]
  40b65e:	sahf   
  40b65f:	xchg   edi,eax
  40b660:	inc    esp
  40b661:	and    DWORD PTR [ecx+0x117741f],ebp
  40b667:	imul   esi,DWORD PTR [eax],0xffffffca
  40b66a:	call   0xe94a011a
  40b66f:	sbb    DWORD PTR [ebp+ebx*4-0x20],0x2b
  40b674:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b675:	adc    eax,0x9d4c216e
  40b67a:	and    DWORD PTR fs:[eax],eax
	...
  40b6a1:	add    BYTE PTR [eax],al
  40b6a3:	add    BYTE PTR [esi-0x1eb0aeff],bh
  40b6a9:	push   ss
  40b6aa:	push   esi
  40b6ab:	dec    ebx
  40b6ac:	or     DWORD PTR [esi],ecx
  40b6ae:	jmp    0x6a667869
  40b6b3:	dec    eax
  40b6b4:	daa    
  40b6b5:	rcl    BYTE PTR [ebp+0x8a11cad],0x21
  40b6bc:	sahf   
  40b6bd:	add    DWORD PTR [ecx-0x4f],eax
  40b6c0:	mov    dl,0x16
  40b6c2:	mov    ecx,DWORD PTR es:[esi-0x5e288deb]
  40b6c9:	loope  0x40b672
  40b6cb:	add    eax,eax
  40b6cd:	aam    0xad
  40b6cf:	jmp    0x40b65c
  40b6d1:	or     DWORD PTR [ecx-0x1f],ebp
  40b6d4:	in     al,0x9a
  40b6d6:	xchg   DWORD PTR [ebx+0x3a7d2d5],ebp
  40b6dc:	jge    0x40b6ff
  40b6de:	xor    eax,0x3916ccb1
  40b6e3:	lods   al,BYTE PTR ds:[esi]
  40b6e4:	mov    cl,0xd2
  40b6e6:	daa    
  40b6e7:	add    al,0x14
  40b6e9:	and    DWORD PTR [ecx+0x3316b4b0],eax
  40b6ef:	or     eax,0xcec9c8b
  40b6f4:	jns    0x40b693
  40b6f6:	adc    bh,BYTE PTR [edx-0x70ffb05c]
  40b6fc:	imul   edx,DWORD PTR [esi],0x68
  40b6ff:	jmp    0x2c37:0x38ffc96c
  40b706:	mov    al,ds:0x9e
	...
  40b72f:	add    BYTE PTR [ebx],ch
  40b731:	mov    ecx,0x2648e967
  40b736:	mov    esi,0x40d22901
  40b73b:	jmp    0xf1b5ced8
  40b740:	xor    BYTE PTR [ecx+eax*8+0x76],ah
  40b744:	sub    esp,DWORD PTR [ecx]
  40b746:	(bad)  [ebp+0x2b]
  40b749:	push   ss
  40b74a:	jmp    0x40b734
  40b74c:	adc    dl,BYTE PTR [esi+0xfd5e93d]
  40b752:	inc    esi
  40b753:	push   ebp
  40b754:	pop    ds
  40b755:	push   esi
  40b756:	mov    ecx,0xff166b4e
  40b75b:	cmp    ebx,DWORD PTR [edx-0x344bf92f]
  40b761:	adc    eax,0x9c6b3575
  40b766:	pop    es
  40b767:	inc    ecx
  40b768:	cmc    
  40b769:	outs   dx,DWORD PTR ds:[esi]
  40b76a:	jmp    DWORD PTR [esi]
  40b76c:	or     esi,DWORD PTR [eax+ecx*8+0x5509442b]
  40b773:	bound  esp,QWORD PTR [edx+ecx*4]
  40b776:	les    ecx,FWORD PTR ds:0x60b9c2b
  40b77c:	mov    ebp,0x63c5e80d
  40b781:	push   ss
  40b782:	jmp    DWORD PTR [eax+0xd]
  40b785:	adc    bh,bh
  40b787:	je     0x40b7b5
  40b789:	push   ss
  40b78a:	jne    0x40b77d
  40b78c:	jo     0x40b80b
  40b78e:	xchg   esp,eax
  40b78f:	ficomp WORD PTR [edx+eax*4+0x4d]
  40b793:	in     eax,0x0
	...
  40b7b9:	add    BYTE PTR [eax],al
  40b7bb:	add    BYTE PTR [ecx+0x49],al
  40b7be:	je     0x40b7eb
  40b7c0:	enter  0xffcf,0xff
  40b7c4:	data16 sub dh,bh
  40b7c7:	jne    0x40b7a7
  40b7c9:	in     al,0x94
  40b7cb:	pushf  
  40b7cc:	(bad)  
  40b7ce:	dec    edi
  40b7cf:	call   DWORD PTR [edi-0x7]
  40b7d2:	(bad)  
  40b7d3:	jne    0x40b783
  40b7d5:	pop    esp
  40b7d6:	(bad)  
  40b7d7:	jne    0x40b853
  40b7d9:	loope  0x40b7a6
  40b7db:	xchg   esi,eax
  40b7dc:	(bad)  
  40b7de:	pop    ecx
  40b7df:	mov    ecx,DWORD PTR [edi-0x7]
  40b7e2:	cmp    BYTE PTR [ecx],0x72
  40b7e5:	jo     0x40b7f0
  40b7e7:	push   edx
  40b7e8:	mov    edx,0xddff9b55
  40b7ed:	and    DWORD PTR [edi+0x7d8a76eb],edi
  40b7f3:	adc    BYTE PTR [edx],dh
  40b7f5:	jge    0x40b7fe
  40b7f7:	mov    esp,edi
  40b7f9:	sbb    dh,bh
  40b7fb:	jne    0x40b79b
  40b7fd:	test   BYTE PTR [eax],al
  40b7ff:	mov    esp,DWORD PTR [eax-0x20]
  40b802:	add    DWORD PTR [ebx],ebp
  40b804:	jb     0x40b7cc
  40b806:	ror    DWORD PTR [edx+esi*1],0x52
  40b80a:	mov    ch,ah
  40b80c:	pop    ebp
  40b80d:	jb     0x40b81a
  40b80f:	call   edi
  40b811:	add    al,ch
  40b813:	mov    ecx,0xfffef484
  40b818:	xlat   BYTE PTR ds:[ebx]
  40b819:	add    al,0x50
  40b81b:	call   edi
  40b81d:	add    al,ch
  40b81f:	xor    DWORD PTR [eax],eax
	...
  40b845:	add    BYTE PTR [eax],al
  40b847:	add    BYTE PTR [ebp-0xc],dh
  40b84a:	dec    cl
  40b84c:	xor    BYTE PTR ds:0xd9595500,al
  40b852:	add    ah,0x22
  40b855:	pop    ebx
  40b856:	push   esi
  40b857:	push   ebx
  40b858:	popa   
  40b859:	push   0x7
  40b85b:	add    BYTE PTR [esi],ah
  40b85d:	pop    ss
  40b85e:	cmp    BYTE PTR [ebp-0x52],0x8
  40b862:	je     0x40b870
  40b864:	dec    ebx
  40b865:	lahf   
  40b866:	lahf   
  40b867:	cmovnp edi,DWORD PTR [esi+0x36268305]
  40b86e:	add    esi,DWORD PTR [ebp+0x52]
  40b871:	test   DWORD PTR [ebx+0x5b],0xc24cfbf4
  40b878:	cmp    esp,DWORD PTR [edx]
  40b87a:	mov    al,BYTE PTR [ebp+0x57]
  40b87d:	lahf   
  40b87e:	and    al,BYTE PTR [edi]
  40b880:	enter  0xff5,0x0
  40b884:	jmp    DWORD PTR ds:0x28f7c00a
  40b88a:	jmp    0x89c8:0xbdeb00bf
  40b891:	xor    al,BYTE PTR [ebx]
  40b893:	mov    ecx,DWORD PTR [esi]
  40b895:	ss and al,0x44
  40b899:	lahf   
  40b89a:	lahf   
  40b89b:	adc    ecx,DWORD PTR [ebx+0x36]
  40b89e:	pop    es
  40b89f:	or     ecx,DWORD PTR [ebx]
  40b8a1:	ds or  al,0x2b
  40b8a4:	or     edx,DWORD PTR [edi-0x42]
  40b8a7:	pop    ebp
  40b8a8:	add    ah,al
  40b8aa:	repnz inc DWORD PTR [eax]
	...
  40b8d1:	add    BYTE PTR [eax],al
  40b8d3:	add    BYTE PTR [ecx-0x19],dh
  40b8d6:	sbb    eax,0xc7a34f75
  40b8db:	mov    edi,0xb4364c8
  40b8e0:	or     al,0x5d
  40b8e2:	inc    ebx
  40b8e3:	call   0xff5f3fff
  40b8e8:	call   FWORD PTR [eax+0x7cc0c3c7]
  40b8ee:	inc    edi
  40b8ef:	mov    esi,0xffc4463e
  40b8f4:	mov    ds:0x4b000316,eax
  40b8f9:	pcmpgtd mm1,QWORD PTR [ebx+0x4d8a2a5e]
  40b900:	aas    
  40b901:	pcmpgtd mm1,QWORD PTR [ebp-0x4b26f6f2]
  40b908:	mov    ebp,0x3e1da89d
  40b90d:	dec    ebp
  40b90e:	rol    DWORD PTR [esi+eiz*8+0x13],0xce
  40b913:	sbb    eax,0x81d14d1e
  40b918:	rcl    BYTE PTR [ebx],0xbe
  40b91b:	sbb    eax,0xc766051e
  40b920:	int3   
  40b921:	xchg   DWORD PTR [esp+eax*2],esp
  40b924:	pusha  
  40b925:	adc    al,0x1c
  40b927:	inc    esp
  40b928:	jae    0x40b8aa
  40b92a:	sbb    BYTE PTR ds:0x482c8174,0x6f
  40b931:	and    DWORD PTR [eax+ecx*2],0x89789dd6
	...
  40b960:	fimul  WORD PTR [eax+eax*2-0xc]
  40b964:	push   esp
  40b965:	adc    ebp,ecx
  40b967:	adc    BYTE PTR [edi-0x742023ae],ah
  40b96d:	or     DWORD PTR [eax-0x16f6b4f7],esp
  40b973:	adc    bh,ch
  40b975:	jle    0x40b953
  40b977:	or     eax,eax
  40b979:	(bad)  
  40b97a:	fcom   QWORD PTR [eax]
  40b97c:	out    dx,eax
  40b97d:	test   BYTE PTR [ebx+eiz*1+0x43b4127b],ch
  40b984:	adc    al,0x9d
  40b986:	sub    al,0x2c
  40b988:	pushf  
  40b989:	ins    BYTE PTR es:[edi],dx
  40b98a:	cs sbb eax,0x2c2c9d04
  40b990:	cmp    DWORD PTR [esi+0x1e],ebp
  40b993:	sbb    eax,0x139c84f7
  40b998:	mov    esi,0x3b5b2094
  40b99d:	or     ecx,ebp
  40b99f:	add    ebx,eax
  40b9a1:	ins    DWORD PTR es:[edi],dx
  40b9a2:	ins    BYTE PTR es:[edi],dx
  40b9a3:	xchg   edi,eax
  40b9a4:	hlt    
  40b9a5:	push   eax
  40b9a6:	add    cl,ah
  40b9a8:	dec    eax
  40b9a9:	or     DWORD PTR [eax],eax
  40b9ab:	cli    
  40b9ac:	sub    al,0x9f
  40b9ae:	add    BYTE PTR [ebp+eax*4+0x4a],dh
  40b9b2:	push   eax
  40b9b3:	shl    DWORD PTR [edx-0x7b],1
  40b9b6:	add    cl,ch
  40b9b8:	ret    
  40b9b9:	pushf  
  40b9ba:	punpckldq mm0,mm5
  40b9bd:	test   al,0xd6
  40b9c0:	dec    ebx
  40b9c1:	(bad)  
  40b9c2:	(bad)  
  40b9c3:	xor    eax,0x0
	...
  40b9ec:	out    dx,al
  40b9ed:	pop    ds
  40b9ee:	pcmpgtb mm0,QWORD PTR [ebp-0x42e8afd6]
  40b9f5:	sub    bh,BYTE PTR [ebx+0x76]
  40b9f8:	dec    eax
  40b9f9:	or     DWORD PTR [ebx+0xac240a7],eax
  40b9ff:	xchg   esi,eax
  40ba00:	aad    0x25
  40ba02:	xorps  xmm1,XMMWORD PTR [esi+0x50818313]
  40ba09:	call   0xd974:0xde38d201
  40ba10:	sbb    DWORD PTR [ebx],esp
  40ba12:	push   0xffffffe9
  40ba14:	repnz adc DWORD PTR [ecx-0x17],ebp
  40ba18:	repnz adc DWORD PTR [ebp+0x5e],edx
  40ba1c:	fld    QWORD PTR [ecx]
  40ba1e:	push   0xffffffe9
  40ba20:	loop   0x40ba33
  40ba22:	out    0xf,eax
  40ba24:	fist   DWORD PTR [ecx]
  40ba26:	push   edx
  40ba28:	mov    BYTE PTR [ebp+0x29d89928],bl
  40ba2e:	aam    0x53
  40ba30:	das    
  40ba31:	adc    cl,BYTE PTR [ebx-0x603eef]
  40ba37:	xchg   edx,eax
  40ba38:	dec    eax
  40ba39:	mov    eax,0x9c57b752
  40ba3e:	jae    0x140598c
  40ba44:	in     eax,0x9d
  40ba46:	(bad)  
  40ba47:	push   edx
  40ba49:	add    al,al
  40ba4b:	jne    0x40ba27
  40ba4d:	pop    eax
  40ba4e:	out    0x9d,eax
	...
  40ba78:	js     0x40ba6f
  40ba7a:	(bad)  
  40ba7b:	sub    ebx,DWORD PTR [ecx-0x7f]
  40ba7e:	ret    
  40ba7f:	pop    ebx
  40ba80:	add    eax,0xb2c2c84f
  40ba85:	add    eax,0x89868b55
  40ba8a:	(bad)  
  40ba8b:	lock pop ebp
  40ba8d:	pop    edx
  40ba8e:	sub    bl,bl
  40ba90:	test   DWORD PTR [edi+0xb],esi
  40ba93:	call   FWORD PTR [edi+0x5]
  40ba96:	call   0xff2ea99c
  40ba9b:	push   eax
  40ba9c:	mov    ch,0x77
  40ba9e:	pop    es
  40ba9f:	call   0x3f51c0
  40baa4:	stc    
  40baa5:	hlt    
  40baa6:	push   edi
  40baa7:	add    ebx,edx
  40baa9:	add    eax,eax
  40baab:	je     0x40bada
  40baad:	add    BYTE PTR [ebp-0xc],0x42
  40bab1:	out    dx,al
  40bab2:	je     0x40bac0
  40bab4:	aad    0x77
  40bab6:	pop    es
  40bab7:	call   0x3faac5
  40babc:	stos   DWORD PTR es:[edi],eax
  40babd:	dec    edx
  40babe:	sti    
  40babf:	(bad)  
  40bac0:	out    dx,eax
  40bac1:	cld    
  40bac2:	dec    edi
  40bac3:	call   FWORD PTR [edi]
  40bac5:	or     edi,edi
  40bac7:	jne    0x40baf3
  40bac9:	in     eax,0x98
  40bacb:	std    
  40bacc:	xchg   ebp,eax
  40bacd:	hlt    
  40bace:	mov    BYTE PTR [ebp-0x76],al
  40bad1:	hlt    
  40bad2:	je     0x40bac4
  40bad4:	push   ebp
  40bad5:	jp     0x40bace
  40bad7:	dec    edi
  40bad9:	add    bh,bh
  40badb:	jne    0x40badd
	...
  40bb01:	add    BYTE PTR [eax],al
  40bb03:	add    BYTE PTR [esi],dh
  40bb05:	fst    QWORD PTR [eax]
  40bb07:	(bad)  
  40bb08:	and    eax,0x55d88af4
  40bb0d:	jp     0x40bb0a
  40bb0f:	call   0xffbe015f
  40bb14:	in     al,0xff
  40bb16:	nop
  40bb17:	div    ebx
  40bb19:	ds jge 0x40bb1b
  40bb1c:	aam    0x7c
  40bb1e:	add    edx,DWORD PTR [edi-0x34]
  40bb21:	lea    ecx,[edx]
  40bb23:	call   0xff5b6d1b
  40bb28:	shl    BYTE PTR [ebx-0x42],1
  40bb2b:	pop    esi
  40bb2c:	and    BYTE PTR [ebx+ecx*1+0x0],0x16
  40bb31:	stos   DWORD PTR es:[edi],eax
  40bb32:	and    DWORD PTR es:[esi],0x2e
  40bb36:	add    DWORD PTR [edx+0x6a],esi
  40bb39:	inc    edi
  40bb3a:	nop
  40bb3b:	sete   ch
  40bb3e:	or     ebp,eax
  40bb40:	retf   0x19ae
  40bb43:	inc    DWORD PTR [ebp+edx*8+0x19f6fef3]
  40bb4a:	sub    ebp,DWORD PTR [edi-0xe5908a]
  40bb50:	not    BYTE PTR [ecx]
  40bb52:	sbb    dh,BYTE PTR [ebp+0x53]
  40bb55:	mov    bl,BYTE PTR [edi-0x3]
  40bb58:	pop    esp
  40bb59:	xchg   DWORD PTR [edx],ebx
  40bb5b:	jne    0x40bb98
  40bb5d:	(bad)  
  40bb5e:	pop    DWORD PTR [edi]
  40bb60:	arpl   sp,bp
  40bb62:	sbb    bh,bh
  40bb64:	inc    esp
  40bb65:	stos   DWORD PTR es:[edi],eax
  40bb66:	scas   eax,DWORD PTR es:[edi]
  40bb67:	adc    eax,DWORD PTR [eax]
	...
  40bb8d:	add    BYTE PTR [eax],al
  40bb8f:	add    dl,dl
  40bb91:	and    ebx,DWORD PTR [edx]
  40bb93:	jne    0x40bbf0
  40bb95:	scas   eax,DWORD PTR es:[edi]
  40bb96:	pop    DWORD PTR [edi]
  40bb98:	and    ebp,DWORD PTR [ecx-0x5cdb00e9]
  40bb9e:	xchg   edi,eax
  40bb9f:	or     ecx,DWORD PTR [eax+0x50]
  40bba2:	icebp  
  40bba3:	(bad)  
  40bba4:	sahf   
  40bba5:	xor    bl,BYTE PTR [edx]
  40bba7:	jne    0x40bbec
  40bba9:	retf   0xfc9a
  40bbac:	add    al,0xdf
  40bbae:	sbb    DWORD PTR [ebp+0x5b],esi
  40bbb1:	or     DWORD PTR [esi],esp
  40bbb3:	nop
  40bbb4:	dec    esp
  40bbb5:	and    DWORD PTR [eax+ebx*1-0x6fe9f014],ecx
  40bbbc:	push   esp
  40bbbd:	mov    ds:0x1561af0,eax
  40bbc2:	adc    DWORD PTR [esi-0x41],ebp
  40bbc5:	paddd  mm3,QWORD PTR [ecx]
  40bbc8:	push   esi
  40bbc9:	stc    
  40bbca:	cmc    
  40bbcb:	(bad)  
  40bbcc:	dec    esp
  40bbcd:	and    ebp,ecx
  40bbcf:	outs   dx,DWORD PTR ds:[esi]
  40bbd0:	mov    esp,0x5b46b00f
  40bbd5:	or     DWORD PTR [ecx*4+0x85c0f9f],esi
  40bbdc:	xor    DWORD PTR [edx],ecx
  40bbde:	into   
  40bbdf:	pop    DWORD PTR [ecx+eiz*1+0x75]
  40bbe3:	jo     0x40bb79
  40bbe5:	movsx  ecx,BYTE PTR [edi+0xc3c1040]
  40bbec:	jae    0x40bc15
  40bbee:	scas   eax,DWORD PTR es:[edi]
  40bbef:	sbb    DWORD PTR [ebx+eax*4+0x3c],edi
  40bbf3:	hlt    
	...
  40bc1c:	ret    
  40bc1d:	or     bl,BYTE PTR [esi+0x1c10408f]
  40bc23:	or     al,0x73
  40bc25:	aaa    
  40bc26:	(bad)  
  40bc27:	sbb    DWORD PTR [ebx+eax*4+0x1c],ebx
  40bc2b:	lock ret 
  40bc2d:	or     bh,BYTE PTR [esi-0x71]
  40bc30:	inc    eax
  40bc31:	adc    ah,bh
  40bc33:	or     esi,DWORD PTR [ebx]
  40bc35:	inc    edi
  40bc36:	outs   dx,DWORD PTR ds:[esi]
  40bc37:	sbb    DWORD PTR [ebx+eax*4],edi
  40bc3a:	mov    esp,0x300bc3fb
  40bc3f:	inc    esi
  40bc40:	push   edi
  40bc41:	or     DWORD PTR [esp+ecx*4+0x28258b37],edi
  40bc48:	jne    0x40bc00
  40bc4a:	inc    ebp
  40bc4b:	(bad)  
  40bc4c:	cmp    BYTE PTR [ebx+0x19618e7],ah
  40bc52:	add    BYTE PTR [ecx+0xe],al
  40bc55:	jnp    0x40bc56
  40bc57:	bound  edx,QWORD PTR cs:[ebx+edx*1-0x17f93bda]
  40bc5f:	push   ebp
  40bc60:	jbe    0x40bc70
  40bc62:	jmp    DWORD PTR [edx+0x3f]
  40bc65:	and    BYTE PTR [ebx],bh
  40bc67:	call   0xaccbc5b4
  40bc6c:	in     al,0x8b
  40bc6e:	cmp    cl,ch
  40bc70:	mov    ebp,0x49bfe905
  40bc75:	or     DWORD PTR [eax],eax
  40bc77:	es cld 
  40bc79:	adc    al,BYTE PTR [eax]
  40bc7b:	jmp    0x24cdc5c8
	...
  40bca8:	push   ebx
  40bca9:	mov    ecx,0xf9b5cfe
  40bcae:	jne    0x40bca9
  40bcb0:	inc    ebx
  40bcb1:	xchg   esp,eax
  40bcb2:	pop    es
  40bcb3:	sar    DWORD PTR [esi],1
  40bcb5:	ud0    edi,DWORD PTR [esi+0x348311bf]
  40bcbc:	arpl   WORD PTR [ecx],cx
  40bcbe:	je     0x40bcca
  40bcc0:	scas   eax,DWORD PTR es:[edi]
  40bcc1:	idiv   BYTE PTR [ebx]
  40bcc3:	sub    BYTE PTR [edi+0xe],cl
  40bcc6:	jne    0x40bc65
  40bcc8:	and    BYTE PTR [ebx+0x248e96b],al
  40bcce:	rcl    BYTE PTR [esp+eax*2],0xa1
  40bcd2:	pop    ds
  40bcd3:	lds    ecx,FWORD PTR [ecx+0x34f4fe0e]
  40bcd9:	and    DWORD PTR [ecx+0x2],edi
  40bcdc:	dec    edi
  40bcdd:	or     DWORD PTR [ecx+0x7227324],ecx
  40bce3:	cs cmc 
  40bce5:	and    DWORD PTR [eax],eax
  40bce7:	jmp    0xd4c3c634
  40bcec:	ins    BYTE PTR es:[edi],dx
  40bced:	or     DWORD PTR [ecx+esi*8-0x10],esi
  40bcf1:	or     BYTE PTR [eax],al
  40bcf3:	add    BYTE PTR [ebp-0x50],bh
  40bcf6:	(bad)  
  40bcf7:	jne    0x40bd17
  40bcf9:	loop   0x40bd41
  40bcfb:	xchg   ebp,eax
  40bcfc:	cmp    eax,0x2e75fef1
  40bd01:	icebp  
  40bd02:	je     0x40bd10
  40bd04:	pop    edx
  40bd05:	nop
  40bd06:	xchg   esp,eax
  40bd07:	dec    DWORD PTR [ebp-0x1d]
  40bd0a:	mov    al,BYTE PTR [eax]
	...
  40bd34:	repnz or DWORD PTR [ebx+0x3884d645],ecx
  40bd3b:	add    BYTE PTR [edi+0xf],dl
  40bd3e:	call   0x4a9fc9
  40bd43:	(bad)  
  40bd44:	div    ecx
  40bd46:	(bad)  
  40bd47:	push   DWORD PTR [edx-0x69ba38f7]
  40bd4d:	add    al,0x0
  40bd4f:	add    BYTE PTR [edx-0x4d0fbb32],ah
  40bd55:	or     DWORD PTR [eax],eax
  40bd57:	add    bh,bh
  40bd59:	inc    edi
  40bd5a:	out    dx,eax
  40bd5b:	push   eax
  40bd5c:	pop    ds
  40bd5d:	dec    eax
  40bd5e:	repz push eax
  40bd60:	pop    ds
  40bd61:	dec    eax
  40bd62:	not    DWORD PTR [eax-0x43]
  40bd65:	ja     0x40bd7a
  40bd67:	push   DWORD PTR [edi]
  40bd69:	std    
  40bd6a:	out    0xe1,eax
  40bd6c:	lods   al,BYTE PTR ds:[esi]
  40bd6d:	cmc    
  40bd6e:	inc    BYTE PTR [ebx+0x73ffe14f]
  40bd74:	or     DWORD PTR [edx+0x7d72f87d],0xf94f832c
  40bd7e:	push   DWORD PTR [esp+eiz*2-0x76]
  40bd82:	jge    0x40bd74
  40bd84:	xor    bh,BYTE PTR [ebp+0x20]
  40bd87:	push   DWORD PTR [edi]
  40bd89:	icebp  
  40bd8a:	(bad)  
  40bd8b:	jne    0x40bdcb
  40bd8d:	loope  0x40bdcb
  40bd8f:	xchg   ebp,eax
  40bd90:	(bad)  
  40bd91:	hlt    
  40bd92:	(bad)  
  40bd93:	jne    0x40bde0
  40bd95:	scas   al,BYTE PTR es:[edi]
  40bd96:	push   ss
  40bd97:	jne    0x40bd99
	...
  40bdbd:	add    BYTE PTR [eax],al
  40bdbf:	add    BYTE PTR [edi-0x36],cl
  40bdc2:	rcl    DWORD PTR [esp+edx*1+0x1b7516c4],1
  40bdc9:	int3   
  40bdca:	nop
  40bdcb:	or     esi,ebx
  40bdcd:	sti    
  40bdce:	jo     0x40bdcf
  40bdd0:	cld    
  40bdd1:	fist   DWORD PTR [eax+0x7b2ee3f7]
  40bdd7:	(bad)  
  40bdd8:	in     al,dx
  40bdd9:	jmp    0x40bd6b
  40bddb:	repz repz inc esi
  40bdde:	jnp    0x40bddf
  40bde0:	fdiv   st(3),st
  40bde2:	nop
  40bde3:	out    dx,eax
  40bde4:	jecxz  0x40be24
  40bde6:	jnp    0x40bde7
  40bde8:	int3   
  40bde9:	pop    ebx
  40bdea:	or     bh,bh
  40bdec:	push   esp
  40bded:	popf   
  40bdee:	test   al,0xfe
  40bdf0:	mov    esp,0xa77d821b
  40bdf5:	and    cl,BYTE PTR [edi+0x1622211d]
  40bdfb:	jne    0x40be54
  40bdfd:	dec    edx
  40bdfe:	outs   dx,DWORD PTR ds:[esi]
  40bdff:	xchg   esp,eax
  40be00:	pushf  
  40be01:	cmp    ebp,DWORD PTR [ecx+0x7cd95ff]
  40be07:	call   0xff5674cd
  40be0c:	icebp  
  40be0d:	and    DWORD PTR [esi],edx
  40be0f:	jne    0x40be60
  40be11:	dec    edx
  40be12:	adc    DWORD PTR [esp+esi*2+0x6f751663],0x7a
  40be1a:	es xchg edi,eax
  40be1c:	fs jae 0x40bde4
  40be1f:	or     dl,BYTE PTR [ebp+0x2b]
  40be22:	cmp    BYTE PTR [ebp+0x0],0x0
	...
  40be49:	add    BYTE PTR [eax],al
  40be4b:	add    BYTE PTR [ebp-0x7d],dl
  40be4e:	push   ss
  40be4f:	pop    edi
  40be50:	in     eax,dx
  40be51:	pop    eax
  40be52:	inc    ecx
  40be53:	adc    BYTE PTR [ebx-0x13],cl
  40be56:	mov    ch,ah
  40be58:	enter  0x1f65,0x56
  40be5c:	xor    al,0x9
  40be5e:	fmul   QWORD PTR [ebx]
  40be60:	and    esi,DWORD PTR [esi+ebp*2+0x16]
  40be64:	and    al,0x82
  40be66:	lods   al,BYTE PTR ds:[esi]
  40be67:	bswap  eax
  40be69:	lea    edx,[ebx+esi*8-0x67]
  40be6d:	inc    DWORD PTR [eax-0x16f6b4fc]
  40be73:	mov    ch,0x13
  40be75:	inc    edi
  40be76:	loope  0x40be7b
  40be78:	cld    
  40be79:	xchg   ebp,eax
  40be7a:	loopne 0x40bea7
  40be7c:	(bad)  
  40be7d:	jns    0x40bea5
  40be7f:	push   ss
  40be80:	add    al,0xc6
  40be82:	and    BYTE PTR [ebx+ecx*2],al
  40be85:	or     ecx,ebp
  40be87:	mov    BYTE PTR [esi+0x5e16b911],al
  40be8d:	add    DWORD PTR [ecx],edx
  40be8f:	fidivr WORD PTR [edx+0xe8bfe0b]
  40be95:	or     eax,0x8b4986a
  40be9a:	jne    0x40bea3
  40be9c:	enter  0xe48d,0x2
  40bea0:	cmp    DWORD PTR [ebx],eax
  40bea2:	push   0xffffff97
  40bea4:	mov    al,ds:0xe30a5f02
  40bea9:	or     ecx,ebp
  40beab:	add    ecx,DWORD PTR [ebx-0x55]
  40beae:	scas   eax,DWORD PTR es:[edi]
  40beaf:	inc    edx
	...
  40bed8:	inc    ebx
  40bed9:	or     DWORD PTR [edi+edi*4+0x7c],ebp
  40bedd:	mov    eax,0x21448fb5
  40bee2:	lods   eax,DWORD PTR ds:[esi]
  40bee3:	jae    0x40bf59
  40bee5:	or     ebp,DWORD PTR [edx-0x69]
  40bee8:	je     0x40bef2
  40beea:	adc    eax,0x1d495000
  40beef:	or     ah,BYTE PTR [ebx+0x4b03e909]
  40bef5:	stos   DWORD PTR es:[edi],eax
  40bef6:	scas   eax,DWORD PTR es:[edi]
  40bef7:	inc    edx
  40bef8:	inc    ebx
  40bef9:	or     DWORD PTR [edx-0x69],ebp
  40befc:	inc    eax
  40befd:	add    eax,0x7e37fb00
  40bf02:	inc    ebp
  40bf03:	jno    0x40bf04
  40bf05:	mov    al,ds:0x2bc6617
  40bf0a:	call   0xff4b59d0
  40bf0f:	fcom   QWORD PTR fs:[edx]
  40bf12:	push   eax
  40bf13:	dec    esi
  40bf14:	les    eax,FWORD PTR [edx]
  40bf16:	call   0xff4b574c
  40bf1b:	jo     0x40bee1
  40bf1d:	es jmp 0x40bef4
  40bf20:	(bad)
  40bf23:	cdq    
  40bf24:	pop    edi
  40bf25:	xchg   esp,eax
  40bf26:	pop    es
  40bf27:	adc    DWORD PTR [esi+0x78],edi
  40bf2a:	call   FWORD PTR [esi]
  40bf2c:	rol    ah,1
  40bf2e:	jecxz  0x40bf94
  40bf30:	pushf  
  40bf31:	adc    dl,BYTE PTR [eax-0x7d]
  40bf34:	aam    0xb
  40bf36:	jne    0x40bf29
  40bf38:	and    bh,bl
  40bf3a:	xchg   ecx,eax
  40bf3b:	inc    BYTE PTR [eax]
	...
  40bf61:	add    BYTE PTR [eax],al
  40bf63:	add    BYTE PTR [edi+0x7c],bl
  40bf66:	inc    ebp
  40bf67:	icebp  
  40bf68:	clc    
  40bf69:	or     esi,DWORD PTR [ebp-0x1f]
  40bf6c:	pusha  
  40bf6d:	ss cli 
  40bf6f:	out    0x57,al
  40bf71:	xchg   BYTE PTR [ebp-0x3b],bh
  40bf74:	dec    ecx
  40bf75:	xchg   esp,eax
  40bf76:	sbb    eax,0x5012dd64
  40bf7b:	into   
  40bf7c:	lds    ecx,FWORD PTR [esi]
  40bf7e:	(bad)  
  40bf7f:	cmp    al,0x43
  40bf81:	or     dh,BYTE PTR [ebp-0xf]
  40bf84:	xor    BYTE PTR [ebx-0x3],bl
  40bf87:	mov    dh,0x57
  40bf89:	jl     0x40bfd0
  40bf8b:	mov    cl,0xb8
  40bf8d:	or     esi,DWORD PTR [ebp-0xf]
  40bf90:	and    BYTE PTR [edx-0x6],bl
  40bf93:	sahf   
  40bf94:	aas    
  40bf95:	xchg   BYTE PTR [ebp-0x6f],bh
  40bf98:	dec    eax
  40bf99:	xchg   esp,eax
  40bf9a:	or     DWORD PTR [ecx+0x48],edx
  40bf9d:	or     DWORD PTR [eax],eax
  40bf9f:	add    BYTE PTR [edx+0x54],ah
  40bfa2:	enter  0x3ac2,0x6
  40bfa6:	lea    eax,[ebp-0x46]
  40bfa9:	push   esi
  40bfaa:	(bad)  
  40bfab:	jne    0x40bf53
  40bfad:	cmc    
  40bfae:	je     0x40bfbc
  40bfb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfb1:	jnp    0x40bfba
  40bfb3:	call   0x3fb36a
  40bfb8:	mov    cl,0x73
  40bfba:	test   DWORD PTR [eax],0xb7ffff
  40bfc0:	and    al,BYTE PTR [esi]
  40bfc2:	add    BYTE PTR [esi+0x3b],bl
  40bfc5:	enter  0x7,0x0
	...
  40bfed:	add    BYTE PTR [eax],al
  40bfef:	add    BYTE PTR [edi+0x4b],ah
  40bff2:	not    DWORD PTR [eax+0x25]
  40bff5:	jnp    0x40bffe
  40bff7:	call   0x3f56e6
  40bffc:	pop    ecx
  40bffd:	imul   al
  40bfff:	sti    
  40c000:	repnz add eax,0xfdbfff00
  40c006:	out    0xe7,eax
  40c008:	jo     0x40bfff
  40c00a:	(bad)  
  40c00b:	cmp    ebp,edi
  40c00d:	stc    
  40c00e:	je     0x40c015
  40c010:	dec    ebx
  40c011:	std    
  40c012:	(bad)  
  40c013:	jmp    DWORD PTR [edx-0x63038278]
  40c019:	jae    0x40c03e
  40c01b:	lea    ebp,[edi-0x3]
  40c01e:	dec    edi
  40c01f:	(bad)  
  40c020:	dec    DWORD PTR [edi+eiz*8]
  40c023:	or     eax,0x8dfef613
  40c028:	pop    edi
  40c029:	std    
  40c02a:	dec    edi
  40c02b:	(bad)  
  40c02c:	aas    
  40c02d:	or     eax,0xf5b83ae7
  40c032:	dec    BYTE PTR [ebp-0xb002d1]
  40c038:	dec    edi
  40c039:	or     eax,0xf5a82ee7
  40c03e:	dec    BYTE PTR [ebp+0x500bdd4b]
  40c044:	push   esp
  40c045:	hlt    
  40c046:	sti    
  40c047:	out    0x78,eax
  40c049:	xchg   BYTE PTR [ebx],dl
  40c04b:	call   edx
  40c04d:	sub    eax,0x7a868d14
  40c052:	mov    ah,0xfe
	...
  40c07c:	mov    esi,0x30c41aea
  40c081:	jo     0x40c096
  40c083:	mov    DWORD PTR [esi+0x23458156],ecx
  40c089:	ret    
  40c08a:	adc    DWORD PTR [ebp+0x43],esi
  40c08d:	dec    edx
  40c08e:	pop    ecx
  40c08f:	sti    
  40c090:	or     al,0x50
  40c092:	jge    0x40c0d9
  40c094:	repz jae 0x40c028
  40c097:	out    dx,eax
  40c098:	dec    ebx
  40c099:	(bad)  
  40c09a:	xchg   ebp,eax
  40c09b:	xor    BYTE PTR [esi+0x46],0x4
  40c09f:	je     0x40c0ff
  40c0a1:	jae    0x40c034
  40c0a3:	out    0x4b,eax
  40c0a5:	sahf   
  40c0a6:	test   eax,0x41a5e82
  40c0ab:	je     0x40c117
  40c0ad:	mov    bl,bl
  40c0af:	cmp    ecx,DWORD PTR [edx-0x448aee0e]
  40c0b5:	sbb    cl,BYTE PTR [edi+0x68]
  40c0b8:	dec    ebx
  40c0b9:	repnz std 
  40c0bb:	mov    edi,0x179ad83e
  40c0c0:	outs   dx,DWORD PTR ds:[esi]
  40c0c1:	xor    DWORD PTR [edi+edi*8],eax
  40c0c4:	push   ds
  40c0c5:	loop   0x40c0e1
  40c0c7:	stos   BYTE PTR es:[edi],al
  40c0c8:	xor    esi,edx
  40c0ca:	add    cl,BYTE PTR [ebx]
  40c0cc:	mov    ebx,DWORD PTR [ebp+0x1]
  40c0cf:	push   0xffc50e6b
  40c0d4:	test   DWORD PTR ds:0x4ae2e814,edi
  40c0da:	add    al,0x0
  40c0dc:	inc    eax
  40c0dd:	mov    dl,0x96
  40c0df:	sub    eax,0x0
	...
  40c108:	jecxz  0x40c112
  40c10a:	jmp    0x9e083512
  40c10f:	cwde   
  40c110:	push   eax
  40c111:	icebp  
  40c112:	sbb    esi,DWORD PTR [esi+0x54]
  40c115:	or     BYTE PTR [esi-0x3f7a368],cl
  40c11b:	jmp    FWORD PTR [edx*8+0x83c125a]
  40c122:	cld    
  40c123:	pop    ds
  40c124:	xor    al,0x7e
  40c126:	fstp   QWORD PTR [ebx]
  40c128:	or     bl,BYTE PTR [ebx+0x7e241265]
  40c12e:	push   ecx
  40c12f:	adc    dl,BYTE PTR [esi-0x46a6beeb]
  40c135:	pop    es
  40c136:	dec    esi
  40c137:	adc    dl,BYTE PTR [esi-0x21b9af07]
  40c13d:	pop    es
  40c13e:	adc    dh,BYTE PTR ds:[esi-0xb]
  40c142:	inc    eax
  40c143:	dec    esi
  40c144:	fiadd  WORD PTR [edi]
  40c146:	adc    dh,BYTE PTR cs:[esi-0xf]
  40c14a:	adc    BYTE PTR [esi-0x42],dl
  40c14d:	pop    es
  40c14e:	push   ds
  40c14f:	ror    ecx,0x85
  40c152:	adc    DWORD PTR [ebx],eax
  40c154:	pop    edi
  40c155:	adc    edx,esp
  40c157:	sbb    DWORD PTR [esi+ecx*4],edi
  40c15a:	std    
  40c15b:	adc    ah,al
  40c15d:	pop    es
  40c15e:	jb     0x40c128
  40c160:	mov    ah,0x66
  40c162:	and    BYTE PTR [ebp+0x43],al
  40c165:	or     DWORD PTR [esi+edi*2+0x10ac8b9f],edx
	...
  40c194:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c195:	jge    0x40c184
  40c197:	sbb    edx,DWORD PTR [eax]
  40c199:	rcl    ebp,0x11
  40c19c:	inc    eax
  40c19d:	leave  
  40c19e:	push   ebx
  40c19f:	sar    DWORD PTR [edi+0x6cb4c54d],1
  40c1a5:	fldcw  WORD PTR [ecx+edx*1+0x7c]
  40c1a9:	pop    es
  40c1aa:	add    BYTE PTR [ebx+ebx*2],bh
  40c1ad:	or     BYTE PTR [ebp-0x23],dh
  40c1b0:	push   eax
  40c1b1:	ror    BYTE PTR [ebp-0x3febc55a],0x15
  40c1b8:	pop    edx
  40c1b9:	push   es
  40c1ba:	jne    0x40c19d
  40c1bc:	cmp    edi,DWORD PTR [esi-0x4]
  40c1bf:	add    edx,0x4686ff05
  40c1c5:	(bad)  
  40c1c6:	je     0x40c1a1
  40c1c8:	loopne 0x40c1d0
  40c1ca:	jbe    0xddb5c869
  40c1d0:	pop    ebx
  40c1d1:	jl     0x40c1db
  40c1d3:	push   ecx
  40c1d4:	test   eax,0x3a5efebe
  40c1d9:	jl     0x40c1d7
  40c1db:	inc    ecx
  40c1dc:	xchg   DWORD PTR [ebp-0x34afb102],edx
  40c1e2:	pop    es
  40c1e3:	jmp    0x692c55a5
  40c1e8:	xchg   ebx,eax
  40c1e9:	mov    ebp,0xce5a36fd
  40c1ee:	test   BYTE PTR [ecx+0x59],dh
  40c1f1:	push   es
  40c1f2:	(bad)  
  40c1f3:	jmp    0x7240cb40
	...
  40c220:	add    al,0x13
  40c222:	or     ebp,DWORD PTR [ecx]
  40c224:	mov    bl,0xd
  40c226:	adc    cl,0x48
  40c229:	jl     0x40c230
  40c22b:	adc    al,bh
  40c22d:	or     DWORD PTR [eax],eax
  40c22f:	jmp    0x14d3e8f
  40c234:	dec    ebx
  40c235:	test   eax,0xc6afeefe
  40c23a:	je     0x40c232
  40c23c:	shr    BYTE PTR [edx+0x647282b],0x75
  40c243:	in     eax,0x30
  40c245:	mov    al,0x97
  40c247:	into   
  40c248:	cmp    esi,edx
  40c24a:	or     al,0x0
  40c24c:	sbb    ah,BYTE PTR [edx+0x2c]
  40c24f:	inc    ecx
  40c250:	jb     0x40c26b
  40c252:	jne    0x40c260
  40c254:	mov    dh,BYTE PTR [eax+ebx*4-0x1]
  40c258:	popf   
  40c259:	add    DWORD PTR [ebp-0xe65348],0x68
  40c260:	jl     0x40c26d
  40c262:	add    BYTE PTR [eax],al
  40c264:	out    dx,eax
  40c265:	mov    es,ecx
  40c267:	(bad)  
  40c268:	mov    ebp,0x20e85019
  40c26d:	jg     0x40c26e
  40c26f:	jmp    FWORD PTR [edi-0x42013e71]
  40c275:	sbb    DWORD PTR [eax-0x1],edx
  40c278:	ja     0x40c2cc
  40c27a:	(bad)  
  40c27b:	jmp    FWORD PTR [ebp+0x32664e22]
  40c281:	or     cl,BYTE PTR [ecx+0x85]
	...
  40c2ab:	add    BYTE PTR [esi-0x1d0000e9],bh
  40c2b1:	or     BYTE PTR [ebx+esi*8-0x72fff60e],al
  40c2b8:	xchg   edi,eax
  40c2b9:	dec    esp
  40c2ba:	(bad)  
  40c2bb:	(bad)  
  40c2bc:	cmp    eax,0xe2100221
  40c2c1:	or     DWORD PTR [eax],eax
  40c2c3:	je     0x40c274
  40c2c5:	xchg   BYTE PTR [edx+0x2c],al
  40c2c8:	mov    ds:0xa32c9da1,al
  40c2cd:	or     eax,ebp
  40c2cf:	sub    eax,esp
  40c2d1:	or     DWORD PTR [eax],eax
  40c2d3:	or     esi,DWORD PTR [edx-0x61]
  40c2d6:	add    ebp,ecx
  40c2d8:	sbb    ecx,DWORD PTR [edx]
  40c2da:	add    BYTE PTR [eax],al
  40c2dc:	das    
  40c2dd:	jg     0x40c2a1
  40c2df:	(bad)  
  40c2e0:	popf   
  40c2e1:	adc    eax,0xbd3e428d
  40c2e6:	mov    ax,ds:0xe7fecc4e
  40c2ec:	dec    ebx
  40c2ed:	out    dx,al
  40c2ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2ef:	dec    DWORD PTR [edx+ebp*8-0x26b18abe]
  40c2f6:	jg     0x40c2f8
  40c2f8:	dec    ebx
  40c2f9:	lock or eax,0x9fc84775
  40c2ff:	sahf   
  40c300:	ins    BYTE PTR es:[edi],dx
  40c301:	mov    dh,0xfa
  40c303:	mov    edi,0xb29afede
  40c308:	xor    esi,DWORD PTR [ecx]
  40c30a:	add    al,0xff
  40c30c:	fsubp  st(3),st
  40c30e:	sbb    cl,BYTE PTR [ecx]
	...
  40c338:	mov    bl,0x96
  40c33a:	push   cs
  40c33b:	jmp    0x40c38e
  40c33d:	sbb    BYTE PTR [edi+edi*8],al
  40c340:	mov    dh,0xf6
  40c342:	sbb    bh,ch
  40c344:	fdivr  QWORD PTR [ebx+0xf]
  40c347:	(bad)  
  40c348:	(bad)  
  40c349:	mov    al,0xd
  40c34b:	jmp    DWORD PTR [esi+edi*2]
  40c34e:	mov    dl,0x2b
  40c350:	jns    0x40c314
  40c352:	sbb    al,BYTE PTR [ecx-0x4d]
  40c355:	pop    ebx
  40c356:	(bad)  
  40c358:	or     al,0xde
  40c35a:	repnz dec edi
  40c35c:	add    al,0xc6
  40c35e:	cli    
  40c35f:	out    0x1,eax
  40c361:	inc    ebp
  40c362:	ud0    esp,ebx
  40c365:	(bad)  
  40c366:	jbe    0x40c367
  40c368:	in     al,dx
  40c369:	inc    edi
  40c36a:	ret    
  40c36b:	mov    WORD PTR [ecx-0x687a8422],cs
  40c371:	and    al,0xf
  40c373:	call   esp
  40c375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c376:	repnz (bad) 
  40c378:	xchg   esi,eax
  40c379:	pop    esi
  40c37a:	push   cs
  40c37b:	inc    esp
  40c37d:	sbb    cl,BYTE PTR [edi+0x66]
  40c380:	dec    ebx
  40c381:	repnz stc 
  40c383:	mov    edi,0xb29aca3f
  40c388:	arpl   WORD PTR [ecx+0x91eff02],si
  40c38e:	cmc    
  40c38f:	sbb    ebx,edx
  40c391:	pushf  
  40c392:	fisttp QWORD PTR [esi]
  40c394:	xchg   esp,eax
  40c395:	mov    esi,0x48c0d9c
  40c39a:	cmp    DWORD PTR [eax+eax*1],ebx
	...
  40c3c1:	add    BYTE PTR [eax],al
  40c3c3:	add    BYTE PTR [edx+0x1b0ec59c],al
  40c3c9:	pop    ecx
  40c3ca:	mov    esi,0x48f14c98
  40c3cf:	push   cs
  40c3d0:	ins    BYTE PTR es:[edi],dx
  40c3d1:	add    al,0xc1
  40c3d3:	push   ss
  40c3d4:	mov    eax,0xc680a604
  40c3d9:	(bad)  
  40c3da:	sahf   
  40c3db:	push   cs
  40c3dc:	push   esp
  40c3dd:	pop    ecx
  40c3de:	xchg   esi,eax
  40c3df:	pop    eax
  40c3e0:	pop    DWORD PTR [ebx]
  40c3e2:	mov    cs,WORD PTR [esi]
  40c3e4:	xor    esi,DWORD PTR [esi+0xc]
  40c3e7:	add    al,0x4b
  40c3e9:	mov    gs,WORD PTR [eax+0x7620cffe]
  40c3ef:	push   cs
  40c3f0:	sub    al,0x4
  40c3f2:	xor    al,0x4f
  40c3f4:	and    eax,0xab1b6604
  40c3f9:	outs   dx,BYTE PTR ds:[esi]
  40c3fa:	jmp    0x90fed802
  40c3ff:	or     eax,0x4641040c
  40c404:	fadd   DWORD PTR [ebx]
  40c406:	inc    esi
  40c407:	cmp    al,0x9
  40c409:	adc    eax,0xf4c1b8e9
  40c40e:	addr16 inc edi
  40c410:	mov    ebx,0xc0e2e02
  40c415:	mov    fs,WORD PTR [eax+0xd]
  40c418:	fadd   QWORD PTR [ebx]
  40c41a:	jmp    0x624a0f22
  40c41f:	enter  0x1040,0x29
  40c423:	xchg   edi,eax
  40c424:	dec    edi
  40c425:	mov    eax,eax
  40c427:	add    eax,DWORD PTR [eax]
	...
  40c44d:	add    BYTE PTR [eax],al
  40c44f:	add    BYTE PTR [esi],dh
  40c451:	push   cs
  40c452:	adc    ah,bh
  40c454:	dec    ebx
  40c455:	or     DWORD PTR [eax],eax
  40c457:	jmp    0xa86c6c2c
  40c45c:	dec    eax
  40c45d:	add    al,0x75
  40c45f:	cmc    
  40c460:	inc    eax
  40c461:	cmp    dl,BYTE PTR [edi-0x7b6db922]
  40c467:	xchg   ecx,eax
  40c468:	cmp    eax,0x9541ff04
  40c46d:	or     BYTE PTR [eax],al
  40c46f:	jmp    0xc0025271
  40c474:	inc    esi
  40c475:	add    al,0x50
  40c477:	rcl    DWORD PTR [eax],0x98
  40c47a:	(bad)  
  40c47b:	scas   al,BYTE PTR es:[edi]
  40c47c:	in     al,0x8d
  40c47e:	shl    DWORD PTR [edi-0x61affbb2],0xfc
  40c485:	sar    ch,0x96
  40c488:	ds icebp 
  40c48a:	in     al,0x5
  40c48c:	dec    edi
  40c48d:	or     DWORD PTR [ecx-0xfc6494],ecx
  40c493:	jle    0x40c4a4
  40c495:	adc    al,0x84
  40c497:	scas   eax,DWORD PTR es:[edi]
  40c498:	inc    edi
  40c499:	or     DWORD PTR [eax],eax
  40c49b:	pop    esp
  40c49c:	pushf  
  40c49d:	(bad)  
  40c49e:	std    
  40c49f:	dec    si
  40c4a1:	cli    
  40c4a2:	add    ecx,edi
  40c4a4:	dec    eax
  40c4a5:	or     DWORD PTR [eax],eax
  40c4a7:	out    0xc4,al
  40c4a9:	xchg   edx,eax
  40c4aa:	(bad)  
  40c4ab:	call   0x2bd558f8
  40c4b0:	dec    ebp
  40c4b1:	add    bh,bh
  40c4b3:	ins    BYTE PTR es:[edi],dx
	...
  40c4dc:	or     DWORD PTR [edi],ebp
  40c4de:	push   eax
  40c4df:	rcr    DWORD PTR [edi+0x35],0x41
  40c4e3:	jmp    0xe9a48628
  40c4e8:	dec    eax
  40c4e9:	push   cs
  40c4ea:	rcl    BYTE PTR [edx+ecx*2+0x546474ee],0xc7
  40c4f2:	std    
  40c4f3:	push   cs
  40c4f4:	push   esi
  40c4f5:	xchg   esp,eax
  40c4f6:	inc    ecx
  40c4f7:	add    BYTE PTR [esi-0x795e994a],dl
  40c4fd:	(bad)  
  40c4fe:	(bad)  
  40c4ff:	out    0x14,eax
  40c501:	mov    cl,0xfe
  40c503:	jmp    FWORD PTR [ecx+0x79027546]
  40c509:	mov    cl,0x8b
  40c50b:	xchg   ebp,eax
  40c50c:	loopne 0x40c522
  40c50e:	(bad)  
  40c50f:	jmp    DWORD PTR [edi]
  40c511:	enter  0x892a,0xef
  40c515:	pop    ecx
  40c516:	(bad)  
  40c517:	inc    DWORD PTR [ebp+0x2328b19e]
  40c51d:	or     eax,0x1e6675ff
  40c522:	cdq    
  40c523:	xchg   esi,eax
  40c524:	mov    ch,0x15
  40c526:	push   DWORD PTR [ebp-0xec02]
  40c52c:	adc    ah,BYTE PTR ds:0x15b596e1
  40c532:	mov    DWORD PTR [ebp-0xeb5e],eax
  40c538:	bound  esp,QWORD PTR [ebp+0xd633c2e]
  40c53e:	push   DWORD PTR [ebp+0x0]
	...
  40c568:	jb     0x40c57e
  40c56a:	(bad)  
  40c56b:	dec    edx
  40c56d:	cwde   
  40c56e:	arpl   WORD PTR [eax],ax
  40c570:	xor    al,BYTE PTR [ecx]
  40c572:	mov    edi,0x349e1174
  40c577:	cmp    al,0xe3
  40c579:	add    eax,0x13e2b5ff
  40c57e:	(bad)  
  40c57f:	inc    DWORD PTR [ebp+0xbe8069b]
  40c585:	adc    edi,edi
  40c587:	dec    DWORD PTR [edx+0x35ff9251]
  40c58d:	add    DWORD PTR [ebp-0xeadb3e],0x50
  40c594:	xor    eax,0x4bfebc5b
  40c599:	sbb    ecx,DWORD PTR [eax+ebp*8]
  40c59c:	jp     0x40c52a
  40c59e:	add    al,BYTE PTR [eax]
  40c5a0:	(bad)  
  40c5a1:	das    
  40c5a2:	cld    
  40c5a3:	test   BYTE PTR [esi],cl
  40c5a5:	add    ecx,DWORD PTR [ebx]
  40c5a7:	jmp    FWORD PTR [esp+eax*2-0xd5b01b1]
  40c5ae:	sbb    DWORD PTR [edi+eiz*1],esp
  40c5b1:	lock add bh,bh
  40c5b4:	fisub  WORD PTR [edi-0x387300f7]
  40c5ba:	jle    0x40c54e
  40c5bc:	test   dl,dl
  40c5be:	cmp    al,0xc2
  40c5c0:	push   ebx
  40c5c1:	lock scas eax,DWORD PTR es:[edi]
  40c5c3:	mov    ah,BYTE PTR [edi-0x3e]
  40c5c6:	nop
  40c5c7:	or     esp,DWORD PTR [ebx-0x5a]
  40c5ca:	jno    0x40c5cb
	...
  40c5f4:	fs out 0x42,al
  40c5f7:	je     0x40c645
  40c5f9:	inc    eax
  40c5fa:	mov    ah,0xfe
  40c5fc:	fdivrp st(7),st
  40c5fe:	sbb    ch,BYTE PTR [ebx-0x17f565b3]
  40c604:	mov    dl,0x84
  40c606:	or     edi,edi
  40c608:	adc    dh,BYTE PTR [ebp+0x7b9ffffb]
  40c60e:	sbb    BYTE PTR [ebx-0x6188f9],al
  40c614:	mov    dl,0xd1
  40c616:	or     DWORD PTR [ebp+0x53],esi
  40c619:	pop    edx
  40c61a:	jg     0x40c5ab
  40c61c:	adc    al,0x60
  40c61e:	jge    0x40c665
  40c620:	bswap  ebp
  40c622:	in     al,dx
  40c623:	(bad)  
  40c624:	jle    0x40c610
  40c626:	sbb    bh,BYTE PTR [edi+0x6a0b47fc]
  40c62c:	sub    BYTE PTR [edi],bh
  40c62e:	xchg   ecx,eax
  40c62f:	pop    es
  40c630:	jecxz  0x40c6af
  40c632:	or     edi,edi
  40c634:	in     al,0xcc
  40c636:	out    0xfe,al
  40c638:	push   esi
  40c639:	or     ecx,esi
  40c63b:	sbb    esp,DWORD PTR [eax+0x610b1e00]
  40c641:	or     DWORD PTR [ecx-0x16b57f55],eax
  40c647:	fwait
  40c648:	jl     0x40c687
  40c64a:	test   al,0x3
  40c64c:	mov    ah,0x36
  40c64e:	stos   DWORD PTR es:[edi],eax
  40c64f:	fmul   QWORD PTR [ebx]
  40c651:	or     DWORD PTR [ecx],eax
  40c653:	xlat   BYTE PTR ds:[ebx]
  40c654:	mov    edi,0xfeee00
	...
  40c67d:	add    BYTE PTR [eax],al
  40c67f:	add    ah,bl
  40c681:	jne    0x40c680
  40c683:	mov    bl,0x2c
  40c685:	aaa    
  40c686:	sbb    eax,0xd6508cc5
  40c68b:	nop
  40c68c:	dec    esp
  40c68d:	icebp  
  40c68e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c68f:	pop    es
  40c690:	jl     0x40c692
  40c692:	rol    DWORD PTR [esi],1
  40c694:	fld    DWORD PTR [eax]
  40c696:	mov    esi,0x41686c9d
  40c69b:	enter  0x90b,0x41
  40c69f:	les    esp,FWORD PTR [eax]
  40c6a1:	dec    edx
  40c6a2:	jmp    0xd08be4b1
  40c6a7:	les    ecx,FWORD PTR [eax+ebp*8-0x14]
  40c6ab:	jo     0x40c6f1
  40c6ad:	add    dl,ah
  40c6af:	inc    ebx
  40c6b0:	mov    bh,0x15
  40c6b2:	sbb    DWORD PTR [esi+edi*2-0x64fbd7c3],ebx
  40c6b9:	add    ah,bh
  40c6bb:	sti    
  40c6bc:	sub    al,0x9b
  40c6be:	ins    BYTE PTR es:[edi],dx
  40c6bf:	or     bl,BYTE PTR [ecx+esi*8]
  40c6c2:	cmp    al,0x74
  40c6c4:	adc    al,0x0
  40c6c6:	rol    DWORD PTR [ebx],cl
  40c6c8:	mov    eax,ds:0x408dc109
  40c6cd:	dec    edx
  40c6ce:	jmp    0xe940c36e
  40c6d3:	and    ebx,0xffffffe1
  40c6d6:	push   esp
  40c6d7:	or     ch,ah
  40c6d9:	adc    eax,DWORD PTR [eax]
  40c6db:	sub    esp,edx
  40c6dd:	sub    edx,DWORD PTR [eax-0x67]
  40c6e0:	inc    eax
  40c6e1:	sbb    BYTE PTR [ebx+0x26],0x0
	...
  40c70c:	inc    ecx
  40c70d:	adc    al,0xc0
  40c70f:	xchg   ebp,eax
  40c710:	fmul   QWORD PTR [edi+0x68]
  40c713:	fisttp WORD PTR [eax+ecx*2+0x7651b900]
  40c71a:	or     BYTE PTR [ecx],dl
  40c71c:	in     al,dx
  40c71d:	add    edi,edi
  40c71f:	(bad)  
  40c720:	push   ecx
  40c721:	lahf   
  40c722:	nop
  40c723:	not    BYTE PTR [edx-0xf]
  40c726:	cwde   
  40c727:	pop    eax
  40c728:	push   ecx
  40c729:	add    bh,bh
  40c72b:	pop    esp
  40c72c:	inc    ebx
  40c72d:	add    BYTE PTR [ebp-0xf],dh
  40c730:	xor    BYTE PTR ds:0xd252d68f,cl
  40c736:	shl    ebp,0x48
  40c739:	push   esi
  40c73a:	mov    edx,ebp
  40c73c:	enter  0xebc4,0xb6
  40c740:	inc    edx
  40c741:	add    BYTE PTR [ebp-0xa6acd4],cl
  40c747:	xor    al,0x57
  40c749:	(bad)  
  40c74a:	je     0x40c741
  40c74c:	xor    bl,bl
  40c74e:	(bad)  
  40c74f:	jmp    0xe700db9c
  40c754:	(bad)
  40c757:	call   0x81858da4
  40c75c:	dec    edi
  40c75d:	or     DWORD PTR [eax],eax
  40c75f:	jmp    0x77350bef
  40c764:	dec    edx
  40c765:	or     DWORD PTR [eax],eax
  40c767:	add    eax,DWORD PTR [edi+0x73]
  40c76a:	add    bl,dl
  40c76c:	dec    eax
  40c76d:	jae    0x40c76f
  40c76f:	ins    BYTE PTR es:[edi],dx
	...
  40c798:	int3   
  40c799:	cli    
  40c79a:	dec    edi
  40c79b:	fs test ch,dh
  40c79e:	test   BYTE PTR [esi+0x52],0x59
  40c7a2:	inc    DWORD PTR [eax]
  40c7a4:	mov    bh,0x12
  40c7a6:	push   DWORD PTR [ebp+0x2e]
  40c7a9:	sbb    eax,0xaf263a4
  40c7ae:	or     eax,eax
  40c7b0:	xchg   esi,eax
  40c7b1:	jmp    edi
  40c7b3:	mov    fs,edx
  40c7b5:	or     al,BYTE PTR [eax]
  40c7b7:	push   0x3fdd71
  40c7bc:	pop    ebp
  40c7bd:	mov    cs,WORD PTR [esi]
  40c7bf:	call   0x404129
  40c7c4:	sar    BYTE PTR [ebp-0x30],cl
  40c7c7:	lea    esp,[edi]
  40c7c9:	sbb    edi,esi
  40c7cb:	call   FWORD PTR [ebp+0x55e850ba]
  40c7d1:	jns    0x40c7d2
  40c7d3:	call   FWORD PTR [ebx]
  40c7d5:	jg     0x40c7c7
  40c7d7:	imul   DWORD PTR [ebp+0x11]
  40c7da:	call   0xff51caec
  40c7df:	push   0x72
  40c7e1:	mov    ds:0x5233cbe,al
  40c7e6:	push   DWORD PTR [ebp-0xe64e]
  40c7ec:	popf   
  40c7ed:	(bad)
  40c7f1:	outs   dx,BYTE PTR ds:[esi]
  40c7f2:	(bad)  
  40c7f3:	(bad)  
  40c7f4:	fstp   TBYTE PTR [esi-0x14]
  40c7f7:	imul   DWORD PTR [ebp+0xbd8311]
	...
  40c821:	add    BYTE PTR [eax],al
  40c823:	add    dh,cl
  40c825:	sbb    bh,bh
  40c827:	push   DWORD PTR [edx]
  40c829:	mov    ss,WORD PTR [ecx]
  40c82b:	push   0xbeef0a23
  40c830:	lods   eax,DWORD PTR ds:[esi]
  40c831:	dec    edi
  40c832:	in     al,dx
  40c833:	neg    DWORD PTR [ebp+0x2a75ff11]
  40c839:	and    dl,BYTE PTR [edi-0xee524e]
  40c83f:	mov    ch,0x7e
  40c841:	sbb    edi,edi
  40c843:	dec    DWORD PTR [ebx+0x48]
  40c846:	cmp    al,0x90
  40c848:	cld    
  40c849:	dec    esi
  40c84a:	or     BYTE PTR [ebp-0xf7c105],dh
  40c850:	in     al,dx
  40c851:	mov    ah,0xf6
  40c853:	(bad)  
  40c854:	pop    esi
  40c855:	call   0x2f1cf874
  40c85a:	or     bh,bh
  40c85c:	sahf   
  40c85d:	pop    ds
  40c85e:	adc    bh,bh
  40c860:	int3   
  40c861:	pop    ss
  40c862:	pop    eax
  40c863:	nop
  40c864:	les    edx,FWORD PTR [esi]
  40c866:	or     BYTE PTR [ebp-0x3d],al
  40c869:	or     BYTE PTR [edi+0x806b4fe],bh
  40c86f:	jne    0x40c820
  40c871:	pop    ss
  40c872:	or     ah,BYTE PTR [edx+0x4b]
  40c875:	lock cmp edx,eax
  40c878:	dec    edi
  40c879:	lock lods eax,DWORD PTR ds:[esi]
  40c87b:	mov    ah,BYTE PTR [edi-0x6b17bf90]
  40c881:	fiadd  WORD PTR [esi]
  40c883:	lea    ecx,[esi]
  40c885:	aam    0xb3
  40c887:	inc    BYTE PTR [eax]
	...
  40c8ad:	add    BYTE PTR [eax],al
  40c8af:	add    dh,dh
  40c8b1:	inc    DWORD PTR ds:0x22d84775
  40c8b7:	bound  ecx,QWORD PTR [ebx-0x10]
  40c8ba:	stc    
  40c8bb:	mov    edi,0xe66d54
  40c8c0:	dec    ebx
  40c8c1:	lock cmp eax,0x2ef5345
  40c8c7:	add    BYTE PTR [ebx-0x59],cl
  40c8ca:	shl    bl,0x44
  40c8cd:	in     al,dx
  40c8ce:	add    al,BYTE PTR [eax]
  40c8d0:	mov    cl,0xf2
  40c8d2:	cwde   
  40c8d3:	jmp    DWORD PTR [edx-0x4000670e]
  40c8d9:	and    eax,0x6dd65010
  40c8de:	adc    bh,dh
  40c8e0:	sbb    al,0x6c
  40c8e2:	mov    ah,0xfe
  40c8e4:	sahf   
  40c8e5:	or     DWORD PTR [ecx+0x7],esp
  40c8e8:	xchg   esi,eax
  40c8e9:	std    
  40c8ea:	push   eax
  40c8eb:	push   ecx
  40c8ec:	imul   ecx,DWORD PTR [ecx],0x75bcfae9
  40c8f2:	in     al,0x1c
  40c8f4:	jmp    0x10b8:0x6303e909
  40c8fb:	(bad)
  40c8fe:	mov    ebx,0x59e1e4f3
  40c903:	pop    es
  40c904:	aam    0x59
  40c906:	jb     0x40c93c
  40c908:	mov    esi,0xc40f1486
  40c90d:	cld    
  40c90e:	mov    eax,0x79d1a4b1
  40c913:	pop    es
	...
  40c93c:	mov    ah,0x92
  40c93e:	imul   edx,DWORD PTR [esp+esi*4],0xfffffffc
  40c942:	std    
  40c943:	sbb    eax,DWORD PTR [ebp-0x67]
  40c946:	cmc    
  40c947:	push   es
  40c948:	xor    DWORD PTR [ecx],ecx
  40c94a:	add    DWORD PTR [ebx],0xffffff94
  40c94d:	mov    dh,0xd8
  40c94f:	push   cs
  40c950:	mov    esp,?
  40c952:	fst    QWORD PTR [eax+0x730cf150]
  40c958:	jl     0x40c956
  40c95a:	pop    edi
  40c95b:	and    BYTE PTR [edi-0xc],0xc5
  40c95f:	push   es
  40c960:	ins    BYTE PTR es:[edi],dx
  40c961:	mov    dh,0xcc
  40c963:	push   cs
  40c964:	fs cld 
  40c966:	sar    BYTE PTR [edi],0xc2
  40c969:	cld    
  40c96a:	lods   eax,DWORD PTR ds:[esi]
  40c96b:	cli    
  40c96c:	xchg   esp,eax
  40c96d:	jne    0x40c979
  40c96f:	mov    ah,0xc3
  40c971:	xchg   BYTE PTR [eax-0x6a03bbf2],dl
  40c977:	push   eax
  40c978:	xor    esi,esp
  40c97a:	lea    eax,[esi]
  40c97c:	and    ecx,DWORD PTR [edx]
  40c97e:	pop    esp
  40c97f:	push   es
  40c980:	sub    al,0x10
  40c982:	test   eax,0x718c8f
  40c987:	jmp    0x40c9d1
  40c989:	in     al,dx
  40c98a:	mov    ebp,0x413d0b01
  40c98f:	jmp    0x57287fd9
  40c994:	dec    ebp
  40c995:	cld    
  40c996:	(bad)  
  40c997:	fadd   QWORD PTR [eax]
  40c999:	in     al,0x97
  40c99b:	xchg   ebp,eax
  40c99c:	dec    ebp
  40c99d:	cld    
  40c99e:	addr16 jmp 0x40c9a1
	...
  40c9c5:	add    BYTE PTR [eax],al
  40c9c7:	add    BYTE PTR [eax-0x14],cl
  40c9ca:	mov    ebp,0x413cb4d1
  40c9cf:	jmp    0x37288019
  40c9d4:	dec    ebp
  40c9d5:	cld    
  40c9d6:	(bad)  
  40c9d7:	pushf  
  40c9d8:	shl    bl,1
  40c9da:	jg     0x40ca31
  40c9dc:	dec    ebp
  40c9dd:	cld    
  40c9de:	addr16 jmp 0x81feb62c
  40c9e4:	and    BYTE PTR ds:0xb645e941,bh
  40c9ea:	out    0xf6,eax
  40c9ec:	dec    esi
  40c9ed:	cld    
  40c9ee:	(bad)  
  40c9ef:	jl     0x40c991
  40c9f1:	jecxz  0x40ca5a
  40c9f3:	xor    eax,0x7de7fc4d
  40c9f8:	push   ss
  40c9f9:	cld    
  40c9fa:	(bad)  
  40c9fb:	ficom  WORD PTR [ebp*8-0xeb9290a]
  40ca02:	mov    BYTE PTR [esi+0x4e],bl
  40ca05:	cld    
  40ca06:	(bad)  
  40ca07:	jl     0x40ca60
  40ca09:	hlt    
  40ca0a:	(bad)  
  40ca0b:	mov    esi,0xb60c764e
  40ca10:	int3   
  40ca11:	add    ebp,eax
  40ca13:	mov    WORD PTR [ebp-0x4],cs
  40ca16:	(bad)  
  40ca17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca18:	cld    
  40ca19:	clc    
  40ca1a:	neg    BYTE PTR [esi+0x666cf14e]
  40ca20:	inc    esi
  40ca21:	cli    
  40ca22:	(bad)  
  40ca23:	and    al,0x47
  40ca25:	lock lock add ah,al
  40ca29:	add    al,0xff
  40ca2b:	inc    DWORD PTR [eax]
	...
  40ca51:	add    BYTE PTR [eax],al
  40ca53:	add    BYTE PTR [edi],bl
  40ca55:	add    ebp,eax
  40ca57:	mov    bh,0x53
  40ca59:	add    eax,0x1e0c900
  40ca5e:	call   DWORD PTR [ecx+ebx*4+0x21]
  40ca62:	add    esp,0xffffffa6
  40ca65:	lahf   
  40ca66:	(bad)  
  40ca67:	imul   edx,DWORD PTR [eax+0x4],0x848a0875
  40ca6e:	mov    bh,bh
  40ca70:	test   DWORD PTR [esi+0x45],edi
  40ca73:	cld    
  40ca74:	cli    
  40ca75:	push   es
  40ca76:	add    bh,ch
  40ca78:	push   esp
  40ca79:	popf   
  40ca7a:	xchg   esi,eax
  40ca7b:	cmp    al,0xa3
  40ca7d:	push   es
  40ca7e:	push   0xfec7e6a8
  40ca83:	(bad)  
  40ca84:	(bad)  
  40ca86:	out    0x47,al
  40ca88:	push   ds
  40ca89:	add    al,0xff
  40ca8b:	push   0x3fd112
  40ca90:	inc    ebp
  40ca91:	retf   0x2940
  40ca94:	repz push es
  40ca96:	push   DWORD PTR [ebp-0x56]
  40ca99:	push   ds
  40ca9a:	nop
  40ca9b:	std    
  40ca9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca9d:	add    eax,0xc666b068
  40caa2:	(bad)  
  40caa3:	addr16 jo 0x40caac
  40caa6:	add    BYTE PTR [eax-0x17f9746b],al
  40caac:	add    al,0x2
  40caae:	(bad)  
  40caaf:	call   FWORD PTR [edx]
  40cab1:	dec    ecx
  40cab2:	cmp    al,0x41
  40cab4:	jb     0x40ca54
	...
  40cade:	add    BYTE PTR [eax],al
  40cae0:	jb     0x40ca68
  40cae2:	(bad)  
  40cae3:	jne    0x40cb4f
  40cae5:	push   ds
  40cae6:	pop    ebx
  40cae7:	(bad)  
  40cae8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cae9:	add    eax,0xc7270468
  40caee:	(bad)  
  40caef:	addr16 dec ebx
  40caf1:	out    dx,al
  40caf2:	add    al,BYTE PTR [eax]
  40caf4:	retf   
  40caf5:	mov    cl,BYTE PTR [ebp+0x6392307]
  40cafb:	jmp    DWORD PTR [ebx+edi*2]
  40cafe:	mov    ?,ebx
  40cb00:	sbb    al,0xfd
  40cb02:	cli    
  40cb03:	out    0x7c,eax
  40cb05:	pop    esp
  40cb06:	add    al,0xff
  40cb08:	add    ch,BYTE PTR [esi]
  40cb0a:	(bad)  
  40cb0b:	call   FWORD PTR [edi+0x76ff1777]
  40cb11:	in     al,0x1a
  40cb13:	sbb    eax,ebx
  40cb15:	dec    edx
  40cb16:	add    al,0xb
  40cb18:	or     edi,DWORD PTR [ecx+ecx*8-0x3e029999]
  40cb1f:	dec    DWORD PTR [eax+ecx*2+0x2ad49255]
  40cb26:	mov    bl,0x4f
  40cb28:	arpl   ax,si
  40cb2a:	add    ch,bh
  40cb2c:	add    eax,0xa3ca298
  40cb31:	lock mov dl,0xfe
  40cb34:	ds call 0x3394054
  40cb3a:	add    al,0x58
  40cb3c:	xor    esi,ecx
  40cb3e:	add    ch,bh
  40cb40:	fld    QWORD PTR [edi+0x3c93]
	...
  40cb6a:	add    BYTE PTR [eax],al
  40cb6c:	or     dh,al
  40cb6e:	mov    dl,0xfe
  40cb70:	push   ss
  40cb71:	clc    
  40cb72:	jmp    0xcee8:0x2dab860
  40cb79:	popa   
  40cb7a:	add    edi,edi
  40cb7c:	sub    BYTE PTR [ebp+0x7716000b],0xf0
  40cb83:	or     BYTE PTR [edi-0xeff9245],0xe
  40cb8a:	add    esi,DWORD PTR [ebp+0x43]
  40cb8d:	enter  0x8ab2,0x4c
  40cb91:	or     BYTE PTR [esi+0x12f58f8d],ah
  40cb97:	push   ds
  40cb98:	cmp    al,0x7f
  40cb9a:	loope  0x40cb87
  40cb9c:	(bad)  
  40cb9e:	lea    eax,[ebx]
  40cba0:	mov    eax,ds:0x5379862c
  40cba5:	loope  0x40cc18
  40cba7:	add    ebx,DWORD PTR [ecx+edi*8]
  40cbaa:	add    ah,BYTE PTR [eax]
  40cbac:	adc    al,0x7f
  40cbae:	loope  0x40cb9b
  40cbb0:	retf   
  40cbb1:	clc    
  40cbb2:	add    eax,DWORD PTR gs:[edi+edi*2]
  40cbb6:	pop    ebp
  40cbb7:	add    esi,DWORD PTR [esi+0x1]
  40cbba:	inc    ecx
  40cbbb:	int    0xc1
  40cbbd:	clc    
  40cbbe:	dec    ebp
  40cbbf:	int    0xa
  40cbc1:	push   cs
  40cbc2:	jmp    0x9a269c1f
  40cbc7:	retf   0x4047
  40cbca:	test   BYTE PTR [ebx+ecx*2+0x9],0xe9
  40cbcf:	add    eax,DWORD PTR [eax]
	...
  40cbf5:	add    BYTE PTR [eax],al
  40cbf7:	add    BYTE PTR [ebx+0x24],cl
  40cbfa:	inc    edx
  40cbfb:	add    edi,DWORD PTR [esi]
  40cbfd:	add    DWORD PTR [ecx],edx
  40cbff:	aaa    
  40cc00:	sbb    al,0x9
  40cc02:	jmp    0x6a41eb95
  40cc07:	cld    
  40cc08:	dec    edx
  40cc09:	jg     0x40cbe3
  40cc0b:	push   es
  40cc0c:	jnp    0x40cb9a
  40cc0e:	adc    al,BYTE PTR [esi]
  40cc10:	and    eax,0xf75fb28a
  40cc15:	jge    0x40cbfb
  40cc17:	imul   eax,DWORD PTR [ebx+ecx*1+0x7e840445],0x5886ebed
  40cc22:	jmp    0xf55af2a
  40cc27:	inc    ebp
  40cc28:	dec    ebx
  40cc29:	popa   
  40cc2a:	jne    0x40cc6c
  40cc2c:	or     cl,BYTE PTR [ecx]
  40cc2e:	rcr    DWORD PTR [ecx-0x4a00074c],1
  40cc34:	inc    ebp
  40cc35:	leave  
  40cc36:	jae    0x40cc7c
  40cc38:	dec    eax
  40cc39:	jle    0x40cc43
  40cc3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc3c:	arpl   WORD PTR ds:0x8c47283e,dx
  40cc42:	ret    
  40cc43:	in     eax,dx
  40cc44:	inc    ebp
  40cc45:	leave  
  40cc46:	je     0x40cc7c
  40cc48:	dec    eax
  40cc49:	push   ds
  40cc4a:	sub    al,0xc7
  40cc4c:	(bad)
  40cc50:	mov    DWORD PTR [edx+0x0],ecx
  40cc53:	push   0xffffff8b
  40cc55:	inc    eax
  40cc56:	aas    
  40cc57:	sub    BYTE PTR [edi+0x9],al
  40cc5a:	jne    0x40cc4d
	...
  40cc84:	dec    ecx
  40cc85:	push   ds
  40cc86:	and    BYTE PTR [edi],bl
  40cc88:	xchg   BYTE PTR [ecx],cl
  40cc8a:	jmp    0x40cc9c
  40cc8c:	or     DWORD PTR gs:[edx-0x18],ebp
  40cc90:	dec    ecx
  40cc91:	ds aaa 
  40cc93:	push   es
  40cc94:	mov    cs,WORD PTR [ecx]
  40cc96:	call   esp
  40cc98:	sbb    BYTE PTR [edi],dh
  40cc9a:	inc    ecx
  40cc9b:	jmp    0xe24c986d
  40cca0:	or     BYTE PTR [ecx+eiz*1+0x26],bh
  40cca4:	add    DWORD PTR [eax+0x3f],0xffffffa8
  40cca8:	dec    eax
  40cca9:	clc    
  40ccaa:	adc    al,0xd1
  40ccac:	or     cl,BYTE PTR [edx+0x0]
  40ccaf:	push   0xffffff84
  40ccb1:	or     edi,edi
  40ccb3:	fsubr  QWORD PTR [eax+0x37]
  40ccb6:	inc    ecx
  40ccb7:	jmp    0xb677d94d
  40ccbc:	wbinvd 
  40ccbe:	add    cl,ch
  40ccc0:	dec    eax
  40ccc1:	or     ebx,ebp
  40ccc3:	call   0x430350d7
  40ccc8:	nop
  40ccc9:	leave  
  40ccca:	pop    es
  40cccb:	jmp    0xe78019f
  40ccd0:	or     BYTE PTR [ecx],cl
  40ccd2:	add    BYTE PTR [eax],al
  40ccd4:	es sub bh,bh
  40ccd7:	xor    eax,0x414855
  40ccdc:	popf   
  40ccdd:	pop    ds
  40ccde:	cmp    BYTE PTR [esi],bh
  40cce0:	and    ecx,DWORD PTR ds:0xa36c483
  40cce6:	adc    eax,0x20
	...
  40cd0f:	add    BYTE PTR [esp+ecx*2],bl
  40cd12:	add    bh,al
  40cd14:	daa    
  40cd15:	xor    bh,BYTE PTR [edi]
  40cd17:	inc    ecx
  40cd18:	and    cl,BYTE PTR [ebx]
  40cd1a:	add    BYTE PTR [eax],al
  40cd1c:	xor    cl,dh
  40cd1e:	push   ebx
  40cd1f:	mov    ecx,esi
  40cd21:	mov    edx,es
  40cd23:	lock xor DWORD PTR [ebx+eax*2+0x72cb2908],eax
  40cd2b:	or     esi,DWORD PTR [ecx+0x76]
  40cd2e:	or     al,0x0
  40cd30:	push   ss
  40cd31:	adc    BYTE PTR [eax+0x77fe238],al
  40cd37:	sub    esp,DWORD PTR [edx]
  40cd39:	push   esp
  40cd3a:	leave  
  40cd3b:	ret    0xada
  40cd3e:	cmp    BYTE PTR [eax],0x9c
  40cd41:	jle    0x40cd53
  40cd43:	sbb    edi,0x31
  40cd46:	aas    
  40cd47:	inc    ecx
  40cd48:	loop   0x40cd54
  40cd4a:	jne    0x40cd53
  40cd4c:	cdq    
  40cd4d:	retf   0xc959
  40cd50:	jo     0x40cd57
  40cd52:	add    BYTE PTR [eax+0x3e74889a],al
  40cd58:	sub    DWORD PTR [esi+0xc],ebx
  40cd5b:	dec    edx
  40cd5c:	xor    edi,ebp
  40cd5e:	add    DWORD PTR [ebx],ecx
  40cd60:	inc    eax
  40cd61:	jle    0x40cd69
  40cd63:	sbb    DWORD PTR [edi],0x6
  40cd66:	add    DWORD PTR [ebp-0x5a],esi
  40cd69:	and    eax,0x856ebc0
  40cd6e:	dec    ebp
  40cd6f:	or     al,0xf9
  40cd71:	dec    esi
  40cd72:	or     al,0x5
	...
  40cd9c:	dec    ebx
  40cd9d:	loopne 0x40cda5
  40cd9f:	add    BYTE PTR [ebx-0x5f],cl
  40cda2:	loop   0x40cda5
  40cda4:	sti    
  40cda5:	xlat   BYTE PTR ds:[ebx]
  40cda6:	sbb    al,0x8d
  40cda8:	pop    esp
  40cda9:	mov    bh,0x52
  40cdab:	mov    edi,esi
  40cdad:	out    0x44,eax
  40cdaf:	push   eax
  40cdb0:	dec    esp
  40cdb1:	cmp    eax,0xb5335210
  40cdb6:	call   0x9c9:0x5d483cfe
  40cdbd:	call   0x8750f8c4
  40cdc2:	jne    0x40cdd0
  40cdc4:	and    al,0xf5
  40cdc6:	or     ch,BYTE PTR [edx+0x4b]
  40cdc9:	sbb    al,BYTE PTR [edi+edi*8]
  40cdcc:	les    eax,FWORD PTR ds:[eax+0x41]
  40cdd0:	dec    ebx
  40cdd1:	arpl   di,ax
  40cdd3:	(bad)  
  40cdd5:	and    BYTE PTR [edi+0x65],dh
  40cdd8:	shr    BYTE PTR [esi+edi*8+0x466d4769],cl
  40cddf:	lock fwait
  40cde1:	dec    eax
  40cde2:	test   BYTE PTR [ebx+0x6d4ee4],0xce
  40cde9:	lods   al,BYTE PTR ds:[esi]
  40cdea:	repnz dec edi
  40cdec:	aam    0xb4
  40cdee:	(bad)  
  40cdef:	(bad)  
  40cdf0:	ss cld 
  40cdf2:	inc    eax
  40cdf3:	inc    ecx
  40cdf4:	dec    ebx
  40cdf5:	arpl   di,ax
  40cdf7:	or     edx,DWORD PTR [eax+0x20]
  40cdfa:	jbe    0x40ce2f
  40cdfc:	(bad)  
  40cdfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdfe:	repnz add BYTE PTR [eax],0x0
	...
  40ce26:	add    BYTE PTR [eax],al
  40ce28:	xor    ebp,esp
  40ce2a:	add    dh,BYTE PTR [eax+eax*2+0x7b]
  40ce2e:	inc    ebx
  40ce2f:	or     BYTE PTR [ebx],cl
  40ce31:	nop
  40ce32:	jmp    0x738a:0xfefec7b4
  40ce39:	push   esp
  40ce3a:	inc    esi
  40ce3b:	lock test BYTE PTR [eax],cl
  40ce3e:	pop    ecx
  40ce3f:	or     al,0x18
  40ce41:	neg    BYTE PTR [eax+0x8]
  40ce44:	arpl   cx,dx
  40ce46:	jmp    FWORD PTR fs:[ebp+0x62]
  40ce4a:	jmp    0x1939dddf
  40ce4f:	push   DWORD PTR [edi]
  40ce51:	and    edi,edi
  40ce53:	inc    esp
  40ce54:	dec    ebx
  40ce55:	mov    ch,BYTE PTR [esp+ecx*1+0x79ae07e1]
  40ce5c:	inc    edi
  40ce5d:	cmc    
  40ce5e:	sti    
  40ce5f:	sub    edi,DWORD PTR [ebp+0x4a]
  40ce62:	jmp    0x6242d6e9
  40ce67:	ret    
  40ce68:	xchg   ecx,eax
  40ce69:	ret    0xcaa
  40ce6c:	dec    ebx
  40ce6d:	pop    esi
  40ce6e:	jb     0x40ce60
  40ce70:	sbb    eax,0x9ffeed7f
  40ce75:	add    DWORD PTR [esi+0x19],esi
  40ce78:	pop    esp
  40ce79:	xor    al,0x28
  40ce7b:	add    al,0xc8
  40ce7d:	int    0xf0
  40ce7f:	push   ebx
  40ce80:	cld    
  40ce81:	jle    0x40ce70
  40ce83:	(bad)  
  40ce84:	jg     0x40ce87
  40ce86:	push   esi
  40ce87:	sbb    DWORD PTR [eax],esp
  40ce89:	xor    al,0xa8
  40ce8b:	add    eax,DWORD PTR [eax]
	...
  40ceb1:	add    BYTE PTR [eax],al
  40ceb3:	add    al,cl
  40ceb5:	int    0xf0
  40ceb7:	mov    dh,BYTE PTR [edi+0x19]
  40ceba:	jo     0x40cebe
  40cebc:	jae    0x40ce80
  40cebe:	sub    dl,BYTE PTR [eax]
  40cec0:	dec    ebx
  40cec1:	pop    esi
  40cec2:	(bad)  
  40cec3:	lock leave 
  40cec5:	int    0x10
  40cec7:	push   DWORD PTR [edi]
  40cec9:	add    eax,0xf4da0311
  40cece:	adc    eax,0xe57e8b0b
  40ced3:	int3   
  40ced4:	mov    bl,BYTE PTR [ecx]
  40ced6:	jmp    0x1145e6d9
  40cedb:	loopne 0x40cec3
  40cedd:	hlt    
  40cede:	push   ebp
  40cee0:	inc    ecx
  40cee1:	leave  
  40cee2:	jae    0x40cec9
  40cee4:	xchg   edi,eax
  40cee5:	retf   0xe90f
  40cee8:	jge    0x40cf67
  40ceea:	adc    al,0xde
  40ceec:	repz sbb al,ch
  40ceef:	lods   al,BYTE PTR ds:[esi]
  40cef0:	dec    ebx
  40cef1:	hlt    
  40cef2:	(bad)  
  40cef3:	loop   0x40ce7d
  40cef5:	jge    0x40cefb
  40cef7:	mov    al,0x8a
  40cef9:	add    al,0x0
  40cefb:	push   ecx
  40cefc:	xor    BYTE PTR [ecx+eax*2],dh
  40ceff:	jmp    0x287e6de4
  40cf04:	dec    edi
  40cf05:	loope  0x40ce92
  40cf07:	jg     0x40cf46
  40cf09:	repz or ch,BYTE PTR [ecx-0xd97fb4d]
  40cf10:	ins    DWORD PTR es:[edi],dx
  40cf11:	dec    edx
  40cf12:	add    BYTE PTR [ecx],al
  40cf14:	mov    esi,DWORD PTR [ebx]
  40cf16:	inc    ecx
  40cf17:	jmp    0x40cf1c
	...
  40cf40:	xor    BYTE PTR [ecx-0x6a],dh
  40cf43:	jle    0x40cf5a
  40cf45:	(bad)  
  40cf46:	mov    edi,0xa2c4e6
  40cf4b:	jmp    0x65855598
  40cf50:	cwde   
  40cf51:	hlt    
  40cf52:	je     0x40cf41
  40cf54:	cmc    
  40cf55:	sbb    al,0x1b
  40cf57:	push   ss
  40cf58:	xchg   BYTE PTR [ecx],cl
  40cf5a:	and    DWORD PTR ds:0xf6c00050,0xffffffd3
  40cf61:	call   0x6400:0x5f48e900
  40cf68:	xor    ecx,0x4f
  40cf6b:	ret    
  40cf6c:	lds    ebp,FWORD PTR [ebx-0x55]
  40cf6f:	out    0x7,al
  40cf71:	or     edi,edi
  40cf73:	xchg   esp,eax
  40cf74:	mov    ah,0xf2
  40cf76:	adc    al,0xca
  40cf78:	ins    DWORD PTR es:[edi],dx
  40cf79:	dec    edx
  40cf7a:	add    BYTE PTR [edx-0x74],ch
  40cf7d:	pop    ss
  40cf7e:	or     eax,DWORD PTR [eax]
  40cf80:	jb     0x40cf85
  40cf82:	test   DWORD PTR [edx-0x5d],ebp
  40cf85:	pop    es
  40cf86:	add    bh,bh
  40cf88:	(bad)  
  40cf8a:	std    
  40cf8b:	adc    eax,0x41328d
  40cf90:	icebp  
  40cf91:	rol    BYTE PTR [edx],0x83
  40cf94:	push   0x60
  40cf96:	je     0x40cf9d
  40cf98:	mov    edx,DWORD PTR [eax+0x1]
  40cf9b:	add    BYTE PTR [edx-0x7e],dh
  40cf9e:	inc    ebx
  40cf9f:	hlt    
  40cfa0:	inc    edx
  40cfa1:	pop    edi
  40cfa2:	add    bh,bh
	...
  40cfcc:	pop    ds
  40cfcd:	cmc    
  40cfce:	out    0x14,al
  40cfd0:	xchg   ebp,eax
  40cfd1:	cmc    
  40cfd2:	std    
  40cfd3:	or     esi,edx
  40cfd5:	add    al,0x84
  40cfd7:	cmp    DWORD PTR [ebx],esi
  40cfd9:	pop    es
  40cfda:	add    BYTE PTR [ebx+0xefef157],al
  40cfe0:	sahf   
  40cfe1:	and    al,0x1
  40cfe3:	add    BYTE PTR [edx],dh
  40cfe5:	xchg   DWORD PTR [esi],esi
  40cfe7:	add    BYTE PTR ds:0x2201248b,dl
  40cfed:	pop    es
  40cfee:	push   eax
  40cfef:	mov    ebp,DWORD PTR [edi]
  40cff1:	icebp  
  40cff2:	inc    eax
  40cff3:	push   edx
  40cff4:	retf   0x8b63
  40cff7:	jmp    DWORD PTR [ebp+0x4f]
  40cffa:	mov    DWORD PTR [ebp-0x66],eax
  40cffd:	hlt    
  40cffe:	jae    0x40cff4
  40d000:	xchg   ebp,eax
  40d001:	jp     0x40cfeb
  40d003:	push   edx
  40d004:	mov    bl,BYTE PTR [edx-0x337a0077]
  40d00a:	inc    ebx
  40d00b:	lock loop 0x40d014
  40d00e:	add    BYTE PTR [eax],al
  40d010:	sbb    eax,0xb200ec4a
  40d015:	push   es
  40d016:	add    BYTE PTR [ebx+0x413f39a7],al
  40d01c:	mov    ds:0x4b527506,al
  40d021:	mov    BYTE PTR [edx],ah
  40d023:	inc    eax
  40d024:	or     ah,al
  40d026:	jmp    0x2350:0x2dfff29
  40d02d:	rol    BYTE PTR [edx+0x41],0x0
	...
  40d055:	add    BYTE PTR [eax],al
  40d057:	add    BYTE PTR [ebx-0x5],cl
  40d05a:	jne    0x40d044
  40d05c:	jae    0x40d072
  40d05e:	pop    edi
  40d05f:	add    BYTE PTR [ebx-0x9],cl
  40d062:	ret    0x5373
  40d065:	pop    eax
  40d066:	and    eax,0xeae00a40
  40d06b:	or     eax,0x5002e007
  40d070:	repz add al,BYTE PTR [ecx+eax*2+0x4b]
  40d075:	mov    bl,0x75
  40d077:	call   0x9f40df
  40d07c:	dec    ebx
  40d07d:	out    0xc2,eax
  40d07f:	jae    0x40d0fa
  40d081:	sbb    BYTE PTR ds:0xeae08a40,ch
  40d087:	icebp  
  40d088:	nop
  40d089:	loopne 0x40d08d
  40d08b:	push   eax
  40d08c:	mov    bl,0xb3
  40d08e:	inc    edx
  40d08f:	inc    ecx
  40d090:	dec    ebx
  40d091:	mov    esi,DWORD PTR [ebp-0x18]
  40d094:	and    ebx,DWORD PTR [esi+ebx*2+0x0]
  40d098:	dec    ebx
  40d099:	xchg   DWORD PTR [edx],ebx
  40d09b:	push   0x432043
  40d0a0:	repz inc edi
  40d0a2:	pop    eax
  40d0a3:	add    BYTE PTR [ebx-0x50],cl
  40d0a6:	push   0x38
  40d0a8:	mov    esp,DWORD PTR [ecx+0x485eff02]
  40d0ae:	jmp    0x40d129
  40d0b0:	jle    0x40d092
  40d0b2:	add    cl,BYTE PTR [ebx]
  40d0b4:	or     edi,DWORD PTR [ebp+0x34868d6c]
  40d0ba:	push   ebx
  40d0bb:	push   0x0
	...
  40d0e1:	add    BYTE PTR [eax],al
  40d0e3:	add    BYTE PTR [edx+0x23],cl
  40d0e6:	jbe    0x40d0e0
  40d0e8:	mov    bl,0x8
  40d0ea:	mov    dl,0xfd
  40d0ec:	mov    ch,0xf1
  40d0ee:	sbb    eax,0x158b776
  40d0f3:	inc    esi
  40d0f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0f5:	icebp  
  40d0f6:	or     eax,0x73f9078a
  40d0fb:	inc    esi
  40d0fc:	lahf   
  40d0fd:	pop    eax
  40d0fe:	xchg   ebx,eax
  40d0ff:	add    DWORD PTR [ebx+edi*2-0xcc4150f],ecx
  40d106:	in     eax,dx
  40d107:	sti    
  40d108:	jge    0x40d185
  40d10a:	fst    QWORD PTR [ebx+eiz*2+0x1d]
  40d10e:	fdiv   st(3),st
  40d110:	ins    DWORD PTR es:[edi],dx
  40d111:	jg     0x40d13e
  40d113:	call   0x50244e1
  40d118:	xlat   BYTE PTR ds:[ebx]
  40d119:	cmp    al,0x6a
  40d11b:	jns    0x40d184
  40d11d:	or     BYTE PTR ds:0xe908e32a,dh
  40d123:	jmp    0xf033:0xc33f106
  40d12a:	outs   dx,BYTE PTR ds:[esi]
  40d12b:	sti    
  40d12c:	xor    eax,0x2dec13f1
  40d131:	ja     0x40d114
  40d133:	jmp    0x40d1b4
  40d135:	mov    BYTE PTR [ebp+0x79771dfb],cl
  40d13b:	sti    
  40d13c:	lahf   
  40d13d:	add    DWORD PTR [ecx+0x75f0c44e],edx
  40d143:	sti    
  40d144:	jg     0x40d123
  40d146:	ins    DWORD PTR es:[edi],dx
  40d147:	jno    0x40d149
	...
  40d16d:	add    BYTE PTR [eax],al
  40d16f:	add    BYTE PTR [ebx-0x1f],dl
  40d172:	and    eax,0x5df0f583
  40d177:	jno    0x40d174
  40d179:	loope  0x40d11f
  40d17b:	(bad)  
  40d17c:	in     eax,0xf0
  40d17e:	dec    ebp
  40d17f:	jno    0x40d170
  40d181:	loope  0x40d12f
  40d183:	(bad)  
  40d184:	aad    0xf0
  40d186:	cmp    eax,0xffe1e371
  40d18b:	hlt    
  40d18c:	(bad)  
  40d18d:	out    dx,eax
  40d18e:	inc    BYTE PTR [eax-0x27]
  40d191:	out    dx,al
  40d192:	(bad)  
  40d193:	es mov al,0x75
  40d196:	cld    
  40d197:	push   ds
  40d198:	pop    edx
  40d199:	adc    BYTE PTR [edi],bh
  40d19b:	test   al,0x48
  40d19d:	mov    ebx,es
  40d19f:	in     eax,0xb0
  40d1a1:	xchg   edi,eax
  40d1a2:	sti    
  40d1a3:	push   es
  40d1a4:	nop
  40d1a5:	rol    ecx,0xd9
  40d1a8:	dec    eax
  40d1a9:	push   esi
  40d1aa:	mov    eax,DWORD PTR ds:0xee00631c
  40d1b0:	sti    
  40d1b1:	add    al,ch
  40d1b3:	call   0x5b90:0x72feefc3
  40d1ba:	call   0x49d7b8
  40d1bf:	loop   0x40d149
  40d1c1:	jl     0x40d1de
  40d1c3:	jmp    0x38c8:0xdbeb488d
  40d1ca:	or     eax,0x37894a3d
  40d1cf:	jecxz  0x40d18c
  40d1d1:	push   es
  40d1d2:	(bad)  
  40d1d3:	jmp    0x40d1d8
	...
  40d1fc:	dec    eax
  40d1fd:	in     al,0x1
  40d1ff:	xchg   edx,eax
  40d200:	dec    ebx
  40d201:	inc    ecx
  40d202:	cmp    ebp,DWORD PTR [edx-0x55751c63]
  40d208:	jge    0x40d1cc
  40d20a:	shr    ebp,0x48
  40d20d:	push   esi
  40d20e:	mov    ecx,DWORD PTR [ebp+0x1eb3cbc5]
  40d214:	add    BYTE PTR [ebp+0xc],dh
  40d217:	sub    DWORD PTR [ebp+0x4566fe7d],0x91e474c9
  40d221:	ret    0xf9c1
  40d224:	dec    eax
  40d225:	lock je 0x40d205
  40d228:	lock mov ch,BYTE PTR [ebx+0x9f38d00]
  40d22f:	rcl    BYTE PTR [esi+0x70c95f08],0x1c
  40d236:	add    bh,bh
  40d238:	idiv   edi
  40d23a:	(bad)  
  40d23b:	jne    0x40d1ef
  40d23d:	jecxz  0x40d2a8
  40d23f:	sti    
  40d240:	dec    ebp
  40d241:	repz mov eax,DWORD PTR [ebp+0x42]
  40d245:	pop    esp
  40d246:	push   DWORD PTR [ebp+0x7e]
  40d249:	jecxz  0x40d28a
  40d24b:	(bad)  
  40d24c:	dec    ebp
  40d24d:	repz or eax,eax
  40d250:	popf   
  40d251:	outs   dx,DWORD PTR ds:[esi]
  40d252:	cli    
  40d253:	add    dh,BYTE PTR [edx+0xb]
  40d256:	push   DWORD PTR [ebp+0x6e]
  40d259:	icebp  
  40d25a:	jae    0x40d254
  40d25c:	call   0x0:0xff92c6
	...
  40d287:	add    BYTE PTR [ebp-0x9f04003],cl
  40d28d:	rol    DWORD PTR [eax],1
  40d28f:	add    BYTE PTR [edx-0x7e],dh
  40d292:	inc    ebx
  40d293:	in     al,dx
  40d294:	fldlg2 
  40d296:	jle    0x40d2d7
  40d298:	bound  eax,QWORD PTR [eax]
  40d29a:	test   cl,cl
  40d29c:	xor    BYTE PTR [ebx],cl
  40d29e:	add    BYTE PTR [edi+0xa],dl
  40d2a1:	aas    
  40d2a2:	(bad)  
  40d2a3:	(bad)  
  40d2a4:	in     eax,dx
  40d2a5:	add    BYTE PTR [ebx-0x30],0xcd
  40d2a9:	pop    esi
  40d2aa:	shr    BYTE PTR [eax-0x63],1
  40d2ad:	xor    BYTE PTR [ecx+0x0],al
  40d2b0:	retf   0x5b0e
  40d2b3:	add    BYTE PTR [edx],ah
  40d2b5:	pop    ebx
  40d2b6:	push   DWORD PTR [ebp-0x4e]
  40d2b9:	pop    ebp
  40d2ba:	mov    ds:0xe805333f,eax
  40d2bf:	pop    ss
  40d2c0:	pop    ecx
  40d2c1:	add    eax,0x5e6d5000
  40d2c6:	shr    BYTE PTR [eax-0x3b],1
  40d2c9:	xor    BYTE PTR [ecx+0x0],al
  40d2cc:	dec    ebx
  40d2cd:	dec    eax
  40d2ce:	or     ebx,DWORD PTR [ebx+0x4b]
  40d2d1:	loopne 0x40d32f
  40d2d3:	pop    ecx
  40d2d4:	inc    eax
  40d2d5:	and    BYTE PTR [eax+0xc],dh
  40d2d8:	inc    eax
  40d2d9:	adc    dh,BYTE PTR [eax+0x8]
  40d2dc:	push   eax
  40d2dd:	sub    DWORD PTR [ecx],ecx
  40d2df:	test   DWORD PTR [esi],edi
  40d2e1:	loop   0x40d2e5
  40d2e3:	add    BYTE PTR [eax+0x39],al
  40d2e6:	outs   dx,DWORD PTR ds:[esi]
  40d2e7:	or     DWORD PTR [ebp+eiz*4+0xae],eax
	...
  40d312:	add    BYTE PTR [eax],al
  40d314:	dec    ebx
  40d315:	loopne 0x40d319
  40d317:	jmp    0x40d35d
  40d319:	daa    
  40d31a:	aas    
  40d31b:	mov    ah,0x4b
  40d31d:	loopne 0x40d321
  40d31f:	add    BYTE PTR [edi-0x7b473d4d],cl
  40d325:	div    edi
  40d327:	(bad)  
  40d328:	jns    0x40d358
  40d32a:	cmp    al,0x7
  40d32c:	(bad)  
  40d32d:	fistp  QWORD PTR [edi+0x2e06344]
  40d333:	add    BYTE PTR [ebx+0x60],cl
  40d336:	cmp    BYTE PTR [eax],al
  40d338:	dec    esp
  40d339:	fs dec esp
  40d33b:	add    cl,BYTE PTR [ebx-0x20]
  40d33e:	dec    edi
  40d33f:	call   0xff3881b0
  40d344:	rcr    BYTE PTR [eax+ecx*8],cl
  40d347:	cmp    BYTE PTR [esi+0x6a7502c8],0x18
  40d34e:	cdq    
  40d34f:	sub    ecx,DWORD PTR [edx+0x1774f7e0]
  40d355:	mov    BYTE PTR [ecx+0xbe04b59],ch
  40d35b:	rol    BYTE PTR [ebp+ebx*2+0x6],0x2
  40d360:	dec    ebx
  40d361:	loopne 0x40d322
  40d363:	inc    esp
  40d364:	repz loopne 0x40d369
  40d367:	add    BYTE PTR [ebx-0x77],cl
  40d36a:	add    DWORD PTR [edx],eax
  40d36c:	dec    ebx
  40d36d:	or     ecx,ebp
  40d36f:	test   BYTE PTR [edi-0x1f],ch
  40d372:	out    0x6e,eax
  40d374:	push   esp
  40d375:	adc    bl,0xdf
	...
  40d3a0:	add    eax,0x4b054144
  40d3a5:	or     ecx,ebp
  40d3a7:	jmp    0x6bc8:0x3e90796
  40d3ae:	inc    ecx
  40d3af:	add    eax,0x765ffe36
  40d3b4:	stos   DWORD PTR es:[edi],eax
  40d3b5:	lds    ebp,FWORD PTR [ebx-0x16f6b615]
  40d3bb:	add    esi,DWORD PTR [edx+0x4b03e7a7]
  40d3c1:	mov    cl,BYTE PTR [ebx-0x98bb615]
  40d3c7:	mov    cl,BYTE PTR [edi]
  40d3c9:	int    0x25
  40d3cb:	ds jae 0x40d3d2
  40d3ce:	jmp    0x5d211ed6
  40d3d3:	add    cl,BYTE PTR [ebx+0x9]
  40d3d6:	push   0x79
  40d3d8:	arpl   WORD PTR [esp+edx*2],ax
  40d3db:	pop    es
  40d3dc:	shr    BYTE PTR [ebx-0x4f],cl
  40d3df:	mov    edi,0x3e3e107
  40d3e4:	dec    ebx
  40d3e5:	or     eax,edx
  40d3e7:	outs   dx,DWORD PTR ds:[esi]
  40d3e8:	dec    edx
  40d3e9:	or     ecx,ebp
  40d3eb:	add    bh,0xe1
  40d3ee:	jmp    0x40d3f6
  40d3f0:	(bad)  
  40d3f1:	imul   ebp,eax,0x23824b03
  40d3f7:	ror    cl,1
  40d3f9:	outs   dx,BYTE PTR ds:[esi]
  40d3fa:	push   ebp
  40d3fb:	add    al,0x9f
  40d3fd:	add    ch,BYTE PTR [esi-0x16f7ccbf]
  40d403:	add    eax,DWORD PTR [eax]
	...
  40d429:	add    BYTE PTR [eax],al
  40d42b:	add    BYTE PTR [ebx-0x20],cl
  40d42e:	in     eax,dx
  40d42f:	mov    esi,0x3e6e187
  40d434:	dec    ebx
  40d435:	or     DWORD PTR [eax],eax
  40d437:	scas   al,BYTE PTR es:[edi]
  40d438:	mov    cl,cl
  40d43a:	(bad)  
  40d43b:	call   0xad07dd88
  40d440:	add    ch,ch
  40d442:	(bad)  
  40d443:	jmp    0x2d859890
  40d448:	inc    edi
  40d449:	or     DWORD PTR [eax],eax
  40d44b:	jmp    0xe9fd19e5
  40d450:	dec    eax
  40d451:	or     DWORD PTR [eax],eax
  40d453:	or     dh,BYTE PTR es:[ecx+0x948e8ff]
  40d45a:	push   DWORD PTR [esp+edx*4-0x4bd8ed1c]
  40d461:	jmp    0x40d3eb
  40d463:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d464:	mov    bl,ch
  40d466:	je     0x40d49d
  40d468:	scas   eax,DWORD PTR es:[edi]
  40d469:	add    al,0xfe
  40d46b:	push   cs
  40d46c:	pushf  
  40d46d:	add    DWORD PTR [ecx+esi*1-0x6c],0x8211d475
  40d475:	in     eax,dx
  40d476:	(bad)  
  40d477:	test   bh,0x45
  40d47a:	les    ebp,FWORD PTR [edx+0x32]
  40d47d:	cmp    BYTE PTR [edi],bh
  40d47f:	sub    BYTE PTR [edi+0x9],al
  40d482:	jne    0x40d4bf
  40d484:	imul   DWORD PTR [eax]
  40d486:	inc    eax
  40d487:	sub    BYTE PTR [edi-0x1f],al
  40d48a:	or     al,0x30
  40d48c:	dec    edi
  40d48d:	or     DWORD PTR [eax+0x51],edx
	...
  40d4b8:	daa    
  40d4b9:	dec    ecx
  40d4ba:	inc    ecx
  40d4bb:	jmp    0xc20149fd
  40d4c0:	in     eax,0x51
  40d4c2:	add    cl,ch
  40d4c4:	inc    ecx
  40d4c5:	leave  
  40d4c6:	jae    0x40d4c9
  40d4c8:	lahf   
  40d4c9:	and    al,0x40
  40d4cb:	sub    BYTE PTR [edi-0x1f],cl
  40d4ce:	lock xor DWORD PTR [edi+0x9],eax
  40d4d2:	push   eax
  40d4d3:	add    DWORD PTR [ecx+ecx*2],esi
  40d4d6:	inc    ecx
  40d4d7:	add    BYTE PTR [edx],ah
  40d4d9:	repz jae 0x40d49c
  40d4dc:	ficom  DWORD PTR [esi-0x10dffa8]
  40d4e2:	mov    edi,0x2f5fb074
  40d4e7:	inc    eax
  40d4e8:	mov    ds:0xad5e807,eax
  40d4ed:	or     BYTE PTR [eax],al
  40d4ef:	push   eax
  40d4f0:	or     ah,BYTE PTR [ebx]
  40d4f2:	inc    eax
  40d4f3:	inc    ecx
  40d4f4:	loop   0x40d4e8
  40d4f6:	jae    0x40d4b8
  40d4f8:	jp     0x40d555
  40d4fa:	pop    edx
  40d4fb:	add    BYTE PTR [edx-0x4597e922],dh
  40d501:	inc    edi
  40d502:	inc    ecx
  40d503:	add    BYTE PTR [edx],cl
  40d505:	scas   eax,DWORD PTR es:[edi]
  40d506:	push   esi
  40d507:	add    BYTE PTR [edx-0xdc797a9],ah
  40d50d:	inc    esp
  40d50e:	add    bh,bh
  40d510:	mov    edi,0xd85de6c7
  40d515:	pop    es
  40d516:	add    BYTE PTR [ebx],cl
  40d518:	bound  edi,QWORD PTR [ecx+0x62]
  40d51b:	inc    DWORD PTR [eax]
	...
  40d541:	add    BYTE PTR [eax],al
  40d543:	add    bh,bh
  40d545:	mov    edi,0x7daa1e6
  40d54a:	add    BYTE PTR [eax+0x65],dl
  40d54d:	pop    ebx
  40d54e:	enter  0x54e8,0xef
  40d552:	std    
  40d553:	(bad)  
  40d554:	fld    TBYTE PTR [ebx]
  40d556:	mov    esp,0xe6c8ffff
  40d55b:	lea    ebx,[edx]
  40d55d:	add    eax,0x5b855000
  40d562:	(bad)  
  40d563:	call   0x3ec690
  40d568:	stos   DWORD PTR es:[edi],eax
  40d569:	sub    bh,BYTE PTR [eax-0x13a987d]
  40d56f:	jae    0x40d57f
  40d571:	mov    bh,BYTE PTR [ebx-0x48]
  40d574:	xor    bl,BYTE PTR [ebx+0x2e]
  40d577:	push   0xef02e04b
  40d57c:	aad    0x7b
  40d57e:	outs   dx,BYTE PTR ds:[esi]
  40d57f:	or     BYTE PTR [ebx],ah
  40d581:	xchg   esi,eax
  40d582:	cmp    dh,0x4
  40d585:	ins    BYTE PTR es:[edi],dx
  40d586:	outs   dx,DWORD PTR ds:[esi]
  40d587:	sar    ah,0xed
  40d58a:	or     ch,al
  40d58c:	(bad)  
  40d58d:	fs cmc 
  40d58f:	(bad)  
  40d590:	in     al,dx
  40d591:	int    0xb6
  40d593:	(bad)  
  40d594:	pop    esi
  40d595:	clc    
  40d596:	jmp    0x5efe:0xf553c738
  40d59d:	cwde   
  40d59e:	hlt    
  40d59f:	je     0x40d5e4
  40d5a1:	pop    eax
  40d5a2:	es test ah,al
  40d5a5:	sub    esi,ebp
  40d5a7:	je     0x40d5a9
	...
  40d5cd:	add    BYTE PTR [eax],al
  40d5cf:	add    BYTE PTR [ebx-0x4b78c6b8],cl
  40d5d5:	sbb    esi,ebp
  40d5d7:	je     0x40d55c
  40d5d9:	sbb    BYTE PTR [ecx],dh
  40d5db:	xchg   DWORD PTR [ebx+ecx*1+0x88774f5],esp
  40d5e2:	sub    DWORD PTR [edi+0x74f4fb94],eax
  40d5e8:	iret   
  40d5e9:	sbb    BYTE PTR [ecx],ah
  40d5eb:	xchg   DWORD PTR [ebx+ebp*8+0x8c374f3],eax
  40d5f2:	sbb    DWORD PTR [edi+0xce7db74],eax
  40d5f8:	enter  0xec65,0x5
  40d5fc:	fsubrp st(2),st
  40d5fe:	mov    ebx,0x2de7344
  40d603:	add    BYTE PTR [ebx+0x5f],cl
  40d606:	jbe    0x40d5f0
  40d608:	dec    ebx
  40d609:	sub    al,0x34
  40d60b:	push   0x42fbe4
  40d610:	cmp    al,0x2d
  40d612:	enter  0xfce7,0x17
  40d616:	add    al,0x0
  40d618:	inc    eax
  40d619:	or     DWORD PTR [ecx+0x23c24c6e],ebp
  40d61f:	in     al,dx
  40d620:	dec    ebx
  40d621:	or     ecx,ebp
  40d623:	add    esp,DWORD PTR [ebx+0x4b43290d]
  40d629:	jmp    0x420:0x89ecc7fb
  40d630:	dec    ebx
  40d631:	(bad)  
  40d632:	test   al,0x6e
	...
  40d65c:	dec    esp
  40d65d:	ret    0xec23
  40d660:	dec    edx
  40d661:	or     ecx,ebp
  40d663:	add    esp,esp
  40d665:	jae    0x40d694
  40d667:	jmp    0x40d677
  40d669:	adc    DWORD PTR [ebp-0xc],0xffffffd0
  40d66d:	xor    eax,0xe9cdba29
  40d672:	inc    ebp
  40d673:	hlt    
  40d674:	mov    edx,0x4dfd009a
  40d679:	test   BYTE PTR [esi+esi*8+0x6e2de9b5],al
  40d680:	fwait
  40d681:	loopne 0x40d6df
  40d683:	jge    0x40d62a
  40d685:	jmp    0xe0f044a7
  40d68a:	inc    esp
  40d68b:	jge    0x40d622
  40d68d:	jmp    0x58dc14ed
  40d692:	adc    ecx,edx
  40d694:	shr    cl,1
  40d696:	std    
  40d697:	jmp    0xc015:0xf3f5f04d
  40d69e:	sub    dl,BYTE PTR [ebx]
  40d6a0:	dec    ebx
  40d6a1:	push   esp
  40d6a2:	jb     0x40d684
  40d6a4:	retf   
  40d6a5:	les    edx,FWORD PTR [edx+esi*8-0x765216a3]
  40d6ac:	pushf  
  40d6ad:	jmp    0x3e8:0xe94cf3cd
  40d6b4:	ror    BYTE PTR [esi-0x2b],1
  40d6b7:	(bad)  
  40d6b8:	cld    
  40d6b9:	pop    ebp
  40d6ba:	add    ah,ch
  40d6bc:	enter  0x20,0x34
	...
  40d6e8:	inc    edx
  40d6e9:	repnz hlt 
  40d6eb:	call   0x153fe038
  40d6f0:	inc    ebx
  40d6f1:	icebp  
  40d6f2:	pop    ebp
  40d6f3:	js     0x40d70d
  40d6f5:	call   0x18d38004
  40d6fa:	push   0x4a2b4d
  40d6ff:	jle    0x40d683
  40d701:	std    
  40d702:	out    0x72,eax
  40d704:	jbe    0x40d6ed
  40d706:	inc    BYTE PTR [edx+0x15a9714a]
  40d70c:	mov    cs,WORD PTR [ecx]
  40d70e:	call   esp
  40d710:	xor    al,0xf1
  40d712:	jmp    0x40d774
  40d714:	fsub   st,st(7)
  40d716:	mov    BYTE PTR [edi+ebx*4-0x1a],ah
  40d71a:	inc    BYTE PTR [esi+0x27]
  40d71d:	daa    
  40d71e:	add    ecx,ebp
  40d720:	dec    eax
  40d721:	xchg   esi,eax
  40d722:	test   BYTE PTR [ebx],ch
  40d724:	mov    ecx,0x9099fee7
  40d729:	ins    BYTE PTR es:[edi],dx
  40d72a:	xchg   BYTE PTR [esi],ah
  40d72c:	cwde   
  40d72d:	xchg   ebp,eax
  40d72e:	test   BYTE PTR [ebx],ch
  40d730:	cdq    
  40d731:	out    0xfe,eax
  40d733:	mov    ecx,0xfb79d99
  40d738:	cwde   
  40d739:	out    0xe7,eax
  40d73b:	dec    ecx
  40d73c:	and    BYTE PTR [ecx],cl
  40d73e:	add    BYTE PTR [eax-0x2e],dh
  40d741:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d742:	std    
  40d743:	idiv   BYTE PTR [ecx+0x28]
  40d746:	pcmpgtw mm2,mm0
  40d749:	or     DWORD PTR [eax],eax
  40d74b:	jmp    0x40d750
	...
  40d774:	retf   
  40d775:	jge    0x40d738
  40d777:	fistp  WORD PTR [ecx-0x19]
  40d77a:	imul   bl
  40d77c:	cmp    BYTE PTR [ecx],cl
  40d77e:	add    cl,ch
  40d780:	dec    ecx
  40d781:	lea    eax,[edx+0xc3200]
  40d787:	lea    esi,[eax+0x29]
  40d78a:	push   eax
  40d78b:	push   0x41089d
  40d790:	or     dh,BYTE PTR [ebp+0x57]
  40d793:	add    BYTE PTR [edx],dh
  40d795:	out    0xbe,eax
  40d797:	jne    0x40d7c0
  40d799:	lds    eax,FWORD PTR [edi+0x1]
  40d79c:	and    cl,BYTE PTR [ecx*4-0x2261f6b]
  40d7a3:	(bad)  
  40d7a4:	jg     0x40d7f4
  40d7a6:	sub    al,0x50
  40d7a8:	pop    edx
  40d7a9:	scas   al,BYTE PTR es:[edi]
  40d7aa:	sub    al,BYTE PTR [ecx-0x1e]
  40d7ad:	ret    
  40d7ae:	pop    edx
  40d7af:	push   edi
  40d7b0:	loop   0x40d7bd
  40d7b2:	or     eax,eax
  40d7b4:	pop    es
  40d7b5:	adc    ecx,ebp
  40d7b7:	sub    al,0xf3
  40d7b9:	or     eax,DWORD PTR [eax]
  40d7bb:	push   edi
  40d7bd:	jmp    edi
  40d7bf:	mov    edx,0xbfddb52
  40d7c4:	jb     0x40d827
  40d7c6:	punpckhbw mm0,QWORD PTR [ecx+0x4]
  40d7ca:	inc    ecx
  40d7cb:	add    BYTE PTR [ebp+0x61],bh
  40d7ce:	adc    al,0xe8
  40d7d0:	aad    0x64
  40d7d2:	(bad)  
  40d7d3:	(bad)  
  40d7d4:	cmp    esi,esp
  40d7d6:	push   0x0
	...
  40d7ff:	add    BYTE PTR ds:0xe9e81461,bh
  40d805:	fs (bad) 
  40d807:	(bad)  
  40d808:	out    dx,eax
  40d809:	add    al,0xfe
  40d80c:	dec    ebp
  40d80d:	fisttp DWORD PTR [ebx+0x503d8e52]
  40d813:	call   0x3f3d05
  40d818:	sar    BYTE PTR [ebx],cl
  40d81a:	push   DWORD PTR [ebp+0x62]
  40d81d:	fdiv   DWORD PTR [ebx+0xc]
  40d820:	jge    0x40d881
  40d822:	or     al,ch
  40d824:	dec    ebx
  40d825:	ret    
  40d826:	icebp  
  40d827:	dec    BYTE PTR [ecx+ecx*8-0x78]
  40d82b:	test   BYTE PTR [eax+edx*8-0x26],al
  40d82f:	fmul   QWORD PTR [ebx-0x10]
  40d832:	add    cl,BYTE PTR [ebp-0x7b84f377]
  40d838:	div    DWORD PTR [esi-0x54c0110]
  40d83e:	xor    BYTE PTR [ecx+0x4b],al
  40d841:	xchg   DWORD PTR [esi-0xf7fea4d],esi
  40d847:	out    0x46,eax
  40d849:	sbb    BYTE PTR [eax+eax*1],al
  40d84c:	push   eax
  40d84d:	mov    al,0x77
  40d84f:	cs jae 0x40d875
  40d852:	sbb    al,0x41
  40d854:	dec    ebx
  40d855:	pop    edi
  40d856:	ja     0x40d86c
  40d858:	jecxz  0x40d8b9
  40d85a:	jl     0x40d85a
  40d85c:	in     al,0x6f
  40d85e:	mov    bh,0xb3
  40d860:	fld    QWORD PTR [edi-0xf]
  40d863:	dec    edi
	...
  40d88c:	jecxz  0x40d88d
  40d88e:	jp     0x40d88e
  40d890:	int3   
  40d891:	mov    al,ds:0x4f5b74ef
  40d896:	ja     0x40d8a4
  40d898:	sbb    esp,DWORD PTR [edi]
  40d89a:	ja     0x40d8a4
  40d89c:	mov    ds:0xacfeec1f,eax
  40d8a1:	dec    eax
  40d8a2:	cmp    DWORD PTR [ebp-0x4b0ed05c],eax
  40d8a8:	xlat   BYTE PTR ds:[ebx]
  40d8a9:	push   es
  40d8aa:	icebp  
  40d8ab:	(bad)  
  40d8ac:	mov    ds:0x4b0058c0,eax
  40d8b1:	jae    0x40d89f
  40d8b3:	add    ecx,edi
  40d8b5:	ret    
  40d8b6:	jnp    0x40d84c
  40d8b8:	mov    bh,0xe6
  40d8ba:	out    dx,eax
  40d8bb:	dec    BYTE PTR [eax+0x0]
  40d8be:	test   ecx,ebp
  40d8c0:	dec    ecx
  40d8c1:	mov    es,WORD PTR [ecx+0x5a093539]
  40d8c7:	ja     0x40d912
  40d8c9:	repnz sub BYTE PTR [edx+edx*8+0x25],bl
  40d8ce:	sub    BYTE PTR [esp+ecx*2],al
  40d8d1:	pushf  
  40d8d2:	xchg   esp,eax
  40d8d3:	icebp  
  40d8d4:	inc    ebp
  40d8d5:	out    0xd0,al
  40d8d7:	nop
  40d8d8:	xchg   ebp,eax
  40d8d9:	or     ecx,ebp
  40d8db:	push   ebx
  40d8dc:	mov    ds:0x4b42f58c,eax
  40d8e1:	out    0x73,al
  40d8e3:	mov    bh,0x26
  40d8e5:	out    0xa5,al
  40d8e7:	fcmovne st,st(6)
  40d8e9:	cmp    eax,0x717b03e9
  40d8ee:	jnp    0x40d920
	...
  40d918:	mov    cl,BYTE PTR [ecx]
  40d91a:	mov    ?,WORD PTR [esi-0xf7a1948]
  40d920:	in     al,0x63
  40d922:	push   ss
  40d923:	add    al,0x4b
  40d925:	inc    ebx
  40d926:	adc    ch,bh
  40d928:	lods   al,BYTE PTR ds:[esi]
  40d929:	pop    ebx
  40d92a:	loope  0x40d928
  40d92c:	cli    
  40d92d:	pop    ebx
  40d92e:	in     eax,dx
  40d92f:	cld    
  40d930:	adc    ebx,DWORD PTR [ebp+0xf]
  40d933:	pop    esp
  40d934:	cwde   
  40d935:	xor    BYTE PTR [eax-0xaa433fd],ch
  40d93b:	fld    TBYTE PTR [edi]
  40d93d:	xchg   ecx,eax
  40d93e:	inc    ebp
  40d93f:	lock mov ebp,0xb5f1749b
  40d945:	in     eax,0x98
  40d947:	fcmovnu st,st(7)
  40d949:	nop
  40d94a:	sub    eax,0x9be614f0
  40d94f:	adc    ebx,DWORD PTR [ebx+ebx*2+0x5b9453ed]
  40d956:	loope  0x40d933
  40d958:	mov    dl,ah
  40d95a:	or     eax,0x6cab6cf0
  40d95f:	lock jge 0x40d8f5
  40d962:	arpl   bp,ax
  40d964:	jbe    0x40d94b
  40d966:	push   ebp
  40d968:	sbb    esi,esp
  40d96a:	mov    ah,0x2d
  40d96c:	pop    edx
  40d96d:	out    0xfe,al
  40d96f:	rcl    DWORD PTR [eax+0x3f],1
  40d972:	add    cl,ch
  40d974:	ret    
  40d975:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d976:	push   cs
  40d977:	ins    BYTE PTR es:[edi],dx
  40d978:	shl    esi,cl
  40d97a:	dec    dh
	...
  40d9a4:	xor    al,0x9e
  40d9a6:	mov    ebx,0xe7e42cc7
  40d9ab:	out    dx,eax
  40d9ac:	sahf   
  40d9ad:	or     DWORD PTR [eax],eax
  40d9af:	mov    dh,0xf2
  40d9b1:	pushf  
  40d9b2:	std    
  40d9b3:	scas   al,BYTE PTR es:[edi]
  40d9b4:	xor    al,0xed
  40d9b6:	je     0x40da25
  40d9b8:	sub    al,0xe4
  40d9ba:	enter  0x3fab,0x9
  40d9be:	push   ebp
  40d9bf:	bound  ebp,QWORD PTR [ebx]
  40d9c1:	in     al,0x74
  40d9c3:	(bad)  
  40d9c5:	pop    ebp
  40d9c6:	adc    BYTE PTR [esi-0xb00ea7e],al
  40d9cc:	lock in al,dx
  40d9ce:	ret    
  40d9cf:	je     0x40d9ad
  40d9d1:	jecxz  0x40d99b
  40d9d3:	stos   DWORD PTR es:[edi],eax
  40d9d4:	dec    ebx
  40d9d5:	or     DWORD PTR [ebp+0x72],edx
  40d9d8:	jmp    0x40d961
  40d9da:	ret    
  40d9db:	pop    ecx
  40d9dc:	jl     0x40d9c2
  40d9de:	je     0x40d9c5
  40d9e0:	lock outs dx,BYTE PTR ds:[esi]
  40d9e2:	mov    DWORD PTR [esi-0x4c],ecx
  40d9e5:	xadd   BYTE PTR [ebx+edx*2+0x4b2bc944],bh
  40d9ed:	or     edi,edi
  40d9ef:	mov    esp,0x6054f158
  40d9f4:	mov    ah,0xe3
  40d9f6:	or     ch,BYTE PTR [ecx]
  40d9f8:	and    cl,BYTE PTR [esi]
  40d9fa:	pop    edi
  40d9fb:	xor    BYTE PTR [ecx+0x12160010],cl
  40da01:	adc    eax,0xe305f0e8
  40da06:	inc    BYTE PTR [eax]
	...
  40da30:	jns    0x40d9fa
  40da32:	jae    0x40da43
  40da34:	ficom  DWORD PTR [edi-0xc9dbeda]
  40da3a:	jae    0x40da48
  40da3c:	dec    edx
  40da3d:	fwait
  40da3e:	test   edi,edi
  40da40:	gs mov edi,0xf3626a08
  40da46:	jae    0x40da54
  40da48:	mov    al,BYTE PTR [edx+0x6515ff85]
  40da4e:	inc    esp
  40da4f:	hlt    
  40da50:	call   0x73f3:0x22413f30
  40da57:	hlt    
  40da58:	or     dl,BYTE PTR [edx+0x64f5ff85]
  40da5e:	inc    esp
  40da5f:	clc    
  40da60:	cmp    bh,BYTE PTR [edi-0x3fddff05]
  40da66:	add    eax,DWORD PTR [ebp+esi*4-0x29ba780e]
  40da6d:	aas    
  40da6e:	add    BYTE PTR [eax],dl
  40da70:	repnz pop es
  40da72:	call   0xfe343c6f
  40da77:	mov    DWORD PTR [edi],ebx
  40da79:	(bad)  
  40da7b:	jne    0x40dad7
  40da7d:	shr    BYTE PTR [eax+0x9f36588],0xc0
  40da84:	in     eax,0x8b
  40da86:	mov    ebx,0xff07e200
  40da8b:	jne    0x40daa7
  40da8d:	inc    eax
  40da8e:	call   0xff488d90
  40da93:	jne    0x40da95
	...
  40dab9:	add    BYTE PTR [eax],al
  40dabb:	add    BYTE PTR [esi-0x40],dh
  40dabe:	adc    BYTE PTR [ebp-0x5e],0x7
  40dac2:	cmp    eax,0xffffffb0
  40dac5:	loop   0x40da4b
  40dac7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dac8:	mov    dl,0x7
  40daca:	add    BYTE PTR [ebx+0x3f7ef3b7],cl
  40dad0:	dec    ebx
  40dad1:	repnz std 
  40dad3:	and    ebx,0xfffffff1
  40dad6:	add    al,BYTE PTR [eax]
  40dad8:	repz cdq 
  40dada:	sub    eax,0xda7b4b41
  40dadf:	cmp    DWORD PTR ds:0x8b0b02f2,edx
  40dae5:	pop    ebp
  40dae6:	jbe    0x40dae7
  40dae8:	(bad)  
  40dae9:	jmp    0xf285da49
  40daee:	add    bh,bh
  40daf0:	(bad)  
  40daf1:	rcr    DWORD PTR [ebx-0x4b],0x73
  40daf5:	xor    DWORD PTR [eax+ebp*2],eax
  40daf8:	mov    al,ds:0x9c00430b
  40dafd:	mov    eax,0xf04b5532
  40db02:	idiv   DWORD PTR [edi+0x74ecf89f]
  40db08:	and    esi,edi
  40db0a:	add    ch,BYTE PTR [eax+0x7b]
  40db0d:	ret    
  40db0e:	inc    ecx
  40db0f:	add    BYTE PTR [eax+ecx*4+0x36],dh
  40db13:	push   ebp
  40db14:	dec    ebx
  40db15:	lock jg 0x40db0f
  40db18:	dec    edx
  40db19:	in     eax,0x35
  40db1b:	(bad)  
  40db1c:	jle    0x40db7e
  40db1e:	in     eax,dx
  40db1f:	je     0x40db21
	...
  40db45:	add    BYTE PTR [eax],al
  40db47:	add    bh,dh
  40db49:	mov    cl,ch
  40db4b:	test   esp,esp
  40db4d:	jae    0x40dba3
  40db4f:	mov    edi,ebx
  40db51:	aaa    
  40db52:	sti    
  40db53:	jg     0x40db66
  40db55:	adc    esi,DWORD PTR [edi+0x3]
  40db58:	add    eax,0x50424eef
  40db5d:	push   ds
  40db5e:	js     0x40db65
  40db60:	retf   
  40db61:	push   es
  40db62:	add    al,0x75
  40db64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db65:	and    esi,DWORD PTR [edi+0x10]
  40db68:	sbb    ebx,DWORD PTR [ebx]
  40db6a:	ja     0x40db74
  40db6c:	mov    bl,0x2b
  40db6e:	out    dx,al
  40db6f:	(bad)  
  40db70:	pushf  
  40db71:	or     DWORD PTR [ecx],edx
  40db73:	xor    eax,ecx
  40db75:	loop   0x40db94
  40db77:	fnstcw WORD PTR [esi]
  40db79:	loop   0x40db16
  40db7b:	adc    eax,DWORD PTR [esp+ebx*2+0x10f7ed19]
  40db82:	adc    DWORD PTR [edx-0x10021d8a],esi
  40db88:	cmp    ecx,ecx
  40db8a:	das    
  40db8b:	in     eax,dx
  40db8c:	gs loop 0x40db7c
  40db8f:	icebp  
  40db90:	scas   al,BYTE PTR es:[edi]
  40db91:	and    esi,ebp
  40db93:	cld    
  40db94:	iret   
  40db95:	jno    0x40db75
  40db97:	in     al,dx
  40db98:	dec    ebp
  40db99:	loop   0x40dbf6
  40db9b:	clc    
  40db9c:	sub    al,0x10
  40db9e:	push   0xffffffec
  40dba0:	cmp    eax,0x2cf43be2
  40dba5:	or     BYTE PTR [edx-0x14],ch
  40dba8:	sub    eax,0xec3be2
	...
  40dbd1:	add    BYTE PTR [eax],al
  40dbd3:	add    BYTE PTR [eax+eiz*8],ch
  40dbd6:	push   0xffffffec
  40dbd8:	sbb    eax,0x2cf01be2
  40dbdd:	fsubr  DWORD PTR [edx-0x14]
  40dbe0:	or     eax,0x4141be2
  40dbe5:	pop    esp
  40dbe6:	fucomp st(4)
  40dbe8:	ja     0x40dbfb
  40dbea:	xchg   ecx,eax
  40dbeb:	jno    0x40dbe2
  40dbed:	loope  0x40dc6c
  40dbef:	dec    esp
  40dbf0:	add    al,bh
  40dbf2:	in     al,0x3
  40dbf4:	jle    0x40db84
  40dbf6:	jl     0x40db78
  40dbf8:	or     cl,dh
  40dbfa:	gs jbe 0x40dc3c
  40dbfd:	loop   0x40dbd2
  40dbff:	adc    esp,ebx
  40dc01:	outs   dx,DWORD PTR ds:[esi]
  40dc02:	mov    esp,0x290e4b03
  40dc07:	ja     0x40dc1d
  40dc09:	outs   dx,DWORD PTR ds:[esi]
  40dc0a:	jmp    0xa863076a
  40dc0f:	add    ebp,DWORD PTR [ebx+ebx*2+0x5cb7d900]
  40dc16:	or     al,0x41
  40dc18:	fisttp WORD PTR [esi+edi*8+0x73a19326]
  40dc1f:	test   al,0xf8
  40dc21:	cmp    al,ch
  40dc23:	pushf  
  40dc24:	add    al,0xe3
  40dc26:	(bad)  
  40dc27:	loop   0x40dbb1
  40dc29:	push   ebp
  40dc2a:	xor    DWORD PTR [eax+0xd],esi
  40dc2d:	icebp  
  40dc2e:	imul   esp,ebx,0xf685f490
  40dc34:	jo     0x40dc44
  40dc36:	shl    BYTE PTR [ebp+0x0],0x0
	...
  40dc5e:	add    BYTE PTR [eax],al
  40dc60:	push   ebx
  40dc61:	loop   0x40dcd7
  40dc63:	add    edi,edi
  40dc65:	lock and DWORD PTR [edi+0x60],0xffffffe2
  40dc6a:	dec    edi
  40dc6b:	(bad)  
  40dc6c:	mov    edx,0xbace4ff1
  40dc71:	adc    eax,ebp
  40dc73:	adc    ah,BYTE PTR [ecx]
  40dc75:	loopne 0x40dc75
  40dc77:	shl    DWORD PTR [eax+0x30b6fe8b],1
  40dc7d:	push   esi
  40dc7e:	call   0xfecc7544
  40dc83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc84:	neg    DWORD PTR [edx-0x7e]
  40dc87:	sahf   
  40dc88:	and    BYTE PTR [ecx+0x0],ch
  40dc8b:	loope  0x40dcd5
  40dc8d:	or     eax,ebp
  40dc8f:	push   cs
  40dc90:	(bad)
  40dc93:	jo     0x40dc1f
  40dc95:	loope  0x40dc23
  40dc97:	and    al,0xe3
  40dc99:	push   eax
  40dc9a:	(bad)  
  40dc9b:	cld    
  40dc9c:	cmp    al,ah
  40dc9e:	je     0x40dc7d
  40dca0:	add    BYTE PTR [edi+0x1448e953],dl
  40dca6:	rcl    ah,0x58
  40dca9:	enter  0x5944,0x4f
  40dcad:	or     DWORD PTR [eax],eax
  40dcaf:	jmp    0x135223d
  40dcb4:	or     eax,0x9800000c
  40dcb9:	or     al,0x6a
  40dcbb:	add    BYTE PTR [eax-0xff95f4],cl
  40dcc1:	dec    ecx
  40dcc2:	hlt    
  40dcc3:	push   eax
	...
  40dcec:	ins    DWORD PTR es:[edi],dx
  40dced:	pop    edx
  40dcee:	clc    
  40dcef:	push   DWORD PTR [edi+0x5e75fddc]
  40dcf5:	mov    ebp,0xc72548e
  40dcfa:	or     eax,eax
  40dcfc:	test   BYTE PTR ds:0x97da3aeb,0x26
  40dd03:	inc    ecx
  40dd04:	jb     0x40dcf9
  40dd06:	jae    0x40dd18
  40dd08:	dec    edx
  40dd09:	fwait
  40dd0a:	cmp    edi,0x6d
  40dd0d:	repz jae 0x40dd08
  40dd10:	adc    bh,BYTE PTR [ebp-0xce27a01]
  40dd16:	xchg   DWORD PTR [ebp-0x2],eax
  40dd19:	bnd jae 0x40dd34
  40dd1c:	or     eax,0x77ff1459
  40dd21:	sar    ebp,0x75
  40dd24:	cs repz jae 0x40dd30
  40dd28:	or     cl,BYTE PTR ds:0xf2edffff
  40dd2e:	jae    0x40dd1c
  40dd30:	mov    edx,0xddff7fc2
  40dd35:	repnz inc ebx
  40dd37:	lock leave 
  40dd39:	xchg   edx,eax
  40dd3a:	std    
  40dd3b:	jne    0x40dd0b
  40dd3d:	ret    
  40dd3e:	cmp    dl,BYTE PTR [edx+eiz*8+0xb]
  40dd42:	push   DWORD PTR [ebp+0x5a]
  40dd45:	(bad)  
  40dd46:	fadd   DWORD PTR [ecx-0x3d380c93]
  40dd4c:	(bad)  
  40dd4d:	or     edx,DWORD PTR [ebp-0x75]
	...
  40dd78:	jle    0x40dcff
  40dd7a:	ret    0x4bf4
  40dd7d:	cmp    dl,ch
  40dd7f:	(bad)  
  40dd80:	xor    edx,esi
  40dd82:	pop    esp
  40dd83:	and    al,0xb4
  40dd85:	pushf  
  40dd86:	cli    
  40dd87:	out    0xb2,eax
  40dd89:	lahf   
  40dd8a:	jmp    0xe6edb08d
  40dd8f:	mov    BYTE PTR [esi-0x1d],0x29
  40dd93:	inc    ecx
  40dd94:	dec    ebx
  40dd95:	repnz add al,BYTE PTR [eax]
  40dd98:	dec    ebx
  40dd99:	ins    DWORD PTR es:[edi],dx
  40dd9a:	xor    dh,0x85
  40dd9d:	imul   cl
  40dd9f:	dec    edi
  40dda0:	repz in eax,0x3
  40dda3:	add    BYTE PTR [ebx-0x6],cl
  40dda6:	jne    0x40ddfb
  40dda8:	dec    ebx
  40dda9:	repnz pop edx
  40ddab:	stc    
  40ddac:	and    al,0xb1
  40ddae:	add    ch,BYTE PTR [eax+0x5a]
  40ddb1:	scas   al,BYTE PTR es:[edi]
  40ddb2:	inc    ebx
  40ddb3:	add    bl,ah
  40ddb5:	fiadd  DWORD PTR [edx+0x41]
  40ddb8:	dec    ebx
  40ddb9:	mov    edi,0x3172422e
  40ddbe:	add    al,0xff
  40ddc0:	mov    dh,0xe8
  40ddc2:	fisub  DWORD PTR [edi+0x67e8c835]
  40ddc8:	xor    ah,al
  40ddca:	inc    ecx
  40ddcb:	add    BYTE PTR [ebx+0x4b4128a1],dh
  40ddd1:	dec    eax
  40ddd2:	std    
  40ddd3:	aas    
  40ddd4:	mov    dh,al
  40ddd6:	pop    edx
  40ddd7:	add    cl,BYTE PTR [ebx-0x10]
  40ddda:	cmp    dh,0x0
	...
  40de01:	add    BYTE PTR [eax],al
  40de03:	add    BYTE PTR [esi-0x18],bh
  40de06:	fimul  DWORD PTR [ebx-0x73177003]
  40de0c:	into   
  40de0d:	pop    edi
  40de0e:	jmp    0x7815:0xdc00ecfe
  40de15:	lock add bh,bh
  40de18:	push   esi
  40de19:	ins    BYTE PTR es:[edi],dx
  40de1a:	jmp    0x514a2193
  40de1f:	ror    DWORD PTR [esi-0x22],cl
  40de22:	pop    ebp
  40de23:	mov    ebx,0x4ee9058a
  40de28:	shr    ch,1
  40de2a:	sar    BYTE PTR [bx+si+0x45df],0xe9
  40de30:	and    cl,BYTE PTR [ecx]
  40de32:	rcr    DWORD PTR [esi],cl
  40de34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de35:	push   esp
  40de36:	loope  0x40de13
  40de38:	sbb    bl,BYTE PTR [edi+0x2e]
  40de3b:	jmp    0x5e662303
  40de40:	xor    ecx,esi
  40de42:	popf   
  40de43:	jle    0x40ddca
  40de45:	fsubrp st(1),st
  40de47:	ret    
  40de48:	clc    
  40de49:	and    al,0x81
  40de4b:	jmp    0xf563:0x53e94835
  40de52:	arpl   cx,bp
  40de54:	cmp    DWORD PTR gs:[ecx+0x2eee3b03],eax
  40de5b:	pop    esp
  40de5c:	push   ss
  40de5d:	dec    ecx
  40de5e:	sub    BYTE PTR [ebx+edi*8],al
  40de61:	fst    QWORD PTR [ebx-0x4]
  40de64:	sub    al,0xbd
  40de66:	mov    ebp,eax
	...
  40de90:	cmp    eax,0x3582e0f1
  40de95:	fisubr WORD PTR [ebp+0x281e79fe]
  40de9b:	add    al,0x4a
  40de9d:	or     ecx,ebp
  40de9f:	add    ecx,esi
  40dea1:	xor    DWORD PTR [ebp+0x38de15e9],0x5c
  40dea8:	inc    edi
  40dea9:	or     cl,ch
  40deab:	add    esi,ebx
  40dead:	fwait
  40deae:	cmp    al,BYTE PTR [ebx+ecx*2]
  40deb1:	jno    0x40de43
  40deb3:	sub    BYTE PTR [edx+0x2df31109],cl
  40deb9:	dec    eax
  40deba:	jmp    0x8a2f1a
  40debf:	sub    BYTE PTR [edi-0x22],al
  40dec2:	xor    al,0x2b
  40dec4:	xor    BYTE PTR [eax+0x0],cl
  40dec7:	pop    bp
  40dec9:	adc    eax,ebp
  40decb:	pop    ebx
  40decc:	lods   eax,DWORD PTR ds:[esi]
  40decd:	fdivp  st(6),st
  40decf:	shl    DWORD PTR [ecx+0x10e9411e],0xd8
  40ded6:	ds test al,0x48
  40ded9:	jno    0x40dee6
  40dedb:	test   eax,0xeb680909
  40dee0:	dec    eax
  40dee1:	or     DWORD PTR [eax-0x17eedad2],eax
  40dee7:	aas    
  40dee8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dee9:	fdivp  st(6),st
  40deeb:	ins    BYTE PTR es:[edi],dx
  40deec:	add    eax,0x7316fdd7
  40def1:	dec    ebp
  40def2:	call   0x40df80
	...
  40df1b:	add    BYTE PTR [esi],bl
  40df1d:	or     DWORD PTR [eax],eax
  40df1f:	push   es
  40df20:	fstp   st(4)
  40df22:	(bad)  
  40df23:	je     0x40df85
  40df25:	in     eax,0x1a
  40df27:	ja     0x40df9c
  40df29:	fmulp  st(0),st
  40df2b:	sub    edx,DWORD PTR [ebp+ebx*8+0x53]
  40df2f:	jb     0x40dfa4
  40df31:	mov    bl,al
  40df33:	aad    0x2d
  40df35:	fdiv   st(6),st
  40df37:	inc    ebx
  40df38:	inc    edi
  40df39:	outs   dx,DWORD PTR ds:[esi]
  40df3a:	es into 
  40df3c:	mov    edx,0xa285e811
  40df41:	fdiv   st(6),st
  40df43:	jo     0x40decf
  40df45:	ffree  st(6)
  40df47:	in     al,dx
  40df48:	pop    ecx
  40df49:	sbb    al,0x41
  40df4b:	jmp    0xe940e898
  40df50:	xchg   ebx,eax
  40df51:	test   esi,esi
  40df53:	lahf   
  40df54:	in     al,dx
  40df55:	fisttp DWORD PTR [edi+0x1]
  40df58:	dec    ebx
  40df59:	or     al,BYTE PTR [eax]
  40df5b:	jmp    0x92f670
  40df60:	loop   0x40df6a
  40df62:	push   0x463258
  40df67:	push   0x414524
  40df6c:	dec    edx
  40df6d:	loopne 0x40dfad
  40df6f:	inc    ecx
  40df70:	loop   0x40df55
  40df72:	xor    eax,DWORD PTR [edx+0x5b]
  40df75:	inc    esi
  40df76:	add    bh,bh
  40df78:	lahf   
  40df79:	loopne 0x40df61
  40df7b:	imul   eax,DWORD PTR [edi],0xffffffe4
  40df7e:	std    
  40df7f:	push   0x0
	...
  40dfa8:	jmp    0x4016:0x7a004148
  40dfaf:	inc    ecx
  40dfb0:	mov    dl,0x40
  40dfb2:	or     eax,DWORD PTR [eax-0x1d]
  40dfb5:	or     BYTE PTR [eax+0x2],ch
  40dfb8:	mov    ds:0xdfff8008,al
  40dfbd:	loopne 0x40dfa5
  40dfbf:	dec    edi
  40dfc0:	push   edi
  40dfc1:	in     al,0xfd
  40dfc3:	(bad)  
  40dfc4:	out    dx,eax
  40dfc5:	jmp    0x40dfc3
  40dfc7:	inc    DWORD PTR [ebp+0x35]
  40dfca:	call   0x49a3a8
  40dfcf:	(bad)  
  40dfd0:	(bad)  
  40dfd2:	std    
  40dfd3:	jne    0x40e03f
  40dfd5:	rcl    BYTE PTR [edx-0x381c9a83],0xc2
  40dfdc:	or     BYTE PTR cs:[ebp-0x75],dl
  40dfe0:	push   es
  40dfe1:	test   edx,eax
  40dfe3:	hlt    
  40dfe4:	add    al,0xe3
  40dfe6:	std    
  40dfe7:	push   0x22
  40dfe9:	inc    edx
  40dfea:	daa    
  40dfeb:	call   FWORD PTR [edi-0x23]
  40dfee:	out    0x35,al
  40dff0:	push   edi
  40dff1:	in     al,0xfd
  40dff3:	mov    DWORD PTR [edi-0xf],ebp
  40dff6:	lds    eax,FWORD PTR ds:0x4122f1
  40dffc:	repnz pop es
  40dffe:	add    BYTE PTR [eax],al
  40e000:	dec    ebx
  40e001:	gs xor dh,0xf5
  40e005:	mov    ah,ch
  40e007:	dec    edi
  40e008:	arpl   si,bp
  40e00a:	add    eax,DWORD PTR [eax]
	...
  40e034:	dec    ebx
  40e035:	jp     0x40dfcc
  40e037:	push   eax
  40e038:	dec    ebx
  40e039:	repnz pop edx
  40e03b:	jb     0x40dfc8
  40e03d:	xor    DWORD PTR [eax+ebp*2],eax
  40e040:	pop    edi
  40e041:	mov    dl,0x43
  40e043:	add    BYTE PTR [ebx],dh
  40e045:	xlat   BYTE PTR ds:[ebx]
  40e046:	inc    edx
  40e047:	inc    ecx
  40e048:	dec    ebx
  40e049:	xor    esi,DWORD PTR [eax]
  40e04b:	inc    edx
  40e04c:	bound  esi,QWORD PTR [ecx-0x25c900fe]
  40e052:	(bad)  
  40e054:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e055:	sbb    ah,dh
  40e057:	sbb    DWORD PTR [bp+si+0x43],esi
  40e05c:	and    ebx,DWORD PTR [esi+0x7a4b4142]
  40e062:	stc    
  40e063:	aas    
  40e064:	or     dh,dl
  40e066:	pop    edx
  40e067:	add    cl,BYTE PTR [ebx-0xe]
  40e06a:	cmp    dh,0xfe
  40e06d:	jmp    0x2b0a84c
  40e072:	out    0x8c,al
  40e074:	into   
  40e075:	shl    bl,cl
  40e077:	(bad)  
  40e078:	pop    esp
  40e079:	sbb    edx,0x2f1fa51
  40e07f:	call   esi
  40e081:	in     eax,0xe4
  40e083:	je     0x40e0d8
  40e085:	mov    eax,0xb43c7cf6
  40e08a:	mov    edx,0x4df04fc1
  40e08f:	mov    ebx,DWORD PTR [edi]
  40e091:	jb     0x40e053
  40e093:	repz and eax,0x69e49c
	...
  40e0bd:	add    BYTE PTR [eax],al
  40e0bf:	add    BYTE PTR [ebx+0x46],cl
  40e0c2:	sbb    al,0xff
  40e0c4:	sahf   
  40e0c5:	call   0x9d08ea4
  40e0ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0cb:	in     eax,0xd3
  40e0cd:	inc    esp
  40e0ce:	popf   
  40e0cf:	mov    ebp,0x42d61647
  40e0d4:	dec    ebx
  40e0d5:	or     ecx,ebp
  40e0d7:	add    ecx,DWORD PTR [ebx-0x74]
  40e0da:	imul   ebp,ebp,0xffffffe6
  40e0dd:	fidivr DWORD PTR [ebp+0x54]
  40e0e0:	jae    0x40e0e7
  40e0e2:	call   0xc1322bea
  40e0e7:	push   edx
  40e0e8:	dec    ebx
  40e0e9:	or     ecx,edx
  40e0eb:	jns    0x40e071
  40e0ed:	dec    eax
  40e0ee:	jmp    0xa88aaa4e
  40e0f3:	add    esp,DWORD PTR [ebx]
  40e0f5:	push   cs
  40e0f6:	test   eax,0xfbda4b42
  40e0fb:	inc    ecx
  40e0fc:	jb     0x40e146
  40e0fe:	jmp    0x4151f8e7
  40e103:	inc    edi
  40e104:	xchg   edi,eax
  40e105:	fisubr DWORD PTR ds:0xa849c15c
  40e10b:	add    esi,ebx
  40e10d:	xchg   BYTE PTR [eax-0x1d8eb4be],ch
  40e113:	inc    ebx
  40e114:	or     cl,BYTE PTR [ecx]
  40e116:	add    DWORD PTR [ecx],0xe569094b
  40e11c:	fist   WORD PTR [eax]
  40e11e:	adc    DWORD PTR [ebx+0x5f],eax
  40e121:	(bad)  
  40e123:	jbe    0x40e125
	...
  40e149:	add    BYTE PTR [eax],al
  40e14b:	add    bh,cl
  40e14d:	shr    dh,cl
  40e14f:	in     al,0x4d
  40e151:	cmp    ecx,edx
  40e153:	mov    eax,0xe4e90994
  40e158:	mov    bh,0xdd
  40e15a:	aad    0x6e
  40e15c:	inc    ebx
  40e15d:	icebp  
  40e15e:	data16 addr16 sub al,0xda
  40e162:	scas   eax,DWORD PTR es:[edi]
  40e163:	ror    DWORD PTR [eax+0x9],0x14
  40e167:	jns    0x40e199
  40e169:	xchg   bh,bh
  40e16b:	lods   al,BYTE PTR ds:[esi]
  40e16c:	sub    al,0x70
  40e16e:	add    BYTE PTR [ebx+0x30],al
  40e171:	fidiv  DWORD PTR [ecx+esi*8+0x20]
  40e175:	xor    BYTE PTR [esi+ebx*4-0x19],bh
  40e179:	nop
  40e17a:	inc    esp
  40e17b:	xchg   ebp,eax
  40e17c:	xchg   edx,eax
  40e17d:	or     DWORD PTR [eax+0x3e],ebp
  40e180:	mov    BYTE PTR [eax+0x0],cl
  40e183:	adc    esp,ecx
  40e185:	sbb    DWORD PTR [ecx-0x17],eax
  40e188:	out    0x14,eax
  40e18a:	inc    edx
  40e18b:	ror    BYTE PTR [ecx-0x368617f7],0xda
  40e192:	(bad)  
  40e193:	repnz mov BYTE PTR [ebp+0x19],dl
  40e197:	mov    ecx,0x46000920
  40e19c:	out    dx,al
  40e19d:	popa   
  40e19e:	mov    edi,0x500909a9
  40e1a3:	inc    esi
  40e1a4:	xor    eax,0xeb6ee811
  40e1a9:	(bad)  
  40e1ab:	inc    ecx
  40e1ac:	jecxz  0x40e209
  40e1ae:	jmp    FWORD PTR [esi]
	...
  40e1d8:	repnz or BYTE PTR [eax+0x5f],ch
  40e1dc:	or     BYTE PTR [eax+0x0],cl
  40e1df:	xchg   ecx,eax
  40e1e0:	lds    ebx,FWORD PTR [ecx]
  40e1e2:	inc    ecx
  40e1e3:	jmp    0xc082f657
  40e1e8:	or     DWORD PTR [ecx],ecx
  40e1ea:	call   0xff1bab34
  40e1ef:	repnz mov BYTE PTR [ebp+0x19],dl
  40e1f3:	cdq    
  40e1f4:	lock or BYTE PTR [eax],al
  40e1f7:	(bad)  
  40e1f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1f9:	popa   
  40e1fa:	mov    edi,0x50098e29
  40e1ff:	fisub  WORD PTR [edx-0x13cd17ff]
  40e205:	xlat   BYTE PTR ds:[ebx]
  40e206:	inc    cl
  40e208:	rcl    BYTE PTR [esi-0x1],0x0
  40e20c:	or     eax,0xddfc73ed
  40e211:	xor    cl,BYTE PTR [eax]
  40e213:	call   0x401af0
  40e218:	jmp    0x40e1e9
  40e21a:	add    al,BYTE PTR [eax]
  40e21c:	inc    edi
  40e21d:	mov    dl,ch
  40e21f:	and    DWORD PTR [esi+0x485754e9],0xd
  40e226:	push   0x2a
  40e228:	mov    ebp,0x6ee80832
  40e22d:	cmp    bh,bh
  40e22f:	call   FWORD PTR [ebx+0x42]
  40e232:	cld    
  40e233:	push   0xffffffe2
  40e235:	in     al,0xa7
  40e237:	sbb    BYTE PTR [ebp-0x14],0x9
  40e23b:	rol    BYTE PTR [eax],0x0
	...
  40e262:	add    BYTE PTR [eax],al
  40e264:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e265:	aad    0x4e
  40e267:	push   0xbeef0cb2
  40e26c:	mov    cl,al
  40e26e:	ds inc ecx
  40e270:	mov    ds:0x9a75ff1c,al
  40e275:	in     al,0xf
  40e277:	mov    ds:0x3de6ec5d,eax
  40e27c:	fsub   st(3),st
  40e27e:	std    
  40e27f:	mov    edx,DWORD PTR [edi+0x72412817]
  40e285:	xchg   DWORD PTR [ebx],edi
  40e287:	pop    edi
  40e288:	call   0x740c:0x9d80004d
  40e28f:	inc    ebp
  40e290:	retf   0x3e95
  40e293:	inc    ecx
  40e294:	jb     0x40e2a9
  40e296:	call   0x4da558
  40e29b:	or     esp,DWORD PTR [edx]
  40e29d:	xor    DWORD PTR [edi],ebx
  40e29f:	push   esi
  40e2a0:	dec    edx
  40e2a1:	in     eax,dx
  40e2a2:	test   edi,edi
  40e2a4:	sub    eax,0x3200681c
  40e2a9:	fstp   TBYTE PTR [eax+ebp*2+0x4142ae4b]
  40e2b0:	dec    ebx
  40e2b1:	adc    ah,bl
  40e2b3:	je     0x40e308
  40e2b5:	mov    edx,0x971ca1b4
  40e2ba:	jmp    0x4aea:0xe19f96fd
  40e2c1:	xor    BYTE PTR [ebp+edi*1+0x45ddf54b],al
	...
  40e2f0:	push   DWORD PTR [edx+0x7ef4b8c2]
  40e2f6:	loope  0x40e2f6
  40e2f8:	stc    
  40e2f9:	pop    ss
  40e2fa:	sbb    eax,DWORD PTR [edi]
  40e2fc:	pop    esi
  40e2fd:	dec    ebx
  40e2fe:	loop   0x40e374
  40e300:	fist   WORD PTR [esi+0x58]
  40e303:	or     bl,ah
  40e305:	sti    
  40e306:	pop    esi
  40e307:	dec    esp
  40e309:	push   es
  40e30a:	inc    edx
  40e30b:	leave  
  40e30c:	mov    ebp,esp
  40e30e:	add    dl,BYTE PTR [ebp-0x30]
  40e311:	inc    ebp
  40e312:	xchg   bl,al
  40e314:	mov    bh,0x97
  40e316:	cmp    DWORD PTR [edx+0x4b],ebp
  40e319:	int3   
  40e31a:	sub    eax,0xeada1eff
  40e31f:	stc    
  40e320:	and    DWORD PTR [edi],edx
  40e322:	loop   0x40e2ac
  40e324:	push   cs
  40e325:	push   ds
  40e326:	mov    ?,WORD PTR [eax+esi*8]
  40e329:	or     DWORD PTR [ebp+0x0],eax
  40e32c:	shr    ah,1
  40e32e:	inc    ecx
  40e32f:	sub    BYTE PTR [edx],cl
  40e331:	loop   0x40e2b5
  40e333:	ds dec ebx
  40e335:	jbe    0x40e37e
  40e337:	push   0x43a15f
  40e33c:	cld    
  40e33d:	stc    
  40e33e:	and    DWORD PTR [eax+0x4b],edx
  40e341:	loop   0x40e350
  40e343:	rcr    bh,0xbe
  40e346:	cmp    al,ch
  40e348:	jmp    0x9c3fc5bb
  40e34d:	or     DWORD PTR [ecx+0x4],edx
  40e350:	dec    ebx
  40e351:	out    0x9e,al
  40e353:	ins    BYTE PTR es:[edi],dx
	...
  40e37c:	adc    eax,0x9b04284a
  40e381:	(bad)  
  40e382:	push   ebx
  40e383:	or     al,0x33
  40e385:	ds mov esp,ecx
  40e388:	sbb    eax,0x145f68e2
  40e38d:	xlat   BYTE PTR ds:[ebx]
  40e38e:	rol    DWORD PTR [ebx],0x85
  40e391:	mov    esi,ebp
  40e393:	add    edi,DWORD PTR [esi-0x2d]
  40e396:	cs loopne 0x40e3d2
  40e399:	leave  
  40e39a:	pop    edi
  40e39b:	loope  0x40e392
  40e39d:	(bad)  
  40e39e:	xchg   ebp,eax
  40e39f:	(bad)  
  40e3a0:	sahf   
  40e3a1:	adc    esi,esp
  40e3a3:	push   esi
  40e3a4:	mov    al,ds:0xdddffbd6
  40e3a9:	pop    esp
  40e3aa:	icebp  
  40e3ab:	jmp    0x40e39d
  40e3ad:	push   ebx
  40e3ae:	jbe    0x40e391
  40e3b0:	ins    DWORD PTR es:[edi],dx
  40e3b1:	aaa    
  40e3b2:	mov    al,ds:0xbc0948c6
  40e3b7:	mov    WORD PTR [eax+0x22e0248a],?
  40e3bd:	or     ebx,eax
  40e3bf:	das    
  40e3c0:	lods   al,BYTE PTR ds:[esi]
  40e3c1:	pop    esp
  40e3c2:	loope  0x40e3af
  40e3c4:	es push ebx
  40e3c6:	inc    esi
  40e3c7:	loope  0x40e39c
  40e3c9:	dec    esp
  40e3ca:	cmp    eax,0xe9634b6e
  40e3cf:	imul   ecx,DWORD PTR [edi-0xcfc57b7],0x8
  40e3d6:	jmp    0xb122aede
  40e3db:	xor    DWORD PTR [ebp-0x2a],0xffffffe1
  40e3df:	ret    
	...
  40e408:	clc    
  40e409:	cmc    
  40e40a:	mov    eax,0x58f75eb
  40e40f:	loope  0x40e41d
  40e411:	popa   
  40e412:	jmp    0xffd8481a
  40e417:	xor    BYTE PTR [edi+0x16],0x41
  40e41b:	jmp    0xf1b5ba98
  40e420:	xor    cl,ch
  40e422:	mov    al,ds:0xcee2bde
  40e427:	push   esp
  40e428:	sub    dl,bh
  40e42a:	(bad)  
  40e42b:	push   esp
  40e42c:	sub    edx,edi
  40e42e:	je     0x40e421
  40e430:	xor    BYTE PTR [esi+0x7a],dl
  40e433:	mov    esi,0xedc1c12b
  40e438:	dec    eax
  40e439:	cmp    al,0x8b
  40e43b:	mov    ebp,0x13fbc9cf
  40e440:	inc    edi
  40e441:	arpl   WORD PTR ds:0xe8019d9e,bp
  40e447:	int    0x8e
  40e449:	(bad)  
  40e44a:	(bad)  
  40e44b:	pusha  
  40e44c:	(bad)  
  40e44d:	aad    0x67
  40e44f:	jmp    0x11feca9c
  40e454:	aaa    
  40e455:	dec    eax
  40e456:	inc    ecx
  40e457:	jmp    0x288231bc
  40e45c:	dec    edi
  40e45d:	(bad)  
  40e45e:	je     0x40e451
  40e460:	mov    al,0xe1
  40e462:	mov    al,ds:0x74d6ab5e
  40e467:	push   ebp
  40e468:	stos   DWORD PTR es:[edi],eax
  40e469:	pop    esp
  40e46a:	or     BYTE PTR [ecx+0x0],al
	...
  40e491:	add    BYTE PTR [eax],al
  40e493:	add    BYTE PTR ds:0x9146ff53,cl
  40e499:	mov    DWORD PTR [ebx],0xeb825de9
  40e49f:	push   0xffffff84
  40e4a1:	shr    DWORD PTR [ecx-0x17],1
  40e4a4:	mul    BYTE PTR [esi]
  40e4a6:	call   FWORD PTR [eax+edx*2+0x6ba0e8e1]
  40e4ad:	(bad)  
  40e4ae:	mov    BYTE PTR [esp+ecx*4+0x5be9006d],ch
  40e4b5:	xchg   ebx,eax
  40e4b6:	add    BYTE PTR [di+0x414a],dl
  40e4bb:	add    BYTE PTR [edx+0x6241416d],bh
  40e4c1:	call   0x778aed39
  40e4c6:	lahf   
  40e4c7:	jmp    DWORD PTR ds:0x5000066
  40e4cd:	je     0x40e535
  40e4cf:	pop    edx
  40e4d0:	arpl   WORD PTR [esi+0x0],cx
  40e4d3:	push   0x414e8e
  40e4d8:	add    eax,0xa8e80833
  40e4dd:	scas   al,BYTE PTR es:[edi]
  40e4de:	std    
  40e4df:	call   ebp
  40e4e1:	xor    bh,ah
  40e4e3:	(bad)  
  40e4e4:	aas    
  40e4e5:	add    eax,0xb42bf3e8
  40e4ea:	std    
  40e4eb:	leave  
  40e4ec:	mov    al,ds:0x69550001
  40e4f1:	fld    DWORD PTR [ecx+0x5380d6c4]
  40e4f7:	adc    BYTE PTR [eax],al
	...
  40e51d:	add    BYTE PTR [eax],al
  40e51f:	add    BYTE PTR [ecx-0x29],bl
  40e522:	push   0xfc426700
  40e527:	push   eax
  40e528:	push   ebp
  40e529:	xor    cl,BYTE PTR [eax]
  40e52b:	push   0xffffffb2
  40e52d:	mov    bl,0x73
  40e52f:	adc    BYTE PTR ds:0x62851c17,ah
  40e535:	xor    ah,BYTE PTR [edi]
  40e537:	mov    ebp,edi
  40e539:	mov    ah,0x8e
  40e53b:	push   0xffffffb2
  40e53d:	bound  eax,QWORD PTR [eax]
  40e53f:	push   0x805
  40e544:	push   ebp
  40e545:	xor    cl,BYTE PTR [edx+ebp*2]
  40e548:	push   ebp
  40e549:	mov    ah,0x70
  40e54b:	add    al,0x88
  40e54d:	or     BYTE PTR [edx+0x0],ch
  40e550:	pop    edx
  40e551:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e552:	dec    ebx
  40e553:	add    BYTE PTR [edx+0x58],ah
  40e556:	(bad)  
  40e557:	jne    0x40e5a4
  40e559:	(bad)  
  40e55a:	jmp    0x40e5bb
  40e55c:	adc    eax,0x89c902e2
  40e561:	fiadd  WORD PTR [edx]
  40e563:	push   ebp
  40e564:	rol    BYTE PTR [esi],0x83
  40e567:	ret    
  40e568:	dec    edi
  40e569:	cmp    DWORD PTR [si],edx
  40e56c:	shr    BYTE PTR [edi+0x24ce0068],1
  40e572:	loopne 0x40e5c3
  40e574:	xor    al,0x3d
  40e576:	adc    bh,bh
  40e578:	mov    dh,0xea
  40e57a:	push   0xf83d2400
  40e57f:	(bad)  
  40e580:	jns    0x40e57c
  40e582:	mov    BYTE PTR [edi+0x0],bh
	...
  40e5ac:	sahf   
  40e5ad:	or     ecx,DWORD PTR [ebx+0x69320f54]
  40e5b3:	add    BYTE PTR [ecx-0x1e],dh
  40e5b6:	push   0xffffffff
  40e5b8:	dec    eax
  40e5b9:	loop   0x40e5bd
  40e5bb:	(bad)  
  40e5bc:	jle    0x40e590
  40e5be:	push   0x7efecff
  40e5c3:	push   0x4b
  40e5c5:	or     BYTE PTR [eax+ebp*8],al
  40e5c8:	sbb    BYTE PTR ds:0x52bb0004,0x58
  40e5cf:	cld    
  40e5d0:	jecxz  0x40e581
  40e5d2:	dec    esp
  40e5d3:	add    BYTE PTR [ebx-0x57],cl
  40e5d6:	ror    BYTE PTR [edi],0x4b
  40e5d9:	xchg   ebp,eax
  40e5da:	mov    ebx,ebp
  40e5dc:	mov    ah,0xbc
  40e5de:	or     bh,bh
  40e5e0:	ss (bad) 
  40e5e3:	push   edx
  40e5e4:	and    eax,DWORD PTR [ebx-0x22]
  40e5e7:	(bad)  
  40e5e8:	push   ss
  40e5e9:	fsubp  st(2),st
  40e5eb:	xchg   edi,eax
  40e5ec:	push   es
  40e5ed:	loop   0x40e5f1
  40e5ef:	shr    DWORD PTR [ebx+0x1b01c35e],1
  40e5f5:	and    ebx,DWORD PTR [eax+0xc]
  40e5f8:	jl     0x40e602
  40e5fa:	pushf  
  40e5fb:	sti    
  40e5fc:	ins    BYTE PTR es:[edi],dx
  40e5fd:	pop    eax
  40e5fe:	mov    eax,ds:0x9bd36dde
  40e603:	mul    DWORD PTR [ebp+0x5d]
  40e606:	stc    
  40e607:	(bad)  
  40e609:	lock adc BYTE PTR [ecx-0x2d],ah
  40e60d:	sar    ebp,cl
  40e60f:	retf   
	...
  40e638:	mov    bh,ah
  40e63a:	call   0xee26b677
  40e63f:	push   edi
  40e640:	push   ebx
  40e641:	rcr    BYTE PTR [ebx-0x4],cl
  40e644:	sub    al,0xf0
  40e646:	pusha  
  40e647:	(bad)  ds:0x33105bd3
  40e64d:	test   DWORD PTR [esp+eax*1],ebx
  40e650:	dec    ebx
  40e651:	dec    ecx
  40e652:	sbb    ebp,ebx
  40e654:	lahf   
  40e655:	add    eax,0xe13357be
  40e65a:	icebp  
  40e65b:	pop    ebx
  40e65c:	add    al,0xd3
  40e65e:	lods   eax,DWORD PTR ds:[esi]
  40e65f:	push   edi
  40e660:	push   edi
  40e661:	rcr    BYTE PTR [ebx],cl
  40e663:	hlt    
  40e664:	cmc    
  40e665:	pop    esp
  40e666:	add    esp,ebp
  40e668:	pop    ds
  40e669:	push   ecx
  40e66a:	xchg   esi,eax
  40e66b:	fst    QWORD PTR [ebx]
  40e66d:	enter  0x3f4,0x76
  40e671:	jle    0x40e607
  40e673:	or     DWORD PTR [eax],0xffffffbe
  40e676:	jns    0x40e655
  40e678:	int    0xd2
  40e67a:	sti    
  40e67b:	sti    
  40e67c:	xlat   BYTE PTR ds:[ebx]
  40e67d:	mov    eax,gs
  40e67f:	fistp  QWORD PTR [ebp+0x3fdcb8d2]
  40e685:	add    DWORD PTR [ecx-0x42],edx
  40e688:	scas   al,BYTE PTR es:[edi]
  40e689:	rcl    BYTE PTR [ebp-0x23],cl
  40e68c:	pop    ds
  40e68d:	icebp  
  40e68e:	pop    ebx
  40e68f:	xchg   DWORD PTR [edx+ebx*8-0x2dfb22bb],ebx
  40e696:	mov    bl,0xf
  40e698:	mov    WORD PTR [eax+eax*1-0x1f],ds
	...
  40e6c4:	jo     0x40e6bc
  40e6c6:	(bad)  
  40e6c7:	cs sahf 
  40e6c9:	pusha  
  40e6ca:	add    BYTE PTR [ebx-0x15009eb8],dl
  40e6d0:	dec    eax
  40e6d1:	or     DWORD PTR [ebp-0x122b094],ecx
  40e6d7:	push   cs
  40e6d8:	pop    ss
  40e6d9:	pop    edi
  40e6da:	inc    DWORD PTR [esi]
  40e6dc:	cld    
  40e6dd:	clc    
  40e6de:	imul   ebp,ecx,0x5be808e2
  40e6e4:	fwait
  40e6e5:	or     DWORD PTR [eax],eax
  40e6e7:	(bad)
  40e6ec:	pop    ss
  40e6ed:	add    al,BYTE PTR [eax]
  40e6ef:	jmp    0xddc5b13c
  40e6f4:	sti    
  40e6f5:	sar    dh,cl
  40e6f7:	jmp    0x40e741
  40e6f9:	or     DWORD PTR [eax],eax
  40e6fb:	scas   al,BYTE PTR es:[edi]
  40e6fc:	int    0xd9
  40e6fe:	repnz mov esi,0xe9fed1ef
  40e704:	dec    eax
  40e705:	retf   0xad84
  40e708:	sbb    edx,ebx
  40e70a:	(bad)  
  40e70b:	jmp    0x7240f058
  40e710:	xor    eax,0x72fb8af1
  40e715:	or     DWORD PTR [ebp-0x129079c],ecx
  40e71b:	xchg   BYTE PTR [eax],bl
  40e71d:	test   BYTE PTR [ebp+ecx*4+0x19fed2fb],al
  40e724:	aam    0x8c
  40e726:	out    0x7a,eax
	...
  40e750:	lahf   
  40e751:	ror    BYTE PTR [edi+0x66],cl
  40e754:	sbb    eax,0x3cd4fef9
  40e759:	shl    BYTE PTR [ecx+eiz*8+0x32],cl
  40e75d:	or     edi,edi
  40e75f:	aam    0xa0
  40e761:	rcl    BYTE PTR [ecx+0x0],cl
  40e764:	out    0x88,al
  40e766:	mov    ebx,0xfdb551e8
  40e76b:	add    BYTE PTR [ebp-0x77],ch
  40e76e:	sbb    al,BYTE PTR [ecx]
  40e770:	jb     0x40e777
  40e772:	cmp    DWORD PTR [ebp-0x246a2],0x62
  40e779:	add    al,0x84
  40e77b:	(bad)  
  40e77d:	add    eax,0x99e7c700
  40e782:	icebp  
  40e783:	dec    DWORD PTR [ebp+0x6]
  40e786:	add    bh,ch
  40e788:	or     al,0x5e
  40e78a:	jae    0x40e7cd
  40e78c:	repz or al,0x8d
  40e78f:	test   DWORD PTR [edx],esi
  40e791:	mov    cl,0xfd
  40e793:	push   DWORD PTR [edx-0x23]
  40e796:	adc    cl,BYTE PTR [edx+eiz*1+0xd]
  40e79a:	test   eax,eax
  40e79c:	xchg   BYTE PTR [edi-0x39],al
  40e79f:	test   esi,edx
  40e7a1:	mov    eax,0xd23fffd
  40e7a6:	out    dx,eax
  40e7a7:	mov    esi,0x413f8a7a
  40e7ac:	repnz add DWORD PTR [ebx-0x24b5200],0x50
	...
  40e7db:	add    dl,bl
  40e7dd:	mov    edx,0x89e20049
  40e7e2:	mov    esi,0x83cc1174
  40e7e7:	aam    0xc1
  40e7e9:	mov    ah,0xfd
  40e7eb:	add    ah,dl
  40e7ed:	jecxz  0x40e7ab
  40e7ef:	push   0x41466f
  40e7f4:	das    
  40e7f5:	mov    bh,dh
  40e7f7:	sti    
  40e7f8:	sub    eax,0x74e84eb4
  40e7fd:	inc    eax
  40e7fe:	add    BYTE PTR [eax],al
  40e800:	daa    
  40e801:	lds    ecx,FWORD PTR ds:0x3834b85
  40e807:	add    BYTE PTR [ebx-0x36],cl
  40e80a:	xchg   ebx,eax
  40e80b:	inc    eax
  40e80c:	or     ah,dl
  40e80e:	xchg   DWORD PTR [ebx+ecx*2+0x1bfedb16],eax
  40e815:	dec    edx
  40e816:	mov    bl,0x4b
  40e818:	dec    ebx
  40e819:	loop   0x40e828
  40e81b:	sar    bh,0x70
  40e81e:	test   DWORD PTR [edi+ebp*2],edi
  40e821:	mov    eax,ds:0xe74b0043
  40e826:	jle    0x40e7a8
  40e828:	dec    ebx
  40e829:	loop   0x40e82d
  40e82b:	call   FWORD PTR [esi+0x4cfed6fa]
  40e831:	pop    edi
  40e832:	sbb    edi,0xfed9d738
  40e838:	test   ch,0xd5
  40e83b:	(bad)  
  40e83c:	xor    al,0x57
  40e83e:	and    bl,0x0
	...
  40e865:	add    BYTE PTR [eax],al
  40e867:	add    BYTE PTR [eax],bh
  40e869:	scas   eax,DWORD PTR es:[edi]
  40e86a:	(bad)  [esi+ecx*8+0x1cfed599]
  40e871:	adc    ch,BYTE PTR [esi+0x1]
  40e874:	mov    eax,ds:0xa1006ce2
  40e879:	loop   0x40e8e7
  40e87b:	add    dh,dl
  40e87d:	pop    esp
  40e87e:	jecxz  0x40e872
  40e880:	cld    
  40e881:	sahf   
  40e882:	xor    bh,bh
  40e884:	pop    esi
  40e885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e886:	inc    ebx
  40e887:	inc    ecx
  40e888:	dec    ebx
  40e889:	fcmovnb st,st(2)
  40e88b:	jae    0x40e819
  40e88d:	ja     0x40e8de
  40e88f:	adc    al,0xdc
  40e891:	xor    al,0xbb
  40e893:	repnz aam 0x86
  40e896:	fnstenv [edi+ebp*8-0x3b0125ae]
  40e89d:	int3   
  40e89e:	repnz (bad) 
  40e8a0:	div    BYTE PTR [ebp-0x2b]
  40e8a3:	(bad)  
  40e8a4:	mov    ah,0x8
  40e8a6:	push   ecx
  40e8a7:	fisubr WORD PTR [edi-0x2025a231]
  40e8ad:	lods   al,BYTE PTR ds:[esi]
  40e8ae:	pop    ecx
  40e8af:	ficomp DWORD PTR [ebp+0x4b4d2ee0]
  40e8b5:	or     DWORD PTR [edx-0x8],edx
  40e8b8:	lea    edx,[ebp-0x2b]
  40e8bb:	fidivr DWORD PTR [edi+0x7dda39e0]
  40e8c1:	iret   
  40e8c2:	jae    0x40e8ab
  40e8c4:	jns    0x40e895
  40e8c6:	and    eax,0x1df8f7da
  40e8cb:	nop
	...
  40e8f4:	js     0x40e8d1
  40e8f6:	adc    eax,0xbb964da
  40e8fb:	ficom  DWORD PTR [ebp-0x31]
  40e8fe:	cmp    esp,edi
  40e900:	pop    ecx
  40e901:	iret   
  40e902:	std    
  40e903:	jmp    0xcc12:0x3e94318
  40e90a:	aam    0x3
  40e90c:	sahf   
  40e90d:	adc    ah,0x85
  40e910:	or     BYTE PTR [edx-0xa8072cb],dl
  40e916:	popa   
  40e917:	test   bh,0x44
  40e91a:	xchg   ecx,eax
  40e91b:	xor    al,0xa1
  40e91d:	or     esi,eax
  40e91f:	dec    edi
  40e920:	aas    
  40e921:	into   
  40e922:	xor    ecx,DWORD PTR [ecx+esi*2]
  40e925:	or     DWORD PTR [esi+0x1ace574f],esi
  40e92b:	xor    dh,cl
  40e92d:	leave  
  40e92e:	sbb    esi,DWORD PTR [eax]
  40e930:	add    al,0x45
  40e932:	pop    ebp
  40e933:	add    al,0x4b
  40e935:	or     ecx,ebp
  40e937:	mov    WORD PTR [edi-0x6f],?
  40e93a:	popa   
  40e93b:	test   bh,0x44
  40e93e:	inc    ebp
  40e93f:	xor    al,0xbe
  40e941:	inc    esp
  40e942:	test   eax,0xfff93134
  40e947:	jne    0x40e955
  40e949:	xchg   ecx,eax
  40e94a:	(bad)  
  40e94b:	sbb    eax,DWORD PTR [ebx-0x76]
  40e94e:	jl     0x40e8f5
  40e950:	inc    edi
  40e951:	push   ebp
  40e952:	daa    
  40e953:	ins    BYTE PTR es:[edi],dx
  40e954:	cld    
  40e955:	enter  0xdcfe,0x0
	...
  40e97d:	add    BYTE PTR [eax],al
  40e97f:	add    BYTE PTR [edi+ecx*8+0x1773f974],ch
  40e986:	(bad)  
  40e987:	mov    esp,0xf174ce44
  40e98c:	jo     0x40e948
  40e98e:	cld    
  40e98f:	mov    ss:0xec4136cf,al
  40e995:	inc    ecx
  40e996:	add    cl,ch
  40e998:	mov    edi,0x8d0c1e03
  40e99e:	je     0x40e9d7
  40e9a0:	outs   dx,BYTE PTR ds:[esi]
  40e9a1:	xchg   edi,eax
  40e9a2:	mov    dh,BYTE PTR [eax+esi*4-0x3f9ee7d]
  40e9a9:	nop
  40e9aa:	(bad)  
  40e9ab:	fwait
  40e9ac:	push   eax
  40e9ad:	cs leave 
  40e9af:	sub    esi,DWORD PTR [edi]
  40e9b1:	into   
  40e9b2:	push   ebx
  40e9b3:	bound  esp,QWORD PTR [ebx]
  40e9b5:	mov    ebx,eax
  40e9b7:	loope  0x40e9cb
  40e9b9:	iret   
  40e9ba:	(bad)  
  40e9bb:	ss (bad) 
  40e9bd:	xor    al,0x10
  40e9bf:	bound  edx,QWORD PTR [esi]
  40e9c1:	jge    0x40e947
  40e9c3:	shl    edx,1
  40e9c5:	into   
  40e9c6:	(bad)  
  40e9c7:	sbb    DWORD PTR [ebp+0x5734ff09],ebx
  40e9cd:	arpl   WORD PTR [eax],ax
  40e9cf:	mov    dh,0x8d
  40e9d1:	stc    
  40e9d2:	(bad)  
  40e9d3:	sbb    edx,DWORD PTR [ebx-0x7c]
  40e9d6:	mov    edi,0x84c66a1c
  40e9db:	popf   
  40e9dc:	add    cl,bh
  40e9de:	(bad)  
  40e9df:	jmp    0x6240f32c
	...
  40ea0c:	gs (bad) 
  40ea0e:	std    
  40ea0f:	add    ch,al
  40ea11:	mov    al,0x89
  40ea13:	adc    dh,BYTE PTR [edi]
  40ea15:	dec    edi
  40ea16:	sti    
  40ea17:	(bad)  
  40ea18:	xor    eax,0x2f8d4eb1
  40ea1d:	or     bh,bh
  40ea1f:	jmp    DWORD PTR ds:0x5106a1a
  40ea25:	jg     0x40ea1d
  40ea27:	(bad)  
  40ea28:	cmc    
  40ea29:	mov    al,0xfd
  40ea2b:	push   edx
  40ea2c:	jbe    0x40e9b2
  40ea2e:	mov    ebx,0xfdb104fc
  40ea33:	add    BYTE PTR [esi+0x72bd8d23],bh
  40ea39:	mov    al,0xfd
  40ea3b:	jmp    DWORD PTR ds:0xcfff103f
  40ea41:	add    eax,0x1bfff57
  40ea46:	call   0xfdf21f5e
  40ea4b:	sub    DWORD PTR ds:0x468dfdda,0xffffffb0
  40ea52:	std    
  40ea53:	(bad)  
  40ea54:	mov    edi,0xa9aae9ea
  40ea59:	pop    ebx
  40ea5a:	idiv   esi
  40ea5c:	and    eax,0x251289b5
  40ea61:	jnp    0x40ea59
  40ea63:	inc    BYTE PTR ds:0x2a52fdb5
  40ea69:	adc    al,0xc9
  40ea6b:	ret    0x8f6
  40ea6e:	push   ebp
  40ea6f:	mov    eax,DWORD PTR [eax]
	...
  40ea95:	add    BYTE PTR [eax],al
  40ea97:	add    dh,dh
  40ea99:	xchg   dl,al
  40ea9b:	clc    
  40ea9c:	les    esi,FWORD PTR [ebp+edi*8+0xc1a6957]
  40eaa3:	mov    edx,DWORD PTR [eax]
  40eaa5:	add    BYTE PTR [ebx-0x24b5b08],0x50
  40eaac:	cmp    BYTE PTR ds:0x734b006a,al
  40eab2:	push   eax
  40eab3:	or     al,0xd4
  40eab5:	adc    BYTE PTR [eax*4-0x38ca31f5],bl
  40eabc:	push   cs
  40eabd:	dec    esi
  40eabe:	add    al,0x0
  40eac0:	dec    ebx
  40eac1:	loop   0x40eb35
  40eac3:	mov    bl,dh
  40eac5:	pop    edx
  40eac6:	(bad)  
  40eac7:	(bad)  
  40eac8:	lods   al,BYTE PTR ds:[esi]
  40eac9:	push   edi
  40eaca:	repnz mov WORD PTR [esi],cs
  40eacd:	cs xor al,0x8d
  40ead0:	(bad)  
  40ead1:	ss (bad) 
  40ead3:	(bad)  
  40ead4:	xchg   esp,eax
  40ead5:	xchg   edx,eax
  40ead6:	push   0xdc4d8c10
  40eadb:	std    
  40eadc:	test   BYTE PTR [ebx],cl
  40eade:	xlat   BYTE PTR ds:[ebx]
  40eadf:	push   ecx
  40eae0:	dec    edi
  40eae1:	xor    al,BYTE PTR [ebx+0x72e2777c]
  40eae7:	jae    0x40eb14
  40eae9:	push   ebp
  40eaea:	cdq    
  40eaeb:	sti    
  40eaec:	gs jmp 0x40eac5
  40eaef:	(bad)  
  40eaf0:	pop    esp
  40eaf1:	ins    DWORD PTR es:[edi],dx
  40eaf2:	push   es
  40eaf3:	(bad)  
  40eaf4:	fsubp  st(1),st
  40eaf6:	sub    eax,0xd70343e8
  40eafb:	inc    BYTE PTR [eax]
	...
  40eb21:	add    BYTE PTR [eax],al
  40eb23:	add    al,cl
  40eb25:	and    dh,ah
  40eb27:	(bad)  
  40eb28:	cmp    al,0xa5
  40eb2a:	(bad)  
  40eb2b:	(bad)  
  40eb2c:	mov    esi,0xf9ea7409
  40eb31:	push   esi
  40eb32:	jo     0x40eb2b
  40eb34:	and    eax,0x398ad5ab
  40eb39:	mov    bl,0x8f
  40eb3b:	not    DWORD PTR ds:0x79fed5bb
  40eb41:	fidiv  DWORD PTR ds:0x2da09c9
  40eb47:	push   ebp
  40eb48:	rol    ch,1
  40eb4a:	add    ebx,0x74d6f3bb
  40eb50:	aas    
  40eb51:	or     DWORD PTR [ecx-0x16f66c34],edx
  40eb57:	or     cl,BYTE PTR [ebx]
  40eb59:	push   esi
  40eb5a:	in     al,dx
  40eb5b:	xor    eax,0x3dcc702
  40eb60:	cli    
  40eb61:	call   0x808baecf
  40eb66:	cwde   
  40eb67:	mov    BYTE PTR [edi],al
  40eb69:	fstp   QWORD PTR [eax]
  40eb6b:	xor    dh,BYTE PTR [ebp+edx*2+0x7b28ebdd]
  40eb72:	gs (bad) 
  40eb74:	jno    0x40eb38
  40eb76:	outs   dx,DWORD PTR ds:[esi]
  40eb77:	dec    eax
  40eb78:	ja     0x40eb59
  40eb7a:	loop   0x40eb89
  40eb7c:	inc    esp
  40eb7d:	xchg   ebx,eax
  40eb7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb7f:	sub    al,0x9f
  40eb81:	or     DWORD PTR [edi+ebp*4-0x10c077f5],ebp
	...
  40ebb0:	cli    
  40ebb1:	fld    DWORD PTR [ecx]
  40ebb3:	into   
  40ebb4:	ret    
  40ebb5:	push   ebp
  40ebb6:	sbb    edx,ebp
  40ebb8:	and    al,0x13
  40ebba:	test   BYTE PTR [ebp+0x330d1b08],0xf3
  40ebc1:	adc    BYTE PTR [ebx-0x5c81b4bc],ch
  40ebc7:	mov    ebx,0x4c14e0fc
  40ebcc:	dec    ebx
  40ebcd:	or     DWORD PTR [edx-0x41],ebp
  40ebd0:	push   eax
  40ebd1:	jl     0x40eb7e
  40ebd3:	mov    ebx,0xb373ca84
  40ebd8:	and    al,0x82
  40ebda:	popa   
  40ebdb:	aad    0x25
  40ebdd:	and    DWORD PTR [ebx],0xd68686b4
  40ebe3:	lock call 0xe8ca:0xf75f67b6
  40ebeb:	add    ecx,DWORD PTR [ebx-0x36]
  40ebee:	xor    esi,DWORD PTR [eax+0x2b001164]
  40ebf4:	mov    BYTE PTR [ecx],cl
  40ebf6:	lea    esp,[edi+ebp*4]
  40ebf9:	cmp    ch,al
  40ebfb:	gs nop
  40ebfd:	or     DWORD PTR [eax],eax
  40ebff:	push   0xb
  40ec01:	dec    DWORD PTR [esp+ebp*1+0x14ff3a97]
  40ec08:	xchg   edi,eax
  40ec09:	loop   0x40ec62
  40ec0b:	add    bl,BYTE PTR [esi-0x8db7735]
  40ec11:	jge    0x40ec57
  40ec13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  40ec3c:	jg     0x40ec08
  40ec3e:	je     0x40ebd9
  40ec40:	pop    ds
  40ec41:	or     al,0x42
  40ec43:	test   al,0x48
  40ec45:	retf   0xab34
  40ec48:	jno    0x40ec92
  40ec4a:	add    BYTE PTR [ecx+0x2a],al
  40ec4d:	dec    edi
  40ec4e:	dec    DWORD PTR [esi+0x42]
  40ec51:	leave  
  40ec52:	push   cs
  40ec53:	ins    DWORD PTR es:[edi],dx
  40ec54:	test   cl,0xfe
  40ec57:	jmp    0x6b09322d
  40ec5c:	sbb    al,0xbd
  40ec5e:	(bad)  
  40ec5f:	fucomp st(4)
  40ec61:	xchg   edi,edi
  40ec63:	call   0xedb5b6b0
  40ec68:	jo     0x40ec70
  40ec6a:	dec    ecx
  40ec6b:	jmp    0x6b20a4b8
  40ec70:	xchg   DWORD PTR [eax],ecx
  40ec72:	mov    DWORD PTR [eax+ebx*8-0x38128b36],ebp
  40ec79:	inc    esp
  40ec7a:	mov    ah,0xf6
  40ec7c:	test   DWORD PTR [ebp-0x34f75b72],edi
  40ec82:	je     0x40ec35
  40ec84:	iret   
  40ec85:	inc    esp
  40ec86:	les    esp,FWORD PTR [esi-0x170072a3]
  40ec8c:	dec    eax
  40ec8d:	or     DWORD PTR [ebx+0x41206b0c],eax
  40ec93:	add    dl,dh
  40ec95:	add    eax,0xb6f5074
  40ec9a:	mov    eax,0x6a068850
	...
  40ecc7:	add    BYTE PTR [eax-0x7dba72fb],cl
  40eccd:	push   ss
  40ecce:	push   0x0
  40ecd0:	outs   dx,DWORD PTR ds:[esi]
  40ecd1:	or     eax,eax
  40ecd3:	push   eax
  40ecd4:	mov    ebp,0x232922da
  40ecd9:	add    eax,0xf7c6c00b
  40ecde:	cmp    BYTE PTR [ebp+0x7e],0x6
  40ece2:	je     0x40ed10
  40ece4:	and    DWORD PTR [ebx],esi
  40ece6:	adc    BYTE PTR [eax],al
  40ece8:	mov    dh,0xfd
  40ecea:	mov    dl,BYTE PTR [ebp-0x5e]
  40eced:	sub    eax,edi
  40ecef:	add    bh,BYTE PTR ds:0xaa75ff05
  40ecf5:	mov    ah,0x73
  40ecf7:	mov    eax,0xffbc3afd
  40ecfc:	mov    DWORD PTR [ecx],0xe4720368
  40ed02:	mov    esp,0xfdb006e8
  40ed07:	call   FWORD PTR ds:0x18e8bc3b
  40ed0d:	or     eax,0x3b3d0000
  40ed12:	enter  0xee8,0x3c
  40ed16:	(bad)  
  40ed17:	(bad)  
  40ed18:	cmp    eax,0x96e8d03b
  40ed1d:	push   esi
  40ed1e:	(bad)  
  40ed1f:	(bad)  
  40ed20:	(bad)  
  40ed22:	ror    BYTE PTR [edx+eiz*1],0xf8
  40ed26:	mov    ch,ah
  40ed28:	mov    eax,ds:0x8dc688
	...
  40ed51:	add    BYTE PTR [eax],al
  40ed53:	add    BYTE PTR [edi-0x27],dh
  40ed56:	dec    esi
  40ed57:	push   0x414f16
  40ed5c:	dec    ebx
  40ed5d:	dec    esp
  40ed5e:	or     DWORD PTR [edx+0x4b],ebp
  40ed61:	dec    edx
  40ed62:	or     BYTE PTR [edx-0x76],al
  40ed65:	mov    dl,0xda
  40ed67:	mov    ebp,0x8502b293
  40ed6c:	or     esi,DWORD PTR [eax-0x4db44086]
  40ed72:	add    cl,BYTE PTR [ebx+0x117e6e7e]
  40ed78:	into   
  40ed79:	in     eax,dx
  40ed7a:	retf   
  40ed7b:	dec    edi
  40ed7c:	aam    0x25
  40ed7e:	sar    dh,1
  40ed80:	jns    0x40ed38
  40ed82:	xchg   DWORD PTR [edi-0x8dc5ac],edi
  40ed88:	mov    esp,0xb37c85b2
  40ed8d:	mov    dl,0x1
  40ed8f:	test   bh,dl
  40ed91:	mov    dl,0x2
  40ed93:	add    BYTE PTR [ebp+esi*2-0x4d63004a],cl
  40ed9a:	add    al,bh
  40ed9c:	push   cs
  40ed9d:	cli    
  40ed9e:	add    eax,DWORD PTR [eax]
  40eda0:	dec    ebx
  40eda1:	mov    dl,0xc9
  40eda3:	inc    esp
  40eda4:	fwait
  40eda5:	sbb    al,BYTE PTR [eax+eax*1]
  40eda8:	dec    ebx
  40eda9:	out    dx,eax
  40edaa:	dec    eax
  40edab:	int3   
  40edac:	dec    ebx
  40edad:	mov    dl,0x2
  40edaf:	add    al,al
  40edb1:	popf   
  40edb2:	retf   0x398a
  40edb5:	cmp    eax,0xcc49
	...
  40edde:	add    BYTE PTR [eax],al
  40ede0:	sti    
  40ede1:	xor    al,0x49
  40ede3:	sar    bl,1
  40ede5:	mov    eax,DWORD PTR [ebx]
  40ede7:	call   esi
  40ede9:	sbb    ebx,edx
  40edeb:	push   ecx
  40edec:	push   edi
  40eded:	mov    ebx,0x339774c2
  40edf2:	push   ecx
  40edf3:	int3   
  40edf4:	dec    edx
  40edf5:	inc    ebp
  40edf6:	inc    ecx
  40edf7:	sub    DWORD PTR [esi-0x728bfbe2],0x9
  40edfe:	push   ecx
  40edff:	sbb    BYTE PTR [ecx-0x602d16b6],cl
  40ee05:	ffree  st(0)
  40ee07:	enter  0x984,0xe9
  40ee0b:	inc    ah
  40ee0d:	cmp    al,0xf3
  40ee0f:	imul   eax,DWORD PTR [ecx+ecx*1],0x4dc203e9
  40ee16:	mov    eax,ds:0x23d045de
  40ee1b:	mov    esp,0x3e8c7e4
  40ee20:	fdivr  QWORD PTR ds:0xdd5fd2b1
  40ee26:	xchg   ebp,eax
  40ee27:	pop    eax
  40ee28:	inc    ebx
  40ee29:	mov    cl,0x86
  40ee2b:	rol    ch,1
  40ee2d:	mov    DWORD PTR [ebp-0x294f68a8],0x6a094b3b
  40ee37:	push   eax
  40ee38:	xchg   ebx,eax
  40ee39:	or     ch,dh
  40ee3b:	sti    
  40ee3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee3d:	cmp    eax,0x5144db41
  40ee42:	jmp    0x40ee4a
	...
  40ee6b:	add    BYTE PTR [eax-0x6cc79e6c],ah
  40ee71:	xchg   ebx,eax
  40ee72:	cli    
  40ee73:	sar    bh,cl
  40ee75:	rol    BYTE PTR [ebp+0x35],0x53
  40ee79:	xchg   esp,eax
  40ee7a:	xchg   ebx,eax
  40ee7b:	iret   
  40ee7c:	rcr    DWORD PTR [edx],0x36
  40ee7f:	pop    eax
  40ee80:	outs   dx,DWORD PTR ds:[esi]
  40ee81:	(bad)  
  40ee82:	call   0xf603:0xecca93fb
  40ee89:	xchg   ebx,eax
  40ee8a:	or     al,0x86
  40ee8c:	mov    BYTE PTR [eax+0x410f86be],ch
  40ee92:	stos   DWORD PTR es:[edi],eax
  40ee93:	inc    esp
  40ee94:	dec    ebx
  40ee95:	or     DWORD PTR [ecx+esi*8+0x5],edi
  40ee99:	or     eax,0x98a4581
  40ee9e:	add    al,ch
  40eea0:	dec    eax
  40eea1:	or     DWORD PTR [eax],eax
  40eea3:	das    
  40eea4:	xchg   esp,eax
  40eea5:	dec    ebx
  40eea6:	inc    ecx
  40eea7:	jmp    0xa8a6feab
  40eeac:	popa   
  40eead:	or     eax,DWORD PTR [ebx-0x7cd0ba51]
  40eeb3:	cmovg  edi,DWORD PTR [ebx+esi*8]
  40eeb7:	push   0x4c
  40eeb9:	jge    0x40eee8
  40eebb:	sub    BYTE PTR [edi+0x9],cl
  40eebe:	(bad)  
  40eec0:	inc    dh
  40eec2:	(bad)  
  40eec3:	jmp    0xd7f0f497
  40eec8:	mov    DWORD PTR [ecx],ecx
  40eeca:	add    dh,ch
  40eecc:	int3   
  40eecd:	mov    ah,0xff
  40eecf:	call   0x40eed4
	...
  40eef8:	dec    eax
  40eef9:	mov    bh,BYTE PTR [eax*8-0x16ffb79f]
  40ef00:	dec    ebx
  40ef01:	(bad)  
  40ef02:	loopne 0x40eeed
  40ef04:	dec    eax
  40ef05:	or     edi,eax
  40ef07:	sub    al,0x9b
  40ef09:	(bad)  
  40ef0a:	(bad)  
  40ef0b:	jmp    0x6185bd58
  40ef10:	inc    edi
  40ef11:	or     DWORD PTR [eax],eax
  40ef13:	jmp    0xba3d3c2d
  40ef18:	or     eax,0x26b9f84d
  40ef1d:	or     DWORD PTR [eax+0x2f],ebp
  40ef20:	add    eax,0x7c3e0048
  40ef25:	jbe    0x40ef54
  40ef27:	test   al,0x48
  40ef29:	adc    al,al
  40ef2b:	fmulp  st(4),st
  40ef2d:	jl     0x40ef2e
  40ef2f:	call   0x21bd797c
  40ef34:	dec    edi
  40ef35:	push   ss
  40ef36:	test   BYTE PTR [ebp+0x47],al
  40ef39:	or     DWORD PTR [eax],eax
  40ef3b:	push   0xffffff94
  40ef3d:	(bad)  
  40ef40:	xor    eax,0x2200a08e
  40ef45:	or     cl,BYTE PTR [ebx-0x7f1cc98b]
  40ef4b:	add    BYTE PTR [edx],dh
  40ef4d:	or     dl,BYTE PTR [esi-0x75]
  40ef50:	cmp    al,0xd8
  40ef52:	je     0x40ef6c
  40ef54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef55:	dec    edi
  40ef56:	lock jmp FWORD PTR [ecx+edi*4-0x73]
  40ef5b:	inc    ebp
	...
  40ef84:	push   ds
  40ef85:	bound  edi,QWORD PTR [edx+eax*2+0x33]
  40ef89:	or     eax,0xd2cd7e8
  40ef8e:	add    cl,dl
  40ef90:	add    cl,BYTE PTR [ebp+0x4f6b02be]
  40ef96:	loopne 0x40f000
  40ef98:	es dec edi
  40ef9a:	inc    ecx
  40ef9b:	add    BYTE PTR [ebp+0x4f],ah
  40ef9e:	in     al,0xc7
  40efa0:	pop    ds
  40efa1:	test   eax,0x9b2fffe
  40efa6:	lea    eax,[ebp-0x26]
  40efa9:	stc    
  40efaa:	imul   eax,DWORD PTR [ecx],0x6a0d58
  40efb0:	daa    
  40efb1:	dec    edi
  40efb2:	loopne 0x40f004
  40efb4:	dec    eax
  40efb5:	or     eax,0xfa02458d
  40efba:	(bad)  
  40efbb:	adc    eax,0x41224e
  40efc0:	test   eax,0xf12d72c9
  40efc5:	push   esi
  40efc6:	in     al,dx
  40efc7:	add    BYTE PTR [esi+0x6201b7f0],bh
  40efcd:	or     DWORD PTR [eax],eax
  40efcf:	or     esp,DWORD PTR [edx]
  40efd1:	pop    esi
  40efd2:	push   ss
  40efd3:	call   FWORD PTR [edi+0x3a75fdc1]
  40efd9:	fnstenv [ebx-0x14]
  40efdc:	xor    eax,0x4b680860
  40efe1:	mov    ah,0x2
  40efe3:	out    dx,eax
  40efe4:	add    eax,0xf8fb0b
	...
  40f00d:	add    BYTE PTR [eax],al
  40f00f:	add    BYTE PTR [esp+ecx*1],bh
  40f012:	shl    BYTE PTR [edi+eiz*1+0x1b],1
  40f016:	xchg   esi,eax
  40f017:	inc    esp
  40f018:	dec    ebx
  40f019:	mov    dl,0x30
  40f01b:	call   DWORD PTR [esi+0x47c582ba]
  40f021:	das    
  40f022:	push   ecx
  40f023:	clc    
  40f024:	dec    ebx
  40f025:	pop    esi
  40f026:	std    
  40f027:	or     BYTE PTR [ebp-0x4e],0xfd
  40f02b:	test   BYTE PTR [ebx+edx*8-0x32],dh
  40f02f:	(bad)  
  40f030:	cld    
  40f031:	add    eax,0x3e5efed0
  40f036:	push   ds
  40f037:	inc    ecx
  40f038:	dec    ebx
  40f039:	sbb    al,0xbd
  40f03b:	ror    DWORD PTR [edi-0x4e],0x37
  40f03f:	mov    ebp,edi
  40f041:	das    
  40f042:	enter  0x61f7,0xb2
  40f046:	pop    eax
  40f047:	das    
  40f048:	int3   
  40f049:	and    eax,0x21eae7fc
  40f04e:	iret   
  40f04f:	(bad)  
  40f050:	shl    ch,cl
  40f052:	iret   
  40f053:	jg     0x40f0cb
  40f055:	xchg   DWORD PTR [ecx+eax*2+0x4b],eax
  40f059:	mov    dl,0x57
  40f05b:	sub    DWORD PTR [ebx],esi
  40f05d:	mov    dl,0x40
  40f05f:	inc    ecx
  40f060:	dec    ebx
  40f061:	fimul  DWORD PTR [ebx-0x254df5c0]
  40f067:	in     al,0xd
  40f069:	pop    ebx
  40f06a:	iret   
  40f06b:	test   BYTE PTR [ebx+0x7f682bde],cl
  40f071:	jno    0x40f0b6
	...
  40f09b:	add    bl,ah
  40f09d:	out    0x44,al
  40f09f:	inc    ecx
  40f0a0:	dec    ebx
  40f0a1:	dec    edx
  40f0a2:	mov    dl,0x7d
  40f0a4:	repz lds eax,FWORD PTR fs:[eax+eiz*2]
  40f0a9:	or     DWORD PTR [eax+0x6a0a4b44],ebp
  40f0af:	adc    DWORD PTR [ebx+0x47],ecx
  40f0b2:	test   al,0x3
  40f0b4:	dec    ebx
  40f0b5:	cmp    eax,0xc187c6d3
  40f0ba:	call   0xd24a3bc2
  40f0bf:	ret    
  40f0c0:	jl     0x40f11b
  40f0c2:	cdq    
  40f0c3:	cmp    BYTE PTR [edi-0x3f],0x9a
  40f0c7:	into   
  40f0c8:	aaa    
  40f0c9:	or     DWORD PTR [ebx],ebp
  40f0cb:	inc    ebp
  40f0cc:	dec    ebx
  40f0cd:	mov    gs,WORD PTR [eax-0x94fb6b4]
  40f0d3:	add    BYTE PTR [edi+0x4958e8c1],0xb0
  40f0da:	fmulp  st(6),st
  40f0dc:	jg     0x40f09f
  40f0de:	mov    ebp,0x3ab14358
  40f0e3:	retf   
  40f0e4:	in     eax,0xc3
  40f0e6:	popa   
  40f0e7:	cmp    bl,ah
  40f0e9:	(bad)  
  40f0ea:	cli    
  40f0eb:	into   
  40f0ec:	pop    edi
  40f0ed:	rcr    DWORD PTR [ebp+0x1bc44331],0xfc
  40f0f4:	lods   al,BYTE PTR ds:[esi]
  40f0f5:	dec    esi
  40f0f6:	mov    esi,cs
  40f0f8:	mov    ebp,0xacfbfbc3
  40f0fd:	out    dx,eax
  40f0fe:	jle    0x40f0ce
	...
  40f128:	lods   eax,DWORD PTR ds:[esi]
  40f129:	ret    
  40f12a:	sti    
  40f12b:	iret   
  40f12c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f12d:	cmp    eax,0x39f8dbe1
  40f132:	data16 into 
  40f134:	add    esi,0xffffffe4
  40f137:	add    esi,esi
  40f139:	pop    DWORD PTR [edx+eax*4-0x78]
  40f13d:	mov    eax,0x901836b6
  40f142:	fwait
  40f143:	dec    DWORD PTR [ebp+0x4b03e906]
  40f149:	or     DWORD PTR [eax],eax
  40f14b:	add    edx,DWORD PTR ss:[ecx]
  40f14e:	call   0x49f5c0
  40f153:	push   0xffffff80
  40f155:	or     BYTE PTR [edi-0x10],dh
  40f158:	xor    ecx,ecx
  40f15a:	pop    edx
  40f15b:	mov    dh,0x76
  40f15d:	rol    cl,1
  40f15f:	loope  0x40f1a9
  40f161:	fsub   st,st(7)
  40f163:	jb     0x40f1d8
  40f165:	adc    eax,0xdab1eb89
  40f16a:	push   cs
  40f16b:	imul   esi,edx,0xffffffc2
  40f16e:	(bad)  
  40f16f:	jmp    0x72492f15
  40f174:	test   BYTE PTR [ecx],dl
  40f176:	jmp    0x40f1bb
  40f178:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f179:	mov    es,WORD PTR ds:0x71f31b69
  40f17f:	jecxz  0x40f149
  40f181:	mov    esi,0x894c3e38
  40f186:	jmp    0x40f181
  40f188:	adc    esp,DWORD PTR [eax]
  40f18a:	xor    BYTE PTR [ebp+0x0],0x0
	...
  40f1b1:	add    BYTE PTR [eax],al
  40f1b3:	add    BYTE PTR [eax-0x496f2c9],cl
  40f1b9:	dec    esp
  40f1ba:	ja     0x40f1ad
  40f1bc:	enter  0x40ae,0x69
  40f1c0:	add    edx,DWORD PTR [ecx]
  40f1c2:	jmp    0x40f1a4
  40f1c4:	arpl   cx,cx
  40f1c6:	pop    edx
  40f1c7:	cs ins DWORD PTR es:[edi],dx
  40f1c9:	rol    cl,1
  40f1cb:	icebp  
  40f1cc:	dec    eax
  40f1cd:	add    eax,0xfeb0fb30
  40f1d2:	cmp    dh,bh
  40f1d4:	dec    esp
  40f1d5:	cmc    
  40f1d6:	das    
  40f1d7:	adc    BYTE PTR [esi-0x6d24bf02],0xfe
  40f1de:	inc    ebp
  40f1df:	(bad)  
  40f1e0:	inc    esi
  40f1e1:	cmc    
  40f1e2:	inc    eax
  40f1e3:	in     eax,dx
  40f1e4:	sub    BYTE PTR [edi+0x5f870208],0x5f
  40f1eb:	add    BYTE PTR [edi+edi*2-0x399df740],ch
  40f1f2:	fiadd  WORD PTR [eax+ebp*2]
  40f1f5:	retf   0x4ba8
  40f1f8:	icebp  
  40f1f9:	retf   0xb00
  40f1fc:	or     DWORD PTR [edx-0x5e],ebx
  40f1ff:	mov    esp,DWORD PTR [edi-0x52cf023e]
  40f205:	dec    edx
  40f206:	clc    
  40f207:	call   edi
  40f209:	mov    ebp,0xcc4e458d
  40f20e:	inc    ebx
  40f20f:	hlt    
  40f210:	and    al,BYTE PTR [esi]
  40f212:	add    BYTE PTR [eax],al
  40f214:	mov    cl,0x12
  40f216:	and    al,0x29
	...
  40f240:	repz add eax,0x42547400
  40f246:	inc    esp
  40f247:	lock push edx
  40f249:	pop    edi
  40f24a:	add    DWORD PTR [edx-0xe],ebp
  40f24d:	pop    edi
  40f24e:	add    BYTE PTR [edx-0xe],ch
  40f251:	pop    edi
  40f252:	add    BYTE PTR [ebp-0xb12ad9],cl
  40f258:	pop    ss
  40f259:	jmp    0x74be:0xc0f24128
  40f260:	fmul   DWORD PTR [eax+0x59e2f47b]
  40f266:	xor    al,0x8b
  40f268:	daa    
  40f269:	or     DWORD PTR [ebx+0x810e24d],ecx
  40f26f:	ja     0x40f1f9
  40f271:	ror    DWORD PTR [ecx+0x7c413675],1
  40f277:	or     BYTE PTR [ecx],bh
  40f279:	add    esi,eax
  40f27b:	jecxz  0x40f22d
  40f27d:	fsub   DWORD PTR [edx-0xf69875]
  40f283:	jne    0x40f277
  40f285:	inc    esp
  40f286:	(bad)  
  40f287:	(bad)  
  40f288:	ja     0x40f263
  40f28a:	out    0xe3,al
  40f28c:	dec    ebx
  40f28d:	outs   dx,DWORD PTR ds:[esi]
  40f28e:	add    al,BYTE PTR [eax]
  40f290:	ret    
  40f291:	mov    al,0x2
  40f293:	add    BYTE PTR [ebx+0x67],cl
  40f296:	sub    ebx,DWORD PTR [esi-0x7e]
  40f299:	in     eax,dx
  40f29a:	cli    
  40f29b:	push   DWORD PTR [ecx]
  40f29d:	lock daa 
  40f29f:	pop    edi
  40f2a0:	std    
  40f2a1:	call   0x40fa66
	...
  40f2ca:	add    BYTE PTR [eax],al
  40f2cc:	dec    ebx
  40f2cd:	test   DWORD PTR [edi-0x15],esi
  40f2d0:	enter  0xc2eb,0x67
  40f2d4:	dec    ebx
  40f2d5:	rol    BYTE PTR [edx],cl
  40f2d7:	add    BYTE PTR [ebx],dh
  40f2d9:	push   eax
  40f2da:	push   ecx
  40f2db:	push   DWORD PTR [edx+edi*1]
  40f2de:	inc    esi
  40f2df:	cld    
  40f2e0:	mov    ds:0x4b0022b2,eax
  40f2e5:	or     dl,BYTE PTR [ecx+0x78b01c71]
  40f2eb:	inc    esp
  40f2ec:	adc    ebx,DWORD PTR [ebx+0x4]
  40f2ef:	and    BYTE PTR [ebx-0x4e],cl
  40f2f2:	fisub  DWORD PTR [ecx+edi*2-0x79773529]
  40f2f9:	(bad)  
  40f2fa:	pop    ebx
  40f2fb:	add    BYTE PTR [ebx],ch
  40f2fd:	mov    dl,0x2
  40f2ff:	call   0xff0bf7d7
  40f304:	shr    ch,cl
  40f306:	shl    DWORD PTR [edi+0x4b],cl
  40f309:	adc    al,BYTE PTR [eax+eax*1]
  40f30c:	jecxz  0x40f349
  40f30e:	push   esi
  40f30f:	dec    esp
  40f311:	cmp    DWORD PTR [ecx-0x14],eax
  40f314:	xor    esi,DWORD PTR [edx-0x75b4ffde]
  40f31a:	dec    ecx
  40f31b:	jb     0x40f2d1
  40f31d:	xchg   DWORD PTR [esp+eax*2-0x5d],edi
  40f321:	sbb    al,BYTE PTR [eax+eiz*1]
  40f324:	dec    ebx
  40f325:	mov    dl,0xda
  40f327:	jo     0x40f342
  40f329:	das    
  40f32a:	retf   
  40f32b:	mov    BYTE PTR [esi],cl
  40f32d:	or     DWORD PTR [ebp-0x35],ecx
	...
  40f358:	pop    ss
  40f359:	sbb    ecx,edx
  40f35b:	push   es
  40f35c:	or     BYTE PTR [edx-0x17],cl
  40f35f:	retf   0xbcf7
  40f362:	inc    eax
  40f363:	jnp    0x40f36d
  40f365:	or     ecx,ebp
  40f367:	xchg   BYTE PTR [eax+0x3b513e0d],cl
  40f36d:	xor    edi,ebx
  40f36f:	inc    esi
  40f370:	or     cl,BYTE PTR [ecx]
  40f372:	cs push ecx
  40f374:	push   ebx
  40f375:	mov    cl,0xa4
  40f377:	aas    
  40f378:	dec    ebx
  40f379:	or     DWORD PTR [edx-0x40],ebp
  40f37c:	push   eax
  40f37d:	rcr    BYTE PTR [ebx-0x560b5b0d],0x44
  40f384:	dec    ebx
  40f385:	sar    BYTE PTR [ebx-0x31],0x24
  40f389:	xor    ah,BYTE PTR [ebp+0x2c8c4b03]
  40f38f:	clc    
  40f390:	sbb    eax,0x815bd936
  40f395:	dec    esp
  40f396:	sub    BYTE PTR [esp+ecx*1],al
  40f399:	ss (bad) 
  40f39c:	sahf   
  40f39d:	inc    ebp
  40f39e:	jmp    0xdd05bba6
  40f3a3:	retf   0x197f
  40f3a6:	push   ecx
  40f3a7:	sub    DWORD PTR [eax+0x5fcae94a],ecx
  40f3ad:	lods   eax,DWORD PTR ds:[esi]
  40f3ae:	rol    BYTE PTR [esi-0x79],0x9
  40f3b2:	jmp    0xa64dfc3d
  40f3b7:	push   eax
  40f3b8:	aas    
  40f3b9:	xor    DWORD PTR [edx],ebx
  40f3bb:	inc    edi
	...
  40f3e4:	or     cl,BYTE PTR [ecx]
  40f3e6:	xchg   esi,eax
  40f3e7:	push   eax
  40f3e8:	mov    bl,0xb0
  40f3ea:	fdivr  DWORD PTR [edi]
  40f3ec:	dec    ebx
  40f3ed:	or     DWORD PTR [edx-0x41],ebp
  40f3f0:	inc    eax
  40f3f1:	shl    bl,0xf3
  40f3f4:	sub    al,0x40
  40f3f6:	add    BYTE PTR [edx],ch
  40f3f8:	push   es
  40f3f9:	or     edi,edi
  40f3fb:	hlt    
  40f3fc:	je     0x40f3a5
  40f3fe:	sbb    al,0xad
  40f400:	dec    eax
  40f401:	or     DWORD PTR [ebx+0x317c25],eax
  40f407:	push   esi
  40f408:	sbb    edi,DWORD PTR [ebp-0x41832b02]
  40f40e:	xor    al,0xab
  40f410:	dec    edi
  40f411:	dec    edx
  40f412:	add    BYTE PTR [ecx-0x67],dl
  40f415:	cmp    edi,edi
  40f417:	fild   WORD PTR ss:[eax+eiz*8-0x3d]
  40f41c:	dec    eax
  40f41d:	shl    BYTE PTR [ecx+eiz*1-0x7f],0x34
  40f422:	or     al,0x1e
  40f424:	pop    ebx
  40f425:	dec    ebx
  40f426:	sub    DWORD PTR [eax-0x6a3f4eb8],ebp
  40f42c:	add    eax,eax
  40f42e:	mov    BYTE PTR [esp+eiz*8-0x6b01ffd0],ch
  40f435:	mov    ch,0xfe
  40f437:	jl     0x40f44d
  40f439:	shl    BYTE PTR [ebx+ebp*4],0x37
  40f43d:	dec    eax
  40f43e:	add    cl,dl
  40f440:	scas   al,BYTE PTR es:[edi]
  40f441:	cmp    bh,bh
  40f443:	fiadd  WORD PTR [eax+0x43d845]
	...
  40f46d:	add    BYTE PTR [eax],al
  40f46f:	add    BYTE PTR [edi-0x42],al
  40f472:	je     0x40f44d
  40f474:	add    dh,BYTE PTR [esi]
  40f476:	call   0x298c3141
  40f47b:	sub    BYTE PTR [edi-0x4f],cl
  40f47e:	xchg   esp,eax
  40f47f:	cmp    eax,0x2488c012
  40f484:	fwait
  40f485:	xor    BYTE PTR [eax],al
  40f487:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f488:	jl     0x40f437
  40f48a:	(bad)  
  40f48b:	adc    al,0xa7
  40f48d:	mov    edi,0x48602b34
  40f492:	add    BYTE PTR [ecx+0xff3502],al
  40f498:	lds    eax,FWORD PTR [edx+0x44]
  40f49b:	shl    BYTE PTR [edi],1
  40f49d:	(bad)  
  40f49e:	mov    edi,0xe44e1550
  40f4a3:	call   FWORD PTR [edi-0x1fca024a]
  40f4a9:	and    eax,DWORD PTR [ecx+0x0]
  40f4ac:	sbb    ch,BYTE PTR [eax]
  40f4ae:	je     0x40f4af
  40f4b0:	adc    eax,0xe1cc4442
  40f4b5:	inc    ebp
  40f4b6:	loopne 0x40f4b8
  40f4b8:	jne    0x40f4f8
  40f4ba:	mov    dh,0x0
  40f4bc:	jb     0x40f4c8
  40f4be:	cmp    DWORD PTR [ebp+0x3e],0x5
  40f4c2:	je     0x40f99f
  40f4c8:	loope  0x40f50f
  40f4ca:	rol    BYTE PTR [eax],1
  40f4cc:	xor    eax,0x3200a23e
  40f4d1:	or     cl,BYTE PTR [ebp+0x45]
	...
  40f4fb:	add    BYTE PTR [esi-0xb],ch
  40f4fe:	(bad)  
  40f4ff:	jne    0x40f54f
  40f501:	fisttp QWORD PTR [esi-0x3]
  40f504:	and    eax,0x25c009d1
  40f509:	mov    es,WORD PTR ds:[eax]
  40f50c:	and    cl,BYTE PTR [edx]
  40f50e:	cmp    DWORD PTR [ebp-0x22],0x9
  40f512:	je     0x40ff87
  40f518:	addr16 inc edi
  40f51b:	push   eax
  40f51c:	add    eax,0xf0e8d04f
  40f521:	(bad)  
  40f522:	std    
  40f523:	(bad)  
  40f524:	fxch   st(1)
  40f526:	jb     0x40f59d
  40f528:	jno    0x40f571
  40f52a:	enter  0x1e00,0x60
  40f52e:	push   0xbce0e210
  40f533:	call   FWORD PTR [edi-0x43]
  40f536:	out    0x76,al
  40f538:	dec    ebx
  40f539:	add    eax,0x14b4fec9
  40f53e:	in     al,0xfe
  40f540:	ss mov eax,0x3f36ccda
  40f546:	enter  0x16fe,0x94
  40f54a:	(bad)  
  40f54b:	je     0x40f590
  40f54d:	mov    ah,al
  40f54f:	ins    BYTE PTR es:[edi],dx
  40f550:	mov    WORD PTR [esi],fs
  40f552:	enter  0xa374,0x5e
  40f556:	dec    esi
  40f557:	or     BYTE PTR [ebx-0x62],dh
  40f55a:	push   ebp
  40f55b:	push   DWORD PTR [esi+ecx*2+0x4e]
  40f55f:	les    eax,FWORD PTR [eax]
	...
  40f585:	add    BYTE PTR [eax],al
  40f587:	add    BYTE PTR [esp+edi*2-0x52],ch
  40f58b:	(bad)  
  40f58c:	fidiv  WORD PTR [edi-0x9118326]
  40f592:	(bad)  
  40f593:	(bad)  
  40f594:	fsubrp st(7),st
  40f596:	(bad)  
  40f597:	je     0x40f614
  40f599:	out    0x4d,al
  40f59b:	or     BYTE PTR [ebx],dh
  40f59d:	mov    WORD PTR [ebp-0x1],ss
  40f5a0:	cmp    al,0x30
  40f5a2:	inc    esi
  40f5a3:	int3   
  40f5a4:	dec    ebx
  40f5a5:	xchg   esi,eax
  40f5a6:	in     eax,dx
  40f5a7:	sub    BYTE PTR [esi+0x5474fef2],0x37
  40f5ae:	ds int3 
  40f5b0:	sbb    al,0x83
  40f5b2:	(bad)  
  40f5b3:	je     0x40f5f8
  40f5b5:	or     ah,BYTE PTR [ebx]
  40f5b7:	ins    DWORD PTR es:[edi],dx
  40f5b8:	or     al,0xa4
  40f5ba:	fimul  DWORD PTR [ecx]
  40f5bc:	jno    0x40f570
  40f5be:	lds    esi,FWORD PTR [ebx+edx*2-0x36]
  40f5c2:	out    dx,eax
  40f5c3:	ins    BYTE PTR es:[edi],dx
  40f5c4:	hlt    
  40f5c5:	retf   
  40f5c6:	(bad)  
  40f5c7:	je     0x40f5b8
  40f5c9:	fiadd  DWORD PTR [edx-0x39841b91]
  40f5cf:	je     0x40f5b4
  40f5d1:	retf   0x704a
  40f5d4:	aam    0x6b
  40f5d6:	(bad)  
  40f5d7:	je     0x40f5b0
  40f5d9:	or     DWORD PTR [ecx-0x6243c4ad],edx
  40f5df:	(bad)  
  40f5e0:	aaa    
  40f5e1:	mov    ecx,0xbc3b5b80
  40f5e6:	(bad)  
  40f5e7:	(bad)  
  40f5e8:	aaa    
  40f5e9:	lods   eax,DWORD PTR ds:[esi]
  40f5ea:	nop
  40f5eb:	arpl   WORD PTR [eax],ax
	...
  40f611:	add    BYTE PTR [eax],al
  40f613:	add    BYTE PTR [ebx],bl
  40f615:	mov    esp,0xb117c77d
  40f61a:	sub    BYTE PTR [ebx],0x1b
  40f61d:	mov    esp,0xa517c76d
  40f622:	push   eax
  40f623:	xor    edi,ebx
  40f625:	mov    ebx,0xa8f7c75d
  40f62a:	inc    eax
  40f62b:	cmp    edi,ebx
  40f62d:	mov    ebx,0xdcf7c74d
  40f632:	push   eax
  40f633:	inc    ebx
  40f634:	fstp   TBYTE PTR [ebx-0x1f2838c3]
  40f63a:	inc    eax
  40f63b:	or     ebx,ebx
  40f63d:	mov    ebx,0xd4d7c72d
  40f642:	adc    BYTE PTR [ebx],dl
  40f644:	mov    ebx,0xb7c71dbc
  40f649:	fld    DWORD PTR [eax]
  40f64b:	sbb    edi,DWORD PTR [ebx-0x4838f244]
  40f651:	int    0x10
  40f653:	and    ebx,DWORD PTR [ebx+0xabcfdbc]
  40f659:	or     eax,0xacc030e9
  40f65e:	shl    BYTE PTR [si],0xb4
  40f662:	in     eax,0xc6
  40f664:	xlat   BYTE PTR ds:[ebx]
  40f665:	inc    ebp
  40f666:	fnsave [ebx]
  40f668:	cld    
  40f669:	xor    eax,0x473fc6e5
  40f66e:	add    BYTE PTR [ebp+0x4b],al
  40f671:	mov    cl,0x4c
  40f673:	inc    edx
  40f674:	dec    ebx
  40f675:	or     edx,esi
  40f677:	ret    
	...
  40f6a0:	dec    ebp
  40f6a1:	xchg   bh,bh
  40f6a3:	fmul   QWORD PTR [edi+0x9]
  40f6a6:	add    BYTE PTR [esi-0x17003e75],ah
  40f6ac:	dec    eax
  40f6ad:	or     edi,eax
  40f6af:	and    al,0x9b
  40f6b1:	mov    edx,0x2f48e906
  40f6b6:	add    BYTE PTR [ebx],al
  40f6b8:	inc    edi
  40f6b9:	das    
  40f6ba:	add    BYTE PTR [ebx],dl
  40f6bc:	dec    edi
  40f6bd:	mov    es,WORD PTR [ebp+esi*2+0x58]
  40f6c1:	mov    es,WORD PTR [ecx+edi*2+0x19feba85]
  40f6c8:	test   BYTE PTR [eax+edi*8],dh
  40f6cb:	sbb    di,WORD PTR [ebp+0x90917e7]
  40f6d2:	add    dl,ah
  40f6d4:	mov    BYTE PTR [edi],dh
  40f6d6:	add    eax,0xfebb9d40
  40f6db:	jmp    0xa8686ee0
  40f6e0:	dec    eax
  40f6e1:	mov    esp,0x6070e574
  40f6e6:	jae    0x40f716
  40f6e8:	test   DWORD PTR [ebx-0x75],ecx
  40f6eb:	cmp    ebx,eax
  40f6ed:	test   edi,ebp
  40f6ef:	push   ss
  40f6f0:	add    eax,0x10bb4fbc
  40f6f5:	push   edx
  40f6f6:	jae    0x40f706
  40f6f8:	add    eax,0x15118492
  40f6fd:	mov    esp,0x2ba511fe
  40f702:	push   esi
	...
  40f72c:	pushf  
  40f72d:	inc    ebp
  40f72e:	lock cdq 
  40f730:	jo     0x40f6e4
  40f732:	inc    ecx
  40f733:	sub    BYTE PTR [edi-0x46],cl
  40f736:	mov    ah,0xd1
  40f738:	push   cs
  40f739:	mov    esp,0x4744d6fe
  40f73e:	sub    DWORD PTR [eax],ebp
  40f740:	inc    edi
  40f741:	mov    cl,0x9c
  40f743:	add    BYTE PTR [eax],ah
  40f745:	(bad)  
  40f746:	std    
  40f747:	mov    DWORD PTR [edi-0x1f],esp
  40f74a:	cmc    
  40f74b:	call   FWORD PTR [ebp-0x6a134478]
  40f751:	(bad)  
  40f752:	std    
  40f753:	add    BYTE PTR [esi-0x11],ah
  40f756:	cmp    BYTE PTR [ebp-0x1e],0x9
  40f75a:	jne    0x40f7a5
  40f75c:	sub    DWORD PTR [edx],edi
  40f75e:	jmp    0x40f757
  40f760:	mov    ebp,0x1d30fdc4
  40f765:	cmp    ch,bl
  40f767:	neg    DWORD PTR ds:0xcebd7fc4
  40f76d:	int3   
  40f76e:	std    
  40f76f:	dec    edx
  40f771:	or     BYTE PTR [eax],al
  40f773:	add    BYTE PTR [eax+eax*8-0x33f17a3b],ah
  40f77a:	std    
  40f77b:	dec    DWORD PTR [edx]
  40f77d:	or     BYTE PTR [eax],al
  40f77f:	add    BYTE PTR [ecx],cl
  40f781:	scas   eax,DWORD PTR es:[edi]
  40f782:	std    
  40f783:	(bad)  
  40f784:	dec    bl
  40f786:	std    
  40f787:	call   FWORD PTR ds:0x1df7ea8a
  40f78d:	(bad)  
  40f78e:	std    
  40f78f:	mov    ch,0x0
	...
  40f7b5:	add    BYTE PTR [eax],al
  40f7b7:	add    BYTE PTR [edx],cl
  40f7b9:	int3   
  40f7ba:	std    
  40f7bb:	jmp    FWORD PTR [ebp+0x4a]
  40f7be:	or     al,ch
  40f7c0:	jmp    0xea82:0xa1fffdc1
  40f7c7:	idiv   DWORD PTR ds:0x6f74fec4
  40f7cd:	les    esi,FWORD PTR [ebx-0x23aea14]
  40f7d3:	call   0x404cd6
  40f7d8:	sbb    eax,0xedf7ea8b
  40f7dd:	(bad)  
  40f7de:	out    0x11,al
  40f7e0:	(bad)  
  40f7e1:	(bad)  
  40f7e2:	std    
  40f7e3:	dec    DWORD PTR [ebx-0x63]
  40f7e6:	(bad)  
  40f7e8:	in     al,dx
  40f7e9:	retf   0x74c3
  40f7ec:	push   ebx
  40f7ed:	fcomp  st(6)
  40f7ef:	std    
  40f7f0:	fdivr  QWORD PTR [edx-0x3d]
  40f7f3:	mov    ah,0xe3
  40f7f5:	jp     0x40f7ba
  40f7f7:	(bad)  
  40f7f8:	jecxz  0x40f871
  40f7fa:	push   esp
  40f7fb:	inc    esp
  40f7fd:	bound  edi,QWORD PTR ds:0xc466b2f8
  40f803:	(bad)  
  40f804:	mov    ah,0x92
  40f806:	dec    ebp
  40f807:	cld    
  40f808:	mov    ds:0x4b0042ed,eax
  40f80d:	jns    0x40f7cf
  40f80f:	pop    es
  40f810:	dec    ebx
  40f811:	adc    eax,0x6bc8eb79
  40f816:	(bad)  
  40f817:	imul   ecx,DWORD PTR [ebx+0x6],0xff14
	...
  40f842:	add    BYTE PTR [eax],al
  40f844:	(bad)  
  40f845:	mov    bh,0xda
  40f847:	or     edi,ebp
  40f849:	pop    edx
  40f84a:	les    ecx,FWORD PTR [eax-0x1ea4abf2]
  40f850:	or     DWORD PTR [ecx+0x2],esi
  40f853:	(bad)  
  40f854:	fidiv  WORD PTR [edi-0x5a25d26]
  40f85a:	ret    
  40f85b:	(bad)  
  40f85c:	fdivrp st(3),st
  40f85e:	ret    
  40f85f:	je     0x40f8a4
  40f861:	dec    eax
  40f862:	push   cs
  40f863:	ins    BYTE PTR es:[edi],dx
  40f864:	inc    esp
  40f865:	lock mov ecx,0x2da247c1
  40f86b:	mov    esp,DWORD PTR [edi]
  40f86d:	and    al,0xbf
  40f86f:	sti    
  40f870:	xchg   ebp,eax
  40f871:	jg     0x40f8cb
  40f873:	add    BYTE PTR [ecx+0x5374c371],dh
  40f879:	sbb    ch,BYTE PTR [edx+ebp*2+0x4478c014]
  40f880:	cvttps2pi mm1,QWORD PTR [esi]
  40f883:	pop    ebx
  40f884:	xor    ecx,DWORD PTR [ecx]
  40f886:	sub    BYTE PTR [eax+edx*8],al
  40f889:	idiv   BYTE PTR ds:0x69098bec
  40f88f:	add    ecx,DWORD PTR [ebx+0x3d]
  40f892:	and    al,0x2c
  40f894:	mov    ecx,0x7404284c
  40f899:	mov    eax,ds:0x94b44dc
  40f89e:	loop   0x40f863
  40f8a0:	pop    eax
  40f8a1:	sbb    BYTE PTR [edi],dl
  40f8a3:	lods   al,BYTE PTR ds:[esi]
  40f8a4:	test   DWORD PTR [ecx],esi
  40f8a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8a7:	ret    
	...
  40f8d0:	or     al,0x21
  40f8d2:	jmp    0xb89cda
  40f8d7:	mov    al,ds:0x53e94a09
  40f8dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8dd:	ds icebp 
  40f8df:	stos   DWORD PTR es:[edi],eax
  40f8e0:	pop    ebx
  40f8e1:	pushf  
  40f8e2:	jge    0x40f8a7
  40f8e4:	lods   al,BYTE PTR ds:[esi]
  40f8e5:	push   esi
  40f8e6:	pop    es
  40f8e7:	ret    
  40f8e8:	lea    esp,[edi+eiz*8-0x170834b7]
  40f8ef:	cmp    BYTE PTR [ecx-0x4b08a2b1],al
  40f8f5:	jb     0x40f94c
  40f8f7:	ret    
  40f8f8:	ins    DWORD PTR es:[edi],dx
  40f8f9:	mov    eax,0x101c725a
  40f8fe:	mov    esp,0x3d3e5d7e
  40f903:	ret    
  40f904:	fild   WORD PTR [eax]
  40f906:	inc    ecx
  40f907:	jge    0x40f8ea
  40f909:	mov    bh,0x2d
  40f90b:	arpl   WORD PTR [ebp+0x4b082ac2],sp
  40f911:	pop    esi
  40f912:	jb     0x40f8c4
  40f914:	leave  
  40f915:	int3   
  40f916:	adc    BYTE PTR [edi+0x4],dl
  40f919:	dec    esi
  40f91a:	adc    DWORD PTR [ebx+ecx*2],eax
  40f91d:	or     ecx,ebp
  40f91f:	retf   0xb587
  40f922:	call   0x4a442a
  40f927:	bound  eax,QWORD PTR [edx+0x48b18305]
  40f92d:	or     DWORD PTR ds:[edx],edx
  40f930:	pop    es
  40f931:	jecxz  0x40f904
  40f933:	inc    edx
	...
  40f95c:	push   es
  40f95d:	retf   0xe90b
  40f960:	ins    DWORD PTR es:[edi],dx
  40f961:	or     DWORD PTR [eax],eax
  40f963:	jmp    0x6aa19db0
  40f968:	mov    ebx,DWORD PTR [ecx]
  40f96a:	add    BYTE PTR ds:0xd9448442,dh
  40f970:	mov    edi,0x5b34ff1f
  40f975:	mov    eax,0xc6f0f174
  40f97a:	addr16 sahf 
  40f97c:	mov    DWORD PTR [edx+0xe73e0fa],ecx
  40f982:	or     DWORD PTR [edi+eiz*8],esp
  40f985:	mov    ds:0x36b21945,al
  40f98a:	(bad)  
  40f98b:	jle    0x40f916
  40f98d:	add    BYTE PTR [ebp+0x71],al
  40f990:	lock popa 
  40f992:	jg     0x40f97d
  40f994:	dec    eax
  40f995:	or     DWORD PTR [ebp-0x15],esi
  40f998:	lods   eax,DWORD PTR ds:[esi]
  40f999:	cli    
  40f99a:	and    BYTE PTR [edx+0x40],0x3e
  40f99e:	adc    eax,0x8ab10362
  40f9a3:	mov    ah,0xa4
  40f9a5:	push   es
  40f9a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9a7:	sub    edx,DWORD PTR [eax-0x36]
  40f9aa:	fcomip st,st(1)
  40f9ac:	(bad)  
  40f9ad:	dec    esp
  40f9ae:	clc    
  40f9af:	pusha  
  40f9b0:	repz mov ah,0xea
  40f9b3:	fcmovbe st,st(5)
  40f9b5:	dec    ebp
  40f9b6:	clc    
  40f9b7:	jb     0x40f95c
  40f9b9:	mov    ch,0xe
  40f9bb:	inc    ebp
  40f9bc:	push   cs
  40f9bd:	adc    cl,al
  40f9bf:	or     DWORD PTR [eax],eax
	...
  40f9e5:	add    BYTE PTR [eax],al
  40f9e7:	add    BYTE PTR [ecx-0x80],al
  40f9ea:	inc    esp
  40f9eb:	adc    edi,edx
  40f9ed:	pop    ebp
  40f9ee:	cld    
  40f9ef:	add    cl,dh
  40f9f1:	(bad)  
  40f9f2:	stc    
  40f9f3:	or     DWORD PTR [esp+edx*4-0x6fd9ba77],ebx
  40f9fa:	add    BYTE PTR ss:[edi+0x0],bh
  40f9fe:	sub    eax,eax
  40fa00:	pop    ecx
  40fa01:	fucomip st,st(1)
  40fa03:	push   es
  40fa04:	jns    0x40fa54
  40fa06:	clc    
  40fa07:	mov    ebp,DWORD PTR [edi]
  40fa09:	leave  
  40fa0a:	pop    ecx
  40fa0b:	leave  
  40fa0c:	mov    al,0x19
  40fa0e:	add    BYTE PTR [ebp+0x59],dl
  40fa11:	jns    0x40f994
  40fa13:	les    ebx,FWORD PTR [esi+0x2366932a]
  40fa19:	or     eax,0xf0a64539
  40fa1e:	add    eax,0xc0c2f22b
  40fa23:	adc    BYTE PTR [edx+0x3c9433c9],ah
  40fa29:	dec    edx
  40fa2a:	add    al,ch
  40fa2c:	push   ebp
  40fa2d:	out    0xfe,al
  40fa2f:	call   FWORD PTR [ebx]
  40fa31:	dec    esi
  40fa32:	clc    
  40fa33:	lea    ebp,[edi-0x37]
  40fa36:	dec    esi
  40fa37:	call   0x3fdb42
  40fa3c:	cmc    
  40fa3d:	std    
  40fa3e:	adc    edi,edi
  40fa40:	lahf   
  40fa41:	push   es
  40fa42:	push   DWORD PTR [ebp-0x16]
  40fa45:	(bad)  
  40fa46:	jae    0x40fa50
  40fa48:	or     ah,BYTE PTR [edx]
  40fa4a:	inc    WORD PTR [eax]
	...
  40fa71:	add    BYTE PTR [eax],al
  40fa73:	add    BYTE PTR ds:0xee0fc004,dl
  40fa79:	and    bh,bh
  40fa7b:	jmp    DWORD PTR [edx-0x37]
  40fa7e:	jae    0x40fa8c
  40fa80:	adc    eax,0xfffff7fe
  40fa85:	jne    0x40fa6d
  40fa87:	stc    
  40fa88:	iret   
  40fa89:	enter  0x8bfd,0xef
  40fa8d:	add    eax,0xb04b453b
  40fa92:	jae    0x439a87
  40fa98:	sbb    al,0x35
  40fa9a:	pop    ss
  40fa9b:	call   FWORD PTR [esi-0x5b5e5548]
  40faa1:	mov    edi,0xbc8e88bf
  40faa6:	stos   DWORD PTR es:[edi],eax
  40faa7:	jae    0x40faa5
  40faa9:	cld    
  40faaa:	mov    bh,0x2a
  40faac:	sbb    DWORD PTR [ebx],edi
  40faae:	inc    esi
  40faaf:	hlt    
  40fab0:	hlt    
  40fab1:	add    al,0x98
  40fab3:	mov    ah,BYTE PTR gs:[eax-0x5da82df5]
  40faba:	stos   DWORD PTR es:[edi],eax
  40fabb:	addr16 popa 
  40fabd:	mov    al,ds:0xa856ff52
  40fac2:	stos   BYTE PTR es:[edi],al
  40fac3:	mov    BYTE PTR [edi],ch
  40fac5:	addr16 mov edi,0xbfb436fe
  40facb:	je     0x40fb10
  40facd:	cwde   
  40face:	xor    esp,DWORD PTR [edi-0x54]
  40fad1:	sahf   
  40fad2:	mov    edx,DWORD PTR [edi+edi*1+0x23]
  40fad6:	std    
  40fad7:	inc    DWORD PTR [eax]
	...
  40fafd:	add    BYTE PTR [eax],al
  40faff:	add    BYTE PTR [edi],dl
  40fb01:	mov    ds:0xecc247ab,al
  40fb06:	mov    bh,0x8a
  40fb08:	ds push esp
  40fb0a:	sub    DWORD PTR [ecx+0x4b],eax
  40fb0d:	and    ebp,DWORD PTR [edx+0x362f1a03]
  40fb13:	adc    al,0x1a
  40fb15:	push   edi
  40fb16:	ss clc 
  40fb18:	ins    BYTE PTR es:[edi],dx
  40fb19:	aam    0xa
  40fb1b:	call   0xff00ca4c
  40fb20:	add    bh,BYTE PTR [ebx+0x5b4974c2]
  40fb26:	out    0x50,al
  40fb28:	dec    esp
  40fb29:	je     0x40fae5
  40fb2b:	(bad)  
  40fb2c:	mov    esi,0xa679aae6
  40fb31:	or     DWORD PTR [esi],esp
  40fb33:	shl    BYTE PTR ds:0xb8ab1d3f,0x2d
  40fb3a:	push   ss
  40fb3b:	shl    BYTE PTR [edi+0x9],0xe9
  40fb3f:	inc    ebx
  40fb40:	inc    ebp
  40fb41:	cmp    ebp,ebx
  40fb43:	lods   al,BYTE PTR ds:[esi]
  40fb44:	dec    esp
  40fb45:	mov    BYTE PTR [ebx-0x49],bh
  40fb48:	or     al,0x3e
  40fb4a:	outs   dx,DWORD PTR ds:[esi]
  40fb4b:	lods   al,BYTE PTR ds:[esi]
  40fb4c:	pop    esp
  40fb4d:	mov    ah,0x73
  40fb4f:	mov    edi,0xbf4d07e4
  40fb54:	cmc    
  40fb55:	int3   
  40fb56:	and    eax,eax
  40fb58:	in     al,dx
  40fb59:	mov    ah,0xe8
  40fb5b:	add    edx,eax
  40fb5d:	dec    esi
  40fb5e:	cmc    
  40fb5f:	(bad)  
  40fb60:	fdiv   QWORD PTR [eax+ebp*8+0x3]
	...
  40fb8b:	add    BYTE PTR [ebx-0x4c],cl
  40fb8e:	xor    edi,DWORD PTR [esp+eiz*8-0x3a40baca]
  40fb95:	and    BYTE PTR [ebx],0xc0
  40fb98:	xchg   ebx,eax
  40fb99:	xbegin 0x8cc119a2
  40fb9f:	push   edi
  40fba0:	ror    BYTE PTR [esi-0x1b],0x82
  40fba4:	in     al,0x1
  40fba6:	cmp    DWORD PTR [edi+ebx*1-0x3e4079db],ebp
  40fbad:	mov    cl,0x7d
  40fbaf:	cmp    DWORD PTR [edi],edi
  40fbb1:	test   ch,ch
  40fbb3:	mov    esi,0x475e18ff
  40fbb8:	inc    edi
  40fbb9:	mov    bl,ah
  40fbbb:	cmovnp edi,DWORD PTR ds:0x4f7beee
  40fbc2:	fs inc edi
  40fbc4:	push   ebx
  40fbc5:	pop    ecx
  40fbc6:	dec    esi
  40fbc7:	cmp    DWORD PTR [ebx-0x5f],edx
  40fbca:	pop    edx
  40fbcb:	xor    BYTE PTR [esp+esi*4+0x71],dl
  40fbcf:	dec    ecx
  40fbd0:	aaa    
  40fbd1:	cmp    bh,0xf0
  40fbd4:	ror    BYTE PTR [ecx],0x0
  40fbd7:	jmp    0x2c0a5024
  40fbdc:	pop    edi
  40fbdd:	or     DWORD PTR [ebp+0x72],edx
  40fbe0:	sti    
  40fbe1:	xchg   bl,al
  40fbe3:	sbb    eax,0x26145cd0
  40fbe8:	dec    ecx
  40fbe9:	or     DWORD PTR [eax],eax
  40fbeb:	jmp    0xf712dc38
	...
  40fc18:	add    DWORD PTR ds:0x948e901,0xf
  40fc1f:	push   ebp
  40fc20:	or     DWORD PTR [edi+0x3e48f57c],eax
  40fc26:	adc    ebx,esi
  40fc28:	xor    ebx,DWORD PTR ds:0x932ea6a
  40fc2e:	push   0xffffffe9
  40fc30:	mov    al,0x83
  40fc32:	inc    dh
  40fc34:	xchg   ebp,eax
  40fc35:	mov    al,ds:0x948eb28
  40fc3a:	xor    DWORD PTR [ebx+ebx*2],0xa
  40fc3e:	jne    0x40fc4a
  40fc40:	cld    
  40fc41:	cmp    al,0x10
  40fc43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc44:	jae    0x40fc47
  40fc46:	call   0xfef562f7
  40fc4b:	pusha  
  40fc4c:	adc    esi,DWORD PTR [ebp+0x1f4314fe]
  40fc52:	add    BYTE PTR [ebx],dl
  40fc54:	inc    ebx
  40fc55:	xchg   BYTE PTR [ebp+edi*2-0x8],al
  40fc59:	mov    al,ds:0xb2c57666
  40fc5e:	call   0x4a474c
  40fc63:	push   0xb
  40fc65:	add    eax,0xb269d402
  40fc6a:	je     0x40fc65
  40fc6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc6d:	cmp    al,0x8
  40fc6f:	inc    ecx
  40fc70:	adc    eax,0xd00ff2b
  40fc75:	test   DWORD PTR [ebx-0x4],eax
  40fc78:	or     eax,0x6a13f1
	...
  40fca1:	add    BYTE PTR [eax],al
  40fca3:	add    BYTE PTR [edx],dh
  40fca5:	loope  0x40fcaa
  40fca7:	(bad)  
  40fca8:	out    0x72,eax
  40fcaa:	dec    esi
  40fcab:	call   0x3e70dc
  40fcb0:	pop    ebx
  40fcb1:	(bad)  
  40fcb3:	push   DWORD PTR [edx]
  40fcb5:	mov    BYTE PTR [ebx+0xc],bh
  40fcb8:	xor    edx,esi
  40fcba:	pop    ds
  40fcbb:	call   DWORD PTR [edi+0xd036a16]
  40fcc1:	sti    
  40fcc2:	pop    es
  40fcc3:	call   0x3fe95e
  40fcc8:	in     eax,dx
  40fcc9:	cli    
  40fcca:	adc    ebp,DWORD PTR [edx-0x1f]
  40fccd:	loopne 0x40fcce
  40fccf:	imul   esp,edx,0xfdff165e
  40fcd5:	je     0x40fcbe
  40fcd7:	mov    cl,0xf3
  40fcd9:	push   es
  40fcda:	add    BYTE PTR [ebx+0x7504198f],al
  40fce0:	inc    ecx
  40fce1:	je     0x40fd56
  40fce3:	adc    ch,bh
  40fce5:	cli    
  40fce6:	pop    es
  40fce7:	call   0x3fe7da
  40fcec:	cmp    ecx,DWORD PTR [edx-0x4]
  40fcef:	call   DWORD PTR [edi+0x11]
  40fcf2:	push   0x0
  40fcf4:	dec    eax
  40fcf5:	add    DWORD PTR [ebp-0x17a231bb],ecx
  40fcfb:	out    dx,eax
  40fcfc:	int3   
  40fcfd:	je     0x40fcfc
  40fcff:	jmp    0x41031e
  40fd04:	icebp  
  40fd05:	icebp  
  40fd06:	or     eax,DWORD PTR ds:0x0
	...
  40fd30:	ja     0x40fd4f
  40fd32:	push   DWORD PTR [ebp+0x72]
  40fd35:	loopne 0x40fd3c
  40fd37:	call   DWORD PTR [edi+0x4b55e7fe]
  40fd3d:	ret    0xfebb
  40fd40:	mov    ds:0x4b0002a1,eax
  40fd45:	pop    ecx
  40fd46:	sub    DWORD PTR [ecx],eax
  40fd48:	dec    ebx
  40fd49:	mov    al,ds:0xa2577c7f
  40fd4e:	xor    eax,0x127d3c20
  40fd53:	push   0x43
  40fd55:	jmp    0x40fd8d
  40fd57:	or     BYTE PTR [ebx],ah
  40fd59:	test   al,0x24
  40fd5b:	jmp    DWORD PTR [ebx+ebx*1]
  40fd5e:	aaa    
  40fd5f:	adc    al,0xb1
  40fd61:	lahf   
  40fd62:	sub    BYTE PTR [eax],al
  40fd64:	mov    eax,ds:0xdabaaa0
  40fd69:	mov    bl,0xbb
  40fd6b:	call   0x439efe
  40fd70:	enter  0xf24,0x7
  40fd74:	jle    0x40fd76
  40fd76:	mov    ebp,0xc565b74
  40fd7b:	call   FWORD PTR [esi-0x58]
  40fd7e:	stos   BYTE PTR es:[edi],al
  40fd7f:	adc    DWORD PTR [ebp-0x3d],esp
  40fd82:	mov    ebx,0x28d45efe
  40fd87:	add    esp,DWORD PTR [ecx-0x60]
  40fd8a:	sub    BYTE PTR [eax],al
  40fd8c:	mov    bl,0x21
  40fd8e:	mov    ebp,0x1bc8bcfe
  40fd93:	add    DWORD PTR [eax],eax
	...
  40fdb9:	add    BYTE PTR [eax],al
  40fdbb:	add    BYTE PTR [ebx-0x60],cl
  40fdbe:	jg     0x40fe3c
  40fdc0:	aas    
  40fdc1:	mov    eax,0xe48c1c35
  40fdc6:	mov    edi,0x29f9cff
  40fdcb:	call   FWORD PTR [esi]
  40fdcd:	aam    0x28
  40fdcf:	add    BYTE PTR [ecx],ah
  40fdd1:	lods   al,BYTE PTR ds:[esi]
  40fdd2:	lea    eax,[edi+eax*4+0xf]
  40fdd6:	lods   al,BYTE PTR ds:[esi]
  40fdd7:	arpl   WORD PTR [ebp+0x22],di
  40fdda:	mov    esp,0xe90876e8
  40fddf:	add    ecx,DWORD PTR [ebx-0x7a]
  40fde2:	fisttp DWORD PTR [edi]
  40fde4:	push   edx
  40fde5:	cmp    al,0xf5
  40fde7:	les    eax,FWORD PTR [edi]
  40fde9:	mov    ch,0xe7
  40fdeb:	add    ecx,DWORD PTR [ebx+0x9]
  40fdee:	inc    esi
  40fdef:	ss aaa 
  40fdf1:	pop    ds
  40fdf2:	jmp    0xabbf4d20
  40fdf7:	mov    edi,0xbdaaa18c
  40fdfc:	xor    eax,0x2cd80fb1
  40fe01:	mov    cl,0xe8
  40fe03:	and    BYTE PTR [edi+0x5136e2fd],0x71
  40fe0a:	call   0x104a4912
  40fe0f:	enter  0xb10c,0xe8
  40fe13:	add    BYTE PTR [edi+0x5136e1fd],0x71
  40fe1a:	call   0xd04a4922
  40fe1f:	jg     0x40fe21
	...
  40fe45:	add    BYTE PTR [eax],al
  40fe47:	add    ah,ch
  40fe49:	mov    al,0xe8
  40fe4b:	xchg   BYTE PTR [edi-0x3],ah
  40fe4e:	in     al,0x35
  40fe50:	jbe    0x40fe56
  40fe52:	mov    ebx,0x438a7a30
  40fe57:	or     BYTE PTR [ebx+0x9],cl
  40fe5a:	sub    DWORD PTR [edx],eax
  40fe5c:	cmp    BYTE PTR [ecx-0x4a],al
  40fe5f:	xor    DWORD PTR [edi-0x80],ecx
  40fe62:	and    esi,DWORD PTR [eax+0x89d1ec9]
  40fe68:	call   0x80b5:0x1fbb951e
  40fe6f:	xchg   BYTE PTR [edx],dh
  40fe71:	mov    al,0x8d
  40fe73:	lea    ecx,[edi]
  40fe75:	mov    cl,0x85
  40fe77:	xor    DWORD PTR [ebx],edi
  40fe79:	mov    al,0xf3
  40fe7b:	scas   eax,DWORD PTR es:[edi]
  40fe7c:	test   DWORD PTR [esi],esi
  40fe7e:	add    BYTE PTR [ecx-0x40],dh
  40fe81:	xor    eax,0x2bfa8108
  40fe86:	jmp    DWORD PTR [esi-0x50]
  40fe89:	xor    eax,0xb04ed314
  40fe8e:	je     0x40feed
  40fe90:	mov    al,ds:0x7e41f835
  40fe95:	lods   eax,DWORD PTR ds:[esi]
  40fe96:	inc    BYTE PTR [esi-0x70]
  40fe99:	xor    eax,0x224051f8
  40fe9e:	push   DWORD PTR [esi]
  40fea0:	mov    edi,0x48e90009
  40fea5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fea6:	pop    edi
  40fea7:	push   0x72
  40fea9:	std    
  40feaa:	or     al,0x9b
	...
  40fed4:	jnp    0x40feda
  40fed6:	rcr    BYTE PTR [edi+esi*2+0x48dd7c8a],cl
  40fedd:	or     DWORD PTR [eax-0x11],eax
  40fee0:	push   ebp
  40fee1:	inc    ecx
  40fee2:	push   DWORD PTR [esp+ecx*2-0x80]
  40fee6:	inc    esp
  40fee7:	std    
  40fee8:	lds    ebx,FWORD PTR [esp+esi*8]
  40feeb:	fcomp  QWORD PTR [edi]
  40feed:	sbb    eax,0xb53be6f4
  40fef2:	out    0x6,eax
  40fef4:	xor    eax,0x8b60feb0
  40fef9:	mov    cl,0xfe
  40fefb:	push   esp
  40fefc:	aas    
  40fefd:	mov    al,0x74
  40feff:	mov    ebp,0xbef83491
  40ff04:	jnp    0x40ff07
  40ff06:	call   0xfef16a1e
  40ff0b:	scas   al,BYTE PTR es:[edi]
  40ff0c:	jnp    0x40ff23
  40ff0e:	push   0xffffffe8
  40ff10:	icebp  
  40ff11:	xor    al,0xf4
  40ff13:	sahf   
  40ff14:	pop    ebx
  40ff15:	mov    cl,0xe7
  40ff17:	pop    ds
  40ff18:	loop   0x40fec8
  40ff1a:	dec    BYTE PTR [esi+0xe7b15b]
  40ff20:	mov    esi,0xafffedc
  40ff25:	add    eax,0x5e720000
  40ff2a:	add    edi,DWORD PTR [eax+0xb62]
  40ff30:	cmp    eax,esi
  40ff32:	push   cs
  40ff33:	add    BYTE PTR [edi+0x56ea7e],bl
	...
  40ff5d:	add    BYTE PTR [eax],al
  40ff5f:	add    cl,dh
  40ff61:	lock pop es
  40ff63:	add    BYTE PTR [edi+0x8],bh
  40ff66:	pop    esi
  40ff67:	leave  
  40ff68:	and    BYTE PTR [eax+0x2ff8afe],dh
  40ff6e:	jmp    0x40ff7a
  40ff70:	jne    0x40ff2a
  40ff72:	out    0xb9,al
  40ff74:	or     esi,DWORD PTR [ebp+edi*8-0x7d]
  40ff78:	pop    esp
  40ff79:	scas   al,BYTE PTR es:[edi]
  40ff7a:	cmp    DWORD PTR [esi],0xfff0fa32
  40ff80:	mov    edi,0xcba9e802
  40ff85:	jae    0x40ff84
  40ff87:	pop    esi
  40ff88:	pop    ebx
  40ff89:	les    eax,FWORD PTR [edx]
  40ff8b:	add    bh,bl
  40ff8d:	jg     0x40ff79
  40ff8f:	mov    ebp,DWORD PTR [edi+0x16558b02]
  40ff95:	add    BYTE PTR [edx],0x90
  40ff98:	popa   
  40ff99:	test   BYTE PTR [edi],0x0
  40ff9c:	jle    0x40ffa6
  40ff9e:	mov    edx,DWORD PTR [ebp-0x1e]
  40ffa1:	jno    0x40ffd1
  40ffa3:	(bad)  
  40ffa4:	loopne 0x40ff2b
  40ffa6:	jnp    0x40ffbc
  40ffa8:	loop   0x40ff88
  40ffaa:	pop    es
  40ffab:	mov    ebx,DWORD PTR [edi+0x19]
  40ffae:	push   DWORD PTR [eax-0x52]
  40ffb1:	add    DWORD PTR [eax],0xd6783
  40ffb7:	je     0x40ff74
  40ffb9:	jge    0x41000e
  40ffbb:	sbb    BYTE PTR [edx-0x80],ah
  40ffbe:	add    BYTE PTR [ebx-0x36f55db5],al
	...
  40ffec:	mov    DWORD PTR [edx+eax*1-0x7b6b3fab],esi
  40fff3:	ret    
  40fff4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fff5:	pop    ss
  40fff6:	push   edx
  40fff7:	mov    eax,DWORD PTR [esi]
  40fff9:	sar    BYTE PTR [edi+0x2a074ff],1
  40ffff:	add    al,al
  410001:	pop    ebp
  410002:	push   es
  410003:	(bad)  
  410004:	dec    ebx
  410005:	mov    al,ds:0x234b0002
  41000a:	aaa    
  41000b:	or     BYTE PTR [ebx-0x2b],cl
  41000e:	or     ch,BYTE PTR [ebx]
  410010:	mov    esp,DWORD PTR [esi+0x57]
  410013:	leave  
  410014:	or     DWORD PTR [edx+eax*1-0x55574901],ebx
  41001b:	jmp    FWORD PTR [ebx+0xb0ab8df]
  410021:	lea    ecx,[edx]
  410023:	sub    ecx,DWORD PTR [ebx]
  410025:	outs   dx,BYTE PTR ds:[esi]
  410026:	push   edi
  410027:	leave  
  410028:	or     DWORD PTR [edx+eax*1-0x46e77177],esp
  41002f:	je     0x410074
  410031:	sbb    BYTE PTR [esi],cl
  410033:	arpl   WORD PTR [edi+ebp*4],ax
  410036:	mov    edi,0x2a0f744
  41003b:	add    BYTE PTR [ebx+0x4d],cl
  41003e:	aas    
  41003f:	in     al,dx
  410040:	fwait
  410041:	xor    eax,0xcf7bf43e
  410046:	sub    eax,0xbc6ef308
  41004b:	(bad)  
  41004c:	aam    0x18
  41004e:	aas    
  41004f:	in     al,dx
	...
  410078:	push   esp
  410079:	mov    edx,0x9fbf7c83
  41007e:	cs add al,0x50
  410081:	xchg   edx,eax
  410082:	or     BYTE PTR cs:[eax+0x60],ah
  410086:	pop    eax
  410087:	pop    edi
  410088:	or     BYTE PTR [eax],0xab
  41008b:	pop    es
  41008c:	dec    ebx
  41008d:	loop   0x4100b2
  41008f:	test   al,0xd3
  410091:	inc    ebx
  410092:	add    DWORD PTR [edx+0x3e8a117],0xbff08eb
  41009c:	xor    cl,cl
  41009e:	push   ds
  41009f:	pop    ecx
  4100a0:	xchg   edx,eax
  4100a1:	retf   0x3e4
  4100a4:	rol    BYTE PTR [ebx-0x7f],0xc2
  4100a8:	mov    WORD PTR [edx],cs
  4100aa:	mov    ecx,0x5e2073ab
  4100af:	mov    eax,0x8c5543d3
  4100b4:	pop    esp
  4100b5:	lds    esp,FWORD PTR [ebx-0x1752b361]
  4100bb:	add    esi,DWORD PTR [eax]
  4100bd:	stc    
  4100be:	imul   edi,DWORD PTR [esi],0x3b
  4100c1:	pop    edx
  4100c2:	fs ds aas 
  4100c5:	pop    edx
  4100c6:	cs cs inc ebx
  4100c9:	mov    eax,ds:0xad25bda5
  4100ce:	jno    0x410116
  4100d0:	sbb    esi,ecx
  4100d2:	mov    ds:0xe2059dab,eax
  4100d7:	aad    0x98
  4100d9:	sbb    DWORD PTR [esi],eax
  4100db:	add    BYTE PTR cs:[eax],al
	...
  410102:	add    BYTE PTR [eax],al
  410104:	pop    es
  410105:	mov    ds:0xacfc2b48,al
  41010a:	rol    ebx,0x96
  41010d:	dec    esp
  41010e:	and    ch,al
  410110:	inc    eax
  410111:	or     DWORD PTR [eax],edx
  410113:	dec    ecx
  410114:	rep lods al,BYTE PTR ds:[esi]
  410116:	and    esp,DWORD PTR [eax-0x53ac774f]
  41011c:	aam    0x36
  41011e:	out    0x82,eax
  410120:	dec    edi
  410121:	mov    ch,0xe8
  410123:	xor    BYTE PTR [edx-0x4353c478],cl
  410129:	xor    eax,0x2dc9ef00
  41012e:	hlt    
  41012f:	jmp    0x1d401aaf
  410134:	jecxz  0x4100da
  410136:	jo     0x410149
  410138:	aam    0xab
  41013a:	sub    ch,BYTE PTR [ecx-0x5436b403]
  410140:	inc    ebx
  410141:	or     DWORD PTR [ebx+0x73acab04],eax
  410147:	in     al,0xaf
  410149:	jg     0x41014a
  41014b:	call   0xd9858198
  410150:	mov    ch,0x35
  410152:	in     al,0x76
  410154:	dec    edi
  410155:	add    BYTE PTR [ebp+eax*2-0x7a],0xcc
  41015a:	add    DWORD PTR [ecx+0x4e6829a0],edi
  410160:	xchg   esp,eax
  410161:	add    DWORD PTR [ebp+eiz*1-0x30],0x72dc2c
	...
  41018d:	add    BYTE PTR [eax],al
  41018f:	add    BYTE PTR [edx-0x53],bh
  410192:	jmp    0x8a26:0xcf7fa391
  410199:	test   eax,0x948e8ff
  41019e:	lea    esp,[eax+ebp*8-0x1b5372c5]
  4101a5:	cmp    edx,DWORD PTR [edx+0xe]
  4101a8:	pop    edx
  4101a9:	add    eax,ebp
  4101ab:	push   ss
  4101ac:	shr    BYTE PTR [edx+0x3808f2fe],0xc
  4101b3:	push   0x32
  4101b5:	mov    ch,0xff
  4101b7:	je     0x4101a7
  4101b9:	xchg   BYTE PTR [ecx+ecx*8+0x48],bh
  4101bd:	ss es push 0x23
  4101c1:	test   eax,0xac475cff
  4101c6:	je     0x410191
  4101c8:	mov    al,ds:0x8d006805
  4101cd:	jb     0x4101cc
  4101cf:	jne    0x4101af
  4101d1:	pop    edi
  4101d2:	sub    dh,bh
  4101d4:	std    
  4101d5:	jb     0x4101d4
  4101d7:	jne    0x4101b7
  4101d9:	pop    edi
  4101da:	hlt    
  4101db:	addr16 in eax,dx
  4101dd:	jb     0x410208
  4101df:	rcr    BYTE PTR [esp+edx*2-0x37],0xc2
  4101e4:	scas   al,BYTE PTR es:[edi]
  4101e5:	pop    es
  4101e6:	mov    eax,DWORD PTR [ebp-0x3e]
  4101e9:	push   ds
  4101ea:	dec    BYTE PTR [ebp-0x2a]
  4101ed:	xchg   BYTE PTR [ebx-0x1c],bh
  4101f0:	jb     0x4101cd
  4101f2:	add    eax,0x83
	...
  41021b:	add    BYTE PTR [edi+0x5b],bh
  41021e:	(bad)  
  41021f:	je     0x41021f
  410221:	jle    0x410266
  410223:	or     al,0xed
  410225:	clc    
  410226:	fisttp DWORD PTR [edi-0x38c8d8e]
  41022c:	or     bh,BYTE PTR [edi+0x2ffdff65]
  410232:	add    BYTE PTR [eax],al
  410234:	xor    al,BYTE PTR [edi]
  410236:	pop    esi
  410237:	pop    edi
  410238:	jnp    0x410202
  41023a:	or     al,BYTE PTR [eax]
  41023c:	xlat   BYTE PTR ds:[ebx]
  41023d:	jg     0x410229
  41023f:	and    DWORD PTR [esi-0x42],0x55
  410243:	sub    edi,0x16
  410246:	add    BYTE PTR [ebp+0x18],dh
  410249:	das    
  41024a:	add    BYTE PTR [eax],al
  41024c:	and    al,BYTE PTR [edi]
  41024e:	pop    edi
  41024f:	leave  
  410250:	pusha  
  410251:	cli    
  410252:	(bad)  
  410253:	(bad)  
  410254:	mov    edi,0x79d22b16
  410259:	dec    ecx
  41025a:	adc    bh,dh
  41025c:	pop    es
  41025d:	jnp    0x4102c3
  41025f:	inc    ecx
  410260:	loop   0x4102df
  410262:	inc    ebx
  410263:	lock js 0x41026b
  410266:	push   DWORD PTR [ebp+0x2]
  410269:	jne    0x4102de
  41026b:	or     BYTE PTR [ebx-0x38],cl
  41026e:	sbb    DWORD PTR [edi-0x34],ebx
  410271:	mov    ebx,0xa05b7c80
  410276:	sub    eax,0x28a1310c
  41027b:	fs mov ah,0xed
  41027e:	or     ebp,eax
	...
  4102a8:	inc    ebx
  4102a9:	sti    
  4102aa:	mov    ah,0xfe
  4102ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102ad:	or     eax,0xb816ff10
  4102b2:	stos   BYTE PTR es:[edi],al
  4102b3:	dec    edx
  4102b4:	sub    DWORD PTR [ebx+0x7c0688b4],edx
  4102ba:	mov    ah,0x74
  4102bc:	pop    edi
  4102bd:	sub    DWORD PTR [esi],0x8
  4102c0:	jae    0x410292
  4102c2:	and    bh,bh
  4102c4:	je     0x4102f9
  4102c6:	das    
  4102c7:	adc    al,0x6c
  4102c9:	mov    ch,0xa
  4102cb:	call   0xfef4c11e
  4102d0:	shl    BYTE PTR [ebp-0x46],cl
  4102d3:	(bad)  
  4102d4:	fisubr WORD PTR [ebx+0x484374b3]
  4102da:	lods   eax,DWORD PTR ds:[esi]
  4102db:	pusha  
  4102dc:	inc    esp
  4102dd:	inc    ebx
  4102de:	mov    ch,0x74
  4102e0:	push   edi
  4102e1:	jmp    0x410311
  4102e3:	or     BYTE PTR [ebx],ah
  4102e5:	fldenv [eax]
  4102e7:	jmp    FWORD PTR [edi+eiz*1]
  4102ea:	aas    
  4102eb:	adc    al,0xc8
  4102ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102ee:	add    dh,BYTE PTR [edi+ecx*2+0x1f]
  4102f2:	aaa    
  4102f3:	cld    
  4102f4:	inc    esi
  4102f5:	mov    WORD PTR ds:0xfefc8e83,es
  4102fb:	jae    0x410349
  4102fd:	xlat   BYTE PTR ds:[ebx]
  4102fe:	ret    0x125e
  410301:	fimul  WORD PTR [edi]
  410303:	add    BYTE PTR [edx+0x4b411e4b],ch
  410309:	adc    DWORD PTR [eax+edi*1+0x0],ebp
	...
  410334:	mov    cs,WORD PTR [ecx]
  410336:	loope  0x410365
  410338:	inc    esp
  410339:	fisubr WORD PTR [eax-0x338fdac]
  41033f:	add    ecx,eax
  410341:	sub    ecx,ebp
  410343:	(bad)  
  410344:	aas    
  410345:	sti    
  410346:	lds    ebp,FWORD PTR [esi]
  410348:	push   edi
  410349:	stos   BYTE PTR es:[edi],al
  41034a:	xor    ecx,DWORD PTR [ebx+eiz*4]
  41034d:	xchg   DWORD PTR [edi-0x4b],eax
  410350:	lods   eax,DWORD PTR ds:[esi]
  410351:	jg     0x410376
  410353:	int3   
  410354:	sub    al,0x9
  410356:	jmp    0xe5e24e5d
  41035b:	sbb    al,0x94
  41035d:	test   eax,0xdd973e5f
  410362:	lea    ebp,[eax+0xffbaa5a]
  410368:	jl     0x41039d
  41036a:	icebp  
  41036b:	stos   DWORD PTR es:[edi],eax
  41036c:	(bad)  
  41036d:	daa    
  41036e:	jbe    0x410324
  410370:	rcl    DWORD PTR [ebx+0x75],0x8a
  410374:	dec    eax
  410375:	outs   dx,DWORD PTR ds:[esi]
  410376:	lods   eax,DWORD PTR ds:[esi]
  410377:	clc    
  410378:	fbstp  TBYTE PTR [eax+0x43c1aada]
  41037e:	std    
  41037f:	adc    BYTE PTR [ecx+ecx*1],0xd4
  410383:	add    al,0x44
  410385:	pop    ds
  410386:	cmp    eax,0x3e300aab
  41038b:	mov    ah,0x61
  41038d:	leave  
  41038e:	xchg   ebp,eax
  41038f:	retf   0xfe0a
  410392:	call   0xebe6ab17
  410397:	add    al,0x0
	...
  4103bd:	add    BYTE PTR [eax],al
  4103bf:	add    dh,al
  4103c1:	jo     0x4103ab
  4103c3:	add    ecx,DWORD PTR [ebx-0xc]
  4103c6:	adc    eax,0xb3949ea8
  4103cb:	scas   eax,DWORD PTR es:[edi]
  4103cc:	ror    DWORD PTR ds:0x99860043,1
  4103d2:	xchg   edx,eax
  4103d3:	add    ebx,DWORD PTR [ebx+0x407bffa8]
  4103d9:	mov    cl,0x27
  4103db:	(bad)  
  4103dc:	lahf   
  4103dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103de:	(bad)  
  4103df:	pop    esp
  4103e0:	inc    ebx
  4103e1:	test   al,0x74
  4103e3:	icebp  
  4103e4:	mov    al,0xfa
  4103e6:	pusha  
  4103e7:	(bad)  
  4103e8:	cwde   
  4103e9:	xchg   ecx,eax
  4103ea:	inc    esp
  4103eb:	popf   
  4103ec:	gs or  edi,edi
  4103ef:	cmp    al,0x63
  4103f1:	test   al,0x74
  4103f3:	icebp  
  4103f4:	rcl    BYTE PTR [ecx-0x8],1
  4103f7:	mov    dh,0xf8
  4103f9:	xchg   ebx,eax
  4103fa:	dec    esp
  4103fb:	aad    0xcd
  4103fd:	loope  0x4103fe
  4103ff:	sbb    ecx,DWORD PTR [eax-0x58]
  410402:	je     0x410399
  410404:	mov    bh,0x36
  410406:	xchg   si,ax
  410408:	fdiv   st,st(3)
  41040a:	mov    edi,0x13cac62e
  41040f:	jmp    0x7e5921cd
  410414:	xor    bh,ch
  410416:	(bad)  
  410417:	cld    
  410418:	lods   al,BYTE PTR ds:[esi]
  410419:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41041a:	je     0x4103f9
  41041c:	cdq    
  41041d:	sbb    eax,0xa6b45108
  410422:	(bad)  
  410423:	pop    esi
	...
  41044c:	push   esp
  41044d:	push   0x1d99e674
  410452:	hlt    
  410453:	inc    ecx
  410454:	nop
  410455:	das    
  410456:	inc    DWORD PTR [esi+0x1c]
  410459:	push   0xfc0d305e
  41045e:	jmp    FWORD PTR [ebp-0x4407dae3]
  410464:	retf   
  410465:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410466:	je     0x410469
  410468:	fcomp  DWORD PTR [esp+edx*1]
  41046b:	push   ds
  41046c:	push   edx
  41046d:	sar    esi,1
  41046f:	pushf  
  410470:	or     al,0xa7
  410472:	je     0x410455
  410474:	loopne 0x4104a3
  410476:	inc    BYTE PTR [eax]
  410478:	inc    ebp
  410479:	pop    esp
  41047a:	or     eax,eax
  41047c:	in     eax,0x90
  41047e:	push   eax
  41047f:	add    edx,esp
  410481:	or     edi,edi
  410483:	jne    0x410463
  410485:	adc    DWORD PTR [esi+eiz*2],0xffffffe5
  410489:	pop    edx
  41048a:	sub    eax,eax
  41048c:	adc    eax,0xe214c066
  410491:	test   BYTE PTR [ecx+eax*1],bh
  410494:	mov    dl,0xb
  410496:	cmp    DWORD PTR [ebp-0x7a],0x8
  41049a:	jne    0x41115e
  4104a0:	dec    ecx
  4104a1:	pop    esp
  4104a2:	out    0x24,eax
  4104a4:	mov    bl,0xb
  4104a6:	add    BYTE PTR [ebx+0x489615f],cl
  4104ac:	sub    BYTE PTR [edi],cl
  4104ae:	inc    ebp
  4104af:	lock add BYTE PTR [eax],al
	...
  4104d6:	add    BYTE PTR [eax],al
  4104d8:	dec    eax
  4104d9:	or     eax,0xa55fff50
  4104de:	out    0x74,al
  4104e0:	daa    
  4104e1:	pop    esp
  4104e2:	std    
  4104e3:	push   0x62
  4104e5:	pop    edx
  4104e6:	jae    0x4104fc
  4104e8:	cmc    
  4104e9:	loopne 0x4104f2
  4104eb:	call   0x3e6801
  4104f0:	(bad)  [eax+0x14]
  4104f3:	sub    DWORD PTR [ebx],0xd
  4104f6:	jne    0x410507
  4104f8:	cmc    
  4104f9:	loopne 0x4104ee
  4104fb:	call   0x3ff66a
  410500:	pop    ecx
  410501:	int    0x5d
  410503:	leave  
  410504:	pusha  
  410505:	(bad)  
  410506:	dec    DWORD PTR [edx]
  410508:	push   eax
  410509:	fiadd  WORD PTR [ecx+ebp*8]
  41050c:	data16 or al,BYTE PTR [eax]
  41050f:	add    BYTE PTR [ebx+0x226aec51],bl
  410515:	pop    esp
  410516:	jae    0x41052c
  410518:	dec    ebx
  410519:	push   DWORD PTR [edi]
  41051b:	or     bl,dh
  41051d:	cmp    DWORD PTR [ecx+0x401bfcfe],0x14
  410524:	enter  0x2c9,0x75
  410528:	cmp    al,0x9f
  41052a:	ss hlt 
  41052c:	repz cmp BYTE PTR [eax],ch
  41052f:	(bad)  
  410530:	fdiv   st(3),st
  410532:	ret    
  410533:	pop    esi
  410534:	add    dh,BYTE PTR [ebx+0x17]
  410537:	add    ah,cl
  410539:	add    eax,0x6598
	...
  410562:	add    BYTE PTR [eax],al
  410564:	or     dh,BYTE PTR [eax+0x1bb3447f]
  41056a:	inc    edi
  41056b:	call   0xc140be38
  410570:	stos   DWORD PTR es:[edi],eax
  410571:	mov    ch,0xdb
  410573:	shl    edx,1
  410575:	ja     0x41057a
  410577:	add    BYTE PTR [ebx-0x79],cl
  41057a:	mov    dl,0x82
  41057c:	mov    ds:0xab44799f,eax
  410581:	xor    ebx,DWORD PTR [edi]
  410583:	call   0xec8830b0
  410588:	inc    eax
  410589:	cmc    
  41058a:	fwait
  41058b:	jbe    0x4105d6
  41058d:	jnp    0x410569
  41058f:	sub    bl,BYTE PTR [ecx+0x30ec472b]
  410595:	in     eax,dx
  410596:	mov    ds:0x85380e8a,eax
  41059b:	shr    BYTE PTR [eax],0x33
  41059e:	fwait
  41059f:	add    edx,DWORD PTR [ecx+eax*2+0x5]
  4105a3:	push   ebp
  4105a4:	sub    ebp,DWORD PTR [ecx]
  4105a6:	push   edi
  4105a7:	in     al,0xd0
  4105a9:	je     0x410545
  4105ab:	cmp    cl,BYTE PTR [esi-0x3ffacab4]
  4105b1:	je     0x410555
  4105b3:	jmp    0x91c:0xe4472b48
  4105ba:	pushf  
  4105bb:	pop    ss
  4105bc:	adc    al,0x1c
  4105be:	or     eax,0xe11c0c54
  4105c3:	fwait
  4105c4:	stos   DWORD PTR es:[edi],eax
  4105c5:	popf   
  4105c6:	or     eax,0xb1
	...
  4105ef:	add    BYTE PTR [ecx-0x37],dl
  4105f2:	jnp    0x4105f4
  4105f4:	hlt    
  4105f5:	sbb    esi,ebp
  4105f7:	fwait
  4105f8:	dec    esi
  4105f9:	sub    al,0xf6
  4105fb:	mov    al,0x31
  4105fd:	leave  
  4105fe:	lea    edi,[edx+0x7ae8fd0a]
  410604:	pop    ebp
  410606:	jno    0x4105db
  410608:	mov    edi,0xd653bd4b
  41060d:	dec    ebx
  41060e:	mov    cl,0x53
  410610:	sbb    DWORD PTR [ecx-0x5a4a539e],esi
  410616:	outs   dx,DWORD PTR ds:[esi]
  410617:	inc    esi
  410618:	fwait
  410619:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41061a:	cmp    edx,eax
  41061c:	lods   al,BYTE PTR ds:[esi]
  41061d:	cs or  eax,0x23899db1
  410623:	aam    0x94
  410625:	sbb    esp,edi
  410627:	test   BYTE PTR [edi],cl
  410629:	shr    eax,0x37
  41062c:	pop    esp
  41062d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41062e:	adc    ebx,eax
  410630:	jge    0x41064d
  410632:	mov    eax,ds:0x7e14ffb0
  410637:	ss inc ebx
  410639:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41063a:	sbb    ecx,DWORD PTR [esp+eiz*2]
  41063d:	sbb    edx,DWORD PTR [ecx+0x65a24a9b]
  410643:	mov    al,0xd
  410645:	loop   0x410622
  410647:	stos   DWORD PTR es:[edi],eax
  410648:	cmp    eax,0x45b1398b
  41064d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41064e:	dec    ebp
  41064f:	ss aaa 
  410651:	mov    dl,0x2c
  410653:	daa    
	...
  41067c:	xor    al,0xa5
  41067e:	add    BYTE PTR [edx],0x4b
  410681:	or     DWORD PTR [eax],eax
  410683:	jmp    0xd602d903
  410688:	dec    eax
  410689:	mov    edx,DWORD PTR ds:0xf174a473
  410690:	mov    al,0x98
  410692:	jno    0x4106aa
  410694:	mov    ebx,0x89aad42c
  410699:	or     edi,edi
  41069b:	jl     0x41068d
  41069d:	lods   al,BYTE PTR ds:[esi]
  41069e:	cmp    al,0xb6
  4106a0:	dec    eax
  4106a1:	or     DWORD PTR [ebx],ecx
  4106a3:	sub    DWORD PTR ds:0x6205f0e,ebx
  4106a9:	or     eax,0x94faf00
  4106ae:	call   DWORD PTR [edi+ecx*8-0x54]
  4106b2:	rcr    BYTE PTR [ebx-0xc],cl
  4106b5:	mov    ds:0x4a08b7be,eax
  4106ba:	add    dh,al
  4106bc:	jb     0x4106cf
  4106be:	push   edi
  4106bf:	rol    DWORD PTR [esi-0x25],1
  4106c2:	(bad)  
  4106c3:	call   0xe4b56b69
  4106c8:	or     eax,0x48f1c1d2
  4106cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106ce:	xor    ch,BYTE PTR [ecx-0x69015ce2]
  4106d4:	mov    ah,0x9a
  4106d6:	lods   eax,DWORD PTR ds:[esi]
  4106d7:	rol    DWORD PTR [ebp+0x1e],1
  4106da:	loopne 0x410662
  4106dc:	xor    dl,BYTE PTR [ecx]
  4106de:	call   0x4106e8
	...
  410707:	add    BYTE PTR [edx-0x5c],dh
  41070a:	(bad)  
  41070b:	loop   0x410695
  41070d:	sbb    eax,0xca9e0e05
  410712:	pop    es
  410713:	jmp    0xa8851248
  410718:	dec    eax
  410719:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41071a:	je     0x4106fd
  41071c:	loopne 0x4106ed
  41071e:	xor    al,0xe9
  410720:	dec    eax
  410721:	adc    al,al
  410723:	add    bh,dh
  410725:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410726:	std    
  410727:	jne    0x410747
  410729:	and    eax,DWORD PTR [esp+ebx*4]
  41072c:	adc    al,0x4d
  41072e:	add    BYTE PTR [eax+0x3],ch
  410731:	dec    esp
  410732:	inc    ecx
  410733:	add    BYTE PTR [ebp-0x1e],ch
  410736:	pop    es
  410737:	call   0x3fa9ac
  41073c:	jmp    0x4d4a7b08
  410741:	loop   0x41074e
  410743:	(bad)  
  410744:	out    0x27,eax
  410746:	gs inc ecx
  410748:	loop   0x410749
  41074a:	pop    ds
  41074b:	inc    esp
  41074c:	mov    bl,0x7
  41074e:	push   DWORD PTR [ebp-0x16]
  410751:	jg     0x4106e9
  410753:	xor    eax,0xc00b07e2
  410758:	ja     0x410700
  41075a:	std    
  41075b:	jne    0x41070b
  41075d:	and    al,BYTE PTR [esp+eiz*4]
  410760:	add    al,0x4e
  410762:	add    BYTE PTR [eax+0x7a3],bh
  410768:	dec    ebp
  410769:	data16 ror BYTE PTR [eax],0x0
	...
  410791:	add    BYTE PTR [eax],al
  410793:	add    BYTE PTR [edx+0x31ec8b40],dh
  410799:	int3   
  41079a:	repnz push esi
  41079c:	push   ebp
  41079d:	add    eax,0xd6343d0
  4107a2:	push   DWORD PTR [ebp+0x6a]
  4107a5:	jg     0x41072b
  4107a7:	ss jb  0x4107b1
  4107aa:	or     eax,eax
  4107ac:	ja     0x4107bb
  4107ae:	pop    edi
  4107af:	pop    esi
  4107b0:	mov    ebx,0x320002c9
  4107b5:	and    bh,ch
  4107b7:	mov    ebp,DWORD PTR [edi-0x61]
  4107ba:	jmp    0x3cc8cdc0
  4107bf:	add    BYTE PTR [edi+0x71],dh
  4107c2:	mov    ds:0x41de4b68,al
  4107c7:	inc    ecx
  4107c8:	dec    ebx
  4107c9:	push   ebx
  4107ca:	cmp    BYTE PTR [eax],cl
  4107cc:	and    edx,ecx
  4107ce:	hlt    
  4107cf:	jmp    FWORD PTR [eax+ebx*4]
  4107d2:	ret    0x4d74
  4107d5:	jnp    0x410823
  4107d7:	leave  
  4107d8:	or     DWORD PTR [ebp-0x676974fe],ebp
  4107de:	cdq    
  4107df:	and    ebx,ecx
  4107e1:	ret    
  4107e2:	sti    
  4107e3:	jae    0x410847
  4107e5:	xor    dh,ch
  4107e7:	or     al,0x77
  4107e9:	pushf  
  4107ea:	cmp    BYTE PTR [esi],0x41
  4107ed:	and    al,0xfe
  4107ef:	jg     0x41081d
  4107f1:	addr16 ss or cl,bl
  4107f5:	pop    ebx
  4107f6:	dec    edi
  4107f7:	je     0x4107f9
	...
  41081d:	add    BYTE PTR [eax],al
  41081f:	add    BYTE PTR [esi+0x30],al
  410822:	out    dx,al
  410823:	pop    edi
  410824:	pop    esi
  410825:	scas   eax,DWORD PTR es:[edi]
  410826:	les    eax,FWORD PTR [esi]
  410828:	sub    ebp,ebx
  41082a:	cmp    DWORD PTR [esi],0x4b
  41082d:	inc    ebp
  41082e:	retf   
  41082f:	mov    BYTE PTR [esi],0xd4
  410832:	add    eax,DWORD PTR [eax]
  410834:	dec    ebx
  410835:	mov    al,0xc3
  410837:	inc    esp
  410838:	mov    bl,0xb0
  41083a:	add    al,BYTE PTR [eax]
  41083c:	dec    ebx
  41083d:	daa    
  41083e:	das    
  41083f:	or     BYTE PTR [eax+0x6c3e83e7],dh
  410845:	add    eax,0x840e82d9
  41084a:	add    esi,DWORD PTR [ebp+0x59]
  41084d:	add    DWORD PTR [esi-0x8],0x4a
  410851:	mov    al,0x2
  410853:	add    dh,bh
  410855:	stos   DWORD PTR es:[edi],eax
  410856:	ret    
  410857:	inc    esp
  410858:	outs   dx,DWORD PTR ds:[esi]
  410859:	mov    cl,0x2
  41085b:	add    BYTE PTR [ebx-0x79],cl
  41085e:	adc    bh,dh
  410860:	push   es
  410861:	sbb    BYTE PTR [ebx],al
  410863:	add    BYTE PTR [ebx+0x9],cl
  410866:	jmp    0xe60c49a1
  41086b:	jecxz  0x41087a
  41086d:	dec    esp
  41086e:	push   ebp
  41086f:	add    al,0x4b
  410871:	or     ecx,ebp
  410873:	xor    DWORD PTR [ebp+0x45],0xffffffbc
  410877:	push   es
  410878:	sub    al,0x4c
  41087a:	inc    ecx
  41087b:	cdq    
  41087c:	dec    ebp
  41087d:	retf   0xabab
  410880:	sbb    al,0xa2
  410882:	call   0x41088a
	...
  4108ab:	add    al,cl
  4108ad:	and    esp,DWORD PTR ds:0x27069603
  4108b3:	add    eax,0xed694a2b
  4108b8:	cld    
  4108b9:	sbb    al,0x59
  4108bb:	jns    0x410934
  4108bd:	adc    DWORD PTR [edx],edx
  4108bf:	adc    bl,cl
  4108c1:	loope  0x41088b
  4108c3:	ss cmp eax,0x2b027589
  4108c9:	sbb    al,0xd9
  4108cb:	push   esp
  4108cc:	loopne 0x4108d8
  4108ce:	jae    0x410914
  4108d0:	dec    edx
  4108d1:	xchg   ecx,eax
  4108d2:	in     eax,0x44
  4108d4:	retf   
  4108d5:	loope  0x4108bf
  4108d7:	ss mov dh,0x41
  4108da:	push   ds
  4108db:	inc    ebp
  4108dc:	retf   
  4108dd:	loope  0x4108c7
  4108df:	ss mov ecx,cs
  4108e2:	and    edi,DWORD PTR [eax+0x3e8a1a4]
  4108e8:	rcr    BYTE PTR [ebx],1
  4108ea:	loope  0x410964
  4108ec:	pop    ss
  4108ed:	adc    DWORD PTR [edx-0x331df31f],edx
  4108f3:	ss addr16 retf 
  4108f6:	in     eax,dx
  4108f7:	add    edi,DWORD PTR [ebx+ebx*1-0x6b]
  4108fb:	push   ebp
  4108fc:	arpl   bp,bp
  4108fe:	xchg   BYTE PTR [ebp+ebp*2+0x4d36a90d],ch
  410905:	inc    edx
  410906:	add    BYTE PTR [edi],dl
  410908:	mov    al,ds:0xd3e903c7
  41090d:	call   0x0:0x6645
	...
  410938:	add    eax,0x3769469d
  41093d:	mov    eax,ds:0x15ef3073
  410942:	hlt    
  410943:	mov    bh,0xd0
  410945:	adc    al,0xfe
  410947:	inc    esi
  410948:	fistp  QWORD PTR [edi]
  41094a:	pop    esi
  41094b:	xor    BYTE PTR [edx],cl
  41094d:	or     eax,0xb4a39c00
  410952:	and    BYTE PTR ds:0x6a5736d0,0x5d
  410959:	cmc    
  41095a:	call   DWORD PTR [ecx+eax*1+0x21cd3c8c]
  410961:	dec    edx
  410962:	add    cl,ch
  410964:	cmp    eax,0xb1a75f07
  410969:	retf   0xe90f
  41096c:	arpl   WORD PTR [ebp+0x14],ax
  41096f:	mov    al,0x45
  410971:	jge    0x4109d8
  410973:	test   al,0x48
  410975:	adc    BYTE PTR [ebx+0x9468a],al
  41097b:	and    BYTE PTR [edx+0x69],cl
  41097e:	sub    BYTE PTR gs:[edi+0x10],al
  410982:	xor    DWORD PTR [esi+0x4e],0x9
  410986:	add    BYTE PTR [eax],al
  410988:	dec    edx
  410989:	gs sub BYTE PTR gs:[edi+0x10],cl
  41098e:	and    DWORD PTR [edx+0x46],0x9
  410992:	add    BYTE PTR [edx+ecx*1-0x6b],bl
  410996:	dec    edi
  410997:	je     0x4109a3
  410999:	mov    eax,ds:0x6c4f
	...
  4109c2:	add    BYTE PTR [eax],al
  4109c4:	or     bl,BYTE PTR [ebp-0x7b8569b1]
  4109ca:	sub    BYTE PTR gs:[edi-0x60],cl
  4109ce:	je     0x4109d0
  4109d0:	xchg   edx,eax
  4109d1:	test   BYTE PTR [eax+edi*8+0x458b73e5],bh
  4109d8:	retf   0x8d35
  4109db:	inc    ebp
  4109dc:	(bad)  
  4109dd:	xor    al,0x8d
  4109df:	inc    ebp
  4109e0:	repnz xor al,0xff
  4109e3:	xor    eax,0x40eace
  4109e8:	xchg   ebp,eax
  4109e9:	fimul  DWORD PTR [edi]
  4109eb:	call   0x3e76be
  4109f0:	mov    bh,0x4a
  4109f2:	fcom   QWORD PTR [eax-0x49]
  4109f5:	dec    edx
  4109f6:	loopne 0x410a48
  4109f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109f9:	dec    edx
  4109fa:	in     al,0x50
  4109fc:	gs call 0x75ff:0xbe3669e
  410a04:	add    al,BYTE PTR [eax+ecx*4-0x28baa08]
  410a0b:	jne    0x410a5b
  410a0d:	and    al,0x44
  410a0f:	aam    0x45
  410a11:	fcmovu st,st(3)
  410a13:	(bad)  
  410a14:	scas   eax,DWORD PTR es:[edi]
  410a15:	rol    ebp,cl
  410a17:	inc    ebp
  410a18:	inc    edx
  410a19:	add    eax,0x20e20000
  410a1e:	inc    esp
  410a1f:	int3   
  410a20:	adc    bh,bh
  410a22:	add    BYTE PTR [edx-0x4e],ch
  410a25:	std    
  410a26:	jmp    FWORD PTR [ecx+0x0]
	...
  410a4d:	add    BYTE PTR [eax],al
  410a4f:	add    BYTE PTR [edx+0x6f8cfffd],dh
  410a55:	mov    ecx,0xbf8fff4e
  410a5a:	daa    
  410a5b:	inc    ecx
  410a5c:	mov    dl,0x9e
  410a5e:	mov    esi,0xff9e2e0f
  410a63:	jmp    DWORD PTR [edx-0x5d2f847a]
  410a69:	mov    ds:0xb730082,al
  410a6e:	add    BYTE PTR [ebx+0x3ab7e54b],cl
  410a74:	push   es
  410a75:	xchg   cl,bh
  410a77:	xchg   BYTE PTR [edi-0x4f],dh
  410a7a:	add    al,BYTE PTR [eax]
  410a7c:	sbb    dh,BYTE PTR [bx+si]
  410a7f:	rcl    al,1
  410a81:	xchg   esp,eax
  410a82:	(bad)  
  410a83:	mov    al,BYTE PTR [esi]
  410a85:	jle    0x410a2c
  410a87:	add    DWORD PTR [eax-0x73],ebx
  410a8a:	test   eax,0x40301774
  410a8f:	in     al,0x3c
  410a91:	mov    esi,0x314e7d2
  410a96:	add    al,0x0
  410a98:	enter  0xa6c5,0xff
  410a9c:	push   ebp
  410a9d:	and    al,0xb9
  410a9f:	call   FWORD PTR [ecx+esi*4]
  410aa2:	test   DWORD PTR [ebx+ebx*1-0x4f],edi
  410aa6:	stc    
  410aa7:	add    DWORD PTR [edi],0xffffffb1
  410aaa:	add    al,BYTE PTR [eax]
  410aac:	enter  0x9e7d,0xff
  410ab0:	dec    ebp
  410ab1:	sub    al,0x6d
  410ab3:	inc    DWORD PTR [eax]
	...
  410ad9:	add    BYTE PTR [eax],al
  410adb:	add    ah,dh
  410add:	mov    al,0xa9
  410adf:	je     0x410ad0
  410ae1:	clc    
  410ae2:	ins    BYTE PTR es:[edi],dx
  410ae3:	pusha  
  410ae4:	in     al,0x9f
  410ae6:	jp     0x410b2c
  410ae8:	adc    ebx,DWORD PTR [eax+0x15d4fc2e]
  410aee:	mov    ebx,0x9bbc56fe
  410af3:	fild   QWORD PTR [edx]
  410af5:	mov    edi,0xec6c67a8
  410afa:	inc    edx
  410afb:	add    BYTE PTR [ebx-0x530009c4],ah
  410b01:	add    BYTE PTR [edi+ebp*1],bl
  410b04:	psllw  mm0,QWORD PTR [ebx]
  410b07:	call   DWORD PTR [esi]
  410b09:	push   0xb05f2d9b
  410b0e:	add    cl,BYTE PTR [ebx]
  410b10:	mov    ecx,DWORD PTR [ecx]
  410b12:	sbb    eax,0x24d6f30c
  410b17:	inc    ebx
  410b18:	dec    ebx
  410b19:	mov    cl,0x18
  410b1b:	div    BYTE PTR [esi+ebx*4+0x38]
  410b1f:	sbb    al,0x35
  410b21:	inc    ebp
  410b22:	sub    BYTE PTR [esp+eiz*2],al
  410b25:	adc    al,0xb1
  410b27:	pushf  
  410b28:	cmp    dl,ch
  410b2a:	call   0xf50a4b32
  410b2f:	or     esp,ebx
  410b31:	fisubr WORD PTR [edx+eax*2-0xa4b4eb5]
  410b38:	cmp    al,0x9e
  410b3a:	mov    eax,0xa845751b
  410b3f:	add    eax,DWORD PTR [eax]
	...
  410b65:	add    BYTE PTR [eax],al
  410b67:	add    BYTE PTR [esp+edx*1],ch
  410b6a:	xor    DWORD PTR [esi+ebx*1+0x5003e8da],ebx
  410b71:	leave  
  410b72:	mov    ebx,0xe909a33e
  410b77:	cwde   
  410b78:	into   
  410b79:	popf   
  410b7a:	fwait
  410b7b:	imul   esp
  410b7d:	bound  edi,QWORD PTR [ebx-0x24620258]
  410b83:	mov    ebp,DWORD PTR [esi+0x48]
  410b86:	jmp    0x114e8333
  410b8b:	pop    eax
  410b8c:	xchg   DWORD PTR [esi-0x62a85703],ebx
  410b92:	cmc    
  410b93:	fistp  WORD PTR cs:[ebp-0x4b1b088d]
  410b9a:	inc    ebx
  410b9b:	test   eax,0xb4539dc5
  410ba0:	mov    ebp,0x3fa8c113
  410ba5:	or     eax,0x9e0fc1c1
  410baa:	lds    ebp,FWORD PTR [eax+0x2ebda51f]
  410bb0:	jg     0x410b4f
  410bb2:	(bad)  
  410bb3:	cmp    edx,DWORD PTR [ebx-0x1df3485b]
  410bb9:	sahf   
  410bba:	(bad)  
  410bbb:	sbb    al,0xc7
  410bbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bbe:	lock or DWORD PTR [edx-0x4fc8a162],esi
  410bc5:	(bad)  
  410bc6:	psubsw mm7,mm5
  410bc9:	xchg   ecx,eax
  410bca:	jmp    0x410c36
	...
  410bf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bf6:	cmp    ah,0x4c
  410bf9:	add    al,0xf
  410bfb:	ins    BYTE PTR es:[edi],dx
  410bfc:	aas    
  410bfd:	or     BYTE PTR [eax],al
  410bff:	jmp    0xba3550d9
  410c04:	mov    ebp,0xb5b9f845
  410c09:	inc    ebp
  410c0a:	cld    
  410c0b:	mov    ecx,0xd4ff0756
  410c10:	pop    eax
  410c11:	mov    cl,0x20
  410c13:	ds repz fwait
  410c16:	cmp    BYTE PTR [eax+esi*8-0x2093f0f7],0x9c
  410c1e:	(bad)  
  410c1f:	jmp    0x77352207
  410c24:	inc    ebp
  410c25:	cdq    
  410c26:	addr16 push ds
  410c28:	xchg   DWORD PTR [edx+0x0],ecx
  410c2b:	push   ss
  410c2c:	and    eax,0xf6c3e799
  410c31:	pushf  
  410c32:	(bad)  
  410c33:	repnz or BYTE PTR [eax*4+0x94821],cl
  410c3b:	fs adc eax,0xd5c4f95
  410c41:	mov    eax,ds:0x9d0a744f
  410c46:	dec    edi
  410c47:	push   ebx
  410c48:	inc    edi
  410c49:	pushf  
  410c4a:	je     0x410c45
  410c4c:	shl    BYTE PTR [esi-0x781b310b],1
  410c52:	jl     0x410c54
  410c54:	mov    al,BYTE PTR [esi]
  410c56:	jne    0x410c5c
	...
  410c80:	retf   0x5
  410c83:	add    ch,bl
  410c85:	(bad)  
  410c87:	push   0x4148e8
  410c8c:	ficom  DWORD PTR [esi-0x608dffd0]
  410c92:	mov    esi,0xff27e70f
  410c97:	jmp    DWORD PTR [edx+0x21]
  410c9a:	inc    esp
  410c9b:	hlt    
  410c9c:	inc    edx
  410c9d:	and    al,BYTE PTR [eax+edi*8+0x42]
  410ca1:	and    al,BYTE PTR [esp+edi*8+0x32]
  410ca5:	inc    DWORD PTR [edx]
  410ca7:	call   DWORD PTR [edi-0x8]
  410caa:	out    0xb1,eax
  410cac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410cad:	fs std 
  410caf:	sbb    DWORD PTR [edi],0x70
  410cb2:	dec    BYTE PTR [esi]
  410cb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cb5:	mov    dh,bh
  410cb7:	jmp    DWORD PTR [edx]
  410cb9:	pop    ds
  410cba:	inc    esp
  410cbb:	hlt    
  410cbc:	lea    edx,[ebp+0x228e458d]
  410cc2:	inc    esp
  410cc3:	hlt    
  410cc4:	mov    dl,0x20
  410cc6:	inc    esp
  410cc7:	clc    
  410cc8:	mov    dl,0x20
  410cca:	inc    esp
  410ccb:	cld    
  410ccc:	ret    0x401
  410ccf:	call   edi
  410cd1:	mul    edi
  410cd3:	mov    DWORD PTR [esp+eiz*2-0x3],edx
  410cd7:	cmp    DWORD PTR [edi-0x528b0091],0x5a
  410cde:	add    ebx,DWORD PTR [esp+eax*8+0xff0044]
	...
  410d09:	add    BYTE PTR [eax],al
  410d0b:	add    ch,bl
  410d0d:	(bad)  
  410d0e:	std    
  410d0f:	(bad)  
  410d10:	out    0x27,eax
  410d12:	gs inc ecx
  410d14:	mov    dl,0x62
  410d16:	std    
  410d17:	call   FWORD PTR [ebp+0x4ba4035a]
  410d1d:	dec    esp
  410d1e:	inc    ebp
  410d1f:	add    BYTE PTR [edx+ecx*8-0x235b015b],ch
  410d26:	scas   eax,DWORD PTR es:[edi]
  410d27:	out    0x49,eax
  410d29:	pop    esi
  410d2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d2b:	dec    BYTE PTR [esp+ebp*8-0x4db4ff65]
  410d32:	add    al,BYTE PTR [ebx+0x411c8646]
  410d38:	dec    ebx
  410d39:	jnp    0x410d69
  410d3b:	sub    eax,ecx
  410d3d:	mov    ah,0x62
  410d3f:	or     dh,BYTE PTR gs:[edx+0x2f2b73a5]
  410d46:	call   0x431f2ee
  410d4b:	(bad)  
  410d4c:	fistp  QWORD PTR [edx-0xe690fe6]
  410d52:	add    ecx,DWORD PTR [ebp-0xacc772]
  410d58:	mov    dh,0x4c
  410d5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d5b:	je     0x410da4
  410d5d:	xor    esi,DWORD PTR [eax]
  410d5f:	or     BYTE PTR [ebx],ah
  410d61:	test   eax,0xda24feaa
  410d66:	ror    BYTE PTR [edi],0x4b
  410d69:	jne    0x410de4
  410d6b:	jmp    0x410d35
  410d6d:	in     al,dx
  410d6e:	xchg   esi,eax
  410d6f:	inc    BYTE PTR [eax]
	...
  410d95:	add    BYTE PTR [eax],al
  410d97:	add    BYTE PTR [esi-0x5d636558],dl
  410d9d:	jecxz  0x410d44
  410d9f:	imul   ebx,DWORD PTR [ebx+0x2d],0xf39bf040
  410da6:	das    
  410da7:	or     bl,ah
  410da9:	xchg   ebx,eax
  410daa:	dec    edx
  410dab:	jmp    esp
  410dad:	xchg   edi,eax
  410dae:	ret    0x4774
  410db1:	fld    st(0)
  410db3:	pop    es
  410db4:	dec    ebx
  410db5:	xchg   BYTE PTR [edx],dl
  410db7:	push   0x436f91
  410dbc:	(bad)  
  410dbd:	or     DWORD PTR [esp+esi*4],ebp
  410dc0:	or     al,0xb1
  410dc2:	aad    0x45
  410dc4:	mov    ah,0x9a
  410dc6:	loope  0x410d8b
  410dc8:	aaa    
  410dc9:	add    eax,0x94cc2a0
  410dce:	scas   al,BYTE PTR es:[edi]
  410dcf:	aas    
  410dd0:	scas   eax,DWORD PTR es:[edi]
  410dd1:	or     cl,ch
  410dd3:	add    ecx,DWORD PTR [ebx-0x74]
  410dd6:	sub    ebx,DWORD PTR [eax-0x3cc6604]
  410ddc:	ins    BYTE PTR es:[edi],dx
  410ddd:	in     al,0x42
  410ddf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410de0:	jge    0x410df0
  410de2:	test   eax,0x13864d30
  410de7:	cwde   
  410de8:	ins    BYTE PTR es:[edi],dx
  410de9:	adc    eax,0xd0a4d8e7
  410dee:	stos   BYTE PTR es:[edi],al
  410def:	cld    
  410df0:	pop    esp
  410df1:	dec    edx
  410df2:	sar    BYTE PTR [edx-0x6367fb9f],cl
  410df8:	fld    DWORD PTR [edi]
  410dfa:	sub    cl,bh
	...
  410e24:	add    al,0x14
  410e26:	pop    esi
  410e27:	dec    esp
  410e28:	enter  0xe7a0,0x2e
  410e2c:	dec    esi
  410e2d:	popa   
  410e2e:	call   0x6a4a5836
  410e33:	stos   DWORD PTR es:[edi],eax
  410e34:	dec    ebx
  410e35:	adc    eax,0xcfdcd8ef
  410e3a:	sub    bh,ah
  410e3c:	adc    al,0x67
  410e3e:	pop    esp
  410e3f:	push   ds
  410e40:	mov    cl,BYTE PTR [ecx]
  410e42:	pop    esp
  410e43:	aas    
  410e44:	idiv   DWORD PTR [eax]
  410e46:	es das 
  410e48:	push   ebx
  410e49:	mov    cl,0xeb
  410e4b:	dec    ecx
  410e4c:	hlt    
  410e4d:	cdq    
  410e4e:	imul   ebp,DWORD PTR [ebx+ecx*2-0x237f1beb],0xc9fd7c06
  410e59:	sbb    ecx,DWORD PTR ds:0x35e04
  410e5f:	ret    0xd108
  410e62:	shl    ecx,0x48
  410e65:	mov    WORD PTR [ebp+edx*8+0x18],es
  410e69:	call   0xd658:0xaed0f174
  410e70:	out    0x86,eax
  410e72:	imul   eax
  410e74:	je     0x410e7a
  410e76:	add    ecx,0x4a
  410e79:	adc    al,0x6
  410e7b:	push   0x6d
  410e7d:	lods   eax,DWORD PTR ds:[esi]
  410e7e:	(bad)  
  410e7f:	cmp    ecx,DWORD PTR [ebp-0x755f4012]
  410e85:	add    DWORD PTR [eax],eax
  410e87:	je     0x410e89
	...
  410ead:	add    BYTE PTR [eax],al
  410eaf:	add    BYTE PTR ds:0x259e4fad,bh
  410eb5:	adc    eax,ebp
  410eb7:	mov    al,ds:0xe2fe9a01
  410ebc:	mov    BYTE PTR [esi+eax*1],dl
  410ebf:	push   0x25
  410ec1:	lods   eax,DWORD PTR ds:[esi]
  410ec2:	push   ebx
  410ec4:	push   esi
  410ec5:	out    dx,al
  410ec6:	mov    edi,0x18aa0
  410ecb:	pop    esp
  410ecc:	test   DWORD PTR [ebp+0x16d664f],esp
  410ed2:	call   0xfed99063
  410ed7:	push   0xffffffe0
  410ed9:	fdiv   DWORD PTR [edi+eiz*8-0x35]
  410edd:	adc    eax,0xf6de9ec
  410ee2:	sub    ebp,DWORD PTR [ecx]
  410ee4:	ror    edx,1
  410ee6:	pop    es
  410ee7:	jmp    0x9a2d5c81
  410eec:	scas   eax,DWORD PTR es:[edi]
  410eed:	sbb    eax,0x31d81108
  410ef2:	call   FWORD PTR [esi]
  410ef4:	retf   
  410ef5:	mov    al,ds:0x8bee9c1f
  410efa:	jl     0x410ef9
  410efc:	dec    ecx
  410efd:	push   ds
  410efe:	push   es
  410eff:	add    cl,bh
  410f01:	int3   
  410f02:	mov    edx,0x458d0cda
  410f08:	inc    esi
  410f09:	cmp    al,0xff
  410f0b:	jne    0x410eb7
  410f0d:	je     0x410f80
  410f0f:	pop    ecx
  410f10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f11:	ins    BYTE PTR es:[edi],dx
  410f12:	cmp    eax,0x0
	...
  410f3c:	inc    edx
  410f3d:	repnz add eax,0xfe591783
  410f43:	je     0x410ef1
  410f45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f46:	mov    esi,0x5f0c9
  410f4b:	lea    ebp,[edi+0x59]
  410f4e:	dec    esi
  410f4f:	push   0x42
  410f51:	ins    BYTE PTR es:[edi],dx
  410f52:	jae    0x410f5c
  410f54:	mov    ch,ah
  410f56:	pop    eax
  410f57:	jmp    DWORD PTR [ebp+0x32ec437a]
  410f5d:	ins    BYTE PTR es:[edi],dx
  410f5e:	jae    0x410f68
  410f60:	retf   0x565c
  410f63:	call   ebp
  410f65:	nop
  410f66:	test   BYTE PTR [ecx],0x60
  410f69:	pop    es
  410f6a:	cmp    eax,0x61
  410f6d:	repz add eax,0xfe685783
  410f73:	je     0x410fa1
  410f75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f76:	mov    esi,0x570c9
  410f7b:	mov    ds:0x40e2ca,eax
  410f80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f81:	inc    edx
  410f82:	in     al,dx
  410f83:	push   eax
  410f84:	or     BYTE PTR [ebp+edi*8+0x48641a75],ah
  410f8b:	pop    ecx
  410f8c:	push   ebp
  410f8d:	ins    BYTE PTR es:[edi],dx
  410f8e:	lds    cx,DWORD PTR [ebp-0x5072ffb3]
  410f95:	addr16 dec esi
  410f97:	push   0xfffffff3
  410f99:	push   0x73
  410f9b:	or     al,0x55
  410f9d:	repnz pop es
  410f9f:	call   0x410fa4
	...
  410fc8:	dec    ebx
  410fc9:	mov    ds,WORD PTR [eax-0x3a171b02]
  410fcf:	pop    es
  410fd0:	dec    ebx
  410fd1:	jne    0x410f60
  410fd3:	jmp    0x410f9d
  410fd5:	in     eax,dx
  410fd6:	lahf   
  410fd7:	mov    WORD PTR [esi+0x32e8329e],es
  410fdd:	jge    0x410f80
  410fdf:	(bad)  
  410fe0:	mov    esp,0x3efea034
  410fe5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fe6:	stos   BYTE PTR es:[edi],al
  410fe7:	dec    esi
  410fe8:	adc    al,0xbf
  410fea:	mov    eax,ds:0x133d8b0a
  410fef:	call   DWORD PTR [esi]
  410ff1:	call   0xfddd:0xb99774a1
  410ff8:	mov    WORD PTR [esi+0xd],ds
  410ffb:	sar    dh,0xa1
  410ffe:	mov    eax,ds:0x22797f74
  411003:	push   ebp
  411004:	je     0x41107c
  411006:	retf   
  411007:	sar    DWORD PTR [edi],0xa2
  41100a:	aaa    
  41100b:	mov    esi,DWORD PTR [edi-0x7a]
  41100e:	pop    ss
  41100f:	or     al,0x73
  411011:	push   edx
  411012:	and    al,0xff
  411014:	push   esp
  411015:	call   0x1018:0x1f2873c2
  41101c:	fwait
  41101d:	mov    ah,cl
  41101f:	pusha  
  411020:	cmp    al,0x30
  411022:	xor    ebp,DWORD PTR [eax-0x3d]
  411025:	push   0x42
  411027:	add    BYTE PTR [esi+esi*4],ch
  41102a:	cli    
  41102b:	inc    BYTE PTR [eax]
	...
  411051:	add    BYTE PTR [eax],al
  411053:	add    BYTE PTR [esi-0x6900cd64],bl
  411059:	cwde   
  41105a:	stos   BYTE PTR es:[edi],al
  41105b:	in     eax,0xcb
  41105d:	xlat   BYTE PTR ds:[ebx]
  41105e:	mov    eax,ds:0xa17dcee7
  411063:	(bad)  
  411064:	adc    ah,bl
  411066:	idiv   bh
  411068:	xchg   edi,eax
  411069:	or     DWORD PTR [edx-0x51],esi
  41106c:	ins    BYTE PTR es:[edi],dx
  41106d:	or     ecx,ebp
  41106f:	mov    dl,0xae
  411071:	and    DWORD PTR [edi+0x46],ecx
  411074:	mov    cl,BYTE PTR [ecx]
  411076:	push   cs
  411077:	sbb    BYTE PTR [edi+0x23],cl
  41107a:	jecxz  0x41101e
  41107c:	pop    edi
  41107d:	add    DWORD PTR [ecx],edx
  41107f:	push   ebx
  411080:	int    0x96
  411082:	cmc    
  411083:	sub    cl,BYTE PTR [ebx+0x9]
  411086:	(bad)  
  411087:	pusha  
  411088:	and    al,0x66
  41108a:	sub    DWORD PTR [ebx+0x4b],eax
  41108d:	xchg   esi,eax
  41108e:	push   ebx
  41108f:	adc    BYTE PTR [ecx],ah
  411091:	repz aad 0x17
  411094:	push   ebx
  411095:	mov    eax,ds:0x969da16f
  41109a:	push   eax
  41109b:	add    al,0x4b
  41109d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41109e:	jle    0x4110cc
  4110a0:	in     eax,0x4a
  4110a2:	sub    BYTE PTR [esp+eax*4],al
  4110a5:	sbb    al,0xdd
  4110a7:	sub    eax,0xc1b965f
  4110ac:	arpl   WORD PTR [ebx+0x216da19d],cx
  4110b2:	jmp    0x9884ba
  4110b7:	jno    0x4110b9
	...
  4110dd:	add    BYTE PTR [eax],al
  4110df:	add    BYTE PTR [ecx],cl
  4110e1:	dec    eax
  4110e2:	jmp    0x1345f087
  4110e7:	add    BYTE PTR [esp+ebx*1-0x1f],cl
  4110eb:	stos   DWORD PTR es:[edi],eax
  4110ec:	mov    cl,0x96
  4110ee:	ins    DWORD PTR es:[edi],dx
  4110ef:	mov    eax,ds:0xb0e909a4
  4110f4:	mul    BYTE PTR [eax]
  4110f6:	xchg   DWORD PTR [ebp-0x76],eax
  4110f9:	or     DWORD PTR [esi+0x17],edx
  4110fc:	push   edi
  4110fd:	and    ecx,DWORD PTR [edx]
  4110ff:	mov    eax,ds:0x38510197
  411104:	adc    al,0x96
  411106:	cmp    eax,0x94b2c
  41110b:	inc    esi
  41110c:	imul   ebp,DWORD PTR [esi],0x989aaaf
  411112:	call   FWORD PTR [esp+eax*2+0x541e2323]
  411119:	add    eax,ebp
  41111b:	aam    0xab
  41111d:	xchg   esi,eax
  41111e:	(bad)  
  41111f:	and    BYTE PTR ds:0xc79c000e,al
  411125:	mov    eax,ds:0x1fab2582
  41112a:	add    BYTE PTR [ebx-0x1e8b6962],al
  411130:	lock inc ebx
  411132:	pop    edx
  411133:	out    0xeb,al
  411135:	add    BYTE PTR [ebp+ebx*8+0x60],0x4e
  41113a:	inc    esp
  41113b:	sub    BYTE PTR [edi-0x6a],cl
  41113e:	je     0x411121
  411140:	lock inc esp
  411142:	inc    esi
	...
  41116c:	jmp    0x411104
  41116e:	je     0x41112d
  411170:	jmp    0x41118e
  411172:	or     cl,al
  411174:	popa   
  411175:	xor    edi,edi
  411177:	scas   al,BYTE PTR es:[edi]
  411178:	xchg   ecx,eax
  411179:	mov    DWORD PTR [ebx],0xeb823de9
  41117f:	push   0xffffff84
  411181:	xchg   ecx,eax
  411182:	imul   ebp,ecx,0x14feda36
  411188:	dec    edi
  411189:	mov    eax,ds:0x96aa231c
  41118e:	mov    BYTE PTR [ebx+ebp*4],ah
  411191:	sub    eax,0x9882d56
  411196:	push   esp
  411198:	push   eax
  411199:	mov    eax,ds:0x93eb661b
  41119e:	(bad)  
  41119f:	aam    0xcc
  4111a1:	xchg   ebx,eax
  4111a2:	je     0x411185
  4111a4:	lock dec esp
  4111a6:	pop    edx
  4111a7:	dec    esi
  4111a8:	jmp    0x41116b
  4111aa:	rol    DWORD PTR [eax],0x26
  4111ad:	or     DWORD PTR [ebp-0x75],edx
  4111b0:	jle    0x41113f
  4111b2:	ret    0x8f8
  4111b5:	or     DWORD PTR [edx+0x34],ebp
  4111b8:	sub    eax,0x5ee807fb
  4111bd:	iret   
  4111be:	(bad)  
  4111bf:	(bad)  
  4111c0:	jnp    0x41120d
  4111c2:	cld    
  4111c3:	push   0x414cd2
  4111c8:	dec    ebp
  4111c9:	sti    
  4111ca:	pop    es
  4111cb:	call   0x3e7c09
	...
  4111f8:	mov    eax,0xf6806808
  4111fd:	inc    edi
  4111fe:	add    BYTE PTR [eax+0x3e],ch
  411201:	dec    esp
  411202:	inc    ecx
  411203:	add    BYTE PTR [ebp+0x632940b2],ch
  411209:	or     eax,0x745da5e8
  41120e:	std    
  41120f:	or     esi,edx
  411211:	icebp  
  411212:	mov    DWORD PTR ds:[edi+0x75],esp
  411216:	data16 mov al,cl
  411219:	dec    ebp
  41121a:	add    BYTE PTR [eax+0x72],ch
  41121d:	or     bh,ch
  41121f:	mov    esi,0x41422b0a
  411224:	bound  esi,QWORD PTR [ebx+0x73]
  411227:	clc    
  411228:	int    0xf2
  41122a:	pop    es
  41122b:	call   0x400612
  411230:	dec    edx
  411231:	test   DWORD PTR [eax-0x1f9dc0],edi
  411237:	(bad)  
  411238:	mov    ebp,0x71af6733
  41123d:	dec    esi
  41123e:	add    bh,bh
  411240:	aaa    
  411241:	jo     0x411240
  411243:	jne    0x41127f
  411245:	pusha  
  411246:	je     0x4112c7
  411248:	lea    esi,[ebp+edi*8+0x75]
  41124c:	dec    ebx
  41124d:	cmp    ch,BYTE PTR [ecx+ecx*2-0x160bc81]
  411254:	sahf   
  411255:	dec    esi
  411256:	lahf   
  411257:	je     0x41129c
  411259:	cmp    ah,BYTE PTR [ecx+0x58]
	...
  411284:	add    al,0xdb
  411286:	int3   
  411287:	rol    DWORD PTR [edi-0x5e],0x37
  41128b:	mov    esp,edi
  41128d:	push   ds
  41128e:	enter  0x61fb,0xa2
  411292:	sub    BYTE PTR ds:0xe80a74e4,dh
  411298:	push   0x59
  41129a:	popf   
  41129b:	inc    dl
  41129d:	fs sahf 
  41129f:	addr16 mov edi,0xc400436d
  4112a5:	adc    al,0xb
  4112a7:	call   0xfedeb6d7
  4112ac:	mov    ah,0x34
  4112ae:	mov    al,ds:0xaa9a36fe
  4112b3:	mov    eax,DWORD PTR [edx]
  4112b5:	mov    ebx,0xad89c89d
  4112ba:	add    dl,BYTE PTR [ebp-0x40]
  4112bd:	mov    ebp,0x378fc381
  4112c2:	add    al,0x6a
  4112c4:	cmp    eax,0x7308175b
  4112c9:	xchg   ecx,eax
  4112ca:	cmp    edi,edi
  4112cc:	je     0x4112e6
  4112ce:	dec    eax
  4112cf:	cld    
  4112d0:	jecxz  0x4112ee
  4112d2:	inc    edi
  4112d3:	inc    ecx
  4112d4:	dec    ebx
  4112d5:	jnp    0x4112ee
  4112d7:	or     BYTE PTR [ebx+0x52],dh
  4112da:	pushf  
  4112db:	(bad)  
  4112dc:	push   esp
  4112dd:	mov    dl,BYTE PTR [edi]
  4112df:	cld    
  4112e0:	dec    esp
  4112e1:	pushf  
  4112e2:	or     ch,al
  4112e4:	mov    al,ds:0xfe9ef9
	...
  41130d:	add    BYTE PTR [eax],al
  41130f:	add    BYTE PTR [edx],dl
  411311:	pop    edi
  411312:	push   es
  411313:	add    BYTE PTR [esi-0x36508df7],bl
  411319:	int    0x5c
  41131b:	sub    DWORD PTR [ebx+0x1f],ecx
  41131e:	push   ds
  41131f:	lahf   
  411320:	xchg   edi,eax
  411321:	add    DWORD PTR [ecx-0x62],eax
  411324:	jl     0x4112b8
  411326:	inc    ebp
  411327:	mov    WORD PTR [edi-0x77812f6b],es
  41132d:	dec    eax
  41132e:	jmp    0x41428ad1
  411333:	popf   
  411334:	not    DWORD PTR [edx-0x6a8861db]
  41133a:	sbb    eax,0xc2a15318
  41133f:	cmp    al,0xdc
  411341:	xchg   edx,eax
  411342:	pop    ds
  411343:	ror    DWORD PTR [eax+0x9],0x9c
  411347:	mov    ah,al
  411349:	xchg   BYTE PTR [edi+ebx*4],ah
  41134c:	xor    cl,BYTE PTR [ecx]
  41134e:	sbb    ebx,0xffffffbd
  411351:	sbb    al,0xe1
  411353:	stos   DWORD PTR es:[edi],eax
  411354:	xchg   BYTE PTR [ecx],dh
  411356:	out    0x9d,al
  411358:	ret    
  411359:	dec    esp
  41135a:	(bad)  [esp+ebp*8]
  41135d:	dec    ebp
  41135e:	sub    BYTE PTR [esp+ebx*4],al
  411361:	sbb    al,0xe1
  411363:	stos   DWORD PTR es:[edi],eax
  411364:	xchg   DWORD PTR [ebp+eax*8-0x42e37263],edx
  41136b:	popf   
  41136c:	inc    DWORD PTR [eax]
  41136e:	rcr    DWORD PTR [ebx-0x34526dec],0x0
	...
  411399:	add    BYTE PTR [eax],al
  41139b:	add    BYTE PTR [edx-0x3fc916f3],cl
  4113a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113a2:	popf   
  4113a3:	pop    ss
  4113a4:	push   edi
  4113a5:	mov    eax,ds:0x925c3d51
  4113aa:	loope  0x41136f
  4113ac:	fdiv   st,st(3)
  4113ae:	adc    BYTE PTR [edx+0x8],bl
  4113b1:	dec    eax
  4113b2:	jmp    0x7a46ea
  4113b7:	push   ss
  4113b8:	ficom  WORD PTR [edx-0x6a391b1]
  4113be:	dec    edi
  4113bf:	push   sp
  4113c1:	add    eax,ebp
  4113c3:	push   esi
  4113c4:	fst    QWORD PTR [edx+0x2e9241fe]
  4113ca:	dec    DWORD PTR [esi+0x0]
  4113cd:	enter  0xe90b,0x55
  4113d1:	jle    0x4113be
  4113d3:	push   0x13
  4113d5:	call   0x2e39:0x1f48c356
  4113dc:	pop    esp
  4113dd:	add    eax,ebp
  4113df:	xchg   ebp,eax
  4113e0:	xor    BYTE PTR [edx-0x6a738f02],dl
  4113e6:	mov    dl,ah
  4113e8:	and    esp,ecx
  4113ea:	inc    eax
  4113eb:	jmp    0x7d40e6b8
  4113f0:	sub    al,0x21
  4113f2:	mov    cl,0xa5
  4113f4:	or     DWORD PTR [ecx],ecx
  4113f6:	push   edi
  4113f7:	add    DWORD PTR [esi],edx
  4113f9:	in     eax,0xff
  4113fb:	call   0x46b4dd43
	...
  411428:	jbe    0x4113cb
  41142a:	fld    DWORD PTR [ebp-0x3a]
  41142d:	xchg   edx,eax
  41142e:	or     ch,BYTE PTR [ecx+0x24893c34]
  411434:	mov    bh,0x92
  411436:	je     0x4113f9
  411438:	(bad)  
  411439:	out    dx,eax
  41143a:	(bad)  
  41143b:	xor    al,0x57
  41143d:	mov    eax,ds:0x92dfb685
  411442:	(bad)  
  411443:	xor    al,0xd7
  411445:	pop    ds
  411446:	sbb    al,0xa6
  411448:	push   ebp
  411449:	add    eax,ebp
  41144b:	and    dh,al
  41144d:	xchg   edx,eax
  41144e:	(bad)  
  41144f:	xchg   esi,eax
  411450:	xor    eax,0xb7ca6991
  411455:	sbb    al,0x8
  411457:	add    BYTE PTR [edx-0x3a00011f],bh
  41145d:	in     al,0xc3
  41145f:	inc    esp
  411460:	jae    0x411467
  411462:	push   DWORD PTR [ebp-0x46]
  411465:	fs jae 0x4114c6
  411468:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411469:	ins    DWORD PTR es:[edi],dx
  41146a:	or     eax,eax
  41146c:	(bad)  
  41146d:	call   0xff4e:0x74ffff4e
  411474:	inc    DWORD PTR [eax+ebp*8]
  411477:	ins    BYTE PTR es:[edi],dx
  411478:	sub    al,0x6d
  41147a:	std    
  41147b:	call   0x3fe6b2
  411480:	xor    eax,0x7ae8f7f7
  411485:	sar    dh,cl
  411487:	jmp    DWORD PTR [esi]
  411489:	mov    ecx,0xb9be
	...
  4114b2:	add    BYTE PTR [eax],al
  4114b4:	inc    ebp
  4114b5:	ins    DWORD PTR es:[edi],dx
  4114b6:	std    
  4114b7:	inc    DWORD PTR [eax+0x1e]
  4114ba:	aaa    
  4114bb:	pop    es
  4114bc:	mov    edi,0x4675fd88
  4114c1:	ins    DWORD PTR es:[edi],dx
  4114c2:	jae    0x4114cc
  4114c4:	pop    edx
  4114c5:	(bad)  
  4114c6:	push   esi
  4114c7:	push   DWORD PTR [ebp-0x513d372c]
  4114cd:	or     al,0x55
  4114cf:	mov    edx,DWORD PTR [esi+0x7a0c7374]
  4114d5:	push   ebx
  4114d6:	pop    esp
  4114d7:	push   DWORD PTR [ebp+0x0]
  4114da:	shl    BYTE PTR [edi+eiz*4-0x1c],0xd2
  4114df:	inc    esp
  4114e0:	arpl   WORD PTR ds:0xd341e850,ax
  4114e6:	(bad)  
  4114e7:	jmp    DWORD PTR [edx+0x74]
  4114ea:	jae    0x4114fc
  4114ec:	push   edx
  4114ed:	je     0x411562
  4114ef:	or     dl,bl
  4114f1:	(bad)  
  4114f2:	aam    0xff
  4114f4:	lds    ebx,FWORD PTR [ebp+0x6c]
  4114f7:	pop    edx
  4114f8:	dec    ebx
  4114f9:	ja     0x411495
  4114fb:	enter  0xae89,0x2
  4114ff:	push   ebp
  411500:	shl    BYTE PTR [esi-0x7a],0xc3
  411504:	inc    ebx
  411505:	imul   DWORD PTR ds:0x995cb100
  41150b:	je     0x411550
  41150d:	mov    cl,BYTE PTR [edx-0x72d8d3aa]
  411513:	inc    esp
  411514:	daa    
  411515:	sbb    ebx,ecx
  411517:	pop    edx
	...
  411540:	jae    0x4115a3
  411542:	add    al,BYTE PTR [eax+0x590ea254]
  411548:	mov    ds:0x4b413fd8,eax
  41154d:	ja     0x4114f9
  41154f:	fldcw  WORD PTR [edi]
  411551:	mov    ds:0x560b0b02,al
  411556:	(bad)  
  411557:	push   esi
  411558:	jecxz  0x41153e
  41155a:	es jmp esp
  41155d:	call   0xf841:0x291973c2
  411564:	aam    0x74
  411566:	call   0xb308:0x11073169
  41156d:	daa    
  41156e:	fwait
  41156f:	(bad)  
  411570:	mov    esp,0x21f80f96
  411575:	mov    esi,0xba437499
  41157a:	sbb    edi,edi
  41157c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41157d:	scas   al,BYTE PTR es:[edi]
  41157e:	cdq    
  41157f:	je     0x411524
  411581:	dec    ebx
  411582:	out    0xfe,eax
  411584:	push   ds
  411585:	stos   BYTE PTR es:[edi],al
  411586:	stos   BYTE PTR es:[edi],al
  411587:	imul   ecx,DWORD PTR [esi+eax*8-0x36010167],0xffffffaa
  41158f:	std    
  411590:	and    dl,BYTE PTR [edi-0x67]
  411593:	sti    
  411594:	cmp    BYTE PTR [edx+0x5b],ah
  411597:	(bad)  
  411598:	ins    BYTE PTR es:[edi],dx
  411599:	or     BYTE PTR [esi-0x1fa1a566],ah
  41159f:	add    dl,dh
  4115a1:	addr16 xchg ebp,eax
  4115a3:	adc    BYTE PTR [eax],al
	...
  4115c9:	add    BYTE PTR [eax],al
  4115cb:	add    BYTE PTR [edi-0x71],dl
  4115ce:	adc    ecx,DWORD PTR [ebx+eiz*2]
  4115d1:	sub    ebx,DWORD PTR [esi]
  4115d3:	fwait
  4115d4:	inc    ebp
  4115d5:	das    
  4115d6:	mov    al,0xc5
  4115d8:	dec    eax
  4115d9:	or     DWORD PTR [edi+ecx*4],ebx
  4115dc:	and    BYTE PTR [ebx+0x239597a4],cl
  4115e2:	jmp    0xd3cf7614
  4115e7:	or     esi,DWORD PTR [ebx]
  4115e9:	add    eax,0x81159abe
  4115ee:	mov    ds:0xa1ccc197,eax
  4115f3:	jmp    0x411580
  4115f5:	or     DWORD PTR [ecx-0x26],ebp
  4115f8:	cld    
  4115f9:	sbb    ch,BYTE PTR [ecx-0x57b9ead5]
  4115ff:	add    edx,DWORD PTR [ecx+eiz*4-0x711b1848]
  411606:	icebp  
  411607:	ret    
  411608:	pop    eax
  411609:	jmp    0x9a0e:0x2a59abbd
  411610:	inc    ecx
  411611:	leave  
  411612:	jl     0x411610
  411614:	adc    al,0x21
  411616:	jmp    0x8090c21e
  41161b:	stos   DWORD PTR es:[edi],eax
  41161c:	or     BYTE PTR [eax-0x17],cl
  41161f:	xor    ebp,DWORD PTR [esp+edx*1+0xf2babf1]
  411626:	ficomp WORD PTR [ecx-0x66d0835c]
  41162c:	xchg   ebp,eax
  41162d:	lea    ebx,[ecx]
  41162f:	les    eax,FWORD PTR [eax]
	...
  411655:	add    BYTE PTR [eax],al
  411657:	add    bl,dl
  411659:	mov    es,ebp
  41165b:	cdq    
  41165c:	test   DWORD PTR [ebx+0x1445dc8e],ebx
  411662:	add    BYTE PTR [ecx-0x5103ea2e],ch
  411668:	cmp    al,0x1
  41166a:	call   0xfecf300a
  41166f:	ds nop
  411671:	enter  0xe903,0x25
  411675:	sub    bl,0x6a
  411678:	mov    esp,DWORD PTR [esi-0x23573b7e]
  41167e:	inc    eax
  41167f:	jmp    0xa0452acc
  411684:	or     eax,0x47030002
  411689:	and    eax,DWORD PTR [eax]
  41168b:	rol    ebx,cl
  41168d:	mov    ?,WORD PTR [ebp+ebp*8+0x6e]
  411691:	or     DWORD PTR [edx-0x17],ebp
  411694:	loopne 0x411679
  411696:	sub    ch,cl
  411698:	dec    eax
  411699:	add    BYTE PTR [ecx+eax*2-0x1e],0x14
  41169e:	clc    
  41169f:	push   ecx
  4116a0:	cmp    DWORD PTR [eax],esi
  4116a2:	push   DWORD PTR [esi]
  4116a4:	rol    BYTE PTR [esp+edi*8+0x2e],0x3c
  4116a9:	xchg   ecx,eax
  4116aa:	(bad)  
  4116ab:	pushf  
  4116ac:	mov    esp,0x4c1eff1f
  4116b1:	std    
  4116b2:	imul   ebp,ecx,0xe5e80926
  4116b8:	fisttp WORD PTR [ebp+0x74fe]
	...
  4116e2:	add    BYTE PTR [eax],al
  4116e4:	test   BYTE PTR [ebp+0x2348934f],dl
  4116ea:	add    BYTE PTR [ebx-0x11ffe042],al
  4116f0:	cmp    eax,0x28fcfe8d
  4116f5:	fadd   QWORD PTR [eax-0x17]
  4116f8:	sbb    eax,0xc0610e4e
  4116fd:	(bad)  
  4116fe:	(bad)  
  4116ff:	jmp    0x1354bc3
  411704:	stc    
  411705:	xchg   ebx,eax
  411706:	mov    eax,DWORD PTR [ebp-0x3e]
  411709:	fldcw  WORD PTR [ecx+0x0]
  41170c:	or     BYTE PTR [edi+0x60a0068],dl
  411712:	inc    ebp
  411713:	inc    ecx
  411714:	jb     0x411786
  411716:	jae    0x41170c
  411718:	mov    ebp,0xa2850fd3
  41171d:	icebp  
  41171e:	pop    esi
  41171f:	push   DWORD PTR [edi]
  411721:	jne    0x411709
  411723:	stos   DWORD PTR es:[edi],eax
  411724:	bound  esi,QWORD PTR [edx-0x3]
  411727:	mov    DWORD PTR [edi+0x5d],esp
  41172a:	or     eax,eax
  41172c:	ss inc ecx
  41172e:	push   DWORD PTR [ebp-0x36]
  411731:	pusha  
  411732:	jmp    0x41178c
  411734:	lods   eax,DWORD PTR ds:[esi]
  411735:	jno    0x4116be
  411737:	inc    ebp
  411738:	mov    ?,WORD PTR [ecx+0x73]
  41173b:	lock mov dh,BYTE PTR [esi]
  41173e:	push   ecx
  41173f:	(bad)  
  411740:	jge    0x4117b3
  411742:	jae    0x41172c
  411744:	(bad)  
  411745:	sti    
  411746:	jmp    0x411747
	...
  411770:	mov    bh,0x78
  411772:	out    0x2c,al
  411774:	shl    DWORD PTR [ecx-0x3],cl
  411777:	or     esp,DWORD PTR [edx]
  411779:	cld    
  41177a:	sbb    ch,BYTE PTR [eax-0xe]
  41177d:	or     bh,ch
  41177f:	mov    esi,0xe807fb3d
  411784:	neg    ebx
  411786:	(bad)  
  411787:	(bad)  
  411788:	cmp    eax,0x47ffe7fb
  41178d:	fs std 
  41178f:	jne    0x41174b
  411791:	pusha  
  411792:	pop    ebx
  411793:	push   ebp
  411794:	mov    ebp,0xae75fd74
  411799:	pop    edi
  41179a:	xchg   esp,eax
  41179b:	pop    eax
  41179c:	lods   eax,DWORD PTR ds:[esi]
  41179d:	je     0x41179c
  41179f:	jne    0x411723
  4117a1:	pop    ebp
  4117a2:	stc    
  4117a3:	dec    edi
  4117a4:	dec    ebx
  4117a5:	mov    bl,0x96
  4117a7:	mov    dh,dh
  4117a9:	mov    ch,0x8a
  4117ab:	adc    DWORD PTR [ebp+ecx*8-0x65e60171],eax
  4117b2:	xchg   ebp,eax
  4117b3:	je     0x41182c
  4117b5:	retf   0x581a
  4117b8:	ins    BYTE PTR es:[edi],dx
  4117b9:	pop    ebx
  4117ba:	int3   
  4117bb:	rcl    DWORD PTR [edi-0x5e],0x2f
  4117bf:	mov    ebp,DWORD PTR [edi+0x6b]
  4117c2:	adc    BYTE PTR [ebx+eiz*2],cl
  4117c5:	aaa    
  4117c6:	cmp    bh,bh
  4117c8:	dec    esp
  4117c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117ca:	ret    0x7273
  4117cd:	cli    
  4117ce:	xchg   ecx,eax
  4117cf:	inc    ebx
  4117d0:	mov    ah,BYTE PTR [edx+0xe832]
	...
  4117fa:	add    BYTE PTR [eax],al
  4117fc:	fwait
  4117fd:	not    BYTE PTR [esi+0x450a9bfe]
  411803:	mov    edi,0x2aa28b
  411808:	dec    ebx
  411809:	cmp    edx,DWORD PTR [esi+0x67]
  41180c:	inc    ebx
  41180d:	pop    ebp
  41180e:	inc    ebx
  41180f:	add    BYTE PTR [ebx+0x3b],bh
  411812:	adc    DWORD PTR [eax],ecx
  411814:	repz mov ecx,0x39fcff19
  41181a:	xlat   BYTE PTR ds:[ebx]
  41181b:	push   edi
  41181c:	hlt    
  41181d:	rcl    BYTE PTR [esi+0x7e4a3f74],cl
  411823:	pop    ebx
  411824:	in     al,0xe2
  411826:	or     al,al
  411828:	push   edi
  411829:	mov    ecx,0x618ff92a
  41182e:	add    dl,BYTE PTR [eax-0x1d]
  411831:	xchg   esi,eax
  411832:	ss inc esp
  411835:	jno    0x411861
  411837:	inc    ecx
  411838:	cld    
  411839:	popa   
  41183a:	add    ch,BYTE PTR [eax+0x4b]
  41183d:	mov    ds:0xaa23bda5,al
  411842:	aas    
  411843:	inc    ecx
  411844:	dec    ebx
  411845:	or     DWORD PTR [ecx],edi
  411847:	xchg   edi,eax
  411848:	pop    ss
  411849:	add    ecx,edx
  41184b:	rcl    BYTE PTR [ecx],cl
  41184d:	mov    ebp,ss
  41184f:	stos   DWORD PTR es:[edi],eax
  411850:	inc    edx
  411851:	xor    esi,ecx
  411853:	xchg   esi,eax
  411854:	xchg   ebx,eax
  411855:	(bad)  
  411856:	lock add edx,DWORD PTR [esi]
  411859:	or     ah,0x82
  41185c:	mov    BYTE PTR [edx+eax*2+0x4],cl
	...
  411887:	add    cl,ah
  411889:	int3   
  41188a:	lods   eax,DWORD PTR ds:[esi]
  41188b:	adc    BYTE PTR [ebx-0x5f],dl
  41188e:	aam    0x30
  411890:	pop    esp
  411891:	mov    ebp,DWORD PTR [edi+0x40]
  411894:	push   edi
  411895:	push   ds
  411896:	repz xchg esi,eax
  411898:	xlat   BYTE PTR ds:[ebx]
  411899:	add    BYTE PTR [ecx-0x7a74bbed],al
  41189f:	sub    DWORD PTR [eax-0x76],ebp
  4118a2:	repz or esp,DWORD PTR [ebx]
  4118a5:	and    al,0x76
  4118a7:	xchg   esi,eax
  4118a8:	sub    eax,0x9f96cd20
  4118ad:	add    DWORD PTR [ecx+0x37],edx
  4118b0:	sbb    al,0x8b
  4118b2:	pop    ebp
  4118b3:	xchg   esi,eax
  4118b4:	lahf   
  4118b5:	lea    edx,[ebp+0x10]
  4118b8:	inc    ebx
  4118b9:	mov    eax,ds:0x8b0430a6
  4118be:	das    
  4118bf:	ror    DWORD PTR [eax+0x9],0x94
  4118c3:	mov    ah,al
  4118c5:	mov    bh,BYTE PTR [ebx-0x72fe1cf9]
  4118cb:	xchg   esi,eax
  4118cc:	in     eax,0xfe
  4118ce:	sub    BYTE PTR [edi],cl
  4118d0:	daa    
  4118d1:	and    esi,edi
  4118d3:	inc    eax
  4118d4:	mov    cl,BYTE PTR [ecx]
  4118d6:	mov    ecx,0xe2eafab
  4118db:	xchg   esi,eax
  4118dc:	adc    al,0x21
  4118de:	jmp    0x908cc4e6
  4118e3:	ror    DWORD PTR [edi],1
  4118e5:	dec    eax
  4118e6:	add    cl,ch
  4118e8:	js     0x411874
  4118ea:	je     0x4118cd
	...
  411914:	lock and eax,0xa2b6e67c
  41191a:	nop
  41191b:	ss mov esi,0x3fabc88b
  411921:	or     DWORD PTR [ebp+0x62],edx
  411924:	mov    bl,0x87
  411926:	ret    
  411927:	lds    esi,FWORD PTR [ecx]
  411929:	or     DWORD PTR [edx-0x4],ebp
  41192c:	fist   WORD PTR ds:0x361ac108
  411932:	jmp    FWORD PTR [esi+0x13fc45d0]
  411938:	popa   
  411939:	mov    esi,DWORD PTR [ecx+esi*8-0x60]
  41193d:	pusha  
  41193e:	(bad)  
  41193f:	xchg   esi,eax
  411940:	mov    dh,0x20
  411942:	and    ecx,DWORD PTR [esi+0x49e80154]
  411948:	(bad)  
  411949:	mov    bh,dh
  41194b:	adc    esi,DWORD PTR [ebx]
  41194d:	mov    esi,DWORD PTR [ecx+eiz*8-0x20]
  411951:	jae    0x411951
  411953:	outs   dx,BYTE PTR ds:[esi]
  411954:	mov    esi,0xb665748a
  411959:	adc    al,0x8
  41195b:	push   ecx
  41195c:	or     al,0x36
  41195e:	call   DWORD PTR [esi+0x0]
  411961:	enter  0xe903,0x35
  411965:	jle    0x411952
  411967:	push   0xb
  411969:	xchg   edx,eax
  41196a:	push   esi
  41196b:	ror    DWORD PTR [eax+0x1f],cl
  41196e:	ds ss cmp al,0x1
  411972:	call   0xfecb4e30
  411977:	jo     0x411979
	...
  41199d:	add    BYTE PTR [eax],al
  41199f:	add    BYTE PTR [ecx*4-0x1eec2376],bl
  4119a6:	inc    eax
  4119a7:	jmp    0x9540e474
  4119ac:	xchg   DWORD PTR [ecx],esp
  4119ae:	cmp    al,BYTE PTR [eax]
  4119b0:	out    dx,eax
  4119b1:	inc    esi
  4119b2:	add    BYTE PTR [edi+0x5a],dl
  4119b5:	xor    BYTE PTR [eax],ch
  4119b7:	add    BYTE PTR [edx-0x778b4000],ah
  4119bd:	fsubr  st(7),st
  4119bf:	ficom  WORD PTR [edx]
  4119c1:	je     0x4119c0
  4119c3:	or     esp,edx
  4119c5:	stc    
  4119c6:	pop    ds
  4119c7:	mov    DWORD PTR [edi+0x6d],ebx
  4119ca:	data16 add BYTE PTR [edx+0x64],dh
  4119ce:	mov    esp,0x40ca3168
  4119d3:	add    BYTE PTR [ebp+0x2ffff7fa],dh
  4119d9:	std    
  4119da:	out    0xc8,eax
  4119dc:	sbb    DWORD PTR [ebp+edi*8-0x1],esi
  4119e0:	aas    
  4119e1:	ins    DWORD PTR es:[edi],dx
  4119e2:	out    0xf1,al
  4119e4:	sbb    al,0x74
  4119e6:	std    
  4119e7:	cld    
  4119e8:	jno    0x4119af
  4119ea:	mov    bh,0xff
  4119ec:	aad    0x9d
  4119ee:	std    
  4119ef:	repnz xchg esp,eax
  4119f1:	fs add eax,0x739d8b75
  4119f7:	cld    
  4119f8:	mov    ch,0x17
  4119fa:	or     al,ch
  4119fc:	cmp    al,0x39
  4119fe:	(bad)  
  4119ff:	inc    DWORD PTR ds:0x4c054
	...
  411a29:	add    BYTE PTR [eax],al
  411a2b:	add    BYTE PTR [edx],ah
  411a2d:	cmp    BYTE PTR [ebx-0x1d375e14],cl
  411a33:	push   edi
  411a34:	or     BYTE PTR ds:0x17853f6a,cl
  411a3a:	or     al,ch
  411a3c:	mov    bh,BYTE PTR [ecx]
  411a3e:	(bad)  
  411a3f:	jmp    FWORD PTR [ebx+0x47]
  411a42:	cld    
  411a43:	mov    esi,edi
  411a45:	inc    ecx
  411a46:	sub    BYTE PTR [ecx-0xe],al
  411a49:	mov    WORD PTR ds:0x6845be00,?
  411a4f:	dec    eax
  411a50:	dec    ebx
  411a51:	mov    ch,0x41
  411a53:	add    BYTE PTR [edx+ecx*1],bl
  411a56:	inc    eax
  411a57:	sub    DWORD PTR [ebx+0x72],ecx
  411a5a:	pop    es
  411a5b:	sar    BYTE PTR [edi],0x5c
  411a5e:	sub    ebp,eax
  411a60:	and    eax,0x50fe9392
  411a65:	xor    cl,BYTE PTR [edi]
  411a67:	and    dl,dl
  411a69:	xor    eax,0x724b678c
  411a6e:	mov    eax,ds:0x494123bd
  411a73:	inc    ecx
  411a74:	dec    ebx
  411a75:	push   edi
  411a76:	sbb    al,bh
  411a78:	jl     0x411abf
  411a7a:	cld    
  411a7b:	out    0x1b,eax
  411a7d:	retf   
  411a7e:	xchg   edx,eax
  411a7f:	(bad)  
  411a80:	ins    BYTE PTR es:[edi],dx
  411a81:	inc    ebp
  411a82:	mov    edi,fs
  411a84:	loop   0x411aa5
  411a86:	xchg   ebx,eax
  411a87:	(bad)  
  411a88:	pop    edi
  411a89:	arpl   dx,ax
  411a8b:	mov    eax,0xfe92a754
	...
  411ab8:	pop    ecx
  411ab9:	ror    bl,1
  411abb:	push   es
  411abc:	mov    esi,0x4b001bd9
  411ac1:	lahf   
  411ac2:	push   ecx
  411ac3:	addr16 call 0x48cc:0xa300452d
  411acb:	inc    ecx
  411acc:	dec    ebx
  411acd:	neg    DWORD PTR [eax]
  411acf:	or     BYTE PTR [ebx],dh
  411ad1:	pusha  
  411ad2:	or     eax,0x25c14ff
  411ad7:	push   0x43b571
  411adc:	jae    0x411acb
  411ade:	dec    eax
  411adf:	inc    ecx
  411ae0:	dec    ebx
  411ae1:	iret   
  411ae2:	fadd   DWORD PTR [ecx+0x22]
  411ae5:	mov    cl,0x2
  411ae7:	call   0xfed2b482
  411aec:	shr    BYTE PTR [esi+ebx*4-0x6ef6b497],cl
  411af3:	sub    cl,BYTE PTR [esi-0x39e41736]
  411af9:	int    0xa7
  411afb:	add    eax,esp
  411afd:	cmp    eax,0x90bdcab
  411b02:	adc    edi,ecx
  411b04:	adc    ecx,DWORD PTR [eax+0x7d077cfd]
  411b0a:	add    BYTE PTR [ebx],0x33
  411b0d:	cld    
  411b0e:	mov    ds:0x6bf14b44,eax
  411b13:	dec    eax
  411b14:	or     cl,BYTE PTR [ecx]
  411b16:	(bad)  
  411b18:	or     dh,BYTE PTR [edx]
  411b1a:	sub    BYTE PTR [eax+eax*1],al
	...
  411b41:	add    BYTE PTR [eax],al
  411b43:	add    BYTE PTR [ebx+0x29],dh
  411b46:	xor    BYTE PTR [ebx-0x6bd46e83],dl
  411b4c:	(bad)  
  411b4d:	int    0xc4
  411b4f:	xor    esp,ebx
  411b51:	add    al,0x2c
  411b53:	inc    ebp
  411b54:	dec    ebx
  411b55:	icebp  
  411b56:	arpl   WORD PTR [eax+0xa],cx
  411b59:	or     DWORD PTR [esi+0x28320ad8],esp
  411b5f:	add    al,0x63
  411b61:	or     eax,0x91459330
  411b66:	and    ebx,DWORD PTR [ecx+ecx*8-0x40fc82fc]
  411b6d:	shr    DWORD PTR [ecx+0x10],1
  411b70:	cmp    ecx,DWORD PTR [edx]
  411b72:	std    
  411b73:	inc    ebp
  411b74:	enter  0x7d04,0x3
  411b78:	xchg   edi,eax
  411b79:	inc    ebp
  411b7a:	rol    DWORD PTR [ebx+ecx*2],1
  411b7d:	jbe    0x411b1d
  411b7f:	xchg   edx,eax
  411b80:	xchg   edi,eax
  411b81:	adc    DWORD PTR [ecx+0x37],eax
  411b84:	cdq    
  411b85:	xchg   BYTE PTR [ebp-0x6e],cl
  411b88:	ja     0x411c07
  411b8a:	inc    ebp
  411b8b:	sbb    BYTE PTR [ebx+0x71],al
  411b8e:	xchg   ecx,eax
  411b8f:	xor    eax,0x35ff86ec
  411b94:	inc    ebx
  411b95:	jns    0x411b95
  411b97:	mov    ah,0xe0
  411b99:	outs   dx,BYTE PTR ds:[esi]
  411b9a:	lahf   
  411b9b:	mov    ebx,0x94fe87b9
  411ba0:	lods   al,BYTE PTR ds:[esi]
  411ba1:	xchg   DWORD PTR [ecx+eiz*8-0x20],esi
  411ba5:	popf   
  411ba6:	push   ecx
  411ba7:	push   cs
	...
  411bd0:	fld    DWORD PTR [edi-0x226f28c]
  411bd6:	out    0xfe,eax
  411bd8:	push   esp
  411bd9:	adc    eax,ebp
  411bdb:	xchg   edx,eax
  411bdc:	pop    esi
  411bdd:	xchg   dh,bh
  411bdf:	out    dx,al
  411be0:	xor    al,0x75
  411be2:	out    0x7d,eax
  411be4:	pop    esp
  411be5:	xchg   dh,bh
  411be7:	fidiv  WORD PTR [edi*2-0x79c39a19]
  411bee:	dec    dh
  411bf0:	push   esp
  411bf1:	jns    0x411bda
  411bf3:	ins    DWORD PTR es:[edi],dx
  411bf4:	cmp    al,0x86
  411bf6:	(bad)  
  411bf7:	mov    esi,0x35e77154
  411bfc:	sbb    al,0x86
  411bfe:	(bad)  
  411bff:	scas   al,BYTE PTR es:[edi]
  411c00:	xor    al,0x85
  411c02:	(bad)  
  411c03:	sbb    al,0x57
  411c05:	outs   dx,BYTE PTR ds:[esi]
  411c06:	out    dx,al
  411c07:	cmp    edi,DWORD PTR [edx+0xda05e87]
  411c0d:	or     al,BYTE PTR [eax]
  411c0f:	xor    al,0xbe
  411c11:	jb     0x411b95
  411c13:	lods   eax,DWORD PTR ds:[esi]
  411c14:	fucomi st,st(7)
  411c16:	call   DWORD PTR [edx]
  411c18:	xchg   DWORD PTR [esi-0x683f1e8c],eax
  411c1e:	push   ecx
  411c1f:	outs   dx,BYTE PTR ds:[esi]
  411c20:	mov    edx,0x35654490
  411c25:	or     DWORD PTR [edx-0x17],ebp
  411c28:	xor    al,al
  411c2a:	inc    esp
  411c2b:	test   al,0x48
  411c2d:	icebp  
  411c2e:	(bad)  
  411c2f:	call   0x128a57c
	...
  411c5c:	scas   al,BYTE PTR es:[edi]
  411c5d:	xor    edi,edi
  411c5f:	(bad)  
  411c60:	stc    
  411c61:	dec    ecx
  411c62:	jb     0x411c87
  411c64:	ret    0x1a1
  411c67:	pop    edi
  411c68:	sub    eax,0xb6c00998
  411c6d:	jb     0x411cbd
  411c6f:	push   0xbeef09e2
  411c74:	retf   0x43dd
  411c77:	inc    ecx
  411c78:	mov    dl,0x39
  411c7a:	push   DWORD PTR [ebp-0x46]
  411c7d:	mov    eax,ds:0x98ad79ef
  411c82:	out    0x1d,al
  411c84:	(bad)  
  411c85:	cwde   
  411c86:	std    
  411c87:	call   DWORD PTR [edi]
  411c89:	xchg   esi,eax
  411c8a:	std    
  411c8b:	jne    0x411c27
  411c8d:	mov    eax,ds:0x986d528e
  411c92:	mov    edx,0x8b550976
  411c98:	mov    esi,0x55fcc28c
  411c9d:	daa    
  411c9e:	add    BYTE PTR [edx+0x23],ch
  411ca1:	cwde   
  411ca2:	jae    0x411cac
  411ca4:	mov    bl,BYTE PTR [eax+edx*2-0x1]
  411ca8:	lods   eax,DWORD PTR ds:[esi]
  411ca9:	add    al,BYTE PTR [esp+edi*8-0x27]
  411cad:	push   esi
  411cae:	pop    ecx
  411caf:	sub    BYTE PTR [ebx],ah
  411cb1:	or     eax,0x1d323f80
  411cb6:	inc    eax
  411cb7:	push   0x40cbf5
  411cbc:	push   ebp
  411cbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cbe:	jl     0x411ce7
	...
  411ce8:	and    cl,BYTE PTR [ecx]
  411cea:	or     eax,eax
  411cec:	outs   dx,BYTE PTR es:[esi]
  411cee:	push   ebp
  411cef:	call   0x405787
  411cf4:	sbb    DWORD PTR [ecx+0x72],ecx
  411cf7:	sbb    edx,edx
  411cf9:	and    BYTE PTR [eax],al
  411cfb:	add    BYTE PTR [ebx-0x35],cl
  411cfe:	push   eax
  411cff:	addr16 push ds
  411d01:	scas   al,BYTE PTR es:[edi]
  411d02:	inc    ecx
  411d03:	add    BYTE PTR [ebx-0x1cf7ea35],bl
  411d09:	repz or edi,edi
  411d0c:	in     al,0xca
  411d0e:	dec    ebx
  411d0f:	push   ebx
  411d10:	fdiv   QWORD PTR [ebx]
  411d12:	(bad)  
  411d13:	xor    cl,BYTE PTR [ebx]
  411d15:	jmp    0xad95:0x23ccfe8f
  411d1c:	xor    DWORD PTR [ebx+0x15],0xffffffc0
  411d20:	mov    esp,0x3efe8e9d
  411d25:	jp     0x411cc1
  411d27:	pop    ds
  411d28:	sbb    DWORD PTR [ebx+0x30925e8e],eax
  411d2e:	pop    es
  411d2f:	add    dh,dh
  411d31:	out    0x9e,al
  411d33:	or     BYTE PTR [edi+0x4b6a366e],0xd8
  411d3a:	inc    ecx
  411d3b:	(bad)  
  411d3c:	(bad)  
  411d3d:	imul   ebx,DWORD PTR [edx-0x71ace53f],0x7a4e0e88
  411d47:	cmp    al,0x10
  411d49:	sbb    al,BYTE PTR [ebp+0x0]
	...
  411d74:	retf   
  411d75:	jnp    0x411d79
  411d77:	je     0x411d84
  411d79:	retf   0x44a0
  411d7c:	or     dh,BYTE PTR [edx+0x35]
  411d7f:	call   0x4368c2
  411d84:	push   eax
  411d85:	mov    dl,0x17
  411d87:	and    edx,DWORD PTR [edx+ecx*4-0x74cba22d]
  411d8e:	cli    
  411d8f:	mov    edi,0x683269b7
  411d94:	dec    ebx
  411d95:	jb     0x411d34
  411d97:	mov    ebp,0x4148feb3
  411d9c:	dec    ebx
  411d9d:	or     DWORD PTR [ecx+0x5111978e],edi
  411da3:	out    dx,al
  411da4:	add    DWORD PTR [ebp+edx*2+0x4ddd929c],0xffffff8f
  411dac:	lock aaa 
  411dae:	sub    DWORD PTR [ebp-0x13],ecx
  411db1:	cmp    DWORD PTR ds:0xf0b2da8f,0x6
  411db8:	push   esi
  411db9:	dec    ecx
  411dba:	ret    0xece2
  411dbd:	mov    eax,es
  411dbf:	mov    cs,ebp
  411dc1:	movaps XMMWORD PTR [eax],xmm3
  411dc4:	outs   dx,DWORD PTR ds:[esi]
  411dc5:	icebp  
  411dc6:	push   ss
  411dc7:	dec    ecx
  411dc8:	or     cl,BYTE PTR [ecx]
  411dca:	mov    ecx,0x5e1539b
  411dcf:	(bad)  
  411dd0:	cld    
  411dd1:	lock call 0x8103d1da
  411dd7:	xchg   edi,eax
	...
  411e00:	pop    es
  411e01:	retf   0x33e8
  411e04:	xchg   esp,eax
  411e05:	std    
  411e06:	lock fwait
  411e08:	stos   DWORD PTR es:[edi],eax
  411e09:	add    dh,bl
  411e0b:	mov    gs,WORD PTR [ebp+edx*1+0x3d]
  411e0f:	(bad)  
  411e10:	jge    0x411e00
  411e12:	or     DWORD PTR [edi+ebx*1+0x418ec5e1],ebx
  411e19:	dec    ecx
  411e1a:	xor    al,0xe8
  411e1c:	in     al,dx
  411e1d:	or     ch,BYTE PTR [edi]
  411e1f:	inc    ebp
  411e20:	dec    ebx
  411e21:	fld    st(0)
  411e23:	cdq    
  411e24:	std    
  411e25:	and    DWORD PTR [ebp-0x16f71ccd],0xffffff9e
  411e2c:	push   es
  411e2d:	repnz pushf 
  411e2f:	dec    eax
  411e30:	mov    cl,BYTE PTR [ecx]
  411e32:	cmp    DWORD PTR [edi+0x519111bf],ecx
  411e38:	mov    ah,0x82
  411e3a:	jge    0x411dd7
  411e3c:	push   es
  411e3d:	xlat   BYTE PTR ds:[ebx]
  411e3e:	push   DWORD PTR [ebp-0x33]
  411e41:	xor    DWORD PTR [ebp+ebp*2-0x3b],0xfffffffd
  411e46:	pop    es
  411e47:	push   ecx
  411e48:	push   edi
  411e49:	fdivr  st,st(6)
  411e4b:	pop    esi
  411e4c:	xor    eax,0x48edc150
  411e51:	fmul   QWORD PTR [edx-0x10b936c3]
  411e57:	je     0x411ddc
  411e59:	jns    0x411eaa
  411e5b:	ds inc ebx
  411e5d:	adc    eax,0x822f9ee8
  411e62:	(bad)  
  411e63:	loop   0x411e65
	...
  411e89:	add    BYTE PTR [eax],al
  411e8b:	add    BYTE PTR [eax],cl
  411e8d:	div    DWORD PTR [ecx]
  411e8f:	push   0x3b
  411e91:	test   DWORD PTR [ecx],eax
  411e93:	xchg   edi,eax
  411e94:	test   eax,0x6611448f
  411e99:	mov    BYTE PTR [edi],dh
  411e9b:	mov    ebp,0x618fdaa
  411ea0:	push   ebx
  411ea1:	sbb    edi,edi
  411ea3:	je     0x411e45
  411ea5:	push   0x25
  411ea7:	cdq    
  411ea8:	int    0x83
  411eaa:	(bad)  
  411eab:	je     0x411e71
  411ead:	xor    DWORD PTR [ecx+eiz*8-0x42],0xfffffffd
  411eb2:	pop    es
  411eb3:	rol    DWORD PTR [ebp-0x27],1
  411eb6:	(bad)  
  411eb7:	(bad)  
  411eb8:	cld    
  411eb9:	int3   
  411eba:	out    dx,eax
  411ebb:	cmp    edi,edx
  411ebd:	mov    ebp,0x51bec658
  411ec2:	shr    ebp,0x48
  411ec5:	fmul   QWORD PTR [edx-0x8b9353b]
  411ecb:	inc    ebx
  411ecc:	dec    edi
  411ecd:	out    dx,eax
  411ece:	inc    edx
  411ecf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ed0:	xor    al,0x11
  411ed2:	call   0xfec39e28
  411ed7:	pusha  
  411ed8:	test   BYTE PTR [ebp+0x952e969],al
  411ede:	push   0x40cc0e00
  411ee3:	add    BYTE PTR [edx],bh
  411ee5:	pop    es
  411ee6:	add    BYTE PTR [eax],al
  411ee8:	mov    dl,0xa5
  411eea:	jo     0x411f42
  411eec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411eed:	xchg   esp,eax
  411eee:	or     eax,eax
	...
  411f18:	out    dx,al
  411f19:	push   esp
  411f1a:	xchg   DWORD PTR [ebp+0x6a],eax
  411f1d:	and    eax,0x5b34660
  411f22:	push   DWORD PTR [ebp-0x66]
  411f25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f26:	loopne 0x411f4d
  411f28:	loop   0x411f2f
  411f2a:	or     eax,eax
  411f2c:	sahf   
  411f2d:	push   0xa51a75fd
  411f32:	add    DWORD PTR [ebp+0x25],ebx
  411f35:	xchg   esp,eax
  411f36:	dec    esi
  411f37:	push   0x3e5140
  411f3c:	fiadd  DWORD PTR ds:0x1f14ef00
  411f42:	add    BYTE PTR [eax+0x45],dl
  411f45:	sbb    cl,BYTE PTR [eax]
  411f47:	call   0x403b46
  411f4c:	cmp    dh,BYTE PTR [ecx+edx*2-0x1]
  411f50:	xchg   ebp,eax
  411f51:	xchg   esp,eax
  411f52:	jae    0x411f4c
  411f54:	dec    edx
  411f55:	jl     0x411fa8
  411f57:	jmp    DWORD PTR [ebp-0x5a038c6c]
  411f5d:	sbb    cl,BYTE PTR [eax]
  411f5f:	call   0x40554c
  411f64:	stos   DWORD PTR es:[edi],eax
  411f65:	inc    edi
  411f66:	add    al,BYTE PTR [eax]
  411f68:	dec    edi
  411f69:	add    bl,ch
  411f6b:	sub    DWORD PTR [esi+0x8006891],0xffffffd1
  411f72:	(bad)  
  411f73:	jne    0x411fdf
  411f75:	popf   
  411f76:	sub    al,0x50
  411f78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f79:	xchg   esp,eax
  411f7a:	xchg   DWORD PTR [ebp+0x0],eax
	...
  411fa1:	add    BYTE PTR [eax],al
  411fa3:	add    dh,ah
  411fa5:	and    al,0x0
  411fa7:	add    BYTE PTR [ebx-0x79],cl
  411faa:	dec    esp
  411fab:	addr16 mov eax,0xa3004328
  411fb1:	sbb    al,BYTE PTR [esi+0x41]
  411fb4:	dec    ebx
  411fb5:	call   DWORD PTR ds:0x14013308
  411fbb:	call   DWORD PTR [eax+esi*8]
  411fbe:	adc    eax,0xfa5e0cfc
  411fc3:	out    0x94,eax
  411fc5:	ret    0xfe8b
  411fc8:	adc    dh,BYTE PTR ds:0xeb9e0007
  411fce:	sahf   
  411fcf:	add    BYTE PTR [edi],0xcb
  411fd2:	sbb    al,BYTE PTR [eax]
  411fd4:	dec    ebx
  411fd5:	iret   
  411fd6:	dec    esp
  411fd7:	(bad)  
  411fd8:	push   esi
  411fd9:	push   0xffffff9a
  411fdb:	inc    edx
  411fdc:	test   BYTE PTR [edi],ch
  411fde:	mov    esi,?
  411fe0:	push   esi
  411fe1:	jbe    0x411f6e
  411fe3:	je     0x412038
  411fe5:	sbb    ch,BYTE PTR [ecx+0x4e]
  411fe8:	mov    esp,0x5b748c17
  411fed:	movhps xmm1,QWORD PTR [eax]
  411ff0:	mov    ds:0xa4ff3bf7,eax
  411ff5:	jg     0x41200b
  411ff7:	sbb    BYTE PTR [ebp+edi*8+0x6a1efef6],bl
  411ffe:	call   0xb967:0x8a66fc54
  412005:	sub    BYTE PTR [ebp+0x0],al
	...
  412030:	jl     0x41200f
  412032:	repz out 0x2e,eax
  412035:	add    eax,0xb2400004
  41203a:	adc    BYTE PTR [ebp-0xd],ah
  41203d:	cmc    
  41203e:	inc    ecx
  41203f:	inc    ecx
  412040:	dec    ebx
  412041:	dec    edx
  412042:	or     ah,BYTE PTR [ebx]
  412044:	dec    ebx
  412045:	jb     0x4120c2
  412047:	inc    esp
  412048:	push   ebx
  412049:	or     DWORD PTR [ecx],edx
  41204b:	push   eax
  41204c:	mov    cs,edx
  41204e:	call   0x815ad7dd
  412053:	add    ebp,DWORD PTR [esi+0x9]
  412056:	jmp    0xef360d59
  41205b:	push   es
  41205c:	mov    es,WORD PTR [ecx-0x7fc4be91]
  412062:	sti    
  412063:	repz sub al,0x9e
  412066:	add    DWORD PTR [ebx-0x749f73f3],ecx
  41206c:	js     0x4120a3
  41206e:	jo     0x4120b1
  412070:	push   eax
  412072:	out    0x3,eax
  412074:	in     al,0xbe
  412076:	dec    ebp
  412077:	adc    DWORD PTR [ebx+0x71],eax
  41207a:	xor    edi,DWORD PTR [edx]
  41207c:	in     al,0x7f
  41207e:	cmp    eax,0xbb804f11
  412083:	sti    
  412084:	in     al,dx
  412085:	and    al,0x9e
  412087:	mov    cl,ch
  412089:	jg     0x412026
  41208b:	xchg   ebp,eax
  41208d:	cmc    
  41208e:	lock fwait
  412090:	cmc    
  412091:	into   
  412092:	adc    eax,0x8b
	...
  4120bb:	add    BYTE PTR [ebp+0x378af0f5],dh
  4120c1:	adc    eax,0x71531106
  4120c6:	sbb    eax,0x1f7f9c3a
  4120cb:	(bad)  
  4120cc:	cmp    BYTE PTR [ecx],cl
  4120ce:	xchg   esp,eax
  4120cf:	jle    0x412071
  4120d1:	mov    ebp,DWORD PTR [ebx+ecx*4+0x501b8c1e]
  4120d8:	cs retf 0x3e8
  4120dc:	(bad)  
  4120dd:	cld    
  4120de:	imul   ecx,eax,0x4282e9c
  4120e4:	dec    ebx
  4120e5:	cmc    
  4120e6:	cmp    DWORD PTR [edi+0x251f],eax
  4120ec:	push   cs
  4120ed:	or     DWORD PTR [eax],eax
  4120ef:	xor    eax,0xa544482d
  4120f4:	dec    eax
  4120f5:	or     DWORD PTR [eax],eax
  4120f7:	jmp    0xea38e705
  4120fc:	dec    eax
  4120fd:	or     DWORD PTR [eax],eax
  4120ff:	pop    esp
  412100:	mov    edi,DWORD PTR [ebp+0x4f]
  412103:	je     0x412090
  412105:	or     DWORD PTR [edi+0x13],0x2f7cf147
  41210c:	mov    cs,WORD PTR [ecx]
  41210e:	call   esp
  412110:	js     0x41213e
  412112:	inc    ecx
  412113:	jmp    0xaab4e01d
  412118:	(bad)  
  41211b:	jmp    0xccc45d64
	...
  412148:	les    edi,FWORD PTR [esi+0x72]
  41214b:	(bad)  
  41214c:	gs cmc 
  41214e:	sti    
  41214f:	push   edx
  412150:	repnz aam 0x8a
  412153:	inc    ecx
  412155:	hlt    
  412156:	pop    ss
  412157:	cmp    bl,BYTE PTR cs:0x7fc09fff
  41215e:	jne    0x412139
  412160:	shl    ebp,1
  412162:	pop    es
  412163:	add    edx,esp
  412165:	jl     0x412165
  412167:	push   cs
  412168:	bound  edi,QWORD PTR [esi+0x4c]
  41216b:	add    ebp,ecx
  41216d:	inc    esp
  41216e:	add    ebp,DWORD PTR [edx+0x53]
  412171:	cmp    edi,0x3d8a4b7c
  412177:	jmp    0x5d3f77b7
  41217c:	sar    DWORD PTR [edi+0x14],cl
  41217f:	xchg   ebp,eax
  412180:	mov    eax,ds:0xb036ffc9
  412185:	dec    eax
  412186:	add    ebp,ecx
  412188:	sbb    eax,0xf100eb92
  41218d:	dec    eax
  41218e:	repnz push ebx
  412190:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412191:	ds clc 
  412193:	add    BYTE PTR [edx+0xa],ah
  412196:	add    bh,al
  412198:	daa    
  412199:	cdq    
  41219a:	(bad)  
  41219b:	push   DWORD PTR [edx]
  41219d:	or     bh,bh
  41219f:	jne    0x4121e3
  4121a1:	add    DWORD PTR [esp+edi*8-0xd],eax
  4121a5:	adc    eax,0x1c226afc
  4121aa:	add    BYTE PTR [edx+0x0],ch
	...
  4121d1:	add    BYTE PTR [eax],al
  4121d3:	add    BYTE PTR [edx],dh
  4121d5:	sbb    al,0x0
  4121d7:	call   DWORD PTR [edi]
  4121d9:	xchg   ch,bh
  4121db:	jne    0x41220b
  4121dd:	sbb    al,0x0
  4121df:	push   0x22
  4121e1:	mov    ds:0x9f222ca,al
  4121e6:	or     eax,eax
  4121e8:	push   ss
  4121e9:	dec    edi
  4121ea:	dec    esi
  4121eb:	push   eax
  4121ec:	mov    ah,BYTE PTR [edi]
  4121ee:	push   ecx
  4121ef:	(bad)  
  4121f0:	jge    0x4121f4
  4121f2:	inc    esp
  4121f3:	clc    
  4121f4:	stos   DWORD PTR es:[edi],eax
  4121f5:	sbb    eax,DWORD PTR [eax]
  4121f7:	push   0xfffffff2
  4121f9:	cmp    bh,bh
  4121fb:	jne    0x412217
  4121fd:	nop
  4121fe:	jae    0x4121fc
  412200:	sbb    eax,0xb26a0c0e
  412205:	sbb    eax,DWORD PTR [eax]
  412207:	call   0x3f8910
  41220c:	test   eax,0x3d0f7349
  412211:	push   cs
  412212:	clc    
  412213:	call   0x405cae
  412218:	gs ds clc 
  41221b:	add    BYTE PTR [edx+0x1f830009],ah
  412221:	xchg   edx,eax
  412222:	(bad)  
  412223:	jae    0x412261
  412225:	nop
  412226:	jae    0x412230
  412228:	popf   
  412229:	push   cs
  41222a:	clc    
  41222b:	call   0x24aa7b
  412230:	ins    BYTE PTR es:[edi],dx
  412231:	push   0xffffffc2
  412233:	jae    0x412259
  412235:	and    BYTE PTR [ecx+0x74],cl
	...
  41225f:	add    BYTE PTR [ebx+0x58],dl
  412262:	add    esp,DWORD PTR [edx]
  412264:	dec    ebx
  412265:	jo     0x412290
  412267:	add    ecx,DWORD PTR [edx+0x71eaaaea]
  41226d:	repnz retf 0xb60c
  412271:	inc    esi
  412272:	sar    bh,0x34
  412275:	inc    eax
  412276:	pushf  
  412277:	in     eax,dx
  412278:	push   0x72
  41227a:	add    cl,BYTE PTR [ebx]
  41227c:	or     edi,DWORD PTR [edi-0x13]
  41227f:	dec    edi
  412280:	jnp    0x41221c
  412282:	nop
  412283:	dec    edi
  412284:	adc    al,0xf4
  412286:	jns    0x4122cc
  412288:	pop    ss
  412289:	sbb    dh,BYTE PTR [ebx]
  41228b:	(bad)  
  41228c:	jle    0x41226c
  41228e:	xor    ebp,eax
  412290:	pop    esp
  412291:	rol    DWORD PTR [edi+0x426ce0fe],0x80
  412298:	xor    esi,DWORD PTR [edx+0xd]
  41229b:	shl    esp,1
  41229d:	mov    ebp,0xa30ae78a
  4122a2:	xchg   esi,edi
  4122a4:	shr    BYTE PTR [ebp+0x31025a8e],0xf7
  4122ab:	call   FWORD PTR [edi]
  4122ad:	not    DWORD PTR [esi+0x31368782]
  4122b3:	push   edi
  4122b4:	enter  0xde55,0x28
  4122b8:	or     dh,BYTE PTR [edx+0x2]
  4122bb:	jne    0x41230a
  4122bd:	mov    ds:0x6e89c928,eax
  4122c2:	add    cl,BYTE PTR [ebp+0x0]
	...
  4122ec:	push   cs
  4122ed:	xor    BYTE PTR [ecx],0xff
  4122f0:	push   ss
  4122f1:	pop    esi
  4122f2:	call   0x5187:0xe6091d30
  4122f9:	dec    ecx
  4122fa:	in     eax,dx
  4122fb:	jg     0x412324
  4122fd:	or     ch,cl
  4122ff:	add    ecx,edx
  412301:	dec    ah
  412303:	add    al,0x4b
  412305:	sbb    ecx,ebp
  412307:	test   cl,0x14
  41230a:	call   0x3bbd6e12
  41230f:	mov    BYTE PTR [ebp-0xa],cl
  412312:	mov    al,0x9c
  412314:	add    dl,ah
  412316:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412317:	xchg   DWORD PTR [ecx+0x49],edx
  41231a:	in     eax,dx
  41231b:	or     BYTE PTR [eax+0xa],0xe9
  41231f:	add    ebp,DWORD PTR [esi+esi*8]
  412322:	mov    WORD PTR [edi+0x6e10819f],es
  412328:	xchg   dl,cl
  41232a:	call   0x75bc1cca
  41232f:	xchg   ebx,eax
  412331:	lds    edi,FWORD PTR [edi+eax*4+0x7f]
  412335:	jge    0x41239c
  412337:	adc    DWORD PTR [ebx],eax
  412339:	icebp  
  41233a:	gs mov cl,BYTE PTR ds:[ecx]
  41233e:	inc    ecx
  41233f:	(bad)  
  412340:	out    dx,al
  412341:	jnp    0x412390
  412343:	jge    0x4122d4
  412345:	jno    0x41238c
  412347:	adc    edi,ebx
  412349:	jnp    0x4122fe
  41234b:	mov    ebp,DWORD PTR [edi+eiz*4-0x52]
  41234f:	inc    esp
	...
  412378:	dec    ebx
  412379:	jno    0x4123f6
  41237b:	xchg   ch,al
  41237d:	jnp    0x4123ee
  41237f:	inc    ecx
  412380:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412381:	xchg   DWORD PTR [ebx+0x6d0ab497],ebx
  412387:	pop    ebp
  412388:	lods   al,BYTE PTR ds:[esi]
  412389:	jnp    0x412373
  41238b:	and    BYTE PTR [edi],0x71
  41238e:	call   0xe8dcec89
  412393:	add    ecx,DWORD PTR [ebx-0x78]
  412396:	push   DWORD PTR [ebx-0x54]
  412399:	jnp    0x4123a8
  41239b:	gs cli 
  41239d:	jnp    0x41239d
  41239f:	jmp    0xd2291869
  4123a4:	jns    0x4123ce
  4123a6:	add    cl,ch
  4123a8:	icebp  
  4123a9:	hlt    
  4123aa:	out    0x62,eax
  4123ac:	into   
  4123ad:	mov    es,edi
  4123af:	cwde   
  4123b0:	mov    edi,0x350fead8
  4123b5:	scas   al,BYTE PTR es:[edi]
  4123b6:	cmp    edi,ecx
  4123b8:	cmp    dl,BYTE PTR [ecx]
  4123ba:	cmp    al,0xf0
  4123bc:	push   ebp
  4123bd:	add    eax,0x6e1d92c
  4123c2:	sub    al,0x28
  4123c4:	dec    ebx
  4123c5:	jo     0xa3a3c60
  4123cb:	imul   ecx,esp,0xc8ec7741
  4123d1:	outs   dx,BYTE PTR ds:[esi]
  4123d2:	das    
  4123d3:	xchg   edx,eax
  4123d4:	push   ss
  4123d5:	sti    
  4123d6:	jmp    0x412400
  4123d8:	mov    DWORD PTR [esi+0x9],0xa9
	...
  412403:	add    BYTE PTR [eax-0x5dd2f5fa],ch
  412409:	ror    DWORD PTR [edx],1
  41240b:	xor    BYTE PTR [ebx+0x4b],bl
  41240e:	pop    eax
  41240f:	pusha  
  412410:	xor    ebx,DWORD PTR [ebp-0x2]
  412413:	aam    0xc0
  412415:	mov    eax,DWORD PTR [ecx+ecx*2-0x63]
  412419:	(bad)
  41241c:	dec    eax
  41241d:	or     DWORD PTR [eax],eax
  41241f:	mov    edx,DWORD PTR fs:[ebp+0x4f]
  412423:	ret    
  412424:	dec    edi
  412425:	out    dx,eax
  412426:	call   DWORD PTR [edx-0x6d0010b8]
  41242c:	dec    eax
  41242d:	mov    WORD PTR [ebp+esi*1+0x78],es
  412431:	jp     0x412447
  412433:	lds    eax,FWORD PTR [edi-0x66000037]
  412439:	inc    esi
  41243a:	jb     0x41245e
  41243c:	and    DWORD PTR [ecx],edx
  41243e:	fadd   DWORD PTR [eax]
  412440:	push   cs
  412441:	(bad)  
  412442:	std    
  412443:	jne    0x4124a3
  412445:	xor    DWORD PTR [ebx-0x28],0x65
  412449:	or     ah,ah
  41244b:	call   FWORD PTR [edi]
  41244d:	mov    eax,ds:0x9e6a75fd
  412452:	mov    ebx,0xfd8495fc
  412457:	jne    0x412403
  412459:	popf   
  41245a:	xchg   esi,eax
  41245b:	and    BYTE PTR [edx+0x6],ah
  41245e:	push   DWORD PTR [ebp-0x7a]
  412461:	popf   
  412462:	js     0x4124b3
  412464:	cmc    
  412465:	cmp    ebp,0x75
	...
  412490:	ficomp DWORD PTR [eax+esi*2-0x27c2ab1]
  412497:	jne    0x412457
  412499:	pushf  
  41249a:	push   0x8b83d54f
  41249f:	inc    ebp
  4124a0:	mov    ds:0x3f90e835,al
  4124a5:	test   ch,bh
  4124a7:	pop    edi
  4124a8:	xor    al,0xbe
  4124aa:	ror    BYTE PTR [edx+esi*8],0x2a
  4124ae:	mov    ebp,esp
  4124b0:	jno    0x4124fb
  4124b2:	cli    
  4124b3:	push   0xffffffe2
  4124b5:	pop    ds
  4124b6:	inc    ebp
  4124b7:	dec    DWORD PTR [edi]
  4124b9:	jle    0x4124a1
  4124bb:	add    esi,0xaf89fd84
  4124c1:	cmp    ebp,0x209dda75
  4124c7:	std    
  4124c8:	adc    eax,0xa056884
  4124cd:	sti    
  4124ce:	push   ecx
  4124cf:	jmp    DWORD PTR [ebp-0x80]
  4124d2:	mov    esi,0x6835b474
  4124d7:	test   DWORD PTR [ebx+0x2b],0x70330044
  4124de:	add    ch,bh
  4124e0:	fst    QWORD PTR [edi+0x700a460a]
  4124e6:	xor    bh,bh
  4124e8:	push   ss
  4124e9:	push   0x6af93d9a
  4124ee:	and    edi,0x56
  4124f1:	xor    eax,DWORD PTR [ebp+0xfe]
	...
  41251b:	add    BYTE PTR [esp+edx*8-0x79],dh
  41251f:	(bad)  
  412520:	mul    BYTE PTR [edi-0x66]
  412523:	xchg   DWORD PTR [edi],edx
  412525:	dec    ebx
  412526:	or     eax,0xffffff89
  412529:	imul   eax,DWORD PTR [edx],0x55
  41252c:	ror    BYTE PTR [ebx+0x7f],0xc3
  412530:	dec    edi
  412531:	sbb    bl,BYTE PTR [edx]
  412533:	add    BYTE PTR [ecx+0x53748530],dh
  412539:	call   0x4479:0x98344bd7
  412540:	das    
  412541:	in     al,dx
  412542:	lds    ebx,FWORD PTR [edx+0x73]
  412545:	and    DWORD PTR [eax+eax*4],eax
  412548:	pop    esp
  412549:	bound  ecx,QWORD PTR [esi]
  41254b:	push   ecx
  41254c:	mov    ds:0x4b413cad,eax
  412551:	pop    ss
  412552:	pushf  
  412553:	jne    0x41257f
  412555:	bound  eax,QWORD PTR [edx]
  412557:	or     ecx,DWORD PTR [ebx]
  412559:	push   edi
  41255a:	add    bl,ch
  41255c:	inc    esp
  41255d:	pop    edx
  41255e:	inc    ebp
  41255f:	inc    ebp
  412560:	mov    ah,BYTE PTR [edx+0x2b]
  412563:	call   0x4526d6
  412568:	push   eax
  412569:	and    cl,BYTE PTR [edi]
  41256b:	and    edi,DWORD PTR [edx+ebx*8+0x7a]
  41256f:	push   edi
  412570:	int3   
  412571:	aas    
  412572:	clc    
  412573:	mov    edi,0x6832593f
  412578:	dec    ebx
  412579:	or     ecx,ebp
  41257b:	xchg   esp,eax
  41257c:	mul    cl
  41257e:	sub    al,0x3d
	...
  4125a8:	or     cl,BYTE PTR [ecx]
  4125aa:	mov    ecx,0x1011f84
  4125af:	or     eax,0x9b057818
  4125b4:	jmp    0x293c:0x9083fdc7
  4125bb:	dec    edx
  4125bc:	test   DWORD PTR [eax-0x13],edi
  4125bf:	cmp    DWORD PTR [edx-0x59],0x20
  4125c3:	or     edi,esi
  4125c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125c6:	(bad)  
  4125c8:	jo     0x412642
  4125ca:	pop    ebx
  4125cb:	or     al,0x73
  4125cd:	adc    BYTE PTR ds:0xafd85d83,bl
  4125d3:	inc    esi
  4125d4:	dec    eax
  4125d5:	or     DWORD PTR [edi+ecx*4],edx
  4125d8:	pusha  
  4125d9:	mov    ch,BYTE PTR [esp+edx*2-0x6e5287c3]
  4125e0:	xchg   DWORD PTR [ebp+0x38],esi
  4125e3:	cmp    DWORD PTR [edi+0x40f99e19],0x61
  4125ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125eb:	and    al,0x4b
  4125ed:	or     edx,esp
  4125ef:	inc    ebx
  4125f0:	dec    ebp
  4125f1:	mov    ?,WORD PTR [ebx-0x59f6b4fb]
  4125f7:	leave  
  4125f8:	adc    al,0x9
  4125fa:	jmp    0x23917102
  4125ff:	je     0x4125fe
  412601:	psubsw mm0,QWORD PTR [ebx]
  412604:	popa   
  412605:	or     ebx,edx
  412607:	add    esp,DWORD PTR [ecx+0x9]
  41260a:	ret    
  41260b:	add    eax,DWORD PTR [eax]
	...
  412631:	add    BYTE PTR [eax],al
  412633:	add    dh,dl
  412635:	int    0x58
  412637:	aam    0xcf
  412639:	lea    edi,[eax]
  41263b:	jnp    0x412612
  41263d:	ja     0x4125d7
  41263f:	adc    BYTE PTR [edi+0x71],0xff
  412643:	xor    eax,0x4fe773c2
  412648:	or     DWORD PTR [bx+si],eax
  41264b:	repnz or ah,bh
  41264e:	add    al,0x10
  412650:	das    
  412651:	or     DWORD PTR [eax],eax
  412653:	jmp    0xa868e108
  412658:	dec    eax
  412659:	js     0x4126cf
  41265b:	fldenv [eax]
  41265d:	dec    ecx
  41265e:	push   eax
  41265f:	dec    cl
  412661:	(bad)  
  412662:	mov    bl,BYTE PTR [ecx]
  412664:	fimul  DWORD PTR [edi+ebp*8+0x4f76c9f6]
  41266b:	cmp    esp,edi
  41266d:	mov    eax,0x80c9de50
  412672:	test   ch,al
  412674:	loope  0x4126ec
  412676:	inc    cl
  412678:	push   ecx
  412679:	(bad)  
  41267a:	inc    dh
  41267c:	mov    ebx,0x5f19f3cc
  412681:	and    DWORD PTR [edi+0x28],eax
  412684:	dec    edi
  412685:	jbe    0x41263b
  412687:	mov    ebp,0xa6fe77c1
  41268c:	xor    eax,DWORD PTR [ebx]
  41268e:	call   0xfeb93e84
  412693:	pusha  
  412694:	rcr    DWORD PTR [esi-0xa],cl
  412697:	mov    es,WORD PTR [eax]
	...
  4126bd:	add    BYTE PTR [eax],al
  4126bf:	add    cl,cl
  4126c1:	loopne 0x4126c2
  4126c3:	adc    BYTE PTR [esi+ecx*8+0x40],bl
  4126c7:	jmp    0x7f2ce495
  4126cc:	leave  
  4126cd:	ja     0x4126cd
  4126cf:	hlt    
  4126d0:	dec    esp
  4126d1:	popa   
  4126d2:	in     al,dx
  4126d3:	mov    ecx,0x648877c9
  4126d8:	pusha  
  4126d9:	jg     0x4126d9
  4126db:	push   esi
  4126dc:	div    BYTE PTR [esi+0x66]
  4126df:	movups xmm1,xmm2
  4126e2:	(bad)  
  4126e3:	dec    DWORD PTR [ebp+0xdf7eab1]
  4126e9:	mov    edi,ebp
  4126eb:	jne    0x41269b
  4126ed:	loop   0x4126bf
  4126ef:	push   eax
  4126f0:	ins    DWORD PTR es:[edi],dx
  4126f1:	mov    eax,DWORD PTR [edi-0x20cb97b]
  4126f7:	call   FWORD PTR [edi]
  4126f9:	adc    edx,0x4e8b3df7
  4126ff:	push   0x3f43d4
  412704:	dec    ebp
  412705:	mov    cl,0xea
  412707:	test   DWORD PTR [ebp+0x6e75fd88],0x6d50b0e2
  412711:	mov    BYTE PTR [ecx],cl
  412713:	rcl    BYTE PTR [esi],0x12
  412716:	cmp    DWORD PTR [ebp-0x20f4a],0x76
  41271d:	jg     0x41272d
  41271f:	inc    DWORD PTR [edx-0x68]
  412722:	and    eax,0x0
	...
  412749:	add    BYTE PTR [eax],al
  41274b:	add    BYTE PTR [ebp+0x7a50fd88],dl
  412751:	or     BYTE PTR [ebp-0x1],cl
  412754:	std    
  412755:	jecxz  0x412769
  412757:	or     esi,edx
  412759:	jo     0x41275f
  41275b:	push   eax
  41275c:	fidivr DWORD PTR [ebx+0x4b]
  41275f:	dec    ebp
  412761:	mov    edi,0x87c5e083
  412766:	std    
  412767:	adc    eax,0x6a000a32
  41276c:	and    ah,BYTE PTR [edx+0x43]
  41276f:	inc    edi
  412770:	arpl   WORD PTR ds:0xefceb5ff,cx
  412776:	std    
  412777:	jmp    FWORD PTR [ebp+0x7e]
  41277a:	or     ch,al
  41277c:	push   ds
  41277d:	pop    edx
  41277e:	std    
  41277f:	(bad)  
  412780:	jnp    0x412710
  412782:	(bad)  
  412784:	dec    ebx
  412785:	fild   WORD PTR [eax-0x1eb7b497]
  41278b:	inc    esi
  41278c:	mov    ah,BYTE PTR [eax+0x7f]
  41278f:	mov    ah,0xdf
  412791:	ds cmp esi,0xe80eb4c4
  412798:	sbb    dl,BYTE PTR [eax-0x1b3d0181]
  41279e:	push   ebx
  41279f:	imul   BYTE PTR [esi+edx*1+0x1683bc85]
  4127a6:	cmp    esi,0x9386574b
  4127ac:	dec    ebx
  4127ad:	pusha  
  4127ae:	add    ch,BYTE PTR [eax+0x0]
	...
  4127d5:	add    BYTE PTR [eax],al
  4127d7:	add    BYTE PTR [edi],bl
  4127d9:	scas   eax,DWORD PTR es:[edi]
  4127da:	sar    edi,0xd7
  4127dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127de:	jbe    0x41282f
  4127e0:	jl     0x41281e
  4127e2:	pop    esp
  4127e3:	div    BYTE PTR [esi+ebp*2+0x6a]
  4127e7:	imul   edi,ecx,0x56
  4127ea:	jg     0x4127f6
  4127ec:	mov    edx,ebx
  4127ee:	inc    DWORD PTR [edx+0x74025bde]
  4127f4:	fucom  st(2)
  4127f6:	mov    ebp,0x7fb654e3
  4127fb:	(bad)  
  4127fc:	mov    eax,0x33bc84cd
  412801:	mov    esp,0x164bfe7f
  412806:	call   0x6fa38372
  41280b:	mov    ebp,0xe80c1624
  412810:	cdq    
  412811:	sub    DWORD PTR [ecx+0x6b3614fe],eax
  412817:	test   BYTE PTR [esp+esi*8],0x7f
  41281b:	je     0x412870
  41281d:	mov    cl,BYTE PTR [eax+0x48]
  412820:	cld    
  412821:	jecxz  0x4128a2
  412823:	mov    ah,0xef
  412825:	or     DWORD PTR [esi-0x80],ebx
  412828:	in     eax,dx
  412829:	je     0x4127fe
  41282b:	or     esi,ebx
  41282d:	mov    cl,0x9f
  41282f:	sbb    ch,0x74
  412832:	shl    DWORD PTR [edi-0x2b],cl
  412835:	mov    esi,0x74cd7820
  41283a:	cmp    eax,0xf6
	...
  412863:	add    BYTE PTR [ecx+eiz*2-0x4f],cl
  412867:	retf   0x74bd
  41286a:	sub    eax,0x257c94b6
  41286f:	sub    BYTE PTR [ebp+0x5d6bf0fe],0xc2
  412876:	adc    eax,0x2cbe9d80
  41287b:	js     0x412812
  41287d:	je     0x412884
  41287f:	test   BYTE PTR [ecx+eiz*2+0x71],0xca
  412884:	test   DWORD PTR [ebp+esi*8-0x4b],esi
  412888:	mov    WORD PTR [ebp+ebp*8+0x7f],?
  41288c:	jne    0x41288c
  41288e:	lock imul ebp,edi,0xffffffc1
  412892:	fnstsw WORD PTR [edi+0x65]
  412895:	mov    esi,0x745d77b0
  41289a:	rol    BYTE PTR [edi+0x7fc57400],0x97
  4128a1:	popa   
  4128a2:	mov    ch,0x7f
  4128a4:	inc    ebp
  4128a5:	popa   
  4128a6:	xor    al,0xd0
  4128a8:	cmp    eax,0x10b9ad74
  4128ad:	jl     0x412854
  4128af:	jg     0x4128d5
  4128b1:	cli    
  4128b2:	sub    al,0x7f
  4128b4:	and    eax,0x15685b74
  4128b9:	je     0x412848
  4128bb:	ins    BYTE PTR es:[edi],dx
  4128bc:	scas   al,BYTE PTR es:[edi]
  4128bd:	lds    eax,FWORD PTR [ebp-0x6741f281]
  4128c3:	ja     0x4128ca
  4128c5:	je     0x4128c6
  4128c7:	add    BYTE PTR [eax],0x0
	...
  4128ee:	add    BYTE PTR [eax],al
  4128f0:	and    al,al
  4128f2:	(bad)  
  4128f3:	outs   dx,BYTE PTR ds:[esi]
  4128f4:	je     0x4128b3
  4128f6:	jmp    0x412956
  4128f8:	ins    BYTE PTR es:[edi],dx
  4128f9:	jae    0x4128f9
  4128fb:	aam    0x54
  4128fd:	je     0x412973
  4128ff:	loope  0x412971
  412901:	dec    esi
  412902:	cld    
  412903:	dec    esi
  412904:	push   esp
  412905:	jae    0x4128bb
  412907:	push   ebp
  412908:	push   esp
  412909:	jae    0x412909
  41290b:	push   ecx
  41290c:	test   ch,al
  41290e:	(bad)  
  41290f:	ss cmp al,0xcd
  412912:	test   DWORD PTR [eax+0x11],0x2c26fe75
  412919:	std    
  41291a:	sti    
  41291b:	adc    esi,edx
  41291d:	adc    eax,0x4a0fe900
  412922:	or     ebp,ecx
  412924:	jae    0x4129a4
  412926:	jmp    0x412992
  412928:	add    ebp,DWORD PTR [eax-0x74]
  41292b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41292c:	add    al,0xc4
  41292e:	fadd   QWORD PTR [di-0x38]
  412933:	sbb    BYTE PTR [esi],0xce
  412936:	inc    eax
  412937:	jmp    0xd14d2629
  41293c:	sub    eax,0x51d6fec4
  412941:	dec    ecx
  412942:	jae    0x412986
  412944:	jg     0x4128cc
  412946:	jl     0x41290d
  412948:	inc    esp
  412949:	(bad)  
  41294a:	pop    esi
  41294b:	mov    esi,0xb1448278
  412950:	(bad)  
  412951:	cmc    
  412952:	div    DWORD PTR [ebp+0x0]
	...
  41297c:	dec    edi
  41297d:	or     DWORD PTR [eax],eax
  41297f:	pop    ds
  412980:	inc    esp
  412981:	dec    edx
  412982:	inc    esp
  412983:	mov    eax,ds:0xe900099c
  412988:	mov    cl,0xc8
  41298a:	(bad)  
  41298b:	adc    al,0x97
  41298d:	jmp    0x8cfe:0x4c5d001e
  412994:	das    
  412995:	loope  0x4129e5
  412997:	call   0x413eaa
  41299c:	popa   
  41299d:	retf   0x6a0a
  4129a0:	loop   0x41293b
  4129a2:	inc    ebx
  4129a3:	in     al,0xa2
  4129a5:	pop    esi
  4129a6:	aam    0x46
  4129a8:	mov    bl,0x6
  4129aa:	push   DWORD PTR [ebp-0xa]
  4129ad:	(bad)  
  4129af:	dec    esi
  4129b0:	test   ebx,esi
  4129b2:	or     eax,eax
  4129b4:	(bad)  
  4129b5:	sbb    dl,BYTE PTR [eax+0x68]
  4129b8:	mov    bl,0x6
  4129ba:	out    dx,eax
  4129bb:	mov    esi,0x873f3d2
  4129c0:	pop    edx
  4129c1:	test   eax,0xde45ff6b
  4129c6:	lods   al,BYTE PTR ds:[esi]
  4129c7:	dec    ebx
  4129c8:	xor    eax,0x3a4dfdf3
  4129cd:	xchg   DWORD PTR [ebx-0x8],edi
  4129d0:	mov    ds:0x12e8b671,al
  4129d5:	aas    
  4129d6:	std    
  4129d7:	jmp    FWORD PTR [ebx]
  4129d9:	enter  0x6,0xdf
  4129dd:	jg     0x4129c9
  4129df:	add    DWORD PTR [eax],0x0
	...
  412a06:	add    BYTE PTR [eax],al
  412a08:	sahf   
  412a09:	mov    DWORD PTR [eax+0x0],ebp
  412a0c:	clc    
  412a0d:	dec    ebx
  412a0e:	std    
  412a0f:	jne    0x412a7b
  412a11:	faddp  st(0),st
  412a13:	dec    eax
  412a14:	test   esp,esi
  412a16:	xchg   DWORD PTR [ebp-0x7a],eax
  412a19:	gs repnz inc esi
  412a1c:	jae    0x412a2b
  412a1e:	push   DWORD PTR ds:0x411e70
  412a24:	in     eax,0x79
  412a26:	push   es
  412a27:	call   0x3eb2fe
  412a2c:	cmp    dh,cl
  412a2e:	inc    esp
  412a2f:	inc    ecx
  412a30:	dec    ebx
  412a31:	pusha  
  412a32:	jmp    0x96fe:0x82604b01
  412a39:	js     0x412aa5
  412a3b:	fld    QWORD PTR [edi]
  412a3d:	repz jl 0x412a3e
  412a40:	ss push ds
  412a42:	sub    eax,DWORD PTR [ecx+0x4b]
  412a45:	jecxz  0x412a3d
  412a47:	pop    es
  412a48:	jecxz  0x412a62
  412a4a:	jge    0x412a4a
  412a4c:	in     al,0x57
  412a4e:	add    BYTE PTR [eax],al
  412a50:	dec    ebx
  412a51:	loopne 0x412acf
  412a53:	je     0x412a98
  412a55:	enter  0xff1f,0xcc
  412a59:	retf   0x747c
  412a5c:	(bad)  
  412a5d:	xor    dh,bh
  412a5f:	pop    es
  412a60:	mov    bl,0xf5
  412a62:	retf   
  412a63:	(bad)  
  412a64:	mov    ah,0x28
  412a66:	inc    edx
  412a67:	add    ecx,DWORD PTR [ebx-0x4b]
  412a6a:	xchg   ebx,ebp
	...
  412a94:	enter  0x602b,0x55
  412a98:	hlt    
  412a99:	test   DWORD PTR [edx],eax
  412a9b:	push   0x3
  412a9d:	add    esi,edi
  412a9f:	pop    es
  412aa0:	mov    ds:0x84fecaab,eax
  412aa5:	clc    
  412aa6:	(bad)  
  412aa7:	sti    
  412aa8:	enter  0x6abc,0x2d
  412aac:	or     ah,BYTE PTR [eax+0x2]
  412aaf:	vmptrst QWORD PTR [ecx+eax*1+0x3ddf4b00]
  412ab7:	in     al,dx
  412ab8:	sub    eax,0x44000421
  412abd:	in     al,dx
  412abe:	inc    edx
  412abf:	add    BYTE PTR [ebx+0x60],cl
  412ac2:	jg     0x412b00
  412ac4:	aas    
  412ac5:	add    ebx,eax
  412ac7:	(bad)  
  412ac8:	cmp    al,0x68
  412aca:	xchg   BYTE PTR [edx-0x7cfd9db6],dh
  412ad0:	outs   dx,BYTE PTR ds:[esi]
  412ad1:	or     DWORD PTR [ecx+0x2d],esp
  412ad4:	mov    cl,BYTE PTR [ecx]
  412ad6:	jmp    0xe7e8f1e7
  412adb:	add    ecx,DWORD PTR [ebx-0x74]
  412ade:	retf   
  412adf:	mov    edi,0x3e8ca5e
  412ae4:	push   esp
  412ae5:	test   DWORD PTR [edi+0x2],ebx
  412ae8:	dec    ebx
  412ae9:	or     DWORD PTR [edx+0x3e],ebp
  412aec:	or     esp,DWORD PTR [eax]
  412aee:	sub    BYTE PTR [ebx+ecx*2],al
  412af1:	add    BYTE PTR [ebp-0x71],ch
  412af4:	dec    ebx
  412af5:	or     ecx,ebp
  412af7:	add    BYTE PTR [eax],0x0
	...
  412b1e:	add    BYTE PTR [eax],al
  412b20:	pop    ds
  412b21:	inc    ebp
  412b22:	push   es
  412b23:	ret    
  412b24:	aam    0x70
  412b26:	fld    QWORD PTR [edi+0x3e90a4d]
  412b2c:	enter  0x392e,0x2d
  412b30:	or     cl,BYTE PTR [ecx]
  412b32:	jmp    0xe83cfa43
  412b37:	add    ecx,DWORD PTR [ebx-0x1f]
  412b3a:	ins    BYTE PTR es:[edi],dx
  412b3b:	les    ecx,FWORD PTR [ebx]
  412b3d:	or     DWORD PTR [ebx+0x1169c03],edx
  412b43:	sub    eax,0xc660090a
  412b48:	xchg   esp,eax
  412b49:	mov    WORD PTR [ebx+0x64ff847b],es
  412b4f:	fisttp DWORD PTR [ebx+0x9]
  412b52:	jmp    0xee18a87f
  412b57:	cmc    
  412b58:	je     0x412bca
  412b5a:	sti    
  412b5b:	addr16 ss retf 0x8ee8
  412b60:	ins    BYTE PTR es:[edi],dx
  412b61:	add    al,0xdf
  412b63:	icebp  
  412b64:	dec    edi
  412b65:	bound  edx,QWORD PTR [esi]
  412b67:	add    eax,0xd272094b
  412b6c:	push   eax
  412b6d:	test   BYTE PTR [edx],dh
  412b6f:	in     al,dx
  412b70:	shl    edx,1
  412b72:	inc    DWORD PTR [esi+eax*8-0x44]
  412b76:	repz loop 0x412b2a
  412b79:	inc    DWORD PTR [ebx+0x94e04]
  412b7f:	nop
  412b80:	push   ecx
  412b81:	or     al,BYTE PTR [eax]
  412b83:	jmp    0x412b88
	...
  412bac:	and    BYTE PTR [edi+0x70472846],al
  412bb2:	ss xchg ecx,eax
  412bb4:	cs or  eax,0x494de900
  412bba:	push   cs
  412bbb:	ins    BYTE PTR es:[edi],dx
  412bbc:	jnp    0x412c2e
  412bbe:	(bad)  
  412bbf:	jmp    0xe9491a89
  412bc4:	push   ecx
  412bc5:	test   ecx,ebp
  412bc7:	jmp    0xdf403514
  412bcc:	inc    eax
  412bcd:	popa   
  412bce:	pop    edi
  412bcf:	mov    ds:0xac886f51,eax
  412bd4:	cmp    BYTE PTR [edi+0x76],ch
  412bd7:	icebp  
  412bd8:	inc    ecx
  412bd9:	cmc    
  412bda:	out    dx,eax
  412bdb:	ss mov eax,0x7d67e803
  412be1:	outs   dx,BYTE PTR ds:[esi]
  412be2:	(bad)  
  412be3:	xchg   ecx,eax
  412be4:	mov    edi,0x21e940c6
  412be9:	cmc    
  412bea:	out    dx,eax
  412beb:	add    DWORD PTR [esi],esp
  412bed:	adc    eax,DWORD PTR [eax]
  412bef:	jmp    0x6c4f7531
  412bf4:	mov    ebx,0x6ee9fe6f
  412bf9:	outs   dx,DWORD PTR ds:[esi]
  412bfa:	mov    ebp,DWORD PTR [eax+eiz*8-0x1b5b7341]
  412c01:	mov    edi,0x6f76e969
  412c06:	push   esp
  412c07:	fidivr WORD PTR [ebx]
  412c09:	jne    0x412c38
  412c0b:	sub    BYTE PTR [edi+0x4],cl
  412c0e:	rcr    dh,0x0
	...
  412c35:	add    BYTE PTR [eax],al
  412c37:	add    ah,cl
  412c39:	xchg   esi,eax
  412c3a:	(bad)  
  412c3b:	push   DWORD PTR [edx]
  412c3d:	or     ecx,DWORD PTR [ebp-0x2a4f9bb]
  412c43:	jne    0x412c4f
  412c45:	hlt    
  412c46:	jae    0x412c34
  412c48:	fstp   QWORD PTR [ecx]
  412c4a:	mov    eax,0xb05732e
  412c4f:	shl    BYTE PTR [esi],0x6d
  412c52:	mov    eax,DWORD PTR [ebp-0x3e]
  412c55:	pop    edx
  412c56:	push   0x6a054800
  412c5b:	pop    es
  412c5c:	pop    eax
  412c5d:	add    eax,0xf3c675ff
  412c62:	adc    edi,DWORD PTR [esp+ecx*1-0x5df501ba]
  412c69:	pop    esi
  412c6a:	push   esp
  412c6b:	inc    DWORD PTR [edi]
  412c6d:	jmp    0x412c55
  412c6f:	call   0x8a3f200f
  412c74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c75:	(bad)  
  412c76:	mov    eax,DWORD PTR [ebp-0x7e]
  412c79:	pop    edx
  412c7a:	std    
  412c7b:	jne    0x412ceb
  412c7d:	pop    esp
  412c7e:	(bad)  
  412c7f:	imul   esp,DWORD PTR [ebp-0x80101a4],0x1e15fdce
  412c89:	and    BYTE PTR [ecx+0x0],al
  412c8c:	cdq    
  412c8d:	retf   0x2972
  412c90:	mov    edx,0xfcef000a
  412c95:	bnd jae 0x412ca0
  412c98:	dec    edx
  412c99:	cmp    al,BYTE PTR [esi-0x1]
	...
  412cc4:	dec    ebp
  412cc5:	repz je 0x412cd0
  412cc8:	jge    0x412d43
  412cca:	add    bh,bh
  412ccc:	test   DWORD PTR [ecx],0xf3a458e8
  412cd2:	std    
  412cd3:	inc    DWORD PTR [edi]
  412cd5:	in     eax,0xfd
  412cd7:	jne    0x412c77
  412cd9:	lock jae 0x412ce4
  412cdc:	dec    ebx
  412cdd:	dec    eax
  412cde:	int    0x45
  412ce0:	dec    esp
  412ce1:	aas    
  412ce2:	js     0x412d58
  412ce4:	daa    
  412ce5:	pop    eax
  412ce6:	test   BYTE PTR [eax+0x3c],cl
  412ce9:	scas   eax,DWORD PTR es:[edi]
  412cea:	js     0x412d60
  412cec:	das    
  412ced:	mov    bh,0xe
  412cef:	rcr    BYTE PTR [ebp+0x21],0x4
  412cf3:	push   0x4b
  412cf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cf6:	out    dx,al
  412cf7:	jmp    0x412d15
  412cf9:	jne    0x412d39
  412cfb:	sub    eax,0x7477608a
  412d00:	sbb    ecx,DWORD PTR [eax-0x78fbb720]
  412d06:	test   dh,al
  412d08:	pop    ebx
  412d09:	out    dx,eax
  412d0a:	(bad)  
  412d0b:	repz enter 0x6e74,0xff
  412d10:	cmp    eax,0xe4fd6be5
  412d15:	out    0x6a,al
  412d17:	mov    ah,0xdd
  412d19:	into   
  412d1a:	js     0x412d85
  412d1c:	dec    ebx
  412d1d:	xlat   BYTE PTR ds:[ebx]
  412d1e:	out    dx,al
  412d1f:	test   esp,0xa2d7274
  412d25:	pusha  
  412d26:	ja     0x412d9c
	...
  412d50:	mov    edi,0xa307ef2e
  412d55:	stc    
  412d56:	sar    esi,0xac
  412d59:	jle    0x412d33
  412d5b:	enter  0x5b89,0x2
  412d5f:	push   ebp
  412d60:	sar    bl,1
  412d62:	add    bl,0x77
  412d65:	push   cs
  412d66:	jns    0x412d66
  412d68:	mov    esi,0x844f76a4
  412d6d:	in     al,dx
  412d6e:	push   es
  412d6f:	push   DWORD PTR [esi]
  412d71:	mov    ds:0x84b4129,al
  412d76:	std    
  412d77:	sbb    cl,BYTE PTR [ebx+0x60]
  412d7a:	or     eax,eax
  412d7c:	push   esp
  412d7d:	or     DWORD PTR [eax+ebp*4+0x4b],ebp
  412d81:	or     ecx,ebp
  412d83:	inc    eax
  412d84:	(bad)  
  412d86:	call   0xa64a788e
  412d8b:	mov    esi,0x3ed6d38
  412d90:	dec    ebx
  412d91:	fucomip st,st(0)
  412d93:	in     eax,dx
  412d94:	xor    al,0xe3
  412d96:	call   0x23bf5a88
  412d9b:	jo     0x412d31
  412d9d:	jle    0x412e0a
  412d9f:	outs   dx,DWORD PTR ds:[esi]
  412da0:	adc    eax,0x15d39d6d
  412da5:	not    DWORD PTR [eax-0x7f926888]
  412dab:	(bad)  
  412dac:	popa   
  412dad:	or     ecx,ebp
  412daf:	or     al,0xb
  412db1:	mul    bl
  412db3:	push   0x0
	...
  412dd9:	add    BYTE PTR [eax],al
  412ddb:	add    BYTE PTR [edx+0xa],bh
  412dde:	jmp    0xc0f990e6
  412de3:	ret    0x6be4
  412de6:	fild   DWORD PTR [edi]
  412de8:	repz stc 
  412dea:	lods   al,BYTE PTR ds:[esi]
  412deb:	js     0x412dc2
  412ded:	fldenv [ecx+0x53]
  412df0:	mov    edi,0xc5705486
  412df5:	ins    BYTE PTR es:[edi],dx
  412df6:	cwde   
  412df7:	aad    0xa4
  412df9:	jmp    0x82f6a6aa
  412dfe:	imul   edx,DWORD PTR [edi-0x4b],0x6c
  412e02:	sub    eax,0x25c1de6b
  412e07:	js     0x412e3b
  412e09:	or     DWORD PTR [ecx-0x1735f24a],edx
  412e0f:	js     0x412de8
  412e11:	dec    ebp
  412e12:	adc    eax,0xbb6c8578
  412e17:	lds    esi,FWORD PTR [ebx]
  412e19:	retf   0x6be8
  412e1c:	mov    esi,0xf4f5ffc0
  412e21:	add    BYTE PTR [ecx+edi*8+0x53fe6af4],0x47
  412e29:	loope  0x412dec
  412e2b:	mov    gs,WORD PTR es:[ebp+edi*8-0x64]
  412e30:	repz jb 0x412e31
  412e33:	into   
  412e34:	mov    esp,0x6104235
  412e39:	ins    BYTE PTR es:[edi],dx
  412e3a:	out    0x61,al
  412e3c:	add    BYTE PTR [ebx-0x2],ch
  412e3f:	pusha  
	...
  412e68:	retf   0xf65f
  412e6b:	scas   al,BYTE PTR es:[edi]
  412e6c:	pushf  
  412e6d:	loop   0x412e6e
  412e6f:	adc    BYTE PTR [ebx+eax*8+0x40],bl
  412e73:	jmp    0x9f1ce415
  412e78:	xchg   esp,eax
  412e79:	imul   edi,esi,0xffffffd4
  412e7c:	or     ah,BYTE PTR [ecx]
  412e7e:	inc    ecx
  412e7f:	jmp    0x7e8c20f4
  412e84:	jl     0x412e07
  412e86:	test   BYTE PTR [ecx+0x3fe6b5c],al
  412e8c:	dec    edi
  412e8d:	loope  0x412e5a
  412e8f:	scas   al,BYTE PTR es:[edi]
  412e90:	pop    es
  412e91:	ins    BYTE PTR es:[edi],dx
  412e92:	std    
  412e93:	xchg   esp,eax
  412e94:	jae    0x412f09
  412e96:	(bad)  
  412e97:	push   esi
  412e98:	push   esp
  412e99:	xor    eax,0x6b8e0042
  412e9e:	out    0xa5,al
  412ea0:	xchg   ecx,eax
  412ea1:	push   0xfffffffe
  412ea3:	jo     0x412e6f
  412ea5:	div    BYTE PTR ds:0xe234
  412eaa:	inc    eax
  412eac:	inc    edx
  412eae:	inc    eax
  412eaf:	jmp    0x171ce3c9
  412eb4:	sbb    al,0x6b
  412eb6:	(bad)  
  412eb7:	fmul   QWORD PTR [edx-0xf16bee0]
  412ebd:	sub    eax,0xf445004b
  412ec2:	xchg   DWORD PTR [ebp-0x223be],eax
  412ec8:	loope  0x412e7b
  412eca:	jmp    0x0:0xf7
	...
  412ef1:	add    BYTE PTR [eax],al
  412ef3:	add    BYTE PTR [ebp-0xe],dh
  412ef6:	(bad)  
  412ef7:	jae    0x412f1a
  412ef9:	pop    ebp
  412efa:	(bad)  
  412efb:	inc    DWORD PTR [ebp+0x6a75fdb5]
  412f01:	fist   WORD PTR [ecx-0x20beabc]
  412f07:	mov    ch,0x2
  412f09:	fdiv   st(5),st
  412f0b:	push   ebp
  412f0d:	jns    0x412f15
  412f0f:	call   0x3eda11
  412f14:	cmc    
  412f15:	mov    ecx,0xf3e5f7ea
  412f1a:	std    
  412f1b:	jne    0x412f37
  412f1d:	(bad)  
  412f1f:	inc    esp
  412f20:	mov    ch,0xf3
  412f22:	std    
  412f23:	mov    ch,0xca
  412f25:	(bad)  
  412f27:	inc    ebp
  412f29:	jns    0x412f31
  412f2b:	call   0x3ed9e9
  412f30:	jne    0x412eeb
  412f32:	loop   0x412f2b
  412f34:	jne    0x412f29
  412f36:	std    
  412f37:	jne    0x412f13
  412f39:	fidivr WORD PTR [ebx-0x20c8abc]
  412f3f:	mov    ch,0x82
  412f41:	(bad)  
  412f43:	call   DWORD PTR ds:0xd5e80679
  412f49:	stos   BYTE PTR es:[edi],al
  412f4a:	std    
  412f4b:	push   DWORD PTR [ebp-0x47]
  412f4e:	(bad)  
  412f50:	jne    0x412f45
  412f52:	std    
  412f53:	jne    0x412eff
  412f55:	fidivr WORD PTR [esi-0x2]
	...
  412f80:	gs repz std 
  412f83:	mov    ch,0x56
  412f85:	(bad)  
  412f87:	dec    DWORD PTR [ebx+0x8]
  412f8a:	stos   BYTE PTR es:[edi],al
  412f8b:	inc    esi
  412f8c:	test   bl,bh
  412f8e:	jne    0x412f44
  412f90:	jnp    0x412ffd
  412f92:	je     0x412f92
  412f94:	arpl   ax,ax
  412f96:	mov    ebp,0xae736cfe
  412f9b:	jmp    0x412ff9
  412f9d:	pop    ebx
  412f9e:	je     0x412f87
  412fa0:	mov    dh,0x1b
  412fa2:	jne    0x412fa2
  412fa4:	push   esp
  412fa5:	xchg   ebp,eax
  412fa6:	imul   esi,esi,0x4c
  412fa9:	push   ebx
  412faa:	imul   ecx,DWORD PTR [ecx-0x18bc474],0xfffffff6
  412fb1:	cmp    ebp,DWORD PTR [esi+edi*8+0x34]
  412fb5:	pop    eax
  412fb6:	hlt    
  412fb7:	inc    esi
  412fb8:	sub    al,0xb3
  412fba:	je     0x412f70
  412fbc:	sub    esi,DWORD PTR [ebx+0xc33fe74]
  412fc2:	mov    ebp,0xbe8b14fe
  412fc7:	mul    DWORD PTR [edx]
  412fc9:	add    BYTE PTR [esi-0x2],dh
  412fcc:	add    al,0x7b
  412fce:	out    dx,al
  412fcf:	sti    
  412fd0:	repz rcr DWORD PTR [edx],0x0
  412fd4:	dec    ebx
  412fd5:	mov    ecx,0xd4b0741
  412fda:	mov    ebx,ebp
  412fdc:	enter  0x77a3,0x69
  412fe0:	dec    ebx
  412fe1:	push   esi
  412fe2:	leave  
  412fe3:	inc    BYTE PTR [eax]
	...
  413009:	add    BYTE PTR [eax],al
  41300b:	add    BYTE PTR [esi+0x78],bl
  41300e:	push   0xffffff85
  413010:	xchg   ebx,edx
  413012:	je     0x412f9c
  413014:	push   cs
  413015:	mov    esp,0xa1049deb
  41301a:	add    bh,bh
  41301c:	ds js  0x413089
  41301f:	pop    es
  413020:	lods   eax,DWORD PTR ds:[esi]
  413021:	xor    dh,BYTE PTR [ebp-0x2]
  413024:	push   ds
  413025:	sbb    al,0x75
  413027:	je     0x41307c
  413029:	or     DWORD PTR [ecx],edx
  41302b:	mov    bl,0x8
  41302d:	push   0x1d
  41302f:	dec    ebx
  413030:	mov    al,BYTE PTR [ecx+ebp*8]
  413033:	into   
  413034:	rcr    DWORD PTR [ecx+ebp*2+0x40],1
  413038:	js     0x4130a3
  41303a:	jnp    0x413043
  41303c:	arpl   WORD PTR [ebx],sp
  41303e:	loope  0x413043
  413040:	dec    ebx
  413041:	(bad)  
  413042:	sub    bh,ch
  413044:	dec    eax
  413045:	inc    eax
  413046:	sub    cl,BYTE PTR [eax]
  413048:	dec    ebx
  413049:	push   0x5b
  41304b:	adc    al,0x63
  41304d:	adc    eax,DWORD PTR [ecx]
  41304f:	add    al,0x4b
  413051:	(bad)  
  413052:	test   al,0xee
  413054:	dec    eax
  413055:	push   edx
  413056:	stos   BYTE PTR es:[edi],al
  413057:	pop    es
  413058:	dec    ebx
  413059:	xchg   edx,eax
  41305a:	sub    edi,DWORD PTR [ebp+esi*1-0x21]
  41305e:	shr    BYTE PTR [ebx+0x57],0xd0
  413062:	mov    ch,0x74
  413064:	ror    esi,cl
  413066:	lods   al,BYTE PTR ds:[esi]
  413067:	je     0x413000
  413069:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41306b:	out    dx,al
  41306c:	sbb    al,0x69
  41306e:	adc    edx,DWORD PTR [eax+eax*1]
	...
  413095:	add    BYTE PTR [eax],al
  413097:	add    BYTE PTR [ebx],ah
  413099:	pop    eax
  41309a:	cmp    dh,BYTE PTR [ebp+0x5]
  41309d:	adc    eax,0x9241efa9
  4130a2:	sub    esi,DWORD PTR [eax+0x62]
  4130a5:	or     DWORD PTR [esi+edi*4-0x8],ebp
  4130a9:	mov    ecx,0x71e0ee75
  4130ae:	mov    edx,0xf168dde7
  4130b3:	inc    ebx
  4130b4:	pop    eax
  4130b5:	das    
  4130b6:	rol    DWORD PTR [ebx],1
  4130b8:	cmp    edi,DWORD PTR [eax-0x6a]
  4130bb:	je     0x4130fc
  4130bd:	adc    DWORD PTR [ecx-0x2d],eax
  4130c0:	or     DWORD PTR [eax+0x45],ebp
  4130c3:	je     0x413104
  4130c5:	adc    eax,0x7144ee3e
  4130ca:	dec    DWORD PTR [ebp+0x2efe678b]
  4130d0:	lods   eax,DWORD PTR ds:[esi]
  4130d1:	pop    esp
  4130d2:	(bad)  
  4130d3:	pushf  
  4130d4:	sbb    al,0x67
  4130d6:	je     0x4130c9
  4130d8:	and    ch,dh
  4130da:	inc    edx
  4130db:	push   ss
  4130dc:	jmp    DWORD PTR [esi+0x74]
  4130df:	or     eax,0x645adf0
  4130e4:	call   DWORD PTR [eax-0x3f]
  4130e7:	in     eax,dx
  4130e8:	dec    eax
  4130e9:	mov    esi,0x4ccb058a
  4130ee:	rcl    DWORD PTR [edi-0x2ef42329],cl
  4130f4:	pusha  
  4130f5:	sar    esi,cl
  4130f7:	fimul  WORD PTR [eax+ebp*4+0x74]
  4130fb:	in     al,dx
	...
  413124:	sbb    dl,BYTE PTR [ecx-0x3f]
  413127:	fisttp QWORD PTR [eax-0x6a]
  41312a:	inc    esp
  41312b:	mov    ecx,0xed74671f
  413130:	nop
  413131:	add    DWORD PTR [esi+esi*4-0x68],ecx
  413135:	adc    eax,eax
  413137:	faddp  st(4),st
  413139:	inc    edi
  41313a:	(bad)  
  41313b:	call   0x9db59988
  413140:	outs   dx,DWORD PTR ds:[esi]
  413141:	lea    eax,[ebp-0x6a]
  413144:	js     0x4130d7
  413146:	inc    esp
  413147:	jge    0x4131c1
  413149:	(bad)  
  41314b:	xchg   dl,dh
  41314d:	jae    0x41314d
  41314f:	hlt    
  413150:	pusha  
  413151:	jo     0x4130fd
  413153:	das    
  413154:	pop    eax
  413155:	addr16 mov dh,ah
  413158:	jl     0x4131cb
  41315a:	mov    ds:0x680948e9,al
  41315f:	pusha  
  413160:	add    cl,cl
  413162:	(bad)  
  413163:	mov    esi,0xe9176020
  413168:	dec    eax
  413169:	adc    al,0xc0
  41316b:	add    bh,dh
  41316d:	adc    cl,ch
  41316f:	cwde   
  413170:	mov    ds:0x628b000b,al
  413175:	inc    ebp
  413176:	test   DWORD PTR [edi-0xd],0x9539e80b
  41317d:	or     eax,DWORD PTR [eax]
  41317f:	add    esi,DWORD PTR [edx]
  413181:	out    0x73,al
  413183:	call   0x41879652
	...
  4131b0:	jb     0x4131f3
  4131b2:	out    0xd3,al
  4131b4:	push   0xb
  4131b6:	add    BYTE PTR [ebx],cl
  4131b8:	and    ah,BYTE PTR [edx+0x0]
  4131bb:	jmp    0x4131a1
  4131bd:	in     eax,0xe
  4131bf:	mov    BYTE PTR [edi-0x79ba7812],dh
  4131c5:	inc    ebx
  4131c6:	or     DWORD PTR [eax+0x23],ecx
  4131c9:	or     eax,0x12d8e856
  4131ce:	add    BYTE PTR [eax],al
  4131d0:	sub    ebx,ecx
  4131d2:	jae    0x4131d6
  4131d4:	sbb    DWORD PTR [edx],edi
  4131d6:	mov    eax,esi
  4131d8:	call   0xfcc3:0x32414666
  4131df:	push   ss
  4131e0:	xor    cl,BYTE PTR [ebx]
  4131e2:	add    esi,eax
  4131e4:	fwait
  4131e5:	popa   
  4131e6:	fisubr DWORD PTR [eax+0x1b]
  4131e9:	mov    ds:0xc544003f,eax
  4131ee:	xchg   esi,eax
  4131ef:	sbb    dl,dh
  4131f1:	or     cl,BYTE PTR [ebx]
  4131f3:	shl    bh,0xc
  4131f6:	jmp    0x413233
  4131f8:	js     0x4131f4
  4131fa:	xchg   DWORD PTR [ebp-0x3b],edx
  4131fd:	in     eax,0x43
  4131ff:	fsubr  DWORD PTR [ecx+0x51]
  413202:	loop   0x4131ca
  413204:	loop   0x413210
  413206:	mov    eax,DWORD PTR [ebp-0x76]
  413209:	sar    dh,1
  41320b:	dec    DWORD PTR [ebx-0x41]
  41320e:	neg    ebx
  413210:	mov    esp,0xfe5a3d
	...
  413239:	add    BYTE PTR [eax],al
  41323b:	add    BYTE PTR [esi],bh
  41323d:	pop    eax
  41323e:	pop    edx
  41323f:	xchg   edx,eax
  413240:	lods   eax,DWORD PTR ds:[esi]
  413241:	daa    
  413242:	jb     0x4131cd
  413244:	(bad)  
  413245:	sar    BYTE PTR [ebp+0x44],cl
  413248:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413249:	call   0x273fbc60
  41324e:	jle    0x413294
  413250:	jae    0x41322a
  413252:	adc    al,BYTE PTR [eax-0x7afe8fbb]
  413258:	pop    ss
  413259:	pop    ss
  41325a:	jb     0x41325a
  41325c:	je     0x413243
  41325e:	pop    esi
  41325f:	out    0xaa,eax
  413261:	lods   eax,DWORD PTR ds:[esi]
  413262:	jno    0x413262
  413264:	(bad)  
  413265:	mov    ch,0x72
  413267:	dec    edi
  413268:	jae    0x413299
  41326a:	mov    esi,0x33b54fe
  41326f:	pop    esi
  413270:	xor    BYTE PTR [edx-0x14610001],0x5f
  413277:	(bad)  
  413278:	mov    dh,0x44
  41327a:	pop    edx
  41327b:	aam    0x82
  41327d:	dec    edi
  41327e:	jo     0x41328a
  413280:	or     ebx,DWORD PTR [ebx+ebx*1]
  413283:	push   0xffc33707
  413288:	mov    WORD PTR [eax-0x23],cs
  41328b:	dec    eax
  41328c:	adc    al,0xaf
  41328e:	shl    DWORD PTR [edi+0x3d],cl
  413291:	mov    ds:0x706cffc3,al
  413296:	add    ch,bh
  413298:	mov    ebp,0x8a465f07
  41329d:	jo     0x413271
  41329f:	inc    BYTE PTR [eax]
	...
  4132c5:	add    BYTE PTR [eax],al
  4132c7:	add    BYTE PTR [esi+0x58],dh
  4132ca:	pop    edx
  4132cb:	xor    DWORD PTR [ebx-0x21],0x2d82e770
  4132d2:	jno    0x4132d2
  4132d4:	add    cl,BYTE PTR [ecx]
  4132d6:	sub    edi,esp
  4132d8:	int3   
  4132d9:	mov    esp,0x4cc96071
  4132de:	push   esp
  4132df:	fidivr WORD PTR [edi+ebp*8+0x113f70a2]
  4132e6:	push   ecx
  4132e7:	in     eax,dx
  4132e8:	or     ah,BYTE PTR [esi+0x3d]
  4132eb:	jnp    0x4132fc
  4132ed:	gs ret 0x9c0d
  4132f1:	fneni(8087 only) 
  4132f3:	pop    ebx
  4132f4:	out    dx,eax
  4132f5:	gs and eax,0x1e2a2271
  4132fb:	test   DWORD PTR [ecx+esi*2+0x71],0x82657d71
  413303:	pcmpeqb mm3,mm3
  413306:	lock pop ebx
  413308:	(bad)  [ebp-0x3]
  41330b:	jo     0x4132f9
  41330d:	or     cl,ch
  41330f:	pusha  
  413310:	sahf   
  413311:	lock add eax,0x51090bc9
  413317:	push   eax
  413318:	add    eax,0xbf70e8c8
  41331d:	adc    ecx,eax
  41331f:	es mov cl,0x64
  413322:	int    0x70
  413324:	mov    edi,0x44f6c565
  413329:	jno    0x413369
  41332b:	mov    BYTE PTR [eax],0x0
	...
  413352:	add    BYTE PTR [eax],al
  413354:	and    eax,0x48459f65
  413359:	or     DWORD PTR [edi*2+0x4bac8b20],edx
  413360:	adc    eax,0x8f7e9d65
  413365:	cmp    BYTE PTR gs:[ecx+0x77],dh
  413369:	adc    eax,0x714cf68e
  41336e:	sub    al,0x19
  413370:	dec    ebx
  413371:	or     edx,esi
  413373:	inc    ebx
  413374:	push   ebp
  413375:	mov    ?,edi
  413377:	test   al,0x49
  413379:	or     DWORD PTR [eax],eax
  41337b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41337c:	or     eax,0x48e8ff5d
  413381:	or     edi,eax
  413383:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413384:	cmp    al,0x63
  413386:	push   es
  413387:	jmp    0xc34122d4
  41338c:	dec    eax
  41338d:	out    dx,eax
  41338e:	call   edx
  413390:	dec    eax
  413391:	xchg   esi,eax
  413392:	inc    esp
  413393:	xor    eax,0x3d849578
  413398:	and    esp,DWORD PTR [ebx-0x2]
  41339b:	cdq    
  41339c:	sbb    ebx,ebp
  41339e:	mul    DWORD PTR [esi]
  4133a0:	xchg   ebp,eax
  4133a1:	pusha  
  4133a2:	out    0xf7,eax
  4133a4:	arpl   WORD PTR [ecx],cx
  4133a6:	add    dl,ah
  4133a8:	or     al,bl
  4133aa:	add    al,0x0
  4133ac:	iret   
  4133ad:	or     DWORD PTR [eax],eax
  4133af:	jmp    0xa868cb44
  4133b4:	dec    eax
  4133b5:	fs je  0x41339d
	...
  4133e0:	add    BYTE PTR [ecx],ah
  4133e2:	dec    eax
  4133e3:	out    dx,al
  4133e4:	in     al,0xd3
  4133e6:	mov    bh,BYTE PTR [ecx-0x290c7236]
  4133ec:	mov    ah,0x63
  4133ee:	dec    edi
  4133ef:	cmp    ebx,DWORD PTR [edi-0x5b31b7cf]
  4133f5:	xchg   ecx,eax
  4133f6:	test   BYTE PTR [ecx-0x2e019c4c],ah
  4133fc:	xor    al,0xc8
  4133fe:	(bad)  
  4133ff:	mov    dh,0x1
  413401:	fs data16 not al
  413405:	enter  0xa5ff,0xd2
  413409:	cmp    esi,esi
  41340b:	sahf   
  41340c:	je     0x413471
  41340e:	je     0x4133f1
  413410:	mov    al,ds:0x648e468a
  413415:	xchg   ecx,eax
  413416:	test   BYTE PTR [eax],al
  413418:	jb     0x4133f6
  41341a:	std    
  41341b:	(bad)  
  41341c:	cmp    BYTE PTR ds:0x4e2a4068,cl
  413422:	(bad)  
  413423:	(bad)  
  413424:	pop    ds
  413425:	aad    0xf5
  413427:	jmp    DWORD PTR [ebp-0xc]
  41342a:	jae    0x413434
  41342c:	sbb    ch,BYTE PTR [ebp+eax*2-0x1]
  413430:	adc    eax,0x1dec83e6
  413435:	hlt    
  413436:	std    
  413437:	push   0xffffffa2
  413439:	aas    
  41343a:	inc    edi
  41343b:	dec    eax
  41343c:	repz pop es
  41343e:	push   DWORD PTR [ebp-0x223c6]
	...
  41346c:	bound  eax,QWORD PTR gs:[esi]
  41346f:	call   0x3e7f4a
  413474:	sti    
  413475:	xchg   ecx,eax
  413476:	out    0xf7,al
  413478:	push   ebp
  413479:	hlt    
  41347a:	mov    eax,DWORD PTR [ebp-0x223da]
  413480:	sar    BYTE PTR [edi],cl
  413482:	push   eax
  413483:	dec    eax
  413484:	mov    bl,0x7
  413486:	push   DWORD PTR [ebp-0x223c6]
  41348c:	gs pusha 
  41348e:	push   es
  41348f:	call   0x3e80ca
  413494:	mov    ebx,0x15f7e291
  413499:	hlt    
  41349a:	push   0x46388a00
  41349f:	inc    ecx
  4134a0:	and    dh,ah
  4134a2:	mov    bl,0xd8
  4134a4:	(bad)  
  4134a6:	std    
  4134a7:	call   FWORD PTR [edi+0x65]
  4134aa:	out    0x11,al
  4134ac:	ins    DWORD PTR es:[edi],dx
  4134ad:	repnz std 
  4134af:	mov    DWORD PTR [edi-0x1a000a1a],ebx
  4134b5:	xchg   DWORD PTR [ebx+0x6d834bf0],edi
  4134bb:	dec    BYTE PTR [ebx-0x4]
  4134be:	fiadd  DWORD PTR [edx-0x18a8352]
  4134c4:	in     al,0x70
  4134c6:	mul    BYTE PTR [ecx-0x38]
  4134c9:	sbb    eax,0xf3d4f65b
  4134ce:	add    dh,BYTE PTR [eax+eax*1+0x0]
	...
  4134f6:	add    BYTE PTR [eax],al
  4134f8:	jb     0x413532
  4134fa:	add    al,BYTE PTR [eax]
  4134fc:	mov    ah,0x82
  4134fe:	ins    DWORD PTR es:[edi],dx
  4134ff:	je     0x41355c
  413501:	enter  0x3fd6,0xb4
  413505:	shr    DWORD PTR [ebp-0x4c],cl
  413508:	mov    ebx,0xa4fe6e23
  41350d:	popf   
  41350e:	adc    ch,al
  413510:	repz mov al,0x6d
  413513:	(bad)  
  413514:	xchg   esp,eax
  413515:	fstp   QWORD PTR [esi-0xa]
  413518:	mov    WORD PTR [ebx],gs
  41351a:	outs   dx,BYTE PTR ds:[esi]
  41351b:	je     0x413578
  41351d:	clc    
  41351e:	mov    BYTE PTR [edi],bh
  413520:	jl     0x41351d
  413522:	ins    DWORD PTR es:[edi],dx
  413523:	mov    ah,0x63
  413525:	sti    
  413526:	ins    DWORD PTR es:[edi],dx
  413527:	(bad)  
  413528:	ins    BYTE PTR es:[edi],dx
  413529:	in     eax,0x12
  41352b:	call   0xfeaee607
  413530:	pop    esp
  413531:	and    eax,0x7354f64f
  413536:	ins    BYTE PTR es:[edi],dx
  413537:	mov    ah,0x67
  413539:	inc    ebx
  41353a:	ins    BYTE PTR es:[edi],dx
  41353b:	inc    BYTE PTR [ebp+edi*4+0x13]
  41353f:	call   0xfeae65d3
  413544:	xor    al,0x7d
  413546:	arpl   si,si
  413548:	sub    al,0x4b
  41354a:	ins    BYTE PTR es:[edi],dx
  41354b:	je     0x413588
  41354d:	cmp    cl,bl
  41354f:	aas    
  413550:	sbb    al,0x9b
  413552:	ins    BYTE PTR es:[edi],dx
  413553:	je     0x413590
  413555:	mov    bl,0xb6
  413557:	xlat   BYTE PTR ds:[ebx]
  413558:	adc    al,0x9
  41355a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41355b:	ins    DWORD PTR es:[edi],dx
	...
  413584:	add    eax,0x7a5bf0dc
  413589:	arpl   WORD PTR [ebp-0x4f640a93],dx
  41358f:	jne    0x41357e
  413591:	popa   
  413592:	nop
  413593:	loope  0x41351e
  413595:	bound  edi,QWORD PTR [ebp+0x6d]
  413598:	xchg   edi,eax
  413599:	pop    eax
  41359a:	jge    0x413609
  41359c:	aad    0x70
  41359e:	adc    cl,al
  4135a0:	int    0x61
  4135a2:	gs mov bh,0xb0
  4135a5:	pop    ecx
  4135a6:	pop    ebp
  4135a7:	ins    DWORD PTR es:[edi],dx
  4135a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135a9:	shr    DWORD PTR [ecx-0x6c9e4a94],cl
  4135af:	pop    esp
  4135b0:	mov    ch,0x61
  4135b2:	inc    ebp
  4135b3:	pop    esp
  4135b4:	or     al,dh
  4135b6:	cmp    eax,0x4c9b9d6d
  4135bb:	jne    0x413552
  4135bd:	popa   
  4135be:	inc    eax
  4135bf:	xor    eax,0x6d256208
  4135c4:	mov    edi,0x7d6d1568
  4135c9:	jo     0x41358f
  4135cb:	shl    BYTE PTR [ebp+0x61],0xd
  4135cf:	(bad)  
  4135d0:	je     0x413641
  4135d2:	mov    ch,0x6d
  4135d4:	gs popa 
  4135d6:	std    
  4135d7:	mul    BYTE PTR [eax+0x70]
  4135da:	jle    0x4135f2
  4135dc:	dec    ebx
  4135dd:	or     DWORD PTR [eax],esp
  4135df:	inc    edx
  4135e0:	inc    eax
  4135e1:	or     DWORD PTR [ecx+edi*2],edi
  4135e4:	xor    BYTE PTR [ebp+0x6fa4],cl
	...
  41360e:	add    BYTE PTR [eax],al
  413610:	mov    dl,0x9
  413612:	inc    ebx
  413613:	mov    ecx,0x5be0d735
  413618:	outs   dx,BYTE PTR ds:[esi]
  413619:	leave  
  41361a:	lds    ebp,FWORD PTR [ebx+edx*8-0x3a]
  41361e:	mov    esp,0x11976c
  413623:	inc    ecx
  413624:	cmp    dl,cl
  413626:	inc    eax
  413627:	jmp    0xd0834bcb
  41362c:	or     DWORD PTR [ecx-0x1a],esp
  41362f:	xchg   ebp,eax
  413630:	ins    DWORD PTR es:[edi],dx
  413631:	pop    edi
  413632:	(bad)  
  413633:	xchg   esi,eax
  413634:	std    
  413635:	or     BYTE PTR [eax-0x6],ch
  413638:	mov    al,0xc9
  41363a:	call   DWORD PTR [eax]
  41363c:	dec    ecx
  41363d:	or     DWORD PTR [eax],eax
  41363f:	imul   eax,DWORD PTR [eax+0x6776fc6a],0x5f6d745f
  413649:	aad    0x7
  41364b:	push   ecx
  41364c:	cdq    
  41364d:	and    bh,bh
  41364f:	pop    esi
  413650:	or     DWORD PTR [edx+0x3],0xeb939de9
  413657:	push   0x4
  413659:	fs imul ebp,ecx,0xb4fed482
  413660:	mov    al,ds:0x27f6f468
  413665:	pop    edi
  413666:	mov    BYTE PTR [esp+ebx*1+0x27e8ffe8],ah
  41366d:	sahf   
  41366e:	addr16 xchg ebx,eax
  413670:	ror    cl,0xff
  413673:	add    BYTE PTR [eax],0x0
	...
  41369a:	add    BYTE PTR [eax],al
  41369c:	jge    0x413666
  41369e:	inc    eax
  41369f:	jmp    0x11490b83
  4136a4:	mov    ch,0xe7
  4136a6:	(bad)  
  4136a7:	(bad)  
  4136a8:	lock aam 0xfb
  4136ab:	neg    BYTE PTR [esi+0x8]
  4136ae:	call   0xfea0bf8a
  4136b3:	mov    al,0x8d
  4136b5:	or     al,0x0
  4136b7:	xor    al,0xbc
  4136b9:	je     0x41363b
  4136bb:	lods   eax,DWORD PTR ds:[esi]
  4136bc:	lahf   
  4136bd:	push   edi
  4136be:	dec    dh
  4136c0:	mov    dl,0xc5
  4136c2:	sti    
  4136c3:	add    BYTE PTR [edx-0xc],al
  4136c6:	jae    0x4136d4
  4136c8:	fstp   QWORD PTR [ecx+0x6]
  4136cb:	call   0x412f8e
  4136d0:	sub    esp,ecx
  4136d2:	or     eax,0x60785
  4136d7:	add    BYTE PTR [ebp-0x1dff09b7],ah
  4136dd:	or     eax,DWORD PTR [eax]
  4136df:	(bad)  
  4136e0:	daa    
  4136e1:	fscale 
  4136e3:	pop    es
  4136e4:	repnz or ebp,DWORD PTR [edx+0x0]
  4136e8:	cmp    BYTE PTR ds:0x548006a,al
  4136ee:	lea    eax,[ebp+0x56]
  4136f1:	xor    eax,0xdc26858b
  4136f6:	std    
  4136f7:	inc    DWORD PTR [edx]
  4136f9:	repz jae 0x4136f4
  4136fc:	sbb    eax,0xe8fa5a
	...
  413725:	add    BYTE PTR [eax],al
  413727:	add    BYTE PTR [ecx+edi*8],ch
  41372a:	(bad)  
  41372b:	call   FWORD PTR [ecx-0x4fa8d35]
  413731:	int3   
  413732:	(bad)  
  413733:	jmp    DWORD PTR [edx-0x1cd74ebd]
  413739:	or     edi,edi
  41373b:	jne    0x4137bb
  41373d:	ret    
  41373e:	iret   
  41373f:	inc    ebp
  413740:	pop    ebp
  413741:	hlt    
  413742:	dec    esi
  413743:	mov    esi,DWORD PTR [edx]
  413745:	loop   0x4136ca
  413747:	hlt    
  413748:	push   ebp
  413749:	hlt    
  41374a:	std    
  41374b:	push   eax
  41374c:	rol    bl,0xbf
  41374f:	inc    ebp
  413750:	pop    ebp
  413751:	xacquire xchg DWORD PTR [ebp-0x223c6],eax
  413758:	dec    edx
  413759:	cld    
  41375a:	inc    ecx
  41375b:	jmp    FWORD PTR ds:0xbe67fe3d
  413761:	mov    ds:0x374b003f,al
  413766:	scas   eax,DWORD PTR es:[edi]
  413767:	xlat   BYTE PTR ds:[ebx]
  413768:	xor    al,0x50
  41376a:	imul   edi,esi,0x195a589e
  413770:	xchg   BYTE PTR [edi-0x5f317797],bl
  413776:	jno    0x413776
  413778:	or     al,0xcb
  41377a:	add    ebp,DWORD PTR [eax-0x48]
  41377d:	sbb    ch,al
  41377f:	(bad)  
  413780:	std    
  413781:	mov    ch,0x4a
  413783:	div    ah
  413785:	ja     0x4137f0
  413787:	je     0x4137cc
  413789:	mov    BYTE PTR [ecx+0x43],ch
	...
  4137b4:	in     al,0x87
  4137b6:	jnp    0x41373c
  4137b8:	out    dx,eax
  4137b9:	xlat   BYTE PTR ds:[ebx]
  4137ba:	imul   edi,esi,0xc7da7061
  4137c0:	xor    DWORD PTR [ecx],0x4
  4137c3:	(bad)  
  4137c4:	dec    al
  4137c6:	jno    0x4137c6
  4137c8:	mov    esp,0xa307efbf
  4137cd:	int3   
  4137ce:	mov    esi,0x7fe9acfe
  4137d3:	out    0x9c,eax
  4137d5:	(bad)  
  4137d6:	imul   ecx,DWORD PTR [esi+eax*8-0x6b018e04],0x3e0da80
  4137e1:	mov    cl,0x2
  4137e3:	(bad)  
  4137e4:	mov    esi,0x7cfe71c8
  4137e9:	(bad)  
  4137ea:	out    dx,eax
  4137eb:	pop    es
  4137ec:	arpl   WORD PTR [edi+edi*4],bp
  4137ef:	(bad)  
  4137f0:	ins    BYTE PTR es:[edi],dx
  4137f1:	jmp    0x79e1b75
  4137f6:	push   0x69
  4137f8:	dec    ebx
  4137f9:	js     0x41386b
  4137fb:	inc    edi
  4137fc:	or     dh,BYTE PTR [eax+0x69]
  4137ff:	mov    ah,0x73
  413801:	push   edi
  413802:	push   0x5c0944fe
  413807:	cld    
  413808:	and    al,0xb0
  41380a:	and    al,0x69
  41380c:	xor    eax,0x35646b90
  413811:	pop    esi
  413812:	int    0x77
  413814:	iret   
  413815:	cmp    BYTE PTR [ebp+0x69],bh
	...
  41383f:	add    BYTE PTR ds:0x83fa50b9,bl
  413845:	enter  0x68e8,0xd7
  413849:	inc    eax
  41384a:	mov    ch,0x69
  41384c:	add    eax,0xe4fc1b5e
  413851:	(bad)  
  413852:	and    al,0x69
  413854:	cmc    
  413855:	(bad)  
  413856:	imul   edx,DWORD PTR [eax-0xb],0x5d
  41385a:	lea    eax,[ebp+0x697d58a7]
  413860:	fisttp QWORD PTR [eax]
  413862:	cmc    
  413863:	fmul   st(1),st
  413865:	fwait
  413866:	test   BYTE PTR [ecx-0x33],dh
  413869:	pop    ebp
  41386a:	call   0xa3cb635e
  41386f:	pop    esp
  413870:	mov    ch,0x5d
  413872:	pop    ebp
  413873:	add    al,0x3f
  413875:	rol    al,0x3
  413878:	dec    ebx
  413879:	outs   dx,BYTE PTR ds:[esi]
  41387a:	mov    gs,WORD PTR [ecx+0x1f]
  41387d:	stc    
  41387e:	push   eax
  41387f:	cmp    BYTE PTR [edi+0x5e],bl
  413882:	cmp    eax,0x3d58df69
  413887:	imul   ecx,DWORD PTR [ebp+0x7313b35d],0x7d68e728
  413891:	pop    ebp
  413892:	push   ebx
  413893:	pop    eax
  413894:	jge    0x4138f3
  413896:	adc    eax,0xf8f769
  41389b:	push   ss
  41389c:	and    eax,0x9769055e
  4138a1:	jo     0x413898
  4138a3:	push   0x0
	...
  4138cc:	push   ebp
  4138cd:	pop    ebp
  4138ce:	(bad)  
  4138cf:	jnp    0x413909
  4138d1:	jno    0x4138d6
  4138d3:	scas   eax,DWORD PTR es:[edi]
  4138d4:	mov    bl,0x5b
  4138d6:	(bad)  
  4138d7:	pushf  
  4138d8:	test   BYTE PTR [ebx-0x2],dl
  4138db:	fisub  WORD PTR [ebx-0x5c211c6b]
  4138e1:	pop    ebx
  4138e2:	(bad)  
  4138e3:	push   esp
  4138e4:	aas    
  4138e5:	jno    0x4138aa
  4138e7:	add    al,0xb2
  4138e9:	pop    ebx
  4138ea:	(bad)  
  4138eb:	je     0x413895
  4138ed:	push   ebx
  4138ee:	(bad)  
  4138ef:	mov    dh,0xa3
  4138f1:	aad    0xf
  4138f3:	shr    DWORD PTR [esi+0x1d],0xff
  4138f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138f8:	(bad)  
  4138f9:	popf   
  4138fa:	iret   
  4138fb:	xchg   esi,eax
  4138fc:	arpl   WORD PTR [ebx-0x1],bx
  4138ff:	sbb    al,0x28
  413901:	icebp  
  413902:	add    cl,ch
  413904:	sbb    DWORD PTR [esi+0x7138fcfe],0x69
  41390b:	mov    esp,0x3cfe5b63
  413910:	js     0x413965
  413912:	(bad)  
  413913:	outs   dx,BYTE PTR ds:[esi]
  413914:	xor    edx,DWORD PTR [ebp+0x5b335ed3]
  41391a:	(bad)  
  41391b:	aam    0x58
  41391d:	jno    0x4138aa
  41391f:	adc    al,0x22
  413921:	pop    ebx
  413922:	(bad)  
  413923:	aam    0x38
  413925:	pop    esp
  413926:	mov    ah,0x21
  413928:	sbb    ebx,DWORD PTR [ebx-0x2]
  41392b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41392d:	add    al,0xe8
  41392f:	add    DWORD PTR [eax],eax
	...
  413955:	add    BYTE PTR [eax],al
  413957:	add    BYTE PTR [ecx],ah
  413959:	pop    ebx
  41395a:	(bad)  
  41395b:	cs mov ch,0x34
  41395e:	mul    BYTE PTR [esi]
  413960:	repz arpl WORD PTR [eax-0x1a51c57],si
  413967:	pop    esp
  413968:	clc    
  413969:	push   edx
  41396a:	dec    BYTE PTR [esi]
  41396c:	add    BYTE PTR [esi-0xebaffc1],ah
  413972:	std    
  413973:	mov    ch,0x46
  413975:	fscale 
  413977:	dec    DWORD PTR [edx-0x73]
  41397a:	push   DWORD PTR ds:0x1de8b3e4
  413981:	in     al,0xfd
  413983:	call   0x3e7f3a
  413988:	adc    eax,0x15f7e29a
  41398d:	in     al,0xe6
  41398f:	test   DWORD PTR [edx-0x1c],esi
  413992:	std    
  413993:	call   FWORD PTR [edi-0x2a000a1b]
  413999:	mov    esp,0xe3b54078
  41399e:	std    
  41399f:	mov    ch,0xbe
  4139a1:	jmp    0x4139a0
  4139a3:	(bad)  
  4139a4:	fidiv  DWORD PTR [ebx]
  4139a6:	notrack call ebp
  4139a9:	jecxz  0x4139ee
  4139ab:	clc    
  4139ac:	retf   
  4139ad:	out    dx,al
  4139ae:	sti    
  4139af:	inc    ebp
  4139b1:	jecxz  0x413a26
  4139b3:	cld    
  4139b4:	mov    edx,0xe20010ad
  4139b9:	sbb    al,0xc1
  4139bb:	or     al,0x0
	...
  4139e1:	add    BYTE PTR [eax],al
  4139e3:	add    BYTE PTR [edx+0x31ec8938],dh
  4139e9:	leave  
  4139ea:	cli    
  4139eb:	push   0xffffffa2
  4139ed:	inc    ecx
  4139ee:	dec    ebx
  4139ef:	dec    DWORD PTR [edi+0x5781e65f]
  4139f5:	in     al,0xfd
  4139f7:	mov    edi,ebp
  4139f9:	jecxz  0x4139f8
  4139fb:	jne    0x413997
  4139fd:	aas    
  4139fe:	jle    0x413a48
  413a00:	jecxz  0x413a09
  413a02:	push   DWORD PTR ds:0x40fcb0
  413a08:	pop    edx
  413a09:	test   bl,bh
  413a0b:	call   DWORD PTR [ebp-0x1c]
  413a0e:	jae    0x413a18
  413a10:	dec    ebx
  413a11:	mov    al,BYTE PTR [edx-0x258df5b9]
  413a17:	add    DWORD PTR [ebx+0x72],ecx
  413a1a:	and    bh,0xc6
  413a1d:	pop    esp
  413a1e:	dec    BYTE PTR gs:[esp+ebx*8+0x66]
  413a23:	(bad)  
  413a24:	mov    esi,0x7e935a68
  413a29:	arpl   WORD PTR [ebp-0x38],sp
  413a2c:	or     DWORD PTR [ebp+0x2],esp
  413a2f:	push   ebp
  413a30:	rol    BYTE PTR [ecx+eax*4-0x3d],0x27
  413a35:	adc    ecx,edi
  413a37:	imul   ecx,DWORD PTR [ebx-0x4a],0x589efeb5
  413a3e:	pop    edx
  413a3f:	xor    eax,0x8865934e
  413a44:	mov    gs,WORD PTR [ecx+edi*2+0x34]
	...
  413a6f:	add    BYTE PTR [eax-0x3e003cc8],ah
  413a75:	cmp    eax,0x708a27c5
  413a7a:	cmp    BYTE PTR [esi],0x4b
  413a7d:	hlt    
  413a7e:	shl    BYTE PTR [edi+0x40],0x19
  413a82:	vhsubps ymm7,ymm0,YMMWORD PTR [eax-0x17]
  413a87:	adc    DWORD PTR [ebx+0x70],ecx
  413a8a:	stc    
  413a8b:	mov    edi,0xe7cc4b3f
  413a90:	fstp   QWORD PTR [ecx+0x381bfe65]
  413a96:	add    al,BYTE PTR [eax]
  413a98:	pushf  
  413a99:	jb     0x413a75
  413a9b:	and    edx,DWORD PTR [edx]
  413a9d:	mov    cl,0x2
  413a9f:	push   eax
  413aa0:	pushf  
  413aa1:	popf   
  413aa2:	cli    
  413aa3:	out    0xbb,eax
  413aa5:	inc    esp
  413aa6:	gs (bad) 
  413aa8:	mov    ds:0x84ff25d4,eax
  413aad:	mov    DWORD PTR [ebx],0xe709cb46
  413ab3:	add    edi,esi
  413ab5:	pop    esi
  413ab6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ab7:	cmp    DWORD PTR [bx+di+0x4f],ecx
  413abb:	gs pop dx
  413abe:	or     eax,0xee21ae71
  413ac3:	lock xchg ecx,eax
  413ac5:	pop    edx
  413ac6:	jae    0x413b2f
  413ac8:	dec    ebp
  413ac9:	aam    0xe0
  413acb:	pop    ebx
  413acc:	pop    esp
  413acd:	sbb    al,0xee
  413acf:	gs popf 
  413ad1:	mov    ebx,0x42af
	...
  413afa:	add    BYTE PTR [eax],al
  413afc:	dec    eax
  413afd:	or     DWORD PTR [ecx+edi*2],esi
  413b00:	and    BYTE PTR [esi+0x9b268ac],al
  413b06:	inc    ebx
  413b07:	mov    ch,0x1d
  413b09:	aam    0xf0
  413b0b:	pop    ebx
  413b0c:	rcr    BYTE PTR [esi+edi*4],cl
  413b0f:	gs ret 
  413b11:	ret    
  413b12:	mov    ah,0xda
  413b14:	add    al,0xe2
  413b16:	pop    ss
  413b17:	mov    ebx,0x3311098b
  413b1c:	or     al,0xe8
  413b1f:	fs aaa 
  413b21:	(bad)  
  413b22:	mov    edi,0x6861e4c2
  413b27:	ret    0x59dd
  413b2a:	icebp  
  413b2b:	inc    ebx
  413b2c:	pop    eax
  413b2d:	add    BYTE PTR [ecx],bl
  413b2f:	fmul   st(4),st
  413b31:	pop    ecx
  413b32:	test   DWORD PTR [esi-0x3ce018d4],esp
  413b38:	mov    esp,0x4cef65c9
  413b3d:	jno    0x413b3c
  413b3f:	fild   QWORD PTR [ebp+0x65b94059]
  413b45:	pop    edx
  413b46:	dec    ebp
  413b47:	fcomp  QWORD PTR [ecx+ebx*2-0x18d359ab]
  413b4e:	scas   eax,DWORD PTR es:[edi]
  413b4f:	ret    0xe18c
  413b52:	dec    DWORD PTR [edi+0x2dffc8c1]
  413b58:	ins    BYTE PTR es:[edi],dx
  413b59:	add    eax,ebp
  413b5b:	mov    bh,0x94
  413b5d:	pop    edx
  413b5e:	(bad)  
  413b5f:	push   ds
	...
  413b88:	pop    esp
  413b89:	pop    ebp
  413b8a:	(bad)  
  413b8b:	pushf  
  413b8c:	pusha  
  413b8d:	popa   
  413b8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b8f:	int    0xe7
  413b91:	pop    edx
  413b92:	enter  0x4b2b,0x9
  413b96:	push   ebp
  413b97:	jb     0x413b8c
  413b99:	xchg   bl,al
  413b9b:	cmc    
  413b9c:	push   ss
  413b9d:	shr    BYTE PTR [ecx-0x17],0x22
  413ba1:	leave  
  413ba2:	(bad)  
  413ba3:	pop    esp
  413ba4:	aaa    
  413ba5:	jno    0x413bef
  413ba7:	sbb    eax,0x2c8857a6
  413bac:	mov    bl,0x83
  413bae:	xor    al,0x32
  413bb0:	aas    
  413bb1:	retf   0x71ff
  413bb4:	ins    DWORD PTR es:[edi],dx
  413bb5:	mov    eax,0x89472827
  413bba:	ds jmp 0x38a909b4
  413bc0:	ror    cl,0xff
  413bc3:	cmp    eax,0xe9108697
  413bc8:	dec    eax
  413bc9:	add    al,0xc0
  413bcb:	sbb    eax,0x58e7bf4e
  413bd0:	mov    al,ds:0xf719fe57
  413bd5:	pop    eax
  413bd6:	dec    BYTE PTR [esi+0x207af0a6]
  413bdc:	mov    BYTE PTR [eax+0x4e],bl
  413bdf:	outs   dx,BYTE PTR ds:[esi]
  413be0:	lods   eax,DWORD PTR ds:[esi]
  413be1:	adc    al,ch
  413be3:	mov    ch,BYTE PTR [ebx+0x7751fe57]
  413be9:	push   ss
  413bea:	call   DWORD PTR [esi+0x0]
	...
  413c11:	add    BYTE PTR [eax],al
  413c13:	add    BYTE PTR [ebx],al
  413c15:	or     DWORD PTR [esi+0x69],eax
  413c18:	or     WORD PTR [ebp+0x0],si
  413c1c:	or     BYTE PTR [esi-0x5c9dcc06],dl
  413c22:	std    
  413c23:	(bad)  
  413c24:	cmp    eax,0x7aaef0ed
  413c29:	push   ebp
  413c2a:	jae    0x413be7
  413c2c:	sub    eax,0xd7fffa67
  413c31:	push   esp
  413c32:	out    0x2b,al
  413c34:	jle    0x413c23
  413c36:	std    
  413c37:	pop    edi
  413c38:	lods   al,BYTE PTR ds:[esi]
  413c39:	adc    eax,ecx
  413c3b:	add    al,0x62
  413c3d:	inc    edi
  413c3e:	mov    esp,ebp
  413c40:	loope  0x413c59
  413c42:	sti    
  413c43:	push   esi
  413c44:	in     eax,0x31
  413c46:	(bad)  
  413c47:	imul   esp,ebx,0x1a0873ec
  413c4d:	enter  0xff39,0xd
  413c51:	xchg   BYTE PTR [ebx-0x4],al
  413c54:	test   eax,0x73285af2
  413c59:	or     eax,0x256d3d8b
  413c5e:	inc    ecx
  413c5f:	add    BYTE PTR [edx+0x3774002c],ah
  413c65:	test   DWORD PTR gs:[ecx+0x33],ecx
  413c69:	or     eax,0x5cf2e857
  413c6e:	(bad)  
  413c6f:	(bad)  
  413c70:	stc    
  413c71:	retf   
  413c72:	jb     0x413c93
  413c74:	and    al,0xe5
  413c76:	xor    DWORD PTR [eax+0x0],ecx
	...
  413c9d:	add    BYTE PTR [eax],al
  413c9f:	add    ch,cl
  413ca1:	jmp    0x413cf1
  413ca3:	push   0xbeef0be2
  413ca8:	cmp    dl,dh
  413caa:	inc    edi
  413cab:	inc    ecx
  413cac:	mov    dl,0x9b
  413cae:	std    
  413caf:	jne    0x413c5b
  413cb1:	jecxz  0x413cd6
  413cb3:	arpl   WORD PTR ds:0x4c51e6ec,bp
  413cb9:	in     al,dx
  413cba:	std    
  413cbb:	jmp    0x413d08
  413cbd:	popa   
  413cbe:	enter  0x5d7f,0x62
  413cc2:	xlat   BYTE PTR ds:[ebx]
  413cc3:	stc    
  413cc4:	or     eax,0xd2c016ce
  413cc9:	push   ss
  413cca:	arpl   si,di
  413ccc:	test   BYTE PTR [ebx],dl
  413cce:	mov    dl,0x37
  413cd0:	inc    esp
  413cd1:	popf   
  413cd2:	popf   
  413cd3:	(bad)  
  413cd4:	(bad)  
  413cd5:	sub    eax,0xfa437463
  413cda:	mov    al,0x3a
  413cdc:	fs inc dl
  413cdf:	pop    ebp
  413ce0:	xchg   edx,eax
  413ce1:	and    ecx,DWORD PTR [eax]
  413ce3:	add    dh,bh
  413ce5:	fisubr DWORD PTR [edi-0x7e]
  413ce8:	xchg   DWORD PTR [ebp-0x14],edx
  413ceb:	push   DWORD PTR [edx+0x53746172]
  413cf1:	or     bl,dl
  413cf3:	cmp    dh,BYTE PTR [eax+esi*2]
  413cf6:	mov    eax,DWORD PTR [edi+ebp*1-0x47]
  413cfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413cfb:	dec    eax
  413cfc:	mov    ah,BYTE PTR [eax+0x61]
  413cff:	je     0x413d54
  413d01:	dec    eax
  413d02:	rcr    bh,1
	...
  413d2c:	adc    al,0x50
  413d2e:	popa   
  413d2f:	je     0x413d40
  413d31:	cwde   
  413d32:	xlat   BYTE PTR ds:[ebx]
  413d33:	pop    es
  413d34:	repz sbb bl,BYTE PTR [edi]
  413d37:	(bad)  
  413d38:	cld    
  413d39:	test   eax,0x154b0344
  413d3e:	(bad)  
  413d3f:	jmp    0x413d09
  413d41:	lods   al,BYTE PTR ds:[esi]
  413d42:	pop    esi
  413d43:	push   esi
  413d44:	jae    0x413cef
  413d46:	cmp    al,0x3f
  413d48:	dec    ebx
  413d49:	js     0x413d1f
  413d4b:	add    BYTE PTR [eax],cl
  413d4d:	nop
  413d4e:	dec    ecx
  413d4f:	inc    esp
  413d50:	iret   
  413d51:	pusha  
  413d52:	add    al,BYTE PTR [eax]
  413d54:	dec    ebx
  413d55:	pop    ds
  413d56:	lahf   
  413d57:	dec    eax
  413d58:	or     ah,BYTE PTR [eax+0x61]
  413d5b:	je     0x413da0
  413d5d:	or     DWORD PTR [esi+0x8],esi
  413d60:	pop    ebx
  413d61:	ret    0x3a7
  413d64:	das    
  413d65:	test   al,0x18
  413d67:	add    al,0x4b
  413d69:	or     DWORD PTR [ecx-0x25],ebp
  413d6c:	dec    edx
  413d6d:	or     DWORD PTR [ebp-0xf2373f5],edi
  413d73:	imul   esi,DWORD PTR [ecx],0x1c
  413d76:	bound  esi,QWORD PTR ss:[ebx-0x6f]
  413d7a:	call   0xc4a28882
  413d7f:	retf   0x566d
  413d82:	sbb    eax,0x6614cd8
  413d87:	sbb    al,0x5c
  413d89:	push   esi
  413d8a:	dec    ecx
  413d8b:	str    eax
  413d8e:	call   0x413e7a
	...
  413db7:	add    BYTE PTR [ebp+0x1c],cl
  413dba:	jmp    0x624a88c2
  413dbf:	inc    edi
  413dc0:	test   al,0x56
  413dc2:	mov    bl,0x3
  413dc4:	dec    ebx
  413dc5:	or     ecx,ebp
  413dc7:	mov    dh,0x7c
  413dc9:	loope  0x413d4e
  413dcb:	cmp    eax,0xc2410964
  413dd0:	add    ecx,ecx
  413dd2:	call   0xbc1e68a
  413dd7:	add    al,0x4b
  413dd9:	or     ecx,ebp
  413ddb:	pusha  
  413ddc:	jg     0x413ddf
  413dde:	mov    dh,0xf9
  413de0:	retf   
  413de1:	adc    eax,0x934c402
  413de6:	sbb    eax,0xf850c801
  413deb:	xlat   BYTE PTR ds:[ebx]
  413dec:	push   ebx
  413ded:	dec    esi
  413dee:	sub    esp,DWORD PTR [eax+0x4b]
  413df1:	or     ecx,ebp
  413df3:	add    esp,eax
  413df5:	test   DWORD PTR [ebp+0x27c23f17],0x1bc404
  413dff:	(bad)  [edi-0x97f0038]
  413e05:	push   ds
  413e06:	jmp    DWORD PTR [esi-0x3a]
  413e09:	dec    ecx
  413e0a:	pop    ss
  413e0b:	push   edx
  413e0c:	xchg   edx,eax
  413e0d:	mov    esp,0xbcce458a
  413e12:	or     esp,DWORD PTR [edx-0x74]
  413e15:	add    eax,0x8640bbff
  413e1a:	jg     0x413d9d
	...
  413e44:	dec    edi
  413e45:	or     DWORD PTR [eax],eax
  413e47:	ss xchg ebp,eax
  413e49:	add    DWORD PTR [edi-0x1a9fc97],ecx
  413e4f:	jmp    0x6e51163f
  413e54:	iret   
  413e55:	cdq    
  413e56:	(bad)  
  413e57:	call   0xf97dc8a4
  413e5c:	xchg   eax,ecx
  413e5e:	(bad)  
  413e5f:	call   0xb54036d8
  413e64:	push   esp
  413e65:	rol    BYTE PTR [eax-0x17],0xab
  413e69:	sbb    eax,0x5509a210
  413e6e:	out    0x1,al
  413e70:	push   edx
  413e71:	push   esp
  413e72:	(bad)  
  413e73:	mov    eax,ds:0xe9000948
  413e78:	fisttp QWORD PTR [edx+0x23]
  413e7b:	jmp    0xe945c2ac
  413e80:	dec    eax
  413e81:	or     DWORD PTR [eax],eax
  413e83:	push   0xffffff93
  413e85:	or     BYTE PTR [ebx-0x7afbb70a],al
  413e8b:	out    dx,al
  413e8c:	imul   edx,DWORD PTR [ebx-0x2],0x72
  413e90:	add    eax,0x8eb05e51
  413e95:	or     BYTE PTR [eax],al
  413e97:	aas    
  413e98:	out    dx,eax
  413e99:	aas    
  413e9a:	fisubr DWORD PTR [ecx]
  413e9c:	dec    edi
  413e9d:	push   ecx
  413e9e:	jno    0x413ea0
  413ea0:	jecxz  0x413e6f
  413ea2:	std    
  413ea3:	mov    edi,ebx
  413ea5:	and    eax,0x8bf6
	...
  413ece:	add    BYTE PTR [eax],al
  413ed0:	jmp    0x413f32
  413ed2:	jle    0x413e7c
  413ed4:	nop
  413ed5:	pop    es
  413ed6:	mov    ecx,ecx
  413ed8:	test   BYTE PTR [ebp-0x79b51439],al
  413ede:	mov    DWORD PTR [ebx],0x50c7856c
  413ee4:	sub    DWORD PTR [edi+0x894a7e6],edi
  413eea:	add    BYTE PTR [ebx-0x36766fc5],cl
  413ef0:	jno    0x413ec0
  413ef2:	mov    ecx,ecx
  413ef4:	aam    0x5
  413ef6:	div    BYTE PTR [ebp+0x3e]
  413ef9:	dec    edx
  413efa:	rcl    DWORD PTR [ebp-0x27],0xe3
  413efe:	data16 or BYTE PTR [esi],dl
  413f01:	dec    eax
  413f02:	(bad)  
  413f03:	div    DWORD PTR [eax-0x26003cf9]
  413f09:	dec    edx
  413f0a:	push   es
  413f0b:	or     esi,DWORD PTR [edx+0x3c]
  413f0e:	or     ch,bl
  413f10:	das    
  413f11:	jmp    0x387e:0x482afe06
  413f18:	and    dh,BYTE PTR [ecx]
  413f1a:	hlt    
  413f1b:	leave  
  413f1c:	lock add BYTE PTR [eax],al
  413f1f:	push   ebp
  413f20:	test   eax,0xfec481d9
  413f25:	xchg   edi,eax
  413f26:	data16 xor dh,ah
  413f29:	dec    esp
  413f2a:	(bad)  
  413f2b:	test   DWORD PTR [eax+0xe],0x41adffc3
  413f32:	repnz add BYTE PTR [eax],al
	...
  413f59:	add    BYTE PTR [eax],al
  413f5b:	add    dl,ah
  413f5d:	pop    es
  413f5e:	add    BYTE PTR [ebx],ch
  413f60:	or     DWORD PTR [edx+0x43],edi
  413f63:	cld    
  413f64:	and    dh,BYTE PTR [ebx+esi*2+0x788a4b08]
  413f6b:	or     eax,0xbf87624b
  413f70:	push   ebx
  413f71:	xchg   ebp,eax
  413f72:	pop    ebp
  413f73:	je     0x413fc8
  413f75:	jp     0x413f9f
  413f77:	xor    al,0xbc
  413f79:	fimul  DWORD PTR [esp+eax*2-0x184bde4d]
  413f80:	pop    ds
  413f81:	cs pop edi
  413f83:	(bad)  
  413f84:	shr    BYTE PTR [esi+edx*2+0x6bbe16fe],cl
  413f8b:	push   ebx
  413f8c:	inc    esi
  413f8d:	bound  eax,QWORD PTR [edx]
  413f8f:	or     ecx,DWORD PTR [ebx-0x101096b]
  413f95:	leave  
  413f96:	pop    esi
  413f97:	je     0x414010
  413f99:	jno    0x414005
  413f9b:	xchg   DWORD PTR [edi],esi
  413f9d:	and    ebx,DWORD PTR [edi-0x2]
  413fa0:	imul   BYTE PTR ds:0x6256416c
  413fa6:	add    bh,bh
  413fa8:	(bad)  
  413fa9:	imul   ebp,DWORD PTR [edx-0xd],0x825f031e
  413fb0:	into   
  413fb1:	push   ebp
  413fb2:	add    dh,BYTE PTR [ebp+eiz*2+0x78]
  413fb6:	sub    cl,BYTE PTR [ebx-0x76]
  413fb9:	pusha  
  413fba:	pop    ebp
  413fbb:	je     0x413ffc
  413fbd:	or     DWORD PTR [ebx+0xd],edx
	...
  413fe7:	add    BYTE PTR [ebx+0x60],cl
  413fea:	or     eax,eax
  413fec:	lahf   
  413fed:	ins    DWORD PTR es:[edi],dx
  413fee:	cdq    
  413fef:	add    BYTE PTR [ebx+0x60],cl
  413ff2:	add    bh,bh
  413ff4:	sahf   
  413ff5:	cmp    al,0x6a
  413ff7:	add    eax,0x8a5d4b4f
  413ffc:	or     BYTE PTR [eax],ch
  413ffe:	dec    ebp
  413fff:	rol    DWORD PTR [edi+0x60],0xb7
  414003:	mov    ah,bh
  414005:	enter  0xdb9d,0x8b
  414009:	or     ecx,ebp
  41400b:	pop    ebx
  41400c:	pop    edx
  41400d:	or     BYTE PTR [edx-0x1f2322a2],ch
  414013:	imul   esp,DWORD PTR [edi],0x1b
  414016:	mov    ds,WORD PTR [esi+0x62]
  414019:	add    DWORD PTR [ecx],edx
  41401b:	sub    dh,BYTE PTR [ebx-0x38]
  41401e:	call   0x81427781
  414023:	fdivr  QWORD PTR [edx+edx*2+0x6d]
  414027:	jmp    0x2bf32170
  41402c:	or     cl,BYTE PTR [ecx]
  41402e:	pop    esi
  41402f:	fadd   DWORD PTR [ecx+eiz*2-0x3e]
  414033:	sbb    edx,DWORD PTR [edx+edx*2+0x6144d84d]
  41403a:	xor    al,0x60
  41403c:	test   DWORD PTR [edx-0x80],edx
  41403f:	add    al,0x4b
  414041:	or     ecx,ebp
  414043:	dec    esp
  414044:	mov    cl,BYTE PTR ds:0x65c1b8e9
  41404a:	imul   eax,DWORD PTR [edi+0x0],0x0
	...
  414071:	add    BYTE PTR [eax],al
  414073:	add    BYTE PTR [ecx+eiz*8-0x1d],bl
  414077:	inc    eax
  414078:	sbb    al,0x9
  41407a:	adc    ecx,edx
  41407c:	dec    ebx
  41407d:	inc    esi
  41407e:	or     eax,0x604d75e
  414083:	fmul   DWORD PTR [ecx+eiz*2+0x78]
  414087:	sbb    DWORD PTR [edx+edx*2],edi
  41408a:	sub    eax,0xe90830c8
  41408f:	add    ecx,DWORD PTR [ebx-0x7c]
  414092:	sub    ebx,DWORD PTR [esp+edx*4-0x1f]
  414096:	cld    
  414097:	enter  0x98b,0xc1
  41409b:	dec    edx
  41409c:	mov    WORD PTR [edx-0x33],ss
  41409f:	or     DWORD PTR [ebx],ecx
  4140a1:	fisttp QWORD PTR [edx]
  4140a3:	mov    ah,0xc9
  4140a5:	rol    eax,cl
  4140a7:	hlt    
  4140a8:	ja     0x4140a5
  4140aa:	inc    DWORD PTR [edx-0x1]
  4140ad:	sar    esi,0x34
  4140b0:	pop    ebx
  4140b1:	popa   
  4140b2:	fnclex 
  4140b4:	xchg   DWORD PTR [ebx+0xa],edx
  4140b7:	test   eax,0x2cc70b03
  4140bc:	imul   edx,DWORD PTR [edx-0x2],0xffffffe9
  4140c0:	dec    eax
  4140c1:	popa   
  4140c2:	fs ret 0x5327
  4140c6:	mov    ah,BYTE PTR [ebx+ebp*1]
  4140c9:	inc    ecx
  4140ca:	shl    ecx,0x48
  4140cd:	mov    esp,0xe9fa7d8a
  4140d2:	pop    edi
  4140d3:	inc    esp
  4140d4:	(bad)  
  4140d5:	push   ecx
  4140d6:	neg    bl
	...
  414100:	dec    ecx
  414101:	inc    esi
  414102:	inc    BYTE PTR [edx]
  414104:	push   edx
  414105:	push   ebx
  414106:	je     0x4140e9
  414108:	and    bl,cl
  41410a:	inc    BYTE PTR [esi+0x26]
  41410d:	(bad)  
  41410e:	mov    edi,0xff7bc4ee
  414113:	call   0xe1b59360
  414118:	loopne 0x414167
  41411a:	xor    DWORD PTR [esi],esp
  41411c:	push   es
  41411d:	(bad)  
  41411e:	mov    edi,0x89604594
  414123:	jmp    0x95404a70
  414128:	cmp    al,0x52
  41412a:	je     0x41411d
  41412c:	mov    al,0xe7
  41412e:	(bad)  
  41412f:	(bad)  
  414130:	lahf   
  414131:	dec    edi
  414132:	je     0x414115
  414134:	mov    al,ds:0x8fee3a17
  414139:	add    eax,eax
  41413b:	pop    esp
  41413c:	dec    ecx
  41413d:	fs jo  0x41411e
  414140:	cmc    
  414141:	or     al,ch
  414143:	mov    al,ds:0xe2fe5030
  414148:	mov    ch,dl
  41414a:	add    DWORD PTR [eax],eax
  41414c:	sbb    DWORD PTR [edx-0x3],ebp
  41414f:	jne    0x41414b
  414151:	in     al,0x1f
  414153:	cmp    DWORD PTR [ebp+0x37c009ad],edi
  414159:	or     ebp,ebx
  41415b:	push   ebp
  41415c:	cmp    dl,BYTE PTR [edi-0x520dbedb]
  414162:	jae    0x41416c
	...
  41418c:	retf   0x3a92
  41418f:	(bad)  
  414190:	mov    ebp,0xb075c001
  414195:	loope  0x4141d7
  414197:	push   DWORD PTR [edi-0x56517fc]
  41419d:	lods   eax,DWORD PTR ds:[esi]
  41419e:	std    
  41419f:	or     esp,edx
  4141a1:	aaa    
  4141a2:	add    bl,ch
  4141a4:	inc    esi
  4141a5:	scas   al,BYTE PTR es:[edi]
  4141a6:	jae    0x4141b0
  4141a8:	cli    
  4141a9:	mov    ecx,0xfdff36
  4141ae:	shl    BYTE PTR [ebp-0x60],0xe1
  4141b2:	and    al,0xff
  4141b4:	mov    DWORD PTR [eax+ebp*8],0xfdad8087
  4141bb:	cmp    DWORD PTR [edx],0x2c
  4141be:	ja     0x4141c2
  4141c0:	dec    ecx
  4141c1:	lds    ecx,FWORD PTR [ecx]
  4141c3:	rol    dh,0x59
  4141c6:	cmp    eax,DWORD PTR [eax]
  4141c8:	jb     0x414226
  4141ca:	(bad)  
  4141cb:	jb     0x41423b
  4141cd:	jno    0x4141ce
  4141cf:	jmp    DWORD PTR [edx+0xc]
  4141d2:	jmp    0x4141d9
  4141d4:	mov    DWORD PTR [ecx],ecx
  4141d6:	add    BYTE PTR [eax],al
  4141d8:	xor    al,BYTE PTR [ecx-0x3594a43f]
  4141de:	push   es
  4141df:	add    bh,dl
  4141e1:	sub    dl,0x68
  4141e4:	push   ebx
  4141e5:	adc    edi,DWORD PTR [edi]
  4141e7:	add    BYTE PTR [edx],ch
  4141e9:	aaa    
  4141ea:	inc    edx
  4141ec:	dec    ebx
  4141ed:	aaa    
  4141ee:	pop    edx
  4141ef:	je     0x4141f1
	...
  414215:	add    BYTE PTR [eax],al
  414217:	add    BYTE PTR [edi],bh
  414219:	aas    
  41421a:	rol    BYTE PTR [edi],1
  41421c:	repz call FWORD PTR [edx-0x2]
  414220:	cld    
  414221:	pop    edx
  414222:	inc    edx
  414223:	je     0x414276
  414225:	xchg   edi,eax
  414226:	ror    BYTE PTR [ebx],1
  414228:	in     al,dx
  414229:	adc    al,0xc
  41422b:	call   0xfe9be96c
  414230:	push   eax
  414231:	mov    ds:0xecd40ad0,al
  414236:	pop    es
  414237:	call   DWORD PTR [esi+0x6a]
  41423a:	push   0x7
  41423c:	les    eax,FWORD PTR [esi+0x5989c85a]
  414242:	add    dl,BYTE PTR [ebp-0x40]
  414245:	test   DWORD PTR [esi-0x4d0d583d],eax
  41424b:	addr16 sub ecx,eax
  41424e:	ret    
  41424f:	call   DWORD PTR [ebx+esi*1+0xa94c303]
  414256:	aas    
  414257:	out    0x89,eax
  414259:	call   0xff66:0x9c8cfe59
  414260:	jl     0x4142c3
  414262:	add    cl,BYTE PTR [ebp-0x184c39f2]
  414268:	ret    0x5950
  41426b:	dec    al
  41426d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41426e:	call   di
  414271:	or     DWORD PTR [ecx+0x6a916744],ecx
  414277:	jns    0x414293
  414279:	call   FWORD PTR [edx-0x7e]
	...
  4142a4:	(bad)  
  4142a5:	hlt    
  4142a6:	add    esi,DWORD PTR [ebp+0x52]
  4142a9:	ffree  st(0)
  4142ab:	jmp    0x414248
  4142ad:	or     bh,ch
  4142af:	xor    BYTE PTR [eax+eiz*2],ch
  4142b2:	test   DWORD PTR [edi+esi*1+0xa],edi
  4142b6:	jmp    0xe8c109c5
  4142bb:	add    ecx,DWORD PTR [ebx+0x7c]
  4142be:	sub    edx,DWORD PTR [esp+edi*2+0x4e]
  4142c2:	push   ebx
  4142c3:	push   0x5ac5e0ec
  4142c8:	std    
  4142c9:	mov    al,al
  4142cb:	add    al,0x7e
  4142cd:	int3   
  4142ce:	jne    0x4142b5
  4142d0:	and    eax,0x836ee8c8
  4142d5:	inc    esi
  4142d6:	sub    esp,DWORD PTR [eax+0x52]
  4142d9:	or     ecx,ebp
  4142db:	add    ecx,DWORD PTR [eax*8+0x94b0380]
  4142e2:	jmp    0x18a2526f
  4142e7:	pop    ebx
  4142e8:	aaa    
  4142e9:	pop    ebp
  4142ea:	adc    eax,0x75b3b96c
  4142ef:	pop    edx
  4142f0:	inc    ecx
  4142f1:	dec    ecx
  4142f2:	hlt    
  4142f3:	repz leave 
  4142f5:	int3   
  4142f6:	push   eax
  4142f7:	add    edx,DWORD PTR [edi]
  4142f9:	add    ebx,DWORD PTR [esi-0x30]
  4142fc:	lods   al,BYTE PTR ds:[esi]
  4142fd:	popa   
  4142fe:	adc    DWORD PTR [ecx-0x73],ebx
  414301:	dec    esi
  414302:	popa   
  414303:	cmp    eax,DWORD PTR [ebp+0x6b50d4]
	...
  41432d:	add    BYTE PTR [eax],al
  41432f:	add    BYTE PTR ds:0x415a3e18,ch
  414335:	xor    bh,BYTE PTR [ebx+0x44ccc9f0]
  41433b:	add    ebx,edi
  41433d:	std    
  41433e:	and    eax,0x70e168c8
  414343:	not    BYTE PTR [esi+ecx*2+0x0]
  414347:	jbe    0x41438a
  414349:	or     ecx,ebp
  41434b:	outs   dx,BYTE PTR ds:[esi]
  41434c:	std    
  41434d:	popa   
  41434e:	out    0xc2,eax
  414350:	mov    esp,0x32d0e90e
  414355:	(bad)  
  414356:	jmp    FWORD PTR [eax+0x51]
  414359:	or     DWORD PTR [ebp+eiz*8+0x55],esi
  41435d:	xor    dh,BYTE PTR [ebx-0x79]
  414360:	dec    esi
  414361:	xor    dh,BYTE PTR [ebx-0x7]
  414364:	dec    BYTE PTR es:[esp+ebp*1-0x12984189]
  41436c:	pop    ss
  41436d:	leave  
  41436e:	call   eax
  414370:	scas   eax,DWORD PTR es:[edi]
  414371:	(bad)  
  414372:	(bad)  
  414373:	mov    esi,0xc1ebd592
  414378:	pop    edi
  414379:	push   ds
  41437a:	jmp    FWORD PTR [esi+0x425e4ad6]
  414380:	nop
  414381:	dec    ebx
  414382:	push   esp
  414383:	jb     0x4143e8
  414385:	mov    ebx,eax
  414387:	dec    ecx
  414388:	jno    0x4143d9
  41438a:	(bad)  
  41438b:	ss stc 
  41438d:	in     eax,0x4f
  41438f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414390:	xchg   DWORD PTR [ebp-0xa],ecx
  414393:	sti    
	...
  4143bc:	dec    ecx
  4143bd:	dec    edx
  4143be:	(bad)  
  4143bf:	ss mov esp,0xc8e94126
  4143c5:	push   cs
  4143c6:	add    dh,dh
  4143c8:	sbb    al,0x43
  4143ca:	add    cl,ch
  4143cc:	dec    eax
  4143cd:	jl     0x414353
  4143cf:	pop    ebp
  4143d0:	icebp  
  4143d1:	dec    esi
  4143d2:	(bad)  
  4143d3:	mov    ecx,0xa12f65bb
  4143d8:	and    ecx,DWORD PTR [edi+0xa]
  4143db:	sub    DWORD PTR [edx-0x7b],eax
  4143de:	mov    ds:0x830948e8,eax
  4143e3:	ins    BYTE PTR es:[edi],dx
  4143e4:	sti    
  4143e5:	dec    ebx
  4143e6:	(bad)  
  4143e7:	es inc edi
  4143e9:	inc    BYTE PTR [ebx+0x94876]
  4143ef:	fs int3 
  4143f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143f2:	std    
  4143f3:	push   cs
  4143f4:	mov    ds:0x7f00febc,al
  4143f9:	mov    ecx,0xe135fffc
  4143fe:	in     al,dx
  4143ff:	aaa    
  414400:	xor    eax,0xabf629b2
  414405:	jl     0x4143a9
  414407:	(bad)  
  414408:	and    eax,0x3c37e9b2
  41440d:	add    dh,BYTE PTR [esi-0x362bb7c]
  414413:	call   DWORD PTR ds:0x39406699
  414419:	dec    eax
  41441a:	dec    BYTE PTR [edi+ebp*2+0xfffcc6]
	...
  414445:	add    BYTE PTR [eax],al
  414447:	add    BYTE PTR [ebp-0x16be1968],dh
  41444d:	or     BYTE PTR [eax],al
  41444f:	sub    DWORD PTR [esi-0x5f7a72fc],0xffffffb2
  414456:	std    
  414457:	call   DWORD PTR [edx]
  414459:	mov    dl,0xb3
  41445b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41445c:	aam    0xb1
  41445e:	std    
  41445f:	call   0x403941
  414464:	cmp    ecx,ebx
  414466:	mov    ds:0x44b135fe,al
  41446b:	xor    DWORD PTR [eax+ebx*2],0x70
  41446f:	les    esp,FWORD PTR ds:0xf5fef27b
  414475:	mov    al,0xe6
  414477:	mov    ah,0x30
  414479:	mov    dl,0xfd
  41447b:	(bad)  
  41447c:	out    dx,eax
  41447d:	outs   dx,DWORD PTR ds:[esi]
  41447e:	cld    
  41447f:	inc    DWORD PTR ds:0x62000008
  414485:	pop    esi
  414486:	add    BYTE PTR [ebp-0x39021],cl
  41448c:	xor    eax,0x3eb5fd98
  414491:	mov    dl,0xfd
  414493:	(bad)  
  414494:	cmp    dl,BYTE PTR [edx+0x2f]
  414497:	dec    DWORD PTR [ebx-0xd]
  41449a:	or     eax,eax
  41449c:	push   esp
  41449d:	out    0x5a,al
  41449f:	(bad)  
  4144a0:	cmp    al,0x62
  4144a2:	cmp    DWORD PTR [ebx+esi*8+0x7efe564b],0x278
	...
  4144d1:	add    BYTE PTR [eax],al
  4144d3:	add    BYTE PTR [ebp+eiz*8+0x6a],dl
  4144d7:	call   FWORD PTR [edx+eiz*2]
  4144da:	xchg   DWORD PTR [eax+edx*1+0x7bfe562c],eax
  4144e1:	retf   0xff
  4144e4:	dec    ebx
  4144e5:	bound  ebp,QWORD PTR [edx-0x1d]
  4144e8:	push   edx
  4144e9:	bound  eax,QWORD PTR [edx]
  4144eb:	or     ecx,DWORD PTR [ebx]
  4144ed:	pop    ebx
  4144ee:	jle    0x4144be
  4144f0:	dec    ebx
  4144f1:	bound  eax,QWORD PTR [edx]
  4144f3:	cmp    eax,0x2614f
  4144f8:	dec    esp
  4144f9:	fstp   TBYTE PTR [edi]
  4144fb:	call   esp
  4144fd:	popa   
  4144fe:	push   0x4f
  414500:	inc    ecx
  414501:	bound  eax,QWORD PTR [edx]
  414503:	push   eax
  414504:	xor    edi,DWORD PTR [ecx]
  414506:	leave  
  414507:	inc    eax
  414508:	dec    ebx
  414509:	aad    0x80
  41450b:	shl    DWORD PTR [ebp-0x5cb0a936],0xbd
  414512:	or     DWORD PTR [eax],eax
  414514:	dec    ebx
  414515:	fistp  QWORD PTR [edi]
  414517:	or     esi,DWORD PTR [ecx]
  414519:	bound  eax,QWORD PTR [edi+0x56ab9084]
  41451f:	(bad)  
  414520:	sti    
  414521:	leave  
  414522:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414523:	or     BYTE PTR [ebx+0x62],cl
  414526:	xchg   DWORD PTR [eax+eax*4+0x1bfe56c3],eax
  41452d:	mov    edx,0x126c4313
  414532:	or     eax,eax
  414534:	fiadd  WORD PTR [ecx]
  414536:	in     al,dx
  414537:	mov    dl,0x0
	...
  41455d:	add    BYTE PTR [eax],al
  41455f:	add    BYTE PTR [ebx],dh
  414561:	or     DWORD PTR [eax+0x2185c603],ebp
  414567:	push   esi
  414568:	dec    ebp
  414569:	dec    ebx
  41456a:	mov    eax,0xe0f136b
  41456f:	push   edi
  414570:	iret   
  414571:	je     0x41459d
  414573:	push   esi
  414574:	xor    eax,0x24b39a4b
  414579:	cli    
  41457a:	mov    ah,0x56
  41457c:	and    eax,0xc788d95f
  414581:	inc    edi
  414582:	out    0x56,al
  414584:	adc    eax,0x11806bba
  414589:	dec    esp
  41458a:	aad    0x56
  41458c:	xchg   esp,eax
  41458d:	popa   
  41458e:	test   DWORD PTR [edx],ebx
  414590:	cld    
  414591:	dec    edx
  414592:	outs   dx,DWORD PTR ds:[esi]
  414593:	xor    BYTE PTR [eax-0x12a942b5],0x94
  41459a:	je     0x4145f1
  41459c:	in     eax,0x4a
  41459e:	lods   eax,DWORD PTR ds:[esi]
  41459f:	nop
  4145a0:	fmul   DWORD PTR [ebx-0x5b]
  4145a3:	push   esi
  4145a4:	in     al,dx
  4145a5:	aad    0xd9
  4145a7:	push   esi
  4145a8:	int    0xfe
  4145aa:	test   al,0xcf
  4145ac:	jns    0x41458f
  4145ae:	and    ecx,ebx
  4145b0:	or     ecx,DWORD PTR [ecx]
  4145b2:	xchg   ecx,eax
  4145b3:	pop    esi
  4145b4:	dec    esp
  4145b5:	or     ecx,ebp
  4145b7:	mov    bl,0x24
  4145b9:	les    esp,FWORD PTR [ecx]
  4145bb:	lds    esp,FWORD PTR [ebx+ecx*2+0x4a9e9f33]
  4145c2:	imul   eax,DWORD PTR gs:[eax],0x0
	...
  4145ea:	add    BYTE PTR [eax],al
  4145ec:	popf   
  4145ed:	(bad)  
  4145ee:	pop    ebp
  4145ef:	push   esi
  4145f0:	and    cl,BYTE PTR [eax]
  4145f2:	ret    
  4145f3:	add    esi,ecx
  4145f5:	or     BYTE PTR [esi-0x70],cl
  4145f8:	ror    BYTE PTR [ebx+0x45],0x56
  4145fc:	in     al,dx
  4145fd:	or     edx,DWORD PTR [eax]
  4145ff:	lds    ebp,FWORD PTR [eax+eiz*8-0x1]
  414603:	call   0xe94b0bf8
  414608:	dec    eax
  414609:	dec    edx
  41460a:	mov    ah,0x65
  41460c:	dec    BYTE PTR [edx-0x2]
  41460f:	adc    DWORD PTR [ebp-0x62e900ed],esp
  414615:	xchg   ebp,eax
  414616:	mov    ds:0xe74b950f,eax
  41461b:	dec    ebp
  41461c:	inc    ebp
  41461d:	dec    edx
  41461e:	(bad)  
  41461f:	(bad)  
  414620:	mov    esp,0x7ef6fd55
  414625:	bound  eax,QWORD PTR ds:0xfb4b75be
  41462b:	sbb    cl,BYTE PTR [edi+0x76defe91]
  414631:	dec    ebx
  414632:	icebp  
  414633:	xchg   DWORD PTR [edi+0x2],esp
  414636:	pcmpgtb mm1,QWORD PTR [ebx+ecx*2-0x2]
  41463b:	(bad)  
  41463c:	mov    ebp,0x9caac8aa
  414641:	jle    0x41462e
  414643:	push   0xffffff8b
  414645:	pop    edx
  414646:	addr16 in al,dx
  414648:	imul   ecx,DWORD PTR [edx],0x8f9a100
  41464e:	ret    
  41464f:	sahf   
	...
  414678:	ret    0x6737
  41467b:	in     al,dx
  41467c:	dec    ecx
  41467d:	or     DWORD PTR [eax],eax
  41467f:	adc    DWORD PTR [ebp-0x3d7900ee],0x13248837
  414689:	jg     0x41465c
  41468b:	add    DWORD PTR [eax+ecx*1-0x22cf1700],esp
  414692:	ss data16 (bad) 
  414695:	jle    0x414668
  414697:	jo     0x414665
  414699:	pop    ecx
  41469a:	addr16 in al,dx
  41469c:	dec    ecx
  41469d:	or     DWORD PTR [eax],eax
  41469f:	inc    ecx
  4146a0:	mov    ch,0x12
  4146a2:	inc    DWORD PTR [eax]
  4146a4:	or     eax,0x508bd080
  4146a9:	jle    0x4146ee
  4146ab:	clc    
  4146ac:	jmp    0x8b13d0c7
  4146b1:	dec    ecx
  4146b2:	(bad)  
  4146b3:	jmp    DWORD PTR [edx-0x4c]
  4146b6:	jae    0x4146b4
  4146b8:	mov    eax,0x2b1be805
  4146bd:	or     eax,0x92808b00
  4146c2:	sar    bh,1
  4146c4:	mov    bh,0xdc
  4146c6:	data16 add al,0x23
  4146c9:	or     eax,0x1498e800
  4146ce:	add    BYTE PTR [eax],al
  4146d0:	sub    ebp,ecx
  4146d2:	jb     0x4146e3
  4146d4:	cdq    
  4146d5:	cli    
  4146d6:	dec    dx
  4146d8:	pop    ecx
  4146d9:	dec    esp
  4146da:	(bad)  
  4146db:	inc    BYTE PTR [eax]
	...
  414701:	add    BYTE PTR [eax],al
  414703:	add    BYTE PTR [edi-0x15ce1923],ah
  414709:	or     al,0x0
  41470b:	mov    edx,eax
  41470d:	xor    bh,dh
  41470f:	imul   esp,edx,0xf26a0032
  414715:	xor    al,BYTE PTR [ecx]
  414717:	push   0xc0000cf2
  41471c:	lods   eax,DWORD PTR ds:[esi]
  41471d:	push   edi
  41471e:	out    dx,al
  41471f:	call   0x3f8cb2
  414724:	sub    eax,DWORD PTR [edi-0x3356bf0e]
  41472a:	jae    0x414770
  41472c:	int    0x57
  41472e:	cli    
  41472f:	push   DWORD PTR [edi-0x4a001924]
  414735:	or     al,0x0
  414737:	push   0x4e
  414739:	xor    edi,esi
  41473b:	(bad)  
  41473c:	ja     0x41471a
  41473e:	out    0x73,al
  414740:	fwait
  414741:	or     al,0x0
  414743:	or     ecx,DWORD PTR [ebx-0xe]
  414746:	into   
  414747:	or     ecx,DWORD PTR [ebx]
  414749:	dec    edx
  41474a:	enter  0xa4a,0x32
  41474e:	mov    dl,0xe7
  414750:	push   0xf100022f
  414755:	xor    eax,ebp
  414757:	push   edx
  414759:	xor    ebp,eax
  41475b:	jmp    edx
  41475d:	xor    ch,dl
  41475f:	dec    DWORD PTR [edx+esi*1+0x42]
  414763:	(bad)  
  414764:	mov    esi,0x956b22
	...
  41478d:	add    BYTE PTR [eax],al
  41478f:	add    BYTE PTR [edx+esi*1+0x2],al
  414793:	mov    DWORD PTR [esi-0x5f8c3eba],ecx
  414799:	call   0x9d6a:0x328a4ab0
  4147a0:	inc    esp
  4147a1:	xor    al,BYTE PTR [edx]
  4147a3:	push   eax
  4147a4:	mov    ds:0x4b40bf04,eax
  4147a9:	addr16 fdiv st,st(3)
  4147ac:	rep outs dx,DWORD PTR ds:[esi]
  4147ae:	adc    al,0xff
  4147b0:	cld    
  4147b1:	add    DWORD PTR [ebx+0x74],edx
  4147b4:	call   FWORD PTR [ecx-0x32]
  4147b7:	push   es
  4147b8:	dec    ebx
  4147b9:	xor    ch,BYTE PTR [edx+0x6050b0a]
  4147bf:	jmp    0x414749
  4147c1:	ja     0x41479b
  4147c3:	sti    
  4147c4:	arpl   WORD PTR [esi+edi*4-0x2758b4c0],cx
  4147cb:	div    DWORD PTR [ebx-0x4300041b]
  4147d1:	mov    dl,0x47
  4147d3:	or     esp,DWORD PTR [ebx]
  4147d5:	push   es
  4147d6:	mov    edi,0x949a4b40
  4147db:	push   es
  4147dc:	dec    ebx
  4147dd:	xor    bh,ch
  4147df:	mov    edi,0xa5da5417
  4147e4:	add    BYTE PTR [ecx],cl
  4147e6:	test   al,0x3
  4147e8:	sti    
  4147e9:	xor    BYTE PTR [eax-0x1df6b4f5],dl
  4147ef:	inc    ebx
  4147f0:	clc    
  4147f1:	sbb    eax,ebx
  4147f3:	add    eax,DWORD PTR [eax]
	...
  414819:	add    BYTE PTR [eax],al
  41481b:	add    cl,ah
  41481d:	or     BYTE PTR [esi-0x27],al
  414820:	je     0x414869
  414822:	mov    bl,0x53
  414824:	in     al,dx
  414825:	add    eax,0xb15cc500
  41482a:	call   0x9b88cc81
  41482f:	dec    edi
  414830:	fs stc 
  414832:	(bad)  
  414833:	push   edx
  414834:	inc    ebp
  414835:	inc    edi
  414836:	fwait
  414837:	push   ebx
  414838:	and    al,0xf1
  41483a:	(bad)  
  41483b:	push   edx
  41483c:	xor    eax,0x244b7b47
  414841:	jmp    0x51669afc
  414846:	sub    DWORD PTR [ebx+0x664bb179],edi
  41484c:	push   esp
  41484d:	or     ecx,esp
  41484f:	aad    0x4b
  414851:	dec    edx
  414852:	fisttp QWORD PTR [esi+0x3e9094b]
  414858:	mov    esp,0xf4c52163
  41485d:	mov    al,0xe7
  41485f:	mov    edx,0x532478e4
  414864:	in     eax,0xea
  414866:	nop
  414867:	dec    edi
  414868:	sbb    DWORD PTR [ecx+0x6f],ecx
  41486b:	push   edx
  41486c:	aad    0x46
  41486e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41486f:	push   ebp
  414870:	sahf   
  414871:	add    esi,esp
  414873:	fsubr  DWORD PTR [edx+edx*4+0x4a1daea9]
  41487a:	xor    edi,DWORD PTR [edi-0x60]
  41487d:	mov    ch,BYTE PTR [ebx+edx*2+0x0]
	...
  4148a8:	sbb    DWORD PTR [ecx+0x9646593],esi
  4148ae:	add    BYTE PTR [ecx+0x76],dh
  4148b1:	or     ebx,eax
  4148b3:	outs   dx,BYTE PTR ds:[esi]
  4148b4:	int    0x5
  4148b6:	int3   
  4148b7:	pop    ss
  4148b8:	xchg   BYTE PTR [esi-0x2],al
  4148bb:	aad    0x7e
  4148bd:	mov    edi,DWORD PTR [edi*1-0x170037d6]
  4148c4:	pushf  
  4148c5:	adc    DWORD PTR [ebx+0x40f41f04],eax
  4148cb:	jmp    0x2460518
  4148d0:	pop    es
  4148d1:	jecxz  0x41489b
  4148d3:	sub    dh,BYTE PTR ds:0x41cde762
  4148d9:	or     DWORD PTR [eax],eax
  4148db:	ins    BYTE PTR es:[edi],dx
  4148dc:	add    eax,DWORD PTR [edx+0x51]
  4148df:	add    DWORD PTR [eax-0x2a],0xfffffffe
  4148e3:	hlt    
  4148e4:	je     0x4148da
  4148e6:	inc    eax
  4148e7:	jmp    0x654fcf19
  4148ec:	cwde   
  4148ed:	inc    esi
  4148ee:	(bad)  
  4148ef:	jmp    0xea391685
  4148f4:	dec    eax
  4148f5:	or     DWORD PTR [eax],eax
  4148f7:	je     0x4148fd
  4148f9:	ds dec edi
  4148fb:	push   ebx
  4148fc:	dec    edi
  4148fd:	mov    bl,0xff
  4148ff:	inc    edx
  414900:	dec    eax
  414901:	inc    esi
  414902:	je     0x4148d1
  414904:	call   0x946:0x817d41d
  41490b:	test   eax,0x0
	...
  414934:	cld    
  414935:	scas   eax,DWORD PTR es:[edi]
  414936:	out    0x39,eax
  414938:	push   edx
  414939:	or     DWORD PTR [eax],eax
  41493b:	push   0xffffff87
  41493d:	shl    BYTE PTR [ecx+ecx*1-0x3a],0xc4
  414942:	imul   ecx
  414944:	pushf  
  414945:	(bad)  
  414947:	sbb    al,0xf
  414949:	cs jg  0x414920
  41494c:	sbb    eax,DWORD PTR [edi-0x78]
  41494f:	add    BYTE PTR [edi-0x1f],bl
  414952:	mov    eax,DWORD PTR [ebp-0x36]
  414955:	jl     0x414954
  414957:	jne    0x414973
  414959:	fdiv   DWORD PTR [ebx-0xc]
  41495c:	dec    eax
  41495d:	or     bh,bh
  41495f:	jne    0x414987
  414961:	fcom   DWORD PTR [ebx]
  414963:	aam    0x54
  414965:	dec    edx
  414966:	dec    BYTE PTR [edx]
  414968:	xor    ah,BYTE PTR [ecx+0x2c]
  41496b:	mov    ebp,DWORD PTR [edi-0x8ef7623]
  414971:	dec    ebp
  414972:	out    dx,al
  414973:	push   eax
  414974:	rcr    al,0x13
  414977:	fadd   DWORD PTR [edx+ecx*2-0x2]
  41497b:	or     ah,BYTE PTR [edx]
  41497d:	popa   
  41497e:	sbb    BYTE PTR [eax+0x17],ch
  414981:	test   BYTE PTR [edi],bh
  414983:	add    BYTE PTR [ebp+0x5c],ah
  414986:	out    dx,al
  414987:	call   0x4158d4
  41498c:	sub    ecx,ecx
  41498e:	jae    0x414991
  414990:	loope  0x41496b
  414992:	jae    0x414984
  414994:	cmp    bl,BYTE PTR [esi+eax*1]
	...
  4149bf:	add    BYTE PTR [edx],dh
  4149c1:	fidiv  DWORD PTR [ebx-0xc]
  4149c4:	dec    edx
  4149c5:	inc    edx
  4149c6:	xor    edi,edi
  4149c8:	and    eax,0x1afc73da
  4149cd:	adc    al,BYTE PTR [esi]
  4149cf:	add    dl,dh
  4149d1:	(bad)
  4149d4:	stos   DWORD PTR es:[edi],eax
  4149d5:	int    0x53
  4149d7:	mov    edx,DWORD PTR [esi]
  4149d9:	mov    dl,al
  4149db:	shl    BYTE PTR [ecx+ebx*8-0x6c75ac03],0xe1
  4149e3:	inc    eax
  4149e4:	loop   0x4149b6
  4149e6:	jo     0x4149e9
  4149e8:	mov    eax,ds:0xe73d81d9
  4149ed:	and    BYTE PTR [ecx+0x0],al
  4149f0:	dec    ebx
  4149f1:	xor    dl,dh
  4149f3:	sbb    cl,al
  4149f5:	push   ebp
  4149f6:	add    DWORD PTR [ecx],ebp
  4149f8:	or     dh,BYTE PTR [edx]
  4149fa:	add    dh,BYTE PTR [ecx+edi*1-0x51]
  4149fe:	or     eax,0x3f16dcc
  414a03:	add    BYTE PTR [edi],bl
  414a05:	sub    DWORD PTR [ebx-0x3ce384c4],eax
  414a0b:	inc    DWORD PTR [ebp+ebx*2+0x778b2b05]
  414a12:	cmp    edx,eax
  414a14:	and    bh,dh
  414a16:	dec    edi
  414a17:	adc    al,0x6e
  414a19:	sbb    al,bl
  414a1b:	call   ebx
  414a1d:	ins    DWORD PTR es:[edi],dx
  414a1e:	push   esi
  414a1f:	mov    dh,0xee
  414a22:	push   eax
  414a23:	inc    BYTE PTR [eax]
	...
  414a49:	add    BYTE PTR [eax],al
  414a4b:	add    BYTE PTR [edx+ecx*1+0x3],dl
  414a4f:	add    BYTE PTR [ebx-0x68],cl
  414a52:	add    ch,BYTE PTR [edx+0x49]
  414a55:	sbb    bl,BYTE PTR [edx-0x7ccdb4fb]
  414a5b:	div    DWORD PTR [ebx+eiz*2]
  414a5e:	xchg   BYTE PTR ds:0x8902324a,bl
  414a64:	into   
  414a65:	stc    
  414a66:	push   eax
  414a67:	(bad)  
  414a68:	sbb    al,0xad
  414a6a:	test   ebx,ecx
  414a6c:	adc    eax,0xc4f4e33
  414a71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a72:	cmp    edi,ebp
  414a74:	add    al,0x63
  414a76:	pop    ebx
  414a77:	lea    eax,[ebp+0x32]
  414a7a:	add    cl,BYTE PTR [ebx]
  414a7c:	or     esp,DWORD PTR [ebx-0x7a]
  414a7f:	repnz dec ebx
  414a81:	xor    al,BYTE PTR [edx]
  414a83:	push   0xffc4f70b
  414a88:	iret   
  414a89:	mov    ah,0x53
  414a8b:	std    
  414a8c:	aam    0x72
  414a8e:	mov    bl,0xe7
  414a90:	cmp    cl,BYTE PTR [ecx]
  414a92:	out    dx,al
  414a93:	add    ecx,DWORD PTR [ebx+0x10]
  414a96:	test   eax,0xe847c8ff
  414a9b:	add    ecx,DWORD PTR [ebx+0x4c]
  414a9e:	arpl   WORD PTR [eax-0x52],cx
  414aa1:	inc    ebx
  414aa2:	test   DWORD PTR [ebx+ecx*2],eax
  414aa5:	or     ecx,ebp
  414aa7:	add    bh,0x4c
  414aaa:	jbe    0x414afb
  414aac:	xchg   ebp,eax
  414aad:	fsubr  DWORD PTR [ebp-0x67]
	...
  414ad8:	js     0x414b1c
  414ada:	gs dec edi
  414adc:	test   DWORD PTR ds:0x90a1ce8,ebx
  414ae2:	bound  edi,QWORD PTR [ecx-0x78]
  414ae5:	inc    edx
  414ae6:	dec    ebp
  414ae7:	dec    edi
  414ae8:	inc    ecx
  414ae9:	dec    ecx
  414aea:	cmc    
  414aeb:	xchg   DWORD PTR [eax+ecx*1-0x21dffc17],edi
  414af2:	cmp    al,0xff
  414af4:	iret   
  414af5:	xchg   ebx,eax
  414af6:	call   0x5b8595fe
  414afb:	cmp    BYTE PTR [esi+0x43],al
  414afe:	sbb    eax,0xe8ab3cda
  414b03:	add    ecx,DWORD PTR [ebx+0x7]
  414b06:	add    DWORD PTR [ecx],esp
  414b08:	inc    ebp
  414b09:	or     ecx,ebp
  414b0b:	cli    
  414b0c:	in     al,0xbd
  414b0e:	jg     0x414b8c
  414b10:	xchg   DWORD PTR [ecx+0x63],eax
  414b13:	leave  
  414b14:	adc    dl,bl
  414b16:	sbb    BYTE PTR [edx+0x4b],0x7
  414b1a:	jmp    0xdd82ca6d
  414b1f:	clc    
  414b20:	adc    ah,dh
  414b22:	daa    
  414b23:	add    al,0x40
  414b25:	dec    ecx
  414b26:	push   esp
  414b27:	lods   al,BYTE PTR ds:[esi]
  414b28:	in     eax,dx
  414b29:	mov    esp,0x593f4ec4
  414b2e:	push   cs
  414b2f:	(bad)
  414b32:	add    BYTE PTR [ecx-0x59bcfe04],ch
  414b38:	ret    
  414b39:	cmp    ch,0xa6
	...
  414b64:	adc    eax,0x48e9fe42
  414b69:	xchg   esp,eax
  414b6a:	test   BYTE PTR [ecx+0x39fe4306],ch
  414b70:	pop    DWORD PTR [ebx]
  414b72:	add    dh,dh
  414b74:	dec    eax
  414b75:	xor    DWORD PTR [esi-0x19],ebx
  414b78:	dec    eax
  414b79:	or     DWORD PTR [ebx],ecx
  414b7b:	test   eax,0x2c831d73
  414b80:	or     BYTE PTR [esi+edi*8+0x66],al
  414b84:	dec    eax
  414b85:	mov    ebp,0x82e35e0b
  414b8a:	std    
  414b8b:	push   esi
  414b8c:	add    eax,0x4fab0493
  414b91:	enter  0x51ff,0x39
  414b95:	sbb    DWORD PTR cs:[esi],edi
  414b98:	cmp    DWORD PTR [esi],0xffffffe7
  414b9b:	jge    0x414be9
  414b9d:	or     DWORD PTR [eax],eax
  414b9f:	cs jae 0x414bdc
  414ba2:	out    0x55,eax
  414ba4:	dec    esp
  414ba5:	or     DWORD PTR [eax],eax
  414ba7:	adc    al,BYTE PTR [eax+0x43]
  414baa:	je     0x414bbd
  414bac:	nop
  414bad:	push   0x9448e903
  414bb2:	test   BYTE PTR ds:0x99fe4396,dh
  414bb8:	lea    edi,[ebp-0x39]
  414bbb:	test   DWORD PTR [esi+0x4345e743],0x4cd00009
  414bc5:	inc    edx
  414bc6:	(bad)  
  414bc7:	fiadd  WORD PTR [eax]
	...
  414bed:	add    BYTE PTR [eax],al
  414bef:	add    BYTE PTR [esi-0x79283883],cl
  414bf5:	inc    ebx
  414bf6:	out    0x69,eax
  414bf8:	inc    ebx
  414bf9:	or     DWORD PTR [eax],eax
  414bfb:	add    BYTE PTR [ecx-0x38],bl
  414bfe:	pop    ecx
  414bff:	leave  
  414c00:	mov    cl,0x79
  414c02:	mov    esp,ebp
  414c04:	popa   
  414c05:	rcr    esi,1
  414c07:	push   ebx
  414c08:	mov    dl,BYTE PTR [ebx]
  414c0a:	in     eax,0x40
  414c0c:	mov    dl,0xcd
  414c0e:	jo     0x414c11
  414c10:	icebp  
  414c11:	rol    DWORD PTR [ecx+0x41233e3d],cl
  414c17:	add    BYTE PTR [edx-0x707cf8a7],ah
  414c1d:	lods   eax,DWORD PTR ds:[esi]
  414c1e:	sub    al,0x41
  414c20:	mov    dl,0x5
  414c22:	jne    0x414c29
  414c24:	mov    ebp,eax
  414c26:	pop    ecx
  414c27:	leave  
  414c28:	loope  0x414bf5
  414c2a:	inc    ebx
  414c2b:	cld    
  414c2c:	jb     0x414c33
  414c2e:	add    BYTE PTR [eax],al
  414c30:	and    eax,0x6200f64a
  414c35:	add    eax,0xe1a7c700
  414c3a:	(bad)  
  414c3b:	push   DWORD PTR [edx+0x5]
  414c3e:	mov    DWORD PTR [ebp+0x16],0x6200000d
  414c45:	int3   
  414c46:	inc    ebx
  414c47:	lock bound eax,QWORD PTR ds:0x48bf0000
  414c4e:	out    dx,al
  414c4f:	push   eax
  414c50:	scas   eax,DWORD PTR es:[edi]
  414c51:	dec    eax
  414c52:	repnz push eax
	...
  414c7c:	scas   eax,DWORD PTR es:[edi]
  414c7d:	dec    eax
  414c7e:	jmp    0x4e45:0x8bcdc850
  414c85:	jne    0x414cef
  414c87:	add    bh,BYTE PTR [eax+0x1d006a09]
  414c8d:	cmp    BYTE PTR [edx-0x76f31cd2],bl
  414c93:	inc    ebp
  414c94:	sbb    cl,BYTE PTR [edx+0x58f2e87b]
  414c9a:	pop    es
  414c9b:	or     DWORD PTR [ebx-0x2b],0x324be95b
  414ca2:	add    dh,BYTE PTR [ebp+0x5f]
  414ca5:	inc    edi
  414ca6:	aad    0xfb
  414ca8:	int3   
  414ca9:	in     eax,0x4b
  414cab:	adc    BYTE PTR [esi+0x7a],0x2
  414caf:	je     0x414d22
  414cb1:	stos   DWORD PTR es:[edi],eax
  414cb2:	lods   eax,DWORD PTR ds:[esi]
  414cb3:	div    DWORD PTR [eax+0x33724b27]
  414cb9:	call   0x4479:0x97b441d5
  414cc0:	stos   DWORD PTR es:[edi],eax
  414cc1:	(bad)  
  414cc2:	psubsb mm6,QWORD PTR [eax]
  414cc5:	hlt    
  414cc6:	dec    esp
  414cc7:	(bad)  
  414cc8:	push   eax
  414cc9:	jb     0x414ca1
  414ccb:	and    al,dl
  414ccd:	in     eax,dx
  414cce:	imul   edi,DWORD PTR [bx],0x84315c8a
  414cd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cd6:	dec    ebx
  414cd7:	je     0x414d44
  414cd9:	scas   eax,DWORD PTR es:[edi]
  414cda:	ret    0x7407
  414cdd:	pop    ebp
  414cde:	data16 mov es,WORD PTR [eax]
	...
  414d05:	add    BYTE PTR [eax],al
  414d07:	add    BYTE PTR [ebx],cl
  414d09:	es dec ebx
  414d0b:	xor    al,0x3f
  414d0d:	jnp    0x414cd0
  414d0f:	dec    ebp
  414d11:	xor    bl,BYTE PTR [edi+0x2710013]
  414d17:	or     DWORD PTR [eax+0x374c4b76],0xffffffb3
  414d1e:	int    0xeb
  414d20:	dec    ebx
  414d21:	xchg   ebp,eax
  414d22:	xchg   esi,edi
  414d24:	mov    esi,0xd3144c16
  414d29:	jg     0x414cec
  414d2b:	dec    DWORD PTR ds:0x1cff4e6d
  414d31:	xor    al,BYTE PTR [edx]
  414d33:	adc    DWORD PTR [esi+0xcff590a],0xf204d532
  414d3d:	or     BYTE PTR [ebp+0x4b],al
  414d40:	std    
  414d41:	aas    
  414d42:	imul   ecx,ecx,0xfd5d08f0
  414d48:	in     eax,dx
  414d49:	mov    ch,0xcc
  414d4b:	dec    ebx
  414d4c:	aas    
  414d4d:	mov    eax,ds:0x77dcc516
  414d52:	out    0x3,eax
  414d54:	dec    ebx
  414d55:	or     DWORD PTR [edx],edx
  414d57:	cmp    eax,0x5861d609
  414d5c:	leave  
  414d5d:	inc    esp
  414d5e:	mov    esp,0x23b115b7
  414d63:	bound  esi,QWORD PTR [ecx+ecx*1-0x6f]
  414d67:	(bad)  
  414d68:	dec    ebx
  414d69:	dec    esp
  414d6a:	lea    eax,[edi+0x0]
	...
  414d94:	addr16 pop ecx
  414d96:	(bad)  
  414d97:	les    ebx,FWORD PTR [edi+edi*1-0x236030c]
  414d9e:	xchg   esp,eax
  414d9f:	sbb    cl,BYTE PTR [edx]
  414da1:	or     ecx,ebp
  414da3:	ror    BYTE PTR [esi-0xc],1
  414da6:	sub    BYTE PTR [ebx+0x7f295221],ch
  414dac:	push   edi
  414dad:	adc    eax,0x306cc4a2
  414db2:	ja     0x414db9
  414db4:	dec    ebx
  414db5:	or     DWORD PTR [ecx+0x20],edx
  414db8:	pop    edi
  414db9:	aas    
  414dba:	cmp    eax,0xa2211787
  414dbf:	les    ecx,FWORD PTR [edi+edi*1-0x4c]
  414dc3:	repnz inc ebp
  414dc5:	mov    ebx,0x21774aec
  414dca:	mov    dl,0xc4
  414dcc:	xor    al,0x27
  414dce:	inc    esi
  414dcf:	pop    es
  414dd0:	dec    ebx
  414dd1:	or     edx,esp
  414dd3:	inc    ebx
  414dd4:	lahf   
  414dd5:	add    al,0x10
  414dd7:	fimul  WORD PTR [ebx+0x9]
  414dda:	jmp    0xff7edd21
  414ddf:	call   0x5c41572c
  414de4:	or     al,BYTE PTR [ebx+0x4f]
  414de7:	push   ebx
  414de8:	inc    edi
  414de9:	mov    bl,0x1
  414deb:	ficomp WORD PTR ds:0x81e96a0b
  414df1:	mov    ebx,0x62dbce03
  414df6:	sub    eax,0x28
	...
  414e1f:	add    BYTE PTR [edi+0x12],al
  414e22:	shl    BYTE PTR ds:0xe988304a,0x48
  414e29:	or     edi,edi
  414e2b:	cmp    cl,BYTE PTR [ebx+0x31]
  414e2e:	pop    ecx
  414e2f:	sub    BYTE PTR [eax],dl
  414e31:	aas    
  414e32:	mov    BYTE PTR [edi+eax*1],ah
  414e35:	aas    
  414e36:	jb     0x414e25
  414e38:	adc    BYTE PTR [ecx+eax*1],ch
  414e3b:	jmp    0xfd402788
  414e40:	adc    dh,cl
  414e42:	(bad)  
  414e43:	cli    
  414e44:	xchg   esp,eax
  414e45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e46:	jmp    edi
  414e48:	dec    eax
  414e49:	or     DWORD PTR [eax-0x17],ebp
  414e4c:	test   BYTE PTR [esi],bh
  414e4e:	(bad)  
  414e4f:	push   ecx
  414e50:	jmp    0x414e5c
  414e52:	add    cl,ch
  414e54:	jne    0x414ed4
  414e56:	jae    0x414e5a
  414e58:	or     ch,al
  414e5a:	sti    
  414e5b:	jmp    0x744157a8
  414e60:	mov    eax,DWORD PTR [edx+0x4f]
  414e63:	ror    DWORD PTR [eax-0x4d],cl
  414e66:	add    DWORD PTR [esi],esi
  414e68:	jnp    0x414ea0
  414e6a:	imul   ebp,ecx,0x2603bb91
  414e70:	cmp    esp,DWORD PTR [edx+0x2d]
  414e73:	test   al,0x48
  414e75:	adc    al,al
  414e77:	popf   
  414e78:	cs aas 
  414e7a:	je     0x414e8d
  414e7c:	and    BYTE PTR [eax+esi*1+0x0],0x45
  414e81:	shr    ecx,cl
  414e83:	xor    BYTE PTR [eax],al
	...
  414ea9:	add    BYTE PTR [eax],al
  414eab:	add    BYTE PTR ds:0x76e8f64e,dl
  414eb1:	adc    eax,0xa35ffff
  414eb6:	and    BYTE PTR [ecx-0xe],al
  414eb9:	enter  0xfc43,0xe2
  414ebd:	or     DWORD PTR [eax],eax
  414ebf:	add    BYTE PTR [edi+0x7e],ah
  414ec2:	cli    
  414ec3:	push   eax
  414ec4:	mov    BYTE PTR ds:0x5f3d026a,al
  414eca:	(bad)  
  414ecb:	(bad)  
  414ecc:	adc    DWORD PTR [ecx],ecx
  414ece:	call   DWORD PTR ds:0x4122b6
  414ed4:	test   eax,0x1b840dc9
  414ed9:	add    eax,0x7ded0000
  414ede:	(bad)  
  414edf:	and    BYTE PTR [edx+0x6fc70009],ah
  414ee5:	icebp  
  414ee6:	(bad)  
  414ee7:	push   DWORD PTR [edx-0x518c00f7]
  414eed:	rol    BYTE PTR [ebx-0x20],0x15
  414ef1:	push   esp
  414ef2:	push   es
  414ef3:	(bad)  
  414ef4:	das    
  414ef5:	test   eax,0x51a45c5
  414efa:	add    BYTE PTR [eax],al
  414efc:	(bad)  
  414efd:	enter  0xec43,0x62
  414f01:	or     DWORD PTR [eax],eax
  414f03:	add    BYTE PTR ds:0x7200ee7e,ch
  414f09:	or     DWORD PTR [eax],eax
  414f0b:	(bad)  
  414f0c:	scas   eax,DWORD PTR es:[edi]
  414f0d:	int    0xfe
  414f0f:	inc    DWORD PTR [eax]
	...
  414f35:	add    BYTE PTR [eax],al
  414f37:	add    BYTE PTR [edx+0x9],ah
  414f3a:	lea    eax,[ebp+0x5a]
  414f3d:	jne    0x414f3c
  414f3f:	jne    0x414fa7
  414f41:	(bad)  [esp+eax*1]
  414f44:	and    cl,BYTE PTR [ecx]
  414f46:	or     eax,eax
  414f48:	dec    ebx
  414f49:	sahf   
  414f4a:	jmp    0x5274:0x416a682
  414f51:	add    ecx,edi
  414f53:	repz les esp,FWORD PTR ds:0x328a28c4
  414f5a:	aas    
  414f5b:	inc    esp
  414f5c:	pop    ds
  414f5d:	xor    al,BYTE PTR [edx]
  414f5f:	add    BYTE PTR [ebx+0x57],cl
  414f62:	inc    esi
  414f64:	mov    ?,WORD PTR [esi+0x2]
  414f67:	add    BYTE PTR [ebx+0x32],cl
  414f6a:	inc    edi
  414f6b:	je     0x414f54
  414f6d:	dec    ebx
  414f6e:	in     eax,dx
  414f6f:	iret   
  414f70:	sub    eax,0xb0b03f1
  414f75:	imul   ecx
  414f77:	out    0xb0,eax
  414f79:	jl     0x414fc2
  414f7b:	dec    al
  414f7d:	sub    eax,0x320a2d3a
  414f82:	add    dh,BYTE PTR [ebp+ecx*2-0x65]
  414f86:	in     eax,dx
  414f87:	(bad)  
  414f88:	pop    ebp
  414f89:	icebp  
  414f8a:	add    eax,edi
  414f8c:	dec    esi
  414f8d:	lock sbb al,BYTE PTR [ecx+0x4b]
  414f91:	xor    DWORD PTR [edx],eax
  414f93:	add    bl,cl
  414f95:	scas   eax,DWORD PTR es:[edi]
  414f96:	(bad)
  414f99:	ds sti 
  414f9b:	inc    BYTE PTR [eax]
	...
  414fc1:	add    BYTE PTR [eax],al
  414fc3:	add    dh,bh
  414fc5:	mov    ch,0x47
  414fc7:	je     0x415048
  414fc9:	fisubr DWORD PTR ds:0x47324b02
  414fcf:	je     0x415040
  414fd1:	retf   0x43
  414fd4:	dec    ebx
  414fd5:	xor    al,BYTE PTR [esi+0x32]
  414fd8:	mov    ecx,DWORD PTR [ecx-0x4ab01b9]
  414fde:	push   esp
  414fdf:	lods   eax,DWORD PTR ds:[esi]
  414fe0:	adc    ebp,DWORD PTR [ebx]
  414fe2:	test   DWORD PTR [ecx+ebp*2-0x2f01b815],0x11fd0208
  414fed:	or     al,0x64
  414fef:	loopne 0x41501f
  414ff1:	cmp    al,0x15
  414ff3:	mov    ecx,DWORD PTR [ebx+0x9]
  414ff6:	jmp    0x3021cbfe
  414ffb:	inc    esp
  414ffc:	jg     0x414f8e
  414ffe:	or     al,0x84
  415000:	or     BYTE PTR ds:0xc8eced80,bh
  415006:	call   0xaa4bca56
  41500b:	inc    edi
  41500c:	bound  ecx,QWORD PTR [ecx]
  41500e:	shl    DWORD PTR ds:0x5be9094a,1
  415014:	out    0xfe,al
  415016:	int    0x47
  415018:	in     al,0x95
  41501a:	mov    ecx,0x88b0d547
  41501f:	push   ss
  415020:	mov    cl,BYTE PTR [ecx]
  415022:	inc    ecx
  415023:	sub    al,0x70
  415025:	retf   0x5be8
	...
  415050:	dec    edi
  415051:	add    BYTE PTR [esi-0x31ced3b9],ah
  415057:	les    ebp,FWORD PTR [ebx+eiz*4+0x90a15bf]
  41505e:	add    DWORD PTR [esi+0x62],0xe8dc853c
  415065:	jmp    0xc4c4:0x37230427
  41506c:	test   BYTE PTR [ebx],ah
  41506e:	jge    0x41507a
  415070:	jl     0x4150ad
  415072:	rcr    bh,1
  415074:	and    ecx,edx
  415076:	call   0xa8335756
  41507b:	add    esi,DWORD PTR [ebx+0x28]
  41507e:	adc    al,BYTE PTR [edi+0x5d]
  415081:	mov    al,0x60
  415083:	push   ss
  415084:	or     cl,BYTE PTR [ecx]
  415086:	rcr    DWORD PTR [eax-0x170035e0],1
  41508c:	mov    al,ds:0x842e3959
  415091:	mov    ds:0x3b0fd1fc,al
  415096:	pop    sp
  415098:	dec    edi
  415099:	enter  0xff,0x89
  41509d:	add    bh,bh
  41509f:	push   cs
  4150a0:	jg     0x4150a5
  4150a2:	cli    
  4150a3:	push   es
  4150a4:	mov    WORD PTR [edx],fs
  4150a6:	xor    al,0x3
  4150a8:	test   BYTE PTR [ebx],bh
  4150aa:	or     ch,BYTE PTR [ecx]
  4150ac:	sbb    ebx,DWORD PTR [eax]
  4150ae:	call   0xfe7ce292
  4150b3:	repnz add BYTE PTR [eax],al
	...
  4150da:	add    BYTE PTR [eax],al
  4150dc:	mov    BYTE PTR [esi+0x534ba609],dh
  4150e2:	dec    edx
  4150e3:	sub    BYTE PTR [edi+0x8],cl
  4150e6:	add    cl,ch
  4150e8:	dec    eax
  4150e9:	mov    cl,0x0
  4150eb:	call   0xd7295a38
  4150f0:	cmp    BYTE PTR [edx],bh
  4150f2:	dec    BYTE PTR [edx-0x16bf3050]
  4150f8:	jge    0x4150bf
  4150fa:	sti    
  4150fb:	call   0x6c415a4f
  415100:	mov    edi,DWORD PTR [esi]
  415102:	dec    edi
  415103:	xchg   esi,eax
  415104:	cmp    esp,DWORD PTR [ecx]
  415106:	dec    ebx
  415107:	sub    BYTE PTR [edi+0x31],al
  41510a:	push   0xb0948eb
  41510f:	test   eax,0xbcff157b
  415114:	jo     0x4150e5
  415116:	inc    eax
  415117:	jmp    0x666fa53c
  41511c:	or     eax,0xb0010443
  415121:	leave  
  415122:	(bad)  
  415123:	call   0x41415a70
  415128:	data16 hlt 
  41512a:	inc    BYTE PTR [eax]
  41512c:	or     eax,0xd3304de
  415131:	ret    
  415132:	push   si
  415134:	push   ebp
  415135:	inc    esp
  415136:	(bad)  
  415137:	out    0x31,eax
  415139:	xlat   BYTE PTR ds:[ebx]
  41513a:	std    
  41513b:	(bad)  
  41513c:	jnp    0x415105
  41513e:	push   ebx
  41513f:	mov    eax,DWORD PTR [eax]
	...
  415165:	add    BYTE PTR [eax],al
  415167:	add    BYTE PTR [esi],bh
  415169:	pop    esi
  41516a:	add    eax,0xf805f2e9
  41516f:	jb     0x4151a4
  415171:	(bad)  
  415172:	std    
  415173:	push   0x22
  415175:	fidivr WORD PTR [eax-0x47f9ddff]
  41517b:	add    dl,dh
  41517d:	add    eax,0x3a30c900
  415182:	(bad)  
  415183:	addr16 inc ebx
  415185:	fidivr WORD PTR [esi]
  415187:	add    dl,ch
  415189:	push   esi
  41518a:	inc    edx
  41518c:	std    
  41518d:	pop    esp
  41518e:	clc    
  41518f:	call   0xa42956c6
  415194:	jecxz  0x41519b
  415196:	add    al,ch
  415198:	test   al,0xc2
  41519a:	std    
  41519b:	dec    DWORD PTR [edx-0x12000f41]
  4151a1:	fcom   QWORD PTR [edx]
  4151a3:	cmc    
  4151a4:	in     eax,dx
  4151a5:	ret    
  4151a6:	out    0xfc,al
  4151a8:	xlat   BYTE PTR ds:[ebx]
  4151a9:	ret    
  4151aa:	std    
  4151ab:	cmp    DWORD PTR [edi-0x15],0x49
  4151af:	inc    ecx
  4151b0:	mov    dl,0x5
  4151b2:	je     0x4151cd
  4151b4:	and    DWORD PTR [edx],eax
  4151b6:	enter  0x632e,0x5
  4151ba:	add    BYTE PTR [esp+esi*2-0x3c],dh
  4151be:	adc    ecx,eax
  4151c0:	mov    esp,0x67c6fe46
  4151c5:	inc    edi
  4151c6:	daa    
  4151c7:	inc    ecx
  4151c8:	bound  eax,QWORD PTR [esi]
	...
  4151f2:	add    BYTE PTR [eax],al
  4151f4:	dec    ebx
  4151f5:	mov    al,0x5b
  4151f7:	(bad)  
  4151f8:	pusha  
  4151f9:	retf   0xe744
  4151fc:	add    ebx,0x44
  4151ff:	dec    BYTE PTR [eax-0x741733a9]
  415205:	and    cl,BYTE PTR [edx+0x71]
  415208:	dec    edx
  415209:	jecxz  0x41524f
  41520b:	out    0x5c,eax
  41520d:	and    DWORD PTR [edx],eax
  41520f:	add    BYTE PTR [ecx-0x6d556d3],ah
  415215:	pop    ss
  415216:	push   ebx
  415217:	and    BYTE PTR [ecx],0x2f
  41521a:	int    0x1
  41521c:	and    BYTE PTR ds:0xb023ea57,ah
  415222:	inc    esp
  415223:	inc    BYTE PTR [ebx+ecx*1]
  415226:	ins    BYTE PTR es:[edi],dx
  415227:	idiv   ah
  415229:	daa    
  41522a:	fdivr  st,st(7)
  41522c:	in     al,dx
  41522d:	push   ds
  41522e:	add    eax,DWORD PTR [eax]
  415230:	dec    ebx
  415231:	push   edi
  415232:	sbb    eax,0x3e18260
  415237:	jmp    DWORD PTR [esi]
  415239:	into   
  41523a:	stos   BYTE PTR es:[edi],al
  41523b:	inc    eax
  41523c:	dec    ebx
  41523d:	dec    edi
  41523e:	sbb    eax,0x3e17268
  415243:	jmp    FWORD PTR [esi-0x32]
  415246:	stos   BYTE PTR es:[edi],al
  415247:	inc    eax
  415248:	dec    ebx
  415249:	addr16 sbb eax,0x3e11270
  41524f:	jmp    DWORD PTR [esi+0x1e]
  415252:	stos   DWORD PTR es:[edi],eax
  415253:	inc    eax
  415254:	dec    ebx
  415255:	lahf   
  415256:	sbb    eax,0x78
	...
  41527f:	add    BYTE PTR [edx],al
  415281:	loope  0x415286
  415283:	jmp    FWORD PTR [esi+0xe]
  415286:	stos   DWORD PTR es:[edi],eax
  415287:	inc    eax
  415288:	dec    ebx
  415289:	mov    bh,0x1d
  41528b:	and    BYTE PTR [edx],0xe1
  41528e:	add    edi,edi
  415290:	es scas al,BYTE PTR es:[edi]
  415292:	test   eax,0x66094b40
  415297:	push   ds
  415298:	ret    
  415299:	shl    BYTE PTR [edi+0x64ee6403],cl
  41529f:	stos   BYTE PTR es:[edi],al
  4152a0:	or     ecx,DWORD PTR [ecx]
  4152a2:	dec    esi
  4152a3:	push   ds
  4152a4:	mov    ebx,0x4c03a7d2
  4152a9:	out    dx,al
  4152aa:	push   esp
  4152ab:	stos   BYTE PTR es:[edi],al
  4152ac:	mov    ecx,DWORD PTR [ecx]
  4152ae:	ss push ds
  4152b0:	jecxz  0x415283
  4152b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152b3:	add    esi,DWORD PTR [esi+ebp*8]
  4152b6:	test   BYTE PTR [edx+0x1e1e098b],ch
  4152bc:	jmp    0x41528f
  4152be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152bf:	add    ebx,DWORD PTR [esi+ebp*8]
  4152c2:	inc    esp
  4152c3:	stos   BYTE PTR es:[edi],al
  4152c4:	mov    ecx,DWORD PTR [ecx]
  4152c6:	push   es
  4152c7:	push   ds
  4152c8:	jecxz  0x41529b
  4152ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152cb:	add    eax,DWORD PTR [esi+ebp*8]
  4152ce:	inc    esp
  4152cf:	stos   BYTE PTR es:[edi],al
  4152d0:	mov    ecx,DWORD PTR [ecx]
  4152d2:	out    dx,al
  4152d3:	sbb    eax,0x427d1bb
  4152d8:	in     al,dx
  4152d9:	in     eax,dx
  4152da:	xchg   esp,eax
  4152db:	fisttp QWORD PTR [ebx-0x6b1629f7]
  4152e1:	shl    DWORD PTR [edi],1
  4152e3:	add    al,0x0
	...
  415309:	add    BYTE PTR [eax],al
  41530b:	add    ah,dl
  41530d:	in     eax,dx
  41530e:	test   ch,bl
  415310:	mov    ecx,DWORD PTR [ecx]
  415312:	mov    esi,0x27d204e9
  415317:	add    al,0xbc
  415319:	in     eax,dx
  41531a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41531b:	fisttp QWORD PTR [ebx]
  41531d:	or     DWORD PTR [esi+0x27d184e9],esp
  415323:	add    al,0xa4
  415325:	in     eax,dx
  415326:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415327:	fisttp QWORD PTR [ebx]
  415329:	or     DWORD PTR [esi+0x27d184e9],ecx
  41532f:	add    al,0x8c
  415331:	in     eax,dx
  415332:	xchg   esp,eax
  415333:	fisttp QWORD PTR [ebx]
  415335:	or     DWORD PTR [eax],eax
  415337:	jbe    0x4153ab
  415339:	pop    edi
  41533a:	pop    eax
  41533b:	sub    BYTE PTR [edi+0x38],cl
  41533e:	and    al,0x45
  415340:	mov    cs,eax
  415342:	call   FWORD PTR [ebp+0x72]
  415345:	push   edi
  415346:	pop    eax
  415347:	test   al,0x48
  415349:	cmp    BYTE PTR [eax*2+0x45ffc876],ah
  415350:	bound  ebp,QWORD PTR [edi]
  415352:	pop    eax
  415353:	test   al,0x48
  415355:	ss and al,0x45
  415358:	push   ds
  415359:	retf   0x2dff
  41535c:	and    ah,BYTE PTR [edi]
  41535e:	pop    eax
  41535f:	test   al,0x48
  415361:	ss and al,0x15
  415364:	push   es
  415365:	retf   0x15ff
  415368:	xor    bh,BYTE PTR [edi]
  41536a:	pop    eax
  41536b:	test   al,0x48
  41536d:	ss and al,0x5
	...
  415398:	out    dx,al
  415399:	leave  
  41539a:	(bad)  
  41539b:	std    
  41539c:	repz ss pop eax
  41539f:	test   al,0x48
  4153a1:	ss and al,0xe5
  4153a4:	push   ss
  4153a5:	retf   0xe5ff
  4153a8:	jecxz  0x4153b8
  4153aa:	pop    edx
  4153ab:	sub    BYTE PTR [edi+0x36],cl
  4153ae:	and    al,0xe5
  4153b0:	dec    cl
  4153b2:	dec    ebp
  4153b4:	jecxz  0x4153bc
  4153b6:	pop    edx
  4153b7:	sub    BYTE PTR [edi+0x36],al
  4153ba:	and    al,0xd5
  4153bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153bd:	leave  
  4153be:	push   DWORD PTR [ebp+0x285a1eb3]
  4153c4:	dec    edi
  4153c5:	ss and al,0x5
  4153c8:	(bad)  
  4153c9:	leave  
  4153ca:	call   FWORD PTR [ebp+0x285a16b3]
  4153d0:	inc    edi
  4153d1:	ss and al,0xc5
  4153d4:	jbe    0x41539f
  4153d6:	(bad)  
  4153d7:	inc    ebp
  4153d9:	and    DWORD PTR [esi],esp
  4153db:	pop    edx
  4153dc:	xor    ecx,DWORD PTR ds:0x548625ff
  4153e2:	aas    
  4153e3:	add    ch,ah
  4153e5:	and    BYTE PTR [edx],dh
  4153e7:	pop    edx
  4153e8:	mov    ds:0x2a25ff0a,eax
  4153ed:	push   edi
  4153ee:	aas    
  4153ef:	add    ch,dh
  4153f1:	and    BYTE PTR [edx],bh
  4153f3:	pop    edx
  4153f4:	mov    ds:0xa225ff0a,eax
  4153f9:	push   esp
  4153fa:	aas    
	...
  415423:	add    BYTE PTR [ebp-0xca5bddf],al
  415429:	or     edi,edi
  41542b:	and    eax,0x3f53ea
  415430:	and    DWORD PTR gs:[esi+0x5a],ecx
  415434:	repz or edi,edi
  415437:	and    eax,0x3f53da
  41543c:	inc    ebp
  41543d:	and    DWORD PTR [edx+0x5a],ebx
  415440:	jecxz  0x41544b
  415442:	jmp    DWORD PTR ds:0x3f53d2
  415448:	cmc    
  415449:	sub    eax,0x9a35a62
  41544e:	jmp    DWORD PTR ds:0x3f579a
  415454:	add    eax,0x335a6a2e
  415459:	or     eax,0x577225ff
  41545e:	aas    
  41545f:	add    BYTE PTR ds:0x735a722e,al
  415465:	or     eax,0x577a25ff
  41546a:	aas    
  41546b:	add    ch,ah
  41546d:	sub    eax,0xd635a7a
  415472:	jmp    DWORD PTR ds:0x3f572e
  415478:	dec    ebx
  415479:	lahf   
  41547a:	out    0x8b,al
  41547c:	icebp  
  41547d:	loopne 0x415482
  41547f:	jmp    DWORD PTR [esi-0x30]
  415482:	fld    QWORD PTR [eax+0x4b]
  415485:	mov    bh,0xe6
  415487:	xchg   edi,eax
	...
  4154b0:	and    ecx,esp
  4154b2:	add    edi,edi
  4154b4:	cs (bad) 
  4154b6:	fld    QWORD PTR [eax+0x4b]
  4154b9:	scas   eax,DWORD PTR es:[edi]
  4154ba:	out    0x9f,al
  4154bc:	add    DWORD PTR [ecx+0x2],esp
  4154bf:	jmp    DWORD PTR [esi]
  4154c1:	test   ch,bl
  4154c3:	inc    eax
  4154c4:	dec    ebx
  4154c5:	(bad)  
  4154c6:	out    0xa7,al
  4154c8:	icebp  
  4154c9:	pusha  
  4154ca:	add    bh,bh
  4154cc:	outs   dx,BYTE PTR ds:[esi]
  4154cd:	xchg   ch,bl
  4154cf:	inc    eax
  4154d0:	dec    ebx
  4154d1:	sti    
  4154d2:	out    0xb3,al
  4154d4:	xchg   ecx,eax
  4154d5:	popa   
  4154d6:	add    bh,bh
  4154d8:	data16 stos BYTE PTR es:[edi],al
  4154da:	fld    QWORD PTR [eax+0x4b]
  4154dd:	adc    esp,edi
  4154df:	mov    ebx,0xff026181
  4154e4:	outs   dx,BYTE PTR ds:[esi]
  4154e5:	loop   0x4154c4
  4154e7:	inc    eax
  4154e8:	dec    ebx
  4154e9:	or     esp,edi
  4154eb:	ret    
  4154ec:	mov    eax,ds:0x26ff0261
  4154f1:	jmp    0xcbe5:0x234b40dd
  4154f8:	xchg   ecx,eax
  4154f9:	loope  0x4154fe
  4154fb:	jmp    FWORD PTR [esi]
  4154fd:	jb     0x4154db
  4154ff:	inc    eax
  415500:	dec    ebx
  415501:	pop    ebx
  415502:	in     eax,0xd3
  415504:	jno    0x4154e7
  415506:	add    edi,edi
  415508:	es push 0xffffffdc
  41550b:	inc    eax
  41550c:	dec    ebx
  41550d:	jae    0x4154f4
  41550f:	fbld   TBYTE PTR [ecx]
  415511:	loope  0x415516
  415513:	inc    DWORD PTR [eax]
	...
  415539:	add    BYTE PTR [eax],al
  41553b:	add    BYTE PTR [esi+0x4e],ch
  41553e:	fadd   QWORD PTR [eax+0x4b]
  415541:	or     DWORD PTR [ebp-0x53ba6fb1],esi
  415547:	dec    edi
  415548:	nop
  415549:	inc    ebp
  41554a:	popa   
  41554b:	(bad)  
  41554c:	push   0x4a3b6a0d
  415551:	mov    dh,0xf0
  415553:	jnp    0x41553d
  415555:	or     cl,ch
  415557:	add    ecx,DWORD PTR [ecx+0x7c84e90d]
  41555d:	or     eax,0x7b30bec
  415562:	jmp    0xe488a06a
  415567:	add    ecx,eax
  415569:	xor    eax,esp
  41556b:	mov    esi,0x3e4714c
  415570:	dec    ebx
  415571:	or     DWORD PTR [ebx],ebp
  415573:	pop    es
  415574:	dec    ebx
  415575:	mov    BYTE PTR [eax+0x13],al
  415578:	mov    esi,0x4b097101
  41557d:	or     ecx,ebp
  41557f:	inc    ebp
  415580:	dec    eax
  415581:	or     DWORD PTR [edx+0x3b],ebp
  415584:	inc    esp
  415585:	mov    dh,0xf0
  415587:	jnp    0x4155cd
  415589:	or     ecx,ebp
  41558b:	add    ecx,DWORD PTR [ecx]
  41558d:	or     eax,0xc91484e9
  415592:	or     DWORD PTR [ebx],0xffffffc3
  415595:	(bad)  
  415596:	call   0xec88a09e
  41559b:	add    esi,DWORD PTR [esi]
  41559d:	mov    eax,ebp
  41559f:	add    eax,DWORD PTR [eax]
	...
  4155c5:	add    BYTE PTR [eax],al
  4155c7:	add    BYTE PTR [ebx-0x4a],cl
  4155ca:	lock jnp 0x41561d
  4155cd:	or     ecx,ebp
  4155cf:	add    ecx,DWORD PTR [ecx]
  4155d1:	or     eax,0xa4b00e9
  4155d6:	jmp    0x8142a3de
  4155db:	push   cs
  4155dc:	dec    ebx
  4155dd:	or     ecx,ebp
  4155df:	inc    ecx
  4155e0:	dec    eax
  4155e1:	or     DWORD PTR [eax],eax
  4155e3:	hlt    
  4155e4:	dec    eax
  4155e5:	pop    es
  4155e6:	add    cl,ch
  4155e8:	mov    ecx,DWORD PTR [ebx]
  4155ea:	mov    eax,0x948f9
  4155ef:	stos   DWORD PTR es:[edi],eax
  4155f0:	push   ebx
  4155f1:	or     DWORD PTR ds:0x94ce9,edi
  4155f7:	or     al,0x3f
  4155f9:	jno    0x41560c
  4155fb:	jmp    0xe6035f48
  415600:	dec    eax
  415601:	idiv   bh
  415603:	loopne 0x41564d
  415605:	or     DWORD PTR [ebp-0x1f],edi
  415608:	lock pop ss
  41560a:	add    cl,ch
  41560c:	dec    eax
  41560d:	inc    edi
  41560e:	add    ebp,ecx
  415610:	dec    ebx
  415611:	or     DWORD PTR [eax],edx
  415613:	jmp    0x91490c60
  415618:	xor    eax,0x8ae90009
  41561d:	push   es
  41561e:	add    ah,bh
  415620:	dec    eax
  415621:	jmp    0xb4d3f25
  415626:	mov    eax,0x948d1
  41562b:	sub    eax,DWORD PTR [eax]
	...
  415651:	add    BYTE PTR [eax],al
  415653:	add    BYTE PTR [ebx+0x9],dl
  415656:	cmp    eax,0xfe3308e9
  41565b:	xchg   esp,eax
  41565c:	inc    eax
  41565d:	jno    0x415678
  41565f:	jmp    0xee035fac
  415664:	dec    eax
  415665:	hlt    
  415666:	jmp    FWORD PTR [eax+0x47]
  415669:	or     DWORD PTR [ebp-0x1f],edi
  41566c:	jo     0x41567c
  41566e:	add    cl,ch
  415670:	dec    eax
  415671:	inc    edi
  415672:	add    ebp,ecx
  415674:	fld    DWORD PTR [ecx+0x3c]
  415677:	jmp    0xe6415ec4
  41567c:	stos   DWORD PTR es:[edi],eax
  41567d:	dec    ecx
  41567e:	mov    WORD PTR ds:0x8b133e,ds
  415684:	repz enter 0x2,0x31
  415689:	lea    ebx,[edx]
  41568b:	add    al,0xa2
  41568d:	push   es
  41568e:	push   DWORD PTR [ebp+0x7f]
  415691:	jg     0x415712
  415693:	adc    BYTE PTR [esi+0x33890006],dh
  415699:	push   cs
  41569a:	add    al,0x0
  41569c:	mov    ds:0x9e81c546,al
  4156a1:	or     al,BYTE PTR [eax]
  4156a3:	add    BYTE PTR [edx+0x6],bh
  4156a6:	add    BYTE PTR [eax],al
  4156a8:	sti    
  4156a9:	mov    WORD PTR [esi],cs
  4156ab:	add    al,0x62
  4156ad:	push   es
  4156ae:	cmp    DWORD PTR [esi+eax*4+0xa],0x0
  4156b3:	mov    ebx,ebx
  4156b5:	or     eax,0x4
	...
  4156de:	add    BYTE PTR [eax],al
  4156e0:	jb     0x41575c
  4156e2:	or     DWORD PTR [edx-0x13ff79d],ecx
  4156e8:	and    bh,BYTE PTR [esi-0x1]
  4156eb:	shl    DWORD PTR [esi],0x6
  4156ee:	shl    BYTE PTR [ecx],1
  4156f0:	jo     0x4156fc
  4156f2:	add    BYTE PTR [ebx+0x412a3],al
  4156f8:	and    dh,bl
  4156fa:	jae    0x415719
  4156fc:	cdq    
  4156fd:	lea    ecx,[esi]
  4156ff:	add    al,0x32
  415701:	push   es
  415702:	mov    DWORD PTR [ecx+0xa1a],eax
  415708:	loop   0x4156d4
  41570a:	jg     0x415728
  41570c:	test   BYTE PTR ds:0x5f20800,0x0
  415713:	mov    DWORD PTR [ebx+0x16],esp
  415716:	add    al,0x0
  415718:	loop   0x415798
  41571a:	xchg   DWORD PTR [eax],ebx
  41571c:	test   BYTE PTR ds:0xc853d000,0x81
  415723:	or     DWORD PTR [ebx+0x3c],0x434b0006
  41572a:	mov    dh,0x1c
  41572c:	shl    BYTE PTR [eax+0x204b0413],1
  415732:	mov    DWORD PTR [eax+0x22453],eax
  415738:	or     ebp,DWORD PTR [ebx-0x7e]
  41573b:	sbb    ecx,DWORD PTR [edi+0x20]
  41573e:	add    cl,BYTE PTR [eax]
  415740:	dec    ebx
  415741:	and    BYTE PTR [edx],al
  415743:	mov    DWORD PTR [eax],eax
	...
  415769:	add    BYTE PTR [eax],al
  41576b:	add    dl,cl
  41576d:	das    
  41576e:	push   es
  41576f:	add    BYTE PTR [ebx-0x59],cl
  415772:	mov    dl,BYTE PTR [edi]
  415774:	dec    edi
  415775:	and    BYTE PTR [edx],al
  415777:	mov    cl,BYTE PTR [edx+0x1e]
  41577a:	inc    edx
  41577b:	std    
  41577c:	mov    esp,DWORD PTR [edi-0x143f3cfe]
  415782:	out    0x3,eax
  415784:	shl    BYTE PTR [ebx-0x1a],1
  415787:	add    esi,esi
  415789:	jns    0x41575e
  41578b:	xor    bl,BYTE PTR [ebp-0x54]
  41578e:	retf   0xc1ff
  415791:	xlat   BYTE PTR ds:[ebx]
  415792:	and    dh,0x4a
  415795:	adc    DWORD PTR [eax*2-0x7d2ca932],ebp
  41579c:	xor    esp,DWORD PTR [edx]
  41579e:	mov    bl,0xef
  4157a0:	enter  0x2f0,0xbd
  4157a4:	and    al,0xe8
  4157a6:	cmp    al,0xfe
  4157a8:	into   
  4157a9:	lea    ecx,[ecx]
  4157ab:	je     0x415746
  4157ad:	jae    0x415736
  4157af:	dec    BYTE PTR [edx-0x37]
  4157b2:	pop    ds
  4157b3:	add    al,0x4b
  4157b5:	and    dh,BYTE PTR [ebp+0x13a1d018]
  4157bb:	add    al,0x4b
  4157bd:	and    cl,BYTE PTR [ecx+0x2265380]
  4157c3:	add    BYTE PTR [ebx+0x407a7009],cl
  4157c9:	add    eax,0x8ac203e9
  4157ce:	clc    
  4157cf:	pop    es
	...
  4157f8:	dec    ebx
  4157f9:	or     DWORD PTR [edx-0x7e],esp
  4157fc:	pop    esp
  4157fd:	add    eax,0x4bb503e9
  415802:	out    0xb7,eax
  415804:	inc    edx
  415805:	adc    eax,0x1
  415808:	nop
  415809:	das    
  41580a:	test   eax,0xea243c8b
  41580f:	push   ebx
  415810:	cmp    al,0xa
  415812:	push   eax
  415813:	pop    ds
  415814:	dec    edi
  415815:	or     ecx,ebp
  415817:	mov    dh,0x33
  415819:	test   BYTE PTR [edi+0x13],ah
  41581c:	dec    edi
  41581d:	or     ecx,ebp
  41581f:	mov    cl,bl
  415821:	adc    ebp,esp
  415823:	add    ecx,DWORD PTR [ebx-0x37]
  415826:	pop    edi
  415827:	jp     0x415879
  415829:	add    eax,0x8ad203e9
  41582e:	clc    
  41582f:	pop    es
  415830:	dec    ebx
  415831:	or     DWORD PTR [edx-0x7e],esi
  415834:	cmp    al,0x5
  415836:	jmp    0xeb53193e
  41583b:	pop    eax
  41583c:	inc    esi
  41583d:	dec    esp
  41583e:	pop    ss
  41583f:	sub    ecx,ecx
  415841:	push   ds
  415842:	out    0x8b,eax
  415844:	pop    esp
  415845:	mov    dh,0x5a
  415847:	fmul   DWORD PTR [ebx+0x62]
  41584a:	int3   
  41584b:	pop    es
  41584c:	dec    ebx
  41584d:	or     DWORD PTR [edx+ebx*1+0x7f889d0],ebx
  415854:	dec    ebx
  415855:	or     DWORD PTR [eax-0x7e],esp
  415858:	xor    al,0x5
  41585a:	jmp    0x415862
	...
  415883:	add    BYTE PTR [ebx+0x471f3f82],cl
  415889:	or     ecx,ebp
  41588b:	mov    cl,bl
  41588d:	sbb    BYTE PTR [eax],al
  41588f:	in     eax,dx
  415890:	dec    eax
  415891:	or     DWORD PTR [ebx+0x54068],ecx
  415897:	jmp    0x5541a2b6
  41589c:	inc    ebp
  41589d:	or     DWORD PTR [edi],0xffffffeb
  4158a0:	jbe    0x4158d0
  4158a2:	shl    DWORD PTR [ecx+0x5f],0x24
  4158a6:	add    DWORD PTR [ecx-0x2256f759],ebx
  4158ac:	mov    ah,0x2f
  4158ae:	(bad)  
  4158af:	cmp    al,0x4e
  4158b1:	test   BYTE PTR [eax-0x1d05b27],al
  4158b7:	jo     0x41587f
  4158b9:	pop    ss
  4158ba:	add    al,0xe9
  4158bc:	dec    eax
  4158bd:	leave  
  4158be:	mov    BYTE PTR [eax+0x33],dl
  4158c1:	add    eax,0x88d7e900
  4158c6:	paddsw mm1,QWORD PTR [eax+0x9]
  4158ca:	mov    esi,DWORD PTR [eax+0x57]
  4158cd:	add    eax,0xe918e900
  4158d2:	pop    esi
  4158d3:	jb     0x762a5c22
  4158d9:	aam    0x8a
  4158db:	int    0x74
  4158dd:	call   DWORD PTR [ebp+0x1a]
  4158e0:	pop    es
  4158e1:	xlat   BYTE PTR ds:[ebx]
  4158e2:	or     BYTE PTR [eax+edx*2-0x49],0x4
  4158e7:	test   BYTE PTR [eax],al
	...
  41590d:	add    BYTE PTR [eax],al
  41590f:	add    BYTE PTR [eax+0x9],dl
  415912:	add    cl,ch
  415914:	lds    esi,FWORD PTR [edx+0x37bddd23]
  41591a:	sub    dh,BYTE PTR [edx+edx*8]
  41591d:	stos   BYTE PTR es:[edi],al
  41591e:	and    ebp,ecx
  415920:	into   
  415921:	je     0x8b503469
  415927:	and    al,0xbc
  415929:	push   esp
  41592a:	mov    WORD PTR [edx+0x4f],?
  41592d:	or     DWORD PTR [eax],eax
  41592f:	add    dl,dh
  415931:	sub    al,0x18
  415933:	je     0x415921
  415935:	cmp    eax,0x782b8540
  41593a:	hlt    
  41593b:	xor    DWORD PTR [edx],0xa
  41593e:	test   ecx,ecx
  415940:	jg     0x41593f
  415942:	add    al,0xe0
  415945:	fild   WORD PTR [ecx]
  415947:	and    DWORD PTR [edx+0x3146470b],0x66
  41594e:	and    bl,BYTE PTR [ebx+esi*4]
  415951:	jns    0x41591f
  415953:	pop    edi
  415954:	push   esp
  415955:	push   eax
  415956:	pop    ecx
  415957:	ret    0xaa6
  41595a:	mov    edx,DWORD PTR [esi+ecx*2+0x9]
  41595e:	push   ebp
  41595f:	push   esi
  415960:	sbb    ebp,esi
  415962:	lds    eax,FWORD PTR [esi-0x1d186]
  415968:	mov    ds:0xe800000a,al
  41596d:	sti    
  41596e:	or     ecx,0x75
  415971:	scas   al,BYTE PTR es:[edi]
  415972:	add    DWORD PTR cs:[eax],eax
	...
  415999:	add    BYTE PTR [eax],al
  41599b:	add    BYTE PTR [edx+0xa],ah
  41599e:	push   edi
  41599f:	mov    esi,DWORD PTR [esi+0x4e]
  4159a2:	adc    al,BYTE PTR [ebx+0x57602f5]
  4159a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159a9:	add    eax,DWORD PTR [eax]
  4159ab:	add    BYTE PTR [edx+0x7f],ah
  4159ae:	shr    BYTE PTR [ebx],0x1d
  4159b1:	call   0x404d:0x3c1e0838
  4159b8:	scas   eax,DWORD PTR es:[edi]
  4159b9:	repz jae 0x4159b2
  4159bc:	mov    eax,ds:0x22041a88
  4159c1:	or     bh,bh
  4159c3:	jne    0x4159dc
  4159c5:	jg     0x41594b
  4159c7:	adc    BYTE PTR [esi],ch
  4159c9:	or     al,BYTE PTR [eax]
  4159cb:	mov    DWORD PTR [edx+edx*1+0x204b0004],ebp
  4159d2:	ret    0xcdc6
  4159d5:	sbb    edi,esi
  4159d7:	(bad)  
  4159d8:	cld    
  4159d9:	aaa    
  4159da:	add    al,BYTE PTR [eax]
  4159dc:	dec    ebx
  4159dd:	mov    ecx,0x20470f80
  4159e2:	add    cl,BYTE PTR [ebx-0x1a833]
  4159e8:	fsubr  QWORD PTR [edi-0x1d]
  4159eb:	mov    cl,ch
  4159ed:	das    
  4159ee:	(bad)  
  4159ef:	dec    esp
  4159f1:	test   eax,0x27d35f0d
  4159f6:	aaa    
  4159f7:	test   DWORD PTR [ebx+0x1c],ebx
  4159fa:	add    al,BYTE PTR [eax]
  4159fc:	adc    eax,0x7460d
	...
  415a25:	add    BYTE PTR [eax],al
  415a27:	add    BYTE PTR [ebx-0x63],cl
  415a2a:	cmp    BYTE PTR [ebx-0x1d],dh
  415a2d:	mov    ds:0xb64afe4a,al
  415a32:	pop    ss
  415a33:	add    al,0x4b
  415a35:	and    BYTE PTR [ebp+0x1b0d4268],al
  415a3b:	mov    ecx,ebp
  415a3d:	das    
  415a3e:	(bad)  
  415a3f:	(bad)  
  415a40:	jl     0x4159fa
  415a42:	adc    DWORD PTR [edi],0x4002204f
  415a48:	ret    0x17c5
  415a4b:	add    al,0x4b
  415a4d:	and    BYTE PTR [ecx+0x21c3b85],cl
  415a53:	add    al,al
  415a55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a56:	sbb    eax,DWORD PTR [ebx+ecx*2]
  415a59:	and    BYTE PTR [edi+ecx*1-0x3ec60fb7],cl
  415a60:	rcl    DWORD PTR [edx+0x1],cl
  415a63:	mov    ss,WORD PTR [edi+0x26]
  415a66:	add    al,BYTE PTR [eax]
  415a68:	mov    dh,0x59
  415a6a:	mov    eax,DWORD PTR [ebp+0x2263b]
  415a70:	ror    BYTE PTR [ecx],cl
  415a72:	outs   dx,DWORD PTR ds:[esi]
  415a73:	sbb    al,0x4f
  415a75:	or     ecx,ebp
  415a77:	ret    
  415a78:	ret    
  415a79:	pop    ebx
  415a7a:	hlt    
  415a7b:	inc    DWORD PTR [ebp*1+0x54c825f]
  415a82:	jmp    0xe0c51a8a
  415a87:	(bad)  
  415a88:	in     al,dx
  415a89:	sub    al,0x62
  415a8b:	adc    al,0x0
	...
  415ab1:	add    BYTE PTR [eax],al
  415ab3:	add    BYTE PTR [ecx+0x57],cl
  415ab6:	out    dx,al
  415ab7:	inc    ebp
  415ab8:	les    ebx,FWORD PTR [ecx]
  415aba:	call   0xe9468b48
  415abf:	add    edx,DWORD PTR [esi+0x12]
  415ac2:	bound  eax,QWORD PTR [ecx+0x3e90554]
  415ac8:	rol    BYTE PTR [ebx+0x2cb4ffe0],cl
  415ace:	sub    BYTE PTR [ebx+0x3ed0dde],cl
  415ad4:	dec    ebx
  415ad5:	and    BYTE PTR [esi+0x13],0x47
  415ad9:	or     ecx,ebp
  415adb:	mov    esi,cs
  415add:	adc    ebp,esp
  415adf:	add    ecx,DWORD PTR [ebx+0x7f]
  415ae2:	loopne 0x415ae9
  415ae4:	xchg   edx,eax
  415ae5:	sub    esp,DWORD PTR [edi-0x64176a74]
  415aeb:	mov    ecx,DWORD PTR [edi+edx*8+0x71]
  415aef:	dec    ecx
  415af0:	fs push edx
  415af2:	je     0x415b2c
  415af4:	and    BYTE PTR gs:[ebp-0x46fa837c],0x8c
  415afc:	xchg   BYTE PTR [ecx],ah
  415afe:	sub    al,0x37
  415b00:	dec    ebp
  415b01:	sub    al,0x61
  415b03:	dec    eax
  415b04:	leave  
  415b05:	sub    edx,ebp
  415b07:	rcl    cl,cl
  415b09:	cmp    dl,BYTE PTR [eax+0x78]
  415b0c:	xor    BYTE PTR [edi*1+0xa2584],ch
  415b13:	sahf   
  415b14:	xlat   BYTE PTR ds:[ebx]
  415b15:	cmp    eax,0x75e7
	...
  415b3e:	add    BYTE PTR [eax],al
  415b40:	push   esp
  415b41:	sub    edi,esi
  415b43:	(bad)  
  415b44:	repnz int3 
  415b46:	shl    ecx,0x48
  415b49:	mov    al,cl
  415b4b:	push   ss
  415b4c:	dec    ecx
  415b4d:	jnp    0x415b6a
  415b4f:	in     eax,0x48
  415b51:	or     DWORD PTR [ebp+0x18b64190],ecx
  415b57:	jb     0x415b23
  415b59:	sti    
  415b5a:	add    ebp,ecx
  415b5c:	dec    eax
  415b5d:	add    BYTE PTR [ebp-0x1d4232f],0x29
  415b64:	(bad)  
  415b65:	pop    ebp
  415b66:	sbb    esp,ebp
  415b68:	dec    eax
  415b69:	or     DWORD PTR [ecx+0x55f6f],ecx
  415b6f:	jmp    0xed58e145
  415b74:	dec    eax
  415b75:	or     DWORD PTR [edx-0x2a8b527],ecx
  415b7b:	stos   DWORD PTR es:[edi],eax
  415b7c:	xlat   BYTE PTR ds:[ebx]
  415b7d:	sti    
  415b7e:	add    BYTE PTR [edi+0x43],bl
  415b81:	add    eax,0x10dbe900
  415b86:	mov    esp,DWORD PTR [edi+0x37]
  415b89:	add    eax,0x85d7e900
  415b8e:	pop    ss
  415b8f:	in     eax,0x48
  415b91:	or     DWORD PTR [eax+0x70],eax
  415b94:	in     eax,dx
  415b95:	(bad)  
  415b97:	jmp    0xd9c6dde4
  415b9c:	fs sub edi,esi
  415b9f:	(bad)  
  415ba0:	fst    QWORD PTR [ebx]
  415ba2:	add    al,0xe9
	...
  415bcc:	dec    eax
  415bcd:	jg     0x415bde
  415bcf:	jmp    0x415bcb
  415bd1:	sub    eax,0x85f61c1
  415bd6:	mov    gs,ebp
  415bd8:	cmp    al,0x2b
  415bda:	inc    BYTE PTR [eax]
  415bdc:	test   DWORD PTR ds:0x2b12868b,0xababfffe
  415be6:	push   ss
  415be7:	add    al,0x32
  415be9:	pop    es
  415bea:	inc    eax
  415beb:	mov    DWORD PTR [ecx+edx*1+0x4],edi
  415bef:	add    BYTE PTR [edx],ah
  415bf1:	jle    0x415b77
  415bf3:	adc    dh,dh
  415bf5:	push   es
  415bf6:	add    BYTE PTR [ebx+0x40d64],cl
  415bfc:	loop   0x415b7e
  415bfe:	push   cs
  415bff:	add    dl,BYTE PTR [eax-0xd]
  415c02:	ror    BYTE PTR [eax+0x1c8e0602],0xe6
  415c09:	push   es
  415c0a:	add    BYTE PTR [ebp+0x4b],dh
  415c0d:	jle    0x415b93
  415c0f:	adc    dh,ah
  415c11:	push   es
  415c12:	add    BYTE PTR [ecx+0x40e34],cl
  415c18:	mov    dl,0x46
  415c1a:	xchg   DWORD PTR [esi-0x1d552],ebp
  415c20:	cmp    ebp,DWORD PTR [esi+ecx*1-0x74f94dfc]
  415c27:	xchg   BYTE PTR [edx+0x2a],bh
  415c2a:	(bad)  
  415c2b:	call   edx
  415c2d:	dec    DWORD PTR es:[ebp+0x0]
	...
  415c58:	mov    gs,WORD PTR [edx]
  415c5a:	(bad)  
  415c5b:	jmp    DWORD PTR [edi+0xc]
  415c5e:	mov    eax,DWORD PTR [esi-0x1d57e]
  415c64:	sti    
  415c65:	stos   DWORD PTR es:[edi],eax
  415c66:	push   ss
  415c67:	add    al,0x62
  415c69:	push   es
  415c6a:	inc    eax
  415c6b:	mov    DWORD PTR [edx+edx*1],ecx
  415c6e:	add    al,0x0
  415c70:	jb     0x415cef
  415c72:	test   BYTE PTR [eax],dl
  415c74:	pushw  es
  415c76:	add    BYTE PTR [ebx+0x40de4],cl
  415c7c:	dec    ebx
  415c7d:	and    BYTE PTR [edx+0x1f],dl
  415c80:	dec    edx
  415c81:	retf   0x416
  415c84:	dec    ebx
  415c85:	and    BYTE PTR [edi+0x12a1c018],ch
  415c8b:	add    al,0x4b
  415c8d:	and    BYTE PTR [ebx+0x2244385],cl
  415c93:	add    BYTE PTR [ebx+0x471b64b9],cl
  415c99:	and    BYTE PTR [edx],al
  415c9b:	mov    ebp,ecx
  415c9d:	das    
  415c9e:	(bad)  
  415c9f:	(bad)  
  415ca0:	cld    
  415ca1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ca2:	jl     0x415cbb
  415ca4:	dec    edi
  415ca5:	and    BYTE PTR [edx],al
  415ca7:	shr    BYTE PTR [ebx],1
  415ca9:	and    DWORD PTR [ebx+ebx*1+0x7502204f],eax
  415cb0:	inc    edx
  415cb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cb2:	jl     0x415cc3
  415cb4:	dec    edi
  415cb5:	and    BYTE PTR [edx],al
  415cb7:	mov    ebp,eax
  415cb9:	pop    es
	...
  415ce2:	add    BYTE PTR [eax],al
  415ce4:	dec    ebx
  415ce5:	loopne 0x415c71
  415ce7:	lods   eax,DWORD PTR ds:[esi]
  415ce8:	pop    edi
  415ce9:	and    al,0x2
  415ceb:	add    dl,al
  415ced:	cdq    
  415cee:	adc    eax,DWORD PTR [ebx+ecx*2]
  415cf1:	and    BYTE PTR [edi+0x21c43b5],al
  415cf7:	add    BYTE PTR [ebx+0x1],bh
  415cfa:	(bad)  
  415cfb:	pop    esp
  415cfc:	mov    DWORD PTR [edi],esi
  415cfe:	add    cl,BYTE PTR [ebx+0x55fe4407]
  415d04:	sbb    al,0xa7
  415d06:	mov    bh,0x23
  415d08:	pop    ebx
  415d09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d0a:	xor    bh,BYTE PTR [ebx+ecx*8]
  415d0d:	pop    ds
  415d0e:	add    al,BYTE PTR [eax]
  415d10:	clc    
  415d11:	dec    ebx
  415d12:	jg     0x415d12
  415d14:	dec    edi
  415d15:	das    
  415d16:	or     edi,DWORD PTR [ebx]
  415d18:	lds    eax,FWORD PTR [ebx-0x2]
  415d1b:	call   DWORD PTR [eax+ecx*1-0x23]
  415d1f:	iret   
  415d20:	push   ebp
  415d21:	push   eax
  415d22:	add    DWORD PTR [ecx+ecx*8+0x29],eax
  415d26:	out    dx,al
  415d27:	aam    0xc9
  415d29:	dec    ecx
  415d2a:	jecxz  0x415d01
  415d2c:	or     dl,BYTE PTR [edx]
  415d2e:	jmp    0xe52f242b
  415d33:	add    ecx,DWORD PTR [ebx-0x63]
  415d36:	repz neg BYTE PTR [ecx+ecx*1+0xe9803e9]
  415d3e:	push   0x25
  415d40:	dec    edx
  415d41:	xor    al,0xf8
  415d43:	test   BYTE PTR [esi+ecx*1],0xe9
  415d47:	add    eax,DWORD PTR [eax]
	...
  415d6d:	add    BYTE PTR [eax],al
  415d6f:	add    BYTE PTR [ecx+0xa],bh
  415d72:	sahf   
  415d73:	div    ah
  415d75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d76:	call   0xae4bd67e
  415d7b:	inc    edx
  415d7c:	in     al,dx
  415d7d:	adc    DWORD PTR [edx-0x66f36380],ebx
  415d83:	sub    ebp,DWORD PTR [esi]
  415d85:	and    esp,ebp
  415d87:	xor    al,0x75
  415d89:	xchg   esp,eax
  415d8a:	scas   al,BYTE PTR es:[edi]
  415d8b:	mov    BYTE PTR [ecx+esi*1+0x28bd39f4],bl
  415d92:	pop    ebx
  415d93:	mov    edi,0xd522135c
  415d98:	push   cs
  415d99:	dec    ebx
  415d9a:	lock add edi,esp
  415d9d:	xor    ah,ah
  415d9f:	cmp    DWORD PTR [ebp-0x2b7ef2d8],ebx
  415da5:	or     eax,0x9444247
  415daa:	cmp    cl,BYTE PTR [ecx-0x311f12e0]
  415db0:	push   ss
  415db1:	xchg   esp,eax
  415db2:	xchg   edi,eax
  415db3:	xor    BYTE PTR [esi+0x4b03ecf1],0x9
  415dba:	push   ss
  415dbb:	add    eax,0xe80004cf
  415dc0:	dec    eax
  415dc1:	or     DWORD PTR [ecx-0x1d7378e],eax
  415dc7:	jmp    0xddc42767
  415dcc:	and    al,0x0
  415dce:	add    al,0xda
  415dd0:	inc    edx
  415dd1:	xor    BYTE PTR [esi],dh
  415dd3:	push   edx
	...
  415dfc:	jg     0x415e25
  415dfe:	mov    dh,BYTE PTR [edi]
  415e00:	pusha  
  415e01:	clc    
  415e02:	cli    
  415e03:	ds pop edi
  415e05:	xchg   ebx,eax
  415e06:	int    0x41
  415e08:	bound  esp,QWORD PTR [edx]
  415e0a:	(bad)  
  415e0b:	cs ret 0x23cb
  415e0f:	add    edx,eax
  415e11:	jge    0x415e22
  415e13:	in     eax,0x48
  415e15:	or     DWORD PTR [edx+0x2091c22],ecx
  415e1b:	and    BYTE PTR [edx+0x4a],cl
  415e1e:	pop    esi
  415e1f:	jno    0x415e6b
  415e21:	sub    BYTE PTR [ebp-0x1d81b27],al
  415e27:	pusha  
  415e28:	mov    dh,0xeb
  415e2a:	add    ebp,ecx
  415e2c:	dec    eax
  415e2d:	(bad)  
  415e2e:	pop    esp
  415e2f:	inc    edx
  415e30:	test   DWORD PTR [eax],edx
  415e32:	add    BYTE PTR [edx+0x8],ch
  415e35:	daa    
  415e36:	add    BYTE PTR [edi-0x16fff2a5],dl
  415e3c:	retf   
  415e3d:	mov    dh,0x8
  415e3f:	cmp    al,0x3e
  415e41:	xchg   esp,eax
  415e42:	test   ecx,ebx
  415e44:	dec    esp
  415e45:	or     DWORD PTR [eax],eax
  415e47:	pusha  
  415e48:	sar    edi,1
  415e4a:	add    ebp,ecx
  415e4c:	dec    eax
  415e4d:	leave  
  415e4e:	mov    BYTE PTR [edi+0x3b],dl
  415e51:	or     eax,0x8e07e900
  415e56:	paddsw mm1,QWORD PTR [eax+0x9]
  415e5a:	mov    esp,DWORD PTR [edi+0x47]
  415e5d:	or     eax,0x0
	...
  415e86:	add    BYTE PTR [eax],al
  415e88:	bound  esp,QWORD PTR [ebp-0x2564fdfa]
  415e8e:	mov    edi,0xbe0c6a88
  415e93:	sbb    al,0x6e
  415e95:	or     eax,DWORD PTR [eax]
  415e97:	jne    0x415ee4
  415e99:	test   al,0x84
  415e9b:	adc    BYTE PTR [esi],ch
  415e9d:	or     eax,DWORD PTR [eax]
  415e9f:	mov    DWORD PTR [ebp+edx*1+0x4b220004],ebp
  415ea6:	xchg   DWORD PTR [esi+0xf26],ebp
  415eac:	fwait
  415ead:	xchg   ebx,eax
  415eae:	push   cs
  415eaf:	add    al,0x32
  415eb1:	or     ecx,DWORD PTR [ebx+0xefa86]
  415eb7:	add    BYTE PTR [edx+0x2d],dl
  415eba:	mov    ebx,edx
  415ebc:	xor    eax,DWORD PTR [edi]
  415ebe:	pop    es
  415ebf:	xor    DWORD PTR [eax],0xf
  415ec2:	push   edx
  415ec3:	mov    edx,DWORD PTR [ebp+eax*1-0x38]
  415ec7:	cli    
  415ec8:	inc    ebp
  415ec9:	fimul  DWORD PTR [ecx+0xf0286]
  415ecf:	add    BYTE PTR [edx+0x15],ch
  415ed2:	mov    eax,0xae201
  415ed7:	add    DWORD PTR [edx+edi*8+0x3],ebx
  415edb:	add    BYTE PTR [edx-0x51db635b],dh
  415ee1:	or     al,BYTE PTR [eax]
  415ee3:	sbb    DWORD PTR [ecx-0x5d000176],0x83165f
	...
  415f11:	add    BYTE PTR [eax],al
  415f13:	add    BYTE PTR [esi],dl
  415f15:	xor    DWORD PTR [esi],edx
  415f17:	add    ch,BYTE PTR [ecx]
  415f19:	data16 and bl,BYTE PTR [eax]
  415f1c:	xor    esp,DWORD PTR [esi-0xbf21734]
  415f22:	std    
  415f23:	inc    DWORD PTR [ebp+0x3b]
  415f26:	pop    ebx
  415f27:	pop    ebx
  415f28:	dec    ebx
  415f29:	jb     0x415f25
  415f2b:	dec    ebx
  415f2d:	jnp    0x415f31
  415f2f:	add    eax,0x3b4304b
  415f34:	xor    ch,ah
  415f36:	out    0x17,eax
  415f38:	retf   0x29b
  415f3b:	jge    0x415f88
  415f3d:	xor    BYTE PTR [ebx+eax*1+0x17e67422],dh
  415f44:	shl    BYTE PTR [ebx-0x1a],1
  415f47:	pop    ss
  415f48:	call   0x31ba:0xa7e740ab
  415f4f:	dec    BYTE PTR [esi+ebp*2+0x18095acf]
  415f56:	add    al,bh
  415f58:	lds    eax,FWORD PTR [edi]
  415f5a:	or     BYTE PTR [eax],al
  415f5c:	dec    ebx
  415f5d:	xor    DWORD PTR [edx],eax
  415f5f:	add    BYTE PTR [ebx-0x4f],cl
  415f62:	sub    eax,0x2304b7f
  415f67:	jae    0x415efb
  415f69:	mov    bl,0xae
  415f6b:	and    edx,DWORD PTR [ebx+0x2c]
  415f6e:	mov    ch,0x41
  415f70:	xor    BYTE PTR [esi+0x304b03e6],ch
  415f76:	mov    dh,0x39
	...
  415fa0:	repz sub DWORD PTR [esi+edi*8],ebp
  415fa4:	aam    0xaa
  415fa6:	inc    eax
  415fa7:	out    0x48,eax
  415fa9:	sub    dh,BYTE PTR [eax]
  415fab:	(bad)  
  415fac:	shl    BYTE PTR [ebp+0x1b],1
  415faf:	int3   
  415fb0:	ret    0x303e
  415fb3:	mov    DWORD PTR [edi],ecx
  415fb5:	or     al,0xc
  415fb7:	mov    edi,DWORD PTR [ebp+0x4b00063f]
  415fbd:	call   0x154:0x324a2354
  415fc4:	mov    DWORD PTR [esi],edx
  415fc6:	jl     0x415fc8
  415fc8:	mov    WORD PTR [eax],cs
  415fca:	outs   dx,DWORD PTR ds:[esi]
  415fcb:	adc    al,0x4f
  415fcd:	or     ecx,ebp
  415fcf:	jp     0x415faf
  415fd1:	in     al,dx
  415fd2:	in     al,dx
  415fd3:	add    ecx,DWORD PTR [ebx-0x39]
  415fd6:	sub    ecx,ebp
  415fd8:	mov    dl,BYTE PTR [eax]
  415fda:	jmp    0xe766f563
  415fdf:	jno    0x416021
  415fe1:	or     eax,0xb5c603e9
  415fe6:	fbstp  TBYTE PTR [esi+0x146e9233]
  415fec:	dec    edi
  415fed:	or     ecx,ebp
  415fef:	jp     0x415fb7
  415ff1:	add    ebp,ebp
  415ff3:	add    ecx,DWORD PTR [ebx-0x37]
  415ff6:	pop    edi
  415ff7:	bound  edx,QWORD PTR [eax+0xd]
  415ffa:	jmp    0xd8cd3202
  415fff:	pop    es
  416000:	dec    ebx
  416001:	or     DWORD PTR [edx-0x76],esp
	...
  41602c:	cmp    al,0xd
  41602e:	jmp    0xeb3b2136
  416033:	push   ebp
  416034:	push   es
  416035:	dec    eax
  416036:	jo     0x41604c
  416038:	dec    edx
  416039:	arpl   sp,si
  41603b:	pop    es
  41603c:	dec    ebx
  41603d:	or     DWORD PTR [edx+ecx*1+0x7d88bc0],edx
  416044:	dec    ebx
  416045:	or     DWORD PTR [eax-0x76],esi
  416048:	xor    al,0xd
  41604a:	jmp    0x3ed3eb52
  41604f:	adc    BYTE PTR [edi+0x9],al
  416052:	jmp    0xe53b2ed1
  416057:	add    ecx,DWORD PTR [ebx-0x70]
  41605a:	outs   dx,BYTE PTR ds:[esi]
  41605b:	or     ecx,DWORD PTR [edi+0x9]
  41605e:	jmp    0x6721acb6
  416063:	out    0x48,eax
  416065:	or     ecx,ebp
  416067:	mov    bh,0x1a
  416069:	nop
  41606a:	jmp    FWORD PTR [ecx+0x6a072c09]
  416070:	or     BYTE PTR [edi],al
  416072:	push   eax
  416073:	xchg   ecx,eax
  416074:	loop   0x416097
  416076:	(bad)  
  416077:	sahf   
  416078:	call   DWORD PTR [ebp+0x948ed0f]
  41607e:	mov    al,dh
  416080:	loopne 0x41608a
  416082:	add    cl,ch
  416084:	dec    eax
  416085:	or     al,BYTE PTR [esi+0x944d9]
  41608b:	pusha  
  41608c:	mov    edx,0xe903e8
	...
  4160b5:	add    BYTE PTR [eax],al
  4160b7:	add    BYTE PTR [eax-0x76],cl
  4160ba:	cli    
  4160bb:	imul   ecx,DWORD PTR [eax+0x9],0x8850da00
  4160c2:	imul   ecx,DWORD PTR ds:0xb58b0747,0x24
  4160c9:	cld    
  4160ca:	push   ecx
  4160cb:	jb     0x416057
  4160cd:	sub    al,0x63
  4160cf:	inc    eax
  4160d0:	pop    ebx
  4160d1:	and    ebx,DWORD PTR [esi-0x69]
  4160d4:	add    eax,0x48e1c1bf
  4160d9:	mov    bh,dl
  4160db:	jmp    0x9b416a2d
  4160e0:	inc    esp
  4160e1:	repnz inc ebx
  4160e3:	int    0x40
  4160e5:	mov    bh,dl
  4160e7:	jmp    0x7c3f8489
  4160ec:	shl    eax,0x43
  4160ef:	lds    edx,FWORD PTR [eax-0x70]
  4160f2:	push   ebx
  4160f3:	int    0x40
  4160f5:	mov    bh,0x8a
  4160f7:	pop    ds
  4160f8:	xor    cl,ah
  4160fa:	clc    
  4160fb:	out    0x74,al
  4160fd:	ret    
  4160fe:	pop    ebp
  4160ff:	cmp    al,0x90
  416101:	dec    ecx
  416102:	pop    es
  416103:	jmp    0xe55cc457
  416108:	dec    eax
  416109:	or     DWORD PTR [ebp+0x0],esi
  41610c:	stos   DWORD PTR es:[edi],eax
  41610d:	sahf   
  41610e:	test   BYTE PTR [eax],dl
  416110:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416111:	pop    es
  416112:	add    BYTE PTR [ecx+0x41524],cl
  416118:	mov    ds:0xae8747,al
	...
  416141:	add    BYTE PTR [eax],al
  416143:	add    BYTE PTR [esi+0x11],cl
  416146:	add    BYTE PTR [eax],al
  416148:	sti    
  416149:	mov    cl,BYTE PTR [esi]
  41614b:	add    al,0x62
  41614d:	pop    es
  41614e:	mov    eax,DWORD PTR [esi+0xb7a]
  416154:	ret    0xff2c
  416157:	mov    ebp,0xb7e
  41615c:	push   edi
  41615d:	adc    al,0x8b
  41615f:	xchg   BYTE PTR [edx+0xb],dh
  416162:	add    BYTE PTR [eax],al
  416164:	mov    ebx,0x3204168b
  416169:	pop    es
  41616a:	inc    eax
  41616b:	mov    esp,ecx
  41616d:	stc    
  41616e:	add    eax,DWORD PTR [eax]
  416170:	and    ah,BYTE PTR [esi+0x7361084]
  416176:	add    BYTE PTR [ebx+0x415a4],cl
  41617c:	and    dh,BYTE PTR [edi+0x2ab68b1e]
  416182:	push   ss
  416183:	push   edx
  416184:	jns    0x416169
  416186:	out    0xd4,al
  416188:	sub    dh,dl
  41618a:	std    
  41618b:	pop    edi
  41618c:	mov    esp,0xeac25939
  416191:	push   es
  416192:	mov    eax,DWORD PTR [esi+edx*1+0xb]
  416196:	lea    edx,[eax-0x810e]
  41619c:	cdq    
  41619d:	jge    0x4161a1
  41619f:	add    al,0xe2
  4161a1:	push   es
  4161a2:	jbe    0x4161bd
  4161a4:	cmp    DWORD PTR [ebp+0x40a],esp
	...
  4161ce:	add    BYTE PTR [eax],al
  4161d0:	mov    dl,0x6
  4161d2:	cmp    eax,ecx
  4161d4:	dec    ebx
  4161d5:	ret    0x2b08
  4161d8:	mov    ch,BYTE PTR [esi+0x6]
  4161db:	add    BYTE PTR [eax+0x71],dh
  4161de:	pop    es
  4161df:	add    BYTE PTR [ebx],dh
  4161e1:	xor    DWORD PTR [edx],eax
  4161e3:	ret    0x304f
  4161e6:	icebp  
  4161e7:	mov    edi,0x83022c89
  4161ec:	ja     0x41620e
  4161ee:	rcl    DWORD PTR [eax+edx*8+0x14],1
  4161f2:	call   0x49807f16
  4161f7:	mov    bh,BYTE PTR [edx-0x25]
  4161fa:	jl     0x416257
  4161fc:	das    
  4161fd:	inc    eax
  4161fe:	jnp    0x41625b
  416200:	daa    
  416201:	sub    bl,ch
  416203:	lods   eax,DWORD PTR ds:[esi]
  416204:	inc    ebx
  416205:	xor    al,0x2
  416207:	add    BYTE PTR [edi+ebp*4],bh
  41620a:	popa   
  41620b:	inc    DWORD PTR [eax+esi*1+0x19]
  41620f:	or     cl,dh
  416211:	mov    esp,esi
  416213:	push   DWORD PTR [eax+esi*1]
  416216:	add    cl,BYTE PTR [ebp-0x74fbf359]
  41621c:	int    0x33
  41621e:	push   es
  41621f:	add    BYTE PTR [ebx-0x4b],cl
  416222:	jp     0x416223
  416224:	lods   al,BYTE PTR ds:[esi]
  416225:	xor    DWORD PTR [edx],eax
  416227:	cmp    eax,DWORD PTR [ebx]
  416229:	pop    edx
  41622a:	adc    eax,0x61bd58b
  41622f:	add    BYTE PTR [ebx+0x27],cl
  416232:	inc    ebx
  416233:	jne    0x416235
	...
  416259:	add    BYTE PTR [eax],al
  41625b:	add    BYTE PTR [edi+0x47],cl
  41625e:	inc    ebx
  41625f:	jmp    0x784b:0x4434740
  416266:	add    eax,DWORD PTR [eax]
  416268:	lock sub eax,0xa9c0bff1
  41626e:	cli    
  41626f:	add    ecx,DWORD PTR [ebx+0x30]
  416272:	std    
  416273:	mov    ch,0x5a
  416275:	or     esi,esi
  416277:	jne    0x41628c
  416279:	or     BYTE PTR [edx-0x28],dh
  41627c:	fimul  WORD PTR [edx+eiz*2]
  41627f:	add    cl,al
  416281:	lea    ecx,[esi]
  416283:	jnp    0x4162d5
  416285:	mov    dh,BYTE PTR [ecx-0x7a]
  416288:	inc    esp
  416289:	or     eax,0x5b4403e9
  41628e:	fdivr  st,st(4)
  416290:	(bad)  
  416291:	enter  0x78e7,0x10
  416295:	jnp    0x416283
  416297:	js     0x41626f
  416299:	or     al,0xe5
  41629b:	add    ecx,DWORD PTR [ebx-0x70]
  41629e:	cld    
  41629f:	xor    BYTE PTR [ebx+0x4b03e907],0x8
  4162a6:	ja     0x4162b0
  4162a8:	inc    edi
  4162a9:	or     ecx,ebp
  4162ab:	add    al,ch
  4162ad:	adc    ch,ch
  4162af:	add    ecx,DWORD PTR [ebx-0x72]
  4162b2:	data16 or BYTE PTR [edi+0x9],cl
  4162b6:	jmp    0x6f366733
  4162bb:	add    BYTE PTR [edi+0x9],cl
  4162be:	jmp    0x416345
	...
  4162e7:	add    BYTE PTR [ebx],dh
  4162e9:	or     al,cl
  4162eb:	add    cl,BYTE PTR [ebx-0x69]
  4162ee:	in     eax,dx
  4162ef:	mov    ebx,0x7ec87d3
  4162f4:	dec    ebx
  4162f5:	or     eax,esi
  4162f7:	pop    ebp
  4162f8:	inc    esp
  4162f9:	add    eax,0x8b5403e9
  4162fe:	xchg   edx,eax
  4162ff:	sub    al,0xfd
  416301:	and    BYTE PTR [ecx-0x38],dh
  416304:	sub    cl,bl
  416306:	push   edx
  416307:	add    al,0x64
  416309:	or     ch,cl
  41630b:	call   0x7b2ffb1a
  416310:	js     0x4162f7
  416312:	mov    eax,0xff8c4318
  416317:	lock dec ecx
  416319:	adc    BYTE PTR [esi+0x94823],al
  41631f:	div    BYTE PTR [esi]
  416321:	(bad)  
  416324:	ds int 0x0
  416327:	bound  eax,QWORD PTR [esi+eax*4-0x774b9dfd]
  41632e:	cmp    al,dl
  416330:	lahf   
  416331:	mov    WORD PTR [edx-0x74f6b718],?
  416337:	addr16 test al,0xc
  41633a:	add    cl,ch
  41633c:	add    eax,0x84ae0f0c
  416341:	in     al,dx
  416342:	sbb    ebp,ecx
  416344:	jo     0x416366
  416346:	(bad)  
  416347:	rol    BYTE PTR ds:0x62399a,cl
	...
  416371:	add    BYTE PTR [eax],al
  416373:	add    BYTE PTR [edi],dh
  416375:	jecxz  0x416371
  416377:	std    
  416378:	push   esp
  416379:	lea    eax,[esi+0x9b0e9]
  41637f:	mov    dl,0xc6
  416381:	or     al,0x4
  416383:	jmp    0x7258fad0
  416388:	(bad)  
  416389:	adc    eax,DWORD PTR [ecx+ebp*8]
  41638c:	dec    eax
  41638d:	in     al,0xf7
  41638f:	fild   WORD PTR [esp+esi*8-0x9]
  416393:	inc    edx
  416394:	and    al,0xf3
  416396:	imul   DWORD PTR [eax-0x79]
  416399:	and    BYTE PTR [esi-0x18],ah
  41639c:	dec    eax
  41639d:	xor    al,0x1
  41639f:	cli    
  4163a0:	pop    edi
  4163a1:	xchg   ebx,eax
  4163a2:	add    eax,0x8c57f462
  4163a7:	in     eax,dx
  4163a8:	jmp    edx
  4163aa:	les    ebx,FWORD PTR [edx-0x32ac1ed0]
  4163b0:	or     al,0x96
  4163b2:	add    esp,DWORD PTR [eax-0x4]
  4163b5:	jmp    0x4163e2
  4163b7:	add    BYTE PTR [ecx],cl
  4163b9:	icebp  
  4163ba:	or     eax,0xab084
  4163bf:	add    BYTE PTR [edi-0x6f],ah
  4163c2:	(bad)  
  4163c3:	push   DWORD PTR [edx+0x59cd8b0b]
  4163c9:	fld    QWORD PTR [edi+0x3af94e4c]
  4163cf:	dec    esp
  4163d0:	ds inc ecx
  4163d2:	or     eax,0x63887
	...
  4163ff:	add    BYTE PTR [ecx],bl
  416401:	popa   
  416402:	and    dl,BYTE PTR [eax]
  416404:	sbb    cl,bh
  416406:	add    BYTE PTR [edx],bh
  416408:	cs and bh,dh
  41640b:	mov    ah,BYTE PTR [esi+0x29]
  41640e:	adc    bh,BYTE PTR [ebx+0xb70]
  416414:	pop    esi
  416415:	and    DWORD PTR [ecx],edi
  416417:	mov    ?,WORD PTR [esi+0x1f]
  41641a:	(bad)  
  41641b:	inc    DWORD PTR [ebp+0x7200c888]
  416421:	or     ecx,DWORD PTR [ebx+0x391b8e54]
  416427:	ficom  DWORD PTR [ecx+0x24]
  41642a:	mov    ecx,DWORD PTR [ebp+0x30]
  41642d:	mov    al,ds:0x3f162be6
  416432:	es mov ch,dh
  416435:	and    esi,edi
  416437:	cmp    DWORD PTR [ebx],esp
  416439:	pop    edx
  41643a:	add    al,0x43
  41643c:	repz das 
  41643e:	fdiv   DWORD PTR [edx+0x60]
  416441:	sahf   
  416442:	dec    edx
  416443:	and    al,0xfe
  416445:	lahf   
  416446:	push   0x24
  416448:	dec    edx
  416449:	fmul   DWORD PTR cs:[edi]
  41644c:	outs   dx,BYTE PTR ds:[esi]
  41644d:	in     al,0xfe
  41644f:	push   edx
  416451:	das    
  416452:	pop    edx
  416453:	and    al,0xf2
  416455:	pop    eax
  416456:	inc    ebp
  416457:	push   ebx
  416458:	dec    ebx
  416459:	popa   
  41645a:	jge    0x416429
  41645c:	repz ret 0xfe2d
  416460:	fcomp  QWORD PTR [ebx+0x23b7]
	...
  41648a:	add    BYTE PTR [eax],al
  41648c:	cmp    ebx,DWORD PTR [ebx-0x7eccdc31]
  416492:	aam    0x8a
  416494:	xchg   ebp,eax
  416495:	stos   DWORD PTR es:[edi],eax
  416496:	sbb    esp,edi
  416498:	fsubr  QWORD PTR [edx]
  41649a:	sub    esi,edi
  41649c:	pusha  
  41649d:	cmp    BYTE PTR [ebp+0x4b],bh
  4164a0:	addr16 sbb al,0x5
  4164a3:	in     eax,dx
  4164a4:	jecxz  0x4164a5
  4164a6:	pop    ss
  4164a7:	ret    
  4164a8:	or     eax,0x278a175f
  4164ad:	add    al,0xdc
  4164af:	rcl    BYTE PTR [ecx-0x753e82ce],0x48
  4164b6:	or     DWORD PTR [ebx],eax
  4164b8:	mov    DWORD PTR [ebx],esi
  4164ba:	mov    esi,0x4a2b5b23
  4164bf:	jne    0x416506
  4164c1:	test   eax,0x8b4323b6
  4164c6:	mov    esp,0xfe4ccd3a
  4164cb:	call   DWORD PTR [ebp+edx*1-0x40]
  4164cf:	push   edx
  4164d0:	cli    
  4164d1:	stos   BYTE PTR es:[edi],al
  4164d2:	cmp    bh,ah
  4164d4:	test   al,0x9a
  4164d6:	sub    esi,edi
  4164d8:	rcr    BYTE PTR [ebx-0x22],1
  4164db:	xadd   BYTE PTR [edi+0x1867437d],dh
  4164e2:	aam    0x4f
  4164e4:	sar    ch,1
  4164e6:	sbb    cl,BYTE PTR [edi+0x21]
  4164e9:	(bad)  
  4164ea:	sub    DWORD PTR [edx-0x75c704fd],ecx
	...
  416518:	lahf   
  416519:	or     al,0xdc
  41651b:	mov    bh,0xb0
  41651d:	mov    DWORD PTR [ecx+ebp*1-0xc],ebx
  416521:	or     BYTE PTR [eax],dl
  416523:	jle    0x416527
  416525:	dec    eax
  416526:	(bad)  
  416528:	dec    eax
  416529:	push   ebx
  41652a:	jmp    0xc50e866d
  41652f:	adc    ebx,DWORD PTR [ecx+0xd]
  416532:	jb     0x416503
  416534:	sub    ch,dh
  416536:	outs   dx,DWORD PTR ds:[esi]
  416537:	iret   
  416538:	sub    BYTE PTR [ecx],al
  41653a:	pusha  
  41653b:	(bad)  
  41653c:	push   0xbc825bf9
  416541:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416542:	out    0x3,eax
  416544:	jo     0x4164cd
  416546:	in     al,0xff
  416548:	lods   al,BYTE PTR ds:[esi]
  416549:	sbb    eax,0x86d00c5e
  41654e:	fdiv   st(7),st
  416550:	pushf  
  416551:	sbb    eax,0x51e2c01
  416556:	adc    ch,BYTE PTR [ecx+eiz*4]
  416559:	or     al,0x2
  41655b:	sub    al,0xcb
  41655d:	inc    ebp
  41655e:	call   0x924ab0fe
  416563:	push   es
  416564:	cmp    BYTE PTR [esi],bl
  416566:	jno    0x416562
  416568:	rcr    esp,0x4f
  41656b:	jge    0x41653b
  41656d:	call   0xa8c6956
  416572:	scas   al,BYTE PTR es:[edi]
  416573:	test   eax,esp
  416575:	in     al,0xdc
  416577:	add    dl,bh
  416579:	cli    
  41657a:	imul   ebp,DWORD PTR [ecx],0x0
	...
  4165a1:	add    BYTE PTR [eax],al
  4165a3:	add    BYTE PTR [ebp-0x7a],dl
  4165a6:	sub    bh,BYTE PTR cs:0xc3fc511d
  4165ad:	int    0x4
  4165af:	or     al,0xc2
  4165b1:	mov    ebp,0xc5d0140c
  4165b6:	add    al,0xe0
  4165b8:	shl    DWORD PTR [ebp-0x323febf4],1
  4165be:	add    al,0xc
  4165c0:	ins    BYTE PTR es:[edi],dx
  4165c1:	mov    ebx,0xcc8193ff
  4165c6:	add    esp,DWORD PTR [eax-0x1]
  4165c9:	mov    edi,0x475f2d82
  4165ce:	psubsw mm0,mm7
  4165d1:	xor    BYTE PTR [edi],dh
  4165d3:	push   0xffffffb3
  4165d5:	call   0x903c4f1d
  4165da:	lock jl 0x4165ae
  4165dd:	xlat   BYTE PTR ds:[ebx]
  4165de:	mov    edi,0x3748c79f
  4165e3:	sub    edx,DWORD PTR [edi+0x9]
  4165e6:	mov    esp,DWORD PTR [ebp-0x567b2364]
  4165ec:	in     eax,0x12
  4165ee:	xor    DWORD PTR [ecx-0x527d419d],0xffffffb0
  4165f5:	dec    edx
  4165f6:	pop    ss
  4165f7:	jmp    0x2d65361b
  4165fc:	adc    al,0x51
  4165fe:	jae    0x4165cf
  416600:	(bad)  
  416602:	and    esp,DWORD PTR ds:0xc7733a04
	...
  416630:	add    DWORD PTR [esi+0x948ed13],eax
  416636:	dec    eax
  416637:	jo     0x416603
  416639:	cld    
  41663a:	add    ebp,ecx
  41663c:	dec    eax
  41663d:	xchg   edx,eax
  41663e:	(bad)  
  41663f:	stc    
  416640:	pop    esp
  416641:	sbb    al,0xfe
  416643:	inc    ecx
  416644:	xor    bl,BYTE PTR [edi]
  416646:	in     eax,dx
  416647:	push   edx
  416648:	push   edi
  416649:	push   ecx
  41664a:	push   esi
  41664b:	out    0xba,al
  41664d:	popa   
  41664e:	(bad)  
  41664f:	fmul   DWORD PTR [ecx]
  416651:	sbb    al,0xcf
  416653:	sub    DWORD PTR [edi],edi
  416655:	inc    ebx
  416656:	push   cs
  416657:	xchg   edi,eax
  416658:	mov    eax,ds:0x48a81009
  41665d:	cmp    bh,BYTE PTR [edi-0x49f475e6]
  416663:	add    bl,cl
  416665:	add    eax,0xb7224110
  41666a:	mov    esi,0xb4213533
  41666f:	mov    ecx,0x40f7f1
  416674:	xor    ecx,eax
  416676:	add    ecx,0x81c514e6
  41667c:	cmp    ecx,DWORD PTR [eax]
  41667e:	add    DWORD PTR [eax],eax
  416680:	repnz push ebp
  416682:	mov    DWORD PTR [ebp-0x447cdede],0x530007db
  41668c:	sub    edi,edx
  41668e:	mov    WORD PTR [esi-0x5a],cs
  416691:	xchg   al,al
  416693:	sbb    BYTE PTR [eax],al
	...
  4166b9:	add    BYTE PTR [eax],al
  4166bb:	add    dl,al
  4166bd:	or     DWORD PTR [eax],eax
  4166bf:	mov    edi,0x4a2
  4166c4:	das    
  4166c5:	dec    ebp
  4166c6:	call   DWORD PTR [ebx+ebp*1-0xa]
  4166ca:	xor    al,al
  4166cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166cd:	pop    es
  4166ce:	add    BYTE PTR [eax],al
  4166d0:	mov    ds:0x36c7279e,al
  4166d5:	or     al,BYTE PTR [eax]
  4166d7:	add    BYTE PTR [edx+0x7],dh
  4166da:	add    BYTE PTR [ebx+0x3d08a2],al
  4166e0:	popw   es
  4166e2:	add    BYTE PTR [edx-0x32],dh
  4166e5:	test   eax,eax
  4166e7:	add    BYTE PTR [esi+0x7],ah
  4166ea:	add    BYTE PTR [ebx-0x4d4f75d],al
  4166f0:	push   edi
  4166f1:	int    0x89
  4166f3:	mov    fs,WORD PTR [esi]
  4166f5:	sbb    edi,esi
  4166f7:	jmp    FWORD PTR [ecx-0x52377cf5]
  4166fd:	pushf  
  4166fe:	test   BYTE PTR [esi+eiz*1],ah
  416701:	pop    es
  416702:	add    BYTE PTR [ecx+0x3fba24b],cl
  416708:	dec    ebx
  416709:	xor    BYTE PTR [ebx-0x63],bh
  41670c:	dec    edi
  41670d:	sub    al,0x2
  41670f:	add    dl,al
  416711:	call   0x397b:0x304b03f7
  416718:	sar    BYTE PTR [edx+0x304b040f],1
  41671e:	jns    0x4166b5
	...
  416748:	pop    ebx
  416749:	and    al,0x2
  41674b:	add    dl,dl
  41674d:	mov    dl,0xdb
  41674f:	add    ecx,DWORD PTR [ebx+0x30]
  416752:	js     0x41675c
  416754:	ret    0xde6c
  416757:	sbb    eax,eax
  416759:	ficom  WORD PTR fs:[ebx-0x2d]
  41675d:	add    ebx,DWORD PTR es:[esi+0x22457]
  416764:	dec    edx
  416765:	adc    BYTE PTR [edx],0x4
  416768:	dec    ebx
  416769:	xor    BYTE PTR [edx+0x140c2788],bh
  41676f:	mov    DWORD PTR [edi],ebx
  416771:	add    al,0xc
  416773:	mov    DWORD PTR [ebp-0x730001dc],esi
  416779:	cdq    
  41677a:	(bad)  
  41677b:	and    esp,DWORD PTR [ebx]
  41677d:	pop    ss
  41677e:	inc    ecx
  41677f:	push   cs
  416780:	lds    ebx,FWORD PTR [edi-0x3]
  416783:	push   DWORD PTR [ebp+edx*4-0x77]
  416787:	jmp    FWORD PTR [eax+esi*1+0x2]
  41678b:	mov    ecx,DWORD PTR [edi]
  41678d:	dec    esp
  41678e:	mov    BYTE PTR [ebx+ecx*4+0x78ae9f4],0x4c
  416796:	or     al,BYTE PTR [ecx-0x3e]
  416799:	in     al,dx
  41679a:	fist   WORD PTR [edi]
  41679c:	iret   
  41679d:	push   0xf3d02caf
  4167a2:	fistp  WORD PTR [edi-0x40]
  4167a5:	or     BYTE PTR [edi+0x13],dh
  4167a8:	inc    edi
  4167a9:	or     ecx,ebp
  4167ab:	fiadd  DWORD PTR [eax]
	...
  4167d1:	add    BYTE PTR [eax],al
  4167d3:	add    BYTE PTR [eax-0x2e2e471b],dl
  4167d9:	jb     0x4167cf
  4167db:	call   DWORD PTR [edx+ebx*1]
  4167de:	adc    eax,edx
  4167e0:	push   0x907a97b9
  4167e5:	in     eax,0x94
  4167e7:	rcr    DWORD PTR [ebx+0x882181a],1
  4167ed:	stc    
  4167ee:	imul   eax,DWORD PTR [ebx+0x3d],0xffffff85
  4167f2:	xchg   ebx,eax
  4167f3:	(bad)  
  4167f4:	in     al,0x19
  4167f6:	rol    edi,1
  4167f8:	sub    ch,bh
  4167fa:	xchg   ebx,eax
  4167fb:	adc    eax,eax
  4167fd:	lods   al,BYTE PTR ds:[esi]
  4167fe:	int3   
  4167ff:	mov    edi,0xc3c4b4c1
  416804:	shr    DWORD PTR [esp+ecx*8-0x3b4b2c29],cl
  41680b:	(bad)  [ecx+0x68c071f9]
  416811:	mov    ch,0x71
  416813:	jbe    0x41684d
  416815:	add    eax,0x467003e9
  41681a:	cmp    cl,dl
  41681c:	sti    
  41681d:	mov    ebx,DWORD PTR [eax+eiz*8]
  416820:	pop    eax
  416821:	mov    bh,0x71
  416823:	ss ins BYTE PTR es:[edi],dx
  416825:	test   DWORD PTR [ecx+0x3c8d7d25],esi
  41682b:	loopne 0x41684d
  41682d:	xchg   BYTE PTR [ebx+0x468d3c02],ah
  416833:	jmp    DWORD PTR [ecx+ebx*1+0x61]
  416837:	jle    0x416839
	...
  41685d:	add    BYTE PTR [eax],al
  41685f:	add    BYTE PTR [eax],ch
  416861:	add    eax,0xc48c03e9
  416866:	int3   
  416867:	cmovnp ecx,DWORD PTR [ecx]
  41686a:	jmp    0xeea72
  41686f:	int3   
  416870:	and    BYTE PTR [esi+0x96e6a61],bl
  416876:	movq   mm3,QWORD PTR [ecx]
  416879:	or     al,0x0
  41687b:	jmp    0x116535b1
  416880:	push   ss
  416881:	lea    eax,[edi-0x16]
  416884:	dec    eax
  416885:	or     DWORD PTR [ebx+0x5708ecad],ecx
  41688b:	adc    cl,BYTE PTR [esi+0x35624fbb]
  416891:	xor    cl,ah
  416893:	xor    eax,0xb58a172e
  416898:	or     al,0xe1
  41689a:	push   esi
  41689b:	mov    eax,0x318a4663
  4168a0:	aas    
  4168a1:	pop    esp
  4168a2:	test   BYTE PTR [esi],0x2e
  4168a5:	rol    edx,cl
  4168a7:	not    BYTE PTR [ebp-0xb]
  4168aa:	add    ch,cl
  4168ac:	dec    eax
  4168ad:	test   BYTE PTR [ebx-0x33],al
  4168b0:	mov    al,0xd5
  4168b2:	jmp    ebx
  4168b4:	dec    eax
  4168b5:	or     DWORD PTR [eax+esi*8-0x35],edi
  4168b9:	pop    ss
  4168ba:	add    esi,ebp
  4168bc:	and    al,0x1
  4168be:	add    ebp,ecx
  4168c0:	dec    eax
  4168c1:	(bad)  
  4168c2:	dec    DWORD PTR [ebx+0x0]
	...
  4168e9:	add    BYTE PTR [eax],al
  4168eb:	add    BYTE PTR [edi+0x9],cl
  4168ee:	jl     0x4168e0
  4168f0:	retf   
  4168f1:	pop    ss
  4168f2:	add    ch,dh
  4168f4:	add    al,0x11
  4168f6:	add    ecx,ebp
  4168f8:	dec    eax
  4168f9:	test   BYTE PTR [ebx+0x5],bl
  4168fc:	xchg   DWORD PTR [ebx-0x7c8332bd],eax
  416902:	xchg   ebp,eax
  416903:	cmc    
  416904:	fs sbb dh,bh
  416907:	ret    0x810b
  41690a:	inc    ebx
  41690b:	lds    ebp,FWORD PTR [eax-0x30]
  41690e:	dec    edi
  41690f:	add    bh,dl
  416911:	push   eax
  416912:	call   DWORD PTR [eax+0x70]
  416915:	cmp    ecx,DWORD PTR [ebx+0x4e600e44]
  41691b:	mov    edx,esp
  41691d:	repz (bad) 
  416920:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416921:	in     eax,dx
  416922:	mov    DWORD PTR [esi+ecx*2+0x35],ecx
  416926:	aaa    
  416927:	dec    esp
  416928:	dec    esi
  416929:	dec    ebp
  41692a:	mov    eax,DWORD PTR [ebx+0x23]
  41692d:	xchg   ebx,eax
  41692e:	inc    edx
  41692f:	and    al,0x26
  416931:	inc    edi
  416932:	jp     0x41696d
  416934:	jns    0x4168f1
  416936:	push   eax
  416937:	mov    esp,DWORD PTR [esp+esi*8]
  41693a:	inc    edx
  41693b:	mul    DWORD PTR ds:0xfe4c89ed
  416941:	dec    ebx
  416942:	xchg   DWORD PTR [esi+ecx*1+0x38],eax
  416946:	mov    DWORD PTR [esi+ecx*1+0x58],eax
  41694a:	dec    esi
  41694b:	push   ecx
  41694c:	imul   ebx,esi,0x2fe6
	...
  416976:	add    BYTE PTR [eax],al
  416978:	int    0xeb
  41697a:	std    
  41697b:	mov    esi,esi
  41697d:	aaa    
  41697e:	and    ch,BYTE PTR [ebx]
  416980:	push   0x9
  416982:	leave  
  416983:	mov    eax,0x38e19dfb
  416988:	(bad)  
  416989:	in     eax,0xcf
  41698b:	cli    
  41698c:	sbb    edi,ecx
  41698e:	mov    edi,0xc20e95e8
  416993:	jmp    0x4169c7
  416995:	mov    BYTE PTR [edx+0x24],cl
  416998:	ss pop esi
  41699a:	mov    esi,ecx
  41699c:	call   0x5287:0xb5fff705
  4169a3:	and    al,0x2e
  4169a5:	mov    dh,dl
  4169a7:	mov    ebx,DWORD PTR [esi]
  4169a9:	and    DWORD PTR [esi],edi
  4169ab:	push   edx
  4169ac:	and    cl,BYTE PTR [eax+0x784be8cc]
  4169b2:	sbb    esi,edi
  4169b4:	push   esp
  4169b5:	dec    edx
  4169b6:	cmp    cl,BYTE PTR [edx+0x23bf9a88]
  4169bc:	mov    ds:0x48e186a9,eax
  4169c1:	and    eax,DWORD PTR [eax+eax*8+0x33]
  4169c5:	and    eax,DWORD PTR ds:0xdd646744
  4169cb:	out    0xa6,eax
  4169cd:	sbb    BYTE PTR [ecx+0x43],cl
  4169d0:	addr16 adc al,0x3
  4169d3:	add    BYTE PTR [ebx+0x20],cl
  4169d6:	xchg   esi,edi
  4169d8:	xchg   ebp,eax
  4169d9:	or     ch,bl
  4169db:	imul   eax,DWORD PTR [eax],0x0
	...
  416a02:	add    BYTE PTR [eax],al
  416a04:	das    
  416a05:	ins    BYTE PTR es:[edi],dx
  416a06:	sahf   
  416a07:	das    
  416a08:	shr    BYTE PTR [esi+eiz*8+0x27],1
  416a0c:	sahf   
  416a0d:	jno    0x41699c
  416a0f:	int    0xe3
  416a11:	scas   al,BYTE PTR es:[edi]
  416a12:	sbb    esi,edi
  416a14:	in     al,0x9b
  416a16:	mov    bh,0x23
  416a18:	xchg   DWORD PTR [ebx+0x4c8f8a3b],ebp
  416a1e:	ret    0x7b51
  416a21:	fwait
  416a22:	push   ecx
  416a23:	out    0xf0,eax
  416a25:	push   ds
  416a26:	and    esi,edi
  416a28:	and    bl,0x8e
  416a2b:	pop    ebx
  416a2c:	outs   dx,DWORD PTR ds:[esi]
  416a2d:	js     0x4169ce
  416a2f:	pop    es
  416a30:	test   ah,ah
  416a32:	out    0x13,eax
  416a34:	dec    edx
  416a35:	and    BYTE PTR [edx],al
  416a37:	add    dh,al
  416a39:	aas    
  416a3a:	xchg   edi,eax
  416a3b:	dec    esp
  416a3c:	push   edx
  416a3d:	aam    0xe7
  416a3f:	inc    ebx
  416a40:	push   cs
  416a41:	out    0x8e,eax
  416a43:	lea    ebx,[edi+0x2c]
  416a46:	add    al,BYTE PTR [eax]
  416a48:	icebp  
  416a49:	and    BYTE PTR [ebp+0x2a76c050],dh
  416a4f:	sahf   
  416a50:	js     0x416a5b
  416a52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a53:	and    dl,cl
  416a55:	mov    ebp,0x31d1c7c4
  416a5a:	popa   
  416a5b:	(bad)  
  416a5c:	sub    cl,cl
  416a5e:	cmp    dh,BYTE PTR [ecx+eax*8+0x3eb09047]
  416a65:	push   ss
  416a66:	jge    0x4169f6
	...
  416a90:	nop
  416a91:	in     eax,dx
  416a92:	sar    BYTE PTR [eax-0x6f617d65],0x90
  416a99:	icebp  
  416a9a:	out    0x2b,eax
  416a9c:	sbb    BYTE PTR [edi],0x5d
  416a9f:	and    ah,BYTE PTR [ecx+0x31]
  416aa2:	popa   
  416aa3:	mov    edi,0xdceb168
  416aa8:	add    al,0xcd
  416aaa:	or     al,0xf8
  416aac:	add    al,0x16
  416aae:	call   0x6a435ab6
  416ab3:	lahf   
  416ab4:	sub    ch,bh
  416ab6:	call   0xe98830cd
  416abb:	add    ecx,DWORD PTR [ebx-0x76]
  416abe:	sbb    eax,DWORD PTR ds:0x441874c
  416ac4:	dec    ebx
  416ac5:	or     DWORD PTR [edx-0x49],esp
  416ac8:	sub    cl,ch
  416aca:	jno    0x416a55
  416acc:	pop    eax
  416acd:	or     eax,0x4ac803e9
  416ad2:	div    BYTE PTR [ecx+ecx*8-0x364915b7]
  416ad9:	dec    eax
  416ada:	jmp    0xfbe0:0x4c4d7b3
  416ae1:	and    DWORD PTR [esi-0x32f03bd4],0xcccc121
  416aeb:	aam    0x41
  416aed:	int    0x4
  416aef:	in     al,dx
  416af0:	sar    DWORD PTR [edi+edi*8+0xc],1
	...
  416b1b:	add    BYTE PTR [ebx-0x48607549],dl
  416b21:	xchg   ecx,eax
  416b22:	and    dl,BYTE PTR [ecx-0x6101e2bc]
  416b28:	into   
  416b29:	cmp    eax,0xed632d8a
  416b2e:	push   esp
  416b2f:	cmp    DWORD PTR [esi+0x5c97e743],edi
  416b35:	adc    edi,esi
  416b37:	rol    BYTE PTR [edi+0x4e8b8271],cl
  416b3d:	or     dl,al
  416b3f:	bound  edi,QWORD PTR [edi+0x49]
  416b42:	clc    
  416b43:	jmp    0x416bbc
  416b45:	loop   0x416b2e
  416b47:	inc    ebx
  416b48:	xor    al,0x13
  416b4a:	(bad)  
  416b4b:	bound  edx,QWORD PTR [edi+0x7f]
  416b4e:	inc    ebx
  416b4f:	add    eax,0x724fbe1f
  416b54:	cdq    
  416b55:	sub    al,0xca
  416b57:	xor    al,0x2a
  416b59:	adc    ecx,DWORD PTR [edx+0x23fe621]
  416b5f:	and    BYTE PTR [edi-0x268d5edf],cl
  416b65:	sbb    ebp,eax
  416b67:	cmp    BYTE PTR ds:0x2028c97f,bh
  416b6d:	repz add ah,BYTE PTR [ebx]
  416b70:	mov    esi,0x4fbd23c8
  416b75:	inc    ecx
  416b76:	cmp    dl,BYTE PTR [eax]
  416b78:	fmul   QWORD PTR [edi+eax*8]
  416b7b:	lods   eax,DWORD PTR ds:[esi]
  416b7c:	lods   al,BYTE PTR ds:[esi]
  416b7d:	clc    
  416b7e:	add    cl,ch
	...
  416ba8:	dec    eax
  416ba9:	or     DWORD PTR [ebp+0x3aecc2e6],eax
  416baf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bb0:	mov    esp,0xa33d8ae8
  416bb5:	in     al,0x4f
  416bb7:	cmp    edi,DWORD PTR [esi-0x3ff18ba]
  416bbd:	cli    
  416bbe:	std    
  416bbf:	(bad)  
  416bc0:	stc    
  416bc1:	iret   
  416bc2:	mov    DWORD PTR [esi+eax*2+0x25],eax
  416bc6:	push   ebx
  416bc7:	push   eax
  416bc8:	jmp    0xc7c15286
  416bcd:	jmp    0xf9cba7cf
  416bd2:	mov    eax,DWORD PTR [edx]
  416bd4:	popa   
  416bd5:	or     BYTE PTR [eax],al
  416bd7:	cmp    DWORD PTR [esi],0x21
  416bda:	adc    al,BYTE PTR [eax]
  416bdc:	cmp    eax,0x3202f58b
  416be1:	or     BYTE PTR [ebx-0x7206de03],al
  416be7:	aam    0x22
  416be9:	or     BYTE PTR [eax],al
  416beb:	mov    ebx,esi
  416bed:	sub    ebx,DWORD PTR [esi]
  416bef:	mov    edx,esi
  416bf1:	sub    edx,DWORD PTR [esi-0x75]
  416bf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bf5:	sbb    al,0x2
  416bf7:	add    BYTE PTR [edx],ah
  416bf9:	lea    edi,[edi-0x3f731c03]
  416bff:	add    esp,eax
  416c01:	mov    WORD PTR [esi+0x4a82d203],?
  416c07:	and    al,0xde
  416c09:	push   esi
  416c0a:	mov    esi,ecx
	...
  416c34:	cmp    ch,BYTE PTR [edi-0x7ac2000a]
  416c3a:	inc    edx
  416c3b:	and    al,0xf2
  416c3d:	test   BYTE PTR [edx+0x24],dl
  416c40:	test   BYTE PTR [edx+ebx*2-0x3ecb65dc],0x52
  416c48:	cmp    DWORD PTR [edx-0x207883b2],edi
  416c4e:	and    dh,ch
  416c50:	popf   
  416c51:	repz push ebx
  416c53:	push   ebx
  416c54:	sbb    ebx,eax
  416c56:	xchg   DWORD PTR [esi+eax*2+0x19],eax
  416c5a:	out    0x17,al
  416c5c:	dec    ebx
  416c5d:	xor    eax,0xf5c0fe1e
  416c62:	out    0x23,eax
  416c64:	xor    BYTE PTR [ecx+0x7c],ah
  416c67:	sub    BYTE PTR [ecx+0x1e],0x1
  416c6b:	ret    0x69c0
  416c6e:	inc    esp
  416c6f:	clc    
  416c70:	dec    ecx
  416c71:	inc    edi
  416c72:	out    dx,eax
  416c73:	out    0x64,eax
  416c75:	jne    0x416c95
  416c77:	(bad)  
  416c78:	test   dh,0x8a
  416c7b:	int    0xc2
  416c7d:	in     eax,0xe7
  416c7f:	sub    esp,DWORD PTR [ebx+0x6f]
  416c82:	pop    ss
  416c83:	inc    BYTE PTR [eax+ebx*4+0x4b]
  416c87:	mov    al,BYTE PTR [edi+0x32ae64c]
  416c8d:	and    BYTE PTR [ebx-0x49],cl
  416c90:	and    bh,BYTE PTR [edi-0x45e3d276]
  416c96:	xor    al,0xf9
	...
  416cc0:	rcl    dh,1
  416cc2:	inc    esp
  416cc3:	call   0x8a898bfc
  416cc8:	xchg   DWORD PTR [eax+ebx*8],ecx
  416ccb:	add    dl,BYTE PTR [ebx]
  416ccd:	or     BYTE PTR ds:0xc7eb537c,ch
  416cd3:	and    ebx,DWORD PTR [edi+0x21]
  416cd6:	add    al,BYTE PTR [eax]
  416cd8:	dec    ebx
  416cd9:	lods   eax,DWORD PTR ds:[esi]
  416cda:	push   ds
  416cdb:	jne    0x416d10
  416cdd:	daa    
  416cde:	inc    edi
  416cdf:	jnp    0x416d08
  416ce1:	xchg   edi,eax
  416ce2:	mov    bh,0x23
  416ce4:	sbb    edx,DWORD PTR [eax-0x50]
  416ce7:	mov    bh,ch
  416ce9:	or     BYTE PTR [ebp-0xd],dl
  416cec:	les    ecx,FWORD PTR [ebx]
  416cee:	mov    edx,edi
  416cf0:	shr    BYTE PTR [esi+eiz*8+0x27],1
  416cf4:	push   ds
  416cf5:	jo     0x416c80
  416cf7:	int    0xa3
  416cf9:	mov    esi,0x9a4fe17
  416cfe:	and    bh,BYTE PTR [ecx*2+0x4b020385]
  416d05:	or     DWORD PTR [edx-0x61],ebp
  416d08:	push   0xce0ee8fd
  416d0d:	out    dx,eax
  416d0e:	jmp    0x1ce8:0x1c7e4b03
  416d15:	mov    WORD PTR [ebp-0x186138f2],?
  416d1b:	add    ecx,DWORD PTR [ebx-0x7a]
  416d1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d1f:	add    al,0x4c
  416d21:	mov    edi,DWORD PTR [eax]
  416d23:	add    eax,0x0
	...
  416d4c:	dec    ebx
  416d4d:	or     DWORD PTR [edx-0x49],esp
  416d50:	sub    BYTE PTR [ebp+0x3e714e61],bh
  416d56:	jae    0x416d5f
  416d58:	push   ecx
  416d59:	into   
  416d5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d5b:	xchg   ebp,eax
  416d5c:	dec    edx
  416d5d:	jle    0x416d0c
  416d5f:	mov    bl,0xc1
  416d61:	int3   
  416d62:	(bad)  
  416d63:	div    DWORD PTR [ecx+0x32]
  416d66:	mov    ecx,0x4c4cfb3
  416d6b:	loopne 0x416de8
  416d6d:	jle    0x416d95
  416d6f:	mov    WORD PTR [eax-0x13],?
  416d72:	add    al,0x2c
  416d74:	adc    BYTE PTR [edx],bl
  416d76:	inc    ebp
  416d77:	push   ds
  416d78:	inc    ebx
  416d79:	xchg   ebp,eax
  416d7a:	add    al,0xd8
  416d7c:	jp     0x416d5b
  416d7e:	popa   
  416d7f:	mov    bh,0x28
  416d81:	fst    DWORD PTR [ebp+0x1042d1b1]
  416d87:	loopne 0x416d61
  416d89:	adc    DWORD PTR ds:0xac7dfc8a,ebx
  416d8f:	out    0x14,eax
  416d91:	mov    edx,0x20968ab8
  416d96:	(bad)  
  416d97:	pop    ss
  416d98:	mov    ebp,0xc142c111
  416d9d:	mov    ah,0xff
  416d9f:	int3   
  416da0:	mov    ah,0x93
  416da2:	punpckldq mm2,DWORD PTR [ebp+eiz*8-0x1a1c8dd1]
  416daa:	xor    esi,DWORD PTR [eax+0x7b]
  416dad:	in     eax,0x37
  416daf:	pusha  
	...
  416dd8:	shl    ebp,cl
  416dda:	cmp    esp,DWORD PTR [edx-0x6d]
  416ddd:	in     eax,0xf
  416ddf:	push   ds
  416de0:	mov    edx,0x27af8ac1
  416de5:	jmp    0x416dd7
  416de7:	mov    dh,0x4e
  416de9:	jg     0x416e36
  416deb:	add    eax,0x7250ba87
  416df0:	or     eax,0x3091d77f
  416df5:	pop    ss
  416df6:	(bad)  
  416df7:	xchg   esi,eax
  416df8:	jb     0x416e40
  416dfa:	push   cs
  416dfb:	pop    esp
  416dfc:	scas   al,BYTE PTR es:[edi]
  416dfd:	adc    dh,bh
  416dff:	jmp    0xd16522d7
  416e04:	adc    ebp,DWORD PTR [edi+0x23]
  416e07:	in     eax,dx
  416e08:	dec    eax
  416e09:	or     DWORD PTR [ebp+0x11],esi
  416e0c:	sar    BYTE PTR [ebx+eiz*1+0x23ccd3fd],cl
  416e13:	stc    
  416e14:	fistp  QWORD PTR [edx+0x287d624f]
  416e1a:	icebp  
  416e1b:	pop    ecx
  416e1c:	andpd  xmm3,XMMWORD PTR [edx-0x5a77c12d]
  416e24:	in     al,dx
  416e25:	in     al,0xe7
  416e27:	das    
  416e28:	pop    edx
  416e29:	paddd  mm4,QWORD PTR [edx-0x5]
  416e2d:	in     al,dx
  416e2e:	and    ebp,edx
  416e30:	nop
  416e31:	adc    edx,0xffffffb4
  416e34:	or     al,BYTE PTR [edx-0x451f32b5]
  416e3a:	mov    bl,BYTE PTR [edi]
	...
  416e64:	ja     0x416ec6
  416e66:	repnz add BYTE PTR [ebp-0x12],al
  416e6a:	mov    eax,ebx
  416e6c:	cmp    DWORD PTR [ecx+0x22],eax
  416e6f:	cmp    ch,cl
  416e71:	pop    esp
  416e72:	mov    esi,ecx
  416e74:	dec    edx
  416e75:	lods   al,BYTE PTR ds:[esi]
  416e76:	icebp  
  416e77:	jmp    DWORD PTR [ebp+0x46246a81]
  416e7d:	or     bl,al
  416e7f:	mov    ebx,DWORD PTR [esi+0x21]
  416e82:	and    bh,BYTE PTR [ebx]
  416e84:	mov    cl,0x81
  416e86:	pop    edx
  416e87:	and    al,0x2a
  416e89:	outs   dx,DWORD PTR ds:[esi]
  416e8a:	inc    edi
  416e8b:	jmp    0x416efb
  416e8d:	sbb    DWORD PTR [edx+0x24],0x2442825a
  416e94:	pop    edx
  416e95:	xor    DWORD PTR [esp+0x75000c6e],eax
  416e9c:	pop    ebx
  416e9d:	mov    DWORD PTR [eax+ebp*1+0xc5e],edi
  416ea4:	pop    esi
  416ea5:	adc    bh,BYTE PTR [ebx]
  416ea7:	add    BYTE PTR [edi],ch
  416ea9:	or     al,0x0
  416eab:	jl     0x416edc
  416ead:	mov    ebp,edi
  416eaf:	add    ch,BYTE PTR [esi]
  416eb1:	sub    bh,BYTE PTR [edi+0x7c]
  416eb4:	push   cs
  416eb5:	xor    al,0xfe
  416eb7:	jl     0x416eeb
  416eb9:	or     al,0x7c
  416ebb:	add    eax,0x7401eda1
  416ec0:	adc    DWORD PTR [ecx+0x565a244a],eax
  416ec6:	dec    edi
  416ec7:	mov    eax,DWORD PTR [eax]
	...
  416eed:	add    BYTE PTR [eax],al
  416eef:	add    BYTE PTR [esp+eiz*8],dh
  416ef2:	int3   
  416ef3:	repz xor eax,0x6930e9ed
  416ef9:	push   eax
  416efa:	and    bl,BYTE PTR [eax+0x69]
  416efd:	dec    eax
  416efe:	and    dl,BYTE PTR [eax]
  416f00:	pop    ecx
  416f01:	fldcw  WORD PTR [ecx]
  416f03:	xlat   BYTE PTR ds:[ebx]
  416f04:	nop
  416f05:	pop    ebx
  416f06:	mov    esi,ecx
  416f08:	dec    ebx
  416f09:	or     ch,BYTE PTR [esi-0x11]
  416f0c:	(bad)  
  416f0d:	(bad)  
  416f0e:	sbb    eax,DWORD PTR [ebx+0x67]
  416f11:	xor    bh,BYTE PTR [edi-0x12]
  416f14:	dec    edx
  416f15:	xchg   ebp,eax
  416f16:	and    al,0xea
  416f18:	pop    ecx
  416f19:	stos   DWORD PTR es:[edi],eax
  416f1a:	mov    dh,0x23
  416f1c:	cmp    ebp,DWORD PTR [ebp-0x2c050139]
  416f22:	mov    cs,ebp
  416f24:	mov    ds:0x8cfe1393,eax
  416f29:	repnz sbb al,BYTE PTR [edx-0x70f6dd7a]
  416f30:	retf   0x221
  416f33:	add    al,al
  416f35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f36:	out    dx,eax
  416f37:	add    ecx,DWORD PTR [ebx+0x22]
  416f3a:	scas   eax,DWORD PTR es:[edi]
  416f3b:	push   edx
  416f3c:	sti    
  416f3d:	stos   BYTE PTR es:[edi],al
  416f3e:	dec    ecx
  416f3f:	out    0x3d,eax
  416f41:	jb     0x416f5d
  416f43:	inc    al
  416f45:	fstp   st(7)
  416f47:	daa    
  416f48:	not    al
  416f4a:	mov    cs,ebp
  416f4c:	rcr    BYTE PTR [eax+0x2b],1
  416f4f:	out    dx,eax
  416f50:	cmp    DWORD PTR [eax+0x3a1a],ecx
	...
  416f7a:	add    BYTE PTR [eax],al
  416f7c:	or     BYTE PTR [eax],dl
  416f7e:	jmp    0xcd3a:0xea3c878a
  416f85:	inc    esp
  416f86:	(bad)  
  416f87:	call   FWORD PTR [esi+ebp*1]
  416f8a:	or     eax,DWORD PTR [ebx-0x72b]
  416f90:	dec    ebx
  416f91:	and    BYTE PTR [esi-0xdfb9bc],cl
  416f97:	dec    DWORD PTR [ebx+0x44]
  416f9a:	inc    DWORD PTR [edx+0x68e22f6]
  416fa0:	and    BYTE PTR cs:[edi-0x2ba31b01],dl
  416fa7:	mov    bh,BYTE PTR [edi+0x9]
  416faa:	int    0xbb
  416fac:	ret    
  416fad:	popf   
  416fae:	(bad)  
  416faf:	out    dx,eax
  416fb0:	(bad)  
  416fb1:	sbb    al,0x9c
  416fb3:	jecxz  0x416f86
  416fb5:	ja     0x416fab
  416fb7:	(bad)  
  416fb8:	mov    esp,0xc1b5990e
  416fbd:	aas    
  416fbe:	adc    ch,ah
  416fc0:	pushf  
  416fc1:	push   cs
  416fc2:	cmc    
  416fc3:	pop    ebx
  416fc4:	dec    ebx
  416fc5:	or     ecx,ebp
  416fc7:	add    ecx,DWORD PTR [edx-0x79]
  416fca:	cld    
  416fcb:	call   DWORD PTR [esi+ecx*1-0xa973ff1]
  416fd2:	pop    ebx
  416fd3:	and    al,0xd7
  416fd5:	lods   eax,DWORD PTR ds:[esi]
  416fd6:	jmp    0x416ff2
  416fd8:	jno    0x416f8d
  416fda:	jno    0x416f93
  416fdc:	sub    BYTE PTR [ecx+0xbf71],dh
	...
  417006:	add    BYTE PTR [eax],al
  417008:	sub    cl,ah
  41700a:	sbb    esi,DWORD PTR [ecx+edx*8+0x5806c03f]
  417011:	push   cs
  417012:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417013:	add    al,0xa5
  417015:	cmc    
  417016:	in     al,0x3
  417018:	dec    ebx
  417019:	jl     0x41704f
  41701b:	stc    
  41701c:	inc    ebp
  41701d:	and    cl,bl
  41701f:	mov    fs,WORD PTR [eax+0x358120e5]
  417025:	xchg   esp,eax
  417026:	(bad)  
  417027:	mov    es,WORD PTR [eax-0x41713f1b]
  41702d:	hlt    
  41702e:	in     al,0x3
  417030:	dec    ebx
  417031:	adc    ah,0xdf
  417034:	push   eax
  417035:	sub    BYTE PTR [edi+ebx*8-0x20437fac],0x54
  41703d:	mov    BYTE PTR [ecx-0xf],0xc7
  417041:	or     eax,0x228c06bc
  417046:	in     eax,dx
  417047:	mov    es,esi
  417049:	hlt    
  41704a:	(bad)  
  41704b:	in     al,dx
  41704c:	dec    eax
  41704d:	or     DWORD PTR [ebx-0x67],edx
  417050:	int    0x3b
  417052:	out    0x5f,eax
  417054:	and    DWORD PTR [edi],ecx
  417056:	(bad)  
  417057:	push   ds
  417058:	retf   0x3f9
  41705b:	jmp    0xdf3ff4a8
  417060:	cmp    al,0x23
  417062:	(bad)  
  417063:	call   0xc5bd42b0
  417068:	xchg   esp,eax
  417069:	inc    BYTE PTR [eax+ecx*1+0x0]
	...
  417094:	dec    eax
  417095:	or     DWORD PTR [eax],eax
  417097:	(bad)  
  417098:	in     al,dx
  417099:	jmp    0xe343e2f1
  41709e:	retf   0x4b6c
  4170a1:	add    edi,DWORD PTR [ebx]
  4170a3:	scas   al,BYTE PTR es:[edi]
  4170a4:	fld    DWORD PTR [edi]
  4170a6:	mov    esp,DWORD PTR [esi+0xd4382b7]
  4170ac:	jnp    0x417030
  4170ae:	jmp    0x9364:0x4fb52212
  4170b5:	jmp    0x3c0f88f5
  4170ba:	mov    BYTE PTR ds:0x17e7e96b,dl
  4170c0:	cmp    al,0xf
  4170c2:	(bad)  
  4170c3:	rcr    ah,1
  4170c5:	call   0x805c8bfd
  4170ca:	push   ebx
  4170cb:	int    0x18
  4170cd:	mov    ah,0x51
  4170cf:	jb     0x417052
  4170d1:	and    al,0xe6
  4170d3:	js     0x417117
  4170d5:	or     ecx,DWORD PTR [edx+0x23c8ce81]
  4170db:	and    edx,ebx
  4170dd:	mov    esp,0x345f2f8a
  4170e2:	lock push esi
  4170e4:	(bad)  
  4170e5:	iret   
  4170e6:	les    esp,FWORD PTR [edx-0x4d]
  4170e9:	call   0x194d7101
  4170ee:	mov    DWORD PTR [esi+eax*2+0x35],ecx
  4170f2:	mov    DWORD PTR [esi+edx*2+0x39],edx
  4170f6:	xchg   DWORD PTR [eax+eax*1+0x0],ecx
	...
  41711e:	add    BYTE PTR [eax],al
  417120:	inc    esi
  417121:	sub    eax,0x35065487
  417126:	mov    DWORD PTR [esi+eax*1+0x19],eax
  41712a:	push   ebp
  41712b:	push   ebp
  41712c:	add    bh,BYTE PTR [esi-0x34]
  41712f:	call   0x3f50b7
  417134:	cmp    DWORD PTR [ecx+0x22],eax
  417137:	cmp    ch,dl
  417139:	push   edi
  41713a:	mov    esi,ecx
  41713c:	sub    ebp,ebx
  41713e:	out    0xa3,al
  417140:	mov    ds:0xe73bfdf1,eax
  417145:	jae    0x41717f
  417147:	mov    esp,DWORD PTR [esi+0x29]
  41714a:	ss cmp esi,esp
  41714d:	sub    eax,DWORD PTR [edx]
  41714f:	add    BYTE PTR [edx+0x7b],dh
  417152:	pop    es
  417153:	or     esp,0x20
  417156:	add    al,BYTE PTR [eax]
  417158:	bound  ecx,QWORD PTR [eax]
  41715a:	je     0x417174
  41715c:	pop    edi
  41715d:	or     BYTE PTR ds:0x3747200,al
  417163:	sub    DWORD PTR [ebp+0x6f197406],0x8
  41716a:	jge    0x41716c
  41716c:	xor    dh,BYTE PTR [ebx+eax*1-0x7d]
  417170:	int    0x4
  417172:	je     0x417181
  417174:	push   ebp
  417175:	push   ebp
  417176:	mov    esi,ecx
  417178:	fcmovu st,st(4)
  41717a:	out    dx,eax
  41717b:	call   FWORD PTR [ebp+0x12ebfd35]
  417181:	jge    0x4171ed
  417183:	and    al,0x0
	...
  4171a9:	add    BYTE PTR [eax],al
  4171ab:	add    BYTE PTR [edx],dl
  4171ad:	or     edi,esi
  4171af:	jmp    DWORD PTR [edx]
  4171b1:	or     BYTE PTR [ebx+0x31074bd3],cl
  4171b7:	push   ecx
  4171b8:	xchg   esi,eax
  4171b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171ba:	dec    eax
  4171bb:	out    0xc,eax
  4171bd:	mov    ah,0x17
  4171bf:	inc    BYTE PTR [esi+0x5e00279f]
  4171c5:	lds    ecx,FWORD PTR [ecx-0x74cdd895]
  4171cb:	inc    ebx
  4171cc:	das    
  4171cd:	dec    esi
  4171ce:	ret    
  4171cf:	inc    edi
  4171d0:	ret    0xde4d
  4171d3:	push   edi
  4171d4:	sbb    dl,0x7
  4171d7:	xor    ah,0xf9
  4171da:	pop    ss
  4171db:	dec    dh
  4171dd:	add    cl,BYTE PTR [eax]
  4171df:	test   bh,cl
  4171e1:	and    DWORD PTR [edx],eax
  4171e3:	add    al,cl
  4171e5:	adc    al,BYTE PTR [eax]
  4171e7:	pextrw ebx,(bad),0xc5
  4171e9:	sahf   
  4171ea:	add    al,BYTE PTR [eax]
  4171ec:	dec    ebx
  4171ed:	xchg   edi,eax
  4171ee:	(bad)  
  4171ef:	and    edi,DWORD PTR [ebx]
  4171f1:	ror    DWORD PTR [edx-0x4ca4cf3e],cl
  4171f7:	push   eax
  4171f8:	shr    BYTE PTR [ebx+0x2b],1
  4171fb:	cs gs inc edx
  4171fe:	push   ss
  4171ff:	mov    dl,BYTE PTR [edi]
  417201:	push   es
  417202:	fcom   QWORD PTR [esi-0x7]
  417205:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417206:	inc    ebp
  417207:	mov    dh,BYTE PTR [ebx+0x49]
  41720a:	add    al,0xf1
  41720c:	push   esp
  41720d:	(bad)  
  41720e:	fcmovb st,st(4)
	...
  417238:	int3   
  417239:	in     al,0x8a
  41723b:	inc    ebx
  41723c:	outs   dx,DWORD PTR ds:[esi]
  41723d:	cmp    cl,bl
  41723f:	test   DWORD PTR [edi+0x24],esp
  417242:	add    al,BYTE PTR [eax]
  417244:	mov    esi,0x63bd8119
  417249:	and    al,0x2
  41724b:	add    BYTE PTR [ebx+0xc],cl
  41724e:	cli    
  41724f:	cmp    al,0x4b
  417251:	and    eax,0x9970002
  417256:	in     al,dx
  417257:	or     BYTE PTR ds:0x47dfd508,0x9
  41725e:	aam    0x3
  417260:	dec    ebx
  417261:	(bad)  
  417262:	jecxz  0x4171e6
  417264:	cmc    
  417265:	push   es
  417266:	mov    ebp,0x71b995fb
  41726b:	inc    esi
  41726c:	in     al,dx
  41726d:	shl    BYTE PTR [edi],0x17
  417270:	fstp   QWORD PTR [esi]
  417272:	idiv   BYTE PTR [eax+0x4c69aa71]
  417278:	int    0xab
  41727a:	imul   eax,DWORD PTR [eax+0x7c],0xd003f047
  417281:	popf   
  417282:	(bad)  
  417283:	repz rol DWORD PTR [esi-0x2f],0x3e
  417288:	cld    
  417289:	mov    bl,0x71
  41728b:	inc    esi
  41728c:	lods   al,BYTE PTR ds:[esi]
  41728d:	jmp    0x2769:0xc49d1706
  417294:	dec    ebx
  417295:	xchg   esp,eax
  417296:	shr    DWORD PTR [edx],cl
  417298:	cmp    al,0x7e
  41729a:	xor    al,0xe0
	...
  4172c4:	push   esp
  4172c5:	jl     0x4172e8
  4172c7:	pop    ss
  4172c8:	sbb    esi,DWORD PTR [edi+0x26c4561]
  4172ce:	xlat   BYTE PTR ds:[ebx]
  4172cf:	push   ss
  4172d0:	ins    DWORD PTR es:[edi],dx
  4172d1:	jle    0x41730f
  4172d3:	loopne 0x4172cd
  4172d5:	dec    ebx
  4172d6:	out    0x3,eax
  4172d8:	dec    ebx
  4172d9:	or     edx,esi
  4172db:	ss (bad) 
  4172de:	jae    0x41735a
  4172e0:	dec    esp
  4172e1:	or     ch,al
  4172e3:	add    edx,eax
  4172e5:	cmp    ah,0xff
  4172e8:	cmp    al,0xa
  4172ea:	cmp    DWORD PTR [ecx+eax*8+0x1f20903a],esi
  4172f1:	or     bh,BYTE PTR [ebp+0x4]
  4172f4:	cmc    
  4172f5:	hlt    
  4172f6:	(bad)  
  4172f7:	in     al,dx
  4172f8:	dec    eax
  4172f9:	or     DWORD PTR [ebx],eax
  4172fb:	mov    ecx,?
  4172fd:	sub    dh,BYTE PTR [ecx+0x4c]
  417300:	leave  
  417301:	ds (bad) 
  417303:	call   0xe9456186
  417308:	dec    eax
  417309:	jl     0x417355
  41730b:	loopne 0x4172e8
  41730d:	lock mov ch,BYTE PTR [edi-0x8]
  417311:	add    eax,0x83d7e900
  417316:	pop    ss
  417317:	in     eax,dx
  417318:	dec    eax
  417319:	or     DWORD PTR [eax+0x60],eax
  41731c:	into   
  41731d:	in     eax,dx
  41731e:	add    ebp,ecx
  417320:	dec    eax
  417321:	add    BYTE PTR [ebp-0x1f63b07],0x62
	...
  417350:	ds repnz add ebp,ecx
  417354:	dec    eax
  417355:	jg     0x417366
  417357:	jmp    0x4173d3
  417359:	or     al,0xc1
  41735b:	jno    0x4172f5
  41735d:	or     BYTE PTR [esi-0x1f6632b],bl
  417363:	je     0x4172fc
  417365:	jle    0x4172ec
  417367:	stc    
  417368:	mov    WORD PTR [ecx],cs
  41736a:	(bad)  
  41736b:	jo     0x417372
  41736d:	repnz add ebp,ecx
  417370:	dec    eax
  417371:	leave  
  417372:	mov    BYTE PTR [edi+0x73],bl
  417375:	add    eax,0x83c1e900
  41737a:	pmulhw mm1,QWORD PTR [eax+0x9]
  41737e:	mov    ebp,DWORD PTR [edi+0x5f]
  417381:	add    eax,0xf9c2e900
  417386:	add    DWORD PTR [ebx-0x678b7cb],edi
  41738c:	dec    ecx
  41738d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41738e:	sbb    al,0xed
  417390:	dec    eax
  417391:	or     DWORD PTR [ebx-0x10],esi
  417394:	ret    
  417395:	mov    ss,WORD PTR [eax]
  417397:	add    BYTE PTR [esi],bl
  417399:	or     eax,0x5ac8900
  41739e:	add    al,BYTE PTR [eax]
  4173a0:	xor    cl,ch
  4173a2:	mov    BYTE PTR [esi-0x1f6fa],cl
  4173a8:	fwait
  4173a9:	xchg   DWORD PTR ds:0x890cf204,ecx
  4173af:	xchg   dl,bh
  4173b1:	or     dh,bh
  4173b3:	inc    DWORD PTR [eax]
	...
  4173d9:	add    BYTE PTR [eax],al
  4173db:	add    BYTE PTR [edx],dh
  4173dd:	in     eax,dx
  4173de:	mov    al,BYTE PTR [esi-0x1f6ee]
  4173e4:	sub    al,0xd
  4173e6:	add    BYTE PTR [ebx+0x20164],cl
  4173ec:	loop   0x41737f
  4173ee:	sbb    DWORD PTR [eax],0xffffffde
  4173f1:	or     al,0x0
  4173f3:	add    DWORD PTR [edi*8-0xe4dffff],edx
  4173fa:	int3   
  4173fb:	rol    BYTE PTR [edx-0x19dbbe6f],cl
  417401:	xchg   DWORD PTR [ebp+0x4991e374],edi
  417407:	and    al,0xd2
  417409:	xchg   ecx,eax
  41740a:	xchg   ebx,eax
  41740b:	adc    BYTE PTR [esi+0x4e2b000c],ch
  417411:	jmp    0x8e3ac563
  417416:	adc    DWORD PTR [edx+esi*2],eax
  417419:	or     al,0x29
  41741b:	dec    esp
  41741c:	dec    esi
  41741d:	mov    ebp,0x1e4d514f
  417422:	int    0x83
  417424:	scas   al,BYTE PTR es:[edi]
  417425:	cld    
  417426:	test   al,al
  417428:	pop    ds
  417429:	adc    DWORD PTR [ebx-0x75],ebx
  41742c:	mov    eax,ds:0xe15e5ec1
  417431:	inc    edi
  417432:	xor    eax,0x890d4ac2
  417437:	xchg   BYTE PTR [ebx+0x2],cl
  41743a:	(bad)  
  41743b:	push   DWORD PTR [ebx+ecx*8]
  41743e:	mov    ebp,0x23
	...
  417467:	add    BYTE PTR [ebx-0x7aa148d3],bl
  41746d:	jae    0x4174ac
  41746f:	aaa    
  417470:	or     edx,ebx
  417472:	add    DWORD PTR [eax+0x7f24b],edi
  417478:	or     BYTE PTR [ebx-0x43],bh
  41747b:	and    ecx,DWORD PTR [edi+0x7b]
  41747e:	dec    ecx
  41747f:	shl    dl,0xf2
  417482:	xchg   BYTE PTR [ebx+0x43],al
  417485:	mov    dl,0x40
  417487:	mov    al,BYTE PTR [edi-0x87ef7ea]
  41748d:	adc    eax,0x754b0000
  417492:	inc    ecx
  417493:	je     0x4174e1
  417495:	jno    0x4174d4
  417497:	sub    eax,DWORD PTR [edi-0xe]
  41749a:	add    ebx,eax
  41749c:	shl    BYTE PTR [ebp-0x23],1
  41749f:	inc    ebx
  4174a0:	inc    edi
  4174a1:	repnz add DWORD PTR [ebx+0x3c1cddf],ecx
  4174a8:	dec    ebx
  4174a9:	repnz mov dl,0x8a
  4174ac:	xlat   BYTE PTR ds:[ebx]
  4174ad:	int    0xc1
  4174af:	add    ecx,DWORD PTR [ebx-0xe]
  4174b2:	scas   eax,DWORD PTR es:[edi]
  4174b3:	mov    bh,BYTE PTR [edi+0x4b03d5cd]
  4174b9:	repnz mov ah,0x4f
  4174bc:	shr    BYTE PTR [ebp-0x18],1
  4174bf:	aas    
  4174c0:	inc    edi
  4174c1:	repnz add DWORD PTR [edx+0x1b],edx
  4174c5:	shl    BYTE PTR gs:[ebx],0x53
  4174c9:	fidiv  DWORD PTR [esp+esi*8+0x0]
	...
  4174f4:	mov    BYTE PTR fs:[ebx+0x1f62fc3],0x0
  4174fc:	mov    BYTE PTR [ebp+0x87fcb40],ah
  417502:	mov    bl,0x40
  417504:	adc    dh,dl
  417506:	stos   DWORD PTR es:[edi],eax
  417507:	inc    eax
  417508:	adc    dh,dl
  41750a:	cmp    al,0x7d
  41750c:	das    
  41750d:	mov    DWORD PTR [ebx+0x14],edi
  417510:	sub    al,0x7
  417512:	call   0x729ff3cd
  417517:	mov    ecx,0x3923844
  41751c:	fnstsw WORD PTR [edx+0x98bc253]
  417522:	jo     0x417538
  417524:	or     eax,DWORD PTR [edx]
  417526:	jmp    0x41752a
  417528:	mov    ch,0xd
  41752a:	idiv   DWORD PTR [ebx+edi*8-0x76]
  41752e:	dec    eax
  41752f:	or     edi,DWORD PTR [esi+edi*4]
  417532:	jae    0x417531
  417534:	sub    BYTE PTR [edi-0x58],dl
  417537:	add    eax,esi
  417539:	shl    esi,1
  41753b:	js     0x417538
  41753d:	push   ss
  41753e:	jne    0x417585
  417540:	les    ecx,FWORD PTR [ebp+0x4]
  417543:	cmp    al,0x9
  417545:	mov    ah,BYTE PTR [edx]
  417547:	int3   
  417548:	inc    eax
  417549:	fcomp  st(0)
  41754b:	xor    eax,0xff8c8a2e
  417550:	dec    ebx
  417551:	jl     0x417544
  417553:	jl     0x4174e9
  417555:	(bad)  
  417556:	pop    ds
  417557:	add    DWORD PTR [eax],0x0
	...
  41757d:	add    BYTE PTR [eax],al
  41757f:	add    BYTE PTR [eax],dl
  417581:	or     ebp,edx
  417583:	push   ds
  417584:	dec    ecx
  417585:	xchg   esp,eax
  417586:	fcomi  st,st(5)
  417588:	mov    edi,0xa886e880
  41758d:	(bad)  
  41758e:	not    DWORD PTR [edx]
  417590:	jge    0x417598
  417592:	call   0xf7d61e1d
  417597:	adc    ch,BYTE PTR [ebp+0x6]
  41759a:	call   0x7557f773
  41759f:	test   DWORD PTR [eax+0x4f280057],edx
  4175a5:	xchg   esp,eax
  4175a6:	xor    al,0xd1
  4175a8:	lds    eax,FWORD PTR [ebx*1+0x44904524]
  4175af:	aam    0x80
  4175b1:	mov    es,WORD PTR [esp+esi*8-0x48]
  4175b5:	repz or BYTE PTR [ebx+0x4],ah
  4175b9:	cmp    eax,0x250c71ac
  4175be:	nop
  4175bf:	sub    al,ah
  4175c1:	add    bl,BYTE PTR ds:0x1cc367f5
  4175c7:	jmp    0x9f4e7f14
  4175cc:	into   
  4175cd:	ror    DWORD PTR [esi-0x58],1
  4175d0:	dec    eax
  4175d1:	xchg   esp,eax
  4175d2:	xor    al,0xf1
  4175d4:	int    0x3
  4175d6:	cmp    esp,ecx
  4175d8:	out    dx,al
  4175d9:	pop    DWORD PTR [esp+edi*8+0x20]
  4175dd:	mov    es,WORD PTR [esp+ebx*8+0x58]
  4175e1:	repz or BYTE PTR [ebx+0x0],ah
	...
  417609:	add    BYTE PTR [eax],al
  41760b:	add    BYTE PTR [edi*1+0x250461ac],cl
  417612:	nop
  417613:	stos   BYTE PTR es:[edi],al
  417614:	int    0x2
  417616:	cmp    DWORD PTR [ebp-0x1926c691],ebx
  41761c:	adc    cl,BYTE PTR [ebx+0x5879fdc]
  417622:	jle    0x4175a9
  417624:	push   ebx
  417625:	cdq    
  417626:	add    BYTE PTR [ebp+0x4a],dh
  417629:	xchg   edx,eax
  41762a:	add    al,0x54
  41762c:	jl     0x417681
  41762e:	aas    
  41762f:	jmp    0xf9ccffc3
  417634:	pop    ebx
  417635:	pop    es
  417636:	(bad)  
  417637:	out    dx,al
  417638:	and    cl,BYTE PTR [ebx+0x58827f4]
  41763e:	jle    0x41768d
  417640:	inc    esp
  417641:	cdq    
  417642:	add    BYTE PTR [eax],al
  417644:	or     ecx,DWORD PTR es:[ecx+0x4be0ff04]
  41764b:	inc    ecx
  41764c:	bound  eax,QWORD PTR [edx]
  41764e:	cmp    BYTE PTR [ebp-0x1e78e],0x71
  417655:	mov    ?,edx
  417657:	sbb    BYTE PTR [esi+0x4b],bl
  41765a:	aas    
  41765b:	sbb    eax,0xfffffffd
  41765e:	push   cs
  41765f:	mov    WORD PTR [eax],ds
  417661:	sbb    bh,dh
  417663:	call   FWORD PTR [edi-0x6200f274]
  417669:	sbb    cl,BYTE PTR [ebp-0x18]
  41766c:	sub    ecx,DWORD PTR [ecx]
	...
  417696:	add    BYTE PTR [eax],al
  417698:	cmp    eax,0x9e895ab7
  41769d:	mov    ah,0xbf
  41769f:	or     dl,dh
  4176a1:	mov    ebx,0x2963e588
  4176a6:	jge    0x4176a8
  4176a8:	loop   0x4176b2
  4176aa:	push   ecx
  4176ab:	push   esi
  4176ac:	lds    eax,FWORD PTR [ebp-0x4390f7bc]
  4176b2:	jge    0x41766d
  4176b4:	repnz or BYTE PTR [eax],al
  4176b7:	add    BYTE PTR [ebx+0x4e],ch
  4176ba:	add    al,0xb6
  4176bd:	test   DWORD PTR [edx],esi
  4176bf:	add    DWORD PTR [ebp+ecx*1+0x0],0xe347a2fc
  4176c7:	push   es
  4176c8:	sub    esi,edx
  4176ca:	and    bh,0x72
  4176cd:	or     al,BYTE PTR [eax]
  4176cf:	add    BYTE PTR [ebx+0x32],dh
  4176d2:	pop    es
  4176d3:	or     DWORD PTR [ebp+eax*4+0xd458135],ebx
  4176da:	add    ah,bh
  4176dc:	jb     0x417725
  4176de:	out    dx,al
  4176df:	or     bh,BYTE PTR [ebx+0x1a]
  4176e2:	mov    BYTE PTR [edx],dh
  4176e4:	dec    ebx
  4176e5:	imul   esi,DWORD PTR [edi],0x7cee8982
  4176eb:	aaa    
  4176ec:	retf   0x41d3
  4176ef:	push   cs
  4176f0:	dec    ebx
  4176f1:	repnz inc edx
  4176f3:	out    dx,al
  4176f4:	dec    ebp
  4176f5:	out    0xcf,eax
  4176f7:	mov    BYTE PTR ds:0x80d467,cl
	...
  417721:	add    BYTE PTR [eax],al
  417723:	add    BYTE PTR ds:0x4b0211f2,ch
  417729:	mov    cl,0x27
  41772b:	or     eax,eax
  41772d:	test   BYTE PTR [edx+eiz*8+0xf24b16c],0x52
  417735:	lods   al,BYTE PTR ds:[esi]
  417736:	jl     0x41774f
  417738:	retf   0x18e
  41773b:	lock dec eax
  41773d:	repnz inc edx
  41773f:	jmp    0x7939:0x882fe947
  417746:	xor    al,0x82
  417748:	or     esi,ebp
  41774a:	jl     0x41777b
  41774c:	enter  0xd053,0xa
  417750:	cmp    BYTE PTR [ecx-0x2c],ch
  417753:	dec    eax
  417754:	enter  0x531,0x85
  417758:	adc    bh,BYTE PTR [ebp+0x728e8c87]
  41775e:	mov    cl,0xe7
  417760:	and    al,0xf2
  417762:	add    DWORD PTR [eax],eax
  417764:	and    al,0xcc
  417766:	lods   al,BYTE PTR ds:[esi]
  417767:	mov    BYTE PTR [edi+0x4b0343c4],ch
  41776d:	lds    esp,FWORD PTR [bp+di]
  417770:	inc    edi
  417771:	pop    eax
  417772:	jge    0x4177bf
  417774:	or     dh,dl
  417776:	jl     0x417781
  417778:	sar    cl,cl
  41777a:	test   cl,al
  41777c:	dec    edi
  41777d:	outs   dx,DWORD PTR ds:[esi]
  41777e:	inc    ecx
  41777f:	add    ecx,edx
  417781:	idiv   esi
  417783:	dec    esp
  417784:	or     cl,BYTE PTR [ecx]
  417786:	out    0x91,eax
	...
  4177b0:	outs   dx,BYTE PTR ds:[esi]
  4177b1:	(bad)  
  4177b2:	jecxz  0x4177b7
  4177b4:	ror    BYTE PTR [ebx+ecx*1+0x8],0xb1
  4177b9:	xchg   esp,eax
  4177ba:	sbb    eax,ebp
  4177bc:	fs mov gs,edi
  4177bf:	jl     0x417813
  4177c1:	mov    BYTE PTR [edi-0x143937f8],ah
  4177c7:	test   BYTE PTR [edx+0x14],dl
  4177ca:	sbb    al,0xc5
  4177cc:	inc    esp
  4177cd:	jns    0x417764
  4177cf:	inc    edx
  4177d0:	dec    eax
  4177d1:	or     DWORD PTR [edi*2-0x4cc8a5d1],esi
  4177d8:	ror    DWORD PTR [edi+ebx*8+0x7a],0x87
  4177dd:	adc    eax,0x5814b974
  4177e2:	pop    ss
  4177e3:	sbb    al,0x35
  4177e5:	or     edi,esp
  4177e7:	add    esp,DWORD PTR [ebx+0x4c51b95]
  4177ed:	xchg   esi,eax
  4177ee:	lods   al,BYTE PTR ds:[esi]
  4177ef:	or     ecx,DWORD PTR [ecx+esi*8+0x94b0430]
  4177f6:	mov    edx,0xb8018780
  4177fb:	sbb    esi,DWORD PTR [ecx+ecx*1-0x19]
  4177ff:	add    eax,DWORD PTR [eax+0xab14b90]
  417805:	adc    ah,bh
  417807:	mov    dl,0xc1
  417809:	dec    ebp
  41780a:	add    edi,esp
  41780c:	rcr    DWORD PTR [ebp-0x35],1
  41780f:	call   ebx
  417811:	enter  0xfea7,0x0
	...
  417839:	add    BYTE PTR [eax],al
  41783b:	add    dh,bh
  41783d:	adc    BYTE PTR [eax],ch
  41783f:	and    eax,0x7ce19054
  417844:	mov    ecx,DWORD PTR [ecx-0xa]
  417847:	push   ebp
  417848:	push   ebx
  417849:	enter  0xf408,0x41
  41784d:	verr   WORD PTR [eax-0x6f]
  417851:	xchg   ecx,eax
  417852:	mov    edi,0x7bc85a9
  417857:	test   al,0x27
  417859:	or     cl,BYTE PTR [ecx]
  41785b:	repz test DWORD PTR [edi],0xc8c9b887
  417862:	add    al,0x60
  417864:	or     DWORD PTR [edx+0xd],eax
  417867:	jg     0x4178da
  417869:	adc    DWORD PTR [edi],edx
  41786b:	jo     0x41787c
  41786d:	inc    edx
  41786e:	or     eax,0xdfc94f7f
  417873:	rol    edi,1
  417875:	adc    BYTE PTR [edi-0x49ecf758],al
  41787b:	(bad)
  417880:	xor    dl,BYTE PTR [ecx+0x428f600a]
  417886:	or     eax,0xdfc91f3f
  41788b:	icebp  
  41788c:	adc    DWORD PTR [eax],edx
  41788e:	or     eax,0xbf10483f
  417893:	pusha  
  417894:	add    bl,BYTE PTR [edi-0x3e]
  417897:	icebp  
  417898:	dec    eax
  417899:	push   esi
  41789a:	mov    DWORD PTR [ebp-0x5a76f614],esi
	...
  4178c8:	in     al,0xd
  4178ca:	mov    ebx,ebp
  4178cc:	(bad)
  4178d0:	inc    edi
  4178d1:	dec    eax
  4178d2:	mov    ebx,ebp
  4178d4:	(bad)
  4178d8:	inc    edi
  4178d9:	dec    eax
  4178da:	mov    ebx,ebp
  4178dc:	pminsw mm1,QWORD PTR [eax]
  4178df:	jno    0x417928
  4178e1:	dec    eax
  4178e2:	xchg   DWORD PTR [edx],esi
  4178e4:	(bad)  
  4178e5:	nop
  4178e6:	shr    BYTE PTR [edx+0xa],1
  4178e9:	push   es
  4178ea:	mov    ecx,ebp
  4178ec:	and    BYTE PTR [edi],al
  4178ee:	mov    DWORD PTR [eax],eax
  4178f0:	mov    al,0x4c
  4178f2:	in     eax,0x18
  4178f4:	sbb    cl,BYTE PTR ds:0x4ca08b3f
  4178fa:	in     eax,0x10
  4178fc:	jmp    0xe546:0x708b3f0c
  417903:	or     dl,bh
  417905:	add    eax,0x7d708b3f
  41790a:	int    0x88
  41790c:	jae    0x4178be
  41790e:	mov    edi,0x88ba7208
  417913:	in     eax,0xe1
  417915:	sub    BYTE PTR [ecx],cl
  417917:	push   ebx
  417918:	sub    al,0xbc
  41791a:	mov    al,BYTE PTR [ebp+0x26]
  41791d:	adc    BYTE PTR [eax+ecx*1-0x47],0xfb
  417922:	mov    cl,BYTE PTR [ebp+0x3a]
  417925:	or     BYTE PTR [eax+0x4],0xab
  417929:	cmp    al,al
  41792b:	jmp    0x41792d
	...
  417951:	add    BYTE PTR [eax],al
  417953:	add    BYTE PTR [esi],ch
  417955:	fmul   st(2),st
  417957:	adc    ecx,0x250f0efe
  41795d:	(bad)  
  41795f:	mov    DWORD PTR [esp+ecx*2+0x1ac304e3],esi
  417966:	mov    dh,dl
  417968:	xor    ebx,DWORD PTR [edi]
  41796a:	or     eax,0xf2842431
  41796f:	add    DWORD PTR [ecx-0xdff01f2],0x2489d8db
  417979:	dec    esp
  41797a:	jecxz  0x41798c
  41797c:	rcr    DWORD PTR [edx],cl
  41797e:	mov    dh,cl
  417980:	and    ebx,DWORD PTR [edi]
  417982:	push   DWORD PTR [eax]
  417984:	pop    esp
  417985:	test   dl,dh
  417987:	adc    DWORD PTR [ecx-0x26],0xdb913332
  41798e:	xlat   BYTE PTR ds:[ebx]
  41798f:	mov    DWORD PTR [ebx+0x38],ecx
  417992:	inc    ecx
  417993:	in     eax,0x49
  417995:	loope  0x4179a9
  417997:	mov    BYTE PTR [ebp+0x5a071e31],cl
  41799d:	sbb    BYTE PTR [ecx-0xe],bh
  4179a0:	retf   0xb13
  4179a3:	inc    DWORD PTR [ebp-0x2d262d0e]
  4179a9:	enter  0xe542,0x43
  4179ad:	and    DWORD PTR [esi],edi
  4179af:	mov    dh,dh
  4179b1:	aad    0x2
  4179b3:	not    al
  4179b5:	dec    ebp
  4179b6:	adc    al,al
	...
  4179e0:	ins    BYTE PTR es:[edi],dx
  4179e1:	out    0x80,eax
  4179e3:	out    0x4a,al
  4179e5:	jns    0x4179f9
  4179e7:	or     BYTE PTR [edx+0x69],dl
  4179ea:	xor    esi,DWORD PTR [eax]
  4179ec:	adc    eax,0x28801069
  4179f1:	pop    esp
  4179f2:	push   edi
  4179f3:	test   eax,0x3027e0e1
  4179f8:	adc    ah,BYTE PTR [ebp-0x2b]
  4179fb:	adc    edx,edx
  4179fd:	mov    dh,0x42
  4179ff:	out    dx,al
  417a00:	cmp    al,0x73
  417a02:	and    al,0x0
  417a04:	ret    0xfa83
  417a07:	stc    
  417a08:	add    al,0x2d
  417a0a:	or     al,0x7
  417a0c:	dec    ebx
  417a0d:	repnz add DWORD PTR [ecx+0x1b23310d],ecx
  417a14:	ret    0x422e
  417a17:	out    dx,al
  417a18:	inc    edi
  417a19:	imul   edx,DWORD PTR [eax],0x4368e008
  417a1f:	or     BYTE PTR [ebx],0xee
  417a22:	rcr    BYTE PTR ds:0xe5801fc2,1
  417a28:	or     al,0x6b
  417a2a:	aad    0xb4
  417a2c:	push   edi
  417a2d:	xchg   ebp,eax
  417a2e:	ret    0xd3ff
  417a31:	or     BYTE PTR [esi+0x42],al
  417a34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a35:	push   es
  417a36:	push   0xe708b024
  417a3b:	add    edx,DWORD PTR [eax-0x48]
  417a3e:	(bad)  [eax+0x2c70090b]
	...
  417a6c:	mov    ebp,edi
  417a6e:	in     eax,dx
  417a6f:	and    BYTE PTR [ebp+0x4b03e7fc],0x14
  417a76:	call   FWORD PTR ss:[ebx]
  417a79:	dec    edx
  417a7a:	out    0x7c,eax
  417a7c:	xchg   ebp,eax
  417a7d:	leave  
  417a7e:	into   
  417a7f:	repnz retf 
  417a81:	out    0xd3,eax
  417a83:	add    al,0x4b
  417a85:	or     edx,esp
  417a87:	push   edx
  417a88:	push   eax
  417a89:	push   eax
  417a8a:	sub    BYTE PTR [edx+eax*8],al
  417a8d:	jne    0x417a42
  417a8f:	jge    0x417a17
  417a91:	mov    esp,DWORD PTR [edi-0x52d2e00]
  417a97:	jmp    0x22ac5a6f
  417a9c:	jne    0x417a30
  417a9e:	rcl    DWORD PTR [eax+0x40],cl
  417aa1:	push   edi
  417aa2:	sub    BYTE PTR [eax+edx*2],al
  417aa5:	je     0x417a3a
  417aa7:	jge    0x417aa6
  417aa9:	enter  0x296,0xca
  417aad:	out    0x7b,al
  417aaf:	add    al,0x4b
  417ab1:	or     edx,esp
  417ab3:	push   edx
  417ab4:	push   eax
  417ab5:	push   ebp
  417ab6:	sub    BYTE PTR [edx+edx*8],al
  417ab9:	fisubr WORD PTR [eax]
  417abb:	sbb    eax,DWORD PTR [esi-0x78]
  417abe:	inc    esi
  417abf:	or     ah,ch
  417ac1:	(bad)  
  417ac2:	out    0xfe,eax
  417ac4:	popf   
  417ac5:	or     eax,0x91dcc4b9
  417aca:	es inc ebp
  417acc:	in     eax,0x17
  417ace:	push   0x23
	...
  417af7:	add    al,dl
  417af9:	or     DWORD PTR [eax],eax
  417afb:	jmp    0xddf68d48
  417b00:	clc    
  417b01:	dec    ecx
  417b02:	add    al,bl
  417b04:	pop    esi
  417b05:	xchg   ecx,eax
  417b06:	(bad)  
  417b07:	sub    BYTE PTR [ecx+0x22],ch
  417b0a:	xchg   DWORD PTR [esi],edi
  417b0c:	push   cs
  417b0d:	out    dx,eax
  417b0e:	add    al,0x60
  417b10:	xor    al,0x11
  417b12:	stc    
  417b13:	jo     0x417b1e
  417b15:	mov    eax,eax
  417b17:	in     eax,0x75
  417b19:	sbb    al,0x87
  417b1b:	pop    ss
  417b1c:	int3   
  417b1d:	in     al,0x3d
  417b1f:	bound  ebx,QWORD PTR [ebx-0x71c3f34b]
  417b25:	dec    BYTE PTR [eax+0x6ef07be]
  417b2b:	push   0xe9010229
  417b30:	dec    eax
  417b31:	adc    dh,BYTE PTR [ebp+0x499df5]
  417b37:	jo     0x417b5a
  417b39:	leave  
  417b3a:	in     eax,dx
  417b3b:	out    0xcf,eax
  417b3d:	out    0xfc,al
  417b3f:	jmp    0x5e4a848c
  417b44:	cmp    al,0x59
  417b46:	aas    
  417b47:	jmp    0x87015afb
  417b4c:	sbb    cl,BYTE PTR [ecx+0x9488de5]
  417b52:	add    dl,dh
  417b54:	jns    0x417b68
  417b56:	dec    ebp
  417b57:	sub    BYTE PTR [edi-0x70],al
  417b5a:	jae    0x417bd9
	...
  417b84:	xchg   esp,eax
  417b86:	sub    DWORD PTR [ecx+0x1ad190fc],0x6ade90e1
  417b90:	sub    bh,BYTE PTR [edi]
  417b92:	mov    DWORD PTR ds:0xa856127a,ebx
  417b98:	dec    eax
  417b99:	adc    dh,BYTE PTR [ebx+0x0]
  417b9c:	push   ss
  417b9d:	jge    0x417b7d
  417b9f:	sar    DWORD PTR [ebp+0x8],0x7f
  417ba3:	out    0x7e,eax
  417ba5:	or     al,BYTE PTR [eax]
  417ba7:	add    BYTE PTR [ecx-0x1cabf6a6],ch
  417bad:	or     DWORD PTR [edi+0xb2363df],eax
  417bb3:	adc    DWORD PTR [ebp+0x6],0xfeb2fffd
  417bba:	mov    dh,0xc
  417bbc:	mov    al,0xc4
  417bbe:	std    
  417bbf:	mov    BYTE PTR ds:0xf316ee45,ch
  417bc5:	sub    bh,cl
  417bc7:	add    BYTE PTR [edx+0x9],dh
  417bca:	or     DWORD PTR [edi+0x40b97e],esi
  417bd0:	push   ebx
  417bd1:	sbb    bh,dh
  417bd3:	dec    ebp
  417bd4:	jp     0x417b59
  417bd6:	jl     0x417bd0
  417bd8:	jb     0x417bda
  417bda:	test   DWORD PTR [ebx-0x7601f074],ebp
  417be0:	call   0xd03f:0xab1fdd49
  417be7:	out    dx,al
	...
  417c10:	stos   DWORD PTR es:[edi],eax
  417c11:	dec    eax
  417c12:	or     cl,dh
  417c14:	mov    ebx,0xbbc83035
  417c19:	inc    esi
  417c1a:	and    bl,0x88
  417c1d:	pop    ebx
  417c1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c1f:	stos   BYTE PTR es:[edi],al
  417c20:	add    ebp,DWORD PTR [edi]
  417c22:	xor    cl,bl
  417c24:	fwait
  417c25:	xor    eax,0x7fede0c0
  417c2a:	rcl    ecx,cl
  417c2c:	int3   
  417c2d:	cmp    BYTE PTR [edi-0x327f7ff7],0xc1
  417c34:	call   0x8046:0x7bc830fd
  417c3b:	jecxz  0x417c88
  417c3d:	push   ebx
  417c3e:	add    al,0xff
  417c40:	dec    ebx
  417c41:	and    DWORD PTR [ecx],ebp
  417c43:	mov    bl,dh
  417c45:	xor    DWORD PTR [edi+eax*1],esp
  417c48:	sbb    dh,BYTE PTR [eax]
  417c4a:	jns    0x417c1b
  417c4c:	mov    cl,BYTE PTR [edx+0x6]
  417c4f:	xor    DWORD PTR [ebx-0x577fbc97],edx
  417c55:	(bad)  
  417c57:	xor    bh,BYTE PTR [eax-0x1f]
  417c5a:	sub    cl,BYTE PTR [eax+0x1243183]
  417c60:	pop    edx
  417c61:	xor    BYTE PTR [ecx-0x39],bh
  417c64:	mov    bl,BYTE PTR [edx]
  417c66:	hlt    
  417c67:	xor    BYTE PTR [ebx+0x79],bh
  417c6a:	inc    ebx
  417c6b:	sub    BYTE PTR [eax-0xd],0x8
  417c6f:	(bad)  
  417c70:	jl     0x417c33
  417c72:	sub    ecx,DWORD PTR [eax+0x0]
	...
  417c9c:	xchg   ebx,eax
  417c9d:	mov    cl,0x21
  417c9f:	(bad)  
  417ca2:	jp     0x417c6b
  417ca4:	mov    cl,dl
  417ca6:	std    
  417ca7:	xor    BYTE PTR [ebx+0x69],bh
  417caa:	inc    esp
  417cab:	sub    BYTE PTR [eax-0xd],0xf8
  417caf:	push   cs
  417cb0:	cmp    al,0x1
  417cb2:	sub    al,0x8a
  417cb4:	mov    gs,edx
  417cb6:	inc    edx
  417cb7:	loop   0x417d00
  417cb9:	add    DWORD PTR ds:0xbe6f5388,edi
  417cbf:	pop    es
  417cc0:	inc    edi
  417cc1:	ja     0x417c81
  417cc3:	pop    es
  417cc4:	rol    BYTE PTR [ecx],cl
  417cc6:	test   eax,0x1569805d
  417ccb:	pop    esp
  417ccc:	or     edx,edi
  417cce:	add    DWORD PTR [ebx+0x75],edx
  417cd1:	ja     0x417c78
  417cd3:	and    edx,DWORD PTR [edi+0xc]
  417cd6:	jnp    0x417d4b
  417cd8:	daa    
  417cd9:	loop   0x417c7a
  417cdb:	test   ch,bh
  417cdd:	or     dh,dh
  417cdf:	outs   dx,DWORD PTR ds:[esi]
  417ce0:	sbb    ecx,DWORD PTR [edx*4+0x27b45542]
  417ce7:	mov    bl,0xcf
  417ce9:	inc    edi
  417cea:	fbstp  TBYTE PTR [ebx+0x84155ec]
  417cf0:	int    0x70
  417cf2:	jmp    0x417caa
  417cf4:	or     ecx,DWORD PTR [ecx]
  417cf6:	aas    
  417cf7:	cld    
  417cf8:	sar    bl,0x2e
  417cfb:	clc    
  417cfc:	std    
  417cfd:	repnz mov ebp,0xb4
	...
  417d27:	add    BYTE PTR [ecx+ecx*2+0x70a50821],ah
  417d2e:	arpl   WORD PTR [esi+0xfff090b],si
  417d34:	xchg   ecx,eax
  417d35:	sti    
  417d36:	push   es
  417d37:	test   eax,0x3efc6f1
  417d3c:	push   ds
  417d3d:	xchg   edx,eax
  417d3e:	or     al,0xb3
  417d40:	or     al,0x58
  417d42:	bound  edi,QWORD PTR [esi-0x7bb6fb4]
  417d48:	mov    edi,0x14b2df55
  417d4d:	icebp  
  417d4e:	and    al,0x8
  417d50:	pop    ebp
  417d51:	sti    
  417d52:	aas    
  417d53:	js     0x417d55
  417d55:	dec    edx
  417d56:	out    0x78,eax
  417d58:	pop    es
  417d59:	add    DWORD PTR [eax],ebx
  417d5b:	sbb    al,0x3d
  417d5d:	(bad)  
  417d5e:	mov    dh,0x7
  417d60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d61:	or     eax,0x8e34c51c
  417d66:	sub    al,0xc
  417d68:	jl     0x417d5b
  417d6a:	nop
  417d6b:	or     BYTE PTR ds:0x8f77fffb,ah
  417d71:	dec    eax
  417d72:	out    0x78,eax
  417d74:	pop    DWORD PTR [ecx]
  417d76:	sbb    BYTE PTR [ecx+esi*8],bl
  417d79:	std    
  417d7a:	jle    0x417d83
  417d7c:	cdq    
  417d7d:	mov    WORD PTR [eax],es
  417d7f:	sub    al,0x4f
  417d81:	dec    edx
  417d82:	call   0xfe3cc0f2
  417d87:	ret    0xee6f
  417d8a:	pop    ebx
  417d8b:	sub    eax,DWORD PTR [eax]
	...
  417db1:	add    BYTE PTR [eax],al
  417db3:	add    bh,ah
  417db5:	cli    
  417db6:	push   esp
  417db7:	pusha  
  417db8:	sub    al,BYTE PTR [edi+0x5499f9ec]
  417dbe:	mov    DWORD PTR [eax+edx*8+0x43ed738f],esp
  417dc5:	inc    ebp
  417dc6:	clc    
  417dc7:	cdq    
  417dc8:	stc    
  417dc9:	loop   0x417dc5
  417dcb:	xor    cl,BYTE PTR [ebx+edi*8-0x75]
  417dcf:	lods   al,BYTE PTR ds:[esi]
  417dd0:	pop    eax
  417dd1:	dec    edx
  417dd2:	sub    DWORD PTR [edx],0x4e857a7
  417dd8:	push   eax
  417dd9:	sti    
  417dda:	std    
  417ddb:	sbb    DWORD PTR [esi+ecx*2],0x4513e93f
  417de2:	clc    
  417de3:	cdq    
  417de4:	pusha  
  417de5:	xchg   ebx,eax
  417de6:	cld    
  417de7:	test   BYTE PTR [ebp+0x62],0x8c
  417deb:	popf   
  417dec:	(bad)  
  417ded:	cli    
  417dee:	mov    WORD PTR [edi+edx*2],gs
  417df1:	dec    edx
  417df2:	call   0xfe3cca67
  417df7:	bound  esi,QWORD PTR [ebx+0x3f2489fe]
  417dfd:	xchg   ecx,eax
  417dfe:	inc    ebx
  417dff:	vsubsd xmm6,xmm6,xmm0
  417e03:	push   ecx
  417e04:	inc    ebx
  417e05:	dec    ebp
  417e06:	aas    
  417e07:	jmp    0x1a39c3cf
  417e0c:	push   edi
  417e0d:	imul   edi,esp,0xffffffa6
  417e10:	inc    ebp
  417e11:	bound  ecx,QWORD PTR [esp+ebp*1]
  417e14:	push   cs
  417e15:	cli    
  417e16:	mov    WORD PTR [eax+eax*1],gs
	...
  417e3d:	add    BYTE PTR [eax],al
  417e3f:	add    BYTE PTR [edi],dh
  417e41:	dec    edx
  417e42:	call   0xfe3cc14f
  417e47:	add    BYTE PTR [ecx+0x2f8bf9b1],bl
  417e4d:	adc    eax,0x7d764588
  417e52:	pop    esp
  417e53:	lock dec edx
  417e55:	or     DWORD PTR [ecx+eax*2-0x1e],0xa2f84480
  417e5d:	sbb    eax,0x375fc46
  417e62:	mov    WORD PTR gs:[edi-0x6073023c],?
  417e69:	adc    eax,0x114be84d
  417e6e:	(bad)  
  417e6f:	(bad)  
  417e70:	fadd   QWORD PTR [eax+0x1dd2f844]
  417e76:	(bad)  
  417e78:	add    eax,DWORD PTR gs:[edx-0x7354653a]
  417e7f:	inc    ebp
  417e80:	inc    edx
  417e81:	mov    dh,0xe5
  417e83:	sar    DWORD PTR [ecx],cl
  417e85:	add    edi,esi
  417e87:	pop    esi
  417e88:	jmp    0x309f6809
  417e8d:	(bad)  
  417e8e:	std    
  417e8f:	push   esp
  417e90:	jmp    0x417eba
  417e92:	sub    ah,0x16
  417e95:	add    eax,0xab310000
  417e9a:	push   esi
  417e9b:	mov    esp,DWORD PTR [edi]
  417e9d:	std    
  417e9e:	mov    dh,BYTE PTR [ebp+0x66]
  417ea1:	jb     0x417e27
  417ea3:	add    BYTE PTR [eax],0x0
	...
  417eca:	add    BYTE PTR [eax],al
  417ecc:	test   BYTE PTR [ebx],al
  417ece:	(bad)  
  417ecf:	push   eax
  417ed0:	jp     0x417f13
  417ed2:	add    BYTE PTR [eax],al
  417ed4:	xor    dl,BYTE PTR [ebx-0x40d99803]
  417eda:	inc    eax
  417edb:	add    BYTE PTR [edx],cl
  417edd:	jge    0x417eda
  417edf:	jmp    ebp
  417ee1:	fmul   st(7),st
  417ee3:	mov    dh,BYTE PTR [eax+0x4b414bf1]
  417ee9:	loop   0x417f64
  417eeb:	add    ebx,DWORD PTR [ecx+0x24]
  417eee:	jg     0x417ee9
  417ef0:	inc    ebx
  417ef1:	push   cs
  417ef2:	adc    esi,eax
  417ef4:	into   
  417ef5:	or     al,BYTE PTR [esi]
  417ef7:	(bad)  
  417ef8:	cld    
  417ef9:	loope  0x417efc
  417efb:	add    BYTE PTR [ebx-0x75],cl
  417efe:	mov    al,0x88
  417f00:	sti    
  417f01:	jns    0x417f80
  417f03:	jae    0x417eea
  417f05:	push   edi
  417f06:	add    esi,DWORD PTR [eax]
  417f08:	stc    
  417f09:	dec    ebx
  417f0a:	aam    0x8a
  417f0c:	into   
  417f0d:	fiadd  WORD PTR [ebx]
  417f0f:	dec    ah
  417f11:	jns    0x417f90
  417f13:	jnp    0x417eda
  417f15:	aaa    
  417f16:	add    edi,esi
  417f18:	(bad)  
  417f19:	mov    dh,0x3
  417f1b:	(bad)  
  417f1c:	mov    ah,0x6b
  417f1e:	jne    0x417f9b
  417f20:	lods   eax,DWORD PTR ds:[esi]
  417f21:	das    
  417f22:	add    ecx,DWORD PTR [esi]
  417f24:	in     eax,0xe3
  417f26:	sbb    bh,0x1c
  417f29:	imul   eax,DWORD PTR [ebp+0x7b],0xffffff95
  417f2d:	pop    es
  417f2e:	add    ecx,DWORD PTR [esi]
	...
  417f58:	aad    0xcf
  417f5a:	shl    bh,cl
  417f5c:	shl    ecx,cl
  417f5e:	cmp    eax,DWORD PTR [edx]
  417f60:	dec    ebx
  417f61:	mov    ds:0xea7182bf,eax
  417f66:	xchg   BYTE PTR [ebx+ecx*8],al
  417f69:	sub    eax,DWORD PTR [esi*2-0x1851bf73]
  417f70:	lock fild WORD PTR [esi+edi*8]
  417f74:	enter  0x898d,0xfd
  417f78:	dec    esp
  417f79:	iret   
  417f7a:	add    DWORD PTR [eax-0x59711d80],eax
  417f80:	enter  0x897c,0xfd
  417f84:	xor    al,0xa7
  417f86:	add    DWORD PTR [ebp-0x33],esi
  417f89:	or     BYTE PTR [esi+edi*2-0x5c],dh
  417f8d:	neg    DWORD PTR [esi+0xee18c04]
  417f93:	add    ecx,DWORD PTR [ebx+0x9]
  417f96:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  417f98:	jno    0x417f1c
  417f9a:	xchg   ebx,eax
  417f9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f9c:	or     al,BYTE PTR [ecx]
  417f9e:	out    0xae,eax
  417fa0:	shr    ebp,cl
  417fa2:	push   0xe709c017
  417fa7:	add    ebx,DWORD PTR [eax-0x788741a1]
  417fad:	add    DWORD PTR [edx-0x72],esi
  417fb0:	push   eax
  417fb1:	xchg   BYTE PTR [ebx+eax*4-0x2a],ch
  417fb5:	test   DWORD PTR [esi-0x4d],0x3e7f7e4
	...
  417fe4:	dec    ebx
  417fe5:	arpl   di,sp
  417fe7:	fwait
  417fe8:	push   eax
  417fe9:	inc    edi
  417fea:	test   al,0x3
  417fec:	mov    ds:0xad042cdb,eax
  417ff1:	cmp    DWORD PTR [ecx],edi
  417ff3:	jns    0x417fbf
  417ff5:	add    al,0xad
  417ff7:	ret    0x8f9c
  417ffa:	jmp    0x417fcd
  417ffc:	or     cl,BYTE PTR [ecx+edx*1+0x2efa10f3]
  418003:	jle    0x418001
  418005:	idiv   dh
  418007:	add    ecx,DWORD PTR [ebx+0x9]
  41800a:	out    0x3,eax
  41800c:	pusha  
  41800d:	pop    esp
  41800e:	pusha  
  41800f:	adc    eax,ebx
  418011:	lea    ebx,[ebx+0x2]
  418014:	neg    DWORD PTR gs:[eax]
  418017:	(bad)  
  418018:	jb     0x418052
  41801a:	bound  ecx,QWORD PTR [ecx+0x3cef6df]
  418020:	ret    
  418021:	lea    eax,[ebx+0x2]
  418024:	inc    ebp
  418025:	idiv   DWORD PTR [esi+0xf7b789]
  41802b:	mov    dh,0x48
  41802d:	or     DWORD PTR [ebx-0x208b6d3],0xfffffff6
  418034:	or     cl,BYTE PTR [ecx]
  418036:	or     DWORD PTR [ecx+0x15bb80c8],0xdefdf749
  418040:	shl    BYTE PTR [edi+ebp*1],cl
  418043:	adc    edi,0xeac3f6
	...
  41806d:	add    BYTE PTR [eax],al
  41806f:	add    BYTE PTR [eax+0x48],cl
  418072:	inc    edx
  418073:	push   0xfffffff5
  418075:	sbb    DWORD PTR [ebx-0x1c],edi
  418078:	enter  0x30,0xdc
  41807c:	adc    ah,BYTE PTR [eax+0x56]
  41807f:	push   ecx
  418080:	dec    ecx
  418081:	cmc    
  418082:	std    
  418083:	push   esi
  418084:	int3   
  418085:	stos   BYTE PTR es:[edi],al
  418086:	js     0x4180d7
  418088:	dec    eax
  418089:	test   DWORD PTR [eax],0x73098469
  41808f:	xchg   ah,al
  418091:	mov    dl,0x78
  418093:	aaa    
  418094:	dec    eax
  418095:	test   DWORD PTR [eax],0x8382eab4
  41809b:	imul   ecx,DWORD PTR [ecx-0x9],0xaeb0b9fd
  4180a2:	add    cl,ch
  4180a4:	dec    eax
  4180a5:	push   esp
  4180a6:	pop    esi
  4180a7:	mov    dl,0xbf
  4180a9:	in     eax,0x5b
  4180ab:	sub    edx,DWORD PTR [edi+0x9]
  4180ae:	push   ecx
  4180af:	xchg   edi,eax
  4180b0:	and    DWORD PTR [eax+0x6f58cd44],eax
  4180b6:	mov    DWORD PTR [ebp+0x6c661d24],ecx
  4180bc:	test   DWORD PTR [edx+0x9],edi
  4180bf:	jo     0x418053
  4180c1:	cmp    BYTE PTR [eax-0x7],0xe2
  4180c5:	mov    dl,0xff
  4180c7:	call   0xcc8229
  4180cc:	sbb    BYTE PTR ds:0x3c84c785,0xd2
  4180d3:	sldt   WORD PTR [eax]
	...
  4180fa:	add    BYTE PTR [eax],al
  4180fc:	mov    ch,0xdc
  4180fe:	push   edx
  4180ff:	and    edx,0x1
  418102:	push   eax
  418103:	call   0x3d74be
  418108:	cmp    bl,BYTE PTR [ecx]
  41810a:	dec    ecx
  41810b:	inc    ecx
  41810c:	and    ah,dl
  41810e:	cmp    bh,cl
  418110:	mov    ebp,0xa9b70e0a
  418115:	pop    esi
  418116:	push   ebx
  418117:	call   0x3d741e
  41811c:	dec    edx
  41811d:	cdq    
  41811e:	dec    ecx
  41811f:	inc    ecx
  418120:	loop   0x418103
  418122:	es stc 
  418124:	ins    DWORD PTR es:[edi],dx
  418125:	or     ecx,DWORD PTR [esi]
  418127:	mov    bh,0x89
  418129:	pop    edi
  41812a:	push   esi
  41812b:	call   0x3d73ce
  418130:	popf   
  418131:	addr16 push edi
  418133:	ret    0x9ba
  418136:	dec    edi
  418137:	mov    ebx,esi
  418139:	sub    eax,0x70a5308
  41813e:	cmc    
  41813f:	call   FWORD PTR [ebp-0x73]
  418142:	mov    edi,0x9b280
  418147:	mov    eax,0x3d58ae
  41814c:	sub    DWORD PTR [edx],ebx
  41814e:	test   DWORD PTR [ebx],edx
  418150:	and    edx,ecx
  418152:	add    al,0x83
  418154:	xor    DWORD PTR [esi],ecx
  418156:	cmp    DWORD PTR [edi+ebp*4+0x4d72004c],ecx
  41815d:	mov    dl,0x8c
  41815f:	dec    ebp
	...
  418188:	mov    ds:0xdb108709,eax
  41818d:	sbb    edi,DWORD PTR [edi-0x40]
  418190:	data16 mov WORD PTR [edi+0x101d4b04],?
  418197:	dec    esi
  418198:	or     ah,al
  41819a:	jae    0x418189
  41819c:	mov    al,ds:0x980008a0
  4181a1:	ja     0x418203
  4181a3:	and    al,0x43
  4181a5:	paddsb mm5,mm0
  4181a8:	xor    esp,DWORD PTR [edi+edi*8+0x463087f]
  4181af:	add    BYTE PTR [ebx+0x6a],cl
  4181b2:	adc    BYTE PTR [ebx-0x76],cl
  4181b5:	loop   0x418143
  4181b7:	adc    edx,eax
  4181b9:	repnz test cl,al
  4181bc:	dec    edi
  4181bd:	pop    edi
  4181be:	les    eax,FWORD PTR [esi+edi*1]
  4181c1:	dec    bp
  4181c3:	aas    
  4181c4:	dec    ebx
  4181c5:	lock lock mov eax,0x4115bf
  4181cc:	shr    bh,1
  4181ce:	mov    dl,BYTE PTR [eax]
  4181d0:	enter  0x81f,0x81
  4181d4:	or     esp,edi
  4181d6:	ds or  al,0x7d
  4181d9:	mov    eax,ds:0xa7b47201
  4181de:	ret    
  4181df:	add    al,0x4b
  4181e1:	popf   
  4181e2:	mov    ah,bl
  4181e4:	enter  0x1c4e,0x51
  4181e8:	adc    eax,0x85d67
	...
  418211:	add    BYTE PTR [eax],al
  418213:	add    al,dl
  418215:	xchg   ebp,eax
  418216:	or     eax,0x542a068b
  41821b:	push   ecx
  41821c:	mov    ds:0x8cfdfc0d,eax
  418221:	push   ebp
  418222:	inc    ebp
  418223:	lock sbb edi,DWORD PTR [ebp+0x43]
  418227:	or     BYTE PTR [ebx],bl
  418229:	sbb    ah,ah
  41822b:	clc    
  41822c:	je     0x418229
  41822e:	mov    es,WORD PTR [ebx+0x63]
  418231:	xchg   edx,eax
  418232:	test   cl,al
  418234:	cmp    ecx,DWORD PTR [ecx]
  418236:	cmp    ch,ah
  418238:	jp     0x41822b
  41823a:	fiadd  WORD PTR [eax]
  41823c:	loop   0x4181c2
  41823e:	and    eax,DWORD PTR [ebx+0x4b]
  418241:	xchg   BYTE PTR [esp+edi*8],ah
  418244:	fwait
  418245:	loope  0x41828b
  418247:	sti    
  418248:	ds hlt 
  41824a:	dec    edi
  41824b:	nop
  41824c:	xchg   DWORD PTR [edx-0x19],ecx
  41824f:	mov    cs,WORD PTR [eax-0x4913e807]
  418255:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418257:	add    BYTE PTR [edx+0x4b432b85],dh
  41825d:	xchg   BYTE PTR [esp+ebp*8],ch
  418260:	jnp    0x418243
  418262:	or     bl,bh
  418264:	push   es
  418265:	hlt    
  418266:	jb     0x4182c6
  418268:	(bad)  
  418269:	jg     0x41828f
  41826b:	hlt    
  41826c:	int3   
  41826d:	dec    ebp
  41826e:	jae    0x4181fa
  418270:	nop
  418271:	stc    
  418272:	bound  ebx,QWORD PTR [esi-0x21]
  418275:	jg     0x418223
  418277:	jmp    0x418279
	...
  41829d:	add    BYTE PTR [eax],al
  41829f:	add    ah,al
  4182a1:	dec    ebp
  4182a2:	push   ebx
  4182a3:	mov    dh,BYTE PTR [eax-0x1f]
  4182a6:	mov    edi,0xe74a800f
  4182ab:	mov    cs,WORD PTR [eax]
  4182ad:	icebp  
  4182ae:	xchg   edi,eax
  4182af:	jmp    0x418233
  4182b1:	repnz add BYTE PTR ds:[edx],ah
  4182b5:	add    eax,0x864b42a4
  4182ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182bb:	repz sti 
  4182bd:	loopne 0x418293
  4182bf:	cli    
  4182c0:	sahf   
  4182c1:	repz (bad) 
  4182c3:	str    WORD PTR [edx-0x19]
  4182c7:	mov    cs,WORD PTR [eax]
  4182c9:	loope  0x418282
  4182cb:	jmp    0x418333
  4182cd:	repnz push es
  4182cf:	add    cl,dl
  4182d1:	push   ebp
  4182d2:	sti    
  4182d3:	mov    ecx,DWORD PTR [eax]
  4182d5:	stc    
  4182d6:	add    BYTE PTR [eax+0x5],ah
  4182d9:	cmc    
  4182da:	xchg   DWORD PTR [eax+ebx*2-0x2f22a47f],ecx
  4182e1:	inc    edi
  4182e2:	call   0x883e8557
  4182e7:	xor    al,0x5f
  4182e9:	pusha  
  4182ea:	mov    WORD PTR [esi+ecx*4],ds
  4182ed:	or     DWORD PTR [ebx-0x17a5c0d4],ecx
  4182f3:	shl    BYTE PTR [edi],0xf5
  4182f6:	std    
  4182f7:	inc    ecx
  4182f8:	fstp   TBYTE PTR [esi]
  4182fa:	aas    
  4182fb:	jmp    0x3a31c9bb
  418300:	das    
  418301:	loope  0x4182fb
  418303:	sahf   
	...
  41832c:	adc    al,0x62
  41832e:	mov    WORD PTR [esi+eax*4],fs
  418331:	or     DWORD PTR [ebx-0x17a608dc],ecx
  418337:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418338:	push   esp
  41833a:	std    
  41833b:	pop    ss
  41833c:	fiadd  DWORD PTR [esi-0x8]
  41833f:	sbb    edi,ebx
  418341:	(bad)  
  418342:	clc    
  418343:	outs   dx,BYTE PTR ds:[esi]
  418344:	in     al,0x7e
  418346:	inc    esi
  418347:	icebp  
  418348:	js     0x4183c8
  41834a:	inc    ebx
  41834b:	pop    ecx
  41834c:	jg     0x41832f
  41834e:	jne    0x4183a1
  418350:	int3   
  418351:	hlt    
  418352:	and    DWORD PTR [edi],0xac8b5b5f
  418358:	mov    al,0x59
  41835a:	call   0xfe363432
  41835f:	xchg   edi,eax
  418360:	adc    DWORD PTR [edx+0x18a8cec],ecx
  418366:	add    BYTE PTR [edi+ecx*8-0x44f2801a],bh
  41836d:	repnz std 
  41836f:	jmp    0x6296de6d
  418374:	jmp    0x8901:0xff008900
  41837b:	test   edx,esp
  41837d:	repnz sti 
  41837f:	call   edx
  418381:	ficom  WORD PTR [esi+edi*8+0x75]
  418385:	repz push 0x0
  418388:	cli    
  418389:	sbb    BYTE PTR [esi+0x41],cl
  41838c:	(bad)  
  41838d:	fsubrp st(5),st
  41838f:	std    
	...
  4183b8:	jne    0x4183ad
  4183ba:	sub    eax,0xc88a8d2
  4183bf:	dec    esi
  4183c0:	jae    0x4183cf
  4183c2:	mov    BYTE PTR [eax+esi*1],al
  4183c5:	dec    eax
  4183c6:	jg     0x4183c2
  4183c8:	sbb    dh,BYTE PTR [edx-0x13]
  4183cb:	(bad)  
  4183cc:	scas   eax,DWORD PTR es:[edi]
  4183cd:	outs   dx,BYTE PTR ds:[esi]
  4183ce:	(bad)  
  4183cf:	jmp    ebp
  4183d1:	or     al,0x0
  4183d3:	add    BYTE PTR [edx],ah
  4183d5:	fist   WORD PTR [ecx+ecx*4-0x4e]
  4183d9:	test   BYTE PTR [ecx-0x40d2b8c],al
  4183df:	xor    eax,esp
  4183e1:	fidiv  WORD PTR [eax]
  4183e3:	mov    ebp,DWORD PTR [edi+0x7a]
  4183e6:	(bad)  
  4183e7:	push   DWORD PTR [ebp-0x7b]
  4183ea:	cmp    DWORD PTR [esp+esi*2-0xd],0x7a6ffffb
  4183f2:	(bad)  
  4183f3:	push   DWORD PTR [ebp+0x7f]
  4183f6:	mov    DWORD PTR [esp+esi*2-0xd],edi
  4183fa:	sti    
  4183fb:	paddq  mm0,QWORD PTR [esi]
  4183fe:	jg     0x4183e0
  418400:	test   DWORD PTR [esi-0x47],edi
  418403:	jl     0x418479
  418405:	repz sti 
  418407:	cvttps2pi mm6,QWORD PTR [ebx]
  41840a:	sub    eax,0xc60d2af8
  41840f:	add    esi,DWORD PTR [edx+0x68834246]
  418415:	push   cs
  418416:	jns    0x41841d
  418418:	dec    ebx
  418419:	pusha  
  41841a:	cmp    al,BYTE PTR [eax]
	...
  418444:	(bad)  
  418445:	sub    DWORD PTR [ebx+0x56],edx
  418448:	jae    0x4184c9
  41844a:	sti    
  41844b:	std    
  41844c:	je     0x4184ac
  41844e:	test   al,0x78
  418450:	ins    DWORD PTR es:[edi],dx
  418451:	cli    
  418452:	sti    
  418453:	add    bl,cl
  418455:	mov    dh,0x1
  418457:	jae    0x4183fd
  418459:	pop    esi
  41845a:	mov    ebp,0xfbd25578
  41845f:	add    dh,dl
  418461:	jns    0x4183f0
  418463:	or     ebx,0xffffffc0
  418466:	sti    
  418467:	std    
  418468:	(bad)  
  41846b:	sti    
  41846c:	xor    al,0xb0
  41846e:	pop    ebx
  41846f:	pop    esi
  418470:	nop
  418471:	imul   esi,eax,0x1eb095b
  418477:	push   ebx
  418478:	sar    BYTE PTR [ebp+0x54],cl
  41847b:	push   eax
  41847c:	js     0x4184b6
  41847e:	xchg   DWORD PTR [ebx+0x43],edx
  418481:	imul   ebx,DWORD PTR [ebp+0xc],0xffffffd0
  418485:	adc    eax,0x7d122f14
  41848a:	or     BYTE PTR [edi],cl
  41848c:	ret    
  41848d:	es or  eax,0x12dec1f8
  418493:	mov    BYTE PTR [edi-0x27],cl
  418496:	inc    edx
  418497:	and    edx,0x78eb7dfa
  41849d:	mov    ah,0xe9
  41849f:	lods   al,BYTE PTR ds:[esi]
  4184a0:	rcl    DWORD PTR [edi-0x5],1
  4184a3:	das    
  4184a4:	cdq    
  4184a5:	dec    ebp
  4184a6:	adc    BYTE PTR [edx],bl
	...
  4184d0:	rcr    esi,1
  4184d2:	das    
  4184d3:	xor    cl,BYTE PTR [edx+0x7a]
  4184d6:	add    DWORD PTR [edx-0x38],eax
  4184d9:	cmp    al,0xc
  4184db:	jl     0x418478
  4184dd:	icebp  
  4184de:	iret   
  4184df:	mov    al,BYTE PTR [edi]
  4184e1:	or     esp,edi
  4184e3:	sti    
  4184e4:	ret    
  4184e5:	add    eax,0xf3ca41d9
  4184ea:	fistp  QWORD PTR [edi+0x7a]
  4184ed:	dec    edi
  4184ee:	mov    dl,0x8a
  4184f0:	outs   dx,DWORD PTR ds:[esi]
  4184f1:	dec    esi
  4184f2:	sub    DWORD PTR [eax],edx
  4184f4:	dec    ebx
  4184f5:	or     edi,esp
  4184f7:	add    ecx,DWORD PTR [ebx+0x9]
  4184fa:	out    0x3,eax
  4184fc:	dec    ebx
  4184fd:	or     edi,esp
  4184ff:	add    ecx,DWORD PTR [ebx+0x9]
  418502:	out    0x3,eax
  418504:	dec    ebx
  418505:	or     edi,esp
  418507:	add    ecx,DWORD PTR [ebx+0x9]
  41850a:	out    0x3,eax
  41850c:	dec    ebx
  41850d:	or     edi,esp
  41850f:	add    ecx,DWORD PTR [ebx+0x9]
  418512:	out    0x3,eax
  418514:	dec    ebx
  418515:	or     edi,esp
  418517:	add    ecx,DWORD PTR [ebx+0x9]
  41851a:	out    0x3,eax
  41851c:	dec    ebx
  41851d:	or     edi,esp
  41851f:	add    ecx,DWORD PTR [ebx+0x9]
  418522:	out    0x3,eax
  418524:	dec    ebx
  418525:	or     edi,esp
  418527:	add    ecx,DWORD PTR [ebx+0x9]
  41852a:	out    0x3,eax
  41852c:	dec    ebx
  41852d:	or     edi,esp
  41852f:	add    ecx,DWORD PTR [ebx+0x9]
  418532:	out    0x3,eax
	...
  41855c:	dec    ebx
  41855d:	or     edi,esp
  41855f:	add    ecx,DWORD PTR [ebx+0x9]
  418562:	out    0x3,eax
  418564:	dec    ebx
  418565:	or     edi,esp
  418567:	add    ecx,DWORD PTR [ebx+0x9]
  41856a:	out    0x3,eax
  41856c:	dec    ebx
  41856d:	or     edi,esp
  41856f:	add    ecx,DWORD PTR [ebx+0x9]
  418572:	out    0x3,eax
  418574:	dec    ebx
  418575:	or     edi,esp
  418577:	add    ecx,DWORD PTR [ebx+0x9]
  41857a:	out    0x3,eax
  41857c:	dec    ebx
  41857d:	or     edi,esp
  41857f:	add    ecx,DWORD PTR [ebx+0x9]
  418582:	add    cl,ch
  418584:	dec    eax
  418585:	or     DWORD PTR [eax],eax
  418587:	jmp    0xe9418ed4
  41858c:	dec    eax
  41858d:	or     DWORD PTR [eax],eax
  41858f:	jmp    0xe4418edc
  418594:	push   edx
  418595:	add    al,0xa
  418597:	mov    BYTE PTR [eax],bl
  418599:	cmp    eax,0x77288b67
  41859e:	das    
  41859f:	iret   
  4185a0:	cmp    BYTE PTR [eax],ah
  4185a2:	and    cl,cl
  4185a4:	xor    eax,0xf0752029
  4185a9:	imul   esp,DWORD PTR [eax],0x5a
  4185ac:	loop   0x4185fd
  4185ae:	ins    BYTE PTR es:[edi],dx
  4185af:	dec    ebp
  4185b0:	jmp    0x206a:0xb75d207a
  4185b7:	dec    ebx
  4185b8:	stos   BYTE PTR es:[edi],al
  4185b9:	jne    0x41862f
  4185bb:	dec    esp
  4185bc:	mov    ebp,0x103a29
	...
  4185e5:	add    BYTE PTR [eax],al
  4185e7:	add    BYTE PTR [edx+0x3],al
  4185ea:	inc    ecx
  4185eb:	inc    esi
  4185ec:	lahf   
  4185ed:	jbe    0x418661
  4185ef:	inc    eax
  4185f0:	test   al,0x61
  4185f2:	je     0x4185bd
  4185f4:	pusha  
  4185f5:	push   0x3657c927
  4185fa:	aaa    
  4185fb:	shl    DWORD PTR [ebx],1
  4185fd:	cmp    esi,DWORD PTR [eax]
  4185ff:	fnstcw WORD PTR [edi]
  418601:	sub    DWORD PTR [edx+0x0],esp
  418604:	das    
  418605:	inc    ebx
  418606:	ins    DWORD PTR es:[edi],dx
  418607:	add    al,0x75
  418609:	arpl   WORD PTR fs:[edi],ax
  41860c:	das    
  41860d:	inc    esi
  41860e:	(bad)  
  41860f:	cli    
  418610:	imul   ebx,DWORD PTR [edi+0x2c],0x9
  418614:	mov    ds,WORD PTR [ebp+0x6c]
  418617:	or     DWORD PTR [ebp+0x66],esi
  41861a:	shl    DWORD PTR gs:[eax+edi*2],0x20
  41861f:	mov    ebx,0x63782b
  418624:	lock js 0x418688
  418627:	fs cmp al,0x0
  41862a:	or     cl,BYTE PTR ds:0x726b41a8
  418630:	xchg   DWORD PTR [edx],ebp
  418632:	outs   dx,BYTE PTR gs:[esi]
  418634:	les    esp,FWORD PTR [ebx+0x72]
  418637:	ins    DWORD PTR es:[edi],dx
  418638:	ret    
  418639:	pop    esi
  41863a:	outs   dx,DWORD PTR gs:[esi]
  41863c:	int3   
  41863d:	sub    al,0x20
  41863f:	push   0x3a705ed6
  418644:	popf   
  418645:	and    esi,DWORD PTR [ebx+0x77]
  418648:	cmc    
  418649:	pop    ds
  41864a:	bound  eax,QWORD PTR gs:[eax]
	...
  418671:	add    BYTE PTR [eax],al
  418673:	add    cl,ah
  418675:	push   0x67dd736e
  41867a:	je     0x4186f3
  41867c:	add    esi,DWORD PTR [edi+0x61]
  41867f:	add    DWORD PTR cs:[edx+0x69],esp
  418683:	das    
  418684:	das    
  418685:	cld    
  418686:	or     BYTE PTR [edx],cl
  418688:	xor    cl,BYTE PTR [edx]
  41868a:	add    BYTE PTR [eax],al
  41868c:	and    cl,BYTE PTR [edx]
  41868e:	add    BYTE PTR [eax],al
  418690:	and    cl,BYTE PTR [edx]
  418692:	add    BYTE PTR [eax],al
  418694:	xor    cl,BYTE PTR [edx]
  418696:	add    BYTE PTR [eax],al
  418698:	xor    cl,BYTE PTR [edx]
  41869a:	add    BYTE PTR [eax],al
  41869c:	and    cl,BYTE PTR [edx]
  41869e:	add    BYTE PTR [eax],al
  4186a0:	and    cl,BYTE PTR [edx]
  4186a2:	add    BYTE PTR [eax],al
  4186a4:	repnz or DWORD PTR [eax],eax
  4186a7:	add    dl,dh
  4186a9:	or     DWORD PTR [eax],eax
  4186ab:	add    dl,ah
  4186ad:	or     DWORD PTR [eax],eax
  4186af:	add    dl,ah
  4186b1:	or     DWORD PTR [eax],eax
  4186b3:	add    dl,dh
  4186b5:	or     DWORD PTR [eax],eax
  4186b7:	add    dl,dh
  4186b9:	or     DWORD PTR [eax],eax
  4186bb:	add    dl,ah
  4186bd:	or     DWORD PTR [eax],eax
  4186bf:	add    dl,ah
  4186c1:	or     DWORD PTR [eax],eax
  4186c3:	add    BYTE PTR [ebx-0x6b],cl
  4186c6:	mov    dl,0x4e
  4186c8:	xor    BYTE PTR [ecx],ah
  4186ca:	and    BYTE PTR [ebx],ch
  4186cc:	dec    edi
  4186cd:	cs iret 
  4186cf:	push   esp
  4186d0:	lahf   
  4186d1:	or     al,0xa3
  4186d3:	bound  esi,QWORD PTR [esi-0x39]
  4186d6:	or     BYTE PTR [ecx],0x0
	...
  4186fd:	add    BYTE PTR [eax],al
  4186ff:	add    ah,dh
  418701:	in     al,dx
  418702:	or     ecx,DWORD PTR [eax]
  418704:	cmp    bl,BYTE PTR [edx+ecx*1+0x7bb7a768]
  41870b:	push   ecx
  41870c:	aad    0xdf
  41870e:	add    DWORD PTR [eax],eax
  418710:	dec    ebx
  418711:	loopne 0x418714
  418713:	add    BYTE PTR [ebx-0x20],cl
  418716:	add    DWORD PTR [eax],eax
  418718:	dec    ebx
  418719:	loopne 0x41871c
  41871b:	add    BYTE PTR [ebx-0x20],cl
  41871e:	add    DWORD PTR [eax],eax
  418720:	dec    ebx
  418721:	loopne 0x418724
  418723:	add    BYTE PTR [ebx-0x20],cl
  418726:	add    DWORD PTR [eax],eax
  418728:	dec    ebx
  418729:	loopne 0x41872c
  41872b:	add    BYTE PTR [ebx-0x1e],cl
  41872e:	add    DWORD PTR [eax],eax
  418730:	dec    ebx
  418731:	loop   0x418734
  418733:	add    BYTE PTR [ebx-0x1e],cl
  418736:	add    DWORD PTR [eax],eax
  418738:	dec    ebx
  418739:	loop   0x41873c
  41873b:	add    BYTE PTR [ebx-0x1e],cl
  41873e:	add    DWORD PTR [eax],eax
  418740:	dec    ebx
  418741:	loop   0x418744
  418743:	add    BYTE PTR [ebx-0x1e],cl
  418746:	add    DWORD PTR [eax],eax
  418748:	dec    ebx
  418749:	loop   0x41874c
  41874b:	add    BYTE PTR [ebx-0x1e],cl
  41874e:	add    DWORD PTR [eax],eax
  418750:	dec    ebx
  418751:	loop   0x418754
  418753:	add    BYTE PTR [ebx-0x1e],cl
  418756:	add    DWORD PTR [eax],eax
  418758:	dec    ebx
  418759:	loop   0x41875c
  41875b:	add    BYTE PTR [ebx-0x1e],cl
  41875e:	add    DWORD PTR [eax],eax
  418760:	dec    ebx
  418761:	loop   0x418764
	...
  41878b:	add    BYTE PTR [ebx+0x9],cl
  41878e:	out    0x3,eax
  418790:	dec    ebx
  418791:	or     edi,esp
  418793:	add    ecx,DWORD PTR [ebx+0x9]
  418796:	out    0x3,eax
  418798:	dec    ebx
  418799:	or     edi,esp
  41879b:	add    ecx,DWORD PTR [ebx+0x9]
  41879e:	out    0x3,eax
  4187a0:	dec    ebx
  4187a1:	or     edi,esp
  4187a3:	add    ecx,DWORD PTR [ebx+0x9]
  4187a6:	out    0x3,eax
  4187a8:	dec    ebx
  4187a9:	or     edi,esp
  4187ab:	add    ecx,DWORD PTR [ebx+0x9]
  4187ae:	out    0x3,eax
  4187b0:	dec    ebx
  4187b1:	or     edi,esp
  4187b3:	add    ecx,DWORD PTR [ebx+0x9]
  4187b6:	out    0x3,eax
  4187b8:	dec    ebx
  4187b9:	or     edi,esp
  4187bb:	add    ecx,DWORD PTR [ebx+0x9]
  4187be:	out    0x3,eax
  4187c0:	dec    ebx
  4187c1:	or     edi,esp
  4187c3:	add    ecx,DWORD PTR [ebx+0x9]
  4187c6:	out    0x3,eax
  4187c8:	dec    ebx
  4187c9:	or     edi,esp
  4187cb:	add    ecx,DWORD PTR [ebx+0x9]
  4187ce:	out    0x3,eax
  4187d0:	dec    ebx
  4187d1:	or     edi,esp
  4187d3:	add    ecx,DWORD PTR [ebx+0x9]
  4187d6:	out    0x3,eax
  4187d8:	dec    ebx
  4187d9:	or     edi,esp
  4187db:	add    ecx,DWORD PTR [ebx+0x9]
  4187de:	out    0x3,eax
  4187e0:	dec    ebx
  4187e1:	or     edi,esp
  4187e3:	add    ecx,DWORD PTR [ebx+0x9]
  4187e6:	out    0x3,eax
  4187e8:	dec    ebx
  4187e9:	or     edi,esp
  4187eb:	add    ecx,DWORD PTR [ebx+0x9]
  4187ee:	out    0x3,eax
	...
  418818:	dec    ebx
  418819:	or     edi,esp
  41881b:	add    ecx,DWORD PTR [ebx+0x9]
  41881e:	out    0x3,eax
  418820:	dec    ebx
  418821:	or     edi,esp
  418823:	add    ecx,DWORD PTR [ebx+0x9]
  418826:	out    0x3,eax
  418828:	dec    ebx
  418829:	or     edi,esp
  41882b:	add    ecx,DWORD PTR [ebx+0x9]
  41882e:	add    cl,ch
  418830:	dec    eax
  418831:	or     DWORD PTR [eax],eax
  418833:	jmp    0xe9419180
  418838:	dec    eax
  418839:	or     DWORD PTR [eax],eax
  41883b:	jmp    0xe9419188
  418840:	dec    eax
  418841:	or     DWORD PTR [eax],eax
  418843:	jmp    0xe9419190
  418848:	dec    eax
  418849:	or     DWORD PTR [eax],eax
  41884b:	jmp    0xe9419198
  418850:	dec    eax
  418851:	or     DWORD PTR [eax],eax
  418853:	jmp    0xe94191a0
  418858:	dec    eax
  418859:	or     DWORD PTR [eax],eax
  41885b:	jmp    0xd84191a8
  418860:	cmp    dh,BYTE PTR ss:[esp+edx*8]
  418864:	cmp    cl,BYTE PTR [ecx]
  418866:	jo     0x4187f0
  418868:	idiv   DWORD PTR [ecx+0x75]
  41886b:	mov    ds,esi
  41886d:	add    BYTE PTR fs:[ecx-0x10],bh
  418871:	js     0x4188d5
  418873:	mov    ecx,DWORD PTR [eax+0x5c]
  418876:	jne    0x4188c4
  418878:	fnstenv [edi+esi*2-0x17]
	...
  4188a4:	jg     0x4188dd
  4188a6:	xor    DWORD PTR ds:0x446a097a,ebx
  4188ac:	mov    eax,0x77e97176
  4188b1:	aaa    
  4188b2:	xor    ebp,esi
  4188b4:	pop    ebx
  4188b5:	xor    esi,DWORD PTR ds:0x321a48f1
  4188bb:	cli    
  4188bc:	or     DWORD PTR fs:[edi+0xb],ebx
  4188c0:	test   al,0x1a
  4188c2:	xor    bl,dl
  4188c4:	dec    eax
  4188c5:	pop    ebp
  4188c6:	arpl   WORD PTR ds:0xff676672,bx
  4188cc:	dec    eax
  4188cd:	jne    0x418932
  4188cf:	add    cl,dh
  4188d1:	pop    edx
  4188d2:	add    BYTE PTR [ebp+edx*2+0x5b],ch
  4188d6:	popa   
  4188d7:	add    BYTE PTR [ebx-0x2dffd0c8],ah
  4188dd:	outs   dx,DWORD PTR gs:[esi]
  4188df:	jae    0x4188ce
  4188e1:	arpl   WORD PTR [edx+0x64],si
  4188e4:	arpl   WORD PTR ds:0x62866568,ax
  4188ea:	imul   eax,DWORD PTR [eax],0xfffffff7
  4188ed:	arpl   WORD PTR [esi+0x6b],bp
  4188f0:	jg     0x41895f
  4188f2:	add    BYTE PTR [eax+eiz*8+0x65],ah
  4188f6:	arpl   WORD PTR [edi-0x7c],bp
  4188f9:	push   es
  4188fa:	je     0x41896e
  4188fc:	fbstp  TBYTE PTR [edi+0x74]
  4188ff:	outs   dx,BYTE PTR ds:[esi]
  418900:	mov    ch,0x35
  418902:	add    BYTE PTR [ecx],dh
  418904:	mov    ds:0x312d35,eax
	...
  41892d:	add    BYTE PTR [eax],al
  41892f:	add    BYTE PTR [ebx-0xa939afa],ah
  418935:	pop    ebx
  418936:	popa   
  418937:	jns    0x41890e
  418939:	jns    0x41893b
  41893b:	xor    DWORD PTR [eax-0x63cacbc9],esp
  418941:	sbb    eax,DWORD PTR [eax]
  418943:	jae    0x41890f
  418945:	gs outs dx,DWORD PTR fs:[esi]
  418948:	in     eax,dx
  418949:	add    al,0x2d
  41894b:	xor    ah,BYTE PTR [ecx+0x39]
  41894e:	xor    DWORD PTR [esi],esi
  418950:	pop    ebp
  418951:	sub    eax,0x5d810035
  418956:	jb     0x4189c1
  418958:	jno    0x4189d3
  41895a:	add    BYTE PTR [ebx+0x5f],dh
  41895d:	arpl   WORD PTR [edi+0x68],bp
  418960:	mov    esp,DWORD PTR [ebx+0x61]
  418963:	add    BYTE PTR [edi+0x64],dl
  418966:	outs   dx,DWORD PTR ds:[esi]
  418967:	je     0x4189a8
  418969:	ja     0x41896b
  41896b:	arpl   WORD PTR [ebp+0x60],dx
  41896e:	jo     0x4189e5
  418970:	dec    ebx
  418971:	or     al,0x5f
  418973:	jb     0x4189c0
  418975:	adc    BYTE PTR [edx+0x67],dh
  418978:	pop    ebp
  418979:	call   FWORD PTR [esi+0x71]
  41897c:	pop    eax
  41897d:	loopne 0x4189ec
  41897f:	addr16 fs sti 
  418982:	pop    esi
  418983:	jb     0x4189d0
  418985:	add    ah,BYTE PTR [ebp+0x6d]
  418988:	push   edi
  418989:	mov    esi,0xe0376c64
  41898e:	outs   dx,BYTE PTR fs:[esi]
  418990:	and    al,0xbd
  418992:	add    BYTE PTR gs:[eax],al
	...
  4189b9:	add    BYTE PTR [eax],al
  4189bb:	add    BYTE PTR [ecx],ah
  4189bd:	lds    esi,FWORD PTR [edx+0x73]
  4189c0:	cmp    cl,dh
  4189c2:	add    DWORD PTR [edi],ebp
  4189c4:	pop    ecx
  4189c5:	out    dx,eax
  4189c6:	xor    al,0x32
  4189c8:	pop    eax
  4189c9:	loopne 0x418a39
  4189cb:	push   0x7660b42a
  4189d0:	mov    es,WORD PTR es:[ecx]
  4189d3:	data16 stc 
  4189d5:	test   BYTE PTR [eax+0x64],ah
  4189d8:	in     al,dx
  4189d9:	test   BYTE PTR [ecx],al
  4189db:	imul   esp,edx,0xf963656b
  4189e1:	fbld   TBYTE PTR [ecx+esi*2-0x11]
  4189e5:	add    DWORD PTR [ecx],0x627eec71
  4189eb:	arpl   cx,bx
  4189ed:	fbstp  TBYTE PTR [edx+0x73]
  4189f0:	fstp   TBYTE PTR [edx+esi*2]
  4189f3:	imul   ebp,DWORD PTR [edx-0x4d94fba8],0x53
  4189fa:	ins    BYTE PTR es:[edi],dx
  4189fb:	pop    edi
  4189fc:	scas   al,BYTE PTR es:[edi]
  4189fd:	es add al,0x61
  418a00:	mov    ds:0xae715d55,eax
  418a05:	repnz push 0x6e
  418a08:	xchg   edi,eax
  418a09:	push   ebp
  418a0a:	jb     0x418a7a
  418a0c:	scas   al,BYTE PTR es:[edi]
  418a0d:	push   ds
  418a0e:	add    al,0x6a
  418a10:	pushf  
  418a11:	or     DWORD PTR [edx],ebx
  418a13:	ins    BYTE PTR es:[edi],dx
  418a14:	js     0x418a80
  418a16:	out    0x5d,eax
  418a18:	js     0x418a86
  418a1a:	add    bh,BYTE PTR [ebx+0x66]
  418a1d:	pop    esi
  418a1e:	out    0x61,eax
	...
  418a48:	pop    edi
  418a49:	outs   dx,BYTE PTR ds:[esi]
  418a4a:	cli    
  418a4b:	jo     0x418ab5
  418a4d:	ins    DWORD PTR es:[edi],dx
  418a4e:	out    0x61,eax
  418a50:	jl     0x418aae
  418a52:	or     al,0x62
  418a54:	je     0x418acb
  418a56:	sti    
  418a57:	add    ebx,DWORD PTR [edx+0x5d]
  418a5a:	enter  0x3e71,0x6a
  418a5e:	fnstenv [eax+0x4b]
  418a61:	sbb    DWORD PTR [edi],edx
  418a63:	xor    al,0x7b
  418a65:	sbb    DWORD PTR [edi],edx
  418a67:	add    al,0x3b
  418a69:	pop    esi
  418a6a:	mov    ecx,0xe76e3773
  418a6f:	imul   ebp,DWORD PTR [esi],0x2562cb5b
  418a75:	or     ebp,eax
  418a77:	bound  esp,QWORD PTR [ebx*2+0x5dfa038f]
  418a7e:	mov    WORD PTR [esi-0x18],fs
  418a81:	pop    edx
  418a82:	out    0x62,eax
  418a84:	cli    
  418a85:	jo     0x418b02
  418a87:	pop    esi
  418a88:	hlt    
  418a89:	or     BYTE PTR [ecx-0x7ba32592],cl
  418a8f:	jno    0x418adc
  418a91:	jno    0x418a1f
  418a93:	(bad)  
  418a94:	(bad)  [ebp+0x7d]
  418a97:	add    ebx,ebx
  418a99:	ins    DWORD PTR es:[edi],dx
  418a9a:	push   edi
  418a9b:	je     0x418a45
  418a9d:	pop    ebx
  418a9e:	out    0x2c,eax
  418aa0:	jbe    0x418ac2
  418aa2:	push   ds
  418aa3:	sub    eax,0x6be7207e
  418aa8:	mov    eax,0x5f3b77
	...
  418ad1:	add    BYTE PTR [eax],al
  418ad3:	add    BYTE PTR [ecx-0x6a9ab4f7],bl
  418ad9:	outs   dx,BYTE PTR ds:[esi]
  418ada:	add    BYTE PTR [ebp-0x70],al
  418add:	or     DWORD PTR [edi+0x3f],ebx
  418ae0:	stos   DWORD PTR es:[edi],eax
  418ae1:	pop    ebx
  418ae2:	arpl   WORD PTR [esi],bx
  418ae4:	dec    edi
  418ae5:	pop    ebp
  418ae6:	push   0x7148640e
  418aeb:	jmp    0x4a70259
  418af0:	arpl   WORD PTR [edx+0x0],bx
  418af3:	or     dh,BYTE PTR [edi+0x48]
  418af6:	jb     0x418b05
  418af8:	jo     0x418b66
  418afa:	add    BYTE PTR ds:0x4677768,cl
  418b00:	arpl   WORD PTR [ecx],cx
  418b02:	das    
  418b03:	sbb    BYTE PTR [eax+0x38],bh
  418b06:	add    bl,dl
  418b08:	sbb    eax,0x16c06e77
  418b0d:	ins    BYTE PTR es:[edi],dx
  418b0e:	jb     0x418af9
  418b10:	cmp    esi,DWORD PTR [eax+0x6e]
  418b13:	into   
  418b14:	sub    al,0x6c
  418b16:	add    cl,dl
  418b18:	sub    DWORD PTR [edi+0x6e],esi
  418b1b:	enter  0x920,0x6f
  418b1f:	enter  0x5e12,0x71
  418b23:	mov    eax,ds:0x995f7148
  418b28:	clc    
  418b29:	pop    edi
  418b2a:	add    BYTE PTR [ecx+ebp*8-0xf7f8da4],al
  418b31:	or     BYTE PTR [eax-0x78],dh
  418b34:	fistp  DWORD PTR [ecx+0x0]
  418b37:	mov    BYTE PTR [eax],al
	...
  418b5d:	add    BYTE PTR [eax],al
  418b5f:	add    cl,ch
  418b61:	inc    edi
  418b62:	pop    edi
  418b63:	mov    cl,ch
  418b65:	or     BYTE PTR [esi],dh
  418b67:	mov    ah,0x1c
  418b69:	sbb    dh,BYTE PTR [edx]
  418b6b:	sbb    BYTE PTR [edi+0x46],cl
  418b6e:	imul   ecx,DWORD PTR [eax-0x57],0x6d
  418b72:	pop    edi
  418b73:	jmp    0x41b60022
  418b78:	mov    ?,WORD PTR [edi+0x65]
  418b7b:	add    BYTE PTR [edx],dh
  418b7d:	je     0x418be4
  418b7f:	outs   dx,BYTE PTR ds:[esi]
  418b80:	test   DWORD PTR [eax+0x72],esi
  418b83:	add    BYTE PTR [edi-0x78978b96],cl
  418b89:	pop    edi
  418b8a:	add    BYTE PTR [ebx+0x5c],dh
  418b8d:	push   0x6b
  418b8f:	jo     0x418bbc
  418b91:	or     eax,0x5e51656a
  418b96:	arpl   WORD PTR gs:[ebx+0xd],ax
  418b9a:	jae    0x418c01
  418b9c:	outs   dx,BYTE PTR ds:[esi]
  418b9e:	imul   ebp,DWORD PTR [ebp+0x47],0xd
  418ba2:	jo     0x418c13
  418ba4:	dec    ecx
  418ba5:	jo     0x418c10
  418ba7:	outs   dx,DWORD PTR ds:[esi]
  418ba8:	int3   
  418ba9:	or     ah,BYTE PTR [ebp+0x6c]
  418bac:	popf   
  418bad:	pusha  
  418bae:	popa   
  418baf:	jns    0x418b3e
  418bb1:	popa   
  418bb2:	sub    eax,0x2d1c5300
  418bb7:	xor    DWORD PTR [ebx+0xd],edx
  418bba:	imul   esi,DWORD PTR [ebp-0x1f],0x856e5d5e
  418bc1:	or     ch,BYTE PTR [eax+0x65]
	...
  418bec:	mov    ds,WORD PTR [edx+0x69]
  418bef:	mov    gs:0xe6737144,al
  418bf5:	inc    ebp
  418bf6:	outs   dx,BYTE PTR ds:[esi]
  418bf7:	add    al,bl
  418bf9:	ins    DWORD PTR es:[edi],dx
  418bfa:	outs   dx,DWORD PTR ds:[esi]
  418bfb:	ins    DWORD PTR es:[edi],dx
  418bfc:	retf   
  418bfd:	push   0x5bed0061
  418c02:	pop    ebp
  418c03:	outs   dx,BYTE PTR ds:[esi]
  418c04:	aad    0x71
  418c06:	add    BYTE PTR [edi+eax*8+0x5f],dh
  418c0a:	je     0x418c75
  418c0c:	int3   
  418c0d:	jae    0x418c0f
  418c0f:	popa   
  418c10:	rcr    BYTE PTR [ecx+0x6c],cl
  418c13:	xor    ch,BYTE PTR gs:[ecx+0x65]
  418c17:	arpl   WORD PTR [edx+0x4b6c6c70],bx
  418c1d:	push   ebp
  418c1e:	add    al,0x70
  418c20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c21:	push   ecx
  418c22:	arpl   WORD PTR gs:[ebx+0x23],cx
  418c26:	addr16 popa 
  418c28:	cdq    
  418c29:	dec    ebp
  418c2a:	js     0x418c2c
  418c2c:	pop    edx
  418c2d:	lock push 0x72
  418c30:	stos   BYTE PTR es:[edi],al
  418c31:	push   ebx
  418c32:	add    BYTE PTR [si-0x7],bh
  418c36:	pop    edi
  418c37:	ins    BYTE PTR es:[edi],dx
  418c38:	jb     0x418c4b
  418c3a:	pop    edi
  418c3b:	add    BYTE PTR [edx+0xc],ah
  418c3e:	popa   
  418c3f:	jbe    0x418ca7
  418c41:	stc    
  418c42:	pusha  
  418c43:	jae    0x418c5e
  418c45:	lock pop edi
  418c47:	addr16 push 0x4b636017
  418c4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c4e:	aaa    
  418c4f:	add    BYTE PTR ss:[eax],al
	...
  418c76:	add    BYTE PTR [eax],al
  418c78:	adc    eax,0x3600379e
  418c7d:	lds    esp,FWORD PTR [edi+0x66]
  418c80:	xor    dl,dh
  418c82:	add    DWORD PTR [ebp+0x2a],esp
  418c85:	les    ebp,FWORD PTR [eax+0x75]
  418c88:	sub    bh,BYTE PTR [ecx-0x2ce199ff]
  418c8e:	pop    esi
  418c8f:	ja     0x418cbd
  418c91:	popf   
  418c92:	xor    al,0x0
  418c94:	sub    ah,BYTE PTR [ebx-0x5be3978a]
  418c9a:	push   0x5990f300
  418c9f:	pop    edi
  418ca0:	pause  
  418ca2:	add    DWORD PTR [eax-0x1c],esi
  418ca5:	mov    ?,WORD PTR [ecx+0x0]
  418ca8:	jmp    0xd8b2f510
  418cad:	js     0x418d0e
  418caf:	gs dec ebx
  418cb1:	xchg   edx,eax
  418cb2:	pop    ebp
  418cb3:	pop    edi
  418cb4:	jecxz  0x418c47
  418cb6:	pop    ebp
  418cb7:	pop    edi
  418cb8:	jecxz  0x418ca9
  418cba:	pusha  
  418cbb:	ja     0x418c75
  418cbd:	or     DWORD PTR [edi+0x63],edx
  418cc0:	stos   BYTE PTR es:[edi],al
  418cc1:	outs   dx,BYTE PTR ds:[esi]
  418cc2:	sbb    BYTE PTR [eax+eiz*4],al
  418cc5:	push   0x5b
  418cc7:	js     0x418c6c
  418cc9:	outs   dx,BYTE PTR ds:[esi]
  418cca:	push   esi
  418ccb:	add    al,0xaa
  418ccd:	push   0x55
  418ccf:	arpl   WORD PTR [edi-0x538b1896],sp
  418cd5:	jne    0x418d14
  418cd7:	addr16 cdq 
  418cd9:	or     DWORD PTR [ecx],edi
  418cdb:	popa   
	...
  418d04:	imul   ebp,DWORD PTR [esi+0x19],0xe6b4b78
  418d0b:	jbe    0x418d75
  418d0d:	pop    ebx
  418d0e:	or     al,0x76
  418d10:	dec    ebx
  418d11:	push   0x1a
  418d13:	push   0x40f6c6d
  418d18:	pop    ecx
  418d19:	push   0xa
  418d1b:	pop    esp
  418d1c:	push   0x6c75e775
  418d21:	jb     0x418d20
  418d23:	gs ss pop esp
  418d26:	out    0x68,eax
  418d28:	cmp    BYTE PTR [edx-0x2d],dh
  418d2b:	bound  edi,QWORD PTR [ecx]
  418d2d:	or     edi,edx
  418d2f:	data16 or al,0x73
  418d32:	aam    0x77
  418d34:	dec    ebx
  418d35:	addr16 enter 0x3077,0x6a
  418d3a:	int    0x3
  418d3c:	sub    dh,BYTE PTR [esi+eax*8+0x5c]
  418d40:	and    al,0x6e
  418d42:	out    0x65,eax
  418d44:	and    al,0x72
  418d46:	xchg   ebx,eax
  418d47:	data16 hlt 
  418d49:	or     BYTE PTR [edx-0x739815a0],bl
  418d4f:	jne    0x418d6d
  418d51:	or     DWORD PTR [edx+ebx*2-0x16],edi
  418d55:	outs   dx,DWORD PTR ds:[esi]
  418d56:	mov    WORD PTR [edx+0x4b],gs
  418d59:	addr16 nop
  418d5b:	ja     0x418d45
  418d5d:	jne    0x418d5f
  418d5f:	mov    WORD PTR [eax+0x71],cs
  418d62:	arpl   WORD PTR [ebp-0x5c],di
  418d65:	jbe    0x418d96
  418d67:	jmp    0x418d6c
	...
  418d90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d91:	jo     0x418dfa
  418d93:	dec    edi
  418d94:	lods   al,BYTE PTR ds:[esi]
  418d95:	jo     0x418d97
  418d97:	dec    ebp
  418d98:	test   al,0x72
  418d9a:	ins    DWORD PTR es:[edi],dx
  418d9b:	push   ebp
  418d9c:	test   al,0x9
  418d9e:	jno    0x418de8
  418da0:	jl     0x418de6
  418da2:	outs   dx,BYTE PTR ds:[esi]
  418da3:	xor    eax,0x4a004477
  418da8:	stos   BYTE PTR es:[edi],al
  418da9:	jo     0x418e1b
  418dab:	dec    eax
  418dac:	js     0x418db7
  418dae:	adc    BYTE PTR fs:[eax+0x70],ch
  418db2:	ins    DWORD PTR es:[edi],dx
  418db3:	packsswb mm1,QWORD PTR [ecx]
  418db6:	je     0x418dc0
  418db8:	pusha  
  418db9:	jne    0x418e28
  418dbb:	sbb    ecx,DWORD PTR [edi+0x6b]
  418dbe:	ins    DWORD PTR es:[edi],dx
  418dbf:	sti    
  418dc0:	push   ebp
  418dc1:	jo     0x418dc3
  418dc3:	adc    ebp,DWORD PTR [edx+0x71]
  418dc6:	outs   dx,BYTE PTR ds:[esi]
  418dc7:	mov    edx,0xfb001b19
  418dcc:	and    DWORD PTR [edx+0x68],ebp
  418dcf:	enter  0x6d36,0x0
  418dd3:	retf   
  418dd4:	adc    al,0x6c
  418dd6:	outs   dx,BYTE PTR ds:[esi]
  418dd7:	ret    0x2179
  418dda:	xor    ch,cl
  418ddc:	sbb    BYTE PTR [eax+0x5f],ch
  418ddf:	retf   0x6800
  418de2:	jno    0x418dcd
  418de4:	das    
  418de5:	jbe    0x418e54
  418de7:	lds    ecx,FWORD PTR [eax+0x6b]
  418dea:	ins    BYTE PTR es:[edi],dx
  418deb:	mov    esi,0xe9726803
  418df0:	imul   DWORD PTR [ecx+0x6d]
  418df3:	mov    es,WORD PTR [eax]
	...
  418e19:	add    BYTE PTR [eax],al
  418e1b:	add    ah,bh
  418e1d:	addr16 jb 0x418e09
  418e20:	out    0x43,al
  418e22:	outs   dx,BYTE PTR ds:[esi]
  418e23:	mov    dl,ch
  418e25:	inc    ebx
  418e26:	add    BYTE PTR [eax],al
  418e28:	mov    eax,0xd1656966
  418e2d:	pop    es
  418e2e:	pop    ebp
  418e2f:	jae    0x418def
  418e31:	jno    0x418e90
  418e33:	jae    0x418e03
  418e35:	jo     0x418e37
  418e37:	jbe    0x418dd4
  418e39:	data16 je 0x418eab
  418e3c:	nop
  418e3d:	je     0x418e3f
  418e3f:	ins    BYTE PTR es:[edi],dx
  418e40:	test   DWORD PTR [ebx+0x64],eax
  418e43:	outs   dx,DWORD PTR ds:[esi]
  418e44:	fs or  eax,0x5e21322d
  418e4a:	jae    0x418eb1
  418e4c:	and    bl,BYTE PTR [esi]
  418e4e:	xor    dh,BYTE PTR [ebx]
  418e50:	adc    DWORD PTR [ecx],ebx
  418e52:	sub    eax,0x5d614100
  418e57:	jb     0x418eb7
  418e59:	push   edi
  418e5a:	popa   
  418e5b:	imul   esp,edx,0x6b
  418e5e:	popa   
  418e5f:	outs   dx,DWORD PTR ds:[esi]
  418e60:	push   eax
  418e61:	push   0x61
  418e63:	add    BYTE PTR ds:0x4f6e6e44,bh
  418e69:	push   edi
  418e6a:	add    BYTE PTR [ebp+0x43],ch
  418e6d:	push   0x63
  418e6f:	imul   edi,DWORD PTR [edi],0x4b72740d
  418e75:	inc    ebx
  418e76:	gs je  0x418e24
  418e79:	push   es
  418e7a:	imul   ebp,DWORD PTR [esi-0x7a],0x45
  418e7e:	outs   dx,BYTE PTR ds:[esi]
  418e7f:	add    BYTE PTR gs:[eax],al
	...
  418ea6:	add    BYTE PTR [eax],al
  418ea8:	mov    ds:0x9333321d,al
  418ead:	push   0x3e91005f
  418eb2:	arpl   WORD PTR gs:[ecx+0x71],di
  418eb6:	outs   dx,BYTE PTR ds:[esi]
  418eb7:	add    BYTE PTR [eax-0x3a96919f],cl
  418ebd:	pop    eax
  418ebe:	add    BYTE PTR [ebx-0x26],ah
  418ec1:	pop    eax
  418ec2:	gs jae 0x418f27
  418ec5:	push   esi
  418ec6:	pop    ebp
  418ec7:	jae    0x418f14
  418ec9:	jg     0x418f41
  418ecb:	xor    cl,bl
  418ecd:	mov    eax,DWORD PTR [ecx]
  418ecf:	pop    edi
  418ed0:	(bad)  
  418ed1:	pop    esi
  418ed2:	jne    0x418f3b
  418ed4:	in     eax,0xef
  418ed6:	jb     0x418f48
  418ed8:	jmp    0x6591:0x4b775a5d
  418edf:	imul   esi,DWORD PTR [edx-0x5194fbc6],0x3e
  418ee6:	pusha  
  418ee7:	addr16 popf 
  418ee9:	lock ins WORD PTR es:[edi],dx
  418eec:	mov    ah,0x4b
  418eee:	pusha  
  418eef:	arpl   WORD PTR [ebx+0x52],cx
  418ef2:	jb     0x418f5b
  418ef4:	scas   al,BYTE PTR es:[edi]
  418ef5:	push   edx
  418ef6:	push   0x5d484b71
  418efb:	jo     0x418f6b
  418efd:	lock jb 0x418f68
  418f00:	push   0xfffffffc
  418f02:	pop    esp
  418f03:	imul   ecx,DWORD PTR [ebx+0x12],0x5b
  418f07:	outs   dx,BYTE PTR ds:[esi]
  418f08:	ja     0x418f1f
  418f0a:	pop    esi
  418f0b:	add    BYTE PTR fs:[eax],al
	...
  418f32:	add    BYTE PTR [eax],al
  418f34:	je     0x418f26
  418f36:	pop    ebp
  418f37:	ins    DWORD PTR es:[edi],dx
  418f38:	ins    BYTE PTR es:[edi],dx
  418f39:	neg    DWORD PTR [edx+0x6e]
  418f3c:	ins    BYTE PTR es:[edi],dx
  418f3d:	lock pop ecx
  418f3f:	pop    edi
  418f40:	pop    ecx
  418f41:	or     al,0x67
  418f43:	ja     0x418f90
  418f45:	fbld   TBYTE PTR [eax+0x6d]
  418f48:	xor    ch,dl
  418f4a:	ins    BYTE PTR es:[edi],dx
  418f4b:	add    BYTE PTR [ebx+edi*8+0x34],bh
  418f4f:	xor    eax,0x715ec64b
  418f54:	rcr    BYTE PTR cs:[ecx+0x0],0x2f
  418f59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f5a:	bound  ebp,QWORD PTR [ecx+0x12]
  418f5d:	lock gs addr16 and al,0xc9
  418f62:	jne    0x418fc3
  418f64:	imul   edi
  418f66:	fs add bh,dh
  418f69:	or     BYTE PTR [edi-0x7b931a88],cl
  418f6f:	jno    0x418fbc
  418f71:	push   esi
  418f72:	xchg   edi,eax
  418f73:	pop    esp
  418f74:	fldcw  WORD PTR [edi-0x6d]
  418f77:	add    ebp,ecx
  418f79:	addr16 xchg ebp,eax
  418f7b:	addr16 in al,dx
  418f7d:	pop    esp
  418f7e:	out    0x68,eax
  418f80:	fstp   QWORD PTR [esp+ecx*4+0x71]
  418f84:	dec    ebx
  418f85:	push   0x7d
  418f87:	ja     0x418f3c
  418f89:	jo     0x418fe0
  418f8b:	imul   ecx,DWORD PTR [ebx+0x6c],0x4e
  418f8f:	jb     0x418f46
  418f91:	pop    bx
  418f93:	js     0x418f3d
  418f95:	or     DWORD PTR [edi],edi
  418f97:	pop    ebp
	...
  418fc0:	stos   BYTE PTR es:[edi],al
  418fc1:	je     0x41900f
  418fc3:	imul   ecx,DWORD PTR [ebx+0x59],0x4e
  418fc7:	jne    0x418f71
  418fc9:	pop    ebx
  418fca:	out    0x61,eax
  418fcc:	push   0x7063416f
  418fd1:	jb     0x418fe8
  418fd3:	add    al,0x6c
  418fd5:	ins    DWORD PTR es:[edi],dx
  418fd6:	push   cs
  418fd7:	jbe    0x419041
  418fd9:	bound  eax,QWORD PTR [esi]
  418fdb:	ja     0x419021
  418fdd:	or     eax,ebx
  418fdf:	jb     0x418ffa
  418fe1:	pop    eax
  418fe2:	mov    edx,0x10574b66
  418fe7:	je     0x419051
  418fe9:	pop    ebx
  418fea:	out    0x64,eax
  418fec:	sub    BYTE PTR [edi+0x4],ch
  418fef:	jno    0x419015
  418ff1:	pop    esp
  418ff2:	out    0x58,eax
  418ff4:	and    eax,0x375bc672
  418ff9:	or     eax,ebx
  418ffb:	je     0x419025
  418ffd:	pop    ebx
  418ffe:	shr    DWORD PTR [edx+0x6c],cl
  419001:	or     edx,ecx
  419003:	jno    0x41902d
  419005:	push   0xffffffb3
  419007:	pop    edx
  419008:	adc    eax,0xeee90066
  41900d:	ins    DWORD PTR es:[edi],dx
  41900e:	ins    DWORD PTR es:[edi],dx
  41900f:	retf   
  419010:	jmp    0xecc9906f
  419015:	addr16 fs mov bl,bh
  419019:	or     BYTE PTR [edx-0x7a],dh
  41901c:	fsub   QWORD PTR [edi+0x6b]
  41901f:	or     BYTE PTR [eax+0x5a],0x6c
  419023:	mov    BYTE PTR [eax],al
	...
  419049:	add    BYTE PTR [eax],al
  41904b:	add    cl,ah
  41904d:	imul   esi,DWORD PTR [edx-0x17],0xffffffd7
  419051:	addr16 jno 0x418fe1
  419054:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419055:	je     0x419057
  419057:	jns    0x419013
  419059:	inc    eax
  41905a:	addr16 pop edx
  41905c:	lods   al,BYTE PTR ds:[esi]
  41905d:	or     DWORD PTR [edx+0x61],edi
  419060:	stos   BYTE PTR es:[edi],al
  419061:	push   edi
  419062:	bound  eax,QWORD PTR [edi-0x7c]
  419065:	or     DWORD PTR [ecx+0x48],esi
  419068:	jl     0x4190c6
  41906a:	arpl   WORD PTR [ebp+0x4f],dx
  41906d:	je     0x4190d6
  41906f:	push   edx
  419070:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419071:	or     DWORD PTR [eax+ecx*2+0x6b],esp
  419075:	ins    DWORD PTR es:[edi],dx
  419076:	pop    edi
  419077:	cmp    al,BYTE PTR [edi+0x66]
  41907a:	jb     0x419088
  41907c:	ins    BYTE PTR es:[edi],dx
  41907d:	outs   dx,DWORD PTR ds:[esi]
  41907e:	add    BYTE PTR ds:0x1d745a64,dl
  419084:	ins    BYTE PTR es:[edi],dx
  419085:	pop    edx
  419086:	je     0x419071
  419088:	jge    0x4190ca
  41908a:	jbe    0x419098
  41908c:	pop    ecx
  41908d:	push   0x6e471261
  419092:	outs   dx,BYTE PTR ds:[esi]
  419093:	or     al,0x2b
  419095:	outs   dx,BYTE PTR ds:[esi]
  419096:	jbe    0x41909c
  419098:	inc    edi
  419099:	gs pop edi
  41909b:	fist   WORD PTR [ecx]
  41909d:	gs add ah,cl
  4190a0:	and    DWORD PTR [ebp+0x6d],ebp
  4190a3:	fild   QWORD PTR ds:0x15c16109
  4190a9:	pop    ebx
  4190aa:	popa   
  4190ab:	add    BYTE PTR [edx+0xb],bh
  4190ae:	data16 jb 0x4190b1
	...
  4190d5:	add    BYTE PTR [eax],al
  4190d7:	add    BYTE PTR [ebx+0x66],bh
  4190da:	outs   dx,BYTE PTR ds:[esi]
  4190db:	fs jb  0x419142
  4190de:	imul   esp,DWORD PTR [edx+esi*2+0x67],0x61
  4190e3:	jae    0x4190bb
  4190e5:	inc    edx
  4190e6:	outs   dx,BYTE PTR ds:[esi]
  4190e7:	jns    0x41914b
  4190e9:	cmp    eax,0xbd76e6b
  4190ee:	imul   ebp,DWORD PTR [ecx-0x2f],0xbd736b59
  4190f5:	gs je  0x4190f8
  4190f8:	nop
  4190f9:	sbb    DWORD PTR [edx],esi
  4190fb:	xor    al,BYTE PTR [eax]
  4190fd:	sbb    DWORD PTR [eax],eax
  4190ff:	bound  esi,QWORD PTR [edi-0x78939d98]
  419105:	push   esi
  419106:	add    BYTE PTR [ecx],dh
  419108:	push   ebx
  419109:	adc    al,0x2d
  41910b:	xor    DWORD PTR [ebx+0x14],eax
  41910e:	sub    eax,0x5f429100
  419113:	popa   
  419114:	add    DWORD PTR [edx+0x6c],0x6b3d2261
  41911b:	jb     0x4190b3
  41911d:	outs   dx,BYTE PTR fs:[esi]
  41911f:	xor    al,BYTE PTR [ecx]
  419121:	or     esp,DWORD PTR [ebp+0x6c]
  419124:	pop    ebp
  419125:	pop    ebx
  419126:	popa   
  419127:	addr16 cmp eax,0x4d660069
  41912d:	inc    edx
  41912e:	je     0x419192
  419130:	push   ebx
  419131:	inc    ecx
  419132:	ins    BYTE PTR es:[edi],dx
  419133:	xor    edx,esp
  419135:	imul   esi,DWORD PTR ss:[esi+0x3b],0x43
  41913a:	arpl   WORD PTR [eax],ax
	...
  419164:	dec    esp
  419165:	fs je  0x4191d0
  419168:	push   ebx
  419169:	inc    ebx
  41916a:	add    BYTE PTR [ebp-0x61],ah
  41916d:	inc    ecx
  41916e:	pop    ebp
  41916f:	outs   dx,BYTE PTR ds:[esi]
  419170:	xchg   edi,eax
  419171:	imul   ebp,DWORD PTR [eax+eax*1+0x4b],0x2c6d66c3
  419179:	shr    BYTE PTR [eax+eax*1+0x2d],cl
  41917d:	popf   
  41917e:	imul   bx,WORD PTR [esi+eax*8],0x5f
  419184:	clc    
  419185:	rcr    BYTE PTR [eax+0x6b],1
  419188:	add    dh,al
  41918a:	pop    eax
  41918b:	pop    edi
  41918c:	repz jle 0x4191ef
  41918f:	ins    BYTE PTR es:[edi],dx
  419190:	fucomip st,st(7)
  419192:	pop    ebx
  419193:	pop    edi
  419194:	fadd   DWORD PTR [esi+0x5ef10057]
  41919a:	pop    ecx
  41919b:	outs   dx,BYTE PTR ds:[esi]
  41919c:	dec    ebx
  41919d:	mov    eax,ds:0xa2d43274
  4191a2:	pusha  
  4191a3:	xor    al,0xb9
  4191a5:	lock arpl WORD PTR [edi-0x57],bx
  4191a9:	pop    ecx
  4191aa:	add    DWORD PTR [edx-0x52],esi
  4191ad:	dec    esp
  4191ae:	xor    esi,DWORD PTR [edx]
  4191b0:	js     0x4191a2
  4191b2:	arpl   WORD PTR [edx+ebp*4+0x52],bp
  4191b6:	pop    eax
  4191b7:	pop    edi
  4191b8:	dec    ebx
  4191b9:	inc    eax
  4191ba:	jbe    0x419223
  4191bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191bd:	push   ebx
  4191be:	pop    edi
  4191bf:	add    BYTE PTR [edx+0x7f725f17],bl
  4191c5:	lock pushw 0x0
	...
  4191ee:	add    BYTE PTR [eax],al
  4191f0:	data16 sbb al,0x75
  4191f3:	arpl   WORD PTR [edx-0x10],bp
  4191f6:	xor    BYTE PTR [ebx],dh
  4191f8:	ss mov ch,0x30
  4191fb:	add    BYTE PTR [edx+0x6],ch
  4191fe:	popa   
  4191ff:	arpl   WORD PTR [edi-0x3f],bp
  419202:	add    DWORD PTR [eax+0x6a],ebp
  419205:	loop   0x419264
  419207:	popa   
  419208:	pop    esp
  419209:	loop   0x41926b
  41920b:	add    BYTE PTR [edi],ch
  41920d:	or     eax,0xe226746c
  419212:	add    DWORD PTR [ecx+0x2a],esi
  419215:	or     ebp,ebx
  419217:	pusha  
  419218:	daa    
  419219:	or     DWORD PTR [eax],ebx
  41921b:	xor    eax,0x371a1b59
  419220:	dec    ebx
  419221:	jno    0x4191eb
  419223:	push   edi
  419224:	daa    
  419225:	outs   dx,BYTE PTR ds:[esi]
  419226:	out    0x5d,eax
  419228:	in     al,dx
  419229:	pop    ecx
  41922a:	mov    bh,0x60
  41922c:	stc    
  41922d:	or     bl,cl
  41922f:	fs in  eax,dx
  419231:	outs   dx,DWORD PTR ds:[esi]
  419232:	les    edx,FWORD PTR [edi-0x19]
  419235:	arpl   di,sp
  419237:	pop    esi
  419238:	in     al,0x54
  41923a:	xchg   ebx,eax
  41923b:	pusha  
  41923c:	cmc    
  41923d:	or     BYTE PTR [edx-0x7fa6259c],cl
  419243:	pusha  
  419244:	dec    ebx
  419245:	pop    edx
  419246:	jnp    0x4192a8
  419248:	fild   QWORD PTR [eax+ecx*4+0x3]
  41924c:	mov    ebx,0xa86c8857
  419251:	push   edi
  419252:	out    0x5b,eax
	...
  41927c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41927d:	push   ebp
  41927e:	dec    ebx
  41927f:	pop    ecx
  419280:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419281:	or     DWORD PTR [esi+0x5b],edx
  419284:	mov    ch,0x65
  419286:	inc    esi
  419287:	jno    0x419223
  419289:	or     DWORD PTR [edi+ebp*2],edi
  41928c:	call   0x4609:0xa85b4b55
  419293:	arpl   WORD PTR [edi+0x66],di
  419296:	cmp    al,BYTE PTR [ecx+ebp*2]
  419299:	jb     0x4192d6
  41929b:	pop    eax
  41929c:	outs   dx,BYTE PTR ds:[esi]
  41929d:	push   0x1b
  41929f:	pop    edi
  4192a0:	jp     0x4192ab
  4192a2:	push   es
  4192a3:	pop    esp
  4192a4:	imul   esp,DWORD PTR [ebp+0x1b],0x5644b5a
  4192ab:	pop    esp
  4192ac:	popa   
  4192ad:	jo     0x4192c3
  4192af:	add    al,0x1c
  4192b1:	pop    ss
  4192b2:	mov    edx,0x13782f
  4192b7:	mov    esi,0xe9301470
  4192bc:	dec    eax
  4192bd:	push   0x5336e274
  4192c2:	imul   ecx,esi,0xdc756b1e
  4192c8:	dec    eax
  4192c9:	jno    0x41933f
  4192cb:	aad    0x18
  4192cd:	pop    ds
  4192ce:	sub    eax,0x2e2c6016
  4192d3:	clc    
  4192d4:	ds sub al,0x2e
  4192d7:	lock aaa 
  4192d9:	sub    ebp,DWORD PTR [edi]
  4192db:	mul    BYTE PTR [eax]
  4192dd:	pop    ds
  4192de:	cmp    cl,bl
	...
  419308:	and    BYTE PTR [ecx],bl
  41930a:	sub    eax,0x776b0399
  41930f:	(bad)  
  419310:	jmp    0x41934d
  419312:	je     0x419298
  419314:	xor    bl,BYTE PTR [ecx+0x68]
  419317:	jns    0x419361
  419319:	jno    0x41938f
  41931b:	jne    0x4192d5
  41931d:	pop    ds
  41931e:	sub    eax,0x7258a9c6
  419323:	sub    BYTE PTR [ecx-0x57b29c95],0x70
  41932a:	arpl   WORD PTR [ebx+0x41],sp
  41932d:	arpl   WORD PTR [edx+0x13],si
  419330:	outs   dx,DWORD PTR ds:[esi]
  419331:	sbb    DWORD PTR [eax],edi
  419333:	sbb    DWORD PTR [edx],esi
  419335:	pop    ecx
  419336:	ins    DWORD PTR es:[edi],dx
  419337:	push   edi
  419338:	mov    al,ds:0x7b48652e
  41933d:	push   0x599f392e
  419342:	add    cl,ch
  419344:	nop
  419345:	push   ebp
  419346:	je     0x419361
  419348:	sbb    eax,0x5f102d2e
  41934d:	cmp    al,0x71
  41934f:	(bad)  
  419350:	pushw  0x1d2d
  419354:	pop    edi
  419355:	sbb    dl,BYTE PTR [ebp+0x0]
  419358:	xchg   ebx,eax
  419359:	cmp    esi,DWORD PTR [esi+0x65]
  41935c:	xchg   ebp,eax
  41935d:	sbb    al,0x6d
  41935f:	push   esi
  419360:	dec    eax
  419361:	pushw  0x4a
  419364:	hlt    
  419365:	cmp    bh,BYTE PTR [eax+0x65]
  419368:	mov    ds:0x74743f,al
	...
  419391:	add    BYTE PTR [eax],al
  419393:	add    BYTE PTR [edx-0x6cd0d4d3],al
  419399:	push   esp
  41939a:	pop    ebp
  41939b:	outs   dx,BYTE PTR ds:[esi]
  41939c:	jle    0x4193f3
  41939e:	pop    ebp
  41939f:	fs jg  0x4193a3
  4193a2:	pop    edi
  4193a3:	outs   dx,DWORD PTR ds:[esi]
  4193a4:	xchg   edi,eax
  4193a5:	add    BYTE PTR [eax+0x41],ch
  4193a8:	mov    ebp,DWORD PTR [ebp+0x3f]
  4193ab:	cmp    DWORD PTR [edx+ebp*1+0x32db622b],ebp
  4193b2:	push   edx
  4193b3:	cs iret 
  4193b5:	outs   dx,DWORD PTR ds:[esi]
  4193b6:	popa   
  4193b7:	add    dl,cl
  4193b9:	imul   esi,DWORD PTR [eax+esi*2+0x78],0x0
  4193be:	sub    esi,DWORD PTR [esi-0x74]
  4193c1:	add    DWORD PTR [eax+0x64],ebp
  4193c4:	xlat   BYTE PTR ds:[ebx]
  4193c5:	add    BYTE PTR [edi+0x6f],bl
  4193c8:	mov    DWORD PTR [eax],0x1df56e76
  4193ce:	push   esi
  4193cf:	outs   dx,BYTE PTR ds:[esi]
  4193d0:	add    DWORD PTR [eax+0x46],0x57f28366
  4193d7:	push   edx
  4193d8:	push   0x8f7860f3
  4193dd:	add    eax,0x1c2f5900
  4193e2:	push   eax
  4193e3:	push   edi
  4193e4:	sbb    eax,DWORD PTR cs:[ebp+0x4c]
  4193e8:	das    
  4193e9:	adc    eax,0x352b5555
  4193ee:	inc    edi
  4193ef:	inc    esp
  4193f0:	sbb    al,0x1c
  4193f2:	dec    esp
  4193f3:	inc    ebp
  4193f4:	add    cl,BYTE PTR [esi+0x51]
  4193f7:	dec    ecx
	...
  419420:	dec    ebx
  419421:	das    
  419422:	push   edx
  419423:	push   edi
  419424:	jnp    0x41943a
  419426:	aas    
  419427:	inc    esp
  419428:	sbb    ebp,DWORD PTR [ecx]
  41942a:	dec    edi
  41942b:	inc    edi
  41942c:	jp     0x4193f8
  41942e:	xor    DWORD PTR [eax],eax
  419430:	dec    ebx
  419431:	lock add DWORD PTR [eax],eax
  419434:	dec    ecx
  419435:	lock cmp BYTE PTR [ebp+0x7],cl
  419439:	popf   
  41943a:	add    al,0xff
  41943c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41943d:	lock add DWORD PTR [eax],eax
  419440:	dec    ebx
  419441:	lock add DWORD PTR [eax],eax
  419444:	clc    
  419445:	jp     0x419482
  419447:	push   esp
  419448:	hlt    
  419449:	mov    al,0x4f
  41944b:	inc    ebx
  41944c:	daa    
  41944d:	lods   eax,DWORD PTR ds:[esi]
  41944e:	pop    esp
  41944f:	popa   
  419450:	stc    
  419451:	ret    0x6d72
  419454:	in     eax,dx
  419455:	xchg   ebx,eax
  419456:	inc    ebp
  419457:	push   ebp
  419458:	loop   0x4194cb
  41945a:	pop    ebp
  41945b:	ins    DWORD PTR es:[edi],dx
  41945c:	fdivr  QWORD PTR [esi+0x45]
  41945f:	inc    ecx
  419460:	(bad)  
  419461:	jge    0x4194d2
  419463:	arpl   bp,sp
  419465:	jae    0x4194b2
  419467:	arpl   cx,bx
  419469:	pop    esi
  41946a:	pop    esp
  41946b:	ins    DWORD PTR es:[edi],dx
  41946c:	mov    ch,0x7c
  41946e:	push   eax
  41946f:	outs   dx,BYTE PTR ds:[esi]
  419470:	mov    dl,0x82
  419472:	jb     0x4194e8
  419474:	stos   BYTE PTR es:[edi],al
  419475:	pop    esp
  419476:	push   ebp
  419477:	add    BYTE PTR [esi-0x6791a4ce],dl
  41947d:	xor    al,0x63
  41947f:	ins    BYTE PTR es:[edi],dx
  419480:	scas   eax,DWORD PTR es:[edi]
  419481:	pop    ds
  419482:	jo     0x4194f6
	...
  4194ac:	mov    ds:0x87005d1a,al
  4194b1:	cmp    DWORD PTR [ecx+0x70],esi
  4194b4:	ja     0x419507
  4194b6:	imul   ecx,DWORD PTR [esi+0x6a],0x45
  4194ba:	pop    edi
  4194bb:	add    BYTE PTR [edi+0x4b0001f0],dl
  4194c1:	or     edi,esp
  4194c3:	add    ecx,DWORD PTR [ebx+0x9]
  4194c6:	out    0x5a,eax
  4194c8:	push   0x67610557
  4194cd:	push   ss
  4194ce:	fst    DWORD PTR ds:0x4136d67
  4194d4:	push   ds
  4194d5:	xor    eax,0x55283f1a
  4194da:	sub    BYTE PTR [ebx+0x3f],ah
  4194dd:	jo     0x4194d4
  4194df:	pusha  
  4194e0:	or     ch,BYTE PTR [edx-0x2b]
  4194e3:	jb     0x41951b
  4194e5:	ins    DWORD PTR es:[edi],dx
  4194e6:	les    edx,FWORD PTR [edx+0x28]
  4194e9:	push   esi
  4194ea:	ficomp DWORD PTR [esi+eiz*1+0x6b]
  4194ee:	mov    al,ds:0xb9394b5f
  4194f3:	push   esi
  4194f4:	jmp    0x9b65:0x472ba63
  4194fb:	push   esi
  4194fc:	sbb    ah,BYTE PTR [edx+edi*4+0x72]
  419500:	in     al,0x69
  419502:	xchg   ebp,eax
  419503:	cmp    al,0xef
  419505:	or     bh,ah
  419507:	add    ecx,DWORD PTR [ebx+0x9]
  41950a:	out    0x3,eax
  41950c:	dec    ebx
  41950d:	or     edi,esp
  41950f:	bound  eax,QWORD PTR [eax]
	...
  419535:	add    BYTE PTR [eax],al
  419537:	add    cl,bl
  419539:	pop    edi
  41953a:	ja     0x4195ab
  41953c:	jp     0x419559
  41953e:	int    0x5f
  419540:	scas   eax,DWORD PTR es:[edi]
  419541:	gs out 0x42,eax
  419544:	mov    ecx,0x986f7752
  419549:	addr16 push edi
  41954b:	jb     0x419503
  41954d:	pop    ebp
  41954e:	inc    esp
  41954f:	popa   
  419550:	xchg   edi,eax
  419551:	dec    ebp
  419552:	dec    eax
  419553:	jo     0x4195c9
  419555:	or     edi,esp
  419557:	add    ecx,DWORD PTR [ebx+0x9]
  41955a:	adc    eax,0xe76e835f
  41955f:	push   eax
  419560:	outs   dx,BYTE PTR ds:[esi]
  419561:	outs   dx,DWORD PTR ds:[esi]
  419562:	add    BYTE PTR ds:0x44723866,bh
  419568:	cmp    DWORD PTR [esi],0x67
  41956b:	pop    ss
  41956c:	jns    0x419586
  41956e:	push   edx
  41956f:	jmp    0x7a4eeeb
  419574:	dec    edi
  419575:	fdivr  st,st(5)
  419577:	jmp    0xca9f044
  41957c:	and    esp,DWORD PTR [ebp+0x31]
  41957f:	mov    ebx,0x56c6d56
  419584:	dec    edi
  419585:	cmp    cl,BYTE PTR [eax+0x26]
  419588:	or     al,0x5d
  41958a:	inc    esi
  41958b:	(bad)  
  41958c:	cld    
  41958d:	ins    BYTE PTR es:[edi],dx
  41958e:	arpl   bx,bx
  419590:	clc    
  419591:	aaa    
  419592:	je     0x419555
  419594:	or     DWORD PTR [ecx],ecx
  419596:	add    cl,ch
  419598:	dec    eax
  419599:	or     DWORD PTR [eax],eax
  41959b:	mov    DWORD PTR [eax],eax
	...
  4195c1:	add    BYTE PTR [eax],al
  4195c3:	add    BYTE PTR [eax+0x18],ah
  4195c6:	add    BYTE PTR [eax+eiz*2+0x18],dh
  4195ca:	add    BYTE PTR [eax+edx*2],ch
  4195cd:	sbb    BYTE PTR [eax],al
  4195cf:	adc    dl,BYTE PTR [eax+0x18]
  4195d2:	add    BYTE PTR [eax],dl
  4195d4:	inc    eax
  4195d5:	sbb    BYTE PTR [eax],al
  4195d7:	and    BYTE PTR [eax+0x18],al
  4195da:	add    al,ah
  4195dc:	xor    bl,BYTE PTR [eax]
  4195de:	add    bh,ch
  4195e0:	xor    bl,BYTE PTR [eax]
  4195e2:	add    BYTE PTR [edx+eiz*2+0x62b00018],bh
  4195e9:	sbb    BYTE PTR [eax],al
  4195eb:	mov    edx,DWORD PTR [edx+0x18]
  4195ee:	add    BYTE PTR [edi+0x51],ah
  4195f1:	sbb    BYTE PTR [eax],al
  4195f3:	mov    al,BYTE PTR [edx+0x18]
  4195f6:	add    cl,ch
  4195f8:	dec    eax
  4195f9:	or     DWORD PTR [eax],eax
  4195fb:	call   0xe4c19f48
  419600:	dec    eax
  419601:	or     DWORD PTR [eax],eax
  419603:	add    BYTE PTR [edi],bh
  419605:	and    BYTE PTR fs:[ebp+ecx*4+0x6a],al
  41960a:	jno    0x419679
  41960c:	xchg   DWORD PTR [edi],edi
  41960e:	je     0x419683
  419610:	loop   0x41961c
  419612:	add    BYTE PTR [eax],al
  419614:	jb     0x419618
  419616:	add    BYTE PTR [eax],al
  419618:	repnz dec edx
  41961a:	jo     0x41968c
  41961c:	es ins BYTE PTR es:[edi],dx
  41961e:	je     0x419681
  419620:	loop   0x41962c
  419622:	add    BYTE PTR [eax],al
  419624:	xor    dl,BYTE PTR [eax]
	...
  41964e:	add    BYTE PTR [eax],al
  419650:	mov    dl,0x1f
  419652:	imul   esp,DWORD PTR [ebx+0x43],0x31
  419656:	and    BYTE PTR [ecx-0x4e],al
  419659:	pop    ebx
  41965a:	inc    esp
  41965b:	popa   
  41965c:	xchg   BYTE PTR [edx+0x0],ch
  41965f:	add    DWORD PTR [edx-0x5ddf7ff5],esi
  419665:	or     eax,DWORD PTR [eax]
  419667:	inc    ebx
  419668:	sub    DWORD PTR [eax+0x68],0x65
  41966c:	jb     0x419678
  41966e:	add    BYTE PTR [eax],al
  419670:	repnz sub al,BYTE PTR [eax]
  419673:	add    BYTE PTR [edx+0x48],ah
  419676:	imul   ebp,DWORD PTR [edi-0x77],0x32
  41967a:	popa   
  41967b:	jae    0x4196ef
  41967d:	or     al,BYTE PTR [eax]
  41967f:	add    dl,dh
  419681:	sub    DWORD PTR [eax],eax
  419683:	add    BYTE PTR [edx+0x13],ah
  419686:	gs jae 0x41963f
  419689:	cmp    al,0x72
  41968b:	jns    0x4196bf
  41968d:	or     DWORD PTR [eax],eax
  41968f:	add    BYTE PTR [edx+0x22fffdd7],dh
  419695:	and    BYTE PTR [ebp+0x20],dh
  419698:	out    0x3d,al
  41969a:	pop    edi
  41969b:	jne    0x41971c
  41969d:	pusha  
  41969e:	outs   dx,BYTE PTR ds:[esi]
  41969f:	je     0x419622
  4196a1:	or     eax,0xe04b0002
  4196a6:	and    DWORD PTR [ecx],0x4101e04b
  4196ac:	je     0x4196eb
  4196ae:	outs   dx,DWORD PTR ds:[esi]
  4196af:	ins    DWORD PTR es:[edi],dx
  4196b0:	ins    DWORD PTR es:[edi],dx
  4196b1:	add    BYTE PTR [ebx+0x70],al
	...
  4196dc:	jnp    0x419702
  4196de:	arpl   WORD PTR [edx+ebp*2-0x20],si
  4196e2:	add    al,0x0
  4196e4:	dec    ebx
  4196e5:	pusha  
  4196e6:	sub    DWORD PTR [eax],eax
  4196e8:	dec    ebx
  4196e9:	loopne 0x41973b
  4196eb:	ja     0x419718
  4196ed:	adc    BYTE PTR [ebx+0x61],ch
  4196f0:	push   edi
  4196f1:	std    
  4196f2:	push   ebp
  4196f3:	arpl   WORD PTR [eax],di
  4196f5:	loopne 0x4196fa
  4196f7:	add    BYTE PTR [ebx+0x60],cl
  4196fa:	xor    al,BYTE PTR [eax]
  4196fc:	dec    ebx
  4196fd:	loopne 0x419745
  4196ff:	ins    DWORD PTR es:[edi],dx
  419700:	push   ds
  419701:	aad    0x72
  419703:	outs   dx,BYTE PTR ds:[esi]
  419704:	imul   esp,DWORD PTR [edx+esi*2+0x68c51661],0x6e
  41970c:	pop    ds
  41970d:	mov    bl,0x1
  41970f:	add    cl,BYTE PTR [ebx-0x20]
  419712:	sub    DWORD PTR ds:0x4101e04b,0x6d70c4ec
  41971c:	in     eax,0xff
  41971e:	inc    edx
  41971f:	fs fmulp st(0),st
  419722:	outs   dx,DWORD PTR ds:[esi]
  419723:	fdiv   DWORD PTR [bp+di+0x53]
  419727:	pop    edi
  419728:	xlat   BYTE PTR ds:[ebx]
  419729:	js     0x419782
  41972b:	arpl   WORD PTR [ebx],bp
  41972d:	xchg   esp,eax
  41972e:	jb     0x41979d
  419730:	fbstp  TBYTE PTR [edx+0x1]
  419733:	inc    DWORD PTR [eax+eiz*8-0x7f]
  419737:	xor    BYTE PTR [ebx-0x20],cl
  41973a:	add    DWORD PTR [edi],edi
  41973c:	scas   eax,DWORD PTR es:[edi]
  41973d:	lea    ebp,[esi+ebp*2+0x0]
	...
  419765:	add    BYTE PTR [eax],al
  419767:	add    BYTE PTR [edx-0x558daaad],ah
  41976d:	or     DWORD PTR [ebx+0x6d],ebx
  419770:	xchg   ebp,eax
  419771:	ins    BYTE PTR es:[edi],dx
  419772:	pop    es
  419773:	cmp    BYTE PTR [esi+0x4b574366],ah
  419779:	or     bh,ah
  41977b:	add    ecx,ebx
  41977d:	or     esp,edi
  41977f:	add    ecx,DWORD PTR [ebx+0x39]
  419782:	inc    esp
  419783:	push   esi
  419784:	jp     0x4197ec
  419786:	inc    ebp
  419787:	gs pop edi
  419789:	or     DWORD PTR [edx],ebx
  41978b:	jae    0x4197fa
  41978d:	pop    ebp
  41978e:	push   ds
  41978f:	gs pop ecx
  419791:	ins    BYTE PTR es:[edi],dx
  419792:	cmp    edx,DWORD PTR [ecx+0x6c]
  419795:	push   0x19
  419797:	jae    0x4197f3
  419799:	add    ax,0x2758
  41979d:	adc    BYTE PTR ds:[edx+0x27],dh
  4197a1:	data16 not BYTE PTR [esi+0x17]
  4197a5:	dec    edx
  4197a6:	cld    
  4197a7:	push   ebp
  4197a8:	cmp    DWORD PTR [ebp+edi*8+0x57],ebp
  4197ac:	std    
  4197ad:	imul   ebx,ecx,0x56
  4197b0:	and    al,0x66
  4197b2:	int    0x3f
  4197b4:	or     BYTE PTR [ecx-0x29],dl
  4197b7:	outs   dx,DWORD PTR ds:[esi]
  4197b8:	push   ds
  4197b9:	pop    ebx
  4197ba:	les    edx,FWORD PTR [ebp+0x27]
  4197bd:	cmp    cl,bh
  4197bf:	push   0x4a0764ef
  4197c4:	out    0x64,al
  4197c6:	retf   
  4197c7:	push   0x33e759f9
	...
  4197f4:	push   ss
  4197f5:	cmp    bh,BYTE PTR [ebx-0x38a5d7dd]
  4197fb:	dec    ebx
  4197fc:	(bad)  
  4197fd:	cmp    al,0xb7
  4197ff:	xor    bl,BYTE PTR [edi+eiz*1]
  419802:	xlat   BYTE PTR ds:[ebx]
  419803:	adc    BYTE PTR [ecx+0x41],dl
  419806:	xchg   esi,eax
  419807:	push   esi
  419808:	mov    bh,0xf
  41980a:	(bad)  
  41980b:	sub    BYTE PTR [edx-0x781cfffa],bh
  419811:	push   0x61
  419813:	test   BYTE PTR [eax+0x5d],bh
  419816:	cmp    cl,BYTE PTR [ecx]
  419818:	ins    DWORD PTR es:[edi],dx
  419819:	es sub ch,ah
  41981c:	inc    esi
  41981d:	adc    al,0x61
  41981f:	dec    edx
  419820:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419821:	pop    ecx
  419822:	je     0x419820
  419824:	lea    esp,[ebx+0x61]
  419827:	push   esi
  419828:	jae    0x419896
  41982a:	outs   dx,BYTE PTR ds:[esi]
  41982b:	inc    esi
  41982c:	push   ebp
  41982d:	sub    DWORD PTR [edi+0x4d],esp
  419830:	arpl   WORD PTR fs:[eax+eax*2-0x7d],si
  419835:	pop    esp
  419836:	sub    al,0xc9
  419838:	adc    ch,BYTE PTR cs:[edi-0x24]
  41983c:	cmp    BYTE PTR [eax],al
  41983e:	or     ch,BYTE PTR [edx]
  419840:	pop    edx
  419841:	arpl   WORD PTR [esp+eax*1+0x39],si
  419845:	pop    ebp
  419846:	sub    esi,DWORD PTR ds:0xf5656324
  41984c:	and    BYTE PTR [edi],cl
  41984e:	and    ah,cl
  419850:	sbb    al,0x58
  419852:	or     esp,ebx
  419854:	pcmpgtd mm5,QWORD PTR [esi-0x29]
	...
  419880:	and    eax,0x1bd0746a
  419885:	arpl   WORD PTR [edx],di
  419887:	or     DWORD PTR [esi],esp
  419889:	gs ins DWORD PTR es:[edi],dx
  41988b:	(bad)  
  41988d:	dec    DWORD PTR [ecx]
  41988f:	stos   BYTE PTR es:[edi],al
  419890:	sti    
  419891:	bound  esi,QWORD PTR [esp+eax*8-0x6]
  419895:	pop    esp
  419896:	sub    ebx,DWORD PTR [ebp-0xc9ca6ef]
  41989c:	sub    BYTE PTR [eax+esi*2],dh
  41989f:	cdq    
  4198a0:	in     al,dx
  4198a1:	imul   esp,DWORD PTR [ecx-0x78],0xfffffffc
  4198a5:	imul   ebp,DWORD PTR [ebp-0x79],0x1b
  4198a9:	popaw  
  4198ab:	xchg   ebp,eax
  4198ac:	lods   eax,DWORD PTR ds:[esi]
  4198ad:	pop    ebp
  4198ae:	sub    eax,DWORD PTR [eax]
  4198b0:	sar    DWORD PTR [edx+esi*2],0x65
  4198b4:	ret    
  4198b5:	bound  ecx,QWORD PTR [ecx]
  4198b7:	or     ah,cl
  4198b9:	pop    eax
  4198ba:	outs   dx,BYTE PTR ds:[esi]
  4198bb:	je     0x41988c
  4198bd:	pop    ecx
  4198be:	je     0x4198ed
  4198c0:	outs   dx,DWORD PTR ds:[esi]
  4198c1:	push   edi
  4198c2:	pop    edi
  4198c3:	outs   dx,DWORD PTR ds:[esi]
  4198c4:	mov    fs,WORD PTR [eax+0x6e]
  4198c7:	cmp    BYTE PTR [di],ch
  4198ca:	bound  ebp,QWORD PTR [ecx+0x44]
  4198cd:	push   0x5f77972
  4198d2:	push   ecx
  4198d3:	jae    0x419864
  4198d5:	cmp    ebp,DWORD PTR [ecx]
  4198d7:	inc    ecx
  4198d8:	jge    0x419946
  4198da:	outs   dx,BYTE PTR ds:[esi]
  4198db:	je     0x4198b5
  4198dd:	daa    
  4198de:	dec    ecx
  4198df:	outs   dx,DWORD PTR ds:[esi]
  4198e0:	sub    BYTE PTR [eax+0x6c],ah
  4198e3:	ins    BYTE PTR es:[edi],dx
	...
  41990c:	inc    ebx
  41990d:	sbb    dh,BYTE PTR [esi+ebp*1]
  419910:	repnz daa 
  419912:	sub    BYTE PTR [ebx-0x3b],ah
  419915:	bound  esi,QWORD PTR [eax+0x61]
  419918:	mov    esi,0x4f6c625e
  41991d:	neg    BYTE PTR [edi]
  41991f:	dec    ebp
  419920:	push   ecx
  419921:	inc    eax
  419922:	inc    ecx
  419923:	and    bh,bl
  419925:	sbb    DWORD PTR [eax],esi
  419927:	cmp    edx,DWORD PTR [edx+0x12]
  41992a:	outs   dx,BYTE PTR gs:[esi]
  41992c:	mov    ds,WORD PTR [eax+0x73]
  41992f:	jae    0x419973
  419931:	lock aaa 
  419933:	sub    DWORD PTR [edi+0x720a0905],esp
  419939:	dec    esp
  41993a:	imul   ebp,DWORD PTR [esi-0x42],0x6a
  41993e:	outs   dx,BYTE PTR ds:[esi]
  41993f:	je     0x419988
  419941:	cmp    DWORD PTR [ecx+0x6e],esp
  419944:	lea    edi,[ebx]
  419946:	push   0x6b43723a
  41994b:	arpl   bx,ax
  41994d:	cmp    esp,DWORD PTR [ebp+0x6f]
  419950:	dec    ebx
  419951:	mov    WORD PTR [ebx],ds
  419953:	add    BYTE PTR [ebp+ebp*4+0x4f662035],cl
  41995a:	and    DWORD PTR [eax-0x61],ecx
  41995d:	jl     0x419990
  41995f:	sub    eax,0xb11ca7a
  419964:	push   ecx
  419965:	test   al,0x70
  419967:	jno    0x419900
  419969:	es and al,0x23
  41996c:	cwde   
  41996d:	in     eax,0x7
  41996f:	aas    
	...
  419998:	test   al,0x3f
  41999a:	addr16 jo 0x419a1c
  41999d:	mul    BYTE PTR [ebx]
  41999f:	sub    ch,BYTE PTR [esi+esi*8]
  4199a2:	push   cs
  4199a3:	or     cl,BYTE PTR [edx+0x7b63613f]
  4199a9:	adc    al,0x2f
  4199ab:	inc    ebx
  4199ac:	jne    0x4199ed
  4199ae:	ins    DWORD PTR es:[edi],dx
  4199af:	fs jb  0x4199ac
  4199b2:	cmp    ch,BYTE PTR fs:[ebx]
  4199b5:	stc    
  4199b6:	arpl   WORD PTR [di-0xc],bx
  4199ba:	push   0x74
  4199bc:	inc    edx
  4199bd:	xchg   esp,eax
  4199be:	and    DWORD PTR [edx],ebp
  4199c0:	adc    cl,0x20
  4199c3:	xor    BYTE PTR [esi-0x2a],al
  4199c6:	inc    edx
  4199c7:	ins    DWORD PTR es:[edi],dx
  4199c8:	sbb    eax,0x1f61670a
  4199cd:	or     DWORD PTR [ebp+0x6e],ebp
  4199d0:	popa   
  4199d1:	add    BYTE PTR [ecx+0x6c],ah
  4199d4:	and    al,0xaf
  4199d6:	push   0x5295410b
  4199db:	arpl   cx,di
  4199dd:	aam    0x44
  4199df:	gs out 0xb9,al
  4199e2:	push   ebp
  4199e3:	cmp    ch,BYTE PTR [ebx]
  4199e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199e6:	outs   dx,BYTE PTR ds:[esi]
  4199e7:	jp     0x4199cb
  4199e9:	retf   
  4199ea:	ins    DWORD PTR es:[edi],dx
  4199eb:	pop    edi
  4199ec:	xor    al,0xdc
  4199ee:	sub    esi,DWORD PTR [eax]
  4199f0:	sub    ecx,DWORD PTR [ecx]
  4199f2:	iret   
  4199f3:	(bad)  
  4199f4:	out    0x63,al
  4199f6:	xchg   edi,eax
  4199f7:	xlat   BYTE PTR fs:[ebx]
  4199f9:	pop    edi
  4199fa:	mov    DWORD PTR [edi+0x0],ebp
	...
  419a21:	add    BYTE PTR [eax],al
  419a23:	add    BYTE PTR [eax-0x65af38f2],ch
  419a29:	inc    eax
  419a2a:	lods   al,BYTE PTR ds:[esi]
  419a2b:	and    edi,DWORD PTR [eax+0x23]
  419a2e:	mov    bh,0x1a
  419a30:	imul   edi,DWORD PTR [edx],0xffffff80
  419a33:	ins    DWORD PTR es:[edi],dx
  419a34:	scas   eax,DWORD PTR es:[edi]
  419a35:	bound  esi,QWORD PTR [esi+0x52]
  419a38:	imul   edx,DWORD PTR [eax],0x1f
  419a3b:	sub    eax,0x9ebff40
  419a40:	dec    ebx
  419a41:	and    esp,edi
  419a43:	sub    eax,0x2a2b0935
  419a48:	sub    eax,0x2529e71f
  419a4d:	pop    ds
  419a4e:	out    0x6d,eax
  419a50:	push   0x6c54485d
  419a55:	push   ss
  419a56:	stc    
  419a57:	sub    eax,0x4136567
  419a5c:	test   DWORD PTR [ebx+edx*1+0x45],ebp
  419a60:	pop    ebx
  419a61:	pusha  
  419a62:	sub    DWORD PTR [ecx+0x2d],ebx
  419a65:	imul   eax,DWORD PTR [edx+edx*2],0x5
  419a69:	push   edi
  419a6a:	or     al,0x69
  419a6c:	dec    ebx
  419a6d:	inc    ebx
  419a6e:	add    al,0x58
  419a70:	sbb    BYTE PTR [esi+0xc],dl
  419a73:	push   edx
  419a74:	or     BYTE PTR [ebx-0xc],ah
  419a77:	jo     0x419ac4
  419a79:	or     esi,edx
  419a7b:	outs   dx,DWORD PTR ds:[esi]
  419a7c:	sub    BYTE PTR [esi],dl
  419a7e:	sbb    DWORD PTR [esi],ebp
  419a80:	daa    
  419a81:	gs ret 
  419a83:	add    ebx,DWORD PTR [edx]
  419a85:	pop    ebp
  419a86:	(bad)  
  419a87:	dec    esi
	...
  419ab0:	sti    
  419ab1:	imul   edx,ebp,0x32
  419ab4:	jmp    DWORD PTR [ecx-0x47]
  419ab7:	fs out 0x6b,al
  419aba:	add    cl,ch
  419abc:	dec    eax
  419abd:	xor    ah,BYTE PTR [edi+esi*4-0x19]
  419ac1:	pop    eax
  419ac2:	fidivr DWORD PTR [bp+si]
  419ac5:	and    esp,DWORD PTR [ebp+ecx*4-0x24]
  419ac9:	or     BYTE PTR [edi],bh
  419acb:	test   DWORD PTR [esi+ebx*2+0x6c948861],esi
  419ad2:	aas    
  419ad3:	xchg   edi,eax
  419ad4:	lods   al,BYTE PTR ds:[esi]
  419ad5:	dec    eax
  419ad6:	outs   dx,BYTE PTR ds:[esi]
  419ad7:	nop
  419ad8:	xchg   esp,eax
  419ad9:	push   0x53b7855f
  419ade:	arpl   WORD PTR [edx+0x2a0065af],bx
  419ae4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ae5:	ins    BYTE PTR es:[edi],dx
  419ae6:	popa   
  419ae7:	push   edx
  419ae8:	push   ebx
  419ae9:	pop    esi
  419aea:	imul   ecx,DWORD PTR [ebp+esi*2+0x44],0x6c693c63
  419af2:	jb     0x419b2e
  419af4:	addr16 push 0x5b86e970
  419afa:	arpl   WORD PTR [edx+ebx*1+0x68],cx
  419afe:	fs jmp 0xda4f68f
  419b04:	mov    WORD PTR [edi+0x73],ds
  419b07:	or     al,0x64
  419b09:	pop    ebx
  419b0a:	pop    edi
  419b0b:	sbb    eax,0x2a00102c
  419b10:	sbb    DWORD PTR [esp+eiz*2+0x2f],ebp
	...
  419b3c:	sbb    DWORD PTR [ebx+eiz*2-0x17],ebp
  419b40:	or     ebx,DWORD PTR [ebx+0x77]
  419b43:	stc    
  419b44:	cld    
  419b45:	inc    ebp
  419b46:	arpl   bp,si
  419b48:	push   ebp
  419b49:	pop    edx
  419b4a:	arpl   bx,bx
  419b4c:	add    ebp,DWORD PTR [edi+esi*2-0x17]
  419b50:	or     ebx,DWORD PTR [ebx+0x77]
  419b53:	fstp   DWORD PTR [esp+ecx*2]
  419b56:	js     0x419b31
  419b58:	out    dx,eax
  419b59:	pop    edx
  419b5a:	je     0x419b5c
  419b5c:	mov    ecx,0xa1007567
  419b61:	cmp    dh,BYTE PTR [ebp+0x70]
  419b64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b65:	dec    eax
  419b66:	popa   
  419b67:	jae    0x419aff
  419b69:	cmp    ch,BYTE PTR [ebx+0x79]
  419b6c:	cdq    
  419b6d:	addr16 jne 0x419b70
  419b70:	mov    eax,ds:0xe670753a
  419b75:	sbb    DWORD PTR [ecx+0x6c],esp
  419b78:	(bad)  
  419b79:	push   0x6f
  419b7b:	gs loope 0x419bda
  419b7e:	outs   dx,BYTE PTR ds:[esi]
  419b7f:	je     0x419b48
  419b81:	xor    esi,DWORD PTR [eax+eax*1-0x40]
  419b85:	data16 jbe 0x419bed
  419b88:	mov    al,ds:0x516f5438
  419b8d:	push   0x3d22666c
  419b92:	jo     0x419bf9
  419b94:	mov    WORD PTR ds:0x68916f72,ss
  419b9a:	outs   dx,DWORD PTR ds:[esi]
  419b9b:	jae    0x419bf3
  419b9d:	pop    esi
  419b9e:	add    BYTE PTR gs:[bx+si],al
	...
  419bc6:	add    BYTE PTR [eax],al
  419bc8:	jl     0x419bcf
  419bca:	inc    ebp
  419bcb:	ins    DWORD PTR es:[edi],dx
  419bcc:	and    ch,BYTE PTR [eax+0x72]
  419bcf:	jae    0x419bee
  419bd1:	pop    edi
  419bd2:	pop    ebp
  419bd3:	je     0x419c1c
  419bd5:	cmp    DWORD PTR [ebx+0x67],ebp
  419bd8:	inc    ebp
  419bd9:	push   0x184c4f64
  419bde:	outs   dx,DWORD PTR ds:[esi]
  419bdf:	gs pusha 
  419be1:	add    eax,0x17b66543
  419be6:	imul   ebp,DWORD PTR [ebx+0x47],0x5f
  419bea:	inc    ebp
  419beb:	outs   dx,BYTE PTR ds:[esi]
  419bec:	push   esp
  419bed:	pop    esi
  419bee:	jb     0x419c5d
  419bf0:	push   ebx
  419bf1:	xor    DWORD PTR [ebp+0x6f],esp
  419bf4:	jl     0x419c01
  419bf6:	aas    
  419bf7:	outs   dx,DWORD PTR ds:[esi]
  419bf8:	jl     0x419c2f
  419bfa:	popa   
  419bfb:	jb     0x419c48
  419bfd:	scas   al,BYTE PTR es:[edi]
  419bfe:	xor    BYTE PTR [edi-0x19],ah
  419c01:	xchg   ebp,eax
  419c02:	ins    BYTE PTR es:[edi],dx
  419c03:	push   ecx
  419c04:	call   DWORD PTR [ebx+0x72e46e6a]
  419c0a:	push   0x64
  419c0c:	or     ah,dl
  419c0e:	dec    ebp
  419c0f:	ins    DWORD PTR es:[edi],dx
  419c10:	in     al,0x8e
  419c12:	imul   edx,DWORD PTR [ebx-0x28],0x7c
  419c16:	dec    edi
  419c17:	aas    
  419c18:	dec    ebx
  419c19:	sahf   
  419c1a:	ins    BYTE PTR es:[edi],dx
  419c1b:	ins    DWORD PTR es:[edi],dx
  419c1c:	mov    al,0x6d
  419c1e:	push   ecx
  419c1f:	push   eax
  419c20:	mov    ecx,0xa7675389
  419c25:	jge    0x419c8b
  419c27:	arpl   WORD PTR [ebp+0x736d81],dx
	...
  419c51:	add    BYTE PTR [eax],al
  419c53:	add    BYTE PTR [esi-0x58c0fe5f],ch
  419c59:	mov    dl,BYTE PTR [esi+0x71]
  419c5c:	lahf   
  419c5d:	or     al,0x69
  419c5f:	imul   esp,DWORD PTR [esi+0x7272343e],0x666c6b2e
  419c69:	inc    edi
  419c6a:	pop    edi
  419c6b:	jno    0x419cb8
  419c6d:	loopne 0x419cd5
  419c6f:	jb     0x419ce3
  419c71:	adc    BYTE PTR [eax+0x31],dl
  419c74:	sbb    DWORD PTR [esi],eax
  419c76:	pusha  
  419c77:	ins    BYTE PTR es:[edi],dx
  419c78:	outs   dx,DWORD PTR ds:[esi]
  419c79:	loopne 0x419cc1
  419c7b:	arpl   WORD PTR [ecx-0x14],bx
  419c7e:	dec    eax
  419c7f:	jo     0x419ce7
  419c81:	(bad)  
  419c82:	xor    al,0x77
  419c84:	cmp    ah,ch
  419c86:	pop    esi
  419c87:	imul   ebx,DWORD PTR [eax],0xfffffff4
  419c8a:	push   0x4212e72
  419c8f:	inc    ecx
  419c90:	ror    BYTE PTR es:[ebp+0x43],cl
  419c94:	xor    eax,0x264168cd
  419c99:	ror    BYTE PTR [ebp+0x67],cl
  419c9c:	sub    eax,0xec66d009
  419ca1:	push   esp
  419ca2:	les    edx,FWORD PTR [esi+0xc]
  419ca5:	pop    edi
  419ca6:	mov    edx,0xc45aee4f
  419cab:	add    ecx,DWORD PTR [edx]
  419cad:	fs mov ecx,0xce5d0a4f
  419cb3:	push   esi
  419cb4:	call   0xac57f2
	...
  419cdd:	add    BYTE PTR [eax],al
  419cdf:	add    cl,bl
  419ce1:	arpl   di,sp
  419ce3:	inc    esi
  419ce4:	(bad)  [edi-0x69]
  419ce7:	dec    edi
  419ce8:	or     al,0x6a
  419cea:	cwde   
  419ceb:	push   eax
  419cec:	lods   al,BYTE PTR ds:[esi]
  419ced:	pop    ebx
  419cee:	mov    WORD PTR [esi-0x58],es
  419cf1:	pop    ebx
  419cf2:	xchg   ebx,eax
  419cf3:	ins    BYTE PTR es:[edi],dx
  419cf4:	lods   eax,DWORD PTR ds:[esi]
  419cf5:	pusha  
  419cf6:	mov    ah,BYTE PTR [edi+esi*4+0x64]
  419cfa:	xchg   edi,eax
  419cfb:	push   ebp
  419cfc:	lods   al,BYTE PTR ds:[esi]
  419cfd:	push   edi
  419cfe:	mov    BYTE PTR [edi-0x58],cl
  419d01:	inc    edx
  419d02:	test   BYTE PTR [ebx+ecx*2+0x9],bl
  419d06:	out    0x3,eax
  419d08:	dec    ebx
  419d09:	or     edi,esp
  419d0b:	add    ecx,DWORD PTR [ebx+0x9]
  419d0e:	out    0x3,eax
  419d10:	dec    ebx
  419d11:	or     edi,esp
  419d13:	add    ecx,DWORD PTR [ebx+0x9]
  419d16:	out    0x3,eax
  419d18:	dec    ebx
  419d19:	or     edi,esp
  419d1b:	add    ecx,DWORD PTR [ebx+0x9]
  419d1e:	out    0x3,eax
  419d20:	dec    ebx
  419d21:	or     edi,esp
  419d23:	add    ecx,DWORD PTR [ebx+0x9]
  419d26:	out    0x3,eax
  419d28:	dec    ebx
  419d29:	or     edi,esp
  419d2b:	add    ecx,DWORD PTR [ebx+0x9]
  419d2e:	out    0x3,eax
  419d30:	dec    ebx
  419d31:	or     edi,esp
  419d33:	add    ecx,DWORD PTR [ebx+0x9]
  419d36:	out    0x3,eax
  419d38:	dec    ebx
  419d39:	or     edi,esp
  419d3b:	add    ecx,DWORD PTR [ebx+0x9]
  419d3e:	add    cl,ch
  419d40:	dec    eax
  419d41:	or     DWORD PTR [eax],eax
  419d43:	jmp    0x419d48
	...
  419d6c:	dec    eax
  419d6d:	or     DWORD PTR [eax],eax
  419d6f:	jmp    0xe941a6bc
  419d74:	dec    eax
  419d75:	or     DWORD PTR [eax],eax
  419d77:	jmp    0xe941a6c4
  419d7c:	dec    eax
  419d7d:	or     DWORD PTR [eax],eax
  419d7f:	jmp    0xe941a6cc
  419d84:	dec    eax
  419d85:	or     DWORD PTR [eax],eax
  419d87:	jmp    0xe941a6d4
  419d8c:	dec    eax
  419d8d:	or     DWORD PTR [eax],eax
  419d8f:	mov    cl,0x19
  419d91:	inc    esi
  419d92:	inc    esp
  419d93:	jmp    0xd171c63d
  419d98:	and    BYTE PTR [eax],0x23
  419d9b:	fld    DWORD PTR [ecx+esi*1+0x2b]
  419d9f:	int3   
  419da0:	pop    eax
  419da1:	adc    eax,0x196bcc58
  419da6:	xor    dl,BYTE PTR [ecx-0x6ecde695]
  419dac:	arpl   WORD PTR [eax],bp
  419dae:	xor    BYTE PTR [ebx],bl
  419db0:	dec    edi
  419db1:	sub    BYTE PTR [eax],dh
  419db3:	sbb    eax,DWORD PTR [edi+0x28]
  419db6:	xor    BYTE PTR [ebx],bl
  419db8:	aas    
  419db9:	sub    BYTE PTR [eax],dh
  419dbb:	sbb    esi,DWORD PTR [edi]
  419dbd:	sub    BYTE PTR [eax],dh
  419dbf:	sti    
  419dc0:	xor    BYTE PTR [eax],ch
  419dc2:	xor    bl,bh
  419dc4:	and    BYTE PTR [eax+0x0],dl
  419dc7:	cs jl  0x419e1f
  419dca:	dec    esi
  419dcb:	dec    eax
  419dcc:	jnp    0x419e32
  419dce:	jbe    0x419ddc
	...
  419df8:	push   ss
  419df9:	push   esp
  419dfa:	jno    0x419e11
  419dfc:	and    al,0x60
  419dfe:	inc    edi
  419dff:	pop    es
  419e00:	sub    DWORD PTR [esi+0x0],ebx
  419e03:	add    dl,BYTE PTR [edi+edx*2]
  419e06:	outs   dx,BYTE PTR ds:[esi]
  419e07:	add    BYTE PTR [edi],bh
  419e09:	popa   
  419e0a:	das    
  419e0b:	xor    dl,BYTE PTR [esp+ebp*1+0x3fb26c6c]
  419e12:	outs   dx,DWORD PTR ds:[esi]
  419e13:	push   edi
  419e14:	xchg   ebp,eax
  419e15:	cmp    DWORD PTR [esi],esi
  419e17:	xor    al,0xd2
  419e19:	imul   esp,DWORD PTR ss:[ebx-0x71],0x35
  419e1e:	outs   dx,DWORD PTR ds:[esi]
  419e1f:	add    cl,al
  419e21:	popa   
  419e22:	data16 je 0x419dc2
  419e25:	addr16 jb 0x419e8d
  419e28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e29:	dec    edx
  419e2a:	pop    ebp
  419e2b:	jb     0x419df3
  419e2d:	sbb    BYTE PTR [ebp+esi*2-0x73],ch
  419e31:	pop    edi
  419e32:	outs   dx,BYTE PTR ds:[esi]
  419e33:	jae    0x419dfb
  419e35:	dec    edx
  419e36:	push   esp
  419e37:	push   eax
  419e38:	xchg   BYTE PTR [eax+0x6b],al
  419e3b:	jae    0x419e1b
  419e3d:	xor    al,0x0
  419e3f:	push   ebx
  419e40:	lds    ebp,FWORD PTR [ecx+0x74]
  419e43:	ja     0x419e08
  419e45:	xor    eax,0x66dc5c61
  419e4a:	jb     0x419e7e
  419e4c:	(bad)  
  419e4d:	pop    ss
  419e4e:	ins    BYTE PTR es:[edi],dx
  419e4f:	jne    0x419e1e
  419e51:	pop    esi
  419e52:	outs   dx,BYTE PTR ds:[esi]
  419e53:	jae    0x419e1b
  419e55:	dec    ecx
  419e56:	push   esp
  419e57:	push   eax
  419e58:	xchg   BYTE PTR ds:0x736b,bh
	...
  419e82:	add    BYTE PTR [eax],al
  419e84:	sahf   
  419e85:	add    BYTE PTR ss:[ebx-0x7b],dl
  419e89:	addr16 je 0x419f03
  419e8c:	xor    DWORD PTR [ebx],0x61
  419e8f:	pop    esp
  419e90:	sbb    al,0x68
  419e92:	jb     0x419ef0
  419e94:	inc    ecx
  419e95:	push   0x498e6576
  419e9a:	gs popa 
  419e9c:	push   ss
  419e9d:	bound  esp,QWORD PTR [ebx+0x48]
  419ea0:	cmp    esi,DWORD PTR [esi]
  419ea2:	je     0x419f13
  419ea4:	pusha  
  419ea5:	xor    BYTE PTR [esi+eax*2+0x4b],bl
  419ea9:	push   cs
  419eaa:	xor    al,0x48
  419eac:	and    al,0xef
  419eae:	dec    edi
  419eaf:	add    BYTE PTR [eax],bl
  419eb1:	repz popa 
  419eb3:	je     0x419ed1
  419eb5:	add    DWORD PTR [esi+0x63],edx
  419eb8:	call   FWORD PTR [ebx]
  419eba:	popa   
  419ebb:	jb     0x419f16
  419ebd:	(bad)  
  419ebe:	xor    bl,BYTE PTR [edi+0x15]
  419ec1:	mov    ebp,0xc0f2445d
  419ec6:	gs ins DWORD PTR es:[edi],dx
  419ec8:	in     al,0xa9
  419eca:	push   0x71
  419ecc:	dec    DWORD PTR [edx-0x63f088ad]
  419ed2:	sub    eax,0x54bb1350
  419ed7:	je     0x419f24
  419ed9:	jb     0x419f3d
  419edb:	jno    0x419eb5
  419edd:	xchg   edx,eax
  419ede:	push   0x49e1e772
  419ee3:	ins    DWORD PTR es:[edi],dx
  419ee4:	mov    eax,0x5f4774
	...
  419f0d:	add    BYTE PTR [eax],al
  419f0f:	add    BYTE PTR [esi-0x47acfe83],ch
  419f15:	test   DWORD PTR [ebx+0x0],edx
  419f18:	jg     0x419f93
  419f1a:	arpl   WORD PTR [bp+di+0x53],cx
  419f1e:	fs js  0x419f9d
  419f21:	jp     0x419f70
  419f23:	jo     0x419f8a
  419f25:	mov    DWORD PTR [edi+0x67],esp
  419f28:	dec    ebx
  419f29:	inc    esp
  419f2a:	cmp    eax,0x480f9248
  419f2f:	inc    ebx
  419f30:	cdq    
  419f31:	loopne 0x419f7f
  419f33:	outs   dx,BYTE PTR ds:[esi]
  419f34:	js     0x419f6a
  419f36:	arpl   WORD PTR [edi+ebx*2+0x1c],bp
  419f3a:	imul   esi,DWORD PTR [edx+0x4b],0x22
  419f3e:	push   eax
  419f3f:	jo     0x419ed3
  419f41:	inc    edx
  419f42:	imul   ecx,DWORD PTR [esi+0x6a],0xd
  419f46:	pop    edi
  419f47:	add    BYTE PTR [eax+0x9],bh
  419f4a:	push   ss
  419f4b:	pop    esi
  419f4c:	aas    
  419f4d:	push   edx
  419f4e:	or     BYTE PTR [edx+0x28],dl
  419f51:	sub    eax,0x562c6c2e
  419f56:	sti    
  419f57:	pusha  
  419f58:	cmp    DWORD PTR ds:0x65356d1e,ebp
  419f5e:	push   cs
  419f5f:	dec    edi
  419f60:	sbb    ch,BYTE PTR [ecx]
  419f62:	sub    ah,BYTE PTR [edi+0x20]
  419f65:	pop    esp
  419f66:	or     BYTE PTR [esi+0x27],ah
  419f69:	fld    DWORD PTR fs:[ebx]
  419f6c:	sbb    bl,BYTE PTR [edx-0x3b]
  419f6f:	dec    edi
  419f70:	mul    BYTE PTR [edi-0x27]
  419f73:	pusha  
	...
  419f9c:	pop    ss
  419f9d:	inc    edx
  419f9e:	mov    edi,0xcc5cfa6c
  419fa3:	push   ecx
  419fa4:	pop    es
  419fa5:	xor    eax,0x5cfc4fce
  419faa:	pop    es
  419fab:	inc    ebx
  419fac:	out    0x5b,al
  419fae:	mov    esp,0x8c64dd64
  419fb3:	push   ecx
  419fb4:	dec    ebx
  419fb5:	sub    eax,0x52ba53b0
  419fba:	or     BYTE PTR [edi-0x56],0x61
  419fbe:	out    0x32,eax
  419fc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fc1:	push   ebp
  419fc2:	mov    WORD PTR [edx-0x79],ss
  419fc5:	or     DWORD PTR [ebx+0x7e569b4c],ebx
  419fcb:	ins    BYTE PTR es:[edi],dx
  419fcc:	lahf   
  419fcd:	data16 jg 0x41a007
  419fd0:	jbe    0x41a008
  419fd2:	inc    esi
  419fd3:	ds lahf 
  419fd5:	cmp    edi,esp
  419fd7:	aaa    
  419fd8:	jbe    0x41a03a
  419fda:	inc    ebp
  419fdb:	es ins BYTE PTR es:[edi],dx
  419fdd:	pop    ebx
  419fde:	inc    eax
  419fdf:	add    al,0x1d
  419fe1:	pusha  
  419fe2:	push   ebp
  419fe3:	ins    DWORD PTR es:[edi],dx
  419fe4:	dec    ebx
  419fe5:	xor    bl,BYTE PTR [edx]
  419fe7:	aaa    
  419fe8:	test   DWORD PTR ds:0x454f1900,esi
  419fee:	inc    edi
  419fef:	sbb    eax,DWORD PTR [edi+0x45]
  419ff2:	inc    ebx
  419ff3:	das    
  419ff4:	or     eax,DWORD PTR [edx+0x52]
  419ff7:	jmp    0x2c95d605
  419ffc:	jne    0x41a033
  419ffe:	push   eax
  419fff:	jmp    0x41a004
	...
  41a028:	ja     0x41a072
  41a02a:	dec    eax
  41a02b:	adc    al,bh
  41a02d:	push   esp
  41a02e:	ins    DWORD PTR es:[edi],dx
  41a02f:	sti    
  41a030:	dec    DWORD PTR [eax]
  41a032:	push   ecx
  41a033:	push   es
  41a034:	cmc    
  41a035:	push   esp
  41a036:	jne    0x41a040
  41a038:	stc    
  41a039:	gs pop esp
  41a03b:	scas   al,BYTE PTR es:[edi]
  41a03c:	in     al,dx
  41a03d:	pop    ebx
  41a03e:	(bad)  
  41a03f:	enter  0x37e4,0x41
  41a043:	test   al,0x38
  41a045:	inc    esi
  41a046:	pop    esp
  41a047:	stos   BYTE PTR es:[edi],al
  41a048:	sbb    edx,DWORD PTR [ebp+0x63]
  41a04b:	scas   eax,DWORD PTR es:[edi]
  41a04c:	xor    al,0x39
  41a04e:	and    bh,dh
  41a050:	sub    BYTE PTR [ecx+0x6d],al
  41a053:	(bad)  
  41a054:	jmp    0x41a082
  41a056:	dec    edi
  41a057:	stos   BYTE PTR es:[edi],al
  41a058:	sbb    al,0x5c
  41a05a:	ins    DWORD PTR es:[edi],dx
  41a05b:	xchg   ebp,eax
  41a05c:	stos   BYTE PTR es:[edi],al
  41a05d:	push   0x3679e972
  41a062:	popfw  
  41a064:	test   DWORD PTR [eax+0x72],ebp
  41a067:	test   BYTE PTR [esi+ecx*2+0x6c],dh
  41a06b:	xchg   esi,eax
  41a06c:	stos   BYTE PTR es:[edi],al
  41a06d:	push   0x8899a6c
  41a072:	push   eax
  41a073:	lods   al,BYTE PTR ds:[esi]
  41a074:	pop    esp
  41a075:	dec    edx
  41a076:	jae    0x41a0ed
  41a078:	stos   DWORD PTR es:[edi],eax
  41a079:	dec    edi
  41a07a:	push   esp
  41a07b:	cmp    DWORD PTR [edi],ebp
  41a07d:	call   FWORD PTR [edi]
  41a07f:	cmp    DWORD PTR [ecx-0x65b399ca],ebx
  41a085:	cmp    ah,BYTE PTR [edi+0x3e]
  41a088:	gs push 0x6c
	...
  41a0b2:	add    BYTE PTR [eax],al
  41a0b4:	cs cld 
  41a0b6:	ds push esp
  41a0b8:	lea    ebp,[esi]
  41a0ba:	ins    BYTE PTR es:[edi],dx
  41a0bb:	bound  eax,QWORD PTR [ebx+0xd53005b]
  41a0c1:	addr16 je 0x41a13b
  41a0c4:	push   ebx
  41a0c5:	pop    ebx
  41a0c6:	popa   
  41a0c7:	pop    esp
  41a0c8:	xor    DWORD PTR gs:[ebx+0x62],ebp
  41a0cc:	inc    ebx
  41a0cd:	xor    DWORD PTR [edi+0x43],ecx
  41a0d0:	arpl   bp,di
  41a0d2:	inc    eax
  41a0d3:	pop    esp
  41a0d4:	jno    0x41a12e
  41a0d6:	je     0x41a13d
  41a0d8:	fs stc 
  41a0da:	dec    edi
  41a0db:	and    ch,dl
  41a0dd:	in     al,dx
  41a0de:	inc    edi
  41a0df:	outs   dx,DWORD PTR ds:[esi]
  41a0e0:	(bad)  
  41a0e1:	addr16 pop esp
  41a0e3:	push   ecx
  41a0e4:	mov    cl,0xf8
  41a0e6:	push   0x6f
  41a0e8:	mov    gs,WORD PTR [edx]
  41a0ea:	pop    ebp
  41a0eb:	jb     0x41a14f
  41a0ed:	stc    
  41a0ee:	push   0x66
  41a0f0:	xchg   esi,eax
  41a0f1:	push   ebp
  41a0f2:	pop    ebp
  41a0f3:	jb     0x41a08c
  41a0f5:	add    BYTE PTR [ebx+0x6c],al
  41a0f8:	lea    ebp,[edx]
  41a0fa:	pop    ebp
  41a0fb:	ins    BYTE PTR es:[edi],dx
  41a0fc:	mov    cl,0x49
  41a0fe:	cmp    eax,0x3f00a750
  41a103:	jne    0x41a0eb
  41a105:	inc    si
  41a107:	push   esp
  41a108:	add    ch,ah
  41a10a:	xor    ah,BYTE PTR [eax]
  41a10c:	repnz pop ecx
  41a10e:	imul   esp,DWORD PTR [esi-0x39],0x58
  41a112:	outs   dx,DWORD PTR ds:[esi]
  41a113:	imul   edi,DWORD PTR [ebp+0x6c5d2d],0x0
	...
  41a13d:	add    BYTE PTR [eax],al
  41a13f:	add    BYTE PTR [esi-0x32abc106],bh
  41a145:	sub    al,0x6c
  41a147:	(bad)  
  41a149:	pop    ecx
  41a14a:	add    BYTE PTR [ebx-0x63],dl
  41a14d:	addr16 je 0x41a1c7
  41a150:	xchg   ebx,eax
  41a151:	pop    ebx
  41a152:	popa   
  41a153:	pop    esp
  41a154:	dec    ebx
  41a155:	mul    DWORD PTR [edi+0x6d]
  41a158:	imul   edx,DWORD PTR [ecx+0x68],0x33f18851
  41a15f:	inc    ebx
  41a160:	jg     0x41a155
  41a162:	dec    esp
  41a163:	je     0x41a1d3
  41a165:	clc    
  41a166:	das    
  41a167:	push   eax
  41a168:	sub    edi,DWORD PTR [edx+0x1d344821]
  41a16e:	pop    ebp
  41a16f:	pop    esp
  41a170:	sbb    dh,bl
  41a172:	das    
  41a173:	ins    DWORD PTR es:[edi],dx
  41a174:	and    al,0xe
  41a176:	bound  ebx,QWORD PTR [edi+0x39]
  41a179:	mov    dl,0x30
  41a17b:	ins    DWORD PTR es:[edi],dx
  41a17c:	sub    eax,0x195f4cc6
  41a181:	or     eax,0xf274538
  41a186:	bound  ebx,QWORD PTR [edi+0x1f]
  41a189:	and    edi,DWORD PTR [edi]
  41a18b:	aas    
  41a18c:	sbb    esi,DWORD PTR [ebp+0x35]
  41a18f:	inc    ecx
  41a190:	neg    ch
  41a192:	pop    esi
  41a193:	inc    esi
  41a194:	pop    ds
  41a195:	and    BYTE PTR [ecx],0x38
  41a198:	sub    eax,DWORD PTR [edx-0x2b1292b1]
  41a19e:	push   eax
  41a19f:	jno    0x41a193
  41a1a1:	(bad)  
  41a1a2:	arpl   WORD PTR [edi+0x0],bx
	...
  41a1c9:	add    BYTE PTR [eax],al
  41a1cb:	add    bh,ah
  41a1cd:	popf   
  41a1ce:	xor    al,BYTE PTR [ecx-0x9]
  41a1d1:	xchg   BYTE PTR [esp+ebp*2-0x57],ah
  41a1d5:	xchg   ecx,eax
  41a1d6:	dec    edi
  41a1d7:	add    BYTE PTR [edi-0x56929a91],bl
  41a1dd:	xchg   ecx,eax
  41a1de:	gs push ecx
  41a1e0:	mov    BYTE PTR [ecx+0x31],dh
  41a1e3:	inc    ebx
  41a1e4:	xchg   DWORD PTR [ebx+0x4e],esi
  41a1e7:	je     0x41a18f
  41a1e9:	outs   dx,BYTE PTR ds:[esi]
  41a1ea:	sub    eax,0x3c9c4b50
  41a1ef:	ins    BYTE PTR es:[edi],dx
  41a1f0:	pushf  
  41a1f1:	xchg   edx,eax
  41a1f2:	bound  ebp,QWORD PTR [eax+ebx*4+0x9]
  41a1f6:	sub    al,BYTE PTR [ebp-0x65]
  41a1f9:	dec    esp
  41a1fa:	cmp    eax,DWORD PTR [edi+0x78]
  41a1fd:	cmp    eax,0x59974a4c
  41a202:	pop    es
  41a203:	xor    al,0x59
  41a205:	ss out 0x2f,eax
  41a208:	xchg   BYTE PTR ds:0x3574664e,dh
  41a20e:	sbb    al,BYTE PTR [edi+0xc]
  41a211:	pop    ecx
  41a212:	and    al,0x30
  41a214:	or     bh,BYTE PTR [ebx+ebx*1]
  41a217:	imul   eax,DWORD PTR ds:0x724375d,0x4b691b30
  41a221:	sub    bl,BYTE PTR gs:[ecx+0x1f]
  41a225:	sub    al,0x2d
  41a227:	cmp    bl,bh
  41a229:	or     BYTE PTR [ebx],bl
  41a22b:	push   edi
  41a22c:	and    bh,dh
  41a22e:	or     ah,BYTE PTR [ebp+0x0]
	...
  41a255:	add    BYTE PTR [eax],al
  41a257:	add    BYTE PTR [edi],dl
  41a259:	or     DWORD PTR [edx],ebx
  41a25b:	arpl   bp,bp
  41a25d:	cmp    al,0xde
  41a25f:	fs stc 
  41a261:	sub    edi,DWORD PTR [ebx-0x25d818b7]
  41a267:	pop    ebx
  41a268:	add    eax,0x1a2fb761
  41a26d:	or     DWORD PTR [edx-0x49c31a9e],ebx
  41a273:	fldcw  WORD PTR fs:[ebx]
  41a276:	xchg   ebx,eax
  41a277:	dec    ecx
  41a278:	fbld   TBYTE PTR [edi]
  41a27a:	mov    edx,0xb7618d5b
  41a27f:	add    ebx,DWORD PTR [edx-0x41a87aca]
  41a285:	sub    BYTE PTR [ecx+0x7b4f8f68],bl
  41a28b:	fs call 0xb365:0x7b2bad31
  41a293:	add    ecx,DWORD PTR [edi+esi*1+0x66747a00]
  41a29a:	ins    BYTE PTR es:[edi],dx
  41a29b:	jge    0x41a310
  41a29d:	cmp    eax,DWORD PTR [eax+ecx*2-0x5d]
  41a2a1:	xor    DWORD PTR [eax+0x48],edx
  41a2a4:	xchg   ebx,eax
  41a2a5:	xor    DWORD PTR [eax],eax
  41a2a7:	pop    ecx
  41a2a8:	cmp    ax,0xe968
  41a2ac:	daa    
  41a2ad:	aaa    
  41a2ae:	jno    0x41a2ed
  41a2b0:	xor    ax,0x96c
  41a2b4:	pop    ds
  41a2b5:	data16 je 0x41a2f9
  41a2b8:	inc    edi
  41a2b9:	dec    ebp
  41a2ba:	pop    edi
  41a2bb:	xor    eax,0x0
	...
  41a2e4:	cs dec edi
  41a2e6:	ins    DWORD PTR es:[edi],dx
  41a2e7:	adc    eax,0xe9722a33
  41a2ec:	fs pop eax
  41a2ee:	addr16 sbb eax,0x52e3822
  41a2f4:	cs cmp eax,0x3a562500
  41a2fa:	addr16 or dh,ah
  41a2fd:	mul    BYTE PTR [ebx+0x8]
  41a300:	repz or BYTE PTR [ecx+eiz*1+0x26],bl
  41a305:	cmp    BYTE PTR [esi+edx*8+0x16],dh
  41a309:	(bad)
  41a30e:	add    BYTE PTR [ebp-0x25a0cafe],dh
  41a314:	add    BYTE PTR [edi+0x58],cl
  41a317:	cdq    
  41a318:	sub    al,0xf8
  41a31a:	call   FWORD PTR [edx+eax*1-0xf45a0cb]
  41a321:	dec    esi
  41a322:	pop    eax
  41a323:	cdq    
  41a324:	je     0x41a323
  41a326:	inc    esp
  41a328:	xchg   edx,eax
  41a329:	sub    al,0x6c
  41a32b:	test   BYTE PTR [esi+0x2c],ah
  41a32e:	ins    BYTE PTR es:[edi],dx
  41a32f:	test   DWORD PTR [edi-0x7865a3f7],esp
  41a335:	cmp    eax,0x2db70063
  41a33a:	outs   dx,BYTE PTR ds:[esi]
  41a33b:	popa   
  41a33c:	int    0x31
  41a33e:	jb     0x41a36e
  41a340:	call   0x615e:0xd6006c29
  41a347:	arpl   WORD PTR [eax],ax
	...
  41a36d:	add    BYTE PTR [eax],al
  41a36f:	add    BYTE PTR [edi-0x708c8bd9],cl
  41a375:	pop    ebx
  41a376:	jbe    0x41a3dd
  41a378:	nop
  41a379:	pop    esi
  41a37a:	cs js  0x41a3a4
  41a37d:	sub    DWORD PTR [eax],eax
  41a37f:	pop    esp
  41a380:	mov    WORD PTR [eax+0x6c],fs
  41a383:	mov    BYTE PTR gs:[eax+0x6c],ah
  41a387:	ins    BYTE PTR es:[edi],dx
  41a388:	and    edi,0x77
  41a38b:	ins    DWORD PTR es:[edi],dx
  41a38c:	xchg   BYTE PTR ds:0x614c6f4f,cl
  41a392:	jae    0x41a3f5
  41a394:	push   eax
  41a395:	sub    al,0x5c
  41a397:	inc    esi
  41a398:	dec    ebx
  41a399:	sub    DWORD PTR [ecx+0x5a],esp
  41a39c:	dec    ebx
  41a39d:	sub    DWORD PTR [ecx+eiz*2-0x4e],ebp
  41a3a1:	std    
  41a3a2:	push   0x66
  41a3a4:	sahf   
  41a3a5:	popa   
  41a3a6:	pop    ebp
  41a3a7:	jb     0x41a3e8
  41a3a9:	stc    
  41a3aa:	inc    ebp
  41a3ab:	imul   eax,DWORD PTR [esi-0x6996a5d5],0xa1205d64
  41a3b5:	fs gs test BYTE PTR gs:[eax+eax*1+0x49],bl
  41a3bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3bd:	pop    ebp
  41a3be:	je     0x41a421
  41a3c0:	jbe    0x41a426
  41a3c2:	pop    ebx
  41a3c3:	inc    esp
  41a3c4:	jnp    0x41a424
  41a3c6:	add    BYTE PTR [eax-0x7b],cl
  41a3c9:	pop    ebp
  41a3ca:	je     0x41a3cc
  41a3cc:	fistp  WORD PTR [ecx+eiz*2+0x72]
  41a3d0:	xor    bh,al
  41a3d2:	pop    esp
  41a3d3:	jae    0x41a3d5
	...
  41a3f9:	add    BYTE PTR [eax],al
  41a3fb:	add    cl,dl
  41a3fd:	pop    es
  41a3fe:	push   eax
  41a3ff:	outs   dx,DWORD PTR ds:[esi]
  41a400:	dec    ebx
  41a401:	mov    al,ds:0x8d790055
  41a406:	pop    esi
  41a407:	ins    DWORD PTR es:[edi],dx
  41a408:	xchg   edi,eax
  41a409:	xchg   ebp,eax
  41a40a:	and    DWORD PTR [edx+eiz*4+0x40],eax
  41a40e:	add    DWORD PTR [ecx-0x5a],edx
  41a411:	inc    eax
  41a412:	push   edi
  41a413:	arpl   WORD PTR [ecx-0x2e],di
  41a416:	xor    eax,0x4557b77
  41a41b:	push   ecx
  41a41c:	outs   dx,BYTE PTR ds:[esi]
  41a41d:	pusha  
  41a41e:	pop    edx
  41a41f:	arpl   WORD PTR [ecx+0xc],di
  41a422:	cmp    al,0x6d
  41a424:	pop    eax
  41a425:	pop    esi
  41a426:	add    al,0x51
  41a428:	data16 add BYTE PTR [edx+0x63],bl
  41a42c:	pop    ecx
  41a42d:	adc    al,0x35
  41a42f:	jno    0x41a497
  41a431:	add    BYTE PTR [ecx+edx*2],al
  41a434:	add    BYTE PTR cs:[edx+0x63],bl
  41a438:	cmp    esp,ebx
  41a43a:	xor    DWORD PTR [edi+0x38],ebx
  41a43d:	pop    ds
  41a43e:	add    al,0x51
  41a440:	and    BYTE PTR es:[edx+0x63],bl
  41a444:	sbb    DWORD PTR [ecx+esi*1+0x1c6196d],eax
  41a44b:	push   eax
  41a44c:	sub    bh,BYTE PTR [esi+0x14f80059]
  41a452:	push   esi
  41a453:	jbe    0x41a443
  41a455:	mov    edi,0xd4fb7735
  41a45a:	add    DWORD PTR [edx+ebp*8-0x22],ecx
  41a45e:	push   ebp
  41a45f:	and    BYTE PTR [eax],al
	...
  41a485:	add    BYTE PTR [eax],al
  41a487:	add    BYTE PTR [eax],bl
  41a489:	aad    0x53
  41a48b:	jbe    0x41a47b
  41a48d:	fbld   TBYTE PTR [ecx]
  41a48f:	dec    eax
  41a490:	in     al,dx
  41a491:	jle    0x41a4e8
  41a493:	add    BYTE PTR [edi],al
  41a495:	rcl    DWORD PTR [esp+esi*2+0x2b],1
  41a499:	lahf   
  41a49a:	data16 jb 0x41a45a
  41a49d:	int    0x53
  41a49f:	and    BYTE PTR [esi-0x469965f7],dl
  41a4a5:	or     DWORD PTR [ebx-0x38c2459e],ebp
  41a4ab:	xor    al,0xa8
  41a4ad:	aaa    
  41a4ae:	xchg   ebp,eax
  41a4af:	cwd    
  41a4b1:	jmp    0x36dc074c
  41a4b6:	out    0x3f,eax
  41a4b8:	ins    BYTE PTR es:[edi],dx
  41a4b9:	ss jnp 0x41a4df
  41a4bc:	call   0x737:0x6859792c
  41a4c3:	xor    al,0x66
  41a4c5:	aaa    
  41a4c6:	push   ebx
  41a4c7:	add    al,0x7f
  41a4c9:	sub    BYTE PTR [edx+0x58],bl
  41a4cc:	sub    edx,DWORD PTR [esi+0x44]
  41a4cf:	push   edx
  41a4d0:	push   ebp
  41a4d1:	sub    al,0x39
  41a4d3:	and    al,0x7b
  41a4d5:	sub    BYTE PTR [ebx],dh
  41a4d7:	pop    esp
  41a4d8:	dec    ebx
  41a4d9:	push   ebp
  41a4da:	dec    eax
  41a4db:	push   ebx
  41a4dc:	aas    
  41a4dd:	jmp    0x3b7b0dfb
  41a4e2:	or     al,0x52
  41a4e4:	imul   ebx,DWORD PTR [ebp+0x20],0x54
  41a4e8:	sub    BYTE PTR [ecx],cl
  41a4ea:	sub    eax,0x38
	...
  41a513:	add    bl,bh
  41a515:	call   0x30570a36
  41a51a:	push   cs
  41a51b:	gs pop ds
  41a51d:	xor    bh,cl
  41a51f:	add    eax,DWORD PTR ds:0xa24175d
  41a525:	xor    bh,ah
  41a527:	pusha  
  41a528:	sbb    al,0x33
  41a52a:	retf   
  41a52b:	push   0x57c508f9
  41a530:	sti    
  41a531:	xor    al,0xc0
  41a533:	push   edx
  41a534:	fcomip st,st(2)
  41a536:	ror    BYTE PTR [ebx-0x29],cl
  41a539:	or     BYTE PTR [ebx-0x34cb27bf],ah
  41a53f:	push   0xbb0058d7
  41a544:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a545:	xor    al,0x66
  41a547:	or     DWORD PTR [eax+0x34],edi
  41a54a:	popfw  
  41a54c:	popf   
  41a54d:	bound  esi,QWORD PTR [edx-0x7c]
  41a550:	dec    eax
  41a551:	repz arpl WORD PTR [eax-0x74d1f684],cx
  41a558:	js     0x41a592
  41a55a:	add    BYTE PTR [edx+0x76742b75],bl
  41a560:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a561:	aaa    
  41a562:	arpl   WORD PTR [ebp-0x6ab9a676],dx
  41a568:	cmp    BYTE PTR [ebp+0x42],ah
  41a56b:	pop    esp
  41a56c:	imul   esi,DWORD PTR ds:0x59275563,0x72
  41a573:	inc    esi
  41a574:	test   BYTE PTR [ebx],ch
  41a576:	and    BYTE PTR [edi],ah
	...
  41a5a0:	and    ebx,DWORD PTR [ecx+0x5c]
  41a5a3:	xor    al,0x6e
  41a5a5:	sub    ch,BYTE PTR [esi-0x17]
  41a5a8:	sbb    DWORD PTR [esi+eiz*2],esi
  41a5ab:	cmp    eax,0x4472621c
  41a5b0:	jnp    0x41a5f9
  41a5b2:	jae    0x41a5c9
  41a5b4:	sub    esp,DWORD PTR [esi]
  41a5b6:	je     0x41a5f1
  41a5b8:	sbb    DWORD PTR [ebp*2+0x6d586f0f],esi
  41a5bf:	pop    es
  41a5c0:	add    edi,DWORD PTR [edi+ebx*2]
  41a5c3:	sti    
  41a5c4:	and    esp,DWORD PTR [ebp+0x42]
  41a5c7:	hlt    
  41a5c8:	in     al,dx
  41a5c9:	xor    al,0x63
  41a5cb:	std    
  41a5cc:	cmp    BYTE PTR [edi],dh
  41a5ce:	ins    DWORD PTR es:[edi],dx
  41a5cf:	(bad)  
  41a5d0:	out    0xe8,al
  41a5d2:	inc    ebp
  41a5d3:	mov    ebp,0xcd40e938
  41a5d8:	(bad)  
  41a5da:	outs   dx,BYTE PTR ds:[esi]
  41a5db:	fnsave [esi+ecx*2]
  41a5de:	pop    edi
  41a5df:	sar    dh,0x8
  41a5e2:	push   ecx
  41a5e3:	add    BYTE PTR [ebp+0x2b],bh
  41a5e6:	je     0x41a65f
  41a5e8:	adc    DWORD PTR [edi+0x61],0x5c
  41a5ec:	lock cld 
  41a5ee:	inc    ebp
  41a5ef:	push   esp
  41a5f0:	loop   0x41a5e2
  41a5f2:	inc    ecx
  41a5f3:	jne    0x41a5d3
  41a5f5:	pusha  
  41a5f6:	popa   
  41a5f7:	je     0x41a5fb
  41a5f9:	std    
  41a5fa:	jno    0x41a66b
  41a5fc:	int    0x26
  41a5fe:	and    BYTE PTR [esi-0x2a],al
  41a601:	cld    
  41a602:	pop    ebx
  41a603:	dec    edi
	...
  41a62c:	xchg   edx,eax
  41a62d:	pop    eax
  41a62e:	outs   dx,DWORD PTR gs:[esi]
  41a630:	mov    esp,0xcd53005b
  41a635:	es je  0x41a6af
  41a638:	rcr    DWORD PTR [edx+0x61],cl
  41a63b:	pop    esp
  41a63c:	and    BYTE PTR [eax+0x6c],bl
  41a63f:	ins    BYTE PTR es:[edi],dx
  41a640:	xchg   DWORD PTR [ecx+0x50],esp
  41a643:	jb     0x41a5d2
  41a645:	pop    esi
  41a646:	data16 and BYTE PTR [ecx],ah
  41a649:	pop    esi
  41a64a:	data16 je 0x41a662
  41a64d:	sub    al,0x72
  41a64f:	gs cs dec ebx
  41a652:	jno    0x41a6c0
  41a654:	push   cs
  41a655:	sub    BYTE PTR [eax+edx*2-0x80],dh
  41a659:	pop    esi
  41a65a:	imul   esp,DWORD PTR [esi-0x7e],0x46
  41a65e:	push   esp
  41a65f:	push   eax
  41a660:	or     BYTE PTR [ecx+0x6c],0x69
  41a664:	push   edi
  41a665:	pop    edi
  41a666:	je     0x41a6c4
  41a668:	cmp    eax,0x3d697455
  41a66d:	pop    edi
  41a66e:	outs   dx,DWORD PTR ds:[esi]
  41a66f:	add    BYTE PTR [ecx],dh
  41a671:	pop    esi
  41a672:	data16 je 0x41a5fa
  41a675:	sub    esi,DWORD PTR [edx+0x65]
  41a678:	dec    esi
  41a679:	dec    ebx
  41a67a:	push   eax
  41a67b:	inc    esi
  41a67c:	mov    dh,0xfc
  41a67e:	dec    DWORD PTR [ebx-0x7d]
  41a681:	pop    ecx
  41a682:	je     0x41a6d7
  41a684:	dec    ebx
  41a685:	int    0x50
  41a687:	jno    0x41a67b
  41a689:	jle    0x41a6e6
  41a68b:	inc    esi
  41a68c:	loop   0x41a663
  41a68e:	data16 add BYTE PTR [eax],al
	...
  41a6b5:	add    BYTE PTR [eax],al
  41a6b7:	add    al,bh
  41a6b9:	fcom   DWORD PTR [ebp+0x63]
  41a6bc:	mov    eax,0x4b725a6e
  41a6c1:	imul   ebx,DWORD PTR [ebx+0x71],0x6c5d91bf
  41a6c8:	xchg   DWORD PTR [ecx-0x37b4d0b1],ebx
  41a6ce:	dec    ecx
  41a6cf:	imul   ebp,DWORD PTR [edi-0x59aed24e],0xffffff91
  41a6d6:	dec    edi
  41a6d7:	je     0x41a65e
  41a6d9:	xchg   esi,eax
  41a6da:	xor    DWORD PTR [eax],eax
  41a6dc:	lea    edx,[ecx-0x768692ad]
  41a6e2:	push   ebp
  41a6e3:	arpl   WORD PTR [eax+0x18],di
  41a6e6:	push   0x39b2775f
  41a6eb:	addr16 pop eax
  41a6ed:	pop    esi
  41a6ee:	pop    ebx
  41a6ef:	jb     0x41a753
  41a6f1:	shl    BYTE PTR [ebp+0x5f],0x5f
  41a6f5:	mov    dl,0x62
  41a6f7:	fs addr16 add al,0x62
  41a6fb:	imul   esi,DWORD PTR [ebp+0x4e],0x14b7461
  41a702:	push   ebp
  41a703:	sub    BYTE PTR [bp+di],bl
  41a706:	push   ds
  41a707:	sub    dl,BYTE PTR fs:[esi]
  41a70a:	add    al,0x5c
  41a70c:	call   FWORD PTR [edx+edx*2]
  41a70f:	bound  ebp,QWORD PTR [eax+ebp*8]
  41a712:	aaa    
  41a713:	push   eax
  41a714:	dec    ebx
  41a715:	and    ebx,DWORD PTR [ebx+0x66]
  41a718:	pop    ss
  41a719:	mov    bh,0x62
  41a71b:	jb     0x41a71d
	...
  41a741:	add    BYTE PTR [eax],al
  41a743:	add    dh,ch
  41a745:	adc    eax,0x13f97338
  41a74a:	pop    ebx
  41a74b:	inc    esi
  41a74c:	pop    ds
  41a74d:	or     DWORD PTR [edi-0x25d11bfd],esi
  41a753:	push   edi
  41a754:	add    al,0x2d
  41a756:	ret    
  41a757:	push   ebx
  41a758:	cld    
  41a759:	xor    al,0xbf
  41a75b:	add    edi,edx
  41a75d:	das    
  41a75e:	int    0x57
  41a760:	(bad)  
  41a761:	sub    DWORD PTR [ecx-0x39a5589a],edi
  41a767:	push   edi
  41a768:	pushf  
  41a769:	pop    ebp
  41a76a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a76b:	inc    ebp
  41a76c:	lea    edx,[ebp-0x49]
  41a76f:	add    ecx,DWORD PTR [edx-0x57987bc5]
  41a775:	das    
  41a776:	fwait
  41a777:	pop    edx
  41a778:	jl     0x41a7a7
  41a77a:	mov    edx,0xe735a762
  41a77f:	inc    eax
  41a780:	cdq    
  41a781:	and    al,0x83
  41a783:	data16 jne 0x41a7bb
  41a786:	and    BYTE PTR [edx+0x6f],0x4a
  41a78a:	jg     0x41a7f2
  41a78c:	push   0x32
  41a78e:	out    0x36,eax
  41a790:	pop    esi
  41a791:	daa    
  41a792:	push   ebx
  41a793:	push   ebx
  41a794:	test   BYTE PTR [ebx],bh
  41a796:	dec    esp
  41a797:	sub    BYTE PTR [edx+0x2e],bh
  41a79a:	push   ebx
  41a79b:	gs ja  0x41a7e5
  41a79e:	sub    eax,0x1b597742
  41a7a3:	cmp    edi,DWORD PTR [ebx]
  41a7a5:	xor    eax,0x5b40
	...
  41a7ce:	add    BYTE PTR [eax],al
  41a7d0:	sub    eax,0x1433e73a
  41a7d5:	cmp    bl,BYTE PTR [edx]
  41a7d7:	push   ebx
  41a7d8:	push   ds
  41a7d9:	cmp    eax,DWORD PTR [ebx]
  41a7db:	add    al,0xf8
  41a7dd:	cmp    DWORD PTR [esi+edx*2],ecx
  41a7e0:	or     eax,0x4b60fc28
  41a7e5:	push   ecx
  41a7e6:	push   ss
  41a7e7:	push   edi
  41a7e8:	pop    ss
  41a7e9:	dec    eax
  41a7ea:	add    edx,DWORD PTR [esi-0x6]
  41a7ed:	or     BYTE PTR [eax],al
  41a7ef:	sbb    ebp,edx
  41a7f1:	xor    DWORD PTR [ebp-0xb],ebp
  41a7f4:	jmp    0x41a83a
  41a7f6:	fisttp DWORD PTR [bx+si+0x59]
  41a7fa:	ins    DWORD PTR es:[edi],dx
  41a7fb:	fist   DWORD PTR [ecx+ecx*1]
  41a7fe:	dec    eax
  41a7ff:	(bad)  
  41a800:	cmc    
  41a801:	xor    al,0x4e
  41a803:	enter  0x29f3,0x0
  41a807:	cdq    
  41a808:	icebp  
  41a809:	cmp    dh,BYTE PTR [ecx+ebp*8+0x7b]
  41a80d:	cmp    BYTE PTR [ebx-0x45],ah
  41a810:	mov    ds:0x48c46b5e,al
  41a815:	pop    ecx
  41a816:	pop    edi
  41a817:	call   0x984:0x9b6d3495
  41a81e:	dec    eax
  41a81f:	xchg   BYTE PTR [ebp+0x35],dh
  41a822:	inc    esp
  41a823:	cmp    BYTE PTR [esi+0x4f],0x5f
  41a827:	xchg   esp,eax
  41a828:	stos   DWORD PTR es:[edi],eax
  41a829:	or     DWORD PTR [ecx-0x72],edx
  41a82c:	push   0x35
  41a82e:	jne    0x41a7b8
  41a830:	xchg   esi,eax
  41a831:	sub    bl,BYTE PTR [edx+ebp*4+0x0]
	...
  41a859:	add    BYTE PTR [eax],al
  41a85b:	add    BYTE PTR [ecx+0x6a4c6627],dl
  41a861:	dec    eax
  41a862:	jae    0x41a8bd
  41a864:	das    
  41a865:	pop    eax
  41a866:	ins    DWORD PTR es:[edi],dx
  41a867:	dec    edi
  41a868:	jnp    0x41a89e
  41a86a:	pop    edi
  41a86b:	pop    ebx
  41a86c:	push   0x5d
  41a86e:	inc    edi
  41a86f:	push   edi
  41a870:	jnp    0x41a89c
  41a872:	jb     0x41a8c3
  41a874:	sub    dh,BYTE PTR ds:0x2c15195c
  41a87a:	inc    ax
  41a87c:	adc    ebp,DWORD PTR [edx]
  41a87e:	jno    0x41a869
  41a880:	jne    0x41a8ae
  41a882:	adc    ax,0x5df8
  41a886:	jb     0x41a894
  41a888:	jae    0x41a8d1
  41a88a:	push   esp
  41a88b:	cmp    DWORD PTR [eax+0x5e],ebx
  41a88e:	jb     0x41a890
  41a890:	aas    
  41a891:	icebp  
  41a892:	ds dec edi
  41a894:	pusha  
  41a895:	dec    eax
  41a896:	inc    esi
  41a897:	push   esp
  41a898:	(bad)
  41a89d:	sub    BYTE PTR [edi+0x0],ch
  41a8a0:	mov    edx,0x72746f62
  41a8a5:	clc    
  41a8a6:	outs   dx,BYTE PTR ds:[esi]
  41a8a7:	or     BYTE PTR gs:[ecx],0x50
  41a8ab:	outs   dx,DWORD PTR ds:[esi]
  41a8ac:	jo     0x41a8fb
  41a8ae:	add    BYTE PTR [eax-0x53],dl
  41a8b1:	or     DWORD PTR [eax+0x74],edx
  41a8b4:	sbb    dh,bh
  41a8b6:	call   DWORD PTR [edx-0x1f]
  41a8b9:	add    BYTE PTR [eax],al
  41a8bb:	jo     0x41a8ad
  41a8bd:	pop    edi
  41a8be:	imul   ax,WORD PTR [eax],0x0
	...
  41a8e7:	add    dh,dl
  41a8e9:	sub    DWORD PTR [edi+0x2e],ebp
  41a8ec:	jmp    0x544a:0xd6006c61
  41a8f3:	push   eax
  41a8f4:	add    cl,BYTE PTR [edx+0x78]
  41a8f7:	jo     0x41a8af
  41a8f9:	pop    edi
  41a8fa:	jb     0x41a961
  41a8fc:	or     BYTE PTR [eax],0x4f
  41a8ff:	outs   dx,DWORD PTR ds:[esi]
  41a900:	int3   
  41a901:	dec    esp
  41a902:	jae    0x41a965
  41a904:	jo     0x41a92f
  41a906:	pop    esp
  41a907:	inc    esi
  41a908:	cs cmc 
  41a90a:	pop    ds
  41a90b:	inc    ebp
  41a90c:	push   0x55
  41a90e:	ins    BYTE PTR es:[edi],dx
  41a90f:	outs   dx,DWORD PTR ds:[esi]
  41a910:	sbb    BYTE PTR [edx+esi*2+0x5c],0x2c
  41a915:	stc    
  41a916:	dec    edi
  41a917:	and    BYTE PTR [edi],bl
  41a919:	dec    ebp
  41a91a:	jo     0x41a988
  41a91c:	adc    eax,0x56726153
  41a921:	cli    
  41a922:	push   0x72
  41a924:	or     DWORD PTR [esi+0x70],edx
  41a927:	popa   
  41a928:	inc    ecx
  41a929:	pop    esp
  41a92a:	pop    esp
  41a92b:	dec    ebp
  41a92c:	ins    BYTE PTR es:[edi],dx
  41a92d:	inc    esi
  41a92e:	push   esp
  41a92f:	outs   dx,DWORD PTR ds:[esi]
  41a930:	dec    ebx
  41a931:	add    ebx,DWORD PTR [eax+0x42]
  41a934:	sub    ah,BYTE PTR [eax]
  41a936:	adc    eax,0x17e5932
  41a93b:	inc    edx
  41a93c:	(bad)  
  41a93d:	mov    ch,0x4d
  41a93f:	ins    DWORD PTR es:[edi],dx
  41a940:	in     eax,dx
  41a941:	mov    esi,0x3e45101
  41a946:	push   eax
  41a947:	jne    0x41a933
  41a949:	fistp  WORD PTR [esi+0x5c]
	...
  41a974:	or     eax,0x6203176
  41a979:	ficom  DWORD PTR [ecx+0x6c]
  41a97c:	in     al,0xdf
  41a97e:	pop    esi
  41a97f:	jb     0x41a970
  41a981:	mov    eax,ds:0xd9ad6d53
  41a986:	push   ebp
  41a987:	arpl   WORD PTR [eax-0x47a0ce4e],di
  41a98d:	jg     0x41a9df
  41a98f:	ins    DWORD PTR es:[edi],dx
  41a990:	mov    ecx,0xaa50018e
  41a995:	lahf   
  41a996:	push   esp
  41a997:	jne    0x41a945
  41a999:	mov    al,ds:0xa292545d
  41a99e:	pop    esi
  41a99f:	add    BYTE PTR [ebx+0x4b745493],al
  41a9a5:	outs   dx,BYTE PTR ds:[esi]
  41a9a6:	pop    eax
  41a9a7:	gs jb  0x41a92e
  41a9aa:	add    DWORD PTR [eax+0x64],edx
  41a9ad:	inc    eax
  41a9ae:	dec    ebp
  41a9af:	add    BYTE PTR [edx+0x72745954],al
  41a9b5:	push   ecx
  41a9b6:	pop    eax
  41a9b7:	push   eax
  41a9b8:	push   0x5e
  41a9ba:	pop    esp
  41a9bb:	add    BYTE PTR [ebp+0x62515456],cl
  41a9c1:	(bad)  
  41a9c2:	pop    esp
  41a9c3:	cs inc ebx
  41a9c5:	dec    ebp
  41a9c6:	pop    eax
  41a9c7:	add    BYTE PTR [edi],bl
  41a9c9:	in     al,dx
  41a9ca:	push   ebp
  41a9cb:	addr16 sub al,0x51
  41a9ce:	push   eax
  41a9cf:	arpl   WORD PTR [eax+0x9],di
  41a9d2:	out    0x19,eax
  41a9d4:	sub    al,0x2b
  41a9d6:	adc    BYTE PTR [eax+eax*1],al
	...
  41a9fd:	add    BYTE PTR [eax],al
  41a9ff:	add    bh,bh
  41aa01:	push   edx
  41aa02:	or     BYTE PTR [edx+0xf],bl
  41aa05:	inc    edx
  41aa06:	add    bl,BYTE PTR [edi-0x11]
  41aa09:	inc    edi
  41aa0a:	push   ss
  41aa0b:	pop    edx
  41aa0c:	in     eax,dx
  41aa0d:	xor    DWORD PTR [esi],eax
  41aa0f:	sub    BYTE PTR [edx],bl
  41aa11:	es cli 
  41aa13:	push   esp
  41aa14:	in     al,dx
  41aa15:	sub    edi,ebp
  41aa17:	push   esp
  41aa18:	dec    ebx
  41aa19:	pop    ebp
  41aa1a:	mov    edx,0xd037da5e
  41aa1f:	pop    eax
  41aa20:	in     eax,dx
  41aa21:	aaa    
  41aa22:	out    0x34,eax
  41aa24:	out    0x22,al
  41aa26:	rcl    DWORD PTR [eax-0x14],cl
  41aa29:	ss int3 
  41aa2b:	daa    
  41aa2c:	popf   
  41aa2d:	sub    ch,cl
  41aa2f:	aas    
  41aa30:	mov    ah,0x2e
  41aa32:	int3   
  41aa33:	daa    
  41aa34:	call   0xad24:0xb94eca24
  41aa3b:	sub    ecx,DWORD PTR [ebx+0x46]
  41aa3e:	mov    ds,WORD PTR [ecx-0x5b]
  41aa41:	xor    BYTE PTR [esi-0x6cd784dd],cl
  41aa47:	pop    ebx
  41aa48:	dec    ebx
  41aa49:	push   esp
  41aa4a:	xchg   ebx,eax
  41aa4b:	dec    edi
  41aa4c:	jns    0x41aa76
  41aa4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa4f:	sub    ebx,DWORD PTR [ebx+0x6c549309]
  41aa55:	xor    eax,0x411d5484
  41aa5a:	push   esp
  41aa5b:	pop    eax
  41aa5c:	dec    ebx
  41aa5d:	pop    ebp
  41aa5e:	and    eax,0x5c577b30
  41aa63:	push   ebx
	...
  41aa8c:	arpl   WORD PTR [ecx],cx
  41aa8e:	cmp    DWORD PTR [ecx+0x5a],edx
  41aa91:	xor    DWORD PTR [edx],ebx
  41aa93:	pop    ebp
  41aa94:	aas    
  41aa95:	and    al,0xd
  41aa97:	dec    esp
  41aa98:	xor    BYTE PTR ds:0x2679e900,ch
  41aa9e:	jb     0x41aad7
  41aaa0:	sub    dh,BYTE PTR [edi]
  41aaa2:	add    BYTE PTR [eax+edi*8],bh
  41aaa5:	and    eax,0x2e260f72
  41aaaa:	arpl   cx,bp
  41aaac:	pop    eax
  41aaad:	pop    edx
  41aaae:	jno    0x41aaca
  41aab0:	cld    
  41aab1:	sub    esi,DWORD PTR [edx+0xd]
  41aab4:	dec    edi
  41aab5:	inc    ebx
  41aab6:	je     0x41aab1
  41aab8:	cmp    BYTE PTR [edx+esi*2],ch
  41aabb:	std    
  41aabc:	dec    eax
  41aabd:	pop    eax
  41aabe:	ins    DWORD PTR es:[edi],dx
  41aabf:	pop    es
  41aac0:	sbb    esi,DWORD PTR [edi+ebx*2]
  41aac3:	fucomi st,st(3)
  41aac5:	pop    esp
  41aac6:	inc    ecx
  41aac7:	fisttp DWORD PTR [edi]
  41aac9:	es jb  0x41aa81
  41aacc:	and    eax,0xefba6226
  41aad1:	xor    al,0x63
  41aad3:	cdq    
  41aad4:	fwait
  41aad5:	daa    
  41aad6:	ins    BYTE PTR es:[edi],dx
  41aad7:	rcr    BYTE PTR [ecx+0x48bb6331],1
  41aadd:	pop    ebp
  41aade:	inc    edx
  41aadf:	sar    BYTE PTR [eax+edx*2+0x67],0x97
  41aae4:	stos   DWORD PTR es:[edi],eax
  41aae5:	inc    ecx
  41aae6:	add    BYTE PTR [ebx-0x7f96ca81],cl
  41aaec:	jle    0x41ab14
  41aaee:	js     0x41aaaf
	...
  41ab18:	ins    BYTE PTR es:[edi],dx
  41ab19:	cmp    BYTE PTR [eax],al
  41ab1b:	mov    cl,0x9d
  41ab1d:	cmp    BYTE PTR [edi+ecx*4+0x67],dh
  41ab21:	cs arpl cx,bp
  41ab24:	cmp    edi,DWORD PTR [eax]
  41ab26:	arpl   WORD PTR [ebx-0x6a],di
  41ab29:	pop    edx
  41ab2a:	imul   ecx,DWORD PTR [edi+ecx*2+0x59],0x5f
  41ab2f:	pop    edx
  41ab30:	js     0x41ab66
  41ab32:	ins    DWORD PTR es:[edi],dx
  41ab33:	pop    ebx
  41ab34:	imul   ecx,DWORD PTR [ecx],0x50
  41ab37:	ds jns 0x41ab6f
  41ab3a:	add    BYTE PTR [eax],al
  41ab3c:	popa   
  41ab3d:	push   edx
  41ab3e:	data16 je 0x41abb6
  41ab41:	and    al,0x72
  41ab43:	gs pop esi
  41ab45:	dec    eax
  41ab46:	js     0x41abb8
  41ab48:	add    edx,DWORD PTR [ebx+0x44]
  41ab4b:	jb     0x41ab88
  41ab4d:	dec    ebx
  41ab4e:	popa   
  41ab4f:	pop    esp
  41ab50:	popa   
  41ab51:	sub    BYTE PTR [edi+0x73],ch
  41ab54:	dec    ebx
  41ab55:	push   edx
  41ab56:	outs   dx,BYTE PTR ds:[esi]
  41ab57:	jae    0x41aafb
  41ab59:	loope  0x41ab9b
  41ab5b:	js     0x41aadf
  41ab5d:	and    al,0x6e
  41ab5f:	inc    esp
  41ab60:	sbb    BYTE PTR [esi+esi*2+0x65],0x62
  41ab65:	loope  0x41abca
  41ab67:	jb     0x41abb4
  41ab69:	dec    ebx
  41ab6a:	popa   
  41ab6b:	jae    0x41aba9
  41ab6d:	pop    edi
  41ab6e:	outs   dx,DWORD PTR ds:[esi]
  41ab6f:	add    BYTE PTR [eax+0x55],dl
  41ab72:	pop    ebp
  41ab73:	jae    0x41abe6
  41ab75:	dec    edx
  41ab76:	imul   esi,DWORD PTR [edx-0x7a],0xffffffe7
  41ab7a:	pop    ds
  41ab7b:	cmp    al,BYTE PTR [eax]
	...
  41aba1:	add    BYTE PTR [eax],al
  41aba3:	add    BYTE PTR [edx-0x15],dl
  41aba6:	jmp    DWORD PTR [ecx]
  41aba8:	dec    esi
  41aba9:	or     eax,0x49046f4f
  41abae:	jae    0x41ac11
  41abb0:	lock sub DWORD PTR [ebp+eax*2-0x16],ebx
  41abb5:	pop    esp
  41abb6:	pop    ebp
  41abb7:	outs   dx,BYTE PTR ds:[esi]
  41abb8:	out    0x5a,al
  41abba:	gs jbe 0x41ab84
  41abbd:	or     al,0x41
  41abbf:	js     0x41ab73
  41abc1:	sub    eax,0x5580446e
  41abc6:	jbe    0x41ac2d
  41abc8:	(bad)  
  41abca:	push   0x6d
  41abcc:	(bad)  
  41abcd:	or     al,0x4f
  41abcf:	gs jo  0x41ac18
  41abd2:	popa   
  41abd3:	jb     0x41abc7
  41abd5:	out    0x6e,eax
  41abd7:	gs cmp bh,0x5c
  41abdb:	ins    DWORD PTR es:[edi],dx
  41abdc:	dec    ebx
  41abdd:	inc    ebp
  41abde:	add    al,0x50
  41abe0:	push   0x53
  41abe2:	dec    edi
  41abe3:	jne    0x41ac19
  41abe5:	hlt    
  41abe6:	pop    edi
  41abe7:	add    BYTE PTR [edx+edx*1],bl
  41abea:	popa   
  41abeb:	jno    0x41ac25
  41abed:	not    DWORD PTR [edx+0x72]
  41abf0:	daa    
  41abf1:	mov    ds:0x519673d,al
  41abf6:	pop    edi
  41abf7:	je     0x41ac25
  41abf9:	adc    al,0x49
  41abfb:	add    al,bh
  41abfd:	push   cs
  41abfe:	pop    esi
  41abff:	je     0x41ac15
  41ac01:	add    DWORD PTR [edx+0x63],edx
  41ac04:	daa    
  41ac05:	add    BYTE PTR [edi],bh
  41ac07:	dec    eax
	...
  41ac30:	sub    edx,DWORD PTR [ebx]
  41ac32:	push   ebx
  41ac33:	push   WORD PTR [esi+0x5e67262]
  41ac3a:	aas    
  41ac3b:	ins    BYTE PTR es:[edi],dx
  41ac3c:	jmp    0x2d6f:0xe86750d2
  41ac43:	push   eax
  41ac44:	mul    DWORD PTR [edi+0x2d]
  41ac47:	push   eax
  41ac48:	or     al,bl
  41ac4a:	pusha  
  41ac4b:	ins    DWORD PTR es:[edi],dx
  41ac4c:	mov    esi,0x4b714de0
  41ac51:	jo     0x41aca0
  41ac53:	jo     0x41abed
  41ac55:	lds    ecx,FWORD PTR [edi+0x76]
  41ac58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac59:	je     0x41ac5c
  41ac5b:	inc    esi
  41ac5c:	lahf   
  41ac5d:	xchg   edx,eax
  41ac5e:	cs jno 0x41ac07
  41ac61:	xchg   esp,eax
  41ac62:	xor    ebx,DWORD PTR [edi-0x5a]
  41ac65:	test   DWORD PTR [ecx],eax
  41ac67:	inc    esi
  41ac68:	xchg   edi,eax
  41ac69:	xchg   edx,eax
  41ac6a:	xor    DWORD PTR [edi+0x78],ebx
  41ac6d:	xor    ecx,DWORD PTR [ebp+ebp*2+0x79]
  41ac71:	mov    es,WORD PTR [ecx]
  41ac73:	pop    ebp
  41ac74:	lea    esi,[esi]
  41ac76:	push   ecx
  41ac77:	push   eax
  41ac78:	push   0x33
  41ac7a:	push   eax
  41ac7b:	jne    0x41acf1
  41ac7d:	or     DWORD PTR [ecx+0x60],ebx
  41ac80:	dec    ebx
  41ac81:	dec    edi
  41ac82:	push   ebx
  41ac83:	push   esp
  41ac84:	(bad)  
  41ac85:	and    bl,BYTE PTR [ecx+0x5f]
  41ac88:	push   0x3d
  41ac8a:	ds push edx
  41ac8c:	cmp    al,0x9
  41ac8e:	sbb    dh,BYTE PTR ds:0x43165d05
	...
  41acbc:	sbb    DWORD PTR [esi+0x13],ecx
  41acbf:	or     al,BYTE PTR ss:[ecx+0x7]
  41acc3:	xor    DWORD PTR [esi],esi
  41acc5:	das    
  41acc6:	sbb    ecx,DWORD PTR [ebp-0x4]
  41acc9:	cmp    al,BYTE PTR [eax+ebp*1]
  41accc:	or     eax,0x26560025
  41acd1:	push   ebp
  41acd2:	sub    BYTE PTR [ecx-0x16],ah
  41acd5:	daa    
  41acd6:	cld    
  41acd7:	push   ebp
  41acd8:	idiv   DWORD PTR [ebx]
  41acda:	out    0x30,eax
  41acdc:	out    0x2e,al
  41acde:	sti    
  41acdf:	dec    esp
  41ace0:	or     al,0x3b
  41ace2:	add    al,0x28
  41ace4:	or     eax,0xef40b75d
  41ace9:	and    esp,eax
  41aceb:	push   ebp
  41acec:	fist   WORD PTR [edx+edi*4+0x5a]
  41acf0:	xlat   BYTE PTR ds:[ebx]
  41acf1:	sub    eax,0x269a03da
  41acf6:	int    0x4f
  41acf8:	mov    dh,0x28
  41acfa:	mov    ecx,0xc65a975e
  41acff:	pop    ebp
  41ad00:	mov    bh,0x51
  41ad02:	std    
  41ad03:	push   esp
  41ad04:	cdq    
  41ad05:	cs ret 
  41ad07:	cmp    eax,0x57aa5977
  41ad0c:	lods   al,BYTE PTR ds:[esi]
  41ad0d:	sub    al,0x85
  41ad0f:	dec    edi
  41ad10:	outs   dx,DWORD PTR ds:[esi]
  41ad11:	pop    edx
  41ad12:	or     BYTE PTR [edi+0x68],0x3a
  41ad16:	out    0x15,eax
  41ad18:	outs   dx,BYTE PTR ds:[esi]
  41ad19:	xor    DWORD PTR [edx+0x262503],ecx
  41ad1f:	test   DWORD PTR [eax],eax
	...
  41ad45:	add    BYTE PTR [eax],al
  41ad47:	add    BYTE PTR [ecx+ecx*1+0x5818a65c],dl
  41ad4e:	ins    DWORD PTR es:[edi],dx
  41ad4f:	dec    edi
  41ad50:	and    edi,DWORD PTR [edi+ebx*2]
  41ad53:	pop    ebx
  41ad54:	and    dl,BYTE PTR [ebp+0x44]
  41ad57:	inc    eax
  41ad58:	adc    eax,0x7855612a
  41ad5d:	cmp    esi,DWORD PTR [edi+0x9]
  41ad60:	sbb    BYTE PTR [ecx],bh
  41ad62:	jae    0x41ad9e
  41ad64:	dec    edi
  41ad65:	push   ebp
  41ad66:	push   ecx
  41ad67:	inc    ecx
  41ad68:	cmp    sp,WORD PTR [ebx+0x45]
  41ad6c:	cld    
  41ad6d:	sub    DWORD PTR [ebp+ebx*1+0x6e],esi
  41ad71:	daa    
  41ad72:	sbb    bl,BYTE PTR gs:[ecx+0x471a6129]
  41ad79:	push   ebp
  41ad7a:	push   ecx
  41ad7b:	add    DWORD PTR [esi],ebp
  41ad7d:	cmp    esp,DWORD PTR [ebx+0xd]
  41ad80:	adc    al,0x2a
  41ad82:	je     0x41ad79
  41ad84:	daa    
  41ad85:	daa    
  41ad86:	gs cli 
  41ad88:	jmp    0xe9fb0a72
  41ad8d:	stc    
  41ad8e:	sub    eax,0x3825ca
  41ad93:	mov    ebp,0xdb5f20fd
  41ad98:	and    ebp,DWORD PTR ds:0x3d7cc451
  41ad9e:	xlat   BYTE PTR ds:[bx]
  41ada0:	jno    0x41adda
  41ada2:	cs mov edx,0xbd67257f
  41ada8:	arpl   WORD PTR [ecx],cx
  41adaa:	pop    esp
  41adab:	call   0x0:0x0
	...
  41add2:	add    BYTE PTR [eax],al
  41add4:	jo     0x41ae2c
  41add6:	jb     0x41ad64
  41add8:	fs pop eax
  41adda:	arpl   WORD PTR [ebp-0x7191d1a4],dx
  41ade0:	push   ebp
  41ade1:	push   esp
  41ade2:	das    
  41ade3:	scas   al,BYTE PTR es:[edi]
  41ade4:	clc    
  41ade5:	push   esp
  41ade6:	xor    eax,DWORD PTR [eax]
  41ade8:	adc    al,0xff
  41adea:	ins    BYTE PTR es:[edi],dx
  41adeb:	ins    BYTE PTR es:[edi],dx
  41adec:	(bad)  
  41adee:	pusha  
  41adef:	add    dh,dl
  41adf1:	dec    esi
  41adf2:	imul   esp,DWORD PTR [esi-0x34],0xffffffe0
  41adf6:	pusha  
  41adf7:	inc    ebx
  41adf8:	jg     0x41adf7
  41adfa:	pop    ds
  41adfb:	push   ebx
  41adfc:	test   ebx,esp
  41adfe:	jae    0x41ae77
  41ae00:	cmp    edi,0x60
  41ae03:	add    BYTE PTR [esi+0xc705ce0],al
  41ae09:	icebp  
  41ae0a:	outs   dx,DWORD PTR ds:[esi]
  41ae0b:	add    BYTE PTR [edi-0x5],bh
  41ae0e:	imul   esp,DWORD PTR [ebp+0x3],0xfffffffd
  41ae12:	sub    eax,0xffe05a65
  41ae17:	jb     0x41ae54
  41ae19:	icebp  
  41ae1a:	pusha  
  41ae1b:	jae    0x41ada1
  41ae1d:	in     eax,dx
  41ae1e:	pop    esp
  41ae1f:	je     0x41adc3
  41ae21:	(bad)  
  41ae22:	fs je  0x41ae74
  41ae25:	(bad)  
  41ae26:	sub    eax,0xffe45469
  41ae2b:	pop    ebx
  41ae2c:	es loopne 0x41ae8b
  41ae2f:	jo     0x41ae7e
  41ae31:	in     al,dx
  41ae32:	jno    0x41ae99
  41ae34:	push   esi
  41ae35:	pop    ecx
  41ae36:	popa   
  41ae37:	popa   
	...
  41ae60:	cmp    BYTE PTR [edi],0x54
  41ae63:	push   eax
  41ae64:	bound  ebx,QWORD PTR [esi+0x4b]
  41ae67:	inc    esi
  41ae68:	mov    ss,WORD PTR [edx+0x3d]
  41ae6b:	push   edx
  41ae6c:	out    dx,eax
  41ae6d:	push   esp
  41ae6e:	dec    esp
  41ae6f:	gs adc edi,ecx
  41ae72:	push   edx
  41ae73:	popa   
  41ae74:	lock loope 0x41ae76
  41ae77:	dec    eax
  41ae78:	add    al,0xfc
  41ae7a:	jae    0x41aedd
  41ae7c:	out    0xe4,al
  41ae7e:	dec    edi
  41ae7f:	popa   
  41ae80:	mov    esi,0xc343ffe0
  41ae85:	cld    
  41ae86:	pop    esp
  41ae87:	inc    esp
  41ae88:	dec    ebx
  41ae89:	mov    DWORD PTR [ebx],esi
  41ae8b:	add    BYTE PTR [ebx+0x74713681],bl
  41ae91:	fwait
  41ae92:	xor    esp,DWORD PTR [ebx+ecx*2+0x7a]
  41ae96:	xor    dh,BYTE PTR [ecx+0x77]
  41ae99:	ins    BYTE PTR es:[edi],dx
  41ae9a:	and    al,0x6b
  41ae9c:	outs   dx,BYTE PTR ds:[esi]
  41ae9d:	mov    ds:0x50667158,al
  41aea2:	push   edx
  41aea3:	pop    edi
  41aea4:	dec    bp
  41aea6:	add    al,0x52
  41aea8:	dec    bp
  41aeaa:	das    
  41aeab:	je     0x41aedb
  41aead:	out    dx,al
  41aeae:	sub    BYTE PTR [edx+0x26],dh
  41aeb1:	aas    
  41aeb2:	cmp    BYTE PTR [ebp+0x39],ch
  41aeb5:	dec    ecx
  41aeb6:	add    al,0x50
  41aeb8:	sbb    al,0xf0
  41aeba:	aaa    
  41aebb:	dec    esi
  41aebc:	push   ds
  41aebd:	cmc    
  41aebe:	and    eax,0x47a21963
  41aec3:	push   ecx
	...
  41aeec:	sti    
  41aeed:	comiss xmm6,DWORD PTR [esp+ebx*1-0x1]
  41aef2:	cs ins BYTE PTR es:[edi],dx
  41aef4:	dec    ebx
  41aef5:	out    dx,eax
  41aef6:	div    WORD PTR cs:[edx+0x15ee7222]
  41aefe:	dec    ebp
  41aeff:	pop    edi
  41af00:	stc    
  41af01:	mov    ch,0x2a
  41af03:	outs   dx,BYTE PTR ds:[esi]
  41af04:	sub    edx,DWORD PTR [edx]
  41af06:	ss addr16 lock iret 
  41af0a:	cmp    ch,BYTE PTR [ebx+ecx*2+0x76]
  41af0e:	hlt    
  41af0f:	xor    DWORD PTR [ecx],ecx
  41af11:	leave  
  41af12:	xor    eax,0xefd2bf46
  41af17:	lods   ax,WORD PTR ds:[esi]
  41af19:	fld    DWORD PTR [ecx]
  41af1b:	dec    esi
  41af1c:	(bad)  
  41af1d:	(bad)
  41af21:	outs   dx,DWORD PTR ds:[esi]
  41af22:	out    dx,eax
  41af23:	data16 mov ch,0xc9
  41af26:	add    DWORD PTR [ebp+ecx*4+0x9],ebx
  41af2a:	mov    WORD PTR [edi],?
  41af2c:	(bad)  
  41af2d:	aaa    
  41af2e:	nop
  41af2f:	cmp    DWORD PTR [eax+0x7a22b709],ebp
  41af35:	cmp    BYTE PTR [esi-0x18d286d0],dh
  41af3b:	push   esi
  41af3c:	jns    0x41af63
  41af3e:	out    0x56,eax
  41af40:	jp     0x41af70
  41af42:	jns    0x41af95
  41af44:	test   BYTE PTR [esi],ah
  41af46:	test   BYTE PTR [ebx],al
  41af48:	jns    0x41af6e
  41af4a:	push   esi
  41af4b:	cmp    BYTE PTR [edi+0x275922],cl
	...
  41af75:	add    BYTE PTR [eax],al
  41af77:	add    BYTE PTR [edx+0x3d],ch
  41af7a:	inc    esi
  41af7b:	ss cmp al,0x9
  41af7e:	aaa    
  41af7f:	xor    DWORD PTR [ecx],edi
  41af81:	cmp    eax,0x2b2654e7
  41af86:	xor    edi,DWORD PTR [ecx]
  41af88:	or     al,0x37
  41af8a:	dec    esp
  41af8b:	pusha  
  41af8c:	cli    
  41af8d:	and    esi,DWORD PTR [eax+edi*1]
  41af90:	xor    ebp,ecx
  41af92:	cmp    BYTE PTR [ebx],ch
  41af94:	sbb    eax,0xf8e4192e
  41af99:	sub    eax,0x23f52c0a
  41af9e:	sti    
  41af9f:	xor    dh,ah
  41afa1:	and    DWORD PTR [esi*1+0x26045c17],ecx
  41afa8:	pop    es
  41afa9:	aaa    
  41afaa:	add    BYTE PTR [edx],bh
  41afac:	call   0xed72da05
  41afb1:	and    cl,ah
  41afb3:	and    al,0xdf
  41afb5:	and    esi,ecx
  41afb7:	xor    edx,ebx
  41afb9:	or     BYTE PTR [edx-0x3bc446da],bh
  41afbf:	xor    eax,0x26b73097
  41afc4:	dec    ebx
  41afc5:	dec    ebx
  41afc6:	xchg   ebx,eax
  41afc7:	push   ebx
  41afc8:	imul   eax,DWORD PTR [esi+0x0],0xffffffa6
  41afcc:	jp     0x41b02b
  41afce:	push   edx
  41afcf:	sahf   
  41afd0:	mov    WORD PTR [ecx],cs
  41afd2:	inc    esi
  41afd3:	mov    ebp,0xaf4d4878
  41afd8:	dec    eax
  41afd9:	jecxz  0x41b04a
  41afdb:	fwait
	...
  41b004:	xor    cl,BYTE PTR [ecx]
  41b006:	pop    esp
  41b007:	mov    ecx,0x90662436
  41b00c:	and    al,0x26
  41b00e:	jno    0x41aff9
  41b010:	(bad)  
  41b011:	cs cld 
  41b013:	out    0xba,al
  41b015:	js     0x41afff
  41b017:	adc    BYTE PTR [edi],0x64
  41b01a:	std    
  41b01b:	push   ecx
  41b01c:	adc    edi,DWORD PTR ds:0xe5dc2370
  41b022:	inc    DWORD PTR [eax-0x7d]
  41b025:	cmp    eax,0xe5c15a70
  41b02a:	sub    al,0xe9
  41b02c:	outs   dx,BYTE PTR ds:[esi]
  41b02d:	cmp    eax,0xe59c0370
  41b032:	inc    DWORD PTR [ebp+0x5f]
  41b035:	es jb  0x41b080
  41b038:	inc    edi
  41b039:	cmp    al,0x5f
  41b03b:	pop    ss
  41b03c:	arpl   bx,sp
  41b03e:	arpl   WORD PTR [eax],cx
  41b040:	push   ebx
  41b041:	or     DWORD PTR [ebp+0x3a],ebx
  41b044:	xor    al,0x2b
  41b046:	je     0x41b05e
  41b048:	es aaa 
  41b04a:	arpl   WORD PTR ds:0xfb633904,sp
  41b050:	daa    
  41b051:	jmp    0x3d6eb6a6
  41b056:	jne    0x41b060
  41b058:	sbb    DWORD PTR [esi],esp
  41b05a:	add    BYTE PTR [ebp+0x974382f],dh
  41b060:	add    ebp,DWORD PTR [edx]
  41b062:	jb     0x41b030
  41b064:	imul   edi,DWORD PTR ds:0xdb6d,0x0
	...
  41b08e:	add    BYTE PTR [eax],al
  41b090:	jg     0x41b08a
  41b092:	(bad)  
  41b093:	(bad)  
  41b094:	(bad)  
  41b095:	in     al,dx
  41b096:	outs   dx,BYTE PTR ds:[esi]
  41b097:	je     0x41b0db
  41b099:	inc    esp
  41b09a:	outs   dx,BYTE PTR ds:[esi]
  41b09b:	jae    0x41b083
  41b09d:	in     al,dx
  41b09e:	imul   ebp,DWORD PTR [edx+edx*2+0x5d],0x5d
  41b0a3:	je     0x41b05f
  41b0a5:	add    eax,0xf7c7704b
  41b0aa:	pop    esp
  41b0ab:	cs stos BYTE PTR es:[edi],al
  41b0ad:	pop    ecx
  41b0ae:	dec    ecx
  41b0af:	dec    esp
  41b0b0:	scas   al,BYTE PTR es:[edi]
  41b0b1:	mul    BYTE PTR [edi+0x65]
  41b0b4:	fsubrp st(1),st
  41b0b6:	pop    ebx
  41b0b7:	outs   dx,DWORD PTR ds:[esi]
  41b0b8:	jb     0x41b09b
  41b0ba:	ins    DWORD PTR es:[edi],dx
  41b0bb:	pop    esp
  41b0bc:	shl    edx,1
  41b0be:	push   0x63e3d36d
  41b0c3:	add    BYTE PTR [ebp-0x1c],dh
  41b0c6:	outs   dx,BYTE PTR ds:[esi]
  41b0c7:	gs test cl,dh
  41b0ca:	outs   dx,DWORD PTR ds:[esi]
  41b0cb:	jae    0x41b0ed
  41b0cd:	sti    
  41b0ce:	outs   dx,BYTE PTR ds:[esi]
  41b0cf:	cs adc ah,ah
  41b0d2:	ins    DWORD PTR es:[edi],dx
  41b0d3:	add    BYTE PTR [esi+0x4c],ch
  41b0d6:	pop    edi
  41b0d7:	gs pusha 
  41b0d9:	inc    esp
  41b0da:	push   esp
  41b0db:	add    BYTE PTR [ecx-0x1e],al
  41b0de:	gs je  0x41b136
  41b0e1:	in     al,dx
  41b0e2:	jno    0x41b149
  41b0e4:	push   cs
  41b0e5:	dec    esp
  41b0e6:	pop    edi
  41b0e7:	gs pusha 
  41b0e9:	inc    esp
  41b0ea:	push   esp
  41b0eb:	add    BYTE PTR [edi],ch
  41b0ed:	push   edi
  41b0ee:	push   ecx
  41b0ef:	add    BYTE PTR [ecx+0x42],al
  41b0f2:	inc    esi
  41b0f3:	push   esp
	...
  41b11c:	push   ebp
  41b11d:	dec    esp
  41b11e:	push   edx
  41b11f:	inc    ebp
  41b120:	dec    esi
  41b121:	inc    esi
  41b122:	ins    BYTE PTR es:[edi],dx
  41b123:	popa   
  41b124:	popa   
  41b125:	mul    BYTE PTR [eax+0x73]
  41b128:	dec    esi
  41b129:	push   ecx
  41b12a:	jne    0x41b19c
  41b12c:	xchg   DWORD PTR [ecx+0x65],eax
  41b12f:	bound  ecx,QWORD PTR [esi+0x4b423eee]
  41b135:	adc    DWORD PTR [esi+0x32],eax
  41b138:	mov    BYTE PTR [edx],dl
  41b13a:	inc    esi
  41b13b:	sub    esi,DWORD PTR [ebx-0x4e]
  41b13e:	cld    
  41b13f:	xor    ebx,DWORD PTR [esi-0x4a]
  41b142:	inc    esp
  41b143:	aas    
  41b144:	mov    BYTE PTR ds:0xb5854142,al
  41b14a:	lock xor ebx,DWORD PTR [edx+0x61]
  41b14e:	repz xor eax,DWORD PTR [esi+0x3c45f6d4]
  41b155:	iret   
  41b156:	idiv   BYTE PTR [edx+0x4b]
  41b159:	jae    0x41b1a9
  41b15b:	inc    esi
  41b15c:	lahf   
  41b15d:	pop    DWORD PTR [edx+edx*2-0x7a]
  41b161:	mov    es,WORD PTR [edx+0x6c]
  41b164:	push   0x33
  41b166:	xor    ah,BYTE PTR [ebx+0x58]
  41b169:	jle    0x41b1c0
  41b16b:	ja     0x41b1c8
  41b16d:	cmp    eax,0xee696750
  41b172:	ss aaa 
  41b174:	push   cs
  41b175:	loope  0x41b16b
  41b177:	xor    dh,BYTE PTR [esi+0x14]
  41b17a:	stc    
  41b17b:	sub    cl,BYTE PTR [esi]
  41b17d:	mov    cl,0xef
  41b17f:	xor    DWORD PTR [eax],eax
	...
  41b1a5:	add    BYTE PTR [eax],al
  41b1a7:	add    BYTE PTR [esi-0x4a],bl
  41b1aa:	hlt    
  41b1ab:	xor    bl,BYTE PTR [ebp+eax*1+0x42]
  41b1af:	inc    ecx
  41b1b0:	push   esp
  41b1b1:	mov    ecx,0xaa5f42ee
  41b1b6:	out    dx,eax
  41b1b7:	xor    al,BYTE PTR ds:0x3834f1aa
  41b1bd:	aam    0x40
  41b1bf:	jnp    0x41b20c
  41b1c1:	pop    ss
  41b1c2:	sub    DWORD PTR [ecx-0x12],esi
  41b1c5:	push   DWORD PTR [edi]
  41b1c7:	jo     0x41b1c1
  41b1c9:	mov    bl,0x33
  41b1cb:	jno    0x41b202
  41b1cd:	or     DWORD PTR [esi],ebp
  41b1cf:	addr16 dec ebx
  41b1d1:	mov    bh,0x2a
  41b1d3:	jno    0x41b1c3
  41b1d5:	or     ch,cl
  41b1d7:	aaa    
  41b1d8:	fcmovnu st,st(6)
  41b1da:	iret   
  41b1db:	sub    eax,0x57ad09ac
  41b1e0:	fwait
  41b1e1:	push   edi
  41b1e2:	mov    esi,0xcc28943a
  41b1e7:	xor    DWORD PTR [ebp+0x27],ebx
  41b1ea:	mov    bl,0x33
  41b1ec:	dec    ebx
  41b1ed:	inc    edi
  41b1ee:	fwait
  41b1ef:	push   ebx
  41b1f0:	jne    0x41b212
  41b1f2:	mov    al,0x22
  41b1f4:	scas   al,BYTE PTR es:[edi]
  41b1f5:	es cdq 
  41b1f7:	in     eax,dx
  41b1f8:	popf   
  41b1f9:	sub    al,0xe7
  41b1fb:	pop    edi
  41b1fc:	cdq    
  41b1fd:	and    DWORD PTR [eax+0x7e5c6e2d],eax
  41b203:	and    eax,0x2c89df7f
  41b208:	pusha  
  41b209:	or     DWORD PTR [ebp+0x30],ecx
	...
  41b233:	add    BYTE PTR [edx-0x4],bl
  41b236:	les    esp,FWORD PTR [edi]
  41b238:	outs   dx,DWORD PTR ds:[esi]
  41b239:	sbb    eax,0x5c7a4de7
  41b23e:	inc    esi
  41b23f:	dec    ebx
  41b240:	pop    ebp
  41b241:	and    dl,BYTE PTR [ebx+0x4]
  41b244:	adc    eax,0x1a5d3a5c
  41b249:	and    DWORD PTR [eax+edi*1+0x2f],edx
  41b24d:	and    BYTE PTR [esi],bh
  41b24f:	cs dec ebx
  41b251:	aas    
  41b252:	sbb    dl,BYTE PTR [ecx+0x9]
  41b255:	sub    bh,BYTE PTR [edx]
  41b257:	daa    
  41b258:	push   ebp
  41b259:	cmc    
  41b25a:	or     eax,0x162c2848
  41b25f:	sub    BYTE PTR [eax],ch
  41b261:	dec    ebx
  41b262:	adc    al,0x26
  41b264:	in     eax,dx
  41b265:	and    eax,0x461a0419
  41b26a:	sub    cl,BYTE PTR [ebx+0x1f]
  41b26d:	inc    esi
  41b26e:	xor    al,0x5d
  41b270:	add    eax,0xc27043b
  41b275:	xor    eax,0x92c0c00
  41b27a:	push   eax
  41b27b:	and    bl,BYTE PTR [eax-0x22]
  41b27e:	pop    esp
  41b27f:	scas   al,BYTE PTR es:[edi]
  41b280:	and    eax,0x7ccf4735
  41b285:	sub    dh,BYTE PTR [edx-0x39]
  41b288:	imul   ebx,DWORD PTR ds:0x5871c449,0x974d66c
  41b292:	push   eax
  41b293:	mov    dl,0x19
  41b295:	loopne 0x41b2f3
  41b297:	test   al,0x0
	...
  41b2bd:	add    BYTE PTR [eax],al
  41b2bf:	add    BYTE PTR [ebp+0x35],dl
  41b2c2:	push   0x673566c4
  41b2c7:	mov    ch,BYTE PTR [ecx+0x35]
  41b2ca:	arpl   cx,bp
  41b2cc:	cwde   
  41b2cd:	inc    eax
  41b2ce:	das    
  41b2cf:	fcomp  DWORD PTR [ebx-0x7351adbb]
  41b2d5:	sub    ah,BYTE PTR [ecx+0x7b]
  41b2d8:	xor    DWORD PTR [ecx],edi
  41b2da:	je     0x41b2c5
  41b2dc:	js     0x41b31e
  41b2de:	das    
  41b2df:	mov    eax,0x8472477f
  41b2e4:	sub    eax,0x1b566c58
  41b2e9:	or     DWORD PTR [eax],eax
  41b2eb:	jmp    0xe941bc38
  41b2f0:	dec    eax
  41b2f1:	or     DWORD PTR [eax],eax
  41b2f3:	jmp    0xe941bc40
  41b2f8:	dec    eax
  41b2f9:	or     DWORD PTR [eax],eax
  41b2fb:	jmp    0xe941bc48
  41b300:	dec    eax
  41b301:	or     DWORD PTR [eax],eax
  41b303:	jmp    0xe941bc50
  41b308:	dec    eax
  41b309:	or     DWORD PTR [eax],eax
  41b30b:	sbb    bh,BYTE PTR [esi]
  41b30d:	sbb    eax,0xf82a1d67
  41b312:	sub    eax,0x1d2305
  41b317:	add    BYTE PTR [ecx-0xb],dh
  41b31a:	imul   ebp,DWORD PTR [ecx+0x5e],0xffffffe9
  41b31e:	cs pop edi
  41b320:	inc    ebp
  41b321:	cmc    
  41b322:	pusha  
  41b323:	outs   dx,BYTE PTR ds:[esi]
	...
  41b34c:	(bad)  
  41b34d:	imul   DWORD PTR [esp+ebp*2+0x7b]
  41b351:	fisub  WORD PTR [eax+0x33]
  41b354:	add    eax,0x216f6be7
  41b359:	jmp    0xe655265d
  41b35e:	fs je  0x41b360
  41b361:	mov    dh,0x5c
  41b363:	jo     0x41b345
  41b365:	call   0xe92214d9
  41b36a:	push   DWORD PTR [edx-0x2d]
  41b36d:	in     eax,0x64
  41b36f:	je     0x41b330
  41b371:	mov    dh,0x5c
  41b373:	jae    0x41b353
  41b375:	call   0xf522b3e9
  41b37a:	imul   ebp,DWORD PTR [ecx-0x22],0xffffffe8
  41b37e:	cs pop edi
  41b380:	shl    edx,0x6b
  41b383:	jne    0x41b35c
  41b385:	fistp  WORD PTR [edx+0x62]
  41b388:	pop    ebx
  41b389:	fisub  WORD PTR [eax+0x73]
  41b38c:	loop   0x41b384
  41b38e:	ins    BYTE PTR es:[edi],dx
  41b38f:	ins    BYTE PTR es:[edi],dx
  41b390:	jnp    0x41b38b
  41b392:	pusha  
  41b393:	xor    eax,DWORD PTR [ebp+0x1f6c6ae6]
  41b399:	loopne 0x41b408
  41b39b:	pop    edi
  41b39c:	add    cl,ah
  41b39e:	push   0x62
  41b3a0:	mov    ds:0x86f6909,al
  41b3a5:	imul   BYTE PTR [esp+ebp*2+0xb]
  41b3a9:	stc    
  41b3aa:	pusha  
  41b3ab:	xor    edx,DWORD PTR [ebp+ecx*1+0x6c6c]
	...
  41b3d6:	add    BYTE PTR [eax],al
  41b3d8:	mov    ds:0x5b6c6cf6,al
  41b3dd:	stc    
  41b3de:	pusha  
  41b3df:	xor    ecx,DWORD PTR [ebx-0x9]
  41b3e2:	sub    BYTE PTR [eax-0x12],dh
  41b3e5:	lods   eax,DWORD PTR ds:[esi]
  41b3e6:	add    DWORD PTR [ecx-0x6],esi
  41b3e9:	adc    ebp,DWORD PTR [ebx]
  41b3eb:	je     0x41b3db
  41b3ed:	jb     0x41b449
  41b3ef:	popa   
  41b3f0:	out    dx,eax
  41b3f1:	push   es
  41b3f2:	xor    eax,0x34b34b63
  41b3f7:	ins    BYTE PTR es:[edi],dx
  41b3f8:	loop   0x41b3c5
  41b3fa:	and    BYTE PTR [ecx],dh
  41b3fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3fd:	shl    BYTE PTR [ebx],cl
  41b3ff:	arpl   WORD PTR [ebx+0x4b6333c1],di
  41b405:	iret   
  41b406:	xor    al,0x6c
  41b408:	mov    ds:0x8431206e,al
  41b40d:	outs   dx,DWORD PTR ds:[esi]
  41b40e:	sub    eax,0x36a29b63
  41b413:	outs   dx,DWORD PTR ds:[esi]
  41b414:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b415:	leave  
  41b416:	sub    eax,0x26c35863
  41b41b:	ins    DWORD PTR es:[edi],dx
  41b41c:	ja     0x41b3b3
  41b41e:	sub    BYTE PTR [esi-0x64],ch
  41b421:	cmp    BYTE PTR [esp+esi*2],0x6e
  41b425:	pop    DWORD PTR [ecx]
  41b427:	jno    0x41b4a3
  41b429:	xchg   esi,eax
  41b42a:	sub    al,0x74
  41b42c:	outs   dx,BYTE PTR ds:[esi]
  41b42d:	outs   dx,DWORD PTR ds:[esi]
  41b42e:	pop    edx
  41b42f:	popa   
  41b430:	ins    BYTE PTR es:[edi],dx
  41b431:	xchg   BYTE PTR [eax],dh
  41b433:	imul   esp,DWORD PTR [ebp+0x7b],0x23
  41b437:	ins    BYTE PTR es:[edi],dx
  41b438:	pop    esp
  41b439:	inc    eax
  41b43a:	add    al,0x0
	...
  41b464:	dec    ebx
  41b465:	mov    ds:0xa24b0001,al
  41b46a:	add    DWORD PTR [eax],eax
  41b46c:	dec    ebx
  41b46d:	mov    ds:0xa24b0001,al
  41b472:	add    DWORD PTR [eax],eax
  41b474:	dec    ebx
  41b475:	mov    ds:0xa24b0001,al
  41b47a:	add    DWORD PTR [eax],eax
  41b47c:	dec    ebx
  41b47d:	mov    ds:0x94b0001,al
  41b482:	out    0x3,eax
  41b484:	dec    ebx
  41b485:	cmp    DWORD PTR [ecx],ebx
  41b487:	sub    ebp,esp
  41b489:	and    DWORD PTR [ebx],eax
  41b48b:	pop    ds
  41b48c:	cli    
  41b48d:	(bad)  
  41b48f:	sub    esp,esp
  41b491:	or     BYTE PTR [edi],dl
  41b493:	mul    BYTE PTR ss:[edx]
  41b496:	adc    BYTE PTR [eax],ch
  41b498:	call   0xf976d4a5
  41b49d:	and    eax,0x21d722fb
  41b4a2:	fstp   QWORD PTR [esi]
  41b4a4:	dec    ebx
  41b4a5:	pop    ecx
  41b4a6:	enter  0xb32f,0x9
  41b4aa:	mov    bh,0x22
  41b4ac:	mov    edi,0x8828b321
  41b4b1:	xor    esp,ecx
  41b4b3:	add    ebx,DWORD PTR [edx-0x51d639de]
  41b4b9:	sbb    edi,DWORD PTR [edx-0x44c56417]
  41b4bf:	sub    dl,BYTE PTR [edi+0x6c34e726]
  41b4c5:	and    al,0x8d
  41b4c7:	sub    BYTE PTR [eax],al
	...
  41b4ed:	add    BYTE PTR [eax],al
  41b4ef:	add    BYTE PTR [ebp+0x38],ch
  41b4f2:	lds    ebp,FWORD PTR [edi]
  41b4f4:	jae    0x41b52b
  41b4f6:	out    0x34,eax
  41b4f8:	fs and al,0x95
  41b4fb:	sub    BYTE PTR [ebp+0x38],dh
  41b4fe:	mov    ecx,0x7b3158e9
  41b503:	add    ebx,DWORD PTR [edx+0x22]
  41b506:	xchg   BYTE PTR [ecx],ch
  41b508:	pop    esi
  41b509:	sbb    ebx,DWORD PTR [edx-0xb]
  41b50c:	jbe    0x41b543
  41b50e:	pop    edi
  41b50f:	xor    BYTE PTR [ebx-0x18],cl
  41b512:	sbb    BYTE PTR ds:0x2018e84b,ah
  41b518:	dec    ebx
  41b519:	call   0x588cd416
  41b51e:	and    al,0x48
  41b520:	or     BYTE PTR [eax+0x0],cl
  41b523:	sbb    eax,0x3a6d23af
  41b528:	pop    ebx
  41b529:	sbb    ebx,DWORD PTR [edi+0x14]
  41b52c:	fstp   QWORD PTR fs:[edi]
  41b52f:	add    al,0x31
  41b531:	sub    dh,BYTE PTR [edx+0x10]
  41b534:	aas    
  41b535:	xor    eax,0x39fc0563
  41b53a:	arpl   bx,di
  41b53c:	xor    cl,BYTE PTR [ebx+ebp*2+0x4]
  41b540:	jae    0x41b54d
  41b542:	arpl   WORD PTR [edi],ax
  41b544:	cs aaa 
  41b546:	ja     0x41b541
  41b548:	sbb    al,0x28
  41b54a:	fs mov ecx,0xd6713869
  41b550:	jae    0x41b589
  41b552:	or     DWORD PTR fs:[eax],eax
	...
  41b579:	add    BYTE PTR [eax],al
  41b57b:	add    BYTE PTR [ecx+0x289c4d57],cl
  41b581:	and    BYTE PTR [ebp-0x3d],ch
  41b584:	sbb    DWORD PTR ds:0x1b71c66d,0x71
  41b58b:	jmp    0xc4b3d81a
  41b590:	push   0x1c
  41b592:	js     0x41b57d
  41b594:	pushf  
  41b595:	ds ins DWORD PTR es:[edi],dx
  41b597:	mov    ds:0x886c1d31,eax
  41b59c:	pushf  
  41b59d:	inc    ebx
  41b59e:	addr16 fwait
  41b5a0:	dec    ebp
  41b5a1:	and    ebp,DWORD PTR [ebp-0x7f]
  41b5a4:	jl     0x41b5af
  41b5a6:	push   ecx
  41b5a7:	mov    gs,WORD PTR [edx]
  41b5a9:	xor    eax,0x261e8875
  41b5ae:	pop    esp
  41b5af:	pushf  
  41b5b0:	and    ebp,DWORD PTR [edi]
  41b5b2:	addr16 push ebp
  41b5b4:	jae    0x41b600
  41b5b6:	add    BYTE PTR [edx+esi*4],cl
  41b5b9:	(bad)  
  41b5bb:	dec    esi
  41b5bc:	jnp    0x41b5f7
  41b5be:	cmp    bh,dh
  41b5c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5c1:	stos   BYTE PTR es:[edi],al
  41b5c2:	add    BYTE PTR gs:[esi-0x7],ah
  41b5c6:	outs   dx,DWORD PTR ds:[esi]
  41b5c7:	cmp    cl,BYTE PTR [ebp-0x5e]
  41b5ca:	std    
  41b5cb:	addr16 push esi
  41b5cd:	stc    
  41b5ce:	outs   dx,DWORD PTR ds:[esi]
  41b5cf:	jae    0x41b569
  41b5d1:	mov    ds:0xf954002c,eax
  41b5d6:	outs   dx,DWORD PTR ds:[esi]
  41b5d7:	cs jb  0x41b5e6
  41b5da:	gs jb  0x41b624
  41b5dd:	jmp    0x41b632
  41b5df:	push   eax
	...
  41b608:	push   ecx
  41b609:	fdiv   QWORD PTR [ebx+0x65]
  41b60c:	popa   
  41b60d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b60e:	popa   
  41b60f:	popa   
  41b610:	push   esi
  41b611:	push   es
  41b612:	dec    edi
  41b613:	gs inc ebx
  41b615:	inc    eax
  41b616:	imul   ebp,DWORD PTR [esi+0x49],0xffffffe8
  41b61a:	je     0x41b61c
  41b61c:	push   cs
  41b61d:	inc    ecx
  41b61e:	imul   edi,DWORD PTR [edx+0x1b],0xffffffe2
  41b622:	imul   esp,DWORD PTR [ecx-0x2],0x56
  41b626:	popa   
  41b627:	popa   
  41b628:	iret   
  41b629:	loop   0x41b698
  41b62b:	imul   edx,DWORD PTR [edi],0xffffffed
  41b62e:	pop    ebx
  41b62f:	add    ah,ah
  41b631:	loope  0x41b69d
  41b633:	arpl   WORD PTR [ecx],cx
  41b635:	push   es
  41b636:	pop    esp
  41b637:	inc    esi
  41b638:	into   
  41b639:	loop   0x41b699
  41b63b:	imul   ecx,DWORD PTR [esi],0x48
  41b63e:	jb     0x41b6af
  41b640:	aad    0xf6
  41b642:	pusha  
  41b643:	jb     0x41b603
  41b645:	add    eax,0xdcd86f49
  41b64a:	imul   ebp,DWORD PTR [ebx+edx*8+0x5],0x5c
  41b64f:	dec    ebp
  41b650:	int    0xef
  41b652:	fs ins BYTE PTR es:[edi],dx
  41b654:	into   
  41b655:	in     al,0x5b
  41b657:	push   eax
  41b658:	push   eax
  41b659:	jecxz  0x41b6c0
  41b65b:	imul   ebx,DWORD PTR [esi],0xb25c6ee8
  41b661:	push   esi
  41b662:	imul   esp,DWORD PTR [esi+0x4b],0x4c
  41b666:	sub    eax,0x5845395f
  41b66b:	dec    esp
	...
  41b694:	cs cmp eax,0x14056821
  41b69a:	push   esp
  41b69b:	add    BYTE PTR [edx],cl
  41b69d:	lock xor eax,DWORD PTR [edx+eiz*1-0x12]
  41b6a2:	add    ecx,DWORD PTR [esp+esi*8-0x2]
  41b6a6:	and    ch,BYTE PTR [edi+eax*1+0x19]
  41b6aa:	xor    al,BYTE PTR [eax]
  41b6ac:	jmp    0xdeaadbb3
  41b6b1:	add    BYTE PTR [edx],dh
  41b6b3:	imul   esi,DWORD PTR ds:0x4b7422fc,0xee742b0f
  41b6bd:	call   0x6a1e1ce7
  41b6c2:	push   esp
  41b6c3:	inc    esi
  41b6c4:	fwait
  41b6c5:	mov    dl,0x46
  41b6c7:	fs mov dl,0xd8
  41b6ca:	add    DWORD PTR [esi-0x56],eax
  41b6cd:	enter  0x7226,0xa2
  41b6d1:	mov    esi,0xd6757120
  41b6d6:	and    al,0x74
  41b6d8:	dec    ebx
  41b6d9:	jg     0x41b707
  41b6db:	outs   dx,BYTE PTR ds:[esi]
  41b6dc:	lea    eax,[esi-0x3667ffaf]
  41b6e2:	sub    eax,0x1dc07863
  41b6e7:	bound  ecx,QWORD PTR [ebx+0x73]
  41b6ea:	inc    ebp
  41b6eb:	push   ecx
  41b6ec:	xor    BYTE PTR [esi+0x55],0x79
  41b6f0:	cmp    al,cl
  41b6f2:	inc    edx
  41b6f3:	das    
  41b6f4:	(bad)  
  41b6f5:	addr16 in eax,dx
  41b6f7:	add    BYTE PTR cs:[eax],al
	...
  41b71e:	add    BYTE PTR [eax],al
  41b720:	cs jno 0x41b71f
  41b723:	xor    cl,BYTE PTR [ecx+0x672ef4cd]
  41b729:	fs call 0x1f4ac166
  41b72f:	hlt    
  41b730:	jno    0x41b70b
  41b732:	push   ss
  41b733:	cld    
  41b734:	fs dec edx
  41b736:	sub    eax,DWORD PTR [edx+0x7a]
  41b739:	(bad)  [esi+edi*1]
  41b73c:	pop    edi
  41b73d:	and    ecx,DWORD PTR es:[ebx+0x2d]
  41b741:	cmp    DWORD PTR [ecx],edi
  41b743:	and    eax,0x324c3c2a
  41b748:	adc    eax,0x3af1392e
  41b74d:	or     DWORD PTR [edx],ebx
  41b74f:	pop    ds
  41b750:	stc    
  41b751:	push   ds
  41b752:	add    al,0x32
  41b754:	cli    
  41b755:	test   BYTE PTR [esi],0x27
  41b758:	fisttp WORD PTR [eax]
  41b75a:	sub    edi,DWORD PTR [esi]
  41b75c:	(bad)  
  41b75d:	cmp    BYTE PTR [esi],ch
  41b75f:	pop    ds
  41b760:	xlat   BYTE PTR ds:[ebx]
  41b761:	sbb    al,0x4
  41b763:	xor    cl,BYTE PTR [ebx+0x4e]
  41b766:	sbb    dl,BYTE PTR [eax-0x19]
  41b769:	sub    bh,BYTE PTR [ecx-0x24d5571b]
  41b76f:	add    ecx,DWORD PTR [ebp+ecx*2-0x86bd038]
  41b776:	retf   0xb722
  41b779:	or     DWORD PTR [ebx-0x45e265c2],ebp
  41b77f:	and    al,0xa5
  41b781:	sbb    eax,0x429b
	...
  41b7aa:	add    BYTE PTR [eax],al
  41b7ac:	xchg   DWORD PTR [edi-0x65],ecx
  41b7af:	push   ebx
  41b7b0:	dec    ebx
  41b7b1:	push   edx
  41b7b2:	mov    ebp,0x951b682f
  41b7b7:	push   ds
  41b7b8:	ja     0x41b7a3
  41b7ba:	mov    ds:0x86357b3b,eax
  41b7bf:	xor    DWORD PTR [eax+0x1b],ebp
  41b7c2:	out    0x4c,eax
  41b7c4:	ins    BYTE PTR es:[edi],dx
  41b7c5:	aaa    
  41b7c6:	nop
  41b7c7:	and    eax,0x22aa1d68
  41b7cc:	push   0x31
  41b7ce:	add    BYTE PTR [ebx+ecx*4+0x6585631b],cl
  41b7d5:	aaa    
  41b7d6:	je     0x41b828
  41b7d8:	push   0xde97135
  41b7dd:	cmp    ah,BYTE PTR [eax]
  41b7df:	and    BYTE PTR [ecx+ebp*8+0x45],ch
  41b7e3:	xor    eax,0x484fe8ff
  41b7e8:	pop    edx
  41b7e9:	sbb    dh,BYTE PTR [ebp+0x4e]
  41b7ec:	pop    ecx
  41b7ed:	sub    eax,0x394ce971
  41b7f2:	aas    
  41b7f3:	sbb    DWORD PTR [eax],edx
  41b7f5:	jecxz  0x41b816
  41b7f7:	jmp    0xeb5d234
  41b7fc:	cmp    DWORD PTR [ecx+eiz*2],ebp
  41b7ff:	(bad)  
  41b800:	dec    esp
  41b801:	xor    eax,0x39f8e96c
  41b806:	je     0x41b81e
  41b808:	sbb    DWORD PTR [ecx+eax*2],ebp
  41b80b:	sti    
  41b80c:	xor    eax,0xc7448
	...
  41b839:	aaa    
  41b83a:	jno    0x41b831
  41b83c:	imul   esi,DWORD PTR [edi],0x948cc61
  41b842:	popa   
  41b843:	(bad)  [ecx+0x19]
  41b846:	je     0x41b862
  41b848:	cmp    ebp,esi
  41b84a:	arpl   WORD PTR [ebp-0x44bef694],di
  41b850:	popa   
  41b851:	sbb    DWORD PTR [esp+edx*4+0x6e],esi
  41b855:	sbb    DWORD PTR [edx-0x3a],esi
  41b858:	pop    esp
  41b859:	sub    ah,BYTE PTR [ecx-0x4b]
  41b85c:	inc    esp
  41b85d:	inc    esi
  41b85e:	je     0x41b7e8
  41b860:	dec    eax
  41b861:	or     DWORD PTR [eax],eax
  41b863:	jmp    0xe941c1b0
  41b868:	dec    eax
  41b869:	or     DWORD PTR [eax],eax
  41b86b:	test   eax,0x3bdc92
  41b870:	dec    esi
  41b871:	and    bl,cl
  41b873:	adc    DWORD PTR ds:0xe2a9ffdf,edx
  41b879:	repz inc ebp
  41b87b:	out    dx,al
  41b87c:	repz push eax
  41b87e:	xor    edi,DWORD PTR [esi+ecx*4]
  41b881:	aaa    
  41b882:	retf   
  41b883:	adc    ebp,edx
  41b885:	fdivr  st,st(7)
  41b887:	test   eax,0xee4605a2
  41b88c:	jo     0x41b875
  41b88e:	xor    bh,BYTE PTR [esi+ecx*4]
  41b891:	aaa    
  41b892:	retf   
  41b893:	adc    DWORD PTR ds:0xa2a9ffd8,edx
  41b899:	add    eax,0xee46
	...
  41b8c2:	add    BYTE PTR [eax],al
  41b8c4:	jne    0x41b8d0
  41b8c6:	add    BYTE PTR [eax],al
  41b8c8:	(bad)  
  41b8c9:	call   0x666b:0x3f62582f
  41b8d0:	dec    esi
  41b8d1:	loop   0x41b92f
  41b8d3:	jb     0x41b924
  41b8d5:	cmp    DWORD PTR [ecx+0x69],ecx
  41b8d8:	push   ecx
  41b8d9:	fild   QWORD PTR [edx+0x73]
  41b8dc:	inc    ebp
  41b8dd:	repz jae 0x41b93c
  41b8e0:	sub    ebp,ebx
  41b8e2:	jae    0x41b949
  41b8e4:	inc    eax
  41b8e5:	call   0x50942d4a
  41b8ea:	js     0x41b95c
  41b8ec:	push   es
  41b8ed:	jmp    0x41b960
  41b8ef:	adc    BYTE PTR gs:[esi+0x45],dl
  41b8f3:	outs   dx,BYTE PTR ds:[esi]
  41b8f4:	(bad)  
  41b8f5:	lock imul ebp,DWORD PTR [ebx+edi*8+0x4f],0x6b
  41b8fb:	jb     0x41b904
  41b8fd:	fistp  WORD PTR [ebx+0x53]
  41b900:	into   
  41b901:	jmp    0x31:0xf10d6171
  41b908:	repnz or DWORD PTR [eax],eax
  41b90b:	add    bl,al
  41b90d:	or     DWORD PTR [edx+0x0],esp
  41b910:	dec    ebx
  41b911:	xchg   ebp,eax
  41b912:	add    DWORD PTR [edx],esi
  41b914:	dec    ebx
  41b915:	mov    eax,0xc94b3601
  41b91a:	add    DWORD PTR [esi+0x4b],esp
  41b91d:	aad    0x1
  41b91f:	aaa    
  41b920:	dec    ebx
  41b921:	xchg   edx,eax
  41b922:	add    DWORD PTR [ebx+ecx*2],esi
  41b925:	pop    edi
  41b926:	add    DWORD PTR [ebx],ebp
	...
  41b950:	dec    ebx
  41b951:	add    al,0x4
  41b953:	popa   
  41b954:	dec    ebx
  41b955:	dec    esp
  41b956:	add    al,0x37
  41b958:	dec    ebx
  41b959:	or     eax,0x34b5f04
  41b95e:	add    al,0x33
  41b960:	dec    ebx
  41b961:	or     BYTE PTR [ebx+ebp*1],al
  41b964:	dec    ebx
  41b965:	push   ebx
  41b966:	add    al,0x32
  41b968:	dec    ebx
  41b969:	mov    ds:0xa04b3701,al
  41b96e:	add    DWORD PTR [ebx+ecx*2],esi
  41b971:	adc    al,0x4
  41b973:	bound  ecx,QWORD PTR [ebx+0x11]
  41b976:	add    al,0x35
  41b978:	dec    ebx
  41b979:	push   ss
  41b97a:	add    al,0x35
  41b97c:	dec    ebx
  41b97d:	mov    al,0x1
  41b97f:	dec    ebx
  41b980:	repnz adc dh,BYTE PTR [esi]
  41b983:	ins    DWORD PTR es:[edi],dx
  41b984:	fcom   DWORD PTR [esi]
  41b986:	sub    dh,BYTE PTR [esp+ebp*8+0x6]
  41b98a:	sbb    ebp,DWORD PTR [esi-0x6e]
  41b98d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b98e:	sub    BYTE PTR [esp+ebx*4-0x8],dh
  41b992:	add    esp,DWORD PTR [esi-0x41]
  41b995:	ret    0x2ceb
  41b998:	pop    esp
  41b999:	mov    dl,0x56
  41b99b:	ins    DWORD PTR es:[edi],dx
  41b99c:	lods   eax,DWORD PTR ds:[esi]
  41b99d:	mov    esi,0xd5995f3a
  41b9a2:	dec    ebp
  41b9a3:	aas    
  41b9a4:	scas   eax,DWORD PTR es:[edi]
  41b9a5:	shl    DWORD PTR [ebx],cl
  41b9a7:	arpl   WORD PTR [edi+0x6f],bp
  41b9aa:	and    ch,BYTE PTR [ebx+0x76]
  41b9ad:	arpl   WORD PTR [edi],bx
  41b9af:	add    BYTE PTR [eax+0x379009],bl
	...
  41b9d9:	add    BYTE PTR [eax],al
  41b9db:	add    BYTE PTR [eax+0x38],ch
  41b9de:	test   BYTE PTR ds:0x36992e75,dh
  41b9e4:	dec    ebx
  41b9e5:	cmp    BYTE PTR [eax-0x73c797c9],al
  41b9eb:	xor    eax,0xe3792e5d
  41b9f0:	sub    DWORD PTR ds:0x18363b93,ebp
  41b9f6:	jae    0x41b9fb
  41b9f8:	sbb    dh,BYTE PTR [edx]
  41b9fa:	pop    ebx
  41b9fb:	daa    
  41b9fc:	sbb    ch,BYTE PTR [esi]
  41b9fe:	pop    ecx
  41b9ff:	cmp    ch,BYTE PTR [eax]
  41ba01:	pop    ss
  41ba02:	pop    es
  41ba03:	out    0x28,eax
  41ba05:	inc    ebp
  41ba06:	ss daa 
  41ba08:	sub    DWORD PTR [esi],edi
  41ba0a:	cmp    DWORD PTR [eax],esp
  41ba0c:	dec    ebx
  41ba0d:	cmp    BYTE PTR [eax+0x38],dl
  41ba10:	sub    BYTE PTR [eax],bh
  41ba12:	dec    esp
  41ba13:	ss std 
  41ba15:	sub    eax,0x2d29e439
  41ba1a:	inc    ebx
  41ba1b:	push   esi
  41ba1c:	call   0xe879c856
  41ba21:	call   0x2e1ad550
  41ba26:	or     bh,BYTE PTR [eax]
  41ba28:	out    dx,al
  41ba29:	push   ss
  41ba2a:	add    BYTE PTR [edx+edi*8],al
  41ba2d:	xor    ebx,esi
  41ba2f:	es cli 
  41ba31:	sub    eax,0x17a839f9
  41ba36:	(bad)  
  41ba37:	out    0xa8,al
  41ba39:	idiv   BYTE PTR [ebx-0x18e857cc]
  41ba3f:	push   esp
	...
  41ba68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba69:	sbb    eax,0x17a854cc
  41ba6e:	aad    0x26
  41ba70:	cdq    
  41ba71:	jmp    0x3ea1e281
  41ba76:	mov    edx,0xffe99926
  41ba7b:	cwde   
  41ba7c:	mov    ds:0x8cba2309,eax
  41ba81:	push   edx
  41ba82:	arpl   WORD PTR [eax-0x6fa0ced1],sp
  41ba88:	sub    cl,BYTE PTR [ecx]
  41ba8a:	push   ecx
  41ba8b:	sbb    BYTE PTR [eax+ebp*1],0x51
  41ba8f:	test   BYTE PTR [esi],dl
  41ba91:	sbb    esp,DWORD PTR [ebx+0x7b]
  41ba94:	call   0x77df1e7f
  41ba99:	dec    ebx
  41ba9a:	push   esp
  41ba9b:	cdq    
  41ba9c:	dec    eax
  41ba9d:	dec    ebp
  41ba9e:	arpl   WORD PTR [ebp+0x75],di
  41baa1:	and    DWORD PTR [ebx+0x2f],esp
  41baa4:	adc    edi,DWORD PTR [ecx]
  41baa6:	add    BYTE PTR [edx+0x50],bl
  41baa9:	sbb    eax,0x1ba95a63
  41baae:	imul   edi,DWORD PTR ds:0x4b633e47,0xffffffaf
  41bab5:	inc    edi
  41bab6:	pop    edi
  41bab7:	xor    eax,0x464c0968
  41babc:	xor    ch,BYTE PTR [esi+ebp*2]
  41babf:	or     DWORD PTR [ebx],edx
  41bac1:	inc    esp
  41bac2:	je     0x41bacc
  41bac4:	dec    edi
  41bac5:	cmp    cl,BYTE PTR [edi+0x2d]
  41bac8:	push   eax
  41bac9:	sbb    eax,0xc963
	...
  41baf2:	add    BYTE PTR [eax],al
  41baf4:	xor    dh,BYTE PTR [esi]
  41baf6:	jb     0x41baf4
  41baf8:	sub    DWORD PTR ds:0x1d48ba20,ebx
  41bafe:	pop    edi
  41baff:	or     ebp,DWORD PTR [ebx]
  41bb01:	sub    BYTE PTR [eax],al
  41bb03:	ror    DWORD PTR [eax-0x16],0xff
  41bb07:	enter  0x4848,0x4d
  41bb0b:	mov    bh,0x9f
  41bb0d:	cmp    eax,0x5371a852
  41bb12:	push   esp
  41bb13:	jmp    0x9c88f290
  41bb18:	mov    DWORD PTR [edi],esi
  41bb1a:	push   edi
  41bb1b:	add    BYTE PTR [edx],ah
  41bb1d:	cmp    al,0x4e
  41bb1f:	dec    ecx
  41bb20:	mov    bl,0x3b
  41bb22:	inc    ecx
  41bb23:	add    BYTE PTR [ecx-0x56bcbf22],dh
  41bb29:	push   es
  41bb2a:	inc    esi
  41bb2b:	dec    edi
  41bb2c:	mov    al,0x4b
  41bb2e:	inc    ebp
  41bb2f:	inc    edi
  41bb30:	pushf  
  41bb31:	push   es
  41bb32:	add    BYTE PTR [ebp+ecx*8-0xf],ch
  41bb36:	outs   dx,BYTE PTR fs:[esi]
  41bb38:	rol    DWORD PTR [esi],0x6b
  41bb3b:	jb     0x41baf8
  41bb3d:	icebp  
  41bb3e:	outs   dx,BYTE PTR fs:[esi]
  41bb40:	lods   eax,DWORD PTR ds:[esi]
  41bb41:	(bad)  [ecx+0x6c]
  41bb44:	mov    dl,0xd6
  41bb46:	pop    esp
  41bb47:	jae    0x41bb8a
  41bb49:	loope  0x41bbb5
  41bb4b:	jb     0x41bb53
  41bb4d:	push   edx
  41bb4e:	jbe    0x41bbb1
  41bb50:	(bad)  
  41bb51:	fbld   TBYTE PTR [eax+0x0]
  41bb54:	pop    es
  41bb55:	(bad)  
  41bb56:	pusha  
  41bb57:	jb     0x41bb59
	...
  41bb7d:	add    BYTE PTR [eax],al
  41bb7f:	add    BYTE PTR [esp+ebp*8+0x68],bl
  41bb83:	gs ins DWORD PTR es:[edi],dx
  41bb85:	fistp  DWORD PTR [esp+ebp*2+0x57]
  41bb89:	lock jmp DWORD PTR [ebp+0x46]
  41bb8d:	fnstsw WORD PTR [ecx]
  41bb8f:	das    
  41bb90:	jge    0x41bb98
  41bb92:	push   0x39dd5674
  41bb97:	das    
  41bb98:	jge    0x41bba0
  41bb9a:	push   0x6edd4674
  41bb9f:	cmp    bl,BYTE PTR [ebp+0x255bfdc3]
  41bba5:	add    ch,BYTE PTR [ebx+0x67]
  41bba8:	ds lock pop ebx
  41bbab:	inc    ebx
  41bbac:	dec    edx
  41bbad:	xlat   BYTE PTR ds:[ebx]
  41bbae:	push   0x6d
  41bbb0:	inc    edi
  41bbb1:	or     eax,0xd81a435c
  41bbb6:	push   0x6d
  41bbb8:	sbb    esp,ecx
  41bbba:	push   0x425c4b00
  41bbbf:	push   0x63206399
  41bbc4:	jnp    0x41bb82
  41bbc6:	cmp    BYTE PTR [ecx+0x4b],dh
  41bbc9:	jg     0x41bbe9
  41bbcb:	data16 jg 0x41bc31
  41bbce:	and    al,0x72
  41bbd0:	xchg   sp,ax
  41bbd2:	inc    edx
  41bbd3:	push   0x63207b79
  41bbd8:	fwait
  41bbd9:	xchg   esp,eax
  41bbda:	cmp    BYTE PTR [ecx+0x4b],dh
  41bbdd:	imul   ebx,DWORD PTR [ebx],0x1d915771
  41bbe3:	ins    BYTE PTR es:[edi],dx
	...
  41bc0c:	je     0x41bc82
  41bc0e:	sbb    al,0x72
  41bc10:	dec    ebx
  41bc11:	test   BYTE PTR [edi],bh
  41bc13:	jb     0x41bc49
  41bc15:	lea    ebx,[ebx+esi*2]
  41bc18:	cs mov al,0x4d
  41bc1b:	dec    esi
  41bc1c:	and    cl,BYTE PTR [edi+0x1c]
  41bc1f:	jb     0x41bc3d
  41bc21:	push   ebp
  41bc22:	daa    
  41bc23:	add    BYTE PTR [edi],al
  41bc25:	out    dx,eax
  41bc26:	sbb    al,0x6b
  41bc28:	sub    al,0x4c
  41bc2a:	sbb    eax,0x1cfdf700
  41bc2f:	popa   
  41bc30:	and    ch,dh
  41bc32:	es ins BYTE PTR es:[edi],dx
  41bc34:	jmp    FWORD PTR [edi+0x4d0e2b3a]
  41bc3a:	and    BYTE PTR [ebx-0x1c],ah
  41bc3d:	stc    
  41bc3e:	add    ebx,DWORD PTR [eax+eax*1-0x2b]
  41bc42:	inc    eax
  41bc43:	arpl   di,si
  41bc45:	adc    al,0x1d
  41bc47:	outs   dx,BYTE PTR ds:[esi]
  41bc48:	dec    ebx
  41bc49:	hlt    
  41bc4a:	push   ebx
  41bc4b:	jb     0x41bc31
  41bc4d:	adc    DWORD PTR [ebx],ebx
  41bc4f:	ins    BYTE PTR es:[edi],dx
  41bc50:	out    0x9e,al
  41bc52:	add    DWORD PTR [ebx-0x45],eax
  41bc55:	or     DWORD PTR [ecx],esp
  41bc57:	add    BYTE PTR [edi-0x5798cc1b],bl
  41bc5d:	or     ebx,eax
  41bc5f:	dec    eax
  41bc60:	mov    ebx,0x7a03ca32
  41bc65:	adc    eax,0xeea525c8
  41bc6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc6b:	push   edi
  41bc6c:	jnp    0x41bc77
  41bc6e:	mov    edx,0x1c
	...
  41bc97:	add    BYTE PTR [edi+0x6dddba26],dl
  41bc9d:	das    
  41bc9e:	rol    BYTE PTR [ebx],0x9f
  41bca1:	cmp    al,0xc0
  41bca3:	aaa    
  41bca4:	push   0x954fe71c
  41bca9:	xor    bl,BYTE PTR [edx-0x7bcf95e4]
  41bcaf:	jecxz  0x41bc42
  41bcb1:	sbb    DWORD PTR es:[esp+esi*2],0x9
  41bcb6:	aad    0x25
  41bcb8:	push   edi
  41bcb9:	sbb    edi,esp
  41bcbb:	push   edx
  41bcbc:	dec    ebx
  41bcbd:	es out 0x37,eax
  41bcc0:	dec    ebx
  41bcc1:	adc    eax,0x2f4b1ce7
  41bcc6:	out    0x24,eax
  41bcc8:	dec    ebx
  41bcc9:	sbb    al,0xe7
  41bccb:	add    ecx,DWORD PTR [ebx+0x3d]
  41bcce:	and    BYTE PTR cs:[esi],ch
  41bcd1:	sub    ecx,DWORD PTR [eax+0x20]
  41bcd4:	imul   eax,DWORD PTR [ebp+0x56],0x35
  41bcd8:	sbb    eax,0xef234e2d
  41bcdd:	and    eax,0x4e1a0439
  41bce2:	std    
  41bce3:	and    bh,cl
  41bce5:	sub    ecx,DWORD PTR [edi]
  41bce7:	add    al,0x5
  41bce9:	sbb    eax,DWORD PTR [ecx+esi*1]
  41bcec:	repz inc esi
  41bcee:	cmp    edx,DWORD PTR [ebx+ecx*2-0x11]
  41bcf2:	cmp    DWORD PTR [edi],edi
  41bcf4:	or     eax,0xec202909
  41bcf9:	and    al,BYTE PTR [esi+eax*2]
	...
  41bd24:	mov    edi,0x7be90019
  41bd29:	sub    BYTE PTR [esp+eax*1+0x15],dh
  41bd2d:	sub    al,0x5f
  41bd2f:	fisttp QWORD PTR [eax+0x4d]
  41bd32:	pop    edi
  41bd33:	ficomp DWORD PTR [ecx+edi*1+0x5f]
  41bd37:	ficomp DWORD PTR [ebx+0x16]
  41bd3a:	ins    DWORD PTR es:[edi],dx
  41bd3b:	fld    TBYTE PTR [ecx+ecx*1+0x4c]
  41bd3f:	enter  0x155b,0x3f
  41bd43:	lds    ebp,FWORD PTR [ebx+ebx*1]
  41bd46:	arpl   WORD PTR [edx-0x37b3f6c5],di
  41bd4c:	cmp    edx,DWORD PTR ds:0x1b259a53
  41bd52:	add    BYTE PTR [ebp-0x468be5d7],ch
  41bd58:	aas    
  41bd59:	sbb    esi,DWORD PTR [ecx+ebp*8+0x7b]
  41bd5d:	cs data16 jge 0x41bd78
  41bd61:	inc    eax
  41bd62:	jb     0x41bce8
  41bd64:	adc    al,0x47
  41bd66:	ins    BYTE PTR es:[edi],dx
  41bd67:	mov    BYTE PTR [ebx+0x31],bh
  41bd6a:	push   eax
  41bd6b:	test   BYTE PTR [ecx+0x32],ch
  41bd6e:	pop    esp
  41bd6f:	sub    ebp,DWORD PTR [ebx+0x40]
  41bd72:	jp     0x41bdb8
  41bd74:	or     eax,0xfa357015
  41bd79:	sub    esi,DWORD PTR [ebp+edx*2+0x30]
  41bd7d:	das    
  41bd7e:	cmp    al,BYTE PTR gs:[edi+0x3d]
  41bd82:	inc    edx
  41bd83:	dec    ebp
  41bd84:	sub    BYTE PTR [ebx],ah
  41bd86:	arpl   WORD PTR [edi],bp
	...
  41bdb0:	inc    ebx
  41bdb1:	sbb    DWORD PTR [eax],eax
  41bdb3:	jmp    FWORD PTR [esi]
  41bdb5:	sbb    DWORD PTR [ecx+ebp*8+0x6],ebp
  41bdb9:	xor    eax,0xed83d250
  41bdbe:	dec    ebx
  41bdbf:	add    BYTE PTR ds:0x371a5c32,bh
  41bdc5:	sub    al,0x6c
  41bdc7:	add    BYTE PTR [esi],dh
  41bdc9:	cmp    DWORD PTR [ebx+0x70],ebp
  41bdcc:	dec    edi
  41bdcd:	call   FWORD PTR [ebx+0x63]
  41bdd0:	inc    ebp
  41bdd1:	(bad)  
  41bdd2:	push   0xffe73461
  41bdd7:	inc    esi
  41bdd8:	adc    eax,0x32505445
  41bddd:	dec    edx
  41bdde:	imul   ebp,DWORD PTR [esi+0x4],0xffffffe8
  41bde2:	pop    esi
  41bde3:	je     0x41bdf0
  41bde5:	(bad)  
  41bde6:	ins    DWORD PTR es:[edi],dx
  41bde7:	jae    0x41be1d
  41bde9:	loope  0x41be62
  41bdeb:	je     0x41bddf
  41bded:	cdq    
  41bdee:	inc    ecx
  41bdef:	sub    eax,0x5036ac
  41bdf4:	mov    cl,0x3
  41bdf6:	je     0x41be5d
  41bdf8:	sar    DWORD PTR [esi+eiz*2+0x5c0abb6e],1
  41bdff:	xor    ebp,DWORD PTR [esi-0x6dabbc41]
  41be05:	or     bl,BYTE PTR [ebx+edx*2-0x45]
  41be09:	(bad)  
  41be0a:	pusha  
  41be0b:	inc    esp
  41be0c:	iret   
  41be0d:	fldenv [edi+eiz*2-0x3c]
  41be11:	out    0x71,eax
	...
  41be3b:	add    cl,dl
  41be3d:	fld    QWORD PTR [ebp+0x54]
  41be40:	ins    DWORD PTR es:[edi],dx
  41be41:	inc    esp
  41be42:	push   edx
  41be43:	inc    ebp
  41be44:	inc    si
  41be46:	ins    BYTE PTR es:[edi],dx
  41be47:	popa   
  41be48:	add    esi,edx
  41be4a:	pusha  
  41be4b:	jae    0x41beb3
  41be4d:	cmp    DWORD PTR [ebp+0x70],esi
  41be50:	jmp    eax
  41be52:	bound  esp,QWORD PTR fs:[esi-0x12]
  41be56:	inc    ebp
  41be57:	cmp    DWORD PTR [edx+0x7a4330ae],eax
  41be5d:	mov    dl,0x2a
  41be5f:	inc    esi
  41be60:	mov    WORD PTR [eax+0x32],cs
  41be63:	sub    eax,0x412e9a83
  41be68:	dec    ebx
  41be69:	lds    eax,FWORD PTR [ecx+esi*1+0x8]
  41be6d:	mov    ecx,0x60132fd8
  41be72:	icebp  
  41be73:	xor    DWORD PTR [ecx-0x7dcbc09e],ecx
  41be79:	out    dx,al
  41be7a:	inc    ebp
  41be7b:	jnp    0x41be14
  41be7d:	popa   
  41be7e:	xlat   BYTE PTR ds:[ebx]
  41be7f:	xor    DWORD PTR [edi-0x4d8ab800],ecx
  41be85:	into   
  41be86:	div    BYTE PTR [ecx]
  41be88:	dec    ebx
  41be89:	ins    DWORD PTR es:[edi],dx
  41be8a:	and    al,0x71
  41be8c:	xchg   edx,eax
  41be8d:	dec    bp
  41be8f:	push   eax
  41be90:	dec    ebx
  41be91:	fs aaa 
  41be93:	arpl   WORD PTR [edi-0x7d],di
  41be96:	and    al,0x72
  41be98:	push   0xffffffc6
  41be9a:	and    al,BYTE PTR [eax]
  41be9c:	and    eax,0x701f58
	...
  41bec5:	add    BYTE PTR [eax],al
  41bec7:	add    BYTE PTR [ebx-0x4a],cl
  41beca:	xor    esp,DWORD PTR [ebx+ebx*2-0x50]
  41bece:	dec    ebp
  41becf:	inc    ebx
  41bed0:	jns    0x41bf37
  41bed2:	push   esi
  41bed3:	push   edx
  41bed4:	jge    0x41bf35
  41bed6:	(bad)  
  41bed8:	pop    esp
  41bed9:	xchg   ecx,eax
  41beda:	ss jno 0x41bf19
  41bedd:	(bad)  
  41bede:	xor    esp,DWORD PTR [ebx+ebp*2+0x5d]
  41bee2:	hlt    
  41bee3:	cmp    DWORD PTR [ecx],ebp
  41bee5:	pop    edx
  41bee6:	add    DWORD PTR [ebx+0x38],esi
  41bee9:	dec    ebp
  41beea:	outs   dx,BYTE PTR ss:[esi]
  41beec:	sub    cl,BYTE PTR [ebp+0x1f]
  41beef:	cmp    bl,BYTE PTR [eax]
  41bef1:	cli    
  41bef2:	add    esp,DWORD PTR [esi+0x1e]
  41bef5:	fcom   QWORD PTR [edi]
  41bef7:	and    BYTE PTR [edx],ch
  41bef9:	dec    esp
  41befa:	and    BYTE PTR [edx-0x12],dh
  41befd:	loop   0x41bf33
  41beff:	cmp    bh,al
  41bf01:	cdq    
  41bf02:	add    DWORD PTR [esi],ebp
  41bf04:	dec    ebx
  41bf05:	hlt    
  41bf06:	ds push edx
  41bf08:	dec    BYTE PTR [eax]
  41bf0a:	cmp    dl,BYTE PTR [esi-0x3]
  41bf0d:	in     eax,dx
  41bf0e:	out    0x41,al
  41bf10:	idiv   DWORD PTR [eax]
  41bf12:	(bad)  
  41bf13:	cmp    esi,esp
  41bf15:	adc    eax,0x38f741e7
  41bf1a:	xor    eax,0xfa09be1b
  41bf1f:	sbb    al,0xb7
  41bf21:	es cli 
  41bf23:	fnstcw WORD PTR [esi+ebp*1+0x4c9a03fb]
  41bf2a:	lods   eax,DWORD PTR ds:[esi]
  41bf2b:	dec    edi
	...
  41bf54:	jle    0x41bfa0
  41bf56:	mov    ecx,0xc6377f40
  41bf5b:	and    eax,0x4fa4eea6
  41bf60:	jnp    0x41bf4b
  41bf62:	stc    
  41bf63:	fnstcw WORD PTR [edi]
  41bf65:	cmp    eax,0x3279269a
  41bf6a:	mov    bh,0x2f
  41bf6c:	jp     0x41bf77
  41bf6e:	call   0x7944:0xbe35853a
  41bf75:	inc    esi
  41bf76:	mov    ebx,0x86276e55
  41bf7b:	fmul   DWORD PTR [esi+0x1be3b735]
  41bf81:	jmp    0x41bf40
  41bf83:	inc    edi
  41bf84:	or     eax,0x28569735
  41bf89:	pop    ss
  41bf8a:	jge    0x41bfac
  41bf8c:	cmp    DWORD PTR [eax],ebx
  41bf8e:	out    0x41,eax
  41bf90:	pop    ss
  41bf91:	cmp    DWORD PTR [edi],eax
  41bf93:	inc    ebp
  41bf94:	ss push ss
  41bf96:	dec    ebp
  41bf97:	xor    BYTE PTR [ebx+0x43],cl
  41bf9a:	cmp    edx,DWORD PTR [ebx+ebp*2+0x43]
  41bf9e:	inc    eax
  41bf9f:	sbb    BYTE PTR [eax],ch
  41bfa1:	out    0x4a,al
  41bfa3:	add    al,0x1b
  41bfa5:	sub    bh,BYTE PTR [edx]
  41bfa7:	xor    eax,0x3b002bf6
  41bfac:	sub    ecx,DWORD PTR [ecx]
  41bfae:	push   ecx
  41bfaf:	inc    esp
  41bfb0:	xor    eax,0x211b6313
  41bfb5:	cmp    al,0x6b
  41bfb7:	add    al,0x0
	...
  41bfdd:	add    BYTE PTR [eax],al
  41bfdf:	add    BYTE PTR [edi+0x38],al
  41bfe2:	jno    0x41bff0
  41bfe4:	sbb    eax,0x11e94444
  41bfe9:	sub    esp,DWORD PTR [edi-0x3]
  41bfec:	popa   
  41bfed:	cmp    al,0x6c
  41bfef:	and    eax,0xa631760
  41bff4:	jnp    0x41c024
  41bff6:	jb     0x41bfe8
  41bff8:	dec    eax
  41bff9:	cmp    DWORD PTR [ebp-0x25],ebp
  41bffc:	je     0x41c049
  41bffe:	jae    0x41bfcc
  41c000:	data16 sub BYTE PTR [edx-0x17],dh
  41c004:	jg     0x41c02e
  41c006:	jb     0x41bfdf
  41c008:	sub    eax,0x38c05417
  41c00d:	sub    BYTE PTR [eax],al
  41c00f:	(bad)  [eax+0x9]
  41c012:	add    BYTE PTR [ebp-0x3d002375],bh
  41c018:	dec    ebp
  41c019:	mov    WORD PTR [ebx+0x68],?
  41c01c:	mov    cl,BYTE PTR [ebp+0x2d]
  41c01f:	push   edi
  41c020:	adc    BYTE PTR [esi],al
  41c022:	mov    al,ds:0x66b9b411
  41c027:	pushf  
  41c028:	or     DWORD PTR [ecx],0xedb5d732
  41c02e:	xor    eax,eax
  41c030:	mov    ds:0xb8e934d8,al
  41c035:	adc    DWORD PTR [esi],eax
  41c037:	loope  0x41bfc8
  41c039:	add    eax,0x4a5ebff
  41c03e:	add    edx,ebp
  41c040:	dec    eax
  41c041:	cmp    ch,BYTE PTR [ebp+0x4f]
	...
  41c06c:	pop    ebx
  41c06d:	push   ss
  41c06e:	pop    edi
  41c06f:	pop    ebx
  41c070:	sub    al,0x3d
  41c072:	dec    esp
  41c073:	add    BYTE PTR [ebx],bl
  41c075:	call   FWORD PTR [ebx+esi*2+0x24]
  41c079:	cmp    DWORD PTR [eax+0x5c],edx
  41c07c:	push   ecx
  41c07d:	add    BYTE PTR [ebp+eiz*2+0x42],dh
  41c081:	aam    0x5c
  41c083:	outs   dx,BYTE PTR ds:[esi]
  41c084:	push   ebx
  41c085:	jmp    0x736a:0xdf727260
  41c08c:	ss add eax,0xd3477351
  41c092:	dec    DWORD PTR [edi+0x53]
  41c095:	aam    0x6e
  41c097:	add    BYTE PTR [edx+0x0],ah
  41c09a:	jb     0x41c110
  41c09c:	and    dh,BYTE PTR ds:0xeb2d6d61
  41c0a2:	pusha  
  41c0a3:	and    dh,dh
  41c0a5:	push   DWORD PTR [ecx+0x0]
  41c0a8:	fiadd  WORD PTR [ebp+0x75]
  41c0ab:	bound  eax,QWORD PTR [edi]
  41c0ad:	aad    0x63
  41c0af:	jne    0x41c0b2
  41c0b1:	(bad)  
  41c0b2:	jmp    FWORD PTR ds:0x6b5eec16
  41c0b8:	bnd jmp 0x41c129
  41c0bb:	gs mov al,0xc0
  41c0be:	pusha  
  41c0bf:	outs   dx,DWORD PTR ds:[esi]
  41c0c0:	lods   al,BYTE PTR ds:[esi]
  41c0c1:	call   0xa334282a
  41c0c6:	jo     0x41c12d
  41c0c8:	mov    dh,0xea
  41c0ca:	outs   dx,BYTE PTR fs:[esi]
  41c0cc:	lds    esp,FWORD PTR [esi+0x616b]
	...
  41c0f6:	add    BYTE PTR [eax],al
  41c0f8:	dec    edi
  41c0f9:	sti    
  41c0fa:	cmp    BYTE PTR [edx],ah
  41c0fc:	mov    dl,0xa4
  41c0fe:	std    
  41c0ff:	jne    0x41c0d4
  41c101:	bnd jo 0x41c169
  41c104:	jmp    DWORD PTR [ebp+edi*8+0x73e82d52]
  41c10b:	ja     0x41c120
  41c10d:	xlat   BYTE PTR ds:[ebx]
  41c10e:	pusha  
  41c10f:	pop    esp
  41c110:	popa   
  41c111:	cld    
  41c112:	push   0x50424b6f
  41c117:	pop    edi
  41c118:	pop    ss
  41c119:	dec    eax
  41c11a:	and    ebp,DWORD PTR [ebx+0x27]
  41c11d:	add    BYTE PTR [edi],ch
  41c11f:	push   esp
  41c120:	pop    ss
  41c121:	jmp    0xdf30126d
  41c126:	xor    BYTE PTR [edi-0x24],ah
  41c129:	fnstenv [eax]
  41c12b:	add    BYTE PTR [ebx],dl
  41c12d:	repz xor BYTE PTR [ebp+ecx*1+0x11],dh
  41c132:	pop    ss
  41c133:	arpl   WORD PTR [ebx-0x23],cx
  41c136:	xor    BYTE PTR [ebx-0x27],ah
  41c139:	stc    
  41c13a:	and    ch,BYTE PTR [ebx-0x52]
  41c13d:	mov    al,0x51
  41c13f:	pop    edi
  41c140:	mov    eax,0xb96d2e9f
  41c145:	or     al,0x4
  41c147:	push   eax
  41c148:	pushf  
  41c149:	sahf   
  41c14a:	sub    eax,0x1fb59e4e
  41c14f:	arpl   WORD PTR [ecx-0x669cb250],bx
  41c155:	lds    ebx,FWORD PTR [esi+ebp*2]
  41c158:	stos   BYTE PTR es:[edi],al
  41c159:	pop    esp
  41c15a:	dec    ebp
  41c15b:	ja     0x41c15d
	...
  41c181:	add    BYTE PTR [eax],al
  41c183:	add    BYTE PTR [ebx-0x33],bh
  41c186:	add    DWORD PTR [esi+0x7b],ecx
  41c189:	pusha  
  41c18a:	cmp    edx,DWORD PTR [ebx+ebx*4+0x2]
  41c18e:	sub    al,0x6b
  41c190:	pop    edi
  41c191:	mov    al,0x45
  41c193:	dec    esi
  41c194:	je     0x41c212
  41c196:	and    BYTE PTR [eax+0x6a],dh
  41c199:	test   dl,bl
  41c19b:	sub    BYTE PTR [ebx+0x5f],cl
  41c19e:	push   ss
  41c19f:	push   di
  41c1a1:	jae    0x41c1c7
  41c1a3:	jb     0x41c1d3
  41c1a5:	fs inc edx
  41c1a7:	ins    DWORD PTR es:[edi],dx
  41c1a8:	and    eax,0x8632082
  41c1ad:	sbb    eax,0x1b182031
  41c1b2:	sbb    esi,DWORD PTR [esp+ebx*1+0x9]
  41c1b6:	dec    eax
  41c1b7:	xor    ch,BYTE PTR [eax]
  41c1b9:	or     DWORD PTR ds:0x4ae8fb50,esp
  41c1bf:	and    DWORD PTR [edx],ebx
  41c1c1:	adc    eax,0x15241640
  41c1c6:	push   eax
  41c1c7:	pop    ss
  41c1c8:	in     eax,dx
  41c1c9:	call   0x133ae307
  41c1ce:	dec    esp
  41c1cf:	xor    cl,BYTE PTR [ebx+0x43]
  41c1d2:	adc    edx,DWORD PTR [ebx+ebp*1+0x25]
  41c1d6:	or     al,0x33
  41c1d8:	xlat   BYTE PTR ds:[ebx]
  41c1d9:	das    
  41c1da:	or     eax,0x62fdf25
  41c1df:	push   ss
  41c1e0:	sub    edx,DWORD PTR [edx+ebx*1]
  41c1e3:	and    DWORD PTR [ecx+0x502d09],edi
	...
  41c20d:	add    BYTE PTR [eax],al
  41c20f:	add    BYTE PTR [ebx-0x45defd17],bl
  41c215:	sbb    eax,0x1d8c1600
  41c21a:	add    BYTE PTR [edi],dl
  41c21c:	mov    ch,0xe9
  41c21e:	(bad)  
  41c21f:	and    al,0x9a
  41c221:	sbb    al,0xd6
  41c223:	push   ss
  41c224:	cdq    
  41c225:	sub    eax,0x39773de7
  41c22a:	pop    es
  41c22b:	and    BYTE PTR [eax+0x1c],ch
  41c22e:	mov    ebx,0xb32a6d1c
  41c233:	sbb    al,0x66
  41c235:	daa    
  41c236:	pop    es
  41c237:	xor    al,0x5e
  41c239:	sbb    esi,DWORD PTR [ebx-0x48c272fd]
  41c23f:	jecxz  0x41c2a9
  41c241:	cs call 0x642f:0x88276c2f
  41c249:	sub    BYTE PTR [ebp-0x1d],bh
  41c24c:	sub    ebp,DWORD PTR [edx]
  41c24e:	jnp    0x41c274
  41c250:	das    
  41c251:	sub    BYTE PTR [esi+0x3d0d03],al
  41c257:	cdq    
  41c258:	test   al,0x28
  41c25a:	jb     0x41c2da
  41c25c:	inc    esi
  41c25d:	xor    BYTE PTR [esp+ecx*2+0x5a],ch
  41c261:	or     DWORD PTR [esi+0x35],eax
  41c264:	(bad)  
  41c265:	cmp    DWORD PTR [eax+0x4c],ebp
  41c268:	xor    esp,DWORD PTR ds:0x193b4700
  41c26e:	jno    0x41c2c1
  41c270:	pop    esp
  41c271:	and    eax,0xf6c
	...
  41c29a:	add    BYTE PTR [eax],al
  41c29c:	push   ebp
  41c29d:	sbb    ah,BYTE PTR [edi-0x17]
  41c2a0:	sbb    esp,DWORD PTR [esi]
  41c2a2:	xor    ax,0x3836
  41c2a6:	jb     0x41c2b4
  41c2a8:	adc    eax,DWORD PTR [edi+edi*1+0x3a]
  41c2ac:	jl     0x41c2e7
  41c2ae:	ins    DWORD PTR es:[edi],dx
  41c2af:	bndstx ds:0x509f3546,(bad)
  41c2b6:	outs   dx,BYTE PTR ds:[esi]
  41c2b7:	orps   xmm6,XMMWORD PTR ds:0x1c7b0451
  41c2be:	jo     0x41c2a9
  41c2c0:	ins    BYTE PTR es:[edi],dx
  41c2c1:	cmp    BYTE PTR [eax+ecx*1-0x75],dh
  41c2c5:	xor    BYTE PTR [edx-0x17],dh
  41c2c8:	test   BYTE PTR [edi+0x54],cl
  41c2cb:	mov    ecx,0xc6662751
  41c2d0:	dec    eax
  41c2d1:	cmp    ah,BYTE PTR [ebx-0x25]
  41c2d4:	ss sub al,0x72
  41c2d7:	mov    ch,0x61
  41c2d9:	sbb    dh,BYTE PTR [edi+ecx*1+0x27]
  41c2dd:	and    al,0x6c
  41c2df:	jmp    0xb4b9ef1a
  41c2e4:	sbb    ecx,DWORD PTR [edi+0x67]
  41c2e7:	xchg   ebp,eax
  41c2e8:	cmp    eax,0x18956609
  41c2ed:	sbb    ah,BYTE PTR [edi-0x63]
  41c2f0:	sub    eax,0x617f66e7
  41c2f5:	or     DWORD PTR [esi+0x0],eax
  41c2f8:	rcr    eax,cl
  41c2fa:	jae    0x41c34f
  41c2fc:	ds std 
  41c2fe:	ins    DWORD PTR es:[edi],dx
  41c2ff:	add    BYTE PTR gs:[eax],al
	...
  41c326:	add    BYTE PTR [eax],al
  41c328:	or     BYTE PTR [ecx+0x72],0x6f
  41c32c:	sbb    eax,0xb27260d9
  41c331:	aad    0x53
  41c333:	push   eax
  41c334:	data16 hlt 
  41c336:	outs   dx,BYTE PTR ds:[esi]
  41c337:	je     0x41c37d
  41c339:	jmp    0xe077c39f
  41c33e:	pop    esp
  41c33f:	jo     0x41c357
  41c341:	clc    
  41c342:	dec    esi
  41c343:	je     0x41c384
  41c345:	jmp    0x4a9832ae
  41c34a:	push   0x61002572
  41c34f:	push   eax
  41c350:	ss call 0x4bbac3c4
  41c356:	inc    eax
  41c357:	add    BYTE PTR [ecx+0x4f003fd7],ah
  41c35d:	xlat   BYTE PTR ds:[ebx]
  41c35e:	aas    
  41c35f:	add    BYTE PTR [ebp-0x2d],ah
  41c362:	aas    
  41c363:	add    ch,bl
  41c365:	fistp  QWORD PTR [edi]
  41c367:	add    BYTE PTR [ebx],ah
  41c369:	cmp    eax,DWORD PTR [eax+0x0]
  41c36c:	aad    0x46
  41c36e:	inc    eax
  41c36f:	add    BYTE PTR [esi+0x47],bl
  41c372:	inc    eax
  41c373:	add    BYTE PTR [esp+eax*2+0x40],dl
  41c377:	add    bh,dl
  41c379:	inc    edx
  41c37a:	inc    eax
  41c37b:	add    dl,bh
  41c37d:	inc    ebx
  41c37e:	inc    eax
  41c37f:	add    BYTE PTR [ebp-0x7dffbfbf],ah
  41c385:	dec    edi
  41c386:	inc    eax
  41c387:	add    BYTE PTR [eax+0x3fea],dh
	...
  41c3b1:	add    BYTE PTR [eax],al
  41c3b3:	add    BYTE PTR [ebx-0x18],cl
  41c3b6:	aas    
  41c3b7:	add    BYTE PTR [esi-0x17],bh
  41c3ba:	aas    
  41c3bb:	add    BYTE PTR [ebp-0x17],al
  41c3be:	aas    
  41c3bf:	add    BYTE PTR [ebx-0x77],cl
  41c3c2:	sbb    eax,0x1e954b40
  41c3c7:	inc    eax
  41c3c8:	dec    ebx
  41c3c9:	nop
  41c3ca:	sbb    al,0x40
  41c3cc:	dec    ebx
  41c3cd:	rcr    DWORD PTR [eax+eax*2],0x4b
  41c3d1:	xor    edx,DWORD PTR [edi]
  41c3d3:	inc    eax
  41c3d4:	dec    ebx
  41c3d5:	mov    edx,DWORD PTR [esi]
  41c3d7:	inc    eax
  41c3d8:	dec    ebx
  41c3d9:	push   ss
  41c3da:	xor    DWORD PTR [eax+0x4b],eax
  41c3dd:	adc    dl,BYTE PTR [eax+eax*2]
  41c3e0:	dec    ebx
  41c3e1:	in     al,dx
  41c3e2:	adc    al,BYTE PTR [eax+0x4b]
  41c3e5:	jmp    0x41c3fc
  41c3e7:	inc    eax
  41c3e8:	dec    ebx
  41c3e9:	xlat   BYTE PTR ds:[ebx]
  41c3ea:	pop    ss
  41c3eb:	inc    eax
  41c3ec:	dec    ebx
  41c3ed:	test   al,0x19
  41c3ef:	inc    eax
  41c3f0:	dec    ebx
  41c3f1:	inc    ecx
  41c3f2:	sbb    al,0x40
  41c3f4:	dec    ebx
  41c3f5:	imul   ebx,DWORD PTR [eax+eax*2],0x401d0c4b
  41c3fc:	dec    ebx
  41c3fd:	or     eax,0xeb4b401d
  41c402:	mov    DWORD PTR [eax+0x4b],eax
  41c405:	fisttp WORD PTR [edx-0x7438b4c0]
  41c40b:	inc    eax
  41c40c:	dec    ebx
  41c40d:	push   0x7a
  41c40f:	inc    eax
  41c410:	dec    ebx
  41c411:	add    DWORD PTR [ecx+0x40],edi
  41c414:	dec    ebx
  41c415:	mov    edi,0x4079
	...
  41c43e:	add    BYTE PTR [eax],al
  41c440:	dec    ebx
  41c441:	mov    ?,WORD PTR [eax+eax*2+0x4b]
  41c445:	or     eax,0x8c4b407b
  41c44a:	jnp    0x41c48c
  41c44c:	dec    ebx
  41c44d:	clc    
  41c44e:	jge    0x41c490
  41c450:	dec    ebx
  41c451:	jmp    0x407e:0x684b407d
  41c458:	dec    ebx
  41c459:	adc    bh,BYTE PTR [ebp+0x40]
  41c45c:	dec    ebx
  41c45d:	aad    0x7c
  41c45f:	inc    eax
  41c460:	dec    ebx
  41c461:	or     esp,ebx
  41c463:	mov    ecx,DWORD PTR [bx+di]
  41c466:	sub    ebp,DWORD PTR [ebp-0x75]
  41c469:	or     DWORD PTR [ebp*2+0x5f5f090b],edx
  41c470:	or     ecx,DWORD PTR [ecx]
  41c472:	inc    eax
  41c473:	pop    edi
  41c474:	or     ecx,DWORD PTR [ecx]
  41c476:	adc    DWORD PTR [edi+0xb],ebx
  41c479:	or     DWORD PTR [edi+ebx*2+0xb],edi
  41c47d:	or     DWORD PTR [ebp+0x60],eax
  41c480:	or     ecx,DWORD PTR [ecx]
  41c482:	mov    esi,0xef090b5f
  41c487:	pusha  
  41c488:	or     ecx,DWORD PTR [ecx]
  41c48a:	inc    eax
  41c48b:	popa   
  41c48c:	or     ecx,DWORD PTR [ecx]
  41c48e:	and    eax,0x97090b62
  41c493:	popa   
  41c494:	or     ecx,DWORD PTR [ecx]
  41c496:	xchg   ecx,eax
  41c497:	ret    
  41c498:	or     ecx,DWORD PTR [ecx]
  41c49a:	or     al,ch
  41c49c:	or     ecx,DWORD PTR [ecx]
  41c49e:	inc    esp
  41c49f:	lds    ecx,FWORD PTR [ebx]
  41c4a1:	or     esp,eax
  41c4a3:	les    eax,FWORD PTR [eax]
	...
  41c4c9:	add    BYTE PTR [eax],al
  41c4cb:	add    BYTE PTR [ebx],cl
  41c4cd:	or     DWORD PTR [ebx],esp
  41c4cf:	(bad)  
  41c4d0:	or     ecx,DWORD PTR [ecx]
  41c4d2:	dec    ecx
  41c4d3:	(bad)  
  41c4d4:	mov    ecx,DWORD PTR [ecx]
  41c4d6:	cli    
  41c4d7:	(bad)  
  41c4d8:	mov    ecx,DWORD PTR [ecx]
  41c4da:	aad    0xc8
  41c4dc:	mov    ecx,DWORD PTR [ecx]
  41c4de:	dec    edi
  41c4df:	enter  0x98b,0x1c
  41c4e3:	int    0x8b
  41c4e5:	or     DWORD PTR [ecx-0x34],eax
  41c4e8:	mov    ecx,DWORD PTR [ecx]
  41c4ea:	sti    
  41c4eb:	ror    BYTE PTR [ebx-0x742f20f7],1
  41c4f1:	or     DWORD PTR [edi-0x4df6744c],esi
  41c4f7:	mov    dh,0x8b
  41c4f9:	or     DWORD PTR [edi-0x48],ebx
  41c4fc:	mov    ecx,DWORD PTR [ecx]
  41c4fe:	dec    eax
  41c4ff:	mov    eax,0x9c00098b
  41c504:	mov    al,ds:0xa04f0049
  41c509:	dec    ecx
  41c50a:	add    BYTE PTR ds:0x72004996,al
  41c510:	(bad)
  41c514:	push   es
  41c515:	dec    edx
  41c516:	add    BYTE PTR [esi-0x2],ah
  41c519:	dec    ecx
  41c51a:	add    cl,ch
  41c51c:	dec    eax
  41c51d:	or     DWORD PTR [eax],eax
  41c51f:	jmp    0xe941ce6c
  41c524:	dec    eax
  41c525:	or     DWORD PTR [eax],eax
  41c527:	jmp    0xe941ce74
  41c52c:	dec    eax
  41c52d:	or     DWORD PTR [eax],eax
  41c52f:	sub    al,BYTE PTR [eax]
	...
  41c555:	add    BYTE PTR [eax],al
  41c557:	add    BYTE PTR [ebx+0x2c],bl
  41c55a:	arpl   WORD PTR [edi+0x63],ax
  41c55d:	jmp    0x21980da9
  41c562:	add    BYTE PTR [edx],bl
  41c564:	xor    edx,esp
  41c566:	push   ebx
  41c567:	adc    al,0x36
  41c569:	loopne 0x41c5b1
  41c56b:	and    al,0x1f
  41c56d:	inc    esi
  41c56e:	push   edx
  41c56f:	adc    eax,0xe949456c
  41c574:	ins    DWORD PTR es:[edi],dx
  41c575:	sub    BYTE PTR [esi],ch
  41c577:	add    al,0x2f
  41c579:	sub    BYTE PTR [eax],al
  41c57b:	int3   
  41c57c:	sbb    dl,bl
  41c57e:	push   edi
  41c57f:	jmp    0xcb4dcd8
  41c584:	dec    edi
  41c585:	es addr16 add eax,0xfd5f2a39
  41c58c:	dec    eax
  41c58d:	or     al,0x7
  41c58f:	fmul   QWORD PTR [esi+0x0]
  41c592:	or     dh,al
  41c594:	sub    dl,dl
  41c596:	ins    BYTE PTR es:[edi],dx
  41c597:	aam    0x39
  41c599:	jmp    0x282aa8a8
  41c59e:	arpl   WORD PTR [ebp+0x230ae8],di
  41c5a4:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5a6:	sbb    eax,0x64fef80d
  41c5ab:	push   dx
  41c5ad:	add    BYTE PTR [eax],ah
  41c5af:	gs call 0x1fff:0x2746ede
  41c5b7:	and    BYTE PTR [edi],al
  41c5b9:	mov    bh,0x1d
  41c5bb:	or     DWORD PTR [eax],eax
	...
  41c5e1:	add    BYTE PTR [eax],al
  41c5e3:	add    BYTE PTR [edx-0x29909b59],dl
  41c5e9:	fcomp  DWORD PTR [edi]
  41c5eb:	or     DWORD PTR [edx-0x448e8f28],eax
  41c5f1:	add    cl,BYTE PTR [edx]
  41c5f3:	and    dh,dl
  41c5f5:	jmp    0x3022:0xa7ab206b
  41c5fc:	inc    edx
  41c5fd:	or     eax,0xac402020
  41c602:	jo     0x41c626
  41c604:	push   edx
  41c605:	lods   eax,DWORD PTR ds:[esi]
  41c606:	sbb    eax,0x4f0d5220
  41c60b:	push   0x456bd907
  41c610:	or     ch,ah
  41c612:	pop    esi
  41c613:	jne    0x41c63b
  41c615:	in     al,dx
  41c616:	cmp    al,0x0
  41c618:	and    ebp,esp
  41c61a:	pusha  
  41c61b:	ins    BYTE PTR es:[edi],dx
  41c61c:	ds mov esi,0xd9462e2f
  41c622:	imul   eax,DWORD PTR [eax],0x57
  41c625:	cmc    
  41c626:	outs   dx,DWORD PTR ds:[esi]
  41c627:	ins    BYTE PTR es:[edi],dx
  41c628:	cmp    eax,0x1c7260fd
  41c62d:	in     al,dx
  41c62e:	ja     0x41c695
  41c630:	and    bl,dh
  41c632:	sub    BYTE PTR [ecx],dh
  41c634:	bsf    ebp,DWORD PTR [edx]
  41c637:	xor    edx,ebx
  41c639:	push   es
  41c63a:	add    BYTE PTR [eax],al
  41c63c:	and    al,BYTE PTR [edi]
  41c63e:	dec    edi
  41c63f:	gs fninit 
  41c642:	outs   dx,DWORD PTR ds:[esi]
  41c643:	gs dec ebx
  41c645:	scas   al,BYTE PTR es:[edi]
  41c646:	adc    al,0x6d
	...
  41c670:	ins    DWORD PTR es:[edi],dx
  41c671:	rcl    DWORD PTR ds:0x2a4e9b63,0x76
  41c678:	(bad)  
  41c679:	les    esp,FWORD PTR [esi]
  41c67b:	outs   dx,BYTE PTR gs:[esi]
  41c67d:	mov    al,ds:0xbf776334
  41c682:	and    edx,DWORD PTR [eax+0x59]
  41c685:	jns    0x41c69e
  41c687:	addr16 pop edi
  41c689:	lea    ebp,[eax]
  41c68b:	arpl   WORD PTR [ebx+0x4f],cx
  41c68e:	es inc ecx
  41c690:	xor    eax,DWORD PTR [ecx+0x5a2e652f]
  41c696:	xor    BYTE PTR [edx+eiz*1-0x76],dh
  41c69a:	sbb    dl,BYTE PTR [eax+0x19]
  41c69d:	mov    DWORD PTR [edi],edx
  41c69f:	addr16 das 
  41c6a1:	lea    ebp,[eax]
  41c6a3:	arpl   WORD PTR [ebx-0x31],cx
  41c6a6:	es inc ecx
  41c6a8:	sbb    DWORD PTR [ebp+0x23],ecx
  41c6ab:	je     0x41c69b
  41c6ad:	shr    DWORD PTR [ecx+ebp*2],cl
  41c6b0:	out    0xd1,al
  41c6b2:	xor    esi,DWORD PTR [edx-0x1e]
  41c6b5:	shr    DWORD PTR [edx],1
  41c6b7:	ins    BYTE PTR es:[edi],dx
  41c6b8:	out    0x4a,al
  41c6ba:	daa    
  41c6bb:	add    al,bh
  41c6bd:	inc    esp
  41c6be:	inc    edx
  41c6bf:	pop    edi
  41c6c0:	call   0xfbb1de0b
  41c6c5:	in     eax,dx
  41c6c6:	sub    dh,BYTE PTR [esi-0x1e]
  41c6c9:	add    esp,DWORD PTR [edi]
  41c6cb:	gs scas al,BYTE PTR es:[edi]
  41c6cd:	mov    al,ds:0xd996332
  41c6d2:	adc    DWORD PTR [eax+eax*1+0x0],esi
	...
  41c6fa:	add    BYTE PTR [eax],al
  41c6fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6fd:	mov    gs,WORD PTR [eax]
  41c6ff:	push   eax
  41c700:	mov    ecx,0xb76715f9
  41c705:	add    eax,0xef4b6325
  41c70a:	es inc edi
  41c70c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c70d:	or     edx,ecx
  41c70f:	adc    DWORD PTR [eax-0x6bd725d8],ebp
  41c715:	sbb    al,0xc6
  41c717:	pop    ss
  41c718:	pushf  
  41c719:	cmp    ecx,ebx
  41c71b:	sub    al,0x7d
  41c71d:	and    bl,dl
  41c71f:	sub    BYTE PTR [esi+0x2c],ah
  41c722:	out    0x32,eax
  41c724:	push   0x6412ba48
  41c729:	sub    bh,BYTE PTR [ebp-0x6bdfa6cd]
  41c72f:	and    al,0x59
  41c731:	adc    BYTE PTR [ebx-0x7ad3cdd2],dh
  41c737:	xor    edi,DWORD PTR [ecx]
  41c739:	and    BYTE PTR [ebp-0x71d3d8d4],dl
  41c73f:	sub    BYTE PTR [ebx+0x9],cl
  41c742:	out    0x3,eax
  41c744:	dec    ebx
  41c745:	or     edi,esp
  41c747:	add    ecx,DWORD PTR [ebx+0x9]
  41c74a:	out    0x3,eax
  41c74c:	dec    ebx
  41c74d:	or     edi,esp
  41c74f:	add    ecx,DWORD PTR [ebx+0x9]
  41c752:	out    0x3,eax
  41c754:	dec    ebx
  41c755:	or     edi,esp
  41c757:	add    ecx,DWORD PTR [ebx+0x9]
  41c75a:	out    0x3,eax
  41c75c:	dec    ebx
  41c75d:	or     edi,esp
  41c75f:	add    eax,DWORD PTR [eax]
	...
  41c785:	add    BYTE PTR [eax],al
  41c787:	add    BYTE PTR [ebx+0x9],cl
  41c78a:	out    0x3,eax
  41c78c:	dec    ebx
  41c78d:	or     edi,esp
  41c78f:	add    ecx,DWORD PTR [ebx+0x9]
  41c792:	out    0x3,eax
  41c794:	dec    ebx
  41c795:	or     edi,esp
  41c797:	add    ecx,DWORD PTR [ebx+0x9]
  41c79a:	out    0x3,eax
  41c79c:	dec    ebx
  41c79d:	or     edi,esp
  41c79f:	add    ecx,DWORD PTR [ebx+0x9]
  41c7a2:	out    0x3,eax
  41c7a4:	dec    ebx
  41c7a5:	or     edi,esp
  41c7a7:	add    ecx,DWORD PTR [ebx+0x9]
  41c7aa:	out    0x3,eax
  41c7ac:	dec    ebx
  41c7ad:	or     DWORD PTR [eax],eax
  41c7af:	jmp    0xe941d0fc
  41c7b4:	dec    eax
  41c7b5:	or     DWORD PTR [eax],eax
  41c7b7:	jmp    0xe941d104
  41c7bc:	dec    eax
  41c7bd:	or     DWORD PTR [eax],eax
  41c7bf:	jmp    0xe941d10c
  41c7c4:	dec    eax
  41c7c5:	or     DWORD PTR [eax],eax
  41c7c7:	jmp    0xe941d114
  41c7cc:	dec    eax
  41c7cd:	or     DWORD PTR [eax],eax
  41c7cf:	jmp    0xe941d11c
  41c7d4:	dec    eax
  41c7d5:	or     DWORD PTR [eax],eax
  41c7d7:	jmp    0xe941d124
  41c7dc:	dec    eax
  41c7dd:	or     DWORD PTR [eax],eax
  41c7df:	jmp    0xe941d12c
  41c7e4:	dec    eax
  41c7e5:	or     DWORD PTR [eax],eax
  41c7e7:	jmp    0xe941d134
	...
  41c814:	dec    eax
  41c815:	or     DWORD PTR [eax],eax
  41c817:	jmp    0xe941d164
  41c81c:	dec    eax
  41c81d:	or     DWORD PTR [eax],eax
  41c81f:	jmp    0xe941d16c
  41c824:	dec    eax
  41c825:	or     DWORD PTR [eax],eax
  41c827:	jmp    0xe941d174
  41c82c:	dec    eax
  41c82d:	or     DWORD PTR [eax],eax
  41c82f:	jmp    0xe941d17c
  41c834:	dec    eax
  41c835:	or     DWORD PTR [eax],eax
  41c837:	jmp    0xe941d184
  41c83c:	dec    eax
  41c83d:	or     DWORD PTR [eax],eax
  41c83f:	jmp    0xe941d18c
  41c844:	dec    eax
  41c845:	or     DWORD PTR [eax],eax
  41c847:	jmp    0xe941d194
  41c84c:	dec    eax
  41c84d:	or     DWORD PTR [eax],eax
  41c84f:	add    BYTE PTR [edx],ah
  41c851:	or     al,0x0
  41c853:	add    BYTE PTR [edx],dh
  41c855:	or     al,0x0
  41c857:	add    BYTE PTR [edx],dh
  41c859:	or     al,0x0
  41c85b:	add    BYTE PTR [edx],ah
  41c85d:	or     al,0x0
  41c85f:	add    BYTE PTR [edx],ah
  41c861:	or     al,0x0
  41c863:	add    dl,dh
  41c865:	or     eax,DWORD PTR [eax]
  41c867:	add    dl,dh
  41c869:	or     eax,DWORD PTR [eax]
  41c86b:	add    dl,ah
  41c86d:	or     eax,DWORD PTR [eax]
  41c86f:	add    dl,ah
  41c871:	or     eax,DWORD PTR [eax]
  41c873:	add    dl,dh
  41c875:	or     eax,DWORD PTR [eax]
	...
  41c89f:	add    dl,dh
  41c8a1:	or     eax,DWORD PTR [eax]
  41c8a3:	add    dl,ah
  41c8a5:	or     eax,DWORD PTR [eax]
  41c8a7:	add    dl,ah
  41c8a9:	or     eax,DWORD PTR [eax]
  41c8ab:	add    BYTE PTR [edx-0x4dfffff5],dh
  41c8b1:	or     eax,DWORD PTR [eax]
  41c8b3:	add    BYTE PTR [edx-0x5dfffff5],ah
  41c8b9:	or     eax,DWORD PTR [eax]
  41c8bb:	add    BYTE PTR [edx-0x4dfffff5],dh
  41c8c1:	or     eax,DWORD PTR [eax]
  41c8c3:	add    BYTE PTR [edx-0x5dfffff5],ah
  41c8c9:	or     eax,DWORD PTR [eax]
  41c8cb:	add    BYTE PTR [edx+0xb],dh
  41c8ce:	add    BYTE PTR [eax],al
  41c8d0:	jb     0x41c8dd
  41c8d2:	add    BYTE PTR [eax],al
  41c8d4:	bound  ecx,QWORD PTR [ebx]
  41c8d6:	add    BYTE PTR [eax],al
  41c8d8:	bound  ecx,QWORD PTR [ebx]
  41c8da:	add    BYTE PTR [eax],al
  41c8dc:	jb     0x41c8e9
  41c8de:	add    BYTE PTR [eax],al
  41c8e0:	jb     0x41c8ed
  41c8e2:	add    BYTE PTR [eax],al
  41c8e4:	bound  ecx,QWORD PTR [ebx]
  41c8e6:	add    BYTE PTR [eax],al
  41c8e8:	bound  ecx,QWORD PTR [ebx]
  41c8ea:	add    BYTE PTR [eax],al
  41c8ec:	xor    cl,BYTE PTR [ebx]
  41c8ee:	add    BYTE PTR [eax],al
  41c8f0:	dec    ebx
  41c8f1:	mov    al,ds:0xa04b0001
  41c8f6:	add    DWORD PTR [eax],eax
  41c8f8:	dec    ebx
  41c8f9:	mov    al,ds:0xa04b0001
  41c8fe:	add    DWORD PTR [eax],eax
  41c900:	dec    ebx
  41c901:	mov    al,ds:0x1
	...
  41c92a:	add    BYTE PTR [eax],al
  41c92c:	dec    ebx
  41c92d:	mov    al,ds:0xa04b0001
  41c932:	add    DWORD PTR [eax],eax
  41c934:	dec    ebx
  41c935:	mov    al,ds:0xa04b0001
  41c93a:	add    DWORD PTR [eax],eax
  41c93c:	dec    ebx
  41c93d:	mov    al,ds:0xa04b0001
  41c942:	add    DWORD PTR [eax],eax
  41c944:	dec    ebx
  41c945:	mov    al,ds:0xa04b0001
  41c94a:	add    DWORD PTR [eax],eax
  41c94c:	dec    ebx
  41c94d:	mov    al,ds:0xa04b0001
  41c952:	add    DWORD PTR [eax],eax
  41c954:	dec    ebx
  41c955:	mov    al,ds:0xa04b0001
  41c95a:	add    DWORD PTR [eax],eax
  41c95c:	dec    ebx
  41c95d:	mov    al,ds:0xa04b0001
  41c962:	add    DWORD PTR [eax],eax
  41c964:	dec    ebx
  41c965:	mov    eax,ds:0x292442e0
  41c96a:	push   0xbe9ea4cb
  41c96f:	mov    edx,0x32302eb3
  41c974:	pop    ebx
  41c975:	sbb    DWORD PTR [ebp-0x35],ebp
  41c978:	ins    BYTE PTR es:[edi],dx
  41c979:	mov    eax,ds:0x1fec42e6
  41c97e:	add    al,0x40
  41c980:	dec    ebx
  41c981:	add    BYTE PTR [eax+edx*1],al
  41c984:	dec    ebx
  41c985:	cwde   
  41c986:	add    DWORD PTR [ebx+ecx*2],eax
  41c989:	mov    ds:0xa054ff01,al
  41c98e:	add    DWORD PTR [eax+0x0],eax
	...
  41c9b8:	dec    ebx
  41c9b9:	or     edi,esp
  41c9bb:	add    ecx,DWORD PTR [ebx+0x6b03e709]
  41c9c1:	or     edi,esp
  41c9c3:	add    ebx,DWORD PTR [ebx+0x9]
  41c9c6:	out    0x3,eax
  41c9c8:	inc    ebx
  41c9c9:	or     edi,esp
  41c9cb:	add    ecx,DWORD PTR [edi+0x9]
  41c9ce:	out    0x3,eax
  41c9d0:	dec    ecx
  41c9d1:	or     edi,esp
  41c9d3:	add    edx,DWORD PTR [esi+ecx*4]
  41c9d6:	out    0x83,eax
  41c9d8:	dec    ebx
  41c9d9:	or     edi,esp
  41c9db:	inc    ebx
  41c9dc:	dec    ebx
  41c9dd:	or     edi,esp
  41c9df:	jecxz  0x41c9dd
  41c9e1:	(bad)  
  41c9e2:	out    0xf3,eax
  41c9e4:	hlt    
  41c9e5:	(bad)  
  41c9e6:	out    0xb,eax
  41c9e8:	dec    ebx
  41c9e9:	or     edi,esp
  41c9eb:	jmp    esp
  41c9ed:	(bad)  
  41c9ee:	out    0x5,eax
  41c9f0:	dec    ebx
  41c9f1:	or     edi,esp
  41c9f3:	add    al,0x4b
  41c9f5:	or     DWORD PTR [edi+0x4],esp
  41c9f8:	dec    ebx
  41c9f9:	or     DWORD PTR [edi-0x38f6b4fd],esp
  41c9ff:	add    ecx,DWORD PTR [ebx+0x9]
  41ca02:	test   DWORD PTR [ebx],0x3df094b
  41ca08:	dec    ebx
  41ca09:	or     ebx,ebp
  41ca0b:	add    ecx,DWORD PTR [ebx+0x9]
  41ca0e:	jmp    0xe84b1516
  41ca13:	add    ecx,DWORD PTR [ebx+0x9]
  41ca16:	scas   eax,DWORD PTR es:[edi]
  41ca17:	shl    DWORD PTR [ecx+ebp*8-0x2],cl
  41ca1b:	repz add BYTE PTR [eax],al
	...
  41ca42:	add    BYTE PTR [eax],al
  41ca44:	dec    esp
  41ca45:	or     DWORD PTR [eax],esp
  41ca47:	aad    0x25
  41ca49:	call   0x88fbf3d
  41ca4e:	adc    esi,edx
  41ca50:	and    ch,bl
  41ca52:	loopne 0x41ca49
  41ca54:	push   edx
  41ca55:	or     eax,DWORD PTR [edx]
  41ca57:	xlat   BYTE PTR ds:[ebx]
  41ca58:	xor    ebp,edx
  41ca5a:	push   esi
  41ca5c:	jp     0x41ca39
  41ca5e:	and    eax,0x5fb5acf
  41ca63:	in     al,0x1b
  41ca65:	loopne 0x41ca89
  41ca67:	cld    
  41ca68:	cmp    eax,DWORD PTR [eax]
  41ca6a:	add    edx,ebp
  41ca6c:	add    al,0xe1
  41ca6e:	and    ebp,ebp
  41ca70:	sbb    al,0x1
  41ca72:	add    al,0xe2
  41ca74:	sbb    eax,0x46e80102
  41ca79:	add    eax,0xfd46e106
  41ca7e:	or     eax,0x12fa17de
  41ca83:	inc    BYTE PTR [edi]
  41ca85:	repnz sbb ebp,esp
  41ca88:	clc    
  41ca89:	add    dl,BYTE PTR ds:0x190af4e9
  41ca8f:	fisttp WORD PTR [ebx-0xb]
  41ca92:	push   es
  41ca93:	(bad)  
  41ca95:	add    DWORD PTR [ecx],eax
  41ca97:	loopne 0x41cae2
  41ca99:	inc    BYTE PTR ds:0xff00ddd3
  41ca9f:	add    ah,dh
  41caa1:	out    dx,al
  41caa2:	and    edx,edi
  41caa4:	call   0x0:0xdb24ef
	...
  41cacf:	add    BYTE PTR [esp+ebp*8-0x19673dd4],ah
  41cad6:	xor    al,0xc8
  41cad8:	jl     0x41cab9
  41cada:	es mov eax,0xe91cf0ad
  41cae0:	pushf  
  41cae1:	mov    eax,DWORD PTR [eax]
  41cae3:	jmp    0xe941d430
  41cae8:	dec    eax
  41cae9:	mov    ebp,?
  41caeb:	in     eax,dx
  41caec:	test   BYTE PTR [ebx-0x73b71b00],cl
  41caf2:	add    ch,ch
  41caf4:	je     0x41ca81
  41caf6:	std    
  41caf7:	in     eax,0x48
  41caf9:	or     DWORD PTR [eax],eax
  41cafb:	add    BYTE PTR [edx+0x8],dh
  41cafe:	std    
  41caff:	push   DWORD PTR [edx-0x74]
  41cb02:	std    
  41cb03:	jmp    DWORD PTR [edx-0x74]
  41cb06:	inc    BYTE PTR [eax]
  41cb08:	mov    si,?
  41cb0b:	add    BYTE PTR [edx],dh
  41cb0d:	mov    ebp,?
  41cb0f:	jmp    DWORD PTR [esi]
  41cb11:	mov    ebp,?
  41cb13:	add    BYTE PTR [esi],ah
  41cb15:	or     ch,bh
  41cb17:	add    BYTE PTR [edx],ah
  41cb19:	or     BYTE PTR [eax],al
  41cb1b:	add    DWORD PTR [esi],esi
  41cb1d:	or     BYTE PTR [eax],al
  41cb1f:	add    BYTE PTR [esi],ah
  41cb21:	mov    ebp,?
  41cb23:	jmp    DWORD PTR [edx]
  41cb25:	mov    ebp,?
  41cb27:	add    BYTE PTR [edx],ah
  41cb29:	mov    ebp,?
  41cb2b:	add    dl,dh
  41cb2d:	mov    edi,esi
  41cb2f:	push   edx
  41cb31:	mov    edi,esi
  41cb33:	inc    DWORD PTR [eax]
	...
  41cb59:	add    BYTE PTR [eax],al
  41cb5b:	add    dl,ah
  41cb5d:	pop    es
  41cb5e:	std    
  41cb5f:	add    dl,ah
  41cb61:	pop    es
  41cb62:	std    
  41cb63:	add    dh,dh
  41cb65:	mov    edi,ebp
  41cb67:	add    dh,ah
  41cb69:	pop    es
  41cb6a:	std    
  41cb6b:	jmp    esi
  41cb6d:	pop    es
  41cb6e:	add    BYTE PTR [ecx],al
  41cb70:	out    0x7,al
  41cb72:	add    BYTE PTR [ecx],al
  41cb74:	mov    dh,0x7
  41cb76:	std    
  41cb77:	push   DWORD PTR [edx-0x59fffff9]
  41cb7d:	mov    edi,ebp
  41cb7f:	jmp    DWORD PTR [esi-0x4d000175]
  41cb85:	pop    es
  41cb86:	add    BYTE PTR [ecx],al
  41cb88:	mov    dl,0x7
  41cb8a:	std    
  41cb8b:	jmp    DWORD PTR [esi-0x59ff0175]
  41cb91:	pop    es
  41cb92:	add    BYTE PTR [eax],al
  41cb94:	jb     0x41cb9d
  41cb96:	std    
  41cb97:	add    BYTE PTR [edx-0x75],dh
  41cb9a:	inc    BYTE PTR [eax]
  41cb9c:	dec    ebx
  41cb9d:	mov    ds:0xa24a0001,al
  41cba2:	add    DWORD PTR [eax],eax
  41cba4:	dec    edx
  41cba5:	mov    ds:0xa55cfffd,al
  41cbaa:	add    edi,edi
  41cbac:	dec    ebx
  41cbad:	mov    ds:0xa14cff01,al
  41cbb2:	std    
  41cbb3:	inc    BYTE PTR [ebp+ebx*4+0x1]
  41cbb7:	add    BYTE PTR [edx-0x60],cl
  41cbba:	std    
  41cbbb:	push   DWORD PTR [ebx*4+0x1]
	...
  41cbe6:	add    BYTE PTR [eax],al
  41cbe8:	dec    ebx
  41cbe9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cbea:	std    
  41cbeb:	dec    DWORD PTR [ebx-0x64]
  41cbee:	std    
  41cbef:	(bad)  
  41cbf0:	sbb    al,0xa5
  41cbf2:	std    
  41cbf3:	dec    BYTE PTR [ebx-0x64]
  41cbf6:	add    edi,edi
  41cbf8:	or     al,0xa1
  41cbfa:	add    edi,edi
  41cbfc:	dec    ebx
  41cbfd:	pushf  
  41cbfe:	std    
  41cbff:	dec    DWORD PTR [ebx-0x5c]
  41cc02:	add    DWORD PTR [eax],eax
  41cc04:	dec    edx
  41cc05:	pushf  
  41cc06:	std    
  41cc07:	(bad)  
  41cc08:	in     al,dx
  41cc09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc0a:	std    
  41cc0b:	(bad)  
  41cc0c:	in     al,0xa0
  41cc0e:	std    
  41cc0f:	dec    BYTE PTR [ebx-0x5c]
  41cc12:	std    
  41cc13:	call   esp
  41cc15:	mov    al,ds:0xa04bfffd
  41cc1a:	std    
  41cc1b:	dec    DWORD PTR [ebx-0x60]
  41cc1e:	add    DWORD PTR [eax],eax
  41cc20:	dec    ebx
  41cc21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc22:	add    edi,edi
  41cc24:	mov    ah,0xa0
  41cc26:	std    
  41cc27:	(bad)  
  41cc28:	lods   al,BYTE PTR ds:[esi]
  41cc29:	mov    al,ds:0x9c4b0001
  41cc2e:	add    edi,edi
  41cc30:	dec    ebx
  41cc31:	rol    BYTE PTR [ecx-0x7e5f34f0],0x0
  41cc38:	retf   
  41cc39:	mov    al,ds:0x94b0081
  41cc3e:	pop    es
  41cc3f:	test   BYTE PTR [ebx+0x9],bl
  41cc42:	out    0x3,eax
  41cc44:	pop    ebx
  41cc45:	or     DWORD PTR [edi],eax
  41cc47:	add    al,0x4b
  41cc49:	or     DWORD PTR [edi],eax
  41cc4b:	add    al,0x0
	...
  41cc71:	add    BYTE PTR [eax],al
  41cc73:	add    BYTE PTR [ebx],bh
  41cc75:	mov    DWORD PTR [edi],eax
  41cc77:	test   BYTE PTR [ebx-0x77],cl
  41cc7a:	pop    es
  41cc7b:	add    al,0x4b
  41cc7d:	mov    DWORD PTR [edi],eax
  41cc7f:	test   BYTE PTR [ebx],bh
  41cc81:	mov    edi,esp
  41cc83:	sbb    DWORD PTR [ebx-0x77],0xffffffe7
  41cc87:	add    ecx,DWORD PTR [ebx-0x77]
  41cc8a:	out    0x83,eax
  41cc8c:	dec    ebx
  41cc8d:	mov    edi,esp
  41cc8f:	add    ebx,DWORD PTR [ebx+0x9]
  41cc92:	mov    DWORD PTR [ebx],0x3c7094b
  41cc98:	cmp    ecx,DWORD PTR [ecx+0x93b83e7]
  41cc9e:	mov    DWORD PTR [ebx],0x83c7093b
  41cca4:	dec    ebx
  41cca5:	mov    edi,esp
  41cca7:	add    ecx,DWORD PTR [ebx+0x9]
  41ccaa:	out    0x3,eax
  41ccac:	dec    ebx
  41ccad:	mov    edi,esp
  41ccaf:	or     DWORD PTR [ebx+0x9],0x7
  41ccb3:	test   BYTE PTR [ebx],bh
  41ccb5:	or     edi,esp
  41ccb7:	add    edi,DWORD PTR [ebx]
  41ccb9:	mov    DWORD PTR [edi],eax
  41ccbb:	add    al,0x3b
  41ccbd:	or     DWORD PTR [edi],eax
  41ccbf:	add    al,0x4b
  41ccc1:	mov    edi,esp
  41ccc3:	add    ecx,DWORD PTR [ebx+0x9]
  41ccc6:	out    0x83,eax
  41ccc8:	pop    ebx
  41ccc9:	or     edi,eax
  41cccb:	or     DWORD PTR [ebx+0x9],0xffffffe7
  41cccf:	sbb    DWORD PTR [ebx-0x77],0xffffffe7
  41ccd3:	add    edi,DWORD PTR [ebx]
  41ccd5:	mov    edi,eax
  41ccd7:	add    DWORD PTR [eax],0x0
	...
  41ccfe:	add    BYTE PTR [eax],al
  41cd00:	dec    ebx
  41cd01:	or     edi,esp
  41cd03:	add    ecx,DWORD PTR [ebx+0x9]
  41cd06:	add    cl,cl
  41cd08:	enter  0xfff8,0xc8
  41cd0c:	dec    eax
  41cd0d:	stc    
  41cd0e:	jg     0x41ccf9
  41cd10:	dec    eax
  41cd11:	stc    
  41cd12:	dec    DWORD PTR [eax]
  41cd14:	iret   
  41cd15:	or     BYTE PTR [eax+0x7ff948e9],al
  41cd1b:	jmp    0xe9c1c5e8
  41cd20:	enter  0x8,0xe9
  41cd24:	dec    eax
  41cd25:	stc    
  41cd26:	jg     0x41cd11
  41cd28:	enter  0x8008,0x9
  41cd2c:	dec    edi
  41cd2d:	or     DWORD PTR [eax],eax
  41cd2f:	leave  
  41cd30:	enter  0x8019,0xc9
  41cd34:	enter  0x19,0xc9
  41cd38:	dec    eax
  41cd39:	or     DWORD PTR [eax],eax
  41cd3b:	jmp    0xe941d708
  41cd40:	dec    eax
  41cd41:	or     DWORD PTR [eax+0x9c8c9],eax
  41cd47:	jmp    0xe9c1e714
  41cd4c:	dec    eax
  41cd4d:	sbb    DWORD PTR [eax],eax
  41cd4f:	or     DWORD PTR [edi+0x9],eax
  41cd52:	or     BYTE PTR [ecx],0x4f
  41cd55:	sbb    DWORD PTR [eax],eax
  41cd57:	or     edi,eax
  41cd59:	or     DWORD PTR [eax-0x7ff6b0f7],eax
  41cd5f:	or     DWORD PTR [edi+0x19],eax
  41cd62:	add    cl,ch
	...
  41cd8c:	enter  0x19,0xe9
  41cd90:	dec    eax
  41cd91:	or     DWORD PTR [eax],eax
  41cd93:	jmp    0xc9c1d760
  41cd98:	enter  0x9,0xe9
  41cd9c:	dec    eax
  41cd9d:	or     DWORD PTR [eax-0x7fe6b737],eax
  41cda3:	leave  
  41cda4:	enter  0x8019,0x0
  41cda8:	mov    dl,0x8c
  41cdaa:	adc    BYTE PTR [eax],al
  41cdac:	call   0x20a:0xa200000a
  41cdb3:	or     BYTE PTR [edx+0xc],dh
  41cdb6:	add    BYTE PTR [eax],al
  41cdb8:	jp     0x41cdc6
  41cdba:	add    cl,BYTE PTR [eax]
  41cdbc:	bound  ecx,QWORD PTR [edx]
  41cdbe:	add    BYTE PTR [eax],cl
  41cdc0:	bound  ecx,QWORD PTR [eax+eax*1]
  41cdc3:	add    BYTE PTR [edx+0xa],ch
  41cdc6:	add    al,BYTE PTR [eax]
  41cdc8:	jb     0x41cdd4
  41cdca:	add    BYTE PTR [eax],cl
  41cdcc:	pop    edx
  41cdcd:	or     al,0x2
  41cdcf:	add    BYTE PTR [edx+0xc],ch
  41cdd2:	add    BYTE PTR [eax],cl
  41cdd4:	sub    cl,BYTE PTR [eax+eax*1]
  41cdd7:	or     BYTE PTR [edx],dh
  41cdd9:	or     al,0x2
  41cddb:	add    BYTE PTR [edx],bh
  41cddd:	or     al,BYTE PTR [edx]
  41cddf:	or     BYTE PTR [edx],ch
  41cde1:	or     al,0x2
  41cde3:	add    BYTE PTR [edx],dh
  41cde5:	or     al,0x2
  41cde7:	or     BYTE PTR [edx],bl
  41cde9:	or     al,BYTE PTR [eax]
  41cdeb:	add    BYTE PTR [edx],ah
  41cded:	or     al,0x0
  41cdef:	or     BYTE PTR [eax],al
	...
  41ce15:	add    BYTE PTR [eax],al
  41ce17:	add    BYTE PTR [edx],ch
  41ce19:	or     al,0x0
  41ce1b:	add    dl,dh
  41ce1d:	or     DWORD PTR [edx],eax
  41ce1f:	or     dl,dh
  41ce21:	or     DWORD PTR [eax],eax
  41ce23:	add    dl,ah
  41ce25:	or     DWORD PTR [edx],eax
  41ce27:	add    dl,ah
  41ce29:	or     eax,DWORD PTR [edx]
  41ce2b:	or     dl,ch
  41ce2d:	or     eax,DWORD PTR [edx]
  41ce2f:	or     dl,bl
  41ce31:	or     DWORD PTR [edx],eax
  41ce33:	add    dl,bl
  41ce35:	or     DWORD PTR [eax],eax
  41ce37:	or     dl,ah
  41ce39:	or     DWORD PTR [edx],eax
  41ce3b:	add    BYTE PTR [edx-0x45fffdf5],dh
  41ce41:	or     DWORD PTR [eax],eax
  41ce43:	or     BYTE PTR [edx+0x4b00000b],bh
  41ce49:	push   0xffffffff
  41ce4b:	add    DWORD PTR [ebx+0x72],edx
  41ce4e:	(bad)  
  41ce4f:	dec    DWORD PTR [ebx+0x72]
  41ce52:	add    DWORD PTR [eax],eax
  41ce54:	inc    ebx
  41ce55:	jb     0x41ce56
  41ce57:	add    DWORD PTR [ebx+0x72],eax
  41ce5a:	add    DWORD PTR [eax],eax
  41ce5c:	push   ebx
  41ce5d:	push   0x1
  41ce5f:	add    cl,BYTE PTR [ebx+0x7a]
  41ce62:	(bad)  
  41ce63:	dec    DWORD PTR [ebx+0x72]
  41ce66:	add    DWORD PTR [edx],eax
  41ce68:	dec    ebx
  41ce69:	jb     0x41ce6a
  41ce6b:	add    DWORD PTR [ebx+0x72],edx
  41ce6e:	(bad)  
  41ce6f:	call   DWORD PTR [ebx+0x72]
  41ce72:	add    DWORD PTR [eax],eax
  41ce74:	dec    ebx
  41ce75:	jb     0x41ce76
  41ce77:	dec    DWORD PTR [ebx+0x6a]
  41ce7a:	add    DWORD PTR [edx],eax
	...
  41cea4:	dec    ebx
  41cea5:	push   0x705301ff
  41ceaa:	(bad)  
  41ceab:	inc    DWORD PTR [ebx+0x78]
  41ceae:	add    DWORD PTR [eax],eax
  41ceb0:	inc    ebx
  41ceb1:	jo     0x41ceb2
  41ceb3:	dec    DWORD PTR [ebx+0x70]
  41ceb6:	add    DWORD PTR [eax],eax
  41ceb8:	dec    ebx
  41ceb9:	js     0x41cebc
  41cebb:	add    al,BYTE PTR [ebx+0x78]
  41cebe:	(bad)  
  41cebf:	inc    DWORD PTR [ebx+0x70]
  41cec2:	add    DWORD PTR [edx],eax
  41cec4:	dec    ebx
  41cec5:	jo     0x41cec8
  41cec7:	add    BYTE PTR [ebx+0x78],dl
  41ceca:	inc    DWORD PTR [ecx]
  41cecc:	inc    ebx
  41cecd:	js     0x41ced0
  41cecf:	add    BYTE PTR [ebx+0x68],cl
  41ced2:	inc    DWORD PTR [ecx]
  41ced4:	dec    ebx
  41ced5:	jo     0x41ced6
  41ced7:	add    DWORD PTR [ebx+0x78],ecx
  41ceda:	add    DWORD PTR [eax],eax
  41cedc:	inc    ebx
  41cedd:	jo     0x41cee0
  41cedf:	add    al,BYTE PTR [ebx+0x68]
  41cee2:	(bad)  
  41cee3:	call   DWORD PTR [ebx+0x68]
  41cee6:	(bad)  
  41cee7:	dec    DWORD PTR [ebx+0x9]
  41ceea:	out    0x3,eax
  41ceec:	dec    ecx
  41ceed:	adc    edi,ebp
  41ceef:	add    DWORD PTR [ecx+0x9],ecx
  41cef2:	fild   WORD PTR [ebx]
  41cef4:	dec    ebx
  41cef5:	or     edi,ebx
  41cef7:	add    ecx,DWORD PTR [ecx+0x11]
  41cefa:	out    0x1,eax
  41cefc:	dec    ecx
  41cefd:	or     eax,ebp
  41ceff:	jecxz  0x41cf0d
  41cf01:	or     DWORD PTR [eax-0x1d],ebp
  41cf04:	test   BYTE PTR [esi+0xe368],al
	...
  41cf2e:	add    BYTE PTR [eax],al
  41cf30:	jl     0x41ceb8
  41cf32:	addr16 add al,0x4b
  41cf35:	or     DWORD PTR [edi-0x1c],esp
  41cf38:	in     al,dx
  41cf39:	or     BYTE PTR [eax+0x4],ch
  41cf3c:	retf   
  41cf3d:	or     eax,ebp
  41cf3f:	add    ecx,ebx
  41cf41:	or     eax,ebp
  41cf43:	jecxz  0x41cf99
  41cf45:	xchg   bh,ah
  41cf47:	add    ecx,DWORD PTR [ebx+0x9]
  41cf4a:	out    0xe3,eax
  41cf4c:	les    ecx,FWORD PTR [ecx]
  41cf4e:	out    0xe3,eax
  41cf50:	mov    esp,0xb4e46809
  41cf55:	or     DWORD PTR [eax+0x4],ebp
  41cf58:	dec    ebx
  41cf59:	or     edi,esp
  41cf5b:	add    ecx,DWORD PTR [ebx+0x9]
  41cf5e:	addr16 add al,0xcb
  41cf61:	or     al,ch
  41cf63:	add    ecx,ebx
  41cf65:	or     al,ch
  41cf67:	add    ecx,DWORD PTR [ebx+0x9]
  41cf6a:	out    0xe3,eax
  41cf6c:	add    al,0x86
  41cf6e:	out    0x3,eax
  41cf70:	retf   
  41cf71:	or     al,ch
  41cf73:	jecxz  0x41cfe9
  41cf75:	or     DWORD PTR [edi+0x4],esp
  41cf78:	dec    ebx
  41cf79:	or     edi,esp
  41cf7b:	add    ecx,ebx
  41cf7d:	or     al,ch
  41cf7f:	jecxz  0x41cf5d
  41cf81:	test   DWORD PTR [edi-0x1c],esp
  41cf84:	aam    0x85
  41cf86:	push   0x8cb04
  41cf8b:	call   0x6941d8d8
  41cf90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf91:	test   ebp,edi
  41cf93:	imul   eax,DWORD PTR [eax],0x0
	...
  41cfb9:	add    BYTE PTR [eax],al
  41cfbb:	add    BYTE PTR [edi-0x77],cl
  41cfbe:	add    cl,ch
  41cfc0:	test   al,0x85
  41cfc2:	std    
  41cfc3:	imul   ebp,DWORD PTR [edi-0x5897fffb],0x4f680005
  41cfcd:	or     DWORD PTR [eax],eax
  41cfcf:	imul   eax,DWORD PTR [edi-0x77],0x8948e800
  41cfd6:	add    cl,ch
  41cfd8:	push   0x68680005
  41cfdd:	add    eax,0x9486800
  41cfe2:	add    cl,ch
  41cfe4:	dec    eax
  41cfe5:	or     DWORD PTR [eax],eax
  41cfe7:	jmp    0xe941d934
  41cfec:	push   0x68690005
  41cff1:	test   ebp,edi
  41cff3:	imul   ecx,DWORD PTR [eax-0x77],0x89486800
  41cffa:	add    al,ch
  41cffc:	dec    eax
  41cffd:	or     DWORD PTR [eax],eax
  41cfff:	call   0x6841d52c
  41d004:	sub    BYTE PTR [ebp-0x7ad79703],al
  41d00a:	std    
  41d00b:	imul   ecx,DWORD PTR [eax+0x9],0x5286800
  41d012:	add    BYTE PTR [eax+0x48],ch
  41d015:	or     DWORD PTR [eax],eax
  41d017:	call   0xe941d964
  41d01c:	call   0x12acda5
	...
  41d045:	add    BYTE PTR [eax],al
  41d047:	add    BYTE PTR [eax-0x77],cl
  41d04a:	add    al,ch
  41d04c:	call   0xe8abcdd5
  41d051:	add    al,0x0
  41d053:	add    BYTE PTR [ebx+0x8],ah
  41d056:	add    BYTE PTR [eax],0xe3
  41d059:	push   0x6832fffd
  41d05e:	std    
  41d05f:	push   DWORD PTR [edx-0x5cff7ff8]
  41d065:	push   0x822007d
  41d06a:	add    BYTE PTR [eax],al
  41d06c:	mov    dl,0x8
  41d06e:	add    BYTE PTR [eax],0xb2
  41d071:	push   0x6822fffd
  41d076:	jge    0x41d078
  41d078:	mov    ds:0x7200000d,al
  41d07d:	or     eax,0x8720208
  41d082:	or     BYTE PTR [edx],al
  41d084:	bound  eax,QWORD PTR [edi]
  41d086:	add    BYTE PTR [edx+0x62],al
  41d089:	or     BYTE PTR [eax],cl
  41d08b:	add    BYTE PTR [edx+0x7],dh
  41d08e:	add    BYTE PTR [eax],al
  41d090:	jb     0x41d09a
  41d092:	add    BYTE PTR [eax+0x62],al
  41d095:	or     BYTE PTR [eax],cl
  41d097:	add    ah,BYTE PTR [edx+0x7]
  41d09a:	or     BYTE PTR [eax+0x32],al
  41d09d:	or     BYTE PTR [eax],cl
  41d09f:	add    BYTE PTR [edx],dh
  41d0a1:	pop    es
  41d0a2:	add    BYTE PTR [edx],al
  41d0a4:	and    al,BYTE PTR [edi]
  41d0a6:	or     BYTE PTR [eax+0x22],al
  41d0a9:	pop    es
  41d0aa:	add    BYTE PTR [edx+0x0],al
	...
  41d0d1:	add    BYTE PTR [eax],al
  41d0d3:	add    BYTE PTR [edx],dh
  41d0d5:	or     BYTE PTR [eax],cl
  41d0d7:	inc    edx
  41d0d8:	xor    al,BYTE PTR [edi]
  41d0da:	or     BYTE PTR [eax],al
  41d0dc:	and    cl,BYTE PTR [eax]
  41d0de:	add    BYTE PTR [eax+0x22],al
  41d0e1:	or     BYTE PTR [eax],al
  41d0e3:	add    dh,dl
  41d0e5:	pop    es
  41d0e6:	or     BYTE PTR [eax-0xe],al
  41d0e9:	pop    es
  41d0ea:	or     BYTE PTR [eax-0x1e],al
  41d0ed:	pop    es
  41d0ee:	add    BYTE PTR [eax],al
  41d0f0:	loop   0x41d0f8
  41d0f2:	add    BYTE PTR [eax+0x4b],al
  41d0f5:	jb     0x41d0f9
  41d0f7:	or     BYTE PTR [ecx-0x76f7fd8e],cl
  41d0fd:	jb     0x41d101
  41d0ff:	add    BYTE PTR [ecx+0x72],cl
  41d102:	add    DWORD PTR [eax],ecx
  41d104:	or     DWORD PTR [edx+0x2],esi
  41d107:	add    BYTE PTR [ebx],cl
  41d109:	jb     0x41d10c
  41d10b:	add    BYTE PTR [ebx+0x72],cl
  41d10e:	add    DWORD PTR [eax],eax
  41d110:	or     DWORD PTR [edx+0x2],esi
  41d113:	or     BYTE PTR [ecx+0x72],cl
  41d116:	add    DWORD PTR [eax],eax
  41d118:	dec    ecx
  41d119:	jb     0x41d11c
  41d11b:	add    BYTE PTR [ecx],cl
  41d11d:	jb     0x41d121
  41d11f:	or     BYTE PTR [ebx+0x72],cl
  41d122:	add    DWORD PTR [eax],ecx
  41d124:	dec    ebx
  41d125:	jb     0x41d129
  41d127:	add    BYTE PTR [ecx],cl
  41d129:	jb     0x41d12d
  41d12b:	add    BYTE PTR [ebx+0x72],cl
  41d12e:	add    DWORD PTR [eax],eax
  41d130:	dec    ecx
  41d131:	jb     0x41d134
  41d133:	add    BYTE PTR [ebx],cl
  41d135:	jb     0x41d138
  41d137:	or     BYTE PTR [eax],al
	...
  41d15d:	add    BYTE PTR [eax],al
  41d15f:	add    BYTE PTR [ecx+0x72],cl
  41d162:	add    al,BYTE PTR [eax]
  41d164:	or     DWORD PTR [edx+0x2],esi
  41d167:	or     BYTE PTR [ebx],cl
  41d169:	jb     0x41d16d
  41d16b:	add    BYTE PTR [ecx+0x70],cl
  41d16e:	add    DWORD PTR [eax],eax
  41d170:	mov    esi,DWORD PTR [eax+0x1]
  41d173:	or     BYTE PTR [ecx+0x49080270],cl
  41d179:	jo     0x41d17d
  41d17b:	or     BYTE PTR [ebx+0x4b000270],cl
  41d181:	jo     0x41d184
  41d183:	add    BYTE PTR [ecx+0x70],cl
  41d186:	add    DWORD PTR [eax],ecx
  41d188:	mov    DWORD PTR [eax+0x2],esi
  41d18b:	or     BYTE PTR [ecx+0x4b080270],cl
  41d191:	jo     0x41d194
  41d193:	add    BYTE PTR [ecx+0x4302e709],cl
  41d199:	(bad)  
  41d19a:	out    0x3,al
  41d19c:	push   ebx
  41d19d:	pop    es
  41d19e:	out    0x3,eax
  41d1a0:	dec    ebx
  41d1a1:	or     edi,esp
  41d1a3:	add    eax,DWORD PTR [ebx-0x37]
  41d1a6:	out    0x3,al
  41d1a8:	dec    ebx
  41d1a9:	(bad)  
  41d1aa:	out    0x2,al
  41d1ac:	push   ebx
  41d1ad:	or     edi,esp
  41d1af:	add    cl,BYTE PTR [ebx+0x7]
  41d1b2:	out    0x2,eax
  41d1b4:	dec    ebx
  41d1b5:	leave  
  41d1b6:	out    0x3,al
  41d1b8:	inc    ebx
  41d1b9:	or     edi,esp
  41d1bb:	add    ecx,DWORD PTR [ebx+0x9]
  41d1be:	out    0x3,eax
  41d1c0:	push   ebx
  41d1c1:	leave  
  41d1c2:	out    0x2,al
	...
  41d1ec:	inc    ebx
  41d1ed:	pop    es
  41d1ee:	out    0x2,eax
  41d1f0:	dec    ebx
  41d1f1:	leave  
  41d1f2:	(bad)  
  41d1f3:	add    ecx,DWORD PTR [ebx+0x29]
  41d1f6:	out    0x3,eax
  41d1f8:	or     ebp,DWORD PTR [ecx]
  41d1fa:	out    0x43,eax
  41d1fc:	dec    ebx
  41d1fd:	or     edi,esi
  41d1ff:	inc    ebx
  41d200:	or     ebp,DWORD PTR [ecx]
  41d202:	out    0x3,eax
  41d204:	or     ebp,DWORD PTR [ecx]
  41d206:	test   DWORD PTR [ebx],0x43f7094b
  41d20c:	or     ebp,DWORD PTR [ecx]
  41d20e:	out    0x3,eax
  41d210:	or     ecx,DWORD PTR [ecx]
  41d212:	out    0x43,eax
  41d214:	dec    ebx
  41d215:	sub    edi,edx
  41d217:	inc    ebx
  41d218:	mov    ecx,DWORD PTR [ecx]
  41d21a:	out    0x3,eax
  41d21c:	mov    ecx,DWORD PTR [ecx]
  41d21e:	test   DWORD PTR [ebx],0x3f7294b
  41d224:	mov    ecx,DWORD PTR [ecx]
  41d226:	out    0x43,eax
  41d228:	dec    ebx
  41d229:	sub    edi,esp
  41d22b:	add    ecx,DWORD PTR [ebx+0x29]
  41d22e:	xlat   BYTE PTR ds:[ebx]
  41d22f:	inc    ebx
  41d230:	dec    ebx
  41d231:	or     edi,esp
  41d233:	add    ecx,DWORD PTR [ebx+0x9]
  41d236:	add    cl,bl
  41d238:	dec    eax
  41d239:	leave  
  41d23a:	(bad)  
  41d23b:	fmul   DWORD PTR [eax-0x7716dff7]
  41d241:	or     DWORD PTR [eax],eax
  41d243:	jmp    0xf9419bd0
  41d248:	mov    BYTE PTR [ecx],cl
  41d24a:	and    cl,bh
  41d24c:	dec    eax
  41d24d:	or     DWORD PTR [eax],eax
  41d24f:	fld    DWORD PTR [eax]
	...
  41d275:	add    BYTE PTR [eax],al
  41d277:	add    BYTE PTR [eax-0x37],cl
  41d27a:	pop    ds
  41d27b:	(bad)  [eax-0x37]
  41d27e:	pop    ds
  41d27f:	jmp    0xd941dbcc
  41d284:	or     cl,cl
  41d286:	(bad)  
  41d287:	call   0xf9619b94
  41d28c:	or     BYTE PTR [ecx],cl
  41d28e:	add    cl,ch
  41d290:	or     cl,cl
  41d292:	(bad)  
  41d293:	call   0xe9619ba0
  41d298:	dec    eax
  41d299:	or     DWORD PTR [eax],esp
  41d29b:	jmp    0xd961dba8
  41d2a0:	dec    eax
  41d2a1:	or     DWORD PTR [eax],eax
  41d2a3:	(bad)  [eax-0x37]
  41d2a6:	pop    ds
  41d2a7:	jmp    0xf9419bb4
  41d2ac:	or     cl,cl
  41d2ae:	pop    ds
  41d2af:	jmp    0xf9419bfc
  41d2b4:	or     BYTE PTR [ecx],cl
  41d2b6:	add    cl,bl
  41d2b8:	dec    eax
  41d2b9:	or     DWORD PTR [eax],esp
  41d2bb:	jmp    0xe9419c08
  41d2c0:	mov    BYTE PTR [ecx],cl
  41d2c2:	and    cl,ch
  41d2c4:	dec    eax
  41d2c5:	or     DWORD PTR [eax],esp
  41d2c7:	stc    
  41d2c8:	mov    BYTE PTR [ecx],cl
  41d2ca:	add    cl,bh
  41d2cc:	dec    eax
  41d2cd:	or     DWORD PTR [eax],esp
  41d2cf:	stc    
  41d2d0:	mov    cl,cl
  41d2d2:	pop    ds
  41d2d3:	jmp    0x419c60
  41d2d8:	and    cl,BYTE PTR ds:0x2040
	...
  41d302:	add    BYTE PTR [eax],al
  41d304:	and    cl,ch
  41d306:	aas    
  41d307:	add    dl,dh
  41d309:	int3   
  41d30a:	aas    
  41d30b:	and    dl,ah
  41d30d:	or     al,0x0
  41d30f:	add    dl,dh
  41d311:	or     al,0x40
  41d313:	and    dl,ah
  41d315:	or     al,0x0
  41d317:	add    dl,dh
  41d319:	int3   
  41d31a:	(bad)  
  41d31b:	jmp    edx
  41d31d:	or     al,0x40
  41d31f:	and    dl,dh
  41d321:	int3   
  41d322:	aas    
  41d323:	add    BYTE PTR [edx-0x5d000034],dh
  41d329:	or     al,0x40
  41d32b:	add    BYTE PTR [edx-0x5de00034],dl
  41d331:	or     al,0x0
  41d333:	add    BYTE PTR [edx-0x4ddfc034],dh
  41d339:	or     al,0x0
  41d33b:	and    BYTE PTR [edx+0x7200400c],dl
  41d341:	int3   
  41d342:	call   FWORD PTR [edi]
  41d344:	jb     0x41d352
  41d346:	and    BYTE PTR [eax],al
  41d348:	jo     0x41d356
  41d34a:	and    BYTE PTR [eax+eiz*2],al
  41d34d:	test   ch,bh
  41d34f:	add    esp,DWORD PTR [edx+0xc]
  41d352:	add    BYTE PTR [eax],al
  41d354:	jb     0x41d2da
  41d356:	std    
  41d357:	push   DWORD PTR [eax-0x7c]
  41d35a:	std    
  41d35b:	add    esp,DWORD PTR [eax-0x7c]
  41d35e:	sbb    eax,0x1d846200
  41d363:	add    al,0x30
  41d365:	test   BYTE PTR ds:0x4,bl
	...
  41d38f:	add    BYTE PTR [edx],dh
  41d391:	or     al,0x20
  41d393:	add    BYTE PTR [edx],ah
  41d395:	or     al,0x0
  41d397:	add    BYTE PTR [eax],ah
  41d399:	or     al,0x0
  41d39b:	add    al,0x30
  41d39d:	or     al,0x0
  41d39f:	add    BYTE PTR [ebx+0x72],cl
  41d3a2:	add    DWORD PTR [eax],eax
  41d3a4:	dec    edi
  41d3a5:	je     0x41d3a8
  41d3a7:	and    BYTE PTR [edi+0x74],al
  41d3aa:	stc    
  41d3ab:	inc    DWORD PTR [edx+esi*2]
  41d3ae:	stc    
  41d3af:	dec    DWORD PTR [eax+0x74]
  41d3b2:	stc    
  41d3b3:	pop    ds
  41d3b4:	dec    ebx
  41d3b5:	je     0x41d3b8
  41d3b7:	and    BYTE PTR [ebx+0x72],cl
  41d3ba:	stc    
  41d3bb:	dec    DWORD PTR [eax+0x74]
  41d3be:	add    DWORD PTR [eax],eax
  41d3c0:	inc    edi
  41d3c1:	jb     0x41d3c4
  41d3c3:	and    BYTE PTR [edi+0x72],cl
  41d3c6:	stc    
  41d3c7:	pop    ds
  41d3c8:	inc    edi
  41d3c9:	je     0x41d3cc
  41d3cb:	and    BYTE PTR [ebx+0x72],cl
  41d3ce:	add    DWORD PTR [eax],esp
  41d3d0:	inc    edi
  41d3d1:	jb     0x41d3cc
  41d3d3:	push   DWORD PTR [ebx+esi*2+0x73acfff9]
  41d3da:	stc    
  41d3db:	pop    ds
  41d3dc:	dec    edi
  41d3dd:	jb     0x41d3d8
  41d3df:	pop    ds
  41d3e0:	dec    ebx
  41d3e1:	je     0x41d3e4
  41d3e3:	add    BYTE PTR [ebx+0x72],cl
  41d3e6:	add    DWORD PTR [eax],eax
  41d3e8:	inc    edi
  41d3e9:	jb     0x41d3e4
  41d3eb:	pop    ds
  41d3ec:	dec    ebx
  41d3ed:	jb     0x41d3f0
  41d3ef:	add    BYTE PTR [edi+0x72],al
  41d3f2:	stc    
  41d3f3:	pop    ds
	...
  41d41c:	dec    ebx
  41d41d:	jb     0x41d420
  41d41f:	and    BYTE PTR [ebx+0x74],cl
  41d422:	stc    
  41d423:	dec    DWORD PTR [eax+0x74]
  41d426:	stc    
  41d427:	dec    DWORD PTR [eax+0x74]
  41d42a:	add    DWORD PTR [eax],esp
  41d42c:	dec    edi
  41d42d:	je     0x41d430
  41d42f:	and    BYTE PTR [edi+0x74],al
  41d432:	add    DWORD PTR [eax],eax
  41d434:	dec    ebx
  41d435:	jb     0x41d438
  41d437:	and    BYTE PTR [ebx+0x70],cl
  41d43a:	add    DWORD PTR [eax],eax
  41d43c:	dec    edi
  41d43d:	jo     0x41d438
  41d43f:	dec    DWORD PTR [eax+0x9]
  41d442:	out    0x3,eax
  41d444:	imul   ecx,DWORD PTR [ecx],0xffffffe7
  41d447:	sti    
  41d448:	cmp    al,0x5
  41d44a:	jmp    0xe9c0e94a
  41d44f:	sti    
  41d450:	sub    al,0x9
  41d452:	out    0xfb,eax
  41d454:	fs add eax,0x7efcfbe9
  41d45a:	jmp    0xe9471f62
  41d45f:	sti    
  41d460:	dec    esp
  41d461:	add    eax,0x52b03e7
  41d466:	out    0xfb,eax
  41d468:	cmp    al,0x9
  41d46a:	out    0x3,eax
  41d46c:	dec    ebx
  41d46d:	or     ecx,ebp
  41d46f:	add    ecx,DWORD PTR [ebx+0x9]
  41d472:	jmp    0xe7473972
  41d477:	add    ecx,DWORD PTR [ebx+0x9]
  41d47a:	jmp    0xe74b297a
  41d47f:	add    eax,DWORD PTR [eax]
	...
  41d4a5:	add    BYTE PTR [eax],al
  41d4a7:	add    BYTE PTR [ebx+0x5],ch
  41d4aa:	out    0xfb,eax
  41d4ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4ad:	jle    0x41d498
  41d4af:	add    ecx,DWORD PTR [ebx+0x5]
  41d4b2:	out    0xfb,eax
  41d4b4:	xchg   esp,eax
  41d4b5:	or     ah,bh
  41d4b7:	sti    
  41d4b8:	mov    WORD PTR [esi-0x17],?
  41d4bb:	add    ebp,DWORD PTR [ebx]
  41d4bd:	or     DWORD PTR [edi-0x18f1830d],esp
  41d4c3:	repz je 0x41d544
  41d4c6:	out    0x3,eax
  41d4c8:	inc    edi
  41d4c9:	or     DWORD PTR [edi],esp
  41d4cb:	hlt    
  41d4cc:	dec    eax
  41d4cd:	sbb    edi,esp
  41d4cf:	add    ecx,DWORD PTR [ebx+0x19]
  41d4d2:	daa    
  41d4d3:	hlt    
  41d4d4:	push   esp
  41d4d5:	push   cs
  41d4d6:	daa    
  41d4d7:	add    al,0x4b
  41d4d9:	or     edi,esp
  41d4db:	add    ecx,DWORD PTR [ebx+0x19]
  41d4de:	daa    
  41d4df:	add    al,0x47
  41d4e1:	or     DWORD PTR [eax],eax
  41d4e3:	jmp    0x2951da30
  41d4e8:	aaa    
  41d4e9:	or     dl,BYTE PTR [eax]
  41d4eb:	jmp    0xe941df08
  41d4f0:	sbb    BYTE PTR [edx],cl
  41d4f2:	adc    BYTE PTR [ecx],ch
  41d4f4:	pop    ds
  41d4f5:	or     al,BYTE PTR [eax]
  41d4f7:	jmp    0x2a3f5314
  41d4fc:	dec    edi
  41d4fd:	or     DWORD PTR [eax],eax
  41d4ff:	jmp    0x2951da4c
  41d504:	dec    edi
  41d505:	or     DWORD PTR [eax],edx
  41d507:	jmp    0xa94f5304
	...
  41d534:	fdivr  DWORD PTR [ebp-0x3]
  41d537:	jmp    0xa941df14
  41d53c:	dec    eax
  41d53d:	add    eax,0x548a900
  41d542:	adc    cl,ch
  41d544:	mov    eax,0xb8a91009
  41d549:	jge    0x41d548
  41d54b:	jmp    0xe941de98
  41d550:	dec    eax
  41d551:	or     DWORD PTR [eax],eax
  41d553:	test   eax,0xa9100548
  41d558:	dec    eax
  41d559:	or     DWORD PTR [eax],edx
  41d55b:	jmp    0xa94f52f8
  41d560:	cwde   
  41d561:	or     DWORD PTR [eax],eax
  41d563:	jmp    0xa941dab0
  41d568:	js     0x41d573
  41d56a:	add    cl,ch
  41d56c:	dec    eax
  41d56d:	add    eax,0x978e900
  41d572:	adc    cl,ch
  41d574:	pop    eax
  41d575:	jge    0x41d574
  41d577:	sub    DWORD PTR [edi+0x9],eax
  41d57a:	add    BYTE PTR [ecx],ch
  41d57c:	dec    edi
  41d57d:	add    eax,0x7d58e910
  41d582:	std    
  41d583:	add    BYTE PTR [edx+0x75],dh
  41d586:	add    DWORD PTR [eax],eax
  41d588:	xor    bh,BYTE PTR [ecx-0x3]
  41d58b:	punpckldq mm0,DWORD PTR ds:0x5620000
  41d592:	add    BYTE PTR [eax],dl
  41d594:	xor    cl,BYTE PTR [ecx]
  41d596:	add    al,0x10
	...
  41d5c0:	jb     0x41d5c7
  41d5c2:	add    al,0x10
  41d5c4:	and    cl,BYTE PTR [ecx]
  41d5c6:	add    BYTE PTR [eax],dl
  41d5c8:	and    cl,BYTE PTR [ecx]
  41d5ca:	add    al,0x0
  41d5cc:	xor    dh,BYTE PTR [ebp-0x3]
  41d5cf:	pslld  mm1,QWORD PTR [eax]
  41d5d2:	add    BYTE PTR [eax],al
  41d5d4:	and    dh,BYTE PTR [ebp+0x1]
  41d5d7:	adc    BYTE PTR [edx],ah
  41d5d9:	add    eax,0x8b20004
  41d5de:	add    BYTE PTR [eax],dl
  41d5e0:	repnz or BYTE PTR [eax+edx*1],al
  41d5e4:	loop   0x41d65e
  41d5e6:	std    
  41d5e7:	cpuid  
  41d5e9:	js     0x41d5e8
  41d5eb:	lss    ecx,FWORD PTR [eax]
  41d5ee:	add    BYTE PTR [eax],al
  41d5f0:	bnd js 0x41d5f4
  41d5f3:	adc    BYTE PTR [edx-0x5dfffe88],ah
  41d5f9:	js     0x41d5fc
  41d5fb:	add    dl,dh
  41d5fd:	js     0x41d5fc
  41d5ff:	push   edx
  41d601:	js     0x41d600
  41d603:	jmp    edx
  41d605:	or     BYTE PTR [eax+eax*1],al
  41d608:	mov    ds:0x72100008,al
  41d60d:	js     0x41d610
  41d60f:	adc    BYTE PTR [esi+0x37],dl
  41d612:	std    
  41d613:	jmp    DWORD PTR [edx+0x8]
  41d616:	add    BYTE PTR [eax],al
  41d618:	bound  ecx,QWORD PTR [eax]
  41d61a:	add    BYTE PTR [eax],al
  41d61c:	imul   BYTE PTR [esi]
  41d61e:	std    
  41d61f:	call   DWORD PTR [edx]
  41d621:	xor    ch,bh
  41d623:	inc    DWORD PTR [eax]
	...
  41d649:	add    BYTE PTR [eax],al
  41d64b:	add    BYTE PTR [ebx-0x76],cl
  41d64e:	sub    al,0xff
  41d650:	dec    esp
  41d651:	jb     0x41d654
  41d653:	add    BYTE PTR [ebx+0x72],cl
  41d656:	add    DWORD PTR [eax],eax
  41d658:	dec    ebx
  41d659:	fs sub bh,bh
  41d65c:	xor    al,0x7e
  41d65e:	sub    edi,edi
  41d660:	sub    al,0xa6
  41d662:	sub    al,0xff
  41d664:	and    al,0x72
  41d666:	add    DWORD PTR [eax],eax
  41d668:	dec    ebx
  41d669:	jb     0x41d66c
  41d66b:	add    BYTE PTR [ebx+0x76],cl
  41d66e:	sub    bh,bh
  41d670:	or     al,0x42
  41d672:	inc    DWORD PTR cs:[esi+esi*4]
  41d676:	sub    al,0xff
  41d678:	cld    
  41d679:	jno    0x41d67c
  41d67b:	add    BYTE PTR [ebx+0x72],cl
  41d67e:	add    DWORD PTR [eax],eax
  41d680:	dec    ebx
  41d681:	mov    ds:0x49e4ff27,al
  41d686:	sub    edi,edi
  41d688:	fsub   st(1),st
  41d68a:	sub    edi,edi
  41d68c:	aam    0x71
  41d68e:	add    DWORD PTR [eax],eax
  41d690:	dec    ebx
  41d691:	jb     0x41d694
  41d693:	add    BYTE PTR [ebx-0x2c],cl
  41d696:	es (bad) 
  41d698:	mov    esp,0xb4ff2de5
  41d69d:	jno    0x41d6c9
  41d69f:	jmp    FWORD PTR [ecx+esi*2+0x724b0001]
  41d6a6:	add    DWORD PTR [eax],eax
  41d6a8:	dec    ebx
  41d6a9:	inc    esi
  41d6aa:	and    edi,edi
  41d6ac:	xchg   esp,eax
  41d6ad:	in     eax,0x2d
  41d6af:	inc    DWORD PTR [eax]
	...
  41d6d5:	add    BYTE PTR [eax],al
  41d6d7:	add    BYTE PTR [ebp+ebx*2+0x7184ff2a],cl
  41d6de:	add    DWORD PTR [eax],eax
  41d6e0:	dec    ebx
  41d6e1:	jb     0x41d6e4
  41d6e3:	add    BYTE PTR [ebx-0x4],cl
  41d6e6:	and    bh,bh
  41d6e8:	ins    BYTE PTR es:[edi],dx
  41d6e9:	fldcw  WORD PTR ds:0xf0864ff
  41d6ef:	sub    ebx,DWORD PTR [ebx+edi*2-0x19]
  41d6f3:	add    ecx,DWORD PTR [ebx+0x9]
  41d6f6:	out    0x3,eax
  41d6f8:	dec    ebx
  41d6f9:	or     ebp,edx
  41d6fb:	and    eax,DWORD PTR [ebx+edi*2+0x7b]
  41d6ff:	sub    eax,0x2b137b3c
  41d704:	xor    al,0x7b
  41d706:	out    0x3,eax
  41d708:	dec    ebx
  41d709:	or     edi,esp
  41d70b:	add    ecx,DWORD PTR [ebx+0x9]
  41d70e:	shl    DWORD PTR [edx],1
  41d710:	sbb    al,0x7b
  41d712:	xchg   DWORD PTR ds:0x3e77b14,ebp
  41d718:	dec    ebx
  41d719:	or     edi,esp
  41d71b:	add    ecx,DWORD PTR [ebx+0x9]
  41d71e:	out    0x3,eax
  41d720:	dec    ebx
  41d721:	or     edi,esp
  41d723:	add    ecx,DWORD PTR [ebx+0x9]
  41d726:	out    0x3,eax
  41d728:	dec    ebx
  41d729:	or     DWORD PTR [ebx+0x2d],edi
  41d72c:	in     al,0x7a
  41d72e:	popa   
  41d72f:	sub    eax,0x2ce57adc
  41d734:	aam    0x7a
  41d736:	sti    
  41d737:	sub    al,0xcc
  41d739:	jp     0x41d742
  41d73b:	sub    eax,0x0
	...
  41d764:	les    edi,FWORD PTR [edx+0x13]
  41d767:	sub    eax,0x2d017abc
  41d76c:	mov    ah,0x7a
  41d76e:	mov    eax,ds:0x957aac2c
  41d773:	sub    al,0xa4
  41d775:	jp     0x41d702
  41d777:	sub    al,0x9c
  41d779:	jp     0x41d712
  41d77b:	sub    al,0x94
  41d77d:	jp     0x41d712
  41d77f:	sub    al,0x8c
  41d781:	jp     0x41d7fc
  41d783:	sub    al,0x84
  41d785:	jp     0x41d7dc
  41d787:	sub    al,0x7c
  41d789:	jp     0x41d7c6
  41d78b:	sub    al,0x74
  41d78d:	jp     0x41d78f
  41d78f:	sbb    ebx,DWORD PTR [edi]
  41d791:	jp     0x41d790
  41d793:	or     esi,DWORD PTR [edi]
  41d795:	jp     0x41d794
  41d797:	fnsave [eax]
  41d799:	jp     0x41d798
  41d79b:	in     eax,0x2c
  41d79d:	jp     0x41d79c
  41d79f:	jmp    DWORD PTR [edx+edi*2]
  41d7a2:	std    
  41d7a3:	pop    es
  41d7a4:	jae    0x41d820
  41d7a6:	std    
  41d7a7:	add    esi,DWORD PTR [ebx+0x7a]
  41d7aa:	std    
  41d7ab:	xor    DWORD PTR [ebx+0x7a],esp
  41d7ae:	std    
  41d7af:	adc    eax,0x3bfd7a63
  41d7b4:	jae    0x41d830
  41d7b6:	std    
  41d7b7:	ins    DWORD PTR es:[edi],dx
  41d7b8:	jae    0x41d834
  41d7ba:	std    
  41d7bb:	jns    0x41d820
  41d7bd:	jp     0x41d7bc
  41d7bf:	dec    ecx
  41d7c0:	arpl   WORD PTR [edx-0x3],di
  41d7c3:	cmp    eax,0xa9fd7a33
	...
  41d7f0:	xor    edi,DWORD PTR [edx-0x3]
  41d7f3:	cdq    
  41d7f4:	and    edi,DWORD PTR [edx-0x3]
  41d7f7:	mov    esp,DWORD PTR [ebx]
  41d7f9:	jp     0x41d7f8
  41d7fb:	jnp    0x41d830
  41d7fd:	jp     0x41d7fc
  41d7ff:	repz xor edi,DWORD PTR [edx-0x3]
  41d803:	pop    es
  41d804:	and    bh,BYTE PTR [edx-0x3]
  41d807:	pop    ss
  41d808:	and    bh,BYTE PTR [edx-0x3]
  41d80b:	mov    ds:0xd5fd7a73,eax
  41d810:	jae    0x41d88c
  41d812:	std    
  41d813:	bound  edi,QWORD PTR gs:[edx-0x3]
  41d817:	push   ebp
  41d818:	bound  edi,QWORD PTR [edx-0x3]
  41d81b:	xor    DWORD PTR [edx+0x7a],0x7a7267fd
  41d822:	std    
  41d823:	das    
  41d824:	bound  edi,QWORD PTR [edx-0x3]
  41d827:	aas    
  41d828:	bound  edi,QWORD PTR [edx-0x3]
  41d82b:	std    
  41d82c:	xor    edi,DWORD PTR [edx-0x3]
  41d82f:	add    BYTE PTR [esi+0x30],al
  41d832:	std    
  41d833:	jmp    FWORD PTR [edx+0x23]
  41d836:	std    
  41d837:	dec    DWORD PTR [eax-0x650002dd]
  41d83d:	and    edi,ebp
  41d83f:	call   FWORD PTR [edx]
  41d841:	and    edi,ebp
  41d843:	dec    DWORD PTR [edx]
  41d845:	and    edi,ebp
  41d847:	(bad)  
  41d848:	cld    
  41d849:	and    bh,ch
  41d84b:	push   DWORD PTR [edx]
  41d84d:	or     eax,0x2ea00000
  41d852:	std    
  41d853:	inc    DWORD PTR [eax]
	...
  41d879:	add    BYTE PTR [eax],al
  41d87b:	add    al,bl
  41d87d:	cs std 
  41d87f:	jmp    eax
  41d881:	cs std 
  41d883:	inc    eax
  41d885:	cs std 
  41d887:	call   eax
  41d889:	cs std 
  41d88b:	(bad)  
  41d88c:	mov    esp,0x22fffd2e
  41d891:	or     eax,0x30020000
  41d896:	std    
  41d897:	push   edx
  41d899:	or     al,0x0
  41d89b:	add    BYTE PTR [edx],bl
  41d89d:	xor    ch,bh
  41d89f:	(bad)  
  41d8a0:	mov    edx,0x46fffd2f
  41d8a5:	xor    ch,bh
  41d8a7:	dec    DWORD PTR [eax]
  41d8a9:	xor    ch,bh
  41d8ab:	(bad)  
  41d8ac:	cli    
  41d8ad:	das    
  41d8ae:	std    
  41d8af:	(bad)  
  41d8b0:	cli    
  41d8b1:	das    
  41d8b2:	std    
  41d8b3:	jmp    FWORD PTR [edx]
  41d8b5:	das    
  41d8b6:	std    
  41d8b7:	jmp    FWORD PTR [eax]
  41d8b9:	das    
  41d8ba:	std    
  41d8bb:	(bad)  
  41d8bc:	fsubr  DWORD PTR [edi]
  41d8be:	std    
  41d8bf:	jmp    DWORD PTR [edx+0x2f]
  41d8c2:	std    
  41d8c3:	push   DWORD PTR [edx+0x400000c]
  41d8c9:	das    
  41d8ca:	std    
  41d8cb:	jmp    DWORD PTR [edx+0x4b00000c]
  41d8d1:	sbb    al,0x26
  41d8d3:	inc    DWORD PTR [eax+ebx*2+0x627cff21]
  41d8da:	add    DWORD PTR [eax],eax
  41d8dc:	dec    ebx
  41d8dd:	mov    dl,0x21
  41d8df:	inc    DWORD PTR [eax]
	...
  41d905:	add    BYTE PTR [eax],al
  41d907:	add    BYTE PTR [esi+edi*4+0x21],ch
  41d90b:	jmp    DWORD PTR [edx+ebp*4+0x21]
  41d90f:	call   FWORD PTR [esi+esi*1+0x24]
  41d913:	call   DWORD PTR [eax+edi*1+0x24]
  41d917:	dec    DWORD PTR [esp+ecx*8+0x23]
  41d91b:	inc    DWORD PTR [edx+eiz*2+0x1]
  41d91f:	add    BYTE PTR [ebx-0x1c],cl
  41d922:	and    edi,edi
  41d924:	xor    al,0xe8
  41d926:	and    edi,edi
  41d928:	sub    al,0xe0
  41d92a:	and    edi,edi
  41d92c:	and    al,0x8a
  41d92e:	and    al,0xff
  41d930:	sbb    al,0xd4
  41d932:	and    edi,edi
  41d934:	adc    al,0xa2
  41d936:	and    al,0xff
  41d938:	or     al,0xaa
  41d93a:	and    al,0xff
  41d93c:	add    al,0xb4
  41d93e:	and    al,0xff
  41d940:	cld    
  41d941:	stos   DWORD PTR es:[edi],eax
  41d942:	and    al,0xff
  41d944:	hlt    
  41d945:	cdq    
  41d946:	and    al,0xff
  41d948:	in     al,dx
  41d949:	popa   
  41d94a:	add    DWORD PTR [eax],eax
  41d94c:	dec    ebx
  41d94d:	fs and bh,bh
  41d950:	fdiv   QWORD PTR [edi+0x22]
  41d953:	call   esp
  41d955:	popa   
  41d956:	add    DWORD PTR [eax],eax
  41d958:	dec    ebx
  41d959:	into   
  41d95a:	sub    edi,edi
  41d95c:	(bad)  
  41d95d:	fld    TBYTE PTR [ecx]
  41d95f:	(bad)  
  41d960:	mov    esp,0xb4ff2867
  41d965:	pop    ebp
  41d966:	sub    bh,bh
  41d968:	lods   al,BYTE PTR ds:[esi]
  41d969:	add    DWORD PTR [edi],esp
  41d96b:	inc    DWORD PTR [eax]
	...
  41d991:	add    BYTE PTR [eax],al
  41d993:	add    BYTE PTR [ebp+esi*2+0x89cff28],ah
  41d99a:	loope  0x41d9c4
  41d99c:	xchg   esp,eax
  41d99d:	ja     0x41d950
  41d99f:	sub    BYTE PTR [edi+esi*2+0x778428bd],cl
  41d9a6:	sub    DWORD PTR [eax],0x7c
  41d9a9:	ja     0x41da22
  41d9ab:	sub    BYTE PTR [edi+esi*2+0x7b],dh
  41d9af:	sub    BYTE PTR [edi+esi*2+0x59],ch
  41d9b3:	sub    DWORD PTR [edi+esi*2+0x3d],esp
  41d9b7:	sub    DWORD PTR [edi+esi*2-0x5d],ebx
  41d9bb:	sub    BYTE PTR [edi+esi*2-0x47],dl
  41d9bf:	sub    BYTE PTR [edi+esi*2-0x37],cl
  41d9c3:	sub    BYTE PTR [edi+esi*2-0x2d],al
  41d9c7:	sub    BYTE PTR [edi+esi*2],bh
  41d9ca:	jmp    0x41d9f3
  41d9cc:	xor    al,0x77
  41d9ce:	aad    0x27
  41d9d0:	sub    al,0x77
  41d9d2:	or     eax,0xf1772428
  41d9d7:	daa    
  41d9d8:	sbb    al,0x77
  41d9da:	das    
  41d9db:	sub    BYTE PTR [edi+esi*2],dl
  41d9de:	cmp    ebp,DWORD PTR [eax]
  41d9e0:	or     al,0x77
  41d9e2:	sbb    DWORD PTR [eax],ebp
  41d9e4:	add    al,0x77
  41d9e6:	arpl   WORD PTR [edi],sp
  41d9e8:	cld    
  41d9e9:	jbe    0x41da42
  41d9eb:	daa    
  41d9ec:	hlt    
  41d9ed:	jbe    0x41da36
  41d9ef:	daa    
  41d9f0:	in     al,dx
  41d9f1:	jbe    0x41da36
  41d9f3:	daa    
  41d9f4:	in     al,0x76
  41d9f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9f7:	daa    
	...
  41da20:	fdiv   QWORD PTR [esi+0x37]
  41da23:	daa    
  41da24:	aam    0x76
  41da26:	dec    ecx
  41da27:	daa    
  41da28:	int3   
  41da29:	jbe    0x41da84
  41da2b:	daa    
  41da2c:	les    esi,FWORD PTR [esi-0x1f]
  41da2f:	es mov esp,0xb4270d76
  41da35:	jbe    0x41da34
  41da37:	lods   al,BYTE PTR es:[esi]
  41da39:	jbe    0x41da3b
  41da3b:	mov    ds:0xbdfd766d,eax
  41da40:	gs jbe 0x41da40
  41da43:	ins    DWORD PTR es:[edi],dx
  41da44:	ins    DWORD PTR es:[edi],dx
  41da45:	jbe    0x41da44
  41da47:	jge    0x41daae
  41da49:	jbe    0x41da48
  41da4b:	inc    ecx
  41da4c:	sub    eax,0x254ffd76
  41da51:	jbe    0x41da50
  41da53:	aaa    
  41da54:	sub    eax,0x2517fd76
  41da59:	jbe    0x41da58
  41da5b:	add    eax,0xedfd762d
  41da60:	es jbe 0x41da60
  41da63:	add    DWORD PTR [ecx+0x77],ebp
  41da66:	std    
  41da67:	adc    ebp,DWORD PTR [ecx+0x77]
  41da6a:	std    
  41da6b:	adc    DWORD PTR [ecx],ebp
  41da6d:	ja     0x41da6c
  41da6f:	and    DWORD PTR [ecx],ebp
  41da71:	ja     0x41da70
  41da73:	and    DWORD PTR [ecx],ebp
  41da75:	ja     0x41da74
  41da77:	inc    edi
  41da78:	sub    DWORD PTR [edi-0x3],esi
  41da7b:	jmp    0x5b41e3c8
  41da80:	sub    DWORD PTR [edi-0x3],esi
  41da83:	push   ebx
	...
  41daac:	sub    DWORD PTR [edi-0x3],esi
  41daaf:	stos   DWORD PTR es:[edi],eax
  41dab0:	sub    DWORD PTR [edi-0x3],esi
  41dab3:	mov    ebx,0x8bfd76e9
  41dab8:	jmp    0xe9c1d833
  41dabd:	jbe    0x41dabc
  41dabf:	jmp    0xd941e40c
  41dac4:	jmp    0x492bd83f
  41dac9:	or     DWORD PTR [eax],eax
  41dacb:	adc    eax,ebp
  41dacd:	jbe    0x41dacc
  41dacf:	and    eax,ebp
  41dad1:	jbe    0x41dad0
  41dad3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dad4:	test   eax,0xa9b3fd76
  41dad9:	jbe    0x41dad8
  41dadb:	add    BYTE PTR [edx-0x75000196],bl
  41dae1:	push   0xfffffffe
  41dae3:	jmp    FWORD PTR [edx]
  41dae5:	push   0xfffffffe
  41dae7:	(bad)  
  41dae8:	clc    
  41dae9:	imul   edi,esi,0xfe69f8ff
  41daef:	jmp    DWORD PTR [edx+0x6a]
  41daf2:	(bad)  
  41daf3:	push   DWORD PTR [edx+0x9]
  41daf6:	add    BYTE PTR [eax],al
  41daf8:	sub    al,0x6a
  41dafa:	(bad)  
  41dafb:	jmp    DWORD PTR [edx+0x9]
  41dafe:	add    BYTE PTR [eax],al
  41db00:	dec    eax
  41db01:	push   0xfffffffe
  41db03:	jmp    FWORD PTR [ecx+ebp*2-0x2]
  41db07:	push   DWORD PTR [edx+0x9]
  41db0a:	add    BYTE PTR [eax],al
  41db0c:	xor    ch,BYTE PTR [ebp-0x2]
  41db0f:	inc    DWORD PTR [eax]
	...
  41db35:	add    BYTE PTR [eax],al
  41db37:	add    BYTE PTR [esi],ch
  41db39:	ins    DWORD PTR es:[edi],dx
  41db3a:	(bad)  
  41db3b:	jmp    FWORD PTR [edx+0x6d]
  41db3e:	(bad)  
  41db3f:	push   DWORD PTR [esi+0x6d]
  41db42:	(bad)  
  41db43:	jmp    FWORD PTR [ebp+ebp*2-0x2]
  41db47:	call   FWORD PTR [eax+0x32fffe6d]
  41db4d:	or     DWORD PTR [eax],eax
  41db4f:	add    BYTE PTR [eax-0x63000198],dh
  41db55:	push   0x688cfffe
  41db5a:	(bad)  
  41db5b:	dec    DWORD PTR [edx-0x5f000198]
  41db61:	push   0x68a2fffe
  41db66:	(bad)  
  41db67:	(bad)  
  41db68:	mov    edx,0xc0fffe68
  41db6d:	push   0x68b8fffe
  41db72:	(bad)  
  41db73:	(bad)  
  41db74:	jp     0x41dbde
  41db76:	(bad)  
  41db77:	jmp    edx
  41db79:	or     BYTE PTR [eax],al
  41db7b:	add    BYTE PTR [ebx+0x60],cl
  41db7e:	in     al,0xfe
  41db80:	mov    esp,0xb4fee47c
  41db85:	bound  eax,QWORD PTR [ecx]
  41db87:	add    BYTE PTR [ebx+0x75],cl
  41db8a:	add    DWORD PTR [ecx+0x19],eax
  41db8d:	inc    ebp
  41db8e:	in     al,0x73
  41db90:	lods   al,BYTE PTR es:[esi]
  41db92:	in     al,dx
  41db93:	imul   ebp,DWORD PTR [esi],0xffffffa1
  41db96:	add    DWORD PTR [edi],edi
  41db98:	dec    ecx
  41db99:	mov    al,0xe8
  41db9b:	pop    esi
	...
  41dbc4:	out    dx,eax
  41dbc5:	mov    ds:0x61e66bec,eax
  41dbca:	add    DWORD PTR [ecx],esp
  41dbcc:	dec    ebx
  41dbcd:	lahf   
  41dbce:	in     eax,dx
  41dbcf:	ins    BYTE PTR es:[edi],dx
  41dbd0:	clc    
  41dbd1:	mov    ecx,cs
  41dbd3:	pop    esi
  41dbd4:	cmc    
  41dbd5:	test   ebp,ebp
  41dbd7:	bound  ecx,QWORD PTR [ebx+0x77]
  41dbda:	add    al,0x55
  41dbdc:	(bad)  
  41dbde:	mul    DWORD PTR [edx+0x5]
  41dbe1:	(bad)  
  41dbe3:	bound  ecx,QWORD PTR [ebx+0x7d]
  41dbe6:	add    al,0x6c
  41dbe8:	mov    eax,0xae6bf5de
  41dbed:	fadd   st(0),st
  41dbef:	jmp    FWORD PTR [edx+esi*8]
  41dbf2:	add    BYTE PTR [ebp-0x49],al
  41dbf5:	retf   
  41dbf6:	in     eax,0x5e
  41dbf8:	scas   eax,DWORD PTR es:[edi]
  41dbf9:	push   ss
  41dbfa:	out    dx,eax
  41dbfb:	pusha  
  41dbfc:	mov    al,ds:0x4ab50162
  41dc01:	sub    esi,eax
  41dc03:	ins    BYTE PTR es:[edi],dx
  41dc04:	imul   eax,DWORD PTR [ecx],0x766d52f0
  41dc0a:	lock pusha 
  41dc0c:	pusha  
  41dc0d:	bound  eax,QWORD PTR [ecx]
  41dc0f:	hlt    
  41dc10:	dec    edx
  41dc11:	es out dx,eax
  41dc13:	pusha  
  41dc14:	push   0xe
  41dc16:	retf   0x6671
  41dc19:	or     eax,0x94af004
  41dc1e:	mov    bl,0xf0
  41dc20:	imul   ebp,edx,0xffffffca
  41dc23:	ret    0xe530
  41dc26:	(bad)
	...
  41dc4d:	add    BYTE PTR [eax],al
  41dc4f:	add    BYTE PTR [ebx+esi*2-0x7d8fb10],bh
  41dc56:	mov    edx,0xbff92bf5
  41dc5b:	ret    0x73a4
  41dc5e:	fiadd  DWORD PTR [edi+ebp*1]
  41dc61:	clc    
  41dc62:	mov    dl,0xf5
  41dc64:	sub    ebp,edx
  41dc66:	call   0xe02:0xf6738cc2
  41dc6d:	out    dx,al
  41dc6e:	call   0xf8c2:0x83e4e5c9
  41dc75:	cld    
  41dc76:	js     0x41dc62
  41dc78:	jmp    0xe6c9:0xdbe672fd
  41dc7f:	add    eax,eax
  41dc81:	or     BYTE PTR [ebx+edi*8-0x17ab161c],ah
  41dc88:	or     ebx,esp
  41dc8a:	push   esp
  41dc8b:	jmp    0x41dc47
  41dc8d:	loop   0x41dcd3
  41dc8f:	out    dx,eax
  41dc90:	test   eax,0xb8d552e3
  41dc95:	test   DWORD PTR [edi-0xe],0x427f6a7
  41dc9c:	inc    edi
  41dc9d:	or     BYTE PTR [esi],ch
  41dc9f:	out    0x98,eax
  41dca1:	retf   
  41dca2:	aas    
  41dca3:	lock test eax,0xa9fe0fd6
  41dca9:	or     ebp,ebx
  41dcab:	add    ecx,DWORD PTR [edx+0x78e30bf7]
  41dcb1:	in     al,dx
  41dcb2:	and    al,0xeb
	...
  41dcdc:	pusha  
  41dcdd:	in     al,dx
  41dcde:	xor    esp,ebx
  41dce0:	pop    esp
  41dce1:	stc    
  41dce2:	pslld  mm5,QWORD PTR [edi-0x38]
  41dce6:	(bad)  
  41dce7:	call   0x1c43e634
  41dcec:	call   0xe61232d3
  41dcf1:	std    
  41dcf2:	dec    esp
  41dcf3:	(bad)  
  41dcf4:	xchg   edx,eax
  41dcf5:	jmp    0x41dd62
  41dcf7:	int3   
  41dcf8:	dec    eax
  41dcf9:	pop    eax
  41dcfa:	add    dh,BYTE PTR [edx+edi*4-0x6d46a121]
  41dd01:	jmp    0x41dd65
  41dd03:	mov    dh,0x7b
  41dd05:	in     al,dx
  41dd06:	inc    ebp
  41dd07:	shr    BYTE PTR [edi+eiz*8-0x3ab6bd01],0x6c
  41dd0f:	mov    BYTE PTR [esi+edi*4-0x2c81749a],ah
  41dd16:	jno    0x41dca8
  41dd18:	mov    DWORD PTR [edx-0x3],esi
  41dd1b:	mov    edx,0x7d62cc49
  41dd20:	cwde   
  41dd21:	clc    
  41dd22:	ins    BYTE PTR es:[edi],dx
  41dd23:	mov    cl,BYTE PTR [ecx+0x657b63e6]
  41dd29:	stc    
  41dd2a:	jo     0x41dd15
  41dd2c:	dec    eax
  41dd2d:	(bad)  
  41dd2e:	jmp    FWORD PTR ds:0x4453f662
  41dd34:	cmp    ah,dl
  41dd36:	dec    edi
  41dd37:	dec    eax
  41dd38:	inc    ebx
  41dd39:	jmp    0x2a00:0x3648e93e
	...
  41dd68:	cmp    edi,esp
  41dd6a:	pop    esi
  41dd6b:	xor    eax,0x3b66c632
  41dd70:	xor    ch,cl
  41dd72:	jae    0x41ddb2
  41dd74:	sbb    ebx,edi
  41dd76:	ds jmp 0x2541c7c4
  41dd7c:	repnz frstor [edx+0x1d]
  41dd80:	repnz retf 
  41dd82:	data16 std 
  41dd84:	jecxz  0x41ddb8
  41dd86:	add    BYTE PTR [eax],al
  41dd88:	loop   0x41dd96
  41dd8a:	inc    ebx
  41dd8b:	fiadd  WORD PTR gs:[esi+0x72]
  41dd8f:	jb     0x41dd71
  41dd91:	pusha  
  41dd92:	imul   esi,DWORD PTR [edx+esi*1+0x77],0x6c
  41dd97:	arpl   di,di
  41dd99:	jbe    0x41de0b
  41dd9b:	add    BYTE PTR [edx],ah
  41dd9d:	pop    es
  41dd9e:	push   ebx
  41dd9f:	imul   ecx,DWORD PTR [esi-0x7c97bfa0],0xf76f5177
  41dda9:	jo     0x41de14
  41ddab:	je     0x41de28
  41ddad:	inc    edi
  41ddae:	jbe    0x41de24
  41ddb0:	pop    DWORD PTR ds:0x64ec00ad
  41ddb6:	imul   esp,DWORD PTR [esp+ebx*8+0x64],0x6f
  41ddbb:	jae    0x41dd9b
  41ddbd:	dec    ebx
  41ddbe:	data16 ins BYTE PTR es:[edi],dx
  41ddc0:	iret   
  41ddc1:	dec    esp
  41ddc2:	std    
  41ddc3:	(bad)  
  41ddc4:	jge    0x41ddcc
  41ddc6:	ins    BYTE PTR es:[edi],dx
  41ddc7:	jae    0x41ddb7
  41ddc9:	ja     0x41de2b
  41ddcb:	ins    DWORD PTR es:[edi],dx
	...
  41ddf4:	loop   0x41de5a
  41ddf6:	add    BYTE PTR ds:[eax],bl
  41ddf9:	or     eax,0x69d46946
  41ddfe:	dec    ebx
  41ddff:	gs jmp 0x3e62:0x96694370
  41de07:	add    bh,al
  41de09:	or     al,0x46
  41de0b:	imul   esi,DWORD PTR [ecx+eiz*2+0x40],0x627c956c
  41de13:	add    BYTE PTR [esi],bl
  41de15:	push   es
  41de16:	inc    ebx
  41de17:	gs pop esi
  41de19:	pop    edx
  41de1a:	ins    BYTE PTR es:[edi],dx
  41de1b:	fs pop edi
  41de1d:	jns    0x41de81
  41de1f:	dec    eax
  41de20:	inc    ebx
  41de21:	pop    edi
  41de22:	popa   
  41de23:	ins    BYTE PTR es:[edi],dx
  41de24:	dec    edi
  41de25:	inc    esi
  41de26:	std    
  41de27:	dec    DWORD PTR [ebx-0x10]
  41de2a:	add    eax,DWORD PTR [ebp+0x6e]
  41de2d:	push   ss
  41de2e:	(bad)  
  41de2f:	bound  edi,QWORD PTR [ecx+0x73]
  41de32:	in     al,dx
  41de33:	ins    BYTE PTR es:[edi],dx
  41de34:	jne    0x41de5b
  41de36:	cld    
  41de37:	ds dec ebx
  41de39:	dec    esp
  41de3a:	add    al,0x45
  41de3c:	outs   dx,BYTE PTR ds:[esi]
  41de3d:	jbe    0x41de0c
  41de3f:	ins    BYTE PTR es:[edi],dx
  41de40:	push   0x1262ed41
  41de45:	inc    eax
  41de46:	jecxz  0x41deb4
  41de48:	or     ah,BYTE PTR [edx+0x1]
  41de4b:	je     0x41de97
  41de4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de4e:	call   0xf28af6c6
  41de53:	jae    0x41de83
  41de55:	cmp    eax,0x6dcc
	...
  41de7e:	add    BYTE PTR [eax],al
  41de80:	and    eax,0x4aa00147
  41de85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de86:	call   0xebdad2fe
  41de8b:	arpl   sp,si
  41de8d:	xchg   esi,eax
  41de8e:	repnz inc ebx
  41de90:	repnz xchg ebx,eax
  41de92:	call   0xef30ddf7
  41de97:	jbe    0x41dea3
  41de99:	bound  eax,QWORD PTR [ecx]
  41de9b:	dec    ebp
  41de9c:	dec    edx
  41de9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de9e:	call   0xec35da16
  41dea3:	jne    0x41de8f
  41dea5:	cmc    
  41dea6:	out    0x4f,eax
  41dea8:	(bad)  
  41deaa:	in     eax,0x66
  41deac:	mov    bh,0xc5
  41deae:	into   
  41deaf:	jae    0x41de6a
  41deb1:	leave  
  41deb2:	in     eax,dx
  41deb3:	mov    ah,BYTE PTR fs:[edx+0x1]
  41deb7:	jp     0x41df02
  41deb9:	adc    esp,ebp
  41debb:	jae    0x41de45
  41debd:	xor    eax,0xc8a671f2
  41dec2:	test   DWORD PTR [ebx-0x5e],0x9760e534
  41dec9:	or     DWORD PTR [esi],edx
  41decb:	bnd jge 0x41de98
  41dece:	out    0x3,al
  41ded0:	pop    eax
  41ded1:	or     al,0x3
  41ded3:	icebp  
  41ded4:	js     0x41ded1
  41ded6:	or     edi,ebp
  41ded8:	pop    esp
  41ded9:	retf   0x3e6
  41dedc:	xchg   edi,eax
  41dedd:	or     ah,BYTE PTR [esi]
  41dedf:	out    0x58,eax
  41dee1:	fprem  
  41dee3:	jmp    0x0:0x0
	...
  41df0a:	add    BYTE PTR [eax],al
  41df0c:	pop    esi
  41df0d:	jmp    0xe5d5:0xfb7ce6f2
  41df14:	sub    eax,0x29d0c3dd
  41df19:	in     al,dx
  41df1a:	(bad)  
  41df1c:	daa    
  41df1d:	fistp  WORD PTR [edx+eiz*8-0x3d4619df]
  41df24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df25:	outs   dx,DWORD PTR ds:[esi]
  41df26:	mov    al,0x2
  41df28:	push   es
  41df29:	out    0xba,al
  41df2b:	rcr    DWORD PTR [edx],cl
  41df2d:	loop   0x41dee3
  41df2f:	loop   0x41df49
  41df31:	out    0xb6,al
  41df33:	icebp  
  41df34:	mul    esi
  41df36:	(bad)  
  41df37:	out    dx,eax
  41df38:	jmp    0x363963fe
  41df3d:	or     DWORD PTR ds:0x7ae60604,ecx
  41df43:	rcr    cl,0xfa
  41df46:	js     0x41df2e
  41df48:	out    dx,al
  41df49:	hlt    
  41df4a:	stos   BYTE PTR es:[edi],al
  41df4b:	jmp    0xfadf:0xf789e5da
  41df52:	pop    edi
  41df53:	ret    
  41df54:	inc    esp
  41df55:	outs   dx,DWORD PTR ds:[esi]
  41df56:	std    
  41df57:	add    BYTE PTR [edi-0x5f0da506],ch
  41df5d:	in     al,0x3c
  41df5f:	aad    0x2c
  41df61:	outs   dx,DWORD PTR ds:[esi]
  41df62:	hlt    
  41df63:	add    DWORD PTR [eax-0x5a07b50c],edx
  41df69:	retf   
  41df6a:	jmp    FWORD PTR [edi]
  41df6c:	adc    ebp,esp
  41df6e:	push   ebx
  41df6f:	add    BYTE PTR ds:[eax],al
	...
  41df96:	add    BYTE PTR [eax],al
  41df98:	mul    bh
  41df9a:	arpl   WORD PTR [edx+ecx*1],cx
  41df9d:	out    0x5e,eax
  41df9f:	sbb    eax,DWORD PTR [edi-0x7e]
  41dfa2:	jmp    FWORD PTR ds:0x53faec
  41dfa8:	jmp    0x73dc:0xdc1640e1
  41dfaf:	jmp    0x1a448ffc
  41dfb4:	fucomi st,st(3)
  41dfb6:	(bad)  
  41dfb7:	stc    
  41dfb8:	dec    eax
  41dfb9:	cmp    edi,edi
  41dfbb:	lods   eax,DWORD PTR ds:[esi]
  41dfbc:	lods   eax,DWORD PTR ds:[esi]
  41dfbd:	cli    
  41dfbe:	dec    edx
  41dfbf:	into   
  41dfc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dfc1:	sti    
  41dfc2:	imul   ecx,esp,0xffffff8e
  41dfc5:	out    0x6b,eax
  41dfc7:	les    edi,FWORD PTR [esi-0x31]
  41dfca:	push   0xffffffcc
  41dfcc:	mov    DWORD PTR [esi-0x3],ebp
  41dfcf:	adc    DWORD PTR [eax-0x3c],ecx
  41dfd2:	bound  edi,QWORD PTR [ebp-0x4a8f307c]
  41dfd8:	test   eax,edi
  41dfda:	jno    0x41df72
  41dfdc:	jp     0x41e04c
  41dfde:	std    
  41dfdf:	ror    BYTE PTR [eax-0x38],0x71
  41dfe3:	mov    WORD PTR [ecx-0x6],gs
  41dfe6:	bound  esi,QWORD PTR [ebp-0x6e9422a1]
  41dfec:	ins    DWORD PTR es:[edi],dx
  41dfed:	loop   0x41e05e
  41dfef:	mov    edx,0x886dd81a
  41dff4:	pop    eax
  41dff5:	stc    
  41dff6:	addr16 jle 0x41e04d
  41dff9:	outs   dx,BYTE PTR ds:[esi]
  41dffa:	std    
  41dffb:	or     al,0x0
	...
  41e021:	add    BYTE PTR [eax],al
  41e023:	add    BYTE PTR [ebp-0x27],cl
  41e026:	jno    0x41e076
  41e028:	and    al,0xeb
  41e02a:	jo     0x41e086
  41e02c:	jl     0x41e069
  41e02e:	inc    esi
  41e02f:	inc    eax
  41e030:	xor    eax,0x320073f9
  41e035:	or     bl,BYTE PTR [eax]
  41e037:	add    ch,BYTE PTR [ebp+0x75]
  41e03a:	bound  ebp,QWORD PTR [esi+0x32]
  41e03d:	ja     0x41e0ab
  41e03f:	arpl   WORD PTR [edi+0x15007076],ax
  41e045:	add    al,0x50
  41e047:	jb     0x41e096
  41e049:	bound  si,DWORD PTR [ebx+0x51]
  41e04d:	xor    cl,BYTE PTR ss:[esi+0x47]
  41e051:	ins    DWORD PTR es:[edi],dx
  41e052:	jno    0x41e054
  41e054:	aad    0x3
  41e056:	dec    esp
  41e057:	inc    ebx
  41e058:	das    
  41e059:	fs ins DWORD PTR es:[edi],dx
  41e05b:	push   ebx
  41e05c:	(bad)  
  41e05d:	jae    0x41e0c5
  41e05f:	outs   dx,BYTE PTR ds:[esi]
  41e060:	inc    ebp
  41e061:	inc    esp
  41e062:	std    
  41e063:	dec    ecx
  41e065:	add    al,0x41
  41e067:	js     0x41e004
  41e069:	pop    ebp
  41e06a:	dec    ebp
  41e06b:	jb     0x41dffa
  41e06d:	bound  si,DWORD PTR [ebx-0x6f]
  41e071:	or     DWORD PTR [ebp+0x7168c102],ebp
  41e077:	push   ebp
  41e078:	mov    WORD PTR [ecx+0x5e],fs
  41e07b:	outs   dx,BYTE PTR ds:[esi]
  41e07c:	xchg   BYTE PTR [ebp+0x62],ah
  41e07f:	fs out 0x71,eax
  41e082:	pusha  
  41e083:	gs loop 0x41e0e3
  41e086:	outs   dx,WORD PTR ds:[esi]
	...
  41e0b0:	int3   
  41e0b1:	inc    edi
  41e0b2:	data16 ins BYTE PTR es:[edi],dx
  41e0b4:	(bad)  
  41e0b5:	push   0x68c9006f
  41e0ba:	outs   dx,DWORD PTR ds:[esi]
  41e0bb:	outs   dx,BYTE PTR ds:[esi]
  41e0bc:	xlat   BYTE PTR ds:[ebx]
  41e0bd:	xor    BYTE PTR gs:[edx],dh
  41e0c0:	mov    WORD PTR [ebp+0x69],cs
  41e0c3:	ins    BYTE PTR es:[edi],dx
  41e0c4:	bound  ecx,QWORD PTR [ecx]
  41e0c6:	xchg   DWORD PTR [eax],eax
  41e0c8:	mov    eax,ds:0xa6616273
  41e0cd:	push   0x50
  41e0cf:	je     0x41e071
  41e0d1:	push   0x5e
  41e0d3:	ins    DWORD PTR es:[edi],dx
  41e0d4:	dec    ebx
  41e0d5:	and    ebp,edx
  41e0d7:	inc    edi
  41e0d8:	test   BYTE PTR [esi],ch
  41e0da:	jmp    0x4188b40
  41e0df:	xchg   ebp,eax
  41e0e0:	dec    ebx
  41e0e1:	and    ebx,edi
  41e0e3:	jae    0x41e068
  41e0e5:	sbb    ebp,eax
  41e0e7:	ins    BYTE PTR es:[edi],dx
  41e0e8:	test   eax,0x7945e7c1
  41e0ed:	adc    esp,edi
  41e0ef:	push   eax
  41e0f0:	ja     0x41e102
  41e0f2:	fistp  WORD PTR [esi+0x66]
  41e0f5:	bound  eax,QWORD PTR [ecx]
  41e0f7:	push   cs
  41e0f8:	dec    ebx
  41e0f9:	pop    ds
  41e0fa:	jmp    0xe33f3a3f
  41e0ff:	jae    0x41e167
  41e101:	and    ebp,edi
  41e103:	outs   dx,WORD PTR ds:[esi]
  41e105:	bound  eax,QWORD PTR [ecx]
  41e107:	pusha  
  41e108:	dec    ebx
  41e109:	pop    ds
  41e10a:	jmp    0xee910b62
  41e10f:	dec    edx
  41e110:	es cmp eax,0x71bf
	...
  41e13a:	add    BYTE PTR [eax],al
  41e13c:	cs cmp eax,0x9f4b0d01
  41e142:	jmp    0x2673:0xe43d1940
  41e149:	mov    ecx,0x411f70e7
  41e14e:	out    0x60,eax
  41e150:	bound  eax,QWORD PTR es:[ecx]
  41e153:	icebp  
  41e154:	dec    ebx
  41e155:	mov    bl,0xe5
  41e157:	bound  edx,QWORD PTR [edx]
  41e159:	jl     0x41e147
  41e15b:	jae    0x41e13f
  41e15d:	and    ch,0x66
  41e160:	icebp  
  41e161:	test   BYTE PTR [ecx],al
  41e163:	ins    DWORD PTR es:[edi],dx
  41e164:	idiv   DWORD PTR [esi+esi*1+0x32]
  41e168:	sub    eax,0x4b6be586
  41e16d:	cmc    
  41e16e:	add    dh,BYTE PTR [ebp-0x28]
  41e171:	icebp  
  41e172:	repnz data16 mov ch,0x9
  41e176:	pop    ebx
  41e177:	loop   0x41e1f6
  41e179:	or     DWORD PTR [ebp+esi*8-0x57],edx
  41e17d:	neg    DWORD PTR [ecx]
  41e17f:	ss pop ebp
  41e181:	in     eax,0x3a
  41e183:	call   0x3d94dac
  41e188:	jns    0x41e170
  41e18a:	inc    ebp
  41e18b:	leave  
  41e18c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e18d:	out    0x44,al
  41e18f:	int    0xa9
  41e191:	repnz and edi,esp
  41e194:	inc    ebp
  41e195:	or     ecx,eax
  41e197:	add    ebx,DWORD PTR [ecx+0x79d305e6]
  41e19d:	out    0x18,al
  41e19f:	sti    
	...
  41e1c8:	xchg   esi,eax
  41e1c9:	jmp    0xc2fe:0xc669eefa
  41e1d0:	fsubr  QWORD PTR [ebx+0x36]
  41e1d3:	add    edi,DWORD PTR [ecx-0x1a]
  41e1d6:	or     eax,0xf9dc60c5
  41e1db:	ficom  WORD PTR [ebx]
  41e1dd:	out    0xdf,al
  41e1df:	add    ecx,DWORD PTR [esi+0x2fdeb909]
  41e1e5:	mov    esp,0xc01eded6
  41e1ea:	ret    
  41e1eb:	cli    
  41e1ec:	or     DWORD PTR gs:[ebx],ebp
  41e1ef:	add    edi,ecx
  41e1f1:	in     eax,0xc5
  41e1f3:	mov    esi,0xccc3f626
  41e1f8:	sub    edx,esi
  41e1fa:	mov    ds:0x610945fb,eax
  41e1ff:	add    ebx,DWORD PTR [ecx]
  41e201:	out    0x85,al
  41e203:	(bad)  
  41e204:	cli    
  41e205:	in     eax,0x87
  41e207:	out    dx,eax
  41e208:	jmp    0x263c65cc
  41e20d:	or     DWORD PTR [esi],ecx
  41e20f:	add    edi,ecx
  41e211:	in     eax,0x85
  41e213:	aam    0xe9
  41e215:	hlt    
  41e216:	call   FWORD PTR [esi-0x7b8d2097]
  41e21c:	add    eax,0x48e93ef3
  41e221:	inc    esp
  41e222:	(bad)  
  41e223:	cmp    dl,BYTE PTR [esi+eiz*8]
  41e226:	inc    edx
  41e227:	inc    edi
  41e228:	sbb    al,0xe0
  41e22a:	push   ebp
  41e22b:	dec    eax
	...
  41e254:	xor    edi,eax
  41e256:	bound  ebp,QWORD PTR [eax]
  41e258:	inc    edi
  41e259:	cmp    edi,edi
  41e25b:	sbb    dh,ah
  41e25d:	in     eax,0x4c
  41e25f:	cmp    esp,ebp
  41e261:	fadd   QWORD PTR [eax+0x34]
  41e264:	std    
  41e265:	clc    
  41e266:	bound  edx,QWORD PTR [edi]
  41e268:	sti    
  41e269:	xlat   BYTE PTR ds:[ebx]
  41e26a:	jo     0x41e270
  41e26c:	std    
  41e26d:	push   0xfffffffd
  41e26f:	repnz dec ecx
  41e271:	les    esp,FWORD PTR [edx+0x15]
  41e274:	adc    al,0xfa
  41e276:	(bad)  
  41e277:	sti    
  41e278:	adc    cl,ah
  41e27a:	push   0x4
  41e27c:	or     BYTE PTR [ebx-0x3],ch
  41e27f:	or     bl,ch
  41e281:	hlt    
  41e282:	pop    esi
  41e283:	stc    
  41e284:	mov    cl,0x39
  41e286:	xor    dl,BYTE PTR [edi]
  41e288:	stos   DWORD PTR es:[edi],eax
  41e289:	fisubr WORD PTR [ebx-0x17]
  41e28c:	dec    eax
  41e28d:	push   edx
  41e28e:	add    BYTE PTR [edx-0x42941860],bh
  41e294:	in     eax,0xf2
  41e296:	(bad)  
  41e297:	retf   0xf6ad
  41e29a:	bound  ebp,QWORD PTR [eax-0x339807b8]
  41e2a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2a1:	fidiv  WORD PTR [eax]
  41e2a3:	sti    
  41e2a4:	xor    ah,ch
  41e2a6:	imul   edx,DWORD PTR [ebp-0x50000db8],0x62
  41e2ad:	mul    BYTE PTR [edx-0x65]
  41e2b0:	(bad)  
  41e2b1:	out    0x73,eax
  41e2b3:	stos   BYTE PTR es:[edi],al
  41e2b4:	pop    esi
  41e2b5:	retf   
  41e2b6:	pusha  
	...
  41e2df:	add    BYTE PTR [ecx-0x5c9390c5],bh
  41e2e5:	push   es
  41e2e6:	ja     0x41e2e8
  41e2e8:	stos   DWORD PTR es:[edi],eax
  41e2e9:	pusha  
  41e2ea:	jno    0x41e351
  41e2ec:	shl    BYTE PTR [eax+0x62],0x74
  41e2f0:	jno    0x41e369
  41e2f2:	bound  esp,QWORD PTR [ecx-0x62]
  41e2f5:	push   0x44867252
  41e2fa:	std    
  41e2fb:	(bad)  
  41e2fc:	jge    0x41e35a
  41e2fe:	imul   ebp,DWORD PTR [ecx+0x74],0x68
  41e302:	jno    0x41e332
  41e304:	mov    fs,WORD PTR [ecx+0x69]
  41e307:	add    BYTE PTR [edi],ah
  41e309:	add    eax,0x5640744f
  41e30e:	jno    0x41e382
  41e310:	cmp    eax,DWORD PTR [ebp+edi*8-0x1]
  41e314:	loop   0x41e31a
  41e316:	dec    edi
  41e317:	je     0x41e369
  41e319:	push   edi
  41e31a:	inc    eax
  41e31b:	push   0x3e3c40
  41e320:	inc    BYTE PTR [edi+ecx*2]
  41e323:	je     0x41e2f5
  41e325:	cmp    DWORD PTR [ecx+ecx*2+0x44],ebp
  41e329:	jns    0x41e369
  41e32b:	add    BYTE PTR [esi-0x5f8bb0fc],ah
  41e331:	push   esi
  41e332:	jno    0x41e3a6
  41e334:	jecxz  0x41e33b
  41e336:	jmp    0xe743:0x6f59f100
  41e33d:	jne    0x41e38a
  41e33f:	dec    ecx
  41e340:	repz add eax,0x10e
	...
  41e36a:	add    BYTE PTR [eax],al
  41e36c:	mov    cl,0x59
  41e36e:	outs   dx,DWORD PTR ds:[esi]
  41e36f:	push   ebx
  41e370:	into   
  41e371:	ja     0x41e3b9
  41e373:	push   edi
  41e374:	jb     0x41e37b
  41e376:	outs   dx,DWORD PTR ds:[esi]
  41e377:	push   0x705e5ad6
  41e37c:	(bad)  [ebx]
  41e37e:	fs ins BYTE PTR es:[edi],dx
  41e380:	dec    ebx
  41e381:	test   BYTE PTR [ecx],al
  41e383:	ss dec ebx
  41e385:	mov    ebx,esp
  41e387:	(bad)  
  41e388:	xlat   BYTE PTR ds:[ebx]
  41e389:	mov    ds:0xedef63e4,al
  41e38e:	add    BYTE PTR [edx],ch
  41e390:	dec    ebx
  41e391:	jnp    0x41e373
  41e393:	jae    0x41e348
  41e395:	out    0xf1,eax
  41e397:	jae    0x41e342
  41e399:	jmp    0xcde84283
  41e39e:	add    eax,DWORD PTR [edi+0x4b]
  41e3a1:	ret    
  41e3a2:	in     al,0x60
  41e3a4:	mov    al,0xcd
  41e3a6:	out    dx,eax
  41e3a7:	call   FWORD PTR [eax+ebx*1]
  41e3aa:	add    al,0x61
  41e3ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3ad:	fsub   st,st(5)
  41e3af:	bound  ebp,QWORD PTR [eax+0x4b260426]
  41e3b5:	shl    edi,cl
  41e3b7:	ins    BYTE PTR es:[edi],dx
  41e3b8:	js     0x41e3cf
  41e3ba:	icebp  
  41e3bb:	ins    BYTE PTR es:[edi],dx
  41e3bc:	push   0x4b73defb
  41e3c1:	ss add al,0x71
  41e3c4:	outs   dx,BYTE PTR ds:[esi]
  41e3c5:	push   0x33dcffdd
  41e3ca:	add    al,0x71
  41e3cc:	outs   dx,BYTE PTR ds:[esi]
  41e3cd:	push   ss
  41e3ce:	fbld   TBYTE PTR [eax+0x0]
	...
  41e3f5:	add    BYTE PTR [eax],al
  41e3f7:	add    BYTE PTR [edi+0x72],dl
  41e3fa:	add    DWORD PTR [esi],edi
  41e3fc:	dec    ebx
  41e3fd:	fs loopne 0x41e460
  41e400:	xor    eax,0x4b450172
  41e405:	inc    ebx
  41e406:	loopne 0x41e47b
  41e408:	cmp    BYTE PTR [edi-0x1e],cl
  41e40b:	push   0xffed4234
  41e410:	pushf  
  41e411:	adc    DWORD PTR [edx*2+0x73d2b0f8],eax
  41e418:	sub    ah,BYTE PTR [ebp+ebp*8+0x171fb72]
  41e41f:	jne    0x41e419
  41e421:	or     BYTE PTR [esi-0x26e41c1e],dl
  41e427:	and    eax,0x382f4e7
  41e42c:	adc    BYTE PTR [ecx],cl
  41e42e:	fwait
  41e42f:	out    0xfd,al
  41e431:	in     al,dx
  41e432:	fwait
  41e433:	bnd jmp 0xe0337b13
  41e439:	out    dx,al
  41e43a:	jg     0x41e423
  41e43c:	test   eax,0x9c03e6ca
  41e441:	or     DWORD PTR [esi+eiz*8],edi
  41e444:	mov    al,ds:0x99e047f8
  41e449:	fmul   QWORD PTR [ebx-0xe]
  41e44c:	xchg   esp,eax
  41e44d:	fstp   TBYTE PTR ds:0x4bf5a5de
  41e453:	add    al,0x98
  41e455:	fadd   QWORD PTR [ebx-0xe]
  41e458:	test   eax,0x263cf7
	...
  41e481:	add    BYTE PTR [eax],al
  41e483:	add    BYTE PTR [edi-0xb],ch
  41e486:	cmp    al,BYTE PTR [ebx+ecx*2]
  41e489:	or     edi,esp
  41e48b:	add    ecx,DWORD PTR [ebx+0x9]
  41e48e:	out    0x3,eax
  41e490:	dec    ebx
  41e491:	or     edi,esp
  41e493:	add    ecx,DWORD PTR [ebx+0x9]
  41e496:	out    0x3,eax
  41e498:	dec    ebx
  41e499:	or     edi,esp
  41e49b:	add    ecx,DWORD PTR [ebx+0x9]
  41e49e:	out    0x3,eax
  41e4a0:	dec    ebx
  41e4a1:	or     edi,esp
  41e4a3:	add    ecx,DWORD PTR [ebx+0x9]
  41e4a6:	out    0x3,eax
  41e4a8:	dec    ebx
  41e4a9:	or     edi,esp
  41e4ab:	add    ecx,DWORD PTR [ebx+0x9]
  41e4ae:	out    0x3,eax
  41e4b0:	dec    ebx
  41e4b1:	or     edi,esp
  41e4b3:	add    ecx,DWORD PTR [ebx+0x9]
  41e4b6:	out    0x3,eax
  41e4b8:	dec    ebx
  41e4b9:	or     edi,esp
  41e4bb:	add    ecx,DWORD PTR [ebx+0x9]
  41e4be:	out    0x3,eax
  41e4c0:	dec    ebx
  41e4c1:	or     DWORD PTR [eax],eax
  41e4c3:	jmp    0xe941ee10
  41e4c8:	dec    eax
  41e4c9:	or     DWORD PTR [eax],eax
  41e4cb:	jmp    0xe941ee18
  41e4d0:	dec    eax
  41e4d1:	or     DWORD PTR [eax],eax
  41e4d3:	jmp    0xe941ee20
  41e4d8:	dec    eax
  41e4d9:	or     DWORD PTR [eax],eax
  41e4db:	jmp    0xe941ee28
  41e4e0:	dec    eax
  41e4e1:	or     DWORD PTR [eax],eax
  41e4e3:	jmp    0xe941ee30
	...
  41e510:	dec    eax
  41e511:	or     DWORD PTR [eax],eax
  41e513:	jmp    0xe941ee60
  41e518:	dec    eax
  41e519:	or     DWORD PTR [eax],eax
  41e51b:	jmp    0xe941ee68
  41e520:	dec    eax
  41e521:	or     DWORD PTR [eax],eax
  41e523:	jmp    0xe941ee70
  41e528:	dec    eax
  41e529:	or     DWORD PTR [eax],eax
  41e52b:	jmp    0xe941ee78
  41e530:	dec    eax
  41e531:	or     DWORD PTR [eax],eax
  41e533:	jmp    0xe941ee80
  41e538:	dec    eax
  41e539:	or     DWORD PTR [eax],eax
  41e53b:	jmp    0xe941ee88
  41e540:	dec    eax
  41e541:	or     DWORD PTR [eax],eax
  41e543:	jmp    0xe941ee90
  41e548:	dec    eax
  41e549:	or     DWORD PTR [eax],eax
  41e54b:	jmp    0xe941ee98
  41e550:	dec    eax
  41e551:	or     DWORD PTR [eax],eax
  41e553:	jmp    0xe941eea0
  41e558:	dec    eax
  41e559:	or     DWORD PTR [eax],eax
  41e55b:	jmp    0xe941eea8
  41e560:	dec    eax
  41e561:	or     DWORD PTR [eax],eax
  41e563:	add    BYTE PTR [edx-0x5dfffff6],ah
  41e569:	or     al,BYTE PTR [eax]
  41e56b:	add    BYTE PTR [edx+0xa],dh
  41e56e:	add    BYTE PTR [eax],al
  41e570:	jb     0x41e57c
	...
  41e59a:	add    BYTE PTR [eax],al
  41e59c:	bound  ecx,QWORD PTR [edx]
  41e59e:	add    BYTE PTR [eax],al
  41e5a0:	bound  ecx,QWORD PTR [edx]
  41e5a2:	add    BYTE PTR [eax],al
  41e5a4:	xchg   edi,eax
  41e5a5:	push   ebp
  41e5a6:	int3   
  41e5a7:	int3   
  41e5a8:	(bad)  
  41e5a9:	push   ebp
  41e5aa:	int3   
  41e5ab:	int3   
  41e5ac:	(bad)  
  41e5ad:	xchg   ecx,eax
  41e5ae:	in     al,dx
  41e5af:	push   ecx
  41e5b0:	ror    ah,0x7
  41e5b3:	mov    dl,BYTE PTR [ebx-0x6f]
  41e5b6:	dec    ebx
  41e5b7:	call   eax
  41e5b9:	imul   ebx,DWORD PTR [ebx-0x3d],0xffffff9e
  41e5bd:	xchg   edx,eax
  41e5be:	in     al,dx
  41e5bf:	push   ecx
  41e5c0:	xchg   ebp,eax
  41e5c1:	mov    esi,0x92afc930
  41e5c6:	outs   dx,DWORD PTR ds:[esi]
  41e5c7:	xor    al,dl
  41e5c9:	fimul  WORD PTR [ebx]
  41e5cb:	mov    ebx,DWORD PTR [ebp+0x43468905]
  41e5d1:	nop
  41e5d2:	inc    ebx
  41e5d3:	cld    
  41e5d4:	shl    dh,1
  41e5d6:	pop    ds
  41e5d7:	mov    esi,DWORD PTR ds:0x7f6b3d89
  41e5dd:	push   cs
  41e5de:	cmp    BYTE PTR [edi],0x80
  41e5e1:	fld    QWORD PTR [ecx]
  41e5e3:	jmp    0x41e5d7
  41e5e5:	lds    ebx,FWORD PTR [ebp-0x75]
  41e5e8:	out    0xc3,al
  41e5ea:	ror    ah,0x7e
  41e5ed:	xchg   edx,eax
  41e5ee:	in     al,dx
  41e5ef:	sbb    edi,0x2c
  41e5f2:	mov    DWORD PTR [ebp+0x53],eax
  41e5f5:	nop
  41e5f6:	inc    ebx
  41e5f7:	loopne 0x41e5c9
  41e5f9:	rcr    edi,cl
  41e5fb:	mov    ebx,DWORD PTR [esi]
  41e5fd:	imul   eax,DWORD PTR [ecx],0x51
	...
  41e627:	add    BYTE PTR [edi-0x70],ch
  41e62a:	push   ebx
  41e62b:	in     al,0xd0
  41e62d:	retf   
  41e62e:	jecxz  0x41e5bb
  41e630:	adc    esp,ecx
  41e632:	add    BYTE PTR [ebp+0x43],cl
  41e635:	nop
  41e636:	dec    ebx
  41e637:	clc    
  41e638:	sar    BYTE PTR [ebx+0x2d098bf7],0x1
  41e63f:	inc    ebp
  41e640:	push   ebx
  41e641:	nop
  41e642:	inc    ebx
  41e643:	call   0x8c39ba08
  41e648:	sbb    ch,BYTE PTR [ecx]
  41e64a:	add    DWORD PTR [ebp+0x53],edx
  41e64d:	nop
  41e64e:	push   ebx
  41e64f:	lock ror bl,1
  41e652:	test   DWORD PTR [ebx+0x4d010503],0xfc4b9043
  41e65c:	or     al,0xcf
  41e65e:	repz add BYTE PTR [ebx+0x9],cl
  41e662:	add    bl,ch
  41e664:	inc    edx
  41e665:	nop
  41e666:	push   ebx
  41e667:	hlt    
  41e668:	enter  0xff47,0x88
  41e66c:	jle    0x41e6cb
  41e66e:	mov    DWORD PTR [ebp+0x23],eax
  41e671:	xchg   ecx,eax
  41e672:	dec    ebx
  41e673:	hlt    
  41e674:	push   eax
  41e675:	rcl    DWORD PTR [edi],1
  41e677:	jae    0x41e5fc
  41e679:	nop
  41e67a:	push   ebx
  41e67b:	lock rol BYTE PTR [edi],1
  41e67e:	add    DWORD PTR [ebp+0x53],eax
  41e681:	xchg   edx,eax
  41e682:	inc    ebx
  41e683:	fsub   QWORD PTR [ecx+0x13]
  41e686:	push   0xffc949ac
  41e68b:	mov    al,BYTE PTR [eax]
	...
  41e6b1:	add    BYTE PTR [eax],al
  41e6b3:	add    BYTE PTR [esi+0x7be84f45],dl
  41e6b9:	or     al,BYTE PTR [eax]
  41e6bb:	add    al,cl
  41e6bd:	dec    ebp
  41e6be:	or     al,0x85
  41e6c0:	or     ebx,edi
  41e6c2:	sbb    BYTE PTR [ebx+0x45895d1e],cl
  41e6c8:	mov    bl,0x14
  41e6ca:	mov    ch,0xc
  41e6cc:	sbb    edx,DWORD PTR [edx-0x413f13b5]
  41e6d2:	jmp    0x41e65f
  41e6d4:	push   cs
  41e6d5:	mov    DWORD PTR gs:[ebx+edi*4],eax
  41e6d9:	or     BYTE PTR [ebx+0x8],al
  41e6dc:	mov    al,ds:0x9b4d8916
  41e6e1:	mov    BYTE PTR [edi-0x10292dfc],bh
  41e6e7:	jmp    0x41e690
  41e6e9:	sbb    al,al
  41e6eb:	mov    ebp,DWORD PTR [esi-0x3a]
  41e6ee:	ror    ah,0x7f
  41e6f1:	push   ebp
  41e6f2:	int3   
  41e6f3:	int3   
  41e6f4:	xchg   edi,eax
  41e6f5:	push   ebp
  41e6f6:	int3   
  41e6f7:	int3   
  41e6f8:	(bad)  
  41e6f9:	push   ebp
  41e6fa:	int3   
  41e6fb:	int3   
  41e6fc:	dec    BYTE PTR [edi+0x15f83ec]
  41e702:	call   0xfda62b0c
  41e707:	mov    DWORD PTR [esi+0x23458971],eax
  41e70d:	mov    ecx,0x642c29e7
  41e712:	std    
  41e713:	or     DWORD PTR [edi],0xd
  41e716:	mov    eax,ds:0xb4
	...
  41e73f:	add    BYTE PTR [esi-0x36],dh
  41e742:	jmp    DWORD PTR [edi-0x29]
  41e745:	push   es
  41e746:	inc    eax
  41e747:	add    al,al
  41e749:	aad    0xe7
  41e74b:	push   ecx
  41e74c:	add    al,0xfe
  41e74e:	mov    bl,0x55
  41e750:	mov    cl,BYTE PTR [ecx]
  41e752:	mov    eax,ds:0xffca9eb8
  41e757:	imul   ecx,DWORD PTR [ebx-0x11],0x71767ff
  41e75e:	inc    eax
  41e75f:	add    ah,bl
  41e761:	std    
  41e762:	mov    bh,0x55
  41e764:	mov    cl,BYTE PTR [ecx]
  41e766:	xchg   DWORD PTR [ebp-0x1d],eax
  41e769:	dec    ebx
  41e76a:	inc    ebx
  41e76b:	cld    
  41e76c:	dec    ebx
  41e76d:	or     DWORD PTR [eax],eax
  41e76f:	add    BYTE PTR [eax-0x48aa76ef],dh
  41e775:	xchg   edx,eax
  41e777:	add    edx,eax
  41e779:	mov    ebp,0x652683fb
  41e77e:	or     BYTE PTR [ebx+0x6a],dh
  41e781:	nop
  41e782:	inc    ebx
  41e783:	cld    
  41e784:	rcl    BYTE PTR [ebx+eax*4],0x8c
  41e788:	dec    ecx
  41e789:	leave  
  41e78a:	call   DWORD PTR [eax-0x30]
  41e78d:	mov    ebp,0xfd7c52e7
  41e792:	mov    bl,0x55
  41e794:	or     cl,BYTE PTR [ecx]
  41e796:	mov    DWORD PTR [ebp+0x6f],ecx
  41e799:	xchg   ecx,eax
  41e79a:	add    al,0x8d
  41e79c:	lahf   
  41e79d:	mov    ebp,0x3870003e
  41e7a2:	mov    ebp,esp
	...
  41e7cc:	test   BYTE PTR [edi-0x34],0xcc
  41e7d0:	jg     0x41e826
  41e7d2:	int3   
  41e7d3:	int3   
  41e7d4:	pop    ss
  41e7d5:	push   esi
  41e7d6:	int3   
  41e7d7:	int3   
  41e7d8:	orps   xmm1,xmm4
  41e7db:	int3   
  41e7dc:	sahf   
  41e7dd:	mov    gs,esp
  41e7df:	mov    eax,ds:0x3ebb5b
  41e7e4:	mov    es,WORD PTR gs:[eax+0x30]
  41e7e8:	rcl    ah,1
  41e7ea:	pop    es
  41e7eb:	ds ret 0x7d1
  41e7ef:	pop    ebp
  41e7f0:	or     BYTE PTR [esi-0x34],dl
  41e7f3:	int3   
  41e7f4:	pop    ss
  41e7f5:	push   esi
  41e7f6:	int3   
  41e7f7:	int3   
  41e7f8:	orps   xmm1,xmm4
  41e7fb:	int3   
  41e7fc:	sahf   
  41e7fd:	mov    gs,esp
  41e7ff:	mov    eax,DWORD PTR [esi-0x6974afeb]
  41e805:	adc    DWORD PTR [edi-0x1],ecx
  41e808:	ss popf 
  41e80a:	push   ebx
  41e80b:	inc    ecx
  41e80c:	dec    ebx
  41e80d:	(bad)  
  41e80e:	ror    ah,0xff
  41e811:	push   ebp
  41e812:	int3   
  41e813:	int3   
  41e814:	xchg   edi,eax
  41e815:	push   ebp
  41e816:	int3   
  41e817:	int3   
  41e818:	(bad)  
  41e819:	push   ebp
  41e81a:	int3   
  41e81b:	int3   
  41e81c:	push   ds
  41e81d:	mov    gs,esp
  41e81f:	sbb    DWORD PTR [edi+0x31006a11],0x9
  41e826:	push   0xffc949dc
  41e82b:	(bad)  
  41e82c:	mov    eax,ds:0x4153
	...
  41e856:	add    BYTE PTR [eax],al
  41e858:	dec    ebx
  41e859:	nop
  41e85a:	inc    ebx
  41e85b:	clc    
  41e85c:	repz jo 0x41e861
  41e85f:	inc    eax
  41e860:	dec    ebx
  41e861:	mov    es,WORD PTR [ebx-0x8]
  41e864:	sbb    esi,DWORD PTR [ecx-0x46]
  41e867:	jmp    FWORD PTR [edx+eiz*2-0x7f]
  41e86b:	les    edx,FWORD PTR [ebx-0x70]
  41e86e:	inc    ebx
  41e86f:	cld    
  41e870:	rcl    ah,1
  41e872:	sqrtps xmm0,xmm0
  41e875:	mov    esp,0xccc0520b
  41e87a:	pop    es
  41e87b:	push   eax
  41e87c:	inc    esp
  41e87d:	mov    esp,0xc4268bfb
  41e882:	ror    ah,0x9e
  41e885:	mov    gs,esp
  41e887:	push   ecx
  41e888:	add    al,0xcc
  41e88a:	sti    
  41e88b:	add    BYTE PTR [ebx+0x9],cl
  41e88e:	add    bl,ch
  41e890:	push   edx
  41e891:	mov    es,WORD PTR [ebx-0x4]
  41e894:	enter  0xff48,0x88
  41e898:	xchg   BYTE PTR [ebp-0x77],ah
  41e89b:	dec    ebp
  41e89c:	pop    es
  41e89d:	push   ds
  41e89e:	dec    ebx
  41e89f:	adc    BYTE PTR [eax+0x2],bh
  41e8a2:	mov    DWORD PTR [ebp+0x43],edx
  41e8a5:	push   es
  41e8a6:	push   ebx
  41e8a7:	cld    
  41e8a8:	cmp    al,0x9b
  41e8aa:	add    cl,BYTE PTR [ebx+0x4d011596]
  41e8b0:	fist   WORD PTR [ecx]
  41e8b2:	mov    dh,0x11
  41e8b4:	adc    BYTE PTR [edi+0x74],al
  41e8b7:	pop    es
  41e8b8:	xchg   ebx,eax
  41e8b9:	pop    es
	...
  41e8e2:	add    BYTE PTR [eax],al
  41e8e4:	dec    ebx
  41e8e5:	outs   dx,BYTE PTR ds:[esi]
  41e8e6:	add    al,0xeb
  41e8e8:	fwait
  41e8e9:	adc    eax,0xc3ae8bc0
  41e8ee:	ror    ah,0x7f
  41e8f1:	push   esp
  41e8f2:	int3   
  41e8f3:	int3   
  41e8f4:	xchg   edi,eax
  41e8f5:	push   esp
  41e8f6:	int3   
  41e8f7:	int3   
  41e8f8:	(bad)  
  41e8f9:	push   esp
  41e8fa:	int3   
  41e8fb:	int3   
  41e8fc:	dec    BYTE PTR [ebp+0x933b9ec]
  41e902:	add    BYTE PTR [eax],al
  41e904:	out    dx,eax
  41e905:	lea    eax,[edi]
  41e907:	mov    DWORD PTR [esi-0x7],ecx
  41e90a:	push   ebp
  41e90b:	inc    ecx
  41e90c:	dec    ebx
  41e90d:	(bad)  
  41e90e:	ror    ah,0x7f
  41e911:	push   esp
  41e912:	int3   
  41e913:	int3   
  41e914:	xchg   edi,eax
  41e915:	push   esp
  41e916:	int3   
  41e917:	int3   
  41e918:	(bad)  
  41e919:	push   esp
  41e91a:	int3   
  41e91b:	int3   
  41e91c:	dec    BYTE PTR [ebp-0x7a07c14]
  41e922:	mov    BYTE PTR [ebp+0x53],al
  41e925:	mov    WORD PTR [eax+0x4],?
  41e928:	dec    ebx
  41e929:	adc    BYTE PTR [eax+ecx*4-0x74fff6b5],al
  41e930:	jle    0x41e943
  41e932:	mov    DWORD PTR [ecx+0x4f],edx
  41e935:	mov    edx,gs
  41e937:	or     dl,bh
  41e939:	jae    0x41e8c2
  41e93b:	push   ebp
  41e93c:	pop    ds
  41e93d:	xchg   ebp,eax
  41e93e:	inc    ebx
  41e93f:	or     al,cl
  41e941:	dec    ecx
  41e942:	or     BYTE PTR [ecx+0x45c5598e],cl
	...
  41e970:	dec    DWORD PTR [ecx]
  41e972:	add    BYTE PTR [eax],al
  41e974:	dec    ebx
  41e975:	je     0x41e97e
  41e977:	mov    edi,DWORD PTR [esi+0x5d]
  41e97a:	add    ecx,0xfc4b924a
  41e980:	shl    BYTE PTR [esi+0x557e3bfb],1
  41e986:	jno    0x41e9ce
  41e988:	rol    dh,0xfb
  41e98b:	mov    edx,DWORD PTR [esi]
  41e98d:	pop    ecx
  41e98e:	or     eax,0xbeca57b7
  41e993:	cli    
  41e994:	inc    edi
  41e995:	mov    edx,?
  41e997:	add    esi,DWORD PTR [esi]
  41e999:	sbb    ecx,DWORD PTR [ecx+0x4b94a745]
  41e99f:	lock dec esp
  41e9a1:	cwde   
  41e9a2:	adc    al,0x41
  41e9a4:	retf   0xfd6b
  41e9a7:	cmovnp ecx,DWORD PTR [ecx]
  41e9aa:	xchg   DWORD PTR [ebp-0x7d],edx
  41e9ad:	xchg   esp,eax
  41e9ae:	inc    ebx
  41e9af:	or     al,dl
  41e9b1:	into   
  41e9b2:	or     eax,DWORD PTR [ebx]
  41e9b4:	inc    ebx
  41e9b5:	xchg   esp,eax
  41e9b6:	push   ebx
  41e9b7:	clc    
  41e9b8:	rol    BYTE PTR ds:0xf90e030f,0x88
  41e9bf:	dec    ebp
  41e9c0:	push   ebx
  41e9c1:	xchg   esp,eax
  41e9c2:	push   ebx
  41e9c3:	or     al,0x48
  41e9c5:	cli    
  41e9c6:	mov    BYTE PTR [ebp+0x53],cl
  41e9c9:	xchg   edx,eax
  41e9ca:	add    al,0xa
  41e9cc:	xor    BYTE PTR [edx-0x6bacaa77],dh
  41e9d2:	inc    ebx
  41e9d3:	or     BYTE PTR [eax],al
	...
  41e9f9:	add    BYTE PTR [eax],al
  41e9fb:	add    BYTE PTR [eax-0x35],cl
  41e9fe:	add    ecx,DWORD PTR [ecx+0x6be71186]
  41ea04:	and    al,0x60
  41ea06:	std    
  41ea07:	mov    esp,DWORD PTR [esi]
  41ea09:	mov    esi,0x947eccc0
  41ea0e:	in     al,dx
  41ea0f:	sbb    DWORD PTR [edi],0x25
  41ea12:	mov    DWORD PTR [ebp+0x53],eax
  41ea15:	xchg   edx,eax
  41ea16:	inc    ebx
  41ea17:	in     al,0xd0
  41ea19:	int    0xe3
  41ea1b:	mov    ebx,DWORD PTR [esi+0x2f510165]
  41ea21:	xchg   edx,eax
  41ea22:	push   ebx
  41ea23:	call   0x8c29aff8
  41ea28:	ror    DWORD PTR [eax-0x6db50000],cl
  41ea2e:	dec    ebx
  41ea2f:	lock enter 0xefdd,0x0
  41ea34:	push   esp
  41ea35:	test   ecx,edi
  41ea37:	add    BYTE PTR [ebx+0x9],cl
  41ea3a:	mov    DWORD PTR [ebp+0x43],edx
  41ea3d:	or     al,0x53
  41ea3f:	lock ret 0xdfb5
  41ea43:	mov    ecx,DWORD PTR [esi]
  41ea45:	imul   eax,DWORD PTR [ecx+0xd093b78],0x8ae84
  41ea4f:	add    BYTE PTR [ecx],ah
  41ea51:	or     DWORD PTR [edx+0x0],ebp
  41ea54:	ror    ch,1
  41ea56:	fisttp WORD PTR [ebx+0x51011116]
  41ea5c:	inc    edi
  41ea5d:	mov    ebx,0x15fc
	...
  41ea86:	add    BYTE PTR [eax],al
  41ea88:	mov    bl,0xb5
  41ea8a:	ds add dl,dl
  41ea8d:	(bad)  
  41ea90:	push   es
  41ea91:	imul   eax,DWORD PTR [ecx+0x16d54b38],0x8968fe8b
  41ea9b:	push   ebp
  41ea9c:	push   ebx
  41ea9d:	or     cl,BYTE PTR [edi]
  41ea9f:	mov    DWORD PTR [esi+0x2b45896d],edx
  41eaa5:	xchg   ebx,eax
  41eaa6:	dec    ebx
  41eaa7:	or     BYTE PTR [eax-0x2f],cl
  41eaaa:	jns    0x182b4046
  41eab0:	shl    BYTE PTR [edi+ebx*8+0x1118e8b],1
  41eab7:	inc    edx
  41eab8:	cmp    edx,DWORD PTR [eax-0x332f0bbd]
  41eabe:	fisttp WORD PTR [ebx+0x11011196]
  41eac4:	ret    0xebb4
  41eac7:	mov    DWORD PTR [esi+0x4b000061],0xeb458909
  41ead1:	mov    bh,BYTE PTR [eax+0x10]
  41ead4:	dec    ebx
  41ead5:	aad    0xc
  41ead7:	mov    edi,DWORD PTR [esi+0x69]
  41eada:	cmp    DWORD PTR [ecx],0xc704d54b
  41eae0:	push   es
  41eae1:	popa   
  41eae2:	(bad)  
  41eae3:	dec    DWORD PTR [ebx+0x9]
  41eae6:	mov    DWORD PTR [ebp-0x49],edx
  41eae9:	mov    bh,BYTE PTR [edx]
	...
  41eb13:	add    BYTE PTR [edi],bl
  41eb15:	call   0x92d930a2
  41eb1a:	or     BYTE PTR [ecx+0x9aa],al
  41eb20:	retf   
  41eb21:	aad    0x1b
  41eb23:	mov    ebx,DWORD PTR [esi]
  41eb25:	push   ebp
  41eb26:	mov    DWORD PTR [edx],eax
  41eb28:	es pop esi
  41eb2a:	std    
  41eb2b:	push   esp
  41eb2d:	mov    eax,0xb86f4d88
  41eb32:	out    0xb5,eax
  41eb34:	pop    si
  41eb36:	std    
  41eb37:	add    DWORD PTR [edi+0x77458711],0x72
  41eb3e:	sbb    al,0x8b
  41eb40:	not    BYTE PTR [ecx+ecx*4+0x2]
  41eb44:	ror    bl,1
  41eb46:	pop    es
  41eb47:	lea    edx,[edi-0x3fadfdef]
  41eb4d:	ret    
  41eb4e:	sti    
  41eb4f:	push   eax
  41eb50:	and    esi,DWORD PTR [esi-0x5]
  41eb53:	jmp    DWORD PTR [edx+ecx*4]
  41eb56:	les    ecx,FWORD PTR [eax]
  41eb58:	rol    bl,cl
  41eb5a:	fisttp DWORD PTR [ebx+0x55895586]
  41eb60:	out    dx,eax
  41eb61:	(bad)  
  41eb62:	jnp    0xc0c340f6
  41eb68:	inc    edi
  41eb69:	nop
  41eb6a:	inc    ebx
  41eb6b:	hlt    
  41eb6c:	ror    bl,0xeb
  41eb6f:	or     DWORD PTR [edx],0x5
  41eb72:	xchg   DWORD PTR [ebp-0x9],ecx
  41eb75:	jno    0x41eb0c
  41eb77:	mov    eax,DWORD PTR [eax]
	...
  41eb9d:	add    BYTE PTR [eax],al
  41eb9f:	add    BYTE PTR [esi+0x69],dh
  41eba2:	add    edx,0xe053903f
  41eba8:	loop   0x41ebb8
  41ebaa:	std    
  41ebab:	inc    esp
  41ebad:	xchg   ecx,eax
  41ebae:	jecxz  0x41ec0d
  41ebb0:	mov    BYTE PTR [esp+ecx*8-0x34],cl
  41ebb4:	push   ds
  41ebb5:	xchg   edx,eax
  41ebb6:	in     al,dx
  41ebb7:	sbb    DWORD PTR [edi+0x49f06810],0xffffffc9
  41ebbe:	(bad)  
  41ebbf:	(bad)  
  41ebc0:	ss dec ecx
  41ebc2:	push   ebx
  41ebc3:	inc    ecx
  41ebc4:	dec    ebx
  41ebc5:	nop
  41ebc6:	inc    ebx
  41ebc7:	clc    
  41ebc8:	and    ebx,DWORD PTR [ebp+0x2]
  41ebcb:	inc    eax
  41ebcc:	dec    ebx
  41ebcd:	xchg   edx,eax
  41ebce:	inc    ebx
  41ebcf:	clc    
  41ebd0:	sbb    esi,DWORD PTR [ecx+0x3e]
  41ebd3:	std    
  41ebd4:	je     0x41ec33
  41ebd6:	add    esp,0xfc439043
  41ebdc:	ror    bl,1
  41ebde:	sqrtps xmm2,xmm0
  41ebe1:	mov    bl,0xb
  41ebe3:	push   edx
  41ebe4:	rol    bl,0x7
  41ebe7:	push   eax
  41ebe8:	dec    esp
  41ebe9:	mov    bl,0xfb
  41ebeb:	mov    ebp,DWORD PTR [esi]
  41ebed:	mov    edi,0x4e0fccc0
  41ebf2:	int3   
  41ebf3:	int3   
  41ebf4:	sahf   
  41ebf5:	nop
  41ebf6:	in     al,dx
  41ebf7:	mov    eax,ds:0x3eb34f
  41ebfc:	or     eax,0x368b680a
  41ec01:	cmc    
  41ec02:	push   ebp
  41ec03:	inc    ecx
	...
  41ec2c:	dec    ebx
  41ec2d:	xchg   edx,eax
  41ec2e:	push   eax
  41ec2f:	add    ecx,ebx
  41ec31:	dec    eax
  41ec32:	mov    BYTE PTR [eax+0x4e],dl
  41ec35:	mov    esi,0x4e0fccc0
  41ec3a:	int3   
  41ec3b:	int3   
  41ec3c:	sahf   
  41ec3d:	nop
  41ec3e:	in     al,dx
  41ec3f:	sbb    edi,0xd
  41ec42:	lahf   
  41ec43:	adc    BYTE PTR [ebp-0x36],bh
  41ec46:	dec    DWORD PTR [edx+0x3ec718f9]
  41ec4c:	ror    cl,0x2f
  41ec4f:	mov    edi,ecx
  41ec51:	nop
  41ec52:	sar    BYTE PTR [esi],cl
  41ec54:	rcl    cl,1
  41ec56:	or     ecx,DWORD PTR [ebx-0xbb46d67]
  41ec5c:	rol    dh,0xf3
  41ec5f:	mov    eax,DWORD PTR [ebx]
  41ec61:	or     eax,0x90a34d87
  41ec66:	push   ebx
  41ec67:	clc    
  41ec68:	shl    BYTE PTR [esi+0x94ab8fb],cl
  41ec6e:	add    BYTE PTR [eax],al
  41ec70:	(bad)  
  41ec71:	dec    ecx
  41ec72:	je     0x41ecb8
  41ec74:	enter  0xf7de,0x0
  41ec78:	test   BYTE PTR [ecx+esi*1],0xc0
  41ec7c:	pusha  
  41ec7d:	sbb    eax,0x90734d89
  41ec82:	dec    edi
  41ec83:	sbb    BYTE PTR [eax],ah
  41ec85:	mov    dh,0x7
  41ec87:	jne    0x41eccb
  41ec89:	nop
  41ec8a:	inc    ebx
  41ec8b:	clc    
  41ec8c:	ror    dh,0xb
  41ec8f:	mov    DWORD PTR [eax],eax
	...
  41ecb5:	add    BYTE PTR [eax],al
  41ecb7:	add    BYTE PTR [ebx],al
  41ecb9:	std    
  41ecba:	mov    BYTE PTR [ebp+0x43],dl
  41ecbd:	nop
  41ecbe:	inc    ebx
  41ecbf:	adc    dl,dl
  41ecc1:	(bad)  
  41ecc2:	pop    ss
  41ecc3:	mov    eax,0x94a
  41ecc8:	and    BYTE PTR [ecx],al
  41ecca:	mov    DWORD PTR [ebp+0x23],ecx
  41eccd:	nop
  41ecce:	jns    0x45cb4e4a
  41ecd4:	adc    esp,DWORD PTR [eax]
  41ecd6:	inc    ebx
  41ecd7:	cld    
  41ecd8:	xchg   esi,eax
  41ecd9:	add    eax,0x4f0c031
  41ecde:	jmp    0x898b2596
  41ece3:	in     eax,0x96
  41ece5:	dec    eax
  41ece6:	int3   
  41ece7:	int3   
  41ece8:	dec    DWORD PTR [esp+ecx*8-0x34]
  41ecec:	pop    ss
  41eced:	dec    ebp
  41ecee:	int3   
  41ecef:	int3   
  41ecf0:	cmovge ecx,esp
  41ecf3:	int3   
  41ecf4:	jle    0x41ec86
  41ecf6:	in     al,dx
  41ecf7:	sbb    edi,0x0
  41ecfa:	lds    eax,FWORD PTR [ebp-0x3d]
  41ecfd:	or     BYTE PTR [eax],dh
  41ecff:	add    BYTE PTR [ebx-0xf],cl
  41ed02:	add    eax,DWORD PTR [ebx]
  41ed04:	or     ecx,DWORD PTR [ecx]
  41ed06:	lahf   
  41ed07:	cld    
  41ed08:	push   ss
  41ed09:	retf   0x4fff
  41ed0c:	mov    bl,0xb7
  41ed0e:	sti    
  41ed0f:	call   FWORD PTR [edi+eax*4-0x3a3df73c]
  41ed16:	repz push 0xb
  41ed19:	nop
  41ed1a:	dec    ebx
  41ed1b:	clc    
	...
  41ed44:	sbb    dl,BYTE PTR [eax-0x35e923ed]
  41ed4a:	dec    DWORD PTR [edx+0x6a4fb909]
  41ed50:	dec    ebx
  41ed51:	pop    esp
  41ed52:	push   ebx
  41ed53:	hlt    
  41ed54:	test   al,0x34
  41ed56:	push   ebx
  41ed57:	inc    ecx
  41ed58:	dec    ebx
  41ed59:	mov    BYTE PTR [ebx],bh
  41ed5b:	aam    0xfe
  41ed5d:	leave  
  41ed5e:	(bad)  
  41ed5f:	call   esi
  41ed61:	add    edi,DWORD PTR [eax+0x94b02]
  41ed67:	jmp    0x41ed1a
  41ed69:	mov    cs,WORD PTR [ebx]
  41ed6b:	add    BYTE PTR [ecx-0x37],cl
  41ed6e:	dec    DWORD PTR [eax+0x68597e]
  41ed74:	jle    0x41ed7e
  41ed76:	add    BYTE PTR [eax+0x4b],ch
  41ed79:	pop    es
  41ed7a:	inc    eax
  41ed7b:	add    al,al
  41ed7d:	hlt    
  41ed7e:	rcl    DWORD PTR [ebp-0x76],cl
  41ed81:	or     DWORD PTR [edi-0x3e],edi
  41ed84:	dec    ebx
  41ed85:	pop    es
  41ed86:	add    BYTE PTR [eax],al
  41ed88:	cdq    
  41ed89:	jno    0x41ed29
  41ed8b:	(bad)  
  41ed8c:	hlt    
  41ed8d:	pop    edx
  41ed8e:	add    esp,0x200a13f
  41ed94:	mov    ecx,DWORD PTR [ecx]
  41ed96:	sub    eax,DWORD PTR [eax]
  41ed98:	dec    ecx
  41ed99:	or     DWORD PTR [eax],eax
  41ed9b:	mov    eax,DWORD PTR [esi+0x35]
  41ed9e:	push   ebx
  41ed9f:	inc    ecx
  41eda0:	dec    ebx
  41eda1:	cs enter 0x5689,0x5
  41eda6:	push   esi
  41eda7:	inc    ecx
	...
  41edd0:	dec    ebx
  41edd1:	mov    ss,WORD PTR [ebx]
  41edd3:	add    al,0x1d
  41edd5:	enter  0x51ff,0xea
  41edd9:	xor    eax,0xb94b4153
  41edde:	mov    BYTE PTR [ebp-0x65],cl
  41ede1:	mov    eax,0x5a979de7
  41ede6:	std    
  41ede7:	add    DWORD PTR [edi-0x60ea76f3],0xffffffb4
  41edee:	add    BYTE PTR ds:[eax-0x4c],cl
  41edf2:	pop    es
  41edf3:	mov    DWORD PTR [esi],ebx
  41edf5:	jno    0x41ed80
  41edf7:	push   ebp
  41edf8:	arpl   WORD PTR [edx-0x1e],bx
  41edfb:	mov    ebp,DWORD PTR [esi-0x44]
  41edfe:	ror    ah,0x8f
  41ee01:	dec    ebp
  41ee02:	int3   
  41ee03:	int3   
  41ee04:	dec    BYTE PTR [ebp+0x11068bec]
  41ee0a:	cmp    DWORD PTR [ebp+0x57],eax
  41ee0d:	(bad)  
  41ee0e:	add    al,0x8b
  41ee10:	xchg   BYTE PTR [ecx],dl
  41ee12:	jmp    0x89480e1c
  41ee17:	inc    ebp
  41ee18:	aas    
  41ee19:	mov    esp,0x4d17ccc0
  41ee1e:	int3   
  41ee1f:	int3   
  41ee20:	cmovge ecx,esp
  41ee23:	int3   
  41ee24:	jle    0x41edb4
  41ee26:	in     al,dx
  41ee27:	sbb    DWORD PTR [edi],0x2d
  41ee2a:	lds    eax,FWORD PTR [ebp+0x7]
  41ee2d:	or     DWORD PTR [eax+0x1],esi
  41ee30:	dec    ebx
  41ee31:	mov    es,WORD PTR [ebx+0x8]
	...
  41ee5c:	ret    0xd7c3
  41ee5f:	mov    edi,DWORD PTR [esi+0x41]
  41ee62:	mov    DWORD PTR [ebp+0x53],edx
  41ee65:	push   es
  41ee66:	dec    edi
  41ee67:	cmp    al,0xd2
  41ee69:	mov    bl,0xdf
  41ee6b:	mov    ecx,DWORD PTR [esi-0x7c48f297]
  41ee71:	cmc    
  41ee72:	mov    BYTE PTR [ebp-0x55],dl
  41ee75:	mov    eax,DWORD PTR [edx+ecx*1+0x63]
  41ee79:	nop
  41ee7a:	inc    ebx
  41ee7b:	call   0x4042e3a3
  41ee80:	dec    ebx
  41ee81:	mov    cs,WORD PTR [ebx]
  41ee83:	cld    
  41ee84:	inc    bh
  41ee86:	call   DWORD PTR [eax-0x4d]
  41ee89:	leave  
  41ee8a:	clc    
  41ee8b:	call   DWORD PTR [ebp+eax*4-0x3c3df73c]
  41ee92:	out    dx,eax
  41ee93:	push   0xb
  41ee95:	icebp  
  41ee96:	jmp    FWORD PTR [edi]
  41ee98:	dec    ebx
  41ee99:	or     DWORD PTR [eax+0x0],ebp
  41ee9c:	sti    
  41ee9d:	pop    es
  41ee9e:	add    BYTE PTR [edx+0x4b],ch
  41eea1:	pop    edx
  41eea2:	push   ebx
  41eea3:	lock rol bl,cl
  41eea6:	jecxz  0x41ee33
  41eea8:	imul   BYTE PTR [eax-0x77]
  41eeab:	inc    edx
  41eeac:	(bad)  
  41eead:	mov    eax,0xb8434d88
  41eeb2:	mov    BYTE PTR [ebp+0x2f],dl
  41eeb5:	mov    esp,0x593ec1e7
  41eeba:	std    
  41eebb:	or     DWORD PTR [edi],0x6
  41eebe:	lds    eax,FWORD PTR [ebp+0x0]
	...
  41eee5:	add    BYTE PTR [eax],al
  41eee7:	add    BYTE PTR [edi],dh
  41eee9:	or     al,BYTE PTR [eax]
  41eeeb:	add    BYTE PTR [ebx+0x64],cl
  41eeee:	pop    es
  41eeef:	mov    eax,DWORD PTR [esi+0x4ac0815d]
  41eef5:	add    BYTE PTR [ebx-0xc],0xc0
  41eef9:	(bad)  
  41eefa:	fisttp WORD PTR [edi]
  41eefc:	mov    esp,0x963905ba
  41ef01:	pop    ebp
  41ef02:	jno    0x41ef5d
  41ef04:	ror    dh,0xe7
  41ef07:	xor    DWORD PTR [ebx-0x3],0xffffffff
  41ef0b:	jae    0x41ee9b
  41ef0d:	test   BYTE PTR [ebx-0x18],cl
  41ef10:	enter  0xfd2,0x0
  41ef14:	pop    edi
  41ef15:	adc    eax,0x84e35589
  41ef1a:	inc    edx
  41ef1b:	adc    al,dl
  41ef1d:	(bad)  
  41ef1e:	fisttp WORD PTR [ebx+0x448b151a]
  41ef24:	pop    ebx
  41ef25:	pop    eax
  41ef26:	mov    DWORD PTR [ebp-0x55],ecx
  41ef29:	sbb    al,0xd2
  41ef2b:	neg    DWORD PTR [edx]
  41ef2d:	adc    eax,0x8ab5589
  41ef32:	lods   eax,DWORD PTR ds:[esi]
  41ef33:	inc    edx
  41ef34:	push   edi
  41ef35:	mov    ecx,0x84a34588
  41ef3a:	dec    ebx
  41ef3b:	or     BYTE PTR [eax-0x3f],cl
  41ef3e:	adc    edx,DWORD PTR [ecx-0x30]
  41ef41:	mov    esi,0x6d0e8be7
  41ef46:	add    DWORD PTR [edx+0x3f],eax
  41ef49:	mov    ecx,0x55e7
	...
  41ef72:	add    BYTE PTR [eax],al
  41ef74:	pop    ax
  41ef76:	std    
  41ef77:	add    DWORD PTR [edi+0x634d8905],0xffffff8c
  41ef7e:	mov    edi,0xe7c6c228
  41ef83:	jmp    0x41ef5e
  41ef85:	adc    DWORD PTR [ebx-0x1c],0xffffff99
  41ef89:	popa   
  41ef8a:	push   cs
  41ef8b:	cld    
  41ef8c:	xor    al,0x58
  41ef8e:	add    esp,0x323e147
  41ef94:	mov    ecx,DWORD PTR [ecx]
  41ef96:	lahf   
  41ef97:	cld    
  41ef98:	jbe    0x41ef64
  41ef9a:	dec    DWORD PTR [edi+0x23]
  41ef9d:	test   dl,bh
  41ef9f:	dec    DWORD PTR [esp+ecx*4]
  41efa2:	les    ecx,FWORD PTR [eax]
  41efa4:	ror    ch,cl
  41efa6:	fild   DWORD PTR [ebx+0x4153513e]
  41efac:	dec    ebx
  41efad:	or     DWORD PTR [ebx+0xa],esi
  41efb0:	rol    BYTE PTR ds:0x98a55f0,0x4f
  41efb7:	push   DWORD PTR [esi+0x35]
  41efba:	cmp    DWORD PTR ds:0x3ebdd3,0x6a1bde4b
  41efc4:	or     esp,ecx
  41efc6:	jmp    FWORD PTR [edi]
  41efc8:	dec    ebx
  41efc9:	or     DWORD PTR [ecx-0x774548ab],ecx
  41efcf:	inc    ebp
  41efd0:	stos   DWORD PTR es:[edi],eax
  41efd1:	or     DWORD PTR [eax+0x34],0xfffffffa
  41efd5:	push   edi
  41efd6:	push   ebx
  41efd7:	lock add BYTE PTR [eax],al
	...
  41effe:	add    BYTE PTR [eax],al
  41f000:	call   0x4b834341
  41f005:	adc    ebp,DWORD PTR fs:[edx+0xb]
  41f009:	loope  0x41f00a
  41f00b:	das    
  41f00c:	dec    ebx
  41f00d:	or     DWORD PTR [ecx+0x69ba7f55],ecx
  41f013:	add    BYTE PTR [ebp+edi*4-0x11],dh
  41f017:	mov    ds:0x3ebd97,eax
  41f01c:	enter  0xd415,0x55
  41f020:	or     cl,BYTE PTR [ecx]
  41f022:	add    BYTE PTR [ebp+0x3e],dh
  41f025:	jecxz  0x41f066
  41f027:	push   0x194b
  41f02c:	ror    ah,1
  41f02e:	sti    
  41f02f:	push   eax
  41f030:	mov    cl,0x9
  41f032:	std    
  41f033:	push   ebp
  41f034:	cmp    ebp,DWORD PTR [ebx+0x98a55d4]
  41f03a:	mov    DWORD PTR [ebp+0x2f],ecx
  41f03d:	or     DWORD PTR [ebx-0x28],0x8bd7bcd0
  41f044:	mov    ?,WORD PTR [ecx]
  41f046:	add    DWORD PTR [edx+0x4f],eax
  41f049:	add    BYTE PTR [ebx-0x20],0xd0
  41f04d:	(bad)  
  41f04e:	sti    
  41f04f:	push   ecx
  41f050:	sar    BYTE PTR [ebx+eiz*8+0x533daa52],1
  41f057:	inc    ecx
  41f058:	dec    ebx
  41f059:	mov    ecx,0x56e795e7
  41f05e:	std    
  41f05f:	add    DWORD PTR [edi],0x6
  41f062:	mov    DWORD PTR [ebp+0x0],ecx
	...
  41f089:	add    BYTE PTR [eax],al
  41f08b:	add    bl,ch
  41f08d:	mov    dh,BYTE PTR [edi+0x94ba4]
  41f093:	add    BYTE PTR [edi],bh
  41f095:	adc    ecx,DWORD PTR [ecx+0x4382ab55]
  41f09b:	fmul   DWORD PTR [eax-0x75]
  41f09e:	mov    al,ds:0x87094b00
  41f0a3:	inc    ebp
  41f0a4:	mov    bh,0x82
  41f0a6:	dec    ebx
  41f0a7:	loopne 0x41f079
  41f0a9:	cld    
  41f0aa:	rcl    DWORD PTR [ebp+0xa],cl
  41f0ad:	or     DWORD PTR [ecx],ebp
  41f0af:	push   ecx
  41f0b0:	push   edi
  41f0b1:	adc    BYTE PTR [ebx],0x4
  41f0b4:	sbb    eax,0x47a0ffc8
  41f0b9:	mov    edi,0x821b003e
  41f0be:	or     edx,esp
  41f0c0:	push   ss
  41f0c1:	enter  0x50ff,0xd0
  41f0c5:	mov    esp,0xd67352eb
  41f0ca:	stc    
  41f0cb:	call   DWORD PTR [edx+ecx*4-0x3c]
  41f0cf:	or     al,0xc0
  41f0d1:	int3   
  41f0d2:	fisttp WORD PTR [ebx+0x41533d56]
  41f0d8:	dec    ebx
  41f0d9:	or     cl,BYTE PTR [eax+0x28]
  41f0dc:	ret    0x1403
  41f0df:	push   esi
  41f0e0:	mov    cl,BYTE PTR [ecx]
  41f0e2:	cmp    DWORD PTR ds:0x3ebc23,0x8b2adc4b
  41f0ec:	ds cmp eax,0x4153
	...
  41f116:	add    BYTE PTR [eax],al
  41f118:	dec    ebx
  41f119:	mov    ebx,0xc89d149e
  41f11e:	dec    DWORD PTR [edi-0x30]
  41f121:	add    esi,eax
  41f123:	push   ebp
  41f124:	mov    cl,BYTE PTR [ecx]
  41f126:	dec    edi
  41f127:	call   0x3f469f
  41f12c:	enter  0xc4c,0x8b
  41f130:	ss cmp eax,0xbb4b4153
  41f136:	out    0x49,eax
  41f138:	rcl    BYTE PTR [ebp-0x3],cl
  41f13b:	or     DWORD PTR [edi+0x3361e90c],0x1d
  41f142:	add    DWORD PTR [eax+0x4b],eax
  41f145:	test   al,0xfc
  41f147:	push   ebp
  41f148:	or     cl,BYTE PTR [ecx]
  41f14a:	push   eax
  41f14b:	call   0x3f414f
  41f150:	enter  0x84c,0x89
  41f154:	push   cs
  41f155:	cmp    eax,0xbb770d89
  41f15a:	add    BYTE PTR ds:[edx],bl
  41f15d:	adc    BYTE PTR [ebx-0x20],0xaa
  41f161:	cmp    al,0x53
  41f163:	inc    ecx
  41f164:	dec    ebx
  41f165:	or     al,BYTE PTR [edx+0x28]
  41f168:	sbb    eax,DWORD PTR [edx-0x38010ff5]
  41f16e:	call   DWORD PTR [eax+0x73]
  41f171:	and    eax,0x8954fffc
  41f176:	les    ecx,FWORD PTR [eax+eax*8]
  41f179:	sti    
  41f17a:	out    dx,eax
  41f17b:	push   ebp
	...
  41f1a4:	mov    cl,BYTE PTR [ecx]
  41f1a6:	jg     0x41f16a
  41f1a8:	fwait
  41f1a9:	mov    eax,0xfec2fffe
  41f1ae:	sbb    edx,DWORD PTR [esi-0x76]
  41f1b1:	or     DWORD PTR [ebx+0x69ba2345],ecx
  41f1b7:	inc    eax
  41f1b8:	mov    cl,0xb
  41f1ba:	mov    DWORD PTR ds:0x3ebb37,ecx
  41f1c0:	jp     0x41f216
  41f1c2:	push   ebx
  41f1c3:	aam    0xf3
  41f1c5:	push   0x91fcfff9
  41f1ca:	(bad)  
  41f1cb:	dec    DWORD PTR [ebx+0x9]
  41f1ce:	mov    ebp,esp
  41f1d0:	mov    es,WORD PTR [edi+0x4]
  41f1d3:	add    BYTE PTR [edi],dl
  41f1d5:	inc    esi
  41f1d6:	int3   
  41f1d7:	int3   
  41f1d8:	cmovbe ecx,esp
  41f1db:	int3   
  41f1dc:	jle    0x41f15e
  41f1de:	in     al,dx
  41f1df:	mov    eax,DWORD PTR [esi-0x38bf76ff]
  41f1e5:	mov    dh,0xc0
  41f1e7:	int3   
  41f1e8:	pop    DWORD PTR [ebp-0x34]
  41f1eb:	int3   
  41f1ec:	push   ds
  41f1ed:	sub    ah,0x53
  41f1f0:	adc    eax,0xab3d88bc
  41f1f5:	mov    esi,0xf6d0003e
  41f1fa:	jmp    0x41f251
  41f1fc:	or     cl,BYTE PTR [ecx]
  41f1fe:	mov    DWORD PTR ds:0x3ebe73,esi
  41f204:	and    al,0xb3
  41f206:	pop    eax
  41f207:	pop    ebp
	...
  41f230:	mov    BYTE PTR [ebp-0x34],al
  41f233:	int3   
  41f234:	push   ds
  41f235:	sub    ah,0x51
  41f238:	jecxz  0x41f206
  41f23a:	add    BYTE PTR [eax+0x4b],al
  41f23d:	stos   BYTE PTR es:[edi],al
  41f23e:	cld    
  41f23f:	push   ebp
  41f240:	or     cl,BYTE PTR [ecx]
  41f242:	push   eax
  41f243:	call   0x3f43ef
  41f248:	enter  0x84d,0x89
  41f24c:	mov    ss,WORD PTR [ebp-0x77]
  41f24f:	dec    ebp
  41f250:	push   ebx
  41f251:	mov    edx,0xfdc00069
  41f256:	pop    ss
  41f257:	push   esi
  41f258:	mov    cl,BYTE PTR [ecx]
  41f25a:	push   edx
  41f25b:	(bad)  
  41f25c:	jle    0x41f2b3
  41f25e:	mov    ebp,esp
  41f260:	jle    0x41f2aa
  41f262:	int3   
  41f263:	int3   
  41f264:	jle    0x41f1e6
  41f266:	in     al,dx
  41f267:	sbb    DWORD PTR [edi],0x2d
  41f26a:	lds    eax,FWORD PTR [ebp+0x3]
  41f26d:	or     DWORD PTR [eax],eax
  41f26f:	add    BYTE PTR [ebx+0x4c],cl
  41f272:	inc    ebx
  41f273:	fdiv   QWORD PTR [ebx+0x9]
  41f276:	add    BYTE PTR [eax],al
  41f278:	add    al,0xce
  41f27a:	repz add DWORD PTR [ebx+0x9],ecx
  41f27e:	add    bh,al
  41f280:	xchg   BYTE PTR [ebp+0x0],dl
  41f283:	add    BYTE PTR [ebx+0x9],cl
  41f286:	lds    eax,FWORD PTR [ebp-0x19]
  41f289:	or     BYTE PTR [eax],al
  41f28b:	add    BYTE PTR [ebx-0x80],cl
  41f28e:	dec    ebx
  41f28f:	or     dl,dl
  41f291:	add    eax,0x55f0
	...
  41f2ba:	add    BYTE PTR [eax],al
  41f2bc:	or     cl,BYTE PTR [ecx]
  41f2be:	call   0xfd95a76c
  41f2c3:	mov    eax,ds:0x3ebd9b
  41f2c8:	push   sp
  41f2ca:	std    
  41f2cb:	add    BYTE PTR [ebx-0x23],cl
  41f2ce:	or     eax,edi
  41f2d0:	inc    esi
  41f2d1:	push   ecx
  41f2d2:	push   ebx
  41f2d3:	inc    ecx
  41f2d4:	dec    ebx
  41f2d5:	or     DWORD PTR [eax],eax
  41f2d7:	add    BYTE PTR [ebx+0x60],cl
  41f2da:	or     al,bh
  41f2dc:	dec    esi
  41f2dd:	push   ecx
  41f2de:	push   ebx
  41f2df:	inc    ecx
  41f2e0:	dec    ebx
  41f2e1:	or     al,BYTE PTR [eax]
  41f2e3:	add    BYTE PTR [ebx-0x78],cl
  41f2e6:	cmp    esi,eax
  41f2e8:	test   cl,0xff
  41f2eb:	(bad)  
  41f2ec:	fdivp  st(6),st
  41f2ee:	les    eax,FWORD PTR ds:0x3ebd53
  41f2f4:	dec    ebx
  41f2f5:	or     DWORD PTR [eax],eax
  41f2f7:	add    al,cl
  41f2f9:	adc    al,0xf8
  41f2fb:	push   ebp
  41f2fc:	mov    cl,BYTE PTR [ecx]
  41f2fe:	add    BYTE PTR [ebp+0x3e],dh
  41f301:	(bad)  
  41f303:	(bad)  
  41f304:	ds dec ecx
  41f306:	push   ebx
  41f307:	inc    ecx
  41f308:	dec    ebx
  41f309:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f30a:	lock push ebp
  41f30c:	mov    cl,BYTE PTR [ecx]
  41f30e:	mov    DWORD PTR ds:0x3ebd1b,ecx
  41f314:	rol    ah,cl
  41f316:	out    0x8b,eax
  41f318:	push   esi
  41f319:	pop    ecx
  41f31a:	push   ebx
  41f31b:	inc    ecx
  41f31c:	dec    ebx
  41f31d:	jle    0x41f362
  41f31f:	call   0x41f324
	...
  41f348:	dec    eax
  41f349:	(bad)  
  41f34a:	cmp    ecx,DWORD PTR [ecx+0x4d89618e]
  41f350:	repz or BYTE PTR [ebx],0xdc
  41f354:	jle    0x41f31e
  41f356:	jmp    DWORD PTR [edi+0x7b]
  41f359:	push   es
  41f35a:	inc    eax
  41f35b:	add    ah,al
  41f35d:	cld    
  41f35e:	mov    edi,0xa1090a55
  41f363:	cld    
  41f364:	push   ds
  41f365:	enter  0xc6ff,0x46
  41f369:	add    eax,0xdc4b4156
  41f36e:	add    BYTE PTR [eax+0x4b],al
  41f371:	loope  0x41f3d2
  41f373:	add    ecx,DWORD PTR [ebx]
  41f375:	or     DWORD PTR [ecx+0x3ebc8f15],ecx
  41f37b:	add    BYTE PTR [ecx],bl
  41f37d:	popa   
  41f37e:	ret    0x7cf7
  41f381:	push   edx
  41f382:	add    esp,0x5608a643
  41f388:	or     cl,BYTE PTR [ecx]
  41f38a:	std    
  41f38b:	adc    eax,0x3ebb53
  41f390:	test   al,0xf1
  41f392:	push   ebp
  41f393:	inc    ecx
  41f394:	dec    ebx
  41f395:	test   al,0xc
  41f397:	push   esi
  41f398:	or     cl,BYTE PTR [ecx]
  41f39a:	push   eax
  41f39b:	call   0x3f469f
  41f3a0:	enter  0x44c,0x89
  41f3a4:	mov    ds,WORD PTR [ecx-0x77]
  41f3a7:	dec    ebp
  41f3a8:	cmp    edi,DWORD PTR [eax+0xd5e7]
	...
  41f3d2:	add    BYTE PTR [eax],al
  41f3d4:	and    eax,0x783fd52
  41f3d9:	or     eax,0xc87ef4a1
  41f3de:	dec    DWORD PTR [edx+0x6a525976]
  41f3e4:	dec    ebx
  41f3e5:	test   al,0xf4
  41f3e7:	push   ebp
  41f3e8:	mov    cl,BYTE PTR [ecx]
  41f3ea:	push   eax
  41f3eb:	call   0x3f4dc7
  41f3f0:	enter  0xc4c,0x8b
  41f3f4:	xchg   esi,eax
  41f3f5:	pop    ecx
  41f3f6:	xchg   DWORD PTR [ebp-0x15],ecx
  41f3f9:	jge    0x41f44e
  41f3fb:	cld    
  41f3fc:	adc    BYTE PTR [edi+ebp*8+0x437e7173],bh
  41f403:	loopne 0x41f420
  41f405:	jle    0x41f452
  41f407:	fcomp  QWORD PTR [edx]
  41f409:	popa   
  41f40a:	scas   al,BYTE PTR es:[edi]
  41f40b:	sti    
  41f40c:	mov    ah,0x51
  41f40e:	add    esp,0x5600a643
  41f414:	or     cl,BYTE PTR [ecx]
  41f416:	mov    DWORD PTR ds:0x3ebb4b,edx
  41f41c:	stc    
  41f41d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f41e:	or     al,0x56
  41f420:	or     cl,BYTE PTR [ecx]
  41f422:	add    DWORD PTR [ebp+0x6f],eax
  41f425:	mov    eax,0xbb770d88
  41f42a:	add    BYTE PTR ds:[eax-0x3c],cl
  41f42e:	sti    
  41f42f:	push   ecx
  41f430:	arpl   WORD PTR [ecx],di
  41f432:	idiv   edi
  41f434:	fs test esp,eax
  41f437:	or     al,0x0
	...
  41f45d:	add    BYTE PTR [eax],al
  41f45f:	add    al,dl
  41f461:	mov    ebx,0x34fe03f3
  41f466:	add    DWORD PTR [ebp+0x67],edx
  41f469:	jg     0x41f4be
  41f46b:	in     al,0xd0
  41f46d:	(bad)  
  41f46e:	sti    
  41f46f:	add    eax,DWORD PTR [esi+0x3745872d]
  41f475:	test   DWORD PTR [ebx-0x20],ecx
  41f478:	pusha  
  41f479:	(bad)  
  41f47a:	call   DWORD PTR [ebp-0x76]
  41f47d:	or     DWORD PTR [edi-0x619ad4b3],eax
  41f483:	(bad)  
  41f484:	mov    ss,WORD PTR [ecx+0x0]
  41f487:	add    BYTE PTR [ebx+0x9],cl
  41f48a:	jmp    0xf7f8c498
  41f48f:	or     DWORD PTR [ecx],0x6
  41f492:	xchg   DWORD PTR [ebp-0xd],edx
  41f495:	test   BYTE PTR [ebx-0x8],al
  41f498:	xor    dh,al
  41f49a:	out    dx,eax
  41f49b:	jae    0x41f4c0
  41f49d:	test   BYTE PTR [ebx],cl
  41f49f:	hlt    
  41f4a0:	jbe    0x41f46c
  41f4a2:	inc    DWORD PTR [edx]
  41f4a4:	xchg   BYTE PTR [ecx-0x77],dl
  41f4a7:	adc    DWORD PTR [eax-0x4a],ecx
  41f4aa:	mul    DWORD PTR [ecx+0x3eb6bf]
  41f4b0:	dec    eax
  41f4b1:	(bad)  
  41f4b2:	test   DWORD PTR [ecx-0x7b47ba5],0x3e74aca
  41f4bc:	dec    ebx
  41f4bd:	or     DWORD PTR [ecx+0x3eb69715],ecx
	...
  41f4eb:	add    BYTE PTR [eax-0x4a],cl
  41f4ee:	div    DWORD PTR [ebx]
  41f4f0:	inc    ecx
  41f4f1:	stos   BYTE PTR es:[edi],al
  41f4f2:	hlt    
  41f4f3:	push   ebp
  41f4f4:	or     cl,BYTE PTR [ecx]
  41f4f6:	add    DWORD PTR [ebp-0x7d],eax
  41f4f9:	or     BYTE PTR [eax],0xeb
  41f4fc:	mov    esp,0x16e42b82
  41f501:	retf   0x88ff
  41f504:	imul   edx,DWORD PTR es:[ebx+0x41],0x89c71c4b
  41f50c:	push   ds
  41f50d:	xor    DWORD PTR [ebx+0x41],edx
  41f510:	dec    ebx
  41f511:	sbb    al,0xc7
  41f513:	mov    DWORD PTR [esi+0x5d],esp
  41f516:	push   ebx
  41f517:	inc    ecx
  41f518:	dec    ebx
  41f519:	popa   
  41f51a:	dec    esi
  41f51b:	div    DWORD PTR [eax+edx*2]
  41f51e:	mov    ecx,DWORD PTR ds:0x3eb69c
  41f524:	sar    BYTE PTR [ebp+0xb4bb9f7],cl
  41f52a:	inc    eax
  41f52b:	add    dl,cl
  41f52d:	popa   
  41f52e:	add    BYTE PTR [edx],al
  41f530:	dec    ebx
  41f531:	or     DWORD PTR [ecx-0x30dbfcab],ecx
  41f537:	mov    DWORD PTR [esi+0x61],edx
  41f53a:	push   ebx
  41f53b:	inc    ecx
  41f53c:	dec    ebx
  41f53d:	stos   BYTE PTR es:[edi],al
  41f53e:	call   0x504b7f98
  41f543:	call   0x3f4897
  41f548:	enter  0x444,0x8b
  41f54c:	inc    esi
  41f54d:	push   ebp
  41f54e:	push   ebx
  41f54f:	inc    ecx
	...
  41f578:	dec    ebx
  41f579:	mov    edx,0x4fc1d5e7
  41f57e:	std    
  41f57f:	test   DWORD PTR [ebx-0x74ccfc2b],ecx
  41f585:	arpl   WORD PTR [edx],bp
  41f587:	mov    esp,DWORD PTR [esi+0x65]
  41f58a:	push   ebx
  41f58b:	inc    ecx
  41f58c:	dec    ebx
  41f58d:	mov    esp,es
  41f58f:	add    al,0xc8
  41f591:	or     eax,0x90a55f8
  41f596:	add    BYTE PTR [edx+eax*2-0x56],dh
  41f59a:	aam    0x55
  41f59c:	or     cl,BYTE PTR [ecx]
  41f59e:	xchg   DWORD PTR [edi+eiz*1+0x5],eax
  41f5a2:	call   0xfd916c04
  41f5a7:	mov    edx,DWORD PTR [esi-0xb]
  41f5aa:	push   ebp
  41f5ab:	inc    ecx
  41f5ac:	dec    ebx
  41f5ad:	mov    ebx,0x838b33c0
  41f5b2:	jecxz  0x41f611
  41f5b4:	mov    BYTE PTR [esp+ecx*8],bh
  41f5b7:	int3   
  41f5b8:	dec    ebx
  41f5b9:	or     DWORD PTR [eax],eax
  41f5bb:	add    BYTE PTR [ebx+0x9],cl
  41f5be:	add    BYTE PTR [eax],al
  41f5c0:	dec    ebx
  41f5c1:	or     DWORD PTR [eax],eax
  41f5c3:	add    BYTE PTR [ebx+0x9],cl
  41f5c6:	add    BYTE PTR [eax],al
  41f5c8:	dec    ebx
  41f5c9:	or     DWORD PTR [eax],eax
  41f5cb:	add    BYTE PTR [ebx+0x9],cl
  41f5ce:	add    BYTE PTR [eax],al
  41f5d0:	dec    ebx
  41f5d1:	or     DWORD PTR [eax],eax
  41f5d3:	add    BYTE PTR [ebx+0x9],cl
  41f5d6:	add    BYTE PTR [eax],al
  41f5d8:	dec    ebx
  41f5d9:	or     DWORD PTR [eax],eax
	...
  41f603:	add    BYTE PTR [ebx+0x9],cl
  41f606:	add    BYTE PTR [eax],al
  41f608:	dec    ebx
  41f609:	or     DWORD PTR [eax],eax
  41f60b:	add    BYTE PTR [ebx+0x9],cl
  41f60e:	add    BYTE PTR [eax],al
  41f610:	dec    ebx
  41f611:	or     DWORD PTR [eax],eax
  41f613:	add    BYTE PTR [ebx+0x9],cl
  41f616:	add    BYTE PTR [eax],al
  41f618:	dec    ebx
  41f619:	or     DWORD PTR [eax],eax
  41f61b:	add    BYTE PTR [ebx+0x9],cl
  41f61e:	add    BYTE PTR [eax],al
  41f620:	dec    ebx
  41f621:	or     DWORD PTR [eax],eax
  41f623:	add    BYTE PTR [ebx+0x9],cl
  41f626:	add    BYTE PTR [eax],al
  41f628:	dec    ebx
  41f629:	or     DWORD PTR [eax],eax
  41f62b:	add    BYTE PTR [ebx+0x9],cl
  41f62e:	add    BYTE PTR [eax],al
  41f630:	dec    ebx
  41f631:	or     DWORD PTR [eax],eax
  41f633:	add    BYTE PTR [ebx+0x9],cl
  41f636:	add    BYTE PTR [eax],al
  41f638:	dec    ebx
  41f639:	or     DWORD PTR [eax],eax
  41f63b:	add    BYTE PTR [ebx+0x9],cl
  41f63e:	add    BYTE PTR [eax],al
  41f640:	dec    ebx
  41f641:	or     DWORD PTR [eax],eax
  41f643:	add    BYTE PTR [ebx+0x9],cl
  41f646:	add    BYTE PTR [eax],al
  41f648:	dec    ebx
  41f649:	or     DWORD PTR [eax],eax
  41f64b:	add    BYTE PTR [ebx+0x9],cl
  41f64e:	add    BYTE PTR [eax],al
  41f650:	dec    ebx
  41f651:	or     DWORD PTR [eax],eax
  41f653:	add    BYTE PTR [ebx+0x9],cl
  41f656:	add    BYTE PTR [eax],al
  41f658:	dec    ebx
  41f659:	or     DWORD PTR [eax],eax
  41f65b:	add    BYTE PTR [ebx+0x9],cl
  41f65e:	add    BYTE PTR [eax],al
  41f660:	dec    ebx
  41f661:	or     DWORD PTR [eax],eax
  41f663:	add    BYTE PTR [ebx+0x9],cl
	...
  41f68e:	add    BYTE PTR [eax],al
  41f690:	dec    ebx
  41f691:	or     DWORD PTR [eax],eax
  41f693:	add    BYTE PTR [ebx+0x9],cl
  41f696:	add    BYTE PTR [eax],al
  41f698:	dec    ebx
  41f699:	or     DWORD PTR [eax],eax
  41f69b:	add    BYTE PTR [ebx+0x9],cl
  41f69e:	add    BYTE PTR [eax],al
  41f6a0:	dec    ebx
  41f6a1:	or     DWORD PTR [eax],eax
  41f6a3:	add    BYTE PTR [ebx+0x9],cl
  41f6a6:	add    BYTE PTR [eax],al
  41f6a8:	dec    ebx
  41f6a9:	or     DWORD PTR [eax],eax
  41f6ab:	add    BYTE PTR [ebx+0x9],cl
  41f6ae:	add    BYTE PTR [eax],al
  41f6b0:	dec    ebx
  41f6b1:	or     DWORD PTR [eax],eax
  41f6b3:	add    BYTE PTR [ebx+0x9],cl
  41f6b6:	add    BYTE PTR [eax],al
  41f6b8:	dec    ebx
  41f6b9:	or     DWORD PTR [eax],eax
  41f6bb:	add    BYTE PTR [ebx+0x9],cl
  41f6be:	add    BYTE PTR [eax],al
  41f6c0:	dec    ebx
  41f6c1:	or     DWORD PTR [eax],eax
  41f6c3:	add    BYTE PTR [ebx+0x9],cl
  41f6c6:	add    BYTE PTR [eax],al
  41f6c8:	dec    ebx
  41f6c9:	or     DWORD PTR [eax],eax
  41f6cb:	add    BYTE PTR [ebx+0x9],cl
  41f6ce:	add    BYTE PTR [eax],al
  41f6d0:	dec    ebx
  41f6d1:	or     DWORD PTR [eax],eax
  41f6d3:	add    BYTE PTR [ebx+0x9],cl
  41f6d6:	add    BYTE PTR [eax],al
  41f6d8:	dec    ebx
  41f6d9:	or     DWORD PTR [eax],eax
  41f6db:	add    BYTE PTR [ebx+0x9],cl
  41f6de:	add    BYTE PTR [eax],al
  41f6e0:	dec    ebx
  41f6e1:	or     DWORD PTR [eax],eax
  41f6e3:	add    BYTE PTR [ebx+0x9],cl
  41f6e6:	add    BYTE PTR [eax],al
  41f6e8:	dec    ebx
  41f6e9:	or     DWORD PTR [eax],eax
  41f6eb:	add    BYTE PTR [ebx+0x9],cl
  41f6ee:	add    BYTE PTR [eax],al
  41f6f0:	dec    ebx
  41f6f1:	or     DWORD PTR [eax],eax
	...
  41f71b:	add    BYTE PTR [ebx+0x9],cl
  41f71e:	add    BYTE PTR [eax],al
  41f720:	dec    ebx
  41f721:	or     DWORD PTR [eax],eax
  41f723:	add    BYTE PTR [ebx+0x9],cl
  41f726:	add    BYTE PTR [eax],al
  41f728:	dec    ebx
  41f729:	or     DWORD PTR [eax],eax
  41f72b:	add    BYTE PTR [ebx+0x9],cl
  41f72e:	add    BYTE PTR [eax],al
  41f730:	dec    ebx
  41f731:	or     DWORD PTR [eax],eax
  41f733:	add    BYTE PTR [ebx+0x9],cl
  41f736:	add    BYTE PTR [eax],al
  41f738:	dec    ebx
  41f739:	or     DWORD PTR [eax],eax
  41f73b:	add    BYTE PTR [ebx+0x9],cl
  41f73e:	add    BYTE PTR [eax],al
  41f740:	dec    ebx
  41f741:	or     DWORD PTR [eax],eax
  41f743:	add    BYTE PTR [ebx+0x9],cl
  41f746:	add    BYTE PTR [eax],al
  41f748:	dec    ebx
  41f749:	or     DWORD PTR [eax],eax
  41f74b:	add    BYTE PTR [ebx+0x9],cl
  41f74e:	add    BYTE PTR [eax],al
  41f750:	dec    ebx
  41f751:	or     DWORD PTR [eax],eax
  41f753:	add    BYTE PTR [ebx+0x9],cl
  41f756:	add    BYTE PTR [eax],al
  41f758:	dec    ebx
  41f759:	or     DWORD PTR [eax],eax
  41f75b:	add    BYTE PTR [ebx+0x9],cl
  41f75e:	add    BYTE PTR [eax],al
  41f760:	dec    ebx
  41f761:	or     DWORD PTR [eax],eax
  41f763:	add    BYTE PTR [ebx+0x9],cl
  41f766:	add    BYTE PTR [eax],al
  41f768:	dec    ebx
  41f769:	or     DWORD PTR [eax],eax
  41f76b:	add    BYTE PTR [ebx+0x9],cl
  41f76e:	add    BYTE PTR [eax],al
  41f770:	dec    ebx
  41f771:	or     DWORD PTR [eax],eax
  41f773:	add    BYTE PTR [ebx+0x9],cl
  41f776:	add    BYTE PTR [eax],al
  41f778:	dec    ebx
  41f779:	or     DWORD PTR [eax],eax
  41f77b:	add    BYTE PTR [eax],al
  41f77d:	add    al,BYTE PTR [eax]
  41f77f:	add    BYTE PTR [ebx+0x9],cl
  41f782:	add    BYTE PTR [eax],al
  41f784:	push   ebx
  41f785:	or     DWORD PTR [eax],eax
  41f787:	add    bh,dl
  41f789:	cmp    edx,DWORD PTR [eax-0x67c448ce]
  41f78f:	xor    dh,BYTE PTR [edi-0x18cd5fc5]
  41f795:	cmp    ebp,DWORD PTR [eax+0x1494b32]
  41f79b:	add    BYTE PTR [ebx],bl
  41f79d:	or     DWORD PTR [eax],eax
  41f79f:	add    BYTE PTR [eax+0x33],ch
  41f7a2:	dec    ebx
  41f7a3:	cmp    ebx,DWORD PTR [ebx]
  41f7a5:	xor    bl,BYTE PTR [edx+0x3b]
  41f7a8:	add    al,0x32
  41f7aa:	push   0x9331ed3b
  41f7af:	cmp    esi,DWORD PTR [ebp-0x78c457ce]
  41f7b5:	xor    ch,ch
  41f7b7:	cmp    edx,DWORD PTR [eax+0x35]
  41f7ba:	adc    DWORD PTR [edx+eiz*2],edi
  41f7bd:	xor    eax,0x33ef3c9d
  41f7c2:	xchg   DWORD PTR [esi],edi
  41f7c4:	mov    esi,0xf3e9536
  41f7c9:	aaa    
  41f7ca:	int    0x3e
  41f7cc:	and    al,0x37
  41f7ce:	jle    0x41f80f
  41f7d0:	enter  0x9b35,0x3f
  41f7d4:	loop   0x41f80b
  41f7d6:	scas   eax,DWORD PTR es:[edi]
  41f7d7:	aas    
  41f7d8:	les    esi,FWORD PTR ds:0x36193fcc
  41f7de:	out    0x3f,al
  41f7e0:	cli    
  41f7e1:	xor    eax,0x3ff9
	...
  41f80a:	add    BYTE PTR [eax],al
  41f80c:	in     al,dx
  41f80d:	xor    eax,0x594b0000
  41f812:	add    DWORD PTR [eax],eax
  41f814:	xchg   edi,eax
  41f815:	or     BYTE PTR [eax],al
  41f817:	add    BYTE PTR [esi+0x39],cl
  41f81a:	sbb    BYTE PTR [eax],dh
  41f81c:	retf   0x8738
  41f81f:	xor    BYTE PTR ds:0x1e314b38,cl
  41f825:	cmp    BYTE PTR [esi+0x31],ah
  41f828:	cmp    edi,DWORD PTR [eax]
  41f82a:	lea    esi,[ecx]
  41f82c:	out    0x37,eax
  41f82e:	stos   BYTE PTR es:[edi],al
  41f82f:	xor    DWORD PTR [ecx+0x4d31e137],ecx
  41f835:	cmp    edx,DWORD PTR [edi]
  41f837:	xor    dh,BYTE PTR [edi]
  41f839:	cmp    esp,DWORD PTR [ebx]
  41f83b:	xor    dl,BYTE PTR [edx+0x3b]
  41f83e:	inc    edx
  41f83f:	xor    dl,BYTE PTR [ebx]
  41f841:	cmp    edx,DWORD PTR [ecx+0x32]
  41f844:	adc    al,0x3b
  41f846:	pop    esi
  41f847:	xor    ah,dh
  41f849:	cmp    bh,BYTE PTR [ebp+0x32]
  41f84c:	leave  
  41f84d:	cmp    dl,BYTE PTR [edx+esi*1+0x32a73ac6]
  41f854:	xchg   ebp,eax
  41f855:	cmp    al,dl
  41f857:	xor    bh,BYTE PTR [ebx+0x3a]
  41f85a:	or     BYTE PTR [ebx],dh
  41f85c:	cmp    eax,0x6e33143a
  41f861:	cmp    BYTE PTR [edx],ch
  41f863:	xor    ecx,DWORD PTR [ecx-0x3ccc81c8]
  41f869:	cmp    BYTE PTR [ebp-0x54c715cd],dl
  41f86f:	xor    eax,DWORD PTR [eax]
	...
  41f895:	add    BYTE PTR [eax],al
  41f897:	add    bh,bl
  41f899:	cmp    BYTE PTR [esi-0x31c6edcd],bh
  41f89f:	xor    edi,edi
  41f8a1:	cmp    ch,bl
  41f8a3:	xor    ebx,DWORD PTR [ecx+edi*1]
  41f8a6:	hlt    
  41f8a7:	xor    eax,DWORD PTR [ecx]
  41f8a9:	cmp    edi,edi
  41f8ab:	xor    eax,DWORD PTR [esi+0x3d]
  41f8ae:	or     DWORD PTR [eax*2+0x2934143d],esi
  41f8b5:	cmp    eax,0x3d363428
  41f8ba:	xor    dh,BYTE PTR [esp+ecx*4]
  41f8bd:	cmp    eax,0x3dcd345a
  41f8c2:	mov    WORD PTR [ecx+edi*4],?
  41f8c5:	cmp    eax,0x3d8d349c
  41f8ca:	jmp    0x41f900
  41f8cc:	ret    
  41f8cd:	cmp    eax,0x3e5d350c
  41f8d2:	and    esi,DWORD PTR ds:0x35313e62
  41f8d8:	bound  edi,QWORD PTR [esi]
  41f8da:	inc    esp
  41f8db:	xor    eax,0x355d3e0f
  41f8e0:	sub    DWORD PTR [esi],edi
  41f8e2:	jno    0x41f919
  41f8e4:	(bad)  
  41f8e5:	mov    ?,WORD PTR ds:0x35a53edd
  41f8ec:	dec    ebx
  41f8ed:	or     DWORD PTR [eax],eax
  41f8ef:	add    BYTE PTR [ebx+0x9],cl
  41f8f2:	add    BYTE PTR [eax],al
  41f8f4:	dec    ebx
  41f8f5:	or     DWORD PTR [eax],eax
  41f8f7:	add    BYTE PTR [ebx+0x9],cl
	...
  41f922:	add    BYTE PTR [eax],al
  41f924:	dec    ebx
  41f925:	or     DWORD PTR [eax],eax
  41f927:	add    BYTE PTR [ebx+0x9],cl
  41f92a:	add    BYTE PTR [eax],al
  41f92c:	dec    ebx
  41f92d:	or     DWORD PTR [eax],eax
  41f92f:	add    BYTE PTR [ebx+0x9],cl
  41f932:	add    BYTE PTR [eax],al
  41f934:	dec    ebx
  41f935:	or     DWORD PTR [eax],eax
  41f937:	add    BYTE PTR [ebx+0x9],cl
  41f93a:	add    BYTE PTR [eax],al
  41f93c:	dec    ebx
  41f93d:	or     DWORD PTR [eax],eax
  41f93f:	add    BYTE PTR [ebx+0x9],cl
  41f942:	add    BYTE PTR [eax],al
  41f944:	dec    ebx
  41f945:	or     DWORD PTR [eax],eax
  41f947:	add    BYTE PTR [ebx+0x9],cl
  41f94a:	add    BYTE PTR [eax],al
  41f94c:	dec    ebx
  41f94d:	or     DWORD PTR [eax],eax
  41f94f:	add    BYTE PTR [ebx+0x9],cl
  41f952:	add    BYTE PTR [eax],al
  41f954:	dec    ebx
  41f955:	or     DWORD PTR [eax],eax
  41f957:	add    BYTE PTR [ebx+0x9],cl
  41f95a:	add    BYTE PTR [eax],al
  41f95c:	dec    ebx
  41f95d:	or     DWORD PTR [eax],eax
  41f95f:	add    BYTE PTR [ebx+0x9],cl
  41f962:	add    BYTE PTR [eax],al
  41f964:	dec    ebx
  41f965:	or     DWORD PTR [eax],eax
  41f967:	add    BYTE PTR [ebx+0x9],cl
  41f96a:	add    BYTE PTR [eax],al
  41f96c:	dec    ebx
  41f96d:	or     DWORD PTR [eax],eax
  41f96f:	add    BYTE PTR [ebx+0x9],cl
  41f972:	add    BYTE PTR [eax],al
  41f974:	dec    ebx
  41f975:	or     DWORD PTR [eax],eax
  41f977:	add    BYTE PTR [ebx+0x9],cl
  41f97a:	add    BYTE PTR [eax],al
  41f97c:	dec    ebx
  41f97d:	or     DWORD PTR [eax],eax
  41f97f:	add    BYTE PTR [ebx+0x9],cl
  41f982:	add    BYTE PTR [eax],al
  41f984:	dec    ebx
  41f985:	or     DWORD PTR [eax],eax
	...
  41f9af:	add    BYTE PTR [ebx+0x9],cl
  41f9b2:	add    BYTE PTR [eax],al
  41f9b4:	dec    ebx
  41f9b5:	or     DWORD PTR [eax],eax
  41f9b7:	add    BYTE PTR [ebx+0x9],cl
  41f9ba:	add    BYTE PTR [eax],al
  41f9bc:	dec    ebx
  41f9bd:	or     DWORD PTR [eax],eax
  41f9bf:	add    BYTE PTR [ebx+0x9],cl
  41f9c2:	add    BYTE PTR [eax],al
  41f9c4:	dec    ebx
  41f9c5:	or     DWORD PTR [eax],eax
  41f9c7:	add    BYTE PTR [ebx+0x9],cl
  41f9ca:	add    BYTE PTR [eax],al
  41f9cc:	dec    ebx
  41f9cd:	or     DWORD PTR [eax],eax
  41f9cf:	add    BYTE PTR [ebx+0x9],cl
  41f9d2:	add    BYTE PTR [eax],al
  41f9d4:	dec    ebx
  41f9d5:	or     DWORD PTR [eax],eax
  41f9d7:	add    BYTE PTR [ebx+0x9],cl
  41f9da:	add    BYTE PTR [eax],al
  41f9dc:	dec    ebx
  41f9dd:	or     DWORD PTR [eax],eax
  41f9df:	add    BYTE PTR [ebx+0x9],cl
  41f9e2:	add    BYTE PTR [eax],al
  41f9e4:	dec    ebx
  41f9e5:	or     DWORD PTR [eax],eax
  41f9e7:	add    BYTE PTR [ebx+0x9],cl
  41f9ea:	add    BYTE PTR [eax],al
  41f9ec:	dec    ebx
  41f9ed:	or     DWORD PTR [eax],eax
  41f9ef:	add    BYTE PTR [ebx+0x9],cl
  41f9f2:	add    BYTE PTR [eax],al
  41f9f4:	dec    ebx
  41f9f5:	or     DWORD PTR [eax],eax
  41f9f7:	add    BYTE PTR [ebx+0x9],cl
  41f9fa:	add    BYTE PTR [eax],al
  41f9fc:	dec    ebx
  41f9fd:	or     DWORD PTR [eax],eax
  41f9ff:	add    BYTE PTR [ebx+0x9],cl
  41fa02:	add    BYTE PTR [eax],al
  41fa04:	dec    ebx
  41fa05:	or     DWORD PTR [eax],eax
  41fa07:	add    BYTE PTR [ebx+0x9],cl
  41fa0a:	add    BYTE PTR [eax],al
  41fa0c:	dec    ebx
  41fa0d:	or     DWORD PTR [eax],eax
  41fa0f:	add    BYTE PTR [ebx+0x9],cl
	...
  41fa3a:	add    BYTE PTR [eax],al
  41fa3c:	dec    ebx
  41fa3d:	or     DWORD PTR [eax],eax
  41fa3f:	add    BYTE PTR [ebx+0x9],cl
  41fa42:	add    BYTE PTR [eax],al
  41fa44:	dec    ebx
  41fa45:	or     DWORD PTR [eax],eax
  41fa47:	add    bh,bh
  41fa49:	and    eax,0x4202dc
  41fa4e:	jmp    DWORD PTR ds:0x4202e0
  41fa54:	jmp    DWORD PTR ds:0x4202e4
  41fa5a:	jmp    DWORD PTR ds:0x4202e8
  41fa60:	jmp    DWORD PTR ds:0x4202ec
  41fa66:	jmp    DWORD PTR ds:0x4202f0
  41fa6c:	jmp    DWORD PTR ds:0x4202f4
  41fa72:	jmp    DWORD PTR ds:0x4202f8
  41fa78:	jmp    DWORD PTR ds:0x4202fc
  41fa7e:	jmp    DWORD PTR ds:0x420300
  41fa84:	jmp    DWORD PTR ds:0x420304
  41fa8a:	jmp    DWORD PTR ds:0x420308
  41fa90:	jmp    DWORD PTR ds:0x42030c
  41fa96:	jmp    DWORD PTR ds:0x420310
  41fa9c:	jmp    DWORD PTR ds:0x420314
  41faa2:	jmp    DWORD PTR ds:0x420318
  41faa8:	jmp    DWORD PTR ds:0x420320
  41faae:	jmp    DWORD PTR ds:0x420324
  41fab4:	jmp    DWORD PTR ds:0x420328
  41faba:	jmp    DWORD PTR ds:0x42032c
  41fac0:	jmp    DWORD PTR ds:0x420330
  41fac6:	jmp    DWORD PTR ds:0x420334
  41facc:	jmp    DWORD PTR ds:0x420338
  41fad2:	jmp    DWORD PTR ds:0x42033c
  41fad8:	jmp    DWORD PTR ds:0x420340
  41fade:	jmp    DWORD PTR ds:0x420344
  41fae4:	jmp    DWORD PTR ds:0x420348
  41faea:	jmp    DWORD PTR ds:0x42034c
  41faf0:	jmp    DWORD PTR ds:0x420350
  41faf6:	jmp    DWORD PTR ds:0x420354
  41fafc:	jmp    DWORD PTR ds:0x420358
  41fb02:	jmp    DWORD PTR ds:0x42035c
  41fb08:	jmp    DWORD PTR ds:0x420360
  41fb0e:	jmp    DWORD PTR ds:0x420364
  41fb14:	jmp    DWORD PTR ds:0x420368
  41fb1a:	jmp    DWORD PTR ds:0x42036c
  41fb20:	jmp    DWORD PTR ds:0x420370
  41fb26:	jmp    DWORD PTR ds:0x420374
  41fb2c:	jmp    DWORD PTR ds:0x420378
  41fb32:	jmp    DWORD PTR ds:0x42037c
  41fb38:	jmp    DWORD PTR ds:0x420380
  41fb3e:	jmp    DWORD PTR ds:0x420384
  41fb44:	jmp    DWORD PTR ds:0x420388
  41fb4a:	jmp    DWORD PTR ds:0x42038c
  41fb50:	jmp    DWORD PTR ds:0x420390
  41fb56:	jmp    DWORD PTR ds:0x420394
  41fb5c:	jmp    DWORD PTR ds:0x420398
  41fb62:	jmp    DWORD PTR ds:0x42039c
  41fb68:	jmp    DWORD PTR ds:0x4203a0
  41fb6e:	jmp    DWORD PTR ds:0x4203a4
  41fb74:	jmp    DWORD PTR ds:0x4203a8
  41fb7a:	jmp    DWORD PTR ds:0x4203ac
  41fb80:	jmp    DWORD PTR ds:0x4203b0
  41fb86:	jmp    DWORD PTR ds:0x4203b4
  41fb8c:	jmp    DWORD PTR ds:0x4203b8
  41fb92:	jmp    DWORD PTR ds:0x4203bc
  41fb98:	jmp    DWORD PTR ds:0x4203c0
  41fb9e:	jmp    DWORD PTR ds:0x4203c4
  41fba4:	jmp    DWORD PTR ds:0x4203c8
  41fbaa:	jmp    DWORD PTR ds:0x4203cc
  41fbb0:	jmp    DWORD PTR ds:0x4203d0
  41fbb6:	jmp    DWORD PTR ds:0x4203d4
  41fbbc:	jmp    DWORD PTR ds:0x4203d8
  41fbc2:	jmp    DWORD PTR ds:0x4203dc
  41fbc8:	jmp    DWORD PTR ds:0x4203e0
  41fbce:	jmp    DWORD PTR ds:0x4203e4
  41fbd4:	jmp    DWORD PTR ds:0x4203e8
  41fbda:	jmp    DWORD PTR ds:0x4203ec
  41fbe0:	jmp    DWORD PTR ds:0x4203f0
  41fbe6:	jmp    DWORD PTR ds:0x4203f4
  41fbec:	jmp    DWORD PTR ds:0x4203f8
  41fbf2:	jmp    DWORD PTR ds:0x4203fc
  41fbf8:	jmp    DWORD PTR ds:0x420400
  41fbfe:	jmp    DWORD PTR ds:0x420404
  41fc04:	jmp    DWORD PTR ds:0x420408
  41fc0a:	jmp    DWORD PTR ds:0x42040c
  41fc10:	jmp    DWORD PTR ds:0x420414
  41fc16:	jmp    DWORD PTR ds:0x420418
  41fc1c:	jmp    DWORD PTR ds:0x42041c
  41fc22:	jmp    DWORD PTR ds:0x420420
  41fc28:	jmp    DWORD PTR ds:0x420424
  41fc2e:	jmp    DWORD PTR ds:0x420428
  41fc34:	jmp    DWORD PTR ds:0x42042c
  41fc3a:	jmp    DWORD PTR ds:0x420430
  41fc40:	jmp    DWORD PTR ds:0x420434
  41fc46:	jmp    DWORD PTR ds:0x420438
  41fc4c:	jmp    DWORD PTR ds:0x42043c
  41fc52:	jmp    DWORD PTR ds:0x420440
  41fc58:	jmp    DWORD PTR ds:0x420444
  41fc5e:	jmp    DWORD PTR ds:0x420448
  41fc64:	jmp    DWORD PTR ds:0x42044c
  41fc6a:	jmp    DWORD PTR ds:0x420450
  41fc70:	jmp    DWORD PTR ds:0x420454
  41fc76:	jmp    DWORD PTR ds:0x420458
  41fc7c:	jmp    DWORD PTR ds:0x42045c
  41fc82:	jmp    DWORD PTR ds:0x420460
  41fc88:	jmp    DWORD PTR ds:0x420464
  41fc8e:	jmp    DWORD PTR ds:0x42046c
  41fc94:	jmp    DWORD PTR ds:0x420470
  41fc9a:	jmp    DWORD PTR ds:0x420478
  41fca0:	jmp    DWORD PTR ds:0x42047c
  41fca6:	jmp    DWORD PTR ds:0x420480
  41fcac:	jmp    DWORD PTR ds:0x420484
  41fcb2:	jmp    DWORD PTR ds:0x42048c

Disassembly of section .d:

00421000 <.d>:
	...

Disassembly of section .d2:

00422000 <.d2>:
	...
