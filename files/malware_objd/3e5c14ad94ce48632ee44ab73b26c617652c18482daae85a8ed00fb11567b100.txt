
3e5c14ad94ce48632ee44ab73b26c617652c18482daae85a8ed00fb11567b100.exe:     file format pei-i386


Disassembly of section .text:

00010480 <.text>:
   10480:	add    BYTE PTR [eax],al
   10482:	add    BYTE PTR [eax],al
   10484:	add    BYTE PTR [eax],al
   10486:	mov    edi,edi
   10488:	push   ebp
   10489:	mov    ebp,esp
   1048b:	mov    eax,DWORD PTR [ebp+0xc]
   1048e:	xor    eax,DWORD PTR [ebp+0x10]
   10491:	mov    ecx,DWORD PTR [ebp+0x10]
   10494:	and    eax,0x7ffffffe
   10499:	xor    eax,DWORD PTR [ebp+0xc]
   1049c:	and    cl,0x1
   1049f:	movzx  ecx,cl
   104a2:	shr    eax,1
   104a4:	neg    ecx
   104a6:	sbb    ecx,ecx
   104a8:	and    ecx,0x9908b0df
   104ae:	xor    eax,ecx
   104b0:	xor    eax,DWORD PTR [ebp+0x8]
   104b3:	pop    ebp
   104b4:	ret    0xc
   104b7:	int3   
   104b8:	int3   
   104b9:	int3   
   104ba:	int3   
   104bb:	int3   
   104bc:	mov    edi,edi
   104be:	push   ebp
   104bf:	mov    ebp,esp
   104c1:	mov    eax,DWORD PTR [ebp+0x8]
   104c4:	xor    edx,edx
   104c6:	inc    edx
   104c7:	mov    DWORD PTR [ecx],eax
   104c9:	push   esi
   104ca:	mov    eax,DWORD PTR [ecx]
   104cc:	mov    esi,eax
   104ce:	shr    esi,0x1e
   104d1:	xor    esi,eax
   104d3:	imul   esi,esi,0x6c078965
   104d9:	add    ecx,0x4
   104dc:	add    esi,edx
   104de:	inc    edx
   104df:	cmp    edx,0x270
   104e5:	mov    DWORD PTR [ecx],esi
   104e7:	jl     0x104ca
   104e9:	pop    esi
   104ea:	pop    ebp
   104eb:	ret    0x4
   104ee:	int3   
   104ef:	int3   
   104f0:	int3   
   104f1:	int3   
   104f2:	int3   
   104f3:	int3   
   104f4:	mov    edi,edi
   104f6:	push   ebp
   104f7:	mov    ebp,esp
   104f9:	push   ecx
   104fa:	push   ebx
   104fb:	push   esi
   104fc:	push   edi
   104fd:	mov    edi,ecx
   104ff:	mov    esi,edi
   10501:	mov    ebx,0xe3
   10506:	push   DWORD PTR [esi+0x4]
   10509:	mov    ecx,edi
   1050b:	push   DWORD PTR [esi]
   1050d:	dec    ebx
   1050e:	push   DWORD PTR [esi+0x634]
   10514:	call   0x10486
   10519:	mov    DWORD PTR [esi],eax
   1051b:	add    esi,0x4
   1051e:	test   ebx,ebx
   10520:	jne    0x10506
   10522:	mov    DWORD PTR [ebp-0x4],0x18c
   10529:	lea    ebx,[esi+0x4]
   1052c:	push   DWORD PTR [ebx]
   1052e:	mov    ecx,edi
   10530:	push   DWORD PTR [esi]
   10532:	push   DWORD PTR [esi-0x38c]
   10538:	call   0x10486
   1053d:	dec    DWORD PTR [ebp-0x4]
   10540:	mov    DWORD PTR [esi],eax
   10542:	mov    esi,ebx
   10544:	jne    0x10529
   10546:	push   DWORD PTR [edi]
   10548:	mov    ecx,edi
   1054a:	push   DWORD PTR [esi]
   1054c:	push   DWORD PTR [esi-0x38c]
   10552:	call   0x10486
   10557:	mov    DWORD PTR [esi],eax
   10559:	mov    DWORD PTR [edi+0x9c4],0x270
   10563:	mov    DWORD PTR [edi+0x9c0],edi
   10569:	pop    edi
   1056a:	pop    esi
   1056b:	pop    ebx
   1056c:	leave  
   1056d:	ret    
   1056e:	int3   
   1056f:	int3   
   10570:	int3   
   10571:	int3   
   10572:	int3   
   10573:	int3   
   10574:	mov    edi,edi
   10576:	push   ebp
   10577:	mov    ebp,esp
   10579:	push   esi
   1057a:	push   DWORD PTR [ebp+0x8]
   1057d:	mov    esi,ecx
   1057f:	call   0x104bc
   10584:	mov    ecx,esi
   10586:	call   0x104f4
   1058b:	pop    esi
   1058c:	pop    ebp
   1058d:	ret    0x4
   10590:	int3   
   10591:	int3   
   10592:	int3   
   10593:	int3   
   10594:	int3   
   10595:	int3   
   10596:	mov    edi,edi
   10598:	push   esi
   10599:	push   edi
   1059a:	mov    edi,ecx
   1059c:	lea    esi,[edi+0x9c4]
   105a2:	cmp    DWORD PTR [esi],0x0
   105a5:	jne    0x105ac
   105a7:	call   0x104f4
   105ac:	dec    DWORD PTR [esi]
   105ae:	lea    eax,[edi+0x9c0]
   105b4:	mov    edx,DWORD PTR [eax]
   105b6:	mov    ecx,DWORD PTR [edx]
   105b8:	add    edx,0x4
   105bb:	mov    DWORD PTR [eax],edx
   105bd:	mov    eax,ecx
   105bf:	shr    eax,0xb
   105c2:	xor    ecx,eax
   105c4:	mov    eax,ecx
   105c6:	and    eax,0xff3a58ad
   105cb:	shl    eax,0x7
   105ce:	xor    ecx,eax
   105d0:	mov    eax,ecx
   105d2:	and    eax,0xffffdf8c
   105d7:	shl    eax,0xf
   105da:	xor    ecx,eax
   105dc:	mov    eax,ecx
   105de:	shr    eax,0x12
   105e1:	pop    edi
   105e2:	xor    eax,ecx
   105e4:	pop    esi
   105e5:	ret    
   105e6:	int3   
   105e7:	int3   
   105e8:	int3   
   105e9:	int3   
   105ea:	int3   
   105eb:	int3   
   105ec:	mov    edi,edi
   105ee:	push   ebp
   105ef:	mov    ebp,esp
   105f1:	push   esi
   105f2:	mov    esi,DWORD PTR [ebp+0x8]
   105f5:	shr    esi,1
   105f7:	or     esi,DWORD PTR [ebp+0x8]
   105fa:	push   edi
   105fb:	mov    eax,esi
   105fd:	shr    eax,0x2
   10600:	or     esi,eax
   10602:	mov    eax,esi
   10604:	shr    eax,0x4
   10607:	or     esi,eax
   10609:	mov    eax,esi
   1060b:	shr    eax,0x8
   1060e:	or     esi,eax
   10610:	mov    eax,esi
   10612:	shr    eax,0x10
   10615:	mov    edi,ecx
   10617:	or     esi,eax
   10619:	mov    ecx,edi
   1061b:	call   0x10596
   10620:	and    eax,esi
   10622:	cmp    eax,DWORD PTR [ebp+0x8]
   10625:	ja     0x10619
   10627:	pop    edi
   10628:	pop    esi
   10629:	pop    ebp
   1062a:	ret    0x4
   1062d:	int3   
   1062e:	int3   
   1062f:	int3   
   10630:	int3   
   10631:	int3   
   10632:	mov    edi,edi
   10634:	push   ebp
   10635:	mov    ebp,esp
   10637:	sub    esp,0xa04
   1063d:	push   ebx
   1063e:	push   esi
   1063f:	mov    esi,DWORD PTR [ebp+0x14]
   10642:	push   edi
   10643:	test   esi,esi
   10645:	jne    0x1071c
   1064b:	xor    ecx,ecx
   1064d:	lea    eax,[ebp-0x3c]
   10650:	mov    edx,0xff
   10655:	shl    edx,cl
   10657:	and    edx,DWORD PTR [ebp+0x8]
   1065a:	shr    edx,cl
   1065c:	inc    ecx
   1065d:	inc    ecx
   1065e:	mov    DWORD PTR [eax],edx
   10660:	add    eax,0x4
   10663:	cmp    ecx,0x14
   10666:	jne    0x10650
   10668:	mov    ebx,DWORD PTR [ebp+0xc]
   1066b:	xor    eax,eax
   1066d:	mov    WORD PTR [ebx],ax
   10670:	mov    eax,DWORD PTR [ebp-0x3c]
   10673:	push   0x5
   10675:	cdq    
   10676:	pop    ecx
   10677:	idiv   ecx
   10679:	mov    DWORD PTR [ebp-0x14],0x1ab96
   10680:	mov    DWORD PTR [ebp-0x10],0x1ab8c
   10687:	mov    DWORD PTR [ebp-0xc],0x1ab84
   1068e:	mov    DWORD PTR [ebp-0x8],0x1ab7a
   10695:	mov    DWORD PTR [ebp-0x4],0x1ab70
   1069c:	mov    edx,DWORD PTR [ebp+edx*4-0x14]
   106a0:	mov    ecx,edx
   106a2:	mov    ax,WORD PTR [edx]
   106a5:	inc    edx
   106a6:	inc    edx
   106a7:	test   ax,ax
   106aa:	jne    0x106a2
   106ac:	sub    edx,ecx
   106ae:	mov    edi,ebx
   106b0:	dec    edi
   106b1:	mov    esi,ecx
   106b3:	dec    edi
   106b4:	mov    ax,WORD PTR [edi+0x2]
   106b8:	inc    edi
   106b9:	inc    edi
   106ba:	test   ax,ax
   106bd:	jne    0x106b4
   106bf:	mov    ecx,edx
   106c1:	shr    ecx,0x2
   106c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   106c6:	mov    ecx,edx
   106c8:	and    ecx,0x3
   106cb:	mov    eax,ebx
   106cd:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   106cf:	lea    ecx,[eax+0x2]
   106d2:	mov    dx,WORD PTR [eax]
   106d5:	inc    eax
   106d6:	inc    eax
   106d7:	test   dx,dx
   106da:	jne    0x106d2
   106dc:	sub    eax,ecx
   106de:	sar    eax,1
   106e0:	mov    ecx,eax
   106e2:	mov    eax,DWORD PTR [ebp-0x38]
   106e5:	push   0x3
   106e7:	cdq    
   106e8:	pop    esi
   106e9:	idiv   esi
   106eb:	inc    edx
   106ec:	inc    edx
   106ed:	je     0x107d0
   106f3:	lea    esi,[ebp-0x34]
   106f6:	mov    DWORD PTR [ebp+0x8],edx
   106f9:	mov    eax,DWORD PTR [esi]
   106fb:	cdq    
   106fc:	push   0x1a
   106fe:	pop    edi
   106ff:	idiv   edi
   10701:	add    esi,0x4
   10704:	xor    eax,eax
   10706:	add    edx,0x61
   10709:	mov    WORD PTR [ebx+ecx*2],dx
   1070d:	inc    ecx
   1070e:	dec    DWORD PTR [ebp+0x8]
   10711:	mov    WORD PTR [ebx+ecx*2],ax
   10715:	jne    0x106f9
   10717:	jmp    0x107d0
   1071c:	cmp    esi,0x1
   1071f:	je     0x1072c
   10721:	mov    eax,esi
   10723:	imul   eax,eax,0xa
   10726:	add    eax,DWORD PTR [ebp+0x10]
   10729:	add    DWORD PTR [ebp+0x8],eax
   1072c:	push   DWORD PTR [ebp+0x8]
   1072f:	lea    ecx,[ebp-0xa04]
   10735:	call   0x10574
   1073a:	lea    eax,[esi-0x1]
   1073d:	cmp    eax,0x3
   10740:	ja     0x10751
   10742:	imul   esi,esi,0x3
   10745:	add    esi,DWORD PTR [ebp+0x10]
   10748:	mov    esi,DWORD PTR [esi*4+0x700bc]
   1074f:	jmp    0x10756
   10751:	mov    esi,0x1ab6e
   10756:	mov    ebx,DWORD PTR [ebp+0xc]
   10759:	xor    eax,eax
   1075b:	mov    WORD PTR [ebx],ax
   1075e:	mov    eax,esi
   10760:	mov    edx,esi
   10762:	mov    cx,WORD PTR [eax]
   10765:	inc    eax
   10766:	inc    eax
   10767:	test   cx,cx
   1076a:	jne    0x10762
   1076c:	sub    eax,edx
   1076e:	mov    edi,ebx
   10770:	dec    edi
   10771:	dec    edi
   10772:	mov    cx,WORD PTR [edi+0x2]
   10776:	inc    edi
   10777:	inc    edi
   10778:	test   cx,cx
   1077b:	jne    0x10772
   1077d:	mov    ecx,eax
   1077f:	shr    ecx,0x2
   10782:	mov    esi,edx
   10784:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10786:	mov    ecx,eax
   10788:	and    ecx,0x3
   1078b:	mov    eax,ebx
   1078d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1078f:	lea    ecx,[eax+0x2]
   10792:	mov    dx,WORD PTR [eax]
   10795:	inc    eax
   10796:	inc    eax
   10797:	test   dx,dx
   1079a:	jne    0x10792
   1079c:	sub    eax,ecx
   1079e:	sar    eax,1
   107a0:	push   0x5
   107a2:	mov    esi,eax
   107a4:	pop    edi
   107a5:	push   0x23
   107a7:	lea    ecx,[ebp-0xa04]
   107ad:	call   0x105ec
   107b2:	cmp    eax,0xa
   107b5:	jae    0x107bc
   107b7:	add    eax,0x30
   107ba:	jmp    0x107bf
   107bc:	add    eax,0x57
   107bf:	movzx  eax,ax
   107c2:	mov    WORD PTR [ebx+esi*2],ax
   107c6:	inc    esi
   107c7:	xor    eax,eax
   107c9:	dec    edi
   107ca:	mov    WORD PTR [ebx+esi*2],ax
   107ce:	jne    0x107a5
   107d0:	pop    edi
   107d1:	pop    esi
   107d2:	pop    ebx
   107d3:	leave  
   107d4:	ret    0x10
   107d7:	int3   
   107d8:	int3   
   107d9:	int3   
   107da:	int3   
   107db:	int3   
   107dc:	mov    edi,edi
   107de:	push   ebp
   107df:	mov    ebp,esp
   107e1:	mov    eax,DWORD PTR [ebp+0x8]
   107e4:	lea    edx,[eax+0x2]
   107e7:	mov    cx,WORD PTR [eax]
   107ea:	inc    eax
   107eb:	inc    eax
   107ec:	test   cx,cx
   107ef:	jne    0x107e7
   107f1:	sub    eax,edx
   107f3:	sar    eax,1
   107f5:	pop    ebp
   107f6:	ret    0x4
   107f9:	int3   
   107fa:	int3   
   107fb:	int3   
   107fc:	int3   
   107fd:	int3   
   107fe:	mov    edi,edi
   10800:	push   ebp
   10801:	mov    ebp,esp
   10803:	push   esi
   10804:	push   0x20
   10806:	push   0x61737973
   1080b:	push   DWORD PTR [ebp+0x8]
   1080e:	push   0x1
   10810:	call   DWORD PTR ds:0x1b918
   10816:	mov    esi,eax
   10818:	test   esi,esi
   1081a:	jne    0x10827
   1081c:	push   0xc000009a
   10821:	call   DWORD PTR ds:0x1b914
   10827:	mov    eax,esi
   10829:	pop    esi
   1082a:	pop    ebp
   1082b:	ret    
   1082c:	int3   
   1082d:	int3   
   1082e:	int3   
   1082f:	int3   
   10830:	int3   
   10831:	int3   
   10832:	mov    edi,edi
   10834:	push   ebp
   10835:	mov    ebp,esp
   10837:	cmp    DWORD PTR [ebp+0x8],0x0
   1083b:	je     0x10848
   1083d:	push   0x0
   1083f:	push   DWORD PTR [ebp+0x8]
   10842:	call   DWORD PTR ds:0x1b91c
   10848:	pop    ebp
   10849:	ret    
   1084a:	int3   
   1084b:	int3   
   1084c:	int3   
   1084d:	int3   
   1084e:	int3   
   1084f:	int3   
   10850:	mov    edi,edi
   10852:	push   esi
   10853:	mov    esi,ecx
   10855:	dec    DWORD PTR [esi+0x4]
   10858:	jne    0x10869
   1085a:	push   DWORD PTR [esi]
   1085c:	call   0x10832
   10861:	push   esi
   10862:	call   0x10832
   10867:	pop    ecx
   10868:	pop    ecx
   10869:	pop    esi
   1086a:	ret    
   1086b:	int3   
   1086c:	int3   
   1086d:	int3   
   1086e:	int3   
   1086f:	int3   
   10870:	mov    edi,edi
   10872:	push   ebp
   10873:	mov    ebp,esp
   10875:	push   esi
   10876:	xor    esi,esi
   10878:	xor    edx,edx
   1087a:	cmp    DWORD PTR [ebp+0xc],esi
   1087d:	je     0x1089a
   1087f:	mov    eax,DWORD PTR [ebp+0x8]
   10882:	mov    ecx,DWORD PTR [ebp+0x10]
   10885:	mov    cl,BYTE PTR [edx+ecx*1]
   10888:	add    eax,esi
   1088a:	xor    BYTE PTR [eax],cl
   1088c:	lea    eax,[edx+0x1]
   1088f:	xor    edx,edx
   10891:	div    DWORD PTR [ebp+0x14]
   10894:	inc    esi
   10895:	cmp    esi,DWORD PTR [ebp+0xc]
   10898:	jne    0x1087f
   1089a:	pop    esi
   1089b:	pop    ebp
   1089c:	ret    0x10
   1089f:	int3   
   108a0:	int3   
   108a1:	int3   
   108a2:	int3   
   108a3:	int3   
   108a4:	mov    edi,edi
   108a6:	push   ebp
   108a7:	mov    ebp,esp
   108a9:	sub    esp,0x18
   108ac:	push   0x0
   108ae:	push   0x18
   108b0:	lea    eax,[ebp-0x18]
   108b3:	push   eax
   108b4:	push   0x0
   108b6:	push   DWORD PTR [ebp+0x8]
   108b9:	call   DWORD PTR ds:0x1b920
   108bf:	test   eax,eax
   108c1:	jl     0x108c8
   108c3:	mov    eax,DWORD PTR [ebp-0x8]
   108c6:	jmp    0x108ca
   108c8:	xor    eax,eax
   108ca:	leave  
   108cb:	ret    0x4
   108ce:	int3   
   108cf:	int3   
   108d0:	int3   
   108d1:	int3   
   108d2:	int3   
   108d3:	int3   
   108d4:	mov    edi,edi
   108d6:	push   ebp
   108d7:	mov    ebp,esp
   108d9:	mov    ecx,DWORD PTR [ebp+0x8]
   108dc:	mov    eax,ecx
   108de:	lea    edx,[eax+0x2]
   108e1:	push   esi
   108e2:	mov    si,WORD PTR [eax]
   108e5:	inc    eax
   108e6:	inc    eax
   108e7:	test   si,si
   108ea:	jne    0x108e2
   108ec:	sub    eax,edx
   108ee:	sar    eax,1
   108f0:	cmp    eax,0xc
   108f3:	jae    0x108fc
   108f5:	xor    al,al
   108f7:	jmp    0x109ca
   108fc:	lea    eax,[ecx+eax*2-0x18]
   10900:	movzx  ecx,WORD PTR [eax]
   10903:	cmp    cx,0x69
   10907:	je     0x1090f
   10909:	cmp    cx,0x49
   1090d:	jne    0x108f5
   1090f:	movzx  ecx,WORD PTR [eax+0x2]
   10913:	push   0x45
   10915:	pop    esi
   10916:	push   0x65
   10918:	pop    edx
   10919:	cmp    cx,dx
   1091c:	je     0x10923
   1091e:	cmp    cx,si
   10921:	jne    0x108f5
   10923:	movzx  ecx,WORD PTR [eax+0x4]
   10927:	cmp    cx,0x78
   1092b:	je     0x10933
   1092d:	cmp    cx,0x58
   10931:	jne    0x108f5
   10933:	movzx  ecx,WORD PTR [eax+0x6]
   10937:	cmp    cx,0x70
   1093b:	je     0x10943
   1093d:	cmp    cx,0x50
   10941:	jne    0x108f5
   10943:	movzx  ecx,WORD PTR [eax+0x8]
   10947:	cmp    cx,0x6c
   1094b:	je     0x10953
   1094d:	cmp    cx,0x4c
   10951:	jne    0x108f5
   10953:	movzx  ecx,WORD PTR [eax+0xa]
   10957:	cmp    cx,0x6f
   1095b:	je     0x10963
   1095d:	cmp    cx,0x4f
   10961:	jne    0x108f5
   10963:	movzx  ecx,WORD PTR [eax+0xc]
   10967:	cmp    cx,0x72
   1096b:	je     0x10973
   1096d:	cmp    cx,0x52
   10971:	jne    0x108f5
   10973:	movzx  ecx,WORD PTR [eax+0xe]
   10977:	cmp    cx,dx
   1097a:	je     0x10985
   1097c:	cmp    cx,si
   1097f:	jne    0x108f5
   10985:	cmp    WORD PTR [eax+0x10],0x2e
   1098a:	jne    0x108f5
   10990:	movzx  ecx,WORD PTR [eax+0x12]
   10994:	cmp    cx,dx
   10997:	je     0x109a2
   10999:	cmp    cx,si
   1099c:	jne    0x108f5
   109a2:	movzx  ecx,WORD PTR [eax+0x14]
   109a6:	cmp    cx,0x78
   109aa:	je     0x109b6
   109ac:	cmp    cx,0x58
   109b0:	jne    0x108f5
   109b6:	movzx  eax,WORD PTR [eax+0x16]
   109ba:	cmp    ax,dx
   109bd:	je     0x109c8
   109bf:	cmp    ax,si
   109c2:	jne    0x108f5
   109c8:	mov    al,0x1
   109ca:	pop    esi
   109cb:	pop    ebp
   109cc:	ret    0x4
   109cf:	int3   
   109d0:	int3   
   109d1:	int3   
   109d2:	int3   
   109d3:	int3   
   109d4:	mov    edi,edi
   109d6:	push   ebp
   109d7:	mov    ebp,esp
   109d9:	mov    ecx,DWORD PTR [ebp+0x8]
   109dc:	mov    eax,ecx
   109de:	lea    edx,[eax+0x2]
   109e1:	push   esi
   109e2:	mov    si,WORD PTR [eax]
   109e5:	inc    eax
   109e6:	inc    eax
   109e7:	test   si,si
   109ea:	jne    0x109e2
   109ec:	sub    eax,edx
   109ee:	sar    eax,1
   109f0:	pop    esi
   109f1:	cmp    eax,0xb
   109f4:	jae    0x109fd
   109f6:	xor    al,al
   109f8:	jmp    0x10ab9
   109fd:	lea    eax,[ecx+eax*2-0x16]
   10a01:	movzx  ecx,WORD PTR [eax]
   10a04:	cmp    cx,0x66
   10a08:	je     0x10a10
   10a0a:	cmp    cx,0x46
   10a0e:	jne    0x109f6
   10a10:	movzx  ecx,WORD PTR [eax+0x2]
   10a14:	cmp    cx,0x69
   10a18:	je     0x10a20
   10a1a:	cmp    cx,0x49
   10a1e:	jne    0x109f6
   10a20:	movzx  ecx,WORD PTR [eax+0x4]
   10a24:	cmp    cx,0x72
   10a28:	je     0x10a30
   10a2a:	cmp    cx,0x52
   10a2e:	jne    0x109f6
   10a30:	movzx  ecx,WORD PTR [eax+0x6]
   10a34:	cmp    cx,0x65
   10a38:	je     0x10a40
   10a3a:	cmp    cx,0x45
   10a3e:	jne    0x109f6
   10a40:	movzx  ecx,WORD PTR [eax+0x8]
   10a44:	cmp    cx,0x66
   10a48:	je     0x10a50
   10a4a:	cmp    cx,0x46
   10a4e:	jne    0x109f6
   10a50:	movzx  ecx,WORD PTR [eax+0xa]
   10a54:	cmp    cx,0x6f
   10a58:	je     0x10a60
   10a5a:	cmp    cx,0x4f
   10a5e:	jne    0x109f6
   10a60:	movzx  ecx,WORD PTR [eax+0xc]
   10a64:	cmp    cx,0x78
   10a68:	je     0x10a70
   10a6a:	cmp    cx,0x58
   10a6e:	jne    0x109f6
   10a70:	cmp    WORD PTR [eax+0xe],0x2e
   10a75:	jne    0x109f6
   10a7b:	movzx  ecx,WORD PTR [eax+0x10]
   10a7f:	cmp    cx,0x65
   10a83:	je     0x10a8f
   10a85:	cmp    cx,0x45
   10a89:	jne    0x109f6
   10a8f:	movzx  ecx,WORD PTR [eax+0x12]
   10a93:	cmp    cx,0x78
   10a97:	je     0x10aa3
   10a99:	cmp    cx,0x58
   10a9d:	jne    0x109f6
   10aa3:	movzx  eax,WORD PTR [eax+0x14]
   10aa7:	cmp    ax,0x65
   10aab:	je     0x10ab7
   10aad:	cmp    ax,0x45
   10ab1:	jne    0x109f6
   10ab7:	mov    al,0x1
   10ab9:	pop    ebp
   10aba:	ret    0x4
   10abd:	int3   
   10abe:	int3   
   10abf:	int3   
   10ac0:	int3   
   10ac1:	int3   
   10ac2:	mov    edi,edi
   10ac4:	push   ebp
   10ac5:	mov    ebp,esp
   10ac7:	mov    ecx,DWORD PTR [ebp+0x8]
   10aca:	mov    eax,ecx
   10acc:	lea    edx,[eax+0x2]
   10acf:	push   esi
   10ad0:	mov    si,WORD PTR [eax]
   10ad3:	inc    eax
   10ad4:	inc    eax
   10ad5:	test   si,si
   10ad8:	jne    0x10ad0
   10ada:	sub    eax,edx
   10adc:	sar    eax,1
   10ade:	pop    esi
   10adf:	cmp    eax,0xa
   10ae2:	jae    0x10aeb
   10ae4:	xor    al,al
   10ae6:	jmp    0x10b93
   10aeb:	lea    eax,[ecx+eax*2-0x14]
   10aef:	movzx  ecx,WORD PTR [eax]
   10af2:	cmp    cx,0x63
   10af6:	je     0x10afe
   10af8:	cmp    cx,0x43
   10afc:	jne    0x10ae4
   10afe:	movzx  ecx,WORD PTR [eax+0x2]
   10b02:	cmp    cx,0x68
   10b06:	je     0x10b0e
   10b08:	cmp    cx,0x48
   10b0c:	jne    0x10ae4
   10b0e:	movzx  ecx,WORD PTR [eax+0x4]
   10b12:	cmp    cx,0x72
   10b16:	je     0x10b1e
   10b18:	cmp    cx,0x52
   10b1c:	jne    0x10ae4
   10b1e:	movzx  ecx,WORD PTR [eax+0x6]
   10b22:	cmp    cx,0x6f
   10b26:	je     0x10b2e
   10b28:	cmp    cx,0x4f
   10b2c:	jne    0x10ae4
   10b2e:	movzx  ecx,WORD PTR [eax+0x8]
   10b32:	cmp    cx,0x6d
   10b36:	je     0x10b3e
   10b38:	cmp    cx,0x4d
   10b3c:	jne    0x10ae4
   10b3e:	movzx  ecx,WORD PTR [eax+0xa]
   10b42:	cmp    cx,0x65
   10b46:	je     0x10b4e
   10b48:	cmp    cx,0x45
   10b4c:	jne    0x10ae4
   10b4e:	cmp    WORD PTR [eax+0xc],0x2e
   10b53:	jne    0x10ae4
   10b55:	movzx  ecx,WORD PTR [eax+0xe]
   10b59:	cmp    cx,0x65
   10b5d:	je     0x10b69
   10b5f:	cmp    cx,0x45
   10b63:	jne    0x10ae4
   10b69:	movzx  ecx,WORD PTR [eax+0x10]
   10b6d:	cmp    cx,0x78
   10b71:	je     0x10b7d
   10b73:	cmp    cx,0x58
   10b77:	jne    0x10ae4
   10b7d:	movzx  eax,WORD PTR [eax+0x12]
   10b81:	cmp    ax,0x65
   10b85:	je     0x10b91
   10b87:	cmp    ax,0x45
   10b8b:	jne    0x10ae4
   10b91:	mov    al,0x1
   10b93:	pop    ebp
   10b94:	ret    0x4
   10b97:	int3   
   10b98:	int3   
   10b99:	int3   
   10b9a:	int3   
   10b9b:	int3   
   10b9c:	mov    edi,edi
   10b9e:	push   ebp
   10b9f:	mov    ebp,esp
   10ba1:	mov    ecx,DWORD PTR [ebp+0x8]
   10ba4:	mov    eax,ecx
   10ba6:	lea    edx,[eax+0x2]
   10ba9:	push   esi
   10baa:	mov    si,WORD PTR [eax]
   10bad:	inc    eax
   10bae:	inc    eax
   10baf:	test   si,si
   10bb2:	jne    0x10baa
   10bb4:	sub    eax,edx
   10bb6:	sar    eax,1
   10bb8:	pop    esi
   10bb9:	cmp    eax,0x9
   10bbc:	jae    0x10bc5
   10bbe:	xor    al,al
   10bc0:	jmp    0x10c59
   10bc5:	lea    eax,[ecx+eax*2-0x12]
   10bc9:	movzx  ecx,WORD PTR [eax]
   10bcc:	cmp    cx,0x6d
   10bd0:	je     0x10bd8
   10bd2:	cmp    cx,0x4d
   10bd6:	jne    0x10bbe
   10bd8:	movzx  ecx,WORD PTR [eax+0x2]
   10bdc:	cmp    cx,0x73
   10be0:	je     0x10be8
   10be2:	cmp    cx,0x53
   10be6:	jne    0x10bbe
   10be8:	movzx  ecx,WORD PTR [eax+0x4]
   10bec:	cmp    cx,0x68
   10bf0:	je     0x10bf8
   10bf2:	cmp    cx,0x48
   10bf6:	jne    0x10bbe
   10bf8:	movzx  ecx,WORD PTR [eax+0x6]
   10bfc:	cmp    cx,0x74
   10c00:	je     0x10c08
   10c02:	cmp    cx,0x54
   10c06:	jne    0x10bbe
   10c08:	movzx  ecx,WORD PTR [eax+0x8]
   10c0c:	cmp    cx,0x61
   10c10:	je     0x10c18
   10c12:	cmp    cx,0x41
   10c16:	jne    0x10bbe
   10c18:	cmp    WORD PTR [eax+0xa],0x2e
   10c1d:	jne    0x10bbe
   10c1f:	movzx  ecx,WORD PTR [eax+0xc]
   10c23:	cmp    cx,0x65
   10c27:	je     0x10c2f
   10c29:	cmp    cx,0x45
   10c2d:	jne    0x10bbe
   10c2f:	movzx  ecx,WORD PTR [eax+0xe]
   10c33:	cmp    cx,0x78
   10c37:	je     0x10c43
   10c39:	cmp    cx,0x58
   10c3d:	jne    0x10bbe
   10c43:	movzx  eax,WORD PTR [eax+0x10]
   10c47:	cmp    ax,0x65
   10c4b:	je     0x10c57
   10c4d:	cmp    ax,0x45
   10c51:	jne    0x10bbe
   10c57:	mov    al,0x1
   10c59:	pop    ebp
   10c5a:	ret    0x4
   10c5d:	int3   
   10c5e:	int3   
   10c5f:	int3   
   10c60:	int3   
   10c61:	int3   
   10c62:	mov    edi,edi
   10c64:	push   ebp
   10c65:	mov    ebp,esp
   10c67:	push   esi
   10c68:	mov    esi,DWORD PTR [ebp+0x8]
   10c6b:	push   esi
   10c6c:	call   0x108d4
   10c71:	test   al,al
   10c73:	je     0x10c7a
   10c75:	xor    eax,eax
   10c77:	inc    eax
   10c78:	jmp    0x10ca7
   10c7a:	push   esi
   10c7b:	call   0x109d4
   10c80:	test   al,al
   10c82:	je     0x10c89
   10c84:	push   0x2
   10c86:	pop    eax
   10c87:	jmp    0x10ca7
   10c89:	push   esi
   10c8a:	call   0x10ac2
   10c8f:	test   al,al
   10c91:	je     0x10c97
   10c93:	push   0x3
   10c95:	jmp    0x10c86
   10c97:	push   esi
   10c98:	call   0x10b9c
   10c9d:	movzx  eax,al
   10ca0:	neg    eax
   10ca2:	sbb    eax,eax
   10ca4:	and    eax,0x4
   10ca7:	pop    esi
   10ca8:	pop    ebp
   10ca9:	ret    0x4
   10cac:	int3   
   10cad:	int3   
   10cae:	int3   
   10caf:	int3   
   10cb0:	int3   
   10cb1:	int3   
   10cb2:	mov    edi,edi
   10cb4:	push   ebp
   10cb5:	mov    ebp,esp
   10cb7:	sub    esp,0x10
   10cba:	push   esi
   10cbb:	push   edi
   10cbc:	xor    eax,eax
   10cbe:	mov    WORD PTR [ebp-0x8],ax
   10cc2:	lea    edi,[ebp-0x6]
   10cc5:	stos   DWORD PTR es:[edi],eax
   10cc6:	stos   WORD PTR es:[edi],ax
   10cc8:	mov    eax,DWORD PTR [ebp+0xc]
   10ccb:	mov    DWORD PTR [ebp-0x4],eax
   10cce:	lea    ecx,[eax+0x2]
   10cd1:	mov    dx,WORD PTR [eax]
   10cd4:	inc    eax
   10cd5:	inc    eax
   10cd6:	test   dx,dx
   10cd9:	jne    0x10cd1
   10cdb:	mov    esi,DWORD PTR [ebp+0x8]
   10cde:	movzx  edx,WORD PTR [esi]
   10ce1:	sub    eax,ecx
   10ce3:	sar    eax,1
   10ce5:	lea    ecx,[eax+eax*1]
   10ce8:	mov    WORD PTR [ebp-0x8],cx
   10cec:	mov    WORD PTR [ebp-0x6],cx
   10cf0:	cmp    dx,cx
   10cf3:	jb     0x10d32
   10cf5:	xor    eax,eax
   10cf7:	lea    edi,[ebp-0xe]
   10cfa:	stos   DWORD PTR es:[edi],eax
   10cfb:	stos   WORD PTR es:[edi],ax
   10cfd:	mov    WORD PTR [ebp-0x10],cx
   10d01:	mov    WORD PTR [ebp-0xe],cx
   10d05:	movzx  eax,dx
   10d08:	movzx  ecx,cx
   10d0b:	sub    eax,ecx
   10d0d:	mov    ecx,DWORD PTR [esi+0x4]
   10d10:	cdq    
   10d11:	sub    eax,edx
   10d13:	sar    eax,1
   10d15:	lea    eax,[ecx+eax*2]
   10d18:	mov    DWORD PTR [ebp-0xc],eax
   10d1b:	push   0x1
   10d1d:	lea    eax,[ebp-0x8]
   10d20:	push   eax
   10d21:	lea    eax,[ebp-0x10]
   10d24:	push   eax
   10d25:	call   DWORD PTR ds:0x1b924
   10d2b:	neg    eax
   10d2d:	sbb    eax,eax
   10d2f:	inc    eax
   10d30:	jmp    0x10d34
   10d32:	xor    al,al
   10d34:	pop    edi
   10d35:	pop    esi
   10d36:	leave  
   10d37:	ret    0x8
   10d3a:	int3   
   10d3b:	int3   
   10d3c:	int3   
   10d3d:	int3   
   10d3e:	int3   
   10d3f:	int3   
   10d40:	mov    edi,edi
   10d42:	push   ebp
   10d43:	mov    ebp,esp
   10d45:	push   ebx
   10d46:	xor    eax,eax
   10d48:	push   eax
   10d49:	push   eax
   10d4a:	push   eax
   10d4b:	push   eax
   10d4c:	mov    ebx,0x7010c
   10d51:	push   ebx
   10d52:	call   DWORD PTR ds:0x1b92c
   10d58:	test   eax,eax
   10d5a:	jge    0x10d60
   10d5c:	xor    al,al
   10d5e:	jmp    0x10d83
   10d60:	push   esi
   10d61:	mov    esi,DWORD PTR [ebp+0x8]
   10d64:	push   edi
   10d65:	imul   esi,esi,0x14
   10d68:	mov    edi,DWORD PTR [ebp+0xc]
   10d6b:	push   0x5
   10d6d:	pop    ecx
   10d6e:	push   0x0
   10d70:	add    esi,0x70b54
   10d76:	push   ebx
   10d77:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10d79:	call   DWORD PTR ds:0x1b928
   10d7f:	pop    edi
   10d80:	mov    al,0x1
   10d82:	pop    esi
   10d83:	pop    ebx
   10d84:	pop    ebp
   10d85:	ret    0x8
   10d88:	int3   
   10d89:	int3   
   10d8a:	int3   
   10d8b:	int3   
   10d8c:	int3   
   10d8d:	int3   
   10d8e:	mov    edi,edi
   10d90:	push   ebp
   10d91:	mov    ebp,esp
   10d93:	push   ebx
   10d94:	xor    eax,eax
   10d96:	push   eax
   10d97:	push   eax
   10d98:	push   eax
   10d99:	push   eax
   10d9a:	mov    ebx,0x7010c
   10d9f:	push   ebx
   10da0:	call   DWORD PTR ds:0x1b92c
   10da6:	test   eax,eax
   10da8:	jl     0x10dcb
   10daa:	push   esi
   10dab:	mov    esi,DWORD PTR [ebp+0xc]
   10dae:	push   edi
   10daf:	mov    edi,DWORD PTR [ebp+0x8]
   10db2:	imul   edi,edi,0x14
   10db5:	push   0x5
   10db7:	pop    ecx
   10db8:	push   0x0
   10dba:	add    edi,0x70b54
   10dc0:	push   ebx
   10dc1:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10dc3:	call   DWORD PTR ds:0x1b928
   10dc9:	pop    edi
   10dca:	pop    esi
   10dcb:	pop    ebx
   10dcc:	pop    ebp
   10dcd:	ret    0x8
   10dd0:	int3   
   10dd1:	int3   
   10dd2:	int3   
   10dd3:	int3   
   10dd4:	int3   
   10dd5:	int3   
   10dd6:	mov    edi,edi
   10dd8:	push   ebp
   10dd9:	mov    ebp,esp
   10ddb:	sub    esp,0x14
   10dde:	and    DWORD PTR [ebp-0x14],0x0
   10de2:	push   edi
   10de3:	xor    eax,eax
   10de5:	lea    edi,[ebp-0x10]
   10de8:	stos   DWORD PTR es:[edi],eax
   10de9:	stos   DWORD PTR es:[edi],eax
   10dea:	stos   DWORD PTR es:[edi],eax
   10deb:	stos   DWORD PTR es:[edi],eax
   10dec:	lea    eax,[ebp-0x14]
   10def:	push   eax
   10df0:	push   DWORD PTR [ebp+0x8]
   10df3:	call   0x10d8e
   10df8:	pop    edi
   10df9:	leave  
   10dfa:	ret    0x4
   10dfd:	int3   
   10dfe:	int3   
   10dff:	int3   
   10e00:	int3   
   10e01:	int3   
   10e02:	mov    edi,edi
   10e04:	push   ebp
   10e05:	mov    ebp,esp
   10e07:	push   ebx
   10e08:	xor    eax,eax
   10e0a:	push   eax
   10e0b:	push   eax
   10e0c:	push   eax
   10e0d:	push   eax
   10e0e:	mov    ebx,0x70a98
   10e13:	push   ebx
   10e14:	call   DWORD PTR ds:0x1b92c
   10e1a:	test   eax,eax
   10e1c:	jl     0x10e38
   10e1e:	push   esi
   10e1f:	mov    esi,DWORD PTR [ebp+0x8]
   10e22:	push   edi
   10e23:	push   0x40
   10e25:	pop    ecx
   10e26:	push   0x0
   10e28:	mov    edi,0x70b80
   10e2d:	push   ebx
   10e2e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10e30:	call   DWORD PTR ds:0x1b928
   10e36:	pop    edi
   10e37:	pop    esi
   10e38:	pop    ebx
   10e39:	pop    ebp
   10e3a:	ret    0x4
   10e3d:	int3   
   10e3e:	int3   
   10e3f:	int3   
   10e40:	int3   
   10e41:	int3   
   10e42:	mov    edi,edi
   10e44:	push   ebp
   10e45:	mov    ebp,esp
   10e47:	push   ebx
   10e48:	xor    eax,eax
   10e4a:	push   eax
   10e4b:	push   eax
   10e4c:	push   eax
   10e4d:	push   eax
   10e4e:	mov    ebx,0x70a98
   10e53:	push   ebx
   10e54:	call   DWORD PTR ds:0x1b92c
   10e5a:	test   eax,eax
   10e5c:	jge    0x10e62
   10e5e:	xor    al,al
   10e60:	jmp    0x10e88
   10e62:	push   esi
   10e63:	push   edi
   10e64:	mov    edi,DWORD PTR [ebp+0x8]
   10e67:	push   0x40
   10e69:	pop    ecx
   10e6a:	push   0x0
   10e6c:	mov    esi,0x70b80
   10e71:	push   ebx
   10e72:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10e74:	call   DWORD PTR ds:0x1b928
   10e7a:	xor    eax,eax
   10e7c:	cmp    WORD PTR ds:0x70b80,ax
   10e83:	pop    edi
   10e84:	setne  al
   10e87:	pop    esi
   10e88:	pop    ebx
   10e89:	pop    ebp
   10e8a:	ret    0x4
   10e8d:	int3   
   10e8e:	int3   
   10e8f:	int3   
   10e90:	int3   
   10e91:	int3   
   10e92:	mov    edi,edi
   10e94:	push   ebp
   10e95:	mov    ebp,esp
   10e97:	sub    esp,0x43c
   10e9d:	mov    eax,ds:0x70100
   10ea2:	xor    eax,ebp
   10ea4:	mov    DWORD PTR [ebp-0x4],eax
   10ea7:	mov    eax,DWORD PTR [ebp+0xc]
   10eaa:	push   ebx
   10eab:	push   esi
   10eac:	mov    esi,DWORD PTR [ebp+0x8]
   10eaf:	push   edi
   10eb0:	xor    ebx,ebx
   10eb2:	push   0x3ff
   10eb7:	mov    DWORD PTR [ebp-0x418],eax
   10ebd:	lea    eax,[ebp-0x403]
   10ec3:	push   ebx
   10ec4:	push   eax
   10ec5:	mov    DWORD PTR [ebp-0x424],esi
   10ecb:	mov    BYTE PTR [ebp-0x404],bl
   10ed1:	call   0x1a7aa
   10ed6:	add    esp,0xc
   10ed9:	lea    eax,[ebp-0x410]
   10edf:	push   eax
   10ee0:	push   0x400
   10ee5:	lea    eax,[ebp-0x404]
   10eeb:	push   eax
   10eec:	push   ebx
   10eed:	push   ebx
   10eee:	push   esi
   10eef:	jmp    0x1109c
   10ef4:	cmp    eax,ebx
   10ef6:	jl     0x110bd
   10efc:	mov    eax,DWORD PTR [ebp-0x418]
   10f02:	lea    edx,[eax+0x2]
   10f05:	mov    cx,WORD PTR [eax]
   10f08:	inc    eax
   10f09:	inc    eax
   10f0a:	cmp    cx,bx
   10f0d:	jne    0x10f05
   10f0f:	mov    ecx,DWORD PTR [ebp-0x3f8]
   10f15:	sub    eax,edx
   10f17:	shr    ecx,1
   10f19:	sar    eax,1
   10f1b:	lea    esi,[ecx+eax*1+0x2]
   10f1f:	xor    ecx,ecx
   10f21:	push   0x2
   10f23:	pop    edx
   10f24:	mov    eax,esi
   10f26:	mul    edx
   10f28:	seto   cl
   10f2b:	neg    ecx
   10f2d:	or     ecx,eax
   10f2f:	push   ecx
   10f30:	call   0x107fe
   10f35:	mov    edi,eax
   10f37:	lea    eax,[esi+esi*1]
   10f3a:	push   eax
   10f3b:	push   ebx
   10f3c:	push   edi
   10f3d:	mov    DWORD PTR [ebp-0x40c],edi
   10f43:	call   0x1a7aa
   10f48:	mov    eax,DWORD PTR [ebp-0x418]
   10f4e:	add    esp,0x10
   10f51:	mov    ecx,eax
   10f53:	mov    dx,WORD PTR [eax]
   10f56:	inc    eax
   10f57:	inc    eax
   10f58:	cmp    dx,bx
   10f5b:	jne    0x10f53
   10f5d:	sub    eax,ecx
   10f5f:	dec    edi
   10f60:	mov    esi,ecx
   10f62:	dec    edi
   10f63:	mov    cx,WORD PTR [edi+0x2]
   10f67:	inc    edi
   10f68:	inc    edi
   10f69:	cmp    cx,bx
   10f6c:	jne    0x10f63
   10f6e:	mov    ecx,eax
   10f70:	shr    ecx,0x2
   10f73:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10f75:	mov    ecx,eax
   10f77:	and    ecx,0x3
   10f7a:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   10f7c:	mov    edi,DWORD PTR [ebp-0x40c]
   10f82:	dec    edi
   10f83:	dec    edi
   10f84:	mov    ax,WORD PTR [edi+0x2]
   10f88:	inc    edi
   10f89:	inc    edi
   10f8a:	cmp    ax,bx
   10f8d:	jne    0x10f84
   10f8f:	mov    esi,0x1ab6a
   10f94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10f95:	mov    eax,DWORD PTR [ebp-0x3f8]
   10f9b:	shr    eax,1
   10f9d:	push   eax
   10f9e:	lea    eax,[ebp-0x3f4]
   10fa4:	push   eax
   10fa5:	push   DWORD PTR [ebp-0x40c]
   10fab:	call   0x1a79e
   10fb0:	mov    esi,DWORD PTR [ebp-0x40c]
   10fb6:	mov    eax,esi
   10fb8:	add    esp,0xc
   10fbb:	mov    DWORD PTR [ebp-0x41c],esi
   10fc1:	lea    edx,[eax+0x2]
   10fc4:	mov    cx,WORD PTR [eax]
   10fc7:	inc    eax
   10fc8:	inc    eax
   10fc9:	cmp    cx,bx
   10fcc:	jne    0x10fc4
   10fce:	sub    eax,edx
   10fd0:	sar    eax,1
   10fd2:	add    eax,eax
   10fd4:	mov    WORD PTR [ebp-0x41e],ax
   10fdb:	mov    WORD PTR [ebp-0x420],ax
   10fe2:	lea    eax,[ebp-0x420]
   10fe8:	mov    DWORD PTR [ebp-0x434],eax
   10fee:	lea    eax,[ebp-0x43c]
   10ff4:	push   eax
   10ff5:	push   0xf003f
   10ffa:	lea    eax,[ebp-0x414]
   11000:	push   eax
   11001:	mov    DWORD PTR [ebp-0x43c],0x18
   1100b:	mov    DWORD PTR [ebp-0x438],ebx
   11011:	mov    DWORD PTR [ebp-0x430],0x40
   1101b:	mov    DWORD PTR [ebp-0x42c],ebx
   11021:	mov    DWORD PTR [ebp-0x428],ebx
   11027:	call   DWORD PTR ds:0x1b938
   1102d:	push   esi
   1102e:	test   eax,eax
   11030:	jl     0x110b7
   11036:	push   DWORD PTR [ebp-0x414]
   1103c:	call   0x10e92
   11041:	push   esi
   11042:	mov    BYTE PTR [ebp-0x405],al
   11048:	call   0x10832
   1104d:	pop    ecx
   1104e:	push   DWORD PTR [ebp-0x414]
   11054:	call   DWORD PTR ds:0x1b934
   1105a:	test   eax,eax
   1105c:	jl     0x110bd
   1105e:	cmp    BYTE PTR [ebp-0x405],bl
   11064:	je     0x110bd
   11066:	push   0x3ff
   1106b:	lea    eax,[ebp-0x403]
   11071:	push   ebx
   11072:	push   eax
   11073:	mov    BYTE PTR [ebp-0x404],bl
   11079:	call   0x1a7aa
   1107e:	add    esp,0xc
   11081:	lea    eax,[ebp-0x410]
   11087:	push   eax
   11088:	push   0x400
   1108d:	lea    eax,[ebp-0x404]
   11093:	push   eax
   11094:	push   ebx
   11095:	push   ebx
   11096:	push   DWORD PTR [ebp-0x424]
   1109c:	mov    DWORD PTR [ebp-0x410],ebx
   110a2:	call   DWORD PTR ds:0x1b930
   110a8:	cmp    eax,0x8000001a
   110ad:	jne    0x10ef4
   110b3:	mov    al,0x1
   110b5:	jmp    0x110bf
   110b7:	call   0x10832
   110bc:	pop    ecx
   110bd:	xor    al,al
   110bf:	mov    ecx,DWORD PTR [ebp-0x4]
   110c2:	pop    edi
   110c3:	pop    esi
   110c4:	xor    ecx,ebp
   110c6:	pop    ebx
   110c7:	call   0x1a745
   110cc:	leave  
   110cd:	ret    0x8
   110d0:	int3   
   110d1:	int3   
   110d2:	int3   
   110d3:	int3   
   110d4:	int3   
   110d5:	int3   
   110d6:	mov    eax,ds:0x70b00
   110db:	test   eax,eax
   110dd:	je     0x110ed
   110df:	push   eax
   110e0:	call   DWORD PTR ds:0x1b944
   110e6:	and    DWORD PTR ds:0x70b00,0x0
   110ed:	ret    
   110ee:	int3   
   110ef:	int3   
   110f0:	int3   
   110f1:	int3   
   110f2:	int3   
   110f3:	int3   
   110f4:	mov    edi,edi
   110f6:	push   ebp
   110f7:	mov    ebp,esp
   110f9:	sub    esp,0x18
   110fc:	and    DWORD PTR [ebp-0x18],0x0
   11100:	push   edi
   11101:	xor    eax,eax
   11103:	lea    edi,[ebp-0x14]
   11106:	stos   DWORD PTR es:[edi],eax
   11107:	stos   DWORD PTR es:[edi],eax
   11108:	stos   DWORD PTR es:[edi],eax
   11109:	stos   DWORD PTR es:[edi],eax
   1110a:	lea    eax,[ebp-0x18]
   1110d:	push   eax
   1110e:	push   0x1
   11110:	call   0x10d40
   11115:	pop    edi
   11116:	test   al,al
   11118:	je     0x1116c
   1111a:	cmp    DWORD PTR [ebp-0x18],0x0
   1111e:	je     0x1116c
   11120:	lea    eax,[ebp-0x4]
   11123:	push   eax
   11124:	push   DWORD PTR [ebp-0x18]
   11127:	call   DWORD PTR ds:0x1b950
   1112d:	test   eax,eax
   1112f:	jl     0x1116c
   11131:	push   esi
   11132:	push   DWORD PTR [ebp-0x4]
   11135:	call   DWORD PTR ds:0x1b94c
   1113b:	mov    esi,DWORD PTR [ebp-0xc]
   1113e:	mov    eax,DWORD PTR [ebp+0x8]
   11141:	lea    edx,[esi+0x14]
   11144:	sub    edx,eax
   11146:	movzx  ecx,WORD PTR [eax]
   11149:	mov    WORD PTR [edx+eax*1],cx
   1114d:	inc    eax
   1114e:	inc    eax
   1114f:	test   cx,cx
   11152:	jne    0x11146
   11154:	mov    eax,DWORD PTR [esi+0x4]
   11157:	mov    cl,BYTE PTR [esi+0x8]
   1115a:	mov    BYTE PTR [eax],cl
   1115c:	call   DWORD PTR ds:0x1b948
   11162:	mov    ecx,DWORD PTR [ebp-0x4]
   11165:	call   DWORD PTR ds:0x1b9d0
   1116b:	pop    esi
   1116c:	leave  
   1116d:	ret    0x4
   11170:	int3   
   11171:	int3   
   11172:	int3   
   11173:	int3   
   11174:	int3   
   11175:	int3   
   11176:	push   0x0
   11178:	push   0x70ad0
   1117d:	call   DWORD PTR ds:0x1b958
   11183:	push   0x100
   11188:	push   0x0
   1118a:	push   0x70198
   1118f:	call   0x1a7aa
   11194:	add    esp,0xc
   11197:	ret    
   11198:	int3   
   11199:	int3   
   1119a:	int3   
   1119b:	int3   
   1119c:	int3   
   1119d:	int3   
   1119e:	mov    edi,edi
   111a0:	push   ebp
   111a1:	mov    ebp,esp
   111a3:	push   ebx
   111a4:	mov    ebx,DWORD PTR [ebp+0x8]
   111a7:	cmp    ebx,0x40
   111aa:	ja     0x111d7
   111ac:	push   esi
   111ad:	push   edi
   111ae:	xor    edi,edi
   111b0:	push   edi
   111b1:	push   edi
   111b2:	push   edi
   111b3:	push   edi
   111b4:	mov    esi,0x70ad0
   111b9:	push   esi
   111ba:	call   DWORD PTR ds:0x1b92c
   111c0:	test   eax,eax
   111c2:	jl     0x111d5
   111c4:	push   edi
   111c5:	lea    eax,[ebx*4+0x70198]
   111cc:	inc    DWORD PTR [eax]
   111ce:	push   esi
   111cf:	call   DWORD PTR ds:0x1b928
   111d5:	pop    edi
   111d6:	pop    esi
   111d7:	pop    ebx
   111d8:	pop    ebp
   111d9:	ret    0x4
   111dc:	int3   
   111dd:	int3   
   111de:	int3   
   111df:	int3   
   111e0:	int3   
   111e1:	int3   
   111e2:	mov    edi,edi
   111e4:	push   ebp
   111e5:	mov    ebp,esp
   111e7:	push   ebx
   111e8:	push   esi
   111e9:	push   edi
   111ea:	mov    edi,DWORD PTR [ebp+0x8]
   111ed:	cmp    edi,0x40
   111f0:	ja     0x1121b
   111f2:	xor    ebx,ebx
   111f4:	push   ebx
   111f5:	push   ebx
   111f6:	push   ebx
   111f7:	push   ebx
   111f8:	mov    esi,0x70ad0
   111fd:	push   esi
   111fe:	call   DWORD PTR ds:0x1b92c
   11204:	test   eax,eax
   11206:	jl     0x1121b
   11208:	mov    edi,DWORD PTR [edi*4+0x70198]
   1120f:	push   ebx
   11210:	push   esi
   11211:	call   DWORD PTR ds:0x1b928
   11217:	mov    eax,edi
   11219:	jmp    0x1121d
   1121b:	xor    eax,eax
   1121d:	pop    edi
   1121e:	pop    esi
   1121f:	pop    ebx
   11220:	pop    ebp
   11221:	ret    0x4
   11224:	int3   
   11225:	int3   
   11226:	int3   
   11227:	int3   
   11228:	int3   
   11229:	int3   
   1122a:	mov    edi,edi
   1122c:	push   esi
   1122d:	mov    esi,ecx
   1122f:	push   DWORD PTR [esi+0x18]
   11232:	call   0x10832
   11237:	push   DWORD PTR [esi+0x10]
   1123a:	call   0x10832
   1123f:	push   DWORD PTR [esi+0x8]
   11242:	call   0x10832
   11247:	push   DWORD PTR [esi]
   11249:	call   0x10832
   1124e:	add    esp,0x10
   11251:	pop    esi
   11252:	ret    
   11253:	int3   
   11254:	int3   
   11255:	int3   
   11256:	int3   
   11257:	int3   
   11258:	mov    edi,edi
   1125a:	push   esi
   1125b:	mov    esi,ecx
   1125d:	lea    ecx,[esi+0x8]
   11260:	call   0x1122a
   11265:	push   DWORD PTR [esi]
   11267:	call   0x10832
   1126c:	pop    ecx
   1126d:	pop    esi
   1126e:	ret    
   1126f:	int3   
   11270:	int3   
   11271:	int3   
   11272:	int3   
   11273:	int3   
   11274:	mov    edi,edi
   11276:	push   ebp
   11277:	mov    ebp,esp
   11279:	push   esi
   1127a:	mov    esi,DWORD PTR [ebp+0xc]
   1127d:	push   edi
   1127e:	mov    edi,ecx
   11280:	cmp    esi,0xffffffff
   11283:	jne    0x11294
   11285:	mov    esi,DWORD PTR [ebp+0x8]
   11288:	lea    ecx,[esi+0x1]
   1128b:	mov    al,BYTE PTR [esi]
   1128d:	inc    esi
   1128e:	test   al,al
   11290:	jne    0x1128b
   11292:	sub    esi,ecx
   11294:	lea    eax,[esi+0x1]
   11297:	push   eax
   11298:	call   0x107fe
   1129d:	pop    ecx
   1129e:	mov    DWORD PTR [edi],eax
   112a0:	test   eax,eax
   112a2:	jne    0x112af
   112a4:	push   0xc000009a
   112a9:	call   DWORD PTR ds:0x1b914
   112af:	mov    eax,DWORD PTR [edi]
   112b1:	push   esi
   112b2:	push   DWORD PTR [ebp+0x8]
   112b5:	mov    BYTE PTR [esi+eax*1],0x0
   112b9:	push   DWORD PTR [edi]
   112bb:	call   0x1a7b6
   112c0:	add    esp,0xc
   112c3:	mov    DWORD PTR [edi+0x4],esi
   112c6:	pop    edi
   112c7:	pop    esi
   112c8:	pop    ebp
   112c9:	ret    0x8
   112cc:	int3   
   112cd:	int3   
   112ce:	int3   
   112cf:	int3   
   112d0:	int3   
   112d1:	int3   
   112d2:	mov    edi,edi
   112d4:	push   ebp
   112d5:	mov    ebp,esp
   112d7:	mov    eax,DWORD PTR [ebp+0x8]
   112da:	mov    edx,DWORD PTR [ebp+0xc]
   112dd:	push   esi
   112de:	xor    esi,esi
   112e0:	jmp    0x11305
   112e2:	mov    ecx,eax
   112e4:	and    ecx,0x1
   112e7:	or     ecx,esi
   112e9:	push   esi
   112ea:	jne    0x112f7
   112ec:	push   0x2
   112ee:	push   edx
   112ef:	push   eax
   112f0:	call   0x1a792
   112f5:	jmp    0x11305
   112f7:	push   0x3
   112f9:	push   edx
   112fa:	push   eax
   112fb:	call   0x1a786
   11300:	add    eax,0x1
   11303:	adc    edx,esi
   11305:	cmp    eax,0x4
   11308:	jne    0x112e2
   1130a:	cmp    edx,esi
   1130c:	jne    0x112e2
   1130e:	pop    esi
   1130f:	pop    ebp
   11310:	ret    0x8
   11313:	int3   
   11314:	int3   
   11315:	int3   
   11316:	int3   
   11317:	int3   
   11318:	mov    edi,edi
   1131a:	push   esi
   1131b:	mov    esi,ecx
   1131d:	push   DWORD PTR [esi+0x8]
   11320:	call   0x10832
   11325:	push   DWORD PTR [esi]
   11327:	call   0x10832
   1132c:	pop    ecx
   1132d:	pop    ecx
   1132e:	pop    esi
   1132f:	ret    
   11330:	int3   
   11331:	int3   
   11332:	int3   
   11333:	int3   
   11334:	int3   
   11335:	int3   
   11336:	mov    edi,edi
   11338:	push   ebp
   11339:	mov    ebp,esp
   1133b:	push   esi
   1133c:	push   edi
   1133d:	mov    edi,DWORD PTR [ebp+0xc]
   11340:	mov    esi,ecx
   11342:	cmp    edi,0xffffffff
   11345:	jne    0x11351
   11347:	push   DWORD PTR [ebp+0x8]
   1134a:	call   0x107dc
   1134f:	mov    edi,eax
   11351:	xor    ecx,ecx
   11353:	push   0x2
   11355:	pop    edx
   11356:	lea    eax,[edi+0x1]
   11359:	mul    edx
   1135b:	seto   cl
   1135e:	neg    ecx
   11360:	or     ecx,eax
   11362:	push   ecx
   11363:	call   0x107fe
   11368:	pop    ecx
   11369:	mov    DWORD PTR [esi],eax
   1136b:	test   eax,eax
   1136d:	jne    0x1137a
   1136f:	push   0xc000009a
   11374:	call   DWORD PTR ds:0x1b914
   1137a:	mov    ecx,DWORD PTR [esi]
   1137c:	lea    eax,[edi+edi*1]
   1137f:	push   eax
   11380:	push   DWORD PTR [ebp+0x8]
   11383:	xor    edx,edx
   11385:	mov    WORD PTR [eax+ecx*1],dx
   11389:	push   DWORD PTR [esi]
   1138b:	call   0x1a7b6
   11390:	add    esp,0xc
   11393:	mov    DWORD PTR [esi+0x4],edi
   11396:	pop    edi
   11397:	pop    esi
   11398:	pop    ebp
   11399:	ret    0x8
   1139c:	int3   
   1139d:	int3   
   1139e:	int3   
   1139f:	int3   
   113a0:	int3   
   113a1:	int3   
   113a2:	mov    edi,edi
   113a4:	push   ebp
   113a5:	mov    ebp,esp
   113a7:	mov    eax,DWORD PTR [ebp+0x8]
   113aa:	mov    edx,DWORD PTR ds:0x70c88
   113b0:	jmp    0x113b4
   113b2:	mov    eax,ecx
   113b4:	mov    ecx,DWORD PTR [eax+0x8]
   113b7:	cmp    ecx,edx
   113b9:	jne    0x113b2
   113bb:	pop    ebp
   113bc:	ret    0x4
   113bf:	int3   
   113c0:	int3   
   113c1:	int3   
   113c2:	int3   
   113c3:	int3   
   113c4:	mov    edi,edi
   113c6:	push   ebp
   113c7:	mov    ebp,esp
   113c9:	mov    eax,DWORD PTR [ebp+0x8]
   113cc:	mov    edx,DWORD PTR ds:0x70c88
   113d2:	jmp    0x113d6
   113d4:	mov    eax,ecx
   113d6:	mov    ecx,DWORD PTR [eax]
   113d8:	cmp    ecx,edx
   113da:	jne    0x113d4
   113dc:	pop    ebp
   113dd:	ret    0x4
   113e0:	int3   
   113e1:	int3   
   113e2:	int3   
   113e3:	int3   
   113e4:	int3   
   113e5:	int3   
   113e6:	mov    edi,edi
   113e8:	push   esi
   113e9:	mov    esi,ecx
   113eb:	mov    ecx,DWORD PTR [esi]
   113ed:	cmp    DWORD PTR [ecx+0x14],0x0
   113f1:	jne    0x11400
   113f3:	mov    eax,DWORD PTR [ecx+0x4]
   113f6:	cmp    DWORD PTR [eax+0x4],ecx
   113f9:	jne    0x11400
   113fb:	mov    eax,DWORD PTR [ecx+0x8]
   113fe:	jmp    0x1141d
   11400:	mov    eax,DWORD PTR [ecx]
   11402:	cmp    eax,DWORD PTR ds:0x70c88
   11408:	je     0x11416
   1140a:	push   eax
   1140b:	call   0x113a2
   11410:	jmp    0x1141d
   11412:	mov    DWORD PTR [esi],eax
   11414:	mov    ecx,eax
   11416:	mov    eax,DWORD PTR [ecx+0x4]
   11419:	cmp    ecx,DWORD PTR [eax]
   1141b:	je     0x11412
   1141d:	mov    DWORD PTR [esi],eax
   1141f:	pop    esi
   11420:	ret    
   11421:	int3   
   11422:	int3   
   11423:	int3   
   11424:	int3   
   11425:	int3   
   11426:	mov    edi,edi
   11428:	push   esi
   11429:	mov    esi,ecx
   1142b:	mov    ecx,DWORD PTR [esi]
   1142d:	mov    eax,DWORD PTR [ecx+0x8]
   11430:	cmp    eax,DWORD PTR ds:0x70c88
   11436:	je     0x11444
   11438:	push   eax
   11439:	call   0x113c4
   1143e:	jmp    0x11453
   11440:	mov    DWORD PTR [esi],eax
   11442:	mov    ecx,eax
   11444:	mov    eax,DWORD PTR [ecx+0x4]
   11447:	cmp    ecx,DWORD PTR [eax+0x8]
   1144a:	je     0x11440
   1144c:	mov    ecx,DWORD PTR [esi]
   1144e:	cmp    DWORD PTR [ecx+0x8],eax
   11451:	je     0x11455
   11453:	mov    DWORD PTR [esi],eax
   11455:	pop    esi
   11456:	ret    
   11457:	int3   
   11458:	int3   
   11459:	int3   
   1145a:	int3   
   1145b:	int3   
   1145c:	mov    edi,edi
   1145e:	push   ebp
   1145f:	mov    ebp,esp
   11461:	mov    edx,DWORD PTR [ebp+0x8]
   11464:	mov    eax,DWORD PTR [edx+0x8]
   11467:	push   esi
   11468:	mov    esi,DWORD PTR [eax]
   1146a:	mov    DWORD PTR [edx+0x8],esi
   1146d:	mov    esi,DWORD PTR [eax]
   1146f:	cmp    esi,DWORD PTR ds:0x70c90
   11475:	je     0x1147a
   11477:	mov    DWORD PTR [esi+0x4],edx
   1147a:	mov    esi,DWORD PTR [edx+0x4]
   1147d:	mov    DWORD PTR [eax+0x4],esi
   11480:	mov    ecx,DWORD PTR [ecx+0x4]
   11483:	pop    esi
   11484:	cmp    edx,DWORD PTR [ecx+0x4]
   11487:	jne    0x1148e
   11489:	mov    DWORD PTR [ecx+0x4],eax
   1148c:	jmp    0x1149c
   1148e:	mov    ecx,DWORD PTR [edx+0x4]
   11491:	cmp    edx,DWORD PTR [ecx]
   11493:	jne    0x11499
   11495:	mov    DWORD PTR [ecx],eax
   11497:	jmp    0x1149c
   11499:	mov    DWORD PTR [ecx+0x8],eax
   1149c:	mov    DWORD PTR [eax],edx
   1149e:	mov    DWORD PTR [edx+0x4],eax
   114a1:	pop    ebp
   114a2:	ret    0x4
   114a5:	int3   
   114a6:	int3   
   114a7:	int3   
   114a8:	int3   
   114a9:	int3   
   114aa:	mov    edi,edi
   114ac:	push   ebp
   114ad:	mov    ebp,esp
   114af:	mov    eax,DWORD PTR [ebp+0x8]
   114b2:	mov    edx,DWORD PTR ds:0x70c90
   114b8:	jmp    0x114bc
   114ba:	mov    eax,ecx
   114bc:	mov    ecx,DWORD PTR [eax+0x8]
   114bf:	cmp    ecx,edx
   114c1:	jne    0x114ba
   114c3:	pop    ebp
   114c4:	ret    0x4
   114c7:	int3   
   114c8:	int3   
   114c9:	int3   
   114ca:	int3   
   114cb:	int3   
   114cc:	mov    edi,edi
   114ce:	push   ebp
   114cf:	mov    ebp,esp
   114d1:	mov    edx,DWORD PTR [ebp+0x8]
   114d4:	mov    eax,DWORD PTR [edx]
   114d6:	push   esi
   114d7:	mov    esi,DWORD PTR [eax+0x8]
   114da:	mov    DWORD PTR [edx],esi
   114dc:	mov    esi,DWORD PTR [eax+0x8]
   114df:	cmp    esi,DWORD PTR ds:0x70c90
   114e5:	je     0x114ea
   114e7:	mov    DWORD PTR [esi+0x4],edx
   114ea:	mov    esi,DWORD PTR [edx+0x4]
   114ed:	mov    DWORD PTR [eax+0x4],esi
   114f0:	mov    ecx,DWORD PTR [ecx+0x4]
   114f3:	pop    esi
   114f4:	cmp    edx,DWORD PTR [ecx+0x4]
   114f7:	jne    0x114fe
   114f9:	mov    DWORD PTR [ecx+0x4],eax
   114fc:	jmp    0x1150d
   114fe:	mov    ecx,DWORD PTR [edx+0x4]
   11501:	cmp    edx,DWORD PTR [ecx+0x8]
   11504:	jne    0x1150b
   11506:	mov    DWORD PTR [ecx+0x8],eax
   11509:	jmp    0x1150d
   1150b:	mov    DWORD PTR [ecx],eax
   1150d:	mov    DWORD PTR [eax+0x8],edx
   11510:	mov    DWORD PTR [edx+0x4],eax
   11513:	pop    ebp
   11514:	ret    0x4
   11517:	int3   
   11518:	int3   
   11519:	int3   
   1151a:	int3   
   1151b:	int3   
   1151c:	mov    edi,edi
   1151e:	push   esi
   1151f:	mov    esi,ecx
   11521:	mov    ecx,DWORD PTR [esi]
   11523:	cmp    DWORD PTR [ecx+0x50],0x0
   11527:	jne    0x11536
   11529:	mov    eax,DWORD PTR [ecx+0x4]
   1152c:	cmp    DWORD PTR [eax+0x4],ecx
   1152f:	jne    0x11536
   11531:	mov    eax,DWORD PTR [ecx+0x8]
   11534:	jmp    0x11553
   11536:	mov    eax,DWORD PTR [ecx]
   11538:	cmp    eax,DWORD PTR ds:0x70c90
   1153e:	je     0x1154c
   11540:	push   eax
   11541:	call   0x114aa
   11546:	jmp    0x11553
   11548:	mov    DWORD PTR [esi],eax
   1154a:	mov    ecx,eax
   1154c:	mov    eax,DWORD PTR [ecx+0x4]
   1154f:	cmp    ecx,DWORD PTR [eax]
   11551:	je     0x11548
   11553:	mov    DWORD PTR [esi],eax
   11555:	pop    esi
   11556:	ret    
   11557:	int3   
   11558:	int3   
   11559:	int3   
   1155a:	int3   
   1155b:	int3   
   1155c:	mov    edi,edi
   1155e:	push   ebp
   1155f:	mov    ebp,esp
   11561:	mov    eax,DWORD PTR [ebp+0x8]
   11564:	mov    edx,DWORD PTR ds:0x70c94
   1156a:	jmp    0x1156e
   1156c:	mov    eax,ecx
   1156e:	mov    ecx,DWORD PTR [eax+0x8]
   11571:	cmp    ecx,edx
   11573:	jne    0x1156c
   11575:	pop    ebp
   11576:	ret    0x4
   11579:	int3   
   1157a:	int3   
   1157b:	int3   
   1157c:	int3   
   1157d:	int3   
   1157e:	mov    edi,edi
   11580:	push   ebp
   11581:	mov    ebp,esp
   11583:	mov    eax,DWORD PTR [ebp+0x8]
   11586:	mov    edx,DWORD PTR ds:0x70c94
   1158c:	jmp    0x11590
   1158e:	mov    eax,ecx
   11590:	mov    ecx,DWORD PTR [eax]
   11592:	cmp    ecx,edx
   11594:	jne    0x1158e
   11596:	pop    ebp
   11597:	ret    0x4
   1159a:	int3   
   1159b:	int3   
   1159c:	int3   
   1159d:	int3   
   1159e:	int3   
   1159f:	int3   
   115a0:	mov    edi,edi
   115a2:	push   esi
   115a3:	mov    esi,ecx
   115a5:	mov    ecx,DWORD PTR [esi]
   115a7:	cmp    DWORD PTR [ecx+0x1c],0x0
   115ab:	jne    0x115ba
   115ad:	mov    eax,DWORD PTR [ecx+0x4]
   115b0:	cmp    DWORD PTR [eax+0x4],ecx
   115b3:	jne    0x115ba
   115b5:	mov    eax,DWORD PTR [ecx+0x8]
   115b8:	jmp    0x115d7
   115ba:	mov    eax,DWORD PTR [ecx]
   115bc:	cmp    eax,DWORD PTR ds:0x70c94
   115c2:	je     0x115d0
   115c4:	push   eax
   115c5:	call   0x1155c
   115ca:	jmp    0x115d7
   115cc:	mov    DWORD PTR [esi],eax
   115ce:	mov    ecx,eax
   115d0:	mov    eax,DWORD PTR [ecx+0x4]
   115d3:	cmp    ecx,DWORD PTR [eax]
   115d5:	je     0x115cc
   115d7:	mov    DWORD PTR [esi],eax
   115d9:	pop    esi
   115da:	ret    
   115db:	int3   
   115dc:	int3   
   115dd:	int3   
   115de:	int3   
   115df:	int3   
   115e0:	mov    edi,edi
   115e2:	push   ebp
   115e3:	mov    ebp,esp
   115e5:	mov    eax,DWORD PTR [ebp+0x8]
   115e8:	mov    edx,DWORD PTR ds:0x70c98
   115ee:	jmp    0x115f2
   115f0:	mov    eax,ecx
   115f2:	mov    ecx,DWORD PTR [eax+0x8]
   115f5:	cmp    ecx,edx
   115f7:	jne    0x115f0
   115f9:	pop    ebp
   115fa:	ret    0x4
   115fd:	int3   
   115fe:	int3   
   115ff:	int3   
   11600:	int3   
   11601:	int3   
   11602:	mov    edi,edi
   11604:	push   ebp
   11605:	mov    ebp,esp
   11607:	mov    eax,DWORD PTR [ebp+0x8]
   1160a:	mov    edx,DWORD PTR ds:0x70c98
   11610:	jmp    0x11614
   11612:	mov    eax,ecx
   11614:	mov    ecx,DWORD PTR [eax]
   11616:	cmp    ecx,edx
   11618:	jne    0x11612
   1161a:	pop    ebp
   1161b:	ret    0x4
   1161e:	int3   
   1161f:	int3   
   11620:	int3   
   11621:	int3   
   11622:	int3   
   11623:	int3   
   11624:	mov    edi,edi
   11626:	push   esi
   11627:	mov    esi,ecx
   11629:	mov    ecx,DWORD PTR [esi]
   1162b:	cmp    DWORD PTR [ecx+0x14],0x0
   1162f:	jne    0x1163e
   11631:	mov    eax,DWORD PTR [ecx+0x4]
   11634:	cmp    DWORD PTR [eax+0x4],ecx
   11637:	jne    0x1163e
   11639:	mov    eax,DWORD PTR [ecx+0x8]
   1163c:	jmp    0x1165b
   1163e:	mov    eax,DWORD PTR [ecx]
   11640:	cmp    eax,DWORD PTR ds:0x70c98
   11646:	je     0x11654
   11648:	push   eax
   11649:	call   0x115e0
   1164e:	jmp    0x1165b
   11650:	mov    DWORD PTR [esi],eax
   11652:	mov    ecx,eax
   11654:	mov    eax,DWORD PTR [ecx+0x4]
   11657:	cmp    ecx,DWORD PTR [eax]
   11659:	je     0x11650
   1165b:	mov    DWORD PTR [esi],eax
   1165d:	pop    esi
   1165e:	ret    
   1165f:	int3   
   11660:	int3   
   11661:	int3   
   11662:	int3   
   11663:	int3   
   11664:	mov    edi,edi
   11666:	push   esi
   11667:	mov    esi,ecx
   11669:	mov    ecx,DWORD PTR [esi]
   1166b:	mov    eax,DWORD PTR [ecx+0x8]
   1166e:	cmp    eax,DWORD PTR ds:0x70c94
   11674:	je     0x11682
   11676:	push   eax
   11677:	call   0x1157e
   1167c:	jmp    0x11691
   1167e:	mov    DWORD PTR [esi],eax
   11680:	mov    ecx,eax
   11682:	mov    eax,DWORD PTR [ecx+0x4]
   11685:	cmp    ecx,DWORD PTR [eax+0x8]
   11688:	je     0x1167e
   1168a:	mov    ecx,DWORD PTR [esi]
   1168c:	cmp    DWORD PTR [ecx+0x8],eax
   1168f:	je     0x11693
   11691:	mov    DWORD PTR [esi],eax
   11693:	pop    esi
   11694:	ret    
   11695:	int3   
   11696:	int3   
   11697:	int3   
   11698:	int3   
   11699:	int3   
   1169a:	mov    edi,edi
   1169c:	push   esi
   1169d:	mov    esi,ecx
   1169f:	mov    ecx,DWORD PTR [esi]
   116a1:	mov    eax,DWORD PTR [ecx+0x8]
   116a4:	cmp    eax,DWORD PTR ds:0x70c98
   116aa:	je     0x116b8
   116ac:	push   eax
   116ad:	call   0x11602
   116b2:	jmp    0x116c7
   116b4:	mov    DWORD PTR [esi],eax
   116b6:	mov    ecx,eax
   116b8:	mov    eax,DWORD PTR [ecx+0x4]
   116bb:	cmp    ecx,DWORD PTR [eax+0x8]
   116be:	je     0x116b4
   116c0:	mov    ecx,DWORD PTR [esi]
   116c2:	cmp    DWORD PTR [ecx+0x8],eax
   116c5:	je     0x116c9
   116c7:	mov    DWORD PTR [esi],eax
   116c9:	pop    esi
   116ca:	ret    
   116cb:	int3   
   116cc:	int3   
   116cd:	int3   
   116ce:	int3   
   116cf:	int3   
   116d0:	mov    edi,edi
   116d2:	push   ebp
   116d3:	mov    ebp,esp
   116d5:	mov    eax,DWORD PTR [ebp+0x8]
   116d8:	mov    edx,DWORD PTR ds:0x70ca0
   116de:	jmp    0x116e2
   116e0:	mov    eax,ecx
   116e2:	mov    ecx,DWORD PTR [eax+0x8]
   116e5:	cmp    ecx,edx
   116e7:	jne    0x116e0
   116e9:	pop    ebp
   116ea:	ret    0x4
   116ed:	int3   
   116ee:	int3   
   116ef:	int3   
   116f0:	int3   
   116f1:	int3   
   116f2:	mov    edi,edi
   116f4:	push   ebp
   116f5:	mov    ebp,esp
   116f7:	push   ecx
   116f8:	push   ecx
   116f9:	mov    eax,DWORD PTR [ebp+0x8]
   116fc:	mov    DWORD PTR [ebp-0x4],eax
   116ff:	lea    ecx,[eax+0x2]
   11702:	mov    dx,WORD PTR [eax]
   11705:	inc    eax
   11706:	inc    eax
   11707:	test   dx,dx
   1170a:	jne    0x11702
   1170c:	sub    eax,ecx
   1170e:	sar    eax,1
   11710:	add    eax,eax
   11712:	mov    WORD PTR [ebp-0x8],ax
   11716:	mov    WORD PTR [ebp-0x6],ax
   1171a:	lea    eax,[ebp-0x8]
   1171d:	push   eax
   1171e:	call   DWORD PTR ds:0x1b960
   11724:	leave  
   11725:	ret    0x4
   11728:	int3   
   11729:	int3   
   1172a:	int3   
   1172b:	int3   
   1172c:	int3   
   1172d:	int3   
   1172e:	mov    edi,edi
   11730:	push   ebp
   11731:	mov    ebp,esp
   11733:	cmp    DWORD PTR [ebp+0x8],0x0
   11737:	jge    0x1173d
   11739:	and    DWORD PTR [ebp+0x8],0x0
   1173d:	push   DWORD PTR [ebp+0x8]
   11740:	call   0x107fe
   11745:	pop    ecx
   11746:	pop    ebp
   11747:	ret    0x8
   1174a:	int3   
   1174b:	int3   
   1174c:	int3   
   1174d:	int3   
   1174e:	int3   
   1174f:	int3   
   11750:	mov    edi,edi
   11752:	push   ebp
   11753:	mov    ebp,esp
   11755:	mov    eax,DWORD PTR [ebp+0x8]
   11758:	test   eax,eax
   1175a:	je     0x11769
   1175c:	mov    ecx,DWORD PTR [ebp+0xc]
   1175f:	mov    edx,DWORD PTR [ecx]
   11761:	mov    DWORD PTR [eax],edx
   11763:	mov    ecx,DWORD PTR [ecx+0x4]
   11766:	mov    DWORD PTR [eax+0x4],ecx
   11769:	pop    ebp
   1176a:	ret    0x8
   1176d:	int3   
   1176e:	int3   
   1176f:	int3   
   11770:	int3   
   11771:	int3   
   11772:	mov    edi,edi
   11774:	push   ebp
   11775:	mov    ebp,esp
   11777:	push   esi
   11778:	mov    esi,ecx
   1177a:	call   0x11258
   1177f:	test   BYTE PTR [ebp+0x8],0x1
   11783:	je     0x1178c
   11785:	push   esi
   11786:	call   0x10832
   1178b:	pop    ecx
   1178c:	mov    eax,esi
   1178e:	pop    esi
   1178f:	pop    ebp
   11790:	ret    0x4
   11793:	int3   
   11794:	int3   
   11795:	int3   
   11796:	int3   
   11797:	int3   
   11798:	mov    edi,edi
   1179a:	push   ebp
   1179b:	mov    ebp,esp
   1179d:	push   esi
   1179e:	mov    esi,ecx
   117a0:	call   0x11318
   117a5:	test   BYTE PTR [ebp+0x8],0x1
   117a9:	je     0x117b2
   117ab:	push   esi
   117ac:	call   0x10832
   117b1:	pop    ecx
   117b2:	mov    eax,esi
   117b4:	pop    esi
   117b5:	pop    ebp
   117b6:	ret    0x4
   117b9:	int3   
   117ba:	int3   
   117bb:	int3   
   117bc:	int3   
   117bd:	int3   
   117be:	mov    edi,edi
   117c0:	push   ebp
   117c1:	mov    ebp,esp
   117c3:	mov    eax,ecx
   117c5:	mov    ecx,DWORD PTR [ebp+0x8]
   117c8:	mov    edx,DWORD PTR [ecx]
   117ca:	test   edx,edx
   117cc:	je     0x117d5
   117ce:	mov    DWORD PTR [eax],edx
   117d0:	inc    DWORD PTR [edx+0x4]
   117d3:	jmp    0x117d8
   117d5:	and    DWORD PTR [eax],0x0
   117d8:	pop    ebp
   117d9:	ret    0x4
   117dc:	int3   
   117dd:	int3   
   117de:	int3   
   117df:	int3   
   117e0:	int3   
   117e1:	int3   
   117e2:	mov    edi,edi
   117e4:	push   ebp
   117e5:	mov    ebp,esp
   117e7:	push   esi
   117e8:	mov    esi,ecx
   117ea:	mov    ecx,DWORD PTR [esi]
   117ec:	test   ecx,ecx
   117ee:	je     0x117f5
   117f0:	call   0x10850
   117f5:	mov    eax,DWORD PTR [ebp+0x8]
   117f8:	mov    eax,DWORD PTR [eax]
   117fa:	mov    DWORD PTR [esi],eax
   117fc:	inc    DWORD PTR [eax+0x4]
   117ff:	mov    eax,esi
   11801:	pop    esi
   11802:	pop    ebp
   11803:	ret    0x4
   11806:	int3   
   11807:	int3   
   11808:	int3   
   11809:	int3   
   1180a:	int3   
   1180b:	int3   
   1180c:	mov    edi,edi
   1180e:	push   ebp
   1180f:	mov    ebp,esp
   11811:	push   ebx
   11812:	push   esi
   11813:	push   edi
   11814:	mov    edi,DWORD PTR [ebp+0xc]
   11817:	mov    esi,ecx
   11819:	and    DWORD PTR [esi+0x4],0x0
   1181d:	lea    eax,[edi+0x1]
   11820:	push   eax
   11821:	mov    DWORD PTR [esi+0x8],edi
   11824:	call   0x107fe
   11829:	push   edi
   1182a:	push   DWORD PTR [ebp+0x8]
   1182d:	mov    ebx,eax
   1182f:	push   ebx
   11830:	call   0x1a7b6
   11835:	add    esp,0x10
   11838:	inc    DWORD PTR [esi+0x4]
   1183b:	pop    edi
   1183c:	mov    DWORD PTR [esi],ebx
   1183e:	mov    eax,esi
   11840:	pop    esi
   11841:	pop    ebx
   11842:	pop    ebp
   11843:	ret    0x8
   11846:	int3   
   11847:	int3   
   11848:	int3   
   11849:	int3   
   1184a:	int3   
   1184b:	int3   
   1184c:	mov    edi,edi
   1184e:	push   ebp
   1184f:	mov    ebp,esp
   11851:	push   ecx
   11852:	push   0x1ae10
   11857:	call   0x116f2
   1185c:	lea    ecx,[ebp-0x4]
   1185f:	push   ecx
   11860:	push   0x0
   11862:	push   0x0
   11864:	push   0x1b
   11866:	push   DWORD PTR [ebp+0x8]
   11869:	call   eax
   1186b:	cmp    eax,0xc0000004
   11870:	jne    0x118da
   11872:	mov    edx,DWORD PTR [ebp+0xc]
   11875:	mov    ecx,DWORD PTR [ebp-0x4]
   11878:	push   esi
   11879:	movzx  esi,WORD PTR [edx+0x2]
   1187d:	lea    eax,[ecx-0x8]
   11880:	cmp    esi,eax
   11882:	jae    0x1188e
   11884:	mov    WORD PTR [edx],ax
   11887:	mov    eax,0x80000005
   1188c:	jmp    0x118d9
   1188e:	push   0x20736649
   11893:	push   ecx
   11894:	push   0x0
   11896:	call   DWORD PTR ds:0x1b954
   1189c:	mov    esi,eax
   1189e:	test   esi,esi
   118a0:	jne    0x118a9
   118a2:	mov    eax,0xc000009a
   118a7:	jmp    0x118d9
   118a9:	push   edi
   118aa:	lea    eax,[ebp-0x4]
   118ad:	push   eax
   118ae:	push   DWORD PTR [ebp-0x4]
   118b1:	push   esi
   118b2:	push   0x1b
   118b4:	push   DWORD PTR [ebp+0x8]
   118b7:	call   DWORD PTR ds:0x1b920
   118bd:	mov    edi,eax
   118bf:	test   edi,edi
   118c1:	jl     0x118cd
   118c3:	push   esi
   118c4:	push   DWORD PTR [ebp+0xc]
   118c7:	call   DWORD PTR ds:0x1b964
   118cd:	push   0x0
   118cf:	push   esi
   118d0:	call   DWORD PTR ds:0x1b91c
   118d6:	mov    eax,edi
   118d8:	pop    edi
   118d9:	pop    esi
   118da:	leave  
   118db:	ret    0x8
   118de:	int3   
   118df:	int3   
   118e0:	int3   
   118e1:	int3   
   118e2:	int3   
   118e3:	int3   
   118e4:	mov    edi,edi
   118e6:	push   ebp
   118e7:	mov    ebp,esp
   118e9:	mov    ecx,DWORD PTR ds:0x70b7c
   118ef:	sub    esp,0x38
   118f2:	push   esi
   118f3:	xor    esi,esi
   118f5:	cmp    ecx,esi
   118f7:	jne    0x11901
   118f9:	or     eax,0xffffffff
   118fc:	jmp    0x119e9
   11901:	push   edi
   11902:	xor    eax,eax
   11904:	mov    DWORD PTR [ebp-0x20],esi
   11907:	lea    edi,[ebp-0x1c]
   1190a:	stos   DWORD PTR es:[edi],eax
   1190b:	lea    eax,[ebp-0x18]
   1190e:	push   eax
   1190f:	lea    eax,[ebp-0x38]
   11912:	push   eax
   11913:	push   0x400
   11918:	lea    eax,[ebp-0x10]
   1191b:	push   eax
   1191c:	mov    DWORD PTR [ebp-0x4],esi
   1191f:	mov    DWORD PTR [ebp-0x38],0x18
   11926:	mov    DWORD PTR [ebp-0x34],esi
   11929:	mov    DWORD PTR [ebp-0x2c],esi
   1192c:	mov    DWORD PTR [ebp-0x30],esi
   1192f:	mov    DWORD PTR [ebp-0x28],esi
   11932:	mov    DWORD PTR [ebp-0x24],esi
   11935:	mov    DWORD PTR [ebp-0x18],ecx
   11938:	mov    DWORD PTR [ebp-0x14],esi
   1193b:	call   DWORD PTR ds:0x1b968
   11941:	mov    edi,eax
   11943:	cmp    edi,esi
   11945:	jl     0x119e6
   1194b:	push   ebx
   1194c:	push   0x1ad10
   11951:	call   0x116f2
   11956:	lea    ecx,[ebp-0xc]
   11959:	push   ecx
   1195a:	push   0x8
   1195c:	push   DWORD PTR [ebp-0x10]
   1195f:	call   eax
   11961:	mov    ebx,DWORD PTR ds:0x1b9d4
   11967:	mov    edi,eax
   11969:	cmp    edi,esi
   1196b:	jl     0x119e0
   1196d:	push   0x1ad36
   11972:	call   0x116f2
   11977:	lea    ecx,[ebp-0x4]
   1197a:	push   ecx
   1197b:	push   0x1
   1197d:	push   esi
   1197e:	push   esi
   1197f:	push   0x1
   11981:	push   DWORD PTR [ebp-0xc]
   11984:	call   eax
   11986:	mov    edi,eax
   11988:	cmp    edi,esi
   1198a:	jl     0x119db
   1198c:	mov    eax,DWORD PTR [ebp+0x8]
   1198f:	mov    DWORD PTR [ebp-0x18],eax
   11992:	lea    eax,[ebp-0x18]
   11995:	push   eax
   11996:	lea    eax,[ebp-0x38]
   11999:	push   eax
   1199a:	push   0x200
   1199f:	lea    eax,[ebp-0x8]
   119a2:	push   eax
   119a3:	call   DWORD PTR ds:0x1b968
   119a9:	mov    edi,eax
   119ab:	cmp    edi,esi
   119ad:	jl     0x119d6
   119af:	mov    eax,DWORD PTR [ebp-0x4]
   119b2:	push   0x1ad58
   119b7:	mov    DWORD PTR [ebp-0x20],eax
   119ba:	mov    DWORD PTR [ebp-0x1c],esi
   119bd:	call   0x116f2
   119c2:	push   0x8
   119c4:	lea    ecx,[ebp-0x20]
   119c7:	push   ecx
   119c8:	push   0x9
   119ca:	push   DWORD PTR [ebp-0x8]
   119cd:	call   eax
   119cf:	push   DWORD PTR [ebp-0x8]
   119d2:	mov    edi,eax
   119d4:	call   ebx
   119d6:	push   DWORD PTR [ebp-0x4]
   119d9:	call   ebx
   119db:	push   DWORD PTR [ebp-0xc]
   119de:	call   ebx
   119e0:	push   DWORD PTR [ebp-0x10]
   119e3:	call   ebx
   119e5:	pop    ebx
   119e6:	mov    eax,edi
   119e8:	pop    edi
   119e9:	pop    esi
   119ea:	leave  
   119eb:	ret    0x4
   119ee:	int3   
   119ef:	int3   
   119f0:	int3   
   119f1:	int3   
   119f2:	int3   
   119f3:	int3   
   119f4:	push   0x28
   119f6:	push   0x6fda8
   119fb:	call   0x1a7f4
   11a00:	xor    esi,esi
   11a02:	mov    DWORD PTR [ebp-0x28],esi
   11a05:	mov    DWORD PTR [ebp-0x2c],esi
   11a08:	mov    ebx,DWORD PTR [ebp+0x8]
   11a0b:	cmp    ebx,esi
   11a0d:	jne    0x11a16
   11a0f:	xor    eax,eax
   11a11:	jmp    0x11af8
   11a16:	mov    DWORD PTR [ebp-0x4],esi
   11a19:	push   0x1acd6
   11a1e:	call   0x116f2
   11a23:	lea    ecx,[ebp-0x2c]
   11a26:	push   ecx
   11a27:	push   esi
   11a28:	push   0x1
   11a2a:	push   ebx
   11a2b:	call   eax
   11a2d:	mov    edx,eax
   11a2f:	sub    edx,ebx
   11a31:	mov    DWORD PTR [ebp-0x38],edx
   11a34:	mov    esi,DWORD PTR [eax+0x1c]
   11a37:	add    esi,ebx
   11a39:	mov    edi,DWORD PTR [eax+0x24]
   11a3c:	add    edi,ebx
   11a3e:	mov    ecx,DWORD PTR [eax+0x20]
   11a41:	add    ecx,ebx
   11a43:	and    DWORD PTR [ebp-0x20],0x0
   11a47:	mov    ebx,DWORD PTR [ebp-0x20]
   11a4a:	cmp    ebx,DWORD PTR [eax+0x18]
   11a4d:	jae    0x11ae0
   11a53:	movsx  ebx,WORD PTR [edi+ebx*2]
   11a57:	cmp    ebx,DWORD PTR [eax+0x14]
   11a5a:	jae    0x11ad4
   11a5c:	lea    ebx,[esi+ebx*4]
   11a5f:	mov    DWORD PTR [ebp-0x34],ebx
   11a62:	cmp    DWORD PTR [ebx],edx
   11a64:	jb     0x11a72
   11a66:	mov    ebx,DWORD PTR [ebp-0x2c]
   11a69:	add    edx,ebx
   11a6b:	mov    ebx,DWORD PTR [ebp-0x34]
   11a6e:	cmp    DWORD PTR [ebx],edx
   11a70:	jb     0x11ac9
   11a72:	mov    edx,DWORD PTR [ebp+0xc]
   11a75:	mov    DWORD PTR [ebp-0x30],edx
   11a78:	mov    edx,DWORD PTR [ebp-0x20]
   11a7b:	mov    edx,DWORD PTR [ecx+edx*4]
   11a7e:	add    edx,DWORD PTR [ebp+0x8]
   11a81:	mov    DWORD PTR [ebp-0x24],edx
   11a84:	mov    dl,BYTE PTR [edx]
   11a86:	mov    ebx,DWORD PTR [ebp-0x30]
   11a89:	cmp    dl,BYTE PTR [ebx]
   11a8b:	jne    0x11ab6
   11a8d:	test   dl,dl
   11a8f:	je     0x11ab2
   11a91:	mov    edx,DWORD PTR [ebp-0x24]
   11a94:	mov    dl,BYTE PTR [edx+0x1]
   11a97:	mov    BYTE PTR [ebp-0x19],dl
   11a9a:	cmp    dl,BYTE PTR [ebx+0x1]
   11a9d:	jne    0x11ab6
   11a9f:	mov    edx,DWORD PTR [ebp-0x24]
   11aa2:	inc    edx
   11aa3:	inc    edx
   11aa4:	mov    DWORD PTR [ebp-0x24],edx
   11aa7:	inc    ebx
   11aa8:	inc    ebx
   11aa9:	mov    DWORD PTR [ebp-0x30],ebx
   11aac:	cmp    BYTE PTR [ebp-0x19],0x0
   11ab0:	jne    0x11a84
   11ab2:	xor    edx,edx
   11ab4:	jmp    0x11abb
   11ab6:	sbb    edx,edx
   11ab8:	sbb    edx,0xffffffff
   11abb:	test   edx,edx
   11abd:	jne    0x11ac9
   11abf:	mov    eax,DWORD PTR [ebp-0x34]
   11ac2:	mov    eax,DWORD PTR [eax]
   11ac4:	add    eax,DWORD PTR [ebp+0x8]
   11ac7:	jmp    0x11aee
   11ac9:	inc    DWORD PTR [ebp-0x20]
   11acc:	mov    edx,DWORD PTR [ebp-0x38]
   11acf:	jmp    0x11a47
   11ad4:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   11adb:	jmp    0x11a0f
   11ae0:	mov    eax,DWORD PTR [ebp-0x28]
   11ae3:	jmp    0x11af1
   11ae5:	xor    eax,eax
   11ae7:	inc    eax
   11ae8:	ret    
   11ae9:	mov    esp,DWORD PTR [ebp-0x18]
   11aec:	xor    eax,eax
   11aee:	mov    DWORD PTR [ebp-0x28],eax
   11af1:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   11af8:	call   0x1a839
   11afd:	ret    0x8
   11b00:	int3   
   11b01:	int3   
   11b02:	int3   
   11b03:	int3   
   11b04:	int3   
   11b05:	int3   
   11b06:	mov    edi,edi
   11b08:	push   ebp
   11b09:	mov    ebp,esp
   11b0b:	sub    esp,0x48
   11b0e:	mov    eax,DWORD PTR [ebp+0xc]
   11b11:	mov    eax,DWORD PTR [eax]
   11b13:	push   edi
   11b14:	xor    edi,edi
   11b16:	push   0x1ac1c
   11b1b:	mov    DWORD PTR [ebp-0x48],0x18
   11b22:	mov    DWORD PTR [ebp-0x44],edi
   11b25:	mov    DWORD PTR [ebp-0x3c],0x200
   11b2c:	mov    DWORD PTR [ebp-0x40],edi
   11b2f:	mov    DWORD PTR [ebp-0x38],edi
   11b32:	mov    DWORD PTR [ebp-0x34],edi
   11b35:	mov    DWORD PTR [ebp-0x30],eax
   11b38:	mov    DWORD PTR [ebp-0x2c],edi
   11b3b:	mov    DWORD PTR [ebp-0x10],edi
   11b3e:	call   0x116f2
   11b43:	lea    ecx,[ebp-0x30]
   11b46:	push   ecx
   11b47:	lea    ecx,[ebp-0x48]
   11b4a:	push   ecx
   11b4b:	push   0x1f0fff
   11b50:	lea    ecx,[ebp-0x10]
   11b53:	push   ecx
   11b54:	call   eax
   11b56:	test   eax,eax
   11b58:	jl     0x11eb9
   11b5e:	push   ebx
   11b5f:	push   esi
   11b60:	mov    ebx,0x1ac38
   11b65:	push   ebx
   11b66:	mov    DWORD PTR [ebp-0xc],edi
   11b69:	mov    DWORD PTR [ebp-0x14],0x400
   11b70:	call   0x116f2
   11b75:	push   0x40
   11b77:	mov    esi,0x1000
   11b7c:	push   esi
   11b7d:	lea    ecx,[ebp-0x14]
   11b80:	push   ecx
   11b81:	push   edi
   11b82:	lea    ecx,[ebp-0xc]
   11b85:	push   ecx
   11b86:	push   DWORD PTR [ebp-0x10]
   11b89:	call   eax
   11b8b:	test   eax,eax
   11b8d:	jl     0x11b98
   11b8f:	mov    eax,DWORD PTR [ebp-0xc]
   11b92:	mov    ecx,DWORD PTR [ebp+0xc]
   11b95:	mov    DWORD PTR [ecx+0x8],eax
   11b98:	push   ebx
   11b99:	mov    DWORD PTR [ebp-0x18],edi
   11b9c:	mov    DWORD PTR [ebp-0x14],0x400
   11ba3:	call   0x116f2
   11ba8:	push   0x4
   11baa:	push   esi
   11bab:	lea    ecx,[ebp-0x14]
   11bae:	push   ecx
   11baf:	push   edi
   11bb0:	lea    ecx,[ebp-0x18]
   11bb3:	push   ecx
   11bb4:	push   DWORD PTR [ebp-0x10]
   11bb7:	call   eax
   11bb9:	test   eax,eax
   11bbb:	jl     0x11bc6
   11bbd:	mov    eax,DWORD PTR [ebp-0x18]
   11bc0:	mov    ecx,DWORD PTR [ebp+0xc]
   11bc3:	mov    DWORD PTR [ecx+0xc],eax
   11bc6:	push   0x1ac68
   11bcb:	call   0x116f2
   11bd0:	lea    ecx,[ebp-0x24]
   11bd3:	push   ecx
   11bd4:	push   DWORD PTR [ebp-0x30]
   11bd7:	call   eax
   11bd9:	test   eax,eax
   11bdb:	jl     0x11eb7
   11be1:	push   DWORD PTR [ebp-0x24]
   11be4:	call   DWORD PTR ds:0x1b94c
   11bea:	mov    eax,DWORD PTR [ebp-0xc]
   11bed:	mov    DWORD PTR [ebp-0x20],edi
   11bf0:	cmp    eax,edi
   11bf2:	je     0x11e9f
   11bf8:	mov    esi,DWORD PTR [ebp-0x18]
   11bfb:	cmp    esi,edi
   11bfd:	je     0x11e0c
   11c03:	push   0x214
   11c08:	push   edi
   11c09:	push   esi
   11c0a:	mov    DWORD PTR [ebp-0x4],eax
   11c0d:	call   0x1a7aa
   11c12:	mov    eax,DWORD PTR [ebp-0x4]
   11c15:	add    esp,0xc
   11c18:	push   0x60
   11c1a:	lea    ebx,[esi+0xc]
   11c1d:	push   eax
   11c1e:	mov    DWORD PTR [ebx],edi
   11c20:	mov    DWORD PTR [esi],edi
   11c22:	mov    DWORD PTR [ebp-0x20],eax
   11c25:	call   0x17b44
   11c2a:	push   0x68
   11c2c:	push   eax
   11c2d:	call   0x17b44
   11c32:	push   ebx
   11c33:	push   eax
   11c34:	call   0x17b5c
   11c39:	push   0x6a
   11c3b:	pop    ebx
   11c3c:	push   ebx
   11c3d:	push   eax
   11c3e:	call   0x17b44
   11c43:	push   edi
   11c44:	push   eax
   11c45:	call   0x17b44
   11c4a:	push   ebx
   11c4b:	push   eax
   11c4c:	call   0x17b44
   11c51:	push   edi
   11c52:	push   eax
   11c53:	call   0x17b44
   11c58:	push   0x68
   11c5a:	push   eax
   11c5b:	call   0x17b44
   11c60:	push   edi
   11c61:	push   eax
   11c62:	mov    DWORD PTR [ebp-0x28],eax
   11c65:	call   0x17b5c
   11c6a:	push   ebx
   11c6b:	push   eax
   11c6c:	call   0x17b44
   11c71:	push   edi
   11c72:	push   eax
   11c73:	call   0x17b44
   11c78:	push   ebx
   11c79:	push   eax
   11c7a:	call   0x17b44
   11c7f:	push   edi
   11c80:	push   eax
   11c81:	call   0x17b44
   11c86:	push   0xb8
   11c8b:	push   eax
   11c8c:	call   0x17b44
   11c91:	push   DWORD PTR ds:0x70b48
   11c97:	push   eax
   11c98:	call   0x17b5c
   11c9d:	mov    ebx,0xc00b
   11ca2:	push   ebx
   11ca3:	push   eax
   11ca4:	call   0x17b76
   11ca9:	push   0x74
   11cab:	push   eax
   11cac:	call   0x17b44
   11cb1:	push   0x9
   11cb3:	push   eax
   11cb4:	call   0x17b44
   11cb9:	mov    edi,0xd0ff
   11cbe:	push   edi
   11cbf:	push   eax
   11cc0:	call   0x17b76
   11cc5:	push   0xb9
   11cca:	push   eax
   11ccb:	call   0x17b44
   11cd0:	lea    ecx,[esi+0x10]
   11cd3:	push   ecx
   11cd4:	push   eax
   11cd5:	call   0x17b5c
   11cda:	push   0x189
   11cdf:	push   eax
   11ce0:	call   0x17b76
   11ce5:	push   0x61
   11ce7:	push   eax
   11ce8:	call   0x17b44
   11ced:	and    DWORD PTR [ebp-0x8],0x0
   11cf1:	mov    DWORD PTR [ebp-0x4],eax
   11cf4:	mov    eax,DWORD PTR [ebp+0x8]
   11cf7:	mov    DWORD PTR [ebp-0x1c],eax
   11cfa:	push   0x0
   11cfc:	push   DWORD PTR [ebp-0x1c]
   11cff:	push   DWORD PTR [ebp-0x4]
   11d02:	call   0x18308
   11d07:	mov    ecx,eax
   11d09:	sub    ecx,DWORD PTR [ebp-0x1c]
   11d0c:	mov    DWORD PTR [ebp-0x1c],eax
   11d0f:	add    DWORD PTR [ebp-0x8],ecx
   11d12:	add    DWORD PTR [ebp-0x4],ecx
   11d15:	cmp    DWORD PTR [ebp-0x8],0x5
   11d19:	jb     0x11cfa
   11d1b:	mov    ecx,DWORD PTR [ebp+0x8]
   11d1e:	push   DWORD PTR [ebp-0x4]
   11d21:	mov    eax,DWORD PTR [ebp-0x8]
   11d24:	add    eax,ecx
   11d26:	push   eax
   11d27:	call   0x17bba
   11d2c:	push   eax
   11d2d:	push   DWORD PTR [ebp-0x28]
   11d30:	mov    DWORD PTR [ebp-0x4],eax
   11d33:	call   0x17b5c
   11d38:	mov    eax,DWORD PTR [ebp-0x4]
   11d3b:	push   0xeb
   11d40:	push   eax
   11d41:	mov    DWORD PTR [esi],eax
   11d43:	call   0x17b44
   11d48:	push   0x0
   11d4a:	push   eax
   11d4b:	mov    DWORD PTR [esi+0x4],eax
   11d4e:	call   0x17b44
   11d53:	push   0x68
   11d55:	push   eax
   11d56:	call   0x17b44
   11d5b:	push   0x3e8
   11d60:	push   eax
   11d61:	call   0x17b5c
   11d66:	push   0xb8
   11d6b:	push   eax
   11d6c:	call   0x17b44
   11d71:	push   DWORD PTR ds:0x70b4c
   11d77:	push   eax
   11d78:	call   0x17b5c
   11d7d:	push   ebx
   11d7e:	push   eax
   11d7f:	call   0x17b76
   11d84:	push   0x74
   11d86:	push   eax
   11d87:	call   0x17b44
   11d8c:	push   0x2
   11d8e:	push   eax
   11d8f:	call   0x17b44
   11d94:	push   edi
   11d95:	push   eax
   11d96:	call   0x17b76
   11d9b:	push   eax
   11d9c:	push   DWORD PTR [esi]
   11d9e:	call   0x17bba
   11da3:	mov    cl,al
   11da5:	sub    cl,BYTE PTR [esi+0x4]
   11da8:	push   0x68
   11daa:	dec    cl
   11dac:	push   eax
   11dad:	mov    BYTE PTR [esi+0x8],cl
   11db0:	call   0x17b44
   11db5:	add    esi,0x14
   11db8:	push   esi
   11db9:	push   eax
   11dba:	call   0x17b5c
   11dbf:	push   0xb8
   11dc4:	push   eax
   11dc5:	call   0x17b44
   11dca:	push   DWORD PTR ds:0x70b40
   11dd0:	push   eax
   11dd1:	call   0x17b5c
   11dd6:	push   ebx
   11dd7:	push   eax
   11dd8:	call   0x17b76
   11ddd:	push   0x74
   11ddf:	push   eax
   11de0:	call   0x17b44
   11de5:	push   0x2
   11de7:	push   eax
   11de8:	call   0x17b44
   11ded:	push   edi
   11dee:	push   eax
   11def:	call   0x17b76
   11df4:	push   0xc2
   11df9:	push   eax
   11dfa:	call   0x17b44
   11dff:	push   0x4
   11e01:	push   eax
   11e02:	call   0x17b76
   11e07:	mov    eax,DWORD PTR [ebp-0xc]
   11e0a:	xor    edi,edi
   11e0c:	cmp    eax,edi
   11e0e:	je     0x11e9f
   11e14:	add    eax,0x400
   11e19:	lea    esi,[eax-0xc]
   11e1c:	lea    ecx,[eax-0x8]
   11e1f:	push   esi
   11e20:	lea    ebx,[eax-0x4]
   11e23:	lea    edx,[eax-0x10]
   11e26:	push   0x40
   11e28:	add    eax,0xffffffe8
   11e2b:	push   ecx
   11e2c:	mov    DWORD PTR [ebp-0x1c],eax
   11e2f:	mov    eax,DWORD PTR [ebp+0x8]
   11e32:	mov    DWORD PTR [ebx],eax
   11e34:	push   ebx
   11e35:	mov    DWORD PTR [ecx],0x5
   11e3b:	push   0xffffffff
   11e3d:	mov    DWORD PTR [ebp-0x8],ecx
   11e40:	mov    DWORD PTR [ebp-0x28],edx
   11e43:	mov    DWORD PTR [esi],edi
   11e45:	call   DWORD PTR ds:0x70ac4
   11e4b:	test   eax,eax
   11e4d:	jl     0x11e9f
   11e4f:	mov    eax,DWORD PTR [ebp-0x20]
   11e52:	sub    eax,DWORD PTR [ebp+0x8]
   11e55:	sub    eax,0x5
   11e58:	push   eax
   11e59:	mov    eax,DWORD PTR [ebp-0x1c]
   11e5c:	inc    eax
   11e5d:	push   eax
   11e5e:	call   0x17b5c
   11e63:	push   0xe9
   11e68:	push   DWORD PTR [ebp-0x1c]
   11e6b:	call   0x17b44
   11e70:	mov    eax,DWORD PTR [ebp-0x28]
   11e73:	push   eax
   11e74:	push   0x5
   11e76:	push   DWORD PTR [ebp-0x1c]
   11e79:	mov    DWORD PTR [eax],edi
   11e7b:	push   DWORD PTR [ebp+0x8]
   11e7e:	push   0xffffffff
   11e80:	call   DWORD PTR ds:0x70ab8
   11e86:	mov    eax,DWORD PTR [ebp+0xc]
   11e89:	mov    BYTE PTR [eax+0x10],0x1
   11e8d:	lea    eax,[ebp-0x20]
   11e90:	push   eax
   11e91:	push   DWORD PTR [esi]
   11e93:	push   DWORD PTR [ebp-0x8]
   11e96:	push   ebx
   11e97:	push   0xffffffff
   11e99:	call   DWORD PTR ds:0x70ac4
   11e9f:	call   DWORD PTR ds:0x1b948
   11ea5:	mov    ecx,DWORD PTR [ebp-0x24]
   11ea8:	call   DWORD PTR ds:0x1b9d0
   11eae:	push   DWORD PTR [ebp-0x10]
   11eb1:	call   DWORD PTR ds:0x1b9d4
   11eb7:	pop    esi
   11eb8:	pop    ebx
   11eb9:	pop    edi
   11eba:	leave  
   11ebb:	ret    0x8
   11ebe:	int3   
   11ebf:	int3   
   11ec0:	int3   
   11ec1:	int3   
   11ec2:	int3   
   11ec3:	int3   
   11ec4:	mov    edi,edi
   11ec6:	push   ebp
   11ec7:	mov    ebp,esp
   11ec9:	push   ecx
   11eca:	and    DWORD PTR [ebp-0x4],0x0
   11ece:	push   ebx
   11ecf:	push   esi
   11ed0:	push   edi
   11ed1:	mov    esi,0x1000
   11ed6:	push   0x20736649
   11edb:	push   esi
   11edc:	push   0x0
   11ede:	call   DWORD PTR ds:0x1b954
   11ee4:	mov    edi,eax
   11ee6:	test   edi,edi
   11ee8:	je     0x11f21
   11eea:	push   0x1ae44
   11eef:	call   0x116f2
   11ef4:	lea    ecx,[ebp-0x4]
   11ef7:	push   ecx
   11ef8:	push   esi
   11ef9:	push   edi
   11efa:	push   DWORD PTR [ebp+0x8]
   11efd:	call   eax
   11eff:	mov    ebx,eax
   11f01:	cmp    ebx,0xc0000004
   11f07:	jne    0x11f14
   11f09:	push   0x0
   11f0b:	push   edi
   11f0c:	call   DWORD PTR ds:0x1b91c
   11f12:	add    esi,esi
   11f14:	test   ebx,ebx
   11f16:	jne    0x11ed6
   11f18:	mov    eax,edi
   11f1a:	pop    edi
   11f1b:	pop    esi
   11f1c:	pop    ebx
   11f1d:	leave  
   11f1e:	ret    0x4
   11f21:	xor    eax,eax
   11f23:	jmp    0x11f1a
   11f25:	int3   
   11f26:	int3   
   11f27:	int3   
   11f28:	int3   
   11f29:	int3   
   11f2a:	mov    edi,edi
   11f2c:	push   ebp
   11f2d:	mov    ebp,esp
   11f2f:	push   esi
   11f30:	push   DWORD PTR [ebp+0xc]
   11f33:	mov    esi,ecx
   11f35:	push   DWORD PTR [ebp+0x8]
   11f38:	call   0x11274
   11f3d:	mov    eax,esi
   11f3f:	pop    esi
   11f40:	pop    ebp
   11f41:	ret    0x8
   11f44:	int3   
   11f45:	int3   
   11f46:	int3   
   11f47:	int3   
   11f48:	int3   
   11f49:	int3   
   11f4a:	mov    edi,edi
   11f4c:	push   ebp
   11f4d:	mov    ebp,esp
   11f4f:	mov    eax,DWORD PTR [ebp+0x8]
   11f52:	push   esi
   11f53:	push   DWORD PTR [eax+0x4]
   11f56:	mov    esi,ecx
   11f58:	push   DWORD PTR [eax]
   11f5a:	call   0x11274
   11f5f:	mov    eax,esi
   11f61:	pop    esi
   11f62:	pop    ebp
   11f63:	ret    0x4
   11f66:	int3   
   11f67:	int3   
   11f68:	int3   
   11f69:	int3   
   11f6a:	int3   
   11f6b:	int3   
   11f6c:	mov    edi,edi
   11f6e:	push   ebp
   11f6f:	mov    ebp,esp
   11f71:	push   ebx
   11f72:	push   esi
   11f73:	push   edi
   11f74:	mov    edi,DWORD PTR [ebp+0x8]
   11f77:	mov    eax,DWORD PTR [edi+0x4]
   11f7a:	mov    esi,ecx
   11f7c:	mov    ebx,DWORD PTR [esi]
   11f7e:	mov    DWORD PTR [esi+0x4],eax
   11f81:	inc    eax
   11f82:	push   eax
   11f83:	call   0x107fe
   11f88:	push   DWORD PTR [esi+0x4]
   11f8b:	mov    DWORD PTR [esi],eax
   11f8d:	push   DWORD PTR [edi]
   11f8f:	push   eax
   11f90:	call   0x1a7b6
   11f95:	mov    eax,DWORD PTR [esi+0x4]
   11f98:	mov    ecx,DWORD PTR [esi]
   11f9a:	push   ebx
   11f9b:	mov    BYTE PTR [eax+ecx*1],0x0
   11f9f:	call   0x10832
   11fa4:	add    esp,0x14
   11fa7:	pop    edi
   11fa8:	mov    eax,esi
   11faa:	pop    esi
   11fab:	pop    ebx
   11fac:	pop    ebp
   11fad:	ret    0x4
   11fb0:	int3   
   11fb1:	int3   
   11fb2:	int3   
   11fb3:	int3   
   11fb4:	int3   
   11fb5:	int3   
   11fb6:	mov    edi,edi
   11fb8:	push   ebp
   11fb9:	mov    ebp,esp
   11fbb:	push   esi
   11fbc:	mov    esi,DWORD PTR [ebp+0x8]
   11fbf:	push   edi
   11fc0:	mov    edi,ecx
   11fc2:	cmp    edi,esi
   11fc4:	je     0x11ff1
   11fc6:	mov    eax,DWORD PTR [edi+0x4]
   11fc9:	cmp    eax,DWORD PTR [esi+0x4]
   11fcc:	je     0x11fe0
   11fce:	cmp    BYTE PTR [edi],0x0
   11fd1:	je     0x11fda
   11fd3:	push   eax
   11fd4:	call   0x10832
   11fd9:	pop    ecx
   11fda:	mov    al,BYTE PTR [esi]
   11fdc:	mov    BYTE PTR [edi],al
   11fde:	jmp    0x11fe8
   11fe0:	cmp    BYTE PTR [esi],0x0
   11fe3:	je     0x11fe8
   11fe5:	mov    BYTE PTR [edi],0x1
   11fe8:	mov    eax,DWORD PTR [esi+0x4]
   11feb:	mov    BYTE PTR [esi],0x0
   11fee:	mov    DWORD PTR [edi+0x4],eax
   11ff1:	mov    eax,edi
   11ff3:	pop    edi
   11ff4:	pop    esi
   11ff5:	pop    ebp
   11ff6:	ret    0x4
   11ff9:	int3   
   11ffa:	int3   
   11ffb:	int3   
   11ffc:	int3   
   11ffd:	int3   
   11ffe:	mov    edi,edi
   12000:	push   esi
   12001:	push   edi
   12002:	push   0x20736649
   12007:	push   0x20
   12009:	push   0x0
   1200b:	mov    esi,ecx
   1200d:	call   DWORD PTR ds:0x1b954
   12013:	push   0x0
   12015:	mov    edi,eax
   12017:	push   0x1
   12019:	mov    ecx,esi
   1201b:	mov    DWORD PTR [esi],edi
   1201d:	call   0x112d2
   12022:	mov    DWORD PTR [esi+0x8],eax
   12025:	mov    DWORD PTR [esi+0xc],edx
   12028:	test   edi,edi
   1202a:	jne    0x12037
   1202c:	push   0xc000009a
   12031:	call   DWORD PTR ds:0x1b914
   12037:	pop    edi
   12038:	mov    eax,esi
   1203a:	pop    esi
   1203b:	ret    
   1203c:	int3   
   1203d:	int3   
   1203e:	int3   
   1203f:	int3   
   12040:	int3   
   12041:	int3   
   12042:	mov    edi,edi
   12044:	push   ebp
   12045:	mov    ebp,esp
   12047:	push   esi
   12048:	mov    esi,DWORD PTR [ebp+0x8]
   1204b:	lea    eax,[ebp+0xc]
   1204e:	push   eax
   1204f:	mov    ecx,esi
   12051:	call   0x11f4a
   12056:	xor    ecx,ecx
   12058:	inc    ecx
   12059:	cmp    DWORD PTR [esi+0x4],ecx
   1205c:	jbe    0x1206d
   1205e:	mov    eax,DWORD PTR [esi]
   12060:	add    eax,ecx
   12062:	mov    dl,BYTE PTR [eax-0x1]
   12065:	xor    BYTE PTR [eax],dl
   12067:	inc    ecx
   12068:	cmp    ecx,DWORD PTR [esi+0x4]
   1206b:	jb     0x1205e
   1206d:	push   DWORD PTR [ebp+0xc]
   12070:	call   0x10832
   12075:	pop    ecx
   12076:	mov    eax,esi
   12078:	pop    esi
   12079:	pop    ebp
   1207a:	ret    0xc
   1207d:	int3   
   1207e:	int3   
   1207f:	int3   
   12080:	int3   
   12081:	int3   
   12082:	mov    edi,edi
   12084:	push   ebp
   12085:	mov    ebp,esp
   12087:	push   esi
   12088:	push   DWORD PTR [ebp+0xc]
   1208b:	mov    esi,ecx
   1208d:	push   DWORD PTR [ebp+0x8]
   12090:	call   0x11336
   12095:	mov    eax,esi
   12097:	pop    esi
   12098:	pop    ebp
   12099:	ret    0x8
   1209c:	int3   
   1209d:	int3   
   1209e:	int3   
   1209f:	int3   
   120a0:	int3   
   120a1:	int3   
   120a2:	mov    edi,edi
   120a4:	push   ebp
   120a5:	mov    ebp,esp
   120a7:	mov    eax,DWORD PTR [ebp+0x8]
   120aa:	push   esi
   120ab:	push   DWORD PTR [eax+0x4]
   120ae:	mov    esi,ecx
   120b0:	push   DWORD PTR [eax]
   120b2:	call   0x11336
   120b7:	mov    eax,esi
   120b9:	pop    esi
   120ba:	pop    ebp
   120bb:	ret    0x4
   120be:	int3   
   120bf:	int3   
   120c0:	int3   
   120c1:	int3   
   120c2:	int3   
   120c3:	int3   
   120c4:	mov    edi,edi
   120c6:	push   ebp
   120c7:	mov    ebp,esp
   120c9:	push   ebx
   120ca:	push   esi
   120cb:	push   edi
   120cc:	mov    edi,DWORD PTR [ebp+0x8]
   120cf:	mov    eax,DWORD PTR [edi+0x4]
   120d2:	mov    esi,ecx
   120d4:	mov    ebx,DWORD PTR [esi]
   120d6:	mov    DWORD PTR [esi+0x4],eax
   120d9:	xor    ecx,ecx
   120db:	push   0x2
   120dd:	inc    eax
   120de:	pop    edx
   120df:	mul    edx
   120e1:	seto   cl
   120e4:	neg    ecx
   120e6:	or     ecx,eax
   120e8:	push   ecx
   120e9:	call   0x107fe
   120ee:	mov    ecx,DWORD PTR [esi+0x4]
   120f1:	add    ecx,ecx
   120f3:	push   ecx
   120f4:	mov    DWORD PTR [esi],eax
   120f6:	push   DWORD PTR [edi]
   120f8:	push   eax
   120f9:	call   0x1a7b6
   120fe:	mov    eax,DWORD PTR [esi+0x4]
   12101:	mov    ecx,DWORD PTR [esi]
   12103:	xor    edx,edx
   12105:	push   ebx
   12106:	mov    WORD PTR [ecx+eax*2],dx
   1210a:	call   0x10832
   1210f:	add    esp,0x14
   12112:	pop    edi
   12113:	mov    eax,esi
   12115:	pop    esi
   12116:	pop    ebx
   12117:	pop    ebp
   12118:	ret    0x4
   1211b:	int3   
   1211c:	int3   
   1211d:	int3   
   1211e:	int3   
   1211f:	int3   
   12120:	mov    edi,edi
   12122:	push   ebp
   12123:	mov    ebp,esp
   12125:	push   esi
   12126:	push   DWORD PTR [ebp+0x8]
   12129:	mov    esi,ecx
   1212b:	call   0x11f4a
   12130:	push   DWORD PTR [ebp+0xc]
   12133:	lea    ecx,[esi+0x8]
   12136:	call   0x11f4a
   1213b:	mov    eax,esi
   1213d:	pop    esi
   1213e:	pop    ebp
   1213f:	ret    0x8
   12142:	int3   
   12143:	int3   
   12144:	int3   
   12145:	int3   
   12146:	int3   
   12147:	int3   
   12148:	mov    edi,edi
   1214a:	push   ebp
   1214b:	mov    ebp,esp
   1214d:	mov    eax,DWORD PTR [ebp+0x8]
   12150:	mov    eax,DWORD PTR [eax]
   12152:	push   esi
   12153:	push   DWORD PTR [ebp+0xc]
   12156:	mov    esi,ecx
   12158:	lea    ecx,[esi+0x4]
   1215b:	mov    DWORD PTR [esi],eax
   1215d:	call   0x117be
   12162:	mov    eax,esi
   12164:	pop    esi
   12165:	pop    ebp
   12166:	ret    0x8
   12169:	int3   
   1216a:	int3   
   1216b:	int3   
   1216c:	int3   
   1216d:	int3   
   1216e:	mov    edi,edi
   12170:	push   ebp
   12171:	mov    ebp,esp
   12173:	push   esi
   12174:	push   edi
   12175:	mov    edi,DWORD PTR [ebp+0x8]
   12178:	push   edi
   12179:	mov    esi,ecx
   1217b:	call   0x11f4a
   12180:	lea    eax,[edi+0x8]
   12183:	push   eax
   12184:	lea    ecx,[esi+0x8]
   12187:	call   0x11f4a
   1218c:	lea    eax,[edi+0x10]
   1218f:	push   eax
   12190:	lea    ecx,[esi+0x10]
   12193:	call   0x11f4a
   12198:	lea    eax,[edi+0x18]
   1219b:	push   eax
   1219c:	lea    ecx,[esi+0x18]
   1219f:	call   0x11f4a
   121a4:	mov    eax,DWORD PTR [edi+0x20]
   121a7:	mov    DWORD PTR [esi+0x20],eax
   121aa:	mov    eax,DWORD PTR [edi+0x28]
   121ad:	mov    DWORD PTR [esi+0x28],eax
   121b0:	mov    eax,DWORD PTR [edi+0x2c]
   121b3:	mov    DWORD PTR [esi+0x2c],eax
   121b6:	mov    eax,DWORD PTR [edi+0x30]
   121b9:	mov    DWORD PTR [esi+0x30],eax
   121bc:	mov    eax,DWORD PTR [edi+0x34]
   121bf:	mov    DWORD PTR [esi+0x34],eax
   121c2:	pop    edi
   121c3:	mov    eax,esi
   121c5:	pop    esi
   121c6:	pop    ebp
   121c7:	ret    0x4
   121ca:	int3   
   121cb:	int3   
   121cc:	int3   
   121cd:	int3   
   121ce:	int3   
   121cf:	int3   
   121d0:	mov    edi,edi
   121d2:	push   ebp
   121d3:	mov    ebp,esp
   121d5:	mov    eax,DWORD PTR [ebp+0x8]
   121d8:	mov    edx,DWORD PTR ds:0x70c90
   121de:	jmp    0x121e2
   121e0:	mov    eax,ecx
   121e2:	mov    ecx,DWORD PTR [eax]
   121e4:	cmp    ecx,edx
   121e6:	jne    0x121e0
   121e8:	pop    ebp
   121e9:	ret    0x4
   121ec:	int3   
   121ed:	int3   
   121ee:	int3   
   121ef:	int3   
   121f0:	int3   
   121f1:	int3   
   121f2:	mov    edi,edi
   121f4:	push   ebp
   121f5:	mov    ebp,esp
   121f7:	push   esi
   121f8:	push   DWORD PTR [ebp+0x8]
   121fb:	mov    esi,ecx
   121fd:	call   0x120a2
   12202:	push   DWORD PTR [ebp+0xc]
   12205:	lea    ecx,[esi+0x8]
   12208:	call   0x120a2
   1220d:	mov    eax,esi
   1220f:	pop    esi
   12210:	pop    ebp
   12211:	ret    0x8
   12214:	int3   
   12215:	int3   
   12216:	int3   
   12217:	int3   
   12218:	int3   
   12219:	int3   
   1221a:	mov    edi,edi
   1221c:	push   ebp
   1221d:	mov    ebp,esp
   1221f:	mov    eax,DWORD PTR [ecx+0x4]
   12222:	mov    ecx,DWORD PTR [eax+0x4]
   12225:	mov    edx,DWORD PTR ds:0x70c88
   1222b:	cmp    ecx,edx
   1222d:	je     0x12248
   1222f:	push   esi
   12230:	mov    esi,DWORD PTR [ebp+0x8]
   12233:	mov    esi,DWORD PTR [esi]
   12235:	cmp    DWORD PTR [ecx+0xc],esi
   12238:	jae    0x1223f
   1223a:	mov    ecx,DWORD PTR [ecx+0x8]
   1223d:	jmp    0x12243
   1223f:	mov    eax,ecx
   12241:	mov    ecx,DWORD PTR [ecx]
   12243:	cmp    ecx,edx
   12245:	jne    0x12235
   12247:	pop    esi
   12248:	pop    ebp
   12249:	ret    0x4
   1224c:	int3   
   1224d:	int3   
   1224e:	int3   
   1224f:	int3   
   12250:	int3   
   12251:	int3   
   12252:	mov    edi,edi
   12254:	push   ebp
   12255:	mov    ebp,esp
   12257:	mov    edx,DWORD PTR [ebp+0x8]
   1225a:	mov    eax,DWORD PTR [edx+0x8]
   1225d:	push   esi
   1225e:	mov    esi,DWORD PTR [eax]
   12260:	mov    DWORD PTR [edx+0x8],esi
   12263:	mov    esi,DWORD PTR [eax]
   12265:	cmp    esi,DWORD PTR ds:0x70c88
   1226b:	je     0x12270
   1226d:	mov    DWORD PTR [esi+0x4],edx
   12270:	mov    esi,DWORD PTR [edx+0x4]
   12273:	mov    DWORD PTR [eax+0x4],esi
   12276:	mov    ecx,DWORD PTR [ecx+0x4]
   12279:	pop    esi
   1227a:	cmp    edx,DWORD PTR [ecx+0x4]
   1227d:	jne    0x12284
   1227f:	mov    DWORD PTR [ecx+0x4],eax
   12282:	jmp    0x12292
   12284:	mov    ecx,DWORD PTR [edx+0x4]
   12287:	cmp    edx,DWORD PTR [ecx]
   12289:	jne    0x1228f
   1228b:	mov    DWORD PTR [ecx],eax
   1228d:	jmp    0x12292
   1228f:	mov    DWORD PTR [ecx+0x8],eax
   12292:	mov    DWORD PTR [eax],edx
   12294:	mov    DWORD PTR [edx+0x4],eax
   12297:	pop    ebp
   12298:	ret    0x4
   1229b:	int3   
   1229c:	int3   
   1229d:	int3   
   1229e:	int3   
   1229f:	int3   
   122a0:	mov    edi,edi
   122a2:	push   ebp
   122a3:	mov    ebp,esp
   122a5:	mov    edx,DWORD PTR [ebp+0x8]
   122a8:	mov    eax,DWORD PTR [edx]
   122aa:	push   esi
   122ab:	mov    esi,DWORD PTR [eax+0x8]
   122ae:	mov    DWORD PTR [edx],esi
   122b0:	mov    esi,DWORD PTR [eax+0x8]
   122b3:	cmp    esi,DWORD PTR ds:0x70c88
   122b9:	je     0x122be
   122bb:	mov    DWORD PTR [esi+0x4],edx
   122be:	mov    esi,DWORD PTR [edx+0x4]
   122c1:	mov    DWORD PTR [eax+0x4],esi
   122c4:	mov    ecx,DWORD PTR [ecx+0x4]
   122c7:	pop    esi
   122c8:	cmp    edx,DWORD PTR [ecx+0x4]
   122cb:	jne    0x122d2
   122cd:	mov    DWORD PTR [ecx+0x4],eax
   122d0:	jmp    0x122e1
   122d2:	mov    ecx,DWORD PTR [edx+0x4]
   122d5:	cmp    edx,DWORD PTR [ecx+0x8]
   122d8:	jne    0x122df
   122da:	mov    DWORD PTR [ecx+0x8],eax
   122dd:	jmp    0x122e1
   122df:	mov    DWORD PTR [ecx],eax
   122e1:	mov    DWORD PTR [eax+0x8],edx
   122e4:	mov    DWORD PTR [edx+0x4],eax
   122e7:	pop    ebp
   122e8:	ret    0x4
   122eb:	int3   
   122ec:	int3   
   122ed:	int3   
   122ee:	int3   
   122ef:	int3   
   122f0:	mov    edi,edi
   122f2:	push   ebp
   122f3:	mov    ebp,esp
   122f5:	mov    eax,DWORD PTR [ecx+0x4]
   122f8:	push   esi
   122f9:	mov    esi,DWORD PTR [eax+0x4]
   122fc:	push   edi
   122fd:	mov    edi,eax
   122ff:	jmp    0x1231a
   12301:	push   DWORD PTR [ebp+0x8]
   12304:	lea    eax,[esi+0x10]
   12307:	push   eax
   12308:	call   0x17b04
   1230d:	test   al,al
   1230f:	je     0x12316
   12311:	mov    esi,DWORD PTR [esi+0x8]
   12314:	jmp    0x1231a
   12316:	mov    edi,esi
   12318:	mov    esi,DWORD PTR [esi]
   1231a:	cmp    esi,DWORD PTR ds:0x70c90
   12320:	jne    0x12301
   12322:	mov    eax,edi
   12324:	pop    edi
   12325:	pop    esi
   12326:	pop    ebp
   12327:	ret    0x4
   1232a:	int3   
   1232b:	int3   
   1232c:	int3   
   1232d:	int3   
   1232e:	int3   
   1232f:	int3   
   12330:	mov    edi,edi
   12332:	push   ebp
   12333:	mov    ebp,esp
   12335:	mov    eax,DWORD PTR [ecx+0x4]
   12338:	push   esi
   12339:	mov    esi,DWORD PTR [eax+0x4]
   1233c:	push   edi
   1233d:	mov    edi,eax
   1233f:	jmp    0x1235a
   12341:	push   DWORD PTR [ebp+0x8]
   12344:	lea    eax,[esi+0xc]
   12347:	push   eax
   12348:	call   0x17b04
   1234d:	test   al,al
   1234f:	je     0x12356
   12351:	mov    esi,DWORD PTR [esi+0x8]
   12354:	jmp    0x1235a
   12356:	mov    edi,esi
   12358:	mov    esi,DWORD PTR [esi]
   1235a:	cmp    esi,DWORD PTR ds:0x70c94
   12360:	jne    0x12341
   12362:	mov    eax,edi
   12364:	pop    edi
   12365:	pop    esi
   12366:	pop    ebp
   12367:	ret    0x4
   1236a:	int3   
   1236b:	int3   
   1236c:	int3   
   1236d:	int3   
   1236e:	int3   
   1236f:	int3   
   12370:	mov    edi,edi
   12372:	push   ebp
   12373:	mov    ebp,esp
   12375:	mov    eax,DWORD PTR [ecx+0x4]
   12378:	mov    ecx,DWORD PTR [eax+0x4]
   1237b:	mov    edx,DWORD PTR ds:0x70c98
   12381:	cmp    ecx,edx
   12383:	je     0x1239e
   12385:	push   esi
   12386:	mov    esi,DWORD PTR [ebp+0x8]
   12389:	mov    esi,DWORD PTR [esi]
   1238b:	cmp    DWORD PTR [ecx+0xc],esi
   1238e:	jge    0x12395
   12390:	mov    ecx,DWORD PTR [ecx+0x8]
   12393:	jmp    0x12399
   12395:	mov    eax,ecx
   12397:	mov    ecx,DWORD PTR [ecx]
   12399:	cmp    ecx,edx
   1239b:	jne    0x1238b
   1239d:	pop    esi
   1239e:	pop    ebp
   1239f:	ret    0x4
   123a2:	int3   
   123a3:	int3   
   123a4:	int3   
   123a5:	int3   
   123a6:	int3   
   123a7:	int3   
   123a8:	mov    edi,edi
   123aa:	push   ebp
   123ab:	mov    ebp,esp
   123ad:	mov    eax,DWORD PTR [ecx+0x4]
   123b0:	mov    ecx,DWORD PTR [eax+0x4]
   123b3:	mov    edx,DWORD PTR ds:0x70c88
   123b9:	cmp    ecx,edx
   123bb:	je     0x123d6
   123bd:	push   esi
   123be:	mov    esi,DWORD PTR [ebp+0x8]
   123c1:	mov    esi,DWORD PTR [esi]
   123c3:	cmp    esi,DWORD PTR [ecx+0xc]
   123c6:	jae    0x123ce
   123c8:	mov    eax,ecx
   123ca:	mov    ecx,DWORD PTR [ecx]
   123cc:	jmp    0x123d1
   123ce:	mov    ecx,DWORD PTR [ecx+0x8]
   123d1:	cmp    ecx,edx
   123d3:	jne    0x123c3
   123d5:	pop    esi
   123d6:	pop    ebp
   123d7:	ret    0x4
   123da:	int3   
   123db:	int3   
   123dc:	int3   
   123dd:	int3   
   123de:	int3   
   123df:	int3   
   123e0:	mov    edi,edi
   123e2:	push   ebp
   123e3:	mov    ebp,esp
   123e5:	mov    eax,DWORD PTR [ecx+0x4]
   123e8:	push   esi
   123e9:	mov    esi,DWORD PTR [eax+0x4]
   123ec:	push   edi
   123ed:	mov    edi,eax
   123ef:	jmp    0x1240a
   123f1:	lea    eax,[esi+0x10]
   123f4:	push   eax
   123f5:	push   DWORD PTR [ebp+0x8]
   123f8:	call   0x17b04
   123fd:	test   al,al
   123ff:	je     0x12407
   12401:	mov    edi,esi
   12403:	mov    esi,DWORD PTR [esi]
   12405:	jmp    0x1240a
   12407:	mov    esi,DWORD PTR [esi+0x8]
   1240a:	cmp    esi,DWORD PTR ds:0x70c90
   12410:	jne    0x123f1
   12412:	mov    eax,edi
   12414:	pop    edi
   12415:	pop    esi
   12416:	pop    ebp
   12417:	ret    0x4
   1241a:	int3   
   1241b:	int3   
   1241c:	int3   
   1241d:	int3   
   1241e:	int3   
   1241f:	int3   
   12420:	mov    edi,edi
   12422:	push   ebp
   12423:	mov    ebp,esp
   12425:	mov    edx,DWORD PTR [ebp+0x8]
   12428:	mov    eax,DWORD PTR [edx+0x8]
   1242b:	push   esi
   1242c:	mov    esi,DWORD PTR [eax]
   1242e:	mov    DWORD PTR [edx+0x8],esi
   12431:	mov    esi,DWORD PTR [eax]
   12433:	cmp    esi,DWORD PTR ds:0x70c94
   12439:	je     0x1243e
   1243b:	mov    DWORD PTR [esi+0x4],edx
   1243e:	mov    esi,DWORD PTR [edx+0x4]
   12441:	mov    DWORD PTR [eax+0x4],esi
   12444:	mov    ecx,DWORD PTR [ecx+0x4]
   12447:	pop    esi
   12448:	cmp    edx,DWORD PTR [ecx+0x4]
   1244b:	jne    0x12452
   1244d:	mov    DWORD PTR [ecx+0x4],eax
   12450:	jmp    0x12460
   12452:	mov    ecx,DWORD PTR [edx+0x4]
   12455:	cmp    edx,DWORD PTR [ecx]
   12457:	jne    0x1245d
   12459:	mov    DWORD PTR [ecx],eax
   1245b:	jmp    0x12460
   1245d:	mov    DWORD PTR [ecx+0x8],eax
   12460:	mov    DWORD PTR [eax],edx
   12462:	mov    DWORD PTR [edx+0x4],eax
   12465:	pop    ebp
   12466:	ret    0x4
   12469:	int3   
   1246a:	int3   
   1246b:	int3   
   1246c:	int3   
   1246d:	int3   
   1246e:	mov    edi,edi
   12470:	push   ebp
   12471:	mov    ebp,esp
   12473:	mov    edx,DWORD PTR [ebp+0x8]
   12476:	mov    eax,DWORD PTR [edx]
   12478:	push   esi
   12479:	mov    esi,DWORD PTR [eax+0x8]
   1247c:	mov    DWORD PTR [edx],esi
   1247e:	mov    esi,DWORD PTR [eax+0x8]
   12481:	cmp    esi,DWORD PTR ds:0x70c94
   12487:	je     0x1248c
   12489:	mov    DWORD PTR [esi+0x4],edx
   1248c:	mov    esi,DWORD PTR [edx+0x4]
   1248f:	mov    DWORD PTR [eax+0x4],esi
   12492:	mov    ecx,DWORD PTR [ecx+0x4]
   12495:	pop    esi
   12496:	cmp    edx,DWORD PTR [ecx+0x4]
   12499:	jne    0x124a0
   1249b:	mov    DWORD PTR [ecx+0x4],eax
   1249e:	jmp    0x124af
   124a0:	mov    ecx,DWORD PTR [edx+0x4]
   124a3:	cmp    edx,DWORD PTR [ecx+0x8]
   124a6:	jne    0x124ad
   124a8:	mov    DWORD PTR [ecx+0x8],eax
   124ab:	jmp    0x124af
   124ad:	mov    DWORD PTR [ecx],eax
   124af:	mov    DWORD PTR [eax+0x8],edx
   124b2:	mov    DWORD PTR [edx+0x4],eax
   124b5:	pop    ebp
   124b6:	ret    0x4
   124b9:	int3   
   124ba:	int3   
   124bb:	int3   
   124bc:	int3   
   124bd:	int3   
   124be:	mov    edi,edi
   124c0:	push   ebp
   124c1:	mov    ebp,esp
   124c3:	mov    eax,DWORD PTR [ecx+0x4]
   124c6:	push   esi
   124c7:	mov    esi,DWORD PTR [eax+0x4]
   124ca:	push   edi
   124cb:	mov    edi,eax
   124cd:	jmp    0x124e8
   124cf:	lea    eax,[esi+0xc]
   124d2:	push   eax
   124d3:	push   DWORD PTR [ebp+0x8]
   124d6:	call   0x17b04
   124db:	test   al,al
   124dd:	je     0x124e5
   124df:	mov    edi,esi
   124e1:	mov    esi,DWORD PTR [esi]
   124e3:	jmp    0x124e8
   124e5:	mov    esi,DWORD PTR [esi+0x8]
   124e8:	cmp    esi,DWORD PTR ds:0x70c94
   124ee:	jne    0x124cf
   124f0:	mov    eax,edi
   124f2:	pop    edi
   124f3:	pop    esi
   124f4:	pop    ebp
   124f5:	ret    0x4
   124f8:	int3   
   124f9:	int3   
   124fa:	int3   
   124fb:	int3   
   124fc:	int3   
   124fd:	int3   
   124fe:	mov    edi,edi
   12500:	push   ebp
   12501:	mov    ebp,esp
   12503:	mov    edx,DWORD PTR [ebp+0x8]
   12506:	mov    eax,DWORD PTR [edx+0x8]
   12509:	push   esi
   1250a:	mov    esi,DWORD PTR [eax]
   1250c:	mov    DWORD PTR [edx+0x8],esi
   1250f:	mov    esi,DWORD PTR [eax]
   12511:	cmp    esi,DWORD PTR ds:0x70c98
   12517:	je     0x1251c
   12519:	mov    DWORD PTR [esi+0x4],edx
   1251c:	mov    esi,DWORD PTR [edx+0x4]
   1251f:	mov    DWORD PTR [eax+0x4],esi
   12522:	mov    ecx,DWORD PTR [ecx+0x4]
   12525:	pop    esi
   12526:	cmp    edx,DWORD PTR [ecx+0x4]
   12529:	jne    0x12530
   1252b:	mov    DWORD PTR [ecx+0x4],eax
   1252e:	jmp    0x1253e
   12530:	mov    ecx,DWORD PTR [edx+0x4]
   12533:	cmp    edx,DWORD PTR [ecx]
   12535:	jne    0x1253b
   12537:	mov    DWORD PTR [ecx],eax
   12539:	jmp    0x1253e
   1253b:	mov    DWORD PTR [ecx+0x8],eax
   1253e:	mov    DWORD PTR [eax],edx
   12540:	mov    DWORD PTR [edx+0x4],eax
   12543:	pop    ebp
   12544:	ret    0x4
   12547:	int3   
   12548:	int3   
   12549:	int3   
   1254a:	int3   
   1254b:	int3   
   1254c:	mov    edi,edi
   1254e:	push   ebp
   1254f:	mov    ebp,esp
   12551:	mov    edx,DWORD PTR [ebp+0x8]
   12554:	mov    eax,DWORD PTR [edx]
   12556:	push   esi
   12557:	mov    esi,DWORD PTR [eax+0x8]
   1255a:	mov    DWORD PTR [edx],esi
   1255c:	mov    esi,DWORD PTR [eax+0x8]
   1255f:	cmp    esi,DWORD PTR ds:0x70c98
   12565:	je     0x1256a
   12567:	mov    DWORD PTR [esi+0x4],edx
   1256a:	mov    esi,DWORD PTR [edx+0x4]
   1256d:	mov    DWORD PTR [eax+0x4],esi
   12570:	mov    ecx,DWORD PTR [ecx+0x4]
   12573:	pop    esi
   12574:	cmp    edx,DWORD PTR [ecx+0x4]
   12577:	jne    0x1257e
   12579:	mov    DWORD PTR [ecx+0x4],eax
   1257c:	jmp    0x1258d
   1257e:	mov    ecx,DWORD PTR [edx+0x4]
   12581:	cmp    edx,DWORD PTR [ecx+0x8]
   12584:	jne    0x1258b
   12586:	mov    DWORD PTR [ecx+0x8],eax
   12589:	jmp    0x1258d
   1258b:	mov    DWORD PTR [ecx],eax
   1258d:	mov    DWORD PTR [eax+0x8],edx
   12590:	mov    DWORD PTR [edx+0x4],eax
   12593:	pop    ebp
   12594:	ret    0x4
   12597:	int3   
   12598:	int3   
   12599:	int3   
   1259a:	int3   
   1259b:	int3   
   1259c:	mov    edi,edi
   1259e:	push   ebp
   1259f:	mov    ebp,esp
   125a1:	mov    eax,DWORD PTR [ecx+0x4]
   125a4:	mov    ecx,DWORD PTR [eax+0x4]
   125a7:	mov    edx,DWORD PTR ds:0x70c98
   125ad:	cmp    ecx,edx
   125af:	je     0x125ca
   125b1:	push   esi
   125b2:	mov    esi,DWORD PTR [ebp+0x8]
   125b5:	mov    esi,DWORD PTR [esi]
   125b7:	cmp    esi,DWORD PTR [ecx+0xc]
   125ba:	jge    0x125c2
   125bc:	mov    eax,ecx
   125be:	mov    ecx,DWORD PTR [ecx]
   125c0:	jmp    0x125c5
   125c2:	mov    ecx,DWORD PTR [ecx+0x8]
   125c5:	cmp    ecx,edx
   125c7:	jne    0x125b7
   125c9:	pop    esi
   125ca:	pop    ebp
   125cb:	ret    0x4
   125ce:	int3   
   125cf:	int3   
   125d0:	int3   
   125d1:	int3   
   125d2:	int3   
   125d3:	int3   
   125d4:	mov    edi,edi
   125d6:	push   ebp
   125d7:	mov    ebp,esp
   125d9:	mov    eax,DWORD PTR [ecx+0x4]
   125dc:	push   esi
   125dd:	mov    esi,DWORD PTR [eax+0x4]
   125e0:	push   edi
   125e1:	mov    edi,eax
   125e3:	jmp    0x125fe
   125e5:	push   DWORD PTR [ebp+0x8]
   125e8:	lea    eax,[esi+0xc]
   125eb:	push   eax
   125ec:	call   0x17b34
   125f1:	test   al,al
   125f3:	je     0x125fa
   125f5:	mov    esi,DWORD PTR [esi+0x8]
   125f8:	jmp    0x125fe
   125fa:	mov    edi,esi
   125fc:	mov    esi,DWORD PTR [esi]
   125fe:	cmp    esi,DWORD PTR ds:0x70ca0
   12604:	jne    0x125e5
   12606:	mov    eax,edi
   12608:	pop    edi
   12609:	pop    esi
   1260a:	pop    ebp
   1260b:	ret    0x4
   1260e:	int3   
   1260f:	int3   
   12610:	int3   
   12611:	int3   
   12612:	int3   
   12613:	int3   
   12614:	mov    edi,edi
   12616:	push   ebp
   12617:	mov    ebp,esp
   12619:	mov    edx,DWORD PTR [ebp+0x8]
   1261c:	mov    eax,DWORD PTR [edx+0x8]
   1261f:	push   esi
   12620:	mov    esi,DWORD PTR [eax]
   12622:	mov    DWORD PTR [edx+0x8],esi
   12625:	mov    esi,DWORD PTR [eax]
   12627:	cmp    esi,DWORD PTR ds:0x70ca0
   1262d:	je     0x12632
   1262f:	mov    DWORD PTR [esi+0x4],edx
   12632:	mov    esi,DWORD PTR [edx+0x4]
   12635:	mov    DWORD PTR [eax+0x4],esi
   12638:	mov    ecx,DWORD PTR [ecx+0x4]
   1263b:	pop    esi
   1263c:	cmp    edx,DWORD PTR [ecx+0x4]
   1263f:	jne    0x12646
   12641:	mov    DWORD PTR [ecx+0x4],eax
   12644:	jmp    0x12654
   12646:	mov    ecx,DWORD PTR [edx+0x4]
   12649:	cmp    edx,DWORD PTR [ecx]
   1264b:	jne    0x12651
   1264d:	mov    DWORD PTR [ecx],eax
   1264f:	jmp    0x12654
   12651:	mov    DWORD PTR [ecx+0x8],eax
   12654:	mov    DWORD PTR [eax],edx
   12656:	mov    DWORD PTR [edx+0x4],eax
   12659:	pop    ebp
   1265a:	ret    0x4
   1265d:	int3   
   1265e:	int3   
   1265f:	int3   
   12660:	int3   
   12661:	int3   
   12662:	mov    edi,edi
   12664:	push   ebp
   12665:	mov    ebp,esp
   12667:	mov    edx,DWORD PTR [ebp+0x8]
   1266a:	mov    eax,DWORD PTR [edx]
   1266c:	push   esi
   1266d:	mov    esi,DWORD PTR [eax+0x8]
   12670:	mov    DWORD PTR [edx],esi
   12672:	mov    esi,DWORD PTR [eax+0x8]
   12675:	cmp    esi,DWORD PTR ds:0x70ca0
   1267b:	je     0x12680
   1267d:	mov    DWORD PTR [esi+0x4],edx
   12680:	mov    esi,DWORD PTR [edx+0x4]
   12683:	mov    DWORD PTR [eax+0x4],esi
   12686:	mov    ecx,DWORD PTR [ecx+0x4]
   12689:	pop    esi
   1268a:	cmp    edx,DWORD PTR [ecx+0x4]
   1268d:	jne    0x12694
   1268f:	mov    DWORD PTR [ecx+0x4],eax
   12692:	jmp    0x126a3
   12694:	mov    ecx,DWORD PTR [edx+0x4]
   12697:	cmp    edx,DWORD PTR [ecx+0x8]
   1269a:	jne    0x126a1
   1269c:	mov    DWORD PTR [ecx+0x8],eax
   1269f:	jmp    0x126a3
   126a1:	mov    DWORD PTR [ecx],eax
   126a3:	mov    DWORD PTR [eax+0x8],edx
   126a6:	mov    DWORD PTR [edx+0x4],eax
   126a9:	pop    ebp
   126aa:	ret    0x4
   126ad:	int3   
   126ae:	int3   
   126af:	int3   
   126b0:	int3   
   126b1:	int3   
   126b2:	mov    edi,edi
   126b4:	push   esi
   126b5:	mov    esi,ecx
   126b7:	mov    ecx,DWORD PTR [esi]
   126b9:	cmp    DWORD PTR [ecx+0x1c],0x0
   126bd:	jne    0x126cc
   126bf:	mov    eax,DWORD PTR [ecx+0x4]
   126c2:	cmp    DWORD PTR [eax+0x4],ecx
   126c5:	jne    0x126cc
   126c7:	mov    eax,DWORD PTR [ecx+0x8]
   126ca:	jmp    0x126e9
   126cc:	mov    eax,DWORD PTR [ecx]
   126ce:	cmp    eax,DWORD PTR ds:0x70ca0
   126d4:	je     0x126e2
   126d6:	push   eax
   126d7:	call   0x116d0
   126dc:	jmp    0x126e9
   126de:	mov    DWORD PTR [esi],eax
   126e0:	mov    ecx,eax
   126e2:	mov    eax,DWORD PTR [ecx+0x4]
   126e5:	cmp    ecx,DWORD PTR [eax]
   126e7:	je     0x126de
   126e9:	mov    DWORD PTR [esi],eax
   126eb:	pop    esi
   126ec:	ret    
   126ed:	int3   
   126ee:	int3   
   126ef:	int3   
   126f0:	int3   
   126f1:	int3   
   126f2:	mov    edi,edi
   126f4:	push   ebp
   126f5:	mov    ebp,esp
   126f7:	mov    ecx,DWORD PTR [ebp+0x8]
   126fa:	push   0x0
   126fc:	call   0x11772
   12701:	pop    ebp
   12702:	ret    0x4
   12705:	int3   
   12706:	int3   
   12707:	int3   
   12708:	int3   
   12709:	int3   
   1270a:	mov    edi,edi
   1270c:	push   ebp
   1270d:	mov    ebp,esp
   1270f:	mov    ecx,DWORD PTR [ebp+0x8]
   12712:	push   0x0
   12714:	call   0x11798
   12719:	pop    ebp
   1271a:	ret    0x4
   1271d:	int3   
   1271e:	int3   
   1271f:	int3   
   12720:	int3   
   12721:	int3   
   12722:	mov    edi,edi
   12724:	push   ebp
   12725:	mov    ebp,esp
   12727:	push   esi
   12728:	push   edi
   12729:	mov    edi,DWORD PTR [ebp+0x8]
   1272c:	push   edi
   1272d:	mov    esi,ecx
   1272f:	call   0x11f4a
   12734:	add    edi,0x8
   12737:	push   edi
   12738:	lea    ecx,[esi+0x8]
   1273b:	call   0x1216e
   12740:	pop    edi
   12741:	mov    eax,esi
   12743:	pop    esi
   12744:	pop    ebp
   12745:	ret    0x4
   12748:	int3   
   12749:	int3   
   1274a:	int3   
   1274b:	int3   
   1274c:	int3   
   1274d:	int3   
   1274e:	mov    edi,edi
   12750:	push   ebp
   12751:	mov    ebp,esp
   12753:	push   esi
   12754:	push   edi
   12755:	mov    edi,DWORD PTR [ebp+0x8]
   12758:	push   edi
   12759:	mov    esi,ecx
   1275b:	call   0x11f4a
   12760:	add    edi,0x8
   12763:	push   edi
   12764:	lea    ecx,[esi+0x8]
   12767:	call   0x11f4a
   1276c:	pop    edi
   1276d:	mov    eax,esi
   1276f:	pop    esi
   12770:	pop    ebp
   12771:	ret    0x4
   12774:	int3   
   12775:	int3   
   12776:	int3   
   12777:	int3   
   12778:	int3   
   12779:	int3   
   1277a:	mov    edi,edi
   1277c:	push   ebp
   1277d:	mov    ebp,esp
   1277f:	mov    eax,DWORD PTR [ebp+0x8]
   12782:	push   esi
   12783:	mov    esi,ecx
   12785:	mov    ecx,DWORD PTR [eax]
   12787:	add    eax,0x4
   1278a:	mov    DWORD PTR [esi],ecx
   1278c:	push   eax
   1278d:	lea    ecx,[esi+0x4]
   12790:	call   0x117be
   12795:	mov    eax,esi
   12797:	pop    esi
   12798:	pop    ebp
   12799:	ret    0x4
   1279c:	int3   
   1279d:	int3   
   1279e:	int3   
   1279f:	int3   
   127a0:	int3   
   127a1:	int3   
   127a2:	mov    edi,edi
   127a4:	push   ebp
   127a5:	mov    ebp,esp
   127a7:	push   esi
   127a8:	mov    esi,ecx
   127aa:	mov    ecx,DWORD PTR [esi+0x4]
   127ad:	test   ecx,ecx
   127af:	je     0x127b6
   127b1:	call   0x10850
   127b6:	test   BYTE PTR [ebp+0x8],0x1
   127ba:	je     0x127c3
   127bc:	push   esi
   127bd:	call   0x10832
   127c2:	pop    ecx
   127c3:	mov    eax,esi
   127c5:	pop    esi
   127c6:	pop    ebp
   127c7:	ret    0x4
   127ca:	int3   
   127cb:	int3   
   127cc:	int3   
   127cd:	int3   
   127ce:	int3   
   127cf:	int3   
   127d0:	mov    edi,edi
   127d2:	push   ebp
   127d3:	mov    ebp,esp
   127d5:	push   esi
   127d6:	push   edi
   127d7:	mov    edi,DWORD PTR [ebp+0x8]
   127da:	push   edi
   127db:	mov    esi,ecx
   127dd:	call   0x120a2
   127e2:	add    edi,0x8
   127e5:	push   edi
   127e6:	lea    ecx,[esi+0x8]
   127e9:	call   0x120a2
   127ee:	pop    edi
   127ef:	mov    eax,esi
   127f1:	pop    esi
   127f2:	pop    ebp
   127f3:	ret    0x4
   127f6:	int3   
   127f7:	int3   
   127f8:	int3   
   127f9:	int3   
   127fa:	int3   
   127fb:	int3   
   127fc:	mov    edi,edi
   127fe:	push   ebp
   127ff:	mov    ebp,esp
   12801:	push   edi
   12802:	mov    edi,DWORD PTR [ebp+0xc]
   12805:	cmp    DWORD PTR [ebp+0x8],edi
   12808:	je     0x1281e
   1280a:	push   esi
   1280b:	mov    esi,DWORD PTR [ebp+0x10]
   1280e:	inc    DWORD PTR [esi]
   12810:	lea    ecx,[ebp+0x8]
   12813:	call   0x11426
   12818:	cmp    DWORD PTR [ebp+0x8],edi
   1281b:	jne    0x1280e
   1281d:	pop    esi
   1281e:	pop    edi
   1281f:	pop    ebp
   12820:	ret    
   12821:	int3   
   12822:	int3   
   12823:	int3   
   12824:	int3   
   12825:	int3   
   12826:	mov    edi,edi
   12828:	push   ebp
   12829:	mov    ebp,esp
   1282b:	push   edi
   1282c:	mov    edi,DWORD PTR [ebp+0xc]
   1282f:	cmp    DWORD PTR [ebp+0x8],edi
   12832:	je     0x12848
   12834:	push   esi
   12835:	mov    esi,DWORD PTR [ebp+0x10]
   12838:	inc    DWORD PTR [esi]
   1283a:	lea    ecx,[ebp+0x8]
   1283d:	call   0x11664
   12842:	cmp    DWORD PTR [ebp+0x8],edi
   12845:	jne    0x12838
   12847:	pop    esi
   12848:	pop    edi
   12849:	pop    ebp
   1284a:	ret    
   1284b:	int3   
   1284c:	int3   
   1284d:	int3   
   1284e:	int3   
   1284f:	int3   
   12850:	mov    edi,edi
   12852:	push   ebp
   12853:	mov    ebp,esp
   12855:	push   edi
   12856:	mov    edi,DWORD PTR [ebp+0xc]
   12859:	cmp    DWORD PTR [ebp+0x8],edi
   1285c:	je     0x12872
   1285e:	push   esi
   1285f:	mov    esi,DWORD PTR [ebp+0x10]
   12862:	inc    DWORD PTR [esi]
   12864:	lea    ecx,[ebp+0x8]
   12867:	call   0x1169a
   1286c:	cmp    DWORD PTR [ebp+0x8],edi
   1286f:	jne    0x12862
   12871:	pop    esi
   12872:	pop    edi
   12873:	pop    ebp
   12874:	ret    
   12875:	int3   
   12876:	int3   
   12877:	int3   
   12878:	int3   
   12879:	int3   
   1287a:	mov    edi,edi
   1287c:	push   esi
   1287d:	push   edi
   1287e:	push   0xffffffff
   12880:	mov    edi,0x1abe8
   12885:	push   edi
   12886:	mov    esi,ecx
   12888:	call   0x11274
   1288d:	push   0xffffffff
   1288f:	push   edi
   12890:	lea    ecx,[esi+0x8]
   12893:	call   0x11274
   12898:	push   0xffffffff
   1289a:	push   edi
   1289b:	lea    ecx,[esi+0x10]
   1289e:	call   0x11274
   128a3:	push   0xffffffff
   128a5:	push   edi
   128a6:	lea    ecx,[esi+0x18]
   128a9:	call   0x11274
   128ae:	xor    eax,eax
   128b0:	mov    DWORD PTR [esi+0x20],eax
   128b3:	mov    DWORD PTR [esi+0x30],eax
   128b6:	mov    DWORD PTR [esi+0x34],eax
   128b9:	pop    edi
   128ba:	mov    eax,esi
   128bc:	pop    esi
   128bd:	ret    
   128be:	int3   
   128bf:	int3   
   128c0:	int3   
   128c1:	int3   
   128c2:	int3   
   128c3:	int3   
   128c4:	mov    edi,edi
   128c6:	push   ebp
   128c7:	mov    ebp,esp
   128c9:	push   esi
   128ca:	push   0xc
   128cc:	mov    esi,ecx
   128ce:	call   0x107fe
   128d3:	pop    ecx
   128d4:	test   eax,eax
   128d6:	je     0x128e7
   128d8:	push   DWORD PTR [ebp+0xc]
   128db:	mov    ecx,eax
   128dd:	push   DWORD PTR [ebp+0x8]
   128e0:	call   0x1180c
   128e5:	jmp    0x128e9
   128e7:	xor    eax,eax
   128e9:	mov    DWORD PTR [esi],eax
   128eb:	mov    eax,esi
   128ed:	pop    esi
   128ee:	pop    ebp
   128ef:	ret    0x8
   128f2:	int3   
   128f3:	int3   
   128f4:	int3   
   128f5:	int3   
   128f6:	int3   
   128f7:	int3   
   128f8:	mov    edi,edi
   128fa:	push   ebp
   128fb:	mov    ebp,esp
   128fd:	sub    esp,0x18
   12900:	lea    eax,[ebp-0x18]
   12903:	push   eax
   12904:	push   DWORD PTR [ebp+0x8]
   12907:	call   0x10d40
   1290c:	test   al,al
   1290e:	je     0x12981
   12910:	push   0x1ac68
   12915:	call   0x116f2
   1291a:	lea    ecx,[ebp-0x4]
   1291d:	push   ecx
   1291e:	push   DWORD PTR [ebp+0xc]
   12921:	call   eax
   12923:	test   eax,eax
   12925:	jl     0x12981
   12927:	push   esi
   12928:	push   0x5
   1292a:	call   0x11ec4
   1292f:	mov    esi,eax
   12931:	test   esi,esi
   12933:	je     0x12980
   12935:	mov    edx,DWORD PTR [ebp+0x10]
   12938:	cmp    DWORD PTR [esi+0x44],edx
   1293b:	je     0x1294a
   1293d:	mov    ecx,DWORD PTR [eax]
   1293f:	test   ecx,ecx
   12941:	je     0x1296e
   12943:	add    eax,ecx
   12945:	cmp    DWORD PTR [eax+0x44],edx
   12948:	jne    0x1293d
   1294a:	cmp    DWORD PTR [eax+0x4],0x0
   1294e:	je     0x1296e
   12950:	mov    ecx,DWORD PTR [eax+0xd8]
   12956:	mov    eax,DWORD PTR [eax+0xdc]
   1295c:	mov    DWORD PTR [ebp-0x14],eax
   1295f:	lea    eax,[ebp-0x18]
   12962:	push   eax
   12963:	push   DWORD PTR [ebp+0x8]
   12966:	mov    DWORD PTR [ebp-0x18],ecx
   12969:	call   0x10d8e
   1296e:	mov    ecx,DWORD PTR [ebp-0x4]
   12971:	call   DWORD PTR ds:0x1b9d0
   12977:	push   0x0
   12979:	push   esi
   1297a:	call   DWORD PTR ds:0x1b91c
   12980:	pop    esi
   12981:	leave  
   12982:	ret    0x10
   12985:	int3   
   12986:	int3   
   12987:	int3   
   12988:	int3   
   12989:	int3   
   1298a:	mov    edi,edi
   1298c:	push   ebp
   1298d:	mov    ebp,esp
   1298f:	push   esi
   12990:	mov    esi,DWORD PTR [ebp+0x8]
   12993:	lea    eax,[ebp+0xc]
   12996:	push   eax
   12997:	mov    ecx,esi
   12999:	call   0x120a2
   1299e:	xor    ecx,ecx
   129a0:	inc    ecx
   129a1:	cmp    DWORD PTR [esi+0x4],ecx
   129a4:	jbe    0x129b8
   129a6:	mov    eax,DWORD PTR [esi]
   129a8:	lea    eax,[eax+ecx*2]
   129ab:	mov    dx,WORD PTR [eax-0x2]
   129af:	xor    WORD PTR [eax],dx
   129b2:	inc    ecx
   129b3:	cmp    ecx,DWORD PTR [esi+0x4]
   129b6:	jb     0x129a6
   129b8:	push   DWORD PTR [ebp+0xc]
   129bb:	call   0x10832
   129c0:	pop    ecx
   129c1:	mov    eax,esi
   129c3:	pop    esi
   129c4:	pop    ebp
   129c5:	ret    0xc
   129c8:	int3   
   129c9:	int3   
   129ca:	int3   
   129cb:	int3   
   129cc:	int3   
   129cd:	int3   
   129ce:	mov    edi,edi
   129d0:	push   esi
   129d1:	mov    esi,ecx
   129d3:	mov    ecx,DWORD PTR [esi]
   129d5:	mov    eax,DWORD PTR [ecx+0x8]
   129d8:	cmp    eax,DWORD PTR ds:0x70c90
   129de:	je     0x129ec
   129e0:	push   eax
   129e1:	call   0x121d0
   129e6:	jmp    0x129fb
   129e8:	mov    DWORD PTR [esi],eax
   129ea:	mov    ecx,eax
   129ec:	mov    eax,DWORD PTR [ecx+0x4]
   129ef:	cmp    ecx,DWORD PTR [eax+0x8]
   129f2:	je     0x129e8
   129f4:	mov    ecx,DWORD PTR [esi]
   129f6:	cmp    DWORD PTR [ecx+0x8],eax
   129f9:	je     0x129fd
   129fb:	mov    DWORD PTR [esi],eax
   129fd:	pop    esi
   129fe:	ret    
   129ff:	int3   
   12a00:	int3   
   12a01:	int3   
   12a02:	int3   
   12a03:	int3   
   12a04:	mov    edi,edi
   12a06:	push   ebp
   12a07:	mov    ebp,esp
   12a09:	push   esi
   12a0a:	push   DWORD PTR [ebp+0x8]
   12a0d:	mov    esi,ecx
   12a0f:	call   0x11f4a
   12a14:	push   DWORD PTR [ebp+0xc]
   12a17:	lea    ecx,[esi+0x8]
   12a1a:	call   0x1216e
   12a1f:	mov    eax,esi
   12a21:	pop    esi
   12a22:	pop    ebp
   12a23:	ret    0x8
   12a26:	int3   
   12a27:	int3   
   12a28:	int3   
   12a29:	int3   
   12a2a:	int3   
   12a2b:	int3   
   12a2c:	mov    edi,edi
   12a2e:	push   ebp
   12a2f:	mov    ebp,esp
   12a31:	push   ebx
   12a32:	push   esi
   12a33:	push   edi
   12a34:	mov    edi,DWORD PTR [ebp+0x8]
   12a37:	mov    ebx,ecx
   12a39:	mov    esi,edi
   12a3b:	cmp    edi,DWORD PTR ds:0x70c88
   12a41:	je     0x12a60
   12a43:	push   DWORD PTR [esi+0x8]
   12a46:	mov    ecx,ebx
   12a48:	call   0x12a2c
   12a4d:	mov    esi,DWORD PTR [esi]
   12a4f:	push   edi
   12a50:	call   0x10832
   12a55:	pop    ecx
   12a56:	mov    edi,esi
   12a58:	cmp    esi,DWORD PTR ds:0x70c88
   12a5e:	jne    0x12a43
   12a60:	pop    edi
   12a61:	pop    esi
   12a62:	pop    ebx
   12a63:	pop    ebp
   12a64:	ret    0x4
   12a67:	int3   
   12a68:	int3   
   12a69:	int3   
   12a6a:	int3   
   12a6b:	int3   
   12a6c:	mov    edi,edi
   12a6e:	push   ebp
   12a6f:	mov    ebp,esp
   12a71:	push   0x0
   12a73:	push   0x18
   12a75:	call   0x1172e
   12a7a:	mov    ecx,DWORD PTR [ebp+0x8]
   12a7d:	mov    DWORD PTR [eax+0x4],ecx
   12a80:	mov    ecx,DWORD PTR [ebp+0xc]
   12a83:	mov    DWORD PTR [eax+0x14],ecx
   12a86:	pop    ebp
   12a87:	ret    0x8
   12a8a:	int3   
   12a8b:	int3   
   12a8c:	int3   
   12a8d:	int3   
   12a8e:	int3   
   12a8f:	int3   
   12a90:	mov    edi,edi
   12a92:	push   ebp
   12a93:	mov    ebp,esp
   12a95:	push   0x0
   12a97:	push   0x58
   12a99:	call   0x1172e
   12a9e:	mov    ecx,DWORD PTR [ebp+0x8]
   12aa1:	mov    DWORD PTR [eax+0x4],ecx
   12aa4:	mov    ecx,DWORD PTR [ebp+0xc]
   12aa7:	mov    DWORD PTR [eax+0x50],ecx
   12aaa:	pop    ebp
   12aab:	ret    0x8
   12aae:	int3   
   12aaf:	int3   
   12ab0:	int3   
   12ab1:	int3   
   12ab2:	int3   
   12ab3:	int3   
   12ab4:	mov    edi,edi
   12ab6:	push   ebp
   12ab7:	mov    ebp,esp
   12ab9:	push   0x0
   12abb:	push   0x20
   12abd:	call   0x1172e
   12ac2:	mov    ecx,DWORD PTR [ebp+0x8]
   12ac5:	mov    DWORD PTR [eax+0x4],ecx
   12ac8:	mov    ecx,DWORD PTR [ebp+0xc]
   12acb:	mov    DWORD PTR [eax+0x1c],ecx
   12ace:	pop    ebp
   12acf:	ret    0x8
   12ad2:	int3   
   12ad3:	int3   
   12ad4:	int3   
   12ad5:	int3   
   12ad6:	int3   
   12ad7:	int3   
   12ad8:	mov    edi,edi
   12ada:	push   ebp
   12adb:	mov    ebp,esp
   12add:	push   0x0
   12adf:	push   0x14
   12ae1:	call   0x1172e
   12ae6:	mov    ecx,DWORD PTR [ebp+0x8]
   12ae9:	mov    DWORD PTR [eax+0x4],ecx
   12aec:	mov    ecx,DWORD PTR [ebp+0xc]
   12aef:	mov    DWORD PTR [eax+0x10],ecx
   12af2:	pop    ebp
   12af3:	ret    0x8
   12af6:	int3   
   12af7:	int3   
   12af8:	int3   
   12af9:	int3   
   12afa:	int3   
   12afb:	int3   
   12afc:	mov    edi,edi
   12afe:	push   ebp
   12aff:	mov    ebp,esp
   12b01:	push   0x0
   12b03:	push   0x60
   12b05:	call   0x1172e
   12b0a:	mov    ecx,DWORD PTR [ebp+0x8]
   12b0d:	mov    DWORD PTR [eax+0x4],ecx
   12b10:	mov    ecx,DWORD PTR [ebp+0xc]
   12b13:	mov    DWORD PTR [eax+0x58],ecx
   12b16:	pop    ebp
   12b17:	ret    0x8
   12b1a:	int3   
   12b1b:	int3   
   12b1c:	int3   
   12b1d:	int3   
   12b1e:	int3   
   12b1f:	int3   
   12b20:	mov    edi,edi
   12b22:	push   ebp
   12b23:	mov    ebp,esp
   12b25:	push   ecx
   12b26:	push   DWORD PTR [ebp-0x4]
   12b29:	push   DWORD PTR [ebp+0x10]
   12b2c:	push   DWORD PTR [ebp+0xc]
   12b2f:	push   DWORD PTR [ebp+0x8]
   12b32:	call   0x127fc
   12b37:	add    esp,0x10
   12b3a:	leave  
   12b3b:	ret    
   12b3c:	int3   
   12b3d:	int3   
   12b3e:	int3   
   12b3f:	int3   
   12b40:	int3   
   12b41:	int3   
   12b42:	mov    edi,edi
   12b44:	push   ebp
   12b45:	mov    ebp,esp
   12b47:	push   ecx
   12b48:	push   DWORD PTR [ebp-0x4]
   12b4b:	push   DWORD PTR [ebp+0x10]
   12b4e:	push   DWORD PTR [ebp+0xc]
   12b51:	push   DWORD PTR [ebp+0x8]
   12b54:	call   0x12826
   12b59:	add    esp,0x10
   12b5c:	leave  
   12b5d:	ret    
   12b5e:	int3   
   12b5f:	int3   
   12b60:	int3   
   12b61:	int3   
   12b62:	int3   
   12b63:	int3   
   12b64:	mov    edi,edi
   12b66:	push   ebp
   12b67:	mov    ebp,esp
   12b69:	push   ecx
   12b6a:	push   DWORD PTR [ebp-0x4]
   12b6d:	push   DWORD PTR [ebp+0x10]
   12b70:	push   DWORD PTR [ebp+0xc]
   12b73:	push   DWORD PTR [ebp+0x8]
   12b76:	call   0x12850
   12b7b:	add    esp,0x10
   12b7e:	leave  
   12b7f:	ret    
   12b80:	int3   
   12b81:	int3   
   12b82:	int3   
   12b83:	int3   
   12b84:	int3   
   12b85:	int3   
   12b86:	mov    edi,edi
   12b88:	push   ebp
   12b89:	mov    ebp,esp
   12b8b:	mov    ecx,DWORD PTR [ebp+0x8]
   12b8e:	test   ecx,ecx
   12b90:	je     0x12b9a
   12b92:	push   DWORD PTR [ebp+0xc]
   12b95:	call   0x12722
   12b9a:	pop    ebp
   12b9b:	ret    0x8
   12b9e:	int3   
   12b9f:	int3   
   12ba0:	int3   
   12ba1:	int3   
   12ba2:	int3   
   12ba3:	int3   
   12ba4:	mov    edi,edi
   12ba6:	push   ebp
   12ba7:	mov    ebp,esp
   12ba9:	mov    ecx,DWORD PTR [ebp+0x8]
   12bac:	test   ecx,ecx
   12bae:	je     0x12bb8
   12bb0:	push   DWORD PTR [ebp+0xc]
   12bb3:	call   0x1274e
   12bb8:	pop    ebp
   12bb9:	ret    0x8
   12bbc:	int3   
   12bbd:	int3   
   12bbe:	int3   
   12bbf:	int3   
   12bc0:	int3   
   12bc1:	int3   
   12bc2:	mov    edi,edi
   12bc4:	push   ebp
   12bc5:	mov    ebp,esp
   12bc7:	mov    ecx,DWORD PTR [ebp+0x8]
   12bca:	test   ecx,ecx
   12bcc:	je     0x12bd6
   12bce:	push   DWORD PTR [ebp+0xc]
   12bd1:	call   0x1277a
   12bd6:	pop    ebp
   12bd7:	ret    0x8
   12bda:	int3   
   12bdb:	int3   
   12bdc:	int3   
   12bdd:	int3   
   12bde:	int3   
   12bdf:	int3   
   12be0:	mov    edi,edi
   12be2:	push   ebp
   12be3:	mov    ebp,esp
   12be5:	mov    ecx,DWORD PTR [ebp+0x8]
   12be8:	push   0x0
   12bea:	call   0x127a2
   12bef:	pop    ebp
   12bf0:	ret    0x4
   12bf3:	int3   
   12bf4:	int3   
   12bf5:	int3   
   12bf6:	int3   
   12bf7:	int3   
   12bf8:	mov    edi,edi
   12bfa:	push   ebp
   12bfb:	mov    ebp,esp
   12bfd:	mov    ecx,DWORD PTR [ebp+0x8]
   12c00:	test   ecx,ecx
   12c02:	je     0x12c0c
   12c04:	push   DWORD PTR [ebp+0xc]
   12c07:	call   0x127d0
   12c0c:	pop    ebp
   12c0d:	ret    0x8
   12c10:	int3   
   12c11:	int3   
   12c12:	int3   
   12c13:	int3   
   12c14:	int3   
   12c15:	int3   
   12c16:	mov    edi,edi
   12c18:	push   ebp
   12c19:	mov    ebp,esp
   12c1b:	push   ecx
   12c1c:	push   esi
   12c1d:	push   edi
   12c1e:	mov    edi,DWORD PTR [ebp+0xc]
   12c21:	push   edi
   12c22:	mov    esi,ecx
   12c24:	call   0x1221a
   12c29:	mov    esi,DWORD PTR [esi+0x4]
   12c2c:	mov    DWORD PTR [ebp+0xc],eax
   12c2f:	cmp    eax,esi
   12c31:	je     0x12c3f
   12c33:	mov    ecx,DWORD PTR [edi]
   12c35:	cmp    ecx,DWORD PTR [eax+0xc]
   12c38:	jb     0x12c3f
   12c3a:	lea    eax,[ebp+0xc]
   12c3d:	jmp    0x12c45
   12c3f:	mov    DWORD PTR [ebp-0x4],esi
   12c42:	lea    eax,[ebp-0x4]
   12c45:	mov    ecx,DWORD PTR [eax]
   12c47:	mov    eax,DWORD PTR [ebp+0x8]
   12c4a:	pop    edi
   12c4b:	mov    DWORD PTR [eax],ecx
   12c4d:	pop    esi
   12c4e:	leave  
   12c4f:	ret    0x8
   12c52:	int3   
   12c53:	int3   
   12c54:	int3   
   12c55:	int3   
   12c56:	int3   
   12c57:	int3   
   12c58:	mov    edi,edi
   12c5a:	push   ebp
   12c5b:	mov    ebp,esp
   12c5d:	push   ecx
   12c5e:	push   esi
   12c5f:	push   DWORD PTR [ebp+0xc]
   12c62:	mov    esi,ecx
   12c64:	call   0x122f0
   12c69:	mov    DWORD PTR [ebp-0x4],eax
   12c6c:	cmp    eax,DWORD PTR [esi+0x4]
   12c6f:	je     0x12c86
   12c71:	add    eax,0x10
   12c74:	push   eax
   12c75:	push   DWORD PTR [ebp+0xc]
   12c78:	call   0x17b04
   12c7d:	test   al,al
   12c7f:	jne    0x12c86
   12c81:	lea    eax,[ebp-0x4]
   12c84:	jmp    0x12c8f
   12c86:	mov    eax,DWORD PTR [esi+0x4]
   12c89:	mov    DWORD PTR [ebp+0xc],eax
   12c8c:	lea    eax,[ebp+0xc]
   12c8f:	mov    ecx,DWORD PTR [eax]
   12c91:	mov    eax,DWORD PTR [ebp+0x8]
   12c94:	mov    DWORD PTR [eax],ecx
   12c96:	pop    esi
   12c97:	leave  
   12c98:	ret    0x8
   12c9b:	int3   
   12c9c:	int3   
   12c9d:	int3   
   12c9e:	int3   
   12c9f:	int3   
   12ca0:	mov    edi,edi
   12ca2:	push   ebp
   12ca3:	mov    ebp,esp
   12ca5:	push   ecx
   12ca6:	push   esi
   12ca7:	push   DWORD PTR [ebp+0xc]
   12caa:	mov    esi,ecx
   12cac:	call   0x12330
   12cb1:	mov    DWORD PTR [ebp-0x4],eax
   12cb4:	cmp    eax,DWORD PTR [esi+0x4]
   12cb7:	je     0x12cce
   12cb9:	add    eax,0xc
   12cbc:	push   eax
   12cbd:	push   DWORD PTR [ebp+0xc]
   12cc0:	call   0x17b04
   12cc5:	test   al,al
   12cc7:	jne    0x12cce
   12cc9:	lea    eax,[ebp-0x4]
   12ccc:	jmp    0x12cd7
   12cce:	mov    eax,DWORD PTR [esi+0x4]
   12cd1:	mov    DWORD PTR [ebp+0xc],eax
   12cd4:	lea    eax,[ebp+0xc]
   12cd7:	mov    ecx,DWORD PTR [eax]
   12cd9:	mov    eax,DWORD PTR [ebp+0x8]
   12cdc:	mov    DWORD PTR [eax],ecx
   12cde:	pop    esi
   12cdf:	leave  
   12ce0:	ret    0x8
   12ce3:	int3   
   12ce4:	int3   
   12ce5:	int3   
   12ce6:	int3   
   12ce7:	int3   
   12ce8:	mov    edi,edi
   12cea:	push   ebp
   12ceb:	mov    ebp,esp
   12ced:	push   ecx
   12cee:	push   esi
   12cef:	push   edi
   12cf0:	mov    edi,DWORD PTR [ebp+0xc]
   12cf3:	push   edi
   12cf4:	mov    esi,ecx
   12cf6:	call   0x12370
   12cfb:	mov    esi,DWORD PTR [esi+0x4]
   12cfe:	mov    DWORD PTR [ebp+0xc],eax
   12d01:	cmp    eax,esi
   12d03:	je     0x12d11
   12d05:	mov    ecx,DWORD PTR [edi]
   12d07:	cmp    ecx,DWORD PTR [eax+0xc]
   12d0a:	jl     0x12d11
   12d0c:	lea    eax,[ebp+0xc]
   12d0f:	jmp    0x12d17
   12d11:	mov    DWORD PTR [ebp-0x4],esi
   12d14:	lea    eax,[ebp-0x4]
   12d17:	mov    ecx,DWORD PTR [eax]
   12d19:	mov    eax,DWORD PTR [ebp+0x8]
   12d1c:	pop    edi
   12d1d:	mov    DWORD PTR [eax],ecx
   12d1f:	pop    esi
   12d20:	leave  
   12d21:	ret    0x8
   12d24:	int3   
   12d25:	int3   
   12d26:	int3   
   12d27:	int3   
   12d28:	int3   
   12d29:	int3   
   12d2a:	mov    edi,edi
   12d2c:	push   ebp
   12d2d:	mov    ebp,esp
   12d2f:	push   ecx
   12d30:	push   ecx
   12d31:	push   ebx
   12d32:	push   esi
   12d33:	mov    DWORD PTR [ebp-0x4],ecx
   12d36:	push   edi
   12d37:	mov    edi,DWORD PTR [ebp+0xc]
   12d3a:	lea    ecx,[ebp+0xc]
   12d3d:	call   0x11426
   12d42:	mov    esi,DWORD PTR [edi]
   12d44:	mov    eax,ds:0x70c88
   12d49:	mov    ebx,edi
   12d4b:	mov    DWORD PTR [ebp-0x8],esi
   12d4e:	cmp    esi,eax
   12d50:	jne    0x12d6e
   12d52:	mov    esi,DWORD PTR [edi+0x8]
   12d55:	mov    eax,DWORD PTR [ebx+0x4]
   12d58:	mov    ecx,DWORD PTR [ebp-0x4]
   12d5b:	mov    DWORD PTR [esi+0x4],eax
   12d5e:	mov    eax,DWORD PTR [ecx+0x4]
   12d61:	cmp    DWORD PTR [eax+0x4],edi
   12d64:	jne    0x12de3
   12d66:	mov    DWORD PTR [eax+0x4],esi
   12d69:	jmp    0x12df1
   12d6e:	mov    ecx,DWORD PTR [edi+0x8]
   12d71:	cmp    ecx,eax
   12d73:	je     0x12d55
   12d75:	push   ecx
   12d76:	call   0x113c4
   12d7b:	mov    ebx,eax
   12d7d:	mov    esi,DWORD PTR [ebx+0x8]
   12d80:	cmp    ebx,edi
   12d82:	je     0x12d55
   12d84:	mov    eax,DWORD PTR [ebp-0x8]
   12d87:	mov    DWORD PTR [eax+0x4],ebx
   12d8a:	mov    eax,DWORD PTR [edi]
   12d8c:	mov    DWORD PTR [ebx],eax
   12d8e:	cmp    ebx,DWORD PTR [edi+0x8]
   12d91:	jne    0x12d98
   12d93:	mov    DWORD PTR [esi+0x4],ebx
   12d96:	jmp    0x12daf
   12d98:	mov    eax,DWORD PTR [ebx+0x4]
   12d9b:	mov    DWORD PTR [esi+0x4],eax
   12d9e:	mov    eax,DWORD PTR [ebx+0x4]
   12da1:	mov    DWORD PTR [eax],esi
   12da3:	mov    eax,DWORD PTR [edi+0x8]
   12da6:	mov    DWORD PTR [ebx+0x8],eax
   12da9:	mov    eax,DWORD PTR [edi+0x8]
   12dac:	mov    DWORD PTR [eax+0x4],ebx
   12daf:	mov    eax,DWORD PTR [ebp-0x4]
   12db2:	mov    eax,DWORD PTR [eax+0x4]
   12db5:	cmp    DWORD PTR [eax+0x4],edi
   12db8:	jne    0x12dbf
   12dba:	mov    DWORD PTR [eax+0x4],ebx
   12dbd:	jmp    0x12dcd
   12dbf:	mov    eax,DWORD PTR [edi+0x4]
   12dc2:	cmp    DWORD PTR [eax],edi
   12dc4:	jne    0x12dca
   12dc6:	mov    DWORD PTR [eax],ebx
   12dc8:	jmp    0x12dcd
   12dca:	mov    DWORD PTR [eax+0x8],ebx
   12dcd:	mov    eax,DWORD PTR [edi+0x4]
   12dd0:	mov    DWORD PTR [ebx+0x4],eax
   12dd3:	mov    eax,DWORD PTR [ebx+0x14]
   12dd6:	mov    ecx,DWORD PTR [edi+0x14]
   12dd9:	mov    DWORD PTR [ebx+0x14],ecx
   12ddc:	mov    DWORD PTR [edi+0x14],eax
   12ddf:	mov    ebx,edi
   12de1:	jmp    0x12e44
   12de3:	mov    eax,DWORD PTR [edi+0x4]
   12de6:	cmp    DWORD PTR [eax],edi
   12de8:	jne    0x12dee
   12dea:	mov    DWORD PTR [eax],esi
   12dec:	jmp    0x12df1
   12dee:	mov    DWORD PTR [eax+0x8],esi
   12df1:	mov    eax,DWORD PTR [ecx+0x4]
   12df4:	mov    DWORD PTR [ebp-0x8],eax
   12df7:	cmp    DWORD PTR [eax],edi
   12df9:	jne    0x12e1b
   12dfb:	mov    edx,DWORD PTR [edi+0x8]
   12dfe:	cmp    edx,DWORD PTR ds:0x70c88
   12e04:	jne    0x12e0d
   12e06:	mov    edx,DWORD PTR [edi+0x4]
   12e09:	mov    DWORD PTR [eax],edx
   12e0b:	jmp    0x12e1b
   12e0d:	push   esi
   12e0e:	call   0x113c4
   12e13:	mov    ecx,DWORD PTR [ebp-0x8]
   12e16:	mov    DWORD PTR [ecx],eax
   12e18:	mov    ecx,DWORD PTR [ebp-0x4]
   12e1b:	mov    eax,DWORD PTR [ecx+0x4]
   12e1e:	mov    DWORD PTR [ebp-0x8],eax
   12e21:	cmp    DWORD PTR [eax+0x8],edi
   12e24:	jne    0x12e44
   12e26:	mov    ecx,DWORD PTR [edi]
   12e28:	cmp    ecx,DWORD PTR ds:0x70c88
   12e2e:	jne    0x12e38
   12e30:	mov    ecx,DWORD PTR [edi+0x4]
   12e33:	mov    DWORD PTR [eax+0x8],ecx
   12e36:	jmp    0x12e44
   12e38:	push   esi
   12e39:	call   0x113a2
   12e3e:	mov    ecx,DWORD PTR [ebp-0x8]
   12e41:	mov    DWORD PTR [ecx+0x8],eax
   12e44:	xor    edi,edi
   12e46:	inc    edi
   12e47:	cmp    DWORD PTR [ebx+0x14],edi
   12e4a:	jne    0x12f61
   12e50:	jmp    0x12f0f
   12e55:	cmp    DWORD PTR [esi+0x14],edi
   12e58:	jne    0x12f5e
   12e5e:	mov    eax,DWORD PTR [esi+0x4]
   12e61:	cmp    esi,DWORD PTR [eax]
   12e63:	jne    0x12eda
   12e65:	mov    eax,DWORD PTR [eax+0x8]
   12e68:	cmp    DWORD PTR [eax+0x14],0x0
   12e6c:	jne    0x12e86
   12e6e:	mov    DWORD PTR [eax+0x14],edi
   12e71:	mov    eax,DWORD PTR [esi+0x4]
   12e74:	and    DWORD PTR [eax+0x14],0x0
   12e78:	push   DWORD PTR [esi+0x4]
   12e7b:	call   0x12252
   12e80:	mov    eax,DWORD PTR [esi+0x4]
   12e83:	mov    eax,DWORD PTR [eax+0x8]
   12e86:	mov    ecx,DWORD PTR [eax]
   12e88:	cmp    DWORD PTR [ecx+0x14],edi
   12e8b:	jne    0x12e95
   12e8d:	mov    ecx,DWORD PTR [eax+0x8]
   12e90:	cmp    DWORD PTR [ecx+0x14],edi
   12e93:	je     0x12f08
   12e95:	mov    ecx,DWORD PTR [eax+0x8]
   12e98:	cmp    DWORD PTR [ecx+0x14],edi
   12e9b:	jne    0x12eb5
   12e9d:	mov    ecx,DWORD PTR [eax]
   12e9f:	mov    DWORD PTR [ecx+0x14],edi
   12ea2:	mov    ecx,DWORD PTR [ebp-0x4]
   12ea5:	and    DWORD PTR [eax+0x14],0x0
   12ea9:	push   eax
   12eaa:	call   0x122a0
   12eaf:	mov    eax,DWORD PTR [esi+0x4]
   12eb2:	mov    eax,DWORD PTR [eax+0x8]
   12eb5:	mov    ecx,DWORD PTR [esi+0x4]
   12eb8:	mov    ecx,DWORD PTR [ecx+0x14]
   12ebb:	mov    DWORD PTR [eax+0x14],ecx
   12ebe:	mov    ecx,DWORD PTR [esi+0x4]
   12ec1:	mov    DWORD PTR [ecx+0x14],edi
   12ec4:	mov    eax,DWORD PTR [eax+0x8]
   12ec7:	mov    ecx,DWORD PTR [ebp-0x4]
   12eca:	mov    DWORD PTR [eax+0x14],edi
   12ecd:	push   DWORD PTR [esi+0x4]
   12ed0:	call   0x12252
   12ed5:	jmp    0x12f5e
   12eda:	mov    eax,DWORD PTR [eax]
   12edc:	cmp    DWORD PTR [eax+0x14],0x0
   12ee0:	jne    0x12ef9
   12ee2:	mov    DWORD PTR [eax+0x14],edi
   12ee5:	mov    eax,DWORD PTR [esi+0x4]
   12ee8:	and    DWORD PTR [eax+0x14],0x0
   12eec:	push   DWORD PTR [esi+0x4]
   12eef:	call   0x122a0
   12ef4:	mov    eax,DWORD PTR [esi+0x4]
   12ef7:	mov    eax,DWORD PTR [eax]
   12ef9:	mov    ecx,DWORD PTR [eax+0x8]
   12efc:	cmp    DWORD PTR [ecx+0x14],edi
   12eff:	jne    0x12f20
   12f01:	mov    ecx,DWORD PTR [eax]
   12f03:	cmp    DWORD PTR [ecx+0x14],edi
   12f06:	jne    0x12f20
   12f08:	and    DWORD PTR [eax+0x14],0x0
   12f0c:	mov    esi,DWORD PTR [esi+0x4]
   12f0f:	mov    ecx,DWORD PTR [ebp-0x4]
   12f12:	mov    eax,DWORD PTR [ecx+0x4]
   12f15:	cmp    esi,DWORD PTR [eax+0x4]
   12f18:	jne    0x12e55
   12f1e:	jmp    0x12f5e
   12f20:	mov    ecx,DWORD PTR [eax]
   12f22:	cmp    DWORD PTR [ecx+0x14],edi
   12f25:	jne    0x12f3f
   12f27:	mov    ecx,DWORD PTR [eax+0x8]
   12f2a:	mov    DWORD PTR [ecx+0x14],edi
   12f2d:	mov    ecx,DWORD PTR [ebp-0x4]
   12f30:	and    DWORD PTR [eax+0x14],0x0
   12f34:	push   eax
   12f35:	call   0x12252
   12f3a:	mov    eax,DWORD PTR [esi+0x4]
   12f3d:	mov    eax,DWORD PTR [eax]
   12f3f:	mov    ecx,DWORD PTR [esi+0x4]
   12f42:	mov    ecx,DWORD PTR [ecx+0x14]
   12f45:	mov    DWORD PTR [eax+0x14],ecx
   12f48:	mov    ecx,DWORD PTR [esi+0x4]
   12f4b:	mov    DWORD PTR [ecx+0x14],edi
   12f4e:	mov    eax,DWORD PTR [eax]
   12f50:	mov    ecx,DWORD PTR [ebp-0x4]
   12f53:	mov    DWORD PTR [eax+0x14],edi
   12f56:	push   DWORD PTR [esi+0x4]
   12f59:	call   0x122a0
   12f5e:	mov    DWORD PTR [esi+0x14],edi
   12f61:	push   ebx
   12f62:	call   0x10832
   12f67:	mov    eax,DWORD PTR [ebp-0x4]
   12f6a:	dec    DWORD PTR [eax+0xc]
   12f6d:	mov    eax,DWORD PTR [ebp+0x8]
   12f70:	pop    ecx
   12f71:	mov    ecx,DWORD PTR [ebp+0xc]
   12f74:	pop    edi
   12f75:	pop    esi
   12f76:	mov    DWORD PTR [eax],ecx
   12f78:	pop    ebx
   12f79:	leave  
   12f7a:	ret    0x8
   12f7d:	int3   
   12f7e:	int3   
   12f7f:	int3   
   12f80:	int3   
   12f81:	int3   
   12f82:	mov    edi,edi
   12f84:	push   ebp
   12f85:	mov    ebp,esp
   12f87:	push   esi
   12f88:	push   edi
   12f89:	push   DWORD PTR [ebp+0xc]
   12f8c:	mov    edi,ecx
   12f8e:	call   0x123a8
   12f93:	push   DWORD PTR [ebp+0xc]
   12f96:	mov    ecx,edi
   12f98:	mov    esi,eax
   12f9a:	call   0x1221a
   12f9f:	mov    ecx,DWORD PTR [ebp+0x8]
   12fa2:	pop    edi
   12fa3:	mov    DWORD PTR [ecx],eax
   12fa5:	mov    DWORD PTR [ecx+0x4],esi
   12fa8:	mov    eax,ecx
   12faa:	pop    esi
   12fab:	pop    ebp
   12fac:	ret    0x8
   12faf:	int3   
   12fb0:	int3   
   12fb1:	int3   
   12fb2:	int3   
   12fb3:	int3   
   12fb4:	mov    edi,edi
   12fb6:	push   esi
   12fb7:	push   edi
   12fb8:	push   0x1
   12fba:	xor    edi,edi
   12fbc:	push   edi
   12fbd:	mov    esi,ecx
   12fbf:	call   0x12a6c
   12fc4:	cmp    DWORD PTR ds:0x70c88,edi
   12fca:	jne    0x12fe1
   12fcc:	mov    ecx,eax
   12fce:	mov    DWORD PTR ds:0x70c88,ecx
   12fd4:	mov    DWORD PTR [ecx],edi
   12fd6:	mov    ecx,DWORD PTR ds:0x70c88
   12fdc:	xor    eax,eax
   12fde:	mov    DWORD PTR [ecx+0x8],edi
   12fe1:	inc    DWORD PTR ds:0x70ca4
   12fe7:	cmp    eax,edi
   12fe9:	je     0x12ff2
   12feb:	push   eax
   12fec:	call   0x10832
   12ff1:	pop    ecx
   12ff2:	push   edi
   12ff3:	push   DWORD PTR ds:0x70c88
   12ff9:	mov    ecx,esi
   12ffb:	call   0x12a6c
   13000:	mov    DWORD PTR [esi+0xc],edi
   13003:	mov    DWORD PTR [esi+0x4],eax
   13006:	mov    DWORD PTR [eax],eax
   13008:	mov    esi,DWORD PTR [esi+0x4]
   1300b:	pop    edi
   1300c:	mov    DWORD PTR [esi+0x8],esi
   1300f:	pop    esi
   13010:	ret    
   13011:	int3   
   13012:	int3   
   13013:	int3   
   13014:	int3   
   13015:	int3   
   13016:	mov    edi,edi
   13018:	push   ebp
   13019:	mov    ebp,esp
   1301b:	push   esi
   1301c:	push   edi
   1301d:	push   DWORD PTR [ebp+0xc]
   13020:	mov    edi,ecx
   13022:	call   0x123e0
   13027:	push   DWORD PTR [ebp+0xc]
   1302a:	mov    ecx,edi
   1302c:	mov    esi,eax
   1302e:	call   0x122f0
   13033:	mov    ecx,DWORD PTR [ebp+0x8]
   13036:	pop    edi
   13037:	mov    DWORD PTR [ecx],eax
   13039:	mov    DWORD PTR [ecx+0x4],esi
   1303c:	mov    eax,ecx
   1303e:	pop    esi
   1303f:	pop    ebp
   13040:	ret    0x8
   13043:	int3   
   13044:	int3   
   13045:	int3   
   13046:	int3   
   13047:	int3   
   13048:	mov    edi,edi
   1304a:	push   esi
   1304b:	push   edi
   1304c:	push   0x1
   1304e:	xor    edi,edi
   13050:	push   edi
   13051:	mov    esi,ecx
   13053:	call   0x12a90
   13058:	cmp    DWORD PTR ds:0x70c90,edi
   1305e:	jne    0x13075
   13060:	mov    ecx,eax
   13062:	mov    DWORD PTR ds:0x70c90,ecx
   13068:	mov    DWORD PTR [ecx],edi
   1306a:	mov    ecx,DWORD PTR ds:0x70c90
   13070:	xor    eax,eax
   13072:	mov    DWORD PTR [ecx+0x8],edi
   13075:	inc    DWORD PTR ds:0x70ca8
   1307b:	cmp    eax,edi
   1307d:	je     0x13086
   1307f:	push   eax
   13080:	call   0x10832
   13085:	pop    ecx
   13086:	push   edi
   13087:	push   DWORD PTR ds:0x70c90
   1308d:	mov    ecx,esi
   1308f:	call   0x12a90
   13094:	mov    DWORD PTR [esi+0xc],edi
   13097:	mov    DWORD PTR [esi+0x4],eax
   1309a:	mov    DWORD PTR [eax],eax
   1309c:	mov    esi,DWORD PTR [esi+0x4]
   1309f:	pop    edi
   130a0:	mov    DWORD PTR [esi+0x8],esi
   130a3:	pop    esi
   130a4:	ret    
   130a5:	int3   
   130a6:	int3   
   130a7:	int3   
   130a8:	int3   
   130a9:	int3   
   130aa:	mov    edi,edi
   130ac:	push   ebp
   130ad:	mov    ebp,esp
   130af:	push   esi
   130b0:	push   edi
   130b1:	push   DWORD PTR [ebp+0xc]
   130b4:	mov    edi,ecx
   130b6:	call   0x124be
   130bb:	push   DWORD PTR [ebp+0xc]
   130be:	mov    ecx,edi
   130c0:	mov    esi,eax
   130c2:	call   0x12330
   130c7:	mov    ecx,DWORD PTR [ebp+0x8]
   130ca:	pop    edi
   130cb:	mov    DWORD PTR [ecx],eax
   130cd:	mov    DWORD PTR [ecx+0x4],esi
   130d0:	mov    eax,ecx
   130d2:	pop    esi
   130d3:	pop    ebp
   130d4:	ret    0x8
   130d7:	int3   
   130d8:	int3   
   130d9:	int3   
   130da:	int3   
   130db:	int3   
   130dc:	mov    edi,edi
   130de:	push   esi
   130df:	push   edi
   130e0:	push   0x1
   130e2:	xor    edi,edi
   130e4:	push   edi
   130e5:	mov    esi,ecx
   130e7:	call   0x12ab4
   130ec:	cmp    DWORD PTR ds:0x70c94,edi
   130f2:	jne    0x13109
   130f4:	mov    ecx,eax
   130f6:	mov    DWORD PTR ds:0x70c94,ecx
   130fc:	mov    DWORD PTR [ecx],edi
   130fe:	mov    ecx,DWORD PTR ds:0x70c94
   13104:	xor    eax,eax
   13106:	mov    DWORD PTR [ecx+0x8],edi
   13109:	inc    DWORD PTR ds:0x70cac
   1310f:	cmp    eax,edi
   13111:	je     0x1311a
   13113:	push   eax
   13114:	call   0x10832
   13119:	pop    ecx
   1311a:	push   edi
   1311b:	push   DWORD PTR ds:0x70c94
   13121:	mov    ecx,esi
   13123:	call   0x12ab4
   13128:	mov    DWORD PTR [esi+0xc],edi
   1312b:	mov    DWORD PTR [esi+0x4],eax
   1312e:	mov    DWORD PTR [eax],eax
   13130:	mov    esi,DWORD PTR [esi+0x4]
   13133:	pop    edi
   13134:	mov    DWORD PTR [esi+0x8],esi
   13137:	pop    esi
   13138:	ret    
   13139:	int3   
   1313a:	int3   
   1313b:	int3   
   1313c:	int3   
   1313d:	int3   
   1313e:	mov    edi,edi
   13140:	push   ebp
   13141:	mov    ebp,esp
   13143:	push   esi
   13144:	push   edi
   13145:	push   DWORD PTR [ebp+0xc]
   13148:	mov    edi,ecx
   1314a:	call   0x1259c
   1314f:	push   DWORD PTR [ebp+0xc]
   13152:	mov    ecx,edi
   13154:	mov    esi,eax
   13156:	call   0x12370
   1315b:	mov    ecx,DWORD PTR [ebp+0x8]
   1315e:	pop    edi
   1315f:	mov    DWORD PTR [ecx],eax
   13161:	mov    DWORD PTR [ecx+0x4],esi
   13164:	mov    eax,ecx
   13166:	pop    esi
   13167:	pop    ebp
   13168:	ret    0x8
   1316b:	int3   
   1316c:	int3   
   1316d:	int3   
   1316e:	int3   
   1316f:	int3   
   13170:	mov    edi,edi
   13172:	push   esi
   13173:	push   edi
   13174:	push   0x1
   13176:	xor    edi,edi
   13178:	push   edi
   13179:	mov    esi,ecx
   1317b:	call   0x12a6c
   13180:	cmp    DWORD PTR ds:0x70c98,edi
   13186:	jne    0x1319d
   13188:	mov    ecx,eax
   1318a:	mov    DWORD PTR ds:0x70c98,ecx
   13190:	mov    DWORD PTR [ecx],edi
   13192:	mov    ecx,DWORD PTR ds:0x70c98
   13198:	xor    eax,eax
   1319a:	mov    DWORD PTR [ecx+0x8],edi
   1319d:	inc    DWORD PTR ds:0x70cb0
   131a3:	cmp    eax,edi
   131a5:	je     0x131ae
   131a7:	push   eax
   131a8:	call   0x10832
   131ad:	pop    ecx
   131ae:	push   edi
   131af:	push   DWORD PTR ds:0x70c98
   131b5:	mov    ecx,esi
   131b7:	call   0x12a6c
   131bc:	mov    DWORD PTR [esi+0xc],edi
   131bf:	mov    DWORD PTR [esi+0x4],eax
   131c2:	mov    DWORD PTR [eax],eax
   131c4:	mov    esi,DWORD PTR [esi+0x4]
   131c7:	pop    edi
   131c8:	mov    DWORD PTR [esi+0x8],esi
   131cb:	pop    esi
   131cc:	ret    
   131cd:	int3   
   131ce:	int3   
   131cf:	int3   
   131d0:	int3   
   131d1:	int3   
   131d2:	mov    edi,edi
   131d4:	push   ebp
   131d5:	mov    ebp,esp
   131d7:	push   ecx
   131d8:	push   esi
   131d9:	push   DWORD PTR [ebp+0xc]
   131dc:	mov    esi,ecx
   131de:	call   0x125d4
   131e3:	mov    DWORD PTR [ebp-0x4],eax
   131e6:	cmp    eax,DWORD PTR [esi+0x4]
   131e9:	je     0x13200
   131eb:	add    eax,0xc
   131ee:	push   eax
   131ef:	push   DWORD PTR [ebp+0xc]
   131f2:	call   0x17b34
   131f7:	test   al,al
   131f9:	jne    0x13200
   131fb:	lea    eax,[ebp-0x4]
   131fe:	jmp    0x13209
   13200:	mov    eax,DWORD PTR [esi+0x4]
   13203:	mov    DWORD PTR [ebp+0xc],eax
   13206:	lea    eax,[ebp+0xc]
   13209:	mov    ecx,DWORD PTR [eax]
   1320b:	mov    eax,DWORD PTR [ebp+0x8]
   1320e:	mov    DWORD PTR [eax],ecx
   13210:	pop    esi
   13211:	leave  
   13212:	ret    0x8
   13215:	int3   
   13216:	int3   
   13217:	int3   
   13218:	int3   
   13219:	int3   
   1321a:	mov    edi,edi
   1321c:	push   esi
   1321d:	push   edi
   1321e:	push   0x1
   13220:	xor    edi,edi
   13222:	push   edi
   13223:	mov    esi,ecx
   13225:	call   0x12ad8
   1322a:	cmp    DWORD PTR ds:0x70c8c,edi
   13230:	jne    0x13247
   13232:	mov    ecx,eax
   13234:	mov    DWORD PTR ds:0x70c8c,ecx
   1323a:	mov    DWORD PTR [ecx],edi
   1323c:	mov    ecx,DWORD PTR ds:0x70c8c
   13242:	xor    eax,eax
   13244:	mov    DWORD PTR [ecx+0x8],edi
   13247:	inc    DWORD PTR ds:0x70cb4
   1324d:	cmp    eax,edi
   1324f:	je     0x13258
   13251:	push   eax
   13252:	call   0x10832
   13257:	pop    ecx
   13258:	push   edi
   13259:	push   DWORD PTR ds:0x70c8c
   1325f:	mov    ecx,esi
   13261:	call   0x12ad8
   13266:	mov    DWORD PTR [esi+0xc],edi
   13269:	mov    DWORD PTR [esi+0x4],eax
   1326c:	mov    DWORD PTR [eax],eax
   1326e:	mov    esi,DWORD PTR [esi+0x4]
   13271:	pop    edi
   13272:	mov    DWORD PTR [esi+0x8],esi
   13275:	pop    esi
   13276:	ret    
   13277:	int3   
   13278:	int3   
   13279:	int3   
   1327a:	int3   
   1327b:	int3   
   1327c:	mov    edi,edi
   1327e:	push   ebp
   1327f:	mov    ebp,esp
   13281:	push   ebx
   13282:	push   esi
   13283:	mov    esi,DWORD PTR [ebp+0x10]
   13286:	push   edi
   13287:	push   0x0
   13289:	push   esi
   1328a:	mov    edi,ecx
   1328c:	call   0x12a6c
   13291:	push   DWORD PTR [ebp+0x14]
   13294:	mov    ebx,eax
   13296:	mov    eax,ds:0x70c88
   1329b:	mov    DWORD PTR [ebx],eax
   1329d:	mov    eax,ds:0x70c88
   132a2:	mov    DWORD PTR [ebx+0x8],eax
   132a5:	lea    eax,[ebx+0xc]
   132a8:	push   eax
   132a9:	call   0x11750
   132ae:	inc    DWORD PTR [edi+0xc]
   132b1:	cmp    esi,DWORD PTR [edi+0x4]
   132b4:	je     0x132d8
   132b6:	mov    eax,DWORD PTR [ebp+0xc]
   132b9:	cmp    eax,DWORD PTR ds:0x70c88
   132bf:	jne    0x132d8
   132c1:	mov    eax,DWORD PTR [ebp+0x14]
   132c4:	mov    eax,DWORD PTR [eax]
   132c6:	cmp    eax,DWORD PTR [esi+0xc]
   132c9:	jb     0x132d8
   132cb:	mov    DWORD PTR [esi+0x8],ebx
   132ce:	mov    eax,DWORD PTR [edi+0x4]
   132d1:	cmp    esi,DWORD PTR [eax+0x8]
   132d4:	jne    0x132f2
   132d6:	jmp    0x132e7
   132d8:	mov    DWORD PTR [esi],ebx
   132da:	mov    eax,DWORD PTR [edi+0x4]
   132dd:	cmp    esi,eax
   132df:	jne    0x132ec
   132e1:	mov    DWORD PTR [eax+0x4],ebx
   132e4:	mov    eax,DWORD PTR [edi+0x4]
   132e7:	mov    DWORD PTR [eax+0x8],ebx
   132ea:	jmp    0x132f2
   132ec:	cmp    esi,DWORD PTR [eax]
   132ee:	jne    0x132f2
   132f0:	mov    DWORD PTR [eax],ebx
   132f2:	mov    eax,DWORD PTR [edi+0x4]
   132f5:	mov    esi,ebx
   132f7:	cmp    ebx,DWORD PTR [eax+0x4]
   132fa:	je     0x133ae
   13300:	mov    eax,DWORD PTR [esi+0x4]
   13303:	xor    edx,edx
   13305:	cmp    DWORD PTR [eax+0x14],edx
   13308:	jne    0x133ae
   1330e:	mov    ecx,DWORD PTR [eax+0x4]
   13311:	cmp    eax,DWORD PTR [ecx]
   13313:	jne    0x1334f
   13315:	mov    ecx,DWORD PTR [ecx+0x8]
   13318:	cmp    DWORD PTR [ecx+0x14],edx
   1331b:	je     0x13356
   1331d:	cmp    esi,DWORD PTR [eax+0x8]
   13320:	jne    0x1332c
   13322:	mov    esi,eax
   13324:	push   esi
   13325:	mov    ecx,edi
   13327:	call   0x12252
   1332c:	mov    eax,DWORD PTR [esi+0x4]
   1332f:	mov    DWORD PTR [eax+0x14],0x1
   13336:	mov    eax,DWORD PTR [esi+0x4]
   13339:	mov    eax,DWORD PTR [eax+0x4]
   1333c:	and    DWORD PTR [eax+0x14],0x0
   13340:	mov    eax,DWORD PTR [esi+0x4]
   13343:	push   DWORD PTR [eax+0x4]
   13346:	mov    ecx,edi
   13348:	call   0x122a0
   1334d:	jmp    0x133a2
   1334f:	mov    ecx,DWORD PTR [ecx]
   13351:	cmp    DWORD PTR [ecx+0x14],edx
   13354:	jne    0x13373
   13356:	mov    edx,eax
   13358:	xor    eax,eax
   1335a:	inc    eax
   1335b:	mov    DWORD PTR [edx+0x14],eax
   1335e:	mov    DWORD PTR [ecx+0x14],eax
   13361:	mov    eax,DWORD PTR [esi+0x4]
   13364:	mov    eax,DWORD PTR [eax+0x4]
   13367:	and    DWORD PTR [eax+0x14],0x0
   1336b:	mov    eax,DWORD PTR [esi+0x4]
   1336e:	mov    esi,DWORD PTR [eax+0x4]
   13371:	jmp    0x133a2
   13373:	cmp    esi,DWORD PTR [eax]
   13375:	jne    0x13381
   13377:	mov    esi,eax
   13379:	push   esi
   1337a:	mov    ecx,edi
   1337c:	call   0x122a0
   13381:	mov    eax,DWORD PTR [esi+0x4]
   13384:	mov    DWORD PTR [eax+0x14],0x1
   1338b:	mov    eax,DWORD PTR [esi+0x4]
   1338e:	mov    eax,DWORD PTR [eax+0x4]
   13391:	and    DWORD PTR [eax+0x14],0x0
   13395:	mov    eax,DWORD PTR [esi+0x4]
   13398:	push   DWORD PTR [eax+0x4]
   1339b:	mov    ecx,edi
   1339d:	call   0x12252
   133a2:	mov    eax,DWORD PTR [edi+0x4]
   133a5:	cmp    esi,DWORD PTR [eax+0x4]
   133a8:	jne    0x13300
   133ae:	mov    eax,DWORD PTR [edi+0x4]
   133b1:	mov    eax,DWORD PTR [eax+0x4]
   133b4:	pop    edi
   133b5:	mov    DWORD PTR [eax+0x14],0x1
   133bc:	mov    eax,DWORD PTR [ebp+0x8]
   133bf:	pop    esi
   133c0:	mov    DWORD PTR [eax],ebx
   133c2:	pop    ebx
   133c3:	pop    ebp
   133c4:	ret    0x10
   133c7:	int3   
   133c8:	int3   
   133c9:	int3   
   133ca:	int3   
   133cb:	int3   
   133cc:	mov    edi,edi
   133ce:	push   ebp
   133cf:	mov    ebp,esp
   133d1:	push   ebx
   133d2:	push   esi
   133d3:	push   edi
   133d4:	mov    edi,DWORD PTR [ebp+0x8]
   133d7:	mov    ebx,ecx
   133d9:	mov    esi,edi
   133db:	cmp    edi,DWORD PTR ds:0x70c90
   133e1:	je     0x13409
   133e3:	push   DWORD PTR [esi+0x8]
   133e6:	mov    ecx,ebx
   133e8:	call   0x133cc
   133ed:	mov    esi,DWORD PTR [esi]
   133ef:	lea    eax,[edi+0x10]
   133f2:	push   eax
   133f3:	call   0x126f2
   133f8:	push   edi
   133f9:	call   0x10832
   133fe:	pop    ecx
   133ff:	mov    edi,esi
   13401:	cmp    esi,DWORD PTR ds:0x70c90
   13407:	jne    0x133e3
   13409:	pop    edi
   1340a:	pop    esi
   1340b:	pop    ebx
   1340c:	pop    ebp
   1340d:	ret    0x4
   13410:	int3   
   13411:	int3   
   13412:	int3   
   13413:	int3   
   13414:	int3   
   13415:	int3   
   13416:	mov    edi,edi
   13418:	push   ebp
   13419:	mov    ebp,esp
   1341b:	push   ecx
   1341c:	push   ecx
   1341d:	push   ebx
   1341e:	push   esi
   1341f:	mov    DWORD PTR [ebp-0x4],ecx
   13422:	push   edi
   13423:	mov    edi,DWORD PTR [ebp+0xc]
   13426:	lea    ecx,[ebp+0xc]
   13429:	call   0x11664
   1342e:	mov    esi,DWORD PTR [edi]
   13430:	mov    eax,ds:0x70c94
   13435:	mov    ebx,edi
   13437:	mov    DWORD PTR [ebp-0x8],esi
   1343a:	cmp    esi,eax
   1343c:	jne    0x1345a
   1343e:	mov    esi,DWORD PTR [edi+0x8]
   13441:	mov    eax,DWORD PTR [ebx+0x4]
   13444:	mov    ecx,DWORD PTR [ebp-0x4]
   13447:	mov    DWORD PTR [esi+0x4],eax
   1344a:	mov    eax,DWORD PTR [ecx+0x4]
   1344d:	cmp    DWORD PTR [eax+0x4],edi
   13450:	jne    0x134cf
   13452:	mov    DWORD PTR [eax+0x4],esi
   13455:	jmp    0x134dd
   1345a:	mov    ecx,DWORD PTR [edi+0x8]
   1345d:	cmp    ecx,eax
   1345f:	je     0x13441
   13461:	push   ecx
   13462:	call   0x1157e
   13467:	mov    ebx,eax
   13469:	mov    esi,DWORD PTR [ebx+0x8]
   1346c:	cmp    ebx,edi
   1346e:	je     0x13441
   13470:	mov    eax,DWORD PTR [ebp-0x8]
   13473:	mov    DWORD PTR [eax+0x4],ebx
   13476:	mov    eax,DWORD PTR [edi]
   13478:	mov    DWORD PTR [ebx],eax
   1347a:	cmp    ebx,DWORD PTR [edi+0x8]
   1347d:	jne    0x13484
   1347f:	mov    DWORD PTR [esi+0x4],ebx
   13482:	jmp    0x1349b
   13484:	mov    eax,DWORD PTR [ebx+0x4]
   13487:	mov    DWORD PTR [esi+0x4],eax
   1348a:	mov    eax,DWORD PTR [ebx+0x4]
   1348d:	mov    DWORD PTR [eax],esi
   1348f:	mov    eax,DWORD PTR [edi+0x8]
   13492:	mov    DWORD PTR [ebx+0x8],eax
   13495:	mov    eax,DWORD PTR [edi+0x8]
   13498:	mov    DWORD PTR [eax+0x4],ebx
   1349b:	mov    eax,DWORD PTR [ebp-0x4]
   1349e:	mov    eax,DWORD PTR [eax+0x4]
   134a1:	cmp    DWORD PTR [eax+0x4],edi
   134a4:	jne    0x134ab
   134a6:	mov    DWORD PTR [eax+0x4],ebx
   134a9:	jmp    0x134b9
   134ab:	mov    eax,DWORD PTR [edi+0x4]
   134ae:	cmp    DWORD PTR [eax],edi
   134b0:	jne    0x134b6
   134b2:	mov    DWORD PTR [eax],ebx
   134b4:	jmp    0x134b9
   134b6:	mov    DWORD PTR [eax+0x8],ebx
   134b9:	mov    eax,DWORD PTR [edi+0x4]
   134bc:	mov    DWORD PTR [ebx+0x4],eax
   134bf:	mov    eax,DWORD PTR [ebx+0x1c]
   134c2:	mov    ecx,DWORD PTR [edi+0x1c]
   134c5:	mov    DWORD PTR [ebx+0x1c],ecx
   134c8:	mov    DWORD PTR [edi+0x1c],eax
   134cb:	mov    ebx,edi
   134cd:	jmp    0x13530
   134cf:	mov    eax,DWORD PTR [edi+0x4]
   134d2:	cmp    DWORD PTR [eax],edi
   134d4:	jne    0x134da
   134d6:	mov    DWORD PTR [eax],esi
   134d8:	jmp    0x134dd
   134da:	mov    DWORD PTR [eax+0x8],esi
   134dd:	mov    eax,DWORD PTR [ecx+0x4]
   134e0:	mov    DWORD PTR [ebp-0x8],eax
   134e3:	cmp    DWORD PTR [eax],edi
   134e5:	jne    0x13507
   134e7:	mov    edx,DWORD PTR [edi+0x8]
   134ea:	cmp    edx,DWORD PTR ds:0x70c94
   134f0:	jne    0x134f9
   134f2:	mov    edx,DWORD PTR [edi+0x4]
   134f5:	mov    DWORD PTR [eax],edx
   134f7:	jmp    0x13507
   134f9:	push   esi
   134fa:	call   0x1157e
   134ff:	mov    ecx,DWORD PTR [ebp-0x8]
   13502:	mov    DWORD PTR [ecx],eax
   13504:	mov    ecx,DWORD PTR [ebp-0x4]
   13507:	mov    eax,DWORD PTR [ecx+0x4]
   1350a:	mov    DWORD PTR [ebp-0x8],eax
   1350d:	cmp    DWORD PTR [eax+0x8],edi
   13510:	jne    0x13530
   13512:	mov    ecx,DWORD PTR [edi]
   13514:	cmp    ecx,DWORD PTR ds:0x70c94
   1351a:	jne    0x13524
   1351c:	mov    ecx,DWORD PTR [edi+0x4]
   1351f:	mov    DWORD PTR [eax+0x8],ecx
   13522:	jmp    0x13530
   13524:	push   esi
   13525:	call   0x1155c
   1352a:	mov    ecx,DWORD PTR [ebp-0x8]
   1352d:	mov    DWORD PTR [ecx+0x8],eax
   13530:	xor    edi,edi
   13532:	inc    edi
   13533:	cmp    DWORD PTR [ebx+0x1c],edi
   13536:	jne    0x1364d
   1353c:	jmp    0x135fb
   13541:	cmp    DWORD PTR [esi+0x1c],edi
   13544:	jne    0x1364a
   1354a:	mov    eax,DWORD PTR [esi+0x4]
   1354d:	cmp    esi,DWORD PTR [eax]
   1354f:	jne    0x135c6
   13551:	mov    eax,DWORD PTR [eax+0x8]
   13554:	cmp    DWORD PTR [eax+0x1c],0x0
   13558:	jne    0x13572
   1355a:	mov    DWORD PTR [eax+0x1c],edi
   1355d:	mov    eax,DWORD PTR [esi+0x4]
   13560:	and    DWORD PTR [eax+0x1c],0x0
   13564:	push   DWORD PTR [esi+0x4]
   13567:	call   0x12420
   1356c:	mov    eax,DWORD PTR [esi+0x4]
   1356f:	mov    eax,DWORD PTR [eax+0x8]
   13572:	mov    ecx,DWORD PTR [eax]
   13574:	cmp    DWORD PTR [ecx+0x1c],edi
   13577:	jne    0x13581
   13579:	mov    ecx,DWORD PTR [eax+0x8]
   1357c:	cmp    DWORD PTR [ecx+0x1c],edi
   1357f:	je     0x135f4
   13581:	mov    ecx,DWORD PTR [eax+0x8]
   13584:	cmp    DWORD PTR [ecx+0x1c],edi
   13587:	jne    0x135a1
   13589:	mov    ecx,DWORD PTR [eax]
   1358b:	mov    DWORD PTR [ecx+0x1c],edi
   1358e:	mov    ecx,DWORD PTR [ebp-0x4]
   13591:	and    DWORD PTR [eax+0x1c],0x0
   13595:	push   eax
   13596:	call   0x1246e
   1359b:	mov    eax,DWORD PTR [esi+0x4]
   1359e:	mov    eax,DWORD PTR [eax+0x8]
   135a1:	mov    ecx,DWORD PTR [esi+0x4]
   135a4:	mov    ecx,DWORD PTR [ecx+0x1c]
   135a7:	mov    DWORD PTR [eax+0x1c],ecx
   135aa:	mov    ecx,DWORD PTR [esi+0x4]
   135ad:	mov    DWORD PTR [ecx+0x1c],edi
   135b0:	mov    eax,DWORD PTR [eax+0x8]
   135b3:	mov    ecx,DWORD PTR [ebp-0x4]
   135b6:	mov    DWORD PTR [eax+0x1c],edi
   135b9:	push   DWORD PTR [esi+0x4]
   135bc:	call   0x12420
   135c1:	jmp    0x1364a
   135c6:	mov    eax,DWORD PTR [eax]
   135c8:	cmp    DWORD PTR [eax+0x1c],0x0
   135cc:	jne    0x135e5
   135ce:	mov    DWORD PTR [eax+0x1c],edi
   135d1:	mov    eax,DWORD PTR [esi+0x4]
   135d4:	and    DWORD PTR [eax+0x1c],0x0
   135d8:	push   DWORD PTR [esi+0x4]
   135db:	call   0x1246e
   135e0:	mov    eax,DWORD PTR [esi+0x4]
   135e3:	mov    eax,DWORD PTR [eax]
   135e5:	mov    ecx,DWORD PTR [eax+0x8]
   135e8:	cmp    DWORD PTR [ecx+0x1c],edi
   135eb:	jne    0x1360c
   135ed:	mov    ecx,DWORD PTR [eax]
   135ef:	cmp    DWORD PTR [ecx+0x1c],edi
   135f2:	jne    0x1360c
   135f4:	and    DWORD PTR [eax+0x1c],0x0
   135f8:	mov    esi,DWORD PTR [esi+0x4]
   135fb:	mov    ecx,DWORD PTR [ebp-0x4]
   135fe:	mov    eax,DWORD PTR [ecx+0x4]
   13601:	cmp    esi,DWORD PTR [eax+0x4]
   13604:	jne    0x13541
   1360a:	jmp    0x1364a
   1360c:	mov    ecx,DWORD PTR [eax]
   1360e:	cmp    DWORD PTR [ecx+0x1c],edi
   13611:	jne    0x1362b
   13613:	mov    ecx,DWORD PTR [eax+0x8]
   13616:	mov    DWORD PTR [ecx+0x1c],edi
   13619:	mov    ecx,DWORD PTR [ebp-0x4]
   1361c:	and    DWORD PTR [eax+0x1c],0x0
   13620:	push   eax
   13621:	call   0x12420
   13626:	mov    eax,DWORD PTR [esi+0x4]
   13629:	mov    eax,DWORD PTR [eax]
   1362b:	mov    ecx,DWORD PTR [esi+0x4]
   1362e:	mov    ecx,DWORD PTR [ecx+0x1c]
   13631:	mov    DWORD PTR [eax+0x1c],ecx
   13634:	mov    ecx,DWORD PTR [esi+0x4]
   13637:	mov    DWORD PTR [ecx+0x1c],edi
   1363a:	mov    eax,DWORD PTR [eax]
   1363c:	mov    ecx,DWORD PTR [ebp-0x4]
   1363f:	mov    DWORD PTR [eax+0x1c],edi
   13642:	push   DWORD PTR [esi+0x4]
   13645:	call   0x1246e
   1364a:	mov    DWORD PTR [esi+0x1c],edi
   1364d:	lea    eax,[ebx+0xc]
   13650:	push   eax
   13651:	call   0x1270a
   13656:	push   ebx
   13657:	call   0x10832
   1365c:	mov    eax,DWORD PTR [ebp-0x4]
   1365f:	dec    DWORD PTR [eax+0xc]
   13662:	mov    eax,DWORD PTR [ebp+0x8]
   13665:	pop    ecx
   13666:	mov    ecx,DWORD PTR [ebp+0xc]
   13669:	pop    edi
   1366a:	pop    esi
   1366b:	mov    DWORD PTR [eax],ecx
   1366d:	pop    ebx
   1366e:	leave  
   1366f:	ret    0x8
   13672:	int3   
   13673:	int3   
   13674:	int3   
   13675:	int3   
   13676:	int3   
   13677:	int3   
   13678:	mov    edi,edi
   1367a:	push   ebp
   1367b:	mov    ebp,esp
   1367d:	push   ebx
   1367e:	push   esi
   1367f:	push   edi
   13680:	mov    edi,DWORD PTR [ebp+0x8]
   13683:	mov    ebx,ecx
   13685:	mov    esi,edi
   13687:	cmp    edi,DWORD PTR ds:0x70c94
   1368d:	je     0x136b5
   1368f:	push   DWORD PTR [esi+0x8]
   13692:	mov    ecx,ebx
   13694:	call   0x13678
   13699:	mov    esi,DWORD PTR [esi]
   1369b:	lea    eax,[edi+0xc]
   1369e:	push   eax
   1369f:	call   0x1270a
   136a4:	push   edi
   136a5:	call   0x10832
   136aa:	pop    ecx
   136ab:	mov    edi,esi
   136ad:	cmp    esi,DWORD PTR ds:0x70c94
   136b3:	jne    0x1368f
   136b5:	pop    edi
   136b6:	pop    esi
   136b7:	pop    ebx
   136b8:	pop    ebp
   136b9:	ret    0x4
   136bc:	int3   
   136bd:	int3   
   136be:	int3   
   136bf:	int3   
   136c0:	int3   
   136c1:	int3   
   136c2:	mov    edi,edi
   136c4:	push   esi
   136c5:	push   edi
   136c6:	push   0x1
   136c8:	xor    edi,edi
   136ca:	push   edi
   136cb:	mov    esi,ecx
   136cd:	call   0x12afc
   136d2:	cmp    DWORD PTR ds:0x70c9c,edi
   136d8:	jne    0x136ef
   136da:	mov    ecx,eax
   136dc:	mov    DWORD PTR ds:0x70c9c,ecx
   136e2:	mov    DWORD PTR [ecx],edi
   136e4:	mov    ecx,DWORD PTR ds:0x70c9c
   136ea:	xor    eax,eax
   136ec:	mov    DWORD PTR [ecx+0x8],edi
   136ef:	inc    DWORD PTR ds:0x70cb8
   136f5:	cmp    eax,edi
   136f7:	je     0x13700
   136f9:	push   eax
   136fa:	call   0x10832
   136ff:	pop    ecx
   13700:	push   edi
   13701:	push   DWORD PTR ds:0x70c9c
   13707:	mov    ecx,esi
   13709:	call   0x12afc
   1370e:	mov    DWORD PTR [esi+0xc],edi
   13711:	mov    DWORD PTR [esi+0x4],eax
   13714:	mov    DWORD PTR [eax],eax
   13716:	mov    esi,DWORD PTR [esi+0x4]
   13719:	pop    edi
   1371a:	mov    DWORD PTR [esi+0x8],esi
   1371d:	pop    esi
   1371e:	ret    
   1371f:	int3   
   13720:	int3   
   13721:	int3   
   13722:	int3   
   13723:	int3   
   13724:	mov    edi,edi
   13726:	push   ebp
   13727:	mov    ebp,esp
   13729:	push   edi
   1372a:	mov    edi,DWORD PTR [ebp+0xc]
   1372d:	cmp    DWORD PTR [ebp+0x8],edi
   13730:	je     0x13746
   13732:	push   esi
   13733:	mov    esi,DWORD PTR [ebp+0x10]
   13736:	inc    DWORD PTR [esi]
   13738:	lea    ecx,[ebp+0x8]
   1373b:	call   0x129ce
   13740:	cmp    DWORD PTR [ebp+0x8],edi
   13743:	jne    0x13736
   13745:	pop    esi
   13746:	pop    edi
   13747:	pop    ebp
   13748:	ret    
   13749:	int3   
   1374a:	int3   
   1374b:	int3   
   1374c:	int3   
   1374d:	int3   
   1374e:	mov    edi,edi
   13750:	push   ebp
   13751:	mov    ebp,esp
   13753:	push   DWORD PTR [ebp+0xc]
   13756:	push   DWORD PTR [ebp+0x8]
   13759:	call   0x12ca0
   1375e:	mov    eax,DWORD PTR [ebp+0x8]
   13761:	pop    ebp
   13762:	ret    0x8
   13765:	int3   
   13766:	int3   
   13767:	int3   
   13768:	int3   
   13769:	int3   
   1376a:	mov    edi,edi
   1376c:	push   ebp
   1376d:	mov    ebp,esp
   1376f:	push   ecx
   13770:	push   esi
   13771:	mov    esi,ecx
   13773:	cmp    DWORD PTR [esi+0xc],0x0
   13777:	mov    ecx,DWORD PTR [ebp+0xc]
   1377a:	je     0x137b4
   1377c:	mov    eax,DWORD PTR [esi+0x4]
   1377f:	cmp    ecx,DWORD PTR [eax]
   13781:	jne    0x137b4
   13783:	cmp    DWORD PTR [ebp+0x10],eax
   13786:	jne    0x137b4
   13788:	push   DWORD PTR [eax+0x4]
   1378b:	mov    ecx,esi
   1378d:	call   0x12a2c
   13792:	mov    ecx,DWORD PTR ds:0x70c88
   13798:	mov    eax,DWORD PTR [esi+0x4]
   1379b:	mov    DWORD PTR [eax+0x4],ecx
   1379e:	mov    eax,DWORD PTR [esi+0x4]
   137a1:	and    DWORD PTR [esi+0xc],0x0
   137a5:	mov    DWORD PTR [eax],eax
   137a7:	mov    eax,DWORD PTR [esi+0x4]
   137aa:	mov    DWORD PTR [eax+0x8],eax
   137ad:	mov    eax,DWORD PTR [esi+0x4]
   137b0:	mov    ecx,DWORD PTR [eax]
   137b2:	jmp    0x137d9
   137b4:	cmp    ecx,DWORD PTR [ebp+0x10]
   137b7:	je     0x137d9
   137b9:	push   edi
   137ba:	mov    edi,ecx
   137bc:	lea    ecx,[ebp+0xc]
   137bf:	call   0x11426
   137c4:	push   edi
   137c5:	lea    eax,[ebp-0x4]
   137c8:	push   eax
   137c9:	mov    ecx,esi
   137cb:	call   0x12d2a
   137d0:	mov    ecx,DWORD PTR [ebp+0xc]
   137d3:	cmp    ecx,DWORD PTR [ebp+0x10]
   137d6:	jne    0x137ba
   137d8:	pop    edi
   137d9:	mov    eax,DWORD PTR [ebp+0x8]
   137dc:	mov    DWORD PTR [eax],ecx
   137de:	pop    esi
   137df:	leave  
   137e0:	ret    0xc
   137e3:	int3   
   137e4:	int3   
   137e5:	int3   
   137e6:	int3   
   137e7:	int3   
   137e8:	mov    edi,edi
   137ea:	push   ebp
   137eb:	mov    ebp,esp
   137ed:	push   ecx
   137ee:	push   ecx
   137ef:	push   esi
   137f0:	push   DWORD PTR [ebp+0x8]
   137f3:	lea    eax,[ebp-0x8]
   137f6:	push   eax
   137f7:	mov    esi,ecx
   137f9:	call   0x12f82
   137fe:	and    DWORD PTR [ebp+0x8],0x0
   13802:	lea    eax,[ebp+0x8]
   13805:	push   eax
   13806:	push   DWORD PTR [ebp-0x4]
   13809:	push   DWORD PTR [ebp-0x8]
   1380c:	call   0x12b20
   13811:	add    esp,0xc
   13814:	push   DWORD PTR [ebp-0x4]
   13817:	lea    eax,[ebp-0x4]
   1381a:	push   DWORD PTR [ebp-0x8]
   1381d:	mov    ecx,esi
   1381f:	push   eax
   13820:	call   0x1376a
   13825:	mov    eax,DWORD PTR [ebp+0x8]
   13828:	pop    esi
   13829:	leave  
   1382a:	ret    0x4
   1382d:	int3   
   1382e:	int3   
   1382f:	int3   
   13830:	int3   
   13831:	int3   
   13832:	mov    edi,edi
   13834:	push   ebp
   13835:	mov    ebp,esp
   13837:	push   ecx
   13838:	push   ebx
   13839:	push   esi
   1383a:	push   edi
   1383b:	mov    edi,ecx
   1383d:	mov    eax,DWORD PTR [edi+0x4]
   13840:	mov    esi,DWORD PTR [eax+0x4]
   13843:	mov    ebx,eax
   13845:	mov    eax,ds:0x70c88
   1384a:	mov    dl,0x1
   1384c:	cmp    esi,eax
   1384e:	je     0x1386c
   13850:	mov    ecx,DWORD PTR [ebp+0xc]
   13853:	mov    ecx,DWORD PTR [ecx]
   13855:	cmp    ecx,DWORD PTR [esi+0xc]
   13858:	mov    ebx,esi
   1385a:	setb   dl
   1385d:	test   dl,dl
   1385f:	je     0x13865
   13861:	mov    esi,DWORD PTR [esi]
   13863:	jmp    0x13868
   13865:	mov    esi,DWORD PTR [esi+0x8]
   13868:	cmp    esi,eax
   1386a:	jne    0x13855
   1386c:	cmp    BYTE PTR [edi+0x8],0x0
   13870:	je     0x1388d
   13872:	push   DWORD PTR [ebp+0xc]
   13875:	push   ebx
   13876:	push   esi
   13877:	lea    eax,[ebp+0xc]
   1387a:	push   eax
   1387b:	mov    ecx,edi
   1387d:	call   0x1327c
   13882:	mov    ecx,DWORD PTR [eax]
   13884:	mov    eax,DWORD PTR [ebp+0x8]
   13887:	mov    BYTE PTR [eax+0x4],0x1
   1388b:	jmp    0x138bc
   1388d:	mov    ecx,ebx
   1388f:	mov    DWORD PTR [ebp-0x4],ecx
   13892:	test   dl,dl
   13894:	je     0x138a8
   13896:	mov    eax,DWORD PTR [edi+0x4]
   13899:	cmp    ebx,DWORD PTR [eax]
   1389b:	je     0x13872
   1389d:	lea    ecx,[ebp-0x4]
   138a0:	call   0x113e6
   138a5:	mov    ecx,DWORD PTR [ebp-0x4]
   138a8:	mov    edx,DWORD PTR [ecx+0xc]
   138ab:	mov    eax,DWORD PTR [ebp+0xc]
   138ae:	cmp    edx,DWORD PTR [eax]
   138b0:	jae    0x138b5
   138b2:	push   eax
   138b3:	jmp    0x13875
   138b5:	mov    eax,DWORD PTR [ebp+0x8]
   138b8:	mov    BYTE PTR [eax+0x4],0x0
   138bc:	pop    edi
   138bd:	pop    esi
   138be:	mov    DWORD PTR [eax],ecx
   138c0:	pop    ebx
   138c1:	leave  
   138c2:	ret    0x8
   138c5:	int3   
   138c6:	int3   
   138c7:	int3   
   138c8:	int3   
   138c9:	int3   
   138ca:	mov    edi,edi
   138cc:	push   ebp
   138cd:	mov    ebp,esp
   138cf:	push   ecx
   138d0:	push   esi
   138d1:	mov    esi,ecx
   138d3:	cmp    DWORD PTR [esi+0xc],0x0
   138d7:	mov    ecx,DWORD PTR [ebp+0xc]
   138da:	je     0x13914
   138dc:	mov    eax,DWORD PTR [esi+0x4]
   138df:	cmp    ecx,DWORD PTR [eax]
   138e1:	jne    0x13914
   138e3:	cmp    DWORD PTR [ebp+0x10],eax
   138e6:	jne    0x13914
   138e8:	push   DWORD PTR [eax+0x4]
   138eb:	mov    ecx,esi
   138ed:	call   0x13678
   138f2:	mov    ecx,DWORD PTR ds:0x70c94
   138f8:	mov    eax,DWORD PTR [esi+0x4]
   138fb:	mov    DWORD PTR [eax+0x4],ecx
   138fe:	mov    eax,DWORD PTR [esi+0x4]
   13901:	and    DWORD PTR [esi+0xc],0x0
   13905:	mov    DWORD PTR [eax],eax
   13907:	mov    eax,DWORD PTR [esi+0x4]
   1390a:	mov    DWORD PTR [eax+0x8],eax
   1390d:	mov    eax,DWORD PTR [esi+0x4]
   13910:	mov    ecx,DWORD PTR [eax]
   13912:	jmp    0x13939
   13914:	cmp    ecx,DWORD PTR [ebp+0x10]
   13917:	je     0x13939
   13919:	push   edi
   1391a:	mov    edi,ecx
   1391c:	lea    ecx,[ebp+0xc]
   1391f:	call   0x11664
   13924:	push   edi
   13925:	lea    eax,[ebp-0x4]
   13928:	push   eax
   13929:	mov    ecx,esi
   1392b:	call   0x13416
   13930:	mov    ecx,DWORD PTR [ebp+0xc]
   13933:	cmp    ecx,DWORD PTR [ebp+0x10]
   13936:	jne    0x1391a
   13938:	pop    edi
   13939:	mov    eax,DWORD PTR [ebp+0x8]
   1393c:	mov    DWORD PTR [eax],ecx
   1393e:	pop    esi
   1393f:	leave  
   13940:	ret    0xc
   13943:	int3   
   13944:	int3   
   13945:	int3   
   13946:	int3   
   13947:	int3   
   13948:	mov    edi,edi
   1394a:	push   ebp
   1394b:	mov    ebp,esp
   1394d:	push   ecx
   1394e:	push   ecx
   1394f:	push   ebx
   13950:	push   esi
   13951:	mov    DWORD PTR [ebp-0x4],ecx
   13954:	push   edi
   13955:	mov    edi,DWORD PTR [ebp+0xc]
   13958:	lea    ecx,[ebp+0xc]
   1395b:	call   0x129ce
   13960:	mov    esi,DWORD PTR [edi]
   13962:	mov    eax,ds:0x70c90
   13967:	mov    ebx,edi
   13969:	mov    DWORD PTR [ebp-0x8],esi
   1396c:	cmp    esi,eax
   1396e:	jne    0x1398c
   13970:	mov    esi,DWORD PTR [edi+0x8]
   13973:	mov    eax,DWORD PTR [ebx+0x4]
   13976:	mov    ecx,DWORD PTR [ebp-0x4]
   13979:	mov    DWORD PTR [esi+0x4],eax
   1397c:	mov    eax,DWORD PTR [ecx+0x4]
   1397f:	cmp    DWORD PTR [eax+0x4],edi
   13982:	jne    0x13a01
   13984:	mov    DWORD PTR [eax+0x4],esi
   13987:	jmp    0x13a0f
   1398c:	mov    ecx,DWORD PTR [edi+0x8]
   1398f:	cmp    ecx,eax
   13991:	je     0x13973
   13993:	push   ecx
   13994:	call   0x121d0
   13999:	mov    ebx,eax
   1399b:	mov    esi,DWORD PTR [ebx+0x8]
   1399e:	cmp    ebx,edi
   139a0:	je     0x13973
   139a2:	mov    eax,DWORD PTR [ebp-0x8]
   139a5:	mov    DWORD PTR [eax+0x4],ebx
   139a8:	mov    eax,DWORD PTR [edi]
   139aa:	mov    DWORD PTR [ebx],eax
   139ac:	cmp    ebx,DWORD PTR [edi+0x8]
   139af:	jne    0x139b6
   139b1:	mov    DWORD PTR [esi+0x4],ebx
   139b4:	jmp    0x139cd
   139b6:	mov    eax,DWORD PTR [ebx+0x4]
   139b9:	mov    DWORD PTR [esi+0x4],eax
   139bc:	mov    eax,DWORD PTR [ebx+0x4]
   139bf:	mov    DWORD PTR [eax],esi
   139c1:	mov    eax,DWORD PTR [edi+0x8]
   139c4:	mov    DWORD PTR [ebx+0x8],eax
   139c7:	mov    eax,DWORD PTR [edi+0x8]
   139ca:	mov    DWORD PTR [eax+0x4],ebx
   139cd:	mov    eax,DWORD PTR [ebp-0x4]
   139d0:	mov    eax,DWORD PTR [eax+0x4]
   139d3:	cmp    DWORD PTR [eax+0x4],edi
   139d6:	jne    0x139dd
   139d8:	mov    DWORD PTR [eax+0x4],ebx
   139db:	jmp    0x139eb
   139dd:	mov    eax,DWORD PTR [edi+0x4]
   139e0:	cmp    DWORD PTR [eax],edi
   139e2:	jne    0x139e8
   139e4:	mov    DWORD PTR [eax],ebx
   139e6:	jmp    0x139eb
   139e8:	mov    DWORD PTR [eax+0x8],ebx
   139eb:	mov    eax,DWORD PTR [edi+0x4]
   139ee:	mov    DWORD PTR [ebx+0x4],eax
   139f1:	mov    eax,DWORD PTR [ebx+0x50]
   139f4:	mov    ecx,DWORD PTR [edi+0x50]
   139f7:	mov    DWORD PTR [ebx+0x50],ecx
   139fa:	mov    DWORD PTR [edi+0x50],eax
   139fd:	mov    ebx,edi
   139ff:	jmp    0x13a62
   13a01:	mov    eax,DWORD PTR [edi+0x4]
   13a04:	cmp    DWORD PTR [eax],edi
   13a06:	jne    0x13a0c
   13a08:	mov    DWORD PTR [eax],esi
   13a0a:	jmp    0x13a0f
   13a0c:	mov    DWORD PTR [eax+0x8],esi
   13a0f:	mov    eax,DWORD PTR [ecx+0x4]
   13a12:	mov    DWORD PTR [ebp-0x8],eax
   13a15:	cmp    DWORD PTR [eax],edi
   13a17:	jne    0x13a39
   13a19:	mov    edx,DWORD PTR [edi+0x8]
   13a1c:	cmp    edx,DWORD PTR ds:0x70c90
   13a22:	jne    0x13a2b
   13a24:	mov    edx,DWORD PTR [edi+0x4]
   13a27:	mov    DWORD PTR [eax],edx
   13a29:	jmp    0x13a39
   13a2b:	push   esi
   13a2c:	call   0x121d0
   13a31:	mov    ecx,DWORD PTR [ebp-0x8]
   13a34:	mov    DWORD PTR [ecx],eax
   13a36:	mov    ecx,DWORD PTR [ebp-0x4]
   13a39:	mov    eax,DWORD PTR [ecx+0x4]
   13a3c:	mov    DWORD PTR [ebp-0x8],eax
   13a3f:	cmp    DWORD PTR [eax+0x8],edi
   13a42:	jne    0x13a62
   13a44:	mov    ecx,DWORD PTR [edi]
   13a46:	cmp    ecx,DWORD PTR ds:0x70c90
   13a4c:	jne    0x13a56
   13a4e:	mov    ecx,DWORD PTR [edi+0x4]
   13a51:	mov    DWORD PTR [eax+0x8],ecx
   13a54:	jmp    0x13a62
   13a56:	push   esi
   13a57:	call   0x114aa
   13a5c:	mov    ecx,DWORD PTR [ebp-0x8]
   13a5f:	mov    DWORD PTR [ecx+0x8],eax
   13a62:	xor    edi,edi
   13a64:	inc    edi
   13a65:	cmp    DWORD PTR [ebx+0x50],edi
   13a68:	jne    0x13b7f
   13a6e:	jmp    0x13b2d
   13a73:	cmp    DWORD PTR [esi+0x50],edi
   13a76:	jne    0x13b7c
   13a7c:	mov    eax,DWORD PTR [esi+0x4]
   13a7f:	cmp    esi,DWORD PTR [eax]
   13a81:	jne    0x13af8
   13a83:	mov    eax,DWORD PTR [eax+0x8]
   13a86:	cmp    DWORD PTR [eax+0x50],0x0
   13a8a:	jne    0x13aa4
   13a8c:	mov    DWORD PTR [eax+0x50],edi
   13a8f:	mov    eax,DWORD PTR [esi+0x4]
   13a92:	and    DWORD PTR [eax+0x50],0x0
   13a96:	push   DWORD PTR [esi+0x4]
   13a99:	call   0x1145c
   13a9e:	mov    eax,DWORD PTR [esi+0x4]
   13aa1:	mov    eax,DWORD PTR [eax+0x8]
   13aa4:	mov    ecx,DWORD PTR [eax]
   13aa6:	cmp    DWORD PTR [ecx+0x50],edi
   13aa9:	jne    0x13ab3
   13aab:	mov    ecx,DWORD PTR [eax+0x8]
   13aae:	cmp    DWORD PTR [ecx+0x50],edi
   13ab1:	je     0x13b26
   13ab3:	mov    ecx,DWORD PTR [eax+0x8]
   13ab6:	cmp    DWORD PTR [ecx+0x50],edi
   13ab9:	jne    0x13ad3
   13abb:	mov    ecx,DWORD PTR [eax]
   13abd:	mov    DWORD PTR [ecx+0x50],edi
   13ac0:	mov    ecx,DWORD PTR [ebp-0x4]
   13ac3:	and    DWORD PTR [eax+0x50],0x0
   13ac7:	push   eax
   13ac8:	call   0x114cc
   13acd:	mov    eax,DWORD PTR [esi+0x4]
   13ad0:	mov    eax,DWORD PTR [eax+0x8]
   13ad3:	mov    ecx,DWORD PTR [esi+0x4]
   13ad6:	mov    ecx,DWORD PTR [ecx+0x50]
   13ad9:	mov    DWORD PTR [eax+0x50],ecx
   13adc:	mov    ecx,DWORD PTR [esi+0x4]
   13adf:	mov    DWORD PTR [ecx+0x50],edi
   13ae2:	mov    eax,DWORD PTR [eax+0x8]
   13ae5:	mov    ecx,DWORD PTR [ebp-0x4]
   13ae8:	mov    DWORD PTR [eax+0x50],edi
   13aeb:	push   DWORD PTR [esi+0x4]
   13aee:	call   0x1145c
   13af3:	jmp    0x13b7c
   13af8:	mov    eax,DWORD PTR [eax]
   13afa:	cmp    DWORD PTR [eax+0x50],0x0
   13afe:	jne    0x13b17
   13b00:	mov    DWORD PTR [eax+0x50],edi
   13b03:	mov    eax,DWORD PTR [esi+0x4]
   13b06:	and    DWORD PTR [eax+0x50],0x0
   13b0a:	push   DWORD PTR [esi+0x4]
   13b0d:	call   0x114cc
   13b12:	mov    eax,DWORD PTR [esi+0x4]
   13b15:	mov    eax,DWORD PTR [eax]
   13b17:	mov    ecx,DWORD PTR [eax+0x8]
   13b1a:	cmp    DWORD PTR [ecx+0x50],edi
   13b1d:	jne    0x13b3e
   13b1f:	mov    ecx,DWORD PTR [eax]
   13b21:	cmp    DWORD PTR [ecx+0x50],edi
   13b24:	jne    0x13b3e
   13b26:	and    DWORD PTR [eax+0x50],0x0
   13b2a:	mov    esi,DWORD PTR [esi+0x4]
   13b2d:	mov    ecx,DWORD PTR [ebp-0x4]
   13b30:	mov    eax,DWORD PTR [ecx+0x4]
   13b33:	cmp    esi,DWORD PTR [eax+0x4]
   13b36:	jne    0x13a73
   13b3c:	jmp    0x13b7c
   13b3e:	mov    ecx,DWORD PTR [eax]
   13b40:	cmp    DWORD PTR [ecx+0x50],edi
   13b43:	jne    0x13b5d
   13b45:	mov    ecx,DWORD PTR [eax+0x8]
   13b48:	mov    DWORD PTR [ecx+0x50],edi
   13b4b:	mov    ecx,DWORD PTR [ebp-0x4]
   13b4e:	and    DWORD PTR [eax+0x50],0x0
   13b52:	push   eax
   13b53:	call   0x1145c
   13b58:	mov    eax,DWORD PTR [esi+0x4]
   13b5b:	mov    eax,DWORD PTR [eax]
   13b5d:	mov    ecx,DWORD PTR [esi+0x4]
   13b60:	mov    ecx,DWORD PTR [ecx+0x50]
   13b63:	mov    DWORD PTR [eax+0x50],ecx
   13b66:	mov    ecx,DWORD PTR [esi+0x4]
   13b69:	mov    DWORD PTR [ecx+0x50],edi
   13b6c:	mov    eax,DWORD PTR [eax]
   13b6e:	mov    ecx,DWORD PTR [ebp-0x4]
   13b71:	mov    DWORD PTR [eax+0x50],edi
   13b74:	push   DWORD PTR [esi+0x4]
   13b77:	call   0x114cc
   13b7c:	mov    DWORD PTR [esi+0x50],edi
   13b7f:	lea    eax,[ebx+0x10]
   13b82:	push   eax
   13b83:	call   0x126f2
   13b88:	push   ebx
   13b89:	call   0x10832
   13b8e:	mov    eax,DWORD PTR [ebp-0x4]
   13b91:	dec    DWORD PTR [eax+0xc]
   13b94:	mov    eax,DWORD PTR [ebp+0x8]
   13b97:	pop    ecx
   13b98:	mov    ecx,DWORD PTR [ebp+0xc]
   13b9b:	pop    edi
   13b9c:	pop    esi
   13b9d:	mov    DWORD PTR [eax],ecx
   13b9f:	pop    ebx
   13ba0:	leave  
   13ba1:	ret    0x8
   13ba4:	int3   
   13ba5:	int3   
   13ba6:	int3   
   13ba7:	int3   
   13ba8:	int3   
   13ba9:	int3   
   13baa:	mov    edi,edi
   13bac:	push   ebp
   13bad:	mov    ebp,esp
   13baf:	push   ebx
   13bb0:	push   esi
   13bb1:	mov    esi,DWORD PTR [ebp+0x10]
   13bb4:	push   edi
   13bb5:	push   0x0
   13bb7:	push   esi
   13bb8:	mov    edi,ecx
   13bba:	call   0x12a90
   13bbf:	push   DWORD PTR [ebp+0x14]
   13bc2:	mov    ebx,eax
   13bc4:	mov    eax,ds:0x70c90
   13bc9:	mov    DWORD PTR [ebx],eax
   13bcb:	mov    eax,ds:0x70c90
   13bd0:	mov    DWORD PTR [ebx+0x8],eax
   13bd3:	lea    eax,[ebx+0x10]
   13bd6:	push   eax
   13bd7:	call   0x12b86
   13bdc:	inc    DWORD PTR [edi+0xc]
   13bdf:	cmp    esi,DWORD PTR [edi+0x4]
   13be2:	je     0x13c0c
   13be4:	mov    eax,DWORD PTR [ebp+0xc]
   13be7:	cmp    eax,DWORD PTR ds:0x70c90
   13bed:	jne    0x13c0c
   13bef:	lea    eax,[esi+0x10]
   13bf2:	push   eax
   13bf3:	push   DWORD PTR [ebp+0x14]
   13bf6:	call   0x17b04
   13bfb:	test   al,al
   13bfd:	jne    0x13c0c
   13bff:	mov    DWORD PTR [esi+0x8],ebx
   13c02:	mov    eax,DWORD PTR [edi+0x4]
   13c05:	cmp    esi,DWORD PTR [eax+0x8]
   13c08:	jne    0x13c26
   13c0a:	jmp    0x13c1b
   13c0c:	mov    DWORD PTR [esi],ebx
   13c0e:	mov    eax,DWORD PTR [edi+0x4]
   13c11:	cmp    esi,eax
   13c13:	jne    0x13c20
   13c15:	mov    DWORD PTR [eax+0x4],ebx
   13c18:	mov    eax,DWORD PTR [edi+0x4]
   13c1b:	mov    DWORD PTR [eax+0x8],ebx
   13c1e:	jmp    0x13c26
   13c20:	cmp    esi,DWORD PTR [eax]
   13c22:	jne    0x13c26
   13c24:	mov    DWORD PTR [eax],ebx
   13c26:	mov    eax,DWORD PTR [edi+0x4]
   13c29:	mov    esi,ebx
   13c2b:	cmp    ebx,DWORD PTR [eax+0x4]
   13c2e:	je     0x13ce2
   13c34:	mov    eax,DWORD PTR [esi+0x4]
   13c37:	xor    edx,edx
   13c39:	cmp    DWORD PTR [eax+0x50],edx
   13c3c:	jne    0x13ce2
   13c42:	mov    ecx,DWORD PTR [eax+0x4]
   13c45:	cmp    eax,DWORD PTR [ecx]
   13c47:	jne    0x13c83
   13c49:	mov    ecx,DWORD PTR [ecx+0x8]
   13c4c:	cmp    DWORD PTR [ecx+0x50],edx
   13c4f:	je     0x13c8a
   13c51:	cmp    esi,DWORD PTR [eax+0x8]
   13c54:	jne    0x13c60
   13c56:	mov    esi,eax
   13c58:	push   esi
   13c59:	mov    ecx,edi
   13c5b:	call   0x1145c
   13c60:	mov    eax,DWORD PTR [esi+0x4]
   13c63:	mov    DWORD PTR [eax+0x50],0x1
   13c6a:	mov    eax,DWORD PTR [esi+0x4]
   13c6d:	mov    eax,DWORD PTR [eax+0x4]
   13c70:	and    DWORD PTR [eax+0x50],0x0
   13c74:	mov    eax,DWORD PTR [esi+0x4]
   13c77:	push   DWORD PTR [eax+0x4]
   13c7a:	mov    ecx,edi
   13c7c:	call   0x114cc
   13c81:	jmp    0x13cd6
   13c83:	mov    ecx,DWORD PTR [ecx]
   13c85:	cmp    DWORD PTR [ecx+0x50],edx
   13c88:	jne    0x13ca7
   13c8a:	mov    edx,eax
   13c8c:	xor    eax,eax
   13c8e:	inc    eax
   13c8f:	mov    DWORD PTR [edx+0x50],eax
   13c92:	mov    DWORD PTR [ecx+0x50],eax
   13c95:	mov    eax,DWORD PTR [esi+0x4]
   13c98:	mov    eax,DWORD PTR [eax+0x4]
   13c9b:	and    DWORD PTR [eax+0x50],0x0
   13c9f:	mov    eax,DWORD PTR [esi+0x4]
   13ca2:	mov    esi,DWORD PTR [eax+0x4]
   13ca5:	jmp    0x13cd6
   13ca7:	cmp    esi,DWORD PTR [eax]
   13ca9:	jne    0x13cb5
   13cab:	mov    esi,eax
   13cad:	push   esi
   13cae:	mov    ecx,edi
   13cb0:	call   0x114cc
   13cb5:	mov    eax,DWORD PTR [esi+0x4]
   13cb8:	mov    DWORD PTR [eax+0x50],0x1
   13cbf:	mov    eax,DWORD PTR [esi+0x4]
   13cc2:	mov    eax,DWORD PTR [eax+0x4]
   13cc5:	and    DWORD PTR [eax+0x50],0x0
   13cc9:	mov    eax,DWORD PTR [esi+0x4]
   13ccc:	push   DWORD PTR [eax+0x4]
   13ccf:	mov    ecx,edi
   13cd1:	call   0x1145c
   13cd6:	mov    eax,DWORD PTR [edi+0x4]
   13cd9:	cmp    esi,DWORD PTR [eax+0x4]
   13cdc:	jne    0x13c34
   13ce2:	mov    eax,DWORD PTR [edi+0x4]
   13ce5:	mov    eax,DWORD PTR [eax+0x4]
   13ce8:	pop    edi
   13ce9:	mov    DWORD PTR [eax+0x50],0x1
   13cf0:	mov    eax,DWORD PTR [ebp+0x8]
   13cf3:	pop    esi
   13cf4:	mov    DWORD PTR [eax],ebx
   13cf6:	pop    ebx
   13cf7:	pop    ebp
   13cf8:	ret    0x10
   13cfb:	int3   
   13cfc:	int3   
   13cfd:	int3   
   13cfe:	int3   
   13cff:	int3   
   13d00:	mov    edi,edi
   13d02:	push   ebp
   13d03:	mov    ebp,esp
   13d05:	push   ebx
   13d06:	push   esi
   13d07:	mov    esi,DWORD PTR [ebp+0x10]
   13d0a:	push   edi
   13d0b:	push   0x0
   13d0d:	push   esi
   13d0e:	mov    edi,ecx
   13d10:	call   0x12ab4
   13d15:	push   DWORD PTR [ebp+0x14]
   13d18:	mov    ebx,eax
   13d1a:	mov    eax,ds:0x70c94
   13d1f:	mov    DWORD PTR [ebx],eax
   13d21:	mov    eax,ds:0x70c94
   13d26:	mov    DWORD PTR [ebx+0x8],eax
   13d29:	lea    eax,[ebx+0xc]
   13d2c:	push   eax
   13d2d:	call   0x12ba4
   13d32:	inc    DWORD PTR [edi+0xc]
   13d35:	cmp    esi,DWORD PTR [edi+0x4]
   13d38:	je     0x13d62
   13d3a:	mov    eax,DWORD PTR [ebp+0xc]
   13d3d:	cmp    eax,DWORD PTR ds:0x70c94
   13d43:	jne    0x13d62
   13d45:	lea    eax,[esi+0xc]
   13d48:	push   eax
   13d49:	push   DWORD PTR [ebp+0x14]
   13d4c:	call   0x17b04
   13d51:	test   al,al
   13d53:	jne    0x13d62
   13d55:	mov    DWORD PTR [esi+0x8],ebx
   13d58:	mov    eax,DWORD PTR [edi+0x4]
   13d5b:	cmp    esi,DWORD PTR [eax+0x8]
   13d5e:	jne    0x13d7c
   13d60:	jmp    0x13d71
   13d62:	mov    DWORD PTR [esi],ebx
   13d64:	mov    eax,DWORD PTR [edi+0x4]
   13d67:	cmp    esi,eax
   13d69:	jne    0x13d76
   13d6b:	mov    DWORD PTR [eax+0x4],ebx
   13d6e:	mov    eax,DWORD PTR [edi+0x4]
   13d71:	mov    DWORD PTR [eax+0x8],ebx
   13d74:	jmp    0x13d7c
   13d76:	cmp    esi,DWORD PTR [eax]
   13d78:	jne    0x13d7c
   13d7a:	mov    DWORD PTR [eax],ebx
   13d7c:	mov    eax,DWORD PTR [edi+0x4]
   13d7f:	mov    esi,ebx
   13d81:	cmp    ebx,DWORD PTR [eax+0x4]
   13d84:	je     0x13e38
   13d8a:	mov    eax,DWORD PTR [esi+0x4]
   13d8d:	xor    edx,edx
   13d8f:	cmp    DWORD PTR [eax+0x1c],edx
   13d92:	jne    0x13e38
   13d98:	mov    ecx,DWORD PTR [eax+0x4]
   13d9b:	cmp    eax,DWORD PTR [ecx]
   13d9d:	jne    0x13dd9
   13d9f:	mov    ecx,DWORD PTR [ecx+0x8]
   13da2:	cmp    DWORD PTR [ecx+0x1c],edx
   13da5:	je     0x13de0
   13da7:	cmp    esi,DWORD PTR [eax+0x8]
   13daa:	jne    0x13db6
   13dac:	mov    esi,eax
   13dae:	push   esi
   13daf:	mov    ecx,edi
   13db1:	call   0x12420
   13db6:	mov    eax,DWORD PTR [esi+0x4]
   13db9:	mov    DWORD PTR [eax+0x1c],0x1
   13dc0:	mov    eax,DWORD PTR [esi+0x4]
   13dc3:	mov    eax,DWORD PTR [eax+0x4]
   13dc6:	and    DWORD PTR [eax+0x1c],0x0
   13dca:	mov    eax,DWORD PTR [esi+0x4]
   13dcd:	push   DWORD PTR [eax+0x4]
   13dd0:	mov    ecx,edi
   13dd2:	call   0x1246e
   13dd7:	jmp    0x13e2c
   13dd9:	mov    ecx,DWORD PTR [ecx]
   13ddb:	cmp    DWORD PTR [ecx+0x1c],edx
   13dde:	jne    0x13dfd
   13de0:	mov    edx,eax
   13de2:	xor    eax,eax
   13de4:	inc    eax
   13de5:	mov    DWORD PTR [edx+0x1c],eax
   13de8:	mov    DWORD PTR [ecx+0x1c],eax
   13deb:	mov    eax,DWORD PTR [esi+0x4]
   13dee:	mov    eax,DWORD PTR [eax+0x4]
   13df1:	and    DWORD PTR [eax+0x1c],0x0
   13df5:	mov    eax,DWORD PTR [esi+0x4]
   13df8:	mov    esi,DWORD PTR [eax+0x4]
   13dfb:	jmp    0x13e2c
   13dfd:	cmp    esi,DWORD PTR [eax]
   13dff:	jne    0x13e0b
   13e01:	mov    esi,eax
   13e03:	push   esi
   13e04:	mov    ecx,edi
   13e06:	call   0x1246e
   13e0b:	mov    eax,DWORD PTR [esi+0x4]
   13e0e:	mov    DWORD PTR [eax+0x1c],0x1
   13e15:	mov    eax,DWORD PTR [esi+0x4]
   13e18:	mov    eax,DWORD PTR [eax+0x4]
   13e1b:	and    DWORD PTR [eax+0x1c],0x0
   13e1f:	mov    eax,DWORD PTR [esi+0x4]
   13e22:	push   DWORD PTR [eax+0x4]
   13e25:	mov    ecx,edi
   13e27:	call   0x12420
   13e2c:	mov    eax,DWORD PTR [edi+0x4]
   13e2f:	cmp    esi,DWORD PTR [eax+0x4]
   13e32:	jne    0x13d8a
   13e38:	mov    eax,DWORD PTR [edi+0x4]
   13e3b:	mov    eax,DWORD PTR [eax+0x4]
   13e3e:	pop    edi
   13e3f:	mov    DWORD PTR [eax+0x1c],0x1
   13e46:	mov    eax,DWORD PTR [ebp+0x8]
   13e49:	pop    esi
   13e4a:	mov    DWORD PTR [eax],ebx
   13e4c:	pop    ebx
   13e4d:	pop    ebp
   13e4e:	ret    0x10
   13e51:	int3   
   13e52:	int3   
   13e53:	int3   
   13e54:	int3   
   13e55:	int3   
   13e56:	mov    edi,edi
   13e58:	push   ebp
   13e59:	mov    ebp,esp
   13e5b:	push   ecx
   13e5c:	push   ecx
   13e5d:	push   ebx
   13e5e:	push   esi
   13e5f:	mov    DWORD PTR [ebp-0x4],ecx
   13e62:	push   edi
   13e63:	mov    edi,DWORD PTR [ebp+0xc]
   13e66:	lea    ecx,[ebp+0xc]
   13e69:	call   0x1169a
   13e6e:	mov    esi,DWORD PTR [edi]
   13e70:	mov    eax,ds:0x70c98
   13e75:	mov    ebx,edi
   13e77:	mov    DWORD PTR [ebp-0x8],esi
   13e7a:	cmp    esi,eax
   13e7c:	jne    0x13e9a
   13e7e:	mov    esi,DWORD PTR [edi+0x8]
   13e81:	mov    eax,DWORD PTR [ebx+0x4]
   13e84:	mov    ecx,DWORD PTR [ebp-0x4]
   13e87:	mov    DWORD PTR [esi+0x4],eax
   13e8a:	mov    eax,DWORD PTR [ecx+0x4]
   13e8d:	cmp    DWORD PTR [eax+0x4],edi
   13e90:	jne    0x13f0f
   13e92:	mov    DWORD PTR [eax+0x4],esi
   13e95:	jmp    0x13f1d
   13e9a:	mov    ecx,DWORD PTR [edi+0x8]
   13e9d:	cmp    ecx,eax
   13e9f:	je     0x13e81
   13ea1:	push   ecx
   13ea2:	call   0x11602
   13ea7:	mov    ebx,eax
   13ea9:	mov    esi,DWORD PTR [ebx+0x8]
   13eac:	cmp    ebx,edi
   13eae:	je     0x13e81
   13eb0:	mov    eax,DWORD PTR [ebp-0x8]
   13eb3:	mov    DWORD PTR [eax+0x4],ebx
   13eb6:	mov    eax,DWORD PTR [edi]
   13eb8:	mov    DWORD PTR [ebx],eax
   13eba:	cmp    ebx,DWORD PTR [edi+0x8]
   13ebd:	jne    0x13ec4
   13ebf:	mov    DWORD PTR [esi+0x4],ebx
   13ec2:	jmp    0x13edb
   13ec4:	mov    eax,DWORD PTR [ebx+0x4]
   13ec7:	mov    DWORD PTR [esi+0x4],eax
   13eca:	mov    eax,DWORD PTR [ebx+0x4]
   13ecd:	mov    DWORD PTR [eax],esi
   13ecf:	mov    eax,DWORD PTR [edi+0x8]
   13ed2:	mov    DWORD PTR [ebx+0x8],eax
   13ed5:	mov    eax,DWORD PTR [edi+0x8]
   13ed8:	mov    DWORD PTR [eax+0x4],ebx
   13edb:	mov    eax,DWORD PTR [ebp-0x4]
   13ede:	mov    eax,DWORD PTR [eax+0x4]
   13ee1:	cmp    DWORD PTR [eax+0x4],edi
   13ee4:	jne    0x13eeb
   13ee6:	mov    DWORD PTR [eax+0x4],ebx
   13ee9:	jmp    0x13ef9
   13eeb:	mov    eax,DWORD PTR [edi+0x4]
   13eee:	cmp    DWORD PTR [eax],edi
   13ef0:	jne    0x13ef6
   13ef2:	mov    DWORD PTR [eax],ebx
   13ef4:	jmp    0x13ef9
   13ef6:	mov    DWORD PTR [eax+0x8],ebx
   13ef9:	mov    eax,DWORD PTR [edi+0x4]
   13efc:	mov    DWORD PTR [ebx+0x4],eax
   13eff:	mov    eax,DWORD PTR [ebx+0x14]
   13f02:	mov    ecx,DWORD PTR [edi+0x14]
   13f05:	mov    DWORD PTR [ebx+0x14],ecx
   13f08:	mov    DWORD PTR [edi+0x14],eax
   13f0b:	mov    ebx,edi
   13f0d:	jmp    0x13f70
   13f0f:	mov    eax,DWORD PTR [edi+0x4]
   13f12:	cmp    DWORD PTR [eax],edi
   13f14:	jne    0x13f1a
   13f16:	mov    DWORD PTR [eax],esi
   13f18:	jmp    0x13f1d
   13f1a:	mov    DWORD PTR [eax+0x8],esi
   13f1d:	mov    eax,DWORD PTR [ecx+0x4]
   13f20:	mov    DWORD PTR [ebp-0x8],eax
   13f23:	cmp    DWORD PTR [eax],edi
   13f25:	jne    0x13f47
   13f27:	mov    edx,DWORD PTR [edi+0x8]
   13f2a:	cmp    edx,DWORD PTR ds:0x70c98
   13f30:	jne    0x13f39
   13f32:	mov    edx,DWORD PTR [edi+0x4]
   13f35:	mov    DWORD PTR [eax],edx
   13f37:	jmp    0x13f47
   13f39:	push   esi
   13f3a:	call   0x11602
   13f3f:	mov    ecx,DWORD PTR [ebp-0x8]
   13f42:	mov    DWORD PTR [ecx],eax
   13f44:	mov    ecx,DWORD PTR [ebp-0x4]
   13f47:	mov    eax,DWORD PTR [ecx+0x4]
   13f4a:	mov    DWORD PTR [ebp-0x8],eax
   13f4d:	cmp    DWORD PTR [eax+0x8],edi
   13f50:	jne    0x13f70
   13f52:	mov    ecx,DWORD PTR [edi]
   13f54:	cmp    ecx,DWORD PTR ds:0x70c98
   13f5a:	jne    0x13f64
   13f5c:	mov    ecx,DWORD PTR [edi+0x4]
   13f5f:	mov    DWORD PTR [eax+0x8],ecx
   13f62:	jmp    0x13f70
   13f64:	push   esi
   13f65:	call   0x115e0
   13f6a:	mov    ecx,DWORD PTR [ebp-0x8]
   13f6d:	mov    DWORD PTR [ecx+0x8],eax
   13f70:	xor    edi,edi
   13f72:	inc    edi
   13f73:	cmp    DWORD PTR [ebx+0x14],edi
   13f76:	jne    0x1408d
   13f7c:	jmp    0x1403b
   13f81:	cmp    DWORD PTR [esi+0x14],edi
   13f84:	jne    0x1408a
   13f8a:	mov    eax,DWORD PTR [esi+0x4]
   13f8d:	cmp    esi,DWORD PTR [eax]
   13f8f:	jne    0x14006
   13f91:	mov    eax,DWORD PTR [eax+0x8]
   13f94:	cmp    DWORD PTR [eax+0x14],0x0
   13f98:	jne    0x13fb2
   13f9a:	mov    DWORD PTR [eax+0x14],edi
   13f9d:	mov    eax,DWORD PTR [esi+0x4]
   13fa0:	and    DWORD PTR [eax+0x14],0x0
   13fa4:	push   DWORD PTR [esi+0x4]
   13fa7:	call   0x124fe
   13fac:	mov    eax,DWORD PTR [esi+0x4]
   13faf:	mov    eax,DWORD PTR [eax+0x8]
   13fb2:	mov    ecx,DWORD PTR [eax]
   13fb4:	cmp    DWORD PTR [ecx+0x14],edi
   13fb7:	jne    0x13fc1
   13fb9:	mov    ecx,DWORD PTR [eax+0x8]
   13fbc:	cmp    DWORD PTR [ecx+0x14],edi
   13fbf:	je     0x14034
   13fc1:	mov    ecx,DWORD PTR [eax+0x8]
   13fc4:	cmp    DWORD PTR [ecx+0x14],edi
   13fc7:	jne    0x13fe1
   13fc9:	mov    ecx,DWORD PTR [eax]
   13fcb:	mov    DWORD PTR [ecx+0x14],edi
   13fce:	mov    ecx,DWORD PTR [ebp-0x4]
   13fd1:	and    DWORD PTR [eax+0x14],0x0
   13fd5:	push   eax
   13fd6:	call   0x1254c
   13fdb:	mov    eax,DWORD PTR [esi+0x4]
   13fde:	mov    eax,DWORD PTR [eax+0x8]
   13fe1:	mov    ecx,DWORD PTR [esi+0x4]
   13fe4:	mov    ecx,DWORD PTR [ecx+0x14]
   13fe7:	mov    DWORD PTR [eax+0x14],ecx
   13fea:	mov    ecx,DWORD PTR [esi+0x4]
   13fed:	mov    DWORD PTR [ecx+0x14],edi
   13ff0:	mov    eax,DWORD PTR [eax+0x8]
   13ff3:	mov    ecx,DWORD PTR [ebp-0x4]
   13ff6:	mov    DWORD PTR [eax+0x14],edi
   13ff9:	push   DWORD PTR [esi+0x4]
   13ffc:	call   0x124fe
   14001:	jmp    0x1408a
   14006:	mov    eax,DWORD PTR [eax]
   14008:	cmp    DWORD PTR [eax+0x14],0x0
   1400c:	jne    0x14025
   1400e:	mov    DWORD PTR [eax+0x14],edi
   14011:	mov    eax,DWORD PTR [esi+0x4]
   14014:	and    DWORD PTR [eax+0x14],0x0
   14018:	push   DWORD PTR [esi+0x4]
   1401b:	call   0x1254c
   14020:	mov    eax,DWORD PTR [esi+0x4]
   14023:	mov    eax,DWORD PTR [eax]
   14025:	mov    ecx,DWORD PTR [eax+0x8]
   14028:	cmp    DWORD PTR [ecx+0x14],edi
   1402b:	jne    0x1404c
   1402d:	mov    ecx,DWORD PTR [eax]
   1402f:	cmp    DWORD PTR [ecx+0x14],edi
   14032:	jne    0x1404c
   14034:	and    DWORD PTR [eax+0x14],0x0
   14038:	mov    esi,DWORD PTR [esi+0x4]
   1403b:	mov    ecx,DWORD PTR [ebp-0x4]
   1403e:	mov    eax,DWORD PTR [ecx+0x4]
   14041:	cmp    esi,DWORD PTR [eax+0x4]
   14044:	jne    0x13f81
   1404a:	jmp    0x1408a
   1404c:	mov    ecx,DWORD PTR [eax]
   1404e:	cmp    DWORD PTR [ecx+0x14],edi
   14051:	jne    0x1406b
   14053:	mov    ecx,DWORD PTR [eax+0x8]
   14056:	mov    DWORD PTR [ecx+0x14],edi
   14059:	mov    ecx,DWORD PTR [ebp-0x4]
   1405c:	and    DWORD PTR [eax+0x14],0x0
   14060:	push   eax
   14061:	call   0x124fe
   14066:	mov    eax,DWORD PTR [esi+0x4]
   14069:	mov    eax,DWORD PTR [eax]
   1406b:	mov    ecx,DWORD PTR [esi+0x4]
   1406e:	mov    ecx,DWORD PTR [ecx+0x14]
   14071:	mov    DWORD PTR [eax+0x14],ecx
   14074:	mov    ecx,DWORD PTR [esi+0x4]
   14077:	mov    DWORD PTR [ecx+0x14],edi
   1407a:	mov    eax,DWORD PTR [eax]
   1407c:	mov    ecx,DWORD PTR [ebp-0x4]
   1407f:	mov    DWORD PTR [eax+0x14],edi
   14082:	push   DWORD PTR [esi+0x4]
   14085:	call   0x1254c
   1408a:	mov    DWORD PTR [esi+0x14],edi
   1408d:	lea    eax,[ebx+0xc]
   14090:	push   eax
   14091:	call   0x12be0
   14096:	push   ebx
   14097:	call   0x10832
   1409c:	mov    eax,DWORD PTR [ebp-0x4]
   1409f:	dec    DWORD PTR [eax+0xc]
   140a2:	mov    eax,DWORD PTR [ebp+0x8]
   140a5:	pop    ecx
   140a6:	mov    ecx,DWORD PTR [ebp+0xc]
   140a9:	pop    edi
   140aa:	pop    esi
   140ab:	mov    DWORD PTR [eax],ecx
   140ad:	pop    ebx
   140ae:	leave  
   140af:	ret    0x8
   140b2:	int3   
   140b3:	int3   
   140b4:	int3   
   140b5:	int3   
   140b6:	int3   
   140b7:	int3   
   140b8:	mov    edi,edi
   140ba:	push   ebp
   140bb:	mov    ebp,esp
   140bd:	push   ebx
   140be:	push   esi
   140bf:	push   edi
   140c0:	mov    edi,DWORD PTR [ebp+0x8]
   140c3:	mov    ebx,ecx
   140c5:	mov    esi,edi
   140c7:	cmp    edi,DWORD PTR ds:0x70c98
   140cd:	je     0x140f5
   140cf:	push   DWORD PTR [esi+0x8]
   140d2:	mov    ecx,ebx
   140d4:	call   0x140b8
   140d9:	mov    esi,DWORD PTR [esi]
   140db:	lea    eax,[edi+0xc]
   140de:	push   eax
   140df:	call   0x12be0
   140e4:	push   edi
   140e5:	call   0x10832
   140ea:	pop    ecx
   140eb:	mov    edi,esi
   140ed:	cmp    esi,DWORD PTR ds:0x70c98
   140f3:	jne    0x140cf
   140f5:	pop    edi
   140f6:	pop    esi
   140f7:	pop    ebx
   140f8:	pop    ebp
   140f9:	ret    0x4
   140fc:	int3   
   140fd:	int3   
   140fe:	int3   
   140ff:	int3   
   14100:	int3   
   14101:	int3   
   14102:	mov    edi,edi
   14104:	push   ebp
   14105:	mov    ebp,esp
   14107:	push   ebx
   14108:	push   esi
   14109:	mov    esi,DWORD PTR [ebp+0x10]
   1410c:	push   edi
   1410d:	push   0x0
   1410f:	push   esi
   14110:	mov    edi,ecx
   14112:	call   0x12a6c
   14117:	push   DWORD PTR [ebp+0x14]
   1411a:	mov    ebx,eax
   1411c:	mov    eax,ds:0x70c98
   14121:	mov    DWORD PTR [ebx],eax
   14123:	mov    eax,ds:0x70c98
   14128:	mov    DWORD PTR [ebx+0x8],eax
   1412b:	lea    eax,[ebx+0xc]
   1412e:	push   eax
   1412f:	call   0x12bc2
   14134:	inc    DWORD PTR [edi+0xc]
   14137:	cmp    esi,DWORD PTR [edi+0x4]
   1413a:	je     0x1415e
   1413c:	mov    eax,DWORD PTR [ebp+0xc]
   1413f:	cmp    eax,DWORD PTR ds:0x70c98
   14145:	jne    0x1415e
   14147:	mov    eax,DWORD PTR [ebp+0x14]
   1414a:	mov    eax,DWORD PTR [eax]
   1414c:	cmp    eax,DWORD PTR [esi+0xc]
   1414f:	jl     0x1415e
   14151:	mov    DWORD PTR [esi+0x8],ebx
   14154:	mov    eax,DWORD PTR [edi+0x4]
   14157:	cmp    esi,DWORD PTR [eax+0x8]
   1415a:	jne    0x14178
   1415c:	jmp    0x1416d
   1415e:	mov    DWORD PTR [esi],ebx
   14160:	mov    eax,DWORD PTR [edi+0x4]
   14163:	cmp    esi,eax
   14165:	jne    0x14172
   14167:	mov    DWORD PTR [eax+0x4],ebx
   1416a:	mov    eax,DWORD PTR [edi+0x4]
   1416d:	mov    DWORD PTR [eax+0x8],ebx
   14170:	jmp    0x14178
   14172:	cmp    esi,DWORD PTR [eax]
   14174:	jne    0x14178
   14176:	mov    DWORD PTR [eax],ebx
   14178:	mov    eax,DWORD PTR [edi+0x4]
   1417b:	mov    esi,ebx
   1417d:	cmp    ebx,DWORD PTR [eax+0x4]
   14180:	je     0x14234
   14186:	mov    eax,DWORD PTR [esi+0x4]
   14189:	xor    edx,edx
   1418b:	cmp    DWORD PTR [eax+0x14],edx
   1418e:	jne    0x14234
   14194:	mov    ecx,DWORD PTR [eax+0x4]
   14197:	cmp    eax,DWORD PTR [ecx]
   14199:	jne    0x141d5
   1419b:	mov    ecx,DWORD PTR [ecx+0x8]
   1419e:	cmp    DWORD PTR [ecx+0x14],edx
   141a1:	je     0x141dc
   141a3:	cmp    esi,DWORD PTR [eax+0x8]
   141a6:	jne    0x141b2
   141a8:	mov    esi,eax
   141aa:	push   esi
   141ab:	mov    ecx,edi
   141ad:	call   0x124fe
   141b2:	mov    eax,DWORD PTR [esi+0x4]
   141b5:	mov    DWORD PTR [eax+0x14],0x1
   141bc:	mov    eax,DWORD PTR [esi+0x4]
   141bf:	mov    eax,DWORD PTR [eax+0x4]
   141c2:	and    DWORD PTR [eax+0x14],0x0
   141c6:	mov    eax,DWORD PTR [esi+0x4]
   141c9:	push   DWORD PTR [eax+0x4]
   141cc:	mov    ecx,edi
   141ce:	call   0x1254c
   141d3:	jmp    0x14228
   141d5:	mov    ecx,DWORD PTR [ecx]
   141d7:	cmp    DWORD PTR [ecx+0x14],edx
   141da:	jne    0x141f9
   141dc:	mov    edx,eax
   141de:	xor    eax,eax
   141e0:	inc    eax
   141e1:	mov    DWORD PTR [edx+0x14],eax
   141e4:	mov    DWORD PTR [ecx+0x14],eax
   141e7:	mov    eax,DWORD PTR [esi+0x4]
   141ea:	mov    eax,DWORD PTR [eax+0x4]
   141ed:	and    DWORD PTR [eax+0x14],0x0
   141f1:	mov    eax,DWORD PTR [esi+0x4]
   141f4:	mov    esi,DWORD PTR [eax+0x4]
   141f7:	jmp    0x14228
   141f9:	cmp    esi,DWORD PTR [eax]
   141fb:	jne    0x14207
   141fd:	mov    esi,eax
   141ff:	push   esi
   14200:	mov    ecx,edi
   14202:	call   0x1254c
   14207:	mov    eax,DWORD PTR [esi+0x4]
   1420a:	mov    DWORD PTR [eax+0x14],0x1
   14211:	mov    eax,DWORD PTR [esi+0x4]
   14214:	mov    eax,DWORD PTR [eax+0x4]
   14217:	and    DWORD PTR [eax+0x14],0x0
   1421b:	mov    eax,DWORD PTR [esi+0x4]
   1421e:	push   DWORD PTR [eax+0x4]
   14221:	mov    ecx,edi
   14223:	call   0x124fe
   14228:	mov    eax,DWORD PTR [edi+0x4]
   1422b:	cmp    esi,DWORD PTR [eax+0x4]
   1422e:	jne    0x14186
   14234:	mov    eax,DWORD PTR [edi+0x4]
   14237:	mov    eax,DWORD PTR [eax+0x4]
   1423a:	pop    edi
   1423b:	mov    DWORD PTR [eax+0x14],0x1
   14242:	mov    eax,DWORD PTR [ebp+0x8]
   14245:	pop    esi
   14246:	mov    DWORD PTR [eax],ebx
   14248:	pop    ebx
   14249:	pop    ebp
   1424a:	ret    0x10
   1424d:	int3   
   1424e:	int3   
   1424f:	int3   
   14250:	int3   
   14251:	int3   
   14252:	mov    edi,edi
   14254:	push   ebp
   14255:	mov    ebp,esp
   14257:	push   ebx
   14258:	push   esi
   14259:	mov    esi,DWORD PTR [ebp+0x10]
   1425c:	push   edi
   1425d:	push   0x0
   1425f:	push   esi
   14260:	mov    edi,ecx
   14262:	call   0x12ab4
   14267:	push   DWORD PTR [ebp+0x14]
   1426a:	mov    ebx,eax
   1426c:	mov    eax,ds:0x70ca0
   14271:	mov    DWORD PTR [ebx],eax
   14273:	mov    eax,ds:0x70ca0
   14278:	mov    DWORD PTR [ebx+0x8],eax
   1427b:	lea    eax,[ebx+0xc]
   1427e:	push   eax
   1427f:	call   0x12bf8
   14284:	inc    DWORD PTR [edi+0xc]
   14287:	cmp    esi,DWORD PTR [edi+0x4]
   1428a:	je     0x142b4
   1428c:	mov    eax,DWORD PTR [ebp+0xc]
   1428f:	cmp    eax,DWORD PTR ds:0x70ca0
   14295:	jne    0x142b4
   14297:	lea    eax,[esi+0xc]
   1429a:	push   eax
   1429b:	push   DWORD PTR [ebp+0x14]
   1429e:	call   0x17b34
   142a3:	test   al,al
   142a5:	jne    0x142b4
   142a7:	mov    DWORD PTR [esi+0x8],ebx
   142aa:	mov    eax,DWORD PTR [edi+0x4]
   142ad:	cmp    esi,DWORD PTR [eax+0x8]
   142b0:	jne    0x142ce
   142b2:	jmp    0x142c3
   142b4:	mov    DWORD PTR [esi],ebx
   142b6:	mov    eax,DWORD PTR [edi+0x4]
   142b9:	cmp    esi,eax
   142bb:	jne    0x142c8
   142bd:	mov    DWORD PTR [eax+0x4],ebx
   142c0:	mov    eax,DWORD PTR [edi+0x4]
   142c3:	mov    DWORD PTR [eax+0x8],ebx
   142c6:	jmp    0x142ce
   142c8:	cmp    esi,DWORD PTR [eax]
   142ca:	jne    0x142ce
   142cc:	mov    DWORD PTR [eax],ebx
   142ce:	mov    eax,DWORD PTR [edi+0x4]
   142d1:	mov    esi,ebx
   142d3:	cmp    ebx,DWORD PTR [eax+0x4]
   142d6:	je     0x1438a
   142dc:	mov    eax,DWORD PTR [esi+0x4]
   142df:	xor    edx,edx
   142e1:	cmp    DWORD PTR [eax+0x1c],edx
   142e4:	jne    0x1438a
   142ea:	mov    ecx,DWORD PTR [eax+0x4]
   142ed:	cmp    eax,DWORD PTR [ecx]
   142ef:	jne    0x1432b
   142f1:	mov    ecx,DWORD PTR [ecx+0x8]
   142f4:	cmp    DWORD PTR [ecx+0x1c],edx
   142f7:	je     0x14332
   142f9:	cmp    esi,DWORD PTR [eax+0x8]
   142fc:	jne    0x14308
   142fe:	mov    esi,eax
   14300:	push   esi
   14301:	mov    ecx,edi
   14303:	call   0x12614
   14308:	mov    eax,DWORD PTR [esi+0x4]
   1430b:	mov    DWORD PTR [eax+0x1c],0x1
   14312:	mov    eax,DWORD PTR [esi+0x4]
   14315:	mov    eax,DWORD PTR [eax+0x4]
   14318:	and    DWORD PTR [eax+0x1c],0x0
   1431c:	mov    eax,DWORD PTR [esi+0x4]
   1431f:	push   DWORD PTR [eax+0x4]
   14322:	mov    ecx,edi
   14324:	call   0x12662
   14329:	jmp    0x1437e
   1432b:	mov    ecx,DWORD PTR [ecx]
   1432d:	cmp    DWORD PTR [ecx+0x1c],edx
   14330:	jne    0x1434f
   14332:	mov    edx,eax
   14334:	xor    eax,eax
   14336:	inc    eax
   14337:	mov    DWORD PTR [edx+0x1c],eax
   1433a:	mov    DWORD PTR [ecx+0x1c],eax
   1433d:	mov    eax,DWORD PTR [esi+0x4]
   14340:	mov    eax,DWORD PTR [eax+0x4]
   14343:	and    DWORD PTR [eax+0x1c],0x0
   14347:	mov    eax,DWORD PTR [esi+0x4]
   1434a:	mov    esi,DWORD PTR [eax+0x4]
   1434d:	jmp    0x1437e
   1434f:	cmp    esi,DWORD PTR [eax]
   14351:	jne    0x1435d
   14353:	mov    esi,eax
   14355:	push   esi
   14356:	mov    ecx,edi
   14358:	call   0x12662
   1435d:	mov    eax,DWORD PTR [esi+0x4]
   14360:	mov    DWORD PTR [eax+0x1c],0x1
   14367:	mov    eax,DWORD PTR [esi+0x4]
   1436a:	mov    eax,DWORD PTR [eax+0x4]
   1436d:	and    DWORD PTR [eax+0x1c],0x0
   14371:	mov    eax,DWORD PTR [esi+0x4]
   14374:	push   DWORD PTR [eax+0x4]
   14377:	mov    ecx,edi
   14379:	call   0x12614
   1437e:	mov    eax,DWORD PTR [edi+0x4]
   14381:	cmp    esi,DWORD PTR [eax+0x4]
   14384:	jne    0x142dc
   1438a:	mov    eax,DWORD PTR [edi+0x4]
   1438d:	mov    eax,DWORD PTR [eax+0x4]
   14390:	pop    edi
   14391:	mov    DWORD PTR [eax+0x1c],0x1
   14398:	mov    eax,DWORD PTR [ebp+0x8]
   1439b:	pop    esi
   1439c:	mov    DWORD PTR [eax],ebx
   1439e:	pop    ebx
   1439f:	pop    ebp
   143a0:	ret    0x10
   143a3:	int3   
   143a4:	int3   
   143a5:	int3   
   143a6:	int3   
   143a7:	int3   
   143a8:	mov    edi,edi
   143aa:	push   ebp
   143ab:	mov    ebp,esp
   143ad:	push   ecx
   143ae:	push   DWORD PTR [ebp-0x4]
   143b1:	push   DWORD PTR [ebp+0x10]
   143b4:	push   DWORD PTR [ebp+0xc]
   143b7:	push   DWORD PTR [ebp+0x8]
   143ba:	call   0x13724
   143bf:	add    esp,0x10
   143c2:	leave  
   143c3:	ret    
   143c4:	int3   
   143c5:	int3   
   143c6:	int3   
   143c7:	int3   
   143c8:	int3   
   143c9:	int3   
   143ca:	mov    edi,edi
   143cc:	push   ebp
   143cd:	mov    ebp,esp
   143cf:	push   ecx
   143d0:	push   ebx
   143d1:	push   esi
   143d2:	push   edi
   143d3:	xor    edi,edi
   143d5:	push   edi
   143d6:	push   edi
   143d7:	push   edi
   143d8:	mov    esi,ecx
   143da:	mov    eax,DWORD PTR [esi+0x10]
   143dd:	push   edi
   143de:	push   eax
   143df:	xor    ebx,ebx
   143e1:	call   DWORD PTR ds:0x1b92c
   143e7:	test   eax,eax
   143e9:	jge    0x143ef
   143eb:	xor    eax,eax
   143ed:	jmp    0x14415
   143ef:	lea    eax,[ebp+0x8]
   143f2:	push   eax
   143f3:	lea    eax,[ebp-0x4]
   143f6:	push   eax
   143f7:	mov    ecx,esi
   143f9:	call   0x12c16
   143fe:	mov    eax,DWORD PTR [ebp-0x4]
   14401:	cmp    eax,DWORD PTR [esi+0x4]
   14404:	je     0x14409
   14406:	mov    ebx,DWORD PTR [eax+0x10]
   14409:	push   edi
   1440a:	push   DWORD PTR [esi+0x10]
   1440d:	call   DWORD PTR ds:0x1b928
   14413:	mov    eax,ebx
   14415:	pop    edi
   14416:	pop    esi
   14417:	pop    ebx
   14418:	leave  
   14419:	ret    0x4
   1441c:	int3   
   1441d:	int3   
   1441e:	int3   
   1441f:	int3   
   14420:	int3   
   14421:	int3   
   14422:	mov    edi,edi
   14424:	push   ebp
   14425:	mov    ebp,esp
   14427:	mov    ecx,DWORD PTR ds:0x70ac0
   1442d:	push   esi
   1442e:	push   DWORD PTR [ebp+0x8]
   14431:	lea    eax,[ebp+0x8]
   14434:	push   eax
   14435:	call   0x12c58
   1443a:	mov    esi,DWORD PTR [ebp+0x8]
   1443d:	mov    eax,ds:0x70ac0
   14442:	cmp    esi,DWORD PTR [eax+0x4]
   14445:	jne    0x1444b
   14447:	xor    al,al
   14449:	jmp    0x14495
   1444b:	mov    ecx,DWORD PTR [ebp+0xc]
   1444e:	lea    eax,[esi+0x20]
   14451:	push   eax
   14452:	call   0x11f6c
   14457:	mov    ecx,DWORD PTR [ebp+0x10]
   1445a:	lea    eax,[esi+0x28]
   1445d:	push   eax
   1445e:	call   0x11f6c
   14463:	mov    ecx,DWORD PTR [ebp+0x14]
   14466:	lea    eax,[esi+0x30]
   14469:	push   eax
   1446a:	call   0x11f6c
   1446f:	mov    eax,DWORD PTR [esi+0x38]
   14472:	mov    ecx,DWORD PTR [ebp+0x18]
   14475:	mov    DWORD PTR [ecx],eax
   14477:	mov    ecx,DWORD PTR [esi+0x40]
   1447a:	mov    eax,DWORD PTR [ebp+0x1c]
   1447d:	mov    DWORD PTR [eax],ecx
   1447f:	mov    ecx,DWORD PTR [esi+0x44]
   14482:	mov    DWORD PTR [eax+0x4],ecx
   14485:	mov    ecx,DWORD PTR [esi+0x48]
   14488:	mov    eax,DWORD PTR [ebp+0x20]
   1448b:	mov    DWORD PTR [eax],ecx
   1448d:	mov    ecx,DWORD PTR [esi+0x4c]
   14490:	mov    DWORD PTR [eax+0x4],ecx
   14493:	mov    al,0x1
   14495:	pop    esi
   14496:	pop    ebp
   14497:	ret    0x1c
   1449a:	int3   
   1449b:	int3   
   1449c:	int3   
   1449d:	int3   
   1449e:	int3   
   1449f:	int3   
   144a0:	push   0x30
   144a2:	push   0x6fdc8
   144a7:	call   0x1a7f4
   144ac:	xor    esi,esi
   144ae:	push   esi
   144af:	push   esi
   144b0:	push   esi
   144b1:	push   esi
   144b2:	push   0x70138
   144b7:	call   DWORD PTR ds:0x1b92c
   144bd:	cmp    eax,esi
   144bf:	jl     0x14602
   144c5:	mov    DWORD PTR [ebp-0x4],esi
   144c8:	push   0xffffffff
   144ca:	mov    esi,0x1abe8
   144cf:	push   esi
   144d0:	lea    ecx,[ebp-0x38]
   144d3:	call   0x11274
   144d8:	push   0xffffffff
   144da:	push   esi
   144db:	lea    ecx,[ebp-0x30]
   144de:	call   0x11274
   144e3:	push   0xffffffff
   144e5:	push   esi
   144e6:	lea    ecx,[ebp-0x28]
   144e9:	call   0x11274
   144ee:	lea    eax,[ebp-0x40]
   144f1:	push   eax
   144f2:	lea    eax,[ebp-0x20]
   144f5:	push   eax
   144f6:	lea    eax,[ebp+0x8]
   144f9:	push   eax
   144fa:	lea    eax,[ebp-0x28]
   144fd:	push   eax
   144fe:	lea    eax,[ebp-0x30]
   14501:	push   eax
   14502:	lea    eax,[ebp-0x38]
   14505:	push   eax
   14506:	mov    edi,DWORD PTR [ebp+0x8]
   14509:	push   edi
   1450a:	call   0x14422
   1450f:	test   al,al
   14511:	jne    0x14522
   14513:	mov    eax,DWORD PTR [ebp+0xc]
   14516:	mov    DWORD PTR [eax+0x8],0x1
   1451d:	jmp    0x145c0
   14522:	mov    edx,DWORD PTR [edi+0x4]
   14525:	mov    eax,DWORD PTR [ebp-0x34]
   14528:	lea    esi,[eax+edx*1+0x2]
   1452c:	mov    eax,DWORD PTR [ebp-0x2c]
   1452f:	lea    ebx,[eax+esi*1+0x1]
   14533:	mov    eax,DWORD PTR [ebp-0x24]
   14536:	lea    ecx,[eax+ebx*1+0x1]
   1453a:	mov    eax,DWORD PTR [ebp+0xc]
   1453d:	cmp    ecx,DWORD PTR [eax]
   1453f:	jbe    0x1454c
   14541:	mov    DWORD PTR [eax],ecx
   14543:	mov    DWORD PTR [eax+0x8],0x2
   1454a:	jmp    0x145c0
   1454c:	and    DWORD PTR [eax+0x8],0x0
   14550:	mov    ecx,DWORD PTR [ebp+0x8]
   14553:	mov    DWORD PTR [eax+0xc],ecx
   14556:	mov    ecx,DWORD PTR [ebp-0x20]
   14559:	mov    DWORD PTR [eax+0x10],ecx
   1455c:	mov    ecx,DWORD PTR [ebp-0x1c]
   1455f:	mov    DWORD PTR [eax+0x14],ecx
   14562:	mov    ecx,DWORD PTR [ebp-0x40]
   14565:	mov    DWORD PTR [eax+0x18],ecx
   14568:	mov    ecx,DWORD PTR [ebp-0x3c]
   1456b:	mov    DWORD PTR [eax+0x1c],ecx
   1456e:	mov    ecx,DWORD PTR [edi]
   14570:	mov    DWORD PTR [ebp+0x8],ecx
   14573:	lea    ecx,[eax+0x20]
   14576:	mov    DWORD PTR [ebp-0x1c],ecx
   14579:	mov    ecx,DWORD PTR [ebp+0x8]
   1457c:	mov    cl,BYTE PTR [ecx]
   1457e:	mov    edi,DWORD PTR [ebp-0x1c]
   14581:	mov    BYTE PTR [edi],cl
   14583:	inc    DWORD PTR [ebp+0x8]
   14586:	inc    DWORD PTR [ebp-0x1c]
   14589:	test   cl,cl
   1458b:	jne    0x14579
   1458d:	mov    ecx,DWORD PTR [ebp-0x38]
   14590:	lea    edi,[edx+eax*1+0x21]
   14594:	mov    dl,BYTE PTR [ecx]
   14596:	mov    BYTE PTR [edi],dl
   14598:	inc    ecx
   14599:	inc    edi
   1459a:	test   dl,dl
   1459c:	jne    0x14594
   1459e:	mov    edx,DWORD PTR [ebp-0x30]
   145a1:	lea    esi,[esi+eax*1+0x20]
   145a5:	mov    cl,BYTE PTR [edx]
   145a7:	mov    BYTE PTR [esi],cl
   145a9:	inc    edx
   145aa:	inc    esi
   145ab:	test   cl,cl
   145ad:	jne    0x145a5
   145af:	mov    edx,DWORD PTR [ebp-0x28]
   145b2:	lea    eax,[ebx+eax*1+0x20]
   145b6:	mov    cl,BYTE PTR [edx]
   145b8:	mov    BYTE PTR [eax],cl
   145ba:	inc    edx
   145bb:	inc    eax
   145bc:	test   cl,cl
   145be:	jne    0x145b6
   145c0:	push   DWORD PTR [ebp-0x28]
   145c3:	call   0x10832
   145c8:	push   DWORD PTR [ebp-0x30]
   145cb:	call   0x10832
   145d0:	push   DWORD PTR [ebp-0x38]
   145d3:	call   0x10832
   145d8:	add    esp,0xc
   145db:	jmp    0x145ee
   145dd:	xor    eax,eax
   145df:	inc    eax
   145e0:	ret    
   145e1:	mov    esp,DWORD PTR [ebp-0x18]
   145e4:	mov    eax,DWORD PTR [ebp+0xc]
   145e7:	mov    DWORD PTR [eax+0x8],0x4
   145ee:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   145f5:	push   0x0
   145f7:	push   0x70138
   145fc:	call   DWORD PTR ds:0x1b928
   14602:	call   0x1a839
   14607:	ret    0x8
   1460a:	int3   
   1460b:	int3   
   1460c:	int3   
   1460d:	int3   
   1460e:	int3   
   1460f:	int3   
   14610:	push   0x10
   14612:	push   0x6fde8
   14617:	call   0x1a7f4
   1461c:	xor    ebx,ebx
   1461e:	push   ebx
   1461f:	push   ebx
   14620:	push   ebx
   14621:	push   ebx
   14622:	push   0x70138
   14627:	call   DWORD PTR ds:0x1b92c
   1462d:	cmp    eax,ebx
   1462f:	jl     0x146ec
   14635:	mov    DWORD PTR [ebp-0x4],ebx
   14638:	push   0xffffffff
   1463a:	push   0x1abe8
   1463f:	lea    ecx,[ebp-0x20]
   14642:	call   0x11274
   14647:	mov    esi,DWORD PTR [ebp+0x8]
   1464a:	push   esi
   1464b:	lea    eax,[ebp+0x8]
   1464e:	push   eax
   1464f:	mov    ecx,DWORD PTR ds:0x70108
   14655:	call   0x1374e
   1465a:	mov    eax,ds:0x70108
   1465f:	mov    eax,DWORD PTR [eax+0x4]
   14662:	mov    ecx,DWORD PTR [ebp+0x8]
   14665:	cmp    ecx,eax
   14667:	je     0x14675
   14669:	add    ecx,0x14
   1466c:	push   ecx
   1466d:	lea    ecx,[ebp-0x20]
   14670:	call   0x11f6c
   14675:	mov    edx,DWORD PTR [esi+0x4]
   14678:	mov    eax,DWORD PTR [ebp-0x1c]
   1467b:	lea    ecx,[eax+edx*1+0x2]
   1467f:	mov    eax,DWORD PTR [ebp+0xc]
   14682:	cmp    ecx,DWORD PTR [eax]
   14684:	jbe    0x14691
   14686:	mov    DWORD PTR [eax],ecx
   14688:	mov    DWORD PTR [eax+0x8],0x2
   1468f:	jmp    0x146b4
   14691:	mov    DWORD PTR [eax+0x8],ebx
   14694:	mov    esi,DWORD PTR [esi]
   14696:	lea    edi,[eax+0xc]
   14699:	mov    cl,BYTE PTR [esi]
   1469b:	mov    BYTE PTR [edi],cl
   1469d:	inc    esi
   1469e:	inc    edi
   1469f:	cmp    cl,bl
   146a1:	jne    0x14699
   146a3:	mov    esi,DWORD PTR [ebp-0x20]
   146a6:	lea    eax,[edx+eax*1+0xd]
   146aa:	mov    cl,BYTE PTR [esi]
   146ac:	mov    BYTE PTR [eax],cl
   146ae:	inc    esi
   146af:	inc    eax
   146b0:	cmp    cl,bl
   146b2:	jne    0x146aa
   146b4:	push   DWORD PTR [ebp-0x20]
   146b7:	call   0x10832
   146bc:	pop    ecx
   146bd:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   146c4:	jmp    0x146e0
   146c6:	xor    eax,eax
   146c8:	inc    eax
   146c9:	ret    
   146ca:	mov    esp,DWORD PTR [ebp-0x18]
   146cd:	mov    eax,DWORD PTR [ebp+0xc]
   146d0:	mov    DWORD PTR [eax+0x8],0x4
   146d7:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   146de:	xor    ebx,ebx
   146e0:	push   ebx
   146e1:	push   0x70138
   146e6:	call   DWORD PTR ds:0x1b928
   146ec:	call   0x1a839
   146f1:	ret    0x8
   146f4:	int3   
   146f5:	int3   
   146f6:	int3   
   146f7:	int3   
   146f8:	int3   
   146f9:	int3   
   146fa:	push   0xc
   146fc:	push   0x6fe08
   14701:	call   0x1a7f4
   14706:	xor    edi,edi
   14708:	push   edi
   14709:	push   edi
   1470a:	push   edi
   1470b:	push   edi
   1470c:	push   0x70138
   14711:	call   DWORD PTR ds:0x1b92c
   14717:	cmp    eax,edi
   14719:	jl     0x147c8
   1471f:	mov    DWORD PTR [ebp-0x4],edi
   14722:	lea    eax,[ebp+0x8]
   14725:	push   eax
   14726:	lea    eax,[ebp-0x1c]
   14729:	push   eax
   1472a:	mov    esi,DWORD PTR ds:0x70194
   14730:	mov    ecx,esi
   14732:	call   0x12ce8
   14737:	mov    esi,DWORD PTR [esi+0x4]
   1473a:	mov    ecx,DWORD PTR [ebp-0x1c]
   1473d:	cmp    ecx,esi
   1473f:	jne    0x1474d
   14741:	mov    eax,DWORD PTR [ebp+0xc]
   14744:	mov    DWORD PTR [eax+0x8],0x1
   1474b:	jmp    0x14799
   1474d:	mov    eax,DWORD PTR [ecx+0x10]
   14750:	cmp    eax,edi
   14752:	jne    0x14758
   14754:	xor    edx,edx
   14756:	jmp    0x1475b
   14758:	mov    edx,DWORD PTR [eax+0x8]
   1475b:	mov    eax,DWORD PTR [ebp+0xc]
   1475e:	cmp    edx,DWORD PTR [eax]
   14760:	jbe    0x1476d
   14762:	mov    DWORD PTR [eax],edx
   14764:	mov    DWORD PTR [eax+0x8],0x2
   1476b:	jmp    0x14799
   1476d:	mov    DWORD PTR [eax+0x8],edi
   14770:	mov    edx,DWORD PTR [ecx+0x10]
   14773:	cmp    edx,edi
   14775:	jne    0x1477b
   14777:	xor    edx,edx
   14779:	jmp    0x1477e
   1477b:	mov    edx,DWORD PTR [edx+0x8]
   1477e:	mov    ecx,DWORD PTR [ecx+0x10]
   14781:	cmp    ecx,edi
   14783:	jne    0x14789
   14785:	xor    ecx,ecx
   14787:	jmp    0x1478b
   14789:	mov    ecx,DWORD PTR [ecx]
   1478b:	push   edx
   1478c:	push   ecx
   1478d:	add    eax,0xc
   14790:	push   eax
   14791:	call   0x1a7b6
   14796:	add    esp,0xc
   14799:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   147a0:	jmp    0x147bc
   147a2:	xor    eax,eax
   147a4:	inc    eax
   147a5:	ret    
   147a6:	mov    esp,DWORD PTR [ebp-0x18]
   147a9:	mov    eax,DWORD PTR [ebp+0xc]
   147ac:	mov    DWORD PTR [eax+0x8],0x4
   147b3:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   147ba:	xor    edi,edi
   147bc:	push   edi
   147bd:	push   0x70138
   147c2:	call   DWORD PTR ds:0x1b928
   147c8:	call   0x1a839
   147cd:	ret    0x8
   147d0:	int3   
   147d1:	int3   
   147d2:	int3   
   147d3:	int3   
   147d4:	int3   
   147d5:	int3   
   147d6:	mov    edi,edi
   147d8:	push   ebp
   147d9:	mov    ebp,esp
   147db:	push   ecx
   147dc:	push   ecx
   147dd:	push   DWORD PTR [ebp+0xc]
   147e0:	lea    eax,[ebp-0x8]
   147e3:	push   eax
   147e4:	call   0x13832
   147e9:	mov    eax,DWORD PTR [ebp+0x8]
   147ec:	mov    ecx,DWORD PTR [ebp-0x8]
   147ef:	mov    DWORD PTR [eax],ecx
   147f1:	mov    cl,BYTE PTR [ebp-0x4]
   147f4:	mov    BYTE PTR [eax+0x4],cl
   147f7:	leave  
   147f8:	ret    0x8
   147fb:	int3   
   147fc:	int3   
   147fd:	int3   
   147fe:	int3   
   147ff:	int3   
   14800:	mov    edi,edi
   14802:	push   ebp
   14803:	mov    ebp,esp
   14805:	push   ecx
   14806:	push   ecx
   14807:	push   DWORD PTR [ebp+0x8]
   1480a:	lea    eax,[ebp-0x8]
   1480d:	push   eax
   1480e:	call   0x13016
   14813:	and    DWORD PTR [ebp+0x8],0x0
   14817:	lea    eax,[ebp+0x8]
   1481a:	push   eax
   1481b:	push   DWORD PTR [ebp-0x4]
   1481e:	push   DWORD PTR [ebp-0x8]
   14821:	call   0x143a8
   14826:	mov    eax,DWORD PTR [ebp+0x8]
   14829:	add    esp,0xc
   1482c:	leave  
   1482d:	ret    0x4
   14830:	int3   
   14831:	int3   
   14832:	int3   
   14833:	int3   
   14834:	int3   
   14835:	int3   
   14836:	mov    edi,edi
   14838:	push   ebp
   14839:	mov    ebp,esp
   1483b:	push   ecx
   1483c:	push   ecx
   1483d:	push   esi
   1483e:	push   DWORD PTR [ebp+0x8]
   14841:	lea    eax,[ebp-0x8]
   14844:	push   eax
   14845:	mov    esi,ecx
   14847:	call   0x130aa
   1484c:	and    DWORD PTR [ebp+0x8],0x0
   14850:	lea    eax,[ebp+0x8]
   14853:	push   eax
   14854:	push   DWORD PTR [ebp-0x4]
   14857:	push   DWORD PTR [ebp-0x8]
   1485a:	call   0x12b42
   1485f:	add    esp,0xc
   14862:	push   DWORD PTR [ebp-0x4]
   14865:	lea    eax,[ebp-0x4]
   14868:	push   DWORD PTR [ebp-0x8]
   1486b:	mov    ecx,esi
   1486d:	push   eax
   1486e:	call   0x138ca
   14873:	mov    eax,DWORD PTR [ebp+0x8]
   14876:	pop    esi
   14877:	leave  
   14878:	ret    0x4
   1487b:	int3   
   1487c:	int3   
   1487d:	int3   
   1487e:	int3   
   1487f:	int3   
   14880:	mov    edi,edi
   14882:	push   ebp
   14883:	mov    ebp,esp
   14885:	push   ecx
   14886:	push   ebx
   14887:	push   esi
   14888:	push   edi
   14889:	mov    edi,ecx
   1488b:	mov    eax,DWORD PTR [edi+0x4]
   1488e:	mov    esi,DWORD PTR [eax+0x4]
   14891:	mov    ebx,eax
   14893:	mov    al,0x1
   14895:	jmp    0x148b0
   14897:	lea    eax,[esi+0x10]
   1489a:	push   eax
   1489b:	push   DWORD PTR [ebp+0xc]
   1489e:	mov    ebx,esi
   148a0:	call   0x17b04
   148a5:	test   al,al
   148a7:	je     0x148ad
   148a9:	mov    esi,DWORD PTR [esi]
   148ab:	jmp    0x148b0
   148ad:	mov    esi,DWORD PTR [esi+0x8]
   148b0:	cmp    esi,DWORD PTR ds:0x70c90
   148b6:	jne    0x14897
   148b8:	cmp    BYTE PTR [edi+0x8],0x0
   148bc:	je     0x148d9
   148be:	push   DWORD PTR [ebp+0xc]
   148c1:	lea    eax,[ebp+0xc]
   148c4:	push   ebx
   148c5:	push   esi
   148c6:	push   eax
   148c7:	mov    ecx,edi
   148c9:	call   0x13baa
   148ce:	mov    ecx,DWORD PTR [eax]
   148d0:	mov    eax,DWORD PTR [ebp+0x8]
   148d3:	mov    BYTE PTR [eax+0x4],0x1
   148d7:	jmp    0x1490c
   148d9:	mov    DWORD PTR [ebp-0x4],ebx
   148dc:	test   al,al
   148de:	je     0x148ef
   148e0:	mov    eax,DWORD PTR [edi+0x4]
   148e3:	cmp    ebx,DWORD PTR [eax]
   148e5:	je     0x148be
   148e7:	lea    ecx,[ebp-0x4]
   148ea:	call   0x1151c
   148ef:	push   DWORD PTR [ebp+0xc]
   148f2:	mov    eax,DWORD PTR [ebp-0x4]
   148f5:	add    eax,0x10
   148f8:	push   eax
   148f9:	call   0x17b04
   148fe:	test   al,al
   14900:	jne    0x148be
   14902:	mov    eax,DWORD PTR [ebp+0x8]
   14905:	mov    ecx,DWORD PTR [ebp-0x4]
   14908:	mov    BYTE PTR [eax+0x4],0x0
   1490c:	pop    edi
   1490d:	pop    esi
   1490e:	mov    DWORD PTR [eax],ecx
   14910:	pop    ebx
   14911:	leave  
   14912:	ret    0x8
   14915:	int3   
   14916:	int3   
   14917:	int3   
   14918:	int3   
   14919:	int3   
   1491a:	mov    edi,edi
   1491c:	push   ebp
   1491d:	mov    ebp,esp
   1491f:	push   ecx
   14920:	push   esi
   14921:	mov    esi,ecx
   14923:	cmp    DWORD PTR [esi+0xc],0x0
   14927:	mov    ecx,DWORD PTR [ebp+0xc]
   1492a:	je     0x14964
   1492c:	mov    eax,DWORD PTR [esi+0x4]
   1492f:	cmp    ecx,DWORD PTR [eax]
   14931:	jne    0x14964
   14933:	cmp    DWORD PTR [ebp+0x10],eax
   14936:	jne    0x14964
   14938:	push   DWORD PTR [eax+0x4]
   1493b:	mov    ecx,esi
   1493d:	call   0x133cc
   14942:	mov    ecx,DWORD PTR ds:0x70c90
   14948:	mov    eax,DWORD PTR [esi+0x4]
   1494b:	mov    DWORD PTR [eax+0x4],ecx
   1494e:	mov    eax,DWORD PTR [esi+0x4]
   14951:	and    DWORD PTR [esi+0xc],0x0
   14955:	mov    DWORD PTR [eax],eax
   14957:	mov    eax,DWORD PTR [esi+0x4]
   1495a:	mov    DWORD PTR [eax+0x8],eax
   1495d:	mov    eax,DWORD PTR [esi+0x4]
   14960:	mov    ecx,DWORD PTR [eax]
   14962:	jmp    0x14989
   14964:	cmp    ecx,DWORD PTR [ebp+0x10]
   14967:	je     0x14989
   14969:	push   edi
   1496a:	mov    edi,ecx
   1496c:	lea    ecx,[ebp+0xc]
   1496f:	call   0x129ce
   14974:	push   edi
   14975:	lea    eax,[ebp-0x4]
   14978:	push   eax
   14979:	mov    ecx,esi
   1497b:	call   0x13948
   14980:	mov    ecx,DWORD PTR [ebp+0xc]
   14983:	cmp    ecx,DWORD PTR [ebp+0x10]
   14986:	jne    0x1496a
   14988:	pop    edi
   14989:	mov    eax,DWORD PTR [ebp+0x8]
   1498c:	mov    DWORD PTR [eax],ecx
   1498e:	pop    esi
   1498f:	leave  
   14990:	ret    0xc
   14993:	int3   
   14994:	int3   
   14995:	int3   
   14996:	int3   
   14997:	int3   
   14998:	mov    edi,edi
   1499a:	push   ebp
   1499b:	mov    ebp,esp
   1499d:	push   ecx
   1499e:	push   ebx
   1499f:	push   esi
   149a0:	push   edi
   149a1:	mov    edi,ecx
   149a3:	mov    eax,DWORD PTR [edi+0x4]
   149a6:	mov    esi,DWORD PTR [eax+0x4]
   149a9:	mov    ebx,eax
   149ab:	mov    al,0x1
   149ad:	jmp    0x149c8
   149af:	lea    eax,[esi+0xc]
   149b2:	push   eax
   149b3:	push   DWORD PTR [ebp+0xc]
   149b6:	mov    ebx,esi
   149b8:	call   0x17b04
   149bd:	test   al,al
   149bf:	je     0x149c5
   149c1:	mov    esi,DWORD PTR [esi]
   149c3:	jmp    0x149c8
   149c5:	mov    esi,DWORD PTR [esi+0x8]
   149c8:	cmp    esi,DWORD PTR ds:0x70c94
   149ce:	jne    0x149af
   149d0:	cmp    BYTE PTR [edi+0x8],0x0
   149d4:	je     0x149f1
   149d6:	push   DWORD PTR [ebp+0xc]
   149d9:	lea    eax,[ebp+0xc]
   149dc:	push   ebx
   149dd:	push   esi
   149de:	push   eax
   149df:	mov    ecx,edi
   149e1:	call   0x13d00
   149e6:	mov    ecx,DWORD PTR [eax]
   149e8:	mov    eax,DWORD PTR [ebp+0x8]
   149eb:	mov    BYTE PTR [eax+0x4],0x1
   149ef:	jmp    0x14a24
   149f1:	mov    DWORD PTR [ebp-0x4],ebx
   149f4:	test   al,al
   149f6:	je     0x14a07
   149f8:	mov    eax,DWORD PTR [edi+0x4]
   149fb:	cmp    ebx,DWORD PTR [eax]
   149fd:	je     0x149d6
   149ff:	lea    ecx,[ebp-0x4]
   14a02:	call   0x115a0
   14a07:	push   DWORD PTR [ebp+0xc]
   14a0a:	mov    eax,DWORD PTR [ebp-0x4]
   14a0d:	add    eax,0xc
   14a10:	push   eax
   14a11:	call   0x17b04
   14a16:	test   al,al
   14a18:	jne    0x149d6
   14a1a:	mov    eax,DWORD PTR [ebp+0x8]
   14a1d:	mov    ecx,DWORD PTR [ebp-0x4]
   14a20:	mov    BYTE PTR [eax+0x4],0x0
   14a24:	pop    edi
   14a25:	pop    esi
   14a26:	mov    DWORD PTR [eax],ecx
   14a28:	pop    ebx
   14a29:	leave  
   14a2a:	ret    0x8
   14a2d:	int3   
   14a2e:	int3   
   14a2f:	int3   
   14a30:	int3   
   14a31:	int3   
   14a32:	mov    edi,edi
   14a34:	push   ebp
   14a35:	mov    ebp,esp
   14a37:	push   ecx
   14a38:	push   ebx
   14a39:	push   esi
   14a3a:	push   edi
   14a3b:	mov    edi,ecx
   14a3d:	mov    eax,DWORD PTR [edi+0x4]
   14a40:	mov    esi,DWORD PTR [eax+0x4]
   14a43:	mov    ebx,eax
   14a45:	mov    eax,ds:0x70c98
   14a4a:	mov    dl,0x1
   14a4c:	cmp    esi,eax
   14a4e:	je     0x14a6c
   14a50:	mov    ecx,DWORD PTR [ebp+0xc]
   14a53:	mov    ecx,DWORD PTR [ecx]
   14a55:	cmp    ecx,DWORD PTR [esi+0xc]
   14a58:	mov    ebx,esi
   14a5a:	setl   dl
   14a5d:	test   dl,dl
   14a5f:	je     0x14a65
   14a61:	mov    esi,DWORD PTR [esi]
   14a63:	jmp    0x14a68
   14a65:	mov    esi,DWORD PTR [esi+0x8]
   14a68:	cmp    esi,eax
   14a6a:	jne    0x14a55
   14a6c:	cmp    BYTE PTR [edi+0x8],0x0
   14a70:	je     0x14a8d
   14a72:	push   DWORD PTR [ebp+0xc]
   14a75:	push   ebx
   14a76:	push   esi
   14a77:	lea    eax,[ebp+0xc]
   14a7a:	push   eax
   14a7b:	mov    ecx,edi
   14a7d:	call   0x14102
   14a82:	mov    ecx,DWORD PTR [eax]
   14a84:	mov    eax,DWORD PTR [ebp+0x8]
   14a87:	mov    BYTE PTR [eax+0x4],0x1
   14a8b:	jmp    0x14abc
   14a8d:	mov    ecx,ebx
   14a8f:	mov    DWORD PTR [ebp-0x4],ecx
   14a92:	test   dl,dl
   14a94:	je     0x14aa8
   14a96:	mov    eax,DWORD PTR [edi+0x4]
   14a99:	cmp    ebx,DWORD PTR [eax]
   14a9b:	je     0x14a72
   14a9d:	lea    ecx,[ebp-0x4]
   14aa0:	call   0x11624
   14aa5:	mov    ecx,DWORD PTR [ebp-0x4]
   14aa8:	mov    edx,DWORD PTR [ecx+0xc]
   14aab:	mov    eax,DWORD PTR [ebp+0xc]
   14aae:	cmp    edx,DWORD PTR [eax]
   14ab0:	jge    0x14ab5
   14ab2:	push   eax
   14ab3:	jmp    0x14a75
   14ab5:	mov    eax,DWORD PTR [ebp+0x8]
   14ab8:	mov    BYTE PTR [eax+0x4],0x0
   14abc:	pop    edi
   14abd:	pop    esi
   14abe:	mov    DWORD PTR [eax],ecx
   14ac0:	pop    ebx
   14ac1:	leave  
   14ac2:	ret    0x8
   14ac5:	int3   
   14ac6:	int3   
   14ac7:	int3   
   14ac8:	int3   
   14ac9:	int3   
   14aca:	mov    edi,edi
   14acc:	push   ebp
   14acd:	mov    ebp,esp
   14acf:	push   ecx
   14ad0:	push   esi
   14ad1:	mov    esi,ecx
   14ad3:	cmp    DWORD PTR [esi+0xc],0x0
   14ad7:	mov    ecx,DWORD PTR [ebp+0xc]
   14ada:	je     0x14b14
   14adc:	mov    eax,DWORD PTR [esi+0x4]
   14adf:	cmp    ecx,DWORD PTR [eax]
   14ae1:	jne    0x14b14
   14ae3:	cmp    DWORD PTR [ebp+0x10],eax
   14ae6:	jne    0x14b14
   14ae8:	push   DWORD PTR [eax+0x4]
   14aeb:	mov    ecx,esi
   14aed:	call   0x140b8
   14af2:	mov    ecx,DWORD PTR ds:0x70c98
   14af8:	mov    eax,DWORD PTR [esi+0x4]
   14afb:	mov    DWORD PTR [eax+0x4],ecx
   14afe:	mov    eax,DWORD PTR [esi+0x4]
   14b01:	and    DWORD PTR [esi+0xc],0x0
   14b05:	mov    DWORD PTR [eax],eax
   14b07:	mov    eax,DWORD PTR [esi+0x4]
   14b0a:	mov    DWORD PTR [eax+0x8],eax
   14b0d:	mov    eax,DWORD PTR [esi+0x4]
   14b10:	mov    ecx,DWORD PTR [eax]
   14b12:	jmp    0x14b39
   14b14:	cmp    ecx,DWORD PTR [ebp+0x10]
   14b17:	je     0x14b39
   14b19:	push   edi
   14b1a:	mov    edi,ecx
   14b1c:	lea    ecx,[ebp+0xc]
   14b1f:	call   0x1169a
   14b24:	push   edi
   14b25:	lea    eax,[ebp-0x4]
   14b28:	push   eax
   14b29:	mov    ecx,esi
   14b2b:	call   0x13e56
   14b30:	mov    ecx,DWORD PTR [ebp+0xc]
   14b33:	cmp    ecx,DWORD PTR [ebp+0x10]
   14b36:	jne    0x14b1a
   14b38:	pop    edi
   14b39:	mov    eax,DWORD PTR [ebp+0x8]
   14b3c:	mov    DWORD PTR [eax],ecx
   14b3e:	pop    esi
   14b3f:	leave  
   14b40:	ret    0xc
   14b43:	int3   
   14b44:	int3   
   14b45:	int3   
   14b46:	int3   
   14b47:	int3   
   14b48:	mov    edi,edi
   14b4a:	push   ebp
   14b4b:	mov    ebp,esp
   14b4d:	push   ecx
   14b4e:	push   ebx
   14b4f:	push   esi
   14b50:	push   edi
   14b51:	mov    edi,ecx
   14b53:	mov    eax,DWORD PTR [edi+0x4]
   14b56:	mov    esi,DWORD PTR [eax+0x4]
   14b59:	mov    ebx,eax
   14b5b:	mov    al,0x1
   14b5d:	jmp    0x14b78
   14b5f:	lea    eax,[esi+0xc]
   14b62:	push   eax
   14b63:	push   DWORD PTR [ebp+0xc]
   14b66:	mov    ebx,esi
   14b68:	call   0x17b34
   14b6d:	test   al,al
   14b6f:	je     0x14b75
   14b71:	mov    esi,DWORD PTR [esi]
   14b73:	jmp    0x14b78
   14b75:	mov    esi,DWORD PTR [esi+0x8]
   14b78:	cmp    esi,DWORD PTR ds:0x70ca0
   14b7e:	jne    0x14b5f
   14b80:	cmp    BYTE PTR [edi+0x8],0x0
   14b84:	je     0x14ba1
   14b86:	push   DWORD PTR [ebp+0xc]
   14b89:	lea    eax,[ebp+0xc]
   14b8c:	push   ebx
   14b8d:	push   esi
   14b8e:	push   eax
   14b8f:	mov    ecx,edi
   14b91:	call   0x14252
   14b96:	mov    ecx,DWORD PTR [eax]
   14b98:	mov    eax,DWORD PTR [ebp+0x8]
   14b9b:	mov    BYTE PTR [eax+0x4],0x1
   14b9f:	jmp    0x14bd4
   14ba1:	mov    DWORD PTR [ebp-0x4],ebx
   14ba4:	test   al,al
   14ba6:	je     0x14bb7
   14ba8:	mov    eax,DWORD PTR [edi+0x4]
   14bab:	cmp    ebx,DWORD PTR [eax]
   14bad:	je     0x14b86
   14baf:	lea    ecx,[ebp-0x4]
   14bb2:	call   0x126b2
   14bb7:	push   DWORD PTR [ebp+0xc]
   14bba:	mov    eax,DWORD PTR [ebp-0x4]
   14bbd:	add    eax,0xc
   14bc0:	push   eax
   14bc1:	call   0x17b34
   14bc6:	test   al,al
   14bc8:	jne    0x14b86
   14bca:	mov    eax,DWORD PTR [ebp+0x8]
   14bcd:	mov    ecx,DWORD PTR [ebp-0x4]
   14bd0:	mov    BYTE PTR [eax+0x4],0x0
   14bd4:	pop    edi
   14bd5:	pop    esi
   14bd6:	mov    DWORD PTR [eax],ecx
   14bd8:	pop    ebx
   14bd9:	leave  
   14bda:	ret    0x8
   14bdd:	int3   
   14bde:	int3   
   14bdf:	int3   
   14be0:	int3   
   14be1:	int3   
   14be2:	mov    edi,edi
   14be4:	push   ebp
   14be5:	mov    ebp,esp
   14be7:	push   esi
   14be8:	push   edi
   14be9:	xor    edi,edi
   14beb:	push   edi
   14bec:	push   edi
   14bed:	push   edi
   14bee:	mov    esi,ecx
   14bf0:	mov    eax,DWORD PTR [esi+0x10]
   14bf3:	push   edi
   14bf4:	push   eax
   14bf5:	call   DWORD PTR ds:0x1b92c
   14bfb:	test   eax,eax
   14bfd:	jl     0x14c14
   14bff:	lea    eax,[ebp+0x8]
   14c02:	push   eax
   14c03:	mov    ecx,esi
   14c05:	call   0x137e8
   14c0a:	push   edi
   14c0b:	push   DWORD PTR [esi+0x10]
   14c0e:	call   DWORD PTR ds:0x1b928
   14c14:	pop    edi
   14c15:	pop    esi
   14c16:	pop    ebp
   14c17:	ret    0x4
   14c1a:	int3   
   14c1b:	int3   
   14c1c:	int3   
   14c1d:	int3   
   14c1e:	int3   
   14c1f:	int3   
   14c20:	mov    edi,edi
   14c22:	push   ebp
   14c23:	mov    ebp,esp
   14c25:	sub    esp,0x10
   14c28:	mov    eax,DWORD PTR [ebp+0x8]
   14c2b:	mov    eax,DWORD PTR [eax]
   14c2d:	and    DWORD PTR [ebp-0x4],0x0
   14c31:	mov    DWORD PTR [ebp-0x8],eax
   14c34:	lea    eax,[ebp-0x8]
   14c37:	push   eax
   14c38:	lea    eax,[ebp-0x10]
   14c3b:	push   eax
   14c3c:	call   0x147d6
   14c41:	mov    eax,DWORD PTR [eax]
   14c43:	add    eax,0x10
   14c46:	leave  
   14c47:	ret    0x4
   14c4a:	int3   
   14c4b:	int3   
   14c4c:	int3   
   14c4d:	int3   
   14c4e:	int3   
   14c4f:	int3   
   14c50:	mov    edi,edi
   14c52:	push   esi
   14c53:	mov    esi,ecx
   14c55:	mov    BYTE PTR [esi+0x8],0x0
   14c59:	call   0x130dc
   14c5e:	mov    eax,esi
   14c60:	pop    esi
   14c61:	ret    0x8
   14c64:	int3   
   14c65:	int3   
   14c66:	int3   
   14c67:	int3   
   14c68:	int3   
   14c69:	int3   
   14c6a:	mov    edi,edi
   14c6c:	push   ebp
   14c6d:	mov    ebp,esp
   14c6f:	push   ecx
   14c70:	push   ecx
   14c71:	push   DWORD PTR [ebp+0xc]
   14c74:	lea    eax,[ebp-0x8]
   14c77:	push   eax
   14c78:	call   0x14880
   14c7d:	mov    eax,DWORD PTR [ebp+0x8]
   14c80:	mov    ecx,DWORD PTR [ebp-0x8]
   14c83:	mov    DWORD PTR [eax],ecx
   14c85:	mov    cl,BYTE PTR [ebp-0x4]
   14c88:	mov    BYTE PTR [eax+0x4],cl
   14c8b:	leave  
   14c8c:	ret    0x8
   14c8f:	int3   
   14c90:	int3   
   14c91:	int3   
   14c92:	int3   
   14c93:	int3   
   14c94:	mov    edi,edi
   14c96:	push   ebp
   14c97:	mov    ebp,esp
   14c99:	push   ecx
   14c9a:	mov    eax,DWORD PTR [ecx+0x4]
   14c9d:	mov    edx,DWORD PTR [eax]
   14c9f:	push   eax
   14ca0:	push   edx
   14ca1:	lea    eax,[ebp-0x4]
   14ca4:	push   eax
   14ca5:	call   0x1491a
   14caa:	leave  
   14cab:	ret    
   14cac:	int3   
   14cad:	int3   
   14cae:	int3   
   14caf:	int3   
   14cb0:	int3   
   14cb1:	int3   
   14cb2:	mov    edi,edi
   14cb4:	push   ebp
   14cb5:	mov    ebp,esp
   14cb7:	push   ecx
   14cb8:	push   ecx
   14cb9:	push   DWORD PTR [ebp+0xc]
   14cbc:	lea    eax,[ebp-0x8]
   14cbf:	push   eax
   14cc0:	call   0x14998
   14cc5:	mov    eax,DWORD PTR [ebp+0x8]
   14cc8:	mov    ecx,DWORD PTR [ebp-0x8]
   14ccb:	mov    DWORD PTR [eax],ecx
   14ccd:	mov    cl,BYTE PTR [ebp-0x4]
   14cd0:	mov    BYTE PTR [eax+0x4],cl
   14cd3:	leave  
   14cd4:	ret    0x8
   14cd7:	int3   
   14cd8:	int3   
   14cd9:	int3   
   14cda:	int3   
   14cdb:	int3   
   14cdc:	mov    edi,edi
   14cde:	push   ebp
   14cdf:	mov    ebp,esp
   14ce1:	push   ecx
   14ce2:	push   ecx
   14ce3:	push   DWORD PTR [ebp+0xc]
   14ce6:	lea    eax,[ebp-0x8]
   14ce9:	push   eax
   14cea:	call   0x14a32
   14cef:	mov    eax,DWORD PTR [ebp+0x8]
   14cf2:	mov    ecx,DWORD PTR [ebp-0x8]
   14cf5:	mov    DWORD PTR [eax],ecx
   14cf7:	mov    cl,BYTE PTR [ebp-0x4]
   14cfa:	mov    BYTE PTR [eax+0x4],cl
   14cfd:	leave  
   14cfe:	ret    0x8
   14d01:	int3   
   14d02:	int3   
   14d03:	int3   
   14d04:	int3   
   14d05:	int3   
   14d06:	mov    edi,edi
   14d08:	push   ebp
   14d09:	mov    ebp,esp
   14d0b:	push   ecx
   14d0c:	push   ecx
   14d0d:	push   esi
   14d0e:	push   DWORD PTR [ebp+0x8]
   14d11:	lea    eax,[ebp-0x8]
   14d14:	push   eax
   14d15:	mov    esi,ecx
   14d17:	call   0x1313e
   14d1c:	and    DWORD PTR [ebp+0x8],0x0
   14d20:	lea    eax,[ebp+0x8]
   14d23:	push   eax
   14d24:	push   DWORD PTR [ebp-0x4]
   14d27:	push   DWORD PTR [ebp-0x8]
   14d2a:	call   0x12b64
   14d2f:	add    esp,0xc
   14d32:	push   DWORD PTR [ebp-0x4]
   14d35:	lea    eax,[ebp-0x4]
   14d38:	push   DWORD PTR [ebp-0x8]
   14d3b:	mov    ecx,esi
   14d3d:	push   eax
   14d3e:	call   0x14aca
   14d43:	mov    eax,DWORD PTR [ebp+0x8]
   14d46:	pop    esi
   14d47:	leave  
   14d48:	ret    0x4
   14d4b:	int3   
   14d4c:	int3   
   14d4d:	int3   
   14d4e:	int3   
   14d4f:	int3   
   14d50:	mov    edi,edi
   14d52:	push   ebp
   14d53:	mov    ebp,esp
   14d55:	push   ecx
   14d56:	mov    eax,DWORD PTR [ecx+0x4]
   14d59:	mov    edx,DWORD PTR [eax]
   14d5b:	push   eax
   14d5c:	push   edx
   14d5d:	lea    eax,[ebp-0x4]
   14d60:	push   eax
   14d61:	call   0x14aca
   14d66:	leave  
   14d67:	ret    
   14d68:	int3   
   14d69:	int3   
   14d6a:	int3   
   14d6b:	int3   
   14d6c:	int3   
   14d6d:	int3   
   14d6e:	mov    edi,edi
   14d70:	push   ebp
   14d71:	mov    ebp,esp
   14d73:	push   ecx
   14d74:	push   ecx
   14d75:	push   DWORD PTR [ebp+0xc]
   14d78:	lea    eax,[ebp-0x8]
   14d7b:	push   eax
   14d7c:	call   0x14b48
   14d81:	mov    eax,DWORD PTR [ebp+0x8]
   14d84:	mov    ecx,DWORD PTR [ebp-0x8]
   14d87:	mov    DWORD PTR [eax],ecx
   14d89:	mov    cl,BYTE PTR [ebp-0x4]
   14d8c:	mov    BYTE PTR [eax+0x4],cl
   14d8f:	leave  
   14d90:	ret    0x8
   14d93:	int3   
   14d94:	int3   
   14d95:	int3   
   14d96:	int3   
   14d97:	int3   
   14d98:	mov    edi,edi
   14d9a:	push   esi
   14d9b:	mov    esi,ecx
   14d9d:	push   edi
   14d9e:	mov    BYTE PTR [esi+0x8],0x0
   14da2:	call   0x12fb4
   14da7:	lea    edi,[esi+0x10]
   14daa:	mov    ecx,edi
   14dac:	call   0x11ffe
   14db1:	push   0x0
   14db3:	push   DWORD PTR [edi]
   14db5:	call   DWORD PTR ds:0x1b958
   14dbb:	pop    edi
   14dbc:	mov    eax,esi
   14dbe:	pop    esi
   14dbf:	ret    
   14dc0:	int3   
   14dc1:	int3   
   14dc2:	int3   
   14dc3:	int3   
   14dc4:	int3   
   14dc5:	int3   
   14dc6:	mov    edi,edi
   14dc8:	push   ebp
   14dc9:	mov    ebp,esp
   14dcb:	push   esi
   14dcc:	push   edi
   14dcd:	xor    edi,edi
   14dcf:	push   edi
   14dd0:	push   edi
   14dd1:	push   edi
   14dd2:	mov    esi,ecx
   14dd4:	mov    eax,DWORD PTR [esi+0x10]
   14dd7:	push   edi
   14dd8:	push   eax
   14dd9:	call   DWORD PTR ds:0x1b92c
   14ddf:	test   eax,eax
   14de1:	jl     0x14dfd
   14de3:	lea    eax,[ebp+0x8]
   14de6:	push   eax
   14de7:	mov    ecx,esi
   14de9:	call   0x14c20
   14dee:	mov    ecx,DWORD PTR [ebp+0xc]
   14df1:	push   edi
   14df2:	mov    DWORD PTR [eax],ecx
   14df4:	push   DWORD PTR [esi+0x10]
   14df7:	call   DWORD PTR ds:0x1b928
   14dfd:	pop    edi
   14dfe:	pop    esi
   14dff:	pop    ebp
   14e00:	ret    0x8
   14e03:	int3   
   14e04:	int3   
   14e05:	int3   
   14e06:	int3   
   14e07:	int3   
   14e08:	mov    edi,edi
   14e0a:	push   esi
   14e0b:	mov    esi,ecx
   14e0d:	mov    BYTE PTR [esi+0x8],0x0
   14e11:	call   0x13048
   14e16:	mov    eax,esi
   14e18:	pop    esi
   14e19:	ret    0x8
   14e1c:	int3   
   14e1d:	int3   
   14e1e:	int3   
   14e1f:	int3   
   14e20:	int3   
   14e21:	int3   
   14e22:	mov    edi,edi
   14e24:	push   ebp
   14e25:	mov    ebp,esp
   14e27:	sub    esp,0x80
   14e2d:	push   esi
   14e2e:	mov    esi,ecx
   14e30:	lea    ecx,[ebp-0x40]
   14e33:	call   0x1287a
   14e38:	push   eax
   14e39:	push   DWORD PTR [ebp+0x8]
   14e3c:	lea    ecx,[ebp-0x80]
   14e3f:	call   0x12a04
   14e44:	push   eax
   14e45:	lea    eax,[ebp-0x8]
   14e48:	push   eax
   14e49:	mov    ecx,esi
   14e4b:	call   0x14c6a
   14e50:	mov    esi,DWORD PTR [eax]
   14e52:	lea    ecx,[ebp-0x80]
   14e55:	call   0x11258
   14e5a:	lea    ecx,[ebp-0x40]
   14e5d:	call   0x1122a
   14e62:	lea    eax,[esi+0x18]
   14e65:	pop    esi
   14e66:	leave  
   14e67:	ret    0x4
   14e6a:	int3   
   14e6b:	int3   
   14e6c:	int3   
   14e6d:	int3   
   14e6e:	int3   
   14e6f:	int3   
   14e70:	mov    edi,edi
   14e72:	push   ebp
   14e73:	mov    ebp,esp
   14e75:	sub    esp,0x20
   14e78:	push   esi
   14e79:	push   0xffffffff
   14e7b:	mov    esi,ecx
   14e7d:	push   0x1abe8
   14e82:	lea    ecx,[ebp-0x8]
   14e85:	call   0x11274
   14e8a:	lea    eax,[ebp-0x8]
   14e8d:	push   eax
   14e8e:	push   DWORD PTR [ebp+0x8]
   14e91:	lea    ecx,[ebp-0x20]
   14e94:	call   0x12120
   14e99:	push   eax
   14e9a:	lea    eax,[ebp-0x10]
   14e9d:	push   eax
   14e9e:	mov    ecx,esi
   14ea0:	call   0x14cb2
   14ea5:	mov    esi,DWORD PTR [eax]
   14ea7:	lea    ecx,[ebp-0x20]
   14eaa:	call   0x11318
   14eaf:	push   DWORD PTR [ebp-0x8]
   14eb2:	call   0x10832
   14eb7:	pop    ecx
   14eb8:	lea    eax,[esi+0x14]
   14ebb:	pop    esi
   14ebc:	leave  
   14ebd:	ret    0x4
   14ec0:	int3   
   14ec1:	int3   
   14ec2:	int3   
   14ec3:	int3   
   14ec4:	int3   
   14ec5:	int3   
   14ec6:	mov    edi,edi
   14ec8:	push   esi
   14ec9:	mov    esi,ecx
   14ecb:	mov    BYTE PTR [esi+0x8],0x0
   14ecf:	call   0x13170
   14ed4:	mov    eax,esi
   14ed6:	pop    esi
   14ed7:	ret    0x8
   14eda:	int3   
   14edb:	int3   
   14edc:	int3   
   14edd:	int3   
   14ede:	int3   
   14edf:	int3   
   14ee0:	mov    edi,edi
   14ee2:	push   ebp
   14ee3:	mov    ebp,esp
   14ee5:	sub    esp,0x14
   14ee8:	and    DWORD PTR [ebp-0x4],0x0
   14eec:	push   esi
   14eed:	lea    eax,[ebp-0x4]
   14ef0:	push   eax
   14ef1:	push   DWORD PTR [ebp+0x8]
   14ef4:	mov    esi,ecx
   14ef6:	lea    ecx,[ebp-0xc]
   14ef9:	call   0x12148
   14efe:	push   eax
   14eff:	lea    eax,[ebp-0x14]
   14f02:	push   eax
   14f03:	mov    ecx,esi
   14f05:	call   0x14cdc
   14f0a:	mov    ecx,DWORD PTR [ebp-0x8]
   14f0d:	mov    esi,DWORD PTR [eax]
   14f0f:	test   ecx,ecx
   14f11:	je     0x14f18
   14f13:	call   0x10850
   14f18:	lea    eax,[esi+0x10]
   14f1b:	pop    esi
   14f1c:	leave  
   14f1d:	ret    0x4
   14f20:	int3   
   14f21:	int3   
   14f22:	int3   
   14f23:	int3   
   14f24:	int3   
   14f25:	int3   
   14f26:	mov    edi,edi
   14f28:	push   ebp
   14f29:	mov    ebp,esp
   14f2b:	sub    esp,0x20
   14f2e:	push   esi
   14f2f:	push   0xffffffff
   14f31:	mov    esi,ecx
   14f33:	push   0x1ab6e
   14f38:	lea    ecx,[ebp-0x8]
   14f3b:	call   0x11336
   14f40:	lea    eax,[ebp-0x8]
   14f43:	push   eax
   14f44:	push   DWORD PTR [ebp+0x8]
   14f47:	lea    ecx,[ebp-0x20]
   14f4a:	call   0x121f2
   14f4f:	push   eax
   14f50:	lea    eax,[ebp-0x10]
   14f53:	push   eax
   14f54:	mov    ecx,esi
   14f56:	call   0x14d6e
   14f5b:	mov    esi,DWORD PTR [eax]
   14f5d:	lea    ecx,[ebp-0x20]
   14f60:	call   0x11318
   14f65:	push   DWORD PTR [ebp-0x8]
   14f68:	call   0x10832
   14f6d:	pop    ecx
   14f6e:	lea    eax,[esi+0x14]
   14f71:	pop    esi
   14f72:	leave  
   14f73:	ret    0x4
   14f76:	int3   
   14f77:	int3   
   14f78:	int3   
   14f79:	int3   
   14f7a:	int3   
   14f7b:	int3   
   14f7c:	mov    edi,edi
   14f7e:	push   ebp
   14f7f:	mov    ebp,esp
   14f81:	mov    ecx,DWORD PTR ds:0x70ac0
   14f87:	push   ebx
   14f88:	push   DWORD PTR [ebp+0xc]
   14f8b:	call   0x14800
   14f90:	mov    ebx,DWORD PTR [ebp+0x8]
   14f93:	test   eax,eax
   14f95:	jne    0x14fa3
   14f97:	test   bl,0x1
   14f9a:	jne    0x14fa3
   14f9c:	xor    al,al
   14f9e:	jmp    0x150b7
   14fa3:	mov    ecx,DWORD PTR ds:0x70ac0
   14fa9:	push   esi
   14faa:	push   DWORD PTR [ebp+0xc]
   14fad:	call   0x14e22
   14fb2:	mov    esi,eax
   14fb4:	test   bl,0x1
   14fb7:	je     0x14fea
   14fb9:	mov    eax,DWORD PTR [ebp+0x1c]
   14fbc:	push   DWORD PTR [ebp+0xc]
   14fbf:	mov    ecx,esi
   14fc1:	mov    DWORD PTR [esi+0x20],eax
   14fc4:	call   0x11f6c
   14fc9:	push   DWORD PTR [ebp+0x10]
   14fcc:	lea    ecx,[esi+0x8]
   14fcf:	call   0x11f6c
   14fd4:	push   DWORD PTR [ebp+0x14]
   14fd7:	lea    ecx,[esi+0x10]
   14fda:	call   0x11f6c
   14fdf:	push   DWORD PTR [ebp+0x18]
   14fe2:	lea    ecx,[esi+0x18]
   14fe5:	call   0x11f6c
   14fea:	mov    DWORD PTR [ebp+0x8],ebx
   14fed:	and    DWORD PTR [ebp+0x8],0x2
   14ff1:	je     0x15001
   14ff3:	mov    eax,DWORD PTR [ebp+0x20]
   14ff6:	mov    ecx,DWORD PTR [eax]
   14ff8:	mov    DWORD PTR [esi+0x28],ecx
   14ffb:	mov    eax,DWORD PTR [eax+0x4]
   14ffe:	mov    DWORD PTR [esi+0x2c],eax
   15001:	mov    DWORD PTR [ebp+0x1c],ebx
   15004:	and    DWORD PTR [ebp+0x1c],0x4
   15008:	je     0x15018
   1500a:	mov    eax,DWORD PTR [ebp+0x24]
   1500d:	mov    ecx,DWORD PTR [eax]
   1500f:	mov    DWORD PTR [esi+0x30],ecx
   15012:	mov    eax,DWORD PTR [eax+0x4]
   15015:	mov    DWORD PTR [esi+0x34],eax
   15018:	test   bl,0x10
   1501b:	je     0x150b4
   15021:	cmp    DWORD PTR [esi+0xc],0x0
   15025:	jbe    0x150b4
   1502b:	mov    eax,ds:0x70ac0
   15030:	mov    eax,DWORD PTR [eax+0x4]
   15033:	push   edi
   15034:	mov    edi,DWORD PTR [eax]
   15036:	mov    DWORD PTR [ebp+0x10],edi
   15039:	cmp    edi,eax
   1503b:	je     0x150b3
   1503d:	push   DWORD PTR [ebp+0xc]
   15040:	lea    ebx,[edi+0x10]
   15043:	push   ebx
   15044:	call   0x17b24
   15049:	test   al,al
   1504b:	je     0x1509e
   1504d:	lea    eax,[esi+0x8]
   15050:	push   eax
   15051:	add    edi,0x20
   15054:	push   edi
   15055:	call   0x17b14
   1505a:	test   al,al
   1505c:	je     0x1509e
   1505e:	cmp    DWORD PTR [ebp+0x8],0x0
   15062:	je     0x1507e
   15064:	mov    ecx,DWORD PTR ds:0x70ac0
   1506a:	push   ebx
   1506b:	call   0x14e22
   15070:	mov    ecx,DWORD PTR [ebp+0x20]
   15073:	mov    edx,DWORD PTR [ecx]
   15075:	mov    DWORD PTR [eax+0x28],edx
   15078:	mov    ecx,DWORD PTR [ecx+0x4]
   1507b:	mov    DWORD PTR [eax+0x2c],ecx
   1507e:	cmp    DWORD PTR [ebp+0x1c],0x0
   15082:	je     0x1509e
   15084:	mov    ecx,DWORD PTR ds:0x70ac0
   1508a:	push   ebx
   1508b:	call   0x14e22
   15090:	mov    ecx,DWORD PTR [ebp+0x24]
   15093:	mov    edx,DWORD PTR [ecx]
   15095:	mov    DWORD PTR [eax+0x30],edx
   15098:	mov    ecx,DWORD PTR [ecx+0x4]
   1509b:	mov    DWORD PTR [eax+0x34],ecx
   1509e:	lea    ecx,[ebp+0x10]
   150a1:	call   0x129ce
   150a6:	mov    edi,DWORD PTR [ebp+0x10]
   150a9:	mov    eax,ds:0x70ac0
   150ae:	cmp    edi,DWORD PTR [eax+0x4]
   150b1:	jne    0x1503d
   150b3:	pop    edi
   150b4:	mov    al,0x1
   150b6:	pop    esi
   150b7:	pop    ebx
   150b8:	pop    ebp
   150b9:	ret    0x20
   150bc:	int3   
   150bd:	int3   
   150be:	int3   
   150bf:	int3   
   150c0:	int3   
   150c1:	int3   
   150c2:	push   0x38
   150c4:	push   0x6fe28
   150c9:	call   0x1a7f4
   150ce:	xor    esi,esi
   150d0:	push   esi
   150d1:	push   esi
   150d2:	push   esi
   150d3:	push   esi
   150d4:	push   0x70138
   150d9:	call   DWORD PTR ds:0x1b92c
   150df:	cmp    eax,esi
   150e1:	jge    0x150f2
   150e3:	mov    eax,DWORD PTR [ebp+0x8]
   150e6:	mov    DWORD PTR [eax+0x8],0x4
   150ed:	jmp    0x151d4
   150f2:	mov    DWORD PTR [ebp-0x4],esi
   150f5:	or     ebx,0xffffffff
   150f8:	push   ebx
   150f9:	mov    esi,DWORD PTR [ebp+0x8]
   150fc:	lea    eax,[esi+0x20]
   150ff:	push   eax
   15100:	lea    ecx,[ebp-0x30]
   15103:	call   0x11f2a
   15108:	mov    edi,DWORD PTR [ebp-0x2c]
   1510b:	inc    edi
   1510c:	push   ebx
   1510d:	lea    eax,[edi+esi*1+0x20]
   15111:	push   eax
   15112:	lea    ecx,[ebp-0x28]
   15115:	call   0x11f2a
   1511a:	mov    eax,DWORD PTR [ebp-0x24]
   1511d:	lea    edi,[edi+eax*1+0x1]
   15121:	push   ebx
   15122:	lea    eax,[edi+esi*1+0x20]
   15126:	push   eax
   15127:	lea    ecx,[ebp-0x20]
   1512a:	call   0x11f2a
   1512f:	mov    eax,DWORD PTR [ebp-0x1c]
   15132:	lea    eax,[edi+eax*1+0x1]
   15136:	push   ebx
   15137:	lea    eax,[eax+esi*1+0x20]
   1513b:	push   eax
   1513c:	lea    ecx,[ebp-0x48]
   1513f:	call   0x11f2a
   15144:	mov    eax,DWORD PTR [esi+0xc]
   15147:	mov    ecx,DWORD PTR [esi+0x10]
   1514a:	mov    DWORD PTR [ebp-0x40],ecx
   1514d:	mov    ecx,DWORD PTR [esi+0x14]
   15150:	mov    DWORD PTR [ebp-0x3c],ecx
   15153:	mov    ecx,DWORD PTR [esi+0x18]
   15156:	mov    DWORD PTR [ebp-0x38],ecx
   15159:	mov    ecx,DWORD PTR [esi+0x1c]
   1515c:	mov    DWORD PTR [ebp-0x34],ecx
   1515f:	lea    ecx,[ebp-0x38]
   15162:	push   ecx
   15163:	lea    ecx,[ebp-0x40]
   15166:	push   ecx
   15167:	push   eax
   15168:	lea    eax,[ebp-0x48]
   1516b:	push   eax
   1516c:	lea    eax,[ebp-0x20]
   1516f:	push   eax
   15170:	lea    eax,[ebp-0x28]
   15173:	push   eax
   15174:	lea    eax,[ebp-0x30]
   15177:	push   eax
   15178:	push   DWORD PTR [esi+0x4]
   1517b:	call   0x14f7c
   15180:	xor    ecx,ecx
   15182:	test   al,al
   15184:	sete   cl
   15187:	mov    DWORD PTR [esi+0x8],ecx
   1518a:	push   DWORD PTR [ebp-0x48]
   1518d:	call   0x10832
   15192:	push   DWORD PTR [ebp-0x20]
   15195:	call   0x10832
   1519a:	push   DWORD PTR [ebp-0x28]
   1519d:	call   0x10832
   151a2:	push   DWORD PTR [ebp-0x30]
   151a5:	call   0x10832
   151aa:	add    esp,0x10
   151ad:	jmp    0x151c0
   151af:	xor    eax,eax
   151b1:	inc    eax
   151b2:	ret    
   151b3:	mov    esp,DWORD PTR [ebp-0x18]
   151b6:	mov    eax,DWORD PTR [ebp+0x8]
   151b9:	mov    DWORD PTR [eax+0x8],0x4
   151c0:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   151c7:	push   0x0
   151c9:	push   0x70138
   151ce:	call   DWORD PTR ds:0x1b928
   151d4:	call   0x1a839
   151d9:	ret    0x4
   151dc:	int3   
   151dd:	int3   
   151de:	int3   
   151df:	int3   
   151e0:	int3   
   151e1:	int3   
   151e2:	push   0x24
   151e4:	push   0x6fe48
   151e9:	call   0x1a7f4
   151ee:	xor    ebx,ebx
   151f0:	push   ebx
   151f1:	push   ebx
   151f2:	push   ebx
   151f3:	push   ebx
   151f4:	push   0x70138
   151f9:	call   DWORD PTR ds:0x1b92c
   151ff:	cmp    eax,ebx
   15201:	jge    0x15212
   15203:	mov    eax,DWORD PTR [ebp+0x8]
   15206:	mov    DWORD PTR [eax+0x8],0x4
   1520d:	jmp    0x152ca
   15212:	mov    DWORD PTR [ebp-0x4],ebx
   15215:	push   0xffffffff
   15217:	mov    esi,DWORD PTR [ebp+0x8]
   1521a:	lea    eax,[esi+0xc]
   1521d:	push   eax
   1521e:	lea    ecx,[ebp-0x24]
   15221:	call   0x11f2a
   15226:	push   0xffffffff
   15228:	mov    eax,DWORD PTR [ebp-0x20]
   1522b:	lea    eax,[eax+esi*1+0xd]
   1522f:	push   eax
   15230:	lea    ecx,[ebp-0x2c]
   15233:	call   0x11f2a
   15238:	push   0xffffffff
   1523a:	push   0x1abe8
   1523f:	lea    ecx,[ebp-0x34]
   15242:	call   0x11274
   15247:	lea    eax,[ebp-0x34]
   1524a:	push   eax
   1524b:	lea    eax,[ebp-0x2c]
   1524e:	push   eax
   1524f:	call   0x17b14
   15254:	mov    BYTE PTR [ebp-0x19],al
   15257:	push   DWORD PTR [ebp-0x34]
   1525a:	call   0x10832
   1525f:	pop    ecx
   15260:	lea    eax,[ebp-0x24]
   15263:	mov    ecx,DWORD PTR ds:0x70108
   15269:	push   eax
   1526a:	cmp    BYTE PTR [ebp-0x19],bl
   1526d:	je     0x15276
   1526f:	call   0x14836
   15274:	jmp    0x15286
   15276:	call   0x14e70
   1527b:	lea    ecx,[ebp-0x2c]
   1527e:	push   ecx
   1527f:	mov    ecx,eax
   15281:	call   0x11f6c
   15286:	mov    DWORD PTR [esi+0x8],ebx
   15289:	push   DWORD PTR [ebp-0x2c]
   1528c:	call   0x10832
   15291:	push   DWORD PTR [ebp-0x24]
   15294:	call   0x10832
   15299:	pop    ecx
   1529a:	pop    ecx
   1529b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   152a2:	jmp    0x152be
   152a4:	xor    eax,eax
   152a6:	inc    eax
   152a7:	ret    
   152a8:	mov    esp,DWORD PTR [ebp-0x18]
   152ab:	mov    eax,DWORD PTR [ebp+0x8]
   152ae:	mov    DWORD PTR [eax+0x8],0x4
   152b5:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   152bc:	xor    ebx,ebx
   152be:	push   ebx
   152bf:	push   0x70138
   152c4:	call   DWORD PTR ds:0x1b928
   152ca:	call   0x1a839
   152cf:	ret    0x4
   152d2:	int3   
   152d3:	int3   
   152d4:	int3   
   152d5:	int3   
   152d6:	int3   
   152d7:	int3   
   152d8:	push   0xc
   152da:	push   0x6fe68
   152df:	call   0x1a7f4
   152e4:	xor    edi,edi
   152e6:	push   edi
   152e7:	push   edi
   152e8:	push   edi
   152e9:	push   edi
   152ea:	push   0x70138
   152ef:	call   DWORD PTR ds:0x1b92c
   152f5:	cmp    eax,edi
   152f7:	jge    0x15305
   152f9:	mov    eax,DWORD PTR [ebp+0x8]
   152fc:	mov    DWORD PTR [eax+0x8],0x4
   15303:	jmp    0x1537b
   15305:	mov    DWORD PTR [ebp-0x4],edi
   15308:	mov    esi,DWORD PTR [ebp+0x8]
   1530b:	lea    eax,[esi+0x4]
   1530e:	mov    ecx,DWORD PTR ds:0x70194
   15314:	push   eax
   15315:	cmp    DWORD PTR [esi],edi
   15317:	jbe    0x15344
   15319:	call   0x14ee0
   1531e:	mov    ebx,eax
   15320:	push   DWORD PTR [esi]
   15322:	lea    eax,[esi+0xc]
   15325:	push   eax
   15326:	lea    ecx,[ebp-0x1c]
   15329:	call   0x128c4
   1532e:	push   eax
   1532f:	mov    ecx,ebx
   15331:	call   0x117e2
   15336:	mov    ecx,DWORD PTR [ebp-0x1c]
   15339:	cmp    ecx,edi
   1533b:	je     0x15349
   1533d:	call   0x10850
   15342:	jmp    0x15349
   15344:	call   0x14d06
   15349:	mov    DWORD PTR [esi+0x8],edi
   1534c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   15353:	jmp    0x1536f
   15355:	xor    eax,eax
   15357:	inc    eax
   15358:	ret    
   15359:	mov    esp,DWORD PTR [ebp-0x18]
   1535c:	mov    eax,DWORD PTR [ebp+0x8]
   1535f:	mov    DWORD PTR [eax+0x8],0x4
   15366:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1536d:	xor    edi,edi
   1536f:	push   edi
   15370:	push   0x70138
   15375:	call   DWORD PTR ds:0x1b928
   1537b:	call   0x1a839
   15380:	ret    0x4
   15383:	int3   
   15384:	int3   
   15385:	int3   
   15386:	int3   
   15387:	int3   
   15388:	mov    edi,edi
   1538a:	push   ebp
   1538b:	mov    ebp,esp
   1538d:	sub    esp,0x10
   15390:	and    DWORD PTR [ebp-0xc],0x0
   15394:	xor    ecx,ecx
   15396:	mov    DWORD PTR [ebp-0x10],0x1
   1539d:	xor    eax,eax
   1539f:	mov    dl,BYTE PTR [eax+0x6c1b8]
   153a5:	xor    BYTE PTR [ebp+ecx*1-0x10],dl
   153a9:	inc    ecx
   153aa:	inc    eax
   153ab:	and    eax,0xf
   153ae:	cmp    ecx,0x8
   153b1:	jne    0x1539f
   153b3:	push   ecx
   153b4:	lea    eax,[ebp-0x10]
   153b7:	push   eax
   153b8:	lea    ecx,[ebp-0x8]
   153bb:	mov    DWORD PTR [ebp-0x4],0x2
   153c2:	call   0x128c4
   153c7:	mov    ecx,DWORD PTR ds:0x70194
   153cd:	push   eax
   153ce:	lea    eax,[ebp-0x4]
   153d1:	push   eax
   153d2:	call   0x14ee0
   153d7:	mov    ecx,eax
   153d9:	call   0x117e2
   153de:	mov    ecx,DWORD PTR [ebp-0x8]
   153e1:	test   ecx,ecx
   153e3:	je     0x153ea
   153e5:	call   0x10850
   153ea:	leave  
   153eb:	ret    
   153ec:	int3   
   153ed:	int3   
   153ee:	int3   
   153ef:	int3   
   153f0:	int3   
   153f1:	int3   
   153f2:	push   0x868
   153f7:	push   0x6fe88
   153fc:	call   0x1ab00
   15401:	xor    ebx,ebx
   15403:	mov    DWORD PTR [ebp-0x838],ebx
   15409:	mov    DWORD PTR [ebp-0x4],ebx
   1540c:	mov    DWORD PTR [ebp-0x878],ebx
   15412:	xor    eax,eax
   15414:	lea    edi,[ebp-0x874]
   1541a:	stos   DWORD PTR es:[edi],eax
   1541b:	stos   DWORD PTR es:[edi],eax
   1541c:	stos   DWORD PTR es:[edi],eax
   1541d:	stos   DWORD PTR es:[edi],eax
   1541e:	stos   DWORD PTR es:[edi],eax
   1541f:	mov    BYTE PTR [ebp-0x840],bl
   15425:	mov    DWORD PTR [ebp-0x83c],ebx
   1542b:	xor    eax,eax
   1542d:	mov    WORD PTR [ebp-0x81c],ax
   15434:	push   0x7fe
   15439:	push   ebx
   1543a:	lea    eax,[ebp-0x81a]
   15440:	push   eax
   15441:	call   0x1a7aa
   15446:	add    esp,0xc
   15449:	mov    eax,0x70298
   1544e:	mov    edx,eax
   15450:	mov    cx,WORD PTR [eax]
   15453:	inc    eax
   15454:	inc    eax
   15455:	cmp    cx,bx
   15458:	jne    0x15450
   1545a:	sub    eax,edx
   1545c:	lea    edi,[ebp-0x81c]
   15462:	dec    edi
   15463:	dec    edi
   15464:	mov    cx,WORD PTR [edi+0x2]
   15468:	inc    edi
   15469:	inc    edi
   1546a:	cmp    cx,bx
   1546d:	jne    0x15464
   1546f:	mov    ecx,eax
   15471:	mov    esi,edx
   15473:	shr    ecx,0x2
   15476:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   15478:	mov    ecx,eax
   1547a:	and    ecx,0x3
   1547d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1547f:	mov    eax,0x70048
   15484:	mov    edx,eax
   15486:	mov    cx,WORD PTR [eax]
   15489:	inc    eax
   1548a:	inc    eax
   1548b:	cmp    cx,bx
   1548e:	jne    0x15486
   15490:	sub    eax,edx
   15492:	lea    edi,[ebp-0x81c]
   15498:	dec    edi
   15499:	dec    edi
   1549a:	mov    cx,WORD PTR [edi+0x2]
   1549e:	inc    edi
   1549f:	inc    edi
   154a0:	cmp    cx,bx
   154a3:	jne    0x1549a
   154a5:	mov    ecx,eax
   154a7:	mov    esi,edx
   154a9:	shr    ecx,0x2
   154ac:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   154ae:	mov    ecx,eax
   154b0:	and    ecx,0x3
   154b3:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   154b5:	lea    eax,[ebp-0x81c]
   154bb:	mov    DWORD PTR [ebp-0x85c],eax
   154c1:	lea    ecx,[eax+0x2]
   154c4:	mov    dx,WORD PTR [eax]
   154c7:	inc    eax
   154c8:	inc    eax
   154c9:	cmp    dx,bx
   154cc:	jne    0x154c4
   154ce:	sub    eax,ecx
   154d0:	sar    eax,1
   154d2:	add    eax,eax
   154d4:	mov    WORD PTR [ebp-0x85e],ax
   154db:	mov    WORD PTR [ebp-0x860],ax
   154e2:	push   0x18
   154e4:	pop    esi
   154e5:	mov    DWORD PTR [ebp-0x878],esi
   154eb:	mov    DWORD PTR [ebp-0x874],ebx
   154f1:	mov    DWORD PTR [ebp-0x86c],0x40
   154fb:	lea    eax,[ebp-0x860]
   15501:	mov    DWORD PTR [ebp-0x870],eax
   15507:	mov    DWORD PTR [ebp-0x868],ebx
   1550d:	mov    DWORD PTR [ebp-0x864],ebx
   15513:	lea    eax,[ebp-0x878]
   15519:	push   eax
   1551a:	push   0x1
   1551c:	lea    eax,[ebp-0x838]
   15522:	push   eax
   15523:	call   DWORD PTR ds:0x1b938
   15529:	cmp    eax,ebx
   1552b:	je     0x15537
   1552d:	call   0x15388
   15532:	jmp    0x15625
   15537:	mov    eax,0x1ab6e
   1553c:	mov    DWORD PTR [ebp-0x854],eax
   15542:	lea    edx,[eax+0x2]
   15545:	mov    cx,WORD PTR [eax]
   15548:	inc    eax
   15549:	inc    eax
   1554a:	cmp    cx,bx
   1554d:	jne    0x15545
   1554f:	sub    eax,edx
   15551:	sar    eax,1
   15553:	mov    WORD PTR [ebp-0x856],ax
   1555a:	mov    WORD PTR [ebp-0x858],ax
   15561:	mov    DWORD PTR [ebp-0x844],ebx
   15567:	lea    eax,[ebp-0x844]
   1556d:	push   eax
   1556e:	push   esi
   1556f:	lea    eax,[ebp-0x834]
   15575:	push   eax
   15576:	push   0x1
   15578:	lea    eax,[ebp-0x858]
   1557e:	push   eax
   1557f:	push   DWORD PTR [ebp-0x838]
   15585:	mov    esi,DWORD PTR ds:0x1b96c
   1558b:	call   esi
   1558d:	cmp    eax,0x80000005
   15592:	je     0x1559b
   15594:	cmp    eax,0xc0000023
   15599:	jne    0x15607
   1559b:	push   DWORD PTR [ebp-0x844]
   155a1:	call   0x107fe
   155a6:	pop    ecx
   155a7:	xor    ecx,ecx
   155a9:	cmp    eax,ebx
   155ab:	setne  cl
   155ae:	mov    BYTE PTR [ebp-0x850],cl
   155b4:	mov    DWORD PTR [ebp-0x84c],eax
   155ba:	lea    eax,[ebp-0x850]
   155c0:	push   eax
   155c1:	lea    ecx,[ebp-0x840]
   155c7:	call   0x11fb6
   155cc:	cmp    BYTE PTR [ebp-0x850],bl
   155d2:	je     0x155e0
   155d4:	push   DWORD PTR [ebp-0x84c]
   155da:	call   0x10832
   155df:	pop    ecx
   155e0:	lea    eax,[ebp-0x844]
   155e6:	push   eax
   155e7:	push   DWORD PTR [ebp-0x844]
   155ed:	mov    edi,DWORD PTR [ebp-0x83c]
   155f3:	push   edi
   155f4:	push   0x1
   155f6:	lea    eax,[ebp-0x858]
   155fc:	push   eax
   155fd:	push   DWORD PTR [ebp-0x838]
   15603:	call   esi
   15605:	jmp    0x1560d
   15607:	mov    edi,DWORD PTR [ebp-0x83c]
   1560d:	cmp    eax,ebx
   1560f:	je     0x15637
   15611:	call   0x15388
   15616:	cmp    BYTE PTR [ebp-0x840],bl
   1561c:	je     0x15625
   1561e:	push   edi
   1561f:	call   0x10832
   15624:	pop    ecx
   15625:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1562c:	call   0x156a9
   15631:	call   0x1ab48
   15636:	ret    
   15637:	cmp    DWORD PTR [edi+0x4],0x3
   1563b:	jne    0x15611
   1563d:	mov    esi,DWORD PTR [edi+0xc]
   15640:	cmp    esi,ebx
   15642:	je     0x15616
   15644:	cmp    esi,0xf4240
   1564a:	ja     0x15616
   1564c:	mov    DWORD PTR [ebp-0x848],0x2
   15656:	lea    eax,[ebp-0x848]
   1565c:	push   eax
   1565d:	mov    ecx,DWORD PTR ds:0x70194
   15663:	call   0x14ee0
   15668:	mov    edi,eax
   1566a:	push   esi
   1566b:	mov    esi,DWORD PTR [ebp-0x83c]
   15671:	mov    eax,DWORD PTR [esi+0x8]
   15674:	add    eax,esi
   15676:	push   eax
   15677:	lea    ecx,[ebp-0x848]
   1567d:	call   0x128c4
   15682:	push   eax
   15683:	mov    ecx,edi
   15685:	call   0x117e2
   1568a:	mov    ecx,DWORD PTR [ebp-0x848]
   15690:	cmp    ecx,ebx
   15692:	je     0x15699
   15694:	call   0x10850
   15699:	cmp    BYTE PTR [ebp-0x840],bl
   1569f:	je     0x15625
   156a1:	push   esi
   156a2:	jmp    0x1561f
   156a7:	xor    ebx,ebx
   156a9:	cmp    DWORD PTR [ebp-0x838],ebx
   156af:	je     0x156bd
   156b1:	push   DWORD PTR [ebp-0x838]
   156b7:	call   DWORD PTR ds:0x1b9d4
   156bd:	ret    
   156be:	int3   
   156bf:	int3   
   156c0:	int3   
   156c1:	int3   
   156c2:	int3   
   156c3:	int3   
   156c4:	push   0x844
   156c9:	push   0x6fea8
   156ce:	call   0x1ab00
   156d3:	xor    esi,esi
   156d5:	mov    DWORD PTR [ebp-0x820],esi
   156db:	mov    DWORD PTR [ebp-0x4],esi
   156de:	mov    DWORD PTR [ebp-0x84c],esi
   156e4:	xor    eax,eax
   156e6:	lea    edi,[ebp-0x848]
   156ec:	stos   DWORD PTR es:[edi],eax
   156ed:	stos   DWORD PTR es:[edi],eax
   156ee:	stos   DWORD PTR es:[edi],eax
   156ef:	stos   DWORD PTR es:[edi],eax
   156f0:	stos   DWORD PTR es:[edi],eax
   156f1:	mov    BYTE PTR [ebp-0x854],0x0
   156f8:	mov    DWORD PTR [ebp-0x850],esi
   156fe:	xor    eax,eax
   15700:	mov    WORD PTR [ebp-0x81c],ax
   15707:	push   0x7fe
   1570c:	push   esi
   1570d:	lea    eax,[ebp-0x81a]
   15713:	push   eax
   15714:	call   0x1a7aa
   15719:	add    esp,0xc
   1571c:	mov    eax,0x70298
   15721:	mov    edx,eax
   15723:	push   0x2
   15725:	pop    ebx
   15726:	mov    cx,WORD PTR [eax]
   15729:	add    eax,ebx
   1572b:	cmp    cx,si
   1572e:	jne    0x15726
   15730:	sub    eax,edx
   15732:	lea    edi,[ebp-0x81c]
   15738:	dec    edi
   15739:	dec    edi
   1573a:	mov    cx,WORD PTR [edi+0x2]
   1573e:	add    edi,ebx
   15740:	cmp    cx,si
   15743:	jne    0x1573a
   15745:	mov    ecx,eax
   15747:	mov    esi,edx
   15749:	shr    ecx,0x2
   1574c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1574e:	mov    ecx,eax
   15750:	and    ecx,0x3
   15753:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   15755:	mov    eax,0x70048
   1575a:	mov    edx,eax
   1575c:	mov    cx,WORD PTR [eax]
   1575f:	add    eax,ebx
   15761:	test   cx,cx
   15764:	jne    0x1575c
   15766:	sub    eax,edx
   15768:	lea    edi,[ebp-0x81c]
   1576e:	dec    edi
   1576f:	dec    edi
   15770:	mov    cx,WORD PTR [edi+0x2]
   15774:	add    edi,ebx
   15776:	test   cx,cx
   15779:	jne    0x15770
   1577b:	mov    ecx,eax
   1577d:	mov    esi,edx
   1577f:	shr    ecx,0x2
   15782:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   15784:	mov    ecx,eax
   15786:	and    ecx,0x3
   15789:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1578b:	lea    eax,[ebp-0x81c]
   15791:	mov    DWORD PTR [ebp-0x830],eax
   15797:	lea    ecx,[eax+0x2]
   1579a:	mov    dx,WORD PTR [eax]
   1579d:	add    eax,ebx
   1579f:	test   dx,dx
   157a2:	jne    0x1579a
   157a4:	sub    eax,ecx
   157a6:	sar    eax,1
   157a8:	add    eax,eax
   157aa:	mov    WORD PTR [ebp-0x832],ax
   157b1:	mov    WORD PTR [ebp-0x834],ax
   157b8:	mov    DWORD PTR [ebp-0x84c],0x18
   157c2:	xor    esi,esi
   157c4:	mov    DWORD PTR [ebp-0x848],esi
   157ca:	mov    DWORD PTR [ebp-0x840],0x40
   157d4:	lea    eax,[ebp-0x834]
   157da:	mov    DWORD PTR [ebp-0x844],eax
   157e0:	mov    DWORD PTR [ebp-0x83c],esi
   157e6:	mov    DWORD PTR [ebp-0x838],esi
   157ec:	lea    eax,[ebp-0x84c]
   157f2:	push   eax
   157f3:	push   0x3
   157f5:	lea    eax,[ebp-0x820]
   157fb:	push   eax
   157fc:	call   DWORD PTR ds:0x1b938
   15802:	cmp    eax,esi
   15804:	je     0x1581f
   15806:	push   0xfffffffe
   15808:	lea    eax,[ebp-0x10]
   1580b:	push   eax
   1580c:	push   0x70100
   15811:	call   0x1a9bc
   15816:	add    esp,0xc
   15819:	call   0x1ab48
   1581e:	ret    
   1581f:	mov    eax,0x1ab6e
   15824:	mov    DWORD PTR [ebp-0x824],eax
   1582a:	lea    edx,[eax+0x2]
   1582d:	mov    cx,WORD PTR [eax]
   15830:	add    eax,ebx
   15832:	cmp    cx,si
   15835:	jne    0x1582d
   15837:	sub    eax,edx
   15839:	sar    eax,1
   1583b:	mov    WORD PTR [ebp-0x826],ax
   15842:	mov    WORD PTR [ebp-0x828],ax
   15849:	mov    DWORD PTR [ebp-0x82c],ebx
   1584f:	lea    eax,[ebp-0x82c]
   15855:	push   eax
   15856:	mov    ecx,DWORD PTR ds:0x70194
   1585c:	call   0x14ee0
   15861:	mov    eax,DWORD PTR [eax]
   15863:	cmp    eax,esi
   15865:	jne    0x1586b
   15867:	xor    ecx,ecx
   15869:	jmp    0x1586e
   1586b:	mov    ecx,DWORD PTR [eax+0x8]
   1586e:	cmp    eax,esi
   15870:	jne    0x15876
   15872:	xor    eax,eax
   15874:	jmp    0x15878
   15876:	mov    eax,DWORD PTR [eax]
   15878:	push   ecx
   15879:	push   eax
   1587a:	push   0x3
   1587c:	push   esi
   1587d:	lea    eax,[ebp-0x828]
   15883:	push   eax
   15884:	push   DWORD PTR [ebp-0x820]
   1588a:	call   DWORD PTR ds:0x1b970
   15890:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   15897:	call   0x158a3
   1589c:	jmp    0x15819
   158a1:	xor    esi,esi
   158a3:	cmp    DWORD PTR [ebp-0x820],esi
   158a9:	je     0x158b7
   158ab:	push   DWORD PTR [ebp-0x820]
   158b1:	call   DWORD PTR ds:0x1b9d4
   158b7:	ret    
   158b8:	int3   
   158b9:	int3   
   158ba:	int3   
   158bb:	int3   
   158bc:	int3   
   158bd:	int3   
   158be:	mov    edi,edi
   158c0:	push   ebp
   158c1:	mov    ebp,esp
   158c3:	sub    esp,0x10
   158c6:	call   0x184da
   158cb:	test   al,al
   158cd:	jne    0x158d7
   158cf:	mov    eax,DWORD PTR [ebp+0x8]
   158d2:	jmp    0x1596b
   158d7:	push   esi
   158d8:	mov    esi,DWORD PTR [ebp+0x8]
   158db:	push   0xffffffff
   158dd:	push   esi
   158de:	lea    ecx,[ebp-0x8]
   158e1:	call   0x11336
   158e6:	mov    ecx,DWORD PTR ds:0x70ce0
   158ec:	lea    eax,[ebp-0x8]
   158ef:	push   eax
   158f0:	lea    eax,[ebp+0x8]
   158f3:	push   eax
   158f4:	call   0x131d2
   158f9:	mov    eax,DWORD PTR [ebp+0x8]
   158fc:	mov    ecx,DWORD PTR ds:0x70ce0
   15902:	cmp    eax,DWORD PTR [ecx+0x4]
   15905:	jne    0x15936
   15907:	lea    eax,[ebp-0x8]
   1590a:	push   eax
   1590b:	lea    ecx,[ebp-0x10]
   1590e:	call   0x120a2
   15913:	mov    ecx,DWORD PTR ds:0x70ce0
   15919:	lea    eax,[ebp-0x10]
   1591c:	push   eax
   1591d:	lea    eax,[ebp-0x8]
   15920:	push   eax
   15921:	call   0x14f26
   15926:	mov    ecx,eax
   15928:	call   0x120c4
   1592d:	push   DWORD PTR [ebp-0x10]
   15930:	call   0x10832
   15935:	pop    ecx
   15936:	mov    ecx,DWORD PTR ds:0x70ce0
   1593c:	lea    eax,[ebp-0x8]
   1593f:	push   eax
   15940:	lea    eax,[ebp+0x8]
   15943:	push   eax
   15944:	call   0x131d2
   15949:	mov    eax,DWORD PTR [ebp+0x8]
   1594c:	mov    ecx,DWORD PTR ds:0x70ce0
   15952:	cmp    eax,DWORD PTR [ecx+0x4]
   15955:	je     0x1595a
   15957:	mov    esi,DWORD PTR [eax+0x14]
   1595a:	call   0x184f6
   1595f:	push   DWORD PTR [ebp-0x8]
   15962:	call   0x10832
   15967:	pop    ecx
   15968:	mov    eax,esi
   1596a:	pop    esi
   1596b:	leave  
   1596c:	ret    0x4
   1596f:	int3   
   15970:	int3   
   15971:	int3   
   15972:	int3   
   15973:	int3   
   15974:	mov    edi,edi
   15976:	push   ebp
   15977:	mov    ebp,esp
   15979:	sub    esp,0x10
   1597c:	push   esi
   1597d:	call   0x184da
   15982:	test   al,al
   15984:	jne    0x1598e
   15986:	mov    eax,DWORD PTR [ebp+0x8]
   15989:	jmp    0x15a3a
   1598e:	push   DWORD PTR [ebp+0xc]
   15991:	lea    ecx,[ebp-0x8]
   15994:	push   DWORD PTR [ebp+0x8]
   15997:	call   0x12082
   1599c:	mov    ecx,DWORD PTR ds:0x70ce0
   159a2:	lea    eax,[ebp-0x8]
   159a5:	push   eax
   159a6:	lea    eax,[ebp+0xc]
   159a9:	push   eax
   159aa:	call   0x131d2
   159af:	mov    esi,DWORD PTR [ebp+0xc]
   159b2:	mov    eax,ds:0x70ce0
   159b7:	cmp    esi,DWORD PTR [eax+0x4]
   159ba:	jne    0x159f5
   159bc:	push   ecx
   159bd:	push   ecx
   159be:	lea    eax,[ebp-0x8]
   159c1:	mov    ecx,esp
   159c3:	push   eax
   159c4:	call   0x120a2
   159c9:	lea    eax,[ebp-0x10]
   159cc:	push   eax
   159cd:	call   0x1298a
   159d2:	mov    ecx,DWORD PTR ds:0x70ce0
   159d8:	lea    eax,[ebp-0x10]
   159db:	push   eax
   159dc:	lea    eax,[ebp-0x8]
   159df:	push   eax
   159e0:	call   0x14f26
   159e5:	mov    ecx,eax
   159e7:	call   0x120c4
   159ec:	push   DWORD PTR [ebp-0x10]
   159ef:	call   0x10832
   159f4:	pop    ecx
   159f5:	mov    eax,DWORD PTR [ebp+0x10]
   159f8:	movzx  eax,BYTE PTR [eax]
   159fb:	cmp    eax,0x100
   15a00:	jge    0x15a18
   15a02:	mov    ecx,DWORD PTR ds:0x70ce0
   15a08:	lea    eax,[ebp-0x8]
   15a0b:	push   eax
   15a0c:	lea    eax,[ebp+0xc]
   15a0f:	push   eax
   15a10:	call   0x131d2
   15a15:	mov    esi,DWORD PTR [ebp+0xc]
   15a18:	mov    eax,ds:0x70ce0
   15a1d:	cmp    esi,DWORD PTR [eax+0x4]
   15a20:	je     0x15a27
   15a22:	mov    esi,DWORD PTR [esi+0x14]
   15a25:	jmp    0x15a2a
   15a27:	mov    esi,DWORD PTR [ebp+0x8]
   15a2a:	call   0x184f6
   15a2f:	push   DWORD PTR [ebp-0x8]
   15a32:	call   0x10832
   15a37:	pop    ecx
   15a38:	mov    eax,esi
   15a3a:	pop    esi
   15a3b:	leave  
   15a3c:	ret    0xc
   15a3f:	int3   
   15a40:	int3   
   15a41:	int3   
   15a42:	int3   
   15a43:	int3   
   15a44:	mov    edi,edi
   15a46:	push   ebp
   15a47:	mov    ebp,esp
   15a49:	sub    esp,0x10
   15a4c:	push   esi
   15a4d:	call   0x184da
   15a52:	test   al,al
   15a54:	jne    0x15a5e
   15a56:	mov    eax,DWORD PTR [ebp+0x8]
   15a59:	jmp    0x15b0a
   15a5e:	push   DWORD PTR [ebp+0xc]
   15a61:	lea    ecx,[ebp-0x8]
   15a64:	push   DWORD PTR [ebp+0x8]
   15a67:	call   0x11f2a
   15a6c:	mov    ecx,DWORD PTR ds:0x70ce4
   15a72:	lea    eax,[ebp-0x8]
   15a75:	push   eax
   15a76:	lea    eax,[ebp+0xc]
   15a79:	push   eax
   15a7a:	call   0x12ca0
   15a7f:	mov    esi,DWORD PTR [ebp+0xc]
   15a82:	mov    eax,ds:0x70ce4
   15a87:	cmp    esi,DWORD PTR [eax+0x4]
   15a8a:	jne    0x15ac5
   15a8c:	push   ecx
   15a8d:	push   ecx
   15a8e:	lea    eax,[ebp-0x8]
   15a91:	mov    ecx,esp
   15a93:	push   eax
   15a94:	call   0x11f4a
   15a99:	lea    eax,[ebp-0x10]
   15a9c:	push   eax
   15a9d:	call   0x12042
   15aa2:	mov    ecx,DWORD PTR ds:0x70ce4
   15aa8:	lea    eax,[ebp-0x10]
   15aab:	push   eax
   15aac:	lea    eax,[ebp-0x8]
   15aaf:	push   eax
   15ab0:	call   0x14e70
   15ab5:	mov    ecx,eax
   15ab7:	call   0x11f6c
   15abc:	push   DWORD PTR [ebp-0x10]
   15abf:	call   0x10832
   15ac4:	pop    ecx
   15ac5:	mov    eax,DWORD PTR [ebp+0x10]
   15ac8:	movzx  eax,BYTE PTR [eax]
   15acb:	cmp    eax,0x100
   15ad0:	jge    0x15ae8
   15ad2:	mov    ecx,DWORD PTR ds:0x70ce4
   15ad8:	lea    eax,[ebp-0x8]
   15adb:	push   eax
   15adc:	lea    eax,[ebp+0xc]
   15adf:	push   eax
   15ae0:	call   0x12ca0
   15ae5:	mov    esi,DWORD PTR [ebp+0xc]
   15ae8:	mov    eax,ds:0x70ce4
   15aed:	cmp    esi,DWORD PTR [eax+0x4]
   15af0:	je     0x15af7
   15af2:	mov    esi,DWORD PTR [esi+0x14]
   15af5:	jmp    0x15afa
   15af7:	mov    esi,DWORD PTR [ebp+0x8]
   15afa:	call   0x184f6
   15aff:	push   DWORD PTR [ebp-0x8]
   15b02:	call   0x10832
   15b07:	pop    ecx
   15b08:	mov    eax,esi
   15b0a:	pop    esi
   15b0b:	leave  
   15b0c:	ret    0xc
   15b0f:	int3   
   15b10:	int3   
   15b11:	int3   
   15b12:	int3   
   15b13:	int3   
   15b14:	mov    edi,edi
   15b16:	push   ebp
   15b17:	mov    ebp,esp
   15b19:	sub    esp,0x838
   15b1f:	mov    eax,ds:0x70100
   15b24:	xor    eax,ebp
   15b26:	mov    DWORD PTR [ebp-0x4],eax
   15b29:	mov    eax,DWORD PTR [ebp+0x8]
   15b2c:	push   ebx
   15b2d:	push   esi
   15b2e:	push   edi
   15b2f:	mov    DWORD PTR [ebp-0x808],eax
   15b35:	xor    eax,eax
   15b37:	push   0x7fe
   15b3c:	mov    WORD PTR [ebp-0x804],ax
   15b43:	xor    ebx,ebx
   15b45:	lea    eax,[ebp-0x802]
   15b4b:	push   ebx
   15b4c:	push   eax
   15b4d:	call   0x1a7aa
   15b52:	mov    eax,0x70298
   15b57:	add    esp,0xc
   15b5a:	mov    edx,eax
   15b5c:	mov    cx,WORD PTR [eax]
   15b5f:	inc    eax
   15b60:	inc    eax
   15b61:	cmp    cx,bx
   15b64:	jne    0x15b5c
   15b66:	sub    eax,edx
   15b68:	lea    edi,[ebp-0x804]
   15b6e:	dec    edi
   15b6f:	dec    edi
   15b70:	mov    cx,WORD PTR [edi+0x2]
   15b74:	inc    edi
   15b75:	inc    edi
   15b76:	cmp    cx,bx
   15b79:	jne    0x15b70
   15b7b:	mov    ecx,eax
   15b7d:	shr    ecx,0x2
   15b80:	mov    esi,edx
   15b82:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   15b84:	mov    ecx,eax
   15b86:	mov    eax,DWORD PTR [ebp-0x808]
   15b8c:	and    ecx,0x3
   15b8f:	add    eax,0x400
   15b94:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   15b96:	mov    edx,eax
   15b98:	mov    cx,WORD PTR [eax]
   15b9b:	inc    eax
   15b9c:	inc    eax
   15b9d:	cmp    cx,bx
   15ba0:	jne    0x15b98
   15ba2:	sub    eax,edx
   15ba4:	lea    edi,[ebp-0x804]
   15baa:	dec    edi
   15bab:	dec    edi
   15bac:	mov    cx,WORD PTR [edi+0x2]
   15bb0:	inc    edi
   15bb1:	inc    edi
   15bb2:	cmp    cx,bx
   15bb5:	jne    0x15bac
   15bb7:	mov    ecx,eax
   15bb9:	shr    ecx,0x2
   15bbc:	mov    esi,edx
   15bbe:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   15bc0:	mov    ecx,eax
   15bc2:	and    ecx,0x3
   15bc5:	lea    eax,[ebp-0x804]
   15bcb:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   15bcd:	mov    DWORD PTR [ebp-0x818],eax
   15bd3:	lea    ecx,[eax+0x2]
   15bd6:	mov    dx,WORD PTR [eax]
   15bd9:	inc    eax
   15bda:	inc    eax
   15bdb:	cmp    dx,bx
   15bde:	jne    0x15bd6
   15be0:	sub    eax,ecx
   15be2:	sar    eax,1
   15be4:	add    eax,eax
   15be6:	mov    WORD PTR [ebp-0x81a],ax
   15bed:	mov    WORD PTR [ebp-0x81c],ax
   15bf4:	lea    eax,[ebp-0x81c]
   15bfa:	mov    DWORD PTR [ebp-0x82c],eax
   15c00:	lea    eax,[ebp-0x838]
   15c06:	push   eax
   15c07:	push   0x1
   15c09:	push   ebx
   15c0a:	push   ebx
   15c0b:	lea    eax,[ebp-0x834]
   15c11:	push   eax
   15c12:	push   0xf003f
   15c17:	lea    eax,[ebp-0x80c]
   15c1d:	push   eax
   15c1e:	mov    DWORD PTR [ebp-0x834],0x18
   15c28:	mov    DWORD PTR [ebp-0x830],ebx
   15c2e:	mov    DWORD PTR [ebp-0x828],0x40
   15c38:	mov    DWORD PTR [ebp-0x824],ebx
   15c3e:	mov    DWORD PTR [ebp-0x820],ebx
   15c44:	call   DWORD PTR ds:0x1b978
   15c4a:	test   eax,eax
   15c4c:	jl     0x15dd5
   15c52:	push   0x1af24
   15c57:	push   0x9
   15c59:	push   0x1af10
   15c5e:	call   0x15974
   15c63:	mov    DWORD PTR [ebp-0x810],eax
   15c69:	lea    edx,[eax+0x2]
   15c6c:	mov    cx,WORD PTR [eax]
   15c6f:	inc    eax
   15c70:	inc    eax
   15c71:	cmp    cx,bx
   15c74:	jne    0x15c6c
   15c76:	sub    eax,edx
   15c78:	sar    eax,1
   15c7a:	add    eax,eax
   15c7c:	mov    WORD PTR [ebp-0x812],ax
   15c83:	mov    WORD PTR [ebp-0x814],ax
   15c8a:	mov    eax,DWORD PTR [ebp-0x808]
   15c90:	lea    ecx,[eax+0x2]
   15c93:	mov    dx,WORD PTR [eax]
   15c96:	inc    eax
   15c97:	inc    eax
   15c98:	cmp    dx,bx
   15c9b:	jne    0x15c93
   15c9d:	mov    esi,DWORD PTR ds:0x1b970
   15ca3:	sub    eax,ecx
   15ca5:	sar    eax,1
   15ca7:	inc    eax
   15ca8:	movzx  eax,ax
   15cab:	add    eax,eax
   15cad:	push   eax
   15cae:	push   DWORD PTR [ebp-0x808]
   15cb4:	lea    eax,[ebp-0x814]
   15cba:	push   0x1
   15cbc:	push   ebx
   15cbd:	push   eax
   15cbe:	push   DWORD PTR [ebp-0x80c]
   15cc4:	call   esi
   15cc6:	test   eax,eax
   15cc8:	jl     0x15dd5
   15cce:	push   0x1aeda
   15cd3:	push   0x5
   15cd5:	push   0x1aece
   15cda:	mov    DWORD PTR [ebp-0x808],0x3
   15ce4:	call   0x15974
   15ce9:	mov    DWORD PTR [ebp-0x810],eax
   15cef:	lea    edx,[eax+0x2]
   15cf2:	mov    cx,WORD PTR [eax]
   15cf5:	inc    eax
   15cf6:	inc    eax
   15cf7:	cmp    cx,bx
   15cfa:	jne    0x15cf2
   15cfc:	sub    eax,edx
   15cfe:	push   0x4
   15d00:	sar    eax,1
   15d02:	pop    edi
   15d03:	add    eax,eax
   15d05:	push   edi
   15d06:	mov    WORD PTR [ebp-0x812],ax
   15d0d:	mov    WORD PTR [ebp-0x814],ax
   15d14:	lea    eax,[ebp-0x808]
   15d1a:	push   eax
   15d1b:	push   edi
   15d1c:	push   ebx
   15d1d:	lea    eax,[ebp-0x814]
   15d23:	push   eax
   15d24:	push   DWORD PTR [ebp-0x80c]
   15d2a:	call   esi
   15d2c:	test   eax,eax
   15d2e:	jl     0x15dd5
   15d34:	push   0x1aea2
   15d39:	push   edi
   15d3a:	push   0x1ae98
   15d3f:	mov    DWORD PTR [ebp-0x808],0x1
   15d49:	call   0x15974
   15d4e:	mov    DWORD PTR [ebp-0x810],eax
   15d54:	lea    ecx,[eax+0x2]
   15d57:	mov    dx,WORD PTR [eax]
   15d5a:	inc    eax
   15d5b:	inc    eax
   15d5c:	cmp    dx,bx
   15d5f:	jne    0x15d57
   15d61:	sub    eax,ecx
   15d63:	sar    eax,1
   15d65:	add    eax,eax
   15d67:	push   edi
   15d68:	mov    WORD PTR [ebp-0x812],ax
   15d6f:	mov    WORD PTR [ebp-0x814],ax
   15d76:	lea    eax,[ebp-0x808]
   15d7c:	push   eax
   15d7d:	push   edi
   15d7e:	push   ebx
   15d7f:	lea    eax,[ebp-0x814]
   15d85:	push   eax
   15d86:	push   DWORD PTR [ebp-0x80c]
   15d8c:	call   esi
   15d8e:	test   eax,eax
   15d90:	jl     0x15dd5
   15d92:	lea    eax,[ebp-0x81c]
   15d98:	push   eax
   15d99:	call   DWORD PTR ds:0x1b974
   15d9f:	test   eax,eax
   15da1:	jl     0x15dd5
   15da3:	lea    eax,[ebp-0x804]
   15da9:	push   eax
   15daa:	push   DWORD PTR [ebp-0x80c]
   15db0:	call   0x10e92
   15db5:	test   al,al
   15db7:	je     0x15dc9
   15db9:	push   DWORD PTR [ebp-0x80c]
   15dbf:	call   DWORD PTR ds:0x1b934
   15dc5:	test   eax,eax
   15dc7:	jl     0x15dd5
   15dc9:	push   DWORD PTR [ebp-0x80c]
   15dcf:	call   DWORD PTR ds:0x1b9d4
   15dd5:	mov    ecx,DWORD PTR [ebp-0x4]
   15dd8:	pop    edi
   15dd9:	pop    esi
   15dda:	xor    ecx,ebp
   15ddc:	pop    ebx
   15ddd:	call   0x1a745
   15de2:	leave  
   15de3:	ret    0x4
   15de6:	int3   
   15de7:	int3   
   15de8:	int3   
   15de9:	int3   
   15dea:	int3   
   15deb:	int3   
   15dec:	mov    edi,edi
   15dee:	push   ebp
   15def:	mov    ebp,esp
   15df1:	sub    esp,0x44
   15df4:	mov    eax,DWORD PTR [ebp+0xc]
   15df7:	mov    eax,DWORD PTR [eax]
   15df9:	push   esi
   15dfa:	xor    esi,esi
   15dfc:	push   0x1ac1c
   15e01:	mov    DWORD PTR [ebp-0x44],0x18
   15e08:	mov    DWORD PTR [ebp-0x40],esi
   15e0b:	mov    DWORD PTR [ebp-0x38],0x200
   15e12:	mov    DWORD PTR [ebp-0x3c],esi
   15e15:	mov    DWORD PTR [ebp-0x34],esi
   15e18:	mov    DWORD PTR [ebp-0x30],esi
   15e1b:	mov    DWORD PTR [ebp-0x2c],eax
   15e1e:	mov    DWORD PTR [ebp-0x28],esi
   15e21:	mov    DWORD PTR [ebp-0x10],esi
   15e24:	call   0x116f2
   15e29:	lea    ecx,[ebp-0x2c]
   15e2c:	push   ecx
   15e2d:	lea    ecx,[ebp-0x44]
   15e30:	push   ecx
   15e31:	push   0x1f0fff
   15e36:	lea    ecx,[ebp-0x10]
   15e39:	push   ecx
   15e3a:	call   eax
   15e3c:	test   eax,eax
   15e3e:	jl     0x160bd
   15e44:	push   ebx
   15e45:	push   edi
   15e46:	mov    edi,0x1ac38
   15e4b:	mov    ebx,0x400
   15e50:	push   edi
   15e51:	mov    DWORD PTR [ebp-0x8],esi
   15e54:	mov    DWORD PTR [ebp-0x14],ebx
   15e57:	call   0x116f2
   15e5c:	push   0x40
   15e5e:	mov    esi,0x1000
   15e63:	push   esi
   15e64:	lea    ecx,[ebp-0x14]
   15e67:	push   ecx
   15e68:	push   0x0
   15e6a:	lea    ecx,[ebp-0x8]
   15e6d:	push   ecx
   15e6e:	push   DWORD PTR [ebp-0x10]
   15e71:	call   eax
   15e73:	test   eax,eax
   15e75:	jl     0x15e80
   15e77:	mov    eax,DWORD PTR [ebp-0x8]
   15e7a:	mov    ecx,DWORD PTR [ebp+0xc]
   15e7d:	mov    DWORD PTR [ecx+0x8],eax
   15e80:	and    DWORD PTR [ebp-0x18],0x0
   15e84:	push   edi
   15e85:	mov    DWORD PTR [ebp-0x14],ebx
   15e88:	call   0x116f2
   15e8d:	push   0x4
   15e8f:	push   esi
   15e90:	lea    ecx,[ebp-0x14]
   15e93:	push   ecx
   15e94:	push   0x0
   15e96:	lea    ecx,[ebp-0x18]
   15e99:	push   ecx
   15e9a:	push   DWORD PTR [ebp-0x10]
   15e9d:	call   eax
   15e9f:	test   eax,eax
   15ea1:	jl     0x15eac
   15ea3:	mov    eax,DWORD PTR [ebp-0x18]
   15ea6:	mov    ecx,DWORD PTR [ebp+0xc]
   15ea9:	mov    DWORD PTR [ecx+0xc],eax
   15eac:	push   0x1ac68
   15eb1:	call   0x116f2
   15eb6:	lea    ecx,[ebp-0x1c]
   15eb9:	push   ecx
   15eba:	push   DWORD PTR [ebp-0x2c]
   15ebd:	call   eax
   15ebf:	test   eax,eax
   15ec1:	jl     0x160bb
   15ec7:	push   DWORD PTR [ebp-0x1c]
   15eca:	call   DWORD PTR ds:0x1b94c
   15ed0:	mov    ebx,DWORD PTR [ebp-0x8]
   15ed3:	and    DWORD PTR [ebp-0x4],0x0
   15ed7:	test   ebx,ebx
   15ed9:	je     0x160a3
   15edf:	mov    edi,DWORD PTR [ebp-0x18]
   15ee2:	push   0x40
   15ee4:	push   0x70008
   15ee9:	push   edi
   15eea:	mov    DWORD PTR [ebp-0xc],edi
   15eed:	call   0x17b92
   15ef2:	push   0x1af58
   15ef7:	push   0x4
   15ef9:	push   0x1af4e
   15efe:	call   0x15974
   15f03:	mov    esi,eax
   15f05:	mov    cx,WORD PTR [eax]
   15f08:	inc    eax
   15f09:	inc    eax
   15f0a:	test   cx,cx
   15f0d:	jne    0x15f05
   15f0f:	sub    eax,esi
   15f11:	dec    edi
   15f12:	dec    edi
   15f13:	mov    cx,WORD PTR [edi+0x2]
   15f17:	inc    edi
   15f18:	inc    edi
   15f19:	test   cx,cx
   15f1c:	jne    0x15f13
   15f1e:	mov    ecx,eax
   15f20:	shr    ecx,0x2
   15f23:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   15f25:	mov    ecx,eax
   15f27:	push   0x60
   15f29:	and    ecx,0x3
   15f2c:	push   ebx
   15f2d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   15f2f:	mov    DWORD PTR [ebp-0x20],ebx
   15f32:	call   0x17b44
   15f37:	push   0x68
   15f39:	push   eax
   15f3a:	call   0x17b44
   15f3f:	push   DWORD PTR [ebp-0xc]
   15f42:	push   eax
   15f43:	call   0x17b5c
   15f48:	push   0xb8
   15f4d:	push   eax
   15f4e:	call   0x17b44
   15f53:	push   DWORD PTR ds:0x70b40
   15f59:	push   eax
   15f5a:	call   0x17b5c
   15f5f:	push   0xc00b
   15f64:	push   eax
   15f65:	call   0x17b76
   15f6a:	push   0x74
   15f6c:	push   eax
   15f6d:	call   0x17b44
   15f72:	push   0x2
   15f74:	push   eax
   15f75:	call   0x17b44
   15f7a:	push   0xd0ff
   15f7f:	push   eax
   15f80:	call   0x17b76
   15f85:	push   0x61
   15f87:	push   eax
   15f88:	call   0x17b44
   15f8d:	mov    ebx,DWORD PTR [ebp+0x8]
   15f90:	mov    edi,eax
   15f92:	mov    esi,ebx
   15f94:	push   0x0
   15f96:	push   esi
   15f97:	push   edi
   15f98:	call   0x18308
   15f9d:	mov    ecx,eax
   15f9f:	sub    ecx,esi
   15fa1:	add    DWORD PTR [ebp-0x4],ecx
   15fa4:	add    edi,ecx
   15fa6:	cmp    DWORD PTR [ebp-0x4],0x5
   15faa:	mov    esi,eax
   15fac:	jb     0x15f94
   15fae:	mov    eax,DWORD PTR [ebp-0x4]
   15fb1:	push   edi
   15fb2:	add    eax,ebx
   15fb4:	push   eax
   15fb5:	call   0x17bba
   15fba:	mov    eax,DWORD PTR [ebp-0x8]
   15fbd:	test   eax,eax
   15fbf:	je     0x160a3
   15fc5:	add    eax,0x400
   15fca:	lea    ecx,[eax-0x10]
   15fcd:	mov    DWORD PTR [ebp-0x24],ecx
   15fd0:	mov    ecx,DWORD PTR [ebp-0x4]
   15fd3:	lea    esi,[eax-0xc]
   15fd6:	push   esi
   15fd7:	lea    edi,[eax-0x4]
   15fda:	lea    ebx,[eax-0x8]
   15fdd:	shr    ecx,0x2
   15fe0:	lea    ecx,[ecx*4+0x14]
   15fe7:	push   0x40
   15fe9:	sub    eax,ecx
   15feb:	push   ebx
   15fec:	mov    DWORD PTR [ebp-0xc],eax
   15fef:	mov    eax,DWORD PTR [ebp+0x8]
   15ff2:	mov    DWORD PTR [edi],eax
   15ff4:	push   edi
   15ff5:	mov    DWORD PTR [ebx],0x5
   15ffb:	and    DWORD PTR [esi],0x0
   15ffe:	push   0xffffffff
   16000:	call   DWORD PTR ds:0x70ac4
   16006:	test   eax,eax
   16008:	jl     0x1606d
   1600a:	push   DWORD PTR [ebp-0x4]
   1600d:	push   0x90
   16012:	push   DWORD PTR [ebp-0xc]
   16015:	call   0x1a7aa
   1601a:	mov    eax,DWORD PTR [ebp-0x20]
   1601d:	sub    eax,DWORD PTR [ebp+0x8]
   16020:	add    esp,0xc
   16023:	sub    eax,0x5
   16026:	push   eax
   16027:	mov    eax,DWORD PTR [ebp-0xc]
   1602a:	inc    eax
   1602b:	push   eax
   1602c:	call   0x17b5c
   16031:	push   0xe9
   16036:	push   DWORD PTR [ebp-0xc]
   16039:	call   0x17b44
   1603e:	mov    eax,DWORD PTR [ebp-0x24]
   16041:	and    DWORD PTR [eax],0x0
   16044:	push   eax
   16045:	push   DWORD PTR [ebp-0x4]
   16048:	push   DWORD PTR [ebp-0xc]
   1604b:	push   DWORD PTR [ebp+0x8]
   1604e:	push   0xffffffff
   16050:	call   DWORD PTR ds:0x70ab8
   16056:	mov    eax,DWORD PTR [ebp+0xc]
   16059:	mov    BYTE PTR [eax+0x10],0x1
   1605d:	lea    eax,[ebp-0x20]
   16060:	push   eax
   16061:	push   DWORD PTR [esi]
   16063:	push   ebx
   16064:	push   edi
   16065:	push   0xffffffff
   16067:	call   DWORD PTR ds:0x70ac4
   1606d:	mov    esi,DWORD PTR [ebp-0x8]
   16070:	test   esi,esi
   16072:	je     0x160a3
   16074:	lea    eax,[esi+0x400]
   1607a:	lea    ecx,[eax-0x4]
   1607d:	lea    edx,[eax-0x8]
   16080:	add    eax,0xfffffff4
   16083:	push   eax
   16084:	push   0x20
   16086:	push   edx
   16087:	mov    DWORD PTR [ecx],esi
   16089:	push   ecx
   1608a:	mov    DWORD PTR [edx],0x400
   16090:	and    DWORD PTR [eax],0x0
   16093:	push   0xffffffff
   16095:	call   DWORD PTR ds:0x70ac4
   1609b:	test   eax,eax
   1609d:	jge    0x160a3
   1609f:	and    DWORD PTR [ebp-0x8],0x0
   160a3:	call   DWORD PTR ds:0x1b948
   160a9:	mov    ecx,DWORD PTR [ebp-0x1c]
   160ac:	call   DWORD PTR ds:0x1b9d0
   160b2:	push   DWORD PTR [ebp-0x10]
   160b5:	call   DWORD PTR ds:0x1b9d4
   160bb:	pop    edi
   160bc:	pop    ebx
   160bd:	pop    esi
   160be:	leave  
   160bf:	ret    0x8
   160c2:	int3   
   160c3:	int3   
   160c4:	int3   
   160c5:	int3   
   160c6:	int3   
   160c7:	int3   
   160c8:	mov    edi,edi
   160ca:	push   ebp
   160cb:	mov    ebp,esp
   160cd:	cmp    DWORD PTR ds:0x70b40,0x0
   160d4:	push   esi
   160d5:	mov    esi,DWORD PTR [ebp+0x10]
   160d8:	jne    0x161a3
   160de:	push   0x1b148
   160e3:	push   0xc
   160e5:	push   0x1b12e
   160ea:	call   0x15974
   160ef:	push   eax
   160f0:	push   DWORD PTR [ebp+0x8]
   160f3:	call   0x10cb2
   160f8:	test   al,al
   160fa:	je     0x161a3
   16100:	mov    eax,DWORD PTR [esi+0x4]
   16103:	push   0x1b0ee
   16108:	push   0xc
   1610a:	push   0x1b0e0
   1610f:	mov    ds:0x70b38,eax
   16114:	call   0x15a44
   16119:	push   eax
   1611a:	push   DWORD PTR [esi+0x4]
   1611d:	call   0x119f4
   16122:	push   0x1b0ac
   16127:	push   0xc
   16129:	push   0x1b09e
   1612e:	mov    ds:0x70b40,eax
   16133:	call   0x15a44
   16138:	push   eax
   16139:	push   DWORD PTR [esi+0x4]
   1613c:	call   0x119f4
   16141:	push   0x1b064
   16146:	push   0xc
   16148:	push   0x1b056
   1614d:	mov    ds:0x70b44,eax
   16152:	call   0x15a44
   16157:	push   eax
   16158:	push   DWORD PTR [esi+0x4]
   1615b:	call   0x119f4
   16160:	push   0x1b01e
   16165:	push   0x5
   16167:	push   0x1b018
   1616c:	mov    ds:0x70b48,eax
   16171:	call   0x15a44
   16176:	push   eax
   16177:	push   DWORD PTR [esi+0x4]
   1617a:	call   0x119f4
   1617f:	push   0x1afd8
   16184:	push   0x4
   16186:	push   0x1afd2
   1618b:	mov    ds:0x70b4c,eax
   16190:	call   0x15a44
   16195:	push   eax
   16196:	push   DWORD PTR [esi+0x4]
   16199:	call   0x119f4
   1619e:	mov    ds:0x70b50,eax
   161a3:	cmp    DWORD PTR ds:0x70b3c,0x0
   161aa:	jne    0x161d2
   161ac:	push   0x1afa2
   161b1:	push   0x9
   161b3:	push   0x1af8e
   161b8:	call   0x15974
   161bd:	push   eax
   161be:	push   DWORD PTR [ebp+0x8]
   161c1:	call   0x10cb2
   161c6:	test   al,al
   161c8:	je     0x161d2
   161ca:	mov    eax,DWORD PTR [esi+0x4]
   161cd:	mov    ds:0x70b3c,eax
   161d2:	pop    esi
   161d3:	pop    ebp
   161d4:	ret    0xc
   161d7:	int3   
   161d8:	int3   
   161d9:	int3   
   161da:	int3   
   161db:	int3   
   161dc:	mov    edi,edi
   161de:	push   ebp
   161df:	mov    ebp,esp
   161e1:	sub    esp,0x4c
   161e4:	push   ebx
   161e5:	push   esi
   161e6:	push   edi
   161e7:	push   DWORD PTR [ebp+0xc]
   161ea:	push   DWORD PTR [ebp+0x8]
   161ed:	call   DWORD PTR ds:0x70acc
   161f3:	mov    DWORD PTR [ebp-0x8],eax
   161f6:	xor    eax,eax
   161f8:	xor    ebx,ebx
   161fa:	mov    DWORD PTR [ebp-0x30],ebx
   161fd:	lea    edi,[ebp-0x2c]
   16200:	stos   DWORD PTR es:[edi],eax
   16201:	stos   DWORD PTR es:[edi],eax
   16202:	stos   DWORD PTR es:[edi],eax
   16203:	stos   DWORD PTR es:[edi],eax
   16204:	xor    eax,eax
   16206:	mov    DWORD PTR [ebp-0x1c],ebx
   16209:	lea    edi,[ebp-0x18]
   1620c:	stos   DWORD PTR es:[edi],eax
   1620d:	stos   DWORD PTR es:[edi],eax
   1620e:	stos   DWORD PTR es:[edi],eax
   1620f:	stos   DWORD PTR es:[edi],eax
   16210:	lea    eax,[ebp-0x30]
   16213:	push   eax
   16214:	push   ebx
   16215:	call   0x10d40
   1621a:	mov    BYTE PTR [ebp+0xf],al
   1621d:	lea    eax,[ebp-0x1c]
   16220:	push   eax
   16221:	push   0x1
   16223:	call   0x10d40
   16228:	mov    BYTE PTR [ebp-0x1],al
   1622b:	mov    esi,0x1ad88
   16230:	cmp    BYTE PTR [ebp+0xf],bl
   16233:	je     0x16297
   16235:	cmp    DWORD PTR [ebp-0x30],ebx
   16238:	je     0x16297
   1623a:	push   0x6
   1623c:	pop    ecx
   1623d:	xor    eax,eax
   1623f:	mov    DWORD PTR [ebp-0x4c],ebx
   16242:	lea    edi,[ebp-0x48]
   16245:	push   esi
   16246:	rep stos DWORD PTR es:[edi],eax
   16248:	call   0x116f2
   1624d:	push   ebx
   1624e:	push   0x1c
   16250:	lea    ecx,[ebp-0x4c]
   16253:	push   ecx
   16254:	push   ebx
   16255:	push   DWORD PTR [ebp+0x8]
   16258:	call   eax
   1625a:	mov    eax,DWORD PTR [ebp-0x30]
   1625d:	cmp    DWORD PTR [ebp-0x44],eax
   16260:	jne    0x16297
   16262:	push   esi
   16263:	mov    DWORD PTR [ebp+0xc],ebx
   16266:	call   0x116f2
   1626b:	push   ebx
   1626c:	push   0x4
   1626e:	lea    ecx,[ebp+0xc]
   16271:	push   ecx
   16272:	push   0x9
   16274:	push   DWORD PTR [ebp+0x8]
   16277:	call   eax
   16279:	test   eax,eax
   1627b:	jge    0x16280
   1627d:	mov    DWORD PTR [ebp+0xc],ebx
   16280:	cmp    DWORD PTR [ebp+0xc],ebx
   16283:	je     0x16297
   16285:	lea    eax,[ebp-0x30]
   16288:	push   eax
   16289:	push   DWORD PTR [ebp+0xc]
   1628c:	call   0x15dec
   16291:	push   ebx
   16292:	call   0x10dd6
   16297:	cmp    BYTE PTR [ebp-0x1],bl
   1629a:	je     0x16308
   1629c:	cmp    DWORD PTR [ebp-0x1c],ebx
   1629f:	je     0x16308
   162a1:	cmp    BYTE PTR [ebp-0xc],bl
   162a4:	jne    0x16308
   162a6:	push   0x6
   162a8:	pop    ecx
   162a9:	xor    eax,eax
   162ab:	mov    DWORD PTR [ebp-0x4c],ebx
   162ae:	lea    edi,[ebp-0x48]
   162b1:	push   esi
   162b2:	rep stos DWORD PTR es:[edi],eax
   162b4:	call   0x116f2
   162b9:	push   ebx
   162ba:	push   0x1c
   162bc:	lea    ecx,[ebp-0x4c]
   162bf:	push   ecx
   162c0:	push   ebx
   162c1:	push   DWORD PTR [ebp+0x8]
   162c4:	call   eax
   162c6:	mov    eax,DWORD PTR [ebp-0x1c]
   162c9:	cmp    DWORD PTR [ebp-0x44],eax
   162cc:	jne    0x16308
   162ce:	push   esi
   162cf:	mov    DWORD PTR [ebp+0xc],ebx
   162d2:	call   0x116f2
   162d7:	push   ebx
   162d8:	push   0x4
   162da:	lea    ecx,[ebp+0xc]
   162dd:	push   ecx
   162de:	push   0x9
   162e0:	push   DWORD PTR [ebp+0x8]
   162e3:	call   eax
   162e5:	test   eax,eax
   162e7:	jge    0x162ec
   162e9:	mov    DWORD PTR [ebp+0xc],ebx
   162ec:	cmp    DWORD PTR [ebp+0xc],ebx
   162ef:	je     0x16308
   162f1:	lea    eax,[ebp-0x1c]
   162f4:	push   eax
   162f5:	push   DWORD PTR [ebp+0xc]
   162f8:	call   0x11b06
   162fd:	lea    eax,[ebp-0x1c]
   16300:	push   eax
   16301:	push   0x1
   16303:	call   0x10d8e
   16308:	mov    eax,DWORD PTR [ebp-0x8]
   1630b:	pop    edi
   1630c:	pop    esi
   1630d:	pop    ebx
   1630e:	leave  
   1630f:	ret    0x8
   16312:	int3   
   16313:	int3   
   16314:	int3   
   16315:	int3   
   16316:	int3   
   16317:	int3   
   16318:	push   0x2c
   1631a:	push   0x6fec8
   1631f:	call   0x1a7f4
   16324:	xor    edi,edi
   16326:	mov    DWORD PTR [ebp-0x24],edi
   16329:	mov    ebx,DWORD PTR [ebp+0xc]
   1632c:	mov    DWORD PTR [ebx+0x18],edi
   1632f:	mov    DWORD PTR [ebx+0x1c],edi
   16332:	mov    eax,DWORD PTR [ebx+0x60]
   16335:	cmp    BYTE PTR [eax],0xe
   16338:	jne    0x16766
   1633e:	mov    eax,DWORD PTR [eax+0xc]
   16341:	mov    DWORD PTR [ebx+0x1c],0x84c
   16348:	mov    ecx,0x22c05c
   1634d:	cmp    eax,ecx
   1634f:	ja     0x16656
   16355:	je     0x1663e
   1635b:	add    ecx,0xffffffd8
   1635e:	cmp    eax,ecx
   16360:	ja     0x16470
   16366:	je     0x16453
   1636c:	sub    eax,0x22c020
   16371:	je     0x1641d
   16377:	push   0x4
   16379:	pop    esi
   1637a:	sub    eax,esi
   1637c:	je     0x163e7
   1637e:	sub    eax,esi
   16380:	je     0x163cc
   16382:	sub    eax,esi
   16384:	je     0x163bf
   16386:	sub    eax,esi
   16388:	jne    0x166fa
   1638e:	mov    esi,DWORD PTR [ebx+0xc]
   16391:	mov    eax,DWORD PTR [esi]
   16393:	add    eax,0x20
   16396:	mov    DWORD PTR [ebx+0x1c],eax
   16399:	push   0xffffffff
   1639b:	lea    eax,[esi+0x20]
   1639e:	push   eax
   1639f:	lea    ecx,[ebp-0x34]
   163a2:	call   0x11274
   163a7:	push   esi
   163a8:	lea    eax,[ebp-0x34]
   163ab:	push   eax
   163ac:	call   0x144a0
   163b1:	push   DWORD PTR [ebp-0x34]
   163b4:	call   0x10832
   163b9:	pop    ecx
   163ba:	jmp    0x16766
   163bf:	push   DWORD PTR [ebx+0xc]
   163c2:	call   0x150c2
   163c7:	jmp    0x16763
   163cc:	mov    ecx,DWORD PTR ds:0x70ac0
   163d2:	call   0x14c94
   163d7:	mov    ecx,DWORD PTR ds:0x70194
   163dd:	call   0x14d50
   163e2:	jmp    0x16766
   163e7:	mov    eax,DWORD PTR [ebx+0xc]
   163ea:	mov    DWORD PTR [ebx+0x1c],0x10
   163f1:	mov    ecx,DWORD PTR [eax]
   163f3:	cmp    ecx,edi
   163f5:	jl     0x16766
   163fb:	cmp    ecx,0x6
   163fe:	jge    0x16766
   16404:	mov    edx,DWORD PTR [eax+0x8]
   16407:	mov    DWORD PTR [ecx*8+0x70b08],edx
   1640e:	mov    eax,DWORD PTR [eax+0xc]
   16411:	mov    DWORD PTR [ecx*8+0x70b0c],eax
   16418:	jmp    0x16766
   1641d:	mov    eax,DWORD PTR [ebx+0xc]
   16420:	mov    DWORD PTR [ebx+0x1c],0x10
   16427:	mov    ecx,DWORD PTR [eax]
   16429:	cmp    ecx,edi
   1642b:	jl     0x16766
   16431:	cmp    ecx,0x6
   16434:	jge    0x16766
   1643a:	mov    edx,DWORD PTR [ecx*8+0x70b08]
   16441:	mov    DWORD PTR [eax+0x8],edx
   16444:	mov    ecx,DWORD PTR [ecx*8+0x70b0c]
   1644b:	mov    DWORD PTR [eax+0xc],ecx
   1644e:	jmp    0x16766
   16453:	mov    esi,DWORD PTR [ebx+0xc]
   16456:	push   esi
   16457:	call   0x152d8
   1645c:	cmp    DWORD PTR [esi+0x4],0x2
   16460:	jne    0x16763
   16466:	call   0x156c4
   1646b:	jmp    0x16763
   16470:	sub    eax,0x22c038
   16475:	je     0x16625
   1647b:	push   0x4
   1647d:	pop    esi
   1647e:	sub    eax,esi
   16480:	je     0x165a1
   16486:	sub    eax,0x10
   16489:	je     0x16597
   1648f:	sub    eax,esi
   16491:	jne    0x166fa
   16497:	mov    DWORD PTR [ebx+0x1c],edi
   1649a:	mov    esi,DWORD PTR [ebx+0xc]
   1649d:	mov    DWORD PTR [ebp-0x20],esi
   164a0:	push   0xffffffff
   164a2:	push   0x1abe8
   164a7:	lea    ecx,[ebp-0x2c]
   164aa:	call   0x11274
   164af:	xor    edi,edi
   164b1:	inc    edi
   164b2:	mov    DWORD PTR [esi+0x8],edi
   164b5:	xor    eax,eax
   164b7:	push   eax
   164b8:	push   eax
   164b9:	push   eax
   164ba:	push   eax
   164bb:	push   0x70138
   164c0:	call   DWORD PTR ds:0x1b92c
   164c6:	test   eax,eax
   164c8:	jge    0x164d2
   164ca:	push   DWORD PTR [ebp-0x2c]
   164cd:	jmp    0x163b4
   164d2:	and    DWORD PTR [ebp-0x4],0x0
   164d6:	mov    DWORD PTR [ebp-0x4],edi
   164d9:	mov    eax,DWORD PTR [esi]
   164db:	add    eax,0x20
   164de:	mov    DWORD PTR [ebx+0x1c],eax
   164e1:	mov    eax,ds:0x70ac0
   164e6:	mov    ebx,DWORD PTR [eax+0x4]
   164e9:	mov    eax,DWORD PTR [ebx]
   164eb:	mov    DWORD PTR [ebp+0xc],eax
   164ee:	and    DWORD PTR [ebp-0x1c],0x0
   164f2:	mov    edi,DWORD PTR [esi+0x20]
   164f5:	cmp    DWORD PTR [ebp-0x1c],edi
   164f8:	jge    0x1650c
   164fa:	cmp    DWORD PTR [ebp+0xc],ebx
   164fd:	je     0x1650c
   164ff:	lea    ecx,[ebp+0xc]
   16502:	call   0x129ce
   16507:	inc    DWORD PTR [ebp-0x1c]
   1650a:	jmp    0x164f5
   1650c:	mov    eax,DWORD PTR [ebp+0xc]
   1650f:	cmp    eax,ebx
   16511:	je     0x16525
   16513:	and    DWORD PTR [esi+0x8],0x0
   16517:	add    eax,0x10
   1651a:	push   eax
   1651b:	lea    ecx,[ebp-0x2c]
   1651e:	call   0x11f6c
   16523:	jmp    0x1652c
   16525:	mov    DWORD PTR [esi+0x8],0x1
   1652c:	and    DWORD PTR [esi+0x4],0x0
   16530:	and    DWORD PTR [ebp-0x4],0x0
   16534:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1653b:	call   0x16589
   16540:	cmp    DWORD PTR [esi+0x8],0x0
   16544:	jne    0x164ca
   16546:	push   esi
   16547:	lea    eax,[ebp-0x2c]
   1654a:	push   eax
   1654b:	call   0x144a0
   16550:	jmp    0x164ca
   16555:	xor    eax,eax
   16557:	inc    eax
   16558:	ret    
   16559:	mov    esp,DWORD PTR [ebp-0x18]
   1655c:	mov    eax,DWORD PTR [ebp-0x20]
   1655f:	mov    DWORD PTR [eax+0x8],0x4
   16566:	push   DWORD PTR [ebp-0x2c]
   16569:	call   0x10832
   1656e:	push   0xfffffffe
   16570:	lea    eax,[ebp-0x10]
   16573:	push   eax
   16574:	push   0x70100
   16579:	call   0x1a9bc
   1657e:	add    esp,0x10
   16581:	jmp    0x16766
   16586:	mov    esi,DWORD PTR [ebp-0x20]
   16589:	push   0x0
   1658b:	push   0x70138
   16590:	call   DWORD PTR ds:0x1b928
   16596:	ret    
   16597:	call   0x110d6
   1659c:	jmp    0x16766
   165a1:	mov    eax,DWORD PTR [ebx+0xc]
   165a4:	mov    ecx,DWORD PTR ds:0x70004
   165aa:	mov    esi,eax
   165ac:	sub    esi,ecx
   165ae:	push   0x2
   165b0:	pop    edi
   165b1:	movzx  edx,WORD PTR [ecx]
   165b4:	mov    WORD PTR [esi+ecx*1],dx
   165b8:	add    ecx,edi
   165ba:	test   dx,dx
   165bd:	jne    0x165b1
   165bf:	mov    ecx,0x70048
   165c4:	lea    esi,[eax+0x50]
   165c7:	sub    esi,ecx
   165c9:	movzx  edx,WORD PTR [ecx]
   165cc:	mov    WORD PTR [esi+ecx*1],dx
   165d0:	add    ecx,edi
   165d2:	test   dx,dx
   165d5:	jne    0x165c9
   165d7:	mov    ecx,0x70008
   165dc:	lea    esi,[eax+0x90]
   165e2:	sub    esi,ecx
   165e4:	movzx  edx,WORD PTR [ecx]
   165e7:	mov    WORD PTR [esi+ecx*1],dx
   165eb:	add    ecx,edi
   165ed:	test   dx,dx
   165f0:	jne    0x165e4
   165f2:	mov    ecx,0x70088
   165f7:	lea    esi,[eax+0xd0]
   165fd:	sub    esi,ecx
   165ff:	movzx  edx,WORD PTR [ecx]
   16602:	mov    WORD PTR [esi+ecx*1],dx
   16606:	add    ecx,edi
   16608:	test   dx,dx
   1660b:	jne    0x165ff
   1660d:	lea    edi,[eax+0x40]
   16610:	mov    esi,0x6c1b8
   16615:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   16616:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   16617:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   16618:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   16619:	mov    DWORD PTR [ebx+0x1c],0x110
   16620:	jmp    0x16766
   16625:	mov    eax,DWORD PTR [ebx+0xc]
   16628:	mov    ecx,DWORD PTR [eax]
   1662a:	add    ecx,0xc
   1662d:	mov    DWORD PTR [ebx+0x1c],ecx
   16630:	push   eax
   16631:	push   DWORD PTR [eax+0x4]
   16634:	call   0x146fa
   16639:	jmp    0x16766
   1663e:	mov    eax,DWORD PTR [ebx+0xc]
   16641:	mov    ecx,DWORD PTR [eax]
   16643:	mov    DWORD PTR ds:0x70af0,ecx
   16649:	mov    eax,DWORD PTR [eax+0x4]
   1664c:	mov    ds:0x70af4,eax
   16651:	jmp    0x16763
   16656:	mov    ecx,0x22c078
   1665b:	cmp    eax,ecx
   1665d:	ja     0x166e4
   16663:	je     0x166da
   16665:	sub    eax,0x22c060
   1666a:	je     0x166bc
   1666c:	push   0x4
   1666e:	pop    esi
   1666f:	sub    eax,esi
   16671:	je     0x166af
   16673:	sub    eax,esi
   16675:	je     0x166a0
   16677:	sub    eax,esi
   16679:	je     0x1668c
   1667b:	sub    eax,esi
   1667d:	jne    0x166fa
   1667f:	push   DWORD PTR [ebx+0xc]
   16682:	call   0x10e02
   16687:	jmp    0x16763
   1668c:	mov    edi,DWORD PTR [ebx+0xc]
   1668f:	push   DWORD PTR [edi]
   16691:	call   0x111e2
   16696:	mov    DWORD PTR [edi],eax
   16698:	mov    DWORD PTR [ebx+0x1c],esi
   1669b:	jmp    0x16766
   166a0:	mov    eax,DWORD PTR [ebx+0xc]
   166a3:	push   DWORD PTR [eax]
   166a5:	call   0x1119e
   166aa:	jmp    0x16763
   166af:	push   DWORD PTR [ebx+0xc]
   166b2:	call   0x110f4
   166b7:	jmp    0x16763
   166bc:	mov    DWORD PTR [ebx+0x1c],0x8
   166c3:	mov    ebx,DWORD PTR [ebx+0xc]
   166c6:	mov    eax,ds:0x70af0
   166cb:	mov    DWORD PTR [ebx],eax
   166cd:	mov    eax,ds:0x70af4
   166d2:	mov    DWORD PTR [ebx+0x4],eax
   166d5:	jmp    0x16766
   166da:	push   DWORD PTR [ebx+0xc]
   166dd:	call   0x15b14
   166e2:	jmp    0x16763
   166e4:	sub    eax,0x22c07c
   166e9:	je     0x16750
   166eb:	push   0x4
   166ed:	pop    esi
   166ee:	sub    eax,esi
   166f0:	je     0x16738
   166f2:	sub    eax,esi
   166f4:	je     0x1672e
   166f6:	sub    eax,esi
   166f8:	je     0x16703
   166fa:	mov    DWORD PTR [ebp-0x24],0xc0000010
   16701:	jmp    0x16763
   16703:	mov    esi,DWORD PTR [ebx+0xc]
   16706:	mov    eax,DWORD PTR [esi]
   16708:	add    eax,0xc
   1670b:	mov    DWORD PTR [ebx+0x1c],eax
   1670e:	push   0xffffffff
   16710:	lea    eax,[esi+0xc]
   16713:	push   eax
   16714:	lea    ecx,[ebp-0x3c]
   16717:	call   0x11274
   1671c:	push   esi
   1671d:	lea    eax,[ebp-0x3c]
   16720:	push   eax
   16721:	call   0x14610
   16726:	push   DWORD PTR [ebp-0x3c]
   16729:	jmp    0x163b4
   1672e:	push   DWORD PTR [ebx+0xc]
   16731:	call   0x151e2
   16736:	jmp    0x16763
   16738:	mov    DWORD PTR [ebx+0x1c],0x8
   1673f:	mov    ebx,DWORD PTR [ebx+0xc]
   16742:	mov    eax,ds:0x70af8
   16747:	mov    DWORD PTR [ebx],eax
   16749:	mov    eax,ds:0x70afc
   1674e:	jmp    0x166d2
   16750:	mov    eax,DWORD PTR [ebx+0xc]
   16753:	mov    ecx,DWORD PTR [eax]
   16755:	mov    DWORD PTR ds:0x70af8,ecx
   1675b:	mov    eax,DWORD PTR [eax+0x4]
   1675e:	mov    ds:0x70afc,eax
   16763:	mov    DWORD PTR [ebx+0x1c],edi
   16766:	mov    eax,DWORD PTR [ebp-0x24]
   16769:	call   0x1a839
   1676e:	ret    0x8
   16771:	int3   
   16772:	int3   
   16773:	int3   
   16774:	int3   
   16775:	int3   
   16776:	push   0x848
   1677b:	push   0x6fef0
   16780:	call   0x1ab00
   16785:	xor    ebx,ebx
   16787:	mov    BYTE PTR [ebp-0x81d],bl
   1678d:	xor    eax,eax
   1678f:	mov    WORD PTR [ebp-0x81c],ax
   16796:	push   0x7fe
   1679b:	push   ebx
   1679c:	lea    eax,[ebp-0x81a]
   167a2:	push   eax
   167a3:	call   0x1a7aa
   167a8:	add    esp,0xc
   167ab:	push   0x1b1ea
   167b0:	push   0x15
   167b2:	push   0x1b1be
   167b7:	call   0x15974
   167bc:	mov    edx,eax
   167be:	mov    cx,WORD PTR [eax]
   167c1:	inc    eax
   167c2:	inc    eax
   167c3:	cmp    cx,bx
   167c6:	jne    0x167be
   167c8:	sub    eax,edx
   167ca:	lea    edi,[ebp-0x81c]
   167d0:	dec    edi
   167d1:	dec    edi
   167d2:	mov    cx,WORD PTR [edi+0x2]
   167d6:	inc    edi
   167d7:	inc    edi
   167d8:	cmp    cx,bx
   167db:	jne    0x167d2
   167dd:	mov    ecx,eax
   167df:	mov    esi,edx
   167e1:	shr    ecx,0x2
   167e4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   167e6:	mov    ecx,eax
   167e8:	and    ecx,0x3
   167eb:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   167ed:	mov    eax,0x70008
   167f2:	mov    edx,eax
   167f4:	mov    cx,WORD PTR [eax]
   167f7:	inc    eax
   167f8:	inc    eax
   167f9:	cmp    cx,bx
   167fc:	jne    0x167f4
   167fe:	sub    eax,edx
   16800:	lea    edi,[ebp-0x81c]
   16806:	dec    edi
   16807:	dec    edi
   16808:	mov    cx,WORD PTR [edi+0x2]
   1680c:	inc    edi
   1680d:	inc    edi
   1680e:	cmp    cx,bx
   16811:	jne    0x16808
   16813:	mov    ecx,eax
   16815:	mov    esi,edx
   16817:	shr    ecx,0x2
   1681a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1681c:	mov    ecx,eax
   1681e:	and    ecx,0x3
   16821:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   16823:	push   0x1b182
   16828:	push   0x4
   1682a:	push   0x1af4e
   1682f:	call   0x15974
   16834:	mov    edx,eax
   16836:	mov    cx,WORD PTR [eax]
   16839:	inc    eax
   1683a:	inc    eax
   1683b:	cmp    cx,bx
   1683e:	jne    0x16836
   16840:	sub    eax,edx
   16842:	lea    edi,[ebp-0x81c]
   16848:	dec    edi
   16849:	dec    edi
   1684a:	mov    cx,WORD PTR [edi+0x2]
   1684e:	inc    edi
   1684f:	inc    edi
   16850:	cmp    cx,bx
   16853:	jne    0x1684a
   16855:	mov    ecx,eax
   16857:	mov    esi,edx
   16859:	shr    ecx,0x2
   1685c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1685e:	mov    ecx,eax
   16860:	and    ecx,0x3
   16863:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   16865:	lea    eax,[ebp-0x81c]
   1686b:	push   eax
   1686c:	lea    eax,[ebp-0x858]
   16872:	push   eax
   16873:	call   DWORD PTR ds:0x1b908
   16879:	mov    DWORD PTR [ebp-0x824],ebx
   1687f:	xor    eax,eax
   16881:	lea    edi,[ebp-0x84c]
   16887:	stos   DWORD PTR es:[edi],eax
   16888:	stos   DWORD PTR es:[edi],eax
   16889:	stos   DWORD PTR es:[edi],eax
   1688a:	stos   DWORD PTR es:[edi],eax
   1688b:	stos   DWORD PTR es:[edi],eax
   1688c:	mov    DWORD PTR [ebp-0x830],ebx
   16892:	xor    eax,eax
   16894:	lea    edi,[ebp-0x82c]
   1689a:	stos   DWORD PTR es:[edi],eax
   1689b:	mov    DWORD PTR [ebp-0x850],0x18
   168a5:	mov    DWORD PTR [ebp-0x84c],ebx
   168ab:	mov    DWORD PTR [ebp-0x844],0x240
   168b5:	lea    eax,[ebp-0x858]
   168bb:	mov    DWORD PTR [ebp-0x848],eax
   168c1:	mov    DWORD PTR [ebp-0x840],ebx
   168c7:	mov    DWORD PTR [ebp-0x83c],ebx
   168cd:	push   ebx
   168ce:	push   ebx
   168cf:	push   0x60
   168d1:	push   0x1
   168d3:	push   ebx
   168d4:	push   0x80
   168d9:	push   ebx
   168da:	lea    eax,[ebp-0x830]
   168e0:	push   eax
   168e1:	lea    eax,[ebp-0x850]
   168e7:	push   eax
   168e8:	push   0x100001
   168ed:	lea    eax,[ebp-0x824]
   168f3:	push   eax
   168f4:	call   DWORD PTR ds:0x1b980
   168fa:	cmp    eax,ebx
   168fc:	jge    0x16905
   168fe:	xor    al,al
   16900:	jmp    0x16999
   16905:	mov    DWORD PTR [ebp-0x4],ebx
   16908:	mov    esi,DWORD PTR [ebp+0xc]
   1690b:	mov    eax,0x10000
   16910:	cmp    esi,eax
   16912:	jbe    0x16916
   16914:	mov    esi,eax
   16916:	push   esi
   16917:	call   0x107fe
   1691c:	pop    ecx
   1691d:	mov    DWORD PTR [ebp-0x828],eax
   16923:	mov    DWORD PTR [ebp-0x838],ebx
   16929:	xor    eax,eax
   1692b:	lea    edi,[ebp-0x834]
   16931:	stos   DWORD PTR es:[edi],eax
   16932:	push   ebx
   16933:	lea    eax,[ebp-0x838]
   16939:	push   eax
   1693a:	push   esi
   1693b:	push   DWORD PTR [ebp-0x828]
   16941:	lea    eax,[ebp-0x830]
   16947:	push   eax
   16948:	push   ebx
   16949:	push   ebx
   1694a:	push   ebx
   1694b:	push   DWORD PTR [ebp-0x824]
   16951:	call   DWORD PTR ds:0x1b97c
   16957:	cmp    eax,ebx
   16959:	jl     0x16980
   1695b:	mov    ecx,DWORD PTR [ebp-0x82c]
   16961:	mov    edi,DWORD PTR [ebp+0x8]
   16964:	mov    esi,DWORD PTR [ebp-0x828]
   1696a:	xor    eax,eax
   1696c:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
   1696e:	sete   al
   16971:	mov    BYTE PTR [ebp-0x81d],al
   16977:	jmp    0x16980
   16979:	xor    eax,eax
   1697b:	inc    eax
   1697c:	ret    
   1697d:	mov    esp,DWORD PTR [ebp-0x18]
   16980:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   16987:	push   DWORD PTR [ebp-0x824]
   1698d:	call   DWORD PTR ds:0x1b9d4
   16993:	mov    al,BYTE PTR [ebp-0x81d]
   16999:	call   0x1ab48
   1699e:	ret    0x8
   169a1:	int3   
   169a2:	int3   
   169a3:	int3   
   169a4:	int3   
   169a5:	int3   
   169a6:	push   0x874
   169ab:	push   0x6ff10
   169b0:	call   0x1ab00
   169b5:	mov    eax,DWORD PTR [ebp+0x8]
   169b8:	mov    DWORD PTR [ebp-0x830],eax
   169be:	xor    ebx,ebx
   169c0:	mov    BYTE PTR [ebp-0x81d],bl
   169c6:	xor    eax,eax
   169c8:	mov    WORD PTR [ebp-0x81c],ax
   169cf:	push   0x7fe
   169d4:	push   ebx
   169d5:	lea    eax,[ebp-0x81a]
   169db:	push   eax
   169dc:	call   0x1a7aa
   169e1:	add    esp,0xc
   169e4:	push   0x1b258
   169e9:	push   0x15
   169eb:	push   0x1b1be
   169f0:	call   0x15974
   169f5:	mov    edx,eax
   169f7:	mov    cx,WORD PTR [eax]
   169fa:	inc    eax
   169fb:	inc    eax
   169fc:	cmp    cx,bx
   169ff:	jne    0x169f7
   16a01:	sub    eax,edx
   16a03:	lea    edi,[ebp-0x81c]
   16a09:	dec    edi
   16a0a:	dec    edi
   16a0b:	mov    cx,WORD PTR [edi+0x2]
   16a0f:	inc    edi
   16a10:	inc    edi
   16a11:	cmp    cx,bx
   16a14:	jne    0x16a0b
   16a16:	mov    ecx,eax
   16a18:	mov    esi,edx
   16a1a:	shr    ecx,0x2
   16a1d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   16a1f:	mov    ecx,eax
   16a21:	and    ecx,0x3
   16a24:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   16a26:	mov    eax,0x70008
   16a2b:	mov    edx,eax
   16a2d:	mov    cx,WORD PTR [eax]
   16a30:	inc    eax
   16a31:	inc    eax
   16a32:	cmp    cx,bx
   16a35:	jne    0x16a2d
   16a37:	sub    eax,edx
   16a39:	lea    edi,[ebp-0x81c]
   16a3f:	dec    edi
   16a40:	dec    edi
   16a41:	mov    cx,WORD PTR [edi+0x2]
   16a45:	inc    edi
   16a46:	inc    edi
   16a47:	cmp    cx,bx
   16a4a:	jne    0x16a41
   16a4c:	mov    ecx,eax
   16a4e:	mov    esi,edx
   16a50:	shr    ecx,0x2
   16a53:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   16a55:	mov    ecx,eax
   16a57:	and    ecx,0x3
   16a5a:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   16a5c:	push   0x1b22a
   16a61:	push   0x4
   16a63:	push   0x1af4e
   16a68:	call   0x15974
   16a6d:	mov    edx,eax
   16a6f:	mov    cx,WORD PTR [eax]
   16a72:	inc    eax
   16a73:	inc    eax
   16a74:	cmp    cx,bx
   16a77:	jne    0x16a6f
   16a79:	sub    eax,edx
   16a7b:	lea    edi,[ebp-0x81c]
   16a81:	dec    edi
   16a82:	dec    edi
   16a83:	mov    cx,WORD PTR [edi+0x2]
   16a87:	inc    edi
   16a88:	inc    edi
   16a89:	cmp    cx,bx
   16a8c:	jne    0x16a83
   16a8e:	mov    ecx,eax
   16a90:	mov    esi,edx
   16a92:	shr    ecx,0x2
   16a95:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   16a97:	mov    ecx,eax
   16a99:	and    ecx,0x3
   16a9c:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   16a9e:	lea    eax,[ebp-0x81c]
   16aa4:	push   eax
   16aa5:	lea    eax,[ebp-0x884]
   16aab:	push   eax
   16aac:	call   DWORD PTR ds:0x1b908
   16ab2:	mov    DWORD PTR [ebp-0x824],ebx
   16ab8:	xor    eax,eax
   16aba:	lea    edi,[ebp-0x850]
   16ac0:	stos   DWORD PTR es:[edi],eax
   16ac1:	stos   DWORD PTR es:[edi],eax
   16ac2:	stos   DWORD PTR es:[edi],eax
   16ac3:	stos   DWORD PTR es:[edi],eax
   16ac4:	stos   DWORD PTR es:[edi],eax
   16ac5:	mov    DWORD PTR [ebp-0x82c],ebx
   16acb:	xor    eax,eax
   16acd:	lea    edi,[ebp-0x828]
   16ad3:	stos   DWORD PTR es:[edi],eax
   16ad4:	mov    DWORD PTR [ebp-0x854],0x18
   16ade:	mov    DWORD PTR [ebp-0x850],ebx
   16ae4:	mov    DWORD PTR [ebp-0x848],0x240
   16aee:	lea    eax,[ebp-0x884]
   16af4:	mov    DWORD PTR [ebp-0x84c],eax
   16afa:	mov    DWORD PTR [ebp-0x844],ebx
   16b00:	mov    DWORD PTR [ebp-0x840],ebx
   16b06:	push   ebx
   16b07:	push   ebx
   16b08:	push   0x60
   16b0a:	push   ebx
   16b0b:	push   ebx
   16b0c:	push   0x80
   16b11:	push   ebx
   16b12:	lea    eax,[ebp-0x82c]
   16b18:	push   eax
   16b19:	lea    eax,[ebp-0x854]
   16b1f:	push   eax
   16b20:	push   0x100002
   16b25:	lea    eax,[ebp-0x824]
   16b2b:	push   eax
   16b2c:	call   DWORD PTR ds:0x1b980
   16b32:	cmp    eax,ebx
   16b34:	jge    0x16b3d
   16b36:	xor    al,al
   16b38:	jmp    0x16c40
   16b3d:	mov    DWORD PTR [ebp-0x4],ebx
   16b40:	xor    eax,eax
   16b42:	lea    edi,[ebp-0x82c]
   16b48:	stos   DWORD PTR es:[edi],eax
   16b49:	stos   DWORD PTR es:[edi],eax
   16b4a:	xor    edi,edi
   16b4c:	mov    esi,0x10000
   16b51:	mov    DWORD PTR [ebp-0x834],edi
   16b57:	mov    eax,DWORD PTR [ebp+0xc]
   16b5a:	cmp    edi,eax
   16b5c:	jae    0x16ba6
   16b5e:	mov    DWORD PTR [ebp-0x83c],ebx
   16b64:	mov    DWORD PTR [ebp-0x83c],edi
   16b6a:	mov    DWORD PTR [ebp-0x838],ebx
   16b70:	sub    eax,edi
   16b72:	cmp    eax,esi
   16b74:	jb     0x16b78
   16b76:	mov    eax,esi
   16b78:	push   ebx
   16b79:	push   ebx
   16b7a:	push   eax
   16b7b:	mov    eax,DWORD PTR [ebp-0x830]
   16b81:	add    eax,edi
   16b83:	push   eax
   16b84:	lea    eax,[ebp-0x82c]
   16b8a:	push   eax
   16b8b:	push   ebx
   16b8c:	push   ebx
   16b8d:	push   ebx
   16b8e:	push   DWORD PTR [ebp-0x824]
   16b94:	call   DWORD PTR ds:0x1b988
   16b9a:	cmp    eax,ebx
   16b9c:	jl     0x16c27
   16ba2:	add    edi,esi
   16ba4:	jmp    0x16b51
   16ba6:	mov    BYTE PTR [ebp-0x81d],0x1
   16bad:	mov    DWORD PTR [ebp-0x87c],ebx
   16bb3:	push   0x9
   16bb5:	pop    ecx
   16bb6:	xor    eax,eax
   16bb8:	lea    edi,[ebp-0x878]
   16bbe:	rep stos DWORD PTR es:[edi],eax
   16bc0:	mov    eax,DWORD PTR [ebp+0x10]
   16bc3:	mov    DWORD PTR [ebp-0x86c],eax
   16bc9:	mov    ecx,DWORD PTR [ebp+0x14]
   16bcc:	mov    DWORD PTR [ebp-0x868],ecx
   16bd2:	mov    DWORD PTR [ebp-0x874],eax
   16bd8:	mov    DWORD PTR [ebp-0x870],ecx
   16bde:	mov    DWORD PTR [ebp-0x864],eax
   16be4:	mov    DWORD PTR [ebp-0x860],ecx
   16bea:	mov    DWORD PTR [ebp-0x87c],eax
   16bf0:	mov    DWORD PTR [ebp-0x878],ecx
   16bf6:	mov    DWORD PTR [ebp-0x85c],0x80
   16c00:	push   0x4
   16c02:	push   0x28
   16c04:	lea    eax,[ebp-0x87c]
   16c0a:	push   eax
   16c0b:	lea    eax,[ebp-0x82c]
   16c11:	push   eax
   16c12:	push   DWORD PTR [ebp-0x824]
   16c18:	call   DWORD PTR ds:0x1b984
   16c1e:	jmp    0x16c27
   16c20:	xor    eax,eax
   16c22:	inc    eax
   16c23:	ret    
   16c24:	mov    esp,DWORD PTR [ebp-0x18]
   16c27:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   16c2e:	push   DWORD PTR [ebp-0x824]
   16c34:	call   DWORD PTR ds:0x1b9d4
   16c3a:	mov    al,BYTE PTR [ebp-0x81d]
   16c40:	call   0x1ab48
   16c45:	ret    0x10
   16c48:	int3   
   16c49:	int3   
   16c4a:	int3   
   16c4b:	int3   
   16c4c:	int3   
   16c4d:	int3   
   16c4e:	push   0x874
   16c53:	push   0x6ff30
   16c58:	call   0x1ab00
   16c5d:	xor    ebx,ebx
   16c5f:	mov    BYTE PTR [ebp-0x81d],bl
   16c65:	mov    BYTE PTR [ebp-0x81e],bl
   16c6b:	mov    DWORD PTR [ebp-0x828],ebx
   16c71:	mov    DWORD PTR [ebp-0x824],ebx
   16c77:	xor    eax,eax
   16c79:	mov    WORD PTR [ebp-0x81c],ax
   16c80:	push   0x7fe
   16c85:	push   ebx
   16c86:	lea    eax,[ebp-0x81a]
   16c8c:	push   eax
   16c8d:	call   0x1a7aa
   16c92:	add    esp,0xc
   16c95:	push   0x1b2f8
   16c9a:	push   0x1d
   16c9c:	push   0x1b2bc
   16ca1:	call   0x15974
   16ca6:	mov    edx,eax
   16ca8:	mov    cx,WORD PTR [eax]
   16cab:	inc    eax
   16cac:	inc    eax
   16cad:	cmp    cx,bx
   16cb0:	jne    0x16ca8
   16cb2:	sub    eax,edx
   16cb4:	lea    edi,[ebp-0x81c]
   16cba:	dec    edi
   16cbb:	dec    edi
   16cbc:	mov    cx,WORD PTR [edi+0x2]
   16cc0:	inc    edi
   16cc1:	inc    edi
   16cc2:	cmp    cx,bx
   16cc5:	jne    0x16cbc
   16cc7:	mov    ecx,eax
   16cc9:	mov    esi,edx
   16ccb:	shr    ecx,0x2
   16cce:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   16cd0:	mov    ecx,eax
   16cd2:	and    ecx,0x3
   16cd5:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   16cd7:	mov    eax,0x70048
   16cdc:	mov    edx,eax
   16cde:	mov    cx,WORD PTR [eax]
   16ce1:	inc    eax
   16ce2:	inc    eax
   16ce3:	cmp    cx,bx
   16ce6:	jne    0x16cde
   16ce8:	sub    eax,edx
   16cea:	lea    edi,[ebp-0x81c]
   16cf0:	dec    edi
   16cf1:	dec    edi
   16cf2:	mov    cx,WORD PTR [edi+0x2]
   16cf6:	inc    edi
   16cf7:	inc    edi
   16cf8:	cmp    cx,bx
   16cfb:	jne    0x16cf2
   16cfd:	mov    ecx,eax
   16cff:	mov    esi,edx
   16d01:	shr    ecx,0x2
   16d04:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   16d06:	mov    ecx,eax
   16d08:	and    ecx,0x3
   16d0b:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   16d0d:	push   0x1b29a
   16d12:	push   0x4
   16d14:	push   0x1b290
   16d19:	call   0x15974
   16d1e:	mov    edx,eax
   16d20:	mov    cx,WORD PTR [eax]
   16d23:	inc    eax
   16d24:	inc    eax
   16d25:	cmp    cx,bx
   16d28:	jne    0x16d20
   16d2a:	sub    eax,edx
   16d2c:	lea    edi,[ebp-0x81c]
   16d32:	dec    edi
   16d33:	dec    edi
   16d34:	mov    cx,WORD PTR [edi+0x2]
   16d38:	inc    edi
   16d39:	inc    edi
   16d3a:	cmp    cx,bx
   16d3d:	jne    0x16d34
   16d3f:	mov    ecx,eax
   16d41:	mov    esi,edx
   16d43:	shr    ecx,0x2
   16d46:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   16d48:	mov    ecx,eax
   16d4a:	and    ecx,0x3
   16d4d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   16d4f:	lea    eax,[ebp-0x81c]
   16d55:	push   eax
   16d56:	lea    eax,[ebp-0x85c]
   16d5c:	push   eax
   16d5d:	call   DWORD PTR ds:0x1b908
   16d63:	xor    eax,eax
   16d65:	lea    edi,[ebp-0x850]
   16d6b:	stos   DWORD PTR es:[edi],eax
   16d6c:	stos   DWORD PTR es:[edi],eax
   16d6d:	stos   DWORD PTR es:[edi],eax
   16d6e:	stos   DWORD PTR es:[edi],eax
   16d6f:	stos   DWORD PTR es:[edi],eax
   16d70:	mov    DWORD PTR [ebp-0x834],ebx
   16d76:	xor    eax,eax
   16d78:	lea    edi,[ebp-0x830]
   16d7e:	stos   DWORD PTR es:[edi],eax
   16d7f:	mov    DWORD PTR [ebp-0x82c],ebx
   16d85:	mov    DWORD PTR [ebp-0x854],0x18
   16d8f:	mov    DWORD PTR [ebp-0x850],ebx
   16d95:	mov    DWORD PTR [ebp-0x848],0x240
   16d9f:	lea    eax,[ebp-0x85c]
   16da5:	mov    DWORD PTR [ebp-0x84c],eax
   16dab:	mov    DWORD PTR [ebp-0x844],ebx
   16db1:	mov    DWORD PTR [ebp-0x840],ebx
   16db7:	push   ebx
   16db8:	push   ebx
   16db9:	push   ebx
   16dba:	push   0x1
   16dbc:	push   0x7
   16dbe:	push   ebx
   16dbf:	push   ebx
   16dc0:	lea    eax,[ebp-0x834]
   16dc6:	push   eax
   16dc7:	lea    eax,[ebp-0x854]
   16dcd:	push   eax
   16dce:	push   0x89
   16dd3:	lea    eax,[ebp-0x82c]
   16dd9:	push   eax
   16dda:	call   DWORD PTR ds:0x1b980
   16de0:	cmp    eax,ebx
   16de2:	jge    0x16deb
   16de4:	xor    al,al
   16de6:	jmp    0x16f09
   16deb:	mov    DWORD PTR [ebp-0x884],ebx
   16df1:	push   0x9
   16df3:	pop    ecx
   16df4:	xor    eax,eax
   16df6:	lea    edi,[ebp-0x880]
   16dfc:	rep stos DWORD PTR es:[edi],eax
   16dfe:	mov    DWORD PTR [ebp-0x4],ebx
   16e01:	push   0x4
   16e03:	push   0x28
   16e05:	lea    eax,[ebp-0x884]
   16e0b:	push   eax
   16e0c:	lea    eax,[ebp-0x834]
   16e12:	push   eax
   16e13:	push   DWORD PTR [ebp-0x82c]
   16e19:	call   DWORD PTR ds:0x1b98c
   16e1f:	cmp    eax,ebx
   16e21:	jl     0x16e9f
   16e23:	mov    esi,0x50788
   16e28:	push   esi
   16e29:	call   0x107fe
   16e2e:	mov    edi,eax
   16e30:	push   esi
   16e31:	push   0x1ba08
   16e36:	push   edi
   16e37:	call   0x1a7b6
   16e3c:	add    esp,0x10
   16e3f:	push   0x25
   16e41:	push   0x6c190
   16e46:	push   esi
   16e47:	push   edi
   16e48:	call   0x10870
   16e4d:	lea    eax,[ebp-0x828]
   16e53:	push   eax
   16e54:	push   esi
   16e55:	push   edi
   16e56:	lea    eax,[ebp-0x83c]
   16e5c:	push   eax
   16e5d:	call   0x18350
   16e62:	mov    BYTE PTR [ebp-0x83c],bl
   16e68:	mov    eax,DWORD PTR [ebp-0x838]
   16e6e:	mov    DWORD PTR [ebp-0x824],eax
   16e74:	cmp    eax,ebx
   16e76:	je     0x16e91
   16e78:	push   DWORD PTR [ebp-0x828]
   16e7e:	push   eax
   16e7f:	call   0x16776
   16e84:	test   al,al
   16e86:	je     0x16e91
   16e88:	mov    BYTE PTR [ebp-0x81d],0x1
   16e8f:	jmp    0x16e9f
   16e91:	mov    BYTE PTR [ebp-0x81d],0x1
   16e98:	mov    BYTE PTR [ebp-0x81e],0x1
   16e9f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   16ea6:	jmp    0x16eb8
   16ea8:	xor    eax,eax
   16eaa:	inc    eax
   16eab:	ret    
   16eac:	mov    esp,DWORD PTR [ebp-0x18]
   16eaf:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   16eb6:	xor    ebx,ebx
   16eb8:	push   DWORD PTR [ebp-0x82c]
   16ebe:	call   DWORD PTR ds:0x1b9d4
   16ec4:	cmp    BYTE PTR [ebp-0x81e],bl
   16eca:	je     0x16eef
   16ecc:	push   DWORD PTR [ebp-0x880]
   16ed2:	push   DWORD PTR [ebp-0x884]
   16ed8:	push   DWORD PTR [ebp-0x828]
   16ede:	push   DWORD PTR [ebp-0x824]
   16ee4:	call   0x169a6
   16ee9:	mov    BYTE PTR [ebp-0x81d],al
   16eef:	cmp    DWORD PTR [ebp-0x824],ebx
   16ef5:	je     0x16f03
   16ef7:	push   DWORD PTR [ebp-0x824]
   16efd:	call   0x10832
   16f02:	pop    ecx
   16f03:	mov    al,BYTE PTR [ebp-0x81d]
   16f09:	call   0x1ab48
   16f0e:	ret    
   16f0f:	int3   
   16f10:	int3   
   16f11:	int3   
   16f12:	int3   
   16f13:	int3   
   16f14:	mov    edi,edi
   16f16:	push   ebp
   16f17:	mov    ebp,esp
   16f19:	sub    esp,0xbc
   16f1f:	mov    eax,ds:0x70100
   16f24:	xor    eax,ebp
   16f26:	mov    DWORD PTR [ebp-0x4],eax
   16f29:	push   ebx
   16f2a:	push   edi
   16f2b:	push   0x1b34a
   16f30:	push   0xb
   16f32:	push   0x1b332
   16f37:	call   0x15974
   16f3c:	push   eax
   16f3d:	lea    eax,[ebp-0xbc]
   16f43:	push   eax
   16f44:	call   DWORD PTR ds:0x1b908
   16f4a:	xor    eax,eax
   16f4c:	lea    edi,[ebp-0xb0]
   16f52:	stos   DWORD PTR es:[edi],eax
   16f53:	stos   DWORD PTR es:[edi],eax
   16f54:	stos   DWORD PTR es:[edi],eax
   16f55:	stos   DWORD PTR es:[edi],eax
   16f56:	xor    ebx,ebx
   16f58:	push   ebx
   16f59:	stos   DWORD PTR es:[edi],eax
   16f5a:	push   ebx
   16f5b:	push   ebx
   16f5c:	push   0x1
   16f5e:	xor    eax,eax
   16f60:	push   0x7
   16f62:	push   ebx
   16f63:	mov    DWORD PTR [ebp-0x94],ebx
   16f69:	lea    edi,[ebp-0x90]
   16f6f:	stos   DWORD PTR es:[edi],eax
   16f70:	lea    eax,[ebp-0xbc]
   16f76:	mov    DWORD PTR [ebp-0xac],eax
   16f7c:	push   ebx
   16f7d:	lea    eax,[ebp-0x94]
   16f83:	push   eax
   16f84:	lea    eax,[ebp-0xb4]
   16f8a:	push   eax
   16f8b:	push   0x89
   16f90:	lea    eax,[ebp-0x8c]
   16f96:	push   eax
   16f97:	mov    DWORD PTR [ebp-0x8c],ebx
   16f9d:	mov    DWORD PTR [ebp-0xb4],0x18
   16fa7:	mov    DWORD PTR [ebp-0xb0],ebx
   16fad:	mov    DWORD PTR [ebp-0xa8],0x240
   16fb7:	mov    DWORD PTR [ebp-0xa4],ebx
   16fbd:	mov    DWORD PTR [ebp-0xa0],ebx
   16fc3:	call   DWORD PTR ds:0x1b980
   16fc9:	test   eax,eax
   16fcb:	jge    0x16fd4
   16fcd:	xor    al,al
   16fcf:	jmp    0x1708e
   16fd4:	push   esi
   16fd5:	mov    esi,0x20c
   16fda:	push   esi
   16fdb:	call   0x107fe
   16fe0:	pop    ecx
   16fe1:	push   0x1
   16fe3:	mov    edi,eax
   16fe5:	push   esi
   16fe6:	push   edi
   16fe7:	lea    eax,[ebp-0x94]
   16fed:	push   eax
   16fee:	push   DWORD PTR [ebp-0x8c]
   16ff4:	cmp    edi,ebx
   16ff6:	setne  BYTE PTR [ebp-0x9c]
   16ffd:	call   DWORD PTR ds:0x1b990
   17003:	push   DWORD PTR [ebp-0x8c]
   17009:	mov    esi,eax
   1700b:	call   DWORD PTR ds:0x1b9d4
   17011:	cmp    esi,ebx
   17013:	pop    esi
   17014:	jge    0x17027
   17016:	cmp    BYTE PTR [ebp-0x9c],bl
   1701c:	je     0x16fcd
   1701e:	push   edi
   1701f:	call   0x10832
   17024:	pop    ecx
   17025:	jmp    0x16fcd
   17027:	push   0x4
   17029:	push   0x1
   1702b:	lea    eax,[ebp-0x84]
   17031:	push   eax
   17032:	push   DWORD PTR [edi+0x8]
   17035:	call   0x10632
   1703a:	mov    ecx,0x70008
   1703f:	lea    eax,[ebp-0x84]
   17045:	mov    dx,WORD PTR [eax]
   17048:	cmp    dx,WORD PTR [ecx]
   1704b:	jne    0x1706b
   1704d:	cmp    dx,bx
   17050:	je     0x17067
   17052:	mov    dx,WORD PTR [eax+0x2]
   17056:	cmp    dx,WORD PTR [ecx+0x2]
   1705a:	jne    0x1706b
   1705c:	add    eax,0x4
   1705f:	add    ecx,0x4
   17062:	cmp    dx,bx
   17065:	jne    0x17045
   17067:	xor    eax,eax
   17069:	jmp    0x17070
   1706b:	sbb    eax,eax
   1706d:	sbb    eax,0xffffffff
   17070:	cmp    eax,ebx
   17072:	sete   BYTE PTR [ebp-0x85]
   17079:	cmp    BYTE PTR [ebp-0x9c],bl
   1707f:	je     0x17088
   17081:	push   edi
   17082:	call   0x10832
   17087:	pop    ecx
   17088:	mov    al,BYTE PTR [ebp-0x85]
   1708e:	mov    ecx,DWORD PTR [ebp-0x4]
   17091:	pop    edi
   17092:	xor    ecx,ebp
   17094:	pop    ebx
   17095:	call   0x1a745
   1709a:	leave  
   1709b:	ret    
   1709c:	int3   
   1709d:	int3   
   1709e:	int3   
   1709f:	int3   
   170a0:	int3   
   170a1:	int3   
   170a2:	call   0x1856c
   170a7:	push   0x1b3ee
   170ac:	push   0x34
   170ae:	push   0x1b384
   170b3:	call   0x15974
   170b8:	mov    edx,0x70298
   170bd:	movzx  ecx,WORD PTR [eax]
   170c0:	inc    eax
   170c1:	mov    WORD PTR [edx],cx
   170c4:	inc    eax
   170c5:	inc    edx
   170c6:	inc    edx
   170c7:	test   cx,cx
   170ca:	jne    0x170bd
   170cc:	ret    
   170cd:	int3   
   170ce:	int3   
   170cf:	int3   
   170d0:	int3   
   170d1:	int3   
   170d2:	mov    edi,edi
   170d4:	push   ebp
   170d5:	mov    ebp,esp
   170d7:	push   esi
   170d8:	mov    esi,ecx
   170da:	mov    BYTE PTR [esi+0x8],0x0
   170de:	call   0x136c2
   170e3:	lea    ecx,[esi+0x10]
   170e6:	mov    BYTE PTR [ecx+0x8],0x0
   170ea:	call   0x1321a
   170ef:	mov    eax,DWORD PTR [ebp+0x8]
   170f2:	mov    DWORD PTR [esi+0x20],eax
   170f5:	mov    eax,DWORD PTR [ebp+0xc]
   170f8:	mov    DWORD PTR [esi+0x24],eax
   170fb:	mov    eax,esi
   170fd:	pop    esi
   170fe:	pop    ebp
   170ff:	ret    0x8
   17102:	int3   
   17103:	int3   
   17104:	int3   
   17105:	int3   
   17106:	int3   
   17107:	int3   
   17108:	push   0x33c
   1710d:	push   0x6ff50
   17112:	call   0x1ab00
   17117:	mov    esi,DWORD PTR [ebp+0xc]
   1711a:	mov    DWORD PTR [ebp-0x32c],esi
   17120:	call   DWORD PTR ds:0x1b900
   17126:	xor    ebx,ebx
   17128:	cmp    BYTE PTR [ebp+0x10],bl
   1712b:	jne    0x17169
   1712d:	push   esi
   1712e:	mov    ecx,DWORD PTR ds:0x70130
   17134:	call   0x143ca
   17139:	mov    edi,eax
   1713b:	push   esi
   1713c:	mov    ecx,DWORD PTR ds:0x70130
   17142:	call   0x14be2
   17147:	mov    eax,edi
   17149:	dec    eax
   1714a:	je     0x1715e
   1714c:	dec    eax
   1714d:	je     0x1715a
   1714f:	dec    eax
   17150:	jne    0x17342
   17156:	push   0xa
   17158:	jmp    0x1715f
   1715a:	push   0x2
   1715c:	jmp    0x1715f
   1715e:	push   ebx
   1715f:	call   0x1119e
   17164:	jmp    0x17342
   17169:	mov    DWORD PTR [ebp-0x320],ebx
   1716f:	xor    eax,eax
   17171:	lea    edi,[ebp-0x326]
   17177:	stos   DWORD PTR es:[edi],eax
   17178:	stos   WORD PTR es:[edi],ax
   1717a:	xor    eax,eax
   1717c:	mov    WORD PTR [ebp-0x21c],ax
   17183:	push   0x1fc
   17188:	push   ebx
   17189:	lea    eax,[ebp-0x21a]
   1718f:	push   eax
   17190:	call   0x1a7aa
   17195:	add    esp,0xc
   17198:	lea    eax,[ebp-0x21c]
   1719e:	mov    DWORD PTR [ebp-0x324],eax
   171a4:	xor    eax,eax
   171a6:	mov    WORD PTR [ebp-0x328],ax
   171ad:	mov    eax,0x1fe
   171b2:	mov    WORD PTR [ebp-0x326],ax
   171b9:	mov    DWORD PTR [ebp-0x34c],0x18
   171c3:	mov    DWORD PTR [ebp-0x348],ebx
   171c9:	mov    DWORD PTR [ebp-0x340],0x200
   171d3:	mov    DWORD PTR [ebp-0x344],ebx
   171d9:	mov    DWORD PTR [ebp-0x33c],ebx
   171df:	mov    DWORD PTR [ebp-0x338],ebx
   171e5:	mov    DWORD PTR [ebp-0x334],esi
   171eb:	mov    DWORD PTR [ebp-0x330],ebx
   171f1:	lea    eax,[ebp-0x334]
   171f7:	push   eax
   171f8:	lea    eax,[ebp-0x34c]
   171fe:	push   eax
   171ff:	push   0x1f0fff
   17204:	lea    eax,[ebp-0x320]
   1720a:	push   eax
   1720b:	call   DWORD PTR ds:0x1b968
   17211:	test   eax,eax
   17213:	jl     0x17342
   17219:	lea    eax,[ebp-0x328]
   1721f:	push   eax
   17220:	push   DWORD PTR [ebp-0x320]
   17226:	call   0x1184c
   1722b:	cmp    eax,ebx
   1722d:	jl     0x17336
   17233:	movzx  eax,WORD PTR [ebp-0x328]
   1723a:	shr    eax,1
   1723c:	xor    ecx,ecx
   1723e:	mov    WORD PTR [ebp+eax*2-0x21c],cx
   17246:	push   DWORD PTR [ebp-0x320]
   1724c:	call   0x108a4
   17251:	lea    eax,[ebp-0x21c]
   17257:	push   eax
   17258:	call   0x10c62
   1725d:	cmp    eax,ebx
   1725f:	je     0x17284
   17261:	push   eax
   17262:	push   esi
   17263:	mov    ecx,DWORD PTR ds:0x70130
   17269:	call   0x14dc6
   1726e:	push   DWORD PTR [ebp-0x320]
   17274:	push   DWORD PTR [ebp-0x320]
   1727a:	call   0x108a4
   1727f:	push   eax
   17280:	push   esi
   17281:	push   ebx
   17282:	jmp    0x17302
   17284:	push   0x1b428
   17289:	push   0x9
   1728b:	push   0x1b414
   17290:	call   0x15974
   17295:	push   eax
   17296:	lea    eax,[ebp-0x328]
   1729c:	push   eax
   1729d:	call   0x10cb2
   172a2:	test   al,al
   172a4:	je     0x17309
   172a6:	cmp    DWORD PTR ds:0x70cbc,ebx
   172ac:	jne    0x172df
   172ae:	mov    DWORD PTR ds:0x70cbc,0x1
   172b8:	mov    DWORD PTR [ebp-0x4],ebx
   172bb:	call   0x16c4e
   172c0:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   172c7:	jmp    0x172df
   172c9:	xor    eax,eax
   172cb:	inc    eax
   172cc:	ret    
   172cd:	mov    esp,DWORD PTR [ebp-0x18]
   172d0:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   172d7:	xor    ebx,ebx
   172d9:	mov    esi,DWORD PTR [ebp-0x32c]
   172df:	cmp    DWORD PTR ds:0x70b7c,ebx
   172e5:	jne    0x172ed
   172e7:	mov    DWORD PTR ds:0x70b7c,esi
   172ed:	push   DWORD PTR [ebp-0x320]
   172f3:	push   DWORD PTR [ebp-0x320]
   172f9:	call   0x108a4
   172fe:	push   eax
   172ff:	push   esi
   17300:	push   0x1
   17302:	call   0x128f8
   17307:	jmp    0x17336
   17309:	lea    eax,[ebp-0x31c]
   1730f:	push   eax
   17310:	call   0x10e42
   17315:	test   al,al
   17317:	je     0x17336
   17319:	lea    eax,[ebp-0x31c]
   1731f:	push   eax
   17320:	lea    eax,[ebp-0x328]
   17326:	push   eax
   17327:	call   0x10cb2
   1732c:	test   al,al
   1732e:	je     0x17336
   17330:	push   esi
   17331:	call   0x118e4
   17336:	push   DWORD PTR [ebp-0x320]
   1733c:	call   DWORD PTR ds:0x1b9d4
   17342:	call   0x1ab48
   17347:	ret    0xc
   1734a:	int3   
   1734b:	int3   
   1734c:	int3   
   1734d:	int3   
   1734e:	int3   
   1734f:	int3   
   17350:	mov    edi,edi
   17352:	push   ebp
   17353:	mov    ebp,esp
   17355:	push   ecx
   17356:	cli    
   17357:	mov    eax,cr0
   1735a:	mov    DWORD PTR [ebp-0x4],eax
   1735d:	and    eax,0xfffeffff
   17362:	mov    cr0,eax
   17365:	push   0x161dc
   1736a:	push   DWORD PTR ds:0x70ac8
   17370:	call   0x17bdc
   17375:	push   0x0
   17377:	push   0x17108
   1737c:	push   0x1adba
   17381:	mov    ds:0x70acc,eax
   17386:	call   0x116f2
   1738b:	call   eax
   1738d:	push   0x160c8
   17392:	push   0x1ac9e
   17397:	call   0x116f2
   1739c:	call   eax
   1739e:	mov    eax,DWORD PTR [ebp-0x4]
   173a1:	mov    cr0,eax
   173a4:	sti    
   173a5:	leave  
   173a6:	ret    
   173a7:	int3   
   173a8:	int3   
   173a9:	int3   
   173aa:	int3   
   173ab:	int3   
   173ac:	push   0xc
   173ae:	push   0x6ff70
   173b3:	call   0x1a7f4
   173b8:	and    DWORD PTR [ebp-0x4],0x0
   173bc:	push   DWORD PTR [ebp+0xc]
   173bf:	push   DWORD PTR [ebp+0x8]
   173c2:	call   0x16318
   173c7:	mov    esi,eax
   173c9:	jmp    0x173de
   173cb:	xor    eax,eax
   173cd:	inc    eax
   173ce:	ret    
   173cf:	mov    esp,DWORD PTR [ebp-0x18]
   173d2:	push   0xd
   173d4:	call   0x1119e
   173d9:	mov    esi,0xc0000001
   173de:	mov    DWORD PTR [ebp-0x1c],esi
   173e1:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   173e8:	cmp    esi,0x103
   173ee:	je     0x173fe
   173f0:	mov    ecx,DWORD PTR [ebp+0xc]
   173f3:	mov    DWORD PTR [ecx+0x18],esi
   173f6:	xor    dl,dl
   173f8:	call   DWORD PTR ds:0x1b994
   173fe:	mov    eax,esi
   17400:	call   0x1a839
   17405:	ret    0x8
   17408:	int3   
   17409:	int3   
   1740a:	int3   
   1740b:	int3   
   1740c:	int3   
   1740d:	int3   
   1740e:	push   0x854
   17413:	push   0x6ff90
   17418:	call   0x1ab00
   1741d:	mov    esi,DWORD PTR [ebp+0x8]
   17420:	mov    DWORD PTR [ebp-0x830],esi
   17426:	mov    edi,DWORD PTR [ebp+0xc]
   17429:	call   0x170a2
   1742e:	xor    ebx,ebx
   17430:	mov    DWORD PTR [ebp-0x834],ebx
   17436:	call   0x16f14
   1743b:	cmp    al,bl
   1743d:	jne    0x1765c
   17443:	mov    DWORD PTR [ebp-0x4],ebx
   17446:	push   ebx
   17447:	push   0x70a98
   1744c:	call   DWORD PTR ds:0x1b958
   17452:	push   0x10
   17454:	call   0x107fe
   17459:	pop    ecx
   1745a:	cmp    eax,ebx
   1745c:	je     0x17475
   1745e:	lea    ecx,[ebp-0x81d]
   17464:	push   ecx
   17465:	lea    ecx,[ebp-0x81d]
   1746b:	push   ecx
   1746c:	mov    ecx,eax
   1746e:	call   0x14e08
   17473:	jmp    0x17477
   17475:	xor    eax,eax
   17477:	mov    ecx,eax
   17479:	mov    DWORD PTR ds:0x70ac0,ecx
   1747f:	call   0x14c94
   17484:	push   edi
   17485:	push   0x1b6d2
   1748a:	lea    eax,[ebp-0x41c]
   17490:	push   eax
   17491:	call   0x1a7da
   17496:	add    esp,0xc
   17499:	push   0xffffffff
   1749b:	lea    eax,[ebp-0x41c]
   174a1:	push   eax
   174a2:	lea    ecx,[ebp-0x828]
   174a8:	call   0x11274
   174ad:	lea    eax,[ebp-0x828]
   174b3:	push   eax
   174b4:	mov    ecx,DWORD PTR ds:0x70ac0
   174ba:	call   0x14e22
   174bf:	mov    edi,eax
   174c1:	push   DWORD PTR [ebp-0x828]
   174c7:	call   0x10832
   174cc:	pop    ecx
   174cd:	lea    eax,[ebp-0x83c]
   174d3:	push   eax
   174d4:	call   DWORD PTR ds:0x1b9ac
   174da:	push   ebx
   174db:	push   0x989680
   174e0:	push   DWORD PTR [ebp-0x838]
   174e6:	push   DWORD PTR [ebp-0x83c]
   174ec:	call   0x1a792
   174f1:	inc    eax
   174f2:	mov    DWORD PTR [edi+0x20],eax
   174f5:	cmp    eax,ebx
   174f7:	jge    0x17500
   174f9:	mov    DWORD PTR [edi+0x20],0x1
   17500:	push   0xffffffff
   17502:	push   0x1b6a2
   17507:	push   0x4
   17509:	push   0x1b69c
   1750e:	call   0x15a44
   17513:	push   eax
   17514:	lea    ecx,[ebp-0x828]
   1751a:	call   0x11f2a
   1751f:	lea    eax,[ebp-0x828]
   17525:	push   eax
   17526:	mov    ecx,edi
   17528:	call   0x11f6c
   1752d:	push   DWORD PTR [ebp-0x828]
   17533:	call   0x10832
   17538:	mov    DWORD PTR [esp],0x1b672
   1753f:	push   0x4
   17541:	push   0x1b668
   17546:	call   0x15974
   1754b:	mov    DWORD PTR [ebp-0x824],eax
   17551:	lea    ecx,[eax+0x2]
   17554:	mov    dx,WORD PTR [eax]
   17557:	inc    eax
   17558:	inc    eax
   17559:	cmp    dx,bx
   1755c:	jne    0x17554
   1755e:	sub    eax,ecx
   17560:	sar    eax,1
   17562:	add    eax,eax
   17564:	mov    WORD PTR [ebp-0x826],ax
   1756b:	mov    WORD PTR [ebp-0x828],ax
   17572:	mov    DWORD PTR [ebp-0x854],0x18
   1757c:	mov    DWORD PTR [ebp-0x850],ebx
   17582:	mov    DWORD PTR [ebp-0x848],0x40
   1758c:	lea    eax,[ebp-0x828]
   17592:	mov    DWORD PTR [ebp-0x84c],eax
   17598:	mov    DWORD PTR [ebp-0x844],ebx
   1759e:	mov    DWORD PTR [ebp-0x840],ebx
   175a4:	mov    eax,DWORD PTR [ebp-0x824]
   175aa:	lea    ecx,[eax+0x2]
   175ad:	mov    dx,WORD PTR [eax]
   175b0:	inc    eax
   175b1:	inc    eax
   175b2:	cmp    dx,bx
   175b5:	jne    0x175ad
   175b7:	sub    eax,ecx
   175b9:	sar    eax,1
   175bb:	mov    DWORD PTR [ebp-0x834],eax
   175c1:	push   0xffffffff
   175c3:	push   0x1b62c
   175c8:	push   0x8
   175ca:	push   0x1b622
   175cf:	call   0x15a44
   175d4:	push   eax
   175d5:	lea    ecx,[ebp-0x828]
   175db:	call   0x11f2a
   175e0:	lea    ecx,[edi+0x8]
   175e3:	lea    eax,[ebp-0x828]
   175e9:	push   eax
   175ea:	call   0x11f6c
   175ef:	push   DWORD PTR [ebp-0x828]
   175f5:	call   0x10832
   175fa:	pop    ecx
   175fb:	push   0xffffffff
   175fd:	push   0x1abe8
   17602:	lea    ecx,[ebp-0x828]
   17608:	call   0x11274
   1760d:	lea    eax,[ebp-0x828]
   17613:	push   eax
   17614:	lea    ecx,[edi+0x10]
   17617:	call   0x11f6c
   1761c:	push   DWORD PTR [ebp-0x828]
   17622:	call   0x10832
   17627:	pop    ecx
   17628:	lea    eax,[edi+0x8]
   1762b:	push   eax
   1762c:	lea    ecx,[edi+0x18]
   1762f:	call   0x11f6c
   17634:	mov    eax,DWORD PTR [edi+0x20]
   17637:	or     DWORD PTR [ebp-0x834],eax
   1763d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17644:	jmp    0x1765c
   17646:	xor    eax,eax
   17648:	inc    eax
   17649:	ret    
   1764a:	mov    esp,DWORD PTR [ebp-0x18]
   1764d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17654:	xor    ebx,ebx
   17656:	mov    esi,DWORD PTR [ebp-0x830]
   1765c:	xor    eax,eax
   1765e:	cmp    DWORD PTR [ebp-0x834],ebx
   17664:	jne    0x179ed
   1766a:	lea    edi,[ebp-0x844]
   17670:	stos   DWORD PTR es:[edi],eax
   17671:	stos   DWORD PTR es:[edi],eax
   17672:	mov    DWORD PTR [ebp-0x848],0xc
   1767c:	mov    DWORD PTR [ebp-0x844],0x2
   17686:	mov    BYTE PTR [ebp-0x840],bl
   1768c:	mov    BYTE PTR [ebp-0x83f],bl
   17692:	push   0x70158
   17697:	push   ebx
   17698:	lea    eax,[ebp-0x848]
   1769e:	push   eax
   1769f:	call   0x1a7ce
   176a4:	push   eax
   176a5:	call   DWORD PTR ds:0x1b9a4
   176ab:	push   0x10
   176ad:	call   0x107fe
   176b2:	pop    ecx
   176b3:	cmp    eax,ebx
   176b5:	je     0x176d3
   176b7:	lea    ecx,[ebp-0x81d]
   176bd:	push   ecx
   176be:	lea    ecx,[ebp-0x81d]
   176c4:	push   ecx
   176c5:	mov    ecx,eax
   176c7:	call   0x14e08
   176cc:	mov    ds:0x70ac0,eax
   176d1:	jmp    0x176d9
   176d3:	mov    DWORD PTR ds:0x70ac0,ebx
   176d9:	push   0x10
   176db:	call   0x107fe
   176e0:	pop    ecx
   176e1:	cmp    eax,ebx
   176e3:	je     0x17701
   176e5:	lea    ecx,[ebp-0x81d]
   176eb:	push   ecx
   176ec:	lea    ecx,[ebp-0x81d]
   176f2:	push   ecx
   176f3:	mov    ecx,eax
   176f5:	call   0x14c50
   176fa:	mov    ds:0x70108,eax
   176ff:	jmp    0x17707
   17701:	mov    DWORD PTR ds:0x70108,ebx
   17707:	push   0x10
   17709:	call   0x107fe
   1770e:	pop    ecx
   1770f:	cmp    eax,ebx
   17711:	je     0x1772f
   17713:	lea    ecx,[ebp-0x81d]
   17719:	push   ecx
   1771a:	lea    ecx,[ebp-0x81d]
   17720:	push   ecx
   17721:	mov    ecx,eax
   17723:	call   0x14ec6
   17728:	mov    ds:0x70194,eax
   1772d:	jmp    0x17735
   1772f:	mov    DWORD PTR ds:0x70194,ebx
   17735:	push   0x28
   17737:	call   0x107fe
   1773c:	pop    ecx
   1773d:	cmp    eax,ebx
   1773f:	je     0x17753
   17741:	push   0x64
   17743:	push   0x14
   17745:	mov    ecx,eax
   17747:	call   0x170d2
   1774c:	mov    ds:0x70134,eax
   17751:	jmp    0x17759
   17753:	mov    DWORD PTR ds:0x70134,ebx
   17759:	push   0x20
   1775b:	call   0x107fe
   17760:	pop    ecx
   17761:	cmp    eax,ebx
   17763:	je     0x17773
   17765:	mov    ecx,eax
   17767:	call   0x14d98
   1776c:	mov    ds:0x70130,eax
   17771:	jmp    0x17779
   17773:	mov    DWORD PTR ds:0x70130,ebx
   17779:	call   0x11176
   1777e:	call   0x153f2
   17783:	push   0x1b612
   17788:	call   0x158be
   1778d:	push   eax
   1778e:	push   0x1b5f0
   17793:	push   0xa
   17795:	push   0x1b5da
   1779a:	call   0x15974
   1779f:	push   eax
   177a0:	lea    eax,[ebp-0x41c]
   177a6:	push   eax
   177a7:	call   0x1a7c2
   177ac:	add    esp,0xc
   177af:	lea    eax,[ebp-0x41c]
   177b5:	push   eax
   177b6:	lea    eax,[ebp-0x85c]
   177bc:	push   eax
   177bd:	mov    edi,DWORD PTR ds:0x1b908
   177c3:	call   edi
   177c5:	push   0x1b612
   177ca:	call   0x158be
   177cf:	push   eax
   177d0:	push   0x1b59e
   177d5:	push   0xe
   177d7:	push   0x1b580
   177dc:	call   0x15974
   177e1:	push   eax
   177e2:	lea    eax,[ebp-0x81c]
   177e8:	push   eax
   177e9:	call   0x1a7c2
   177ee:	add    esp,0xc
   177f1:	lea    eax,[ebp-0x81c]
   177f7:	push   eax
   177f8:	lea    eax,[ebp-0x864]
   177fe:	push   eax
   177ff:	call   edi
   17801:	push   0x70b00
   17806:	push   ebx
   17807:	push   0x100
   1780c:	push   0x22
   1780e:	lea    eax,[ebp-0x85c]
   17814:	push   eax
   17815:	push   ebx
   17816:	push   esi
   17817:	call   DWORD PTR ds:0x1b99c
   1781d:	cmp    eax,ebx
   1781f:	jl     0x179ed
   17825:	mov    eax,0x173ac
   1782a:	mov    DWORD PTR [esi+0x94],eax
   17830:	mov    DWORD PTR [esi+0x90],eax
   17836:	mov    DWORD PTR [esi+0xa4],eax
   1783c:	mov    DWORD PTR [esi+0x70],eax
   1783f:	mov    DWORD PTR [esi+0x48],eax
   17842:	mov    DWORD PTR [esi+0x44],eax
   17845:	mov    DWORD PTR [esi+0x40],eax
   17848:	mov    DWORD PTR [esi+0x38],eax
   1784b:	mov    eax,ds:0x70b00
   17850:	or     DWORD PTR [eax+0x1c],0x4
   17854:	lea    eax,[ebp-0x85c]
   1785a:	push   eax
   1785b:	lea    eax,[ebp-0x864]
   17861:	push   eax
   17862:	call   DWORD PTR ds:0x1b998
   17868:	mov    DWORD PTR [ebp-0x830],eax
   1786e:	cmp    eax,ebx
   17870:	jge    0x17880
   17872:	push   DWORD PTR [esi+0x4]
   17875:	call   DWORD PTR ds:0x1b944
   1787b:	jmp    0x179e7
   17880:	push   ebx
   17881:	push   0x70a98
   17886:	mov    esi,DWORD PTR ds:0x1b958
   1788c:	call   esi
   1788e:	push   ebx
   1788f:	push   0x70138
   17894:	call   esi
   17896:	push   ebx
   17897:	push   0x7010c
   1789c:	call   esi
   1789e:	push   0x8000000
   178a3:	push   0x1b548
   178a8:	push   0x9
   178aa:	push   0x1b178
   178af:	call   0x15a44
   178b4:	push   eax
   178b5:	lea    eax,[ebp-0x82c]
   178bb:	push   eax
   178bc:	call   0x17e3e
   178c1:	push   0x1ae76
   178c6:	call   0x116f2
   178cb:	push   DWORD PTR [ebp-0x82c]
   178d1:	call   eax
   178d3:	mov    DWORD PTR [ebp-0x838],eax
   178d9:	push   ebx
   178da:	push   0x1b510
   178df:	push   0x16
   178e1:	push   0x1b4f8
   178e6:	call   0x15a44
   178eb:	push   eax
   178ec:	push   DWORD PTR [ebp-0x82c]
   178f2:	call   0x17d0c
   178f7:	push   eax
   178f8:	push   DWORD PTR [ebp-0x838]
   178fe:	call   0x17cb2
   17903:	mov    edi,eax
   17905:	add    edi,DWORD PTR [ebp-0x82c]
   1790b:	mov    esi,0x1abea
   17910:	push   esi
   17911:	call   0x116f2
   17916:	mov    DWORD PTR [ebp-0x824],eax
   1791c:	push   edi
   1791d:	call   0x17c5a
   17922:	mov    ecx,DWORD PTR [ebp-0x824]
   17928:	mov    ecx,DWORD PTR [ecx]
   1792a:	mov    eax,DWORD PTR [ecx+eax*4]
   1792d:	mov    ds:0x70ac4,eax
   17932:	push   ebx
   17933:	push   0x1b4be
   17938:	push   0x14
   1793a:	push   0x1b4a8
   1793f:	call   0x15a44
   17944:	push   eax
   17945:	push   DWORD PTR [ebp-0x82c]
   1794b:	call   0x17d0c
   17950:	push   eax
   17951:	push   DWORD PTR [ebp-0x838]
   17957:	call   0x17cb2
   1795c:	mov    edi,eax
   1795e:	add    edi,DWORD PTR [ebp-0x82c]
   17964:	push   esi
   17965:	call   0x116f2
   1796a:	mov    DWORD PTR [ebp-0x824],eax
   17970:	push   edi
   17971:	call   0x17c5a
   17976:	mov    ecx,DWORD PTR [ebp-0x824]
   1797c:	mov    ecx,DWORD PTR [ecx]
   1797e:	mov    eax,DWORD PTR [ecx+eax*4]
   17981:	mov    ds:0x70ab8,eax
   17986:	push   ebx
   17987:	push   0x1b476
   1798c:	push   0xe
   1798e:	push   0x1b466
   17993:	call   0x15a44
   17998:	push   eax
   17999:	push   DWORD PTR [ebp-0x82c]
   1799f:	call   0x17d0c
   179a4:	push   eax
   179a5:	push   DWORD PTR [ebp-0x838]
   179ab:	call   0x17cb2
   179b0:	mov    edi,eax
   179b2:	add    edi,DWORD PTR [ebp-0x82c]
   179b8:	push   esi
   179b9:	call   0x116f2
   179be:	mov    esi,eax
   179c0:	push   edi
   179c1:	call   0x17c5a
   179c6:	mov    ecx,DWORD PTR [esi]
   179c8:	mov    eax,DWORD PTR [ecx+eax*4]
   179cb:	mov    ds:0x70ac8,eax
   179d0:	push   DWORD PTR [ebp-0x82c]
   179d6:	call   0x17e24
   179db:	call   0x17350
   179e0:	mov    BYTE PTR ds:0x70b04,0x1
   179e7:	mov    eax,DWORD PTR [ebp-0x830]
   179ed:	call   0x1ab48
   179f2:	ret    0x8
   179f5:	int3   
   179f6:	int3   
   179f7:	int3   
   179f8:	int3   
   179f9:	int3   
   179fa:	mov    edi,edi
   179fc:	push   ebp
   179fd:	mov    ebp,esp
   179ff:	push   ecx
   17a00:	mov    ecx,DWORD PTR [ebp+0x8]
   17a03:	mov    eax,DWORD PTR [ecx+0x4]
   17a06:	mov    edx,DWORD PTR [ebp+0xc]
   17a09:	push   ebx
   17a0a:	mov    ebx,DWORD PTR [edx+0x4]
   17a0d:	push   esi
   17a0e:	push   edi
   17a0f:	mov    DWORD PTR [ebp-0x4],eax
   17a12:	mov    DWORD PTR [ebp+0x8],eax
   17a15:	cmp    eax,ebx
   17a17:	jbe    0x17a1c
   17a19:	mov    DWORD PTR [ebp+0x8],ebx
   17a1c:	xor    eax,eax
   17a1e:	cmp    DWORD PTR [ebp+0x8],eax
   17a21:	jbe    0x17a39
   17a23:	mov    esi,DWORD PTR [ecx]
   17a25:	mov    edi,DWORD PTR [edx]
   17a27:	mov    cl,BYTE PTR [esi+eax*1]
   17a2a:	mov    dl,BYTE PTR [edi+eax*1]
   17a2d:	cmp    cl,dl
   17a2f:	jl     0x17a46
   17a31:	jg     0x17a4a
   17a33:	inc    eax
   17a34:	cmp    eax,DWORD PTR [ebp+0x8]
   17a37:	jb     0x17a27
   17a39:	cmp    DWORD PTR [ebp-0x4],ebx
   17a3c:	setb   al
   17a3f:	pop    edi
   17a40:	pop    esi
   17a41:	pop    ebx
   17a42:	leave  
   17a43:	ret    0x8
   17a46:	mov    al,0x1
   17a48:	jmp    0x17a3f
   17a4a:	xor    al,al
   17a4c:	jmp    0x17a3f
   17a4e:	int3   
   17a4f:	int3   
   17a50:	int3   
   17a51:	int3   
   17a52:	int3   
   17a53:	int3   
   17a54:	mov    edi,edi
   17a56:	push   ebp
   17a57:	mov    ebp,esp
   17a59:	mov    eax,DWORD PTR [ebp+0x8]
   17a5c:	mov    ecx,DWORD PTR [eax+0x4]
   17a5f:	mov    edx,DWORD PTR [ebp+0xc]
   17a62:	cmp    ecx,DWORD PTR [edx+0x4]
   17a65:	je     0x17a6b
   17a67:	xor    al,al
   17a69:	jmp    0x17a7a
   17a6b:	push   esi
   17a6c:	mov    esi,DWORD PTR [eax]
   17a6e:	push   edi
   17a6f:	mov    edi,DWORD PTR [edx]
   17a71:	xor    eax,eax
   17a73:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
   17a75:	pop    edi
   17a76:	sete   al
   17a79:	pop    esi
   17a7a:	pop    ebp
   17a7b:	ret    0x8
   17a7e:	int3   
   17a7f:	int3   
   17a80:	int3   
   17a81:	int3   
   17a82:	int3   
   17a83:	int3   
   17a84:	mov    edi,edi
   17a86:	push   ebp
   17a87:	mov    ebp,esp
   17a89:	push   DWORD PTR [ebp+0xc]
   17a8c:	push   DWORD PTR [ebp+0x8]
   17a8f:	call   0x17a54
   17a94:	xor    ecx,ecx
   17a96:	test   al,al
   17a98:	sete   cl
   17a9b:	mov    al,cl
   17a9d:	pop    ebp
   17a9e:	ret    0x8
   17aa1:	int3   
   17aa2:	int3   
   17aa3:	int3   
   17aa4:	int3   
   17aa5:	int3   
   17aa6:	mov    edi,edi
   17aa8:	push   ebp
   17aa9:	mov    ebp,esp
   17aab:	push   ecx
   17aac:	mov    ecx,DWORD PTR [ebp+0x8]
   17aaf:	mov    eax,DWORD PTR [ebp+0xc]
   17ab2:	push   ebx
   17ab3:	mov    ebx,DWORD PTR [eax+0x4]
   17ab6:	push   esi
   17ab7:	push   edi
   17ab8:	mov    edi,DWORD PTR [ecx+0x4]
   17abb:	mov    DWORD PTR [ebp-0x4],edi
   17abe:	cmp    edi,ebx
   17ac0:	jbe    0x17ac4
   17ac2:	mov    edi,ebx
   17ac4:	and    DWORD PTR [ebp+0x8],0x0
   17ac8:	test   edi,edi
   17aca:	jbe    0x17aea
   17acc:	mov    eax,DWORD PTR [eax]
   17ace:	mov    ecx,DWORD PTR [ecx]
   17ad0:	sub    ecx,eax
   17ad2:	movzx  edx,WORD PTR [ecx+eax*1]
   17ad6:	movzx  esi,WORD PTR [eax]
   17ad9:	cmp    dx,si
   17adc:	jb     0x17af7
   17ade:	ja     0x17afb
   17ae0:	inc    DWORD PTR [ebp+0x8]
   17ae3:	inc    eax
   17ae4:	inc    eax
   17ae5:	cmp    DWORD PTR [ebp+0x8],edi
   17ae8:	jb     0x17ad2
   17aea:	cmp    DWORD PTR [ebp-0x4],ebx
   17aed:	setb   al
   17af0:	pop    edi
   17af1:	pop    esi
   17af2:	pop    ebx
   17af3:	leave  
   17af4:	ret    0x8
   17af7:	mov    al,0x1
   17af9:	jmp    0x17af0
   17afb:	xor    al,al
   17afd:	jmp    0x17af0
   17aff:	int3   
   17b00:	int3   
   17b01:	int3   
   17b02:	int3   
   17b03:	int3   
   17b04:	mov    edi,edi
   17b06:	push   ebp
   17b07:	mov    ebp,esp
   17b09:	pop    ebp
   17b0a:	jmp    0x179fa
   17b0f:	int3   
   17b10:	int3   
   17b11:	int3   
   17b12:	int3   
   17b13:	int3   
   17b14:	mov    edi,edi
   17b16:	push   ebp
   17b17:	mov    ebp,esp
   17b19:	pop    ebp
   17b1a:	jmp    0x17a54
   17b1f:	int3   
   17b20:	int3   
   17b21:	int3   
   17b22:	int3   
   17b23:	int3   
   17b24:	mov    edi,edi
   17b26:	push   ebp
   17b27:	mov    ebp,esp
   17b29:	pop    ebp
   17b2a:	jmp    0x17a84
   17b2f:	int3   
   17b30:	int3   
   17b31:	int3   
   17b32:	int3   
   17b33:	int3   
   17b34:	mov    edi,edi
   17b36:	push   ebp
   17b37:	mov    ebp,esp
   17b39:	pop    ebp
   17b3a:	jmp    0x17aa6
   17b3f:	int3   
   17b40:	int3   
   17b41:	int3   
   17b42:	int3   
   17b43:	int3   
   17b44:	mov    edi,edi
   17b46:	push   ebp
   17b47:	mov    ebp,esp
   17b49:	mov    eax,DWORD PTR [ebp+0x8]
   17b4c:	mov    cl,BYTE PTR [ebp+0xc]
   17b4f:	mov    BYTE PTR [eax],cl
   17b51:	inc    eax
   17b52:	pop    ebp
   17b53:	ret    0x8
   17b56:	int3   
   17b57:	int3   
   17b58:	int3   
   17b59:	int3   
   17b5a:	int3   
   17b5b:	int3   
   17b5c:	mov    edi,edi
   17b5e:	push   ebp
   17b5f:	mov    ebp,esp
   17b61:	mov    eax,DWORD PTR [ebp+0x8]
   17b64:	mov    ecx,DWORD PTR [ebp+0xc]
   17b67:	mov    DWORD PTR [eax],ecx
   17b69:	add    eax,0x4
   17b6c:	pop    ebp
   17b6d:	ret    0x8
   17b70:	int3   
   17b71:	int3   
   17b72:	int3   
   17b73:	int3   
   17b74:	int3   
   17b75:	int3   
   17b76:	mov    edi,edi
   17b78:	push   ebp
   17b79:	mov    ebp,esp
   17b7b:	mov    eax,DWORD PTR [ebp+0x8]
   17b7e:	mov    cx,WORD PTR [ebp+0xc]
   17b82:	mov    WORD PTR [eax],cx
   17b85:	add    eax,0x2
   17b88:	pop    ebp
   17b89:	ret    0x8
   17b8c:	int3   
   17b8d:	int3   
   17b8e:	int3   
   17b8f:	int3   
   17b90:	int3   
   17b91:	int3   
   17b92:	mov    edi,edi
   17b94:	push   ebp
   17b95:	mov    ebp,esp
   17b97:	push   esi
   17b98:	mov    esi,DWORD PTR [ebp+0x10]
   17b9b:	push   edi
   17b9c:	mov    edi,DWORD PTR [ebp+0x8]
   17b9f:	push   esi
   17ba0:	push   DWORD PTR [ebp+0xc]
   17ba3:	push   edi
   17ba4:	call   0x1a7b6
   17ba9:	add    esp,0xc
   17bac:	lea    eax,[edi+esi*1]
   17baf:	pop    edi
   17bb0:	pop    esi
   17bb1:	pop    ebp
   17bb2:	ret    0xc
   17bb5:	int3   
   17bb6:	int3   
   17bb7:	int3   
   17bb8:	int3   
   17bb9:	int3   
   17bba:	mov    edi,edi
   17bbc:	push   ebp
   17bbd:	mov    ebp,esp
   17bbf:	mov    eax,DWORD PTR [ebp+0xc]
   17bc2:	mov    ecx,DWORD PTR [ebp+0x8]
   17bc5:	sub    ecx,eax
   17bc7:	sub    ecx,0x5
   17bca:	mov    DWORD PTR [eax+0x1],ecx
   17bcd:	mov    BYTE PTR [eax],0xe9
   17bd0:	add    eax,0x5
   17bd3:	pop    ebp
   17bd4:	ret    0x8
   17bd7:	int3   
   17bd8:	int3   
   17bd9:	int3   
   17bda:	int3   
   17bdb:	int3   
   17bdc:	mov    edi,edi
   17bde:	push   ebp
   17bdf:	mov    ebp,esp
   17be1:	push   ecx
   17be2:	push   ebx
   17be3:	mov    ebx,DWORD PTR [ebp+0x8]
   17be6:	and    DWORD PTR [ebp+0x8],0x0
   17bea:	push   edi
   17beb:	mov    edi,ebx
   17bed:	test   ebx,ebx
   17bef:	jne    0x17bf5
   17bf1:	xor    eax,eax
   17bf3:	jmp    0x17c4f
   17bf5:	push   esi
   17bf6:	push   0x20736649
   17bfb:	push   0x80
   17c00:	push   0x0
   17c02:	call   DWORD PTR ds:0x1b954
   17c08:	mov    esi,eax
   17c0a:	mov    DWORD PTR [ebp-0x4],esi
   17c0d:	push   0x0
   17c0f:	push   edi
   17c10:	push   esi
   17c11:	call   0x18308
   17c16:	mov    ecx,eax
   17c18:	sub    ecx,edi
   17c1a:	add    DWORD PTR [ebp+0x8],ecx
   17c1d:	add    esi,ecx
   17c1f:	cmp    DWORD PTR [ebp+0x8],0x5
   17c23:	mov    edi,eax
   17c25:	jb     0x17c0d
   17c27:	push   DWORD PTR [ebp+0x8]
   17c2a:	push   0x90
   17c2f:	push   ebx
   17c30:	call   0x1a7aa
   17c35:	add    esp,0xc
   17c38:	push   esi
   17c39:	lea    eax,[ebx+0x5]
   17c3c:	push   eax
   17c3d:	call   0x17bba
   17c42:	push   ebx
   17c43:	push   DWORD PTR [ebp+0xc]
   17c46:	call   0x17bba
   17c4b:	mov    eax,DWORD PTR [ebp-0x4]
   17c4e:	pop    esi
   17c4f:	pop    edi
   17c50:	pop    ebx
   17c51:	leave  
   17c52:	ret    0x8
   17c55:	int3   
   17c56:	int3   
   17c57:	int3   
   17c58:	int3   
   17c59:	int3   
   17c5a:	mov    edi,edi
   17c5c:	push   ebp
   17c5d:	mov    ebp,esp
   17c5f:	mov    eax,DWORD PTR [ebp+0x8]
   17c62:	mov    eax,DWORD PTR [eax+0x1]
   17c65:	pop    ebp
   17c66:	ret    0x4
   17c69:	int3   
   17c6a:	int3   
   17c6b:	int3   
   17c6c:	int3   
   17c6d:	int3   
   17c6e:	mov    edi,edi
   17c70:	push   ebp
   17c71:	mov    ebp,esp
   17c73:	mov    ecx,DWORD PTR [ebp+0x8]
   17c76:	movzx  eax,WORD PTR [ecx+0x14]
   17c7a:	lea    eax,[eax+ecx*1+0x18]
   17c7e:	movzx  ecx,WORD PTR [ecx+0x6]
   17c82:	push   esi
   17c83:	xor    esi,esi
   17c85:	push   edi
   17c86:	test   ecx,ecx
   17c88:	jbe    0x17ca4
   17c8a:	mov    edx,DWORD PTR [eax+0xc]
   17c8d:	cmp    DWORD PTR [ebp+0xc],edx
   17c90:	jb     0x17c9c
   17c92:	mov    edi,DWORD PTR [eax+0x8]
   17c95:	add    edi,edx
   17c97:	cmp    DWORD PTR [ebp+0xc],edi
   17c9a:	jb     0x17ca6
   17c9c:	add    eax,0x28
   17c9f:	inc    esi
   17ca0:	cmp    esi,ecx
   17ca2:	jb     0x17c8a
   17ca4:	xor    eax,eax
   17ca6:	pop    edi
   17ca7:	pop    esi
   17ca8:	pop    ebp
   17ca9:	ret    0x8
   17cac:	int3   
   17cad:	int3   
   17cae:	int3   
   17caf:	int3   
   17cb0:	int3   
   17cb1:	int3   
   17cb2:	mov    edi,edi
   17cb4:	push   ebp
   17cb5:	mov    ebp,esp
   17cb7:	push   esi
   17cb8:	push   DWORD PTR [ebp+0xc]
   17cbb:	mov    esi,DWORD PTR [ebp+0x8]
   17cbe:	push   esi
   17cbf:	call   0x17c6e
   17cc4:	mov    ecx,eax
   17cc6:	test   ecx,ecx
   17cc8:	je     0x17cdb
   17cca:	mov    eax,DWORD PTR [esi+0x3c]
   17ccd:	dec    eax
   17cce:	not    eax
   17cd0:	and    eax,DWORD PTR [ecx+0x14]
   17cd3:	sub    eax,DWORD PTR [ecx+0xc]
   17cd6:	add    eax,DWORD PTR [ebp+0xc]
   17cd9:	jmp    0x17cde
   17cdb:	mov    eax,DWORD PTR [ebp+0xc]
   17cde:	pop    esi
   17cdf:	pop    ebp
   17ce0:	ret    0x8
   17ce3:	int3   
   17ce4:	int3   
   17ce5:	int3   
   17ce6:	int3   
   17ce7:	int3   
   17ce8:	mov    edi,edi
   17cea:	push   ebp
   17ceb:	mov    ebp,esp
   17ced:	cmp    DWORD PTR [ebp+0x10],0x0
   17cf1:	je     0x17cf8
   17cf3:	mov    eax,DWORD PTR [ebp+0xc]
   17cf6:	jmp    0x17d03
   17cf8:	push   DWORD PTR [ebp+0xc]
   17cfb:	push   DWORD PTR [ebp+0x8]
   17cfe:	call   0x17cb2
   17d03:	pop    ebp
   17d04:	ret    0xc
   17d07:	int3   
   17d08:	int3   
   17d09:	int3   
   17d0a:	int3   
   17d0b:	int3   
   17d0c:	mov    edi,edi
   17d0e:	push   ebp
   17d0f:	mov    ebp,esp
   17d11:	sub    esp,0x1c
   17d14:	push   ebx
   17d15:	push   esi
   17d16:	mov    esi,DWORD PTR [ebp+0x8]
   17d19:	push   edi
   17d1a:	push   esi
   17d1b:	call   DWORD PTR ds:0x1b9b8
   17d21:	mov    ebx,eax
   17d23:	lea    eax,[ebp-0x14]
   17d26:	push   eax
   17d27:	push   0x0
   17d29:	push   0x0
   17d2b:	push   esi
   17d2c:	mov    DWORD PTR [ebp-0x4],ebx
   17d2f:	call   0x1a7e6
   17d34:	mov    edi,eax
   17d36:	mov    eax,DWORD PTR [ebx+0x50]
   17d39:	mov    ecx,edi
   17d3b:	sub    ecx,esi
   17d3d:	cmp    eax,ecx
   17d3f:	jb     0x17d90
   17d41:	mov    ecx,DWORD PTR [ebp-0x14]
   17d44:	sub    ecx,esi
   17d46:	add    ecx,edi
   17d48:	cmp    eax,ecx
   17d4a:	jb     0x17d90
   17d4c:	push   DWORD PTR [ebp+0x10]
   17d4f:	push   DWORD PTR [edi+0x20]
   17d52:	push   ebx
   17d53:	call   0x17ce8
   17d58:	push   DWORD PTR [ebp+0x10]
   17d5b:	mov    ebx,eax
   17d5d:	push   DWORD PTR [edi+0x1c]
   17d60:	add    ebx,esi
   17d62:	push   DWORD PTR [ebp-0x4]
   17d65:	call   0x17ce8
   17d6a:	push   DWORD PTR [ebp+0x10]
   17d6d:	add    eax,esi
   17d6f:	push   DWORD PTR [edi+0x24]
   17d72:	mov    DWORD PTR [ebp-0x1c],eax
   17d75:	push   DWORD PTR [ebp-0x4]
   17d78:	call   0x17ce8
   17d7d:	and    DWORD PTR [ebp-0xc],0x0
   17d81:	add    eax,esi
   17d83:	mov    esi,DWORD PTR [edi+0x18]
   17d86:	mov    DWORD PTR [ebp-0x18],eax
   17d89:	mov    DWORD PTR [ebp-0x8],esi
   17d8c:	test   esi,esi
   17d8e:	jg     0x17d9c
   17d90:	xor    eax,eax
   17d92:	pop    edi
   17d93:	pop    esi
   17d94:	pop    ebx
   17d95:	leave  
   17d96:	ret    0xc
   17d99:	mov    esi,DWORD PTR [ebp-0x8]
   17d9c:	mov    eax,DWORD PTR [ebp-0xc]
   17d9f:	push   DWORD PTR [ebp+0x10]
   17da2:	add    esi,eax
   17da4:	mov    eax,DWORD PTR [ebp+0xc]
   17da7:	sar    esi,1
   17da9:	push   DWORD PTR [ebx+esi*4]
   17dac:	mov    DWORD PTR [ebp-0x10],eax
   17daf:	push   DWORD PTR [ebp-0x4]
   17db2:	call   0x17ce8
   17db7:	add    eax,DWORD PTR [ebp+0x8]
   17dba:	mov    cl,BYTE PTR [eax]
   17dbc:	mov    edx,DWORD PTR [ebp-0x10]
   17dbf:	cmp    cl,BYTE PTR [edx]
   17dc1:	jne    0x17dde
   17dc3:	test   cl,cl
   17dc5:	je     0x17dda
   17dc7:	mov    cl,BYTE PTR [eax+0x1]
   17dca:	cmp    cl,BYTE PTR [edx+0x1]
   17dcd:	jne    0x17dde
   17dcf:	inc    eax
   17dd0:	inc    eax
   17dd1:	inc    edx
   17dd2:	inc    edx
   17dd3:	mov    DWORD PTR [ebp-0x10],edx
   17dd6:	test   cl,cl
   17dd8:	jne    0x17dba
   17dda:	xor    eax,eax
   17ddc:	jmp    0x17de3
   17dde:	sbb    eax,eax
   17de0:	sbb    eax,0xffffffff
   17de3:	test   eax,eax
   17de5:	je     0x17dfc
   17de7:	jge    0x17def
   17de9:	inc    esi
   17dea:	mov    DWORD PTR [ebp-0xc],esi
   17ded:	jmp    0x17df2
   17def:	mov    DWORD PTR [ebp-0x8],esi
   17df2:	mov    eax,DWORD PTR [ebp-0x8]
   17df5:	cmp    DWORD PTR [ebp-0xc],eax
   17df8:	jl     0x17d99
   17dfa:	jmp    0x17d90
   17dfc:	mov    eax,DWORD PTR [ebp-0x18]
   17dff:	movzx  eax,WORD PTR [eax+esi*2]
   17e03:	mov    ecx,DWORD PTR [ebp-0x1c]
   17e06:	mov    ecx,DWORD PTR [ecx+eax*4]
   17e09:	mov    eax,ecx
   17e0b:	sub    eax,edi
   17e0d:	add    eax,DWORD PTR [ebp+0x8]
   17e10:	cmp    eax,DWORD PTR [ebp-0x14]
   17e13:	sbb    eax,eax
   17e15:	not    eax
   17e17:	and    eax,ecx
   17e19:	jmp    0x17d92
   17e1e:	int3   
   17e1f:	int3   
   17e20:	int3   
   17e21:	int3   
   17e22:	int3   
   17e23:	int3   
   17e24:	mov    edi,edi
   17e26:	push   ebp
   17e27:	mov    ebp,esp
   17e29:	push   DWORD PTR [ebp+0x8]
   17e2c:	push   0xffffffff
   17e2e:	call   DWORD PTR ds:0x1b9bc
   17e34:	pop    ebp
   17e35:	ret    0x4
   17e38:	int3   
   17e39:	int3   
   17e3a:	int3   
   17e3b:	int3   
   17e3c:	int3   
   17e3d:	int3   
   17e3e:	mov    edi,edi
   17e40:	push   ebp
   17e41:	mov    ebp,esp
   17e43:	sub    esp,0x818
   17e49:	mov    eax,ds:0x70100
   17e4e:	xor    eax,ebp
   17e50:	mov    DWORD PTR [ebp-0x4],eax
   17e53:	mov    ecx,DWORD PTR [ebp+0xc]
   17e56:	push   ebx
   17e57:	mov    ebx,DWORD PTR [ebp+0x8]
   17e5a:	push   esi
   17e5b:	push   edi
   17e5c:	xor    esi,esi
   17e5e:	xor    eax,eax
   17e60:	push   ecx
   17e61:	mov    DWORD PTR [ebp-0x7f0],esi
   17e67:	lea    edi,[ebp-0x7ec]
   17e6d:	stos   DWORD PTR es:[edi],eax
   17e6e:	lea    eax,[ebp-0x7d4]
   17e74:	push   0x1b6d6
   17e79:	push   eax
   17e7a:	mov    DWORD PTR [ebp-0x7e0],esi
   17e80:	mov    DWORD PTR [ebp-0x7e8],esi
   17e86:	call   DWORD PTR ds:0x1b9a0
   17e8c:	add    esp,0xc
   17e8f:	lea    eax,[ebp-0x7d4]
   17e95:	push   eax
   17e96:	lea    eax,[ebp-0x810]
   17e9c:	push   eax
   17e9d:	call   DWORD PTR ds:0x1b908
   17ea3:	lea    eax,[ebp-0x810]
   17ea9:	push   0x1adfa
   17eae:	mov    DWORD PTR [ebp-0x808],0x18
   17eb8:	mov    DWORD PTR [ebp-0x804],esi
   17ebe:	mov    DWORD PTR [ebp-0x7fc],esi
   17ec4:	mov    DWORD PTR [ebp-0x800],eax
   17eca:	mov    DWORD PTR [ebp-0x7f8],esi
   17ed0:	mov    DWORD PTR [ebp-0x7f4],esi
   17ed6:	call   0x116f2
   17edb:	push   0x10
   17edd:	push   0x1
   17edf:	lea    ecx,[ebp-0x818]
   17ee5:	push   ecx
   17ee6:	lea    ecx,[ebp-0x808]
   17eec:	push   ecx
   17eed:	push   0x80100000
   17ef2:	lea    ecx,[ebp-0x7e4]
   17ef8:	push   ecx
   17ef9:	call   eax
   17efb:	cmp    eax,esi
   17efd:	jl     0x17f89
   17f03:	push   DWORD PTR [ebp-0x7e4]
   17f09:	lea    eax,[ebp-0x7f0]
   17f0f:	push   DWORD PTR [ebp+0x10]
   17f12:	push   0x2
   17f14:	push   eax
   17f15:	push   esi
   17f16:	push   0x4
   17f18:	lea    eax,[ebp-0x7dc]
   17f1e:	push   eax
   17f1f:	call   DWORD PTR ds:0x1b9c4
   17f25:	push   DWORD PTR [ebp-0x7e4]
   17f2b:	mov    edi,DWORD PTR ds:0x1b9d4
   17f31:	mov    DWORD PTR [ebp-0x7d8],eax
   17f37:	call   edi
   17f39:	mov    eax,DWORD PTR [ebp-0x7d8]
   17f3f:	cmp    eax,esi
   17f41:	jl     0x17f89
   17f43:	push   0x2
   17f45:	push   esi
   17f46:	push   0x2
   17f48:	lea    eax,[ebp-0x7e8]
   17f4e:	push   eax
   17f4f:	push   esi
   17f50:	push   esi
   17f51:	push   esi
   17f52:	lea    eax,[ebp-0x7e0]
   17f58:	push   eax
   17f59:	push   0xffffffff
   17f5b:	push   DWORD PTR [ebp-0x7dc]
   17f61:	call   DWORD PTR ds:0x1b9c0
   17f67:	push   DWORD PTR [ebp-0x7dc]
   17f6d:	mov    DWORD PTR [ebp-0x7d8],eax
   17f73:	call   edi
   17f75:	mov    eax,DWORD PTR [ebp-0x7d8]
   17f7b:	cmp    eax,esi
   17f7d:	jl     0x17f89
   17f7f:	mov    eax,DWORD PTR [ebp-0x7e0]
   17f85:	mov    DWORD PTR [ebx],eax
   17f87:	xor    eax,eax
   17f89:	mov    ecx,DWORD PTR [ebp-0x4]
   17f8c:	pop    edi
   17f8d:	pop    esi
   17f8e:	xor    ecx,ebp
   17f90:	pop    ebx
   17f91:	call   0x1a745
   17f96:	leave  
   17f97:	ret    0xc
   17f9a:	int3   
   17f9b:	int3   
   17f9c:	int3   
   17f9d:	int3   
   17f9e:	int3   
   17f9f:	int3   
   17fa0:	mov    edi,edi
   17fa2:	push   ebp
   17fa3:	mov    ebp,esp
   17fa5:	push   esi
   17fa6:	mov    esi,DWORD PTR [ebp+0x8]
   17fa9:	test   esi,esi
   17fab:	jne    0x17fb0
   17fad:	lea    esi,[ecx+0x18]
   17fb0:	mov    edx,DWORD PTR [ebp+0xc]
   17fb3:	test   edx,edx
   17fb5:	jne    0x17fbb
   17fb7:	xor    eax,eax
   17fb9:	jmp    0x17fcb
   17fbb:	movzx  eax,BYTE PTR [edx]
   17fbe:	push   edx
   17fbf:	lea    eax,[eax*8+0x6c2c8]
   17fc6:	push   esi
   17fc7:	push   eax
   17fc8:	call   DWORD PTR [eax+0x4]
   17fcb:	pop    esi
   17fcc:	pop    ebp
   17fcd:	ret    0x8
   17fd0:	int3   
   17fd1:	int3   
   17fd2:	int3   
   17fd3:	int3   
   17fd4:	int3   
   17fd5:	int3   
   17fd6:	mov    edi,edi
   17fd8:	push   ebp
   17fd9:	mov    ebp,esp
   17fdb:	mov    eax,DWORD PTR [ebp+0x14]
   17fde:	push   ebx
   17fdf:	mov    ebx,DWORD PTR [ebp+0x8]
   17fe2:	push   esi
   17fe3:	mov    esi,DWORD PTR [ebp+0x10]
   17fe6:	sub    esi,eax
   17fe8:	push   edi
   17fe9:	lea    edi,[ebx+eax*1]
   17fec:	mov    eax,esi
   17fee:	xor    edx,edx
   17ff0:	dec    eax
   17ff1:	je     0x18012
   17ff3:	dec    eax
   17ff4:	je     0x18004
   17ff6:	dec    eax
   17ff7:	dec    eax
   17ff8:	jne    0x1801e
   17ffa:	mov    eax,DWORD PTR [ecx+0xc]
   17ffd:	mov    edx,DWORD PTR [edi]
   17fff:	and    DWORD PTR [eax],0x0
   18002:	jmp    0x1801e
   18004:	mov    eax,DWORD PTR [ecx+0xc]
   18007:	movsx  edx,WORD PTR [edi]
   1800a:	mov    DWORD PTR [eax],0x2
   18010:	jmp    0x1801e
   18012:	mov    eax,DWORD PTR [ecx+0xc]
   18015:	movsx  edx,BYTE PTR [edi]
   18018:	mov    DWORD PTR [eax],0x3
   1801e:	mov    ecx,DWORD PTR [ebp+0xc]
   18021:	lea    eax,[edx+ecx*1]
   18024:	add    eax,DWORD PTR [ebp+0x10]
   18027:	sub    edx,ebx
   18029:	add    edx,ecx
   1802b:	dec    esi
   1802c:	je     0x1803e
   1802e:	dec    esi
   1802f:	je     0x18039
   18031:	dec    esi
   18032:	dec    esi
   18033:	jne    0x18040
   18035:	mov    DWORD PTR [edi],edx
   18037:	jmp    0x18040
   18039:	mov    WORD PTR [edi],dx
   1803c:	jmp    0x18040
   1803e:	mov    BYTE PTR [edi],dl
   18040:	pop    edi
   18041:	pop    esi
   18042:	pop    ebx
   18043:	pop    ebp
   18044:	ret    0x10
   18047:	int3   
   18048:	int3   
   18049:	int3   
   1804a:	int3   
   1804b:	int3   
   1804c:	mov    edi,edi
   1804e:	push   ebp
   1804f:	mov    ebp,esp
   18051:	mov    eax,DWORD PTR [ebp+0x10]
   18054:	inc    eax
   18055:	pop    ebp
   18056:	ret    0xc
   18059:	int3   
   1805a:	int3   
   1805b:	int3   
   1805c:	int3   
   1805d:	int3   
   1805e:	mov    edi,edi
   18060:	push   ebp
   18061:	mov    ebp,esp
   18063:	mov    eax,ecx
   18065:	mov    ecx,DWORD PTR [ebp+0x8]
   18068:	and    DWORD PTR [eax],0x0
   1806b:	and    DWORD PTR [eax+0x4],0x0
   1806f:	test   ecx,ecx
   18071:	jne    0x18076
   18073:	lea    ecx,[eax+0x14]
   18076:	mov    edx,DWORD PTR [ebp+0xc]
   18079:	mov    DWORD PTR [eax+0x8],ecx
   1807c:	test   edx,edx
   1807e:	jne    0x18083
   18080:	lea    edx,[eax+0x10]
   18083:	mov    DWORD PTR [eax+0xc],edx
   18086:	and    DWORD PTR [ecx],0x0
   18089:	mov    ecx,DWORD PTR [eax+0xc]
   1808c:	and    DWORD PTR [ecx],0x0
   1808f:	pop    ebp
   18090:	ret    0x8
   18093:	int3   
   18094:	int3   
   18095:	int3   
   18096:	int3   
   18097:	int3   
   18098:	mov    edi,edi
   1809a:	push   ebp
   1809b:	mov    ebp,esp
   1809d:	push   ecx
   1809e:	mov    eax,DWORD PTR [ebp+0x8]
   180a1:	mov    eax,DWORD PTR [eax]
   180a3:	push   ebx
   180a4:	push   esi
   180a5:	push   edi
   180a6:	mov    DWORD PTR [ebp-0x4],ecx
   180a9:	mov    esi,eax
   180ab:	test   eax,0x200000
   180b0:	je     0x180bd
   180b2:	cmp    DWORD PTR [ecx+0x4],0x0
   180b6:	je     0x180c2
   180b8:	shr    esi,0xb
   180bb:	jmp    0x180c5
   180bd:	cmp    DWORD PTR [ecx],0x0
   180c0:	jmp    0x180b6
   180c2:	shr    esi,0x8
   180c5:	mov    ebx,DWORD PTR [ebp+0x10]
   180c8:	and    esi,0x7
   180cb:	shr    eax,0xe
   180ce:	and    eax,0x7
   180d1:	mov    edi,esi
   180d3:	jbe    0x1810f
   180d5:	add    eax,ebx
   180d7:	mov    cl,BYTE PTR [eax]
   180d9:	movzx  edx,cl
   180dc:	mov    dl,BYTE PTR [edx+0x6c1c8]
   180e2:	test   dl,0x10
   180e5:	je     0x18107
   180e7:	mov    al,BYTE PTR [eax+0x1]
   180ea:	and    al,0x7
   180ec:	cmp    al,0x5
   180ee:	jne    0x18107
   180f0:	and    cl,0xc0
   180f3:	je     0x18104
   180f5:	cmp    cl,0x40
   180f8:	jne    0x180ff
   180fa:	lea    edi,[esi+0x1]
   180fd:	jmp    0x18107
   180ff:	cmp    cl,0x80
   18102:	jne    0x18107
   18104:	lea    edi,[esi+0x4]
   18107:	movzx  eax,dl
   1810a:	and    eax,0xf
   1810d:	add    edi,eax
   1810f:	push   edi
   18110:	push   ebx
   18111:	push   DWORD PTR [ebp+0xc]
   18114:	call   0x1a7b6
   18119:	mov    ecx,DWORD PTR [ebp+0x8]
   1811c:	mov    eax,DWORD PTR [ecx]
   1811e:	shl    eax,0xc
   18121:	sar    eax,0x1d
   18124:	add    esp,0xc
   18127:	test   eax,eax
   18129:	je     0x18145
   1812b:	push   eax
   1812c:	push   esi
   1812d:	mov    esi,DWORD PTR [ebp-0x4]
   18130:	push   ebx
   18131:	push   DWORD PTR [ebp+0xc]
   18134:	mov    ecx,esi
   18136:	call   0x17fd6
   1813b:	mov    ecx,DWORD PTR [esi+0x8]
   1813e:	mov    DWORD PTR [ecx],eax
   18140:	mov    ecx,DWORD PTR [ebp+0x8]
   18143:	jmp    0x18148
   18145:	mov    esi,DWORD PTR [ebp-0x4]
   18148:	test   DWORD PTR [ecx],0x400000
   1814e:	je     0x18155
   18150:	mov    eax,DWORD PTR [esi+0xc]
   18153:	neg    DWORD PTR [eax]
   18155:	test   DWORD PTR [ecx],0x100000
   1815b:	je     0x18163
   1815d:	mov    eax,DWORD PTR [esi+0x8]
   18160:	or     DWORD PTR [eax],0xffffffff
   18163:	lea    eax,[edi+ebx*1]
   18166:	pop    edi
   18167:	pop    esi
   18168:	pop    ebx
   18169:	leave  
   1816a:	ret    0xc
   1816d:	int3   
   1816e:	int3   
   1816f:	int3   
   18170:	int3   
   18171:	int3   
   18172:	mov    edi,edi
   18174:	push   ebp
   18175:	mov    ebp,esp
   18177:	push   ebx
   18178:	push   esi
   18179:	mov    esi,DWORD PTR [ebp+0x10]
   1817c:	push   edi
   1817d:	mov    edi,DWORD PTR [ebp+0xc]
   18180:	push   esi
   18181:	push   edi
   18182:	push   DWORD PTR [ebp+0x8]
   18185:	mov    ebx,ecx
   18187:	call   0x18098
   1818c:	lea    eax,[esi+0x1]
   1818f:	movzx  edx,BYTE PTR [eax]
   18192:	push   eax
   18193:	inc    edi
   18194:	lea    edx,[edx*8+0x6c2c8]
   1819b:	push   edi
   1819c:	push   edx
   1819d:	mov    ecx,ebx
   1819f:	call   DWORD PTR [edx+0x4]
   181a2:	pop    edi
   181a3:	pop    esi
   181a4:	pop    ebx
   181a5:	pop    ebp
   181a6:	ret    0xc
   181a9:	int3   
   181aa:	int3   
   181ab:	int3   
   181ac:	int3   
   181ad:	int3   
   181ae:	mov    edi,edi
   181b0:	push   ebp
   181b1:	mov    ebp,esp
   181b3:	push   ebx
   181b4:	push   esi
   181b5:	mov    esi,DWORD PTR [ebp+0x10]
   181b8:	push   edi
   181b9:	mov    edi,DWORD PTR [ebp+0xc]
   181bc:	push   esi
   181bd:	push   edi
   181be:	push   DWORD PTR [ebp+0x8]
   181c1:	mov    ebx,ecx
   181c3:	call   0x18098
   181c8:	lea    eax,[esi+0x1]
   181cb:	movzx  edx,BYTE PTR [eax]
   181ce:	push   eax
   181cf:	inc    edi
   181d0:	lea    edx,[edx*8+0x6cad0]
   181d7:	push   edi
   181d8:	push   edx
   181d9:	mov    ecx,ebx
   181db:	call   DWORD PTR [edx+0x4]
   181de:	pop    edi
   181df:	pop    esi
   181e0:	pop    ebx
   181e1:	pop    ebp
   181e2:	ret    0xc
   181e5:	int3   
   181e6:	int3   
   181e7:	int3   
   181e8:	int3   
   181e9:	int3   
   181ea:	mov    edi,edi
   181ec:	push   ebp
   181ed:	mov    ebp,esp
   181ef:	mov    DWORD PTR [ecx],0x1
   181f5:	pop    ebp
   181f6:	jmp    0x18172
   181fb:	int3   
   181fc:	int3   
   181fd:	int3   
   181fe:	int3   
   181ff:	int3   
   18200:	mov    edi,edi
   18202:	push   ebp
   18203:	mov    ebp,esp
   18205:	mov    DWORD PTR [ecx+0x4],0x1
   1820c:	pop    ebp
   1820d:	jmp    0x18172
   18212:	int3   
   18213:	int3   
   18214:	int3   
   18215:	int3   
   18216:	int3   
   18217:	int3   
   18218:	mov    edi,edi
   1821a:	push   ebp
   1821b:	mov    ebp,esp
   1821d:	mov    eax,DWORD PTR [ebp+0x10]
   18220:	sub    esp,0x10
   18223:	test   BYTE PTR [eax+0x1],0x38
   18227:	push   eax
   18228:	push   DWORD PTR [ebp+0xc]
   1822b:	jne    0x18240
   1822d:	mov    DWORD PTR [ebp-0x8],0x5bf6
   18234:	mov    DWORD PTR [ebp-0x4],0x18098
   1823b:	lea    eax,[ebp-0x8]
   1823e:	jmp    0x18251
   18240:	mov    DWORD PTR [ebp-0x10],0x52f6
   18247:	mov    DWORD PTR [ebp-0xc],0x18098
   1824e:	lea    eax,[ebp-0x10]
   18251:	push   eax
   18252:	call   0x18098
   18257:	leave  
   18258:	ret    0xc
   1825b:	int3   
   1825c:	int3   
   1825d:	int3   
   1825e:	int3   
   1825f:	int3   
   18260:	mov    edi,edi
   18262:	push   ebp
   18263:	mov    ebp,esp
   18265:	mov    eax,DWORD PTR [ebp+0x10]
   18268:	sub    esp,0x10
   1826b:	test   BYTE PTR [eax+0x1],0x38
   1826f:	push   eax
   18270:	push   DWORD PTR [ebp+0xc]
   18273:	jne    0x18288
   18275:	mov    DWORD PTR [ebp-0x8],0x66f7
   1827c:	mov    DWORD PTR [ebp-0x4],0x18098
   18283:	lea    eax,[ebp-0x8]
   18286:	jmp    0x18299
   18288:	mov    DWORD PTR [ebp-0x10],0x52f7
   1828f:	mov    DWORD PTR [ebp-0xc],0x18098
   18296:	lea    eax,[ebp-0x10]
   18299:	push   eax
   1829a:	call   0x18098
   1829f:	leave  
   182a0:	ret    0xc
   182a3:	int3   
   182a4:	int3   
   182a5:	int3   
   182a6:	int3   
   182a7:	int3   
   182a8:	mov    edi,edi
   182aa:	push   ebp
   182ab:	mov    ebp,esp
   182ad:	push   ecx
   182ae:	push   ecx
   182af:	mov    edx,DWORD PTR [ebp+0x10]
   182b2:	mov    al,BYTE PTR [edx+0x1]
   182b5:	cmp    al,0x15
   182b7:	je     0x182d7
   182b9:	cmp    al,0x25
   182bb:	je     0x182d7
   182bd:	and    al,0x38
   182bf:	cmp    al,0x10
   182c1:	je     0x182cf
   182c3:	cmp    al,0x18
   182c5:	je     0x182cf
   182c7:	cmp    al,0x20
   182c9:	je     0x182cf
   182cb:	cmp    al,0x28
   182cd:	jne    0x182e3
   182cf:	mov    eax,DWORD PTR [ecx+0x8]
   182d2:	or     DWORD PTR [eax],0xffffffff
   182d5:	jmp    0x182e3
   182d7:	mov    eax,DWORD PTR [edx+0x2]
   182da:	mov    eax,DWORD PTR [eax]
   182dc:	push   esi
   182dd:	mov    esi,DWORD PTR [ecx+0x8]
   182e0:	mov    DWORD PTR [esi],eax
   182e2:	pop    esi
   182e3:	push   edx
   182e4:	push   DWORD PTR [ebp+0xc]
   182e7:	lea    eax,[ebp-0x8]
   182ea:	push   eax
   182eb:	mov    DWORD PTR [ebp-0x8],0x52ff
   182f2:	mov    DWORD PTR [ebp-0x4],0x18098
   182f9:	call   0x18098
   182fe:	leave  
   182ff:	ret    0xc
   18302:	int3   
   18303:	int3   
   18304:	int3   
   18305:	int3   
   18306:	int3   
   18307:	int3   
   18308:	mov    edi,edi
   1830a:	push   ebp
   1830b:	mov    ebp,esp
   1830d:	sub    esp,0x5c
   18310:	mov    eax,ds:0x70100
   18315:	xor    eax,ebp
   18317:	mov    DWORD PTR [ebp-0x4],eax
   1831a:	mov    eax,DWORD PTR [ebp+0x10]
   1831d:	push   esi
   1831e:	mov    esi,DWORD PTR [ebp+0x8]
   18321:	push   edi
   18322:	mov    edi,DWORD PTR [ebp+0xc]
   18325:	push   0x0
   18327:	push   eax
   18328:	lea    ecx,[ebp-0x5c]
   1832b:	call   0x1805e
   18330:	push   edi
   18331:	push   esi
   18332:	lea    ecx,[ebp-0x5c]
   18335:	call   0x17fa0
   1833a:	mov    ecx,DWORD PTR [ebp-0x4]
   1833d:	pop    edi
   1833e:	xor    ecx,ebp
   18340:	pop    esi
   18341:	call   0x1a745
   18346:	leave  
   18347:	ret    0xc
   1834a:	int3   
   1834b:	int3   
   1834c:	int3   
   1834d:	int3   
   1834e:	int3   
   1834f:	int3   
   18350:	mov    edi,edi
   18352:	push   ebp
   18353:	mov    ebp,esp
   18355:	sub    esp,0x50
   18358:	push   ebx
   18359:	push   esi
   1835a:	push   edi
   1835b:	mov    edi,0x4000
   18360:	push   edi
   18361:	call   0x107fe
   18366:	pop    ecx
   18367:	xor    ebx,ebx
   18369:	push   0x38
   1836b:	push   0x1b706
   18370:	cmp    eax,ebx
   18372:	mov    DWORD PTR [ebp-0x4],eax
   18375:	mov    DWORD PTR [ebp-0xc],eax
   18378:	push   0x2f
   1837a:	lea    eax,[ebp-0x50]
   1837d:	setne  BYTE PTR [ebp-0x10]
   18381:	push   eax
   18382:	xor    esi,esi
   18384:	mov    DWORD PTR [ebp-0x30],ebx
   18387:	mov    DWORD PTR [ebp-0x2c],ebx
   1838a:	mov    DWORD PTR [ebp-0x28],ebx
   1838d:	mov    DWORD PTR [ebp-0x4c],ebx
   18390:	mov    DWORD PTR [ebp-0x50],ebx
   18393:	call   0x1863a
   18398:	test   eax,eax
   1839a:	je     0x183b9
   1839c:	mov    esi,DWORD PTR [ebp+0x8]
   1839f:	mov    BYTE PTR [esi],bl
   183a1:	mov    DWORD PTR [esi+0x4],ebx
   183a4:	cmp    BYTE PTR [ebp-0x10],bl
   183a7:	je     0x183b2
   183a9:	push   DWORD PTR [ebp-0x4]
   183ac:	call   0x10832
   183b1:	pop    ecx
   183b2:	mov    eax,esi
   183b4:	jmp    0x184ce
   183b9:	mov    eax,DWORD PTR [ebp+0x10]
   183bc:	mov    DWORD PTR [ebp-0x4c],eax
   183bf:	mov    eax,DWORD PTR [ebp+0xc]
   183c2:	mov    DWORD PTR [ebp-0x50],eax
   183c5:	mov    eax,DWORD PTR [ebp-0xc]
   183c8:	add    eax,esi
   183ca:	mov    DWORD PTR [ebp-0x44],eax
   183cd:	push   0x4
   183cf:	lea    eax,[ebp-0x50]
   183d2:	push   eax
   183d3:	mov    DWORD PTR [ebp-0x40],edi
   183d6:	call   0x187ce
   183db:	cmp    eax,0xfffffffc
   183de:	mov    DWORD PTR [ebp+0x10],eax
   183e1:	jl     0x183f5
   183e3:	cmp    eax,0xfffffffd
   183e6:	jle    0x1847e
   183ec:	cmp    eax,0x2
   183ef:	je     0x1847e
   183f5:	mov    eax,edi
   183f7:	sub    eax,DWORD PTR [ebp-0x40]
   183fa:	add    esi,eax
   183fc:	cmp    DWORD PTR [ebp-0x40],ebx
   183ff:	jne    0x18468
   18401:	mov    al,BYTE PTR [ebp-0x10]
   18404:	mov    BYTE PTR [ebp-0x18],al
   18407:	mov    eax,DWORD PTR [ebp-0xc]
   1840a:	mov    DWORD PTR [ebp-0x14],eax
   1840d:	lea    eax,[esi+0x4000]
   18413:	push   eax
   18414:	mov    BYTE PTR [ebp-0x10],bl
   18417:	call   0x107fe
   1841c:	pop    ecx
   1841d:	cmp    eax,ebx
   1841f:	setne  cl
   18422:	mov    DWORD PTR [ebp-0x4],eax
   18425:	lea    eax,[ebp-0x8]
   18428:	mov    BYTE PTR [ebp-0x8],cl
   1842b:	push   eax
   1842c:	lea    ecx,[ebp-0x10]
   1842f:	call   0x11fb6
   18434:	cmp    BYTE PTR [ebp-0x8],bl
   18437:	je     0x18442
   18439:	push   DWORD PTR [ebp-0x4]
   1843c:	call   0x10832
   18441:	pop    ecx
   18442:	push   esi
   18443:	push   DWORD PTR [ebp-0x14]
   18446:	push   DWORD PTR [ebp-0xc]
   18449:	call   0x1a7b6
   1844e:	add    esp,0xc
   18451:	cmp    BYTE PTR [ebp-0x18],bl
   18454:	je     0x1845f
   18456:	push   DWORD PTR [ebp-0x14]
   18459:	call   0x10832
   1845e:	pop    ecx
   1845f:	cmp    DWORD PTR [ebp-0x40],ebx
   18462:	je     0x183c5
   18468:	lea    eax,[ebp-0x50]
   1846b:	push   eax
   1846c:	call   0x199ec
   18471:	cmp    DWORD PTR [ebp+0x10],0x1
   18475:	jne    0x184a0
   18477:	mov    eax,DWORD PTR [ebp+0x14]
   1847a:	mov    DWORD PTR [eax],esi
   1847c:	jmp    0x184c0
   1847e:	lea    eax,[ebp-0x50]
   18481:	push   eax
   18482:	call   0x199ec
   18487:	mov    esi,DWORD PTR [ebp+0x8]
   1848a:	mov    BYTE PTR [esi],bl
   1848c:	mov    DWORD PTR [esi+0x4],ebx
   1848f:	cmp    BYTE PTR [ebp-0x10],bl
   18492:	je     0x183b2
   18498:	push   DWORD PTR [ebp-0xc]
   1849b:	jmp    0x183ac
   184a0:	lea    eax,[ebp-0x18]
   184a3:	push   eax
   184a4:	lea    ecx,[ebp-0x10]
   184a7:	mov    BYTE PTR [ebp-0x18],bl
   184aa:	mov    DWORD PTR [ebp-0x14],ebx
   184ad:	call   0x11fb6
   184b2:	cmp    BYTE PTR [ebp-0x18],bl
   184b5:	je     0x184c0
   184b7:	push   DWORD PTR [ebp-0x14]
   184ba:	call   0x10832
   184bf:	pop    ecx
   184c0:	mov    eax,DWORD PTR [ebp+0x8]
   184c3:	mov    cl,BYTE PTR [ebp-0x10]
   184c6:	mov    BYTE PTR [eax],cl
   184c8:	mov    ecx,DWORD PTR [ebp-0xc]
   184cb:	mov    DWORD PTR [eax+0x4],ecx
   184ce:	pop    edi
   184cf:	pop    esi
   184d0:	pop    ebx
   184d1:	leave  
   184d2:	ret    0x10
   184d5:	int3   
   184d6:	int3   
   184d7:	int3   
   184d8:	int3   
   184d9:	int3   
   184da:	xor    eax,eax
   184dc:	push   eax
   184dd:	push   eax
   184de:	push   eax
   184df:	push   eax
   184e0:	push   0x70cc0
   184e5:	call   DWORD PTR ds:0x1b92c
   184eb:	test   eax,eax
   184ed:	setge  al
   184f0:	ret    
   184f1:	int3   
   184f2:	int3   
   184f3:	int3   
   184f4:	int3   
   184f5:	int3   
   184f6:	push   0x0
   184f8:	push   0x70cc0
   184fd:	call   DWORD PTR ds:0x1b928
   18503:	ret    
   18504:	int3   
   18505:	int3   
   18506:	int3   
   18507:	int3   
   18508:	int3   
   18509:	int3   
   1850a:	mov    edi,edi
   1850c:	push   esi
   1850d:	push   edi
   1850e:	push   0x1
   18510:	xor    edi,edi
   18512:	push   edi
   18513:	mov    esi,ecx
   18515:	call   0x12ab4
   1851a:	cmp    DWORD PTR ds:0x70ca0,edi
   18520:	jne    0x18537
   18522:	mov    ecx,eax
   18524:	mov    DWORD PTR ds:0x70ca0,ecx
   1852a:	mov    DWORD PTR [ecx],edi
   1852c:	mov    ecx,DWORD PTR ds:0x70ca0
   18532:	xor    eax,eax
   18534:	mov    DWORD PTR [ecx+0x8],edi
   18537:	inc    DWORD PTR ds:0x70ce8
   1853d:	cmp    eax,edi
   1853f:	je     0x18548
   18541:	push   eax
   18542:	call   0x10832
   18547:	pop    ecx
   18548:	push   edi
   18549:	push   DWORD PTR ds:0x70ca0
   1854f:	mov    ecx,esi
   18551:	call   0x12ab4
   18556:	mov    DWORD PTR [esi+0xc],edi
   18559:	mov    DWORD PTR [esi+0x4],eax
   1855c:	mov    DWORD PTR [eax],eax
   1855e:	mov    esi,DWORD PTR [esi+0x4]
   18561:	pop    edi
   18562:	mov    DWORD PTR [esi+0x8],esi
   18565:	pop    esi
   18566:	ret    
   18567:	int3   
   18568:	int3   
   18569:	int3   
   1856a:	int3   
   1856b:	int3   
   1856c:	mov    edi,edi
   1856e:	push   ebx
   1856f:	push   esi
   18570:	xor    ebx,ebx
   18572:	push   ebx
   18573:	push   0x70cc0
   18578:	call   DWORD PTR ds:0x1b958
   1857e:	push   0x10
   18580:	call   0x107fe
   18585:	mov    esi,eax
   18587:	pop    ecx
   18588:	cmp    esi,ebx
   1858a:	je     0x1859e
   1858c:	mov    ecx,esi
   1858e:	mov    BYTE PTR [esi+0x8],bl
   18591:	call   0x1850a
   18596:	mov    DWORD PTR ds:0x70ce0,esi
   1859c:	jmp    0x185a4
   1859e:	mov    DWORD PTR ds:0x70ce0,ebx
   185a4:	push   0x10
   185a6:	call   0x107fe
   185ab:	mov    esi,eax
   185ad:	pop    ecx
   185ae:	cmp    esi,ebx
   185b0:	je     0x185c4
   185b2:	mov    ecx,esi
   185b4:	mov    BYTE PTR [esi+0x8],bl
   185b7:	call   0x130dc
   185bc:	mov    DWORD PTR ds:0x70ce4,esi
   185c2:	jmp    0x185ca
   185c4:	mov    DWORD PTR ds:0x70ce4,ebx
   185ca:	pop    esi
   185cb:	pop    ebx
   185cc:	ret    
   185cd:	int3   
   185ce:	int3   
   185cf:	int3   
   185d0:	int3   
   185d1:	int3   
   185d2:	mov    edi,edi
   185d4:	push   ebp
   185d5:	mov    ebp,esp
   185d7:	mov    ecx,DWORD PTR [ebp+0x8]
   185da:	xor    edx,edx
   185dc:	cmp    ecx,edx
   185de:	je     0x1862e
   185e0:	mov    eax,DWORD PTR [ecx+0x1c]
   185e3:	cmp    eax,edx
   185e5:	je     0x1862e
   185e7:	mov    DWORD PTR [eax+0x1c],edx
   185ea:	mov    DWORD PTR [ecx+0x14],edx
   185ed:	mov    DWORD PTR [ecx+0x8],edx
   185f0:	mov    DWORD PTR [ecx+0x18],edx
   185f3:	mov    DWORD PTR [ecx+0x30],0x1
   185fa:	lea    ecx,[eax+0x530]
   18600:	mov    DWORD PTR [eax],edx
   18602:	mov    DWORD PTR [eax+0x4],edx
   18605:	mov    DWORD PTR [eax+0xc],edx
   18608:	mov    DWORD PTR [eax+0x14],0x8000
   1860f:	mov    DWORD PTR [eax+0x20],edx
   18612:	mov    DWORD PTR [eax+0x28],edx
   18615:	mov    DWORD PTR [eax+0x2c],edx
   18618:	mov    DWORD PTR [eax+0x30],edx
   1861b:	mov    DWORD PTR [eax+0x38],edx
   1861e:	mov    DWORD PTR [eax+0x3c],edx
   18621:	mov    DWORD PTR [eax+0x6c],ecx
   18624:	mov    DWORD PTR [eax+0x50],ecx
   18627:	mov    DWORD PTR [eax+0x4c],ecx
   1862a:	xor    eax,eax
   1862c:	jmp    0x18631
   1862e:	push   0xfffffffe
   18630:	pop    eax
   18631:	pop    ebp
   18632:	ret    0x4
   18635:	int3   
   18636:	int3   
   18637:	int3   
   18638:	int3   
   18639:	int3   
   1863a:	mov    edi,edi
   1863c:	push   ebp
   1863d:	mov    ebp,esp
   1863f:	mov    eax,DWORD PTR [ebp+0x10]
   18642:	push   esi
   18643:	push   edi
   18644:	xor    edi,edi
   18646:	cmp    eax,edi
   18648:	je     0x186e3
   1864e:	cmp    BYTE PTR [eax],0x31
   18651:	jne    0x186e3
   18657:	cmp    DWORD PTR [ebp+0x14],0x38
   1865b:	jne    0x186e3
   18661:	mov    esi,DWORD PTR [ebp+0x8]
   18664:	cmp    esi,edi
   18666:	jne    0x1866c
   18668:	push   0xfffffffe
   1866a:	jmp    0x186e5
   1866c:	mov    DWORD PTR [esi+0x18],edi
   1866f:	cmp    DWORD PTR [esi+0x20],edi
   18672:	jne    0x1867e
   18674:	mov    DWORD PTR [esi+0x20],0x19a32
   1867b:	mov    DWORD PTR [esi+0x28],edi
   1867e:	cmp    DWORD PTR [esi+0x24],edi
   18681:	jne    0x1868a
   18683:	mov    DWORD PTR [esi+0x24],0x19a4e
   1868a:	push   0x2530
   1868f:	push   0x1
   18691:	push   DWORD PTR [esi+0x28]
   18694:	call   DWORD PTR [esi+0x20]
   18697:	cmp    eax,edi
   18699:	jne    0x1869f
   1869b:	push   0xfffffffc
   1869d:	jmp    0x186e5
   1869f:	mov    ecx,DWORD PTR [ebp+0xc]
   186a2:	cmp    ecx,edi
   186a4:	mov    DWORD PTR [esi+0x1c],eax
   186a7:	jge    0x186b0
   186a9:	mov    DWORD PTR [eax+0x8],edi
   186ac:	neg    ecx
   186ae:	jmp    0x186c1
   186b0:	mov    edx,ecx
   186b2:	sar    edx,0x4
   186b5:	inc    edx
   186b6:	cmp    ecx,0x30
   186b9:	mov    DWORD PTR [eax+0x8],edx
   186bc:	jge    0x186c1
   186be:	and    ecx,0xf
   186c1:	lea    edx,[ecx-0x8]
   186c4:	cmp    edx,0x7
   186c7:	ja     0x186d7
   186c9:	push   esi
   186ca:	mov    DWORD PTR [eax+0x24],ecx
   186cd:	mov    DWORD PTR [eax+0x34],edi
   186d0:	call   0x185d2
   186d5:	jmp    0x186e6
   186d7:	push   eax
   186d8:	push   DWORD PTR [esi+0x28]
   186db:	call   DWORD PTR [esi+0x24]
   186de:	mov    DWORD PTR [esi+0x1c],edi
   186e1:	jmp    0x18668
   186e3:	push   0xfffffffa
   186e5:	pop    eax
   186e6:	pop    edi
   186e7:	pop    esi
   186e8:	pop    ebp
   186e9:	ret    0x10
   186ec:	int3   
   186ed:	int3   
   186ee:	int3   
   186ef:	int3   
   186f0:	int3   
   186f1:	int3   
   186f2:	mov    edi,edi
   186f4:	push   ebp
   186f5:	mov    ebp,esp
   186f7:	push   ecx
   186f8:	push   ebx
   186f9:	push   esi
   186fa:	mov    esi,DWORD PTR [edi+0x1c]
   186fd:	cmp    DWORD PTR [esi+0x34],0x0
   18701:	mov    ebx,eax
   18703:	jne    0x18723
   18705:	mov    ecx,DWORD PTR [esi+0x24]
   18708:	xor    eax,eax
   1870a:	inc    eax
   1870b:	shl    eax,cl
   1870d:	push   0x1
   1870f:	push   eax
   18710:	push   DWORD PTR [edi+0x28]
   18713:	call   DWORD PTR [edi+0x20]
   18716:	mov    DWORD PTR [esi+0x34],eax
   18719:	test   eax,eax
   1871b:	jne    0x18723
   1871d:	inc    eax
   1871e:	jmp    0x187c5
   18723:	xor    eax,eax
   18725:	cmp    DWORD PTR [esi+0x28],eax
   18728:	jne    0x1873b
   1872a:	mov    ecx,DWORD PTR [esi+0x24]
   1872d:	xor    edx,edx
   1872f:	inc    edx
   18730:	shl    edx,cl
   18732:	mov    DWORD PTR [esi+0x30],eax
   18735:	mov    DWORD PTR [esi+0x2c],eax
   18738:	mov    DWORD PTR [esi+0x28],edx
   1873b:	sub    ebx,DWORD PTR [edi+0x10]
   1873e:	mov    eax,DWORD PTR [esi+0x28]
   18741:	cmp    ebx,eax
   18743:	jb     0x1875d
   18745:	mov    ecx,DWORD PTR [edi+0xc]
   18748:	push   eax
   18749:	sub    ecx,eax
   1874b:	push   ecx
   1874c:	push   DWORD PTR [esi+0x34]
   1874f:	call   0x1a7b6
   18754:	add    esp,0xc
   18757:	and    DWORD PTR [esi+0x30],0x0
   1875b:	jmp    0x1879e
   1875d:	sub    eax,DWORD PTR [esi+0x30]
   18760:	mov    DWORD PTR [ebp-0x4],eax
   18763:	cmp    eax,ebx
   18765:	jbe    0x1876a
   18767:	mov    DWORD PTR [ebp-0x4],ebx
   1876a:	mov    eax,DWORD PTR [edi+0xc]
   1876d:	push   DWORD PTR [ebp-0x4]
   18770:	sub    eax,ebx
   18772:	push   eax
   18773:	mov    eax,DWORD PTR [esi+0x34]
   18776:	add    eax,DWORD PTR [esi+0x30]
   18779:	push   eax
   1877a:	call   0x1a7b6
   1877f:	mov    eax,DWORD PTR [ebp-0x4]
   18782:	add    esp,0xc
   18785:	sub    ebx,eax
   18787:	je     0x187a6
   18789:	mov    eax,DWORD PTR [edi+0xc]
   1878c:	push   ebx
   1878d:	sub    eax,ebx
   1878f:	push   eax
   18790:	push   DWORD PTR [esi+0x34]
   18793:	call   0x1a7b6
   18798:	add    esp,0xc
   1879b:	mov    DWORD PTR [esi+0x30],ebx
   1879e:	mov    eax,DWORD PTR [esi+0x28]
   187a1:	mov    DWORD PTR [esi+0x2c],eax
   187a4:	jmp    0x187c3
   187a6:	add    DWORD PTR [esi+0x30],eax
   187a9:	mov    ecx,DWORD PTR [esi+0x30]
   187ac:	mov    edx,DWORD PTR [esi+0x28]
   187af:	cmp    ecx,edx
   187b1:	jne    0x187b7
   187b3:	and    DWORD PTR [esi+0x30],0x0
   187b7:	mov    ecx,DWORD PTR [esi+0x2c]
   187ba:	cmp    ecx,edx
   187bc:	jae    0x187c3
   187be:	add    ecx,eax
   187c0:	mov    DWORD PTR [esi+0x2c],ecx
   187c3:	xor    eax,eax
   187c5:	pop    esi
   187c6:	pop    ebx
   187c7:	leave  
   187c8:	ret    
   187c9:	int3   
   187ca:	int3   
   187cb:	int3   
   187cc:	int3   
   187cd:	int3   
   187ce:	mov    edi,edi
   187d0:	push   ebp
   187d1:	mov    ebp,esp
   187d3:	mov    edx,DWORD PTR [ebp+0x8]
   187d6:	sub    esp,0x2c
   187d9:	push   ebx
   187da:	xor    eax,eax
   187dc:	push   esi
   187dd:	push   edi
   187de:	cmp    edx,eax
   187e0:	je     0x18830
   187e2:	mov    esi,DWORD PTR [edx+0x1c]
   187e5:	cmp    esi,eax
   187e7:	je     0x18830
   187e9:	cmp    DWORD PTR [edx+0xc],eax
   187ec:	je     0x18830
   187ee:	cmp    DWORD PTR [edx],eax
   187f0:	jne    0x187f7
   187f2:	cmp    DWORD PTR [edx+0x4],eax
   187f5:	jne    0x18830
   187f7:	cmp    DWORD PTR [esi],0xb
   187fa:	jne    0x18802
   187fc:	mov    DWORD PTR [esi],0xc
   18802:	mov    eax,DWORD PTR [edx+0xc]
   18805:	mov    ecx,DWORD PTR [edx+0x10]
   18808:	and    DWORD PTR [ebp-0x24],0x0
   1880c:	mov    ebx,DWORD PTR [esi+0x38]
   1880f:	mov    edi,DWORD PTR [esi+0x3c]
   18812:	mov    DWORD PTR [ebp-0x18],eax
   18815:	mov    eax,DWORD PTR [edx]
   18817:	mov    DWORD PTR [ebp-0x4],eax
   1881a:	mov    eax,DWORD PTR [edx+0x4]
   1881d:	mov    DWORD PTR [ebp-0x8],eax
   18820:	mov    DWORD PTR [ebp-0x2c],eax
   18823:	mov    eax,DWORD PTR [esi]
   18825:	mov    DWORD PTR [ebp-0x10],ecx
   18828:	mov    DWORD PTR [ebp-0x1c],ecx
   1882b:	cmp    eax,0x1c
   1882e:	jbe    0x1883d
   18830:	push   0xfffffffe
   18832:	pop    eax
   18833:	pop    edi
   18834:	pop    esi
   18835:	pop    ebx
   18836:	leave  
   18837:	ret    0x8
   1883a:	mov    edx,DWORD PTR [ebp+0x8]
   1883d:	jmp    DWORD PTR [eax*4+0x19972]
   18844:	mov    eax,DWORD PTR [esi+0x8]
   18847:	test   eax,eax
   18849:	jne    0x18875
   1884b:	mov    DWORD PTR [esi],0xc
   18851:	jmp    0x19843
   18856:	cmp    DWORD PTR [ebp-0x8],0x0
   1885a:	je     0x19891
   18860:	mov    ecx,DWORD PTR [ebp-0x4]
   18863:	movzx  edx,BYTE PTR [ecx]
   18866:	dec    DWORD PTR [ebp-0x8]
   18869:	mov    ecx,edi
   1886b:	shl    edx,cl
   1886d:	add    ebx,edx
   1886f:	inc    DWORD PTR [ebp-0x4]
   18872:	add    edi,0x8
   18875:	cmp    edi,0x10
   18878:	jb     0x18856
   1887a:	test   al,0x2
   1887c:	je     0x188b9
   1887e:	cmp    ebx,0x8b1f
   18884:	jne    0x188b9
   18886:	xor    edi,edi
   18888:	push   edi
   18889:	push   edi
   1888a:	push   edi
   1888b:	call   0x1a6f4
   18890:	mov    DWORD PTR [esi+0x18],eax
   18893:	push   0x2
   18895:	lea    eax,[ebp-0x14]
   18898:	push   eax
   18899:	mov    BYTE PTR [ebp-0x14],0x1f
   1889d:	mov    BYTE PTR [ebp-0x13],0x8b
   188a1:	push   DWORD PTR [esi+0x18]
   188a4:	call   0x1a6f4
   188a9:	mov    DWORD PTR [esi+0x18],eax
   188ac:	xor    ebx,ebx
   188ae:	mov    DWORD PTR [esi],0x1
   188b4:	jmp    0x19843
   188b9:	mov    eax,DWORD PTR [esi+0x20]
   188bc:	and    DWORD PTR [esi+0x10],0x0
   188c0:	test   eax,eax
   188c2:	je     0x188c8
   188c4:	or     DWORD PTR [eax+0x30],0xffffffff
   188c8:	test   BYTE PTR [esi+0x8],0x1
   188cc:	je     0x18952
   188d2:	movzx  eax,bl
   188d5:	shl    eax,0x8
   188d8:	mov    ecx,ebx
   188da:	shr    ecx,0x8
   188dd:	add    eax,ecx
   188df:	push   0x1f
   188e1:	xor    edx,edx
   188e3:	pop    ecx
   188e4:	div    ecx
   188e6:	test   edx,edx
   188e8:	jne    0x18952
   188ea:	mov    eax,ebx
   188ec:	and    al,0xf
   188ee:	cmp    al,0x8
   188f0:	je     0x18901
   188f2:	mov    eax,DWORD PTR [ebp+0x8]
   188f5:	mov    DWORD PTR [eax+0x18],0x1b8a0
   188fc:	jmp    0x1983d
   18901:	shr    ebx,0x4
   18904:	mov    ecx,ebx
   18906:	and    ecx,0xf
   18909:	add    ecx,0x8
   1890c:	sub    edi,0x4
   1890f:	cmp    ecx,DWORD PTR [esi+0x24]
   18912:	jbe    0x18923
   18914:	mov    eax,DWORD PTR [ebp+0x8]
   18917:	mov    DWORD PTR [eax+0x18],0x1b88c
   1891e:	jmp    0x1983d
   18923:	xor    eax,eax
   18925:	xor    edi,edi
   18927:	inc    eax
   18928:	push   edi
   18929:	shl    eax,cl
   1892b:	push   edi
   1892c:	push   edi
   1892d:	mov    DWORD PTR [esi+0x14],eax
   18930:	call   0x1a252
   18935:	mov    ecx,DWORD PTR [ebp+0x8]
   18938:	shr    ebx,0x8
   1893b:	not    ebx
   1893d:	and    ebx,0x2
   18940:	or     ebx,0x9
   18943:	mov    DWORD PTR [esi+0x18],eax
   18946:	mov    DWORD PTR [ecx+0x30],eax
   18949:	mov    DWORD PTR [esi],ebx
   1894b:	xor    ebx,ebx
   1894d:	jmp    0x19843
   18952:	mov    eax,DWORD PTR [ebp+0x8]
   18955:	mov    DWORD PTR [eax+0x18],0x1b874
   1895c:	jmp    0x1983d
   18961:	cmp    edi,0x10
   18964:	jae    0x1898d
   18966:	cmp    DWORD PTR [ebp-0x8],0x0
   1896a:	je     0x19891
   18970:	mov    eax,DWORD PTR [ebp-0x4]
   18973:	movzx  eax,BYTE PTR [eax]
   18976:	dec    DWORD PTR [ebp-0x8]
   18979:	mov    ecx,edi
   1897b:	shl    eax,cl
   1897d:	add    edi,0x8
   18980:	add    ebx,eax
   18982:	inc    DWORD PTR [ebp-0x4]
   18985:	cmp    edi,0x10
   18988:	jb     0x18966
   1898a:	mov    edx,DWORD PTR [ebp+0x8]
   1898d:	mov    DWORD PTR [esi+0x10],ebx
   18990:	cmp    bl,0x8
   18993:	je     0x189a1
   18995:	mov    DWORD PTR [edx+0x18],0x1b8a0
   1899c:	jmp    0x1983d
   189a1:	test   ebx,0xe000
   189a7:	je     0x189b5
   189a9:	mov    DWORD PTR [edx+0x18],0x1b85a
   189b0:	jmp    0x1983d
   189b5:	mov    eax,DWORD PTR [esi+0x20]
   189b8:	test   eax,eax
   189ba:	je     0x189c6
   189bc:	mov    ecx,ebx
   189be:	shr    ecx,0x8
   189c1:	and    ecx,0x1
   189c4:	mov    DWORD PTR [eax],ecx
   189c6:	test   DWORD PTR [esi+0x10],0x200
   189cd:	je     0x189ec
   189cf:	mov    BYTE PTR [ebp-0x14],bl
   189d2:	push   0x2
   189d4:	lea    eax,[ebp-0x14]
   189d7:	shr    ebx,0x8
   189da:	push   eax
   189db:	mov    BYTE PTR [ebp-0x13],bl
   189de:	push   DWORD PTR [esi+0x18]
   189e1:	call   0x1a6f4
   189e6:	mov    edx,DWORD PTR [ebp+0x8]
   189e9:	mov    DWORD PTR [esi+0x18],eax
   189ec:	xor    ebx,ebx
   189ee:	xor    edi,edi
   189f0:	mov    DWORD PTR [esi],0x2
   189f6:	cmp    edi,0x20
   189f9:	jae    0x18a22
   189fb:	cmp    DWORD PTR [ebp-0x8],0x0
   189ff:	je     0x19891
   18a05:	mov    eax,DWORD PTR [ebp-0x4]
   18a08:	movzx  eax,BYTE PTR [eax]
   18a0b:	dec    DWORD PTR [ebp-0x8]
   18a0e:	mov    ecx,edi
   18a10:	shl    eax,cl
   18a12:	add    edi,0x8
   18a15:	add    ebx,eax
   18a17:	inc    DWORD PTR [ebp-0x4]
   18a1a:	cmp    edi,0x20
   18a1d:	jb     0x189fb
   18a1f:	mov    edx,DWORD PTR [ebp+0x8]
   18a22:	mov    eax,DWORD PTR [esi+0x20]
   18a25:	test   eax,eax
   18a27:	je     0x18a2c
   18a29:	mov    DWORD PTR [eax+0x4],ebx
   18a2c:	test   DWORD PTR [esi+0x10],0x200
   18a33:	je     0x18a62
   18a35:	mov    eax,ebx
   18a37:	shr    eax,0x8
   18a3a:	mov    BYTE PTR [ebp-0x13],al
   18a3d:	mov    eax,ebx
   18a3f:	shr    eax,0x10
   18a42:	mov    BYTE PTR [ebp-0x12],al
   18a45:	mov    BYTE PTR [ebp-0x14],bl
   18a48:	push   0x4
   18a4a:	lea    eax,[ebp-0x14]
   18a4d:	shr    ebx,0x18
   18a50:	push   eax
   18a51:	mov    BYTE PTR [ebp-0x11],bl
   18a54:	push   DWORD PTR [esi+0x18]
   18a57:	call   0x1a6f4
   18a5c:	mov    edx,DWORD PTR [ebp+0x8]
   18a5f:	mov    DWORD PTR [esi+0x18],eax
   18a62:	xor    ebx,ebx
   18a64:	xor    edi,edi
   18a66:	mov    DWORD PTR [esi],0x3
   18a6c:	cmp    edi,0x10
   18a6f:	jae    0x18a98
   18a71:	cmp    DWORD PTR [ebp-0x8],0x0
   18a75:	je     0x19891
   18a7b:	mov    eax,DWORD PTR [ebp-0x4]
   18a7e:	movzx  eax,BYTE PTR [eax]
   18a81:	dec    DWORD PTR [ebp-0x8]
   18a84:	mov    ecx,edi
   18a86:	shl    eax,cl
   18a88:	add    edi,0x8
   18a8b:	add    ebx,eax
   18a8d:	inc    DWORD PTR [ebp-0x4]
   18a90:	cmp    edi,0x10
   18a93:	jb     0x18a71
   18a95:	mov    edx,DWORD PTR [ebp+0x8]
   18a98:	mov    eax,DWORD PTR [esi+0x20]
   18a9b:	test   eax,eax
   18a9d:	je     0x18ab5
   18a9f:	mov    ecx,ebx
   18aa1:	and    ecx,0xff
   18aa7:	mov    DWORD PTR [eax+0x8],ecx
   18aaa:	mov    ecx,DWORD PTR [esi+0x20]
   18aad:	mov    eax,ebx
   18aaf:	shr    eax,0x8
   18ab2:	mov    DWORD PTR [ecx+0xc],eax
   18ab5:	test   DWORD PTR [esi+0x10],0x200
   18abc:	je     0x18adb
   18abe:	mov    BYTE PTR [ebp-0x14],bl
   18ac1:	push   0x2
   18ac3:	lea    eax,[ebp-0x14]
   18ac6:	shr    ebx,0x8
   18ac9:	push   eax
   18aca:	mov    BYTE PTR [ebp-0x13],bl
   18acd:	push   DWORD PTR [esi+0x18]
   18ad0:	call   0x1a6f4
   18ad5:	mov    edx,DWORD PTR [ebp+0x8]
   18ad8:	mov    DWORD PTR [esi+0x18],eax
   18adb:	xor    ebx,ebx
   18add:	xor    edi,edi
   18adf:	mov    DWORD PTR [esi],0x4
   18ae5:	test   DWORD PTR [esi+0x10],0x400
   18aec:	je     0x18b53
   18aee:	cmp    edi,0x10
   18af1:	jae    0x18b1a
   18af3:	cmp    DWORD PTR [ebp-0x8],0x0
   18af7:	je     0x19891
   18afd:	mov    eax,DWORD PTR [ebp-0x4]
   18b00:	movzx  eax,BYTE PTR [eax]
   18b03:	dec    DWORD PTR [ebp-0x8]
   18b06:	mov    ecx,edi
   18b08:	shl    eax,cl
   18b0a:	add    edi,0x8
   18b0d:	add    ebx,eax
   18b0f:	inc    DWORD PTR [ebp-0x4]
   18b12:	cmp    edi,0x10
   18b15:	jb     0x18af3
   18b17:	mov    edx,DWORD PTR [ebp+0x8]
   18b1a:	mov    eax,DWORD PTR [esi+0x20]
   18b1d:	mov    DWORD PTR [esi+0x40],ebx
   18b20:	test   eax,eax
   18b22:	je     0x18b27
   18b24:	mov    DWORD PTR [eax+0x14],ebx
   18b27:	test   DWORD PTR [esi+0x10],0x200
   18b2e:	je     0x18b4d
   18b30:	mov    BYTE PTR [ebp-0x14],bl
   18b33:	push   0x2
   18b35:	lea    eax,[ebp-0x14]
   18b38:	shr    ebx,0x8
   18b3b:	push   eax
   18b3c:	mov    BYTE PTR [ebp-0x13],bl
   18b3f:	push   DWORD PTR [esi+0x18]
   18b42:	call   0x1a6f4
   18b47:	mov    edx,DWORD PTR [ebp+0x8]
   18b4a:	mov    DWORD PTR [esi+0x18],eax
   18b4d:	xor    ebx,ebx
   18b4f:	xor    edi,edi
   18b51:	jmp    0x18b5e
   18b53:	mov    eax,DWORD PTR [esi+0x20]
   18b56:	test   eax,eax
   18b58:	je     0x18b5e
   18b5a:	and    DWORD PTR [eax+0x10],0x0
   18b5e:	mov    DWORD PTR [esi],0x5
   18b64:	test   DWORD PTR [esi+0x10],0x400
   18b6b:	je     0x18bf5
   18b71:	mov    edx,DWORD PTR [esi+0x40]
   18b74:	mov    eax,DWORD PTR [ebp-0x8]
   18b77:	mov    DWORD PTR [ebp-0xc],edx
   18b7a:	cmp    edx,eax
   18b7c:	jbe    0x18b81
   18b7e:	mov    DWORD PTR [ebp-0xc],eax
   18b81:	cmp    DWORD PTR [ebp-0xc],0x0
   18b85:	je     0x18be8
   18b87:	mov    ecx,DWORD PTR [esi+0x20]
   18b8a:	test   ecx,ecx
   18b8c:	je     0x18bc2
   18b8e:	mov    eax,DWORD PTR [ecx+0x10]
   18b91:	mov    DWORD PTR [ebp-0x28],eax
   18b94:	test   eax,eax
   18b96:	je     0x18bc2
   18b98:	mov    eax,DWORD PTR [ecx+0x14]
   18b9b:	mov    ecx,DWORD PTR [ecx+0x18]
   18b9e:	sub    eax,edx
   18ba0:	mov    edx,DWORD PTR [ebp-0xc]
   18ba3:	add    edx,eax
   18ba5:	cmp    edx,ecx
   18ba7:	jbe    0x18bad
   18ba9:	sub    ecx,eax
   18bab:	jmp    0x18bb0
   18bad:	mov    ecx,DWORD PTR [ebp-0xc]
   18bb0:	push   ecx
   18bb1:	mov    ecx,DWORD PTR [ebp-0x28]
   18bb4:	push   DWORD PTR [ebp-0x4]
   18bb7:	add    ecx,eax
   18bb9:	push   ecx
   18bba:	call   0x1a7b6
   18bbf:	add    esp,0xc
   18bc2:	test   DWORD PTR [esi+0x10],0x200
   18bc9:	je     0x18bdc
   18bcb:	push   DWORD PTR [ebp-0xc]
   18bce:	push   DWORD PTR [ebp-0x4]
   18bd1:	push   DWORD PTR [esi+0x18]
   18bd4:	call   0x1a6f4
   18bd9:	mov    DWORD PTR [esi+0x18],eax
   18bdc:	mov    eax,DWORD PTR [ebp-0xc]
   18bdf:	sub    DWORD PTR [ebp-0x8],eax
   18be2:	add    DWORD PTR [ebp-0x4],eax
   18be5:	sub    DWORD PTR [esi+0x40],eax
   18be8:	cmp    DWORD PTR [esi+0x40],0x0
   18bec:	jne    0x19891
   18bf2:	mov    edx,DWORD PTR [ebp+0x8]
   18bf5:	and    DWORD PTR [esi+0x40],0x0
   18bf9:	mov    DWORD PTR [esi],0x6
   18bff:	test   DWORD PTR [esi+0x10],0x800
   18c06:	je     0x18c83
   18c08:	cmp    DWORD PTR [ebp-0x8],0x0
   18c0c:	je     0x19891
   18c12:	xor    ecx,ecx
   18c14:	mov    eax,DWORD PTR [ebp-0x4]
   18c17:	movzx  eax,BYTE PTR [ecx+eax*1]
   18c1b:	inc    ecx
   18c1c:	mov    DWORD PTR [ebp-0xc],ecx
   18c1f:	mov    ecx,DWORD PTR [esi+0x20]
   18c22:	mov    DWORD PTR [ebp-0x20],eax
   18c25:	test   ecx,ecx
   18c27:	je     0x18c44
   18c29:	mov    edx,DWORD PTR [ecx+0x1c]
   18c2c:	mov    DWORD PTR [ebp-0x28],edx
   18c2f:	test   edx,edx
   18c31:	je     0x18c44
   18c33:	mov    edx,DWORD PTR [esi+0x40]
   18c36:	cmp    edx,DWORD PTR [ecx+0x20]
   18c39:	jae    0x18c44
   18c3b:	mov    ecx,DWORD PTR [ebp-0x28]
   18c3e:	mov    BYTE PTR [ecx+edx*1],al
   18c41:	inc    DWORD PTR [esi+0x40]
   18c44:	test   eax,eax
   18c46:	je     0x18c50
   18c48:	mov    ecx,DWORD PTR [ebp-0xc]
   18c4b:	cmp    ecx,DWORD PTR [ebp-0x8]
   18c4e:	jb     0x18c14
   18c50:	test   DWORD PTR [esi+0x10],0x200
   18c57:	je     0x18c6d
   18c59:	push   DWORD PTR [ebp-0xc]
   18c5c:	push   DWORD PTR [ebp-0x4]
   18c5f:	push   DWORD PTR [esi+0x18]
   18c62:	call   0x1a6f4
   18c67:	mov    DWORD PTR [esi+0x18],eax
   18c6a:	mov    eax,DWORD PTR [ebp-0x20]
   18c6d:	mov    ecx,DWORD PTR [ebp-0xc]
   18c70:	sub    DWORD PTR [ebp-0x8],ecx
   18c73:	add    DWORD PTR [ebp-0x4],ecx
   18c76:	test   eax,eax
   18c78:	jne    0x19891
   18c7e:	mov    edx,DWORD PTR [ebp+0x8]
   18c81:	jmp    0x18c8e
   18c83:	mov    eax,DWORD PTR [esi+0x20]
   18c86:	test   eax,eax
   18c88:	je     0x18c8e
   18c8a:	and    DWORD PTR [eax+0x1c],0x0
   18c8e:	and    DWORD PTR [esi+0x40],0x0
   18c92:	mov    DWORD PTR [esi],0x7
   18c98:	test   DWORD PTR [esi+0x10],0x1000
   18c9f:	je     0x18d1c
   18ca1:	cmp    DWORD PTR [ebp-0x8],0x0
   18ca5:	je     0x19891
   18cab:	xor    ecx,ecx
   18cad:	mov    eax,DWORD PTR [ebp-0x4]
   18cb0:	movzx  eax,BYTE PTR [ecx+eax*1]
   18cb4:	inc    ecx
   18cb5:	mov    DWORD PTR [ebp-0xc],ecx
   18cb8:	mov    ecx,DWORD PTR [esi+0x20]
   18cbb:	mov    DWORD PTR [ebp-0x20],eax
   18cbe:	test   ecx,ecx
   18cc0:	je     0x18cdd
   18cc2:	mov    edx,DWORD PTR [ecx+0x24]
   18cc5:	mov    DWORD PTR [ebp-0x28],edx
   18cc8:	test   edx,edx
   18cca:	je     0x18cdd
   18ccc:	mov    edx,DWORD PTR [esi+0x40]
   18ccf:	cmp    edx,DWORD PTR [ecx+0x28]
   18cd2:	jae    0x18cdd
   18cd4:	mov    ecx,DWORD PTR [ebp-0x28]
   18cd7:	mov    BYTE PTR [ecx+edx*1],al
   18cda:	inc    DWORD PTR [esi+0x40]
   18cdd:	test   eax,eax
   18cdf:	je     0x18ce9
   18ce1:	mov    ecx,DWORD PTR [ebp-0xc]
   18ce4:	cmp    ecx,DWORD PTR [ebp-0x8]
   18ce7:	jb     0x18cad
   18ce9:	test   DWORD PTR [esi+0x10],0x200
   18cf0:	je     0x18d06
   18cf2:	push   DWORD PTR [ebp-0xc]
   18cf5:	push   DWORD PTR [ebp-0x4]
   18cf8:	push   DWORD PTR [esi+0x18]
   18cfb:	call   0x1a6f4
   18d00:	mov    DWORD PTR [esi+0x18],eax
   18d03:	mov    eax,DWORD PTR [ebp-0x20]
   18d06:	mov    ecx,DWORD PTR [ebp-0xc]
   18d09:	sub    DWORD PTR [ebp-0x8],ecx
   18d0c:	add    DWORD PTR [ebp-0x4],ecx
   18d0f:	test   eax,eax
   18d11:	jne    0x19891
   18d17:	mov    edx,DWORD PTR [ebp+0x8]
   18d1a:	jmp    0x18d27
   18d1c:	mov    eax,DWORD PTR [esi+0x20]
   18d1f:	test   eax,eax
   18d21:	je     0x18d27
   18d23:	and    DWORD PTR [eax+0x24],0x0
   18d27:	mov    DWORD PTR [esi],0x8
   18d2d:	test   DWORD PTR [esi+0x10],0x200
   18d34:	je     0x18d7a
   18d36:	cmp    edi,0x10
   18d39:	jae    0x18d62
   18d3b:	cmp    DWORD PTR [ebp-0x8],0x0
   18d3f:	je     0x19891
   18d45:	mov    eax,DWORD PTR [ebp-0x4]
   18d48:	movzx  eax,BYTE PTR [eax]
   18d4b:	dec    DWORD PTR [ebp-0x8]
   18d4e:	mov    ecx,edi
   18d50:	shl    eax,cl
   18d52:	add    edi,0x8
   18d55:	add    ebx,eax
   18d57:	inc    DWORD PTR [ebp-0x4]
   18d5a:	cmp    edi,0x10
   18d5d:	jb     0x18d3b
   18d5f:	mov    edx,DWORD PTR [ebp+0x8]
   18d62:	movzx  eax,WORD PTR [esi+0x18]
   18d66:	cmp    ebx,eax
   18d68:	je     0x18d76
   18d6a:	mov    DWORD PTR [edx+0x18],0x1b846
   18d71:	jmp    0x1983d
   18d76:	xor    ebx,ebx
   18d78:	xor    edi,edi
   18d7a:	mov    eax,DWORD PTR [esi+0x20]
   18d7d:	test   eax,eax
   18d7f:	je     0x18d95
   18d81:	mov    edx,DWORD PTR [esi+0x10]
   18d84:	xor    ecx,ecx
   18d86:	inc    ecx
   18d87:	sar    edx,0x9
   18d8a:	and    edx,ecx
   18d8c:	mov    DWORD PTR [eax+0x2c],edx
   18d8f:	mov    eax,DWORD PTR [esi+0x20]
   18d92:	mov    DWORD PTR [eax+0x30],ecx
   18d95:	xor    eax,eax
   18d97:	push   eax
   18d98:	push   eax
   18d99:	push   eax
   18d9a:	call   0x1a6f4
   18d9f:	mov    ecx,DWORD PTR [ebp+0x8]
   18da2:	mov    DWORD PTR [esi+0x18],eax
   18da5:	mov    DWORD PTR [ecx+0x30],eax
   18da8:	jmp    0x194a6
   18dad:	cmp    edi,0x20
   18db0:	jae    0x18dd9
   18db2:	cmp    DWORD PTR [ebp-0x8],0x0
   18db6:	je     0x19891
   18dbc:	mov    eax,DWORD PTR [ebp-0x4]
   18dbf:	movzx  eax,BYTE PTR [eax]
   18dc2:	dec    DWORD PTR [ebp-0x8]
   18dc5:	mov    ecx,edi
   18dc7:	shl    eax,cl
   18dc9:	add    edi,0x8
   18dcc:	add    ebx,eax
   18dce:	inc    DWORD PTR [ebp-0x4]
   18dd1:	cmp    edi,0x20
   18dd4:	jb     0x18db2
   18dd6:	mov    edx,DWORD PTR [ebp+0x8]
   18dd9:	mov    ecx,ebx
   18ddb:	mov    eax,0xff00
   18de0:	and    ecx,eax
   18de2:	mov    edi,ebx
   18de4:	shl    edi,0x10
   18de7:	add    ecx,edi
   18de9:	mov    edi,ebx
   18deb:	shr    edi,0x8
   18dee:	and    edi,eax
   18df0:	shl    ecx,0x8
   18df3:	shr    ebx,0x18
   18df6:	add    ecx,edi
   18df8:	lea    eax,[ecx+ebx*1]
   18dfb:	mov    DWORD PTR [esi+0x18],eax
   18dfe:	mov    DWORD PTR [edx+0x30],eax
   18e01:	xor    ebx,ebx
   18e03:	xor    edi,edi
   18e05:	mov    DWORD PTR [esi],0xa
   18e0b:	cmp    DWORD PTR [esi+0xc],0x0
   18e0f:	je     0x19853
   18e15:	xor    eax,eax
   18e17:	push   eax
   18e18:	push   eax
   18e19:	push   eax
   18e1a:	call   0x1a252
   18e1f:	mov    ecx,DWORD PTR [ebp+0x8]
   18e22:	mov    DWORD PTR [esi+0x18],eax
   18e25:	mov    DWORD PTR [ecx+0x30],eax
   18e28:	mov    DWORD PTR [esi],0xb
   18e2e:	cmp    DWORD PTR [ebp+0xc],0x5
   18e32:	je     0x19891
   18e38:	mov    edx,DWORD PTR [ebp+0x8]
   18e3b:	cmp    DWORD PTR [esi+0x4],0x0
   18e3f:	je     0x18e55
   18e41:	mov    ecx,edi
   18e43:	and    ecx,0x7
   18e46:	shr    ebx,cl
   18e48:	sub    edi,ecx
   18e4a:	mov    DWORD PTR [esi],0x18
   18e50:	jmp    0x19843
   18e55:	cmp    edi,0x3
   18e58:	jae    0x18e81
   18e5a:	cmp    DWORD PTR [ebp-0x8],0x0
   18e5e:	je     0x19891
   18e64:	mov    eax,DWORD PTR [ebp-0x4]
   18e67:	movzx  eax,BYTE PTR [eax]
   18e6a:	dec    DWORD PTR [ebp-0x8]
   18e6d:	mov    ecx,edi
   18e6f:	shl    eax,cl
   18e71:	add    edi,0x8
   18e74:	add    ebx,eax
   18e76:	inc    DWORD PTR [ebp-0x4]
   18e79:	cmp    edi,0x3
   18e7c:	jb     0x18e5a
   18e7e:	mov    edx,DWORD PTR [ebp+0x8]
   18e81:	mov    eax,ebx
   18e83:	and    eax,0x1
   18e86:	shr    ebx,1
   18e88:	mov    DWORD PTR [esi+0x4],eax
   18e8b:	mov    eax,ebx
   18e8d:	and    eax,0x3
   18e90:	dec    edi
   18e91:	sub    eax,0x0
   18e94:	je     0x18eda
   18e96:	dec    eax
   18e97:	je     0x18eb6
   18e99:	dec    eax
   18e9a:	je     0x18eae
   18e9c:	dec    eax
   18e9d:	jne    0x18ee0
   18e9f:	mov    DWORD PTR [edx+0x18],0x1b832
   18ea6:	mov    DWORD PTR [esi],0x1b
   18eac:	jmp    0x18ee0
   18eae:	mov    DWORD PTR [esi],0xf
   18eb4:	jmp    0x18ee0
   18eb6:	mov    DWORD PTR [esi+0x4c],0x6d2d8
   18ebd:	mov    DWORD PTR [esi+0x54],0x9
   18ec4:	mov    DWORD PTR [esi+0x50],0x6dad8
   18ecb:	mov    DWORD PTR [esi+0x58],0x5
   18ed2:	mov    DWORD PTR [esi],0x12
   18ed8:	jmp    0x18ee0
   18eda:	mov    DWORD PTR [esi],0xd
   18ee0:	shr    ebx,0x2
   18ee3:	dec    edi
   18ee4:	dec    edi
   18ee5:	jmp    0x19843
   18eea:	mov    ecx,edi
   18eec:	and    ecx,0x7
   18eef:	sub    edi,ecx
   18ef1:	shr    ebx,cl
   18ef3:	cmp    edi,0x20
   18ef6:	jae    0x18f1f
   18ef8:	cmp    DWORD PTR [ebp-0x8],0x0
   18efc:	je     0x19891
   18f02:	mov    eax,DWORD PTR [ebp-0x4]
   18f05:	movzx  eax,BYTE PTR [eax]
   18f08:	dec    DWORD PTR [ebp-0x8]
   18f0b:	mov    ecx,edi
   18f0d:	shl    eax,cl
   18f0f:	add    edi,0x8
   18f12:	add    ebx,eax
   18f14:	inc    DWORD PTR [ebp-0x4]
   18f17:	cmp    edi,0x20
   18f1a:	jb     0x18ef8
   18f1c:	mov    edx,DWORD PTR [ebp+0x8]
   18f1f:	mov    ecx,ebx
   18f21:	mov    eax,ebx
   18f23:	not    ecx
   18f25:	and    eax,0xffff
   18f2a:	shr    ecx,0x10
   18f2d:	cmp    eax,ecx
   18f2f:	je     0x18f3d
   18f31:	mov    DWORD PTR [edx+0x18],0x1b814
   18f38:	jmp    0x1983d
   18f3d:	xor    ebx,ebx
   18f3f:	mov    DWORD PTR [esi+0x40],eax
   18f42:	xor    edi,edi
   18f44:	mov    DWORD PTR [esi],0xe
   18f4a:	mov    eax,DWORD PTR [esi+0x40]
   18f4d:	mov    DWORD PTR [ebp-0xc],eax
   18f50:	test   eax,eax
   18f52:	je     0x194a6
   18f58:	mov    eax,DWORD PTR [ebp-0x8]
   18f5b:	cmp    DWORD PTR [ebp-0xc],eax
   18f5e:	jbe    0x18f63
   18f60:	mov    DWORD PTR [ebp-0xc],eax
   18f63:	mov    eax,DWORD PTR [ebp-0x10]
   18f66:	cmp    DWORD PTR [ebp-0xc],eax
   18f69:	jbe    0x18f6e
   18f6b:	mov    DWORD PTR [ebp-0xc],eax
   18f6e:	cmp    DWORD PTR [ebp-0xc],0x0
   18f72:	je     0x19891
   18f78:	push   DWORD PTR [ebp-0xc]
   18f7b:	push   DWORD PTR [ebp-0x4]
   18f7e:	push   DWORD PTR [ebp-0x18]
   18f81:	call   0x1a7b6
   18f86:	mov    eax,DWORD PTR [ebp-0xc]
   18f89:	sub    DWORD PTR [ebp-0x8],eax
   18f8c:	add    DWORD PTR [ebp-0x4],eax
   18f8f:	sub    DWORD PTR [ebp-0x10],eax
   18f92:	add    DWORD PTR [ebp-0x18],eax
   18f95:	add    esp,0xc
   18f98:	sub    DWORD PTR [esi+0x40],eax
   18f9b:	jmp    0x19843
   18fa0:	cmp    edi,0xe
   18fa3:	jae    0x18fcc
   18fa5:	cmp    DWORD PTR [ebp-0x8],0x0
   18fa9:	je     0x19891
   18faf:	mov    eax,DWORD PTR [ebp-0x4]
   18fb2:	movzx  eax,BYTE PTR [eax]
   18fb5:	dec    DWORD PTR [ebp-0x8]
   18fb8:	mov    ecx,edi
   18fba:	shl    eax,cl
   18fbc:	add    edi,0x8
   18fbf:	add    ebx,eax
   18fc1:	inc    DWORD PTR [ebp-0x4]
   18fc4:	cmp    edi,0xe
   18fc7:	jb     0x18fa5
   18fc9:	mov    edx,DWORD PTR [ebp+0x8]
   18fcc:	mov    eax,ebx
   18fce:	and    eax,0x1f
   18fd1:	add    eax,0x101
   18fd6:	mov    DWORD PTR [esi+0x60],eax
   18fd9:	shr    ebx,0x5
   18fdc:	mov    eax,ebx
   18fde:	and    eax,0x1f
   18fe1:	inc    eax
   18fe2:	shr    ebx,0x5
   18fe5:	mov    DWORD PTR [esi+0x64],eax
   18fe8:	mov    eax,ebx
   18fea:	and    eax,0xf
   18fed:	add    eax,0x4
   18ff0:	shr    ebx,0x4
   18ff3:	sub    edi,0xe
   18ff6:	cmp    DWORD PTR [esi+0x60],0x11e
   18ffd:	mov    DWORD PTR [esi+0x5c],eax
   19000:	ja     0x19014
   19002:	cmp    DWORD PTR [esi+0x64],0x1e
   19006:	ja     0x19014
   19008:	and    DWORD PTR [esi+0x68],0x0
   1900c:	mov    DWORD PTR [esi],0x10
   19012:	jmp    0x19062
   19014:	mov    DWORD PTR [edx+0x18],0x1b7f0
   1901b:	jmp    0x1983d
   19020:	cmp    DWORD PTR [ebp-0x8],0x0
   19024:	je     0x19891
   1902a:	mov    eax,DWORD PTR [ebp-0x4]
   1902d:	movzx  eax,BYTE PTR [eax]
   19030:	dec    DWORD PTR [ebp-0x8]
   19033:	mov    ecx,edi
   19035:	shl    eax,cl
   19037:	add    ebx,eax
   19039:	inc    DWORD PTR [ebp-0x4]
   1903c:	add    edi,0x8
   1903f:	cmp    edi,0x3
   19042:	jb     0x19020
   19044:	mov    ecx,DWORD PTR [esi+0x68]
   19047:	movzx  ecx,WORD PTR [ecx*2+0x6db58]
   1904f:	mov    eax,ebx
   19051:	and    eax,0x7
   19054:	mov    WORD PTR [esi+ecx*2+0x70],ax
   19059:	inc    DWORD PTR [esi+0x68]
   1905c:	shr    ebx,0x3
   1905f:	sub    edi,0x3
   19062:	mov    eax,DWORD PTR [esi+0x68]
   19065:	cmp    eax,DWORD PTR [esi+0x5c]
   19068:	jb     0x1903f
   1906a:	jmp    0x19081
   1906c:	mov    eax,DWORD PTR [esi+0x68]
   1906f:	movzx  eax,WORD PTR [eax*2+0x6db58]
   19077:	xor    ecx,ecx
   19079:	mov    WORD PTR [esi+eax*2+0x70],cx
   1907e:	inc    DWORD PTR [esi+0x68]
   19081:	cmp    DWORD PTR [esi+0x68],0x13
   19085:	jb     0x1906c
   19087:	lea    eax,[esi+0x530]
   1908d:	lea    ecx,[esi+0x6c]
   19090:	mov    DWORD PTR [ecx],eax
   19092:	mov    DWORD PTR [esi+0x4c],eax
   19095:	lea    edx,[esi+0x2f0]
   1909b:	push   edx
   1909c:	lea    eax,[esi+0x54]
   1909f:	push   eax
   190a0:	push   ecx
   190a1:	mov    DWORD PTR [eax],0x7
   190a7:	push   0x13
   190a9:	lea    eax,[esi+0x70]
   190ac:	push   eax
   190ad:	push   0x0
   190af:	call   0x19e4c
   190b4:	mov    DWORD PTR [ebp-0x24],eax
   190b7:	test   eax,eax
   190b9:	je     0x190ca
   190bb:	mov    eax,DWORD PTR [ebp+0x8]
   190be:	mov    DWORD PTR [eax+0x18],0x1b7d6
   190c5:	jmp    0x1983d
   190ca:	and    DWORD PTR [esi+0x68],0x0
   190ce:	mov    DWORD PTR [esi],0x11
   190d4:	jmp    0x192d0
   190d9:	cmp    DWORD PTR [ebp-0x8],0x0
   190dd:	je     0x19891
   190e3:	mov    eax,DWORD PTR [ebp-0x4]
   190e6:	movzx  eax,BYTE PTR [eax]
   190e9:	dec    DWORD PTR [ebp-0x8]
   190ec:	mov    ecx,edi
   190ee:	shl    eax,cl
   190f0:	add    ebx,eax
   190f2:	inc    DWORD PTR [ebp-0x4]
   190f5:	add    edi,0x8
   190f8:	mov    ecx,DWORD PTR [esi+0x54]
   190fb:	xor    eax,eax
   190fd:	inc    eax
   190fe:	shl    eax,cl
   19100:	mov    ecx,DWORD PTR [esi+0x4c]
   19103:	dec    eax
   19104:	and    eax,ebx
   19106:	mov    eax,DWORD PTR [ecx+eax*4]
   19109:	mov    ecx,eax
   1910b:	shr    ecx,0x8
   1910e:	movzx  ecx,cl
   19111:	mov    DWORD PTR [ebp-0x20],eax
   19114:	cmp    ecx,edi
   19116:	ja     0x190d9
   19118:	mov    ecx,eax
   1911a:	shr    ecx,0x10
   1911d:	cmp    cx,0x10
   19121:	jae    0x1916e
   19123:	mov    ecx,eax
   19125:	shr    ecx,0x8
   19128:	movzx  ecx,cl
   1912b:	jmp    0x1914f
   1912d:	cmp    DWORD PTR [ebp-0x8],0x0
   19131:	je     0x19891
   19137:	mov    ecx,DWORD PTR [ebp-0x4]
   1913a:	movzx  edx,BYTE PTR [ecx]
   1913d:	dec    DWORD PTR [ebp-0x8]
   19140:	mov    ecx,edi
   19142:	shl    edx,cl
   19144:	movzx  ecx,ah
   19147:	add    ebx,edx
   19149:	inc    DWORD PTR [ebp-0x4]
   1914c:	add    edi,0x8
   1914f:	cmp    edi,ecx
   19151:	jb     0x1912d
   19153:	movzx  ecx,ah
   19156:	mov    eax,DWORD PTR [esi+0x68]
   19159:	shr    ebx,cl
   1915b:	sub    edi,ecx
   1915d:	mov    cx,WORD PTR [ebp-0x1e]
   19161:	mov    WORD PTR [esi+eax*2+0x70],cx
   19166:	inc    DWORD PTR [esi+0x68]
   19169:	jmp    0x192d0
   1916e:	cmp    WORD PTR [ebp-0x1e],0x10
   19173:	jne    0x191cb
   19175:	movzx  eax,ah
   19178:	jmp    0x19199
   1917a:	cmp    DWORD PTR [ebp-0x8],0x0
   1917e:	je     0x19891
   19184:	mov    ecx,DWORD PTR [ebp-0x4]
   19187:	movzx  edx,BYTE PTR [ecx]
   1918a:	dec    DWORD PTR [ebp-0x8]
   1918d:	mov    ecx,edi
   1918f:	shl    edx,cl
   19191:	add    ebx,edx
   19193:	inc    DWORD PTR [ebp-0x4]
   19196:	add    edi,0x8
   19199:	lea    ecx,[eax+0x2]
   1919c:	cmp    edi,ecx
   1919e:	jb     0x1917a
   191a0:	mov    ecx,eax
   191a2:	sub    edi,eax
   191a4:	mov    eax,DWORD PTR [esi+0x68]
   191a7:	shr    ebx,cl
   191a9:	test   eax,eax
   191ab:	je     0x192e1
   191b1:	movzx  eax,WORD PTR [esi+eax*2+0x6e]
   191b6:	mov    DWORD PTR [ebp-0x20],eax
   191b9:	mov    eax,ebx
   191bb:	and    eax,0x3
   191be:	add    eax,0x3
   191c1:	shr    ebx,0x2
   191c4:	dec    edi
   191c5:	dec    edi
   191c6:	jmp    0x19250
   191cb:	cmp    WORD PTR [ebp-0x1e],0x11
   191d0:	movzx  edx,ah
   191d3:	jne    0x1922f
   191d5:	jmp    0x191f6
   191d7:	cmp    DWORD PTR [ebp-0x8],0x0
   191db:	je     0x19891
   191e1:	mov    eax,DWORD PTR [ebp-0x4]
   191e4:	movzx  eax,BYTE PTR [eax]
   191e7:	dec    DWORD PTR [ebp-0x8]
   191ea:	mov    ecx,edi
   191ec:	shl    eax,cl
   191ee:	add    ebx,eax
   191f0:	inc    DWORD PTR [ebp-0x4]
   191f3:	add    edi,0x8
   191f6:	lea    eax,[edx+0x3]
   191f9:	cmp    edi,eax
   191fb:	jb     0x191d7
   191fd:	mov    ecx,edx
   191ff:	shr    ebx,cl
   19201:	push   0xfffffffd
   19203:	mov    eax,ebx
   19205:	and    eax,0x7
   19208:	add    eax,0x3
   1920b:	shr    ebx,0x3
   1920e:	jmp    0x19247
   19210:	cmp    DWORD PTR [ebp-0x8],0x0
   19214:	je     0x19891
   1921a:	mov    eax,DWORD PTR [ebp-0x4]
   1921d:	movzx  eax,BYTE PTR [eax]
   19220:	dec    DWORD PTR [ebp-0x8]
   19223:	mov    ecx,edi
   19225:	shl    eax,cl
   19227:	add    ebx,eax
   19229:	inc    DWORD PTR [ebp-0x4]
   1922c:	add    edi,0x8
   1922f:	lea    eax,[edx+0x7]
   19232:	cmp    edi,eax
   19234:	jb     0x19210
   19236:	mov    ecx,edx
   19238:	shr    ebx,cl
   1923a:	push   0xfffffff9
   1923c:	mov    eax,ebx
   1923e:	and    eax,0x7f
   19241:	add    eax,0xb
   19244:	shr    ebx,0x7
   19247:	and    DWORD PTR [ebp-0x20],0x0
   1924b:	pop    ecx
   1924c:	sub    ecx,edx
   1924e:	add    edi,ecx
   19250:	mov    ecx,DWORD PTR [esi+0x64]
   19253:	mov    edx,DWORD PTR [esi+0x68]
   19256:	add    ecx,DWORD PTR [esi+0x60]
   19259:	add    edx,eax
   1925b:	cmp    edx,ecx
   1925d:	jbe    0x192cc
   1925f:	mov    eax,DWORD PTR [ebp+0x8]
   19262:	mov    DWORD PTR [eax+0x18],0x1b7bc
   19269:	mov    DWORD PTR [esi],0x1b
   1926f:	cmp    DWORD PTR [esi],0x1b
   19272:	je     0x19843
   19278:	lea    eax,[esi+0x530]
   1927e:	lea    ecx,[esi+0x6c]
   19281:	mov    DWORD PTR [ecx],eax
   19283:	mov    DWORD PTR [esi+0x4c],eax
   19286:	lea    edx,[esi+0x2f0]
   1928c:	push   edx
   1928d:	lea    eax,[esi+0x54]
   19290:	push   eax
   19291:	push   ecx
   19292:	push   DWORD PTR [esi+0x60]
   19295:	mov    DWORD PTR [eax],0x9
   1929b:	lea    eax,[esi+0x70]
   1929e:	push   eax
   1929f:	push   0x1
   192a1:	call   0x19e4c
   192a6:	mov    DWORD PTR [ebp-0x24],eax
   192a9:	test   eax,eax
   192ab:	je     0x192f0
   192ad:	mov    eax,DWORD PTR [ebp+0x8]
   192b0:	mov    DWORD PTR [eax+0x18],0x1b7a0
   192b7:	jmp    0x1983d
   192bc:	mov    ecx,DWORD PTR [esi+0x68]
   192bf:	mov    dx,WORD PTR [ebp-0x20]
   192c3:	dec    eax
   192c4:	mov    WORD PTR [esi+ecx*2+0x70],dx
   192c9:	inc    DWORD PTR [esi+0x68]
   192cc:	test   eax,eax
   192ce:	jne    0x192bc
   192d0:	mov    eax,DWORD PTR [esi+0x64]
   192d3:	add    eax,DWORD PTR [esi+0x60]
   192d6:	cmp    DWORD PTR [esi+0x68],eax
   192d9:	jb     0x190f8
   192df:	jmp    0x1926f
   192e1:	mov    eax,DWORD PTR [ebp+0x8]
   192e4:	mov    DWORD PTR [eax+0x18],0x1b7bc
   192eb:	jmp    0x1983d
   192f0:	lea    ecx,[esi+0x6c]
   192f3:	mov    eax,DWORD PTR [ecx]
   192f5:	mov    DWORD PTR [esi+0x50],eax
   192f8:	lea    edx,[esi+0x2f0]
   192fe:	push   edx
   192ff:	lea    eax,[esi+0x58]
   19302:	push   eax
   19303:	push   ecx
   19304:	push   DWORD PTR [esi+0x64]
   19307:	mov    DWORD PTR [eax],0x6
   1930d:	mov    eax,DWORD PTR [esi+0x60]
   19310:	lea    eax,[esi+eax*2+0x70]
   19314:	push   eax
   19315:	push   0x2
   19317:	call   0x19e4c
   1931c:	mov    DWORD PTR [ebp-0x24],eax
   1931f:	test   eax,eax
   19321:	je     0x19332
   19323:	mov    eax,DWORD PTR [ebp+0x8]
   19326:	mov    DWORD PTR [eax+0x18],0x1b78a
   1932d:	jmp    0x1983d
   19332:	mov    DWORD PTR [esi],0x12
   19338:	cmp    DWORD PTR [ebp-0x8],0x6
   1933c:	jb     0x19395
   1933e:	cmp    DWORD PTR [ebp-0x10],0x102
   19345:	jb     0x19395
   19347:	mov    eax,DWORD PTR [ebp+0x8]
   1934a:	mov    ecx,DWORD PTR [ebp-0x18]
   1934d:	push   DWORD PTR [ebp-0x1c]
   19350:	mov    DWORD PTR [eax+0xc],ecx
   19353:	mov    ecx,DWORD PTR [ebp-0x10]
   19356:	mov    DWORD PTR [eax+0x10],ecx
   19359:	mov    ecx,DWORD PTR [ebp-0x4]
   1935c:	mov    DWORD PTR [eax],ecx
   1935e:	mov    ecx,DWORD PTR [ebp-0x8]
   19361:	mov    DWORD PTR [eax+0x4],ecx
   19364:	push   eax
   19365:	mov    DWORD PTR [esi+0x38],ebx
   19368:	mov    DWORD PTR [esi+0x3c],edi
   1936b:	call   0x19a66
   19370:	mov    eax,DWORD PTR [ebp+0x8]
   19373:	mov    ecx,DWORD PTR [eax+0xc]
   19376:	mov    ebx,DWORD PTR [esi+0x38]
   19379:	mov    edi,DWORD PTR [esi+0x3c]
   1937c:	mov    DWORD PTR [ebp-0x18],ecx
   1937f:	mov    ecx,DWORD PTR [eax+0x10]
   19382:	mov    DWORD PTR [ebp-0x10],ecx
   19385:	mov    ecx,DWORD PTR [eax]
   19387:	mov    eax,DWORD PTR [eax+0x4]
   1938a:	mov    DWORD PTR [ebp-0x4],ecx
   1938d:	mov    DWORD PTR [ebp-0x8],eax
   19390:	jmp    0x19843
   19395:	mov    ecx,DWORD PTR [esi+0x54]
   19398:	mov    eax,DWORD PTR [esi+0x4c]
   1939b:	xor    edx,edx
   1939d:	inc    edx
   1939e:	shl    edx,cl
   193a0:	dec    edx
   193a1:	and    edx,ebx
   193a3:	mov    eax,DWORD PTR [eax+edx*4]
   193a6:	jmp    0x193d8
   193a8:	cmp    DWORD PTR [ebp-0x8],0x0
   193ac:	je     0x19891
   193b2:	mov    eax,DWORD PTR [ebp-0x4]
   193b5:	movzx  eax,BYTE PTR [eax]
   193b8:	dec    DWORD PTR [ebp-0x8]
   193bb:	mov    ecx,edi
   193bd:	shl    eax,cl
   193bf:	mov    ecx,DWORD PTR [esi+0x54]
   193c2:	add    edi,0x8
   193c5:	add    ebx,eax
   193c7:	inc    DWORD PTR [ebp-0x4]
   193ca:	xor    eax,eax
   193cc:	inc    eax
   193cd:	shl    eax,cl
   193cf:	mov    ecx,DWORD PTR [esi+0x4c]
   193d2:	dec    eax
   193d3:	and    eax,ebx
   193d5:	mov    eax,DWORD PTR [ecx+eax*4]
   193d8:	mov    ecx,eax
   193da:	shr    ecx,0x8
   193dd:	movzx  ecx,cl
   193e0:	cmp    ecx,edi
   193e2:	ja     0x193a8
   193e4:	test   al,al
   193e6:	je     0x1947f
   193ec:	test   al,0xf0
   193ee:	jne    0x1947f
   193f4:	mov    DWORD PTR [ebp-0xc],eax
   193f7:	shr    DWORD PTR [ebp-0xc],0x8
   193fb:	movzx  edx,BYTE PTR [ebp-0xc]
   193ff:	mov    DWORD PTR [ebp-0x28],edx
   19402:	movzx  ecx,al
   19405:	add    ecx,edx
   19407:	xor    edx,edx
   19409:	inc    edx
   1940a:	shl    edx,cl
   1940c:	mov    ecx,DWORD PTR [ebp-0x28]
   1940f:	mov    DWORD PTR [ebp-0x20],eax
   19412:	shr    eax,0x10
   19415:	dec    edx
   19416:	and    edx,ebx
   19418:	shr    edx,cl
   1941a:	add    edx,eax
   1941c:	mov    eax,DWORD PTR [esi+0x4c]
   1941f:	mov    eax,DWORD PTR [eax+edx*4]
   19422:	movzx  edx,BYTE PTR [ebp-0xc]
   19426:	jmp    0x19469
   19428:	cmp    DWORD PTR [ebp-0x8],0x0
   1942c:	je     0x19891
   19432:	mov    eax,DWORD PTR [ebp-0x4]
   19435:	movzx  eax,BYTE PTR [eax]
   19438:	movzx  edx,BYTE PTR [ebp-0x1f]
   1943c:	dec    DWORD PTR [ebp-0x8]
   1943f:	mov    ecx,edi
   19441:	shl    eax,cl
   19443:	movzx  ecx,BYTE PTR [ebp-0x20]
   19447:	add    ebx,eax
   19449:	inc    DWORD PTR [ebp-0x4]
   1944c:	xor    eax,eax
   1944e:	add    ecx,edx
   19450:	inc    eax
   19451:	shl    eax,cl
   19453:	add    edi,0x8
   19456:	mov    ecx,edx
   19458:	dec    eax
   19459:	and    eax,ebx
   1945b:	shr    eax,cl
   1945d:	movzx  ecx,WORD PTR [ebp-0x1e]
   19461:	add    eax,ecx
   19463:	mov    ecx,DWORD PTR [esi+0x4c]
   19466:	mov    eax,DWORD PTR [ecx+eax*4]
   19469:	mov    ecx,eax
   1946b:	shr    ecx,0x8
   1946e:	movzx  ecx,cl
   19471:	add    ecx,edx
   19473:	cmp    ecx,edi
   19475:	ja     0x19428
   19477:	movzx  ecx,BYTE PTR [ebp-0x1f]
   1947b:	shr    ebx,cl
   1947d:	sub    edi,ecx
   1947f:	mov    ecx,eax
   19481:	shr    ecx,0x8
   19484:	movzx  ecx,cl
   19487:	shr    ebx,cl
   19489:	sub    edi,ecx
   1948b:	mov    ecx,eax
   1948d:	shr    ecx,0x10
   19490:	mov    DWORD PTR [esi+0x40],ecx
   19493:	test   al,al
   19495:	jne    0x194a2
   19497:	mov    DWORD PTR [esi],0x17
   1949d:	jmp    0x19843
   194a2:	test   al,0x20
   194a4:	je     0x194b1
   194a6:	mov    DWORD PTR [esi],0xb
   194ac:	jmp    0x19843
   194b1:	test   al,0x40
   194b3:	je     0x194c4
   194b5:	mov    eax,DWORD PTR [ebp+0x8]
   194b8:	mov    DWORD PTR [eax+0x18],0x1b76e
   194bf:	jmp    0x1983d
   194c4:	movzx  eax,al
   194c7:	and    eax,0xf
   194ca:	mov    DWORD PTR [esi+0x48],eax
   194cd:	mov    DWORD PTR [esi],0x13
   194d3:	mov    eax,DWORD PTR [esi+0x48]
   194d6:	test   eax,eax
   194d8:	je     0x19513
   194da:	cmp    edi,eax
   194dc:	jae    0x19502
   194de:	cmp    DWORD PTR [ebp-0x8],0x0
   194e2:	je     0x19891
   194e8:	mov    ecx,DWORD PTR [ebp-0x4]
   194eb:	movzx  edx,BYTE PTR [ecx]
   194ee:	dec    DWORD PTR [ebp-0x8]
   194f1:	mov    ecx,edi
   194f3:	shl    edx,cl
   194f5:	add    edi,0x8
   194f8:	add    ebx,edx
   194fa:	inc    DWORD PTR [ebp-0x4]
   194fd:	cmp    edi,DWORD PTR [esi+0x48]
   19500:	jb     0x194de
   19502:	xor    edx,edx
   19504:	inc    edx
   19505:	mov    ecx,eax
   19507:	shl    edx,cl
   19509:	dec    edx
   1950a:	and    edx,ebx
   1950c:	add    DWORD PTR [esi+0x40],edx
   1950f:	shr    ebx,cl
   19511:	sub    edi,eax
   19513:	mov    DWORD PTR [esi],0x14
   19519:	mov    ecx,DWORD PTR [esi+0x58]
   1951c:	mov    eax,DWORD PTR [esi+0x50]
   1951f:	xor    edx,edx
   19521:	inc    edx
   19522:	shl    edx,cl
   19524:	dec    edx
   19525:	and    edx,ebx
   19527:	mov    eax,DWORD PTR [eax+edx*4]
   1952a:	jmp    0x1955c
   1952c:	cmp    DWORD PTR [ebp-0x8],0x0
   19530:	je     0x19891
   19536:	mov    eax,DWORD PTR [ebp-0x4]
   19539:	movzx  eax,BYTE PTR [eax]
   1953c:	dec    DWORD PTR [ebp-0x8]
   1953f:	mov    ecx,edi
   19541:	shl    eax,cl
   19543:	mov    ecx,DWORD PTR [esi+0x58]
   19546:	add    edi,0x8
   19549:	add    ebx,eax
   1954b:	inc    DWORD PTR [ebp-0x4]
   1954e:	xor    eax,eax
   19550:	inc    eax
   19551:	shl    eax,cl
   19553:	mov    ecx,DWORD PTR [esi+0x50]
   19556:	dec    eax
   19557:	and    eax,ebx
   19559:	mov    eax,DWORD PTR [ecx+eax*4]
   1955c:	mov    ecx,eax
   1955e:	shr    ecx,0x8
   19561:	movzx  ecx,cl
   19564:	cmp    ecx,edi
   19566:	ja     0x1952c
   19568:	test   al,0xf0
   1956a:	jne    0x195fb
   19570:	mov    DWORD PTR [ebp-0xc],eax
   19573:	shr    DWORD PTR [ebp-0xc],0x8
   19577:	movzx  edx,BYTE PTR [ebp-0xc]
   1957b:	mov    DWORD PTR [ebp-0x28],edx
   1957e:	movzx  ecx,al
   19581:	add    ecx,edx
   19583:	xor    edx,edx
   19585:	inc    edx
   19586:	shl    edx,cl
   19588:	mov    ecx,DWORD PTR [ebp-0x28]
   1958b:	mov    DWORD PTR [ebp-0x20],eax
   1958e:	shr    eax,0x10
   19591:	dec    edx
   19592:	and    edx,ebx
   19594:	shr    edx,cl
   19596:	add    edx,eax
   19598:	mov    eax,DWORD PTR [esi+0x50]
   1959b:	mov    eax,DWORD PTR [eax+edx*4]
   1959e:	movzx  edx,BYTE PTR [ebp-0xc]
   195a2:	jmp    0x195e5
   195a4:	cmp    DWORD PTR [ebp-0x8],0x0
   195a8:	je     0x19891
   195ae:	mov    eax,DWORD PTR [ebp-0x4]
   195b1:	movzx  eax,BYTE PTR [eax]
   195b4:	movzx  edx,BYTE PTR [ebp-0x1f]
   195b8:	dec    DWORD PTR [ebp-0x8]
   195bb:	mov    ecx,edi
   195bd:	shl    eax,cl
   195bf:	movzx  ecx,BYTE PTR [ebp-0x20]
   195c3:	add    ebx,eax
   195c5:	inc    DWORD PTR [ebp-0x4]
   195c8:	xor    eax,eax
   195ca:	add    ecx,edx
   195cc:	inc    eax
   195cd:	shl    eax,cl
   195cf:	add    edi,0x8
   195d2:	mov    ecx,edx
   195d4:	dec    eax
   195d5:	and    eax,ebx
   195d7:	shr    eax,cl
   195d9:	movzx  ecx,WORD PTR [ebp-0x1e]
   195dd:	add    eax,ecx
   195df:	mov    ecx,DWORD PTR [esi+0x50]
   195e2:	mov    eax,DWORD PTR [ecx+eax*4]
   195e5:	mov    ecx,eax
   195e7:	shr    ecx,0x8
   195ea:	movzx  ecx,cl
   195ed:	add    ecx,edx
   195ef:	cmp    ecx,edi
   195f1:	ja     0x195a4
   195f3:	movzx  ecx,BYTE PTR [ebp-0x1f]
   195f7:	shr    ebx,cl
   195f9:	sub    edi,ecx
   195fb:	mov    ecx,eax
   195fd:	shr    ecx,0x8
   19600:	movzx  ecx,cl
   19603:	shr    ebx,cl
   19605:	sub    edi,ecx
   19607:	test   al,0x40
   19609:	je     0x1961a
   1960b:	mov    eax,DWORD PTR [ebp+0x8]
   1960e:	mov    DWORD PTR [eax+0x18],0x1b758
   19615:	jmp    0x1983d
   1961a:	mov    edx,DWORD PTR [ebp+0x8]
   1961d:	mov    ecx,eax
   1961f:	movzx  eax,al
   19622:	shr    ecx,0x10
   19625:	and    eax,0xf
   19628:	mov    DWORD PTR [esi+0x44],ecx
   1962b:	mov    DWORD PTR [esi+0x48],eax
   1962e:	mov    DWORD PTR [esi],0x15
   19634:	mov    eax,DWORD PTR [esi+0x48]
   19637:	test   eax,eax
   19639:	je     0x19678
   1963b:	cmp    edi,eax
   1963d:	jae    0x19666
   1963f:	cmp    DWORD PTR [ebp-0x8],0x0
   19643:	je     0x19891
   19649:	mov    eax,DWORD PTR [ebp-0x4]
   1964c:	movzx  eax,BYTE PTR [eax]
   1964f:	dec    DWORD PTR [ebp-0x8]
   19652:	mov    ecx,edi
   19654:	shl    eax,cl
   19656:	add    edi,0x8
   19659:	add    ebx,eax
   1965b:	inc    DWORD PTR [ebp-0x4]
   1965e:	cmp    edi,DWORD PTR [esi+0x48]
   19661:	jb     0x1963f
   19663:	mov    edx,DWORD PTR [ebp+0x8]
   19666:	mov    ecx,DWORD PTR [esi+0x48]
   19669:	xor    eax,eax
   1966b:	inc    eax
   1966c:	shl    eax,cl
   1966e:	dec    eax
   1966f:	and    eax,ebx
   19671:	add    DWORD PTR [esi+0x44],eax
   19674:	shr    ebx,cl
   19676:	sub    edi,ecx
   19678:	mov    eax,DWORD PTR [esi+0x2c]
   1967b:	sub    eax,DWORD PTR [ebp-0x10]
   1967e:	add    eax,DWORD PTR [ebp-0x1c]
   19681:	cmp    DWORD PTR [esi+0x44],eax
   19684:	jbe    0x19692
   19686:	mov    DWORD PTR [edx+0x18],0x1b73a
   1968d:	jmp    0x1983d
   19692:	mov    DWORD PTR [esi],0x16
   19698:	cmp    DWORD PTR [ebp-0x10],0x0
   1969c:	je     0x19891
   196a2:	mov    eax,DWORD PTR [ebp-0x1c]
   196a5:	sub    eax,DWORD PTR [ebp-0x10]
   196a8:	mov    ecx,DWORD PTR [esi+0x44]
   196ab:	cmp    ecx,eax
   196ad:	jbe    0x196dc
   196af:	sub    ecx,eax
   196b1:	mov    eax,DWORD PTR [esi+0x34]
   196b4:	mov    DWORD PTR [ebp-0xc],ecx
   196b7:	mov    ecx,DWORD PTR [esi+0x30]
   196ba:	cmp    DWORD PTR [ebp-0xc],ecx
   196bd:	jbe    0x196ca
   196bf:	add    eax,DWORD PTR [esi+0x28]
   196c2:	sub    DWORD PTR [ebp-0xc],ecx
   196c5:	sub    eax,DWORD PTR [ebp-0xc]
   196c8:	jmp    0x196cf
   196ca:	sub    eax,DWORD PTR [ebp-0xc]
   196cd:	add    eax,ecx
   196cf:	mov    ecx,DWORD PTR [esi+0x40]
   196d2:	mov    DWORD PTR [ebp-0x28],ecx
   196d5:	cmp    DWORD PTR [ebp-0xc],ecx
   196d8:	jbe    0x196ea
   196da:	jmp    0x196e7
   196dc:	mov    eax,DWORD PTR [ebp-0x18]
   196df:	sub    eax,ecx
   196e1:	mov    ecx,DWORD PTR [esi+0x40]
   196e4:	mov    DWORD PTR [ebp-0x28],ecx
   196e7:	mov    DWORD PTR [ebp-0xc],ecx
   196ea:	mov    ecx,DWORD PTR [ebp-0x10]
   196ed:	cmp    DWORD PTR [ebp-0xc],ecx
   196f0:	jbe    0x196f5
   196f2:	mov    DWORD PTR [ebp-0xc],ecx
   196f5:	sub    ecx,DWORD PTR [ebp-0xc]
   196f8:	mov    DWORD PTR [ebp-0x10],ecx
   196fb:	mov    ecx,DWORD PTR [ebp-0x28]
   196fe:	sub    ecx,DWORD PTR [ebp-0xc]
   19701:	mov    DWORD PTR [esi+0x40],ecx
   19704:	mov    edx,DWORD PTR [ebp-0x18]
   19707:	mov    cl,BYTE PTR [eax]
   19709:	inc    DWORD PTR [ebp-0x18]
   1970c:	inc    eax
   1970d:	dec    DWORD PTR [ebp-0xc]
   19710:	mov    BYTE PTR [edx],cl
   19712:	jne    0x19704
   19714:	cmp    DWORD PTR [esi+0x40],0x0
   19718:	jne    0x19843
   1971e:	jmp    0x19738
   19720:	cmp    DWORD PTR [ebp-0x10],0x0
   19724:	je     0x19891
   1972a:	mov    ecx,DWORD PTR [ebp-0x18]
   1972d:	mov    al,BYTE PTR [esi+0x40]
   19730:	inc    DWORD PTR [ebp-0x18]
   19733:	dec    DWORD PTR [ebp-0x10]
   19736:	mov    BYTE PTR [ecx],al
   19738:	mov    DWORD PTR [esi],0x12
   1973e:	jmp    0x19843
   19743:	cmp    DWORD PTR [esi+0x8],0x0
   19747:	je     0x197f7
   1974d:	cmp    edi,0x20
   19750:	jae    0x19779
   19752:	cmp    DWORD PTR [ebp-0x8],0x0
   19756:	je     0x19891
   1975c:	mov    eax,DWORD PTR [ebp-0x4]
   1975f:	movzx  eax,BYTE PTR [eax]
   19762:	dec    DWORD PTR [ebp-0x8]
   19765:	mov    ecx,edi
   19767:	shl    eax,cl
   19769:	add    edi,0x8
   1976c:	add    ebx,eax
   1976e:	inc    DWORD PTR [ebp-0x4]
   19771:	cmp    edi,0x20
   19774:	jb     0x19752
   19776:	mov    edx,DWORD PTR [ebp+0x8]
   19779:	mov    eax,DWORD PTR [ebp-0x1c]
   1977c:	sub    eax,DWORD PTR [ebp-0x10]
   1977f:	add    DWORD PTR [edx+0x14],eax
   19782:	add    DWORD PTR [esi+0x1c],eax
   19785:	mov    DWORD PTR [ebp-0x1c],eax
   19788:	test   eax,eax
   1978a:	je     0x197b4
   1978c:	push   eax
   1978d:	mov    eax,DWORD PTR [ebp-0x18]
   19790:	sub    eax,DWORD PTR [ebp-0x1c]
   19793:	cmp    DWORD PTR [esi+0x10],0x0
   19797:	push   eax
   19798:	push   DWORD PTR [esi+0x18]
   1979b:	je     0x197a4
   1979d:	call   0x1a6f4
   197a2:	jmp    0x197a9
   197a4:	call   0x1a252
   197a9:	mov    ecx,DWORD PTR [ebp+0x8]
   197ac:	mov    DWORD PTR [esi+0x18],eax
   197af:	mov    DWORD PTR [ecx+0x30],eax
   197b2:	mov    edx,ecx
   197b4:	cmp    DWORD PTR [esi+0x10],0x0
   197b8:	mov    eax,DWORD PTR [ebp-0x10]
   197bb:	mov    DWORD PTR [ebp-0x1c],eax
   197be:	mov    eax,ebx
   197c0:	jne    0x197e5
   197c2:	and    eax,0xff00
   197c7:	mov    ecx,ebx
   197c9:	shl    ecx,0x10
   197cc:	add    eax,ecx
   197ce:	mov    ecx,ebx
   197d0:	shr    ecx,0x8
   197d3:	and    ecx,0xff00
   197d9:	shl    eax,0x8
   197dc:	add    eax,ecx
   197de:	mov    ecx,ebx
   197e0:	shr    ecx,0x18
   197e3:	add    eax,ecx
   197e5:	cmp    eax,DWORD PTR [esi+0x18]
   197e8:	je     0x197f3
   197ea:	mov    DWORD PTR [edx+0x18],0x1b724
   197f1:	jmp    0x1983d
   197f3:	xor    ebx,ebx
   197f5:	xor    edi,edi
   197f7:	mov    DWORD PTR [esi],0x19
   197fd:	cmp    DWORD PTR [esi+0x8],0x0
   19801:	je     0x1987b
   19803:	cmp    DWORD PTR [esi+0x10],0x0
   19807:	je     0x1987b
   19809:	cmp    edi,0x20
   1980c:	jae    0x19831
   1980e:	cmp    DWORD PTR [ebp-0x8],0x0
   19812:	je     0x19891
   19814:	mov    eax,DWORD PTR [ebp-0x4]
   19817:	movzx  eax,BYTE PTR [eax]
   1981a:	dec    DWORD PTR [ebp-0x8]
   1981d:	mov    ecx,edi
   1981f:	shl    eax,cl
   19821:	add    edi,0x8
   19824:	add    ebx,eax
   19826:	inc    DWORD PTR [ebp-0x4]
   19829:	cmp    edi,0x20
   1982c:	jb     0x1980e
   1982e:	mov    edx,DWORD PTR [ebp+0x8]
   19831:	cmp    ebx,DWORD PTR [esi+0x1c]
   19834:	je     0x19877
   19836:	mov    DWORD PTR [edx+0x18],0x1b70c
   1983d:	mov    DWORD PTR [esi],0x1b
   19843:	mov    eax,DWORD PTR [esi]
   19845:	cmp    eax,0x1c
   19848:	jbe    0x1883a
   1984e:	jmp    0x18830
   19853:	mov    eax,DWORD PTR [ebp-0x18]
   19856:	mov    DWORD PTR [edx+0xc],eax
   19859:	mov    eax,DWORD PTR [ebp-0x10]
   1985c:	mov    DWORD PTR [edx+0x10],eax
   1985f:	mov    eax,DWORD PTR [ebp-0x4]
   19862:	mov    DWORD PTR [edx],eax
   19864:	mov    eax,DWORD PTR [ebp-0x8]
   19867:	mov    DWORD PTR [edx+0x4],eax
   1986a:	mov    DWORD PTR [esi+0x38],ebx
   1986d:	mov    DWORD PTR [esi+0x3c],edi
   19870:	push   0x2
   19872:	jmp    0x18832
   19877:	xor    ebx,ebx
   19879:	xor    edi,edi
   1987b:	mov    DWORD PTR [esi],0x1a
   19881:	mov    DWORD PTR [ebp-0x24],0x1
   19888:	jmp    0x19891
   1988a:	mov    DWORD PTR [ebp-0x24],0xfffffffd
   19891:	mov    eax,DWORD PTR [ebp+0x8]
   19894:	mov    ecx,DWORD PTR [ebp-0x18]
   19897:	mov    DWORD PTR [eax+0xc],ecx
   1989a:	mov    ecx,DWORD PTR [ebp-0x10]
   1989d:	mov    DWORD PTR [eax+0x10],ecx
   198a0:	mov    ecx,DWORD PTR [ebp-0x4]
   198a3:	mov    DWORD PTR [eax],ecx
   198a5:	mov    ecx,DWORD PTR [ebp-0x8]
   198a8:	mov    DWORD PTR [eax+0x4],ecx
   198ab:	cmp    DWORD PTR [esi+0x28],0x0
   198af:	mov    DWORD PTR [esi+0x38],ebx
   198b2:	mov    DWORD PTR [esi+0x3c],edi
   198b5:	jne    0x198c7
   198b7:	cmp    DWORD PTR [esi],0x18
   198ba:	jge    0x198e3
   198bc:	mov    eax,DWORD PTR [ebp-0x1c]
   198bf:	mov    ecx,DWORD PTR [ebp+0x8]
   198c2:	cmp    eax,DWORD PTR [ecx+0x10]
   198c5:	je     0x198e3
   198c7:	mov    eax,DWORD PTR [ebp-0x1c]
   198ca:	mov    edi,DWORD PTR [ebp+0x8]
   198cd:	call   0x186f2
   198d2:	test   eax,eax
   198d4:	je     0x198e3
   198d6:	mov    DWORD PTR [esi],0x1c
   198dc:	push   0xfffffffc
   198de:	jmp    0x18832
   198e3:	mov    edi,DWORD PTR [ebp+0x8]
   198e6:	mov    eax,DWORD PTR [ebp-0x2c]
   198e9:	sub    eax,DWORD PTR [edi+0x4]
   198ec:	mov    ebx,DWORD PTR [ebp-0x1c]
   198ef:	sub    ebx,DWORD PTR [edi+0x10]
   198f2:	add    DWORD PTR [edi+0x8],eax
   198f5:	add    DWORD PTR [edi+0x14],ebx
   198f8:	add    DWORD PTR [esi+0x1c],ebx
   198fb:	cmp    DWORD PTR [esi+0x8],0x0
   198ff:	mov    DWORD PTR [ebp-0x2c],eax
   19902:	je     0x1992d
   19904:	test   ebx,ebx
   19906:	je     0x1992d
   19908:	mov    eax,DWORD PTR [edi+0xc]
   1990b:	push   ebx
   1990c:	sub    eax,ebx
   1990e:	cmp    DWORD PTR [esi+0x10],0x0
   19912:	push   eax
   19913:	push   DWORD PTR [esi+0x18]
   19916:	je     0x1991f
   19918:	call   0x1a6f4
   1991d:	jmp    0x19924
   1991f:	call   0x1a252
   19924:	mov    DWORD PTR [esi+0x18],eax
   19927:	mov    DWORD PTR [edi+0x30],eax
   1992a:	mov    eax,DWORD PTR [ebp-0x2c]
   1992d:	cmp    DWORD PTR [esi],0xb
   19930:	jne    0x19939
   19932:	mov    ecx,0x80
   19937:	jmp    0x1993b
   19939:	xor    ecx,ecx
   1993b:	mov    edx,DWORD PTR [esi+0x4]
   1993e:	neg    edx
   19940:	sbb    edx,edx
   19942:	and    edx,0x40
   19945:	add    edx,ecx
   19947:	add    edx,DWORD PTR [esi+0x3c]
   1994a:	mov    DWORD PTR [edi+0x2c],edx
   1994d:	test   eax,eax
   1994f:	jne    0x19955
   19951:	test   ebx,ebx
   19953:	je     0x1995b
   19955:	cmp    DWORD PTR [ebp+0xc],0x4
   19959:	jne    0x19968
   1995b:	cmp    DWORD PTR [ebp-0x24],0x0
   1995f:	jne    0x19968
   19961:	mov    DWORD PTR [ebp-0x24],0xfffffffb
   19968:	mov    eax,DWORD PTR [ebp-0x24]
   1996b:	jmp    0x18833
   19970:	mov    edi,edi
   19972:	inc    esp
   19973:	mov    BYTE PTR [ecx],al
   19975:	add    BYTE PTR [ecx-0x77],ah
   19978:	add    DWORD PTR [eax],eax
   1997a:	test   BYTE PTR [ecx-0x7593ffff],0x1
   19981:	add    ch,ah
   19983:	mov    al,BYTE PTR [ecx]
   19985:	add    BYTE PTR [ebx+ecx*4+0x1],ah
   19989:	add    bh,bh
   1998b:	mov    eax,DWORD PTR [ecx]
   1998d:	add    BYTE PTR [eax+0x2d00018c],bl
   19993:	lea    eax,[ecx]
   19995:	add    BYTE PTR [ebp+0xb00018d],ch
   1999b:	mov    es,WORD PTR [ecx]
   1999d:	add    BYTE PTR [esi],ch
   1999f:	mov    es,WORD PTR [ecx]
   199a1:	add    BYTE PTR [ebx],bh
   199a3:	mov    es,WORD PTR [ecx]
   199a5:	add    dl,ch
   199a7:	mov    es,WORD PTR [ecx]
   199a9:	add    BYTE PTR [edx-0x71],cl
   199ac:	add    DWORD PTR [eax],eax
   199ae:	mov    al,ds:0x6200018f
   199b3:	nop
   199b4:	add    DWORD PTR [eax],eax
   199b6:	rcl    BYTE PTR [edx-0x6cc7ffff],1
   199bc:	add    DWORD PTR [eax],eax
   199be:	rcl    DWORD PTR [ecx+eax*1+0x1951900],cl
   199c5:	add    BYTE PTR [esi+edx*4],dh
   199c8:	add    DWORD PTR [eax],eax
   199ca:	cwde   
   199cb:	xchg   esi,eax
   199cc:	add    DWORD PTR [eax],eax
   199ce:	and    BYTE PTR [edi-0x68bcffff],dl
   199d4:	add    DWORD PTR [eax],eax
   199d6:	std    
   199d7:	xchg   edi,eax
   199d8:	add    DWORD PTR [eax],eax
   199da:	sbb    DWORD PTR [eax-0x6775ffff],0x98dc0001
   199e4:	add    DWORD PTR [eax],eax
   199e6:	int3   
   199e7:	int3   
   199e8:	int3   
   199e9:	int3   
   199ea:	int3   
   199eb:	int3   
   199ec:	mov    edi,edi
   199ee:	push   ebp
   199ef:	mov    ebp,esp
   199f1:	push   esi
   199f2:	mov    esi,DWORD PTR [ebp+0x8]
   199f5:	test   esi,esi
   199f7:	je     0x19a25
   199f9:	mov    eax,DWORD PTR [esi+0x1c]
   199fc:	test   eax,eax
   199fe:	je     0x19a25
   19a00:	mov    ecx,DWORD PTR [esi+0x24]
   19a03:	test   ecx,ecx
   19a05:	je     0x19a25
   19a07:	mov    eax,DWORD PTR [eax+0x34]
   19a0a:	test   eax,eax
   19a0c:	je     0x19a14
   19a0e:	push   eax
   19a0f:	push   DWORD PTR [esi+0x28]
   19a12:	call   ecx
   19a14:	push   DWORD PTR [esi+0x1c]
   19a17:	push   DWORD PTR [esi+0x28]
   19a1a:	call   DWORD PTR [esi+0x24]
   19a1d:	and    DWORD PTR [esi+0x1c],0x0
   19a21:	xor    eax,eax
   19a23:	jmp    0x19a28
   19a25:	push   0xfffffffe
   19a27:	pop    eax
   19a28:	pop    esi
   19a29:	pop    ebp
   19a2a:	ret    0x4
   19a2d:	int3   
   19a2e:	int3   
   19a2f:	int3   
   19a30:	int3   
   19a31:	int3   
   19a32:	mov    edi,edi
   19a34:	push   ebp
   19a35:	mov    ebp,esp
   19a37:	mov    eax,DWORD PTR [ebp+0xc]
   19a3a:	imul   eax,DWORD PTR [ebp+0x10]
   19a3e:	push   eax
   19a3f:	call   0x1a718
   19a44:	pop    ecx
   19a45:	pop    ebp
   19a46:	ret    0xc
   19a49:	int3   
   19a4a:	int3   
   19a4b:	int3   
   19a4c:	int3   
   19a4d:	int3   
   19a4e:	mov    edi,edi
   19a50:	push   ebp
   19a51:	mov    ebp,esp
   19a53:	push   DWORD PTR [ebp+0xc]
   19a56:	call   0x10832
   19a5b:	pop    ecx
   19a5c:	pop    ebp
   19a5d:	ret    0x8
   19a60:	int3   
   19a61:	int3   
   19a62:	int3   
   19a63:	int3   
   19a64:	int3   
   19a65:	int3   
   19a66:	mov    edi,edi
   19a68:	push   ebp
   19a69:	mov    ebp,esp
   19a6b:	sub    esp,0x40
   19a6e:	mov    eax,DWORD PTR [ebp+0x8]
   19a71:	mov    ecx,DWORD PTR [eax+0x4]
   19a74:	mov    edx,DWORD PTR [eax+0x10]
   19a77:	push   ebx
   19a78:	mov    ebx,DWORD PTR [eax]
   19a7a:	dec    ebx
   19a7b:	lea    ecx,[ecx+ebx*1-0x5]
   19a7f:	mov    DWORD PTR [ebp-0x2c],ecx
   19a82:	mov    ecx,edx
   19a84:	sub    ecx,DWORD PTR [ebp+0xc]
   19a87:	push   esi
   19a88:	mov    esi,DWORD PTR [eax+0x1c]
   19a8b:	push   edi
   19a8c:	mov    edi,DWORD PTR [eax+0xc]
   19a8f:	dec    edi
   19a90:	add    ecx,edi
   19a92:	mov    DWORD PTR [ebp-0x3c],ecx
   19a95:	lea    ecx,[edx+edi*1-0x101]
   19a9c:	mov    DWORD PTR [ebp-0x30],ecx
   19a9f:	mov    ecx,DWORD PTR [esi+0x28]
   19aa2:	mov    DWORD PTR [ebp-0x24],ecx
   19aa5:	mov    ecx,DWORD PTR [esi+0x2c]
   19aa8:	mov    DWORD PTR [ebp-0x40],ecx
   19aab:	mov    ecx,DWORD PTR [esi+0x30]
   19aae:	mov    DWORD PTR [ebp-0x18],ecx
   19ab1:	mov    ecx,DWORD PTR [esi+0x34]
   19ab4:	mov    DWORD PTR [ebp-0x28],ecx
   19ab7:	mov    ecx,DWORD PTR [esi+0x38]
   19aba:	mov    DWORD PTR [ebp-0x4],ecx
   19abd:	mov    ecx,DWORD PTR [esi+0x3c]
   19ac0:	mov    DWORD PTR [ebp+0xc],ecx
   19ac3:	mov    ecx,DWORD PTR [esi+0x4c]
   19ac6:	xor    edx,edx
   19ac8:	mov    DWORD PTR [ebp-0x1c],ecx
   19acb:	mov    ecx,DWORD PTR [esi+0x50]
   19ace:	inc    edx
   19acf:	mov    DWORD PTR [ebp-0x20],ecx
   19ad2:	mov    ecx,DWORD PTR [esi+0x54]
   19ad5:	shl    edx,cl
   19ad7:	mov    ecx,DWORD PTR [esi+0x58]
   19ada:	dec    edx
   19adb:	mov    DWORD PTR [ebp-0x34],edx
   19ade:	xor    edx,edx
   19ae0:	inc    edx
   19ae1:	shl    edx,cl
   19ae3:	dec    edx
   19ae4:	mov    DWORD PTR [ebp-0x38],edx
   19ae7:	mov    ecx,DWORD PTR [ebp+0xc]
   19aea:	cmp    ecx,0xf
   19aed:	jae    0x19b0c
   19aef:	add    DWORD PTR [ebp+0xc],0x8
   19af3:	inc    ebx
   19af4:	movzx  edx,BYTE PTR [ebx]
   19af7:	shl    edx,cl
   19af9:	mov    ecx,DWORD PTR [ebp+0xc]
   19afc:	add    DWORD PTR [ebp-0x4],edx
   19aff:	inc    ebx
   19b00:	movzx  edx,BYTE PTR [ebx]
   19b03:	shl    edx,cl
   19b05:	add    DWORD PTR [ebp-0x4],edx
   19b08:	add    DWORD PTR [ebp+0xc],0x8
   19b0c:	mov    ecx,DWORD PTR [ebp-0x34]
   19b0f:	and    ecx,DWORD PTR [ebp-0x4]
   19b12:	mov    edx,DWORD PTR [ebp-0x1c]
   19b15:	mov    ecx,DWORD PTR [edx+ecx*4]
   19b18:	mov    DWORD PTR [ebp-0x10],ecx
   19b1b:	mov    edx,DWORD PTR [ebp-0x10]
   19b1e:	shr    ecx,0x8
   19b21:	movzx  ecx,cl
   19b24:	shr    DWORD PTR [ebp-0x4],cl
   19b27:	sub    DWORD PTR [ebp+0xc],ecx
   19b2a:	mov    DWORD PTR [ebp-0x8],ecx
   19b2d:	movzx  ecx,dl
   19b30:	mov    DWORD PTR [ebp-0x8],ecx
   19b33:	test   ecx,ecx
   19b35:	je     0x19b7e
   19b37:	mov    ecx,DWORD PTR [ebp-0x8]
   19b3a:	test   cl,0x10
   19b3d:	jne    0x19b89
   19b3f:	test   cl,0x40
   19b42:	jne    0x19dd8
   19b48:	xor    edx,edx
   19b4a:	inc    edx
   19b4b:	shl    edx,cl
   19b4d:	mov    ecx,DWORD PTR [ebp-0x10]
   19b50:	shr    ecx,0x10
   19b53:	dec    edx
   19b54:	and    edx,DWORD PTR [ebp-0x4]
   19b57:	add    edx,ecx
   19b59:	mov    ecx,DWORD PTR [ebp-0x1c]
   19b5c:	mov    ecx,DWORD PTR [ecx+edx*4]
   19b5f:	mov    DWORD PTR [ebp-0x10],ecx
   19b62:	mov    edx,DWORD PTR [ebp-0x10]
   19b65:	shr    ecx,0x8
   19b68:	movzx  ecx,cl
   19b6b:	shr    DWORD PTR [ebp-0x4],cl
   19b6e:	sub    DWORD PTR [ebp+0xc],ecx
   19b71:	mov    DWORD PTR [ebp-0x8],ecx
   19b74:	movzx  ecx,dl
   19b77:	mov    DWORD PTR [ebp-0x8],ecx
   19b7a:	test   ecx,ecx
   19b7c:	jne    0x19b37
   19b7e:	inc    edi
   19b7f:	shr    edx,0x10
   19b82:	mov    BYTE PTR [edi],dl
   19b84:	jmp    0x19db6
   19b89:	shr    edx,0x10
   19b8c:	and    ecx,0xf
   19b8f:	mov    DWORD PTR [ebp-0xc],edx
   19b92:	mov    DWORD PTR [ebp-0x8],ecx
   19b95:	je     0x19bc1
   19b97:	mov    ecx,DWORD PTR [ebp+0xc]
   19b9a:	cmp    ecx,DWORD PTR [ebp-0x8]
   19b9d:	jae    0x19bac
   19b9f:	inc    ebx
   19ba0:	movzx  edx,BYTE PTR [ebx]
   19ba3:	shl    edx,cl
   19ba5:	add    DWORD PTR [ebp-0x4],edx
   19ba8:	add    DWORD PTR [ebp+0xc],0x8
   19bac:	mov    ecx,DWORD PTR [ebp-0x8]
   19baf:	xor    edx,edx
   19bb1:	inc    edx
   19bb2:	shl    edx,cl
   19bb4:	dec    edx
   19bb5:	and    edx,DWORD PTR [ebp-0x4]
   19bb8:	shr    DWORD PTR [ebp-0x4],cl
   19bbb:	add    DWORD PTR [ebp-0xc],edx
   19bbe:	sub    DWORD PTR [ebp+0xc],ecx
   19bc1:	mov    ecx,DWORD PTR [ebp+0xc]
   19bc4:	cmp    ecx,0xf
   19bc7:	jae    0x19be6
   19bc9:	add    DWORD PTR [ebp+0xc],0x8
   19bcd:	inc    ebx
   19bce:	movzx  edx,BYTE PTR [ebx]
   19bd1:	shl    edx,cl
   19bd3:	mov    ecx,DWORD PTR [ebp+0xc]
   19bd6:	add    DWORD PTR [ebp-0x4],edx
   19bd9:	inc    ebx
   19bda:	movzx  edx,BYTE PTR [ebx]
   19bdd:	shl    edx,cl
   19bdf:	add    DWORD PTR [ebp-0x4],edx
   19be2:	add    DWORD PTR [ebp+0xc],0x8
   19be6:	mov    ecx,DWORD PTR [ebp-0x38]
   19be9:	and    ecx,DWORD PTR [ebp-0x4]
   19bec:	mov    edx,DWORD PTR [ebp-0x20]
   19bef:	mov    ecx,DWORD PTR [edx+ecx*4]
   19bf2:	jmp    0x19c12
   19bf4:	test   cl,0x40
   19bf7:	jne    0x19dcf
   19bfd:	xor    edx,edx
   19bff:	inc    edx
   19c00:	shl    edx,cl
   19c02:	movzx  ecx,WORD PTR [ebp-0xe]
   19c06:	dec    edx
   19c07:	and    edx,DWORD PTR [ebp-0x4]
   19c0a:	add    edx,ecx
   19c0c:	mov    ecx,DWORD PTR [ebp-0x20]
   19c0f:	mov    ecx,DWORD PTR [ecx+edx*4]
   19c12:	mov    DWORD PTR [ebp-0x10],ecx
   19c15:	mov    edx,DWORD PTR [ebp-0x10]
   19c18:	shr    ecx,0x8
   19c1b:	movzx  ecx,cl
   19c1e:	shr    DWORD PTR [ebp-0x4],cl
   19c21:	sub    DWORD PTR [ebp+0xc],ecx
   19c24:	mov    DWORD PTR [ebp-0x8],ecx
   19c27:	movzx  ecx,dl
   19c2a:	test   cl,0x10
   19c2d:	je     0x19bf4
   19c2f:	and    ecx,0xf
   19c32:	shr    edx,0x10
   19c35:	mov    DWORD PTR [ebp-0x14],edx
   19c38:	mov    DWORD PTR [ebp-0x8],ecx
   19c3b:	cmp    DWORD PTR [ebp+0xc],ecx
   19c3e:	jae    0x19c6b
   19c40:	mov    ecx,DWORD PTR [ebp+0xc]
   19c43:	add    DWORD PTR [ebp+0xc],0x8
   19c47:	inc    ebx
   19c48:	movzx  edx,BYTE PTR [ebx]
   19c4b:	shl    edx,cl
   19c4d:	mov    ecx,DWORD PTR [ebp-0x8]
   19c50:	add    DWORD PTR [ebp-0x4],edx
   19c53:	cmp    DWORD PTR [ebp+0xc],ecx
   19c56:	jae    0x19c6b
   19c58:	mov    ecx,DWORD PTR [ebp+0xc]
   19c5b:	inc    ebx
   19c5c:	movzx  edx,BYTE PTR [ebx]
   19c5f:	shl    edx,cl
   19c61:	mov    ecx,DWORD PTR [ebp-0x8]
   19c64:	add    DWORD PTR [ebp-0x4],edx
   19c67:	add    DWORD PTR [ebp+0xc],0x8
   19c6b:	xor    edx,edx
   19c6d:	inc    edx
   19c6e:	shl    edx,cl
   19c70:	mov    ecx,DWORD PTR [ebp-0x8]
   19c73:	sub    DWORD PTR [ebp+0xc],ecx
   19c76:	dec    edx
   19c77:	and    edx,DWORD PTR [ebp-0x4]
   19c7a:	shr    DWORD PTR [ebp-0x4],cl
   19c7d:	add    DWORD PTR [ebp-0x14],edx
   19c80:	mov    edx,DWORD PTR [ebp-0x14]
   19c83:	mov    ecx,edi
   19c85:	sub    ecx,DWORD PTR [ebp-0x3c]
   19c88:	cmp    edx,ecx
   19c8a:	jbe    0x19d7e
   19c90:	sub    edx,ecx
   19c92:	mov    DWORD PTR [ebp-0x8],edx
   19c95:	cmp    edx,DWORD PTR [ebp-0x40]
   19c98:	ja     0x19dc6
   19c9e:	mov    ecx,DWORD PTR [ebp-0x28]
   19ca1:	dec    ecx
   19ca2:	mov    DWORD PTR [ebp-0x10],ecx
   19ca5:	mov    ecx,DWORD PTR [ebp-0x18]
   19ca8:	test   ecx,ecx
   19caa:	jne    0x19cd2
   19cac:	mov    ecx,DWORD PTR [ebp-0x24]
   19caf:	sub    ecx,edx
   19cb1:	add    DWORD PTR [ebp-0x10],ecx
   19cb4:	mov    ecx,edx
   19cb6:	cmp    ecx,DWORD PTR [ebp-0xc]
   19cb9:	jae    0x19d47
   19cbf:	sub    DWORD PTR [ebp-0xc],ecx
   19cc2:	mov    ecx,DWORD PTR [ebp-0x10]
   19cc5:	inc    ecx
   19cc6:	mov    dl,BYTE PTR [ecx]
   19cc8:	inc    edi
   19cc9:	dec    DWORD PTR [ebp-0x8]
   19ccc:	mov    BYTE PTR [edi],dl
   19cce:	jne    0x19cc5
   19cd0:	jmp    0x19d1d
   19cd2:	cmp    ecx,edx
   19cd4:	jae    0x19d27
   19cd6:	sub    ecx,edx
   19cd8:	add    ecx,DWORD PTR [ebp-0x24]
   19cdb:	add    DWORD PTR [ebp-0x10],ecx
   19cde:	mov    ecx,DWORD PTR [ebp-0x8]
   19ce1:	sub    ecx,DWORD PTR [ebp-0x18]
   19ce4:	cmp    ecx,DWORD PTR [ebp-0xc]
   19ce7:	jae    0x19d47
   19ce9:	sub    DWORD PTR [ebp-0xc],ecx
   19cec:	inc    DWORD PTR [ebp-0x10]
   19cef:	mov    edx,DWORD PTR [ebp-0x10]
   19cf2:	mov    dl,BYTE PTR [edx]
   19cf4:	inc    edi
   19cf5:	dec    ecx
   19cf6:	mov    BYTE PTR [edi],dl
   19cf8:	jne    0x19cec
   19cfa:	mov    ecx,DWORD PTR [ebp-0x28]
   19cfd:	dec    ecx
   19cfe:	mov    DWORD PTR [ebp-0x10],ecx
   19d01:	mov    ecx,DWORD PTR [ebp-0x18]
   19d04:	cmp    ecx,DWORD PTR [ebp-0xc]
   19d07:	jae    0x19d47
   19d09:	sub    DWORD PTR [ebp-0xc],ecx
   19d0c:	mov    DWORD PTR [ebp-0x8],ecx
   19d0f:	mov    ecx,DWORD PTR [ebp-0x10]
   19d12:	inc    ecx
   19d13:	mov    dl,BYTE PTR [ecx]
   19d15:	inc    edi
   19d16:	dec    DWORD PTR [ebp-0x8]
   19d19:	mov    BYTE PTR [edi],dl
   19d1b:	jne    0x19d12
   19d1d:	mov    ecx,edi
   19d1f:	sub    ecx,DWORD PTR [ebp-0x14]
   19d22:	mov    DWORD PTR [ebp-0x10],ecx
   19d25:	jmp    0x19d4a
   19d27:	sub    ecx,edx
   19d29:	add    DWORD PTR [ebp-0x10],ecx
   19d2c:	mov    ecx,DWORD PTR [ebp-0x8]
   19d2f:	cmp    ecx,DWORD PTR [ebp-0xc]
   19d32:	jae    0x19d47
   19d34:	sub    DWORD PTR [ebp-0xc],ecx
   19d37:	mov    ecx,DWORD PTR [ebp-0x10]
   19d3a:	inc    ecx
   19d3b:	mov    dl,BYTE PTR [ecx]
   19d3d:	inc    edi
   19d3e:	dec    DWORD PTR [ebp-0x8]
   19d41:	mov    BYTE PTR [edi],dl
   19d43:	jne    0x19d3a
   19d45:	jmp    0x19d1d
   19d47:	mov    ecx,DWORD PTR [ebp-0x10]
   19d4a:	mov    edx,DWORD PTR [ebp-0xc]
   19d4d:	cmp    edx,0x2
   19d50:	jbe    0x19d9e
   19d52:	lea    eax,[edx-0x3]
   19d55:	push   0x3
   19d57:	xor    edx,edx
   19d59:	pop    ecx
   19d5a:	div    ecx
   19d5c:	mov    ecx,DWORD PTR [ebp-0x10]
   19d5f:	inc    eax
   19d60:	sub    DWORD PTR [ebp-0xc],0x3
   19d64:	inc    ecx
   19d65:	mov    dl,BYTE PTR [ecx]
   19d67:	inc    edi
   19d68:	mov    BYTE PTR [edi],dl
   19d6a:	inc    ecx
   19d6b:	mov    dl,BYTE PTR [ecx]
   19d6d:	inc    edi
   19d6e:	inc    ecx
   19d6f:	mov    BYTE PTR [edi],dl
   19d71:	mov    dl,BYTE PTR [ecx]
   19d73:	inc    edi
   19d74:	dec    eax
   19d75:	mov    BYTE PTR [edi],dl
   19d77:	jne    0x19d60
   19d79:	mov    eax,DWORD PTR [ebp+0x8]
   19d7c:	jmp    0x19d9e
   19d7e:	mov    ecx,edi
   19d80:	sub    ecx,edx
   19d82:	sub    DWORD PTR [ebp-0xc],0x3
   19d86:	inc    ecx
   19d87:	mov    dl,BYTE PTR [ecx]
   19d89:	inc    edi
   19d8a:	mov    BYTE PTR [edi],dl
   19d8c:	inc    ecx
   19d8d:	mov    dl,BYTE PTR [ecx]
   19d8f:	inc    edi
   19d90:	inc    ecx
   19d91:	mov    BYTE PTR [edi],dl
   19d93:	mov    dl,BYTE PTR [ecx]
   19d95:	inc    edi
   19d96:	cmp    DWORD PTR [ebp-0xc],0x2
   19d9a:	mov    BYTE PTR [edi],dl
   19d9c:	ja     0x19d82
   19d9e:	cmp    DWORD PTR [ebp-0xc],0x0
   19da2:	je     0x19db6
   19da4:	inc    ecx
   19da5:	mov    dl,BYTE PTR [ecx]
   19da7:	inc    edi
   19da8:	cmp    DWORD PTR [ebp-0xc],0x1
   19dac:	mov    BYTE PTR [edi],dl
   19dae:	jbe    0x19db6
   19db0:	mov    cl,BYTE PTR [ecx+0x1]
   19db3:	inc    edi
   19db4:	mov    BYTE PTR [edi],cl
   19db6:	cmp    ebx,DWORD PTR [ebp-0x2c]
   19db9:	jae    0x19df2
   19dbb:	cmp    edi,DWORD PTR [ebp-0x30]
   19dbe:	jb     0x19ae7
   19dc4:	jmp    0x19df2
   19dc6:	mov    DWORD PTR [eax+0x18],0x1b73a
   19dcd:	jmp    0x19dec
   19dcf:	mov    DWORD PTR [eax+0x18],0x1b758
   19dd6:	jmp    0x19dec
   19dd8:	test   cl,0x20
   19ddb:	je     0x19de5
   19ddd:	mov    DWORD PTR [esi],0xb
   19de3:	jmp    0x19df2
   19de5:	mov    DWORD PTR [eax+0x18],0x1b76e
   19dec:	mov    DWORD PTR [esi],0x1b
   19df2:	mov    ecx,DWORD PTR [ebp+0xc]
   19df5:	shr    ecx,0x3
   19df8:	sub    ebx,ecx
   19dfa:	shl    ecx,0x3
   19dfd:	sub    DWORD PTR [ebp+0xc],ecx
   19e00:	xor    ecx,ecx
   19e02:	inc    ecx
   19e03:	mov    edx,ecx
   19e05:	mov    ecx,DWORD PTR [ebp+0xc]
   19e08:	shl    edx,cl
   19e0a:	dec    edx
   19e0b:	mov    ecx,edx
   19e0d:	mov    edx,DWORD PTR [ebp-0x4]
   19e10:	and    edx,ecx
   19e12:	lea    ecx,[ebx+0x1]
   19e15:	mov    DWORD PTR [eax],ecx
   19e17:	lea    ecx,[edi+0x1]
   19e1a:	mov    DWORD PTR [eax+0xc],ecx
   19e1d:	mov    ecx,DWORD PTR [ebp-0x2c]
   19e20:	sub    ecx,ebx
   19e22:	add    ecx,0x5
   19e25:	mov    DWORD PTR [eax+0x4],ecx
   19e28:	mov    ecx,DWORD PTR [ebp-0x30]
   19e2b:	sub    ecx,edi
   19e2d:	add    ecx,0x101
   19e33:	mov    DWORD PTR [eax+0x10],ecx
   19e36:	mov    eax,DWORD PTR [ebp+0xc]
   19e39:	pop    edi
   19e3a:	mov    DWORD PTR [esi+0x38],edx
   19e3d:	mov    DWORD PTR [esi+0x3c],eax
   19e40:	pop    esi
   19e41:	pop    ebx
   19e42:	leave  
   19e43:	ret    0x8
   19e46:	int3   
   19e47:	int3   
   19e48:	int3   
   19e49:	int3   
   19e4a:	int3   
   19e4b:	int3   
   19e4c:	mov    edi,edi
   19e4e:	push   ebp
   19e4f:	mov    ebp,esp
   19e51:	sub    esp,0x90
   19e57:	mov    eax,ds:0x70100
   19e5c:	xor    eax,ebp
   19e5e:	mov    DWORD PTR [ebp-0x4],eax
   19e61:	mov    eax,DWORD PTR [ebp+0xc]
   19e64:	mov    edx,DWORD PTR [ebp+0x18]
   19e67:	mov    DWORD PTR [ebp-0x7c],eax
   19e6a:	mov    eax,DWORD PTR [ebp+0x1c]
   19e6d:	push   ebx
   19e6e:	mov    DWORD PTR [ebp-0x4c],eax
   19e71:	xor    eax,eax
   19e73:	push   esi
   19e74:	mov    esi,DWORD PTR [ebp+0x14]
   19e77:	movzx  ebx,ax
   19e7a:	push   edi
   19e7b:	mov    eax,ebx
   19e7d:	shl    ebx,0x10
   19e80:	push   0x8
   19e82:	or     eax,ebx
   19e84:	pop    ecx
   19e85:	lea    edi,[ebp-0x24]
   19e88:	rep stos DWORD PTR es:[edi],eax
   19e8a:	xor    edi,edi
   19e8c:	xor    ecx,ecx
   19e8e:	mov    DWORD PTR [ebp-0x90],edx
   19e94:	cmp    DWORD PTR [ebp+0x10],edi
   19e97:	jbe    0x19ead
   19e99:	mov    eax,DWORD PTR [ebp-0x7c]
   19e9c:	movzx  eax,WORD PTR [eax+ecx*2]
   19ea0:	lea    eax,[ebp+eax*2-0x24]
   19ea4:	inc    WORD PTR [eax]
   19ea7:	inc    ecx
   19ea8:	cmp    ecx,DWORD PTR [ebp+0x10]
   19eab:	jb     0x19e99
   19ead:	mov    ecx,DWORD PTR [edx]
   19eaf:	push   0xf
   19eb1:	pop    eax
   19eb2:	mov    DWORD PTR [ebp-0x54],ecx
   19eb5:	mov    DWORD PTR [ebp-0x60],eax
   19eb8:	cmp    WORD PTR [ebp+eax*2-0x24],di
   19ebd:	jne    0x19ec8
   19ebf:	dec    eax
   19ec0:	mov    DWORD PTR [ebp-0x60],eax
   19ec3:	cmp    eax,0x1
   19ec6:	jae    0x19eb8
   19ec8:	cmp    ecx,eax
   19eca:	jbe    0x19ecf
   19ecc:	mov    DWORD PTR [ebp-0x54],eax
   19ecf:	cmp    eax,edi
   19ed1:	jne    0x19efd
   19ed3:	mov    ecx,DWORD PTR [esi]
   19ed5:	xor    eax,eax
   19ed7:	mov    BYTE PTR [ebp-0x48],0x40
   19edb:	mov    BYTE PTR [ebp-0x47],0x1
   19edf:	mov    WORD PTR [ebp-0x46],ax
   19ee3:	mov    eax,DWORD PTR [ebp-0x48]
   19ee6:	mov    DWORD PTR [ecx],eax
   19ee8:	add    DWORD PTR [esi],0x4
   19eeb:	mov    ecx,DWORD PTR [esi]
   19eed:	mov    DWORD PTR [ecx],eax
   19eef:	add    DWORD PTR [esi],0x4
   19ef2:	mov    DWORD PTR [edx],0x1
   19ef8:	jmp    0x1a239
   19efd:	xor    ecx,ecx
   19eff:	inc    ecx
   19f00:	mov    edx,ecx
   19f02:	cmp    WORD PTR [ebp+edx*2-0x24],di
   19f07:	jne    0x19f0f
   19f09:	inc    edx
   19f0a:	cmp    edx,0xf
   19f0d:	jbe    0x19f02
   19f0f:	cmp    DWORD PTR [ebp-0x54],edx
   19f12:	jae    0x19f17
   19f14:	mov    DWORD PTR [ebp-0x54],edx
   19f17:	mov    edi,ecx
   19f19:	movzx  ebx,WORD PTR [ebp+ecx*2-0x24]
   19f1e:	add    edi,edi
   19f20:	sub    edi,ebx
   19f22:	js     0x19fae
   19f28:	inc    ecx
   19f29:	cmp    ecx,0xf
   19f2c:	jbe    0x19f19
   19f2e:	xor    ebx,ebx
   19f30:	cmp    edi,ebx
   19f32:	jle    0x19f3e
   19f34:	cmp    DWORD PTR [ebp+0x8],ebx
   19f37:	je     0x19fae
   19f39:	cmp    eax,0x1
   19f3c:	jne    0x19fae
   19f3e:	xor    eax,eax
   19f40:	push   0x2
   19f42:	mov    WORD PTR [ebp-0x42],ax
   19f46:	pop    ecx
   19f47:	mov    ax,WORD PTR [ebp+ecx*1-0x44]
   19f4c:	add    ax,WORD PTR [ebp+ecx*1-0x24]
   19f51:	inc    ecx
   19f52:	mov    WORD PTR [ebp+ecx*1-0x43],ax
   19f57:	inc    ecx
   19f58:	cmp    ecx,0x1e
   19f5b:	jb     0x19f47
   19f5d:	mov    eax,DWORD PTR [ebp-0x4c]
   19f60:	xor    edi,edi
   19f62:	cmp    DWORD PTR [ebp+0x10],ebx
   19f65:	jbe    0x19f90
   19f67:	mov    ecx,DWORD PTR [ebp-0x7c]
   19f6a:	lea    ecx,[ecx+edi*2]
   19f6d:	cmp    WORD PTR [ecx],bx
   19f70:	je     0x19f8a
   19f72:	movzx  ebx,WORD PTR [ecx]
   19f75:	movzx  ebx,WORD PTR [ebp+ebx*2-0x44]
   19f7a:	mov    WORD PTR [eax+ebx*2],di
   19f7e:	movzx  ecx,WORD PTR [ecx]
   19f81:	lea    ecx,[ebp+ecx*2-0x44]
   19f85:	inc    WORD PTR [ecx]
   19f88:	xor    ebx,ebx
   19f8a:	inc    edi
   19f8b:	cmp    edi,DWORD PTR [ebp+0x10]
   19f8e:	jb     0x19f67
   19f90:	mov    ecx,DWORD PTR [ebp+0x8]
   19f93:	sub    ecx,ebx
   19f95:	je     0x19fd8
   19f97:	dec    ecx
   19f98:	je     0x19fb6
   19f9a:	or     DWORD PTR [ebp-0x68],0xffffffff
   19f9e:	mov    DWORD PTR [ebp-0x6c],0x6dcd8
   19fa5:	mov    DWORD PTR [ebp-0x78],0x6dd18
   19fac:	jmp    0x19fe5
   19fae:	or     eax,0xffffffff
   19fb1:	jmp    0x1a23b
   19fb6:	mov    ecx,0x202
   19fbb:	mov    edi,0x6dc58
   19fc0:	sub    edi,ecx
   19fc2:	mov    DWORD PTR [ebp-0x6c],edi
   19fc5:	mov    edi,0x6dc98
   19fca:	sub    edi,ecx
   19fcc:	mov    DWORD PTR [ebp-0x78],edi
   19fcf:	mov    DWORD PTR [ebp-0x68],0x100
   19fd6:	jmp    0x19fe5
   19fd8:	mov    DWORD PTR [ebp-0x78],eax
   19fdb:	mov    DWORD PTR [ebp-0x6c],eax
   19fde:	mov    DWORD PTR [ebp-0x68],0x13
   19fe5:	mov    ecx,DWORD PTR [ebp-0x54]
   19fe8:	or     DWORD PTR [ebp-0x74],0xffffffff
   19fec:	mov    edi,DWORD PTR [esi]
   19fee:	mov    eax,edx
   19ff0:	xor    edx,edx
   19ff2:	inc    edx
   19ff3:	shl    edx,cl
   19ff5:	cmp    DWORD PTR [ebp+0x8],0x1
   19ff9:	mov    DWORD PTR [ebp-0x5c],ebx
   19ffc:	mov    DWORD PTR [ebp-0x84],eax
   1a002:	lea    ecx,[edx-0x1]
   1a005:	mov    DWORD PTR [ebp-0x50],ebx
   1a008:	mov    DWORD PTR [ebp-0x80],edx
   1a00b:	mov    DWORD PTR [ebp-0x64],edx
   1a00e:	mov    DWORD PTR [ebp-0x88],ecx
   1a014:	jne    0x1a026
   1a016:	cmp    edx,0x5b0
   1a01c:	jb     0x1a026
   1a01e:	xor    eax,eax
   1a020:	inc    eax
   1a021:	jmp    0x1a23b
   1a026:	mov    ecx,DWORD PTR [ebp-0x4c]
   1a029:	mov    DWORD PTR [ebp-0x58],ecx
   1a02c:	mov    cl,al
   1a02e:	sub    cl,BYTE PTR [ebp-0x50]
   1a031:	mov    BYTE PTR [ebp-0x47],cl
   1a034:	mov    ecx,DWORD PTR [ebp-0x58]
   1a037:	movzx  edx,WORD PTR [ecx]
   1a03a:	movzx  ecx,dx
   1a03d:	cmp    ecx,DWORD PTR [ebp-0x68]
   1a040:	jge    0x1a04c
   1a042:	mov    BYTE PTR [ebp-0x48],0x0
   1a046:	mov    WORD PTR [ebp-0x46],dx
   1a04a:	jmp    0x1a072
   1a04c:	jle    0x1a068
   1a04e:	mov    ecx,DWORD PTR [ebp-0x58]
   1a051:	movzx  ecx,WORD PTR [ecx]
   1a054:	mov    edx,DWORD PTR [ebp-0x78]
   1a057:	add    ecx,ecx
   1a059:	mov    dl,BYTE PTR [ecx+edx*1]
   1a05c:	mov    BYTE PTR [ebp-0x48],dl
   1a05f:	mov    edx,DWORD PTR [ebp-0x6c]
   1a062:	mov    cx,WORD PTR [ecx+edx*1]
   1a066:	jmp    0x1a06e
   1a068:	mov    BYTE PTR [ebp-0x48],0x60
   1a06c:	xor    ecx,ecx
   1a06e:	mov    WORD PTR [ebp-0x46],cx
   1a072:	xor    edx,edx
   1a074:	mov    ecx,eax
   1a076:	sub    ecx,DWORD PTR [ebp-0x50]
   1a079:	inc    edx
   1a07a:	shl    edx,cl
   1a07c:	mov    ecx,DWORD PTR [ebp-0x80]
   1a07f:	mov    DWORD PTR [ebp-0x4c],ecx
   1a082:	mov    DWORD PTR [ebp-0x70],ecx
   1a085:	mov    ecx,DWORD PTR [ebp-0x50]
   1a088:	shr    ebx,cl
   1a08a:	add    ebx,DWORD PTR [ebp-0x4c]
   1a08d:	lea    ecx,[edi+ebx*4]
   1a090:	sub    DWORD PTR [ebp-0x4c],edx
   1a093:	mov    ebx,edx
   1a095:	shl    ebx,0x2
   1a098:	sub    ecx,ebx
   1a09a:	cmp    DWORD PTR [ebp-0x4c],0x0
   1a09e:	mov    ebx,DWORD PTR [ebp-0x48]
   1a0a1:	mov    DWORD PTR [ecx],ebx
   1a0a3:	jne    0x1a090
   1a0a5:	xor    edx,edx
   1a0a7:	lea    ecx,[eax-0x1]
   1a0aa:	inc    edx
   1a0ab:	shl    edx,cl
   1a0ad:	mov    ecx,DWORD PTR [ebp-0x5c]
   1a0b0:	jmp    0x1a0b4
   1a0b2:	shr    edx,1
   1a0b4:	test   ecx,edx
   1a0b6:	jne    0x1a0b2
   1a0b8:	test   edx,edx
   1a0ba:	je     0x1a0c5
   1a0bc:	lea    ebx,[edx-0x1]
   1a0bf:	and    ebx,ecx
   1a0c1:	add    ebx,edx
   1a0c3:	jmp    0x1a0c7
   1a0c5:	xor    ebx,ebx
   1a0c7:	add    DWORD PTR [ebp-0x58],0x2
   1a0cb:	lea    ecx,[ebp+eax*2-0x24]
   1a0cf:	mov    edx,0xffff
   1a0d4:	add    WORD PTR [ecx],dx
   1a0d7:	movzx  ecx,WORD PTR [ecx]
   1a0da:	mov    DWORD PTR [ebp-0x5c],ebx
   1a0dd:	test   cx,cx
   1a0e0:	jne    0x1a0fe
   1a0e2:	cmp    eax,DWORD PTR [ebp-0x60]
   1a0e5:	je     0x1a1c1
   1a0eb:	mov    eax,DWORD PTR [ebp-0x58]
   1a0ee:	movzx  eax,WORD PTR [eax]
   1a0f1:	mov    ecx,DWORD PTR [ebp-0x7c]
   1a0f4:	movzx  eax,WORD PTR [ecx+eax*2]
   1a0f8:	mov    DWORD PTR [ebp-0x84],eax
   1a0fe:	mov    edx,DWORD PTR [ebp-0x54]
   1a101:	cmp    eax,edx
   1a103:	jbe    0x1a02c
   1a109:	mov    ecx,DWORD PTR [ebp-0x88]
   1a10f:	and    ecx,ebx
   1a111:	mov    DWORD PTR [ebp-0x8c],ecx
   1a117:	cmp    ecx,DWORD PTR [ebp-0x74]
   1a11a:	je     0x1a02c
   1a120:	cmp    DWORD PTR [ebp-0x50],0x0
   1a124:	jne    0x1a129
   1a126:	mov    DWORD PTR [ebp-0x50],edx
   1a129:	mov    ecx,DWORD PTR [ebp-0x70]
   1a12c:	lea    edi,[edi+ecx*4]
   1a12f:	mov    ecx,eax
   1a131:	mov    eax,DWORD PTR [ebp-0x50]
   1a134:	xor    edx,edx
   1a136:	sub    ecx,eax
   1a138:	inc    edx
   1a139:	add    eax,ecx
   1a13b:	shl    edx,cl
   1a13d:	cmp    eax,DWORD PTR [ebp-0x60]
   1a140:	jae    0x1a16a
   1a142:	mov    DWORD PTR [ebp-0x4c],eax
   1a145:	lea    eax,[ebp+eax*2-0x24]
   1a149:	jmp    0x1a14e
   1a14b:	mov    eax,DWORD PTR [ebp-0x70]
   1a14e:	movzx  ebx,WORD PTR [eax]
   1a151:	sub    edx,ebx
   1a153:	test   edx,edx
   1a155:	jle    0x1a16a
   1a157:	inc    ecx
   1a158:	inc    DWORD PTR [ebp-0x4c]
   1a15b:	inc    eax
   1a15c:	inc    eax
   1a15d:	mov    DWORD PTR [ebp-0x70],eax
   1a160:	mov    eax,DWORD PTR [ebp-0x4c]
   1a163:	add    edx,edx
   1a165:	cmp    eax,DWORD PTR [ebp-0x60]
   1a168:	jb     0x1a14b
   1a16a:	xor    eax,eax
   1a16c:	inc    eax
   1a16d:	mov    edx,eax
   1a16f:	shl    edx,cl
   1a171:	add    DWORD PTR [ebp-0x64],edx
   1a174:	mov    DWORD PTR [ebp-0x80],edx
   1a177:	cmp    DWORD PTR [ebp+0x8],eax
   1a17a:	jne    0x1a189
   1a17c:	cmp    DWORD PTR [ebp-0x64],0x5b0
   1a183:	jae    0x1a23b
   1a189:	mov    eax,DWORD PTR [ebp-0x8c]
   1a18f:	mov    ebx,DWORD PTR [ebp-0x5c]
   1a192:	mov    edx,eax
   1a194:	mov    DWORD PTR [ebp-0x74],eax
   1a197:	mov    eax,DWORD PTR [esi]
   1a199:	shl    edx,0x2
   1a19c:	mov    BYTE PTR [edx+eax*1],cl
   1a19f:	mov    eax,DWORD PTR [esi]
   1a1a1:	mov    cl,BYTE PTR [ebp-0x54]
   1a1a4:	mov    BYTE PTR [edx+eax*1+0x1],cl
   1a1a8:	mov    eax,DWORD PTR [esi]
   1a1aa:	mov    ecx,edi
   1a1ac:	sub    ecx,eax
   1a1ae:	sar    ecx,0x2
   1a1b1:	mov    WORD PTR [edx+eax*1+0x2],cx
   1a1b6:	mov    eax,DWORD PTR [ebp-0x84]
   1a1bc:	jmp    0x1a02c
   1a1c1:	mov    cl,al
   1a1c3:	sub    cl,BYTE PTR [ebp-0x50]
   1a1c6:	mov    BYTE PTR [ebp-0x48],0x40
   1a1ca:	mov    BYTE PTR [ebp-0x47],cl
   1a1cd:	xor    ecx,ecx
   1a1cf:	mov    WORD PTR [ebp-0x46],cx
   1a1d3:	jmp    0x1a222
   1a1d5:	cmp    DWORD PTR [ebp-0x50],0x0
   1a1d9:	je     0x1a1f4
   1a1db:	mov    ecx,DWORD PTR [ebp-0x88]
   1a1e1:	and    ecx,ebx
   1a1e3:	cmp    ecx,DWORD PTR [ebp-0x74]
   1a1e6:	je     0x1a1f4
   1a1e8:	mov    eax,DWORD PTR [ebp-0x54]
   1a1eb:	and    DWORD PTR [ebp-0x50],0x0
   1a1ef:	mov    edi,DWORD PTR [esi]
   1a1f1:	mov    BYTE PTR [ebp-0x47],al
   1a1f4:	mov    ecx,DWORD PTR [ebp-0x50]
   1a1f7:	mov    edx,ebx
   1a1f9:	shr    edx,cl
   1a1fb:	mov    ecx,DWORD PTR [ebp-0x48]
   1a1fe:	mov    DWORD PTR [edi+edx*4],ecx
   1a201:	xor    edx,edx
   1a203:	lea    ecx,[eax-0x1]
   1a206:	inc    edx
   1a207:	shl    edx,cl
   1a209:	jmp    0x1a20d
   1a20b:	shr    edx,1
   1a20d:	test   ebx,edx
   1a20f:	jne    0x1a20b
   1a211:	test   edx,edx
   1a213:	je     0x1a220
   1a215:	lea    ecx,[edx-0x1]
   1a218:	and    ecx,ebx
   1a21a:	add    ecx,edx
   1a21c:	mov    ebx,ecx
   1a21e:	jmp    0x1a222
   1a220:	xor    ebx,ebx
   1a222:	test   ebx,ebx
   1a224:	jne    0x1a1d5
   1a226:	mov    eax,DWORD PTR [ebp-0x64]
   1a229:	mov    ecx,DWORD PTR [ebp-0x54]
   1a22c:	shl    eax,0x2
   1a22f:	add    DWORD PTR [esi],eax
   1a231:	mov    eax,DWORD PTR [ebp-0x90]
   1a237:	mov    DWORD PTR [eax],ecx
   1a239:	xor    eax,eax
   1a23b:	mov    ecx,DWORD PTR [ebp-0x4]
   1a23e:	pop    edi
   1a23f:	pop    esi
   1a240:	xor    ecx,ebp
   1a242:	pop    ebx
   1a243:	call   0x1a745
   1a248:	leave  
   1a249:	ret    0x18
   1a24c:	int3   
   1a24d:	int3   
   1a24e:	int3   
   1a24f:	int3   
   1a250:	int3   
   1a251:	int3   
   1a252:	mov    edi,edi
   1a254:	push   ebp
   1a255:	mov    ebp,esp
   1a257:	push   ebx
   1a258:	mov    ebx,DWORD PTR [ebp+0x10]
   1a25b:	push   esi
   1a25c:	mov    esi,DWORD PTR [ebp+0x8]
   1a25f:	push   edi
   1a260:	xor    eax,eax
   1a262:	mov    edi,esi
   1a264:	inc    eax
   1a265:	shr    edi,0x10
   1a268:	and    esi,0xffff
   1a26e:	cmp    ebx,eax
   1a270:	jne    0x1a296
   1a272:	mov    eax,DWORD PTR [ebp+0xc]
   1a275:	movzx  eax,BYTE PTR [eax]
   1a278:	add    esi,eax
   1a27a:	mov    eax,0xfff1
   1a27f:	cmp    esi,eax
   1a281:	jb     0x1a285
   1a283:	sub    esi,eax
   1a285:	add    edi,esi
   1a287:	cmp    edi,eax
   1a289:	jb     0x1a468
   1a28f:	sub    edi,eax
   1a291:	jmp    0x1a468
   1a296:	mov    ecx,DWORD PTR [ebp+0xc]
   1a299:	test   ecx,ecx
   1a29b:	je     0x1a46f
   1a2a1:	cmp    ebx,0x10
   1a2a4:	jb     0x1a42b
   1a2aa:	cmp    ebx,0x15b0
   1a2b0:	jb     0x1a37e
   1a2b6:	mov    eax,ebx
   1a2b8:	mov    ebx,0x15b0
   1a2bd:	xor    edx,edx
   1a2bf:	div    ebx
   1a2c1:	mov    ebx,DWORD PTR [ebp+0x10]
   1a2c4:	mov    DWORD PTR [ebp+0xc],eax
   1a2c7:	sub    ebx,0x15b0
   1a2cd:	mov    eax,0x15b
   1a2d2:	movzx  edx,BYTE PTR [ecx]
   1a2d5:	add    esi,edx
   1a2d7:	movzx  edx,BYTE PTR [ecx+0x1]
   1a2db:	add    edi,esi
   1a2dd:	add    esi,edx
   1a2df:	movzx  edx,BYTE PTR [ecx+0x2]
   1a2e3:	add    edi,esi
   1a2e5:	add    esi,edx
   1a2e7:	movzx  edx,BYTE PTR [ecx+0x3]
   1a2eb:	add    edi,esi
   1a2ed:	add    esi,edx
   1a2ef:	movzx  edx,BYTE PTR [ecx+0x4]
   1a2f3:	add    edi,esi
   1a2f5:	add    esi,edx
   1a2f7:	movzx  edx,BYTE PTR [ecx+0x5]
   1a2fb:	add    edi,esi
   1a2fd:	add    esi,edx
   1a2ff:	movzx  edx,BYTE PTR [ecx+0x6]
   1a303:	add    edi,esi
   1a305:	add    esi,edx
   1a307:	movzx  edx,BYTE PTR [ecx+0x7]
   1a30b:	add    edi,esi
   1a30d:	add    esi,edx
   1a30f:	movzx  edx,BYTE PTR [ecx+0x8]
   1a313:	add    edi,esi
   1a315:	add    esi,edx
   1a317:	movzx  edx,BYTE PTR [ecx+0x9]
   1a31b:	add    edi,esi
   1a31d:	add    esi,edx
   1a31f:	movzx  edx,BYTE PTR [ecx+0xa]
   1a323:	add    edi,esi
   1a325:	add    esi,edx
   1a327:	movzx  edx,BYTE PTR [ecx+0xb]
   1a32b:	add    edi,esi
   1a32d:	add    esi,edx
   1a32f:	movzx  edx,BYTE PTR [ecx+0xc]
   1a333:	add    edi,esi
   1a335:	add    esi,edx
   1a337:	movzx  edx,BYTE PTR [ecx+0xd]
   1a33b:	add    edi,esi
   1a33d:	add    esi,edx
   1a33f:	movzx  edx,BYTE PTR [ecx+0xe]
   1a343:	add    edi,esi
   1a345:	add    esi,edx
   1a347:	movzx  edx,BYTE PTR [ecx+0xf]
   1a34b:	add    edi,esi
   1a34d:	add    esi,edx
   1a34f:	add    edi,esi
   1a351:	add    ecx,0x10
   1a354:	dec    eax
   1a355:	jne    0x1a2d2
   1a35b:	mov    eax,esi
   1a35d:	xor    edx,edx
   1a35f:	mov    esi,0xfff1
   1a364:	div    esi
   1a366:	mov    eax,edi
   1a368:	mov    edi,0xfff1
   1a36d:	mov    esi,edx
   1a36f:	xor    edx,edx
   1a371:	div    edi
   1a373:	dec    DWORD PTR [ebp+0xc]
   1a376:	mov    edi,edx
   1a378:	jne    0x1a2c7
   1a37e:	test   ebx,ebx
   1a380:	je     0x1a468
   1a386:	cmp    ebx,0x10
   1a389:	jb     0x1a44d
   1a38f:	mov    eax,ebx
   1a391:	shr    eax,0x4
   1a394:	movzx  edx,BYTE PTR [ecx]
   1a397:	add    esi,edx
   1a399:	movzx  edx,BYTE PTR [ecx+0x1]
   1a39d:	add    edi,esi
   1a39f:	add    esi,edx
   1a3a1:	movzx  edx,BYTE PTR [ecx+0x2]
   1a3a5:	add    edi,esi
   1a3a7:	add    esi,edx
   1a3a9:	movzx  edx,BYTE PTR [ecx+0x3]
   1a3ad:	add    edi,esi
   1a3af:	add    esi,edx
   1a3b1:	movzx  edx,BYTE PTR [ecx+0x4]
   1a3b5:	add    edi,esi
   1a3b7:	add    esi,edx
   1a3b9:	movzx  edx,BYTE PTR [ecx+0x5]
   1a3bd:	add    edi,esi
   1a3bf:	add    esi,edx
   1a3c1:	movzx  edx,BYTE PTR [ecx+0x6]
   1a3c5:	add    edi,esi
   1a3c7:	add    esi,edx
   1a3c9:	movzx  edx,BYTE PTR [ecx+0x7]
   1a3cd:	add    edi,esi
   1a3cf:	add    esi,edx
   1a3d1:	movzx  edx,BYTE PTR [ecx+0x8]
   1a3d5:	add    edi,esi
   1a3d7:	add    esi,edx
   1a3d9:	movzx  edx,BYTE PTR [ecx+0x9]
   1a3dd:	add    edi,esi
   1a3df:	add    esi,edx
   1a3e1:	movzx  edx,BYTE PTR [ecx+0xa]
   1a3e5:	add    edi,esi
   1a3e7:	add    esi,edx
   1a3e9:	movzx  edx,BYTE PTR [ecx+0xb]
   1a3ed:	add    edi,esi
   1a3ef:	add    esi,edx
   1a3f1:	movzx  edx,BYTE PTR [ecx+0xc]
   1a3f5:	add    edi,esi
   1a3f7:	add    esi,edx
   1a3f9:	movzx  edx,BYTE PTR [ecx+0xd]
   1a3fd:	add    edi,esi
   1a3ff:	add    esi,edx
   1a401:	movzx  edx,BYTE PTR [ecx+0xe]
   1a405:	add    edi,esi
   1a407:	add    esi,edx
   1a409:	movzx  edx,BYTE PTR [ecx+0xf]
   1a40d:	add    edi,esi
   1a40f:	add    esi,edx
   1a411:	sub    ebx,0x10
   1a414:	add    edi,esi
   1a416:	add    ecx,0x10
   1a419:	dec    eax
   1a41a:	jne    0x1a394
   1a420:	jmp    0x1a44d
   1a422:	movzx  eax,BYTE PTR [ecx]
   1a425:	dec    ebx
   1a426:	add    esi,eax
   1a428:	inc    ecx
   1a429:	add    edi,esi
   1a42b:	test   ebx,ebx
   1a42d:	jne    0x1a422
   1a42f:	mov    ecx,0xfff1
   1a434:	cmp    esi,ecx
   1a436:	jb     0x1a43a
   1a438:	sub    esi,ecx
   1a43a:	mov    eax,edi
   1a43c:	xor    edx,edx
   1a43e:	div    ecx
   1a440:	mov    eax,edx
   1a442:	jmp    0x1a46a
   1a444:	movzx  eax,BYTE PTR [ecx]
   1a447:	dec    ebx
   1a448:	add    esi,eax
   1a44a:	inc    ecx
   1a44b:	add    edi,esi
   1a44d:	test   ebx,ebx
   1a44f:	jne    0x1a444
   1a451:	mov    eax,esi
   1a453:	mov    ecx,0xfff1
   1a458:	xor    edx,edx
   1a45a:	mov    esi,ecx
   1a45c:	div    esi
   1a45e:	mov    eax,edi
   1a460:	mov    esi,edx
   1a462:	xor    edx,edx
   1a464:	div    ecx
   1a466:	mov    edi,edx
   1a468:	mov    eax,edi
   1a46a:	shl    eax,0x10
   1a46d:	or     eax,esi
   1a46f:	pop    edi
   1a470:	pop    esi
   1a471:	pop    ebx
   1a472:	pop    ebp
   1a473:	ret    0xc
   1a476:	int3   
   1a477:	int3   
   1a478:	int3   
   1a479:	int3   
   1a47a:	int3   
   1a47b:	int3   
   1a47c:	mov    edi,edi
   1a47e:	push   ebp
   1a47f:	mov    ebp,esp
   1a481:	push   ecx
   1a482:	cmp    DWORD PTR [ebp+0x8],0x0
   1a486:	push   esi
   1a487:	not    eax
   1a489:	mov    ecx,0xff
   1a48e:	je     0x1a4ac
   1a490:	test   dl,0x3
   1a493:	je     0x1a4ac
   1a495:	movzx  esi,BYTE PTR [edx]
   1a498:	xor    esi,eax
   1a49a:	and    esi,ecx
   1a49c:	shr    eax,0x8
   1a49f:	xor    eax,DWORD PTR [esi*4+0x6dd58]
   1a4a6:	inc    edx
   1a4a7:	dec    DWORD PTR [ebp+0x8]
   1a4aa:	jne    0x1a490
   1a4ac:	cmp    DWORD PTR [ebp+0x8],0x20
   1a4b0:	push   ebx
   1a4b1:	push   edi
   1a4b2:	push   0x4
   1a4b4:	mov    esi,edx
   1a4b6:	pop    edi
   1a4b7:	jb     0x1a67b
   1a4bd:	mov    edx,DWORD PTR [ebp+0x8]
   1a4c0:	shr    edx,0x5
   1a4c3:	mov    DWORD PTR [ebp-0x4],edx
   1a4c6:	xor    eax,DWORD PTR [esi]
   1a4c8:	add    esi,edi
   1a4ca:	mov    edx,eax
   1a4cc:	shr    edx,0x10
   1a4cf:	mov    ebx,eax
   1a4d1:	shr    ebx,0x8
   1a4d4:	and    edx,ecx
   1a4d6:	mov    edx,DWORD PTR [edx*4+0x6e158]
   1a4dd:	and    ebx,ecx
   1a4df:	xor    edx,DWORD PTR [ebx*4+0x6e558]
   1a4e6:	mov    ebx,eax
   1a4e8:	shr    ebx,0x18
   1a4eb:	xor    edx,DWORD PTR [ebx*4+0x6dd58]
   1a4f2:	and    eax,ecx
   1a4f4:	xor    edx,DWORD PTR [eax*4+0x6e958]
   1a4fb:	xor    edx,DWORD PTR [esi]
   1a4fd:	add    esi,edi
   1a4ff:	mov    eax,edx
   1a501:	shr    eax,0x10
   1a504:	mov    ebx,edx
   1a506:	shr    ebx,0x8
   1a509:	and    eax,ecx
   1a50b:	mov    eax,DWORD PTR [eax*4+0x6e158]
   1a512:	and    ebx,ecx
   1a514:	xor    eax,DWORD PTR [ebx*4+0x6e558]
   1a51b:	mov    ebx,edx
   1a51d:	shr    ebx,0x18
   1a520:	xor    eax,DWORD PTR [ebx*4+0x6dd58]
   1a527:	and    edx,ecx
   1a529:	xor    eax,DWORD PTR [edx*4+0x6e958]
   1a530:	xor    eax,DWORD PTR [esi]
   1a532:	add    esi,edi
   1a534:	mov    edx,eax
   1a536:	shr    edx,0x10
   1a539:	mov    ebx,eax
   1a53b:	and    edx,ecx
   1a53d:	mov    edx,DWORD PTR [edx*4+0x6e158]
   1a544:	shr    ebx,0x8
   1a547:	and    ebx,ecx
   1a549:	xor    edx,DWORD PTR [ebx*4+0x6e558]
   1a550:	mov    ebx,eax
   1a552:	shr    ebx,0x18
   1a555:	xor    edx,DWORD PTR [ebx*4+0x6dd58]
   1a55c:	and    eax,ecx
   1a55e:	xor    edx,DWORD PTR [eax*4+0x6e958]
   1a565:	xor    edx,DWORD PTR [esi]
   1a567:	add    esi,edi
   1a569:	mov    eax,edx
   1a56b:	shr    eax,0x10
   1a56e:	mov    ebx,edx
   1a570:	shr    ebx,0x8
   1a573:	and    eax,ecx
   1a575:	mov    eax,DWORD PTR [eax*4+0x6e158]
   1a57c:	and    ebx,ecx
   1a57e:	xor    eax,DWORD PTR [ebx*4+0x6e558]
   1a585:	mov    ebx,edx
   1a587:	shr    ebx,0x18
   1a58a:	xor    eax,DWORD PTR [ebx*4+0x6dd58]
   1a591:	and    edx,ecx
   1a593:	xor    eax,DWORD PTR [edx*4+0x6e958]
   1a59a:	xor    eax,DWORD PTR [esi]
   1a59c:	add    esi,edi
   1a59e:	mov    edx,eax
   1a5a0:	shr    edx,0x10
   1a5a3:	mov    ebx,eax
   1a5a5:	and    edx,ecx
   1a5a7:	mov    edx,DWORD PTR [edx*4+0x6e158]
   1a5ae:	shr    ebx,0x8
   1a5b1:	and    ebx,ecx
   1a5b3:	xor    edx,DWORD PTR [ebx*4+0x6e558]
   1a5ba:	mov    ebx,eax
   1a5bc:	shr    ebx,0x18
   1a5bf:	xor    edx,DWORD PTR [ebx*4+0x6dd58]
   1a5c6:	and    eax,ecx
   1a5c8:	xor    edx,DWORD PTR [eax*4+0x6e958]
   1a5cf:	xor    edx,DWORD PTR [esi]
   1a5d1:	add    esi,edi
   1a5d3:	mov    eax,edx
   1a5d5:	shr    eax,0x10
   1a5d8:	and    eax,ecx
   1a5da:	mov    ebx,edx
   1a5dc:	mov    eax,DWORD PTR [eax*4+0x6e158]
   1a5e3:	shr    ebx,0x8
   1a5e6:	and    ebx,ecx
   1a5e8:	xor    eax,DWORD PTR [ebx*4+0x6e558]
   1a5ef:	mov    ebx,edx
   1a5f1:	shr    ebx,0x18
   1a5f4:	xor    eax,DWORD PTR [ebx*4+0x6dd58]
   1a5fb:	and    edx,ecx
   1a5fd:	xor    eax,DWORD PTR [edx*4+0x6e958]
   1a604:	sub    DWORD PTR [ebp+0x8],0x20
   1a608:	xor    eax,DWORD PTR [esi]
   1a60a:	add    esi,edi
   1a60c:	mov    edx,eax
   1a60e:	mov    ebx,eax
   1a610:	shr    edx,0x10
   1a613:	shr    ebx,0x8
   1a616:	and    edx,ecx
   1a618:	mov    edx,DWORD PTR [edx*4+0x6e158]
   1a61f:	and    ebx,ecx
   1a621:	xor    edx,DWORD PTR [ebx*4+0x6e558]
   1a628:	mov    ebx,eax
   1a62a:	shr    ebx,0x18
   1a62d:	xor    edx,DWORD PTR [ebx*4+0x6dd58]
   1a634:	and    eax,ecx
   1a636:	xor    edx,DWORD PTR [eax*4+0x6e958]
   1a63d:	xor    edx,DWORD PTR [esi]
   1a63f:	add    esi,edi
   1a641:	mov    eax,edx
   1a643:	shr    eax,0x10
   1a646:	and    eax,ecx
   1a648:	mov    eax,DWORD PTR [eax*4+0x6e158]
   1a64f:	mov    ebx,edx
   1a651:	shr    ebx,0x8
   1a654:	and    ebx,ecx
   1a656:	xor    eax,DWORD PTR [ebx*4+0x6e558]
   1a65d:	mov    ebx,edx
   1a65f:	shr    ebx,0x18
   1a662:	xor    eax,DWORD PTR [ebx*4+0x6dd58]
   1a669:	and    edx,ecx
   1a66b:	xor    eax,DWORD PTR [edx*4+0x6e958]
   1a672:	dec    DWORD PTR [ebp-0x4]
   1a675:	jne    0x1a4c6
   1a67b:	cmp    DWORD PTR [ebp+0x8],edi
   1a67e:	jb     0x1a6c8
   1a680:	mov    edx,DWORD PTR [ebp+0x8]
   1a683:	shr    edx,0x2
   1a686:	mov    DWORD PTR [ebp-0x4],edx
   1a689:	xor    eax,DWORD PTR [esi]
   1a68b:	sub    DWORD PTR [ebp+0x8],edi
   1a68e:	mov    edx,eax
   1a690:	shr    edx,0x10
   1a693:	and    edx,ecx
   1a695:	mov    edx,DWORD PTR [edx*4+0x6e158]
   1a69c:	mov    ebx,eax
   1a69e:	shr    ebx,0x8
   1a6a1:	and    ebx,ecx
   1a6a3:	xor    edx,DWORD PTR [ebx*4+0x6e558]
   1a6aa:	mov    ebx,eax
   1a6ac:	shr    ebx,0x18
   1a6af:	xor    edx,DWORD PTR [ebx*4+0x6dd58]
   1a6b6:	and    eax,ecx
   1a6b8:	xor    edx,DWORD PTR [eax*4+0x6e958]
   1a6bf:	add    esi,edi
   1a6c1:	dec    DWORD PTR [ebp-0x4]
   1a6c4:	mov    eax,edx
   1a6c6:	jne    0x1a689
   1a6c8:	cmp    DWORD PTR [ebp+0x8],0x0
   1a6cc:	pop    edi
   1a6cd:	pop    ebx
   1a6ce:	je     0x1a6e7
   1a6d0:	movzx  edx,BYTE PTR [esi]
   1a6d3:	xor    edx,eax
   1a6d5:	and    edx,ecx
   1a6d7:	shr    eax,0x8
   1a6da:	xor    eax,DWORD PTR [edx*4+0x6dd58]
   1a6e1:	inc    esi
   1a6e2:	dec    DWORD PTR [ebp+0x8]
   1a6e5:	jne    0x1a6d0
   1a6e7:	not    eax
   1a6e9:	pop    esi
   1a6ea:	leave  
   1a6eb:	ret    0x4
   1a6ee:	int3   
   1a6ef:	int3   
   1a6f0:	int3   
   1a6f1:	int3   
   1a6f2:	int3   
   1a6f3:	int3   
   1a6f4:	mov    edi,edi
   1a6f6:	push   ebp
   1a6f7:	mov    ebp,esp
   1a6f9:	mov    edx,DWORD PTR [ebp+0xc]
   1a6fc:	test   edx,edx
   1a6fe:	jne    0x1a704
   1a700:	xor    eax,eax
   1a702:	jmp    0x1a70f
   1a704:	push   DWORD PTR [ebp+0x10]
   1a707:	mov    eax,DWORD PTR [ebp+0x8]
   1a70a:	call   0x1a47c
   1a70f:	pop    ebp
   1a710:	ret    0xc
   1a713:	int3   
   1a714:	int3   
   1a715:	int3   
   1a716:	int3   
   1a717:	int3   
   1a718:	mov    edi,edi
   1a71a:	push   ebp
   1a71b:	mov    ebp,esp
   1a71d:	push   0x20
   1a71f:	push   0x61737973
   1a724:	push   DWORD PTR [ebp+0x8]
   1a727:	push   0x1
   1a729:	call   DWORD PTR ds:0x1b918
   1a72f:	test   eax,eax
   1a731:	jne    0x1a73e
   1a733:	push   0xc000009a
   1a738:	call   DWORD PTR ds:0x1b914
   1a73e:	pop    ebp
   1a73f:	ret    
   1a740:	int3   
   1a741:	int3   
   1a742:	int3   
   1a743:	int3   
   1a744:	int3   
   1a745:	cmp    ecx,DWORD PTR ds:0x70100
   1a74b:	jne    0x1a750
   1a74d:	ret    0x0
   1a750:	jmp    0x1a75a
   1a755:	int3   
   1a756:	int3   
   1a757:	int3   
   1a758:	int3   
   1a759:	int3   
   1a75a:	mov    edi,edi
   1a75c:	push   ebp
   1a75d:	mov    ebp,esp
   1a75f:	push   ecx
   1a760:	mov    DWORD PTR [ebp-0x4],ecx
   1a763:	push   0x0
   1a765:	push   DWORD PTR ds:0x70104
   1a76b:	push   DWORD PTR ds:0x70100
   1a771:	push   DWORD PTR [ebp-0x4]
   1a774:	push   0xf7
   1a779:	call   DWORD PTR ds:0x1b9cc
   1a77f:	int3   
   1a780:	int3   
   1a781:	int3   
   1a782:	int3   
   1a783:	int3   
   1a784:	int3   
   1a785:	int3   
   1a786:	jmp    DWORD PTR ds:0x1b90c
   1a78c:	int3   
   1a78d:	int3   
   1a78e:	int3   
   1a78f:	int3   
   1a790:	int3   
   1a791:	int3   
   1a792:	jmp    DWORD PTR ds:0x1b910
   1a798:	int3   
   1a799:	int3   
   1a79a:	int3   
   1a79b:	int3   
   1a79c:	int3   
   1a79d:	int3   
   1a79e:	jmp    DWORD PTR ds:0x1b93c
   1a7a4:	int3   
   1a7a5:	int3   
   1a7a6:	int3   
   1a7a7:	int3   
   1a7a8:	int3   
   1a7a9:	int3   
   1a7aa:	jmp    DWORD PTR ds:0x1b940
   1a7b0:	int3   
   1a7b1:	int3   
   1a7b2:	int3   
   1a7b3:	int3   
   1a7b4:	int3   
   1a7b5:	int3   
   1a7b6:	jmp    DWORD PTR ds:0x1b95c
   1a7bc:	int3   
   1a7bd:	int3   
   1a7be:	int3   
   1a7bf:	int3   
   1a7c0:	int3   
   1a7c1:	int3   
   1a7c2:	jmp    DWORD PTR ds:0x1b9a0
   1a7c8:	int3   
   1a7c9:	int3   
   1a7ca:	int3   
   1a7cb:	int3   
   1a7cc:	int3   
   1a7cd:	int3   
   1a7ce:	jmp    DWORD PTR ds:0x1b9a8
   1a7d4:	int3   
   1a7d5:	int3   
   1a7d6:	int3   
   1a7d7:	int3   
   1a7d8:	int3   
   1a7d9:	int3   
   1a7da:	jmp    DWORD PTR ds:0x1b9b0
   1a7e0:	int3   
   1a7e1:	int3   
   1a7e2:	int3   
   1a7e3:	int3   
   1a7e4:	int3   
   1a7e5:	int3   
   1a7e6:	jmp    DWORD PTR ds:0x1b9b4
   1a7ec:	int3   
   1a7ed:	int3   
   1a7ee:	int3   
   1a7ef:	int3   
   1a7f0:	int3   
   1a7f1:	int3   
   1a7f2:	int3   
   1a7f3:	int3   
   1a7f4:	push   0x1a860
   1a7f9:	push   DWORD PTR fs:0x0
   1a800:	mov    eax,DWORD PTR [esp+0x10]
   1a804:	mov    DWORD PTR [esp+0x10],ebp
   1a808:	lea    ebp,[esp+0x10]
   1a80c:	sub    esp,eax
   1a80e:	push   ebx
   1a80f:	push   esi
   1a810:	push   edi
   1a811:	mov    eax,ds:0x70100
   1a816:	xor    DWORD PTR [ebp-0x4],eax
   1a819:	xor    eax,ebp
   1a81b:	push   eax
   1a81c:	mov    DWORD PTR [ebp-0x18],esp
   1a81f:	push   DWORD PTR [ebp-0x8]
   1a822:	mov    eax,DWORD PTR [ebp-0x4]
   1a825:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1a82c:	mov    DWORD PTR [ebp-0x8],eax
   1a82f:	lea    eax,[ebp-0x10]
   1a832:	mov    fs:0x0,eax
   1a838:	ret    
   1a839:	mov    ecx,DWORD PTR [ebp-0x10]
   1a83c:	mov    DWORD PTR fs:0x0,ecx
   1a843:	pop    ecx
   1a844:	pop    edi
   1a845:	pop    edi
   1a846:	pop    esi
   1a847:	pop    ebx
   1a848:	mov    esp,ebp
   1a84a:	pop    ebp
   1a84b:	push   ecx
   1a84c:	ret    
   1a84d:	int3   
   1a84e:	int3   
   1a84f:	int3   
   1a850:	int3   
   1a851:	int3   
   1a852:	int3   
   1a853:	int3   
   1a854:	int3   
   1a855:	int3   
   1a856:	int3   
   1a857:	int3   
   1a858:	int3   
   1a859:	int3   
   1a85a:	int3   
   1a85b:	int3   
   1a85c:	int3   
   1a85d:	int3   
   1a85e:	int3   
   1a85f:	int3   
   1a860:	mov    edi,edi
   1a862:	push   ebp
   1a863:	mov    ebp,esp
   1a865:	sub    esp,0x14
   1a868:	push   ebx
   1a869:	mov    ebx,DWORD PTR [ebp+0xc]
   1a86c:	push   esi
   1a86d:	mov    esi,DWORD PTR [ebx+0x8]
   1a870:	xor    esi,DWORD PTR ds:0x70100
   1a876:	push   edi
   1a877:	mov    eax,DWORD PTR [esi]
   1a879:	mov    BYTE PTR [ebp-0x1],0x0
   1a87d:	mov    DWORD PTR [ebp-0x8],0x1
   1a884:	lea    edi,[ebx+0x10]
   1a887:	cmp    eax,0xfffffffe
   1a88a:	je     0x1a899
   1a88c:	mov    ecx,DWORD PTR [esi+0x4]
   1a88f:	add    ecx,edi
   1a891:	xor    ecx,DWORD PTR [eax+edi*1]
   1a894:	call   0x1a745
   1a899:	mov    ecx,DWORD PTR [esi+0xc]
   1a89c:	mov    eax,DWORD PTR [esi+0x8]
   1a89f:	add    ecx,edi
   1a8a1:	xor    ecx,DWORD PTR [eax+edi*1]
   1a8a4:	call   0x1a745
   1a8a9:	mov    eax,DWORD PTR [ebp+0x8]
   1a8ac:	test   BYTE PTR [eax+0x4],0x66
   1a8b0:	jne    0x1a998
   1a8b6:	mov    ecx,DWORD PTR [ebp+0x10]
   1a8b9:	lea    edx,[ebp-0x14]
   1a8bc:	mov    DWORD PTR [ebx-0x4],edx
   1a8bf:	mov    ebx,DWORD PTR [ebx+0xc]
   1a8c2:	mov    DWORD PTR [ebp-0x14],eax
   1a8c5:	mov    DWORD PTR [ebp-0x10],ecx
   1a8c8:	cmp    ebx,0xfffffffe
   1a8cb:	je     0x1a92c
   1a8cd:	lea    ecx,[ecx+0x0]
   1a8d0:	lea    eax,[ebx+ebx*2]
   1a8d3:	mov    ecx,DWORD PTR [esi+eax*4+0x14]
   1a8d7:	lea    eax,[esi+eax*4+0x10]
   1a8db:	mov    DWORD PTR [ebp-0xc],eax
   1a8de:	mov    eax,DWORD PTR [eax]
   1a8e0:	mov    DWORD PTR [ebp+0x8],eax
   1a8e3:	test   ecx,ecx
   1a8e5:	je     0x1a8fb
   1a8e7:	mov    edx,edi
   1a8e9:	call   0x1aaa1
   1a8ee:	mov    BYTE PTR [ebp-0x1],0x1
   1a8f2:	test   eax,eax
   1a8f4:	jl     0x1a936
   1a8f6:	jg     0x1a93f
   1a8f8:	mov    eax,DWORD PTR [ebp+0x8]
   1a8fb:	mov    ebx,eax
   1a8fd:	cmp    eax,0xfffffffe
   1a900:	jne    0x1a8d0
   1a902:	cmp    BYTE PTR [ebp-0x1],0x0
   1a906:	je     0x1a92c
   1a908:	mov    eax,DWORD PTR [esi]
   1a90a:	cmp    eax,0xfffffffe
   1a90d:	je     0x1a91c
   1a90f:	mov    ecx,DWORD PTR [esi+0x4]
   1a912:	add    ecx,edi
   1a914:	xor    ecx,DWORD PTR [eax+edi*1]
   1a917:	call   0x1a745
   1a91c:	mov    ecx,DWORD PTR [esi+0xc]
   1a91f:	mov    edx,DWORD PTR [esi+0x8]
   1a922:	add    ecx,edi
   1a924:	xor    ecx,DWORD PTR [edx+edi*1]
   1a927:	call   0x1a745
   1a92c:	mov    eax,DWORD PTR [ebp-0x8]
   1a92f:	pop    edi
   1a930:	pop    esi
   1a931:	pop    ebx
   1a932:	mov    esp,ebp
   1a934:	pop    ebp
   1a935:	ret    
   1a936:	mov    DWORD PTR [ebp-0x8],0x0
   1a93d:	jmp    0x1a908
   1a93f:	mov    ecx,DWORD PTR [ebp+0xc]
   1a942:	call   0x1aaca
   1a947:	mov    eax,DWORD PTR [ebp+0xc]
   1a94a:	cmp    DWORD PTR [eax+0xc],ebx
   1a94d:	je     0x1a961
   1a94f:	push   0x70100
   1a954:	push   edi
   1a955:	mov    edx,ebx
   1a957:	mov    ecx,eax
   1a959:	call   0x1aae4
   1a95e:	mov    eax,DWORD PTR [ebp+0xc]
   1a961:	mov    ecx,DWORD PTR [ebp+0x8]
   1a964:	mov    DWORD PTR [eax+0xc],ecx
   1a967:	mov    eax,DWORD PTR [esi]
   1a969:	cmp    eax,0xfffffffe
   1a96c:	je     0x1a97b
   1a96e:	mov    ecx,DWORD PTR [esi+0x4]
   1a971:	add    ecx,edi
   1a973:	xor    ecx,DWORD PTR [eax+edi*1]
   1a976:	call   0x1a745
   1a97b:	mov    ecx,DWORD PTR [esi+0xc]
   1a97e:	mov    edx,DWORD PTR [esi+0x8]
   1a981:	add    ecx,edi
   1a983:	xor    ecx,DWORD PTR [edx+edi*1]
   1a986:	call   0x1a745
   1a98b:	mov    eax,DWORD PTR [ebp-0xc]
   1a98e:	mov    ecx,DWORD PTR [eax+0x8]
   1a991:	mov    edx,edi
   1a993:	call   0x1aab8
   1a998:	mov    edx,0xfffffffe
   1a99d:	cmp    DWORD PTR [ebx+0xc],edx
   1a9a0:	je     0x1a92c
   1a9a2:	push   0x70100
   1a9a7:	push   edi
   1a9a8:	mov    ecx,ebx
   1a9aa:	call   0x1aae4
   1a9af:	jmp    0x1a908
   1a9b4:	int3   
   1a9b5:	int3   
   1a9b6:	int3   
   1a9b7:	int3   
   1a9b8:	int3   
   1a9b9:	int3   
   1a9ba:	int3   
   1a9bb:	int3   
   1a9bc:	push   ebx
   1a9bd:	push   esi
   1a9be:	push   edi
   1a9bf:	mov    edx,DWORD PTR [esp+0x10]
   1a9c3:	mov    eax,DWORD PTR [esp+0x14]
   1a9c7:	mov    ecx,DWORD PTR [esp+0x18]
   1a9cb:	push   ebp
   1a9cc:	push   edx
   1a9cd:	push   eax
   1a9ce:	push   ecx
   1a9cf:	push   ecx
   1a9d0:	push   0x1aa3f
   1a9d5:	push   DWORD PTR fs:0x0
   1a9dc:	mov    eax,ds:0x70100
   1a9e1:	xor    eax,esp
   1a9e3:	mov    DWORD PTR [esp+0x8],eax
   1a9e7:	mov    DWORD PTR fs:0x0,esp
   1a9ee:	mov    eax,DWORD PTR [esp+0x30]
   1a9f2:	mov    ebx,DWORD PTR [eax+0x8]
   1a9f5:	mov    ecx,DWORD PTR [esp+0x2c]
   1a9f9:	xor    ebx,DWORD PTR [ecx]
   1a9fb:	mov    esi,DWORD PTR [eax+0xc]
   1a9fe:	cmp    esi,0xfffffffe
   1aa01:	je     0x1aa31
   1aa03:	mov    edx,DWORD PTR [esp+0x34]
   1aa07:	cmp    edx,0xfffffffe
   1aa0a:	je     0x1aa10
   1aa0c:	cmp    esi,edx
   1aa0e:	jbe    0x1aa31
   1aa10:	lea    esi,[esi+esi*2]
   1aa13:	lea    ebx,[ebx+esi*4+0x10]
   1aa17:	mov    ecx,DWORD PTR [ebx]
   1aa19:	mov    DWORD PTR [eax+0xc],ecx
   1aa1c:	cmp    DWORD PTR [ebx+0x4],0x0
   1aa20:	jne    0x1a9ee
   1aa22:	mov    ecx,0x1
   1aa27:	mov    eax,DWORD PTR [ebx+0x8]
   1aa2a:	call   0x1ab5c
   1aa2f:	jmp    0x1a9ee
   1aa31:	pop    DWORD PTR fs:0x0
   1aa38:	add    esp,0x18
   1aa3b:	pop    edi
   1aa3c:	pop    esi
   1aa3d:	pop    ebx
   1aa3e:	ret    
   1aa3f:	mov    ecx,DWORD PTR [esp+0x4]
   1aa43:	test   DWORD PTR [ecx+0x4],0x6
   1aa4a:	mov    eax,0x1
   1aa4f:	je     0x1aa84
   1aa51:	mov    eax,DWORD PTR [esp+0x8]
   1aa55:	mov    ecx,DWORD PTR [eax+0x8]
   1aa58:	xor    ecx,eax
   1aa5a:	call   0x1a745
   1aa5f:	push   ebp
   1aa60:	mov    ebp,DWORD PTR [eax+0x18]
   1aa63:	push   DWORD PTR [eax+0xc]
   1aa66:	push   DWORD PTR [eax+0x10]
   1aa69:	push   DWORD PTR [eax+0x14]
   1aa6c:	call   0x1a9bc
   1aa71:	add    esp,0xc
   1aa74:	pop    ebp
   1aa75:	mov    eax,DWORD PTR [esp+0x8]
   1aa79:	mov    edx,DWORD PTR [esp+0x10]
   1aa7d:	mov    DWORD PTR [edx],eax
   1aa7f:	mov    eax,0x3
   1aa84:	ret    
   1aa85:	push   ebp
   1aa86:	mov    ecx,DWORD PTR [esp+0x8]
   1aa8a:	mov    ebp,DWORD PTR [ecx]
   1aa8c:	push   DWORD PTR [ecx+0x1c]
   1aa8f:	push   DWORD PTR [ecx+0x18]
   1aa92:	push   DWORD PTR [ecx+0x28]
   1aa95:	call   0x1a9bc
   1aa9a:	add    esp,0xc
   1aa9d:	pop    ebp
   1aa9e:	ret    0x4
   1aaa1:	push   ebp
   1aaa2:	push   esi
   1aaa3:	push   edi
   1aaa4:	push   ebx
   1aaa5:	mov    ebp,edx
   1aaa7:	xor    eax,eax
   1aaa9:	xor    ebx,ebx
   1aaab:	xor    edx,edx
   1aaad:	xor    esi,esi
   1aaaf:	xor    edi,edi
   1aab1:	call   ecx
   1aab3:	pop    ebx
   1aab4:	pop    edi
   1aab5:	pop    esi
   1aab6:	pop    ebp
   1aab7:	ret    
   1aab8:	mov    ebp,edx
   1aaba:	mov    esi,ecx
   1aabc:	mov    eax,ecx
   1aabe:	xor    eax,eax
   1aac0:	xor    ebx,ebx
   1aac2:	xor    ecx,ecx
   1aac4:	xor    edx,edx
   1aac6:	xor    edi,edi
   1aac8:	jmp    esi
   1aaca:	push   ebp
   1aacb:	mov    ebp,esp
   1aacd:	push   ebx
   1aace:	push   esi
   1aacf:	push   edi
   1aad0:	push   0x0
   1aad2:	push   0x0
   1aad4:	push   0x1aadf
   1aad9:	push   ecx
   1aada:	call   0x1ab64
   1aadf:	pop    edi
   1aae0:	pop    esi
   1aae1:	pop    ebx
   1aae2:	pop    ebp
   1aae3:	ret    
   1aae4:	push   ebp
   1aae5:	mov    ebp,DWORD PTR [esp+0x8]
   1aae9:	push   edx
   1aaea:	push   ecx
   1aaeb:	push   DWORD PTR [esp+0x14]
   1aaef:	call   0x1a9bc
   1aaf4:	add    esp,0xc
   1aaf7:	pop    ebp
   1aaf8:	ret    0x8
   1aafb:	int3   
   1aafc:	int3   
   1aafd:	int3   
   1aafe:	int3   
   1aaff:	int3   
   1ab00:	push   0x1a860
   1ab05:	push   DWORD PTR fs:0x0
   1ab0c:	mov    eax,DWORD PTR [esp+0x10]
   1ab10:	mov    DWORD PTR [esp+0x10],ebp
   1ab14:	lea    ebp,[esp+0x10]
   1ab18:	sub    esp,eax
   1ab1a:	push   ebx
   1ab1b:	push   esi
   1ab1c:	push   edi
   1ab1d:	mov    eax,ds:0x70100
   1ab22:	xor    DWORD PTR [ebp-0x4],eax
   1ab25:	xor    eax,ebp
   1ab27:	mov    DWORD PTR [ebp-0x1c],eax
   1ab2a:	push   eax
   1ab2b:	mov    DWORD PTR [ebp-0x18],esp
   1ab2e:	push   DWORD PTR [ebp-0x8]
   1ab31:	mov    eax,DWORD PTR [ebp-0x4]
   1ab34:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1ab3b:	mov    DWORD PTR [ebp-0x8],eax
   1ab3e:	lea    eax,[ebp-0x10]
   1ab41:	mov    fs:0x0,eax
   1ab47:	ret    
   1ab48:	mov    ecx,DWORD PTR [ebp-0x1c]
   1ab4b:	xor    ecx,ebp
   1ab4d:	call   0x1a745
   1ab52:	jmp    0x1a839
   1ab57:	int3   
   1ab58:	int3   
   1ab59:	int3   
   1ab5a:	int3   
   1ab5b:	int3   
   1ab5c:	call   eax
   1ab5e:	ret    
   1ab5f:	int3   
   1ab60:	int3   
   1ab61:	int3   
   1ab62:	int3   
   1ab63:	int3   
   1ab64:	jmp    DWORD PTR ds:0x1b9d8
   1ab6a:	pop    esp
   1ab6b:	add    BYTE PTR [eax],al
   1ab6d:	add    BYTE PTR [eax],al
   1ab6f:	add    BYTE PTR [ebx+0x0],ch
   1ab72:	bound  eax,QWORD PTR [eax]
   1ab74:	add    BYTE PTR fs:[ecx+0x0],dh
   1ab78:	add    BYTE PTR [eax],al
   1ab7a:	add    BYTE PTR fs:[ebx],dh
   1ab7d:	add    BYTE PTR [eax+eax*1+0x73],ah
   1ab81:	add    BYTE PTR [eax],al
   1ab83:	add    BYTE PTR [esi+0x0],ch
   1ab86:	je     0x1ab88
   1ab88:	outs   dx,BYTE PTR ds:[esi]
   1ab89:	add    BYTE PTR [eax],al
   1ab8b:	add    BYTE PTR [ebx+0x0],dh
   1ab8e:	jns    0x1ab90
   1ab90:	jae    0x1ab92
   1ab92:	popa   
   1ab93:	add    BYTE PTR [eax],al
   1ab95:	add    BYTE PTR [edi+0x0],dh
   1ab98:	imul   eax,DWORD PTR [eax],0x65006e
   1ab9e:	add    BYTE PTR [eax],al
   1aba0:	jo     0x1aba2
   1aba2:	arpl   WORD PTR [eax],ax
   1aba4:	imul   eax,DWORD PTR [eax],0x6d0000
   1abaa:	jae    0x1abac
   1abac:	jb     0x1abae
   1abae:	add    BYTE PTR [eax],al
   1abb0:	je     0x1abb2
   1abb2:	ins    DWORD PTR es:[edi],dx
   1abb3:	add    BYTE PTR [eax+0x0],dh
   1abb6:	add    BYTE PTR [eax],al
   1abb8:	jne    0x1abba
   1abba:	jae    0x1abbc
   1abbc:	bound  eax,QWORD PTR [eax]
   1abbe:	add    BYTE PTR [eax],al
   1abc0:	outs   dx,DWORD PTR ds:[esi]
   1abc1:	add    BYTE PTR [eax+eax*1+0x65],ch
   1abc5:	add    BYTE PTR [eax],al
   1abc7:	add    BYTE PTR [ecx+0x0],ah
   1abca:	imul   eax,DWORD PTR [eax],0x70
   1abd0:	push   0x0
   1abd2:	popa   
   1abd3:	add    BYTE PTR [ecx+0x0],bh
   1abd6:	add    BYTE PTR [eax],al
   1abd8:	jbe    0x1abda
   1abda:	add    BYTE PTR gs:[edx+0x0],dh
   1abde:	add    BYTE PTR [eax],al
   1abe0:	jae    0x1abe2
   1abe2:	popa   
   1abe3:	add    BYTE PTR [ecx+0x0],ch
   1abe6:	add    BYTE PTR [eax],al
   1abe8:	add    ah,cl
   1abea:	dec    ebx
   1abeb:	add    BYTE PTR [ebp+0x0],ah
   1abee:	push   ebx
   1abef:	add    BYTE PTR [ebp+0x0],ah
   1abf2:	jb     0x1abf4
   1abf4:	jbe    0x1abf6
   1abf6:	imul   eax,DWORD PTR [eax],0x650063
   1abfc:	inc    esp
   1abfd:	add    BYTE PTR [ebp+0x0],ah
   1ac00:	jae    0x1ac02
   1ac02:	arpl   WORD PTR [eax],ax
   1ac04:	jb     0x1ac06
   1ac06:	imul   eax,DWORD PTR [eax],0x740070
   1ac0c:	outs   dx,DWORD PTR ds:[esi]
   1ac0d:	add    BYTE PTR [edx+0x0],dh
   1ac10:	push   esp
   1ac11:	add    BYTE PTR [ecx+0x0],ah
   1ac14:	bound  eax,QWORD PTR [eax]
   1ac16:	ins    BYTE PTR es:[edi],dx
   1ac17:	add    BYTE PTR [ebp+0x0],ah
   1ac1a:	add    BYTE PTR [eax],al
   1ac1c:	pop    edx
   1ac1d:	add    BYTE PTR [edi+0x0],dh
   1ac20:	dec    edi
   1ac21:	add    BYTE PTR [eax+0x0],dh
   1ac24:	add    BYTE PTR gs:[esi+0x0],ch
   1ac28:	push   eax
   1ac29:	add    BYTE PTR [edx+0x0],dh
   1ac2c:	outs   dx,DWORD PTR ds:[esi]
   1ac2d:	add    BYTE PTR [ebx+0x0],ah
   1ac30:	add    BYTE PTR gs:[ebx+0x0],dh
   1ac34:	jae    0x1ac36
   1ac36:	add    BYTE PTR [eax],al
   1ac38:	pop    edx
   1ac39:	add    BYTE PTR [edi+0x0],dh
   1ac3c:	inc    ecx
   1ac3d:	add    BYTE PTR [eax+eax*1+0x6c],ch
   1ac41:	add    BYTE PTR [edi+0x0],ch
   1ac44:	arpl   WORD PTR [eax],ax
   1ac46:	popa   
   1ac47:	add    BYTE PTR [eax+eax*1+0x65],dh
   1ac4b:	add    BYTE PTR [esi+0x0],dl
   1ac4e:	imul   eax,DWORD PTR [eax],0x740072
   1ac54:	jne    0x1ac56
   1ac56:	popa   
   1ac57:	add    BYTE PTR [eax+eax*1+0x4d],ch
   1ac5b:	add    BYTE PTR [ebp+0x0],ah
   1ac5e:	ins    DWORD PTR es:[edi],dx
   1ac5f:	add    BYTE PTR [edi+0x0],ch
   1ac62:	jb     0x1ac64
   1ac64:	jns    0x1ac66
   1ac66:	add    BYTE PTR [eax],al
   1ac68:	push   eax
   1ac69:	add    BYTE PTR [ebx+0x0],dh
   1ac6c:	dec    esp
   1ac6d:	add    BYTE PTR [edi+0x0],ch
   1ac70:	outs   dx,DWORD PTR ds:[esi]
   1ac71:	add    BYTE PTR [ebx+0x0],ch
   1ac74:	jne    0x1ac76
   1ac76:	jo     0x1ac78
   1ac78:	push   eax
   1ac79:	add    BYTE PTR [edx+0x0],dh
   1ac7c:	outs   dx,DWORD PTR ds:[esi]
   1ac7d:	add    BYTE PTR [ebx+0x0],ah
   1ac80:	add    BYTE PTR gs:[ebx+0x0],dh
   1ac84:	jae    0x1ac86
   1ac86:	inc    edx
   1ac87:	add    BYTE PTR [ecx+0x0],bh
   1ac8a:	push   eax
   1ac8b:	add    BYTE PTR [edx+0x0],dh
   1ac8e:	outs   dx,DWORD PTR ds:[esi]
   1ac8f:	add    BYTE PTR [ebx+0x0],ah
   1ac92:	add    BYTE PTR gs:[ebx+0x0],dh
   1ac96:	jae    0x1ac98
   1ac98:	dec    ecx
   1ac99:	add    BYTE PTR [eax+eax*1+0x0],ah
   1ac9d:	add    BYTE PTR [eax+0x0],dl
   1aca0:	jae    0x1aca2
   1aca2:	push   ebx
   1aca3:	add    BYTE PTR [ebp+0x0],ah
   1aca6:	je     0x1aca8
   1aca8:	dec    esp
   1aca9:	add    BYTE PTR [edi+0x0],ch
   1acac:	popa   
   1acad:	add    BYTE PTR [eax+eax*1+0x49],ah
   1acb1:	add    BYTE PTR [ebp+0x0],ch
   1acb4:	popa   
   1acb5:	add    BYTE PTR [edi+0x0],ah
   1acb8:	add    BYTE PTR gs:[esi+0x0],cl
   1acbc:	outs   dx,DWORD PTR ds:[esi]
   1acbd:	add    BYTE PTR [eax+eax*1+0x69],dh
   1acc1:	add    BYTE PTR [esi+0x0],ah
   1acc4:	jns    0x1acc6
   1acc6:	push   edx
   1acc7:	add    BYTE PTR [edi+0x0],ch
   1acca:	jne    0x1accc
   1accc:	je     0x1acce
   1acce:	imul   eax,DWORD PTR [eax],0x65006e
   1acd4:	add    BYTE PTR [eax],al
   1acd6:	push   edx
   1acd7:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1acdb:	add    BYTE PTR [ecx+0x0],cl
   1acde:	ins    DWORD PTR es:[edi],dx
   1acdf:	add    BYTE PTR [ecx+0x0],ah
   1ace2:	add    BYTE PTR [di+0x0],ah
   1ace6:	inc    esp
   1ace7:	add    BYTE PTR [ecx+0x0],ch
   1acea:	jb     0x1acec
   1acec:	add    BYTE PTR gs:[ebx+0x0],ah
   1acf0:	je     0x1acf2
   1acf2:	outs   dx,DWORD PTR ds:[esi]
   1acf3:	add    BYTE PTR [edx+0x0],dh
   1acf6:	jns    0x1acf8
   1acf8:	inc    ebp
   1acf9:	add    BYTE PTR [esi+0x0],ch
   1acfc:	je     0x1acfe
   1acfe:	jb     0x1ad00
   1ad00:	jns    0x1ad02
   1ad02:	push   esp
   1ad03:	add    BYTE PTR [edi+0x0],ch
   1ad06:	inc    esp
   1ad07:	add    BYTE PTR [ecx+0x0],ah
   1ad0a:	je     0x1ad0c
   1ad0c:	popa   
   1ad0d:	add    BYTE PTR [eax],al
   1ad0f:	add    BYTE PTR [edx+0x0],bl
   1ad12:	ja     0x1ad14
   1ad14:	dec    edi
   1ad15:	add    BYTE PTR [eax+0x0],dh
   1ad18:	add    BYTE PTR gs:[esi+0x0],ch
   1ad1c:	push   eax
   1ad1d:	add    BYTE PTR [edx+0x0],dh
   1ad20:	outs   dx,DWORD PTR ds:[esi]
   1ad21:	add    BYTE PTR [ebx+0x0],ah
   1ad24:	add    BYTE PTR gs:[ebx+0x0],dh
   1ad28:	jae    0x1ad2a
   1ad2a:	push   esp
   1ad2b:	add    BYTE PTR [edi+0x0],ch
   1ad2e:	imul   eax,DWORD PTR [eax],0x65
   1ad31:	add    BYTE PTR [esi+0x0],ch
   1ad34:	add    BYTE PTR [eax],al
   1ad36:	pop    edx
   1ad37:	add    BYTE PTR [edi+0x0],dh
   1ad3a:	inc    esp
   1ad3b:	add    BYTE PTR [ebp+0x0],dh
   1ad3e:	jo     0x1ad40
   1ad40:	ins    BYTE PTR es:[edi],dx
   1ad41:	add    BYTE PTR [ecx+0x0],ch
   1ad44:	arpl   WORD PTR [eax],ax
   1ad46:	popa   
   1ad47:	add    BYTE PTR [eax+eax*1+0x65],dh
   1ad4b:	add    BYTE PTR [eax+eax*1+0x6f],dl
   1ad4f:	add    BYTE PTR [ebx+0x0],ch
   1ad52:	add    BYTE PTR gs:[esi+0x0],ch
   1ad56:	add    BYTE PTR [eax],al
   1ad58:	pop    edx
   1ad59:	add    BYTE PTR [edi+0x0],dh
   1ad5c:	push   ebx
   1ad5d:	add    BYTE PTR [ebp+0x0],ah
   1ad60:	je     0x1ad62
   1ad62:	dec    ecx
   1ad63:	add    BYTE PTR [esi+0x0],ch
   1ad66:	data16 add BYTE PTR [edi+0x0],ch
   1ad6a:	jb     0x1ad6c
   1ad6c:	ins    DWORD PTR es:[edi],dx
   1ad6d:	add    BYTE PTR [ecx+0x0],ah
   1ad70:	je     0x1ad72
   1ad72:	imul   eax,DWORD PTR [eax],0x6e006f
   1ad78:	push   eax
   1ad79:	add    BYTE PTR [edx+0x0],dh
   1ad7c:	outs   dx,DWORD PTR ds:[esi]
   1ad7d:	add    BYTE PTR [ebx+0x0],ah
   1ad80:	add    BYTE PTR gs:[ebx+0x0],dh
   1ad84:	jae    0x1ad86
   1ad86:	add    BYTE PTR [eax],al
   1ad88:	pop    edx
   1ad89:	add    BYTE PTR [edi+0x0],dh
   1ad8c:	push   ecx
   1ad8d:	add    BYTE PTR [ebp+0x0],dh
   1ad90:	add    BYTE PTR gs:[edx+0x0],dh
   1ad94:	jns    0x1ad96
   1ad96:	dec    ecx
   1ad97:	add    BYTE PTR [esi+0x0],ch
   1ad9a:	data16 add BYTE PTR [edi+0x0],ch
   1ad9e:	jb     0x1ada0
   1ada0:	ins    DWORD PTR es:[edi],dx
   1ada1:	add    BYTE PTR [ecx+0x0],ah
   1ada4:	je     0x1ada6
   1ada6:	imul   eax,DWORD PTR [eax],0x6e006f
   1adac:	push   esp
   1adad:	add    BYTE PTR [eax+0x0],ch
   1adb0:	jb     0x1adb2
   1adb2:	add    BYTE PTR gs:[ecx+0x0],ah
   1adb6:	add    BYTE PTR fs:[eax],al
   1adb9:	add    BYTE PTR [eax+0x0],dl
   1adbc:	jae    0x1adbe
   1adbe:	push   ebx
   1adbf:	add    BYTE PTR [ebp+0x0],ah
   1adc2:	je     0x1adc4
   1adc4:	inc    ebx
   1adc5:	add    BYTE PTR [edx+0x0],dh
   1adc8:	add    BYTE PTR gs:[ecx+0x0],ah
   1adcc:	je     0x1adce
   1adce:	add    BYTE PTR gs:[eax+0x0],dl
   1add2:	jb     0x1add4
   1add4:	outs   dx,DWORD PTR ds:[esi]
   1add5:	add    BYTE PTR [ebx+0x0],ah
   1add8:	add    BYTE PTR gs:[ebx+0x0],dh
   1addc:	jae    0x1adde
   1adde:	dec    esi
   1addf:	add    BYTE PTR [edi+0x0],ch
   1ade2:	je     0x1ade4
   1ade4:	imul   eax,DWORD PTR [eax],0x790066
   1adea:	push   edx
   1adeb:	add    BYTE PTR [edi+0x0],ch
   1adee:	jne    0x1adf0
   1adf0:	je     0x1adf2
   1adf2:	imul   eax,DWORD PTR [eax],0x65006e
   1adf8:	add    BYTE PTR [eax],al
   1adfa:	pop    edx
   1adfb:	add    BYTE PTR [edi+0x0],dh
   1adfe:	dec    edi
   1adff:	add    BYTE PTR [eax+0x0],dh
   1ae02:	add    BYTE PTR gs:[esi+0x0],ch
   1ae06:	inc    esi
   1ae07:	add    BYTE PTR [ecx+0x0],ch
   1ae0a:	ins    BYTE PTR es:[edi],dx
   1ae0b:	add    BYTE PTR [ebp+0x0],ah
   1ae0e:	add    BYTE PTR [eax],al
   1ae10:	pop    edx
   1ae11:	add    BYTE PTR [edi+0x0],dh
   1ae14:	push   ecx
   1ae15:	add    BYTE PTR [ebp+0x0],dh
   1ae18:	add    BYTE PTR gs:[edx+0x0],dh
   1ae1c:	jns    0x1ae1e
   1ae1e:	dec    ecx
   1ae1f:	add    BYTE PTR [esi+0x0],ch
   1ae22:	data16 add BYTE PTR [edi+0x0],ch
   1ae26:	jb     0x1ae28
   1ae28:	ins    DWORD PTR es:[edi],dx
   1ae29:	add    BYTE PTR [ecx+0x0],ah
   1ae2c:	je     0x1ae2e
   1ae2e:	imul   eax,DWORD PTR [eax],0x6e006f
   1ae34:	push   eax
   1ae35:	add    BYTE PTR [edx+0x0],dh
   1ae38:	outs   dx,DWORD PTR ds:[esi]
   1ae39:	add    BYTE PTR [ebx+0x0],ah
   1ae3c:	add    BYTE PTR gs:[ebx+0x0],dh
   1ae40:	jae    0x1ae42
   1ae42:	add    BYTE PTR [eax],al
   1ae44:	pop    edx
   1ae45:	add    BYTE PTR [edi+0x0],dh
   1ae48:	push   ecx
   1ae49:	add    BYTE PTR [ebp+0x0],dh
   1ae4c:	add    BYTE PTR gs:[edx+0x0],dh
   1ae50:	jns    0x1ae52
   1ae52:	push   ebx
   1ae53:	add    BYTE PTR [ecx+0x0],bh
   1ae56:	jae    0x1ae58
   1ae58:	je     0x1ae5a
   1ae5a:	add    BYTE PTR gs:[ebp+0x0],ch
   1ae5e:	dec    ecx
   1ae5f:	add    BYTE PTR [esi+0x0],ch
   1ae62:	data16 add BYTE PTR [edi+0x0],ch
   1ae66:	jb     0x1ae68
   1ae68:	ins    DWORD PTR es:[edi],dx
   1ae69:	add    BYTE PTR [ecx+0x0],ah
   1ae6c:	je     0x1ae6e
   1ae6e:	imul   eax,DWORD PTR [eax],0x6e006f
   1ae74:	add    BYTE PTR [eax],al
   1ae76:	push   edx
   1ae77:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1ae7b:	add    BYTE PTR [ecx+0x0],cl
   1ae7e:	ins    DWORD PTR es:[edi],dx
   1ae7f:	add    BYTE PTR [ecx+0x0],ah
   1ae82:	add    BYTE PTR [di+0x0],ah
   1ae86:	dec    esi
   1ae87:	add    BYTE PTR [eax+eax*1+0x48],dh
   1ae8b:	add    BYTE PTR [ebp+0x0],ah
   1ae8e:	popa   
   1ae8f:	add    BYTE PTR [eax+eax*1+0x65],ah
   1ae93:	add    BYTE PTR [edx+0x0],dh
   1ae96:	add    BYTE PTR [eax],al
   1ae98:	push   esp
   1ae99:	add    BYTE PTR ds:0x15000900,ch
   1ae9f:	add    BYTE PTR [eax],al
   1aea1:	add    bh,ah
   1aea3:	and    eax,0x7796dbb4
   1aea8:	repz mov bl,BYTE PTR [edx-0x31d81583]
   1aeaf:	in     al,0x64
   1aeb1:	shl    DWORD PTR [edx+0x3c7536cc],1
   1aeb7:	(bad)  
   1aeb8:	sti    
   1aeb9:	and    cl,dh
   1aebb:	mov    bh,0x9b
   1aebd:	mov    ds:0x7550292f,al
   1aec2:	std    
   1aec3:	jo     0x1ae4e
   1aec5:	retf   0xe92c
   1aec8:	into   
   1aec9:	or     dh,0x40
   1aecc:	add    ah,cl
   1aece:	push   ebx
   1aecf:	add    BYTE PTR [edi],ah
   1aed1:	add    BYTE PTR ds:0x6001300,dl
   1aed7:	add    BYTE PTR [eax],al
   1aed9:	add    dh,bl
   1aedb:	mov    bl,0xe5
   1aedd:	push   esp
   1aede:	mov    al,0x7
   1aee0:	mov    ah,0x5d
   1aee2:	imul   esi,eax,0x6a4c9d2
   1aee8:	xchg   esp,eax
   1aee9:	and    ch,cl
   1aeeb:	jp     0x1aeb2
   1aeed:	and    edx,DWORD PTR ds:0x3dd2e66d
   1aef3:	jbe    0x1af46
   1aef5:	or     eax,0xf4edbd59
   1aefa:	clc    
   1aefb:	fldcw  WORD PTR [edx]
   1aefd:	fld    TBYTE PTR [ecx]
   1aeff:	pop    ds
   1af00:	push   0xffffffa7
   1af02:	adc    eax,0xf7a1238e
   1af07:	cmp    al,0x4b
   1af09:	mov    dl,dl
   1af0b:	xor    BYTE PTR [ecx],dh
   1af0d:	mov    BYTE PTR [ebx+0x0],ah
   1af10:	dec    ecx
   1af11:	add    BYTE PTR [eax+eax*1],ah
   1af14:	or     al,0x0
   1af16:	push   es
   1af17:	add    BYTE PTR [edx],al
   1af19:	add    BYTE PTR ds:0x15003100,dh
   1af1f:	add    BYTE PTR [eax+eax*1],bl
   1af22:	add    BYTE PTR [eax],al
   1af24:	mov    al,ds:0x2db07fb7
   1af29:	add    BYTE PTR [ecx+0xa7ed771],dl
   1af2f:	mov    al,0x3a
   1af31:	mov    bh,BYTE PTR [edx-0x4eb223ab]
   1af37:	sbb    bh,BYTE PTR [esi]
   1af39:	outs   dx,BYTE PTR ds:[esi]
   1af3a:	sub    eax,0xcae4210e
   1af3f:	(bad)  
   1af40:	sub    eax,0xe746200f
   1af45:	sub    DWORD PTR [edx],esp
   1af47:	(bad)  
   1af48:	jne    0x1af16
   1af4a:	fxch   st(1)
   1af4c:	add    ah,cl
   1af4e:	add    BYTE PTR cs:[edx+0x0],cl
   1af52:	or     BYTE PTR [eax],al
   1af54:	add    BYTE PTR [eax],al
   1af56:	add    BYTE PTR [eax],al
   1af58:	cmp    ebp,0xfc3402b6
   1af5e:	cs xor eax,0x27bc2ce2
   1af64:	or     BYTE PTR [esi-0x38416c9],dl
   1af6a:	pushf  
   1af6b:	sahf   
   1af6c:	cdq    
   1af6d:	sub    eax,0x1e90a771
   1af72:	mov    gs,WORD PTR [ebp+0x2c]
   1af75:	cmp    BYTE PTR [ecx+eiz*2+0x514ce024],ah
   1af7c:	pop    ebp
   1af7d:	lea    ebx,[edx+0x24e94f40]
   1af83:	mov    DWORD PTR [ebx],eax
   1af85:	bound  ebx,QWORD PTR [edx-0x1eaa5884]
   1af8b:	mov    bl,0x0
   1af8d:	int3   
   1af8e:	outs   dx,BYTE PTR ds:[esi]
   1af8f:	add    BYTE PTR [edx],bl
   1af91:	add    BYTE PTR [eax],dl
   1af93:	add    BYTE PTR [eax],cl
   1af95:	add    BYTE PTR [eax],al
   1af97:	add    BYTE PTR [edx+0x0],al
   1af9a:	dec    edx
   1af9b:	add    BYTE PTR [eax],cl
   1af9d:	add    BYTE PTR [eax],al
   1af9f:	add    BYTE PTR [eax],al
   1afa1:	add    BYTE PTR [ecx+0x16c5a91c],cl
   1afa7:	sbb    DWORD PTR [eax+edx*4],edx
   1afaa:	jne    0x1b001
   1afac:	inc    edi
   1afad:	gs loope 0x1af66
   1afb0:	aaa    
   1afb1:	sub    DWORD PTR [eax-0x1e],0xffffffee
   1afb5:	xor    BYTE PTR [edx-0x57],cl
   1afb8:	fidiv  DWORD PTR [edi-0xb84598]
   1afbe:	lahf   
   1afbf:	test   DWORD PTR [edi-0xa],edx
   1afc2:	mov    ds:0xee90a385,eax
   1afc7:	test   al,0x8f
   1afc9:	jmp    0x43:0xebb7863
   1afd0:	or     al,BYTE PTR [eax]
   1afd2:	inc    edx
   1afd3:	daa    
   1afd4:	add    BYTE PTR ds:0xeef7cc00,dl
   1afda:	sub    dh,BYTE PTR [eax-0x72]
   1afdd:	xchg   BYTE PTR [esi-0x70],ah
   1afe0:	cli    
   1afe1:	shr    DWORD PTR [edx+0x1e852eb9],0x25
   1afe8:	push   0x164e1da2
   1afed:	add    DWORD PTR [edx-0x2d711fd],edi
   1aff3:	scas   eax,DWORD PTR es:[edi]
   1aff4:	ror    DWORD PTR [ebp-0x19],cl
   1aff7:	xor    DWORD PTR [ebp+ebp*2+0xc],ecx
   1affb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1affc:	out    dx,eax
   1affd:	push   0xb
   1afff:	dec    edi
   1b000:	stos   BYTE PTR es:[edi],al
   1b001:	adc    ah,BYTE PTR [eax+0x234793e8]
   1b007:	mov    ds:0xd37a066f,eax
   1b00c:	pushf  
   1b00d:	or     al,0x35
   1b00f:	lds    edi,FWORD PTR [esi-0x103e0438]
   1b015:	addr16 add ah,cl
   1b018:	push   ebx
   1b019:	aas    
   1b01a:	or     DWORD PTR [eax],eax
   1b01c:	adc    eax,0xc9de3500
   1b021:	mov    bh,0x28
   1b023:	jg     0x1b07a
   1b025:	push   es
   1b026:	mov    ebx,DWORD PTR [edi]
   1b028:	push   eax
   1b029:	leave  
   1b02a:	mov    ch,0x30
   1b02c:	lock dec edx
   1b02e:	dec    ebp
   1b02f:	jmp    0x1001:0xfb81932d
   1b036:	ja     0x1b012
   1b038:	shr    BYTE PTR [esi+ebx*4-0x7358cbc6],0xf
   1b040:	cwde   
   1b041:	and    esi,edx
   1b043:	jl     0x1b046
   1b045:	inc    ecx
   1b046:	jg     0x1b0ad
   1b048:	popf   
   1b049:	gs repz jbe 0x1b0cb
   1b04d:	imul   esi,DWORD PTR [edx+0x5e],0x15
   1b051:	or     DWORD PTR [eax+0x43cc002c],ebx
   1b057:	xor    DWORD PTR [edi],edx
   1b059:	add    al,0x15
   1b05b:	adc    DWORD PTR [ecx],esi
   1b05d:	cmp    al,0x1a
   1b05f:	pop    ss
   1b060:	add    al,0x5
   1b062:	add    ah,cl
   1b064:	(bad)  
   1b065:	hlt    
   1b066:	mov    al,0x9d
   1b068:	cld    
   1b069:	jne    0x1b09b
   1b06b:	or     BYTE PTR [ebp-0xf4f73ef],0xc
   1b072:	xchg   ebx,eax
   1b073:	mov    bl,0xdd
   1b075:	(bad)  
   1b076:	mov    ebx,0xa7fff40e
   1b07b:	xchg   ebp,eax
   1b07c:	fwait
   1b07d:	aam    0x82
   1b07f:	or     eax,0x41557826
   1b084:	(bad)  
   1b085:	push   0x41
   1b087:	mov    ebp,0x82fb892f
   1b08c:	in     al,0x7d
   1b08e:	add    ebx,DWORD PTR [ebx-0x3e2dd19b]
   1b094:	jno    0x1b043
   1b096:	inc    ch
   1b098:	or     al,dl
   1b09a:	dec    ebp
   1b09b:	fld    DWORD PTR [eax]
   1b09d:	int3   
   1b09e:	dec    esp
   1b09f:	and    ecx,DWORD PTR [esi]
   1b0a1:	add    eax,0x100b2528
   1b0a6:	adc    edx,DWORD PTR [ebx]
   1b0a8:	or     edi,DWORD PTR [eax]
   1b0aa:	add    ah,cl
   1b0ac:	(bad)  [eax-0x44]
   1b0af:	inc    ebx
   1b0b0:	mov    ebx,0xd3faf297
   1b0b5:	push   ecx
   1b0b6:	jle    0x1b07b
   1b0b8:	rcr    esi,1
   1b0ba:	imul   edx,DWORD PTR cs:[edi+0x5c],0x92498edd
   1b0c2:	addr16 ja 0x1b117
   1b0c5:	sbb    DWORD PTR [edi],ebx
   1b0c7:	push   edx
   1b0c8:	mov    ds:0xe4e60136,al
   1b0cd:	inc    edi
   1b0ce:	adc    eax,0xe71cc1df
   1b0d3:	push   ss
   1b0d4:	jae    0x1b07d
   1b0d6:	push   ebp
   1b0d7:	jno    0x1b13d
   1b0d9:	das    
   1b0da:	mov    dh,0xf5
   1b0dc:	and    al,0xc0
   1b0de:	add    BYTE PTR [si+0x23],cl
   1b0e2:	push   cs
   1b0e3:	add    eax,0x100b2528
   1b0e8:	adc    edx,DWORD PTR [ebx]
   1b0ea:	or     ebp,DWORD PTR [esi]
   1b0ec:	add    ah,cl
   1b0ee:	out    0xec,al
   1b0f0:	mov    eax,ds:0xf5065fd
   1b0f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   1b0f6:	mov    DWORD PTR [esp+esi*1+0x587de059],eax
   1b0fd:	lahf   
   1b0fe:	fwait
   1b0ff:	jno    0x1b0a5
   1b101:	push   esi
   1b102:	dec    esi
   1b103:	rol    DWORD PTR gs:[edi-0x55],0xdc
   1b108:	(bad)  
   1b10a:	(bad)
   1b10d:	aam    0x57
   1b10f:	cld    
   1b110:	xchg   edi,eax
   1b111:	adc    al,0x21
   1b113:	data16 or BYTE PTR [ebp-0x4571c383],bl
   1b11a:	and    al,0x8f
   1b11c:	push   esp
   1b11d:	xor    bh,BYTE PTR [eax+0x58]
   1b120:	and    al,0xeb
   1b122:	sub    al,0x70
   1b124:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b125:	adc    BYTE PTR [edi],cl
   1b127:	hlt    
   1b128:	pop    eax
   1b129:	outs   dx,BYTE PTR ds:[esi]
   1b12b:	mov    al,0xdd
   1b12d:	add    BYTE PTR [ebx+0x0],ch
   1b130:	push   cs
   1b131:	add    BYTE PTR [edi],dl
   1b133:	add    BYTE PTR [eax+eax*1],bl
   1b136:	or     eax,DWORD PTR [eax]
   1b138:	or     DWORD PTR [eax],eax
   1b13a:	pop    edi
   1b13b:	add    BYTE PTR [ecx],al
   1b13d:	add    BYTE PTR [eax+eax*1],bl
   1b140:	dec    edx
   1b141:	add    BYTE PTR [eax],cl
   1b143:	add    BYTE PTR [eax],al
   1b145:	add    BYTE PTR [eax],al
   1b147:	add    BYTE PTR [eax+0x33fa119d],dh
   1b14d:	dec    eax
   1b14e:	xlat   BYTE PTR ds:[ebx]
   1b14f:	shl    DWORD PTR [edi],1
   1b151:	jno    0x1b14f
   1b153:	or     DWORD PTR [edi+0x65],ecx
   1b156:	inc    ecx
   1b157:	retf   
   1b158:	pop    ds
   1b159:	push   ss
   1b15a:	fcom   QWORD PTR [ecx+0x7ec10dd8]
   1b160:	dec    ecx
   1b161:	dec    eax
   1b162:	xchg   edi,eax
   1b163:	xlat   BYTE PTR ds:[ebx]
   1b164:	mov    ecx,0xef048473
   1b169:	loopne 0x1b19f
   1b16b:	into   
   1b16c:	sub    eax,0x8d193dbe
   1b171:	and    edi,DWORD PTR [esi]
   1b173:	push   edi
   1b174:	icebp  
   1b175:	int3   
   1b176:	add    ah,cl
   1b178:	outs   dx,BYTE PTR ds:[esi]
   1b179:	sbb    dl,BYTE PTR [eax]
   1b17b:	or     BYTE PTR [eax],al
   1b17d:	inc    edx
   1b17e:	dec    edx
   1b17f:	or     BYTE PTR [eax],al
   1b181:	add    BYTE PTR [esi-0x8],bl
   1b184:	hlt    
   1b185:	ins    DWORD PTR es:[edi],dx
   1b186:	jnp    0x1b1d6
   1b188:	stos   BYTE PTR es:[edi],al
   1b189:	das    
   1b18a:	dec    esp
   1b18b:	fs jae 0x1b208
   1b18e:	and    ecx,DWORD PTR [esi]
   1b190:	scas   al,BYTE PTR es:[edi]
   1b191:	imul   eax,edi,0x4a378b9b
   1b197:	add    ebp,DWORD PTR [eax-0x72c6a972]
   1b19d:	mov    BYTE PTR [eax-0x61],dh
   1b1a0:	inc    esp
   1b1a1:	mov    WORD PTR [ecx+0x74],?
   1b1a4:	push   DWORD PTR [ecx]
   1b1a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b1a7:	inc    esp
   1b1a8:	je     0x1b216
   1b1aa:	std    
   1b1ab:	nop    DWORD PTR [eax]
   1b1ae:	cmp    edx,DWORD PTR [ebp-0x1894d9c]
   1b1b4:	enter  0x9bf4,0xe0
   1b1b8:	shr    ah,1
   1b1ba:	jl     0x1b141
   1b1bc:	mov    edi,0xf005c00
   1b1c1:	add    BYTE PTR [edx],ch
   1b1c3:	add    BYTE PTR [edx],cl
   1b1c5:	add    BYTE PTR [edi],al
   1b1c7:	add    BYTE PTR [ecx],dl
   1b1c9:	add    BYTE PTR [eax],cl
   1b1cb:	add    BYTE PTR [edi],bh
   1b1cd:	add    BYTE PTR ds:0x1b000000,bh
   1b1d3:	add    BYTE PTR [eax],ch
   1b1d5:	add    BYTE PTR [edi],ch
   1b1d7:	add    BYTE PTR [edx],cl
   1b1d9:	add    BYTE PTR [edx],cl
   1b1db:	add    BYTE PTR [edi],al
   1b1dd:	add    BYTE PTR [ecx],dl
   1b1df:	add    BYTE PTR [eax],cl
   1b1e1:	add    BYTE PTR [esi+0x0],bl
   1b1e4:	add    DWORD PTR [eax],eax
   1b1e6:	outs   dx,BYTE PTR ds:[esi]
   1b1e7:	add    BYTE PTR [eax],al
   1b1e9:	add    BYTE PTR [edi+ebx*4-0xd],ch
   1b1ed:	jbe    0x1b1ca
   1b1ef:	imul   edx,ebp,0xb2843b6e
   1b1f5:	or     cl,BYTE PTR [ecx-0x467a782b]
   1b1fb:	pavgb  mm3,QWORD PTR [ecx]
   1b1fe:	and    al,0x8c
   1b200:	jb     0x1b1e2
   1b202:	call   0xf799:0x746b6f2a
   1b209:	dec    esi
   1b20a:	(bad)  
   1b20b:	cdq    
   1b20c:	xchg   ebp,eax
   1b20d:	hlt    
   1b20e:	adc    ebx,ebx
   1b210:	imul   ebx,DWORD PTR [ebp+0x29],0x4495fb6f
   1b217:	enter  0x6e60,0x45
   1b21b:	cmp    BYTE PTR [ebp+0x1f37d446],ah
   1b221:	mov    esi,0x3f1bdc1
   1b226:	pushf  
   1b227:	xchg   edx,eax
   1b228:	add    ah,cl
   1b22a:	jns    0x1b1c2
   1b22c:	pusha  
   1b22d:	mov    dh,0x91
   1b22f:	pop    esi
   1b230:	outs   dx,BYTE PTR ds:[esi]
   1b231:	shr    DWORD PTR ds:[edx],0x1c
   1b235:	pop    ss
   1b236:	into   
   1b237:	and    al,0x7c
   1b239:	mov    al,ah
   1b23b:	out    dx,al
   1b23c:	jnp    0x1b1e8
   1b23e:	or     eax,0x261286c9
   1b243:	clc    
   1b244:	adc    eax,0x86eb7379
   1b249:	pop    esi
   1b24a:	bound  edx,QWORD PTR [edi+0x15]
   1b24d:	adc    al,0x4d
   1b24f:	fst    QWORD PTR [ebx]
   1b251:	push   esi
   1b252:	pandn  mm3,mm0
   1b255:	inc    ebx
   1b256:	add    ah,cl
   1b258:	aad    0x58
   1b25a:	clc    
   1b25b:	mov    dh,0xc3
   1b25d:	rol    BYTE PTR [ebp+0x79ab82ef],cl
   1b263:	loop   0x1b250
   1b265:	js     0x1b2cc
   1b267:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1b268:	stos   BYTE PTR es:[edi],al
   1b269:	loope  0x1b2d0
   1b26b:	dec    ebp
   1b26c:	fimul  WORD PTR [ecx-0xa924c57]
   1b272:	(bad)  
   1b273:	inc    edx
   1b274:	je     0x1b231
   1b276:	pusha  
   1b277:	cmc    
   1b278:	clc    
   1b279:	adc    dh,BYTE PTR ds:0x86d8c8b5
   1b27f:	lods   al,BYTE PTR ds:[esi]
   1b280:	push   es
   1b281:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b282:	dec    esp
   1b283:	mov    bl,0x8b
   1b285:	js     0x1b28d
   1b287:	jl     0x1b231
   1b289:	arpl   sp,di
   1b28b:	fs das 
   1b28d:	out    0x0,eax
   1b28f:	int3   
   1b290:	add    BYTE PTR cs:[ebp+0x0],bl
   1b294:	or     al,BYTE PTR [eax]
   1b296:	or     al,BYTE PTR [eax]
   1b298:	add    BYTE PTR [eax],al
   1b29a:	push   esi
   1b29b:	sbb    eax,0x5428ad6a
   1b2a0:	in     eax,dx
   1b2a1:	retf   
   1b2a2:	mov    al,0x72
   1b2a4:	mov    eax,0xd341dee8
   1b2a9:	scas   eax,DWORD PTR es:[edi]
   1b2aa:	pushw  cs
   1b2ac:	cmp    eax,0xe3c74d30
   1b2b1:	pop    ebx
   1b2b2:	cmp    al,dh
   1b2b4:	or     bp,WORD PTR [ebx+0x7b978b]
   1b2bb:	int3   
   1b2bc:	pop    esp
   1b2bd:	add    BYTE PTR [edi],cl
   1b2bf:	add    BYTE PTR [edx],ch
   1b2c1:	add    BYTE PTR [edx],cl
   1b2c3:	add    BYTE PTR [edi],al
   1b2c5:	add    BYTE PTR [ecx],dl
   1b2c7:	add    BYTE PTR [eax],cl
   1b2c9:	add    BYTE PTR [edi],bh
   1b2cb:	add    BYTE PTR ds:0x1b000000,bh
   1b2d1:	add    BYTE PTR [eax],ch
   1b2d3:	add    BYTE PTR [edi],ch
   1b2d5:	add    BYTE PTR [edx],cl
   1b2d7:	add    BYTE PTR [edx],cl
   1b2d9:	add    BYTE PTR [edi],al
   1b2db:	add    BYTE PTR [ecx],dl
   1b2dd:	add    BYTE PTR [eax],cl
   1b2df:	add    BYTE PTR [esi+0x0],bl
   1b2e2:	add    DWORD PTR [eax],eax
   1b2e4:	outs   dx,BYTE PTR ds:[esi]
   1b2e5:	add    BYTE PTR [eax],bh
   1b2e7:	add    BYTE PTR [esi],dl
   1b2e9:	add    BYTE PTR [ebx],bl
   1b2eb:	add    BYTE PTR [edi],bl
   1b2ed:	add    BYTE PTR [ebx],dl
   1b2ef:	add    BYTE PTR [edi],dl
   1b2f1:	add    BYTE PTR [ecx],al
   1b2f3:	add    BYTE PTR [edi],ch
   1b2f5:	add    BYTE PTR [eax],al
   1b2f7:	add    BYTE PTR [esi-0x4ccaddfa],al
   1b2fd:	(bad)  
   1b2fe:	cmp    edx,ecx
   1b300:	cmp    eax,0xc229c433
   1b305:	fidiv  DWORD PTR [bx+di]
   1b308:	fidiv  WORD PTR [eax+0x59]
   1b30b:	push   ds
   1b30c:	inc    esi
   1b30d:	addr16 mov edx,0xb9cf44c0
   1b313:	gs pop ds
   1b315:	sub    DWORD PTR [edi+0x55],ecx
   1b318:	dec    eax
   1b319:	mov    ecx,0xd70aa171
   1b31e:	int3   
   1b31f:	sub    DWORD PTR [esi+edx*1+0x68],ecx
   1b323:	inc    edi
   1b324:	xchg   ch,dl
   1b326:	loopne 0x1b356
   1b328:	fsubr  QWORD PTR ds:0x1ce3d6f6
   1b32f:	and    al,BYTE PTR [eax]
   1b331:	int3   
   1b332:	pop    esp
   1b333:	add    BYTE PTR [edi],cl
   1b335:	add    BYTE PTR [edx],ch
   1b337:	add    BYTE PTR [edx],cl
   1b339:	add    BYTE PTR [edi],al
   1b33b:	add    BYTE PTR [ecx],dl
   1b33d:	add    BYTE PTR [eax],cl
   1b33f:	add    BYTE PTR [edi],bh
   1b341:	add    BYTE PTR ds:0x1b000000,bh
   1b347:	add    BYTE PTR [eax],al
   1b349:	add    BYTE PTR [ebx-0x1f],ch
   1b34c:	hlt    
   1b34d:	lds    edx,FWORD PTR [ecx+ebp*8+0x7dc10387]
   1b354:	imul   ecx,DWORD PTR [eax+0x2c567865],0xffffff9a
   1b35b:	fdiv   QWORD PTR [ebx+esi*1-0x9562633]
   1b362:	(bad)  
   1b363:	xlat   BYTE PTR ds:[ebx]
   1b364:	loope  0x1b3b2
   1b366:	inc    edi
   1b367:	sub    ebx,DWORD PTR [ebx+eiz*2+0x6c]
   1b36b:	stos   BYTE PTR es:[edi],al
   1b36c:	in     eax,dx
   1b36d:	or     al,BYTE PTR [ebp-0x1224472e]
   1b373:	push   ss
   1b374:	and    DWORD PTR [eax+ebp*8],edi
   1b377:	mov    eax,ds:0x364cf2f2
   1b37c:	clc    
   1b37d:	mov    dh,0x5a
   1b37f:	in     al,0x3e
   1b381:	rol    cl,0x0
   1b384:	pop    esp
   1b385:	add    BYTE PTR [esi],cl
   1b387:	add    BYTE PTR [edi],dh
   1b389:	add    BYTE PTR [edx],al
   1b38b:	add    BYTE PTR [esi],cl
   1b38d:	add    BYTE PTR [edx],bl
   1b38f:	add    BYTE PTR [edi],al
   1b391:	add    BYTE PTR [esi],al
   1b393:	add    BYTE PTR [ebx],cl
   1b395:	add    BYTE PTR ds:0x2c001100,ah
   1b39b:	add    BYTE PTR [edx],al
   1b39d:	add    BYTE PTR [ebx],cl
   1b39f:	add    BYTE PTR [ecx],al
   1b3a1:	add    BYTE PTR [edi],al
   1b3a3:	add    BYTE PTR [ebx],cl
   1b3a5:	add    BYTE PTR [ecx],bh
   1b3a7:	add    BYTE PTR [edi],cl
   1b3a9:	add    BYTE PTR [edx],cl
   1b3ab:	add    BYTE PTR [edx],cl
   1b3ad:	add    BYTE PTR [edi],al
   1b3af:	add    BYTE PTR [ecx],dl
   1b3b1:	add    BYTE PTR [eax],cl
   1b3b3:	add    BYTE PTR [ecx],dl
   1b3b5:	add    BYTE PTR [edi],bl
   1b3b7:	add    BYTE PTR [esi],dh
   1b3b9:	add    BYTE PTR [edi],al
   1b3bb:	add    BYTE PTR [eax],al
   1b3bd:	add    BYTE PTR [edi],dl
   1b3bf:	add    BYTE PTR [ebx],cl
   1b3c1:	add    BYTE PTR [edx],bl
   1b3c3:	add    BYTE PTR [edi],dh
   1b3c5:	add    BYTE PTR [eax+eax*1],ch
   1b3c8:	add    DWORD PTR [eax],eax
   1b3ca:	sbb    al,BYTE PTR [eax]
   1b3cc:	push   es
   1b3cd:	add    BYTE PTR ds:0x3f000300,bl
   1b3d3:	add    BYTE PTR [esi],dh
   1b3d5:	add    BYTE PTR [ecx],dl
   1b3d7:	add    BYTE PTR [eax],ch
   1b3d9:	add    BYTE PTR [edi],cl
   1b3db:	add    BYTE PTR [esi],dh
   1b3dd:	add    BYTE PTR [edi],dl
   1b3df:	add    BYTE PTR [eax+eax*1],al
   1b3e2:	pop    ds
   1b3e3:	add    BYTE PTR [edx],cl
   1b3e5:	add    BYTE PTR [esi],al
   1b3e7:	add    BYTE PTR [esi],dl
   1b3e9:	add    BYTE PTR [edi],ch
   1b3eb:	add    BYTE PTR [eax],al
   1b3ed:	add    dl,dh
   1b3ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   1b3f0:	test   BYTE PTR [ebp-0x45b36d1c],0xbc
   1b3f7:	and    eax,DWORD PTR [ecx]
   1b3f9:	push   0x1d
   1b3fb:	adc    al,0xc9
   1b3fd:	mov    ds:0x749c02da,al
   1b402:	mov    eax,ds:0x389a3b6e
   1b407:	and    ah,BYTE PTR [eax+0x16e965da]
   1b40d:	push   edi
   1b40e:	aad    0x72
   1b410:	clc    
   1b411:	xor    BYTE PTR [eax],al
   1b413:	int3   
   1b414:	ins    BYTE PTR es:[edi],dx
   1b415:	add    BYTE PTR [edi],bl
   1b417:	add    BYTE PTR [edx],dl
   1b419:	add    BYTE PTR [edx],dl
   1b41b:	add    BYTE PTR [eax],al
   1b41d:	add    BYTE PTR [ebp+0x0],bl
   1b420:	dec    ebx
   1b421:	add    BYTE PTR ds:0x1d00,bl
   1b427:	add    BYTE PTR [ebx],ah
   1b429:	cld    
   1b42a:	push   DWORD PTR [ebp-0x39]
   1b42d:	in     al,0x8d
   1b42f:	retf   0xcb8a
   1b432:	pop    ss
   1b433:	fidiv  DWORD PTR [ebx]
   1b435:	or     ebp,esi
   1b437:	jne    0x1b441
   1b439:	jmp    0x1b45b
   1b43b:	outs   dx,BYTE PTR ds:[esi]
   1b43c:	inc    eax
   1b43d:	sti    
   1b43e:	push   esp
   1b43f:	test   eax,0xe1dafc6b
   1b444:	xchg   ecx,eax
   1b445:	test   dl,al
   1b447:	or     dl,BYTE PTR [ebp+0x6ecd9c95]
   1b44d:	inc    edx
   1b44e:	push   cs
   1b44f:	aaa    
   1b450:	cmp    dl,BYTE PTR [edx-0x759c0e6b]
   1b456:	mov    bl,0x6
   1b458:	jp     0x1b4a6
   1b45a:	mov    esi,0xf7bba111
   1b45f:	fsub   st(4),st
   1b461:	int    0xde
   1b463:	dec    ebx
   1b464:	add    ah,cl
   1b466:	pop    edx
   1b467:	sub    eax,0x6163725
   1b46c:	sbb    BYTE PTR [eax],cl
   1b46e:	xor    DWORD PTR [edx+ebx*1],edi
   1b471:	pop    ss
   1b472:	add    al,0x5
   1b474:	add    ah,cl
   1b476:	push   eax
   1b477:	fidiv  DWORD PTR [ebp-0x22]
   1b47a:	add    DWORD PTR [edi-0x2116db93],eax
   1b480:	dec    ecx
   1b481:	pop    es
   1b482:	lds    ebp,FWORD PTR [edi-0x31b29e34]
   1b488:	jl     0x1b4ea
   1b48a:	stos   BYTE PTR es:[edi],al
   1b48b:	shr    BYTE PTR [eax+ebx*8+0x29],cl
   1b48f:	jno    0x1b4d0
   1b491:	(bad)  
   1b492:	pop    eax
   1b493:	dec    esi
   1b494:	mov    dl,0x46
   1b496:	jns    0x1b4d7
   1b498:	das    
   1b499:	not    BYTE PTR [edx+ebx*1]
   1b49c:	push   esp
   1b49d:	cmp    ecx,ecx
   1b49f:	leave  
   1b4a0:	or     eax,0x726b2ded
   1b4a5:	inc    ebx
   1b4a6:	add    al,BYTE PTR [eax]
   1b4a8:	dec    esi
   1b4a9:	cmp    ah,BYTE PTR [ebx]
   1b4ab:	and    eax,0x33111d1b
   1b4b0:	aas    
   1b4b1:	sbb    eax,DWORD PTR [esi]
   1b4b3:	add    DWORD PTR [ecx*1+0x2082821],edx
   1b4ba:	sbb    eax,0x85cc000b
   1b4bf:	mov    dl,0x2e
   1b4c1:	mov    ebp,?
   1b4c3:	ficom  WORD PTR [eax+0x5b054180]
   1b4c9:	cli    
   1b4ca:	sub    eax,0x5c2822a
   1b4cf:	push   eax
   1b4d0:	mov    cl,0x3a
   1b4d2:	dec    esp
   1b4d3:	jno    0x1b4e0
   1b4d5:	mov    ah,0x9a
   1b4d7:	scas   eax,DWORD PTR es:[edi]
   1b4d8:	popf   
   1b4d9:	(bad)  
   1b4db:	cdq    
   1b4dc:	jae    0x1b4a0
   1b4de:	add    ebx,esi
   1b4e0:	shl    DWORD PTR [ebp+eiz*8-0x4e],cl
   1b4e4:	mov    esi,0x7c33d619
   1b4e9:	aaa    
   1b4ea:	in     eax,dx
   1b4eb:	jbe    0x1b4da
   1b4ed:	or     BYTE PTR [ebx+edi*4-0x30],dh
   1b4f1:	mov    dl,BYTE PTR [eax+0xe62ebd]
   1b4f7:	int3   
   1b4f8:	pop    edx
   1b4f9:	sub    eax,0x1b1d2227
   1b4fe:	adc    DWORD PTR [esi],eax
   1b500:	pop    ss
   1b501:	and    bh,BYTE PTR [edi]
   1b503:	sbb    eax,DWORD PTR [esi]
   1b505:	add    DWORD PTR [ecx*1+0x2082821],edx
   1b50c:	sbb    eax,0xecc000b
   1b511:	dec    edi
   1b512:	lods   al,BYTE PTR ds:[esi]
   1b513:	(bad)  
   1b514:	mov    esp,fs
   1b516:	(bad)  
   1b518:	pop    es
   1b519:	mov    ds:0x6f313596,al
   1b51e:	sti    
   1b51f:	es rol edi,0x9f
   1b523:	push   ebp
   1b525:	jbe    0x1b50e
   1b527:	aam    0x64
   1b529:	(bad)  
   1b52a:	retf   
   1b52b:	scas   al,BYTE PTR es:[edi]
   1b52c:	pop    esi
   1b52d:	or     edx,DWORD PTR [ebx]
   1b52f:	pop    edi
   1b530:	pusha  
   1b531:	push   edx
   1b532:	xchg   esi,eax
   1b533:	mov    bh,0x4a
   1b535:	or     al,0x1b
   1b537:	dec    ebx
   1b538:	shr    BYTE PTR [ebx+eiz*1-0x4b],0x31
   1b53d:	xor    eax,0x76873972
   1b542:	mov    DWORD PTR [ebx+eiz*2+0xdcc00f6],ebx
   1b549:	cmp    eax,0x768b1c03
   1b54e:	inc    edi
   1b54f:	xchg   esp,eax
   1b550:	nop
   1b551:	popa   
   1b552:	retf   
   1b553:	nop
   1b554:	sti    
   1b555:	sub    ebx,DWORD PTR [ecx-0x69]
   1b558:	(bad)  
   1b559:	mov    al,ds:0x85630e33
   1b55e:	lock and edx,esp
   1b561:	adc    BYTE PTR [edi-0x47],0x2a
   1b565:	cmp    BYTE PTR [ebp-0x6b66c0bc],cl
   1b56b:	popf   
   1b56c:	in     al,0xed
   1b56e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   1b56f:	(bad)  
   1b571:	test   eax,0x15666a72
   1b576:	adc    ah,BYTE PTR [ebx-0x74]
   1b579:	lar    ebp,WORD PTR [eax-0x29]
   1b57d:	cmp    BYTE PTR ds:0x18005c00,ah
   1b583:	add    BYTE PTR [ebx],ch
   1b585:	add    BYTE PTR [eax+eax*1],bl
   1b588:	aaa    
   1b589:	add    BYTE PTR [ecx],ah
   1b58b:	add    BYTE PTR [ebx],dl
   1b58d:	add    BYTE PTR [edi],bl
   1b58f:	add    BYTE PTR [edx],cl
   1b591:	add    BYTE PTR [esi],al
   1b593:	add    BYTE PTR [esi],dl
   1b595:	add    BYTE PTR [edi],ch
   1b597:	add    BYTE PTR [ecx+0x0],bh
   1b59a:	push   esi
   1b59b:	add    BYTE PTR [eax],al
   1b59d:	add    ah,dh
   1b59f:	call   0xeb931478
   1b5a4:	inc    edi
   1b5a5:	sub    ebx,0xffffffb7
   1b5a8:	mov    bl,BYTE PTR [esi+ecx*4-0x4e]
   1b5ac:	fcom   DWORD PTR [edi+0x7c]
   1b5af:	ins    BYTE PTR es:[edi],dx
   1b5b0:	ficom  DWORD PTR [eax]
   1b5b2:	jns    0x1b5e6
   1b5b4:	shl    BYTE PTR [edx+0x68],cl
   1b5b7:	cmp    BYTE PTR [edi+0x51],0x3c
   1b5bb:	or     ah,BYTE PTR [edi-0x18]
   1b5be:	dec    eax
   1b5bf:	int    0xbf
   1b5c1:	xor    eax,0x6c5e2844
   1b5c6:	pop    ebx
   1b5c7:	aas    
   1b5c8:	hlt    
   1b5c9:	fwait
   1b5ca:	mov    al,ds:0xba4f02e8
   1b5cf:	inc    esi
   1b5d0:	xchg   ecx,eax
   1b5d1:	scas   al,BYTE PTR es:[edi]
   1b5d2:	and    ebp,DWORD PTR [edx+0x3a0ac963]
   1b5d8:	xlat   BYTE PTR ds:[ebx]
   1b5d9:	add    BYTE PTR [eax+eax*1+0x18],bl
   1b5dd:	add    BYTE PTR [ecx],ah
   1b5df:	add    BYTE PTR [ebx],dl
   1b5e1:	add    BYTE PTR [edi],bl
   1b5e3:	add    BYTE PTR [edx],cl
   1b5e5:	add    BYTE PTR [esi],al
   1b5e7:	add    BYTE PTR [ecx],bh
   1b5e9:	add    BYTE PTR [ecx+0x0],bh
   1b5ec:	push   esi
   1b5ed:	add    BYTE PTR [eax],al
   1b5ef:	add    BYTE PTR [eax-0x75f85cb7],cl
   1b5f5:	ror    BYTE PTR [edx],0x9
   1b5f8:	inc    eax
   1b5f9:	adc    DWORD PTR [eax-0x70],0xfefbf270
   1b600:	cdq    
   1b601:	jmp    0x2b93:0xe2a9f49d
   1b608:	cwde   
   1b609:	xchg   edx,eax
   1b60a:	push   0x546901b2
   1b60f:	sbb    eax,0x53cc00
   1b614:	jns    0x1b616
   1b616:	jae    0x1b618
   1b618:	inc    ebp
   1b619:	add    BYTE PTR [esi+0x0],dh
   1b61c:	je     0x1b61e
   1b61e:	inc    ebx
   1b61f:	add    BYTE PTR [eax],al
   1b621:	add    BYTE PTR [eax+ebx*1+0x21],bl
   1b625:	adc    ebx,DWORD PTR [edi]
   1b627:	or     al,BYTE PTR [esi]
   1b629:	cmp    DWORD PTR [eax],eax
   1b62b:	int3   
   1b62c:	push   ebx
   1b62d:	ins    DWORD PTR es:[edi],dx
   1b62e:	pop    ecx
   1b62f:	dec    ebp
   1b630:	push   ebx
   1b631:	mov    ah,BYTE PTR [esi+0x6a93bf57]
   1b637:	sar    ecx,0xc8
   1b63a:	xchg   BYTE PTR [esp+ebp*4-0x25],al
   1b63e:	xor    eax,0x442a6b22
   1b643:	and    BYTE PTR ds:0x82055afd,dl
   1b649:	mov    ds:0x552452a4,al
   1b64e:	sub    eax,0x37b4b1fb
   1b653:	cmp    ebx,DWORD PTR [edx-0x6f362fb9]
   1b659:	sub    eax,0x8e4374ba
   1b65e:	push   ss
   1b65f:	mov    eax,0x836600b1
   1b664:	(bad)  
   1b665:	and    al,0x0
   1b667:	int3   
   1b668:	pop    esp
   1b669:	add    BYTE PTR [eax],al
   1b66b:	add    BYTE PTR [edx+0x0],dh
   1b66e:	jb     0x1b670
   1b670:	add    BYTE PTR [eax],al
   1b672:	adc    BYTE PTR [eax-0x3a],al
   1b675:	xchg   ecx,eax
   1b676:	leave  
   1b677:	stos   DWORD PTR es:[edi],eax
   1b678:	inc    edx
   1b679:	test   eax,0x78f0efd3
   1b67e:	test   DWORD PTR [ecx],0xfe9f561c
   1b684:	iret   
   1b685:	imul   ecx,DWORD PTR [esp+ecx*2+0x8186c6b],0xcc446dbf
   1b690:	les    eax,FWORD PTR [edi]
   1b692:	inc    ebx
   1b693:	xchg   ebx,eax
   1b694:	ret    0x7bf
   1b697:	dec    ecx
   1b698:	or     bl,BYTE PTR [ebx+0x5ccc00]
   1b69e:	arpl   WORD PTR [ebx+0x0],sp
   1b6a1:	int3   
   1b6a2:	es leave 
   1b6a4:	test   al,0x71
   1b6a6:	fs ss cli 
   1b6a9:	xchg   esi,eax
   1b6aa:	mov    edi,0x40562c0b
   1b6af:	sbb    eax,0xb86c9f4e
   1b6b4:	retf   0xf64
   1b6b7:	pop    ecx
   1b6b8:	or     eax,0x3c2d7885
   1b6bd:	fild   DWORD PTR [eax-0x189b18c2]
   1b6c3:	ds mov edi,0x46051a06
   1b6c9:	retf   0x2c4f
   1b6cc:	lea    ebp,[ecx]
   1b6ce:	push   esp
   1b6cf:	repnz cmc 
   1b6d1:	add    BYTE PTR ds:0x5ccc0053,ah
   1b6d7:	add    BYTE PTR [ebx+0x0],dh
   1b6da:	jns    0x1b6dc
   1b6dc:	jae    0x1b6de
   1b6de:	je     0x1b6e0
   1b6e0:	add    BYTE PTR gs:[ebp+0x0],ch
   1b6e4:	jb     0x1b6e6
   1b6e6:	outs   dx,DWORD PTR ds:[esi]
   1b6e7:	add    BYTE PTR [edi+0x0],ch
   1b6ea:	je     0x1b6ec
   1b6ec:	pop    esp
   1b6ed:	add    BYTE PTR [ebx+0x0],dh
   1b6f0:	jns    0x1b6f2
   1b6f2:	jae    0x1b6f4
   1b6f4:	je     0x1b6f6
   1b6f6:	add    BYTE PTR gs:[ebp+0x0],ch
   1b6fa:	xor    eax,DWORD PTR [eax]
   1b6fc:	xor    al,BYTE PTR [eax]
   1b6fe:	pop    esp
   1b6ff:	add    BYTE PTR ds:0x5300,ah
   1b705:	add    BYTE PTR [ecx],dh
   1b707:	xor    ch,BYTE PTR cs:[esi]
   1b70a:	xor    eax,DWORD PTR [eax]
   1b70c:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1b713:	arpl   WORD PTR [eax+eiz*1+0x6c],si
   1b717:	outs   dx,BYTE PTR gs:[esi]
   1b719:	addr16 je 0x1b784
   1b71c:	and    BYTE PTR [ebx+0x68],ah
   1b71f:	arpl   WORD PTR gs:[ebx+0x0],bp
   1b723:	int3   
   1b724:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1b72b:	arpl   WORD PTR [eax+eiz*1+0x64],si
   1b72f:	popa   
   1b730:	je     0x1b793
   1b732:	and    BYTE PTR [ebx+0x68],ah
   1b735:	arpl   WORD PTR gs:[ebx+0x0],bp
   1b739:	int3   
   1b73a:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1b741:	and    BYTE PTR [ecx+ebp*2+0x73],ah
   1b745:	je     0x1b7a8
   1b747:	outs   dx,BYTE PTR ds:[esi]
   1b748:	arpl   WORD PTR [ebp+0x20],sp
   1b74b:	je     0x1b7bc
   1b74d:	outs   dx,DWORD PTR ds:[esi]
   1b74e:	and    BYTE PTR [esi+0x61],ah
   1b751:	jb     0x1b773
   1b753:	bound  esp,QWORD PTR [ecx+0x63]
   1b756:	imul   eax,DWORD PTR [eax],0x69
   1b759:	outs   dx,BYTE PTR ds:[esi]
   1b75a:	jbe    0x1b7bd
   1b75c:	ins    BYTE PTR es:[edi],dx
   1b75d:	imul   esp,DWORD PTR [eax+eiz*1+0x64],0x61747369
   1b765:	outs   dx,BYTE PTR ds:[esi]
   1b766:	arpl   WORD PTR [ebp+0x20],sp
   1b769:	arpl   WORD PTR [edi+0x64],bp
   1b76c:	add    BYTE PTR gs:[ecx+0x6e],ch
   1b770:	jbe    0x1b7d3
   1b772:	ins    BYTE PTR es:[edi],dx
   1b773:	imul   esp,DWORD PTR [eax+eiz*1+0x6c],0x72657469
   1b77b:	popa   
   1b77c:	ins    BYTE PTR es:[edi],dx
   1b77d:	das    
   1b77e:	ins    BYTE PTR es:[edi],dx
   1b77f:	outs   dx,BYTE PTR gs:[esi]
   1b781:	addr16 je 0x1b7ec
   1b784:	and    BYTE PTR [ebx+0x6f],ah
   1b787:	fs add BYTE PTR gs:[ecx+0x6e],ch
   1b78c:	jbe    0x1b7ef
   1b78e:	ins    BYTE PTR es:[edi],dx
   1b78f:	imul   esp,DWORD PTR [eax+eiz*1+0x64],0x61747369
   1b797:	outs   dx,BYTE PTR ds:[esi]
   1b798:	arpl   WORD PTR [ebp+0x73],sp
   1b79b:	and    BYTE PTR [ebx+0x65],dh
   1b79e:	je     0x1b7a0
   1b7a0:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1b7a7:	and    BYTE PTR [ecx+ebp*2+0x74],ch
   1b7ab:	gs jb  0x1b80f
   1b7ae:	ins    BYTE PTR es:[edi],dx
   1b7af:	das    
   1b7b0:	ins    BYTE PTR es:[edi],dx
   1b7b1:	outs   dx,BYTE PTR gs:[esi]
   1b7b3:	addr16 je 0x1b81e
   1b7b6:	jae    0x1b7d8
   1b7b8:	jae    0x1b81f
   1b7ba:	je     0x1b7bc
   1b7bc:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1b7c3:	and    BYTE PTR [edx+0x69],ah
   1b7c6:	je     0x1b7e8
   1b7c8:	ins    BYTE PTR es:[edi],dx
   1b7c9:	outs   dx,BYTE PTR gs:[esi]
   1b7cb:	addr16 je 0x1b836
   1b7ce:	and    BYTE PTR [edx+0x65],dh
   1b7d1:	jo     0x1b838
   1b7d3:	popa   
   1b7d4:	je     0x1b7d6
   1b7d6:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1b7dd:	and    BYTE PTR [ebx+0x6f],ah
   1b7e0:	fs and BYTE PTR gs:[ebp+eiz*2+0x6e],ch
   1b7e6:	addr16 je 0x1b851
   1b7e9:	jae    0x1b80b
   1b7eb:	jae    0x1b852
   1b7ed:	je     0x1b7ef
   1b7ef:	int3   
   1b7f0:	je     0x1b861
   1b7f2:	outs   dx,DWORD PTR ds:[esi]
   1b7f3:	and    BYTE PTR [ebp+0x61],ch
   1b7f6:	outs   dx,BYTE PTR ds:[esi]
   1b7f7:	jns    0x1b819
   1b7f9:	ins    BYTE PTR es:[edi],dx
   1b7fa:	outs   dx,BYTE PTR gs:[esi]
   1b7fc:	addr16 je 0x1b867
   1b7ff:	and    BYTE PTR [edi+0x72],ch
   1b802:	and    BYTE PTR [ecx+ebp*2+0x73],ah
   1b806:	je     0x1b869
   1b808:	outs   dx,BYTE PTR ds:[esi]
   1b809:	arpl   WORD PTR [ebp+0x20],sp
   1b80c:	jae    0x1b887
   1b80e:	ins    DWORD PTR es:[edi],dx
   1b80f:	bound  ebp,QWORD PTR [edi+0x6c]
   1b812:	jae    0x1b814
   1b814:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1b81b:	and    BYTE PTR [ebx+0x74],dh
   1b81e:	outs   dx,DWORD PTR ds:[esi]
   1b81f:	jb     0x1b886
   1b821:	and    BYTE PTR fs:[edx+0x6c],ah
   1b825:	outs   dx,DWORD PTR ds:[esi]
   1b826:	arpl   WORD PTR [ebx+0x20],bp
   1b829:	ins    BYTE PTR es:[edi],dx
   1b82a:	outs   dx,BYTE PTR gs:[esi]
   1b82c:	addr16 je 0x1b897
   1b82f:	jae    0x1b831
   1b831:	int3   
   1b832:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1b839:	and    BYTE PTR [edx+0x6c],ah
   1b83c:	outs   dx,DWORD PTR ds:[esi]
   1b83d:	arpl   WORD PTR [ebx+0x20],bp
   1b840:	je     0x1b8bb
   1b842:	jo     0x1b8a9
   1b844:	add    ah,cl
   1b846:	push   0x65646165
   1b84b:	jb     0x1b86d
   1b84d:	arpl   WORD PTR [edx+0x63],si
   1b850:	and    BYTE PTR [ebp+0x69],ch
   1b853:	jae    0x1b8c2
   1b855:	popa   
   1b856:	je     0x1b8bb
   1b858:	push   0x6b6e7500
   1b85d:	outs   dx,BYTE PTR ds:[esi]
   1b85e:	outs   dx,DWORD PTR ds:[esi]
   1b85f:	ja     0x1b8cf
   1b861:	and    BYTE PTR [eax+0x65],ch
   1b864:	popa   
   1b865:	fs gs jb 0x1b889
   1b869:	data16 ins BYTE PTR es:[edi],dx
   1b86b:	popa   
   1b86c:	addr16 jae 0x1b88f
   1b86f:	jae    0x1b8d6
   1b871:	je     0x1b873
   1b873:	int3   
   1b874:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1b87b:	arpl   WORD PTR [eax+eiz*1+0x68],si
   1b87f:	gs popa 
   1b881:	fs gs jb 0x1b8a5
   1b885:	arpl   WORD PTR [eax+0x65],bp
   1b888:	arpl   WORD PTR [ebx+0x0],bp
   1b88b:	int3   
   1b88c:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1b893:	and    BYTE PTR [edi+0x69],dh
   1b896:	outs   dx,BYTE PTR ds:[esi]
   1b897:	outs   dx,DWORD PTR fs:[esi]
   1b899:	ja     0x1b8bb
   1b89b:	jae    0x1b906
   1b89d:	jp     0x1b904
   1b89f:	add    BYTE PTR [ebp+0x6e],dh
   1b8a2:	imul   ebp,DWORD PTR [esi+0x6f],0x77
   1b8a6:	outs   dx,BYTE PTR ds:[esi]
   1b8a7:	and    BYTE PTR [ebx+0x6f],ah
   1b8aa:	ins    DWORD PTR es:[edi],dx
   1b8ab:	jo     0x1b91f
   1b8ad:	gs jae 0x1b923
   1b8b0:	imul   ebp,DWORD PTR [edi+0x6e],0x74656d20
   1b8b7:	.byte 0x68
   1b8b8:	outs   dx,DWORD PTR ds:[esi]
   1b8b9:	fs
	...

Disassembly of section INIT:

00070d00 <INIT>:
   70d00:	add    BYTE PTR [eax],al
   70d02:	add    BYTE PTR [eax],al
   70d04:	add    BYTE PTR [ecx+0x70100],ah
   70d0a:	mov    ecx,0xbb40e64e
   70d0f:	test   eax,eax
   70d11:	je     0x70d17
   70d13:	cmp    eax,ecx
   70d15:	jne    0x70d31
   70d17:	mov    eax,ds:0x1b9c8
   70d1c:	mov    eax,DWORD PTR [eax]
   70d1e:	xor    eax,0x70100
   70d23:	mov    ds:0x70100,eax
   70d28:	jne    0x70d31
   70d2a:	mov    eax,ecx
   70d2c:	mov    ds:0x70100,eax
   70d31:	not    eax
   70d33:	mov    ds:0x70104,eax
   70d38:	ret    
   70d39:	xor    ah,BYTE PTR [ebp-0x744cc961]
   70d3f:	call   DWORD PTR [ebp-0x75]
   70d42:	in     al,dx
   70d43:	call   0x70d05
   70d48:	pop    ebp
   70d49:	jmp    0x1740e
   70d4e:	int3   
   70d4f:	int3   
   70d50:	xchg   esp,eax
   70d51:	or     eax,0x6
   70d56:	add    BYTE PTR [eax],al
   70d58:	add    BYTE PTR [eax],al
   70d5a:	add    BYTE PTR [eax],al
   70d5c:	push   esi
   70d5d:	adc    al,BYTE PTR [esi]
   70d5f:	add    BYTE PTR [eax],cl
   70d61:	mov    ecx,0xd8c0000
   70d66:	push   es
	...
   70d6f:	add    BYTE PTR [eax+0x12],bh
   70d72:	push   es
   70d73:	add    BYTE PTR [eax],al
   70d75:	mov    ecx,0x0
	...
   70d8a:	add    BYTE PTR [eax],al
   70d8c:	adc    al,BYTE PTR fs:[esi]
   70d8f:	add    BYTE PTR [eax],al
   70d91:	add    BYTE PTR [eax],al
   70d93:	add    BYTE PTR [esi-0x59fff9f2],cl
   70d99:	push   cs
   70d9a:	push   es
   70d9b:	add    BYTE PTR [eax-0x45fff9f2],dh
   70da1:	push   cs
   70da2:	push   es
   70da3:	add    dl,cl
   70da5:	push   cs
   70da6:	push   es
   70da7:	add    dl,ch
   70da9:	push   cs
   70daa:	push   es
   70dab:	add    dh,bh
   70dad:	push   cs
   70dae:	push   es
   70daf:	add    BYTE PTR [edx],bl
   70db1:	clts   
   70db3:	add    BYTE PTR [edi+ecx*1],dh
   70db6:	push   es
   70db7:	add    BYTE PTR [esi+0xf],al
   70dba:	push   es
   70dbb:	add    BYTE PTR [esi+0xf],bl
   70dbe:	push   es
   70dbf:	add    BYTE PTR [eax+0xf],dh
   70dc2:	push   es
   70dc3:	add    BYTE PTR [esi+0xf],bh
   70dc6:	push   es
   70dc7:	add    BYTE PTR [edx-0x6bfff9f1],cl
   70dcd:	clts   
   70dcf:	add    BYTE PTR [esi-0x4ffff9f1],bl
   70dd5:	clts   
   70dd7:	add    dl,al
   70dd9:	clts   
   70ddb:	add    ah,dl
   70ddd:	clts   
   70ddf:	add    dl,dh
   70de1:	clts   
   70de3:	add    BYTE PTR [edx],cl
   70de5:	adc    BYTE PTR [esi],al
   70de7:	add    BYTE PTR [esi],bl
   70de9:	adc    BYTE PTR [esi],al
   70deb:	add    BYTE PTR [eax],ch
   70ded:	adc    BYTE PTR [esi],al
   70def:	add    BYTE PTR [eax+edx*1+0x6],al
   70df3:	add    BYTE PTR [eax+edx*1+0x6],bl
   70df7:	add    BYTE PTR [eax+edx*1+0x6],ch
   70dfb:	add    BYTE PTR [esi+0x10],bh
   70dfe:	push   es
   70dff:	add    BYTE PTR [esi-0x61fff9f0],cl
   70e05:	adc    BYTE PTR [esi],al
   70e07:	add    BYTE PTR [eax+edx*1+0x10ba0006],ch
   70e0e:	push   es
   70e0f:	add    dl,cl
   70e11:	adc    BYTE PTR [esi],al
   70e13:	add    dl,ah
   70e15:	adc    BYTE PTR [esi],al
   70e17:	add    al,dh
   70e19:	adc    BYTE PTR [esi],al
   70e1b:	add    BYTE PTR [edx],cl
   70e1d:	adc    DWORD PTR [esi],eax
   70e1f:	add    BYTE PTR [edx],ch
   70e21:	adc    DWORD PTR [esi],eax
   70e23:	add    BYTE PTR [eax+0x11],al
   70e26:	push   es
   70e27:	add    BYTE PTR [eax+0x11],bl
   70e2a:	push   es
   70e2b:	add    BYTE PTR [edx+0x11],ch
   70e2e:	push   es
   70e2f:	add    BYTE PTR [esi+0x11],dh
   70e32:	push   es
   70e33:	add    BYTE PTR [eax-0x59fff9ef],dl
   70e39:	adc    DWORD PTR [esi],eax
   70e3b:	add    BYTE PTR [edx-0x3bfff9ef],bh
   70e41:	adc    DWORD PTR [esi],eax
   70e43:	add    ah,ah
   70e45:	adc    DWORD PTR [esi],eax
   70e47:	add    al,bh
   70e49:	adc    DWORD PTR [esi],eax
   70e4b:	add    BYTE PTR [eax],dl
   70e4d:	adc    al,BYTE PTR [esi]
   70e4f:	add    BYTE PTR [esi],ah
   70e51:	adc    al,BYTE PTR [esi]
   70e53:	add    BYTE PTR [eax],bh
   70e55:	adc    al,BYTE PTR [esi]
   70e57:	add    BYTE PTR [esi+0x12],al
   70e5a:	push   es
   70e5b:	add    BYTE PTR [esi+0xe],dh
   70e5e:	push   es
   70e5f:	add    BYTE PTR [esi+ecx*1+0x6],ch
   70e63:	add    BYTE PTR [eax+0x612],al
   70e69:	add    BYTE PTR [eax],al
   70e6b:	add    BYTE PTR [ebx],cl
   70e6d:	add    eax,0x6c43775a
   70e72:	outs   dx,DWORD PTR ds:[esi]
   70e73:	jae    0x70eda
   70e75:	add    BYTE PTR [eax],dh
   70e77:	add    ecx,DWORD PTR [edi+0x62]
   70e7a:	inc    sp
   70e7c:	gs jb  0x70ee4
   70e7f:	data16 gs jb 0x70ee8
   70e83:	outs   dx,BYTE PTR ds:[esi]
   70e84:	arpl   WORD PTR [ebp+0x4f],sp
   70e87:	bound  ebp,QWORD PTR [edx+0x65]
   70e8a:	arpl   WORD PTR [eax+eax*1+0x0],si
   70e8e:	sbb    eax,0x6c745204
   70e93:	dec    ecx
   70e94:	outs   dx,BYTE PTR ds:[esi]
   70e95:	imul   esi,DWORD PTR [ebp+edx*2+0x6e],0x646f6369
   70e9d:	gs push ebx
   70e9f:	je     0x70f13
   70ea1:	imul   ebp,DWORD PTR [esi+0x67],0x57b0000
   70ea8:	pop    edi
   70ea9:	popa   
   70eaa:	ins    BYTE PTR es:[edi],dx
   70eab:	ins    BYTE PTR es:[edi],dx
   70eac:	ins    DWORD PTR es:[edi],dx
   70ead:	jne    0x70f1b
   70eaf:	add    BYTE PTR [ecx+0x5],bh
   70eb2:	pop    edi
   70eb3:	popa   
   70eb4:	ins    BYTE PTR es:[edi],dx
   70eb5:	ins    BYTE PTR es:[edi],dx
   70eb6:	imul   esi,DWORD PTR fs:[esi+0x0],0x78450075
   70ebe:	push   edx
   70ebf:	popa   
   70ec0:	imul   esi,DWORD PTR [ebx+0x65],0x74617453
   70ec7:	jne    0x70f3c
   70ec9:	add    BYTE PTR [edx+0x0],al
   70ecc:	inc    ebp
   70ecd:	js     0x70f10
   70ecf:	ins    BYTE PTR es:[edi],dx
   70ed0:	ins    BYTE PTR es:[edi],dx
   70ed1:	outs   dx,DWORD PTR ds:[esi]
   70ed2:	arpl   WORD PTR [ecx+0x74],sp
   70ed5:	gs push eax
   70ed7:	outs   dx,DWORD PTR ds:[esi]
   70ed8:	outs   dx,DWORD PTR ds:[esi]
   70ed9:	ins    BYTE PTR es:[edi],dx
   70eda:	push   edi
   70edb:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0x72506761
   70ee3:	imul   ebp,DWORD PTR [edi+0x72],0x797469
   70eea:	dec    esi
   70eeb:	add    BYTE PTR [ebp+0x78],al
   70eee:	inc    esi
   70eef:	jb     0x70f56
   70ef1:	gs push eax
   70ef3:	outs   dx,DWORD PTR ds:[esi]
   70ef4:	outs   dx,DWORD PTR ds:[esi]
   70ef5:	ins    BYTE PTR es:[edi],dx
   70ef6:	push   edi
   70ef7:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0x47006761
   70eff:	add    eax,0x7551775a
   70f04:	gs jb  0x70f80
   70f07:	dec    ecx
   70f08:	outs   dx,BYTE PTR ds:[esi]
   70f09:	outs   dx,WORD PTR ds:[esi]
   70f0b:	jb     0x70f7a
   70f0d:	popa   
   70f0e:	je     0x70f79
   70f10:	outs   dx,DWORD PTR ds:[esi]
   70f11:	outs   dx,BYTE PTR ds:[esi]
   70f12:	push   eax
   70f13:	jb     0x70f84
   70f15:	arpl   WORD PTR [ebp+0x73],sp
   70f18:	jae    0x70f1a
   70f1a:	mov    ebp,0x6c745203
   70f1f:	inc    ebx
   70f20:	outs   dx,DWORD PTR ds:[esi]
   70f21:	ins    DWORD PTR es:[edi],dx
   70f22:	jo     0x70f85
   70f24:	jb     0x70f8b
   70f26:	push   ebp
   70f27:	outs   dx,BYTE PTR ds:[esi]
   70f28:	imul   esp,DWORD PTR [ebx+0x6f],0x74536564
   70f2f:	jb     0x70f9a
   70f31:	outs   dx,BYTE PTR ds:[esi]
   70f32:	add    BYTE PTR [bp+si+0x2],al
   70f36:	dec    ebx
   70f37:	gs push edx
   70f39:	gs ins BYTE PTR es:[edi],dx
   70f3b:	gs popa 
   70f3d:	jae    0x70fa4
   70f3f:	dec    ebp
   70f40:	jne    0x70fb6
   70f42:	gs js  0x70f45
   70f45:	add    BYTE PTR [ebp+0x2],ch
   70f48:	dec    ebx
   70f49:	gs push edi
   70f4b:	popa   
   70f4c:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6e695372
   70f54:	ins    BYTE PTR es:[di],dx
   70f56:	gs dec edi
   70f58:	bound  ebp,QWORD PTR [edx+0x65]
   70f5b:	arpl   WORD PTR [eax+eax*1+0x1f],si
   70f5f:	add    eax,0x6e45775a
   70f64:	jne    0x70fd3
   70f66:	gs jb  0x70fca
   70f69:	je     0x70fd0
   70f6b:	dec    ebx
   70f6c:	gs jns 0x70f6f
   70f6f:	add    BYTE PTR [eax],bl
   70f71:	add    eax,0x6544775a
   70f76:	ins    BYTE PTR es:[edi],dx
   70f77:	gs je  0x70fdf
   70f7a:	dec    ebx
   70f7b:	gs jns 0x70f7e
   70f7e:	xor    DWORD PTR ds:0x704f775a,eax
   70f84:	outs   dx,BYTE PTR gs:[esi]
   70f86:	dec    ebx
   70f87:	gs jns 0x70f8a
   70f8a:	mov    DWORD PTR ds:0x6e736377,0x746163
   70f94:	test   eax,0x6d656d05
   70f99:	jae    0x71000
   70f9b:	je     0x70f9d
   70f9d:	add    BYTE PTR [edi+0x1],cl
   70fa0:	dec    ecx
   70fa1:	outs   dx,DWORD PTR ds:[esi]
   70fa2:	inc    esp
   70fa3:	gs ins BYTE PTR es:[edi],dx
   70fa5:	gs je  0x7100d
   70fa8:	inc    esp
   70fa9:	gs jbe 0x71015
   70fac:	arpl   WORD PTR [ebp+0x0],sp
   70faf:	add    bh,bh
   70fb1:	add    DWORD PTR [ebx+0x65],ecx
   70fb4:	inc    esp
   70fb5:	gs je  0x71019
   70fb8:	arpl   WORD PTR [eax+0x50],bp
   70fbb:	jb     0x7102c
   70fbd:	arpl   WORD PTR [ebp+0x73],sp
   70fc0:	jae    0x70fc2
   70fc2:	hlt    
   70fc3:	add    DWORD PTR [ebx+0x65],ecx
   70fc6:	inc    ecx
   70fc7:	je     0x7103d
   70fc9:	popa   
   70fca:	arpl   WORD PTR [eax+0x50],bp
   70fcd:	jb     0x7103e
   70fcf:	arpl   WORD PTR [ebp+0x73],sp
   70fd2:	jae    0x70fd4
   70fd4:	jge    0x70fd9
   70fd6:	push   eax
   70fd7:	jae    0x71025
   70fd9:	outs   dx,DWORD PTR ds:[esi]
   70fda:	outs   dx,DWORD PTR ds:[esi]
   70fdb:	imul   esi,DWORD PTR [ebp+0x70],0x50
   70fdf:	jb     0x71050
   70fe1:	arpl   WORD PTR [ebp+0x73],sp
   70fe4:	jae    0x71028
   70fe6:	jns    0x71038
   70fe8:	jb     0x71059
   70fea:	arpl   WORD PTR [ebp+0x73],sp
   70fed:	jae    0x71038
   70fef:	add    BYTE PTR fs:[eax],al
   70ff2:	inc    ecx
   70ff3:	add    BYTE PTR [ebp+0x78],al
   70ff6:	inc    ecx
   70ff7:	ins    BYTE PTR es:[edi],dx
   70ff8:	ins    BYTE PTR es:[edi],dx
   70ff9:	outs   dx,DWORD PTR ds:[esi]
   70ffa:	arpl   WORD PTR [ecx+0x74],sp
   70ffd:	gs push eax
   70fff:	outs   dx,DWORD PTR ds:[esi]
   71000:	outs   dx,DWORD PTR ds:[esi]
   71001:	ins    BYTE PTR es:[edi],dx
   71002:	push   edi
   71003:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0x1b006761
   7100b:	add    cl,BYTE PTR [ebx+0x65]
   7100e:	dec    ecx
   7100f:	outs   dx,BYTE PTR ds:[esi]
   71010:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
   71018:	dec    ebp
   71019:	jne    0x7108f
   7101b:	gs js  0x7101e
   7101e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   7101f:	add    eax,0x636d656d
   71024:	jo     0x7109f
   71026:	add    BYTE PTR [eax],al
   71028:	mov    eax,ds:0x476d4d02
   7102d:	gs je  0x71083
   71030:	jns    0x710a5
   71032:	je     0x71099
   71034:	ins    DWORD PTR es:[edi],dx
   71035:	push   edx
   71036:	outs   dx,DWORD PTR ds:[esi]
   71037:	jne    0x710ad
   71039:	imul   ebp,DWORD PTR [esi+0x65],0x72646441
   71040:	gs jae 0x710b6
   71043:	add    bh,al
   71045:	add    edx,DWORD PTR [edx+0x74]
   71048:	ins    BYTE PTR es:[edi],dx
   71049:	inc    ebx
   7104a:	outs   dx,DWORD PTR ds:[esi]
   7104b:	jo     0x710c6
   7104d:	push   ebp
   7104e:	outs   dx,BYTE PTR ds:[esi]
   7104f:	imul   esp,DWORD PTR [ebx+0x6f],0x74536564
   71056:	jb     0x710c1
   71058:	outs   dx,BYTE PTR ds:[esi]
   71059:	add    BYTE PTR [bx+si],al
   7105c:	xor    al,BYTE PTR ds:0x704f775a
   71062:	outs   dx,BYTE PTR gs:[esi]
   71064:	push   eax
   71065:	jb     0x710d6
   71067:	arpl   WORD PTR [ebp+0x73],sp
   7106a:	jae    0x7106c
   7106c:	push   ecx
   7106d:	add    eax,0x7551775a
   71072:	gs jb  0x710ee
   71075:	push   esi
   71076:	popa   
   71077:	ins    BYTE PTR es:[edi],dx
   71078:	jne    0x710df
   7107a:	dec    ebx
   7107b:	gs jns 0x7107e
   7107e:	imul   eax,DWORD PTR ds:0x6553775a,0x6c615674
   71088:	jne    0x710ef
   7108a:	dec    ebx
   7108b:	gs jns 0x7108e
   7108e:	sub    BYTE PTR ds:0x6f4c775a,al
   71094:	popa   
   71095:	fs inc esp
   71097:	jb     0x71102
   71099:	jbe    0x71100
   7109b:	jb     0x7109d
   7109d:	add    BYTE PTR [edx],dl
   7109f:	add    eax,0x7243775a
   710a4:	gs popa 
   710a6:	je     0x7110d
   710a8:	dec    ebx
   710a9:	gs jns 0x710ac
   710ac:	push   ebx
   710ad:	add    eax,0x6552775a
   710b2:	popa   
   710b3:	fs inc esi
   710b5:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x5a051000
   710bd:	ja     0x71102
   710bf:	jb     0x71126
   710c1:	popa   
   710c2:	je     0x71129
   710c4:	inc    esi
   710c5:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x5a056000
   710cd:	ja     0x71122
   710cf:	gs je  0x7111b
   710d2:	outs   dx,BYTE PTR ds:[esi]
   710d3:	outs   dx,WORD PTR ds:[esi]
   710d5:	jb     0x71144
   710d7:	popa   
   710d8:	je     0x71143
   710da:	outs   dx,DWORD PTR ds:[esi]
   710db:	outs   dx,BYTE PTR ds:[esi]
   710dc:	inc    esi
   710dd:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x5a057300
   710e5:	ja     0x7113e
   710e7:	jb     0x71152
   710e9:	je     0x71150
   710eb:	inc    esi
   710ec:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x775a0545
   710f4:	push   ecx
   710f5:	jne    0x7115c
   710f7:	jb     0x71172
   710f9:	dec    ecx
   710fa:	outs   dx,BYTE PTR ds:[esi]
   710fb:	outs   dx,WORD PTR ds:[esi]
   710fd:	jb     0x7116c
   710ff:	popa   
   71100:	je     0x7116b
   71102:	outs   dx,DWORD PTR ds:[esi]
   71103:	outs   dx,BYTE PTR ds:[esi]
   71104:	inc    esi
   71105:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x5a055200
   7110d:	ja     0x71160
   7110f:	jne    0x71176
   71111:	jb     0x7118c
   71113:	push   esi
   71114:	outs   dx,DWORD PTR ds:[esi]
   71115:	ins    BYTE PTR es:[edi],dx
   71116:	jne    0x71185
   71118:	gs dec ecx
   7111a:	outs   dx,BYTE PTR ds:[esi]
   7111b:	outs   dx,WORD PTR ds:[esi]
   7111d:	jb     0x7118c
   7111f:	popa   
   71120:	je     0x7118b
   71122:	outs   dx,DWORD PTR ds:[esi]
   71123:	outs   dx,BYTE PTR ds:[esi]
   71124:	inc    esi
   71125:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x4901e300
   7112d:	outs   dx,DWORD PTR ds:[esi]
   7112e:	inc    bx
   71130:	outs   dx,DWORD PTR ds:[esi]
   71131:	ins    DWORD PTR es:[edi],dx
   71132:	jo     0x711a0
   71134:	gs je  0x7119c
   71137:	push   edx
   71138:	gs jno 0x711b0
   7113b:	gs jae 0x711b2
   7113e:	add    BYTE PTR [eax],al
   71140:	inc    edi
   71141:	add    DWORD PTR [ecx+0x6f],ecx
   71144:	inc    ebx
   71145:	jb     0x711ac
   71147:	popa   
   71148:	je     0x711af
   7114a:	push   ebx
   7114b:	jns    0x711ba
   7114d:	bound  ebp,QWORD PTR [edi+0x6c]
   71150:	imul   esp,DWORD PTR [ebx+0x4c],0x6b6e69
   71157:	add    BYTE PTR [esi],bh
   71159:	add    DWORD PTR [ecx+0x6f],ecx
   7115c:	inc    ebx
   7115d:	jb     0x711c4
   7115f:	popa   
   71160:	je     0x711c7
   71162:	inc    esp
   71163:	gs jbe 0x711cf
   71166:	arpl   WORD PTR [ebp+0x0],sp
   71169:	add    BYTE PTR [ecx+0x70777305],bh
   7116f:	jb     0x711da
   71171:	outs   dx,BYTE PTR ds:[esi]
   71172:	je     0x711da
   71174:	add    BYTE PTR [eax],al
   71176:	mov    DWORD PTR [ebx+edx*2],0x65724365
   7117d:	popa   
   7117e:	je     0x711e5
   71180:	inc    ebx
   71181:	ins    BYTE PTR es:[edi],dx
   71182:	imul   esp,DWORD PTR [ebp+0x6e],0x63655374
   71189:	jne    0x711fd
   7118b:	imul   esi,DWORD PTR [ecx+edi*2+0x0],0x4b020700
   71193:	gs inc edi
   71195:	gs je  0x711db
   71198:	jne    0x7120c
   7119a:	jb     0x71201
   7119c:	outs   dx,BYTE PTR ds:[esi]
   7119d:	je     0x711f3
   7119f:	push   0x64616572
   711a4:	add    BYTE PTR [eax],al
   711a6:	xor    eax,DWORD PTR [edx]
   711a8:	dec    ebx
   711a9:	gs push ecx
   711ab:	jne    0x71212
   711ad:	jb     0x71228
   711af:	push   ebx
   711b0:	jns    0x71225
   711b2:	je     0x71219
   711b4:	ins    DWORD PTR es:[edi],dx
   711b5:	push   esp
   711b6:	imul   ebp,DWORD PTR [ebp+0x65],0x7305ac00
   711bd:	jo     0x71231
   711bf:	imul   ebp,DWORD PTR [esi+0x74],0x4180066
   711c6:	push   edx
   711c7:	je     0x71235
   711c9:	dec    ecx
   711ca:	ins    DWORD PTR es:[edi],dx
   711cb:	popa   
   711cc:	addr16 gs inc esp
   711cf:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
   711d6:	jns    0x7121d
   711d8:	outs   dx,BYTE PTR ds:[esi]
   711d9:	je     0x7124d
   711db:	jns    0x71231
   711dd:	outs   dx,DWORD PTR ds:[esi]
   711de:	inc    esp
   711df:	popa   
   711e0:	je     0x71243
   711e2:	add    BYTE PTR [eax],al
   711e4:	sbb    DWORD PTR [edx+edx*2],eax
   711e7:	je     0x71255
   711e9:	dec    ecx
   711ea:	ins    DWORD PTR es:[edi],dx
   711eb:	popa   
   711ec:	addr16 gs dec esi
   711ef:	je     0x71239
   711f1:	gs popa 
   711f3:	fs gs jb 0x711f7
   711f7:	add    BYTE PTR [eax+0x5],dh
   711fa:	pop    edx
   711fb:	ja     0x71252
   711fd:	outs   dx,BYTE PTR ds:[esi]
   711fe:	ins    DWORD PTR es:[edi],dx
   711ff:	popa   
   71200:	jo     0x71258
   71202:	imul   esp,DWORD PTR [ebp+0x77],0x6553664f
   71209:	arpl   WORD PTR [ecx+ebp*2+0x6f],si
   7120d:	outs   dx,BYTE PTR ds:[esi]
   7120e:	add    BYTE PTR [eax],al
   71210:	sub    eax,DWORD PTR ds:0x614d775a
   71216:	jo     0x7126e
   71218:	imul   esp,DWORD PTR [ebp+0x77],0x6553664f
   7121f:	arpl   WORD PTR [ecx+ebp*2+0x6f],si
   71223:	outs   dx,BYTE PTR ds:[esi]
   71224:	add    BYTE PTR [eax],al
   71226:	adc    eax,DWORD PTR ds:0x7243775a
   7122c:	gs popa 
   7122e:	je     0x71295
   71230:	push   ebx
   71231:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
   71236:	outs   dx,BYTE PTR ds:[esi]
   71237:	add    BYTE PTR [esi+0x2],ah
   7123a:	dec    ebx
   7123b:	gs push esp
   7123d:	imul   esp,DWORD PTR [ebx+0x6b],0x6e756f43
   71244:	je     0x71246
   71246:	test   BYTE PTR [ecx],0x4b
   71249:	gs inc edx
   7124b:	jne    0x712b4
   7124d:	inc    ebx
   7124e:	push   0x456b6365
   71253:	js     0x71255
   71255:	add    BYTE PTR [esi+0x74],ch
   71258:	outs   dx,DWORD PTR ds:[esi]
   71259:	jae    0x712c6
   7125b:	jb     0x712cb
   7125d:	ins    BYTE PTR es:[edi],dx
   7125e:	cs gs js 0x712c7
   71262:	add    BYTE PTR [eax],al
   71264:	inc    eax
   71265:	add    BYTE PTR [ebx+0x65],cl
   71268:	inc    edi
   71269:	gs je  0x712af
   7126c:	jne    0x712e0
   7126e:	jb     0x712d5
   71270:	outs   dx,BYTE PTR ds:[esi]
   71271:	je     0x712bc
   71273:	jb     0x712e6
   71275:	ins    BYTE PTR es:[edi],dx
   71276:	add    BYTE PTR [eax],al
   71278:	dec    eax
   71279:	inc    ecx
   7127a:	dec    esp
   7127b:	cs fs ins BYTE PTR es:[edi],dx
   7127e:	ins    BYTE PTR es:[edi],dx
   7127f:	add    BYTE PTR [eax+0x6c745204],ah
   71285:	push   ebp
   71286:	outs   dx,BYTE PTR ds:[esi]
   71287:	ja     0x712f2
   71289:	outs   dx,BYTE PTR ds:[esi]
   7128a:	fs
	...
